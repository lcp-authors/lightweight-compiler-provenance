
../repos/coreutils/src/chgrp:     file format elf32-littlearm


Disassembly of section .init:

0001118c <.init>:
   1118c:	push	{r3, lr}
   11190:	bl	11524 <__assert_fail@plt+0x48>
   11194:	pop	{r3, pc}

Disassembly of section .plt:

00011198 <fstatfs64@plt-0x14>:
   11198:	push	{lr}		; (str lr, [sp, #-4]!)
   1119c:	ldr	lr, [pc, #4]	; 111a8 <fstatfs64@plt-0x4>
   111a0:	add	lr, pc, lr
   111a4:	ldr	pc, [lr, #8]!
   111a8:	andeq	r4, r2, r8, asr lr

000111ac <fstatfs64@plt>:
   111ac:	add	ip, pc, #0, 12
   111b0:	add	ip, ip, #36, 20	; 0x24000
   111b4:	ldr	pc, [ip, #3672]!	; 0xe58

000111b8 <calloc@plt>:
   111b8:	add	ip, pc, #0, 12
   111bc:	add	ip, ip, #36, 20	; 0x24000
   111c0:	ldr	pc, [ip, #3664]!	; 0xe50

000111c4 <endgrent@plt>:
   111c4:	add	ip, pc, #0, 12
   111c8:	add	ip, ip, #36, 20	; 0x24000
   111cc:	ldr	pc, [ip, #3656]!	; 0xe48

000111d0 <fputs_unlocked@plt>:
   111d0:	add	ip, pc, #0, 12
   111d4:	add	ip, ip, #36, 20	; 0x24000
   111d8:	ldr	pc, [ip, #3648]!	; 0xe40

000111dc <raise@plt>:
   111dc:	add	ip, pc, #0, 12
   111e0:	add	ip, ip, #36, 20	; 0x24000
   111e4:	ldr	pc, [ip, #3640]!	; 0xe38

000111e8 <strcmp@plt>:
   111e8:	add	ip, pc, #0, 12
   111ec:	add	ip, ip, #36, 20	; 0x24000
   111f0:	ldr	pc, [ip, #3632]!	; 0xe30

000111f4 <getpwuid@plt>:
   111f4:	add	ip, pc, #0, 12
   111f8:	add	ip, ip, #36, 20	; 0x24000
   111fc:	ldr	pc, [ip, #3624]!	; 0xe28

00011200 <printf@plt>:
   11200:	add	ip, pc, #0, 12
   11204:	add	ip, ip, #36, 20	; 0x24000
   11208:	ldr	pc, [ip, #3616]!	; 0xe20

0001120c <fflush@plt>:
   1120c:	add	ip, pc, #0, 12
   11210:	add	ip, ip, #36, 20	; 0x24000
   11214:	ldr	pc, [ip, #3608]!	; 0xe18

00011218 <memmove@plt>:
   11218:	add	ip, pc, #0, 12
   1121c:	add	ip, ip, #36, 20	; 0x24000
   11220:	ldr	pc, [ip, #3600]!	; 0xe10

00011224 <free@plt>:
   11224:	add	ip, pc, #0, 12
   11228:	add	ip, ip, #36, 20	; 0x24000
   1122c:	ldr	pc, [ip, #3592]!	; 0xe08

00011230 <_exit@plt>:
   11230:	add	ip, pc, #0, 12
   11234:	add	ip, ip, #36, 20	; 0x24000
   11238:	ldr	pc, [ip, #3584]!	; 0xe00

0001123c <memcpy@plt>:
   1123c:	add	ip, pc, #0, 12
   11240:	add	ip, ip, #36, 20	; 0x24000
   11244:	ldr	pc, [ip, #3576]!	; 0xdf8

00011248 <mbsinit@plt>:
   11248:	add	ip, pc, #0, 12
   1124c:	add	ip, ip, #36, 20	; 0x24000
   11250:	ldr	pc, [ip, #3568]!	; 0xdf0

00011254 <memcmp@plt>:
   11254:	add	ip, pc, #0, 12
   11258:	add	ip, ip, #36, 20	; 0x24000
   1125c:	ldr	pc, [ip, #3560]!	; 0xde8

00011260 <stpcpy@plt>:
   11260:	add	ip, pc, #0, 12
   11264:	add	ip, ip, #36, 20	; 0x24000
   11268:	ldr	pc, [ip, #3552]!	; 0xde0

0001126c <realloc@plt>:
   1126c:	add	ip, pc, #0, 12
   11270:	add	ip, ip, #36, 20	; 0x24000
   11274:	ldr	pc, [ip, #3544]!	; 0xdd8

00011278 <textdomain@plt>:
   11278:	add	ip, pc, #0, 12
   1127c:	add	ip, ip, #36, 20	; 0x24000
   11280:	ldr	pc, [ip, #3536]!	; 0xdd0

00011284 <__fxstatat64@plt>:
   11284:	add	ip, pc, #0, 12
   11288:	add	ip, ip, #36, 20	; 0x24000
   1128c:	ldr	pc, [ip, #3528]!	; 0xdc8

00011290 <iswprint@plt>:
   11290:	add	ip, pc, #0, 12
   11294:	add	ip, ip, #36, 20	; 0x24000
   11298:	ldr	pc, [ip, #3520]!	; 0xdc0

0001129c <__fxstat64@plt>:
   1129c:	add	ip, pc, #0, 12
   112a0:	add	ip, ip, #36, 20	; 0x24000
   112a4:	ldr	pc, [ip, #3512]!	; 0xdb8

000112a8 <lseek64@plt>:
   112a8:	add	ip, pc, #0, 12
   112ac:	add	ip, ip, #36, 20	; 0x24000
   112b0:	ldr	pc, [ip, #3504]!	; 0xdb0

000112b4 <__ctype_get_mb_cur_max@plt>:
   112b4:	add	ip, pc, #0, 12
   112b8:	add	ip, ip, #36, 20	; 0x24000
   112bc:	ldr	pc, [ip, #3496]!	; 0xda8

000112c0 <__fpending@plt>:
   112c0:	add	ip, pc, #0, 12
   112c4:	add	ip, ip, #36, 20	; 0x24000
   112c8:	ldr	pc, [ip, #3488]!	; 0xda0

000112cc <ferror_unlocked@plt>:
   112cc:	add	ip, pc, #0, 12
   112d0:	add	ip, ip, #36, 20	; 0x24000
   112d4:	ldr	pc, [ip, #3480]!	; 0xd98

000112d8 <mbrtowc@plt>:
   112d8:	add	ip, pc, #0, 12
   112dc:	add	ip, ip, #36, 20	; 0x24000
   112e0:	ldr	pc, [ip, #3472]!	; 0xd90

000112e4 <error@plt>:
   112e4:	add	ip, pc, #0, 12
   112e8:	add	ip, ip, #36, 20	; 0x24000
   112ec:	ldr	pc, [ip, #3464]!	; 0xd88

000112f0 <open64@plt>:
   112f0:	add	ip, pc, #0, 12
   112f4:	add	ip, ip, #36, 20	; 0x24000
   112f8:	ldr	pc, [ip, #3456]!	; 0xd80

000112fc <malloc@plt>:
   112fc:	add	ip, pc, #0, 12
   11300:	add	ip, ip, #36, 20	; 0x24000
   11304:	ldr	pc, [ip, #3448]!	; 0xd78

00011308 <__libc_start_main@plt>:
   11308:	add	ip, pc, #0, 12
   1130c:	add	ip, ip, #36, 20	; 0x24000
   11310:	ldr	pc, [ip, #3440]!	; 0xd70

00011314 <__freading@plt>:
   11314:	add	ip, pc, #0, 12
   11318:	add	ip, ip, #36, 20	; 0x24000
   1131c:	ldr	pc, [ip, #3432]!	; 0xd68

00011320 <__gmon_start__@plt>:
   11320:	add	ip, pc, #0, 12
   11324:	add	ip, ip, #36, 20	; 0x24000
   11328:	ldr	pc, [ip, #3424]!	; 0xd60

0001132c <getopt_long@plt>:
   1132c:	add	ip, pc, #0, 12
   11330:	add	ip, ip, #36, 20	; 0x24000
   11334:	ldr	pc, [ip, #3416]!	; 0xd58

00011338 <__ctype_b_loc@plt>:
   11338:	add	ip, pc, #0, 12
   1133c:	add	ip, ip, #36, 20	; 0x24000
   11340:	ldr	pc, [ip, #3408]!	; 0xd50

00011344 <exit@plt>:
   11344:	add	ip, pc, #0, 12
   11348:	add	ip, ip, #36, 20	; 0x24000
   1134c:	ldr	pc, [ip, #3400]!	; 0xd48

00011350 <gettext@plt>:
   11350:	add	ip, pc, #0, 12
   11354:	add	ip, ip, #36, 20	; 0x24000
   11358:	ldr	pc, [ip, #3392]!	; 0xd40

0001135c <strlen@plt>:
   1135c:	add	ip, pc, #0, 12
   11360:	add	ip, ip, #36, 20	; 0x24000
   11364:	ldr	pc, [ip, #3384]!	; 0xd38

00011368 <strchr@plt>:
   11368:	add	ip, pc, #0, 12
   1136c:	add	ip, ip, #36, 20	; 0x24000
   11370:	ldr	pc, [ip, #3376]!	; 0xd30

00011374 <openat64@plt>:
   11374:	add	ip, pc, #0, 12
   11378:	add	ip, ip, #36, 20	; 0x24000
   1137c:	ldr	pc, [ip, #3368]!	; 0xd28

00011380 <fchown@plt>:
   11380:	add	ip, pc, #0, 12
   11384:	add	ip, ip, #36, 20	; 0x24000
   11388:	ldr	pc, [ip, #3360]!	; 0xd20

0001138c <fprintf@plt>:
   1138c:	add	ip, pc, #0, 12
   11390:	add	ip, ip, #36, 20	; 0x24000
   11394:	ldr	pc, [ip, #3352]!	; 0xd18

00011398 <__errno_location@plt>:
   11398:	add	ip, pc, #0, 12
   1139c:	add	ip, ip, #36, 20	; 0x24000
   113a0:	ldr	pc, [ip, #3344]!	; 0xd10

000113a4 <__cxa_atexit@plt>:
   113a4:	add	ip, pc, #0, 12
   113a8:	add	ip, ip, #36, 20	; 0x24000
   113ac:	ldr	pc, [ip, #3336]!	; 0xd08

000113b0 <memset@plt>:
   113b0:	add	ip, pc, #0, 12
   113b4:	add	ip, ip, #36, 20	; 0x24000
   113b8:	ldr	pc, [ip, #3328]!	; 0xd00

000113bc <fileno@plt>:
   113bc:	add	ip, pc, #0, 12
   113c0:	add	ip, ip, #36, 20	; 0x24000
   113c4:	ldr	pc, [ip, #3320]!	; 0xcf8

000113c8 <strtoumax@plt>:
   113c8:	add	ip, pc, #0, 12
   113cc:	add	ip, ip, #36, 20	; 0x24000
   113d0:	ldr	pc, [ip, #3312]!	; 0xcf0

000113d4 <fclose@plt>:
   113d4:	add	ip, pc, #0, 12
   113d8:	add	ip, ip, #36, 20	; 0x24000
   113dc:	ldr	pc, [ip, #3304]!	; 0xce8

000113e0 <fseeko64@plt>:
   113e0:	add	ip, pc, #0, 12
   113e4:	add	ip, ip, #36, 20	; 0x24000
   113e8:	ldr	pc, [ip, #3296]!	; 0xce0

000113ec <fcntl64@plt>:
   113ec:	add	ip, pc, #0, 12
   113f0:	add	ip, ip, #36, 20	; 0x24000
   113f4:	ldr	pc, [ip, #3288]!	; 0xcd8

000113f8 <setlocale@plt>:
   113f8:	add	ip, pc, #0, 12
   113fc:	add	ip, ip, #36, 20	; 0x24000
   11400:	ldr	pc, [ip, #3280]!	; 0xcd0

00011404 <strrchr@plt>:
   11404:	add	ip, pc, #0, 12
   11408:	add	ip, ip, #36, 20	; 0x24000
   1140c:	ldr	pc, [ip, #3272]!	; 0xcc8

00011410 <nl_langinfo@plt>:
   11410:	add	ip, pc, #0, 12
   11414:	add	ip, ip, #36, 20	; 0x24000
   11418:	ldr	pc, [ip, #3264]!	; 0xcc0

0001141c <readdir64@plt>:
   1141c:	add	ip, pc, #0, 12
   11420:	add	ip, ip, #36, 20	; 0x24000
   11424:	ldr	pc, [ip, #3256]!	; 0xcb8

00011428 <fdopendir@plt>:
   11428:	add	ip, pc, #0, 12
   1142c:	add	ip, ip, #36, 20	; 0x24000
   11430:	ldr	pc, [ip, #3248]!	; 0xcb0

00011434 <dirfd@plt>:
   11434:	add	ip, pc, #0, 12
   11438:	add	ip, ip, #36, 20	; 0x24000
   1143c:	ldr	pc, [ip, #3240]!	; 0xca8

00011440 <fchdir@plt>:
   11440:	add	ip, pc, #0, 12
   11444:	add	ip, ip, #36, 20	; 0x24000
   11448:	ldr	pc, [ip, #3232]!	; 0xca0

0001144c <qsort@plt>:
   1144c:	add	ip, pc, #0, 12
   11450:	add	ip, ip, #36, 20	; 0x24000
   11454:	ldr	pc, [ip, #3224]!	; 0xc98

00011458 <fchownat@plt>:
   11458:	add	ip, pc, #0, 12
   1145c:	add	ip, ip, #36, 20	; 0x24000
   11460:	ldr	pc, [ip, #3216]!	; 0xc90

00011464 <bindtextdomain@plt>:
   11464:	add	ip, pc, #0, 12
   11468:	add	ip, ip, #36, 20	; 0x24000
   1146c:	ldr	pc, [ip, #3208]!	; 0xc88

00011470 <__xstat64@plt>:
   11470:	add	ip, pc, #0, 12
   11474:	add	ip, ip, #36, 20	; 0x24000
   11478:	ldr	pc, [ip, #3200]!	; 0xc80

0001147c <fputs@plt>:
   1147c:	add	ip, pc, #0, 12
   11480:	add	ip, ip, #36, 20	; 0x24000
   11484:	ldr	pc, [ip, #3192]!	; 0xc78

00011488 <strncmp@plt>:
   11488:	add	ip, pc, #0, 12
   1148c:	add	ip, ip, #36, 20	; 0x24000
   11490:	ldr	pc, [ip, #3184]!	; 0xc70

00011494 <abort@plt>:
   11494:	add	ip, pc, #0, 12
   11498:	add	ip, ip, #36, 20	; 0x24000
   1149c:	ldr	pc, [ip, #3176]!	; 0xc68

000114a0 <close@plt>:
   114a0:	add	ip, pc, #0, 12
   114a4:	add	ip, ip, #36, 20	; 0x24000
   114a8:	ldr	pc, [ip, #3168]!	; 0xc60

000114ac <__lxstat64@plt>:
   114ac:	add	ip, pc, #0, 12
   114b0:	add	ip, ip, #36, 20	; 0x24000
   114b4:	ldr	pc, [ip, #3160]!	; 0xc58

000114b8 <closedir@plt>:
   114b8:	add	ip, pc, #0, 12
   114bc:	add	ip, ip, #36, 20	; 0x24000
   114c0:	ldr	pc, [ip, #3152]!	; 0xc50

000114c4 <getgrgid@plt>:
   114c4:	add	ip, pc, #0, 12
   114c8:	add	ip, ip, #36, 20	; 0x24000
   114cc:	ldr	pc, [ip, #3144]!	; 0xc48

000114d0 <getgrnam@plt>:
   114d0:	add	ip, pc, #0, 12
   114d4:	add	ip, ip, #36, 20	; 0x24000
   114d8:	ldr	pc, [ip, #3136]!	; 0xc40

000114dc <__assert_fail@plt>:
   114dc:	add	ip, pc, #0, 12
   114e0:	add	ip, ip, #36, 20	; 0x24000
   114e4:	ldr	pc, [ip, #3128]!	; 0xc38

Disassembly of section .text:

000114e8 <.text>:
   114e8:	mov	fp, #0
   114ec:	mov	lr, #0
   114f0:	pop	{r1}		; (ldr r1, [sp], #4)
   114f4:	mov	r2, sp
   114f8:	push	{r2}		; (str r2, [sp, #-4]!)
   114fc:	push	{r0}		; (str r0, [sp, #-4]!)
   11500:	ldr	ip, [pc, #16]	; 11518 <__assert_fail@plt+0x3c>
   11504:	push	{ip}		; (str ip, [sp, #-4]!)
   11508:	ldr	r0, [pc, #12]	; 1151c <__assert_fail@plt+0x40>
   1150c:	ldr	r3, [pc, #12]	; 11520 <__assert_fail@plt+0x44>
   11510:	bl	11308 <__libc_start_main@plt>
   11514:	bl	11494 <abort@plt>
   11518:	andeq	r4, r2, r0, lsl r3
   1151c:	andeq	r1, r1, ip, asr #19
   11520:			; <UNDEFINED> instruction: 0x000242b0
   11524:	ldr	r3, [pc, #20]	; 11540 <__assert_fail@plt+0x64>
   11528:	ldr	r2, [pc, #20]	; 11544 <__assert_fail@plt+0x68>
   1152c:	add	r3, pc, r3
   11530:	ldr	r2, [r3, r2]
   11534:	cmp	r2, #0
   11538:	bxeq	lr
   1153c:	b	11320 <__gmon_start__@plt>
   11540:	andeq	r4, r2, ip, asr #21
   11544:	andeq	r0, r0, r0, lsr #2
   11548:	ldr	r0, [pc, #24]	; 11568 <__assert_fail@plt+0x8c>
   1154c:	ldr	r3, [pc, #24]	; 1156c <__assert_fail@plt+0x90>
   11550:	cmp	r3, r0
   11554:	bxeq	lr
   11558:	ldr	r3, [pc, #16]	; 11570 <__assert_fail@plt+0x94>
   1155c:	cmp	r3, #0
   11560:	bxeq	lr
   11564:	bx	r3
   11568:	andeq	r6, r3, r4, ror r1
   1156c:	andeq	r6, r3, r4, ror r1
   11570:	andeq	r0, r0, r0
   11574:	ldr	r0, [pc, #36]	; 115a0 <__assert_fail@plt+0xc4>
   11578:	ldr	r1, [pc, #36]	; 115a4 <__assert_fail@plt+0xc8>
   1157c:	sub	r1, r1, r0
   11580:	asr	r1, r1, #2
   11584:	add	r1, r1, r1, lsr #31
   11588:	asrs	r1, r1, #1
   1158c:	bxeq	lr
   11590:	ldr	r3, [pc, #16]	; 115a8 <__assert_fail@plt+0xcc>
   11594:	cmp	r3, #0
   11598:	bxeq	lr
   1159c:	bx	r3
   115a0:	andeq	r6, r3, r4, ror r1
   115a4:	andeq	r6, r3, r4, ror r1
   115a8:	andeq	r0, r0, r0
   115ac:	push	{r4, lr}
   115b0:	ldr	r4, [pc, #24]	; 115d0 <__assert_fail@plt+0xf4>
   115b4:	ldrb	r3, [r4]
   115b8:	cmp	r3, #0
   115bc:	popne	{r4, pc}
   115c0:	bl	11548 <__assert_fail@plt+0x6c>
   115c4:	mov	r3, #1
   115c8:	strb	r3, [r4]
   115cc:	pop	{r4, pc}
   115d0:	muleq	r3, r4, r1
   115d4:	b	11574 <__assert_fail@plt+0x98>
   115d8:	push	{fp, lr}
   115dc:	mov	fp, sp
   115e0:	sub	sp, sp, #72	; 0x48
   115e4:	str	r0, [fp, #-4]
   115e8:	ldr	r0, [fp, #-4]
   115ec:	cmp	r0, #0
   115f0:	beq	1163c <__assert_fail@plt+0x160>
   115f4:	b	115f8 <__assert_fail@plt+0x11c>
   115f8:	movw	r0, #24968	; 0x6188
   115fc:	movt	r0, #3
   11600:	ldr	r0, [r0]
   11604:	movw	r1, #17296	; 0x4390
   11608:	movt	r1, #2
   1160c:	str	r0, [fp, #-8]
   11610:	mov	r0, r1
   11614:	bl	11350 <gettext@plt>
   11618:	movw	r1, #25016	; 0x61b8
   1161c:	movt	r1, #3
   11620:	ldr	r2, [r1]
   11624:	ldr	r1, [fp, #-8]
   11628:	str	r0, [fp, #-12]
   1162c:	mov	r0, r1
   11630:	ldr	r1, [fp, #-12]
   11634:	bl	1138c <fprintf@plt>
   11638:	b	11818 <__assert_fail@plt+0x33c>
   1163c:	movw	r0, #17335	; 0x43b7
   11640:	movt	r0, #2
   11644:	bl	11350 <gettext@plt>
   11648:	movw	r1, #25016	; 0x61b8
   1164c:	movt	r1, #3
   11650:	ldr	r2, [r1]
   11654:	ldr	r1, [r1]
   11658:	str	r1, [fp, #-16]
   1165c:	mov	r1, r2
   11660:	ldr	r2, [fp, #-16]
   11664:	bl	11200 <printf@plt>
   11668:	movw	r1, #17420	; 0x440c
   1166c:	movt	r1, #2
   11670:	str	r0, [fp, #-20]	; 0xffffffec
   11674:	mov	r0, r1
   11678:	bl	11350 <gettext@plt>
   1167c:	movw	r1, #24972	; 0x618c
   11680:	movt	r1, #3
   11684:	ldr	r1, [r1]
   11688:	bl	111d0 <fputs_unlocked@plt>
   1168c:	movw	r1, #17528	; 0x4478
   11690:	movt	r1, #2
   11694:	str	r0, [fp, #-24]	; 0xffffffe8
   11698:	mov	r0, r1
   1169c:	bl	11350 <gettext@plt>
   116a0:	movw	r1, #24972	; 0x618c
   116a4:	movt	r1, #3
   116a8:	ldr	r1, [r1]
   116ac:	bl	111d0 <fputs_unlocked@plt>
   116b0:	movw	r1, #17729	; 0x4541
   116b4:	movt	r1, #2
   116b8:	str	r0, [fp, #-28]	; 0xffffffe4
   116bc:	mov	r0, r1
   116c0:	bl	11350 <gettext@plt>
   116c4:	movw	r1, #24972	; 0x618c
   116c8:	movt	r1, #3
   116cc:	ldr	r1, [r1]
   116d0:	bl	111d0 <fputs_unlocked@plt>
   116d4:	movw	r1, #17960	; 0x4628
   116d8:	movt	r1, #2
   116dc:	str	r0, [fp, #-32]	; 0xffffffe0
   116e0:	mov	r0, r1
   116e4:	bl	11350 <gettext@plt>
   116e8:	movw	r1, #24972	; 0x618c
   116ec:	movt	r1, #3
   116f0:	ldr	r1, [r1]
   116f4:	bl	111d0 <fputs_unlocked@plt>
   116f8:	movw	r1, #18079	; 0x469f
   116fc:	movt	r1, #2
   11700:	str	r0, [sp, #36]	; 0x24
   11704:	mov	r0, r1
   11708:	bl	11350 <gettext@plt>
   1170c:	movw	r1, #24972	; 0x618c
   11710:	movt	r1, #3
   11714:	ldr	r1, [r1]
   11718:	bl	111d0 <fputs_unlocked@plt>
   1171c:	movw	r1, #18207	; 0x471f
   11720:	movt	r1, #2
   11724:	str	r0, [sp, #32]
   11728:	mov	r0, r1
   1172c:	bl	11350 <gettext@plt>
   11730:	movw	r1, #24972	; 0x618c
   11734:	movt	r1, #3
   11738:	ldr	r1, [r1]
   1173c:	bl	111d0 <fputs_unlocked@plt>
   11740:	movw	r1, #18313	; 0x4789
   11744:	movt	r1, #2
   11748:	str	r0, [sp, #28]
   1174c:	mov	r0, r1
   11750:	bl	11350 <gettext@plt>
   11754:	movw	r1, #24972	; 0x618c
   11758:	movt	r1, #3
   1175c:	ldr	r1, [r1]
   11760:	bl	111d0 <fputs_unlocked@plt>
   11764:	movw	r1, #18384	; 0x47d0
   11768:	movt	r1, #2
   1176c:	str	r0, [sp, #24]
   11770:	mov	r0, r1
   11774:	bl	11350 <gettext@plt>
   11778:	movw	r1, #24972	; 0x618c
   1177c:	movt	r1, #3
   11780:	ldr	r1, [r1]
   11784:	bl	111d0 <fputs_unlocked@plt>
   11788:	movw	r1, #18849	; 0x49a1
   1178c:	movt	r1, #2
   11790:	str	r0, [sp, #20]
   11794:	mov	r0, r1
   11798:	bl	11350 <gettext@plt>
   1179c:	movw	r1, #24972	; 0x618c
   117a0:	movt	r1, #3
   117a4:	ldr	r1, [r1]
   117a8:	bl	111d0 <fputs_unlocked@plt>
   117ac:	movw	r1, #18894	; 0x49ce
   117b0:	movt	r1, #2
   117b4:	str	r0, [sp, #16]
   117b8:	mov	r0, r1
   117bc:	bl	11350 <gettext@plt>
   117c0:	movw	r1, #24972	; 0x618c
   117c4:	movt	r1, #3
   117c8:	ldr	r1, [r1]
   117cc:	bl	111d0 <fputs_unlocked@plt>
   117d0:	movw	r1, #18948	; 0x4a04
   117d4:	movt	r1, #2
   117d8:	str	r0, [sp, #12]
   117dc:	mov	r0, r1
   117e0:	bl	11350 <gettext@plt>
   117e4:	movw	r1, #25016	; 0x61b8
   117e8:	movt	r1, #3
   117ec:	ldr	r2, [r1]
   117f0:	ldr	r1, [r1]
   117f4:	str	r1, [sp, #8]
   117f8:	mov	r1, r2
   117fc:	ldr	r2, [sp, #8]
   11800:	bl	11200 <printf@plt>
   11804:	movw	r1, #19081	; 0x4a89
   11808:	movt	r1, #2
   1180c:	str	r0, [sp, #4]
   11810:	mov	r0, r1
   11814:	bl	11820 <__assert_fail@plt+0x344>
   11818:	ldr	r0, [fp, #-4]
   1181c:	bl	11344 <exit@plt>
   11820:	push	{fp, lr}
   11824:	mov	fp, sp
   11828:	sub	sp, sp, #88	; 0x58
   1182c:	add	r1, sp, #28
   11830:	movw	r2, #19900	; 0x4dbc
   11834:	movt	r2, #2
   11838:	str	r0, [fp, #-4]
   1183c:	mov	r0, r1
   11840:	str	r1, [sp, #12]
   11844:	mov	r1, r2
   11848:	movw	r2, #56	; 0x38
   1184c:	bl	1123c <memcpy@plt>
   11850:	ldr	r0, [fp, #-4]
   11854:	str	r0, [sp, #24]
   11858:	ldr	r0, [sp, #12]
   1185c:	str	r0, [sp, #20]
   11860:	ldr	r0, [sp, #20]
   11864:	ldr	r0, [r0]
   11868:	movw	r1, #0
   1186c:	cmp	r0, r1
   11870:	movw	r0, #0
   11874:	str	r0, [sp, #8]
   11878:	beq	118a4 <__assert_fail@plt+0x3c8>
   1187c:	ldr	r0, [fp, #-4]
   11880:	ldr	r1, [sp, #20]
   11884:	ldr	r1, [r1]
   11888:	bl	111e8 <strcmp@plt>
   1188c:	cmp	r0, #0
   11890:	movw	r0, #0
   11894:	moveq	r0, #1
   11898:	mvn	r1, #0
   1189c:	eor	r0, r0, r1
   118a0:	str	r0, [sp, #8]
   118a4:	ldr	r0, [sp, #8]
   118a8:	tst	r0, #1
   118ac:	beq	118c0 <__assert_fail@plt+0x3e4>
   118b0:	ldr	r0, [sp, #20]
   118b4:	add	r0, r0, #8
   118b8:	str	r0, [sp, #20]
   118bc:	b	11860 <__assert_fail@plt+0x384>
   118c0:	ldr	r0, [sp, #20]
   118c4:	ldr	r0, [r0, #4]
   118c8:	movw	r1, #0
   118cc:	cmp	r0, r1
   118d0:	beq	118e0 <__assert_fail@plt+0x404>
   118d4:	ldr	r0, [sp, #20]
   118d8:	ldr	r0, [r0, #4]
   118dc:	str	r0, [sp, #24]
   118e0:	movw	r0, #19372	; 0x4bac
   118e4:	movt	r0, #2
   118e8:	bl	11350 <gettext@plt>
   118ec:	movw	r1, #19120	; 0x4ab0
   118f0:	movt	r1, #2
   118f4:	movw	r2, #19395	; 0x4bc3
   118f8:	movt	r2, #2
   118fc:	bl	11200 <printf@plt>
   11900:	movw	r1, #5
   11904:	str	r0, [sp, #4]
   11908:	mov	r0, r1
   1190c:	movw	r1, #0
   11910:	bl	113f8 <setlocale@plt>
   11914:	str	r0, [sp, #16]
   11918:	ldr	r0, [sp, #16]
   1191c:	movw	r1, #0
   11920:	cmp	r0, r1
   11924:	beq	11960 <__assert_fail@plt+0x484>
   11928:	ldr	r0, [sp, #16]
   1192c:	movw	r1, #19435	; 0x4beb
   11930:	movt	r1, #2
   11934:	movw	r2, #3
   11938:	bl	11488 <strncmp@plt>
   1193c:	cmp	r0, #0
   11940:	beq	11960 <__assert_fail@plt+0x484>
   11944:	movw	r0, #19439	; 0x4bef
   11948:	movt	r0, #2
   1194c:	bl	11350 <gettext@plt>
   11950:	movw	r1, #24972	; 0x618c
   11954:	movt	r1, #3
   11958:	ldr	r1, [r1]
   1195c:	bl	111d0 <fputs_unlocked@plt>
   11960:	movw	r0, #19510	; 0x4c36
   11964:	movt	r0, #2
   11968:	bl	11350 <gettext@plt>
   1196c:	ldr	r2, [fp, #-4]
   11970:	movw	r1, #19395	; 0x4bc3
   11974:	movt	r1, #2
   11978:	bl	11200 <printf@plt>
   1197c:	movw	r1, #19537	; 0x4c51
   11980:	movt	r1, #2
   11984:	str	r0, [sp]
   11988:	mov	r0, r1
   1198c:	bl	11350 <gettext@plt>
   11990:	ldr	r1, [sp, #24]
   11994:	ldr	r2, [sp, #24]
   11998:	ldr	r3, [fp, #-4]
   1199c:	cmp	r2, r3
   119a0:	movw	r2, #0
   119a4:	moveq	r2, #1
   119a8:	tst	r2, #1
   119ac:	movw	r2, #18848	; 0x49a0
   119b0:	movt	r2, #2
   119b4:	movw	r3, #19305	; 0x4b69
   119b8:	movt	r3, #2
   119bc:	movne	r2, r3
   119c0:	bl	11200 <printf@plt>
   119c4:	mov	sp, fp
   119c8:	pop	{fp, pc}
   119cc:	push	{r4, r5, fp, lr}
   119d0:	add	fp, sp, #8
   119d4:	sub	sp, sp, #256	; 0x100
   119d8:	movw	r2, #0
   119dc:	str	r2, [fp, #-12]
   119e0:	str	r0, [fp, #-16]
   119e4:	str	r1, [fp, #-20]	; 0xffffffec
   119e8:	movw	r0, #0
   119ec:	strb	r0, [fp, #-21]	; 0xffffffeb
   119f0:	movw	r0, #16
   119f4:	str	r0, [fp, #-32]	; 0xffffffe0
   119f8:	mvn	r0, #0
   119fc:	str	r0, [fp, #-36]	; 0xffffffdc
   11a00:	ldr	r0, [fp, #-20]	; 0xffffffec
   11a04:	ldr	r0, [r0]
   11a08:	bl	19380 <__assert_fail@plt+0x7ea4>
   11a0c:	movw	r0, #6
   11a10:	movw	r1, #18848	; 0x49a0
   11a14:	movt	r1, #2
   11a18:	bl	113f8 <setlocale@plt>
   11a1c:	movw	r1, #19124	; 0x4ab4
   11a20:	movt	r1, #2
   11a24:	str	r0, [sp, #80]	; 0x50
   11a28:	mov	r0, r1
   11a2c:	movw	r1, #19087	; 0x4a8f
   11a30:	movt	r1, #2
   11a34:	bl	11464 <bindtextdomain@plt>
   11a38:	movw	r1, #19124	; 0x4ab4
   11a3c:	movt	r1, #2
   11a40:	str	r0, [sp, #76]	; 0x4c
   11a44:	mov	r0, r1
   11a48:	bl	11278 <textdomain@plt>
   11a4c:	movw	r1, #14092	; 0x370c
   11a50:	movt	r1, #1
   11a54:	str	r0, [sp, #72]	; 0x48
   11a58:	mov	r0, r1
   11a5c:	bl	24314 <__assert_fail@plt+0x12e38>
   11a60:	sub	r1, fp, #60	; 0x3c
   11a64:	str	r0, [sp, #68]	; 0x44
   11a68:	mov	r0, r1
   11a6c:	bl	120a0 <__assert_fail@plt+0xbc4>
   11a70:	ldr	r0, [fp, #-16]
   11a74:	ldr	r1, [fp, #-20]	; 0xffffffec
   11a78:	movw	r2, #19111	; 0x4aa7
   11a7c:	movt	r2, #2
   11a80:	movw	r3, #19692	; 0x4cec
   11a84:	movt	r3, #2
   11a88:	movw	ip, #0
   11a8c:	str	ip, [sp]
   11a90:	bl	1132c <getopt_long@plt>
   11a94:	str	r0, [fp, #-68]	; 0xffffffbc
   11a98:	cmn	r0, #1
   11a9c:	beq	11c98 <__assert_fail@plt+0x7bc>
   11aa0:	ldr	r0, [fp, #-68]	; 0xffffffbc
   11aa4:	cmn	r0, #3
   11aa8:	str	r0, [sp, #64]	; 0x40
   11aac:	beq	11c38 <__assert_fail@plt+0x75c>
   11ab0:	b	11ab4 <__assert_fail@plt+0x5d8>
   11ab4:	ldr	r0, [sp, #64]	; 0x40
   11ab8:	cmn	r0, #2
   11abc:	beq	11c30 <__assert_fail@plt+0x754>
   11ac0:	b	11ac4 <__assert_fail@plt+0x5e8>
   11ac4:	ldr	r0, [sp, #64]	; 0x40
   11ac8:	cmp	r0, #72	; 0x48
   11acc:	beq	11b90 <__assert_fail@plt+0x6b4>
   11ad0:	b	11ad4 <__assert_fail@plt+0x5f8>
   11ad4:	ldr	r0, [sp, #64]	; 0x40
   11ad8:	cmp	r0, #76	; 0x4c
   11adc:	beq	11b9c <__assert_fail@plt+0x6c0>
   11ae0:	b	11ae4 <__assert_fail@plt+0x608>
   11ae4:	ldr	r0, [sp, #64]	; 0x40
   11ae8:	cmp	r0, #80	; 0x50
   11aec:	beq	11ba8 <__assert_fail@plt+0x6cc>
   11af0:	b	11af4 <__assert_fail@plt+0x618>
   11af4:	ldr	r0, [sp, #64]	; 0x40
   11af8:	cmp	r0, #82	; 0x52
   11afc:	beq	11c00 <__assert_fail@plt+0x724>
   11b00:	b	11b04 <__assert_fail@plt+0x628>
   11b04:	ldr	r0, [sp, #64]	; 0x40
   11b08:	cmp	r0, #99	; 0x63
   11b0c:	beq	11c0c <__assert_fail@plt+0x730>
   11b10:	b	11b14 <__assert_fail@plt+0x638>
   11b14:	ldr	r0, [sp, #64]	; 0x40
   11b18:	cmp	r0, #102	; 0x66
   11b1c:	beq	11c18 <__assert_fail@plt+0x73c>
   11b20:	b	11b24 <__assert_fail@plt+0x648>
   11b24:	ldr	r0, [sp, #64]	; 0x40
   11b28:	cmp	r0, #104	; 0x68
   11b2c:	beq	11bb4 <__assert_fail@plt+0x6d8>
   11b30:	b	11b34 <__assert_fail@plt+0x658>
   11b34:	ldr	r0, [sp, #64]	; 0x40
   11b38:	cmp	r0, #118	; 0x76
   11b3c:	beq	11c24 <__assert_fail@plt+0x748>
   11b40:	b	11b44 <__assert_fail@plt+0x668>
   11b44:	ldr	r0, [sp, #64]	; 0x40
   11b48:	cmp	r0, #256	; 0x100
   11b4c:	beq	11bc0 <__assert_fail@plt+0x6e4>
   11b50:	b	11b54 <__assert_fail@plt+0x678>
   11b54:	movw	r0, #257	; 0x101
   11b58:	ldr	r1, [sp, #64]	; 0x40
   11b5c:	cmp	r1, r0
   11b60:	beq	11bcc <__assert_fail@plt+0x6f0>
   11b64:	b	11b68 <__assert_fail@plt+0x68c>
   11b68:	movw	r0, #258	; 0x102
   11b6c:	ldr	r1, [sp, #64]	; 0x40
   11b70:	cmp	r1, r0
   11b74:	beq	11bd8 <__assert_fail@plt+0x6fc>
   11b78:	b	11b7c <__assert_fail@plt+0x6a0>
   11b7c:	movw	r0, #259	; 0x103
   11b80:	ldr	r1, [sp, #64]	; 0x40
   11b84:	cmp	r1, r0
   11b88:	beq	11be4 <__assert_fail@plt+0x708>
   11b8c:	b	11c8c <__assert_fail@plt+0x7b0>
   11b90:	movw	r0, #17
   11b94:	str	r0, [fp, #-32]	; 0xffffffe0
   11b98:	b	11c94 <__assert_fail@plt+0x7b8>
   11b9c:	movw	r0, #2
   11ba0:	str	r0, [fp, #-32]	; 0xffffffe0
   11ba4:	b	11c94 <__assert_fail@plt+0x7b8>
   11ba8:	movw	r0, #16
   11bac:	str	r0, [fp, #-32]	; 0xffffffe0
   11bb0:	b	11c94 <__assert_fail@plt+0x7b8>
   11bb4:	movw	r0, #0
   11bb8:	str	r0, [fp, #-36]	; 0xffffffdc
   11bbc:	b	11c94 <__assert_fail@plt+0x7b8>
   11bc0:	movw	r0, #1
   11bc4:	str	r0, [fp, #-36]	; 0xffffffdc
   11bc8:	b	11c94 <__assert_fail@plt+0x7b8>
   11bcc:	movw	r0, #0
   11bd0:	strb	r0, [fp, #-21]	; 0xffffffeb
   11bd4:	b	11c94 <__assert_fail@plt+0x7b8>
   11bd8:	movw	r0, #1
   11bdc:	strb	r0, [fp, #-21]	; 0xffffffeb
   11be0:	b	11c94 <__assert_fail@plt+0x7b8>
   11be4:	movw	r0, #24976	; 0x6190
   11be8:	movt	r0, #3
   11bec:	ldr	r0, [r0]
   11bf0:	movw	r1, #24984	; 0x6198
   11bf4:	movt	r1, #3
   11bf8:	str	r0, [r1]
   11bfc:	b	11c94 <__assert_fail@plt+0x7b8>
   11c00:	movw	r0, #1
   11c04:	strb	r0, [fp, #-56]	; 0xffffffc8
   11c08:	b	11c94 <__assert_fail@plt+0x7b8>
   11c0c:	movw	r0, #1
   11c10:	str	r0, [fp, #-60]	; 0xffffffc4
   11c14:	b	11c94 <__assert_fail@plt+0x7b8>
   11c18:	movw	r0, #1
   11c1c:	strb	r0, [fp, #-47]	; 0xffffffd1
   11c20:	b	11c94 <__assert_fail@plt+0x7b8>
   11c24:	movw	r0, #0
   11c28:	str	r0, [fp, #-60]	; 0xffffffc4
   11c2c:	b	11c94 <__assert_fail@plt+0x7b8>
   11c30:	movw	r0, #0
   11c34:	bl	115d8 <__assert_fail@plt+0xfc>
   11c38:	movw	r0, #24972	; 0x618c
   11c3c:	movt	r0, #3
   11c40:	ldr	r0, [r0]
   11c44:	movw	r1, #24876	; 0x612c
   11c48:	movt	r1, #3
   11c4c:	ldr	r3, [r1]
   11c50:	movw	r1, #19081	; 0x4a89
   11c54:	movt	r1, #2
   11c58:	movw	r2, #19120	; 0x4ab0
   11c5c:	movt	r2, #2
   11c60:	movw	ip, #19134	; 0x4abe
   11c64:	movt	ip, #2
   11c68:	str	ip, [sp]
   11c6c:	movw	ip, #19150	; 0x4ace
   11c70:	movt	ip, #2
   11c74:	str	ip, [sp, #4]
   11c78:	movw	ip, #0
   11c7c:	str	ip, [sp, #8]
   11c80:	bl	1c340 <__assert_fail@plt+0xae64>
   11c84:	movw	r0, #0
   11c88:	bl	11344 <exit@plt>
   11c8c:	movw	r0, #1
   11c90:	bl	115d8 <__assert_fail@plt+0xfc>
   11c94:	b	11a70 <__assert_fail@plt+0x594>
   11c98:	ldrb	r0, [fp, #-56]	; 0xffffffc8
   11c9c:	tst	r0, #1
   11ca0:	beq	11cec <__assert_fail@plt+0x810>
   11ca4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11ca8:	cmp	r0, #16
   11cac:	bne	11ce8 <__assert_fail@plt+0x80c>
   11cb0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   11cb4:	cmp	r0, #1
   11cb8:	bne	11ce0 <__assert_fail@plt+0x804>
   11cbc:	movw	r0, #19163	; 0x4adb
   11cc0:	movt	r0, #2
   11cc4:	bl	11350 <gettext@plt>
   11cc8:	movw	r1, #1
   11ccc:	str	r0, [sp, #60]	; 0x3c
   11cd0:	mov	r0, r1
   11cd4:	movw	r1, #0
   11cd8:	ldr	r2, [sp, #60]	; 0x3c
   11cdc:	bl	112e4 <error@plt>
   11ce0:	movw	r0, #0
   11ce4:	str	r0, [fp, #-36]	; 0xffffffdc
   11ce8:	b	11cf4 <__assert_fail@plt+0x818>
   11cec:	movw	r0, #16
   11cf0:	str	r0, [fp, #-32]	; 0xffffffe0
   11cf4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   11cf8:	cmp	r0, #0
   11cfc:	movw	r0, #0
   11d00:	movne	r0, #1
   11d04:	and	r0, r0, #1
   11d08:	strb	r0, [fp, #-48]	; 0xffffffd0
   11d0c:	ldr	r0, [fp, #-16]
   11d10:	movw	r1, #24960	; 0x6180
   11d14:	movt	r1, #3
   11d18:	ldr	r1, [r1]
   11d1c:	sub	r0, r0, r1
   11d20:	movw	r1, #24984	; 0x6198
   11d24:	movt	r1, #3
   11d28:	ldr	r1, [r1]
   11d2c:	movw	r2, #0
   11d30:	cmp	r1, r2
   11d34:	movw	r1, #0
   11d38:	movne	r1, #1
   11d3c:	tst	r1, #1
   11d40:	movw	r1, #1
   11d44:	moveq	r1, #2
   11d48:	cmp	r0, r1
   11d4c:	bge	11dd8 <__assert_fail@plt+0x8fc>
   11d50:	ldr	r0, [fp, #-16]
   11d54:	movw	r1, #24960	; 0x6180
   11d58:	movt	r1, #3
   11d5c:	ldr	r1, [r1]
   11d60:	cmp	r0, r1
   11d64:	bgt	11d8c <__assert_fail@plt+0x8b0>
   11d68:	movw	r0, #19205	; 0x4b05
   11d6c:	movt	r0, #2
   11d70:	bl	11350 <gettext@plt>
   11d74:	movw	r1, #0
   11d78:	str	r0, [sp, #56]	; 0x38
   11d7c:	mov	r0, r1
   11d80:	ldr	r2, [sp, #56]	; 0x38
   11d84:	bl	112e4 <error@plt>
   11d88:	b	11dd0 <__assert_fail@plt+0x8f4>
   11d8c:	movw	r0, #19221	; 0x4b15
   11d90:	movt	r0, #2
   11d94:	bl	11350 <gettext@plt>
   11d98:	ldr	r1, [fp, #-20]	; 0xffffffec
   11d9c:	ldr	r2, [fp, #-16]
   11da0:	sub	r2, r2, #1
   11da4:	add	r1, r1, r2, lsl #2
   11da8:	ldr	r1, [r1]
   11dac:	str	r0, [sp, #52]	; 0x34
   11db0:	mov	r0, r1
   11db4:	bl	1b9dc <__assert_fail@plt+0xa500>
   11db8:	movw	r1, #0
   11dbc:	str	r0, [sp, #48]	; 0x30
   11dc0:	mov	r0, r1
   11dc4:	ldr	r2, [sp, #52]	; 0x34
   11dc8:	ldr	r3, [sp, #48]	; 0x30
   11dcc:	bl	112e4 <error@plt>
   11dd0:	movw	r0, #1
   11dd4:	bl	115d8 <__assert_fail@plt+0xfc>
   11dd8:	movw	r0, #24984	; 0x6198
   11ddc:	movt	r0, #3
   11de0:	ldr	r0, [r0]
   11de4:	movw	r1, #0
   11de8:	cmp	r0, r1
   11dec:	beq	11e74 <__assert_fail@plt+0x998>
   11df0:	movw	r0, #24984	; 0x6198
   11df4:	movt	r0, #3
   11df8:	ldr	r0, [r0]
   11dfc:	add	r1, sp, #88	; 0x58
   11e00:	bl	2432c <__assert_fail@plt+0x12e50>
   11e04:	cmp	r0, #0
   11e08:	beq	11e5c <__assert_fail@plt+0x980>
   11e0c:	bl	11398 <__errno_location@plt>
   11e10:	ldr	r1, [r0]
   11e14:	movw	r0, #19246	; 0x4b2e
   11e18:	movt	r0, #2
   11e1c:	str	r1, [sp, #44]	; 0x2c
   11e20:	bl	11350 <gettext@plt>
   11e24:	movw	r1, #24984	; 0x6198
   11e28:	movt	r1, #3
   11e2c:	ldr	r1, [r1]
   11e30:	movw	r2, #4
   11e34:	str	r0, [sp, #40]	; 0x28
   11e38:	mov	r0, r2
   11e3c:	bl	1b644 <__assert_fail@plt+0xa168>
   11e40:	movw	r1, #1
   11e44:	str	r0, [sp, #36]	; 0x24
   11e48:	mov	r0, r1
   11e4c:	ldr	r1, [sp, #44]	; 0x2c
   11e50:	ldr	r2, [sp, #40]	; 0x28
   11e54:	ldr	r3, [sp, #36]	; 0x24
   11e58:	bl	112e4 <error@plt>
   11e5c:	ldr	r0, [sp, #116]	; 0x74
   11e60:	str	r0, [fp, #-28]	; 0xffffffe4
   11e64:	ldr	r0, [sp, #116]	; 0x74
   11e68:	bl	12128 <__assert_fail@plt+0xc4c>
   11e6c:	str	r0, [fp, #-40]	; 0xffffffd8
   11e70:	b	11ed8 <__assert_fail@plt+0x9fc>
   11e74:	ldr	r0, [fp, #-20]	; 0xffffffec
   11e78:	movw	r1, #24960	; 0x6180
   11e7c:	movt	r1, #3
   11e80:	ldr	r2, [r1]
   11e84:	add	r3, r2, #1
   11e88:	str	r3, [r1]
   11e8c:	add	r0, r0, r2, lsl #2
   11e90:	ldr	r0, [r0]
   11e94:	str	r0, [sp, #84]	; 0x54
   11e98:	ldr	r0, [sp, #84]	; 0x54
   11e9c:	ldrb	r0, [r0]
   11ea0:	cmp	r0, #0
   11ea4:	beq	11eb8 <__assert_fail@plt+0x9dc>
   11ea8:	ldr	r0, [sp, #84]	; 0x54
   11eac:	bl	1f1c8 <__assert_fail@plt+0xdcec>
   11eb0:	str	r0, [sp, #32]
   11eb4:	b	11ec4 <__assert_fail@plt+0x9e8>
   11eb8:	movw	r0, #0
   11ebc:	str	r0, [sp, #32]
   11ec0:	b	11ec4 <__assert_fail@plt+0x9e8>
   11ec4:	ldr	r0, [sp, #32]
   11ec8:	str	r0, [fp, #-40]	; 0xffffffd8
   11ecc:	ldr	r0, [sp, #84]	; 0x54
   11ed0:	bl	11fc4 <__assert_fail@plt+0xae8>
   11ed4:	str	r0, [fp, #-28]	; 0xffffffe4
   11ed8:	ldrb	r0, [fp, #-56]	; 0xffffffc8
   11edc:	tst	r0, #1
   11ee0:	beq	11f60 <__assert_fail@plt+0xa84>
   11ee4:	ldrb	r0, [fp, #-21]	; 0xffffffeb
   11ee8:	tst	r0, #1
   11eec:	beq	11f60 <__assert_fail@plt+0xa84>
   11ef0:	movw	r0, #24992	; 0x61a0
   11ef4:	movt	r0, #3
   11ef8:	bl	1bb14 <__assert_fail@plt+0xa638>
   11efc:	str	r0, [fp, #-52]	; 0xffffffcc
   11f00:	ldr	r0, [fp, #-52]	; 0xffffffcc
   11f04:	movw	r1, #0
   11f08:	cmp	r0, r1
   11f0c:	bne	11f5c <__assert_fail@plt+0xa80>
   11f10:	bl	11398 <__errno_location@plt>
   11f14:	ldr	r1, [r0]
   11f18:	movw	r0, #19246	; 0x4b2e
   11f1c:	movt	r0, #2
   11f20:	str	r1, [sp, #28]
   11f24:	bl	11350 <gettext@plt>
   11f28:	movw	r1, #4
   11f2c:	str	r0, [sp, #24]
   11f30:	mov	r0, r1
   11f34:	movw	r1, #22051	; 0x5623
   11f38:	movt	r1, #2
   11f3c:	bl	1b644 <__assert_fail@plt+0xa168>
   11f40:	movw	r1, #1
   11f44:	str	r0, [sp, #20]
   11f48:	mov	r0, r1
   11f4c:	ldr	r1, [sp, #28]
   11f50:	ldr	r2, [sp, #24]
   11f54:	ldr	r3, [sp, #20]
   11f58:	bl	112e4 <error@plt>
   11f5c:	b	11f60 <__assert_fail@plt+0xa84>
   11f60:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11f64:	orr	r0, r0, #1024	; 0x400
   11f68:	str	r0, [fp, #-32]	; 0xffffffe0
   11f6c:	ldr	r0, [fp, #-20]	; 0xffffffec
   11f70:	movw	r1, #24960	; 0x6180
   11f74:	movt	r1, #3
   11f78:	ldr	r1, [r1]
   11f7c:	add	r0, r0, r1, lsl #2
   11f80:	ldr	r1, [fp, #-32]	; 0xffffffe0
   11f84:	ldr	r3, [fp, #-28]	; 0xffffffe4
   11f88:	mvn	r2, #0
   11f8c:	str	r2, [sp, #16]
   11f90:	ldr	ip, [sp, #16]
   11f94:	str	ip, [sp]
   11f98:	str	ip, [sp, #4]
   11f9c:	sub	lr, fp, #60	; 0x3c
   11fa0:	str	lr, [sp, #8]
   11fa4:	bl	121e8 <__assert_fail@plt+0xd0c>
   11fa8:	and	r0, r0, #1
   11fac:	strb	r0, [fp, #-61]	; 0xffffffc3
   11fb0:	ldrb	r0, [fp, #-61]	; 0xffffffc3
   11fb4:	tst	r0, #1
   11fb8:	movw	r0, #0
   11fbc:	moveq	r0, #1
   11fc0:	bl	11344 <exit@plt>
   11fc4:	push	{fp, lr}
   11fc8:	mov	fp, sp
   11fcc:	sub	sp, sp, #40	; 0x28
   11fd0:	str	r0, [fp, #-4]
   11fd4:	mvn	r0, #0
   11fd8:	str	r0, [fp, #-8]
   11fdc:	ldr	r0, [fp, #-4]
   11fe0:	ldrsb	r0, [r0]
   11fe4:	cmp	r0, #0
   11fe8:	beq	12094 <__assert_fail@plt+0xbb8>
   11fec:	ldr	r0, [fp, #-4]
   11ff0:	bl	114d0 <getgrnam@plt>
   11ff4:	str	r0, [fp, #-12]
   11ff8:	ldr	r0, [fp, #-12]
   11ffc:	movw	r1, #0
   12000:	cmp	r0, r1
   12004:	beq	12018 <__assert_fail@plt+0xb3c>
   12008:	ldr	r0, [fp, #-12]
   1200c:	ldr	r0, [r0, #8]
   12010:	str	r0, [fp, #-8]
   12014:	b	12090 <__assert_fail@plt+0xbb4>
   12018:	ldr	r0, [fp, #-4]
   1201c:	movw	r1, #0
   12020:	movw	r2, #10
   12024:	add	r3, sp, #16
   12028:	movw	ip, #18848	; 0x49a0
   1202c:	movt	ip, #2
   12030:	str	ip, [sp]
   12034:	bl	1f378 <__assert_fail@plt+0xde9c>
   12038:	cmp	r0, #0
   1203c:	bne	12050 <__assert_fail@plt+0xb74>
   12040:	ldr	r0, [sp, #20]
   12044:	cmp	r0, #0
   12048:	beq	12088 <__assert_fail@plt+0xbac>
   1204c:	b	12050 <__assert_fail@plt+0xb74>
   12050:	movw	r0, #19672	; 0x4cd8
   12054:	movt	r0, #2
   12058:	bl	11350 <gettext@plt>
   1205c:	ldr	r1, [fp, #-4]
   12060:	str	r0, [sp, #12]
   12064:	mov	r0, r1
   12068:	bl	1b9dc <__assert_fail@plt+0xa500>
   1206c:	movw	r1, #1
   12070:	str	r0, [sp, #8]
   12074:	mov	r0, r1
   12078:	movw	r1, #0
   1207c:	ldr	r2, [sp, #12]
   12080:	ldr	r3, [sp, #8]
   12084:	bl	112e4 <error@plt>
   12088:	ldr	r0, [sp, #16]
   1208c:	str	r0, [fp, #-8]
   12090:	bl	111c4 <endgrent@plt>
   12094:	ldr	r0, [fp, #-8]
   12098:	mov	sp, fp
   1209c:	pop	{fp, pc}
   120a0:	sub	sp, sp, #4
   120a4:	str	r0, [sp]
   120a8:	ldr	r0, [sp]
   120ac:	movw	r1, #2
   120b0:	str	r1, [r0]
   120b4:	ldr	r0, [sp]
   120b8:	movw	r1, #0
   120bc:	str	r1, [r0, #8]
   120c0:	ldr	r0, [sp]
   120c4:	movw	r2, #1
   120c8:	strb	r2, [r0, #12]
   120cc:	ldr	r0, [sp]
   120d0:	movw	r2, #0
   120d4:	strb	r2, [r0, #4]
   120d8:	ldr	r0, [sp]
   120dc:	strb	r2, [r0, #13]
   120e0:	ldr	r0, [sp]
   120e4:	str	r1, [r0, #16]
   120e8:	ldr	r0, [sp]
   120ec:	str	r1, [r0, #20]
   120f0:	add	sp, sp, #4
   120f4:	bx	lr
   120f8:	push	{fp, lr}
   120fc:	mov	fp, sp
   12100:	sub	sp, sp, #8
   12104:	str	r0, [sp, #4]
   12108:	ldr	r0, [sp, #4]
   1210c:	ldr	r0, [r0, #16]
   12110:	bl	1382c <__assert_fail@plt+0x2350>
   12114:	ldr	r0, [sp, #4]
   12118:	ldr	r0, [r0, #20]
   1211c:	bl	1382c <__assert_fail@plt+0x2350>
   12120:	mov	sp, fp
   12124:	pop	{fp, pc}
   12128:	push	{fp, lr}
   1212c:	mov	fp, sp
   12130:	sub	sp, sp, #40	; 0x28
   12134:	str	r0, [fp, #-4]
   12138:	ldr	r0, [fp, #-4]
   1213c:	bl	114c4 <getgrgid@plt>
   12140:	str	r0, [sp, #8]
   12144:	ldr	r0, [sp, #8]
   12148:	movw	r1, #0
   1214c:	cmp	r0, r1
   12150:	beq	12164 <__assert_fail@plt+0xc88>
   12154:	ldr	r0, [sp, #8]
   12158:	ldr	r0, [r0]
   1215c:	str	r0, [sp, #4]
   12160:	b	12178 <__assert_fail@plt+0xc9c>
   12164:	add	r2, sp, #15
   12168:	ldr	r0, [fp, #-4]
   1216c:	mov	r1, #0
   12170:	bl	19104 <__assert_fail@plt+0x7c28>
   12174:	str	r0, [sp, #4]
   12178:	ldr	r0, [sp, #4]
   1217c:	bl	1f1c8 <__assert_fail@plt+0xdcec>
   12180:	mov	sp, fp
   12184:	pop	{fp, pc}
   12188:	push	{fp, lr}
   1218c:	mov	fp, sp
   12190:	sub	sp, sp, #40	; 0x28
   12194:	str	r0, [fp, #-4]
   12198:	ldr	r0, [fp, #-4]
   1219c:	bl	111f4 <getpwuid@plt>
   121a0:	str	r0, [sp, #8]
   121a4:	ldr	r0, [sp, #8]
   121a8:	movw	r1, #0
   121ac:	cmp	r0, r1
   121b0:	beq	121c4 <__assert_fail@plt+0xce8>
   121b4:	ldr	r0, [sp, #8]
   121b8:	ldr	r0, [r0]
   121bc:	str	r0, [sp, #4]
   121c0:	b	121d8 <__assert_fail@plt+0xcfc>
   121c4:	add	r2, sp, #15
   121c8:	ldr	r0, [fp, #-4]
   121cc:	mov	r1, #0
   121d0:	bl	19104 <__assert_fail@plt+0x7c28>
   121d4:	str	r0, [sp, #4]
   121d8:	ldr	r0, [sp, #4]
   121dc:	bl	1f1c8 <__assert_fail@plt+0xdcec>
   121e0:	mov	sp, fp
   121e4:	pop	{fp, pc}
   121e8:	push	{r4, sl, fp, lr}
   121ec:	add	fp, sp, #8
   121f0:	sub	sp, sp, #72	; 0x48
   121f4:	ldr	ip, [fp, #16]
   121f8:	ldr	lr, [fp, #12]
   121fc:	ldr	r4, [fp, #8]
   12200:	str	r0, [fp, #-12]
   12204:	str	r1, [fp, #-16]
   12208:	str	r2, [fp, #-20]	; 0xffffffec
   1220c:	str	r3, [fp, #-24]	; 0xffffffe8
   12210:	movw	r0, #1
   12214:	strb	r0, [fp, #-25]	; 0xffffffe7
   12218:	ldr	r0, [fp, #8]
   1221c:	cmn	r0, #1
   12220:	movw	r0, #1
   12224:	str	r0, [sp, #36]	; 0x24
   12228:	bne	12270 <__assert_fail@plt+0xd94>
   1222c:	ldr	r0, [fp, #12]
   12230:	cmn	r0, #1
   12234:	movw	r0, #1
   12238:	str	r0, [sp, #36]	; 0x24
   1223c:	bne	12270 <__assert_fail@plt+0xd94>
   12240:	ldr	r0, [fp, #16]
   12244:	ldrb	r0, [r0, #12]
   12248:	tst	r0, #1
   1224c:	movw	r0, #1
   12250:	str	r0, [sp, #36]	; 0x24
   12254:	bne	12270 <__assert_fail@plt+0xd94>
   12258:	ldr	r0, [fp, #16]
   1225c:	ldr	r0, [r0]
   12260:	cmp	r0, #2
   12264:	movw	r0, #0
   12268:	movne	r0, #1
   1226c:	str	r0, [sp, #36]	; 0x24
   12270:	ldr	r0, [sp, #36]	; 0x24
   12274:	tst	r0, #1
   12278:	movw	r0, #0
   1227c:	mov	r1, r0
   12280:	moveq	r1, #8
   12284:	str	r1, [fp, #-32]	; 0xffffffe0
   12288:	ldr	r1, [fp, #-12]
   1228c:	ldr	r2, [fp, #-16]
   12290:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12294:	orr	r2, r2, r3
   12298:	str	r0, [sp, #32]
   1229c:	mov	r0, r1
   122a0:	mov	r1, r2
   122a4:	ldr	r2, [sp, #32]
   122a8:	bl	1f250 <__assert_fail@plt+0xdd74>
   122ac:	str	r0, [fp, #-36]	; 0xffffffdc
   122b0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   122b4:	bl	1496c <__assert_fail@plt+0x3490>
   122b8:	str	r0, [sp, #40]	; 0x28
   122bc:	ldr	r0, [sp, #40]	; 0x28
   122c0:	movw	r1, #0
   122c4:	cmp	r0, r1
   122c8:	bne	12328 <__assert_fail@plt+0xe4c>
   122cc:	bl	11398 <__errno_location@plt>
   122d0:	ldr	r0, [r0]
   122d4:	cmp	r0, #0
   122d8:	beq	12324 <__assert_fail@plt+0xe48>
   122dc:	ldr	r0, [fp, #16]
   122e0:	ldrb	r0, [r0, #13]
   122e4:	tst	r0, #1
   122e8:	bne	1231c <__assert_fail@plt+0xe40>
   122ec:	bl	11398 <__errno_location@plt>
   122f0:	ldr	r1, [r0]
   122f4:	movw	r0, #19956	; 0x4df4
   122f8:	movt	r0, #2
   122fc:	str	r1, [sp, #28]
   12300:	bl	11350 <gettext@plt>
   12304:	movw	r1, #0
   12308:	str	r0, [sp, #24]
   1230c:	mov	r0, r1
   12310:	ldr	r1, [sp, #28]
   12314:	ldr	r2, [sp, #24]
   12318:	bl	112e4 <error@plt>
   1231c:	movw	r0, #0
   12320:	strb	r0, [fp, #-25]	; 0xffffffe7
   12324:	b	1237c <__assert_fail@plt+0xea0>
   12328:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1232c:	ldr	r1, [sp, #40]	; 0x28
   12330:	ldr	r2, [fp, #-20]	; 0xffffffec
   12334:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12338:	ldr	ip, [fp, #8]
   1233c:	ldr	lr, [fp, #12]
   12340:	ldr	r4, [fp, #16]
   12344:	str	ip, [sp]
   12348:	str	lr, [sp, #4]
   1234c:	str	r4, [sp, #8]
   12350:	bl	123d4 <__assert_fail@plt+0xef8>
   12354:	and	r0, r0, #1
   12358:	ldrb	r1, [fp, #-25]	; 0xffffffe7
   1235c:	and	r1, r1, #1
   12360:	and	r0, r1, r0
   12364:	cmp	r0, #0
   12368:	movw	r0, #0
   1236c:	movne	r0, #1
   12370:	and	r0, r0, #1
   12374:	strb	r0, [fp, #-25]	; 0xffffffe7
   12378:	b	122b0 <__assert_fail@plt+0xdd4>
   1237c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12380:	bl	146ac <__assert_fail@plt+0x31d0>
   12384:	cmp	r0, #0
   12388:	beq	123c4 <__assert_fail@plt+0xee8>
   1238c:	bl	11398 <__errno_location@plt>
   12390:	ldr	r1, [r0]
   12394:	movw	r0, #19972	; 0x4e04
   12398:	movt	r0, #2
   1239c:	str	r1, [sp, #20]
   123a0:	bl	11350 <gettext@plt>
   123a4:	movw	r1, #0
   123a8:	str	r0, [sp, #16]
   123ac:	mov	r0, r1
   123b0:	ldr	r1, [sp, #20]
   123b4:	ldr	r2, [sp, #16]
   123b8:	bl	112e4 <error@plt>
   123bc:	movw	r0, #0
   123c0:	strb	r0, [fp, #-25]	; 0xffffffe7
   123c4:	ldrb	r0, [fp, #-25]	; 0xffffffe7
   123c8:	and	r0, r0, #1
   123cc:	sub	sp, fp, #8
   123d0:	pop	{r4, sl, fp, pc}
   123d4:	push	{r4, r5, r6, r7, fp, lr}
   123d8:	add	fp, sp, #16
   123dc:	sub	sp, sp, #344	; 0x158
   123e0:	ldr	ip, [fp, #16]
   123e4:	ldr	lr, [fp, #12]
   123e8:	ldr	r4, [fp, #8]
   123ec:	str	r0, [fp, #-24]	; 0xffffffe8
   123f0:	str	r1, [fp, #-28]	; 0xffffffe4
   123f4:	str	r2, [fp, #-32]	; 0xffffffe0
   123f8:	str	r3, [fp, #-36]	; 0xffffffdc
   123fc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12400:	ldr	r0, [r0, #28]
   12404:	str	r0, [fp, #-40]	; 0xffffffd8
   12408:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1240c:	ldr	r0, [r0, #24]
   12410:	str	r0, [fp, #-44]	; 0xffffffd4
   12414:	mov	r0, #1
   12418:	strb	r0, [fp, #-153]	; 0xffffff67
   1241c:	strb	r0, [fp, #-155]	; 0xffffff65
   12420:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12424:	ldrh	r0, [r0, #56]	; 0x38
   12428:	sub	r0, r0, #1
   1242c:	cmp	r0, #9
   12430:	str	r0, [sp, #180]	; 0xb4
   12434:	bhi	1281c <__assert_fail@plt+0x1340>
   12438:	add	r0, pc, #8
   1243c:	ldr	r1, [sp, #180]	; 0xb4
   12440:	ldr	r0, [r0, r1, lsl #2]
   12444:	mov	pc, r0
   12448:	andeq	r2, r1, r0, ror r4
   1244c:			; <UNDEFINED> instruction: 0x000127b4
   12450:	andeq	r2, r1, ip, lsl r8
   12454:	andeq	r2, r1, r0, asr r7
   12458:	andeq	r2, r1, ip, lsl r8
   1245c:	andeq	r2, r1, r8, lsl r6
   12460:	strdeq	r2, [r1], -r4
   12464:	andeq	r2, r1, ip, lsl r8
   12468:	andeq	r2, r1, ip, lsl r8
   1246c:	andeq	r2, r1, ip, lsr r6
   12470:	ldr	r0, [fp, #16]
   12474:	ldrb	r0, [r0, #4]
   12478:	tst	r0, #1
   1247c:	beq	12614 <__assert_fail@plt+0x1138>
   12480:	ldr	r0, [fp, #16]
   12484:	ldr	r0, [r0, #8]
   12488:	movw	r1, #0
   1248c:	cmp	r0, r1
   12490:	beq	12604 <__assert_fail@plt+0x1128>
   12494:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12498:	ldr	r1, [r0, #160]	; 0xa0
   1249c:	ldr	r0, [r0, #164]	; 0xa4
   124a0:	ldr	r2, [fp, #16]
   124a4:	ldr	r2, [r2, #8]
   124a8:	ldr	r3, [r2]
   124ac:	ldr	r2, [r2, #4]
   124b0:	eor	r0, r0, r2
   124b4:	eor	r1, r1, r3
   124b8:	orr	r0, r1, r0
   124bc:	cmp	r0, #0
   124c0:	bne	12604 <__assert_fail@plt+0x1128>
   124c4:	b	124c8 <__assert_fail@plt+0xfec>
   124c8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   124cc:	ldr	r1, [r0, #64]	; 0x40
   124d0:	ldr	r0, [r0, #68]	; 0x44
   124d4:	ldr	r2, [fp, #16]
   124d8:	ldr	r2, [r2, #8]
   124dc:	ldr	r3, [r2, #8]
   124e0:	ldr	r2, [r2, #12]
   124e4:	eor	r0, r0, r2
   124e8:	eor	r1, r1, r3
   124ec:	orr	r0, r1, r0
   124f0:	cmp	r0, #0
   124f4:	bne	12604 <__assert_fail@plt+0x1128>
   124f8:	b	124fc <__assert_fail@plt+0x1020>
   124fc:	b	12500 <__assert_fail@plt+0x1024>
   12500:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12504:	movw	r1, #22051	; 0x5623
   12508:	movt	r1, #2
   1250c:	bl	111e8 <strcmp@plt>
   12510:	cmp	r0, #0
   12514:	bne	12554 <__assert_fail@plt+0x1078>
   12518:	movw	r0, #19989	; 0x4e15
   1251c:	movt	r0, #2
   12520:	bl	11350 <gettext@plt>
   12524:	ldr	r1, [fp, #-40]	; 0xffffffd8
   12528:	movw	r2, #4
   1252c:	str	r0, [sp, #176]	; 0xb0
   12530:	mov	r0, r2
   12534:	bl	1b644 <__assert_fail@plt+0xa168>
   12538:	movw	r1, #0
   1253c:	str	r0, [sp, #172]	; 0xac
   12540:	mov	r0, r1
   12544:	ldr	r2, [sp, #176]	; 0xb0
   12548:	ldr	r3, [sp, #172]	; 0xac
   1254c:	bl	112e4 <error@plt>
   12550:	b	125b4 <__assert_fail@plt+0x10d8>
   12554:	movw	r0, #20034	; 0x4e42
   12558:	movt	r0, #2
   1255c:	bl	11350 <gettext@plt>
   12560:	ldr	r2, [fp, #-40]	; 0xffffffd8
   12564:	movw	r1, #0
   12568:	str	r0, [sp, #168]	; 0xa8
   1256c:	mov	r0, r1
   12570:	movw	r1, #4
   12574:	bl	1b570 <__assert_fail@plt+0xa094>
   12578:	movw	r1, #1
   1257c:	str	r0, [sp, #164]	; 0xa4
   12580:	mov	r0, r1
   12584:	movw	r1, #4
   12588:	movw	r2, #22051	; 0x5623
   1258c:	movt	r2, #2
   12590:	bl	1b570 <__assert_fail@plt+0xa094>
   12594:	movw	r1, #0
   12598:	str	r0, [sp, #160]	; 0xa0
   1259c:	mov	r0, r1
   125a0:	ldr	r2, [sp, #168]	; 0xa8
   125a4:	ldr	r3, [sp, #164]	; 0xa4
   125a8:	ldr	ip, [sp, #160]	; 0xa0
   125ac:	str	ip, [sp]
   125b0:	bl	112e4 <error@plt>
   125b4:	movw	r0, #20092	; 0x4e7c
   125b8:	movt	r0, #2
   125bc:	bl	11350 <gettext@plt>
   125c0:	movw	r1, #0
   125c4:	str	r0, [sp, #156]	; 0x9c
   125c8:	mov	r0, r1
   125cc:	ldr	r2, [sp, #156]	; 0x9c
   125d0:	bl	112e4 <error@plt>
   125d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   125d8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   125dc:	movw	r2, #4
   125e0:	bl	16890 <__assert_fail@plt+0x53b4>
   125e4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   125e8:	str	r0, [sp, #152]	; 0x98
   125ec:	mov	r0, r1
   125f0:	bl	1496c <__assert_fail@plt+0x3490>
   125f4:	movw	r1, #0
   125f8:	and	r1, r1, #1
   125fc:	strb	r1, [fp, #-17]	; 0xffffffef
   12600:	b	12f88 <__assert_fail@plt+0x1aac>
   12604:	movw	r0, #1
   12608:	and	r0, r0, #1
   1260c:	strb	r0, [fp, #-17]	; 0xffffffef
   12610:	b	12f88 <__assert_fail@plt+0x1aac>
   12614:	b	12820 <__assert_fail@plt+0x1344>
   12618:	ldr	r0, [fp, #16]
   1261c:	ldrb	r0, [r0, #4]
   12620:	tst	r0, #1
   12624:	bne	12638 <__assert_fail@plt+0x115c>
   12628:	movw	r0, #1
   1262c:	and	r0, r0, #1
   12630:	strb	r0, [fp, #-17]	; 0xffffffef
   12634:	b	12f88 <__assert_fail@plt+0x1aac>
   12638:	b	12820 <__assert_fail@plt+0x1344>
   1263c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12640:	ldr	r0, [r0, #48]	; 0x30
   12644:	cmp	r0, #0
   12648:	bne	12690 <__assert_fail@plt+0x11b4>
   1264c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12650:	ldr	r0, [r0, #16]
   12654:	cmp	r0, #0
   12658:	bne	12690 <__assert_fail@plt+0x11b4>
   1265c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12660:	movw	r1, #1
   12664:	str	r1, [r0, #16]
   12668:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1266c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   12670:	str	r1, [sp, #148]	; 0x94
   12674:	mov	r1, r2
   12678:	ldr	r2, [sp, #148]	; 0x94
   1267c:	bl	16890 <__assert_fail@plt+0x53b4>
   12680:	movw	r1, #1
   12684:	and	r1, r1, #1
   12688:	strb	r1, [fp, #-17]	; 0xffffffef
   1268c:	b	12f88 <__assert_fail@plt+0x1aac>
   12690:	ldr	r0, [fp, #16]
   12694:	ldrb	r0, [r0, #13]
   12698:	tst	r0, #1
   1269c:	bne	126e8 <__assert_fail@plt+0x120c>
   126a0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   126a4:	ldr	r1, [r0, #32]
   126a8:	movw	r0, #20141	; 0x4ead
   126ac:	movt	r0, #2
   126b0:	str	r1, [sp, #144]	; 0x90
   126b4:	bl	11350 <gettext@plt>
   126b8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   126bc:	movw	r2, #4
   126c0:	str	r0, [sp, #140]	; 0x8c
   126c4:	mov	r0, r2
   126c8:	bl	1b644 <__assert_fail@plt+0xa168>
   126cc:	movw	r1, #0
   126d0:	str	r0, [sp, #136]	; 0x88
   126d4:	mov	r0, r1
   126d8:	ldr	r1, [sp, #144]	; 0x90
   126dc:	ldr	r2, [sp, #140]	; 0x8c
   126e0:	ldr	r3, [sp, #136]	; 0x88
   126e4:	bl	112e4 <error@plt>
   126e8:	movw	r0, #0
   126ec:	strb	r0, [fp, #-153]	; 0xffffff67
   126f0:	b	12820 <__assert_fail@plt+0x1344>
   126f4:	ldr	r0, [fp, #16]
   126f8:	ldrb	r0, [r0, #13]
   126fc:	tst	r0, #1
   12700:	bne	12744 <__assert_fail@plt+0x1268>
   12704:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12708:	ldr	r1, [r0, #32]
   1270c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   12710:	movw	r0, #0
   12714:	movw	r3, #3
   12718:	str	r1, [sp, #132]	; 0x84
   1271c:	mov	r1, r3
   12720:	bl	1b798 <__assert_fail@plt+0xa2bc>
   12724:	movw	r1, #0
   12728:	str	r0, [sp, #128]	; 0x80
   1272c:	mov	r0, r1
   12730:	ldr	r1, [sp, #132]	; 0x84
   12734:	movw	r2, #19687	; 0x4ce7
   12738:	movt	r2, #2
   1273c:	ldr	r3, [sp, #128]	; 0x80
   12740:	bl	112e4 <error@plt>
   12744:	movw	r0, #0
   12748:	strb	r0, [fp, #-153]	; 0xffffff67
   1274c:	b	12820 <__assert_fail@plt+0x1344>
   12750:	ldr	r0, [fp, #16]
   12754:	ldrb	r0, [r0, #13]
   12758:	tst	r0, #1
   1275c:	bne	127a8 <__assert_fail@plt+0x12cc>
   12760:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12764:	ldr	r1, [r0, #32]
   12768:	movw	r0, #20158	; 0x4ebe
   1276c:	movt	r0, #2
   12770:	str	r1, [sp, #124]	; 0x7c
   12774:	bl	11350 <gettext@plt>
   12778:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1277c:	movw	r2, #4
   12780:	str	r0, [sp, #120]	; 0x78
   12784:	mov	r0, r2
   12788:	bl	1b644 <__assert_fail@plt+0xa168>
   1278c:	movw	r1, #0
   12790:	str	r0, [sp, #116]	; 0x74
   12794:	mov	r0, r1
   12798:	ldr	r1, [sp, #124]	; 0x7c
   1279c:	ldr	r2, [sp, #120]	; 0x78
   127a0:	ldr	r3, [sp, #116]	; 0x74
   127a4:	bl	112e4 <error@plt>
   127a8:	movw	r0, #0
   127ac:	strb	r0, [fp, #-153]	; 0xffffff67
   127b0:	b	12820 <__assert_fail@plt+0x1344>
   127b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   127b8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   127bc:	bl	1f2d4 <__assert_fail@plt+0xddf8>
   127c0:	tst	r0, #1
   127c4:	beq	12818 <__assert_fail@plt+0x133c>
   127c8:	b	127cc <__assert_fail@plt+0x12f0>
   127cc:	movw	r0, #20183	; 0x4ed7
   127d0:	movt	r0, #2
   127d4:	bl	11350 <gettext@plt>
   127d8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   127dc:	movw	r1, #0
   127e0:	str	r0, [sp, #112]	; 0x70
   127e4:	mov	r0, r1
   127e8:	movw	r1, #3
   127ec:	bl	1b798 <__assert_fail@plt+0xa2bc>
   127f0:	movw	r1, #0
   127f4:	str	r0, [sp, #108]	; 0x6c
   127f8:	mov	r0, r1
   127fc:	ldr	r2, [sp, #112]	; 0x70
   12800:	ldr	r3, [sp, #108]	; 0x6c
   12804:	bl	112e4 <error@plt>
   12808:	movw	r0, #0
   1280c:	and	r0, r0, #1
   12810:	strb	r0, [fp, #-17]	; 0xffffffef
   12814:	b	12f88 <__assert_fail@plt+0x1aac>
   12818:	b	12820 <__assert_fail@plt+0x1344>
   1281c:	b	12820 <__assert_fail@plt+0x1344>
   12820:	ldrb	r0, [fp, #-153]	; 0xffffff67
   12824:	tst	r0, #1
   12828:	bne	12840 <__assert_fail@plt+0x1364>
   1282c:	movw	r0, #0
   12830:	strb	r0, [fp, #-154]	; 0xffffff66
   12834:	movw	r0, #0
   12838:	str	r0, [fp, #-48]	; 0xffffffd0
   1283c:	b	129e0 <__assert_fail@plt+0x1504>
   12840:	ldr	r0, [fp, #8]
   12844:	cmn	r0, #1
   12848:	bne	128a4 <__assert_fail@plt+0x13c8>
   1284c:	ldr	r0, [fp, #12]
   12850:	cmn	r0, #1
   12854:	bne	128a4 <__assert_fail@plt+0x13c8>
   12858:	ldr	r0, [fp, #16]
   1285c:	ldr	r0, [r0]
   12860:	cmp	r0, #2
   12864:	bne	128a4 <__assert_fail@plt+0x13c8>
   12868:	ldr	r0, [fp, #16]
   1286c:	ldr	r0, [r0, #8]
   12870:	movw	r1, #0
   12874:	cmp	r0, r1
   12878:	bne	128a4 <__assert_fail@plt+0x13c8>
   1287c:	ldr	r0, [fp, #16]
   12880:	ldrb	r0, [r0, #12]
   12884:	tst	r0, #1
   12888:	bne	128a4 <__assert_fail@plt+0x13c8>
   1288c:	movw	r0, #1
   12890:	strb	r0, [fp, #-154]	; 0xffffff66
   12894:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12898:	add	r0, r0, #64	; 0x40
   1289c:	str	r0, [fp, #-48]	; 0xffffffd0
   128a0:	b	129dc <__assert_fail@plt+0x1500>
   128a4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   128a8:	add	r0, r0, #64	; 0x40
   128ac:	str	r0, [fp, #-48]	; 0xffffffd0
   128b0:	ldr	r0, [fp, #16]
   128b4:	ldrb	r0, [r0, #12]
   128b8:	tst	r0, #1
   128bc:	beq	1295c <__assert_fail@plt+0x1480>
   128c0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   128c4:	ldr	r0, [r0, #16]
   128c8:	and	r0, r0, #61440	; 0xf000
   128cc:	cmp	r0, #40960	; 0xa000
   128d0:	bne	1295c <__assert_fail@plt+0x1480>
   128d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   128d8:	ldr	r0, [r0, #32]
   128dc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   128e0:	sub	r2, fp, #152	; 0x98
   128e4:	movw	r3, #0
   128e8:	bl	2435c <__assert_fail@plt+0x12e80>
   128ec:	cmp	r0, #0
   128f0:	beq	12954 <__assert_fail@plt+0x1478>
   128f4:	ldr	r0, [fp, #16]
   128f8:	ldrb	r0, [r0, #13]
   128fc:	tst	r0, #1
   12900:	bne	1294c <__assert_fail@plt+0x1470>
   12904:	bl	11398 <__errno_location@plt>
   12908:	ldr	r1, [r0]
   1290c:	movw	r0, #20369	; 0x4f91
   12910:	movt	r0, #2
   12914:	str	r1, [sp, #104]	; 0x68
   12918:	bl	11350 <gettext@plt>
   1291c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   12920:	movw	r2, #4
   12924:	str	r0, [sp, #100]	; 0x64
   12928:	mov	r0, r2
   1292c:	bl	1b644 <__assert_fail@plt+0xa168>
   12930:	movw	r1, #0
   12934:	str	r0, [sp, #96]	; 0x60
   12938:	mov	r0, r1
   1293c:	ldr	r1, [sp, #104]	; 0x68
   12940:	ldr	r2, [sp, #100]	; 0x64
   12944:	ldr	r3, [sp, #96]	; 0x60
   12948:	bl	112e4 <error@plt>
   1294c:	movw	r0, #0
   12950:	strb	r0, [fp, #-153]	; 0xffffff67
   12954:	sub	r0, fp, #152	; 0x98
   12958:	str	r0, [fp, #-48]	; 0xffffffd0
   1295c:	ldrb	r0, [fp, #-153]	; 0xffffff67
   12960:	tst	r0, #1
   12964:	movw	r0, #0
   12968:	str	r0, [sp, #92]	; 0x5c
   1296c:	beq	129d0 <__assert_fail@plt+0x14f4>
   12970:	ldr	r0, [fp, #8]
   12974:	cmn	r0, #1
   12978:	beq	12998 <__assert_fail@plt+0x14bc>
   1297c:	ldr	r0, [fp, #8]
   12980:	ldr	r1, [fp, #-48]	; 0xffffffd0
   12984:	ldr	r1, [r1, #24]
   12988:	cmp	r0, r1
   1298c:	movw	r0, #0
   12990:	str	r0, [sp, #92]	; 0x5c
   12994:	bne	129d0 <__assert_fail@plt+0x14f4>
   12998:	ldr	r0, [fp, #12]
   1299c:	cmn	r0, #1
   129a0:	movw	r0, #1
   129a4:	str	r0, [sp, #88]	; 0x58
   129a8:	beq	129c8 <__assert_fail@plt+0x14ec>
   129ac:	ldr	r0, [fp, #12]
   129b0:	ldr	r1, [fp, #-48]	; 0xffffffd0
   129b4:	ldr	r1, [r1, #28]
   129b8:	cmp	r0, r1
   129bc:	movw	r0, #0
   129c0:	moveq	r0, #1
   129c4:	str	r0, [sp, #88]	; 0x58
   129c8:	ldr	r0, [sp, #88]	; 0x58
   129cc:	str	r0, [sp, #92]	; 0x5c
   129d0:	ldr	r0, [sp, #92]	; 0x5c
   129d4:	and	r0, r0, #1
   129d8:	strb	r0, [fp, #-154]	; 0xffffff66
   129dc:	b	129e0 <__assert_fail@plt+0x1504>
   129e0:	ldrb	r0, [fp, #-153]	; 0xffffff67
   129e4:	tst	r0, #1
   129e8:	beq	12b90 <__assert_fail@plt+0x16b4>
   129ec:	ldr	r0, [fp, #-28]	; 0xffffffe4
   129f0:	ldrh	r0, [r0, #56]	; 0x38
   129f4:	cmp	r0, #1
   129f8:	beq	12a2c <__assert_fail@plt+0x1550>
   129fc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12a00:	ldrh	r0, [r0, #56]	; 0x38
   12a04:	cmp	r0, #2
   12a08:	beq	12a2c <__assert_fail@plt+0x1550>
   12a0c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12a10:	ldrh	r0, [r0, #56]	; 0x38
   12a14:	cmp	r0, #6
   12a18:	beq	12a2c <__assert_fail@plt+0x1550>
   12a1c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12a20:	ldrh	r0, [r0, #56]	; 0x38
   12a24:	cmp	r0, #4
   12a28:	bne	12b90 <__assert_fail@plt+0x16b4>
   12a2c:	ldr	r0, [fp, #16]
   12a30:	ldr	r0, [r0, #8]
   12a34:	movw	r1, #0
   12a38:	cmp	r0, r1
   12a3c:	beq	12b90 <__assert_fail@plt+0x16b4>
   12a40:	ldr	r0, [fp, #-48]	; 0xffffffd0
   12a44:	ldr	r1, [r0, #96]	; 0x60
   12a48:	ldr	r0, [r0, #100]	; 0x64
   12a4c:	ldr	r2, [fp, #16]
   12a50:	ldr	r2, [r2, #8]
   12a54:	ldr	r3, [r2]
   12a58:	ldr	r2, [r2, #4]
   12a5c:	eor	r0, r0, r2
   12a60:	eor	r1, r1, r3
   12a64:	orr	r0, r1, r0
   12a68:	cmp	r0, #0
   12a6c:	bne	12b90 <__assert_fail@plt+0x16b4>
   12a70:	b	12a74 <__assert_fail@plt+0x1598>
   12a74:	ldr	r0, [fp, #-48]	; 0xffffffd0
   12a78:	ldr	r1, [r0]
   12a7c:	ldr	r0, [r0, #4]
   12a80:	ldr	r2, [fp, #16]
   12a84:	ldr	r2, [r2, #8]
   12a88:	ldr	r3, [r2, #8]
   12a8c:	ldr	r2, [r2, #12]
   12a90:	eor	r0, r0, r2
   12a94:	eor	r1, r1, r3
   12a98:	orr	r0, r1, r0
   12a9c:	cmp	r0, #0
   12aa0:	bne	12b90 <__assert_fail@plt+0x16b4>
   12aa4:	b	12aa8 <__assert_fail@plt+0x15cc>
   12aa8:	b	12aac <__assert_fail@plt+0x15d0>
   12aac:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12ab0:	movw	r1, #22051	; 0x5623
   12ab4:	movt	r1, #2
   12ab8:	bl	111e8 <strcmp@plt>
   12abc:	cmp	r0, #0
   12ac0:	bne	12b00 <__assert_fail@plt+0x1624>
   12ac4:	movw	r0, #19989	; 0x4e15
   12ac8:	movt	r0, #2
   12acc:	bl	11350 <gettext@plt>
   12ad0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   12ad4:	movw	r2, #4
   12ad8:	str	r0, [sp, #84]	; 0x54
   12adc:	mov	r0, r2
   12ae0:	bl	1b644 <__assert_fail@plt+0xa168>
   12ae4:	movw	r1, #0
   12ae8:	str	r0, [sp, #80]	; 0x50
   12aec:	mov	r0, r1
   12af0:	ldr	r2, [sp, #84]	; 0x54
   12af4:	ldr	r3, [sp, #80]	; 0x50
   12af8:	bl	112e4 <error@plt>
   12afc:	b	12b60 <__assert_fail@plt+0x1684>
   12b00:	movw	r0, #20034	; 0x4e42
   12b04:	movt	r0, #2
   12b08:	bl	11350 <gettext@plt>
   12b0c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   12b10:	movw	r1, #0
   12b14:	str	r0, [sp, #76]	; 0x4c
   12b18:	mov	r0, r1
   12b1c:	movw	r1, #4
   12b20:	bl	1b570 <__assert_fail@plt+0xa094>
   12b24:	movw	r1, #1
   12b28:	str	r0, [sp, #72]	; 0x48
   12b2c:	mov	r0, r1
   12b30:	movw	r1, #4
   12b34:	movw	r2, #22051	; 0x5623
   12b38:	movt	r2, #2
   12b3c:	bl	1b570 <__assert_fail@plt+0xa094>
   12b40:	movw	r1, #0
   12b44:	str	r0, [sp, #68]	; 0x44
   12b48:	mov	r0, r1
   12b4c:	ldr	r2, [sp, #76]	; 0x4c
   12b50:	ldr	r3, [sp, #72]	; 0x48
   12b54:	ldr	ip, [sp, #68]	; 0x44
   12b58:	str	ip, [sp]
   12b5c:	bl	112e4 <error@plt>
   12b60:	movw	r0, #20092	; 0x4e7c
   12b64:	movt	r0, #2
   12b68:	bl	11350 <gettext@plt>
   12b6c:	movw	r1, #0
   12b70:	str	r0, [sp, #64]	; 0x40
   12b74:	mov	r0, r1
   12b78:	ldr	r2, [sp, #64]	; 0x40
   12b7c:	bl	112e4 <error@plt>
   12b80:	movw	r0, #0
   12b84:	and	r0, r0, #1
   12b88:	strb	r0, [fp, #-17]	; 0xffffffef
   12b8c:	b	12f88 <__assert_fail@plt+0x1aac>
   12b90:	ldrb	r0, [fp, #-154]	; 0xffffff66
   12b94:	tst	r0, #1
   12b98:	beq	12d6c <__assert_fail@plt+0x1890>
   12b9c:	ldr	r0, [fp, #16]
   12ba0:	ldrb	r0, [r0, #12]
   12ba4:	tst	r0, #1
   12ba8:	bne	12c08 <__assert_fail@plt+0x172c>
   12bac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12bb0:	ldr	r0, [r0, #32]
   12bb4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12bb8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   12bbc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   12bc0:	bl	13684 <__assert_fail@plt+0x21a8>
   12bc4:	cmp	r0, #0
   12bc8:	movw	r0, #0
   12bcc:	moveq	r0, #1
   12bd0:	and	r0, r0, #1
   12bd4:	strb	r0, [fp, #-153]	; 0xffffff67
   12bd8:	ldrb	r0, [fp, #-153]	; 0xffffff67
   12bdc:	tst	r0, #1
   12be0:	bne	12c04 <__assert_fail@plt+0x1728>
   12be4:	bl	11398 <__errno_location@plt>
   12be8:	ldr	r0, [r0]
   12bec:	cmp	r0, #95	; 0x5f
   12bf0:	bne	12c04 <__assert_fail@plt+0x1728>
   12bf4:	movw	r0, #1
   12bf8:	strb	r0, [fp, #-153]	; 0xffffff67
   12bfc:	movw	r0, #0
   12c00:	strb	r0, [fp, #-155]	; 0xffffff65
   12c04:	b	12cd0 <__assert_fail@plt+0x17f4>
   12c08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12c0c:	ldr	r0, [r0, #32]
   12c10:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12c14:	ldr	r2, [fp, #-48]	; 0xffffffd0
   12c18:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12c1c:	ldr	ip, [fp, #-36]	; 0xffffffdc
   12c20:	ldr	lr, [fp, #8]
   12c24:	ldr	r4, [fp, #12]
   12c28:	mov	r5, sp
   12c2c:	str	r4, [r5, #8]
   12c30:	str	lr, [r5, #4]
   12c34:	str	ip, [r5]
   12c38:	bl	12f98 <__assert_fail@plt+0x1abc>
   12c3c:	str	r0, [fp, #-160]	; 0xffffff60
   12c40:	ldr	r0, [fp, #-160]	; 0xffffff60
   12c44:	sub	r0, r0, #2
   12c48:	cmp	r0, #4
   12c4c:	str	r0, [sp, #60]	; 0x3c
   12c50:	bhi	12cc8 <__assert_fail@plt+0x17ec>
   12c54:	add	r0, pc, #8
   12c58:	ldr	r1, [sp, #60]	; 0x3c
   12c5c:	ldr	r0, [r0, r1, lsl #2]
   12c60:	mov	pc, r0
   12c64:	andeq	r2, r1, r8, ror ip
   12c68:			; <UNDEFINED> instruction: 0x00012cb8
   12c6c:			; <UNDEFINED> instruction: 0x00012cb8
   12c70:	andeq	r2, r1, ip, ror ip
   12c74:	andeq	r2, r1, ip, lsr #25
   12c78:	b	12ccc <__assert_fail@plt+0x17f0>
   12c7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12c80:	ldr	r0, [r0, #32]
   12c84:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12c88:	ldr	r2, [fp, #-32]	; 0xffffffe0
   12c8c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   12c90:	bl	13644 <__assert_fail@plt+0x2168>
   12c94:	cmp	r0, #0
   12c98:	movw	r0, #0
   12c9c:	moveq	r0, #1
   12ca0:	and	r0, r0, #1
   12ca4:	strb	r0, [fp, #-153]	; 0xffffff67
   12ca8:	b	12ccc <__assert_fail@plt+0x17f0>
   12cac:	movw	r0, #0
   12cb0:	strb	r0, [fp, #-153]	; 0xffffff67
   12cb4:	b	12ccc <__assert_fail@plt+0x17f0>
   12cb8:	movw	r0, #0
   12cbc:	strb	r0, [fp, #-154]	; 0xffffff66
   12cc0:	strb	r0, [fp, #-153]	; 0xffffff67
   12cc4:	b	12ccc <__assert_fail@plt+0x17f0>
   12cc8:	bl	11494 <abort@plt>
   12ccc:	b	12cd0 <__assert_fail@plt+0x17f4>
   12cd0:	ldrb	r0, [fp, #-154]	; 0xffffff66
   12cd4:	tst	r0, #1
   12cd8:	beq	12d68 <__assert_fail@plt+0x188c>
   12cdc:	ldrb	r0, [fp, #-153]	; 0xffffff67
   12ce0:	tst	r0, #1
   12ce4:	bne	12d68 <__assert_fail@plt+0x188c>
   12ce8:	ldr	r0, [fp, #16]
   12cec:	ldrb	r0, [r0, #13]
   12cf0:	tst	r0, #1
   12cf4:	bne	12d68 <__assert_fail@plt+0x188c>
   12cf8:	bl	11398 <__errno_location@plt>
   12cfc:	ldr	r1, [r0]
   12d00:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12d04:	cmn	r0, #1
   12d08:	str	r1, [sp, #56]	; 0x38
   12d0c:	beq	12d24 <__assert_fail@plt+0x1848>
   12d10:	movw	r0, #20391	; 0x4fa7
   12d14:	movt	r0, #2
   12d18:	bl	11350 <gettext@plt>
   12d1c:	str	r0, [sp, #52]	; 0x34
   12d20:	b	12d34 <__assert_fail@plt+0x1858>
   12d24:	movw	r0, #20416	; 0x4fc0
   12d28:	movt	r0, #2
   12d2c:	bl	11350 <gettext@plt>
   12d30:	str	r0, [sp, #52]	; 0x34
   12d34:	ldr	r0, [sp, #52]	; 0x34
   12d38:	ldr	r1, [fp, #-40]	; 0xffffffd8
   12d3c:	movw	r2, #4
   12d40:	str	r0, [sp, #48]	; 0x30
   12d44:	mov	r0, r2
   12d48:	bl	1b644 <__assert_fail@plt+0xa168>
   12d4c:	movw	r1, #0
   12d50:	str	r0, [sp, #44]	; 0x2c
   12d54:	mov	r0, r1
   12d58:	ldr	r1, [sp, #56]	; 0x38
   12d5c:	ldr	r2, [sp, #48]	; 0x30
   12d60:	ldr	r3, [sp, #44]	; 0x2c
   12d64:	bl	112e4 <error@plt>
   12d68:	b	12d6c <__assert_fail@plt+0x1890>
   12d6c:	ldr	r0, [fp, #16]
   12d70:	ldr	r0, [r0]
   12d74:	cmp	r0, #2
   12d78:	beq	12f5c <__assert_fail@plt+0x1a80>
   12d7c:	ldrb	r0, [fp, #-154]	; 0xffffff66
   12d80:	tst	r0, #1
   12d84:	movw	r0, #0
   12d88:	str	r0, [sp, #40]	; 0x28
   12d8c:	beq	12e28 <__assert_fail@plt+0x194c>
   12d90:	ldrb	r0, [fp, #-153]	; 0xffffff67
   12d94:	tst	r0, #1
   12d98:	movw	r0, #0
   12d9c:	str	r0, [sp, #40]	; 0x28
   12da0:	beq	12e28 <__assert_fail@plt+0x194c>
   12da4:	ldrb	r0, [fp, #-155]	; 0xffffff65
   12da8:	tst	r0, #1
   12dac:	movw	r0, #0
   12db0:	str	r0, [sp, #40]	; 0x28
   12db4:	beq	12e28 <__assert_fail@plt+0x194c>
   12db8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12dbc:	cmn	r0, #1
   12dc0:	beq	12de0 <__assert_fail@plt+0x1904>
   12dc4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12dc8:	ldr	r1, [fp, #-48]	; 0xffffffd0
   12dcc:	ldr	r1, [r1, #24]
   12dd0:	cmp	r0, r1
   12dd4:	movw	r0, #0
   12dd8:	str	r0, [sp, #36]	; 0x24
   12ddc:	bne	12e18 <__assert_fail@plt+0x193c>
   12de0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12de4:	cmn	r0, #1
   12de8:	movw	r0, #1
   12dec:	str	r0, [sp, #32]
   12df0:	beq	12e10 <__assert_fail@plt+0x1934>
   12df4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12df8:	ldr	r1, [fp, #-48]	; 0xffffffd0
   12dfc:	ldr	r1, [r1, #28]
   12e00:	cmp	r0, r1
   12e04:	movw	r0, #0
   12e08:	moveq	r0, #1
   12e0c:	str	r0, [sp, #32]
   12e10:	ldr	r0, [sp, #32]
   12e14:	str	r0, [sp, #36]	; 0x24
   12e18:	ldr	r0, [sp, #36]	; 0x24
   12e1c:	mvn	r1, #0
   12e20:	eor	r0, r0, r1
   12e24:	str	r0, [sp, #40]	; 0x28
   12e28:	ldr	r0, [sp, #40]	; 0x28
   12e2c:	and	r0, r0, #1
   12e30:	strb	r0, [fp, #-161]	; 0xffffff5f
   12e34:	ldrb	r0, [fp, #-161]	; 0xffffff5f
   12e38:	tst	r0, #1
   12e3c:	bne	12e50 <__assert_fail@plt+0x1974>
   12e40:	ldr	r0, [fp, #16]
   12e44:	ldr	r0, [r0]
   12e48:	cmp	r0, #0
   12e4c:	bne	12f58 <__assert_fail@plt+0x1a7c>
   12e50:	ldrb	r0, [fp, #-153]	; 0xffffff67
   12e54:	tst	r0, #1
   12e58:	bne	12e68 <__assert_fail@plt+0x198c>
   12e5c:	movw	r0, #3
   12e60:	str	r0, [sp, #28]
   12e64:	b	12ea4 <__assert_fail@plt+0x19c8>
   12e68:	ldrb	r0, [fp, #-155]	; 0xffffff65
   12e6c:	tst	r0, #1
   12e70:	bne	12e80 <__assert_fail@plt+0x19a4>
   12e74:	movw	r0, #1
   12e78:	str	r0, [sp, #24]
   12e7c:	b	12e9c <__assert_fail@plt+0x19c0>
   12e80:	ldrb	r0, [fp, #-161]	; 0xffffff5f
   12e84:	mvn	r1, #0
   12e88:	eor	r0, r0, r1
   12e8c:	tst	r0, #1
   12e90:	movw	r0, #4
   12e94:	moveq	r0, #2
   12e98:	str	r0, [sp, #24]
   12e9c:	ldr	r0, [sp, #24]
   12ea0:	str	r0, [sp, #28]
   12ea4:	ldr	r0, [sp, #28]
   12ea8:	str	r0, [fp, #-168]	; 0xffffff58
   12eac:	ldr	r0, [fp, #-48]	; 0xffffffd0
   12eb0:	movw	r1, #0
   12eb4:	cmp	r0, r1
   12eb8:	beq	12ed0 <__assert_fail@plt+0x19f4>
   12ebc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   12ec0:	ldr	r0, [r0, #24]
   12ec4:	bl	12188 <__assert_fail@plt+0xcac>
   12ec8:	str	r0, [sp, #20]
   12ecc:	b	12edc <__assert_fail@plt+0x1a00>
   12ed0:	movw	r0, #0
   12ed4:	str	r0, [sp, #20]
   12ed8:	b	12edc <__assert_fail@plt+0x1a00>
   12edc:	ldr	r0, [sp, #20]
   12ee0:	str	r0, [fp, #-172]	; 0xffffff54
   12ee4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   12ee8:	movw	r1, #0
   12eec:	cmp	r0, r1
   12ef0:	beq	12f08 <__assert_fail@plt+0x1a2c>
   12ef4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   12ef8:	ldr	r0, [r0, #28]
   12efc:	bl	12128 <__assert_fail@plt+0xc4c>
   12f00:	str	r0, [sp, #16]
   12f04:	b	12f14 <__assert_fail@plt+0x1a38>
   12f08:	movw	r0, #0
   12f0c:	str	r0, [sp, #16]
   12f10:	b	12f14 <__assert_fail@plt+0x1a38>
   12f14:	ldr	r0, [sp, #16]
   12f18:	str	r0, [fp, #-176]	; 0xffffff50
   12f1c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12f20:	ldr	r1, [fp, #-168]	; 0xffffff58
   12f24:	ldr	r2, [fp, #-172]	; 0xffffff54
   12f28:	ldr	r3, [fp, #-176]	; 0xffffff50
   12f2c:	ldr	ip, [fp, #16]
   12f30:	ldr	ip, [ip, #16]
   12f34:	ldr	lr, [fp, #16]
   12f38:	ldr	lr, [lr, #20]
   12f3c:	str	ip, [sp]
   12f40:	str	lr, [sp, #4]
   12f44:	bl	1322c <__assert_fail@plt+0x1d50>
   12f48:	ldr	r0, [fp, #-172]	; 0xffffff54
   12f4c:	bl	1382c <__assert_fail@plt+0x2350>
   12f50:	ldr	r0, [fp, #-176]	; 0xffffff50
   12f54:	bl	1382c <__assert_fail@plt+0x2350>
   12f58:	b	12f5c <__assert_fail@plt+0x1a80>
   12f5c:	ldr	r0, [fp, #16]
   12f60:	ldrb	r0, [r0, #4]
   12f64:	tst	r0, #1
   12f68:	bne	12f7c <__assert_fail@plt+0x1aa0>
   12f6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12f70:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12f74:	movw	r2, #4
   12f78:	bl	16890 <__assert_fail@plt+0x53b4>
   12f7c:	ldrb	r0, [fp, #-153]	; 0xffffff67
   12f80:	and	r0, r0, #1
   12f84:	strb	r0, [fp, #-17]	; 0xffffffef
   12f88:	ldrb	r0, [fp, #-17]	; 0xffffffef
   12f8c:	and	r0, r0, #1
   12f90:	sub	sp, fp, #16
   12f94:	pop	{r4, r5, r6, r7, fp, pc}
   12f98:	push	{r4, sl, fp, lr}
   12f9c:	add	fp, sp, #8
   12fa0:	sub	sp, sp, #152	; 0x98
   12fa4:	ldr	ip, [fp, #16]
   12fa8:	ldr	lr, [fp, #12]
   12fac:	ldr	r4, [fp, #8]
   12fb0:	str	r0, [fp, #-16]
   12fb4:	str	r1, [fp, #-20]	; 0xffffffec
   12fb8:	str	r2, [fp, #-24]	; 0xffffffe8
   12fbc:	str	r3, [fp, #-28]	; 0xffffffe4
   12fc0:	movw	r0, #2
   12fc4:	str	r0, [fp, #-32]	; 0xffffffe0
   12fc8:	movw	r0, #2304	; 0x900
   12fcc:	str	r0, [sp, #20]
   12fd0:	ldr	r0, [fp, #12]
   12fd4:	cmn	r0, #1
   12fd8:	bne	12ff4 <__assert_fail@plt+0x1b18>
   12fdc:	ldr	r0, [fp, #16]
   12fe0:	cmn	r0, #1
   12fe4:	bne	12ff4 <__assert_fail@plt+0x1b18>
   12fe8:	movw	r0, #5
   12fec:	str	r0, [fp, #-12]
   12ff0:	b	13220 <__assert_fail@plt+0x1d44>
   12ff4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12ff8:	ldr	r0, [r0, #16]
   12ffc:	and	r0, r0, #61440	; 0xf000
   13000:	cmp	r0, #32768	; 0x8000
   13004:	beq	1303c <__assert_fail@plt+0x1b60>
   13008:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1300c:	ldr	r0, [r0, #16]
   13010:	and	r0, r0, #61440	; 0xf000
   13014:	cmp	r0, #16384	; 0x4000
   13018:	bne	1302c <__assert_fail@plt+0x1b50>
   1301c:	ldr	r0, [sp, #20]
   13020:	orr	r0, r0, #16384	; 0x4000
   13024:	str	r0, [sp, #20]
   13028:	b	13038 <__assert_fail@plt+0x1b5c>
   1302c:	movw	r0, #5
   13030:	str	r0, [fp, #-12]
   13034:	b	13220 <__assert_fail@plt+0x1d44>
   13038:	b	1303c <__assert_fail@plt+0x1b60>
   1303c:	ldr	r0, [fp, #-16]
   13040:	ldr	r1, [fp, #-20]	; 0xffffffec
   13044:	ldr	r2, [sp, #20]
   13048:	orr	r2, r2, #0
   1304c:	bl	11374 <openat64@plt>
   13050:	str	r0, [sp, #16]
   13054:	ldr	r0, [sp, #16]
   13058:	movw	r1, #0
   1305c:	cmp	r1, r0
   13060:	ble	130d4 <__assert_fail@plt+0x1bf8>
   13064:	bl	11398 <__errno_location@plt>
   13068:	ldr	r0, [r0]
   1306c:	cmp	r0, #13
   13070:	bne	130ac <__assert_fail@plt+0x1bd0>
   13074:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13078:	ldr	r0, [r0, #16]
   1307c:	and	r0, r0, #61440	; 0xf000
   13080:	cmp	r0, #32768	; 0x8000
   13084:	bne	130ac <__assert_fail@plt+0x1bd0>
   13088:	ldr	r0, [fp, #-16]
   1308c:	ldr	r1, [fp, #-20]	; 0xffffffec
   13090:	ldr	r2, [sp, #20]
   13094:	orr	r2, r2, #1
   13098:	bl	11374 <openat64@plt>
   1309c:	str	r0, [sp, #16]
   130a0:	movw	r1, #0
   130a4:	cmp	r1, r0
   130a8:	ble	130d4 <__assert_fail@plt+0x1bf8>
   130ac:	bl	11398 <__errno_location@plt>
   130b0:	ldr	r0, [r0]
   130b4:	cmp	r0, #13
   130b8:	movw	r0, #0
   130bc:	moveq	r0, #1
   130c0:	tst	r0, #1
   130c4:	movw	r0, #5
   130c8:	moveq	r0, #6
   130cc:	str	r0, [fp, #-12]
   130d0:	b	13220 <__assert_fail@plt+0x1d44>
   130d4:	ldr	r0, [sp, #16]
   130d8:	add	r1, sp, #24
   130dc:	bl	2433c <__assert_fail@plt+0x12e60>
   130e0:	cmp	r0, #0
   130e4:	beq	130f4 <__assert_fail@plt+0x1c18>
   130e8:	movw	r0, #6
   130ec:	str	r0, [fp, #-32]	; 0xffffffe0
   130f0:	b	131ec <__assert_fail@plt+0x1d10>
   130f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   130f8:	ldr	r1, [r0, #96]	; 0x60
   130fc:	ldr	r0, [r0, #100]	; 0x64
   13100:	ldr	r2, [sp, #120]	; 0x78
   13104:	ldr	r3, [sp, #124]	; 0x7c
   13108:	eor	r0, r0, r3
   1310c:	eor	r1, r1, r2
   13110:	orr	r0, r1, r0
   13114:	cmp	r0, #0
   13118:	bne	1314c <__assert_fail@plt+0x1c70>
   1311c:	b	13120 <__assert_fail@plt+0x1c44>
   13120:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13124:	ldr	r1, [r0]
   13128:	ldr	r0, [r0, #4]
   1312c:	ldr	r2, [sp, #24]
   13130:	ldr	r3, [sp, #28]
   13134:	eor	r0, r0, r3
   13138:	eor	r1, r1, r2
   1313c:	orr	r0, r1, r0
   13140:	cmp	r0, #0
   13144:	beq	13158 <__assert_fail@plt+0x1c7c>
   13148:	b	1314c <__assert_fail@plt+0x1c70>
   1314c:	movw	r0, #4
   13150:	str	r0, [fp, #-32]	; 0xffffffe0
   13154:	b	131e8 <__assert_fail@plt+0x1d0c>
   13158:	ldr	r0, [fp, #12]
   1315c:	cmn	r0, #1
   13160:	beq	13174 <__assert_fail@plt+0x1c98>
   13164:	ldr	r0, [fp, #12]
   13168:	ldr	r1, [sp, #48]	; 0x30
   1316c:	cmp	r0, r1
   13170:	bne	131e4 <__assert_fail@plt+0x1d08>
   13174:	ldr	r0, [fp, #16]
   13178:	cmn	r0, #1
   1317c:	beq	13190 <__assert_fail@plt+0x1cb4>
   13180:	ldr	r0, [fp, #16]
   13184:	ldr	r1, [sp, #52]	; 0x34
   13188:	cmp	r0, r1
   1318c:	bne	131e4 <__assert_fail@plt+0x1d08>
   13190:	ldr	r0, [sp, #16]
   13194:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13198:	ldr	r2, [fp, #8]
   1319c:	bl	11380 <fchown@plt>
   131a0:	cmp	r0, #0
   131a4:	bne	131d8 <__assert_fail@plt+0x1cfc>
   131a8:	ldr	r0, [sp, #16]
   131ac:	bl	114a0 <close@plt>
   131b0:	cmp	r0, #0
   131b4:	movw	r0, #0
   131b8:	moveq	r0, #1
   131bc:	tst	r0, #1
   131c0:	movw	r0, #2
   131c4:	moveq	r0, #6
   131c8:	str	r0, [fp, #-32]	; 0xffffffe0
   131cc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   131d0:	str	r0, [fp, #-12]
   131d4:	b	13220 <__assert_fail@plt+0x1d44>
   131d8:	movw	r0, #6
   131dc:	str	r0, [fp, #-32]	; 0xffffffe0
   131e0:	b	131e4 <__assert_fail@plt+0x1d08>
   131e4:	b	131e8 <__assert_fail@plt+0x1d0c>
   131e8:	b	131ec <__assert_fail@plt+0x1d10>
   131ec:	bl	11398 <__errno_location@plt>
   131f0:	ldr	r0, [r0]
   131f4:	str	r0, [sp, #12]
   131f8:	ldr	r0, [sp, #16]
   131fc:	bl	114a0 <close@plt>
   13200:	ldr	r1, [sp, #12]
   13204:	str	r0, [sp, #8]
   13208:	str	r1, [sp, #4]
   1320c:	bl	11398 <__errno_location@plt>
   13210:	ldr	r1, [sp, #4]
   13214:	str	r1, [r0]
   13218:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1321c:	str	r0, [fp, #-12]
   13220:	ldr	r0, [fp, #-12]
   13224:	sub	sp, fp, #8
   13228:	pop	{r4, sl, fp, pc}
   1322c:	push	{fp, lr}
   13230:	mov	fp, sp
   13234:	sub	sp, sp, #104	; 0x68
   13238:	ldr	ip, [fp, #12]
   1323c:	ldr	lr, [fp, #8]
   13240:	str	r0, [fp, #-4]
   13244:	str	r1, [fp, #-8]
   13248:	str	r2, [fp, #-12]
   1324c:	str	r3, [fp, #-16]
   13250:	ldr	r0, [fp, #-8]
   13254:	cmp	r0, #1
   13258:	bne	13294 <__assert_fail@plt+0x1db8>
   1325c:	movw	r0, #20437	; 0x4fd5
   13260:	movt	r0, #2
   13264:	bl	11350 <gettext@plt>
   13268:	ldr	r1, [fp, #-4]
   1326c:	movw	r2, #4
   13270:	str	r0, [fp, #-32]	; 0xffffffe0
   13274:	mov	r0, r2
   13278:	bl	1b644 <__assert_fail@plt+0xa168>
   1327c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   13280:	str	r0, [fp, #-36]	; 0xffffffdc
   13284:	mov	r0, r1
   13288:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1328c:	bl	11200 <printf@plt>
   13290:	b	13574 <__assert_fail@plt+0x2098>
   13294:	ldr	r0, [fp, #8]
   13298:	ldr	r1, [fp, #12]
   1329c:	bl	1357c <__assert_fail@plt+0x20a0>
   132a0:	str	r0, [fp, #-28]	; 0xffffffe4
   132a4:	ldr	r0, [fp, #8]
   132a8:	movw	r1, #0
   132ac:	cmp	r0, r1
   132b0:	beq	132c0 <__assert_fail@plt+0x1de4>
   132b4:	ldr	r0, [fp, #-12]
   132b8:	str	r0, [fp, #-40]	; 0xffffffd8
   132bc:	b	132cc <__assert_fail@plt+0x1df0>
   132c0:	movw	r0, #0
   132c4:	str	r0, [fp, #-40]	; 0xffffffd8
   132c8:	b	132cc <__assert_fail@plt+0x1df0>
   132cc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   132d0:	ldr	r1, [fp, #12]
   132d4:	movw	r2, #0
   132d8:	cmp	r1, r2
   132dc:	str	r0, [fp, #-44]	; 0xffffffd4
   132e0:	beq	132f0 <__assert_fail@plt+0x1e14>
   132e4:	ldr	r0, [fp, #-16]
   132e8:	str	r0, [fp, #-48]	; 0xffffffd0
   132ec:	b	132fc <__assert_fail@plt+0x1e20>
   132f0:	movw	r0, #0
   132f4:	str	r0, [fp, #-48]	; 0xffffffd0
   132f8:	b	132fc <__assert_fail@plt+0x1e20>
   132fc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   13300:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13304:	str	r0, [sp, #52]	; 0x34
   13308:	mov	r0, r1
   1330c:	ldr	r1, [sp, #52]	; 0x34
   13310:	bl	1357c <__assert_fail@plt+0x20a0>
   13314:	str	r0, [fp, #-24]	; 0xffffffe8
   13318:	ldr	r0, [fp, #-8]
   1331c:	cmp	r0, #2
   13320:	str	r0, [sp, #48]	; 0x30
   13324:	beq	1334c <__assert_fail@plt+0x1e70>
   13328:	b	1332c <__assert_fail@plt+0x1e50>
   1332c:	ldr	r0, [sp, #48]	; 0x30
   13330:	cmp	r0, #3
   13334:	beq	133b8 <__assert_fail@plt+0x1edc>
   13338:	b	1333c <__assert_fail@plt+0x1e60>
   1333c:	ldr	r0, [sp, #48]	; 0x30
   13340:	cmp	r0, #4
   13344:	beq	134b8 <__assert_fail@plt+0x1fdc>
   13348:	b	13524 <__assert_fail@plt+0x2048>
   1334c:	ldr	r0, [fp, #8]
   13350:	movw	r1, #0
   13354:	cmp	r0, r1
   13358:	beq	13370 <__assert_fail@plt+0x1e94>
   1335c:	movw	r0, #20493	; 0x500d
   13360:	movt	r0, #2
   13364:	bl	11350 <gettext@plt>
   13368:	str	r0, [sp, #44]	; 0x2c
   1336c:	b	133ac <__assert_fail@plt+0x1ed0>
   13370:	ldr	r0, [fp, #12]
   13374:	movw	r1, #0
   13378:	cmp	r0, r1
   1337c:	beq	13394 <__assert_fail@plt+0x1eb8>
   13380:	movw	r0, #20532	; 0x5034
   13384:	movt	r0, #2
   13388:	bl	11350 <gettext@plt>
   1338c:	str	r0, [sp, #40]	; 0x28
   13390:	b	133a4 <__assert_fail@plt+0x1ec8>
   13394:	movw	r0, #20567	; 0x5057
   13398:	movt	r0, #2
   1339c:	bl	11350 <gettext@plt>
   133a0:	str	r0, [sp, #40]	; 0x28
   133a4:	ldr	r0, [sp, #40]	; 0x28
   133a8:	str	r0, [sp, #44]	; 0x2c
   133ac:	ldr	r0, [sp, #44]	; 0x2c
   133b0:	str	r0, [fp, #-20]	; 0xffffffec
   133b4:	b	13528 <__assert_fail@plt+0x204c>
   133b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   133bc:	movw	r1, #0
   133c0:	cmp	r0, r1
   133c4:	beq	13434 <__assert_fail@plt+0x1f58>
   133c8:	ldr	r0, [fp, #8]
   133cc:	movw	r1, #0
   133d0:	cmp	r0, r1
   133d4:	beq	133ec <__assert_fail@plt+0x1f10>
   133d8:	movw	r0, #20597	; 0x5075
   133dc:	movt	r0, #2
   133e0:	bl	11350 <gettext@plt>
   133e4:	str	r0, [sp, #36]	; 0x24
   133e8:	b	13428 <__assert_fail@plt+0x1f4c>
   133ec:	ldr	r0, [fp, #12]
   133f0:	movw	r1, #0
   133f4:	cmp	r0, r1
   133f8:	beq	13410 <__assert_fail@plt+0x1f34>
   133fc:	movw	r0, #20645	; 0x50a5
   13400:	movt	r0, #2
   13404:	bl	11350 <gettext@plt>
   13408:	str	r0, [sp, #32]
   1340c:	b	13420 <__assert_fail@plt+0x1f44>
   13410:	movw	r0, #20689	; 0x50d1
   13414:	movt	r0, #2
   13418:	bl	11350 <gettext@plt>
   1341c:	str	r0, [sp, #32]
   13420:	ldr	r0, [sp, #32]
   13424:	str	r0, [sp, #36]	; 0x24
   13428:	ldr	r0, [sp, #36]	; 0x24
   1342c:	str	r0, [fp, #-20]	; 0xffffffec
   13430:	b	134b4 <__assert_fail@plt+0x1fd8>
   13434:	ldr	r0, [fp, #8]
   13438:	movw	r1, #0
   1343c:	cmp	r0, r1
   13440:	beq	13458 <__assert_fail@plt+0x1f7c>
   13444:	movw	r0, #20723	; 0x50f3
   13448:	movt	r0, #2
   1344c:	bl	11350 <gettext@plt>
   13450:	str	r0, [sp, #28]
   13454:	b	13494 <__assert_fail@plt+0x1fb8>
   13458:	ldr	r0, [fp, #12]
   1345c:	movw	r1, #0
   13460:	cmp	r0, r1
   13464:	beq	1347c <__assert_fail@plt+0x1fa0>
   13468:	movw	r0, #20763	; 0x511b
   1346c:	movt	r0, #2
   13470:	bl	11350 <gettext@plt>
   13474:	str	r0, [sp, #24]
   13478:	b	1348c <__assert_fail@plt+0x1fb0>
   1347c:	movw	r0, #20689	; 0x50d1
   13480:	movt	r0, #2
   13484:	bl	11350 <gettext@plt>
   13488:	str	r0, [sp, #24]
   1348c:	ldr	r0, [sp, #24]
   13490:	str	r0, [sp, #28]
   13494:	ldr	r0, [sp, #28]
   13498:	str	r0, [fp, #-20]	; 0xffffffec
   1349c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   134a0:	bl	1382c <__assert_fail@plt+0x2350>
   134a4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   134a8:	str	r0, [fp, #-24]	; 0xffffffe8
   134ac:	movw	r0, #0
   134b0:	str	r0, [fp, #-28]	; 0xffffffe4
   134b4:	b	13528 <__assert_fail@plt+0x204c>
   134b8:	ldr	r0, [fp, #8]
   134bc:	movw	r1, #0
   134c0:	cmp	r0, r1
   134c4:	beq	134dc <__assert_fail@plt+0x2000>
   134c8:	movw	r0, #20799	; 0x513f
   134cc:	movt	r0, #2
   134d0:	bl	11350 <gettext@plt>
   134d4:	str	r0, [sp, #20]
   134d8:	b	13518 <__assert_fail@plt+0x203c>
   134dc:	ldr	r0, [fp, #12]
   134e0:	movw	r1, #0
   134e4:	cmp	r0, r1
   134e8:	beq	13500 <__assert_fail@plt+0x2024>
   134ec:	movw	r0, #20831	; 0x515f
   134f0:	movt	r0, #2
   134f4:	bl	11350 <gettext@plt>
   134f8:	str	r0, [sp, #16]
   134fc:	b	13510 <__assert_fail@plt+0x2034>
   13500:	movw	r0, #20859	; 0x517b
   13504:	movt	r0, #2
   13508:	bl	11350 <gettext@plt>
   1350c:	str	r0, [sp, #16]
   13510:	ldr	r0, [sp, #16]
   13514:	str	r0, [sp, #20]
   13518:	ldr	r0, [sp, #20]
   1351c:	str	r0, [fp, #-20]	; 0xffffffec
   13520:	b	13528 <__assert_fail@plt+0x204c>
   13524:	bl	11494 <abort@plt>
   13528:	ldr	r0, [fp, #-20]	; 0xffffffec
   1352c:	ldr	r1, [fp, #-4]
   13530:	movw	r2, #4
   13534:	str	r0, [sp, #12]
   13538:	mov	r0, r2
   1353c:	bl	1b644 <__assert_fail@plt+0xa168>
   13540:	ldr	r2, [fp, #-24]	; 0xffffffe8
   13544:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13548:	ldr	r1, [sp, #12]
   1354c:	str	r0, [sp, #8]
   13550:	mov	r0, r1
   13554:	ldr	r1, [sp, #8]
   13558:	bl	11200 <printf@plt>
   1355c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13560:	str	r0, [sp, #4]
   13564:	mov	r0, r1
   13568:	bl	1382c <__assert_fail@plt+0x2350>
   1356c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13570:	bl	1382c <__assert_fail@plt+0x2350>
   13574:	mov	sp, fp
   13578:	pop	{fp, pc}
   1357c:	push	{fp, lr}
   13580:	mov	fp, sp
   13584:	sub	sp, sp, #16
   13588:	str	r0, [fp, #-4]
   1358c:	str	r1, [sp, #8]
   13590:	movw	r0, #0
   13594:	str	r0, [sp, #4]
   13598:	ldr	r1, [fp, #-4]
   1359c:	cmp	r1, r0
   135a0:	beq	13618 <__assert_fail@plt+0x213c>
   135a4:	ldr	r0, [sp, #8]
   135a8:	movw	r1, #0
   135ac:	cmp	r0, r1
   135b0:	beq	13608 <__assert_fail@plt+0x212c>
   135b4:	ldr	r0, [fp, #-4]
   135b8:	bl	1135c <strlen@plt>
   135bc:	add	r0, r0, #1
   135c0:	ldr	r1, [sp, #8]
   135c4:	str	r0, [sp]
   135c8:	mov	r0, r1
   135cc:	bl	1135c <strlen@plt>
   135d0:	ldr	r1, [sp]
   135d4:	add	r0, r1, r0
   135d8:	add	r0, r0, #1
   135dc:	bl	1c4c8 <__assert_fail@plt+0xafec>
   135e0:	str	r0, [sp, #4]
   135e4:	ldr	r0, [sp, #4]
   135e8:	ldr	r1, [fp, #-4]
   135ec:	bl	11260 <stpcpy@plt>
   135f0:	movw	r1, #20885	; 0x5195
   135f4:	movt	r1, #2
   135f8:	bl	11260 <stpcpy@plt>
   135fc:	ldr	r1, [sp, #8]
   13600:	bl	11260 <stpcpy@plt>
   13604:	b	13614 <__assert_fail@plt+0x2138>
   13608:	ldr	r0, [fp, #-4]
   1360c:	bl	1f1c8 <__assert_fail@plt+0xdcec>
   13610:	str	r0, [sp, #4]
   13614:	b	13638 <__assert_fail@plt+0x215c>
   13618:	ldr	r0, [sp, #8]
   1361c:	movw	r1, #0
   13620:	cmp	r0, r1
   13624:	beq	13634 <__assert_fail@plt+0x2158>
   13628:	ldr	r0, [sp, #8]
   1362c:	bl	1f1c8 <__assert_fail@plt+0xdcec>
   13630:	str	r0, [sp, #4]
   13634:	b	13638 <__assert_fail@plt+0x215c>
   13638:	ldr	r0, [sp, #4]
   1363c:	mov	sp, fp
   13640:	pop	{fp, pc}
   13644:	push	{fp, lr}
   13648:	mov	fp, sp
   1364c:	sub	sp, sp, #24
   13650:	str	r0, [fp, #-4]
   13654:	str	r1, [fp, #-8]
   13658:	str	r2, [sp, #12]
   1365c:	str	r3, [sp, #8]
   13660:	ldr	r0, [fp, #-4]
   13664:	ldr	r1, [fp, #-8]
   13668:	ldr	r2, [sp, #12]
   1366c:	ldr	r3, [sp, #8]
   13670:	movw	ip, #0
   13674:	str	ip, [sp]
   13678:	bl	11458 <fchownat@plt>
   1367c:	mov	sp, fp
   13680:	pop	{fp, pc}
   13684:	push	{fp, lr}
   13688:	mov	fp, sp
   1368c:	sub	sp, sp, #24
   13690:	str	r0, [fp, #-4]
   13694:	str	r1, [fp, #-8]
   13698:	str	r2, [sp, #12]
   1369c:	str	r3, [sp, #8]
   136a0:	ldr	r0, [fp, #-4]
   136a4:	ldr	r1, [fp, #-8]
   136a8:	ldr	r2, [sp, #12]
   136ac:	ldr	r3, [sp, #8]
   136b0:	movw	ip, #256	; 0x100
   136b4:	str	ip, [sp]
   136b8:	bl	11458 <fchownat@plt>
   136bc:	mov	sp, fp
   136c0:	pop	{fp, pc}
   136c4:	sub	sp, sp, #4
   136c8:	str	r0, [sp]
   136cc:	ldr	r0, [sp]
   136d0:	movw	r1, #25008	; 0x61b0
   136d4:	movt	r1, #3
   136d8:	str	r0, [r1]
   136dc:	add	sp, sp, #4
   136e0:	bx	lr
   136e4:	sub	sp, sp, #4
   136e8:	and	r0, r0, #1
   136ec:	strb	r0, [sp, #3]
   136f0:	ldrb	r0, [sp, #3]
   136f4:	and	r0, r0, #1
   136f8:	movw	r1, #25012	; 0x61b4
   136fc:	movt	r1, #3
   13700:	strb	r0, [r1]
   13704:	add	sp, sp, #4
   13708:	bx	lr
   1370c:	push	{fp, lr}
   13710:	mov	fp, sp
   13714:	sub	sp, sp, #24
   13718:	movw	r0, #24972	; 0x618c
   1371c:	movt	r0, #3
   13720:	ldr	r0, [r0]
   13724:	bl	21828 <__assert_fail@plt+0x1034c>
   13728:	cmp	r0, #0
   1372c:	beq	137fc <__assert_fail@plt+0x2320>
   13730:	movw	r0, #25012	; 0x61b4
   13734:	movt	r0, #3
   13738:	ldrb	r0, [r0]
   1373c:	tst	r0, #1
   13740:	beq	13754 <__assert_fail@plt+0x2278>
   13744:	bl	11398 <__errno_location@plt>
   13748:	ldr	r0, [r0]
   1374c:	cmp	r0, #32
   13750:	beq	137fc <__assert_fail@plt+0x2320>
   13754:	movw	r0, #20902	; 0x51a6
   13758:	movt	r0, #2
   1375c:	bl	11350 <gettext@plt>
   13760:	str	r0, [fp, #-4]
   13764:	movw	r0, #25008	; 0x61b0
   13768:	movt	r0, #3
   1376c:	ldr	r0, [r0]
   13770:	movw	r1, #0
   13774:	cmp	r0, r1
   13778:	beq	137d0 <__assert_fail@plt+0x22f4>
   1377c:	bl	11398 <__errno_location@plt>
   13780:	ldr	r1, [r0]
   13784:	movw	r0, #25008	; 0x61b0
   13788:	movt	r0, #3
   1378c:	ldr	r0, [r0]
   13790:	str	r1, [fp, #-8]
   13794:	bl	1b740 <__assert_fail@plt+0xa264>
   13798:	ldr	r1, [fp, #-4]
   1379c:	movw	r2, #0
   137a0:	str	r0, [sp, #12]
   137a4:	mov	r0, r2
   137a8:	ldr	r2, [fp, #-8]
   137ac:	str	r1, [sp, #8]
   137b0:	mov	r1, r2
   137b4:	movw	r2, #20914	; 0x51b2
   137b8:	movt	r2, #2
   137bc:	ldr	r3, [sp, #12]
   137c0:	ldr	ip, [sp, #8]
   137c4:	str	ip, [sp]
   137c8:	bl	112e4 <error@plt>
   137cc:	b	137ec <__assert_fail@plt+0x2310>
   137d0:	bl	11398 <__errno_location@plt>
   137d4:	ldr	r1, [r0]
   137d8:	ldr	r3, [fp, #-4]
   137dc:	movw	r0, #0
   137e0:	movw	r2, #19687	; 0x4ce7
   137e4:	movt	r2, #2
   137e8:	bl	112e4 <error@plt>
   137ec:	movw	r0, #24880	; 0x6130
   137f0:	movt	r0, #3
   137f4:	ldr	r0, [r0]
   137f8:	bl	11230 <_exit@plt>
   137fc:	movw	r0, #24968	; 0x6188
   13800:	movt	r0, #3
   13804:	ldr	r0, [r0]
   13808:	bl	21828 <__assert_fail@plt+0x1034c>
   1380c:	cmp	r0, #0
   13810:	beq	13824 <__assert_fail@plt+0x2348>
   13814:	movw	r0, #24880	; 0x6130
   13818:	movt	r0, #3
   1381c:	ldr	r0, [r0]
   13820:	bl	11230 <_exit@plt>
   13824:	mov	sp, fp
   13828:	pop	{fp, pc}
   1382c:	push	{fp, lr}
   13830:	mov	fp, sp
   13834:	sub	sp, sp, #16
   13838:	str	r0, [fp, #-4]
   1383c:	bl	11398 <__errno_location@plt>
   13840:	ldr	r0, [r0]
   13844:	str	r0, [sp, #8]
   13848:	ldr	r0, [fp, #-4]
   1384c:	bl	11224 <free@plt>
   13850:	ldr	r0, [sp, #8]
   13854:	str	r0, [sp, #4]
   13858:	bl	11398 <__errno_location@plt>
   1385c:	ldr	r1, [sp, #4]
   13860:	str	r1, [r0]
   13864:	mov	sp, fp
   13868:	pop	{fp, pc}
   1386c:	push	{fp, lr}
   13870:	mov	fp, sp
   13874:	sub	sp, sp, #80	; 0x50
   13878:	ldr	r3, [pc, #1452]	; 13e2c <__assert_fail@plt+0x2950>
   1387c:	str	r0, [fp, #-8]
   13880:	str	r1, [fp, #-12]
   13884:	str	r2, [fp, #-16]
   13888:	movw	r0, #0
   1388c:	str	r0, [fp, #-36]	; 0xffffffdc
   13890:	str	r0, [sp, #40]	; 0x28
   13894:	ldr	r0, [fp, #-12]
   13898:	and	r0, r0, r3
   1389c:	cmp	r0, #0
   138a0:	beq	138bc <__assert_fail@plt+0x23e0>
   138a4:	bl	11398 <__errno_location@plt>
   138a8:	movw	r1, #22
   138ac:	str	r1, [r0]
   138b0:	movw	r0, #0
   138b4:	str	r0, [fp, #-4]
   138b8:	b	13e20 <__assert_fail@plt+0x2944>
   138bc:	ldr	r0, [fp, #-12]
   138c0:	and	r0, r0, #4
   138c4:	cmp	r0, #0
   138c8:	beq	138f4 <__assert_fail@plt+0x2418>
   138cc:	ldr	r0, [fp, #-12]
   138d0:	and	r0, r0, #512	; 0x200
   138d4:	cmp	r0, #0
   138d8:	beq	138f4 <__assert_fail@plt+0x2418>
   138dc:	bl	11398 <__errno_location@plt>
   138e0:	movw	r1, #22
   138e4:	str	r1, [r0]
   138e8:	movw	r0, #0
   138ec:	str	r0, [fp, #-4]
   138f0:	b	13e20 <__assert_fail@plt+0x2944>
   138f4:	ldr	r0, [fp, #-12]
   138f8:	and	r0, r0, #18
   138fc:	cmp	r0, #0
   13900:	bne	1391c <__assert_fail@plt+0x2440>
   13904:	bl	11398 <__errno_location@plt>
   13908:	movw	r1, #22
   1390c:	str	r1, [r0]
   13910:	movw	r0, #0
   13914:	str	r0, [fp, #-4]
   13918:	b	13e20 <__assert_fail@plt+0x2944>
   1391c:	movw	r0, #1
   13920:	movw	r1, #96	; 0x60
   13924:	bl	212e0 <__assert_fail@plt+0xfe04>
   13928:	str	r0, [fp, #-20]	; 0xffffffec
   1392c:	ldr	r0, [fp, #-20]	; 0xffffffec
   13930:	movw	r1, #0
   13934:	cmp	r0, r1
   13938:	bne	13948 <__assert_fail@plt+0x246c>
   1393c:	movw	r0, #0
   13940:	str	r0, [fp, #-4]
   13944:	b	13e20 <__assert_fail@plt+0x2944>
   13948:	ldr	r0, [fp, #-16]
   1394c:	ldr	r1, [fp, #-20]	; 0xffffffec
   13950:	str	r0, [r1, #44]	; 0x2c
   13954:	ldr	r0, [fp, #-12]
   13958:	ldr	r1, [fp, #-20]	; 0xffffffec
   1395c:	str	r0, [r1, #48]	; 0x30
   13960:	ldr	r0, [fp, #-20]	; 0xffffffec
   13964:	ldr	r0, [r0, #48]	; 0x30
   13968:	and	r0, r0, #2
   1396c:	cmp	r0, #0
   13970:	beq	13998 <__assert_fail@plt+0x24bc>
   13974:	ldr	r0, [fp, #-20]	; 0xffffffec
   13978:	ldr	r1, [r0, #48]	; 0x30
   1397c:	orr	r1, r1, #4
   13980:	str	r1, [r0, #48]	; 0x30
   13984:	ldr	r0, [fp, #-20]	; 0xffffffec
   13988:	ldr	r1, [r0, #48]	; 0x30
   1398c:	mvn	r2, #512	; 0x200
   13990:	and	r1, r1, r2
   13994:	str	r1, [r0, #48]	; 0x30
   13998:	ldr	r0, [fp, #-20]	; 0xffffffec
   1399c:	mvn	r1, #99	; 0x63
   139a0:	str	r1, [r0, #32]
   139a4:	ldr	r0, [fp, #-20]	; 0xffffffec
   139a8:	ldr	r0, [r0, #48]	; 0x30
   139ac:	and	r0, r0, #512	; 0x200
   139b0:	cmp	r0, #0
   139b4:	beq	139ec <__assert_fail@plt+0x2510>
   139b8:	b	139ec <__assert_fail@plt+0x2510>
   139bc:	ldr	r1, [pc, #1132]	; 13e30 <__assert_fail@plt+0x2954>
   139c0:	movw	r0, #20922	; 0x51ba
   139c4:	movt	r0, #2
   139c8:	bl	21fb4 <__assert_fail@plt+0x10ad8>
   139cc:	str	r0, [sp, #32]
   139d0:	ldr	r0, [sp, #32]
   139d4:	cmp	r0, #0
   139d8:	bge	139e0 <__assert_fail@plt+0x2504>
   139dc:	b	139e8 <__assert_fail@plt+0x250c>
   139e0:	ldr	r0, [sp, #32]
   139e4:	bl	114a0 <close@plt>
   139e8:	b	139ec <__assert_fail@plt+0x2510>
   139ec:	ldr	r0, [fp, #-8]
   139f0:	bl	13e34 <__assert_fail@plt+0x2958>
   139f4:	str	r0, [sp, #28]
   139f8:	ldr	r0, [fp, #-20]	; 0xffffffec
   139fc:	ldr	r1, [sp, #28]
   13a00:	cmp	r1, #4096	; 0x1000
   13a04:	str	r0, [sp, #16]
   13a08:	bls	13a18 <__assert_fail@plt+0x253c>
   13a0c:	ldr	r0, [sp, #28]
   13a10:	str	r0, [sp, #12]
   13a14:	b	13a24 <__assert_fail@plt+0x2548>
   13a18:	movw	r0, #4096	; 0x1000
   13a1c:	str	r0, [sp, #12]
   13a20:	b	13a24 <__assert_fail@plt+0x2548>
   13a24:	ldr	r0, [sp, #12]
   13a28:	ldr	r1, [sp, #16]
   13a2c:	str	r0, [sp, #8]
   13a30:	mov	r0, r1
   13a34:	ldr	r1, [sp, #8]
   13a38:	bl	13ea8 <__assert_fail@plt+0x29cc>
   13a3c:	tst	r0, #1
   13a40:	bne	13a48 <__assert_fail@plt+0x256c>
   13a44:	b	13e10 <__assert_fail@plt+0x2934>
   13a48:	ldr	r0, [fp, #-8]
   13a4c:	ldr	r0, [r0]
   13a50:	movw	r1, #0
   13a54:	cmp	r0, r1
   13a58:	beq	13a90 <__assert_fail@plt+0x25b4>
   13a5c:	ldr	r0, [fp, #-20]	; 0xffffffec
   13a60:	movw	r1, #18848	; 0x49a0
   13a64:	movt	r1, #2
   13a68:	movw	r2, #0
   13a6c:	bl	13fa0 <__assert_fail@plt+0x2ac4>
   13a70:	str	r0, [fp, #-36]	; 0xffffffdc
   13a74:	movw	r1, #0
   13a78:	cmp	r0, r1
   13a7c:	bne	13a84 <__assert_fail@plt+0x25a8>
   13a80:	b	13e04 <__assert_fail@plt+0x2928>
   13a84:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13a88:	mvn	r1, #0
   13a8c:	str	r1, [r0, #48]	; 0x30
   13a90:	ldr	r0, [fp, #-16]
   13a94:	movw	r1, #0
   13a98:	cmp	r0, r1
   13a9c:	movw	r0, #1
   13aa0:	str	r0, [sp, #4]
   13aa4:	beq	13ac4 <__assert_fail@plt+0x25e8>
   13aa8:	ldr	r0, [fp, #-20]	; 0xffffffec
   13aac:	ldr	r0, [r0, #48]	; 0x30
   13ab0:	and	r0, r0, #1024	; 0x400
   13ab4:	cmp	r0, #0
   13ab8:	movw	r0, #0
   13abc:	movne	r0, #1
   13ac0:	str	r0, [sp, #4]
   13ac4:	ldr	r0, [sp, #4]
   13ac8:	and	r0, r0, #1
   13acc:	strb	r0, [sp, #39]	; 0x27
   13ad0:	movw	r0, #0
   13ad4:	str	r0, [fp, #-28]	; 0xffffffe4
   13ad8:	str	r0, [fp, #-32]	; 0xffffffe0
   13adc:	ldr	r0, [fp, #-8]
   13ae0:	ldr	r0, [r0]
   13ae4:	movw	r1, #0
   13ae8:	cmp	r0, r1
   13aec:	beq	13ce0 <__assert_fail@plt+0x2804>
   13af0:	ldr	r0, [fp, #-8]
   13af4:	ldr	r0, [r0]
   13af8:	bl	1135c <strlen@plt>
   13afc:	str	r0, [sp, #24]
   13b00:	ldr	r0, [fp, #-12]
   13b04:	and	r0, r0, #2048	; 0x800
   13b08:	cmp	r0, #0
   13b0c:	bne	13bb0 <__assert_fail@plt+0x26d4>
   13b10:	ldr	r0, [fp, #-8]
   13b14:	ldr	r0, [r0]
   13b18:	str	r0, [sp, #20]
   13b1c:	ldr	r0, [sp, #24]
   13b20:	movw	r1, #2
   13b24:	cmp	r1, r0
   13b28:	bcs	13bac <__assert_fail@plt+0x26d0>
   13b2c:	ldr	r0, [sp, #20]
   13b30:	ldr	r1, [sp, #24]
   13b34:	sub	r1, r1, #1
   13b38:	add	r0, r0, r1
   13b3c:	ldrb	r0, [r0]
   13b40:	cmp	r0, #47	; 0x2f
   13b44:	bne	13bac <__assert_fail@plt+0x26d0>
   13b48:	b	13b4c <__assert_fail@plt+0x2670>
   13b4c:	ldr	r0, [sp, #24]
   13b50:	movw	r1, #1
   13b54:	cmp	r1, r0
   13b58:	movw	r0, #0
   13b5c:	str	r0, [sp]
   13b60:	bcs	13b88 <__assert_fail@plt+0x26ac>
   13b64:	ldr	r0, [sp, #20]
   13b68:	ldr	r1, [sp, #24]
   13b6c:	sub	r1, r1, #2
   13b70:	add	r0, r0, r1
   13b74:	ldrb	r0, [r0]
   13b78:	cmp	r0, #47	; 0x2f
   13b7c:	movw	r0, #0
   13b80:	moveq	r0, #1
   13b84:	str	r0, [sp]
   13b88:	ldr	r0, [sp]
   13b8c:	tst	r0, #1
   13b90:	beq	13ba8 <__assert_fail@plt+0x26cc>
   13b94:	ldr	r0, [sp, #24]
   13b98:	mvn	r1, #0
   13b9c:	add	r0, r0, r1
   13ba0:	str	r0, [sp, #24]
   13ba4:	b	13b4c <__assert_fail@plt+0x2670>
   13ba8:	b	13bac <__assert_fail@plt+0x26d0>
   13bac:	b	13bb0 <__assert_fail@plt+0x26d4>
   13bb0:	ldr	r0, [fp, #-20]	; 0xffffffec
   13bb4:	ldr	r1, [fp, #-8]
   13bb8:	ldr	r1, [r1]
   13bbc:	ldr	r2, [sp, #24]
   13bc0:	bl	13fa0 <__assert_fail@plt+0x2ac4>
   13bc4:	str	r0, [fp, #-24]	; 0xffffffe8
   13bc8:	movw	r1, #0
   13bcc:	cmp	r0, r1
   13bd0:	bne	13bd8 <__assert_fail@plt+0x26fc>
   13bd4:	b	13df4 <__assert_fail@plt+0x2918>
   13bd8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13bdc:	movw	r1, #0
   13be0:	str	r1, [r0, #48]	; 0x30
   13be4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13be8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13bec:	str	r0, [r1, #4]
   13bf0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13bf4:	add	r0, r0, #168	; 0xa8
   13bf8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13bfc:	str	r0, [r1, #24]
   13c00:	ldrb	r0, [sp, #39]	; 0x27
   13c04:	tst	r0, #1
   13c08:	beq	13c3c <__assert_fail@plt+0x2760>
   13c0c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13c10:	movw	r1, #0
   13c14:	cmp	r0, r1
   13c18:	beq	13c3c <__assert_fail@plt+0x2760>
   13c1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13c20:	movw	r1, #11
   13c24:	strh	r1, [r0, #56]	; 0x38
   13c28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13c2c:	movw	r1, #1
   13c30:	and	r1, r1, #1
   13c34:	bl	14098 <__assert_fail@plt+0x2bbc>
   13c38:	b	13c58 <__assert_fail@plt+0x277c>
   13c3c:	ldr	r0, [fp, #-20]	; 0xffffffec
   13c40:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13c44:	movw	r2, #0
   13c48:	and	r2, r2, #1
   13c4c:	bl	140f0 <__assert_fail@plt+0x2c14>
   13c50:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13c54:	strh	r0, [r1, #56]	; 0x38
   13c58:	ldr	r0, [fp, #-16]
   13c5c:	movw	r1, #0
   13c60:	cmp	r0, r1
   13c64:	beq	13c80 <__assert_fail@plt+0x27a4>
   13c68:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13c6c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13c70:	str	r0, [r1, #8]
   13c74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13c78:	str	r0, [fp, #-28]	; 0xffffffe4
   13c7c:	b	13cc0 <__assert_fail@plt+0x27e4>
   13c80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13c84:	movw	r1, #0
   13c88:	str	r1, [r0, #8]
   13c8c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13c90:	cmp	r0, r1
   13c94:	bne	13ca8 <__assert_fail@plt+0x27cc>
   13c98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13c9c:	str	r0, [fp, #-28]	; 0xffffffe4
   13ca0:	str	r0, [sp, #40]	; 0x28
   13ca4:	b	13cbc <__assert_fail@plt+0x27e0>
   13ca8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13cac:	ldr	r1, [sp, #40]	; 0x28
   13cb0:	str	r0, [r1, #8]
   13cb4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13cb8:	str	r0, [sp, #40]	; 0x28
   13cbc:	b	13cc0 <__assert_fail@plt+0x27e4>
   13cc0:	b	13cc4 <__assert_fail@plt+0x27e8>
   13cc4:	ldr	r0, [fp, #-8]
   13cc8:	add	r0, r0, #4
   13ccc:	str	r0, [fp, #-8]
   13cd0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13cd4:	add	r0, r0, #1
   13cd8:	str	r0, [fp, #-32]	; 0xffffffe0
   13cdc:	b	13adc <__assert_fail@plt+0x2600>
   13ce0:	ldr	r0, [fp, #-16]
   13ce4:	movw	r1, #0
   13ce8:	cmp	r0, r1
   13cec:	beq	13d10 <__assert_fail@plt+0x2834>
   13cf0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13cf4:	cmp	r0, #1
   13cf8:	bls	13d10 <__assert_fail@plt+0x2834>
   13cfc:	ldr	r0, [fp, #-20]	; 0xffffffec
   13d00:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13d04:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13d08:	bl	14308 <__assert_fail@plt+0x2e2c>
   13d0c:	str	r0, [fp, #-28]	; 0xffffffe4
   13d10:	ldr	r0, [fp, #-20]	; 0xffffffec
   13d14:	movw	r1, #18848	; 0x49a0
   13d18:	movt	r1, #2
   13d1c:	movw	r2, #0
   13d20:	bl	13fa0 <__assert_fail@plt+0x2ac4>
   13d24:	ldr	r1, [fp, #-20]	; 0xffffffec
   13d28:	str	r0, [r1]
   13d2c:	movw	r1, #0
   13d30:	cmp	r0, r1
   13d34:	bne	13d3c <__assert_fail@plt+0x2860>
   13d38:	b	13df4 <__assert_fail@plt+0x2918>
   13d3c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13d40:	ldr	r1, [fp, #-20]	; 0xffffffec
   13d44:	ldr	r1, [r1]
   13d48:	str	r0, [r1, #8]
   13d4c:	ldr	r0, [fp, #-20]	; 0xffffffec
   13d50:	ldr	r0, [r0]
   13d54:	movw	r1, #9
   13d58:	strh	r1, [r0, #56]	; 0x38
   13d5c:	ldr	r0, [fp, #-20]	; 0xffffffec
   13d60:	ldr	r0, [r0]
   13d64:	movw	r1, #1
   13d68:	str	r1, [r0, #48]	; 0x30
   13d6c:	ldr	r0, [fp, #-20]	; 0xffffffec
   13d70:	bl	144d0 <__assert_fail@plt+0x2ff4>
   13d74:	tst	r0, #1
   13d78:	bne	13d80 <__assert_fail@plt+0x28a4>
   13d7c:	b	13df4 <__assert_fail@plt+0x2918>
   13d80:	ldr	r0, [fp, #-20]	; 0xffffffec
   13d84:	ldr	r0, [r0, #48]	; 0x30
   13d88:	and	r0, r0, #4
   13d8c:	cmp	r0, #0
   13d90:	bne	13dd8 <__assert_fail@plt+0x28fc>
   13d94:	ldr	r0, [fp, #-20]	; 0xffffffec
   13d98:	ldr	r0, [r0, #48]	; 0x30
   13d9c:	and	r0, r0, #512	; 0x200
   13da0:	cmp	r0, #0
   13da4:	bne	13dd8 <__assert_fail@plt+0x28fc>
   13da8:	ldr	r0, [fp, #-20]	; 0xffffffec
   13dac:	movw	r1, #20922	; 0x51ba
   13db0:	movt	r1, #2
   13db4:	bl	145ac <__assert_fail@plt+0x30d0>
   13db8:	ldr	r1, [fp, #-20]	; 0xffffffec
   13dbc:	str	r0, [r1, #28]
   13dc0:	cmp	r0, #0
   13dc4:	bge	13dd8 <__assert_fail@plt+0x28fc>
   13dc8:	ldr	r0, [fp, #-20]	; 0xffffffec
   13dcc:	ldr	r1, [r0, #48]	; 0x30
   13dd0:	orr	r1, r1, #4
   13dd4:	str	r1, [r0, #48]	; 0x30
   13dd8:	ldr	r0, [fp, #-20]	; 0xffffffec
   13ddc:	add	r0, r0, #60	; 0x3c
   13de0:	mvn	r1, #0
   13de4:	bl	18f28 <__assert_fail@plt+0x7a4c>
   13de8:	ldr	r0, [fp, #-20]	; 0xffffffec
   13dec:	str	r0, [fp, #-4]
   13df0:	b	13e20 <__assert_fail@plt+0x2944>
   13df4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13df8:	bl	14648 <__assert_fail@plt+0x316c>
   13dfc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13e00:	bl	1382c <__assert_fail@plt+0x2350>
   13e04:	ldr	r0, [fp, #-20]	; 0xffffffec
   13e08:	ldr	r0, [r0, #24]
   13e0c:	bl	1382c <__assert_fail@plt+0x2350>
   13e10:	ldr	r0, [fp, #-20]	; 0xffffffec
   13e14:	bl	1382c <__assert_fail@plt+0x2350>
   13e18:	movw	r0, #0
   13e1c:	str	r0, [fp, #-4]
   13e20:	ldr	r0, [fp, #-4]
   13e24:	mov	sp, fp
   13e28:	pop	{fp, pc}
   13e2c:			; <UNDEFINED> instruction: 0xfffff000
   13e30:	andeq	r0, r8, r0
   13e34:	push	{fp, lr}
   13e38:	mov	fp, sp
   13e3c:	sub	sp, sp, #16
   13e40:	str	r0, [fp, #-4]
   13e44:	movw	r0, #0
   13e48:	str	r0, [sp, #4]
   13e4c:	ldr	r0, [fp, #-4]
   13e50:	ldr	r0, [r0]
   13e54:	movw	r1, #0
   13e58:	cmp	r0, r1
   13e5c:	beq	13e98 <__assert_fail@plt+0x29bc>
   13e60:	ldr	r0, [fp, #-4]
   13e64:	ldr	r0, [r0]
   13e68:	bl	1135c <strlen@plt>
   13e6c:	str	r0, [sp, #8]
   13e70:	ldr	r1, [sp, #4]
   13e74:	cmp	r0, r1
   13e78:	bls	13e84 <__assert_fail@plt+0x29a8>
   13e7c:	ldr	r0, [sp, #8]
   13e80:	str	r0, [sp, #4]
   13e84:	b	13e88 <__assert_fail@plt+0x29ac>
   13e88:	ldr	r0, [fp, #-4]
   13e8c:	add	r0, r0, #4
   13e90:	str	r0, [fp, #-4]
   13e94:	b	13e4c <__assert_fail@plt+0x2970>
   13e98:	ldr	r0, [sp, #4]
   13e9c:	add	r0, r0, #1
   13ea0:	mov	sp, fp
   13ea4:	pop	{fp, pc}
   13ea8:	push	{fp, lr}
   13eac:	mov	fp, sp
   13eb0:	sub	sp, sp, #24
   13eb4:	str	r0, [fp, #-8]
   13eb8:	str	r1, [sp, #12]
   13ebc:	ldr	r0, [fp, #-8]
   13ec0:	ldr	r0, [r0, #36]	; 0x24
   13ec4:	ldr	r1, [sp, #12]
   13ec8:	add	r0, r0, r1
   13ecc:	add	r0, r0, #256	; 0x100
   13ed0:	str	r0, [sp, #4]
   13ed4:	ldr	r0, [sp, #4]
   13ed8:	ldr	r1, [fp, #-8]
   13edc:	ldr	r1, [r1, #36]	; 0x24
   13ee0:	cmp	r0, r1
   13ee4:	bcs	13f1c <__assert_fail@plt+0x2a40>
   13ee8:	ldr	r0, [fp, #-8]
   13eec:	ldr	r0, [r0, #24]
   13ef0:	bl	1382c <__assert_fail@plt+0x2350>
   13ef4:	ldr	r0, [fp, #-8]
   13ef8:	movw	r1, #0
   13efc:	str	r1, [r0, #24]
   13f00:	bl	11398 <__errno_location@plt>
   13f04:	movw	r1, #36	; 0x24
   13f08:	str	r1, [r0]
   13f0c:	movw	r0, #0
   13f10:	and	r0, r0, #1
   13f14:	strb	r0, [fp, #-1]
   13f18:	b	13f90 <__assert_fail@plt+0x2ab4>
   13f1c:	ldr	r0, [sp, #4]
   13f20:	ldr	r1, [fp, #-8]
   13f24:	str	r0, [r1, #36]	; 0x24
   13f28:	ldr	r0, [fp, #-8]
   13f2c:	ldr	r0, [r0, #24]
   13f30:	ldr	r1, [fp, #-8]
   13f34:	ldr	r1, [r1, #36]	; 0x24
   13f38:	bl	213ec <__assert_fail@plt+0xff10>
   13f3c:	str	r0, [sp, #8]
   13f40:	ldr	r0, [sp, #8]
   13f44:	movw	r1, #0
   13f48:	cmp	r0, r1
   13f4c:	bne	13f78 <__assert_fail@plt+0x2a9c>
   13f50:	ldr	r0, [fp, #-8]
   13f54:	ldr	r0, [r0, #24]
   13f58:	bl	1382c <__assert_fail@plt+0x2350>
   13f5c:	ldr	r0, [fp, #-8]
   13f60:	movw	r1, #0
   13f64:	str	r1, [r0, #24]
   13f68:	movw	r0, #0
   13f6c:	and	r0, r0, #1
   13f70:	strb	r0, [fp, #-1]
   13f74:	b	13f90 <__assert_fail@plt+0x2ab4>
   13f78:	ldr	r0, [sp, #8]
   13f7c:	ldr	r1, [fp, #-8]
   13f80:	str	r0, [r1, #24]
   13f84:	movw	r0, #1
   13f88:	and	r0, r0, #1
   13f8c:	strb	r0, [fp, #-1]
   13f90:	ldrb	r0, [fp, #-1]
   13f94:	and	r0, r0, #1
   13f98:	mov	sp, fp
   13f9c:	pop	{fp, pc}
   13fa0:	push	{fp, lr}
   13fa4:	mov	fp, sp
   13fa8:	sub	sp, sp, #24
   13fac:	str	r0, [fp, #-8]
   13fb0:	str	r1, [sp, #12]
   13fb4:	str	r2, [sp, #8]
   13fb8:	ldr	r0, [sp, #8]
   13fbc:	add	r0, r0, #1
   13fc0:	add	r0, r0, #175	; 0xaf
   13fc4:	mvn	r1, #7
   13fc8:	and	r0, r0, r1
   13fcc:	str	r0, [sp]
   13fd0:	ldr	r0, [sp]
   13fd4:	bl	2137c <__assert_fail@plt+0xfea0>
   13fd8:	str	r0, [sp, #4]
   13fdc:	movw	r1, #0
   13fe0:	cmp	r0, r1
   13fe4:	bne	13ff4 <__assert_fail@plt+0x2b18>
   13fe8:	movw	r0, #0
   13fec:	str	r0, [fp, #-4]
   13ff0:	b	1408c <__assert_fail@plt+0x2bb0>
   13ff4:	ldr	r0, [sp, #4]
   13ff8:	add	r0, r0, #168	; 0xa8
   13ffc:	ldr	r1, [sp, #12]
   14000:	ldr	r2, [sp, #8]
   14004:	bl	1123c <memcpy@plt>
   14008:	ldr	r0, [sp, #4]
   1400c:	add	r0, r0, #168	; 0xa8
   14010:	ldr	r1, [sp, #8]
   14014:	add	r0, r0, r1
   14018:	movw	r1, #0
   1401c:	strb	r1, [r0]
   14020:	ldr	r0, [sp, #8]
   14024:	ldr	r1, [sp, #4]
   14028:	str	r0, [r1, #52]	; 0x34
   1402c:	ldr	r0, [fp, #-8]
   14030:	ldr	r1, [sp, #4]
   14034:	str	r0, [r1, #44]	; 0x2c
   14038:	ldr	r0, [fp, #-8]
   1403c:	ldr	r0, [r0, #24]
   14040:	ldr	r1, [sp, #4]
   14044:	str	r0, [r1, #28]
   14048:	ldr	r0, [sp, #4]
   1404c:	movw	r1, #0
   14050:	str	r1, [r0, #32]
   14054:	ldr	r0, [sp, #4]
   14058:	str	r1, [r0, #12]
   1405c:	ldr	r0, [sp, #4]
   14060:	movw	r2, #0
   14064:	strh	r2, [r0, #58]	; 0x3a
   14068:	ldr	r0, [sp, #4]
   1406c:	movw	r2, #3
   14070:	strh	r2, [r0, #60]	; 0x3c
   14074:	ldr	r0, [sp, #4]
   14078:	str	r1, [r0, #16]
   1407c:	ldr	r0, [sp, #4]
   14080:	str	r1, [r0, #20]
   14084:	ldr	r0, [sp, #4]
   14088:	str	r0, [fp, #-4]
   1408c:	ldr	r0, [fp, #-4]
   14090:	mov	sp, fp
   14094:	pop	{fp, pc}
   14098:	push	{fp, lr}
   1409c:	mov	fp, sp
   140a0:	sub	sp, sp, #8
   140a4:	str	r0, [sp, #4]
   140a8:	and	r0, r1, #1
   140ac:	strb	r0, [sp, #3]
   140b0:	ldr	r0, [sp, #4]
   140b4:	ldrh	r0, [r0, #56]	; 0x38
   140b8:	cmp	r0, #11
   140bc:	beq	140c4 <__assert_fail@plt+0x2be8>
   140c0:	bl	11494 <abort@plt>
   140c4:	b	140c8 <__assert_fail@plt+0x2bec>
   140c8:	ldrb	r0, [sp, #3]
   140cc:	mov	r1, #1
   140d0:	tst	r0, #1
   140d4:	movwne	r1, #2
   140d8:	ldr	r0, [sp, #4]
   140dc:	mov	r2, #0
   140e0:	str	r2, [r0, #116]	; 0x74
   140e4:	str	r1, [r0, #112]	; 0x70
   140e8:	mov	sp, fp
   140ec:	pop	{fp, pc}
   140f0:	push	{fp, lr}
   140f4:	mov	fp, sp
   140f8:	sub	sp, sp, #24
   140fc:	str	r0, [fp, #-8]
   14100:	str	r1, [sp, #12]
   14104:	and	r0, r2, #1
   14108:	strb	r0, [sp, #11]
   1410c:	ldr	r0, [sp, #12]
   14110:	add	r0, r0, #64	; 0x40
   14114:	str	r0, [sp, #4]
   14118:	ldr	r0, [sp, #12]
   1411c:	ldr	r0, [r0, #48]	; 0x30
   14120:	cmp	r0, #0
   14124:	bne	14144 <__assert_fail@plt+0x2c68>
   14128:	ldr	r0, [fp, #-8]
   1412c:	ldr	r0, [r0, #48]	; 0x30
   14130:	and	r0, r0, #1
   14134:	cmp	r0, #0
   14138:	beq	14144 <__assert_fail@plt+0x2c68>
   1413c:	movw	r0, #1
   14140:	strb	r0, [sp, #11]
   14144:	ldr	r0, [fp, #-8]
   14148:	ldr	r0, [r0, #48]	; 0x30
   1414c:	and	r0, r0, #2
   14150:	cmp	r0, #0
   14154:	bne	14164 <__assert_fail@plt+0x2c88>
   14158:	ldrb	r0, [sp, #11]
   1415c:	tst	r0, #1
   14160:	beq	141d4 <__assert_fail@plt+0x2cf8>
   14164:	ldr	r0, [sp, #12]
   14168:	ldr	r0, [r0, #24]
   1416c:	ldr	r1, [sp, #4]
   14170:	bl	2432c <__assert_fail@plt+0x12e50>
   14174:	cmp	r0, #0
   14178:	beq	141d0 <__assert_fail@plt+0x2cf4>
   1417c:	bl	11398 <__errno_location@plt>
   14180:	ldr	r0, [r0]
   14184:	cmp	r0, #2
   14188:	bne	141bc <__assert_fail@plt+0x2ce0>
   1418c:	ldr	r0, [sp, #12]
   14190:	ldr	r0, [r0, #24]
   14194:	ldr	r1, [sp, #4]
   14198:	bl	2434c <__assert_fail@plt+0x12e70>
   1419c:	cmp	r0, #0
   141a0:	bne	141bc <__assert_fail@plt+0x2ce0>
   141a4:	bl	11398 <__errno_location@plt>
   141a8:	movw	r1, #0
   141ac:	str	r1, [r0]
   141b0:	movw	r0, #13
   141b4:	strh	r0, [fp, #-2]
   141b8:	b	142fc <__assert_fail@plt+0x2e20>
   141bc:	bl	11398 <__errno_location@plt>
   141c0:	ldr	r0, [r0]
   141c4:	ldr	r1, [sp, #12]
   141c8:	str	r0, [r1, #32]
   141cc:	b	14208 <__assert_fail@plt+0x2d2c>
   141d0:	b	1422c <__assert_fail@plt+0x2d50>
   141d4:	ldr	r0, [fp, #-8]
   141d8:	ldr	r0, [r0, #32]
   141dc:	ldr	r1, [sp, #12]
   141e0:	ldr	r1, [r1, #24]
   141e4:	ldr	r2, [sp, #4]
   141e8:	movw	r3, #256	; 0x100
   141ec:	bl	2435c <__assert_fail@plt+0x12e80>
   141f0:	cmp	r0, #0
   141f4:	beq	14228 <__assert_fail@plt+0x2d4c>
   141f8:	bl	11398 <__errno_location@plt>
   141fc:	ldr	r0, [r0]
   14200:	ldr	r1, [sp, #12]
   14204:	str	r0, [r1, #32]
   14208:	ldr	r0, [sp, #4]
   1420c:	movw	r1, #0
   14210:	and	r1, r1, #255	; 0xff
   14214:	movw	r2, #104	; 0x68
   14218:	bl	113b0 <memset@plt>
   1421c:	movw	r0, #10
   14220:	strh	r0, [fp, #-2]
   14224:	b	142fc <__assert_fail@plt+0x2e20>
   14228:	b	1422c <__assert_fail@plt+0x2d50>
   1422c:	ldr	r0, [sp, #4]
   14230:	ldr	r0, [r0, #16]
   14234:	and	r0, r0, #61440	; 0xf000
   14238:	cmp	r0, #16384	; 0x4000
   1423c:	bne	142b4 <__assert_fail@plt+0x2dd8>
   14240:	ldr	r0, [sp, #12]
   14244:	ldrb	r0, [r0, #168]	; 0xa8
   14248:	cmp	r0, #46	; 0x2e
   1424c:	bne	142a8 <__assert_fail@plt+0x2dcc>
   14250:	ldr	r0, [sp, #12]
   14254:	ldrsb	r0, [r0, #169]	; 0xa9
   14258:	cmp	r0, #0
   1425c:	beq	14280 <__assert_fail@plt+0x2da4>
   14260:	ldr	r0, [sp, #12]
   14264:	ldrb	r0, [r0, #169]	; 0xa9
   14268:	cmp	r0, #46	; 0x2e
   1426c:	bne	142a8 <__assert_fail@plt+0x2dcc>
   14270:	ldr	r0, [sp, #12]
   14274:	ldrsb	r0, [r0, #170]	; 0xaa
   14278:	cmp	r0, #0
   1427c:	bne	142a8 <__assert_fail@plt+0x2dcc>
   14280:	ldr	r0, [sp, #12]
   14284:	ldr	r0, [r0, #48]	; 0x30
   14288:	cmp	r0, #0
   1428c:	movw	r0, #0
   14290:	moveq	r0, #1
   14294:	tst	r0, #1
   14298:	movw	r0, #1
   1429c:	moveq	r0, #5
   142a0:	strh	r0, [fp, #-2]
   142a4:	b	142fc <__assert_fail@plt+0x2e20>
   142a8:	movw	r0, #1
   142ac:	strh	r0, [fp, #-2]
   142b0:	b	142fc <__assert_fail@plt+0x2e20>
   142b4:	ldr	r0, [sp, #4]
   142b8:	ldr	r0, [r0, #16]
   142bc:	and	r0, r0, #61440	; 0xf000
   142c0:	cmp	r0, #40960	; 0xa000
   142c4:	bne	142d4 <__assert_fail@plt+0x2df8>
   142c8:	movw	r0, #12
   142cc:	strh	r0, [fp, #-2]
   142d0:	b	142fc <__assert_fail@plt+0x2e20>
   142d4:	ldr	r0, [sp, #4]
   142d8:	ldr	r0, [r0, #16]
   142dc:	and	r0, r0, #61440	; 0xf000
   142e0:	cmp	r0, #32768	; 0x8000
   142e4:	bne	142f4 <__assert_fail@plt+0x2e18>
   142e8:	movw	r0, #8
   142ec:	strh	r0, [fp, #-2]
   142f0:	b	142fc <__assert_fail@plt+0x2e20>
   142f4:	movw	r0, #3
   142f8:	strh	r0, [fp, #-2]
   142fc:	ldrh	r0, [fp, #-2]
   14300:	mov	sp, fp
   14304:	pop	{fp, pc}
   14308:	push	{fp, lr}
   1430c:	mov	fp, sp
   14310:	sub	sp, sp, #48	; 0x30
   14314:	add	r3, sp, #20
   14318:	str	r0, [fp, #-8]
   1431c:	str	r1, [fp, #-12]
   14320:	str	r2, [fp, #-16]
   14324:	mov	r0, r3
   14328:	cmp	r3, r0
   1432c:	bne	14340 <__assert_fail@plt+0x2e64>
   14330:	ldr	r0, [fp, #-8]
   14334:	ldr	r0, [r0, #44]	; 0x2c
   14338:	str	r0, [sp, #8]
   1433c:	b	14350 <__assert_fail@plt+0x2e74>
   14340:	movw	r0, #29292	; 0x726c
   14344:	movt	r0, #1
   14348:	str	r0, [sp, #8]
   1434c:	b	14350 <__assert_fail@plt+0x2e74>
   14350:	ldr	r0, [sp, #8]
   14354:	str	r0, [sp, #16]
   14358:	ldr	r0, [fp, #-16]
   1435c:	ldr	r1, [fp, #-8]
   14360:	ldr	r1, [r1, #40]	; 0x28
   14364:	cmp	r0, r1
   14368:	bls	143f8 <__assert_fail@plt+0x2f1c>
   1436c:	ldr	r0, [pc, #344]	; 144cc <__assert_fail@plt+0x2ff0>
   14370:	ldr	r1, [fp, #-16]
   14374:	add	r1, r1, #40	; 0x28
   14378:	ldr	r2, [fp, #-8]
   1437c:	str	r1, [r2, #40]	; 0x28
   14380:	ldr	r1, [fp, #-8]
   14384:	ldr	r1, [r1, #40]	; 0x28
   14388:	cmp	r0, r1
   1438c:	bcc	143c0 <__assert_fail@plt+0x2ee4>
   14390:	ldr	r0, [fp, #-8]
   14394:	ldr	r1, [r0, #8]
   14398:	ldr	r0, [r0, #40]	; 0x28
   1439c:	lsl	r0, r0, #2
   143a0:	str	r0, [sp, #4]
   143a4:	mov	r0, r1
   143a8:	ldr	r1, [sp, #4]
   143ac:	bl	213ec <__assert_fail@plt+0xff10>
   143b0:	str	r0, [sp, #12]
   143b4:	movw	r1, #0
   143b8:	cmp	r0, r1
   143bc:	bne	143ec <__assert_fail@plt+0x2f10>
   143c0:	ldr	r0, [fp, #-8]
   143c4:	ldr	r0, [r0, #8]
   143c8:	bl	1382c <__assert_fail@plt+0x2350>
   143cc:	ldr	r0, [fp, #-8]
   143d0:	movw	r1, #0
   143d4:	str	r1, [r0, #8]
   143d8:	ldr	r0, [fp, #-8]
   143dc:	str	r1, [r0, #40]	; 0x28
   143e0:	ldr	r0, [fp, #-12]
   143e4:	str	r0, [fp, #-4]
   143e8:	b	144c0 <__assert_fail@plt+0x2fe4>
   143ec:	ldr	r0, [sp, #12]
   143f0:	ldr	r1, [fp, #-8]
   143f4:	str	r0, [r1, #8]
   143f8:	ldr	r0, [fp, #-8]
   143fc:	ldr	r0, [r0, #8]
   14400:	str	r0, [fp, #-20]	; 0xffffffec
   14404:	ldr	r0, [fp, #-12]
   14408:	str	r0, [sp, #24]
   1440c:	ldr	r0, [sp, #24]
   14410:	movw	r1, #0
   14414:	cmp	r0, r1
   14418:	beq	14440 <__assert_fail@plt+0x2f64>
   1441c:	ldr	r0, [sp, #24]
   14420:	ldr	r1, [fp, #-20]	; 0xffffffec
   14424:	add	r2, r1, #4
   14428:	str	r2, [fp, #-20]	; 0xffffffec
   1442c:	str	r0, [r1]
   14430:	ldr	r0, [sp, #24]
   14434:	ldr	r0, [r0, #8]
   14438:	str	r0, [sp, #24]
   1443c:	b	1440c <__assert_fail@plt+0x2f30>
   14440:	ldr	r0, [fp, #-8]
   14444:	ldr	r0, [r0, #8]
   14448:	ldr	r1, [fp, #-16]
   1444c:	ldr	r3, [sp, #16]
   14450:	movw	r2, #4
   14454:	bl	1144c <qsort@plt>
   14458:	ldr	r0, [fp, #-8]
   1445c:	ldr	r0, [r0, #8]
   14460:	str	r0, [fp, #-20]	; 0xffffffec
   14464:	ldr	r0, [r0]
   14468:	str	r0, [fp, #-12]
   1446c:	ldr	r0, [fp, #-16]
   14470:	mvn	r1, #0
   14474:	add	r0, r0, r1
   14478:	str	r0, [fp, #-16]
   1447c:	cmp	r0, #0
   14480:	beq	144a8 <__assert_fail@plt+0x2fcc>
   14484:	ldr	r0, [fp, #-20]	; 0xffffffec
   14488:	ldr	r0, [r0, #4]
   1448c:	ldr	r1, [fp, #-20]	; 0xffffffec
   14490:	ldr	r1, [r1]
   14494:	str	r0, [r1, #8]
   14498:	ldr	r0, [fp, #-20]	; 0xffffffec
   1449c:	add	r0, r0, #4
   144a0:	str	r0, [fp, #-20]	; 0xffffffec
   144a4:	b	1446c <__assert_fail@plt+0x2f90>
   144a8:	ldr	r0, [fp, #-20]	; 0xffffffec
   144ac:	ldr	r0, [r0]
   144b0:	movw	r1, #0
   144b4:	str	r1, [r0, #8]
   144b8:	ldr	r0, [fp, #-12]
   144bc:	str	r0, [fp, #-4]
   144c0:	ldr	r0, [fp, #-4]
   144c4:	mov	sp, fp
   144c8:	pop	{fp, pc}
   144cc:	svccc	0x00ffffff
   144d0:	push	{fp, lr}
   144d4:	mov	fp, sp
   144d8:	sub	sp, sp, #16
   144dc:	str	r0, [sp, #8]
   144e0:	ldr	r0, [sp, #8]
   144e4:	ldr	r0, [r0, #48]	; 0x30
   144e8:	movw	r1, #258	; 0x102
   144ec:	and	r0, r0, r1
   144f0:	cmp	r0, #0
   144f4:	beq	14550 <__assert_fail@plt+0x3074>
   144f8:	movw	r0, #31
   144fc:	movw	r1, #0
   14500:	movw	r2, #27472	; 0x6b50
   14504:	movt	r2, #1
   14508:	movw	r3, #27552	; 0x6ba0
   1450c:	movt	r3, #1
   14510:	movw	ip, #14380	; 0x382c
   14514:	movt	ip, #1
   14518:	str	ip, [sp]
   1451c:	bl	17ad4 <__assert_fail@plt+0x65f8>
   14520:	ldr	r1, [sp, #8]
   14524:	str	r0, [r1, #56]	; 0x38
   14528:	ldr	r0, [sp, #8]
   1452c:	ldr	r0, [r0, #56]	; 0x38
   14530:	movw	r1, #0
   14534:	cmp	r0, r1
   14538:	bne	1454c <__assert_fail@plt+0x3070>
   1453c:	movw	r0, #0
   14540:	and	r0, r0, #1
   14544:	strb	r0, [fp, #-1]
   14548:	b	1459c <__assert_fail@plt+0x30c0>
   1454c:	b	14590 <__assert_fail@plt+0x30b4>
   14550:	movw	r0, #32
   14554:	bl	2137c <__assert_fail@plt+0xfea0>
   14558:	ldr	r1, [sp, #8]
   1455c:	str	r0, [r1, #56]	; 0x38
   14560:	ldr	r0, [sp, #8]
   14564:	ldr	r0, [r0, #56]	; 0x38
   14568:	movw	r1, #0
   1456c:	cmp	r0, r1
   14570:	bne	14584 <__assert_fail@plt+0x30a8>
   14574:	movw	r0, #0
   14578:	and	r0, r0, #1
   1457c:	strb	r0, [fp, #-1]
   14580:	b	1459c <__assert_fail@plt+0x30c0>
   14584:	ldr	r0, [sp, #8]
   14588:	ldr	r0, [r0, #56]	; 0x38
   1458c:	bl	218f8 <__assert_fail@plt+0x1041c>
   14590:	movw	r0, #1
   14594:	and	r0, r0, #1
   14598:	strb	r0, [fp, #-1]
   1459c:	ldrb	r0, [fp, #-1]
   145a0:	and	r0, r0, #1
   145a4:	mov	sp, fp
   145a8:	pop	{fp, pc}
   145ac:	push	{fp, lr}
   145b0:	mov	fp, sp
   145b4:	sub	sp, sp, #24
   145b8:	ldr	r2, [pc, #132]	; 14644 <__assert_fail@plt+0x3168>
   145bc:	str	r0, [fp, #-4]
   145c0:	str	r1, [fp, #-8]
   145c4:	ldr	r0, [fp, #-4]
   145c8:	ldr	r0, [r0, #48]	; 0x30
   145cc:	and	r0, r0, #16
   145d0:	cmp	r0, #0
   145d4:	movw	r0, #0
   145d8:	movne	r0, #1
   145dc:	tst	r0, #1
   145e0:	movw	r0, #32768	; 0x8000
   145e4:	moveq	r0, #0
   145e8:	orr	r0, r0, r2
   145ec:	str	r0, [sp, #12]
   145f0:	ldr	r0, [fp, #-4]
   145f4:	ldr	r0, [r0, #48]	; 0x30
   145f8:	and	r0, r0, #512	; 0x200
   145fc:	cmp	r0, #0
   14600:	beq	14620 <__assert_fail@plt+0x3144>
   14604:	ldr	r0, [fp, #-4]
   14608:	ldr	r0, [r0, #32]
   1460c:	ldr	r1, [fp, #-8]
   14610:	ldr	r2, [sp, #12]
   14614:	bl	19234 <__assert_fail@plt+0x7d58>
   14618:	str	r0, [sp, #4]
   1461c:	b	14630 <__assert_fail@plt+0x3154>
   14620:	ldr	r0, [fp, #-8]
   14624:	ldr	r1, [sp, #12]
   14628:	bl	21fb4 <__assert_fail@plt+0x10ad8>
   1462c:	str	r0, [sp, #4]
   14630:	ldr	r0, [sp, #4]
   14634:	str	r0, [sp, #8]
   14638:	ldr	r0, [sp, #8]
   1463c:	mov	sp, fp
   14640:	pop	{fp, pc}
   14644:	andeq	r4, r8, r0, lsl #18
   14648:	push	{fp, lr}
   1464c:	mov	fp, sp
   14650:	sub	sp, sp, #8
   14654:	str	r0, [sp, #4]
   14658:	ldr	r0, [sp, #4]
   1465c:	str	r0, [sp]
   14660:	movw	r1, #0
   14664:	cmp	r0, r1
   14668:	beq	146a4 <__assert_fail@plt+0x31c8>
   1466c:	ldr	r0, [sp, #4]
   14670:	ldr	r0, [r0, #8]
   14674:	str	r0, [sp, #4]
   14678:	ldr	r0, [sp]
   1467c:	ldr	r0, [r0, #12]
   14680:	movw	r1, #0
   14684:	cmp	r0, r1
   14688:	beq	14698 <__assert_fail@plt+0x31bc>
   1468c:	ldr	r0, [sp]
   14690:	ldr	r0, [r0, #12]
   14694:	bl	114b8 <closedir@plt>
   14698:	ldr	r0, [sp]
   1469c:	bl	1382c <__assert_fail@plt+0x2350>
   146a0:	b	14658 <__assert_fail@plt+0x317c>
   146a4:	mov	sp, fp
   146a8:	pop	{fp, pc}
   146ac:	push	{fp, lr}
   146b0:	mov	fp, sp
   146b4:	sub	sp, sp, #32
   146b8:	str	r0, [fp, #-8]
   146bc:	movw	r0, #0
   146c0:	str	r0, [sp, #12]
   146c4:	ldr	r1, [fp, #-8]
   146c8:	ldr	r1, [r1]
   146cc:	cmp	r1, r0
   146d0:	beq	14744 <__assert_fail@plt+0x3268>
   146d4:	ldr	r0, [fp, #-8]
   146d8:	ldr	r0, [r0]
   146dc:	str	r0, [sp, #16]
   146e0:	ldr	r0, [sp, #16]
   146e4:	ldr	r0, [r0, #48]	; 0x30
   146e8:	cmp	r0, #0
   146ec:	blt	1473c <__assert_fail@plt+0x3260>
   146f0:	ldr	r0, [sp, #16]
   146f4:	str	r0, [fp, #-12]
   146f8:	ldr	r0, [sp, #16]
   146fc:	ldr	r0, [r0, #8]
   14700:	movw	r1, #0
   14704:	cmp	r0, r1
   14708:	beq	1471c <__assert_fail@plt+0x3240>
   1470c:	ldr	r0, [sp, #16]
   14710:	ldr	r0, [r0, #8]
   14714:	str	r0, [sp, #8]
   14718:	b	14728 <__assert_fail@plt+0x324c>
   1471c:	ldr	r0, [sp, #16]
   14720:	ldr	r0, [r0, #4]
   14724:	str	r0, [sp, #8]
   14728:	ldr	r0, [sp, #8]
   1472c:	str	r0, [sp, #16]
   14730:	ldr	r0, [fp, #-12]
   14734:	bl	1382c <__assert_fail@plt+0x2350>
   14738:	b	146e0 <__assert_fail@plt+0x3204>
   1473c:	ldr	r0, [sp, #16]
   14740:	bl	1382c <__assert_fail@plt+0x2350>
   14744:	ldr	r0, [fp, #-8]
   14748:	ldr	r0, [r0, #4]
   1474c:	movw	r1, #0
   14750:	cmp	r0, r1
   14754:	beq	14764 <__assert_fail@plt+0x3288>
   14758:	ldr	r0, [fp, #-8]
   1475c:	ldr	r0, [r0, #4]
   14760:	bl	14648 <__assert_fail@plt+0x316c>
   14764:	ldr	r0, [fp, #-8]
   14768:	ldr	r0, [r0, #8]
   1476c:	bl	1382c <__assert_fail@plt+0x2350>
   14770:	ldr	r0, [fp, #-8]
   14774:	ldr	r0, [r0, #24]
   14778:	bl	1382c <__assert_fail@plt+0x2350>
   1477c:	ldr	r0, [fp, #-8]
   14780:	ldr	r0, [r0, #48]	; 0x30
   14784:	and	r0, r0, #512	; 0x200
   14788:	cmp	r0, #0
   1478c:	beq	147cc <__assert_fail@plt+0x32f0>
   14790:	ldr	r0, [fp, #-8]
   14794:	ldr	r0, [r0, #32]
   14798:	movw	r1, #0
   1479c:	cmp	r1, r0
   147a0:	bgt	147c8 <__assert_fail@plt+0x32ec>
   147a4:	ldr	r0, [fp, #-8]
   147a8:	ldr	r0, [r0, #32]
   147ac:	bl	114a0 <close@plt>
   147b0:	cmp	r0, #0
   147b4:	beq	147c4 <__assert_fail@plt+0x32e8>
   147b8:	bl	11398 <__errno_location@plt>
   147bc:	ldr	r0, [r0]
   147c0:	str	r0, [sp, #12]
   147c4:	b	147c8 <__assert_fail@plt+0x32ec>
   147c8:	b	14838 <__assert_fail@plt+0x335c>
   147cc:	ldr	r0, [fp, #-8]
   147d0:	ldr	r0, [r0, #48]	; 0x30
   147d4:	and	r0, r0, #4
   147d8:	cmp	r0, #0
   147dc:	bne	14834 <__assert_fail@plt+0x3358>
   147e0:	ldr	r0, [fp, #-8]
   147e4:	ldr	r0, [r0, #28]
   147e8:	bl	11440 <fchdir@plt>
   147ec:	cmp	r0, #0
   147f0:	beq	14800 <__assert_fail@plt+0x3324>
   147f4:	bl	11398 <__errno_location@plt>
   147f8:	ldr	r0, [r0]
   147fc:	str	r0, [sp, #12]
   14800:	ldr	r0, [fp, #-8]
   14804:	ldr	r0, [r0, #28]
   14808:	bl	114a0 <close@plt>
   1480c:	cmp	r0, #0
   14810:	beq	14830 <__assert_fail@plt+0x3354>
   14814:	ldr	r0, [sp, #12]
   14818:	cmp	r0, #0
   1481c:	bne	1482c <__assert_fail@plt+0x3350>
   14820:	bl	11398 <__errno_location@plt>
   14824:	ldr	r0, [r0]
   14828:	str	r0, [sp, #12]
   1482c:	b	14830 <__assert_fail@plt+0x3354>
   14830:	b	14834 <__assert_fail@plt+0x3358>
   14834:	b	14838 <__assert_fail@plt+0x335c>
   14838:	ldr	r0, [fp, #-8]
   1483c:	add	r0, r0, #60	; 0x3c
   14840:	bl	148b4 <__assert_fail@plt+0x33d8>
   14844:	ldr	r0, [fp, #-8]
   14848:	ldr	r0, [r0, #52]	; 0x34
   1484c:	movw	r1, #0
   14850:	cmp	r0, r1
   14854:	beq	14864 <__assert_fail@plt+0x3388>
   14858:	ldr	r0, [fp, #-8]
   1485c:	ldr	r0, [r0, #52]	; 0x34
   14860:	bl	18024 <__assert_fail@plt+0x6b48>
   14864:	ldr	r0, [fp, #-8]
   14868:	bl	1490c <__assert_fail@plt+0x3430>
   1486c:	ldr	r0, [fp, #-8]
   14870:	bl	1382c <__assert_fail@plt+0x2350>
   14874:	ldr	r0, [sp, #12]
   14878:	cmp	r0, #0
   1487c:	beq	148a0 <__assert_fail@plt+0x33c4>
   14880:	ldr	r0, [sp, #12]
   14884:	str	r0, [sp, #4]
   14888:	bl	11398 <__errno_location@plt>
   1488c:	ldr	r1, [sp, #4]
   14890:	str	r1, [r0]
   14894:	mvn	r0, #0
   14898:	str	r0, [fp, #-4]
   1489c:	b	148a8 <__assert_fail@plt+0x33cc>
   148a0:	movw	r0, #0
   148a4:	str	r0, [fp, #-4]
   148a8:	ldr	r0, [fp, #-4]
   148ac:	mov	sp, fp
   148b0:	pop	{fp, pc}
   148b4:	push	{fp, lr}
   148b8:	mov	fp, sp
   148bc:	sub	sp, sp, #8
   148c0:	str	r0, [sp, #4]
   148c4:	ldr	r0, [sp, #4]
   148c8:	bl	18f9c <__assert_fail@plt+0x7ac0>
   148cc:	mvn	r1, #0
   148d0:	eor	r0, r0, r1
   148d4:	tst	r0, #1
   148d8:	beq	14904 <__assert_fail@plt+0x3428>
   148dc:	ldr	r0, [sp, #4]
   148e0:	bl	1906c <__assert_fail@plt+0x7b90>
   148e4:	str	r0, [sp]
   148e8:	ldr	r0, [sp]
   148ec:	movw	r1, #0
   148f0:	cmp	r1, r0
   148f4:	bgt	14900 <__assert_fail@plt+0x3424>
   148f8:	ldr	r0, [sp]
   148fc:	bl	114a0 <close@plt>
   14900:	b	148c4 <__assert_fail@plt+0x33e8>
   14904:	mov	sp, fp
   14908:	pop	{fp, pc}
   1490c:	push	{fp, lr}
   14910:	mov	fp, sp
   14914:	sub	sp, sp, #8
   14918:	str	r0, [sp, #4]
   1491c:	ldr	r0, [sp, #4]
   14920:	ldr	r0, [r0, #48]	; 0x30
   14924:	movw	r1, #258	; 0x102
   14928:	and	r0, r0, r1
   1492c:	cmp	r0, #0
   14930:	beq	14958 <__assert_fail@plt+0x347c>
   14934:	ldr	r0, [sp, #4]
   14938:	ldr	r0, [r0, #56]	; 0x38
   1493c:	movw	r1, #0
   14940:	cmp	r0, r1
   14944:	beq	14954 <__assert_fail@plt+0x3478>
   14948:	ldr	r0, [sp, #4]
   1494c:	ldr	r0, [r0, #56]	; 0x38
   14950:	bl	18024 <__assert_fail@plt+0x6b48>
   14954:	b	14964 <__assert_fail@plt+0x3488>
   14958:	ldr	r0, [sp, #4]
   1495c:	ldr	r0, [r0, #56]	; 0x38
   14960:	bl	1382c <__assert_fail@plt+0x2350>
   14964:	mov	sp, fp
   14968:	pop	{fp, pc}
   1496c:	push	{fp, lr}
   14970:	mov	fp, sp
   14974:	sub	sp, sp, #40	; 0x28
   14978:	str	r0, [fp, #-8]
   1497c:	ldr	r0, [fp, #-8]
   14980:	ldr	r0, [r0]
   14984:	movw	r1, #0
   14988:	cmp	r0, r1
   1498c:	beq	149a4 <__assert_fail@plt+0x34c8>
   14990:	ldr	r0, [fp, #-8]
   14994:	ldr	r0, [r0, #48]	; 0x30
   14998:	and	r0, r0, #8192	; 0x2000
   1499c:	cmp	r0, #0
   149a0:	beq	149b0 <__assert_fail@plt+0x34d4>
   149a4:	movw	r0, #0
   149a8:	str	r0, [fp, #-4]
   149ac:	b	15340 <__assert_fail@plt+0x3e64>
   149b0:	ldr	r0, [fp, #-8]
   149b4:	ldr	r0, [r0]
   149b8:	str	r0, [fp, #-12]
   149bc:	ldr	r0, [fp, #-12]
   149c0:	ldrh	r0, [r0, #60]	; 0x3c
   149c4:	strh	r0, [fp, #-18]	; 0xffffffee
   149c8:	ldr	r0, [fp, #-12]
   149cc:	movw	r1, #3
   149d0:	strh	r1, [r0, #60]	; 0x3c
   149d4:	ldrh	r0, [fp, #-18]	; 0xffffffee
   149d8:	cmp	r0, #1
   149dc:	bne	14a08 <__assert_fail@plt+0x352c>
   149e0:	ldr	r0, [fp, #-8]
   149e4:	ldr	r1, [fp, #-12]
   149e8:	movw	r2, #0
   149ec:	and	r2, r2, #1
   149f0:	bl	140f0 <__assert_fail@plt+0x2c14>
   149f4:	ldr	r1, [fp, #-12]
   149f8:	strh	r0, [r1, #56]	; 0x38
   149fc:	ldr	r0, [fp, #-12]
   14a00:	str	r0, [fp, #-4]
   14a04:	b	15340 <__assert_fail@plt+0x3e64>
   14a08:	ldrh	r0, [fp, #-18]	; 0xffffffee
   14a0c:	cmp	r0, #2
   14a10:	bne	14acc <__assert_fail@plt+0x35f0>
   14a14:	ldr	r0, [fp, #-12]
   14a18:	ldrh	r0, [r0, #56]	; 0x38
   14a1c:	cmp	r0, #12
   14a20:	beq	14a34 <__assert_fail@plt+0x3558>
   14a24:	ldr	r0, [fp, #-12]
   14a28:	ldrh	r0, [r0, #56]	; 0x38
   14a2c:	cmp	r0, #13
   14a30:	bne	14acc <__assert_fail@plt+0x35f0>
   14a34:	ldr	r0, [fp, #-8]
   14a38:	ldr	r1, [fp, #-12]
   14a3c:	movw	r2, #1
   14a40:	and	r2, r2, #1
   14a44:	bl	140f0 <__assert_fail@plt+0x2c14>
   14a48:	ldr	r1, [fp, #-12]
   14a4c:	strh	r0, [r1, #56]	; 0x38
   14a50:	ldr	r0, [fp, #-12]
   14a54:	ldrh	r0, [r0, #56]	; 0x38
   14a58:	cmp	r0, #1
   14a5c:	bne	14ac8 <__assert_fail@plt+0x35ec>
   14a60:	ldr	r0, [fp, #-8]
   14a64:	ldr	r0, [r0, #48]	; 0x30
   14a68:	and	r0, r0, #4
   14a6c:	cmp	r0, #0
   14a70:	bne	14ac8 <__assert_fail@plt+0x35ec>
   14a74:	ldr	r0, [fp, #-8]
   14a78:	movw	r1, #20922	; 0x51ba
   14a7c:	movt	r1, #2
   14a80:	bl	145ac <__assert_fail@plt+0x30d0>
   14a84:	ldr	r1, [fp, #-12]
   14a88:	str	r0, [r1, #36]	; 0x24
   14a8c:	cmp	r0, #0
   14a90:	bge	14ab4 <__assert_fail@plt+0x35d8>
   14a94:	bl	11398 <__errno_location@plt>
   14a98:	ldr	r0, [r0]
   14a9c:	ldr	r1, [fp, #-12]
   14aa0:	str	r0, [r1, #32]
   14aa4:	ldr	r0, [fp, #-12]
   14aa8:	movw	r1, #7
   14aac:	strh	r1, [r0, #56]	; 0x38
   14ab0:	b	14ac4 <__assert_fail@plt+0x35e8>
   14ab4:	ldr	r0, [fp, #-12]
   14ab8:	ldrh	r1, [r0, #58]	; 0x3a
   14abc:	orr	r1, r1, #2
   14ac0:	strh	r1, [r0, #58]	; 0x3a
   14ac4:	b	14ac8 <__assert_fail@plt+0x35ec>
   14ac8:	b	14fdc <__assert_fail@plt+0x3b00>
   14acc:	ldr	r0, [fp, #-12]
   14ad0:	ldrh	r0, [r0, #56]	; 0x38
   14ad4:	cmp	r0, #1
   14ad8:	bne	14d34 <__assert_fail@plt+0x3858>
   14adc:	ldrh	r0, [fp, #-18]	; 0xffffffee
   14ae0:	cmp	r0, #4
   14ae4:	beq	14b2c <__assert_fail@plt+0x3650>
   14ae8:	ldr	r0, [fp, #-8]
   14aec:	ldr	r0, [r0, #48]	; 0x30
   14af0:	and	r0, r0, #64	; 0x40
   14af4:	cmp	r0, #0
   14af8:	beq	14b9c <__assert_fail@plt+0x36c0>
   14afc:	ldr	r0, [fp, #-12]
   14b00:	ldr	r1, [r0, #64]	; 0x40
   14b04:	ldr	r0, [r0, #68]	; 0x44
   14b08:	ldr	r2, [fp, #-8]
   14b0c:	ldr	r3, [r2, #16]
   14b10:	ldr	r2, [r2, #20]
   14b14:	eor	r0, r0, r2
   14b18:	eor	r1, r1, r3
   14b1c:	orr	r0, r1, r0
   14b20:	cmp	r0, #0
   14b24:	beq	14b9c <__assert_fail@plt+0x36c0>
   14b28:	b	14b2c <__assert_fail@plt+0x3650>
   14b2c:	ldr	r0, [fp, #-12]
   14b30:	ldrh	r0, [r0, #58]	; 0x3a
   14b34:	and	r0, r0, #2
   14b38:	cmp	r0, #0
   14b3c:	beq	14b4c <__assert_fail@plt+0x3670>
   14b40:	ldr	r0, [fp, #-12]
   14b44:	ldr	r0, [r0, #36]	; 0x24
   14b48:	bl	114a0 <close@plt>
   14b4c:	ldr	r0, [fp, #-8]
   14b50:	ldr	r0, [r0, #4]
   14b54:	movw	r1, #0
   14b58:	cmp	r0, r1
   14b5c:	beq	14b78 <__assert_fail@plt+0x369c>
   14b60:	ldr	r0, [fp, #-8]
   14b64:	ldr	r0, [r0, #4]
   14b68:	bl	14648 <__assert_fail@plt+0x316c>
   14b6c:	ldr	r0, [fp, #-8]
   14b70:	movw	r1, #0
   14b74:	str	r1, [r0, #4]
   14b78:	ldr	r0, [fp, #-12]
   14b7c:	movw	r1, #6
   14b80:	strh	r1, [r0, #56]	; 0x38
   14b84:	ldr	r0, [fp, #-8]
   14b88:	ldr	r1, [fp, #-12]
   14b8c:	bl	1534c <__assert_fail@plt+0x3e70>
   14b90:	ldr	r0, [fp, #-12]
   14b94:	str	r0, [fp, #-4]
   14b98:	b	15340 <__assert_fail@plt+0x3e64>
   14b9c:	ldr	r0, [fp, #-8]
   14ba0:	ldr	r0, [r0, #4]
   14ba4:	movw	r1, #0
   14ba8:	cmp	r0, r1
   14bac:	beq	14bf0 <__assert_fail@plt+0x3714>
   14bb0:	ldr	r0, [fp, #-8]
   14bb4:	ldr	r0, [r0, #48]	; 0x30
   14bb8:	and	r0, r0, #4096	; 0x1000
   14bbc:	cmp	r0, #0
   14bc0:	beq	14bf0 <__assert_fail@plt+0x3714>
   14bc4:	ldr	r0, [fp, #-8]
   14bc8:	ldr	r1, [r0, #48]	; 0x30
   14bcc:	mvn	r2, #4096	; 0x1000
   14bd0:	and	r1, r1, r2
   14bd4:	str	r1, [r0, #48]	; 0x30
   14bd8:	ldr	r0, [fp, #-8]
   14bdc:	ldr	r0, [r0, #4]
   14be0:	bl	14648 <__assert_fail@plt+0x316c>
   14be4:	ldr	r0, [fp, #-8]
   14be8:	movw	r1, #0
   14bec:	str	r1, [r0, #4]
   14bf0:	ldr	r0, [fp, #-8]
   14bf4:	ldr	r0, [r0, #4]
   14bf8:	movw	r1, #0
   14bfc:	cmp	r0, r1
   14c00:	beq	14c8c <__assert_fail@plt+0x37b0>
   14c04:	ldr	r0, [fp, #-8]
   14c08:	ldr	r1, [fp, #-12]
   14c0c:	ldr	r2, [fp, #-12]
   14c10:	ldr	r3, [r2, #24]
   14c14:	mvn	r2, #0
   14c18:	bl	154ec <__assert_fail@plt+0x4010>
   14c1c:	cmp	r0, #0
   14c20:	beq	14c88 <__assert_fail@plt+0x37ac>
   14c24:	bl	11398 <__errno_location@plt>
   14c28:	ldr	r0, [r0]
   14c2c:	ldr	r1, [fp, #-12]
   14c30:	str	r0, [r1, #32]
   14c34:	ldr	r0, [fp, #-12]
   14c38:	ldrh	r1, [r0, #58]	; 0x3a
   14c3c:	orr	r1, r1, #1
   14c40:	strh	r1, [r0, #58]	; 0x3a
   14c44:	ldr	r0, [fp, #-8]
   14c48:	ldr	r0, [r0, #4]
   14c4c:	str	r0, [fp, #-12]
   14c50:	ldr	r0, [fp, #-12]
   14c54:	movw	r1, #0
   14c58:	cmp	r0, r1
   14c5c:	beq	14c84 <__assert_fail@plt+0x37a8>
   14c60:	ldr	r0, [fp, #-12]
   14c64:	ldr	r0, [r0, #4]
   14c68:	ldr	r0, [r0, #24]
   14c6c:	ldr	r1, [fp, #-12]
   14c70:	str	r0, [r1, #24]
   14c74:	ldr	r0, [fp, #-12]
   14c78:	ldr	r0, [r0, #8]
   14c7c:	str	r0, [fp, #-12]
   14c80:	b	14c50 <__assert_fail@plt+0x3774>
   14c84:	b	14c88 <__assert_fail@plt+0x37ac>
   14c88:	b	14d18 <__assert_fail@plt+0x383c>
   14c8c:	ldr	r0, [fp, #-8]
   14c90:	movw	r1, #3
   14c94:	bl	157ac <__assert_fail@plt+0x42d0>
   14c98:	ldr	r1, [fp, #-8]
   14c9c:	str	r0, [r1, #4]
   14ca0:	movw	r1, #0
   14ca4:	cmp	r0, r1
   14ca8:	bne	14d14 <__assert_fail@plt+0x3838>
   14cac:	ldr	r0, [fp, #-8]
   14cb0:	ldr	r0, [r0, #48]	; 0x30
   14cb4:	and	r0, r0, #8192	; 0x2000
   14cb8:	cmp	r0, #0
   14cbc:	beq	14ccc <__assert_fail@plt+0x37f0>
   14cc0:	movw	r0, #0
   14cc4:	str	r0, [fp, #-4]
   14cc8:	b	15340 <__assert_fail@plt+0x3e64>
   14ccc:	ldr	r0, [fp, #-12]
   14cd0:	ldr	r0, [r0, #32]
   14cd4:	cmp	r0, #0
   14cd8:	beq	14cf8 <__assert_fail@plt+0x381c>
   14cdc:	ldr	r0, [fp, #-12]
   14ce0:	ldrh	r0, [r0, #56]	; 0x38
   14ce4:	cmp	r0, #4
   14ce8:	beq	14cf8 <__assert_fail@plt+0x381c>
   14cec:	ldr	r0, [fp, #-12]
   14cf0:	movw	r1, #7
   14cf4:	strh	r1, [r0, #56]	; 0x38
   14cf8:	b	14cfc <__assert_fail@plt+0x3820>
   14cfc:	ldr	r0, [fp, #-8]
   14d00:	ldr	r1, [fp, #-12]
   14d04:	bl	1534c <__assert_fail@plt+0x3e70>
   14d08:	ldr	r0, [fp, #-12]
   14d0c:	str	r0, [fp, #-4]
   14d10:	b	15340 <__assert_fail@plt+0x3e64>
   14d14:	b	14d18 <__assert_fail@plt+0x383c>
   14d18:	ldr	r0, [fp, #-8]
   14d1c:	ldr	r0, [r0, #4]
   14d20:	str	r0, [fp, #-12]
   14d24:	ldr	r0, [fp, #-8]
   14d28:	movw	r1, #0
   14d2c:	str	r1, [r0, #4]
   14d30:	b	14f3c <__assert_fail@plt+0x3a60>
   14d34:	b	14d38 <__assert_fail@plt+0x385c>
   14d38:	ldr	r0, [fp, #-12]
   14d3c:	str	r0, [fp, #-16]
   14d40:	ldr	r0, [fp, #-12]
   14d44:	ldr	r0, [r0, #8]
   14d48:	movw	r1, #0
   14d4c:	cmp	r0, r1
   14d50:	bne	14dec <__assert_fail@plt+0x3910>
   14d54:	ldr	r0, [fp, #-12]
   14d58:	ldr	r0, [r0, #4]
   14d5c:	ldr	r0, [r0, #12]
   14d60:	movw	r1, #0
   14d64:	cmp	r0, r1
   14d68:	beq	14dec <__assert_fail@plt+0x3910>
   14d6c:	ldr	r0, [fp, #-16]
   14d70:	ldr	r0, [r0, #4]
   14d74:	str	r0, [fp, #-12]
   14d78:	ldr	r0, [fp, #-12]
   14d7c:	ldr	r1, [fp, #-8]
   14d80:	str	r0, [r1]
   14d84:	ldr	r0, [fp, #-8]
   14d88:	ldr	r0, [r0, #24]
   14d8c:	ldr	r1, [fp, #-12]
   14d90:	ldr	r1, [r1, #40]	; 0x28
   14d94:	add	r0, r0, r1
   14d98:	movw	r1, #0
   14d9c:	strb	r1, [r0]
   14da0:	ldr	r0, [fp, #-8]
   14da4:	movw	r1, #3
   14da8:	bl	157ac <__assert_fail@plt+0x42d0>
   14dac:	str	r0, [fp, #-12]
   14db0:	movw	r1, #0
   14db4:	cmp	r0, r1
   14db8:	bne	14de0 <__assert_fail@plt+0x3904>
   14dbc:	ldr	r0, [fp, #-8]
   14dc0:	ldr	r0, [r0, #48]	; 0x30
   14dc4:	and	r0, r0, #8192	; 0x2000
   14dc8:	cmp	r0, #0
   14dcc:	beq	14ddc <__assert_fail@plt+0x3900>
   14dd0:	movw	r0, #0
   14dd4:	str	r0, [fp, #-4]
   14dd8:	b	15340 <__assert_fail@plt+0x3e64>
   14ddc:	b	150e4 <__assert_fail@plt+0x3c08>
   14de0:	ldr	r0, [fp, #-16]
   14de4:	bl	1382c <__assert_fail@plt+0x2350>
   14de8:	b	14f3c <__assert_fail@plt+0x3a60>
   14dec:	ldr	r0, [fp, #-12]
   14df0:	ldr	r0, [r0, #8]
   14df4:	str	r0, [fp, #-12]
   14df8:	movw	r1, #0
   14dfc:	cmp	r0, r1
   14e00:	beq	150e0 <__assert_fail@plt+0x3c04>
   14e04:	ldr	r0, [fp, #-12]
   14e08:	ldr	r1, [fp, #-8]
   14e0c:	str	r0, [r1]
   14e10:	ldr	r0, [fp, #-16]
   14e14:	bl	1382c <__assert_fail@plt+0x2350>
   14e18:	ldr	r0, [fp, #-12]
   14e1c:	ldr	r0, [r0, #48]	; 0x30
   14e20:	cmp	r0, #0
   14e24:	bne	14e74 <__assert_fail@plt+0x3998>
   14e28:	ldr	r0, [fp, #-8]
   14e2c:	bl	16470 <__assert_fail@plt+0x4f94>
   14e30:	cmp	r0, #0
   14e34:	beq	14e54 <__assert_fail@plt+0x3978>
   14e38:	ldr	r0, [fp, #-8]
   14e3c:	ldr	r1, [r0, #48]	; 0x30
   14e40:	orr	r1, r1, #8192	; 0x2000
   14e44:	str	r1, [r0, #48]	; 0x30
   14e48:	movw	r0, #0
   14e4c:	str	r0, [fp, #-4]
   14e50:	b	15340 <__assert_fail@plt+0x3e64>
   14e54:	ldr	r0, [fp, #-8]
   14e58:	bl	1490c <__assert_fail@plt+0x3430>
   14e5c:	ldr	r0, [fp, #-8]
   14e60:	ldr	r1, [fp, #-12]
   14e64:	bl	16580 <__assert_fail@plt+0x50a4>
   14e68:	ldr	r0, [fp, #-8]
   14e6c:	bl	144d0 <__assert_fail@plt+0x2ff4>
   14e70:	b	14fdc <__assert_fail@plt+0x3b00>
   14e74:	ldr	r0, [fp, #-12]
   14e78:	ldrh	r0, [r0, #60]	; 0x3c
   14e7c:	cmp	r0, #4
   14e80:	bne	14e88 <__assert_fail@plt+0x39ac>
   14e84:	b	14d38 <__assert_fail@plt+0x385c>
   14e88:	ldr	r0, [fp, #-12]
   14e8c:	ldrh	r0, [r0, #60]	; 0x3c
   14e90:	cmp	r0, #2
   14e94:	bne	14f38 <__assert_fail@plt+0x3a5c>
   14e98:	ldr	r0, [fp, #-8]
   14e9c:	ldr	r1, [fp, #-12]
   14ea0:	movw	r2, #1
   14ea4:	and	r2, r2, #1
   14ea8:	bl	140f0 <__assert_fail@plt+0x2c14>
   14eac:	ldr	r1, [fp, #-12]
   14eb0:	strh	r0, [r1, #56]	; 0x38
   14eb4:	ldr	r0, [fp, #-12]
   14eb8:	ldrh	r0, [r0, #56]	; 0x38
   14ebc:	cmp	r0, #1
   14ec0:	bne	14f2c <__assert_fail@plt+0x3a50>
   14ec4:	ldr	r0, [fp, #-8]
   14ec8:	ldr	r0, [r0, #48]	; 0x30
   14ecc:	and	r0, r0, #4
   14ed0:	cmp	r0, #0
   14ed4:	bne	14f2c <__assert_fail@plt+0x3a50>
   14ed8:	ldr	r0, [fp, #-8]
   14edc:	movw	r1, #20922	; 0x51ba
   14ee0:	movt	r1, #2
   14ee4:	bl	145ac <__assert_fail@plt+0x30d0>
   14ee8:	ldr	r1, [fp, #-12]
   14eec:	str	r0, [r1, #36]	; 0x24
   14ef0:	cmp	r0, #0
   14ef4:	bge	14f18 <__assert_fail@plt+0x3a3c>
   14ef8:	bl	11398 <__errno_location@plt>
   14efc:	ldr	r0, [r0]
   14f00:	ldr	r1, [fp, #-12]
   14f04:	str	r0, [r1, #32]
   14f08:	ldr	r0, [fp, #-12]
   14f0c:	movw	r1, #7
   14f10:	strh	r1, [r0, #56]	; 0x38
   14f14:	b	14f28 <__assert_fail@plt+0x3a4c>
   14f18:	ldr	r0, [fp, #-12]
   14f1c:	ldrh	r1, [r0, #58]	; 0x3a
   14f20:	orr	r1, r1, #2
   14f24:	strh	r1, [r0, #58]	; 0x3a
   14f28:	b	14f2c <__assert_fail@plt+0x3a50>
   14f2c:	ldr	r0, [fp, #-12]
   14f30:	movw	r1, #3
   14f34:	strh	r1, [r0, #60]	; 0x3c
   14f38:	b	14f3c <__assert_fail@plt+0x3a60>
   14f3c:	ldr	r0, [fp, #-8]
   14f40:	ldr	r0, [r0, #24]
   14f44:	ldr	r1, [fp, #-12]
   14f48:	ldr	r1, [r1, #4]
   14f4c:	ldr	r1, [r1, #28]
   14f50:	ldr	r2, [fp, #-12]
   14f54:	ldr	r2, [r2, #4]
   14f58:	ldr	r2, [r2, #40]	; 0x28
   14f5c:	sub	r2, r2, #1
   14f60:	add	r1, r1, r2
   14f64:	ldrb	r1, [r1]
   14f68:	cmp	r1, #47	; 0x2f
   14f6c:	str	r0, [sp, #12]
   14f70:	bne	14f8c <__assert_fail@plt+0x3ab0>
   14f74:	ldr	r0, [fp, #-12]
   14f78:	ldr	r0, [r0, #4]
   14f7c:	ldr	r0, [r0, #40]	; 0x28
   14f80:	sub	r0, r0, #1
   14f84:	str	r0, [sp, #8]
   14f88:	b	14f9c <__assert_fail@plt+0x3ac0>
   14f8c:	ldr	r0, [fp, #-12]
   14f90:	ldr	r0, [r0, #4]
   14f94:	ldr	r0, [r0, #40]	; 0x28
   14f98:	str	r0, [sp, #8]
   14f9c:	ldr	r0, [sp, #8]
   14fa0:	ldr	r1, [sp, #12]
   14fa4:	add	r0, r1, r0
   14fa8:	str	r0, [sp, #16]
   14fac:	ldr	r0, [sp, #16]
   14fb0:	add	r2, r0, #1
   14fb4:	str	r2, [sp, #16]
   14fb8:	movw	r2, #47	; 0x2f
   14fbc:	strb	r2, [r0]
   14fc0:	ldr	r0, [sp, #16]
   14fc4:	ldr	r2, [fp, #-12]
   14fc8:	add	r1, r2, #168	; 0xa8
   14fcc:	ldr	r2, [fp, #-12]
   14fd0:	ldr	r2, [r2, #52]	; 0x34
   14fd4:	add	r2, r2, #1
   14fd8:	bl	11218 <memmove@plt>
   14fdc:	ldr	r0, [fp, #-12]
   14fe0:	ldr	r1, [fp, #-8]
   14fe4:	str	r0, [r1]
   14fe8:	ldr	r0, [fp, #-12]
   14fec:	ldrh	r0, [r0, #56]	; 0x38
   14ff0:	cmp	r0, #11
   14ff4:	bne	1506c <__assert_fail@plt+0x3b90>
   14ff8:	ldr	r0, [fp, #-12]
   14ffc:	ldr	r1, [r0, #112]	; 0x70
   15000:	ldr	r0, [r0, #116]	; 0x74
   15004:	eor	r1, r1, #2
   15008:	orr	r0, r1, r0
   1500c:	cmp	r0, #0
   15010:	bne	15038 <__assert_fail@plt+0x3b5c>
   15014:	b	15018 <__assert_fail@plt+0x3b3c>
   15018:	ldr	r0, [fp, #-8]
   1501c:	ldr	r1, [fp, #-12]
   15020:	movw	r2, #0
   15024:	and	r2, r2, #1
   15028:	bl	140f0 <__assert_fail@plt+0x2c14>
   1502c:	ldr	r1, [fp, #-12]
   15030:	strh	r0, [r1, #56]	; 0x38
   15034:	b	15068 <__assert_fail@plt+0x3b8c>
   15038:	b	1503c <__assert_fail@plt+0x3b60>
   1503c:	ldr	r0, [fp, #-12]
   15040:	ldr	r1, [r0, #112]	; 0x70
   15044:	ldr	r0, [r0, #116]	; 0x74
   15048:	eor	r1, r1, #1
   1504c:	orr	r0, r1, r0
   15050:	cmp	r0, #0
   15054:	beq	15060 <__assert_fail@plt+0x3b84>
   15058:	b	1505c <__assert_fail@plt+0x3b80>
   1505c:	bl	11494 <abort@plt>
   15060:	b	15064 <__assert_fail@plt+0x3b88>
   15064:	b	15068 <__assert_fail@plt+0x3b8c>
   15068:	b	1506c <__assert_fail@plt+0x3b90>
   1506c:	ldr	r0, [fp, #-12]
   15070:	ldrh	r0, [r0, #56]	; 0x38
   15074:	cmp	r0, #1
   15078:	bne	150d4 <__assert_fail@plt+0x3bf8>
   1507c:	ldr	r0, [fp, #-12]
   15080:	ldr	r0, [r0, #48]	; 0x30
   15084:	cmp	r0, #0
   15088:	bne	150a4 <__assert_fail@plt+0x3bc8>
   1508c:	ldr	r0, [fp, #-12]
   15090:	ldr	r1, [r0, #64]	; 0x40
   15094:	ldr	r0, [r0, #68]	; 0x44
   15098:	ldr	r2, [fp, #-8]
   1509c:	str	r0, [r2, #20]
   150a0:	str	r1, [r2, #16]
   150a4:	ldr	r0, [fp, #-8]
   150a8:	ldr	r1, [fp, #-12]
   150ac:	bl	16660 <__assert_fail@plt+0x5184>
   150b0:	tst	r0, #1
   150b4:	bne	150d0 <__assert_fail@plt+0x3bf4>
   150b8:	bl	11398 <__errno_location@plt>
   150bc:	movw	r1, #12
   150c0:	str	r1, [r0]
   150c4:	movw	r0, #0
   150c8:	str	r0, [fp, #-4]
   150cc:	b	15340 <__assert_fail@plt+0x3e64>
   150d0:	b	150d4 <__assert_fail@plt+0x3bf8>
   150d4:	ldr	r0, [fp, #-12]
   150d8:	str	r0, [fp, #-4]
   150dc:	b	15340 <__assert_fail@plt+0x3e64>
   150e0:	b	150e4 <__assert_fail@plt+0x3c08>
   150e4:	ldr	r0, [fp, #-16]
   150e8:	ldr	r0, [r0, #4]
   150ec:	str	r0, [fp, #-12]
   150f0:	ldr	r0, [fp, #-12]
   150f4:	ldr	r1, [fp, #-8]
   150f8:	str	r0, [r1]
   150fc:	ldr	r0, [fp, #-16]
   15100:	bl	1382c <__assert_fail@plt+0x2350>
   15104:	ldr	r0, [fp, #-12]
   15108:	ldr	r0, [r0, #48]	; 0x30
   1510c:	cmn	r0, #1
   15110:	bne	15138 <__assert_fail@plt+0x3c5c>
   15114:	ldr	r0, [fp, #-12]
   15118:	bl	1382c <__assert_fail@plt+0x2350>
   1511c:	bl	11398 <__errno_location@plt>
   15120:	movw	r1, #0
   15124:	str	r1, [r0]
   15128:	ldr	r0, [fp, #-8]
   1512c:	str	r1, [r0]
   15130:	str	r1, [fp, #-4]
   15134:	b	15340 <__assert_fail@plt+0x3e64>
   15138:	b	1513c <__assert_fail@plt+0x3c60>
   1513c:	ldr	r0, [fp, #-12]
   15140:	ldrh	r0, [r0, #56]	; 0x38
   15144:	cmp	r0, #11
   15148:	bne	15150 <__assert_fail@plt+0x3c74>
   1514c:	bl	11494 <abort@plt>
   15150:	b	15154 <__assert_fail@plt+0x3c78>
   15154:	ldr	r0, [fp, #-8]
   15158:	ldr	r0, [r0, #24]
   1515c:	ldr	r1, [fp, #-12]
   15160:	ldr	r1, [r1, #40]	; 0x28
   15164:	add	r0, r0, r1
   15168:	movw	r1, #0
   1516c:	strb	r1, [r0]
   15170:	ldr	r0, [fp, #-12]
   15174:	ldr	r0, [r0, #48]	; 0x30
   15178:	cmp	r0, #0
   1517c:	bne	151b4 <__assert_fail@plt+0x3cd8>
   15180:	ldr	r0, [fp, #-8]
   15184:	bl	16470 <__assert_fail@plt+0x4f94>
   15188:	cmp	r0, #0
   1518c:	beq	151b0 <__assert_fail@plt+0x3cd4>
   15190:	bl	11398 <__errno_location@plt>
   15194:	ldr	r0, [r0]
   15198:	ldr	r1, [fp, #-12]
   1519c:	str	r0, [r1, #32]
   151a0:	ldr	r0, [fp, #-8]
   151a4:	ldr	r1, [r0, #48]	; 0x30
   151a8:	orr	r1, r1, #8192	; 0x2000
   151ac:	str	r1, [r0, #48]	; 0x30
   151b0:	b	152b0 <__assert_fail@plt+0x3dd4>
   151b4:	ldr	r0, [fp, #-12]
   151b8:	ldrh	r0, [r0, #58]	; 0x3a
   151bc:	and	r0, r0, #2
   151c0:	cmp	r0, #0
   151c4:	beq	15250 <__assert_fail@plt+0x3d74>
   151c8:	ldr	r0, [fp, #-8]
   151cc:	ldr	r0, [r0, #48]	; 0x30
   151d0:	and	r0, r0, #4
   151d4:	cmp	r0, #0
   151d8:	bne	15240 <__assert_fail@plt+0x3d64>
   151dc:	ldr	r0, [fp, #-8]
   151e0:	ldr	r0, [r0, #48]	; 0x30
   151e4:	and	r0, r0, #512	; 0x200
   151e8:	cmp	r0, #0
   151ec:	beq	1520c <__assert_fail@plt+0x3d30>
   151f0:	ldr	r0, [fp, #-8]
   151f4:	ldr	r1, [fp, #-12]
   151f8:	ldr	r1, [r1, #36]	; 0x24
   151fc:	movw	r2, #1
   15200:	and	r2, r2, #1
   15204:	bl	167c0 <__assert_fail@plt+0x52e4>
   15208:	b	15240 <__assert_fail@plt+0x3d64>
   1520c:	ldr	r0, [fp, #-12]
   15210:	ldr	r0, [r0, #36]	; 0x24
   15214:	bl	11440 <fchdir@plt>
   15218:	cmp	r0, #0
   1521c:	beq	15240 <__assert_fail@plt+0x3d64>
   15220:	bl	11398 <__errno_location@plt>
   15224:	ldr	r0, [r0]
   15228:	ldr	r1, [fp, #-12]
   1522c:	str	r0, [r1, #32]
   15230:	ldr	r0, [fp, #-8]
   15234:	ldr	r1, [r0, #48]	; 0x30
   15238:	orr	r1, r1, #8192	; 0x2000
   1523c:	str	r1, [r0, #48]	; 0x30
   15240:	ldr	r0, [fp, #-12]
   15244:	ldr	r0, [r0, #36]	; 0x24
   15248:	bl	114a0 <close@plt>
   1524c:	b	152ac <__assert_fail@plt+0x3dd0>
   15250:	ldr	r0, [fp, #-12]
   15254:	ldrh	r0, [r0, #58]	; 0x3a
   15258:	and	r0, r0, #1
   1525c:	cmp	r0, #0
   15260:	bne	152a8 <__assert_fail@plt+0x3dcc>
   15264:	ldr	r0, [fp, #-8]
   15268:	ldr	r1, [fp, #-12]
   1526c:	ldr	r1, [r1, #4]
   15270:	mvn	r2, #0
   15274:	movw	r3, #20921	; 0x51b9
   15278:	movt	r3, #2
   1527c:	bl	154ec <__assert_fail@plt+0x4010>
   15280:	cmp	r0, #0
   15284:	beq	152a8 <__assert_fail@plt+0x3dcc>
   15288:	bl	11398 <__errno_location@plt>
   1528c:	ldr	r0, [r0]
   15290:	ldr	r1, [fp, #-12]
   15294:	str	r0, [r1, #32]
   15298:	ldr	r0, [fp, #-8]
   1529c:	ldr	r1, [r0, #48]	; 0x30
   152a0:	orr	r1, r1, #8192	; 0x2000
   152a4:	str	r1, [r0, #48]	; 0x30
   152a8:	b	152ac <__assert_fail@plt+0x3dd0>
   152ac:	b	152b0 <__assert_fail@plt+0x3dd4>
   152b0:	ldr	r0, [fp, #-12]
   152b4:	ldrh	r0, [r0, #56]	; 0x38
   152b8:	cmp	r0, #2
   152bc:	beq	15310 <__assert_fail@plt+0x3e34>
   152c0:	ldr	r0, [fp, #-12]
   152c4:	ldr	r0, [r0, #32]
   152c8:	cmp	r0, #0
   152cc:	movw	r0, #0
   152d0:	movne	r0, #1
   152d4:	tst	r0, #1
   152d8:	movw	r0, #7
   152dc:	moveq	r0, #6
   152e0:	ldr	r1, [fp, #-12]
   152e4:	strh	r0, [r1, #56]	; 0x38
   152e8:	ldr	r0, [fp, #-12]
   152ec:	ldr	r0, [r0, #32]
   152f0:	cmp	r0, #0
   152f4:	bne	1530c <__assert_fail@plt+0x3e30>
   152f8:	b	152fc <__assert_fail@plt+0x3e20>
   152fc:	ldr	r0, [fp, #-8]
   15300:	ldr	r1, [fp, #-12]
   15304:	bl	1534c <__assert_fail@plt+0x3e70>
   15308:	b	1530c <__assert_fail@plt+0x3e30>
   1530c:	b	15310 <__assert_fail@plt+0x3e34>
   15310:	ldr	r0, [fp, #-8]
   15314:	ldr	r0, [r0, #48]	; 0x30
   15318:	and	r0, r0, #8192	; 0x2000
   1531c:	cmp	r0, #0
   15320:	beq	15330 <__assert_fail@plt+0x3e54>
   15324:	movw	r0, #0
   15328:	str	r0, [sp, #4]
   1532c:	b	15338 <__assert_fail@plt+0x3e5c>
   15330:	ldr	r0, [fp, #-12]
   15334:	str	r0, [sp, #4]
   15338:	ldr	r0, [sp, #4]
   1533c:	str	r0, [fp, #-4]
   15340:	ldr	r0, [fp, #-4]
   15344:	mov	sp, fp
   15348:	pop	{fp, pc}
   1534c:	push	{fp, lr}
   15350:	mov	fp, sp
   15354:	sub	sp, sp, #48	; 0x30
   15358:	str	r0, [fp, #-4]
   1535c:	str	r1, [fp, #-8]
   15360:	ldr	r0, [fp, #-8]
   15364:	add	r0, r0, #64	; 0x40
   15368:	str	r0, [fp, #-12]
   1536c:	ldr	r0, [fp, #-4]
   15370:	ldr	r0, [r0, #48]	; 0x30
   15374:	movw	r1, #258	; 0x102
   15378:	and	r0, r0, r1
   1537c:	cmp	r0, #0
   15380:	beq	153e0 <__assert_fail@plt+0x3f04>
   15384:	ldr	r0, [fp, #-12]
   15388:	ldr	r1, [r0]
   1538c:	ldr	r0, [r0, #4]
   15390:	str	r0, [sp, #12]
   15394:	str	r1, [sp, #8]
   15398:	ldr	r0, [fp, #-12]
   1539c:	ldr	r1, [r0, #96]	; 0x60
   153a0:	ldr	r0, [r0, #100]	; 0x64
   153a4:	str	r0, [sp, #20]
   153a8:	str	r1, [sp, #16]
   153ac:	ldr	r0, [fp, #-4]
   153b0:	ldr	r0, [r0, #56]	; 0x38
   153b4:	add	r1, sp, #8
   153b8:	bl	18b6c <__assert_fail@plt+0x7690>
   153bc:	str	r0, [sp, #4]
   153c0:	ldr	r0, [sp, #4]
   153c4:	movw	r1, #0
   153c8:	cmp	r0, r1
   153cc:	bne	153d4 <__assert_fail@plt+0x3ef8>
   153d0:	bl	11494 <abort@plt>
   153d4:	ldr	r0, [sp, #4]
   153d8:	bl	1382c <__assert_fail@plt+0x2350>
   153dc:	b	154e4 <__assert_fail@plt+0x4008>
   153e0:	ldr	r0, [fp, #-8]
   153e4:	ldr	r0, [r0, #4]
   153e8:	str	r0, [sp]
   153ec:	ldr	r0, [sp]
   153f0:	movw	r1, #0
   153f4:	cmp	r0, r1
   153f8:	beq	154e0 <__assert_fail@plt+0x4004>
   153fc:	ldr	r0, [sp]
   15400:	ldr	r0, [r0, #48]	; 0x30
   15404:	movw	r1, #0
   15408:	cmp	r1, r0
   1540c:	bgt	154e0 <__assert_fail@plt+0x4004>
   15410:	b	15414 <__assert_fail@plt+0x3f38>
   15414:	ldr	r0, [fp, #-4]
   15418:	ldr	r0, [r0, #56]	; 0x38
   1541c:	ldr	r1, [r0, #16]
   15420:	ldr	r0, [r0, #20]
   15424:	orr	r0, r1, r0
   15428:	cmp	r0, #0
   1542c:	bne	15438 <__assert_fail@plt+0x3f5c>
   15430:	b	15434 <__assert_fail@plt+0x3f58>
   15434:	bl	11494 <abort@plt>
   15438:	ldr	r0, [fp, #-4]
   1543c:	ldr	r0, [r0, #56]	; 0x38
   15440:	ldr	r1, [r0]
   15444:	ldr	r0, [r0, #4]
   15448:	ldr	r2, [fp, #-12]
   1544c:	ldr	r3, [r2, #96]	; 0x60
   15450:	ldr	r2, [r2, #100]	; 0x64
   15454:	eor	r0, r0, r2
   15458:	eor	r1, r1, r3
   1545c:	orr	r0, r1, r0
   15460:	cmp	r0, #0
   15464:	bne	154d8 <__assert_fail@plt+0x3ffc>
   15468:	b	1546c <__assert_fail@plt+0x3f90>
   1546c:	ldr	r0, [fp, #-4]
   15470:	ldr	r0, [r0, #56]	; 0x38
   15474:	ldr	r1, [r0, #8]
   15478:	ldr	r0, [r0, #12]
   1547c:	ldr	r2, [fp, #-12]
   15480:	ldr	r3, [r2]
   15484:	ldr	r2, [r2, #4]
   15488:	eor	r0, r0, r2
   1548c:	eor	r1, r1, r3
   15490:	orr	r0, r1, r0
   15494:	cmp	r0, #0
   15498:	bne	154d8 <__assert_fail@plt+0x3ffc>
   1549c:	b	154a0 <__assert_fail@plt+0x3fc4>
   154a0:	ldr	r0, [sp]
   154a4:	ldr	r1, [r0, #64]	; 0x40
   154a8:	ldr	r0, [r0, #68]	; 0x44
   154ac:	ldr	r2, [fp, #-4]
   154b0:	ldr	r2, [r2, #56]	; 0x38
   154b4:	str	r0, [r2, #12]
   154b8:	str	r1, [r2, #8]
   154bc:	ldr	r0, [sp]
   154c0:	ldr	r1, [r0, #160]	; 0xa0
   154c4:	ldr	r0, [r0, #164]	; 0xa4
   154c8:	ldr	r2, [fp, #-4]
   154cc:	ldr	r2, [r2, #56]	; 0x38
   154d0:	str	r0, [r2, #4]
   154d4:	str	r1, [r2]
   154d8:	b	154dc <__assert_fail@plt+0x4000>
   154dc:	b	154e0 <__assert_fail@plt+0x4004>
   154e0:	b	154e4 <__assert_fail@plt+0x4008>
   154e4:	mov	sp, fp
   154e8:	pop	{fp, pc}
   154ec:	push	{fp, lr}
   154f0:	mov	fp, sp
   154f4:	sub	sp, sp, #160	; 0xa0
   154f8:	str	r0, [fp, #-8]
   154fc:	str	r1, [fp, #-12]
   15500:	str	r2, [fp, #-16]
   15504:	str	r3, [fp, #-20]	; 0xffffffec
   15508:	ldr	r0, [fp, #-20]	; 0xffffffec
   1550c:	movw	r1, #0
   15510:	cmp	r0, r1
   15514:	movw	r0, #0
   15518:	str	r0, [sp, #8]
   1551c:	beq	15540 <__assert_fail@plt+0x4064>
   15520:	ldr	r0, [fp, #-20]	; 0xffffffec
   15524:	movw	r1, #20921	; 0x51b9
   15528:	movt	r1, #2
   1552c:	bl	111e8 <strcmp@plt>
   15530:	cmp	r0, #0
   15534:	movw	r0, #0
   15538:	moveq	r0, #1
   1553c:	str	r0, [sp, #8]
   15540:	ldr	r0, [sp, #8]
   15544:	and	r0, r0, #1
   15548:	strb	r0, [fp, #-25]	; 0xffffffe7
   1554c:	ldr	r0, [fp, #-8]
   15550:	ldr	r0, [r0, #48]	; 0x30
   15554:	and	r0, r0, #4
   15558:	cmp	r0, #0
   1555c:	beq	15598 <__assert_fail@plt+0x40bc>
   15560:	ldr	r0, [fp, #-8]
   15564:	ldr	r0, [r0, #48]	; 0x30
   15568:	and	r0, r0, #512	; 0x200
   1556c:	cmp	r0, #0
   15570:	beq	1558c <__assert_fail@plt+0x40b0>
   15574:	ldr	r0, [fp, #-16]
   15578:	movw	r1, #0
   1557c:	cmp	r1, r0
   15580:	bgt	1558c <__assert_fail@plt+0x40b0>
   15584:	ldr	r0, [fp, #-16]
   15588:	bl	114a0 <close@plt>
   1558c:	movw	r0, #0
   15590:	str	r0, [fp, #-4]
   15594:	b	157a0 <__assert_fail@plt+0x42c4>
   15598:	ldr	r0, [fp, #-16]
   1559c:	cmp	r0, #0
   155a0:	bge	15610 <__assert_fail@plt+0x4134>
   155a4:	ldrb	r0, [fp, #-25]	; 0xffffffe7
   155a8:	tst	r0, #1
   155ac:	beq	15610 <__assert_fail@plt+0x4134>
   155b0:	ldr	r0, [fp, #-8]
   155b4:	ldr	r0, [r0, #48]	; 0x30
   155b8:	and	r0, r0, #512	; 0x200
   155bc:	cmp	r0, #0
   155c0:	beq	15610 <__assert_fail@plt+0x4134>
   155c4:	ldr	r0, [fp, #-8]
   155c8:	add	r0, r0, #60	; 0x3c
   155cc:	bl	18f9c <__assert_fail@plt+0x7ac0>
   155d0:	tst	r0, #1
   155d4:	bne	1560c <__assert_fail@plt+0x4130>
   155d8:	ldr	r0, [fp, #-8]
   155dc:	add	r0, r0, #60	; 0x3c
   155e0:	bl	1906c <__assert_fail@plt+0x7b90>
   155e4:	str	r0, [fp, #-36]	; 0xffffffdc
   155e8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   155ec:	movw	r1, #0
   155f0:	cmp	r1, r0
   155f4:	bgt	15608 <__assert_fail@plt+0x412c>
   155f8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   155fc:	str	r0, [fp, #-16]
   15600:	movw	r0, #0
   15604:	str	r0, [fp, #-20]	; 0xffffffec
   15608:	b	1560c <__assert_fail@plt+0x4130>
   1560c:	b	15610 <__assert_fail@plt+0x4134>
   15610:	ldr	r0, [fp, #-16]
   15614:	str	r0, [fp, #-32]	; 0xffffffe0
   15618:	ldr	r0, [fp, #-16]
   1561c:	cmp	r0, #0
   15620:	bge	15648 <__assert_fail@plt+0x416c>
   15624:	ldr	r0, [fp, #-8]
   15628:	ldr	r1, [fp, #-20]	; 0xffffffec
   1562c:	bl	145ac <__assert_fail@plt+0x30d0>
   15630:	str	r0, [fp, #-32]	; 0xffffffe0
   15634:	cmp	r0, #0
   15638:	bge	15648 <__assert_fail@plt+0x416c>
   1563c:	mvn	r0, #0
   15640:	str	r0, [fp, #-4]
   15644:	b	157a0 <__assert_fail@plt+0x42c4>
   15648:	ldr	r0, [fp, #-8]
   1564c:	ldr	r0, [r0, #48]	; 0x30
   15650:	and	r0, r0, #2
   15654:	cmp	r0, #0
   15658:	bne	15684 <__assert_fail@plt+0x41a8>
   1565c:	ldr	r0, [fp, #-20]	; 0xffffffec
   15660:	movw	r1, #0
   15664:	cmp	r0, r1
   15668:	beq	15718 <__assert_fail@plt+0x423c>
   1566c:	ldr	r0, [fp, #-20]	; 0xffffffec
   15670:	movw	r1, #20921	; 0x51b9
   15674:	movt	r1, #2
   15678:	bl	111e8 <strcmp@plt>
   1567c:	cmp	r0, #0
   15680:	bne	15718 <__assert_fail@plt+0x423c>
   15684:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15688:	add	r1, sp, #16
   1568c:	bl	2433c <__assert_fail@plt+0x12e60>
   15690:	cmp	r0, #0
   15694:	beq	156a4 <__assert_fail@plt+0x41c8>
   15698:	mvn	r0, #0
   1569c:	str	r0, [fp, #-24]	; 0xffffffe8
   156a0:	b	15760 <__assert_fail@plt+0x4284>
   156a4:	ldr	r0, [fp, #-12]
   156a8:	ldr	r1, [r0, #64]	; 0x40
   156ac:	ldr	r0, [r0, #68]	; 0x44
   156b0:	ldr	r2, [sp, #16]
   156b4:	ldr	r3, [sp, #20]
   156b8:	eor	r0, r0, r3
   156bc:	eor	r1, r1, r2
   156c0:	orr	r0, r1, r0
   156c4:	cmp	r0, #0
   156c8:	bne	156fc <__assert_fail@plt+0x4220>
   156cc:	b	156d0 <__assert_fail@plt+0x41f4>
   156d0:	ldr	r0, [fp, #-12]
   156d4:	ldr	r1, [r0, #160]	; 0xa0
   156d8:	ldr	r0, [r0, #164]	; 0xa4
   156dc:	ldr	r2, [sp, #112]	; 0x70
   156e0:	ldr	r3, [sp, #116]	; 0x74
   156e4:	eor	r0, r0, r3
   156e8:	eor	r1, r1, r2
   156ec:	orr	r0, r1, r0
   156f0:	cmp	r0, #0
   156f4:	beq	15714 <__assert_fail@plt+0x4238>
   156f8:	b	156fc <__assert_fail@plt+0x4220>
   156fc:	bl	11398 <__errno_location@plt>
   15700:	movw	r1, #2
   15704:	str	r1, [r0]
   15708:	mvn	r0, #0
   1570c:	str	r0, [fp, #-24]	; 0xffffffe8
   15710:	b	15760 <__assert_fail@plt+0x4284>
   15714:	b	15718 <__assert_fail@plt+0x423c>
   15718:	ldr	r0, [fp, #-8]
   1571c:	ldr	r0, [r0, #48]	; 0x30
   15720:	and	r0, r0, #512	; 0x200
   15724:	cmp	r0, #0
   15728:	beq	15754 <__assert_fail@plt+0x4278>
   1572c:	ldr	r0, [fp, #-8]
   15730:	ldr	r1, [fp, #-32]	; 0xffffffe0
   15734:	ldrb	r2, [fp, #-25]	; 0xffffffe7
   15738:	mvn	r3, #0
   1573c:	eor	r2, r2, r3
   15740:	and	r2, r2, #1
   15744:	bl	167c0 <__assert_fail@plt+0x52e4>
   15748:	movw	r0, #0
   1574c:	str	r0, [fp, #-4]
   15750:	b	157a0 <__assert_fail@plt+0x42c4>
   15754:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15758:	bl	11440 <fchdir@plt>
   1575c:	str	r0, [fp, #-24]	; 0xffffffe8
   15760:	ldr	r0, [fp, #-16]
   15764:	cmp	r0, #0
   15768:	bge	15798 <__assert_fail@plt+0x42bc>
   1576c:	bl	11398 <__errno_location@plt>
   15770:	ldr	r0, [r0]
   15774:	str	r0, [sp, #12]
   15778:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1577c:	bl	114a0 <close@plt>
   15780:	ldr	r1, [sp, #12]
   15784:	str	r0, [sp, #4]
   15788:	str	r1, [sp]
   1578c:	bl	11398 <__errno_location@plt>
   15790:	ldr	r1, [sp]
   15794:	str	r1, [r0]
   15798:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1579c:	str	r0, [fp, #-4]
   157a0:	ldr	r0, [fp, #-4]
   157a4:	mov	sp, fp
   157a8:	pop	{fp, pc}
   157ac:	push	{fp, lr}
   157b0:	mov	fp, sp
   157b4:	sub	sp, sp, #152	; 0x98
   157b8:	str	r0, [fp, #-8]
   157bc:	str	r1, [fp, #-12]
   157c0:	ldr	r0, [fp, #-8]
   157c4:	ldr	r0, [r0]
   157c8:	str	r0, [fp, #-68]	; 0xffffffbc
   157cc:	ldr	r0, [fp, #-68]	; 0xffffffbc
   157d0:	ldr	r0, [r0, #12]
   157d4:	movw	r1, #0
   157d8:	cmp	r0, r1
   157dc:	movw	r0, #0
   157e0:	movne	r0, #1
   157e4:	mvn	r1, #0
   157e8:	eor	r0, r0, r1
   157ec:	eor	r0, r0, r1
   157f0:	and	r0, r0, #1
   157f4:	strb	r0, [fp, #-69]	; 0xffffffbb
   157f8:	movw	r0, #0
   157fc:	strb	r0, [fp, #-70]	; 0xffffffba
   15800:	ldrb	r0, [fp, #-69]	; 0xffffffbb
   15804:	tst	r0, #1
   15808:	beq	15884 <__assert_fail@plt+0x43a8>
   1580c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15810:	ldr	r0, [r0, #12]
   15814:	str	r0, [sp, #72]	; 0x48
   15818:	ldr	r0, [sp, #72]	; 0x48
   1581c:	bl	11434 <dirfd@plt>
   15820:	str	r0, [fp, #-64]	; 0xffffffc0
   15824:	ldr	r0, [fp, #-64]	; 0xffffffc0
   15828:	cmp	r0, #0
   1582c:	bge	15880 <__assert_fail@plt+0x43a4>
   15830:	b	15834 <__assert_fail@plt+0x4358>
   15834:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15838:	ldr	r0, [r0, #12]
   1583c:	bl	114b8 <closedir@plt>
   15840:	ldr	r1, [fp, #-68]	; 0xffffffbc
   15844:	movw	r2, #0
   15848:	str	r2, [r1, #12]
   1584c:	ldr	r0, [fp, #-12]
   15850:	cmp	r0, #3
   15854:	bne	15874 <__assert_fail@plt+0x4398>
   15858:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1585c:	movw	r1, #4
   15860:	strh	r1, [r0, #56]	; 0x38
   15864:	bl	11398 <__errno_location@plt>
   15868:	ldr	r0, [r0]
   1586c:	ldr	r1, [fp, #-68]	; 0xffffffbc
   15870:	str	r0, [r1, #32]
   15874:	movw	r0, #0
   15878:	str	r0, [fp, #-4]
   1587c:	b	16460 <__assert_fail@plt+0x4f84>
   15880:	b	15a5c <__assert_fail@plt+0x4580>
   15884:	ldr	r0, [fp, #-8]
   15888:	ldr	r0, [r0, #48]	; 0x30
   1588c:	and	r0, r0, #4
   15890:	cmp	r0, #0
   15894:	bne	158bc <__assert_fail@plt+0x43e0>
   15898:	ldr	r0, [fp, #-8]
   1589c:	ldr	r0, [r0, #48]	; 0x30
   158a0:	and	r0, r0, #512	; 0x200
   158a4:	cmp	r0, #0
   158a8:	beq	158bc <__assert_fail@plt+0x43e0>
   158ac:	ldr	r0, [fp, #-8]
   158b0:	ldr	r0, [r0, #32]
   158b4:	str	r0, [sp, #56]	; 0x38
   158b8:	b	158c8 <__assert_fail@plt+0x43ec>
   158bc:	mvn	r0, #99	; 0x63
   158c0:	str	r0, [sp, #56]	; 0x38
   158c4:	b	158c8 <__assert_fail@plt+0x43ec>
   158c8:	ldr	r0, [sp, #56]	; 0x38
   158cc:	ldr	r1, [fp, #-68]	; 0xffffffbc
   158d0:	ldr	r1, [r1, #24]
   158d4:	ldr	r2, [fp, #-8]
   158d8:	ldr	r2, [r2, #48]	; 0x30
   158dc:	and	r2, r2, #16
   158e0:	cmp	r2, #0
   158e4:	movw	r2, #0
   158e8:	str	r0, [sp, #52]	; 0x34
   158ec:	str	r1, [sp, #48]	; 0x30
   158f0:	str	r2, [sp, #44]	; 0x2c
   158f4:	beq	1593c <__assert_fail@plt+0x4460>
   158f8:	ldr	r0, [fp, #-8]
   158fc:	ldr	r0, [r0, #48]	; 0x30
   15900:	and	r0, r0, #1
   15904:	cmp	r0, #0
   15908:	movw	r0, #0
   1590c:	str	r0, [sp, #40]	; 0x28
   15910:	beq	1592c <__assert_fail@plt+0x4450>
   15914:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15918:	ldr	r0, [r0, #48]	; 0x30
   1591c:	cmp	r0, #0
   15920:	movw	r0, #0
   15924:	moveq	r0, #1
   15928:	str	r0, [sp, #40]	; 0x28
   1592c:	ldr	r0, [sp, #40]	; 0x28
   15930:	mvn	r1, #0
   15934:	eor	r0, r0, r1
   15938:	str	r0, [sp, #44]	; 0x2c
   1593c:	ldr	r0, [sp, #44]	; 0x2c
   15940:	tst	r0, #1
   15944:	movw	r0, #32768	; 0x8000
   15948:	moveq	r0, #0
   1594c:	ldr	r1, [sp, #52]	; 0x34
   15950:	str	r0, [sp, #36]	; 0x24
   15954:	mov	r0, r1
   15958:	ldr	r1, [sp, #48]	; 0x30
   1595c:	ldr	r2, [sp, #36]	; 0x24
   15960:	sub	r3, fp, #64	; 0x40
   15964:	bl	192b8 <__assert_fail@plt+0x7ddc>
   15968:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1596c:	str	r0, [r1, #12]
   15970:	movw	r1, #0
   15974:	cmp	r0, r1
   15978:	bne	159b0 <__assert_fail@plt+0x44d4>
   1597c:	ldr	r0, [fp, #-12]
   15980:	cmp	r0, #3
   15984:	bne	159a4 <__assert_fail@plt+0x44c8>
   15988:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1598c:	movw	r1, #4
   15990:	strh	r1, [r0, #56]	; 0x38
   15994:	bl	11398 <__errno_location@plt>
   15998:	ldr	r0, [r0]
   1599c:	ldr	r1, [fp, #-68]	; 0xffffffbc
   159a0:	str	r0, [r1, #32]
   159a4:	movw	r0, #0
   159a8:	str	r0, [fp, #-4]
   159ac:	b	16460 <__assert_fail@plt+0x4f84>
   159b0:	ldr	r0, [fp, #-68]	; 0xffffffbc
   159b4:	ldrh	r0, [r0, #56]	; 0x38
   159b8:	cmp	r0, #11
   159bc:	bne	159e0 <__assert_fail@plt+0x4504>
   159c0:	ldr	r0, [fp, #-8]
   159c4:	ldr	r1, [fp, #-68]	; 0xffffffbc
   159c8:	movw	r2, #0
   159cc:	and	r2, r2, #1
   159d0:	bl	140f0 <__assert_fail@plt+0x2c14>
   159d4:	ldr	r1, [fp, #-68]	; 0xffffffbc
   159d8:	strh	r0, [r1, #56]	; 0x38
   159dc:	b	15a58 <__assert_fail@plt+0x457c>
   159e0:	ldr	r0, [fp, #-8]
   159e4:	ldr	r0, [r0, #48]	; 0x30
   159e8:	and	r0, r0, #256	; 0x100
   159ec:	cmp	r0, #0
   159f0:	beq	15a54 <__assert_fail@plt+0x4578>
   159f4:	b	159f8 <__assert_fail@plt+0x451c>
   159f8:	ldr	r0, [fp, #-8]
   159fc:	ldr	r1, [fp, #-68]	; 0xffffffbc
   15a00:	bl	1534c <__assert_fail@plt+0x3e70>
   15a04:	ldr	r0, [fp, #-8]
   15a08:	ldr	r1, [fp, #-68]	; 0xffffffbc
   15a0c:	movw	r2, #0
   15a10:	and	r2, r2, #1
   15a14:	bl	140f0 <__assert_fail@plt+0x2c14>
   15a18:	ldr	r1, [fp, #-8]
   15a1c:	ldr	r2, [fp, #-68]	; 0xffffffbc
   15a20:	str	r0, [sp, #32]
   15a24:	mov	r0, r1
   15a28:	mov	r1, r2
   15a2c:	bl	16660 <__assert_fail@plt+0x5184>
   15a30:	tst	r0, #1
   15a34:	bne	15a50 <__assert_fail@plt+0x4574>
   15a38:	bl	11398 <__errno_location@plt>
   15a3c:	movw	r1, #12
   15a40:	str	r1, [r0]
   15a44:	movw	r0, #0
   15a48:	str	r0, [fp, #-4]
   15a4c:	b	16460 <__assert_fail@plt+0x4f84>
   15a50:	b	15a54 <__assert_fail@plt+0x4578>
   15a54:	b	15a58 <__assert_fail@plt+0x457c>
   15a58:	b	15a5c <__assert_fail@plt+0x4580>
   15a5c:	ldr	r0, [pc, #2568]	; 1646c <__assert_fail@plt+0x4f90>
   15a60:	ldr	r1, [fp, #-8]
   15a64:	ldr	r1, [r1, #44]	; 0x2c
   15a68:	movw	r2, #0
   15a6c:	cmp	r1, r2
   15a70:	movw	r1, #0
   15a74:	movne	r1, #1
   15a78:	tst	r1, #1
   15a7c:	mvn	r1, #0
   15a80:	movne	r0, r1
   15a84:	str	r0, [sp, #76]	; 0x4c
   15a88:	ldrb	r0, [fp, #-69]	; 0xffffffbb
   15a8c:	tst	r0, #1
   15a90:	beq	15aa0 <__assert_fail@plt+0x45c4>
   15a94:	movw	r0, #1
   15a98:	strb	r0, [fp, #-37]	; 0xffffffdb
   15a9c:	b	15c64 <__assert_fail@plt+0x4788>
   15aa0:	ldr	r0, [fp, #-12]
   15aa4:	cmp	r0, #2
   15aa8:	movw	r0, #0
   15aac:	str	r0, [sp, #28]
   15ab0:	beq	15b4c <__assert_fail@plt+0x4670>
   15ab4:	ldr	r0, [fp, #-8]
   15ab8:	ldr	r0, [r0, #48]	; 0x30
   15abc:	and	r0, r0, #8
   15ac0:	cmp	r0, #0
   15ac4:	movw	r0, #0
   15ac8:	str	r0, [sp, #24]
   15acc:	beq	15b3c <__assert_fail@plt+0x4660>
   15ad0:	ldr	r0, [fp, #-8]
   15ad4:	ldr	r0, [r0, #48]	; 0x30
   15ad8:	and	r0, r0, #16
   15adc:	cmp	r0, #0
   15ae0:	movw	r0, #0
   15ae4:	str	r0, [sp, #24]
   15ae8:	beq	15b3c <__assert_fail@plt+0x4660>
   15aec:	ldr	r0, [fp, #-8]
   15af0:	ldr	r0, [r0, #48]	; 0x30
   15af4:	and	r0, r0, #32
   15af8:	cmp	r0, #0
   15afc:	movw	r0, #0
   15b00:	str	r0, [sp, #24]
   15b04:	bne	15b3c <__assert_fail@plt+0x4660>
   15b08:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15b0c:	ldr	r0, [r0, #84]	; 0x54
   15b10:	cmp	r0, #2
   15b14:	movw	r0, #0
   15b18:	str	r0, [sp, #24]
   15b1c:	bne	15b3c <__assert_fail@plt+0x4660>
   15b20:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15b24:	ldr	r1, [fp, #-64]	; 0xffffffc0
   15b28:	bl	16c34 <__assert_fail@plt+0x5758>
   15b2c:	cmp	r0, #0
   15b30:	movw	r0, #0
   15b34:	movne	r0, #1
   15b38:	str	r0, [sp, #24]
   15b3c:	ldr	r0, [sp, #24]
   15b40:	mvn	r1, #0
   15b44:	eor	r0, r0, r1
   15b48:	str	r0, [sp, #28]
   15b4c:	ldr	r0, [sp, #28]
   15b50:	and	r0, r0, #1
   15b54:	strb	r0, [fp, #-37]	; 0xffffffdb
   15b58:	ldrb	r0, [fp, #-37]	; 0xffffffdb
   15b5c:	tst	r0, #1
   15b60:	bne	15b70 <__assert_fail@plt+0x4694>
   15b64:	ldr	r0, [fp, #-12]
   15b68:	cmp	r0, #3
   15b6c:	bne	15c60 <__assert_fail@plt+0x4784>
   15b70:	ldr	r0, [fp, #-8]
   15b74:	ldr	r0, [r0, #48]	; 0x30
   15b78:	and	r0, r0, #512	; 0x200
   15b7c:	cmp	r0, #0
   15b80:	beq	15b98 <__assert_fail@plt+0x46bc>
   15b84:	ldr	r0, [fp, #-64]	; 0xffffffc0
   15b88:	movw	r1, #1030	; 0x406
   15b8c:	movw	r2, #3
   15b90:	bl	21bd4 <__assert_fail@plt+0x106f8>
   15b94:	str	r0, [fp, #-64]	; 0xffffffc0
   15b98:	ldr	r0, [fp, #-64]	; 0xffffffc0
   15b9c:	cmp	r0, #0
   15ba0:	blt	15bc0 <__assert_fail@plt+0x46e4>
   15ba4:	ldr	r0, [fp, #-8]
   15ba8:	ldr	r1, [fp, #-68]	; 0xffffffbc
   15bac:	ldr	r2, [fp, #-64]	; 0xffffffc0
   15bb0:	movw	r3, #0
   15bb4:	bl	154ec <__assert_fail@plt+0x4010>
   15bb8:	cmp	r0, #0
   15bbc:	beq	15c54 <__assert_fail@plt+0x4778>
   15bc0:	ldrb	r0, [fp, #-37]	; 0xffffffdb
   15bc4:	tst	r0, #1
   15bc8:	beq	15be8 <__assert_fail@plt+0x470c>
   15bcc:	ldr	r0, [fp, #-12]
   15bd0:	cmp	r0, #3
   15bd4:	bne	15be8 <__assert_fail@plt+0x470c>
   15bd8:	bl	11398 <__errno_location@plt>
   15bdc:	ldr	r0, [r0]
   15be0:	ldr	r1, [fp, #-68]	; 0xffffffbc
   15be4:	str	r0, [r1, #32]
   15be8:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15bec:	ldrh	r1, [r0, #58]	; 0x3a
   15bf0:	orr	r1, r1, #1
   15bf4:	strh	r1, [r0, #58]	; 0x3a
   15bf8:	movw	r0, #0
   15bfc:	strb	r0, [fp, #-37]	; 0xffffffdb
   15c00:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15c04:	ldr	r0, [r0, #12]
   15c08:	bl	114b8 <closedir@plt>
   15c0c:	ldr	r1, [fp, #-68]	; 0xffffffbc
   15c10:	movw	r2, #0
   15c14:	str	r2, [r1, #12]
   15c18:	ldr	r0, [fp, #-8]
   15c1c:	ldr	r0, [r0, #48]	; 0x30
   15c20:	and	r0, r0, #512	; 0x200
   15c24:	cmp	r0, #0
   15c28:	beq	15c44 <__assert_fail@plt+0x4768>
   15c2c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   15c30:	movw	r1, #0
   15c34:	cmp	r1, r0
   15c38:	bgt	15c44 <__assert_fail@plt+0x4768>
   15c3c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   15c40:	bl	114a0 <close@plt>
   15c44:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15c48:	movw	r1, #0
   15c4c:	str	r1, [r0, #12]
   15c50:	b	15c5c <__assert_fail@plt+0x4780>
   15c54:	movw	r0, #1
   15c58:	strb	r0, [fp, #-37]	; 0xffffffdb
   15c5c:	b	15c60 <__assert_fail@plt+0x4784>
   15c60:	b	15c64 <__assert_fail@plt+0x4788>
   15c64:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15c68:	ldr	r0, [r0, #28]
   15c6c:	ldr	r1, [fp, #-68]	; 0xffffffbc
   15c70:	ldr	r1, [r1, #40]	; 0x28
   15c74:	sub	r1, r1, #1
   15c78:	add	r0, r0, r1
   15c7c:	ldrb	r0, [r0]
   15c80:	cmp	r0, #47	; 0x2f
   15c84:	bne	15c9c <__assert_fail@plt+0x47c0>
   15c88:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15c8c:	ldr	r0, [r0, #40]	; 0x28
   15c90:	sub	r0, r0, #1
   15c94:	str	r0, [sp, #20]
   15c98:	b	15ca8 <__assert_fail@plt+0x47cc>
   15c9c:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15ca0:	ldr	r0, [r0, #40]	; 0x28
   15ca4:	str	r0, [sp, #20]
   15ca8:	ldr	r0, [sp, #20]
   15cac:	str	r0, [fp, #-48]	; 0xffffffd0
   15cb0:	ldr	r0, [fp, #-8]
   15cb4:	ldr	r0, [r0, #48]	; 0x30
   15cb8:	and	r0, r0, #4
   15cbc:	cmp	r0, #0
   15cc0:	beq	15cf0 <__assert_fail@plt+0x4814>
   15cc4:	ldr	r0, [fp, #-8]
   15cc8:	ldr	r0, [r0, #24]
   15ccc:	ldr	r1, [fp, #-48]	; 0xffffffd0
   15cd0:	add	r0, r0, r1
   15cd4:	str	r0, [fp, #-60]	; 0xffffffc4
   15cd8:	ldr	r0, [fp, #-60]	; 0xffffffc4
   15cdc:	add	r1, r0, #1
   15ce0:	str	r1, [fp, #-60]	; 0xffffffc4
   15ce4:	movw	r1, #47	; 0x2f
   15ce8:	strb	r1, [r0]
   15cec:	b	15cf8 <__assert_fail@plt+0x481c>
   15cf0:	movw	r0, #0
   15cf4:	str	r0, [fp, #-60]	; 0xffffffc4
   15cf8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15cfc:	add	r0, r0, #1
   15d00:	str	r0, [fp, #-48]	; 0xffffffd0
   15d04:	ldr	r0, [fp, #-8]
   15d08:	ldr	r0, [r0, #36]	; 0x24
   15d0c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   15d10:	sub	r0, r0, r1
   15d14:	str	r0, [fp, #-52]	; 0xffffffcc
   15d18:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15d1c:	ldr	r0, [r0, #48]	; 0x30
   15d20:	add	r0, r0, #1
   15d24:	str	r0, [fp, #-44]	; 0xffffffd4
   15d28:	movw	r0, #0
   15d2c:	strb	r0, [fp, #-38]	; 0xffffffda
   15d30:	movw	r0, #0
   15d34:	str	r0, [fp, #-20]	; 0xffffffec
   15d38:	str	r0, [fp, #-28]	; 0xffffffe4
   15d3c:	str	r0, [fp, #-24]	; 0xffffffe8
   15d40:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15d44:	ldr	r0, [r0, #12]
   15d48:	movw	r1, #0
   15d4c:	cmp	r0, r1
   15d50:	beq	16248 <__assert_fail@plt+0x4d6c>
   15d54:	bl	11398 <__errno_location@plt>
   15d58:	movw	r1, #0
   15d5c:	str	r1, [r0]
   15d60:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15d64:	ldr	r0, [r0, #12]
   15d68:	bl	1141c <readdir64@plt>
   15d6c:	str	r0, [sp, #64]	; 0x40
   15d70:	ldr	r0, [sp, #64]	; 0x40
   15d74:	movw	r1, #0
   15d78:	cmp	r0, r1
   15d7c:	bne	15de4 <__assert_fail@plt+0x4908>
   15d80:	bl	11398 <__errno_location@plt>
   15d84:	ldr	r0, [r0]
   15d88:	cmp	r0, #0
   15d8c:	beq	15de0 <__assert_fail@plt+0x4904>
   15d90:	bl	11398 <__errno_location@plt>
   15d94:	ldr	r0, [r0]
   15d98:	ldr	r1, [fp, #-68]	; 0xffffffbc
   15d9c:	str	r0, [r1, #32]
   15da0:	ldrb	r0, [fp, #-69]	; 0xffffffbb
   15da4:	tst	r0, #1
   15da8:	movw	r0, #1
   15dac:	str	r0, [sp, #16]
   15db0:	bne	15dc8 <__assert_fail@plt+0x48ec>
   15db4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15db8:	cmp	r0, #0
   15dbc:	movw	r0, #0
   15dc0:	movne	r0, #1
   15dc4:	str	r0, [sp, #16]
   15dc8:	ldr	r0, [sp, #16]
   15dcc:	tst	r0, #1
   15dd0:	movw	r0, #7
   15dd4:	moveq	r0, #4
   15dd8:	ldr	r1, [fp, #-68]	; 0xffffffbc
   15ddc:	strh	r0, [r1, #56]	; 0x38
   15de0:	b	16248 <__assert_fail@plt+0x4d6c>
   15de4:	ldr	r0, [fp, #-8]
   15de8:	ldr	r0, [r0, #48]	; 0x30
   15dec:	and	r0, r0, #32
   15df0:	cmp	r0, #0
   15df4:	bne	15e3c <__assert_fail@plt+0x4960>
   15df8:	ldr	r0, [sp, #64]	; 0x40
   15dfc:	ldrb	r0, [r0, #19]
   15e00:	cmp	r0, #46	; 0x2e
   15e04:	bne	15e3c <__assert_fail@plt+0x4960>
   15e08:	ldr	r0, [sp, #64]	; 0x40
   15e0c:	ldrsb	r0, [r0, #20]
   15e10:	cmp	r0, #0
   15e14:	beq	15e38 <__assert_fail@plt+0x495c>
   15e18:	ldr	r0, [sp, #64]	; 0x40
   15e1c:	ldrb	r0, [r0, #20]
   15e20:	cmp	r0, #46	; 0x2e
   15e24:	bne	15e3c <__assert_fail@plt+0x4960>
   15e28:	ldr	r0, [sp, #64]	; 0x40
   15e2c:	ldrsb	r0, [r0, #21]
   15e30:	cmp	r0, #0
   15e34:	bne	15e3c <__assert_fail@plt+0x4960>
   15e38:	b	15d40 <__assert_fail@plt+0x4864>
   15e3c:	ldr	r0, [sp, #64]	; 0x40
   15e40:	add	r0, r0, #19
   15e44:	bl	1135c <strlen@plt>
   15e48:	str	r0, [sp, #68]	; 0x44
   15e4c:	ldr	r0, [fp, #-8]
   15e50:	ldr	r1, [sp, #64]	; 0x40
   15e54:	add	r1, r1, #19
   15e58:	ldr	r2, [sp, #68]	; 0x44
   15e5c:	bl	13fa0 <__assert_fail@plt+0x2ac4>
   15e60:	str	r0, [fp, #-16]
   15e64:	ldr	r0, [fp, #-16]
   15e68:	movw	r1, #0
   15e6c:	cmp	r0, r1
   15e70:	bne	15e78 <__assert_fail@plt+0x499c>
   15e74:	b	15eb8 <__assert_fail@plt+0x49dc>
   15e78:	ldr	r0, [sp, #68]	; 0x44
   15e7c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   15e80:	cmp	r0, r1
   15e84:	bcc	15f84 <__assert_fail@plt+0x4aa8>
   15e88:	ldr	r0, [fp, #-8]
   15e8c:	ldr	r0, [r0, #24]
   15e90:	str	r0, [fp, #-32]	; 0xffffffe0
   15e94:	ldr	r0, [fp, #-8]
   15e98:	ldr	r1, [sp, #68]	; 0x44
   15e9c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   15ea0:	add	r1, r1, r2
   15ea4:	add	r1, r1, #1
   15ea8:	bl	13ea8 <__assert_fail@plt+0x29cc>
   15eac:	tst	r0, #1
   15eb0:	bne	15f28 <__assert_fail@plt+0x4a4c>
   15eb4:	b	15eb8 <__assert_fail@plt+0x49dc>
   15eb8:	bl	11398 <__errno_location@plt>
   15ebc:	ldr	r0, [r0]
   15ec0:	str	r0, [fp, #-36]	; 0xffffffdc
   15ec4:	ldr	r0, [fp, #-16]
   15ec8:	bl	1382c <__assert_fail@plt+0x2350>
   15ecc:	ldr	r0, [fp, #-20]	; 0xffffffec
   15ed0:	bl	14648 <__assert_fail@plt+0x316c>
   15ed4:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15ed8:	ldr	r0, [r0, #12]
   15edc:	bl	114b8 <closedir@plt>
   15ee0:	ldr	r1, [fp, #-68]	; 0xffffffbc
   15ee4:	movw	r2, #0
   15ee8:	str	r2, [r1, #12]
   15eec:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15ef0:	movw	r1, #7
   15ef4:	strh	r1, [r0, #56]	; 0x38
   15ef8:	ldr	r0, [fp, #-8]
   15efc:	ldr	r1, [r0, #48]	; 0x30
   15f00:	orr	r1, r1, #8192	; 0x2000
   15f04:	str	r1, [r0, #48]	; 0x30
   15f08:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15f0c:	str	r0, [sp, #12]
   15f10:	bl	11398 <__errno_location@plt>
   15f14:	ldr	r1, [sp, #12]
   15f18:	str	r1, [r0]
   15f1c:	movw	r0, #0
   15f20:	str	r0, [fp, #-4]
   15f24:	b	16460 <__assert_fail@plt+0x4f84>
   15f28:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15f2c:	ldr	r1, [fp, #-8]
   15f30:	ldr	r1, [r1, #24]
   15f34:	cmp	r0, r1
   15f38:	beq	15f70 <__assert_fail@plt+0x4a94>
   15f3c:	movw	r0, #1
   15f40:	strb	r0, [fp, #-38]	; 0xffffffda
   15f44:	ldr	r0, [fp, #-8]
   15f48:	ldr	r0, [r0, #48]	; 0x30
   15f4c:	and	r0, r0, #4
   15f50:	cmp	r0, #0
   15f54:	beq	15f6c <__assert_fail@plt+0x4a90>
   15f58:	ldr	r0, [fp, #-8]
   15f5c:	ldr	r0, [r0, #24]
   15f60:	ldr	r1, [fp, #-48]	; 0xffffffd0
   15f64:	add	r0, r0, r1
   15f68:	str	r0, [fp, #-60]	; 0xffffffc4
   15f6c:	b	15f70 <__assert_fail@plt+0x4a94>
   15f70:	ldr	r0, [fp, #-8]
   15f74:	ldr	r0, [r0, #36]	; 0x24
   15f78:	ldr	r1, [fp, #-48]	; 0xffffffd0
   15f7c:	sub	r0, r0, r1
   15f80:	str	r0, [fp, #-52]	; 0xffffffcc
   15f84:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15f88:	ldr	r1, [sp, #68]	; 0x44
   15f8c:	add	r0, r0, r1
   15f90:	str	r0, [fp, #-56]	; 0xffffffc8
   15f94:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15f98:	ldr	r1, [fp, #-48]	; 0xffffffd0
   15f9c:	cmp	r0, r1
   15fa0:	bcs	16000 <__assert_fail@plt+0x4b24>
   15fa4:	ldr	r0, [fp, #-16]
   15fa8:	bl	1382c <__assert_fail@plt+0x2350>
   15fac:	ldr	r0, [fp, #-20]	; 0xffffffec
   15fb0:	bl	14648 <__assert_fail@plt+0x316c>
   15fb4:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15fb8:	ldr	r0, [r0, #12]
   15fbc:	bl	114b8 <closedir@plt>
   15fc0:	ldr	r1, [fp, #-68]	; 0xffffffbc
   15fc4:	movw	r2, #0
   15fc8:	str	r2, [r1, #12]
   15fcc:	ldr	r0, [fp, #-68]	; 0xffffffbc
   15fd0:	movw	r1, #7
   15fd4:	strh	r1, [r0, #56]	; 0x38
   15fd8:	ldr	r0, [fp, #-8]
   15fdc:	ldr	r1, [r0, #48]	; 0x30
   15fe0:	orr	r1, r1, #8192	; 0x2000
   15fe4:	str	r1, [r0, #48]	; 0x30
   15fe8:	bl	11398 <__errno_location@plt>
   15fec:	movw	r1, #36	; 0x24
   15ff0:	str	r1, [r0]
   15ff4:	movw	r0, #0
   15ff8:	str	r0, [fp, #-4]
   15ffc:	b	16460 <__assert_fail@plt+0x4f84>
   16000:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16004:	ldr	r1, [fp, #-16]
   16008:	str	r0, [r1, #48]	; 0x30
   1600c:	ldr	r0, [fp, #-8]
   16010:	ldr	r0, [r0]
   16014:	ldr	r1, [fp, #-16]
   16018:	str	r0, [r1, #4]
   1601c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   16020:	ldr	r1, [fp, #-16]
   16024:	str	r0, [r1, #40]	; 0x28
   16028:	ldr	r0, [sp, #64]	; 0x40
   1602c:	ldr	r1, [r0]
   16030:	ldr	r0, [r0, #4]
   16034:	ldr	r2, [fp, #-16]
   16038:	str	r0, [r2, #164]	; 0xa4
   1603c:	str	r1, [r2, #160]	; 0xa0
   16040:	ldr	r0, [fp, #-8]
   16044:	ldr	r0, [r0, #48]	; 0x30
   16048:	and	r0, r0, #4
   1604c:	cmp	r0, #0
   16050:	beq	16084 <__assert_fail@plt+0x4ba8>
   16054:	ldr	r0, [fp, #-16]
   16058:	ldr	r0, [r0, #28]
   1605c:	ldr	r1, [fp, #-16]
   16060:	str	r0, [r1, #24]
   16064:	ldr	r0, [fp, #-60]	; 0xffffffc4
   16068:	ldr	r1, [fp, #-16]
   1606c:	add	r1, r1, #168	; 0xa8
   16070:	ldr	r2, [fp, #-16]
   16074:	ldr	r2, [r2, #52]	; 0x34
   16078:	add	r2, r2, #1
   1607c:	bl	11218 <memmove@plt>
   16080:	b	16094 <__assert_fail@plt+0x4bb8>
   16084:	ldr	r0, [fp, #-16]
   16088:	add	r0, r0, #168	; 0xa8
   1608c:	ldr	r1, [fp, #-16]
   16090:	str	r0, [r1, #24]
   16094:	ldr	r0, [fp, #-8]
   16098:	ldr	r0, [r0, #44]	; 0x2c
   1609c:	movw	r1, #0
   160a0:	cmp	r0, r1
   160a4:	beq	160bc <__assert_fail@plt+0x4be0>
   160a8:	ldr	r0, [fp, #-8]
   160ac:	ldr	r0, [r0, #48]	; 0x30
   160b0:	and	r0, r0, #1024	; 0x400
   160b4:	cmp	r0, #0
   160b8:	beq	16194 <__assert_fail@plt+0x4cb8>
   160bc:	ldr	r0, [fp, #-8]
   160c0:	ldr	r0, [r0, #48]	; 0x30
   160c4:	and	r0, r0, #8
   160c8:	cmp	r0, #0
   160cc:	movw	r0, #0
   160d0:	str	r0, [sp, #8]
   160d4:	beq	1614c <__assert_fail@plt+0x4c70>
   160d8:	ldr	r0, [sp, #64]	; 0x40
   160dc:	ldrb	r0, [r0, #18]
   160e0:	cmp	r0, #0
   160e4:	movw	r0, #0
   160e8:	str	r0, [sp, #8]
   160ec:	beq	1614c <__assert_fail@plt+0x4c70>
   160f0:	ldr	r0, [sp, #64]	; 0x40
   160f4:	ldrb	r0, [r0, #18]
   160f8:	cmp	r0, #4
   160fc:	movw	r0, #0
   16100:	str	r0, [sp, #8]
   16104:	beq	1614c <__assert_fail@plt+0x4c70>
   16108:	ldr	r0, [fp, #-8]
   1610c:	ldr	r0, [r0, #48]	; 0x30
   16110:	and	r0, r0, #16
   16114:	cmp	r0, #0
   16118:	movw	r0, #1
   1611c:	str	r0, [sp, #4]
   16120:	bne	16144 <__assert_fail@plt+0x4c68>
   16124:	ldr	r0, [sp, #64]	; 0x40
   16128:	ldrb	r0, [r0, #18]
   1612c:	cmp	r0, #10
   16130:	movw	r0, #0
   16134:	moveq	r0, #1
   16138:	mvn	r1, #0
   1613c:	eor	r0, r0, r1
   16140:	str	r0, [sp, #4]
   16144:	ldr	r0, [sp, #4]
   16148:	str	r0, [sp, #8]
   1614c:	ldr	r0, [sp, #8]
   16150:	and	r0, r0, #1
   16154:	strb	r0, [sp, #63]	; 0x3f
   16158:	ldr	r0, [fp, #-16]
   1615c:	movw	r1, #11
   16160:	strh	r1, [r0, #56]	; 0x38
   16164:	ldr	r0, [fp, #-16]
   16168:	add	r0, r0, #64	; 0x40
   1616c:	ldr	r1, [sp, #64]	; 0x40
   16170:	ldrb	r1, [r1, #18]
   16174:	bl	16cf0 <__assert_fail@plt+0x5814>
   16178:	ldr	r0, [fp, #-16]
   1617c:	ldrb	r1, [sp, #63]	; 0x3f
   16180:	mvn	r2, #0
   16184:	eor	r1, r1, r2
   16188:	and	r1, r1, #1
   1618c:	bl	14098 <__assert_fail@plt+0x2bbc>
   16190:	b	161b0 <__assert_fail@plt+0x4cd4>
   16194:	ldr	r0, [fp, #-8]
   16198:	ldr	r1, [fp, #-16]
   1619c:	movw	r2, #0
   161a0:	and	r2, r2, #1
   161a4:	bl	140f0 <__assert_fail@plt+0x2c14>
   161a8:	ldr	r1, [fp, #-16]
   161ac:	strh	r0, [r1, #56]	; 0x38
   161b0:	ldr	r0, [fp, #-16]
   161b4:	movw	r1, #0
   161b8:	str	r1, [r0, #8]
   161bc:	ldr	r0, [fp, #-20]	; 0xffffffec
   161c0:	cmp	r0, r1
   161c4:	bne	161d8 <__assert_fail@plt+0x4cfc>
   161c8:	ldr	r0, [fp, #-16]
   161cc:	str	r0, [fp, #-28]	; 0xffffffe4
   161d0:	str	r0, [fp, #-20]	; 0xffffffec
   161d4:	b	161ec <__assert_fail@plt+0x4d10>
   161d8:	ldr	r0, [fp, #-16]
   161dc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   161e0:	str	r0, [r1, #8]
   161e4:	ldr	r0, [fp, #-16]
   161e8:	str	r0, [fp, #-28]	; 0xffffffe4
   161ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   161f0:	movw	r1, #10000	; 0x2710
   161f4:	cmp	r0, r1
   161f8:	bne	16224 <__assert_fail@plt+0x4d48>
   161fc:	ldr	r0, [fp, #-8]
   16200:	ldr	r0, [r0, #44]	; 0x2c
   16204:	movw	r1, #0
   16208:	cmp	r0, r1
   1620c:	bne	16224 <__assert_fail@plt+0x4d48>
   16210:	ldr	r0, [fp, #-68]	; 0xffffffbc
   16214:	ldr	r1, [fp, #-64]	; 0xffffffc0
   16218:	bl	16dc0 <__assert_fail@plt+0x58e4>
   1621c:	and	r0, r0, #1
   16220:	strb	r0, [fp, #-70]	; 0xffffffba
   16224:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16228:	add	r0, r0, #1
   1622c:	str	r0, [fp, #-24]	; 0xffffffe8
   16230:	ldr	r0, [sp, #76]	; 0x4c
   16234:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16238:	cmp	r0, r1
   1623c:	bhi	16244 <__assert_fail@plt+0x4d68>
   16240:	b	16280 <__assert_fail@plt+0x4da4>
   16244:	b	15d40 <__assert_fail@plt+0x4864>
   16248:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1624c:	ldr	r0, [r0, #12]
   16250:	movw	r1, #0
   16254:	cmp	r0, r1
   16258:	beq	1627c <__assert_fail@plt+0x4da0>
   1625c:	b	16260 <__assert_fail@plt+0x4d84>
   16260:	ldr	r0, [fp, #-68]	; 0xffffffbc
   16264:	ldr	r0, [r0, #12]
   16268:	bl	114b8 <closedir@plt>
   1626c:	ldr	r1, [fp, #-68]	; 0xffffffbc
   16270:	movw	r2, #0
   16274:	str	r2, [r1, #12]
   16278:	b	1627c <__assert_fail@plt+0x4da0>
   1627c:	b	16280 <__assert_fail@plt+0x4da4>
   16280:	ldrb	r0, [fp, #-38]	; 0xffffffda
   16284:	tst	r0, #1
   16288:	beq	16298 <__assert_fail@plt+0x4dbc>
   1628c:	ldr	r0, [fp, #-8]
   16290:	ldr	r1, [fp, #-20]	; 0xffffffec
   16294:	bl	16e54 <__assert_fail@plt+0x5978>
   16298:	ldr	r0, [fp, #-8]
   1629c:	ldr	r0, [r0, #48]	; 0x30
   162a0:	and	r0, r0, #4
   162a4:	cmp	r0, #0
   162a8:	beq	162e8 <__assert_fail@plt+0x4e0c>
   162ac:	ldr	r0, [fp, #-48]	; 0xffffffd0
   162b0:	ldr	r1, [fp, #-8]
   162b4:	ldr	r1, [r1, #36]	; 0x24
   162b8:	cmp	r0, r1
   162bc:	beq	162cc <__assert_fail@plt+0x4df0>
   162c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   162c4:	cmp	r0, #0
   162c8:	bne	162dc <__assert_fail@plt+0x4e00>
   162cc:	ldr	r0, [fp, #-60]	; 0xffffffc4
   162d0:	mvn	r1, #0
   162d4:	add	r0, r0, r1
   162d8:	str	r0, [fp, #-60]	; 0xffffffc4
   162dc:	ldr	r0, [fp, #-60]	; 0xffffffc4
   162e0:	movw	r1, #0
   162e4:	strb	r1, [r0]
   162e8:	ldrb	r0, [fp, #-69]	; 0xffffffbb
   162ec:	tst	r0, #1
   162f0:	bne	16390 <__assert_fail@plt+0x4eb4>
   162f4:	ldrb	r0, [fp, #-37]	; 0xffffffdb
   162f8:	tst	r0, #1
   162fc:	beq	16390 <__assert_fail@plt+0x4eb4>
   16300:	ldr	r0, [fp, #-12]
   16304:	cmp	r0, #1
   16308:	beq	16318 <__assert_fail@plt+0x4e3c>
   1630c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16310:	cmp	r0, #0
   16314:	bne	16390 <__assert_fail@plt+0x4eb4>
   16318:	ldr	r0, [fp, #-68]	; 0xffffffbc
   1631c:	ldr	r0, [r0, #48]	; 0x30
   16320:	cmp	r0, #0
   16324:	bne	1633c <__assert_fail@plt+0x4e60>
   16328:	ldr	r0, [fp, #-8]
   1632c:	bl	16470 <__assert_fail@plt+0x4f94>
   16330:	cmp	r0, #0
   16334:	bne	16360 <__assert_fail@plt+0x4e84>
   16338:	b	16390 <__assert_fail@plt+0x4eb4>
   1633c:	ldr	r0, [fp, #-8]
   16340:	ldr	r1, [fp, #-68]	; 0xffffffbc
   16344:	ldr	r1, [r1, #4]
   16348:	mvn	r2, #0
   1634c:	movw	r3, #20921	; 0x51b9
   16350:	movt	r3, #2
   16354:	bl	154ec <__assert_fail@plt+0x4010>
   16358:	cmp	r0, #0
   1635c:	beq	16390 <__assert_fail@plt+0x4eb4>
   16360:	ldr	r0, [fp, #-68]	; 0xffffffbc
   16364:	movw	r1, #7
   16368:	strh	r1, [r0, #56]	; 0x38
   1636c:	ldr	r0, [fp, #-8]
   16370:	ldr	r1, [r0, #48]	; 0x30
   16374:	orr	r1, r1, #8192	; 0x2000
   16378:	str	r1, [r0, #48]	; 0x30
   1637c:	ldr	r0, [fp, #-20]	; 0xffffffec
   16380:	bl	14648 <__assert_fail@plt+0x316c>
   16384:	movw	r0, #0
   16388:	str	r0, [fp, #-4]
   1638c:	b	16460 <__assert_fail@plt+0x4f84>
   16390:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16394:	cmp	r0, #0
   16398:	bne	163e8 <__assert_fail@plt+0x4f0c>
   1639c:	ldr	r0, [fp, #-12]
   163a0:	cmp	r0, #3
   163a4:	bne	163d4 <__assert_fail@plt+0x4ef8>
   163a8:	ldr	r0, [fp, #-68]	; 0xffffffbc
   163ac:	ldrh	r0, [r0, #56]	; 0x38
   163b0:	cmp	r0, #4
   163b4:	beq	163d4 <__assert_fail@plt+0x4ef8>
   163b8:	ldr	r0, [fp, #-68]	; 0xffffffbc
   163bc:	ldrh	r0, [r0, #56]	; 0x38
   163c0:	cmp	r0, #7
   163c4:	beq	163d4 <__assert_fail@plt+0x4ef8>
   163c8:	ldr	r0, [fp, #-68]	; 0xffffffbc
   163cc:	movw	r1, #6
   163d0:	strh	r1, [r0, #56]	; 0x38
   163d4:	ldr	r0, [fp, #-20]	; 0xffffffec
   163d8:	bl	14648 <__assert_fail@plt+0x316c>
   163dc:	movw	r0, #0
   163e0:	str	r0, [fp, #-4]
   163e4:	b	16460 <__assert_fail@plt+0x4f84>
   163e8:	ldrb	r0, [fp, #-70]	; 0xffffffba
   163ec:	tst	r0, #1
   163f0:	beq	16424 <__assert_fail@plt+0x4f48>
   163f4:	ldr	r0, [fp, #-8]
   163f8:	movw	r1, #28560	; 0x6f90
   163fc:	movt	r1, #1
   16400:	str	r1, [r0, #44]	; 0x2c
   16404:	ldr	r0, [fp, #-8]
   16408:	ldr	r1, [fp, #-20]	; 0xffffffec
   1640c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16410:	bl	14308 <__assert_fail@plt+0x2e2c>
   16414:	str	r0, [fp, #-20]	; 0xffffffec
   16418:	ldr	r0, [fp, #-8]
   1641c:	movw	r1, #0
   16420:	str	r1, [r0, #44]	; 0x2c
   16424:	ldr	r0, [fp, #-8]
   16428:	ldr	r0, [r0, #44]	; 0x2c
   1642c:	movw	r1, #0
   16430:	cmp	r0, r1
   16434:	beq	16458 <__assert_fail@plt+0x4f7c>
   16438:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1643c:	cmp	r0, #1
   16440:	bls	16458 <__assert_fail@plt+0x4f7c>
   16444:	ldr	r0, [fp, #-8]
   16448:	ldr	r1, [fp, #-20]	; 0xffffffec
   1644c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16450:	bl	14308 <__assert_fail@plt+0x2e2c>
   16454:	str	r0, [fp, #-20]	; 0xffffffec
   16458:	ldr	r0, [fp, #-20]	; 0xffffffec
   1645c:	str	r0, [fp, #-4]
   16460:	ldr	r0, [fp, #-4]
   16464:	mov	sp, fp
   16468:	pop	{fp, pc}
   1646c:	andeq	r8, r1, r0, lsr #13
   16470:	push	{fp, lr}
   16474:	mov	fp, sp
   16478:	sub	sp, sp, #32
   1647c:	str	r0, [fp, #-4]
   16480:	ldr	r0, [fp, #-4]
   16484:	ldr	r0, [r0, #48]	; 0x30
   16488:	and	r0, r0, #4
   1648c:	cmp	r0, #0
   16490:	movw	r0, #0
   16494:	str	r0, [fp, #-12]
   16498:	bne	1655c <__assert_fail@plt+0x5080>
   1649c:	ldr	r0, [fp, #-4]
   164a0:	ldr	r0, [r0, #48]	; 0x30
   164a4:	and	r0, r0, #512	; 0x200
   164a8:	cmp	r0, #0
   164ac:	beq	16510 <__assert_fail@plt+0x5034>
   164b0:	ldr	r0, [fp, #-4]
   164b4:	ldr	r1, [fp, #-4]
   164b8:	ldr	r1, [r1, #48]	; 0x30
   164bc:	and	r1, r1, #512	; 0x200
   164c0:	cmp	r1, #0
   164c4:	str	r0, [sp, #16]
   164c8:	beq	164d8 <__assert_fail@plt+0x4ffc>
   164cc:	mvn	r0, #99	; 0x63
   164d0:	str	r0, [sp, #12]
   164d4:	b	164e4 <__assert_fail@plt+0x5008>
   164d8:	ldr	r0, [fp, #-4]
   164dc:	ldr	r0, [r0, #28]
   164e0:	str	r0, [sp, #12]
   164e4:	ldr	r0, [sp, #12]
   164e8:	ldr	r1, [sp, #16]
   164ec:	str	r0, [sp, #8]
   164f0:	mov	r0, r1
   164f4:	ldr	r1, [sp, #8]
   164f8:	movw	r2, #1
   164fc:	and	r2, r2, #1
   16500:	bl	167c0 <__assert_fail@plt+0x52e4>
   16504:	movw	r0, #0
   16508:	str	r0, [sp, #4]
   1650c:	b	16548 <__assert_fail@plt+0x506c>
   16510:	ldr	r0, [fp, #-4]
   16514:	ldr	r0, [r0, #48]	; 0x30
   16518:	and	r0, r0, #512	; 0x200
   1651c:	cmp	r0, #0
   16520:	beq	16530 <__assert_fail@plt+0x5054>
   16524:	mvn	r0, #99	; 0x63
   16528:	str	r0, [sp]
   1652c:	b	1653c <__assert_fail@plt+0x5060>
   16530:	ldr	r0, [fp, #-4]
   16534:	ldr	r0, [r0, #28]
   16538:	str	r0, [sp]
   1653c:	ldr	r0, [sp]
   16540:	bl	11440 <fchdir@plt>
   16544:	str	r0, [sp, #4]
   16548:	ldr	r0, [sp, #4]
   1654c:	cmp	r0, #0
   16550:	movw	r0, #0
   16554:	movne	r0, #1
   16558:	str	r0, [fp, #-12]
   1655c:	ldr	r0, [fp, #-12]
   16560:	and	r0, r0, #1
   16564:	str	r0, [fp, #-8]
   16568:	ldr	r0, [fp, #-4]
   1656c:	add	r0, r0, #60	; 0x3c
   16570:	bl	148b4 <__assert_fail@plt+0x33d8>
   16574:	ldr	r0, [fp, #-8]
   16578:	mov	sp, fp
   1657c:	pop	{fp, pc}
   16580:	push	{fp, lr}
   16584:	mov	fp, sp
   16588:	sub	sp, sp, #16
   1658c:	str	r0, [fp, #-4]
   16590:	str	r1, [sp, #8]
   16594:	ldr	r0, [sp, #8]
   16598:	ldr	r0, [r0, #52]	; 0x34
   1659c:	ldr	r1, [sp, #8]
   165a0:	str	r0, [r1, #40]	; 0x28
   165a4:	str	r0, [sp, #4]
   165a8:	ldr	r0, [fp, #-4]
   165ac:	ldr	r0, [r0, #24]
   165b0:	ldr	r1, [sp, #8]
   165b4:	add	r1, r1, #168	; 0xa8
   165b8:	ldr	r2, [sp, #4]
   165bc:	add	r2, r2, #1
   165c0:	bl	11218 <memmove@plt>
   165c4:	ldr	r0, [sp, #8]
   165c8:	add	r0, r0, #168	; 0xa8
   165cc:	movw	r1, #47	; 0x2f
   165d0:	bl	11404 <strrchr@plt>
   165d4:	str	r0, [sp]
   165d8:	movw	r1, #0
   165dc:	cmp	r0, r1
   165e0:	beq	16640 <__assert_fail@plt+0x5164>
   165e4:	ldr	r0, [sp]
   165e8:	ldr	r1, [sp, #8]
   165ec:	add	r1, r1, #168	; 0xa8
   165f0:	cmp	r0, r1
   165f4:	bne	16608 <__assert_fail@plt+0x512c>
   165f8:	ldr	r0, [sp]
   165fc:	ldrb	r0, [r0, #1]
   16600:	cmp	r0, #0
   16604:	beq	16640 <__assert_fail@plt+0x5164>
   16608:	ldr	r0, [sp]
   1660c:	add	r0, r0, #1
   16610:	str	r0, [sp]
   16614:	bl	1135c <strlen@plt>
   16618:	str	r0, [sp, #4]
   1661c:	ldr	r0, [sp, #8]
   16620:	add	r0, r0, #168	; 0xa8
   16624:	ldr	r1, [sp]
   16628:	ldr	r2, [sp, #4]
   1662c:	add	r2, r2, #1
   16630:	bl	11218 <memmove@plt>
   16634:	ldr	r0, [sp, #4]
   16638:	ldr	r1, [sp, #8]
   1663c:	str	r0, [r1, #52]	; 0x34
   16640:	ldr	r0, [fp, #-4]
   16644:	ldr	r0, [r0, #24]
   16648:	ldr	r1, [sp, #8]
   1664c:	str	r0, [r1, #28]
   16650:	ldr	r1, [sp, #8]
   16654:	str	r0, [r1, #24]
   16658:	mov	sp, fp
   1665c:	pop	{fp, pc}
   16660:	push	{fp, lr}
   16664:	mov	fp, sp
   16668:	sub	sp, sp, #24
   1666c:	str	r0, [fp, #-8]
   16670:	str	r1, [sp, #12]
   16674:	ldr	r0, [fp, #-8]
   16678:	ldr	r0, [r0, #48]	; 0x30
   1667c:	movw	r1, #258	; 0x102
   16680:	and	r0, r0, r1
   16684:	cmp	r0, #0
   16688:	beq	1676c <__assert_fail@plt+0x5290>
   1668c:	ldr	r0, [sp, #12]
   16690:	add	r0, r0, #64	; 0x40
   16694:	str	r0, [sp, #8]
   16698:	movw	r0, #24
   1669c:	bl	2137c <__assert_fail@plt+0xfea0>
   166a0:	str	r0, [sp, #4]
   166a4:	ldr	r0, [sp, #4]
   166a8:	movw	r1, #0
   166ac:	cmp	r0, r1
   166b0:	bne	166c4 <__assert_fail@plt+0x51e8>
   166b4:	movw	r0, #0
   166b8:	and	r0, r0, #1
   166bc:	strb	r0, [fp, #-1]
   166c0:	b	167b0 <__assert_fail@plt+0x52d4>
   166c4:	ldr	r0, [sp, #8]
   166c8:	ldr	r1, [r0]
   166cc:	ldr	r0, [r0, #4]
   166d0:	ldr	r2, [sp, #4]
   166d4:	str	r0, [r2, #4]
   166d8:	str	r1, [r2]
   166dc:	ldr	r0, [sp, #8]
   166e0:	ldr	r1, [r0, #96]	; 0x60
   166e4:	ldr	r0, [r0, #100]	; 0x64
   166e8:	ldr	r2, [sp, #4]
   166ec:	str	r0, [r2, #12]
   166f0:	str	r1, [r2, #8]
   166f4:	ldr	r0, [sp, #12]
   166f8:	ldr	r1, [sp, #4]
   166fc:	str	r0, [r1, #16]
   16700:	ldr	r0, [fp, #-8]
   16704:	ldr	r0, [r0, #56]	; 0x38
   16708:	ldr	r1, [sp, #4]
   1670c:	bl	18af8 <__assert_fail@plt+0x761c>
   16710:	str	r0, [sp]
   16714:	ldr	r0, [sp]
   16718:	ldr	r1, [sp, #4]
   1671c:	cmp	r0, r1
   16720:	beq	16768 <__assert_fail@plt+0x528c>
   16724:	ldr	r0, [sp, #4]
   16728:	bl	1382c <__assert_fail@plt+0x2350>
   1672c:	ldr	r0, [sp]
   16730:	movw	r1, #0
   16734:	cmp	r0, r1
   16738:	bne	1674c <__assert_fail@plt+0x5270>
   1673c:	movw	r0, #0
   16740:	and	r0, r0, #1
   16744:	strb	r0, [fp, #-1]
   16748:	b	167b0 <__assert_fail@plt+0x52d4>
   1674c:	ldr	r0, [sp]
   16750:	ldr	r0, [r0, #16]
   16754:	ldr	r1, [sp, #12]
   16758:	str	r0, [r1]
   1675c:	ldr	r0, [sp, #12]
   16760:	movw	r1, #2
   16764:	strh	r1, [r0, #56]	; 0x38
   16768:	b	167a4 <__assert_fail@plt+0x52c8>
   1676c:	ldr	r0, [fp, #-8]
   16770:	ldr	r0, [r0, #56]	; 0x38
   16774:	ldr	r1, [sp, #12]
   16778:	add	r1, r1, #64	; 0x40
   1677c:	bl	21928 <__assert_fail@plt+0x1044c>
   16780:	tst	r0, #1
   16784:	beq	167a0 <__assert_fail@plt+0x52c4>
   16788:	ldr	r0, [sp, #12]
   1678c:	ldr	r1, [sp, #12]
   16790:	str	r0, [r1]
   16794:	ldr	r0, [sp, #12]
   16798:	movw	r1, #2
   1679c:	strh	r1, [r0, #56]	; 0x38
   167a0:	b	167a4 <__assert_fail@plt+0x52c8>
   167a4:	movw	r0, #1
   167a8:	and	r0, r0, #1
   167ac:	strb	r0, [fp, #-1]
   167b0:	ldrb	r0, [fp, #-1]
   167b4:	and	r0, r0, #1
   167b8:	mov	sp, fp
   167bc:	pop	{fp, pc}
   167c0:	push	{fp, lr}
   167c4:	mov	fp, sp
   167c8:	sub	sp, sp, #24
   167cc:	str	r0, [fp, #-4]
   167d0:	str	r1, [fp, #-8]
   167d4:	and	r0, r2, #1
   167d8:	strb	r0, [fp, #-9]
   167dc:	ldr	r0, [fp, #-4]
   167e0:	ldr	r0, [r0, #32]
   167e4:	str	r0, [sp, #8]
   167e8:	ldr	r0, [sp, #8]
   167ec:	ldr	r1, [fp, #-8]
   167f0:	cmp	r0, r1
   167f4:	bne	16808 <__assert_fail@plt+0x532c>
   167f8:	ldr	r0, [sp, #8]
   167fc:	cmn	r0, #100	; 0x64
   16800:	beq	16808 <__assert_fail@plt+0x532c>
   16804:	bl	11494 <abort@plt>
   16808:	b	1680c <__assert_fail@plt+0x5330>
   1680c:	ldrb	r0, [fp, #-9]
   16810:	tst	r0, #1
   16814:	beq	16848 <__assert_fail@plt+0x536c>
   16818:	ldr	r0, [fp, #-4]
   1681c:	add	r0, r0, #60	; 0x3c
   16820:	ldr	r1, [sp, #8]
   16824:	bl	18fb8 <__assert_fail@plt+0x7adc>
   16828:	str	r0, [sp, #4]
   1682c:	ldr	r0, [sp, #4]
   16830:	movw	r1, #0
   16834:	cmp	r1, r0
   16838:	bgt	16844 <__assert_fail@plt+0x5368>
   1683c:	ldr	r0, [sp, #4]
   16840:	bl	114a0 <close@plt>
   16844:	b	1687c <__assert_fail@plt+0x53a0>
   16848:	ldr	r0, [fp, #-4]
   1684c:	ldr	r0, [r0, #48]	; 0x30
   16850:	and	r0, r0, #4
   16854:	cmp	r0, #0
   16858:	bne	16878 <__assert_fail@plt+0x539c>
   1685c:	ldr	r0, [sp, #8]
   16860:	movw	r1, #0
   16864:	cmp	r1, r0
   16868:	bgt	16874 <__assert_fail@plt+0x5398>
   1686c:	ldr	r0, [sp, #8]
   16870:	bl	114a0 <close@plt>
   16874:	b	16878 <__assert_fail@plt+0x539c>
   16878:	b	1687c <__assert_fail@plt+0x53a0>
   1687c:	ldr	r0, [fp, #-8]
   16880:	ldr	r1, [fp, #-4]
   16884:	str	r0, [r1, #32]
   16888:	mov	sp, fp
   1688c:	pop	{fp, pc}
   16890:	push	{fp, lr}
   16894:	mov	fp, sp
   16898:	sub	sp, sp, #16
   1689c:	str	r0, [sp, #8]
   168a0:	str	r1, [sp, #4]
   168a4:	str	r2, [sp]
   168a8:	ldr	r0, [sp]
   168ac:	cmp	r0, #0
   168b0:	beq	168fc <__assert_fail@plt+0x5420>
   168b4:	ldr	r0, [sp]
   168b8:	cmp	r0, #1
   168bc:	beq	168fc <__assert_fail@plt+0x5420>
   168c0:	ldr	r0, [sp]
   168c4:	cmp	r0, #2
   168c8:	beq	168fc <__assert_fail@plt+0x5420>
   168cc:	ldr	r0, [sp]
   168d0:	cmp	r0, #3
   168d4:	beq	168fc <__assert_fail@plt+0x5420>
   168d8:	ldr	r0, [sp]
   168dc:	cmp	r0, #4
   168e0:	beq	168fc <__assert_fail@plt+0x5420>
   168e4:	bl	11398 <__errno_location@plt>
   168e8:	movw	r1, #22
   168ec:	str	r1, [r0]
   168f0:	movw	r0, #1
   168f4:	str	r0, [fp, #-4]
   168f8:	b	16910 <__assert_fail@plt+0x5434>
   168fc:	ldr	r0, [sp]
   16900:	ldr	r1, [sp, #4]
   16904:	strh	r0, [r1, #60]	; 0x3c
   16908:	movw	r0, #0
   1690c:	str	r0, [fp, #-4]
   16910:	ldr	r0, [fp, #-4]
   16914:	mov	sp, fp
   16918:	pop	{fp, pc}
   1691c:	push	{fp, lr}
   16920:	mov	fp, sp
   16924:	sub	sp, sp, #32
   16928:	str	r0, [fp, #-8]
   1692c:	str	r1, [fp, #-12]
   16930:	ldr	r0, [fp, #-12]
   16934:	cmp	r0, #0
   16938:	beq	16960 <__assert_fail@plt+0x5484>
   1693c:	ldr	r0, [fp, #-12]
   16940:	cmp	r0, #4096	; 0x1000
   16944:	beq	16960 <__assert_fail@plt+0x5484>
   16948:	bl	11398 <__errno_location@plt>
   1694c:	movw	r1, #22
   16950:	str	r1, [r0]
   16954:	movw	r0, #0
   16958:	str	r0, [fp, #-4]
   1695c:	b	16b44 <__assert_fail@plt+0x5668>
   16960:	ldr	r0, [fp, #-8]
   16964:	ldr	r0, [r0]
   16968:	str	r0, [sp, #16]
   1696c:	bl	11398 <__errno_location@plt>
   16970:	movw	r1, #0
   16974:	str	r1, [r0]
   16978:	ldr	r0, [fp, #-8]
   1697c:	ldr	r0, [r0, #48]	; 0x30
   16980:	and	r0, r0, #8192	; 0x2000
   16984:	cmp	r0, #0
   16988:	beq	16998 <__assert_fail@plt+0x54bc>
   1698c:	movw	r0, #0
   16990:	str	r0, [fp, #-4]
   16994:	b	16b44 <__assert_fail@plt+0x5668>
   16998:	ldr	r0, [sp, #16]
   1699c:	ldrh	r0, [r0, #56]	; 0x38
   169a0:	cmp	r0, #9
   169a4:	bne	169b8 <__assert_fail@plt+0x54dc>
   169a8:	ldr	r0, [sp, #16]
   169ac:	ldr	r0, [r0, #8]
   169b0:	str	r0, [fp, #-4]
   169b4:	b	16b44 <__assert_fail@plt+0x5668>
   169b8:	ldr	r0, [sp, #16]
   169bc:	ldrh	r0, [r0, #56]	; 0x38
   169c0:	cmp	r0, #1
   169c4:	beq	169d4 <__assert_fail@plt+0x54f8>
   169c8:	movw	r0, #0
   169cc:	str	r0, [fp, #-4]
   169d0:	b	16b44 <__assert_fail@plt+0x5668>
   169d4:	ldr	r0, [fp, #-8]
   169d8:	ldr	r0, [r0, #4]
   169dc:	movw	r1, #0
   169e0:	cmp	r0, r1
   169e4:	beq	169f4 <__assert_fail@plt+0x5518>
   169e8:	ldr	r0, [fp, #-8]
   169ec:	ldr	r0, [r0, #4]
   169f0:	bl	14648 <__assert_fail@plt+0x316c>
   169f4:	ldr	r0, [fp, #-12]
   169f8:	cmp	r0, #4096	; 0x1000
   169fc:	bne	16a1c <__assert_fail@plt+0x5540>
   16a00:	ldr	r0, [fp, #-8]
   16a04:	ldr	r1, [r0, #48]	; 0x30
   16a08:	orr	r1, r1, #4096	; 0x1000
   16a0c:	str	r1, [r0, #48]	; 0x30
   16a10:	movw	r0, #2
   16a14:	str	r0, [fp, #-12]
   16a18:	b	16a24 <__assert_fail@plt+0x5548>
   16a1c:	movw	r0, #1
   16a20:	str	r0, [fp, #-12]
   16a24:	ldr	r0, [sp, #16]
   16a28:	ldr	r0, [r0, #48]	; 0x30
   16a2c:	cmp	r0, #0
   16a30:	bne	16a5c <__assert_fail@plt+0x5580>
   16a34:	ldr	r0, [sp, #16]
   16a38:	ldr	r0, [r0, #24]
   16a3c:	ldrb	r0, [r0]
   16a40:	cmp	r0, #47	; 0x2f
   16a44:	beq	16a5c <__assert_fail@plt+0x5580>
   16a48:	ldr	r0, [fp, #-8]
   16a4c:	ldr	r0, [r0, #48]	; 0x30
   16a50:	and	r0, r0, #4
   16a54:	cmp	r0, #0
   16a58:	beq	16a78 <__assert_fail@plt+0x559c>
   16a5c:	ldr	r0, [fp, #-8]
   16a60:	ldr	r1, [fp, #-12]
   16a64:	bl	157ac <__assert_fail@plt+0x42d0>
   16a68:	ldr	r1, [fp, #-8]
   16a6c:	str	r0, [r1, #4]
   16a70:	str	r0, [fp, #-4]
   16a74:	b	16b44 <__assert_fail@plt+0x5668>
   16a78:	ldr	r0, [fp, #-8]
   16a7c:	movw	r1, #20922	; 0x51ba
   16a80:	movt	r1, #2
   16a84:	bl	145ac <__assert_fail@plt+0x30d0>
   16a88:	str	r0, [sp, #12]
   16a8c:	cmp	r0, #0
   16a90:	bge	16aa8 <__assert_fail@plt+0x55cc>
   16a94:	ldr	r0, [fp, #-8]
   16a98:	movw	r1, #0
   16a9c:	str	r1, [r0, #4]
   16aa0:	str	r1, [fp, #-4]
   16aa4:	b	16b44 <__assert_fail@plt+0x5668>
   16aa8:	ldr	r0, [fp, #-8]
   16aac:	ldr	r1, [fp, #-12]
   16ab0:	bl	157ac <__assert_fail@plt+0x42d0>
   16ab4:	ldr	r1, [fp, #-8]
   16ab8:	str	r0, [r1, #4]
   16abc:	ldr	r0, [fp, #-8]
   16ac0:	ldr	r0, [r0, #48]	; 0x30
   16ac4:	and	r0, r0, #512	; 0x200
   16ac8:	cmp	r0, #0
   16acc:	beq	16ae8 <__assert_fail@plt+0x560c>
   16ad0:	ldr	r0, [fp, #-8]
   16ad4:	ldr	r1, [sp, #12]
   16ad8:	movw	r2, #1
   16adc:	and	r2, r2, #1
   16ae0:	bl	167c0 <__assert_fail@plt+0x52e4>
   16ae4:	b	16b38 <__assert_fail@plt+0x565c>
   16ae8:	ldr	r0, [sp, #12]
   16aec:	bl	11440 <fchdir@plt>
   16af0:	cmp	r0, #0
   16af4:	beq	16b30 <__assert_fail@plt+0x5654>
   16af8:	bl	11398 <__errno_location@plt>
   16afc:	ldr	r0, [r0]
   16b00:	str	r0, [sp, #8]
   16b04:	ldr	r0, [sp, #12]
   16b08:	bl	114a0 <close@plt>
   16b0c:	ldr	r1, [sp, #8]
   16b10:	str	r0, [sp, #4]
   16b14:	str	r1, [sp]
   16b18:	bl	11398 <__errno_location@plt>
   16b1c:	ldr	r1, [sp]
   16b20:	str	r1, [r0]
   16b24:	movw	r0, #0
   16b28:	str	r0, [fp, #-4]
   16b2c:	b	16b44 <__assert_fail@plt+0x5668>
   16b30:	ldr	r0, [sp, #12]
   16b34:	bl	114a0 <close@plt>
   16b38:	ldr	r0, [fp, #-8]
   16b3c:	ldr	r0, [r0, #4]
   16b40:	str	r0, [fp, #-4]
   16b44:	ldr	r0, [fp, #-4]
   16b48:	mov	sp, fp
   16b4c:	pop	{fp, pc}
   16b50:	push	{fp, lr}
   16b54:	mov	fp, sp
   16b58:	sub	sp, sp, #24
   16b5c:	str	r0, [fp, #-4]
   16b60:	str	r1, [fp, #-8]
   16b64:	ldr	r0, [fp, #-4]
   16b68:	str	r0, [sp, #12]
   16b6c:	ldr	r0, [sp, #12]
   16b70:	ldr	r1, [r0, #8]
   16b74:	ldr	r0, [r0, #12]
   16b78:	ldr	r2, [fp, #-8]
   16b7c:	mov	r3, #0
   16b80:	str	r0, [sp, #8]
   16b84:	mov	r0, r1
   16b88:	ldr	r1, [sp, #8]
   16b8c:	bl	2413c <__assert_fail@plt+0x12c60>
   16b90:	str	r0, [sp, #4]
   16b94:	mov	r0, r2
   16b98:	mov	sp, fp
   16b9c:	pop	{fp, pc}
   16ba0:	sub	sp, sp, #20
   16ba4:	str	r0, [sp, #16]
   16ba8:	str	r1, [sp, #12]
   16bac:	ldr	r0, [sp, #16]
   16bb0:	str	r0, [sp, #8]
   16bb4:	ldr	r0, [sp, #12]
   16bb8:	str	r0, [sp, #4]
   16bbc:	ldr	r0, [sp, #8]
   16bc0:	ldr	r1, [r0, #8]
   16bc4:	ldr	r0, [r0, #12]
   16bc8:	ldr	r2, [sp, #4]
   16bcc:	ldr	r3, [r2, #8]
   16bd0:	ldr	r2, [r2, #12]
   16bd4:	eor	r0, r0, r2
   16bd8:	eor	r1, r1, r3
   16bdc:	orr	r0, r1, r0
   16be0:	mov	r1, #0
   16be4:	cmp	r0, #0
   16be8:	str	r1, [sp]
   16bec:	bne	16c24 <__assert_fail@plt+0x5748>
   16bf0:	b	16bf4 <__assert_fail@plt+0x5718>
   16bf4:	ldr	r0, [sp, #8]
   16bf8:	ldr	r1, [r0]
   16bfc:	ldr	r0, [r0, #4]
   16c00:	ldr	r2, [sp, #4]
   16c04:	ldr	r3, [r2]
   16c08:	ldr	r2, [r2, #4]
   16c0c:	eor	r0, r0, r2
   16c10:	eor	r1, r1, r3
   16c14:	orr	r0, r1, r0
   16c18:	clz	r0, r0
   16c1c:	lsr	r0, r0, #5
   16c20:	str	r0, [sp]
   16c24:	ldr	r0, [sp]
   16c28:	and	r0, r0, #1
   16c2c:	add	sp, sp, #20
   16c30:	bx	lr
   16c34:	push	{fp, lr}
   16c38:	mov	fp, sp
   16c3c:	sub	sp, sp, #16
   16c40:	str	r0, [sp, #8]
   16c44:	str	r1, [sp, #4]
   16c48:	ldr	r0, [sp, #8]
   16c4c:	ldr	r1, [sp, #4]
   16c50:	bl	16ffc <__assert_fail@plt+0x5b20>
   16c54:	mov	r1, r0
   16c58:	movw	r2, #19778	; 0x4d42
   16c5c:	movt	r2, #65363	; 0xff53
   16c60:	cmp	r0, r2
   16c64:	str	r1, [sp]
   16c68:	beq	16cc8 <__assert_fail@plt+0x57ec>
   16c6c:	b	16c70 <__assert_fail@plt+0x5794>
   16c70:	ldr	r0, [sp]
   16c74:	cmp	r0, #0
   16c78:	beq	16cc0 <__assert_fail@plt+0x57e4>
   16c7c:	b	16c80 <__assert_fail@plt+0x57a4>
   16c80:	movw	r0, #26985	; 0x6969
   16c84:	ldr	r1, [sp]
   16c88:	cmp	r1, r0
   16c8c:	beq	16ccc <__assert_fail@plt+0x57f0>
   16c90:	b	16c94 <__assert_fail@plt+0x57b8>
   16c94:	movw	r0, #40864	; 0x9fa0
   16c98:	ldr	r1, [sp]
   16c9c:	cmp	r1, r0
   16ca0:	beq	16cd0 <__assert_fail@plt+0x57f4>
   16ca4:	b	16ca8 <__assert_fail@plt+0x57cc>
   16ca8:	movw	r0, #16719	; 0x414f
   16cac:	movt	r0, #21318	; 0x5346
   16cb0:	ldr	r1, [sp]
   16cb4:	cmp	r1, r0
   16cb8:	beq	16cc4 <__assert_fail@plt+0x57e8>
   16cbc:	b	16cdc <__assert_fail@plt+0x5800>
   16cc0:	b	16cc4 <__assert_fail@plt+0x57e8>
   16cc4:	b	16cc8 <__assert_fail@plt+0x57ec>
   16cc8:	b	16ccc <__assert_fail@plt+0x57f0>
   16ccc:	b	16cd0 <__assert_fail@plt+0x57f4>
   16cd0:	movw	r0, #0
   16cd4:	str	r0, [fp, #-4]
   16cd8:	b	16ce4 <__assert_fail@plt+0x5808>
   16cdc:	movw	r0, #1
   16ce0:	str	r0, [fp, #-4]
   16ce4:	ldr	r0, [fp, #-4]
   16ce8:	mov	sp, fp
   16cec:	pop	{fp, pc}
   16cf0:	sub	sp, sp, #16
   16cf4:	str	r0, [sp, #12]
   16cf8:	str	r1, [sp, #8]
   16cfc:	ldr	r0, [sp, #8]
   16d00:	sub	r0, r0, #1
   16d04:	cmp	r0, #11
   16d08:	str	r0, [sp]
   16d0c:	bhi	16da4 <__assert_fail@plt+0x58c8>
   16d10:	add	r0, pc, #8
   16d14:	ldr	r1, [sp]
   16d18:	ldr	r0, [r0, r1, lsl #2]
   16d1c:	mov	pc, r0
   16d20:	andeq	r6, r1, r4, ror sp
   16d24:	andeq	r6, r1, ip, asr sp
   16d28:	andeq	r6, r1, r4, lsr #27
   16d2c:	andeq	r6, r1, r8, ror #26
   16d30:	andeq	r6, r1, r4, lsr #27
   16d34:	andeq	r6, r1, r0, asr sp
   16d38:	andeq	r6, r1, r4, lsr #27
   16d3c:	andeq	r6, r1, ip, lsl #27
   16d40:	andeq	r6, r1, r4, lsr #27
   16d44:	andeq	r6, r1, r0, lsl #27
   16d48:	andeq	r6, r1, r4, lsr #27
   16d4c:	muleq	r1, r8, sp
   16d50:	movw	r0, #24576	; 0x6000
   16d54:	str	r0, [sp, #4]
   16d58:	b	16dac <__assert_fail@plt+0x58d0>
   16d5c:	movw	r0, #8192	; 0x2000
   16d60:	str	r0, [sp, #4]
   16d64:	b	16dac <__assert_fail@plt+0x58d0>
   16d68:	movw	r0, #16384	; 0x4000
   16d6c:	str	r0, [sp, #4]
   16d70:	b	16dac <__assert_fail@plt+0x58d0>
   16d74:	movw	r0, #4096	; 0x1000
   16d78:	str	r0, [sp, #4]
   16d7c:	b	16dac <__assert_fail@plt+0x58d0>
   16d80:	movw	r0, #40960	; 0xa000
   16d84:	str	r0, [sp, #4]
   16d88:	b	16dac <__assert_fail@plt+0x58d0>
   16d8c:	movw	r0, #32768	; 0x8000
   16d90:	str	r0, [sp, #4]
   16d94:	b	16dac <__assert_fail@plt+0x58d0>
   16d98:	movw	r0, #49152	; 0xc000
   16d9c:	str	r0, [sp, #4]
   16da0:	b	16dac <__assert_fail@plt+0x58d0>
   16da4:	movw	r0, #0
   16da8:	str	r0, [sp, #4]
   16dac:	ldr	r0, [sp, #4]
   16db0:	ldr	r1, [sp, #12]
   16db4:	str	r0, [r1, #16]
   16db8:	add	sp, sp, #16
   16dbc:	bx	lr
   16dc0:	push	{fp, lr}
   16dc4:	mov	fp, sp
   16dc8:	sub	sp, sp, #16
   16dcc:	str	r0, [sp, #8]
   16dd0:	str	r1, [sp, #4]
   16dd4:	ldr	r0, [sp, #8]
   16dd8:	ldr	r1, [sp, #4]
   16ddc:	bl	16ffc <__assert_fail@plt+0x5b20>
   16de0:	mov	r1, r0
   16de4:	movw	r2, #19778	; 0x4d42
   16de8:	movt	r2, #65363	; 0xff53
   16dec:	cmp	r0, r2
   16df0:	str	r1, [sp]
   16df4:	beq	16e28 <__assert_fail@plt+0x594c>
   16df8:	b	16dfc <__assert_fail@plt+0x5920>
   16dfc:	movw	r0, #26985	; 0x6969
   16e00:	ldr	r1, [sp]
   16e04:	cmp	r1, r0
   16e08:	beq	16e28 <__assert_fail@plt+0x594c>
   16e0c:	b	16e10 <__assert_fail@plt+0x5934>
   16e10:	movw	r0, #6548	; 0x1994
   16e14:	movt	r0, #258	; 0x102
   16e18:	ldr	r1, [sp]
   16e1c:	cmp	r1, r0
   16e20:	bne	16e38 <__assert_fail@plt+0x595c>
   16e24:	b	16e28 <__assert_fail@plt+0x594c>
   16e28:	movw	r0, #0
   16e2c:	and	r0, r0, #1
   16e30:	strb	r0, [fp, #-1]
   16e34:	b	16e44 <__assert_fail@plt+0x5968>
   16e38:	movw	r0, #1
   16e3c:	and	r0, r0, #1
   16e40:	strb	r0, [fp, #-1]
   16e44:	ldrb	r0, [fp, #-1]
   16e48:	and	r0, r0, #1
   16e4c:	mov	sp, fp
   16e50:	pop	{fp, pc}
   16e54:	sub	sp, sp, #20
   16e58:	str	r0, [sp, #16]
   16e5c:	str	r1, [sp, #12]
   16e60:	ldr	r0, [sp, #16]
   16e64:	ldr	r0, [r0, #24]
   16e68:	str	r0, [sp, #4]
   16e6c:	ldr	r0, [sp, #16]
   16e70:	ldr	r0, [r0, #4]
   16e74:	str	r0, [sp, #8]
   16e78:	ldr	r0, [sp, #8]
   16e7c:	movw	r1, #0
   16e80:	cmp	r0, r1
   16e84:	beq	16ee8 <__assert_fail@plt+0x5a0c>
   16e88:	b	16e8c <__assert_fail@plt+0x59b0>
   16e8c:	ldr	r0, [sp, #8]
   16e90:	ldr	r0, [r0, #24]
   16e94:	ldr	r1, [sp, #8]
   16e98:	add	r1, r1, #168	; 0xa8
   16e9c:	cmp	r0, r1
   16ea0:	beq	16ec8 <__assert_fail@plt+0x59ec>
   16ea4:	ldr	r0, [sp, #4]
   16ea8:	ldr	r1, [sp, #8]
   16eac:	ldr	r1, [r1, #24]
   16eb0:	ldr	r2, [sp, #8]
   16eb4:	ldr	r2, [r2, #28]
   16eb8:	sub	r1, r1, r2
   16ebc:	add	r0, r0, r1
   16ec0:	ldr	r1, [sp, #8]
   16ec4:	str	r0, [r1, #24]
   16ec8:	ldr	r0, [sp, #4]
   16ecc:	ldr	r1, [sp, #8]
   16ed0:	str	r0, [r1, #28]
   16ed4:	b	16ed8 <__assert_fail@plt+0x59fc>
   16ed8:	ldr	r0, [sp, #8]
   16edc:	ldr	r0, [r0, #8]
   16ee0:	str	r0, [sp, #8]
   16ee4:	b	16e78 <__assert_fail@plt+0x599c>
   16ee8:	ldr	r0, [sp, #12]
   16eec:	str	r0, [sp, #8]
   16ef0:	ldr	r0, [sp, #8]
   16ef4:	ldr	r0, [r0, #48]	; 0x30
   16ef8:	cmp	r0, #0
   16efc:	blt	16f88 <__assert_fail@plt+0x5aac>
   16f00:	b	16f04 <__assert_fail@plt+0x5a28>
   16f04:	ldr	r0, [sp, #8]
   16f08:	ldr	r0, [r0, #24]
   16f0c:	ldr	r1, [sp, #8]
   16f10:	add	r1, r1, #168	; 0xa8
   16f14:	cmp	r0, r1
   16f18:	beq	16f40 <__assert_fail@plt+0x5a64>
   16f1c:	ldr	r0, [sp, #4]
   16f20:	ldr	r1, [sp, #8]
   16f24:	ldr	r1, [r1, #24]
   16f28:	ldr	r2, [sp, #8]
   16f2c:	ldr	r2, [r2, #28]
   16f30:	sub	r1, r1, r2
   16f34:	add	r0, r0, r1
   16f38:	ldr	r1, [sp, #8]
   16f3c:	str	r0, [r1, #24]
   16f40:	ldr	r0, [sp, #4]
   16f44:	ldr	r1, [sp, #8]
   16f48:	str	r0, [r1, #28]
   16f4c:	ldr	r0, [sp, #8]
   16f50:	ldr	r0, [r0, #8]
   16f54:	movw	r1, #0
   16f58:	cmp	r0, r1
   16f5c:	beq	16f70 <__assert_fail@plt+0x5a94>
   16f60:	ldr	r0, [sp, #8]
   16f64:	ldr	r0, [r0, #8]
   16f68:	str	r0, [sp]
   16f6c:	b	16f7c <__assert_fail@plt+0x5aa0>
   16f70:	ldr	r0, [sp, #8]
   16f74:	ldr	r0, [r0, #4]
   16f78:	str	r0, [sp]
   16f7c:	ldr	r0, [sp]
   16f80:	str	r0, [sp, #8]
   16f84:	b	16ef0 <__assert_fail@plt+0x5a14>
   16f88:	add	sp, sp, #20
   16f8c:	bx	lr
   16f90:	push	{r4, r5, fp, lr}
   16f94:	add	fp, sp, #8
   16f98:	sub	sp, sp, #12
   16f9c:	str	r0, [sp, #8]
   16fa0:	str	r1, [sp, #4]
   16fa4:	ldr	r0, [sp, #8]
   16fa8:	ldr	r0, [r0]
   16fac:	ldr	r1, [r0, #160]	; 0xa0
   16fb0:	ldr	r0, [r0, #164]	; 0xa4
   16fb4:	ldr	r2, [sp, #4]
   16fb8:	ldr	r2, [r2]
   16fbc:	ldr	r3, [r2, #160]	; 0xa0
   16fc0:	ldr	r2, [r2, #164]	; 0xa4
   16fc4:	subs	ip, r3, r1
   16fc8:	sbcs	lr, r2, r0
   16fcc:	mov	r4, #0
   16fd0:	mov	r5, r4
   16fd4:	movwcc	r5, #1
   16fd8:	subs	r1, r1, r3
   16fdc:	sbcs	r0, r0, r2
   16fe0:	movwcc	r4, #1
   16fe4:	and	r2, r4, #1
   16fe8:	sub	r2, r5, r2
   16fec:	str	r0, [sp]
   16ff0:	mov	r0, r2
   16ff4:	sub	sp, fp, #8
   16ff8:	pop	{r4, r5, fp, pc}
   16ffc:	push	{fp, lr}
   17000:	mov	fp, sp
   17004:	sub	sp, sp, #136	; 0x88
   17008:	str	r0, [fp, #-8]
   1700c:	str	r1, [fp, #-12]
   17010:	ldr	r0, [fp, #-8]
   17014:	ldr	r0, [r0, #44]	; 0x2c
   17018:	str	r0, [fp, #-16]
   1701c:	ldr	r0, [fp, #-16]
   17020:	ldr	r0, [r0, #52]	; 0x34
   17024:	str	r0, [fp, #-20]	; 0xffffffec
   17028:	ldr	r0, [fp, #-16]
   1702c:	ldr	r0, [r0, #48]	; 0x30
   17030:	and	r0, r0, #512	; 0x200
   17034:	cmp	r0, #0
   17038:	bne	17048 <__assert_fail@plt+0x5b6c>
   1703c:	movw	r0, #0
   17040:	str	r0, [fp, #-4]
   17044:	b	171b8 <__assert_fail@plt+0x5cdc>
   17048:	ldr	r0, [fp, #-20]	; 0xffffffec
   1704c:	movw	r1, #0
   17050:	cmp	r0, r1
   17054:	bne	1708c <__assert_fail@plt+0x5bb0>
   17058:	movw	r0, #13
   1705c:	movw	r1, #0
   17060:	movw	r2, #29124	; 0x71c4
   17064:	movt	r2, #1
   17068:	movw	r3, #29208	; 0x7218
   1706c:	movt	r3, #1
   17070:	movw	ip, #14380	; 0x382c
   17074:	movt	ip, #1
   17078:	str	ip, [sp]
   1707c:	bl	17ad4 <__assert_fail@plt+0x65f8>
   17080:	ldr	r1, [fp, #-16]
   17084:	str	r0, [r1, #52]	; 0x34
   17088:	str	r0, [fp, #-20]	; 0xffffffec
   1708c:	ldr	r0, [fp, #-20]	; 0xffffffec
   17090:	movw	r1, #0
   17094:	cmp	r0, r1
   17098:	beq	170e4 <__assert_fail@plt+0x5c08>
   1709c:	ldr	r0, [fp, #-8]
   170a0:	ldr	r1, [r0, #64]	; 0x40
   170a4:	ldr	r0, [r0, #68]	; 0x44
   170a8:	str	r0, [sp, #12]
   170ac:	str	r1, [sp, #8]
   170b0:	ldr	r0, [fp, #-20]	; 0xffffffec
   170b4:	add	r1, sp, #8
   170b8:	bl	175b8 <__assert_fail@plt+0x60dc>
   170bc:	str	r0, [fp, #-24]	; 0xffffffe8
   170c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   170c4:	movw	r1, #0
   170c8:	cmp	r0, r1
   170cc:	beq	170e0 <__assert_fail@plt+0x5c04>
   170d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   170d4:	ldr	r0, [r0, #8]
   170d8:	str	r0, [fp, #-4]
   170dc:	b	171b8 <__assert_fail@plt+0x5cdc>
   170e0:	b	170e4 <__assert_fail@plt+0x5c08>
   170e4:	ldr	r0, [fp, #-12]
   170e8:	cmp	r0, #0
   170ec:	blt	17104 <__assert_fail@plt+0x5c28>
   170f0:	ldr	r0, [fp, #-12]
   170f4:	add	r1, sp, #24
   170f8:	bl	111ac <fstatfs64@plt>
   170fc:	cmp	r0, #0
   17100:	beq	17110 <__assert_fail@plt+0x5c34>
   17104:	movw	r0, #0
   17108:	str	r0, [fp, #-4]
   1710c:	b	171b8 <__assert_fail@plt+0x5cdc>
   17110:	ldr	r0, [fp, #-20]	; 0xffffffec
   17114:	movw	r1, #0
   17118:	cmp	r0, r1
   1711c:	beq	171b0 <__assert_fail@plt+0x5cd4>
   17120:	movw	r0, #16
   17124:	bl	2137c <__assert_fail@plt+0xfea0>
   17128:	str	r0, [sp, #4]
   1712c:	ldr	r0, [sp, #4]
   17130:	movw	r1, #0
   17134:	cmp	r0, r1
   17138:	beq	171ac <__assert_fail@plt+0x5cd0>
   1713c:	ldr	r0, [fp, #-8]
   17140:	ldr	r1, [r0, #64]	; 0x40
   17144:	ldr	r0, [r0, #68]	; 0x44
   17148:	ldr	r2, [sp, #4]
   1714c:	str	r0, [r2, #4]
   17150:	str	r1, [r2]
   17154:	ldr	r0, [sp, #24]
   17158:	ldr	r1, [sp, #4]
   1715c:	str	r0, [r1, #8]
   17160:	ldr	r0, [fp, #-20]	; 0xffffffec
   17164:	ldr	r1, [sp, #4]
   17168:	bl	18af8 <__assert_fail@plt+0x761c>
   1716c:	str	r0, [fp, #-24]	; 0xffffffe8
   17170:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17174:	movw	r1, #0
   17178:	cmp	r0, r1
   1717c:	beq	171a0 <__assert_fail@plt+0x5cc4>
   17180:	b	17184 <__assert_fail@plt+0x5ca8>
   17184:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17188:	ldr	r1, [sp, #4]
   1718c:	cmp	r0, r1
   17190:	beq	17198 <__assert_fail@plt+0x5cbc>
   17194:	bl	11494 <abort@plt>
   17198:	b	1719c <__assert_fail@plt+0x5cc0>
   1719c:	b	171a8 <__assert_fail@plt+0x5ccc>
   171a0:	ldr	r0, [sp, #4]
   171a4:	bl	1382c <__assert_fail@plt+0x2350>
   171a8:	b	171ac <__assert_fail@plt+0x5cd0>
   171ac:	b	171b0 <__assert_fail@plt+0x5cd4>
   171b0:	ldr	r0, [sp, #24]
   171b4:	str	r0, [fp, #-4]
   171b8:	ldr	r0, [fp, #-4]
   171bc:	mov	sp, fp
   171c0:	pop	{fp, pc}
   171c4:	push	{fp, lr}
   171c8:	mov	fp, sp
   171cc:	sub	sp, sp, #32
   171d0:	str	r0, [fp, #-4]
   171d4:	str	r1, [fp, #-8]
   171d8:	ldr	r0, [fp, #-4]
   171dc:	str	r0, [fp, #-12]
   171e0:	ldr	r0, [fp, #-12]
   171e4:	ldr	r1, [r0]
   171e8:	ldr	r0, [r0, #4]
   171ec:	str	r0, [sp, #12]
   171f0:	str	r1, [sp, #8]
   171f4:	ldr	r0, [sp, #8]
   171f8:	ldr	r1, [sp, #12]
   171fc:	ldr	r2, [fp, #-8]
   17200:	mov	r3, #0
   17204:	bl	2413c <__assert_fail@plt+0x12c60>
   17208:	str	r0, [sp, #4]
   1720c:	mov	r0, r2
   17210:	mov	sp, fp
   17214:	pop	{fp, pc}
   17218:	sub	sp, sp, #16
   1721c:	str	r0, [sp, #12]
   17220:	str	r1, [sp, #8]
   17224:	ldr	r0, [sp, #12]
   17228:	str	r0, [sp, #4]
   1722c:	ldr	r0, [sp, #8]
   17230:	str	r0, [sp]
   17234:	ldr	r0, [sp, #4]
   17238:	ldr	r1, [r0]
   1723c:	ldr	r0, [r0, #4]
   17240:	ldr	r2, [sp]
   17244:	ldr	r3, [r2]
   17248:	ldr	r2, [r2, #4]
   1724c:	eor	r0, r0, r2
   17250:	eor	r1, r1, r3
   17254:	orr	r0, r1, r0
   17258:	clz	r0, r0
   1725c:	lsr	r0, r0, #5
   17260:	and	r0, r0, #1
   17264:	add	sp, sp, #16
   17268:	bx	lr
   1726c:	push	{fp, lr}
   17270:	mov	fp, sp
   17274:	sub	sp, sp, #24
   17278:	str	r0, [fp, #-4]
   1727c:	str	r1, [fp, #-8]
   17280:	ldr	r0, [fp, #-4]
   17284:	str	r0, [sp, #12]
   17288:	ldr	r0, [fp, #-8]
   1728c:	str	r0, [sp, #8]
   17290:	ldr	r0, [sp, #12]
   17294:	ldr	r0, [r0]
   17298:	ldr	r0, [r0, #44]	; 0x2c
   1729c:	ldr	r0, [r0, #44]	; 0x2c
   172a0:	ldr	r1, [sp, #12]
   172a4:	ldr	r2, [sp, #8]
   172a8:	str	r0, [sp, #4]
   172ac:	mov	r0, r1
   172b0:	mov	r1, r2
   172b4:	ldr	r2, [sp, #4]
   172b8:	blx	r2
   172bc:	mov	sp, fp
   172c0:	pop	{fp, pc}
   172c4:	andeq	r0, r0, r0
   172c8:	sub	sp, sp, #4
   172cc:	str	r0, [sp]
   172d0:	ldr	r0, [sp]
   172d4:	ldr	r0, [r0, #8]
   172d8:	add	sp, sp, #4
   172dc:	bx	lr
   172e0:	sub	sp, sp, #4
   172e4:	str	r0, [sp]
   172e8:	ldr	r0, [sp]
   172ec:	ldr	r0, [r0, #12]
   172f0:	add	sp, sp, #4
   172f4:	bx	lr
   172f8:	sub	sp, sp, #4
   172fc:	str	r0, [sp]
   17300:	ldr	r0, [sp]
   17304:	ldr	r0, [r0, #16]
   17308:	add	sp, sp, #4
   1730c:	bx	lr
   17310:	sub	sp, sp, #20
   17314:	str	r0, [sp, #16]
   17318:	movw	r0, #0
   1731c:	str	r0, [sp, #8]
   17320:	ldr	r0, [sp, #16]
   17324:	ldr	r0, [r0]
   17328:	str	r0, [sp, #12]
   1732c:	ldr	r0, [sp, #12]
   17330:	ldr	r1, [sp, #16]
   17334:	ldr	r1, [r1, #4]
   17338:	cmp	r0, r1
   1733c:	bcs	173c0 <__assert_fail@plt+0x5ee4>
   17340:	ldr	r0, [sp, #12]
   17344:	ldr	r0, [r0]
   17348:	movw	r1, #0
   1734c:	cmp	r0, r1
   17350:	beq	173ac <__assert_fail@plt+0x5ed0>
   17354:	ldr	r0, [sp, #12]
   17358:	str	r0, [sp, #4]
   1735c:	movw	r0, #1
   17360:	str	r0, [sp]
   17364:	ldr	r0, [sp, #4]
   17368:	ldr	r0, [r0, #4]
   1736c:	str	r0, [sp, #4]
   17370:	ldr	r0, [sp, #4]
   17374:	movw	r1, #0
   17378:	cmp	r0, r1
   1737c:	beq	17390 <__assert_fail@plt+0x5eb4>
   17380:	ldr	r0, [sp]
   17384:	add	r0, r0, #1
   17388:	str	r0, [sp]
   1738c:	b	17364 <__assert_fail@plt+0x5e88>
   17390:	ldr	r0, [sp]
   17394:	ldr	r1, [sp, #8]
   17398:	cmp	r0, r1
   1739c:	bls	173a8 <__assert_fail@plt+0x5ecc>
   173a0:	ldr	r0, [sp]
   173a4:	str	r0, [sp, #8]
   173a8:	b	173ac <__assert_fail@plt+0x5ed0>
   173ac:	b	173b0 <__assert_fail@plt+0x5ed4>
   173b0:	ldr	r0, [sp, #12]
   173b4:	add	r0, r0, #8
   173b8:	str	r0, [sp, #12]
   173bc:	b	1732c <__assert_fail@plt+0x5e50>
   173c0:	ldr	r0, [sp, #8]
   173c4:	add	sp, sp, #20
   173c8:	bx	lr
   173cc:	sub	sp, sp, #24
   173d0:	str	r0, [sp, #16]
   173d4:	movw	r0, #0
   173d8:	str	r0, [sp, #8]
   173dc:	str	r0, [sp, #4]
   173e0:	ldr	r0, [sp, #16]
   173e4:	ldr	r0, [r0]
   173e8:	str	r0, [sp, #12]
   173ec:	ldr	r0, [sp, #12]
   173f0:	ldr	r1, [sp, #16]
   173f4:	ldr	r1, [r1, #4]
   173f8:	cmp	r0, r1
   173fc:	bcs	17478 <__assert_fail@plt+0x5f9c>
   17400:	ldr	r0, [sp, #12]
   17404:	ldr	r0, [r0]
   17408:	movw	r1, #0
   1740c:	cmp	r0, r1
   17410:	beq	17464 <__assert_fail@plt+0x5f88>
   17414:	ldr	r0, [sp, #12]
   17418:	str	r0, [sp]
   1741c:	ldr	r0, [sp, #8]
   17420:	add	r0, r0, #1
   17424:	str	r0, [sp, #8]
   17428:	ldr	r0, [sp, #4]
   1742c:	add	r0, r0, #1
   17430:	str	r0, [sp, #4]
   17434:	ldr	r0, [sp]
   17438:	ldr	r0, [r0, #4]
   1743c:	str	r0, [sp]
   17440:	ldr	r0, [sp]
   17444:	movw	r1, #0
   17448:	cmp	r0, r1
   1744c:	beq	17460 <__assert_fail@plt+0x5f84>
   17450:	ldr	r0, [sp, #4]
   17454:	add	r0, r0, #1
   17458:	str	r0, [sp, #4]
   1745c:	b	17434 <__assert_fail@plt+0x5f58>
   17460:	b	17464 <__assert_fail@plt+0x5f88>
   17464:	b	17468 <__assert_fail@plt+0x5f8c>
   17468:	ldr	r0, [sp, #12]
   1746c:	add	r0, r0, #8
   17470:	str	r0, [sp, #12]
   17474:	b	173ec <__assert_fail@plt+0x5f10>
   17478:	ldr	r0, [sp, #8]
   1747c:	ldr	r1, [sp, #16]
   17480:	ldr	r1, [r1, #12]
   17484:	cmp	r0, r1
   17488:	bne	174b0 <__assert_fail@plt+0x5fd4>
   1748c:	ldr	r0, [sp, #4]
   17490:	ldr	r1, [sp, #16]
   17494:	ldr	r1, [r1, #16]
   17498:	cmp	r0, r1
   1749c:	bne	174b0 <__assert_fail@plt+0x5fd4>
   174a0:	movw	r0, #1
   174a4:	and	r0, r0, #1
   174a8:	strb	r0, [sp, #23]
   174ac:	b	174bc <__assert_fail@plt+0x5fe0>
   174b0:	movw	r0, #0
   174b4:	and	r0, r0, #1
   174b8:	strb	r0, [sp, #23]
   174bc:	ldrb	r0, [sp, #23]
   174c0:	and	r0, r0, #1
   174c4:	add	sp, sp, #24
   174c8:	bx	lr
   174cc:	nop	{0}
   174d0:	push	{fp, lr}
   174d4:	mov	fp, sp
   174d8:	sub	sp, sp, #48	; 0x30
   174dc:	str	r0, [fp, #-4]
   174e0:	str	r1, [fp, #-8]
   174e4:	ldr	r0, [fp, #-4]
   174e8:	bl	172f8 <__assert_fail@plt+0x5e1c>
   174ec:	str	r0, [fp, #-12]
   174f0:	ldr	r0, [fp, #-4]
   174f4:	bl	172c8 <__assert_fail@plt+0x5dec>
   174f8:	str	r0, [fp, #-16]
   174fc:	ldr	r0, [fp, #-4]
   17500:	bl	172e0 <__assert_fail@plt+0x5e04>
   17504:	str	r0, [fp, #-20]	; 0xffffffec
   17508:	ldr	r0, [fp, #-4]
   1750c:	bl	17310 <__assert_fail@plt+0x5e34>
   17510:	str	r0, [sp, #24]
   17514:	ldr	r0, [fp, #-8]
   17518:	ldr	r2, [fp, #-12]
   1751c:	movw	r1, #20924	; 0x51bc
   17520:	movt	r1, #2
   17524:	bl	1138c <fprintf@plt>
   17528:	ldr	r1, [fp, #-8]
   1752c:	ldr	r2, [fp, #-16]
   17530:	str	r0, [sp, #20]
   17534:	mov	r0, r1
   17538:	movw	r1, #20948	; 0x51d4
   1753c:	movt	r1, #2
   17540:	bl	1138c <fprintf@plt>
   17544:	vldr	d16, [pc, #100]	; 175b0 <__assert_fail@plt+0x60d4>
   17548:	ldr	r1, [fp, #-8]
   1754c:	ldr	r2, [fp, #-20]	; 0xffffffec
   17550:	ldr	r3, [fp, #-20]	; 0xffffffec
   17554:	vmov	s0, r3
   17558:	vcvt.f64.u32	d17, s0
   1755c:	vmul.f64	d16, d16, d17
   17560:	ldr	r3, [fp, #-16]
   17564:	vmov	s0, r3
   17568:	vcvt.f64.u32	d17, s0
   1756c:	vdiv.f64	d16, d16, d17
   17570:	str	r0, [sp, #16]
   17574:	mov	r0, r1
   17578:	movw	r1, #20972	; 0x51ec
   1757c:	movt	r1, #2
   17580:	vstr	d16, [sp]
   17584:	bl	1138c <fprintf@plt>
   17588:	ldr	r1, [fp, #-8]
   1758c:	ldr	r2, [sp, #24]
   17590:	str	r0, [sp, #12]
   17594:	mov	r0, r1
   17598:	movw	r1, #21005	; 0x520d
   1759c:	movt	r1, #2
   175a0:	bl	1138c <fprintf@plt>
   175a4:	mov	sp, fp
   175a8:	pop	{fp, pc}
   175ac:	nop	{0}
   175b0:	andeq	r0, r0, r0
   175b4:	subsmi	r0, r9, r0
   175b8:	push	{fp, lr}
   175bc:	mov	fp, sp
   175c0:	sub	sp, sp, #24
   175c4:	str	r0, [fp, #-8]
   175c8:	str	r1, [sp, #12]
   175cc:	ldr	r0, [fp, #-8]
   175d0:	ldr	r1, [sp, #12]
   175d4:	bl	17690 <__assert_fail@plt+0x61b4>
   175d8:	str	r0, [sp, #8]
   175dc:	ldr	r0, [sp, #8]
   175e0:	ldr	r0, [r0]
   175e4:	movw	r1, #0
   175e8:	cmp	r0, r1
   175ec:	bne	175fc <__assert_fail@plt+0x6120>
   175f0:	movw	r0, #0
   175f4:	str	r0, [fp, #-4]
   175f8:	b	17684 <__assert_fail@plt+0x61a8>
   175fc:	ldr	r0, [sp, #8]
   17600:	str	r0, [sp, #4]
   17604:	ldr	r0, [sp, #4]
   17608:	movw	r1, #0
   1760c:	cmp	r0, r1
   17610:	beq	1767c <__assert_fail@plt+0x61a0>
   17614:	ldr	r0, [sp, #12]
   17618:	ldr	r1, [sp, #4]
   1761c:	ldr	r1, [r1]
   17620:	cmp	r0, r1
   17624:	beq	17658 <__assert_fail@plt+0x617c>
   17628:	ldr	r0, [fp, #-8]
   1762c:	ldr	r0, [r0, #28]
   17630:	ldr	r1, [sp, #12]
   17634:	ldr	r2, [sp, #4]
   17638:	ldr	r2, [r2]
   1763c:	str	r0, [sp]
   17640:	mov	r0, r1
   17644:	mov	r1, r2
   17648:	ldr	r2, [sp]
   1764c:	blx	r2
   17650:	tst	r0, #1
   17654:	beq	17668 <__assert_fail@plt+0x618c>
   17658:	ldr	r0, [sp, #4]
   1765c:	ldr	r0, [r0]
   17660:	str	r0, [fp, #-4]
   17664:	b	17684 <__assert_fail@plt+0x61a8>
   17668:	b	1766c <__assert_fail@plt+0x6190>
   1766c:	ldr	r0, [sp, #4]
   17670:	ldr	r0, [r0, #4]
   17674:	str	r0, [sp, #4]
   17678:	b	17604 <__assert_fail@plt+0x6128>
   1767c:	movw	r0, #0
   17680:	str	r0, [fp, #-4]
   17684:	ldr	r0, [fp, #-4]
   17688:	mov	sp, fp
   1768c:	pop	{fp, pc}
   17690:	push	{fp, lr}
   17694:	mov	fp, sp
   17698:	sub	sp, sp, #16
   1769c:	str	r0, [fp, #-4]
   176a0:	str	r1, [sp, #8]
   176a4:	ldr	r0, [fp, #-4]
   176a8:	ldr	r0, [r0, #24]
   176ac:	ldr	r1, [sp, #8]
   176b0:	ldr	r2, [fp, #-4]
   176b4:	ldr	r2, [r2, #8]
   176b8:	str	r0, [sp]
   176bc:	mov	r0, r1
   176c0:	mov	r1, r2
   176c4:	ldr	r2, [sp]
   176c8:	blx	r2
   176cc:	str	r0, [sp, #4]
   176d0:	ldr	r0, [sp, #4]
   176d4:	ldr	r1, [fp, #-4]
   176d8:	ldr	r1, [r1, #8]
   176dc:	cmp	r0, r1
   176e0:	bcc	176e8 <__assert_fail@plt+0x620c>
   176e4:	bl	11494 <abort@plt>
   176e8:	ldr	r0, [fp, #-4]
   176ec:	ldr	r0, [r0]
   176f0:	ldr	r1, [sp, #4]
   176f4:	add	r0, r0, r1, lsl #3
   176f8:	mov	sp, fp
   176fc:	pop	{fp, pc}
   17700:	push	{fp, lr}
   17704:	mov	fp, sp
   17708:	sub	sp, sp, #16
   1770c:	str	r0, [sp, #8]
   17710:	ldr	r0, [sp, #8]
   17714:	ldr	r0, [r0, #16]
   17718:	cmp	r0, #0
   1771c:	bne	1772c <__assert_fail@plt+0x6250>
   17720:	movw	r0, #0
   17724:	str	r0, [fp, #-4]
   17728:	b	1778c <__assert_fail@plt+0x62b0>
   1772c:	ldr	r0, [sp, #8]
   17730:	ldr	r0, [r0]
   17734:	str	r0, [sp, #4]
   17738:	ldr	r0, [sp, #4]
   1773c:	ldr	r1, [sp, #8]
   17740:	ldr	r1, [r1, #4]
   17744:	cmp	r0, r1
   17748:	bcc	17750 <__assert_fail@plt+0x6274>
   1774c:	bl	11494 <abort@plt>
   17750:	ldr	r0, [sp, #4]
   17754:	ldr	r0, [r0]
   17758:	movw	r1, #0
   1775c:	cmp	r0, r1
   17760:	beq	17774 <__assert_fail@plt+0x6298>
   17764:	ldr	r0, [sp, #4]
   17768:	ldr	r0, [r0]
   1776c:	str	r0, [fp, #-4]
   17770:	b	1778c <__assert_fail@plt+0x62b0>
   17774:	b	17778 <__assert_fail@plt+0x629c>
   17778:	b	1777c <__assert_fail@plt+0x62a0>
   1777c:	ldr	r0, [sp, #4]
   17780:	add	r0, r0, #8
   17784:	str	r0, [sp, #4]
   17788:	b	17738 <__assert_fail@plt+0x625c>
   1778c:	ldr	r0, [fp, #-4]
   17790:	mov	sp, fp
   17794:	pop	{fp, pc}
   17798:	push	{fp, lr}
   1779c:	mov	fp, sp
   177a0:	sub	sp, sp, #24
   177a4:	str	r0, [fp, #-8]
   177a8:	str	r1, [sp, #12]
   177ac:	ldr	r0, [fp, #-8]
   177b0:	ldr	r1, [sp, #12]
   177b4:	bl	17690 <__assert_fail@plt+0x61b4>
   177b8:	str	r0, [sp, #8]
   177bc:	ldr	r0, [sp, #8]
   177c0:	str	r0, [sp, #4]
   177c4:	ldr	r0, [sp, #4]
   177c8:	ldr	r0, [r0]
   177cc:	ldr	r1, [sp, #12]
   177d0:	cmp	r0, r1
   177d4:	bne	17800 <__assert_fail@plt+0x6324>
   177d8:	ldr	r0, [sp, #4]
   177dc:	ldr	r0, [r0, #4]
   177e0:	movw	r1, #0
   177e4:	cmp	r0, r1
   177e8:	beq	17800 <__assert_fail@plt+0x6324>
   177ec:	ldr	r0, [sp, #4]
   177f0:	ldr	r0, [r0, #4]
   177f4:	ldr	r0, [r0]
   177f8:	str	r0, [fp, #-4]
   177fc:	b	1786c <__assert_fail@plt+0x6390>
   17800:	ldr	r0, [sp, #4]
   17804:	ldr	r0, [r0, #4]
   17808:	str	r0, [sp, #4]
   1780c:	ldr	r0, [sp, #4]
   17810:	movw	r1, #0
   17814:	cmp	r0, r1
   17818:	bne	177c4 <__assert_fail@plt+0x62e8>
   1781c:	b	17820 <__assert_fail@plt+0x6344>
   17820:	ldr	r0, [sp, #8]
   17824:	add	r0, r0, #8
   17828:	str	r0, [sp, #8]
   1782c:	ldr	r1, [fp, #-8]
   17830:	ldr	r1, [r1, #4]
   17834:	cmp	r0, r1
   17838:	bcs	17864 <__assert_fail@plt+0x6388>
   1783c:	ldr	r0, [sp, #8]
   17840:	ldr	r0, [r0]
   17844:	movw	r1, #0
   17848:	cmp	r0, r1
   1784c:	beq	17860 <__assert_fail@plt+0x6384>
   17850:	ldr	r0, [sp, #8]
   17854:	ldr	r0, [r0]
   17858:	str	r0, [fp, #-4]
   1785c:	b	1786c <__assert_fail@plt+0x6390>
   17860:	b	17820 <__assert_fail@plt+0x6344>
   17864:	movw	r0, #0
   17868:	str	r0, [fp, #-4]
   1786c:	ldr	r0, [fp, #-4]
   17870:	mov	sp, fp
   17874:	pop	{fp, pc}
   17878:	sub	sp, sp, #28
   1787c:	str	r0, [sp, #20]
   17880:	str	r1, [sp, #16]
   17884:	str	r2, [sp, #12]
   17888:	movw	r0, #0
   1788c:	str	r0, [sp, #8]
   17890:	ldr	r0, [sp, #20]
   17894:	ldr	r0, [r0]
   17898:	str	r0, [sp, #4]
   1789c:	ldr	r0, [sp, #4]
   178a0:	ldr	r1, [sp, #20]
   178a4:	ldr	r1, [r1, #4]
   178a8:	cmp	r0, r1
   178ac:	bcs	17940 <__assert_fail@plt+0x6464>
   178b0:	ldr	r0, [sp, #4]
   178b4:	ldr	r0, [r0]
   178b8:	movw	r1, #0
   178bc:	cmp	r0, r1
   178c0:	beq	1792c <__assert_fail@plt+0x6450>
   178c4:	ldr	r0, [sp, #4]
   178c8:	str	r0, [sp]
   178cc:	ldr	r0, [sp]
   178d0:	movw	r1, #0
   178d4:	cmp	r0, r1
   178d8:	beq	17928 <__assert_fail@plt+0x644c>
   178dc:	ldr	r0, [sp, #8]
   178e0:	ldr	r1, [sp, #12]
   178e4:	cmp	r0, r1
   178e8:	bcc	178f8 <__assert_fail@plt+0x641c>
   178ec:	ldr	r0, [sp, #8]
   178f0:	str	r0, [sp, #24]
   178f4:	b	17948 <__assert_fail@plt+0x646c>
   178f8:	ldr	r0, [sp]
   178fc:	ldr	r0, [r0]
   17900:	ldr	r1, [sp, #16]
   17904:	ldr	r2, [sp, #8]
   17908:	add	r3, r2, #1
   1790c:	str	r3, [sp, #8]
   17910:	add	r1, r1, r2, lsl #2
   17914:	str	r0, [r1]
   17918:	ldr	r0, [sp]
   1791c:	ldr	r0, [r0, #4]
   17920:	str	r0, [sp]
   17924:	b	178cc <__assert_fail@plt+0x63f0>
   17928:	b	1792c <__assert_fail@plt+0x6450>
   1792c:	b	17930 <__assert_fail@plt+0x6454>
   17930:	ldr	r0, [sp, #4]
   17934:	add	r0, r0, #8
   17938:	str	r0, [sp, #4]
   1793c:	b	1789c <__assert_fail@plt+0x63c0>
   17940:	ldr	r0, [sp, #8]
   17944:	str	r0, [sp, #24]
   17948:	ldr	r0, [sp, #24]
   1794c:	add	sp, sp, #28
   17950:	bx	lr
   17954:	push	{fp, lr}
   17958:	mov	fp, sp
   1795c:	sub	sp, sp, #32
   17960:	str	r0, [fp, #-8]
   17964:	str	r1, [fp, #-12]
   17968:	str	r2, [sp, #16]
   1796c:	movw	r0, #0
   17970:	str	r0, [sp, #12]
   17974:	ldr	r0, [fp, #-8]
   17978:	ldr	r0, [r0]
   1797c:	str	r0, [sp, #8]
   17980:	ldr	r0, [sp, #8]
   17984:	ldr	r1, [fp, #-8]
   17988:	ldr	r1, [r1, #4]
   1798c:	cmp	r0, r1
   17990:	bcs	17a2c <__assert_fail@plt+0x6550>
   17994:	ldr	r0, [sp, #8]
   17998:	ldr	r0, [r0]
   1799c:	movw	r1, #0
   179a0:	cmp	r0, r1
   179a4:	beq	17a18 <__assert_fail@plt+0x653c>
   179a8:	ldr	r0, [sp, #8]
   179ac:	str	r0, [sp, #4]
   179b0:	ldr	r0, [sp, #4]
   179b4:	movw	r1, #0
   179b8:	cmp	r0, r1
   179bc:	beq	17a14 <__assert_fail@plt+0x6538>
   179c0:	ldr	r0, [fp, #-12]
   179c4:	ldr	r1, [sp, #4]
   179c8:	ldr	r1, [r1]
   179cc:	ldr	r2, [sp, #16]
   179d0:	str	r0, [sp]
   179d4:	mov	r0, r1
   179d8:	mov	r1, r2
   179dc:	ldr	r2, [sp]
   179e0:	blx	r2
   179e4:	tst	r0, #1
   179e8:	bne	179f8 <__assert_fail@plt+0x651c>
   179ec:	ldr	r0, [sp, #12]
   179f0:	str	r0, [fp, #-4]
   179f4:	b	17a34 <__assert_fail@plt+0x6558>
   179f8:	ldr	r0, [sp, #12]
   179fc:	add	r0, r0, #1
   17a00:	str	r0, [sp, #12]
   17a04:	ldr	r0, [sp, #4]
   17a08:	ldr	r0, [r0, #4]
   17a0c:	str	r0, [sp, #4]
   17a10:	b	179b0 <__assert_fail@plt+0x64d4>
   17a14:	b	17a18 <__assert_fail@plt+0x653c>
   17a18:	b	17a1c <__assert_fail@plt+0x6540>
   17a1c:	ldr	r0, [sp, #8]
   17a20:	add	r0, r0, #8
   17a24:	str	r0, [sp, #8]
   17a28:	b	17980 <__assert_fail@plt+0x64a4>
   17a2c:	ldr	r0, [sp, #12]
   17a30:	str	r0, [fp, #-4]
   17a34:	ldr	r0, [fp, #-4]
   17a38:	mov	sp, fp
   17a3c:	pop	{fp, pc}
   17a40:	sub	sp, sp, #16
   17a44:	str	r0, [sp, #12]
   17a48:	str	r1, [sp, #8]
   17a4c:	movw	r0, #0
   17a50:	str	r0, [sp, #4]
   17a54:	ldr	r0, [sp, #12]
   17a58:	ldrb	r0, [r0]
   17a5c:	strb	r0, [sp, #3]
   17a60:	sxtb	r0, r0
   17a64:	cmp	r0, #0
   17a68:	beq	17a9c <__assert_fail@plt+0x65c0>
   17a6c:	ldr	r0, [sp, #4]
   17a70:	rsb	r0, r0, r0, lsl #5
   17a74:	ldrb	r1, [sp, #3]
   17a78:	add	r0, r0, r1
   17a7c:	ldr	r1, [sp, #8]
   17a80:	udiv	r2, r0, r1
   17a84:	mls	r0, r2, r1, r0
   17a88:	str	r0, [sp, #4]
   17a8c:	ldr	r0, [sp, #12]
   17a90:	add	r0, r0, #1
   17a94:	str	r0, [sp, #12]
   17a98:	b	17a54 <__assert_fail@plt+0x6578>
   17a9c:	ldr	r0, [sp, #4]
   17aa0:	add	sp, sp, #16
   17aa4:	bx	lr
   17aa8:	push	{fp, lr}
   17aac:	mov	fp, sp
   17ab0:	sub	sp, sp, #8
   17ab4:	movw	r1, #21032	; 0x5228
   17ab8:	movt	r1, #2
   17abc:	str	r0, [sp, #4]
   17ac0:	ldr	r0, [sp, #4]
   17ac4:	movw	r2, #20
   17ac8:	bl	1123c <memcpy@plt>
   17acc:	mov	sp, fp
   17ad0:	pop	{fp, pc}
   17ad4:	push	{fp, lr}
   17ad8:	mov	fp, sp
   17adc:	sub	sp, sp, #24
   17ae0:	ldr	ip, [fp, #8]
   17ae4:	str	r0, [fp, #-8]
   17ae8:	str	r1, [sp, #12]
   17aec:	str	r2, [sp, #8]
   17af0:	str	r3, [sp, #4]
   17af4:	ldr	r0, [sp, #8]
   17af8:	movw	r1, #0
   17afc:	cmp	r0, r1
   17b00:	bne	17b10 <__assert_fail@plt+0x6634>
   17b04:	movw	r0, #31848	; 0x7c68
   17b08:	movt	r0, #1
   17b0c:	str	r0, [sp, #8]
   17b10:	ldr	r0, [sp, #4]
   17b14:	movw	r1, #0
   17b18:	cmp	r0, r1
   17b1c:	bne	17b2c <__assert_fail@plt+0x6650>
   17b20:	movw	r0, #31908	; 0x7ca4
   17b24:	movt	r0, #1
   17b28:	str	r0, [sp, #4]
   17b2c:	movw	r0, #40	; 0x28
   17b30:	bl	2137c <__assert_fail@plt+0xfea0>
   17b34:	str	r0, [sp]
   17b38:	ldr	r0, [sp]
   17b3c:	movw	r1, #0
   17b40:	cmp	r0, r1
   17b44:	bne	17b54 <__assert_fail@plt+0x6678>
   17b48:	movw	r0, #0
   17b4c:	str	r0, [fp, #-4]
   17b50:	b	17c5c <__assert_fail@plt+0x6780>
   17b54:	ldr	r0, [sp, #12]
   17b58:	movw	r1, #0
   17b5c:	cmp	r0, r1
   17b60:	bne	17b70 <__assert_fail@plt+0x6694>
   17b64:	movw	r0, #21032	; 0x5228
   17b68:	movt	r0, #2
   17b6c:	str	r0, [sp, #12]
   17b70:	ldr	r0, [sp, #12]
   17b74:	ldr	r1, [sp]
   17b78:	str	r0, [r1, #20]
   17b7c:	ldr	r0, [sp]
   17b80:	bl	17cd0 <__assert_fail@plt+0x67f4>
   17b84:	tst	r0, #1
   17b88:	bne	17b90 <__assert_fail@plt+0x66b4>
   17b8c:	b	17c4c <__assert_fail@plt+0x6770>
   17b90:	ldr	r0, [fp, #-8]
   17b94:	ldr	r1, [sp, #12]
   17b98:	bl	17e24 <__assert_fail@plt+0x6948>
   17b9c:	ldr	r1, [sp]
   17ba0:	str	r0, [r1, #8]
   17ba4:	ldr	r0, [sp]
   17ba8:	ldr	r0, [r0, #8]
   17bac:	cmp	r0, #0
   17bb0:	bne	17bb8 <__assert_fail@plt+0x66dc>
   17bb4:	b	17c4c <__assert_fail@plt+0x6770>
   17bb8:	ldr	r0, [sp]
   17bbc:	ldr	r0, [r0, #8]
   17bc0:	movw	r1, #8
   17bc4:	bl	212e0 <__assert_fail@plt+0xfe04>
   17bc8:	ldr	r1, [sp]
   17bcc:	str	r0, [r1]
   17bd0:	ldr	r0, [sp]
   17bd4:	ldr	r0, [r0]
   17bd8:	movw	r1, #0
   17bdc:	cmp	r0, r1
   17be0:	bne	17be8 <__assert_fail@plt+0x670c>
   17be4:	b	17c4c <__assert_fail@plt+0x6770>
   17be8:	ldr	r0, [sp]
   17bec:	ldr	r1, [r0]
   17bf0:	ldr	r0, [r0, #8]
   17bf4:	add	r0, r1, r0, lsl #3
   17bf8:	ldr	r1, [sp]
   17bfc:	str	r0, [r1, #4]
   17c00:	ldr	r0, [sp]
   17c04:	movw	r1, #0
   17c08:	str	r1, [r0, #12]
   17c0c:	ldr	r0, [sp]
   17c10:	str	r1, [r0, #16]
   17c14:	ldr	r0, [sp, #8]
   17c18:	ldr	r2, [sp]
   17c1c:	str	r0, [r2, #24]
   17c20:	ldr	r0, [sp, #4]
   17c24:	ldr	r2, [sp]
   17c28:	str	r0, [r2, #28]
   17c2c:	ldr	r0, [fp, #8]
   17c30:	ldr	r2, [sp]
   17c34:	str	r0, [r2, #32]
   17c38:	ldr	r0, [sp]
   17c3c:	str	r1, [r0, #36]	; 0x24
   17c40:	ldr	r0, [sp]
   17c44:	str	r0, [fp, #-4]
   17c48:	b	17c5c <__assert_fail@plt+0x6780>
   17c4c:	ldr	r0, [sp]
   17c50:	bl	1382c <__assert_fail@plt+0x2350>
   17c54:	movw	r0, #0
   17c58:	str	r0, [fp, #-4]
   17c5c:	ldr	r0, [fp, #-4]
   17c60:	mov	sp, fp
   17c64:	pop	{fp, pc}
   17c68:	push	{fp, lr}
   17c6c:	mov	fp, sp
   17c70:	sub	sp, sp, #16
   17c74:	str	r0, [fp, #-4]
   17c78:	str	r1, [sp, #8]
   17c7c:	ldr	r0, [fp, #-4]
   17c80:	mov	r1, #3
   17c84:	bl	21630 <__assert_fail@plt+0x10154>
   17c88:	str	r0, [sp, #4]
   17c8c:	ldr	r0, [sp, #4]
   17c90:	ldr	r1, [sp, #8]
   17c94:	udiv	r2, r0, r1
   17c98:	mls	r0, r2, r1, r0
   17c9c:	mov	sp, fp
   17ca0:	pop	{fp, pc}
   17ca4:	sub	sp, sp, #8
   17ca8:	str	r0, [sp, #4]
   17cac:	str	r1, [sp]
   17cb0:	ldr	r0, [sp, #4]
   17cb4:	ldr	r1, [sp]
   17cb8:	cmp	r0, r1
   17cbc:	movw	r0, #0
   17cc0:	moveq	r0, #1
   17cc4:	and	r0, r0, #1
   17cc8:	add	sp, sp, #8
   17ccc:	bx	lr
   17cd0:	sub	sp, sp, #16
   17cd4:	str	r0, [sp, #8]
   17cd8:	ldr	r0, [sp, #8]
   17cdc:	ldr	r0, [r0, #20]
   17ce0:	str	r0, [sp, #4]
   17ce4:	ldr	r0, [sp, #4]
   17ce8:	movw	r1, #21032	; 0x5228
   17cec:	movt	r1, #2
   17cf0:	cmp	r0, r1
   17cf4:	bne	17d08 <__assert_fail@plt+0x682c>
   17cf8:	movw	r0, #1
   17cfc:	and	r0, r0, #1
   17d00:	strb	r0, [sp, #15]
   17d04:	b	17e0c <__assert_fail@plt+0x6930>
   17d08:	vldr	s0, [pc, #268]	; 17e1c <__assert_fail@plt+0x6940>
   17d0c:	vstr	s0, [sp]
   17d10:	vldr	s0, [sp]
   17d14:	ldr	r0, [sp, #4]
   17d18:	vldr	s2, [r0, #8]
   17d1c:	vcmpe.f32	s0, s2
   17d20:	vmrs	APSR_nzcv, fpscr
   17d24:	bpl	17df0 <__assert_fail@plt+0x6914>
   17d28:	ldr	r0, [sp, #4]
   17d2c:	vldr	s0, [r0, #8]
   17d30:	vldr	s2, [sp]
   17d34:	vmov.f32	s4, #112	; 0x3f800000  1.0
   17d38:	vsub.f32	s2, s4, s2
   17d3c:	vcmpe.f32	s0, s2
   17d40:	vmrs	APSR_nzcv, fpscr
   17d44:	bpl	17df0 <__assert_fail@plt+0x6914>
   17d48:	vldr	s0, [sp]
   17d4c:	vmov.f32	s2, #112	; 0x3f800000  1.0
   17d50:	vadd.f32	s0, s2, s0
   17d54:	ldr	r0, [sp, #4]
   17d58:	vldr	s2, [r0, #12]
   17d5c:	vcmpe.f32	s0, s2
   17d60:	vmrs	APSR_nzcv, fpscr
   17d64:	bpl	17df0 <__assert_fail@plt+0x6914>
   17d68:	vldr	s0, [pc, #176]	; 17e20 <__assert_fail@plt+0x6944>
   17d6c:	ldr	r0, [sp, #4]
   17d70:	vldr	s2, [r0]
   17d74:	vcmpe.f32	s0, s2
   17d78:	vmrs	APSR_nzcv, fpscr
   17d7c:	bhi	17df0 <__assert_fail@plt+0x6914>
   17d80:	ldr	r0, [sp, #4]
   17d84:	vldr	s0, [r0]
   17d88:	vldr	s2, [sp]
   17d8c:	vadd.f32	s0, s0, s2
   17d90:	ldr	r0, [sp, #4]
   17d94:	vldr	s2, [r0, #4]
   17d98:	vcmpe.f32	s0, s2
   17d9c:	vmrs	APSR_nzcv, fpscr
   17da0:	bpl	17df0 <__assert_fail@plt+0x6914>
   17da4:	ldr	r0, [sp, #4]
   17da8:	vldr	s0, [r0, #4]
   17dac:	vmov.f32	s2, #112	; 0x3f800000  1.0
   17db0:	vcmpe.f32	s0, s2
   17db4:	vmrs	APSR_nzcv, fpscr
   17db8:	bhi	17df0 <__assert_fail@plt+0x6914>
   17dbc:	ldr	r0, [sp, #4]
   17dc0:	vldr	s0, [r0]
   17dc4:	vldr	s2, [sp]
   17dc8:	vadd.f32	s0, s0, s2
   17dcc:	ldr	r0, [sp, #4]
   17dd0:	vldr	s2, [r0, #8]
   17dd4:	vcmpe.f32	s0, s2
   17dd8:	vmrs	APSR_nzcv, fpscr
   17ddc:	bpl	17df0 <__assert_fail@plt+0x6914>
   17de0:	movw	r0, #1
   17de4:	and	r0, r0, #1
   17de8:	strb	r0, [sp, #15]
   17dec:	b	17e0c <__assert_fail@plt+0x6930>
   17df0:	ldr	r0, [sp, #8]
   17df4:	movw	r1, #21032	; 0x5228
   17df8:	movt	r1, #2
   17dfc:	str	r1, [r0, #20]
   17e00:	movw	r0, #0
   17e04:	and	r0, r0, #1
   17e08:	strb	r0, [sp, #15]
   17e0c:	ldrb	r0, [sp, #15]
   17e10:	and	r0, r0, #1
   17e14:	add	sp, sp, #16
   17e18:	bx	lr
   17e1c:	stclcc	12, cr12, [ip, #820]	; 0x334
   17e20:	andeq	r0, r0, r0
   17e24:	push	{fp, lr}
   17e28:	mov	fp, sp
   17e2c:	sub	sp, sp, #16
   17e30:	str	r0, [sp, #8]
   17e34:	str	r1, [sp, #4]
   17e38:	ldr	r0, [sp, #4]
   17e3c:	ldrb	r0, [r0, #16]
   17e40:	tst	r0, #1
   17e44:	bne	17e94 <__assert_fail@plt+0x69b8>
   17e48:	vldr	s0, [pc, #128]	; 17ed0 <__assert_fail@plt+0x69f4>
   17e4c:	ldr	r0, [sp, #8]
   17e50:	vmov	s2, r0
   17e54:	vcvt.f32.u32	s2, s2
   17e58:	ldr	r0, [sp, #4]
   17e5c:	vldr	s4, [r0, #8]
   17e60:	vdiv.f32	s2, s2, s4
   17e64:	vstr	s2, [sp]
   17e68:	vldr	s2, [sp]
   17e6c:	vcmpe.f32	s0, s2
   17e70:	vmrs	APSR_nzcv, fpscr
   17e74:	bhi	17e84 <__assert_fail@plt+0x69a8>
   17e78:	movw	r0, #0
   17e7c:	str	r0, [fp, #-4]
   17e80:	b	17ec4 <__assert_fail@plt+0x69e8>
   17e84:	vldr	s0, [sp]
   17e88:	vcvt.u32.f32	s0, s0
   17e8c:	vmov	r0, s0
   17e90:	str	r0, [sp, #8]
   17e94:	ldr	r0, [sp, #8]
   17e98:	bl	18d94 <__assert_fail@plt+0x78b8>
   17e9c:	ldr	r1, [pc, #48]	; 17ed4 <__assert_fail@plt+0x69f8>
   17ea0:	str	r0, [sp, #8]
   17ea4:	ldr	r0, [sp, #8]
   17ea8:	cmp	r1, r0
   17eac:	bcs	17ebc <__assert_fail@plt+0x69e0>
   17eb0:	movw	r0, #0
   17eb4:	str	r0, [fp, #-4]
   17eb8:	b	17ec4 <__assert_fail@plt+0x69e8>
   17ebc:	ldr	r0, [sp, #8]
   17ec0:	str	r0, [fp, #-4]
   17ec4:	ldr	r0, [fp, #-4]
   17ec8:	mov	sp, fp
   17ecc:	pop	{fp, pc}
   17ed0:	svcmi	0x00800000
   17ed4:	svcne	0x00ffffff
   17ed8:	push	{fp, lr}
   17edc:	mov	fp, sp
   17ee0:	sub	sp, sp, #24
   17ee4:	str	r0, [fp, #-4]
   17ee8:	ldr	r0, [fp, #-4]
   17eec:	ldr	r0, [r0]
   17ef0:	str	r0, [fp, #-8]
   17ef4:	ldr	r0, [fp, #-8]
   17ef8:	ldr	r1, [fp, #-4]
   17efc:	ldr	r1, [r1, #4]
   17f00:	cmp	r0, r1
   17f04:	bcs	18008 <__assert_fail@plt+0x6b2c>
   17f08:	ldr	r0, [fp, #-8]
   17f0c:	ldr	r0, [r0]
   17f10:	movw	r1, #0
   17f14:	cmp	r0, r1
   17f18:	beq	17ff4 <__assert_fail@plt+0x6b18>
   17f1c:	ldr	r0, [fp, #-8]
   17f20:	ldr	r0, [r0, #4]
   17f24:	str	r0, [sp, #12]
   17f28:	ldr	r0, [sp, #12]
   17f2c:	movw	r1, #0
   17f30:	cmp	r0, r1
   17f34:	beq	17fac <__assert_fail@plt+0x6ad0>
   17f38:	ldr	r0, [fp, #-4]
   17f3c:	ldr	r0, [r0, #32]
   17f40:	movw	r1, #0
   17f44:	cmp	r0, r1
   17f48:	beq	17f6c <__assert_fail@plt+0x6a90>
   17f4c:	ldr	r0, [fp, #-4]
   17f50:	ldr	r0, [r0, #32]
   17f54:	ldr	r1, [sp, #12]
   17f58:	ldr	r1, [r1]
   17f5c:	str	r0, [sp, #4]
   17f60:	mov	r0, r1
   17f64:	ldr	r1, [sp, #4]
   17f68:	blx	r1
   17f6c:	ldr	r0, [sp, #12]
   17f70:	movw	r1, #0
   17f74:	str	r1, [r0]
   17f78:	ldr	r0, [sp, #12]
   17f7c:	ldr	r0, [r0, #4]
   17f80:	str	r0, [sp, #8]
   17f84:	ldr	r0, [fp, #-4]
   17f88:	ldr	r0, [r0, #36]	; 0x24
   17f8c:	ldr	r1, [sp, #12]
   17f90:	str	r0, [r1, #4]
   17f94:	ldr	r0, [sp, #12]
   17f98:	ldr	r1, [fp, #-4]
   17f9c:	str	r0, [r1, #36]	; 0x24
   17fa0:	ldr	r0, [sp, #8]
   17fa4:	str	r0, [sp, #12]
   17fa8:	b	17f28 <__assert_fail@plt+0x6a4c>
   17fac:	ldr	r0, [fp, #-4]
   17fb0:	ldr	r0, [r0, #32]
   17fb4:	movw	r1, #0
   17fb8:	cmp	r0, r1
   17fbc:	beq	17fe0 <__assert_fail@plt+0x6b04>
   17fc0:	ldr	r0, [fp, #-4]
   17fc4:	ldr	r0, [r0, #32]
   17fc8:	ldr	r1, [fp, #-8]
   17fcc:	ldr	r1, [r1]
   17fd0:	str	r0, [sp]
   17fd4:	mov	r0, r1
   17fd8:	ldr	r1, [sp]
   17fdc:	blx	r1
   17fe0:	ldr	r0, [fp, #-8]
   17fe4:	movw	r1, #0
   17fe8:	str	r1, [r0]
   17fec:	ldr	r0, [fp, #-8]
   17ff0:	str	r1, [r0, #4]
   17ff4:	b	17ff8 <__assert_fail@plt+0x6b1c>
   17ff8:	ldr	r0, [fp, #-8]
   17ffc:	add	r0, r0, #8
   18000:	str	r0, [fp, #-8]
   18004:	b	17ef4 <__assert_fail@plt+0x6a18>
   18008:	ldr	r0, [fp, #-4]
   1800c:	movw	r1, #0
   18010:	str	r1, [r0, #12]
   18014:	ldr	r0, [fp, #-4]
   18018:	str	r1, [r0, #16]
   1801c:	mov	sp, fp
   18020:	pop	{fp, pc}
   18024:	push	{fp, lr}
   18028:	mov	fp, sp
   1802c:	sub	sp, sp, #24
   18030:	str	r0, [fp, #-4]
   18034:	ldr	r0, [fp, #-4]
   18038:	ldr	r0, [r0, #32]
   1803c:	movw	r1, #0
   18040:	cmp	r0, r1
   18044:	beq	180f0 <__assert_fail@plt+0x6c14>
   18048:	ldr	r0, [fp, #-4]
   1804c:	ldr	r0, [r0, #16]
   18050:	cmp	r0, #0
   18054:	beq	180f0 <__assert_fail@plt+0x6c14>
   18058:	ldr	r0, [fp, #-4]
   1805c:	ldr	r0, [r0]
   18060:	str	r0, [fp, #-8]
   18064:	ldr	r0, [fp, #-8]
   18068:	ldr	r1, [fp, #-4]
   1806c:	ldr	r1, [r1, #4]
   18070:	cmp	r0, r1
   18074:	bcs	180ec <__assert_fail@plt+0x6c10>
   18078:	ldr	r0, [fp, #-8]
   1807c:	ldr	r0, [r0]
   18080:	movw	r1, #0
   18084:	cmp	r0, r1
   18088:	beq	180d8 <__assert_fail@plt+0x6bfc>
   1808c:	ldr	r0, [fp, #-8]
   18090:	str	r0, [sp, #12]
   18094:	ldr	r0, [sp, #12]
   18098:	movw	r1, #0
   1809c:	cmp	r0, r1
   180a0:	beq	180d4 <__assert_fail@plt+0x6bf8>
   180a4:	ldr	r0, [fp, #-4]
   180a8:	ldr	r0, [r0, #32]
   180ac:	ldr	r1, [sp, #12]
   180b0:	ldr	r1, [r1]
   180b4:	str	r0, [sp, #4]
   180b8:	mov	r0, r1
   180bc:	ldr	r1, [sp, #4]
   180c0:	blx	r1
   180c4:	ldr	r0, [sp, #12]
   180c8:	ldr	r0, [r0, #4]
   180cc:	str	r0, [sp, #12]
   180d0:	b	18094 <__assert_fail@plt+0x6bb8>
   180d4:	b	180d8 <__assert_fail@plt+0x6bfc>
   180d8:	b	180dc <__assert_fail@plt+0x6c00>
   180dc:	ldr	r0, [fp, #-8]
   180e0:	add	r0, r0, #8
   180e4:	str	r0, [fp, #-8]
   180e8:	b	18064 <__assert_fail@plt+0x6b88>
   180ec:	b	180f0 <__assert_fail@plt+0x6c14>
   180f0:	ldr	r0, [fp, #-4]
   180f4:	ldr	r0, [r0]
   180f8:	str	r0, [fp, #-8]
   180fc:	ldr	r0, [fp, #-8]
   18100:	ldr	r1, [fp, #-4]
   18104:	ldr	r1, [r1, #4]
   18108:	cmp	r0, r1
   1810c:	bcs	18160 <__assert_fail@plt+0x6c84>
   18110:	ldr	r0, [fp, #-8]
   18114:	ldr	r0, [r0, #4]
   18118:	str	r0, [sp, #12]
   1811c:	ldr	r0, [sp, #12]
   18120:	movw	r1, #0
   18124:	cmp	r0, r1
   18128:	beq	1814c <__assert_fail@plt+0x6c70>
   1812c:	ldr	r0, [sp, #12]
   18130:	ldr	r0, [r0, #4]
   18134:	str	r0, [sp, #8]
   18138:	ldr	r0, [sp, #12]
   1813c:	bl	1382c <__assert_fail@plt+0x2350>
   18140:	ldr	r0, [sp, #8]
   18144:	str	r0, [sp, #12]
   18148:	b	1811c <__assert_fail@plt+0x6c40>
   1814c:	b	18150 <__assert_fail@plt+0x6c74>
   18150:	ldr	r0, [fp, #-8]
   18154:	add	r0, r0, #8
   18158:	str	r0, [fp, #-8]
   1815c:	b	180fc <__assert_fail@plt+0x6c20>
   18160:	ldr	r0, [fp, #-4]
   18164:	ldr	r0, [r0, #36]	; 0x24
   18168:	str	r0, [sp, #12]
   1816c:	ldr	r0, [sp, #12]
   18170:	movw	r1, #0
   18174:	cmp	r0, r1
   18178:	beq	1819c <__assert_fail@plt+0x6cc0>
   1817c:	ldr	r0, [sp, #12]
   18180:	ldr	r0, [r0, #4]
   18184:	str	r0, [sp, #8]
   18188:	ldr	r0, [sp, #12]
   1818c:	bl	1382c <__assert_fail@plt+0x2350>
   18190:	ldr	r0, [sp, #8]
   18194:	str	r0, [sp, #12]
   18198:	b	1816c <__assert_fail@plt+0x6c90>
   1819c:	ldr	r0, [fp, #-4]
   181a0:	ldr	r0, [r0]
   181a4:	bl	1382c <__assert_fail@plt+0x2350>
   181a8:	ldr	r0, [fp, #-4]
   181ac:	bl	1382c <__assert_fail@plt+0x2350>
   181b0:	mov	sp, fp
   181b4:	pop	{fp, pc}
   181b8:	push	{fp, lr}
   181bc:	mov	fp, sp
   181c0:	sub	sp, sp, #64	; 0x40
   181c4:	str	r0, [fp, #-8]
   181c8:	str	r1, [fp, #-12]
   181cc:	ldr	r0, [fp, #-12]
   181d0:	ldr	r1, [fp, #-8]
   181d4:	ldr	r1, [r1, #20]
   181d8:	bl	17e24 <__assert_fail@plt+0x6948>
   181dc:	str	r0, [sp, #4]
   181e0:	ldr	r0, [sp, #4]
   181e4:	cmp	r0, #0
   181e8:	bne	181fc <__assert_fail@plt+0x6d20>
   181ec:	movw	r0, #0
   181f0:	and	r0, r0, #1
   181f4:	strb	r0, [fp, #-1]
   181f8:	b	183d4 <__assert_fail@plt+0x6ef8>
   181fc:	ldr	r0, [sp, #4]
   18200:	ldr	r1, [fp, #-8]
   18204:	ldr	r1, [r1, #8]
   18208:	cmp	r0, r1
   1820c:	bne	18220 <__assert_fail@plt+0x6d44>
   18210:	movw	r0, #1
   18214:	and	r0, r0, #1
   18218:	strb	r0, [fp, #-1]
   1821c:	b	183d4 <__assert_fail@plt+0x6ef8>
   18220:	add	r0, sp, #12
   18224:	str	r0, [sp, #8]
   18228:	ldr	r0, [sp, #4]
   1822c:	movw	r1, #8
   18230:	bl	212e0 <__assert_fail@plt+0xfe04>
   18234:	ldr	r1, [sp, #8]
   18238:	str	r0, [r1]
   1823c:	ldr	r0, [sp, #8]
   18240:	ldr	r0, [r0]
   18244:	movw	r1, #0
   18248:	cmp	r0, r1
   1824c:	bne	18260 <__assert_fail@plt+0x6d84>
   18250:	movw	r0, #0
   18254:	and	r0, r0, #1
   18258:	strb	r0, [fp, #-1]
   1825c:	b	183d4 <__assert_fail@plt+0x6ef8>
   18260:	ldr	r0, [sp, #4]
   18264:	ldr	r1, [sp, #8]
   18268:	str	r0, [r1, #8]
   1826c:	ldr	r0, [sp, #8]
   18270:	ldr	r0, [r0]
   18274:	ldr	r1, [sp, #4]
   18278:	add	r0, r0, r1, lsl #3
   1827c:	ldr	r1, [sp, #8]
   18280:	str	r0, [r1, #4]
   18284:	ldr	r0, [sp, #8]
   18288:	movw	r1, #0
   1828c:	str	r1, [r0, #12]
   18290:	ldr	r0, [sp, #8]
   18294:	str	r1, [r0, #16]
   18298:	ldr	r0, [fp, #-8]
   1829c:	ldr	r0, [r0, #20]
   182a0:	ldr	r1, [sp, #8]
   182a4:	str	r0, [r1, #20]
   182a8:	ldr	r0, [fp, #-8]
   182ac:	ldr	r0, [r0, #24]
   182b0:	ldr	r1, [sp, #8]
   182b4:	str	r0, [r1, #24]
   182b8:	ldr	r0, [fp, #-8]
   182bc:	ldr	r0, [r0, #28]
   182c0:	ldr	r1, [sp, #8]
   182c4:	str	r0, [r1, #28]
   182c8:	ldr	r0, [fp, #-8]
   182cc:	ldr	r0, [r0, #32]
   182d0:	ldr	r1, [sp, #8]
   182d4:	str	r0, [r1, #32]
   182d8:	ldr	r0, [fp, #-8]
   182dc:	ldr	r0, [r0, #36]	; 0x24
   182e0:	ldr	r1, [sp, #8]
   182e4:	str	r0, [r1, #36]	; 0x24
   182e8:	ldr	r0, [sp, #8]
   182ec:	ldr	r1, [fp, #-8]
   182f0:	movw	r2, #0
   182f4:	and	r2, r2, #1
   182f8:	bl	183e4 <__assert_fail@plt+0x6f08>
   182fc:	tst	r0, #1
   18300:	beq	18370 <__assert_fail@plt+0x6e94>
   18304:	ldr	r0, [fp, #-8]
   18308:	ldr	r0, [r0]
   1830c:	bl	1382c <__assert_fail@plt+0x2350>
   18310:	ldr	r0, [sp, #8]
   18314:	ldr	r0, [r0]
   18318:	ldr	r1, [fp, #-8]
   1831c:	str	r0, [r1]
   18320:	ldr	r0, [sp, #8]
   18324:	ldr	r0, [r0, #4]
   18328:	ldr	r1, [fp, #-8]
   1832c:	str	r0, [r1, #4]
   18330:	ldr	r0, [sp, #8]
   18334:	ldr	r0, [r0, #8]
   18338:	ldr	r1, [fp, #-8]
   1833c:	str	r0, [r1, #8]
   18340:	ldr	r0, [sp, #8]
   18344:	ldr	r0, [r0, #12]
   18348:	ldr	r1, [fp, #-8]
   1834c:	str	r0, [r1, #12]
   18350:	ldr	r0, [sp, #8]
   18354:	ldr	r0, [r0, #36]	; 0x24
   18358:	ldr	r1, [fp, #-8]
   1835c:	str	r0, [r1, #36]	; 0x24
   18360:	movw	r0, #1
   18364:	and	r0, r0, #1
   18368:	strb	r0, [fp, #-1]
   1836c:	b	183d4 <__assert_fail@plt+0x6ef8>
   18370:	ldr	r0, [sp, #8]
   18374:	ldr	r0, [r0, #36]	; 0x24
   18378:	ldr	r1, [fp, #-8]
   1837c:	str	r0, [r1, #36]	; 0x24
   18380:	ldr	r0, [fp, #-8]
   18384:	ldr	r1, [sp, #8]
   18388:	movw	r2, #1
   1838c:	and	r2, r2, #1
   18390:	bl	183e4 <__assert_fail@plt+0x6f08>
   18394:	tst	r0, #1
   18398:	beq	183b8 <__assert_fail@plt+0x6edc>
   1839c:	ldr	r0, [fp, #-8]
   183a0:	ldr	r1, [sp, #8]
   183a4:	movw	r2, #0
   183a8:	and	r2, r2, #1
   183ac:	bl	183e4 <__assert_fail@plt+0x6f08>
   183b0:	tst	r0, #1
   183b4:	bne	183bc <__assert_fail@plt+0x6ee0>
   183b8:	bl	11494 <abort@plt>
   183bc:	ldr	r0, [sp, #8]
   183c0:	ldr	r0, [r0]
   183c4:	bl	1382c <__assert_fail@plt+0x2350>
   183c8:	movw	r0, #0
   183cc:	and	r0, r0, #1
   183d0:	strb	r0, [fp, #-1]
   183d4:	ldrb	r0, [fp, #-1]
   183d8:	and	r0, r0, #1
   183dc:	mov	sp, fp
   183e0:	pop	{fp, pc}
   183e4:	push	{fp, lr}
   183e8:	mov	fp, sp
   183ec:	sub	sp, sp, #40	; 0x28
   183f0:	str	r0, [fp, #-8]
   183f4:	str	r1, [fp, #-12]
   183f8:	and	r0, r2, #1
   183fc:	strb	r0, [fp, #-13]
   18400:	ldr	r0, [fp, #-12]
   18404:	ldr	r0, [r0]
   18408:	str	r0, [sp, #20]
   1840c:	ldr	r0, [sp, #20]
   18410:	ldr	r1, [fp, #-12]
   18414:	ldr	r1, [r1, #4]
   18418:	cmp	r0, r1
   1841c:	bcs	185d8 <__assert_fail@plt+0x70fc>
   18420:	ldr	r0, [sp, #20]
   18424:	ldr	r0, [r0]
   18428:	movw	r1, #0
   1842c:	cmp	r0, r1
   18430:	beq	185c4 <__assert_fail@plt+0x70e8>
   18434:	ldr	r0, [sp, #20]
   18438:	ldr	r0, [r0, #4]
   1843c:	str	r0, [sp, #16]
   18440:	ldr	r0, [sp, #16]
   18444:	movw	r1, #0
   18448:	cmp	r0, r1
   1844c:	beq	184e4 <__assert_fail@plt+0x7008>
   18450:	ldr	r0, [sp, #16]
   18454:	ldr	r0, [r0]
   18458:	str	r0, [sp, #8]
   1845c:	ldr	r0, [fp, #-8]
   18460:	ldr	r1, [sp, #8]
   18464:	bl	17690 <__assert_fail@plt+0x61b4>
   18468:	str	r0, [sp, #4]
   1846c:	ldr	r0, [sp, #16]
   18470:	ldr	r0, [r0, #4]
   18474:	str	r0, [sp, #12]
   18478:	ldr	r0, [sp, #4]
   1847c:	ldr	r0, [r0]
   18480:	movw	r1, #0
   18484:	cmp	r0, r1
   18488:	beq	184ac <__assert_fail@plt+0x6fd0>
   1848c:	ldr	r0, [sp, #4]
   18490:	ldr	r0, [r0, #4]
   18494:	ldr	r1, [sp, #16]
   18498:	str	r0, [r1, #4]
   1849c:	ldr	r0, [sp, #16]
   184a0:	ldr	r1, [sp, #4]
   184a4:	str	r0, [r1, #4]
   184a8:	b	184d4 <__assert_fail@plt+0x6ff8>
   184ac:	ldr	r0, [sp, #8]
   184b0:	ldr	r1, [sp, #4]
   184b4:	str	r0, [r1]
   184b8:	ldr	r0, [fp, #-8]
   184bc:	ldr	r1, [r0, #12]
   184c0:	add	r1, r1, #1
   184c4:	str	r1, [r0, #12]
   184c8:	ldr	r0, [fp, #-8]
   184cc:	ldr	r1, [sp, #16]
   184d0:	bl	18eec <__assert_fail@plt+0x7a10>
   184d4:	b	184d8 <__assert_fail@plt+0x6ffc>
   184d8:	ldr	r0, [sp, #12]
   184dc:	str	r0, [sp, #16]
   184e0:	b	18440 <__assert_fail@plt+0x6f64>
   184e4:	ldr	r0, [sp, #20]
   184e8:	ldr	r0, [r0]
   184ec:	str	r0, [sp, #8]
   184f0:	ldr	r0, [sp, #20]
   184f4:	movw	r1, #0
   184f8:	str	r1, [r0, #4]
   184fc:	ldrb	r0, [fp, #-13]
   18500:	tst	r0, #1
   18504:	beq	1850c <__assert_fail@plt+0x7030>
   18508:	b	185c8 <__assert_fail@plt+0x70ec>
   1850c:	ldr	r0, [fp, #-8]
   18510:	ldr	r1, [sp, #8]
   18514:	bl	17690 <__assert_fail@plt+0x61b4>
   18518:	str	r0, [sp, #4]
   1851c:	ldr	r0, [sp, #4]
   18520:	ldr	r0, [r0]
   18524:	movw	r1, #0
   18528:	cmp	r0, r1
   1852c:	beq	18588 <__assert_fail@plt+0x70ac>
   18530:	ldr	r0, [fp, #-8]
   18534:	bl	18a9c <__assert_fail@plt+0x75c0>
   18538:	str	r0, [sp]
   1853c:	ldr	r0, [sp]
   18540:	movw	r1, #0
   18544:	cmp	r0, r1
   18548:	bne	1855c <__assert_fail@plt+0x7080>
   1854c:	movw	r0, #0
   18550:	and	r0, r0, #1
   18554:	strb	r0, [fp, #-1]
   18558:	b	185e4 <__assert_fail@plt+0x7108>
   1855c:	ldr	r0, [sp, #8]
   18560:	ldr	r1, [sp]
   18564:	str	r0, [r1]
   18568:	ldr	r0, [sp, #4]
   1856c:	ldr	r0, [r0, #4]
   18570:	ldr	r1, [sp]
   18574:	str	r0, [r1, #4]
   18578:	ldr	r0, [sp]
   1857c:	ldr	r1, [sp, #4]
   18580:	str	r0, [r1, #4]
   18584:	b	185a4 <__assert_fail@plt+0x70c8>
   18588:	ldr	r0, [sp, #8]
   1858c:	ldr	r1, [sp, #4]
   18590:	str	r0, [r1]
   18594:	ldr	r0, [fp, #-8]
   18598:	ldr	r1, [r0, #12]
   1859c:	add	r1, r1, #1
   185a0:	str	r1, [r0, #12]
   185a4:	ldr	r0, [sp, #20]
   185a8:	movw	r1, #0
   185ac:	str	r1, [r0]
   185b0:	ldr	r0, [fp, #-12]
   185b4:	ldr	r1, [r0, #12]
   185b8:	mvn	r2, #0
   185bc:	add	r1, r1, r2
   185c0:	str	r1, [r0, #12]
   185c4:	b	185c8 <__assert_fail@plt+0x70ec>
   185c8:	ldr	r0, [sp, #20]
   185cc:	add	r0, r0, #8
   185d0:	str	r0, [sp, #20]
   185d4:	b	1840c <__assert_fail@plt+0x6f30>
   185d8:	movw	r0, #1
   185dc:	and	r0, r0, #1
   185e0:	strb	r0, [fp, #-1]
   185e4:	ldrb	r0, [fp, #-1]
   185e8:	and	r0, r0, #1
   185ec:	mov	sp, fp
   185f0:	pop	{fp, pc}
   185f4:	push	{fp, lr}
   185f8:	mov	fp, sp
   185fc:	sub	sp, sp, #40	; 0x28
   18600:	str	r0, [fp, #-8]
   18604:	str	r1, [fp, #-12]
   18608:	str	r2, [fp, #-16]
   1860c:	ldr	r0, [fp, #-12]
   18610:	movw	r1, #0
   18614:	cmp	r0, r1
   18618:	bne	18620 <__assert_fail@plt+0x7144>
   1861c:	bl	11494 <abort@plt>
   18620:	ldr	r0, [fp, #-8]
   18624:	ldr	r1, [fp, #-12]
   18628:	add	r2, sp, #16
   1862c:	movw	r3, #0
   18630:	and	r3, r3, #1
   18634:	bl	188a0 <__assert_fail@plt+0x73c4>
   18638:	str	r0, [sp, #20]
   1863c:	movw	r1, #0
   18640:	cmp	r0, r1
   18644:	beq	18670 <__assert_fail@plt+0x7194>
   18648:	ldr	r0, [fp, #-16]
   1864c:	movw	r1, #0
   18650:	cmp	r0, r1
   18654:	beq	18664 <__assert_fail@plt+0x7188>
   18658:	ldr	r0, [sp, #20]
   1865c:	ldr	r1, [fp, #-16]
   18660:	str	r0, [r1]
   18664:	movw	r0, #0
   18668:	str	r0, [fp, #-4]
   1866c:	b	18890 <__assert_fail@plt+0x73b4>
   18670:	ldr	r0, [fp, #-8]
   18674:	ldr	r0, [r0, #12]
   18678:	vmov	s0, r0
   1867c:	vcvt.f32.u32	s0, s0
   18680:	ldr	r0, [fp, #-8]
   18684:	ldr	r0, [r0, #20]
   18688:	vldr	s2, [r0, #8]
   1868c:	ldr	r0, [fp, #-8]
   18690:	ldr	r0, [r0, #8]
   18694:	vmov	s4, r0
   18698:	vcvt.f32.u32	s4, s4
   1869c:	vmul.f32	s2, s2, s4
   186a0:	vcmpe.f32	s0, s2
   186a4:	vmrs	APSR_nzcv, fpscr
   186a8:	ble	187dc <__assert_fail@plt+0x7300>
   186ac:	ldr	r0, [fp, #-8]
   186b0:	bl	17cd0 <__assert_fail@plt+0x67f4>
   186b4:	ldr	r1, [fp, #-8]
   186b8:	ldr	r1, [r1, #12]
   186bc:	vmov	s0, r1
   186c0:	vcvt.f32.u32	s0, s0
   186c4:	ldr	r1, [fp, #-8]
   186c8:	ldr	r1, [r1, #20]
   186cc:	vldr	s2, [r1, #8]
   186d0:	ldr	r1, [fp, #-8]
   186d4:	ldr	r1, [r1, #8]
   186d8:	vmov	s4, r1
   186dc:	vcvt.f32.u32	s4, s4
   186e0:	vmul.f32	s2, s2, s4
   186e4:	vcmpe.f32	s0, s2
   186e8:	vmrs	APSR_nzcv, fpscr
   186ec:	ble	187d8 <__assert_fail@plt+0x72fc>
   186f0:	ldr	r0, [fp, #-8]
   186f4:	ldr	r0, [r0, #20]
   186f8:	str	r0, [sp, #12]
   186fc:	ldr	r0, [sp, #12]
   18700:	ldrb	r0, [r0, #16]
   18704:	tst	r0, #1
   18708:	beq	18730 <__assert_fail@plt+0x7254>
   1870c:	ldr	r0, [fp, #-8]
   18710:	ldr	r0, [r0, #8]
   18714:	vmov	s0, r0
   18718:	vcvt.f32.u32	s0, s0
   1871c:	ldr	r0, [sp, #12]
   18720:	vldr	s2, [r0, #12]
   18724:	vmul.f32	s0, s0, s2
   18728:	vstr	s0, [sp]
   1872c:	b	1875c <__assert_fail@plt+0x7280>
   18730:	ldr	r0, [fp, #-8]
   18734:	ldr	r0, [r0, #8]
   18738:	vmov	s0, r0
   1873c:	vcvt.f32.u32	s0, s0
   18740:	ldr	r0, [sp, #12]
   18744:	vldr	s2, [r0, #12]
   18748:	vmul.f32	s0, s0, s2
   1874c:	ldr	r0, [sp, #12]
   18750:	vldr	s2, [r0, #8]
   18754:	vmul.f32	s0, s0, s2
   18758:	vstr	s0, [sp]
   1875c:	vldr	s0, [sp]
   18760:	vldr	s2, [pc, #308]	; 1889c <__assert_fail@plt+0x73c0>
   18764:	vstr	s0, [sp, #8]
   18768:	vldr	s0, [sp, #8]
   1876c:	vcmpe.f32	s2, s0
   18770:	vmrs	APSR_nzcv, fpscr
   18774:	bhi	18784 <__assert_fail@plt+0x72a8>
   18778:	mvn	r0, #0
   1877c:	str	r0, [fp, #-4]
   18780:	b	18890 <__assert_fail@plt+0x73b4>
   18784:	ldr	r0, [fp, #-8]
   18788:	vldr	s0, [sp, #8]
   1878c:	vcvt.u32.f32	s0, s0
   18790:	vmov	r1, s0
   18794:	bl	181b8 <__assert_fail@plt+0x6cdc>
   18798:	tst	r0, #1
   1879c:	bne	187ac <__assert_fail@plt+0x72d0>
   187a0:	mvn	r0, #0
   187a4:	str	r0, [fp, #-4]
   187a8:	b	18890 <__assert_fail@plt+0x73b4>
   187ac:	ldr	r0, [fp, #-8]
   187b0:	ldr	r1, [fp, #-12]
   187b4:	add	r2, sp, #16
   187b8:	movw	r3, #0
   187bc:	and	r3, r3, #1
   187c0:	bl	188a0 <__assert_fail@plt+0x73c4>
   187c4:	movw	r1, #0
   187c8:	cmp	r0, r1
   187cc:	beq	187d4 <__assert_fail@plt+0x72f8>
   187d0:	bl	11494 <abort@plt>
   187d4:	b	187d8 <__assert_fail@plt+0x72fc>
   187d8:	b	187dc <__assert_fail@plt+0x7300>
   187dc:	ldr	r0, [sp, #16]
   187e0:	ldr	r0, [r0]
   187e4:	movw	r1, #0
   187e8:	cmp	r0, r1
   187ec:	beq	1885c <__assert_fail@plt+0x7380>
   187f0:	ldr	r0, [fp, #-8]
   187f4:	bl	18a9c <__assert_fail@plt+0x75c0>
   187f8:	str	r0, [sp, #4]
   187fc:	ldr	r0, [sp, #4]
   18800:	movw	r1, #0
   18804:	cmp	r0, r1
   18808:	bne	18818 <__assert_fail@plt+0x733c>
   1880c:	mvn	r0, #0
   18810:	str	r0, [fp, #-4]
   18814:	b	18890 <__assert_fail@plt+0x73b4>
   18818:	ldr	r0, [fp, #-12]
   1881c:	ldr	r1, [sp, #4]
   18820:	str	r0, [r1]
   18824:	ldr	r0, [sp, #16]
   18828:	ldr	r0, [r0, #4]
   1882c:	ldr	r1, [sp, #4]
   18830:	str	r0, [r1, #4]
   18834:	ldr	r0, [sp, #4]
   18838:	ldr	r1, [sp, #16]
   1883c:	str	r0, [r1, #4]
   18840:	ldr	r0, [fp, #-8]
   18844:	ldr	r1, [r0, #16]
   18848:	add	r1, r1, #1
   1884c:	str	r1, [r0, #16]
   18850:	movw	r0, #1
   18854:	str	r0, [fp, #-4]
   18858:	b	18890 <__assert_fail@plt+0x73b4>
   1885c:	ldr	r0, [fp, #-12]
   18860:	ldr	r1, [sp, #16]
   18864:	str	r0, [r1]
   18868:	ldr	r0, [fp, #-8]
   1886c:	ldr	r1, [r0, #16]
   18870:	add	r1, r1, #1
   18874:	str	r1, [r0, #16]
   18878:	ldr	r0, [fp, #-8]
   1887c:	ldr	r1, [r0, #12]
   18880:	add	r1, r1, #1
   18884:	str	r1, [r0, #12]
   18888:	movw	r0, #1
   1888c:	str	r0, [fp, #-4]
   18890:	ldr	r0, [fp, #-4]
   18894:	mov	sp, fp
   18898:	pop	{fp, pc}
   1889c:	svcmi	0x00800000
   188a0:	push	{fp, lr}
   188a4:	mov	fp, sp
   188a8:	sub	sp, sp, #56	; 0x38
   188ac:	str	r0, [fp, #-8]
   188b0:	str	r1, [fp, #-12]
   188b4:	str	r2, [fp, #-16]
   188b8:	and	r0, r3, #1
   188bc:	strb	r0, [fp, #-17]	; 0xffffffef
   188c0:	ldr	r0, [fp, #-8]
   188c4:	ldr	r1, [fp, #-12]
   188c8:	bl	17690 <__assert_fail@plt+0x61b4>
   188cc:	str	r0, [fp, #-24]	; 0xffffffe8
   188d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   188d4:	ldr	r1, [fp, #-16]
   188d8:	str	r0, [r1]
   188dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   188e0:	ldr	r0, [r0]
   188e4:	movw	r1, #0
   188e8:	cmp	r0, r1
   188ec:	bne	188fc <__assert_fail@plt+0x7420>
   188f0:	movw	r0, #0
   188f4:	str	r0, [fp, #-4]
   188f8:	b	18a90 <__assert_fail@plt+0x75b4>
   188fc:	ldr	r0, [fp, #-12]
   18900:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18904:	ldr	r1, [r1]
   18908:	cmp	r0, r1
   1890c:	beq	18940 <__assert_fail@plt+0x7464>
   18910:	ldr	r0, [fp, #-8]
   18914:	ldr	r0, [r0, #28]
   18918:	ldr	r1, [fp, #-12]
   1891c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18920:	ldr	r2, [r2]
   18924:	str	r0, [sp, #8]
   18928:	mov	r0, r1
   1892c:	mov	r1, r2
   18930:	ldr	r2, [sp, #8]
   18934:	blx	r2
   18938:	tst	r0, #1
   1893c:	beq	189bc <__assert_fail@plt+0x74e0>
   18940:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18944:	ldr	r0, [r0]
   18948:	str	r0, [sp, #24]
   1894c:	ldrb	r0, [fp, #-17]	; 0xffffffef
   18950:	tst	r0, #1
   18954:	beq	189b0 <__assert_fail@plt+0x74d4>
   18958:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1895c:	ldr	r0, [r0, #4]
   18960:	movw	r1, #0
   18964:	cmp	r0, r1
   18968:	beq	189a0 <__assert_fail@plt+0x74c4>
   1896c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18970:	ldr	r0, [r0, #4]
   18974:	str	r0, [sp, #20]
   18978:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1897c:	ldr	r1, [sp, #20]
   18980:	ldr	r2, [r1]
   18984:	str	r2, [r0]
   18988:	ldr	r1, [r1, #4]
   1898c:	str	r1, [r0, #4]
   18990:	ldr	r0, [fp, #-8]
   18994:	ldr	r1, [sp, #20]
   18998:	bl	18eec <__assert_fail@plt+0x7a10>
   1899c:	b	189ac <__assert_fail@plt+0x74d0>
   189a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   189a4:	movw	r1, #0
   189a8:	str	r1, [r0]
   189ac:	b	189b0 <__assert_fail@plt+0x74d4>
   189b0:	ldr	r0, [sp, #24]
   189b4:	str	r0, [fp, #-4]
   189b8:	b	18a90 <__assert_fail@plt+0x75b4>
   189bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   189c0:	str	r0, [sp, #28]
   189c4:	ldr	r0, [sp, #28]
   189c8:	ldr	r0, [r0, #4]
   189cc:	movw	r1, #0
   189d0:	cmp	r0, r1
   189d4:	beq	18a88 <__assert_fail@plt+0x75ac>
   189d8:	ldr	r0, [fp, #-12]
   189dc:	ldr	r1, [sp, #28]
   189e0:	ldr	r1, [r1, #4]
   189e4:	ldr	r1, [r1]
   189e8:	cmp	r0, r1
   189ec:	beq	18a24 <__assert_fail@plt+0x7548>
   189f0:	ldr	r0, [fp, #-8]
   189f4:	ldr	r0, [r0, #28]
   189f8:	ldr	r1, [fp, #-12]
   189fc:	ldr	r2, [sp, #28]
   18a00:	ldr	r2, [r2, #4]
   18a04:	ldr	r2, [r2]
   18a08:	str	r0, [sp, #4]
   18a0c:	mov	r0, r1
   18a10:	mov	r1, r2
   18a14:	ldr	r2, [sp, #4]
   18a18:	blx	r2
   18a1c:	tst	r0, #1
   18a20:	beq	18a74 <__assert_fail@plt+0x7598>
   18a24:	ldr	r0, [sp, #28]
   18a28:	ldr	r0, [r0, #4]
   18a2c:	ldr	r0, [r0]
   18a30:	str	r0, [sp, #16]
   18a34:	ldrb	r0, [fp, #-17]	; 0xffffffef
   18a38:	tst	r0, #1
   18a3c:	beq	18a68 <__assert_fail@plt+0x758c>
   18a40:	ldr	r0, [sp, #28]
   18a44:	ldr	r0, [r0, #4]
   18a48:	str	r0, [sp, #12]
   18a4c:	ldr	r0, [sp, #12]
   18a50:	ldr	r0, [r0, #4]
   18a54:	ldr	r1, [sp, #28]
   18a58:	str	r0, [r1, #4]
   18a5c:	ldr	r0, [fp, #-8]
   18a60:	ldr	r1, [sp, #12]
   18a64:	bl	18eec <__assert_fail@plt+0x7a10>
   18a68:	ldr	r0, [sp, #16]
   18a6c:	str	r0, [fp, #-4]
   18a70:	b	18a90 <__assert_fail@plt+0x75b4>
   18a74:	b	18a78 <__assert_fail@plt+0x759c>
   18a78:	ldr	r0, [sp, #28]
   18a7c:	ldr	r0, [r0, #4]
   18a80:	str	r0, [sp, #28]
   18a84:	b	189c4 <__assert_fail@plt+0x74e8>
   18a88:	movw	r0, #0
   18a8c:	str	r0, [fp, #-4]
   18a90:	ldr	r0, [fp, #-4]
   18a94:	mov	sp, fp
   18a98:	pop	{fp, pc}
   18a9c:	push	{fp, lr}
   18aa0:	mov	fp, sp
   18aa4:	sub	sp, sp, #8
   18aa8:	str	r0, [sp, #4]
   18aac:	ldr	r0, [sp, #4]
   18ab0:	ldr	r0, [r0, #36]	; 0x24
   18ab4:	movw	r1, #0
   18ab8:	cmp	r0, r1
   18abc:	beq	18ae0 <__assert_fail@plt+0x7604>
   18ac0:	ldr	r0, [sp, #4]
   18ac4:	ldr	r0, [r0, #36]	; 0x24
   18ac8:	str	r0, [sp]
   18acc:	ldr	r0, [sp]
   18ad0:	ldr	r0, [r0, #4]
   18ad4:	ldr	r1, [sp, #4]
   18ad8:	str	r0, [r1, #36]	; 0x24
   18adc:	b	18aec <__assert_fail@plt+0x7610>
   18ae0:	movw	r0, #8
   18ae4:	bl	2137c <__assert_fail@plt+0xfea0>
   18ae8:	str	r0, [sp]
   18aec:	ldr	r0, [sp]
   18af0:	mov	sp, fp
   18af4:	pop	{fp, pc}
   18af8:	push	{fp, lr}
   18afc:	mov	fp, sp
   18b00:	sub	sp, sp, #24
   18b04:	str	r0, [fp, #-4]
   18b08:	str	r1, [fp, #-8]
   18b0c:	ldr	r0, [fp, #-4]
   18b10:	ldr	r1, [fp, #-8]
   18b14:	add	r2, sp, #12
   18b18:	bl	185f4 <__assert_fail@plt+0x7118>
   18b1c:	str	r0, [sp, #8]
   18b20:	ldr	r0, [sp, #8]
   18b24:	cmn	r0, #1
   18b28:	bne	18b38 <__assert_fail@plt+0x765c>
   18b2c:	movw	r0, #0
   18b30:	str	r0, [sp, #4]
   18b34:	b	18b60 <__assert_fail@plt+0x7684>
   18b38:	ldr	r0, [sp, #8]
   18b3c:	cmp	r0, #0
   18b40:	bne	18b50 <__assert_fail@plt+0x7674>
   18b44:	ldr	r0, [sp, #12]
   18b48:	str	r0, [sp]
   18b4c:	b	18b58 <__assert_fail@plt+0x767c>
   18b50:	ldr	r0, [fp, #-8]
   18b54:	str	r0, [sp]
   18b58:	ldr	r0, [sp]
   18b5c:	str	r0, [sp, #4]
   18b60:	ldr	r0, [sp, #4]
   18b64:	mov	sp, fp
   18b68:	pop	{fp, pc}
   18b6c:	push	{fp, lr}
   18b70:	mov	fp, sp
   18b74:	sub	sp, sp, #40	; 0x28
   18b78:	str	r0, [fp, #-8]
   18b7c:	str	r1, [fp, #-12]
   18b80:	ldr	r0, [fp, #-8]
   18b84:	ldr	r1, [fp, #-12]
   18b88:	add	r2, sp, #20
   18b8c:	movw	r3, #1
   18b90:	and	r3, r3, #1
   18b94:	bl	188a0 <__assert_fail@plt+0x73c4>
   18b98:	str	r0, [fp, #-16]
   18b9c:	ldr	r0, [fp, #-16]
   18ba0:	movw	r1, #0
   18ba4:	cmp	r0, r1
   18ba8:	bne	18bb8 <__assert_fail@plt+0x76dc>
   18bac:	movw	r0, #0
   18bb0:	str	r0, [fp, #-4]
   18bb4:	b	18d60 <__assert_fail@plt+0x7884>
   18bb8:	ldr	r0, [fp, #-8]
   18bbc:	ldr	r1, [r0, #16]
   18bc0:	mvn	r2, #0
   18bc4:	add	r1, r1, r2
   18bc8:	str	r1, [r0, #16]
   18bcc:	ldr	r0, [sp, #20]
   18bd0:	ldr	r0, [r0]
   18bd4:	movw	r1, #0
   18bd8:	cmp	r0, r1
   18bdc:	bne	18d58 <__assert_fail@plt+0x787c>
   18be0:	ldr	r0, [fp, #-8]
   18be4:	ldr	r1, [r0, #12]
   18be8:	mvn	r2, #0
   18bec:	add	r1, r1, r2
   18bf0:	str	r1, [r0, #12]
   18bf4:	ldr	r0, [fp, #-8]
   18bf8:	ldr	r0, [r0, #12]
   18bfc:	vmov	s0, r0
   18c00:	vcvt.f32.u32	s0, s0
   18c04:	ldr	r0, [fp, #-8]
   18c08:	ldr	r0, [r0, #20]
   18c0c:	vldr	s2, [r0]
   18c10:	ldr	r0, [fp, #-8]
   18c14:	ldr	r0, [r0, #8]
   18c18:	vmov	s4, r0
   18c1c:	vcvt.f32.u32	s4, s4
   18c20:	vmul.f32	s2, s2, s4
   18c24:	vcmpe.f32	s0, s2
   18c28:	vmrs	APSR_nzcv, fpscr
   18c2c:	bpl	18d54 <__assert_fail@plt+0x7878>
   18c30:	ldr	r0, [fp, #-8]
   18c34:	bl	17cd0 <__assert_fail@plt+0x67f4>
   18c38:	ldr	r1, [fp, #-8]
   18c3c:	ldr	r1, [r1, #12]
   18c40:	vmov	s0, r1
   18c44:	vcvt.f32.u32	s0, s0
   18c48:	ldr	r1, [fp, #-8]
   18c4c:	ldr	r1, [r1, #20]
   18c50:	vldr	s2, [r1]
   18c54:	ldr	r1, [fp, #-8]
   18c58:	ldr	r1, [r1, #8]
   18c5c:	vmov	s4, r1
   18c60:	vcvt.f32.u32	s4, s4
   18c64:	vmul.f32	s2, s2, s4
   18c68:	vcmpe.f32	s0, s2
   18c6c:	vmrs	APSR_nzcv, fpscr
   18c70:	bpl	18d50 <__assert_fail@plt+0x7874>
   18c74:	ldr	r0, [fp, #-8]
   18c78:	ldr	r0, [r0, #20]
   18c7c:	str	r0, [sp, #16]
   18c80:	ldr	r0, [sp, #16]
   18c84:	ldrb	r0, [r0, #16]
   18c88:	tst	r0, #1
   18c8c:	beq	18cb4 <__assert_fail@plt+0x77d8>
   18c90:	ldr	r0, [fp, #-8]
   18c94:	ldr	r0, [r0, #8]
   18c98:	vmov	s0, r0
   18c9c:	vcvt.f32.u32	s0, s0
   18ca0:	ldr	r0, [sp, #16]
   18ca4:	vldr	s2, [r0, #4]
   18ca8:	vmul.f32	s0, s0, s2
   18cac:	vstr	s0, [sp]
   18cb0:	b	18ce0 <__assert_fail@plt+0x7804>
   18cb4:	ldr	r0, [fp, #-8]
   18cb8:	ldr	r0, [r0, #8]
   18cbc:	vmov	s0, r0
   18cc0:	vcvt.f32.u32	s0, s0
   18cc4:	ldr	r0, [sp, #16]
   18cc8:	vldr	s2, [r0, #4]
   18ccc:	vmul.f32	s0, s0, s2
   18cd0:	ldr	r0, [sp, #16]
   18cd4:	vldr	s2, [r0, #8]
   18cd8:	vmul.f32	s0, s0, s2
   18cdc:	vstr	s0, [sp]
   18ce0:	vldr	s0, [sp]
   18ce4:	vcvt.u32.f32	s0, s0
   18ce8:	vmov	r0, s0
   18cec:	str	r0, [sp, #12]
   18cf0:	ldr	r0, [fp, #-8]
   18cf4:	ldr	r1, [sp, #12]
   18cf8:	bl	181b8 <__assert_fail@plt+0x6cdc>
   18cfc:	tst	r0, #1
   18d00:	bne	18d4c <__assert_fail@plt+0x7870>
   18d04:	ldr	r0, [fp, #-8]
   18d08:	ldr	r0, [r0, #36]	; 0x24
   18d0c:	str	r0, [sp, #8]
   18d10:	ldr	r0, [sp, #8]
   18d14:	movw	r1, #0
   18d18:	cmp	r0, r1
   18d1c:	beq	18d40 <__assert_fail@plt+0x7864>
   18d20:	ldr	r0, [sp, #8]
   18d24:	ldr	r0, [r0, #4]
   18d28:	str	r0, [sp, #4]
   18d2c:	ldr	r0, [sp, #8]
   18d30:	bl	1382c <__assert_fail@plt+0x2350>
   18d34:	ldr	r0, [sp, #4]
   18d38:	str	r0, [sp, #8]
   18d3c:	b	18d10 <__assert_fail@plt+0x7834>
   18d40:	ldr	r0, [fp, #-8]
   18d44:	movw	r1, #0
   18d48:	str	r1, [r0, #36]	; 0x24
   18d4c:	b	18d50 <__assert_fail@plt+0x7874>
   18d50:	b	18d54 <__assert_fail@plt+0x7878>
   18d54:	b	18d58 <__assert_fail@plt+0x787c>
   18d58:	ldr	r0, [fp, #-16]
   18d5c:	str	r0, [fp, #-4]
   18d60:	ldr	r0, [fp, #-4]
   18d64:	mov	sp, fp
   18d68:	pop	{fp, pc}
   18d6c:	push	{fp, lr}
   18d70:	mov	fp, sp
   18d74:	sub	sp, sp, #8
   18d78:	str	r0, [sp, #4]
   18d7c:	str	r1, [sp]
   18d80:	ldr	r0, [sp, #4]
   18d84:	ldr	r1, [sp]
   18d88:	bl	18b6c <__assert_fail@plt+0x7690>
   18d8c:	mov	sp, fp
   18d90:	pop	{fp, pc}
   18d94:	push	{fp, lr}
   18d98:	mov	fp, sp
   18d9c:	sub	sp, sp, #8
   18da0:	str	r0, [sp, #4]
   18da4:	ldr	r0, [sp, #4]
   18da8:	cmp	r0, #10
   18dac:	bcs	18db8 <__assert_fail@plt+0x78dc>
   18db0:	movw	r0, #10
   18db4:	str	r0, [sp, #4]
   18db8:	ldr	r0, [sp, #4]
   18dbc:	orr	r0, r0, #1
   18dc0:	str	r0, [sp, #4]
   18dc4:	ldr	r0, [sp, #4]
   18dc8:	mvn	r1, #0
   18dcc:	cmp	r1, r0
   18dd0:	movw	r0, #0
   18dd4:	str	r0, [sp]
   18dd8:	beq	18df0 <__assert_fail@plt+0x7914>
   18ddc:	ldr	r0, [sp, #4]
   18de0:	bl	18e18 <__assert_fail@plt+0x793c>
   18de4:	mvn	r1, #0
   18de8:	eor	r0, r0, r1
   18dec:	str	r0, [sp]
   18df0:	ldr	r0, [sp]
   18df4:	tst	r0, #1
   18df8:	beq	18e0c <__assert_fail@plt+0x7930>
   18dfc:	ldr	r0, [sp, #4]
   18e00:	add	r0, r0, #2
   18e04:	str	r0, [sp, #4]
   18e08:	b	18dc4 <__assert_fail@plt+0x78e8>
   18e0c:	ldr	r0, [sp, #4]
   18e10:	mov	sp, fp
   18e14:	pop	{fp, pc}
   18e18:	sub	sp, sp, #16
   18e1c:	str	r0, [sp, #12]
   18e20:	movw	r0, #3
   18e24:	str	r0, [sp, #8]
   18e28:	ldr	r0, [sp, #8]
   18e2c:	ldr	r1, [sp, #8]
   18e30:	mul	r0, r0, r1
   18e34:	str	r0, [sp, #4]
   18e38:	ldr	r0, [sp, #4]
   18e3c:	ldr	r1, [sp, #12]
   18e40:	cmp	r0, r1
   18e44:	movw	r0, #0
   18e48:	str	r0, [sp]
   18e4c:	bcs	18e70 <__assert_fail@plt+0x7994>
   18e50:	ldr	r0, [sp, #12]
   18e54:	ldr	r1, [sp, #8]
   18e58:	udiv	r2, r0, r1
   18e5c:	mls	r0, r2, r1, r0
   18e60:	cmp	r0, #0
   18e64:	movw	r0, #0
   18e68:	movne	r0, #1
   18e6c:	str	r0, [sp]
   18e70:	ldr	r0, [sp]
   18e74:	tst	r0, #1
   18e78:	beq	18eac <__assert_fail@plt+0x79d0>
   18e7c:	ldr	r0, [sp, #8]
   18e80:	add	r0, r0, #1
   18e84:	str	r0, [sp, #8]
   18e88:	ldr	r0, [sp, #8]
   18e8c:	lsl	r0, r0, #2
   18e90:	ldr	r1, [sp, #4]
   18e94:	add	r0, r1, r0
   18e98:	str	r0, [sp, #4]
   18e9c:	ldr	r0, [sp, #8]
   18ea0:	add	r0, r0, #1
   18ea4:	str	r0, [sp, #8]
   18ea8:	b	18e38 <__assert_fail@plt+0x795c>
   18eac:	ldr	r0, [sp, #12]
   18eb0:	ldr	r1, [sp, #8]
   18eb4:	udiv	r2, r0, r1
   18eb8:	mls	r0, r2, r1, r0
   18ebc:	cmp	r0, #0
   18ec0:	movw	r0, #0
   18ec4:	movne	r0, #1
   18ec8:	tst	r0, #1
   18ecc:	movw	r0, #1
   18ed0:	moveq	r0, #0
   18ed4:	cmp	r0, #0
   18ed8:	movw	r0, #0
   18edc:	movne	r0, #1
   18ee0:	and	r0, r0, #1
   18ee4:	add	sp, sp, #16
   18ee8:	bx	lr
   18eec:	sub	sp, sp, #8
   18ef0:	str	r0, [sp, #4]
   18ef4:	str	r1, [sp]
   18ef8:	ldr	r0, [sp]
   18efc:	movw	r1, #0
   18f00:	str	r1, [r0]
   18f04:	ldr	r0, [sp, #4]
   18f08:	ldr	r0, [r0, #36]	; 0x24
   18f0c:	ldr	r1, [sp]
   18f10:	str	r0, [r1, #4]
   18f14:	ldr	r0, [sp]
   18f18:	ldr	r1, [sp, #4]
   18f1c:	str	r0, [r1, #36]	; 0x24
   18f20:	add	sp, sp, #8
   18f24:	bx	lr
   18f28:	sub	sp, sp, #12
   18f2c:	str	r0, [sp, #8]
   18f30:	str	r1, [sp, #4]
   18f34:	ldr	r0, [sp, #8]
   18f38:	movw	r1, #1
   18f3c:	strb	r1, [r0, #28]
   18f40:	ldr	r0, [sp, #8]
   18f44:	movw	r1, #0
   18f48:	str	r1, [r0, #20]
   18f4c:	ldr	r0, [sp, #8]
   18f50:	str	r1, [r0, #24]
   18f54:	str	r1, [sp]
   18f58:	ldr	r0, [sp]
   18f5c:	cmp	r0, #4
   18f60:	bge	18f88 <__assert_fail@plt+0x7aac>
   18f64:	ldr	r0, [sp, #4]
   18f68:	ldr	r1, [sp, #8]
   18f6c:	ldr	r2, [sp]
   18f70:	add	r1, r1, r2, lsl #2
   18f74:	str	r0, [r1]
   18f78:	ldr	r0, [sp]
   18f7c:	add	r0, r0, #1
   18f80:	str	r0, [sp]
   18f84:	b	18f58 <__assert_fail@plt+0x7a7c>
   18f88:	ldr	r0, [sp, #4]
   18f8c:	ldr	r1, [sp, #8]
   18f90:	str	r0, [r1, #16]
   18f94:	add	sp, sp, #12
   18f98:	bx	lr
   18f9c:	sub	sp, sp, #4
   18fa0:	str	r0, [sp]
   18fa4:	ldr	r0, [sp]
   18fa8:	ldrb	r0, [r0, #28]
   18fac:	and	r0, r0, #1
   18fb0:	add	sp, sp, #4
   18fb4:	bx	lr
   18fb8:	sub	sp, sp, #16
   18fbc:	str	r0, [sp, #12]
   18fc0:	str	r1, [sp, #8]
   18fc4:	ldr	r0, [sp, #12]
   18fc8:	ldr	r1, [r0, #20]
   18fcc:	ldrb	r0, [r0, #28]
   18fd0:	mov	r2, #1
   18fd4:	bic	r0, r2, r0
   18fd8:	add	r0, r1, r0
   18fdc:	and	r0, r0, #3
   18fe0:	str	r0, [sp, #4]
   18fe4:	ldr	r0, [sp, #12]
   18fe8:	ldr	r1, [sp, #4]
   18fec:	ldr	r0, [r0, r1, lsl #2]
   18ff0:	str	r0, [sp]
   18ff4:	ldr	r0, [sp, #8]
   18ff8:	ldr	r1, [sp, #12]
   18ffc:	ldr	r2, [sp, #4]
   19000:	add	r1, r1, r2, lsl #2
   19004:	str	r0, [r1]
   19008:	ldr	r0, [sp, #4]
   1900c:	ldr	r1, [sp, #12]
   19010:	str	r0, [r1, #20]
   19014:	ldr	r0, [sp, #4]
   19018:	ldr	r1, [sp, #12]
   1901c:	ldr	r1, [r1, #24]
   19020:	cmp	r0, r1
   19024:	bne	19054 <__assert_fail@plt+0x7b78>
   19028:	ldr	r0, [sp, #12]
   1902c:	ldr	r0, [r0, #24]
   19030:	ldr	r1, [sp, #12]
   19034:	ldrb	r1, [r1, #28]
   19038:	mvn	r2, #0
   1903c:	eor	r1, r1, r2
   19040:	and	r1, r1, #1
   19044:	add	r0, r0, r1
   19048:	and	r0, r0, #3
   1904c:	ldr	r1, [sp, #12]
   19050:	str	r0, [r1, #24]
   19054:	ldr	r0, [sp, #12]
   19058:	movw	r1, #0
   1905c:	strb	r1, [r0, #28]
   19060:	ldr	r0, [sp]
   19064:	add	sp, sp, #16
   19068:	bx	lr
   1906c:	push	{fp, lr}
   19070:	mov	fp, sp
   19074:	sub	sp, sp, #8
   19078:	str	r0, [sp, #4]
   1907c:	ldr	r0, [sp, #4]
   19080:	bl	18f9c <__assert_fail@plt+0x7ac0>
   19084:	tst	r0, #1
   19088:	beq	19090 <__assert_fail@plt+0x7bb4>
   1908c:	bl	11494 <abort@plt>
   19090:	ldr	r0, [sp, #4]
   19094:	ldr	r1, [r0, #20]
   19098:	ldr	r0, [r0, r1, lsl #2]
   1909c:	str	r0, [sp]
   190a0:	ldr	r0, [sp, #4]
   190a4:	ldr	r1, [r0, #16]
   190a8:	ldr	r2, [r0, #20]
   190ac:	add	r0, r0, r2, lsl #2
   190b0:	str	r1, [r0]
   190b4:	ldr	r0, [sp, #4]
   190b8:	ldr	r0, [r0, #20]
   190bc:	ldr	r1, [sp, #4]
   190c0:	ldr	r1, [r1, #24]
   190c4:	cmp	r0, r1
   190c8:	bne	190dc <__assert_fail@plt+0x7c00>
   190cc:	ldr	r0, [sp, #4]
   190d0:	movw	r1, #1
   190d4:	strb	r1, [r0, #28]
   190d8:	b	190f8 <__assert_fail@plt+0x7c1c>
   190dc:	ldr	r0, [sp, #4]
   190e0:	ldr	r0, [r0, #20]
   190e4:	add	r0, r0, #4
   190e8:	sub	r0, r0, #1
   190ec:	and	r0, r0, #3
   190f0:	ldr	r1, [sp, #4]
   190f4:	str	r0, [r1, #20]
   190f8:	ldr	r0, [sp]
   190fc:	mov	sp, fp
   19100:	pop	{fp, pc}
   19104:	push	{fp, lr}
   19108:	mov	fp, sp
   1910c:	sub	sp, sp, #16
   19110:	str	r0, [sp, #8]
   19114:	str	r1, [sp, #12]
   19118:	str	r2, [sp, #4]
   1911c:	ldr	r0, [sp, #4]
   19120:	add	r0, r0, #20
   19124:	str	r0, [sp]
   19128:	ldr	r0, [sp]
   1912c:	mov	r1, #0
   19130:	strb	r1, [r0]
   19134:	mov	r0, #1
   19138:	cmp	r0, #0
   1913c:	bne	191c4 <__assert_fail@plt+0x7ce8>
   19140:	b	19144 <__assert_fail@plt+0x7c68>
   19144:	b	19148 <__assert_fail@plt+0x7c6c>
   19148:	ldr	r0, [sp, #8]
   1914c:	ldr	r1, [sp, #12]
   19150:	mov	r2, #10
   19154:	mov	r3, #0
   19158:	bl	2413c <__assert_fail@plt+0x12c60>
   1915c:	rsb	r2, r2, #48	; 0x30
   19160:	ldr	r3, [sp]
   19164:	mvn	ip, #0
   19168:	add	lr, r3, ip
   1916c:	str	lr, [sp]
   19170:	add	r3, r3, ip
   19174:	strb	r2, [r3]
   19178:	ldr	r0, [sp, #8]
   1917c:	ldr	r1, [sp, #12]
   19180:	mov	r2, #10
   19184:	mov	r3, #0
   19188:	bl	2413c <__assert_fail@plt+0x12c60>
   1918c:	str	r1, [sp, #12]
   19190:	str	r0, [sp, #8]
   19194:	orr	r0, r0, r1
   19198:	cmp	r0, #0
   1919c:	bne	19148 <__assert_fail@plt+0x7c6c>
   191a0:	b	191a4 <__assert_fail@plt+0x7cc8>
   191a4:	ldr	r0, [sp]
   191a8:	mvn	r1, #0
   191ac:	add	r2, r0, r1
   191b0:	str	r2, [sp]
   191b4:	add	r0, r0, r1
   191b8:	movw	r1, #45	; 0x2d
   191bc:	strb	r1, [r0]
   191c0:	b	19228 <__assert_fail@plt+0x7d4c>
   191c4:	b	191c8 <__assert_fail@plt+0x7cec>
   191c8:	ldr	r0, [sp, #8]
   191cc:	ldr	r1, [sp, #12]
   191d0:	mov	r2, #10
   191d4:	mov	r3, #0
   191d8:	bl	2413c <__assert_fail@plt+0x12c60>
   191dc:	orr	r2, r2, #48	; 0x30
   191e0:	ldr	r3, [sp]
   191e4:	mvn	ip, #0
   191e8:	add	lr, r3, ip
   191ec:	str	lr, [sp]
   191f0:	add	r3, r3, ip
   191f4:	strb	r2, [r3]
   191f8:	ldr	r0, [sp, #8]
   191fc:	ldr	r1, [sp, #12]
   19200:	mov	r2, #10
   19204:	mov	r3, #0
   19208:	bl	2413c <__assert_fail@plt+0x12c60>
   1920c:	str	r1, [sp, #12]
   19210:	str	r0, [sp, #8]
   19214:	orr	r0, r0, r1
   19218:	cmp	r0, #0
   1921c:	bne	191c8 <__assert_fail@plt+0x7cec>
   19220:	b	19224 <__assert_fail@plt+0x7d48>
   19224:	b	19228 <__assert_fail@plt+0x7d4c>
   19228:	ldr	r0, [sp]
   1922c:	mov	sp, fp
   19230:	pop	{fp, pc}
   19234:	sub	sp, sp, #4
   19238:	push	{fp, lr}
   1923c:	mov	fp, sp
   19240:	sub	sp, sp, #20
   19244:	str	r3, [fp, #8]
   19248:	str	r0, [fp, #-4]
   1924c:	str	r1, [fp, #-8]
   19250:	str	r2, [sp, #8]
   19254:	movw	r0, #0
   19258:	str	r0, [sp, #4]
   1925c:	ldr	r0, [sp, #8]
   19260:	and	r0, r0, #64	; 0x40
   19264:	cmp	r0, #0
   19268:	beq	19290 <__assert_fail@plt+0x7db4>
   1926c:	mov	r0, sp
   19270:	mov	r1, r0
   19274:	add	r2, fp, #8
   19278:	str	r2, [r1]
   1927c:	ldr	r1, [sp]
   19280:	add	r2, r1, #4
   19284:	str	r2, [sp]
   19288:	ldr	r1, [r1]
   1928c:	str	r1, [sp, #4]
   19290:	ldr	r0, [fp, #-4]
   19294:	ldr	r1, [fp, #-8]
   19298:	ldr	r2, [sp, #8]
   1929c:	ldr	r3, [sp, #4]
   192a0:	bl	11374 <openat64@plt>
   192a4:	bl	1bb84 <__assert_fail@plt+0xa6a8>
   192a8:	mov	sp, fp
   192ac:	pop	{fp, lr}
   192b0:	add	sp, sp, #4
   192b4:	bx	lr
   192b8:	push	{fp, lr}
   192bc:	mov	fp, sp
   192c0:	sub	sp, sp, #48	; 0x30
   192c4:	ldr	ip, [pc, #176]	; 1937c <__assert_fail@plt+0x7ea0>
   192c8:	str	r0, [fp, #-8]
   192cc:	str	r1, [fp, #-12]
   192d0:	str	r2, [fp, #-16]
   192d4:	str	r3, [fp, #-20]	; 0xffffffec
   192d8:	ldr	r0, [fp, #-16]
   192dc:	orr	r0, r0, ip
   192e0:	str	r0, [sp, #24]
   192e4:	ldr	r0, [fp, #-8]
   192e8:	ldr	r1, [fp, #-12]
   192ec:	ldr	r2, [sp, #24]
   192f0:	bl	19234 <__assert_fail@plt+0x7d58>
   192f4:	str	r0, [sp, #20]
   192f8:	ldr	r0, [sp, #20]
   192fc:	cmp	r0, #0
   19300:	bge	19310 <__assert_fail@plt+0x7e34>
   19304:	movw	r0, #0
   19308:	str	r0, [fp, #-4]
   1930c:	b	19370 <__assert_fail@plt+0x7e94>
   19310:	ldr	r0, [sp, #20]
   19314:	bl	11428 <fdopendir@plt>
   19318:	str	r0, [sp, #16]
   1931c:	ldr	r0, [sp, #16]
   19320:	movw	r1, #0
   19324:	cmp	r0, r1
   19328:	beq	1933c <__assert_fail@plt+0x7e60>
   1932c:	ldr	r0, [sp, #20]
   19330:	ldr	r1, [fp, #-20]	; 0xffffffec
   19334:	str	r0, [r1]
   19338:	b	19368 <__assert_fail@plt+0x7e8c>
   1933c:	bl	11398 <__errno_location@plt>
   19340:	ldr	r0, [r0]
   19344:	str	r0, [sp, #12]
   19348:	ldr	r0, [sp, #20]
   1934c:	bl	114a0 <close@plt>
   19350:	ldr	r1, [sp, #12]
   19354:	str	r0, [sp, #8]
   19358:	str	r1, [sp, #4]
   1935c:	bl	11398 <__errno_location@plt>
   19360:	ldr	r1, [sp, #4]
   19364:	str	r1, [r0]
   19368:	ldr	r0, [sp, #16]
   1936c:	str	r0, [fp, #-4]
   19370:	ldr	r0, [fp, #-4]
   19374:	mov	sp, fp
   19378:	pop	{fp, pc}
   1937c:	andeq	r4, r8, r0, lsl #18
   19380:	push	{fp, lr}
   19384:	mov	fp, sp
   19388:	sub	sp, sp, #24
   1938c:	str	r0, [fp, #-4]
   19390:	ldr	r0, [fp, #-4]
   19394:	movw	r1, #0
   19398:	cmp	r0, r1
   1939c:	bne	193c0 <__assert_fail@plt+0x7ee4>
   193a0:	movw	r0, #24968	; 0x6188
   193a4:	movt	r0, #3
   193a8:	ldr	r1, [r0]
   193ac:	movw	r0, #21052	; 0x523c
   193b0:	movt	r0, #2
   193b4:	bl	1147c <fputs@plt>
   193b8:	str	r0, [sp, #8]
   193bc:	bl	11494 <abort@plt>
   193c0:	ldr	r0, [fp, #-4]
   193c4:	movw	r1, #47	; 0x2f
   193c8:	bl	11404 <strrchr@plt>
   193cc:	str	r0, [fp, #-8]
   193d0:	ldr	r0, [fp, #-8]
   193d4:	movw	r1, #0
   193d8:	cmp	r0, r1
   193dc:	beq	193f0 <__assert_fail@plt+0x7f14>
   193e0:	ldr	r0, [fp, #-8]
   193e4:	add	r0, r0, #1
   193e8:	str	r0, [sp, #4]
   193ec:	b	193f8 <__assert_fail@plt+0x7f1c>
   193f0:	ldr	r0, [fp, #-4]
   193f4:	str	r0, [sp, #4]
   193f8:	ldr	r0, [sp, #4]
   193fc:	str	r0, [sp, #12]
   19400:	ldr	r0, [sp, #12]
   19404:	ldr	r1, [fp, #-4]
   19408:	sub	r0, r0, r1
   1940c:	cmp	r0, #7
   19410:	blt	1947c <__assert_fail@plt+0x7fa0>
   19414:	ldr	r0, [sp, #12]
   19418:	mvn	r1, #6
   1941c:	add	r0, r0, r1
   19420:	movw	r1, #21108	; 0x5274
   19424:	movt	r1, #2
   19428:	movw	r2, #7
   1942c:	bl	11488 <strncmp@plt>
   19430:	cmp	r0, #0
   19434:	bne	1947c <__assert_fail@plt+0x7fa0>
   19438:	ldr	r0, [sp, #12]
   1943c:	str	r0, [fp, #-4]
   19440:	ldr	r0, [sp, #12]
   19444:	movw	r1, #21116	; 0x527c
   19448:	movt	r1, #2
   1944c:	movw	r2, #3
   19450:	bl	11488 <strncmp@plt>
   19454:	cmp	r0, #0
   19458:	bne	19478 <__assert_fail@plt+0x7f9c>
   1945c:	ldr	r0, [sp, #12]
   19460:	add	r0, r0, #3
   19464:	str	r0, [fp, #-4]
   19468:	ldr	r0, [fp, #-4]
   1946c:	movw	r1, #24952	; 0x6178
   19470:	movt	r1, #3
   19474:	str	r0, [r1]
   19478:	b	1947c <__assert_fail@plt+0x7fa0>
   1947c:	ldr	r0, [fp, #-4]
   19480:	movw	r1, #25016	; 0x61b8
   19484:	movt	r1, #3
   19488:	str	r0, [r1]
   1948c:	ldr	r0, [fp, #-4]
   19490:	movw	r1, #24956	; 0x617c
   19494:	movt	r1, #3
   19498:	str	r0, [r1]
   1949c:	mov	sp, fp
   194a0:	pop	{fp, pc}
   194a4:	push	{fp, lr}
   194a8:	mov	fp, sp
   194ac:	sub	sp, sp, #24
   194b0:	str	r0, [fp, #-4]
   194b4:	bl	11398 <__errno_location@plt>
   194b8:	ldr	r0, [r0]
   194bc:	str	r0, [fp, #-8]
   194c0:	ldr	r0, [fp, #-4]
   194c4:	movw	r1, #0
   194c8:	cmp	r0, r1
   194cc:	beq	194dc <__assert_fail@plt+0x8000>
   194d0:	ldr	r0, [fp, #-4]
   194d4:	str	r0, [sp, #8]
   194d8:	b	194ec <__assert_fail@plt+0x8010>
   194dc:	movw	r0, #25020	; 0x61bc
   194e0:	movt	r0, #3
   194e4:	str	r0, [sp, #8]
   194e8:	b	194ec <__assert_fail@plt+0x8010>
   194ec:	ldr	r0, [sp, #8]
   194f0:	movw	r1, #48	; 0x30
   194f4:	bl	1f100 <__assert_fail@plt+0xdc24>
   194f8:	str	r0, [sp, #12]
   194fc:	ldr	r0, [fp, #-8]
   19500:	str	r0, [sp, #4]
   19504:	bl	11398 <__errno_location@plt>
   19508:	ldr	r1, [sp, #4]
   1950c:	str	r1, [r0]
   19510:	ldr	r0, [sp, #12]
   19514:	mov	sp, fp
   19518:	pop	{fp, pc}
   1951c:	sub	sp, sp, #8
   19520:	str	r0, [sp, #4]
   19524:	ldr	r0, [sp, #4]
   19528:	movw	r1, #0
   1952c:	cmp	r0, r1
   19530:	beq	19540 <__assert_fail@plt+0x8064>
   19534:	ldr	r0, [sp, #4]
   19538:	str	r0, [sp]
   1953c:	b	19550 <__assert_fail@plt+0x8074>
   19540:	movw	r0, #25020	; 0x61bc
   19544:	movt	r0, #3
   19548:	str	r0, [sp]
   1954c:	b	19550 <__assert_fail@plt+0x8074>
   19550:	ldr	r0, [sp]
   19554:	ldr	r0, [r0]
   19558:	add	sp, sp, #8
   1955c:	bx	lr
   19560:	sub	sp, sp, #16
   19564:	str	r0, [sp, #12]
   19568:	str	r1, [sp, #8]
   1956c:	ldr	r0, [sp, #8]
   19570:	ldr	r1, [sp, #12]
   19574:	movw	r2, #0
   19578:	cmp	r1, r2
   1957c:	str	r0, [sp, #4]
   19580:	beq	19590 <__assert_fail@plt+0x80b4>
   19584:	ldr	r0, [sp, #12]
   19588:	str	r0, [sp]
   1958c:	b	195a0 <__assert_fail@plt+0x80c4>
   19590:	movw	r0, #25020	; 0x61bc
   19594:	movt	r0, #3
   19598:	str	r0, [sp]
   1959c:	b	195a0 <__assert_fail@plt+0x80c4>
   195a0:	ldr	r0, [sp]
   195a4:	ldr	r1, [sp, #4]
   195a8:	str	r1, [r0]
   195ac:	add	sp, sp, #16
   195b0:	bx	lr
   195b4:	sub	sp, sp, #32
   195b8:	str	r0, [sp, #28]
   195bc:	strb	r1, [sp, #27]
   195c0:	str	r2, [sp, #20]
   195c4:	ldrb	r0, [sp, #27]
   195c8:	strb	r0, [sp, #19]
   195cc:	ldr	r0, [sp, #28]
   195d0:	movw	r1, #0
   195d4:	cmp	r0, r1
   195d8:	beq	195e8 <__assert_fail@plt+0x810c>
   195dc:	ldr	r0, [sp, #28]
   195e0:	str	r0, [sp]
   195e4:	b	195f8 <__assert_fail@plt+0x811c>
   195e8:	movw	r0, #25020	; 0x61bc
   195ec:	movt	r0, #3
   195f0:	str	r0, [sp]
   195f4:	b	195f8 <__assert_fail@plt+0x811c>
   195f8:	ldr	r0, [sp]
   195fc:	add	r0, r0, #8
   19600:	ldrb	r1, [sp, #19]
   19604:	lsr	r1, r1, #5
   19608:	add	r0, r0, r1, lsl #2
   1960c:	str	r0, [sp, #12]
   19610:	ldrb	r0, [sp, #19]
   19614:	and	r0, r0, #31
   19618:	str	r0, [sp, #8]
   1961c:	ldr	r0, [sp, #12]
   19620:	ldr	r0, [r0]
   19624:	ldr	r1, [sp, #8]
   19628:	lsr	r0, r0, r1
   1962c:	and	r0, r0, #1
   19630:	str	r0, [sp, #4]
   19634:	ldr	r0, [sp, #20]
   19638:	and	r0, r0, #1
   1963c:	ldr	r1, [sp, #4]
   19640:	eor	r0, r0, r1
   19644:	ldr	r1, [sp, #8]
   19648:	lsl	r0, r0, r1
   1964c:	ldr	r1, [sp, #12]
   19650:	ldr	r2, [r1]
   19654:	eor	r0, r2, r0
   19658:	str	r0, [r1]
   1965c:	ldr	r0, [sp, #4]
   19660:	add	sp, sp, #32
   19664:	bx	lr
   19668:	sub	sp, sp, #12
   1966c:	str	r0, [sp, #8]
   19670:	str	r1, [sp, #4]
   19674:	ldr	r0, [sp, #8]
   19678:	movw	r1, #0
   1967c:	cmp	r0, r1
   19680:	bne	19690 <__assert_fail@plt+0x81b4>
   19684:	movw	r0, #25020	; 0x61bc
   19688:	movt	r0, #3
   1968c:	str	r0, [sp, #8]
   19690:	ldr	r0, [sp, #8]
   19694:	ldr	r0, [r0, #4]
   19698:	str	r0, [sp]
   1969c:	ldr	r0, [sp, #4]
   196a0:	ldr	r1, [sp, #8]
   196a4:	str	r0, [r1, #4]
   196a8:	ldr	r0, [sp]
   196ac:	add	sp, sp, #12
   196b0:	bx	lr
   196b4:	push	{fp, lr}
   196b8:	mov	fp, sp
   196bc:	sub	sp, sp, #16
   196c0:	str	r0, [fp, #-4]
   196c4:	str	r1, [sp, #8]
   196c8:	str	r2, [sp, #4]
   196cc:	ldr	r0, [fp, #-4]
   196d0:	movw	r1, #0
   196d4:	cmp	r0, r1
   196d8:	bne	196e8 <__assert_fail@plt+0x820c>
   196dc:	movw	r0, #25020	; 0x61bc
   196e0:	movt	r0, #3
   196e4:	str	r0, [fp, #-4]
   196e8:	ldr	r0, [fp, #-4]
   196ec:	movw	r1, #10
   196f0:	str	r1, [r0]
   196f4:	ldr	r0, [sp, #8]
   196f8:	movw	r1, #0
   196fc:	cmp	r0, r1
   19700:	beq	19714 <__assert_fail@plt+0x8238>
   19704:	ldr	r0, [sp, #4]
   19708:	movw	r1, #0
   1970c:	cmp	r0, r1
   19710:	bne	19718 <__assert_fail@plt+0x823c>
   19714:	bl	11494 <abort@plt>
   19718:	ldr	r0, [sp, #8]
   1971c:	ldr	r1, [fp, #-4]
   19720:	str	r0, [r1, #40]	; 0x28
   19724:	ldr	r0, [sp, #4]
   19728:	ldr	r1, [fp, #-4]
   1972c:	str	r0, [r1, #44]	; 0x2c
   19730:	mov	sp, fp
   19734:	pop	{fp, pc}
   19738:	push	{r4, r5, r6, sl, fp, lr}
   1973c:	add	fp, sp, #16
   19740:	sub	sp, sp, #56	; 0x38
   19744:	ldr	ip, [fp, #8]
   19748:	str	r0, [fp, #-20]	; 0xffffffec
   1974c:	str	r1, [fp, #-24]	; 0xffffffe8
   19750:	str	r2, [fp, #-28]	; 0xffffffe4
   19754:	str	r3, [fp, #-32]	; 0xffffffe0
   19758:	ldr	r0, [fp, #8]
   1975c:	movw	r1, #0
   19760:	cmp	r0, r1
   19764:	beq	19774 <__assert_fail@plt+0x8298>
   19768:	ldr	r0, [fp, #8]
   1976c:	str	r0, [sp, #24]
   19770:	b	19784 <__assert_fail@plt+0x82a8>
   19774:	movw	r0, #25020	; 0x61bc
   19778:	movt	r0, #3
   1977c:	str	r0, [sp, #24]
   19780:	b	19784 <__assert_fail@plt+0x82a8>
   19784:	ldr	r0, [sp, #24]
   19788:	str	r0, [sp, #36]	; 0x24
   1978c:	bl	11398 <__errno_location@plt>
   19790:	ldr	r0, [r0]
   19794:	str	r0, [sp, #32]
   19798:	ldr	r0, [fp, #-20]	; 0xffffffec
   1979c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   197a0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   197a4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   197a8:	ldr	ip, [sp, #36]	; 0x24
   197ac:	ldr	ip, [ip]
   197b0:	ldr	lr, [sp, #36]	; 0x24
   197b4:	ldr	lr, [lr, #4]
   197b8:	ldr	r4, [sp, #36]	; 0x24
   197bc:	add	r4, r4, #8
   197c0:	ldr	r5, [sp, #36]	; 0x24
   197c4:	ldr	r5, [r5, #40]	; 0x28
   197c8:	ldr	r6, [sp, #36]	; 0x24
   197cc:	ldr	r6, [r6, #44]	; 0x2c
   197d0:	str	ip, [sp]
   197d4:	str	lr, [sp, #4]
   197d8:	str	r4, [sp, #8]
   197dc:	str	r5, [sp, #12]
   197e0:	str	r6, [sp, #16]
   197e4:	bl	1980c <__assert_fail@plt+0x8330>
   197e8:	str	r0, [sp, #28]
   197ec:	ldr	r0, [sp, #32]
   197f0:	str	r0, [sp, #20]
   197f4:	bl	11398 <__errno_location@plt>
   197f8:	ldr	r1, [sp, #20]
   197fc:	str	r1, [r0]
   19800:	ldr	r0, [sp, #28]
   19804:	sub	sp, fp, #16
   19808:	pop	{r4, r5, r6, sl, fp, pc}
   1980c:	push	{r4, r5, r6, sl, fp, lr}
   19810:	add	fp, sp, #16
   19814:	sub	sp, sp, #160	; 0xa0
   19818:	ldr	ip, [fp, #24]
   1981c:	ldr	lr, [fp, #20]
   19820:	ldr	r4, [fp, #16]
   19824:	ldr	r5, [fp, #12]
   19828:	ldr	r6, [fp, #8]
   1982c:	str	r0, [fp, #-24]	; 0xffffffe8
   19830:	str	r1, [fp, #-28]	; 0xffffffe4
   19834:	str	r2, [fp, #-32]	; 0xffffffe0
   19838:	str	r3, [fp, #-36]	; 0xffffffdc
   1983c:	movw	r0, #0
   19840:	str	r0, [fp, #-44]	; 0xffffffd4
   19844:	str	r0, [fp, #-48]	; 0xffffffd0
   19848:	str	r0, [fp, #-52]	; 0xffffffcc
   1984c:	str	r0, [fp, #-56]	; 0xffffffc8
   19850:	movw	r0, #0
   19854:	strb	r0, [fp, #-57]	; 0xffffffc7
   19858:	str	ip, [sp, #72]	; 0x48
   1985c:	str	lr, [sp, #68]	; 0x44
   19860:	str	r4, [sp, #64]	; 0x40
   19864:	str	r5, [sp, #60]	; 0x3c
   19868:	str	r6, [sp, #56]	; 0x38
   1986c:	bl	112b4 <__ctype_get_mb_cur_max@plt>
   19870:	cmp	r0, #1
   19874:	movw	r0, #0
   19878:	moveq	r0, #1
   1987c:	and	r0, r0, #1
   19880:	strb	r0, [fp, #-58]	; 0xffffffc6
   19884:	ldr	r0, [fp, #12]
   19888:	and	r0, r0, #2
   1988c:	cmp	r0, #0
   19890:	movw	r0, #0
   19894:	movne	r0, #1
   19898:	and	r0, r0, #1
   1989c:	strb	r0, [fp, #-59]	; 0xffffffc5
   198a0:	movw	r0, #0
   198a4:	strb	r0, [fp, #-60]	; 0xffffffc4
   198a8:	strb	r0, [fp, #-61]	; 0xffffffc3
   198ac:	movw	r0, #1
   198b0:	strb	r0, [fp, #-62]	; 0xffffffc2
   198b4:	ldr	r0, [fp, #8]
   198b8:	cmp	r0, #10
   198bc:	str	r0, [sp, #52]	; 0x34
   198c0:	bhi	19ae8 <__assert_fail@plt+0x860c>
   198c4:	add	r0, pc, #8
   198c8:	ldr	r1, [sp, #52]	; 0x34
   198cc:	ldr	r0, [r0, r1, lsl #2]
   198d0:	mov	pc, r0
   198d4:	ldrdeq	r9, [r1], -ip
   198d8:	andeq	r9, r1, r8, asr sl
   198dc:	andeq	r9, r1, r8, ror sl
   198e0:	andeq	r9, r1, r0, asr sl
   198e4:	andeq	r9, r1, r0, ror #20
   198e8:	andeq	r9, r1, r0, lsl r9
   198ec:	andeq	r9, r1, r0, lsl #18
   198f0:	andeq	r9, r1, r4, ror r9
   198f4:	andeq	r9, r1, r8, lsl #19
   198f8:	andeq	r9, r1, r8, lsl #19
   198fc:	andeq	r9, r1, r8, lsl #19
   19900:	movw	r0, #5
   19904:	str	r0, [fp, #8]
   19908:	movw	r0, #1
   1990c:	strb	r0, [fp, #-59]	; 0xffffffc5
   19910:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   19914:	tst	r0, #1
   19918:	bne	19954 <__assert_fail@plt+0x8478>
   1991c:	b	19920 <__assert_fail@plt+0x8444>
   19920:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19924:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19928:	cmp	r0, r1
   1992c:	bcs	19944 <__assert_fail@plt+0x8468>
   19930:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19934:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19938:	add	r0, r0, r1
   1993c:	movw	r1, #34	; 0x22
   19940:	strb	r1, [r0]
   19944:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19948:	add	r0, r0, #1
   1994c:	str	r0, [fp, #-44]	; 0xffffffd4
   19950:	b	19954 <__assert_fail@plt+0x8478>
   19954:	movw	r0, #1
   19958:	strb	r0, [fp, #-57]	; 0xffffffc7
   1995c:	movw	r0, #21196	; 0x52cc
   19960:	movt	r0, #2
   19964:	str	r0, [fp, #-52]	; 0xffffffcc
   19968:	movw	r0, #1
   1996c:	str	r0, [fp, #-56]	; 0xffffffc8
   19970:	b	19aec <__assert_fail@plt+0x8610>
   19974:	movw	r0, #1
   19978:	strb	r0, [fp, #-57]	; 0xffffffc7
   1997c:	movw	r0, #0
   19980:	strb	r0, [fp, #-59]	; 0xffffffc5
   19984:	b	19aec <__assert_fail@plt+0x8610>
   19988:	ldr	r0, [fp, #8]
   1998c:	cmp	r0, #10
   19990:	beq	199bc <__assert_fail@plt+0x84e0>
   19994:	ldr	r1, [fp, #8]
   19998:	movw	r0, #21198	; 0x52ce
   1999c:	movt	r0, #2
   199a0:	bl	1ba00 <__assert_fail@plt+0xa524>
   199a4:	str	r0, [fp, #20]
   199a8:	ldr	r1, [fp, #8]
   199ac:	movw	r0, #21200	; 0x52d0
   199b0:	movt	r0, #2
   199b4:	bl	1ba00 <__assert_fail@plt+0xa524>
   199b8:	str	r0, [fp, #24]
   199bc:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   199c0:	tst	r0, #1
   199c4:	bne	19a30 <__assert_fail@plt+0x8554>
   199c8:	ldr	r0, [fp, #20]
   199cc:	str	r0, [fp, #-52]	; 0xffffffcc
   199d0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   199d4:	ldrsb	r0, [r0]
   199d8:	cmp	r0, #0
   199dc:	beq	19a2c <__assert_fail@plt+0x8550>
   199e0:	b	199e4 <__assert_fail@plt+0x8508>
   199e4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   199e8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   199ec:	cmp	r0, r1
   199f0:	bcs	19a0c <__assert_fail@plt+0x8530>
   199f4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   199f8:	ldrb	r0, [r0]
   199fc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19a00:	ldr	r2, [fp, #-44]	; 0xffffffd4
   19a04:	add	r1, r1, r2
   19a08:	strb	r0, [r1]
   19a0c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19a10:	add	r0, r0, #1
   19a14:	str	r0, [fp, #-44]	; 0xffffffd4
   19a18:	b	19a1c <__assert_fail@plt+0x8540>
   19a1c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   19a20:	add	r0, r0, #1
   19a24:	str	r0, [fp, #-52]	; 0xffffffcc
   19a28:	b	199d0 <__assert_fail@plt+0x84f4>
   19a2c:	b	19a30 <__assert_fail@plt+0x8554>
   19a30:	movw	r0, #1
   19a34:	strb	r0, [fp, #-57]	; 0xffffffc7
   19a38:	ldr	r0, [fp, #24]
   19a3c:	str	r0, [fp, #-52]	; 0xffffffcc
   19a40:	ldr	r0, [fp, #-52]	; 0xffffffcc
   19a44:	bl	1135c <strlen@plt>
   19a48:	str	r0, [fp, #-56]	; 0xffffffc8
   19a4c:	b	19aec <__assert_fail@plt+0x8610>
   19a50:	movw	r0, #1
   19a54:	strb	r0, [fp, #-57]	; 0xffffffc7
   19a58:	movw	r0, #1
   19a5c:	strb	r0, [fp, #-59]	; 0xffffffc5
   19a60:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   19a64:	tst	r0, #1
   19a68:	bne	19a74 <__assert_fail@plt+0x8598>
   19a6c:	movw	r0, #1
   19a70:	strb	r0, [fp, #-57]	; 0xffffffc7
   19a74:	b	19a78 <__assert_fail@plt+0x859c>
   19a78:	movw	r0, #2
   19a7c:	str	r0, [fp, #8]
   19a80:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   19a84:	tst	r0, #1
   19a88:	bne	19ac4 <__assert_fail@plt+0x85e8>
   19a8c:	b	19a90 <__assert_fail@plt+0x85b4>
   19a90:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19a94:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19a98:	cmp	r0, r1
   19a9c:	bcs	19ab4 <__assert_fail@plt+0x85d8>
   19aa0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19aa4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19aa8:	add	r0, r0, r1
   19aac:	movw	r1, #39	; 0x27
   19ab0:	strb	r1, [r0]
   19ab4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19ab8:	add	r0, r0, #1
   19abc:	str	r0, [fp, #-44]	; 0xffffffd4
   19ac0:	b	19ac4 <__assert_fail@plt+0x85e8>
   19ac4:	movw	r0, #21200	; 0x52d0
   19ac8:	movt	r0, #2
   19acc:	str	r0, [fp, #-52]	; 0xffffffcc
   19ad0:	movw	r0, #1
   19ad4:	str	r0, [fp, #-56]	; 0xffffffc8
   19ad8:	b	19aec <__assert_fail@plt+0x8610>
   19adc:	movw	r0, #0
   19ae0:	strb	r0, [fp, #-59]	; 0xffffffc5
   19ae4:	b	19aec <__assert_fail@plt+0x8610>
   19ae8:	bl	11494 <abort@plt>
   19aec:	movw	r0, #0
   19af0:	str	r0, [fp, #-40]	; 0xffffffd8
   19af4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   19af8:	cmn	r0, #1
   19afc:	bne	19b28 <__assert_fail@plt+0x864c>
   19b00:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19b04:	ldr	r1, [fp, #-40]	; 0xffffffd8
   19b08:	add	r0, r0, r1
   19b0c:	ldrb	r0, [r0]
   19b10:	cmp	r0, #0
   19b14:	movw	r0, #0
   19b18:	moveq	r0, #1
   19b1c:	and	r0, r0, #1
   19b20:	str	r0, [sp, #48]	; 0x30
   19b24:	b	19b44 <__assert_fail@plt+0x8668>
   19b28:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19b2c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   19b30:	cmp	r0, r1
   19b34:	movw	r0, #0
   19b38:	moveq	r0, #1
   19b3c:	and	r0, r0, #1
   19b40:	str	r0, [sp, #48]	; 0x30
   19b44:	ldr	r0, [sp, #48]	; 0x30
   19b48:	cmp	r0, #0
   19b4c:	movw	r0, #0
   19b50:	movne	r0, #1
   19b54:	mvn	r1, #0
   19b58:	eor	r0, r0, r1
   19b5c:	tst	r0, #1
   19b60:	beq	1ad4c <__assert_fail@plt+0x9870>
   19b64:	movw	r0, #0
   19b68:	strb	r0, [fp, #-65]	; 0xffffffbf
   19b6c:	strb	r0, [fp, #-66]	; 0xffffffbe
   19b70:	strb	r0, [fp, #-67]	; 0xffffffbd
   19b74:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   19b78:	tst	r0, #1
   19b7c:	beq	19c28 <__assert_fail@plt+0x874c>
   19b80:	ldr	r0, [fp, #8]
   19b84:	cmp	r0, #2
   19b88:	beq	19c28 <__assert_fail@plt+0x874c>
   19b8c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   19b90:	cmp	r0, #0
   19b94:	beq	19c28 <__assert_fail@plt+0x874c>
   19b98:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19b9c:	ldr	r1, [fp, #-56]	; 0xffffffc8
   19ba0:	add	r0, r0, r1
   19ba4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   19ba8:	cmn	r1, #1
   19bac:	str	r0, [sp, #44]	; 0x2c
   19bb0:	bne	19bd8 <__assert_fail@plt+0x86fc>
   19bb4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   19bb8:	movw	r1, #1
   19bbc:	cmp	r1, r0
   19bc0:	bcs	19bd8 <__assert_fail@plt+0x86fc>
   19bc4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19bc8:	bl	1135c <strlen@plt>
   19bcc:	str	r0, [fp, #-36]	; 0xffffffdc
   19bd0:	str	r0, [sp, #40]	; 0x28
   19bd4:	b	19be0 <__assert_fail@plt+0x8704>
   19bd8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   19bdc:	str	r0, [sp, #40]	; 0x28
   19be0:	ldr	r0, [sp, #40]	; 0x28
   19be4:	ldr	r1, [sp, #44]	; 0x2c
   19be8:	cmp	r1, r0
   19bec:	bhi	19c28 <__assert_fail@plt+0x874c>
   19bf0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19bf4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   19bf8:	add	r0, r0, r1
   19bfc:	ldr	r1, [fp, #-52]	; 0xffffffcc
   19c00:	ldr	r2, [fp, #-56]	; 0xffffffc8
   19c04:	bl	11254 <memcmp@plt>
   19c08:	cmp	r0, #0
   19c0c:	bne	19c28 <__assert_fail@plt+0x874c>
   19c10:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   19c14:	tst	r0, #1
   19c18:	beq	19c20 <__assert_fail@plt+0x8744>
   19c1c:	b	1aecc <__assert_fail@plt+0x99f0>
   19c20:	movw	r0, #1
   19c24:	strb	r0, [fp, #-65]	; 0xffffffbf
   19c28:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19c2c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   19c30:	ldrb	r0, [r0, r1]
   19c34:	strb	r0, [fp, #-63]	; 0xffffffc1
   19c38:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   19c3c:	mov	r1, r0
   19c40:	cmp	r0, #126	; 0x7e
   19c44:	str	r1, [sp, #36]	; 0x24
   19c48:	bhi	1a4b8 <__assert_fail@plt+0x8fdc>
   19c4c:	add	r0, pc, #8
   19c50:	ldr	r1, [sp, #36]	; 0x24
   19c54:	ldr	r0, [r0, r1, lsl #2]
   19c58:	mov	pc, r0
   19c5c:	andeq	r9, r1, r8, asr lr
   19c60:			; <UNDEFINED> instruction: 0x0001a4b8
   19c64:			; <UNDEFINED> instruction: 0x0001a4b8
   19c68:			; <UNDEFINED> instruction: 0x0001a4b8
   19c6c:			; <UNDEFINED> instruction: 0x0001a4b8
   19c70:			; <UNDEFINED> instruction: 0x0001a4b8
   19c74:			; <UNDEFINED> instruction: 0x0001a4b8
   19c78:	andeq	sl, r1, r0, ror #4
   19c7c:	andeq	sl, r1, ip, ror #4
   19c80:	muleq	r1, ip, r2
   19c84:	andeq	sl, r1, r4, lsl #5
   19c88:	andeq	sl, r1, r8, lsr #5
   19c8c:	andeq	sl, r1, r8, ror r2
   19c90:	muleq	r1, r0, r2
   19c94:			; <UNDEFINED> instruction: 0x0001a4b8
   19c98:			; <UNDEFINED> instruction: 0x0001a4b8
   19c9c:			; <UNDEFINED> instruction: 0x0001a4b8
   19ca0:			; <UNDEFINED> instruction: 0x0001a4b8
   19ca4:			; <UNDEFINED> instruction: 0x0001a4b8
   19ca8:			; <UNDEFINED> instruction: 0x0001a4b8
   19cac:			; <UNDEFINED> instruction: 0x0001a4b8
   19cb0:			; <UNDEFINED> instruction: 0x0001a4b8
   19cb4:			; <UNDEFINED> instruction: 0x0001a4b8
   19cb8:			; <UNDEFINED> instruction: 0x0001a4b8
   19cbc:			; <UNDEFINED> instruction: 0x0001a4b8
   19cc0:			; <UNDEFINED> instruction: 0x0001a4b8
   19cc4:			; <UNDEFINED> instruction: 0x0001a4b8
   19cc8:			; <UNDEFINED> instruction: 0x0001a4b8
   19ccc:			; <UNDEFINED> instruction: 0x0001a4b8
   19cd0:			; <UNDEFINED> instruction: 0x0001a4b8
   19cd4:			; <UNDEFINED> instruction: 0x0001a4b8
   19cd8:			; <UNDEFINED> instruction: 0x0001a4b8
   19cdc:	andeq	sl, r1, ip, lsl #7
   19ce0:	muleq	r1, r4, r3
   19ce4:	muleq	r1, r4, r3
   19ce8:	andeq	sl, r1, r8, ror r3
   19cec:	muleq	r1, r4, r3
   19cf0:	andeq	sl, r1, ip, lsr #9
   19cf4:	muleq	r1, r4, r3
   19cf8:			; <UNDEFINED> instruction: 0x0001a3b4
   19cfc:	muleq	r1, r4, r3
   19d00:	muleq	r1, r4, r3
   19d04:	muleq	r1, r4, r3
   19d08:	andeq	sl, r1, ip, lsr #9
   19d0c:	andeq	sl, r1, ip, lsr #9
   19d10:	andeq	sl, r1, ip, lsr #9
   19d14:	andeq	sl, r1, ip, lsr #9
   19d18:	andeq	sl, r1, ip, lsr #9
   19d1c:	andeq	sl, r1, ip, lsr #9
   19d20:	andeq	sl, r1, ip, lsr #9
   19d24:	andeq	sl, r1, ip, lsr #9
   19d28:	andeq	sl, r1, ip, lsr #9
   19d2c:	andeq	sl, r1, ip, lsr #9
   19d30:	andeq	sl, r1, ip, lsr #9
   19d34:	andeq	sl, r1, ip, lsr #9
   19d38:	andeq	sl, r1, ip, lsr #9
   19d3c:	andeq	sl, r1, ip, lsr #9
   19d40:	andeq	sl, r1, ip, lsr #9
   19d44:	andeq	sl, r1, ip, lsr #9
   19d48:	muleq	r1, r4, r3
   19d4c:	muleq	r1, r4, r3
   19d50:	muleq	r1, r4, r3
   19d54:	muleq	r1, r4, r3
   19d58:	andeq	sl, r1, r4, rrx
   19d5c:			; <UNDEFINED> instruction: 0x0001a4b8
   19d60:	andeq	sl, r1, ip, lsr #9
   19d64:	andeq	sl, r1, ip, lsr #9
   19d68:	andeq	sl, r1, ip, lsr #9
   19d6c:	andeq	sl, r1, ip, lsr #9
   19d70:	andeq	sl, r1, ip, lsr #9
   19d74:	andeq	sl, r1, ip, lsr #9
   19d78:	andeq	sl, r1, ip, lsr #9
   19d7c:	andeq	sl, r1, ip, lsr #9
   19d80:	andeq	sl, r1, ip, lsr #9
   19d84:	andeq	sl, r1, ip, lsr #9
   19d88:	andeq	sl, r1, ip, lsr #9
   19d8c:	andeq	sl, r1, ip, lsr #9
   19d90:	andeq	sl, r1, ip, lsr #9
   19d94:	andeq	sl, r1, ip, lsr #9
   19d98:	andeq	sl, r1, ip, lsr #9
   19d9c:	andeq	sl, r1, ip, lsr #9
   19da0:	andeq	sl, r1, ip, lsr #9
   19da4:	andeq	sl, r1, ip, lsr #9
   19da8:	andeq	sl, r1, ip, lsr #9
   19dac:	andeq	sl, r1, ip, lsr #9
   19db0:	andeq	sl, r1, ip, lsr #9
   19db4:	andeq	sl, r1, ip, lsr #9
   19db8:	andeq	sl, r1, ip, lsr #9
   19dbc:	andeq	sl, r1, ip, lsr #9
   19dc0:	andeq	sl, r1, ip, lsr #9
   19dc4:	andeq	sl, r1, ip, lsr #9
   19dc8:	muleq	r1, r4, r3
   19dcc:			; <UNDEFINED> instruction: 0x0001a2b4
   19dd0:	andeq	sl, r1, ip, lsr #9
   19dd4:	muleq	r1, r4, r3
   19dd8:	andeq	sl, r1, ip, lsr #9
   19ddc:	muleq	r1, r4, r3
   19de0:	andeq	sl, r1, ip, lsr #9
   19de4:	andeq	sl, r1, ip, lsr #9
   19de8:	andeq	sl, r1, ip, lsr #9
   19dec:	andeq	sl, r1, ip, lsr #9
   19df0:	andeq	sl, r1, ip, lsr #9
   19df4:	andeq	sl, r1, ip, lsr #9
   19df8:	andeq	sl, r1, ip, lsr #9
   19dfc:	andeq	sl, r1, ip, lsr #9
   19e00:	andeq	sl, r1, ip, lsr #9
   19e04:	andeq	sl, r1, ip, lsr #9
   19e08:	andeq	sl, r1, ip, lsr #9
   19e0c:	andeq	sl, r1, ip, lsr #9
   19e10:	andeq	sl, r1, ip, lsr #9
   19e14:	andeq	sl, r1, ip, lsr #9
   19e18:	andeq	sl, r1, ip, lsr #9
   19e1c:	andeq	sl, r1, ip, lsr #9
   19e20:	andeq	sl, r1, ip, lsr #9
   19e24:	andeq	sl, r1, ip, lsr #9
   19e28:	andeq	sl, r1, ip, lsr #9
   19e2c:	andeq	sl, r1, ip, lsr #9
   19e30:	andeq	sl, r1, ip, lsr #9
   19e34:	andeq	sl, r1, ip, lsr #9
   19e38:	andeq	sl, r1, ip, lsr #9
   19e3c:	andeq	sl, r1, ip, lsr #9
   19e40:	andeq	sl, r1, ip, lsr #9
   19e44:	andeq	sl, r1, ip, lsr #9
   19e48:	andeq	sl, r1, r4, asr #6
   19e4c:	muleq	r1, r4, r3
   19e50:	andeq	sl, r1, r4, asr #6
   19e54:	andeq	sl, r1, r8, ror r3
   19e58:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   19e5c:	tst	r0, #1
   19e60:	beq	1a048 <__assert_fail@plt+0x8b6c>
   19e64:	b	19e68 <__assert_fail@plt+0x898c>
   19e68:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   19e6c:	tst	r0, #1
   19e70:	beq	19e78 <__assert_fail@plt+0x899c>
   19e74:	b	1aecc <__assert_fail@plt+0x99f0>
   19e78:	movw	r0, #1
   19e7c:	strb	r0, [fp, #-66]	; 0xffffffbe
   19e80:	ldr	r0, [fp, #8]
   19e84:	cmp	r0, #2
   19e88:	bne	19f3c <__assert_fail@plt+0x8a60>
   19e8c:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   19e90:	tst	r0, #1
   19e94:	bne	19f3c <__assert_fail@plt+0x8a60>
   19e98:	b	19e9c <__assert_fail@plt+0x89c0>
   19e9c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19ea0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19ea4:	cmp	r0, r1
   19ea8:	bcs	19ec0 <__assert_fail@plt+0x89e4>
   19eac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19eb0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19eb4:	add	r0, r0, r1
   19eb8:	movw	r1, #39	; 0x27
   19ebc:	strb	r1, [r0]
   19ec0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19ec4:	add	r0, r0, #1
   19ec8:	str	r0, [fp, #-44]	; 0xffffffd4
   19ecc:	b	19ed0 <__assert_fail@plt+0x89f4>
   19ed0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19ed4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19ed8:	cmp	r0, r1
   19edc:	bcs	19ef4 <__assert_fail@plt+0x8a18>
   19ee0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19ee4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19ee8:	add	r0, r0, r1
   19eec:	movw	r1, #36	; 0x24
   19ef0:	strb	r1, [r0]
   19ef4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19ef8:	add	r0, r0, #1
   19efc:	str	r0, [fp, #-44]	; 0xffffffd4
   19f00:	b	19f04 <__assert_fail@plt+0x8a28>
   19f04:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19f08:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19f0c:	cmp	r0, r1
   19f10:	bcs	19f28 <__assert_fail@plt+0x8a4c>
   19f14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19f18:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19f1c:	add	r0, r0, r1
   19f20:	movw	r1, #39	; 0x27
   19f24:	strb	r1, [r0]
   19f28:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19f2c:	add	r0, r0, #1
   19f30:	str	r0, [fp, #-44]	; 0xffffffd4
   19f34:	movw	r0, #1
   19f38:	strb	r0, [fp, #-60]	; 0xffffffc4
   19f3c:	b	19f40 <__assert_fail@plt+0x8a64>
   19f40:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19f44:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19f48:	cmp	r0, r1
   19f4c:	bcs	19f64 <__assert_fail@plt+0x8a88>
   19f50:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19f54:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19f58:	add	r0, r0, r1
   19f5c:	movw	r1, #92	; 0x5c
   19f60:	strb	r1, [r0]
   19f64:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19f68:	add	r0, r0, #1
   19f6c:	str	r0, [fp, #-44]	; 0xffffffd4
   19f70:	b	19f74 <__assert_fail@plt+0x8a98>
   19f74:	ldr	r0, [fp, #8]
   19f78:	cmp	r0, #2
   19f7c:	beq	1a03c <__assert_fail@plt+0x8b60>
   19f80:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19f84:	add	r0, r0, #1
   19f88:	ldr	r1, [fp, #-36]	; 0xffffffdc
   19f8c:	cmp	r0, r1
   19f90:	bcs	1a03c <__assert_fail@plt+0x8b60>
   19f94:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19f98:	ldr	r1, [fp, #-40]	; 0xffffffd8
   19f9c:	add	r1, r1, #1
   19fa0:	add	r0, r0, r1
   19fa4:	ldrb	r0, [r0]
   19fa8:	movw	r1, #48	; 0x30
   19fac:	cmp	r1, r0
   19fb0:	bgt	1a03c <__assert_fail@plt+0x8b60>
   19fb4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19fb8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   19fbc:	add	r1, r1, #1
   19fc0:	add	r0, r0, r1
   19fc4:	ldrb	r0, [r0]
   19fc8:	cmp	r0, #57	; 0x39
   19fcc:	bgt	1a03c <__assert_fail@plt+0x8b60>
   19fd0:	b	19fd4 <__assert_fail@plt+0x8af8>
   19fd4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19fd8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19fdc:	cmp	r0, r1
   19fe0:	bcs	19ff8 <__assert_fail@plt+0x8b1c>
   19fe4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19fe8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   19fec:	add	r0, r0, r1
   19ff0:	movw	r1, #48	; 0x30
   19ff4:	strb	r1, [r0]
   19ff8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19ffc:	add	r0, r0, #1
   1a000:	str	r0, [fp, #-44]	; 0xffffffd4
   1a004:	b	1a008 <__assert_fail@plt+0x8b2c>
   1a008:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a00c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a010:	cmp	r0, r1
   1a014:	bcs	1a02c <__assert_fail@plt+0x8b50>
   1a018:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a01c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a020:	add	r0, r0, r1
   1a024:	movw	r1, #48	; 0x30
   1a028:	strb	r1, [r0]
   1a02c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a030:	add	r0, r0, #1
   1a034:	str	r0, [fp, #-44]	; 0xffffffd4
   1a038:	b	1a03c <__assert_fail@plt+0x8b60>
   1a03c:	movw	r0, #48	; 0x30
   1a040:	strb	r0, [fp, #-63]	; 0xffffffc1
   1a044:	b	1a060 <__assert_fail@plt+0x8b84>
   1a048:	ldr	r0, [fp, #12]
   1a04c:	and	r0, r0, #1
   1a050:	cmp	r0, #0
   1a054:	beq	1a05c <__assert_fail@plt+0x8b80>
   1a058:	b	1ad3c <__assert_fail@plt+0x9860>
   1a05c:	b	1a060 <__assert_fail@plt+0x8b84>
   1a060:	b	1aad8 <__assert_fail@plt+0x95fc>
   1a064:	ldr	r0, [fp, #8]
   1a068:	cmp	r0, #2
   1a06c:	str	r0, [sp, #32]
   1a070:	beq	1a088 <__assert_fail@plt+0x8bac>
   1a074:	b	1a078 <__assert_fail@plt+0x8b9c>
   1a078:	ldr	r0, [sp, #32]
   1a07c:	cmp	r0, #5
   1a080:	beq	1a09c <__assert_fail@plt+0x8bc0>
   1a084:	b	1a258 <__assert_fail@plt+0x8d7c>
   1a088:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1a08c:	tst	r0, #1
   1a090:	beq	1a098 <__assert_fail@plt+0x8bbc>
   1a094:	b	1aecc <__assert_fail@plt+0x99f0>
   1a098:	b	1a25c <__assert_fail@plt+0x8d80>
   1a09c:	ldr	r0, [fp, #12]
   1a0a0:	and	r0, r0, #4
   1a0a4:	cmp	r0, #0
   1a0a8:	beq	1a254 <__assert_fail@plt+0x8d78>
   1a0ac:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a0b0:	add	r0, r0, #2
   1a0b4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1a0b8:	cmp	r0, r1
   1a0bc:	bcs	1a254 <__assert_fail@plt+0x8d78>
   1a0c0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a0c4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a0c8:	add	r1, r1, #1
   1a0cc:	add	r0, r0, r1
   1a0d0:	ldrb	r0, [r0]
   1a0d4:	cmp	r0, #63	; 0x3f
   1a0d8:	bne	1a254 <__assert_fail@plt+0x8d78>
   1a0dc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a0e0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a0e4:	add	r0, r1, r0
   1a0e8:	ldrb	r0, [r0, #2]
   1a0ec:	mov	r1, r0
   1a0f0:	cmp	r0, #33	; 0x21
   1a0f4:	str	r1, [sp, #28]
   1a0f8:	beq	1a148 <__assert_fail@plt+0x8c6c>
   1a0fc:	b	1a100 <__assert_fail@plt+0x8c24>
   1a100:	ldr	r0, [sp, #28]
   1a104:	sub	r1, r0, #39	; 0x27
   1a108:	cmp	r1, #3
   1a10c:	bcc	1a148 <__assert_fail@plt+0x8c6c>
   1a110:	b	1a114 <__assert_fail@plt+0x8c38>
   1a114:	ldr	r0, [sp, #28]
   1a118:	cmp	r0, #45	; 0x2d
   1a11c:	beq	1a148 <__assert_fail@plt+0x8c6c>
   1a120:	b	1a124 <__assert_fail@plt+0x8c48>
   1a124:	ldr	r0, [sp, #28]
   1a128:	cmp	r0, #47	; 0x2f
   1a12c:	beq	1a148 <__assert_fail@plt+0x8c6c>
   1a130:	b	1a134 <__assert_fail@plt+0x8c58>
   1a134:	ldr	r0, [sp, #28]
   1a138:	sub	r1, r0, #60	; 0x3c
   1a13c:	cmp	r1, #2
   1a140:	bhi	1a24c <__assert_fail@plt+0x8d70>
   1a144:	b	1a148 <__assert_fail@plt+0x8c6c>
   1a148:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1a14c:	tst	r0, #1
   1a150:	beq	1a158 <__assert_fail@plt+0x8c7c>
   1a154:	b	1aecc <__assert_fail@plt+0x99f0>
   1a158:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a15c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a160:	add	r1, r1, #2
   1a164:	add	r0, r0, r1
   1a168:	ldrb	r0, [r0]
   1a16c:	strb	r0, [fp, #-63]	; 0xffffffc1
   1a170:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a174:	add	r0, r0, #2
   1a178:	str	r0, [fp, #-40]	; 0xffffffd8
   1a17c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a180:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a184:	cmp	r0, r1
   1a188:	bcs	1a1a0 <__assert_fail@plt+0x8cc4>
   1a18c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a190:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a194:	add	r0, r0, r1
   1a198:	movw	r1, #63	; 0x3f
   1a19c:	strb	r1, [r0]
   1a1a0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a1a4:	add	r0, r0, #1
   1a1a8:	str	r0, [fp, #-44]	; 0xffffffd4
   1a1ac:	b	1a1b0 <__assert_fail@plt+0x8cd4>
   1a1b0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a1b4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a1b8:	cmp	r0, r1
   1a1bc:	bcs	1a1d4 <__assert_fail@plt+0x8cf8>
   1a1c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a1c4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a1c8:	add	r0, r0, r1
   1a1cc:	movw	r1, #34	; 0x22
   1a1d0:	strb	r1, [r0]
   1a1d4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a1d8:	add	r0, r0, #1
   1a1dc:	str	r0, [fp, #-44]	; 0xffffffd4
   1a1e0:	b	1a1e4 <__assert_fail@plt+0x8d08>
   1a1e4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a1e8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a1ec:	cmp	r0, r1
   1a1f0:	bcs	1a208 <__assert_fail@plt+0x8d2c>
   1a1f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a1f8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a1fc:	add	r0, r0, r1
   1a200:	movw	r1, #34	; 0x22
   1a204:	strb	r1, [r0]
   1a208:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a20c:	add	r0, r0, #1
   1a210:	str	r0, [fp, #-44]	; 0xffffffd4
   1a214:	b	1a218 <__assert_fail@plt+0x8d3c>
   1a218:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a21c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a220:	cmp	r0, r1
   1a224:	bcs	1a23c <__assert_fail@plt+0x8d60>
   1a228:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a22c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a230:	add	r0, r0, r1
   1a234:	movw	r1, #63	; 0x3f
   1a238:	strb	r1, [r0]
   1a23c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a240:	add	r0, r0, #1
   1a244:	str	r0, [fp, #-44]	; 0xffffffd4
   1a248:	b	1a250 <__assert_fail@plt+0x8d74>
   1a24c:	b	1a250 <__assert_fail@plt+0x8d74>
   1a250:	b	1a254 <__assert_fail@plt+0x8d78>
   1a254:	b	1a25c <__assert_fail@plt+0x8d80>
   1a258:	b	1a25c <__assert_fail@plt+0x8d80>
   1a25c:	b	1aad8 <__assert_fail@plt+0x95fc>
   1a260:	movw	r0, #97	; 0x61
   1a264:	strb	r0, [fp, #-64]	; 0xffffffc0
   1a268:	b	1a328 <__assert_fail@plt+0x8e4c>
   1a26c:	movw	r0, #98	; 0x62
   1a270:	strb	r0, [fp, #-64]	; 0xffffffc0
   1a274:	b	1a328 <__assert_fail@plt+0x8e4c>
   1a278:	movw	r0, #102	; 0x66
   1a27c:	strb	r0, [fp, #-64]	; 0xffffffc0
   1a280:	b	1a328 <__assert_fail@plt+0x8e4c>
   1a284:	movw	r0, #110	; 0x6e
   1a288:	strb	r0, [fp, #-64]	; 0xffffffc0
   1a28c:	b	1a308 <__assert_fail@plt+0x8e2c>
   1a290:	movw	r0, #114	; 0x72
   1a294:	strb	r0, [fp, #-64]	; 0xffffffc0
   1a298:	b	1a308 <__assert_fail@plt+0x8e2c>
   1a29c:	movw	r0, #116	; 0x74
   1a2a0:	strb	r0, [fp, #-64]	; 0xffffffc0
   1a2a4:	b	1a308 <__assert_fail@plt+0x8e2c>
   1a2a8:	movw	r0, #118	; 0x76
   1a2ac:	strb	r0, [fp, #-64]	; 0xffffffc0
   1a2b0:	b	1a328 <__assert_fail@plt+0x8e4c>
   1a2b4:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   1a2b8:	strb	r0, [fp, #-64]	; 0xffffffc0
   1a2bc:	ldr	r0, [fp, #8]
   1a2c0:	cmp	r0, #2
   1a2c4:	bne	1a2dc <__assert_fail@plt+0x8e00>
   1a2c8:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1a2cc:	tst	r0, #1
   1a2d0:	beq	1a2d8 <__assert_fail@plt+0x8dfc>
   1a2d4:	b	1aecc <__assert_fail@plt+0x99f0>
   1a2d8:	b	1ac60 <__assert_fail@plt+0x9784>
   1a2dc:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   1a2e0:	tst	r0, #1
   1a2e4:	beq	1a304 <__assert_fail@plt+0x8e28>
   1a2e8:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1a2ec:	tst	r0, #1
   1a2f0:	beq	1a304 <__assert_fail@plt+0x8e28>
   1a2f4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1a2f8:	cmp	r0, #0
   1a2fc:	beq	1a304 <__assert_fail@plt+0x8e28>
   1a300:	b	1ac60 <__assert_fail@plt+0x9784>
   1a304:	b	1a308 <__assert_fail@plt+0x8e2c>
   1a308:	ldr	r0, [fp, #8]
   1a30c:	cmp	r0, #2
   1a310:	bne	1a324 <__assert_fail@plt+0x8e48>
   1a314:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1a318:	tst	r0, #1
   1a31c:	beq	1a324 <__assert_fail@plt+0x8e48>
   1a320:	b	1aecc <__assert_fail@plt+0x99f0>
   1a324:	b	1a328 <__assert_fail@plt+0x8e4c>
   1a328:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   1a32c:	tst	r0, #1
   1a330:	beq	1a340 <__assert_fail@plt+0x8e64>
   1a334:	ldrb	r0, [fp, #-64]	; 0xffffffc0
   1a338:	strb	r0, [fp, #-63]	; 0xffffffc1
   1a33c:	b	1ab4c <__assert_fail@plt+0x9670>
   1a340:	b	1aad8 <__assert_fail@plt+0x95fc>
   1a344:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1a348:	cmn	r0, #1
   1a34c:	bne	1a364 <__assert_fail@plt+0x8e88>
   1a350:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a354:	ldrb	r0, [r0, #1]
   1a358:	cmp	r0, #0
   1a35c:	beq	1a374 <__assert_fail@plt+0x8e98>
   1a360:	b	1a370 <__assert_fail@plt+0x8e94>
   1a364:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1a368:	cmp	r0, #1
   1a36c:	beq	1a374 <__assert_fail@plt+0x8e98>
   1a370:	b	1aad8 <__assert_fail@plt+0x95fc>
   1a374:	b	1a378 <__assert_fail@plt+0x8e9c>
   1a378:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a37c:	cmp	r0, #0
   1a380:	beq	1a388 <__assert_fail@plt+0x8eac>
   1a384:	b	1aad8 <__assert_fail@plt+0x95fc>
   1a388:	b	1a38c <__assert_fail@plt+0x8eb0>
   1a38c:	movw	r0, #1
   1a390:	strb	r0, [fp, #-67]	; 0xffffffbd
   1a394:	ldr	r0, [fp, #8]
   1a398:	cmp	r0, #2
   1a39c:	bne	1a3b0 <__assert_fail@plt+0x8ed4>
   1a3a0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1a3a4:	tst	r0, #1
   1a3a8:	beq	1a3b0 <__assert_fail@plt+0x8ed4>
   1a3ac:	b	1aecc <__assert_fail@plt+0x99f0>
   1a3b0:	b	1aad8 <__assert_fail@plt+0x95fc>
   1a3b4:	movw	r0, #1
   1a3b8:	strb	r0, [fp, #-61]	; 0xffffffc3
   1a3bc:	strb	r0, [fp, #-67]	; 0xffffffbd
   1a3c0:	ldr	r0, [fp, #8]
   1a3c4:	cmp	r0, #2
   1a3c8:	bne	1a4a8 <__assert_fail@plt+0x8fcc>
   1a3cc:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1a3d0:	tst	r0, #1
   1a3d4:	beq	1a3dc <__assert_fail@plt+0x8f00>
   1a3d8:	b	1aecc <__assert_fail@plt+0x99f0>
   1a3dc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1a3e0:	cmp	r0, #0
   1a3e4:	beq	1a404 <__assert_fail@plt+0x8f28>
   1a3e8:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1a3ec:	cmp	r0, #0
   1a3f0:	bne	1a404 <__assert_fail@plt+0x8f28>
   1a3f4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1a3f8:	str	r0, [fp, #-48]	; 0xffffffd0
   1a3fc:	movw	r0, #0
   1a400:	str	r0, [fp, #-28]	; 0xffffffe4
   1a404:	b	1a408 <__assert_fail@plt+0x8f2c>
   1a408:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a40c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a410:	cmp	r0, r1
   1a414:	bcs	1a42c <__assert_fail@plt+0x8f50>
   1a418:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a41c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a420:	add	r0, r0, r1
   1a424:	movw	r1, #39	; 0x27
   1a428:	strb	r1, [r0]
   1a42c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a430:	add	r0, r0, #1
   1a434:	str	r0, [fp, #-44]	; 0xffffffd4
   1a438:	b	1a43c <__assert_fail@plt+0x8f60>
   1a43c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a440:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a444:	cmp	r0, r1
   1a448:	bcs	1a460 <__assert_fail@plt+0x8f84>
   1a44c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a450:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a454:	add	r0, r0, r1
   1a458:	movw	r1, #92	; 0x5c
   1a45c:	strb	r1, [r0]
   1a460:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a464:	add	r0, r0, #1
   1a468:	str	r0, [fp, #-44]	; 0xffffffd4
   1a46c:	b	1a470 <__assert_fail@plt+0x8f94>
   1a470:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a474:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a478:	cmp	r0, r1
   1a47c:	bcs	1a494 <__assert_fail@plt+0x8fb8>
   1a480:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a484:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a488:	add	r0, r0, r1
   1a48c:	movw	r1, #39	; 0x27
   1a490:	strb	r1, [r0]
   1a494:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a498:	add	r0, r0, #1
   1a49c:	str	r0, [fp, #-44]	; 0xffffffd4
   1a4a0:	movw	r0, #0
   1a4a4:	strb	r0, [fp, #-60]	; 0xffffffc4
   1a4a8:	b	1aad8 <__assert_fail@plt+0x95fc>
   1a4ac:	movw	r0, #1
   1a4b0:	strb	r0, [fp, #-67]	; 0xffffffbd
   1a4b4:	b	1aad8 <__assert_fail@plt+0x95fc>
   1a4b8:	ldrb	r0, [fp, #-58]	; 0xffffffc6
   1a4bc:	tst	r0, #1
   1a4c0:	beq	1a500 <__assert_fail@plt+0x9024>
   1a4c4:	mov	r0, #1
   1a4c8:	str	r0, [fp, #-72]	; 0xffffffb8
   1a4cc:	bl	11338 <__ctype_b_loc@plt>
   1a4d0:	ldr	r0, [r0]
   1a4d4:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   1a4d8:	mov	r2, r1
   1a4dc:	add	r0, r0, r1, lsl #1
   1a4e0:	ldrh	r0, [r0]
   1a4e4:	and	r0, r0, #16384	; 0x4000
   1a4e8:	cmp	r0, #0
   1a4ec:	movw	r0, #0
   1a4f0:	movne	r0, #1
   1a4f4:	and	r0, r0, #1
   1a4f8:	strb	r0, [fp, #-73]	; 0xffffffb7
   1a4fc:	b	1a78c <__assert_fail@plt+0x92b0>
   1a500:	sub	r0, fp, #84	; 0x54
   1a504:	movw	r1, #0
   1a508:	and	r1, r1, #255	; 0xff
   1a50c:	movw	r2, #8
   1a510:	bl	113b0 <memset@plt>
   1a514:	movw	r0, #0
   1a518:	str	r0, [fp, #-72]	; 0xffffffb8
   1a51c:	movw	r0, #1
   1a520:	strb	r0, [fp, #-73]	; 0xffffffb7
   1a524:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1a528:	cmn	r0, #1
   1a52c:	bne	1a53c <__assert_fail@plt+0x9060>
   1a530:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a534:	bl	1135c <strlen@plt>
   1a538:	str	r0, [fp, #-36]	; 0xffffffdc
   1a53c:	b	1a540 <__assert_fail@plt+0x9064>
   1a540:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a544:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a548:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1a54c:	add	r1, r1, r2
   1a550:	add	r1, r0, r1
   1a554:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1a558:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1a55c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1a560:	add	r2, r2, r3
   1a564:	sub	r2, r0, r2
   1a568:	add	r0, sp, #88	; 0x58
   1a56c:	sub	r3, fp, #84	; 0x54
   1a570:	bl	22418 <__assert_fail@plt+0x10f3c>
   1a574:	str	r0, [sp, #84]	; 0x54
   1a578:	ldr	r0, [sp, #84]	; 0x54
   1a57c:	cmp	r0, #0
   1a580:	bne	1a588 <__assert_fail@plt+0x90ac>
   1a584:	b	1a788 <__assert_fail@plt+0x92ac>
   1a588:	ldr	r0, [sp, #84]	; 0x54
   1a58c:	cmn	r0, #1
   1a590:	bne	1a5a0 <__assert_fail@plt+0x90c4>
   1a594:	movw	r0, #0
   1a598:	strb	r0, [fp, #-73]	; 0xffffffb7
   1a59c:	b	1a788 <__assert_fail@plt+0x92ac>
   1a5a0:	ldr	r0, [sp, #84]	; 0x54
   1a5a4:	cmn	r0, #2
   1a5a8:	bne	1a61c <__assert_fail@plt+0x9140>
   1a5ac:	movw	r0, #0
   1a5b0:	strb	r0, [fp, #-73]	; 0xffffffb7
   1a5b4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a5b8:	ldr	r1, [fp, #-72]	; 0xffffffb8
   1a5bc:	add	r0, r0, r1
   1a5c0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1a5c4:	cmp	r0, r1
   1a5c8:	movw	r0, #0
   1a5cc:	str	r0, [sp, #24]
   1a5d0:	bcs	1a5fc <__assert_fail@plt+0x9120>
   1a5d4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a5d8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a5dc:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1a5e0:	add	r1, r1, r2
   1a5e4:	add	r0, r0, r1
   1a5e8:	ldrb	r0, [r0]
   1a5ec:	cmp	r0, #0
   1a5f0:	movw	r0, #0
   1a5f4:	movne	r0, #1
   1a5f8:	str	r0, [sp, #24]
   1a5fc:	ldr	r0, [sp, #24]
   1a600:	tst	r0, #1
   1a604:	beq	1a618 <__assert_fail@plt+0x913c>
   1a608:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1a60c:	add	r0, r0, #1
   1a610:	str	r0, [fp, #-72]	; 0xffffffb8
   1a614:	b	1a5b4 <__assert_fail@plt+0x90d8>
   1a618:	b	1a788 <__assert_fail@plt+0x92ac>
   1a61c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1a620:	tst	r0, #1
   1a624:	beq	1a730 <__assert_fail@plt+0x9254>
   1a628:	ldr	r0, [fp, #8]
   1a62c:	cmp	r0, #2
   1a630:	bne	1a730 <__assert_fail@plt+0x9254>
   1a634:	movw	r0, #1
   1a638:	str	r0, [sp, #80]	; 0x50
   1a63c:	ldr	r0, [sp, #80]	; 0x50
   1a640:	ldr	r1, [sp, #84]	; 0x54
   1a644:	cmp	r0, r1
   1a648:	bcs	1a72c <__assert_fail@plt+0x9250>
   1a64c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a650:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a654:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1a658:	add	r1, r1, r2
   1a65c:	ldr	r2, [sp, #80]	; 0x50
   1a660:	add	r1, r1, r2
   1a664:	ldrb	r0, [r0, r1]
   1a668:	sub	r0, r0, #91	; 0x5b
   1a66c:	cmp	r0, #33	; 0x21
   1a670:	str	r0, [sp, #20]
   1a674:	bhi	1a714 <__assert_fail@plt+0x9238>
   1a678:	add	r0, pc, #8
   1a67c:	ldr	r1, [sp, #20]
   1a680:	ldr	r0, [r0, r1, lsl #2]
   1a684:	mov	pc, r0
   1a688:	andeq	sl, r1, r0, lsl r7
   1a68c:	andeq	sl, r1, r0, lsl r7
   1a690:	andeq	sl, r1, r4, lsl r7
   1a694:	andeq	sl, r1, r0, lsl r7
   1a698:	andeq	sl, r1, r4, lsl r7
   1a69c:	andeq	sl, r1, r0, lsl r7
   1a6a0:	andeq	sl, r1, r4, lsl r7
   1a6a4:	andeq	sl, r1, r4, lsl r7
   1a6a8:	andeq	sl, r1, r4, lsl r7
   1a6ac:	andeq	sl, r1, r4, lsl r7
   1a6b0:	andeq	sl, r1, r4, lsl r7
   1a6b4:	andeq	sl, r1, r4, lsl r7
   1a6b8:	andeq	sl, r1, r4, lsl r7
   1a6bc:	andeq	sl, r1, r4, lsl r7
   1a6c0:	andeq	sl, r1, r4, lsl r7
   1a6c4:	andeq	sl, r1, r4, lsl r7
   1a6c8:	andeq	sl, r1, r4, lsl r7
   1a6cc:	andeq	sl, r1, r4, lsl r7
   1a6d0:	andeq	sl, r1, r4, lsl r7
   1a6d4:	andeq	sl, r1, r4, lsl r7
   1a6d8:	andeq	sl, r1, r4, lsl r7
   1a6dc:	andeq	sl, r1, r4, lsl r7
   1a6e0:	andeq	sl, r1, r4, lsl r7
   1a6e4:	andeq	sl, r1, r4, lsl r7
   1a6e8:	andeq	sl, r1, r4, lsl r7
   1a6ec:	andeq	sl, r1, r4, lsl r7
   1a6f0:	andeq	sl, r1, r4, lsl r7
   1a6f4:	andeq	sl, r1, r4, lsl r7
   1a6f8:	andeq	sl, r1, r4, lsl r7
   1a6fc:	andeq	sl, r1, r4, lsl r7
   1a700:	andeq	sl, r1, r4, lsl r7
   1a704:	andeq	sl, r1, r4, lsl r7
   1a708:	andeq	sl, r1, r4, lsl r7
   1a70c:	andeq	sl, r1, r0, lsl r7
   1a710:	b	1aecc <__assert_fail@plt+0x99f0>
   1a714:	b	1a718 <__assert_fail@plt+0x923c>
   1a718:	b	1a71c <__assert_fail@plt+0x9240>
   1a71c:	ldr	r0, [sp, #80]	; 0x50
   1a720:	add	r0, r0, #1
   1a724:	str	r0, [sp, #80]	; 0x50
   1a728:	b	1a63c <__assert_fail@plt+0x9160>
   1a72c:	b	1a730 <__assert_fail@plt+0x9254>
   1a730:	ldr	r0, [sp, #88]	; 0x58
   1a734:	bl	11290 <iswprint@plt>
   1a738:	cmp	r0, #0
   1a73c:	bne	1a748 <__assert_fail@plt+0x926c>
   1a740:	movw	r0, #0
   1a744:	strb	r0, [fp, #-73]	; 0xffffffb7
   1a748:	ldr	r0, [sp, #84]	; 0x54
   1a74c:	ldr	r1, [fp, #-72]	; 0xffffffb8
   1a750:	add	r0, r1, r0
   1a754:	str	r0, [fp, #-72]	; 0xffffffb8
   1a758:	b	1a75c <__assert_fail@plt+0x9280>
   1a75c:	b	1a760 <__assert_fail@plt+0x9284>
   1a760:	b	1a764 <__assert_fail@plt+0x9288>
   1a764:	sub	r0, fp, #84	; 0x54
   1a768:	bl	11248 <mbsinit@plt>
   1a76c:	cmp	r0, #0
   1a770:	movw	r0, #0
   1a774:	movne	r0, #1
   1a778:	mvn	r1, #0
   1a77c:	eor	r0, r0, r1
   1a780:	tst	r0, #1
   1a784:	bne	1a540 <__assert_fail@plt+0x9064>
   1a788:	b	1a78c <__assert_fail@plt+0x92b0>
   1a78c:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   1a790:	and	r0, r0, #1
   1a794:	strb	r0, [fp, #-67]	; 0xffffffbd
   1a798:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1a79c:	movw	r1, #1
   1a7a0:	cmp	r1, r0
   1a7a4:	bcc	1a7c0 <__assert_fail@plt+0x92e4>
   1a7a8:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   1a7ac:	tst	r0, #1
   1a7b0:	beq	1aad4 <__assert_fail@plt+0x95f8>
   1a7b4:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   1a7b8:	tst	r0, #1
   1a7bc:	bne	1aad4 <__assert_fail@plt+0x95f8>
   1a7c0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a7c4:	ldr	r1, [fp, #-72]	; 0xffffffb8
   1a7c8:	add	r0, r0, r1
   1a7cc:	str	r0, [sp, #76]	; 0x4c
   1a7d0:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   1a7d4:	tst	r0, #1
   1a7d8:	beq	1a988 <__assert_fail@plt+0x94ac>
   1a7dc:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   1a7e0:	tst	r0, #1
   1a7e4:	bne	1a988 <__assert_fail@plt+0x94ac>
   1a7e8:	b	1a7ec <__assert_fail@plt+0x9310>
   1a7ec:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1a7f0:	tst	r0, #1
   1a7f4:	beq	1a7fc <__assert_fail@plt+0x9320>
   1a7f8:	b	1aecc <__assert_fail@plt+0x99f0>
   1a7fc:	movw	r0, #1
   1a800:	strb	r0, [fp, #-66]	; 0xffffffbe
   1a804:	ldr	r0, [fp, #8]
   1a808:	cmp	r0, #2
   1a80c:	bne	1a8c0 <__assert_fail@plt+0x93e4>
   1a810:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   1a814:	tst	r0, #1
   1a818:	bne	1a8c0 <__assert_fail@plt+0x93e4>
   1a81c:	b	1a820 <__assert_fail@plt+0x9344>
   1a820:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a824:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a828:	cmp	r0, r1
   1a82c:	bcs	1a844 <__assert_fail@plt+0x9368>
   1a830:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a834:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a838:	add	r0, r0, r1
   1a83c:	movw	r1, #39	; 0x27
   1a840:	strb	r1, [r0]
   1a844:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a848:	add	r0, r0, #1
   1a84c:	str	r0, [fp, #-44]	; 0xffffffd4
   1a850:	b	1a854 <__assert_fail@plt+0x9378>
   1a854:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a858:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a85c:	cmp	r0, r1
   1a860:	bcs	1a878 <__assert_fail@plt+0x939c>
   1a864:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a868:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a86c:	add	r0, r0, r1
   1a870:	movw	r1, #36	; 0x24
   1a874:	strb	r1, [r0]
   1a878:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a87c:	add	r0, r0, #1
   1a880:	str	r0, [fp, #-44]	; 0xffffffd4
   1a884:	b	1a888 <__assert_fail@plt+0x93ac>
   1a888:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a88c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a890:	cmp	r0, r1
   1a894:	bcs	1a8ac <__assert_fail@plt+0x93d0>
   1a898:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a89c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a8a0:	add	r0, r0, r1
   1a8a4:	movw	r1, #39	; 0x27
   1a8a8:	strb	r1, [r0]
   1a8ac:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a8b0:	add	r0, r0, #1
   1a8b4:	str	r0, [fp, #-44]	; 0xffffffd4
   1a8b8:	movw	r0, #1
   1a8bc:	strb	r0, [fp, #-60]	; 0xffffffc4
   1a8c0:	b	1a8c4 <__assert_fail@plt+0x93e8>
   1a8c4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a8c8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a8cc:	cmp	r0, r1
   1a8d0:	bcs	1a8e8 <__assert_fail@plt+0x940c>
   1a8d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a8d8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a8dc:	add	r0, r0, r1
   1a8e0:	movw	r1, #92	; 0x5c
   1a8e4:	strb	r1, [r0]
   1a8e8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a8ec:	add	r0, r0, #1
   1a8f0:	str	r0, [fp, #-44]	; 0xffffffd4
   1a8f4:	b	1a8f8 <__assert_fail@plt+0x941c>
   1a8f8:	b	1a8fc <__assert_fail@plt+0x9420>
   1a8fc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a900:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a904:	cmp	r0, r1
   1a908:	bcs	1a928 <__assert_fail@plt+0x944c>
   1a90c:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   1a910:	asr	r0, r0, #6
   1a914:	add	r0, r0, #48	; 0x30
   1a918:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a91c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1a920:	add	r1, r1, r2
   1a924:	strb	r0, [r1]
   1a928:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a92c:	add	r0, r0, #1
   1a930:	str	r0, [fp, #-44]	; 0xffffffd4
   1a934:	b	1a938 <__assert_fail@plt+0x945c>
   1a938:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a93c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a940:	cmp	r0, r1
   1a944:	bcs	1a968 <__assert_fail@plt+0x948c>
   1a948:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   1a94c:	asr	r0, r0, #3
   1a950:	and	r0, r0, #7
   1a954:	add	r0, r0, #48	; 0x30
   1a958:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a95c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1a960:	add	r1, r1, r2
   1a964:	strb	r0, [r1]
   1a968:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a96c:	add	r0, r0, #1
   1a970:	str	r0, [fp, #-44]	; 0xffffffd4
   1a974:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   1a978:	and	r0, r0, #7
   1a97c:	add	r0, r0, #48	; 0x30
   1a980:	strb	r0, [fp, #-63]	; 0xffffffc1
   1a984:	b	1a9d4 <__assert_fail@plt+0x94f8>
   1a988:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   1a98c:	tst	r0, #1
   1a990:	beq	1a9d0 <__assert_fail@plt+0x94f4>
   1a994:	b	1a998 <__assert_fail@plt+0x94bc>
   1a998:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a99c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a9a0:	cmp	r0, r1
   1a9a4:	bcs	1a9bc <__assert_fail@plt+0x94e0>
   1a9a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a9ac:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1a9b0:	add	r0, r0, r1
   1a9b4:	movw	r1, #92	; 0x5c
   1a9b8:	strb	r1, [r0]
   1a9bc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a9c0:	add	r0, r0, #1
   1a9c4:	str	r0, [fp, #-44]	; 0xffffffd4
   1a9c8:	movw	r0, #0
   1a9cc:	strb	r0, [fp, #-65]	; 0xffffffbf
   1a9d0:	b	1a9d4 <__assert_fail@plt+0x94f8>
   1a9d4:	ldr	r0, [sp, #76]	; 0x4c
   1a9d8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1a9dc:	add	r1, r1, #1
   1a9e0:	cmp	r0, r1
   1a9e4:	bhi	1a9ec <__assert_fail@plt+0x9510>
   1a9e8:	b	1aad0 <__assert_fail@plt+0x95f4>
   1a9ec:	b	1a9f0 <__assert_fail@plt+0x9514>
   1a9f0:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   1a9f4:	tst	r0, #1
   1a9f8:	beq	1aa78 <__assert_fail@plt+0x959c>
   1a9fc:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   1aa00:	tst	r0, #1
   1aa04:	bne	1aa78 <__assert_fail@plt+0x959c>
   1aa08:	b	1aa0c <__assert_fail@plt+0x9530>
   1aa0c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1aa10:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1aa14:	cmp	r0, r1
   1aa18:	bcs	1aa30 <__assert_fail@plt+0x9554>
   1aa1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1aa20:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1aa24:	add	r0, r0, r1
   1aa28:	movw	r1, #39	; 0x27
   1aa2c:	strb	r1, [r0]
   1aa30:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1aa34:	add	r0, r0, #1
   1aa38:	str	r0, [fp, #-44]	; 0xffffffd4
   1aa3c:	b	1aa40 <__assert_fail@plt+0x9564>
   1aa40:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1aa44:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1aa48:	cmp	r0, r1
   1aa4c:	bcs	1aa64 <__assert_fail@plt+0x9588>
   1aa50:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1aa54:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1aa58:	add	r0, r0, r1
   1aa5c:	movw	r1, #39	; 0x27
   1aa60:	strb	r1, [r0]
   1aa64:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1aa68:	add	r0, r0, #1
   1aa6c:	str	r0, [fp, #-44]	; 0xffffffd4
   1aa70:	movw	r0, #0
   1aa74:	strb	r0, [fp, #-60]	; 0xffffffc4
   1aa78:	b	1aa7c <__assert_fail@plt+0x95a0>
   1aa7c:	b	1aa80 <__assert_fail@plt+0x95a4>
   1aa80:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1aa84:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1aa88:	cmp	r0, r1
   1aa8c:	bcs	1aaa4 <__assert_fail@plt+0x95c8>
   1aa90:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   1aa94:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1aa98:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1aa9c:	add	r1, r1, r2
   1aaa0:	strb	r0, [r1]
   1aaa4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1aaa8:	add	r0, r0, #1
   1aaac:	str	r0, [fp, #-44]	; 0xffffffd4
   1aab0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1aab4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1aab8:	add	r1, r1, #1
   1aabc:	str	r1, [fp, #-40]	; 0xffffffd8
   1aac0:	add	r0, r0, r1
   1aac4:	ldrb	r0, [r0]
   1aac8:	strb	r0, [fp, #-63]	; 0xffffffc1
   1aacc:	b	1a7d0 <__assert_fail@plt+0x92f4>
   1aad0:	b	1ac60 <__assert_fail@plt+0x9784>
   1aad4:	b	1aad8 <__assert_fail@plt+0x95fc>
   1aad8:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   1aadc:	tst	r0, #1
   1aae0:	beq	1aaf0 <__assert_fail@plt+0x9614>
   1aae4:	ldr	r0, [fp, #8]
   1aae8:	cmp	r0, #2
   1aaec:	bne	1aafc <__assert_fail@plt+0x9620>
   1aaf0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1aaf4:	tst	r0, #1
   1aaf8:	beq	1ab38 <__assert_fail@plt+0x965c>
   1aafc:	ldr	r0, [fp, #16]
   1ab00:	movw	r1, #0
   1ab04:	cmp	r0, r1
   1ab08:	beq	1ab38 <__assert_fail@plt+0x965c>
   1ab0c:	ldr	r0, [fp, #16]
   1ab10:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   1ab14:	lsr	r1, r1, #5
   1ab18:	add	r0, r0, r1, lsl #2
   1ab1c:	ldr	r0, [r0]
   1ab20:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   1ab24:	and	r1, r1, #31
   1ab28:	lsr	r0, r0, r1
   1ab2c:	and	r0, r0, #1
   1ab30:	cmp	r0, #0
   1ab34:	bne	1ab48 <__assert_fail@plt+0x966c>
   1ab38:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   1ab3c:	tst	r0, #1
   1ab40:	bne	1ab48 <__assert_fail@plt+0x966c>
   1ab44:	b	1ac60 <__assert_fail@plt+0x9784>
   1ab48:	b	1ab4c <__assert_fail@plt+0x9670>
   1ab4c:	b	1ab50 <__assert_fail@plt+0x9674>
   1ab50:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1ab54:	tst	r0, #1
   1ab58:	beq	1ab60 <__assert_fail@plt+0x9684>
   1ab5c:	b	1aecc <__assert_fail@plt+0x99f0>
   1ab60:	movw	r0, #1
   1ab64:	strb	r0, [fp, #-66]	; 0xffffffbe
   1ab68:	ldr	r0, [fp, #8]
   1ab6c:	cmp	r0, #2
   1ab70:	bne	1ac24 <__assert_fail@plt+0x9748>
   1ab74:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   1ab78:	tst	r0, #1
   1ab7c:	bne	1ac24 <__assert_fail@plt+0x9748>
   1ab80:	b	1ab84 <__assert_fail@plt+0x96a8>
   1ab84:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1ab88:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1ab8c:	cmp	r0, r1
   1ab90:	bcs	1aba8 <__assert_fail@plt+0x96cc>
   1ab94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ab98:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1ab9c:	add	r0, r0, r1
   1aba0:	movw	r1, #39	; 0x27
   1aba4:	strb	r1, [r0]
   1aba8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1abac:	add	r0, r0, #1
   1abb0:	str	r0, [fp, #-44]	; 0xffffffd4
   1abb4:	b	1abb8 <__assert_fail@plt+0x96dc>
   1abb8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1abbc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1abc0:	cmp	r0, r1
   1abc4:	bcs	1abdc <__assert_fail@plt+0x9700>
   1abc8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1abcc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1abd0:	add	r0, r0, r1
   1abd4:	movw	r1, #36	; 0x24
   1abd8:	strb	r1, [r0]
   1abdc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1abe0:	add	r0, r0, #1
   1abe4:	str	r0, [fp, #-44]	; 0xffffffd4
   1abe8:	b	1abec <__assert_fail@plt+0x9710>
   1abec:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1abf0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1abf4:	cmp	r0, r1
   1abf8:	bcs	1ac10 <__assert_fail@plt+0x9734>
   1abfc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ac00:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1ac04:	add	r0, r0, r1
   1ac08:	movw	r1, #39	; 0x27
   1ac0c:	strb	r1, [r0]
   1ac10:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1ac14:	add	r0, r0, #1
   1ac18:	str	r0, [fp, #-44]	; 0xffffffd4
   1ac1c:	movw	r0, #1
   1ac20:	strb	r0, [fp, #-60]	; 0xffffffc4
   1ac24:	b	1ac28 <__assert_fail@plt+0x974c>
   1ac28:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1ac2c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1ac30:	cmp	r0, r1
   1ac34:	bcs	1ac4c <__assert_fail@plt+0x9770>
   1ac38:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ac3c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1ac40:	add	r0, r0, r1
   1ac44:	movw	r1, #92	; 0x5c
   1ac48:	strb	r1, [r0]
   1ac4c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1ac50:	add	r0, r0, #1
   1ac54:	str	r0, [fp, #-44]	; 0xffffffd4
   1ac58:	b	1ac5c <__assert_fail@plt+0x9780>
   1ac5c:	b	1ac60 <__assert_fail@plt+0x9784>
   1ac60:	b	1ac64 <__assert_fail@plt+0x9788>
   1ac64:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   1ac68:	tst	r0, #1
   1ac6c:	beq	1acec <__assert_fail@plt+0x9810>
   1ac70:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   1ac74:	tst	r0, #1
   1ac78:	bne	1acec <__assert_fail@plt+0x9810>
   1ac7c:	b	1ac80 <__assert_fail@plt+0x97a4>
   1ac80:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1ac84:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1ac88:	cmp	r0, r1
   1ac8c:	bcs	1aca4 <__assert_fail@plt+0x97c8>
   1ac90:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ac94:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1ac98:	add	r0, r0, r1
   1ac9c:	movw	r1, #39	; 0x27
   1aca0:	strb	r1, [r0]
   1aca4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1aca8:	add	r0, r0, #1
   1acac:	str	r0, [fp, #-44]	; 0xffffffd4
   1acb0:	b	1acb4 <__assert_fail@plt+0x97d8>
   1acb4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1acb8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1acbc:	cmp	r0, r1
   1acc0:	bcs	1acd8 <__assert_fail@plt+0x97fc>
   1acc4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1acc8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1accc:	add	r0, r0, r1
   1acd0:	movw	r1, #39	; 0x27
   1acd4:	strb	r1, [r0]
   1acd8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1acdc:	add	r0, r0, #1
   1ace0:	str	r0, [fp, #-44]	; 0xffffffd4
   1ace4:	movw	r0, #0
   1ace8:	strb	r0, [fp, #-60]	; 0xffffffc4
   1acec:	b	1acf0 <__assert_fail@plt+0x9814>
   1acf0:	b	1acf4 <__assert_fail@plt+0x9818>
   1acf4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1acf8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1acfc:	cmp	r0, r1
   1ad00:	bcs	1ad18 <__assert_fail@plt+0x983c>
   1ad04:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   1ad08:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ad0c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1ad10:	add	r1, r1, r2
   1ad14:	strb	r0, [r1]
   1ad18:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1ad1c:	add	r0, r0, #1
   1ad20:	str	r0, [fp, #-44]	; 0xffffffd4
   1ad24:	ldrb	r0, [fp, #-67]	; 0xffffffbd
   1ad28:	tst	r0, #1
   1ad2c:	bne	1ad38 <__assert_fail@plt+0x985c>
   1ad30:	movw	r0, #0
   1ad34:	strb	r0, [fp, #-62]	; 0xffffffc2
   1ad38:	b	1ad3c <__assert_fail@plt+0x9860>
   1ad3c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1ad40:	add	r0, r0, #1
   1ad44:	str	r0, [fp, #-40]	; 0xffffffd8
   1ad48:	b	19af4 <__assert_fail@plt+0x8618>
   1ad4c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1ad50:	cmp	r0, #0
   1ad54:	bne	1ad74 <__assert_fail@plt+0x9898>
   1ad58:	ldr	r0, [fp, #8]
   1ad5c:	cmp	r0, #2
   1ad60:	bne	1ad74 <__assert_fail@plt+0x9898>
   1ad64:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1ad68:	tst	r0, #1
   1ad6c:	beq	1ad74 <__assert_fail@plt+0x9898>
   1ad70:	b	1aecc <__assert_fail@plt+0x99f0>
   1ad74:	ldr	r0, [fp, #8]
   1ad78:	cmp	r0, #2
   1ad7c:	bne	1ae1c <__assert_fail@plt+0x9940>
   1ad80:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1ad84:	tst	r0, #1
   1ad88:	bne	1ae1c <__assert_fail@plt+0x9940>
   1ad8c:	ldrb	r0, [fp, #-61]	; 0xffffffc3
   1ad90:	tst	r0, #1
   1ad94:	beq	1ae1c <__assert_fail@plt+0x9940>
   1ad98:	ldrb	r0, [fp, #-62]	; 0xffffffc2
   1ad9c:	tst	r0, #1
   1ada0:	beq	1ade8 <__assert_fail@plt+0x990c>
   1ada4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ada8:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1adac:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1adb0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1adb4:	ldr	ip, [fp, #12]
   1adb8:	ldr	lr, [fp, #16]
   1adbc:	ldr	r4, [fp, #20]
   1adc0:	ldr	r5, [fp, #24]
   1adc4:	movw	r6, #5
   1adc8:	str	r6, [sp]
   1adcc:	str	ip, [sp, #4]
   1add0:	str	lr, [sp, #8]
   1add4:	str	r4, [sp, #12]
   1add8:	str	r5, [sp, #16]
   1addc:	bl	1980c <__assert_fail@plt+0x8330>
   1ade0:	str	r0, [fp, #-20]	; 0xffffffec
   1ade4:	b	1af34 <__assert_fail@plt+0x9a58>
   1ade8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1adec:	cmp	r0, #0
   1adf0:	bne	1ae14 <__assert_fail@plt+0x9938>
   1adf4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1adf8:	cmp	r0, #0
   1adfc:	beq	1ae14 <__assert_fail@plt+0x9938>
   1ae00:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1ae04:	str	r0, [fp, #-28]	; 0xffffffe4
   1ae08:	movw	r0, #0
   1ae0c:	str	r0, [fp, #-44]	; 0xffffffd4
   1ae10:	b	198b4 <__assert_fail@plt+0x83d8>
   1ae14:	b	1ae18 <__assert_fail@plt+0x993c>
   1ae18:	b	1ae1c <__assert_fail@plt+0x9940>
   1ae1c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1ae20:	movw	r1, #0
   1ae24:	cmp	r0, r1
   1ae28:	beq	1ae9c <__assert_fail@plt+0x99c0>
   1ae2c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1ae30:	tst	r0, #1
   1ae34:	bne	1ae9c <__assert_fail@plt+0x99c0>
   1ae38:	b	1ae3c <__assert_fail@plt+0x9960>
   1ae3c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1ae40:	ldrsb	r0, [r0]
   1ae44:	cmp	r0, #0
   1ae48:	beq	1ae98 <__assert_fail@plt+0x99bc>
   1ae4c:	b	1ae50 <__assert_fail@plt+0x9974>
   1ae50:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1ae54:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1ae58:	cmp	r0, r1
   1ae5c:	bcs	1ae78 <__assert_fail@plt+0x999c>
   1ae60:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1ae64:	ldrb	r0, [r0]
   1ae68:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ae6c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1ae70:	add	r1, r1, r2
   1ae74:	strb	r0, [r1]
   1ae78:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1ae7c:	add	r0, r0, #1
   1ae80:	str	r0, [fp, #-44]	; 0xffffffd4
   1ae84:	b	1ae88 <__assert_fail@plt+0x99ac>
   1ae88:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1ae8c:	add	r0, r0, #1
   1ae90:	str	r0, [fp, #-52]	; 0xffffffcc
   1ae94:	b	1ae3c <__assert_fail@plt+0x9960>
   1ae98:	b	1ae9c <__assert_fail@plt+0x99c0>
   1ae9c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1aea0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1aea4:	cmp	r0, r1
   1aea8:	bcs	1aec0 <__assert_fail@plt+0x99e4>
   1aeac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1aeb0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1aeb4:	add	r0, r0, r1
   1aeb8:	movw	r1, #0
   1aebc:	strb	r1, [r0]
   1aec0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1aec4:	str	r0, [fp, #-20]	; 0xffffffec
   1aec8:	b	1af34 <__assert_fail@plt+0x9a58>
   1aecc:	ldr	r0, [fp, #8]
   1aed0:	cmp	r0, #2
   1aed4:	bne	1aeec <__assert_fail@plt+0x9a10>
   1aed8:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   1aedc:	tst	r0, #1
   1aee0:	beq	1aeec <__assert_fail@plt+0x9a10>
   1aee4:	movw	r0, #4
   1aee8:	str	r0, [fp, #8]
   1aeec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1aef0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1aef4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1aef8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1aefc:	ldr	ip, [fp, #8]
   1af00:	ldr	lr, [fp, #12]
   1af04:	mvn	r4, #2
   1af08:	and	lr, lr, r4
   1af0c:	ldr	r4, [fp, #20]
   1af10:	ldr	r5, [fp, #24]
   1af14:	str	ip, [sp]
   1af18:	str	lr, [sp, #4]
   1af1c:	movw	ip, #0
   1af20:	str	ip, [sp, #8]
   1af24:	str	r4, [sp, #12]
   1af28:	str	r5, [sp, #16]
   1af2c:	bl	1980c <__assert_fail@plt+0x8330>
   1af30:	str	r0, [fp, #-20]	; 0xffffffec
   1af34:	ldr	r0, [fp, #-20]	; 0xffffffec
   1af38:	sub	sp, fp, #16
   1af3c:	pop	{r4, r5, r6, sl, fp, pc}
   1af40:	push	{fp, lr}
   1af44:	mov	fp, sp
   1af48:	sub	sp, sp, #16
   1af4c:	str	r0, [fp, #-4]
   1af50:	str	r1, [sp, #8]
   1af54:	str	r2, [sp, #4]
   1af58:	ldr	r0, [fp, #-4]
   1af5c:	ldr	r1, [sp, #8]
   1af60:	ldr	r3, [sp, #4]
   1af64:	movw	r2, #0
   1af68:	bl	1af74 <__assert_fail@plt+0x9a98>
   1af6c:	mov	sp, fp
   1af70:	pop	{fp, pc}
   1af74:	push	{r4, r5, r6, sl, fp, lr}
   1af78:	add	fp, sp, #16
   1af7c:	sub	sp, sp, #80	; 0x50
   1af80:	str	r0, [fp, #-20]	; 0xffffffec
   1af84:	str	r1, [fp, #-24]	; 0xffffffe8
   1af88:	str	r2, [fp, #-28]	; 0xffffffe4
   1af8c:	str	r3, [fp, #-32]	; 0xffffffe0
   1af90:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1af94:	movw	r1, #0
   1af98:	cmp	r0, r1
   1af9c:	beq	1afac <__assert_fail@plt+0x9ad0>
   1afa0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1afa4:	str	r0, [sp, #40]	; 0x28
   1afa8:	b	1afbc <__assert_fail@plt+0x9ae0>
   1afac:	movw	r0, #25020	; 0x61bc
   1afb0:	movt	r0, #3
   1afb4:	str	r0, [sp, #40]	; 0x28
   1afb8:	b	1afbc <__assert_fail@plt+0x9ae0>
   1afbc:	ldr	r0, [sp, #40]	; 0x28
   1afc0:	str	r0, [fp, #-36]	; 0xffffffdc
   1afc4:	bl	11398 <__errno_location@plt>
   1afc8:	ldr	r0, [r0]
   1afcc:	str	r0, [fp, #-40]	; 0xffffffd8
   1afd0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1afd4:	ldr	r0, [r0, #4]
   1afd8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1afdc:	movw	r2, #0
   1afe0:	cmp	r1, r2
   1afe4:	movw	r1, #0
   1afe8:	movne	r1, #1
   1afec:	tst	r1, #1
   1aff0:	mov	r1, r2
   1aff4:	moveq	r1, #1
   1aff8:	orr	r0, r0, r1
   1affc:	str	r0, [fp, #-44]	; 0xffffffd4
   1b000:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b004:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b008:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1b00c:	ldr	r1, [r1]
   1b010:	ldr	ip, [fp, #-44]	; 0xffffffd4
   1b014:	ldr	lr, [fp, #-36]	; 0xffffffdc
   1b018:	add	lr, lr, #8
   1b01c:	ldr	r4, [fp, #-36]	; 0xffffffdc
   1b020:	ldr	r4, [r4, #40]	; 0x28
   1b024:	ldr	r5, [fp, #-36]	; 0xffffffdc
   1b028:	ldr	r5, [r5, #44]	; 0x2c
   1b02c:	str	r0, [sp, #36]	; 0x24
   1b030:	mov	r0, r2
   1b034:	str	r1, [sp, #32]
   1b038:	mov	r1, r2
   1b03c:	ldr	r2, [sp, #36]	; 0x24
   1b040:	ldr	r6, [sp, #32]
   1b044:	str	r6, [sp]
   1b048:	str	ip, [sp, #4]
   1b04c:	str	lr, [sp, #8]
   1b050:	str	r4, [sp, #12]
   1b054:	str	r5, [sp, #16]
   1b058:	bl	1980c <__assert_fail@plt+0x8330>
   1b05c:	add	r0, r0, #1
   1b060:	str	r0, [sp, #48]	; 0x30
   1b064:	ldr	r0, [sp, #48]	; 0x30
   1b068:	bl	1c540 <__assert_fail@plt+0xb064>
   1b06c:	str	r0, [sp, #44]	; 0x2c
   1b070:	ldr	r0, [sp, #44]	; 0x2c
   1b074:	ldr	r1, [sp, #48]	; 0x30
   1b078:	ldr	r2, [fp, #-20]	; 0xffffffec
   1b07c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b080:	ldr	ip, [fp, #-36]	; 0xffffffdc
   1b084:	ldr	ip, [ip]
   1b088:	ldr	lr, [fp, #-44]	; 0xffffffd4
   1b08c:	ldr	r4, [fp, #-36]	; 0xffffffdc
   1b090:	add	r4, r4, #8
   1b094:	ldr	r5, [fp, #-36]	; 0xffffffdc
   1b098:	ldr	r5, [r5, #40]	; 0x28
   1b09c:	ldr	r6, [fp, #-36]	; 0xffffffdc
   1b0a0:	ldr	r6, [r6, #44]	; 0x2c
   1b0a4:	str	ip, [sp]
   1b0a8:	str	lr, [sp, #4]
   1b0ac:	str	r4, [sp, #8]
   1b0b0:	str	r5, [sp, #12]
   1b0b4:	str	r6, [sp, #16]
   1b0b8:	bl	1980c <__assert_fail@plt+0x8330>
   1b0bc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1b0c0:	str	r0, [sp, #28]
   1b0c4:	str	r1, [sp, #24]
   1b0c8:	bl	11398 <__errno_location@plt>
   1b0cc:	ldr	r1, [sp, #24]
   1b0d0:	str	r1, [r0]
   1b0d4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1b0d8:	movw	r2, #0
   1b0dc:	cmp	r0, r2
   1b0e0:	beq	1b0f4 <__assert_fail@plt+0x9c18>
   1b0e4:	ldr	r0, [sp, #48]	; 0x30
   1b0e8:	sub	r0, r0, #1
   1b0ec:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1b0f0:	str	r0, [r1]
   1b0f4:	ldr	r0, [sp, #44]	; 0x2c
   1b0f8:	sub	sp, fp, #16
   1b0fc:	pop	{r4, r5, r6, sl, fp, pc}
   1b100:	push	{fp, lr}
   1b104:	mov	fp, sp
   1b108:	sub	sp, sp, #8
   1b10c:	movw	r0, #24884	; 0x6134
   1b110:	movt	r0, #3
   1b114:	ldr	r0, [r0]
   1b118:	str	r0, [sp, #4]
   1b11c:	movw	r0, #1
   1b120:	str	r0, [sp]
   1b124:	ldr	r0, [sp]
   1b128:	movw	r1, #24888	; 0x6138
   1b12c:	movt	r1, #3
   1b130:	ldr	r1, [r1]
   1b134:	cmp	r0, r1
   1b138:	bge	1b160 <__assert_fail@plt+0x9c84>
   1b13c:	ldr	r0, [sp, #4]
   1b140:	ldr	r1, [sp]
   1b144:	add	r0, r0, r1, lsl #3
   1b148:	ldr	r0, [r0, #4]
   1b14c:	bl	1382c <__assert_fail@plt+0x2350>
   1b150:	ldr	r0, [sp]
   1b154:	add	r0, r0, #1
   1b158:	str	r0, [sp]
   1b15c:	b	1b124 <__assert_fail@plt+0x9c48>
   1b160:	ldr	r0, [sp, #4]
   1b164:	ldr	r0, [r0, #4]
   1b168:	movw	r1, #25068	; 0x61ec
   1b16c:	movt	r1, #3
   1b170:	cmp	r0, r1
   1b174:	beq	1b1a0 <__assert_fail@plt+0x9cc4>
   1b178:	ldr	r0, [sp, #4]
   1b17c:	ldr	r0, [r0, #4]
   1b180:	bl	1382c <__assert_fail@plt+0x2350>
   1b184:	movw	r0, #256	; 0x100
   1b188:	movw	r1, #24892	; 0x613c
   1b18c:	movt	r1, #3
   1b190:	str	r0, [r1]
   1b194:	movw	r0, #25068	; 0x61ec
   1b198:	movt	r0, #3
   1b19c:	str	r0, [r1, #4]
   1b1a0:	ldr	r0, [sp, #4]
   1b1a4:	movw	r1, #24892	; 0x613c
   1b1a8:	movt	r1, #3
   1b1ac:	cmp	r0, r1
   1b1b0:	beq	1b1d0 <__assert_fail@plt+0x9cf4>
   1b1b4:	ldr	r0, [sp, #4]
   1b1b8:	bl	1382c <__assert_fail@plt+0x2350>
   1b1bc:	movw	r0, #24884	; 0x6134
   1b1c0:	movt	r0, #3
   1b1c4:	movw	r1, #24892	; 0x613c
   1b1c8:	movt	r1, #3
   1b1cc:	str	r1, [r0]
   1b1d0:	movw	r0, #24888	; 0x6138
   1b1d4:	movt	r0, #3
   1b1d8:	movw	r1, #1
   1b1dc:	str	r1, [r0]
   1b1e0:	mov	sp, fp
   1b1e4:	pop	{fp, pc}
   1b1e8:	push	{fp, lr}
   1b1ec:	mov	fp, sp
   1b1f0:	sub	sp, sp, #8
   1b1f4:	str	r0, [sp, #4]
   1b1f8:	str	r1, [sp]
   1b1fc:	ldr	r0, [sp, #4]
   1b200:	ldr	r1, [sp]
   1b204:	mvn	r2, #0
   1b208:	movw	r3, #25020	; 0x61bc
   1b20c:	movt	r3, #3
   1b210:	bl	1b21c <__assert_fail@plt+0x9d40>
   1b214:	mov	sp, fp
   1b218:	pop	{fp, pc}
   1b21c:	push	{r4, r5, r6, sl, fp, lr}
   1b220:	add	fp, sp, #16
   1b224:	sub	sp, sp, #80	; 0x50
   1b228:	str	r0, [fp, #-20]	; 0xffffffec
   1b22c:	str	r1, [fp, #-24]	; 0xffffffe8
   1b230:	str	r2, [fp, #-28]	; 0xffffffe4
   1b234:	str	r3, [fp, #-32]	; 0xffffffe0
   1b238:	bl	11398 <__errno_location@plt>
   1b23c:	ldr	r1, [pc, #672]	; 1b4e4 <__assert_fail@plt+0xa008>
   1b240:	ldr	r0, [r0]
   1b244:	str	r0, [fp, #-36]	; 0xffffffdc
   1b248:	movw	r0, #24884	; 0x6134
   1b24c:	movt	r0, #3
   1b250:	ldr	r0, [r0]
   1b254:	str	r0, [fp, #-40]	; 0xffffffd8
   1b258:	str	r1, [fp, #-44]	; 0xffffffd4
   1b25c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b260:	movw	r1, #0
   1b264:	cmp	r1, r0
   1b268:	bgt	1b27c <__assert_fail@plt+0x9da0>
   1b26c:	ldr	r0, [fp, #-20]	; 0xffffffec
   1b270:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1b274:	cmp	r0, r1
   1b278:	blt	1b280 <__assert_fail@plt+0x9da4>
   1b27c:	bl	11494 <abort@plt>
   1b280:	movw	r0, #24888	; 0x6138
   1b284:	movt	r0, #3
   1b288:	ldr	r0, [r0]
   1b28c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1b290:	cmp	r0, r1
   1b294:	bgt	1b38c <__assert_fail@plt+0x9eb0>
   1b298:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1b29c:	movw	r1, #24892	; 0x613c
   1b2a0:	movt	r1, #3
   1b2a4:	cmp	r0, r1
   1b2a8:	movw	r0, #0
   1b2ac:	moveq	r0, #1
   1b2b0:	and	r0, r0, #1
   1b2b4:	strb	r0, [fp, #-45]	; 0xffffffd3
   1b2b8:	movw	r0, #24888	; 0x6138
   1b2bc:	movt	r0, #3
   1b2c0:	ldr	r0, [r0]
   1b2c4:	str	r0, [sp, #44]	; 0x2c
   1b2c8:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   1b2cc:	tst	r0, #1
   1b2d0:	beq	1b2e0 <__assert_fail@plt+0x9e04>
   1b2d4:	movw	r0, #0
   1b2d8:	str	r0, [sp, #24]
   1b2dc:	b	1b2e8 <__assert_fail@plt+0x9e0c>
   1b2e0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1b2e4:	str	r0, [sp, #24]
   1b2e8:	ldr	r0, [sp, #24]
   1b2ec:	ldr	r1, [fp, #-20]	; 0xffffffec
   1b2f0:	movw	r2, #24888	; 0x6138
   1b2f4:	movt	r2, #3
   1b2f8:	ldr	r2, [r2]
   1b2fc:	sub	r1, r1, r2
   1b300:	add	r2, r1, #1
   1b304:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1b308:	add	r1, sp, #44	; 0x2c
   1b30c:	movw	ip, #8
   1b310:	str	ip, [sp]
   1b314:	bl	1c77c <__assert_fail@plt+0xb2a0>
   1b318:	str	r0, [fp, #-40]	; 0xffffffd8
   1b31c:	movw	r1, #24884	; 0x6134
   1b320:	movt	r1, #3
   1b324:	str	r0, [r1]
   1b328:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   1b32c:	tst	r0, #1
   1b330:	beq	1b350 <__assert_fail@plt+0x9e74>
   1b334:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1b338:	movw	r1, #24892	; 0x613c
   1b33c:	movt	r1, #3
   1b340:	ldr	r2, [r1]
   1b344:	str	r2, [r0]
   1b348:	ldr	r1, [r1, #4]
   1b34c:	str	r1, [r0, #4]
   1b350:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1b354:	movw	r1, #24888	; 0x6138
   1b358:	movt	r1, #3
   1b35c:	ldr	r1, [r1]
   1b360:	add	r0, r0, r1, lsl #3
   1b364:	ldr	r2, [sp, #44]	; 0x2c
   1b368:	sub	r1, r2, r1
   1b36c:	lsl	r2, r1, #3
   1b370:	movw	r1, #0
   1b374:	and	r1, r1, #255	; 0xff
   1b378:	bl	113b0 <memset@plt>
   1b37c:	ldr	r0, [sp, #44]	; 0x2c
   1b380:	movw	r1, #24888	; 0x6138
   1b384:	movt	r1, #3
   1b388:	str	r0, [r1]
   1b38c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1b390:	ldr	r1, [fp, #-20]	; 0xffffffec
   1b394:	ldr	r0, [r0, r1, lsl #3]
   1b398:	str	r0, [sp, #40]	; 0x28
   1b39c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1b3a0:	ldr	r1, [fp, #-20]	; 0xffffffec
   1b3a4:	add	r0, r0, r1, lsl #3
   1b3a8:	ldr	r0, [r0, #4]
   1b3ac:	str	r0, [sp, #36]	; 0x24
   1b3b0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1b3b4:	ldr	r0, [r0, #4]
   1b3b8:	orr	r0, r0, #1
   1b3bc:	str	r0, [sp, #32]
   1b3c0:	ldr	r0, [sp, #36]	; 0x24
   1b3c4:	ldr	r1, [sp, #40]	; 0x28
   1b3c8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1b3cc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b3d0:	ldr	ip, [fp, #-32]	; 0xffffffe0
   1b3d4:	ldr	ip, [ip]
   1b3d8:	ldr	lr, [sp, #32]
   1b3dc:	ldr	r4, [fp, #-32]	; 0xffffffe0
   1b3e0:	add	r4, r4, #8
   1b3e4:	ldr	r5, [fp, #-32]	; 0xffffffe0
   1b3e8:	ldr	r5, [r5, #40]	; 0x28
   1b3ec:	ldr	r6, [fp, #-32]	; 0xffffffe0
   1b3f0:	ldr	r6, [r6, #44]	; 0x2c
   1b3f4:	str	ip, [sp]
   1b3f8:	str	lr, [sp, #4]
   1b3fc:	str	r4, [sp, #8]
   1b400:	str	r5, [sp, #12]
   1b404:	str	r6, [sp, #16]
   1b408:	bl	1980c <__assert_fail@plt+0x8330>
   1b40c:	str	r0, [sp, #28]
   1b410:	ldr	r0, [sp, #40]	; 0x28
   1b414:	ldr	r1, [sp, #28]
   1b418:	cmp	r0, r1
   1b41c:	bhi	1b4c4 <__assert_fail@plt+0x9fe8>
   1b420:	ldr	r0, [sp, #28]
   1b424:	add	r0, r0, #1
   1b428:	str	r0, [sp, #40]	; 0x28
   1b42c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1b430:	ldr	r2, [fp, #-20]	; 0xffffffec
   1b434:	add	r1, r1, r2, lsl #3
   1b438:	str	r0, [r1]
   1b43c:	ldr	r0, [sp, #36]	; 0x24
   1b440:	movw	r1, #25068	; 0x61ec
   1b444:	movt	r1, #3
   1b448:	cmp	r0, r1
   1b44c:	beq	1b458 <__assert_fail@plt+0x9f7c>
   1b450:	ldr	r0, [sp, #36]	; 0x24
   1b454:	bl	1382c <__assert_fail@plt+0x2350>
   1b458:	ldr	r0, [sp, #40]	; 0x28
   1b45c:	bl	1c540 <__assert_fail@plt+0xb064>
   1b460:	mov	r1, r0
   1b464:	str	r0, [sp, #36]	; 0x24
   1b468:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1b46c:	ldr	r2, [fp, #-20]	; 0xffffffec
   1b470:	add	r0, r0, r2, lsl #3
   1b474:	str	r1, [r0, #4]
   1b478:	ldr	r0, [sp, #36]	; 0x24
   1b47c:	ldr	r1, [sp, #40]	; 0x28
   1b480:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1b484:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b488:	ldr	ip, [fp, #-32]	; 0xffffffe0
   1b48c:	ldr	ip, [ip]
   1b490:	ldr	lr, [sp, #32]
   1b494:	ldr	r4, [fp, #-32]	; 0xffffffe0
   1b498:	add	r4, r4, #8
   1b49c:	ldr	r5, [fp, #-32]	; 0xffffffe0
   1b4a0:	ldr	r5, [r5, #40]	; 0x28
   1b4a4:	ldr	r6, [fp, #-32]	; 0xffffffe0
   1b4a8:	ldr	r6, [r6, #44]	; 0x2c
   1b4ac:	str	ip, [sp]
   1b4b0:	str	lr, [sp, #4]
   1b4b4:	str	r4, [sp, #8]
   1b4b8:	str	r5, [sp, #12]
   1b4bc:	str	r6, [sp, #16]
   1b4c0:	bl	1980c <__assert_fail@plt+0x8330>
   1b4c4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1b4c8:	str	r0, [sp, #20]
   1b4cc:	bl	11398 <__errno_location@plt>
   1b4d0:	ldr	r1, [sp, #20]
   1b4d4:	str	r1, [r0]
   1b4d8:	ldr	r0, [sp, #36]	; 0x24
   1b4dc:	sub	sp, fp, #16
   1b4e0:	pop	{r4, r5, r6, sl, fp, pc}
   1b4e4:	svcvc	0x00ffffff
   1b4e8:	push	{fp, lr}
   1b4ec:	mov	fp, sp
   1b4f0:	sub	sp, sp, #16
   1b4f4:	str	r0, [fp, #-4]
   1b4f8:	str	r1, [sp, #8]
   1b4fc:	str	r2, [sp, #4]
   1b500:	ldr	r0, [fp, #-4]
   1b504:	ldr	r1, [sp, #8]
   1b508:	ldr	r2, [sp, #4]
   1b50c:	movw	r3, #25020	; 0x61bc
   1b510:	movt	r3, #3
   1b514:	bl	1b21c <__assert_fail@plt+0x9d40>
   1b518:	mov	sp, fp
   1b51c:	pop	{fp, pc}
   1b520:	push	{fp, lr}
   1b524:	mov	fp, sp
   1b528:	sub	sp, sp, #8
   1b52c:	str	r0, [sp, #4]
   1b530:	ldr	r1, [sp, #4]
   1b534:	movw	r0, #0
   1b538:	bl	1b1e8 <__assert_fail@plt+0x9d0c>
   1b53c:	mov	sp, fp
   1b540:	pop	{fp, pc}
   1b544:	push	{fp, lr}
   1b548:	mov	fp, sp
   1b54c:	sub	sp, sp, #8
   1b550:	str	r0, [sp, #4]
   1b554:	str	r1, [sp]
   1b558:	ldr	r1, [sp, #4]
   1b55c:	ldr	r2, [sp]
   1b560:	movw	r0, #0
   1b564:	bl	1b4e8 <__assert_fail@plt+0xa00c>
   1b568:	mov	sp, fp
   1b56c:	pop	{fp, pc}
   1b570:	push	{fp, lr}
   1b574:	mov	fp, sp
   1b578:	sub	sp, sp, #64	; 0x40
   1b57c:	str	r0, [fp, #-4]
   1b580:	str	r1, [fp, #-8]
   1b584:	str	r2, [fp, #-12]
   1b588:	ldr	r1, [fp, #-8]
   1b58c:	add	r0, sp, #4
   1b590:	bl	1b5b0 <__assert_fail@plt+0xa0d4>
   1b594:	ldr	r0, [fp, #-4]
   1b598:	ldr	r1, [fp, #-12]
   1b59c:	mvn	r2, #0
   1b5a0:	add	r3, sp, #4
   1b5a4:	bl	1b21c <__assert_fail@plt+0x9d40>
   1b5a8:	mov	sp, fp
   1b5ac:	pop	{fp, pc}
   1b5b0:	push	{fp, lr}
   1b5b4:	mov	fp, sp
   1b5b8:	sub	sp, sp, #8
   1b5bc:	str	r1, [sp, #4]
   1b5c0:	mov	r1, r0
   1b5c4:	str	r0, [sp]
   1b5c8:	mov	r0, r1
   1b5cc:	movw	r1, #0
   1b5d0:	and	r1, r1, #255	; 0xff
   1b5d4:	movw	r2, #48	; 0x30
   1b5d8:	bl	113b0 <memset@plt>
   1b5dc:	ldr	r0, [sp, #4]
   1b5e0:	cmp	r0, #10
   1b5e4:	bne	1b5ec <__assert_fail@plt+0xa110>
   1b5e8:	bl	11494 <abort@plt>
   1b5ec:	ldr	r0, [sp, #4]
   1b5f0:	ldr	r1, [sp]
   1b5f4:	str	r0, [r1]
   1b5f8:	mov	sp, fp
   1b5fc:	pop	{fp, pc}
   1b600:	push	{fp, lr}
   1b604:	mov	fp, sp
   1b608:	sub	sp, sp, #64	; 0x40
   1b60c:	str	r0, [fp, #-4]
   1b610:	str	r1, [fp, #-8]
   1b614:	str	r2, [fp, #-12]
   1b618:	str	r3, [fp, #-16]
   1b61c:	ldr	r1, [fp, #-8]
   1b620:	mov	r0, sp
   1b624:	bl	1b5b0 <__assert_fail@plt+0xa0d4>
   1b628:	ldr	r0, [fp, #-4]
   1b62c:	ldr	r1, [fp, #-12]
   1b630:	ldr	r2, [fp, #-16]
   1b634:	mov	r3, sp
   1b638:	bl	1b21c <__assert_fail@plt+0x9d40>
   1b63c:	mov	sp, fp
   1b640:	pop	{fp, pc}
   1b644:	push	{fp, lr}
   1b648:	mov	fp, sp
   1b64c:	sub	sp, sp, #8
   1b650:	str	r0, [sp, #4]
   1b654:	str	r1, [sp]
   1b658:	ldr	r1, [sp, #4]
   1b65c:	ldr	r2, [sp]
   1b660:	movw	r0, #0
   1b664:	bl	1b570 <__assert_fail@plt+0xa094>
   1b668:	mov	sp, fp
   1b66c:	pop	{fp, pc}
   1b670:	push	{fp, lr}
   1b674:	mov	fp, sp
   1b678:	sub	sp, sp, #16
   1b67c:	str	r0, [fp, #-4]
   1b680:	str	r1, [sp, #8]
   1b684:	str	r2, [sp, #4]
   1b688:	ldr	r1, [fp, #-4]
   1b68c:	ldr	r2, [sp, #8]
   1b690:	ldr	r3, [sp, #4]
   1b694:	movw	r0, #0
   1b698:	bl	1b600 <__assert_fail@plt+0xa124>
   1b69c:	mov	sp, fp
   1b6a0:	pop	{fp, pc}
   1b6a4:	push	{fp, lr}
   1b6a8:	mov	fp, sp
   1b6ac:	sub	sp, sp, #72	; 0x48
   1b6b0:	movw	r3, #25020	; 0x61bc
   1b6b4:	movt	r3, #3
   1b6b8:	str	r0, [fp, #-4]
   1b6bc:	str	r1, [fp, #-8]
   1b6c0:	strb	r2, [fp, #-9]
   1b6c4:	add	r0, sp, #12
   1b6c8:	mov	r1, r0
   1b6cc:	str	r0, [sp, #8]
   1b6d0:	mov	r0, r1
   1b6d4:	mov	r1, r3
   1b6d8:	movw	r2, #48	; 0x30
   1b6dc:	bl	1123c <memcpy@plt>
   1b6e0:	ldr	r0, [sp, #8]
   1b6e4:	ldrb	r1, [fp, #-9]
   1b6e8:	movw	r2, #1
   1b6ec:	bl	195b4 <__assert_fail@plt+0x80d8>
   1b6f0:	ldr	r1, [fp, #-4]
   1b6f4:	ldr	r2, [fp, #-8]
   1b6f8:	movw	r3, #0
   1b6fc:	str	r0, [sp, #4]
   1b700:	mov	r0, r3
   1b704:	add	r3, sp, #12
   1b708:	bl	1b21c <__assert_fail@plt+0x9d40>
   1b70c:	mov	sp, fp
   1b710:	pop	{fp, pc}
   1b714:	push	{fp, lr}
   1b718:	mov	fp, sp
   1b71c:	sub	sp, sp, #8
   1b720:	str	r0, [sp, #4]
   1b724:	strb	r1, [sp, #3]
   1b728:	ldr	r0, [sp, #4]
   1b72c:	mvn	r1, #0
   1b730:	ldrb	r2, [sp, #3]
   1b734:	bl	1b6a4 <__assert_fail@plt+0xa1c8>
   1b738:	mov	sp, fp
   1b73c:	pop	{fp, pc}
   1b740:	push	{fp, lr}
   1b744:	mov	fp, sp
   1b748:	sub	sp, sp, #8
   1b74c:	str	r0, [sp, #4]
   1b750:	ldr	r0, [sp, #4]
   1b754:	movw	r1, #58	; 0x3a
   1b758:	and	r1, r1, #255	; 0xff
   1b75c:	bl	1b714 <__assert_fail@plt+0xa238>
   1b760:	mov	sp, fp
   1b764:	pop	{fp, pc}
   1b768:	push	{fp, lr}
   1b76c:	mov	fp, sp
   1b770:	sub	sp, sp, #8
   1b774:	str	r0, [sp, #4]
   1b778:	str	r1, [sp]
   1b77c:	ldr	r0, [sp, #4]
   1b780:	ldr	r1, [sp]
   1b784:	movw	r2, #58	; 0x3a
   1b788:	and	r2, r2, #255	; 0xff
   1b78c:	bl	1b6a4 <__assert_fail@plt+0xa1c8>
   1b790:	mov	sp, fp
   1b794:	pop	{fp, pc}
   1b798:	push	{fp, lr}
   1b79c:	mov	fp, sp
   1b7a0:	sub	sp, sp, #120	; 0x78
   1b7a4:	str	r0, [fp, #-4]
   1b7a8:	str	r1, [fp, #-8]
   1b7ac:	str	r2, [fp, #-12]
   1b7b0:	ldr	r1, [fp, #-8]
   1b7b4:	add	r0, sp, #12
   1b7b8:	bl	1b5b0 <__assert_fail@plt+0xa0d4>
   1b7bc:	add	r0, sp, #60	; 0x3c
   1b7c0:	mov	r1, r0
   1b7c4:	add	r2, sp, #12
   1b7c8:	str	r0, [sp, #8]
   1b7cc:	mov	r0, r1
   1b7d0:	mov	r1, r2
   1b7d4:	movw	r2, #48	; 0x30
   1b7d8:	bl	1123c <memcpy@plt>
   1b7dc:	ldr	r0, [sp, #8]
   1b7e0:	movw	r1, #58	; 0x3a
   1b7e4:	and	r1, r1, #255	; 0xff
   1b7e8:	movw	r2, #1
   1b7ec:	bl	195b4 <__assert_fail@plt+0x80d8>
   1b7f0:	ldr	r1, [fp, #-4]
   1b7f4:	ldr	r2, [fp, #-12]
   1b7f8:	str	r0, [sp, #4]
   1b7fc:	mov	r0, r1
   1b800:	mov	r1, r2
   1b804:	mvn	r2, #0
   1b808:	add	r3, sp, #60	; 0x3c
   1b80c:	bl	1b21c <__assert_fail@plt+0x9d40>
   1b810:	mov	sp, fp
   1b814:	pop	{fp, pc}
   1b818:	push	{fp, lr}
   1b81c:	mov	fp, sp
   1b820:	sub	sp, sp, #24
   1b824:	str	r0, [fp, #-4]
   1b828:	str	r1, [fp, #-8]
   1b82c:	str	r2, [sp, #12]
   1b830:	str	r3, [sp, #8]
   1b834:	ldr	r0, [fp, #-4]
   1b838:	ldr	r1, [fp, #-8]
   1b83c:	ldr	r2, [sp, #12]
   1b840:	ldr	r3, [sp, #8]
   1b844:	mvn	ip, #0
   1b848:	str	ip, [sp]
   1b84c:	bl	1b858 <__assert_fail@plt+0xa37c>
   1b850:	mov	sp, fp
   1b854:	pop	{fp, pc}
   1b858:	push	{fp, lr}
   1b85c:	mov	fp, sp
   1b860:	sub	sp, sp, #72	; 0x48
   1b864:	ldr	ip, [fp, #8]
   1b868:	movw	lr, #25020	; 0x61bc
   1b86c:	movt	lr, #3
   1b870:	str	r0, [fp, #-4]
   1b874:	str	r1, [fp, #-8]
   1b878:	str	r2, [fp, #-12]
   1b87c:	str	r3, [fp, #-16]
   1b880:	add	r0, sp, #8
   1b884:	mov	r1, r0
   1b888:	str	r0, [sp, #4]
   1b88c:	mov	r0, r1
   1b890:	mov	r1, lr
   1b894:	movw	r2, #48	; 0x30
   1b898:	str	ip, [sp]
   1b89c:	bl	1123c <memcpy@plt>
   1b8a0:	ldr	r1, [fp, #-8]
   1b8a4:	ldr	r2, [fp, #-12]
   1b8a8:	ldr	r0, [sp, #4]
   1b8ac:	bl	196b4 <__assert_fail@plt+0x81d8>
   1b8b0:	ldr	r0, [fp, #-4]
   1b8b4:	ldr	r1, [fp, #-16]
   1b8b8:	ldr	r2, [fp, #8]
   1b8bc:	add	r3, sp, #8
   1b8c0:	bl	1b21c <__assert_fail@plt+0x9d40>
   1b8c4:	mov	sp, fp
   1b8c8:	pop	{fp, pc}
   1b8cc:	push	{fp, lr}
   1b8d0:	mov	fp, sp
   1b8d4:	sub	sp, sp, #16
   1b8d8:	str	r0, [fp, #-4]
   1b8dc:	str	r1, [sp, #8]
   1b8e0:	str	r2, [sp, #4]
   1b8e4:	ldr	r1, [fp, #-4]
   1b8e8:	ldr	r2, [sp, #8]
   1b8ec:	ldr	r3, [sp, #4]
   1b8f0:	movw	r0, #0
   1b8f4:	bl	1b818 <__assert_fail@plt+0xa33c>
   1b8f8:	mov	sp, fp
   1b8fc:	pop	{fp, pc}
   1b900:	push	{fp, lr}
   1b904:	mov	fp, sp
   1b908:	sub	sp, sp, #24
   1b90c:	str	r0, [fp, #-4]
   1b910:	str	r1, [fp, #-8]
   1b914:	str	r2, [sp, #12]
   1b918:	str	r3, [sp, #8]
   1b91c:	ldr	r1, [fp, #-4]
   1b920:	ldr	r2, [fp, #-8]
   1b924:	ldr	r3, [sp, #12]
   1b928:	ldr	r0, [sp, #8]
   1b92c:	movw	ip, #0
   1b930:	str	r0, [sp, #4]
   1b934:	mov	r0, ip
   1b938:	ldr	ip, [sp, #4]
   1b93c:	str	ip, [sp]
   1b940:	bl	1b858 <__assert_fail@plt+0xa37c>
   1b944:	mov	sp, fp
   1b948:	pop	{fp, pc}
   1b94c:	push	{fp, lr}
   1b950:	mov	fp, sp
   1b954:	sub	sp, sp, #16
   1b958:	str	r0, [fp, #-4]
   1b95c:	str	r1, [sp, #8]
   1b960:	str	r2, [sp, #4]
   1b964:	ldr	r0, [fp, #-4]
   1b968:	ldr	r1, [sp, #8]
   1b96c:	ldr	r2, [sp, #4]
   1b970:	movw	r3, #24900	; 0x6144
   1b974:	movt	r3, #3
   1b978:	bl	1b21c <__assert_fail@plt+0x9d40>
   1b97c:	mov	sp, fp
   1b980:	pop	{fp, pc}
   1b984:	push	{fp, lr}
   1b988:	mov	fp, sp
   1b98c:	sub	sp, sp, #8
   1b990:	str	r0, [sp, #4]
   1b994:	str	r1, [sp]
   1b998:	ldr	r1, [sp, #4]
   1b99c:	ldr	r2, [sp]
   1b9a0:	movw	r0, #0
   1b9a4:	bl	1b94c <__assert_fail@plt+0xa470>
   1b9a8:	mov	sp, fp
   1b9ac:	pop	{fp, pc}
   1b9b0:	push	{fp, lr}
   1b9b4:	mov	fp, sp
   1b9b8:	sub	sp, sp, #8
   1b9bc:	str	r0, [sp, #4]
   1b9c0:	str	r1, [sp]
   1b9c4:	ldr	r0, [sp, #4]
   1b9c8:	ldr	r1, [sp]
   1b9cc:	mvn	r2, #0
   1b9d0:	bl	1b94c <__assert_fail@plt+0xa470>
   1b9d4:	mov	sp, fp
   1b9d8:	pop	{fp, pc}
   1b9dc:	push	{fp, lr}
   1b9e0:	mov	fp, sp
   1b9e4:	sub	sp, sp, #8
   1b9e8:	str	r0, [sp, #4]
   1b9ec:	ldr	r1, [sp, #4]
   1b9f0:	movw	r0, #0
   1b9f4:	bl	1b9b0 <__assert_fail@plt+0xa4d4>
   1b9f8:	mov	sp, fp
   1b9fc:	pop	{fp, pc}
   1ba00:	push	{fp, lr}
   1ba04:	mov	fp, sp
   1ba08:	sub	sp, sp, #24
   1ba0c:	str	r0, [fp, #-8]
   1ba10:	str	r1, [sp, #12]
   1ba14:	ldr	r0, [fp, #-8]
   1ba18:	bl	11350 <gettext@plt>
   1ba1c:	str	r0, [sp, #8]
   1ba20:	ldr	r0, [sp, #8]
   1ba24:	ldr	r1, [fp, #-8]
   1ba28:	cmp	r0, r1
   1ba2c:	beq	1ba3c <__assert_fail@plt+0xa560>
   1ba30:	ldr	r0, [sp, #8]
   1ba34:	str	r0, [fp, #-4]
   1ba38:	b	1bb08 <__assert_fail@plt+0xa62c>
   1ba3c:	bl	223bc <__assert_fail@plt+0x10ee0>
   1ba40:	str	r0, [sp, #4]
   1ba44:	ldr	r0, [sp, #4]
   1ba48:	movw	r1, #21202	; 0x52d2
   1ba4c:	movt	r1, #2
   1ba50:	bl	21770 <__assert_fail@plt+0x10294>
   1ba54:	cmp	r0, #0
   1ba58:	bne	1ba90 <__assert_fail@plt+0xa5b4>
   1ba5c:	ldr	r0, [fp, #-8]
   1ba60:	ldrb	r0, [r0]
   1ba64:	cmp	r0, #96	; 0x60
   1ba68:	movw	r0, #0
   1ba6c:	moveq	r0, #1
   1ba70:	tst	r0, #1
   1ba74:	movw	r0, #21212	; 0x52dc
   1ba78:	movt	r0, #2
   1ba7c:	movw	r1, #21208	; 0x52d8
   1ba80:	movt	r1, #2
   1ba84:	movne	r0, r1
   1ba88:	str	r0, [fp, #-4]
   1ba8c:	b	1bb08 <__assert_fail@plt+0xa62c>
   1ba90:	ldr	r0, [sp, #4]
   1ba94:	movw	r1, #21216	; 0x52e0
   1ba98:	movt	r1, #2
   1ba9c:	bl	21770 <__assert_fail@plt+0x10294>
   1baa0:	cmp	r0, #0
   1baa4:	bne	1badc <__assert_fail@plt+0xa600>
   1baa8:	ldr	r0, [fp, #-8]
   1baac:	ldrb	r0, [r0]
   1bab0:	cmp	r0, #96	; 0x60
   1bab4:	movw	r0, #0
   1bab8:	moveq	r0, #1
   1babc:	tst	r0, #1
   1bac0:	movw	r0, #21228	; 0x52ec
   1bac4:	movt	r0, #2
   1bac8:	movw	r1, #21224	; 0x52e8
   1bacc:	movt	r1, #2
   1bad0:	movne	r0, r1
   1bad4:	str	r0, [fp, #-4]
   1bad8:	b	1bb08 <__assert_fail@plt+0xa62c>
   1badc:	ldr	r0, [sp, #12]
   1bae0:	cmp	r0, #9
   1bae4:	movw	r0, #0
   1bae8:	moveq	r0, #1
   1baec:	tst	r0, #1
   1baf0:	movw	r0, #21200	; 0x52d0
   1baf4:	movt	r0, #2
   1baf8:	movw	r1, #21196	; 0x52cc
   1bafc:	movt	r1, #2
   1bb00:	movne	r0, r1
   1bb04:	str	r0, [fp, #-4]
   1bb08:	ldr	r0, [fp, #-4]
   1bb0c:	mov	sp, fp
   1bb10:	pop	{fp, pc}
   1bb14:	push	{fp, lr}
   1bb18:	mov	fp, sp
   1bb1c:	sub	sp, sp, #112	; 0x70
   1bb20:	str	r0, [fp, #-8]
   1bb24:	movw	r0, #22051	; 0x5623
   1bb28:	movt	r0, #2
   1bb2c:	mov	r1, sp
   1bb30:	bl	2434c <__assert_fail@plt+0x12e70>
   1bb34:	cmp	r0, #0
   1bb38:	beq	1bb48 <__assert_fail@plt+0xa66c>
   1bb3c:	movw	r0, #0
   1bb40:	str	r0, [fp, #-4]
   1bb44:	b	1bb78 <__assert_fail@plt+0xa69c>
   1bb48:	ldr	r0, [sp, #96]	; 0x60
   1bb4c:	ldr	r1, [sp, #100]	; 0x64
   1bb50:	ldr	r2, [fp, #-8]
   1bb54:	str	r1, [r2, #4]
   1bb58:	str	r0, [r2]
   1bb5c:	ldr	r0, [sp]
   1bb60:	ldr	r1, [sp, #4]
   1bb64:	ldr	r2, [fp, #-8]
   1bb68:	str	r1, [r2, #12]
   1bb6c:	str	r0, [r2, #8]
   1bb70:	ldr	r0, [fp, #-8]
   1bb74:	str	r0, [fp, #-4]
   1bb78:	ldr	r0, [fp, #-4]
   1bb7c:	mov	sp, fp
   1bb80:	pop	{fp, pc}
   1bb84:	push	{fp, lr}
   1bb88:	mov	fp, sp
   1bb8c:	sub	sp, sp, #24
   1bb90:	str	r0, [fp, #-4]
   1bb94:	ldr	r0, [fp, #-4]
   1bb98:	movw	r1, #0
   1bb9c:	cmp	r1, r0
   1bba0:	bgt	1bbf0 <__assert_fail@plt+0xa714>
   1bba4:	ldr	r0, [fp, #-4]
   1bba8:	cmp	r0, #2
   1bbac:	bgt	1bbf0 <__assert_fail@plt+0xa714>
   1bbb0:	ldr	r0, [fp, #-4]
   1bbb4:	bl	23808 <__assert_fail@plt+0x1232c>
   1bbb8:	str	r0, [fp, #-8]
   1bbbc:	bl	11398 <__errno_location@plt>
   1bbc0:	ldr	r0, [r0]
   1bbc4:	str	r0, [sp, #12]
   1bbc8:	ldr	r0, [fp, #-4]
   1bbcc:	bl	114a0 <close@plt>
   1bbd0:	ldr	r1, [sp, #12]
   1bbd4:	str	r0, [sp, #8]
   1bbd8:	str	r1, [sp, #4]
   1bbdc:	bl	11398 <__errno_location@plt>
   1bbe0:	ldr	r1, [sp, #4]
   1bbe4:	str	r1, [r0]
   1bbe8:	ldr	r0, [fp, #-8]
   1bbec:	str	r0, [fp, #-4]
   1bbf0:	ldr	r0, [fp, #-4]
   1bbf4:	mov	sp, fp
   1bbf8:	pop	{fp, pc}
   1bbfc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1bc00:	add	fp, sp, #28
   1bc04:	sub	sp, sp, #196	; 0xc4
   1bc08:	ldr	ip, [fp, #12]
   1bc0c:	ldr	lr, [fp, #8]
   1bc10:	str	r0, [fp, #-32]	; 0xffffffe0
   1bc14:	str	r1, [fp, #-36]	; 0xffffffdc
   1bc18:	str	r2, [fp, #-40]	; 0xffffffd8
   1bc1c:	str	r3, [fp, #-44]	; 0xffffffd4
   1bc20:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1bc24:	movw	r1, #0
   1bc28:	cmp	r0, r1
   1bc2c:	beq	1bc60 <__assert_fail@plt+0xa784>
   1bc30:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1bc34:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1bc38:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1bc3c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1bc40:	movw	ip, #21316	; 0x5344
   1bc44:	movt	ip, #2
   1bc48:	str	r1, [fp, #-48]	; 0xffffffd0
   1bc4c:	mov	r1, ip
   1bc50:	ldr	ip, [fp, #-48]	; 0xffffffd0
   1bc54:	str	ip, [sp]
   1bc58:	bl	1138c <fprintf@plt>
   1bc5c:	b	1bc78 <__assert_fail@plt+0xa79c>
   1bc60:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1bc64:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1bc68:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1bc6c:	movw	r1, #21328	; 0x5350
   1bc70:	movt	r1, #2
   1bc74:	bl	1138c <fprintf@plt>
   1bc78:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1bc7c:	movw	r1, #21335	; 0x5357
   1bc80:	movt	r1, #2
   1bc84:	str	r0, [fp, #-52]	; 0xffffffcc
   1bc88:	mov	r0, r1
   1bc8c:	bl	11350 <gettext@plt>
   1bc90:	movw	r1, #22053	; 0x5625
   1bc94:	movt	r1, #2
   1bc98:	movw	r3, #2022	; 0x7e6
   1bc9c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1bca0:	str	r0, [fp, #-56]	; 0xffffffc8
   1bca4:	mov	r0, r2
   1bca8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1bcac:	bl	1138c <fprintf@plt>
   1bcb0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1bcb4:	movw	r2, #18847	; 0x499f
   1bcb8:	movt	r2, #2
   1bcbc:	str	r0, [fp, #-60]	; 0xffffffc4
   1bcc0:	mov	r0, r2
   1bcc4:	str	r2, [fp, #-64]	; 0xffffffc0
   1bcc8:	bl	111d0 <fputs_unlocked@plt>
   1bccc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1bcd0:	movw	r2, #21339	; 0x535b
   1bcd4:	movt	r2, #2
   1bcd8:	str	r0, [fp, #-68]	; 0xffffffbc
   1bcdc:	mov	r0, r2
   1bce0:	str	r1, [fp, #-72]	; 0xffffffb8
   1bce4:	bl	11350 <gettext@plt>
   1bce8:	movw	r2, #21510	; 0x5406
   1bcec:	movt	r2, #2
   1bcf0:	ldr	r1, [fp, #-72]	; 0xffffffb8
   1bcf4:	str	r0, [fp, #-76]	; 0xffffffb4
   1bcf8:	mov	r0, r1
   1bcfc:	ldr	r1, [fp, #-76]	; 0xffffffb4
   1bd00:	bl	1138c <fprintf@plt>
   1bd04:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1bd08:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1bd0c:	str	r0, [fp, #-80]	; 0xffffffb0
   1bd10:	mov	r0, r2
   1bd14:	bl	111d0 <fputs_unlocked@plt>
   1bd18:	ldr	r1, [fp, #12]
   1bd1c:	cmp	r1, #9
   1bd20:	str	r1, [fp, #-84]	; 0xffffffac
   1bd24:	bhi	1c140 <__assert_fail@plt+0xac64>
   1bd28:	add	r0, pc, #8
   1bd2c:	ldr	r1, [fp, #-84]	; 0xffffffac
   1bd30:	ldr	r0, [r0, r1, lsl #2]
   1bd34:	mov	pc, r0
   1bd38:	andeq	fp, r1, r0, ror #26
   1bd3c:	andeq	fp, r1, r4, ror #26
   1bd40:	muleq	r1, ip, sp
   1bd44:	ldrdeq	fp, [r1], -ip
   1bd48:	andeq	fp, r1, r4, lsr lr
   1bd4c:	muleq	r1, r8, lr
   1bd50:	andeq	fp, r1, r8, lsl #30
   1bd54:	andeq	fp, r1, r4, lsl #31
   1bd58:	andeq	ip, r1, ip
   1bd5c:	andeq	ip, r1, r0, lsr #1
   1bd60:	b	1c1dc <__assert_fail@plt+0xad00>
   1bd64:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1bd68:	movw	r1, #21544	; 0x5428
   1bd6c:	movt	r1, #2
   1bd70:	str	r0, [fp, #-88]	; 0xffffffa8
   1bd74:	mov	r0, r1
   1bd78:	bl	11350 <gettext@plt>
   1bd7c:	ldr	r1, [fp, #8]
   1bd80:	ldr	r2, [r1]
   1bd84:	ldr	r1, [fp, #-88]	; 0xffffffa8
   1bd88:	str	r0, [fp, #-92]	; 0xffffffa4
   1bd8c:	mov	r0, r1
   1bd90:	ldr	r1, [fp, #-92]	; 0xffffffa4
   1bd94:	bl	1138c <fprintf@plt>
   1bd98:	b	1c1dc <__assert_fail@plt+0xad00>
   1bd9c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1bda0:	movw	r1, #21560	; 0x5438
   1bda4:	movt	r1, #2
   1bda8:	str	r0, [fp, #-96]	; 0xffffffa0
   1bdac:	mov	r0, r1
   1bdb0:	bl	11350 <gettext@plt>
   1bdb4:	ldr	r1, [fp, #8]
   1bdb8:	ldr	r2, [r1]
   1bdbc:	ldr	r1, [fp, #8]
   1bdc0:	ldr	r3, [r1, #4]
   1bdc4:	ldr	r1, [fp, #-96]	; 0xffffffa0
   1bdc8:	str	r0, [fp, #-100]	; 0xffffff9c
   1bdcc:	mov	r0, r1
   1bdd0:	ldr	r1, [fp, #-100]	; 0xffffff9c
   1bdd4:	bl	1138c <fprintf@plt>
   1bdd8:	b	1c1dc <__assert_fail@plt+0xad00>
   1bddc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1bde0:	movw	r1, #21583	; 0x544f
   1bde4:	movt	r1, #2
   1bde8:	str	r0, [fp, #-104]	; 0xffffff98
   1bdec:	mov	r0, r1
   1bdf0:	bl	11350 <gettext@plt>
   1bdf4:	ldr	r1, [fp, #8]
   1bdf8:	ldr	r2, [r1]
   1bdfc:	ldr	r1, [fp, #8]
   1be00:	ldr	r3, [r1, #4]
   1be04:	ldr	r1, [fp, #8]
   1be08:	ldr	r1, [r1, #8]
   1be0c:	ldr	ip, [fp, #-104]	; 0xffffff98
   1be10:	str	r0, [fp, #-108]	; 0xffffff94
   1be14:	mov	r0, ip
   1be18:	ldr	lr, [fp, #-108]	; 0xffffff94
   1be1c:	str	r1, [sp, #112]	; 0x70
   1be20:	mov	r1, lr
   1be24:	ldr	r4, [sp, #112]	; 0x70
   1be28:	str	r4, [sp]
   1be2c:	bl	1138c <fprintf@plt>
   1be30:	b	1c1dc <__assert_fail@plt+0xad00>
   1be34:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1be38:	movw	r1, #21611	; 0x546b
   1be3c:	movt	r1, #2
   1be40:	str	r0, [sp, #108]	; 0x6c
   1be44:	mov	r0, r1
   1be48:	bl	11350 <gettext@plt>
   1be4c:	ldr	r1, [fp, #8]
   1be50:	ldr	r2, [r1]
   1be54:	ldr	r1, [fp, #8]
   1be58:	ldr	r3, [r1, #4]
   1be5c:	ldr	r1, [fp, #8]
   1be60:	ldr	r1, [r1, #8]
   1be64:	ldr	ip, [fp, #8]
   1be68:	ldr	ip, [ip, #12]
   1be6c:	ldr	lr, [sp, #108]	; 0x6c
   1be70:	str	r0, [sp, #104]	; 0x68
   1be74:	mov	r0, lr
   1be78:	ldr	r4, [sp, #104]	; 0x68
   1be7c:	str	r1, [sp, #100]	; 0x64
   1be80:	mov	r1, r4
   1be84:	ldr	r5, [sp, #100]	; 0x64
   1be88:	str	r5, [sp]
   1be8c:	str	ip, [sp, #4]
   1be90:	bl	1138c <fprintf@plt>
   1be94:	b	1c1dc <__assert_fail@plt+0xad00>
   1be98:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1be9c:	movw	r1, #21643	; 0x548b
   1bea0:	movt	r1, #2
   1bea4:	str	r0, [sp, #96]	; 0x60
   1bea8:	mov	r0, r1
   1beac:	bl	11350 <gettext@plt>
   1beb0:	ldr	r1, [fp, #8]
   1beb4:	ldr	r2, [r1]
   1beb8:	ldr	r1, [fp, #8]
   1bebc:	ldr	r3, [r1, #4]
   1bec0:	ldr	r1, [fp, #8]
   1bec4:	ldr	r1, [r1, #8]
   1bec8:	ldr	ip, [fp, #8]
   1becc:	ldr	ip, [ip, #12]
   1bed0:	ldr	lr, [fp, #8]
   1bed4:	ldr	lr, [lr, #16]
   1bed8:	ldr	r4, [sp, #96]	; 0x60
   1bedc:	str	r0, [sp, #92]	; 0x5c
   1bee0:	mov	r0, r4
   1bee4:	ldr	r5, [sp, #92]	; 0x5c
   1bee8:	str	r1, [sp, #88]	; 0x58
   1beec:	mov	r1, r5
   1bef0:	ldr	r6, [sp, #88]	; 0x58
   1bef4:	str	r6, [sp]
   1bef8:	str	ip, [sp, #4]
   1befc:	str	lr, [sp, #8]
   1bf00:	bl	1138c <fprintf@plt>
   1bf04:	b	1c1dc <__assert_fail@plt+0xad00>
   1bf08:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1bf0c:	movw	r1, #21679	; 0x54af
   1bf10:	movt	r1, #2
   1bf14:	str	r0, [sp, #84]	; 0x54
   1bf18:	mov	r0, r1
   1bf1c:	bl	11350 <gettext@plt>
   1bf20:	ldr	r1, [fp, #8]
   1bf24:	ldr	r2, [r1]
   1bf28:	ldr	r1, [fp, #8]
   1bf2c:	ldr	r3, [r1, #4]
   1bf30:	ldr	r1, [fp, #8]
   1bf34:	ldr	r1, [r1, #8]
   1bf38:	ldr	ip, [fp, #8]
   1bf3c:	ldr	ip, [ip, #12]
   1bf40:	ldr	lr, [fp, #8]
   1bf44:	ldr	lr, [lr, #16]
   1bf48:	ldr	r4, [fp, #8]
   1bf4c:	ldr	r4, [r4, #20]
   1bf50:	ldr	r5, [sp, #84]	; 0x54
   1bf54:	str	r0, [sp, #80]	; 0x50
   1bf58:	mov	r0, r5
   1bf5c:	ldr	r6, [sp, #80]	; 0x50
   1bf60:	str	r1, [sp, #76]	; 0x4c
   1bf64:	mov	r1, r6
   1bf68:	ldr	r7, [sp, #76]	; 0x4c
   1bf6c:	str	r7, [sp]
   1bf70:	str	ip, [sp, #4]
   1bf74:	str	lr, [sp, #8]
   1bf78:	str	r4, [sp, #12]
   1bf7c:	bl	1138c <fprintf@plt>
   1bf80:	b	1c1dc <__assert_fail@plt+0xad00>
   1bf84:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1bf88:	movw	r1, #21719	; 0x54d7
   1bf8c:	movt	r1, #2
   1bf90:	str	r0, [sp, #72]	; 0x48
   1bf94:	mov	r0, r1
   1bf98:	bl	11350 <gettext@plt>
   1bf9c:	ldr	r1, [fp, #8]
   1bfa0:	ldr	r2, [r1]
   1bfa4:	ldr	r1, [fp, #8]
   1bfa8:	ldr	r3, [r1, #4]
   1bfac:	ldr	r1, [fp, #8]
   1bfb0:	ldr	r1, [r1, #8]
   1bfb4:	ldr	ip, [fp, #8]
   1bfb8:	ldr	ip, [ip, #12]
   1bfbc:	ldr	lr, [fp, #8]
   1bfc0:	ldr	lr, [lr, #16]
   1bfc4:	ldr	r4, [fp, #8]
   1bfc8:	ldr	r4, [r4, #20]
   1bfcc:	ldr	r5, [fp, #8]
   1bfd0:	ldr	r5, [r5, #24]
   1bfd4:	ldr	r6, [sp, #72]	; 0x48
   1bfd8:	str	r0, [sp, #68]	; 0x44
   1bfdc:	mov	r0, r6
   1bfe0:	ldr	r7, [sp, #68]	; 0x44
   1bfe4:	str	r1, [sp, #64]	; 0x40
   1bfe8:	mov	r1, r7
   1bfec:	ldr	r8, [sp, #64]	; 0x40
   1bff0:	str	r8, [sp]
   1bff4:	str	ip, [sp, #4]
   1bff8:	str	lr, [sp, #8]
   1bffc:	str	r4, [sp, #12]
   1c000:	str	r5, [sp, #16]
   1c004:	bl	1138c <fprintf@plt>
   1c008:	b	1c1dc <__assert_fail@plt+0xad00>
   1c00c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c010:	movw	r1, #21763	; 0x5503
   1c014:	movt	r1, #2
   1c018:	str	r0, [sp, #60]	; 0x3c
   1c01c:	mov	r0, r1
   1c020:	bl	11350 <gettext@plt>
   1c024:	ldr	r1, [fp, #8]
   1c028:	ldr	r2, [r1]
   1c02c:	ldr	r1, [fp, #8]
   1c030:	ldr	r3, [r1, #4]
   1c034:	ldr	r1, [fp, #8]
   1c038:	ldr	r1, [r1, #8]
   1c03c:	ldr	ip, [fp, #8]
   1c040:	ldr	ip, [ip, #12]
   1c044:	ldr	lr, [fp, #8]
   1c048:	ldr	lr, [lr, #16]
   1c04c:	ldr	r4, [fp, #8]
   1c050:	ldr	r4, [r4, #20]
   1c054:	ldr	r5, [fp, #8]
   1c058:	ldr	r5, [r5, #24]
   1c05c:	ldr	r6, [fp, #8]
   1c060:	ldr	r6, [r6, #28]
   1c064:	ldr	r7, [sp, #60]	; 0x3c
   1c068:	str	r0, [sp, #56]	; 0x38
   1c06c:	mov	r0, r7
   1c070:	ldr	r8, [sp, #56]	; 0x38
   1c074:	str	r1, [sp, #52]	; 0x34
   1c078:	mov	r1, r8
   1c07c:	ldr	r9, [sp, #52]	; 0x34
   1c080:	str	r9, [sp]
   1c084:	str	ip, [sp, #4]
   1c088:	str	lr, [sp, #8]
   1c08c:	str	r4, [sp, #12]
   1c090:	str	r5, [sp, #16]
   1c094:	str	r6, [sp, #20]
   1c098:	bl	1138c <fprintf@plt>
   1c09c:	b	1c1dc <__assert_fail@plt+0xad00>
   1c0a0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c0a4:	movw	r1, #21811	; 0x5533
   1c0a8:	movt	r1, #2
   1c0ac:	str	r0, [sp, #48]	; 0x30
   1c0b0:	mov	r0, r1
   1c0b4:	bl	11350 <gettext@plt>
   1c0b8:	ldr	r1, [fp, #8]
   1c0bc:	ldr	r2, [r1]
   1c0c0:	ldr	r1, [fp, #8]
   1c0c4:	ldr	r3, [r1, #4]
   1c0c8:	ldr	r1, [fp, #8]
   1c0cc:	ldr	r1, [r1, #8]
   1c0d0:	ldr	ip, [fp, #8]
   1c0d4:	ldr	ip, [ip, #12]
   1c0d8:	ldr	lr, [fp, #8]
   1c0dc:	ldr	lr, [lr, #16]
   1c0e0:	ldr	r4, [fp, #8]
   1c0e4:	ldr	r4, [r4, #20]
   1c0e8:	ldr	r5, [fp, #8]
   1c0ec:	ldr	r5, [r5, #24]
   1c0f0:	ldr	r6, [fp, #8]
   1c0f4:	ldr	r6, [r6, #28]
   1c0f8:	ldr	r7, [fp, #8]
   1c0fc:	ldr	r7, [r7, #32]
   1c100:	ldr	r8, [sp, #48]	; 0x30
   1c104:	str	r0, [sp, #44]	; 0x2c
   1c108:	mov	r0, r8
   1c10c:	ldr	r9, [sp, #44]	; 0x2c
   1c110:	str	r1, [sp, #40]	; 0x28
   1c114:	mov	r1, r9
   1c118:	ldr	sl, [sp, #40]	; 0x28
   1c11c:	str	sl, [sp]
   1c120:	str	ip, [sp, #4]
   1c124:	str	lr, [sp, #8]
   1c128:	str	r4, [sp, #12]
   1c12c:	str	r5, [sp, #16]
   1c130:	str	r6, [sp, #20]
   1c134:	str	r7, [sp, #24]
   1c138:	bl	1138c <fprintf@plt>
   1c13c:	b	1c1dc <__assert_fail@plt+0xad00>
   1c140:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1c144:	movw	r1, #21863	; 0x5567
   1c148:	movt	r1, #2
   1c14c:	str	r0, [sp, #36]	; 0x24
   1c150:	mov	r0, r1
   1c154:	bl	11350 <gettext@plt>
   1c158:	ldr	r1, [fp, #8]
   1c15c:	ldr	r2, [r1]
   1c160:	ldr	r1, [fp, #8]
   1c164:	ldr	r3, [r1, #4]
   1c168:	ldr	r1, [fp, #8]
   1c16c:	ldr	r1, [r1, #8]
   1c170:	ldr	ip, [fp, #8]
   1c174:	ldr	ip, [ip, #12]
   1c178:	ldr	lr, [fp, #8]
   1c17c:	ldr	lr, [lr, #16]
   1c180:	ldr	r4, [fp, #8]
   1c184:	ldr	r4, [r4, #20]
   1c188:	ldr	r5, [fp, #8]
   1c18c:	ldr	r5, [r5, #24]
   1c190:	ldr	r6, [fp, #8]
   1c194:	ldr	r6, [r6, #28]
   1c198:	ldr	r7, [fp, #8]
   1c19c:	ldr	r7, [r7, #32]
   1c1a0:	ldr	r8, [sp, #36]	; 0x24
   1c1a4:	str	r0, [sp, #32]
   1c1a8:	mov	r0, r8
   1c1ac:	ldr	r9, [sp, #32]
   1c1b0:	str	r1, [sp, #28]
   1c1b4:	mov	r1, r9
   1c1b8:	ldr	sl, [sp, #28]
   1c1bc:	str	sl, [sp]
   1c1c0:	str	ip, [sp, #4]
   1c1c4:	str	lr, [sp, #8]
   1c1c8:	str	r4, [sp, #12]
   1c1cc:	str	r5, [sp, #16]
   1c1d0:	str	r6, [sp, #20]
   1c1d4:	str	r7, [sp, #24]
   1c1d8:	bl	1138c <fprintf@plt>
   1c1dc:	sub	sp, fp, #28
   1c1e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c1e4:	push	{fp, lr}
   1c1e8:	mov	fp, sp
   1c1ec:	sub	sp, sp, #32
   1c1f0:	ldr	ip, [fp, #8]
   1c1f4:	str	r0, [fp, #-4]
   1c1f8:	str	r1, [fp, #-8]
   1c1fc:	str	r2, [fp, #-12]
   1c200:	str	r3, [sp, #16]
   1c204:	movw	r0, #0
   1c208:	str	r0, [sp, #12]
   1c20c:	ldr	r0, [fp, #8]
   1c210:	ldr	r1, [sp, #12]
   1c214:	add	r0, r0, r1, lsl #2
   1c218:	ldr	r0, [r0]
   1c21c:	movw	r1, #0
   1c220:	cmp	r0, r1
   1c224:	beq	1c23c <__assert_fail@plt+0xad60>
   1c228:	b	1c22c <__assert_fail@plt+0xad50>
   1c22c:	ldr	r0, [sp, #12]
   1c230:	add	r0, r0, #1
   1c234:	str	r0, [sp, #12]
   1c238:	b	1c20c <__assert_fail@plt+0xad30>
   1c23c:	ldr	r0, [fp, #-4]
   1c240:	ldr	r1, [fp, #-8]
   1c244:	ldr	r2, [fp, #-12]
   1c248:	ldr	r3, [sp, #16]
   1c24c:	ldr	ip, [fp, #8]
   1c250:	ldr	lr, [sp, #12]
   1c254:	str	ip, [sp]
   1c258:	str	lr, [sp, #4]
   1c25c:	bl	1bbfc <__assert_fail@plt+0xa720>
   1c260:	mov	sp, fp
   1c264:	pop	{fp, pc}
   1c268:	push	{fp, lr}
   1c26c:	mov	fp, sp
   1c270:	sub	sp, sp, #80	; 0x50
   1c274:	ldr	ip, [fp, #8]
   1c278:	str	ip, [fp, #-4]
   1c27c:	str	r0, [fp, #-8]
   1c280:	str	r1, [fp, #-12]
   1c284:	str	r2, [fp, #-16]
   1c288:	str	r3, [fp, #-20]	; 0xffffffec
   1c28c:	movw	r0, #0
   1c290:	str	r0, [fp, #-24]	; 0xffffffe8
   1c294:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c298:	cmp	r0, #10
   1c29c:	movw	r0, #0
   1c2a0:	str	r0, [sp, #12]
   1c2a4:	bcs	1c2dc <__assert_fail@plt+0xae00>
   1c2a8:	ldr	r0, [fp, #-4]
   1c2ac:	add	r1, r0, #4
   1c2b0:	str	r1, [fp, #-4]
   1c2b4:	ldr	r0, [r0]
   1c2b8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c2bc:	add	r2, sp, #16
   1c2c0:	add	r1, r2, r1, lsl #2
   1c2c4:	str	r0, [r1]
   1c2c8:	movw	r1, #0
   1c2cc:	cmp	r0, r1
   1c2d0:	movw	r0, #0
   1c2d4:	movne	r0, #1
   1c2d8:	str	r0, [sp, #12]
   1c2dc:	ldr	r0, [sp, #12]
   1c2e0:	tst	r0, #1
   1c2e4:	beq	1c2fc <__assert_fail@plt+0xae20>
   1c2e8:	b	1c2ec <__assert_fail@plt+0xae10>
   1c2ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c2f0:	add	r0, r0, #1
   1c2f4:	str	r0, [fp, #-24]	; 0xffffffe8
   1c2f8:	b	1c294 <__assert_fail@plt+0xadb8>
   1c2fc:	add	r0, sp, #16
   1c300:	ldr	r1, [fp, #-8]
   1c304:	ldr	r2, [fp, #-12]
   1c308:	ldr	r3, [fp, #-16]
   1c30c:	ldr	ip, [fp, #-20]	; 0xffffffec
   1c310:	ldr	lr, [fp, #-24]	; 0xffffffe8
   1c314:	str	r0, [sp, #8]
   1c318:	mov	r0, r1
   1c31c:	mov	r1, r2
   1c320:	mov	r2, r3
   1c324:	mov	r3, ip
   1c328:	ldr	ip, [sp, #8]
   1c32c:	str	ip, [sp]
   1c330:	str	lr, [sp, #4]
   1c334:	bl	1bbfc <__assert_fail@plt+0xa720>
   1c338:	mov	sp, fp
   1c33c:	pop	{fp, pc}
   1c340:	push	{fp, lr}
   1c344:	mov	fp, sp
   1c348:	sub	sp, sp, #24
   1c34c:	str	r0, [fp, #-4]
   1c350:	str	r1, [fp, #-8]
   1c354:	str	r2, [sp, #12]
   1c358:	str	r3, [sp, #8]
   1c35c:	add	r0, fp, #8
   1c360:	str	r0, [sp, #4]
   1c364:	ldr	r0, [fp, #-4]
   1c368:	ldr	r1, [fp, #-8]
   1c36c:	ldr	r2, [sp, #12]
   1c370:	ldr	r3, [sp, #8]
   1c374:	ldr	ip, [sp, #4]
   1c378:	mov	lr, sp
   1c37c:	str	ip, [lr]
   1c380:	bl	1c268 <__assert_fail@plt+0xad8c>
   1c384:	add	r0, sp, #4
   1c388:	mov	sp, fp
   1c38c:	pop	{fp, pc}
   1c390:	push	{fp, lr}
   1c394:	mov	fp, sp
   1c398:	sub	sp, sp, #16
   1c39c:	movw	r0, #24972	; 0x618c
   1c3a0:	movt	r0, #3
   1c3a4:	ldr	r1, [r0]
   1c3a8:	movw	r0, #18847	; 0x499f
   1c3ac:	movt	r0, #2
   1c3b0:	bl	111d0 <fputs_unlocked@plt>
   1c3b4:	movw	r1, #21923	; 0x55a3
   1c3b8:	movt	r1, #2
   1c3bc:	str	r0, [fp, #-4]
   1c3c0:	mov	r0, r1
   1c3c4:	bl	11350 <gettext@plt>
   1c3c8:	movw	r1, #21943	; 0x55b7
   1c3cc:	movt	r1, #2
   1c3d0:	bl	11200 <printf@plt>
   1c3d4:	movw	r1, #21965	; 0x55cd
   1c3d8:	movt	r1, #2
   1c3dc:	str	r0, [sp, #8]
   1c3e0:	mov	r0, r1
   1c3e4:	bl	11350 <gettext@plt>
   1c3e8:	movw	r1, #19120	; 0x4ab0
   1c3ec:	movt	r1, #2
   1c3f0:	movw	r2, #19395	; 0x4bc3
   1c3f4:	movt	r2, #2
   1c3f8:	bl	11200 <printf@plt>
   1c3fc:	movw	r1, #21985	; 0x55e1
   1c400:	movt	r1, #2
   1c404:	str	r0, [sp, #4]
   1c408:	mov	r0, r1
   1c40c:	bl	11350 <gettext@plt>
   1c410:	movw	r1, #22024	; 0x5608
   1c414:	movt	r1, #2
   1c418:	bl	11200 <printf@plt>
   1c41c:	mov	sp, fp
   1c420:	pop	{fp, pc}
   1c424:	push	{fp, lr}
   1c428:	mov	fp, sp
   1c42c:	sub	sp, sp, #16
   1c430:	str	r0, [fp, #-4]
   1c434:	str	r1, [sp, #8]
   1c438:	str	r2, [sp, #4]
   1c43c:	ldr	r0, [fp, #-4]
   1c440:	ldr	r1, [sp, #8]
   1c444:	ldr	r2, [sp, #4]
   1c448:	bl	1c454 <__assert_fail@plt+0xaf78>
   1c44c:	mov	sp, fp
   1c450:	pop	{fp, pc}
   1c454:	push	{fp, lr}
   1c458:	mov	fp, sp
   1c45c:	sub	sp, sp, #16
   1c460:	str	r0, [fp, #-4]
   1c464:	str	r1, [sp, #8]
   1c468:	str	r2, [sp, #4]
   1c46c:	ldr	r0, [fp, #-4]
   1c470:	ldr	r1, [sp, #8]
   1c474:	ldr	r2, [sp, #4]
   1c478:	bl	224c8 <__assert_fail@plt+0x10fec>
   1c47c:	str	r0, [sp]
   1c480:	ldr	r0, [sp]
   1c484:	movw	r1, #0
   1c488:	cmp	r0, r1
   1c48c:	bne	1c4bc <__assert_fail@plt+0xafe0>
   1c490:	ldr	r0, [fp, #-4]
   1c494:	movw	r1, #0
   1c498:	cmp	r0, r1
   1c49c:	beq	1c4b8 <__assert_fail@plt+0xafdc>
   1c4a0:	ldr	r0, [sp, #8]
   1c4a4:	cmp	r0, #0
   1c4a8:	beq	1c4bc <__assert_fail@plt+0xafe0>
   1c4ac:	ldr	r0, [sp, #4]
   1c4b0:	cmp	r0, #0
   1c4b4:	beq	1c4bc <__assert_fail@plt+0xafe0>
   1c4b8:	bl	1f200 <__assert_fail@plt+0xdd24>
   1c4bc:	ldr	r0, [sp]
   1c4c0:	mov	sp, fp
   1c4c4:	pop	{fp, pc}
   1c4c8:	push	{fp, lr}
   1c4cc:	mov	fp, sp
   1c4d0:	sub	sp, sp, #8
   1c4d4:	str	r0, [sp, #4]
   1c4d8:	ldr	r0, [sp, #4]
   1c4dc:	bl	2137c <__assert_fail@plt+0xfea0>
   1c4e0:	bl	1c4ec <__assert_fail@plt+0xb010>
   1c4e4:	mov	sp, fp
   1c4e8:	pop	{fp, pc}
   1c4ec:	push	{fp, lr}
   1c4f0:	mov	fp, sp
   1c4f4:	sub	sp, sp, #8
   1c4f8:	str	r0, [sp, #4]
   1c4fc:	ldr	r0, [sp, #4]
   1c500:	movw	r1, #0
   1c504:	cmp	r0, r1
   1c508:	bne	1c510 <__assert_fail@plt+0xb034>
   1c50c:	bl	1f200 <__assert_fail@plt+0xdd24>
   1c510:	ldr	r0, [sp, #4]
   1c514:	mov	sp, fp
   1c518:	pop	{fp, pc}
   1c51c:	push	{fp, lr}
   1c520:	mov	fp, sp
   1c524:	sub	sp, sp, #8
   1c528:	str	r0, [sp, #4]
   1c52c:	ldr	r0, [sp, #4]
   1c530:	bl	22204 <__assert_fail@plt+0x10d28>
   1c534:	bl	1c4ec <__assert_fail@plt+0xb010>
   1c538:	mov	sp, fp
   1c53c:	pop	{fp, pc}
   1c540:	push	{fp, lr}
   1c544:	mov	fp, sp
   1c548:	sub	sp, sp, #8
   1c54c:	str	r0, [sp, #4]
   1c550:	ldr	r0, [sp, #4]
   1c554:	bl	1c4c8 <__assert_fail@plt+0xafec>
   1c558:	mov	sp, fp
   1c55c:	pop	{fp, pc}
   1c560:	push	{fp, lr}
   1c564:	mov	fp, sp
   1c568:	sub	sp, sp, #16
   1c56c:	str	r0, [fp, #-4]
   1c570:	str	r1, [sp, #8]
   1c574:	ldr	r0, [fp, #-4]
   1c578:	ldr	r1, [sp, #8]
   1c57c:	bl	213ec <__assert_fail@plt+0xff10>
   1c580:	str	r0, [sp, #4]
   1c584:	ldr	r0, [sp, #4]
   1c588:	movw	r1, #0
   1c58c:	cmp	r0, r1
   1c590:	bne	1c5b4 <__assert_fail@plt+0xb0d8>
   1c594:	ldr	r0, [fp, #-4]
   1c598:	movw	r1, #0
   1c59c:	cmp	r0, r1
   1c5a0:	beq	1c5b0 <__assert_fail@plt+0xb0d4>
   1c5a4:	ldr	r0, [sp, #8]
   1c5a8:	cmp	r0, #0
   1c5ac:	beq	1c5b4 <__assert_fail@plt+0xb0d8>
   1c5b0:	bl	1f200 <__assert_fail@plt+0xdd24>
   1c5b4:	ldr	r0, [sp, #4]
   1c5b8:	mov	sp, fp
   1c5bc:	pop	{fp, pc}
   1c5c0:	push	{fp, lr}
   1c5c4:	mov	fp, sp
   1c5c8:	sub	sp, sp, #8
   1c5cc:	str	r0, [sp, #4]
   1c5d0:	str	r1, [sp]
   1c5d4:	ldr	r0, [sp, #4]
   1c5d8:	ldr	r1, [sp]
   1c5dc:	bl	22244 <__assert_fail@plt+0x10d68>
   1c5e0:	bl	1c4ec <__assert_fail@plt+0xb010>
   1c5e4:	mov	sp, fp
   1c5e8:	pop	{fp, pc}
   1c5ec:	push	{fp, lr}
   1c5f0:	mov	fp, sp
   1c5f4:	sub	sp, sp, #16
   1c5f8:	str	r0, [fp, #-4]
   1c5fc:	str	r1, [sp, #8]
   1c600:	str	r2, [sp, #4]
   1c604:	ldr	r0, [fp, #-4]
   1c608:	ldr	r1, [sp, #8]
   1c60c:	ldr	r2, [sp, #4]
   1c610:	bl	2233c <__assert_fail@plt+0x10e60>
   1c614:	bl	1c4ec <__assert_fail@plt+0xb010>
   1c618:	mov	sp, fp
   1c61c:	pop	{fp, pc}
   1c620:	push	{fp, lr}
   1c624:	mov	fp, sp
   1c628:	sub	sp, sp, #8
   1c62c:	str	r0, [sp, #4]
   1c630:	str	r1, [sp]
   1c634:	ldr	r1, [sp, #4]
   1c638:	ldr	r2, [sp]
   1c63c:	movw	r0, #0
   1c640:	bl	1c454 <__assert_fail@plt+0xaf78>
   1c644:	mov	sp, fp
   1c648:	pop	{fp, pc}
   1c64c:	push	{fp, lr}
   1c650:	mov	fp, sp
   1c654:	sub	sp, sp, #8
   1c658:	str	r0, [sp, #4]
   1c65c:	str	r1, [sp]
   1c660:	ldr	r1, [sp, #4]
   1c664:	ldr	r2, [sp]
   1c668:	movw	r0, #0
   1c66c:	bl	1c5ec <__assert_fail@plt+0xb110>
   1c670:	mov	sp, fp
   1c674:	pop	{fp, pc}
   1c678:	push	{fp, lr}
   1c67c:	mov	fp, sp
   1c680:	sub	sp, sp, #8
   1c684:	str	r0, [sp, #4]
   1c688:	str	r1, [sp]
   1c68c:	ldr	r0, [sp, #4]
   1c690:	ldr	r1, [sp]
   1c694:	movw	r2, #1
   1c698:	bl	1c6a4 <__assert_fail@plt+0xb1c8>
   1c69c:	mov	sp, fp
   1c6a0:	pop	{fp, pc}
   1c6a4:	push	{fp, lr}
   1c6a8:	mov	fp, sp
   1c6ac:	sub	sp, sp, #16
   1c6b0:	str	r0, [fp, #-4]
   1c6b4:	str	r1, [sp, #8]
   1c6b8:	str	r2, [sp, #4]
   1c6bc:	ldr	r0, [sp, #8]
   1c6c0:	ldr	r0, [r0]
   1c6c4:	str	r0, [sp]
   1c6c8:	ldr	r0, [fp, #-4]
   1c6cc:	movw	r1, #0
   1c6d0:	cmp	r0, r1
   1c6d4:	bne	1c720 <__assert_fail@plt+0xb244>
   1c6d8:	ldr	r0, [sp]
   1c6dc:	cmp	r0, #0
   1c6e0:	bne	1c71c <__assert_fail@plt+0xb240>
   1c6e4:	ldr	r0, [sp, #4]
   1c6e8:	movw	r1, #64	; 0x40
   1c6ec:	udiv	r0, r1, r0
   1c6f0:	str	r0, [sp]
   1c6f4:	ldr	r0, [sp]
   1c6f8:	cmp	r0, #0
   1c6fc:	movw	r0, #0
   1c700:	movne	r0, #1
   1c704:	mvn	r1, #0
   1c708:	eor	r0, r0, r1
   1c70c:	and	r0, r0, #1
   1c710:	ldr	r1, [sp]
   1c714:	add	r0, r1, r0
   1c718:	str	r0, [sp]
   1c71c:	b	1c750 <__assert_fail@plt+0xb274>
   1c720:	ldr	r0, [sp]
   1c724:	ldr	r1, [sp]
   1c728:	lsr	r1, r1, #1
   1c72c:	add	r1, r1, #1
   1c730:	adds	r0, r0, r1
   1c734:	mov	r1, #0
   1c738:	adc	r1, r1, #0
   1c73c:	str	r0, [sp]
   1c740:	tst	r1, #1
   1c744:	beq	1c74c <__assert_fail@plt+0xb270>
   1c748:	bl	1f200 <__assert_fail@plt+0xdd24>
   1c74c:	b	1c750 <__assert_fail@plt+0xb274>
   1c750:	ldr	r0, [fp, #-4]
   1c754:	ldr	r1, [sp]
   1c758:	ldr	r2, [sp, #4]
   1c75c:	bl	1c454 <__assert_fail@plt+0xaf78>
   1c760:	str	r0, [fp, #-4]
   1c764:	ldr	r0, [sp]
   1c768:	ldr	r1, [sp, #8]
   1c76c:	str	r0, [r1]
   1c770:	ldr	r0, [fp, #-4]
   1c774:	mov	sp, fp
   1c778:	pop	{fp, pc}
   1c77c:	push	{fp, lr}
   1c780:	mov	fp, sp
   1c784:	sub	sp, sp, #216	; 0xd8
   1c788:	ldr	ip, [fp, #8]
   1c78c:	str	r0, [fp, #-4]
   1c790:	str	r1, [fp, #-8]
   1c794:	str	r2, [fp, #-12]
   1c798:	str	r3, [fp, #-16]
   1c79c:	ldr	r0, [fp, #-8]
   1c7a0:	ldr	r0, [r0]
   1c7a4:	str	r0, [fp, #-20]	; 0xffffffec
   1c7a8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1c7ac:	ldr	r1, [fp, #-20]	; 0xffffffec
   1c7b0:	asr	r1, r1, #1
   1c7b4:	add	r1, r0, r1
   1c7b8:	mov	r2, #1
   1c7bc:	cmp	r1, r0
   1c7c0:	movwvc	r2, #0
   1c7c4:	str	r1, [fp, #-24]	; 0xffffffe8
   1c7c8:	tst	r2, #1
   1c7cc:	beq	1c7d8 <__assert_fail@plt+0xb2fc>
   1c7d0:	ldr	r0, [pc, #4036]	; 1d79c <__assert_fail@plt+0xc2c0>
   1c7d4:	str	r0, [fp, #-24]	; 0xffffffe8
   1c7d8:	ldr	r0, [fp, #-16]
   1c7dc:	movw	r1, #0
   1c7e0:	cmp	r1, r0
   1c7e4:	bgt	1c800 <__assert_fail@plt+0xb324>
   1c7e8:	ldr	r0, [fp, #-16]
   1c7ec:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c7f0:	cmp	r0, r1
   1c7f4:	bge	1c800 <__assert_fail@plt+0xb324>
   1c7f8:	ldr	r0, [fp, #-16]
   1c7fc:	str	r0, [fp, #-24]	; 0xffffffe8
   1c800:	b	1cbd8 <__assert_fail@plt+0xb6fc>
   1c804:	b	1c808 <__assert_fail@plt+0xb32c>
   1c808:	ldr	r0, [fp, #8]
   1c80c:	cmp	r0, #0
   1c810:	bge	1c924 <__assert_fail@plt+0xb448>
   1c814:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c818:	cmp	r0, #0
   1c81c:	bge	1c8a8 <__assert_fail@plt+0xb3cc>
   1c820:	b	1c824 <__assert_fail@plt+0xb348>
   1c824:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c828:	ldr	r1, [fp, #8]
   1c82c:	movw	r2, #127	; 0x7f
   1c830:	sdiv	r1, r2, r1
   1c834:	cmp	r0, r1
   1c838:	blt	1c9c4 <__assert_fail@plt+0xb4e8>
   1c83c:	b	1c9dc <__assert_fail@plt+0xb500>
   1c840:	b	1c844 <__assert_fail@plt+0xb368>
   1c844:	ldr	r0, [pc, #4084]	; 1d840 <__assert_fail@plt+0xc364>
   1c848:	ldr	r1, [fp, #8]
   1c84c:	cmp	r1, r0
   1c850:	blt	1c868 <__assert_fail@plt+0xb38c>
   1c854:	b	1c874 <__assert_fail@plt+0xb398>
   1c858:	ldr	r0, [fp, #8]
   1c85c:	movw	r1, #0
   1c860:	cmp	r1, r0
   1c864:	bge	1c874 <__assert_fail@plt+0xb398>
   1c868:	movw	r0, #0
   1c86c:	str	r0, [fp, #-36]	; 0xffffffdc
   1c870:	b	1c88c <__assert_fail@plt+0xb3b0>
   1c874:	ldr	r0, [fp, #8]
   1c878:	movw	r1, #0
   1c87c:	sub	r0, r1, r0
   1c880:	movw	r1, #127	; 0x7f
   1c884:	sdiv	r0, r1, r0
   1c888:	str	r0, [fp, #-36]	; 0xffffffdc
   1c88c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1c890:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c894:	mvn	r2, #0
   1c898:	sub	r1, r2, r1
   1c89c:	cmp	r0, r1
   1c8a0:	ble	1c9c4 <__assert_fail@plt+0xb4e8>
   1c8a4:	b	1c9dc <__assert_fail@plt+0xb500>
   1c8a8:	b	1c8ac <__assert_fail@plt+0xb3d0>
   1c8ac:	b	1c908 <__assert_fail@plt+0xb42c>
   1c8b0:	b	1c908 <__assert_fail@plt+0xb42c>
   1c8b4:	ldr	r0, [fp, #8]
   1c8b8:	cmn	r0, #1
   1c8bc:	bne	1c908 <__assert_fail@plt+0xb42c>
   1c8c0:	b	1c8c4 <__assert_fail@plt+0xb3e8>
   1c8c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c8c8:	mvn	r1, #127	; 0x7f
   1c8cc:	add	r0, r0, r1
   1c8d0:	movw	r1, #0
   1c8d4:	cmp	r1, r0
   1c8d8:	blt	1c9c4 <__assert_fail@plt+0xb4e8>
   1c8dc:	b	1c9dc <__assert_fail@plt+0xb500>
   1c8e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c8e4:	movw	r1, #0
   1c8e8:	cmp	r1, r0
   1c8ec:	bge	1c9dc <__assert_fail@plt+0xb500>
   1c8f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c8f4:	sub	r0, r0, #1
   1c8f8:	movw	r1, #127	; 0x7f
   1c8fc:	cmp	r1, r0
   1c900:	blt	1c9c4 <__assert_fail@plt+0xb4e8>
   1c904:	b	1c9dc <__assert_fail@plt+0xb500>
   1c908:	ldr	r0, [fp, #8]
   1c90c:	mvn	r1, #127	; 0x7f
   1c910:	sdiv	r0, r1, r0
   1c914:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c918:	cmp	r0, r1
   1c91c:	blt	1c9c4 <__assert_fail@plt+0xb4e8>
   1c920:	b	1c9dc <__assert_fail@plt+0xb500>
   1c924:	ldr	r0, [fp, #8]
   1c928:	cmp	r0, #0
   1c92c:	bne	1c934 <__assert_fail@plt+0xb458>
   1c930:	b	1c9dc <__assert_fail@plt+0xb500>
   1c934:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c938:	cmp	r0, #0
   1c93c:	bge	1c9ac <__assert_fail@plt+0xb4d0>
   1c940:	b	1c944 <__assert_fail@plt+0xb468>
   1c944:	b	1c990 <__assert_fail@plt+0xb4b4>
   1c948:	b	1c990 <__assert_fail@plt+0xb4b4>
   1c94c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c950:	cmn	r0, #1
   1c954:	bne	1c990 <__assert_fail@plt+0xb4b4>
   1c958:	b	1c95c <__assert_fail@plt+0xb480>
   1c95c:	ldr	r0, [fp, #8]
   1c960:	mvn	r1, #127	; 0x7f
   1c964:	add	r0, r0, r1
   1c968:	movw	r1, #0
   1c96c:	cmp	r1, r0
   1c970:	blt	1c9c4 <__assert_fail@plt+0xb4e8>
   1c974:	b	1c9dc <__assert_fail@plt+0xb500>
   1c978:	ldr	r0, [fp, #8]
   1c97c:	sub	r0, r0, #1
   1c980:	movw	r1, #127	; 0x7f
   1c984:	cmp	r1, r0
   1c988:	blt	1c9c4 <__assert_fail@plt+0xb4e8>
   1c98c:	b	1c9dc <__assert_fail@plt+0xb500>
   1c990:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c994:	mvn	r1, #127	; 0x7f
   1c998:	sdiv	r0, r1, r0
   1c99c:	ldr	r1, [fp, #8]
   1c9a0:	cmp	r0, r1
   1c9a4:	blt	1c9c4 <__assert_fail@plt+0xb4e8>
   1c9a8:	b	1c9dc <__assert_fail@plt+0xb500>
   1c9ac:	ldr	r0, [fp, #8]
   1c9b0:	movw	r1, #127	; 0x7f
   1c9b4:	sdiv	r0, r1, r0
   1c9b8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c9bc:	cmp	r0, r1
   1c9c0:	bge	1c9dc <__assert_fail@plt+0xb500>
   1c9c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c9c8:	ldr	r1, [fp, #8]
   1c9cc:	mul	r0, r0, r1
   1c9d0:	sxtb	r0, r0
   1c9d4:	str	r0, [fp, #-28]	; 0xffffffe4
   1c9d8:	b	1dba0 <__assert_fail@plt+0xc6c4>
   1c9dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c9e0:	ldr	r1, [fp, #8]
   1c9e4:	mul	r0, r0, r1
   1c9e8:	sxtb	r0, r0
   1c9ec:	str	r0, [fp, #-28]	; 0xffffffe4
   1c9f0:	b	1dbac <__assert_fail@plt+0xc6d0>
   1c9f4:	ldr	r0, [fp, #8]
   1c9f8:	cmp	r0, #0
   1c9fc:	bge	1cb0c <__assert_fail@plt+0xb630>
   1ca00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ca04:	cmp	r0, #0
   1ca08:	bge	1ca94 <__assert_fail@plt+0xb5b8>
   1ca0c:	b	1ca10 <__assert_fail@plt+0xb534>
   1ca10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ca14:	ldr	r1, [fp, #8]
   1ca18:	movw	r2, #255	; 0xff
   1ca1c:	sdiv	r1, r2, r1
   1ca20:	cmp	r0, r1
   1ca24:	blt	1cba8 <__assert_fail@plt+0xb6cc>
   1ca28:	b	1cbc0 <__assert_fail@plt+0xb6e4>
   1ca2c:	b	1ca30 <__assert_fail@plt+0xb554>
   1ca30:	ldr	r0, [pc, #3592]	; 1d840 <__assert_fail@plt+0xc364>
   1ca34:	ldr	r1, [fp, #8]
   1ca38:	cmp	r1, r0
   1ca3c:	blt	1ca54 <__assert_fail@plt+0xb578>
   1ca40:	b	1ca60 <__assert_fail@plt+0xb584>
   1ca44:	ldr	r0, [fp, #8]
   1ca48:	movw	r1, #0
   1ca4c:	cmp	r1, r0
   1ca50:	bge	1ca60 <__assert_fail@plt+0xb584>
   1ca54:	movw	r0, #0
   1ca58:	str	r0, [fp, #-40]	; 0xffffffd8
   1ca5c:	b	1ca78 <__assert_fail@plt+0xb59c>
   1ca60:	ldr	r0, [fp, #8]
   1ca64:	movw	r1, #0
   1ca68:	sub	r0, r1, r0
   1ca6c:	movw	r1, #255	; 0xff
   1ca70:	sdiv	r0, r1, r0
   1ca74:	str	r0, [fp, #-40]	; 0xffffffd8
   1ca78:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1ca7c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ca80:	mvn	r2, #0
   1ca84:	sub	r1, r2, r1
   1ca88:	cmp	r0, r1
   1ca8c:	ble	1cba8 <__assert_fail@plt+0xb6cc>
   1ca90:	b	1cbc0 <__assert_fail@plt+0xb6e4>
   1ca94:	b	1ca98 <__assert_fail@plt+0xb5bc>
   1ca98:	b	1caf0 <__assert_fail@plt+0xb614>
   1ca9c:	b	1caf0 <__assert_fail@plt+0xb614>
   1caa0:	ldr	r0, [fp, #8]
   1caa4:	cmn	r0, #1
   1caa8:	bne	1caf0 <__assert_fail@plt+0xb614>
   1caac:	b	1cab0 <__assert_fail@plt+0xb5d4>
   1cab0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cab4:	add	r0, r0, #0
   1cab8:	movw	r1, #0
   1cabc:	cmp	r1, r0
   1cac0:	blt	1cba8 <__assert_fail@plt+0xb6cc>
   1cac4:	b	1cbc0 <__assert_fail@plt+0xb6e4>
   1cac8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cacc:	movw	r1, #0
   1cad0:	cmp	r1, r0
   1cad4:	bge	1cbc0 <__assert_fail@plt+0xb6e4>
   1cad8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cadc:	sub	r0, r0, #1
   1cae0:	mvn	r1, #0
   1cae4:	cmp	r1, r0
   1cae8:	blt	1cba8 <__assert_fail@plt+0xb6cc>
   1caec:	b	1cbc0 <__assert_fail@plt+0xb6e4>
   1caf0:	ldr	r0, [fp, #8]
   1caf4:	movw	r1, #0
   1caf8:	sdiv	r0, r1, r0
   1cafc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1cb00:	cmp	r0, r1
   1cb04:	blt	1cba8 <__assert_fail@plt+0xb6cc>
   1cb08:	b	1cbc0 <__assert_fail@plt+0xb6e4>
   1cb0c:	ldr	r0, [fp, #8]
   1cb10:	cmp	r0, #0
   1cb14:	bne	1cb1c <__assert_fail@plt+0xb640>
   1cb18:	b	1cbc0 <__assert_fail@plt+0xb6e4>
   1cb1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cb20:	cmp	r0, #0
   1cb24:	bge	1cb90 <__assert_fail@plt+0xb6b4>
   1cb28:	b	1cb2c <__assert_fail@plt+0xb650>
   1cb2c:	b	1cb74 <__assert_fail@plt+0xb698>
   1cb30:	b	1cb74 <__assert_fail@plt+0xb698>
   1cb34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cb38:	cmn	r0, #1
   1cb3c:	bne	1cb74 <__assert_fail@plt+0xb698>
   1cb40:	b	1cb44 <__assert_fail@plt+0xb668>
   1cb44:	ldr	r0, [fp, #8]
   1cb48:	add	r0, r0, #0
   1cb4c:	movw	r1, #0
   1cb50:	cmp	r1, r0
   1cb54:	blt	1cba8 <__assert_fail@plt+0xb6cc>
   1cb58:	b	1cbc0 <__assert_fail@plt+0xb6e4>
   1cb5c:	ldr	r0, [fp, #8]
   1cb60:	sub	r0, r0, #1
   1cb64:	mvn	r1, #0
   1cb68:	cmp	r1, r0
   1cb6c:	blt	1cba8 <__assert_fail@plt+0xb6cc>
   1cb70:	b	1cbc0 <__assert_fail@plt+0xb6e4>
   1cb74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cb78:	movw	r1, #0
   1cb7c:	sdiv	r0, r1, r0
   1cb80:	ldr	r1, [fp, #8]
   1cb84:	cmp	r0, r1
   1cb88:	blt	1cba8 <__assert_fail@plt+0xb6cc>
   1cb8c:	b	1cbc0 <__assert_fail@plt+0xb6e4>
   1cb90:	ldr	r0, [fp, #8]
   1cb94:	movw	r1, #255	; 0xff
   1cb98:	sdiv	r0, r1, r0
   1cb9c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1cba0:	cmp	r0, r1
   1cba4:	bge	1cbc0 <__assert_fail@plt+0xb6e4>
   1cba8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cbac:	ldr	r1, [fp, #8]
   1cbb0:	mul	r0, r0, r1
   1cbb4:	and	r0, r0, #255	; 0xff
   1cbb8:	str	r0, [fp, #-28]	; 0xffffffe4
   1cbbc:	b	1dba0 <__assert_fail@plt+0xc6c4>
   1cbc0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cbc4:	ldr	r1, [fp, #8]
   1cbc8:	mul	r0, r0, r1
   1cbcc:	and	r0, r0, #255	; 0xff
   1cbd0:	str	r0, [fp, #-28]	; 0xffffffe4
   1cbd4:	b	1dbac <__assert_fail@plt+0xc6d0>
   1cbd8:	b	1cfb0 <__assert_fail@plt+0xbad4>
   1cbdc:	b	1cbe0 <__assert_fail@plt+0xb704>
   1cbe0:	ldr	r0, [fp, #8]
   1cbe4:	cmp	r0, #0
   1cbe8:	bge	1ccfc <__assert_fail@plt+0xb820>
   1cbec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cbf0:	cmp	r0, #0
   1cbf4:	bge	1cc80 <__assert_fail@plt+0xb7a4>
   1cbf8:	b	1cbfc <__assert_fail@plt+0xb720>
   1cbfc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cc00:	ldr	r1, [fp, #8]
   1cc04:	movw	r2, #32767	; 0x7fff
   1cc08:	sdiv	r1, r2, r1
   1cc0c:	cmp	r0, r1
   1cc10:	blt	1cd9c <__assert_fail@plt+0xb8c0>
   1cc14:	b	1cdb4 <__assert_fail@plt+0xb8d8>
   1cc18:	b	1cc1c <__assert_fail@plt+0xb740>
   1cc1c:	ldr	r0, [pc, #3100]	; 1d840 <__assert_fail@plt+0xc364>
   1cc20:	ldr	r1, [fp, #8]
   1cc24:	cmp	r1, r0
   1cc28:	blt	1cc40 <__assert_fail@plt+0xb764>
   1cc2c:	b	1cc4c <__assert_fail@plt+0xb770>
   1cc30:	ldr	r0, [fp, #8]
   1cc34:	movw	r1, #0
   1cc38:	cmp	r1, r0
   1cc3c:	bge	1cc4c <__assert_fail@plt+0xb770>
   1cc40:	movw	r0, #0
   1cc44:	str	r0, [fp, #-44]	; 0xffffffd4
   1cc48:	b	1cc64 <__assert_fail@plt+0xb788>
   1cc4c:	ldr	r0, [fp, #8]
   1cc50:	movw	r1, #0
   1cc54:	sub	r0, r1, r0
   1cc58:	movw	r1, #32767	; 0x7fff
   1cc5c:	sdiv	r0, r1, r0
   1cc60:	str	r0, [fp, #-44]	; 0xffffffd4
   1cc64:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1cc68:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1cc6c:	mvn	r2, #0
   1cc70:	sub	r1, r2, r1
   1cc74:	cmp	r0, r1
   1cc78:	ble	1cd9c <__assert_fail@plt+0xb8c0>
   1cc7c:	b	1cdb4 <__assert_fail@plt+0xb8d8>
   1cc80:	b	1cc84 <__assert_fail@plt+0xb7a8>
   1cc84:	b	1cce0 <__assert_fail@plt+0xb804>
   1cc88:	b	1cce0 <__assert_fail@plt+0xb804>
   1cc8c:	ldr	r0, [fp, #8]
   1cc90:	cmn	r0, #1
   1cc94:	bne	1cce0 <__assert_fail@plt+0xb804>
   1cc98:	b	1cc9c <__assert_fail@plt+0xb7c0>
   1cc9c:	ldr	r0, [pc, #4068]	; 1dc88 <__assert_fail@plt+0xc7ac>
   1cca0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1cca4:	add	r0, r1, r0
   1cca8:	movw	r1, #0
   1ccac:	cmp	r1, r0
   1ccb0:	blt	1cd9c <__assert_fail@plt+0xb8c0>
   1ccb4:	b	1cdb4 <__assert_fail@plt+0xb8d8>
   1ccb8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ccbc:	movw	r1, #0
   1ccc0:	cmp	r1, r0
   1ccc4:	bge	1cdb4 <__assert_fail@plt+0xb8d8>
   1ccc8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cccc:	sub	r0, r0, #1
   1ccd0:	movw	r1, #32767	; 0x7fff
   1ccd4:	cmp	r1, r0
   1ccd8:	blt	1cd9c <__assert_fail@plt+0xb8c0>
   1ccdc:	b	1cdb4 <__assert_fail@plt+0xb8d8>
   1cce0:	ldr	r0, [pc, #4000]	; 1dc88 <__assert_fail@plt+0xc7ac>
   1cce4:	ldr	r1, [fp, #8]
   1cce8:	sdiv	r0, r0, r1
   1ccec:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ccf0:	cmp	r0, r1
   1ccf4:	blt	1cd9c <__assert_fail@plt+0xb8c0>
   1ccf8:	b	1cdb4 <__assert_fail@plt+0xb8d8>
   1ccfc:	ldr	r0, [fp, #8]
   1cd00:	cmp	r0, #0
   1cd04:	bne	1cd0c <__assert_fail@plt+0xb830>
   1cd08:	b	1cdb4 <__assert_fail@plt+0xb8d8>
   1cd0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cd10:	cmp	r0, #0
   1cd14:	bge	1cd84 <__assert_fail@plt+0xb8a8>
   1cd18:	b	1cd1c <__assert_fail@plt+0xb840>
   1cd1c:	b	1cd68 <__assert_fail@plt+0xb88c>
   1cd20:	b	1cd68 <__assert_fail@plt+0xb88c>
   1cd24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cd28:	cmn	r0, #1
   1cd2c:	bne	1cd68 <__assert_fail@plt+0xb88c>
   1cd30:	b	1cd34 <__assert_fail@plt+0xb858>
   1cd34:	ldr	r0, [pc, #3916]	; 1dc88 <__assert_fail@plt+0xc7ac>
   1cd38:	ldr	r1, [fp, #8]
   1cd3c:	add	r0, r1, r0
   1cd40:	movw	r1, #0
   1cd44:	cmp	r1, r0
   1cd48:	blt	1cd9c <__assert_fail@plt+0xb8c0>
   1cd4c:	b	1cdb4 <__assert_fail@plt+0xb8d8>
   1cd50:	ldr	r0, [fp, #8]
   1cd54:	sub	r0, r0, #1
   1cd58:	movw	r1, #32767	; 0x7fff
   1cd5c:	cmp	r1, r0
   1cd60:	blt	1cd9c <__assert_fail@plt+0xb8c0>
   1cd64:	b	1cdb4 <__assert_fail@plt+0xb8d8>
   1cd68:	ldr	r0, [pc, #3864]	; 1dc88 <__assert_fail@plt+0xc7ac>
   1cd6c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1cd70:	sdiv	r0, r0, r1
   1cd74:	ldr	r1, [fp, #8]
   1cd78:	cmp	r0, r1
   1cd7c:	blt	1cd9c <__assert_fail@plt+0xb8c0>
   1cd80:	b	1cdb4 <__assert_fail@plt+0xb8d8>
   1cd84:	ldr	r0, [fp, #8]
   1cd88:	movw	r1, #32767	; 0x7fff
   1cd8c:	sdiv	r0, r1, r0
   1cd90:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1cd94:	cmp	r0, r1
   1cd98:	bge	1cdb4 <__assert_fail@plt+0xb8d8>
   1cd9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cda0:	ldr	r1, [fp, #8]
   1cda4:	mul	r0, r0, r1
   1cda8:	sxth	r0, r0
   1cdac:	str	r0, [fp, #-28]	; 0xffffffe4
   1cdb0:	b	1dba0 <__assert_fail@plt+0xc6c4>
   1cdb4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cdb8:	ldr	r1, [fp, #8]
   1cdbc:	mul	r0, r0, r1
   1cdc0:	sxth	r0, r0
   1cdc4:	str	r0, [fp, #-28]	; 0xffffffe4
   1cdc8:	b	1dbac <__assert_fail@plt+0xc6d0>
   1cdcc:	ldr	r0, [fp, #8]
   1cdd0:	cmp	r0, #0
   1cdd4:	bge	1cee4 <__assert_fail@plt+0xba08>
   1cdd8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cddc:	cmp	r0, #0
   1cde0:	bge	1ce6c <__assert_fail@plt+0xb990>
   1cde4:	b	1cde8 <__assert_fail@plt+0xb90c>
   1cde8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cdec:	ldr	r1, [fp, #8]
   1cdf0:	movw	r2, #65535	; 0xffff
   1cdf4:	sdiv	r1, r2, r1
   1cdf8:	cmp	r0, r1
   1cdfc:	blt	1cf80 <__assert_fail@plt+0xbaa4>
   1ce00:	b	1cf98 <__assert_fail@plt+0xbabc>
   1ce04:	b	1ce08 <__assert_fail@plt+0xb92c>
   1ce08:	ldr	r0, [pc, #2608]	; 1d840 <__assert_fail@plt+0xc364>
   1ce0c:	ldr	r1, [fp, #8]
   1ce10:	cmp	r1, r0
   1ce14:	blt	1ce2c <__assert_fail@plt+0xb950>
   1ce18:	b	1ce38 <__assert_fail@plt+0xb95c>
   1ce1c:	ldr	r0, [fp, #8]
   1ce20:	movw	r1, #0
   1ce24:	cmp	r1, r0
   1ce28:	bge	1ce38 <__assert_fail@plt+0xb95c>
   1ce2c:	movw	r0, #0
   1ce30:	str	r0, [fp, #-48]	; 0xffffffd0
   1ce34:	b	1ce50 <__assert_fail@plt+0xb974>
   1ce38:	ldr	r0, [fp, #8]
   1ce3c:	movw	r1, #0
   1ce40:	sub	r0, r1, r0
   1ce44:	movw	r1, #65535	; 0xffff
   1ce48:	sdiv	r0, r1, r0
   1ce4c:	str	r0, [fp, #-48]	; 0xffffffd0
   1ce50:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1ce54:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ce58:	mvn	r2, #0
   1ce5c:	sub	r1, r2, r1
   1ce60:	cmp	r0, r1
   1ce64:	ble	1cf80 <__assert_fail@plt+0xbaa4>
   1ce68:	b	1cf98 <__assert_fail@plt+0xbabc>
   1ce6c:	b	1ce70 <__assert_fail@plt+0xb994>
   1ce70:	b	1cec8 <__assert_fail@plt+0xb9ec>
   1ce74:	b	1cec8 <__assert_fail@plt+0xb9ec>
   1ce78:	ldr	r0, [fp, #8]
   1ce7c:	cmn	r0, #1
   1ce80:	bne	1cec8 <__assert_fail@plt+0xb9ec>
   1ce84:	b	1ce88 <__assert_fail@plt+0xb9ac>
   1ce88:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ce8c:	add	r0, r0, #0
   1ce90:	movw	r1, #0
   1ce94:	cmp	r1, r0
   1ce98:	blt	1cf80 <__assert_fail@plt+0xbaa4>
   1ce9c:	b	1cf98 <__assert_fail@plt+0xbabc>
   1cea0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cea4:	movw	r1, #0
   1cea8:	cmp	r1, r0
   1ceac:	bge	1cf98 <__assert_fail@plt+0xbabc>
   1ceb0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ceb4:	sub	r0, r0, #1
   1ceb8:	mvn	r1, #0
   1cebc:	cmp	r1, r0
   1cec0:	blt	1cf80 <__assert_fail@plt+0xbaa4>
   1cec4:	b	1cf98 <__assert_fail@plt+0xbabc>
   1cec8:	ldr	r0, [fp, #8]
   1cecc:	movw	r1, #0
   1ced0:	sdiv	r0, r1, r0
   1ced4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ced8:	cmp	r0, r1
   1cedc:	blt	1cf80 <__assert_fail@plt+0xbaa4>
   1cee0:	b	1cf98 <__assert_fail@plt+0xbabc>
   1cee4:	ldr	r0, [fp, #8]
   1cee8:	cmp	r0, #0
   1ceec:	bne	1cef4 <__assert_fail@plt+0xba18>
   1cef0:	b	1cf98 <__assert_fail@plt+0xbabc>
   1cef4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cef8:	cmp	r0, #0
   1cefc:	bge	1cf68 <__assert_fail@plt+0xba8c>
   1cf00:	b	1cf04 <__assert_fail@plt+0xba28>
   1cf04:	b	1cf4c <__assert_fail@plt+0xba70>
   1cf08:	b	1cf4c <__assert_fail@plt+0xba70>
   1cf0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cf10:	cmn	r0, #1
   1cf14:	bne	1cf4c <__assert_fail@plt+0xba70>
   1cf18:	b	1cf1c <__assert_fail@plt+0xba40>
   1cf1c:	ldr	r0, [fp, #8]
   1cf20:	add	r0, r0, #0
   1cf24:	movw	r1, #0
   1cf28:	cmp	r1, r0
   1cf2c:	blt	1cf80 <__assert_fail@plt+0xbaa4>
   1cf30:	b	1cf98 <__assert_fail@plt+0xbabc>
   1cf34:	ldr	r0, [fp, #8]
   1cf38:	sub	r0, r0, #1
   1cf3c:	mvn	r1, #0
   1cf40:	cmp	r1, r0
   1cf44:	blt	1cf80 <__assert_fail@plt+0xbaa4>
   1cf48:	b	1cf98 <__assert_fail@plt+0xbabc>
   1cf4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cf50:	movw	r1, #0
   1cf54:	sdiv	r0, r1, r0
   1cf58:	ldr	r1, [fp, #8]
   1cf5c:	cmp	r0, r1
   1cf60:	blt	1cf80 <__assert_fail@plt+0xbaa4>
   1cf64:	b	1cf98 <__assert_fail@plt+0xbabc>
   1cf68:	ldr	r0, [fp, #8]
   1cf6c:	movw	r1, #65535	; 0xffff
   1cf70:	sdiv	r0, r1, r0
   1cf74:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1cf78:	cmp	r0, r1
   1cf7c:	bge	1cf98 <__assert_fail@plt+0xbabc>
   1cf80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cf84:	ldr	r1, [fp, #8]
   1cf88:	mul	r0, r0, r1
   1cf8c:	uxth	r0, r0
   1cf90:	str	r0, [fp, #-28]	; 0xffffffe4
   1cf94:	b	1dba0 <__assert_fail@plt+0xc6c4>
   1cf98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cf9c:	ldr	r1, [fp, #8]
   1cfa0:	mul	r0, r0, r1
   1cfa4:	uxth	r0, r0
   1cfa8:	str	r0, [fp, #-28]	; 0xffffffe4
   1cfac:	b	1dbac <__assert_fail@plt+0xc6d0>
   1cfb0:	b	1cfb4 <__assert_fail@plt+0xbad8>
   1cfb4:	b	1cfb8 <__assert_fail@plt+0xbadc>
   1cfb8:	ldr	r0, [fp, #8]
   1cfbc:	cmp	r0, #0
   1cfc0:	bge	1d0c4 <__assert_fail@plt+0xbbe8>
   1cfc4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1cfc8:	cmp	r0, #0
   1cfcc:	bge	1d058 <__assert_fail@plt+0xbb7c>
   1cfd0:	b	1cfd4 <__assert_fail@plt+0xbaf8>
   1cfd4:	ldr	r0, [pc, #1984]	; 1d79c <__assert_fail@plt+0xc2c0>
   1cfd8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1cfdc:	ldr	r2, [fp, #8]
   1cfe0:	sdiv	r0, r0, r2
   1cfe4:	cmp	r1, r0
   1cfe8:	blt	1d154 <__assert_fail@plt+0xbc78>
   1cfec:	b	1d168 <__assert_fail@plt+0xbc8c>
   1cff0:	b	1cff4 <__assert_fail@plt+0xbb18>
   1cff4:	ldr	r0, [pc, #2116]	; 1d840 <__assert_fail@plt+0xc364>
   1cff8:	ldr	r1, [fp, #8]
   1cffc:	cmp	r1, r0
   1d000:	blt	1d018 <__assert_fail@plt+0xbb3c>
   1d004:	b	1d024 <__assert_fail@plt+0xbb48>
   1d008:	ldr	r0, [fp, #8]
   1d00c:	movw	r1, #0
   1d010:	cmp	r1, r0
   1d014:	bge	1d024 <__assert_fail@plt+0xbb48>
   1d018:	movw	r0, #0
   1d01c:	str	r0, [fp, #-52]	; 0xffffffcc
   1d020:	b	1d03c <__assert_fail@plt+0xbb60>
   1d024:	ldr	r0, [pc, #1904]	; 1d79c <__assert_fail@plt+0xc2c0>
   1d028:	ldr	r1, [fp, #8]
   1d02c:	movw	r2, #0
   1d030:	sub	r1, r2, r1
   1d034:	sdiv	r0, r0, r1
   1d038:	str	r0, [fp, #-52]	; 0xffffffcc
   1d03c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1d040:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d044:	mvn	r2, #0
   1d048:	sub	r1, r2, r1
   1d04c:	cmp	r0, r1
   1d050:	ble	1d154 <__assert_fail@plt+0xbc78>
   1d054:	b	1d168 <__assert_fail@plt+0xbc8c>
   1d058:	ldr	r0, [fp, #8]
   1d05c:	cmn	r0, #1
   1d060:	bne	1d0a8 <__assert_fail@plt+0xbbcc>
   1d064:	b	1d068 <__assert_fail@plt+0xbb8c>
   1d068:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d06c:	add	r0, r0, #-2147483648	; 0x80000000
   1d070:	movw	r1, #0
   1d074:	cmp	r1, r0
   1d078:	blt	1d154 <__assert_fail@plt+0xbc78>
   1d07c:	b	1d168 <__assert_fail@plt+0xbc8c>
   1d080:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d084:	movw	r1, #0
   1d088:	cmp	r1, r0
   1d08c:	bge	1d168 <__assert_fail@plt+0xbc8c>
   1d090:	ldr	r0, [pc, #1796]	; 1d79c <__assert_fail@plt+0xc2c0>
   1d094:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d098:	sub	r1, r1, #1
   1d09c:	cmp	r0, r1
   1d0a0:	blt	1d154 <__assert_fail@plt+0xbc78>
   1d0a4:	b	1d168 <__assert_fail@plt+0xbc8c>
   1d0a8:	ldr	r0, [pc, #4080]	; 1e0a0 <__assert_fail@plt+0xcbc4>
   1d0ac:	ldr	r1, [fp, #8]
   1d0b0:	sdiv	r0, r0, r1
   1d0b4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d0b8:	cmp	r0, r1
   1d0bc:	blt	1d154 <__assert_fail@plt+0xbc78>
   1d0c0:	b	1d168 <__assert_fail@plt+0xbc8c>
   1d0c4:	ldr	r0, [fp, #8]
   1d0c8:	cmp	r0, #0
   1d0cc:	bne	1d0d4 <__assert_fail@plt+0xbbf8>
   1d0d0:	b	1d168 <__assert_fail@plt+0xbc8c>
   1d0d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d0d8:	cmp	r0, #0
   1d0dc:	bge	1d13c <__assert_fail@plt+0xbc60>
   1d0e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d0e4:	cmn	r0, #1
   1d0e8:	bne	1d120 <__assert_fail@plt+0xbc44>
   1d0ec:	b	1d0f0 <__assert_fail@plt+0xbc14>
   1d0f0:	ldr	r0, [fp, #8]
   1d0f4:	add	r0, r0, #-2147483648	; 0x80000000
   1d0f8:	movw	r1, #0
   1d0fc:	cmp	r1, r0
   1d100:	blt	1d154 <__assert_fail@plt+0xbc78>
   1d104:	b	1d168 <__assert_fail@plt+0xbc8c>
   1d108:	ldr	r0, [pc, #1676]	; 1d79c <__assert_fail@plt+0xc2c0>
   1d10c:	ldr	r1, [fp, #8]
   1d110:	sub	r1, r1, #1
   1d114:	cmp	r0, r1
   1d118:	blt	1d154 <__assert_fail@plt+0xbc78>
   1d11c:	b	1d168 <__assert_fail@plt+0xbc8c>
   1d120:	ldr	r0, [pc, #3960]	; 1e0a0 <__assert_fail@plt+0xcbc4>
   1d124:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d128:	sdiv	r0, r0, r1
   1d12c:	ldr	r1, [fp, #8]
   1d130:	cmp	r0, r1
   1d134:	blt	1d154 <__assert_fail@plt+0xbc78>
   1d138:	b	1d168 <__assert_fail@plt+0xbc8c>
   1d13c:	ldr	r0, [pc, #1624]	; 1d79c <__assert_fail@plt+0xc2c0>
   1d140:	ldr	r1, [fp, #8]
   1d144:	sdiv	r0, r0, r1
   1d148:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d14c:	cmp	r0, r1
   1d150:	bge	1d168 <__assert_fail@plt+0xbc8c>
   1d154:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d158:	ldr	r1, [fp, #8]
   1d15c:	mul	r0, r0, r1
   1d160:	str	r0, [fp, #-28]	; 0xffffffe4
   1d164:	b	1dba0 <__assert_fail@plt+0xc6c4>
   1d168:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d16c:	ldr	r1, [fp, #8]
   1d170:	mul	r0, r0, r1
   1d174:	str	r0, [fp, #-28]	; 0xffffffe4
   1d178:	b	1dbac <__assert_fail@plt+0xc6d0>
   1d17c:	ldr	r0, [fp, #8]
   1d180:	cmp	r0, #0
   1d184:	bge	1d294 <__assert_fail@plt+0xbdb8>
   1d188:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d18c:	cmp	r0, #0
   1d190:	bge	1d21c <__assert_fail@plt+0xbd40>
   1d194:	b	1d1b4 <__assert_fail@plt+0xbcd8>
   1d198:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d19c:	ldr	r1, [fp, #8]
   1d1a0:	mvn	r2, #0
   1d1a4:	udiv	r1, r2, r1
   1d1a8:	cmp	r0, r1
   1d1ac:	bcc	1d330 <__assert_fail@plt+0xbe54>
   1d1b0:	b	1d344 <__assert_fail@plt+0xbe68>
   1d1b4:	b	1d1b8 <__assert_fail@plt+0xbcdc>
   1d1b8:	ldr	r0, [pc, #1664]	; 1d840 <__assert_fail@plt+0xc364>
   1d1bc:	ldr	r1, [fp, #8]
   1d1c0:	cmp	r1, r0
   1d1c4:	blt	1d1dc <__assert_fail@plt+0xbd00>
   1d1c8:	b	1d1e8 <__assert_fail@plt+0xbd0c>
   1d1cc:	ldr	r0, [fp, #8]
   1d1d0:	movw	r1, #0
   1d1d4:	cmp	r1, r0
   1d1d8:	bge	1d1e8 <__assert_fail@plt+0xbd0c>
   1d1dc:	movw	r0, #1
   1d1e0:	str	r0, [fp, #-56]	; 0xffffffc8
   1d1e4:	b	1d200 <__assert_fail@plt+0xbd24>
   1d1e8:	ldr	r0, [fp, #8]
   1d1ec:	movw	r1, #0
   1d1f0:	sub	r0, r1, r0
   1d1f4:	mvn	r1, #0
   1d1f8:	udiv	r0, r1, r0
   1d1fc:	str	r0, [fp, #-56]	; 0xffffffc8
   1d200:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1d204:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d208:	mvn	r2, #0
   1d20c:	sub	r1, r2, r1
   1d210:	cmp	r0, r1
   1d214:	bls	1d330 <__assert_fail@plt+0xbe54>
   1d218:	b	1d344 <__assert_fail@plt+0xbe68>
   1d21c:	b	1d220 <__assert_fail@plt+0xbd44>
   1d220:	b	1d278 <__assert_fail@plt+0xbd9c>
   1d224:	b	1d278 <__assert_fail@plt+0xbd9c>
   1d228:	ldr	r0, [fp, #8]
   1d22c:	cmn	r0, #1
   1d230:	bne	1d278 <__assert_fail@plt+0xbd9c>
   1d234:	b	1d238 <__assert_fail@plt+0xbd5c>
   1d238:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d23c:	add	r0, r0, #0
   1d240:	movw	r1, #0
   1d244:	cmp	r1, r0
   1d248:	blt	1d330 <__assert_fail@plt+0xbe54>
   1d24c:	b	1d344 <__assert_fail@plt+0xbe68>
   1d250:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d254:	movw	r1, #0
   1d258:	cmp	r1, r0
   1d25c:	bge	1d344 <__assert_fail@plt+0xbe68>
   1d260:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d264:	sub	r0, r0, #1
   1d268:	mvn	r1, #0
   1d26c:	cmp	r1, r0
   1d270:	blt	1d330 <__assert_fail@plt+0xbe54>
   1d274:	b	1d344 <__assert_fail@plt+0xbe68>
   1d278:	ldr	r0, [fp, #8]
   1d27c:	movw	r1, #0
   1d280:	sdiv	r0, r1, r0
   1d284:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d288:	cmp	r0, r1
   1d28c:	blt	1d330 <__assert_fail@plt+0xbe54>
   1d290:	b	1d344 <__assert_fail@plt+0xbe68>
   1d294:	ldr	r0, [fp, #8]
   1d298:	cmp	r0, #0
   1d29c:	bne	1d2a4 <__assert_fail@plt+0xbdc8>
   1d2a0:	b	1d344 <__assert_fail@plt+0xbe68>
   1d2a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d2a8:	cmp	r0, #0
   1d2ac:	bge	1d318 <__assert_fail@plt+0xbe3c>
   1d2b0:	b	1d2b4 <__assert_fail@plt+0xbdd8>
   1d2b4:	b	1d2fc <__assert_fail@plt+0xbe20>
   1d2b8:	b	1d2fc <__assert_fail@plt+0xbe20>
   1d2bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d2c0:	cmn	r0, #1
   1d2c4:	bne	1d2fc <__assert_fail@plt+0xbe20>
   1d2c8:	b	1d2cc <__assert_fail@plt+0xbdf0>
   1d2cc:	ldr	r0, [fp, #8]
   1d2d0:	add	r0, r0, #0
   1d2d4:	movw	r1, #0
   1d2d8:	cmp	r1, r0
   1d2dc:	blt	1d330 <__assert_fail@plt+0xbe54>
   1d2e0:	b	1d344 <__assert_fail@plt+0xbe68>
   1d2e4:	ldr	r0, [fp, #8]
   1d2e8:	sub	r0, r0, #1
   1d2ec:	mvn	r1, #0
   1d2f0:	cmp	r1, r0
   1d2f4:	blt	1d330 <__assert_fail@plt+0xbe54>
   1d2f8:	b	1d344 <__assert_fail@plt+0xbe68>
   1d2fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d300:	movw	r1, #0
   1d304:	sdiv	r0, r1, r0
   1d308:	ldr	r1, [fp, #8]
   1d30c:	cmp	r0, r1
   1d310:	blt	1d330 <__assert_fail@plt+0xbe54>
   1d314:	b	1d344 <__assert_fail@plt+0xbe68>
   1d318:	ldr	r0, [fp, #8]
   1d31c:	mvn	r1, #0
   1d320:	udiv	r0, r1, r0
   1d324:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d328:	cmp	r0, r1
   1d32c:	bcs	1d344 <__assert_fail@plt+0xbe68>
   1d330:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d334:	ldr	r1, [fp, #8]
   1d338:	mul	r0, r0, r1
   1d33c:	str	r0, [fp, #-28]	; 0xffffffe4
   1d340:	b	1dba0 <__assert_fail@plt+0xc6c4>
   1d344:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d348:	ldr	r1, [fp, #8]
   1d34c:	mul	r0, r0, r1
   1d350:	str	r0, [fp, #-28]	; 0xffffffe4
   1d354:	b	1dbac <__assert_fail@plt+0xc6d0>
   1d358:	b	1d35c <__assert_fail@plt+0xbe80>
   1d35c:	b	1d360 <__assert_fail@plt+0xbe84>
   1d360:	ldr	r0, [fp, #8]
   1d364:	cmp	r0, #0
   1d368:	bge	1d46c <__assert_fail@plt+0xbf90>
   1d36c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d370:	cmp	r0, #0
   1d374:	bge	1d400 <__assert_fail@plt+0xbf24>
   1d378:	b	1d37c <__assert_fail@plt+0xbea0>
   1d37c:	ldr	r0, [pc, #1048]	; 1d79c <__assert_fail@plt+0xc2c0>
   1d380:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d384:	ldr	r2, [fp, #8]
   1d388:	sdiv	r0, r0, r2
   1d38c:	cmp	r1, r0
   1d390:	blt	1d4fc <__assert_fail@plt+0xc020>
   1d394:	b	1d510 <__assert_fail@plt+0xc034>
   1d398:	b	1d39c <__assert_fail@plt+0xbec0>
   1d39c:	ldr	r0, [pc, #1180]	; 1d840 <__assert_fail@plt+0xc364>
   1d3a0:	ldr	r1, [fp, #8]
   1d3a4:	cmp	r1, r0
   1d3a8:	blt	1d3c0 <__assert_fail@plt+0xbee4>
   1d3ac:	b	1d3cc <__assert_fail@plt+0xbef0>
   1d3b0:	ldr	r0, [fp, #8]
   1d3b4:	movw	r1, #0
   1d3b8:	cmp	r1, r0
   1d3bc:	bge	1d3cc <__assert_fail@plt+0xbef0>
   1d3c0:	movw	r0, #0
   1d3c4:	str	r0, [fp, #-60]	; 0xffffffc4
   1d3c8:	b	1d3e4 <__assert_fail@plt+0xbf08>
   1d3cc:	ldr	r0, [pc, #968]	; 1d79c <__assert_fail@plt+0xc2c0>
   1d3d0:	ldr	r1, [fp, #8]
   1d3d4:	movw	r2, #0
   1d3d8:	sub	r1, r2, r1
   1d3dc:	sdiv	r0, r0, r1
   1d3e0:	str	r0, [fp, #-60]	; 0xffffffc4
   1d3e4:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1d3e8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d3ec:	mvn	r2, #0
   1d3f0:	sub	r1, r2, r1
   1d3f4:	cmp	r0, r1
   1d3f8:	ble	1d4fc <__assert_fail@plt+0xc020>
   1d3fc:	b	1d510 <__assert_fail@plt+0xc034>
   1d400:	ldr	r0, [fp, #8]
   1d404:	cmn	r0, #1
   1d408:	bne	1d450 <__assert_fail@plt+0xbf74>
   1d40c:	b	1d410 <__assert_fail@plt+0xbf34>
   1d410:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d414:	add	r0, r0, #-2147483648	; 0x80000000
   1d418:	movw	r1, #0
   1d41c:	cmp	r1, r0
   1d420:	blt	1d4fc <__assert_fail@plt+0xc020>
   1d424:	b	1d510 <__assert_fail@plt+0xc034>
   1d428:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d42c:	movw	r1, #0
   1d430:	cmp	r1, r0
   1d434:	bge	1d510 <__assert_fail@plt+0xc034>
   1d438:	ldr	r0, [pc, #860]	; 1d79c <__assert_fail@plt+0xc2c0>
   1d43c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d440:	sub	r1, r1, #1
   1d444:	cmp	r0, r1
   1d448:	blt	1d4fc <__assert_fail@plt+0xc020>
   1d44c:	b	1d510 <__assert_fail@plt+0xc034>
   1d450:	ldr	r0, [pc, #3144]	; 1e0a0 <__assert_fail@plt+0xcbc4>
   1d454:	ldr	r1, [fp, #8]
   1d458:	sdiv	r0, r0, r1
   1d45c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d460:	cmp	r0, r1
   1d464:	blt	1d4fc <__assert_fail@plt+0xc020>
   1d468:	b	1d510 <__assert_fail@plt+0xc034>
   1d46c:	ldr	r0, [fp, #8]
   1d470:	cmp	r0, #0
   1d474:	bne	1d47c <__assert_fail@plt+0xbfa0>
   1d478:	b	1d510 <__assert_fail@plt+0xc034>
   1d47c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d480:	cmp	r0, #0
   1d484:	bge	1d4e4 <__assert_fail@plt+0xc008>
   1d488:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d48c:	cmn	r0, #1
   1d490:	bne	1d4c8 <__assert_fail@plt+0xbfec>
   1d494:	b	1d498 <__assert_fail@plt+0xbfbc>
   1d498:	ldr	r0, [fp, #8]
   1d49c:	add	r0, r0, #-2147483648	; 0x80000000
   1d4a0:	movw	r1, #0
   1d4a4:	cmp	r1, r0
   1d4a8:	blt	1d4fc <__assert_fail@plt+0xc020>
   1d4ac:	b	1d510 <__assert_fail@plt+0xc034>
   1d4b0:	ldr	r0, [pc, #740]	; 1d79c <__assert_fail@plt+0xc2c0>
   1d4b4:	ldr	r1, [fp, #8]
   1d4b8:	sub	r1, r1, #1
   1d4bc:	cmp	r0, r1
   1d4c0:	blt	1d4fc <__assert_fail@plt+0xc020>
   1d4c4:	b	1d510 <__assert_fail@plt+0xc034>
   1d4c8:	ldr	r0, [pc, #3024]	; 1e0a0 <__assert_fail@plt+0xcbc4>
   1d4cc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d4d0:	sdiv	r0, r0, r1
   1d4d4:	ldr	r1, [fp, #8]
   1d4d8:	cmp	r0, r1
   1d4dc:	blt	1d4fc <__assert_fail@plt+0xc020>
   1d4e0:	b	1d510 <__assert_fail@plt+0xc034>
   1d4e4:	ldr	r0, [pc, #688]	; 1d79c <__assert_fail@plt+0xc2c0>
   1d4e8:	ldr	r1, [fp, #8]
   1d4ec:	sdiv	r0, r0, r1
   1d4f0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d4f4:	cmp	r0, r1
   1d4f8:	bge	1d510 <__assert_fail@plt+0xc034>
   1d4fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d500:	ldr	r1, [fp, #8]
   1d504:	mul	r0, r0, r1
   1d508:	str	r0, [fp, #-28]	; 0xffffffe4
   1d50c:	b	1dba0 <__assert_fail@plt+0xc6c4>
   1d510:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d514:	ldr	r1, [fp, #8]
   1d518:	mul	r0, r0, r1
   1d51c:	str	r0, [fp, #-28]	; 0xffffffe4
   1d520:	b	1dbac <__assert_fail@plt+0xc6d0>
   1d524:	ldr	r0, [fp, #8]
   1d528:	cmp	r0, #0
   1d52c:	bge	1d63c <__assert_fail@plt+0xc160>
   1d530:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d534:	cmp	r0, #0
   1d538:	bge	1d5c4 <__assert_fail@plt+0xc0e8>
   1d53c:	b	1d55c <__assert_fail@plt+0xc080>
   1d540:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d544:	ldr	r1, [fp, #8]
   1d548:	mvn	r2, #0
   1d54c:	udiv	r1, r2, r1
   1d550:	cmp	r0, r1
   1d554:	bcc	1d6d8 <__assert_fail@plt+0xc1fc>
   1d558:	b	1d6ec <__assert_fail@plt+0xc210>
   1d55c:	b	1d560 <__assert_fail@plt+0xc084>
   1d560:	ldr	r0, [pc, #728]	; 1d840 <__assert_fail@plt+0xc364>
   1d564:	ldr	r1, [fp, #8]
   1d568:	cmp	r1, r0
   1d56c:	blt	1d584 <__assert_fail@plt+0xc0a8>
   1d570:	b	1d590 <__assert_fail@plt+0xc0b4>
   1d574:	ldr	r0, [fp, #8]
   1d578:	movw	r1, #0
   1d57c:	cmp	r1, r0
   1d580:	bge	1d590 <__assert_fail@plt+0xc0b4>
   1d584:	movw	r0, #1
   1d588:	str	r0, [fp, #-64]	; 0xffffffc0
   1d58c:	b	1d5a8 <__assert_fail@plt+0xc0cc>
   1d590:	ldr	r0, [fp, #8]
   1d594:	movw	r1, #0
   1d598:	sub	r0, r1, r0
   1d59c:	mvn	r1, #0
   1d5a0:	udiv	r0, r1, r0
   1d5a4:	str	r0, [fp, #-64]	; 0xffffffc0
   1d5a8:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1d5ac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d5b0:	mvn	r2, #0
   1d5b4:	sub	r1, r2, r1
   1d5b8:	cmp	r0, r1
   1d5bc:	bls	1d6d8 <__assert_fail@plt+0xc1fc>
   1d5c0:	b	1d6ec <__assert_fail@plt+0xc210>
   1d5c4:	b	1d5c8 <__assert_fail@plt+0xc0ec>
   1d5c8:	b	1d620 <__assert_fail@plt+0xc144>
   1d5cc:	b	1d620 <__assert_fail@plt+0xc144>
   1d5d0:	ldr	r0, [fp, #8]
   1d5d4:	cmn	r0, #1
   1d5d8:	bne	1d620 <__assert_fail@plt+0xc144>
   1d5dc:	b	1d5e0 <__assert_fail@plt+0xc104>
   1d5e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d5e4:	add	r0, r0, #0
   1d5e8:	movw	r1, #0
   1d5ec:	cmp	r1, r0
   1d5f0:	blt	1d6d8 <__assert_fail@plt+0xc1fc>
   1d5f4:	b	1d6ec <__assert_fail@plt+0xc210>
   1d5f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d5fc:	movw	r1, #0
   1d600:	cmp	r1, r0
   1d604:	bge	1d6ec <__assert_fail@plt+0xc210>
   1d608:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d60c:	sub	r0, r0, #1
   1d610:	mvn	r1, #0
   1d614:	cmp	r1, r0
   1d618:	blt	1d6d8 <__assert_fail@plt+0xc1fc>
   1d61c:	b	1d6ec <__assert_fail@plt+0xc210>
   1d620:	ldr	r0, [fp, #8]
   1d624:	movw	r1, #0
   1d628:	sdiv	r0, r1, r0
   1d62c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d630:	cmp	r0, r1
   1d634:	blt	1d6d8 <__assert_fail@plt+0xc1fc>
   1d638:	b	1d6ec <__assert_fail@plt+0xc210>
   1d63c:	ldr	r0, [fp, #8]
   1d640:	cmp	r0, #0
   1d644:	bne	1d64c <__assert_fail@plt+0xc170>
   1d648:	b	1d6ec <__assert_fail@plt+0xc210>
   1d64c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d650:	cmp	r0, #0
   1d654:	bge	1d6c0 <__assert_fail@plt+0xc1e4>
   1d658:	b	1d65c <__assert_fail@plt+0xc180>
   1d65c:	b	1d6a4 <__assert_fail@plt+0xc1c8>
   1d660:	b	1d6a4 <__assert_fail@plt+0xc1c8>
   1d664:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d668:	cmn	r0, #1
   1d66c:	bne	1d6a4 <__assert_fail@plt+0xc1c8>
   1d670:	b	1d674 <__assert_fail@plt+0xc198>
   1d674:	ldr	r0, [fp, #8]
   1d678:	add	r0, r0, #0
   1d67c:	movw	r1, #0
   1d680:	cmp	r1, r0
   1d684:	blt	1d6d8 <__assert_fail@plt+0xc1fc>
   1d688:	b	1d6ec <__assert_fail@plt+0xc210>
   1d68c:	ldr	r0, [fp, #8]
   1d690:	sub	r0, r0, #1
   1d694:	mvn	r1, #0
   1d698:	cmp	r1, r0
   1d69c:	blt	1d6d8 <__assert_fail@plt+0xc1fc>
   1d6a0:	b	1d6ec <__assert_fail@plt+0xc210>
   1d6a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d6a8:	movw	r1, #0
   1d6ac:	sdiv	r0, r1, r0
   1d6b0:	ldr	r1, [fp, #8]
   1d6b4:	cmp	r0, r1
   1d6b8:	blt	1d6d8 <__assert_fail@plt+0xc1fc>
   1d6bc:	b	1d6ec <__assert_fail@plt+0xc210>
   1d6c0:	ldr	r0, [fp, #8]
   1d6c4:	mvn	r1, #0
   1d6c8:	udiv	r0, r1, r0
   1d6cc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1d6d0:	cmp	r0, r1
   1d6d4:	bcs	1d6ec <__assert_fail@plt+0xc210>
   1d6d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d6dc:	ldr	r1, [fp, #8]
   1d6e0:	mul	r0, r0, r1
   1d6e4:	str	r0, [fp, #-28]	; 0xffffffe4
   1d6e8:	b	1dba0 <__assert_fail@plt+0xc6c4>
   1d6ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d6f0:	ldr	r1, [fp, #8]
   1d6f4:	mul	r0, r0, r1
   1d6f8:	str	r0, [fp, #-28]	; 0xffffffe4
   1d6fc:	b	1dbac <__assert_fail@plt+0xc6d0>
   1d700:	b	1d704 <__assert_fail@plt+0xc228>
   1d704:	ldr	r0, [fp, #8]
   1d708:	cmp	r0, #0
   1d70c:	bge	1d87c <__assert_fail@plt+0xc3a0>
   1d710:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d714:	cmp	r0, #0
   1d718:	bge	1d7f4 <__assert_fail@plt+0xc318>
   1d71c:	b	1d720 <__assert_fail@plt+0xc244>
   1d720:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d724:	ldr	r1, [fp, #8]
   1d728:	asr	r3, r1, #31
   1d72c:	mvn	r2, #0
   1d730:	mvn	ip, #-2147483648	; 0x80000000
   1d734:	str	r0, [fp, #-68]	; 0xffffffbc
   1d738:	mov	r0, r2
   1d73c:	str	r1, [fp, #-72]	; 0xffffffb8
   1d740:	mov	r1, ip
   1d744:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1d748:	bl	24068 <__assert_fail@plt+0x12b8c>
   1d74c:	ldr	r2, [fp, #-68]	; 0xffffffbc
   1d750:	subs	r0, r2, r0
   1d754:	rscs	r1, r1, r2, asr #31
   1d758:	blt	1d944 <__assert_fail@plt+0xc468>
   1d75c:	b	1d958 <__assert_fail@plt+0xc47c>
   1d760:	b	1d764 <__assert_fail@plt+0xc288>
   1d764:	ldr	r0, [pc, #212]	; 1d840 <__assert_fail@plt+0xc364>
   1d768:	ldr	r1, [fp, #8]
   1d76c:	cmp	r1, r0
   1d770:	blt	1d788 <__assert_fail@plt+0xc2ac>
   1d774:	b	1d7a0 <__assert_fail@plt+0xc2c4>
   1d778:	ldr	r0, [fp, #8]
   1d77c:	movw	r1, #0
   1d780:	cmp	r1, r0
   1d784:	bge	1d7a0 <__assert_fail@plt+0xc2c4>
   1d788:	mov	r0, #0
   1d78c:	mvn	r1, #0
   1d790:	str	r1, [fp, #-76]	; 0xffffffb4
   1d794:	str	r0, [fp, #-80]	; 0xffffffb0
   1d798:	b	1d7d4 <__assert_fail@plt+0xc2f8>
   1d79c:	svcvc	0x00ffffff
   1d7a0:	ldr	r0, [fp, #8]
   1d7a4:	rsb	r0, r0, #0
   1d7a8:	asr	r3, r0, #31
   1d7ac:	mvn	r1, #0
   1d7b0:	mvn	r2, #-2147483648	; 0x80000000
   1d7b4:	str	r0, [fp, #-84]	; 0xffffffac
   1d7b8:	mov	r0, r1
   1d7bc:	mov	r1, r2
   1d7c0:	ldr	r2, [fp, #-84]	; 0xffffffac
   1d7c4:	bl	24068 <__assert_fail@plt+0x12b8c>
   1d7c8:	str	r0, [fp, #-76]	; 0xffffffb4
   1d7cc:	str	r1, [fp, #-80]	; 0xffffffb0
   1d7d0:	b	1d7d4 <__assert_fail@plt+0xc2f8>
   1d7d4:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1d7d8:	ldr	r1, [fp, #-76]	; 0xffffffb4
   1d7dc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1d7e0:	mvn	r2, r2
   1d7e4:	subs	r1, r2, r1
   1d7e8:	rscs	r0, r0, r2, asr #31
   1d7ec:	bge	1d944 <__assert_fail@plt+0xc468>
   1d7f0:	b	1d958 <__assert_fail@plt+0xc47c>
   1d7f4:	ldr	r0, [fp, #8]
   1d7f8:	cmn	r0, #1
   1d7fc:	bne	1d844 <__assert_fail@plt+0xc368>
   1d800:	b	1d804 <__assert_fail@plt+0xc328>
   1d804:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d808:	mov	r1, #-2147483648	; 0x80000000
   1d80c:	add	r1, r1, r0, asr #31
   1d810:	rsbs	r0, r0, #0
   1d814:	rscs	r1, r1, #0
   1d818:	blt	1d944 <__assert_fail@plt+0xc468>
   1d81c:	b	1d958 <__assert_fail@plt+0xc47c>
   1d820:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d824:	movw	r1, #0
   1d828:	cmp	r1, r0
   1d82c:	bge	1d958 <__assert_fail@plt+0xc47c>
   1d830:	mov	r0, #0
   1d834:	cmp	r0, #0
   1d838:	bne	1d944 <__assert_fail@plt+0xc468>
   1d83c:	b	1d958 <__assert_fail@plt+0xc47c>
   1d840:	andhi	r0, r0, r1
   1d844:	ldr	r0, [fp, #8]
   1d848:	asr	r3, r0, #31
   1d84c:	mov	r1, #0
   1d850:	mov	r2, #-2147483648	; 0x80000000
   1d854:	str	r0, [fp, #-88]	; 0xffffffa8
   1d858:	mov	r0, r1
   1d85c:	mov	r1, r2
   1d860:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1d864:	bl	24068 <__assert_fail@plt+0x12b8c>
   1d868:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1d86c:	subs	r0, r0, r2
   1d870:	sbcs	r1, r1, r2, asr #31
   1d874:	blt	1d944 <__assert_fail@plt+0xc468>
   1d878:	b	1d958 <__assert_fail@plt+0xc47c>
   1d87c:	ldr	r0, [fp, #8]
   1d880:	cmp	r0, #0
   1d884:	bne	1d88c <__assert_fail@plt+0xc3b0>
   1d888:	b	1d958 <__assert_fail@plt+0xc47c>
   1d88c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d890:	cmp	r0, #0
   1d894:	bge	1d90c <__assert_fail@plt+0xc430>
   1d898:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d89c:	cmn	r0, #1
   1d8a0:	bne	1d8d4 <__assert_fail@plt+0xc3f8>
   1d8a4:	b	1d8a8 <__assert_fail@plt+0xc3cc>
   1d8a8:	ldr	r0, [fp, #8]
   1d8ac:	mov	r1, #-2147483648	; 0x80000000
   1d8b0:	add	r1, r1, r0, asr #31
   1d8b4:	rsbs	r0, r0, #0
   1d8b8:	rscs	r1, r1, #0
   1d8bc:	blt	1d944 <__assert_fail@plt+0xc468>
   1d8c0:	b	1d958 <__assert_fail@plt+0xc47c>
   1d8c4:	mov	r0, #0
   1d8c8:	cmp	r0, #0
   1d8cc:	bne	1d944 <__assert_fail@plt+0xc468>
   1d8d0:	b	1d958 <__assert_fail@plt+0xc47c>
   1d8d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d8d8:	asr	r3, r0, #31
   1d8dc:	mov	r1, #0
   1d8e0:	mov	r2, #-2147483648	; 0x80000000
   1d8e4:	str	r0, [fp, #-92]	; 0xffffffa4
   1d8e8:	mov	r0, r1
   1d8ec:	mov	r1, r2
   1d8f0:	ldr	r2, [fp, #-92]	; 0xffffffa4
   1d8f4:	bl	24068 <__assert_fail@plt+0x12b8c>
   1d8f8:	ldr	r2, [fp, #8]
   1d8fc:	subs	r0, r0, r2
   1d900:	sbcs	r1, r1, r2, asr #31
   1d904:	blt	1d944 <__assert_fail@plt+0xc468>
   1d908:	b	1d958 <__assert_fail@plt+0xc47c>
   1d90c:	ldr	r0, [fp, #8]
   1d910:	asr	r3, r0, #31
   1d914:	mvn	r1, #0
   1d918:	mvn	r2, #-2147483648	; 0x80000000
   1d91c:	str	r0, [fp, #-96]	; 0xffffffa0
   1d920:	mov	r0, r1
   1d924:	mov	r1, r2
   1d928:	ldr	r2, [fp, #-96]	; 0xffffffa0
   1d92c:	bl	24068 <__assert_fail@plt+0x12b8c>
   1d930:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1d934:	subs	r0, r0, r2
   1d938:	sbcs	r1, r1, r2, asr #31
   1d93c:	bge	1d958 <__assert_fail@plt+0xc47c>
   1d940:	b	1d944 <__assert_fail@plt+0xc468>
   1d944:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d948:	ldr	r1, [fp, #8]
   1d94c:	mul	r0, r0, r1
   1d950:	str	r0, [fp, #-28]	; 0xffffffe4
   1d954:	b	1dba0 <__assert_fail@plt+0xc6c4>
   1d958:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d95c:	ldr	r1, [fp, #8]
   1d960:	mul	r0, r0, r1
   1d964:	str	r0, [fp, #-28]	; 0xffffffe4
   1d968:	b	1dbac <__assert_fail@plt+0xc6d0>
   1d96c:	ldr	r0, [fp, #8]
   1d970:	cmp	r0, #0
   1d974:	bge	1dac4 <__assert_fail@plt+0xc5e8>
   1d978:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d97c:	cmp	r0, #0
   1d980:	bge	1da4c <__assert_fail@plt+0xc570>
   1d984:	b	1d9c4 <__assert_fail@plt+0xc4e8>
   1d988:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1d98c:	ldr	r1, [fp, #8]
   1d990:	asr	r3, r1, #31
   1d994:	mvn	r2, #0
   1d998:	str	r0, [fp, #-100]	; 0xffffff9c
   1d99c:	mov	r0, r2
   1d9a0:	str	r1, [fp, #-104]	; 0xffffff98
   1d9a4:	mov	r1, r2
   1d9a8:	ldr	r2, [fp, #-104]	; 0xffffff98
   1d9ac:	bl	2413c <__assert_fail@plt+0x12c60>
   1d9b0:	ldr	r2, [fp, #-100]	; 0xffffff9c
   1d9b4:	subs	r0, r2, r0
   1d9b8:	rscs	r1, r1, r2, asr #31
   1d9bc:	bcc	1db78 <__assert_fail@plt+0xc69c>
   1d9c0:	b	1db8c <__assert_fail@plt+0xc6b0>
   1d9c4:	b	1d9c8 <__assert_fail@plt+0xc4ec>
   1d9c8:	ldr	r0, [pc, #-400]	; 1d840 <__assert_fail@plt+0xc364>
   1d9cc:	ldr	r1, [fp, #8]
   1d9d0:	cmp	r1, r0
   1d9d4:	blt	1d9ec <__assert_fail@plt+0xc510>
   1d9d8:	b	1da00 <__assert_fail@plt+0xc524>
   1d9dc:	ldr	r0, [fp, #8]
   1d9e0:	movw	r1, #0
   1d9e4:	cmp	r1, r0
   1d9e8:	bge	1da00 <__assert_fail@plt+0xc524>
   1d9ec:	mov	r0, #1
   1d9f0:	mvn	r1, #0
   1d9f4:	str	r1, [sp, #108]	; 0x6c
   1d9f8:	str	r0, [sp, #104]	; 0x68
   1d9fc:	b	1da2c <__assert_fail@plt+0xc550>
   1da00:	ldr	r0, [fp, #8]
   1da04:	rsb	r0, r0, #0
   1da08:	asr	r3, r0, #31
   1da0c:	mvn	r1, #0
   1da10:	str	r0, [sp, #100]	; 0x64
   1da14:	mov	r0, r1
   1da18:	ldr	r2, [sp, #100]	; 0x64
   1da1c:	bl	2413c <__assert_fail@plt+0x12c60>
   1da20:	str	r0, [sp, #108]	; 0x6c
   1da24:	str	r1, [sp, #104]	; 0x68
   1da28:	b	1da2c <__assert_fail@plt+0xc550>
   1da2c:	ldr	r0, [sp, #104]	; 0x68
   1da30:	ldr	r1, [sp, #108]	; 0x6c
   1da34:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1da38:	mvn	r2, r2
   1da3c:	subs	r1, r2, r1
   1da40:	rscs	r0, r0, r2, asr #31
   1da44:	bcs	1db78 <__assert_fail@plt+0xc69c>
   1da48:	b	1db8c <__assert_fail@plt+0xc6b0>
   1da4c:	b	1da50 <__assert_fail@plt+0xc574>
   1da50:	b	1daa8 <__assert_fail@plt+0xc5cc>
   1da54:	b	1daa8 <__assert_fail@plt+0xc5cc>
   1da58:	ldr	r0, [fp, #8]
   1da5c:	cmn	r0, #1
   1da60:	bne	1daa8 <__assert_fail@plt+0xc5cc>
   1da64:	b	1da68 <__assert_fail@plt+0xc58c>
   1da68:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1da6c:	add	r0, r0, #0
   1da70:	movw	r1, #0
   1da74:	cmp	r1, r0
   1da78:	blt	1db78 <__assert_fail@plt+0xc69c>
   1da7c:	b	1db8c <__assert_fail@plt+0xc6b0>
   1da80:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1da84:	movw	r1, #0
   1da88:	cmp	r1, r0
   1da8c:	bge	1db8c <__assert_fail@plt+0xc6b0>
   1da90:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1da94:	sub	r0, r0, #1
   1da98:	mvn	r1, #0
   1da9c:	cmp	r1, r0
   1daa0:	blt	1db78 <__assert_fail@plt+0xc69c>
   1daa4:	b	1db8c <__assert_fail@plt+0xc6b0>
   1daa8:	ldr	r0, [fp, #8]
   1daac:	movw	r1, #0
   1dab0:	sdiv	r0, r1, r0
   1dab4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1dab8:	cmp	r0, r1
   1dabc:	blt	1db78 <__assert_fail@plt+0xc69c>
   1dac0:	b	1db8c <__assert_fail@plt+0xc6b0>
   1dac4:	ldr	r0, [fp, #8]
   1dac8:	cmp	r0, #0
   1dacc:	bne	1dad4 <__assert_fail@plt+0xc5f8>
   1dad0:	b	1db8c <__assert_fail@plt+0xc6b0>
   1dad4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dad8:	cmp	r0, #0
   1dadc:	bge	1db48 <__assert_fail@plt+0xc66c>
   1dae0:	b	1dae4 <__assert_fail@plt+0xc608>
   1dae4:	b	1db2c <__assert_fail@plt+0xc650>
   1dae8:	b	1db2c <__assert_fail@plt+0xc650>
   1daec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1daf0:	cmn	r0, #1
   1daf4:	bne	1db2c <__assert_fail@plt+0xc650>
   1daf8:	b	1dafc <__assert_fail@plt+0xc620>
   1dafc:	ldr	r0, [fp, #8]
   1db00:	add	r0, r0, #0
   1db04:	movw	r1, #0
   1db08:	cmp	r1, r0
   1db0c:	blt	1db78 <__assert_fail@plt+0xc69c>
   1db10:	b	1db8c <__assert_fail@plt+0xc6b0>
   1db14:	ldr	r0, [fp, #8]
   1db18:	sub	r0, r0, #1
   1db1c:	mvn	r1, #0
   1db20:	cmp	r1, r0
   1db24:	blt	1db78 <__assert_fail@plt+0xc69c>
   1db28:	b	1db8c <__assert_fail@plt+0xc6b0>
   1db2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1db30:	movw	r1, #0
   1db34:	sdiv	r0, r1, r0
   1db38:	ldr	r1, [fp, #8]
   1db3c:	cmp	r0, r1
   1db40:	blt	1db78 <__assert_fail@plt+0xc69c>
   1db44:	b	1db8c <__assert_fail@plt+0xc6b0>
   1db48:	ldr	r0, [fp, #8]
   1db4c:	asr	r3, r0, #31
   1db50:	mvn	r1, #0
   1db54:	str	r0, [sp, #96]	; 0x60
   1db58:	mov	r0, r1
   1db5c:	ldr	r2, [sp, #96]	; 0x60
   1db60:	bl	2413c <__assert_fail@plt+0x12c60>
   1db64:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1db68:	subs	r0, r0, r2
   1db6c:	sbcs	r1, r1, r2, asr #31
   1db70:	bcs	1db8c <__assert_fail@plt+0xc6b0>
   1db74:	b	1db78 <__assert_fail@plt+0xc69c>
   1db78:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1db7c:	ldr	r1, [fp, #8]
   1db80:	mul	r0, r0, r1
   1db84:	str	r0, [fp, #-28]	; 0xffffffe4
   1db88:	b	1dba0 <__assert_fail@plt+0xc6c4>
   1db8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1db90:	ldr	r1, [fp, #8]
   1db94:	mul	r0, r0, r1
   1db98:	str	r0, [fp, #-28]	; 0xffffffe4
   1db9c:	b	1dbac <__assert_fail@plt+0xc6d0>
   1dba0:	ldr	r0, [pc, #-1036]	; 1d79c <__assert_fail@plt+0xc2c0>
   1dba4:	str	r0, [sp, #92]	; 0x5c
   1dba8:	b	1dbcc <__assert_fail@plt+0xc6f0>
   1dbac:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1dbb0:	cmp	r0, #64	; 0x40
   1dbb4:	movw	r0, #0
   1dbb8:	movlt	r0, #1
   1dbbc:	tst	r0, #1
   1dbc0:	movw	r0, #64	; 0x40
   1dbc4:	moveq	r0, #0
   1dbc8:	str	r0, [sp, #92]	; 0x5c
   1dbcc:	ldr	r0, [sp, #92]	; 0x5c
   1dbd0:	str	r0, [fp, #-32]	; 0xffffffe0
   1dbd4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1dbd8:	cmp	r0, #0
   1dbdc:	beq	1dc0c <__assert_fail@plt+0xc730>
   1dbe0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1dbe4:	ldr	r1, [fp, #8]
   1dbe8:	sdiv	r0, r0, r1
   1dbec:	str	r0, [fp, #-24]	; 0xffffffe8
   1dbf0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1dbf4:	mov	r1, r0
   1dbf8:	ldr	r2, [fp, #8]
   1dbfc:	sdiv	r3, r0, r2
   1dc00:	mls	r0, r3, r2, r0
   1dc04:	sub	r0, r1, r0
   1dc08:	str	r0, [fp, #-28]	; 0xffffffe4
   1dc0c:	ldr	r0, [fp, #-4]
   1dc10:	movw	r1, #0
   1dc14:	cmp	r0, r1
   1dc18:	bne	1dc28 <__assert_fail@plt+0xc74c>
   1dc1c:	ldr	r0, [fp, #-8]
   1dc20:	movw	r1, #0
   1dc24:	str	r1, [r0]
   1dc28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dc2c:	ldr	r1, [fp, #-20]	; 0xffffffec
   1dc30:	sub	r0, r0, r1
   1dc34:	ldr	r1, [fp, #-12]
   1dc38:	cmp	r0, r1
   1dc3c:	bge	1f028 <__assert_fail@plt+0xdb4c>
   1dc40:	ldr	r0, [fp, #-20]	; 0xffffffec
   1dc44:	ldr	r1, [fp, #-12]
   1dc48:	add	r1, r0, r1
   1dc4c:	mov	r2, #1
   1dc50:	cmp	r1, r0
   1dc54:	movwvc	r2, #0
   1dc58:	str	r1, [fp, #-24]	; 0xffffffe8
   1dc5c:	tst	r2, #1
   1dc60:	bne	1f024 <__assert_fail@plt+0xdb48>
   1dc64:	ldr	r0, [fp, #-16]
   1dc68:	movw	r1, #0
   1dc6c:	cmp	r1, r0
   1dc70:	bgt	1dc84 <__assert_fail@plt+0xc7a8>
   1dc74:	ldr	r0, [fp, #-16]
   1dc78:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1dc7c:	cmp	r0, r1
   1dc80:	blt	1f024 <__assert_fail@plt+0xdb48>
   1dc84:	b	1e060 <__assert_fail@plt+0xcb84>
   1dc88:			; <UNDEFINED> instruction: 0xffff8000
   1dc8c:	b	1dc90 <__assert_fail@plt+0xc7b4>
   1dc90:	ldr	r0, [fp, #8]
   1dc94:	cmp	r0, #0
   1dc98:	bge	1ddac <__assert_fail@plt+0xc8d0>
   1dc9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dca0:	cmp	r0, #0
   1dca4:	bge	1dd30 <__assert_fail@plt+0xc854>
   1dca8:	b	1dcac <__assert_fail@plt+0xc7d0>
   1dcac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dcb0:	ldr	r1, [fp, #8]
   1dcb4:	movw	r2, #127	; 0x7f
   1dcb8:	sdiv	r1, r2, r1
   1dcbc:	cmp	r0, r1
   1dcc0:	blt	1de4c <__assert_fail@plt+0xc970>
   1dcc4:	b	1de64 <__assert_fail@plt+0xc988>
   1dcc8:	b	1dccc <__assert_fail@plt+0xc7f0>
   1dccc:	ldr	r0, [pc, #-1172]	; 1d840 <__assert_fail@plt+0xc364>
   1dcd0:	ldr	r1, [fp, #8]
   1dcd4:	cmp	r1, r0
   1dcd8:	blt	1dcf0 <__assert_fail@plt+0xc814>
   1dcdc:	b	1dcfc <__assert_fail@plt+0xc820>
   1dce0:	ldr	r0, [fp, #8]
   1dce4:	movw	r1, #0
   1dce8:	cmp	r1, r0
   1dcec:	bge	1dcfc <__assert_fail@plt+0xc820>
   1dcf0:	movw	r0, #0
   1dcf4:	str	r0, [sp, #88]	; 0x58
   1dcf8:	b	1dd14 <__assert_fail@plt+0xc838>
   1dcfc:	ldr	r0, [fp, #8]
   1dd00:	movw	r1, #0
   1dd04:	sub	r0, r1, r0
   1dd08:	movw	r1, #127	; 0x7f
   1dd0c:	sdiv	r0, r1, r0
   1dd10:	str	r0, [sp, #88]	; 0x58
   1dd14:	ldr	r0, [sp, #88]	; 0x58
   1dd18:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1dd1c:	mvn	r2, #0
   1dd20:	sub	r1, r2, r1
   1dd24:	cmp	r0, r1
   1dd28:	ble	1de4c <__assert_fail@plt+0xc970>
   1dd2c:	b	1de64 <__assert_fail@plt+0xc988>
   1dd30:	b	1dd34 <__assert_fail@plt+0xc858>
   1dd34:	b	1dd90 <__assert_fail@plt+0xc8b4>
   1dd38:	b	1dd90 <__assert_fail@plt+0xc8b4>
   1dd3c:	ldr	r0, [fp, #8]
   1dd40:	cmn	r0, #1
   1dd44:	bne	1dd90 <__assert_fail@plt+0xc8b4>
   1dd48:	b	1dd4c <__assert_fail@plt+0xc870>
   1dd4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dd50:	mvn	r1, #127	; 0x7f
   1dd54:	add	r0, r0, r1
   1dd58:	movw	r1, #0
   1dd5c:	cmp	r1, r0
   1dd60:	blt	1de4c <__assert_fail@plt+0xc970>
   1dd64:	b	1de64 <__assert_fail@plt+0xc988>
   1dd68:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dd6c:	movw	r1, #0
   1dd70:	cmp	r1, r0
   1dd74:	bge	1de64 <__assert_fail@plt+0xc988>
   1dd78:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dd7c:	sub	r0, r0, #1
   1dd80:	movw	r1, #127	; 0x7f
   1dd84:	cmp	r1, r0
   1dd88:	blt	1de4c <__assert_fail@plt+0xc970>
   1dd8c:	b	1de64 <__assert_fail@plt+0xc988>
   1dd90:	ldr	r0, [fp, #8]
   1dd94:	mvn	r1, #127	; 0x7f
   1dd98:	sdiv	r0, r1, r0
   1dd9c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1dda0:	cmp	r0, r1
   1dda4:	blt	1de4c <__assert_fail@plt+0xc970>
   1dda8:	b	1de64 <__assert_fail@plt+0xc988>
   1ddac:	ldr	r0, [fp, #8]
   1ddb0:	cmp	r0, #0
   1ddb4:	bne	1ddbc <__assert_fail@plt+0xc8e0>
   1ddb8:	b	1de64 <__assert_fail@plt+0xc988>
   1ddbc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ddc0:	cmp	r0, #0
   1ddc4:	bge	1de34 <__assert_fail@plt+0xc958>
   1ddc8:	b	1ddcc <__assert_fail@plt+0xc8f0>
   1ddcc:	b	1de18 <__assert_fail@plt+0xc93c>
   1ddd0:	b	1de18 <__assert_fail@plt+0xc93c>
   1ddd4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ddd8:	cmn	r0, #1
   1dddc:	bne	1de18 <__assert_fail@plt+0xc93c>
   1dde0:	b	1dde4 <__assert_fail@plt+0xc908>
   1dde4:	ldr	r0, [fp, #8]
   1dde8:	mvn	r1, #127	; 0x7f
   1ddec:	add	r0, r0, r1
   1ddf0:	movw	r1, #0
   1ddf4:	cmp	r1, r0
   1ddf8:	blt	1de4c <__assert_fail@plt+0xc970>
   1ddfc:	b	1de64 <__assert_fail@plt+0xc988>
   1de00:	ldr	r0, [fp, #8]
   1de04:	sub	r0, r0, #1
   1de08:	movw	r1, #127	; 0x7f
   1de0c:	cmp	r1, r0
   1de10:	blt	1de4c <__assert_fail@plt+0xc970>
   1de14:	b	1de64 <__assert_fail@plt+0xc988>
   1de18:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1de1c:	mvn	r1, #127	; 0x7f
   1de20:	sdiv	r0, r1, r0
   1de24:	ldr	r1, [fp, #8]
   1de28:	cmp	r0, r1
   1de2c:	blt	1de4c <__assert_fail@plt+0xc970>
   1de30:	b	1de64 <__assert_fail@plt+0xc988>
   1de34:	ldr	r0, [fp, #8]
   1de38:	movw	r1, #127	; 0x7f
   1de3c:	sdiv	r0, r1, r0
   1de40:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1de44:	cmp	r0, r1
   1de48:	bge	1de64 <__assert_fail@plt+0xc988>
   1de4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1de50:	ldr	r1, [fp, #8]
   1de54:	mul	r0, r0, r1
   1de58:	sxtb	r0, r0
   1de5c:	str	r0, [fp, #-28]	; 0xffffffe4
   1de60:	b	1f024 <__assert_fail@plt+0xdb48>
   1de64:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1de68:	ldr	r1, [fp, #8]
   1de6c:	mul	r0, r0, r1
   1de70:	sxtb	r0, r0
   1de74:	str	r0, [fp, #-28]	; 0xffffffe4
   1de78:	b	1f028 <__assert_fail@plt+0xdb4c>
   1de7c:	ldr	r0, [fp, #8]
   1de80:	cmp	r0, #0
   1de84:	bge	1df94 <__assert_fail@plt+0xcab8>
   1de88:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1de8c:	cmp	r0, #0
   1de90:	bge	1df1c <__assert_fail@plt+0xca40>
   1de94:	b	1de98 <__assert_fail@plt+0xc9bc>
   1de98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1de9c:	ldr	r1, [fp, #8]
   1dea0:	movw	r2, #255	; 0xff
   1dea4:	sdiv	r1, r2, r1
   1dea8:	cmp	r0, r1
   1deac:	blt	1e030 <__assert_fail@plt+0xcb54>
   1deb0:	b	1e048 <__assert_fail@plt+0xcb6c>
   1deb4:	b	1deb8 <__assert_fail@plt+0xc9dc>
   1deb8:	ldr	r0, [pc, #-1664]	; 1d840 <__assert_fail@plt+0xc364>
   1debc:	ldr	r1, [fp, #8]
   1dec0:	cmp	r1, r0
   1dec4:	blt	1dedc <__assert_fail@plt+0xca00>
   1dec8:	b	1dee8 <__assert_fail@plt+0xca0c>
   1decc:	ldr	r0, [fp, #8]
   1ded0:	movw	r1, #0
   1ded4:	cmp	r1, r0
   1ded8:	bge	1dee8 <__assert_fail@plt+0xca0c>
   1dedc:	movw	r0, #0
   1dee0:	str	r0, [sp, #84]	; 0x54
   1dee4:	b	1df00 <__assert_fail@plt+0xca24>
   1dee8:	ldr	r0, [fp, #8]
   1deec:	movw	r1, #0
   1def0:	sub	r0, r1, r0
   1def4:	movw	r1, #255	; 0xff
   1def8:	sdiv	r0, r1, r0
   1defc:	str	r0, [sp, #84]	; 0x54
   1df00:	ldr	r0, [sp, #84]	; 0x54
   1df04:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1df08:	mvn	r2, #0
   1df0c:	sub	r1, r2, r1
   1df10:	cmp	r0, r1
   1df14:	ble	1e030 <__assert_fail@plt+0xcb54>
   1df18:	b	1e048 <__assert_fail@plt+0xcb6c>
   1df1c:	b	1df20 <__assert_fail@plt+0xca44>
   1df20:	b	1df78 <__assert_fail@plt+0xca9c>
   1df24:	b	1df78 <__assert_fail@plt+0xca9c>
   1df28:	ldr	r0, [fp, #8]
   1df2c:	cmn	r0, #1
   1df30:	bne	1df78 <__assert_fail@plt+0xca9c>
   1df34:	b	1df38 <__assert_fail@plt+0xca5c>
   1df38:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1df3c:	add	r0, r0, #0
   1df40:	movw	r1, #0
   1df44:	cmp	r1, r0
   1df48:	blt	1e030 <__assert_fail@plt+0xcb54>
   1df4c:	b	1e048 <__assert_fail@plt+0xcb6c>
   1df50:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1df54:	movw	r1, #0
   1df58:	cmp	r1, r0
   1df5c:	bge	1e048 <__assert_fail@plt+0xcb6c>
   1df60:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1df64:	sub	r0, r0, #1
   1df68:	mvn	r1, #0
   1df6c:	cmp	r1, r0
   1df70:	blt	1e030 <__assert_fail@plt+0xcb54>
   1df74:	b	1e048 <__assert_fail@plt+0xcb6c>
   1df78:	ldr	r0, [fp, #8]
   1df7c:	movw	r1, #0
   1df80:	sdiv	r0, r1, r0
   1df84:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1df88:	cmp	r0, r1
   1df8c:	blt	1e030 <__assert_fail@plt+0xcb54>
   1df90:	b	1e048 <__assert_fail@plt+0xcb6c>
   1df94:	ldr	r0, [fp, #8]
   1df98:	cmp	r0, #0
   1df9c:	bne	1dfa4 <__assert_fail@plt+0xcac8>
   1dfa0:	b	1e048 <__assert_fail@plt+0xcb6c>
   1dfa4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dfa8:	cmp	r0, #0
   1dfac:	bge	1e018 <__assert_fail@plt+0xcb3c>
   1dfb0:	b	1dfb4 <__assert_fail@plt+0xcad8>
   1dfb4:	b	1dffc <__assert_fail@plt+0xcb20>
   1dfb8:	b	1dffc <__assert_fail@plt+0xcb20>
   1dfbc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1dfc0:	cmn	r0, #1
   1dfc4:	bne	1dffc <__assert_fail@plt+0xcb20>
   1dfc8:	b	1dfcc <__assert_fail@plt+0xcaf0>
   1dfcc:	ldr	r0, [fp, #8]
   1dfd0:	add	r0, r0, #0
   1dfd4:	movw	r1, #0
   1dfd8:	cmp	r1, r0
   1dfdc:	blt	1e030 <__assert_fail@plt+0xcb54>
   1dfe0:	b	1e048 <__assert_fail@plt+0xcb6c>
   1dfe4:	ldr	r0, [fp, #8]
   1dfe8:	sub	r0, r0, #1
   1dfec:	mvn	r1, #0
   1dff0:	cmp	r1, r0
   1dff4:	blt	1e030 <__assert_fail@plt+0xcb54>
   1dff8:	b	1e048 <__assert_fail@plt+0xcb6c>
   1dffc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e000:	movw	r1, #0
   1e004:	sdiv	r0, r1, r0
   1e008:	ldr	r1, [fp, #8]
   1e00c:	cmp	r0, r1
   1e010:	blt	1e030 <__assert_fail@plt+0xcb54>
   1e014:	b	1e048 <__assert_fail@plt+0xcb6c>
   1e018:	ldr	r0, [fp, #8]
   1e01c:	movw	r1, #255	; 0xff
   1e020:	sdiv	r0, r1, r0
   1e024:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e028:	cmp	r0, r1
   1e02c:	bge	1e048 <__assert_fail@plt+0xcb6c>
   1e030:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e034:	ldr	r1, [fp, #8]
   1e038:	mul	r0, r0, r1
   1e03c:	and	r0, r0, #255	; 0xff
   1e040:	str	r0, [fp, #-28]	; 0xffffffe4
   1e044:	b	1f024 <__assert_fail@plt+0xdb48>
   1e048:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e04c:	ldr	r1, [fp, #8]
   1e050:	mul	r0, r0, r1
   1e054:	and	r0, r0, #255	; 0xff
   1e058:	str	r0, [fp, #-28]	; 0xffffffe4
   1e05c:	b	1f028 <__assert_fail@plt+0xdb4c>
   1e060:	b	1e43c <__assert_fail@plt+0xcf60>
   1e064:	b	1e068 <__assert_fail@plt+0xcb8c>
   1e068:	ldr	r0, [fp, #8]
   1e06c:	cmp	r0, #0
   1e070:	bge	1e188 <__assert_fail@plt+0xccac>
   1e074:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e078:	cmp	r0, #0
   1e07c:	bge	1e10c <__assert_fail@plt+0xcc30>
   1e080:	b	1e084 <__assert_fail@plt+0xcba8>
   1e084:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e088:	ldr	r1, [fp, #8]
   1e08c:	movw	r2, #32767	; 0x7fff
   1e090:	sdiv	r1, r2, r1
   1e094:	cmp	r0, r1
   1e098:	blt	1e228 <__assert_fail@plt+0xcd4c>
   1e09c:	b	1e240 <__assert_fail@plt+0xcd64>
   1e0a0:	andhi	r0, r0, r0
   1e0a4:	b	1e0a8 <__assert_fail@plt+0xcbcc>
   1e0a8:	ldr	r0, [pc, #4004]	; 1f054 <__assert_fail@plt+0xdb78>
   1e0ac:	ldr	r1, [fp, #8]
   1e0b0:	cmp	r1, r0
   1e0b4:	blt	1e0cc <__assert_fail@plt+0xcbf0>
   1e0b8:	b	1e0d8 <__assert_fail@plt+0xcbfc>
   1e0bc:	ldr	r0, [fp, #8]
   1e0c0:	movw	r1, #0
   1e0c4:	cmp	r1, r0
   1e0c8:	bge	1e0d8 <__assert_fail@plt+0xcbfc>
   1e0cc:	movw	r0, #0
   1e0d0:	str	r0, [sp, #80]	; 0x50
   1e0d4:	b	1e0f0 <__assert_fail@plt+0xcc14>
   1e0d8:	ldr	r0, [fp, #8]
   1e0dc:	movw	r1, #0
   1e0e0:	sub	r0, r1, r0
   1e0e4:	movw	r1, #32767	; 0x7fff
   1e0e8:	sdiv	r0, r1, r0
   1e0ec:	str	r0, [sp, #80]	; 0x50
   1e0f0:	ldr	r0, [sp, #80]	; 0x50
   1e0f4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e0f8:	mvn	r2, #0
   1e0fc:	sub	r1, r2, r1
   1e100:	cmp	r0, r1
   1e104:	ble	1e228 <__assert_fail@plt+0xcd4c>
   1e108:	b	1e240 <__assert_fail@plt+0xcd64>
   1e10c:	b	1e110 <__assert_fail@plt+0xcc34>
   1e110:	b	1e16c <__assert_fail@plt+0xcc90>
   1e114:	b	1e16c <__assert_fail@plt+0xcc90>
   1e118:	ldr	r0, [fp, #8]
   1e11c:	cmn	r0, #1
   1e120:	bne	1e16c <__assert_fail@plt+0xcc90>
   1e124:	b	1e128 <__assert_fail@plt+0xcc4c>
   1e128:	ldr	r0, [pc, #3884]	; 1f05c <__assert_fail@plt+0xdb80>
   1e12c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e130:	add	r0, r1, r0
   1e134:	movw	r1, #0
   1e138:	cmp	r1, r0
   1e13c:	blt	1e228 <__assert_fail@plt+0xcd4c>
   1e140:	b	1e240 <__assert_fail@plt+0xcd64>
   1e144:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e148:	movw	r1, #0
   1e14c:	cmp	r1, r0
   1e150:	bge	1e240 <__assert_fail@plt+0xcd64>
   1e154:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e158:	sub	r0, r0, #1
   1e15c:	movw	r1, #32767	; 0x7fff
   1e160:	cmp	r1, r0
   1e164:	blt	1e228 <__assert_fail@plt+0xcd4c>
   1e168:	b	1e240 <__assert_fail@plt+0xcd64>
   1e16c:	ldr	r0, [pc, #3816]	; 1f05c <__assert_fail@plt+0xdb80>
   1e170:	ldr	r1, [fp, #8]
   1e174:	sdiv	r0, r0, r1
   1e178:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e17c:	cmp	r0, r1
   1e180:	blt	1e228 <__assert_fail@plt+0xcd4c>
   1e184:	b	1e240 <__assert_fail@plt+0xcd64>
   1e188:	ldr	r0, [fp, #8]
   1e18c:	cmp	r0, #0
   1e190:	bne	1e198 <__assert_fail@plt+0xccbc>
   1e194:	b	1e240 <__assert_fail@plt+0xcd64>
   1e198:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e19c:	cmp	r0, #0
   1e1a0:	bge	1e210 <__assert_fail@plt+0xcd34>
   1e1a4:	b	1e1a8 <__assert_fail@plt+0xcccc>
   1e1a8:	b	1e1f4 <__assert_fail@plt+0xcd18>
   1e1ac:	b	1e1f4 <__assert_fail@plt+0xcd18>
   1e1b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e1b4:	cmn	r0, #1
   1e1b8:	bne	1e1f4 <__assert_fail@plt+0xcd18>
   1e1bc:	b	1e1c0 <__assert_fail@plt+0xcce4>
   1e1c0:	ldr	r0, [pc, #3732]	; 1f05c <__assert_fail@plt+0xdb80>
   1e1c4:	ldr	r1, [fp, #8]
   1e1c8:	add	r0, r1, r0
   1e1cc:	movw	r1, #0
   1e1d0:	cmp	r1, r0
   1e1d4:	blt	1e228 <__assert_fail@plt+0xcd4c>
   1e1d8:	b	1e240 <__assert_fail@plt+0xcd64>
   1e1dc:	ldr	r0, [fp, #8]
   1e1e0:	sub	r0, r0, #1
   1e1e4:	movw	r1, #32767	; 0x7fff
   1e1e8:	cmp	r1, r0
   1e1ec:	blt	1e228 <__assert_fail@plt+0xcd4c>
   1e1f0:	b	1e240 <__assert_fail@plt+0xcd64>
   1e1f4:	ldr	r0, [pc, #3680]	; 1f05c <__assert_fail@plt+0xdb80>
   1e1f8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e1fc:	sdiv	r0, r0, r1
   1e200:	ldr	r1, [fp, #8]
   1e204:	cmp	r0, r1
   1e208:	blt	1e228 <__assert_fail@plt+0xcd4c>
   1e20c:	b	1e240 <__assert_fail@plt+0xcd64>
   1e210:	ldr	r0, [fp, #8]
   1e214:	movw	r1, #32767	; 0x7fff
   1e218:	sdiv	r0, r1, r0
   1e21c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e220:	cmp	r0, r1
   1e224:	bge	1e240 <__assert_fail@plt+0xcd64>
   1e228:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e22c:	ldr	r1, [fp, #8]
   1e230:	mul	r0, r0, r1
   1e234:	sxth	r0, r0
   1e238:	str	r0, [fp, #-28]	; 0xffffffe4
   1e23c:	b	1f024 <__assert_fail@plt+0xdb48>
   1e240:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e244:	ldr	r1, [fp, #8]
   1e248:	mul	r0, r0, r1
   1e24c:	sxth	r0, r0
   1e250:	str	r0, [fp, #-28]	; 0xffffffe4
   1e254:	b	1f028 <__assert_fail@plt+0xdb4c>
   1e258:	ldr	r0, [fp, #8]
   1e25c:	cmp	r0, #0
   1e260:	bge	1e370 <__assert_fail@plt+0xce94>
   1e264:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e268:	cmp	r0, #0
   1e26c:	bge	1e2f8 <__assert_fail@plt+0xce1c>
   1e270:	b	1e274 <__assert_fail@plt+0xcd98>
   1e274:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e278:	ldr	r1, [fp, #8]
   1e27c:	movw	r2, #65535	; 0xffff
   1e280:	sdiv	r1, r2, r1
   1e284:	cmp	r0, r1
   1e288:	blt	1e40c <__assert_fail@plt+0xcf30>
   1e28c:	b	1e424 <__assert_fail@plt+0xcf48>
   1e290:	b	1e294 <__assert_fail@plt+0xcdb8>
   1e294:	ldr	r0, [pc, #3512]	; 1f054 <__assert_fail@plt+0xdb78>
   1e298:	ldr	r1, [fp, #8]
   1e29c:	cmp	r1, r0
   1e2a0:	blt	1e2b8 <__assert_fail@plt+0xcddc>
   1e2a4:	b	1e2c4 <__assert_fail@plt+0xcde8>
   1e2a8:	ldr	r0, [fp, #8]
   1e2ac:	movw	r1, #0
   1e2b0:	cmp	r1, r0
   1e2b4:	bge	1e2c4 <__assert_fail@plt+0xcde8>
   1e2b8:	movw	r0, #0
   1e2bc:	str	r0, [sp, #76]	; 0x4c
   1e2c0:	b	1e2dc <__assert_fail@plt+0xce00>
   1e2c4:	ldr	r0, [fp, #8]
   1e2c8:	movw	r1, #0
   1e2cc:	sub	r0, r1, r0
   1e2d0:	movw	r1, #65535	; 0xffff
   1e2d4:	sdiv	r0, r1, r0
   1e2d8:	str	r0, [sp, #76]	; 0x4c
   1e2dc:	ldr	r0, [sp, #76]	; 0x4c
   1e2e0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e2e4:	mvn	r2, #0
   1e2e8:	sub	r1, r2, r1
   1e2ec:	cmp	r0, r1
   1e2f0:	ble	1e40c <__assert_fail@plt+0xcf30>
   1e2f4:	b	1e424 <__assert_fail@plt+0xcf48>
   1e2f8:	b	1e2fc <__assert_fail@plt+0xce20>
   1e2fc:	b	1e354 <__assert_fail@plt+0xce78>
   1e300:	b	1e354 <__assert_fail@plt+0xce78>
   1e304:	ldr	r0, [fp, #8]
   1e308:	cmn	r0, #1
   1e30c:	bne	1e354 <__assert_fail@plt+0xce78>
   1e310:	b	1e314 <__assert_fail@plt+0xce38>
   1e314:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e318:	add	r0, r0, #0
   1e31c:	movw	r1, #0
   1e320:	cmp	r1, r0
   1e324:	blt	1e40c <__assert_fail@plt+0xcf30>
   1e328:	b	1e424 <__assert_fail@plt+0xcf48>
   1e32c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e330:	movw	r1, #0
   1e334:	cmp	r1, r0
   1e338:	bge	1e424 <__assert_fail@plt+0xcf48>
   1e33c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e340:	sub	r0, r0, #1
   1e344:	mvn	r1, #0
   1e348:	cmp	r1, r0
   1e34c:	blt	1e40c <__assert_fail@plt+0xcf30>
   1e350:	b	1e424 <__assert_fail@plt+0xcf48>
   1e354:	ldr	r0, [fp, #8]
   1e358:	movw	r1, #0
   1e35c:	sdiv	r0, r1, r0
   1e360:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e364:	cmp	r0, r1
   1e368:	blt	1e40c <__assert_fail@plt+0xcf30>
   1e36c:	b	1e424 <__assert_fail@plt+0xcf48>
   1e370:	ldr	r0, [fp, #8]
   1e374:	cmp	r0, #0
   1e378:	bne	1e380 <__assert_fail@plt+0xcea4>
   1e37c:	b	1e424 <__assert_fail@plt+0xcf48>
   1e380:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e384:	cmp	r0, #0
   1e388:	bge	1e3f4 <__assert_fail@plt+0xcf18>
   1e38c:	b	1e390 <__assert_fail@plt+0xceb4>
   1e390:	b	1e3d8 <__assert_fail@plt+0xcefc>
   1e394:	b	1e3d8 <__assert_fail@plt+0xcefc>
   1e398:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e39c:	cmn	r0, #1
   1e3a0:	bne	1e3d8 <__assert_fail@plt+0xcefc>
   1e3a4:	b	1e3a8 <__assert_fail@plt+0xcecc>
   1e3a8:	ldr	r0, [fp, #8]
   1e3ac:	add	r0, r0, #0
   1e3b0:	movw	r1, #0
   1e3b4:	cmp	r1, r0
   1e3b8:	blt	1e40c <__assert_fail@plt+0xcf30>
   1e3bc:	b	1e424 <__assert_fail@plt+0xcf48>
   1e3c0:	ldr	r0, [fp, #8]
   1e3c4:	sub	r0, r0, #1
   1e3c8:	mvn	r1, #0
   1e3cc:	cmp	r1, r0
   1e3d0:	blt	1e40c <__assert_fail@plt+0xcf30>
   1e3d4:	b	1e424 <__assert_fail@plt+0xcf48>
   1e3d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e3dc:	movw	r1, #0
   1e3e0:	sdiv	r0, r1, r0
   1e3e4:	ldr	r1, [fp, #8]
   1e3e8:	cmp	r0, r1
   1e3ec:	blt	1e40c <__assert_fail@plt+0xcf30>
   1e3f0:	b	1e424 <__assert_fail@plt+0xcf48>
   1e3f4:	ldr	r0, [fp, #8]
   1e3f8:	movw	r1, #65535	; 0xffff
   1e3fc:	sdiv	r0, r1, r0
   1e400:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e404:	cmp	r0, r1
   1e408:	bge	1e424 <__assert_fail@plt+0xcf48>
   1e40c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e410:	ldr	r1, [fp, #8]
   1e414:	mul	r0, r0, r1
   1e418:	uxth	r0, r0
   1e41c:	str	r0, [fp, #-28]	; 0xffffffe4
   1e420:	b	1f024 <__assert_fail@plt+0xdb48>
   1e424:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e428:	ldr	r1, [fp, #8]
   1e42c:	mul	r0, r0, r1
   1e430:	uxth	r0, r0
   1e434:	str	r0, [fp, #-28]	; 0xffffffe4
   1e438:	b	1f028 <__assert_fail@plt+0xdb4c>
   1e43c:	b	1e440 <__assert_fail@plt+0xcf64>
   1e440:	b	1e444 <__assert_fail@plt+0xcf68>
   1e444:	ldr	r0, [fp, #8]
   1e448:	cmp	r0, #0
   1e44c:	bge	1e550 <__assert_fail@plt+0xd074>
   1e450:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e454:	cmp	r0, #0
   1e458:	bge	1e4e4 <__assert_fail@plt+0xd008>
   1e45c:	b	1e460 <__assert_fail@plt+0xcf84>
   1e460:	ldr	r0, [pc, #3048]	; 1f050 <__assert_fail@plt+0xdb74>
   1e464:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e468:	ldr	r2, [fp, #8]
   1e46c:	sdiv	r0, r0, r2
   1e470:	cmp	r1, r0
   1e474:	blt	1e5e0 <__assert_fail@plt+0xd104>
   1e478:	b	1e5f4 <__assert_fail@plt+0xd118>
   1e47c:	b	1e480 <__assert_fail@plt+0xcfa4>
   1e480:	ldr	r0, [pc, #3020]	; 1f054 <__assert_fail@plt+0xdb78>
   1e484:	ldr	r1, [fp, #8]
   1e488:	cmp	r1, r0
   1e48c:	blt	1e4a4 <__assert_fail@plt+0xcfc8>
   1e490:	b	1e4b0 <__assert_fail@plt+0xcfd4>
   1e494:	ldr	r0, [fp, #8]
   1e498:	movw	r1, #0
   1e49c:	cmp	r1, r0
   1e4a0:	bge	1e4b0 <__assert_fail@plt+0xcfd4>
   1e4a4:	movw	r0, #0
   1e4a8:	str	r0, [sp, #72]	; 0x48
   1e4ac:	b	1e4c8 <__assert_fail@plt+0xcfec>
   1e4b0:	ldr	r0, [pc, #2968]	; 1f050 <__assert_fail@plt+0xdb74>
   1e4b4:	ldr	r1, [fp, #8]
   1e4b8:	movw	r2, #0
   1e4bc:	sub	r1, r2, r1
   1e4c0:	sdiv	r0, r0, r1
   1e4c4:	str	r0, [sp, #72]	; 0x48
   1e4c8:	ldr	r0, [sp, #72]	; 0x48
   1e4cc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e4d0:	mvn	r2, #0
   1e4d4:	sub	r1, r2, r1
   1e4d8:	cmp	r0, r1
   1e4dc:	ble	1e5e0 <__assert_fail@plt+0xd104>
   1e4e0:	b	1e5f4 <__assert_fail@plt+0xd118>
   1e4e4:	ldr	r0, [fp, #8]
   1e4e8:	cmn	r0, #1
   1e4ec:	bne	1e534 <__assert_fail@plt+0xd058>
   1e4f0:	b	1e4f4 <__assert_fail@plt+0xd018>
   1e4f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e4f8:	add	r0, r0, #-2147483648	; 0x80000000
   1e4fc:	movw	r1, #0
   1e500:	cmp	r1, r0
   1e504:	blt	1e5e0 <__assert_fail@plt+0xd104>
   1e508:	b	1e5f4 <__assert_fail@plt+0xd118>
   1e50c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e510:	movw	r1, #0
   1e514:	cmp	r1, r0
   1e518:	bge	1e5f4 <__assert_fail@plt+0xd118>
   1e51c:	ldr	r0, [pc, #2860]	; 1f050 <__assert_fail@plt+0xdb74>
   1e520:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e524:	sub	r1, r1, #1
   1e528:	cmp	r0, r1
   1e52c:	blt	1e5e0 <__assert_fail@plt+0xd104>
   1e530:	b	1e5f4 <__assert_fail@plt+0xd118>
   1e534:	ldr	r0, [pc, #2844]	; 1f058 <__assert_fail@plt+0xdb7c>
   1e538:	ldr	r1, [fp, #8]
   1e53c:	sdiv	r0, r0, r1
   1e540:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e544:	cmp	r0, r1
   1e548:	blt	1e5e0 <__assert_fail@plt+0xd104>
   1e54c:	b	1e5f4 <__assert_fail@plt+0xd118>
   1e550:	ldr	r0, [fp, #8]
   1e554:	cmp	r0, #0
   1e558:	bne	1e560 <__assert_fail@plt+0xd084>
   1e55c:	b	1e5f4 <__assert_fail@plt+0xd118>
   1e560:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e564:	cmp	r0, #0
   1e568:	bge	1e5c8 <__assert_fail@plt+0xd0ec>
   1e56c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e570:	cmn	r0, #1
   1e574:	bne	1e5ac <__assert_fail@plt+0xd0d0>
   1e578:	b	1e57c <__assert_fail@plt+0xd0a0>
   1e57c:	ldr	r0, [fp, #8]
   1e580:	add	r0, r0, #-2147483648	; 0x80000000
   1e584:	movw	r1, #0
   1e588:	cmp	r1, r0
   1e58c:	blt	1e5e0 <__assert_fail@plt+0xd104>
   1e590:	b	1e5f4 <__assert_fail@plt+0xd118>
   1e594:	ldr	r0, [pc, #2740]	; 1f050 <__assert_fail@plt+0xdb74>
   1e598:	ldr	r1, [fp, #8]
   1e59c:	sub	r1, r1, #1
   1e5a0:	cmp	r0, r1
   1e5a4:	blt	1e5e0 <__assert_fail@plt+0xd104>
   1e5a8:	b	1e5f4 <__assert_fail@plt+0xd118>
   1e5ac:	ldr	r0, [pc, #2724]	; 1f058 <__assert_fail@plt+0xdb7c>
   1e5b0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e5b4:	sdiv	r0, r0, r1
   1e5b8:	ldr	r1, [fp, #8]
   1e5bc:	cmp	r0, r1
   1e5c0:	blt	1e5e0 <__assert_fail@plt+0xd104>
   1e5c4:	b	1e5f4 <__assert_fail@plt+0xd118>
   1e5c8:	ldr	r0, [pc, #2688]	; 1f050 <__assert_fail@plt+0xdb74>
   1e5cc:	ldr	r1, [fp, #8]
   1e5d0:	sdiv	r0, r0, r1
   1e5d4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e5d8:	cmp	r0, r1
   1e5dc:	bge	1e5f4 <__assert_fail@plt+0xd118>
   1e5e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e5e4:	ldr	r1, [fp, #8]
   1e5e8:	mul	r0, r0, r1
   1e5ec:	str	r0, [fp, #-28]	; 0xffffffe4
   1e5f0:	b	1f024 <__assert_fail@plt+0xdb48>
   1e5f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e5f8:	ldr	r1, [fp, #8]
   1e5fc:	mul	r0, r0, r1
   1e600:	str	r0, [fp, #-28]	; 0xffffffe4
   1e604:	b	1f028 <__assert_fail@plt+0xdb4c>
   1e608:	ldr	r0, [fp, #8]
   1e60c:	cmp	r0, #0
   1e610:	bge	1e720 <__assert_fail@plt+0xd244>
   1e614:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e618:	cmp	r0, #0
   1e61c:	bge	1e6a8 <__assert_fail@plt+0xd1cc>
   1e620:	b	1e640 <__assert_fail@plt+0xd164>
   1e624:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e628:	ldr	r1, [fp, #8]
   1e62c:	mvn	r2, #0
   1e630:	udiv	r1, r2, r1
   1e634:	cmp	r0, r1
   1e638:	bcc	1e7bc <__assert_fail@plt+0xd2e0>
   1e63c:	b	1e7d0 <__assert_fail@plt+0xd2f4>
   1e640:	b	1e644 <__assert_fail@plt+0xd168>
   1e644:	ldr	r0, [pc, #2568]	; 1f054 <__assert_fail@plt+0xdb78>
   1e648:	ldr	r1, [fp, #8]
   1e64c:	cmp	r1, r0
   1e650:	blt	1e668 <__assert_fail@plt+0xd18c>
   1e654:	b	1e674 <__assert_fail@plt+0xd198>
   1e658:	ldr	r0, [fp, #8]
   1e65c:	movw	r1, #0
   1e660:	cmp	r1, r0
   1e664:	bge	1e674 <__assert_fail@plt+0xd198>
   1e668:	movw	r0, #1
   1e66c:	str	r0, [sp, #68]	; 0x44
   1e670:	b	1e68c <__assert_fail@plt+0xd1b0>
   1e674:	ldr	r0, [fp, #8]
   1e678:	movw	r1, #0
   1e67c:	sub	r0, r1, r0
   1e680:	mvn	r1, #0
   1e684:	udiv	r0, r1, r0
   1e688:	str	r0, [sp, #68]	; 0x44
   1e68c:	ldr	r0, [sp, #68]	; 0x44
   1e690:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e694:	mvn	r2, #0
   1e698:	sub	r1, r2, r1
   1e69c:	cmp	r0, r1
   1e6a0:	bls	1e7bc <__assert_fail@plt+0xd2e0>
   1e6a4:	b	1e7d0 <__assert_fail@plt+0xd2f4>
   1e6a8:	b	1e6ac <__assert_fail@plt+0xd1d0>
   1e6ac:	b	1e704 <__assert_fail@plt+0xd228>
   1e6b0:	b	1e704 <__assert_fail@plt+0xd228>
   1e6b4:	ldr	r0, [fp, #8]
   1e6b8:	cmn	r0, #1
   1e6bc:	bne	1e704 <__assert_fail@plt+0xd228>
   1e6c0:	b	1e6c4 <__assert_fail@plt+0xd1e8>
   1e6c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e6c8:	add	r0, r0, #0
   1e6cc:	movw	r1, #0
   1e6d0:	cmp	r1, r0
   1e6d4:	blt	1e7bc <__assert_fail@plt+0xd2e0>
   1e6d8:	b	1e7d0 <__assert_fail@plt+0xd2f4>
   1e6dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e6e0:	movw	r1, #0
   1e6e4:	cmp	r1, r0
   1e6e8:	bge	1e7d0 <__assert_fail@plt+0xd2f4>
   1e6ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e6f0:	sub	r0, r0, #1
   1e6f4:	mvn	r1, #0
   1e6f8:	cmp	r1, r0
   1e6fc:	blt	1e7bc <__assert_fail@plt+0xd2e0>
   1e700:	b	1e7d0 <__assert_fail@plt+0xd2f4>
   1e704:	ldr	r0, [fp, #8]
   1e708:	movw	r1, #0
   1e70c:	sdiv	r0, r1, r0
   1e710:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e714:	cmp	r0, r1
   1e718:	blt	1e7bc <__assert_fail@plt+0xd2e0>
   1e71c:	b	1e7d0 <__assert_fail@plt+0xd2f4>
   1e720:	ldr	r0, [fp, #8]
   1e724:	cmp	r0, #0
   1e728:	bne	1e730 <__assert_fail@plt+0xd254>
   1e72c:	b	1e7d0 <__assert_fail@plt+0xd2f4>
   1e730:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e734:	cmp	r0, #0
   1e738:	bge	1e7a4 <__assert_fail@plt+0xd2c8>
   1e73c:	b	1e740 <__assert_fail@plt+0xd264>
   1e740:	b	1e788 <__assert_fail@plt+0xd2ac>
   1e744:	b	1e788 <__assert_fail@plt+0xd2ac>
   1e748:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e74c:	cmn	r0, #1
   1e750:	bne	1e788 <__assert_fail@plt+0xd2ac>
   1e754:	b	1e758 <__assert_fail@plt+0xd27c>
   1e758:	ldr	r0, [fp, #8]
   1e75c:	add	r0, r0, #0
   1e760:	movw	r1, #0
   1e764:	cmp	r1, r0
   1e768:	blt	1e7bc <__assert_fail@plt+0xd2e0>
   1e76c:	b	1e7d0 <__assert_fail@plt+0xd2f4>
   1e770:	ldr	r0, [fp, #8]
   1e774:	sub	r0, r0, #1
   1e778:	mvn	r1, #0
   1e77c:	cmp	r1, r0
   1e780:	blt	1e7bc <__assert_fail@plt+0xd2e0>
   1e784:	b	1e7d0 <__assert_fail@plt+0xd2f4>
   1e788:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e78c:	movw	r1, #0
   1e790:	sdiv	r0, r1, r0
   1e794:	ldr	r1, [fp, #8]
   1e798:	cmp	r0, r1
   1e79c:	blt	1e7bc <__assert_fail@plt+0xd2e0>
   1e7a0:	b	1e7d0 <__assert_fail@plt+0xd2f4>
   1e7a4:	ldr	r0, [fp, #8]
   1e7a8:	mvn	r1, #0
   1e7ac:	udiv	r0, r1, r0
   1e7b0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e7b4:	cmp	r0, r1
   1e7b8:	bcs	1e7d0 <__assert_fail@plt+0xd2f4>
   1e7bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e7c0:	ldr	r1, [fp, #8]
   1e7c4:	mul	r0, r0, r1
   1e7c8:	str	r0, [fp, #-28]	; 0xffffffe4
   1e7cc:	b	1f024 <__assert_fail@plt+0xdb48>
   1e7d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e7d4:	ldr	r1, [fp, #8]
   1e7d8:	mul	r0, r0, r1
   1e7dc:	str	r0, [fp, #-28]	; 0xffffffe4
   1e7e0:	b	1f028 <__assert_fail@plt+0xdb4c>
   1e7e4:	b	1e7e8 <__assert_fail@plt+0xd30c>
   1e7e8:	b	1e7ec <__assert_fail@plt+0xd310>
   1e7ec:	ldr	r0, [fp, #8]
   1e7f0:	cmp	r0, #0
   1e7f4:	bge	1e8f8 <__assert_fail@plt+0xd41c>
   1e7f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e7fc:	cmp	r0, #0
   1e800:	bge	1e88c <__assert_fail@plt+0xd3b0>
   1e804:	b	1e808 <__assert_fail@plt+0xd32c>
   1e808:	ldr	r0, [pc, #2112]	; 1f050 <__assert_fail@plt+0xdb74>
   1e80c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e810:	ldr	r2, [fp, #8]
   1e814:	sdiv	r0, r0, r2
   1e818:	cmp	r1, r0
   1e81c:	blt	1e988 <__assert_fail@plt+0xd4ac>
   1e820:	b	1e99c <__assert_fail@plt+0xd4c0>
   1e824:	b	1e828 <__assert_fail@plt+0xd34c>
   1e828:	ldr	r0, [pc, #2084]	; 1f054 <__assert_fail@plt+0xdb78>
   1e82c:	ldr	r1, [fp, #8]
   1e830:	cmp	r1, r0
   1e834:	blt	1e84c <__assert_fail@plt+0xd370>
   1e838:	b	1e858 <__assert_fail@plt+0xd37c>
   1e83c:	ldr	r0, [fp, #8]
   1e840:	movw	r1, #0
   1e844:	cmp	r1, r0
   1e848:	bge	1e858 <__assert_fail@plt+0xd37c>
   1e84c:	movw	r0, #0
   1e850:	str	r0, [sp, #64]	; 0x40
   1e854:	b	1e870 <__assert_fail@plt+0xd394>
   1e858:	ldr	r0, [pc, #2032]	; 1f050 <__assert_fail@plt+0xdb74>
   1e85c:	ldr	r1, [fp, #8]
   1e860:	movw	r2, #0
   1e864:	sub	r1, r2, r1
   1e868:	sdiv	r0, r0, r1
   1e86c:	str	r0, [sp, #64]	; 0x40
   1e870:	ldr	r0, [sp, #64]	; 0x40
   1e874:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e878:	mvn	r2, #0
   1e87c:	sub	r1, r2, r1
   1e880:	cmp	r0, r1
   1e884:	ble	1e988 <__assert_fail@plt+0xd4ac>
   1e888:	b	1e99c <__assert_fail@plt+0xd4c0>
   1e88c:	ldr	r0, [fp, #8]
   1e890:	cmn	r0, #1
   1e894:	bne	1e8dc <__assert_fail@plt+0xd400>
   1e898:	b	1e89c <__assert_fail@plt+0xd3c0>
   1e89c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e8a0:	add	r0, r0, #-2147483648	; 0x80000000
   1e8a4:	movw	r1, #0
   1e8a8:	cmp	r1, r0
   1e8ac:	blt	1e988 <__assert_fail@plt+0xd4ac>
   1e8b0:	b	1e99c <__assert_fail@plt+0xd4c0>
   1e8b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e8b8:	movw	r1, #0
   1e8bc:	cmp	r1, r0
   1e8c0:	bge	1e99c <__assert_fail@plt+0xd4c0>
   1e8c4:	ldr	r0, [pc, #1924]	; 1f050 <__assert_fail@plt+0xdb74>
   1e8c8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e8cc:	sub	r1, r1, #1
   1e8d0:	cmp	r0, r1
   1e8d4:	blt	1e988 <__assert_fail@plt+0xd4ac>
   1e8d8:	b	1e99c <__assert_fail@plt+0xd4c0>
   1e8dc:	ldr	r0, [pc, #1908]	; 1f058 <__assert_fail@plt+0xdb7c>
   1e8e0:	ldr	r1, [fp, #8]
   1e8e4:	sdiv	r0, r0, r1
   1e8e8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e8ec:	cmp	r0, r1
   1e8f0:	blt	1e988 <__assert_fail@plt+0xd4ac>
   1e8f4:	b	1e99c <__assert_fail@plt+0xd4c0>
   1e8f8:	ldr	r0, [fp, #8]
   1e8fc:	cmp	r0, #0
   1e900:	bne	1e908 <__assert_fail@plt+0xd42c>
   1e904:	b	1e99c <__assert_fail@plt+0xd4c0>
   1e908:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e90c:	cmp	r0, #0
   1e910:	bge	1e970 <__assert_fail@plt+0xd494>
   1e914:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e918:	cmn	r0, #1
   1e91c:	bne	1e954 <__assert_fail@plt+0xd478>
   1e920:	b	1e924 <__assert_fail@plt+0xd448>
   1e924:	ldr	r0, [fp, #8]
   1e928:	add	r0, r0, #-2147483648	; 0x80000000
   1e92c:	movw	r1, #0
   1e930:	cmp	r1, r0
   1e934:	blt	1e988 <__assert_fail@plt+0xd4ac>
   1e938:	b	1e99c <__assert_fail@plt+0xd4c0>
   1e93c:	ldr	r0, [pc, #1804]	; 1f050 <__assert_fail@plt+0xdb74>
   1e940:	ldr	r1, [fp, #8]
   1e944:	sub	r1, r1, #1
   1e948:	cmp	r0, r1
   1e94c:	blt	1e988 <__assert_fail@plt+0xd4ac>
   1e950:	b	1e99c <__assert_fail@plt+0xd4c0>
   1e954:	ldr	r0, [pc, #1788]	; 1f058 <__assert_fail@plt+0xdb7c>
   1e958:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e95c:	sdiv	r0, r0, r1
   1e960:	ldr	r1, [fp, #8]
   1e964:	cmp	r0, r1
   1e968:	blt	1e988 <__assert_fail@plt+0xd4ac>
   1e96c:	b	1e99c <__assert_fail@plt+0xd4c0>
   1e970:	ldr	r0, [pc, #1752]	; 1f050 <__assert_fail@plt+0xdb74>
   1e974:	ldr	r1, [fp, #8]
   1e978:	sdiv	r0, r0, r1
   1e97c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1e980:	cmp	r0, r1
   1e984:	bge	1e99c <__assert_fail@plt+0xd4c0>
   1e988:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e98c:	ldr	r1, [fp, #8]
   1e990:	mul	r0, r0, r1
   1e994:	str	r0, [fp, #-28]	; 0xffffffe4
   1e998:	b	1f024 <__assert_fail@plt+0xdb48>
   1e99c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e9a0:	ldr	r1, [fp, #8]
   1e9a4:	mul	r0, r0, r1
   1e9a8:	str	r0, [fp, #-28]	; 0xffffffe4
   1e9ac:	b	1f028 <__assert_fail@plt+0xdb4c>
   1e9b0:	ldr	r0, [fp, #8]
   1e9b4:	cmp	r0, #0
   1e9b8:	bge	1eac8 <__assert_fail@plt+0xd5ec>
   1e9bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e9c0:	cmp	r0, #0
   1e9c4:	bge	1ea50 <__assert_fail@plt+0xd574>
   1e9c8:	b	1e9e8 <__assert_fail@plt+0xd50c>
   1e9cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1e9d0:	ldr	r1, [fp, #8]
   1e9d4:	mvn	r2, #0
   1e9d8:	udiv	r1, r2, r1
   1e9dc:	cmp	r0, r1
   1e9e0:	bcc	1eb64 <__assert_fail@plt+0xd688>
   1e9e4:	b	1eb78 <__assert_fail@plt+0xd69c>
   1e9e8:	b	1e9ec <__assert_fail@plt+0xd510>
   1e9ec:	ldr	r0, [pc, #1632]	; 1f054 <__assert_fail@plt+0xdb78>
   1e9f0:	ldr	r1, [fp, #8]
   1e9f4:	cmp	r1, r0
   1e9f8:	blt	1ea10 <__assert_fail@plt+0xd534>
   1e9fc:	b	1ea1c <__assert_fail@plt+0xd540>
   1ea00:	ldr	r0, [fp, #8]
   1ea04:	movw	r1, #0
   1ea08:	cmp	r1, r0
   1ea0c:	bge	1ea1c <__assert_fail@plt+0xd540>
   1ea10:	movw	r0, #1
   1ea14:	str	r0, [sp, #60]	; 0x3c
   1ea18:	b	1ea34 <__assert_fail@plt+0xd558>
   1ea1c:	ldr	r0, [fp, #8]
   1ea20:	movw	r1, #0
   1ea24:	sub	r0, r1, r0
   1ea28:	mvn	r1, #0
   1ea2c:	udiv	r0, r1, r0
   1ea30:	str	r0, [sp, #60]	; 0x3c
   1ea34:	ldr	r0, [sp, #60]	; 0x3c
   1ea38:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ea3c:	mvn	r2, #0
   1ea40:	sub	r1, r2, r1
   1ea44:	cmp	r0, r1
   1ea48:	bls	1eb64 <__assert_fail@plt+0xd688>
   1ea4c:	b	1eb78 <__assert_fail@plt+0xd69c>
   1ea50:	b	1ea54 <__assert_fail@plt+0xd578>
   1ea54:	b	1eaac <__assert_fail@plt+0xd5d0>
   1ea58:	b	1eaac <__assert_fail@plt+0xd5d0>
   1ea5c:	ldr	r0, [fp, #8]
   1ea60:	cmn	r0, #1
   1ea64:	bne	1eaac <__assert_fail@plt+0xd5d0>
   1ea68:	b	1ea6c <__assert_fail@plt+0xd590>
   1ea6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ea70:	add	r0, r0, #0
   1ea74:	movw	r1, #0
   1ea78:	cmp	r1, r0
   1ea7c:	blt	1eb64 <__assert_fail@plt+0xd688>
   1ea80:	b	1eb78 <__assert_fail@plt+0xd69c>
   1ea84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ea88:	movw	r1, #0
   1ea8c:	cmp	r1, r0
   1ea90:	bge	1eb78 <__assert_fail@plt+0xd69c>
   1ea94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ea98:	sub	r0, r0, #1
   1ea9c:	mvn	r1, #0
   1eaa0:	cmp	r1, r0
   1eaa4:	blt	1eb64 <__assert_fail@plt+0xd688>
   1eaa8:	b	1eb78 <__assert_fail@plt+0xd69c>
   1eaac:	ldr	r0, [fp, #8]
   1eab0:	movw	r1, #0
   1eab4:	sdiv	r0, r1, r0
   1eab8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1eabc:	cmp	r0, r1
   1eac0:	blt	1eb64 <__assert_fail@plt+0xd688>
   1eac4:	b	1eb78 <__assert_fail@plt+0xd69c>
   1eac8:	ldr	r0, [fp, #8]
   1eacc:	cmp	r0, #0
   1ead0:	bne	1ead8 <__assert_fail@plt+0xd5fc>
   1ead4:	b	1eb78 <__assert_fail@plt+0xd69c>
   1ead8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1eadc:	cmp	r0, #0
   1eae0:	bge	1eb4c <__assert_fail@plt+0xd670>
   1eae4:	b	1eae8 <__assert_fail@plt+0xd60c>
   1eae8:	b	1eb30 <__assert_fail@plt+0xd654>
   1eaec:	b	1eb30 <__assert_fail@plt+0xd654>
   1eaf0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1eaf4:	cmn	r0, #1
   1eaf8:	bne	1eb30 <__assert_fail@plt+0xd654>
   1eafc:	b	1eb00 <__assert_fail@plt+0xd624>
   1eb00:	ldr	r0, [fp, #8]
   1eb04:	add	r0, r0, #0
   1eb08:	movw	r1, #0
   1eb0c:	cmp	r1, r0
   1eb10:	blt	1eb64 <__assert_fail@plt+0xd688>
   1eb14:	b	1eb78 <__assert_fail@plt+0xd69c>
   1eb18:	ldr	r0, [fp, #8]
   1eb1c:	sub	r0, r0, #1
   1eb20:	mvn	r1, #0
   1eb24:	cmp	r1, r0
   1eb28:	blt	1eb64 <__assert_fail@plt+0xd688>
   1eb2c:	b	1eb78 <__assert_fail@plt+0xd69c>
   1eb30:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1eb34:	movw	r1, #0
   1eb38:	sdiv	r0, r1, r0
   1eb3c:	ldr	r1, [fp, #8]
   1eb40:	cmp	r0, r1
   1eb44:	blt	1eb64 <__assert_fail@plt+0xd688>
   1eb48:	b	1eb78 <__assert_fail@plt+0xd69c>
   1eb4c:	ldr	r0, [fp, #8]
   1eb50:	mvn	r1, #0
   1eb54:	udiv	r0, r1, r0
   1eb58:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1eb5c:	cmp	r0, r1
   1eb60:	bcs	1eb78 <__assert_fail@plt+0xd69c>
   1eb64:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1eb68:	ldr	r1, [fp, #8]
   1eb6c:	mul	r0, r0, r1
   1eb70:	str	r0, [fp, #-28]	; 0xffffffe4
   1eb74:	b	1f024 <__assert_fail@plt+0xdb48>
   1eb78:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1eb7c:	ldr	r1, [fp, #8]
   1eb80:	mul	r0, r0, r1
   1eb84:	str	r0, [fp, #-28]	; 0xffffffe4
   1eb88:	b	1f028 <__assert_fail@plt+0xdb4c>
   1eb8c:	b	1eb90 <__assert_fail@plt+0xd6b4>
   1eb90:	ldr	r0, [fp, #8]
   1eb94:	cmp	r0, #0
   1eb98:	bge	1ed00 <__assert_fail@plt+0xd824>
   1eb9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1eba0:	cmp	r0, #0
   1eba4:	bge	1ec7c <__assert_fail@plt+0xd7a0>
   1eba8:	b	1ebac <__assert_fail@plt+0xd6d0>
   1ebac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ebb0:	ldr	r1, [fp, #8]
   1ebb4:	asr	r3, r1, #31
   1ebb8:	mvn	r2, #0
   1ebbc:	mvn	ip, #-2147483648	; 0x80000000
   1ebc0:	str	r0, [sp, #56]	; 0x38
   1ebc4:	mov	r0, r2
   1ebc8:	str	r1, [sp, #52]	; 0x34
   1ebcc:	mov	r1, ip
   1ebd0:	ldr	r2, [sp, #52]	; 0x34
   1ebd4:	bl	24068 <__assert_fail@plt+0x12b8c>
   1ebd8:	ldr	r2, [sp, #56]	; 0x38
   1ebdc:	subs	r0, r2, r0
   1ebe0:	rscs	r1, r1, r2, asr #31
   1ebe4:	blt	1edc8 <__assert_fail@plt+0xd8ec>
   1ebe8:	b	1eddc <__assert_fail@plt+0xd900>
   1ebec:	b	1ebf0 <__assert_fail@plt+0xd714>
   1ebf0:	ldr	r0, [pc, #1116]	; 1f054 <__assert_fail@plt+0xdb78>
   1ebf4:	ldr	r1, [fp, #8]
   1ebf8:	cmp	r1, r0
   1ebfc:	blt	1ec14 <__assert_fail@plt+0xd738>
   1ec00:	b	1ec28 <__assert_fail@plt+0xd74c>
   1ec04:	ldr	r0, [fp, #8]
   1ec08:	movw	r1, #0
   1ec0c:	cmp	r1, r0
   1ec10:	bge	1ec28 <__assert_fail@plt+0xd74c>
   1ec14:	mov	r0, #0
   1ec18:	mvn	r1, #0
   1ec1c:	str	r1, [sp, #48]	; 0x30
   1ec20:	str	r0, [sp, #44]	; 0x2c
   1ec24:	b	1ec5c <__assert_fail@plt+0xd780>
   1ec28:	ldr	r0, [fp, #8]
   1ec2c:	rsb	r0, r0, #0
   1ec30:	asr	r3, r0, #31
   1ec34:	mvn	r1, #0
   1ec38:	mvn	r2, #-2147483648	; 0x80000000
   1ec3c:	str	r0, [sp, #40]	; 0x28
   1ec40:	mov	r0, r1
   1ec44:	mov	r1, r2
   1ec48:	ldr	r2, [sp, #40]	; 0x28
   1ec4c:	bl	24068 <__assert_fail@plt+0x12b8c>
   1ec50:	str	r0, [sp, #48]	; 0x30
   1ec54:	str	r1, [sp, #44]	; 0x2c
   1ec58:	b	1ec5c <__assert_fail@plt+0xd780>
   1ec5c:	ldr	r0, [sp, #44]	; 0x2c
   1ec60:	ldr	r1, [sp, #48]	; 0x30
   1ec64:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1ec68:	mvn	r2, r2
   1ec6c:	subs	r1, r2, r1
   1ec70:	rscs	r0, r0, r2, asr #31
   1ec74:	bge	1edc8 <__assert_fail@plt+0xd8ec>
   1ec78:	b	1eddc <__assert_fail@plt+0xd900>
   1ec7c:	ldr	r0, [fp, #8]
   1ec80:	cmn	r0, #1
   1ec84:	bne	1ecc8 <__assert_fail@plt+0xd7ec>
   1ec88:	b	1ec8c <__assert_fail@plt+0xd7b0>
   1ec8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ec90:	mov	r1, #-2147483648	; 0x80000000
   1ec94:	add	r1, r1, r0, asr #31
   1ec98:	rsbs	r0, r0, #0
   1ec9c:	rscs	r1, r1, #0
   1eca0:	blt	1edc8 <__assert_fail@plt+0xd8ec>
   1eca4:	b	1eddc <__assert_fail@plt+0xd900>
   1eca8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ecac:	movw	r1, #0
   1ecb0:	cmp	r1, r0
   1ecb4:	bge	1eddc <__assert_fail@plt+0xd900>
   1ecb8:	mov	r0, #0
   1ecbc:	cmp	r0, #0
   1ecc0:	bne	1edc8 <__assert_fail@plt+0xd8ec>
   1ecc4:	b	1eddc <__assert_fail@plt+0xd900>
   1ecc8:	ldr	r0, [fp, #8]
   1eccc:	asr	r3, r0, #31
   1ecd0:	mov	r1, #0
   1ecd4:	mov	r2, #-2147483648	; 0x80000000
   1ecd8:	str	r0, [sp, #36]	; 0x24
   1ecdc:	mov	r0, r1
   1ece0:	mov	r1, r2
   1ece4:	ldr	r2, [sp, #36]	; 0x24
   1ece8:	bl	24068 <__assert_fail@plt+0x12b8c>
   1ecec:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1ecf0:	subs	r0, r0, r2
   1ecf4:	sbcs	r1, r1, r2, asr #31
   1ecf8:	blt	1edc8 <__assert_fail@plt+0xd8ec>
   1ecfc:	b	1eddc <__assert_fail@plt+0xd900>
   1ed00:	ldr	r0, [fp, #8]
   1ed04:	cmp	r0, #0
   1ed08:	bne	1ed10 <__assert_fail@plt+0xd834>
   1ed0c:	b	1eddc <__assert_fail@plt+0xd900>
   1ed10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ed14:	cmp	r0, #0
   1ed18:	bge	1ed90 <__assert_fail@plt+0xd8b4>
   1ed1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ed20:	cmn	r0, #1
   1ed24:	bne	1ed58 <__assert_fail@plt+0xd87c>
   1ed28:	b	1ed2c <__assert_fail@plt+0xd850>
   1ed2c:	ldr	r0, [fp, #8]
   1ed30:	mov	r1, #-2147483648	; 0x80000000
   1ed34:	add	r1, r1, r0, asr #31
   1ed38:	rsbs	r0, r0, #0
   1ed3c:	rscs	r1, r1, #0
   1ed40:	blt	1edc8 <__assert_fail@plt+0xd8ec>
   1ed44:	b	1eddc <__assert_fail@plt+0xd900>
   1ed48:	mov	r0, #0
   1ed4c:	cmp	r0, #0
   1ed50:	bne	1edc8 <__assert_fail@plt+0xd8ec>
   1ed54:	b	1eddc <__assert_fail@plt+0xd900>
   1ed58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ed5c:	asr	r3, r0, #31
   1ed60:	mov	r1, #0
   1ed64:	mov	r2, #-2147483648	; 0x80000000
   1ed68:	str	r0, [sp, #32]
   1ed6c:	mov	r0, r1
   1ed70:	mov	r1, r2
   1ed74:	ldr	r2, [sp, #32]
   1ed78:	bl	24068 <__assert_fail@plt+0x12b8c>
   1ed7c:	ldr	r2, [fp, #8]
   1ed80:	subs	r0, r0, r2
   1ed84:	sbcs	r1, r1, r2, asr #31
   1ed88:	blt	1edc8 <__assert_fail@plt+0xd8ec>
   1ed8c:	b	1eddc <__assert_fail@plt+0xd900>
   1ed90:	ldr	r0, [fp, #8]
   1ed94:	asr	r3, r0, #31
   1ed98:	mvn	r1, #0
   1ed9c:	mvn	r2, #-2147483648	; 0x80000000
   1eda0:	str	r0, [sp, #28]
   1eda4:	mov	r0, r1
   1eda8:	mov	r1, r2
   1edac:	ldr	r2, [sp, #28]
   1edb0:	bl	24068 <__assert_fail@plt+0x12b8c>
   1edb4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1edb8:	subs	r0, r0, r2
   1edbc:	sbcs	r1, r1, r2, asr #31
   1edc0:	bge	1eddc <__assert_fail@plt+0xd900>
   1edc4:	b	1edc8 <__assert_fail@plt+0xd8ec>
   1edc8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1edcc:	ldr	r1, [fp, #8]
   1edd0:	mul	r0, r0, r1
   1edd4:	str	r0, [fp, #-28]	; 0xffffffe4
   1edd8:	b	1f024 <__assert_fail@plt+0xdb48>
   1eddc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ede0:	ldr	r1, [fp, #8]
   1ede4:	mul	r0, r0, r1
   1ede8:	str	r0, [fp, #-28]	; 0xffffffe4
   1edec:	b	1f028 <__assert_fail@plt+0xdb4c>
   1edf0:	ldr	r0, [fp, #8]
   1edf4:	cmp	r0, #0
   1edf8:	bge	1ef48 <__assert_fail@plt+0xda6c>
   1edfc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ee00:	cmp	r0, #0
   1ee04:	bge	1eed0 <__assert_fail@plt+0xd9f4>
   1ee08:	b	1ee48 <__assert_fail@plt+0xd96c>
   1ee0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ee10:	ldr	r1, [fp, #8]
   1ee14:	asr	r3, r1, #31
   1ee18:	mvn	r2, #0
   1ee1c:	str	r0, [sp, #24]
   1ee20:	mov	r0, r2
   1ee24:	str	r1, [sp, #20]
   1ee28:	mov	r1, r2
   1ee2c:	ldr	r2, [sp, #20]
   1ee30:	bl	2413c <__assert_fail@plt+0x12c60>
   1ee34:	ldr	r2, [sp, #24]
   1ee38:	subs	r0, r2, r0
   1ee3c:	rscs	r1, r1, r2, asr #31
   1ee40:	bcc	1effc <__assert_fail@plt+0xdb20>
   1ee44:	b	1f010 <__assert_fail@plt+0xdb34>
   1ee48:	b	1ee4c <__assert_fail@plt+0xd970>
   1ee4c:	ldr	r0, [pc, #512]	; 1f054 <__assert_fail@plt+0xdb78>
   1ee50:	ldr	r1, [fp, #8]
   1ee54:	cmp	r1, r0
   1ee58:	blt	1ee70 <__assert_fail@plt+0xd994>
   1ee5c:	b	1ee84 <__assert_fail@plt+0xd9a8>
   1ee60:	ldr	r0, [fp, #8]
   1ee64:	movw	r1, #0
   1ee68:	cmp	r1, r0
   1ee6c:	bge	1ee84 <__assert_fail@plt+0xd9a8>
   1ee70:	mov	r0, #1
   1ee74:	mvn	r1, #0
   1ee78:	str	r1, [sp, #16]
   1ee7c:	str	r0, [sp, #12]
   1ee80:	b	1eeb0 <__assert_fail@plt+0xd9d4>
   1ee84:	ldr	r0, [fp, #8]
   1ee88:	rsb	r0, r0, #0
   1ee8c:	asr	r3, r0, #31
   1ee90:	mvn	r1, #0
   1ee94:	str	r0, [sp, #8]
   1ee98:	mov	r0, r1
   1ee9c:	ldr	r2, [sp, #8]
   1eea0:	bl	2413c <__assert_fail@plt+0x12c60>
   1eea4:	str	r0, [sp, #16]
   1eea8:	str	r1, [sp, #12]
   1eeac:	b	1eeb0 <__assert_fail@plt+0xd9d4>
   1eeb0:	ldr	r0, [sp, #12]
   1eeb4:	ldr	r1, [sp, #16]
   1eeb8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1eebc:	mvn	r2, r2
   1eec0:	subs	r1, r2, r1
   1eec4:	rscs	r0, r0, r2, asr #31
   1eec8:	bcs	1effc <__assert_fail@plt+0xdb20>
   1eecc:	b	1f010 <__assert_fail@plt+0xdb34>
   1eed0:	b	1eed4 <__assert_fail@plt+0xd9f8>
   1eed4:	b	1ef2c <__assert_fail@plt+0xda50>
   1eed8:	b	1ef2c <__assert_fail@plt+0xda50>
   1eedc:	ldr	r0, [fp, #8]
   1eee0:	cmn	r0, #1
   1eee4:	bne	1ef2c <__assert_fail@plt+0xda50>
   1eee8:	b	1eeec <__assert_fail@plt+0xda10>
   1eeec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1eef0:	add	r0, r0, #0
   1eef4:	movw	r1, #0
   1eef8:	cmp	r1, r0
   1eefc:	blt	1effc <__assert_fail@plt+0xdb20>
   1ef00:	b	1f010 <__assert_fail@plt+0xdb34>
   1ef04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ef08:	movw	r1, #0
   1ef0c:	cmp	r1, r0
   1ef10:	bge	1f010 <__assert_fail@plt+0xdb34>
   1ef14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ef18:	sub	r0, r0, #1
   1ef1c:	mvn	r1, #0
   1ef20:	cmp	r1, r0
   1ef24:	blt	1effc <__assert_fail@plt+0xdb20>
   1ef28:	b	1f010 <__assert_fail@plt+0xdb34>
   1ef2c:	ldr	r0, [fp, #8]
   1ef30:	movw	r1, #0
   1ef34:	sdiv	r0, r1, r0
   1ef38:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ef3c:	cmp	r0, r1
   1ef40:	blt	1effc <__assert_fail@plt+0xdb20>
   1ef44:	b	1f010 <__assert_fail@plt+0xdb34>
   1ef48:	ldr	r0, [fp, #8]
   1ef4c:	cmp	r0, #0
   1ef50:	bne	1ef58 <__assert_fail@plt+0xda7c>
   1ef54:	b	1f010 <__assert_fail@plt+0xdb34>
   1ef58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ef5c:	cmp	r0, #0
   1ef60:	bge	1efcc <__assert_fail@plt+0xdaf0>
   1ef64:	b	1ef68 <__assert_fail@plt+0xda8c>
   1ef68:	b	1efb0 <__assert_fail@plt+0xdad4>
   1ef6c:	b	1efb0 <__assert_fail@plt+0xdad4>
   1ef70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ef74:	cmn	r0, #1
   1ef78:	bne	1efb0 <__assert_fail@plt+0xdad4>
   1ef7c:	b	1ef80 <__assert_fail@plt+0xdaa4>
   1ef80:	ldr	r0, [fp, #8]
   1ef84:	add	r0, r0, #0
   1ef88:	movw	r1, #0
   1ef8c:	cmp	r1, r0
   1ef90:	blt	1effc <__assert_fail@plt+0xdb20>
   1ef94:	b	1f010 <__assert_fail@plt+0xdb34>
   1ef98:	ldr	r0, [fp, #8]
   1ef9c:	sub	r0, r0, #1
   1efa0:	mvn	r1, #0
   1efa4:	cmp	r1, r0
   1efa8:	blt	1effc <__assert_fail@plt+0xdb20>
   1efac:	b	1f010 <__assert_fail@plt+0xdb34>
   1efb0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1efb4:	movw	r1, #0
   1efb8:	sdiv	r0, r1, r0
   1efbc:	ldr	r1, [fp, #8]
   1efc0:	cmp	r0, r1
   1efc4:	blt	1effc <__assert_fail@plt+0xdb20>
   1efc8:	b	1f010 <__assert_fail@plt+0xdb34>
   1efcc:	ldr	r0, [fp, #8]
   1efd0:	asr	r3, r0, #31
   1efd4:	mvn	r1, #0
   1efd8:	str	r0, [sp, #4]
   1efdc:	mov	r0, r1
   1efe0:	ldr	r2, [sp, #4]
   1efe4:	bl	2413c <__assert_fail@plt+0x12c60>
   1efe8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1efec:	subs	r0, r0, r2
   1eff0:	sbcs	r1, r1, r2, asr #31
   1eff4:	bcs	1f010 <__assert_fail@plt+0xdb34>
   1eff8:	b	1effc <__assert_fail@plt+0xdb20>
   1effc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f000:	ldr	r1, [fp, #8]
   1f004:	mul	r0, r0, r1
   1f008:	str	r0, [fp, #-28]	; 0xffffffe4
   1f00c:	b	1f024 <__assert_fail@plt+0xdb48>
   1f010:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f014:	ldr	r1, [fp, #8]
   1f018:	mul	r0, r0, r1
   1f01c:	str	r0, [fp, #-28]	; 0xffffffe4
   1f020:	b	1f028 <__assert_fail@plt+0xdb4c>
   1f024:	bl	1f200 <__assert_fail@plt+0xdd24>
   1f028:	ldr	r0, [fp, #-4]
   1f02c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1f030:	bl	1c560 <__assert_fail@plt+0xb084>
   1f034:	str	r0, [fp, #-4]
   1f038:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f03c:	ldr	r1, [fp, #-8]
   1f040:	str	r0, [r1]
   1f044:	ldr	r0, [fp, #-4]
   1f048:	mov	sp, fp
   1f04c:	pop	{fp, pc}
   1f050:	svcvc	0x00ffffff
   1f054:	andhi	r0, r0, r1
   1f058:	andhi	r0, r0, r0
   1f05c:			; <UNDEFINED> instruction: 0xffff8000
   1f060:	push	{fp, lr}
   1f064:	mov	fp, sp
   1f068:	sub	sp, sp, #8
   1f06c:	str	r0, [sp, #4]
   1f070:	ldr	r0, [sp, #4]
   1f074:	movw	r1, #1
   1f078:	bl	1f084 <__assert_fail@plt+0xdba8>
   1f07c:	mov	sp, fp
   1f080:	pop	{fp, pc}
   1f084:	push	{fp, lr}
   1f088:	mov	fp, sp
   1f08c:	sub	sp, sp, #8
   1f090:	str	r0, [sp, #4]
   1f094:	str	r1, [sp]
   1f098:	ldr	r0, [sp, #4]
   1f09c:	ldr	r1, [sp]
   1f0a0:	bl	212e0 <__assert_fail@plt+0xfe04>
   1f0a4:	bl	1c4ec <__assert_fail@plt+0xb010>
   1f0a8:	mov	sp, fp
   1f0ac:	pop	{fp, pc}
   1f0b0:	push	{fp, lr}
   1f0b4:	mov	fp, sp
   1f0b8:	sub	sp, sp, #8
   1f0bc:	str	r0, [sp, #4]
   1f0c0:	ldr	r0, [sp, #4]
   1f0c4:	movw	r1, #1
   1f0c8:	bl	1f0d4 <__assert_fail@plt+0xdbf8>
   1f0cc:	mov	sp, fp
   1f0d0:	pop	{fp, pc}
   1f0d4:	push	{fp, lr}
   1f0d8:	mov	fp, sp
   1f0dc:	sub	sp, sp, #8
   1f0e0:	str	r0, [sp, #4]
   1f0e4:	str	r1, [sp]
   1f0e8:	ldr	r0, [sp, #4]
   1f0ec:	ldr	r1, [sp]
   1f0f0:	bl	222ac <__assert_fail@plt+0x10dd0>
   1f0f4:	bl	1c4ec <__assert_fail@plt+0xb010>
   1f0f8:	mov	sp, fp
   1f0fc:	pop	{fp, pc}
   1f100:	push	{fp, lr}
   1f104:	mov	fp, sp
   1f108:	sub	sp, sp, #16
   1f10c:	str	r0, [fp, #-4]
   1f110:	str	r1, [sp, #8]
   1f114:	ldr	r0, [sp, #8]
   1f118:	bl	1c4c8 <__assert_fail@plt+0xafec>
   1f11c:	ldr	r1, [fp, #-4]
   1f120:	ldr	r2, [sp, #8]
   1f124:	str	r0, [sp, #4]
   1f128:	bl	1123c <memcpy@plt>
   1f12c:	ldr	r0, [sp, #4]
   1f130:	mov	sp, fp
   1f134:	pop	{fp, pc}
   1f138:	push	{fp, lr}
   1f13c:	mov	fp, sp
   1f140:	sub	sp, sp, #16
   1f144:	str	r0, [fp, #-4]
   1f148:	str	r1, [sp, #8]
   1f14c:	ldr	r0, [sp, #8]
   1f150:	bl	1c51c <__assert_fail@plt+0xb040>
   1f154:	ldr	r1, [fp, #-4]
   1f158:	ldr	r2, [sp, #8]
   1f15c:	str	r0, [sp, #4]
   1f160:	bl	1123c <memcpy@plt>
   1f164:	ldr	r0, [sp, #4]
   1f168:	mov	sp, fp
   1f16c:	pop	{fp, pc}
   1f170:	push	{fp, lr}
   1f174:	mov	fp, sp
   1f178:	sub	sp, sp, #16
   1f17c:	str	r0, [fp, #-4]
   1f180:	str	r1, [sp, #8]
   1f184:	ldr	r0, [sp, #8]
   1f188:	add	r0, r0, #1
   1f18c:	bl	1c51c <__assert_fail@plt+0xb040>
   1f190:	str	r0, [sp, #4]
   1f194:	ldr	r0, [sp, #4]
   1f198:	ldr	r1, [sp, #8]
   1f19c:	add	r0, r0, r1
   1f1a0:	movw	r1, #0
   1f1a4:	strb	r1, [r0]
   1f1a8:	ldr	r0, [sp, #4]
   1f1ac:	ldr	r1, [fp, #-4]
   1f1b0:	ldr	r2, [sp, #8]
   1f1b4:	str	r0, [sp]
   1f1b8:	bl	1123c <memcpy@plt>
   1f1bc:	ldr	r0, [sp]
   1f1c0:	mov	sp, fp
   1f1c4:	pop	{fp, pc}
   1f1c8:	push	{fp, lr}
   1f1cc:	mov	fp, sp
   1f1d0:	sub	sp, sp, #8
   1f1d4:	str	r0, [sp, #4]
   1f1d8:	ldr	r0, [sp, #4]
   1f1dc:	ldr	r1, [sp, #4]
   1f1e0:	str	r0, [sp]
   1f1e4:	mov	r0, r1
   1f1e8:	bl	1135c <strlen@plt>
   1f1ec:	add	r1, r0, #1
   1f1f0:	ldr	r0, [sp]
   1f1f4:	bl	1f100 <__assert_fail@plt+0xdc24>
   1f1f8:	mov	sp, fp
   1f1fc:	pop	{fp, pc}
   1f200:	push	{fp, lr}
   1f204:	mov	fp, sp
   1f208:	sub	sp, sp, #8
   1f20c:	movw	r0, #24880	; 0x6130
   1f210:	movt	r0, #3
   1f214:	ldr	r0, [r0]
   1f218:	movw	r1, #22100	; 0x5654
   1f21c:	movt	r1, #2
   1f220:	str	r0, [sp, #4]
   1f224:	mov	r0, r1
   1f228:	bl	11350 <gettext@plt>
   1f22c:	ldr	r1, [sp, #4]
   1f230:	str	r0, [sp]
   1f234:	mov	r0, r1
   1f238:	movw	r1, #0
   1f23c:	movw	r2, #19687	; 0x4ce7
   1f240:	movt	r2, #2
   1f244:	ldr	r3, [sp]
   1f248:	bl	112e4 <error@plt>
   1f24c:	bl	11494 <abort@plt>
   1f250:	push	{fp, lr}
   1f254:	mov	fp, sp
   1f258:	sub	sp, sp, #16
   1f25c:	str	r0, [fp, #-4]
   1f260:	str	r1, [sp, #8]
   1f264:	str	r2, [sp, #4]
   1f268:	ldr	r0, [fp, #-4]
   1f26c:	ldr	r1, [sp, #8]
   1f270:	orr	r1, r1, #512	; 0x200
   1f274:	ldr	r2, [sp, #4]
   1f278:	bl	1386c <__assert_fail@plt+0x2390>
   1f27c:	str	r0, [sp]
   1f280:	ldr	r0, [sp]
   1f284:	movw	r1, #0
   1f288:	cmp	r0, r1
   1f28c:	bne	1f2c8 <__assert_fail@plt+0xddec>
   1f290:	bl	11398 <__errno_location@plt>
   1f294:	ldr	r0, [r0]
   1f298:	cmp	r0, #22
   1f29c:	beq	1f2a4 <__assert_fail@plt+0xddc8>
   1f2a0:	b	1f2c4 <__assert_fail@plt+0xdde8>
   1f2a4:	movw	r0, #22117	; 0x5665
   1f2a8:	movt	r0, #2
   1f2ac:	movw	r1, #22133	; 0x5675
   1f2b0:	movt	r1, #2
   1f2b4:	movw	r2, #41	; 0x29
   1f2b8:	movw	r3, #22144	; 0x5680
   1f2bc:	movt	r3, #2
   1f2c0:	bl	114dc <__assert_fail@plt>
   1f2c4:	bl	1f200 <__assert_fail@plt+0xdd24>
   1f2c8:	ldr	r0, [sp]
   1f2cc:	mov	sp, fp
   1f2d0:	pop	{fp, pc}
   1f2d4:	sub	sp, sp, #16
   1f2d8:	str	r0, [sp, #12]
   1f2dc:	str	r1, [sp, #8]
   1f2e0:	ldr	r0, [sp, #12]
   1f2e4:	ldr	r0, [r0, #48]	; 0x30
   1f2e8:	and	r0, r0, #16
   1f2ec:	cmp	r0, #0
   1f2f0:	beq	1f310 <__assert_fail@plt+0xde34>
   1f2f4:	ldr	r0, [sp, #12]
   1f2f8:	ldr	r0, [r0, #48]	; 0x30
   1f2fc:	and	r0, r0, #1
   1f300:	cmp	r0, #0
   1f304:	movw	r0, #1
   1f308:	str	r0, [sp, #4]
   1f30c:	beq	1f368 <__assert_fail@plt+0xde8c>
   1f310:	ldr	r0, [sp, #12]
   1f314:	ldr	r0, [r0, #48]	; 0x30
   1f318:	and	r0, r0, #16
   1f31c:	cmp	r0, #0
   1f320:	movw	r0, #0
   1f324:	str	r0, [sp]
   1f328:	beq	1f360 <__assert_fail@plt+0xde84>
   1f32c:	ldr	r0, [sp, #12]
   1f330:	ldr	r0, [r0, #48]	; 0x30
   1f334:	and	r0, r0, #1
   1f338:	cmp	r0, #0
   1f33c:	movw	r0, #0
   1f340:	str	r0, [sp]
   1f344:	beq	1f360 <__assert_fail@plt+0xde84>
   1f348:	ldr	r0, [sp, #8]
   1f34c:	ldr	r0, [r0, #48]	; 0x30
   1f350:	cmp	r0, #0
   1f354:	movw	r0, #0
   1f358:	movne	r0, #1
   1f35c:	str	r0, [sp]
   1f360:	ldr	r0, [sp]
   1f364:	str	r0, [sp, #4]
   1f368:	ldr	r0, [sp, #4]
   1f36c:	and	r0, r0, #1
   1f370:	add	sp, sp, #16
   1f374:	bx	lr
   1f378:	push	{fp, lr}
   1f37c:	mov	fp, sp
   1f380:	sub	sp, sp, #80	; 0x50
   1f384:	ldr	ip, [fp, #8]
   1f388:	str	r0, [fp, #-8]
   1f38c:	str	r1, [fp, #-12]
   1f390:	str	r2, [fp, #-16]
   1f394:	str	r3, [fp, #-20]	; 0xffffffec
   1f398:	movw	r0, #0
   1f39c:	str	r0, [sp, #36]	; 0x24
   1f3a0:	ldr	r1, [fp, #-16]
   1f3a4:	cmp	r0, r1
   1f3a8:	bgt	1f3bc <__assert_fail@plt+0xdee0>
   1f3ac:	ldr	r0, [fp, #-16]
   1f3b0:	cmp	r0, #36	; 0x24
   1f3b4:	bgt	1f3bc <__assert_fail@plt+0xdee0>
   1f3b8:	b	1f3dc <__assert_fail@plt+0xdf00>
   1f3bc:	movw	r0, #22222	; 0x56ce
   1f3c0:	movt	r0, #2
   1f3c4:	movw	r1, #22260	; 0x56f4
   1f3c8:	movt	r1, #2
   1f3cc:	movw	r2, #85	; 0x55
   1f3d0:	movw	r3, #22276	; 0x5704
   1f3d4:	movt	r3, #2
   1f3d8:	bl	114dc <__assert_fail@plt>
   1f3dc:	ldr	r0, [fp, #-12]
   1f3e0:	movw	r1, #0
   1f3e4:	cmp	r0, r1
   1f3e8:	beq	1f3f8 <__assert_fail@plt+0xdf1c>
   1f3ec:	ldr	r0, [fp, #-12]
   1f3f0:	str	r0, [sp, #12]
   1f3f4:	b	1f404 <__assert_fail@plt+0xdf28>
   1f3f8:	sub	r0, fp, #24
   1f3fc:	str	r0, [sp, #12]
   1f400:	b	1f404 <__assert_fail@plt+0xdf28>
   1f404:	ldr	r0, [sp, #12]
   1f408:	str	r0, [fp, #-28]	; 0xffffffe4
   1f40c:	bl	11398 <__errno_location@plt>
   1f410:	movw	r1, #0
   1f414:	str	r1, [r0]
   1f418:	ldr	r0, [fp, #-8]
   1f41c:	str	r0, [sp, #32]
   1f420:	ldr	r0, [sp, #32]
   1f424:	ldrb	r0, [r0]
   1f428:	strb	r0, [sp, #31]
   1f42c:	bl	11338 <__ctype_b_loc@plt>
   1f430:	ldr	r0, [r0]
   1f434:	ldrb	r1, [sp, #31]
   1f438:	mov	r2, r1
   1f43c:	add	r0, r0, r1, lsl #1
   1f440:	ldrh	r0, [r0]
   1f444:	and	r0, r0, #8192	; 0x2000
   1f448:	cmp	r0, #0
   1f44c:	beq	1f468 <__assert_fail@plt+0xdf8c>
   1f450:	ldr	r0, [sp, #32]
   1f454:	add	r1, r0, #1
   1f458:	str	r1, [sp, #32]
   1f45c:	ldrb	r0, [r0, #1]
   1f460:	strb	r0, [sp, #31]
   1f464:	b	1f42c <__assert_fail@plt+0xdf50>
   1f468:	ldrb	r0, [sp, #31]
   1f46c:	cmp	r0, #45	; 0x2d
   1f470:	bne	1f480 <__assert_fail@plt+0xdfa4>
   1f474:	movw	r0, #4
   1f478:	str	r0, [fp, #-4]
   1f47c:	b	1f9fc <__assert_fail@plt+0xe520>
   1f480:	ldr	r0, [fp, #-8]
   1f484:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1f488:	ldr	r2, [fp, #-16]
   1f48c:	bl	113c8 <strtoumax@plt>
   1f490:	str	r1, [sp, #44]	; 0x2c
   1f494:	str	r0, [sp, #40]	; 0x28
   1f498:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1f49c:	ldr	r0, [r0]
   1f4a0:	ldr	r1, [fp, #-8]
   1f4a4:	cmp	r0, r1
   1f4a8:	bne	1f514 <__assert_fail@plt+0xe038>
   1f4ac:	ldr	r0, [fp, #8]
   1f4b0:	movw	r1, #0
   1f4b4:	cmp	r0, r1
   1f4b8:	beq	1f504 <__assert_fail@plt+0xe028>
   1f4bc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1f4c0:	ldr	r0, [r0]
   1f4c4:	ldrb	r0, [r0]
   1f4c8:	cmp	r0, #0
   1f4cc:	beq	1f504 <__assert_fail@plt+0xe028>
   1f4d0:	ldr	r0, [fp, #8]
   1f4d4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1f4d8:	ldr	r1, [r1]
   1f4dc:	ldrb	r1, [r1]
   1f4e0:	bl	11368 <strchr@plt>
   1f4e4:	movw	r1, #0
   1f4e8:	cmp	r0, r1
   1f4ec:	beq	1f504 <__assert_fail@plt+0xe028>
   1f4f0:	mov	r0, #0
   1f4f4:	str	r0, [sp, #44]	; 0x2c
   1f4f8:	mov	r0, #1
   1f4fc:	str	r0, [sp, #40]	; 0x28
   1f500:	b	1f510 <__assert_fail@plt+0xe034>
   1f504:	movw	r0, #4
   1f508:	str	r0, [fp, #-4]
   1f50c:	b	1f9fc <__assert_fail@plt+0xe520>
   1f510:	b	1f54c <__assert_fail@plt+0xe070>
   1f514:	bl	11398 <__errno_location@plt>
   1f518:	ldr	r0, [r0]
   1f51c:	cmp	r0, #0
   1f520:	beq	1f548 <__assert_fail@plt+0xe06c>
   1f524:	bl	11398 <__errno_location@plt>
   1f528:	ldr	r0, [r0]
   1f52c:	cmp	r0, #34	; 0x22
   1f530:	beq	1f540 <__assert_fail@plt+0xe064>
   1f534:	movw	r0, #4
   1f538:	str	r0, [fp, #-4]
   1f53c:	b	1f9fc <__assert_fail@plt+0xe520>
   1f540:	movw	r0, #1
   1f544:	str	r0, [sp, #36]	; 0x24
   1f548:	b	1f54c <__assert_fail@plt+0xe070>
   1f54c:	ldr	r0, [fp, #8]
   1f550:	movw	r1, #0
   1f554:	cmp	r0, r1
   1f558:	bne	1f57c <__assert_fail@plt+0xe0a0>
   1f55c:	ldr	r0, [sp, #40]	; 0x28
   1f560:	ldr	r1, [sp, #44]	; 0x2c
   1f564:	ldr	r2, [fp, #-20]	; 0xffffffec
   1f568:	str	r1, [r2, #4]
   1f56c:	str	r0, [r2]
   1f570:	ldr	r0, [sp, #36]	; 0x24
   1f574:	str	r0, [fp, #-4]
   1f578:	b	1f9fc <__assert_fail@plt+0xe520>
   1f57c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1f580:	ldr	r0, [r0]
   1f584:	ldrb	r0, [r0]
   1f588:	cmp	r0, #0
   1f58c:	beq	1f9e0 <__assert_fail@plt+0xe504>
   1f590:	movw	r0, #1024	; 0x400
   1f594:	str	r0, [sp, #24]
   1f598:	movw	r0, #1
   1f59c:	str	r0, [sp, #20]
   1f5a0:	ldr	r0, [fp, #8]
   1f5a4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1f5a8:	ldr	r1, [r1]
   1f5ac:	ldrb	r1, [r1]
   1f5b0:	bl	11368 <strchr@plt>
   1f5b4:	movw	r1, #0
   1f5b8:	cmp	r0, r1
   1f5bc:	bne	1f5e4 <__assert_fail@plt+0xe108>
   1f5c0:	ldr	r0, [sp, #40]	; 0x28
   1f5c4:	ldr	r1, [sp, #44]	; 0x2c
   1f5c8:	ldr	r2, [fp, #-20]	; 0xffffffec
   1f5cc:	str	r1, [r2, #4]
   1f5d0:	str	r0, [r2]
   1f5d4:	ldr	r0, [sp, #36]	; 0x24
   1f5d8:	orr	r0, r0, #2
   1f5dc:	str	r0, [fp, #-4]
   1f5e0:	b	1f9fc <__assert_fail@plt+0xe520>
   1f5e4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1f5e8:	ldr	r0, [r0]
   1f5ec:	ldrb	r0, [r0]
   1f5f0:	sub	r0, r0, #69	; 0x45
   1f5f4:	cmp	r0, #47	; 0x2f
   1f5f8:	str	r0, [sp, #8]
   1f5fc:	bhi	1f768 <__assert_fail@plt+0xe28c>
   1f600:	add	r0, pc, #8
   1f604:	ldr	r1, [sp, #8]
   1f608:	ldr	r0, [r0, r1, lsl #2]
   1f60c:	mov	pc, r0
   1f610:	ldrdeq	pc, [r1], -r0
   1f614:	andeq	pc, r1, r8, ror #14
   1f618:	ldrdeq	pc, [r1], -r0
   1f61c:	andeq	pc, r1, r8, ror #14
   1f620:	andeq	pc, r1, r8, ror #14
   1f624:	andeq	pc, r1, r8, ror #14
   1f628:	ldrdeq	pc, [r1], -r0
   1f62c:	andeq	pc, r1, r8, ror #14
   1f630:	ldrdeq	pc, [r1], -r0
   1f634:	andeq	pc, r1, r8, ror #14
   1f638:	andeq	pc, r1, r8, ror #14
   1f63c:	ldrdeq	pc, [r1], -r0
   1f640:	andeq	pc, r1, r8, ror #14
   1f644:	andeq	pc, r1, r8, ror #14
   1f648:	andeq	pc, r1, r8, ror #14
   1f64c:	ldrdeq	pc, [r1], -r0
   1f650:	andeq	pc, r1, r8, ror #14
   1f654:	andeq	pc, r1, r8, ror #14
   1f658:	andeq	pc, r1, r8, ror #14
   1f65c:	andeq	pc, r1, r8, ror #14
   1f660:	ldrdeq	pc, [r1], -r0
   1f664:	ldrdeq	pc, [r1], -r0
   1f668:	andeq	pc, r1, r8, ror #14
   1f66c:	andeq	pc, r1, r8, ror #14
   1f670:	andeq	pc, r1, r8, ror #14
   1f674:	andeq	pc, r1, r8, ror #14
   1f678:	andeq	pc, r1, r8, ror #14
   1f67c:	andeq	pc, r1, r8, ror #14
   1f680:	andeq	pc, r1, r8, ror #14
   1f684:	andeq	pc, r1, r8, ror #14
   1f688:	andeq	pc, r1, r8, ror #14
   1f68c:	andeq	pc, r1, r8, ror #14
   1f690:	andeq	pc, r1, r8, ror #14
   1f694:	andeq	pc, r1, r8, ror #14
   1f698:	ldrdeq	pc, [r1], -r0
   1f69c:	andeq	pc, r1, r8, ror #14
   1f6a0:	andeq	pc, r1, r8, ror #14
   1f6a4:	andeq	pc, r1, r8, ror #14
   1f6a8:	ldrdeq	pc, [r1], -r0
   1f6ac:	andeq	pc, r1, r8, ror #14
   1f6b0:	ldrdeq	pc, [r1], -r0
   1f6b4:	andeq	pc, r1, r8, ror #14
   1f6b8:	andeq	pc, r1, r8, ror #14
   1f6bc:	andeq	pc, r1, r8, ror #14
   1f6c0:	andeq	pc, r1, r8, ror #14
   1f6c4:	andeq	pc, r1, r8, ror #14
   1f6c8:	andeq	pc, r1, r8, ror #14
   1f6cc:	ldrdeq	pc, [r1], -r0
   1f6d0:	ldr	r0, [fp, #8]
   1f6d4:	movw	r1, #48	; 0x30
   1f6d8:	bl	11368 <strchr@plt>
   1f6dc:	movw	r1, #0
   1f6e0:	cmp	r0, r1
   1f6e4:	beq	1f764 <__assert_fail@plt+0xe288>
   1f6e8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1f6ec:	ldr	r0, [r0]
   1f6f0:	ldrb	r0, [r0, #1]
   1f6f4:	mov	r1, r0
   1f6f8:	cmp	r0, #66	; 0x42
   1f6fc:	str	r1, [sp, #4]
   1f700:	beq	1f74c <__assert_fail@plt+0xe270>
   1f704:	b	1f708 <__assert_fail@plt+0xe22c>
   1f708:	ldr	r0, [sp, #4]
   1f70c:	cmp	r0, #68	; 0x44
   1f710:	beq	1f74c <__assert_fail@plt+0xe270>
   1f714:	b	1f718 <__assert_fail@plt+0xe23c>
   1f718:	ldr	r0, [sp, #4]
   1f71c:	cmp	r0, #105	; 0x69
   1f720:	bne	1f760 <__assert_fail@plt+0xe284>
   1f724:	b	1f728 <__assert_fail@plt+0xe24c>
   1f728:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1f72c:	ldr	r0, [r0]
   1f730:	ldrb	r0, [r0, #2]
   1f734:	cmp	r0, #66	; 0x42
   1f738:	bne	1f748 <__assert_fail@plt+0xe26c>
   1f73c:	ldr	r0, [sp, #20]
   1f740:	add	r0, r0, #2
   1f744:	str	r0, [sp, #20]
   1f748:	b	1f760 <__assert_fail@plt+0xe284>
   1f74c:	movw	r0, #1000	; 0x3e8
   1f750:	str	r0, [sp, #24]
   1f754:	ldr	r0, [sp, #20]
   1f758:	add	r0, r0, #1
   1f75c:	str	r0, [sp, #20]
   1f760:	b	1f764 <__assert_fail@plt+0xe288>
   1f764:	b	1f768 <__assert_fail@plt+0xe28c>
   1f768:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1f76c:	ldr	r0, [r0]
   1f770:	ldrb	r0, [r0]
   1f774:	sub	r0, r0, #66	; 0x42
   1f778:	cmp	r0, #53	; 0x35
   1f77c:	str	r0, [sp]
   1f780:	bhi	1f974 <__assert_fail@plt+0xe498>
   1f784:	add	r0, pc, #8
   1f788:	ldr	r1, [sp]
   1f78c:	ldr	r0, [r0, r1, lsl #2]
   1f790:	mov	pc, r0
   1f794:	andeq	pc, r1, r0, lsl #17
   1f798:	andeq	pc, r1, r4, ror r9	; <UNPREDICTABLE>
   1f79c:	andeq	pc, r1, r4, ror r9	; <UNPREDICTABLE>
   1f7a0:	andeq	pc, r1, r0, lsr #17
   1f7a4:	andeq	pc, r1, r4, ror r9	; <UNPREDICTABLE>
   1f7a8:			; <UNDEFINED> instruction: 0x0001f8b8
   1f7ac:	andeq	pc, r1, r4, ror r9	; <UNPREDICTABLE>
   1f7b0:	andeq	pc, r1, r4, ror r9	; <UNPREDICTABLE>
   1f7b4:	andeq	pc, r1, r4, ror r9	; <UNPREDICTABLE>
   1f7b8:	ldrdeq	pc, [r1], -r0
   1f7bc:	andeq	pc, r1, r4, ror r9	; <UNPREDICTABLE>
   1f7c0:	andeq	pc, r1, r8, ror #17
   1f7c4:	andeq	pc, r1, r4, ror r9	; <UNPREDICTABLE>
   1f7c8:	andeq	pc, r1, r4, ror r9	; <UNPREDICTABLE>
   1f7cc:	andeq	pc, r1, r0, lsl #18
   1f7d0:	andeq	pc, r1, r4, ror r9	; <UNPREDICTABLE>
   1f7d4:	andeq	pc, r1, r4, ror r9	; <UNPREDICTABLE>
   1f7d8:	andeq	pc, r1, r4, ror r9	; <UNPREDICTABLE>
   1f7dc:	andeq	pc, r1, r8, lsl r9	; <UNPREDICTABLE>
   1f7e0:	andeq	pc, r1, r4, ror r9	; <UNPREDICTABLE>
   1f7e4:	andeq	pc, r1, r4, ror r9	; <UNPREDICTABLE>
   1f7e8:	andeq	pc, r1, r4, ror r9	; <UNPREDICTABLE>
   1f7ec:	andeq	pc, r1, r4, ror r9	; <UNPREDICTABLE>
   1f7f0:	andeq	pc, r1, r4, asr #18
   1f7f4:	andeq	pc, r1, ip, asr r9	; <UNPREDICTABLE>
   1f7f8:	andeq	pc, r1, r4, ror r9	; <UNPREDICTABLE>
   1f7fc:	andeq	pc, r1, r4, ror r9	; <UNPREDICTABLE>
   1f800:	andeq	pc, r1, r4, ror r9	; <UNPREDICTABLE>
   1f804:	andeq	pc, r1, r4, ror r9	; <UNPREDICTABLE>
   1f808:	andeq	pc, r1, r4, ror r9	; <UNPREDICTABLE>
   1f80c:	andeq	pc, r1, r4, ror r9	; <UNPREDICTABLE>
   1f810:	andeq	pc, r1, r4, ror r9	; <UNPREDICTABLE>
   1f814:	andeq	pc, r1, ip, ror #16
   1f818:	muleq	r1, r4, r8
   1f81c:	andeq	pc, r1, r4, ror r9	; <UNPREDICTABLE>
   1f820:	andeq	pc, r1, r4, ror r9	; <UNPREDICTABLE>
   1f824:	andeq	pc, r1, r4, ror r9	; <UNPREDICTABLE>
   1f828:			; <UNDEFINED> instruction: 0x0001f8b8
   1f82c:	andeq	pc, r1, r4, ror r9	; <UNPREDICTABLE>
   1f830:	andeq	pc, r1, r4, ror r9	; <UNPREDICTABLE>
   1f834:	andeq	pc, r1, r4, ror r9	; <UNPREDICTABLE>
   1f838:	ldrdeq	pc, [r1], -r0
   1f83c:	andeq	pc, r1, r4, ror r9	; <UNPREDICTABLE>
   1f840:	andeq	pc, r1, r8, ror #17
   1f844:	andeq	pc, r1, r4, ror r9	; <UNPREDICTABLE>
   1f848:	andeq	pc, r1, r4, ror r9	; <UNPREDICTABLE>
   1f84c:	andeq	pc, r1, r4, ror r9	; <UNPREDICTABLE>
   1f850:	andeq	pc, r1, r4, ror r9	; <UNPREDICTABLE>
   1f854:	andeq	pc, r1, r4, ror r9	; <UNPREDICTABLE>
   1f858:	andeq	pc, r1, r4, ror r9	; <UNPREDICTABLE>
   1f85c:	andeq	pc, r1, r8, lsl r9	; <UNPREDICTABLE>
   1f860:	andeq	pc, r1, r4, ror r9	; <UNPREDICTABLE>
   1f864:	andeq	pc, r1, r4, ror r9	; <UNPREDICTABLE>
   1f868:	andeq	pc, r1, r0, lsr r9	; <UNPREDICTABLE>
   1f86c:	add	r0, sp, #40	; 0x28
   1f870:	movw	r1, #512	; 0x200
   1f874:	bl	1fa08 <__assert_fail@plt+0xe52c>
   1f878:	str	r0, [sp, #16]
   1f87c:	b	1f998 <__assert_fail@plt+0xe4bc>
   1f880:	add	r0, sp, #40	; 0x28
   1f884:	movw	r1, #1024	; 0x400
   1f888:	bl	1fa08 <__assert_fail@plt+0xe52c>
   1f88c:	str	r0, [sp, #16]
   1f890:	b	1f998 <__assert_fail@plt+0xe4bc>
   1f894:	movw	r0, #0
   1f898:	str	r0, [sp, #16]
   1f89c:	b	1f998 <__assert_fail@plt+0xe4bc>
   1f8a0:	ldr	r1, [sp, #24]
   1f8a4:	add	r0, sp, #40	; 0x28
   1f8a8:	movw	r2, #6
   1f8ac:	bl	21280 <__assert_fail@plt+0xfda4>
   1f8b0:	str	r0, [sp, #16]
   1f8b4:	b	1f998 <__assert_fail@plt+0xe4bc>
   1f8b8:	ldr	r1, [sp, #24]
   1f8bc:	add	r0, sp, #40	; 0x28
   1f8c0:	movw	r2, #3
   1f8c4:	bl	21280 <__assert_fail@plt+0xfda4>
   1f8c8:	str	r0, [sp, #16]
   1f8cc:	b	1f998 <__assert_fail@plt+0xe4bc>
   1f8d0:	ldr	r1, [sp, #24]
   1f8d4:	add	r0, sp, #40	; 0x28
   1f8d8:	movw	r2, #1
   1f8dc:	bl	21280 <__assert_fail@plt+0xfda4>
   1f8e0:	str	r0, [sp, #16]
   1f8e4:	b	1f998 <__assert_fail@plt+0xe4bc>
   1f8e8:	ldr	r1, [sp, #24]
   1f8ec:	add	r0, sp, #40	; 0x28
   1f8f0:	movw	r2, #2
   1f8f4:	bl	21280 <__assert_fail@plt+0xfda4>
   1f8f8:	str	r0, [sp, #16]
   1f8fc:	b	1f998 <__assert_fail@plt+0xe4bc>
   1f900:	ldr	r1, [sp, #24]
   1f904:	add	r0, sp, #40	; 0x28
   1f908:	movw	r2, #5
   1f90c:	bl	21280 <__assert_fail@plt+0xfda4>
   1f910:	str	r0, [sp, #16]
   1f914:	b	1f998 <__assert_fail@plt+0xe4bc>
   1f918:	ldr	r1, [sp, #24]
   1f91c:	add	r0, sp, #40	; 0x28
   1f920:	movw	r2, #4
   1f924:	bl	21280 <__assert_fail@plt+0xfda4>
   1f928:	str	r0, [sp, #16]
   1f92c:	b	1f998 <__assert_fail@plt+0xe4bc>
   1f930:	add	r0, sp, #40	; 0x28
   1f934:	movw	r1, #2
   1f938:	bl	1fa08 <__assert_fail@plt+0xe52c>
   1f93c:	str	r0, [sp, #16]
   1f940:	b	1f998 <__assert_fail@plt+0xe4bc>
   1f944:	ldr	r1, [sp, #24]
   1f948:	add	r0, sp, #40	; 0x28
   1f94c:	movw	r2, #8
   1f950:	bl	21280 <__assert_fail@plt+0xfda4>
   1f954:	str	r0, [sp, #16]
   1f958:	b	1f998 <__assert_fail@plt+0xe4bc>
   1f95c:	ldr	r1, [sp, #24]
   1f960:	add	r0, sp, #40	; 0x28
   1f964:	movw	r2, #7
   1f968:	bl	21280 <__assert_fail@plt+0xfda4>
   1f96c:	str	r0, [sp, #16]
   1f970:	b	1f998 <__assert_fail@plt+0xe4bc>
   1f974:	ldr	r0, [sp, #40]	; 0x28
   1f978:	ldr	r1, [sp, #44]	; 0x2c
   1f97c:	ldr	r2, [fp, #-20]	; 0xffffffec
   1f980:	str	r1, [r2, #4]
   1f984:	str	r0, [r2]
   1f988:	ldr	r0, [sp, #36]	; 0x24
   1f98c:	orr	r0, r0, #2
   1f990:	str	r0, [fp, #-4]
   1f994:	b	1f9fc <__assert_fail@plt+0xe520>
   1f998:	ldr	r0, [sp, #16]
   1f99c:	ldr	r1, [sp, #36]	; 0x24
   1f9a0:	orr	r0, r1, r0
   1f9a4:	str	r0, [sp, #36]	; 0x24
   1f9a8:	ldr	r0, [sp, #20]
   1f9ac:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1f9b0:	ldr	r2, [r1]
   1f9b4:	add	r0, r2, r0
   1f9b8:	str	r0, [r1]
   1f9bc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1f9c0:	ldr	r0, [r0]
   1f9c4:	ldrsb	r0, [r0]
   1f9c8:	cmp	r0, #0
   1f9cc:	beq	1f9dc <__assert_fail@plt+0xe500>
   1f9d0:	ldr	r0, [sp, #36]	; 0x24
   1f9d4:	orr	r0, r0, #2
   1f9d8:	str	r0, [sp, #36]	; 0x24
   1f9dc:	b	1f9e0 <__assert_fail@plt+0xe504>
   1f9e0:	ldr	r0, [sp, #40]	; 0x28
   1f9e4:	ldr	r1, [sp, #44]	; 0x2c
   1f9e8:	ldr	r2, [fp, #-20]	; 0xffffffec
   1f9ec:	str	r1, [r2, #4]
   1f9f0:	str	r0, [r2]
   1f9f4:	ldr	r0, [sp, #36]	; 0x24
   1f9f8:	str	r0, [fp, #-4]
   1f9fc:	ldr	r0, [fp, #-4]
   1fa00:	mov	sp, fp
   1fa04:	pop	{fp, pc}
   1fa08:	push	{fp, lr}
   1fa0c:	mov	fp, sp
   1fa10:	sub	sp, sp, #112	; 0x70
   1fa14:	str	r0, [fp, #-8]
   1fa18:	str	r1, [fp, #-12]
   1fa1c:	b	1fecc <__assert_fail@plt+0xe9f0>
   1fa20:	b	1fc94 <__assert_fail@plt+0xe7b8>
   1fa24:	ldr	r0, [fp, #-12]
   1fa28:	cmp	r0, #0
   1fa2c:	bge	1fb84 <__assert_fail@plt+0xe6a8>
   1fa30:	mov	r0, #1
   1fa34:	cmp	r0, #0
   1fa38:	bne	1fae0 <__assert_fail@plt+0xe604>
   1fa3c:	b	1fa40 <__assert_fail@plt+0xe564>
   1fa40:	b	1fa44 <__assert_fail@plt+0xe568>
   1fa44:	ldr	r0, [fp, #-8]
   1fa48:	ldr	r1, [r0]
   1fa4c:	ldr	r0, [r0, #4]
   1fa50:	ldr	r2, [fp, #-12]
   1fa54:	mov	r3, #127	; 0x7f
   1fa58:	sdiv	r2, r3, r2
   1fa5c:	subs	r1, r1, r2
   1fa60:	sbcs	r0, r0, r2, asr #31
   1fa64:	bcc	1fc4c <__assert_fail@plt+0xe770>
   1fa68:	b	1fc70 <__assert_fail@plt+0xe794>
   1fa6c:	b	1fa70 <__assert_fail@plt+0xe594>
   1fa70:	ldr	r0, [pc, #4076]	; 20a64 <__assert_fail@plt+0xf588>
   1fa74:	ldr	r1, [fp, #-12]
   1fa78:	cmp	r1, r0
   1fa7c:	blt	1fa94 <__assert_fail@plt+0xe5b8>
   1fa80:	b	1faa0 <__assert_fail@plt+0xe5c4>
   1fa84:	ldr	r0, [fp, #-12]
   1fa88:	movw	r1, #0
   1fa8c:	cmp	r1, r0
   1fa90:	bge	1faa0 <__assert_fail@plt+0xe5c4>
   1fa94:	movw	r0, #0
   1fa98:	str	r0, [fp, #-28]	; 0xffffffe4
   1fa9c:	b	1fab8 <__assert_fail@plt+0xe5dc>
   1faa0:	ldr	r0, [fp, #-12]
   1faa4:	movw	r1, #0
   1faa8:	sub	r0, r1, r0
   1faac:	movw	r1, #127	; 0x7f
   1fab0:	sdiv	r0, r1, r0
   1fab4:	str	r0, [fp, #-28]	; 0xffffffe4
   1fab8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1fabc:	ldr	r1, [fp, #-8]
   1fac0:	ldr	r2, [r1]
   1fac4:	ldr	r1, [r1, #4]
   1fac8:	mvn	r1, r1
   1facc:	mvn	r2, r2
   1fad0:	subs	r2, r2, r0
   1fad4:	sbcs	r0, r1, r0, asr #31
   1fad8:	bcs	1fc4c <__assert_fail@plt+0xe770>
   1fadc:	b	1fc70 <__assert_fail@plt+0xe794>
   1fae0:	b	1fae4 <__assert_fail@plt+0xe608>
   1fae4:	b	1fb5c <__assert_fail@plt+0xe680>
   1fae8:	b	1fb5c <__assert_fail@plt+0xe680>
   1faec:	ldr	r0, [fp, #-12]
   1faf0:	cmn	r0, #1
   1faf4:	bne	1fb5c <__assert_fail@plt+0xe680>
   1faf8:	b	1fb1c <__assert_fail@plt+0xe640>
   1fafc:	ldr	r0, [fp, #-8]
   1fb00:	ldr	r1, [r0]
   1fb04:	ldr	r0, [r0, #4]
   1fb08:	eor	r1, r1, #128	; 0x80
   1fb0c:	orr	r0, r1, r0
   1fb10:	cmp	r0, #0
   1fb14:	bne	1fc4c <__assert_fail@plt+0xe770>
   1fb18:	b	1fc70 <__assert_fail@plt+0xe794>
   1fb1c:	ldr	r0, [fp, #-8]
   1fb20:	ldr	r1, [r0]
   1fb24:	ldr	r0, [r0, #4]
   1fb28:	orr	r0, r1, r0
   1fb2c:	cmp	r0, #0
   1fb30:	beq	1fc70 <__assert_fail@plt+0xe794>
   1fb34:	b	1fb38 <__assert_fail@plt+0xe65c>
   1fb38:	ldr	r0, [fp, #-8]
   1fb3c:	ldr	r1, [r0]
   1fb40:	ldr	r0, [r0, #4]
   1fb44:	subs	r1, r1, #1
   1fb48:	sbc	r0, r0, #0
   1fb4c:	rsbs	r1, r1, #127	; 0x7f
   1fb50:	rscs	r0, r0, #0
   1fb54:	bcc	1fc4c <__assert_fail@plt+0xe770>
   1fb58:	b	1fc70 <__assert_fail@plt+0xe794>
   1fb5c:	ldr	r0, [fp, #-12]
   1fb60:	mvn	r1, #127	; 0x7f
   1fb64:	sdiv	r0, r1, r0
   1fb68:	ldr	r1, [fp, #-8]
   1fb6c:	ldr	r2, [r1]
   1fb70:	ldr	r1, [r1, #4]
   1fb74:	subs	r2, r0, r2
   1fb78:	rscs	r0, r1, r0, asr #31
   1fb7c:	bcc	1fc4c <__assert_fail@plt+0xe770>
   1fb80:	b	1fc70 <__assert_fail@plt+0xe794>
   1fb84:	ldr	r0, [fp, #-12]
   1fb88:	cmp	r0, #0
   1fb8c:	bne	1fb94 <__assert_fail@plt+0xe6b8>
   1fb90:	b	1fc70 <__assert_fail@plt+0xe794>
   1fb94:	mov	r0, #1
   1fb98:	cmp	r0, #0
   1fb9c:	bne	1fc24 <__assert_fail@plt+0xe748>
   1fba0:	b	1fba4 <__assert_fail@plt+0xe6c8>
   1fba4:	ldr	r0, [fp, #-8]
   1fba8:	ldr	r1, [r0]
   1fbac:	ldr	r0, [r0, #4]
   1fbb0:	and	r0, r1, r0
   1fbb4:	cmn	r0, #1
   1fbb8:	bne	1fbf8 <__assert_fail@plt+0xe71c>
   1fbbc:	b	1fbc0 <__assert_fail@plt+0xe6e4>
   1fbc0:	b	1fbc4 <__assert_fail@plt+0xe6e8>
   1fbc4:	ldr	r0, [fp, #-12]
   1fbc8:	mvn	r1, #127	; 0x7f
   1fbcc:	add	r0, r0, r1
   1fbd0:	movw	r1, #0
   1fbd4:	cmp	r1, r0
   1fbd8:	blt	1fc4c <__assert_fail@plt+0xe770>
   1fbdc:	b	1fc70 <__assert_fail@plt+0xe794>
   1fbe0:	ldr	r0, [fp, #-12]
   1fbe4:	sub	r0, r0, #1
   1fbe8:	movw	r1, #127	; 0x7f
   1fbec:	cmp	r1, r0
   1fbf0:	blt	1fc4c <__assert_fail@plt+0xe770>
   1fbf4:	b	1fc70 <__assert_fail@plt+0xe794>
   1fbf8:	ldr	r0, [fp, #-8]
   1fbfc:	ldr	r2, [r0]
   1fc00:	ldr	r3, [r0, #4]
   1fc04:	mvn	r0, #127	; 0x7f
   1fc08:	mvn	r1, #0
   1fc0c:	bl	2413c <__assert_fail@plt+0x12c60>
   1fc10:	ldr	r2, [fp, #-12]
   1fc14:	subs	r0, r0, r2
   1fc18:	sbcs	r1, r1, r2, asr #31
   1fc1c:	bcc	1fc4c <__assert_fail@plt+0xe770>
   1fc20:	b	1fc70 <__assert_fail@plt+0xe794>
   1fc24:	ldr	r0, [fp, #-12]
   1fc28:	mov	r1, #127	; 0x7f
   1fc2c:	sdiv	r0, r1, r0
   1fc30:	ldr	r1, [fp, #-8]
   1fc34:	ldr	r2, [r1]
   1fc38:	ldr	r1, [r1, #4]
   1fc3c:	subs	r2, r0, r2
   1fc40:	rscs	r0, r1, r0, asr #31
   1fc44:	bcs	1fc70 <__assert_fail@plt+0xe794>
   1fc48:	b	1fc4c <__assert_fail@plt+0xe770>
   1fc4c:	ldr	r0, [fp, #-8]
   1fc50:	ldr	r0, [r0]
   1fc54:	ldr	r1, [fp, #-12]
   1fc58:	mul	r0, r0, r1
   1fc5c:	sxtb	r0, r0
   1fc60:	asr	r1, r0, #31
   1fc64:	str	r0, [fp, #-24]	; 0xffffffe8
   1fc68:	str	r1, [fp, #-20]	; 0xffffffec
   1fc6c:	b	21234 <__assert_fail@plt+0xfd58>
   1fc70:	ldr	r0, [fp, #-8]
   1fc74:	ldr	r0, [r0]
   1fc78:	ldr	r1, [fp, #-12]
   1fc7c:	mul	r0, r0, r1
   1fc80:	sxtb	r0, r0
   1fc84:	asr	r1, r0, #31
   1fc88:	str	r0, [fp, #-24]	; 0xffffffe8
   1fc8c:	str	r1, [fp, #-20]	; 0xffffffec
   1fc90:	b	21250 <__assert_fail@plt+0xfd74>
   1fc94:	ldr	r0, [fp, #-12]
   1fc98:	cmp	r0, #0
   1fc9c:	bge	1fdd0 <__assert_fail@plt+0xe8f4>
   1fca0:	mov	r0, #1
   1fca4:	cmp	r0, #0
   1fca8:	bne	1fd50 <__assert_fail@plt+0xe874>
   1fcac:	b	1fcb0 <__assert_fail@plt+0xe7d4>
   1fcb0:	b	1fcb4 <__assert_fail@plt+0xe7d8>
   1fcb4:	ldr	r0, [fp, #-8]
   1fcb8:	ldr	r1, [r0]
   1fcbc:	ldr	r0, [r0, #4]
   1fcc0:	ldr	r2, [fp, #-12]
   1fcc4:	mov	r3, #255	; 0xff
   1fcc8:	sdiv	r2, r3, r2
   1fccc:	subs	r1, r1, r2
   1fcd0:	sbcs	r0, r0, r2, asr #31
   1fcd4:	bcc	1fe84 <__assert_fail@plt+0xe9a8>
   1fcd8:	b	1fea8 <__assert_fail@plt+0xe9cc>
   1fcdc:	b	1fce0 <__assert_fail@plt+0xe804>
   1fce0:	ldr	r0, [pc, #3452]	; 20a64 <__assert_fail@plt+0xf588>
   1fce4:	ldr	r1, [fp, #-12]
   1fce8:	cmp	r1, r0
   1fcec:	blt	1fd04 <__assert_fail@plt+0xe828>
   1fcf0:	b	1fd10 <__assert_fail@plt+0xe834>
   1fcf4:	ldr	r0, [fp, #-12]
   1fcf8:	movw	r1, #0
   1fcfc:	cmp	r1, r0
   1fd00:	bge	1fd10 <__assert_fail@plt+0xe834>
   1fd04:	movw	r0, #0
   1fd08:	str	r0, [fp, #-32]	; 0xffffffe0
   1fd0c:	b	1fd28 <__assert_fail@plt+0xe84c>
   1fd10:	ldr	r0, [fp, #-12]
   1fd14:	movw	r1, #0
   1fd18:	sub	r0, r1, r0
   1fd1c:	movw	r1, #255	; 0xff
   1fd20:	sdiv	r0, r1, r0
   1fd24:	str	r0, [fp, #-32]	; 0xffffffe0
   1fd28:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1fd2c:	ldr	r1, [fp, #-8]
   1fd30:	ldr	r2, [r1]
   1fd34:	ldr	r1, [r1, #4]
   1fd38:	mvn	r1, r1
   1fd3c:	mvn	r2, r2
   1fd40:	subs	r2, r2, r0
   1fd44:	sbcs	r0, r1, r0, asr #31
   1fd48:	bcs	1fe84 <__assert_fail@plt+0xe9a8>
   1fd4c:	b	1fea8 <__assert_fail@plt+0xe9cc>
   1fd50:	b	1fd54 <__assert_fail@plt+0xe878>
   1fd54:	b	1fdb4 <__assert_fail@plt+0xe8d8>
   1fd58:	b	1fdb4 <__assert_fail@plt+0xe8d8>
   1fd5c:	ldr	r0, [fp, #-12]
   1fd60:	cmn	r0, #1
   1fd64:	bne	1fdb4 <__assert_fail@plt+0xe8d8>
   1fd68:	b	1fd88 <__assert_fail@plt+0xe8ac>
   1fd6c:	ldr	r0, [fp, #-8]
   1fd70:	ldr	r1, [r0]
   1fd74:	ldr	r0, [r0, #4]
   1fd78:	orr	r0, r1, r0
   1fd7c:	cmp	r0, #0
   1fd80:	bne	1fe84 <__assert_fail@plt+0xe9a8>
   1fd84:	b	1fea8 <__assert_fail@plt+0xe9cc>
   1fd88:	ldr	r0, [fp, #-8]
   1fd8c:	ldr	r1, [r0]
   1fd90:	ldr	r0, [r0, #4]
   1fd94:	orr	r0, r1, r0
   1fd98:	cmp	r0, #0
   1fd9c:	beq	1fea8 <__assert_fail@plt+0xe9cc>
   1fda0:	b	1fda4 <__assert_fail@plt+0xe8c8>
   1fda4:	mov	r0, #0
   1fda8:	cmp	r0, #0
   1fdac:	bne	1fe84 <__assert_fail@plt+0xe9a8>
   1fdb0:	b	1fea8 <__assert_fail@plt+0xe9cc>
   1fdb4:	ldr	r0, [fp, #-8]
   1fdb8:	ldr	r1, [r0]
   1fdbc:	ldr	r0, [r0, #4]
   1fdc0:	orr	r0, r1, r0
   1fdc4:	cmp	r0, #0
   1fdc8:	bne	1fe84 <__assert_fail@plt+0xe9a8>
   1fdcc:	b	1fea8 <__assert_fail@plt+0xe9cc>
   1fdd0:	ldr	r0, [fp, #-12]
   1fdd4:	cmp	r0, #0
   1fdd8:	bne	1fde0 <__assert_fail@plt+0xe904>
   1fddc:	b	1fea8 <__assert_fail@plt+0xe9cc>
   1fde0:	mov	r0, #1
   1fde4:	cmp	r0, #0
   1fde8:	bne	1fe5c <__assert_fail@plt+0xe980>
   1fdec:	b	1fdf0 <__assert_fail@plt+0xe914>
   1fdf0:	b	1fdf8 <__assert_fail@plt+0xe91c>
   1fdf4:	b	1fdfc <__assert_fail@plt+0xe920>
   1fdf8:	b	1fe4c <__assert_fail@plt+0xe970>
   1fdfc:	ldr	r0, [fp, #-8]
   1fe00:	ldr	r1, [r0]
   1fe04:	ldr	r0, [r0, #4]
   1fe08:	and	r0, r1, r0
   1fe0c:	cmn	r0, #1
   1fe10:	bne	1fe4c <__assert_fail@plt+0xe970>
   1fe14:	b	1fe18 <__assert_fail@plt+0xe93c>
   1fe18:	b	1fe1c <__assert_fail@plt+0xe940>
   1fe1c:	ldr	r0, [fp, #-12]
   1fe20:	add	r0, r0, #0
   1fe24:	movw	r1, #0
   1fe28:	cmp	r1, r0
   1fe2c:	blt	1fe84 <__assert_fail@plt+0xe9a8>
   1fe30:	b	1fea8 <__assert_fail@plt+0xe9cc>
   1fe34:	ldr	r0, [fp, #-12]
   1fe38:	sub	r0, r0, #1
   1fe3c:	mvn	r1, #0
   1fe40:	cmp	r1, r0
   1fe44:	blt	1fe84 <__assert_fail@plt+0xe9a8>
   1fe48:	b	1fea8 <__assert_fail@plt+0xe9cc>
   1fe4c:	ldr	r0, [fp, #-12]
   1fe50:	cmp	r0, #0
   1fe54:	bne	1fe84 <__assert_fail@plt+0xe9a8>
   1fe58:	b	1fea8 <__assert_fail@plt+0xe9cc>
   1fe5c:	ldr	r0, [fp, #-12]
   1fe60:	mov	r1, #255	; 0xff
   1fe64:	sdiv	r0, r1, r0
   1fe68:	ldr	r1, [fp, #-8]
   1fe6c:	ldr	r2, [r1]
   1fe70:	ldr	r1, [r1, #4]
   1fe74:	subs	r2, r0, r2
   1fe78:	rscs	r0, r1, r0, asr #31
   1fe7c:	bcs	1fea8 <__assert_fail@plt+0xe9cc>
   1fe80:	b	1fe84 <__assert_fail@plt+0xe9a8>
   1fe84:	ldr	r0, [fp, #-8]
   1fe88:	ldr	r0, [r0]
   1fe8c:	ldr	r1, [fp, #-12]
   1fe90:	mul	r0, r0, r1
   1fe94:	uxtb	r0, r0
   1fe98:	mov	r1, #0
   1fe9c:	str	r1, [fp, #-20]	; 0xffffffec
   1fea0:	str	r0, [fp, #-24]	; 0xffffffe8
   1fea4:	b	21234 <__assert_fail@plt+0xfd58>
   1fea8:	ldr	r0, [fp, #-8]
   1feac:	ldr	r0, [r0]
   1feb0:	ldr	r1, [fp, #-12]
   1feb4:	mul	r0, r0, r1
   1feb8:	uxtb	r0, r0
   1febc:	mov	r1, #0
   1fec0:	str	r1, [fp, #-20]	; 0xffffffec
   1fec4:	str	r0, [fp, #-24]	; 0xffffffe8
   1fec8:	b	21250 <__assert_fail@plt+0xfd74>
   1fecc:	b	2038c <__assert_fail@plt+0xeeb0>
   1fed0:	b	20154 <__assert_fail@plt+0xec78>
   1fed4:	ldr	r0, [fp, #-12]
   1fed8:	cmp	r0, #0
   1fedc:	bge	20040 <__assert_fail@plt+0xeb64>
   1fee0:	mov	r0, #1
   1fee4:	cmp	r0, #0
   1fee8:	bne	1ff90 <__assert_fail@plt+0xeab4>
   1feec:	b	1fef0 <__assert_fail@plt+0xea14>
   1fef0:	b	1fef4 <__assert_fail@plt+0xea18>
   1fef4:	ldr	r0, [fp, #-8]
   1fef8:	ldr	r1, [r0]
   1fefc:	ldr	r0, [r0, #4]
   1ff00:	ldr	r2, [fp, #-12]
   1ff04:	movw	r3, #32767	; 0x7fff
   1ff08:	sdiv	r2, r3, r2
   1ff0c:	subs	r1, r1, r2
   1ff10:	sbcs	r0, r0, r2, asr #31
   1ff14:	bcc	2010c <__assert_fail@plt+0xec30>
   1ff18:	b	20130 <__assert_fail@plt+0xec54>
   1ff1c:	b	1ff20 <__assert_fail@plt+0xea44>
   1ff20:	ldr	r0, [pc, #2876]	; 20a64 <__assert_fail@plt+0xf588>
   1ff24:	ldr	r1, [fp, #-12]
   1ff28:	cmp	r1, r0
   1ff2c:	blt	1ff44 <__assert_fail@plt+0xea68>
   1ff30:	b	1ff50 <__assert_fail@plt+0xea74>
   1ff34:	ldr	r0, [fp, #-12]
   1ff38:	movw	r1, #0
   1ff3c:	cmp	r1, r0
   1ff40:	bge	1ff50 <__assert_fail@plt+0xea74>
   1ff44:	movw	r0, #0
   1ff48:	str	r0, [fp, #-36]	; 0xffffffdc
   1ff4c:	b	1ff68 <__assert_fail@plt+0xea8c>
   1ff50:	ldr	r0, [fp, #-12]
   1ff54:	movw	r1, #0
   1ff58:	sub	r0, r1, r0
   1ff5c:	movw	r1, #32767	; 0x7fff
   1ff60:	sdiv	r0, r1, r0
   1ff64:	str	r0, [fp, #-36]	; 0xffffffdc
   1ff68:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1ff6c:	ldr	r1, [fp, #-8]
   1ff70:	ldr	r2, [r1]
   1ff74:	ldr	r1, [r1, #4]
   1ff78:	mvn	r1, r1
   1ff7c:	mvn	r2, r2
   1ff80:	subs	r2, r2, r0
   1ff84:	sbcs	r0, r1, r0, asr #31
   1ff88:	bcs	2010c <__assert_fail@plt+0xec30>
   1ff8c:	b	20130 <__assert_fail@plt+0xec54>
   1ff90:	b	1ff94 <__assert_fail@plt+0xeab8>
   1ff94:	b	20014 <__assert_fail@plt+0xeb38>
   1ff98:	b	20014 <__assert_fail@plt+0xeb38>
   1ff9c:	ldr	r0, [fp, #-12]
   1ffa0:	cmn	r0, #1
   1ffa4:	bne	20014 <__assert_fail@plt+0xeb38>
   1ffa8:	b	1ffcc <__assert_fail@plt+0xeaf0>
   1ffac:	ldr	r0, [fp, #-8]
   1ffb0:	ldr	r1, [r0]
   1ffb4:	ldr	r0, [r0, #4]
   1ffb8:	eor	r1, r1, #32768	; 0x8000
   1ffbc:	orr	r0, r1, r0
   1ffc0:	cmp	r0, #0
   1ffc4:	bne	2010c <__assert_fail@plt+0xec30>
   1ffc8:	b	20130 <__assert_fail@plt+0xec54>
   1ffcc:	ldr	r0, [fp, #-8]
   1ffd0:	ldr	r1, [r0]
   1ffd4:	ldr	r0, [r0, #4]
   1ffd8:	orr	r0, r1, r0
   1ffdc:	cmp	r0, #0
   1ffe0:	beq	20130 <__assert_fail@plt+0xec54>
   1ffe4:	b	1ffe8 <__assert_fail@plt+0xeb0c>
   1ffe8:	ldr	r0, [fp, #-8]
   1ffec:	ldr	r1, [r0]
   1fff0:	ldr	r0, [r0, #4]
   1fff4:	subs	r1, r1, #1
   1fff8:	sbc	r0, r0, #0
   1fffc:	lsr	r1, r1, #15
   20000:	orr	r1, r1, r0, lsl #17
   20004:	orr	r0, r1, r0, lsr #15
   20008:	cmp	r0, #0
   2000c:	bne	2010c <__assert_fail@plt+0xec30>
   20010:	b	20130 <__assert_fail@plt+0xec54>
   20014:	ldr	r0, [fp, #-12]
   20018:	movw	r1, #32768	; 0x8000
   2001c:	movt	r1, #65535	; 0xffff
   20020:	sdiv	r0, r1, r0
   20024:	ldr	r1, [fp, #-8]
   20028:	ldr	r2, [r1]
   2002c:	ldr	r1, [r1, #4]
   20030:	subs	r2, r0, r2
   20034:	rscs	r0, r1, r0, asr #31
   20038:	bcc	2010c <__assert_fail@plt+0xec30>
   2003c:	b	20130 <__assert_fail@plt+0xec54>
   20040:	ldr	r0, [fp, #-12]
   20044:	cmp	r0, #0
   20048:	bne	20050 <__assert_fail@plt+0xeb74>
   2004c:	b	20130 <__assert_fail@plt+0xec54>
   20050:	mov	r0, #1
   20054:	cmp	r0, #0
   20058:	bne	200e4 <__assert_fail@plt+0xec08>
   2005c:	b	20060 <__assert_fail@plt+0xeb84>
   20060:	ldr	r0, [fp, #-8]
   20064:	ldr	r1, [r0]
   20068:	ldr	r0, [r0, #4]
   2006c:	and	r0, r1, r0
   20070:	cmn	r0, #1
   20074:	bne	200b4 <__assert_fail@plt+0xebd8>
   20078:	b	2007c <__assert_fail@plt+0xeba0>
   2007c:	b	20080 <__assert_fail@plt+0xeba4>
   20080:	ldr	r0, [pc, #4020]	; 2103c <__assert_fail@plt+0xfb60>
   20084:	ldr	r1, [fp, #-12]
   20088:	add	r0, r1, r0
   2008c:	movw	r1, #0
   20090:	cmp	r1, r0
   20094:	blt	2010c <__assert_fail@plt+0xec30>
   20098:	b	20130 <__assert_fail@plt+0xec54>
   2009c:	ldr	r0, [fp, #-12]
   200a0:	sub	r0, r0, #1
   200a4:	movw	r1, #32767	; 0x7fff
   200a8:	cmp	r1, r0
   200ac:	blt	2010c <__assert_fail@plt+0xec30>
   200b0:	b	20130 <__assert_fail@plt+0xec54>
   200b4:	ldr	r0, [fp, #-8]
   200b8:	ldr	r2, [r0]
   200bc:	ldr	r3, [r0, #4]
   200c0:	movw	r0, #32768	; 0x8000
   200c4:	movt	r0, #65535	; 0xffff
   200c8:	mvn	r1, #0
   200cc:	bl	2413c <__assert_fail@plt+0x12c60>
   200d0:	ldr	r2, [fp, #-12]
   200d4:	subs	r0, r0, r2
   200d8:	sbcs	r1, r1, r2, asr #31
   200dc:	bcc	2010c <__assert_fail@plt+0xec30>
   200e0:	b	20130 <__assert_fail@plt+0xec54>
   200e4:	ldr	r0, [fp, #-12]
   200e8:	movw	r1, #32767	; 0x7fff
   200ec:	sdiv	r0, r1, r0
   200f0:	ldr	r1, [fp, #-8]
   200f4:	ldr	r2, [r1]
   200f8:	ldr	r1, [r1, #4]
   200fc:	subs	r2, r0, r2
   20100:	rscs	r0, r1, r0, asr #31
   20104:	bcs	20130 <__assert_fail@plt+0xec54>
   20108:	b	2010c <__assert_fail@plt+0xec30>
   2010c:	ldr	r0, [fp, #-8]
   20110:	ldr	r0, [r0]
   20114:	ldr	r1, [fp, #-12]
   20118:	mul	r0, r0, r1
   2011c:	sxth	r0, r0
   20120:	asr	r1, r0, #31
   20124:	str	r0, [fp, #-24]	; 0xffffffe8
   20128:	str	r1, [fp, #-20]	; 0xffffffec
   2012c:	b	21234 <__assert_fail@plt+0xfd58>
   20130:	ldr	r0, [fp, #-8]
   20134:	ldr	r0, [r0]
   20138:	ldr	r1, [fp, #-12]
   2013c:	mul	r0, r0, r1
   20140:	sxth	r0, r0
   20144:	asr	r1, r0, #31
   20148:	str	r0, [fp, #-24]	; 0xffffffe8
   2014c:	str	r1, [fp, #-20]	; 0xffffffec
   20150:	b	21250 <__assert_fail@plt+0xfd74>
   20154:	ldr	r0, [fp, #-12]
   20158:	cmp	r0, #0
   2015c:	bge	20290 <__assert_fail@plt+0xedb4>
   20160:	mov	r0, #1
   20164:	cmp	r0, #0
   20168:	bne	20210 <__assert_fail@plt+0xed34>
   2016c:	b	20170 <__assert_fail@plt+0xec94>
   20170:	b	20174 <__assert_fail@plt+0xec98>
   20174:	ldr	r0, [fp, #-8]
   20178:	ldr	r1, [r0]
   2017c:	ldr	r0, [r0, #4]
   20180:	ldr	r2, [fp, #-12]
   20184:	movw	r3, #65535	; 0xffff
   20188:	sdiv	r2, r3, r2
   2018c:	subs	r1, r1, r2
   20190:	sbcs	r0, r0, r2, asr #31
   20194:	bcc	20344 <__assert_fail@plt+0xee68>
   20198:	b	20368 <__assert_fail@plt+0xee8c>
   2019c:	b	201a0 <__assert_fail@plt+0xecc4>
   201a0:	ldr	r0, [pc, #2236]	; 20a64 <__assert_fail@plt+0xf588>
   201a4:	ldr	r1, [fp, #-12]
   201a8:	cmp	r1, r0
   201ac:	blt	201c4 <__assert_fail@plt+0xece8>
   201b0:	b	201d0 <__assert_fail@plt+0xecf4>
   201b4:	ldr	r0, [fp, #-12]
   201b8:	movw	r1, #0
   201bc:	cmp	r1, r0
   201c0:	bge	201d0 <__assert_fail@plt+0xecf4>
   201c4:	movw	r0, #0
   201c8:	str	r0, [fp, #-40]	; 0xffffffd8
   201cc:	b	201e8 <__assert_fail@plt+0xed0c>
   201d0:	ldr	r0, [fp, #-12]
   201d4:	movw	r1, #0
   201d8:	sub	r0, r1, r0
   201dc:	movw	r1, #65535	; 0xffff
   201e0:	sdiv	r0, r1, r0
   201e4:	str	r0, [fp, #-40]	; 0xffffffd8
   201e8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   201ec:	ldr	r1, [fp, #-8]
   201f0:	ldr	r2, [r1]
   201f4:	ldr	r1, [r1, #4]
   201f8:	mvn	r1, r1
   201fc:	mvn	r2, r2
   20200:	subs	r2, r2, r0
   20204:	sbcs	r0, r1, r0, asr #31
   20208:	bcs	20344 <__assert_fail@plt+0xee68>
   2020c:	b	20368 <__assert_fail@plt+0xee8c>
   20210:	b	20214 <__assert_fail@plt+0xed38>
   20214:	b	20274 <__assert_fail@plt+0xed98>
   20218:	b	20274 <__assert_fail@plt+0xed98>
   2021c:	ldr	r0, [fp, #-12]
   20220:	cmn	r0, #1
   20224:	bne	20274 <__assert_fail@plt+0xed98>
   20228:	b	20248 <__assert_fail@plt+0xed6c>
   2022c:	ldr	r0, [fp, #-8]
   20230:	ldr	r1, [r0]
   20234:	ldr	r0, [r0, #4]
   20238:	orr	r0, r1, r0
   2023c:	cmp	r0, #0
   20240:	bne	20344 <__assert_fail@plt+0xee68>
   20244:	b	20368 <__assert_fail@plt+0xee8c>
   20248:	ldr	r0, [fp, #-8]
   2024c:	ldr	r1, [r0]
   20250:	ldr	r0, [r0, #4]
   20254:	orr	r0, r1, r0
   20258:	cmp	r0, #0
   2025c:	beq	20368 <__assert_fail@plt+0xee8c>
   20260:	b	20264 <__assert_fail@plt+0xed88>
   20264:	mov	r0, #0
   20268:	cmp	r0, #0
   2026c:	bne	20344 <__assert_fail@plt+0xee68>
   20270:	b	20368 <__assert_fail@plt+0xee8c>
   20274:	ldr	r0, [fp, #-8]
   20278:	ldr	r1, [r0]
   2027c:	ldr	r0, [r0, #4]
   20280:	orr	r0, r1, r0
   20284:	cmp	r0, #0
   20288:	bne	20344 <__assert_fail@plt+0xee68>
   2028c:	b	20368 <__assert_fail@plt+0xee8c>
   20290:	ldr	r0, [fp, #-12]
   20294:	cmp	r0, #0
   20298:	bne	202a0 <__assert_fail@plt+0xedc4>
   2029c:	b	20368 <__assert_fail@plt+0xee8c>
   202a0:	mov	r0, #1
   202a4:	cmp	r0, #0
   202a8:	bne	2031c <__assert_fail@plt+0xee40>
   202ac:	b	202b0 <__assert_fail@plt+0xedd4>
   202b0:	b	202b8 <__assert_fail@plt+0xeddc>
   202b4:	b	202bc <__assert_fail@plt+0xede0>
   202b8:	b	2030c <__assert_fail@plt+0xee30>
   202bc:	ldr	r0, [fp, #-8]
   202c0:	ldr	r1, [r0]
   202c4:	ldr	r0, [r0, #4]
   202c8:	and	r0, r1, r0
   202cc:	cmn	r0, #1
   202d0:	bne	2030c <__assert_fail@plt+0xee30>
   202d4:	b	202d8 <__assert_fail@plt+0xedfc>
   202d8:	b	202dc <__assert_fail@plt+0xee00>
   202dc:	ldr	r0, [fp, #-12]
   202e0:	add	r0, r0, #0
   202e4:	movw	r1, #0
   202e8:	cmp	r1, r0
   202ec:	blt	20344 <__assert_fail@plt+0xee68>
   202f0:	b	20368 <__assert_fail@plt+0xee8c>
   202f4:	ldr	r0, [fp, #-12]
   202f8:	sub	r0, r0, #1
   202fc:	mvn	r1, #0
   20300:	cmp	r1, r0
   20304:	blt	20344 <__assert_fail@plt+0xee68>
   20308:	b	20368 <__assert_fail@plt+0xee8c>
   2030c:	ldr	r0, [fp, #-12]
   20310:	cmp	r0, #0
   20314:	bne	20344 <__assert_fail@plt+0xee68>
   20318:	b	20368 <__assert_fail@plt+0xee8c>
   2031c:	ldr	r0, [fp, #-12]
   20320:	movw	r1, #65535	; 0xffff
   20324:	sdiv	r0, r1, r0
   20328:	ldr	r1, [fp, #-8]
   2032c:	ldr	r2, [r1]
   20330:	ldr	r1, [r1, #4]
   20334:	subs	r2, r0, r2
   20338:	rscs	r0, r1, r0, asr #31
   2033c:	bcs	20368 <__assert_fail@plt+0xee8c>
   20340:	b	20344 <__assert_fail@plt+0xee68>
   20344:	ldr	r0, [fp, #-8]
   20348:	ldr	r0, [r0]
   2034c:	ldr	r1, [fp, #-12]
   20350:	mul	r0, r0, r1
   20354:	uxth	r0, r0
   20358:	mov	r1, #0
   2035c:	str	r1, [fp, #-20]	; 0xffffffec
   20360:	str	r0, [fp, #-24]	; 0xffffffe8
   20364:	b	21234 <__assert_fail@plt+0xfd58>
   20368:	ldr	r0, [fp, #-8]
   2036c:	ldr	r0, [r0]
   20370:	ldr	r1, [fp, #-12]
   20374:	mul	r0, r0, r1
   20378:	uxth	r0, r0
   2037c:	mov	r1, #0
   20380:	str	r1, [fp, #-20]	; 0xffffffec
   20384:	str	r0, [fp, #-24]	; 0xffffffe8
   20388:	b	21250 <__assert_fail@plt+0xfd74>
   2038c:	b	20820 <__assert_fail@plt+0xf344>
   20390:	b	205f0 <__assert_fail@plt+0xf114>
   20394:	ldr	r0, [fp, #-12]
   20398:	cmp	r0, #0
   2039c:	bge	204ec <__assert_fail@plt+0xf010>
   203a0:	mov	r0, #1
   203a4:	cmp	r0, #0
   203a8:	bne	20450 <__assert_fail@plt+0xef74>
   203ac:	b	203b0 <__assert_fail@plt+0xeed4>
   203b0:	b	203b4 <__assert_fail@plt+0xeed8>
   203b4:	ldr	r0, [fp, #-8]
   203b8:	ldr	r1, [r0]
   203bc:	ldr	r0, [r0, #4]
   203c0:	ldr	r2, [fp, #-12]
   203c4:	mvn	r3, #-2147483648	; 0x80000000
   203c8:	sdiv	r2, r3, r2
   203cc:	subs	r1, r1, r2
   203d0:	sbcs	r0, r0, r2, asr #31
   203d4:	bcc	205b0 <__assert_fail@plt+0xf0d4>
   203d8:	b	205d0 <__assert_fail@plt+0xf0f4>
   203dc:	b	203e0 <__assert_fail@plt+0xef04>
   203e0:	ldr	r0, [pc, #3728]	; 21278 <__assert_fail@plt+0xfd9c>
   203e4:	ldr	r1, [fp, #-12]
   203e8:	cmp	r1, r0
   203ec:	blt	20404 <__assert_fail@plt+0xef28>
   203f0:	b	20410 <__assert_fail@plt+0xef34>
   203f4:	ldr	r0, [fp, #-12]
   203f8:	movw	r1, #0
   203fc:	cmp	r1, r0
   20400:	bge	20410 <__assert_fail@plt+0xef34>
   20404:	movw	r0, #0
   20408:	str	r0, [fp, #-44]	; 0xffffffd4
   2040c:	b	20428 <__assert_fail@plt+0xef4c>
   20410:	ldr	r0, [pc, #3684]	; 2127c <__assert_fail@plt+0xfda0>
   20414:	ldr	r1, [fp, #-12]
   20418:	movw	r2, #0
   2041c:	sub	r1, r2, r1
   20420:	sdiv	r0, r0, r1
   20424:	str	r0, [fp, #-44]	; 0xffffffd4
   20428:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2042c:	ldr	r1, [fp, #-8]
   20430:	ldr	r2, [r1]
   20434:	ldr	r1, [r1, #4]
   20438:	mvn	r1, r1
   2043c:	mvn	r2, r2
   20440:	subs	r2, r2, r0
   20444:	sbcs	r0, r1, r0, asr #31
   20448:	bcs	205b0 <__assert_fail@plt+0xf0d4>
   2044c:	b	205d0 <__assert_fail@plt+0xf0f4>
   20450:	ldr	r0, [fp, #-12]
   20454:	cmn	r0, #1
   20458:	bne	204c4 <__assert_fail@plt+0xefe8>
   2045c:	b	20480 <__assert_fail@plt+0xefa4>
   20460:	ldr	r0, [fp, #-8]
   20464:	ldr	r1, [r0]
   20468:	ldr	r0, [r0, #4]
   2046c:	eor	r1, r1, #-2147483648	; 0x80000000
   20470:	orr	r0, r1, r0
   20474:	cmp	r0, #0
   20478:	bne	205b0 <__assert_fail@plt+0xf0d4>
   2047c:	b	205d0 <__assert_fail@plt+0xf0f4>
   20480:	ldr	r0, [fp, #-8]
   20484:	ldr	r1, [r0]
   20488:	ldr	r0, [r0, #4]
   2048c:	orr	r0, r1, r0
   20490:	cmp	r0, #0
   20494:	beq	205d0 <__assert_fail@plt+0xf0f4>
   20498:	b	2049c <__assert_fail@plt+0xefc0>
   2049c:	ldr	r0, [fp, #-8]
   204a0:	ldr	r1, [r0]
   204a4:	ldr	r0, [r0, #4]
   204a8:	subs	r1, r1, #1
   204ac:	sbc	r0, r0, #0
   204b0:	mvn	r2, #-2147483648	; 0x80000000
   204b4:	subs	r1, r2, r1
   204b8:	rscs	r0, r0, #0
   204bc:	bcc	205b0 <__assert_fail@plt+0xf0d4>
   204c0:	b	205d0 <__assert_fail@plt+0xf0f4>
   204c4:	ldr	r0, [fp, #-12]
   204c8:	mov	r1, #-2147483648	; 0x80000000
   204cc:	sdiv	r0, r1, r0
   204d0:	ldr	r1, [fp, #-8]
   204d4:	ldr	r2, [r1]
   204d8:	ldr	r1, [r1, #4]
   204dc:	subs	r2, r0, r2
   204e0:	rscs	r0, r1, r0, asr #31
   204e4:	bcc	205b0 <__assert_fail@plt+0xf0d4>
   204e8:	b	205d0 <__assert_fail@plt+0xf0f4>
   204ec:	ldr	r0, [fp, #-12]
   204f0:	cmp	r0, #0
   204f4:	bne	204fc <__assert_fail@plt+0xf020>
   204f8:	b	205d0 <__assert_fail@plt+0xf0f4>
   204fc:	mov	r0, #1
   20500:	cmp	r0, #0
   20504:	bne	20588 <__assert_fail@plt+0xf0ac>
   20508:	b	2050c <__assert_fail@plt+0xf030>
   2050c:	ldr	r0, [fp, #-8]
   20510:	ldr	r1, [r0]
   20514:	ldr	r0, [r0, #4]
   20518:	and	r0, r1, r0
   2051c:	cmn	r0, #1
   20520:	bne	2055c <__assert_fail@plt+0xf080>
   20524:	b	20528 <__assert_fail@plt+0xf04c>
   20528:	b	2052c <__assert_fail@plt+0xf050>
   2052c:	ldr	r0, [fp, #-12]
   20530:	add	r0, r0, #-2147483648	; 0x80000000
   20534:	movw	r1, #0
   20538:	cmp	r1, r0
   2053c:	blt	205b0 <__assert_fail@plt+0xf0d4>
   20540:	b	205d0 <__assert_fail@plt+0xf0f4>
   20544:	ldr	r0, [pc, #3376]	; 2127c <__assert_fail@plt+0xfda0>
   20548:	ldr	r1, [fp, #-12]
   2054c:	sub	r1, r1, #1
   20550:	cmp	r0, r1
   20554:	blt	205b0 <__assert_fail@plt+0xf0d4>
   20558:	b	205d0 <__assert_fail@plt+0xf0f4>
   2055c:	ldr	r0, [fp, #-8]
   20560:	ldr	r2, [r0]
   20564:	ldr	r3, [r0, #4]
   20568:	mov	r0, #-2147483648	; 0x80000000
   2056c:	mvn	r1, #0
   20570:	bl	2413c <__assert_fail@plt+0x12c60>
   20574:	ldr	r2, [fp, #-12]
   20578:	subs	r0, r0, r2
   2057c:	sbcs	r1, r1, r2, asr #31
   20580:	bcc	205b0 <__assert_fail@plt+0xf0d4>
   20584:	b	205d0 <__assert_fail@plt+0xf0f4>
   20588:	ldr	r0, [fp, #-12]
   2058c:	mvn	r1, #-2147483648	; 0x80000000
   20590:	sdiv	r0, r1, r0
   20594:	ldr	r1, [fp, #-8]
   20598:	ldr	r2, [r1]
   2059c:	ldr	r1, [r1, #4]
   205a0:	subs	r2, r0, r2
   205a4:	rscs	r0, r1, r0, asr #31
   205a8:	bcs	205d0 <__assert_fail@plt+0xf0f4>
   205ac:	b	205b0 <__assert_fail@plt+0xf0d4>
   205b0:	ldr	r0, [fp, #-8]
   205b4:	ldr	r0, [r0]
   205b8:	ldr	r1, [fp, #-12]
   205bc:	mul	r0, r0, r1
   205c0:	asr	r1, r0, #31
   205c4:	str	r0, [fp, #-24]	; 0xffffffe8
   205c8:	str	r1, [fp, #-20]	; 0xffffffec
   205cc:	b	21234 <__assert_fail@plt+0xfd58>
   205d0:	ldr	r0, [fp, #-8]
   205d4:	ldr	r0, [r0]
   205d8:	ldr	r1, [fp, #-12]
   205dc:	mul	r0, r0, r1
   205e0:	asr	r1, r0, #31
   205e4:	str	r0, [fp, #-24]	; 0xffffffe8
   205e8:	str	r1, [fp, #-20]	; 0xffffffec
   205ec:	b	21250 <__assert_fail@plt+0xfd74>
   205f0:	ldr	r0, [fp, #-12]
   205f4:	cmp	r0, #0
   205f8:	bge	2072c <__assert_fail@plt+0xf250>
   205fc:	mov	r0, #1
   20600:	cmp	r0, #0
   20604:	bne	206ac <__assert_fail@plt+0xf1d0>
   20608:	b	2060c <__assert_fail@plt+0xf130>
   2060c:	b	20638 <__assert_fail@plt+0xf15c>
   20610:	ldr	r0, [fp, #-8]
   20614:	ldr	r1, [r0]
   20618:	ldr	r0, [r0, #4]
   2061c:	ldr	r2, [fp, #-12]
   20620:	mvn	r3, #0
   20624:	udiv	r2, r3, r2
   20628:	subs	r1, r1, r2
   2062c:	sbcs	r0, r0, #0
   20630:	bcc	207e0 <__assert_fail@plt+0xf304>
   20634:	b	20800 <__assert_fail@plt+0xf324>
   20638:	b	2063c <__assert_fail@plt+0xf160>
   2063c:	ldr	r0, [pc, #3124]	; 21278 <__assert_fail@plt+0xfd9c>
   20640:	ldr	r1, [fp, #-12]
   20644:	cmp	r1, r0
   20648:	blt	20660 <__assert_fail@plt+0xf184>
   2064c:	b	2066c <__assert_fail@plt+0xf190>
   20650:	ldr	r0, [fp, #-12]
   20654:	movw	r1, #0
   20658:	cmp	r1, r0
   2065c:	bge	2066c <__assert_fail@plt+0xf190>
   20660:	movw	r0, #1
   20664:	str	r0, [fp, #-48]	; 0xffffffd0
   20668:	b	20684 <__assert_fail@plt+0xf1a8>
   2066c:	ldr	r0, [fp, #-12]
   20670:	movw	r1, #0
   20674:	sub	r0, r1, r0
   20678:	mvn	r1, #0
   2067c:	udiv	r0, r1, r0
   20680:	str	r0, [fp, #-48]	; 0xffffffd0
   20684:	ldr	r0, [fp, #-48]	; 0xffffffd0
   20688:	ldr	r1, [fp, #-8]
   2068c:	ldr	r2, [r1]
   20690:	ldr	r1, [r1, #4]
   20694:	mvn	r1, r1
   20698:	mvn	r2, r2
   2069c:	subs	r0, r2, r0
   206a0:	sbcs	r1, r1, #0
   206a4:	bcs	207e0 <__assert_fail@plt+0xf304>
   206a8:	b	20800 <__assert_fail@plt+0xf324>
   206ac:	b	206b0 <__assert_fail@plt+0xf1d4>
   206b0:	b	20710 <__assert_fail@plt+0xf234>
   206b4:	b	20710 <__assert_fail@plt+0xf234>
   206b8:	ldr	r0, [fp, #-12]
   206bc:	cmn	r0, #1
   206c0:	bne	20710 <__assert_fail@plt+0xf234>
   206c4:	b	206e4 <__assert_fail@plt+0xf208>
   206c8:	ldr	r0, [fp, #-8]
   206cc:	ldr	r1, [r0]
   206d0:	ldr	r0, [r0, #4]
   206d4:	orr	r0, r1, r0
   206d8:	cmp	r0, #0
   206dc:	bne	207e0 <__assert_fail@plt+0xf304>
   206e0:	b	20800 <__assert_fail@plt+0xf324>
   206e4:	ldr	r0, [fp, #-8]
   206e8:	ldr	r1, [r0]
   206ec:	ldr	r0, [r0, #4]
   206f0:	orr	r0, r1, r0
   206f4:	cmp	r0, #0
   206f8:	beq	20800 <__assert_fail@plt+0xf324>
   206fc:	b	20700 <__assert_fail@plt+0xf224>
   20700:	mov	r0, #0
   20704:	cmp	r0, #0
   20708:	bne	207e0 <__assert_fail@plt+0xf304>
   2070c:	b	20800 <__assert_fail@plt+0xf324>
   20710:	ldr	r0, [fp, #-8]
   20714:	ldr	r1, [r0]
   20718:	ldr	r0, [r0, #4]
   2071c:	orr	r0, r1, r0
   20720:	cmp	r0, #0
   20724:	bne	207e0 <__assert_fail@plt+0xf304>
   20728:	b	20800 <__assert_fail@plt+0xf324>
   2072c:	ldr	r0, [fp, #-12]
   20730:	cmp	r0, #0
   20734:	bne	2073c <__assert_fail@plt+0xf260>
   20738:	b	20800 <__assert_fail@plt+0xf324>
   2073c:	mov	r0, #1
   20740:	cmp	r0, #0
   20744:	bne	207b8 <__assert_fail@plt+0xf2dc>
   20748:	b	2074c <__assert_fail@plt+0xf270>
   2074c:	b	20754 <__assert_fail@plt+0xf278>
   20750:	b	20758 <__assert_fail@plt+0xf27c>
   20754:	b	207a8 <__assert_fail@plt+0xf2cc>
   20758:	ldr	r0, [fp, #-8]
   2075c:	ldr	r1, [r0]
   20760:	ldr	r0, [r0, #4]
   20764:	and	r0, r1, r0
   20768:	cmn	r0, #1
   2076c:	bne	207a8 <__assert_fail@plt+0xf2cc>
   20770:	b	20774 <__assert_fail@plt+0xf298>
   20774:	b	20778 <__assert_fail@plt+0xf29c>
   20778:	ldr	r0, [fp, #-12]
   2077c:	add	r0, r0, #0
   20780:	movw	r1, #0
   20784:	cmp	r1, r0
   20788:	blt	207e0 <__assert_fail@plt+0xf304>
   2078c:	b	20800 <__assert_fail@plt+0xf324>
   20790:	ldr	r0, [fp, #-12]
   20794:	sub	r0, r0, #1
   20798:	mvn	r1, #0
   2079c:	cmp	r1, r0
   207a0:	blt	207e0 <__assert_fail@plt+0xf304>
   207a4:	b	20800 <__assert_fail@plt+0xf324>
   207a8:	ldr	r0, [fp, #-12]
   207ac:	cmp	r0, #0
   207b0:	bne	207e0 <__assert_fail@plt+0xf304>
   207b4:	b	20800 <__assert_fail@plt+0xf324>
   207b8:	ldr	r0, [fp, #-12]
   207bc:	mvn	r1, #0
   207c0:	udiv	r0, r1, r0
   207c4:	ldr	r1, [fp, #-8]
   207c8:	ldr	r2, [r1]
   207cc:	ldr	r1, [r1, #4]
   207d0:	subs	r0, r0, r2
   207d4:	rscs	r1, r1, #0
   207d8:	bcs	20800 <__assert_fail@plt+0xf324>
   207dc:	b	207e0 <__assert_fail@plt+0xf304>
   207e0:	ldr	r0, [fp, #-8]
   207e4:	ldr	r0, [r0]
   207e8:	ldr	r1, [fp, #-12]
   207ec:	mul	r0, r0, r1
   207f0:	mov	r1, #0
   207f4:	str	r1, [fp, #-20]	; 0xffffffec
   207f8:	str	r0, [fp, #-24]	; 0xffffffe8
   207fc:	b	21234 <__assert_fail@plt+0xfd58>
   20800:	ldr	r0, [fp, #-8]
   20804:	ldr	r0, [r0]
   20808:	ldr	r1, [fp, #-12]
   2080c:	mul	r0, r0, r1
   20810:	mov	r1, #0
   20814:	str	r1, [fp, #-20]	; 0xffffffec
   20818:	str	r0, [fp, #-24]	; 0xffffffe8
   2081c:	b	21250 <__assert_fail@plt+0xfd74>
   20820:	b	20cb8 <__assert_fail@plt+0xf7dc>
   20824:	b	20a88 <__assert_fail@plt+0xf5ac>
   20828:	ldr	r0, [fp, #-12]
   2082c:	cmp	r0, #0
   20830:	bge	20980 <__assert_fail@plt+0xf4a4>
   20834:	mov	r0, #1
   20838:	cmp	r0, #0
   2083c:	bne	208e4 <__assert_fail@plt+0xf408>
   20840:	b	20844 <__assert_fail@plt+0xf368>
   20844:	b	20848 <__assert_fail@plt+0xf36c>
   20848:	ldr	r0, [fp, #-8]
   2084c:	ldr	r1, [r0]
   20850:	ldr	r0, [r0, #4]
   20854:	ldr	r2, [fp, #-12]
   20858:	mvn	r3, #-2147483648	; 0x80000000
   2085c:	sdiv	r2, r3, r2
   20860:	subs	r1, r1, r2
   20864:	sbcs	r0, r0, r2, asr #31
   20868:	bcc	20a44 <__assert_fail@plt+0xf568>
   2086c:	b	20a68 <__assert_fail@plt+0xf58c>
   20870:	b	20874 <__assert_fail@plt+0xf398>
   20874:	ldr	r0, [pc, #2556]	; 21278 <__assert_fail@plt+0xfd9c>
   20878:	ldr	r1, [fp, #-12]
   2087c:	cmp	r1, r0
   20880:	blt	20898 <__assert_fail@plt+0xf3bc>
   20884:	b	208a4 <__assert_fail@plt+0xf3c8>
   20888:	ldr	r0, [fp, #-12]
   2088c:	movw	r1, #0
   20890:	cmp	r1, r0
   20894:	bge	208a4 <__assert_fail@plt+0xf3c8>
   20898:	movw	r0, #0
   2089c:	str	r0, [fp, #-52]	; 0xffffffcc
   208a0:	b	208bc <__assert_fail@plt+0xf3e0>
   208a4:	ldr	r0, [pc, #2512]	; 2127c <__assert_fail@plt+0xfda0>
   208a8:	ldr	r1, [fp, #-12]
   208ac:	movw	r2, #0
   208b0:	sub	r1, r2, r1
   208b4:	sdiv	r0, r0, r1
   208b8:	str	r0, [fp, #-52]	; 0xffffffcc
   208bc:	ldr	r0, [fp, #-52]	; 0xffffffcc
   208c0:	ldr	r1, [fp, #-8]
   208c4:	ldr	r2, [r1]
   208c8:	ldr	r1, [r1, #4]
   208cc:	mvn	r1, r1
   208d0:	mvn	r2, r2
   208d4:	subs	r2, r2, r0
   208d8:	sbcs	r0, r1, r0, asr #31
   208dc:	bcs	20a44 <__assert_fail@plt+0xf568>
   208e0:	b	20a68 <__assert_fail@plt+0xf58c>
   208e4:	ldr	r0, [fp, #-12]
   208e8:	cmn	r0, #1
   208ec:	bne	20958 <__assert_fail@plt+0xf47c>
   208f0:	b	20914 <__assert_fail@plt+0xf438>
   208f4:	ldr	r0, [fp, #-8]
   208f8:	ldr	r1, [r0]
   208fc:	ldr	r0, [r0, #4]
   20900:	eor	r1, r1, #-2147483648	; 0x80000000
   20904:	orr	r0, r1, r0
   20908:	cmp	r0, #0
   2090c:	bne	20a44 <__assert_fail@plt+0xf568>
   20910:	b	20a68 <__assert_fail@plt+0xf58c>
   20914:	ldr	r0, [fp, #-8]
   20918:	ldr	r1, [r0]
   2091c:	ldr	r0, [r0, #4]
   20920:	orr	r0, r1, r0
   20924:	cmp	r0, #0
   20928:	beq	20a68 <__assert_fail@plt+0xf58c>
   2092c:	b	20930 <__assert_fail@plt+0xf454>
   20930:	ldr	r0, [fp, #-8]
   20934:	ldr	r1, [r0]
   20938:	ldr	r0, [r0, #4]
   2093c:	subs	r1, r1, #1
   20940:	sbc	r0, r0, #0
   20944:	mvn	r2, #-2147483648	; 0x80000000
   20948:	subs	r1, r2, r1
   2094c:	rscs	r0, r0, #0
   20950:	bcc	20a44 <__assert_fail@plt+0xf568>
   20954:	b	20a68 <__assert_fail@plt+0xf58c>
   20958:	ldr	r0, [fp, #-12]
   2095c:	mov	r1, #-2147483648	; 0x80000000
   20960:	sdiv	r0, r1, r0
   20964:	ldr	r1, [fp, #-8]
   20968:	ldr	r2, [r1]
   2096c:	ldr	r1, [r1, #4]
   20970:	subs	r2, r0, r2
   20974:	rscs	r0, r1, r0, asr #31
   20978:	bcc	20a44 <__assert_fail@plt+0xf568>
   2097c:	b	20a68 <__assert_fail@plt+0xf58c>
   20980:	ldr	r0, [fp, #-12]
   20984:	cmp	r0, #0
   20988:	bne	20990 <__assert_fail@plt+0xf4b4>
   2098c:	b	20a68 <__assert_fail@plt+0xf58c>
   20990:	mov	r0, #1
   20994:	cmp	r0, #0
   20998:	bne	20a1c <__assert_fail@plt+0xf540>
   2099c:	b	209a0 <__assert_fail@plt+0xf4c4>
   209a0:	ldr	r0, [fp, #-8]
   209a4:	ldr	r1, [r0]
   209a8:	ldr	r0, [r0, #4]
   209ac:	and	r0, r1, r0
   209b0:	cmn	r0, #1
   209b4:	bne	209f0 <__assert_fail@plt+0xf514>
   209b8:	b	209bc <__assert_fail@plt+0xf4e0>
   209bc:	b	209c0 <__assert_fail@plt+0xf4e4>
   209c0:	ldr	r0, [fp, #-12]
   209c4:	add	r0, r0, #-2147483648	; 0x80000000
   209c8:	movw	r1, #0
   209cc:	cmp	r1, r0
   209d0:	blt	20a44 <__assert_fail@plt+0xf568>
   209d4:	b	20a68 <__assert_fail@plt+0xf58c>
   209d8:	ldr	r0, [pc, #2204]	; 2127c <__assert_fail@plt+0xfda0>
   209dc:	ldr	r1, [fp, #-12]
   209e0:	sub	r1, r1, #1
   209e4:	cmp	r0, r1
   209e8:	blt	20a44 <__assert_fail@plt+0xf568>
   209ec:	b	20a68 <__assert_fail@plt+0xf58c>
   209f0:	ldr	r0, [fp, #-8]
   209f4:	ldr	r2, [r0]
   209f8:	ldr	r3, [r0, #4]
   209fc:	mov	r0, #-2147483648	; 0x80000000
   20a00:	mvn	r1, #0
   20a04:	bl	2413c <__assert_fail@plt+0x12c60>
   20a08:	ldr	r2, [fp, #-12]
   20a0c:	subs	r0, r0, r2
   20a10:	sbcs	r1, r1, r2, asr #31
   20a14:	bcc	20a44 <__assert_fail@plt+0xf568>
   20a18:	b	20a68 <__assert_fail@plt+0xf58c>
   20a1c:	ldr	r0, [fp, #-12]
   20a20:	mvn	r1, #-2147483648	; 0x80000000
   20a24:	sdiv	r0, r1, r0
   20a28:	ldr	r1, [fp, #-8]
   20a2c:	ldr	r2, [r1]
   20a30:	ldr	r1, [r1, #4]
   20a34:	subs	r2, r0, r2
   20a38:	rscs	r0, r1, r0, asr #31
   20a3c:	bcs	20a68 <__assert_fail@plt+0xf58c>
   20a40:	b	20a44 <__assert_fail@plt+0xf568>
   20a44:	ldr	r0, [fp, #-8]
   20a48:	ldr	r0, [r0]
   20a4c:	ldr	r1, [fp, #-12]
   20a50:	mul	r0, r0, r1
   20a54:	asr	r1, r0, #31
   20a58:	str	r0, [fp, #-24]	; 0xffffffe8
   20a5c:	str	r1, [fp, #-20]	; 0xffffffec
   20a60:	b	21234 <__assert_fail@plt+0xfd58>
   20a64:	andhi	r0, r0, r1
   20a68:	ldr	r0, [fp, #-8]
   20a6c:	ldr	r0, [r0]
   20a70:	ldr	r1, [fp, #-12]
   20a74:	mul	r0, r0, r1
   20a78:	asr	r1, r0, #31
   20a7c:	str	r0, [fp, #-24]	; 0xffffffe8
   20a80:	str	r1, [fp, #-20]	; 0xffffffec
   20a84:	b	21250 <__assert_fail@plt+0xfd74>
   20a88:	ldr	r0, [fp, #-12]
   20a8c:	cmp	r0, #0
   20a90:	bge	20bc4 <__assert_fail@plt+0xf6e8>
   20a94:	mov	r0, #1
   20a98:	cmp	r0, #0
   20a9c:	bne	20b44 <__assert_fail@plt+0xf668>
   20aa0:	b	20aa4 <__assert_fail@plt+0xf5c8>
   20aa4:	b	20ad0 <__assert_fail@plt+0xf5f4>
   20aa8:	ldr	r0, [fp, #-8]
   20aac:	ldr	r1, [r0]
   20ab0:	ldr	r0, [r0, #4]
   20ab4:	ldr	r2, [fp, #-12]
   20ab8:	mvn	r3, #0
   20abc:	udiv	r2, r3, r2
   20ac0:	subs	r1, r1, r2
   20ac4:	sbcs	r0, r0, #0
   20ac8:	bcc	20c78 <__assert_fail@plt+0xf79c>
   20acc:	b	20c98 <__assert_fail@plt+0xf7bc>
   20ad0:	b	20ad4 <__assert_fail@plt+0xf5f8>
   20ad4:	ldr	r0, [pc, #1948]	; 21278 <__assert_fail@plt+0xfd9c>
   20ad8:	ldr	r1, [fp, #-12]
   20adc:	cmp	r1, r0
   20ae0:	blt	20af8 <__assert_fail@plt+0xf61c>
   20ae4:	b	20b04 <__assert_fail@plt+0xf628>
   20ae8:	ldr	r0, [fp, #-12]
   20aec:	movw	r1, #0
   20af0:	cmp	r1, r0
   20af4:	bge	20b04 <__assert_fail@plt+0xf628>
   20af8:	movw	r0, #1
   20afc:	str	r0, [sp, #56]	; 0x38
   20b00:	b	20b1c <__assert_fail@plt+0xf640>
   20b04:	ldr	r0, [fp, #-12]
   20b08:	movw	r1, #0
   20b0c:	sub	r0, r1, r0
   20b10:	mvn	r1, #0
   20b14:	udiv	r0, r1, r0
   20b18:	str	r0, [sp, #56]	; 0x38
   20b1c:	ldr	r0, [sp, #56]	; 0x38
   20b20:	ldr	r1, [fp, #-8]
   20b24:	ldr	r2, [r1]
   20b28:	ldr	r1, [r1, #4]
   20b2c:	mvn	r1, r1
   20b30:	mvn	r2, r2
   20b34:	subs	r0, r2, r0
   20b38:	sbcs	r1, r1, #0
   20b3c:	bcs	20c78 <__assert_fail@plt+0xf79c>
   20b40:	b	20c98 <__assert_fail@plt+0xf7bc>
   20b44:	b	20b48 <__assert_fail@plt+0xf66c>
   20b48:	b	20ba8 <__assert_fail@plt+0xf6cc>
   20b4c:	b	20ba8 <__assert_fail@plt+0xf6cc>
   20b50:	ldr	r0, [fp, #-12]
   20b54:	cmn	r0, #1
   20b58:	bne	20ba8 <__assert_fail@plt+0xf6cc>
   20b5c:	b	20b7c <__assert_fail@plt+0xf6a0>
   20b60:	ldr	r0, [fp, #-8]
   20b64:	ldr	r1, [r0]
   20b68:	ldr	r0, [r0, #4]
   20b6c:	orr	r0, r1, r0
   20b70:	cmp	r0, #0
   20b74:	bne	20c78 <__assert_fail@plt+0xf79c>
   20b78:	b	20c98 <__assert_fail@plt+0xf7bc>
   20b7c:	ldr	r0, [fp, #-8]
   20b80:	ldr	r1, [r0]
   20b84:	ldr	r0, [r0, #4]
   20b88:	orr	r0, r1, r0
   20b8c:	cmp	r0, #0
   20b90:	beq	20c98 <__assert_fail@plt+0xf7bc>
   20b94:	b	20b98 <__assert_fail@plt+0xf6bc>
   20b98:	mov	r0, #0
   20b9c:	cmp	r0, #0
   20ba0:	bne	20c78 <__assert_fail@plt+0xf79c>
   20ba4:	b	20c98 <__assert_fail@plt+0xf7bc>
   20ba8:	ldr	r0, [fp, #-8]
   20bac:	ldr	r1, [r0]
   20bb0:	ldr	r0, [r0, #4]
   20bb4:	orr	r0, r1, r0
   20bb8:	cmp	r0, #0
   20bbc:	bne	20c78 <__assert_fail@plt+0xf79c>
   20bc0:	b	20c98 <__assert_fail@plt+0xf7bc>
   20bc4:	ldr	r0, [fp, #-12]
   20bc8:	cmp	r0, #0
   20bcc:	bne	20bd4 <__assert_fail@plt+0xf6f8>
   20bd0:	b	20c98 <__assert_fail@plt+0xf7bc>
   20bd4:	mov	r0, #1
   20bd8:	cmp	r0, #0
   20bdc:	bne	20c50 <__assert_fail@plt+0xf774>
   20be0:	b	20be4 <__assert_fail@plt+0xf708>
   20be4:	b	20bec <__assert_fail@plt+0xf710>
   20be8:	b	20bf0 <__assert_fail@plt+0xf714>
   20bec:	b	20c40 <__assert_fail@plt+0xf764>
   20bf0:	ldr	r0, [fp, #-8]
   20bf4:	ldr	r1, [r0]
   20bf8:	ldr	r0, [r0, #4]
   20bfc:	and	r0, r1, r0
   20c00:	cmn	r0, #1
   20c04:	bne	20c40 <__assert_fail@plt+0xf764>
   20c08:	b	20c0c <__assert_fail@plt+0xf730>
   20c0c:	b	20c10 <__assert_fail@plt+0xf734>
   20c10:	ldr	r0, [fp, #-12]
   20c14:	add	r0, r0, #0
   20c18:	movw	r1, #0
   20c1c:	cmp	r1, r0
   20c20:	blt	20c78 <__assert_fail@plt+0xf79c>
   20c24:	b	20c98 <__assert_fail@plt+0xf7bc>
   20c28:	ldr	r0, [fp, #-12]
   20c2c:	sub	r0, r0, #1
   20c30:	mvn	r1, #0
   20c34:	cmp	r1, r0
   20c38:	blt	20c78 <__assert_fail@plt+0xf79c>
   20c3c:	b	20c98 <__assert_fail@plt+0xf7bc>
   20c40:	ldr	r0, [fp, #-12]
   20c44:	cmp	r0, #0
   20c48:	bne	20c78 <__assert_fail@plt+0xf79c>
   20c4c:	b	20c98 <__assert_fail@plt+0xf7bc>
   20c50:	ldr	r0, [fp, #-12]
   20c54:	mvn	r1, #0
   20c58:	udiv	r0, r1, r0
   20c5c:	ldr	r1, [fp, #-8]
   20c60:	ldr	r2, [r1]
   20c64:	ldr	r1, [r1, #4]
   20c68:	subs	r0, r0, r2
   20c6c:	rscs	r1, r1, #0
   20c70:	bcs	20c98 <__assert_fail@plt+0xf7bc>
   20c74:	b	20c78 <__assert_fail@plt+0xf79c>
   20c78:	ldr	r0, [fp, #-8]
   20c7c:	ldr	r0, [r0]
   20c80:	ldr	r1, [fp, #-12]
   20c84:	mul	r0, r0, r1
   20c88:	mov	r1, #0
   20c8c:	str	r1, [fp, #-20]	; 0xffffffec
   20c90:	str	r0, [fp, #-24]	; 0xffffffe8
   20c94:	b	21234 <__assert_fail@plt+0xfd58>
   20c98:	ldr	r0, [fp, #-8]
   20c9c:	ldr	r0, [r0]
   20ca0:	ldr	r1, [fp, #-12]
   20ca4:	mul	r0, r0, r1
   20ca8:	mov	r1, #0
   20cac:	str	r1, [fp, #-20]	; 0xffffffec
   20cb0:	str	r0, [fp, #-24]	; 0xffffffe8
   20cb4:	b	21250 <__assert_fail@plt+0xfd74>
   20cb8:	b	20f9c <__assert_fail@plt+0xfac0>
   20cbc:	ldr	r0, [fp, #-12]
   20cc0:	cmp	r0, #0
   20cc4:	bge	20e6c <__assert_fail@plt+0xf990>
   20cc8:	mov	r0, #1
   20ccc:	cmp	r0, #0
   20cd0:	bne	20dc0 <__assert_fail@plt+0xf8e4>
   20cd4:	b	20cd8 <__assert_fail@plt+0xf7fc>
   20cd8:	b	20cdc <__assert_fail@plt+0xf800>
   20cdc:	ldr	r0, [fp, #-8]
   20ce0:	ldr	r1, [r0]
   20ce4:	ldr	r0, [r0, #4]
   20ce8:	ldr	r2, [fp, #-12]
   20cec:	asr	r3, r2, #31
   20cf0:	mvn	ip, #0
   20cf4:	mvn	lr, #-2147483648	; 0x80000000
   20cf8:	str	r0, [sp, #52]	; 0x34
   20cfc:	mov	r0, ip
   20d00:	str	r1, [sp, #48]	; 0x30
   20d04:	mov	r1, lr
   20d08:	bl	24068 <__assert_fail@plt+0x12b8c>
   20d0c:	ldr	r2, [sp, #48]	; 0x30
   20d10:	subs	r0, r2, r0
   20d14:	ldr	r2, [sp, #52]	; 0x34
   20d18:	sbcs	r1, r2, r1
   20d1c:	bcc	20f44 <__assert_fail@plt+0xfa68>
   20d20:	b	20f70 <__assert_fail@plt+0xfa94>
   20d24:	b	20d28 <__assert_fail@plt+0xf84c>
   20d28:	ldr	r0, [pc, #1352]	; 21278 <__assert_fail@plt+0xfd9c>
   20d2c:	ldr	r1, [fp, #-12]
   20d30:	cmp	r1, r0
   20d34:	blt	20d4c <__assert_fail@plt+0xf870>
   20d38:	b	20d60 <__assert_fail@plt+0xf884>
   20d3c:	ldr	r0, [fp, #-12]
   20d40:	movw	r1, #0
   20d44:	cmp	r1, r0
   20d48:	bge	20d60 <__assert_fail@plt+0xf884>
   20d4c:	mov	r0, #0
   20d50:	mvn	r1, #0
   20d54:	str	r1, [sp, #44]	; 0x2c
   20d58:	str	r0, [sp, #40]	; 0x28
   20d5c:	b	20d94 <__assert_fail@plt+0xf8b8>
   20d60:	ldr	r0, [fp, #-12]
   20d64:	rsb	r0, r0, #0
   20d68:	asr	r3, r0, #31
   20d6c:	mvn	r1, #0
   20d70:	mvn	r2, #-2147483648	; 0x80000000
   20d74:	str	r0, [sp, #36]	; 0x24
   20d78:	mov	r0, r1
   20d7c:	mov	r1, r2
   20d80:	ldr	r2, [sp, #36]	; 0x24
   20d84:	bl	24068 <__assert_fail@plt+0x12b8c>
   20d88:	str	r0, [sp, #44]	; 0x2c
   20d8c:	str	r1, [sp, #40]	; 0x28
   20d90:	b	20d94 <__assert_fail@plt+0xf8b8>
   20d94:	ldr	r0, [sp, #40]	; 0x28
   20d98:	ldr	r1, [sp, #44]	; 0x2c
   20d9c:	ldr	r2, [fp, #-8]
   20da0:	ldr	r3, [r2]
   20da4:	ldr	r2, [r2, #4]
   20da8:	mvn	r2, r2
   20dac:	mvn	r3, r3
   20db0:	subs	r1, r3, r1
   20db4:	sbcs	r0, r2, r0
   20db8:	bcs	20f44 <__assert_fail@plt+0xfa68>
   20dbc:	b	20f70 <__assert_fail@plt+0xfa94>
   20dc0:	ldr	r0, [fp, #-12]
   20dc4:	cmn	r0, #1
   20dc8:	bne	20e2c <__assert_fail@plt+0xf950>
   20dcc:	b	20df0 <__assert_fail@plt+0xf914>
   20dd0:	ldr	r0, [fp, #-8]
   20dd4:	ldr	r1, [r0]
   20dd8:	ldr	r0, [r0, #4]
   20ddc:	eor	r0, r0, #-2147483648	; 0x80000000
   20de0:	orr	r0, r1, r0
   20de4:	cmp	r0, #0
   20de8:	bne	20f44 <__assert_fail@plt+0xfa68>
   20dec:	b	20f70 <__assert_fail@plt+0xfa94>
   20df0:	ldr	r0, [fp, #-8]
   20df4:	ldr	r1, [r0]
   20df8:	ldr	r0, [r0, #4]
   20dfc:	orr	r0, r1, r0
   20e00:	cmp	r0, #0
   20e04:	beq	20f70 <__assert_fail@plt+0xfa94>
   20e08:	b	20e0c <__assert_fail@plt+0xf930>
   20e0c:	ldr	r0, [fp, #-8]
   20e10:	ldr	r1, [r0]
   20e14:	ldr	r0, [r0, #4]
   20e18:	subs	r1, r1, #1
   20e1c:	sbc	r0, r0, #0
   20e20:	cmp	r0, #0
   20e24:	bmi	20f44 <__assert_fail@plt+0xfa68>
   20e28:	b	20f70 <__assert_fail@plt+0xfa94>
   20e2c:	ldr	r0, [fp, #-12]
   20e30:	asr	r3, r0, #31
   20e34:	mov	r1, #0
   20e38:	mov	r2, #-2147483648	; 0x80000000
   20e3c:	str	r0, [sp, #32]
   20e40:	mov	r0, r1
   20e44:	mov	r1, r2
   20e48:	ldr	r2, [sp, #32]
   20e4c:	bl	24068 <__assert_fail@plt+0x12b8c>
   20e50:	ldr	r2, [fp, #-8]
   20e54:	ldr	r3, [r2]
   20e58:	ldr	r2, [r2, #4]
   20e5c:	subs	r0, r0, r3
   20e60:	sbcs	r1, r1, r2
   20e64:	bcc	20f44 <__assert_fail@plt+0xfa68>
   20e68:	b	20f70 <__assert_fail@plt+0xfa94>
   20e6c:	ldr	r0, [fp, #-12]
   20e70:	cmp	r0, #0
   20e74:	bne	20e7c <__assert_fail@plt+0xf9a0>
   20e78:	b	20f70 <__assert_fail@plt+0xfa94>
   20e7c:	mov	r0, #1
   20e80:	cmp	r0, #0
   20e84:	bne	20f04 <__assert_fail@plt+0xfa28>
   20e88:	b	20e8c <__assert_fail@plt+0xf9b0>
   20e8c:	ldr	r0, [fp, #-8]
   20e90:	ldr	r1, [r0]
   20e94:	ldr	r0, [r0, #4]
   20e98:	and	r0, r1, r0
   20e9c:	cmn	r0, #1
   20ea0:	bne	20ed8 <__assert_fail@plt+0xf9fc>
   20ea4:	b	20ea8 <__assert_fail@plt+0xf9cc>
   20ea8:	b	20eac <__assert_fail@plt+0xf9d0>
   20eac:	ldr	r0, [fp, #-12]
   20eb0:	mov	r1, #-2147483648	; 0x80000000
   20eb4:	add	r1, r1, r0, asr #31
   20eb8:	rsbs	r0, r0, #0
   20ebc:	rscs	r1, r1, #0
   20ec0:	blt	20f44 <__assert_fail@plt+0xfa68>
   20ec4:	b	20f70 <__assert_fail@plt+0xfa94>
   20ec8:	mov	r0, #0
   20ecc:	cmp	r0, #0
   20ed0:	bne	20f44 <__assert_fail@plt+0xfa68>
   20ed4:	b	20f70 <__assert_fail@plt+0xfa94>
   20ed8:	ldr	r0, [fp, #-8]
   20edc:	ldr	r2, [r0]
   20ee0:	ldr	r3, [r0, #4]
   20ee4:	mov	r0, #0
   20ee8:	mov	r1, #-2147483648	; 0x80000000
   20eec:	bl	2413c <__assert_fail@plt+0x12c60>
   20ef0:	ldr	r2, [fp, #-12]
   20ef4:	subs	r0, r0, r2
   20ef8:	sbcs	r1, r1, r2, asr #31
   20efc:	bcc	20f44 <__assert_fail@plt+0xfa68>
   20f00:	b	20f70 <__assert_fail@plt+0xfa94>
   20f04:	ldr	r0, [fp, #-12]
   20f08:	asr	r3, r0, #31
   20f0c:	mvn	r1, #0
   20f10:	mvn	r2, #-2147483648	; 0x80000000
   20f14:	str	r0, [sp, #28]
   20f18:	mov	r0, r1
   20f1c:	mov	r1, r2
   20f20:	ldr	r2, [sp, #28]
   20f24:	bl	24068 <__assert_fail@plt+0x12b8c>
   20f28:	ldr	r2, [fp, #-8]
   20f2c:	ldr	r3, [r2]
   20f30:	ldr	r2, [r2, #4]
   20f34:	subs	r0, r0, r3
   20f38:	sbcs	r1, r1, r2
   20f3c:	bcs	20f70 <__assert_fail@plt+0xfa94>
   20f40:	b	20f44 <__assert_fail@plt+0xfa68>
   20f44:	ldr	r0, [fp, #-8]
   20f48:	ldr	r1, [r0]
   20f4c:	ldr	r0, [r0, #4]
   20f50:	ldr	r2, [fp, #-12]
   20f54:	asr	r3, r2, #31
   20f58:	umull	ip, lr, r1, r2
   20f5c:	mla	r1, r1, r3, lr
   20f60:	mla	r0, r0, r2, r1
   20f64:	str	ip, [fp, #-24]	; 0xffffffe8
   20f68:	str	r0, [fp, #-20]	; 0xffffffec
   20f6c:	b	21234 <__assert_fail@plt+0xfd58>
   20f70:	ldr	r0, [fp, #-8]
   20f74:	ldr	r1, [r0]
   20f78:	ldr	r0, [r0, #4]
   20f7c:	ldr	r2, [fp, #-12]
   20f80:	asr	r3, r2, #31
   20f84:	umull	ip, lr, r1, r2
   20f88:	mla	r1, r1, r3, lr
   20f8c:	mla	r0, r0, r2, r1
   20f90:	str	ip, [fp, #-24]	; 0xffffffe8
   20f94:	str	r0, [fp, #-20]	; 0xffffffec
   20f98:	b	21250 <__assert_fail@plt+0xfd74>
   20f9c:	ldr	r0, [fp, #-12]
   20fa0:	cmp	r0, #0
   20fa4:	bge	21118 <__assert_fail@plt+0xfc3c>
   20fa8:	mov	r0, #1
   20fac:	cmp	r0, #0
   20fb0:	bne	21098 <__assert_fail@plt+0xfbbc>
   20fb4:	b	20fb8 <__assert_fail@plt+0xfadc>
   20fb8:	b	21000 <__assert_fail@plt+0xfb24>
   20fbc:	ldr	r0, [fp, #-8]
   20fc0:	ldr	r1, [r0]
   20fc4:	ldr	r0, [r0, #4]
   20fc8:	ldr	r2, [fp, #-12]
   20fcc:	asr	r3, r2, #31
   20fd0:	mvn	ip, #0
   20fd4:	str	r0, [sp, #24]
   20fd8:	mov	r0, ip
   20fdc:	str	r1, [sp, #20]
   20fe0:	mov	r1, ip
   20fe4:	bl	2413c <__assert_fail@plt+0x12c60>
   20fe8:	ldr	r2, [sp, #20]
   20fec:	subs	r0, r2, r0
   20ff0:	ldr	r2, [sp, #24]
   20ff4:	sbcs	r1, r2, r1
   20ff8:	bcc	211dc <__assert_fail@plt+0xfd00>
   20ffc:	b	21208 <__assert_fail@plt+0xfd2c>
   21000:	b	21004 <__assert_fail@plt+0xfb28>
   21004:	ldr	r0, [pc, #620]	; 21278 <__assert_fail@plt+0xfd9c>
   21008:	ldr	r1, [fp, #-12]
   2100c:	cmp	r1, r0
   21010:	blt	21028 <__assert_fail@plt+0xfb4c>
   21014:	b	21040 <__assert_fail@plt+0xfb64>
   21018:	ldr	r0, [fp, #-12]
   2101c:	movw	r1, #0
   21020:	cmp	r1, r0
   21024:	bge	21040 <__assert_fail@plt+0xfb64>
   21028:	mov	r0, #1
   2102c:	mvn	r1, #0
   21030:	str	r1, [sp, #16]
   21034:	str	r0, [sp, #12]
   21038:	b	2106c <__assert_fail@plt+0xfb90>
   2103c:			; <UNDEFINED> instruction: 0xffff8000
   21040:	ldr	r0, [fp, #-12]
   21044:	rsb	r0, r0, #0
   21048:	asr	r3, r0, #31
   2104c:	mvn	r1, #0
   21050:	str	r0, [sp, #8]
   21054:	mov	r0, r1
   21058:	ldr	r2, [sp, #8]
   2105c:	bl	2413c <__assert_fail@plt+0x12c60>
   21060:	str	r0, [sp, #16]
   21064:	str	r1, [sp, #12]
   21068:	b	2106c <__assert_fail@plt+0xfb90>
   2106c:	ldr	r0, [sp, #12]
   21070:	ldr	r1, [sp, #16]
   21074:	ldr	r2, [fp, #-8]
   21078:	ldr	r3, [r2]
   2107c:	ldr	r2, [r2, #4]
   21080:	mvn	r2, r2
   21084:	mvn	r3, r3
   21088:	subs	r1, r3, r1
   2108c:	sbcs	r0, r2, r0
   21090:	bcs	211dc <__assert_fail@plt+0xfd00>
   21094:	b	21208 <__assert_fail@plt+0xfd2c>
   21098:	b	2109c <__assert_fail@plt+0xfbc0>
   2109c:	b	210fc <__assert_fail@plt+0xfc20>
   210a0:	b	210fc <__assert_fail@plt+0xfc20>
   210a4:	ldr	r0, [fp, #-12]
   210a8:	cmn	r0, #1
   210ac:	bne	210fc <__assert_fail@plt+0xfc20>
   210b0:	b	210d0 <__assert_fail@plt+0xfbf4>
   210b4:	ldr	r0, [fp, #-8]
   210b8:	ldr	r1, [r0]
   210bc:	ldr	r0, [r0, #4]
   210c0:	orr	r0, r1, r0
   210c4:	cmp	r0, #0
   210c8:	bne	211dc <__assert_fail@plt+0xfd00>
   210cc:	b	21208 <__assert_fail@plt+0xfd2c>
   210d0:	ldr	r0, [fp, #-8]
   210d4:	ldr	r1, [r0]
   210d8:	ldr	r0, [r0, #4]
   210dc:	orr	r0, r1, r0
   210e0:	cmp	r0, #0
   210e4:	beq	21208 <__assert_fail@plt+0xfd2c>
   210e8:	b	210ec <__assert_fail@plt+0xfc10>
   210ec:	mov	r0, #0
   210f0:	cmp	r0, #0
   210f4:	bne	211dc <__assert_fail@plt+0xfd00>
   210f8:	b	21208 <__assert_fail@plt+0xfd2c>
   210fc:	ldr	r0, [fp, #-8]
   21100:	ldr	r1, [r0]
   21104:	ldr	r0, [r0, #4]
   21108:	orr	r0, r1, r0
   2110c:	cmp	r0, #0
   21110:	bne	211dc <__assert_fail@plt+0xfd00>
   21114:	b	21208 <__assert_fail@plt+0xfd2c>
   21118:	ldr	r0, [fp, #-12]
   2111c:	cmp	r0, #0
   21120:	bne	21128 <__assert_fail@plt+0xfc4c>
   21124:	b	21208 <__assert_fail@plt+0xfd2c>
   21128:	mov	r0, #1
   2112c:	cmp	r0, #0
   21130:	bne	211a4 <__assert_fail@plt+0xfcc8>
   21134:	b	21138 <__assert_fail@plt+0xfc5c>
   21138:	b	21140 <__assert_fail@plt+0xfc64>
   2113c:	b	21144 <__assert_fail@plt+0xfc68>
   21140:	b	21194 <__assert_fail@plt+0xfcb8>
   21144:	ldr	r0, [fp, #-8]
   21148:	ldr	r1, [r0]
   2114c:	ldr	r0, [r0, #4]
   21150:	and	r0, r1, r0
   21154:	cmn	r0, #1
   21158:	bne	21194 <__assert_fail@plt+0xfcb8>
   2115c:	b	21160 <__assert_fail@plt+0xfc84>
   21160:	b	21164 <__assert_fail@plt+0xfc88>
   21164:	ldr	r0, [fp, #-12]
   21168:	add	r0, r0, #0
   2116c:	movw	r1, #0
   21170:	cmp	r1, r0
   21174:	blt	211dc <__assert_fail@plt+0xfd00>
   21178:	b	21208 <__assert_fail@plt+0xfd2c>
   2117c:	ldr	r0, [fp, #-12]
   21180:	sub	r0, r0, #1
   21184:	mvn	r1, #0
   21188:	cmp	r1, r0
   2118c:	blt	211dc <__assert_fail@plt+0xfd00>
   21190:	b	21208 <__assert_fail@plt+0xfd2c>
   21194:	ldr	r0, [fp, #-12]
   21198:	cmp	r0, #0
   2119c:	bne	211dc <__assert_fail@plt+0xfd00>
   211a0:	b	21208 <__assert_fail@plt+0xfd2c>
   211a4:	ldr	r0, [fp, #-12]
   211a8:	asr	r3, r0, #31
   211ac:	mvn	r1, #0
   211b0:	str	r0, [sp, #4]
   211b4:	mov	r0, r1
   211b8:	ldr	r2, [sp, #4]
   211bc:	bl	2413c <__assert_fail@plt+0x12c60>
   211c0:	ldr	r2, [fp, #-8]
   211c4:	ldr	r3, [r2]
   211c8:	ldr	r2, [r2, #4]
   211cc:	subs	r0, r0, r3
   211d0:	sbcs	r1, r1, r2
   211d4:	bcs	21208 <__assert_fail@plt+0xfd2c>
   211d8:	b	211dc <__assert_fail@plt+0xfd00>
   211dc:	ldr	r0, [fp, #-8]
   211e0:	ldr	r1, [r0]
   211e4:	ldr	r0, [r0, #4]
   211e8:	ldr	r2, [fp, #-12]
   211ec:	asr	r3, r2, #31
   211f0:	umull	ip, lr, r1, r2
   211f4:	mla	r1, r1, r3, lr
   211f8:	mla	r0, r0, r2, r1
   211fc:	str	ip, [fp, #-24]	; 0xffffffe8
   21200:	str	r0, [fp, #-20]	; 0xffffffec
   21204:	b	21234 <__assert_fail@plt+0xfd58>
   21208:	ldr	r0, [fp, #-8]
   2120c:	ldr	r1, [r0]
   21210:	ldr	r0, [r0, #4]
   21214:	ldr	r2, [fp, #-12]
   21218:	asr	r3, r2, #31
   2121c:	umull	ip, lr, r1, r2
   21220:	mla	r1, r1, r3, lr
   21224:	mla	r0, r0, r2, r1
   21228:	str	ip, [fp, #-24]	; 0xffffffe8
   2122c:	str	r0, [fp, #-20]	; 0xffffffec
   21230:	b	21250 <__assert_fail@plt+0xfd74>
   21234:	ldr	r0, [fp, #-8]
   21238:	mvn	r1, #0
   2123c:	str	r1, [r0, #4]
   21240:	str	r1, [r0]
   21244:	movw	r0, #1
   21248:	str	r0, [fp, #-4]
   2124c:	b	2126c <__assert_fail@plt+0xfd90>
   21250:	ldr	r0, [fp, #-24]	; 0xffffffe8
   21254:	ldr	r1, [fp, #-20]	; 0xffffffec
   21258:	ldr	r2, [fp, #-8]
   2125c:	str	r1, [r2, #4]
   21260:	str	r0, [r2]
   21264:	movw	r0, #0
   21268:	str	r0, [fp, #-4]
   2126c:	ldr	r0, [fp, #-4]
   21270:	mov	sp, fp
   21274:	pop	{fp, pc}
   21278:	andhi	r0, r0, r1
   2127c:	svcvc	0x00ffffff
   21280:	push	{fp, lr}
   21284:	mov	fp, sp
   21288:	sub	sp, sp, #16
   2128c:	str	r0, [fp, #-4]
   21290:	str	r1, [sp, #8]
   21294:	str	r2, [sp, #4]
   21298:	movw	r0, #0
   2129c:	str	r0, [sp]
   212a0:	ldr	r0, [sp, #4]
   212a4:	mvn	r1, #0
   212a8:	add	r1, r0, r1
   212ac:	str	r1, [sp, #4]
   212b0:	cmp	r0, #0
   212b4:	beq	212d4 <__assert_fail@plt+0xfdf8>
   212b8:	ldr	r0, [fp, #-4]
   212bc:	ldr	r1, [sp, #8]
   212c0:	bl	1fa08 <__assert_fail@plt+0xe52c>
   212c4:	ldr	r1, [sp]
   212c8:	orr	r0, r1, r0
   212cc:	str	r0, [sp]
   212d0:	b	212a0 <__assert_fail@plt+0xfdc4>
   212d4:	ldr	r0, [sp]
   212d8:	mov	sp, fp
   212dc:	pop	{fp, pc}
   212e0:	push	{fp, lr}
   212e4:	mov	fp, sp
   212e8:	sub	sp, sp, #16
   212ec:	str	r0, [sp, #8]
   212f0:	str	r1, [sp, #4]
   212f4:	ldr	r0, [sp, #8]
   212f8:	cmp	r0, #0
   212fc:	beq	2130c <__assert_fail@plt+0xfe30>
   21300:	ldr	r0, [sp, #4]
   21304:	cmp	r0, #0
   21308:	bne	21318 <__assert_fail@plt+0xfe3c>
   2130c:	movw	r0, #1
   21310:	str	r0, [sp, #4]
   21314:	str	r0, [sp, #8]
   21318:	ldr	r0, [sp, #4]
   2131c:	cmp	r0, #0
   21320:	beq	21354 <__assert_fail@plt+0xfe78>
   21324:	ldr	r0, [pc, #76]	; 21378 <__assert_fail@plt+0xfe9c>
   21328:	ldr	r1, [sp, #4]
   2132c:	udiv	r0, r0, r1
   21330:	ldr	r1, [sp, #8]
   21334:	cmp	r0, r1
   21338:	bcs	21354 <__assert_fail@plt+0xfe78>
   2133c:	bl	11398 <__errno_location@plt>
   21340:	movw	r1, #12
   21344:	str	r1, [r0]
   21348:	movw	r0, #0
   2134c:	str	r0, [fp, #-4]
   21350:	b	2136c <__assert_fail@plt+0xfe90>
   21354:	ldr	r0, [sp, #8]
   21358:	ldr	r1, [sp, #4]
   2135c:	bl	111b8 <calloc@plt>
   21360:	str	r0, [sp]
   21364:	ldr	r0, [sp]
   21368:	str	r0, [fp, #-4]
   2136c:	ldr	r0, [fp, #-4]
   21370:	mov	sp, fp
   21374:	pop	{fp, pc}
   21378:	svcvc	0x00ffffff
   2137c:	push	{fp, lr}
   21380:	mov	fp, sp
   21384:	sub	sp, sp, #16
   21388:	str	r0, [sp, #8]
   2138c:	ldr	r0, [sp, #8]
   21390:	cmp	r0, #0
   21394:	bne	213a0 <__assert_fail@plt+0xfec4>
   21398:	movw	r0, #1
   2139c:	str	r0, [sp, #8]
   213a0:	ldr	r0, [pc, #64]	; 213e8 <__assert_fail@plt+0xff0c>
   213a4:	ldr	r1, [sp, #8]
   213a8:	cmp	r0, r1
   213ac:	bcs	213c8 <__assert_fail@plt+0xfeec>
   213b0:	bl	11398 <__errno_location@plt>
   213b4:	movw	r1, #12
   213b8:	str	r1, [r0]
   213bc:	movw	r0, #0
   213c0:	str	r0, [fp, #-4]
   213c4:	b	213dc <__assert_fail@plt+0xff00>
   213c8:	ldr	r0, [sp, #8]
   213cc:	bl	112fc <malloc@plt>
   213d0:	str	r0, [sp, #4]
   213d4:	ldr	r0, [sp, #4]
   213d8:	str	r0, [fp, #-4]
   213dc:	ldr	r0, [fp, #-4]
   213e0:	mov	sp, fp
   213e4:	pop	{fp, pc}
   213e8:	svcvc	0x00ffffff
   213ec:	push	{fp, lr}
   213f0:	mov	fp, sp
   213f4:	sub	sp, sp, #16
   213f8:	str	r0, [sp, #8]
   213fc:	str	r1, [sp, #4]
   21400:	ldr	r0, [sp, #8]
   21404:	movw	r1, #0
   21408:	cmp	r0, r1
   2140c:	bne	21420 <__assert_fail@plt+0xff44>
   21410:	ldr	r0, [sp, #4]
   21414:	bl	2137c <__assert_fail@plt+0xfea0>
   21418:	str	r0, [fp, #-4]
   2141c:	b	21480 <__assert_fail@plt+0xffa4>
   21420:	ldr	r0, [sp, #4]
   21424:	cmp	r0, #0
   21428:	bne	21440 <__assert_fail@plt+0xff64>
   2142c:	ldr	r0, [sp, #8]
   21430:	bl	1382c <__assert_fail@plt+0x2350>
   21434:	movw	r0, #0
   21438:	str	r0, [fp, #-4]
   2143c:	b	21480 <__assert_fail@plt+0xffa4>
   21440:	ldr	r0, [pc, #68]	; 2148c <__assert_fail@plt+0xffb0>
   21444:	ldr	r1, [sp, #4]
   21448:	cmp	r0, r1
   2144c:	bcs	21468 <__assert_fail@plt+0xff8c>
   21450:	bl	11398 <__errno_location@plt>
   21454:	movw	r1, #12
   21458:	str	r1, [r0]
   2145c:	movw	r0, #0
   21460:	str	r0, [fp, #-4]
   21464:	b	21480 <__assert_fail@plt+0xffa4>
   21468:	ldr	r0, [sp, #8]
   2146c:	ldr	r1, [sp, #4]
   21470:	bl	1126c <realloc@plt>
   21474:	str	r0, [sp]
   21478:	ldr	r0, [sp]
   2147c:	str	r0, [fp, #-4]
   21480:	ldr	r0, [fp, #-4]
   21484:	mov	sp, fp
   21488:	pop	{fp, pc}
   2148c:	svcvc	0x00ffffff
   21490:	push	{r4, sl, fp, lr}
   21494:	add	fp, sp, #8
   21498:	sub	sp, sp, #16
   2149c:	str	r0, [sp, #8]
   214a0:	str	r1, [sp, #12]
   214a4:	str	r2, [sp, #4]
   214a8:	ldr	r0, [sp, #8]
   214ac:	ldr	r1, [sp, #12]
   214b0:	ldr	r2, [sp, #4]
   214b4:	rsb	r3, r2, #32
   214b8:	lsr	ip, r0, r3
   214bc:	orr	ip, ip, r1, lsl r2
   214c0:	sub	lr, r2, #32
   214c4:	cmp	lr, #0
   214c8:	lslpl	ip, r0, lr
   214cc:	lsl	r4, r0, r2
   214d0:	cmp	lr, #0
   214d4:	movwpl	r4, #0
   214d8:	rsb	r2, r2, #64	; 0x40
   214dc:	lsr	lr, r1, r2
   214e0:	cmp	r3, #0
   214e4:	movwpl	lr, #0
   214e8:	lsr	r0, r0, r2
   214ec:	rsb	r2, r2, #32
   214f0:	orr	r0, r0, r1, lsl r2
   214f4:	cmp	r3, #0
   214f8:	lsrpl	r0, r1, r3
   214fc:	orr	r0, r4, r0
   21500:	orr	r1, ip, lr
   21504:	sub	sp, fp, #8
   21508:	pop	{r4, sl, fp, pc}
   2150c:	push	{r4, sl, fp, lr}
   21510:	add	fp, sp, #8
   21514:	sub	sp, sp, #16
   21518:	str	r0, [sp, #8]
   2151c:	str	r1, [sp, #12]
   21520:	str	r2, [sp, #4]
   21524:	ldr	r0, [sp, #8]
   21528:	ldr	r1, [sp, #12]
   2152c:	ldr	r2, [sp, #4]
   21530:	lsr	r3, r1, r2
   21534:	sub	ip, r2, #32
   21538:	cmp	ip, #0
   2153c:	movwpl	r3, #0
   21540:	lsr	lr, r0, r2
   21544:	rsb	r4, r2, #32
   21548:	orr	lr, lr, r1, lsl r4
   2154c:	cmp	ip, #0
   21550:	lsrpl	lr, r1, ip
   21554:	rsb	r2, r2, #64	; 0x40
   21558:	rsb	ip, r2, #32
   2155c:	lsr	ip, r0, ip
   21560:	orr	r1, ip, r1, lsl r2
   21564:	cmp	r4, #0
   21568:	lslpl	r1, r0, r4
   2156c:	lsl	r0, r0, r2
   21570:	cmp	r4, #0
   21574:	movwpl	r0, #0
   21578:	orr	r0, lr, r0
   2157c:	orr	r1, r3, r1
   21580:	sub	sp, fp, #8
   21584:	pop	{r4, sl, fp, pc}
   21588:	sub	sp, sp, #8
   2158c:	str	r0, [sp, #4]
   21590:	str	r1, [sp]
   21594:	ldr	r0, [sp, #4]
   21598:	ldr	r1, [sp]
   2159c:	lsl	r0, r0, r1
   215a0:	ldr	r1, [sp, #4]
   215a4:	ldr	r2, [sp]
   215a8:	movw	r3, #32
   215ac:	sub	r2, r3, r2
   215b0:	lsr	r1, r1, r2
   215b4:	orr	r0, r0, r1
   215b8:	add	sp, sp, #8
   215bc:	bx	lr
   215c0:	sub	sp, sp, #8
   215c4:	str	r0, [sp, #4]
   215c8:	str	r1, [sp]
   215cc:	ldr	r0, [sp, #4]
   215d0:	ldr	r1, [sp]
   215d4:	lsr	r0, r0, r1
   215d8:	ldr	r1, [sp, #4]
   215dc:	ldr	r2, [sp]
   215e0:	movw	r3, #32
   215e4:	sub	r2, r3, r2
   215e8:	lsl	r1, r1, r2
   215ec:	orr	r0, r0, r1
   215f0:	add	sp, sp, #8
   215f4:	bx	lr
   215f8:	sub	sp, sp, #8
   215fc:	str	r0, [sp, #4]
   21600:	str	r1, [sp]
   21604:	ldr	r0, [sp, #4]
   21608:	ldr	r1, [sp]
   2160c:	lsl	r0, r0, r1
   21610:	ldr	r1, [sp, #4]
   21614:	ldr	r2, [sp]
   21618:	movw	r3, #32
   2161c:	sub	r2, r3, r2
   21620:	lsr	r1, r1, r2
   21624:	orr	r0, r0, r1
   21628:	add	sp, sp, #8
   2162c:	bx	lr
   21630:	sub	sp, sp, #8
   21634:	str	r0, [sp, #4]
   21638:	str	r1, [sp]
   2163c:	ldr	r0, [sp, #4]
   21640:	ldr	r1, [sp]
   21644:	lsr	r0, r0, r1
   21648:	ldr	r1, [sp, #4]
   2164c:	ldr	r2, [sp]
   21650:	movw	r3, #32
   21654:	sub	r2, r3, r2
   21658:	lsl	r1, r1, r2
   2165c:	orr	r0, r0, r1
   21660:	add	sp, sp, #8
   21664:	bx	lr
   21668:	sub	sp, sp, #8
   2166c:	strh	r0, [sp, #6]
   21670:	str	r1, [sp]
   21674:	ldrh	r0, [sp, #6]
   21678:	ldr	r1, [sp]
   2167c:	lsl	r0, r0, r1
   21680:	ldrh	r1, [sp, #6]
   21684:	ldr	r2, [sp]
   21688:	movw	r3, #16
   2168c:	sub	r2, r3, r2
   21690:	lsr	r1, r1, r2
   21694:	orr	r0, r0, r1
   21698:	movw	r1, #65535	; 0xffff
   2169c:	and	r0, r0, r1
   216a0:	uxth	r0, r0
   216a4:	add	sp, sp, #8
   216a8:	bx	lr
   216ac:	sub	sp, sp, #8
   216b0:	strh	r0, [sp, #6]
   216b4:	str	r1, [sp]
   216b8:	ldrh	r0, [sp, #6]
   216bc:	ldr	r1, [sp]
   216c0:	lsr	r0, r0, r1
   216c4:	ldrh	r1, [sp, #6]
   216c8:	ldr	r2, [sp]
   216cc:	movw	r3, #16
   216d0:	sub	r2, r3, r2
   216d4:	lsl	r1, r1, r2
   216d8:	orr	r0, r0, r1
   216dc:	movw	r1, #65535	; 0xffff
   216e0:	and	r0, r0, r1
   216e4:	uxth	r0, r0
   216e8:	add	sp, sp, #8
   216ec:	bx	lr
   216f0:	sub	sp, sp, #8
   216f4:	strb	r0, [sp, #7]
   216f8:	str	r1, [sp]
   216fc:	ldrb	r0, [sp, #7]
   21700:	ldr	r1, [sp]
   21704:	lsl	r0, r0, r1
   21708:	ldrb	r1, [sp, #7]
   2170c:	ldr	r2, [sp]
   21710:	movw	r3, #8
   21714:	sub	r2, r3, r2
   21718:	lsr	r1, r1, r2
   2171c:	orr	r0, r0, r1
   21720:	and	r0, r0, #255	; 0xff
   21724:	and	r0, r0, #255	; 0xff
   21728:	add	sp, sp, #8
   2172c:	bx	lr
   21730:	sub	sp, sp, #8
   21734:	strb	r0, [sp, #7]
   21738:	str	r1, [sp]
   2173c:	ldrb	r0, [sp, #7]
   21740:	ldr	r1, [sp]
   21744:	lsr	r0, r0, r1
   21748:	ldrb	r1, [sp, #7]
   2174c:	ldr	r2, [sp]
   21750:	movw	r3, #8
   21754:	sub	r2, r3, r2
   21758:	lsl	r1, r1, r2
   2175c:	orr	r0, r0, r1
   21760:	and	r0, r0, #255	; 0xff
   21764:	and	r0, r0, #255	; 0xff
   21768:	add	sp, sp, #8
   2176c:	bx	lr
   21770:	push	{fp, lr}
   21774:	mov	fp, sp
   21778:	sub	sp, sp, #24
   2177c:	str	r0, [fp, #-8]
   21780:	str	r1, [sp, #12]
   21784:	ldr	r0, [fp, #-8]
   21788:	str	r0, [sp, #8]
   2178c:	ldr	r0, [sp, #12]
   21790:	str	r0, [sp, #4]
   21794:	ldr	r0, [sp, #8]
   21798:	ldr	r1, [sp, #4]
   2179c:	cmp	r0, r1
   217a0:	bne	217b0 <__assert_fail@plt+0x102d4>
   217a4:	movw	r0, #0
   217a8:	str	r0, [fp, #-4]
   217ac:	b	2181c <__assert_fail@plt+0x10340>
   217b0:	b	217b4 <__assert_fail@plt+0x102d8>
   217b4:	ldr	r0, [sp, #8]
   217b8:	ldrb	r0, [r0]
   217bc:	bl	23de8 <__assert_fail@plt+0x1290c>
   217c0:	strb	r0, [sp, #3]
   217c4:	ldr	r0, [sp, #4]
   217c8:	ldrb	r0, [r0]
   217cc:	bl	23de8 <__assert_fail@plt+0x1290c>
   217d0:	strb	r0, [sp, #2]
   217d4:	ldrb	r0, [sp, #3]
   217d8:	cmp	r0, #0
   217dc:	bne	217e4 <__assert_fail@plt+0x10308>
   217e0:	b	2180c <__assert_fail@plt+0x10330>
   217e4:	ldr	r0, [sp, #8]
   217e8:	add	r0, r0, #1
   217ec:	str	r0, [sp, #8]
   217f0:	ldr	r0, [sp, #4]
   217f4:	add	r0, r0, #1
   217f8:	str	r0, [sp, #4]
   217fc:	ldrb	r0, [sp, #3]
   21800:	ldrb	r1, [sp, #2]
   21804:	cmp	r0, r1
   21808:	beq	217b4 <__assert_fail@plt+0x102d8>
   2180c:	ldrb	r0, [sp, #3]
   21810:	ldrb	r1, [sp, #2]
   21814:	sub	r0, r0, r1
   21818:	str	r0, [fp, #-4]
   2181c:	ldr	r0, [fp, #-4]
   21820:	mov	sp, fp
   21824:	pop	{fp, pc}
   21828:	push	{fp, lr}
   2182c:	mov	fp, sp
   21830:	sub	sp, sp, #16
   21834:	str	r0, [sp, #8]
   21838:	ldr	r0, [sp, #8]
   2183c:	bl	112c0 <__fpending@plt>
   21840:	cmp	r0, #0
   21844:	movw	r0, #0
   21848:	movne	r0, #1
   2184c:	and	r0, r0, #1
   21850:	strb	r0, [sp, #7]
   21854:	ldr	r0, [sp, #8]
   21858:	bl	112cc <ferror_unlocked@plt>
   2185c:	cmp	r0, #0
   21860:	movw	r0, #0
   21864:	movne	r0, #1
   21868:	and	r0, r0, #1
   2186c:	strb	r0, [sp, #6]
   21870:	ldr	r0, [sp, #8]
   21874:	bl	21ae8 <__assert_fail@plt+0x1060c>
   21878:	cmp	r0, #0
   2187c:	movw	r0, #0
   21880:	movne	r0, #1
   21884:	and	r0, r0, #1
   21888:	strb	r0, [sp, #5]
   2188c:	ldrb	r0, [sp, #6]
   21890:	tst	r0, #1
   21894:	bne	218c0 <__assert_fail@plt+0x103e4>
   21898:	ldrb	r0, [sp, #5]
   2189c:	tst	r0, #1
   218a0:	beq	218e4 <__assert_fail@plt+0x10408>
   218a4:	ldrb	r0, [sp, #7]
   218a8:	tst	r0, #1
   218ac:	bne	218c0 <__assert_fail@plt+0x103e4>
   218b0:	bl	11398 <__errno_location@plt>
   218b4:	ldr	r0, [r0]
   218b8:	cmp	r0, #9
   218bc:	beq	218e4 <__assert_fail@plt+0x10408>
   218c0:	ldrb	r0, [sp, #5]
   218c4:	tst	r0, #1
   218c8:	bne	218d8 <__assert_fail@plt+0x103fc>
   218cc:	bl	11398 <__errno_location@plt>
   218d0:	movw	r1, #0
   218d4:	str	r1, [r0]
   218d8:	mvn	r0, #0
   218dc:	str	r0, [fp, #-4]
   218e0:	b	218ec <__assert_fail@plt+0x10410>
   218e4:	movw	r0, #0
   218e8:	str	r0, [fp, #-4]
   218ec:	ldr	r0, [fp, #-4]
   218f0:	mov	sp, fp
   218f4:	pop	{fp, pc}
   218f8:	sub	sp, sp, #4
   218fc:	ldr	r1, [pc, #32]	; 21924 <__assert_fail@plt+0x10448>
   21900:	str	r0, [sp]
   21904:	ldr	r0, [sp]
   21908:	mov	r2, #0
   2190c:	str	r2, [r0, #20]
   21910:	str	r2, [r0, #16]
   21914:	ldr	r0, [sp]
   21918:	str	r1, [r0, #24]
   2191c:	add	sp, sp, #4
   21920:	bx	lr
   21924:	addseq	pc, r5, r6, lsl r6	; <UNPREDICTABLE>
   21928:	push	{fp, lr}
   2192c:	mov	fp, sp
   21930:	sub	sp, sp, #16
   21934:	ldr	r2, [pc, #364]	; 21aa8 <__assert_fail@plt+0x105cc>
   21938:	str	r0, [sp, #8]
   2193c:	str	r1, [sp, #4]
   21940:	ldr	r0, [sp, #8]
   21944:	ldr	r0, [r0, #24]
   21948:	cmp	r0, r2
   2194c:	bne	21954 <__assert_fail@plt+0x10478>
   21950:	b	21974 <__assert_fail@plt+0x10498>
   21954:	movw	r0, #22355	; 0x5753
   21958:	movt	r0, #2
   2195c:	movw	r1, #22379	; 0x576b
   21960:	movt	r1, #2
   21964:	movw	r2, #60	; 0x3c
   21968:	movw	r3, #22397	; 0x577d
   2196c:	movt	r3, #2
   21970:	bl	114dc <__assert_fail@plt>
   21974:	ldr	r0, [sp, #8]
   21978:	ldr	r1, [r0, #16]
   2197c:	ldr	r0, [r0, #20]
   21980:	orr	r0, r1, r0
   21984:	cmp	r0, #0
   21988:	beq	21a00 <__assert_fail@plt+0x10524>
   2198c:	b	21990 <__assert_fail@plt+0x104b4>
   21990:	ldr	r0, [sp, #4]
   21994:	ldr	r1, [r0, #96]	; 0x60
   21998:	ldr	r0, [r0, #100]	; 0x64
   2199c:	ldr	r2, [sp, #8]
   219a0:	ldr	r3, [r2]
   219a4:	ldr	r2, [r2, #4]
   219a8:	eor	r0, r0, r2
   219ac:	eor	r1, r1, r3
   219b0:	orr	r0, r1, r0
   219b4:	cmp	r0, #0
   219b8:	bne	21a00 <__assert_fail@plt+0x10524>
   219bc:	b	219c0 <__assert_fail@plt+0x104e4>
   219c0:	ldr	r0, [sp, #4]
   219c4:	ldr	r1, [r0]
   219c8:	ldr	r0, [r0, #4]
   219cc:	ldr	r2, [sp, #8]
   219d0:	ldr	r3, [r2, #8]
   219d4:	ldr	r2, [r2, #12]
   219d8:	eor	r0, r0, r2
   219dc:	eor	r1, r1, r3
   219e0:	orr	r0, r1, r0
   219e4:	cmp	r0, #0
   219e8:	bne	21a00 <__assert_fail@plt+0x10524>
   219ec:	b	219f0 <__assert_fail@plt+0x10514>
   219f0:	movw	r0, #1
   219f4:	and	r0, r0, #1
   219f8:	strb	r0, [fp, #-1]
   219fc:	b	21a98 <__assert_fail@plt+0x105bc>
   21a00:	ldr	r0, [sp, #8]
   21a04:	ldr	r1, [r0, #16]
   21a08:	ldr	r2, [r0, #20]
   21a0c:	adds	r1, r1, #1
   21a10:	adc	r2, r2, #0
   21a14:	str	r1, [r0, #16]
   21a18:	str	r2, [r0, #20]
   21a1c:	mov	r0, r1
   21a20:	mov	r1, r2
   21a24:	bl	21aac <__assert_fail@plt+0x105d0>
   21a28:	tst	r0, #1
   21a2c:	beq	21a8c <__assert_fail@plt+0x105b0>
   21a30:	ldr	r0, [sp, #8]
   21a34:	ldr	r1, [r0, #16]
   21a38:	ldr	r0, [r0, #20]
   21a3c:	orr	r0, r1, r0
   21a40:	cmp	r0, #0
   21a44:	bne	21a5c <__assert_fail@plt+0x10580>
   21a48:	b	21a4c <__assert_fail@plt+0x10570>
   21a4c:	movw	r0, #1
   21a50:	and	r0, r0, #1
   21a54:	strb	r0, [fp, #-1]
   21a58:	b	21a98 <__assert_fail@plt+0x105bc>
   21a5c:	ldr	r0, [sp, #4]
   21a60:	ldr	r1, [r0]
   21a64:	ldr	r0, [r0, #4]
   21a68:	ldr	r2, [sp, #8]
   21a6c:	str	r0, [r2, #12]
   21a70:	str	r1, [r2, #8]
   21a74:	ldr	r0, [sp, #4]
   21a78:	ldr	r1, [r0, #96]	; 0x60
   21a7c:	ldr	r0, [r0, #100]	; 0x64
   21a80:	ldr	r2, [sp, #8]
   21a84:	str	r0, [r2, #4]
   21a88:	str	r1, [r2]
   21a8c:	movw	r0, #0
   21a90:	and	r0, r0, #1
   21a94:	strb	r0, [fp, #-1]
   21a98:	ldrb	r0, [fp, #-1]
   21a9c:	and	r0, r0, #1
   21aa0:	mov	sp, fp
   21aa4:	pop	{fp, pc}
   21aa8:	addseq	pc, r5, r6, lsl r6	; <UNPREDICTABLE>
   21aac:	sub	sp, sp, #8
   21ab0:	str	r0, [sp]
   21ab4:	str	r1, [sp, #4]
   21ab8:	ldr	r0, [sp]
   21abc:	ldr	r1, [sp, #4]
   21ac0:	subs	r2, r0, #1
   21ac4:	sbc	r3, r1, #0
   21ac8:	and	r0, r0, r2
   21acc:	and	r1, r1, r3
   21ad0:	orr	r0, r0, r1
   21ad4:	clz	r0, r0
   21ad8:	lsr	r0, r0, #5
   21adc:	and	r0, r0, #1
   21ae0:	add	sp, sp, #8
   21ae4:	bx	lr
   21ae8:	push	{fp, lr}
   21aec:	mov	fp, sp
   21af0:	sub	sp, sp, #32
   21af4:	str	r0, [fp, #-8]
   21af8:	movw	r0, #0
   21afc:	str	r0, [fp, #-12]
   21b00:	str	r0, [sp, #12]
   21b04:	ldr	r0, [fp, #-8]
   21b08:	bl	113bc <fileno@plt>
   21b0c:	str	r0, [sp, #16]
   21b10:	ldr	r0, [sp, #16]
   21b14:	cmp	r0, #0
   21b18:	bge	21b2c <__assert_fail@plt+0x10650>
   21b1c:	ldr	r0, [fp, #-8]
   21b20:	bl	113d4 <fclose@plt>
   21b24:	str	r0, [fp, #-4]
   21b28:	b	21bc8 <__assert_fail@plt+0x106ec>
   21b2c:	ldr	r0, [fp, #-8]
   21b30:	bl	11314 <__freading@plt>
   21b34:	cmp	r0, #0
   21b38:	beq	21b70 <__assert_fail@plt+0x10694>
   21b3c:	ldr	r0, [fp, #-8]
   21b40:	bl	113bc <fileno@plt>
   21b44:	mov	r1, sp
   21b48:	mov	r2, #1
   21b4c:	str	r2, [r1]
   21b50:	mov	r1, #0
   21b54:	mov	r2, r1
   21b58:	mov	r3, r1
   21b5c:	bl	112a8 <lseek64@plt>
   21b60:	and	r0, r0, r1
   21b64:	cmn	r0, #1
   21b68:	beq	21b8c <__assert_fail@plt+0x106b0>
   21b6c:	b	21b70 <__assert_fail@plt+0x10694>
   21b70:	ldr	r0, [fp, #-8]
   21b74:	bl	22034 <__assert_fail@plt+0x10b58>
   21b78:	cmp	r0, #0
   21b7c:	beq	21b8c <__assert_fail@plt+0x106b0>
   21b80:	bl	11398 <__errno_location@plt>
   21b84:	ldr	r0, [r0]
   21b88:	str	r0, [fp, #-12]
   21b8c:	ldr	r0, [fp, #-8]
   21b90:	bl	113d4 <fclose@plt>
   21b94:	str	r0, [sp, #12]
   21b98:	ldr	r0, [fp, #-12]
   21b9c:	cmp	r0, #0
   21ba0:	beq	21bc0 <__assert_fail@plt+0x106e4>
   21ba4:	ldr	r0, [fp, #-12]
   21ba8:	str	r0, [sp, #8]
   21bac:	bl	11398 <__errno_location@plt>
   21bb0:	ldr	r1, [sp, #8]
   21bb4:	str	r1, [r0]
   21bb8:	mvn	r0, #0
   21bbc:	str	r0, [sp, #12]
   21bc0:	ldr	r0, [sp, #12]
   21bc4:	str	r0, [fp, #-4]
   21bc8:	ldr	r0, [fp, #-4]
   21bcc:	mov	sp, fp
   21bd0:	pop	{fp, pc}
   21bd4:	sub	sp, sp, #8
   21bd8:	push	{fp, lr}
   21bdc:	mov	fp, sp
   21be0:	sub	sp, sp, #48	; 0x30
   21be4:	str	r3, [fp, #12]
   21be8:	str	r2, [fp, #8]
   21bec:	str	r0, [fp, #-4]
   21bf0:	str	r1, [fp, #-8]
   21bf4:	mvn	r0, #0
   21bf8:	str	r0, [fp, #-16]
   21bfc:	add	r0, fp, #8
   21c00:	str	r0, [fp, #-12]
   21c04:	ldr	r0, [fp, #-8]
   21c08:	cmp	r0, #0
   21c0c:	str	r0, [sp, #12]
   21c10:	beq	21c2c <__assert_fail@plt+0x10750>
   21c14:	b	21c18 <__assert_fail@plt+0x1073c>
   21c18:	movw	r0, #1030	; 0x406
   21c1c:	ldr	r1, [sp, #12]
   21c20:	cmp	r1, r0
   21c24:	beq	21c54 <__assert_fail@plt+0x10778>
   21c28:	b	21c7c <__assert_fail@plt+0x107a0>
   21c2c:	ldr	r0, [fp, #-12]
   21c30:	add	r1, r0, #4
   21c34:	str	r1, [fp, #-12]
   21c38:	ldr	r0, [r0]
   21c3c:	str	r0, [fp, #-20]	; 0xffffffec
   21c40:	ldr	r0, [fp, #-4]
   21c44:	ldr	r1, [fp, #-20]	; 0xffffffec
   21c48:	bl	21e28 <__assert_fail@plt+0x1094c>
   21c4c:	str	r0, [fp, #-16]
   21c50:	b	21e08 <__assert_fail@plt+0x1092c>
   21c54:	ldr	r0, [fp, #-12]
   21c58:	add	r1, r0, #4
   21c5c:	str	r1, [fp, #-12]
   21c60:	ldr	r0, [r0]
   21c64:	str	r0, [sp, #24]
   21c68:	ldr	r0, [fp, #-4]
   21c6c:	ldr	r1, [sp, #24]
   21c70:	bl	21e5c <__assert_fail@plt+0x10980>
   21c74:	str	r0, [fp, #-16]
   21c78:	b	21e08 <__assert_fail@plt+0x1092c>
   21c7c:	ldr	r0, [fp, #-8]
   21c80:	cmp	r0, #0
   21c84:	str	r0, [sp, #8]
   21c88:	beq	21db0 <__assert_fail@plt+0x108d4>
   21c8c:	b	21c90 <__assert_fail@plt+0x107b4>
   21c90:	ldr	r0, [sp, #8]
   21c94:	cmp	r0, #1
   21c98:	beq	21d9c <__assert_fail@plt+0x108c0>
   21c9c:	b	21ca0 <__assert_fail@plt+0x107c4>
   21ca0:	ldr	r0, [sp, #8]
   21ca4:	cmp	r0, #2
   21ca8:	beq	21db0 <__assert_fail@plt+0x108d4>
   21cac:	b	21cb0 <__assert_fail@plt+0x107d4>
   21cb0:	ldr	r0, [sp, #8]
   21cb4:	cmp	r0, #3
   21cb8:	beq	21d9c <__assert_fail@plt+0x108c0>
   21cbc:	b	21cc0 <__assert_fail@plt+0x107e4>
   21cc0:	ldr	r0, [sp, #8]
   21cc4:	cmp	r0, #4
   21cc8:	beq	21db0 <__assert_fail@plt+0x108d4>
   21ccc:	b	21cd0 <__assert_fail@plt+0x107f4>
   21cd0:	ldr	r0, [sp, #8]
   21cd4:	cmp	r0, #8
   21cd8:	beq	21db0 <__assert_fail@plt+0x108d4>
   21cdc:	b	21ce0 <__assert_fail@plt+0x10804>
   21ce0:	ldr	r0, [sp, #8]
   21ce4:	cmp	r0, #9
   21ce8:	beq	21d9c <__assert_fail@plt+0x108c0>
   21cec:	b	21cf0 <__assert_fail@plt+0x10814>
   21cf0:	ldr	r0, [sp, #8]
   21cf4:	cmp	r0, #10
   21cf8:	beq	21db0 <__assert_fail@plt+0x108d4>
   21cfc:	b	21d00 <__assert_fail@plt+0x10824>
   21d00:	ldr	r0, [sp, #8]
   21d04:	cmp	r0, #11
   21d08:	beq	21d9c <__assert_fail@plt+0x108c0>
   21d0c:	b	21d10 <__assert_fail@plt+0x10834>
   21d10:	ldr	r0, [sp, #8]
   21d14:	cmp	r0, #1024	; 0x400
   21d18:	beq	21db0 <__assert_fail@plt+0x108d4>
   21d1c:	b	21d20 <__assert_fail@plt+0x10844>
   21d20:	movw	r0, #1025	; 0x401
   21d24:	ldr	r1, [sp, #8]
   21d28:	cmp	r1, r0
   21d2c:	beq	21d9c <__assert_fail@plt+0x108c0>
   21d30:	b	21d34 <__assert_fail@plt+0x10858>
   21d34:	movw	r0, #1026	; 0x402
   21d38:	ldr	r1, [sp, #8]
   21d3c:	cmp	r1, r0
   21d40:	beq	21db0 <__assert_fail@plt+0x108d4>
   21d44:	b	21d48 <__assert_fail@plt+0x1086c>
   21d48:	movw	r0, #1030	; 0x406
   21d4c:	ldr	r1, [sp, #8]
   21d50:	sub	r0, r1, r0
   21d54:	cmp	r0, #2
   21d58:	bcc	21db0 <__assert_fail@plt+0x108d4>
   21d5c:	b	21d60 <__assert_fail@plt+0x10884>
   21d60:	movw	r0, #1032	; 0x408
   21d64:	ldr	r1, [sp, #8]
   21d68:	cmp	r1, r0
   21d6c:	beq	21d9c <__assert_fail@plt+0x108c0>
   21d70:	b	21d74 <__assert_fail@plt+0x10898>
   21d74:	movw	r0, #1033	; 0x409
   21d78:	ldr	r1, [sp, #8]
   21d7c:	cmp	r1, r0
   21d80:	beq	21db0 <__assert_fail@plt+0x108d4>
   21d84:	b	21d88 <__assert_fail@plt+0x108ac>
   21d88:	movw	r0, #1034	; 0x40a
   21d8c:	ldr	r1, [sp, #8]
   21d90:	cmp	r1, r0
   21d94:	bne	21ddc <__assert_fail@plt+0x10900>
   21d98:	b	21d9c <__assert_fail@plt+0x108c0>
   21d9c:	ldr	r0, [fp, #-4]
   21da0:	ldr	r1, [fp, #-8]
   21da4:	bl	113ec <fcntl64@plt>
   21da8:	str	r0, [fp, #-16]
   21dac:	b	21e04 <__assert_fail@plt+0x10928>
   21db0:	ldr	r0, [fp, #-12]
   21db4:	add	r1, r0, #4
   21db8:	str	r1, [fp, #-12]
   21dbc:	ldr	r0, [r0]
   21dc0:	str	r0, [sp, #20]
   21dc4:	ldr	r0, [fp, #-4]
   21dc8:	ldr	r1, [fp, #-8]
   21dcc:	ldr	r2, [sp, #20]
   21dd0:	bl	113ec <fcntl64@plt>
   21dd4:	str	r0, [fp, #-16]
   21dd8:	b	21e04 <__assert_fail@plt+0x10928>
   21ddc:	ldr	r0, [fp, #-12]
   21de0:	add	r1, r0, #4
   21de4:	str	r1, [fp, #-12]
   21de8:	ldr	r0, [r0]
   21dec:	str	r0, [sp, #16]
   21df0:	ldr	r0, [fp, #-4]
   21df4:	ldr	r1, [fp, #-8]
   21df8:	ldr	r2, [sp, #16]
   21dfc:	bl	113ec <fcntl64@plt>
   21e00:	str	r0, [fp, #-16]
   21e04:	b	21e08 <__assert_fail@plt+0x1092c>
   21e08:	sub	r0, fp, #12
   21e0c:	ldr	r1, [fp, #-16]
   21e10:	str	r0, [sp, #4]
   21e14:	mov	r0, r1
   21e18:	mov	sp, fp
   21e1c:	pop	{fp, lr}
   21e20:	add	sp, sp, #8
   21e24:	bx	lr
   21e28:	push	{fp, lr}
   21e2c:	mov	fp, sp
   21e30:	sub	sp, sp, #16
   21e34:	str	r0, [fp, #-4]
   21e38:	str	r1, [sp, #8]
   21e3c:	ldr	r0, [fp, #-4]
   21e40:	ldr	r2, [sp, #8]
   21e44:	movw	r1, #0
   21e48:	bl	113ec <fcntl64@plt>
   21e4c:	str	r0, [sp, #4]
   21e50:	ldr	r0, [sp, #4]
   21e54:	mov	sp, fp
   21e58:	pop	{fp, pc}
   21e5c:	push	{fp, lr}
   21e60:	mov	fp, sp
   21e64:	sub	sp, sp, #32
   21e68:	str	r0, [fp, #-4]
   21e6c:	str	r1, [fp, #-8]
   21e70:	movw	r0, #25324	; 0x62ec
   21e74:	movt	r0, #3
   21e78:	ldr	r0, [r0]
   21e7c:	movw	r1, #0
   21e80:	cmp	r1, r0
   21e84:	bgt	21f04 <__assert_fail@plt+0x10a28>
   21e88:	ldr	r0, [fp, #-4]
   21e8c:	ldr	r2, [fp, #-8]
   21e90:	movw	r1, #1030	; 0x406
   21e94:	bl	113ec <fcntl64@plt>
   21e98:	str	r0, [fp, #-12]
   21e9c:	ldr	r0, [fp, #-12]
   21ea0:	movw	r1, #0
   21ea4:	cmp	r1, r0
   21ea8:	ble	21ebc <__assert_fail@plt+0x109e0>
   21eac:	bl	11398 <__errno_location@plt>
   21eb0:	ldr	r0, [r0]
   21eb4:	cmp	r0, #22
   21eb8:	beq	21ed0 <__assert_fail@plt+0x109f4>
   21ebc:	movw	r0, #25324	; 0x62ec
   21ec0:	movt	r0, #3
   21ec4:	movw	r1, #1
   21ec8:	str	r1, [r0]
   21ecc:	b	21f00 <__assert_fail@plt+0x10a24>
   21ed0:	ldr	r0, [fp, #-4]
   21ed4:	ldr	r1, [fp, #-8]
   21ed8:	bl	21e28 <__assert_fail@plt+0x1094c>
   21edc:	str	r0, [fp, #-12]
   21ee0:	ldr	r0, [fp, #-12]
   21ee4:	cmp	r0, #0
   21ee8:	blt	21efc <__assert_fail@plt+0x10a20>
   21eec:	movw	r0, #25324	; 0x62ec
   21ef0:	movt	r0, #3
   21ef4:	mvn	r1, #0
   21ef8:	str	r1, [r0]
   21efc:	b	21f00 <__assert_fail@plt+0x10a24>
   21f00:	b	21f14 <__assert_fail@plt+0x10a38>
   21f04:	ldr	r0, [fp, #-4]
   21f08:	ldr	r1, [fp, #-8]
   21f0c:	bl	21e28 <__assert_fail@plt+0x1094c>
   21f10:	str	r0, [fp, #-12]
   21f14:	ldr	r0, [fp, #-12]
   21f18:	movw	r1, #0
   21f1c:	cmp	r1, r0
   21f20:	bgt	21fa8 <__assert_fail@plt+0x10acc>
   21f24:	movw	r0, #25324	; 0x62ec
   21f28:	movt	r0, #3
   21f2c:	ldr	r0, [r0]
   21f30:	cmn	r0, #1
   21f34:	bne	21fa8 <__assert_fail@plt+0x10acc>
   21f38:	ldr	r0, [fp, #-12]
   21f3c:	movw	r1, #1
   21f40:	bl	113ec <fcntl64@plt>
   21f44:	str	r0, [sp, #16]
   21f48:	ldr	r0, [sp, #16]
   21f4c:	cmp	r0, #0
   21f50:	blt	21f70 <__assert_fail@plt+0x10a94>
   21f54:	ldr	r0, [fp, #-12]
   21f58:	ldr	r1, [sp, #16]
   21f5c:	orr	r2, r1, #1
   21f60:	movw	r1, #2
   21f64:	bl	113ec <fcntl64@plt>
   21f68:	cmn	r0, #1
   21f6c:	bne	21fa4 <__assert_fail@plt+0x10ac8>
   21f70:	bl	11398 <__errno_location@plt>
   21f74:	ldr	r0, [r0]
   21f78:	str	r0, [sp, #12]
   21f7c:	ldr	r0, [fp, #-12]
   21f80:	bl	114a0 <close@plt>
   21f84:	ldr	r1, [sp, #12]
   21f88:	str	r0, [sp, #8]
   21f8c:	str	r1, [sp, #4]
   21f90:	bl	11398 <__errno_location@plt>
   21f94:	ldr	r1, [sp, #4]
   21f98:	str	r1, [r0]
   21f9c:	mvn	r0, #0
   21fa0:	str	r0, [fp, #-12]
   21fa4:	b	21fa8 <__assert_fail@plt+0x10acc>
   21fa8:	ldr	r0, [fp, #-12]
   21fac:	mov	sp, fp
   21fb0:	pop	{fp, pc}
   21fb4:	sub	sp, sp, #8
   21fb8:	push	{fp, lr}
   21fbc:	mov	fp, sp
   21fc0:	sub	sp, sp, #16
   21fc4:	str	r3, [fp, #12]
   21fc8:	str	r2, [fp, #8]
   21fcc:	str	r0, [fp, #-4]
   21fd0:	str	r1, [sp, #8]
   21fd4:	movw	r0, #0
   21fd8:	str	r0, [sp, #4]
   21fdc:	ldr	r0, [sp, #8]
   21fe0:	and	r0, r0, #64	; 0x40
   21fe4:	cmp	r0, #0
   21fe8:	beq	22010 <__assert_fail@plt+0x10b34>
   21fec:	mov	r0, sp
   21ff0:	mov	r1, r0
   21ff4:	add	r2, fp, #8
   21ff8:	str	r2, [r1]
   21ffc:	ldr	r1, [sp]
   22000:	add	r2, r1, #4
   22004:	str	r2, [sp]
   22008:	ldr	r1, [r1]
   2200c:	str	r1, [sp, #4]
   22010:	ldr	r0, [fp, #-4]
   22014:	ldr	r1, [sp, #8]
   22018:	ldr	r2, [sp, #4]
   2201c:	bl	112f0 <open64@plt>
   22020:	bl	1bb84 <__assert_fail@plt+0xa6a8>
   22024:	mov	sp, fp
   22028:	pop	{fp, lr}
   2202c:	add	sp, sp, #8
   22030:	bx	lr
   22034:	push	{fp, lr}
   22038:	mov	fp, sp
   2203c:	sub	sp, sp, #8
   22040:	str	r0, [sp]
   22044:	ldr	r0, [sp]
   22048:	movw	r1, #0
   2204c:	cmp	r0, r1
   22050:	beq	22064 <__assert_fail@plt+0x10b88>
   22054:	ldr	r0, [sp]
   22058:	bl	11314 <__freading@plt>
   2205c:	cmp	r0, #0
   22060:	bne	22074 <__assert_fail@plt+0x10b98>
   22064:	ldr	r0, [sp]
   22068:	bl	1120c <fflush@plt>
   2206c:	str	r0, [sp, #4]
   22070:	b	22088 <__assert_fail@plt+0x10bac>
   22074:	ldr	r0, [sp]
   22078:	bl	22094 <__assert_fail@plt+0x10bb8>
   2207c:	ldr	r0, [sp]
   22080:	bl	1120c <fflush@plt>
   22084:	str	r0, [sp, #4]
   22088:	ldr	r0, [sp, #4]
   2208c:	mov	sp, fp
   22090:	pop	{fp, pc}
   22094:	push	{fp, lr}
   22098:	mov	fp, sp
   2209c:	sub	sp, sp, #8
   220a0:	str	r0, [sp, #4]
   220a4:	ldr	r0, [sp, #4]
   220a8:	ldr	r0, [r0]
   220ac:	and	r0, r0, #256	; 0x100
   220b0:	cmp	r0, #0
   220b4:	beq	220d8 <__assert_fail@plt+0x10bfc>
   220b8:	ldr	r0, [sp, #4]
   220bc:	mov	r1, sp
   220c0:	mov	r2, #1
   220c4:	str	r2, [r1]
   220c8:	mov	r1, #0
   220cc:	mov	r2, r1
   220d0:	mov	r3, r1
   220d4:	bl	220e0 <__assert_fail@plt+0x10c04>
   220d8:	mov	sp, fp
   220dc:	pop	{fp, pc}
   220e0:	push	{fp, lr}
   220e4:	mov	fp, sp
   220e8:	sub	sp, sp, #32
   220ec:	ldr	r1, [fp, #8]
   220f0:	str	r0, [fp, #-8]
   220f4:	str	r3, [sp, #20]
   220f8:	str	r2, [sp, #16]
   220fc:	ldr	r0, [fp, #-8]
   22100:	ldr	r0, [r0, #8]
   22104:	ldr	r2, [fp, #-8]
   22108:	ldr	r2, [r2, #4]
   2210c:	cmp	r0, r2
   22110:	bne	221bc <__assert_fail@plt+0x10ce0>
   22114:	ldr	r0, [fp, #-8]
   22118:	ldr	r0, [r0, #20]
   2211c:	ldr	r1, [fp, #-8]
   22120:	ldr	r1, [r1, #16]
   22124:	cmp	r0, r1
   22128:	bne	221bc <__assert_fail@plt+0x10ce0>
   2212c:	ldr	r0, [fp, #-8]
   22130:	ldr	r0, [r0, #36]	; 0x24
   22134:	movw	r1, #0
   22138:	cmp	r0, r1
   2213c:	bne	221bc <__assert_fail@plt+0x10ce0>
   22140:	ldr	r0, [fp, #-8]
   22144:	bl	113bc <fileno@plt>
   22148:	ldr	r2, [sp, #16]
   2214c:	ldr	r3, [sp, #20]
   22150:	ldr	r1, [fp, #8]
   22154:	mov	ip, sp
   22158:	str	r1, [ip]
   2215c:	bl	112a8 <lseek64@plt>
   22160:	str	r1, [sp, #12]
   22164:	str	r0, [sp, #8]
   22168:	ldr	r0, [sp, #8]
   2216c:	ldr	r1, [sp, #12]
   22170:	and	r0, r0, r1
   22174:	cmn	r0, #1
   22178:	bne	2218c <__assert_fail@plt+0x10cb0>
   2217c:	b	22180 <__assert_fail@plt+0x10ca4>
   22180:	mvn	r0, #0
   22184:	str	r0, [fp, #-4]
   22188:	b	221dc <__assert_fail@plt+0x10d00>
   2218c:	ldr	r0, [fp, #-8]
   22190:	ldr	r1, [r0]
   22194:	bic	r1, r1, #16
   22198:	str	r1, [r0]
   2219c:	ldr	r0, [sp, #8]
   221a0:	ldr	r1, [sp, #12]
   221a4:	ldr	r2, [fp, #-8]
   221a8:	str	r1, [r2, #84]	; 0x54
   221ac:	str	r0, [r2, #80]	; 0x50
   221b0:	movw	r0, #0
   221b4:	str	r0, [fp, #-4]
   221b8:	b	221dc <__assert_fail@plt+0x10d00>
   221bc:	ldr	r0, [fp, #-8]
   221c0:	ldr	r2, [sp, #16]
   221c4:	ldr	r3, [sp, #20]
   221c8:	ldr	r1, [fp, #8]
   221cc:	mov	ip, sp
   221d0:	str	r1, [ip]
   221d4:	bl	113e0 <fseeko64@plt>
   221d8:	str	r0, [fp, #-4]
   221dc:	ldr	r0, [fp, #-4]
   221e0:	mov	sp, fp
   221e4:	pop	{fp, pc}
   221e8:	push	{fp, lr}
   221ec:	mov	fp, sp
   221f0:	bl	11398 <__errno_location@plt>
   221f4:	movw	r1, #12
   221f8:	str	r1, [r0]
   221fc:	movw	r0, #0
   22200:	pop	{fp, pc}
   22204:	push	{fp, lr}
   22208:	mov	fp, sp
   2220c:	sub	sp, sp, #8
   22210:	str	r0, [sp, #4]
   22214:	ldr	r0, [sp, #4]
   22218:	cmn	r0, #1
   2221c:	bhi	22230 <__assert_fail@plt+0x10d54>
   22220:	ldr	r0, [sp, #4]
   22224:	bl	2137c <__assert_fail@plt+0xfea0>
   22228:	str	r0, [sp]
   2222c:	b	22238 <__assert_fail@plt+0x10d5c>
   22230:	bl	221e8 <__assert_fail@plt+0x10d0c>
   22234:	str	r0, [sp]
   22238:	ldr	r0, [sp]
   2223c:	mov	sp, fp
   22240:	pop	{fp, pc}
   22244:	push	{fp, lr}
   22248:	mov	fp, sp
   2224c:	sub	sp, sp, #16
   22250:	str	r0, [fp, #-4]
   22254:	str	r1, [sp, #8]
   22258:	ldr	r0, [sp, #8]
   2225c:	cmn	r0, #1
   22260:	bhi	22298 <__assert_fail@plt+0x10dbc>
   22264:	ldr	r0, [fp, #-4]
   22268:	ldr	r1, [sp, #8]
   2226c:	ldr	r2, [sp, #8]
   22270:	cmp	r2, #0
   22274:	movw	r2, #0
   22278:	movne	r2, #1
   2227c:	mvn	r3, #0
   22280:	eor	r2, r2, r3
   22284:	and	r2, r2, #1
   22288:	orr	r1, r1, r2
   2228c:	bl	213ec <__assert_fail@plt+0xff10>
   22290:	str	r0, [sp, #4]
   22294:	b	222a0 <__assert_fail@plt+0x10dc4>
   22298:	bl	221e8 <__assert_fail@plt+0x10d0c>
   2229c:	str	r0, [sp, #4]
   222a0:	ldr	r0, [sp, #4]
   222a4:	mov	sp, fp
   222a8:	pop	{fp, pc}
   222ac:	push	{fp, lr}
   222b0:	mov	fp, sp
   222b4:	sub	sp, sp, #16
   222b8:	str	r0, [sp, #8]
   222bc:	str	r1, [sp, #4]
   222c0:	ldr	r0, [sp, #8]
   222c4:	mvn	r1, #0
   222c8:	cmp	r1, r0
   222cc:	bcs	222f0 <__assert_fail@plt+0x10e14>
   222d0:	ldr	r0, [sp, #4]
   222d4:	cmp	r0, #0
   222d8:	beq	222e8 <__assert_fail@plt+0x10e0c>
   222dc:	bl	221e8 <__assert_fail@plt+0x10d0c>
   222e0:	str	r0, [fp, #-4]
   222e4:	b	22330 <__assert_fail@plt+0x10e54>
   222e8:	movw	r0, #0
   222ec:	str	r0, [sp, #8]
   222f0:	ldr	r0, [sp, #4]
   222f4:	mvn	r1, #0
   222f8:	cmp	r1, r0
   222fc:	bcs	22320 <__assert_fail@plt+0x10e44>
   22300:	ldr	r0, [sp, #8]
   22304:	cmp	r0, #0
   22308:	beq	22318 <__assert_fail@plt+0x10e3c>
   2230c:	bl	221e8 <__assert_fail@plt+0x10d0c>
   22310:	str	r0, [fp, #-4]
   22314:	b	22330 <__assert_fail@plt+0x10e54>
   22318:	movw	r0, #0
   2231c:	str	r0, [sp, #4]
   22320:	ldr	r0, [sp, #8]
   22324:	ldr	r1, [sp, #4]
   22328:	bl	212e0 <__assert_fail@plt+0xfe04>
   2232c:	str	r0, [fp, #-4]
   22330:	ldr	r0, [fp, #-4]
   22334:	mov	sp, fp
   22338:	pop	{fp, pc}
   2233c:	push	{fp, lr}
   22340:	mov	fp, sp
   22344:	sub	sp, sp, #16
   22348:	str	r0, [fp, #-4]
   2234c:	str	r1, [sp, #8]
   22350:	str	r2, [sp, #4]
   22354:	ldr	r0, [sp, #8]
   22358:	cmp	r0, #0
   2235c:	beq	2236c <__assert_fail@plt+0x10e90>
   22360:	ldr	r0, [sp, #4]
   22364:	cmp	r0, #0
   22368:	bne	22378 <__assert_fail@plt+0x10e9c>
   2236c:	movw	r0, #1
   22370:	str	r0, [sp, #4]
   22374:	str	r0, [sp, #8]
   22378:	ldr	r0, [sp, #8]
   2237c:	cmn	r0, #1
   22380:	bhi	223a8 <__assert_fail@plt+0x10ecc>
   22384:	ldr	r0, [sp, #4]
   22388:	cmn	r0, #1
   2238c:	bhi	223a8 <__assert_fail@plt+0x10ecc>
   22390:	ldr	r0, [fp, #-4]
   22394:	ldr	r1, [sp, #8]
   22398:	ldr	r2, [sp, #4]
   2239c:	bl	224c8 <__assert_fail@plt+0x10fec>
   223a0:	str	r0, [sp]
   223a4:	b	223b0 <__assert_fail@plt+0x10ed4>
   223a8:	bl	221e8 <__assert_fail@plt+0x10d0c>
   223ac:	str	r0, [sp]
   223b0:	ldr	r0, [sp]
   223b4:	mov	sp, fp
   223b8:	pop	{fp, pc}
   223bc:	push	{fp, lr}
   223c0:	mov	fp, sp
   223c4:	sub	sp, sp, #8
   223c8:	movw	r0, #14
   223cc:	bl	11410 <nl_langinfo@plt>
   223d0:	str	r0, [sp, #4]
   223d4:	ldr	r0, [sp, #4]
   223d8:	movw	r1, #0
   223dc:	cmp	r0, r1
   223e0:	bne	223f0 <__assert_fail@plt+0x10f14>
   223e4:	movw	r0, #18848	; 0x49a0
   223e8:	movt	r0, #2
   223ec:	str	r0, [sp, #4]
   223f0:	ldr	r0, [sp, #4]
   223f4:	ldrb	r0, [r0]
   223f8:	cmp	r0, #0
   223fc:	bne	2240c <__assert_fail@plt+0x10f30>
   22400:	movw	r0, #22464	; 0x57c0
   22404:	movt	r0, #2
   22408:	str	r0, [sp, #4]
   2240c:	ldr	r0, [sp, #4]
   22410:	mov	sp, fp
   22414:	pop	{fp, pc}
   22418:	push	{fp, lr}
   2241c:	mov	fp, sp
   22420:	sub	sp, sp, #32
   22424:	str	r0, [fp, #-8]
   22428:	str	r1, [fp, #-12]
   2242c:	str	r2, [sp, #16]
   22430:	str	r3, [sp, #12]
   22434:	ldr	r0, [fp, #-8]
   22438:	movw	r1, #0
   2243c:	cmp	r0, r1
   22440:	bne	2244c <__assert_fail@plt+0x10f70>
   22444:	add	r0, sp, #4
   22448:	str	r0, [fp, #-8]
   2244c:	ldr	r0, [fp, #-8]
   22450:	ldr	r1, [fp, #-12]
   22454:	ldr	r2, [sp, #16]
   22458:	ldr	r3, [sp, #12]
   2245c:	bl	112d8 <mbrtowc@plt>
   22460:	str	r0, [sp, #8]
   22464:	ldr	r0, [sp, #8]
   22468:	mvn	r1, #1
   2246c:	cmp	r1, r0
   22470:	bhi	224b4 <__assert_fail@plt+0x10fd8>
   22474:	ldr	r0, [sp, #16]
   22478:	cmp	r0, #0
   2247c:	beq	224b4 <__assert_fail@plt+0x10fd8>
   22480:	movw	r0, #0
   22484:	bl	23e70 <__assert_fail@plt+0x12994>
   22488:	tst	r0, #1
   2248c:	bne	224b4 <__assert_fail@plt+0x10fd8>
   22490:	ldr	r0, [fp, #-12]
   22494:	ldrb	r0, [r0]
   22498:	strb	r0, [sp, #3]
   2249c:	ldrb	r0, [sp, #3]
   224a0:	ldr	r1, [fp, #-8]
   224a4:	str	r0, [r1]
   224a8:	movw	r0, #1
   224ac:	str	r0, [fp, #-4]
   224b0:	b	224bc <__assert_fail@plt+0x10fe0>
   224b4:	ldr	r0, [sp, #8]
   224b8:	str	r0, [fp, #-4]
   224bc:	ldr	r0, [fp, #-4]
   224c0:	mov	sp, fp
   224c4:	pop	{fp, pc}
   224c8:	push	{fp, lr}
   224cc:	mov	fp, sp
   224d0:	sub	sp, sp, #96	; 0x60
   224d4:	str	r0, [fp, #-8]
   224d8:	str	r1, [fp, #-12]
   224dc:	str	r2, [fp, #-16]
   224e0:	b	22898 <__assert_fail@plt+0x113bc>
   224e4:	b	226b8 <__assert_fail@plt+0x111dc>
   224e8:	ldr	r0, [fp, #-16]
   224ec:	cmp	r0, #0
   224f0:	bcs	225f4 <__assert_fail@plt+0x11118>
   224f4:	ldr	r0, [fp, #-12]
   224f8:	cmp	r0, #0
   224fc:	bcs	22584 <__assert_fail@plt+0x110a8>
   22500:	b	22520 <__assert_fail@plt+0x11044>
   22504:	ldr	r0, [fp, #-12]
   22508:	ldr	r1, [fp, #-16]
   2250c:	movw	r2, #127	; 0x7f
   22510:	udiv	r1, r2, r1
   22514:	cmp	r0, r1
   22518:	bcc	22688 <__assert_fail@plt+0x111ac>
   2251c:	b	226a0 <__assert_fail@plt+0x111c4>
   22520:	b	22534 <__assert_fail@plt+0x11058>
   22524:	ldr	r0, [fp, #-16]
   22528:	cmp	r0, #1
   2252c:	bcc	22544 <__assert_fail@plt+0x11068>
   22530:	b	22550 <__assert_fail@plt+0x11074>
   22534:	ldr	r0, [fp, #-16]
   22538:	movw	r1, #0
   2253c:	cmp	r1, r0
   22540:	bcs	22550 <__assert_fail@plt+0x11074>
   22544:	movw	r0, #0
   22548:	str	r0, [fp, #-24]	; 0xffffffe8
   2254c:	b	22568 <__assert_fail@plt+0x1108c>
   22550:	ldr	r0, [fp, #-16]
   22554:	movw	r1, #0
   22558:	sub	r0, r1, r0
   2255c:	movw	r1, #127	; 0x7f
   22560:	udiv	r0, r1, r0
   22564:	str	r0, [fp, #-24]	; 0xffffffe8
   22568:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2256c:	ldr	r1, [fp, #-12]
   22570:	mvn	r2, #0
   22574:	sub	r1, r2, r1
   22578:	cmp	r0, r1
   2257c:	bls	22688 <__assert_fail@plt+0x111ac>
   22580:	b	226a0 <__assert_fail@plt+0x111c4>
   22584:	ldr	r0, [fp, #-16]
   22588:	cmn	r0, #1
   2258c:	bne	225d8 <__assert_fail@plt+0x110fc>
   22590:	b	225b0 <__assert_fail@plt+0x110d4>
   22594:	ldr	r0, [fp, #-12]
   22598:	mvn	r1, #127	; 0x7f
   2259c:	add	r0, r0, r1
   225a0:	movw	r1, #0
   225a4:	cmp	r1, r0
   225a8:	bcc	22688 <__assert_fail@plt+0x111ac>
   225ac:	b	226a0 <__assert_fail@plt+0x111c4>
   225b0:	ldr	r0, [fp, #-12]
   225b4:	movw	r1, #0
   225b8:	cmp	r1, r0
   225bc:	bcs	226a0 <__assert_fail@plt+0x111c4>
   225c0:	ldr	r0, [fp, #-12]
   225c4:	sub	r0, r0, #1
   225c8:	movw	r1, #127	; 0x7f
   225cc:	cmp	r1, r0
   225d0:	bcc	22688 <__assert_fail@plt+0x111ac>
   225d4:	b	226a0 <__assert_fail@plt+0x111c4>
   225d8:	ldr	r0, [fp, #-16]
   225dc:	mvn	r1, #127	; 0x7f
   225e0:	udiv	r0, r1, r0
   225e4:	ldr	r1, [fp, #-12]
   225e8:	cmp	r0, r1
   225ec:	bcc	22688 <__assert_fail@plt+0x111ac>
   225f0:	b	226a0 <__assert_fail@plt+0x111c4>
   225f4:	ldr	r0, [fp, #-16]
   225f8:	cmp	r0, #0
   225fc:	bne	22604 <__assert_fail@plt+0x11128>
   22600:	b	226a0 <__assert_fail@plt+0x111c4>
   22604:	ldr	r0, [fp, #-12]
   22608:	cmp	r0, #0
   2260c:	bcs	22670 <__assert_fail@plt+0x11194>
   22610:	ldr	r0, [fp, #-12]
   22614:	cmn	r0, #1
   22618:	bne	22654 <__assert_fail@plt+0x11178>
   2261c:	b	2263c <__assert_fail@plt+0x11160>
   22620:	ldr	r0, [fp, #-16]
   22624:	mvn	r1, #127	; 0x7f
   22628:	add	r0, r0, r1
   2262c:	movw	r1, #0
   22630:	cmp	r1, r0
   22634:	bcc	22688 <__assert_fail@plt+0x111ac>
   22638:	b	226a0 <__assert_fail@plt+0x111c4>
   2263c:	ldr	r0, [fp, #-16]
   22640:	sub	r0, r0, #1
   22644:	movw	r1, #127	; 0x7f
   22648:	cmp	r1, r0
   2264c:	bcc	22688 <__assert_fail@plt+0x111ac>
   22650:	b	226a0 <__assert_fail@plt+0x111c4>
   22654:	ldr	r0, [fp, #-12]
   22658:	mvn	r1, #127	; 0x7f
   2265c:	udiv	r0, r1, r0
   22660:	ldr	r1, [fp, #-16]
   22664:	cmp	r0, r1
   22668:	bcc	22688 <__assert_fail@plt+0x111ac>
   2266c:	b	226a0 <__assert_fail@plt+0x111c4>
   22670:	ldr	r0, [fp, #-16]
   22674:	movw	r1, #127	; 0x7f
   22678:	udiv	r0, r1, r0
   2267c:	ldr	r1, [fp, #-12]
   22680:	cmp	r0, r1
   22684:	bcs	226a0 <__assert_fail@plt+0x111c4>
   22688:	ldr	r0, [fp, #-12]
   2268c:	ldr	r1, [fp, #-16]
   22690:	mul	r0, r0, r1
   22694:	sxtb	r0, r0
   22698:	str	r0, [fp, #-20]	; 0xffffffec
   2269c:	b	237c8 <__assert_fail@plt+0x122ec>
   226a0:	ldr	r0, [fp, #-12]
   226a4:	ldr	r1, [fp, #-16]
   226a8:	mul	r0, r0, r1
   226ac:	sxtb	r0, r0
   226b0:	str	r0, [fp, #-20]	; 0xffffffec
   226b4:	b	237e0 <__assert_fail@plt+0x12304>
   226b8:	ldr	r0, [fp, #-16]
   226bc:	cmp	r0, #0
   226c0:	bcs	227cc <__assert_fail@plt+0x112f0>
   226c4:	ldr	r0, [fp, #-12]
   226c8:	cmp	r0, #0
   226cc:	bcs	22754 <__assert_fail@plt+0x11278>
   226d0:	b	226f0 <__assert_fail@plt+0x11214>
   226d4:	ldr	r0, [fp, #-12]
   226d8:	ldr	r1, [fp, #-16]
   226dc:	movw	r2, #255	; 0xff
   226e0:	udiv	r1, r2, r1
   226e4:	cmp	r0, r1
   226e8:	bcc	22868 <__assert_fail@plt+0x1138c>
   226ec:	b	22880 <__assert_fail@plt+0x113a4>
   226f0:	b	22704 <__assert_fail@plt+0x11228>
   226f4:	ldr	r0, [fp, #-16]
   226f8:	cmp	r0, #1
   226fc:	bcc	22714 <__assert_fail@plt+0x11238>
   22700:	b	22720 <__assert_fail@plt+0x11244>
   22704:	ldr	r0, [fp, #-16]
   22708:	movw	r1, #0
   2270c:	cmp	r1, r0
   22710:	bcs	22720 <__assert_fail@plt+0x11244>
   22714:	movw	r0, #0
   22718:	str	r0, [fp, #-28]	; 0xffffffe4
   2271c:	b	22738 <__assert_fail@plt+0x1125c>
   22720:	ldr	r0, [fp, #-16]
   22724:	movw	r1, #0
   22728:	sub	r0, r1, r0
   2272c:	movw	r1, #255	; 0xff
   22730:	udiv	r0, r1, r0
   22734:	str	r0, [fp, #-28]	; 0xffffffe4
   22738:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2273c:	ldr	r1, [fp, #-12]
   22740:	mvn	r2, #0
   22744:	sub	r1, r2, r1
   22748:	cmp	r0, r1
   2274c:	bls	22868 <__assert_fail@plt+0x1138c>
   22750:	b	22880 <__assert_fail@plt+0x113a4>
   22754:	b	2275c <__assert_fail@plt+0x11280>
   22758:	b	22760 <__assert_fail@plt+0x11284>
   2275c:	b	227b0 <__assert_fail@plt+0x112d4>
   22760:	ldr	r0, [fp, #-16]
   22764:	cmn	r0, #1
   22768:	bne	227b0 <__assert_fail@plt+0x112d4>
   2276c:	b	22788 <__assert_fail@plt+0x112ac>
   22770:	ldr	r0, [fp, #-12]
   22774:	add	r0, r0, #0
   22778:	movw	r1, #0
   2277c:	cmp	r1, r0
   22780:	bcc	22868 <__assert_fail@plt+0x1138c>
   22784:	b	22880 <__assert_fail@plt+0x113a4>
   22788:	ldr	r0, [fp, #-12]
   2278c:	movw	r1, #0
   22790:	cmp	r1, r0
   22794:	bcs	22880 <__assert_fail@plt+0x113a4>
   22798:	ldr	r0, [fp, #-12]
   2279c:	sub	r0, r0, #1
   227a0:	mvn	r1, #0
   227a4:	cmp	r1, r0
   227a8:	bcc	22868 <__assert_fail@plt+0x1138c>
   227ac:	b	22880 <__assert_fail@plt+0x113a4>
   227b0:	ldr	r0, [fp, #-16]
   227b4:	movw	r1, #0
   227b8:	udiv	r0, r1, r0
   227bc:	ldr	r1, [fp, #-12]
   227c0:	cmp	r0, r1
   227c4:	bcc	22868 <__assert_fail@plt+0x1138c>
   227c8:	b	22880 <__assert_fail@plt+0x113a4>
   227cc:	ldr	r0, [fp, #-16]
   227d0:	cmp	r0, #0
   227d4:	bne	227dc <__assert_fail@plt+0x11300>
   227d8:	b	22880 <__assert_fail@plt+0x113a4>
   227dc:	ldr	r0, [fp, #-12]
   227e0:	cmp	r0, #0
   227e4:	bcs	22850 <__assert_fail@plt+0x11374>
   227e8:	b	227f0 <__assert_fail@plt+0x11314>
   227ec:	b	227f4 <__assert_fail@plt+0x11318>
   227f0:	b	22834 <__assert_fail@plt+0x11358>
   227f4:	ldr	r0, [fp, #-12]
   227f8:	cmn	r0, #1
   227fc:	bne	22834 <__assert_fail@plt+0x11358>
   22800:	b	2281c <__assert_fail@plt+0x11340>
   22804:	ldr	r0, [fp, #-16]
   22808:	add	r0, r0, #0
   2280c:	movw	r1, #0
   22810:	cmp	r1, r0
   22814:	bcc	22868 <__assert_fail@plt+0x1138c>
   22818:	b	22880 <__assert_fail@plt+0x113a4>
   2281c:	ldr	r0, [fp, #-16]
   22820:	sub	r0, r0, #1
   22824:	mvn	r1, #0
   22828:	cmp	r1, r0
   2282c:	bcc	22868 <__assert_fail@plt+0x1138c>
   22830:	b	22880 <__assert_fail@plt+0x113a4>
   22834:	ldr	r0, [fp, #-12]
   22838:	movw	r1, #0
   2283c:	udiv	r0, r1, r0
   22840:	ldr	r1, [fp, #-16]
   22844:	cmp	r0, r1
   22848:	bcc	22868 <__assert_fail@plt+0x1138c>
   2284c:	b	22880 <__assert_fail@plt+0x113a4>
   22850:	ldr	r0, [fp, #-16]
   22854:	movw	r1, #255	; 0xff
   22858:	udiv	r0, r1, r0
   2285c:	ldr	r1, [fp, #-12]
   22860:	cmp	r0, r1
   22864:	bcs	22880 <__assert_fail@plt+0x113a4>
   22868:	ldr	r0, [fp, #-12]
   2286c:	ldr	r1, [fp, #-16]
   22870:	mul	r0, r0, r1
   22874:	and	r0, r0, #255	; 0xff
   22878:	str	r0, [fp, #-20]	; 0xffffffec
   2287c:	b	237c8 <__assert_fail@plt+0x122ec>
   22880:	ldr	r0, [fp, #-12]
   22884:	ldr	r1, [fp, #-16]
   22888:	mul	r0, r0, r1
   2288c:	and	r0, r0, #255	; 0xff
   22890:	str	r0, [fp, #-20]	; 0xffffffec
   22894:	b	237e0 <__assert_fail@plt+0x12304>
   22898:	b	22c50 <__assert_fail@plt+0x11774>
   2289c:	b	22a70 <__assert_fail@plt+0x11594>
   228a0:	ldr	r0, [fp, #-16]
   228a4:	cmp	r0, #0
   228a8:	bcs	229ac <__assert_fail@plt+0x114d0>
   228ac:	ldr	r0, [fp, #-12]
   228b0:	cmp	r0, #0
   228b4:	bcs	2293c <__assert_fail@plt+0x11460>
   228b8:	b	228d8 <__assert_fail@plt+0x113fc>
   228bc:	ldr	r0, [fp, #-12]
   228c0:	ldr	r1, [fp, #-16]
   228c4:	movw	r2, #32767	; 0x7fff
   228c8:	udiv	r1, r2, r1
   228cc:	cmp	r0, r1
   228d0:	bcc	22a40 <__assert_fail@plt+0x11564>
   228d4:	b	22a58 <__assert_fail@plt+0x1157c>
   228d8:	b	228ec <__assert_fail@plt+0x11410>
   228dc:	ldr	r0, [fp, #-16]
   228e0:	cmp	r0, #1
   228e4:	bcc	228fc <__assert_fail@plt+0x11420>
   228e8:	b	22908 <__assert_fail@plt+0x1142c>
   228ec:	ldr	r0, [fp, #-16]
   228f0:	movw	r1, #0
   228f4:	cmp	r1, r0
   228f8:	bcs	22908 <__assert_fail@plt+0x1142c>
   228fc:	movw	r0, #0
   22900:	str	r0, [fp, #-32]	; 0xffffffe0
   22904:	b	22920 <__assert_fail@plt+0x11444>
   22908:	ldr	r0, [fp, #-16]
   2290c:	movw	r1, #0
   22910:	sub	r0, r1, r0
   22914:	movw	r1, #32767	; 0x7fff
   22918:	udiv	r0, r1, r0
   2291c:	str	r0, [fp, #-32]	; 0xffffffe0
   22920:	ldr	r0, [fp, #-32]	; 0xffffffe0
   22924:	ldr	r1, [fp, #-12]
   22928:	mvn	r2, #0
   2292c:	sub	r1, r2, r1
   22930:	cmp	r0, r1
   22934:	bls	22a40 <__assert_fail@plt+0x11564>
   22938:	b	22a58 <__assert_fail@plt+0x1157c>
   2293c:	ldr	r0, [fp, #-16]
   22940:	cmn	r0, #1
   22944:	bne	22990 <__assert_fail@plt+0x114b4>
   22948:	b	22968 <__assert_fail@plt+0x1148c>
   2294c:	ldr	r0, [pc, #3760]	; 23804 <__assert_fail@plt+0x12328>
   22950:	ldr	r1, [fp, #-12]
   22954:	add	r0, r1, r0
   22958:	movw	r1, #0
   2295c:	cmp	r1, r0
   22960:	bcc	22a40 <__assert_fail@plt+0x11564>
   22964:	b	22a58 <__assert_fail@plt+0x1157c>
   22968:	ldr	r0, [fp, #-12]
   2296c:	movw	r1, #0
   22970:	cmp	r1, r0
   22974:	bcs	22a58 <__assert_fail@plt+0x1157c>
   22978:	ldr	r0, [fp, #-12]
   2297c:	sub	r0, r0, #1
   22980:	movw	r1, #32767	; 0x7fff
   22984:	cmp	r1, r0
   22988:	bcc	22a40 <__assert_fail@plt+0x11564>
   2298c:	b	22a58 <__assert_fail@plt+0x1157c>
   22990:	ldr	r0, [pc, #3692]	; 23804 <__assert_fail@plt+0x12328>
   22994:	ldr	r1, [fp, #-16]
   22998:	udiv	r0, r0, r1
   2299c:	ldr	r1, [fp, #-12]
   229a0:	cmp	r0, r1
   229a4:	bcc	22a40 <__assert_fail@plt+0x11564>
   229a8:	b	22a58 <__assert_fail@plt+0x1157c>
   229ac:	ldr	r0, [fp, #-16]
   229b0:	cmp	r0, #0
   229b4:	bne	229bc <__assert_fail@plt+0x114e0>
   229b8:	b	22a58 <__assert_fail@plt+0x1157c>
   229bc:	ldr	r0, [fp, #-12]
   229c0:	cmp	r0, #0
   229c4:	bcs	22a28 <__assert_fail@plt+0x1154c>
   229c8:	ldr	r0, [fp, #-12]
   229cc:	cmn	r0, #1
   229d0:	bne	22a0c <__assert_fail@plt+0x11530>
   229d4:	b	229f4 <__assert_fail@plt+0x11518>
   229d8:	ldr	r0, [pc, #3620]	; 23804 <__assert_fail@plt+0x12328>
   229dc:	ldr	r1, [fp, #-16]
   229e0:	add	r0, r1, r0
   229e4:	movw	r1, #0
   229e8:	cmp	r1, r0
   229ec:	bcc	22a40 <__assert_fail@plt+0x11564>
   229f0:	b	22a58 <__assert_fail@plt+0x1157c>
   229f4:	ldr	r0, [fp, #-16]
   229f8:	sub	r0, r0, #1
   229fc:	movw	r1, #32767	; 0x7fff
   22a00:	cmp	r1, r0
   22a04:	bcc	22a40 <__assert_fail@plt+0x11564>
   22a08:	b	22a58 <__assert_fail@plt+0x1157c>
   22a0c:	ldr	r0, [pc, #3568]	; 23804 <__assert_fail@plt+0x12328>
   22a10:	ldr	r1, [fp, #-12]
   22a14:	udiv	r0, r0, r1
   22a18:	ldr	r1, [fp, #-16]
   22a1c:	cmp	r0, r1
   22a20:	bcc	22a40 <__assert_fail@plt+0x11564>
   22a24:	b	22a58 <__assert_fail@plt+0x1157c>
   22a28:	ldr	r0, [fp, #-16]
   22a2c:	movw	r1, #32767	; 0x7fff
   22a30:	udiv	r0, r1, r0
   22a34:	ldr	r1, [fp, #-12]
   22a38:	cmp	r0, r1
   22a3c:	bcs	22a58 <__assert_fail@plt+0x1157c>
   22a40:	ldr	r0, [fp, #-12]
   22a44:	ldr	r1, [fp, #-16]
   22a48:	mul	r0, r0, r1
   22a4c:	sxth	r0, r0
   22a50:	str	r0, [fp, #-20]	; 0xffffffec
   22a54:	b	237c8 <__assert_fail@plt+0x122ec>
   22a58:	ldr	r0, [fp, #-12]
   22a5c:	ldr	r1, [fp, #-16]
   22a60:	mul	r0, r0, r1
   22a64:	sxth	r0, r0
   22a68:	str	r0, [fp, #-20]	; 0xffffffec
   22a6c:	b	237e0 <__assert_fail@plt+0x12304>
   22a70:	ldr	r0, [fp, #-16]
   22a74:	cmp	r0, #0
   22a78:	bcs	22b84 <__assert_fail@plt+0x116a8>
   22a7c:	ldr	r0, [fp, #-12]
   22a80:	cmp	r0, #0
   22a84:	bcs	22b0c <__assert_fail@plt+0x11630>
   22a88:	b	22aa8 <__assert_fail@plt+0x115cc>
   22a8c:	ldr	r0, [fp, #-12]
   22a90:	ldr	r1, [fp, #-16]
   22a94:	movw	r2, #65535	; 0xffff
   22a98:	udiv	r1, r2, r1
   22a9c:	cmp	r0, r1
   22aa0:	bcc	22c20 <__assert_fail@plt+0x11744>
   22aa4:	b	22c38 <__assert_fail@plt+0x1175c>
   22aa8:	b	22abc <__assert_fail@plt+0x115e0>
   22aac:	ldr	r0, [fp, #-16]
   22ab0:	cmp	r0, #1
   22ab4:	bcc	22acc <__assert_fail@plt+0x115f0>
   22ab8:	b	22ad8 <__assert_fail@plt+0x115fc>
   22abc:	ldr	r0, [fp, #-16]
   22ac0:	movw	r1, #0
   22ac4:	cmp	r1, r0
   22ac8:	bcs	22ad8 <__assert_fail@plt+0x115fc>
   22acc:	movw	r0, #0
   22ad0:	str	r0, [fp, #-36]	; 0xffffffdc
   22ad4:	b	22af0 <__assert_fail@plt+0x11614>
   22ad8:	ldr	r0, [fp, #-16]
   22adc:	movw	r1, #0
   22ae0:	sub	r0, r1, r0
   22ae4:	movw	r1, #65535	; 0xffff
   22ae8:	udiv	r0, r1, r0
   22aec:	str	r0, [fp, #-36]	; 0xffffffdc
   22af0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   22af4:	ldr	r1, [fp, #-12]
   22af8:	mvn	r2, #0
   22afc:	sub	r1, r2, r1
   22b00:	cmp	r0, r1
   22b04:	bls	22c20 <__assert_fail@plt+0x11744>
   22b08:	b	22c38 <__assert_fail@plt+0x1175c>
   22b0c:	b	22b14 <__assert_fail@plt+0x11638>
   22b10:	b	22b18 <__assert_fail@plt+0x1163c>
   22b14:	b	22b68 <__assert_fail@plt+0x1168c>
   22b18:	ldr	r0, [fp, #-16]
   22b1c:	cmn	r0, #1
   22b20:	bne	22b68 <__assert_fail@plt+0x1168c>
   22b24:	b	22b40 <__assert_fail@plt+0x11664>
   22b28:	ldr	r0, [fp, #-12]
   22b2c:	add	r0, r0, #0
   22b30:	movw	r1, #0
   22b34:	cmp	r1, r0
   22b38:	bcc	22c20 <__assert_fail@plt+0x11744>
   22b3c:	b	22c38 <__assert_fail@plt+0x1175c>
   22b40:	ldr	r0, [fp, #-12]
   22b44:	movw	r1, #0
   22b48:	cmp	r1, r0
   22b4c:	bcs	22c38 <__assert_fail@plt+0x1175c>
   22b50:	ldr	r0, [fp, #-12]
   22b54:	sub	r0, r0, #1
   22b58:	mvn	r1, #0
   22b5c:	cmp	r1, r0
   22b60:	bcc	22c20 <__assert_fail@plt+0x11744>
   22b64:	b	22c38 <__assert_fail@plt+0x1175c>
   22b68:	ldr	r0, [fp, #-16]
   22b6c:	movw	r1, #0
   22b70:	udiv	r0, r1, r0
   22b74:	ldr	r1, [fp, #-12]
   22b78:	cmp	r0, r1
   22b7c:	bcc	22c20 <__assert_fail@plt+0x11744>
   22b80:	b	22c38 <__assert_fail@plt+0x1175c>
   22b84:	ldr	r0, [fp, #-16]
   22b88:	cmp	r0, #0
   22b8c:	bne	22b94 <__assert_fail@plt+0x116b8>
   22b90:	b	22c38 <__assert_fail@plt+0x1175c>
   22b94:	ldr	r0, [fp, #-12]
   22b98:	cmp	r0, #0
   22b9c:	bcs	22c08 <__assert_fail@plt+0x1172c>
   22ba0:	b	22ba8 <__assert_fail@plt+0x116cc>
   22ba4:	b	22bac <__assert_fail@plt+0x116d0>
   22ba8:	b	22bec <__assert_fail@plt+0x11710>
   22bac:	ldr	r0, [fp, #-12]
   22bb0:	cmn	r0, #1
   22bb4:	bne	22bec <__assert_fail@plt+0x11710>
   22bb8:	b	22bd4 <__assert_fail@plt+0x116f8>
   22bbc:	ldr	r0, [fp, #-16]
   22bc0:	add	r0, r0, #0
   22bc4:	movw	r1, #0
   22bc8:	cmp	r1, r0
   22bcc:	bcc	22c20 <__assert_fail@plt+0x11744>
   22bd0:	b	22c38 <__assert_fail@plt+0x1175c>
   22bd4:	ldr	r0, [fp, #-16]
   22bd8:	sub	r0, r0, #1
   22bdc:	mvn	r1, #0
   22be0:	cmp	r1, r0
   22be4:	bcc	22c20 <__assert_fail@plt+0x11744>
   22be8:	b	22c38 <__assert_fail@plt+0x1175c>
   22bec:	ldr	r0, [fp, #-12]
   22bf0:	movw	r1, #0
   22bf4:	udiv	r0, r1, r0
   22bf8:	ldr	r1, [fp, #-16]
   22bfc:	cmp	r0, r1
   22c00:	bcc	22c20 <__assert_fail@plt+0x11744>
   22c04:	b	22c38 <__assert_fail@plt+0x1175c>
   22c08:	ldr	r0, [fp, #-16]
   22c0c:	movw	r1, #65535	; 0xffff
   22c10:	udiv	r0, r1, r0
   22c14:	ldr	r1, [fp, #-12]
   22c18:	cmp	r0, r1
   22c1c:	bcs	22c38 <__assert_fail@plt+0x1175c>
   22c20:	ldr	r0, [fp, #-12]
   22c24:	ldr	r1, [fp, #-16]
   22c28:	mul	r0, r0, r1
   22c2c:	uxth	r0, r0
   22c30:	str	r0, [fp, #-20]	; 0xffffffec
   22c34:	b	237c8 <__assert_fail@plt+0x122ec>
   22c38:	ldr	r0, [fp, #-12]
   22c3c:	ldr	r1, [fp, #-16]
   22c40:	mul	r0, r0, r1
   22c44:	uxth	r0, r0
   22c48:	str	r0, [fp, #-20]	; 0xffffffec
   22c4c:	b	237e0 <__assert_fail@plt+0x12304>
   22c50:	b	22c54 <__assert_fail@plt+0x11778>
   22c54:	b	22e18 <__assert_fail@plt+0x1193c>
   22c58:	ldr	r0, [fp, #-16]
   22c5c:	cmp	r0, #0
   22c60:	bcs	22d60 <__assert_fail@plt+0x11884>
   22c64:	ldr	r0, [fp, #-12]
   22c68:	cmp	r0, #0
   22c6c:	bcs	22cf4 <__assert_fail@plt+0x11818>
   22c70:	b	22c90 <__assert_fail@plt+0x117b4>
   22c74:	ldr	r0, [pc, #2944]	; 237fc <__assert_fail@plt+0x12320>
   22c78:	ldr	r1, [fp, #-12]
   22c7c:	ldr	r2, [fp, #-16]
   22c80:	udiv	r0, r0, r2
   22c84:	cmp	r1, r0
   22c88:	bcc	22df0 <__assert_fail@plt+0x11914>
   22c8c:	b	22e04 <__assert_fail@plt+0x11928>
   22c90:	b	22ca4 <__assert_fail@plt+0x117c8>
   22c94:	ldr	r0, [fp, #-16]
   22c98:	cmp	r0, #1
   22c9c:	bcc	22cb4 <__assert_fail@plt+0x117d8>
   22ca0:	b	22cc0 <__assert_fail@plt+0x117e4>
   22ca4:	ldr	r0, [fp, #-16]
   22ca8:	movw	r1, #0
   22cac:	cmp	r1, r0
   22cb0:	bcs	22cc0 <__assert_fail@plt+0x117e4>
   22cb4:	movw	r0, #0
   22cb8:	str	r0, [fp, #-40]	; 0xffffffd8
   22cbc:	b	22cd8 <__assert_fail@plt+0x117fc>
   22cc0:	ldr	r0, [pc, #2868]	; 237fc <__assert_fail@plt+0x12320>
   22cc4:	ldr	r1, [fp, #-16]
   22cc8:	movw	r2, #0
   22ccc:	sub	r1, r2, r1
   22cd0:	udiv	r0, r0, r1
   22cd4:	str	r0, [fp, #-40]	; 0xffffffd8
   22cd8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   22cdc:	ldr	r1, [fp, #-12]
   22ce0:	mvn	r2, #0
   22ce4:	sub	r1, r2, r1
   22ce8:	cmp	r0, r1
   22cec:	bls	22df0 <__assert_fail@plt+0x11914>
   22cf0:	b	22e04 <__assert_fail@plt+0x11928>
   22cf4:	ldr	r0, [fp, #-16]
   22cf8:	cmn	r0, #1
   22cfc:	bne	22d44 <__assert_fail@plt+0x11868>
   22d00:	b	22d1c <__assert_fail@plt+0x11840>
   22d04:	ldr	r0, [fp, #-12]
   22d08:	add	r0, r0, #-2147483648	; 0x80000000
   22d0c:	movw	r1, #0
   22d10:	cmp	r1, r0
   22d14:	bcc	22df0 <__assert_fail@plt+0x11914>
   22d18:	b	22e04 <__assert_fail@plt+0x11928>
   22d1c:	ldr	r0, [fp, #-12]
   22d20:	movw	r1, #0
   22d24:	cmp	r1, r0
   22d28:	bcs	22e04 <__assert_fail@plt+0x11928>
   22d2c:	ldr	r0, [pc, #2760]	; 237fc <__assert_fail@plt+0x12320>
   22d30:	ldr	r1, [fp, #-12]
   22d34:	sub	r1, r1, #1
   22d38:	cmp	r0, r1
   22d3c:	bcc	22df0 <__assert_fail@plt+0x11914>
   22d40:	b	22e04 <__assert_fail@plt+0x11928>
   22d44:	ldr	r0, [pc, #2740]	; 23800 <__assert_fail@plt+0x12324>
   22d48:	ldr	r1, [fp, #-16]
   22d4c:	udiv	r0, r0, r1
   22d50:	ldr	r1, [fp, #-12]
   22d54:	cmp	r0, r1
   22d58:	bcc	22df0 <__assert_fail@plt+0x11914>
   22d5c:	b	22e04 <__assert_fail@plt+0x11928>
   22d60:	ldr	r0, [fp, #-16]
   22d64:	cmp	r0, #0
   22d68:	bne	22d70 <__assert_fail@plt+0x11894>
   22d6c:	b	22e04 <__assert_fail@plt+0x11928>
   22d70:	ldr	r0, [fp, #-12]
   22d74:	cmp	r0, #0
   22d78:	bcs	22dd8 <__assert_fail@plt+0x118fc>
   22d7c:	ldr	r0, [fp, #-12]
   22d80:	cmn	r0, #1
   22d84:	bne	22dbc <__assert_fail@plt+0x118e0>
   22d88:	b	22da4 <__assert_fail@plt+0x118c8>
   22d8c:	ldr	r0, [fp, #-16]
   22d90:	add	r0, r0, #-2147483648	; 0x80000000
   22d94:	movw	r1, #0
   22d98:	cmp	r1, r0
   22d9c:	bcc	22df0 <__assert_fail@plt+0x11914>
   22da0:	b	22e04 <__assert_fail@plt+0x11928>
   22da4:	ldr	r0, [pc, #2640]	; 237fc <__assert_fail@plt+0x12320>
   22da8:	ldr	r1, [fp, #-16]
   22dac:	sub	r1, r1, #1
   22db0:	cmp	r0, r1
   22db4:	bcc	22df0 <__assert_fail@plt+0x11914>
   22db8:	b	22e04 <__assert_fail@plt+0x11928>
   22dbc:	ldr	r0, [pc, #2620]	; 23800 <__assert_fail@plt+0x12324>
   22dc0:	ldr	r1, [fp, #-12]
   22dc4:	udiv	r0, r0, r1
   22dc8:	ldr	r1, [fp, #-16]
   22dcc:	cmp	r0, r1
   22dd0:	bcc	22df0 <__assert_fail@plt+0x11914>
   22dd4:	b	22e04 <__assert_fail@plt+0x11928>
   22dd8:	ldr	r0, [pc, #2588]	; 237fc <__assert_fail@plt+0x12320>
   22ddc:	ldr	r1, [fp, #-16]
   22de0:	udiv	r0, r0, r1
   22de4:	ldr	r1, [fp, #-12]
   22de8:	cmp	r0, r1
   22dec:	bcs	22e04 <__assert_fail@plt+0x11928>
   22df0:	ldr	r0, [fp, #-12]
   22df4:	ldr	r1, [fp, #-16]
   22df8:	mul	r0, r0, r1
   22dfc:	str	r0, [fp, #-20]	; 0xffffffec
   22e00:	b	237c8 <__assert_fail@plt+0x122ec>
   22e04:	ldr	r0, [fp, #-12]
   22e08:	ldr	r1, [fp, #-16]
   22e0c:	mul	r0, r0, r1
   22e10:	str	r0, [fp, #-20]	; 0xffffffec
   22e14:	b	237e0 <__assert_fail@plt+0x12304>
   22e18:	ldr	r0, [fp, #-16]
   22e1c:	cmp	r0, #0
   22e20:	bcs	22f2c <__assert_fail@plt+0x11a50>
   22e24:	ldr	r0, [fp, #-12]
   22e28:	cmp	r0, #0
   22e2c:	bcs	22eb4 <__assert_fail@plt+0x119d8>
   22e30:	b	22e50 <__assert_fail@plt+0x11974>
   22e34:	ldr	r0, [fp, #-12]
   22e38:	ldr	r1, [fp, #-16]
   22e3c:	mvn	r2, #0
   22e40:	udiv	r1, r2, r1
   22e44:	cmp	r0, r1
   22e48:	bcc	22fc8 <__assert_fail@plt+0x11aec>
   22e4c:	b	22fdc <__assert_fail@plt+0x11b00>
   22e50:	b	22e64 <__assert_fail@plt+0x11988>
   22e54:	ldr	r0, [fp, #-16]
   22e58:	cmp	r0, #1
   22e5c:	bcc	22e74 <__assert_fail@plt+0x11998>
   22e60:	b	22e80 <__assert_fail@plt+0x119a4>
   22e64:	ldr	r0, [fp, #-16]
   22e68:	movw	r1, #0
   22e6c:	cmp	r1, r0
   22e70:	bcs	22e80 <__assert_fail@plt+0x119a4>
   22e74:	movw	r0, #1
   22e78:	str	r0, [fp, #-44]	; 0xffffffd4
   22e7c:	b	22e98 <__assert_fail@plt+0x119bc>
   22e80:	ldr	r0, [fp, #-16]
   22e84:	movw	r1, #0
   22e88:	sub	r0, r1, r0
   22e8c:	mvn	r1, #0
   22e90:	udiv	r0, r1, r0
   22e94:	str	r0, [fp, #-44]	; 0xffffffd4
   22e98:	ldr	r0, [fp, #-44]	; 0xffffffd4
   22e9c:	ldr	r1, [fp, #-12]
   22ea0:	mvn	r2, #0
   22ea4:	sub	r1, r2, r1
   22ea8:	cmp	r0, r1
   22eac:	bls	22fc8 <__assert_fail@plt+0x11aec>
   22eb0:	b	22fdc <__assert_fail@plt+0x11b00>
   22eb4:	b	22ebc <__assert_fail@plt+0x119e0>
   22eb8:	b	22ec0 <__assert_fail@plt+0x119e4>
   22ebc:	b	22f10 <__assert_fail@plt+0x11a34>
   22ec0:	ldr	r0, [fp, #-16]
   22ec4:	cmn	r0, #1
   22ec8:	bne	22f10 <__assert_fail@plt+0x11a34>
   22ecc:	b	22ee8 <__assert_fail@plt+0x11a0c>
   22ed0:	ldr	r0, [fp, #-12]
   22ed4:	add	r0, r0, #0
   22ed8:	movw	r1, #0
   22edc:	cmp	r1, r0
   22ee0:	bcc	22fc8 <__assert_fail@plt+0x11aec>
   22ee4:	b	22fdc <__assert_fail@plt+0x11b00>
   22ee8:	ldr	r0, [fp, #-12]
   22eec:	movw	r1, #0
   22ef0:	cmp	r1, r0
   22ef4:	bcs	22fdc <__assert_fail@plt+0x11b00>
   22ef8:	ldr	r0, [fp, #-12]
   22efc:	sub	r0, r0, #1
   22f00:	mvn	r1, #0
   22f04:	cmp	r1, r0
   22f08:	bcc	22fc8 <__assert_fail@plt+0x11aec>
   22f0c:	b	22fdc <__assert_fail@plt+0x11b00>
   22f10:	ldr	r0, [fp, #-16]
   22f14:	movw	r1, #0
   22f18:	udiv	r0, r1, r0
   22f1c:	ldr	r1, [fp, #-12]
   22f20:	cmp	r0, r1
   22f24:	bcc	22fc8 <__assert_fail@plt+0x11aec>
   22f28:	b	22fdc <__assert_fail@plt+0x11b00>
   22f2c:	ldr	r0, [fp, #-16]
   22f30:	cmp	r0, #0
   22f34:	bne	22f3c <__assert_fail@plt+0x11a60>
   22f38:	b	22fdc <__assert_fail@plt+0x11b00>
   22f3c:	ldr	r0, [fp, #-12]
   22f40:	cmp	r0, #0
   22f44:	bcs	22fb0 <__assert_fail@plt+0x11ad4>
   22f48:	b	22f50 <__assert_fail@plt+0x11a74>
   22f4c:	b	22f54 <__assert_fail@plt+0x11a78>
   22f50:	b	22f94 <__assert_fail@plt+0x11ab8>
   22f54:	ldr	r0, [fp, #-12]
   22f58:	cmn	r0, #1
   22f5c:	bne	22f94 <__assert_fail@plt+0x11ab8>
   22f60:	b	22f7c <__assert_fail@plt+0x11aa0>
   22f64:	ldr	r0, [fp, #-16]
   22f68:	add	r0, r0, #0
   22f6c:	movw	r1, #0
   22f70:	cmp	r1, r0
   22f74:	bcc	22fc8 <__assert_fail@plt+0x11aec>
   22f78:	b	22fdc <__assert_fail@plt+0x11b00>
   22f7c:	ldr	r0, [fp, #-16]
   22f80:	sub	r0, r0, #1
   22f84:	mvn	r1, #0
   22f88:	cmp	r1, r0
   22f8c:	bcc	22fc8 <__assert_fail@plt+0x11aec>
   22f90:	b	22fdc <__assert_fail@plt+0x11b00>
   22f94:	ldr	r0, [fp, #-12]
   22f98:	movw	r1, #0
   22f9c:	udiv	r0, r1, r0
   22fa0:	ldr	r1, [fp, #-16]
   22fa4:	cmp	r0, r1
   22fa8:	bcc	22fc8 <__assert_fail@plt+0x11aec>
   22fac:	b	22fdc <__assert_fail@plt+0x11b00>
   22fb0:	ldr	r0, [fp, #-16]
   22fb4:	mvn	r1, #0
   22fb8:	udiv	r0, r1, r0
   22fbc:	ldr	r1, [fp, #-12]
   22fc0:	cmp	r0, r1
   22fc4:	bcs	22fdc <__assert_fail@plt+0x11b00>
   22fc8:	ldr	r0, [fp, #-12]
   22fcc:	ldr	r1, [fp, #-16]
   22fd0:	mul	r0, r0, r1
   22fd4:	str	r0, [fp, #-20]	; 0xffffffec
   22fd8:	b	237c8 <__assert_fail@plt+0x122ec>
   22fdc:	ldr	r0, [fp, #-12]
   22fe0:	ldr	r1, [fp, #-16]
   22fe4:	mul	r0, r0, r1
   22fe8:	str	r0, [fp, #-20]	; 0xffffffec
   22fec:	b	237e0 <__assert_fail@plt+0x12304>
   22ff0:	b	22ff4 <__assert_fail@plt+0x11b18>
   22ff4:	b	231b8 <__assert_fail@plt+0x11cdc>
   22ff8:	ldr	r0, [fp, #-16]
   22ffc:	cmp	r0, #0
   23000:	bcs	23100 <__assert_fail@plt+0x11c24>
   23004:	ldr	r0, [fp, #-12]
   23008:	cmp	r0, #0
   2300c:	bcs	23094 <__assert_fail@plt+0x11bb8>
   23010:	b	23030 <__assert_fail@plt+0x11b54>
   23014:	ldr	r0, [pc, #2016]	; 237fc <__assert_fail@plt+0x12320>
   23018:	ldr	r1, [fp, #-12]
   2301c:	ldr	r2, [fp, #-16]
   23020:	udiv	r0, r0, r2
   23024:	cmp	r1, r0
   23028:	bcc	23190 <__assert_fail@plt+0x11cb4>
   2302c:	b	231a4 <__assert_fail@plt+0x11cc8>
   23030:	b	23044 <__assert_fail@plt+0x11b68>
   23034:	ldr	r0, [fp, #-16]
   23038:	cmp	r0, #1
   2303c:	bcc	23054 <__assert_fail@plt+0x11b78>
   23040:	b	23060 <__assert_fail@plt+0x11b84>
   23044:	ldr	r0, [fp, #-16]
   23048:	movw	r1, #0
   2304c:	cmp	r1, r0
   23050:	bcs	23060 <__assert_fail@plt+0x11b84>
   23054:	movw	r0, #0
   23058:	str	r0, [sp, #48]	; 0x30
   2305c:	b	23078 <__assert_fail@plt+0x11b9c>
   23060:	ldr	r0, [pc, #1940]	; 237fc <__assert_fail@plt+0x12320>
   23064:	ldr	r1, [fp, #-16]
   23068:	movw	r2, #0
   2306c:	sub	r1, r2, r1
   23070:	udiv	r0, r0, r1
   23074:	str	r0, [sp, #48]	; 0x30
   23078:	ldr	r0, [sp, #48]	; 0x30
   2307c:	ldr	r1, [fp, #-12]
   23080:	mvn	r2, #0
   23084:	sub	r1, r2, r1
   23088:	cmp	r0, r1
   2308c:	bls	23190 <__assert_fail@plt+0x11cb4>
   23090:	b	231a4 <__assert_fail@plt+0x11cc8>
   23094:	ldr	r0, [fp, #-16]
   23098:	cmn	r0, #1
   2309c:	bne	230e4 <__assert_fail@plt+0x11c08>
   230a0:	b	230bc <__assert_fail@plt+0x11be0>
   230a4:	ldr	r0, [fp, #-12]
   230a8:	add	r0, r0, #-2147483648	; 0x80000000
   230ac:	movw	r1, #0
   230b0:	cmp	r1, r0
   230b4:	bcc	23190 <__assert_fail@plt+0x11cb4>
   230b8:	b	231a4 <__assert_fail@plt+0x11cc8>
   230bc:	ldr	r0, [fp, #-12]
   230c0:	movw	r1, #0
   230c4:	cmp	r1, r0
   230c8:	bcs	231a4 <__assert_fail@plt+0x11cc8>
   230cc:	ldr	r0, [pc, #1832]	; 237fc <__assert_fail@plt+0x12320>
   230d0:	ldr	r1, [fp, #-12]
   230d4:	sub	r1, r1, #1
   230d8:	cmp	r0, r1
   230dc:	bcc	23190 <__assert_fail@plt+0x11cb4>
   230e0:	b	231a4 <__assert_fail@plt+0x11cc8>
   230e4:	ldr	r0, [pc, #1812]	; 23800 <__assert_fail@plt+0x12324>
   230e8:	ldr	r1, [fp, #-16]
   230ec:	udiv	r0, r0, r1
   230f0:	ldr	r1, [fp, #-12]
   230f4:	cmp	r0, r1
   230f8:	bcc	23190 <__assert_fail@plt+0x11cb4>
   230fc:	b	231a4 <__assert_fail@plt+0x11cc8>
   23100:	ldr	r0, [fp, #-16]
   23104:	cmp	r0, #0
   23108:	bne	23110 <__assert_fail@plt+0x11c34>
   2310c:	b	231a4 <__assert_fail@plt+0x11cc8>
   23110:	ldr	r0, [fp, #-12]
   23114:	cmp	r0, #0
   23118:	bcs	23178 <__assert_fail@plt+0x11c9c>
   2311c:	ldr	r0, [fp, #-12]
   23120:	cmn	r0, #1
   23124:	bne	2315c <__assert_fail@plt+0x11c80>
   23128:	b	23144 <__assert_fail@plt+0x11c68>
   2312c:	ldr	r0, [fp, #-16]
   23130:	add	r0, r0, #-2147483648	; 0x80000000
   23134:	movw	r1, #0
   23138:	cmp	r1, r0
   2313c:	bcc	23190 <__assert_fail@plt+0x11cb4>
   23140:	b	231a4 <__assert_fail@plt+0x11cc8>
   23144:	ldr	r0, [pc, #1712]	; 237fc <__assert_fail@plt+0x12320>
   23148:	ldr	r1, [fp, #-16]
   2314c:	sub	r1, r1, #1
   23150:	cmp	r0, r1
   23154:	bcc	23190 <__assert_fail@plt+0x11cb4>
   23158:	b	231a4 <__assert_fail@plt+0x11cc8>
   2315c:	ldr	r0, [pc, #1692]	; 23800 <__assert_fail@plt+0x12324>
   23160:	ldr	r1, [fp, #-12]
   23164:	udiv	r0, r0, r1
   23168:	ldr	r1, [fp, #-16]
   2316c:	cmp	r0, r1
   23170:	bcc	23190 <__assert_fail@plt+0x11cb4>
   23174:	b	231a4 <__assert_fail@plt+0x11cc8>
   23178:	ldr	r0, [pc, #1660]	; 237fc <__assert_fail@plt+0x12320>
   2317c:	ldr	r1, [fp, #-16]
   23180:	udiv	r0, r0, r1
   23184:	ldr	r1, [fp, #-12]
   23188:	cmp	r0, r1
   2318c:	bcs	231a4 <__assert_fail@plt+0x11cc8>
   23190:	ldr	r0, [fp, #-12]
   23194:	ldr	r1, [fp, #-16]
   23198:	mul	r0, r0, r1
   2319c:	str	r0, [fp, #-20]	; 0xffffffec
   231a0:	b	237c8 <__assert_fail@plt+0x122ec>
   231a4:	ldr	r0, [fp, #-12]
   231a8:	ldr	r1, [fp, #-16]
   231ac:	mul	r0, r0, r1
   231b0:	str	r0, [fp, #-20]	; 0xffffffec
   231b4:	b	237e0 <__assert_fail@plt+0x12304>
   231b8:	ldr	r0, [fp, #-16]
   231bc:	cmp	r0, #0
   231c0:	bcs	232cc <__assert_fail@plt+0x11df0>
   231c4:	ldr	r0, [fp, #-12]
   231c8:	cmp	r0, #0
   231cc:	bcs	23254 <__assert_fail@plt+0x11d78>
   231d0:	b	231f0 <__assert_fail@plt+0x11d14>
   231d4:	ldr	r0, [fp, #-12]
   231d8:	ldr	r1, [fp, #-16]
   231dc:	mvn	r2, #0
   231e0:	udiv	r1, r2, r1
   231e4:	cmp	r0, r1
   231e8:	bcc	23368 <__assert_fail@plt+0x11e8c>
   231ec:	b	2337c <__assert_fail@plt+0x11ea0>
   231f0:	b	23204 <__assert_fail@plt+0x11d28>
   231f4:	ldr	r0, [fp, #-16]
   231f8:	cmp	r0, #1
   231fc:	bcc	23214 <__assert_fail@plt+0x11d38>
   23200:	b	23220 <__assert_fail@plt+0x11d44>
   23204:	ldr	r0, [fp, #-16]
   23208:	movw	r1, #0
   2320c:	cmp	r1, r0
   23210:	bcs	23220 <__assert_fail@plt+0x11d44>
   23214:	movw	r0, #1
   23218:	str	r0, [sp, #44]	; 0x2c
   2321c:	b	23238 <__assert_fail@plt+0x11d5c>
   23220:	ldr	r0, [fp, #-16]
   23224:	movw	r1, #0
   23228:	sub	r0, r1, r0
   2322c:	mvn	r1, #0
   23230:	udiv	r0, r1, r0
   23234:	str	r0, [sp, #44]	; 0x2c
   23238:	ldr	r0, [sp, #44]	; 0x2c
   2323c:	ldr	r1, [fp, #-12]
   23240:	mvn	r2, #0
   23244:	sub	r1, r2, r1
   23248:	cmp	r0, r1
   2324c:	bls	23368 <__assert_fail@plt+0x11e8c>
   23250:	b	2337c <__assert_fail@plt+0x11ea0>
   23254:	b	2325c <__assert_fail@plt+0x11d80>
   23258:	b	23260 <__assert_fail@plt+0x11d84>
   2325c:	b	232b0 <__assert_fail@plt+0x11dd4>
   23260:	ldr	r0, [fp, #-16]
   23264:	cmn	r0, #1
   23268:	bne	232b0 <__assert_fail@plt+0x11dd4>
   2326c:	b	23288 <__assert_fail@plt+0x11dac>
   23270:	ldr	r0, [fp, #-12]
   23274:	add	r0, r0, #0
   23278:	movw	r1, #0
   2327c:	cmp	r1, r0
   23280:	bcc	23368 <__assert_fail@plt+0x11e8c>
   23284:	b	2337c <__assert_fail@plt+0x11ea0>
   23288:	ldr	r0, [fp, #-12]
   2328c:	movw	r1, #0
   23290:	cmp	r1, r0
   23294:	bcs	2337c <__assert_fail@plt+0x11ea0>
   23298:	ldr	r0, [fp, #-12]
   2329c:	sub	r0, r0, #1
   232a0:	mvn	r1, #0
   232a4:	cmp	r1, r0
   232a8:	bcc	23368 <__assert_fail@plt+0x11e8c>
   232ac:	b	2337c <__assert_fail@plt+0x11ea0>
   232b0:	ldr	r0, [fp, #-16]
   232b4:	movw	r1, #0
   232b8:	udiv	r0, r1, r0
   232bc:	ldr	r1, [fp, #-12]
   232c0:	cmp	r0, r1
   232c4:	bcc	23368 <__assert_fail@plt+0x11e8c>
   232c8:	b	2337c <__assert_fail@plt+0x11ea0>
   232cc:	ldr	r0, [fp, #-16]
   232d0:	cmp	r0, #0
   232d4:	bne	232dc <__assert_fail@plt+0x11e00>
   232d8:	b	2337c <__assert_fail@plt+0x11ea0>
   232dc:	ldr	r0, [fp, #-12]
   232e0:	cmp	r0, #0
   232e4:	bcs	23350 <__assert_fail@plt+0x11e74>
   232e8:	b	232f0 <__assert_fail@plt+0x11e14>
   232ec:	b	232f4 <__assert_fail@plt+0x11e18>
   232f0:	b	23334 <__assert_fail@plt+0x11e58>
   232f4:	ldr	r0, [fp, #-12]
   232f8:	cmn	r0, #1
   232fc:	bne	23334 <__assert_fail@plt+0x11e58>
   23300:	b	2331c <__assert_fail@plt+0x11e40>
   23304:	ldr	r0, [fp, #-16]
   23308:	add	r0, r0, #0
   2330c:	movw	r1, #0
   23310:	cmp	r1, r0
   23314:	bcc	23368 <__assert_fail@plt+0x11e8c>
   23318:	b	2337c <__assert_fail@plt+0x11ea0>
   2331c:	ldr	r0, [fp, #-16]
   23320:	sub	r0, r0, #1
   23324:	mvn	r1, #0
   23328:	cmp	r1, r0
   2332c:	bcc	23368 <__assert_fail@plt+0x11e8c>
   23330:	b	2337c <__assert_fail@plt+0x11ea0>
   23334:	ldr	r0, [fp, #-12]
   23338:	movw	r1, #0
   2333c:	udiv	r0, r1, r0
   23340:	ldr	r1, [fp, #-16]
   23344:	cmp	r0, r1
   23348:	bcc	23368 <__assert_fail@plt+0x11e8c>
   2334c:	b	2337c <__assert_fail@plt+0x11ea0>
   23350:	ldr	r0, [fp, #-16]
   23354:	mvn	r1, #0
   23358:	udiv	r0, r1, r0
   2335c:	ldr	r1, [fp, #-12]
   23360:	cmp	r0, r1
   23364:	bcs	2337c <__assert_fail@plt+0x11ea0>
   23368:	ldr	r0, [fp, #-12]
   2336c:	ldr	r1, [fp, #-16]
   23370:	mul	r0, r0, r1
   23374:	str	r0, [fp, #-20]	; 0xffffffec
   23378:	b	237c8 <__assert_fail@plt+0x122ec>
   2337c:	ldr	r0, [fp, #-12]
   23380:	ldr	r1, [fp, #-16]
   23384:	mul	r0, r0, r1
   23388:	str	r0, [fp, #-20]	; 0xffffffec
   2338c:	b	237e0 <__assert_fail@plt+0x12304>
   23390:	b	235ac <__assert_fail@plt+0x120d0>
   23394:	ldr	r0, [fp, #-16]
   23398:	cmp	r0, #0
   2339c:	bcs	234dc <__assert_fail@plt+0x12000>
   233a0:	ldr	r0, [fp, #-12]
   233a4:	cmp	r0, #0
   233a8:	bcs	23468 <__assert_fail@plt+0x11f8c>
   233ac:	b	233b0 <__assert_fail@plt+0x11ed4>
   233b0:	ldr	r0, [fp, #-12]
   233b4:	ldr	r2, [fp, #-16]
   233b8:	mvn	r1, #0
   233bc:	mvn	r3, #-2147483648	; 0x80000000
   233c0:	mov	ip, #0
   233c4:	str	r0, [sp, #40]	; 0x28
   233c8:	mov	r0, r1
   233cc:	mov	r1, r3
   233d0:	mov	r3, ip
   233d4:	bl	2413c <__assert_fail@plt+0x12c60>
   233d8:	ldr	r2, [sp, #40]	; 0x28
   233dc:	subs	r0, r2, r0
   233e0:	rscs	r1, r1, #0
   233e4:	blt	23584 <__assert_fail@plt+0x120a8>
   233e8:	b	23598 <__assert_fail@plt+0x120bc>
   233ec:	b	23400 <__assert_fail@plt+0x11f24>
   233f0:	ldr	r0, [fp, #-16]
   233f4:	cmp	r0, #1
   233f8:	bcc	23410 <__assert_fail@plt+0x11f34>
   233fc:	b	23424 <__assert_fail@plt+0x11f48>
   23400:	ldr	r0, [fp, #-16]
   23404:	movw	r1, #0
   23408:	cmp	r1, r0
   2340c:	bcs	23424 <__assert_fail@plt+0x11f48>
   23410:	mov	r0, #0
   23414:	mvn	r1, #0
   23418:	str	r1, [sp, #36]	; 0x24
   2341c:	str	r0, [sp, #32]
   23420:	b	23448 <__assert_fail@plt+0x11f6c>
   23424:	ldr	r0, [fp, #-16]
   23428:	rsb	r2, r0, #0
   2342c:	mvn	r0, #0
   23430:	mvn	r1, #-2147483648	; 0x80000000
   23434:	mov	r3, #0
   23438:	bl	2413c <__assert_fail@plt+0x12c60>
   2343c:	str	r0, [sp, #36]	; 0x24
   23440:	str	r1, [sp, #32]
   23444:	b	23448 <__assert_fail@plt+0x11f6c>
   23448:	ldr	r0, [sp, #32]
   2344c:	ldr	r1, [sp, #36]	; 0x24
   23450:	ldr	r2, [fp, #-12]
   23454:	mvn	r2, r2
   23458:	subs	r1, r2, r1
   2345c:	rscs	r0, r0, #0
   23460:	bge	23584 <__assert_fail@plt+0x120a8>
   23464:	b	23598 <__assert_fail@plt+0x120bc>
   23468:	ldr	r0, [fp, #-16]
   2346c:	cmn	r0, #1
   23470:	bne	234b0 <__assert_fail@plt+0x11fd4>
   23474:	b	23490 <__assert_fail@plt+0x11fb4>
   23478:	ldr	r0, [fp, #-12]
   2347c:	rsbs	r0, r0, #0
   23480:	mov	r1, #0
   23484:	sbcs	r1, r1, #-2147483648	; 0x80000000
   23488:	blt	23584 <__assert_fail@plt+0x120a8>
   2348c:	b	23598 <__assert_fail@plt+0x120bc>
   23490:	ldr	r0, [fp, #-12]
   23494:	movw	r1, #0
   23498:	cmp	r1, r0
   2349c:	bcs	23598 <__assert_fail@plt+0x120bc>
   234a0:	mov	r0, #0
   234a4:	cmp	r0, #0
   234a8:	bne	23584 <__assert_fail@plt+0x120a8>
   234ac:	b	23598 <__assert_fail@plt+0x120bc>
   234b0:	ldr	r2, [fp, #-16]
   234b4:	mov	r1, #-2147483648	; 0x80000000
   234b8:	mov	r0, #0
   234bc:	str	r0, [sp, #28]
   234c0:	ldr	r3, [sp, #28]
   234c4:	bl	24068 <__assert_fail@plt+0x12b8c>
   234c8:	ldr	r2, [fp, #-12]
   234cc:	subs	r0, r0, r2
   234d0:	sbcs	r1, r1, #0
   234d4:	blt	23584 <__assert_fail@plt+0x120a8>
   234d8:	b	23598 <__assert_fail@plt+0x120bc>
   234dc:	ldr	r0, [fp, #-16]
   234e0:	cmp	r0, #0
   234e4:	bne	234ec <__assert_fail@plt+0x12010>
   234e8:	b	23598 <__assert_fail@plt+0x120bc>
   234ec:	ldr	r0, [fp, #-12]
   234f0:	cmp	r0, #0
   234f4:	bcs	2355c <__assert_fail@plt+0x12080>
   234f8:	ldr	r0, [fp, #-12]
   234fc:	cmn	r0, #1
   23500:	bne	23530 <__assert_fail@plt+0x12054>
   23504:	b	23520 <__assert_fail@plt+0x12044>
   23508:	ldr	r0, [fp, #-16]
   2350c:	rsbs	r0, r0, #0
   23510:	mov	r1, #0
   23514:	sbcs	r1, r1, #-2147483648	; 0x80000000
   23518:	blt	23584 <__assert_fail@plt+0x120a8>
   2351c:	b	23598 <__assert_fail@plt+0x120bc>
   23520:	mov	r0, #0
   23524:	cmp	r0, #0
   23528:	bne	23584 <__assert_fail@plt+0x120a8>
   2352c:	b	23598 <__assert_fail@plt+0x120bc>
   23530:	ldr	r2, [fp, #-12]
   23534:	mov	r1, #-2147483648	; 0x80000000
   23538:	mov	r0, #0
   2353c:	str	r0, [sp, #24]
   23540:	ldr	r3, [sp, #24]
   23544:	bl	24068 <__assert_fail@plt+0x12b8c>
   23548:	ldr	r2, [fp, #-16]
   2354c:	subs	r0, r0, r2
   23550:	sbcs	r1, r1, #0
   23554:	blt	23584 <__assert_fail@plt+0x120a8>
   23558:	b	23598 <__assert_fail@plt+0x120bc>
   2355c:	ldr	r2, [fp, #-16]
   23560:	mvn	r0, #0
   23564:	mvn	r1, #-2147483648	; 0x80000000
   23568:	mov	r3, #0
   2356c:	bl	2413c <__assert_fail@plt+0x12c60>
   23570:	ldr	r2, [fp, #-12]
   23574:	subs	r0, r0, r2
   23578:	sbcs	r1, r1, #0
   2357c:	bge	23598 <__assert_fail@plt+0x120bc>
   23580:	b	23584 <__assert_fail@plt+0x120a8>
   23584:	ldr	r0, [fp, #-12]
   23588:	ldr	r1, [fp, #-16]
   2358c:	mul	r0, r0, r1
   23590:	str	r0, [fp, #-20]	; 0xffffffec
   23594:	b	237c8 <__assert_fail@plt+0x122ec>
   23598:	ldr	r0, [fp, #-12]
   2359c:	ldr	r1, [fp, #-16]
   235a0:	mul	r0, r0, r1
   235a4:	str	r0, [fp, #-20]	; 0xffffffec
   235a8:	b	237e0 <__assert_fail@plt+0x12304>
   235ac:	ldr	r0, [fp, #-16]
   235b0:	cmp	r0, #0
   235b4:	bcs	236f0 <__assert_fail@plt+0x12214>
   235b8:	ldr	r0, [fp, #-12]
   235bc:	cmp	r0, #0
   235c0:	bcs	23678 <__assert_fail@plt+0x1219c>
   235c4:	b	235f8 <__assert_fail@plt+0x1211c>
   235c8:	ldr	r0, [fp, #-12]
   235cc:	ldr	r2, [fp, #-16]
   235d0:	mvn	r1, #0
   235d4:	mov	r3, #0
   235d8:	str	r0, [sp, #20]
   235dc:	mov	r0, r1
   235e0:	bl	2413c <__assert_fail@plt+0x12c60>
   235e4:	ldr	r2, [sp, #20]
   235e8:	subs	r0, r2, r0
   235ec:	rscs	r1, r1, #0
   235f0:	bcc	237a0 <__assert_fail@plt+0x122c4>
   235f4:	b	237b4 <__assert_fail@plt+0x122d8>
   235f8:	b	2360c <__assert_fail@plt+0x12130>
   235fc:	ldr	r0, [fp, #-16]
   23600:	cmp	r0, #1
   23604:	bcc	2361c <__assert_fail@plt+0x12140>
   23608:	b	23630 <__assert_fail@plt+0x12154>
   2360c:	ldr	r0, [fp, #-16]
   23610:	movw	r1, #0
   23614:	cmp	r1, r0
   23618:	bcs	23630 <__assert_fail@plt+0x12154>
   2361c:	mov	r0, #1
   23620:	mvn	r1, #0
   23624:	str	r1, [sp, #16]
   23628:	str	r0, [sp, #12]
   2362c:	b	23658 <__assert_fail@plt+0x1217c>
   23630:	ldr	r0, [fp, #-16]
   23634:	rsb	r2, r0, #0
   23638:	mvn	r0, #0
   2363c:	mov	r3, #0
   23640:	str	r0, [sp, #8]
   23644:	ldr	r1, [sp, #8]
   23648:	bl	2413c <__assert_fail@plt+0x12c60>
   2364c:	str	r0, [sp, #16]
   23650:	str	r1, [sp, #12]
   23654:	b	23658 <__assert_fail@plt+0x1217c>
   23658:	ldr	r0, [sp, #12]
   2365c:	ldr	r1, [sp, #16]
   23660:	ldr	r2, [fp, #-12]
   23664:	mvn	r2, r2
   23668:	subs	r1, r2, r1
   2366c:	rscs	r0, r0, #0
   23670:	bcs	237a0 <__assert_fail@plt+0x122c4>
   23674:	b	237b4 <__assert_fail@plt+0x122d8>
   23678:	b	23680 <__assert_fail@plt+0x121a4>
   2367c:	b	23684 <__assert_fail@plt+0x121a8>
   23680:	b	236d4 <__assert_fail@plt+0x121f8>
   23684:	ldr	r0, [fp, #-16]
   23688:	cmn	r0, #1
   2368c:	bne	236d4 <__assert_fail@plt+0x121f8>
   23690:	b	236ac <__assert_fail@plt+0x121d0>
   23694:	ldr	r0, [fp, #-12]
   23698:	add	r0, r0, #0
   2369c:	movw	r1, #0
   236a0:	cmp	r1, r0
   236a4:	bcc	237a0 <__assert_fail@plt+0x122c4>
   236a8:	b	237b4 <__assert_fail@plt+0x122d8>
   236ac:	ldr	r0, [fp, #-12]
   236b0:	movw	r1, #0
   236b4:	cmp	r1, r0
   236b8:	bcs	237b4 <__assert_fail@plt+0x122d8>
   236bc:	ldr	r0, [fp, #-12]
   236c0:	sub	r0, r0, #1
   236c4:	mvn	r1, #0
   236c8:	cmp	r1, r0
   236cc:	bcc	237a0 <__assert_fail@plt+0x122c4>
   236d0:	b	237b4 <__assert_fail@plt+0x122d8>
   236d4:	ldr	r0, [fp, #-16]
   236d8:	movw	r1, #0
   236dc:	udiv	r0, r1, r0
   236e0:	ldr	r1, [fp, #-12]
   236e4:	cmp	r0, r1
   236e8:	bcc	237a0 <__assert_fail@plt+0x122c4>
   236ec:	b	237b4 <__assert_fail@plt+0x122d8>
   236f0:	ldr	r0, [fp, #-16]
   236f4:	cmp	r0, #0
   236f8:	bne	23700 <__assert_fail@plt+0x12224>
   236fc:	b	237b4 <__assert_fail@plt+0x122d8>
   23700:	ldr	r0, [fp, #-12]
   23704:	cmp	r0, #0
   23708:	bcs	23774 <__assert_fail@plt+0x12298>
   2370c:	b	23714 <__assert_fail@plt+0x12238>
   23710:	b	23718 <__assert_fail@plt+0x1223c>
   23714:	b	23758 <__assert_fail@plt+0x1227c>
   23718:	ldr	r0, [fp, #-12]
   2371c:	cmn	r0, #1
   23720:	bne	23758 <__assert_fail@plt+0x1227c>
   23724:	b	23740 <__assert_fail@plt+0x12264>
   23728:	ldr	r0, [fp, #-16]
   2372c:	add	r0, r0, #0
   23730:	movw	r1, #0
   23734:	cmp	r1, r0
   23738:	bcc	237a0 <__assert_fail@plt+0x122c4>
   2373c:	b	237b4 <__assert_fail@plt+0x122d8>
   23740:	ldr	r0, [fp, #-16]
   23744:	sub	r0, r0, #1
   23748:	mvn	r1, #0
   2374c:	cmp	r1, r0
   23750:	bcc	237a0 <__assert_fail@plt+0x122c4>
   23754:	b	237b4 <__assert_fail@plt+0x122d8>
   23758:	ldr	r0, [fp, #-12]
   2375c:	movw	r1, #0
   23760:	udiv	r0, r1, r0
   23764:	ldr	r1, [fp, #-16]
   23768:	cmp	r0, r1
   2376c:	bcc	237a0 <__assert_fail@plt+0x122c4>
   23770:	b	237b4 <__assert_fail@plt+0x122d8>
   23774:	ldr	r2, [fp, #-16]
   23778:	mvn	r0, #0
   2377c:	mov	r3, #0
   23780:	str	r0, [sp, #4]
   23784:	ldr	r1, [sp, #4]
   23788:	bl	2413c <__assert_fail@plt+0x12c60>
   2378c:	ldr	r2, [fp, #-12]
   23790:	subs	r0, r0, r2
   23794:	sbcs	r1, r1, #0
   23798:	bcs	237b4 <__assert_fail@plt+0x122d8>
   2379c:	b	237a0 <__assert_fail@plt+0x122c4>
   237a0:	ldr	r0, [fp, #-12]
   237a4:	ldr	r1, [fp, #-16]
   237a8:	mul	r0, r0, r1
   237ac:	str	r0, [fp, #-20]	; 0xffffffec
   237b0:	b	237c8 <__assert_fail@plt+0x122ec>
   237b4:	ldr	r0, [fp, #-12]
   237b8:	ldr	r1, [fp, #-16]
   237bc:	mul	r0, r0, r1
   237c0:	str	r0, [fp, #-20]	; 0xffffffec
   237c4:	b	237e0 <__assert_fail@plt+0x12304>
   237c8:	bl	11398 <__errno_location@plt>
   237cc:	movw	r1, #12
   237d0:	str	r1, [r0]
   237d4:	movw	r0, #0
   237d8:	str	r0, [fp, #-4]
   237dc:	b	237f0 <__assert_fail@plt+0x12314>
   237e0:	ldr	r0, [fp, #-8]
   237e4:	ldr	r1, [fp, #-20]	; 0xffffffec
   237e8:	bl	213ec <__assert_fail@plt+0xff10>
   237ec:	str	r0, [fp, #-4]
   237f0:	ldr	r0, [fp, #-4]
   237f4:	mov	sp, fp
   237f8:	pop	{fp, pc}
   237fc:	svcvc	0x00ffffff
   23800:	andhi	r0, r0, r0
   23804:			; <UNDEFINED> instruction: 0xffff8000
   23808:	push	{fp, lr}
   2380c:	mov	fp, sp
   23810:	sub	sp, sp, #8
   23814:	str	r0, [sp, #4]
   23818:	ldr	r0, [sp, #4]
   2381c:	movw	r1, #0
   23820:	movw	r2, #3
   23824:	bl	21bd4 <__assert_fail@plt+0x106f8>
   23828:	mov	sp, fp
   2382c:	pop	{fp, pc}
   23830:	sub	sp, sp, #12
   23834:	str	r0, [sp, #4]
   23838:	ldr	r0, [sp, #4]
   2383c:	sub	r1, r0, #48	; 0x30
   23840:	cmp	r1, #10
   23844:	str	r0, [sp]
   23848:	bcc	23878 <__assert_fail@plt+0x1239c>
   2384c:	b	23850 <__assert_fail@plt+0x12374>
   23850:	ldr	r0, [sp]
   23854:	sub	r1, r0, #65	; 0x41
   23858:	cmp	r1, #26
   2385c:	bcc	23878 <__assert_fail@plt+0x1239c>
   23860:	b	23864 <__assert_fail@plt+0x12388>
   23864:	ldr	r0, [sp]
   23868:	sub	r1, r0, #97	; 0x61
   2386c:	cmp	r1, #25
   23870:	bhi	23888 <__assert_fail@plt+0x123ac>
   23874:	b	23878 <__assert_fail@plt+0x1239c>
   23878:	movw	r0, #1
   2387c:	and	r0, r0, #1
   23880:	strb	r0, [sp, #11]
   23884:	b	23894 <__assert_fail@plt+0x123b8>
   23888:	movw	r0, #0
   2388c:	and	r0, r0, #1
   23890:	strb	r0, [sp, #11]
   23894:	ldrb	r0, [sp, #11]
   23898:	and	r0, r0, #1
   2389c:	add	sp, sp, #12
   238a0:	bx	lr
   238a4:	sub	sp, sp, #12
   238a8:	str	r0, [sp, #4]
   238ac:	ldr	r0, [sp, #4]
   238b0:	sub	r1, r0, #65	; 0x41
   238b4:	cmp	r1, #26
   238b8:	str	r0, [sp]
   238bc:	bcc	238d8 <__assert_fail@plt+0x123fc>
   238c0:	b	238c4 <__assert_fail@plt+0x123e8>
   238c4:	ldr	r0, [sp]
   238c8:	sub	r1, r0, #97	; 0x61
   238cc:	cmp	r1, #25
   238d0:	bhi	238e8 <__assert_fail@plt+0x1240c>
   238d4:	b	238d8 <__assert_fail@plt+0x123fc>
   238d8:	movw	r0, #1
   238dc:	and	r0, r0, #1
   238e0:	strb	r0, [sp, #11]
   238e4:	b	238f4 <__assert_fail@plt+0x12418>
   238e8:	movw	r0, #0
   238ec:	and	r0, r0, #1
   238f0:	strb	r0, [sp, #11]
   238f4:	ldrb	r0, [sp, #11]
   238f8:	and	r0, r0, #1
   238fc:	add	sp, sp, #12
   23900:	bx	lr
   23904:	sub	sp, sp, #8
   23908:	str	r0, [sp]
   2390c:	ldr	r0, [sp]
   23910:	cmp	r0, #127	; 0x7f
   23914:	bhi	2392c <__assert_fail@plt+0x12450>
   23918:	b	2391c <__assert_fail@plt+0x12440>
   2391c:	movw	r0, #1
   23920:	and	r0, r0, #1
   23924:	strb	r0, [sp, #7]
   23928:	b	23938 <__assert_fail@plt+0x1245c>
   2392c:	movw	r0, #0
   23930:	and	r0, r0, #1
   23934:	strb	r0, [sp, #7]
   23938:	ldrb	r0, [sp, #7]
   2393c:	and	r0, r0, #1
   23940:	add	sp, sp, #8
   23944:	bx	lr
   23948:	sub	sp, sp, #8
   2394c:	str	r0, [sp, #4]
   23950:	ldr	r0, [sp, #4]
   23954:	cmp	r0, #32
   23958:	movw	r0, #1
   2395c:	str	r0, [sp]
   23960:	beq	23978 <__assert_fail@plt+0x1249c>
   23964:	ldr	r0, [sp, #4]
   23968:	cmp	r0, #9
   2396c:	movw	r0, #0
   23970:	moveq	r0, #1
   23974:	str	r0, [sp]
   23978:	ldr	r0, [sp]
   2397c:	and	r0, r0, #1
   23980:	add	sp, sp, #8
   23984:	bx	lr
   23988:	sub	sp, sp, #12
   2398c:	str	r0, [sp, #4]
   23990:	ldr	r0, [sp, #4]
   23994:	cmp	r0, #32
   23998:	str	r0, [sp]
   2399c:	bcc	239b4 <__assert_fail@plt+0x124d8>
   239a0:	b	239a4 <__assert_fail@plt+0x124c8>
   239a4:	ldr	r0, [sp]
   239a8:	cmp	r0, #127	; 0x7f
   239ac:	bne	239c4 <__assert_fail@plt+0x124e8>
   239b0:	b	239b4 <__assert_fail@plt+0x124d8>
   239b4:	movw	r0, #1
   239b8:	and	r0, r0, #1
   239bc:	strb	r0, [sp, #11]
   239c0:	b	239d0 <__assert_fail@plt+0x124f4>
   239c4:	movw	r0, #0
   239c8:	and	r0, r0, #1
   239cc:	strb	r0, [sp, #11]
   239d0:	ldrb	r0, [sp, #11]
   239d4:	and	r0, r0, #1
   239d8:	add	sp, sp, #12
   239dc:	bx	lr
   239e0:	sub	sp, sp, #8
   239e4:	str	r0, [sp]
   239e8:	ldr	r0, [sp]
   239ec:	sub	r0, r0, #48	; 0x30
   239f0:	cmp	r0, #9
   239f4:	bhi	23a0c <__assert_fail@plt+0x12530>
   239f8:	b	239fc <__assert_fail@plt+0x12520>
   239fc:	movw	r0, #1
   23a00:	and	r0, r0, #1
   23a04:	strb	r0, [sp, #7]
   23a08:	b	23a18 <__assert_fail@plt+0x1253c>
   23a0c:	movw	r0, #0
   23a10:	and	r0, r0, #1
   23a14:	strb	r0, [sp, #7]
   23a18:	ldrb	r0, [sp, #7]
   23a1c:	and	r0, r0, #1
   23a20:	add	sp, sp, #8
   23a24:	bx	lr
   23a28:	sub	sp, sp, #8
   23a2c:	str	r0, [sp]
   23a30:	ldr	r0, [sp]
   23a34:	sub	r0, r0, #33	; 0x21
   23a38:	cmp	r0, #93	; 0x5d
   23a3c:	bhi	23a54 <__assert_fail@plt+0x12578>
   23a40:	b	23a44 <__assert_fail@plt+0x12568>
   23a44:	movw	r0, #1
   23a48:	and	r0, r0, #1
   23a4c:	strb	r0, [sp, #7]
   23a50:	b	23a60 <__assert_fail@plt+0x12584>
   23a54:	movw	r0, #0
   23a58:	and	r0, r0, #1
   23a5c:	strb	r0, [sp, #7]
   23a60:	ldrb	r0, [sp, #7]
   23a64:	and	r0, r0, #1
   23a68:	add	sp, sp, #8
   23a6c:	bx	lr
   23a70:	sub	sp, sp, #8
   23a74:	str	r0, [sp]
   23a78:	ldr	r0, [sp]
   23a7c:	sub	r0, r0, #97	; 0x61
   23a80:	cmp	r0, #25
   23a84:	bhi	23a9c <__assert_fail@plt+0x125c0>
   23a88:	b	23a8c <__assert_fail@plt+0x125b0>
   23a8c:	movw	r0, #1
   23a90:	and	r0, r0, #1
   23a94:	strb	r0, [sp, #7]
   23a98:	b	23aa8 <__assert_fail@plt+0x125cc>
   23a9c:	movw	r0, #0
   23aa0:	and	r0, r0, #1
   23aa4:	strb	r0, [sp, #7]
   23aa8:	ldrb	r0, [sp, #7]
   23aac:	and	r0, r0, #1
   23ab0:	add	sp, sp, #8
   23ab4:	bx	lr
   23ab8:	sub	sp, sp, #8
   23abc:	str	r0, [sp]
   23ac0:	ldr	r0, [sp]
   23ac4:	sub	r0, r0, #32
   23ac8:	cmp	r0, #94	; 0x5e
   23acc:	bhi	23ae4 <__assert_fail@plt+0x12608>
   23ad0:	b	23ad4 <__assert_fail@plt+0x125f8>
   23ad4:	movw	r0, #1
   23ad8:	and	r0, r0, #1
   23adc:	strb	r0, [sp, #7]
   23ae0:	b	23af0 <__assert_fail@plt+0x12614>
   23ae4:	movw	r0, #0
   23ae8:	and	r0, r0, #1
   23aec:	strb	r0, [sp, #7]
   23af0:	ldrb	r0, [sp, #7]
   23af4:	and	r0, r0, #1
   23af8:	add	sp, sp, #8
   23afc:	bx	lr
   23b00:	sub	sp, sp, #12
   23b04:	str	r0, [sp, #4]
   23b08:	ldr	r0, [sp, #4]
   23b0c:	sub	r0, r0, #33	; 0x21
   23b10:	cmp	r0, #93	; 0x5d
   23b14:	str	r0, [sp]
   23b18:	bhi	23cb4 <__assert_fail@plt+0x127d8>
   23b1c:	add	r0, pc, #8
   23b20:	ldr	r1, [sp]
   23b24:	ldr	r0, [r0, r1, lsl #2]
   23b28:	mov	pc, r0
   23b2c:	andeq	r3, r2, r4, lsr #25
   23b30:	andeq	r3, r2, r4, lsr #25
   23b34:	andeq	r3, r2, r4, lsr #25
   23b38:	andeq	r3, r2, r4, lsr #25
   23b3c:	andeq	r3, r2, r4, lsr #25
   23b40:	andeq	r3, r2, r4, lsr #25
   23b44:	andeq	r3, r2, r4, lsr #25
   23b48:	andeq	r3, r2, r4, lsr #25
   23b4c:	andeq	r3, r2, r4, lsr #25
   23b50:	andeq	r3, r2, r4, lsr #25
   23b54:	andeq	r3, r2, r4, lsr #25
   23b58:	andeq	r3, r2, r4, lsr #25
   23b5c:	andeq	r3, r2, r4, lsr #25
   23b60:	andeq	r3, r2, r4, lsr #25
   23b64:	andeq	r3, r2, r4, lsr #25
   23b68:			; <UNDEFINED> instruction: 0x00023cb4
   23b6c:			; <UNDEFINED> instruction: 0x00023cb4
   23b70:			; <UNDEFINED> instruction: 0x00023cb4
   23b74:			; <UNDEFINED> instruction: 0x00023cb4
   23b78:			; <UNDEFINED> instruction: 0x00023cb4
   23b7c:			; <UNDEFINED> instruction: 0x00023cb4
   23b80:			; <UNDEFINED> instruction: 0x00023cb4
   23b84:			; <UNDEFINED> instruction: 0x00023cb4
   23b88:			; <UNDEFINED> instruction: 0x00023cb4
   23b8c:			; <UNDEFINED> instruction: 0x00023cb4
   23b90:	andeq	r3, r2, r4, lsr #25
   23b94:	andeq	r3, r2, r4, lsr #25
   23b98:	andeq	r3, r2, r4, lsr #25
   23b9c:	andeq	r3, r2, r4, lsr #25
   23ba0:	andeq	r3, r2, r4, lsr #25
   23ba4:	andeq	r3, r2, r4, lsr #25
   23ba8:	andeq	r3, r2, r4, lsr #25
   23bac:			; <UNDEFINED> instruction: 0x00023cb4
   23bb0:			; <UNDEFINED> instruction: 0x00023cb4
   23bb4:			; <UNDEFINED> instruction: 0x00023cb4
   23bb8:			; <UNDEFINED> instruction: 0x00023cb4
   23bbc:			; <UNDEFINED> instruction: 0x00023cb4
   23bc0:			; <UNDEFINED> instruction: 0x00023cb4
   23bc4:			; <UNDEFINED> instruction: 0x00023cb4
   23bc8:			; <UNDEFINED> instruction: 0x00023cb4
   23bcc:			; <UNDEFINED> instruction: 0x00023cb4
   23bd0:			; <UNDEFINED> instruction: 0x00023cb4
   23bd4:			; <UNDEFINED> instruction: 0x00023cb4
   23bd8:			; <UNDEFINED> instruction: 0x00023cb4
   23bdc:			; <UNDEFINED> instruction: 0x00023cb4
   23be0:			; <UNDEFINED> instruction: 0x00023cb4
   23be4:			; <UNDEFINED> instruction: 0x00023cb4
   23be8:			; <UNDEFINED> instruction: 0x00023cb4
   23bec:			; <UNDEFINED> instruction: 0x00023cb4
   23bf0:			; <UNDEFINED> instruction: 0x00023cb4
   23bf4:			; <UNDEFINED> instruction: 0x00023cb4
   23bf8:			; <UNDEFINED> instruction: 0x00023cb4
   23bfc:			; <UNDEFINED> instruction: 0x00023cb4
   23c00:			; <UNDEFINED> instruction: 0x00023cb4
   23c04:			; <UNDEFINED> instruction: 0x00023cb4
   23c08:			; <UNDEFINED> instruction: 0x00023cb4
   23c0c:			; <UNDEFINED> instruction: 0x00023cb4
   23c10:			; <UNDEFINED> instruction: 0x00023cb4
   23c14:	andeq	r3, r2, r4, lsr #25
   23c18:	andeq	r3, r2, r4, lsr #25
   23c1c:	andeq	r3, r2, r4, lsr #25
   23c20:	andeq	r3, r2, r4, lsr #25
   23c24:	andeq	r3, r2, r4, lsr #25
   23c28:	andeq	r3, r2, r4, lsr #25
   23c2c:			; <UNDEFINED> instruction: 0x00023cb4
   23c30:			; <UNDEFINED> instruction: 0x00023cb4
   23c34:			; <UNDEFINED> instruction: 0x00023cb4
   23c38:			; <UNDEFINED> instruction: 0x00023cb4
   23c3c:			; <UNDEFINED> instruction: 0x00023cb4
   23c40:			; <UNDEFINED> instruction: 0x00023cb4
   23c44:			; <UNDEFINED> instruction: 0x00023cb4
   23c48:			; <UNDEFINED> instruction: 0x00023cb4
   23c4c:			; <UNDEFINED> instruction: 0x00023cb4
   23c50:			; <UNDEFINED> instruction: 0x00023cb4
   23c54:			; <UNDEFINED> instruction: 0x00023cb4
   23c58:			; <UNDEFINED> instruction: 0x00023cb4
   23c5c:			; <UNDEFINED> instruction: 0x00023cb4
   23c60:			; <UNDEFINED> instruction: 0x00023cb4
   23c64:			; <UNDEFINED> instruction: 0x00023cb4
   23c68:			; <UNDEFINED> instruction: 0x00023cb4
   23c6c:			; <UNDEFINED> instruction: 0x00023cb4
   23c70:			; <UNDEFINED> instruction: 0x00023cb4
   23c74:			; <UNDEFINED> instruction: 0x00023cb4
   23c78:			; <UNDEFINED> instruction: 0x00023cb4
   23c7c:			; <UNDEFINED> instruction: 0x00023cb4
   23c80:			; <UNDEFINED> instruction: 0x00023cb4
   23c84:			; <UNDEFINED> instruction: 0x00023cb4
   23c88:			; <UNDEFINED> instruction: 0x00023cb4
   23c8c:			; <UNDEFINED> instruction: 0x00023cb4
   23c90:			; <UNDEFINED> instruction: 0x00023cb4
   23c94:	andeq	r3, r2, r4, lsr #25
   23c98:	andeq	r3, r2, r4, lsr #25
   23c9c:	andeq	r3, r2, r4, lsr #25
   23ca0:	andeq	r3, r2, r4, lsr #25
   23ca4:	movw	r0, #1
   23ca8:	and	r0, r0, #1
   23cac:	strb	r0, [sp, #11]
   23cb0:	b	23cc0 <__assert_fail@plt+0x127e4>
   23cb4:	movw	r0, #0
   23cb8:	and	r0, r0, #1
   23cbc:	strb	r0, [sp, #11]
   23cc0:	ldrb	r0, [sp, #11]
   23cc4:	and	r0, r0, #1
   23cc8:	add	sp, sp, #12
   23ccc:	bx	lr
   23cd0:	sub	sp, sp, #12
   23cd4:	str	r0, [sp, #4]
   23cd8:	ldr	r0, [sp, #4]
   23cdc:	sub	r1, r0, #9
   23ce0:	cmp	r1, #5
   23ce4:	str	r0, [sp]
   23ce8:	bcc	23d00 <__assert_fail@plt+0x12824>
   23cec:	b	23cf0 <__assert_fail@plt+0x12814>
   23cf0:	ldr	r0, [sp]
   23cf4:	cmp	r0, #32
   23cf8:	bne	23d10 <__assert_fail@plt+0x12834>
   23cfc:	b	23d00 <__assert_fail@plt+0x12824>
   23d00:	movw	r0, #1
   23d04:	and	r0, r0, #1
   23d08:	strb	r0, [sp, #11]
   23d0c:	b	23d1c <__assert_fail@plt+0x12840>
   23d10:	movw	r0, #0
   23d14:	and	r0, r0, #1
   23d18:	strb	r0, [sp, #11]
   23d1c:	ldrb	r0, [sp, #11]
   23d20:	and	r0, r0, #1
   23d24:	add	sp, sp, #12
   23d28:	bx	lr
   23d2c:	sub	sp, sp, #8
   23d30:	str	r0, [sp]
   23d34:	ldr	r0, [sp]
   23d38:	sub	r0, r0, #65	; 0x41
   23d3c:	cmp	r0, #25
   23d40:	bhi	23d58 <__assert_fail@plt+0x1287c>
   23d44:	b	23d48 <__assert_fail@plt+0x1286c>
   23d48:	movw	r0, #1
   23d4c:	and	r0, r0, #1
   23d50:	strb	r0, [sp, #7]
   23d54:	b	23d64 <__assert_fail@plt+0x12888>
   23d58:	movw	r0, #0
   23d5c:	and	r0, r0, #1
   23d60:	strb	r0, [sp, #7]
   23d64:	ldrb	r0, [sp, #7]
   23d68:	and	r0, r0, #1
   23d6c:	add	sp, sp, #8
   23d70:	bx	lr
   23d74:	sub	sp, sp, #12
   23d78:	str	r0, [sp, #4]
   23d7c:	ldr	r0, [sp, #4]
   23d80:	sub	r1, r0, #48	; 0x30
   23d84:	cmp	r1, #10
   23d88:	str	r0, [sp]
   23d8c:	bcc	23dbc <__assert_fail@plt+0x128e0>
   23d90:	b	23d94 <__assert_fail@plt+0x128b8>
   23d94:	ldr	r0, [sp]
   23d98:	sub	r1, r0, #65	; 0x41
   23d9c:	cmp	r1, #6
   23da0:	bcc	23dbc <__assert_fail@plt+0x128e0>
   23da4:	b	23da8 <__assert_fail@plt+0x128cc>
   23da8:	ldr	r0, [sp]
   23dac:	sub	r1, r0, #97	; 0x61
   23db0:	cmp	r1, #5
   23db4:	bhi	23dcc <__assert_fail@plt+0x128f0>
   23db8:	b	23dbc <__assert_fail@plt+0x128e0>
   23dbc:	movw	r0, #1
   23dc0:	and	r0, r0, #1
   23dc4:	strb	r0, [sp, #11]
   23dc8:	b	23dd8 <__assert_fail@plt+0x128fc>
   23dcc:	movw	r0, #0
   23dd0:	and	r0, r0, #1
   23dd4:	strb	r0, [sp, #11]
   23dd8:	ldrb	r0, [sp, #11]
   23ddc:	and	r0, r0, #1
   23de0:	add	sp, sp, #12
   23de4:	bx	lr
   23de8:	sub	sp, sp, #8
   23dec:	str	r0, [sp]
   23df0:	ldr	r0, [sp]
   23df4:	sub	r0, r0, #65	; 0x41
   23df8:	cmp	r0, #25
   23dfc:	bhi	23e18 <__assert_fail@plt+0x1293c>
   23e00:	b	23e04 <__assert_fail@plt+0x12928>
   23e04:	ldr	r0, [sp]
   23e08:	sub	r0, r0, #65	; 0x41
   23e0c:	add	r0, r0, #97	; 0x61
   23e10:	str	r0, [sp, #4]
   23e14:	b	23e20 <__assert_fail@plt+0x12944>
   23e18:	ldr	r0, [sp]
   23e1c:	str	r0, [sp, #4]
   23e20:	ldr	r0, [sp, #4]
   23e24:	add	sp, sp, #8
   23e28:	bx	lr
   23e2c:	sub	sp, sp, #8
   23e30:	str	r0, [sp]
   23e34:	ldr	r0, [sp]
   23e38:	sub	r0, r0, #97	; 0x61
   23e3c:	cmp	r0, #25
   23e40:	bhi	23e5c <__assert_fail@plt+0x12980>
   23e44:	b	23e48 <__assert_fail@plt+0x1296c>
   23e48:	ldr	r0, [sp]
   23e4c:	sub	r0, r0, #97	; 0x61
   23e50:	add	r0, r0, #65	; 0x41
   23e54:	str	r0, [sp, #4]
   23e58:	b	23e64 <__assert_fail@plt+0x12988>
   23e5c:	ldr	r0, [sp]
   23e60:	str	r0, [sp, #4]
   23e64:	ldr	r0, [sp, #4]
   23e68:	add	sp, sp, #8
   23e6c:	bx	lr
   23e70:	push	{r4, r5, fp, lr}
   23e74:	add	fp, sp, #8
   23e78:	sub	sp, sp, #272	; 0x110
   23e7c:	add	r1, sp, #7
   23e80:	str	r0, [fp, #-16]
   23e84:	ldr	r0, [fp, #-16]
   23e88:	movw	r2, #257	; 0x101
   23e8c:	bl	23f0c <__assert_fail@plt+0x12a30>
   23e90:	cmp	r0, #0
   23e94:	beq	23ea8 <__assert_fail@plt+0x129cc>
   23e98:	movw	r0, #0
   23e9c:	and	r0, r0, #1
   23ea0:	strb	r0, [fp, #-9]
   23ea4:	b	23efc <__assert_fail@plt+0x12a20>
   23ea8:	add	r0, sp, #7
   23eac:	movw	r1, #22470	; 0x57c6
   23eb0:	movt	r1, #2
   23eb4:	bl	111e8 <strcmp@plt>
   23eb8:	cmp	r0, #0
   23ebc:	movw	r0, #1
   23ec0:	str	r0, [sp]
   23ec4:	beq	23ee8 <__assert_fail@plt+0x12a0c>
   23ec8:	add	r0, sp, #7
   23ecc:	movw	r1, #22472	; 0x57c8
   23ed0:	movt	r1, #2
   23ed4:	bl	111e8 <strcmp@plt>
   23ed8:	cmp	r0, #0
   23edc:	movw	r0, #0
   23ee0:	moveq	r0, #1
   23ee4:	str	r0, [sp]
   23ee8:	ldr	r0, [sp]
   23eec:	mvn	r1, #0
   23ef0:	eor	r0, r0, r1
   23ef4:	and	r0, r0, #1
   23ef8:	strb	r0, [fp, #-9]
   23efc:	ldrb	r0, [fp, #-9]
   23f00:	and	r0, r0, #1
   23f04:	sub	sp, fp, #8
   23f08:	pop	{r4, r5, fp, pc}
   23f0c:	push	{fp, lr}
   23f10:	mov	fp, sp
   23f14:	sub	sp, sp, #16
   23f18:	str	r0, [fp, #-4]
   23f1c:	str	r1, [sp, #8]
   23f20:	str	r2, [sp, #4]
   23f24:	ldr	r0, [fp, #-4]
   23f28:	ldr	r1, [sp, #8]
   23f2c:	ldr	r2, [sp, #4]
   23f30:	bl	23f3c <__assert_fail@plt+0x12a60>
   23f34:	mov	sp, fp
   23f38:	pop	{fp, pc}
   23f3c:	push	{fp, lr}
   23f40:	mov	fp, sp
   23f44:	sub	sp, sp, #24
   23f48:	str	r0, [fp, #-8]
   23f4c:	str	r1, [sp, #12]
   23f50:	str	r2, [sp, #8]
   23f54:	ldr	r0, [fp, #-8]
   23f58:	bl	2403c <__assert_fail@plt+0x12b60>
   23f5c:	str	r0, [sp, #4]
   23f60:	ldr	r0, [sp, #4]
   23f64:	movw	r1, #0
   23f68:	cmp	r0, r1
   23f6c:	bne	23f94 <__assert_fail@plt+0x12ab8>
   23f70:	ldr	r0, [sp, #8]
   23f74:	cmp	r0, #0
   23f78:	bls	23f88 <__assert_fail@plt+0x12aac>
   23f7c:	ldr	r0, [sp, #12]
   23f80:	movw	r1, #0
   23f84:	strb	r1, [r0]
   23f88:	movw	r0, #22
   23f8c:	str	r0, [fp, #-4]
   23f90:	b	24010 <__assert_fail@plt+0x12b34>
   23f94:	ldr	r0, [sp, #4]
   23f98:	bl	1135c <strlen@plt>
   23f9c:	str	r0, [sp]
   23fa0:	ldr	r0, [sp]
   23fa4:	ldr	r1, [sp, #8]
   23fa8:	cmp	r0, r1
   23fac:	bcs	23fd0 <__assert_fail@plt+0x12af4>
   23fb0:	ldr	r0, [sp, #12]
   23fb4:	ldr	r1, [sp, #4]
   23fb8:	ldr	r2, [sp]
   23fbc:	add	r2, r2, #1
   23fc0:	bl	1123c <memcpy@plt>
   23fc4:	movw	r0, #0
   23fc8:	str	r0, [fp, #-4]
   23fcc:	b	24010 <__assert_fail@plt+0x12b34>
   23fd0:	ldr	r0, [sp, #8]
   23fd4:	cmp	r0, #0
   23fd8:	bls	24008 <__assert_fail@plt+0x12b2c>
   23fdc:	ldr	r0, [sp, #12]
   23fe0:	ldr	r1, [sp, #4]
   23fe4:	ldr	r2, [sp, #8]
   23fe8:	sub	r2, r2, #1
   23fec:	bl	1123c <memcpy@plt>
   23ff0:	ldr	r0, [sp, #12]
   23ff4:	ldr	r1, [sp, #8]
   23ff8:	sub	r1, r1, #1
   23ffc:	add	r0, r0, r1
   24000:	movw	r1, #0
   24004:	strb	r1, [r0]
   24008:	movw	r0, #34	; 0x22
   2400c:	str	r0, [fp, #-4]
   24010:	ldr	r0, [fp, #-4]
   24014:	mov	sp, fp
   24018:	pop	{fp, pc}
   2401c:	push	{fp, lr}
   24020:	mov	fp, sp
   24024:	sub	sp, sp, #8
   24028:	str	r0, [sp, #4]
   2402c:	ldr	r0, [sp, #4]
   24030:	bl	2403c <__assert_fail@plt+0x12b60>
   24034:	mov	sp, fp
   24038:	pop	{fp, pc}
   2403c:	push	{fp, lr}
   24040:	mov	fp, sp
   24044:	sub	sp, sp, #8
   24048:	str	r0, [sp, #4]
   2404c:	ldr	r0, [sp, #4]
   24050:	movw	r1, #0
   24054:	bl	113f8 <setlocale@plt>
   24058:	str	r0, [sp]
   2405c:	ldr	r0, [sp]
   24060:	mov	sp, fp
   24064:	pop	{fp, pc}
   24068:	cmp	r3, #0
   2406c:	cmpeq	r2, #0
   24070:	bne	24094 <__assert_fail@plt+0x12bb8>
   24074:	cmp	r1, #0
   24078:	movlt	r1, #-2147483648	; 0x80000000
   2407c:	movlt	r0, #0
   24080:	blt	24090 <__assert_fail@plt+0x12bb4>
   24084:	cmpeq	r0, #0
   24088:	mvnne	r1, #-2147483648	; 0x80000000
   2408c:	mvnne	r0, #0
   24090:	b	24178 <__assert_fail@plt+0x12c9c>
   24094:	sub	sp, sp, #8
   24098:	push	{sp, lr}
   2409c:	cmp	r1, #0
   240a0:	blt	240c0 <__assert_fail@plt+0x12be4>
   240a4:	cmp	r3, #0
   240a8:	blt	240f4 <__assert_fail@plt+0x12c18>
   240ac:	bl	24188 <__assert_fail@plt+0x12cac>
   240b0:	ldr	lr, [sp, #4]
   240b4:	add	sp, sp, #8
   240b8:	pop	{r2, r3}
   240bc:	bx	lr
   240c0:	rsbs	r0, r0, #0
   240c4:	sbc	r1, r1, r1, lsl #1
   240c8:	cmp	r3, #0
   240cc:	blt	24118 <__assert_fail@plt+0x12c3c>
   240d0:	bl	24188 <__assert_fail@plt+0x12cac>
   240d4:	ldr	lr, [sp, #4]
   240d8:	add	sp, sp, #8
   240dc:	pop	{r2, r3}
   240e0:	rsbs	r0, r0, #0
   240e4:	sbc	r1, r1, r1, lsl #1
   240e8:	rsbs	r2, r2, #0
   240ec:	sbc	r3, r3, r3, lsl #1
   240f0:	bx	lr
   240f4:	rsbs	r2, r2, #0
   240f8:	sbc	r3, r3, r3, lsl #1
   240fc:	bl	24188 <__assert_fail@plt+0x12cac>
   24100:	ldr	lr, [sp, #4]
   24104:	add	sp, sp, #8
   24108:	pop	{r2, r3}
   2410c:	rsbs	r0, r0, #0
   24110:	sbc	r1, r1, r1, lsl #1
   24114:	bx	lr
   24118:	rsbs	r2, r2, #0
   2411c:	sbc	r3, r3, r3, lsl #1
   24120:	bl	24188 <__assert_fail@plt+0x12cac>
   24124:	ldr	lr, [sp, #4]
   24128:	add	sp, sp, #8
   2412c:	pop	{r2, r3}
   24130:	rsbs	r2, r2, #0
   24134:	sbc	r3, r3, r3, lsl #1
   24138:	bx	lr
   2413c:	cmp	r3, #0
   24140:	cmpeq	r2, #0
   24144:	bne	2415c <__assert_fail@plt+0x12c80>
   24148:	cmp	r1, #0
   2414c:	cmpeq	r0, #0
   24150:	mvnne	r1, #0
   24154:	mvnne	r0, #0
   24158:	b	24178 <__assert_fail@plt+0x12c9c>
   2415c:	sub	sp, sp, #8
   24160:	push	{sp, lr}
   24164:	bl	24188 <__assert_fail@plt+0x12cac>
   24168:	ldr	lr, [sp, #4]
   2416c:	add	sp, sp, #8
   24170:	pop	{r2, r3}
   24174:	bx	lr
   24178:	push	{r1, lr}
   2417c:	mov	r0, #8
   24180:	bl	111dc <raise@plt>
   24184:	pop	{r1, pc}
   24188:	cmp	r1, r3
   2418c:	cmpeq	r0, r2
   24190:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24194:	mov	r4, r0
   24198:	movcc	r0, #0
   2419c:	mov	r5, r1
   241a0:	ldr	lr, [sp, #36]	; 0x24
   241a4:	movcc	r1, r0
   241a8:	bcc	242a4 <__assert_fail@plt+0x12dc8>
   241ac:	cmp	r3, #0
   241b0:	clzeq	ip, r2
   241b4:	clzne	ip, r3
   241b8:	addeq	ip, ip, #32
   241bc:	cmp	r5, #0
   241c0:	clzeq	r1, r4
   241c4:	addeq	r1, r1, #32
   241c8:	clzne	r1, r5
   241cc:	sub	ip, ip, r1
   241d0:	sub	sl, ip, #32
   241d4:	lsl	r9, r3, ip
   241d8:	rsb	fp, ip, #32
   241dc:	orr	r9, r9, r2, lsl sl
   241e0:	orr	r9, r9, r2, lsr fp
   241e4:	lsl	r8, r2, ip
   241e8:	cmp	r5, r9
   241ec:	cmpeq	r4, r8
   241f0:	movcc	r0, #0
   241f4:	movcc	r1, r0
   241f8:	bcc	24214 <__assert_fail@plt+0x12d38>
   241fc:	mov	r0, #1
   24200:	subs	r4, r4, r8
   24204:	lsl	r1, r0, sl
   24208:	orr	r1, r1, r0, lsr fp
   2420c:	lsl	r0, r0, ip
   24210:	sbc	r5, r5, r9
   24214:	cmp	ip, #0
   24218:	beq	242a4 <__assert_fail@plt+0x12dc8>
   2421c:	lsr	r6, r8, #1
   24220:	orr	r6, r6, r9, lsl #31
   24224:	lsr	r7, r9, #1
   24228:	mov	r2, ip
   2422c:	b	24250 <__assert_fail@plt+0x12d74>
   24230:	subs	r3, r4, r6
   24234:	sbc	r8, r5, r7
   24238:	adds	r3, r3, r3
   2423c:	adc	r8, r8, r8
   24240:	adds	r4, r3, #1
   24244:	adc	r5, r8, #0
   24248:	subs	r2, r2, #1
   2424c:	beq	2426c <__assert_fail@plt+0x12d90>
   24250:	cmp	r5, r7
   24254:	cmpeq	r4, r6
   24258:	bcs	24230 <__assert_fail@plt+0x12d54>
   2425c:	adds	r4, r4, r4
   24260:	adc	r5, r5, r5
   24264:	subs	r2, r2, #1
   24268:	bne	24250 <__assert_fail@plt+0x12d74>
   2426c:	lsr	r3, r4, ip
   24270:	orr	r3, r3, r5, lsl fp
   24274:	lsr	r2, r5, ip
   24278:	orr	r3, r3, r5, lsr sl
   2427c:	adds	r0, r0, r4
   24280:	mov	r4, r3
   24284:	lsl	r3, r2, ip
   24288:	orr	r3, r3, r4, lsl sl
   2428c:	lsl	ip, r4, ip
   24290:	orr	r3, r3, r4, lsr fp
   24294:	adc	r1, r1, r5
   24298:	subs	r0, r0, ip
   2429c:	mov	r5, r2
   242a0:	sbc	r1, r1, r3
   242a4:	cmp	lr, #0
   242a8:	strdne	r4, [lr]
   242ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   242b0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   242b4:	mov	r7, r0
   242b8:	ldr	r6, [pc, #72]	; 24308 <__assert_fail@plt+0x12e2c>
   242bc:	ldr	r5, [pc, #72]	; 2430c <__assert_fail@plt+0x12e30>
   242c0:	add	r6, pc, r6
   242c4:	add	r5, pc, r5
   242c8:	sub	r6, r6, r5
   242cc:	mov	r8, r1
   242d0:	mov	r9, r2
   242d4:	bl	1118c <fstatfs64@plt-0x20>
   242d8:	asrs	r6, r6, #2
   242dc:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   242e0:	mov	r4, #0
   242e4:	add	r4, r4, #1
   242e8:	ldr	r3, [r5], #4
   242ec:	mov	r2, r9
   242f0:	mov	r1, r8
   242f4:	mov	r0, r7
   242f8:	blx	r3
   242fc:	cmp	r6, r4
   24300:	bne	242e4 <__assert_fail@plt+0x12e08>
   24304:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   24308:	andeq	r1, r1, r4, asr #24
   2430c:	andeq	r1, r1, ip, lsr ip
   24310:	bx	lr
   24314:	ldr	r3, [pc, #12]	; 24328 <__assert_fail@plt+0x12e4c>
   24318:	mov	r1, #0
   2431c:	add	r3, pc, r3
   24320:	ldr	r2, [r3]
   24324:	b	113a4 <__cxa_atexit@plt>
   24328:	andeq	r1, r1, r4, lsl #28
   2432c:	mov	r2, r1
   24330:	mov	r1, r0
   24334:	mov	r0, #3
   24338:	b	11470 <__xstat64@plt>
   2433c:	mov	r2, r1
   24340:	mov	r1, r0
   24344:	mov	r0, #3
   24348:	b	1129c <__fxstat64@plt>
   2434c:	mov	r2, r1
   24350:	mov	r1, r0
   24354:	mov	r0, #3
   24358:	b	114ac <__lxstat64@plt>
   2435c:	push	{lr}		; (str lr, [sp, #-4]!)
   24360:	sub	sp, sp, #12
   24364:	str	r3, [sp]
   24368:	mov	r3, r2
   2436c:	mov	r2, r1
   24370:	mov	r1, r0
   24374:	mov	r0, #3
   24378:	bl	11284 <__fxstatat64@plt>
   2437c:	add	sp, sp, #12
   24380:	pop	{pc}		; (ldr pc, [sp], #4)

Disassembly of section .fini:

00024384 <.fini>:
   24384:	push	{r3, lr}
   24388:	pop	{r3, pc}
