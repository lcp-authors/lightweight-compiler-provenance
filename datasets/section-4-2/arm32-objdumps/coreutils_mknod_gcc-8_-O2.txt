
../repos/coreutils/src/mknod:     file format elf32-littlearm


Disassembly of section .init:

00011468 <.init>:
   11468:	push	{r3, lr}
   1146c:	bl	120e8 <__assert_fail@plt+0x81c>
   11470:	pop	{r3, pc}

Disassembly of section .plt:

00011474 <fstatfs64@plt-0x14>:
   11474:	push	{lr}		; (str lr, [sp, #-4]!)
   11478:	ldr	lr, [pc, #4]	; 11484 <fstatfs64@plt-0x4>
   1147c:	add	lr, pc, lr
   11480:	ldr	pc, [lr, #8]!
   11484:	andeq	fp, r1, ip, ror fp

00011488 <fstatfs64@plt>:
   11488:	add	ip, pc, #0, 12
   1148c:	add	ip, ip, #110592	; 0x1b000
   11490:	ldr	pc, [ip, #2940]!	; 0xb7c

00011494 <selabel_lookup@plt>:
   11494:	add	ip, pc, #0, 12
   11498:	add	ip, ip, #110592	; 0x1b000
   1149c:	ldr	pc, [ip, #2932]!	; 0xb74

000114a0 <calloc@plt>:
   114a0:	add	ip, pc, #0, 12
   114a4:	add	ip, ip, #110592	; 0x1b000
   114a8:	ldr	pc, [ip, #2924]!	; 0xb6c

000114ac <fputs_unlocked@plt>:
   114ac:	add	ip, pc, #0, 12
   114b0:	add	ip, ip, #110592	; 0x1b000
   114b4:	ldr	pc, [ip, #2916]!	; 0xb64

000114b8 <raise@plt>:
   114b8:	add	ip, pc, #0, 12
   114bc:	add	ip, ip, #110592	; 0x1b000
   114c0:	ldr	pc, [ip, #2908]!	; 0xb5c

000114c4 <is_selinux_enabled@plt>:
   114c4:	add	ip, pc, #0, 12
   114c8:	add	ip, ip, #110592	; 0x1b000
   114cc:	ldr	pc, [ip, #2900]!	; 0xb54

000114d0 <strcmp@plt>:
   114d0:	add	ip, pc, #0, 12
   114d4:	add	ip, ip, #110592	; 0x1b000
   114d8:	ldr	pc, [ip, #2892]!	; 0xb4c

000114dc <context_type_get@plt>:
   114dc:	add	ip, pc, #0, 12
   114e0:	add	ip, ip, #110592	; 0x1b000
   114e4:	ldr	pc, [ip, #2884]!	; 0xb44

000114e8 <fflush@plt>:
   114e8:	add	ip, pc, #0, 12
   114ec:	add	ip, ip, #110592	; 0x1b000
   114f0:	ldr	pc, [ip, #2876]!	; 0xb3c

000114f4 <lsetfilecon@plt>:
   114f4:	add	ip, pc, #0, 12
   114f8:	add	ip, ip, #110592	; 0x1b000
   114fc:	ldr	pc, [ip, #2868]!	; 0xb34

00011500 <memmove@plt>:
   11500:	add	ip, pc, #0, 12
   11504:	add	ip, ip, #110592	; 0x1b000
   11508:	ldr	pc, [ip, #2860]!	; 0xb2c

0001150c <free@plt>:
   1150c:	add	ip, pc, #0, 12
   11510:	add	ip, ip, #110592	; 0x1b000
   11514:	ldr	pc, [ip, #2852]!	; 0xb24

00011518 <faccessat@plt>:
   11518:	add	ip, pc, #0, 12
   1151c:	add	ip, ip, #110592	; 0x1b000
   11520:	ldr	pc, [ip, #2844]!	; 0xb1c

00011524 <_exit@plt>:
   11524:	add	ip, pc, #0, 12
   11528:	add	ip, ip, #110592	; 0x1b000
   1152c:	ldr	pc, [ip, #2836]!	; 0xb14

00011530 <memcpy@plt>:
   11530:	add	ip, pc, #0, 12
   11534:	add	ip, ip, #110592	; 0x1b000
   11538:	ldr	pc, [ip, #2828]!	; 0xb0c

0001153c <__strtoull_internal@plt>:
   1153c:	add	ip, pc, #0, 12
   11540:	add	ip, ip, #110592	; 0x1b000
   11544:	ldr	pc, [ip, #2820]!	; 0xb04

00011548 <mbsinit@plt>:
   11548:	add	ip, pc, #0, 12
   1154c:	add	ip, ip, #110592	; 0x1b000
   11550:	ldr	pc, [ip, #2812]!	; 0xafc

00011554 <context_new@plt>:
   11554:	add	ip, pc, #0, 12
   11558:	add	ip, ip, #110592	; 0x1b000
   1155c:	ldr	pc, [ip, #2804]!	; 0xaf4

00011560 <memcmp@plt>:
   11560:	add	ip, pc, #0, 12
   11564:	add	ip, ip, #110592	; 0x1b000
   11568:	ldr	pc, [ip, #2796]!	; 0xaec

0001156c <fputc_unlocked@plt>:
   1156c:	add	ip, pc, #0, 12
   11570:	add	ip, ip, #110592	; 0x1b000
   11574:	ldr	pc, [ip, #2788]!	; 0xae4

00011578 <dcgettext@plt>:
   11578:	add	ip, pc, #0, 12
   1157c:	add	ip, ip, #110592	; 0x1b000
   11580:	ldr	pc, [ip, #2780]!	; 0xadc

00011584 <context_type_set@plt>:
   11584:	add	ip, pc, #0, 12
   11588:	add	ip, ip, #110592	; 0x1b000
   1158c:	ldr	pc, [ip, #2772]!	; 0xad4

00011590 <realloc@plt>:
   11590:	add	ip, pc, #0, 12
   11594:	add	ip, ip, #110592	; 0x1b000
   11598:	ldr	pc, [ip, #2764]!	; 0xacc

0001159c <fgetfilecon@plt>:
   1159c:	add	ip, pc, #0, 12
   115a0:	add	ip, ip, #110592	; 0x1b000
   115a4:	ldr	pc, [ip, #2756]!	; 0xac4

000115a8 <textdomain@plt>:
   115a8:	add	ip, pc, #0, 12
   115ac:	add	ip, ip, #110592	; 0x1b000
   115b0:	ldr	pc, [ip, #2748]!	; 0xabc

000115b4 <rawmemchr@plt>:
   115b4:	add	ip, pc, #0, 12
   115b8:	add	ip, ip, #110592	; 0x1b000
   115bc:	ldr	pc, [ip, #2740]!	; 0xab4

000115c0 <__fxstatat64@plt>:
   115c0:	add	ip, pc, #0, 12
   115c4:	add	ip, ip, #110592	; 0x1b000
   115c8:	ldr	pc, [ip, #2732]!	; 0xaac

000115cc <iswprint@plt>:
   115cc:	add	ip, pc, #0, 12
   115d0:	add	ip, ip, #110592	; 0x1b000
   115d4:	ldr	pc, [ip, #2724]!	; 0xaa4

000115d8 <__fxstat64@plt>:
   115d8:	add	ip, pc, #0, 12
   115dc:	add	ip, ip, #110592	; 0x1b000
   115e0:	ldr	pc, [ip, #2716]!	; 0xa9c

000115e4 <readlink@plt>:
   115e4:	add	ip, pc, #0, 12
   115e8:	add	ip, ip, #110592	; 0x1b000
   115ec:	ldr	pc, [ip, #2708]!	; 0xa94

000115f0 <fwrite@plt>:
   115f0:	add	ip, pc, #0, 12
   115f4:	add	ip, ip, #110592	; 0x1b000
   115f8:	ldr	pc, [ip, #2700]!	; 0xa8c

000115fc <lseek64@plt>:
   115fc:	add	ip, pc, #0, 12
   11600:	add	ip, ip, #110592	; 0x1b000
   11604:	ldr	pc, [ip, #2692]!	; 0xa84

00011608 <__ctype_get_mb_cur_max@plt>:
   11608:	add	ip, pc, #0, 12
   1160c:	add	ip, ip, #110592	; 0x1b000
   11610:	ldr	pc, [ip, #2684]!	; 0xa7c

00011614 <getcon@plt>:
   11614:	add	ip, pc, #0, 12
   11618:	add	ip, ip, #110592	; 0x1b000
   1161c:	ldr	pc, [ip, #2676]!	; 0xa74

00011620 <__fpending@plt>:
   11620:	add	ip, pc, #0, 12
   11624:	add	ip, ip, #110592	; 0x1b000
   11628:	ldr	pc, [ip, #2668]!	; 0xa6c

0001162c <mbrtowc@plt>:
   1162c:	add	ip, pc, #0, 12
   11630:	add	ip, ip, #110592	; 0x1b000
   11634:	ldr	pc, [ip, #2660]!	; 0xa64

00011638 <error@plt>:
   11638:	add	ip, pc, #0, 12
   1163c:	add	ip, ip, #110592	; 0x1b000
   11640:	ldr	pc, [ip, #2652]!	; 0xa5c

00011644 <open64@plt>:
   11644:	add	ip, pc, #0, 12
   11648:	add	ip, ip, #110592	; 0x1b000
   1164c:	ldr	pc, [ip, #2644]!	; 0xa54

00011650 <lgetfilecon@plt>:
   11650:	add	ip, pc, #0, 12
   11654:	add	ip, ip, #110592	; 0x1b000
   11658:	ldr	pc, [ip, #2636]!	; 0xa4c

0001165c <malloc@plt>:
   1165c:	add	ip, pc, #0, 12
   11660:	add	ip, ip, #110592	; 0x1b000
   11664:	ldr	pc, [ip, #2628]!	; 0xa44

00011668 <__libc_start_main@plt>:
   11668:	add	ip, pc, #0, 12
   1166c:	add	ip, ip, #110592	; 0x1b000
   11670:	ldr	pc, [ip, #2620]!	; 0xa3c

00011674 <__freading@plt>:
   11674:	add	ip, pc, #0, 12
   11678:	add	ip, ip, #110592	; 0x1b000
   1167c:	ldr	pc, [ip, #2612]!	; 0xa34

00011680 <__gmon_start__@plt>:
   11680:	add	ip, pc, #0, 12
   11684:	add	ip, ip, #110592	; 0x1b000
   11688:	ldr	pc, [ip, #2604]!	; 0xa2c

0001168c <context_free@plt>:
   1168c:	add	ip, pc, #0, 12
   11690:	add	ip, ip, #110592	; 0x1b000
   11694:	ldr	pc, [ip, #2596]!	; 0xa24

00011698 <mempcpy@plt>:
   11698:	add	ip, pc, #0, 12
   1169c:	add	ip, ip, #110592	; 0x1b000
   116a0:	ldr	pc, [ip, #2588]!	; 0xa1c

000116a4 <getopt_long@plt>:
   116a4:	add	ip, pc, #0, 12
   116a8:	add	ip, ip, #110592	; 0x1b000
   116ac:	ldr	pc, [ip, #2580]!	; 0xa14

000116b0 <__ctype_b_loc@plt>:
   116b0:	add	ip, pc, #0, 12
   116b4:	add	ip, ip, #110592	; 0x1b000
   116b8:	ldr	pc, [ip, #2572]!	; 0xa0c

000116bc <getcwd@plt>:
   116bc:	add	ip, pc, #0, 12
   116c0:	add	ip, ip, #110592	; 0x1b000
   116c4:	ldr	pc, [ip, #2564]!	; 0xa04

000116c8 <exit@plt>:
   116c8:	add	ip, pc, #0, 12
   116cc:	add	ip, ip, #110592	; 0x1b000
   116d0:	ldr	pc, [ip, #2556]!	; 0x9fc

000116d4 <getfilecon@plt>:
   116d4:	add	ip, pc, #0, 12
   116d8:	add	ip, ip, #110592	; 0x1b000
   116dc:	ldr	pc, [ip, #2548]!	; 0x9f4

000116e0 <strlen@plt>:
   116e0:	add	ip, pc, #0, 12
   116e4:	add	ip, ip, #110592	; 0x1b000
   116e8:	ldr	pc, [ip, #2540]!	; 0x9ec

000116ec <selabel_open@plt>:
   116ec:	add	ip, pc, #0, 12
   116f0:	add	ip, ip, #110592	; 0x1b000
   116f4:	ldr	pc, [ip, #2532]!	; 0x9e4

000116f8 <strchr@plt>:
   116f8:	add	ip, pc, #0, 12
   116fc:	add	ip, ip, #110592	; 0x1b000
   11700:	ldr	pc, [ip, #2524]!	; 0x9dc

00011704 <openat64@plt>:
   11704:	add	ip, pc, #0, 12
   11708:	add	ip, ip, #110592	; 0x1b000
   1170c:	ldr	pc, [ip, #2516]!	; 0x9d4

00011710 <setfscreatecon@plt>:
   11710:	add	ip, pc, #0, 12
   11714:	add	ip, ip, #110592	; 0x1b000
   11718:	ldr	pc, [ip, #2508]!	; 0x9cc

0001171c <__errno_location@plt>:
   1171c:	add	ip, pc, #0, 12
   11720:	add	ip, ip, #110592	; 0x1b000
   11724:	ldr	pc, [ip, #2500]!	; 0x9c4

00011728 <__sprintf_chk@plt>:
   11728:	add	ip, pc, #0, 12
   1172c:	add	ip, ip, #110592	; 0x1b000
   11730:	ldr	pc, [ip, #2492]!	; 0x9bc

00011734 <__cxa_atexit@plt>:
   11734:	add	ip, pc, #0, 12
   11738:	add	ip, ip, #110592	; 0x1b000
   1173c:	ldr	pc, [ip, #2484]!	; 0x9b4

00011740 <memset@plt>:
   11740:	add	ip, pc, #0, 12
   11744:	add	ip, ip, #110592	; 0x1b000
   11748:	ldr	pc, [ip, #2476]!	; 0x9ac

0001174c <__printf_chk@plt>:
   1174c:	add	ip, pc, #0, 12
   11750:	add	ip, ip, #110592	; 0x1b000
   11754:	ldr	pc, [ip, #2468]!	; 0x9a4

00011758 <fileno@plt>:
   11758:	add	ip, pc, #0, 12
   1175c:	add	ip, ip, #110592	; 0x1b000
   11760:	ldr	pc, [ip, #2460]!	; 0x99c

00011764 <__fprintf_chk@plt>:
   11764:	add	ip, pc, #0, 12
   11768:	add	ip, ip, #110592	; 0x1b000
   1176c:	ldr	pc, [ip, #2452]!	; 0x994

00011770 <fclose@plt>:
   11770:	add	ip, pc, #0, 12
   11774:	add	ip, ip, #110592	; 0x1b000
   11778:	ldr	pc, [ip, #2444]!	; 0x98c

0001177c <fseeko64@plt>:
   1177c:	add	ip, pc, #0, 12
   11780:	add	ip, ip, #110592	; 0x1b000
   11784:	ldr	pc, [ip, #2436]!	; 0x984

00011788 <fcntl64@plt>:
   11788:	add	ip, pc, #0, 12
   1178c:	add	ip, ip, #110592	; 0x1b000
   11790:	ldr	pc, [ip, #2428]!	; 0x97c

00011794 <setlocale@plt>:
   11794:	add	ip, pc, #0, 12
   11798:	add	ip, ip, #110592	; 0x1b000
   1179c:	ldr	pc, [ip, #2420]!	; 0x974

000117a0 <fsetfilecon@plt>:
   117a0:	add	ip, pc, #0, 12
   117a4:	add	ip, ip, #110592	; 0x1b000
   117a8:	ldr	pc, [ip, #2412]!	; 0x96c

000117ac <strrchr@plt>:
   117ac:	add	ip, pc, #0, 12
   117b0:	add	ip, ip, #110592	; 0x1b000
   117b4:	ldr	pc, [ip, #2404]!	; 0x964

000117b8 <nl_langinfo@plt>:
   117b8:	add	ip, pc, #0, 12
   117bc:	add	ip, ip, #110592	; 0x1b000
   117c0:	ldr	pc, [ip, #2396]!	; 0x95c

000117c4 <readdir64@plt>:
   117c4:	add	ip, pc, #0, 12
   117c8:	add	ip, ip, #110592	; 0x1b000
   117cc:	ldr	pc, [ip, #2388]!	; 0x954

000117d0 <fdopendir@plt>:
   117d0:	add	ip, pc, #0, 12
   117d4:	add	ip, ip, #110592	; 0x1b000
   117d8:	ldr	pc, [ip, #2380]!	; 0x94c

000117dc <security_compute_create@plt>:
   117dc:	add	ip, pc, #0, 12
   117e0:	add	ip, ip, #110592	; 0x1b000
   117e4:	ldr	pc, [ip, #2372]!	; 0x944

000117e8 <dirfd@plt>:
   117e8:	add	ip, pc, #0, 12
   117ec:	add	ip, ip, #110592	; 0x1b000
   117f0:	ldr	pc, [ip, #2364]!	; 0x93c

000117f4 <fchdir@plt>:
   117f4:	add	ip, pc, #0, 12
   117f8:	add	ip, ip, #110592	; 0x1b000
   117fc:	ldr	pc, [ip, #2356]!	; 0x934

00011800 <qsort@plt>:
   11800:	add	ip, pc, #0, 12
   11804:	add	ip, ip, #110592	; 0x1b000
   11808:	ldr	pc, [ip, #2348]!	; 0x92c

0001180c <freecon@plt>:
   1180c:	add	ip, pc, #0, 12
   11810:	add	ip, ip, #110592	; 0x1b000
   11814:	ldr	pc, [ip, #2340]!	; 0x924

00011818 <bindtextdomain@plt>:
   11818:	add	ip, pc, #0, 12
   1181c:	add	ip, ip, #110592	; 0x1b000
   11820:	ldr	pc, [ip, #2332]!	; 0x91c

00011824 <getfscreatecon@plt>:
   11824:	add	ip, pc, #0, 12
   11828:	add	ip, ip, #110592	; 0x1b000
   1182c:	ldr	pc, [ip, #2324]!	; 0x914

00011830 <umask@plt>:
   11830:	add	ip, pc, #0, 12
   11834:	add	ip, ip, #110592	; 0x1b000
   11838:	ldr	pc, [ip, #2316]!	; 0x90c

0001183c <context_str@plt>:
   1183c:	add	ip, pc, #0, 12
   11840:	add	ip, ip, #110592	; 0x1b000
   11844:	ldr	pc, [ip, #2308]!	; 0x904

00011848 <chmod@plt>:
   11848:	add	ip, pc, #0, 12
   1184c:	add	ip, ip, #110592	; 0x1b000
   11850:	ldr	pc, [ip, #2300]!	; 0x8fc

00011854 <__xstat64@plt>:
   11854:	add	ip, pc, #0, 12
   11858:	add	ip, ip, #110592	; 0x1b000
   1185c:	ldr	pc, [ip, #2292]!	; 0x8f4

00011860 <__xmknod@plt>:
   11860:	add	ip, pc, #0, 12
   11864:	add	ip, ip, #110592	; 0x1b000
   11868:	ldr	pc, [ip, #2284]!	; 0x8ec

0001186c <strncmp@plt>:
   1186c:	add	ip, pc, #0, 12
   11870:	add	ip, ip, #110592	; 0x1b000
   11874:	ldr	pc, [ip, #2276]!	; 0x8e4

00011878 <abort@plt>:
   11878:	add	ip, pc, #0, 12
   1187c:	add	ip, ip, #110592	; 0x1b000
   11880:	ldr	pc, [ip, #2268]!	; 0x8dc

00011884 <close@plt>:
   11884:	add	ip, pc, #0, 12
   11888:	add	ip, ip, #110592	; 0x1b000
   1188c:	ldr	pc, [ip, #2260]!	; 0x8d4

00011890 <__lxstat64@plt>:
   11890:	add	ip, pc, #0, 12
   11894:	add	ip, ip, #110592	; 0x1b000
   11898:	ldr	pc, [ip, #2252]!	; 0x8cc

0001189c <mkfifo@plt>:
   1189c:	add	ip, pc, #0, 12
   118a0:	add	ip, ip, #110592	; 0x1b000
   118a4:	ldr	pc, [ip, #2244]!	; 0x8c4

000118a8 <mode_to_security_class@plt>:
   118a8:	add	ip, pc, #0, 12
   118ac:	add	ip, ip, #110592	; 0x1b000
   118b0:	ldr	pc, [ip, #2236]!	; 0x8bc

000118b4 <closedir@plt>:
   118b4:	add	ip, pc, #0, 12
   118b8:	add	ip, ip, #110592	; 0x1b000
   118bc:	ldr	pc, [ip, #2228]!	; 0x8b4

000118c0 <strspn@plt>:
   118c0:	add	ip, pc, #0, 12
   118c4:	add	ip, ip, #110592	; 0x1b000
   118c8:	ldr	pc, [ip, #2220]!	; 0x8ac

000118cc <__assert_fail@plt>:
   118cc:	add	ip, pc, #0, 12
   118d0:	add	ip, ip, #110592	; 0x1b000
   118d4:	ldr	pc, [ip, #2212]!	; 0x8a4

Disassembly of section .text:

000118d8 <lchmod@@Base-0x5304>:
   118d8:	strd	r4, [sp, #-36]!	; 0xffffffdc
   118dc:	movw	r5, #49176	; 0xc018
   118e0:	movt	r5, #1
   118e4:	strd	r6, [sp, #8]
   118e8:	mov	r6, r1
   118ec:	movw	r7, #53736	; 0xd1e8
   118f0:	movt	r7, #2
   118f4:	strd	r8, [sp, #16]
   118f8:	mov	r8, r0
   118fc:	strd	sl, [sp, #24]
   11900:	mov	sl, #0
   11904:	str	lr, [sp, #32]
   11908:	sub	sp, sp, #60	; 0x3c
   1190c:	mov	fp, sl
   11910:	ldr	r0, [r1]
   11914:	str	sl, [sp, #8]
   11918:	bl	1731c <lchmod@@Base+0x740>
   1191c:	movw	r1, #49924	; 0xc304
   11920:	movt	r1, #1
   11924:	ldr	r9, [pc, #1916]	; 120a8 <__assert_fail@plt+0x7dc>
   11928:	mov	r0, #6
   1192c:	bl	11794 <setlocale@plt>
   11930:	movw	r1, #49032	; 0xbf88
   11934:	movt	r1, #1
   11938:	movw	r0, #48864	; 0xbee0
   1193c:	movt	r0, #1
   11940:	bl	11818 <bindtextdomain@plt>
   11944:	movw	r0, #48864	; 0xbee0
   11948:	movt	r0, #1
   1194c:	bl	115a8 <textdomain@plt>
   11950:	movw	r0, #12924	; 0x327c
   11954:	movt	r0, #1
   11958:	bl	1b944 <lchmod@@Base+0x4d68>
   1195c:	mov	r4, #0
   11960:	mov	r3, r9
   11964:	mov	r2, r5
   11968:	mov	r1, r6
   1196c:	mov	r0, r8
   11970:	str	r4, [sp]
   11974:	bl	116a4 <getopt_long@plt>
   11978:	cmn	r0, #1
   1197c:	beq	11a80 <__assert_fail@plt+0x1b4>
   11980:	cmn	r0, #2
   11984:	beq	11e34 <__assert_fail@plt+0x568>
   11988:	ble	119f4 <__assert_fail@plt+0x128>
   1198c:	cmp	r0, #90	; 0x5a
   11990:	bne	11a3c <__assert_fail@plt+0x170>
   11994:	bl	114c4 <is_selinux_enabled@plt>
   11998:	cmp	r0, #0
   1199c:	ble	11a4c <__assert_fail@plt+0x180>
   119a0:	ldr	r2, [r7]
   119a4:	cmp	r2, #0
   119a8:	strne	r2, [sp, #8]
   119ac:	bne	1195c <__assert_fail@plt+0x90>
   119b0:	mov	r1, r2
   119b4:	mov	r0, r2
   119b8:	bl	116ec <selabel_open@plt>
   119bc:	subs	sl, r0, #0
   119c0:	bne	1195c <__assert_fail@plt+0x90>
   119c4:	bl	1171c <__errno_location@plt>
   119c8:	ldr	r4, [r0]
   119cc:	mov	r2, #5
   119d0:	mov	r0, sl
   119d4:	movw	r1, #49056	; 0xbfa0
   119d8:	movt	r1, #1
   119dc:	bl	11578 <dcgettext@plt>
   119e0:	mov	r2, r0
   119e4:	mov	r0, sl
   119e8:	mov	r1, r4
   119ec:	bl	11638 <error@plt>
   119f0:	b	1195c <__assert_fail@plt+0x90>
   119f4:	cmn	r0, #3
   119f8:	bne	11de8 <__assert_fail@plt+0x51c>
   119fc:	movw	r2, #49160	; 0xc008
   11a00:	movt	r2, #1
   11a04:	movw	r3, #53640	; 0xd188
   11a08:	movt	r3, #2
   11a0c:	movw	r0, #53732	; 0xd1e4
   11a10:	movt	r0, #2
   11a14:	stm	sp, {r2, r4}
   11a18:	movw	r1, #47600	; 0xb9f0
   11a1c:	movt	r1, #1
   11a20:	ldr	r0, [r0]
   11a24:	movw	r2, #48860	; 0xbedc
   11a28:	movt	r2, #1
   11a2c:	ldr	r3, [r3]
   11a30:	bl	19da4 <lchmod@@Base+0x31c8>
   11a34:	mov	r0, r4
   11a38:	bl	116c8 <exit@plt>
   11a3c:	cmp	r0, #109	; 0x6d
   11a40:	bne	11de8 <__assert_fail@plt+0x51c>
   11a44:	ldr	fp, [r7]
   11a48:	b	1195c <__assert_fail@plt+0x90>
   11a4c:	ldr	r3, [r7]
   11a50:	cmp	r3, #0
   11a54:	beq	1195c <__assert_fail@plt+0x90>
   11a58:	mov	r2, #5
   11a5c:	mov	r0, r4
   11a60:	movw	r1, #49084	; 0xbfbc
   11a64:	movt	r1, #1
   11a68:	bl	11578 <dcgettext@plt>
   11a6c:	mov	r2, r0
   11a70:	mov	r1, r4
   11a74:	mov	r0, r4
   11a78:	bl	11638 <error@plt>
   11a7c:	b	1195c <__assert_fail@plt+0x90>
   11a80:	cmp	fp, r4
   11a84:	beq	11bb0 <__assert_fail@plt+0x2e4>
   11a88:	mov	r0, fp
   11a8c:	bl	16d00 <lchmod@@Base+0x124>
   11a90:	subs	r7, r0, #0
   11a94:	beq	11e3c <__assert_fail@plt+0x570>
   11a98:	mov	r0, r4
   11a9c:	bl	11830 <umask@plt>
   11aa0:	mov	r5, r0
   11aa4:	bl	11830 <umask@plt>
   11aa8:	mov	r2, r5
   11aac:	mov	r3, r7
   11ab0:	str	r4, [sp]
   11ab4:	mov	r1, r4
   11ab8:	movw	r0, #438	; 0x1b6
   11abc:	bl	17100 <lchmod@@Base+0x524>
   11ac0:	mov	r5, r0
   11ac4:	mov	r0, r7
   11ac8:	bl	1356c <__assert_fail@plt+0x1ca0>
   11acc:	bic	r3, r5, #508	; 0x1fc
   11ad0:	bic	r3, r3, #3
   11ad4:	cmp	r3, #0
   11ad8:	bne	11ea0 <__assert_fail@plt+0x5d4>
   11adc:	movw	r4, #53720	; 0xd1d8
   11ae0:	movt	r4, #2
   11ae4:	ldr	r3, [r4]
   11ae8:	cmp	r3, r8
   11aec:	sub	r2, r8, r3
   11af0:	bge	11d8c <__assert_fail@plt+0x4c0>
   11af4:	add	r3, r3, #1
   11af8:	cmp	r3, r8
   11afc:	bge	11b10 <__assert_fail@plt+0x244>
   11b00:	ldr	r3, [r6, r3, lsl #2]
   11b04:	ldrb	r3, [r3]
   11b08:	cmp	r3, #112	; 0x70
   11b0c:	beq	11df0 <__assert_fail@plt+0x524>
   11b10:	cmp	r2, #3
   11b14:	bls	11f68 <__assert_fail@plt+0x69c>
   11b18:	cmp	r2, #4
   11b1c:	bne	11ec4 <__assert_fail@plt+0x5f8>
   11b20:	ldr	r3, [sp, #8]
   11b24:	cmp	r3, #0
   11b28:	beq	11b3c <__assert_fail@plt+0x270>
   11b2c:	mov	r0, r3
   11b30:	bl	11710 <setfscreatecon@plt>
   11b34:	cmp	r0, #0
   11b38:	blt	11fc8 <__assert_fail@plt+0x6fc>
   11b3c:	ldr	r3, [r4]
   11b40:	add	r3, r3, #1
   11b44:	ldr	r2, [r6, r3, lsl #2]
   11b48:	lsl	r3, r3, #2
   11b4c:	ldrb	r2, [r2]
   11b50:	sub	r2, r2, #98	; 0x62
   11b54:	cmp	r2, #19
   11b58:	ldrls	pc, [pc, r2, lsl #2]
   11b5c:	b	12084 <__assert_fail@plt+0x7b8>
   11b60:			; <UNDEFINED> instruction: 0x00011bb8
   11b64:	andeq	r1, r1, r4, lsl #27
   11b68:	andeq	r2, r1, r4, lsl #1
   11b6c:	andeq	r2, r1, r4, lsl #1
   11b70:	andeq	r2, r1, r4, lsl #1
   11b74:	andeq	r2, r1, r4, lsl #1
   11b78:	andeq	r2, r1, r4, lsl #1
   11b7c:	andeq	r2, r1, r4, lsl #1
   11b80:	andeq	r2, r1, r4, lsl #1
   11b84:	andeq	r2, r1, r4, lsl #1
   11b88:	andeq	r2, r1, r4, lsl #1
   11b8c:	andeq	r2, r1, r4, lsl #1
   11b90:	andeq	r2, r1, r4, lsl #1
   11b94:	andeq	r2, r1, r4, lsl #1
   11b98:	andeq	r1, r1, ip, lsl sp
   11b9c:	andeq	r2, r1, r4, lsl #1
   11ba0:	andeq	r2, r1, r4, lsl #1
   11ba4:	andeq	r2, r1, r4, lsl #1
   11ba8:	andeq	r2, r1, r4, lsl #1
   11bac:	andeq	r1, r1, r4, lsl #27
   11bb0:	movw	r5, #438	; 0x1b6
   11bb4:	b	11adc <__assert_fail@plt+0x210>
   11bb8:	mov	r7, #24576	; 0x6000
   11bbc:	movw	r8, #49924	; 0xc304
   11bc0:	movt	r8, #1
   11bc4:	add	r0, r6, r3
   11bc8:	mov	r2, #0
   11bcc:	ldr	ip, [r0, #4]
   11bd0:	mov	r1, r2
   11bd4:	add	r3, sp, #32
   11bd8:	str	r8, [sp]
   11bdc:	ldr	r0, [r0, #8]
   11be0:	str	r0, [sp, #16]
   11be4:	mov	r0, ip
   11be8:	str	ip, [sp, #24]
   11bec:	bl	1a400 <lchmod@@Base+0x3824>
   11bf0:	subs	ip, r0, #0
   11bf4:	bne	12064 <__assert_fail@plt+0x798>
   11bf8:	ldrd	r2, [sp, #32]
   11bfc:	mov	r1, ip
   11c00:	cmp	r3, ip
   11c04:	cmpeq	r2, r2
   11c08:	bne	12064 <__assert_fail@plt+0x798>
   11c0c:	add	r3, sp, #40	; 0x28
   11c10:	mov	r2, ip
   11c14:	str	r8, [sp]
   11c18:	ldr	r0, [sp, #16]
   11c1c:	bl	1a400 <lchmod@@Base+0x3824>
   11c20:	subs	r3, r0, #0
   11c24:	str	r3, [sp, #28]
   11c28:	bne	12030 <__assert_fail@plt+0x764>
   11c2c:	ldrd	r8, [sp, #40]	; 0x28
   11c30:	cmp	r9, r3
   11c34:	cmpeq	r8, r8
   11c38:	bne	12030 <__assert_fail@plt+0x764>
   11c3c:	uxtb	r2, r8
   11c40:	ldr	r1, [sp, #32]
   11c44:	mov	lr, #65280	; 0xff00
   11c48:	movt	lr, #15
   11c4c:	mov	ip, #0
   11c50:	movt	ip, #65520	; 0xfff0
   11c54:	str	r2, [sp, #20]
   11c58:	ldr	r2, [sp, #20]
   11c5c:	and	ip, ip, r8, lsl #12
   11c60:	and	r3, lr, r1, lsl #8
   11c64:	bic	r1, r1, #4080	; 0xff0
   11c68:	bic	r1, r1, #15
   11c6c:	orr	r1, r1, r8, lsr #20
   11c70:	orr	r3, r3, ip
   11c74:	orr	r3, r2, r3
   11c78:	mvn	r2, #0
   11c7c:	str	r3, [sp, #8]
   11c80:	mvn	r3, #0
   11c84:	str	r1, [sp, #12]
   11c88:	ldrd	r8, [sp, #8]
   11c8c:	cmp	r9, r3
   11c90:	cmpeq	r8, r2
   11c94:	beq	12004 <__assert_fail@plt+0x738>
   11c98:	cmp	sl, #0
   11c9c:	beq	11cb4 <__assert_fail@plt+0x3e8>
   11ca0:	ldr	r3, [r4]
   11ca4:	mov	r0, sl
   11ca8:	mov	r2, r7
   11cac:	ldr	r1, [r6, r3, lsl #2]
   11cb0:	bl	127fc <__assert_fail@plt+0xf30>
   11cb4:	ldr	r1, [r4]
   11cb8:	orr	r2, r5, r7
   11cbc:	add	r3, sp, #48	; 0x30
   11cc0:	mov	r0, #1
   11cc4:	ldrd	r8, [sp, #8]
   11cc8:	ldr	r1, [r6, r1, lsl #2]
   11ccc:	strd	r8, [sp, #48]	; 0x30
   11cd0:	bl	11860 <__xmknod@plt>
   11cd4:	cmp	r0, #0
   11cd8:	bne	11d50 <__assert_fail@plt+0x484>
   11cdc:	cmp	fp, #0
   11ce0:	beq	11cfc <__assert_fail@plt+0x430>
   11ce4:	ldr	r3, [r4]
   11ce8:	mov	r1, r5
   11cec:	ldr	r0, [r6, r3, lsl #2]
   11cf0:	bl	16bdc <lchmod@@Base>
   11cf4:	cmp	r0, #0
   11cf8:	bne	11e5c <__assert_fail@plt+0x590>
   11cfc:	mov	r0, #0
   11d00:	add	sp, sp, #60	; 0x3c
   11d04:	ldrd	r4, [sp]
   11d08:	ldrd	r6, [sp, #8]
   11d0c:	ldrd	r8, [sp, #16]
   11d10:	ldrd	sl, [sp, #24]
   11d14:	add	sp, sp, #32
   11d18:	pop	{pc}		; (ldr pc, [sp], #4)
   11d1c:	cmp	sl, #0
   11d20:	beq	11d38 <__assert_fail@plt+0x46c>
   11d24:	add	r3, r6, r3
   11d28:	mov	r0, sl
   11d2c:	mov	r2, #4096	; 0x1000
   11d30:	ldr	r1, [r3, #-4]
   11d34:	bl	127fc <__assert_fail@plt+0xf30>
   11d38:	ldr	r3, [r4]
   11d3c:	mov	r1, r5
   11d40:	ldr	r0, [r6, r3, lsl #2]
   11d44:	bl	1189c <mkfifo@plt>
   11d48:	cmp	r0, #0
   11d4c:	beq	11cdc <__assert_fail@plt+0x410>
   11d50:	bl	1171c <__errno_location@plt>
   11d54:	ldr	r3, [r4]
   11d58:	mov	r1, #3
   11d5c:	ldr	r4, [r0]
   11d60:	mov	r0, #0
   11d64:	ldr	r2, [r6, r3, lsl #2]
   11d68:	bl	19434 <lchmod@@Base+0x2858>
   11d6c:	mov	r3, r0
   11d70:	movw	r2, #49768	; 0xc268
   11d74:	movt	r2, #1
   11d78:	mov	r1, r4
   11d7c:	mov	r0, #1
   11d80:	bl	11638 <error@plt>
   11d84:	mov	r7, #8192	; 0x2000
   11d88:	b	11bbc <__assert_fail@plt+0x2f0>
   11d8c:	cmp	r2, #1
   11d90:	bls	11f40 <__assert_fail@plt+0x674>
   11d94:	cmp	r2, #2
   11d98:	beq	11b20 <__assert_fail@plt+0x254>
   11d9c:	mov	r2, #5
   11da0:	movw	r1, #49560	; 0xc198
   11da4:	movt	r1, #1
   11da8:	mov	r0, #0
   11dac:	bl	11578 <dcgettext@plt>
   11db0:	ldr	r3, [r4]
   11db4:	mov	r5, r0
   11db8:	add	r3, r3, #2
   11dbc:	ldr	r0, [r6, r3, lsl #2]
   11dc0:	bl	1960c <lchmod@@Base+0x2a30>
   11dc4:	mov	r1, #0
   11dc8:	mov	r3, r0
   11dcc:	mov	r2, r5
   11dd0:	mov	r0, r1
   11dd4:	bl	11638 <error@plt>
   11dd8:	ldr	r3, [r4]
   11ddc:	sub	r8, r8, r3
   11de0:	cmp	r8, #4
   11de4:	beq	11f04 <__assert_fail@plt+0x638>
   11de8:	mov	r0, #1
   11dec:	bl	1219c <__assert_fail@plt+0x8d0>
   11df0:	cmp	r2, #1
   11df4:	bhi	11d94 <__assert_fail@plt+0x4c8>
   11df8:	mov	r2, #5
   11dfc:	movw	r1, #49580	; 0xc1ac
   11e00:	movt	r1, #1
   11e04:	mov	r0, #0
   11e08:	bl	11578 <dcgettext@plt>
   11e0c:	sub	r8, r8, #-1073741823	; 0xc0000001
   11e10:	mov	r4, r0
   11e14:	ldr	r0, [r6, r8, lsl #2]
   11e18:	bl	1960c <lchmod@@Base+0x2a30>
   11e1c:	mov	r1, #0
   11e20:	mov	r3, r0
   11e24:	mov	r2, r4
   11e28:	mov	r0, r1
   11e2c:	bl	11638 <error@plt>
   11e30:	b	11de8 <__assert_fail@plt+0x51c>
   11e34:	mov	r0, r4
   11e38:	bl	1219c <__assert_fail@plt+0x8d0>
   11e3c:	mov	r2, #5
   11e40:	movw	r1, #49180	; 0xc01c
   11e44:	movt	r1, #1
   11e48:	bl	11578 <dcgettext@plt>
   11e4c:	mov	r2, r0
   11e50:	mov	r1, r7
   11e54:	mov	r0, #1
   11e58:	bl	11638 <error@plt>
   11e5c:	bl	1171c <__errno_location@plt>
   11e60:	mov	r2, #5
   11e64:	movw	r1, #49528	; 0xc178
   11e68:	movt	r1, #1
   11e6c:	ldr	r5, [r0]
   11e70:	mov	r0, #0
   11e74:	bl	11578 <dcgettext@plt>
   11e78:	ldr	r3, [r4]
   11e7c:	mov	r7, r0
   11e80:	mov	r0, #4
   11e84:	ldr	r1, [r6, r3, lsl #2]
   11e88:	bl	19358 <lchmod@@Base+0x277c>
   11e8c:	mov	r3, r0
   11e90:	mov	r2, r7
   11e94:	mov	r1, r5
   11e98:	mov	r0, #1
   11e9c:	bl	11638 <error@plt>
   11ea0:	mov	r2, #5
   11ea4:	movw	r1, #49196	; 0xc02c
   11ea8:	movt	r1, #1
   11eac:	mov	r0, r4
   11eb0:	bl	11578 <dcgettext@plt>
   11eb4:	mov	r2, r0
   11eb8:	mov	r1, r4
   11ebc:	mov	r0, #1
   11ec0:	bl	11638 <error@plt>
   11ec4:	movw	r1, #49560	; 0xc198
   11ec8:	movt	r1, #1
   11ecc:	mov	r2, #5
   11ed0:	mov	r0, #0
   11ed4:	bl	11578 <dcgettext@plt>
   11ed8:	ldr	r3, [r4]
   11edc:	mov	r5, r0
   11ee0:	add	r3, r3, #4
   11ee4:	ldr	r0, [r6, r3, lsl #2]
   11ee8:	bl	1960c <lchmod@@Base+0x2a30>
   11eec:	mov	r1, #0
   11ef0:	mov	r3, r0
   11ef4:	mov	r2, r5
   11ef8:	mov	r0, r1
   11efc:	bl	11638 <error@plt>
   11f00:	b	11de8 <__assert_fail@plt+0x51c>
   11f04:	movw	r3, #53728	; 0xd1e0
   11f08:	movt	r3, #2
   11f0c:	ldr	r4, [r3]
   11f10:	movw	r1, #49312	; 0xc0a0
   11f14:	movt	r1, #1
   11f18:	mov	r2, #5
   11f1c:	mov	r0, #0
   11f20:	bl	11578 <dcgettext@plt>
   11f24:	mov	r3, r0
   11f28:	movw	r2, #50272	; 0xc460
   11f2c:	movt	r2, #1
   11f30:	mov	r1, #1
   11f34:	mov	r0, r4
   11f38:	bl	11764 <__fprintf_chk@plt>
   11f3c:	b	11de8 <__assert_fail@plt+0x51c>
   11f40:	mov	r2, #5
   11f44:	movw	r1, #49240	; 0xc058
   11f48:	movt	r1, #1
   11f4c:	mov	r0, #0
   11f50:	bl	11578 <dcgettext@plt>
   11f54:	mov	r1, #0
   11f58:	mov	r2, r0
   11f5c:	mov	r0, r1
   11f60:	bl	11638 <error@plt>
   11f64:	b	11de8 <__assert_fail@plt+0x51c>
   11f68:	mov	r2, #5
   11f6c:	movw	r1, #49580	; 0xc1ac
   11f70:	movt	r1, #1
   11f74:	mov	r0, #0
   11f78:	bl	11578 <dcgettext@plt>
   11f7c:	sub	r3, r8, #-1073741823	; 0xc0000001
   11f80:	mov	r5, r0
   11f84:	ldr	r0, [r6, r3, lsl #2]
   11f88:	bl	1960c <lchmod@@Base+0x2a30>
   11f8c:	mov	r1, #0
   11f90:	mov	r3, r0
   11f94:	mov	r2, r5
   11f98:	mov	r0, r1
   11f9c:	bl	11638 <error@plt>
   11fa0:	ldr	r3, [r4]
   11fa4:	sub	r8, r8, r3
   11fa8:	cmp	r8, #2
   11fac:	bne	11de8 <__assert_fail@plt+0x51c>
   11fb0:	movw	r3, #53728	; 0xd1e0
   11fb4:	movt	r3, #2
   11fb8:	movw	r1, #49256	; 0xc068
   11fbc:	movt	r1, #1
   11fc0:	ldr	r4, [r3]
   11fc4:	b	11f18 <__assert_fail@plt+0x64c>
   11fc8:	bl	1171c <__errno_location@plt>
   11fcc:	ldr	r4, [r0]
   11fd0:	mov	r2, #5
   11fd4:	movw	r1, #49364	; 0xc0d4
   11fd8:	movt	r1, #1
   11fdc:	mov	r0, #0
   11fe0:	bl	11578 <dcgettext@plt>
   11fe4:	mov	r5, r0
   11fe8:	ldr	r0, [sp, #8]
   11fec:	bl	1960c <lchmod@@Base+0x2a30>
   11ff0:	mov	r3, r0
   11ff4:	mov	r2, r5
   11ff8:	mov	r1, r4
   11ffc:	mov	r0, #1
   12000:	bl	11638 <error@plt>
   12004:	mov	r2, #5
   12008:	movw	r1, #49480	; 0xc148
   1200c:	movt	r1, #1
   12010:	bl	11578 <dcgettext@plt>
   12014:	ldr	r1, [sp, #16]
   12018:	mov	r2, r0
   1201c:	mov	r0, #1
   12020:	ldr	r3, [sp, #24]
   12024:	str	r1, [sp]
   12028:	ldr	r1, [sp, #28]
   1202c:	bl	11638 <error@plt>
   12030:	movw	r1, #49448	; 0xc128
   12034:	movt	r1, #1
   12038:	mov	r2, #5
   1203c:	mov	r0, #0
   12040:	bl	11578 <dcgettext@plt>
   12044:	mov	r4, r0
   12048:	ldr	r0, [sp, #16]
   1204c:	bl	1960c <lchmod@@Base+0x2a30>
   12050:	mov	r3, r0
   12054:	mov	r2, r4
   12058:	mov	r1, #0
   1205c:	mov	r0, #1
   12060:	bl	11638 <error@plt>
   12064:	movw	r1, #49416	; 0xc108
   12068:	movt	r1, #1
   1206c:	mov	r2, #5
   12070:	mov	r0, #0
   12074:	bl	11578 <dcgettext@plt>
   12078:	mov	r4, r0
   1207c:	ldr	r0, [sp, #24]
   12080:	b	1204c <__assert_fail@plt+0x780>
   12084:	movw	r1, #49504	; 0xc160
   12088:	movt	r1, #1
   1208c:	mov	r2, #5
   12090:	mov	r0, #0
   12094:	bl	11578 <dcgettext@plt>
   12098:	ldr	r3, [r4]
   1209c:	mov	r5, r0
   120a0:	add	r3, r3, #1
   120a4:	b	11ee4 <__assert_fail@plt+0x618>
   120a8:	andeq	fp, r1, r0, lsr #19
   120ac:	mov	fp, #0
   120b0:	mov	lr, #0
   120b4:	pop	{r1}		; (ldr r1, [sp], #4)
   120b8:	mov	r2, sp
   120bc:	push	{r2}		; (str r2, [sp, #-4]!)
   120c0:	push	{r0}		; (str r0, [sp, #-4]!)
   120c4:	ldr	ip, [pc, #16]	; 120dc <__assert_fail@plt+0x810>
   120c8:	push	{ip}		; (str ip, [sp, #-4]!)
   120cc:	ldr	r0, [pc, #12]	; 120e0 <__assert_fail@plt+0x814>
   120d0:	ldr	r3, [pc, #12]	; 120e4 <__assert_fail@plt+0x818>
   120d4:	bl	11668 <__libc_start_main@plt>
   120d8:	bl	11878 <abort@plt>
   120dc:	andeq	fp, r1, r0, asr #18
   120e0:	ldrdeq	r1, [r1], -r8
   120e4:	andeq	fp, r1, r0, ror #17
   120e8:	ldr	r3, [pc, #20]	; 12104 <__assert_fail@plt+0x838>
   120ec:	ldr	r2, [pc, #20]	; 12108 <__assert_fail@plt+0x83c>
   120f0:	add	r3, pc, r3
   120f4:	ldr	r2, [r3, r2]
   120f8:	cmp	r2, #0
   120fc:	bxeq	lr
   12100:	b	11680 <__gmon_start__@plt>
   12104:	andeq	sl, r1, r8, lsl #30
   12108:	andeq	r0, r0, ip, ror r1
   1210c:	ldr	r0, [pc, #24]	; 1212c <__assert_fail@plt+0x860>
   12110:	ldr	r3, [pc, #24]	; 12130 <__assert_fail@plt+0x864>
   12114:	cmp	r3, r0
   12118:	bxeq	lr
   1211c:	ldr	r3, [pc, #16]	; 12134 <__assert_fail@plt+0x868>
   12120:	cmp	r3, #0
   12124:	bxeq	lr
   12128:	bx	r3
   1212c:	ldrdeq	sp, [r2], -r0
   12130:	ldrdeq	sp, [r2], -r0
   12134:	andeq	r0, r0, r0
   12138:	ldr	r0, [pc, #36]	; 12164 <__assert_fail@plt+0x898>
   1213c:	ldr	r1, [pc, #36]	; 12168 <__assert_fail@plt+0x89c>
   12140:	sub	r1, r1, r0
   12144:	asr	r1, r1, #2
   12148:	add	r1, r1, r1, lsr #31
   1214c:	asrs	r1, r1, #1
   12150:	bxeq	lr
   12154:	ldr	r3, [pc, #16]	; 1216c <__assert_fail@plt+0x8a0>
   12158:	cmp	r3, #0
   1215c:	bxeq	lr
   12160:	bx	r3
   12164:	ldrdeq	sp, [r2], -r0
   12168:	ldrdeq	sp, [r2], -r0
   1216c:	andeq	r0, r0, r0
   12170:	push	{r4, lr}
   12174:	ldr	r4, [pc, #24]	; 12194 <__assert_fail@plt+0x8c8>
   12178:	ldrb	r3, [r4]
   1217c:	cmp	r3, #0
   12180:	popne	{r4, pc}
   12184:	bl	1210c <__assert_fail@plt+0x840>
   12188:	mov	r3, #1
   1218c:	strb	r3, [r4]
   12190:	pop	{r4, pc}
   12194:	andeq	sp, r2, ip, ror #3
   12198:	b	12138 <__assert_fail@plt+0x86c>
   1219c:	subs	r6, r0, #0
   121a0:	str	r7, [sp, #-8]!
   121a4:	str	lr, [sp, #4]
   121a8:	sub	sp, sp, #56	; 0x38
   121ac:	beq	121f4 <__assert_fail@plt+0x928>
   121b0:	movw	r3, #53728	; 0xd1e0
   121b4:	movt	r3, #2
   121b8:	ldr	r4, [r3]
   121bc:	mov	r2, #5
   121c0:	movw	r1, #47608	; 0xb9f8
   121c4:	movt	r1, #1
   121c8:	mov	r0, #0
   121cc:	bl	11578 <dcgettext@plt>
   121d0:	movw	r3, #53752	; 0xd1f8
   121d4:	movt	r3, #2
   121d8:	mov	r2, r0
   121dc:	mov	r1, #1
   121e0:	ldr	r3, [r3]
   121e4:	mov	r0, r4
   121e8:	bl	11764 <__fprintf_chk@plt>
   121ec:	mov	r0, r6
   121f0:	bl	116c8 <exit@plt>
   121f4:	mov	r2, #5
   121f8:	movw	r1, #47648	; 0xba20
   121fc:	movt	r1, #1
   12200:	movw	r7, #53732	; 0xd1e4
   12204:	movt	r7, #2
   12208:	bl	11578 <dcgettext@plt>
   1220c:	movw	r3, #53752	; 0xd1f8
   12210:	movt	r3, #2
   12214:	mov	r1, r0
   12218:	mov	r0, #1
   1221c:	ldr	r2, [r3]
   12220:	bl	1174c <__printf_chk@plt>
   12224:	mov	r2, #5
   12228:	movw	r1, #47696	; 0xba50
   1222c:	movt	r1, #1
   12230:	mov	r0, r6
   12234:	bl	11578 <dcgettext@plt>
   12238:	ldr	r1, [r7]
   1223c:	bl	114ac <fputs_unlocked@plt>
   12240:	mov	r2, #5
   12244:	movw	r1, #47748	; 0xba84
   12248:	movt	r1, #1
   1224c:	mov	r0, r6
   12250:	bl	11578 <dcgettext@plt>
   12254:	ldr	r1, [r7]
   12258:	bl	114ac <fputs_unlocked@plt>
   1225c:	mov	r2, #5
   12260:	movw	r1, #47824	; 0xbad0
   12264:	movt	r1, #1
   12268:	mov	r0, r6
   1226c:	bl	11578 <dcgettext@plt>
   12270:	ldr	r1, [r7]
   12274:	bl	114ac <fputs_unlocked@plt>
   12278:	mov	r2, #5
   1227c:	movw	r1, #47900	; 0xbb1c
   12280:	movt	r1, #1
   12284:	mov	r0, r6
   12288:	bl	11578 <dcgettext@plt>
   1228c:	ldr	r1, [r7]
   12290:	bl	114ac <fputs_unlocked@plt>
   12294:	mov	r2, #5
   12298:	movw	r1, #48108	; 0xbbec
   1229c:	movt	r1, #1
   122a0:	mov	r0, r6
   122a4:	bl	11578 <dcgettext@plt>
   122a8:	ldr	r1, [r7]
   122ac:	bl	114ac <fputs_unlocked@plt>
   122b0:	mov	r2, #5
   122b4:	movw	r1, #48156	; 0xbc1c
   122b8:	movt	r1, #1
   122bc:	mov	r0, r6
   122c0:	bl	11578 <dcgettext@plt>
   122c4:	ldr	r1, [r7]
   122c8:	bl	114ac <fputs_unlocked@plt>
   122cc:	mov	r2, #5
   122d0:	movw	r1, #48212	; 0xbc54
   122d4:	movt	r1, #1
   122d8:	mov	r0, r6
   122dc:	bl	11578 <dcgettext@plt>
   122e0:	ldr	r1, [r7]
   122e4:	bl	114ac <fputs_unlocked@plt>
   122e8:	mov	r2, #5
   122ec:	movw	r1, #48476	; 0xbd5c
   122f0:	movt	r1, #1
   122f4:	mov	r0, r6
   122f8:	bl	11578 <dcgettext@plt>
   122fc:	ldr	r1, [r7]
   12300:	bl	114ac <fputs_unlocked@plt>
   12304:	mov	r2, #5
   12308:	movw	r1, #48604	; 0xbddc
   1230c:	movt	r1, #1
   12310:	mov	r0, r6
   12314:	bl	11578 <dcgettext@plt>
   12318:	mov	r1, r0
   1231c:	movw	r2, #47600	; 0xb9f0
   12320:	movt	r2, #1
   12324:	mov	r0, #1
   12328:	bl	1174c <__printf_chk@plt>
   1232c:	movw	lr, #47464	; 0xb968
   12330:	movt	lr, #1
   12334:	ldr	ip, [lr]
   12338:	ldr	r4, [lr, #4]
   1233c:	ldrd	r8, [lr, #8]
   12340:	subs	r1, ip, #0
   12344:	str	ip, [sp]
   12348:	ldrd	r2, [lr, #16]
   1234c:	str	r4, [sp, #4]
   12350:	ldrd	r4, [lr, #24]
   12354:	strd	r8, [sp, #8]
   12358:	ldrd	r8, [lr, #32]
   1235c:	strd	r2, [sp, #16]
   12360:	ldrd	r2, [lr, #40]	; 0x28
   12364:	strd	r4, [sp, #24]
   12368:	ldrd	r4, [lr, #48]	; 0x30
   1236c:	strd	r8, [sp, #32]
   12370:	strd	r2, [sp, #40]	; 0x28
   12374:	strd	r4, [sp, #48]	; 0x30
   12378:	movwne	r5, #47600	; 0xb9f0
   1237c:	mov	r4, sp
   12380:	movtne	r5, #1
   12384:	bne	1247c <__assert_fail@plt+0xbb0>
   12388:	ldr	r4, [r4, #4]
   1238c:	movw	r1, #48796	; 0xbe9c
   12390:	movt	r1, #1
   12394:	mov	r2, #5
   12398:	cmp	r4, #0
   1239c:	beq	12490 <__assert_fail@plt+0xbc4>
   123a0:	mov	r0, #0
   123a4:	bl	11578 <dcgettext@plt>
   123a8:	mov	r1, r0
   123ac:	movw	r3, #48820	; 0xbeb4
   123b0:	movt	r3, #1
   123b4:	movw	r2, #48860	; 0xbedc
   123b8:	movt	r2, #1
   123bc:	mov	r0, #1
   123c0:	bl	1174c <__printf_chk@plt>
   123c4:	mov	r1, #0
   123c8:	mov	r0, #5
   123cc:	bl	11794 <setlocale@plt>
   123d0:	cmp	r0, #0
   123d4:	movweq	r5, #47600	; 0xb9f0
   123d8:	movteq	r5, #1
   123dc:	beq	12400 <__assert_fail@plt+0xb34>
   123e0:	movw	r1, #48876	; 0xbeec
   123e4:	movt	r1, #1
   123e8:	mov	r2, #3
   123ec:	movw	r5, #47600	; 0xb9f0
   123f0:	movt	r5, #1
   123f4:	bl	1186c <strncmp@plt>
   123f8:	cmp	r0, #0
   123fc:	bne	12548 <__assert_fail@plt+0xc7c>
   12400:	mov	r2, #5
   12404:	movw	r1, #48952	; 0xbf38
   12408:	movt	r1, #1
   1240c:	mov	r0, #0
   12410:	bl	11578 <dcgettext@plt>
   12414:	mov	r1, r0
   12418:	movw	r3, #47600	; 0xb9f0
   1241c:	movt	r3, #1
   12420:	movw	r2, #48820	; 0xbeb4
   12424:	movt	r2, #1
   12428:	mov	r0, #1
   1242c:	bl	1174c <__printf_chk@plt>
   12430:	mov	r2, #5
   12434:	movw	r1, #48980	; 0xbf54
   12438:	movt	r1, #1
   1243c:	mov	r0, #0
   12440:	bl	11578 <dcgettext@plt>
   12444:	movw	r2, #49616	; 0xc1d0
   12448:	movt	r2, #1
   1244c:	cmp	r4, r5
   12450:	movw	r3, #49924	; 0xc304
   12454:	movt	r3, #1
   12458:	mov	r1, r0
   1245c:	moveq	r3, r2
   12460:	mov	r2, r4
   12464:	mov	r0, #1
   12468:	bl	1174c <__printf_chk@plt>
   1246c:	b	121ec <__assert_fail@plt+0x920>
   12470:	ldr	r1, [r4, #8]!
   12474:	cmp	r1, #0
   12478:	beq	12388 <__assert_fail@plt+0xabc>
   1247c:	mov	r0, r5
   12480:	bl	114d0 <strcmp@plt>
   12484:	cmp	r0, #0
   12488:	bne	12470 <__assert_fail@plt+0xba4>
   1248c:	b	12388 <__assert_fail@plt+0xabc>
   12490:	mov	r0, r4
   12494:	bl	11578 <dcgettext@plt>
   12498:	mov	r1, r0
   1249c:	movw	r3, #48820	; 0xbeb4
   124a0:	movt	r3, #1
   124a4:	movw	r2, #48860	; 0xbedc
   124a8:	movt	r2, #1
   124ac:	mov	r0, #1
   124b0:	bl	1174c <__printf_chk@plt>
   124b4:	mov	r1, r4
   124b8:	mov	r0, #5
   124bc:	bl	11794 <setlocale@plt>
   124c0:	cmp	r0, #0
   124c4:	beq	124e0 <__assert_fail@plt+0xc14>
   124c8:	movw	r1, #48876	; 0xbeec
   124cc:	movt	r1, #1
   124d0:	mov	r2, #3
   124d4:	bl	1186c <strncmp@plt>
   124d8:	cmp	r0, #0
   124dc:	bne	1253c <__assert_fail@plt+0xc70>
   124e0:	mov	r2, #5
   124e4:	movw	r1, #48952	; 0xbf38
   124e8:	movt	r1, #1
   124ec:	mov	r0, #0
   124f0:	bl	11578 <dcgettext@plt>
   124f4:	mov	r1, r0
   124f8:	movw	r3, #47600	; 0xb9f0
   124fc:	movt	r3, #1
   12500:	movw	r2, #48820	; 0xbeb4
   12504:	movt	r2, #1
   12508:	mov	r0, #1
   1250c:	bl	1174c <__printf_chk@plt>
   12510:	movw	r1, #48980	; 0xbf54
   12514:	movt	r1, #1
   12518:	mov	r2, #5
   1251c:	mov	r0, #0
   12520:	bl	11578 <dcgettext@plt>
   12524:	movw	r4, #47600	; 0xb9f0
   12528:	movt	r4, #1
   1252c:	movw	r3, #49616	; 0xc1d0
   12530:	movt	r3, #1
   12534:	mov	r1, r0
   12538:	b	12460 <__assert_fail@plt+0xb94>
   1253c:	movw	r5, #47600	; 0xb9f0
   12540:	movt	r5, #1
   12544:	mov	r4, r5
   12548:	mov	r2, #5
   1254c:	movw	r1, #48880	; 0xbef0
   12550:	movt	r1, #1
   12554:	mov	r0, #0
   12558:	bl	11578 <dcgettext@plt>
   1255c:	ldr	r1, [r7]
   12560:	bl	114ac <fputs_unlocked@plt>
   12564:	b	12400 <__assert_fail@plt+0xb34>
   12568:	strd	r4, [sp, #-28]!	; 0xffffffe4
   1256c:	mov	r4, #0
   12570:	strd	r6, [sp, #8]
   12574:	mov	r6, r1
   12578:	strd	r8, [sp, #16]
   1257c:	subs	r9, r0, #0
   12580:	str	lr, [sp, #24]
   12584:	sub	sp, sp, #116	; 0x74
   12588:	str	r4, [sp]
   1258c:	str	r4, [sp, #4]
   12590:	beq	126b8 <__assert_fail@plt+0xdec>
   12594:	mov	r1, #32768	; 0x8000
   12598:	mov	r0, r6
   1259c:	bl	11644 <open64@plt>
   125a0:	mov	r5, r0
   125a4:	bl	1171c <__errno_location@plt>
   125a8:	cmn	r5, #1
   125ac:	mov	r7, r0
   125b0:	beq	12660 <__assert_fail@plt+0xd94>
   125b4:	add	r2, sp, #8
   125b8:	mov	r1, r5
   125bc:	mov	r0, #3
   125c0:	bl	115d8 <__fxstat64@plt>
   125c4:	cmp	r0, #0
   125c8:	blt	12784 <__assert_fail@plt+0xeb8>
   125cc:	mov	r0, r9
   125d0:	mov	r2, r6
   125d4:	ldr	r3, [sp, #24]
   125d8:	mov	r1, sp
   125dc:	bl	11494 <selabel_lookup@plt>
   125e0:	cmp	r0, #0
   125e4:	blt	12758 <__assert_fail@plt+0xe8c>
   125e8:	ldr	r0, [sp]
   125ec:	bl	11554 <context_new@plt>
   125f0:	subs	r9, r0, #0
   125f4:	beq	127c8 <__assert_fail@plt+0xefc>
   125f8:	cmn	r5, #1
   125fc:	add	r1, sp, #4
   12600:	beq	1272c <__assert_fail@plt+0xe60>
   12604:	mov	r0, r5
   12608:	bl	198a0 <lchmod@@Base+0x2cc4>
   1260c:	cmp	r0, #0
   12610:	blt	12794 <__assert_fail@plt+0xec8>
   12614:	ldr	r0, [sp, #4]
   12618:	bl	11554 <context_new@plt>
   1261c:	subs	r4, r0, #0
   12620:	beq	12798 <__assert_fail@plt+0xecc>
   12624:	mov	r0, r9
   12628:	bl	114dc <context_type_get@plt>
   1262c:	subs	r1, r0, #0
   12630:	beq	12644 <__assert_fail@plt+0xd78>
   12634:	mov	r0, r4
   12638:	bl	11584 <context_type_set@plt>
   1263c:	cmp	r0, #0
   12640:	beq	127a0 <__assert_fail@plt+0xed4>
   12644:	ldr	r8, [r7]
   12648:	cmn	r5, #1
   1264c:	beq	1268c <__assert_fail@plt+0xdc0>
   12650:	mvn	r6, #0
   12654:	mov	r0, r5
   12658:	bl	11884 <close@plt>
   1265c:	b	12690 <__assert_fail@plt+0xdc4>
   12660:	ldr	r8, [r0]
   12664:	cmp	r8, #40	; 0x28
   12668:	bne	12724 <__assert_fail@plt+0xe58>
   1266c:	add	r2, sp, #8
   12670:	mov	r1, r6
   12674:	mov	r0, #3
   12678:	bl	11890 <__lxstat64@plt>
   1267c:	cmp	r0, #0
   12680:	bge	125cc <__assert_fail@plt+0xd00>
   12684:	ldr	r8, [r7]
   12688:	mov	r9, r4
   1268c:	mov	r6, r5
   12690:	mov	r0, r9
   12694:	bl	1168c <context_free@plt>
   12698:	mov	r0, r4
   1269c:	bl	1168c <context_free@plt>
   126a0:	ldr	r0, [sp]
   126a4:	bl	1180c <freecon@plt>
   126a8:	ldr	r0, [sp, #4]
   126ac:	bl	1180c <freecon@plt>
   126b0:	str	r8, [r7]
   126b4:	b	12708 <__assert_fail@plt+0xe3c>
   126b8:	add	r0, sp, #4
   126bc:	bl	11824 <getfscreatecon@plt>
   126c0:	cmp	r0, r4
   126c4:	blt	127f4 <__assert_fail@plt+0xf28>
   126c8:	bl	1171c <__errno_location@plt>
   126cc:	ldr	r5, [sp, #4]
   126d0:	mov	r4, r0
   126d4:	cmp	r5, #0
   126d8:	moveq	r3, #61	; 0x3d
   126dc:	mvneq	r6, #0
   126e0:	streq	r3, [r0]
   126e4:	beq	12708 <__assert_fail@plt+0xe3c>
   126e8:	mov	r1, r5
   126ec:	mov	r0, r6
   126f0:	bl	114f4 <lsetfilecon@plt>
   126f4:	ldr	r5, [r4]
   126f8:	mov	r6, r0
   126fc:	ldr	r0, [sp, #4]
   12700:	bl	1180c <freecon@plt>
   12704:	str	r5, [r4]
   12708:	mov	r0, r6
   1270c:	add	sp, sp, #116	; 0x74
   12710:	ldrd	r4, [sp]
   12714:	ldrd	r6, [sp, #8]
   12718:	ldrd	r8, [sp, #16]
   1271c:	add	sp, sp, #24
   12720:	pop	{pc}		; (ldr pc, [sp], #4)
   12724:	mov	r9, r4
   12728:	b	1268c <__assert_fail@plt+0xdc0>
   1272c:	mov	r0, r6
   12730:	bl	1987c <lchmod@@Base+0x2ca0>
   12734:	cmp	r0, #0
   12738:	blt	127d4 <__assert_fail@plt+0xf08>
   1273c:	ldr	r0, [sp, #4]
   12740:	bl	11554 <context_new@plt>
   12744:	subs	r4, r0, #0
   12748:	bne	12624 <__assert_fail@plt+0xd58>
   1274c:	mov	r6, r5
   12750:	ldr	r8, [r7]
   12754:	b	12690 <__assert_fail@plt+0xdc4>
   12758:	ldr	r8, [r7]
   1275c:	cmp	r8, #2
   12760:	movne	r4, #0
   12764:	movne	r9, r4
   12768:	bne	12648 <__assert_fail@plt+0xd7c>
   1276c:	mov	r3, #61	; 0x3d
   12770:	mov	r4, #0
   12774:	mov	r8, r3
   12778:	mov	r9, r4
   1277c:	str	r3, [r7]
   12780:	b	12648 <__assert_fail@plt+0xd7c>
   12784:	mvn	r6, #0
   12788:	mov	r9, r4
   1278c:	ldr	r8, [r7]
   12790:	b	12654 <__assert_fail@plt+0xd88>
   12794:	mov	r4, #0
   12798:	mvn	r6, #0
   1279c:	b	1278c <__assert_fail@plt+0xec0>
   127a0:	mov	r0, r4
   127a4:	bl	1183c <context_str@plt>
   127a8:	subs	r1, r0, #0
   127ac:	beq	12644 <__assert_fail@plt+0xd78>
   127b0:	cmn	r5, #1
   127b4:	beq	127e0 <__assert_fail@plt+0xf14>
   127b8:	mov	r0, r5
   127bc:	bl	117a0 <fsetfilecon@plt>
   127c0:	mov	r6, r0
   127c4:	b	1278c <__assert_fail@plt+0xec0>
   127c8:	mov	r4, r9
   127cc:	ldr	r8, [r7]
   127d0:	b	12648 <__assert_fail@plt+0xd7c>
   127d4:	mov	r4, #0
   127d8:	ldr	r8, [r7]
   127dc:	b	1268c <__assert_fail@plt+0xdc0>
   127e0:	mov	r0, r6
   127e4:	bl	114f4 <lsetfilecon@plt>
   127e8:	mov	r5, r0
   127ec:	ldr	r8, [r7]
   127f0:	b	1268c <__assert_fail@plt+0xdc0>
   127f4:	mvn	r6, #0
   127f8:	b	12708 <__assert_fail@plt+0xe3c>
   127fc:	strd	r4, [sp, #-28]!	; 0xffffffe4
   12800:	mov	r4, r1
   12804:	strd	r6, [sp, #8]
   12808:	mov	r7, #0
   1280c:	mov	r6, r2
   12810:	strd	r8, [sp, #16]
   12814:	mov	r9, r0
   12818:	str	lr, [sp, #24]
   1281c:	sub	sp, sp, #20
   12820:	str	r7, [sp]
   12824:	str	r7, [sp, #4]
   12828:	bl	1171c <__errno_location@plt>
   1282c:	ldrb	r3, [r4]
   12830:	mov	r8, r0
   12834:	cmp	r3, #47	; 0x2f
   12838:	beq	12854 <__assert_fail@plt+0xf88>
   1283c:	mov	r0, r4
   12840:	mov	r1, #2
   12844:	bl	12b4c <__assert_fail@plt+0x1280>
   12848:	subs	r4, r0, #0
   1284c:	mov	r7, r4
   12850:	beq	12a1c <__assert_fail@plt+0x1150>
   12854:	mov	r0, r9
   12858:	mov	r3, r6
   1285c:	mov	r2, r4
   12860:	mov	r1, sp
   12864:	bl	11494 <selabel_lookup@plt>
   12868:	cmp	r0, #0
   1286c:	blt	129d4 <__assert_fail@plt+0x1108>
   12870:	mov	r9, #0
   12874:	mov	r0, r4
   12878:	str	r9, [sp, #8]
   1287c:	str	r9, [sp, #12]
   12880:	bl	13368 <__assert_fail@plt+0x1a9c>
   12884:	mov	r4, r0
   12888:	add	r0, sp, #8
   1288c:	bl	11614 <getcon@plt>
   12890:	cmp	r0, r9
   12894:	blt	12998 <__assert_fail@plt+0x10cc>
   12898:	add	r1, sp, #12
   1289c:	mov	r0, r4
   128a0:	bl	19858 <lchmod@@Base+0x2c7c>
   128a4:	cmp	r0, r9
   128a8:	blt	12998 <__assert_fail@plt+0x10cc>
   128ac:	mov	r0, r6
   128b0:	bl	118a8 <mode_to_security_class@plt>
   128b4:	subs	r2, r0, #0
   128b8:	beq	12998 <__assert_fail@plt+0x10cc>
   128bc:	add	r3, sp, #4
   128c0:	ldrd	r0, [sp, #8]
   128c4:	bl	117dc <security_compute_create@plt>
   128c8:	ldr	r5, [r8]
   128cc:	mov	r6, r0
   128d0:	mov	r0, r4
   128d4:	bl	1356c <__assert_fail@plt+0x1ca0>
   128d8:	ldr	r0, [sp, #8]
   128dc:	bl	1180c <freecon@plt>
   128e0:	ldr	r0, [sp, #12]
   128e4:	bl	1180c <freecon@plt>
   128e8:	cmp	r6, r9
   128ec:	str	r5, [r8]
   128f0:	blt	129e0 <__assert_fail@plt+0x1114>
   128f4:	ldr	r0, [sp]
   128f8:	bl	11554 <context_new@plt>
   128fc:	subs	r4, r0, #0
   12900:	beq	129f0 <__assert_fail@plt+0x1124>
   12904:	ldr	r0, [sp, #4]
   12908:	bl	11554 <context_new@plt>
   1290c:	subs	r6, r0, #0
   12910:	beq	129c8 <__assert_fail@plt+0x10fc>
   12914:	mov	r0, r4
   12918:	bl	114dc <context_type_get@plt>
   1291c:	subs	r1, r0, #0
   12920:	beq	129c8 <__assert_fail@plt+0x10fc>
   12924:	mov	r0, r6
   12928:	bl	11584 <context_type_set@plt>
   1292c:	cmp	r0, #0
   12930:	bne	129c8 <__assert_fail@plt+0x10fc>
   12934:	mov	r0, r6
   12938:	bl	1183c <context_str@plt>
   1293c:	cmp	r0, #0
   12940:	beq	129c8 <__assert_fail@plt+0x10fc>
   12944:	bl	11710 <setfscreatecon@plt>
   12948:	ldr	r5, [r8]
   1294c:	mov	r9, r0
   12950:	mov	r0, r4
   12954:	bl	1168c <context_free@plt>
   12958:	mov	r0, r6
   1295c:	bl	1168c <context_free@plt>
   12960:	ldr	r0, [sp]
   12964:	bl	1180c <freecon@plt>
   12968:	ldr	r0, [sp, #4]
   1296c:	bl	1180c <freecon@plt>
   12970:	mov	r0, r7
   12974:	bl	1356c <__assert_fail@plt+0x1ca0>
   12978:	mov	r0, r9
   1297c:	str	r5, [r8]
   12980:	add	sp, sp, #20
   12984:	ldrd	r4, [sp]
   12988:	ldrd	r6, [sp, #8]
   1298c:	ldrd	r8, [sp, #16]
   12990:	add	sp, sp, #24
   12994:	pop	{pc}		; (ldr pc, [sp], #4)
   12998:	ldr	r5, [r8]
   1299c:	mov	r0, r4
   129a0:	mov	r6, #0
   129a4:	bl	1356c <__assert_fail@plt+0x1ca0>
   129a8:	ldr	r0, [sp, #8]
   129ac:	mov	r4, r6
   129b0:	mvn	r9, #0
   129b4:	bl	1180c <freecon@plt>
   129b8:	ldr	r0, [sp, #12]
   129bc:	bl	1180c <freecon@plt>
   129c0:	str	r5, [r8]
   129c4:	b	12950 <__assert_fail@plt+0x1084>
   129c8:	mvn	r9, #0
   129cc:	ldr	r5, [r8]
   129d0:	b	12950 <__assert_fail@plt+0x1084>
   129d4:	ldr	r5, [r8]
   129d8:	cmp	r5, #2
   129dc:	beq	12a00 <__assert_fail@plt+0x1134>
   129e0:	mov	r4, #0
   129e4:	mvn	r9, #0
   129e8:	mov	r6, r4
   129ec:	b	12950 <__assert_fail@plt+0x1084>
   129f0:	mov	r6, r4
   129f4:	mvn	r9, #0
   129f8:	ldr	r5, [r8]
   129fc:	b	12950 <__assert_fail@plt+0x1084>
   12a00:	mov	r3, #61	; 0x3d
   12a04:	mov	r4, #0
   12a08:	mov	r5, r3
   12a0c:	mov	r6, r4
   12a10:	mvn	r9, #0
   12a14:	str	r3, [r8]
   12a18:	b	12950 <__assert_fail@plt+0x1084>
   12a1c:	mov	r6, r4
   12a20:	mvn	r9, #0
   12a24:	ldr	r5, [r8]
   12a28:	b	12950 <__assert_fail@plt+0x1084>
   12a2c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   12a30:	mov	r4, r1
   12a34:	mov	r5, r2
   12a38:	strd	r6, [sp, #8]
   12a3c:	mov	r6, r0
   12a40:	str	r8, [sp, #16]
   12a44:	str	lr, [sp, #20]
   12a48:	sub	sp, sp, #8
   12a4c:	ldrb	r3, [r1]
   12a50:	cmp	r3, #47	; 0x2f
   12a54:	moveq	r8, #0
   12a58:	bne	12afc <__assert_fail@plt+0x1230>
   12a5c:	bl	1171c <__errno_location@plt>
   12a60:	cmp	r5, #0
   12a64:	mov	r7, r0
   12a68:	beq	12b24 <__assert_fail@plt+0x1258>
   12a6c:	mov	r2, #0
   12a70:	mov	r1, #16
   12a74:	str	r4, [sp]
   12a78:	mov	r0, sp
   12a7c:	mov	r4, r2
   12a80:	str	r2, [sp, #4]
   12a84:	bl	1a370 <lchmod@@Base+0x3794>
   12a88:	mov	r5, r0
   12a8c:	b	12aa0 <__assert_fail@plt+0x11d4>
   12a90:	ldr	r1, [r5, #24]
   12a94:	bl	12568 <__assert_fail@plt+0xc9c>
   12a98:	cmp	r0, #0
   12a9c:	ldrlt	r4, [r7]
   12aa0:	mov	r0, r5
   12aa4:	bl	15034 <__assert_fail@plt+0x3768>
   12aa8:	cmp	r0, #0
   12aac:	mov	r0, r6
   12ab0:	bne	12a90 <__assert_fail@plt+0x11c4>
   12ab4:	ldr	r3, [r7]
   12ab8:	mov	r0, r5
   12abc:	cmp	r3, #0
   12ac0:	movne	r4, r3
   12ac4:	bl	14ea8 <__assert_fail@plt+0x35dc>
   12ac8:	cmp	r0, #0
   12acc:	mov	r0, r8
   12ad0:	ldrne	r4, [r7]
   12ad4:	bl	1356c <__assert_fail@plt+0x1ca0>
   12ad8:	clz	r4, r4
   12adc:	lsr	r4, r4, #5
   12ae0:	mov	r0, r4
   12ae4:	add	sp, sp, #8
   12ae8:	ldrd	r4, [sp]
   12aec:	ldrd	r6, [sp, #8]
   12af0:	ldr	r8, [sp, #16]
   12af4:	add	sp, sp, #20
   12af8:	pop	{pc}		; (ldr pc, [sp], #4)
   12afc:	mov	r0, r1
   12b00:	mov	r1, #2
   12b04:	bl	12b4c <__assert_fail@plt+0x1280>
   12b08:	subs	r4, r0, #0
   12b0c:	movne	r8, r4
   12b10:	beq	12ae0 <__assert_fail@plt+0x1214>
   12b14:	bl	1171c <__errno_location@plt>
   12b18:	cmp	r5, #0
   12b1c:	mov	r7, r0
   12b20:	bne	12a6c <__assert_fail@plt+0x11a0>
   12b24:	mov	r1, r4
   12b28:	mov	r0, r6
   12b2c:	bl	12568 <__assert_fail@plt+0xc9c>
   12b30:	ldr	r5, [r7]
   12b34:	adds	r4, r0, #1
   12b38:	mov	r0, r8
   12b3c:	movne	r4, #1
   12b40:	bl	1356c <__assert_fail@plt+0x1ca0>
   12b44:	str	r5, [r7]
   12b48:	b	12ae0 <__assert_fail@plt+0x1214>
   12b4c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   12b50:	strd	r6, [sp, #8]
   12b54:	strd	sl, [sp, #24]
   12b58:	and	fp, r1, #3
   12b5c:	sub	r3, fp, #1
   12b60:	strd	r8, [sp, #16]
   12b64:	tst	r3, fp
   12b68:	str	lr, [sp, #32]
   12b6c:	sub	sp, sp, #3248	; 0xcb0
   12b70:	sub	sp, sp, #4
   12b74:	bne	12c90 <__assert_fail@plt+0x13c4>
   12b78:	cmp	r0, #0
   12b7c:	mov	r5, r0
   12b80:	beq	12c90 <__assert_fail@plt+0x13c4>
   12b84:	ldrb	r9, [r0]
   12b88:	cmp	r9, #0
   12b8c:	beq	13060 <__assert_fail@plt+0x1794>
   12b90:	add	r3, sp, #1184	; 0x4a0
   12b94:	cmp	r9, #47	; 0x2f
   12b98:	add	r3, r3, #8
   12b9c:	mov	r7, r1
   12ba0:	addne	r4, sp, #160	; 0xa0
   12ba4:	mov	r1, #1024	; 0x400
   12ba8:	str	r3, [sp, #1184]	; 0x4a0
   12bac:	add	r3, sp, #160	; 0xa0
   12bb0:	str	r3, [sp, #152]	; 0x98
   12bb4:	add	r3, sp, #2224	; 0x8b0
   12bb8:	str	r1, [sp, #156]	; 0x9c
   12bbc:	str	r1, [sp, #1188]	; 0x4a4
   12bc0:	str	r3, [sp, #2216]	; 0x8a8
   12bc4:	movne	r3, r4
   12bc8:	subne	r6, r3, #8
   12bcc:	str	r1, [sp, #2220]	; 0x8ac
   12bd0:	beq	12ca4 <__assert_fail@plt+0x13d8>
   12bd4:	mov	r0, r4
   12bd8:	bl	116bc <getcwd@plt>
   12bdc:	cmp	r0, #0
   12be0:	bne	131dc <__assert_fail@plt+0x1910>
   12be4:	bl	1171c <__errno_location@plt>
   12be8:	ldr	r3, [r0]
   12bec:	cmp	r3, #12
   12bf0:	beq	131b8 <__assert_fail@plt+0x18ec>
   12bf4:	cmp	r3, #34	; 0x22
   12bf8:	beq	12c74 <__assert_fail@plt+0x13a8>
   12bfc:	mov	r6, r4
   12c00:	mov	r5, #1
   12c04:	ldr	r0, [sp, #1184]	; 0x4a0
   12c08:	add	r3, sp, #1184	; 0x4a0
   12c0c:	add	r3, r3, #8
   12c10:	cmp	r0, r3
   12c14:	beq	12c1c <__assert_fail@plt+0x1350>
   12c18:	bl	1356c <__assert_fail@plt+0x1ca0>
   12c1c:	ldr	r0, [sp, #2216]	; 0x8a8
   12c20:	add	r3, sp, #2224	; 0x8b0
   12c24:	cmp	r0, r3
   12c28:	beq	12c30 <__assert_fail@plt+0x1364>
   12c2c:	bl	1356c <__assert_fail@plt+0x1ca0>
   12c30:	cmp	r5, #0
   12c34:	bne	13040 <__assert_fail@plt+0x1774>
   12c38:	add	r0, sp, #152	; 0x98
   12c3c:	strb	r5, [r4], #1
   12c40:	sub	r1, r4, r6
   12c44:	bl	19624 <lchmod@@Base+0x2a48>
   12c48:	subs	r9, r0, #0
   12c4c:	beq	131b8 <__assert_fail@plt+0x18ec>
   12c50:	mov	r0, r9
   12c54:	add	sp, sp, #3248	; 0xcb0
   12c58:	add	sp, sp, #4
   12c5c:	ldrd	r4, [sp]
   12c60:	ldrd	r6, [sp, #8]
   12c64:	ldrd	r8, [sp, #16]
   12c68:	ldrd	sl, [sp, #24]
   12c6c:	add	sp, sp, #32
   12c70:	pop	{pc}		; (ldr pc, [sp], #4)
   12c74:	mov	r0, r6
   12c78:	bl	19694 <lchmod@@Base+0x2ab8>
   12c7c:	cmp	r0, #0
   12c80:	beq	131b8 <__assert_fail@plt+0x18ec>
   12c84:	ldr	r4, [sp, #152]	; 0x98
   12c88:	ldr	r1, [sp, #156]	; 0x9c
   12c8c:	b	12bd4 <__assert_fail@plt+0x1308>
   12c90:	bl	1171c <__errno_location@plt>
   12c94:	mov	r3, #22
   12c98:	mov	r9, #0
   12c9c:	str	r3, [r0]
   12ca0:	b	12c50 <__assert_fail@plt+0x1384>
   12ca4:	add	r6, sp, #160	; 0xa0
   12ca8:	strb	r9, [sp, #160]	; 0xa0
   12cac:	add	r4, r6, #1
   12cb0:	mov	r3, #0
   12cb4:	and	r2, r7, #4
   12cb8:	str	r2, [sp, #12]
   12cbc:	str	r3, [sp, #20]
   12cc0:	str	r3, [sp, #28]
   12cc4:	str	r3, [sp, #32]
   12cc8:	movw	r3, #49748	; 0xc254
   12ccc:	movt	r3, #1
   12cd0:	str	fp, [sp, #16]
   12cd4:	str	r3, [sp, #24]
   12cd8:	movw	r3, #49308	; 0xc09c
   12cdc:	movt	r3, #1
   12ce0:	str	r3, [sp, #36]	; 0x24
   12ce4:	movw	r3, #27368	; 0x6ae8
   12ce8:	movt	r3, #1
   12cec:	str	r3, [sp, #40]	; 0x28
   12cf0:	cmp	r9, #0
   12cf4:	beq	1313c <__assert_fail@plt+0x1870>
   12cf8:	cmp	r9, #47	; 0x2f
   12cfc:	movne	r3, r9
   12d00:	bne	12d18 <__assert_fail@plt+0x144c>
   12d04:	ldrb	r3, [r5, #1]!
   12d08:	cmp	r3, #47	; 0x2f
   12d0c:	beq	12d04 <__assert_fail@plt+0x1438>
   12d10:	cmp	r3, #0
   12d14:	beq	1313c <__assert_fail@plt+0x1870>
   12d18:	mov	r8, r5
   12d1c:	b	12d24 <__assert_fail@plt+0x1458>
   12d20:	mov	r8, r7
   12d24:	ldrb	r9, [r8, #1]
   12d28:	add	r7, r8, #1
   12d2c:	cmp	r9, #0
   12d30:	cmpne	r9, #47	; 0x2f
   12d34:	bne	12d20 <__assert_fail@plt+0x1454>
   12d38:	subs	sl, r7, r5
   12d3c:	beq	1313c <__assert_fail@plt+0x1870>
   12d40:	cmp	sl, #1
   12d44:	beq	12fa8 <__assert_fail@plt+0x16dc>
   12d48:	cmp	r3, #46	; 0x2e
   12d4c:	cmpeq	sl, #2
   12d50:	beq	12fb4 <__assert_fail@plt+0x16e8>
   12d54:	ldrb	r3, [r4, #-1]
   12d58:	cmp	r3, #47	; 0x2f
   12d5c:	beq	12d68 <__assert_fail@plt+0x149c>
   12d60:	mov	r3, #47	; 0x2f
   12d64:	strb	r3, [r4], #1
   12d68:	ldr	r3, [sp, #156]	; 0x9c
   12d6c:	add	r9, sl, #2
   12d70:	add	r3, r6, r3
   12d74:	sub	r3, r3, r4
   12d78:	cmp	r3, r9
   12d7c:	bcs	12dac <__assert_fail@plt+0x14e0>
   12d80:	add	r0, sp, #152	; 0x98
   12d84:	sub	r4, r4, r6
   12d88:	bl	19714 <lchmod@@Base+0x2b38>
   12d8c:	cmp	r0, #0
   12d90:	beq	131b8 <__assert_fail@plt+0x18ec>
   12d94:	ldr	r6, [sp, #152]	; 0x98
   12d98:	ldr	r3, [sp, #156]	; 0x9c
   12d9c:	sub	r3, r3, r4
   12da0:	add	r4, r6, r4
   12da4:	cmp	r3, r9
   12da8:	bcc	12d80 <__assert_fail@plt+0x14b4>
   12dac:	mov	r2, sl
   12db0:	mov	r0, r4
   12db4:	mov	r1, r5
   12db8:	bl	11698 <mempcpy@plt>
   12dbc:	ldr	r2, [sp, #12]
   12dc0:	mov	r3, #0
   12dc4:	mov	r4, r0
   12dc8:	strb	r3, [r0]
   12dcc:	cmp	r2, r3
   12dd0:	beq	12ea8 <__assert_fail@plt+0x15dc>
   12dd4:	ldr	r3, [sp, #16]
   12dd8:	ldrb	r9, [r8, #1]
   12ddc:	cmp	r3, #2
   12de0:	movne	r3, r7
   12de4:	movne	r1, r9
   12de8:	beq	12ea0 <__assert_fail@plt+0x15d4>
   12dec:	cmp	r1, #47	; 0x2f
   12df0:	beq	12dfc <__assert_fail@plt+0x1530>
   12df4:	b	12e44 <__assert_fail@plt+0x1578>
   12df8:	mov	r3, r0
   12dfc:	ldrb	r2, [r3, #1]
   12e00:	add	r0, r3, #1
   12e04:	cmp	r2, #47	; 0x2f
   12e08:	beq	12df8 <__assert_fail@plt+0x152c>
   12e0c:	cmp	r2, #0
   12e10:	add	r3, r3, #2
   12e14:	beq	13014 <__assert_fail@plt+0x1748>
   12e18:	cmp	r2, #46	; 0x2e
   12e1c:	bne	12e44 <__assert_fail@plt+0x1578>
   12e20:	ldrb	r1, [r0, #1]
   12e24:	cmp	r1, #0
   12e28:	beq	13014 <__assert_fail@plt+0x1748>
   12e2c:	cmp	r1, #46	; 0x2e
   12e30:	bne	12dec <__assert_fail@plt+0x1520>
   12e34:	ldrb	r3, [r0, #2]
   12e38:	cmp	r3, #47	; 0x2f
   12e3c:	cmpne	r3, #0
   12e40:	beq	13014 <__assert_fail@plt+0x1748>
   12e44:	ldr	r3, [sp, #12]
   12e48:	cmp	r3, #0
   12e4c:	bne	12fec <__assert_fail@plt+0x1720>
   12e50:	bl	1171c <__errno_location@plt>
   12e54:	ldr	r5, [r0]
   12e58:	subs	r5, r5, #22
   12e5c:	movne	r5, #1
   12e60:	cmp	r5, #0
   12e64:	beq	12e9c <__assert_fail@plt+0x15d0>
   12e68:	ldr	r3, [sp, #16]
   12e6c:	cmp	r3, #1
   12e70:	bne	12f90 <__assert_fail@plt+0x16c4>
   12e74:	bl	1171c <__errno_location@plt>
   12e78:	ldr	r3, [r0]
   12e7c:	cmp	r3, #2
   12e80:	bne	12f90 <__assert_fail@plt+0x16c4>
   12e84:	mov	r0, r7
   12e88:	ldr	r1, [sp, #24]
   12e8c:	bl	118c0 <strspn@plt>
   12e90:	ldrb	r3, [r7, r0]
   12e94:	cmp	r3, #0
   12e98:	bne	12f90 <__assert_fail@plt+0x16c4>
   12e9c:	ldrb	r9, [r8, #1]
   12ea0:	mov	r5, r7
   12ea4:	b	12cf0 <__assert_fail@plt+0x1424>
   12ea8:	add	r3, sp, #2224	; 0x8b0
   12eac:	sub	r9, r3, #8
   12eb0:	b	12ec4 <__assert_fail@plt+0x15f8>
   12eb4:	mov	r0, r9
   12eb8:	bl	19694 <lchmod@@Base+0x2ab8>
   12ebc:	cmp	r0, #0
   12ec0:	beq	131b8 <__assert_fail@plt+0x18ec>
   12ec4:	ldr	sl, [sp, #2216]	; 0x8a8
   12ec8:	mov	r0, r6
   12ecc:	ldr	fp, [sp, #2220]	; 0x8ac
   12ed0:	mov	r1, sl
   12ed4:	sub	fp, fp, #1
   12ed8:	mov	r2, fp
   12edc:	bl	115e4 <readlink@plt>
   12ee0:	cmp	fp, r0
   12ee4:	ble	12eb4 <__assert_fail@plt+0x15e8>
   12ee8:	cmp	r0, #0
   12eec:	mov	r9, r0
   12ef0:	blt	12dd4 <__assert_fail@plt+0x1508>
   12ef4:	ldr	r3, [sp, #32]
   12ef8:	cmp	r3, #19
   12efc:	addle	r3, r3, #1
   12f00:	strle	r3, [sp, #32]
   12f04:	ble	13080 <__assert_fail@plt+0x17b4>
   12f08:	ldrb	r3, [r5]
   12f0c:	cmp	r3, #0
   12f10:	beq	13080 <__assert_fail@plt+0x17b4>
   12f14:	mov	r3, #0
   12f18:	sub	fp, r5, r7
   12f1c:	mov	r0, #3
   12f20:	add	r2, sp, #48	; 0x30
   12f24:	strb	r3, [r4, fp]
   12f28:	ldrb	r1, [r6]
   12f2c:	ldr	r3, [sp, #36]	; 0x24
   12f30:	cmp	r1, #0
   12f34:	movne	r3, r6
   12f38:	mov	r1, r3
   12f3c:	bl	11854 <__xstat64@plt>
   12f40:	cmp	r0, #0
   12f44:	bne	12f8c <__assert_fail@plt+0x16c0>
   12f48:	ldr	r2, [sp, #20]
   12f4c:	ldrb	r3, [r5]
   12f50:	cmp	r2, #0
   12f54:	strb	r3, [r4, fp]
   12f58:	beq	13188 <__assert_fail@plt+0x18bc>
   12f5c:	add	r2, sp, #48	; 0x30
   12f60:	mov	r1, r5
   12f64:	ldr	r0, [sp, #20]
   12f68:	bl	13518 <__assert_fail@plt+0x1c4c>
   12f6c:	cmp	r0, #0
   12f70:	beq	13070 <__assert_fail@plt+0x17a4>
   12f74:	ldr	r3, [sp, #16]
   12f78:	cmp	r3, #2
   12f7c:	beq	12e9c <__assert_fail@plt+0x15d0>
   12f80:	bl	1171c <__errno_location@plt>
   12f84:	mov	r3, #40	; 0x28
   12f88:	str	r3, [r0]
   12f8c:	mov	r5, #1
   12f90:	ldr	r3, [sp, #20]
   12f94:	cmp	r3, #0
   12f98:	beq	12c04 <__assert_fail@plt+0x1338>
   12f9c:	mov	r0, r3
   12fa0:	bl	164b4 <__assert_fail@plt+0x4be8>
   12fa4:	b	12c04 <__assert_fail@plt+0x1338>
   12fa8:	cmp	r3, #46	; 0x2e
   12fac:	bne	12d54 <__assert_fail@plt+0x1488>
   12fb0:	b	12ea0 <__assert_fail@plt+0x15d4>
   12fb4:	ldrb	r3, [r5, #1]
   12fb8:	cmp	r3, #46	; 0x2e
   12fbc:	bne	12d54 <__assert_fail@plt+0x1488>
   12fc0:	add	r3, r6, #1
   12fc4:	cmp	r4, r3
   12fc8:	bls	12ea0 <__assert_fail@plt+0x15d4>
   12fcc:	sub	r3, r4, #1
   12fd0:	cmp	r6, r3
   12fd4:	bcs	12fe4 <__assert_fail@plt+0x1718>
   12fd8:	ldrb	r2, [r4, #-2]
   12fdc:	cmp	r2, #47	; 0x2f
   12fe0:	bne	131bc <__assert_fail@plt+0x18f0>
   12fe4:	mov	r4, r3
   12fe8:	b	12ea0 <__assert_fail@plt+0x15d4>
   12fec:	cmp	r9, #0
   12ff0:	bne	12ea0 <__assert_fail@plt+0x15d4>
   12ff4:	mov	r2, r9
   12ff8:	mov	r3, #512	; 0x200
   12ffc:	mov	r1, r6
   13000:	mvn	r0, #99	; 0x63
   13004:	bl	11518 <faccessat@plt>
   13008:	adds	r5, r0, #0
   1300c:	movne	r5, #1
   13010:	b	12e60 <__assert_fail@plt+0x1594>
   13014:	ldr	r3, [sp, #24]
   13018:	mov	r2, #0
   1301c:	mov	r1, r6
   13020:	mvn	r0, #99	; 0x63
   13024:	ldrh	ip, [r3]
   13028:	mov	r3, #512	; 0x200
   1302c:	strh	ip, [r4]
   13030:	bl	11518 <faccessat@plt>
   13034:	adds	r5, r0, #0
   13038:	movne	r5, #1
   1303c:	b	12e60 <__assert_fail@plt+0x1594>
   13040:	ldr	r0, [sp, #152]	; 0x98
   13044:	add	r3, sp, #160	; 0xa0
   13048:	cmp	r0, r3
   1304c:	moveq	r9, #0
   13050:	beq	12c50 <__assert_fail@plt+0x1384>
   13054:	bl	1356c <__assert_fail@plt+0x1ca0>
   13058:	mov	r9, #0
   1305c:	b	12c50 <__assert_fail@plt+0x1384>
   13060:	bl	1171c <__errno_location@plt>
   13064:	mov	r3, #2
   13068:	str	r3, [r0]
   1306c:	b	12c50 <__assert_fail@plt+0x1384>
   13070:	add	r2, sp, #48	; 0x30
   13074:	mov	r1, r5
   13078:	ldr	r0, [sp, #20]
   1307c:	bl	13480 <__assert_fail@plt+0x1bb4>
   13080:	ldr	r2, [sp, #28]
   13084:	mov	r3, #0
   13088:	mov	r0, r7
   1308c:	strb	r3, [sl, r9]
   13090:	ldr	fp, [sp, #1184]	; 0x4a0
   13094:	cmp	r2, r3
   13098:	beq	13164 <__assert_fail@plt+0x1898>
   1309c:	sub	r3, r7, fp
   130a0:	str	r3, [sp, #44]	; 0x2c
   130a4:	bl	116e0 <strlen@plt>
   130a8:	ldr	r2, [sp, #1188]	; 0x4a4
   130ac:	add	r5, r0, r9
   130b0:	mov	r8, r0
   130b4:	cmp	r5, r2
   130b8:	bcc	130e8 <__assert_fail@plt+0x181c>
   130bc:	add	r0, sp, #1184	; 0x4a0
   130c0:	bl	19714 <lchmod@@Base+0x2b38>
   130c4:	cmp	r0, #0
   130c8:	beq	131b8 <__assert_fail@plt+0x18ec>
   130cc:	ldr	r3, [sp, #1188]	; 0x4a4
   130d0:	cmp	r3, r5
   130d4:	bls	130bc <__assert_fail@plt+0x17f0>
   130d8:	ldr	r3, [sp, #28]
   130dc:	ldr	fp, [sp, #1184]	; 0x4a0
   130e0:	cmp	r3, #0
   130e4:	beq	130f0 <__assert_fail@plt+0x1824>
   130e8:	ldr	r3, [sp, #44]	; 0x2c
   130ec:	add	r7, fp, r3
   130f0:	mov	r1, r7
   130f4:	add	r2, r8, #1
   130f8:	add	r0, fp, r9
   130fc:	bl	11500 <memmove@plt>
   13100:	mov	r2, r9
   13104:	mov	r1, sl
   13108:	mov	r0, fp
   1310c:	bl	11530 <memcpy@plt>
   13110:	ldrb	r3, [sl]
   13114:	mov	r7, r0
   13118:	add	r2, r6, #1
   1311c:	cmp	r3, #47	; 0x2f
   13120:	beq	13234 <__assert_fail@plt+0x1968>
   13124:	cmp	r4, r2
   13128:	ldrb	r9, [r0]
   1312c:	bhi	131f8 <__assert_fail@plt+0x192c>
   13130:	mov	r3, #1
   13134:	str	r3, [sp, #28]
   13138:	b	12ea0 <__assert_fail@plt+0x15d4>
   1313c:	add	r3, r6, #1
   13140:	cmp	r4, r3
   13144:	bls	1315c <__assert_fail@plt+0x1890>
   13148:	ldrb	r3, [r4, #-1]
   1314c:	cmp	r3, #47	; 0x2f
   13150:	subeq	r4, r4, #1
   13154:	moveq	r5, #0
   13158:	beq	12f90 <__assert_fail@plt+0x16c4>
   1315c:	mov	r5, #0
   13160:	b	12f90 <__assert_fail@plt+0x16c4>
   13164:	bl	116e0 <strlen@plt>
   13168:	ldr	r2, [sp, #1188]	; 0x4a4
   1316c:	add	r5, r9, r0
   13170:	mov	r8, r0
   13174:	cmp	r5, r2
   13178:	bcc	130f0 <__assert_fail@plt+0x1824>
   1317c:	ldr	r3, [sp, #28]
   13180:	str	r3, [sp, #44]	; 0x2c
   13184:	b	130bc <__assert_fail@plt+0x17f0>
   13188:	ldr	ip, [sp, #40]	; 0x28
   1318c:	mov	r1, r2
   13190:	movw	r3, #27260	; 0x6a7c
   13194:	movt	r3, #1
   13198:	movw	r2, #27188	; 0x6a34
   1319c:	movt	r2, #1
   131a0:	mov	r0, #7
   131a4:	str	ip, [sp]
   131a8:	bl	16280 <__assert_fail@plt+0x49b4>
   131ac:	subs	r3, r0, #0
   131b0:	str	r3, [sp, #20]
   131b4:	bne	12f5c <__assert_fail@plt+0x1690>
   131b8:	bl	1a32c <lchmod@@Base+0x3750>
   131bc:	sub	r3, r4, #2
   131c0:	cmp	r6, r3
   131c4:	mov	r4, r3
   131c8:	beq	12ea0 <__assert_fail@plt+0x15d4>
   131cc:	ldrb	r2, [r3, #-1]!
   131d0:	cmp	r2, #47	; 0x2f
   131d4:	beq	12ea0 <__assert_fail@plt+0x15d4>
   131d8:	b	131c0 <__assert_fail@plt+0x18f4>
   131dc:	mov	r0, r4
   131e0:	mov	r1, #0
   131e4:	bl	115b4 <rawmemchr@plt>
   131e8:	mov	r6, r4
   131ec:	ldrb	r9, [r5]
   131f0:	mov	r4, r0
   131f4:	b	12cb0 <__assert_fail@plt+0x13e4>
   131f8:	sub	r3, r4, #1
   131fc:	cmp	r3, r6
   13200:	bls	1324c <__assert_fail@plt+0x1980>
   13204:	ldrb	r2, [r4, #-2]
   13208:	cmp	r2, #47	; 0x2f
   1320c:	beq	1324c <__assert_fail@plt+0x1980>
   13210:	sub	r3, r4, #2
   13214:	cmp	r6, r3
   13218:	mov	r4, r3
   1321c:	beq	13130 <__assert_fail@plt+0x1864>
   13220:	ldrb	r2, [r3, #-1]
   13224:	sub	r3, r3, #1
   13228:	cmp	r2, #47	; 0x2f
   1322c:	beq	13130 <__assert_fail@plt+0x1864>
   13230:	b	13214 <__assert_fail@plt+0x1948>
   13234:	mov	r4, r2
   13238:	mov	r2, #1
   1323c:	strb	r3, [r6]
   13240:	ldrb	r9, [r0]
   13244:	str	r2, [sp, #28]
   13248:	b	12ea0 <__assert_fail@plt+0x15d4>
   1324c:	mov	r4, r3
   13250:	mov	r3, #1
   13254:	str	r3, [sp, #28]
   13258:	b	12ea0 <__assert_fail@plt+0x15d4>
   1325c:	movw	r3, #53744	; 0xd1f0
   13260:	movt	r3, #2
   13264:	str	r0, [r3]
   13268:	bx	lr
   1326c:	movw	r3, #53744	; 0xd1f0
   13270:	movt	r3, #2
   13274:	strb	r0, [r3, #4]
   13278:	bx	lr
   1327c:	movw	r3, #53732	; 0xd1e4
   13280:	movt	r3, #2
   13284:	strd	r4, [sp, #-16]!
   13288:	ldr	r0, [r3]
   1328c:	str	r6, [sp, #8]
   13290:	str	lr, [sp, #12]
   13294:	sub	sp, sp, #8
   13298:	bl	1af68 <lchmod@@Base+0x438c>
   1329c:	cmp	r0, #0
   132a0:	beq	132cc <__assert_fail@plt+0x1a00>
   132a4:	movw	r4, #53744	; 0xd1f0
   132a8:	movt	r4, #2
   132ac:	ldrb	r6, [r4, #4]
   132b0:	bl	1171c <__errno_location@plt>
   132b4:	mov	r5, r0
   132b8:	cmp	r6, #0
   132bc:	beq	132f8 <__assert_fail@plt+0x1a2c>
   132c0:	ldr	r3, [r0]
   132c4:	cmp	r3, #32
   132c8:	bne	132f8 <__assert_fail@plt+0x1a2c>
   132cc:	movw	r3, #53728	; 0xd1e0
   132d0:	movt	r3, #2
   132d4:	ldr	r0, [r3]
   132d8:	bl	1af68 <lchmod@@Base+0x438c>
   132dc:	cmp	r0, #0
   132e0:	bne	13340 <__assert_fail@plt+0x1a74>
   132e4:	add	sp, sp, #8
   132e8:	ldrd	r4, [sp]
   132ec:	ldr	r6, [sp, #8]
   132f0:	add	sp, sp, #12
   132f4:	pop	{pc}		; (ldr pc, [sp], #4)
   132f8:	movw	r1, #49752	; 0xc258
   132fc:	movt	r1, #1
   13300:	mov	r2, #5
   13304:	mov	r0, #0
   13308:	bl	11578 <dcgettext@plt>
   1330c:	mov	r6, r0
   13310:	ldr	r0, [r4]
   13314:	cmp	r0, #0
   13318:	beq	13350 <__assert_fail@plt+0x1a84>
   1331c:	ldr	r4, [r5]
   13320:	bl	19420 <lchmod@@Base+0x2844>
   13324:	mov	r3, r0
   13328:	movw	r2, #49764	; 0xc264
   1332c:	movt	r2, #1
   13330:	mov	r0, #0
   13334:	str	r6, [sp]
   13338:	mov	r1, r4
   1333c:	bl	11638 <error@plt>
   13340:	movw	r3, #53644	; 0xd18c
   13344:	movt	r3, #2
   13348:	ldr	r0, [r3]
   1334c:	bl	11524 <_exit@plt>
   13350:	mov	r3, r6
   13354:	movw	r2, #49768	; 0xc268
   13358:	movt	r2, #1
   1335c:	ldr	r1, [r5]
   13360:	bl	11638 <error@plt>
   13364:	b	13340 <__assert_fail@plt+0x1a74>
   13368:	str	r4, [sp, #-8]!
   1336c:	str	lr, [sp, #4]
   13370:	bl	1340c <__assert_fail@plt+0x1b40>
   13374:	cmp	r0, #0
   13378:	beq	13388 <__assert_fail@plt+0x1abc>
   1337c:	ldr	r4, [sp]
   13380:	add	sp, sp, #4
   13384:	pop	{pc}		; (ldr pc, [sp], #4)
   13388:	bl	1a32c <lchmod@@Base+0x3750>
   1338c:	strd	r4, [sp, #-16]!
   13390:	mov	r4, r0
   13394:	str	r6, [sp, #8]
   13398:	str	lr, [sp, #12]
   1339c:	ldrb	ip, [r0]
   133a0:	sub	r5, ip, #47	; 0x2f
   133a4:	clz	r5, r5
   133a8:	bl	1aeb0 <lchmod@@Base+0x42d4>
   133ac:	lsr	r5, r5, #5
   133b0:	sub	r0, r0, r4
   133b4:	cmp	r0, r5
   133b8:	bls	133fc <__assert_fail@plt+0x1b30>
   133bc:	add	r3, r4, r0
   133c0:	ldrb	r3, [r3, #-1]
   133c4:	cmp	r3, #47	; 0x2f
   133c8:	bne	133fc <__assert_fail@plt+0x1b30>
   133cc:	sub	r0, r0, #2
   133d0:	sub	ip, r4, #1
   133d4:	add	r3, r4, r0
   133d8:	add	ip, ip, r5
   133dc:	rsb	r2, r4, #1
   133e0:	b	133f0 <__assert_fail@plt+0x1b24>
   133e4:	ldrb	r1, [r3], #-1
   133e8:	cmp	r1, #47	; 0x2f
   133ec:	bne	133fc <__assert_fail@plt+0x1b30>
   133f0:	cmp	r3, ip
   133f4:	add	r0, r2, r3
   133f8:	bne	133e4 <__assert_fail@plt+0x1b18>
   133fc:	ldrd	r4, [sp]
   13400:	ldr	r6, [sp, #8]
   13404:	add	sp, sp, #12
   13408:	pop	{pc}		; (ldr pc, [sp], #4)
   1340c:	strd	r4, [sp, #-16]!
   13410:	str	r6, [sp, #8]
   13414:	mov	r6, r0
   13418:	str	lr, [sp, #12]
   1341c:	bl	1338c <__assert_fail@plt+0x1ac0>
   13420:	add	r3, r0, #1
   13424:	mov	r4, r0
   13428:	cmp	r0, #0
   1342c:	movne	r0, r3
   13430:	addeq	r0, r3, #1
   13434:	bl	1ae1c <lchmod@@Base+0x4240>
   13438:	subs	r5, r0, #0
   1343c:	beq	1345c <__assert_fail@plt+0x1b90>
   13440:	mov	r1, r6
   13444:	mov	r2, r4
   13448:	bl	11530 <memcpy@plt>
   1344c:	cmp	r4, #0
   13450:	beq	13470 <__assert_fail@plt+0x1ba4>
   13454:	mov	r3, #0
   13458:	strb	r3, [r5, r4]
   1345c:	mov	r0, r5
   13460:	ldrd	r4, [sp]
   13464:	ldr	r6, [sp, #8]
   13468:	add	sp, sp, #12
   1346c:	pop	{pc}		; (ldr pc, [sp], #4)
   13470:	mov	r3, #46	; 0x2e
   13474:	mov	r4, #1
   13478:	strb	r3, [r5]
   1347c:	b	13454 <__assert_fail@plt+0x1b88>
   13480:	strd	r4, [sp, #-24]!	; 0xffffffe8
   13484:	strd	r6, [sp, #8]
   13488:	str	r8, [sp, #16]
   1348c:	subs	r8, r0, #0
   13490:	str	lr, [sp, #20]
   13494:	beq	13500 <__assert_fail@plt+0x1c34>
   13498:	mov	r0, #24
   1349c:	mov	r4, r1
   134a0:	mov	r7, r2
   134a4:	bl	19eb4 <lchmod@@Base+0x32d8>
   134a8:	mov	r6, r0
   134ac:	mov	r0, r4
   134b0:	bl	1a304 <lchmod@@Base+0x3728>
   134b4:	ldrd	r4, [r7]
   134b8:	mov	r1, r6
   134bc:	str	r0, [r6]
   134c0:	mov	r0, r8
   134c4:	ldrd	r2, [r7, #96]	; 0x60
   134c8:	strd	r2, [r6, #8]
   134cc:	strd	r4, [r6, #16]
   134d0:	bl	168d8 <__assert_fail@plt+0x500c>
   134d4:	cmp	r0, #0
   134d8:	beq	13514 <__assert_fail@plt+0x1c48>
   134dc:	cmp	r6, r0
   134e0:	beq	13500 <__assert_fail@plt+0x1c34>
   134e4:	mov	r0, r6
   134e8:	ldrd	r4, [sp]
   134ec:	ldrd	r6, [sp, #8]
   134f0:	ldr	r8, [sp, #16]
   134f4:	ldr	lr, [sp, #20]
   134f8:	add	sp, sp, #24
   134fc:	b	16ae8 <__assert_fail@plt+0x521c>
   13500:	ldrd	r4, [sp]
   13504:	ldrd	r6, [sp, #8]
   13508:	ldr	r8, [sp, #16]
   1350c:	add	sp, sp, #20
   13510:	pop	{pc}		; (ldr pc, [sp], #4)
   13514:	bl	1a32c <lchmod@@Base+0x3750>
   13518:	subs	r3, r0, #0
   1351c:	beq	13564 <__assert_fail@plt+0x1c98>
   13520:	mov	r3, r1
   13524:	strd	r4, [sp, #-12]!
   13528:	ldrd	r4, [r2, #96]	; 0x60
   1352c:	str	lr, [sp, #8]
   13530:	sub	sp, sp, #28
   13534:	mov	r1, sp
   13538:	str	r3, [sp]
   1353c:	ldrd	r2, [r2]
   13540:	strd	r4, [sp, #8]
   13544:	strd	r2, [sp, #16]
   13548:	bl	15f60 <__assert_fail@plt+0x4694>
   1354c:	adds	r0, r0, #0
   13550:	movne	r0, #1
   13554:	add	sp, sp, #28
   13558:	ldrd	r4, [sp]
   1355c:	add	sp, sp, #8
   13560:	pop	{pc}		; (ldr pc, [sp], #4)
   13564:	mov	r0, r3
   13568:	bx	lr
   1356c:	strd	r4, [sp, #-12]!
   13570:	mov	r5, r0
   13574:	str	lr, [sp, #8]
   13578:	sub	sp, sp, #12
   1357c:	bl	1171c <__errno_location@plt>
   13580:	mov	r4, r0
   13584:	mov	r2, #0
   13588:	ldr	r3, [r4]
   1358c:	mov	r0, r5
   13590:	str	r2, [r4]
   13594:	str	r3, [sp]
   13598:	str	r3, [sp, #4]
   1359c:	bl	1150c <free@plt>
   135a0:	ldr	r3, [r4]
   135a4:	add	r2, sp, #8
   135a8:	clz	r3, r3
   135ac:	lsr	r3, r3, #5
   135b0:	add	r3, r2, r3, lsl #2
   135b4:	ldr	r3, [r3, #-8]
   135b8:	str	r3, [r4]
   135bc:	add	sp, sp, #12
   135c0:	ldrd	r4, [sp]
   135c4:	add	sp, sp, #8
   135c8:	pop	{pc}		; (ldr pc, [sp], #4)
   135cc:	strd	r4, [sp, #-8]!
   135d0:	ldrd	r2, [r1, #8]
   135d4:	ldrd	r4, [r0, #8]
   135d8:	cmp	r5, r3
   135dc:	cmpeq	r4, r2
   135e0:	movne	r0, #0
   135e4:	bne	13600 <__assert_fail@plt+0x1d34>
   135e8:	ldrd	r4, [r0]
   135ec:	ldrd	r2, [r1]
   135f0:	cmp	r5, r3
   135f4:	cmpeq	r4, r2
   135f8:	moveq	r0, #1
   135fc:	movne	r0, #0
   13600:	ldrd	r4, [sp]
   13604:	add	sp, sp, #8
   13608:	bx	lr
   1360c:	mov	r2, r1
   13610:	mov	r3, #0
   13614:	str	r4, [sp, #-8]!
   13618:	ldrd	r0, [r0, #8]
   1361c:	str	lr, [sp, #4]
   13620:	bl	1b76c <lchmod@@Base+0x4b90>
   13624:	ldr	r4, [sp]
   13628:	add	sp, sp, #4
   1362c:	mov	r0, r2
   13630:	pop	{pc}		; (ldr pc, [sp], #4)
   13634:	mov	r2, r1
   13638:	mov	r3, #0
   1363c:	str	r4, [sp, #-8]!
   13640:	ldrd	r0, [r0]
   13644:	str	lr, [sp, #4]
   13648:	bl	1b76c <lchmod@@Base+0x4b90>
   1364c:	ldr	r4, [sp]
   13650:	add	sp, sp, #4
   13654:	mov	r0, r2
   13658:	pop	{pc}		; (ldr pc, [sp], #4)
   1365c:	strd	r4, [sp, #-8]!
   13660:	ldrd	r2, [r1]
   13664:	ldrd	r4, [r0]
   13668:	cmp	r5, r3
   1366c:	cmpeq	r4, r2
   13670:	ldrd	r4, [sp]
   13674:	add	sp, sp, #8
   13678:	moveq	r0, #1
   1367c:	movne	r0, #0
   13680:	bx	lr
   13684:	ldr	r2, [r0]
   13688:	ldr	r3, [r1]
   1368c:	ldrd	r0, [r2, #160]	; 0xa0
   13690:	ldrd	r2, [r3, #160]	; 0xa0
   13694:	cmp	r1, r3
   13698:	cmpeq	r0, r2
   1369c:	movhi	r0, #1
   136a0:	movls	r0, #0
   136a4:	movcc	r3, #1
   136a8:	movcs	r3, #0
   136ac:	sub	r0, r0, r3
   136b0:	bx	lr
   136b4:	strd	r4, [sp, #-24]!	; 0xffffffe8
   136b8:	mov	r5, r2
   136bc:	mov	r4, r1
   136c0:	ldr	r2, [r0, #40]	; 0x28
   136c4:	strd	r6, [sp, #8]
   136c8:	mov	r6, r0
   136cc:	str	r8, [sp, #16]
   136d0:	str	lr, [sp, #20]
   136d4:	ldr	r0, [r0, #8]
   136d8:	cmp	r2, r5
   136dc:	ldr	r7, [r6, #44]	; 0x2c
   136e0:	bcs	13708 <__assert_fail@plt+0x1e3c>
   136e4:	add	r1, r5, #40	; 0x28
   136e8:	cmn	r1, #-1073741823	; 0xc0000001
   136ec:	str	r1, [r6, #40]	; 0x28
   136f0:	bhi	13790 <__assert_fail@plt+0x1ec4>
   136f4:	lsl	r1, r1, #2
   136f8:	bl	1ae58 <lchmod@@Base+0x427c>
   136fc:	cmp	r0, #0
   13700:	strne	r0, [r6, #8]
   13704:	beq	1378c <__assert_fail@plt+0x1ec0>
   13708:	cmp	r4, #0
   1370c:	movne	r2, r0
   13710:	beq	13724 <__assert_fail@plt+0x1e58>
   13714:	str	r4, [r2], #4
   13718:	ldr	r4, [r4, #8]
   1371c:	cmp	r4, #0
   13720:	bne	13714 <__assert_fail@plt+0x1e48>
   13724:	mov	r3, r7
   13728:	mov	r2, #4
   1372c:	mov	r1, r5
   13730:	bl	11800 <qsort@plt>
   13734:	ldr	lr, [r6, #8]
   13738:	subs	r3, r5, #1
   1373c:	ldr	r0, [lr]
   13740:	moveq	r2, r0
   13744:	beq	13770 <__assert_fail@plt+0x1ea4>
   13748:	mov	ip, r0
   1374c:	mov	r2, lr
   13750:	b	13758 <__assert_fail@plt+0x1e8c>
   13754:	ldr	ip, [r2]
   13758:	subs	r3, r3, #1
   1375c:	ldr	r1, [r2, #4]!
   13760:	str	r1, [ip, #8]
   13764:	bne	13754 <__assert_fail@plt+0x1e88>
   13768:	add	r5, lr, r5, lsl #2
   1376c:	ldr	r2, [r5, #-4]
   13770:	mov	r3, #0
   13774:	str	r3, [r2, #8]
   13778:	ldrd	r4, [sp]
   1377c:	ldrd	r6, [sp, #8]
   13780:	ldr	r8, [sp, #16]
   13784:	add	sp, sp, #20
   13788:	pop	{pc}		; (ldr pc, [sp], #4)
   1378c:	ldr	r0, [r6, #8]
   13790:	bl	1356c <__assert_fail@plt+0x1ca0>
   13794:	mov	r3, #0
   13798:	mov	r0, r4
   1379c:	str	r3, [r6, #8]
   137a0:	str	r3, [r6, #40]	; 0x28
   137a4:	b	13778 <__assert_fail@plt+0x1eac>
   137a8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   137ac:	mov	r5, r2
   137b0:	strd	r6, [sp, #8]
   137b4:	mov	r6, r0
   137b8:	add	r0, r2, #176	; 0xb0
   137bc:	bic	r0, r0, #7
   137c0:	mov	r7, r1
   137c4:	str	r8, [sp, #16]
   137c8:	str	lr, [sp, #20]
   137cc:	bl	1ae1c <lchmod@@Base+0x4240>
   137d0:	subs	r4, r0, #0
   137d4:	beq	13820 <__assert_fail@plt+0x1f54>
   137d8:	mov	r1, r7
   137dc:	mov	r2, r5
   137e0:	add	r0, r4, #168	; 0xa8
   137e4:	bl	11530 <memcpy@plt>
   137e8:	ldr	r1, [r6, #24]
   137ec:	mov	r3, #0
   137f0:	add	r0, r4, r5
   137f4:	mov	r2, #3
   137f8:	strb	r3, [r0, #168]	; 0xa8
   137fc:	str	r3, [r4, #12]
   13800:	str	r3, [r4, #16]
   13804:	str	r3, [r4, #20]
   13808:	str	r1, [r4, #28]
   1380c:	str	r3, [r4, #32]
   13810:	str	r6, [r4, #44]	; 0x2c
   13814:	str	r5, [r4, #52]	; 0x34
   13818:	strh	r3, [r4, #58]	; 0x3a
   1381c:	strh	r2, [r4, #60]	; 0x3c
   13820:	mov	r0, r4
   13824:	ldrd	r4, [sp]
   13828:	ldrd	r6, [sp, #8]
   1382c:	ldr	r8, [sp, #16]
   13830:	add	sp, sp, #20
   13834:	pop	{pc}		; (ldr pc, [sp], #4)
   13838:	strd	r4, [sp, #-16]!
   1383c:	subs	r4, r0, #0
   13840:	str	r6, [sp, #8]
   13844:	str	lr, [sp, #12]
   13848:	beq	13870 <__assert_fail@plt+0x1fa4>
   1384c:	ldr	r5, [r4, #8]
   13850:	ldr	r3, [r4, #12]
   13854:	subs	r0, r3, #0
   13858:	beq	13860 <__assert_fail@plt+0x1f94>
   1385c:	bl	118b4 <closedir@plt>
   13860:	mov	r0, r4
   13864:	bl	1356c <__assert_fail@plt+0x1ca0>
   13868:	subs	r4, r5, #0
   1386c:	bne	1384c <__assert_fail@plt+0x1f80>
   13870:	ldrd	r4, [sp]
   13874:	ldr	r6, [sp, #8]
   13878:	add	sp, sp, #12
   1387c:	pop	{pc}		; (ldr pc, [sp], #4)
   13880:	str	r4, [sp, #-8]!
   13884:	mov	r4, r0
   13888:	str	lr, [sp, #4]
   1388c:	b	1389c <__assert_fail@plt+0x1fd0>
   13890:	bl	16b8c <__assert_fail@plt+0x52c0>
   13894:	cmp	r0, #0
   13898:	bge	138bc <__assert_fail@plt+0x1ff0>
   1389c:	mov	r0, r4
   138a0:	bl	16b3c <__assert_fail@plt+0x5270>
   138a4:	cmp	r0, #0
   138a8:	mov	r0, r4
   138ac:	beq	13890 <__assert_fail@plt+0x1fc4>
   138b0:	ldr	r4, [sp]
   138b4:	add	sp, sp, #4
   138b8:	pop	{pc}		; (ldr pc, [sp], #4)
   138bc:	bl	11884 <close@plt>
   138c0:	b	1389c <__assert_fail@plt+0x1fd0>
   138c4:	strd	r4, [sp, #-20]!	; 0xffffffec
   138c8:	ldr	r5, [r0, #44]	; 0x2c
   138cc:	ldr	r3, [r5, #48]	; 0x30
   138d0:	strd	r6, [sp, #8]
   138d4:	str	lr, [sp, #16]
   138d8:	sub	sp, sp, #100	; 0x64
   138dc:	tst	r3, #512	; 0x200
   138e0:	beq	13970 <__assert_fail@plt+0x20a4>
   138e4:	ldr	r4, [r5, #52]	; 0x34
   138e8:	mov	r7, r1
   138ec:	mov	r6, r0
   138f0:	cmp	r4, #0
   138f4:	beq	1391c <__assert_fail@plt+0x2050>
   138f8:	ldrd	r2, [r6, #64]	; 0x40
   138fc:	add	r1, sp, #8
   13900:	mov	r0, r4
   13904:	strd	r2, [sp, #8]
   13908:	bl	15f60 <__assert_fail@plt+0x4694>
   1390c:	cmp	r0, #0
   13910:	beq	13954 <__assert_fail@plt+0x2088>
   13914:	ldr	r0, [r0, #8]
   13918:	b	13974 <__assert_fail@plt+0x20a8>
   1391c:	movw	r0, #13676	; 0x356c
   13920:	movt	r0, #1
   13924:	mov	r1, r4
   13928:	movw	r3, #13916	; 0x365c
   1392c:	movt	r3, #1
   13930:	movw	r2, #13876	; 0x3634
   13934:	movt	r2, #1
   13938:	str	r0, [sp]
   1393c:	mov	r0, #13
   13940:	bl	16280 <__assert_fail@plt+0x49b4>
   13944:	cmp	r0, #0
   13948:	mov	r4, r0
   1394c:	str	r0, [r5, #52]	; 0x34
   13950:	bne	138f8 <__assert_fail@plt+0x202c>
   13954:	cmp	r7, #0
   13958:	blt	13970 <__assert_fail@plt+0x20a4>
   1395c:	mov	r0, r7
   13960:	add	r1, sp, #8
   13964:	bl	11488 <fstatfs64@plt>
   13968:	cmp	r0, #0
   1396c:	beq	13988 <__assert_fail@plt+0x20bc>
   13970:	mov	r0, #0
   13974:	add	sp, sp, #100	; 0x64
   13978:	ldrd	r4, [sp]
   1397c:	ldrd	r6, [sp, #8]
   13980:	add	sp, sp, #16
   13984:	pop	{pc}		; (ldr pc, [sp], #4)
   13988:	cmp	r4, #0
   1398c:	beq	139cc <__assert_fail@plt+0x2100>
   13990:	mov	r0, #16
   13994:	bl	1ae1c <lchmod@@Base+0x4240>
   13998:	subs	r5, r0, #0
   1399c:	beq	139cc <__assert_fail@plt+0x2100>
   139a0:	ldr	ip, [sp, #8]
   139a4:	mov	r0, r4
   139a8:	mov	r1, r5
   139ac:	ldrd	r2, [r6, #64]	; 0x40
   139b0:	strd	r2, [r5]
   139b4:	str	ip, [r5, #8]
   139b8:	bl	168d8 <__assert_fail@plt+0x500c>
   139bc:	cmp	r0, #0
   139c0:	beq	139d4 <__assert_fail@plt+0x2108>
   139c4:	cmp	r5, r0
   139c8:	bne	139e0 <__assert_fail@plt+0x2114>
   139cc:	ldr	r0, [sp, #8]
   139d0:	b	13974 <__assert_fail@plt+0x20a8>
   139d4:	mov	r0, r5
   139d8:	bl	1356c <__assert_fail@plt+0x1ca0>
   139dc:	b	139cc <__assert_fail@plt+0x2100>
   139e0:	bl	11878 <abort@plt>
   139e4:	strd	r4, [sp, #-16]!
   139e8:	mov	r5, r1
   139ec:	ldr	r1, [r0, #32]
   139f0:	str	r6, [sp, #8]
   139f4:	str	lr, [sp, #12]
   139f8:	sub	r3, r1, r5
   139fc:	cmn	r1, #100	; 0x64
   13a00:	clz	r3, r3
   13a04:	lsr	r3, r3, #5
   13a08:	moveq	r3, #0
   13a0c:	cmp	r3, #0
   13a10:	bne	13a70 <__assert_fail@plt+0x21a4>
   13a14:	cmp	r2, #0
   13a18:	mov	r4, r0
   13a1c:	bne	13a4c <__assert_fail@plt+0x2180>
   13a20:	ldr	r3, [r0, #48]	; 0x30
   13a24:	mvn	r2, r1
   13a28:	lsr	r2, r2, #31
   13a2c:	eor	r3, r3, #4
   13a30:	ands	r3, r2, r3, lsr #2
   13a34:	bne	13a64 <__assert_fail@plt+0x2198>
   13a38:	ldr	r6, [sp, #8]
   13a3c:	str	r5, [r4, #32]
   13a40:	ldrd	r4, [sp]
   13a44:	add	sp, sp, #12
   13a48:	pop	{pc}		; (ldr pc, [sp], #4)
   13a4c:	add	r0, r0, #60	; 0x3c
   13a50:	bl	16b44 <__assert_fail@plt+0x5278>
   13a54:	cmp	r0, #0
   13a58:	blt	13a38 <__assert_fail@plt+0x216c>
   13a5c:	bl	11884 <close@plt>
   13a60:	b	13a38 <__assert_fail@plt+0x216c>
   13a64:	mov	r0, r1
   13a68:	bl	11884 <close@plt>
   13a6c:	b	13a38 <__assert_fail@plt+0x216c>
   13a70:	bl	11878 <abort@plt>
   13a74:	ldr	r3, [r0, #48]	; 0x30
   13a78:	strd	r4, [sp, #-16]!
   13a7c:	mov	r4, r0
   13a80:	str	r6, [sp, #8]
   13a84:	str	lr, [sp, #12]
   13a88:	ands	r5, r3, #4
   13a8c:	movne	r5, #0
   13a90:	bne	13aa8 <__assert_fail@plt+0x21dc>
   13a94:	tst	r3, #512	; 0x200
   13a98:	beq	13ac4 <__assert_fail@plt+0x21f8>
   13a9c:	mov	r2, #1
   13aa0:	mvn	r1, #99	; 0x63
   13aa4:	bl	139e4 <__assert_fail@plt+0x2118>
   13aa8:	add	r0, r4, #60	; 0x3c
   13aac:	bl	13880 <__assert_fail@plt+0x1fb4>
   13ab0:	mov	r0, r5
   13ab4:	ldrd	r4, [sp]
   13ab8:	ldr	r6, [sp, #8]
   13abc:	add	sp, sp, #12
   13ac0:	pop	{pc}		; (ldr pc, [sp], #4)
   13ac4:	ldr	r0, [r0, #28]
   13ac8:	bl	117f4 <fchdir@plt>
   13acc:	adds	r5, r0, #0
   13ad0:	movne	r5, #1
   13ad4:	b	13aa8 <__assert_fail@plt+0x21dc>
   13ad8:	ldr	ip, [r2, #48]	; 0x30
   13adc:	strd	r4, [sp, #-16]!
   13ae0:	mov	r4, r2
   13ae4:	add	r5, r2, #64	; 0x40
   13ae8:	ldr	r2, [r2, #24]
   13aec:	str	r6, [sp, #8]
   13af0:	str	lr, [sp, #12]
   13af4:	sub	sp, sp, #8
   13af8:	cmp	ip, #0
   13afc:	bne	13b74 <__assert_fail@plt+0x22a8>
   13b00:	tst	r1, #1
   13b04:	beq	13b74 <__assert_fail@plt+0x22a8>
   13b08:	mov	r1, r2
   13b0c:	mov	r0, #3
   13b10:	mov	r2, r5
   13b14:	bl	11854 <__xstat64@plt>
   13b18:	cmp	r0, #0
   13b1c:	beq	13ba0 <__assert_fail@plt+0x22d4>
   13b20:	bl	1171c <__errno_location@plt>
   13b24:	ldr	r3, [r0]
   13b28:	mov	r6, r0
   13b2c:	cmp	r3, #2
   13b30:	bne	13b58 <__assert_fail@plt+0x228c>
   13b34:	mov	r2, r5
   13b38:	mov	r0, #3
   13b3c:	ldr	r1, [r4, #24]
   13b40:	bl	11890 <__lxstat64@plt>
   13b44:	subs	r3, r0, #0
   13b48:	moveq	r0, #13
   13b4c:	streq	r3, [r6]
   13b50:	beq	13bc4 <__assert_fail@plt+0x22f8>
   13b54:	ldr	r3, [r6]
   13b58:	mov	r0, r5
   13b5c:	mov	r2, #104	; 0x68
   13b60:	str	r3, [r4, #32]
   13b64:	mov	r1, #0
   13b68:	bl	11740 <memset@plt>
   13b6c:	mov	r0, #10
   13b70:	b	13bc4 <__assert_fail@plt+0x22f8>
   13b74:	ubfx	ip, r1, #1, #1
   13b78:	orrs	r3, r3, ip
   13b7c:	bne	13b08 <__assert_fail@plt+0x223c>
   13b80:	mov	ip, #256	; 0x100
   13b84:	mov	r1, r0
   13b88:	mov	r3, r5
   13b8c:	mov	r0, #3
   13b90:	str	ip, [sp]
   13b94:	bl	115c0 <__fxstatat64@plt>
   13b98:	cmp	r0, #0
   13b9c:	bne	13c20 <__assert_fail@plt+0x2354>
   13ba0:	ldr	r3, [r4, #80]	; 0x50
   13ba4:	and	r3, r3, #61440	; 0xf000
   13ba8:	cmp	r3, #16384	; 0x4000
   13bac:	beq	13bd8 <__assert_fail@plt+0x230c>
   13bb0:	cmp	r3, #40960	; 0xa000
   13bb4:	beq	13c2c <__assert_fail@plt+0x2360>
   13bb8:	cmp	r3, #32768	; 0x8000
   13bbc:	movne	r0, #3
   13bc0:	moveq	r0, #8
   13bc4:	add	sp, sp, #8
   13bc8:	ldrd	r4, [sp]
   13bcc:	ldr	r6, [sp, #8]
   13bd0:	add	sp, sp, #12
   13bd4:	pop	{pc}		; (ldr pc, [sp], #4)
   13bd8:	ldrb	r3, [r4, #168]	; 0xa8
   13bdc:	cmp	r3, #46	; 0x2e
   13be0:	bne	13c04 <__assert_fail@plt+0x2338>
   13be4:	ldrb	r3, [r4, #169]	; 0xa9
   13be8:	cmp	r3, #0
   13bec:	beq	13c0c <__assert_fail@plt+0x2340>
   13bf0:	ldr	r3, [r4, #168]	; 0xa8
   13bf4:	bic	r3, r3, #-16777216	; 0xff000000
   13bf8:	bic	r3, r3, #255	; 0xff
   13bfc:	cmp	r3, #11776	; 0x2e00
   13c00:	beq	13c0c <__assert_fail@plt+0x2340>
   13c04:	mov	r0, #1
   13c08:	b	13bc4 <__assert_fail@plt+0x22f8>
   13c0c:	ldr	r3, [r4, #48]	; 0x30
   13c10:	cmp	r3, #0
   13c14:	moveq	r0, #1
   13c18:	movne	r0, #5
   13c1c:	b	13bc4 <__assert_fail@plt+0x22f8>
   13c20:	bl	1171c <__errno_location@plt>
   13c24:	ldr	r3, [r0]
   13c28:	b	13b58 <__assert_fail@plt+0x228c>
   13c2c:	mov	r0, #12
   13c30:	b	13bc4 <__assert_fail@plt+0x22f8>
   13c34:	mov	ip, r1
   13c38:	ldr	r1, [r1]
   13c3c:	strd	r4, [sp, #-16]!
   13c40:	mov	r4, r0
   13c44:	ldr	r0, [r0]
   13c48:	str	r6, [sp, #8]
   13c4c:	str	lr, [sp, #12]
   13c50:	add	r3, r1, #256	; 0x100
   13c54:	add	r2, r3, r2
   13c58:	cmp	r1, r2
   13c5c:	bhi	13c90 <__assert_fail@plt+0x23c4>
   13c60:	mov	r1, r2
   13c64:	str	r2, [ip]
   13c68:	bl	1ae58 <lchmod@@Base+0x427c>
   13c6c:	subs	r5, r0, #0
   13c70:	movne	r3, #1
   13c74:	strne	r5, [r4]
   13c78:	beq	13cb0 <__assert_fail@plt+0x23e4>
   13c7c:	ldrd	r4, [sp]
   13c80:	mov	r0, r3
   13c84:	ldr	r6, [sp, #8]
   13c88:	add	sp, sp, #12
   13c8c:	pop	{pc}		; (ldr pc, [sp], #4)
   13c90:	mov	r5, #0
   13c94:	bl	1356c <__assert_fail@plt+0x1ca0>
   13c98:	str	r5, [r4]
   13c9c:	bl	1171c <__errno_location@plt>
   13ca0:	mov	r2, #36	; 0x24
   13ca4:	mov	r3, r5
   13ca8:	str	r2, [r0]
   13cac:	b	13c7c <__assert_fail@plt+0x23b0>
   13cb0:	ldr	r0, [r4]
   13cb4:	bl	1356c <__assert_fail@plt+0x1ca0>
   13cb8:	mov	r3, r5
   13cbc:	str	r5, [r4]
   13cc0:	b	13c7c <__assert_fail@plt+0x23b0>
   13cc4:	movw	r3, #258	; 0x102
   13cc8:	str	r4, [sp, #-8]!
   13ccc:	mov	r4, r1
   13cd0:	tst	r0, r3
   13cd4:	str	lr, [sp, #4]
   13cd8:	sub	sp, sp, #8
   13cdc:	beq	13d28 <__assert_fail@plt+0x245c>
   13ce0:	movw	r1, #13676	; 0x356c
   13ce4:	movt	r1, #1
   13ce8:	movw	r3, #13772	; 0x35cc
   13cec:	movt	r3, #1
   13cf0:	movw	r2, #13836	; 0x360c
   13cf4:	movt	r2, #1
   13cf8:	str	r1, [sp]
   13cfc:	mov	r0, #31
   13d00:	mov	r1, #0
   13d04:	bl	16280 <__assert_fail@plt+0x49b4>
   13d08:	mov	r3, r0
   13d0c:	adds	r0, r0, #0
   13d10:	movne	r0, #1
   13d14:	str	r3, [r4]
   13d18:	add	sp, sp, #8
   13d1c:	ldr	r4, [sp]
   13d20:	add	sp, sp, #4
   13d24:	pop	{pc}		; (ldr pc, [sp], #4)
   13d28:	mov	r0, #32
   13d2c:	bl	1ae1c <lchmod@@Base+0x4240>
   13d30:	cmp	r0, #0
   13d34:	str	r0, [r4]
   13d38:	beq	13d18 <__assert_fail@plt+0x244c>
   13d3c:	bl	1aff0 <lchmod@@Base+0x4414>
   13d40:	mov	r0, #1
   13d44:	add	sp, sp, #8
   13d48:	ldr	r4, [sp]
   13d4c:	add	sp, sp, #4
   13d50:	pop	{pc}		; (ldr pc, [sp], #4)
   13d54:	mov	r3, r2
   13d58:	lsl	r2, r1, #11
   13d5c:	tst	r1, #512	; 0x200
   13d60:	and	r2, r2, #32768	; 0x8000
   13d64:	orr	r2, r2, #540672	; 0x84000
   13d68:	orr	r2, r2, #2304	; 0x900
   13d6c:	beq	13d78 <__assert_fail@plt+0x24ac>
   13d70:	mov	r1, r3
   13d74:	b	17278 <lchmod@@Base+0x69c>
   13d78:	mov	r1, r2
   13d7c:	mov	r0, r3
   13d80:	b	1b3ac <lchmod@@Base+0x47d0>
   13d84:	strd	r4, [sp, #-32]!	; 0xffffffe0
   13d88:	mov	r5, r0
   13d8c:	mov	r4, r2
   13d90:	strd	r6, [sp, #8]
   13d94:	mov	r7, r1
   13d98:	strd	r8, [sp, #16]
   13d9c:	ldr	r9, [r0, #48]	; 0x30
   13da0:	str	sl, [sp, #24]
   13da4:	subs	sl, r3, #0
   13da8:	str	lr, [sp, #28]
   13dac:	sub	sp, sp, #104	; 0x68
   13db0:	and	r8, r9, #4
   13db4:	beq	13e8c <__assert_fail@plt+0x25c0>
   13db8:	movw	r1, #49820	; 0xc29c
   13dbc:	movt	r1, #1
   13dc0:	mov	r0, sl
   13dc4:	bl	114d0 <strcmp@plt>
   13dc8:	cmp	r0, #0
   13dcc:	bne	13e8c <__assert_fail@plt+0x25c0>
   13dd0:	cmp	r8, #0
   13dd4:	bne	13ecc <__assert_fail@plt+0x2600>
   13dd8:	cmp	r4, #0
   13ddc:	bge	13f8c <__assert_fail@plt+0x26c0>
   13de0:	tst	r9, #512	; 0x200
   13de4:	bne	13f10 <__assert_fail@plt+0x2644>
   13de8:	mov	r8, #1
   13dec:	mov	r1, r9
   13df0:	mov	r2, sl
   13df4:	ldr	r0, [r5, #32]
   13df8:	bl	13d54 <__assert_fail@plt+0x2488>
   13dfc:	subs	r6, r0, #0
   13e00:	blt	13f84 <__assert_fail@plt+0x26b8>
   13e04:	ldr	r9, [r5, #48]	; 0x30
   13e08:	tst	r9, #2
   13e0c:	beq	13ea8 <__assert_fail@plt+0x25dc>
   13e10:	mov	r2, sp
   13e14:	mov	r1, r6
   13e18:	mov	r0, #3
   13e1c:	bl	115d8 <__fxstat64@plt>
   13e20:	cmp	r0, #0
   13e24:	bne	13f08 <__assert_fail@plt+0x263c>
   13e28:	ldrd	r2, [sp]
   13e2c:	ldrd	r0, [r7, #64]	; 0x40
   13e30:	cmp	r1, r3
   13e34:	cmpeq	r0, r2
   13e38:	bne	13efc <__assert_fail@plt+0x2630>
   13e3c:	ldrd	r2, [sp, #96]	; 0x60
   13e40:	ldrd	r0, [r7, #160]	; 0xa0
   13e44:	cmp	r1, r3
   13e48:	cmpeq	r0, r2
   13e4c:	bne	13efc <__assert_fail@plt+0x2630>
   13e50:	ldr	r9, [r5, #48]	; 0x30
   13e54:	tst	r9, #512	; 0x200
   13e58:	bne	13f4c <__assert_fail@plt+0x2680>
   13e5c:	mov	r0, r6
   13e60:	bl	117f4 <fchdir@plt>
   13e64:	mov	r9, r0
   13e68:	cmp	r4, #0
   13e6c:	bge	13edc <__assert_fail@plt+0x2610>
   13e70:	bl	1171c <__errno_location@plt>
   13e74:	mov	r4, r0
   13e78:	mov	r0, r6
   13e7c:	ldr	r5, [r4]
   13e80:	bl	11884 <close@plt>
   13e84:	str	r5, [r4]
   13e88:	b	13edc <__assert_fail@plt+0x2610>
   13e8c:	cmp	r8, #0
   13e90:	bne	13ecc <__assert_fail@plt+0x2600>
   13e94:	cmp	r4, #0
   13e98:	movge	r6, r4
   13e9c:	blt	13dec <__assert_fail@plt+0x2520>
   13ea0:	tst	r9, #2
   13ea4:	bne	13e10 <__assert_fail@plt+0x2544>
   13ea8:	cmp	sl, #0
   13eac:	beq	13e54 <__assert_fail@plt+0x2588>
   13eb0:	mov	r0, sl
   13eb4:	movw	r1, #49820	; 0xc29c
   13eb8:	movt	r1, #1
   13ebc:	bl	114d0 <strcmp@plt>
   13ec0:	cmp	r0, #0
   13ec4:	bne	13e54 <__assert_fail@plt+0x2588>
   13ec8:	b	13e10 <__assert_fail@plt+0x2544>
   13ecc:	mvn	r3, r4
   13ed0:	lsr	r3, r3, #31
   13ed4:	ands	r9, r3, r9, lsr #9
   13ed8:	bne	13f68 <__assert_fail@plt+0x269c>
   13edc:	mov	r0, r9
   13ee0:	add	sp, sp, #104	; 0x68
   13ee4:	ldrd	r4, [sp]
   13ee8:	ldrd	r6, [sp, #8]
   13eec:	ldrd	r8, [sp, #16]
   13ef0:	ldr	sl, [sp, #24]
   13ef4:	add	sp, sp, #28
   13ef8:	pop	{pc}		; (ldr pc, [sp], #4)
   13efc:	bl	1171c <__errno_location@plt>
   13f00:	mov	r3, #2
   13f04:	str	r3, [r0]
   13f08:	mvn	r9, #0
   13f0c:	b	13e68 <__assert_fail@plt+0x259c>
   13f10:	add	r6, r5, #60	; 0x3c
   13f14:	mov	r0, r6
   13f18:	bl	16b3c <__assert_fail@plt+0x5270>
   13f1c:	subs	r8, r0, #0
   13f20:	bne	13dec <__assert_fail@plt+0x2520>
   13f24:	mov	r0, r6
   13f28:	bl	16b8c <__assert_fail@plt+0x52c0>
   13f2c:	subs	r6, r0, #0
   13f30:	blt	13f78 <__assert_fail@plt+0x26ac>
   13f34:	ldr	r9, [r5, #48]	; 0x30
   13f38:	mov	r4, r6
   13f3c:	mov	r8, #1
   13f40:	tst	r9, #2
   13f44:	beq	13e54 <__assert_fail@plt+0x2588>
   13f48:	b	13e10 <__assert_fail@plt+0x2544>
   13f4c:	eor	r2, r8, #1
   13f50:	mov	r1, r6
   13f54:	uxtb	r2, r2
   13f58:	mov	r0, r5
   13f5c:	bl	139e4 <__assert_fail@plt+0x2118>
   13f60:	mov	r9, #0
   13f64:	b	13edc <__assert_fail@plt+0x2610>
   13f68:	mov	r0, r4
   13f6c:	mov	r9, #0
   13f70:	bl	11884 <close@plt>
   13f74:	b	13edc <__assert_fail@plt+0x2610>
   13f78:	mov	r8, #1
   13f7c:	ldr	r9, [r5, #48]	; 0x30
   13f80:	b	13dec <__assert_fail@plt+0x2520>
   13f84:	mvn	r9, #0
   13f88:	b	13edc <__assert_fail@plt+0x2610>
   13f8c:	tst	r9, #2
   13f90:	mov	r6, r4
   13f94:	mov	r8, #1
   13f98:	beq	13eb0 <__assert_fail@plt+0x25e4>
   13f9c:	b	13e10 <__assert_fail@plt+0x2544>
   13fa0:	movw	r3, #258	; 0x102
   13fa4:	strd	r4, [sp, #-32]!	; 0xffffffe0
   13fa8:	tst	r0, r3
   13fac:	strd	r6, [sp, #8]
   13fb0:	strd	r8, [sp, #16]
   13fb4:	mov	r8, r2
   13fb8:	str	sl, [sp, #24]
   13fbc:	mov	sl, r1
   13fc0:	str	lr, [sp, #28]
   13fc4:	beq	14048 <__assert_fail@plt+0x277c>
   13fc8:	mov	r0, #24
   13fcc:	bl	1ae1c <lchmod@@Base+0x4240>
   13fd0:	subs	r9, r0, #0
   13fd4:	beq	1406c <__assert_fail@plt+0x27a0>
   13fd8:	ldrd	r6, [r8, #64]	; 0x40
   13fdc:	mov	r1, r9
   13fe0:	ldrd	r4, [r8, #160]	; 0xa0
   13fe4:	ldr	r0, [sl]
   13fe8:	strd	r6, [r9]
   13fec:	str	r8, [r9, #16]
   13ff0:	strd	r4, [r9, #8]
   13ff4:	bl	168d8 <__assert_fail@plt+0x500c>
   13ff8:	cmp	r9, r0
   13ffc:	mov	r4, r0
   14000:	beq	1402c <__assert_fail@plt+0x2760>
   14004:	mov	r0, r9
   14008:	bl	1356c <__assert_fail@plt+0x1ca0>
   1400c:	cmp	r4, #0
   14010:	beq	1406c <__assert_fail@plt+0x27a0>
   14014:	ldr	r3, [r4, #16]
   14018:	mov	r2, #2
   1401c:	mov	r0, #1
   14020:	str	r3, [r8]
   14024:	strh	r2, [r8, #56]	; 0x38
   14028:	b	14030 <__assert_fail@plt+0x2764>
   1402c:	mov	r0, #1
   14030:	ldrd	r4, [sp]
   14034:	ldrd	r6, [sp, #8]
   14038:	ldrd	r8, [sp, #16]
   1403c:	ldr	sl, [sp, #24]
   14040:	add	sp, sp, #28
   14044:	pop	{pc}		; (ldr pc, [sp], #4)
   14048:	add	r1, r2, #64	; 0x40
   1404c:	ldr	r0, [sl]
   14050:	bl	1b018 <lchmod@@Base+0x443c>
   14054:	cmp	r0, #0
   14058:	beq	1402c <__assert_fail@plt+0x2760>
   1405c:	mov	r3, #2
   14060:	str	r8, [r8]
   14064:	strh	r3, [r8, #56]	; 0x38
   14068:	b	14030 <__assert_fail@plt+0x2764>
   1406c:	mov	r0, #0
   14070:	b	14030 <__assert_fail@plt+0x2764>
   14074:	movw	r3, #258	; 0x102
   14078:	mov	ip, r1
   1407c:	strd	r4, [sp, #-12]!
   14080:	tst	r0, r3
   14084:	str	lr, [sp, #8]
   14088:	sub	sp, sp, #28
   1408c:	bne	140dc <__assert_fail@plt+0x2810>
   14090:	ldr	r3, [r2, #4]
   14094:	cmp	r3, #0
   14098:	beq	140cc <__assert_fail@plt+0x2800>
   1409c:	ldr	r1, [r3, #48]	; 0x30
   140a0:	cmp	r1, #0
   140a4:	blt	140cc <__assert_fail@plt+0x2800>
   140a8:	ldr	ip, [ip]
   140ac:	ldrd	r0, [ip, #16]
   140b0:	orrs	r1, r0, r1
   140b4:	beq	1413c <__assert_fail@plt+0x2870>
   140b8:	ldrd	r4, [ip]
   140bc:	ldrd	r0, [r2, #160]	; 0xa0
   140c0:	cmp	r5, r1
   140c4:	cmpeq	r4, r0
   140c8:	beq	14114 <__assert_fail@plt+0x2848>
   140cc:	add	sp, sp, #28
   140d0:	ldrd	r4, [sp]
   140d4:	add	sp, sp, #8
   140d8:	pop	{pc}		; (ldr pc, [sp], #4)
   140dc:	ldrd	r4, [r2, #64]	; 0x40
   140e0:	mov	r1, sp
   140e4:	ldrd	r2, [r2, #160]	; 0xa0
   140e8:	ldr	r0, [ip]
   140ec:	strd	r4, [sp]
   140f0:	strd	r2, [sp, #8]
   140f4:	bl	16918 <__assert_fail@plt+0x504c>
   140f8:	cmp	r0, #0
   140fc:	beq	1413c <__assert_fail@plt+0x2870>
   14100:	bl	1356c <__assert_fail@plt+0x1ca0>
   14104:	add	sp, sp, #28
   14108:	ldrd	r4, [sp]
   1410c:	add	sp, sp, #8
   14110:	pop	{pc}		; (ldr pc, [sp], #4)
   14114:	ldrd	r0, [ip, #8]
   14118:	ldrd	r4, [r2, #64]	; 0x40
   1411c:	cmp	r1, r5
   14120:	cmpeq	r0, r4
   14124:	bne	140cc <__assert_fail@plt+0x2800>
   14128:	ldrd	r0, [r3, #64]	; 0x40
   1412c:	ldrd	r2, [r3, #160]	; 0xa0
   14130:	strd	r2, [ip]
   14134:	strd	r0, [ip, #8]
   14138:	b	140cc <__assert_fail@plt+0x2800>
   1413c:	bl	11878 <abort@plt>
   14140:	strd	r4, [sp, #-36]!	; 0xffffffdc
   14144:	mov	r5, r0
   14148:	strd	r6, [sp, #8]
   1414c:	strd	r8, [sp, #16]
   14150:	ldr	r9, [r0]
   14154:	strd	sl, [sp, #24]
   14158:	str	lr, [sp, #32]
   1415c:	sub	sp, sp, #68	; 0x44
   14160:	str	r1, [sp, #32]
   14164:	ldr	r0, [r9, #12]
   14168:	cmp	r0, #0
   1416c:	str	r0, [sp, #40]	; 0x28
   14170:	beq	144b0 <__assert_fail@plt+0x2be4>
   14174:	bl	117e8 <dirfd@plt>
   14178:	cmp	r0, #0
   1417c:	str	r0, [sp, #60]	; 0x3c
   14180:	blt	149f4 <__assert_fail@plt+0x3128>
   14184:	ldr	r3, [r5, #44]	; 0x2c
   14188:	cmp	r3, #0
   1418c:	beq	148d8 <__assert_fail@plt+0x300c>
   14190:	ldr	r3, [r5, #48]	; 0x30
   14194:	mvn	r2, #0
   14198:	str	r2, [sp, #16]
   1419c:	mov	r2, #1
   141a0:	str	r2, [sp, #52]	; 0x34
   141a4:	ldr	r2, [r9, #28]
   141a8:	ldr	r1, [r9, #40]	; 0x28
   141ac:	sub	r0, r1, #1
   141b0:	str	r1, [sp]
   141b4:	ldrb	r2, [r2, r0]
   141b8:	str	r0, [sp, #28]
   141bc:	cmp	r2, #47	; 0x2f
   141c0:	beq	141d0 <__assert_fail@plt+0x2904>
   141c4:	add	r2, r1, #1
   141c8:	str	r2, [sp]
   141cc:	str	r1, [sp, #28]
   141d0:	ands	r3, r3, #4
   141d4:	streq	r3, [sp, #20]
   141d8:	beq	141f8 <__assert_fail@plt+0x292c>
   141dc:	ldr	r3, [r5, #24]
   141e0:	mov	r1, #47	; 0x2f
   141e4:	ldr	r0, [sp, #28]
   141e8:	add	r2, r3, r0
   141ec:	strb	r1, [r3, r0]
   141f0:	add	r3, r2, #1
   141f4:	str	r3, [sp, #20]
   141f8:	mov	sl, #0
   141fc:	movw	r3, #6548	; 0x1994
   14200:	movt	r3, #258	; 0x102
   14204:	mov	r2, sl
   14208:	ldr	fp, [r5, #36]	; 0x24
   1420c:	mov	r7, sl
   14210:	stmib	sp, {r2, r9}
   14214:	movw	r2, #19778	; 0x4d42
   14218:	movt	r2, #65363	; 0xff53
   1421c:	str	sl, [sp, #24]
   14220:	str	r3, [sp, #44]	; 0x2c
   14224:	ldr	r3, [r9, #48]	; 0x30
   14228:	str	sl, [sp, #36]	; 0x24
   1422c:	str	r2, [sp, #48]	; 0x30
   14230:	ldr	r2, [sp]
   14234:	add	r3, r3, #1
   14238:	str	r3, [sp, #12]
   1423c:	sub	fp, fp, r2
   14240:	b	14258 <__assert_fail@plt+0x298c>
   14244:	ldr	r3, [sp, #16]
   14248:	add	r7, r7, #1
   1424c:	cmp	r7, r3
   14250:	bcs	14610 <__assert_fail@plt+0x2d44>
   14254:	mov	sl, r4
   14258:	ldr	r3, [sp, #8]
   1425c:	ldr	r4, [r3, #12]
   14260:	cmp	r4, #0
   14264:	beq	14798 <__assert_fail@plt+0x2ecc>
   14268:	bl	1171c <__errno_location@plt>
   1426c:	mov	r8, r0
   14270:	mov	r3, #0
   14274:	mov	r0, r4
   14278:	str	r3, [r8]
   1427c:	bl	117c4 <readdir64@plt>
   14280:	subs	r9, r0, #0
   14284:	beq	14868 <__assert_fail@plt+0x2f9c>
   14288:	ldr	r3, [r5, #48]	; 0x30
   1428c:	tst	r3, #32
   14290:	bne	142a0 <__assert_fail@plt+0x29d4>
   14294:	ldrb	r3, [r9, #19]
   14298:	cmp	r3, #46	; 0x2e
   1429c:	beq	14434 <__assert_fail@plt+0x2b68>
   142a0:	add	r4, r9, #19
   142a4:	mov	r0, r4
   142a8:	bl	116e0 <strlen@plt>
   142ac:	mov	r2, r0
   142b0:	mov	r1, r4
   142b4:	mov	r6, r0
   142b8:	mov	r0, r5
   142bc:	bl	137a8 <__assert_fail@plt+0x1edc>
   142c0:	subs	r4, r0, #0
   142c4:	beq	146c8 <__assert_fail@plt+0x2dfc>
   142c8:	cmp	fp, r6
   142cc:	bls	14394 <__assert_fail@plt+0x2ac8>
   142d0:	ldr	r3, [sp]
   142d4:	adds	r6, r6, r3
   142d8:	bcs	14ac8 <__assert_fail@plt+0x31fc>
   142dc:	ldr	r3, [sp, #12]
   142e0:	add	r1, r4, #168	; 0xa8
   142e4:	ldr	ip, [r5]
   142e8:	ldr	r0, [r5, #48]	; 0x30
   142ec:	str	r6, [r4, #40]	; 0x28
   142f0:	str	r3, [r4, #48]	; 0x30
   142f4:	ldrd	r2, [r9]
   142f8:	str	ip, [r4, #4]
   142fc:	tst	r0, #4
   14300:	streq	r1, [r4, #24]
   14304:	strd	r2, [r4, #160]	; 0xa0
   14308:	bne	14414 <__assert_fail@plt+0x2b48>
   1430c:	ldr	r3, [r5, #44]	; 0x2c
   14310:	cmp	r3, #0
   14314:	beq	14320 <__assert_fail@plt+0x2a54>
   14318:	ands	r3, r0, #1024	; 0x400
   1431c:	beq	14454 <__assert_fail@plt+0x2b88>
   14320:	ldrb	r3, [r9, #18]
   14324:	tst	r0, #8
   14328:	sub	r2, r3, #1
   1432c:	beq	14338 <__assert_fail@plt+0x2a6c>
   14330:	tst	r3, #251	; 0xfb
   14334:	bne	1446c <__assert_fail@plt+0x2ba0>
   14338:	mov	r3, #11
   1433c:	cmp	r2, r3
   14340:	strh	r3, [r4, #56]	; 0x38
   14344:	bls	143f8 <__assert_fail@plt+0x2b2c>
   14348:	mov	r1, #0
   1434c:	mov	r2, #2
   14350:	mov	r3, #0
   14354:	str	r1, [r4, #80]	; 0x50
   14358:	strd	r2, [r4, #112]	; 0x70
   1435c:	ldr	r2, [sp, #4]
   14360:	mov	r3, #0
   14364:	str	r3, [r4, #8]
   14368:	cmp	r2, r3
   1436c:	movw	r3, #10000	; 0x2710
   14370:	strne	r4, [sl, #8]
   14374:	streq	r4, [sp, #4]
   14378:	cmp	r7, r3
   1437c:	bne	14244 <__assert_fail@plt+0x2978>
   14380:	ldr	r6, [r5, #44]	; 0x2c
   14384:	cmp	r6, #0
   14388:	beq	145c4 <__assert_fail@plt+0x2cf8>
   1438c:	movw	r7, #10001	; 0x2711
   14390:	b	14254 <__assert_fail@plt+0x2988>
   14394:	ldr	r3, [sp, #28]
   14398:	add	r1, r5, #36	; 0x24
   1439c:	add	r0, r5, #24
   143a0:	ldr	fp, [r5, #24]
   143a4:	add	r2, r3, #2
   143a8:	add	r2, r2, r6
   143ac:	bl	13c34 <__assert_fail@plt+0x2368>
   143b0:	cmp	r0, #0
   143b4:	beq	146c8 <__assert_fail@plt+0x2dfc>
   143b8:	ldr	r3, [r5, #24]
   143bc:	cmp	r3, fp
   143c0:	beq	144a8 <__assert_fail@plt+0x2bdc>
   143c4:	ldr	r2, [r5, #48]	; 0x30
   143c8:	tst	r2, #4
   143cc:	beq	143dc <__assert_fail@plt+0x2b10>
   143d0:	ldr	r2, [sp]
   143d4:	add	r3, r3, r2
   143d8:	str	r3, [sp, #20]
   143dc:	ldr	r3, [sp]
   143e0:	str	r0, [sp, #24]
   143e4:	ldr	fp, [r5, #36]	; 0x24
   143e8:	sub	fp, fp, r3
   143ec:	b	142d0 <__assert_fail@plt+0x2a04>
   143f0:	mov	r3, #11
   143f4:	strh	r3, [r4, #56]	; 0x38
   143f8:	movw	r3, #49772	; 0xc26c
   143fc:	movt	r3, #1
   14400:	ldr	r1, [r3, r2, lsl #2]
   14404:	mov	r2, #2
   14408:	mov	r3, #0
   1440c:	str	r1, [r4, #80]	; 0x50
   14410:	b	14358 <__assert_fail@plt+0x2a8c>
   14414:	ldr	r3, [r4, #28]
   14418:	ldr	r2, [r4, #52]	; 0x34
   1441c:	ldr	r0, [sp, #20]
   14420:	str	r3, [r4, #24]
   14424:	add	r2, r2, #1
   14428:	bl	11500 <memmove@plt>
   1442c:	ldr	r0, [r5, #48]	; 0x30
   14430:	b	1430c <__assert_fail@plt+0x2a40>
   14434:	ldrb	r3, [r9, #20]
   14438:	cmp	r3, #0
   1443c:	beq	1444c <__assert_fail@plt+0x2b80>
   14440:	ldrh	r3, [r9, #20]
   14444:	cmp	r3, #46	; 0x2e
   14448:	bne	142a0 <__assert_fail@plt+0x29d4>
   1444c:	mov	r4, sl
   14450:	b	14254 <__assert_fail@plt+0x2988>
   14454:	mov	r1, r0
   14458:	mov	r2, r4
   1445c:	ldr	r0, [r5, #32]
   14460:	bl	13ad8 <__assert_fail@plt+0x220c>
   14464:	strh	r0, [r4, #56]	; 0x38
   14468:	b	1435c <__assert_fail@plt+0x2a90>
   1446c:	ubfx	r0, r0, #4, #1
   14470:	cmp	r3, #10
   14474:	moveq	r3, r0
   14478:	orrne	r3, r0, #1
   1447c:	cmp	r3, #0
   14480:	beq	143f0 <__assert_fail@plt+0x2b24>
   14484:	mov	r3, #11
   14488:	cmp	r2, r3
   1448c:	strh	r3, [r4, #56]	; 0x38
   14490:	bls	146ac <__assert_fail@plt+0x2de0>
   14494:	mov	r1, #0
   14498:	mov	r2, #1
   1449c:	mov	r3, #0
   144a0:	str	r1, [r4, #80]	; 0x50
   144a4:	b	14358 <__assert_fail@plt+0x2a8c>
   144a8:	ldr	r0, [sp, #24]
   144ac:	b	143dc <__assert_fail@plt+0x2b10>
   144b0:	ldr	r3, [r5, #48]	; 0x30
   144b4:	ldr	r1, [r9, #24]
   144b8:	and	r2, r3, #516	; 0x204
   144bc:	cmp	r2, #512	; 0x200
   144c0:	ldreq	r0, [r5, #32]
   144c4:	mvnne	r0, #99	; 0x63
   144c8:	ands	r2, r3, #16
   144cc:	beq	144dc <__assert_fail@plt+0x2c10>
   144d0:	tst	r3, #1
   144d4:	moveq	r2, #32768	; 0x8000
   144d8:	bne	1472c <__assert_fail@plt+0x2e60>
   144dc:	add	r3, sp, #60	; 0x3c
   144e0:	bl	172b8 <lchmod@@Base+0x6dc>
   144e4:	cmp	r0, #0
   144e8:	str	r0, [sp, #4]
   144ec:	str	r0, [r9, #12]
   144f0:	beq	14a3c <__assert_fail@plt+0x3170>
   144f4:	ldrh	r3, [r9, #56]	; 0x38
   144f8:	ldr	r0, [r5, #48]	; 0x30
   144fc:	cmp	r3, #11
   14500:	beq	14988 <__assert_fail@plt+0x30bc>
   14504:	tst	r0, #256	; 0x100
   14508:	bne	14904 <__assert_fail@plt+0x3038>
   1450c:	ldr	r2, [r5, #44]	; 0x2c
   14510:	movw	r3, #34464	; 0x86a0
   14514:	movt	r3, #1
   14518:	cmp	r2, #0
   1451c:	mvnne	r3, #0
   14520:	str	r3, [sp, #16]
   14524:	ldr	r3, [sp, #32]
   14528:	cmp	r3, #2
   1452c:	beq	148f4 <__assert_fail@plt+0x3028>
   14530:	ldr	r3, [r5, #48]	; 0x30
   14534:	ldr	r0, [sp, #60]	; 0x3c
   14538:	and	r3, r3, #56	; 0x38
   1453c:	cmp	r3, #24
   14540:	beq	1473c <__assert_fail@plt+0x2e70>
   14544:	ldr	r3, [sp, #32]
   14548:	mov	r4, #1
   1454c:	sub	r6, r3, #3
   14550:	clz	r6, r6
   14554:	lsr	r6, r6, #5
   14558:	ldr	r3, [r5, #48]	; 0x30
   1455c:	tst	r3, #512	; 0x200
   14560:	bne	14a28 <__assert_fail@plt+0x315c>
   14564:	cmp	r0, #0
   14568:	bge	149c8 <__assert_fail@plt+0x30fc>
   1456c:	tst	r6, r4
   14570:	beq	14580 <__assert_fail@plt+0x2cb4>
   14574:	bl	1171c <__errno_location@plt>
   14578:	ldr	r3, [r0]
   1457c:	str	r3, [r9, #32]
   14580:	ldrh	r3, [r9, #58]	; 0x3a
   14584:	ldr	r0, [r9, #12]
   14588:	orr	r3, r3, #1
   1458c:	strh	r3, [r9, #58]	; 0x3a
   14590:	bl	118b4 <closedir@plt>
   14594:	ldr	r3, [r5, #48]	; 0x30
   14598:	mov	r2, #0
   1459c:	str	r2, [r9, #12]
   145a0:	tst	r3, #512	; 0x200
   145a4:	beq	145b4 <__assert_fail@plt+0x2ce8>
   145a8:	ldr	r0, [sp, #60]	; 0x3c
   145ac:	cmp	r0, r2
   145b0:	bge	14a1c <__assert_fail@plt+0x3150>
   145b4:	mov	r2, #0
   145b8:	str	r2, [r9, #12]
   145bc:	str	r2, [sp, #52]	; 0x34
   145c0:	b	141a4 <__assert_fail@plt+0x28d8>
   145c4:	ldr	r0, [sp, #8]
   145c8:	ldr	r1, [sp, #60]	; 0x3c
   145cc:	bl	138c4 <__assert_fail@plt+0x1ff8>
   145d0:	movw	r3, #26985	; 0x6969
   145d4:	cmp	r0, r3
   145d8:	beq	145fc <__assert_fail@plt+0x2d30>
   145dc:	ldr	r3, [sp, #44]	; 0x2c
   145e0:	cmp	r0, r3
   145e4:	beq	145fc <__assert_fail@plt+0x2d30>
   145e8:	ldr	r3, [sp, #48]	; 0x30
   145ec:	cmp	r0, r3
   145f0:	movne	r3, #1
   145f4:	strne	r3, [sp, #36]	; 0x24
   145f8:	bne	1438c <__assert_fail@plt+0x2ac0>
   145fc:	ldr	r3, [sp, #16]
   14600:	add	r7, r7, #1
   14604:	str	r6, [sp, #36]	; 0x24
   14608:	cmp	r7, r3
   1460c:	bcc	14254 <__assert_fail@plt+0x2988>
   14610:	ldr	r9, [sp, #8]
   14614:	ldr	r3, [sp, #24]
   14618:	cmp	r3, #0
   1461c:	beq	147a8 <__assert_fail@plt+0x2edc>
   14620:	ldr	r3, [r5, #4]
   14624:	ldr	r1, [r5, #24]
   14628:	cmp	r3, #0
   1462c:	beq	14660 <__assert_fail@plt+0x2d94>
   14630:	ldr	r2, [r3, #24]
   14634:	add	r0, r3, #168	; 0xa8
   14638:	cmp	r2, r0
   1463c:	beq	14650 <__assert_fail@plt+0x2d84>
   14640:	ldr	r0, [r3, #28]
   14644:	sub	r2, r2, r0
   14648:	add	r2, r1, r2
   1464c:	str	r2, [r3, #24]
   14650:	str	r1, [r3, #28]
   14654:	ldr	r3, [r3, #8]
   14658:	cmp	r3, #0
   1465c:	bne	14630 <__assert_fail@plt+0x2d64>
   14660:	ldr	r3, [sp, #4]
   14664:	b	14698 <__assert_fail@plt+0x2dcc>
   14668:	ldr	r2, [r3, #24]
   1466c:	cmp	r2, r0
   14670:	beq	14684 <__assert_fail@plt+0x2db8>
   14674:	ldr	r0, [r3, #28]
   14678:	sub	r2, r2, r0
   1467c:	add	r2, r1, r2
   14680:	str	r2, [r3, #24]
   14684:	ldr	r2, [r3, #8]
   14688:	str	r1, [r3, #28]
   1468c:	cmp	r2, #0
   14690:	ldreq	r2, [r3, #4]
   14694:	mov	r3, r2
   14698:	ldr	r2, [r3, #48]	; 0x30
   1469c:	add	r0, r3, #168	; 0xa8
   146a0:	cmp	r2, #0
   146a4:	bge	14668 <__assert_fail@plt+0x2d9c>
   146a8:	b	147a8 <__assert_fail@plt+0x2edc>
   146ac:	movw	r3, #49772	; 0xc26c
   146b0:	movt	r3, #1
   146b4:	ldr	r1, [r3, r2, lsl #2]
   146b8:	mov	r2, #1
   146bc:	mov	r3, #0
   146c0:	str	r1, [r4, #80]	; 0x50
   146c4:	b	14358 <__assert_fail@plt+0x2a8c>
   146c8:	ldr	r9, [sp, #8]
   146cc:	mov	r0, r4
   146d0:	ldr	r4, [r8]
   146d4:	bl	1356c <__assert_fail@plt+0x1ca0>
   146d8:	ldr	r0, [sp, #4]
   146dc:	bl	13838 <__assert_fail@plt+0x1f6c>
   146e0:	ldr	r0, [r9, #12]
   146e4:	bl	118b4 <closedir@plt>
   146e8:	ldr	r3, [r5, #48]	; 0x30
   146ec:	mov	r2, #0
   146f0:	mov	r1, #7
   146f4:	str	r2, [sp, #4]
   146f8:	str	r2, [r9, #12]
   146fc:	strh	r1, [r9, #56]	; 0x38
   14700:	orr	r3, r3, #8192	; 0x2000
   14704:	str	r3, [r5, #48]	; 0x30
   14708:	str	r4, [r8]
   1470c:	ldr	r0, [sp, #4]
   14710:	add	sp, sp, #68	; 0x44
   14714:	ldrd	r4, [sp]
   14718:	ldrd	r6, [sp, #8]
   1471c:	ldrd	r8, [sp, #16]
   14720:	ldrd	sl, [sp, #24]
   14724:	add	sp, sp, #32
   14728:	pop	{pc}		; (ldr pc, [sp], #4)
   1472c:	ldr	r2, [r9, #48]	; 0x30
   14730:	cmp	r2, #0
   14734:	movne	r2, #32768	; 0x8000
   14738:	b	144dc <__assert_fail@plt+0x2c10>
   1473c:	ldr	r3, [r9, #84]	; 0x54
   14740:	cmp	r3, #2
   14744:	bne	14544 <__assert_fail@plt+0x2c78>
   14748:	mov	r1, r0
   1474c:	mov	r0, r9
   14750:	bl	138c4 <__assert_fail@plt+0x1ff8>
   14754:	movw	r3, #26985	; 0x6969
   14758:	cmp	r0, r3
   1475c:	beq	14ac0 <__assert_fail@plt+0x31f4>
   14760:	bgt	14aa4 <__assert_fail@plt+0x31d8>
   14764:	movw	r3, #19778	; 0x4d42
   14768:	movt	r3, #65363	; 0xff53
   1476c:	cmp	r0, r3
   14770:	beq	14ac0 <__assert_fail@plt+0x31f4>
   14774:	cmp	r0, #0
   14778:	beq	14ac0 <__assert_fail@plt+0x31f4>
   1477c:	ldr	r3, [sp, #32]
   14780:	cmp	r3, #3
   14784:	bne	148f4 <__assert_fail@plt+0x3028>
   14788:	mov	r4, #0
   1478c:	mov	r6, #1
   14790:	ldr	r0, [sp, #60]	; 0x3c
   14794:	b	14558 <__assert_fail@plt+0x2c8c>
   14798:	mov	r9, r3
   1479c:	ldr	r3, [sp, #24]
   147a0:	cmp	r3, #0
   147a4:	bne	14620 <__assert_fail@plt+0x2d54>
   147a8:	ldr	r3, [r5, #48]	; 0x30
   147ac:	tst	r3, #4
   147b0:	beq	147e0 <__assert_fail@plt+0x2f14>
   147b4:	ldr	r2, [sp]
   147b8:	ldr	r3, [r5, #36]	; 0x24
   147bc:	cmp	r7, #0
   147c0:	cmpne	r3, r2
   147c4:	bne	147d4 <__assert_fail@plt+0x2f08>
   147c8:	ldr	r3, [sp, #20]
   147cc:	sub	r3, r3, #1
   147d0:	str	r3, [sp, #20]
   147d4:	ldr	r2, [sp, #20]
   147d8:	mov	r3, #0
   147dc:	strb	r3, [r2]
   147e0:	ldr	r2, [sp, #40]	; 0x28
   147e4:	ldr	r3, [sp, #52]	; 0x34
   147e8:	cmp	r2, #0
   147ec:	movne	r3, #0
   147f0:	cmp	r3, #0
   147f4:	beq	1482c <__assert_fail@plt+0x2f60>
   147f8:	ldr	r3, [sp, #32]
   147fc:	cmp	r7, #0
   14800:	cmpne	r3, #1
   14804:	bne	14834 <__assert_fail@plt+0x2f68>
   14808:	ldr	r3, [r9, #48]	; 0x30
   1480c:	cmp	r3, #0
   14810:	bne	149a4 <__assert_fail@plt+0x30d8>
   14814:	mov	r0, r5
   14818:	bl	13a74 <__assert_fail@plt+0x21a8>
   1481c:	adds	r0, r0, #0
   14820:	movne	r0, #1
   14824:	cmp	r0, #0
   14828:	bne	14a7c <__assert_fail@plt+0x31b0>
   1482c:	cmp	r7, #0
   14830:	beq	14954 <__assert_fail@plt+0x3088>
   14834:	ldr	r3, [sp, #36]	; 0x24
   14838:	cmp	r3, #0
   1483c:	bne	148ac <__assert_fail@plt+0x2fe0>
   14840:	ldr	r3, [r5, #44]	; 0x2c
   14844:	cmp	r3, #0
   14848:	cmpne	r7, #1
   1484c:	beq	1470c <__assert_fail@plt+0x2e40>
   14850:	mov	r2, r7
   14854:	mov	r0, r5
   14858:	ldr	r1, [sp, #4]
   1485c:	bl	136b4 <__assert_fail@plt+0x1de8>
   14860:	str	r0, [sp, #4]
   14864:	b	1470c <__assert_fail@plt+0x2e40>
   14868:	ldr	r3, [r8]
   1486c:	ldr	r9, [sp, #8]
   14870:	cmp	r3, #0
   14874:	beq	14890 <__assert_fail@plt+0x2fc4>
   14878:	ldr	r2, [sp, #40]	; 0x28
   1487c:	str	r3, [r9, #32]
   14880:	orrs	r2, r2, r7
   14884:	moveq	r3, #4
   14888:	movne	r3, #7
   1488c:	strh	r3, [r9, #56]	; 0x38
   14890:	ldr	r0, [r9, #12]
   14894:	cmp	r0, #0
   14898:	beq	1479c <__assert_fail@plt+0x2ed0>
   1489c:	bl	118b4 <closedir@plt>
   148a0:	mov	r3, #0
   148a4:	str	r3, [r9, #12]
   148a8:	b	1479c <__assert_fail@plt+0x2ed0>
   148ac:	movw	r3, #13956	; 0x3684
   148b0:	movt	r3, #1
   148b4:	ldr	r1, [sp, #4]
   148b8:	mov	r2, r7
   148bc:	mov	r0, r5
   148c0:	str	r3, [r5, #44]	; 0x2c
   148c4:	bl	136b4 <__assert_fail@plt+0x1de8>
   148c8:	mov	r3, #0
   148cc:	str	r0, [sp, #4]
   148d0:	str	r3, [r5, #44]	; 0x2c
   148d4:	b	1470c <__assert_fail@plt+0x2e40>
   148d8:	movw	r3, #34464	; 0x86a0
   148dc:	movt	r3, #1
   148e0:	mov	r2, #1
   148e4:	str	r3, [sp, #16]
   148e8:	str	r2, [sp, #52]	; 0x34
   148ec:	ldr	r3, [r5, #48]	; 0x30
   148f0:	b	141a4 <__assert_fail@plt+0x28d8>
   148f4:	mov	r3, #0
   148f8:	str	r3, [sp, #52]	; 0x34
   148fc:	ldr	r3, [r5, #48]	; 0x30
   14900:	b	141a4 <__assert_fail@plt+0x28d8>
   14904:	add	r4, r5, #56	; 0x38
   14908:	mov	r2, r9
   1490c:	mov	r1, r4
   14910:	bl	14074 <__assert_fail@plt+0x27a8>
   14914:	mov	r3, #0
   14918:	mov	r2, r9
   1491c:	ldr	r0, [r5, #32]
   14920:	ldr	r1, [r5, #48]	; 0x30
   14924:	bl	13ad8 <__assert_fail@plt+0x220c>
   14928:	mov	r1, r4
   1492c:	mov	r2, r9
   14930:	ldr	r0, [r5, #48]	; 0x30
   14934:	bl	13fa0 <__assert_fail@plt+0x26d4>
   14938:	subs	r4, r0, #0
   1493c:	bne	1450c <__assert_fail@plt+0x2c40>
   14940:	bl	1171c <__errno_location@plt>
   14944:	mov	r3, #12
   14948:	str	r4, [sp, #4]
   1494c:	str	r3, [r0]
   14950:	b	1470c <__assert_fail@plt+0x2e40>
   14954:	ldr	r3, [sp, #32]
   14958:	cmp	r3, #3
   1495c:	bne	14974 <__assert_fail@plt+0x30a8>
   14960:	ldrh	r3, [r9, #56]	; 0x38
   14964:	cmp	r3, #7
   14968:	cmpne	r3, #4
   1496c:	movne	r3, #6
   14970:	strhne	r3, [r9, #56]	; 0x38
   14974:	mov	r3, #0
   14978:	ldr	r0, [sp, #4]
   1497c:	str	r3, [sp, #4]
   14980:	bl	13838 <__assert_fail@plt+0x1f6c>
   14984:	b	1470c <__assert_fail@plt+0x2e40>
   14988:	mov	r1, r0
   1498c:	mov	r3, #0
   14990:	ldr	r0, [r5, #32]
   14994:	mov	r2, r9
   14998:	bl	13ad8 <__assert_fail@plt+0x220c>
   1499c:	strh	r0, [r9, #56]	; 0x38
   149a0:	b	1450c <__assert_fail@plt+0x2c40>
   149a4:	movw	r3, #49820	; 0xc29c
   149a8:	movt	r3, #1
   149ac:	ldr	r1, [r9, #4]
   149b0:	mvn	r2, #0
   149b4:	mov	r0, r5
   149b8:	bl	13d84 <__assert_fail@plt+0x24b8>
   149bc:	adds	r0, r0, #0
   149c0:	movne	r0, #1
   149c4:	b	14824 <__assert_fail@plt+0x2f58>
   149c8:	mov	r2, r0
   149cc:	mov	r3, #0
   149d0:	mov	r1, r9
   149d4:	mov	r0, r5
   149d8:	bl	13d84 <__assert_fail@plt+0x24b8>
   149dc:	cmp	r0, #0
   149e0:	bne	1456c <__assert_fail@plt+0x2ca0>
   149e4:	mov	r3, #1
   149e8:	str	r3, [sp, #52]	; 0x34
   149ec:	ldr	r3, [r5, #48]	; 0x30
   149f0:	b	141a4 <__assert_fail@plt+0x28d8>
   149f4:	ldr	r0, [r9, #12]
   149f8:	mov	r4, #0
   149fc:	bl	118b4 <closedir@plt>
   14a00:	ldr	r3, [sp, #32]
   14a04:	str	r4, [r9, #12]
   14a08:	cmp	r3, #3
   14a0c:	beq	14a60 <__assert_fail@plt+0x3194>
   14a10:	mov	r3, #0
   14a14:	str	r3, [sp, #4]
   14a18:	b	1470c <__assert_fail@plt+0x2e40>
   14a1c:	bl	11884 <close@plt>
   14a20:	ldr	r3, [r5, #48]	; 0x30
   14a24:	b	145b4 <__assert_fail@plt+0x2ce8>
   14a28:	mov	r2, #3
   14a2c:	movw	r1, #1030	; 0x406
   14a30:	bl	1b1c4 <lchmod@@Base+0x45e8>
   14a34:	str	r0, [sp, #60]	; 0x3c
   14a38:	b	14564 <__assert_fail@plt+0x2c98>
   14a3c:	ldr	r3, [sp, #32]
   14a40:	cmp	r3, #3
   14a44:	bne	14a10 <__assert_fail@plt+0x3144>
   14a48:	mov	r3, #4
   14a4c:	strh	r3, [r9, #56]	; 0x38
   14a50:	bl	1171c <__errno_location@plt>
   14a54:	ldr	r3, [r0]
   14a58:	str	r3, [r9, #32]
   14a5c:	b	1470c <__assert_fail@plt+0x2e40>
   14a60:	mov	r3, #4
   14a64:	str	r4, [sp, #4]
   14a68:	strh	r3, [r9, #56]	; 0x38
   14a6c:	bl	1171c <__errno_location@plt>
   14a70:	ldr	r3, [r0]
   14a74:	str	r3, [r9, #32]
   14a78:	b	1470c <__assert_fail@plt+0x2e40>
   14a7c:	ldr	r3, [r5, #48]	; 0x30
   14a80:	mov	r2, #7
   14a84:	mov	r1, #0
   14a88:	strh	r2, [r9, #56]	; 0x38
   14a8c:	ldr	r0, [sp, #4]
   14a90:	str	r1, [sp, #4]
   14a94:	orr	r3, r3, #8192	; 0x2000
   14a98:	str	r3, [r5, #48]	; 0x30
   14a9c:	bl	13838 <__assert_fail@plt+0x1f6c>
   14aa0:	b	1470c <__assert_fail@plt+0x2e40>
   14aa4:	movw	r3, #40864	; 0x9fa0
   14aa8:	cmp	r0, r3
   14aac:	beq	14ac0 <__assert_fail@plt+0x31f4>
   14ab0:	movw	r3, #16719	; 0x414f
   14ab4:	movt	r3, #21318	; 0x5346
   14ab8:	cmp	r0, r3
   14abc:	bne	1477c <__assert_fail@plt+0x2eb0>
   14ac0:	ldr	r0, [sp, #60]	; 0x3c
   14ac4:	b	14544 <__assert_fail@plt+0x2c78>
   14ac8:	ldr	r9, [sp, #8]
   14acc:	mov	r0, r4
   14ad0:	bl	1356c <__assert_fail@plt+0x1ca0>
   14ad4:	ldr	r0, [sp, #4]
   14ad8:	bl	13838 <__assert_fail@plt+0x1f6c>
   14adc:	ldr	r0, [r9, #12]
   14ae0:	bl	118b4 <closedir@plt>
   14ae4:	ldr	r3, [r5, #48]	; 0x30
   14ae8:	mov	r2, #0
   14aec:	mov	r0, #7
   14af0:	mov	r1, #36	; 0x24
   14af4:	str	r2, [sp, #4]
   14af8:	str	r2, [r9, #12]
   14afc:	strh	r0, [r9, #56]	; 0x38
   14b00:	orr	r3, r3, #8192	; 0x2000
   14b04:	str	r3, [r5, #48]	; 0x30
   14b08:	str	r1, [r8]
   14b0c:	b	1470c <__assert_fail@plt+0x2e40>
   14b10:	strd	r4, [sp, #-36]!	; 0xffffffdc
   14b14:	bic	r5, r1, #4080	; 0xff0
   14b18:	bic	r5, r5, #15
   14b1c:	strd	r6, [sp, #8]
   14b20:	cmp	r5, #0
   14b24:	strd	r8, [sp, #16]
   14b28:	strd	sl, [sp, #24]
   14b2c:	str	lr, [sp, #32]
   14b30:	sub	sp, sp, #12
   14b34:	bne	14e50 <__assert_fail@plt+0x3584>
   14b38:	and	r3, r1, #516	; 0x204
   14b3c:	mov	r7, r1
   14b40:	cmp	r3, #516	; 0x204
   14b44:	beq	14dec <__assert_fail@plt+0x3520>
   14b48:	ands	r5, r1, #18
   14b4c:	beq	14dec <__assert_fail@plt+0x3520>
   14b50:	mov	r6, r0
   14b54:	mov	r1, #96	; 0x60
   14b58:	mov	r0, #1
   14b5c:	mov	r9, r2
   14b60:	bl	1ada8 <lchmod@@Base+0x41cc>
   14b64:	subs	r5, r0, #0
   14b68:	beq	14da4 <__assert_fail@plt+0x34d8>
   14b6c:	tst	r7, #2
   14b70:	mvn	r2, #99	; 0x63
   14b74:	bicne	r3, r7, #512	; 0x200
   14b78:	orrne	r3, r3, #4
   14b7c:	streq	r7, [r5, #48]	; 0x30
   14b80:	str	r2, [r5, #32]
   14b84:	strne	r3, [r5, #48]	; 0x30
   14b88:	ldr	r3, [r6]
   14b8c:	str	r9, [r5, #44]	; 0x2c
   14b90:	cmp	r3, #0
   14b94:	beq	14e64 <__assert_fail@plt+0x3598>
   14b98:	mov	r8, r6
   14b9c:	mov	r4, #0
   14ba0:	mov	r0, r3
   14ba4:	bl	116e0 <strlen@plt>
   14ba8:	ldr	r3, [r8, #4]!
   14bac:	cmp	r4, r0
   14bb0:	movcc	r4, r0
   14bb4:	cmp	r3, #0
   14bb8:	bne	14ba0 <__assert_fail@plt+0x32d4>
   14bbc:	add	r2, r4, #1
   14bc0:	cmp	r2, #4096	; 0x1000
   14bc4:	movcc	r2, #4096	; 0x1000
   14bc8:	add	r1, r5, #36	; 0x24
   14bcc:	add	r0, r5, #24
   14bd0:	bl	13c34 <__assert_fail@plt+0x2368>
   14bd4:	subs	fp, r0, #0
   14bd8:	beq	14ddc <__assert_fail@plt+0x3510>
   14bdc:	ldr	sl, [r6]
   14be0:	cmp	sl, #0
   14be4:	beq	14e40 <__assert_fail@plt+0x3574>
   14be8:	movw	r1, #49924	; 0xc304
   14bec:	movt	r1, #1
   14bf0:	mov	r2, #0
   14bf4:	mov	r0, r5
   14bf8:	bl	137a8 <__assert_fail@plt+0x1edc>
   14bfc:	subs	sl, r0, #0
   14c00:	beq	14dd4 <__assert_fail@plt+0x3508>
   14c04:	mvn	r3, #0
   14c08:	cmp	r9, #0
   14c0c:	ldr	r4, [r6]
   14c10:	str	r3, [sl, #48]	; 0x30
   14c14:	beq	14c20 <__assert_fail@plt+0x3354>
   14c18:	ldr	fp, [r5, #48]	; 0x30
   14c1c:	ubfx	fp, fp, #10, #1
   14c20:	cmp	r4, #0
   14c24:	beq	14ea0 <__assert_fail@plt+0x35d4>
   14c28:	eor	r7, r7, #2048	; 0x800
   14c2c:	mov	r3, #0
   14c30:	ubfx	r2, r7, #11, #1
   14c34:	mov	r8, r3
   14c38:	mov	r7, r3
   14c3c:	strd	r2, [sp]
   14c40:	b	14c78 <__assert_fail@plt+0x33ac>
   14c44:	mov	r3, #11
   14c48:	mov	r2, #2
   14c4c:	cmp	r9, r1
   14c50:	strh	r3, [r4, #56]	; 0x38
   14c54:	mov	r3, #0
   14c58:	strd	r2, [r4, #112]	; 0x70
   14c5c:	beq	14e2c <__assert_fail@plt+0x3560>
   14c60:	str	r7, [r4, #8]
   14c64:	mov	r7, r4
   14c68:	ldr	r4, [r6, #4]!
   14c6c:	add	r8, r8, #1
   14c70:	cmp	r4, #0
   14c74:	beq	14d24 <__assert_fail@plt+0x3458>
   14c78:	mov	r0, r4
   14c7c:	bl	116e0 <strlen@plt>
   14c80:	ldr	r3, [sp]
   14c84:	mov	r2, r0
   14c88:	cmp	r0, #2
   14c8c:	movls	r3, #0
   14c90:	andhi	r3, r3, #1
   14c94:	cmp	r3, #0
   14c98:	bne	14dfc <__assert_fail@plt+0x3530>
   14c9c:	mov	r1, r4
   14ca0:	mov	r0, r5
   14ca4:	bl	137a8 <__assert_fail@plt+0x1edc>
   14ca8:	subs	r4, r0, #0
   14cac:	beq	14dc4 <__assert_fail@plt+0x34f8>
   14cb0:	add	r2, r4, #168	; 0xa8
   14cb4:	cmp	r7, #0
   14cb8:	moveq	r3, #0
   14cbc:	andne	r3, fp, #1
   14cc0:	str	sl, [r4, #4]
   14cc4:	mov	r1, #0
   14cc8:	cmp	r3, #0
   14ccc:	str	r2, [r4, #24]
   14cd0:	str	r1, [r4, #48]	; 0x30
   14cd4:	bne	14c44 <__assert_fail@plt+0x3378>
   14cd8:	mov	r2, r4
   14cdc:	ldr	r0, [r5, #32]
   14ce0:	ldr	r1, [r5, #48]	; 0x30
   14ce4:	bl	13ad8 <__assert_fail@plt+0x220c>
   14ce8:	cmp	r9, #0
   14cec:	strh	r0, [r4, #56]	; 0x38
   14cf0:	bne	14c60 <__assert_fail@plt+0x3394>
   14cf4:	cmp	r7, #0
   14cf8:	str	r9, [r4, #8]
   14cfc:	moveq	r7, r4
   14d00:	streq	r4, [sp, #4]
   14d04:	beq	14c68 <__assert_fail@plt+0x339c>
   14d08:	ldr	r3, [sp, #4]
   14d0c:	str	r4, [sp, #4]
   14d10:	str	r4, [r3, #8]
   14d14:	ldr	r4, [r6, #4]!
   14d18:	add	r8, r8, #1
   14d1c:	cmp	r4, #0
   14d20:	bne	14c78 <__assert_fail@plt+0x33ac>
   14d24:	cmp	r9, #0
   14d28:	cmpne	r8, #1
   14d2c:	bls	14d44 <__assert_fail@plt+0x3478>
   14d30:	mov	r1, r7
   14d34:	mov	r2, r8
   14d38:	mov	r0, r5
   14d3c:	bl	136b4 <__assert_fail@plt+0x1de8>
   14d40:	mov	r7, r0
   14d44:	movw	r1, #49924	; 0xc304
   14d48:	movt	r1, #1
   14d4c:	mov	r2, #0
   14d50:	mov	r0, r5
   14d54:	bl	137a8 <__assert_fail@plt+0x1edc>
   14d58:	cmp	r0, #0
   14d5c:	str	r0, [r5]
   14d60:	beq	14dc4 <__assert_fail@plt+0x34f8>
   14d64:	mov	r2, #1
   14d68:	mov	r3, #9
   14d6c:	str	r7, [r0, #8]
   14d70:	add	r1, r5, #56	; 0x38
   14d74:	str	r2, [r0, #48]	; 0x30
   14d78:	strh	r3, [r0, #56]	; 0x38
   14d7c:	ldr	r0, [r5, #48]	; 0x30
   14d80:	bl	13cc4 <__assert_fail@plt+0x23f8>
   14d84:	cmp	r0, #0
   14d88:	beq	14dc4 <__assert_fail@plt+0x34f8>
   14d8c:	ldr	r1, [r5, #48]	; 0x30
   14d90:	tst	r1, #516	; 0x204
   14d94:	beq	14e6c <__assert_fail@plt+0x35a0>
   14d98:	mvn	r1, #0
   14d9c:	add	r0, r5, #60	; 0x3c
   14da0:	bl	16b10 <__assert_fail@plt+0x5244>
   14da4:	mov	r0, r5
   14da8:	add	sp, sp, #12
   14dac:	ldrd	r4, [sp]
   14db0:	ldrd	r6, [sp, #8]
   14db4:	ldrd	r8, [sp, #16]
   14db8:	ldrd	sl, [sp, #24]
   14dbc:	add	sp, sp, #32
   14dc0:	pop	{pc}		; (ldr pc, [sp], #4)
   14dc4:	mov	r0, r7
   14dc8:	bl	13838 <__assert_fail@plt+0x1f6c>
   14dcc:	mov	r0, sl
   14dd0:	bl	1356c <__assert_fail@plt+0x1ca0>
   14dd4:	ldr	r0, [r5, #24]
   14dd8:	bl	1356c <__assert_fail@plt+0x1ca0>
   14ddc:	mov	r0, r5
   14de0:	mov	r5, #0
   14de4:	bl	1356c <__assert_fail@plt+0x1ca0>
   14de8:	b	14da4 <__assert_fail@plt+0x34d8>
   14dec:	bl	1171c <__errno_location@plt>
   14df0:	mov	r3, #22
   14df4:	str	r3, [r0]
   14df8:	b	14da4 <__assert_fail@plt+0x34d8>
   14dfc:	sub	r3, r0, #1
   14e00:	ldrb	r1, [r4, r3]
   14e04:	add	r3, r4, r3
   14e08:	cmp	r1, #47	; 0x2f
   14e0c:	bne	14c9c <__assert_fail@plt+0x33d0>
   14e10:	ldrb	r1, [r3, #-1]!
   14e14:	cmp	r1, #47	; 0x2f
   14e18:	bne	14c9c <__assert_fail@plt+0x33d0>
   14e1c:	sub	r2, r2, #1
   14e20:	cmp	r2, #1
   14e24:	bne	14e10 <__assert_fail@plt+0x3544>
   14e28:	b	14c9c <__assert_fail@plt+0x33d0>
   14e2c:	ldr	r3, [sp, #4]
   14e30:	str	r4, [sp, #4]
   14e34:	str	r9, [r4, #8]
   14e38:	str	r4, [r3, #8]
   14e3c:	b	14d14 <__assert_fail@plt+0x3448>
   14e40:	cmp	r9, #0
   14e44:	beq	14e98 <__assert_fail@plt+0x35cc>
   14e48:	mov	r4, sl
   14e4c:	b	14c18 <__assert_fail@plt+0x334c>
   14e50:	bl	1171c <__errno_location@plt>
   14e54:	mov	r3, #22
   14e58:	mov	r5, #0
   14e5c:	str	r3, [r0]
   14e60:	b	14da4 <__assert_fail@plt+0x34d8>
   14e64:	mov	r2, #4096	; 0x1000
   14e68:	b	14bc8 <__assert_fail@plt+0x32fc>
   14e6c:	movw	r2, #49308	; 0xc09c
   14e70:	movt	r2, #1
   14e74:	ldr	r0, [r5, #32]
   14e78:	bl	13d54 <__assert_fail@plt+0x2488>
   14e7c:	cmp	r0, #0
   14e80:	str	r0, [r5, #28]
   14e84:	bge	14d98 <__assert_fail@plt+0x34cc>
   14e88:	ldr	r3, [r5, #48]	; 0x30
   14e8c:	orr	r3, r3, #4
   14e90:	str	r3, [r5, #48]	; 0x30
   14e94:	b	14d98 <__assert_fail@plt+0x34cc>
   14e98:	mov	r7, sl
   14e9c:	b	14d44 <__assert_fail@plt+0x3478>
   14ea0:	mov	r7, r4
   14ea4:	b	14d44 <__assert_fail@plt+0x3478>
   14ea8:	ldr	r3, [r0]
   14eac:	strd	r4, [sp, #-16]!
   14eb0:	mov	r5, r0
   14eb4:	str	r6, [sp, #8]
   14eb8:	str	lr, [sp, #12]
   14ebc:	cmp	r3, #0
   14ec0:	beq	14efc <__assert_fail@plt+0x3630>
   14ec4:	ldr	r2, [r3, #48]	; 0x30
   14ec8:	cmp	r2, #0
   14ecc:	blt	1501c <__assert_fail@plt+0x3750>
   14ed0:	ldr	r4, [r3, #8]
   14ed4:	mov	r0, r3
   14ed8:	cmp	r4, #0
   14edc:	ldreq	r4, [r3, #4]
   14ee0:	bl	1356c <__assert_fail@plt+0x1ca0>
   14ee4:	ldr	r2, [r4, #48]	; 0x30
   14ee8:	mov	r3, r4
   14eec:	cmp	r2, #0
   14ef0:	bge	14ed0 <__assert_fail@plt+0x3604>
   14ef4:	mov	r0, r4
   14ef8:	bl	1356c <__assert_fail@plt+0x1ca0>
   14efc:	ldr	r0, [r5, #4]
   14f00:	cmp	r0, #0
   14f04:	beq	14f0c <__assert_fail@plt+0x3640>
   14f08:	bl	13838 <__assert_fail@plt+0x1f6c>
   14f0c:	ldr	r0, [r5, #8]
   14f10:	bl	1356c <__assert_fail@plt+0x1ca0>
   14f14:	ldr	r0, [r5, #24]
   14f18:	bl	1356c <__assert_fail@plt+0x1ca0>
   14f1c:	ldr	r3, [r5, #48]	; 0x30
   14f20:	tst	r3, #512	; 0x200
   14f24:	bne	14f90 <__assert_fail@plt+0x36c4>
   14f28:	tst	r3, #4
   14f2c:	beq	14fbc <__assert_fail@plt+0x36f0>
   14f30:	mov	r4, #0
   14f34:	add	r0, r5, #60	; 0x3c
   14f38:	bl	13880 <__assert_fail@plt+0x1fb4>
   14f3c:	ldr	r0, [r5, #52]	; 0x34
   14f40:	cmp	r0, #0
   14f44:	beq	14f4c <__assert_fail@plt+0x3680>
   14f48:	bl	164b4 <__assert_fail@plt+0x4be8>
   14f4c:	ldr	r3, [r5, #48]	; 0x30
   14f50:	movw	r2, #258	; 0x102
   14f54:	ldr	r0, [r5, #56]	; 0x38
   14f58:	tst	r2, r3
   14f5c:	beq	14fb4 <__assert_fail@plt+0x36e8>
   14f60:	cmp	r0, #0
   14f64:	beq	14f6c <__assert_fail@plt+0x36a0>
   14f68:	bl	164b4 <__assert_fail@plt+0x4be8>
   14f6c:	mov	r0, r5
   14f70:	bl	1356c <__assert_fail@plt+0x1ca0>
   14f74:	cmp	r4, #0
   14f78:	bne	15024 <__assert_fail@plt+0x3758>
   14f7c:	mov	r0, r4
   14f80:	ldrd	r4, [sp]
   14f84:	ldr	r6, [sp, #8]
   14f88:	add	sp, sp, #12
   14f8c:	pop	{pc}		; (ldr pc, [sp], #4)
   14f90:	ldr	r0, [r5, #32]
   14f94:	cmp	r0, #0
   14f98:	blt	14f30 <__assert_fail@plt+0x3664>
   14f9c:	bl	11884 <close@plt>
   14fa0:	cmp	r0, #0
   14fa4:	beq	14f30 <__assert_fail@plt+0x3664>
   14fa8:	bl	1171c <__errno_location@plt>
   14fac:	ldr	r4, [r0]
   14fb0:	b	14f34 <__assert_fail@plt+0x3668>
   14fb4:	bl	1356c <__assert_fail@plt+0x1ca0>
   14fb8:	b	14f6c <__assert_fail@plt+0x36a0>
   14fbc:	ldr	r0, [r5, #28]
   14fc0:	bl	117f4 <fchdir@plt>
   14fc4:	cmp	r0, #0
   14fc8:	bne	14fec <__assert_fail@plt+0x3720>
   14fcc:	ldr	r0, [r5, #28]
   14fd0:	bl	11884 <close@plt>
   14fd4:	cmp	r0, #0
   14fd8:	beq	14f30 <__assert_fail@plt+0x3664>
   14fdc:	bl	1171c <__errno_location@plt>
   14fe0:	mov	r6, r0
   14fe4:	ldr	r4, [r6]
   14fe8:	b	14f34 <__assert_fail@plt+0x3668>
   14fec:	bl	1171c <__errno_location@plt>
   14ff0:	mov	r6, r0
   14ff4:	ldr	r0, [r5, #28]
   14ff8:	ldr	r4, [r6]
   14ffc:	bl	11884 <close@plt>
   15000:	adds	r3, r0, #0
   15004:	movne	r3, #1
   15008:	cmp	r4, #0
   1500c:	movne	r3, #0
   15010:	cmp	r3, #0
   15014:	beq	14f34 <__assert_fail@plt+0x3668>
   15018:	b	14fe4 <__assert_fail@plt+0x3718>
   1501c:	mov	r4, r3
   15020:	b	14ef4 <__assert_fail@plt+0x3628>
   15024:	bl	1171c <__errno_location@plt>
   15028:	str	r4, [r0]
   1502c:	mvn	r4, #0
   15030:	b	14f7c <__assert_fail@plt+0x36b0>
   15034:	strd	r4, [sp, #-24]!	; 0xffffffe8
   15038:	ldr	r4, [r0]
   1503c:	strd	r6, [sp, #8]
   15040:	str	r8, [sp, #16]
   15044:	str	lr, [sp, #20]
   15048:	cmp	r4, #0
   1504c:	beq	1516c <__assert_fail@plt+0x38a0>
   15050:	ldr	r1, [r0, #48]	; 0x30
   15054:	ands	r3, r1, #8192	; 0x2000
   15058:	bne	1516c <__assert_fail@plt+0x38a0>
   1505c:	ldrh	r2, [r4, #60]	; 0x3c
   15060:	mov	r8, r0
   15064:	mov	r0, #3
   15068:	strh	r0, [r4, #60]	; 0x3c
   1506c:	cmp	r2, #1
   15070:	beq	15418 <__assert_fail@plt+0x3b4c>
   15074:	cmp	r2, #2
   15078:	ldrh	r3, [r4, #56]	; 0x38
   1507c:	beq	15188 <__assert_fail@plt+0x38bc>
   15080:	cmp	r3, #1
   15084:	bne	150b4 <__assert_fail@plt+0x37e8>
   15088:	b	15234 <__assert_fail@plt+0x3968>
   1508c:	mov	r0, r4
   15090:	str	r5, [r8]
   15094:	bl	1356c <__assert_fail@plt+0x1ca0>
   15098:	ldr	r4, [r5, #48]	; 0x30
   1509c:	cmp	r4, #0
   150a0:	beq	1527c <__assert_fail@plt+0x39b0>
   150a4:	ldrh	r3, [r5, #60]	; 0x3c
   150a8:	mov	r4, r5
   150ac:	cmp	r3, #4
   150b0:	bne	15334 <__assert_fail@plt+0x3a68>
   150b4:	ldr	r5, [r4, #8]
   150b8:	cmp	r5, #0
   150bc:	bne	1508c <__assert_fail@plt+0x37c0>
   150c0:	ldr	r6, [r4, #4]
   150c4:	ldr	r3, [r6, #12]
   150c8:	cmp	r3, #0
   150cc:	bne	1553c <__assert_fail@plt+0x3c70>
   150d0:	mov	r0, r4
   150d4:	str	r6, [r8]
   150d8:	bl	1356c <__assert_fail@plt+0x1ca0>
   150dc:	ldr	r3, [r6, #48]	; 0x30
   150e0:	cmn	r3, #1
   150e4:	beq	154e0 <__assert_fail@plt+0x3c14>
   150e8:	ldrh	r3, [r6, #56]	; 0x38
   150ec:	cmp	r3, #11
   150f0:	beq	15414 <__assert_fail@plt+0x3b48>
   150f4:	ldr	r2, [r8, #24]
   150f8:	mov	r1, #0
   150fc:	ldr	r3, [r6, #40]	; 0x28
   15100:	strb	r1, [r2, r3]
   15104:	ldr	r3, [r6, #48]	; 0x30
   15108:	cmp	r3, r1
   1510c:	beq	15500 <__assert_fail@plt+0x3c34>
   15110:	ldrh	r3, [r6, #58]	; 0x3a
   15114:	tst	r3, #2
   15118:	bne	15494 <__assert_fail@plt+0x3bc8>
   1511c:	tst	r3, #1
   15120:	beq	155d4 <__assert_fail@plt+0x3d08>
   15124:	ldrh	r3, [r6, #56]	; 0x38
   15128:	ldr	r0, [r8, #48]	; 0x30
   1512c:	cmp	r3, #2
   15130:	beq	15160 <__assert_fail@plt+0x3894>
   15134:	ldr	r3, [r6, #32]
   15138:	cmp	r3, #0
   1513c:	movne	r3, #7
   15140:	strhne	r3, [r6, #56]	; 0x38
   15144:	bne	15160 <__assert_fail@plt+0x3894>
   15148:	mov	r3, #6
   1514c:	mov	r2, r6
   15150:	add	r1, r8, #56	; 0x38
   15154:	strh	r3, [r6, #56]	; 0x38
   15158:	bl	14074 <__assert_fail@plt+0x27a8>
   1515c:	ldr	r0, [r8, #48]	; 0x30
   15160:	tst	r0, #8192	; 0x2000
   15164:	moveq	r4, r6
   15168:	beq	15170 <__assert_fail@plt+0x38a4>
   1516c:	mov	r4, #0
   15170:	mov	r0, r4
   15174:	ldrd	r4, [sp]
   15178:	ldrd	r6, [sp, #8]
   1517c:	ldr	r8, [sp, #16]
   15180:	add	sp, sp, #20
   15184:	pop	{pc}		; (ldr pc, [sp], #4)
   15188:	sub	r2, r3, #12
   1518c:	cmp	r2, #1
   15190:	bls	153d0 <__assert_fail@plt+0x3b04>
   15194:	cmp	r3, #1
   15198:	bne	150b4 <__assert_fail@plt+0x37e8>
   1519c:	tst	r1, #64	; 0x40
   151a0:	beq	151b8 <__assert_fail@plt+0x38ec>
   151a4:	ldrd	r2, [r8, #16]
   151a8:	ldrd	r6, [r4, #64]	; 0x40
   151ac:	cmp	r7, r3
   151b0:	cmpeq	r6, r2
   151b4:	bne	1523c <__assert_fail@plt+0x3970>
   151b8:	ldr	r0, [r8, #4]
   151bc:	cmp	r0, #0
   151c0:	beq	15440 <__assert_fail@plt+0x3b74>
   151c4:	tst	r1, #4096	; 0x1000
   151c8:	bne	1542c <__assert_fail@plt+0x3b60>
   151cc:	mvn	r2, #0
   151d0:	mov	r1, r4
   151d4:	ldr	r3, [r4, #24]
   151d8:	mov	r0, r8
   151dc:	bl	13d84 <__assert_fail@plt+0x24b8>
   151e0:	cmp	r0, #0
   151e4:	beq	154c8 <__assert_fail@plt+0x3bfc>
   151e8:	bl	1171c <__errno_location@plt>
   151ec:	ldrh	r3, [r4, #58]	; 0x3a
   151f0:	ldr	r2, [r0]
   151f4:	orr	r3, r3, #1
   151f8:	str	r2, [r4, #32]
   151fc:	strh	r3, [r4, #58]	; 0x3a
   15200:	ldr	r4, [r8, #4]
   15204:	cmp	r4, #0
   15208:	beq	15228 <__assert_fail@plt+0x395c>
   1520c:	mov	r3, r4
   15210:	ldr	r2, [r3, #4]
   15214:	ldr	r2, [r2, #24]
   15218:	str	r2, [r3, #24]
   1521c:	ldr	r3, [r3, #8]
   15220:	cmp	r3, #0
   15224:	bne	15210 <__assert_fail@plt+0x3944>
   15228:	mov	r3, #0
   1522c:	str	r3, [r8, #4]
   15230:	b	1533c <__assert_fail@plt+0x3a70>
   15234:	cmp	r2, #4
   15238:	bne	1519c <__assert_fail@plt+0x38d0>
   1523c:	ldrh	r3, [r4, #58]	; 0x3a
   15240:	tst	r3, #2
   15244:	bne	1557c <__assert_fail@plt+0x3cb0>
   15248:	ldr	r0, [r8, #4]
   1524c:	cmp	r0, #0
   15250:	beq	15260 <__assert_fail@plt+0x3994>
   15254:	bl	13838 <__assert_fail@plt+0x1f6c>
   15258:	mov	r3, #0
   1525c:	str	r3, [r8, #4]
   15260:	mov	r3, #6
   15264:	mov	r2, r4
   15268:	ldr	r0, [r8, #48]	; 0x30
   1526c:	add	r1, r8, #56	; 0x38
   15270:	strh	r3, [r4, #56]	; 0x38
   15274:	bl	14074 <__assert_fail@plt+0x27a8>
   15278:	b	15170 <__assert_fail@plt+0x38a4>
   1527c:	mov	r0, r8
   15280:	bl	13a74 <__assert_fail@plt+0x21a8>
   15284:	ldr	r3, [r8, #48]	; 0x30
   15288:	cmp	r0, #0
   1528c:	orrne	r3, r3, #8192	; 0x2000
   15290:	strne	r3, [r8, #48]	; 0x30
   15294:	bne	15170 <__assert_fail@plt+0x38a4>
   15298:	movw	r2, #258	; 0x102
   1529c:	ldr	r0, [r8, #56]	; 0x38
   152a0:	tst	r2, r3
   152a4:	beq	15574 <__assert_fail@plt+0x3ca8>
   152a8:	cmp	r0, #0
   152ac:	beq	152b4 <__assert_fail@plt+0x39e8>
   152b0:	bl	164b4 <__assert_fail@plt+0x4be8>
   152b4:	ldr	r2, [r5, #52]	; 0x34
   152b8:	add	r4, r5, #168	; 0xa8
   152bc:	mov	r1, r4
   152c0:	ldr	r0, [r8, #24]
   152c4:	str	r2, [r5, #40]	; 0x28
   152c8:	add	r2, r2, #1
   152cc:	bl	11500 <memmove@plt>
   152d0:	mov	r0, r4
   152d4:	mov	r1, #47	; 0x2f
   152d8:	bl	117ac <strrchr@plt>
   152dc:	cmp	r0, #0
   152e0:	beq	15310 <__assert_fail@plt+0x3a44>
   152e4:	cmp	r4, r0
   152e8:	beq	154d0 <__assert_fail@plt+0x3c04>
   152ec:	add	r6, r0, #1
   152f0:	mov	r0, r6
   152f4:	bl	116e0 <strlen@plt>
   152f8:	mov	r7, r0
   152fc:	mov	r1, r6
   15300:	mov	r0, r4
   15304:	add	r2, r7, #1
   15308:	bl	11500 <memmove@plt>
   1530c:	str	r7, [r5, #52]	; 0x34
   15310:	ldr	r3, [r8, #24]
   15314:	add	r1, r8, #56	; 0x38
   15318:	mov	r4, r5
   1531c:	ldr	r0, [r8, #48]	; 0x30
   15320:	str	r3, [r5, #24]
   15324:	str	r3, [r5, #28]
   15328:	bl	13cc4 <__assert_fail@plt+0x23f8>
   1532c:	ldrh	r0, [r5, #56]	; 0x38
   15330:	b	15380 <__assert_fail@plt+0x3ab4>
   15334:	cmp	r3, #2
   15338:	beq	155a4 <__assert_fail@plt+0x3cd8>
   1533c:	ldr	r0, [r4, #4]
   15340:	mov	ip, #47	; 0x2f
   15344:	add	r1, r4, #168	; 0xa8
   15348:	ldr	r3, [r8, #24]
   1534c:	ldr	lr, [r0, #28]
   15350:	ldr	r2, [r0, #40]	; 0x28
   15354:	sub	r0, r2, #1
   15358:	ldrb	lr, [lr, r0]
   1535c:	cmp	lr, ip
   15360:	movne	r0, r2
   15364:	strb	ip, [r3, r0]
   15368:	add	r0, r3, r0
   1536c:	ldr	r2, [r4, #52]	; 0x34
   15370:	add	r0, r0, #1
   15374:	add	r2, r2, #1
   15378:	bl	11500 <memmove@plt>
   1537c:	ldrh	r0, [r4, #56]	; 0x38
   15380:	cmp	r0, #11
   15384:	str	r4, [r8]
   15388:	beq	153f8 <__assert_fail@plt+0x3b2c>
   1538c:	cmp	r0, #1
   15390:	bne	15170 <__assert_fail@plt+0x38a4>
   15394:	ldr	r3, [r4, #48]	; 0x30
   15398:	add	r1, r8, #56	; 0x38
   1539c:	ldr	r0, [r8, #48]	; 0x30
   153a0:	cmp	r3, #0
   153a4:	ldrdeq	r2, [r4, #64]	; 0x40
   153a8:	strdeq	r2, [r8, #16]
   153ac:	mov	r2, r4
   153b0:	bl	13fa0 <__assert_fail@plt+0x26d4>
   153b4:	subs	r5, r0, #0
   153b8:	bne	15170 <__assert_fail@plt+0x38a4>
   153bc:	bl	1171c <__errno_location@plt>
   153c0:	mov	r3, #12
   153c4:	mov	r4, r5
   153c8:	str	r3, [r0]
   153cc:	b	15170 <__assert_fail@plt+0x38a4>
   153d0:	mov	r3, #1
   153d4:	mov	r2, r4
   153d8:	ldr	r0, [r8, #32]
   153dc:	bl	13ad8 <__assert_fail@plt+0x220c>
   153e0:	cmp	r0, #1
   153e4:	strh	r0, [r4, #56]	; 0x38
   153e8:	beq	1561c <__assert_fail@plt+0x3d50>
   153ec:	cmp	r0, #11
   153f0:	str	r4, [r8]
   153f4:	bne	15170 <__assert_fail@plt+0x38a4>
   153f8:	ldrd	r2, [r4, #112]	; 0x70
   153fc:	cmp	r3, #0
   15400:	cmpeq	r2, #2
   15404:	beq	15588 <__assert_fail@plt+0x3cbc>
   15408:	cmp	r3, #0
   1540c:	cmpeq	r2, #1
   15410:	beq	15170 <__assert_fail@plt+0x38a4>
   15414:	bl	11878 <abort@plt>
   15418:	mov	r2, r4
   1541c:	ldr	r0, [r8, #32]
   15420:	bl	13ad8 <__assert_fail@plt+0x220c>
   15424:	strh	r0, [r4, #56]	; 0x38
   15428:	b	15170 <__assert_fail@plt+0x38a4>
   1542c:	bic	r1, r1, #4096	; 0x1000
   15430:	str	r1, [r8, #48]	; 0x30
   15434:	bl	13838 <__assert_fail@plt+0x1f6c>
   15438:	mov	r3, #0
   1543c:	str	r3, [r8, #4]
   15440:	mov	r1, #3
   15444:	mov	r0, r8
   15448:	bl	14140 <__assert_fail@plt+0x2874>
   1544c:	cmp	r0, #0
   15450:	str	r0, [r8, #4]
   15454:	movne	r4, r0
   15458:	bne	15228 <__assert_fail@plt+0x395c>
   1545c:	ldr	r0, [r8, #48]	; 0x30
   15460:	tst	r0, #8192	; 0x2000
   15464:	bne	1516c <__assert_fail@plt+0x38a0>
   15468:	ldr	r3, [r4, #32]
   1546c:	cmp	r3, #0
   15470:	beq	15484 <__assert_fail@plt+0x3bb8>
   15474:	ldrh	r3, [r4, #56]	; 0x38
   15478:	cmp	r3, #4
   1547c:	movne	r3, #7
   15480:	strhne	r3, [r4, #56]	; 0x38
   15484:	add	r1, r8, #56	; 0x38
   15488:	mov	r2, r4
   1548c:	bl	14074 <__assert_fail@plt+0x27a8>
   15490:	b	15170 <__assert_fail@plt+0x38a4>
   15494:	ldr	r3, [r8, #48]	; 0x30
   15498:	ldr	r0, [r6, #36]	; 0x24
   1549c:	tst	r3, #4
   154a0:	bne	154c0 <__assert_fail@plt+0x3bf4>
   154a4:	tst	r3, #512	; 0x200
   154a8:	beq	15608 <__assert_fail@plt+0x3d3c>
   154ac:	mov	r1, r0
   154b0:	mov	r2, #1
   154b4:	mov	r0, r8
   154b8:	bl	139e4 <__assert_fail@plt+0x2118>
   154bc:	ldr	r0, [r6, #36]	; 0x24
   154c0:	bl	11884 <close@plt>
   154c4:	b	15124 <__assert_fail@plt+0x3858>
   154c8:	ldr	r4, [r8, #4]
   154cc:	b	15228 <__assert_fail@plt+0x395c>
   154d0:	ldrb	r3, [r4, #1]
   154d4:	cmp	r3, #0
   154d8:	beq	15310 <__assert_fail@plt+0x3a44>
   154dc:	b	152ec <__assert_fail@plt+0x3a20>
   154e0:	mov	r0, r6
   154e4:	bl	1356c <__assert_fail@plt+0x1ca0>
   154e8:	bl	1171c <__errno_location@plt>
   154ec:	mov	r3, #0
   154f0:	mov	r4, r3
   154f4:	str	r3, [r0]
   154f8:	str	r3, [r8]
   154fc:	b	15170 <__assert_fail@plt+0x38a4>
   15500:	mov	r0, r8
   15504:	bl	13a74 <__assert_fail@plt+0x21a8>
   15508:	cmp	r0, #0
   1550c:	beq	15124 <__assert_fail@plt+0x3858>
   15510:	bl	1171c <__errno_location@plt>
   15514:	ldr	r3, [r8, #48]	; 0x30
   15518:	ldr	r2, [r0]
   1551c:	orr	r3, r3, #8192	; 0x2000
   15520:	str	r2, [r6, #32]
   15524:	str	r3, [r8, #48]	; 0x30
   15528:	ldrh	r3, [r6, #56]	; 0x38
   1552c:	cmp	r3, #2
   15530:	beq	1516c <__assert_fail@plt+0x38a0>
   15534:	ldr	r0, [r8, #48]	; 0x30
   15538:	b	15134 <__assert_fail@plt+0x3868>
   1553c:	ldr	r2, [r8, #24]
   15540:	mov	r1, #3
   15544:	mov	r0, r8
   15548:	ldr	r3, [r6, #40]	; 0x28
   1554c:	str	r6, [r8]
   15550:	strb	r5, [r2, r3]
   15554:	bl	14140 <__assert_fail@plt+0x2874>
   15558:	subs	r3, r0, #0
   1555c:	bne	155f8 <__assert_fail@plt+0x3d2c>
   15560:	ldr	r3, [r8, #48]	; 0x30
   15564:	tst	r3, #8192	; 0x2000
   15568:	bne	1516c <__assert_fail@plt+0x38a0>
   1556c:	ldr	r6, [r4, #4]
   15570:	b	150d0 <__assert_fail@plt+0x3804>
   15574:	bl	1356c <__assert_fail@plt+0x1ca0>
   15578:	b	152b4 <__assert_fail@plt+0x39e8>
   1557c:	ldr	r0, [r4, #36]	; 0x24
   15580:	bl	11884 <close@plt>
   15584:	b	15248 <__assert_fail@plt+0x397c>
   15588:	mov	r3, #0
   1558c:	mov	r2, r4
   15590:	ldr	r0, [r8, #32]
   15594:	ldr	r1, [r8, #48]	; 0x30
   15598:	bl	13ad8 <__assert_fail@plt+0x220c>
   1559c:	strh	r0, [r4, #56]	; 0x38
   155a0:	b	1538c <__assert_fail@plt+0x3ac0>
   155a4:	mov	r3, #1
   155a8:	mov	r2, r5
   155ac:	ldr	r0, [r8, #32]
   155b0:	ldr	r1, [r8, #48]	; 0x30
   155b4:	bl	13ad8 <__assert_fail@plt+0x220c>
   155b8:	cmp	r0, #1
   155bc:	strh	r0, [r5, #56]	; 0x38
   155c0:	beq	1565c <__assert_fail@plt+0x3d90>
   155c4:	mov	r3, #3
   155c8:	mov	r4, r5
   155cc:	strh	r3, [r5, #60]	; 0x3c
   155d0:	b	1533c <__assert_fail@plt+0x3a70>
   155d4:	movw	r3, #49820	; 0xc29c
   155d8:	movt	r3, #1
   155dc:	ldr	r1, [r6, #4]
   155e0:	mvn	r2, #0
   155e4:	mov	r0, r8
   155e8:	bl	13d84 <__assert_fail@plt+0x24b8>
   155ec:	cmp	r0, #0
   155f0:	beq	15124 <__assert_fail@plt+0x3858>
   155f4:	b	15510 <__assert_fail@plt+0x3c44>
   155f8:	mov	r0, r4
   155fc:	mov	r4, r3
   15600:	bl	1356c <__assert_fail@plt+0x1ca0>
   15604:	b	1533c <__assert_fail@plt+0x3a70>
   15608:	bl	117f4 <fchdir@plt>
   1560c:	cmp	r0, #0
   15610:	bne	15694 <__assert_fail@plt+0x3dc8>
   15614:	ldr	r0, [r6, #36]	; 0x24
   15618:	b	154c0 <__assert_fail@plt+0x3bf4>
   1561c:	ldr	r1, [r8, #48]	; 0x30
   15620:	tst	r1, #4
   15624:	strne	r4, [r8]
   15628:	bne	15394 <__assert_fail@plt+0x3ac8>
   1562c:	movw	r2, #49308	; 0xc09c
   15630:	movt	r2, #1
   15634:	ldr	r0, [r8, #32]
   15638:	bl	13d54 <__assert_fail@plt+0x2488>
   1563c:	cmp	r0, #0
   15640:	str	r0, [r4, #36]	; 0x24
   15644:	blt	156b4 <__assert_fail@plt+0x3de8>
   15648:	ldrh	r3, [r4, #58]	; 0x3a
   1564c:	ldrh	r0, [r4, #56]	; 0x38
   15650:	orr	r3, r3, #2
   15654:	strh	r3, [r4, #58]	; 0x3a
   15658:	b	15380 <__assert_fail@plt+0x3ab4>
   1565c:	ldr	r1, [r8, #48]	; 0x30
   15660:	tst	r1, #4
   15664:	bne	155c4 <__assert_fail@plt+0x3cf8>
   15668:	movw	r2, #49308	; 0xc09c
   1566c:	movt	r2, #1
   15670:	ldr	r0, [r8, #32]
   15674:	bl	13d54 <__assert_fail@plt+0x2488>
   15678:	cmp	r0, #0
   1567c:	str	r0, [r5, #36]	; 0x24
   15680:	blt	156d0 <__assert_fail@plt+0x3e04>
   15684:	ldrh	r3, [r5, #58]	; 0x3a
   15688:	orr	r3, r3, #2
   1568c:	strh	r3, [r5, #58]	; 0x3a
   15690:	b	155c4 <__assert_fail@plt+0x3cf8>
   15694:	bl	1171c <__errno_location@plt>
   15698:	ldr	r3, [r8, #48]	; 0x30
   1569c:	ldr	r2, [r0]
   156a0:	ldr	r0, [r6, #36]	; 0x24
   156a4:	orr	r3, r3, #8192	; 0x2000
   156a8:	str	r2, [r6, #32]
   156ac:	str	r3, [r8, #48]	; 0x30
   156b0:	b	154c0 <__assert_fail@plt+0x3bf4>
   156b4:	bl	1171c <__errno_location@plt>
   156b8:	ldr	r3, [r0]
   156bc:	mov	r2, #7
   156c0:	str	r3, [r4, #32]
   156c4:	strh	r2, [r4, #56]	; 0x38
   156c8:	str	r4, [r8]
   156cc:	b	15170 <__assert_fail@plt+0x38a4>
   156d0:	bl	1171c <__errno_location@plt>
   156d4:	ldr	r3, [r0]
   156d8:	mov	r2, #7
   156dc:	str	r3, [r5, #32]
   156e0:	strh	r2, [r5, #56]	; 0x38
   156e4:	b	155c4 <__assert_fail@plt+0x3cf8>
   156e8:	cmp	r2, #4
   156ec:	bhi	15700 <__assert_fail@plt+0x3e34>
   156f0:	mov	r3, #0
   156f4:	strh	r2, [r1, #60]	; 0x3c
   156f8:	mov	r0, r3
   156fc:	bx	lr
   15700:	str	r4, [sp, #-8]!
   15704:	str	lr, [sp, #4]
   15708:	bl	1171c <__errno_location@plt>
   1570c:	mov	r2, #22
   15710:	mov	r3, #1
   15714:	ldr	r4, [sp]
   15718:	add	sp, sp, #4
   1571c:	str	r2, [r0]
   15720:	mov	r0, r3
   15724:	pop	{pc}		; (ldr pc, [sp], #4)
   15728:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1572c:	mov	r4, r1
   15730:	mov	r5, r0
   15734:	strd	r6, [sp, #8]
   15738:	str	r8, [sp, #16]
   1573c:	str	lr, [sp, #20]
   15740:	bl	1171c <__errno_location@plt>
   15744:	bics	r2, r4, #4096	; 0x1000
   15748:	mov	r7, r0
   1574c:	movne	r3, #22
   15750:	movne	r0, #0
   15754:	strne	r3, [r7]
   15758:	bne	157ec <__assert_fail@plt+0x3f20>
   1575c:	ldr	r6, [r5]
   15760:	str	r2, [r7]
   15764:	ldr	r3, [r5, #48]	; 0x30
   15768:	ands	r0, r3, #8192	; 0x2000
   1576c:	movne	r0, r2
   15770:	bne	157ec <__assert_fail@plt+0x3f20>
   15774:	ldrh	r3, [r6, #56]	; 0x38
   15778:	cmp	r3, #9
   1577c:	beq	1585c <__assert_fail@plt+0x3f90>
   15780:	cmp	r3, #1
   15784:	bne	157ec <__assert_fail@plt+0x3f20>
   15788:	ldr	r0, [r5, #4]
   1578c:	cmp	r0, #0
   15790:	beq	15798 <__assert_fail@plt+0x3ecc>
   15794:	bl	13838 <__assert_fail@plt+0x1f6c>
   15798:	cmp	r4, #4096	; 0x1000
   1579c:	movne	r4, #1
   157a0:	bne	157b4 <__assert_fail@plt+0x3ee8>
   157a4:	ldr	r3, [r5, #48]	; 0x30
   157a8:	mov	r4, #2
   157ac:	orr	r3, r3, #4096	; 0x1000
   157b0:	str	r3, [r5, #48]	; 0x30
   157b4:	ldr	r3, [r6, #48]	; 0x30
   157b8:	cmp	r3, #0
   157bc:	bne	157dc <__assert_fail@plt+0x3f10>
   157c0:	ldr	r3, [r6, #24]
   157c4:	ldrb	r3, [r3]
   157c8:	cmp	r3, #47	; 0x2f
   157cc:	beq	157dc <__assert_fail@plt+0x3f10>
   157d0:	ldr	r1, [r5, #48]	; 0x30
   157d4:	ands	r6, r1, #4
   157d8:	beq	15800 <__assert_fail@plt+0x3f34>
   157dc:	mov	r1, r4
   157e0:	mov	r0, r5
   157e4:	bl	14140 <__assert_fail@plt+0x2874>
   157e8:	str	r0, [r5, #4]
   157ec:	ldrd	r4, [sp]
   157f0:	ldrd	r6, [sp, #8]
   157f4:	ldr	r8, [sp, #16]
   157f8:	add	sp, sp, #20
   157fc:	pop	{pc}		; (ldr pc, [sp], #4)
   15800:	movw	r2, #49308	; 0xc09c
   15804:	movt	r2, #1
   15808:	ldr	r0, [r5, #32]
   1580c:	bl	13d54 <__assert_fail@plt+0x2488>
   15810:	subs	r8, r0, #0
   15814:	movlt	r0, r6
   15818:	strlt	r6, [r5, #4]
   1581c:	blt	157ec <__assert_fail@plt+0x3f20>
   15820:	mov	r1, r4
   15824:	mov	r0, r5
   15828:	bl	14140 <__assert_fail@plt+0x2874>
   1582c:	ldr	r3, [r5, #48]	; 0x30
   15830:	str	r0, [r5, #4]
   15834:	ands	r4, r3, #512	; 0x200
   15838:	bne	15864 <__assert_fail@plt+0x3f98>
   1583c:	mov	r0, r8
   15840:	bl	117f4 <fchdir@plt>
   15844:	cmp	r0, #0
   15848:	bne	15878 <__assert_fail@plt+0x3fac>
   1584c:	mov	r0, r8
   15850:	bl	11884 <close@plt>
   15854:	ldr	r0, [r5, #4]
   15858:	b	157ec <__assert_fail@plt+0x3f20>
   1585c:	ldr	r0, [r6, #8]
   15860:	b	157ec <__assert_fail@plt+0x3f20>
   15864:	mov	r1, r8
   15868:	mov	r2, #1
   1586c:	mov	r0, r5
   15870:	bl	139e4 <__assert_fail@plt+0x2118>
   15874:	b	15854 <__assert_fail@plt+0x3f88>
   15878:	ldr	r5, [r7]
   1587c:	mov	r0, r8
   15880:	bl	11884 <close@plt>
   15884:	mov	r0, r4
   15888:	str	r5, [r7]
   1588c:	b	157ec <__assert_fail@plt+0x3f20>
   15890:	cmp	r0, #10
   15894:	movcc	r0, #10
   15898:	orr	r0, r0, #1
   1589c:	cmn	r0, #1
   158a0:	bxeq	lr
   158a4:	push	{lr}		; (str lr, [sp, #-4]!)
   158a8:	movw	lr, #43691	; 0xaaab
   158ac:	movt	lr, #43690	; 0xaaaa
   158b0:	umull	r2, r3, lr, r0
   158b4:	cmp	r0, #9
   158b8:	lsr	r3, r3, #1
   158bc:	add	r3, r3, r3, lsl #1
   158c0:	sub	r3, r0, r3
   158c4:	bls	15904 <__assert_fail@plt+0x4038>
   158c8:	cmp	r3, #0
   158cc:	beq	1590c <__assert_fail@plt+0x4040>
   158d0:	mov	ip, #16
   158d4:	mov	r1, #9
   158d8:	mov	r2, #3
   158dc:	b	158e8 <__assert_fail@plt+0x401c>
   158e0:	cmp	r3, #0
   158e4:	beq	1590c <__assert_fail@plt+0x4040>
   158e8:	add	r2, r2, #2
   158ec:	add	r1, r1, ip
   158f0:	cmp	r1, r0
   158f4:	add	ip, ip, #8
   158f8:	udiv	r3, r0, r2
   158fc:	mls	r3, r2, r3, r0
   15900:	bcc	158e0 <__assert_fail@plt+0x4014>
   15904:	cmp	r3, #0
   15908:	bne	15918 <__assert_fail@plt+0x404c>
   1590c:	add	r0, r0, #2
   15910:	cmn	r0, #1
   15914:	bne	158b0 <__assert_fail@plt+0x3fe4>
   15918:	pop	{pc}		; (ldr pc, [sp], #4)
   1591c:	ror	r0, r0, #3
   15920:	udiv	r3, r0, r1
   15924:	mls	r0, r3, r1, r0
   15928:	bx	lr
   1592c:	sub	r0, r1, r0
   15930:	clz	r0, r0
   15934:	lsr	r0, r0, #5
   15938:	bx	lr
   1593c:	str	r4, [sp, #-8]!
   15940:	mov	r4, r0
   15944:	mov	r0, r1
   15948:	ldr	r1, [r4, #8]
   1594c:	ldr	r3, [r4, #24]
   15950:	str	lr, [sp, #4]
   15954:	blx	r3
   15958:	ldr	r3, [r4, #8]
   1595c:	cmp	r3, r0
   15960:	bls	15978 <__assert_fail@plt+0x40ac>
   15964:	ldr	r3, [r4]
   15968:	ldr	r4, [sp]
   1596c:	add	sp, sp, #4
   15970:	add	r0, r3, r0, lsl #3
   15974:	pop	{pc}		; (ldr pc, [sp], #4)
   15978:	bl	11878 <abort@plt>
   1597c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   15980:	mov	r5, r1
   15984:	strd	r6, [sp, #8]
   15988:	mov	r7, r3
   1598c:	mov	r6, r0
   15990:	str	r8, [sp, #16]
   15994:	mov	r8, r2
   15998:	str	lr, [sp, #20]
   1599c:	bl	1593c <__assert_fail@plt+0x4070>
   159a0:	str	r0, [r8]
   159a4:	ldr	r1, [r0]
   159a8:	cmp	r1, #0
   159ac:	beq	15a9c <__assert_fail@plt+0x41d0>
   159b0:	cmp	r1, r5
   159b4:	mov	r4, r0
   159b8:	beq	15a64 <__assert_fail@plt+0x4198>
   159bc:	mov	r0, r5
   159c0:	ldr	r3, [r6, #28]
   159c4:	blx	r3
   159c8:	cmp	r0, #0
   159cc:	bne	15a60 <__assert_fail@plt+0x4194>
   159d0:	ldr	r3, [r4, #4]
   159d4:	cmp	r3, #0
   159d8:	beq	15a9c <__assert_fail@plt+0x41d0>
   159dc:	ldr	r1, [r3]
   159e0:	cmp	r5, r1
   159e4:	bne	15a08 <__assert_fail@plt+0x413c>
   159e8:	b	15a24 <__assert_fail@plt+0x4158>
   159ec:	ldr	r4, [r4, #4]
   159f0:	ldr	r3, [r4, #4]
   159f4:	cmp	r3, #0
   159f8:	beq	15a9c <__assert_fail@plt+0x41d0>
   159fc:	ldr	r1, [r3]
   15a00:	cmp	r1, r5
   15a04:	beq	15a24 <__assert_fail@plt+0x4158>
   15a08:	mov	r0, r5
   15a0c:	ldr	r3, [r6, #28]
   15a10:	blx	r3
   15a14:	cmp	r0, #0
   15a18:	beq	159ec <__assert_fail@plt+0x4120>
   15a1c:	ldr	r3, [r4, #4]
   15a20:	ldr	r1, [r3]
   15a24:	cmp	r7, #0
   15a28:	beq	15a48 <__assert_fail@plt+0x417c>
   15a2c:	ldr	r0, [r3, #4]
   15a30:	mov	r2, #0
   15a34:	str	r0, [r4, #4]
   15a38:	str	r2, [r3]
   15a3c:	ldr	r2, [r6, #36]	; 0x24
   15a40:	str	r2, [r3, #4]
   15a44:	str	r3, [r6, #36]	; 0x24
   15a48:	ldrd	r4, [sp]
   15a4c:	mov	r0, r1
   15a50:	ldrd	r6, [sp, #8]
   15a54:	ldr	r8, [sp, #16]
   15a58:	add	sp, sp, #20
   15a5c:	pop	{pc}		; (ldr pc, [sp], #4)
   15a60:	ldr	r1, [r4]
   15a64:	cmp	r7, #0
   15a68:	beq	15a48 <__assert_fail@plt+0x417c>
   15a6c:	ldr	r0, [r4, #4]
   15a70:	cmp	r0, #0
   15a74:	streq	r0, [r4]
   15a78:	beq	15a48 <__assert_fail@plt+0x417c>
   15a7c:	ldrd	r2, [r0]
   15a80:	mov	ip, #0
   15a84:	strd	r2, [r4]
   15a88:	str	ip, [r0]
   15a8c:	ldr	r3, [r6, #36]	; 0x24
   15a90:	str	r3, [r0, #4]
   15a94:	str	r0, [r6, #36]	; 0x24
   15a98:	b	15a48 <__assert_fail@plt+0x417c>
   15a9c:	mov	r1, #0
   15aa0:	b	15a48 <__assert_fail@plt+0x417c>
   15aa4:	ldr	r2, [r0]
   15aa8:	movw	r3, #49824	; 0xc2a0
   15aac:	movt	r3, #1
   15ab0:	mov	r1, r0
   15ab4:	cmp	r2, r3
   15ab8:	beq	15b40 <__assert_fail@plt+0x4274>
   15abc:	vldr	s14, [pc, #132]	; 15b48 <__assert_fail@plt+0x427c>
   15ac0:	vldr	s15, [r2, #8]
   15ac4:	vcmpe.f32	s15, s14
   15ac8:	vmrs	APSR_nzcv, fpscr
   15acc:	ble	15b34 <__assert_fail@plt+0x4268>
   15ad0:	vldr	s13, [pc, #116]	; 15b4c <__assert_fail@plt+0x4280>
   15ad4:	vcmpe.f32	s15, s13
   15ad8:	vmrs	APSR_nzcv, fpscr
   15adc:	bpl	15b34 <__assert_fail@plt+0x4268>
   15ae0:	vldr	s13, [pc, #104]	; 15b50 <__assert_fail@plt+0x4284>
   15ae4:	vldr	s12, [r2, #12]
   15ae8:	vcmpe.f32	s12, s13
   15aec:	vmrs	APSR_nzcv, fpscr
   15af0:	ble	15b34 <__assert_fail@plt+0x4268>
   15af4:	vldr	s13, [r2]
   15af8:	vcmpe.f32	s13, #0.0
   15afc:	vmrs	APSR_nzcv, fpscr
   15b00:	blt	15b34 <__assert_fail@plt+0x4268>
   15b04:	vadd.f32	s14, s13, s14
   15b08:	vldr	s13, [r2, #4]
   15b0c:	vcmpe.f32	s14, s13
   15b10:	vmrs	APSR_nzcv, fpscr
   15b14:	bpl	15b34 <__assert_fail@plt+0x4268>
   15b18:	vldr	s12, [pc, #52]	; 15b54 <__assert_fail@plt+0x4288>
   15b1c:	vcmpe.f32	s13, s12
   15b20:	vmrs	APSR_nzcv, fpscr
   15b24:	bhi	15b34 <__assert_fail@plt+0x4268>
   15b28:	vcmpe.f32	s15, s14
   15b2c:	vmrs	APSR_nzcv, fpscr
   15b30:	bgt	15b40 <__assert_fail@plt+0x4274>
   15b34:	mov	r0, #0
   15b38:	str	r3, [r1]
   15b3c:	bx	lr
   15b40:	mov	r0, #1
   15b44:	bx	lr
   15b48:	stclcc	12, cr12, [ip, #820]	; 0x334
   15b4c:	svccc	0x00666666
   15b50:	svccc	0x008ccccd
   15b54:	svccc	0x00800000
   15b58:	strd	r4, [sp, #-32]!	; 0xffffffe0
   15b5c:	ldr	r3, [r1, #4]
   15b60:	strd	r6, [sp, #8]
   15b64:	ldr	r6, [r1]
   15b68:	strd	r8, [sp, #16]
   15b6c:	str	sl, [sp, #24]
   15b70:	str	lr, [sp, #28]
   15b74:	cmp	r6, r3
   15b78:	bcs	15c40 <__assert_fail@plt+0x4374>
   15b7c:	mov	r8, r2
   15b80:	mov	r5, r0
   15b84:	mov	r7, r1
   15b88:	add	r6, r6, #8
   15b8c:	mov	r9, #0
   15b90:	b	15ba0 <__assert_fail@plt+0x42d4>
   15b94:	cmp	r3, r6
   15b98:	add	r6, r6, #8
   15b9c:	bls	15c40 <__assert_fail@plt+0x4374>
   15ba0:	ldr	sl, [r6, #-8]
   15ba4:	cmp	sl, #0
   15ba8:	beq	15b94 <__assert_fail@plt+0x42c8>
   15bac:	ldr	r4, [r6, #-4]
   15bb0:	cmp	r4, #0
   15bb4:	bne	15bd4 <__assert_fail@plt+0x4308>
   15bb8:	b	15c24 <__assert_fail@plt+0x4358>
   15bbc:	ldr	r2, [r0, #4]
   15bc0:	cmp	r3, #0
   15bc4:	str	r2, [r4, #4]
   15bc8:	str	r4, [r0, #4]
   15bcc:	mov	r4, r3
   15bd0:	beq	15c20 <__assert_fail@plt+0x4354>
   15bd4:	ldr	sl, [r4]
   15bd8:	mov	r0, r5
   15bdc:	mov	r1, sl
   15be0:	bl	1593c <__assert_fail@plt+0x4070>
   15be4:	ldr	r2, [r0]
   15be8:	ldr	r3, [r4, #4]
   15bec:	cmp	r2, #0
   15bf0:	bne	15bbc <__assert_fail@plt+0x42f0>
   15bf4:	ldr	r1, [r5, #12]
   15bf8:	cmp	r3, #0
   15bfc:	str	sl, [r0]
   15c00:	add	r1, r1, #1
   15c04:	str	r1, [r5, #12]
   15c08:	str	r2, [r4]
   15c0c:	ldr	r2, [r5, #36]	; 0x24
   15c10:	str	r2, [r4, #4]
   15c14:	str	r4, [r5, #36]	; 0x24
   15c18:	mov	r4, r3
   15c1c:	bne	15bd4 <__assert_fail@plt+0x4308>
   15c20:	ldr	sl, [r6, #-8]
   15c24:	cmp	r8, #0
   15c28:	str	r9, [r6, #-4]
   15c2c:	beq	15c5c <__assert_fail@plt+0x4390>
   15c30:	ldr	r3, [r7, #4]
   15c34:	cmp	r3, r6
   15c38:	add	r6, r6, #8
   15c3c:	bhi	15ba0 <__assert_fail@plt+0x42d4>
   15c40:	mov	r0, #1
   15c44:	ldrd	r4, [sp]
   15c48:	ldrd	r6, [sp, #8]
   15c4c:	ldrd	r8, [sp, #16]
   15c50:	ldr	sl, [sp, #24]
   15c54:	add	sp, sp, #28
   15c58:	pop	{pc}		; (ldr pc, [sp], #4)
   15c5c:	mov	r1, sl
   15c60:	mov	r0, r5
   15c64:	bl	1593c <__assert_fail@plt+0x4070>
   15c68:	ldr	r3, [r0]
   15c6c:	mov	r4, r0
   15c70:	cmp	r3, #0
   15c74:	beq	15cb4 <__assert_fail@plt+0x43e8>
   15c78:	ldr	r0, [r5, #36]	; 0x24
   15c7c:	cmp	r0, #0
   15c80:	beq	15cc8 <__assert_fail@plt+0x43fc>
   15c84:	ldr	r3, [r0, #4]
   15c88:	str	r3, [r5, #36]	; 0x24
   15c8c:	ldr	r3, [r4, #4]
   15c90:	str	sl, [r0]
   15c94:	str	r3, [r0, #4]
   15c98:	str	r0, [r4, #4]
   15c9c:	ldr	r2, [r7, #12]
   15ca0:	str	r9, [r6, #-8]
   15ca4:	ldr	r3, [r7, #4]
   15ca8:	sub	r2, r2, #1
   15cac:	str	r2, [r7, #12]
   15cb0:	b	15b94 <__assert_fail@plt+0x42c8>
   15cb4:	ldr	r3, [r5, #12]
   15cb8:	str	sl, [r0]
   15cbc:	add	r3, r3, #1
   15cc0:	str	r3, [r5, #12]
   15cc4:	b	15c9c <__assert_fail@plt+0x43d0>
   15cc8:	mov	r0, #8
   15ccc:	bl	1ae1c <lchmod@@Base+0x4240>
   15cd0:	cmp	r0, #0
   15cd4:	bne	15c8c <__assert_fail@plt+0x43c0>
   15cd8:	mov	r0, r8
   15cdc:	b	15c44 <__assert_fail@plt+0x4378>
   15ce0:	ldr	r0, [r0, #8]
   15ce4:	bx	lr
   15ce8:	ldr	r0, [r0, #12]
   15cec:	bx	lr
   15cf0:	ldr	r0, [r0, #16]
   15cf4:	bx	lr
   15cf8:	ldm	r0, {r1, r3}
   15cfc:	cmp	r1, r3
   15d00:	bcs	15d74 <__assert_fail@plt+0x44a8>
   15d04:	sub	ip, r3, #1
   15d08:	add	r3, r1, #16
   15d0c:	sub	ip, ip, r1
   15d10:	mov	r0, #0
   15d14:	bic	ip, ip, #7
   15d18:	add	r1, r1, #8
   15d1c:	add	ip, ip, r3
   15d20:	b	15d30 <__assert_fail@plt+0x4464>
   15d24:	add	r1, r1, #8
   15d28:	cmp	r1, ip
   15d2c:	beq	15d70 <__assert_fail@plt+0x44a4>
   15d30:	ldr	r3, [r1, #-8]
   15d34:	cmp	r3, #0
   15d38:	beq	15d24 <__assert_fail@plt+0x4458>
   15d3c:	ldr	r3, [r1, #-4]
   15d40:	mov	r2, #1
   15d44:	cmp	r3, #0
   15d48:	beq	15d5c <__assert_fail@plt+0x4490>
   15d4c:	ldr	r3, [r3, #4]
   15d50:	add	r2, r2, #1
   15d54:	cmp	r3, #0
   15d58:	bne	15d4c <__assert_fail@plt+0x4480>
   15d5c:	cmp	r0, r2
   15d60:	add	r1, r1, #8
   15d64:	movcc	r0, r2
   15d68:	cmp	r1, ip
   15d6c:	bne	15d30 <__assert_fail@plt+0x4464>
   15d70:	bx	lr
   15d74:	mov	r0, #0
   15d78:	bx	lr
   15d7c:	ldm	r0, {r1, r3}
   15d80:	push	{lr}		; (str lr, [sp, #-4]!)
   15d84:	cmp	r1, r3
   15d88:	bcs	15e1c <__assert_fail@plt+0x4550>
   15d8c:	sub	ip, r3, #1
   15d90:	mov	r2, #0
   15d94:	sub	ip, ip, r1
   15d98:	add	r3, r1, #16
   15d9c:	bic	ip, ip, #7
   15da0:	add	r1, r1, #8
   15da4:	add	ip, ip, r3
   15da8:	mov	lr, r2
   15dac:	b	15dbc <__assert_fail@plt+0x44f0>
   15db0:	add	r1, r1, #8
   15db4:	cmp	r1, ip
   15db8:	beq	15df8 <__assert_fail@plt+0x452c>
   15dbc:	ldr	r3, [r1, #-8]
   15dc0:	cmp	r3, #0
   15dc4:	beq	15db0 <__assert_fail@plt+0x44e4>
   15dc8:	ldr	r3, [r1, #-4]
   15dcc:	add	lr, lr, #1
   15dd0:	add	r2, r2, #1
   15dd4:	cmp	r3, #0
   15dd8:	beq	15db0 <__assert_fail@plt+0x44e4>
   15ddc:	ldr	r3, [r3, #4]
   15de0:	add	r2, r2, #1
   15de4:	cmp	r3, #0
   15de8:	bne	15ddc <__assert_fail@plt+0x4510>
   15dec:	add	r1, r1, #8
   15df0:	cmp	r1, ip
   15df4:	bne	15dbc <__assert_fail@plt+0x44f0>
   15df8:	ldr	r3, [r0, #12]
   15dfc:	cmp	r3, lr
   15e00:	movne	r0, #0
   15e04:	bne	15e18 <__assert_fail@plt+0x454c>
   15e08:	ldr	r0, [r0, #16]
   15e0c:	sub	r0, r0, r2
   15e10:	clz	r0, r0
   15e14:	lsr	r0, r0, #5
   15e18:	pop	{pc}		; (ldr pc, [sp], #4)
   15e1c:	mov	r2, #0
   15e20:	mov	lr, r2
   15e24:	b	15df8 <__assert_fail@plt+0x452c>
   15e28:	strd	r4, [sp, #-20]!	; 0xffffffec
   15e2c:	mov	r4, r1
   15e30:	ldr	r2, [r0]
   15e34:	ldr	r1, [r0, #4]
   15e38:	ldr	r3, [r0, #16]
   15e3c:	strd	r6, [sp, #8]
   15e40:	str	lr, [sp, #16]
   15e44:	sub	sp, sp, #12
   15e48:	cmp	r2, r1
   15e4c:	ldrd	r6, [r0, #8]
   15e50:	bcs	15f50 <__assert_fail@plt+0x4684>
   15e54:	sub	ip, r1, #1
   15e58:	add	r1, r2, #16
   15e5c:	sub	ip, ip, r2
   15e60:	add	r0, r2, #8
   15e64:	bic	ip, ip, #7
   15e68:	mov	r5, #0
   15e6c:	add	ip, ip, r1
   15e70:	b	15e80 <__assert_fail@plt+0x45b4>
   15e74:	add	r0, r0, #8
   15e78:	cmp	r0, ip
   15e7c:	beq	15ec0 <__assert_fail@plt+0x45f4>
   15e80:	ldr	r2, [r0, #-8]
   15e84:	cmp	r2, #0
   15e88:	beq	15e74 <__assert_fail@plt+0x45a8>
   15e8c:	ldr	r2, [r0, #-4]
   15e90:	mov	r1, #1
   15e94:	cmp	r2, #0
   15e98:	beq	15eac <__assert_fail@plt+0x45e0>
   15e9c:	ldr	r2, [r2, #4]
   15ea0:	add	r1, r1, #1
   15ea4:	cmp	r2, #0
   15ea8:	bne	15e9c <__assert_fail@plt+0x45d0>
   15eac:	cmp	r5, r1
   15eb0:	add	r0, r0, #8
   15eb4:	movcc	r5, r1
   15eb8:	cmp	r0, ip
   15ebc:	bne	15e80 <__assert_fail@plt+0x45b4>
   15ec0:	mov	r1, #1
   15ec4:	mov	r0, r4
   15ec8:	movw	r2, #49844	; 0xc2b4
   15ecc:	movt	r2, #1
   15ed0:	bl	11764 <__fprintf_chk@plt>
   15ed4:	mov	r3, r6
   15ed8:	mov	r1, #1
   15edc:	mov	r0, r4
   15ee0:	movw	r2, #49868	; 0xc2cc
   15ee4:	movt	r2, #1
   15ee8:	bl	11764 <__fprintf_chk@plt>
   15eec:	vmov	s15, r7
   15ef0:	mov	r3, r7
   15ef4:	mov	r1, #1
   15ef8:	vldr	d5, [pc, #88]	; 15f58 <__assert_fail@plt+0x468c>
   15efc:	mov	r0, r4
   15f00:	movw	r2, #49892	; 0xc2e4
   15f04:	movt	r2, #1
   15f08:	vcvt.f64.u32	d6, s15
   15f0c:	vmov	s15, r6
   15f10:	vmul.f64	d6, d6, d5
   15f14:	vcvt.f64.u32	d7, s15
   15f18:	vdiv.f64	d5, d6, d7
   15f1c:	vstr	d5, [sp]
   15f20:	bl	11764 <__fprintf_chk@plt>
   15f24:	mov	r3, r5
   15f28:	mov	r0, r4
   15f2c:	movw	r2, #49928	; 0xc308
   15f30:	movt	r2, #1
   15f34:	mov	r1, #1
   15f38:	add	sp, sp, #12
   15f3c:	ldrd	r4, [sp]
   15f40:	ldrd	r6, [sp, #8]
   15f44:	ldr	lr, [sp, #16]
   15f48:	add	sp, sp, #20
   15f4c:	b	11764 <__fprintf_chk@plt>
   15f50:	mov	r5, #0
   15f54:	b	15ec0 <__assert_fail@plt+0x45f4>
   15f58:	andeq	r0, r0, r0
   15f5c:	subsmi	r0, r9, r0
   15f60:	strd	r4, [sp, #-16]!
   15f64:	mov	r5, r1
   15f68:	str	r6, [sp, #8]
   15f6c:	mov	r6, r0
   15f70:	str	lr, [sp, #12]
   15f74:	bl	1593c <__assert_fail@plt+0x4070>
   15f78:	ldr	r3, [r0]
   15f7c:	cmp	r3, #0
   15f80:	beq	15fbc <__assert_fail@plt+0x46f0>
   15f84:	mov	r4, r0
   15f88:	b	15f90 <__assert_fail@plt+0x46c4>
   15f8c:	ldr	r3, [r4]
   15f90:	cmp	r3, r5
   15f94:	mov	r1, r3
   15f98:	mov	r0, r5
   15f9c:	beq	15fd4 <__assert_fail@plt+0x4708>
   15fa0:	ldr	r3, [r6, #28]
   15fa4:	blx	r3
   15fa8:	cmp	r0, #0
   15fac:	bne	15fd0 <__assert_fail@plt+0x4704>
   15fb0:	ldr	r4, [r4, #4]
   15fb4:	cmp	r4, #0
   15fb8:	bne	15f8c <__assert_fail@plt+0x46c0>
   15fbc:	ldrd	r4, [sp]
   15fc0:	mov	r0, #0
   15fc4:	ldr	r6, [sp, #8]
   15fc8:	add	sp, sp, #12
   15fcc:	pop	{pc}		; (ldr pc, [sp], #4)
   15fd0:	ldr	r5, [r4]
   15fd4:	mov	r0, r5
   15fd8:	ldrd	r4, [sp]
   15fdc:	ldr	r6, [sp, #8]
   15fe0:	add	sp, sp, #12
   15fe4:	pop	{pc}		; (ldr pc, [sp], #4)
   15fe8:	ldr	r3, [r0, #16]
   15fec:	cmp	r3, #0
   15ff0:	beq	16044 <__assert_fail@plt+0x4778>
   15ff4:	ldr	r3, [r0]
   15ff8:	ldr	r2, [r0, #4]
   15ffc:	cmp	r3, r2
   16000:	bcs	16038 <__assert_fail@plt+0x476c>
   16004:	ldr	r0, [r3]
   16008:	cmp	r0, #0
   1600c:	bxne	lr
   16010:	sub	r2, r2, #1
   16014:	sub	r2, r2, r3
   16018:	bic	r2, r2, #7
   1601c:	add	r2, r3, r2
   16020:	b	16030 <__assert_fail@plt+0x4764>
   16024:	ldr	r0, [r3, #8]!
   16028:	cmp	r0, #0
   1602c:	bxne	lr
   16030:	cmp	r3, r2
   16034:	bne	16024 <__assert_fail@plt+0x4758>
   16038:	str	r4, [sp, #-8]!
   1603c:	str	lr, [sp, #4]
   16040:	bl	11878 <abort@plt>
   16044:	mov	r0, r3
   16048:	bx	lr
   1604c:	strd	r4, [sp, #-16]!
   16050:	mov	r5, r0
   16054:	mov	r4, r1
   16058:	str	r6, [sp, #8]
   1605c:	str	lr, [sp, #12]
   16060:	bl	1593c <__assert_fail@plt+0x4070>
   16064:	mov	r2, r0
   16068:	mov	r3, r0
   1606c:	b	16078 <__assert_fail@plt+0x47ac>
   16070:	cmp	r3, #0
   16074:	beq	16090 <__assert_fail@plt+0x47c4>
   16078:	ldm	r3, {r1, r3}
   1607c:	cmp	r1, r4
   16080:	bne	16070 <__assert_fail@plt+0x47a4>
   16084:	cmp	r3, #0
   16088:	ldrne	r0, [r3]
   1608c:	bne	160b4 <__assert_fail@plt+0x47e8>
   16090:	ldr	r3, [r5, #4]
   16094:	b	160a4 <__assert_fail@plt+0x47d8>
   16098:	ldr	r0, [r2]
   1609c:	cmp	r0, #0
   160a0:	bne	160b4 <__assert_fail@plt+0x47e8>
   160a4:	add	r2, r2, #8
   160a8:	cmp	r3, r2
   160ac:	bhi	16098 <__assert_fail@plt+0x47cc>
   160b0:	mov	r0, #0
   160b4:	ldrd	r4, [sp]
   160b8:	ldr	r6, [sp, #8]
   160bc:	add	sp, sp, #12
   160c0:	pop	{pc}		; (ldr pc, [sp], #4)
   160c4:	strd	r4, [sp, #-12]!
   160c8:	ldr	r5, [r0]
   160cc:	str	lr, [sp, #8]
   160d0:	ldr	lr, [r0, #4]
   160d4:	cmp	lr, r5
   160d8:	bls	16164 <__assert_fail@plt+0x4898>
   160dc:	mov	ip, #0
   160e0:	ldr	r3, [r5]
   160e4:	cmp	r3, #0
   160e8:	bne	1610c <__assert_fail@plt+0x4840>
   160ec:	add	r5, r5, #8
   160f0:	cmp	lr, r5
   160f4:	bhi	160e0 <__assert_fail@plt+0x4814>
   160f8:	mov	r2, ip
   160fc:	ldrd	r4, [sp]
   16100:	add	sp, sp, #8
   16104:	mov	r0, r2
   16108:	pop	{pc}		; (ldr pc, [sp], #4)
   1610c:	cmp	r2, ip
   16110:	bls	160f8 <__assert_fail@plt+0x482c>
   16114:	str	r3, [r1, ip, lsl #2]
   16118:	add	r4, ip, #1
   1611c:	add	lr, r1, ip, lsl #2
   16120:	ldr	r3, [r5, #4]
   16124:	cmp	r3, #0
   16128:	beq	16158 <__assert_fail@plt+0x488c>
   1612c:	mov	ip, r4
   16130:	cmp	r2, ip
   16134:	add	ip, ip, #1
   16138:	beq	160fc <__assert_fail@plt+0x4830>
   1613c:	ldr	r4, [r3]
   16140:	str	r4, [lr, #4]!
   16144:	ldr	r3, [r3, #4]
   16148:	cmp	r3, #0
   1614c:	bne	16130 <__assert_fail@plt+0x4864>
   16150:	ldr	lr, [r0, #4]
   16154:	b	160ec <__assert_fail@plt+0x4820>
   16158:	mov	ip, r4
   1615c:	ldr	lr, [r0, #4]
   16160:	b	160ec <__assert_fail@plt+0x4820>
   16164:	mov	r2, #0
   16168:	b	160fc <__assert_fail@plt+0x4830>
   1616c:	strd	r4, [sp, #-32]!	; 0xffffffe0
   16170:	ldr	r3, [r0, #4]
   16174:	strd	r6, [sp, #8]
   16178:	strd	r8, [sp, #16]
   1617c:	ldr	r8, [r0]
   16180:	str	sl, [sp, #24]
   16184:	str	lr, [sp, #28]
   16188:	cmp	r3, r8
   1618c:	bls	16208 <__assert_fail@plt+0x493c>
   16190:	mov	r7, r2
   16194:	mov	r6, r1
   16198:	mov	r9, r0
   1619c:	mov	r5, #0
   161a0:	ldr	r0, [r8]
   161a4:	cmp	r0, #0
   161a8:	bne	161d4 <__assert_fail@plt+0x4908>
   161ac:	add	r8, r8, #8
   161b0:	cmp	r3, r8
   161b4:	bhi	161a0 <__assert_fail@plt+0x48d4>
   161b8:	mov	r0, r5
   161bc:	ldrd	r4, [sp]
   161c0:	ldrd	r6, [sp, #8]
   161c4:	ldrd	r8, [sp, #16]
   161c8:	ldr	sl, [sp, #24]
   161cc:	add	sp, sp, #28
   161d0:	pop	{pc}		; (ldr pc, [sp], #4)
   161d4:	mov	r4, r8
   161d8:	b	161e0 <__assert_fail@plt+0x4914>
   161dc:	ldr	r0, [r4]
   161e0:	mov	r1, r7
   161e4:	blx	r6
   161e8:	cmp	r0, #0
   161ec:	beq	161b8 <__assert_fail@plt+0x48ec>
   161f0:	ldr	r4, [r4, #4]
   161f4:	add	r5, r5, #1
   161f8:	cmp	r4, #0
   161fc:	bne	161dc <__assert_fail@plt+0x4910>
   16200:	ldr	r3, [r9, #4]
   16204:	b	161ac <__assert_fail@plt+0x48e0>
   16208:	mov	r5, #0
   1620c:	b	161b8 <__assert_fail@plt+0x48ec>
   16210:	ldrb	r2, [r0]
   16214:	cmp	r2, #0
   16218:	beq	16244 <__assert_fail@plt+0x4978>
   1621c:	mov	r3, #0
   16220:	rsb	r3, r3, r3, lsl #5
   16224:	add	r3, r3, r2
   16228:	ldrb	r2, [r0, #1]!
   1622c:	udiv	ip, r3, r1
   16230:	cmp	r2, #0
   16234:	mls	r3, r1, ip, r3
   16238:	bne	16220 <__assert_fail@plt+0x4954>
   1623c:	mov	r0, r3
   16240:	bx	lr
   16244:	mov	r3, r2
   16248:	mov	r0, r3
   1624c:	bx	lr
   16250:	movw	r3, #49824	; 0xc2a0
   16254:	movt	r3, #1
   16258:	strd	r4, [sp, #-8]!
   1625c:	ldrd	r4, [r3]
   16260:	ldr	r1, [r3, #16]
   16264:	ldrd	r2, [r3, #8]
   16268:	strd	r4, [r0]
   1626c:	ldrd	r4, [sp]
   16270:	add	sp, sp, #8
   16274:	strd	r2, [r0, #8]
   16278:	str	r1, [r0, #16]
   1627c:	bx	lr
   16280:	strd	r4, [sp, #-20]!	; 0xffffffec
   16284:	cmp	r2, #0
   16288:	movw	ip, #22828	; 0x592c
   1628c:	movt	ip, #1
   16290:	strd	r6, [sp, #8]
   16294:	movne	r6, r2
   16298:	str	lr, [sp, #16]
   1629c:	sub	sp, sp, #12
   162a0:	movw	lr, #22812	; 0x591c
   162a4:	movt	lr, #1
   162a8:	mov	r7, r1
   162ac:	moveq	r6, lr
   162b0:	cmp	r3, #0
   162b4:	str	r0, [sp, #4]
   162b8:	mov	r0, #40	; 0x28
   162bc:	movne	r5, r3
   162c0:	moveq	r5, ip
   162c4:	bl	1ae1c <lchmod@@Base+0x4240>
   162c8:	subs	r4, r0, #0
   162cc:	beq	16364 <__assert_fail@plt+0x4a98>
   162d0:	cmp	r7, #0
   162d4:	add	r0, r4, #20
   162d8:	beq	1637c <__assert_fail@plt+0x4ab0>
   162dc:	str	r7, [r4, #20]
   162e0:	bl	15aa4 <__assert_fail@plt+0x41d8>
   162e4:	cmp	r0, #0
   162e8:	beq	163c4 <__assert_fail@plt+0x4af8>
   162ec:	ldrb	r3, [r7, #16]
   162f0:	cmp	r3, #0
   162f4:	beq	163d4 <__assert_fail@plt+0x4b08>
   162f8:	ldr	r0, [sp, #4]
   162fc:	bl	15890 <__assert_fail@plt+0x3fc4>
   16300:	lsrs	r2, r0, #30
   16304:	movne	r7, #1
   16308:	moveq	r7, #0
   1630c:	tst	r0, #536870912	; 0x20000000
   16310:	bne	163bc <__assert_fail@plt+0x4af0>
   16314:	cmp	r7, #0
   16318:	bne	163bc <__assert_fail@plt+0x4af0>
   1631c:	cmp	r0, #0
   16320:	str	r0, [r4, #8]
   16324:	beq	163c4 <__assert_fail@plt+0x4af8>
   16328:	mov	r1, #8
   1632c:	bl	1ada8 <lchmod@@Base+0x41cc>
   16330:	cmp	r0, #0
   16334:	str	r0, [r4]
   16338:	beq	163c4 <__assert_fail@plt+0x4af8>
   1633c:	ldr	r3, [r4, #8]
   16340:	str	r7, [r4, #12]
   16344:	str	r7, [r4, #16]
   16348:	str	r6, [r4, #24]
   1634c:	str	r5, [r4, #28]
   16350:	add	r0, r0, r3, lsl #3
   16354:	ldr	r3, [sp, #32]
   16358:	str	r0, [r4, #4]
   1635c:	str	r3, [r4, #32]
   16360:	str	r7, [r4, #36]	; 0x24
   16364:	mov	r0, r4
   16368:	add	sp, sp, #12
   1636c:	ldrd	r4, [sp]
   16370:	ldrd	r6, [sp, #8]
   16374:	add	sp, sp, #16
   16378:	pop	{pc}		; (ldr pc, [sp], #4)
   1637c:	movw	r3, #49824	; 0xc2a0
   16380:	movt	r3, #1
   16384:	str	r3, [r4, #20]
   16388:	bl	15aa4 <__assert_fail@plt+0x41d8>
   1638c:	cmp	r0, #0
   16390:	beq	163c4 <__assert_fail@plt+0x4af8>
   16394:	vldr	s13, [pc, #64]	; 163dc <__assert_fail@plt+0x4b10>
   16398:	vldr	s15, [sp, #4]
   1639c:	vldr	s14, [pc, #60]	; 163e0 <__assert_fail@plt+0x4b14>
   163a0:	vcvt.f32.u32	s12, s15
   163a4:	vdiv.f32	s15, s12, s13
   163a8:	vcmpe.f32	s15, s14
   163ac:	vmrs	APSR_nzcv, fpscr
   163b0:	vcvtlt.u32.f32	s15, s15
   163b4:	vstrlt	s15, [sp, #4]
   163b8:	blt	162f8 <__assert_fail@plt+0x4a2c>
   163bc:	mov	r3, #0
   163c0:	str	r3, [r4, #8]
   163c4:	mov	r0, r4
   163c8:	mov	r4, #0
   163cc:	bl	1356c <__assert_fail@plt+0x1ca0>
   163d0:	b	16364 <__assert_fail@plt+0x4a98>
   163d4:	vldr	s13, [r7, #8]
   163d8:	b	16398 <__assert_fail@plt+0x4acc>
   163dc:	svccc	0x004ccccd
   163e0:	svcmi	0x00800000
   163e4:	strd	r4, [sp, #-24]!	; 0xffffffe8
   163e8:	mov	r5, r0
   163ec:	ldr	r2, [r0, #4]
   163f0:	strd	r6, [sp, #8]
   163f4:	ldr	r6, [r0]
   163f8:	str	r8, [sp, #16]
   163fc:	str	lr, [sp, #20]
   16400:	cmp	r6, r2
   16404:	addcc	r6, r6, #8
   16408:	movcc	r7, #0
   1640c:	bcc	16420 <__assert_fail@plt+0x4b54>
   16410:	b	16494 <__assert_fail@plt+0x4bc8>
   16414:	cmp	r2, r6
   16418:	add	r6, r6, #8
   1641c:	bls	16494 <__assert_fail@plt+0x4bc8>
   16420:	ldr	r3, [r6, #-8]
   16424:	cmp	r3, #0
   16428:	beq	16414 <__assert_fail@plt+0x4b48>
   1642c:	ldr	r4, [r6, #-4]
   16430:	ldr	r2, [r5, #32]
   16434:	cmp	r4, #0
   16438:	beq	1646c <__assert_fail@plt+0x4ba0>
   1643c:	cmp	r2, #0
   16440:	beq	16450 <__assert_fail@plt+0x4b84>
   16444:	ldr	r0, [r4]
   16448:	blx	r2
   1644c:	ldr	r2, [r5, #32]
   16450:	ldr	r3, [r4, #4]
   16454:	ldr	r1, [r5, #36]	; 0x24
   16458:	str	r7, [r4]
   1645c:	str	r1, [r4, #4]
   16460:	str	r4, [r5, #36]	; 0x24
   16464:	subs	r4, r3, #0
   16468:	bne	1643c <__assert_fail@plt+0x4b70>
   1646c:	cmp	r2, #0
   16470:	beq	1647c <__assert_fail@plt+0x4bb0>
   16474:	ldr	r0, [r6, #-8]
   16478:	blx	r2
   1647c:	str	r7, [r6, #-8]
   16480:	str	r7, [r6, #-4]
   16484:	ldr	r2, [r5, #4]
   16488:	cmp	r2, r6
   1648c:	add	r6, r6, #8
   16490:	bhi	16420 <__assert_fail@plt+0x4b54>
   16494:	mov	r3, #0
   16498:	ldrd	r6, [sp, #8]
   1649c:	ldr	r8, [sp, #16]
   164a0:	str	r3, [r5, #12]
   164a4:	str	r3, [r5, #16]
   164a8:	ldrd	r4, [sp]
   164ac:	add	sp, sp, #20
   164b0:	pop	{pc}		; (ldr pc, [sp], #4)
   164b4:	strd	r4, [sp, #-16]!
   164b8:	ldr	r2, [r0, #32]
   164bc:	ldr	r5, [r0]
   164c0:	ldr	r3, [r0, #4]
   164c4:	cmp	r2, #0
   164c8:	str	r6, [sp, #8]
   164cc:	mov	r6, r0
   164d0:	str	lr, [sp, #12]
   164d4:	beq	1653c <__assert_fail@plt+0x4c70>
   164d8:	ldr	r2, [r0, #16]
   164dc:	cmp	r2, #0
   164e0:	beq	1653c <__assert_fail@plt+0x4c70>
   164e4:	cmp	r5, r3
   164e8:	bcc	164fc <__assert_fail@plt+0x4c30>
   164ec:	b	16570 <__assert_fail@plt+0x4ca4>
   164f0:	add	r5, r5, #8
   164f4:	cmp	r3, r5
   164f8:	bls	16538 <__assert_fail@plt+0x4c6c>
   164fc:	ldr	r0, [r5]
   16500:	cmp	r0, #0
   16504:	beq	164f0 <__assert_fail@plt+0x4c24>
   16508:	mov	r4, r5
   1650c:	b	16514 <__assert_fail@plt+0x4c48>
   16510:	ldr	r0, [r4]
   16514:	ldr	r3, [r6, #32]
   16518:	blx	r3
   1651c:	ldr	r4, [r4, #4]
   16520:	cmp	r4, #0
   16524:	bne	16510 <__assert_fail@plt+0x4c44>
   16528:	ldr	r3, [r6, #4]
   1652c:	add	r5, r5, #8
   16530:	cmp	r3, r5
   16534:	bhi	164fc <__assert_fail@plt+0x4c30>
   16538:	ldr	r5, [r6]
   1653c:	cmp	r5, r3
   16540:	bcs	16570 <__assert_fail@plt+0x4ca4>
   16544:	ldr	r0, [r5, #4]
   16548:	cmp	r0, #0
   1654c:	beq	16564 <__assert_fail@plt+0x4c98>
   16550:	ldr	r4, [r0, #4]
   16554:	bl	1356c <__assert_fail@plt+0x1ca0>
   16558:	subs	r0, r4, #0
   1655c:	bne	16550 <__assert_fail@plt+0x4c84>
   16560:	ldr	r3, [r6, #4]
   16564:	add	r5, r5, #8
   16568:	cmp	r3, r5
   1656c:	bhi	16544 <__assert_fail@plt+0x4c78>
   16570:	ldr	r0, [r6, #36]	; 0x24
   16574:	cmp	r0, #0
   16578:	beq	1658c <__assert_fail@plt+0x4cc0>
   1657c:	ldr	r4, [r0, #4]
   16580:	bl	1356c <__assert_fail@plt+0x1ca0>
   16584:	subs	r0, r4, #0
   16588:	bne	1657c <__assert_fail@plt+0x4cb0>
   1658c:	ldr	r0, [r6]
   16590:	bl	1356c <__assert_fail@plt+0x1ca0>
   16594:	mov	r0, r6
   16598:	ldrd	r4, [sp]
   1659c:	ldr	r6, [sp, #8]
   165a0:	ldr	lr, [sp, #12]
   165a4:	add	sp, sp, #16
   165a8:	b	1356c <__assert_fail@plt+0x1ca0>
   165ac:	ldr	r3, [r0, #20]
   165b0:	strd	r4, [sp, #-20]!	; 0xffffffec
   165b4:	ldrb	r2, [r3, #16]
   165b8:	strd	r6, [sp, #8]
   165bc:	mov	r6, r0
   165c0:	str	lr, [sp, #16]
   165c4:	sub	sp, sp, #52	; 0x34
   165c8:	str	r1, [sp, #4]
   165cc:	cmp	r2, #0
   165d0:	bne	165fc <__assert_fail@plt+0x4d30>
   165d4:	vmov	s15, r1
   165d8:	vldr	s13, [r3, #8]
   165dc:	vldr	s14, [pc, #340]	; 16738 <__assert_fail@plt+0x4e6c>
   165e0:	vcvt.f32.u32	s12, s15
   165e4:	vdiv.f32	s15, s12, s13
   165e8:	vcmpe.f32	s15, s14
   165ec:	vmrs	APSR_nzcv, fpscr
   165f0:	vcvtlt.u32.f32	s15, s15
   165f4:	vstrlt	s15, [sp, #4]
   165f8:	bge	1662c <__assert_fail@plt+0x4d60>
   165fc:	ldr	r0, [sp, #4]
   16600:	bl	15890 <__assert_fail@plt+0x3fc4>
   16604:	lsrs	r3, r0, #30
   16608:	mov	r5, r0
   1660c:	movne	r4, #1
   16610:	moveq	r4, #0
   16614:	tst	r0, #536870912	; 0x20000000
   16618:	movne	r4, #1
   1661c:	cmp	r0, #0
   16620:	moveq	r4, #1
   16624:	cmp	r4, #0
   16628:	beq	16648 <__assert_fail@plt+0x4d7c>
   1662c:	mov	r4, #0
   16630:	mov	r0, r4
   16634:	add	sp, sp, #52	; 0x34
   16638:	ldrd	r4, [sp]
   1663c:	ldrd	r6, [sp, #8]
   16640:	add	sp, sp, #16
   16644:	pop	{pc}		; (ldr pc, [sp], #4)
   16648:	ldr	r3, [r6, #8]
   1664c:	cmp	r3, r0
   16650:	beq	16700 <__assert_fail@plt+0x4e34>
   16654:	mov	r1, #8
   16658:	bl	1ada8 <lchmod@@Base+0x41cc>
   1665c:	cmp	r0, #0
   16660:	str	r0, [sp, #8]
   16664:	beq	1662c <__assert_fail@plt+0x4d60>
   16668:	add	r3, r0, r5, lsl #3
   1666c:	ldr	r7, [r6, #20]
   16670:	mov	r2, r4
   16674:	add	r0, sp, #8
   16678:	mov	r1, r6
   1667c:	ldr	lr, [r6, #28]
   16680:	str	r3, [sp, #12]
   16684:	str	r5, [sp, #16]
   16688:	ldr	r5, [r6, #24]
   1668c:	str	r4, [sp, #20]
   16690:	ldr	ip, [r6, #32]
   16694:	str	r4, [sp, #24]
   16698:	ldr	r3, [r6, #36]	; 0x24
   1669c:	str	r7, [sp, #28]
   166a0:	str	r5, [sp, #32]
   166a4:	str	lr, [sp, #36]	; 0x24
   166a8:	str	ip, [sp, #40]	; 0x28
   166ac:	str	r3, [sp, #44]	; 0x2c
   166b0:	bl	15b58 <__assert_fail@plt+0x428c>
   166b4:	subs	r4, r0, #0
   166b8:	bne	16708 <__assert_fail@plt+0x4e3c>
   166bc:	ldr	r3, [sp, #44]	; 0x2c
   166c0:	mov	r2, #1
   166c4:	add	r1, sp, #8
   166c8:	mov	r0, r6
   166cc:	str	r3, [r6, #36]	; 0x24
   166d0:	bl	15b58 <__assert_fail@plt+0x428c>
   166d4:	cmp	r0, #0
   166d8:	beq	16734 <__assert_fail@plt+0x4e68>
   166dc:	add	r1, sp, #8
   166e0:	mov	r0, r6
   166e4:	mov	r2, r4
   166e8:	bl	15b58 <__assert_fail@plt+0x428c>
   166ec:	cmp	r0, #0
   166f0:	beq	16734 <__assert_fail@plt+0x4e68>
   166f4:	ldr	r0, [sp, #8]
   166f8:	bl	1356c <__assert_fail@plt+0x1ca0>
   166fc:	b	16630 <__assert_fail@plt+0x4d64>
   16700:	mov	r4, #1
   16704:	b	16630 <__assert_fail@plt+0x4d64>
   16708:	ldr	r0, [r6]
   1670c:	bl	1356c <__assert_fail@plt+0x1ca0>
   16710:	ldrd	r2, [sp, #8]
   16714:	ldr	r1, [sp, #16]
   16718:	strd	r2, [r6]
   1671c:	ldr	r2, [sp, #20]
   16720:	str	r1, [r6, #8]
   16724:	ldr	r3, [sp, #44]	; 0x2c
   16728:	str	r2, [r6, #12]
   1672c:	str	r3, [r6, #36]	; 0x24
   16730:	b	16630 <__assert_fail@plt+0x4d64>
   16734:	bl	11878 <abort@plt>
   16738:	svcmi	0x00800000
   1673c:	strd	r4, [sp, #-16]!
   16740:	str	r6, [sp, #8]
   16744:	subs	r6, r1, #0
   16748:	str	lr, [sp, #12]
   1674c:	sub	sp, sp, #8
   16750:	beq	168d0 <__assert_fail@plt+0x5004>
   16754:	mov	r3, #0
   16758:	mov	r5, r2
   1675c:	add	r2, sp, #4
   16760:	mov	r4, r0
   16764:	bl	1597c <__assert_fail@plt+0x40b0>
   16768:	subs	r3, r0, #0
   1676c:	beq	16798 <__assert_fail@plt+0x4ecc>
   16770:	cmp	r5, #0
   16774:	moveq	r0, r5
   16778:	beq	16784 <__assert_fail@plt+0x4eb8>
   1677c:	mov	r0, #0
   16780:	str	r3, [r5]
   16784:	add	sp, sp, #8
   16788:	ldrd	r4, [sp]
   1678c:	ldr	r6, [sp, #8]
   16790:	add	sp, sp, #12
   16794:	pop	{pc}		; (ldr pc, [sp], #4)
   16798:	vldr	s15, [r4, #8]
   1679c:	vldr	s14, [r4, #12]
   167a0:	ldr	r3, [r4, #20]
   167a4:	vcvt.f32.u32	s15, s15
   167a8:	vcvt.f32.u32	s14, s14
   167ac:	vldr	s13, [r3, #8]
   167b0:	vmul.f32	s15, s15, s13
   167b4:	vcmpe.f32	s14, s15
   167b8:	vmrs	APSR_nzcv, fpscr
   167bc:	bgt	16804 <__assert_fail@plt+0x4f38>
   167c0:	ldr	r2, [sp, #4]
   167c4:	ldr	r3, [r2]
   167c8:	cmp	r3, #0
   167cc:	beq	16860 <__assert_fail@plt+0x4f94>
   167d0:	ldr	r3, [r4, #36]	; 0x24
   167d4:	cmp	r3, #0
   167d8:	beq	16884 <__assert_fail@plt+0x4fb8>
   167dc:	ldr	r1, [r3, #4]
   167e0:	str	r1, [r4, #36]	; 0x24
   167e4:	ldr	r1, [r4, #16]
   167e8:	mov	r0, #1
   167ec:	ldr	ip, [r2, #4]
   167f0:	add	r1, r1, r0
   167f4:	stm	r3, {r6, ip}
   167f8:	str	r3, [r2, #4]
   167fc:	str	r1, [r4, #16]
   16800:	b	16784 <__assert_fail@plt+0x4eb8>
   16804:	add	r0, r4, #20
   16808:	bl	15aa4 <__assert_fail@plt+0x41d8>
   1680c:	vldr	s15, [r4, #8]
   16810:	vldr	s14, [r4, #12]
   16814:	ldr	r3, [r4, #20]
   16818:	vcvt.f32.u32	s15, s15
   1681c:	vcvt.f32.u32	s14, s14
   16820:	vldr	s13, [r3, #8]
   16824:	vmul.f32	s12, s13, s15
   16828:	vcmpe.f32	s14, s12
   1682c:	vmrs	APSR_nzcv, fpscr
   16830:	ble	167c0 <__assert_fail@plt+0x4ef4>
   16834:	vldr	s14, [r3, #12]
   16838:	ldrb	r2, [r3, #16]
   1683c:	vmul.f32	s15, s15, s14
   16840:	vldr	s14, [pc, #140]	; 168d4 <__assert_fail@plt+0x5008>
   16844:	cmp	r2, #0
   16848:	vmuleq.f32	s15, s15, s13
   1684c:	vcmpe.f32	s15, s14
   16850:	vmrs	APSR_nzcv, fpscr
   16854:	blt	1689c <__assert_fail@plt+0x4fd0>
   16858:	mvn	r0, #0
   1685c:	b	16784 <__assert_fail@plt+0x4eb8>
   16860:	ldr	r1, [r4, #12]
   16864:	mov	r0, #1
   16868:	ldr	r3, [r4, #16]
   1686c:	str	r6, [r2]
   16870:	add	r2, r1, r0
   16874:	add	r3, r3, r0
   16878:	str	r2, [r4, #12]
   1687c:	str	r3, [r4, #16]
   16880:	b	16784 <__assert_fail@plt+0x4eb8>
   16884:	mov	r0, #8
   16888:	bl	1ae1c <lchmod@@Base+0x4240>
   1688c:	subs	r3, r0, #0
   16890:	beq	16858 <__assert_fail@plt+0x4f8c>
   16894:	ldr	r2, [sp, #4]
   16898:	b	167e4 <__assert_fail@plt+0x4f18>
   1689c:	vcvt.u32.f32	s15, s15
   168a0:	mov	r0, r4
   168a4:	vmov	r1, s15
   168a8:	bl	165ac <__assert_fail@plt+0x4ce0>
   168ac:	cmp	r0, #0
   168b0:	beq	16858 <__assert_fail@plt+0x4f8c>
   168b4:	add	r2, sp, #4
   168b8:	mov	r3, #0
   168bc:	mov	r1, r6
   168c0:	mov	r0, r4
   168c4:	bl	1597c <__assert_fail@plt+0x40b0>
   168c8:	cmp	r0, #0
   168cc:	beq	167c0 <__assert_fail@plt+0x4ef4>
   168d0:	bl	11878 <abort@plt>
   168d4:	svcmi	0x00800000
   168d8:	str	r4, [sp, #-8]!
   168dc:	mov	r4, r1
   168e0:	str	lr, [sp, #4]
   168e4:	sub	sp, sp, #8
   168e8:	add	r2, sp, #4
   168ec:	bl	1673c <__assert_fail@plt+0x4e70>
   168f0:	cmn	r0, #1
   168f4:	moveq	r0, #0
   168f8:	beq	16908 <__assert_fail@plt+0x503c>
   168fc:	cmp	r0, #0
   16900:	ldreq	r0, [sp, #4]
   16904:	movne	r0, r4
   16908:	add	sp, sp, #8
   1690c:	ldr	r4, [sp]
   16910:	add	sp, sp, #4
   16914:	pop	{pc}		; (ldr pc, [sp], #4)
   16918:	strd	r4, [sp, #-16]!
   1691c:	mov	r3, #1
   16920:	mov	r4, r0
   16924:	str	r6, [sp, #8]
   16928:	str	lr, [sp, #12]
   1692c:	sub	sp, sp, #8
   16930:	add	r2, sp, #4
   16934:	bl	1597c <__assert_fail@plt+0x40b0>
   16938:	subs	r5, r0, #0
   1693c:	beq	1695c <__assert_fail@plt+0x5090>
   16940:	ldr	r2, [sp, #4]
   16944:	ldr	r3, [r4, #16]
   16948:	ldr	r2, [r2]
   1694c:	sub	r3, r3, #1
   16950:	str	r3, [r4, #16]
   16954:	cmp	r2, #0
   16958:	beq	16974 <__assert_fail@plt+0x50a8>
   1695c:	mov	r0, r5
   16960:	add	sp, sp, #8
   16964:	ldrd	r4, [sp]
   16968:	ldr	r6, [sp, #8]
   1696c:	add	sp, sp, #12
   16970:	pop	{pc}		; (ldr pc, [sp], #4)
   16974:	vldr	s15, [r4, #8]
   16978:	ldr	r3, [r4, #12]
   1697c:	ldr	r2, [r4, #20]
   16980:	vcvt.f32.u32	s15, s15
   16984:	sub	r3, r3, #1
   16988:	vmov	s14, r3
   1698c:	vldr	s13, [r2]
   16990:	str	r3, [r4, #12]
   16994:	vmul.f32	s15, s15, s13
   16998:	vcvt.f32.u32	s14, s14
   1699c:	vcmpe.f32	s14, s15
   169a0:	vmrs	APSR_nzcv, fpscr
   169a4:	bpl	1695c <__assert_fail@plt+0x5090>
   169a8:	add	r0, r4, #20
   169ac:	bl	15aa4 <__assert_fail@plt+0x41d8>
   169b0:	vldr	s15, [r4, #8]
   169b4:	vldr	s13, [r4, #12]
   169b8:	ldr	r3, [r4, #20]
   169bc:	vcvt.f32.u32	s15, s15
   169c0:	vcvt.f32.u32	s13, s13
   169c4:	vldr	s14, [r3]
   169c8:	vmul.f32	s14, s15, s14
   169cc:	vcmpe.f32	s13, s14
   169d0:	vmrs	APSR_nzcv, fpscr
   169d4:	bpl	1695c <__assert_fail@plt+0x5090>
   169d8:	ldrb	r2, [r3, #16]
   169dc:	mov	r0, r4
   169e0:	vldr	s14, [r3, #4]
   169e4:	cmp	r2, #0
   169e8:	vmul.f32	s15, s15, s14
   169ec:	vldreq	s14, [r3, #8]
   169f0:	vmuleq.f32	s15, s15, s14
   169f4:	vcvt.u32.f32	s15, s15
   169f8:	vmov	r1, s15
   169fc:	bl	165ac <__assert_fail@plt+0x4ce0>
   16a00:	cmp	r0, #0
   16a04:	bne	1695c <__assert_fail@plt+0x5090>
   16a08:	ldr	r0, [r4, #36]	; 0x24
   16a0c:	cmp	r0, #0
   16a10:	beq	16a24 <__assert_fail@plt+0x5158>
   16a14:	ldr	r6, [r0, #4]
   16a18:	bl	1356c <__assert_fail@plt+0x1ca0>
   16a1c:	subs	r0, r6, #0
   16a20:	bne	16a14 <__assert_fail@plt+0x5148>
   16a24:	mov	r3, #0
   16a28:	str	r3, [r4, #36]	; 0x24
   16a2c:	b	1695c <__assert_fail@plt+0x5090>
   16a30:	b	16918 <__assert_fail@plt+0x504c>
   16a34:	strd	r4, [sp, #-16]!
   16a38:	mov	r4, r0
   16a3c:	mov	r5, r1
   16a40:	ldr	r0, [r0]
   16a44:	str	r6, [sp, #8]
   16a48:	str	lr, [sp, #12]
   16a4c:	bl	1b51c <lchmod@@Base+0x4940>
   16a50:	ldr	ip, [r4, #8]
   16a54:	mov	r2, r5
   16a58:	mov	r3, #0
   16a5c:	ldr	r1, [r4, #12]
   16a60:	eor	r0, r0, ip
   16a64:	bl	1b76c <lchmod@@Base+0x4b90>
   16a68:	ldrd	r4, [sp]
   16a6c:	mov	r0, r2
   16a70:	ldr	r6, [sp, #8]
   16a74:	add	sp, sp, #12
   16a78:	pop	{pc}		; (ldr pc, [sp], #4)
   16a7c:	strd	r4, [sp, #-16]!
   16a80:	ldrd	r2, [r1, #8]
   16a84:	ldrd	r4, [r0, #8]
   16a88:	str	r6, [sp, #8]
   16a8c:	str	lr, [sp, #12]
   16a90:	cmp	r5, r3
   16a94:	cmpeq	r4, r2
   16a98:	beq	16ab0 <__assert_fail@plt+0x51e4>
   16a9c:	ldrd	r4, [sp]
   16aa0:	mov	r0, #0
   16aa4:	ldr	r6, [sp, #8]
   16aa8:	add	sp, sp, #12
   16aac:	pop	{pc}		; (ldr pc, [sp], #4)
   16ab0:	ldrd	r4, [r0, #16]
   16ab4:	ldrd	r2, [r1, #16]
   16ab8:	cmp	r5, r3
   16abc:	cmpeq	r4, r2
   16ac0:	bne	16a9c <__assert_fail@plt+0x51d0>
   16ac4:	ldr	r0, [r0]
   16ac8:	ldr	r1, [r1]
   16acc:	bl	114d0 <strcmp@plt>
   16ad0:	clz	r0, r0
   16ad4:	ldrd	r4, [sp]
   16ad8:	lsr	r0, r0, #5
   16adc:	ldr	r6, [sp, #8]
   16ae0:	add	sp, sp, #12
   16ae4:	pop	{pc}		; (ldr pc, [sp], #4)
   16ae8:	str	r4, [sp, #-8]!
   16aec:	mov	r4, r0
   16af0:	ldr	r0, [r0]
   16af4:	str	lr, [sp, #4]
   16af8:	bl	1356c <__assert_fail@plt+0x1ca0>
   16afc:	mov	r0, r4
   16b00:	ldr	r4, [sp]
   16b04:	ldr	lr, [sp, #4]
   16b08:	add	sp, sp, #8
   16b0c:	b	1356c <__assert_fail@plt+0x1ca0>
   16b10:	mov	r3, #0
   16b14:	mov	r2, #1
   16b18:	str	r1, [r0]
   16b1c:	str	r1, [r0, #4]
   16b20:	str	r1, [r0, #8]
   16b24:	str	r1, [r0, #12]
   16b28:	str	r1, [r0, #16]
   16b2c:	str	r3, [r0, #20]
   16b30:	str	r3, [r0, #24]
   16b34:	strb	r2, [r0, #28]
   16b38:	bx	lr
   16b3c:	ldrb	r0, [r0, #28]
   16b40:	bx	lr
   16b44:	ldrb	ip, [r0, #28]
   16b48:	mov	r2, r0
   16b4c:	ldr	r3, [r0, #20]
   16b50:	eor	ip, ip, #1
   16b54:	add	r3, ip, r3
   16b58:	and	r3, r3, #3
   16b5c:	ldr	r0, [r0, r3, lsl #2]
   16b60:	str	r1, [r2, r3, lsl #2]
   16b64:	ldr	r1, [r2, #24]
   16b68:	str	r3, [r2, #20]
   16b6c:	cmp	r1, r3
   16b70:	bne	16b80 <__assert_fail@plt+0x52b4>
   16b74:	add	ip, ip, r1
   16b78:	and	ip, ip, #3
   16b7c:	str	ip, [r2, #24]
   16b80:	mov	r3, #0
   16b84:	strb	r3, [r2, #28]
   16b88:	bx	lr
   16b8c:	ldrb	r3, [r0, #28]
   16b90:	cmp	r3, #0
   16b94:	bne	16bd0 <__assert_fail@plt+0x5304>
   16b98:	ldr	r1, [r0, #16]
   16b9c:	ldr	r3, [r0, #20]
   16ba0:	ldr	r2, [r0, r3, lsl #2]
   16ba4:	str	r1, [r0, r3, lsl #2]
   16ba8:	ldr	r1, [r0, #24]
   16bac:	cmp	r3, r1
   16bb0:	moveq	r3, #1
   16bb4:	strbeq	r3, [r0, #28]
   16bb8:	beq	16bc8 <__assert_fail@plt+0x52fc>
   16bbc:	add	r3, r3, #3
   16bc0:	and	r3, r3, #3
   16bc4:	str	r3, [r0, #20]
   16bc8:	mov	r0, r2
   16bcc:	bx	lr
   16bd0:	str	r4, [sp, #-8]!
   16bd4:	str	lr, [sp, #4]
   16bd8:	bl	11878 <abort@plt>

00016bdc <lchmod@@Base>:
   16bdc:	strd	r4, [sp, #-28]!	; 0xffffffe4
   16be0:	mov	r5, r1
   16be4:	mov	r1, #2654208	; 0x288000
   16be8:	strd	r6, [sp, #8]
   16bec:	strd	r8, [sp, #16]
   16bf0:	mov	r9, r0
   16bf4:	str	lr, [sp, #24]
   16bf8:	sub	sp, sp, #148	; 0x94
   16bfc:	bl	11644 <open64@plt>
   16c00:	subs	r4, r0, #0
   16c04:	blt	16ca0 <lchmod@@Base+0xc4>
   16c08:	mov	r0, #4096	; 0x1000
   16c0c:	add	r3, sp, #40	; 0x28
   16c10:	mov	r1, r4
   16c14:	movw	r2, #49924	; 0xc304
   16c18:	movt	r2, #1
   16c1c:	str	r0, [sp]
   16c20:	mov	r0, #3
   16c24:	bl	115c0 <__fxstatat64@plt>
   16c28:	mov	r6, r0
   16c2c:	bl	1171c <__errno_location@plt>
   16c30:	cmp	r6, #0
   16c34:	mov	r7, r0
   16c38:	bne	16ce8 <lchmod@@Base+0x10c>
   16c3c:	ldr	r3, [sp, #56]	; 0x38
   16c40:	and	r3, r3, #61440	; 0xf000
   16c44:	cmp	r3, #40960	; 0xa000
   16c48:	beq	16cd0 <lchmod@@Base+0xf4>
   16c4c:	mov	r2, #26
   16c50:	mov	r1, #1
   16c54:	str	r4, [sp]
   16c58:	movw	r3, #49952	; 0xc320
   16c5c:	movt	r3, #1
   16c60:	add	r0, sp, #12
   16c64:	bl	11728 <__sprintf_chk@plt>
   16c68:	mov	r1, r5
   16c6c:	add	r0, sp, #12
   16c70:	bl	11848 <chmod@plt>
   16c74:	mov	r6, r0
   16c78:	mov	r0, r4
   16c7c:	ldr	r8, [r7]
   16c80:	bl	11884 <close@plt>
   16c84:	cmp	r6, #0
   16c88:	moveq	r4, r6
   16c8c:	beq	16ca0 <lchmod@@Base+0xc4>
   16c90:	cmp	r8, #2
   16c94:	beq	16cbc <lchmod@@Base+0xe0>
   16c98:	mov	r4, r6
   16c9c:	str	r8, [r7]
   16ca0:	mov	r0, r4
   16ca4:	add	sp, sp, #148	; 0x94
   16ca8:	ldrd	r4, [sp]
   16cac:	ldrd	r6, [sp, #8]
   16cb0:	ldrd	r8, [sp, #16]
   16cb4:	add	sp, sp, #24
   16cb8:	pop	{pc}		; (ldr pc, [sp], #4)
   16cbc:	mov	r1, r5
   16cc0:	mov	r0, r9
   16cc4:	bl	11848 <chmod@plt>
   16cc8:	mov	r4, r0
   16ccc:	b	16ca0 <lchmod@@Base+0xc4>
   16cd0:	mov	r0, r4
   16cd4:	mvn	r4, #0
   16cd8:	bl	11884 <close@plt>
   16cdc:	mov	r3, #95	; 0x5f
   16ce0:	str	r3, [r7]
   16ce4:	b	16ca0 <lchmod@@Base+0xc4>
   16ce8:	ldr	r5, [r7]
   16cec:	mov	r0, r4
   16cf0:	mvn	r4, #0
   16cf4:	bl	11884 <close@plt>
   16cf8:	str	r5, [r7]
   16cfc:	b	16ca0 <lchmod@@Base+0xc4>
   16d00:	strd	r4, [sp, #-36]!	; 0xffffffdc
   16d04:	mov	r4, r0
   16d08:	strd	r6, [sp, #8]
   16d0c:	strd	r8, [sp, #16]
   16d10:	strd	sl, [sp, #24]
   16d14:	str	lr, [sp, #32]
   16d18:	sub	sp, sp, #4
   16d1c:	ldrb	r3, [r0]
   16d20:	sub	r2, r3, #48	; 0x30
   16d24:	cmp	r2, #7
   16d28:	bls	16e74 <lchmod@@Base+0x298>
   16d2c:	cmp	r3, #0
   16d30:	moveq	r0, #1
   16d34:	beq	16d64 <lchmod@@Base+0x188>
   16d38:	mov	r2, r4
   16d3c:	mov	r0, #1
   16d40:	and	r1, r3, #239	; 0xef
   16d44:	cmp	r3, #43	; 0x2b
   16d48:	cmpne	r1, #45	; 0x2d
   16d4c:	ldrb	r3, [r2, #1]!
   16d50:	moveq	r1, #1
   16d54:	movne	r1, #0
   16d58:	add	r0, r0, r1
   16d5c:	cmp	r3, #0
   16d60:	bne	16d40 <lchmod@@Base+0x164>
   16d64:	mov	r1, #16
   16d68:	movw	sl, #519	; 0x207
   16d6c:	bl	1a01c <lchmod@@Base+0x3440>
   16d70:	mov	r7, #3
   16d74:	mov	lr, #0
   16d78:	mov	r5, #0
   16d7c:	ldrb	r1, [r4]
   16d80:	mov	r2, r4
   16d84:	add	r4, r4, #1
   16d88:	cmp	r1, #97	; 0x61
   16d8c:	beq	17018 <lchmod@@Base+0x43c>
   16d90:	bls	16dd0 <lchmod@@Base+0x1f4>
   16d94:	cmp	r1, #111	; 0x6f
   16d98:	beq	17010 <lchmod@@Base+0x434>
   16d9c:	cmp	r1, #117	; 0x75
   16da0:	beq	17020 <lchmod@@Base+0x444>
   16da4:	cmp	r1, #103	; 0x67
   16da8:	beq	17028 <lchmod@@Base+0x44c>
   16dac:	bl	1356c <__assert_fail@plt+0x1ca0>
   16db0:	mov	r0, #0
   16db4:	add	sp, sp, #4
   16db8:	ldrd	r4, [sp]
   16dbc:	ldrd	r6, [sp, #8]
   16dc0:	ldrd	r8, [sp, #16]
   16dc4:	ldrd	sl, [sp, #24]
   16dc8:	add	sp, sp, #32
   16dcc:	pop	{pc}		; (ldr pc, [sp], #4)
   16dd0:	cmp	r1, #45	; 0x2d
   16dd4:	beq	16de8 <lchmod@@Base+0x20c>
   16dd8:	cmp	r1, #61	; 0x3d
   16ddc:	beq	16de8 <lchmod@@Base+0x20c>
   16de0:	cmp	r1, #43	; 0x2b
   16de4:	bne	16dac <lchmod@@Base+0x1d0>
   16de8:	add	r6, lr, #1
   16dec:	mov	r9, #1
   16df0:	add	lr, r0, lr, lsl #4
   16df4:	movw	r8, #4095	; 0xfff
   16df8:	b	16e4c <lchmod@@Base+0x270>
   16dfc:	cmp	r3, #117	; 0x75
   16e00:	addeq	r3, r2, #2
   16e04:	moveq	r4, #448	; 0x1c0
   16e08:	bne	16f18 <lchmod@@Base+0x33c>
   16e0c:	strb	r1, [lr]
   16e10:	ldrb	r1, [r2, #2]
   16e14:	mov	r2, r3
   16e18:	strb	r7, [lr, #1]
   16e1c:	str	r5, [lr, #4]
   16e20:	str	r4, [lr, #8]
   16e24:	cmp	r5, #0
   16e28:	andne	r4, r4, r5
   16e2c:	and	r3, r1, #239	; 0xef
   16e30:	add	lr, lr, #16
   16e34:	str	r4, [lr, #-4]
   16e38:	cmp	r1, #43	; 0x2b
   16e3c:	cmpne	r3, #45	; 0x2d
   16e40:	add	r3, r6, #1
   16e44:	bne	1707c <lchmod@@Base+0x4a0>
   16e48:	mov	r6, r3
   16e4c:	ldrb	r3, [r2, #1]
   16e50:	add	ip, r2, #1
   16e54:	cmp	r3, #103	; 0x67
   16e58:	beq	17004 <lchmod@@Base+0x428>
   16e5c:	bls	16eac <lchmod@@Base+0x2d0>
   16e60:	cmp	r3, #111	; 0x6f
   16e64:	bne	16dfc <lchmod@@Base+0x220>
   16e68:	add	r3, r2, #2
   16e6c:	mov	r4, #7
   16e70:	b	16e0c <lchmod@@Base+0x230>
   16e74:	add	r1, r0, #1
   16e78:	mov	r5, #0
   16e7c:	b	16e90 <lchmod@@Base+0x2b4>
   16e80:	ldrb	r3, [r1], #1
   16e84:	sub	r0, r3, #48	; 0x30
   16e88:	cmp	r0, #7
   16e8c:	bhi	17034 <lchmod@@Base+0x458>
   16e90:	add	r5, r3, r5, lsl #3
   16e94:	mov	r2, r1
   16e98:	sub	r5, r5, #48	; 0x30
   16e9c:	cmp	r5, #4096	; 0x1000
   16ea0:	bcc	16e80 <lchmod@@Base+0x2a4>
   16ea4:	mov	r0, #0
   16ea8:	b	16db4 <lchmod@@Base+0x1d8>
   16eac:	sub	r4, r3, #48	; 0x30
   16eb0:	cmp	r4, #7
   16eb4:	addls	r4, r2, #2
   16eb8:	movls	ip, #0
   16ebc:	bhi	16f18 <lchmod@@Base+0x33c>
   16ec0:	add	ip, r3, ip, lsl #3
   16ec4:	mov	r2, r4
   16ec8:	sub	ip, ip, #48	; 0x30
   16ecc:	cmp	ip, #4096	; 0x1000
   16ed0:	bcs	16dac <lchmod@@Base+0x1d0>
   16ed4:	ldrb	r3, [r4]
   16ed8:	add	r4, r4, #1
   16edc:	sub	fp, r3, #48	; 0x30
   16ee0:	cmp	fp, #7
   16ee4:	bls	16ec0 <lchmod@@Base+0x2e4>
   16ee8:	cmp	r5, #0
   16eec:	bne	16dac <lchmod@@Base+0x1d0>
   16ef0:	cmp	r3, #0
   16ef4:	cmpne	r3, #44	; 0x2c
   16ef8:	bne	16dac <lchmod@@Base+0x1d0>
   16efc:	movw	r5, #4095	; 0xfff
   16f00:	strb	r1, [lr]
   16f04:	mov	r1, r3
   16f08:	mov	r4, r5
   16f0c:	strb	r9, [lr, #1]
   16f10:	stmib	lr, {r8, ip}
   16f14:	b	16e2c <lchmod@@Base+0x250>
   16f18:	mov	fp, #1
   16f1c:	mov	r4, #0
   16f20:	sub	r2, r3, #88	; 0x58
   16f24:	cmp	r2, #32
   16f28:	ldrls	pc, [pc, r2, lsl #2]
   16f2c:	b	16fe8 <lchmod@@Base+0x40c>
   16f30:			; <UNDEFINED> instruction: 0x00016fb4
   16f34:	andeq	r6, r1, r8, ror #31
   16f38:	andeq	r6, r1, r8, ror #31
   16f3c:	andeq	r6, r1, r8, ror #31
   16f40:	andeq	r6, r1, r8, ror #31
   16f44:	andeq	r6, r1, r8, ror #31
   16f48:	andeq	r6, r1, r8, ror #31
   16f4c:	andeq	r6, r1, r8, ror #31
   16f50:	andeq	r6, r1, r8, ror #31
   16f54:	andeq	r6, r1, r8, ror #31
   16f58:	andeq	r6, r1, r8, ror #31
   16f5c:	andeq	r6, r1, r8, ror #31
   16f60:	andeq	r6, r1, r8, ror #31
   16f64:	andeq	r6, r1, r8, ror #31
   16f68:	andeq	r6, r1, r8, ror #31
   16f6c:	andeq	r6, r1, r8, ror #31
   16f70:	andeq	r6, r1, r8, ror #31
   16f74:	andeq	r6, r1, r8, ror #31
   16f78:	andeq	r6, r1, r8, ror #31
   16f7c:	andeq	r6, r1, r8, ror #31
   16f80:	andeq	r6, r1, r8, ror #31
   16f84:	andeq	r6, r1, r8, ror #31
   16f88:	andeq	r6, r1, r8, ror #31
   16f8c:	andeq	r6, r1, r8, ror #31
   16f90:	andeq	r6, r1, r8, ror #31
   16f94:	andeq	r6, r1, r8, ror #31
   16f98:	andeq	r6, r1, r0, ror #31
   16f9c:	ldrdeq	r6, [r1], -r8
   16fa0:	ldrdeq	r6, [r1], -r0
   16fa4:	andeq	r6, r1, r8, ror #31
   16fa8:	andeq	r6, r1, r8, ror #31
   16fac:	andeq	r6, r1, r8, asr #31
   16fb0:	andeq	r6, r1, r0, asr #31
   16fb4:	mov	fp, #2
   16fb8:	ldrb	r3, [ip, #1]!
   16fbc:	b	16f20 <lchmod@@Base+0x344>
   16fc0:	orr	r4, r4, #73	; 0x49
   16fc4:	b	16fb8 <lchmod@@Base+0x3dc>
   16fc8:	orr	r4, r4, #146	; 0x92
   16fcc:	b	16fb8 <lchmod@@Base+0x3dc>
   16fd0:	orr	r4, r4, #512	; 0x200
   16fd4:	b	16fb8 <lchmod@@Base+0x3dc>
   16fd8:	orr	r4, r4, #3072	; 0xc00
   16fdc:	b	16fb8 <lchmod@@Base+0x3dc>
   16fe0:	orr	r4, r4, #292	; 0x124
   16fe4:	b	16fb8 <lchmod@@Base+0x3dc>
   16fe8:	mov	r2, ip
   16fec:	strb	r1, [lr]
   16ff0:	mov	r1, r3
   16ff4:	strb	fp, [lr, #1]
   16ff8:	str	r5, [lr, #4]
   16ffc:	str	r4, [lr, #8]
   17000:	b	16e24 <lchmod@@Base+0x248>
   17004:	add	r3, r2, #2
   17008:	mov	r4, #56	; 0x38
   1700c:	b	16e0c <lchmod@@Base+0x230>
   17010:	orr	r5, r5, sl
   17014:	b	16d7c <lchmod@@Base+0x1a0>
   17018:	movw	r5, #4095	; 0xfff
   1701c:	b	16d7c <lchmod@@Base+0x1a0>
   17020:	orr	r5, r5, #2496	; 0x9c0
   17024:	b	16d7c <lchmod@@Base+0x1a0>
   17028:	orr	r5, r5, #1072	; 0x430
   1702c:	orr	r5, r5, #8
   17030:	b	16d7c <lchmod@@Base+0x1a0>
   17034:	cmp	r3, #0
   17038:	bne	16ea4 <lchmod@@Base+0x2c8>
   1703c:	sub	r2, r2, r4
   17040:	mov	r0, #32
   17044:	cmp	r2, #4
   17048:	andle	r4, r5, #3072	; 0xc00
   1704c:	movwgt	r4, #4095	; 0xfff
   17050:	mvnle	r4, r4, lsr #10
   17054:	mvnle	r4, r4, lsl #10
   17058:	bl	19eb4 <lchmod@@Base+0x32d8>
   1705c:	movw	r1, #317	; 0x13d
   17060:	movw	r2, #4095	; 0xfff
   17064:	mov	r3, #0
   17068:	strh	r1, [r0]
   1706c:	stmib	r0, {r2, r5}
   17070:	str	r4, [r0, #12]
   17074:	strb	r3, [r0, #17]
   17078:	b	16db4 <lchmod@@Base+0x1d8>
   1707c:	cmp	r1, #44	; 0x2c
   17080:	bne	17090 <lchmod@@Base+0x4b4>
   17084:	add	r4, r2, #1
   17088:	mov	lr, r6
   1708c:	b	16d78 <lchmod@@Base+0x19c>
   17090:	cmp	r1, #0
   17094:	addeq	r6, r0, r6, lsl #4
   17098:	strbeq	r1, [r6, #1]
   1709c:	beq	16db4 <lchmod@@Base+0x1d8>
   170a0:	b	16dac <lchmod@@Base+0x1d0>
   170a4:	strd	r4, [sp, #-12]!
   170a8:	mov	r1, r0
   170ac:	mov	r0, #3
   170b0:	str	lr, [sp, #8]
   170b4:	sub	sp, sp, #108	; 0x6c
   170b8:	mov	r2, sp
   170bc:	bl	11854 <__xstat64@plt>
   170c0:	subs	r4, r0, #0
   170c4:	movne	r0, #0
   170c8:	bne	170f0 <lchmod@@Base+0x514>
   170cc:	ldr	r5, [sp, #16]
   170d0:	mov	r0, #32
   170d4:	bl	19eb4 <lchmod@@Base+0x32d8>
   170d8:	movw	r3, #4095	; 0xfff
   170dc:	movw	r2, #317	; 0x13d
   170e0:	strh	r2, [r0]
   170e4:	stmib	r0, {r3, r5}
   170e8:	str	r3, [r0, #12]
   170ec:	strb	r4, [r0, #17]
   170f0:	add	sp, sp, #108	; 0x6c
   170f4:	ldrd	r4, [sp]
   170f8:	add	sp, sp, #8
   170fc:	pop	{pc}		; (ldr pc, [sp], #4)
   17100:	strd	r4, [sp, #-28]!	; 0xffffffe4
   17104:	ubfx	r0, r0, #0, #12
   17108:	strd	r6, [sp, #8]
   1710c:	strd	r8, [sp, #16]
   17110:	str	lr, [sp, #24]
   17114:	ldrb	r4, [r3, #1]
   17118:	ldr	r9, [sp, #28]
   1711c:	cmp	r4, #0
   17120:	beq	17270 <lchmod@@Base+0x694>
   17124:	add	r3, r3, #16
   17128:	mvn	r2, r2
   1712c:	mov	r7, #0
   17130:	mvn	r8, #3072	; 0xc00
   17134:	b	171b0 <lchmod@@Base+0x5d4>
   17138:	cmp	r4, #2
   1713c:	mvn	lr, #0
   17140:	beq	17260 <lchmod@@Base+0x684>
   17144:	mov	r5, r1
   17148:	cmp	r4, #3
   1714c:	bne	17174 <lchmod@@Base+0x598>
   17150:	and	ip, ip, r0
   17154:	tst	ip, #292	; 0x124
   17158:	movne	r4, #292	; 0x124
   1715c:	moveq	r4, #0
   17160:	tst	ip, #146	; 0x92
   17164:	orrne	r4, r4, #146	; 0x92
   17168:	tst	ip, #73	; 0x49
   1716c:	orrne	r4, r4, #73	; 0x49
   17170:	orr	ip, r4, ip
   17174:	cmp	r6, #0
   17178:	and	ip, ip, lr
   1717c:	ldrb	r4, [r3, #-16]
   17180:	bne	171ec <lchmod@@Base+0x610>
   17184:	cmp	r4, #45	; 0x2d
   17188:	and	ip, ip, r2
   1718c:	beq	17248 <lchmod@@Base+0x66c>
   17190:	cmp	r4, #61	; 0x3d
   17194:	beq	1720c <lchmod@@Base+0x630>
   17198:	cmp	r4, #43	; 0x2b
   1719c:	beq	17254 <lchmod@@Base+0x678>
   171a0:	add	r3, r3, #16
   171a4:	ldrb	r4, [r3, #-15]
   171a8:	cmp	r4, #0
   171ac:	beq	1722c <lchmod@@Base+0x650>
   171b0:	cmp	r1, #0
   171b4:	ldr	r6, [r3, #-12]
   171b8:	ldr	ip, [r3, #-8]
   171bc:	beq	17138 <lchmod@@Base+0x55c>
   171c0:	cmp	r4, #2
   171c4:	ldr	lr, [r3, #-4]
   171c8:	mvn	r5, lr
   171cc:	orr	lr, lr, r8
   171d0:	and	r5, r5, #3072	; 0xc00
   171d4:	bne	17148 <lchmod@@Base+0x56c>
   171d8:	orr	ip, ip, #73	; 0x49
   171dc:	cmp	r6, #0
   171e0:	ldrb	r4, [r3, #-16]
   171e4:	and	ip, ip, lr
   171e8:	beq	17184 <lchmod@@Base+0x5a8>
   171ec:	cmp	r4, #45	; 0x2d
   171f0:	and	ip, ip, r6
   171f4:	beq	17248 <lchmod@@Base+0x66c>
   171f8:	cmp	r4, #61	; 0x3d
   171fc:	bne	17198 <lchmod@@Base+0x5bc>
   17200:	mvn	r6, r6
   17204:	orr	r5, r5, r6
   17208:	mvn	lr, r5
   1720c:	add	r3, r3, #16
   17210:	ldrb	r4, [r3, #-15]
   17214:	ubfx	lr, lr, #0, #12
   17218:	and	r0, r0, r5
   1721c:	orr	r0, r0, ip
   17220:	orr	r7, r7, lr
   17224:	cmp	r4, #0
   17228:	bne	171b0 <lchmod@@Base+0x5d4>
   1722c:	cmp	r9, #0
   17230:	ldrd	r4, [sp]
   17234:	strne	r7, [r9]
   17238:	ldrd	r6, [sp, #8]
   1723c:	ldrd	r8, [sp, #16]
   17240:	add	sp, sp, #24
   17244:	pop	{pc}		; (ldr pc, [sp], #4)
   17248:	orr	r7, r7, ip
   1724c:	bic	r0, r0, ip
   17250:	b	171a0 <lchmod@@Base+0x5c4>
   17254:	orr	r7, r7, ip
   17258:	orr	r0, r0, ip
   1725c:	b	171a0 <lchmod@@Base+0x5c4>
   17260:	ands	r5, r0, #73	; 0x49
   17264:	beq	17174 <lchmod@@Base+0x598>
   17268:	mov	r5, r1
   1726c:	b	171d8 <lchmod@@Base+0x5fc>
   17270:	mov	r7, r4
   17274:	b	1722c <lchmod@@Base+0x650>
   17278:	push	{r2, r3}
   1727c:	push	{lr}		; (str lr, [sp, #-4]!)
   17280:	sub	sp, sp, #12
   17284:	ldr	r2, [sp, #16]
   17288:	ands	r3, r2, #64	; 0x40
   1728c:	bne	172a8 <lchmod@@Base+0x6cc>
   17290:	bl	11704 <openat64@plt>
   17294:	bl	198c4 <lchmod@@Base+0x2ce8>
   17298:	add	sp, sp, #12
   1729c:	pop	{lr}		; (ldr lr, [sp], #4)
   172a0:	add	sp, sp, #8
   172a4:	bx	lr
   172a8:	add	ip, sp, #20
   172ac:	ldr	r3, [sp, #20]
   172b0:	str	ip, [sp, #4]
   172b4:	b	17290 <lchmod@@Base+0x6b4>
   172b8:	orr	r2, r2, #540672	; 0x84000
   172bc:	strd	r4, [sp, #-16]!
   172c0:	orr	r2, r2, #2304	; 0x900
   172c4:	str	r6, [sp, #8]
   172c8:	mov	r6, r3
   172cc:	str	lr, [sp, #12]
   172d0:	bl	17278 <lchmod@@Base+0x69c>
   172d4:	subs	r5, r0, #0
   172d8:	movlt	r4, #0
   172dc:	blt	172f0 <lchmod@@Base+0x714>
   172e0:	bl	117d0 <fdopendir@plt>
   172e4:	subs	r4, r0, #0
   172e8:	beq	17304 <lchmod@@Base+0x728>
   172ec:	str	r5, [r6]
   172f0:	mov	r0, r4
   172f4:	ldrd	r4, [sp]
   172f8:	ldr	r6, [sp, #8]
   172fc:	add	sp, sp, #12
   17300:	pop	{pc}		; (ldr pc, [sp], #4)
   17304:	bl	1171c <__errno_location@plt>
   17308:	mov	r6, r0
   1730c:	mov	r0, r5
   17310:	ldr	r5, [r6]
   17314:	bl	11884 <close@plt>
   17318:	b	172ec <lchmod@@Base+0x710>
   1731c:	strd	r4, [sp, #-16]!
   17320:	subs	r4, r0, #0
   17324:	str	r6, [sp, #8]
   17328:	str	lr, [sp, #12]
   1732c:	beq	173c4 <lchmod@@Base+0x7e8>
   17330:	mov	r1, #47	; 0x2f
   17334:	bl	117ac <strrchr@plt>
   17338:	subs	r5, r0, #0
   1733c:	beq	1739c <lchmod@@Base+0x7c0>
   17340:	add	r6, r5, #1
   17344:	sub	r3, r6, r4
   17348:	cmp	r3, #6
   1734c:	ble	1739c <lchmod@@Base+0x7c0>
   17350:	movw	r1, #50028	; 0xc36c
   17354:	movt	r1, #1
   17358:	mov	r2, #7
   1735c:	sub	r0, r5, #6
   17360:	bl	1186c <strncmp@plt>
   17364:	cmp	r0, #0
   17368:	bne	1739c <lchmod@@Base+0x7c0>
   1736c:	movw	r1, #50036	; 0xc374
   17370:	movt	r1, #1
   17374:	mov	r2, #3
   17378:	mov	r0, r6
   1737c:	bl	1186c <strncmp@plt>
   17380:	cmp	r0, #0
   17384:	movne	r4, r6
   17388:	bne	1739c <lchmod@@Base+0x7c0>
   1738c:	add	r4, r5, #4
   17390:	movw	r3, #53712	; 0xd1d0
   17394:	movt	r3, #2
   17398:	str	r4, [r3]
   1739c:	movw	r2, #53752	; 0xd1f8
   173a0:	movt	r2, #2
   173a4:	ldr	r6, [sp, #8]
   173a8:	movw	r3, #53716	; 0xd1d4
   173ac:	movt	r3, #2
   173b0:	str	r4, [r2]
   173b4:	str	r4, [r3]
   173b8:	ldrd	r4, [sp]
   173bc:	add	sp, sp, #12
   173c0:	pop	{pc}		; (ldr pc, [sp], #4)
   173c4:	movw	r3, #53728	; 0xd1e0
   173c8:	movt	r3, #2
   173cc:	movw	r0, #49972	; 0xc334
   173d0:	movt	r0, #1
   173d4:	ldr	r3, [r3]
   173d8:	mov	r2, #55	; 0x37
   173dc:	mov	r1, #1
   173e0:	bl	115f0 <fwrite@plt>
   173e4:	bl	11878 <abort@plt>
   173e8:	strd	r4, [sp, #-16]!
   173ec:	mov	r4, #0
   173f0:	mov	r5, #0
   173f4:	cmp	r1, #10
   173f8:	str	r6, [sp, #8]
   173fc:	strd	r4, [r0]
   17400:	strd	r4, [r0, #8]
   17404:	str	lr, [sp, #12]
   17408:	strd	r4, [r0, #16]
   1740c:	strd	r4, [r0, #24]
   17410:	strd	r4, [r0, #32]
   17414:	strd	r4, [r0, #40]	; 0x28
   17418:	beq	17430 <lchmod@@Base+0x854>
   1741c:	ldrd	r4, [sp]
   17420:	str	r1, [r0]
   17424:	ldr	r6, [sp, #8]
   17428:	add	sp, sp, #12
   1742c:	pop	{pc}		; (ldr pc, [sp], #4)
   17430:	bl	11878 <abort@plt>
   17434:	mov	r2, #5
   17438:	strd	r4, [sp, #-16]!
   1743c:	mov	r5, r0
   17440:	str	r6, [sp, #8]
   17444:	mov	r6, r1
   17448:	mov	r1, r0
   1744c:	mov	r0, #0
   17450:	str	lr, [sp, #12]
   17454:	bl	11578 <dcgettext@plt>
   17458:	cmp	r5, r0
   1745c:	mov	r4, r0
   17460:	beq	17478 <lchmod@@Base+0x89c>
   17464:	mov	r0, r4
   17468:	ldrd	r4, [sp]
   1746c:	ldr	r6, [sp, #8]
   17470:	add	sp, sp, #12
   17474:	pop	{pc}		; (ldr pc, [sp], #4)
   17478:	bl	1b550 <lchmod@@Base+0x4974>
   1747c:	ldrb	r3, [r0]
   17480:	bic	r3, r3, #32
   17484:	cmp	r3, #85	; 0x55
   17488:	bne	174f0 <lchmod@@Base+0x914>
   1748c:	ldrb	r3, [r0, #1]
   17490:	bic	r3, r3, #32
   17494:	cmp	r3, #84	; 0x54
   17498:	bne	17570 <lchmod@@Base+0x994>
   1749c:	ldrb	r3, [r0, #2]
   174a0:	bic	r3, r3, #32
   174a4:	cmp	r3, #70	; 0x46
   174a8:	bne	17570 <lchmod@@Base+0x994>
   174ac:	ldrb	r3, [r0, #3]
   174b0:	cmp	r3, #45	; 0x2d
   174b4:	bne	17570 <lchmod@@Base+0x994>
   174b8:	ldrb	r3, [r0, #4]
   174bc:	cmp	r3, #56	; 0x38
   174c0:	bne	17570 <lchmod@@Base+0x994>
   174c4:	ldrb	r3, [r0, #5]
   174c8:	cmp	r3, #0
   174cc:	bne	17570 <lchmod@@Base+0x994>
   174d0:	ldrb	r2, [r4]
   174d4:	movw	r3, #50128	; 0xc3d0
   174d8:	movt	r3, #1
   174dc:	movw	r4, #50140	; 0xc3dc
   174e0:	movt	r4, #1
   174e4:	cmp	r2, #96	; 0x60
   174e8:	movne	r4, r3
   174ec:	b	17464 <lchmod@@Base+0x888>
   174f0:	cmp	r3, #71	; 0x47
   174f4:	bne	17570 <lchmod@@Base+0x994>
   174f8:	ldrb	r3, [r0, #1]
   174fc:	bic	r3, r3, #32
   17500:	cmp	r3, #66	; 0x42
   17504:	bne	17570 <lchmod@@Base+0x994>
   17508:	ldrb	r3, [r0, #2]
   1750c:	cmp	r3, #49	; 0x31
   17510:	bne	17570 <lchmod@@Base+0x994>
   17514:	ldrb	r3, [r0, #3]
   17518:	cmp	r3, #56	; 0x38
   1751c:	bne	17570 <lchmod@@Base+0x994>
   17520:	ldrb	r3, [r0, #4]
   17524:	cmp	r3, #48	; 0x30
   17528:	bne	17570 <lchmod@@Base+0x994>
   1752c:	ldrb	r3, [r0, #5]
   17530:	cmp	r3, #51	; 0x33
   17534:	bne	17570 <lchmod@@Base+0x994>
   17538:	ldrb	r3, [r0, #6]
   1753c:	cmp	r3, #48	; 0x30
   17540:	bne	17570 <lchmod@@Base+0x994>
   17544:	ldrb	r3, [r0, #7]
   17548:	cmp	r3, #0
   1754c:	bne	17570 <lchmod@@Base+0x994>
   17550:	ldrb	r2, [r4]
   17554:	movw	r3, #50132	; 0xc3d4
   17558:	movt	r3, #1
   1755c:	movw	r4, #50136	; 0xc3d8
   17560:	movt	r4, #1
   17564:	cmp	r2, #96	; 0x60
   17568:	movne	r4, r3
   1756c:	b	17464 <lchmod@@Base+0x888>
   17570:	movw	r3, #50144	; 0xc3e0
   17574:	movt	r3, #1
   17578:	cmp	r6, #9
   1757c:	movw	r4, #50124	; 0xc3cc
   17580:	movt	r4, #1
   17584:	movne	r4, r3
   17588:	b	17464 <lchmod@@Base+0x888>
   1758c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   17590:	strd	r6, [sp, #8]
   17594:	strd	r8, [sp, #16]
   17598:	strd	sl, [sp, #24]
   1759c:	mov	fp, r0
   175a0:	mov	sl, r1
   175a4:	str	lr, [sp, #32]
   175a8:	sub	sp, sp, #116	; 0x74
   175ac:	ldr	r8, [sp, #152]	; 0x98
   175b0:	str	r3, [sp, #28]
   175b4:	ldr	r3, [sp, #156]	; 0x9c
   175b8:	str	r2, [sp, #32]
   175bc:	and	r4, r3, #2
   175c0:	ubfx	r3, r3, #1, #1
   175c4:	str	r3, [sp, #44]	; 0x2c
   175c8:	bl	11608 <__ctype_get_mb_cur_max@plt>
   175cc:	str	r0, [sp, #64]	; 0x40
   175d0:	cmp	r8, #10
   175d4:	ldrls	pc, [pc, r8, lsl #2]
   175d8:	b	18d48 <lchmod@@Base+0x216c>
   175dc:	andeq	r7, r1, r0, ror #19
   175e0:	andeq	r7, r1, ip, ror sl
   175e4:	andeq	r8, r1, r8, asr r0
   175e8:	muleq	r1, ip, sl
   175ec:	andeq	r7, r1, r4, asr #18
   175f0:	muleq	r1, r0, r9
   175f4:	andeq	r7, r1, r0, lsl sl
   175f8:	andeq	r7, r1, ip, asr #20
   175fc:	andeq	r7, r1, r8, lsl #12
   17600:	andeq	r7, r1, r8, lsl #12
   17604:	andeq	r7, r1, r8, lsl #12
   17608:	cmp	r8, #10
   1760c:	beq	17638 <lchmod@@Base+0xa5c>
   17610:	mov	r1, r8
   17614:	movw	r0, #50148	; 0xc3e4
   17618:	movt	r0, #1
   1761c:	bl	17434 <lchmod@@Base+0x858>
   17620:	mov	r1, r8
   17624:	str	r0, [sp, #164]	; 0xa4
   17628:	movw	r0, #50144	; 0xc3e0
   1762c:	movt	r0, #1
   17630:	bl	17434 <lchmod@@Base+0x858>
   17634:	str	r0, [sp, #168]	; 0xa8
   17638:	cmp	r4, #0
   1763c:	movne	r4, #0
   17640:	beq	18a24 <lchmod@@Base+0x1e48>
   17644:	mov	r3, #1
   17648:	mov	r5, #0
   1764c:	ldr	r0, [sp, #168]	; 0xa8
   17650:	str	r3, [sp, #36]	; 0x24
   17654:	str	r3, [sp, #40]	; 0x28
   17658:	str	r5, [sp, #68]	; 0x44
   1765c:	bl	116e0 <strlen@plt>
   17660:	ldr	r3, [sp, #168]	; 0xa8
   17664:	str	r5, [sp, #48]	; 0x30
   17668:	str	r0, [sp, #56]	; 0x38
   1766c:	str	r3, [sp, #60]	; 0x3c
   17670:	str	r5, [sp, #72]	; 0x48
   17674:	str	r8, [sp, #152]	; 0x98
   17678:	mov	r8, fp
   1767c:	mov	r9, #0
   17680:	ldr	fp, [sp, #152]	; 0x98
   17684:	ldr	r3, [sp, #28]
   17688:	cmn	r3, #1
   1768c:	beq	17bec <lchmod@@Base+0x1010>
   17690:	ldr	r3, [sp, #28]
   17694:	subs	r6, r3, r9
   17698:	movne	r6, #1
   1769c:	cmp	r6, #0
   176a0:	beq	17c04 <lchmod@@Base+0x1028>
   176a4:	ldr	r0, [sp, #32]
   176a8:	ldr	r7, [sp, #40]	; 0x28
   176ac:	add	r3, r0, r9
   176b0:	cmp	fp, #2
   176b4:	moveq	r7, #0
   176b8:	andne	r7, r7, #1
   176bc:	str	r3, [sp, #52]	; 0x34
   176c0:	cmp	r7, #0
   176c4:	beq	180a0 <lchmod@@Base+0x14c4>
   176c8:	ldr	r2, [sp, #56]	; 0x38
   176cc:	cmp	r2, #0
   176d0:	beq	1833c <lchmod@@Base+0x1760>
   176d4:	ldr	r1, [sp, #28]
   176d8:	cmp	r2, #1
   176dc:	mov	r3, r2
   176e0:	movls	r3, #0
   176e4:	movhi	r3, #1
   176e8:	add	r5, r9, r2
   176ec:	cmn	r1, #1
   176f0:	movne	r3, #0
   176f4:	cmp	r3, #0
   176f8:	beq	17704 <lchmod@@Base+0xb28>
   176fc:	bl	116e0 <strlen@plt>
   17700:	str	r0, [sp, #28]
   17704:	ldr	r3, [sp, #28]
   17708:	cmp	r5, r3
   1770c:	bhi	1833c <lchmod@@Base+0x1760>
   17710:	ldr	r0, [sp, #52]	; 0x34
   17714:	ldr	r2, [sp, #56]	; 0x38
   17718:	ldr	r1, [sp, #60]	; 0x3c
   1771c:	bl	11560 <memcmp@plt>
   17720:	cmp	r0, #0
   17724:	bne	1833c <lchmod@@Base+0x1760>
   17728:	ldr	r3, [sp, #44]	; 0x2c
   1772c:	cmp	r3, #0
   17730:	bne	18c6c <lchmod@@Base+0x2090>
   17734:	ldr	r3, [sp, #52]	; 0x34
   17738:	ldrb	r5, [r3]
   1773c:	cmp	r5, #126	; 0x7e
   17740:	ldrls	pc, [pc, r5, lsl #2]
   17744:	b	17ffc <lchmod@@Base+0x1420>
   17748:	andeq	r7, r1, r0, lsl #30
   1774c:	strdeq	r7, [r1], -ip
   17750:	strdeq	r7, [r1], -ip
   17754:	strdeq	r7, [r1], -ip
   17758:	strdeq	r7, [r1], -ip
   1775c:	strdeq	r7, [r1], -ip
   17760:	strdeq	r7, [r1], -ip
   17764:	ldrdeq	r7, [r1], -r4
   17768:	andeq	r7, r1, ip, asr #29
   1776c:	andeq	r7, r1, r4, lsl lr
   17770:	andeq	r7, r1, r0, asr #29
   17774:	andeq	r7, r1, ip, lsl #28
   17778:	muleq	r1, ip, lr
   1777c:	andeq	r7, r1, r8, ror #29
   17780:	strdeq	r7, [r1], -ip
   17784:	strdeq	r7, [r1], -ip
   17788:	strdeq	r7, [r1], -ip
   1778c:	strdeq	r7, [r1], -ip
   17790:	strdeq	r7, [r1], -ip
   17794:	strdeq	r7, [r1], -ip
   17798:	strdeq	r7, [r1], -ip
   1779c:	strdeq	r7, [r1], -ip
   177a0:	strdeq	r7, [r1], -ip
   177a4:	strdeq	r7, [r1], -ip
   177a8:	strdeq	r7, [r1], -ip
   177ac:	strdeq	r7, [r1], -ip
   177b0:	strdeq	r7, [r1], -ip
   177b4:	strdeq	r7, [r1], -ip
   177b8:	strdeq	r7, [r1], -ip
   177bc:	strdeq	r7, [r1], -ip
   177c0:	strdeq	r7, [r1], -ip
   177c4:	strdeq	r7, [r1], -ip
   177c8:	ldrdeq	r7, [r1], -r8
   177cc:	andeq	r7, r1, r0, ror #29
   177d0:	andeq	r7, r1, r0, ror #29
   177d4:			; <UNDEFINED> instruction: 0x00017fbc
   177d8:	andeq	r7, r1, r0, ror #29
   177dc:	strdeq	r7, [r1], -r0
   177e0:	andeq	r7, r1, r0, ror #29
   177e4:	andeq	r7, r1, ip, lsr sp
   177e8:	andeq	r7, r1, r0, ror #29
   177ec:	andeq	r7, r1, r0, ror #29
   177f0:	andeq	r7, r1, r0, ror #29
   177f4:	strdeq	r7, [r1], -r0
   177f8:	strdeq	r7, [r1], -r0
   177fc:	strdeq	r7, [r1], -r0
   17800:	strdeq	r7, [r1], -r0
   17804:	strdeq	r7, [r1], -r0
   17808:	strdeq	r7, [r1], -r0
   1780c:	strdeq	r7, [r1], -r0
   17810:	strdeq	r7, [r1], -r0
   17814:	strdeq	r7, [r1], -r0
   17818:	strdeq	r7, [r1], -r0
   1781c:	strdeq	r7, [r1], -r0
   17820:	strdeq	r7, [r1], -r0
   17824:	strdeq	r7, [r1], -r0
   17828:	strdeq	r7, [r1], -r0
   1782c:	strdeq	r7, [r1], -r0
   17830:	strdeq	r7, [r1], -r0
   17834:	andeq	r7, r1, r0, ror #29
   17838:	andeq	r7, r1, r0, ror #29
   1783c:	andeq	r7, r1, r0, ror #29
   17840:	andeq	r7, r1, r0, ror #29
   17844:	andeq	r7, r1, r0, lsl sp
   17848:	strdeq	r7, [r1], -ip
   1784c:	strdeq	r7, [r1], -r0
   17850:	strdeq	r7, [r1], -r0
   17854:	strdeq	r7, [r1], -r0
   17858:	strdeq	r7, [r1], -r0
   1785c:	strdeq	r7, [r1], -r0
   17860:	strdeq	r7, [r1], -r0
   17864:	strdeq	r7, [r1], -r0
   17868:	strdeq	r7, [r1], -r0
   1786c:	strdeq	r7, [r1], -r0
   17870:	strdeq	r7, [r1], -r0
   17874:	strdeq	r7, [r1], -r0
   17878:	strdeq	r7, [r1], -r0
   1787c:	strdeq	r7, [r1], -r0
   17880:	strdeq	r7, [r1], -r0
   17884:	strdeq	r7, [r1], -r0
   17888:	strdeq	r7, [r1], -r0
   1788c:	strdeq	r7, [r1], -r0
   17890:	strdeq	r7, [r1], -r0
   17894:	strdeq	r7, [r1], -r0
   17898:	strdeq	r7, [r1], -r0
   1789c:	strdeq	r7, [r1], -r0
   178a0:	strdeq	r7, [r1], -r0
   178a4:	strdeq	r7, [r1], -r0
   178a8:	strdeq	r7, [r1], -r0
   178ac:	strdeq	r7, [r1], -r0
   178b0:	strdeq	r7, [r1], -r0
   178b4:	andeq	r7, r1, r0, ror #29
   178b8:			; <UNDEFINED> instruction: 0x00017cb8
   178bc:	strdeq	r7, [r1], -r0
   178c0:	andeq	r7, r1, r0, ror #29
   178c4:	strdeq	r7, [r1], -r0
   178c8:	andeq	r7, r1, r0, ror #29
   178cc:	strdeq	r7, [r1], -r0
   178d0:	strdeq	r7, [r1], -r0
   178d4:	strdeq	r7, [r1], -r0
   178d8:	strdeq	r7, [r1], -r0
   178dc:	strdeq	r7, [r1], -r0
   178e0:	strdeq	r7, [r1], -r0
   178e4:	strdeq	r7, [r1], -r0
   178e8:	strdeq	r7, [r1], -r0
   178ec:	strdeq	r7, [r1], -r0
   178f0:	strdeq	r7, [r1], -r0
   178f4:	strdeq	r7, [r1], -r0
   178f8:	strdeq	r7, [r1], -r0
   178fc:	strdeq	r7, [r1], -r0
   17900:	strdeq	r7, [r1], -r0
   17904:	strdeq	r7, [r1], -r0
   17908:	strdeq	r7, [r1], -r0
   1790c:	strdeq	r7, [r1], -r0
   17910:	strdeq	r7, [r1], -r0
   17914:	strdeq	r7, [r1], -r0
   17918:	strdeq	r7, [r1], -r0
   1791c:	strdeq	r7, [r1], -r0
   17920:	strdeq	r7, [r1], -r0
   17924:	strdeq	r7, [r1], -r0
   17928:	strdeq	r7, [r1], -r0
   1792c:	strdeq	r7, [r1], -r0
   17930:	strdeq	r7, [r1], -r0
   17934:	ldrdeq	r7, [r1], -ip
   17938:	andeq	r7, r1, r0, ror #29
   1793c:	ldrdeq	r7, [r1], -ip
   17940:			; <UNDEFINED> instruction: 0x00017fbc
   17944:	cmp	r4, #0
   17948:	moveq	r3, #1
   1794c:	streq	r3, [sp, #40]	; 0x28
   17950:	beq	18064 <lchmod@@Base+0x1488>
   17954:	mov	r3, #0
   17958:	mov	r2, #1
   1795c:	mov	r4, r3
   17960:	str	r2, [sp, #36]	; 0x24
   17964:	str	r2, [sp, #44]	; 0x2c
   17968:	str	r2, [sp, #56]	; 0x38
   1796c:	str	r3, [sp, #68]	; 0x44
   17970:	movw	r3, #50144	; 0xc3e0
   17974:	movt	r3, #1
   17978:	str	r4, [sp, #40]	; 0x28
   1797c:	mov	r8, #2
   17980:	str	r4, [sp, #48]	; 0x30
   17984:	str	r3, [sp, #60]	; 0x3c
   17988:	str	r4, [sp, #72]	; 0x48
   1798c:	b	17674 <lchmod@@Base+0xa98>
   17990:	cmp	r4, #0
   17994:	bne	18be0 <lchmod@@Base+0x2004>
   17998:	cmp	sl, #0
   1799c:	beq	189a0 <lchmod@@Base+0x1dc4>
   179a0:	mov	r3, #34	; 0x22
   179a4:	mov	r1, r4
   179a8:	mov	r2, #1
   179ac:	strb	r3, [fp]
   179b0:	movw	r3, #50124	; 0xc3cc
   179b4:	movt	r3, #1
   179b8:	mov	r4, r2
   179bc:	str	r2, [sp, #36]	; 0x24
   179c0:	str	r2, [sp, #40]	; 0x28
   179c4:	str	r1, [sp, #44]	; 0x2c
   179c8:	str	r1, [sp, #48]	; 0x30
   179cc:	str	r2, [sp, #56]	; 0x38
   179d0:	str	r3, [sp, #60]	; 0x3c
   179d4:	str	r1, [sp, #68]	; 0x44
   179d8:	str	r1, [sp, #72]	; 0x48
   179dc:	b	17674 <lchmod@@Base+0xa98>
   179e0:	mov	r3, #0
   179e4:	mov	r4, r8
   179e8:	str	r3, [sp, #40]	; 0x28
   179ec:	str	r3, [sp, #44]	; 0x2c
   179f0:	str	r3, [sp, #48]	; 0x30
   179f4:	str	r8, [sp, #56]	; 0x38
   179f8:	str	r3, [sp, #60]	; 0x3c
   179fc:	str	r3, [sp, #68]	; 0x44
   17a00:	mov	r3, #1
   17a04:	str	r3, [sp, #36]	; 0x24
   17a08:	str	r8, [sp, #72]	; 0x48
   17a0c:	b	17674 <lchmod@@Base+0xa98>
   17a10:	mov	r3, #1
   17a14:	mov	r2, #0
   17a18:	mov	r4, r2
   17a1c:	mov	r8, #5
   17a20:	str	r3, [sp, #36]	; 0x24
   17a24:	str	r3, [sp, #40]	; 0x28
   17a28:	str	r3, [sp, #44]	; 0x2c
   17a2c:	str	r2, [sp, #48]	; 0x30
   17a30:	str	r3, [sp, #56]	; 0x38
   17a34:	movw	r3, #50124	; 0xc3cc
   17a38:	movt	r3, #1
   17a3c:	str	r3, [sp, #60]	; 0x3c
   17a40:	str	r2, [sp, #68]	; 0x44
   17a44:	str	r2, [sp, #72]	; 0x48
   17a48:	b	17674 <lchmod@@Base+0xa98>
   17a4c:	mov	r3, #0
   17a50:	mov	r2, #1
   17a54:	mov	r4, r3
   17a58:	str	r2, [sp, #36]	; 0x24
   17a5c:	str	r2, [sp, #40]	; 0x28
   17a60:	str	r3, [sp, #44]	; 0x2c
   17a64:	str	r3, [sp, #48]	; 0x30
   17a68:	str	r3, [sp, #56]	; 0x38
   17a6c:	str	r3, [sp, #60]	; 0x3c
   17a70:	str	r3, [sp, #68]	; 0x44
   17a74:	str	r3, [sp, #72]	; 0x48
   17a78:	b	17674 <lchmod@@Base+0xa98>
   17a7c:	mov	r2, #1
   17a80:	mov	r3, #0
   17a84:	mov	r4, r3
   17a88:	str	r2, [sp, #36]	; 0x24
   17a8c:	str	r2, [sp, #44]	; 0x2c
   17a90:	str	r8, [sp, #56]	; 0x38
   17a94:	str	r3, [sp, #68]	; 0x44
   17a98:	b	17970 <lchmod@@Base+0xd94>
   17a9c:	mov	r3, #1
   17aa0:	mov	r2, #0
   17aa4:	mov	r4, r2
   17aa8:	mov	r8, #2
   17aac:	str	r3, [sp, #36]	; 0x24
   17ab0:	str	r3, [sp, #40]	; 0x28
   17ab4:	str	r3, [sp, #44]	; 0x2c
   17ab8:	str	r2, [sp, #48]	; 0x30
   17abc:	str	r3, [sp, #56]	; 0x38
   17ac0:	movw	r3, #50144	; 0xc3e0
   17ac4:	movt	r3, #1
   17ac8:	str	r3, [sp, #60]	; 0x3c
   17acc:	str	r2, [sp, #68]	; 0x44
   17ad0:	str	r2, [sp, #72]	; 0x48
   17ad4:	b	17674 <lchmod@@Base+0xa98>
   17ad8:	mov	r7, #0
   17adc:	ldr	r3, [sp, #28]
   17ae0:	cmn	r3, #1
   17ae4:	beq	185bc <lchmod@@Base+0x19e0>
   17ae8:	ldr	r3, [sp, #28]
   17aec:	subs	r2, r3, #1
   17af0:	movne	r2, #1
   17af4:	sub	r3, fp, #2
   17af8:	cmp	r2, #0
   17afc:	clz	r3, r3
   17b00:	lsr	r3, r3, #5
   17b04:	bne	17b10 <lchmod@@Base+0xf34>
   17b08:	cmp	r9, #0
   17b0c:	beq	1831c <lchmod@@Base+0x1740>
   17b10:	mov	r6, #0
   17b14:	ldr	r2, [sp, #40]	; 0x28
   17b18:	eor	r2, r2, #1
   17b1c:	orrs	r3, r3, r2
   17b20:	bne	17cf8 <lchmod@@Base+0x111c>
   17b24:	ldr	r2, [sp, #160]	; 0xa0
   17b28:	cmp	r2, #0
   17b2c:	beq	17b4c <lchmod@@Base+0xf70>
   17b30:	ldr	r0, [sp, #160]	; 0xa0
   17b34:	ubfx	r1, r5, #5, #8
   17b38:	and	r2, r5, #31
   17b3c:	ldr	r1, [r0, r1, lsl #2]
   17b40:	lsr	r2, r1, r2
   17b44:	tst	r2, #1
   17b48:	bne	17b54 <lchmod@@Base+0xf78>
   17b4c:	cmp	r7, #0
   17b50:	beq	17dc4 <lchmod@@Base+0x11e8>
   17b54:	ldr	r2, [sp, #44]	; 0x2c
   17b58:	sub	r3, fp, #2
   17b5c:	clz	r3, r3
   17b60:	lsr	r3, r3, #5
   17b64:	cmp	r2, #0
   17b68:	bne	18910 <lchmod@@Base+0x1d34>
   17b6c:	ldr	r2, [sp, #48]	; 0x30
   17b70:	eor	r2, r2, #1
   17b74:	ands	r3, r3, r2
   17b78:	beq	17bb0 <lchmod@@Base+0xfd4>
   17b7c:	cmp	sl, r4
   17b80:	str	r3, [sp, #48]	; 0x30
   17b84:	movhi	r2, #39	; 0x27
   17b88:	strbhi	r2, [r8, r4]
   17b8c:	add	r2, r4, #1
   17b90:	cmp	sl, r2
   17b94:	movhi	r1, #36	; 0x24
   17b98:	strbhi	r1, [r8, r2]
   17b9c:	add	r2, r4, #2
   17ba0:	add	r4, r4, #3
   17ba4:	cmp	sl, r2
   17ba8:	movhi	r1, #39	; 0x27
   17bac:	strbhi	r1, [r8, r2]
   17bb0:	cmp	r4, sl
   17bb4:	add	r9, r9, #1
   17bb8:	movcc	r3, #92	; 0x5c
   17bbc:	strbcc	r3, [r8, r4]
   17bc0:	add	r4, r4, #1
   17bc4:	cmp	r4, sl
   17bc8:	ldr	r3, [sp, #36]	; 0x24
   17bcc:	strbcc	r5, [r8, r4]
   17bd0:	cmp	r6, #0
   17bd4:	add	r4, r4, #1
   17bd8:	moveq	r3, #0
   17bdc:	str	r3, [sp, #36]	; 0x24
   17be0:	ldr	r3, [sp, #28]
   17be4:	cmn	r3, #1
   17be8:	bne	17690 <lchmod@@Base+0xab4>
   17bec:	ldr	r3, [sp, #32]
   17bf0:	ldrb	r6, [r3, r9]
   17bf4:	adds	r6, r6, #0
   17bf8:	movne	r6, #1
   17bfc:	cmp	r6, #0
   17c00:	bne	176a4 <lchmod@@Base+0xac8>
   17c04:	str	fp, [sp, #152]	; 0x98
   17c08:	mov	fp, r8
   17c0c:	cmp	r4, #0
   17c10:	ldr	r1, [sp, #44]	; 0x2c
   17c14:	movne	r3, #0
   17c18:	ldr	r8, [sp, #152]	; 0x98
   17c1c:	sub	r2, r8, #2
   17c20:	clz	r2, r2
   17c24:	lsr	r2, r2, #5
   17c28:	andeq	r3, r2, r1
   17c2c:	cmp	r3, #0
   17c30:	bne	18cec <lchmod@@Base+0x2110>
   17c34:	eor	r3, r1, #1
   17c38:	ands	r2, r2, r3
   17c3c:	beq	18c18 <lchmod@@Base+0x203c>
   17c40:	ldr	r3, [sp, #68]	; 0x44
   17c44:	cmp	r3, #0
   17c48:	beq	18c1c <lchmod@@Base+0x2040>
   17c4c:	ldr	r3, [sp, #36]	; 0x24
   17c50:	cmp	r3, #0
   17c54:	bne	18ca8 <lchmod@@Base+0x20cc>
   17c58:	ldr	r3, [sp, #72]	; 0x48
   17c5c:	adds	r3, r3, #0
   17c60:	movne	r3, #1
   17c64:	cmp	sl, #0
   17c68:	movne	r3, #0
   17c6c:	cmp	r3, #0
   17c70:	ldreq	r2, [sp, #68]	; 0x44
   17c74:	beq	18c1c <lchmod@@Base+0x2040>
   17c78:	ldr	r2, [sp, #72]	; 0x48
   17c7c:	str	r3, [sp, #68]	; 0x44
   17c80:	movw	r3, #50144	; 0xc3e0
   17c84:	movt	r3, #1
   17c88:	mov	r1, #39	; 0x27
   17c8c:	mov	r4, #1
   17c90:	ldr	sl, [sp, #72]	; 0x48
   17c94:	mov	r8, #2
   17c98:	str	r3, [sp, #60]	; 0x3c
   17c9c:	mov	r3, #0
   17ca0:	strb	r1, [fp]
   17ca4:	str	r3, [sp, #44]	; 0x2c
   17ca8:	str	r4, [sp, #56]	; 0x38
   17cac:	str	r2, [sp, #72]	; 0x48
   17cb0:	b	17674 <lchmod@@Base+0xa98>
   17cb4:	mov	r7, #0
   17cb8:	cmp	fp, #2
   17cbc:	beq	1859c <lchmod@@Base+0x19c0>
   17cc0:	ldr	r2, [sp, #40]	; 0x28
   17cc4:	ldr	r3, [sp, #56]	; 0x38
   17cc8:	ldr	r1, [sp, #44]	; 0x2c
   17ccc:	cmp	r3, #0
   17cd0:	moveq	r3, #0
   17cd4:	andne	r3, r2, r1
   17cd8:	cmp	r3, #0
   17cdc:	moveq	r5, #92	; 0x5c
   17ce0:	moveq	r3, r5
   17ce4:	bne	185a8 <lchmod@@Base+0x19cc>
   17ce8:	ldr	r2, [sp, #40]	; 0x28
   17cec:	cmp	r2, #0
   17cf0:	bne	189e4 <lchmod@@Base+0x1e08>
   17cf4:	mov	r6, #0
   17cf8:	ldr	r3, [sp, #44]	; 0x2c
   17cfc:	cmp	r3, #0
   17d00:	beq	18594 <lchmod@@Base+0x19b8>
   17d04:	mov	r3, #0
   17d08:	b	17b24 <lchmod@@Base+0xf48>
   17d0c:	mov	r7, #0
   17d10:	cmp	fp, #2
   17d14:	beq	1860c <lchmod@@Base+0x1a30>
   17d18:	cmp	fp, #5
   17d1c:	beq	185d0 <lchmod@@Base+0x19f4>
   17d20:	sub	r3, fp, #2
   17d24:	mov	r6, #0
   17d28:	clz	r3, r3
   17d2c:	mov	r5, #63	; 0x3f
   17d30:	lsr	r3, r3, #5
   17d34:	b	17b14 <lchmod@@Base+0xf38>
   17d38:	mov	r7, #0
   17d3c:	cmp	fp, #2
   17d40:	movne	r3, #0
   17d44:	movne	r5, #39	; 0x27
   17d48:	strne	r6, [sp, #68]	; 0x44
   17d4c:	bne	17b14 <lchmod@@Base+0xf38>
   17d50:	ldr	r3, [sp, #44]	; 0x2c
   17d54:	cmp	r3, #0
   17d58:	bne	18a14 <lchmod@@Base+0x1e38>
   17d5c:	ldr	r3, [sp, #72]	; 0x48
   17d60:	cmp	sl, #0
   17d64:	clz	r3, r3
   17d68:	lsr	r3, r3, #5
   17d6c:	moveq	r3, #0
   17d70:	cmp	r3, #0
   17d74:	bne	18940 <lchmod@@Base+0x1d64>
   17d78:	cmp	sl, r4
   17d7c:	movhi	r3, #39	; 0x27
   17d80:	strbhi	r3, [r8, r4]
   17d84:	add	r3, r4, #1
   17d88:	cmp	sl, r3
   17d8c:	movhi	r2, #92	; 0x5c
   17d90:	strbhi	r2, [r8, r3]
   17d94:	add	r3, r4, #2
   17d98:	cmp	sl, r3
   17d9c:	bls	17da8 <lchmod@@Base+0x11cc>
   17da0:	mov	r2, #39	; 0x27
   17da4:	strb	r2, [r8, r3]
   17da8:	mov	r3, #0
   17dac:	cmp	r7, #0
   17db0:	add	r4, r4, #3
   17db4:	mov	r5, #39	; 0x27
   17db8:	str	r3, [sp, #48]	; 0x30
   17dbc:	str	r6, [sp, #68]	; 0x44
   17dc0:	bne	17b54 <lchmod@@Base+0xf78>
   17dc4:	ldr	r2, [sp, #48]	; 0x30
   17dc8:	eor	r3, r3, #1
   17dcc:	add	r9, r9, #1
   17dd0:	and	r3, r3, r2
   17dd4:	uxtb	r3, r3
   17dd8:	cmp	r3, #0
   17ddc:	beq	17bc4 <lchmod@@Base+0xfe8>
   17de0:	cmp	sl, r4
   17de4:	movhi	r3, #39	; 0x27
   17de8:	strbhi	r3, [r8, r4]
   17dec:	add	r3, r4, #1
   17df0:	add	r4, r4, #2
   17df4:	cmp	sl, r3
   17df8:	movhi	r2, #39	; 0x27
   17dfc:	strbhi	r2, [r8, r3]
   17e00:	mov	r3, #0
   17e04:	str	r3, [sp, #48]	; 0x30
   17e08:	b	17bc4 <lchmod@@Base+0xfe8>
   17e0c:	mov	r3, #118	; 0x76
   17e10:	b	17ce8 <lchmod@@Base+0x110c>
   17e14:	mov	r3, #116	; 0x74
   17e18:	ldr	r2, [sp, #44]	; 0x2c
   17e1c:	cmp	fp, #2
   17e20:	movne	r2, #0
   17e24:	andeq	r2, r2, #1
   17e28:	cmp	r2, #0
   17e2c:	beq	17ce8 <lchmod@@Base+0x110c>
   17e30:	mov	fp, r8
   17e34:	mov	r8, #2
   17e38:	ldr	r3, [sp, #40]	; 0x28
   17e3c:	cmp	r3, #0
   17e40:	movne	r8, #4
   17e44:	mov	lr, #0
   17e48:	mov	r0, fp
   17e4c:	ldr	r2, [sp, #32]
   17e50:	ldr	r3, [sp, #156]	; 0x9c
   17e54:	ldr	r1, [sp, #164]	; 0xa4
   17e58:	bic	ip, r3, #2
   17e5c:	ldr	r3, [sp, #28]
   17e60:	stm	sp, {r8, ip, lr}
   17e64:	ldr	ip, [sp, #168]	; 0xa8
   17e68:	str	r1, [sp, #12]
   17e6c:	mov	r1, sl
   17e70:	str	ip, [sp, #16]
   17e74:	bl	1758c <lchmod@@Base+0x9b0>
   17e78:	mov	r4, r0
   17e7c:	mov	r0, r4
   17e80:	add	sp, sp, #116	; 0x74
   17e84:	ldrd	r4, [sp]
   17e88:	ldrd	r6, [sp, #8]
   17e8c:	ldrd	r8, [sp, #16]
   17e90:	ldrd	sl, [sp, #24]
   17e94:	add	sp, sp, #32
   17e98:	pop	{pc}		; (ldr pc, [sp], #4)
   17e9c:	mov	r5, #102	; 0x66
   17ea0:	ldr	r2, [sp, #44]	; 0x2c
   17ea4:	sub	r3, fp, #2
   17ea8:	clz	r3, r3
   17eac:	lsr	r3, r3, #5
   17eb0:	cmp	r2, #0
   17eb4:	bne	18910 <lchmod@@Base+0x1d34>
   17eb8:	mov	r6, r2
   17ebc:	b	17bb0 <lchmod@@Base+0xfd4>
   17ec0:	mov	r5, #110	; 0x6e
   17ec4:	mov	r6, #0
   17ec8:	b	17b54 <lchmod@@Base+0xf78>
   17ecc:	mov	r5, #98	; 0x62
   17ed0:	b	17ea0 <lchmod@@Base+0x12c4>
   17ed4:	mov	r5, #97	; 0x61
   17ed8:	b	17ea0 <lchmod@@Base+0x12c4>
   17edc:	mov	r7, #0
   17ee0:	mov	r6, #0
   17ee4:	b	17d04 <lchmod@@Base+0x1128>
   17ee8:	mov	r5, #114	; 0x72
   17eec:	b	17ec4 <lchmod@@Base+0x12e8>
   17ef0:	ldr	r3, [sp, #44]	; 0x2c
   17ef4:	cmp	r3, #0
   17ef8:	bne	18c88 <lchmod@@Base+0x20ac>
   17efc:	mov	r7, r3
   17f00:	ldr	r3, [sp, #48]	; 0x30
   17f04:	sub	r2, fp, #2
   17f08:	clz	r2, r2
   17f0c:	lsr	r2, r2, #5
   17f10:	eor	r3, r3, #1
   17f14:	ands	r3, r2, r3
   17f18:	beq	1892c <lchmod@@Base+0x1d50>
   17f1c:	cmp	sl, r4
   17f20:	movhi	r1, #39	; 0x27
   17f24:	strbhi	r1, [r8, r4]
   17f28:	add	r1, r4, #1
   17f2c:	cmp	sl, r1
   17f30:	movhi	r0, #36	; 0x24
   17f34:	strbhi	r0, [r8, r1]
   17f38:	add	r1, r4, #2
   17f3c:	cmp	sl, r1
   17f40:	movhi	r0, #39	; 0x27
   17f44:	strbhi	r0, [r8, r1]
   17f48:	add	r1, r4, #3
   17f4c:	cmp	sl, r1
   17f50:	bls	18984 <lchmod@@Base+0x1da8>
   17f54:	mov	r4, r1
   17f58:	mov	r1, #92	; 0x5c
   17f5c:	mov	r0, r4
   17f60:	str	r3, [sp, #48]	; 0x30
   17f64:	strb	r1, [r8, r4]
   17f68:	cmp	fp, #2
   17f6c:	add	r4, r4, #1
   17f70:	beq	189d4 <lchmod@@Base+0x1df8>
   17f74:	ldr	r1, [sp, #28]
   17f78:	add	r3, r9, #1
   17f7c:	cmp	r3, r1
   17f80:	bcs	17f98 <lchmod@@Base+0x13bc>
   17f84:	ldr	r1, [sp, #32]
   17f88:	ldrb	r3, [r1, r3]
   17f8c:	sub	r3, r3, #48	; 0x30
   17f90:	cmp	r3, #9
   17f94:	bls	189ec <lchmod@@Base+0x1e10>
   17f98:	mov	r5, #48	; 0x30
   17f9c:	ldr	r3, [sp, #40]	; 0x28
   17fa0:	eor	r3, r3, #1
   17fa4:	orrs	r2, r2, r3
   17fa8:	mov	r3, r6
   17fac:	moveq	r6, r2
   17fb0:	beq	17b24 <lchmod@@Base+0xf48>
   17fb4:	mov	r6, #0
   17fb8:	b	17b4c <lchmod@@Base+0xf70>
   17fbc:	cmp	r9, #0
   17fc0:	mov	r2, r7
   17fc4:	bne	18564 <lchmod@@Base+0x1988>
   17fc8:	mov	r6, r7
   17fcc:	mov	r3, r9
   17fd0:	mov	r7, r2
   17fd4:	b	17b14 <lchmod@@Base+0xf38>
   17fd8:	mov	r2, r7
   17fdc:	mov	r6, r7
   17fe0:	mov	r3, #0
   17fe4:	mov	r7, r2
   17fe8:	mov	r5, #32
   17fec:	b	17b14 <lchmod@@Base+0xf38>
   17ff0:	mov	r6, r7
   17ff4:	b	17d04 <lchmod@@Base+0x1128>
   17ff8:	mov	r7, #0
   17ffc:	ldr	r3, [sp, #64]	; 0x40
   18000:	cmp	r3, #1
   18004:	bne	18624 <lchmod@@Base+0x1a48>
   18008:	bl	116b0 <__ctype_b_loc@plt>
   1800c:	ldr	r2, [r0]
   18010:	sxth	r3, r5
   18014:	lsl	r3, r3, #1
   18018:	ldr	r1, [sp, #64]	; 0x40
   1801c:	ldrh	r3, [r2, r3]
   18020:	mov	ip, r1
   18024:	and	r3, r3, #16384	; 0x4000
   18028:	cmp	r3, #0
   1802c:	ldr	r3, [sp, #40]	; 0x28
   18030:	movne	r6, #1
   18034:	moveq	r6, #0
   18038:	movne	r2, #0
   1803c:	andeq	r2, r3, #1
   18040:	cmp	r2, #0
   18044:	bne	1896c <lchmod@@Base+0x1d90>
   18048:	sub	r3, fp, #2
   1804c:	clz	r3, r3
   18050:	lsr	r3, r3, #5
   18054:	b	17b14 <lchmod@@Base+0xf38>
   18058:	cmp	r4, #0
   1805c:	bne	18cfc <lchmod@@Base+0x2120>
   18060:	str	r4, [sp, #40]	; 0x28
   18064:	cmp	sl, #0
   18068:	bne	18d2c <lchmod@@Base+0x2150>
   1806c:	mov	r3, #1
   18070:	movw	r2, #50144	; 0xc3e0
   18074:	movt	r2, #1
   18078:	mov	r4, r3
   1807c:	mov	r8, #2
   18080:	str	r3, [sp, #36]	; 0x24
   18084:	str	sl, [sp, #44]	; 0x2c
   18088:	str	sl, [sp, #48]	; 0x30
   1808c:	str	r3, [sp, #56]	; 0x38
   18090:	str	r2, [sp, #60]	; 0x3c
   18094:	str	sl, [sp, #68]	; 0x44
   18098:	str	sl, [sp, #72]	; 0x48
   1809c:	b	17674 <lchmod@@Base+0xa98>
   180a0:	ldr	r3, [sp, #32]
   180a4:	ldrb	r5, [r3, r9]
   180a8:	cmp	r5, #126	; 0x7e
   180ac:	ldrls	pc, [pc, r5, lsl #2]
   180b0:	b	17ffc <lchmod@@Base+0x1420>
   180b4:	ldrdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   180b8:	strdeq	r7, [r1], -ip
   180bc:	strdeq	r7, [r1], -ip
   180c0:	strdeq	r7, [r1], -ip
   180c4:	strdeq	r7, [r1], -ip
   180c8:	strdeq	r7, [r1], -ip
   180cc:	strdeq	r7, [r1], -ip
   180d0:	ldrdeq	r8, [r1], -r0
   180d4:	andeq	r8, r1, r8, asr #5
   180d8:	andeq	r7, r1, r4, lsl lr
   180dc:	andeq	r8, r1, r0, asr #5
   180e0:	andeq	r7, r1, ip, lsl #28
   180e4:			; <UNDEFINED> instruction: 0x000182b8
   180e8:			; <UNDEFINED> instruction: 0x000182b0
   180ec:	strdeq	r7, [r1], -ip
   180f0:	strdeq	r7, [r1], -ip
   180f4:	strdeq	r7, [r1], -ip
   180f8:	strdeq	r7, [r1], -ip
   180fc:	strdeq	r7, [r1], -ip
   18100:	strdeq	r7, [r1], -ip
   18104:	strdeq	r7, [r1], -ip
   18108:	strdeq	r7, [r1], -ip
   1810c:	strdeq	r7, [r1], -ip
   18110:	strdeq	r7, [r1], -ip
   18114:	strdeq	r7, [r1], -ip
   18118:	strdeq	r7, [r1], -ip
   1811c:	strdeq	r7, [r1], -ip
   18120:	strdeq	r7, [r1], -ip
   18124:	strdeq	r7, [r1], -ip
   18128:	strdeq	r7, [r1], -ip
   1812c:	strdeq	r7, [r1], -ip
   18130:	strdeq	r7, [r1], -ip
   18134:	andeq	r8, r1, ip, lsr #6
   18138:	andeq	r8, r1, ip, lsl #6
   1813c:	andeq	r8, r1, ip, lsl #6
   18140:	strdeq	r8, [r1], -ip
   18144:	andeq	r8, r1, ip, lsl #6
   18148:	andeq	r8, r1, r8, asr #32
   1814c:	andeq	r8, r1, ip, lsl #6
   18150:	andeq	r7, r1, ip, lsr sp
   18154:	andeq	r8, r1, ip, lsl #6
   18158:	andeq	r8, r1, ip, lsl #6
   1815c:	andeq	r8, r1, ip, lsl #6
   18160:	andeq	r8, r1, r8, asr #32
   18164:	andeq	r8, r1, r8, asr #32
   18168:	andeq	r8, r1, r8, asr #32
   1816c:	andeq	r8, r1, r8, asr #32
   18170:	andeq	r8, r1, r8, asr #32
   18174:	andeq	r8, r1, r8, asr #32
   18178:	andeq	r8, r1, r8, asr #32
   1817c:	andeq	r8, r1, r8, asr #32
   18180:	andeq	r8, r1, r8, asr #32
   18184:	andeq	r8, r1, r8, asr #32
   18188:	andeq	r8, r1, r8, asr #32
   1818c:	andeq	r8, r1, r8, asr #32
   18190:	andeq	r8, r1, r8, asr #32
   18194:	andeq	r8, r1, r8, asr #32
   18198:	andeq	r8, r1, r8, asr #32
   1819c:	andeq	r8, r1, r8, asr #32
   181a0:	andeq	r8, r1, ip, lsl #6
   181a4:	andeq	r8, r1, ip, lsl #6
   181a8:	andeq	r8, r1, ip, lsl #6
   181ac:	andeq	r8, r1, ip, lsl #6
   181b0:	andeq	r7, r1, r0, lsl sp
   181b4:	strdeq	r7, [r1], -ip
   181b8:	andeq	r8, r1, r8, asr #32
   181bc:	andeq	r8, r1, r8, asr #32
   181c0:	andeq	r8, r1, r8, asr #32
   181c4:	andeq	r8, r1, r8, asr #32
   181c8:	andeq	r8, r1, r8, asr #32
   181cc:	andeq	r8, r1, r8, asr #32
   181d0:	andeq	r8, r1, r8, asr #32
   181d4:	andeq	r8, r1, r8, asr #32
   181d8:	andeq	r8, r1, r8, asr #32
   181dc:	andeq	r8, r1, r8, asr #32
   181e0:	andeq	r8, r1, r8, asr #32
   181e4:	andeq	r8, r1, r8, asr #32
   181e8:	andeq	r8, r1, r8, asr #32
   181ec:	andeq	r8, r1, r8, asr #32
   181f0:	andeq	r8, r1, r8, asr #32
   181f4:	andeq	r8, r1, r8, asr #32
   181f8:	andeq	r8, r1, r8, asr #32
   181fc:	andeq	r8, r1, r8, asr #32
   18200:	andeq	r8, r1, r8, asr #32
   18204:	andeq	r8, r1, r8, asr #32
   18208:	andeq	r8, r1, r8, asr #32
   1820c:	andeq	r8, r1, r8, asr #32
   18210:	andeq	r8, r1, r8, asr #32
   18214:	andeq	r8, r1, r8, asr #32
   18218:	andeq	r8, r1, r8, asr #32
   1821c:	andeq	r8, r1, r8, asr #32
   18220:	andeq	r8, r1, ip, lsl #6
   18224:			; <UNDEFINED> instruction: 0x00017cb8
   18228:	andeq	r8, r1, r8, asr #32
   1822c:	andeq	r8, r1, ip, lsl #6
   18230:	andeq	r8, r1, r8, asr #32
   18234:	andeq	r8, r1, ip, lsl #6
   18238:	andeq	r8, r1, r8, asr #32
   1823c:	andeq	r8, r1, r8, asr #32
   18240:	andeq	r8, r1, r8, asr #32
   18244:	andeq	r8, r1, r8, asr #32
   18248:	andeq	r8, r1, r8, asr #32
   1824c:	andeq	r8, r1, r8, asr #32
   18250:	andeq	r8, r1, r8, asr #32
   18254:	andeq	r8, r1, r8, asr #32
   18258:	andeq	r8, r1, r8, asr #32
   1825c:	andeq	r8, r1, r8, asr #32
   18260:	andeq	r8, r1, r8, asr #32
   18264:	andeq	r8, r1, r8, asr #32
   18268:	andeq	r8, r1, r8, asr #32
   1826c:	andeq	r8, r1, r8, asr #32
   18270:	andeq	r8, r1, r8, asr #32
   18274:	andeq	r8, r1, r8, asr #32
   18278:	andeq	r8, r1, r8, asr #32
   1827c:	andeq	r8, r1, r8, asr #32
   18280:	andeq	r8, r1, r8, asr #32
   18284:	andeq	r8, r1, r8, asr #32
   18288:	andeq	r8, r1, r8, asr #32
   1828c:	andeq	r8, r1, r8, asr #32
   18290:	andeq	r8, r1, r8, asr #32
   18294:	andeq	r8, r1, r8, asr #32
   18298:	andeq	r8, r1, r8, asr #32
   1829c:	andeq	r8, r1, r8, asr #32
   182a0:	ldrdeq	r7, [r1], -ip
   182a4:	andeq	r8, r1, ip, lsl #6
   182a8:	ldrdeq	r7, [r1], -ip
   182ac:	strdeq	r8, [r1], -ip
   182b0:	mov	r3, #114	; 0x72
   182b4:	b	17e18 <lchmod@@Base+0x123c>
   182b8:	mov	r3, #102	; 0x66
   182bc:	b	17ce8 <lchmod@@Base+0x110c>
   182c0:	mov	r3, #110	; 0x6e
   182c4:	b	17e18 <lchmod@@Base+0x123c>
   182c8:	mov	r3, #98	; 0x62
   182cc:	b	17ce8 <lchmod@@Base+0x110c>
   182d0:	mov	r3, #97	; 0x61
   182d4:	b	17ce8 <lchmod@@Base+0x110c>
   182d8:	ldr	r3, [sp, #40]	; 0x28
   182dc:	cmp	r3, #0
   182e0:	bne	17ef0 <lchmod@@Base+0x1314>
   182e4:	ldr	r3, [sp, #156]	; 0x9c
   182e8:	tst	r3, #1
   182ec:	addne	r9, r9, #1
   182f0:	bne	17684 <lchmod@@Base+0xaa8>
   182f4:	ldr	r7, [sp, #40]	; 0x28
   182f8:	b	17cf4 <lchmod@@Base+0x1118>
   182fc:	sub	r3, fp, #2
   18300:	clz	r3, r3
   18304:	lsr	r3, r3, #5
   18308:	b	17b08 <lchmod@@Base+0xf2c>
   1830c:	sub	r3, fp, #2
   18310:	mov	r6, #0
   18314:	clz	r3, r3
   18318:	lsr	r3, r3, #5
   1831c:	ldr	r2, [sp, #44]	; 0x2c
   18320:	tst	r2, r3
   18324:	beq	17b14 <lchmod@@Base+0xf38>
   18328:	b	17e30 <lchmod@@Base+0x1254>
   1832c:	sub	r3, fp, #2
   18330:	clz	r3, r3
   18334:	lsr	r3, r3, #5
   18338:	b	1831c <lchmod@@Base+0x1740>
   1833c:	ldr	r3, [sp, #52]	; 0x34
   18340:	ldrb	r5, [r3]
   18344:	cmp	r5, #126	; 0x7e
   18348:	ldrls	pc, [pc, r5, lsl #2]
   1834c:	b	17ff8 <lchmod@@Base+0x141c>
   18350:	strdeq	r7, [r1], -r0
   18354:	strdeq	r7, [r1], -r8
   18358:	strdeq	r7, [r1], -r8
   1835c:	strdeq	r7, [r1], -r8
   18360:	strdeq	r7, [r1], -r8
   18364:	strdeq	r7, [r1], -r8
   18368:	strdeq	r7, [r1], -r8
   1836c:	ldrdeq	r7, [r1], -r4
   18370:	andeq	r7, r1, ip, asr #29
   18374:	andeq	r8, r1, r8, lsl #11
   18378:	andeq	r7, r1, r0, asr #29
   1837c:	andeq	r8, r1, ip, ror r5
   18380:	muleq	r1, ip, lr
   18384:	andeq	r7, r1, r8, ror #29
   18388:	strdeq	r7, [r1], -r8
   1838c:	strdeq	r7, [r1], -r8
   18390:	strdeq	r7, [r1], -r8
   18394:	strdeq	r7, [r1], -r8
   18398:	strdeq	r7, [r1], -r8
   1839c:	strdeq	r7, [r1], -r8
   183a0:	strdeq	r7, [r1], -r8
   183a4:	strdeq	r7, [r1], -r8
   183a8:	strdeq	r7, [r1], -r8
   183ac:	strdeq	r7, [r1], -r8
   183b0:	strdeq	r7, [r1], -r8
   183b4:	strdeq	r7, [r1], -r8
   183b8:	strdeq	r7, [r1], -r8
   183bc:	strdeq	r7, [r1], -r8
   183c0:	strdeq	r7, [r1], -r8
   183c4:	strdeq	r7, [r1], -r8
   183c8:	strdeq	r7, [r1], -r8
   183cc:	strdeq	r7, [r1], -r8
   183d0:	andeq	r8, r1, r4, ror r5
   183d4:	ldrdeq	r7, [r1], -ip
   183d8:	ldrdeq	r7, [r1], -ip
   183dc:	andeq	r8, r1, r8, asr r5
   183e0:	ldrdeq	r7, [r1], -ip
   183e4:	andeq	r8, r1, ip, asr #10
   183e8:	ldrdeq	r7, [r1], -ip
   183ec:	andeq	r7, r1, r8, lsr sp
   183f0:	ldrdeq	r7, [r1], -ip
   183f4:	ldrdeq	r7, [r1], -ip
   183f8:	ldrdeq	r7, [r1], -ip
   183fc:	andeq	r8, r1, ip, asr #10
   18400:	andeq	r8, r1, ip, asr #10
   18404:	andeq	r8, r1, ip, asr #10
   18408:	andeq	r8, r1, ip, asr #10
   1840c:	andeq	r8, r1, ip, asr #10
   18410:	andeq	r8, r1, ip, asr #10
   18414:	andeq	r8, r1, ip, asr #10
   18418:	andeq	r8, r1, ip, asr #10
   1841c:	andeq	r8, r1, ip, asr #10
   18420:	andeq	r8, r1, ip, asr #10
   18424:	andeq	r8, r1, ip, asr #10
   18428:	andeq	r8, r1, ip, asr #10
   1842c:	andeq	r8, r1, ip, asr #10
   18430:	andeq	r8, r1, ip, asr #10
   18434:	andeq	r8, r1, ip, asr #10
   18438:	andeq	r8, r1, ip, asr #10
   1843c:	ldrdeq	r7, [r1], -ip
   18440:	ldrdeq	r7, [r1], -ip
   18444:	ldrdeq	r7, [r1], -ip
   18448:	ldrdeq	r7, [r1], -ip
   1844c:	andeq	r7, r1, ip, lsl #26
   18450:	strdeq	r7, [r1], -r8
   18454:	andeq	r8, r1, ip, asr #10
   18458:	andeq	r8, r1, ip, asr #10
   1845c:	andeq	r8, r1, ip, asr #10
   18460:	andeq	r8, r1, ip, asr #10
   18464:	andeq	r8, r1, ip, asr #10
   18468:	andeq	r8, r1, ip, asr #10
   1846c:	andeq	r8, r1, ip, asr #10
   18470:	andeq	r8, r1, ip, asr #10
   18474:	andeq	r8, r1, ip, asr #10
   18478:	andeq	r8, r1, ip, asr #10
   1847c:	andeq	r8, r1, ip, asr #10
   18480:	andeq	r8, r1, ip, asr #10
   18484:	andeq	r8, r1, ip, asr #10
   18488:	andeq	r8, r1, ip, asr #10
   1848c:	andeq	r8, r1, ip, asr #10
   18490:	andeq	r8, r1, ip, asr #10
   18494:	andeq	r8, r1, ip, asr #10
   18498:	andeq	r8, r1, ip, asr #10
   1849c:	andeq	r8, r1, ip, asr #10
   184a0:	andeq	r8, r1, ip, asr #10
   184a4:	andeq	r8, r1, ip, asr #10
   184a8:	andeq	r8, r1, ip, asr #10
   184ac:	andeq	r8, r1, ip, asr #10
   184b0:	andeq	r8, r1, ip, asr #10
   184b4:	andeq	r8, r1, ip, asr #10
   184b8:	andeq	r8, r1, ip, asr #10
   184bc:	ldrdeq	r7, [r1], -ip
   184c0:			; <UNDEFINED> instruction: 0x00017cb4
   184c4:	andeq	r8, r1, ip, asr #10
   184c8:	ldrdeq	r7, [r1], -ip
   184cc:	andeq	r8, r1, ip, asr #10
   184d0:	ldrdeq	r7, [r1], -ip
   184d4:	andeq	r8, r1, ip, asr #10
   184d8:	andeq	r8, r1, ip, asr #10
   184dc:	andeq	r8, r1, ip, asr #10
   184e0:	andeq	r8, r1, ip, asr #10
   184e4:	andeq	r8, r1, ip, asr #10
   184e8:	andeq	r8, r1, ip, asr #10
   184ec:	andeq	r8, r1, ip, asr #10
   184f0:	andeq	r8, r1, ip, asr #10
   184f4:	andeq	r8, r1, ip, asr #10
   184f8:	andeq	r8, r1, ip, asr #10
   184fc:	andeq	r8, r1, ip, asr #10
   18500:	andeq	r8, r1, ip, asr #10
   18504:	andeq	r8, r1, ip, asr #10
   18508:	andeq	r8, r1, ip, asr #10
   1850c:	andeq	r8, r1, ip, asr #10
   18510:	andeq	r8, r1, ip, asr #10
   18514:	andeq	r8, r1, ip, asr #10
   18518:	andeq	r8, r1, ip, asr #10
   1851c:	andeq	r8, r1, ip, asr #10
   18520:	andeq	r8, r1, ip, asr #10
   18524:	andeq	r8, r1, ip, asr #10
   18528:	andeq	r8, r1, ip, asr #10
   1852c:	andeq	r8, r1, ip, asr #10
   18530:	andeq	r8, r1, ip, asr #10
   18534:	andeq	r8, r1, ip, asr #10
   18538:	andeq	r8, r1, ip, asr #10
   1853c:	ldrdeq	r7, [r1], -r8
   18540:	ldrdeq	r7, [r1], -ip
   18544:	ldrdeq	r7, [r1], -r8
   18548:	andeq	r8, r1, r8, asr r5
   1854c:	mov	r6, r7
   18550:	mov	r7, #0
   18554:	b	17d04 <lchmod@@Base+0x1128>
   18558:	cmp	r9, #0
   1855c:	mov	r2, #0
   18560:	beq	17fc8 <lchmod@@Base+0x13ec>
   18564:	mov	r6, #0
   18568:	mov	r7, r2
   1856c:	mov	r3, r6
   18570:	b	17b24 <lchmod@@Base+0xf48>
   18574:	mov	r2, #0
   18578:	b	17fdc <lchmod@@Base+0x1400>
   1857c:	mov	r7, #0
   18580:	mov	r3, #118	; 0x76
   18584:	b	17ce8 <lchmod@@Base+0x110c>
   18588:	mov	r7, #0
   1858c:	mov	r3, #116	; 0x74
   18590:	b	17e18 <lchmod@@Base+0x123c>
   18594:	ldr	r3, [sp, #44]	; 0x2c
   18598:	b	17b4c <lchmod@@Base+0xf70>
   1859c:	ldr	r3, [sp, #44]	; 0x2c
   185a0:	cmp	r3, #0
   185a4:	bne	18a14 <lchmod@@Base+0x1e38>
   185a8:	add	r9, r9, #1
   185ac:	mov	r6, #0
   185b0:	ldr	r3, [sp, #48]	; 0x30
   185b4:	mov	r5, #92	; 0x5c
   185b8:	b	17dd8 <lchmod@@Base+0x11fc>
   185bc:	ldr	r3, [sp, #32]
   185c0:	ldrb	r2, [r3, #1]
   185c4:	adds	r2, r2, #0
   185c8:	movne	r2, #1
   185cc:	b	17af4 <lchmod@@Base+0xf18>
   185d0:	ldr	r3, [sp, #156]	; 0x9c
   185d4:	ands	r3, r3, #4
   185d8:	beq	18600 <lchmod@@Base+0x1a24>
   185dc:	ldr	r2, [sp, #28]
   185e0:	add	r3, r9, #2
   185e4:	cmp	r3, r2
   185e8:	bcs	185fc <lchmod@@Base+0x1a20>
   185ec:	ldr	r2, [sp, #52]	; 0x34
   185f0:	ldrb	r5, [r2, #1]
   185f4:	cmp	r5, #63	; 0x3f
   185f8:	beq	18a78 <lchmod@@Base+0x1e9c>
   185fc:	mov	r3, #0
   18600:	mov	r5, #63	; 0x3f
   18604:	mov	r6, r3
   18608:	b	17b14 <lchmod@@Base+0xf38>
   1860c:	ldr	r3, [sp, #44]	; 0x2c
   18610:	cmp	r3, #0
   18614:	bne	18a14 <lchmod@@Base+0x1e38>
   18618:	mov	r6, r3
   1861c:	mov	r5, #63	; 0x3f
   18620:	b	17b4c <lchmod@@Base+0xf70>
   18624:	ldr	r1, [sp, #28]
   18628:	mov	r2, #0
   1862c:	mov	r3, #0
   18630:	strd	r2, [sp, #104]	; 0x68
   18634:	cmn	r1, #1
   18638:	bne	18648 <lchmod@@Base+0x1a6c>
   1863c:	ldr	r0, [sp, #32]
   18640:	bl	116e0 <strlen@plt>
   18644:	str	r0, [sp, #28]
   18648:	str	r8, [sp, #76]	; 0x4c
   1864c:	mov	r3, #0
   18650:	str	sl, [sp, #80]	; 0x50
   18654:	ldr	sl, [sp, #32]
   18658:	str	r5, [sp, #84]	; 0x54
   1865c:	mov	r5, r3
   18660:	ldr	r8, [sp, #44]	; 0x2c
   18664:	str	r7, [sp, #88]	; 0x58
   18668:	str	r4, [sp, #92]	; 0x5c
   1866c:	ldr	r2, [sp, #28]
   18670:	add	r4, r9, r5
   18674:	add	r3, sp, #104	; 0x68
   18678:	add	r7, sl, r4
   1867c:	add	r0, sp, #100	; 0x64
   18680:	mov	r1, r7
   18684:	sub	r2, r2, r4
   18688:	bl	1b59c <lchmod@@Base+0x49c0>
   1868c:	subs	r1, r0, #0
   18690:	beq	186dc <lchmod@@Base+0x1b00>
   18694:	cmn	r1, #1
   18698:	beq	18a54 <lchmod@@Base+0x1e78>
   1869c:	cmn	r1, #2
   186a0:	beq	18b74 <lchmod@@Base+0x1f98>
   186a4:	cmp	fp, #2
   186a8:	movne	r3, #0
   186ac:	andeq	r3, r8, #1
   186b0:	cmp	r3, #0
   186b4:	bne	18840 <lchmod@@Base+0x1c64>
   186b8:	ldr	r0, [sp, #100]	; 0x64
   186bc:	add	r5, r5, r1
   186c0:	bl	115cc <iswprint@plt>
   186c4:	cmp	r0, #0
   186c8:	add	r0, sp, #104	; 0x68
   186cc:	moveq	r6, #0
   186d0:	bl	11548 <mbsinit@plt>
   186d4:	cmp	r0, #0
   186d8:	beq	1866c <lchmod@@Base+0x1a90>
   186dc:	ldr	r3, [sp, #40]	; 0x28
   186e0:	mov	ip, r5
   186e4:	eor	r2, r6, #1
   186e8:	ldr	r8, [sp, #76]	; 0x4c
   186ec:	ldr	sl, [sp, #80]	; 0x50
   186f0:	and	r2, r2, r3
   186f4:	ldr	r5, [sp, #84]	; 0x54
   186f8:	ldr	r7, [sp, #88]	; 0x58
   186fc:	ldr	r4, [sp, #92]	; 0x5c
   18700:	cmp	ip, #1
   18704:	bls	18040 <lchmod@@Base+0x1464>
   18708:	add	r1, ip, r9
   1870c:	mov	r0, #39	; 0x27
   18710:	ldr	lr, [sp, #52]	; 0x34
   18714:	mov	ip, #0
   18718:	str	r6, [sp, #52]	; 0x34
   1871c:	ldr	r6, [sp, #48]	; 0x30
   18720:	b	187dc <lchmod@@Base+0x1c00>
   18724:	ldr	ip, [sp, #44]	; 0x2c
   18728:	sub	r3, fp, #2
   1872c:	clz	r3, r3
   18730:	lsr	r3, r3, #5
   18734:	cmp	ip, #0
   18738:	bne	1894c <lchmod@@Base+0x1d70>
   1873c:	eor	ip, r6, #1
   18740:	ands	r3, r3, ip
   18744:	beq	18774 <lchmod@@Base+0x1b98>
   18748:	cmp	sl, r4
   1874c:	add	ip, r4, #1
   18750:	strbhi	r0, [r8, r4]
   18754:	cmp	sl, ip
   18758:	movhi	r6, #36	; 0x24
   1875c:	strbhi	r6, [r8, ip]
   18760:	add	ip, r4, #2
   18764:	mov	r6, r3
   18768:	cmp	sl, ip
   1876c:	add	r4, r4, #3
   18770:	strbhi	r0, [r8, ip]
   18774:	cmp	sl, r4
   18778:	movhi	r3, #92	; 0x5c
   1877c:	strbhi	r3, [r8, r4]
   18780:	add	r3, r4, #1
   18784:	cmp	sl, r3
   18788:	bls	18798 <lchmod@@Base+0x1bbc>
   1878c:	lsr	ip, r5, #6
   18790:	add	ip, ip, #48	; 0x30
   18794:	strb	ip, [r8, r3]
   18798:	add	r3, r4, #2
   1879c:	cmp	sl, r3
   187a0:	bls	187b0 <lchmod@@Base+0x1bd4>
   187a4:	ubfx	ip, r5, #3, #3
   187a8:	add	ip, ip, #48	; 0x30
   187ac:	strb	ip, [r8, r3]
   187b0:	add	r9, r9, #1
   187b4:	and	r5, r5, #7
   187b8:	cmp	r9, r1
   187bc:	add	r5, r5, #48	; 0x30
   187c0:	add	r4, r4, #3
   187c4:	bcs	18978 <lchmod@@Base+0x1d9c>
   187c8:	mov	ip, r2
   187cc:	cmp	sl, r4
   187d0:	strbhi	r5, [r8, r4]
   187d4:	add	r4, r4, #1
   187d8:	ldrb	r5, [lr, #1]!
   187dc:	cmp	r2, #0
   187e0:	bne	18724 <lchmod@@Base+0x1b48>
   187e4:	eor	r3, ip, #1
   187e8:	cmp	r7, #0
   187ec:	and	r3, r3, r6
   187f0:	uxtb	r3, r3
   187f4:	beq	18808 <lchmod@@Base+0x1c2c>
   187f8:	cmp	sl, r4
   187fc:	movhi	r7, #92	; 0x5c
   18800:	strbhi	r7, [r8, r4]
   18804:	add	r4, r4, #1
   18808:	add	r9, r9, #1
   1880c:	cmp	r9, r1
   18810:	bcs	18960 <lchmod@@Base+0x1d84>
   18814:	cmp	r3, #0
   18818:	beq	18998 <lchmod@@Base+0x1dbc>
   1881c:	cmp	sl, r4
   18820:	add	r3, r4, #1
   18824:	mov	r7, #0
   18828:	strbhi	r0, [r8, r4]
   1882c:	cmp	sl, r3
   18830:	add	r4, r4, #2
   18834:	mov	r6, r7
   18838:	strbhi	r0, [r8, r3]
   1883c:	b	187cc <lchmod@@Base+0x1bf0>
   18840:	cmp	r1, #1
   18844:	beq	186b8 <lchmod@@Base+0x1adc>
   18848:	add	r2, r4, #1
   1884c:	add	r3, sl, r1
   18850:	add	r2, sl, r2
   18854:	add	r4, r3, r4
   18858:	ldrb	r3, [r2], #1
   1885c:	sub	r3, r3, #91	; 0x5b
   18860:	cmp	r3, #33	; 0x21
   18864:	ldrls	pc, [pc, r3, lsl #2]
   18868:	b	188f4 <lchmod@@Base+0x1d18>
   1886c:	andeq	r8, r1, r0, lsl #18
   18870:	andeq	r8, r1, r0, lsl #18
   18874:	strdeq	r8, [r1], -r4
   18878:	andeq	r8, r1, r0, lsl #18
   1887c:	strdeq	r8, [r1], -r4
   18880:	andeq	r8, r1, r0, lsl #18
   18884:	strdeq	r8, [r1], -r4
   18888:	strdeq	r8, [r1], -r4
   1888c:	strdeq	r8, [r1], -r4
   18890:	strdeq	r8, [r1], -r4
   18894:	strdeq	r8, [r1], -r4
   18898:	strdeq	r8, [r1], -r4
   1889c:	strdeq	r8, [r1], -r4
   188a0:	strdeq	r8, [r1], -r4
   188a4:	strdeq	r8, [r1], -r4
   188a8:	strdeq	r8, [r1], -r4
   188ac:	strdeq	r8, [r1], -r4
   188b0:	strdeq	r8, [r1], -r4
   188b4:	strdeq	r8, [r1], -r4
   188b8:	strdeq	r8, [r1], -r4
   188bc:	strdeq	r8, [r1], -r4
   188c0:	strdeq	r8, [r1], -r4
   188c4:	strdeq	r8, [r1], -r4
   188c8:	strdeq	r8, [r1], -r4
   188cc:	strdeq	r8, [r1], -r4
   188d0:	strdeq	r8, [r1], -r4
   188d4:	strdeq	r8, [r1], -r4
   188d8:	strdeq	r8, [r1], -r4
   188dc:	strdeq	r8, [r1], -r4
   188e0:	strdeq	r8, [r1], -r4
   188e4:	strdeq	r8, [r1], -r4
   188e8:	strdeq	r8, [r1], -r4
   188ec:	strdeq	r8, [r1], -r4
   188f0:	andeq	r8, r1, r0, lsl #18
   188f4:	cmp	r4, r2
   188f8:	bne	18858 <lchmod@@Base+0x1c7c>
   188fc:	b	186b8 <lchmod@@Base+0x1adc>
   18900:	mov	r8, #2
   18904:	ldr	fp, [sp, #76]	; 0x4c
   18908:	ldr	sl, [sp, #80]	; 0x50
   1890c:	b	17e38 <lchmod@@Base+0x125c>
   18910:	ldr	r2, [sp, #40]	; 0x28
   18914:	str	fp, [sp, #152]	; 0x98
   18918:	mov	fp, r8
   1891c:	ldr	r8, [sp, #152]	; 0x98
   18920:	and	r2, r2, r3
   18924:	str	r2, [sp, #40]	; 0x28
   18928:	b	17e38 <lchmod@@Base+0x125c>
   1892c:	cmp	sl, r4
   18930:	movls	r0, r4
   18934:	bls	17f68 <lchmod@@Base+0x138c>
   18938:	ldr	r3, [sp, #48]	; 0x30
   1893c:	b	17f58 <lchmod@@Base+0x137c>
   18940:	str	sl, [sp, #72]	; 0x48
   18944:	ldr	sl, [sp, #44]	; 0x2c
   18948:	b	17da8 <lchmod@@Base+0x11cc>
   1894c:	str	r3, [sp, #40]	; 0x28
   18950:	str	fp, [sp, #152]	; 0x98
   18954:	mov	fp, r8
   18958:	ldr	r8, [sp, #152]	; 0x98
   1895c:	b	17e38 <lchmod@@Base+0x125c>
   18960:	str	r6, [sp, #48]	; 0x30
   18964:	ldr	r6, [sp, #52]	; 0x34
   18968:	b	17dd8 <lchmod@@Base+0x11fc>
   1896c:	mov	r6, #0
   18970:	ldr	r2, [sp, #40]	; 0x28
   18974:	b	18708 <lchmod@@Base+0x1b2c>
   18978:	str	r6, [sp, #48]	; 0x30
   1897c:	ldr	r6, [sp, #52]	; 0x34
   18980:	b	17bc4 <lchmod@@Base+0xfe8>
   18984:	add	r4, r4, #4
   18988:	mov	r6, #0
   1898c:	str	r3, [sp, #48]	; 0x30
   18990:	mov	r5, #48	; 0x30
   18994:	b	17b4c <lchmod@@Base+0xf70>
   18998:	mov	r7, r3
   1899c:	b	187cc <lchmod@@Base+0x1bf0>
   189a0:	mov	r3, #1
   189a4:	movw	r2, #50124	; 0xc3cc
   189a8:	movt	r2, #1
   189ac:	mov	r4, r3
   189b0:	str	r3, [sp, #36]	; 0x24
   189b4:	str	r3, [sp, #40]	; 0x28
   189b8:	str	sl, [sp, #44]	; 0x2c
   189bc:	str	sl, [sp, #48]	; 0x30
   189c0:	str	r3, [sp, #56]	; 0x38
   189c4:	str	r2, [sp, #60]	; 0x3c
   189c8:	str	sl, [sp, #68]	; 0x44
   189cc:	str	sl, [sp, #72]	; 0x48
   189d0:	b	17674 <lchmod@@Base+0xa98>
   189d4:	mov	r3, r6
   189d8:	mov	r5, #48	; 0x30
   189dc:	mov	r6, #0
   189e0:	b	17b4c <lchmod@@Base+0xf70>
   189e4:	mov	r5, r3
   189e8:	b	17ec4 <lchmod@@Base+0x12e8>
   189ec:	cmp	sl, r4
   189f0:	mov	r5, #48	; 0x30
   189f4:	movhi	r3, #48	; 0x30
   189f8:	strbhi	r3, [r8, r4]
   189fc:	add	r3, r0, #2
   18a00:	add	r4, r0, #3
   18a04:	cmp	sl, r3
   18a08:	movhi	r1, #48	; 0x30
   18a0c:	strbhi	r1, [r8, r3]
   18a10:	b	17f9c <lchmod@@Base+0x13c0>
   18a14:	str	fp, [sp, #152]	; 0x98
   18a18:	mov	fp, r8
   18a1c:	ldr	r8, [sp, #152]	; 0x98
   18a20:	b	17e38 <lchmod@@Base+0x125c>
   18a24:	ldr	r3, [sp, #164]	; 0xa4
   18a28:	ldrb	r3, [r3]
   18a2c:	cmp	r3, #0
   18a30:	beq	17644 <lchmod@@Base+0xa68>
   18a34:	ldr	r2, [sp, #164]	; 0xa4
   18a38:	cmp	sl, r4
   18a3c:	strbhi	r3, [fp, r4]
   18a40:	add	r4, r4, #1
   18a44:	ldrb	r3, [r2, #1]!
   18a48:	cmp	r3, #0
   18a4c:	bne	18a38 <lchmod@@Base+0x1e5c>
   18a50:	b	17644 <lchmod@@Base+0xa68>
   18a54:	mov	ip, r5
   18a58:	mov	r6, #0
   18a5c:	ldr	r2, [sp, #40]	; 0x28
   18a60:	ldr	r8, [sp, #76]	; 0x4c
   18a64:	ldr	sl, [sp, #80]	; 0x50
   18a68:	ldr	r5, [sp, #84]	; 0x54
   18a6c:	ldr	r7, [sp, #88]	; 0x58
   18a70:	ldr	r4, [sp, #92]	; 0x5c
   18a74:	b	18700 <lchmod@@Base+0x1b24>
   18a78:	ldr	r2, [sp, #32]
   18a7c:	ldrb	r1, [r2, r3]
   18a80:	sub	r2, r1, #33	; 0x21
   18a84:	cmp	r2, #29
   18a88:	ldrls	pc, [pc, r2, lsl #2]
   18a8c:	b	18b68 <lchmod@@Base+0x1f8c>
   18a90:	andeq	r8, r1, r8, lsl #22
   18a94:	andeq	r8, r1, r8, ror #22
   18a98:	andeq	r8, r1, r8, ror #22
   18a9c:	andeq	r8, r1, r8, ror #22
   18aa0:	andeq	r8, r1, r8, ror #22
   18aa4:	andeq	r8, r1, r8, ror #22
   18aa8:	andeq	r8, r1, r8, lsl #22
   18aac:	andeq	r8, r1, r8, lsl #22
   18ab0:	andeq	r8, r1, r8, lsl #22
   18ab4:	andeq	r8, r1, r8, ror #22
   18ab8:	andeq	r8, r1, r8, ror #22
   18abc:	andeq	r8, r1, r8, ror #22
   18ac0:	andeq	r8, r1, r8, lsl #22
   18ac4:	andeq	r8, r1, r8, ror #22
   18ac8:	andeq	r8, r1, r8, lsl #22
   18acc:	andeq	r8, r1, r8, ror #22
   18ad0:	andeq	r8, r1, r8, ror #22
   18ad4:	andeq	r8, r1, r8, ror #22
   18ad8:	andeq	r8, r1, r8, ror #22
   18adc:	andeq	r8, r1, r8, ror #22
   18ae0:	andeq	r8, r1, r8, ror #22
   18ae4:	andeq	r8, r1, r8, ror #22
   18ae8:	andeq	r8, r1, r8, ror #22
   18aec:	andeq	r8, r1, r8, ror #22
   18af0:	andeq	r8, r1, r8, ror #22
   18af4:	andeq	r8, r1, r8, ror #22
   18af8:	andeq	r8, r1, r8, ror #22
   18afc:	andeq	r8, r1, r8, lsl #22
   18b00:	andeq	r8, r1, r8, lsl #22
   18b04:	andeq	r8, r1, r8, lsl #22
   18b08:	ldr	r2, [sp, #44]	; 0x2c
   18b0c:	cmp	r2, #0
   18b10:	bne	18c6c <lchmod@@Base+0x2090>
   18b14:	cmp	sl, r4
   18b18:	mov	r5, r1
   18b1c:	movhi	r2, #63	; 0x3f
   18b20:	mov	r9, r3
   18b24:	strbhi	r2, [r8, r4]
   18b28:	add	r2, r4, #1
   18b2c:	cmp	sl, r2
   18b30:	movhi	r0, #34	; 0x22
   18b34:	strbhi	r0, [r8, r2]
   18b38:	add	r2, r4, #2
   18b3c:	cmp	sl, r2
   18b40:	movhi	r0, #34	; 0x22
   18b44:	strbhi	r0, [r8, r2]
   18b48:	add	r2, r4, #3
   18b4c:	add	r4, r4, #4
   18b50:	cmp	sl, r2
   18b54:	movhi	r0, #63	; 0x3f
   18b58:	strbhi	r0, [r8, r2]
   18b5c:	mov	r2, #0
   18b60:	mov	r6, r2
   18b64:	b	17f9c <lchmod@@Base+0x13c0>
   18b68:	mov	r3, #0
   18b6c:	mov	r6, r3
   18b70:	b	17b14 <lchmod@@Base+0xf38>
   18b74:	ldr	r0, [sp, #28]
   18b78:	mov	r1, r4
   18b7c:	mov	r2, r7
   18b80:	mov	r3, r5
   18b84:	mov	ip, r5
   18b88:	ldr	r8, [sp, #76]	; 0x4c
   18b8c:	ldr	sl, [sp, #80]	; 0x50
   18b90:	cmp	r1, r0
   18b94:	ldr	r5, [sp, #84]	; 0x54
   18b98:	ldr	r7, [sp, #88]	; 0x58
   18b9c:	ldr	r4, [sp, #92]	; 0x5c
   18ba0:	bcs	18bd4 <lchmod@@Base+0x1ff8>
   18ba4:	ldrb	r6, [r2]
   18ba8:	cmp	r6, #0
   18bac:	bne	18bc0 <lchmod@@Base+0x1fe4>
   18bb0:	b	18cf4 <lchmod@@Base+0x2118>
   18bb4:	ldrb	r6, [r2, #1]!
   18bb8:	cmp	r6, #0
   18bbc:	beq	18c7c <lchmod@@Base+0x20a0>
   18bc0:	add	r3, r3, #1
   18bc4:	add	r1, r9, r3
   18bc8:	cmp	r1, r0
   18bcc:	bcc	18bb4 <lchmod@@Base+0x1fd8>
   18bd0:	mov	ip, r3
   18bd4:	mov	r6, #0
   18bd8:	ldr	r2, [sp, #40]	; 0x28
   18bdc:	b	18700 <lchmod@@Base+0x1b24>
   18be0:	mov	r3, #1
   18be4:	mov	r2, #0
   18be8:	mov	r4, r2
   18bec:	str	r3, [sp, #36]	; 0x24
   18bf0:	str	r3, [sp, #40]	; 0x28
   18bf4:	str	r3, [sp, #44]	; 0x2c
   18bf8:	str	r2, [sp, #48]	; 0x30
   18bfc:	str	r3, [sp, #56]	; 0x38
   18c00:	movw	r3, #50124	; 0xc3cc
   18c04:	movt	r3, #1
   18c08:	str	r3, [sp, #60]	; 0x3c
   18c0c:	str	r2, [sp, #68]	; 0x44
   18c10:	str	r2, [sp, #72]	; 0x48
   18c14:	b	17674 <lchmod@@Base+0xa98>
   18c18:	mov	r2, r3
   18c1c:	ldr	r3, [sp, #60]	; 0x3c
   18c20:	cmp	r3, #0
   18c24:	moveq	r2, #0
   18c28:	andne	r2, r2, #1
   18c2c:	cmp	r2, #0
   18c30:	beq	18c5c <lchmod@@Base+0x2080>
   18c34:	mov	r2, r3
   18c38:	ldrb	r3, [r3]
   18c3c:	cmp	r3, #0
   18c40:	beq	18c5c <lchmod@@Base+0x2080>
   18c44:	cmp	sl, r4
   18c48:	strbhi	r3, [fp, r4]
   18c4c:	add	r4, r4, #1
   18c50:	ldrb	r3, [r2, #1]!
   18c54:	cmp	r3, #0
   18c58:	bne	18c44 <lchmod@@Base+0x2068>
   18c5c:	cmp	sl, r4
   18c60:	movhi	r3, #0
   18c64:	strbhi	r3, [fp, r4]
   18c68:	b	17e7c <lchmod@@Base+0x12a0>
   18c6c:	str	fp, [sp, #152]	; 0x98
   18c70:	mov	fp, r8
   18c74:	ldr	r8, [sp, #152]	; 0x98
   18c78:	b	17e44 <lchmod@@Base+0x1268>
   18c7c:	mov	ip, r3
   18c80:	ldr	r2, [sp, #40]	; 0x28
   18c84:	b	18700 <lchmod@@Base+0x1b24>
   18c88:	str	fp, [sp, #152]	; 0x98
   18c8c:	mov	fp, r8
   18c90:	ldr	r8, [sp, #152]	; 0x98
   18c94:	sub	r3, r8, #2
   18c98:	clz	r3, r3
   18c9c:	lsr	r3, r3, #5
   18ca0:	str	r3, [sp, #40]	; 0x28
   18ca4:	b	17e38 <lchmod@@Base+0x125c>
   18ca8:	mov	ip, #5
   18cac:	ldr	r3, [sp, #28]
   18cb0:	str	ip, [sp]
   18cb4:	ldr	r2, [sp, #156]	; 0x9c
   18cb8:	ldr	ip, [sp, #164]	; 0xa4
   18cbc:	ldr	r0, [sp, #160]	; 0xa0
   18cc0:	str	r2, [sp, #4]
   18cc4:	ldr	r2, [sp, #32]
   18cc8:	ldr	r1, [sp, #72]	; 0x48
   18ccc:	str	ip, [sp, #12]
   18cd0:	ldr	ip, [sp, #168]	; 0xa8
   18cd4:	str	r0, [sp, #8]
   18cd8:	mov	r0, fp
   18cdc:	str	ip, [sp, #16]
   18ce0:	bl	1758c <lchmod@@Base+0x9b0>
   18ce4:	mov	r4, r0
   18ce8:	b	17e7c <lchmod@@Base+0x12a0>
   18cec:	mov	r8, #2
   18cf0:	b	17e38 <lchmod@@Base+0x125c>
   18cf4:	ldr	r2, [sp, #40]	; 0x28
   18cf8:	b	18700 <lchmod@@Base+0x1b24>
   18cfc:	mov	r3, #0
   18d00:	mov	r2, #1
   18d04:	mov	r4, r3
   18d08:	strd	r2, [sp, #36]	; 0x24
   18d0c:	strd	r2, [sp, #44]	; 0x2c
   18d10:	str	r2, [sp, #56]	; 0x38
   18d14:	str	r3, [sp, #68]	; 0x44
   18d18:	str	r3, [sp, #72]	; 0x48
   18d1c:	movw	r3, #50144	; 0xc3e0
   18d20:	movt	r3, #1
   18d24:	str	r3, [sp, #60]	; 0x3c
   18d28:	b	17674 <lchmod@@Base+0xa98>
   18d2c:	mov	r3, #0
   18d30:	mov	r1, #1
   18d34:	mov	r2, r3
   18d38:	str	r1, [sp, #36]	; 0x24
   18d3c:	str	r3, [sp, #48]	; 0x30
   18d40:	str	sl, [sp, #72]	; 0x48
   18d44:	b	17c7c <lchmod@@Base+0x10a0>
   18d48:	bl	11878 <abort@plt>
   18d4c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   18d50:	mov	r4, r0
   18d54:	mov	r5, r3
   18d58:	strd	r6, [sp, #8]
   18d5c:	movw	r7, #53648	; 0xd190
   18d60:	movt	r7, #2
   18d64:	strd	r8, [sp, #16]
   18d68:	strd	sl, [sp, #24]
   18d6c:	mov	sl, r1
   18d70:	mov	fp, r2
   18d74:	str	lr, [sp, #32]
   18d78:	sub	sp, sp, #60	; 0x3c
   18d7c:	bl	1171c <__errno_location@plt>
   18d80:	mov	r8, r0
   18d84:	cmn	r4, #-2147483647	; 0x80000001
   18d88:	ldr	r6, [r7]
   18d8c:	movne	r0, #0
   18d90:	moveq	r0, #1
   18d94:	ldr	r3, [r8]
   18d98:	orrs	r0, r0, r4, lsr #31
   18d9c:	str	r3, [sp, #28]
   18da0:	bne	18f30 <lchmod@@Base+0x2354>
   18da4:	ldr	r3, [r7, #4]
   18da8:	cmp	r3, r4
   18dac:	bgt	18e0c <lchmod@@Base+0x2230>
   18db0:	add	r1, r7, #8
   18db4:	sub	r2, r4, r3
   18db8:	str	r3, [sp, #52]	; 0x34
   18dbc:	cmp	r6, r1
   18dc0:	add	r2, r2, #1
   18dc4:	beq	18f08 <lchmod@@Base+0x232c>
   18dc8:	mov	r1, #8
   18dcc:	mov	r0, r6
   18dd0:	mvn	r3, #-2147483648	; 0x80000000
   18dd4:	str	r1, [sp]
   18dd8:	add	r1, sp, #52	; 0x34
   18ddc:	bl	1a0ac <lchmod@@Base+0x34d0>
   18de0:	mov	r6, r0
   18de4:	str	r0, [r7]
   18de8:	ldr	r0, [r7, #4]
   18dec:	mov	r1, #0
   18df0:	ldr	r2, [sp, #52]	; 0x34
   18df4:	sub	r2, r2, r0
   18df8:	add	r0, r6, r0, lsl #3
   18dfc:	lsl	r2, r2, #3
   18e00:	bl	11740 <memset@plt>
   18e04:	ldr	r3, [sp, #52]	; 0x34
   18e08:	str	r3, [r7, #4]
   18e0c:	ldr	r1, [r5, #4]
   18e10:	add	r0, r6, r4, lsl #3
   18e14:	add	ip, r5, #8
   18e18:	mov	r3, fp
   18e1c:	mov	r2, sl
   18e20:	ldr	r7, [r0, #4]
   18e24:	str	r0, [sp, #36]	; 0x24
   18e28:	str	ip, [sp, #40]	; 0x28
   18e2c:	orr	r0, r1, #1
   18e30:	ldr	r9, [r6, r4, lsl #3]
   18e34:	str	ip, [sp, #8]
   18e38:	ldr	lr, [r5, #44]	; 0x2c
   18e3c:	str	r0, [sp, #4]
   18e40:	ldr	ip, [r5]
   18e44:	mov	r1, r9
   18e48:	str	ip, [sp, #32]
   18e4c:	ldr	ip, [r5, #40]	; 0x28
   18e50:	str	ip, [sp, #12]
   18e54:	ldr	ip, [sp, #32]
   18e58:	str	lr, [sp, #16]
   18e5c:	str	r0, [sp, #44]	; 0x2c
   18e60:	mov	r0, r7
   18e64:	str	ip, [sp]
   18e68:	bl	1758c <lchmod@@Base+0x9b0>
   18e6c:	cmp	r9, r0
   18e70:	bhi	18ee0 <lchmod@@Base+0x2304>
   18e74:	add	r9, r0, #1
   18e78:	movw	r3, #53756	; 0xd1fc
   18e7c:	movt	r3, #2
   18e80:	cmp	r7, r3
   18e84:	str	r9, [r6, r4, lsl #3]
   18e88:	beq	18e94 <lchmod@@Base+0x22b8>
   18e8c:	mov	r0, r7
   18e90:	bl	1356c <__assert_fail@plt+0x1ca0>
   18e94:	mov	r0, r9
   18e98:	bl	19efc <lchmod@@Base+0x3320>
   18e9c:	ldr	ip, [r5]
   18ea0:	mov	r3, fp
   18ea4:	mov	r2, sl
   18ea8:	mov	r1, r9
   18eac:	mov	r7, r0
   18eb0:	ldr	lr, [sp, #36]	; 0x24
   18eb4:	ldr	r4, [r5, #40]	; 0x28
   18eb8:	str	r0, [lr, #4]
   18ebc:	ldr	lr, [r5, #44]	; 0x2c
   18ec0:	str	ip, [sp]
   18ec4:	ldr	ip, [sp, #44]	; 0x2c
   18ec8:	str	ip, [sp, #4]
   18ecc:	ldr	ip, [sp, #40]	; 0x28
   18ed0:	str	r4, [sp, #12]
   18ed4:	str	lr, [sp, #16]
   18ed8:	str	ip, [sp, #8]
   18edc:	bl	1758c <lchmod@@Base+0x9b0>
   18ee0:	ldr	r3, [sp, #28]
   18ee4:	mov	r0, r7
   18ee8:	str	r3, [r8]
   18eec:	add	sp, sp, #60	; 0x3c
   18ef0:	ldrd	r4, [sp]
   18ef4:	ldrd	r6, [sp, #8]
   18ef8:	ldrd	r8, [sp, #16]
   18efc:	ldrd	sl, [sp, #24]
   18f00:	add	sp, sp, #32
   18f04:	pop	{pc}		; (ldr pc, [sp], #4)
   18f08:	mov	r1, #8
   18f0c:	mvn	r3, #-2147483648	; 0x80000000
   18f10:	str	r1, [sp]
   18f14:	add	r1, sp, #52	; 0x34
   18f18:	bl	1a0ac <lchmod@@Base+0x34d0>
   18f1c:	ldrd	r2, [r7, #8]
   18f20:	mov	r6, r0
   18f24:	str	r0, [r7]
   18f28:	strd	r2, [r0]
   18f2c:	b	18de8 <lchmod@@Base+0x220c>
   18f30:	bl	11878 <abort@plt>
   18f34:	strd	r4, [sp, #-16]!
   18f38:	mov	r5, r0
   18f3c:	str	r6, [sp, #8]
   18f40:	str	lr, [sp, #12]
   18f44:	bl	1171c <__errno_location@plt>
   18f48:	mov	r4, r0
   18f4c:	cmp	r5, #0
   18f50:	ldr	r0, [pc, #32]	; 18f78 <lchmod@@Base+0x239c>
   18f54:	mov	r1, #48	; 0x30
   18f58:	movne	r0, r5
   18f5c:	ldr	r6, [r4]
   18f60:	bl	1a224 <lchmod@@Base+0x3648>
   18f64:	str	r6, [r4]
   18f68:	ldrd	r4, [sp]
   18f6c:	ldr	r6, [sp, #8]
   18f70:	add	sp, sp, #12
   18f74:	pop	{pc}		; (ldr pc, [sp], #4)
   18f78:	strdeq	sp, [r2], -ip
   18f7c:	ldr	r3, [pc, #12]	; 18f90 <lchmod@@Base+0x23b4>
   18f80:	cmp	r0, #0
   18f84:	moveq	r0, r3
   18f88:	ldr	r0, [r0]
   18f8c:	bx	lr
   18f90:	strdeq	sp, [r2], -ip
   18f94:	ldr	r3, [pc, #12]	; 18fa8 <lchmod@@Base+0x23cc>
   18f98:	cmp	r0, #0
   18f9c:	moveq	r0, r3
   18fa0:	str	r1, [r0]
   18fa4:	bx	lr
   18fa8:	strdeq	sp, [r2], -ip
   18fac:	ldr	r3, [pc, #52]	; 18fe8 <lchmod@@Base+0x240c>
   18fb0:	cmp	r0, #0
   18fb4:	push	{lr}		; (str lr, [sp, #-4]!)
   18fb8:	lsr	lr, r1, #5
   18fbc:	and	r1, r1, #31
   18fc0:	moveq	r0, r3
   18fc4:	add	r3, r0, #8
   18fc8:	ldr	ip, [r3, lr, lsl #2]
   18fcc:	lsr	r0, ip, r1
   18fd0:	eor	r2, r2, r0
   18fd4:	and	r0, r0, #1
   18fd8:	and	r2, r2, #1
   18fdc:	eor	r1, ip, r2, lsl r1
   18fe0:	str	r1, [r3, lr, lsl #2]
   18fe4:	pop	{pc}		; (ldr pc, [sp], #4)
   18fe8:	strdeq	sp, [r2], -ip
   18fec:	ldr	r3, [pc, #16]	; 19004 <lchmod@@Base+0x2428>
   18ff0:	cmp	r0, #0
   18ff4:	movne	r3, r0
   18ff8:	ldr	r0, [r3, #4]
   18ffc:	str	r1, [r3, #4]
   19000:	bx	lr
   19004:	strdeq	sp, [r2], -ip
   19008:	ldr	r3, [pc, #48]	; 19040 <lchmod@@Base+0x2464>
   1900c:	cmp	r0, #0
   19010:	mov	ip, #10
   19014:	moveq	r0, r3
   19018:	cmp	r2, #0
   1901c:	cmpne	r1, #0
   19020:	str	ip, [r0]
   19024:	beq	19034 <lchmod@@Base+0x2458>
   19028:	str	r1, [r0, #40]	; 0x28
   1902c:	str	r2, [r0, #44]	; 0x2c
   19030:	bx	lr
   19034:	str	r4, [sp, #-8]!
   19038:	str	lr, [sp, #4]
   1903c:	bl	11878 <abort@plt>
   19040:	strdeq	sp, [r2], -ip
   19044:	strd	r4, [sp, #-28]!	; 0xffffffe4
   19048:	strd	r6, [sp, #8]
   1904c:	mov	r7, r0
   19050:	mov	r6, r1
   19054:	strd	r8, [sp, #16]
   19058:	mov	r8, r2
   1905c:	mov	r9, r3
   19060:	str	lr, [sp, #24]
   19064:	sub	sp, sp, #28
   19068:	ldr	r4, [sp, #56]	; 0x38
   1906c:	ldr	ip, [pc, #104]	; 190dc <lchmod@@Base+0x2500>
   19070:	cmp	r4, #0
   19074:	moveq	r4, ip
   19078:	bl	1171c <__errno_location@plt>
   1907c:	ldr	ip, [r4, #44]	; 0x2c
   19080:	mov	r5, r0
   19084:	mov	r1, r6
   19088:	add	lr, r4, #8
   1908c:	mov	r3, r9
   19090:	ldr	r6, [r5]
   19094:	mov	r2, r8
   19098:	mov	r0, r7
   1909c:	str	ip, [sp, #16]
   190a0:	ldr	ip, [r4, #40]	; 0x28
   190a4:	str	lr, [sp, #8]
   190a8:	str	ip, [sp, #12]
   190ac:	ldr	ip, [r4, #4]
   190b0:	str	ip, [sp, #4]
   190b4:	ldr	ip, [r4]
   190b8:	str	ip, [sp]
   190bc:	bl	1758c <lchmod@@Base+0x9b0>
   190c0:	str	r6, [r5]
   190c4:	add	sp, sp, #28
   190c8:	ldrd	r4, [sp]
   190cc:	ldrd	r6, [sp, #8]
   190d0:	ldrd	r8, [sp, #16]
   190d4:	add	sp, sp, #24
   190d8:	pop	{pc}		; (ldr pc, [sp], #4)
   190dc:	strdeq	sp, [r2], -ip
   190e0:	strd	r4, [sp, #-36]!	; 0xffffffdc
   190e4:	cmp	r3, #0
   190e8:	ldr	r4, [pc, #220]	; 191cc <lchmod@@Base+0x25f0>
   190ec:	movne	r4, r3
   190f0:	strd	r6, [sp, #8]
   190f4:	mov	r6, r2
   190f8:	strd	r8, [sp, #16]
   190fc:	mov	r9, r0
   19100:	strd	sl, [sp, #24]
   19104:	mov	sl, r1
   19108:	str	lr, [sp, #32]
   1910c:	sub	sp, sp, #44	; 0x2c
   19110:	bl	1171c <__errno_location@plt>
   19114:	ldr	r5, [r4, #4]
   19118:	mov	r7, r0
   1911c:	mov	r1, #0
   19120:	add	r8, r4, #8
   19124:	mov	r3, sl
   19128:	ldr	ip, [r4, #44]	; 0x2c
   1912c:	mov	r2, r9
   19130:	mov	r0, r1
   19134:	ldr	lr, [r7]
   19138:	cmp	r6, r1
   1913c:	orreq	r5, r5, #1
   19140:	str	ip, [sp, #16]
   19144:	ldr	ip, [r4, #40]	; 0x28
   19148:	stmib	sp, {r5, r8, ip}
   1914c:	ldr	ip, [r4]
   19150:	str	lr, [sp, #28]
   19154:	str	ip, [sp]
   19158:	bl	1758c <lchmod@@Base+0x9b0>
   1915c:	add	r1, r0, #1
   19160:	mov	fp, r0
   19164:	mov	r0, r1
   19168:	str	r1, [sp, #36]	; 0x24
   1916c:	bl	19efc <lchmod@@Base+0x3320>
   19170:	ldr	ip, [r4, #44]	; 0x2c
   19174:	mov	r3, sl
   19178:	mov	r2, r9
   1917c:	ldr	r1, [sp, #36]	; 0x24
   19180:	str	ip, [sp, #16]
   19184:	ldr	ip, [r4, #40]	; 0x28
   19188:	str	r0, [sp, #32]
   1918c:	stmib	sp, {r5, r8, ip}
   19190:	ldr	ip, [r4]
   19194:	str	ip, [sp]
   19198:	bl	1758c <lchmod@@Base+0x9b0>
   1919c:	ldr	lr, [sp, #28]
   191a0:	cmp	r6, #0
   191a4:	ldr	r0, [sp, #32]
   191a8:	str	lr, [r7]
   191ac:	strne	fp, [r6]
   191b0:	add	sp, sp, #44	; 0x2c
   191b4:	ldrd	r4, [sp]
   191b8:	ldrd	r6, [sp, #8]
   191bc:	ldrd	r8, [sp, #16]
   191c0:	ldrd	sl, [sp, #24]
   191c4:	add	sp, sp, #32
   191c8:	pop	{pc}		; (ldr pc, [sp], #4)
   191cc:	strdeq	sp, [r2], -ip
   191d0:	mov	r3, r2
   191d4:	mov	r2, #0
   191d8:	b	190e0 <lchmod@@Base+0x2504>
   191dc:	strd	r4, [sp, #-24]!	; 0xffffffe8
   191e0:	movw	r5, #53648	; 0xd190
   191e4:	movt	r5, #2
   191e8:	ldr	r3, [r5, #4]
   191ec:	strd	r6, [sp, #8]
   191f0:	str	r8, [sp, #16]
   191f4:	str	lr, [sp, #20]
   191f8:	ldr	r7, [r5]
   191fc:	cmp	r3, #1
   19200:	ble	19224 <lchmod@@Base+0x2648>
   19204:	mov	r4, #1
   19208:	add	r6, r7, #4
   1920c:	ldr	r0, [r6, r4, lsl #3]
   19210:	add	r4, r4, #1
   19214:	bl	1356c <__assert_fail@plt+0x1ca0>
   19218:	ldr	r3, [r5, #4]
   1921c:	cmp	r3, r4
   19220:	bgt	1920c <lchmod@@Base+0x2630>
   19224:	ldr	r0, [r7, #4]
   19228:	movw	r4, #53756	; 0xd1fc
   1922c:	movt	r4, #2
   19230:	cmp	r0, r4
   19234:	beq	19248 <lchmod@@Base+0x266c>
   19238:	bl	1356c <__assert_fail@plt+0x1ca0>
   1923c:	mov	r3, #256	; 0x100
   19240:	str	r3, [r5, #8]
   19244:	str	r4, [r5, #12]
   19248:	ldr	r4, [pc, #44]	; 1927c <lchmod@@Base+0x26a0>
   1924c:	cmp	r7, r4
   19250:	beq	19260 <lchmod@@Base+0x2684>
   19254:	mov	r0, r7
   19258:	bl	1356c <__assert_fail@plt+0x1ca0>
   1925c:	str	r4, [r5]
   19260:	mov	r3, #1
   19264:	ldrd	r6, [sp, #8]
   19268:	str	r3, [r5, #4]
   1926c:	ldrd	r4, [sp]
   19270:	ldr	r8, [sp, #16]
   19274:	add	sp, sp, #20
   19278:	pop	{pc}		; (ldr pc, [sp], #4)
   1927c:	muleq	r2, r8, r1
   19280:	ldr	r3, [pc, #4]	; 1928c <lchmod@@Base+0x26b0>
   19284:	mvn	r2, #0
   19288:	b	18d4c <lchmod@@Base+0x2170>
   1928c:	strdeq	sp, [r2], -ip
   19290:	ldr	r3, [pc]	; 19298 <lchmod@@Base+0x26bc>
   19294:	b	18d4c <lchmod@@Base+0x2170>
   19298:	strdeq	sp, [r2], -ip
   1929c:	mov	r1, r0
   192a0:	ldr	r3, [pc, #8]	; 192b0 <lchmod@@Base+0x26d4>
   192a4:	mvn	r2, #0
   192a8:	mov	r0, #0
   192ac:	b	18d4c <lchmod@@Base+0x2170>
   192b0:	strdeq	sp, [r2], -ip
   192b4:	mov	r2, r1
   192b8:	ldr	r3, [pc, #8]	; 192c8 <lchmod@@Base+0x26ec>
   192bc:	mov	r1, r0
   192c0:	mov	r0, #0
   192c4:	b	18d4c <lchmod@@Base+0x2170>
   192c8:	strdeq	sp, [r2], -ip
   192cc:	strd	r4, [sp, #-12]!
   192d0:	mov	r5, r2
   192d4:	mov	r4, r0
   192d8:	str	lr, [sp, #8]
   192dc:	sub	sp, sp, #52	; 0x34
   192e0:	mov	r0, sp
   192e4:	bl	173e8 <lchmod@@Base+0x80c>
   192e8:	mov	r3, sp
   192ec:	mov	r1, r5
   192f0:	mov	r0, r4
   192f4:	mvn	r2, #0
   192f8:	bl	18d4c <lchmod@@Base+0x2170>
   192fc:	add	sp, sp, #52	; 0x34
   19300:	ldrd	r4, [sp]
   19304:	add	sp, sp, #8
   19308:	pop	{pc}		; (ldr pc, [sp], #4)
   1930c:	strd	r4, [sp, #-16]!
   19310:	mov	r5, r2
   19314:	mov	r4, r0
   19318:	str	r6, [sp, #8]
   1931c:	mov	r6, r3
   19320:	str	lr, [sp, #12]
   19324:	sub	sp, sp, #48	; 0x30
   19328:	mov	r0, sp
   1932c:	bl	173e8 <lchmod@@Base+0x80c>
   19330:	mov	r3, sp
   19334:	mov	r2, r6
   19338:	mov	r1, r5
   1933c:	mov	r0, r4
   19340:	bl	18d4c <lchmod@@Base+0x2170>
   19344:	add	sp, sp, #48	; 0x30
   19348:	ldrd	r4, [sp]
   1934c:	ldr	r6, [sp, #8]
   19350:	add	sp, sp, #12
   19354:	pop	{pc}		; (ldr pc, [sp], #4)
   19358:	mov	r2, r1
   1935c:	mov	r1, r0
   19360:	mov	r0, #0
   19364:	b	192cc <lchmod@@Base+0x26f0>
   19368:	mov	r3, r2
   1936c:	mov	r2, r1
   19370:	mov	r1, r0
   19374:	mov	r0, #0
   19378:	b	1930c <lchmod@@Base+0x2730>
   1937c:	ldr	ip, [pc, #140]	; 19410 <lchmod@@Base+0x2834>
   19380:	strd	r4, [sp, #-28]!	; 0xffffffe4
   19384:	ldrd	r4, [ip]
   19388:	strd	r6, [sp, #8]
   1938c:	ldrd	r6, [ip, #8]
   19390:	strd	r8, [sp, #16]
   19394:	lsr	r9, r2, #5
   19398:	str	lr, [sp, #24]
   1939c:	sub	sp, sp, #52	; 0x34
   193a0:	and	lr, r2, #31
   193a4:	add	r8, sp, #8
   193a8:	mov	r2, r1
   193ac:	strd	r4, [sp]
   193b0:	mov	r1, r0
   193b4:	mov	r3, sp
   193b8:	strd	r6, [sp, #8]
   193bc:	mov	r0, #0
   193c0:	ldrd	r4, [ip, #16]
   193c4:	ldrd	r6, [ip, #24]
   193c8:	strd	r4, [sp, #16]
   193cc:	ldrd	r4, [ip, #32]
   193d0:	strd	r6, [sp, #24]
   193d4:	ldrd	r6, [ip, #40]	; 0x28
   193d8:	strd	r4, [sp, #32]
   193dc:	strd	r6, [sp, #40]	; 0x28
   193e0:	ldr	ip, [r8, r9, lsl #2]
   193e4:	mvn	r4, ip, lsr lr
   193e8:	and	r4, r4, #1
   193ec:	eor	lr, ip, r4, lsl lr
   193f0:	str	lr, [r8, r9, lsl #2]
   193f4:	bl	18d4c <lchmod@@Base+0x2170>
   193f8:	add	sp, sp, #52	; 0x34
   193fc:	ldrd	r4, [sp]
   19400:	ldrd	r6, [sp, #8]
   19404:	ldrd	r8, [sp, #16]
   19408:	add	sp, sp, #24
   1940c:	pop	{pc}		; (ldr pc, [sp], #4)
   19410:	strdeq	sp, [r2], -ip
   19414:	mov	r2, r1
   19418:	mvn	r1, #0
   1941c:	b	1937c <lchmod@@Base+0x27a0>
   19420:	mov	r2, #58	; 0x3a
   19424:	mvn	r1, #0
   19428:	b	1937c <lchmod@@Base+0x27a0>
   1942c:	mov	r2, #58	; 0x3a
   19430:	b	1937c <lchmod@@Base+0x27a0>
   19434:	strd	r4, [sp, #-20]!	; 0xffffffec
   19438:	strd	r6, [sp, #8]
   1943c:	mov	r6, r0
   19440:	mov	r7, r2
   19444:	str	lr, [sp, #16]
   19448:	sub	sp, sp, #100	; 0x64
   1944c:	mov	r0, sp
   19450:	bl	173e8 <lchmod@@Base+0x80c>
   19454:	ldrd	r4, [sp, #8]
   19458:	mov	r1, r7
   1945c:	mov	r0, r6
   19460:	add	r3, sp, #48	; 0x30
   19464:	mvn	r2, #0
   19468:	ldrd	r6, [sp]
   1946c:	strd	r4, [sp, #56]	; 0x38
   19470:	ldrd	r4, [sp, #16]
   19474:	strd	r6, [sp, #48]	; 0x30
   19478:	ldrd	r6, [sp, #32]
   1947c:	ldr	lr, [sp, #60]	; 0x3c
   19480:	strd	r4, [sp, #64]	; 0x40
   19484:	ldrd	r4, [sp, #24]
   19488:	mvn	ip, lr
   1948c:	and	ip, ip, #67108864	; 0x4000000
   19490:	strd	r4, [sp, #72]	; 0x48
   19494:	eor	ip, ip, lr
   19498:	ldrd	r4, [sp, #40]	; 0x28
   1949c:	str	ip, [sp, #60]	; 0x3c
   194a0:	strd	r6, [sp, #80]	; 0x50
   194a4:	strd	r4, [sp, #88]	; 0x58
   194a8:	bl	18d4c <lchmod@@Base+0x2170>
   194ac:	add	sp, sp, #100	; 0x64
   194b0:	ldrd	r4, [sp]
   194b4:	ldrd	r6, [sp, #8]
   194b8:	add	sp, sp, #16
   194bc:	pop	{pc}		; (ldr pc, [sp], #4)
   194c0:	ldr	ip, [pc, #156]	; 19564 <lchmod@@Base+0x2988>
   194c4:	cmp	r2, #0
   194c8:	cmpne	r1, #0
   194cc:	strd	r4, [sp, #-32]!	; 0xffffffe0
   194d0:	strd	r6, [sp, #8]
   194d4:	mov	r6, r2
   194d8:	str	r8, [sp, #16]
   194dc:	mov	r8, r3
   194e0:	strd	sl, [sp, #20]
   194e4:	ldrd	r4, [ip]
   194e8:	str	lr, [sp, #28]
   194ec:	sub	sp, sp, #48	; 0x30
   194f0:	mov	lr, #10
   194f4:	ldrd	r2, [ip, #8]
   194f8:	ldrd	sl, [ip, #16]
   194fc:	strd	r4, [sp]
   19500:	ldrd	r4, [ip, #32]
   19504:	str	lr, [sp]
   19508:	strd	r2, [sp, #8]
   1950c:	strd	sl, [sp, #16]
   19510:	ldrd	r2, [ip, #24]
   19514:	ldrd	sl, [ip, #40]	; 0x28
   19518:	strd	r2, [sp, #24]
   1951c:	strd	r4, [sp, #32]
   19520:	strd	sl, [sp, #40]	; 0x28
   19524:	beq	19560 <lchmod@@Base+0x2984>
   19528:	ldr	r2, [sp, #80]	; 0x50
   1952c:	mov	r7, r1
   19530:	mov	r3, sp
   19534:	mov	r1, r8
   19538:	str	r7, [sp, #40]	; 0x28
   1953c:	str	r6, [sp, #44]	; 0x2c
   19540:	bl	18d4c <lchmod@@Base+0x2170>
   19544:	add	sp, sp, #48	; 0x30
   19548:	ldrd	r4, [sp]
   1954c:	ldrd	r6, [sp, #8]
   19550:	ldr	r8, [sp, #16]
   19554:	ldrd	sl, [sp, #20]
   19558:	add	sp, sp, #28
   1955c:	pop	{pc}		; (ldr pc, [sp], #4)
   19560:	bl	11878 <abort@plt>
   19564:	strdeq	sp, [r2], -ip
   19568:	mvn	ip, #0
   1956c:	push	{lr}		; (str lr, [sp, #-4]!)
   19570:	sub	sp, sp, #12
   19574:	str	ip, [sp]
   19578:	bl	194c0 <lchmod@@Base+0x28e4>
   1957c:	add	sp, sp, #12
   19580:	pop	{pc}		; (ldr pc, [sp], #4)
   19584:	mvn	ip, #0
   19588:	push	{lr}		; (str lr, [sp, #-4]!)
   1958c:	sub	sp, sp, #12
   19590:	mov	r3, r2
   19594:	mov	r2, r1
   19598:	mov	r1, r0
   1959c:	mov	r0, #0
   195a0:	str	ip, [sp]
   195a4:	bl	194c0 <lchmod@@Base+0x28e4>
   195a8:	add	sp, sp, #12
   195ac:	pop	{pc}		; (ldr pc, [sp], #4)
   195b0:	push	{lr}		; (str lr, [sp, #-4]!)
   195b4:	sub	sp, sp, #12
   195b8:	str	r3, [sp]
   195bc:	mov	r3, r2
   195c0:	mov	r2, r1
   195c4:	mov	r1, r0
   195c8:	mov	r0, #0
   195cc:	bl	194c0 <lchmod@@Base+0x28e4>
   195d0:	add	sp, sp, #12
   195d4:	pop	{pc}		; (ldr pc, [sp], #4)
   195d8:	ldr	r3, [pc]	; 195e0 <lchmod@@Base+0x2a04>
   195dc:	b	18d4c <lchmod@@Base+0x2170>
   195e0:	andeq	sp, r2, r0, lsr #3
   195e4:	mov	r2, r1
   195e8:	ldr	r3, [pc, #8]	; 195f8 <lchmod@@Base+0x2a1c>
   195ec:	mov	r1, r0
   195f0:	mov	r0, #0
   195f4:	b	18d4c <lchmod@@Base+0x2170>
   195f8:	andeq	sp, r2, r0, lsr #3
   195fc:	ldr	r3, [pc, #4]	; 19608 <lchmod@@Base+0x2a2c>
   19600:	mvn	r2, #0
   19604:	b	18d4c <lchmod@@Base+0x2170>
   19608:	andeq	sp, r2, r0, lsr #3
   1960c:	mov	r1, r0
   19610:	ldr	r3, [pc, #8]	; 19620 <lchmod@@Base+0x2a44>
   19614:	mvn	r2, #0
   19618:	mov	r0, #0
   1961c:	b	18d4c <lchmod@@Base+0x2170>
   19620:	andeq	sp, r2, r0, lsr #3
   19624:	strd	r4, [sp, #-16]!
   19628:	ldr	r4, [r0], #8
   1962c:	str	r6, [sp, #8]
   19630:	str	lr, [sp, #12]
   19634:	cmp	r4, r0
   19638:	beq	19664 <lchmod@@Base+0x2a88>
   1963c:	mov	r0, r4
   19640:	bl	1ae58 <lchmod@@Base+0x427c>
   19644:	cmp	r0, #0
   19648:	movne	r3, r0
   1964c:	moveq	r3, r4
   19650:	ldrd	r4, [sp]
   19654:	mov	r0, r3
   19658:	ldr	r6, [sp, #8]
   1965c:	add	sp, sp, #12
   19660:	pop	{pc}		; (ldr pc, [sp], #4)
   19664:	mov	r0, r1
   19668:	mov	r5, r1
   1966c:	bl	1ae1c <lchmod@@Base+0x4240>
   19670:	subs	r3, r0, #0
   19674:	beq	19650 <lchmod@@Base+0x2a74>
   19678:	mov	r2, r5
   1967c:	mov	r1, r4
   19680:	ldrd	r4, [sp]
   19684:	ldr	r6, [sp, #8]
   19688:	ldr	lr, [sp, #12]
   1968c:	add	sp, sp, #16
   19690:	b	11530 <memcpy@plt>
   19694:	strd	r4, [sp, #-16]!
   19698:	mov	r5, r0
   1969c:	mov	r4, r0
   196a0:	ldr	r3, [r0, #4]
   196a4:	ldr	r0, [r5], #8
   196a8:	str	r6, [sp, #8]
   196ac:	str	lr, [sp, #12]
   196b0:	lsl	r6, r3, #1
   196b4:	cmp	r0, r5
   196b8:	beq	196c4 <lchmod@@Base+0x2ae8>
   196bc:	bl	1356c <__assert_fail@plt+0x1ca0>
   196c0:	ldr	r3, [r4, #4]
   196c4:	cmp	r3, r6
   196c8:	bhi	196f4 <lchmod@@Base+0x2b18>
   196cc:	mov	r0, r6
   196d0:	bl	1ae1c <lchmod@@Base+0x4240>
   196d4:	subs	r3, r0, #0
   196d8:	beq	19700 <lchmod@@Base+0x2b24>
   196dc:	mov	r0, #1
   196e0:	stm	r4, {r3, r6}
   196e4:	ldrd	r4, [sp]
   196e8:	ldr	r6, [sp, #8]
   196ec:	add	sp, sp, #12
   196f0:	pop	{pc}		; (ldr pc, [sp], #4)
   196f4:	bl	1171c <__errno_location@plt>
   196f8:	mov	r3, #12
   196fc:	str	r3, [r0]
   19700:	mov	r3, #1024	; 0x400
   19704:	mov	r0, #0
   19708:	str	r5, [r4]
   1970c:	str	r3, [r4, #4]
   19710:	b	196e4 <lchmod@@Base+0x2b08>
   19714:	strd	r4, [sp, #-24]!	; 0xffffffe8
   19718:	mov	r5, r0
   1971c:	mov	r4, r0
   19720:	ldr	r3, [r0, #4]
   19724:	strd	r6, [sp, #8]
   19728:	ldr	r7, [r5], #8
   1972c:	str	r8, [sp, #16]
   19730:	str	lr, [sp, #20]
   19734:	lsl	r6, r3, #1
   19738:	cmp	r7, r5
   1973c:	beq	19780 <lchmod@@Base+0x2ba4>
   19740:	cmp	r3, r6
   19744:	bhi	197a4 <lchmod@@Base+0x2bc8>
   19748:	mov	r0, r7
   1974c:	mov	r1, r6
   19750:	bl	1ae58 <lchmod@@Base+0x427c>
   19754:	subs	r8, r0, #0
   19758:	ldreq	r7, [r4]
   1975c:	beq	197b0 <lchmod@@Base+0x2bd4>
   19760:	mov	r0, #1
   19764:	str	r8, [r4]
   19768:	str	r6, [r4, #4]
   1976c:	ldrd	r4, [sp]
   19770:	ldrd	r6, [sp, #8]
   19774:	ldr	r8, [sp, #16]
   19778:	add	sp, sp, #20
   1977c:	pop	{pc}		; (ldr pc, [sp], #4)
   19780:	mov	r0, r6
   19784:	bl	1ae1c <lchmod@@Base+0x4240>
   19788:	subs	r8, r0, #0
   1978c:	moveq	r0, r8
   19790:	beq	1976c <lchmod@@Base+0x2b90>
   19794:	mov	r1, r7
   19798:	ldr	r2, [r4, #4]
   1979c:	bl	11530 <memcpy@plt>
   197a0:	b	19760 <lchmod@@Base+0x2b84>
   197a4:	bl	1171c <__errno_location@plt>
   197a8:	mov	r3, #12
   197ac:	str	r3, [r0]
   197b0:	mov	r0, r7
   197b4:	bl	1356c <__assert_fail@plt+0x1ca0>
   197b8:	mov	r3, #1024	; 0x400
   197bc:	mov	r0, #0
   197c0:	str	r5, [r4]
   197c4:	str	r3, [r4, #4]
   197c8:	b	1976c <lchmod@@Base+0x2b90>
   197cc:	strd	r4, [sp, #-24]!	; 0xffffffe8
   197d0:	subs	r4, r0, #0
   197d4:	strd	r6, [sp, #8]
   197d8:	str	r8, [sp, #16]
   197dc:	str	lr, [sp, #20]
   197e0:	beq	19844 <lchmod@@Base+0x2c68>
   197e4:	cmp	r4, #10
   197e8:	beq	19804 <lchmod@@Base+0x2c28>
   197ec:	mov	r0, r4
   197f0:	ldrd	r4, [sp]
   197f4:	ldrd	r6, [sp, #8]
   197f8:	ldr	r8, [sp, #16]
   197fc:	add	sp, sp, #20
   19800:	pop	{pc}		; (ldr pc, [sp], #4)
   19804:	mov	r5, r1
   19808:	movw	r1, #50252	; 0xc44c
   1980c:	movt	r1, #1
   19810:	ldr	r6, [r5]
   19814:	mov	r0, r6
   19818:	bl	114d0 <strcmp@plt>
   1981c:	subs	r7, r0, #0
   19820:	bne	197ec <lchmod@@Base+0x2c10>
   19824:	mov	r0, r6
   19828:	mvn	r4, #0
   1982c:	bl	1180c <freecon@plt>
   19830:	str	r7, [r5]
   19834:	bl	1171c <__errno_location@plt>
   19838:	mov	r3, #61	; 0x3d
   1983c:	str	r3, [r0]
   19840:	b	197ec <lchmod@@Base+0x2c10>
   19844:	bl	1171c <__errno_location@plt>
   19848:	mov	r3, #95	; 0x5f
   1984c:	mvn	r4, #0
   19850:	str	r3, [r0]
   19854:	b	197ec <lchmod@@Base+0x2c10>
   19858:	str	r4, [sp, #-8]!
   1985c:	mov	r4, r1
   19860:	str	lr, [sp, #4]
   19864:	bl	116d4 <getfilecon@plt>
   19868:	mov	r1, r4
   1986c:	ldr	r4, [sp]
   19870:	ldr	lr, [sp, #4]
   19874:	add	sp, sp, #8
   19878:	b	197cc <lchmod@@Base+0x2bf0>
   1987c:	str	r4, [sp, #-8]!
   19880:	mov	r4, r1
   19884:	str	lr, [sp, #4]
   19888:	bl	11650 <lgetfilecon@plt>
   1988c:	mov	r1, r4
   19890:	ldr	r4, [sp]
   19894:	ldr	lr, [sp, #4]
   19898:	add	sp, sp, #8
   1989c:	b	197cc <lchmod@@Base+0x2bf0>
   198a0:	str	r4, [sp, #-8]!
   198a4:	mov	r4, r1
   198a8:	str	lr, [sp, #4]
   198ac:	bl	1159c <fgetfilecon@plt>
   198b0:	mov	r1, r4
   198b4:	ldr	r4, [sp]
   198b8:	ldr	lr, [sp, #4]
   198bc:	add	sp, sp, #8
   198c0:	b	197cc <lchmod@@Base+0x2bf0>
   198c4:	cmp	r0, #2
   198c8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   198cc:	mov	r4, r0
   198d0:	strd	r6, [sp, #8]
   198d4:	str	r8, [sp, #16]
   198d8:	str	lr, [sp, #20]
   198dc:	bls	198f8 <lchmod@@Base+0x2d1c>
   198e0:	mov	r0, r4
   198e4:	ldrd	r4, [sp]
   198e8:	ldrd	r6, [sp, #8]
   198ec:	ldr	r8, [sp, #16]
   198f0:	add	sp, sp, #20
   198f4:	pop	{pc}		; (ldr pc, [sp], #4)
   198f8:	bl	1b644 <lchmod@@Base+0x4a68>
   198fc:	mov	r7, r0
   19900:	bl	1171c <__errno_location@plt>
   19904:	mov	r5, r0
   19908:	mov	r0, r4
   1990c:	ldr	r6, [r5]
   19910:	mov	r4, r7
   19914:	bl	11884 <close@plt>
   19918:	str	r6, [r5]
   1991c:	b	198e0 <lchmod@@Base+0x2d04>
   19920:	cmp	r1, #0
   19924:	strd	r4, [sp, #-16]!
   19928:	mov	ip, r3
   1992c:	str	r6, [sp, #8]
   19930:	mov	r4, r0
   19934:	str	lr, [sp, #12]
   19938:	sub	sp, sp, #32
   1993c:	ldr	r5, [sp, #48]	; 0x30
   19940:	ldr	r6, [sp, #52]	; 0x34
   19944:	beq	19a88 <lchmod@@Base+0x2eac>
   19948:	mov	r3, r1
   1994c:	mov	r1, #1
   19950:	stm	sp, {r2, ip}
   19954:	movw	r2, #50264	; 0xc458
   19958:	movt	r2, #1
   1995c:	bl	11764 <__fprintf_chk@plt>
   19960:	mov	r2, #5
   19964:	movw	r1, #50284	; 0xc46c
   19968:	movt	r1, #1
   1996c:	mov	r0, #0
   19970:	bl	11578 <dcgettext@plt>
   19974:	movw	ip, #2022	; 0x7e6
   19978:	mov	r3, r0
   1997c:	mov	r1, #1
   19980:	movw	r2, #51012	; 0xc744
   19984:	movt	r2, #1
   19988:	mov	r0, r4
   1998c:	str	ip, [sp]
   19990:	bl	11764 <__fprintf_chk@plt>
   19994:	mov	r1, r4
   19998:	mov	r0, #10
   1999c:	bl	1156c <fputc_unlocked@plt>
   199a0:	mov	r2, #5
   199a4:	movw	r1, #50288	; 0xc470
   199a8:	movt	r1, #1
   199ac:	mov	r0, #0
   199b0:	bl	11578 <dcgettext@plt>
   199b4:	mov	r2, r0
   199b8:	mov	r1, #1
   199bc:	movw	r3, #50460	; 0xc51c
   199c0:	movt	r3, #1
   199c4:	mov	r0, r4
   199c8:	bl	11764 <__fprintf_chk@plt>
   199cc:	mov	r1, r4
   199d0:	mov	r0, #10
   199d4:	bl	1156c <fputc_unlocked@plt>
   199d8:	cmp	r6, #9
   199dc:	ldrls	pc, [pc, r6, lsl #2]
   199e0:	b	19cf4 <lchmod@@Base+0x3118>
   199e4:	andeq	r9, r1, r4, ror sl
   199e8:	andeq	r9, r1, r4, lsr #21
   199ec:	andeq	r9, r1, r0, ror #21
   199f0:	andeq	r9, r1, r0, lsr #22
   199f4:	andeq	r9, r1, r8, ror #22
   199f8:	andeq	r9, r1, r0, lsr #23
   199fc:	andeq	r9, r1, r8, ror #23
   19a00:	andeq	r9, r1, ip, lsr ip
   19a04:	muleq	r1, r4, ip
   19a08:	andeq	r9, r1, ip, lsl #20
   19a0c:	movw	r1, #50764	; 0xc64c
   19a10:	movt	r1, #1
   19a14:	mov	r2, #5
   19a18:	mov	r0, #0
   19a1c:	bl	11578 <dcgettext@plt>
   19a20:	ldr	lr, [r5, #4]
   19a24:	mov	r2, r0
   19a28:	mov	r1, #1
   19a2c:	mov	r0, r4
   19a30:	ldr	r3, [r5, #8]
   19a34:	ldr	ip, [r5, #32]
   19a38:	str	lr, [sp]
   19a3c:	ldr	lr, [r5, #12]
   19a40:	str	ip, [sp, #28]
   19a44:	ldr	ip, [r5, #28]
   19a48:	str	r3, [sp, #4]
   19a4c:	ldr	r3, [r5, #16]
   19a50:	str	lr, [sp, #8]
   19a54:	ldr	lr, [r5, #20]
   19a58:	str	ip, [sp, #24]
   19a5c:	ldr	ip, [r5, #24]
   19a60:	str	r3, [sp, #12]
   19a64:	ldr	r3, [r5]
   19a68:	str	lr, [sp, #16]
   19a6c:	str	ip, [sp, #20]
   19a70:	bl	11764 <__fprintf_chk@plt>
   19a74:	add	sp, sp, #32
   19a78:	ldrd	r4, [sp]
   19a7c:	ldr	r6, [sp, #8]
   19a80:	add	sp, sp, #12
   19a84:	pop	{pc}		; (ldr pc, [sp], #4)
   19a88:	mov	r3, r2
   19a8c:	mov	r1, #1
   19a90:	str	ip, [sp]
   19a94:	movw	r2, #50276	; 0xc464
   19a98:	movt	r2, #1
   19a9c:	bl	11764 <__fprintf_chk@plt>
   19aa0:	b	19960 <lchmod@@Base+0x2d84>
   19aa4:	mov	r2, #5
   19aa8:	movw	r1, #50496	; 0xc540
   19aac:	movt	r1, #1
   19ab0:	mov	r0, #0
   19ab4:	bl	11578 <dcgettext@plt>
   19ab8:	ldr	r3, [r5]
   19abc:	mov	r2, r0
   19ac0:	mov	r1, #1
   19ac4:	mov	r0, r4
   19ac8:	add	sp, sp, #32
   19acc:	ldrd	r4, [sp]
   19ad0:	ldr	r6, [sp, #8]
   19ad4:	ldr	lr, [sp, #12]
   19ad8:	add	sp, sp, #16
   19adc:	b	11764 <__fprintf_chk@plt>
   19ae0:	mov	r2, #5
   19ae4:	movw	r1, #50512	; 0xc550
   19ae8:	movt	r1, #1
   19aec:	mov	r0, #0
   19af0:	bl	11578 <dcgettext@plt>
   19af4:	ldm	r5, {r3, ip}
   19af8:	mov	r2, r0
   19afc:	mov	r1, #1
   19b00:	mov	r0, r4
   19b04:	str	ip, [sp, #48]	; 0x30
   19b08:	add	sp, sp, #32
   19b0c:	ldrd	r4, [sp]
   19b10:	ldr	r6, [sp, #8]
   19b14:	ldr	lr, [sp, #12]
   19b18:	add	sp, sp, #16
   19b1c:	b	11764 <__fprintf_chk@plt>
   19b20:	mov	r2, #5
   19b24:	movw	r1, #50536	; 0xc568
   19b28:	movt	r1, #1
   19b2c:	mov	r0, #0
   19b30:	bl	11578 <dcgettext@plt>
   19b34:	ldm	r5, {r3, lr}
   19b38:	mov	r2, r0
   19b3c:	mov	r1, #1
   19b40:	mov	r0, r4
   19b44:	ldr	ip, [r5, #8]
   19b48:	str	lr, [sp, #48]	; 0x30
   19b4c:	str	ip, [sp, #52]	; 0x34
   19b50:	add	sp, sp, #32
   19b54:	ldrd	r4, [sp]
   19b58:	ldr	r6, [sp, #8]
   19b5c:	ldr	lr, [sp, #12]
   19b60:	add	sp, sp, #16
   19b64:	b	11764 <__fprintf_chk@plt>
   19b68:	mov	r2, #5
   19b6c:	movw	r1, #50564	; 0xc584
   19b70:	movt	r1, #1
   19b74:	mov	r0, #0
   19b78:	bl	11578 <dcgettext@plt>
   19b7c:	ldmib	r5, {r3, ip, lr}
   19b80:	mov	r2, r0
   19b84:	mov	r1, #1
   19b88:	mov	r0, r4
   19b8c:	str	r3, [sp]
   19b90:	ldr	r3, [r5]
   19b94:	stmib	sp, {ip, lr}
   19b98:	bl	11764 <__fprintf_chk@plt>
   19b9c:	b	19a74 <lchmod@@Base+0x2e98>
   19ba0:	mov	r2, #5
   19ba4:	movw	r1, #50596	; 0xc5a4
   19ba8:	movt	r1, #1
   19bac:	mov	r0, #0
   19bb0:	bl	11578 <dcgettext@plt>
   19bb4:	ldmib	r5, {ip, lr}
   19bb8:	mov	r2, r0
   19bbc:	mov	r1, #1
   19bc0:	mov	r0, r4
   19bc4:	ldr	r3, [r5, #16]
   19bc8:	str	ip, [sp]
   19bcc:	ldr	ip, [r5, #12]
   19bd0:	str	r3, [sp, #12]
   19bd4:	ldr	r3, [r5]
   19bd8:	str	lr, [sp, #4]
   19bdc:	str	ip, [sp, #8]
   19be0:	bl	11764 <__fprintf_chk@plt>
   19be4:	b	19a74 <lchmod@@Base+0x2e98>
   19be8:	mov	r2, #5
   19bec:	movw	r1, #50632	; 0xc5c8
   19bf0:	movt	r1, #1
   19bf4:	mov	r0, #0
   19bf8:	bl	11578 <dcgettext@plt>
   19bfc:	ldr	lr, [r5, #4]
   19c00:	mov	r2, r0
   19c04:	mov	r1, #1
   19c08:	mov	r0, r4
   19c0c:	ldr	r3, [r5, #8]
   19c10:	ldr	ip, [r5, #20]
   19c14:	str	lr, [sp]
   19c18:	ldr	lr, [r5, #12]
   19c1c:	str	ip, [sp, #16]
   19c20:	ldr	ip, [r5, #16]
   19c24:	str	r3, [sp, #4]
   19c28:	ldr	r3, [r5]
   19c2c:	str	lr, [sp, #8]
   19c30:	str	ip, [sp, #12]
   19c34:	bl	11764 <__fprintf_chk@plt>
   19c38:	b	19a74 <lchmod@@Base+0x2e98>
   19c3c:	mov	r2, #5
   19c40:	movw	r1, #50672	; 0xc5f0
   19c44:	movt	r1, #1
   19c48:	mov	r0, #0
   19c4c:	bl	11578 <dcgettext@plt>
   19c50:	ldmib	r5, {r3, ip}
   19c54:	mov	r2, r0
   19c58:	mov	r1, #1
   19c5c:	mov	r0, r4
   19c60:	ldr	lr, [r5, #24]
   19c64:	str	r3, [sp]
   19c68:	ldr	r3, [r5, #12]
   19c6c:	str	lr, [sp, #20]
   19c70:	ldr	lr, [r5, #20]
   19c74:	str	ip, [sp, #4]
   19c78:	ldr	ip, [r5, #16]
   19c7c:	str	r3, [sp, #8]
   19c80:	ldr	r3, [r5]
   19c84:	str	ip, [sp, #12]
   19c88:	str	lr, [sp, #16]
   19c8c:	bl	11764 <__fprintf_chk@plt>
   19c90:	b	19a74 <lchmod@@Base+0x2e98>
   19c94:	mov	r2, #5
   19c98:	movw	r1, #50716	; 0xc61c
   19c9c:	movt	r1, #1
   19ca0:	mov	r0, #0
   19ca4:	bl	11578 <dcgettext@plt>
   19ca8:	ldmib	r5, {ip, lr}
   19cac:	mov	r2, r0
   19cb0:	mov	r1, #1
   19cb4:	mov	r0, r4
   19cb8:	ldr	r3, [r5, #28]
   19cbc:	str	ip, [sp]
   19cc0:	ldr	ip, [r5, #12]
   19cc4:	str	r3, [sp, #24]
   19cc8:	ldr	r3, [r5, #24]
   19ccc:	str	lr, [sp, #4]
   19cd0:	ldr	lr, [r5, #16]
   19cd4:	str	ip, [sp, #8]
   19cd8:	ldr	ip, [r5, #20]
   19cdc:	str	r3, [sp, #20]
   19ce0:	ldr	r3, [r5]
   19ce4:	str	lr, [sp, #12]
   19ce8:	str	ip, [sp, #16]
   19cec:	bl	11764 <__fprintf_chk@plt>
   19cf0:	b	19a74 <lchmod@@Base+0x2e98>
   19cf4:	movw	r1, #50816	; 0xc680
   19cf8:	movt	r1, #1
   19cfc:	b	19a14 <lchmod@@Base+0x2e38>
   19d00:	strd	r4, [sp, #-12]!
   19d04:	str	lr, [sp, #8]
   19d08:	sub	sp, sp, #12
   19d0c:	ldr	r5, [sp, #24]
   19d10:	ldr	ip, [r5]
   19d14:	cmp	ip, #0
   19d18:	beq	19d34 <lchmod@@Base+0x3158>
   19d1c:	mov	lr, r5
   19d20:	mov	ip, #0
   19d24:	ldr	r4, [lr, #4]!
   19d28:	add	ip, ip, #1
   19d2c:	cmp	r4, #0
   19d30:	bne	19d24 <lchmod@@Base+0x3148>
   19d34:	stm	sp, {r5, ip}
   19d38:	bl	19920 <lchmod@@Base+0x2d44>
   19d3c:	add	sp, sp, #12
   19d40:	ldrd	r4, [sp]
   19d44:	add	sp, sp, #8
   19d48:	pop	{pc}		; (ldr pc, [sp], #4)
   19d4c:	strd	r4, [sp, #-16]!
   19d50:	mov	ip, #0
   19d54:	str	r6, [sp, #8]
   19d58:	str	lr, [sp, #12]
   19d5c:	sub	sp, sp, #48	; 0x30
   19d60:	ldr	r5, [sp, #64]	; 0x40
   19d64:	add	r6, sp, #8
   19d68:	mov	r4, r6
   19d6c:	ldr	lr, [r5], #4
   19d70:	cmp	lr, #0
   19d74:	str	lr, [r4], #4
   19d78:	beq	19d88 <lchmod@@Base+0x31ac>
   19d7c:	add	ip, ip, #1
   19d80:	cmp	ip, #10
   19d84:	bne	19d6c <lchmod@@Base+0x3190>
   19d88:	stm	sp, {r6, ip}
   19d8c:	bl	19920 <lchmod@@Base+0x2d44>
   19d90:	add	sp, sp, #48	; 0x30
   19d94:	ldrd	r4, [sp]
   19d98:	ldr	r6, [sp, #8]
   19d9c:	add	sp, sp, #12
   19da0:	pop	{pc}		; (ldr pc, [sp], #4)
   19da4:	push	{r3}		; (str r3, [sp, #-4]!)
   19da8:	mov	ip, #0
   19dac:	strd	r4, [sp, #-12]!
   19db0:	str	lr, [sp, #8]
   19db4:	sub	sp, sp, #56	; 0x38
   19db8:	add	r3, sp, #72	; 0x48
   19dbc:	add	r5, sp, #16
   19dc0:	mov	r4, r3
   19dc4:	mov	lr, r5
   19dc8:	str	r3, [sp, #12]
   19dcc:	ldr	r3, [r4], #4
   19dd0:	cmp	r3, #0
   19dd4:	str	r3, [lr], #4
   19dd8:	beq	19de8 <lchmod@@Base+0x320c>
   19ddc:	add	ip, ip, #1
   19de0:	cmp	ip, #10
   19de4:	bne	19dcc <lchmod@@Base+0x31f0>
   19de8:	ldr	r3, [sp, #68]	; 0x44
   19dec:	stm	sp, {r5, ip}
   19df0:	bl	19920 <lchmod@@Base+0x2d44>
   19df4:	add	sp, sp, #56	; 0x38
   19df8:	ldrd	r4, [sp]
   19dfc:	ldr	lr, [sp, #8]
   19e00:	add	sp, sp, #12
   19e04:	add	sp, sp, #4
   19e08:	bx	lr
   19e0c:	movw	r3, #53732	; 0xd1e4
   19e10:	movt	r3, #2
   19e14:	str	r4, [sp, #-8]!
   19e18:	mov	r0, #10
   19e1c:	ldr	r1, [r3]
   19e20:	str	lr, [sp, #4]
   19e24:	bl	1156c <fputc_unlocked@plt>
   19e28:	mov	r2, #5
   19e2c:	movw	r1, #50876	; 0xc6bc
   19e30:	movt	r1, #1
   19e34:	mov	r0, #0
   19e38:	bl	11578 <dcgettext@plt>
   19e3c:	mov	r1, r0
   19e40:	movw	r2, #50896	; 0xc6d0
   19e44:	movt	r2, #1
   19e48:	mov	r0, #1
   19e4c:	bl	1174c <__printf_chk@plt>
   19e50:	mov	r2, #5
   19e54:	movw	r1, #50920	; 0xc6e8
   19e58:	movt	r1, #1
   19e5c:	mov	r0, #0
   19e60:	bl	11578 <dcgettext@plt>
   19e64:	mov	r1, r0
   19e68:	movw	r3, #48820	; 0xbeb4
   19e6c:	movt	r3, #1
   19e70:	movw	r2, #48860	; 0xbedc
   19e74:	movt	r2, #1
   19e78:	mov	r0, #1
   19e7c:	bl	1174c <__printf_chk@plt>
   19e80:	mov	r2, #5
   19e84:	movw	r1, #50940	; 0xc6fc
   19e88:	movt	r1, #1
   19e8c:	mov	r0, #0
   19e90:	bl	11578 <dcgettext@plt>
   19e94:	mov	r1, r0
   19e98:	movw	r2, #50980	; 0xc724
   19e9c:	movt	r2, #1
   19ea0:	mov	r0, #1
   19ea4:	ldr	r4, [sp]
   19ea8:	ldr	lr, [sp, #4]
   19eac:	add	sp, sp, #8
   19eb0:	b	1174c <__printf_chk@plt>
   19eb4:	str	r4, [sp, #-8]!
   19eb8:	str	lr, [sp, #4]
   19ebc:	bl	1ae1c <lchmod@@Base+0x4240>
   19ec0:	cmp	r0, #0
   19ec4:	beq	19ed4 <lchmod@@Base+0x32f8>
   19ec8:	ldr	r4, [sp]
   19ecc:	add	sp, sp, #4
   19ed0:	pop	{pc}		; (ldr pc, [sp], #4)
   19ed4:	bl	1a32c <lchmod@@Base+0x3750>
   19ed8:	str	r4, [sp, #-8]!
   19edc:	str	lr, [sp, #4]
   19ee0:	bl	1ae1c <lchmod@@Base+0x4240>
   19ee4:	cmp	r0, #0
   19ee8:	beq	19ef8 <lchmod@@Base+0x331c>
   19eec:	ldr	r4, [sp]
   19ef0:	add	sp, sp, #4
   19ef4:	pop	{pc}		; (ldr pc, [sp], #4)
   19ef8:	bl	1a32c <lchmod@@Base+0x3750>
   19efc:	str	r4, [sp, #-8]!
   19f00:	str	lr, [sp, #4]
   19f04:	bl	1ae1c <lchmod@@Base+0x4240>
   19f08:	cmp	r0, #0
   19f0c:	beq	19f1c <lchmod@@Base+0x3340>
   19f10:	ldr	r4, [sp]
   19f14:	add	sp, sp, #4
   19f18:	pop	{pc}		; (ldr pc, [sp], #4)
   19f1c:	bl	1a32c <lchmod@@Base+0x3750>
   19f20:	strd	r4, [sp, #-16]!
   19f24:	mov	r5, r0
   19f28:	mov	r4, r1
   19f2c:	str	r6, [sp, #8]
   19f30:	str	lr, [sp, #12]
   19f34:	bl	1ae58 <lchmod@@Base+0x427c>
   19f38:	cmp	r0, #0
   19f3c:	beq	19f50 <lchmod@@Base+0x3374>
   19f40:	ldrd	r4, [sp]
   19f44:	ldr	r6, [sp, #8]
   19f48:	add	sp, sp, #12
   19f4c:	pop	{pc}		; (ldr pc, [sp], #4)
   19f50:	adds	r4, r4, #0
   19f54:	movne	r4, #1
   19f58:	cmp	r5, #0
   19f5c:	moveq	r4, #1
   19f60:	cmp	r4, #0
   19f64:	beq	19f40 <lchmod@@Base+0x3364>
   19f68:	bl	1a32c <lchmod@@Base+0x3750>
   19f6c:	cmp	r1, #0
   19f70:	orreq	r1, r1, #1
   19f74:	str	r4, [sp, #-8]!
   19f78:	str	lr, [sp, #4]
   19f7c:	bl	1ae58 <lchmod@@Base+0x427c>
   19f80:	cmp	r0, #0
   19f84:	beq	19f94 <lchmod@@Base+0x33b8>
   19f88:	ldr	r4, [sp]
   19f8c:	add	sp, sp, #4
   19f90:	pop	{pc}		; (ldr pc, [sp], #4)
   19f94:	bl	1a32c <lchmod@@Base+0x3750>
   19f98:	strd	r4, [sp, #-16]!
   19f9c:	mov	r4, r0
   19fa0:	mov	r5, r2
   19fa4:	str	r6, [sp, #8]
   19fa8:	mov	r6, r1
   19fac:	str	lr, [sp, #12]
   19fb0:	bl	1b60c <lchmod@@Base+0x4a30>
   19fb4:	cmp	r0, #0
   19fb8:	beq	19fcc <lchmod@@Base+0x33f0>
   19fbc:	ldrd	r4, [sp]
   19fc0:	ldr	r6, [sp, #8]
   19fc4:	add	sp, sp, #12
   19fc8:	pop	{pc}		; (ldr pc, [sp], #4)
   19fcc:	cmp	r4, #0
   19fd0:	beq	19fe0 <lchmod@@Base+0x3404>
   19fd4:	cmp	r6, #0
   19fd8:	cmpne	r5, #0
   19fdc:	beq	19fbc <lchmod@@Base+0x33e0>
   19fe0:	bl	1a32c <lchmod@@Base+0x3750>
   19fe4:	b	19f98 <lchmod@@Base+0x33bc>
   19fe8:	cmp	r2, #0
   19fec:	cmpne	r1, #0
   19ff0:	str	r4, [sp, #-8]!
   19ff4:	moveq	r2, #1
   19ff8:	str	lr, [sp, #4]
   19ffc:	moveq	r1, r2
   1a000:	bl	1b60c <lchmod@@Base+0x4a30>
   1a004:	cmp	r0, #0
   1a008:	beq	1a018 <lchmod@@Base+0x343c>
   1a00c:	ldr	r4, [sp]
   1a010:	add	sp, sp, #4
   1a014:	pop	{pc}		; (ldr pc, [sp], #4)
   1a018:	bl	1a32c <lchmod@@Base+0x3750>
   1a01c:	mov	r2, r1
   1a020:	mov	r1, r0
   1a024:	mov	r0, #0
   1a028:	b	19f98 <lchmod@@Base+0x33bc>
   1a02c:	mov	r2, r1
   1a030:	mov	r1, r0
   1a034:	mov	r0, #0
   1a038:	b	19fe8 <lchmod@@Base+0x340c>
   1a03c:	cmp	r0, #0
   1a040:	strd	r4, [sp, #-16]!
   1a044:	mov	r5, r1
   1a048:	ldr	r4, [r1]
   1a04c:	str	r6, [sp, #8]
   1a050:	str	lr, [sp, #12]
   1a054:	beq	1a084 <lchmod@@Base+0x34a8>
   1a058:	lsr	r3, r4, #1
   1a05c:	add	r3, r3, #1
   1a060:	adds	r4, r4, r3
   1a064:	bcs	1a0a0 <lchmod@@Base+0x34c4>
   1a068:	mov	r1, r4
   1a06c:	bl	19f98 <lchmod@@Base+0x33bc>
   1a070:	ldr	r6, [sp, #8]
   1a074:	str	r4, [r5]
   1a078:	ldrd	r4, [sp]
   1a07c:	add	sp, sp, #12
   1a080:	pop	{pc}		; (ldr pc, [sp], #4)
   1a084:	cmp	r4, #0
   1a088:	bne	1a068 <lchmod@@Base+0x348c>
   1a08c:	mov	r4, #64	; 0x40
   1a090:	udiv	r4, r4, r2
   1a094:	cmp	r2, #64	; 0x40
   1a098:	addhi	r4, r4, #1
   1a09c:	b	1a068 <lchmod@@Base+0x348c>
   1a0a0:	bl	1a32c <lchmod@@Base+0x3750>
   1a0a4:	mov	r2, #1
   1a0a8:	b	1a03c <lchmod@@Base+0x3460>
   1a0ac:	ldr	ip, [r1]
   1a0b0:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1a0b4:	mov	r5, r1
   1a0b8:	strd	r6, [sp, #8]
   1a0bc:	str	lr, [sp, #28]
   1a0c0:	strd	r8, [sp, #16]
   1a0c4:	asr	lr, ip, #1
   1a0c8:	ldr	r8, [sp, #32]
   1a0cc:	str	sl, [sp, #24]
   1a0d0:	adds	r4, ip, lr
   1a0d4:	mvn	lr, r3
   1a0d8:	lsr	lr, lr, #31
   1a0dc:	mvnvs	r4, #-2147483648	; 0x80000000
   1a0e0:	cmp	r3, r4
   1a0e4:	movge	r1, #0
   1a0e8:	andlt	r1, lr, #1
   1a0ec:	cmp	r1, #0
   1a0f0:	movne	r4, r3
   1a0f4:	smull	r6, r7, r4, r8
   1a0f8:	cmp	r7, r6, asr #31
   1a0fc:	bne	1a184 <lchmod@@Base+0x35a8>
   1a100:	cmp	r6, #63	; 0x3f
   1a104:	mov	r1, r6
   1a108:	ble	1a16c <lchmod@@Base+0x3590>
   1a10c:	cmp	r0, #0
   1a110:	sub	r6, r4, ip
   1a114:	streq	r0, [r5]
   1a118:	cmp	r6, r2
   1a11c:	bge	1a14c <lchmod@@Base+0x3570>
   1a120:	adds	r4, ip, r2
   1a124:	bvs	1a180 <lchmod@@Base+0x35a4>
   1a128:	cmp	r4, r3
   1a12c:	movle	r3, #0
   1a130:	andgt	r3, lr, #1
   1a134:	cmp	r3, #0
   1a138:	bne	1a180 <lchmod@@Base+0x35a4>
   1a13c:	smull	r8, r9, r4, r8
   1a140:	cmp	r9, r8, asr #31
   1a144:	mov	r1, r8
   1a148:	bne	1a180 <lchmod@@Base+0x35a4>
   1a14c:	bl	19f20 <lchmod@@Base+0x3344>
   1a150:	ldrd	r6, [sp, #8]
   1a154:	ldrd	r8, [sp, #16]
   1a158:	ldr	sl, [sp, #24]
   1a15c:	str	r4, [r5]
   1a160:	ldrd	r4, [sp]
   1a164:	add	sp, sp, #28
   1a168:	pop	{pc}		; (ldr pc, [sp], #4)
   1a16c:	mov	r6, #64	; 0x40
   1a170:	sdiv	r4, r6, r8
   1a174:	mls	r1, r8, r4, r6
   1a178:	sub	r1, r6, r1
   1a17c:	b	1a10c <lchmod@@Base+0x3530>
   1a180:	bl	1a32c <lchmod@@Base+0x3750>
   1a184:	mvn	r6, #-2147483648	; 0x80000000
   1a188:	b	1a170 <lchmod@@Base+0x3594>
   1a18c:	mov	r1, #1
   1a190:	str	r4, [sp, #-8]!
   1a194:	str	lr, [sp, #4]
   1a198:	bl	1ada8 <lchmod@@Base+0x41cc>
   1a19c:	cmp	r0, #0
   1a1a0:	beq	1a1b0 <lchmod@@Base+0x35d4>
   1a1a4:	ldr	r4, [sp]
   1a1a8:	add	sp, sp, #4
   1a1ac:	pop	{pc}		; (ldr pc, [sp], #4)
   1a1b0:	bl	1a32c <lchmod@@Base+0x3750>
   1a1b4:	mov	r1, #1
   1a1b8:	str	r4, [sp, #-8]!
   1a1bc:	str	lr, [sp, #4]
   1a1c0:	bl	1ada8 <lchmod@@Base+0x41cc>
   1a1c4:	cmp	r0, #0
   1a1c8:	beq	1a1d8 <lchmod@@Base+0x35fc>
   1a1cc:	ldr	r4, [sp]
   1a1d0:	add	sp, sp, #4
   1a1d4:	pop	{pc}		; (ldr pc, [sp], #4)
   1a1d8:	bl	1a32c <lchmod@@Base+0x3750>
   1a1dc:	str	r4, [sp, #-8]!
   1a1e0:	str	lr, [sp, #4]
   1a1e4:	bl	1ada8 <lchmod@@Base+0x41cc>
   1a1e8:	cmp	r0, #0
   1a1ec:	beq	1a1fc <lchmod@@Base+0x3620>
   1a1f0:	ldr	r4, [sp]
   1a1f4:	add	sp, sp, #4
   1a1f8:	pop	{pc}		; (ldr pc, [sp], #4)
   1a1fc:	bl	1a32c <lchmod@@Base+0x3750>
   1a200:	str	r4, [sp, #-8]!
   1a204:	str	lr, [sp, #4]
   1a208:	bl	1ada8 <lchmod@@Base+0x41cc>
   1a20c:	cmp	r0, #0
   1a210:	beq	1a220 <lchmod@@Base+0x3644>
   1a214:	ldr	r4, [sp]
   1a218:	add	sp, sp, #4
   1a21c:	pop	{pc}		; (ldr pc, [sp], #4)
   1a220:	bl	1a32c <lchmod@@Base+0x3750>
   1a224:	strd	r4, [sp, #-16]!
   1a228:	mov	r4, r1
   1a22c:	str	r6, [sp, #8]
   1a230:	mov	r6, r0
   1a234:	mov	r0, r1
   1a238:	str	lr, [sp, #12]
   1a23c:	bl	1ae1c <lchmod@@Base+0x4240>
   1a240:	subs	r5, r0, #0
   1a244:	beq	1a268 <lchmod@@Base+0x368c>
   1a248:	mov	r2, r4
   1a24c:	mov	r1, r6
   1a250:	bl	11530 <memcpy@plt>
   1a254:	mov	r0, r5
   1a258:	ldrd	r4, [sp]
   1a25c:	ldr	r6, [sp, #8]
   1a260:	add	sp, sp, #12
   1a264:	pop	{pc}		; (ldr pc, [sp], #4)
   1a268:	bl	1a32c <lchmod@@Base+0x3750>
   1a26c:	strd	r4, [sp, #-16]!
   1a270:	mov	r4, r1
   1a274:	str	r6, [sp, #8]
   1a278:	mov	r6, r0
   1a27c:	mov	r0, r1
   1a280:	str	lr, [sp, #12]
   1a284:	bl	1ae1c <lchmod@@Base+0x4240>
   1a288:	subs	r5, r0, #0
   1a28c:	beq	1a2b0 <lchmod@@Base+0x36d4>
   1a290:	mov	r2, r4
   1a294:	mov	r1, r6
   1a298:	bl	11530 <memcpy@plt>
   1a29c:	mov	r0, r5
   1a2a0:	ldrd	r4, [sp]
   1a2a4:	ldr	r6, [sp, #8]
   1a2a8:	add	sp, sp, #12
   1a2ac:	pop	{pc}		; (ldr pc, [sp], #4)
   1a2b0:	bl	1a32c <lchmod@@Base+0x3750>
   1a2b4:	strd	r4, [sp, #-16]!
   1a2b8:	mov	r4, r1
   1a2bc:	str	r6, [sp, #8]
   1a2c0:	mov	r6, r0
   1a2c4:	add	r0, r1, #1
   1a2c8:	str	lr, [sp, #12]
   1a2cc:	bl	1ae1c <lchmod@@Base+0x4240>
   1a2d0:	subs	r5, r0, #0
   1a2d4:	beq	1a300 <lchmod@@Base+0x3724>
   1a2d8:	mov	r3, #0
   1a2dc:	mov	r1, r6
   1a2e0:	mov	r2, r4
   1a2e4:	strb	r3, [r5, r4]
   1a2e8:	bl	11530 <memcpy@plt>
   1a2ec:	mov	r0, r5
   1a2f0:	ldrd	r4, [sp]
   1a2f4:	ldr	r6, [sp, #8]
   1a2f8:	add	sp, sp, #12
   1a2fc:	pop	{pc}		; (ldr pc, [sp], #4)
   1a300:	bl	1a32c <lchmod@@Base+0x3750>
   1a304:	str	r4, [sp, #-8]!
   1a308:	mov	r4, r0
   1a30c:	str	lr, [sp, #4]
   1a310:	bl	116e0 <strlen@plt>
   1a314:	add	r1, r0, #1
   1a318:	mov	r0, r4
   1a31c:	ldr	r4, [sp]
   1a320:	ldr	lr, [sp, #4]
   1a324:	add	sp, sp, #8
   1a328:	b	1a224 <lchmod@@Base+0x3648>
   1a32c:	movw	r3, #53644	; 0xd18c
   1a330:	movt	r3, #2
   1a334:	str	r4, [sp, #-8]!
   1a338:	ldr	r4, [r3]
   1a33c:	mov	r2, #5
   1a340:	movw	r1, #51060	; 0xc774
   1a344:	movt	r1, #1
   1a348:	mov	r0, #0
   1a34c:	str	lr, [sp, #4]
   1a350:	bl	11578 <dcgettext@plt>
   1a354:	mov	r3, r0
   1a358:	movw	r2, #49768	; 0xc268
   1a35c:	movt	r2, #1
   1a360:	mov	r1, #0
   1a364:	mov	r0, r4
   1a368:	bl	11638 <error@plt>
   1a36c:	bl	11878 <abort@plt>
   1a370:	orr	r1, r1, #512	; 0x200
   1a374:	str	r4, [sp, #-8]!
   1a378:	str	lr, [sp, #4]
   1a37c:	bl	14b10 <__assert_fail@plt+0x3244>
   1a380:	cmp	r0, #0
   1a384:	beq	1a394 <lchmod@@Base+0x37b8>
   1a388:	ldr	r4, [sp]
   1a38c:	add	sp, sp, #4
   1a390:	pop	{pc}		; (ldr pc, [sp], #4)
   1a394:	bl	1171c <__errno_location@plt>
   1a398:	ldr	r3, [r0]
   1a39c:	cmp	r3, #22
   1a3a0:	beq	1a3a8 <lchmod@@Base+0x37cc>
   1a3a4:	bl	1a32c <lchmod@@Base+0x3750>
   1a3a8:	movw	r3, #51080	; 0xc788
   1a3ac:	movt	r3, #1
   1a3b0:	movw	r1, #51092	; 0xc794
   1a3b4:	movt	r1, #1
   1a3b8:	movw	r0, #51104	; 0xc7a0
   1a3bc:	movt	r0, #1
   1a3c0:	mov	r2, #41	; 0x29
   1a3c4:	bl	118cc <__assert_fail@plt>
   1a3c8:	ldr	r3, [r0, #48]	; 0x30
   1a3cc:	and	r3, r3, #17
   1a3d0:	cmp	r3, #16
   1a3d4:	beq	1a3f8 <lchmod@@Base+0x381c>
   1a3d8:	cmp	r3, #17
   1a3dc:	beq	1a3e8 <lchmod@@Base+0x380c>
   1a3e0:	mov	r0, #0
   1a3e4:	bx	lr
   1a3e8:	ldr	r0, [r1, #48]	; 0x30
   1a3ec:	adds	r0, r0, #0
   1a3f0:	movne	r0, #1
   1a3f4:	bx	lr
   1a3f8:	mov	r0, #1
   1a3fc:	bx	lr
   1a400:	cmp	r2, #36	; 0x24
   1a404:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1a408:	strd	r6, [sp, #8]
   1a40c:	strd	r8, [sp, #16]
   1a410:	strd	sl, [sp, #24]
   1a414:	str	lr, [sp, #32]
   1a418:	sub	sp, sp, #36	; 0x24
   1a41c:	bhi	1acac <lchmod@@Base+0x40d0>
   1a420:	cmp	r1, #0
   1a424:	mov	r8, r2
   1a428:	mov	r6, r0
   1a42c:	mov	r5, r1
   1a430:	mov	sl, r3
   1a434:	addeq	r5, sp, #28
   1a438:	bl	1171c <__errno_location@plt>
   1a43c:	mov	r3, #0
   1a440:	mov	r7, r0
   1a444:	str	r3, [r0]
   1a448:	bl	116b0 <__ctype_b_loc@plt>
   1a44c:	ldrb	r3, [r6]
   1a450:	mov	r2, r6
   1a454:	ldr	r0, [r0]
   1a458:	b	1a460 <lchmod@@Base+0x3884>
   1a45c:	ldrb	r3, [r2, #1]!
   1a460:	lsl	r1, r3, #1
   1a464:	ldrh	r4, [r0, r1]
   1a468:	ands	r4, r4, #8192	; 0x2000
   1a46c:	bne	1a45c <lchmod@@Base+0x3880>
   1a470:	cmp	r3, #45	; 0x2d
   1a474:	beq	1a514 <lchmod@@Base+0x3938>
   1a478:	mov	r2, r8
   1a47c:	mov	r3, r4
   1a480:	mov	r1, r5
   1a484:	mov	r0, r6
   1a488:	bl	1153c <__strtoull_internal@plt>
   1a48c:	ldr	fp, [r5]
   1a490:	mov	r9, r0
   1a494:	mov	r8, r1
   1a498:	cmp	fp, r6
   1a49c:	beq	1a4fc <lchmod@@Base+0x3920>
   1a4a0:	ldr	r4, [r7]
   1a4a4:	cmp	r4, #0
   1a4a8:	bne	1a4ec <lchmod@@Base+0x3910>
   1a4ac:	ldr	r3, [sp, #72]	; 0x48
   1a4b0:	cmp	r3, #0
   1a4b4:	beq	1a4c4 <lchmod@@Base+0x38e8>
   1a4b8:	ldrb	r6, [fp]
   1a4bc:	cmp	r6, #0
   1a4c0:	bne	1a804 <lchmod@@Base+0x3c28>
   1a4c4:	str	r9, [sl]
   1a4c8:	str	r8, [sl, #4]
   1a4cc:	mov	r0, r4
   1a4d0:	add	sp, sp, #36	; 0x24
   1a4d4:	ldrd	r4, [sp]
   1a4d8:	ldrd	r6, [sp, #8]
   1a4dc:	ldrd	r8, [sp, #16]
   1a4e0:	ldrd	sl, [sp, #24]
   1a4e4:	add	sp, sp, #32
   1a4e8:	pop	{pc}		; (ldr pc, [sp], #4)
   1a4ec:	cmp	r4, #34	; 0x22
   1a4f0:	bne	1a514 <lchmod@@Base+0x3938>
   1a4f4:	mov	r4, #1
   1a4f8:	b	1a4ac <lchmod@@Base+0x38d0>
   1a4fc:	ldr	r3, [sp, #72]	; 0x48
   1a500:	cmp	r3, #0
   1a504:	beq	1a514 <lchmod@@Base+0x3938>
   1a508:	ldrb	r6, [r6]
   1a50c:	cmp	r6, #0
   1a510:	bne	1a51c <lchmod@@Base+0x3940>
   1a514:	mov	r4, #4
   1a518:	b	1a4cc <lchmod@@Base+0x38f0>
   1a51c:	mov	r1, r6
   1a520:	mov	r0, r3
   1a524:	bl	116f8 <strchr@plt>
   1a528:	cmp	r0, #0
   1a52c:	movne	r9, #1
   1a530:	movne	r8, #0
   1a534:	beq	1a514 <lchmod@@Base+0x3938>
   1a538:	sub	r3, r6, #69	; 0x45
   1a53c:	cmp	r3, #47	; 0x2f
   1a540:	ldrls	pc, [pc, r3, lsl #2]
   1a544:	b	1a64c <lchmod@@Base+0x3a70>
   1a548:	andeq	sl, r1, r8, lsl #12
   1a54c:	andeq	sl, r1, ip, asr #12
   1a550:	andeq	sl, r1, r8, lsl #12
   1a554:	andeq	sl, r1, ip, asr #12
   1a558:	andeq	sl, r1, ip, asr #12
   1a55c:	andeq	sl, r1, ip, asr #12
   1a560:	andeq	sl, r1, r8, lsl #12
   1a564:	andeq	sl, r1, ip, asr #12
   1a568:	andeq	sl, r1, r8, lsl #12
   1a56c:	andeq	sl, r1, ip, asr #12
   1a570:	andeq	sl, r1, ip, asr #12
   1a574:	andeq	sl, r1, r8, lsl #12
   1a578:	andeq	sl, r1, ip, asr #12
   1a57c:	andeq	sl, r1, ip, asr #12
   1a580:	andeq	sl, r1, ip, asr #12
   1a584:	andeq	sl, r1, r8, lsl #12
   1a588:	andeq	sl, r1, ip, asr #12
   1a58c:	andeq	sl, r1, ip, asr #12
   1a590:	andeq	sl, r1, ip, asr #12
   1a594:	andeq	sl, r1, ip, asr #12
   1a598:	andeq	sl, r1, r8, lsl #12
   1a59c:	andeq	sl, r1, r8, lsl #12
   1a5a0:	andeq	sl, r1, ip, asr #12
   1a5a4:	andeq	sl, r1, ip, asr #12
   1a5a8:	andeq	sl, r1, ip, asr #12
   1a5ac:	andeq	sl, r1, ip, asr #12
   1a5b0:	andeq	sl, r1, ip, asr #12
   1a5b4:	andeq	sl, r1, ip, asr #12
   1a5b8:	andeq	sl, r1, ip, asr #12
   1a5bc:	andeq	sl, r1, ip, asr #12
   1a5c0:	andeq	sl, r1, ip, asr #12
   1a5c4:	andeq	sl, r1, ip, asr #12
   1a5c8:	andeq	sl, r1, ip, asr #12
   1a5cc:	andeq	sl, r1, ip, asr #12
   1a5d0:	andeq	sl, r1, r8, lsl #12
   1a5d4:	andeq	sl, r1, ip, asr #12
   1a5d8:	andeq	sl, r1, ip, asr #12
   1a5dc:	andeq	sl, r1, ip, asr #12
   1a5e0:	andeq	sl, r1, r8, lsl #12
   1a5e4:	andeq	sl, r1, ip, asr #12
   1a5e8:	andeq	sl, r1, r8, lsl #12
   1a5ec:	andeq	sl, r1, ip, asr #12
   1a5f0:	andeq	sl, r1, ip, asr #12
   1a5f4:	andeq	sl, r1, ip, asr #12
   1a5f8:	andeq	sl, r1, ip, asr #12
   1a5fc:	andeq	sl, r1, ip, asr #12
   1a600:	andeq	sl, r1, ip, asr #12
   1a604:	andeq	sl, r1, r8, lsl #12
   1a608:	mov	r1, #48	; 0x30
   1a60c:	ldr	r0, [sp, #72]	; 0x48
   1a610:	bl	116f8 <strchr@plt>
   1a614:	cmp	r0, #0
   1a618:	beq	1a64c <lchmod@@Base+0x3a70>
   1a61c:	ldrb	r3, [fp, #1]
   1a620:	cmp	r3, #68	; 0x44
   1a624:	beq	1ab78 <lchmod@@Base+0x3f9c>
   1a628:	cmp	r3, #105	; 0x69
   1a62c:	beq	1a81c <lchmod@@Base+0x3c40>
   1a630:	cmp	r3, #66	; 0x42
   1a634:	moveq	r3, #2
   1a638:	movne	r3, #1
   1a63c:	moveq	r7, #1000	; 0x3e8
   1a640:	movne	r7, #1024	; 0x400
   1a644:	str	r3, [sp, #4]
   1a648:	b	1a658 <lchmod@@Base+0x3a7c>
   1a64c:	mov	r3, #1
   1a650:	mov	r7, #1024	; 0x400
   1a654:	str	r3, [sp, #4]
   1a658:	sub	r6, r6, #66	; 0x42
   1a65c:	cmp	r6, #53	; 0x35
   1a660:	ldrls	pc, [pc, r6, lsl #2]
   1a664:	b	1a7c8 <lchmod@@Base+0x3bec>
   1a668:	andeq	sl, r1, r0, lsr #22
   1a66c:	andeq	sl, r1, r8, asr #15
   1a670:	andeq	sl, r1, r8, asr #15
   1a674:	andeq	sl, r1, ip, lsr #18
   1a678:	andeq	sl, r1, r8, asr #15
   1a67c:	andeq	sl, r1, r0, asr #14
   1a680:	andeq	sl, r1, r8, asr #15
   1a684:	andeq	sl, r1, r8, asr #15
   1a688:	andeq	sl, r1, r8, asr #15
   1a68c:	ldrdeq	sl, [r1], -r0
   1a690:	andeq	sl, r1, r8, asr #15
   1a694:	andeq	sl, r1, ip, asr #21
   1a698:	andeq	sl, r1, r8, asr #15
   1a69c:	andeq	sl, r1, r8, asr #15
   1a6a0:	andeq	sl, r1, ip, lsl sl
   1a6a4:	andeq	sl, r1, r8, asr #15
   1a6a8:	andeq	sl, r1, r8, asr #15
   1a6ac:	andeq	sl, r1, r8, asr #15
   1a6b0:	andeq	sl, r1, r4, lsr #19
   1a6b4:	andeq	sl, r1, r8, asr #15
   1a6b8:	andeq	sl, r1, r8, asr #15
   1a6bc:	andeq	sl, r1, r8, asr #15
   1a6c0:	andeq	sl, r1, r8, asr #15
   1a6c4:			; <UNDEFINED> instruction: 0x0001a8b4
   1a6c8:	andeq	sl, r1, r8, lsr r8
   1a6cc:	andeq	sl, r1, r8, asr #15
   1a6d0:	andeq	sl, r1, r8, asr #15
   1a6d4:	andeq	sl, r1, r8, asr #15
   1a6d8:	andeq	sl, r1, r8, asr #15
   1a6dc:	andeq	sl, r1, r8, asr #15
   1a6e0:	andeq	sl, r1, r8, asr #15
   1a6e4:	andeq	sl, r1, r8, asr #15
   1a6e8:	andeq	sl, r1, ip, lsr #21
   1a6ec:			; <UNDEFINED> instruction: 0x0001a7b0
   1a6f0:	andeq	sl, r1, r8, asr #15
   1a6f4:	andeq	sl, r1, r8, asr #15
   1a6f8:	andeq	sl, r1, r8, asr #15
   1a6fc:	andeq	sl, r1, r0, asr #14
   1a700:	andeq	sl, r1, r8, asr #15
   1a704:	andeq	sl, r1, r8, asr #15
   1a708:	andeq	sl, r1, r8, asr #15
   1a70c:	ldrdeq	sl, [r1], -r0
   1a710:	andeq	sl, r1, r8, asr #15
   1a714:	andeq	sl, r1, ip, asr #21
   1a718:	andeq	sl, r1, r8, asr #15
   1a71c:	andeq	sl, r1, r8, asr #15
   1a720:	andeq	sl, r1, r8, asr #15
   1a724:	andeq	sl, r1, r8, asr #15
   1a728:	andeq	sl, r1, r8, asr #15
   1a72c:	andeq	sl, r1, r8, asr #15
   1a730:	andeq	sl, r1, r4, lsr #19
   1a734:	andeq	sl, r1, r8, asr #15
   1a738:	andeq	sl, r1, r8, asr #15
   1a73c:	muleq	r1, r4, sl
   1a740:	asr	r3, r7, #31
   1a744:	mov	r2, r7
   1a748:	cmp	r8, #0
   1a74c:	umull	r0, r1, r9, r7
   1a750:	mov	ip, #0
   1a754:	strd	r2, [sp, #8]
   1a758:	bne	1abac <lchmod@@Base+0x3fd0>
   1a75c:	mov	r2, r0
   1a760:	mov	r3, r1
   1a764:	cmp	ip, #0
   1a768:	bne	1a7f4 <lchmod@@Base+0x3c18>
   1a76c:	cmp	r3, #0
   1a770:	mov	lr, ip
   1a774:	bne	1ac10 <lchmod@@Base+0x4034>
   1a778:	umull	r2, r3, r2, r7
   1a77c:	mov	ip, r2
   1a780:	mov	r1, r3
   1a784:	subs	r0, lr, #0
   1a788:	bne	1a7f4 <lchmod@@Base+0x3c18>
   1a78c:	cmp	r1, #0
   1a790:	bne	1abf0 <lchmod@@Base+0x4014>
   1a794:	umull	r2, r3, ip, r7
   1a798:	mov	r6, r2
   1a79c:	mov	r2, r3
   1a7a0:	cmp	r0, #0
   1a7a4:	mov	r9, r6
   1a7a8:	mov	r8, r2
   1a7ac:	bne	1a7f4 <lchmod@@Base+0x3c18>
   1a7b0:	ldr	r2, [sp, #4]
   1a7b4:	add	r3, fp, r2
   1a7b8:	str	r3, [r5]
   1a7bc:	ldrb	r3, [fp, r2]
   1a7c0:	cmp	r3, #0
   1a7c4:	beq	1a4c4 <lchmod@@Base+0x38e8>
   1a7c8:	orr	r4, r4, #2
   1a7cc:	b	1a4c4 <lchmod@@Base+0x38e8>
   1a7d0:	cmp	r8, #0
   1a7d4:	umull	r2, r3, r9, r7
   1a7d8:	mov	ip, #0
   1a7dc:	asr	r1, r7, #31
   1a7e0:	bne	1ab48 <lchmod@@Base+0x3f6c>
   1a7e4:	mov	r9, r2
   1a7e8:	mov	r8, r3
   1a7ec:	cmp	ip, #0
   1a7f0:	beq	1a7b0 <lchmod@@Base+0x3bd4>
   1a7f4:	mvn	r9, #0
   1a7f8:	mov	r4, #1
   1a7fc:	mov	r8, r9
   1a800:	b	1a7b0 <lchmod@@Base+0x3bd4>
   1a804:	mov	r1, r6
   1a808:	ldr	r0, [sp, #72]	; 0x48
   1a80c:	bl	116f8 <strchr@plt>
   1a810:	cmp	r0, #0
   1a814:	bne	1a538 <lchmod@@Base+0x395c>
   1a818:	b	1a7c8 <lchmod@@Base+0x3bec>
   1a81c:	ldrb	r3, [fp, #2]
   1a820:	mov	r7, #1024	; 0x400
   1a824:	cmp	r3, #66	; 0x42
   1a828:	movne	r3, #1
   1a82c:	moveq	r3, #3
   1a830:	str	r3, [sp, #4]
   1a834:	b	1a658 <lchmod@@Base+0x3a7c>
   1a838:	asr	r3, r7, #31
   1a83c:	mov	r2, r7
   1a840:	mov	ip, #0
   1a844:	mov	r0, #7
   1a848:	mov	lr, ip
   1a84c:	mov	r6, r4
   1a850:	strd	r2, [sp, #8]
   1a854:	str	r5, [sp, #16]
   1a858:	b	1a884 <lchmod@@Base+0x3ca8>
   1a85c:	umull	r2, r3, r9, r7
   1a860:	mov	r9, r2
   1a864:	mov	r8, r3
   1a868:	cmp	r1, #0
   1a86c:	beq	1a87c <lchmod@@Base+0x3ca0>
   1a870:	mvn	r9, #0
   1a874:	mov	ip, #1
   1a878:	mov	r8, r9
   1a87c:	subs	r0, r0, #1
   1a880:	beq	1ab6c <lchmod@@Base+0x3f90>
   1a884:	cmp	r8, #0
   1a888:	mov	r1, #0
   1a88c:	beq	1a85c <lchmod@@Base+0x3c80>
   1a890:	umull	r4, r5, r9, r7
   1a894:	mov	r3, lr
   1a898:	mov	r2, r5
   1a89c:	umlal	r2, r3, r8, r7
   1a8a0:	cmp	r3, #0
   1a8a4:	bne	1accc <lchmod@@Base+0x40f0>
   1a8a8:	mov	r9, r4
   1a8ac:	mov	r8, r2
   1a8b0:	b	1a868 <lchmod@@Base+0x3c8c>
   1a8b4:	asr	r3, r7, #31
   1a8b8:	mov	r2, r7
   1a8bc:	mov	r6, #0
   1a8c0:	mov	lr, #8
   1a8c4:	mov	r0, r4
   1a8c8:	mov	ip, r5
   1a8cc:	strd	r2, [sp, #8]
   1a8d0:	b	1a8fc <lchmod@@Base+0x3d20>
   1a8d4:	umull	r2, r3, r9, r7
   1a8d8:	mov	r9, r2
   1a8dc:	mov	r8, r3
   1a8e0:	cmp	r1, #0
   1a8e4:	beq	1a8f4 <lchmod@@Base+0x3d18>
   1a8e8:	mvn	r9, #0
   1a8ec:	mov	r6, #1
   1a8f0:	mov	r8, r9
   1a8f4:	subs	lr, lr, #1
   1a8f8:	beq	1ab3c <lchmod@@Base+0x3f60>
   1a8fc:	cmp	r8, #0
   1a900:	mov	r1, #0
   1a904:	beq	1a8d4 <lchmod@@Base+0x3cf8>
   1a908:	umull	r4, r5, r9, r7
   1a90c:	mov	r3, #0
   1a910:	mov	r2, r5
   1a914:	umlal	r2, r3, r8, r7
   1a918:	cmp	r3, #0
   1a91c:	bne	1ad24 <lchmod@@Base+0x4148>
   1a920:	mov	r9, r4
   1a924:	mov	r8, r2
   1a928:	b	1a8e0 <lchmod@@Base+0x3d04>
   1a92c:	asr	r3, r7, #31
   1a930:	mov	r2, r7
   1a934:	mov	r6, #0
   1a938:	mov	lr, #6
   1a93c:	mov	r0, r4
   1a940:	mov	ip, r5
   1a944:	strd	r2, [sp, #8]
   1a948:	b	1a974 <lchmod@@Base+0x3d98>
   1a94c:	umull	r2, r3, r9, r7
   1a950:	mov	r9, r2
   1a954:	mov	r8, r3
   1a958:	cmp	r1, #0
   1a95c:	beq	1a96c <lchmod@@Base+0x3d90>
   1a960:	mvn	r9, #0
   1a964:	mov	r6, #1
   1a968:	mov	r8, r9
   1a96c:	subs	lr, lr, #1
   1a970:	beq	1ab3c <lchmod@@Base+0x3f60>
   1a974:	cmp	r8, #0
   1a978:	mov	r1, #0
   1a97c:	beq	1a94c <lchmod@@Base+0x3d70>
   1a980:	umull	r4, r5, r9, r7
   1a984:	mov	r3, #0
   1a988:	mov	r2, r5
   1a98c:	umlal	r2, r3, r8, r7
   1a990:	cmp	r3, #0
   1a994:	bne	1acec <lchmod@@Base+0x4110>
   1a998:	mov	r9, r4
   1a99c:	mov	r8, r2
   1a9a0:	b	1a958 <lchmod@@Base+0x3d7c>
   1a9a4:	asr	r3, r7, #31
   1a9a8:	mov	r2, r7
   1a9ac:	mov	r6, #0
   1a9b0:	mov	lr, #4
   1a9b4:	mov	r0, r4
   1a9b8:	mov	ip, r5
   1a9bc:	strd	r2, [sp, #8]
   1a9c0:	b	1a9ec <lchmod@@Base+0x3e10>
   1a9c4:	umull	r2, r3, r9, r7
   1a9c8:	mov	r9, r2
   1a9cc:	mov	r8, r3
   1a9d0:	cmp	r1, #0
   1a9d4:	beq	1a9e4 <lchmod@@Base+0x3e08>
   1a9d8:	mvn	r9, #0
   1a9dc:	mov	r6, #1
   1a9e0:	mov	r8, r9
   1a9e4:	subs	lr, lr, #1
   1a9e8:	beq	1ab3c <lchmod@@Base+0x3f60>
   1a9ec:	cmp	r8, #0
   1a9f0:	mov	r1, #0
   1a9f4:	beq	1a9c4 <lchmod@@Base+0x3de8>
   1a9f8:	umull	r4, r5, r9, r7
   1a9fc:	mov	r3, #0
   1aa00:	mov	r2, r5
   1aa04:	umlal	r2, r3, r8, r7
   1aa08:	cmp	r3, #0
   1aa0c:	bne	1ad08 <lchmod@@Base+0x412c>
   1aa10:	mov	r9, r4
   1aa14:	mov	r8, r2
   1aa18:	b	1a9d0 <lchmod@@Base+0x3df4>
   1aa1c:	asr	r3, r7, #31
   1aa20:	mov	r2, r7
   1aa24:	mov	r6, #0
   1aa28:	mov	lr, #5
   1aa2c:	mov	r0, r4
   1aa30:	mov	ip, r5
   1aa34:	strd	r2, [sp, #8]
   1aa38:	b	1aa64 <lchmod@@Base+0x3e88>
   1aa3c:	umull	r2, r3, r9, r7
   1aa40:	mov	r9, r2
   1aa44:	mov	r8, r3
   1aa48:	cmp	r1, #0
   1aa4c:	beq	1aa5c <lchmod@@Base+0x3e80>
   1aa50:	mvn	r9, #0
   1aa54:	mov	r6, #1
   1aa58:	mov	r8, r9
   1aa5c:	subs	lr, lr, #1
   1aa60:	beq	1ab3c <lchmod@@Base+0x3f60>
   1aa64:	cmp	r8, #0
   1aa68:	mov	r1, #0
   1aa6c:	beq	1aa3c <lchmod@@Base+0x3e60>
   1aa70:	umull	r4, r5, r9, r7
   1aa74:	mov	r3, #0
   1aa78:	mov	r2, r5
   1aa7c:	umlal	r2, r3, r8, r7
   1aa80:	cmp	r3, #0
   1aa84:	bne	1ac74 <lchmod@@Base+0x4098>
   1aa88:	mov	r9, r4
   1aa8c:	mov	r8, r2
   1aa90:	b	1aa48 <lchmod@@Base+0x3e6c>
   1aa94:	lsr	r3, r8, #31
   1aa98:	adds	r9, r9, r9
   1aa9c:	adc	r8, r8, r8
   1aaa0:	cmp	r3, #0
   1aaa4:	beq	1a7b0 <lchmod@@Base+0x3bd4>
   1aaa8:	b	1a7f4 <lchmod@@Base+0x3c18>
   1aaac:	lsr	r3, r8, #23
   1aab0:	lsl	r8, r8, #9
   1aab4:	cmp	r3, #0
   1aab8:	lsl	r3, r9, #9
   1aabc:	orr	r8, r8, r9, lsr #23
   1aac0:	bne	1a7f4 <lchmod@@Base+0x3c18>
   1aac4:	mov	r9, r3
   1aac8:	b	1a7b0 <lchmod@@Base+0x3bd4>
   1aacc:	asr	r3, r7, #31
   1aad0:	mov	r2, r7
   1aad4:	cmp	r8, #0
   1aad8:	mov	r1, #0
   1aadc:	strd	r2, [sp, #8]
   1aae0:	umull	r2, r3, r9, r7
   1aae4:	bne	1ab88 <lchmod@@Base+0x3fac>
   1aae8:	mov	r0, r2
   1aaec:	mov	ip, r3
   1aaf0:	cmp	r1, #0
   1aaf4:	bne	1a7f4 <lchmod@@Base+0x3c18>
   1aaf8:	cmp	ip, #0
   1aafc:	bne	1abd0 <lchmod@@Base+0x3ff4>
   1ab00:	umull	r2, r3, r0, r7
   1ab04:	mov	r6, r2
   1ab08:	mov	r2, r3
   1ab0c:	cmp	r1, #0
   1ab10:	mov	r9, r6
   1ab14:	mov	r8, r2
   1ab18:	beq	1a7b0 <lchmod@@Base+0x3bd4>
   1ab1c:	b	1a7f4 <lchmod@@Base+0x3c18>
   1ab20:	lsr	r3, r8, #22
   1ab24:	lsl	r8, r8, #10
   1ab28:	cmp	r3, #0
   1ab2c:	lsl	r3, r9, #10
   1ab30:	orr	r8, r8, r9, lsr #22
   1ab34:	beq	1aac4 <lchmod@@Base+0x3ee8>
   1ab38:	b	1a7f4 <lchmod@@Base+0x3c18>
   1ab3c:	mov	r5, ip
   1ab40:	orr	r4, r0, r6
   1ab44:	b	1a7b0 <lchmod@@Base+0x3bd4>
   1ab48:	strd	r2, [sp, #8]
   1ab4c:	mov	r3, ip
   1ab50:	ldr	r2, [sp, #12]
   1ab54:	umlal	r2, r3, r8, r7
   1ab58:	cmp	r3, #0
   1ab5c:	bne	1ac90 <lchmod@@Base+0x40b4>
   1ab60:	mov	r8, r2
   1ab64:	ldr	r9, [sp, #8]
   1ab68:	b	1a7ec <lchmod@@Base+0x3c10>
   1ab6c:	orr	r4, r6, ip
   1ab70:	ldr	r5, [sp, #16]
   1ab74:	b	1a7b0 <lchmod@@Base+0x3bd4>
   1ab78:	mov	r3, #2
   1ab7c:	mov	r7, #1000	; 0x3e8
   1ab80:	str	r3, [sp, #4]
   1ab84:	b	1a658 <lchmod@@Base+0x3a7c>
   1ab88:	strd	r2, [sp, #16]
   1ab8c:	mov	r3, r1
   1ab90:	ldr	r2, [sp, #20]
   1ab94:	umlal	r2, r3, r8, r7
   1ab98:	cmp	r3, #0
   1ab9c:	bne	1ad60 <lchmod@@Base+0x4184>
   1aba0:	mov	ip, r2
   1aba4:	ldr	r0, [sp, #16]
   1aba8:	b	1aaf0 <lchmod@@Base+0x3f14>
   1abac:	mov	r2, r1
   1abb0:	mov	r3, ip
   1abb4:	umlal	r2, r3, r8, r7
   1abb8:	cmp	r3, #0
   1abbc:	strd	r2, [sp, #16]
   1abc0:	bne	1ac34 <lchmod@@Base+0x4058>
   1abc4:	mov	r2, r0
   1abc8:	ldr	r3, [sp, #16]
   1abcc:	b	1a764 <lchmod@@Base+0x3b88>
   1abd0:	umull	r8, r9, r0, r7
   1abd4:	mov	r3, r1
   1abd8:	mov	r2, r9
   1abdc:	umlal	r2, r3, ip, r7
   1abe0:	cmp	r3, #0
   1abe4:	bne	1ad40 <lchmod@@Base+0x4164>
   1abe8:	mov	r6, r8
   1abec:	b	1ab0c <lchmod@@Base+0x3f30>
   1abf0:	umull	r8, r9, ip, r7
   1abf4:	mov	r3, r0
   1abf8:	mov	r2, r9
   1abfc:	umlal	r2, r3, r1, r7
   1ac00:	cmp	r3, #0
   1ac04:	bne	1ad88 <lchmod@@Base+0x41ac>
   1ac08:	mov	r6, r8
   1ac0c:	b	1a7a0 <lchmod@@Base+0x3bc4>
   1ac10:	umull	r8, r9, r2, r7
   1ac14:	mov	r1, ip
   1ac18:	mov	r0, r9
   1ac1c:	umlal	r0, r1, r3, r7
   1ac20:	cmp	r1, #0
   1ac24:	bne	1ac54 <lchmod@@Base+0x4078>
   1ac28:	mov	ip, r8
   1ac2c:	mov	r1, r0
   1ac30:	b	1a784 <lchmod@@Base+0x3ba8>
   1ac34:	ldr	lr, [sp, #8]
   1ac38:	mov	r2, r0
   1ac3c:	mov	ip, #1
   1ac40:	ldr	r3, [sp, #12]
   1ac44:	mul	r3, r9, r3
   1ac48:	mla	r3, lr, r8, r3
   1ac4c:	add	r3, r3, r1
   1ac50:	b	1a764 <lchmod@@Base+0x3b88>
   1ac54:	ldr	r1, [sp, #12]
   1ac58:	mov	lr, #1
   1ac5c:	mov	ip, r8
   1ac60:	mul	r1, r2, r1
   1ac64:	ldr	r2, [sp, #8]
   1ac68:	mla	r1, r3, r2, r1
   1ac6c:	add	r1, r1, r9
   1ac70:	b	1a784 <lchmod@@Base+0x3ba8>
   1ac74:	ldrd	r2, [sp, #8]
   1ac78:	mov	r1, #1
   1ac7c:	mul	r3, r9, r3
   1ac80:	mov	r9, r4
   1ac84:	mla	r8, r2, r8, r3
   1ac88:	add	r8, r8, r5
   1ac8c:	b	1aa48 <lchmod@@Base+0x3e6c>
   1ac90:	mul	r3, r9, r1
   1ac94:	mov	ip, #1
   1ac98:	mla	r8, r7, r8, r3
   1ac9c:	ldrd	r6, [sp, #8]
   1aca0:	mov	r9, r6
   1aca4:	add	r8, r8, r7
   1aca8:	b	1a7ec <lchmod@@Base+0x3c10>
   1acac:	movw	r3, #51120	; 0xc7b0
   1acb0:	movt	r3, #1
   1acb4:	movw	r1, #51132	; 0xc7bc
   1acb8:	movt	r1, #1
   1acbc:	movw	r0, #51148	; 0xc7cc
   1acc0:	movt	r0, #1
   1acc4:	mov	r2, #85	; 0x55
   1acc8:	bl	118cc <__assert_fail@plt>
   1accc:	ldr	r3, [sp, #12]
   1acd0:	mov	r1, #1
   1acd4:	mul	r2, r9, r3
   1acd8:	ldr	r3, [sp, #8]
   1acdc:	mov	r9, r4
   1ace0:	mla	r8, r3, r8, r2
   1ace4:	add	r8, r8, r5
   1ace8:	b	1a868 <lchmod@@Base+0x3c8c>
   1acec:	ldrd	r2, [sp, #8]
   1acf0:	mov	r1, #1
   1acf4:	mul	r3, r9, r3
   1acf8:	mov	r9, r4
   1acfc:	mla	r8, r2, r8, r3
   1ad00:	add	r8, r8, r5
   1ad04:	b	1a958 <lchmod@@Base+0x3d7c>
   1ad08:	ldrd	r2, [sp, #8]
   1ad0c:	mov	r1, #1
   1ad10:	mul	r3, r9, r3
   1ad14:	mov	r9, r4
   1ad18:	mla	r8, r2, r8, r3
   1ad1c:	add	r8, r8, r5
   1ad20:	b	1a9d0 <lchmod@@Base+0x3df4>
   1ad24:	ldrd	r2, [sp, #8]
   1ad28:	mov	r1, #1
   1ad2c:	mul	r3, r9, r3
   1ad30:	mov	r9, r4
   1ad34:	mla	r8, r2, r8, r3
   1ad38:	add	r8, r8, r5
   1ad3c:	b	1a8e0 <lchmod@@Base+0x3d04>
   1ad40:	ldr	r3, [sp, #12]
   1ad44:	mov	r6, r8
   1ad48:	mov	r1, #1
   1ad4c:	mul	r2, r0, r3
   1ad50:	ldr	r3, [sp, #8]
   1ad54:	mla	r2, ip, r3, r2
   1ad58:	add	r2, r2, r9
   1ad5c:	b	1ab0c <lchmod@@Base+0x3f30>
   1ad60:	ldr	r3, [sp, #12]
   1ad64:	mov	r1, #1
   1ad68:	ldr	r2, [sp, #16]
   1ad6c:	mul	ip, r9, r3
   1ad70:	ldr	r3, [sp, #8]
   1ad74:	mov	r0, r2
   1ad78:	mla	ip, r3, r8, ip
   1ad7c:	ldr	r3, [sp, #20]
   1ad80:	add	ip, ip, r3
   1ad84:	b	1aaf0 <lchmod@@Base+0x3f14>
   1ad88:	ldr	r3, [sp, #12]
   1ad8c:	mov	r6, r8
   1ad90:	mov	r0, #1
   1ad94:	mul	r2, ip, r3
   1ad98:	ldr	r3, [sp, #8]
   1ad9c:	mla	r2, r1, r3, r2
   1ada0:	add	r2, r2, r9
   1ada4:	b	1a7a0 <lchmod@@Base+0x3bc4>
   1ada8:	cmp	r1, #0
   1adac:	cmpne	r0, #0
   1adb0:	beq	1adfc <lchmod@@Base+0x4220>
   1adb4:	strd	r4, [sp, #-16]!
   1adb8:	umull	r4, r5, r0, r1
   1adbc:	str	r6, [sp, #8]
   1adc0:	str	lr, [sp, #12]
   1adc4:	adds	r3, r5, #0
   1adc8:	movne	r3, #1
   1adcc:	cmp	r4, #0
   1add0:	blt	1addc <lchmod@@Base+0x4200>
   1add4:	cmp	r3, #0
   1add8:	beq	1ae08 <lchmod@@Base+0x422c>
   1addc:	bl	1171c <__errno_location@plt>
   1ade0:	mov	r3, #12
   1ade4:	ldrd	r4, [sp]
   1ade8:	ldr	r6, [sp, #8]
   1adec:	add	sp, sp, #12
   1adf0:	str	r3, [r0]
   1adf4:	mov	r0, #0
   1adf8:	pop	{pc}		; (ldr pc, [sp], #4)
   1adfc:	mov	r1, #1
   1ae00:	mov	r0, r1
   1ae04:	b	114a0 <calloc@plt>
   1ae08:	ldrd	r4, [sp]
   1ae0c:	ldr	r6, [sp, #8]
   1ae10:	ldr	lr, [sp, #12]
   1ae14:	add	sp, sp, #16
   1ae18:	b	114a0 <calloc@plt>
   1ae1c:	cmp	r0, #0
   1ae20:	beq	1ae2c <lchmod@@Base+0x4250>
   1ae24:	blt	1ae34 <lchmod@@Base+0x4258>
   1ae28:	b	1165c <malloc@plt>
   1ae2c:	mov	r0, #1
   1ae30:	b	1165c <malloc@plt>
   1ae34:	str	r4, [sp, #-8]!
   1ae38:	str	lr, [sp, #4]
   1ae3c:	bl	1171c <__errno_location@plt>
   1ae40:	mov	r3, #12
   1ae44:	ldr	r4, [sp]
   1ae48:	add	sp, sp, #4
   1ae4c:	str	r3, [r0]
   1ae50:	mov	r0, #0
   1ae54:	pop	{pc}		; (ldr pc, [sp], #4)
   1ae58:	cmp	r0, #0
   1ae5c:	beq	1ae84 <lchmod@@Base+0x42a8>
   1ae60:	cmp	r1, #0
   1ae64:	str	r4, [sp, #-8]!
   1ae68:	str	lr, [sp, #4]
   1ae6c:	beq	1ae8c <lchmod@@Base+0x42b0>
   1ae70:	blt	1aea0 <lchmod@@Base+0x42c4>
   1ae74:	ldr	r4, [sp]
   1ae78:	ldr	lr, [sp, #4]
   1ae7c:	add	sp, sp, #8
   1ae80:	b	11590 <realloc@plt>
   1ae84:	mov	r0, r1
   1ae88:	b	1ae1c <lchmod@@Base+0x4240>
   1ae8c:	bl	1356c <__assert_fail@plt+0x1ca0>
   1ae90:	ldr	r4, [sp]
   1ae94:	add	sp, sp, #4
   1ae98:	mov	r0, #0
   1ae9c:	pop	{pc}		; (ldr pc, [sp], #4)
   1aea0:	bl	1171c <__errno_location@plt>
   1aea4:	mov	r3, #12
   1aea8:	str	r3, [r0]
   1aeac:	b	1ae90 <lchmod@@Base+0x42b4>
   1aeb0:	ldrb	r3, [r0]
   1aeb4:	cmp	r3, #47	; 0x2f
   1aeb8:	bne	1aec8 <lchmod@@Base+0x42ec>
   1aebc:	ldrb	r3, [r0, #1]!
   1aec0:	cmp	r3, #47	; 0x2f
   1aec4:	beq	1aebc <lchmod@@Base+0x42e0>
   1aec8:	cmp	r3, #0
   1aecc:	beq	1aefc <lchmod@@Base+0x4320>
   1aed0:	mov	r2, r0
   1aed4:	mov	r1, #0
   1aed8:	cmp	r3, #47	; 0x2f
   1aedc:	moveq	r1, #1
   1aee0:	beq	1aef0 <lchmod@@Base+0x4314>
   1aee4:	cmp	r1, #0
   1aee8:	movne	r0, r2
   1aeec:	movne	r1, #0
   1aef0:	ldrb	r3, [r2, #1]!
   1aef4:	cmp	r3, #0
   1aef8:	bne	1aed8 <lchmod@@Base+0x42fc>
   1aefc:	bx	lr
   1af00:	str	r4, [sp, #-8]!
   1af04:	mov	r4, r0
   1af08:	str	lr, [sp, #4]
   1af0c:	bl	116e0 <strlen@plt>
   1af10:	cmp	r0, #1
   1af14:	bls	1af38 <lchmod@@Base+0x435c>
   1af18:	add	r2, r4, r0
   1af1c:	mov	r3, r0
   1af20:	ldrb	r2, [r2, #-1]
   1af24:	cmp	r2, #47	; 0x2f
   1af28:	subeq	r3, r0, #2
   1af2c:	rsbeq	r1, r4, #1
   1af30:	addeq	r3, r4, r3
   1af34:	beq	1af44 <lchmod@@Base+0x4368>
   1af38:	ldr	r4, [sp]
   1af3c:	add	sp, sp, #4
   1af40:	pop	{pc}		; (ldr pc, [sp], #4)
   1af44:	cmp	r3, r4
   1af48:	add	r0, r1, r3
   1af4c:	beq	1af38 <lchmod@@Base+0x435c>
   1af50:	ldrb	r2, [r3], #-1
   1af54:	cmp	r2, #47	; 0x2f
   1af58:	beq	1af44 <lchmod@@Base+0x4368>
   1af5c:	ldr	r4, [sp]
   1af60:	add	sp, sp, #4
   1af64:	pop	{pc}		; (ldr pc, [sp], #4)
   1af68:	strd	r4, [sp, #-16]!
   1af6c:	mov	r4, r0
   1af70:	str	r6, [sp, #8]
   1af74:	str	lr, [sp, #12]
   1af78:	bl	11620 <__fpending@plt>
   1af7c:	ldr	r5, [r4]
   1af80:	mov	r6, r0
   1af84:	mov	r0, r4
   1af88:	bl	1b110 <lchmod@@Base+0x4534>
   1af8c:	mov	r4, r0
   1af90:	and	r5, r5, #32
   1af94:	cmp	r5, #0
   1af98:	bne	1afd0 <lchmod@@Base+0x43f4>
   1af9c:	cmp	r0, #0
   1afa0:	beq	1afbc <lchmod@@Base+0x43e0>
   1afa4:	cmp	r6, #0
   1afa8:	bne	1afe8 <lchmod@@Base+0x440c>
   1afac:	bl	1171c <__errno_location@plt>
   1afb0:	ldr	r4, [r0]
   1afb4:	subs	r4, r4, #9
   1afb8:	mvnne	r4, #0
   1afbc:	mov	r0, r4
   1afc0:	ldrd	r4, [sp]
   1afc4:	ldr	r6, [sp, #8]
   1afc8:	add	sp, sp, #12
   1afcc:	pop	{pc}		; (ldr pc, [sp], #4)
   1afd0:	cmp	r0, #0
   1afd4:	bne	1afe8 <lchmod@@Base+0x440c>
   1afd8:	bl	1171c <__errno_location@plt>
   1afdc:	str	r4, [r0]
   1afe0:	mvn	r4, #0
   1afe4:	b	1afbc <lchmod@@Base+0x43e0>
   1afe8:	mvn	r4, #0
   1afec:	b	1afbc <lchmod@@Base+0x43e0>
   1aff0:	movw	r3, #62998	; 0xf616
   1aff4:	movt	r3, #149	; 0x95
   1aff8:	strd	r4, [sp, #-8]!
   1affc:	mov	r4, #0
   1b000:	mov	r5, #0
   1b004:	strd	r4, [r0, #16]
   1b008:	str	r3, [r0, #24]
   1b00c:	ldrd	r4, [sp]
   1b010:	add	sp, sp, #8
   1b014:	bx	lr
   1b018:	ldr	r2, [r0, #24]
   1b01c:	movw	r3, #62998	; 0xf616
   1b020:	movt	r3, #149	; 0x95
   1b024:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1b028:	strd	r6, [sp, #8]
   1b02c:	strd	r8, [sp, #16]
   1b030:	strd	sl, [sp, #24]
   1b034:	cmp	r2, r3
   1b038:	str	lr, [sp, #32]
   1b03c:	sub	sp, sp, #4
   1b040:	bne	1b0f0 <lchmod@@Base+0x4514>
   1b044:	ldrd	r6, [r0, #16]
   1b048:	ldrd	sl, [r1, #96]	; 0x60
   1b04c:	orrs	r3, r6, r7
   1b050:	beq	1b0a4 <lchmod@@Base+0x44c8>
   1b054:	ldrd	r2, [r0]
   1b058:	cmp	r3, fp
   1b05c:	cmpeq	r2, sl
   1b060:	beq	1b0c4 <lchmod@@Base+0x44e8>
   1b064:	adds	r8, r6, #1
   1b068:	adc	r9, r7, #0
   1b06c:	and	r2, r6, r8
   1b070:	and	r3, r7, r9
   1b074:	orrs	r3, r2, r3
   1b078:	strd	r8, [r0, #16]
   1b07c:	movne	r1, #0
   1b080:	beq	1b0e0 <lchmod@@Base+0x4504>
   1b084:	mov	r0, r1
   1b088:	add	sp, sp, #4
   1b08c:	ldrd	r4, [sp]
   1b090:	ldrd	r6, [sp, #8]
   1b094:	ldrd	r8, [sp, #16]
   1b098:	ldrd	sl, [sp, #24]
   1b09c:	add	sp, sp, #32
   1b0a0:	pop	{pc}		; (ldr pc, [sp], #4)
   1b0a4:	mov	r2, #1
   1b0a8:	mov	r3, #0
   1b0ac:	strd	r2, [r0, #16]
   1b0b0:	ldrd	r2, [r1]
   1b0b4:	mov	r1, #0
   1b0b8:	strd	sl, [r0]
   1b0bc:	strd	r2, [r0, #8]
   1b0c0:	b	1b084 <lchmod@@Base+0x44a8>
   1b0c4:	ldrd	r4, [r1]
   1b0c8:	ldrd	r2, [r0, #8]
   1b0cc:	cmp	r5, r3
   1b0d0:	cmpeq	r4, r2
   1b0d4:	bne	1b064 <lchmod@@Base+0x4488>
   1b0d8:	mov	r1, #1
   1b0dc:	b	1b084 <lchmod@@Base+0x44a8>
   1b0e0:	orrs	r3, r8, r9
   1b0e4:	bne	1b0b0 <lchmod@@Base+0x44d4>
   1b0e8:	mov	r1, #1
   1b0ec:	b	1b084 <lchmod@@Base+0x44a8>
   1b0f0:	movw	r3, #51188	; 0xc7f4
   1b0f4:	movt	r3, #1
   1b0f8:	movw	r1, #51200	; 0xc800
   1b0fc:	movt	r1, #1
   1b100:	movw	r0, #51220	; 0xc814
   1b104:	movt	r0, #1
   1b108:	mov	r2, #60	; 0x3c
   1b10c:	bl	118cc <__assert_fail@plt>
   1b110:	strd	r4, [sp, #-12]!
   1b114:	mov	r4, r0
   1b118:	str	lr, [sp, #8]
   1b11c:	sub	sp, sp, #12
   1b120:	bl	11758 <fileno@plt>
   1b124:	cmp	r0, #0
   1b128:	mov	r0, r4
   1b12c:	blt	1b1b0 <lchmod@@Base+0x45d4>
   1b130:	bl	11674 <__freading@plt>
   1b134:	cmp	r0, #0
   1b138:	bne	1b17c <lchmod@@Base+0x45a0>
   1b13c:	mov	r0, r4
   1b140:	bl	1b3ec <lchmod@@Base+0x4810>
   1b144:	cmp	r0, #0
   1b148:	beq	1b1ac <lchmod@@Base+0x45d0>
   1b14c:	bl	1171c <__errno_location@plt>
   1b150:	mov	r5, r0
   1b154:	mov	r0, r4
   1b158:	ldr	r4, [r5]
   1b15c:	bl	11770 <fclose@plt>
   1b160:	cmp	r4, #0
   1b164:	mvnne	r0, #0
   1b168:	strne	r4, [r5]
   1b16c:	add	sp, sp, #12
   1b170:	ldrd	r4, [sp]
   1b174:	add	sp, sp, #8
   1b178:	pop	{pc}		; (ldr pc, [sp], #4)
   1b17c:	mov	r0, r4
   1b180:	bl	11758 <fileno@plt>
   1b184:	mov	r1, #1
   1b188:	mov	r2, #0
   1b18c:	mov	r3, #0
   1b190:	str	r1, [sp]
   1b194:	bl	115fc <lseek64@plt>
   1b198:	mvn	r3, #0
   1b19c:	mvn	r2, #0
   1b1a0:	cmp	r1, r3
   1b1a4:	cmpeq	r0, r2
   1b1a8:	bne	1b13c <lchmod@@Base+0x4560>
   1b1ac:	mov	r0, r4
   1b1b0:	add	sp, sp, #12
   1b1b4:	ldrd	r4, [sp]
   1b1b8:	ldr	lr, [sp, #8]
   1b1bc:	add	sp, sp, #12
   1b1c0:	b	11770 <fclose@plt>
   1b1c4:	push	{r1, r2, r3}
   1b1c8:	strd	r4, [sp, #-20]!	; 0xffffffec
   1b1cc:	strd	r6, [sp, #8]
   1b1d0:	str	lr, [sp, #16]
   1b1d4:	sub	sp, sp, #8
   1b1d8:	ldr	r1, [sp, #28]
   1b1dc:	add	r2, sp, #32
   1b1e0:	str	r2, [sp, #4]
   1b1e4:	cmp	r1, #0
   1b1e8:	beq	1b2c4 <lchmod@@Base+0x46e8>
   1b1ec:	movw	r3, #1030	; 0x406
   1b1f0:	mov	r6, r0
   1b1f4:	cmp	r1, r3
   1b1f8:	beq	1b2d4 <lchmod@@Base+0x46f8>
   1b1fc:	cmp	r1, #11
   1b200:	beq	1b27c <lchmod@@Base+0x46a0>
   1b204:	ble	1b25c <lchmod@@Base+0x4680>
   1b208:	movw	r2, #1031	; 0x407
   1b20c:	cmp	r1, r2
   1b210:	bgt	1b298 <lchmod@@Base+0x46bc>
   1b214:	cmp	r1, r3
   1b218:	bge	1b228 <lchmod@@Base+0x464c>
   1b21c:	movw	r3, #1025	; 0x401
   1b220:	cmp	r1, r3
   1b224:	beq	1b27c <lchmod@@Base+0x46a0>
   1b228:	ldr	r3, [sp, #4]
   1b22c:	mov	r0, r6
   1b230:	ldr	r2, [r3]
   1b234:	bl	11788 <fcntl64@plt>
   1b238:	mov	r4, r0
   1b23c:	mov	r0, r4
   1b240:	add	sp, sp, #8
   1b244:	ldrd	r4, [sp]
   1b248:	ldrd	r6, [sp, #8]
   1b24c:	ldr	lr, [sp, #16]
   1b250:	add	sp, sp, #20
   1b254:	add	sp, sp, #12
   1b258:	bx	lr
   1b25c:	cmp	r1, #4
   1b260:	beq	1b228 <lchmod@@Base+0x464c>
   1b264:	bgt	1b28c <lchmod@@Base+0x46b0>
   1b268:	cmp	r1, #2
   1b26c:	beq	1b228 <lchmod@@Base+0x464c>
   1b270:	bgt	1b27c <lchmod@@Base+0x46a0>
   1b274:	cmp	r1, #1
   1b278:	bne	1b228 <lchmod@@Base+0x464c>
   1b27c:	mov	r0, r6
   1b280:	bl	11788 <fcntl64@plt>
   1b284:	mov	r4, r0
   1b288:	b	1b23c <lchmod@@Base+0x4660>
   1b28c:	cmp	r1, #9
   1b290:	bne	1b228 <lchmod@@Base+0x464c>
   1b294:	b	1b27c <lchmod@@Base+0x46a0>
   1b298:	movw	r3, #1033	; 0x409
   1b29c:	cmp	r1, r3
   1b2a0:	beq	1b228 <lchmod@@Base+0x464c>
   1b2a4:	blt	1b27c <lchmod@@Base+0x46a0>
   1b2a8:	movw	r3, #1034	; 0x40a
   1b2ac:	cmp	r1, r3
   1b2b0:	bne	1b228 <lchmod@@Base+0x464c>
   1b2b4:	mov	r0, r6
   1b2b8:	bl	11788 <fcntl64@plt>
   1b2bc:	mov	r4, r0
   1b2c0:	b	1b23c <lchmod@@Base+0x4660>
   1b2c4:	ldr	r2, [sp, #32]
   1b2c8:	bl	11788 <fcntl64@plt>
   1b2cc:	mov	r4, r0
   1b2d0:	b	1b23c <lchmod@@Base+0x4660>
   1b2d4:	movw	r5, #54060	; 0xd32c
   1b2d8:	movt	r5, #2
   1b2dc:	ldr	r7, [r2]
   1b2e0:	add	r2, sp, #36	; 0x24
   1b2e4:	ldr	r3, [r5]
   1b2e8:	str	r2, [sp, #4]
   1b2ec:	mov	r2, r7
   1b2f0:	cmp	r3, #0
   1b2f4:	blt	1b310 <lchmod@@Base+0x4734>
   1b2f8:	bl	11788 <fcntl64@plt>
   1b2fc:	subs	r4, r0, #0
   1b300:	blt	1b378 <lchmod@@Base+0x479c>
   1b304:	mov	r3, #1
   1b308:	str	r3, [r5]
   1b30c:	b	1b23c <lchmod@@Base+0x4660>
   1b310:	mov	r1, #0
   1b314:	bl	11788 <fcntl64@plt>
   1b318:	subs	r4, r0, #0
   1b31c:	blt	1b23c <lchmod@@Base+0x4660>
   1b320:	ldr	r3, [r5]
   1b324:	cmn	r3, #1
   1b328:	bne	1b23c <lchmod@@Base+0x4660>
   1b32c:	mov	r1, #1
   1b330:	mov	r0, r4
   1b334:	bl	11788 <fcntl64@plt>
   1b338:	subs	r2, r0, #0
   1b33c:	blt	1b358 <lchmod@@Base+0x477c>
   1b340:	orr	r2, r2, #1
   1b344:	mov	r1, #2
   1b348:	mov	r0, r4
   1b34c:	bl	11788 <fcntl64@plt>
   1b350:	cmn	r0, #1
   1b354:	bne	1b23c <lchmod@@Base+0x4660>
   1b358:	bl	1171c <__errno_location@plt>
   1b35c:	mov	r5, r0
   1b360:	mov	r0, r4
   1b364:	ldr	r6, [r5]
   1b368:	mvn	r4, #0
   1b36c:	bl	11884 <close@plt>
   1b370:	str	r6, [r5]
   1b374:	b	1b23c <lchmod@@Base+0x4660>
   1b378:	bl	1171c <__errno_location@plt>
   1b37c:	ldr	r3, [r0]
   1b380:	cmp	r3, #22
   1b384:	bne	1b304 <lchmod@@Base+0x4728>
   1b388:	mov	r2, r7
   1b38c:	mov	r0, r6
   1b390:	mov	r1, #0
   1b394:	bl	11788 <fcntl64@plt>
   1b398:	subs	r4, r0, #0
   1b39c:	mvnge	r3, #0
   1b3a0:	strge	r3, [r5]
   1b3a4:	bge	1b32c <lchmod@@Base+0x4750>
   1b3a8:	b	1b23c <lchmod@@Base+0x4660>
   1b3ac:	push	{r1, r2, r3}
   1b3b0:	push	{lr}		; (str lr, [sp, #-4]!)
   1b3b4:	sub	sp, sp, #8
   1b3b8:	ldr	r1, [sp, #12]
   1b3bc:	ands	r2, r1, #64	; 0x40
   1b3c0:	bne	1b3dc <lchmod@@Base+0x4800>
   1b3c4:	bl	11644 <open64@plt>
   1b3c8:	bl	198c4 <lchmod@@Base+0x2ce8>
   1b3cc:	add	sp, sp, #8
   1b3d0:	pop	{lr}		; (ldr lr, [sp], #4)
   1b3d4:	add	sp, sp, #12
   1b3d8:	bx	lr
   1b3dc:	add	r3, sp, #16
   1b3e0:	ldr	r2, [sp, #16]
   1b3e4:	str	r3, [sp, #4]
   1b3e8:	b	1b3c4 <lchmod@@Base+0x47e8>
   1b3ec:	str	r4, [sp, #-8]!
   1b3f0:	subs	r4, r0, #0
   1b3f4:	str	lr, [sp, #4]
   1b3f8:	sub	sp, sp, #8
   1b3fc:	beq	1b418 <lchmod@@Base+0x483c>
   1b400:	bl	11674 <__freading@plt>
   1b404:	cmp	r0, #0
   1b408:	beq	1b418 <lchmod@@Base+0x483c>
   1b40c:	ldr	r3, [r4]
   1b410:	tst	r3, #256	; 0x100
   1b414:	bne	1b430 <lchmod@@Base+0x4854>
   1b418:	mov	r0, r4
   1b41c:	add	sp, sp, #8
   1b420:	ldr	r4, [sp]
   1b424:	ldr	lr, [sp, #4]
   1b428:	add	sp, sp, #8
   1b42c:	b	114e8 <fflush@plt>
   1b430:	mov	r1, #1
   1b434:	mov	r2, #0
   1b438:	mov	r3, #0
   1b43c:	mov	r0, r4
   1b440:	str	r1, [sp]
   1b444:	bl	1b44c <lchmod@@Base+0x4870>
   1b448:	b	1b418 <lchmod@@Base+0x483c>
   1b44c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1b450:	mov	r4, r0
   1b454:	ldr	ip, [r0, #4]
   1b458:	strd	r6, [sp, #8]
   1b45c:	str	lr, [sp, #20]
   1b460:	ldr	lr, [r0, #8]
   1b464:	str	r8, [sp, #16]
   1b468:	sub	sp, sp, #8
   1b46c:	ldr	r5, [sp, #32]
   1b470:	cmp	lr, ip
   1b474:	beq	1b49c <lchmod@@Base+0x48c0>
   1b478:	mov	r0, r4
   1b47c:	str	r5, [sp, #32]
   1b480:	add	sp, sp, #8
   1b484:	ldrd	r4, [sp]
   1b488:	ldrd	r6, [sp, #8]
   1b48c:	ldr	r8, [sp, #16]
   1b490:	ldr	lr, [sp, #20]
   1b494:	add	sp, sp, #24
   1b498:	b	1177c <fseeko64@plt>
   1b49c:	ldr	ip, [r0, #16]
   1b4a0:	ldr	lr, [r0, #20]
   1b4a4:	cmp	lr, ip
   1b4a8:	bne	1b478 <lchmod@@Base+0x489c>
   1b4ac:	ldr	r8, [r0, #36]	; 0x24
   1b4b0:	cmp	r8, #0
   1b4b4:	bne	1b478 <lchmod@@Base+0x489c>
   1b4b8:	mov	r6, r2
   1b4bc:	mov	r7, r3
   1b4c0:	bl	11758 <fileno@plt>
   1b4c4:	mov	r2, r6
   1b4c8:	mov	r3, r7
   1b4cc:	str	r5, [sp]
   1b4d0:	bl	115fc <lseek64@plt>
   1b4d4:	mvn	r3, #0
   1b4d8:	mvn	r2, #0
   1b4dc:	cmp	r1, r3
   1b4e0:	cmpeq	r0, r2
   1b4e4:	beq	1b514 <lchmod@@Base+0x4938>
   1b4e8:	ldr	r3, [r4]
   1b4ec:	strd	r0, [r4, #80]	; 0x50
   1b4f0:	bic	r3, r3, #16
   1b4f4:	str	r3, [r4]
   1b4f8:	mov	r0, r8
   1b4fc:	add	sp, sp, #8
   1b500:	ldrd	r4, [sp]
   1b504:	ldrd	r6, [sp, #8]
   1b508:	ldr	r8, [sp, #16]
   1b50c:	add	sp, sp, #20
   1b510:	pop	{pc}		; (ldr pc, [sp], #4)
   1b514:	mvn	r8, #0
   1b518:	b	1b4f8 <lchmod@@Base+0x491c>
   1b51c:	ldrb	r3, [r0]
   1b520:	cmp	r3, #0
   1b524:	beq	1b548 <lchmod@@Base+0x496c>
   1b528:	mov	r2, #0
   1b52c:	add	r2, r3, r2, ror #23
   1b530:	ldrb	r3, [r0, #1]!
   1b534:	cmp	r3, #0
   1b538:	bne	1b52c <lchmod@@Base+0x4950>
   1b53c:	udiv	r3, r2, r1
   1b540:	mls	r0, r1, r3, r2
   1b544:	bx	lr
   1b548:	mov	r0, r3
   1b54c:	bx	lr
   1b550:	mov	r0, #14
   1b554:	str	r4, [sp, #-8]!
   1b558:	str	lr, [sp, #4]
   1b55c:	bl	117b8 <nl_langinfo@plt>
   1b560:	cmp	r0, #0
   1b564:	beq	1b588 <lchmod@@Base+0x49ac>
   1b568:	ldrb	r2, [r0]
   1b56c:	movw	r3, #51244	; 0xc82c
   1b570:	movt	r3, #1
   1b574:	ldr	r4, [sp]
   1b578:	add	sp, sp, #4
   1b57c:	cmp	r2, #0
   1b580:	moveq	r0, r3
   1b584:	pop	{pc}		; (ldr pc, [sp], #4)
   1b588:	ldr	r4, [sp]
   1b58c:	add	sp, sp, #4
   1b590:	movw	r0, #51244	; 0xc82c
   1b594:	movt	r0, #1
   1b598:	pop	{pc}		; (ldr pc, [sp], #4)
   1b59c:	strd	r4, [sp, #-20]!	; 0xffffffec
   1b5a0:	mov	r5, r2
   1b5a4:	strd	r6, [sp, #8]
   1b5a8:	subs	r6, r0, #0
   1b5ac:	mov	r7, r1
   1b5b0:	str	lr, [sp, #16]
   1b5b4:	sub	sp, sp, #12
   1b5b8:	addeq	r6, sp, #4
   1b5bc:	mov	r0, r6
   1b5c0:	bl	1162c <mbrtowc@plt>
   1b5c4:	cmp	r5, #0
   1b5c8:	cmnne	r0, #3
   1b5cc:	mov	r4, r0
   1b5d0:	bhi	1b5ec <lchmod@@Base+0x4a10>
   1b5d4:	mov	r0, r4
   1b5d8:	add	sp, sp, #12
   1b5dc:	ldrd	r4, [sp]
   1b5e0:	ldrd	r6, [sp, #8]
   1b5e4:	add	sp, sp, #16
   1b5e8:	pop	{pc}		; (ldr pc, [sp], #4)
   1b5ec:	mov	r0, #0
   1b5f0:	bl	1b650 <lchmod@@Base+0x4a74>
   1b5f4:	cmp	r0, #0
   1b5f8:	bne	1b5d4 <lchmod@@Base+0x49f8>
   1b5fc:	ldrb	r3, [r7]
   1b600:	mov	r4, #1
   1b604:	str	r3, [r6]
   1b608:	b	1b5d4 <lchmod@@Base+0x49f8>
   1b60c:	umull	r2, r3, r1, r2
   1b610:	cmp	r3, #0
   1b614:	bne	1b620 <lchmod@@Base+0x4a44>
   1b618:	mov	r1, r2
   1b61c:	b	1ae58 <lchmod@@Base+0x427c>
   1b620:	str	r4, [sp, #-8]!
   1b624:	str	lr, [sp, #4]
   1b628:	bl	1171c <__errno_location@plt>
   1b62c:	mov	r3, #12
   1b630:	ldr	r4, [sp]
   1b634:	add	sp, sp, #4
   1b638:	str	r3, [r0]
   1b63c:	mov	r0, #0
   1b640:	pop	{pc}		; (ldr pc, [sp], #4)
   1b644:	mov	r2, #3
   1b648:	mov	r1, #0
   1b64c:	b	1b1c4 <lchmod@@Base+0x45e8>
   1b650:	push	{lr}		; (str lr, [sp, #-4]!)
   1b654:	sub	sp, sp, #268	; 0x10c
   1b658:	movw	r2, #257	; 0x101
   1b65c:	add	r1, sp, #4
   1b660:	bl	1b6a8 <lchmod@@Base+0x4acc>
   1b664:	cmp	r0, #0
   1b668:	movne	r0, #0
   1b66c:	bne	1b6a0 <lchmod@@Base+0x4ac4>
   1b670:	movw	r1, #51252	; 0xc834
   1b674:	movt	r1, #1
   1b678:	add	r0, sp, #4
   1b67c:	bl	114d0 <strcmp@plt>
   1b680:	cmp	r0, #0
   1b684:	beq	1b6a0 <lchmod@@Base+0x4ac4>
   1b688:	add	r0, sp, #4
   1b68c:	movw	r1, #51256	; 0xc838
   1b690:	movt	r1, #1
   1b694:	bl	114d0 <strcmp@plt>
   1b698:	adds	r0, r0, #0
   1b69c:	movne	r0, #1
   1b6a0:	add	sp, sp, #268	; 0x10c
   1b6a4:	pop	{pc}		; (ldr pc, [sp], #4)
   1b6a8:	strd	r4, [sp, #-16]!
   1b6ac:	mov	r5, r1
   1b6b0:	mov	r1, #0
   1b6b4:	mov	r4, r2
   1b6b8:	str	r6, [sp, #8]
   1b6bc:	str	lr, [sp, #12]
   1b6c0:	bl	11794 <setlocale@plt>
   1b6c4:	subs	r6, r0, #0
   1b6c8:	beq	1b748 <lchmod@@Base+0x4b6c>
   1b6cc:	bl	116e0 <strlen@plt>
   1b6d0:	cmp	r4, r0
   1b6d4:	bhi	1b6f4 <lchmod@@Base+0x4b18>
   1b6d8:	cmp	r4, #0
   1b6dc:	moveq	r0, #34	; 0x22
   1b6e0:	bne	1b718 <lchmod@@Base+0x4b3c>
   1b6e4:	ldrd	r4, [sp]
   1b6e8:	ldr	r6, [sp, #8]
   1b6ec:	add	sp, sp, #12
   1b6f0:	pop	{pc}		; (ldr pc, [sp], #4)
   1b6f4:	add	r2, r0, #1
   1b6f8:	mov	r1, r6
   1b6fc:	mov	r0, r5
   1b700:	bl	11530 <memcpy@plt>
   1b704:	ldrd	r4, [sp]
   1b708:	mov	r0, #0
   1b70c:	ldr	r6, [sp, #8]
   1b710:	add	sp, sp, #12
   1b714:	pop	{pc}		; (ldr pc, [sp], #4)
   1b718:	sub	r4, r4, #1
   1b71c:	mov	r1, r6
   1b720:	mov	r2, r4
   1b724:	mov	r0, r5
   1b728:	bl	11530 <memcpy@plt>
   1b72c:	mov	r3, #0
   1b730:	mov	r0, #34	; 0x22
   1b734:	strb	r3, [r5, r4]
   1b738:	ldrd	r4, [sp]
   1b73c:	ldr	r6, [sp, #8]
   1b740:	add	sp, sp, #12
   1b744:	pop	{pc}		; (ldr pc, [sp], #4)
   1b748:	cmp	r4, #0
   1b74c:	mov	r0, #22
   1b750:	strbne	r6, [r5]
   1b754:	ldrd	r4, [sp]
   1b758:	ldr	r6, [sp, #8]
   1b75c:	add	sp, sp, #12
   1b760:	pop	{pc}		; (ldr pc, [sp], #4)
   1b764:	mov	r1, #0
   1b768:	b	11794 <setlocale@plt>
   1b76c:	cmp	r3, #0
   1b770:	cmpeq	r2, #0
   1b774:	bne	1b78c <lchmod@@Base+0x4bb0>
   1b778:	cmp	r1, #0
   1b77c:	cmpeq	r0, #0
   1b780:	mvnne	r1, #0
   1b784:	mvnne	r0, #0
   1b788:	b	1b7a8 <lchmod@@Base+0x4bcc>
   1b78c:	sub	sp, sp, #8
   1b790:	push	{sp, lr}
   1b794:	bl	1b7b8 <lchmod@@Base+0x4bdc>
   1b798:	ldr	lr, [sp, #4]
   1b79c:	add	sp, sp, #8
   1b7a0:	pop	{r2, r3}
   1b7a4:	bx	lr
   1b7a8:	push	{r1, lr}
   1b7ac:	mov	r0, #8
   1b7b0:	bl	114b8 <raise@plt>
   1b7b4:	pop	{r1, pc}
   1b7b8:	cmp	r1, r3
   1b7bc:	cmpeq	r0, r2
   1b7c0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b7c4:	mov	r4, r0
   1b7c8:	movcc	r0, #0
   1b7cc:	mov	r5, r1
   1b7d0:	ldr	lr, [sp, #36]	; 0x24
   1b7d4:	movcc	r1, r0
   1b7d8:	bcc	1b8d4 <lchmod@@Base+0x4cf8>
   1b7dc:	cmp	r3, #0
   1b7e0:	clzeq	ip, r2
   1b7e4:	clzne	ip, r3
   1b7e8:	addeq	ip, ip, #32
   1b7ec:	cmp	r5, #0
   1b7f0:	clzeq	r1, r4
   1b7f4:	addeq	r1, r1, #32
   1b7f8:	clzne	r1, r5
   1b7fc:	sub	ip, ip, r1
   1b800:	sub	sl, ip, #32
   1b804:	lsl	r9, r3, ip
   1b808:	rsb	fp, ip, #32
   1b80c:	orr	r9, r9, r2, lsl sl
   1b810:	orr	r9, r9, r2, lsr fp
   1b814:	lsl	r8, r2, ip
   1b818:	cmp	r5, r9
   1b81c:	cmpeq	r4, r8
   1b820:	movcc	r0, #0
   1b824:	movcc	r1, r0
   1b828:	bcc	1b844 <lchmod@@Base+0x4c68>
   1b82c:	mov	r0, #1
   1b830:	subs	r4, r4, r8
   1b834:	lsl	r1, r0, sl
   1b838:	orr	r1, r1, r0, lsr fp
   1b83c:	lsl	r0, r0, ip
   1b840:	sbc	r5, r5, r9
   1b844:	cmp	ip, #0
   1b848:	beq	1b8d4 <lchmod@@Base+0x4cf8>
   1b84c:	lsr	r6, r8, #1
   1b850:	orr	r6, r6, r9, lsl #31
   1b854:	lsr	r7, r9, #1
   1b858:	mov	r2, ip
   1b85c:	b	1b880 <lchmod@@Base+0x4ca4>
   1b860:	subs	r3, r4, r6
   1b864:	sbc	r8, r5, r7
   1b868:	adds	r3, r3, r3
   1b86c:	adc	r8, r8, r8
   1b870:	adds	r4, r3, #1
   1b874:	adc	r5, r8, #0
   1b878:	subs	r2, r2, #1
   1b87c:	beq	1b89c <lchmod@@Base+0x4cc0>
   1b880:	cmp	r5, r7
   1b884:	cmpeq	r4, r6
   1b888:	bcs	1b860 <lchmod@@Base+0x4c84>
   1b88c:	adds	r4, r4, r4
   1b890:	adc	r5, r5, r5
   1b894:	subs	r2, r2, #1
   1b898:	bne	1b880 <lchmod@@Base+0x4ca4>
   1b89c:	lsr	r3, r4, ip
   1b8a0:	orr	r3, r3, r5, lsl fp
   1b8a4:	lsr	r2, r5, ip
   1b8a8:	orr	r3, r3, r5, lsr sl
   1b8ac:	adds	r0, r0, r4
   1b8b0:	mov	r4, r3
   1b8b4:	lsl	r3, r2, ip
   1b8b8:	orr	r3, r3, r4, lsl sl
   1b8bc:	lsl	ip, r4, ip
   1b8c0:	orr	r3, r3, r4, lsr fp
   1b8c4:	adc	r1, r1, r5
   1b8c8:	subs	r0, r0, ip
   1b8cc:	mov	r5, r2
   1b8d0:	sbc	r1, r1, r3
   1b8d4:	cmp	lr, #0
   1b8d8:	strdne	r4, [lr]
   1b8dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b8e0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1b8e4:	mov	r7, r0
   1b8e8:	ldr	r6, [pc, #72]	; 1b938 <lchmod@@Base+0x4d5c>
   1b8ec:	ldr	r5, [pc, #72]	; 1b93c <lchmod@@Base+0x4d60>
   1b8f0:	add	r6, pc, r6
   1b8f4:	add	r5, pc, r5
   1b8f8:	sub	r6, r6, r5
   1b8fc:	mov	r8, r1
   1b900:	mov	r9, r2
   1b904:	bl	11468 <fstatfs64@plt-0x20>
   1b908:	asrs	r6, r6, #2
   1b90c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1b910:	mov	r4, #0
   1b914:	add	r4, r4, #1
   1b918:	ldr	r3, [r5], #4
   1b91c:	mov	r2, r9
   1b920:	mov	r1, r8
   1b924:	mov	r0, r7
   1b928:	blx	r3
   1b92c:	cmp	r6, r4
   1b930:	bne	1b914 <lchmod@@Base+0x4d38>
   1b934:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1b938:	andeq	r1, r1, r4, lsl r6
   1b93c:	andeq	r1, r1, ip, lsl #12
   1b940:	bx	lr
   1b944:	ldr	r3, [pc, #12]	; 1b958 <lchmod@@Base+0x4d7c>
   1b948:	mov	r1, #0
   1b94c:	add	r3, pc, r3
   1b950:	ldr	r2, [r3]
   1b954:	b	11734 <__cxa_atexit@plt>
   1b958:	andeq	r1, r1, r0, lsr r8

Disassembly of section .fini:

0001b95c <.fini>:
   1b95c:	push	{r3, lr}
   1b960:	pop	{r3, pc}
