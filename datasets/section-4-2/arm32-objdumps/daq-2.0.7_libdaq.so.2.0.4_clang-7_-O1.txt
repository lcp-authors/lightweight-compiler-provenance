
../repos/daq-2.0.7/api/.libs/libdaq.so.2.0.4:     file format elf32-littlearm


Disassembly of section .init:

00000e20 <_init>:
 e20:	push	{r3, lr}
 e24:	bl	f48 <call_weak_fn>
 e28:	pop	{r3, pc}

Disassembly of section .plt:

00000e2c <.plt>:
 e2c:	push	{lr}		; (str lr, [sp, #-4]!)
 e30:	ldr	lr, [pc, #4]	; e3c <.plt+0x10>
 e34:	add	lr, pc, lr
 e38:	ldr	pc, [lr, #8]!
 e3c:	.word	0x000121c4

00000e40 <calloc@plt>:
 e40:	add	ip, pc, #0, 12
 e44:	add	ip, ip, #73728	; 0x12000
 e48:	ldr	pc, [ip, #452]!	; 0x1c4

00000e4c <strcmp@plt>:
 e4c:	add	ip, pc, #0, 12
 e50:	add	ip, ip, #73728	; 0x12000
 e54:	ldr	pc, [ip, #444]!	; 0x1bc

00000e58 <__cxa_finalize@plt>:
 e58:	add	ip, pc, #0, 12
 e5c:	add	ip, ip, #73728	; 0x12000
 e60:	ldr	pc, [ip, #436]!	; 0x1b4

00000e64 <printf@plt>:
 e64:	add	ip, pc, #0, 12
 e68:	add	ip, ip, #73728	; 0x12000
 e6c:	ldr	pc, [ip, #428]!	; 0x1ac

00000e70 <free@plt>:
 e70:	add	ip, pc, #0, 12
 e74:	add	ip, ip, #73728	; 0x12000
 e78:	ldr	pc, [ip, #420]!	; 0x1a4

00000e7c <strdup@plt>:
 e7c:	add	ip, pc, #0, 12
 e80:	add	ip, ip, #73728	; 0x12000
 e84:	ldr	pc, [ip, #412]!	; 0x19c

00000e88 <dlclose@plt>:
 e88:	add	ip, pc, #0, 12
 e8c:	add	ip, ip, #73728	; 0x12000
 e90:	ldr	pc, [ip, #404]!	; 0x194

00000e94 <dlerror@plt>:
 e94:	add	ip, pc, #0, 12
 e98:	add	ip, ip, #73728	; 0x12000
 e9c:	ldr	pc, [ip, #396]!	; 0x18c

00000ea0 <daq_mode_string@plt>:
 ea0:	add	ip, pc, #0, 12
 ea4:	add	ip, ip, #73728	; 0x12000
 ea8:	ldr	pc, [ip, #388]!	; 0x184

00000eac <__xstat@plt>:
 eac:	add	ip, pc, #0, 12
 eb0:	add	ip, ip, #73728	; 0x12000
 eb4:	ldr	pc, [ip, #380]!	; 0x17c

00000eb8 <fwrite@plt>:
 eb8:	add	ip, pc, #0, 12
 ebc:	add	ip, ip, #73728	; 0x12000
 ec0:	ldr	pc, [ip, #372]!	; 0x174

00000ec4 <dlopen@plt>:
 ec4:	add	ip, pc, #0, 12
 ec8:	add	ip, ip, #73728	; 0x12000
 ecc:	ldr	pc, [ip, #364]!	; 0x16c

00000ed0 <opendir@plt>:
 ed0:	add	ip, pc, #0, 12
 ed4:	add	ip, ip, #73728	; 0x12000
 ed8:	ldr	pc, [ip, #356]!	; 0x164

00000edc <__gmon_start__@plt>:
 edc:	add	ip, pc, #0, 12
 ee0:	add	ip, ip, #73728	; 0x12000
 ee4:	ldr	pc, [ip, #348]!	; 0x15c

00000ee8 <strlen@plt>:
 ee8:	add	ip, pc, #0, 12
 eec:	add	ip, ip, #73728	; 0x12000
 ef0:	ldr	pc, [ip, #340]!	; 0x154

00000ef4 <fprintf@plt>:
 ef4:	add	ip, pc, #0, 12
 ef8:	add	ip, ip, #73728	; 0x12000
 efc:	ldr	pc, [ip, #332]!	; 0x14c

00000f00 <snprintf@plt>:
 f00:	add	ip, pc, #0, 12
 f04:	add	ip, ip, #73728	; 0x12000
 f08:	ldr	pc, [ip, #324]!	; 0x144

00000f0c <daq_free_module_list@plt>:
 f0c:	add	ip, pc, #0, 12
 f10:	add	ip, ip, #73728	; 0x12000
 f14:	ldr	pc, [ip, #316]!	; 0x13c

00000f18 <readdir@plt>:
 f18:	add	ip, pc, #0, 12
 f1c:	add	ip, ip, #73728	; 0x12000
 f20:	ldr	pc, [ip, #308]!	; 0x134

00000f24 <strrchr@plt>:
 f24:	add	ip, pc, #0, 12
 f28:	add	ip, ip, #73728	; 0x12000
 f2c:	ldr	pc, [ip, #300]!	; 0x12c

00000f30 <dlsym@plt>:
 f30:	add	ip, pc, #0, 12
 f34:	add	ip, ip, #73728	; 0x12000
 f38:	ldr	pc, [ip, #292]!	; 0x124

00000f3c <closedir@plt>:
 f3c:	add	ip, pc, #0, 12
 f40:	add	ip, ip, #73728	; 0x12000
 f44:	ldr	pc, [ip, #284]!	; 0x11c

Disassembly of section .text:

00000f48 <call_weak_fn>:
     f48:	ldr	r3, [pc, #20]	; f64 <call_weak_fn+0x1c>
     f4c:	ldr	r2, [pc, #20]	; f68 <call_weak_fn+0x20>
     f50:	add	r3, pc, r3
     f54:	ldr	r2, [r3, r2]
     f58:	cmp	r2, #0
     f5c:	bxeq	lr
     f60:	b	edc <__gmon_start__@plt>
     f64:	.word	0x000120a8
     f68:	.word	0x00000070

00000f6c <deregister_tm_clones>:
     f6c:	ldr	r0, [pc, #44]	; fa0 <deregister_tm_clones+0x34>
     f70:	ldr	r3, [pc, #44]	; fa4 <deregister_tm_clones+0x38>
     f74:	add	r0, pc, r0
     f78:	add	r3, pc, r3
     f7c:	cmp	r3, r0
     f80:	ldr	r3, [pc, #32]	; fa8 <deregister_tm_clones+0x3c>
     f84:	add	r3, pc, r3
     f88:	bxeq	lr
     f8c:	ldr	r2, [pc, #24]	; fac <deregister_tm_clones+0x40>
     f90:	ldr	r3, [r3, r2]
     f94:	cmp	r3, #0
     f98:	bxeq	lr
     f9c:	bx	r3
     fa0:	.word	0x00012104
     fa4:	.word	0x00012100
     fa8:	.word	0x00012074
     fac:	.word	0x00000068

00000fb0 <register_tm_clones>:
     fb0:	ldr	r0, [pc, #56]	; ff0 <register_tm_clones+0x40>
     fb4:	ldr	r3, [pc, #56]	; ff4 <register_tm_clones+0x44>
     fb8:	add	r0, pc, r0
     fbc:	add	r3, pc, r3
     fc0:	sub	r1, r3, r0
     fc4:	ldr	r3, [pc, #44]	; ff8 <register_tm_clones+0x48>
     fc8:	asr	r1, r1, #2
     fcc:	add	r3, pc, r3
     fd0:	add	r1, r1, r1, lsr #31
     fd4:	asrs	r1, r1, #1
     fd8:	bxeq	lr
     fdc:	ldr	r2, [pc, #24]	; ffc <register_tm_clones+0x4c>
     fe0:	ldr	r3, [r3, r2]
     fe4:	cmp	r3, #0
     fe8:	bxeq	lr
     fec:	bx	r3
     ff0:	.word	0x000120c0
     ff4:	.word	0x000120bc
     ff8:	.word	0x0001202c
     ffc:	.word	0x00000078

00001000 <__do_global_dtors_aux>:
    1000:	ldr	r3, [pc, #76]	; 1054 <__do_global_dtors_aux+0x54>
    1004:	ldr	r2, [pc, #76]	; 1058 <__do_global_dtors_aux+0x58>
    1008:	add	r3, pc, r3
    100c:	add	r2, pc, r2
    1010:	ldrb	r3, [r3]
    1014:	cmp	r3, #0
    1018:	bxne	lr
    101c:	ldr	r3, [pc, #56]	; 105c <__do_global_dtors_aux+0x5c>
    1020:	push	{r4, lr}
    1024:	ldr	r3, [r2, r3]
    1028:	cmp	r3, #0
    102c:	beq	103c <__do_global_dtors_aux+0x3c>
    1030:	ldr	r3, [pc, #40]	; 1060 <__do_global_dtors_aux+0x60>
    1034:	ldr	r0, [pc, r3]
    1038:	bl	e58 <__cxa_finalize@plt>
    103c:	bl	f6c <deregister_tm_clones>
    1040:	ldr	r3, [pc, #28]	; 1064 <__do_global_dtors_aux+0x64>
    1044:	mov	r2, #1
    1048:	add	r3, pc, r3
    104c:	strb	r2, [r3]
    1050:	pop	{r4, pc}
    1054:	.word	0x00012070
    1058:	.word	0x00011fec
    105c:	.word	0x00000064
    1060:	.word	0x00012040
    1064:	.word	0x00012030

00001068 <frame_dummy>:
    1068:	b	fb0 <register_tm_clones>

0000106c <daq_verdict_string>:
    106c:	mov	r1, r0
    1070:	mov	r0, #0
    1074:	cmp	r1, #6
    1078:	ldrls	r0, [pc, #8]	; 1088 <daq_verdict_string+0x1c>
    107c:	addls	r0, pc, r0
    1080:	ldrls	r0, [r0, r1, lsl #2]
    1084:	bx	lr
    1088:	.word	0x00011e48

0000108c <daq_mode_string>:
    108c:	mov	r1, r0
    1090:	mov	r0, #0
    1094:	cmp	r1, #2
    1098:	ldrls	r0, [pc, #8]	; 10a8 <daq_mode_string+0x1c>
    109c:	addls	r0, pc, r0
    10a0:	ldrls	r0, [r0, r1, lsl #2]
    10a4:	bx	lr
    10a8:	.word	0x00011e44

000010ac <daq_state_string>:
    10ac:	mov	r1, r0
    10b0:	mov	r0, #0
    10b4:	cmp	r1, #4
    10b8:	ldrls	r0, [pc, #8]	; 10c8 <daq_state_string+0x1c>
    10bc:	addls	r0, pc, r0
    10c0:	ldrls	r0, [r0, r1, lsl #2]
    10c4:	bx	lr
    10c8:	.word	0x00011e30

000010cc <daq_find_module>:
    10cc:	push	{r4, r5, r6, sl, fp, lr}
    10d0:	add	fp, sp, #16
    10d4:	ldr	r6, [pc, #64]	; 111c <daq_find_module+0x50>
    10d8:	ldr	r6, [pc, r6]
    10dc:	cmp	r6, #0
    10e0:	beq	1110 <daq_find_module+0x44>
    10e4:	mov	r4, r0
    10e8:	ldr	r5, [r6]
    10ec:	ldr	r1, [r5, #8]
    10f0:	mov	r0, r4
    10f4:	bl	e4c <strcmp@plt>
    10f8:	cmp	r0, #0
    10fc:	moveq	r0, r5
    1100:	popeq	{r4, r5, r6, sl, fp, pc}
    1104:	ldr	r6, [r6, #8]
    1108:	cmp	r6, #0
    110c:	bne	10e8 <daq_find_module+0x1c>
    1110:	mov	r5, #0
    1114:	mov	r0, r5
    1118:	pop	{r4, r5, r6, sl, fp, pc}
    111c:	.word	0x00011fa4

00001120 <daq_load_modules>:
    1120:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1124:	add	fp, sp, #28
    1128:	sub	sp, sp, #524	; 0x20c
    112c:	mov	sl, #0
    1130:	cmp	r0, #0
    1134:	beq	126c <daq_load_modules+0x14c>
    1138:	mov	r5, r0
    113c:	ldr	r0, [r0]
    1140:	cmp	r0, #0
    1144:	beq	126c <daq_load_modules+0x14c>
    1148:	ldr	r6, [pc, #296]	; 1278 <daq_load_modules+0x158>
    114c:	add	r6, pc, r6
    1150:	add	r7, sp, #8
    1154:	ldr	r4, [pc, #288]	; 127c <daq_load_modules+0x15c>
    1158:	add	r4, pc, r4
    115c:	ldrb	r1, [r0]
    1160:	cmp	r1, #0
    1164:	beq	1250 <daq_load_modules+0x130>
    1168:	bl	ed0 <opendir@plt>
    116c:	cmp	r0, #0
    1170:	beq	1198 <daq_load_modules+0x78>
    1174:	mov	r9, r0
    1178:	ldr	r0, [pc, #264]	; 1288 <daq_load_modules+0x168>
    117c:	ldr	r0, [pc, r0]
    1180:	cmp	r0, #1
    1184:	blt	11bc <daq_load_modules+0x9c>
    1188:	ldr	r1, [r5]
    118c:	ldr	r0, [pc, #248]	; 128c <daq_load_modules+0x16c>
    1190:	add	r0, pc, r0
    1194:	b	11b8 <daq_load_modules+0x98>
    1198:	ldr	r2, [r5]
    119c:	ldr	r0, [pc, #220]	; 1280 <daq_load_modules+0x160>
    11a0:	ldr	r0, [pc, r0]
    11a4:	ldr	r0, [r0]
    11a8:	ldr	r1, [pc, #212]	; 1284 <daq_load_modules+0x164>
    11ac:	add	r1, pc, r1
    11b0:	bl	ef4 <fprintf@plt>
    11b4:	b	1250 <daq_load_modules+0x130>
    11b8:	bl	e64 <printf@plt>
    11bc:	mov	r0, r9
    11c0:	bl	f18 <readdir@plt>
    11c4:	cmp	r0, #0
    11c8:	beq	1248 <daq_load_modules+0x128>
    11cc:	add	r8, r0, #11
    11d0:	mov	r0, r8
    11d4:	mov	r1, #46	; 0x2e
    11d8:	bl	f24 <strrchr@plt>
    11dc:	cmp	r0, #0
    11e0:	beq	11bc <daq_load_modules+0x9c>
    11e4:	mov	r1, r6
    11e8:	bl	e4c <strcmp@plt>
    11ec:	cmp	r0, #0
    11f0:	bne	11bc <daq_load_modules+0x9c>
    11f4:	ldr	r3, [r5]
    11f8:	str	r8, [sp]
    11fc:	mov	r0, r7
    1200:	mov	r1, #512	; 0x200
    1204:	mov	r2, r4
    1208:	bl	f00 <snprintf@plt>
    120c:	mov	r0, r7
    1210:	bl	1298 <daq_load_module>
    1214:	cmp	r0, #0
    1218:	beq	1228 <daq_load_modules+0x108>
    121c:	cmn	r0, #2
    1220:	bne	11bc <daq_load_modules+0x9c>
    1224:	b	1260 <daq_load_modules+0x140>
    1228:	ldr	r0, [pc, #96]	; 1290 <daq_load_modules+0x170>
    122c:	ldr	r0, [pc, r0]
    1230:	cmp	r0, #1
    1234:	blt	11bc <daq_load_modules+0x9c>
    1238:	ldr	r0, [pc, #84]	; 1294 <daq_load_modules+0x174>
    123c:	add	r0, pc, r0
    1240:	mov	r1, r8
    1244:	b	11b8 <daq_load_modules+0x98>
    1248:	mov	r0, r9
    124c:	bl	f3c <closedir@plt>
    1250:	ldr	r0, [r5, #4]!
    1254:	cmp	r0, #0
    1258:	bne	115c <daq_load_modules+0x3c>
    125c:	b	126c <daq_load_modules+0x14c>
    1260:	mov	r0, r9
    1264:	bl	f3c <closedir@plt>
    1268:	mvn	sl, #1
    126c:	mov	r0, sl
    1270:	sub	sp, fp, #28
    1274:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1278:	.word	0x00001250
    127c:	.word	0x0000127f
    1280:	.word	0x00011ec4
    1284:	.word	0x000011f4
    1288:	.word	0x00011f04
    128c:	.word	0x0000122f
    1290:	.word	0x00011e54
    1294:	.word	0x000011a1

00001298 <daq_load_module>:
    1298:	push	{r4, r5, r6, sl, fp, lr}
    129c:	add	fp, sp, #16
    12a0:	sub	sp, sp, #96	; 0x60
    12a4:	cmp	r0, #0
    12a8:	mvneq	r0, #6
    12ac:	subeq	sp, fp, #16
    12b0:	popeq	{r4, r5, r6, sl, fp, pc}
    12b4:	mov	r4, r0
    12b8:	add	r1, sp, #8
    12bc:	bl	238c <__stat>
    12c0:	cmp	r0, #0
    12c4:	bne	1320 <daq_load_module+0x88>
    12c8:	ldrb	r0, [sp, #25]
    12cc:	tst	r0, #128	; 0x80
    12d0:	beq	1320 <daq_load_module+0x88>
    12d4:	mov	r0, r4
    12d8:	mov	r1, #2
    12dc:	bl	ec4 <dlopen@plt>
    12e0:	cmp	r0, #0
    12e4:	beq	1340 <daq_load_module+0xa8>
    12e8:	mov	r5, r0
    12ec:	ldr	r1, [pc, #248]	; 13ec <daq_load_module+0x154>
    12f0:	add	r1, pc, r1
    12f4:	bl	f30 <dlsym@plt>
    12f8:	cmp	r0, #0
    12fc:	beq	1374 <daq_load_module+0xdc>
    1300:	mov	r1, r5
    1304:	bl	19f8 <register_module>
    1308:	cmn	r0, #8
    130c:	beq	13c4 <daq_load_module+0x12c>
    1310:	cmp	r0, #0
    1314:	bne	13a8 <daq_load_module+0x110>
    1318:	sub	sp, fp, #16
    131c:	pop	{r4, r5, r6, sl, fp, pc}
    1320:	ldr	r0, [pc, #176]	; 13d8 <daq_load_module+0x140>
    1324:	ldr	r0, [pc, r0]
    1328:	ldr	r0, [r0]
    132c:	ldr	r1, [pc, #168]	; 13dc <daq_load_module+0x144>
    1330:	add	r1, pc, r1
    1334:	mov	r2, r4
    1338:	bl	ef4 <fprintf@plt>
    133c:	b	13cc <daq_load_module+0x134>
    1340:	ldr	r0, [pc, #152]	; 13e0 <daq_load_module+0x148>
    1344:	ldr	r0, [pc, r0]
    1348:	ldr	r5, [r0]
    134c:	bl	e94 <dlerror@plt>
    1350:	str	r0, [sp]
    1354:	ldr	r1, [pc, #136]	; 13e4 <daq_load_module+0x14c>
    1358:	add	r1, pc, r1
    135c:	ldr	r3, [pc, #132]	; 13e8 <daq_load_module+0x150>
    1360:	add	r3, pc, r3
    1364:	mov	r0, r5
    1368:	mov	r2, r4
    136c:	bl	ef4 <fprintf@plt>
    1370:	b	13cc <daq_load_module+0x134>
    1374:	ldr	r0, [pc, #116]	; 13f0 <daq_load_module+0x158>
    1378:	ldr	r0, [pc, r0]
    137c:	ldr	r6, [r0]
    1380:	bl	e94 <dlerror@plt>
    1384:	str	r0, [sp]
    1388:	ldr	r1, [pc, #100]	; 13f4 <daq_load_module+0x15c>
    138c:	add	r1, pc, r1
    1390:	ldr	r3, [pc, #96]	; 13f8 <daq_load_module+0x160>
    1394:	add	r3, pc, r3
    1398:	mov	r0, r6
    139c:	mov	r2, r4
    13a0:	bl	ef4 <fprintf@plt>
    13a4:	b	13c4 <daq_load_module+0x12c>
    13a8:	ldr	r0, [pc, #76]	; 13fc <daq_load_module+0x164>
    13ac:	ldr	r0, [pc, r0]
    13b0:	ldr	r0, [r0]
    13b4:	ldr	r1, [pc, #68]	; 1400 <daq_load_module+0x168>
    13b8:	add	r1, pc, r1
    13bc:	mov	r2, r4
    13c0:	bl	ef4 <fprintf@plt>
    13c4:	mov	r0, r5
    13c8:	bl	e88 <dlclose@plt>
    13cc:	mvn	r0, #0
    13d0:	sub	sp, fp, #16
    13d4:	pop	{r4, r5, r6, sl, fp, pc}
    13d8:	.word	0x00011d40
    13dc:	.word	0x000013a9
    13e0:	.word	0x00011d20
    13e4:	.word	0x0000139b
    13e8:	.word	0x0000139f
    13ec:	.word	0x00001416
    13f0:	.word	0x00011cec
    13f4:	.word	0x00001367
    13f8:	.word	0x00001382
    13fc:	.word	0x00011cb8
    1400:	.word	0x00001364

00001404 <daq_unload_modules>:
    1404:	push	{r4, r5, r6, sl, fp, lr}
    1408:	add	fp, sp, #16
    140c:	ldr	r4, [pc, #88]	; 146c <daq_unload_modules+0x68>
    1410:	ldr	r4, [pc, r4]
    1414:	cmp	r4, #0
    1418:	popeq	{r4, r5, r6, sl, fp, pc}
    141c:	ldr	r5, [pc, #76]	; 1470 <daq_unload_modules+0x6c>
    1420:	add	r5, pc, r5
    1424:	ldr	r6, [pc, #72]	; 1474 <daq_unload_modules+0x70>
    1428:	add	r6, pc, r6
    142c:	ldmib	r4, {r0, r1}
    1430:	str	r1, [r5]
    1434:	cmp	r0, #0
    1438:	beq	1440 <daq_unload_modules+0x3c>
    143c:	bl	e88 <dlclose@plt>
    1440:	mov	r0, r4
    1444:	bl	e70 <free@plt>
    1448:	ldr	r0, [pc, #40]	; 1478 <daq_unload_modules+0x74>
    144c:	ldr	r0, [pc, r0]
    1450:	sub	r0, r0, #1
    1454:	str	r0, [r6]
    1458:	ldr	r4, [pc, #28]	; 147c <daq_unload_modules+0x78>
    145c:	ldr	r4, [pc, r4]
    1460:	cmp	r4, #0
    1464:	bne	142c <daq_unload_modules+0x28>
    1468:	pop	{r4, r5, r6, sl, fp, pc}
    146c:	.word	0x00011c6c
    1470:	.word	0x00011c5c
    1474:	.word	0x00011c5c
    1478:	.word	0x00011c38
    147c:	.word	0x00011c20

00001480 <daq_print_stats>:
    1480:	cmp	r0, #0
    1484:	bxeq	lr
    1488:	push	{r4, r5, fp, lr}
    148c:	add	fp, sp, #8
    1490:	mov	r4, r0
    1494:	ldr	r0, [pc, #260]	; 15a0 <daq_print_stats+0x120>
    1498:	ldr	r0, [pc, r0]
    149c:	ldr	r5, [r0]
    14a0:	cmp	r1, #0
    14a4:	movne	r5, r1
    14a8:	ldr	r0, [pc, #244]	; 15a4 <daq_print_stats+0x124>
    14ac:	add	r0, pc, r0
    14b0:	mov	r1, #24
    14b4:	mov	r2, #1
    14b8:	mov	r3, r5
    14bc:	bl	eb8 <fwrite@plt>
    14c0:	ldrd	r2, [r4]
    14c4:	ldr	r1, [pc, #220]	; 15a8 <daq_print_stats+0x128>
    14c8:	add	r1, pc, r1
    14cc:	mov	r0, r5
    14d0:	bl	ef4 <fprintf@plt>
    14d4:	ldrd	r2, [r4, #8]
    14d8:	ldr	r1, [pc, #204]	; 15ac <daq_print_stats+0x12c>
    14dc:	add	r1, pc, r1
    14e0:	mov	r0, r5
    14e4:	bl	ef4 <fprintf@plt>
    14e8:	ldrd	r2, [r4, #16]
    14ec:	ldr	r1, [pc, #188]	; 15b0 <daq_print_stats+0x130>
    14f0:	add	r1, pc, r1
    14f4:	mov	r0, r5
    14f8:	bl	ef4 <fprintf@plt>
    14fc:	ldrd	r2, [r4, #24]
    1500:	ldr	r1, [pc, #172]	; 15b4 <daq_print_stats+0x134>
    1504:	add	r1, pc, r1
    1508:	mov	r0, r5
    150c:	bl	ef4 <fprintf@plt>
    1510:	ldrd	r2, [r4, #40]	; 0x28
    1514:	ldr	r1, [pc, #156]	; 15b8 <daq_print_stats+0x138>
    1518:	add	r1, pc, r1
    151c:	mov	r0, r5
    1520:	bl	ef4 <fprintf@plt>
    1524:	ldrd	r2, [r4, #56]	; 0x38
    1528:	ldr	r1, [pc, #140]	; 15bc <daq_print_stats+0x13c>
    152c:	add	r1, pc, r1
    1530:	mov	r0, r5
    1534:	bl	ef4 <fprintf@plt>
    1538:	ldrd	r2, [r4, #48]	; 0x30
    153c:	ldr	r1, [pc, #124]	; 15c0 <daq_print_stats+0x140>
    1540:	add	r1, pc, r1
    1544:	mov	r0, r5
    1548:	bl	ef4 <fprintf@plt>
    154c:	ldrd	r2, [r4, #32]
    1550:	ldr	r1, [pc, #108]	; 15c4 <daq_print_stats+0x144>
    1554:	add	r1, pc, r1
    1558:	mov	r0, r5
    155c:	bl	ef4 <fprintf@plt>
    1560:	ldrd	r2, [r4, #64]	; 0x40
    1564:	ldr	r1, [pc, #92]	; 15c8 <daq_print_stats+0x148>
    1568:	add	r1, pc, r1
    156c:	mov	r0, r5
    1570:	bl	ef4 <fprintf@plt>
    1574:	ldrd	r2, [r4, #72]	; 0x48
    1578:	ldr	r1, [pc, #76]	; 15cc <daq_print_stats+0x14c>
    157c:	add	r1, pc, r1
    1580:	mov	r0, r5
    1584:	bl	ef4 <fprintf@plt>
    1588:	ldrd	r2, [r4, #80]	; 0x50
    158c:	ldr	r1, [pc, #60]	; 15d0 <daq_print_stats+0x150>
    1590:	add	r1, pc, r1
    1594:	mov	r0, r5
    1598:	pop	{r4, r5, fp, lr}
    159c:	b	ef4 <fprintf@plt>
    15a0:	.word	0x00011bd4
    15a4:	.word	0x00000f42
    15a8:	.word	0x00000f3f
    15ac:	.word	0x00000f4f
    15b0:	.word	0x00000f5f
    15b4:	.word	0x00000f67
    15b8:	.word	0x00000f6f
    15bc:	.word	0x00000f77
    15c0:	.word	0x00000f7f
    15c4:	.word	0x00000f87
    15c8:	.word	0x00000f8f
    15cc:	.word	0x00000f97
    15d0:	.word	0x00000f9f

000015d4 <daq_get_module_list>:
    15d4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    15d8:	add	fp, sp, #24
    15dc:	cmp	r0, #0
    15e0:	mvneq	r9, #6
    15e4:	moveq	r0, r9
    15e8:	popeq	{r4, r5, r6, r7, r8, r9, fp, pc}
    15ec:	mov	r5, r0
    15f0:	ldr	r0, [pc, #156]	; 1694 <daq_get_module_list+0xc0>
    15f4:	ldr	r0, [pc, r0]
    15f8:	mov	r1, #12
    15fc:	bl	e40 <calloc@plt>
    1600:	mvn	r9, #1
    1604:	cmp	r0, #0
    1608:	beq	1678 <daq_get_module_list+0xa4>
    160c:	mov	r8, r0
    1610:	ldr	r6, [pc, #128]	; 1698 <daq_get_module_list+0xc4>
    1614:	ldr	r6, [pc, r6]
    1618:	cmp	r6, #0
    161c:	beq	166c <daq_get_module_list+0x98>
    1620:	add	r4, r8, #4
    1624:	mov	r7, #0
    1628:	ldr	r0, [r6]
    162c:	ldr	r0, [r0, #8]
    1630:	bl	e7c <strdup@plt>
    1634:	str	r0, [r4, #-4]
    1638:	cmp	r0, #0
    163c:	beq	1680 <daq_get_module_list+0xac>
    1640:	ldr	r0, [r6]
    1644:	ldr	r0, [r0, #4]
    1648:	str	r0, [r4]
    164c:	ldr	r0, [r6]
    1650:	ldr	r0, [r0, #12]
    1654:	str	r0, [r4, #4]
    1658:	add	r4, r4, #12
    165c:	add	r7, r7, #1
    1660:	ldr	r6, [r6, #8]
    1664:	cmp	r6, #0
    1668:	bne	1628 <daq_get_module_list+0x54>
    166c:	str	r8, [r5]
    1670:	ldr	r9, [pc, #36]	; 169c <daq_get_module_list+0xc8>
    1674:	ldr	r9, [pc, r9]
    1678:	mov	r0, r9
    167c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    1680:	mov	r0, r8
    1684:	mov	r1, r7
    1688:	bl	f0c <daq_free_module_list@plt>
    168c:	mov	r0, r9
    1690:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    1694:	.word	0x00011a90
    1698:	.word	0x00011a68
    169c:	.word	0x00011a10

000016a0 <daq_free_module_list>:
    16a0:	push	{r4, r5, r6, sl, fp, lr}
    16a4:	add	fp, sp, #16
    16a8:	cmp	r0, #0
    16ac:	beq	16ec <daq_free_module_list+0x4c>
    16b0:	mov	r5, r1
    16b4:	cmp	r1, #1
    16b8:	poplt	{r4, r5, r6, sl, fp, pc}
    16bc:	mov	r4, r0
    16c0:	mov	r6, r0
    16c4:	ldr	r0, [r6]
    16c8:	cmp	r0, #0
    16cc:	beq	16d4 <daq_free_module_list+0x34>
    16d0:	bl	e70 <free@plt>
    16d4:	add	r6, r6, #12
    16d8:	subs	r5, r5, #1
    16dc:	bne	16c4 <daq_free_module_list+0x24>
    16e0:	mov	r0, r4
    16e4:	pop	{r4, r5, r6, sl, fp, lr}
    16e8:	b	e70 <free@plt>
    16ec:	pop	{r4, r5, r6, sl, fp, pc}

000016f0 <daq_set_verbosity>:
    16f0:	mov	r1, r0
    16f4:	ldr	r0, [pc, #24]	; 1714 <daq_set_verbosity+0x24>
    16f8:	add	r0, pc, r0
    16fc:	str	r1, [r0]
    1700:	cmp	r1, #1
    1704:	bxlt	lr
    1708:	ldr	r0, [pc, #8]	; 1718 <daq_set_verbosity+0x28>
    170c:	add	r0, pc, r0
    1710:	b	e64 <printf@plt>
    1714:	.word	0x00011988
    1718:	.word	0x00000e3f

0000171c <daq_config_get_value>:
    171c:	push	{r4, r5, r6, sl, fp, lr}
    1720:	add	fp, sp, #16
    1724:	mov	r4, #0
    1728:	cmp	r0, #0
    172c:	movne	r5, r1
    1730:	cmpne	r1, #0
    1734:	bne	1740 <daq_config_get_value+0x24>
    1738:	mov	r0, r4
    173c:	pop	{r4, r5, r6, sl, fp, pc}
    1740:	ldr	r6, [r0, #20]
    1744:	cmp	r6, #0
    1748:	bne	175c <daq_config_get_value+0x40>
    174c:	b	1738 <daq_config_get_value+0x1c>
    1750:	ldr	r6, [r6, #8]
    1754:	cmp	r6, #0
    1758:	beq	1738 <daq_config_get_value+0x1c>
    175c:	ldr	r0, [r6]
    1760:	mov	r1, r5
    1764:	bl	e4c <strcmp@plt>
    1768:	cmp	r0, #0
    176c:	bne	1750 <daq_config_get_value+0x34>
    1770:	ldr	r4, [r6, #4]
    1774:	mov	r0, r4
    1778:	pop	{r4, r5, r6, sl, fp, pc}

0000177c <daq_config_set_value>:
    177c:	push	{r4, r5, r6, r7, fp, lr}
    1780:	add	fp, sp, #16
    1784:	cmp	r0, #0
    1788:	movne	r6, r1
    178c:	cmpne	r1, #0
    1790:	bne	1798 <daq_config_set_value+0x1c>
    1794:	pop	{r4, r5, r6, r7, fp, pc}
    1798:	mov	r4, r2
    179c:	mov	r7, r0
    17a0:	ldr	r5, [r0, #20]
    17a4:	cmp	r5, #0
    17a8:	bne	17bc <daq_config_set_value+0x40>
    17ac:	b	17d4 <daq_config_set_value+0x58>
    17b0:	ldr	r5, [r5, #8]
    17b4:	cmp	r5, #0
    17b8:	beq	17d4 <daq_config_set_value+0x58>
    17bc:	ldr	r0, [r5]
    17c0:	mov	r1, r6
    17c4:	bl	e4c <strcmp@plt>
    17c8:	cmp	r0, #0
    17cc:	bne	17b0 <daq_config_set_value+0x34>
    17d0:	b	180c <daq_config_set_value+0x90>
    17d4:	mov	r0, #1
    17d8:	mov	r1, #12
    17dc:	bl	e40 <calloc@plt>
    17e0:	cmp	r0, #0
    17e4:	beq	1854 <daq_config_set_value+0xd8>
    17e8:	mov	r5, r0
    17ec:	mov	r0, r6
    17f0:	bl	e7c <strdup@plt>
    17f4:	str	r0, [r5]
    17f8:	cmp	r0, #0
    17fc:	beq	187c <daq_config_set_value+0x100>
    1800:	ldr	r0, [r7, #20]
    1804:	str	r0, [r5, #8]
    1808:	str	r5, [r7, #20]
    180c:	ldr	r0, [r5, #4]
    1810:	bl	e70 <free@plt>
    1814:	cmp	r4, #0
    1818:	beq	1830 <daq_config_set_value+0xb4>
    181c:	mov	r0, r4
    1820:	bl	e7c <strdup@plt>
    1824:	str	r0, [r5, #4]
    1828:	cmp	r0, #0
    182c:	beq	18b0 <daq_config_set_value+0x134>
    1830:	ldr	r0, [pc, #172]	; 18e4 <daq_config_set_value+0x168>
    1834:	ldr	r0, [pc, r0]
    1838:	cmp	r0, #1
    183c:	poplt	{r4, r5, r6, r7, fp, pc}
    1840:	ldm	r5, {r1, r2}
    1844:	ldr	r0, [pc, #192]	; 190c <daq_config_set_value+0x190>
    1848:	add	r0, pc, r0
    184c:	pop	{r4, r5, r6, r7, fp, lr}
    1850:	b	e64 <printf@plt>
    1854:	ldr	r0, [pc, #140]	; 18e8 <daq_config_set_value+0x16c>
    1858:	ldr	r0, [pc, r0]
    185c:	ldr	r0, [r0]
    1860:	ldr	r1, [pc, #132]	; 18ec <daq_config_set_value+0x170>
    1864:	add	r1, pc, r1
    1868:	ldr	r2, [pc, #128]	; 18f0 <daq_config_set_value+0x174>
    186c:	add	r2, pc, r2
    1870:	mov	r3, #12
    1874:	pop	{r4, r5, r6, r7, fp, lr}
    1878:	b	ef4 <fprintf@plt>
    187c:	ldr	r0, [pc, #112]	; 18f4 <daq_config_set_value+0x178>
    1880:	ldr	r0, [pc, r0]
    1884:	ldr	r4, [r0]
    1888:	mov	r0, r6
    188c:	bl	ee8 <strlen@plt>
    1890:	add	r3, r0, #1
    1894:	ldr	r1, [pc, #92]	; 18f8 <daq_config_set_value+0x17c>
    1898:	add	r1, pc, r1
    189c:	ldr	r2, [pc, #88]	; 18fc <daq_config_set_value+0x180>
    18a0:	add	r2, pc, r2
    18a4:	mov	r0, r4
    18a8:	pop	{r4, r5, r6, r7, fp, lr}
    18ac:	b	ef4 <fprintf@plt>
    18b0:	ldr	r0, [pc, #72]	; 1900 <daq_config_set_value+0x184>
    18b4:	ldr	r0, [pc, r0]
    18b8:	ldr	r5, [r0]
    18bc:	mov	r0, r4
    18c0:	bl	ee8 <strlen@plt>
    18c4:	add	r3, r0, #1
    18c8:	ldr	r1, [pc, #52]	; 1904 <daq_config_set_value+0x188>
    18cc:	add	r1, pc, r1
    18d0:	ldr	r2, [pc, #48]	; 1908 <daq_config_set_value+0x18c>
    18d4:	add	r2, pc, r2
    18d8:	mov	r0, r5
    18dc:	pop	{r4, r5, r6, r7, fp, lr}
    18e0:	b	ef4 <fprintf@plt>
    18e4:	.word	0x0001184c
    18e8:	.word	0x0001180c
    18ec:	.word	0x00000d0a
    18f0:	.word	0x00000d3c
    18f4:	.word	0x000117e4
    18f8:	.word	0x00000d25
    18fc:	.word	0x00000d08
    1900:	.word	0x000117b0
    1904:	.word	0x00000d2f
    1908:	.word	0x00000cd4
    190c:	.word	0x00000df3

00001910 <daq_config_clear_value>:
    1910:	push	{r4, r5, r6, r7, fp, lr}
    1914:	add	fp, sp, #16
    1918:	cmp	r0, #0
    191c:	movne	r6, r1
    1920:	cmpne	r1, #0
    1924:	bne	192c <daq_config_clear_value+0x1c>
    1928:	pop	{r4, r5, r6, r7, fp, pc}
    192c:	mov	r4, r0
    1930:	ldr	r5, [r4, #20]!
    1934:	cmp	r5, #0
    1938:	popeq	{r4, r5, r6, r7, fp, pc}
    193c:	ldr	r0, [r5]
    1940:	mov	r1, r6
    1944:	bl	e4c <strcmp@plt>
    1948:	cmp	r0, #0
    194c:	beq	1980 <daq_config_clear_value+0x70>
    1950:	mov	r7, r5
    1954:	ldr	r5, [r7, #8]
    1958:	cmp	r5, #0
    195c:	beq	1928 <daq_config_clear_value+0x18>
    1960:	ldr	r0, [r5]
    1964:	mov	r1, r6
    1968:	bl	e4c <strcmp@plt>
    196c:	cmp	r0, #0
    1970:	mov	r0, r7
    1974:	mov	r7, r5
    1978:	bne	1954 <daq_config_clear_value+0x44>
    197c:	b	1984 <daq_config_clear_value+0x74>
    1980:	mov	r0, #0
    1984:	cmp	r0, #0
    1988:	addne	r4, r0, #8
    198c:	ldr	r0, [r5, #8]
    1990:	str	r0, [r4]
    1994:	ldr	r0, [r5]
    1998:	bl	e70 <free@plt>
    199c:	ldr	r0, [r5, #4]
    19a0:	bl	e70 <free@plt>
    19a4:	mov	r0, r5
    19a8:	pop	{r4, r5, r6, r7, fp, lr}
    19ac:	b	e70 <free@plt>

000019b0 <daq_config_clear_values>:
    19b0:	push	{r4, r5, fp, lr}
    19b4:	add	fp, sp, #8
    19b8:	cmp	r0, #0
    19bc:	popeq	{r4, r5, fp, pc}
    19c0:	mov	r4, r0
    19c4:	b	19e8 <daq_config_clear_values+0x38>
    19c8:	ldr	r0, [r5, #8]
    19cc:	str	r0, [r4, #20]
    19d0:	ldr	r0, [r5]
    19d4:	bl	e70 <free@plt>
    19d8:	ldr	r0, [r5, #4]
    19dc:	bl	e70 <free@plt>
    19e0:	mov	r0, r5
    19e4:	bl	e70 <free@plt>
    19e8:	ldr	r5, [r4, #20]
    19ec:	cmp	r5, #0
    19f0:	bne	19c8 <daq_config_clear_values+0x18>
    19f4:	pop	{r4, r5, fp, pc}

000019f8 <register_module>:
    19f8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    19fc:	add	fp, sp, #24
    1a00:	sub	sp, sp, #8
    1a04:	mov	r8, r1
    1a08:	mov	r9, r0
    1a0c:	ldr	r3, [r0]
    1a10:	movw	r1, #2
    1a14:	movt	r1, #1
    1a18:	cmp	r3, r1
    1a1c:	bne	1aec <register_module+0xf4>
    1a20:	ldr	r0, [r9, #16]
    1a24:	cmp	r0, #0
    1a28:	ldrne	r0, [r9, #20]
    1a2c:	cmpne	r0, #0
    1a30:	beq	1ac0 <register_module+0xc8>
    1a34:	ldr	r0, [r9, #24]
    1a38:	cmp	r0, #0
    1a3c:	ldrne	r0, [r9, #28]
    1a40:	cmpne	r0, #0
    1a44:	beq	1ac0 <register_module+0xc8>
    1a48:	ldr	r0, [r9, #32]
    1a4c:	cmp	r0, #0
    1a50:	ldrne	r0, [r9, #36]	; 0x24
    1a54:	cmpne	r0, #0
    1a58:	beq	1ac0 <register_module+0xc8>
    1a5c:	ldr	r0, [r9, #40]	; 0x28
    1a60:	cmp	r0, #0
    1a64:	ldrne	r0, [r9, #44]	; 0x2c
    1a68:	cmpne	r0, #0
    1a6c:	beq	1ac0 <register_module+0xc8>
    1a70:	ldr	r0, [r9, #48]	; 0x30
    1a74:	cmp	r0, #0
    1a78:	ldrne	r0, [r9, #52]	; 0x34
    1a7c:	cmpne	r0, #0
    1a80:	beq	1ac0 <register_module+0xc8>
    1a84:	ldr	r0, [r9, #56]	; 0x38
    1a88:	cmp	r0, #0
    1a8c:	ldrne	r0, [r9, #60]	; 0x3c
    1a90:	cmpne	r0, #0
    1a94:	beq	1ac0 <register_module+0xc8>
    1a98:	ldr	r0, [r9, #64]	; 0x40
    1a9c:	cmp	r0, #0
    1aa0:	ldrne	r0, [r9, #72]	; 0x48
    1aa4:	cmpne	r0, #0
    1aa8:	beq	1ac0 <register_module+0xc8>
    1aac:	ldr	r0, [r9, #76]	; 0x4c
    1ab0:	cmp	r0, #0
    1ab4:	ldrne	r0, [r9, #80]	; 0x50
    1ab8:	cmpne	r0, #0
    1abc:	bne	1b10 <register_module+0x118>
    1ac0:	ldr	r2, [r9, #8]
    1ac4:	ldr	r0, [pc, #376]	; 1c44 <register_module+0x24c>
    1ac8:	ldr	r0, [pc, r0]
    1acc:	ldr	r0, [r0]
    1ad0:	ldr	r1, [pc, #368]	; 1c48 <register_module+0x250>
    1ad4:	add	r1, pc, r1
    1ad8:	bl	ef4 <fprintf@plt>
    1adc:	mvn	r4, #0
    1ae0:	mov	r0, r4
    1ae4:	sub	sp, fp, #24
    1ae8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    1aec:	ldr	r2, [r9, #8]
    1af0:	ldr	r0, [pc, #288]	; 1c18 <register_module+0x220>
    1af4:	ldr	r0, [pc, r0]
    1af8:	ldr	r0, [r0]
    1afc:	str	r1, [sp]
    1b00:	ldr	r1, [pc, #276]	; 1c1c <register_module+0x224>
    1b04:	add	r1, pc, r1
    1b08:	bl	ef4 <fprintf@plt>
    1b0c:	b	1adc <register_module+0xe4>
    1b10:	ldr	r6, [pc, #264]	; 1c20 <register_module+0x228>
    1b14:	ldr	r6, [pc, r6]
    1b18:	cmp	r6, #0
    1b1c:	beq	1b4c <register_module+0x154>
    1b20:	ldr	r5, [r9, #8]
    1b24:	ldr	r4, [r6]
    1b28:	ldr	r7, [r4, #8]
    1b2c:	mov	r0, r7
    1b30:	mov	r1, r5
    1b34:	bl	e4c <strcmp@plt>
    1b38:	cmp	r0, #0
    1b3c:	beq	1b98 <register_module+0x1a0>
    1b40:	ldr	r6, [r6, #8]
    1b44:	cmp	r6, #0
    1b48:	bne	1b24 <register_module+0x12c>
    1b4c:	mov	r0, #1
    1b50:	mov	r1, #12
    1b54:	bl	e40 <calloc@plt>
    1b58:	cmp	r0, #0
    1b5c:	beq	1be8 <register_module+0x1f0>
    1b60:	mov	r6, r0
    1b64:	ldr	r0, [pc, #192]	; 1c2c <register_module+0x234>
    1b68:	ldr	r0, [pc, r0]
    1b6c:	str	r0, [r6, #8]
    1b70:	ldr	r0, [pc, #184]	; 1c30 <register_module+0x238>
    1b74:	add	r0, pc, r0
    1b78:	str	r6, [r0]
    1b7c:	ldr	r0, [pc, #176]	; 1c34 <register_module+0x23c>
    1b80:	ldr	r0, [pc, r0]
    1b84:	add	r0, r0, #1
    1b88:	ldr	r1, [pc, #168]	; 1c38 <register_module+0x240>
    1b8c:	add	r1, pc, r1
    1b90:	str	r0, [r1]
    1b94:	b	1bb8 <register_module+0x1c0>
    1b98:	ldr	r3, [r9, #4]
    1b9c:	ldr	r2, [r4, #4]
    1ba0:	cmp	r2, r3
    1ba4:	bcs	1bf0 <register_module+0x1f8>
    1ba8:	ldr	r0, [r6, #4]
    1bac:	cmp	r0, #0
    1bb0:	beq	1bb8 <register_module+0x1c0>
    1bb4:	bl	e88 <dlclose@plt>
    1bb8:	ldr	r0, [pc, #124]	; 1c3c <register_module+0x244>
    1bbc:	ldr	r0, [pc, r0]
    1bc0:	cmp	r0, #1
    1bc4:	blt	1bd8 <register_module+0x1e0>
    1bc8:	ldr	r1, [r9, #8]
    1bcc:	ldr	r0, [pc, #108]	; 1c40 <register_module+0x248>
    1bd0:	add	r0, pc, r0
    1bd4:	bl	e64 <printf@plt>
    1bd8:	str	r9, [r6]
    1bdc:	str	r8, [r6, #4]
    1be0:	mov	r4, #0
    1be4:	b	1ae0 <register_module+0xe8>
    1be8:	mvn	r4, #1
    1bec:	b	1ae0 <register_module+0xe8>
    1bf0:	mvn	r4, #7
    1bf4:	ldr	r0, [pc, #40]	; 1c24 <register_module+0x22c>
    1bf8:	ldr	r0, [pc, r0]
    1bfc:	cmp	r0, #1
    1c00:	blt	1ae0 <register_module+0xe8>
    1c04:	ldr	r0, [pc, #28]	; 1c28 <register_module+0x230>
    1c08:	add	r0, pc, r0
    1c0c:	mov	r1, r7
    1c10:	bl	e64 <printf@plt>
    1c14:	b	1ae0 <register_module+0xe8>
    1c18:	.word	0x00011570
    1c1c:	.word	0x00000c3c
    1c20:	.word	0x00011568
    1c24:	.word	0x00011488
    1c28:	.word	0x00000bb3
    1c2c:	.word	0x00011514
    1c30:	.word	0x00011508
    1c34:	.word	0x00011504
    1c38:	.word	0x000114f8
    1c3c:	.word	0x000114c4
    1c40:	.word	0x00000c36
    1c44:	.word	0x0001159c
    1c48:	.word	0x00000cb0

00001c4c <daq_initialize>:
    1c4c:	push	{r4, r5, r6, sl, fp, lr}
    1c50:	add	fp, sp, #16
    1c54:	sub	sp, sp, #8
    1c58:	cmp	r3, #0
    1c5c:	mvneq	r0, #0
    1c60:	subeq	sp, fp, #16
    1c64:	popeq	{r4, r5, r6, sl, fp, pc}
    1c68:	cmp	r0, #0
    1c6c:	mvneq	r0, #4
    1c70:	subeq	sp, fp, #16
    1c74:	popeq	{r4, r5, r6, sl, fp, pc}
    1c78:	mov	r4, r3
    1c7c:	ldr	r5, [fp, #8]
    1c80:	cmp	r1, #0
    1c84:	beq	1cbc <daq_initialize+0x70>
    1c88:	cmp	r2, #0
    1c8c:	beq	1cc8 <daq_initialize+0x7c>
    1c90:	ldr	r3, [r1, #12]
    1c94:	cmp	r3, #2
    1c98:	beq	1ce0 <daq_initialize+0x94>
    1c9c:	cmp	r3, #1
    1ca0:	beq	1d20 <daq_initialize+0xd4>
    1ca4:	cmp	r3, #0
    1ca8:	bne	1d2c <daq_initialize+0xe0>
    1cac:	ldrb	r6, [r0, #12]
    1cb0:	tst	r6, #2
    1cb4:	beq	1cec <daq_initialize+0xa0>
    1cb8:	b	1d2c <daq_initialize+0xe0>
    1cbc:	ldr	r2, [pc, #136]	; 1d4c <daq_initialize+0x100>
    1cc0:	add	r2, pc, r2
    1cc4:	b	1cd0 <daq_initialize+0x84>
    1cc8:	ldr	r2, [pc, #128]	; 1d50 <daq_initialize+0x104>
    1ccc:	add	r2, pc, r2
    1cd0:	mov	r0, r4
    1cd4:	mov	r1, r5
    1cd8:	bl	f00 <snprintf@plt>
    1cdc:	b	1d14 <daq_initialize+0xc8>
    1ce0:	ldrb	r6, [r0, #12]
    1ce4:	tst	r6, #1
    1ce8:	bne	1d2c <daq_initialize+0xe0>
    1cec:	ldr	r6, [r0, #8]
    1cf0:	mov	r0, r3
    1cf4:	bl	ea0 <daq_mode_string@plt>
    1cf8:	str	r0, [sp]
    1cfc:	ldr	r2, [pc, #80]	; 1d54 <daq_initialize+0x108>
    1d00:	add	r2, pc, r2
    1d04:	mov	r0, r4
    1d08:	mov	r1, r5
    1d0c:	mov	r3, r6
    1d10:	bl	f00 <snprintf@plt>
    1d14:	mvn	r0, #6
    1d18:	sub	sp, fp, #16
    1d1c:	pop	{r4, r5, r6, sl, fp, pc}
    1d20:	ldrb	r6, [r0, #12]
    1d24:	tst	r6, #4
    1d28:	beq	1cec <daq_initialize+0xa0>
    1d2c:	ldr	ip, [r0, #16]
    1d30:	mov	r0, r1
    1d34:	mov	r1, r2
    1d38:	mov	r2, r4
    1d3c:	mov	r3, r5
    1d40:	sub	sp, fp, #16
    1d44:	pop	{r4, r5, r6, sl, fp, lr}
    1d48:	bx	ip
    1d4c:	.word	0x00000b61
    1d50:	.word	0x00000b7f
    1d54:	.word	0x00000b77

00001d58 <daq_set_filter>:
    1d58:	cmp	r0, #0
    1d5c:	mvneq	r0, #4
    1d60:	bxeq	lr
    1d64:	cmp	r1, #0
    1d68:	mvneq	r0, #5
    1d6c:	bxeq	lr
    1d70:	cmp	r2, #0
    1d74:	beq	1d88 <daq_set_filter+0x30>
    1d78:	ldr	r3, [r0, #20]
    1d7c:	mov	r0, r1
    1d80:	mov	r1, r2
    1d84:	bx	r3
    1d88:	push	{fp, lr}
    1d8c:	mov	fp, sp
    1d90:	ldr	r3, [r0, #76]	; 0x4c
    1d94:	ldr	r2, [pc, #20]	; 1db0 <daq_set_filter+0x58>
    1d98:	add	r2, pc, r2
    1d9c:	mov	r0, r1
    1da0:	mov	r1, r2
    1da4:	blx	r3
    1da8:	mvn	r0, #6
    1dac:	pop	{fp, pc}
    1db0:	.word	0x00000b0b

00001db4 <daq_start>:
    1db4:	push	{r4, r5, fp, lr}
    1db8:	add	fp, sp, #8
    1dbc:	cmp	r0, #0
    1dc0:	mvneq	r0, #4
    1dc4:	popeq	{r4, r5, fp, pc}
    1dc8:	mov	r4, r1
    1dcc:	cmp	r1, #0
    1dd0:	mvneq	r0, #5
    1dd4:	popeq	{r4, r5, fp, pc}
    1dd8:	mov	r5, r0
    1ddc:	ldr	r1, [r0, #48]	; 0x30
    1de0:	mov	r0, r4
    1de4:	blx	r1
    1de8:	cmp	r0, #1
    1dec:	bne	1e00 <daq_start+0x4c>
    1df0:	ldr	r1, [r5, #24]
    1df4:	mov	r0, r4
    1df8:	pop	{r4, r5, fp, lr}
    1dfc:	bx	r1
    1e00:	ldr	r2, [r5, #76]	; 0x4c
    1e04:	ldr	r1, [pc, #16]	; 1e1c <daq_start+0x68>
    1e08:	add	r1, pc, r1
    1e0c:	mov	r0, r4
    1e10:	blx	r2
    1e14:	mvn	r0, #0
    1e18:	pop	{r4, r5, fp, pc}
    1e1c:	.word	0x00000ab7

00001e20 <daq_acquire>:
    1e20:	push	{r4, r5, r6, r7, fp, lr}
    1e24:	add	fp, sp, #16
    1e28:	cmp	r0, #0
    1e2c:	mvneq	r0, #4
    1e30:	popeq	{r4, r5, r6, r7, fp, pc}
    1e34:	mov	r4, r1
    1e38:	cmp	r1, #0
    1e3c:	mvneq	r0, #5
    1e40:	popeq	{r4, r5, r6, r7, fp, pc}
    1e44:	mov	r5, r3
    1e48:	mov	r6, r2
    1e4c:	mov	r7, r0
    1e50:	ldr	r1, [r0, #48]	; 0x30
    1e54:	mov	r0, r4
    1e58:	blx	r1
    1e5c:	cmp	r0, #2
    1e60:	bne	1e80 <daq_acquire+0x60>
    1e64:	ldr	ip, [r7, #28]
    1e68:	mov	r0, r4
    1e6c:	mov	r1, r6
    1e70:	mov	r2, r5
    1e74:	mov	r3, #0
    1e78:	pop	{r4, r5, r6, r7, fp, lr}
    1e7c:	bx	ip
    1e80:	ldr	r2, [r7, #76]	; 0x4c
    1e84:	ldr	r1, [pc, #16]	; 1e9c <daq_acquire+0x7c>
    1e88:	add	r1, pc, r1
    1e8c:	mov	r0, r4
    1e90:	blx	r2
    1e94:	mvn	r0, #0
    1e98:	pop	{r4, r5, r6, r7, fp, pc}
    1e9c:	.word	0x00000a67

00001ea0 <daq_acquire_with_meta>:
    1ea0:	push	{r4, r5, r6, r7, fp, lr}
    1ea4:	add	fp, sp, #16
    1ea8:	sub	sp, sp, #8
    1eac:	cmp	r0, #0
    1eb0:	mvneq	r0, #4
    1eb4:	subeq	sp, fp, #16
    1eb8:	popeq	{r4, r5, r6, r7, fp, pc}
    1ebc:	mov	r4, r1
    1ec0:	cmp	r1, #0
    1ec4:	mvneq	r0, #5
    1ec8:	subeq	sp, fp, #16
    1ecc:	popeq	{r4, r5, r6, r7, fp, pc}
    1ed0:	mov	r5, r3
    1ed4:	mov	r6, r2
    1ed8:	mov	r7, r0
    1edc:	ldr	r1, [r0, #48]	; 0x30
    1ee0:	mov	r0, r4
    1ee4:	blx	r1
    1ee8:	cmp	r0, #2
    1eec:	bne	1f18 <daq_acquire_with_meta+0x78>
    1ef0:	ldr	r0, [fp, #12]
    1ef4:	ldr	r3, [fp, #8]
    1ef8:	ldr	r7, [r7, #28]
    1efc:	str	r0, [sp]
    1f00:	mov	r0, r4
    1f04:	mov	r1, r6
    1f08:	mov	r2, r5
    1f0c:	blx	r7
    1f10:	sub	sp, fp, #16
    1f14:	pop	{r4, r5, r6, r7, fp, pc}
    1f18:	ldr	r2, [r7, #76]	; 0x4c
    1f1c:	ldr	r1, [pc, #20]	; 1f38 <daq_acquire_with_meta+0x98>
    1f20:	add	r1, pc, r1
    1f24:	mov	r0, r4
    1f28:	blx	r2
    1f2c:	mvn	r0, #0
    1f30:	sub	sp, fp, #16
    1f34:	pop	{r4, r5, r6, r7, fp, pc}
    1f38:	.word	0x000009cf

00001f3c <daq_inject>:
    1f3c:	push	{r4, sl, fp, lr}
    1f40:	add	fp, sp, #8
    1f44:	sub	sp, sp, #8
    1f48:	cmp	r0, #0
    1f4c:	mvneq	r0, #4
    1f50:	subeq	sp, fp, #8
    1f54:	popeq	{r4, sl, fp, pc}
    1f58:	cmp	r1, #0
    1f5c:	mvneq	r0, #5
    1f60:	subeq	sp, fp, #8
    1f64:	popeq	{r4, sl, fp, pc}
    1f68:	cmp	r2, #0
    1f6c:	beq	1fa4 <daq_inject+0x68>
    1f70:	cmp	r3, #0
    1f74:	beq	1fb4 <daq_inject+0x78>
    1f78:	ldr	lr, [fp, #12]
    1f7c:	ldr	ip, [fp, #8]
    1f80:	ldr	r4, [r0, #32]
    1f84:	str	lr, [sp]
    1f88:	mov	r0, r1
    1f8c:	mov	r1, r2
    1f90:	mov	r2, r3
    1f94:	mov	r3, ip
    1f98:	blx	r4
    1f9c:	sub	sp, fp, #8
    1fa0:	pop	{r4, sl, fp, pc}
    1fa4:	ldr	r3, [r0, #76]	; 0x4c
    1fa8:	ldr	r2, [pc, #40]	; 1fd8 <daq_inject+0x9c>
    1fac:	add	r2, pc, r2
    1fb0:	b	1fc0 <daq_inject+0x84>
    1fb4:	ldr	r3, [r0, #76]	; 0x4c
    1fb8:	ldr	r2, [pc, #28]	; 1fdc <daq_inject+0xa0>
    1fbc:	add	r2, pc, r2
    1fc0:	mov	r0, r1
    1fc4:	mov	r1, r2
    1fc8:	blx	r3
    1fcc:	mvn	r0, #6
    1fd0:	sub	sp, fp, #8
    1fd4:	pop	{r4, sl, fp, pc}
    1fd8:	.word	0x0000097e
    1fdc:	.word	0x00000996

00001fe0 <daq_breakloop>:
    1fe0:	cmp	r0, #0
    1fe4:	mvneq	r0, #4
    1fe8:	bxeq	lr
    1fec:	cmp	r1, #0
    1ff0:	mvneq	r0, #5
    1ff4:	bxeq	lr
    1ff8:	ldr	r2, [r0, #36]	; 0x24
    1ffc:	mov	r0, r1
    2000:	bx	r2

00002004 <daq_stop>:
    2004:	push	{r4, r5, fp, lr}
    2008:	add	fp, sp, #8
    200c:	cmp	r0, #0
    2010:	mvneq	r0, #4
    2014:	popeq	{r4, r5, fp, pc}
    2018:	mov	r4, r1
    201c:	cmp	r1, #0
    2020:	mvneq	r0, #5
    2024:	popeq	{r4, r5, fp, pc}
    2028:	mov	r5, r0
    202c:	ldr	r1, [r0, #48]	; 0x30
    2030:	mov	r0, r4
    2034:	blx	r1
    2038:	cmp	r0, #2
    203c:	bne	2050 <daq_stop+0x4c>
    2040:	ldr	r1, [r5, #40]	; 0x28
    2044:	mov	r0, r4
    2048:	pop	{r4, r5, fp, lr}
    204c:	bx	r1
    2050:	ldr	r2, [r5, #76]	; 0x4c
    2054:	ldr	r1, [pc, #16]	; 206c <daq_stop+0x68>
    2058:	add	r1, pc, r1
    205c:	mov	r0, r4
    2060:	blx	r2
    2064:	mvn	r0, #0
    2068:	pop	{r4, r5, fp, pc}
    206c:	.word	0x00000914

00002070 <daq_shutdown>:
    2070:	cmp	r0, #0
    2074:	mvneq	r0, #4
    2078:	bxeq	lr
    207c:	cmp	r1, #0
    2080:	mvneq	r0, #5
    2084:	bxeq	lr
    2088:	push	{fp, lr}
    208c:	mov	fp, sp
    2090:	ldr	r2, [r0, #44]	; 0x2c
    2094:	mov	r0, r1
    2098:	blx	r2
    209c:	mov	r0, #0
    20a0:	pop	{fp, pc}

000020a4 <daq_check_status>:
    20a4:	cmp	r0, #0
    20a8:	cmpne	r1, #0
    20ac:	bne	20b8 <daq_check_status+0x14>
    20b0:	mov	r0, #4
    20b4:	bx	lr
    20b8:	ldr	r2, [r0, #48]	; 0x30
    20bc:	mov	r0, r1
    20c0:	bx	r2

000020c4 <daq_get_stats>:
    20c4:	cmp	r0, #0
    20c8:	mvneq	r0, #4
    20cc:	bxeq	lr
    20d0:	cmp	r1, #0
    20d4:	mvneq	r0, #5
    20d8:	bxeq	lr
    20dc:	cmp	r2, #0
    20e0:	beq	20f4 <daq_get_stats+0x30>
    20e4:	ldr	r3, [r0, #52]	; 0x34
    20e8:	mov	r0, r1
    20ec:	mov	r1, r2
    20f0:	bx	r3
    20f4:	push	{fp, lr}
    20f8:	mov	fp, sp
    20fc:	ldr	r3, [r0, #76]	; 0x4c
    2100:	ldr	r2, [pc, #20]	; 211c <daq_get_stats+0x58>
    2104:	add	r2, pc, r2
    2108:	mov	r0, r1
    210c:	mov	r1, r2
    2110:	blx	r3
    2114:	mvn	r0, #6
    2118:	pop	{fp, pc}
    211c:	.word	0x00000894

00002120 <daq_reset_stats>:
    2120:	cmp	r0, #0
    2124:	cmpne	r1, #0
    2128:	bxeq	lr
    212c:	ldr	r2, [r0, #56]	; 0x38
    2130:	mov	r0, r1
    2134:	bx	r2

00002138 <daq_get_snaplen>:
    2138:	cmp	r0, #0
    213c:	mvneq	r0, #4
    2140:	bxeq	lr
    2144:	cmp	r1, #0
    2148:	mvneq	r0, #5
    214c:	bxeq	lr
    2150:	ldr	r2, [r0, #60]	; 0x3c
    2154:	mov	r0, r1
    2158:	bx	r2

0000215c <daq_get_capabilities>:
    215c:	cmp	r0, #0
    2160:	mvneq	r0, #4
    2164:	bxeq	lr
    2168:	cmp	r1, #0
    216c:	mvneq	r0, #5
    2170:	bxeq	lr
    2174:	ldr	r2, [r0, #64]	; 0x40
    2178:	mov	r0, r1
    217c:	bx	r2

00002180 <daq_get_datalink_type>:
    2180:	cmp	r0, #0
    2184:	mvneq	r0, #4
    2188:	bxeq	lr
    218c:	cmp	r1, #0
    2190:	mvneq	r0, #5
    2194:	bxeq	lr
    2198:	ldr	r2, [r0, #68]	; 0x44
    219c:	mov	r0, r1
    21a0:	bx	r2

000021a4 <daq_get_error>:
    21a4:	cmp	r0, #0
    21a8:	cmpne	r1, #0
    21ac:	bne	21b8 <daq_get_error+0x14>
    21b0:	mov	r0, #0
    21b4:	bx	lr
    21b8:	ldr	r2, [r0, #72]	; 0x48
    21bc:	mov	r0, r1
    21c0:	bx	r2

000021c4 <daq_clear_error>:
    21c4:	cmp	r0, #0
    21c8:	cmpne	r1, #0
    21cc:	bxeq	lr
    21d0:	ldr	r3, [r0, #76]	; 0x4c
    21d4:	ldr	r2, [pc, #12]	; 21e8 <daq_clear_error+0x24>
    21d8:	add	r2, pc, r2
    21dc:	mov	r0, r1
    21e0:	mov	r1, r2
    21e4:	bx	r3
    21e8:	.word	0x000005e2

000021ec <daq_get_device_index>:
    21ec:	cmp	r0, #0
    21f0:	mvneq	r0, #4
    21f4:	bxeq	lr
    21f8:	cmp	r1, #0
    21fc:	mvneq	r0, #5
    2200:	bxeq	lr
    2204:	cmp	r2, #0
    2208:	beq	221c <daq_get_device_index+0x30>
    220c:	ldr	r3, [r0, #80]	; 0x50
    2210:	mov	r0, r1
    2214:	mov	r1, r2
    2218:	bx	r3
    221c:	push	{fp, lr}
    2220:	mov	fp, sp
    2224:	ldr	r3, [r0, #76]	; 0x4c
    2228:	ldr	r2, [pc, #20]	; 2244 <daq_get_device_index+0x58>
    222c:	add	r2, pc, r2
    2230:	mov	r0, r1
    2234:	mov	r1, r2
    2238:	blx	r3
    223c:	mvn	r0, #6
    2240:	pop	{fp, pc}
    2244:	.word	0x0000078c

00002248 <daq_hup_prep>:
    2248:	cmp	r0, #0
    224c:	mvneq	r0, #4
    2250:	bxeq	lr
    2254:	cmp	r1, #0
    2258:	mvneq	r0, #5
    225c:	bxeq	lr
    2260:	ldr	r3, [r0, #88]	; 0x58
    2264:	cmp	r3, #0
    2268:	beq	2278 <daq_hup_prep+0x30>
    226c:	mov	r0, r1
    2270:	mov	r1, r2
    2274:	bx	r3
    2278:	ldr	r0, [r0, #92]	; 0x5c
    227c:	clz	r0, r0
    2280:	lsr	r0, r0, #5
    2284:	bx	lr

00002288 <daq_hup_apply>:
    2288:	cmp	r0, #0
    228c:	mvneq	r0, #4
    2290:	bxeq	lr
    2294:	cmp	r1, #0
    2298:	mvneq	r0, #5
    229c:	bxeq	lr
    22a0:	ldr	ip, [r0, #92]	; 0x5c
    22a4:	cmp	ip, #0
    22a8:	moveq	r0, #0
    22ac:	bxeq	lr
    22b0:	mov	r0, r1
    22b4:	mov	r1, r2
    22b8:	mov	r2, r3
    22bc:	bx	ip

000022c0 <daq_hup_post>:
    22c0:	cmp	r0, #0
    22c4:	mvneq	r0, #4
    22c8:	bxeq	lr
    22cc:	cmp	r1, #0
    22d0:	mvneq	r0, #5
    22d4:	bxeq	lr
    22d8:	ldr	r3, [r0, #96]	; 0x60
    22dc:	cmp	r3, #0
    22e0:	moveq	r0, #0
    22e4:	bxeq	lr
    22e8:	mov	r0, r1
    22ec:	mov	r1, r2
    22f0:	bx	r3

000022f4 <daq_modify_flow>:
    22f4:	cmp	r0, #0
    22f8:	mvneq	r0, #4
    22fc:	bxeq	lr
    2300:	ldr	ip, [r0, #84]	; 0x54
    2304:	cmp	ip, #0
    2308:	moveq	r0, #0
    230c:	bxeq	lr
    2310:	mov	r0, r1
    2314:	mov	r1, r2
    2318:	mov	r2, r3
    231c:	bx	ip

00002320 <daq_get_name>:
    2320:	cmp	r0, #0
    2324:	ldrne	r0, [r0, #8]
    2328:	moveq	r0, #0
    232c:	bx	lr

00002330 <daq_get_type>:
    2330:	cmp	r0, #0
    2334:	ldrne	r0, [r0, #12]
    2338:	mvneq	r0, #4
    233c:	bx	lr

00002340 <daq_dp_add_dc>:
    2340:	cmp	r0, #0
    2344:	mvneq	r0, #4
    2348:	bxeq	lr
    234c:	cmp	r1, #0
    2350:	mvneq	r0, #5
    2354:	bxeq	lr
    2358:	ldr	ip, [r0, #100]	; 0x64
    235c:	cmp	ip, #0
    2360:	moveq	r0, #0
    2364:	bxeq	lr
    2368:	push	{fp, lr}
    236c:	mov	fp, sp
    2370:	ldr	lr, [fp, #8]
    2374:	mov	r0, r1
    2378:	mov	r1, r2
    237c:	mov	r2, r3
    2380:	mov	r3, lr
    2384:	pop	{fp, lr}
    2388:	bx	ip

0000238c <__stat>:
    238c:	mov	r2, r1
    2390:	mov	r1, r0
    2394:	mov	r0, #3
    2398:	b	eac <__xstat@plt>

Disassembly of section .fini:

0000239c <_fini>:
    239c:	push	{r3, lr}
    23a0:	pop	{r3, pc}
