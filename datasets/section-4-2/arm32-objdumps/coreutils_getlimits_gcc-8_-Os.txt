
../repos/coreutils/src/getlimits:     file format elf32-littlearm


Disassembly of section .init:

00010bc4 <.init>:
   10bc4:	push	{r3, lr}
   10bc8:	bl	11858 <__snprintf_chk@plt+0xa34>
   10bcc:	pop	{r3, pc}

Disassembly of section .plt:

00010bd0 <calloc@plt-0x14>:
   10bd0:	push	{lr}		; (str lr, [sp, #-4]!)
   10bd4:	ldr	lr, [pc, #4]	; 10be0 <calloc@plt-0x4>
   10bd8:	add	lr, pc, lr
   10bdc:	ldr	pc, [lr, #8]!
   10be0:	andeq	r4, r1, r0, lsr #8

00010be4 <calloc@plt>:
   10be4:	add	ip, pc, #0, 12
   10be8:	add	ip, ip, #20, 20	; 0x14000
   10bec:	ldr	pc, [ip, #1056]!	; 0x420

00010bf0 <fputs_unlocked@plt>:
   10bf0:	add	ip, pc, #0, 12
   10bf4:	add	ip, ip, #20, 20	; 0x14000
   10bf8:	ldr	pc, [ip, #1048]!	; 0x418

00010bfc <strcmp@plt>:
   10bfc:	add	ip, pc, #0, 12
   10c00:	add	ip, ip, #20, 20	; 0x14000
   10c04:	ldr	pc, [ip, #1040]!	; 0x410

00010c08 <fflush@plt>:
   10c08:	add	ip, pc, #0, 12
   10c0c:	add	ip, ip, #20, 20	; 0x14000
   10c10:	ldr	pc, [ip, #1032]!	; 0x408

00010c14 <free@plt>:
   10c14:	add	ip, pc, #0, 12
   10c18:	add	ip, ip, #20, 20	; 0x14000
   10c1c:	ldr	pc, [ip, #1024]!	; 0x400

00010c20 <_exit@plt>:
   10c20:	add	ip, pc, #0, 12
   10c24:	add	ip, ip, #20, 20	; 0x14000
   10c28:	ldr	pc, [ip, #1016]!	; 0x3f8

00010c2c <memcpy@plt>:
   10c2c:	add	ip, pc, #0, 12
   10c30:	add	ip, ip, #20, 20	; 0x14000
   10c34:	ldr	pc, [ip, #1008]!	; 0x3f0

00010c38 <mbsinit@plt>:
   10c38:	add	ip, pc, #0, 12
   10c3c:	add	ip, ip, #20, 20	; 0x14000
   10c40:	ldr	pc, [ip, #1000]!	; 0x3e8

00010c44 <strtold@plt>:
   10c44:	add	ip, pc, #0, 12
   10c48:	add	ip, ip, #20, 20	; 0x14000
   10c4c:	ldr	pc, [ip, #992]!	; 0x3e0

00010c50 <memcmp@plt>:
   10c50:	add	ip, pc, #0, 12
   10c54:	add	ip, ip, #20, 20	; 0x14000
   10c58:	ldr	pc, [ip, #984]!	; 0x3d8

00010c5c <fputc_unlocked@plt>:
   10c5c:	add	ip, pc, #0, 12
   10c60:	add	ip, ip, #20, 20	; 0x14000
   10c64:	ldr	pc, [ip, #976]!	; 0x3d0

00010c68 <dcgettext@plt>:
   10c68:	add	ip, pc, #0, 12
   10c6c:	add	ip, ip, #20, 20	; 0x14000
   10c70:	ldr	pc, [ip, #968]!	; 0x3c8

00010c74 <realloc@plt>:
   10c74:	add	ip, pc, #0, 12
   10c78:	add	ip, ip, #20, 20	; 0x14000
   10c7c:	ldr	pc, [ip, #960]!	; 0x3c0

00010c80 <textdomain@plt>:
   10c80:	add	ip, pc, #0, 12
   10c84:	add	ip, ip, #20, 20	; 0x14000
   10c88:	ldr	pc, [ip, #952]!	; 0x3b8

00010c8c <iswprint@plt>:
   10c8c:	add	ip, pc, #0, 12
   10c90:	add	ip, ip, #20, 20	; 0x14000
   10c94:	ldr	pc, [ip, #944]!	; 0x3b0

00010c98 <lseek64@plt>:
   10c98:	add	ip, pc, #0, 12
   10c9c:	add	ip, ip, #20, 20	; 0x14000
   10ca0:	ldr	pc, [ip, #936]!	; 0x3a8

00010ca4 <__ctype_get_mb_cur_max@plt>:
   10ca4:	add	ip, pc, #0, 12
   10ca8:	add	ip, ip, #20, 20	; 0x14000
   10cac:	ldr	pc, [ip, #928]!	; 0x3a0

00010cb0 <__fpending@plt>:
   10cb0:	add	ip, pc, #0, 12
   10cb4:	add	ip, ip, #20, 20	; 0x14000
   10cb8:	ldr	pc, [ip, #920]!	; 0x398

00010cbc <ferror_unlocked@plt>:
   10cbc:	add	ip, pc, #0, 12
   10cc0:	add	ip, ip, #20, 20	; 0x14000
   10cc4:	ldr	pc, [ip, #912]!	; 0x390

00010cc8 <mbrtowc@plt>:
   10cc8:	add	ip, pc, #0, 12
   10ccc:	add	ip, ip, #20, 20	; 0x14000
   10cd0:	ldr	pc, [ip, #904]!	; 0x388

00010cd4 <error@plt>:
   10cd4:	add	ip, pc, #0, 12
   10cd8:	add	ip, ip, #20, 20	; 0x14000
   10cdc:	ldr	pc, [ip, #896]!	; 0x380

00010ce0 <strtof@plt>:
   10ce0:	add	ip, pc, #0, 12
   10ce4:	add	ip, ip, #20, 20	; 0x14000
   10ce8:	ldr	pc, [ip, #888]!	; 0x378

00010cec <puts@plt>:
   10cec:	add	ip, pc, #0, 12
   10cf0:	add	ip, ip, #20, 20	; 0x14000
   10cf4:	ldr	pc, [ip, #880]!	; 0x370

00010cf8 <malloc@plt>:
   10cf8:	add	ip, pc, #0, 12
   10cfc:	add	ip, ip, #20, 20	; 0x14000
   10d00:	ldr	pc, [ip, #872]!	; 0x368

00010d04 <__libc_start_main@plt>:
   10d04:	add	ip, pc, #0, 12
   10d08:	add	ip, ip, #20, 20	; 0x14000
   10d0c:	ldr	pc, [ip, #864]!	; 0x360

00010d10 <__freading@plt>:
   10d10:	add	ip, pc, #0, 12
   10d14:	add	ip, ip, #20, 20	; 0x14000
   10d18:	ldr	pc, [ip, #856]!	; 0x358

00010d1c <__gmon_start__@plt>:
   10d1c:	add	ip, pc, #0, 12
   10d20:	add	ip, ip, #20, 20	; 0x14000
   10d24:	ldr	pc, [ip, #848]!	; 0x350

00010d28 <getopt_long@plt>:
   10d28:	add	ip, pc, #0, 12
   10d2c:	add	ip, ip, #20, 20	; 0x14000
   10d30:	ldr	pc, [ip, #840]!	; 0x348

00010d34 <__ctype_b_loc@plt>:
   10d34:	add	ip, pc, #0, 12
   10d38:	add	ip, ip, #20, 20	; 0x14000
   10d3c:	ldr	pc, [ip, #832]!	; 0x340

00010d40 <exit@plt>:
   10d40:	add	ip, pc, #0, 12
   10d44:	add	ip, ip, #20, 20	; 0x14000
   10d48:	ldr	pc, [ip, #824]!	; 0x338

00010d4c <strlen@plt>:
   10d4c:	add	ip, pc, #0, 12
   10d50:	add	ip, ip, #20, 20	; 0x14000
   10d54:	ldr	pc, [ip, #816]!	; 0x330

00010d58 <__errno_location@plt>:
   10d58:	add	ip, pc, #0, 12
   10d5c:	add	ip, ip, #20, 20	; 0x14000
   10d60:	ldr	pc, [ip, #808]!	; 0x328

00010d64 <__sprintf_chk@plt>:
   10d64:	add	ip, pc, #0, 12
   10d68:	add	ip, ip, #20, 20	; 0x14000
   10d6c:	ldr	pc, [ip, #800]!	; 0x320

00010d70 <__cxa_atexit@plt>:
   10d70:	add	ip, pc, #0, 12
   10d74:	add	ip, ip, #20, 20	; 0x14000
   10d78:	ldr	pc, [ip, #792]!	; 0x318

00010d7c <memset@plt>:
   10d7c:	add	ip, pc, #0, 12
   10d80:	add	ip, ip, #20, 20	; 0x14000
   10d84:	ldr	pc, [ip, #784]!	; 0x310

00010d88 <__printf_chk@plt>:
   10d88:	add	ip, pc, #0, 12
   10d8c:	add	ip, ip, #20, 20	; 0x14000
   10d90:	ldr	pc, [ip, #776]!	; 0x308

00010d94 <strtod@plt>:
   10d94:	add	ip, pc, #0, 12
   10d98:	add	ip, ip, #20, 20	; 0x14000
   10d9c:	ldr	pc, [ip, #768]!	; 0x300

00010da0 <fileno@plt>:
   10da0:	add	ip, pc, #0, 12
   10da4:	add	ip, ip, #20, 20	; 0x14000
   10da8:	ldr	pc, [ip, #760]!	; 0x2f8

00010dac <__fprintf_chk@plt>:
   10dac:	add	ip, pc, #0, 12
   10db0:	add	ip, ip, #20, 20	; 0x14000
   10db4:	ldr	pc, [ip, #752]!	; 0x2f0

00010db8 <fclose@plt>:
   10db8:	add	ip, pc, #0, 12
   10dbc:	add	ip, ip, #20, 20	; 0x14000
   10dc0:	ldr	pc, [ip, #744]!	; 0x2e8

00010dc4 <fseeko64@plt>:
   10dc4:	add	ip, pc, #0, 12
   10dc8:	add	ip, ip, #20, 20	; 0x14000
   10dcc:	ldr	pc, [ip, #736]!	; 0x2e0

00010dd0 <setlocale@plt>:
   10dd0:	add	ip, pc, #0, 12
   10dd4:	add	ip, ip, #20, 20	; 0x14000
   10dd8:	ldr	pc, [ip, #728]!	; 0x2d8

00010ddc <strrchr@plt>:
   10ddc:	add	ip, pc, #0, 12
   10de0:	add	ip, ip, #20, 20	; 0x14000
   10de4:	ldr	pc, [ip, #720]!	; 0x2d0

00010de8 <nl_langinfo@plt>:
   10de8:	add	ip, pc, #0, 12
   10dec:	add	ip, ip, #20, 20	; 0x14000
   10df0:	ldr	pc, [ip, #712]!	; 0x2c8

00010df4 <bindtextdomain@plt>:
   10df4:	add	ip, pc, #0, 12
   10df8:	add	ip, ip, #20, 20	; 0x14000
   10dfc:	ldr	pc, [ip, #704]!	; 0x2c0

00010e00 <fputs@plt>:
   10e00:	add	ip, pc, #0, 12
   10e04:	add	ip, ip, #20, 20	; 0x14000
   10e08:	ldr	pc, [ip, #696]!	; 0x2b8

00010e0c <strncmp@plt>:
   10e0c:	add	ip, pc, #0, 12
   10e10:	add	ip, ip, #20, 20	; 0x14000
   10e14:	ldr	pc, [ip, #688]!	; 0x2b0

00010e18 <abort@plt>:
   10e18:	add	ip, pc, #0, 12
   10e1c:	add	ip, ip, #20, 20	; 0x14000
   10e20:	ldr	pc, [ip, #680]!	; 0x2a8

00010e24 <__snprintf_chk@plt>:
   10e24:	add	ip, pc, #0, 12
   10e28:	add	ip, ip, #20, 20	; 0x14000
   10e2c:	ldr	pc, [ip, #672]!	; 0x2a0

Disassembly of section .text:

00010e30 <.text>:
   10e30:	push	{r4, lr}
   10e34:	bl	10d58 <__errno_location@plt>
   10e38:	mov	r3, #12
   10e3c:	str	r3, [r0]
   10e40:	mov	r0, #0
   10e44:	pop	{r4, pc}
   10e48:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10e4c:	mov	r6, r0
   10e50:	mov	r4, r1
   10e54:	mov	sl, #0
   10e58:	mov	r7, #0
   10e5c:	mvn	r8, #-2147483648	; 0x80000000
   10e60:	mov	r9, #0
   10e64:	ldr	r5, [pc, #1116]	; 112c8 <__snprintf_chk@plt+0x4a4>
   10e68:	vpush	{d8-d9}
   10e6c:	sub	sp, sp, #80	; 0x50
   10e70:	ldr	r0, [r1]
   10e74:	bl	121d0 <__snprintf_chk@plt+0x13ac>
   10e78:	ldr	r1, [pc, #1100]	; 112cc <__snprintf_chk@plt+0x4a8>
   10e7c:	mov	r0, #6
   10e80:	bl	10dd0 <setlocale@plt>
   10e84:	ldr	r1, [pc, #1092]	; 112d0 <__snprintf_chk@plt+0x4ac>
   10e88:	mov	r0, r5
   10e8c:	bl	10df4 <bindtextdomain@plt>
   10e90:	mov	r0, r5
   10e94:	ldr	r5, [pc, #1080]	; 112d4 <__snprintf_chk@plt+0x4b0>
   10e98:	bl	10c80 <textdomain@plt>
   10e9c:	ldr	r0, [pc, #1076]	; 112d8 <__snprintf_chk@plt+0x4b4>
   10ea0:	bl	1450c <__snprintf_chk@plt+0x36e8>
   10ea4:	ldr	r3, [pc, #1072]	; 112dc <__snprintf_chk@plt+0x4b8>
   10ea8:	mov	r1, r4
   10eac:	mov	r0, r6
   10eb0:	mov	r6, #255	; 0xff
   10eb4:	ldr	r4, [pc, #1060]	; 112e0 <__snprintf_chk@plt+0x4bc>
   10eb8:	ldr	r2, [pc, #1060]	; 112e4 <__snprintf_chk@plt+0x4c0>
   10ebc:	str	r3, [sp, #8]
   10ec0:	ldr	r3, [pc, #1056]	; 112e8 <__snprintf_chk@plt+0x4c4>
   10ec4:	vldr	d9, [pc, #1004]	; 112b8 <__snprintf_chk@plt+0x494>
   10ec8:	vldr	d8, [pc, #1008]	; 112c0 <__snprintf_chk@plt+0x49c>
   10ecc:	str	r3, [sp, #4]
   10ed0:	ldr	r3, [pc, #1044]	; 112ec <__snprintf_chk@plt+0x4c8>
   10ed4:	str	sl, [sp, #12]
   10ed8:	str	r3, [sp]
   10edc:	ldr	r3, [pc, #1036]	; 112f0 <__snprintf_chk@plt+0x4cc>
   10ee0:	bl	12050 <__snprintf_chk@plt+0x122c>
   10ee4:	mov	r3, r4
   10ee8:	mov	r2, #21
   10eec:	strd	r6, [sp]
   10ef0:	mov	r1, #1
   10ef4:	add	r0, sp, #17
   10ef8:	bl	10d64 <__sprintf_chk@plt>
   10efc:	add	r2, sp, #17
   10f00:	ldr	r1, [pc, #1004]	; 112f4 <__snprintf_chk@plt+0x4d0>
   10f04:	mov	r0, #1
   10f08:	bl	10d88 <__printf_chk@plt>
   10f0c:	add	r0, sp, #16
   10f10:	bl	1190c <__snprintf_chk@plt+0xae8>
   10f14:	mov	r2, r0
   10f18:	ldr	r1, [pc, #984]	; 112f8 <__snprintf_chk@plt+0x4d4>
   10f1c:	mov	r0, #1
   10f20:	bl	10d88 <__printf_chk@plt>
   10f24:	mov	r2, #127	; 0x7f
   10f28:	mov	r3, #0
   10f2c:	mov	r1, #1
   10f30:	add	r0, sp, #17
   10f34:	strd	r2, [sp]
   10f38:	mov	r3, r4
   10f3c:	mov	r2, #21
   10f40:	bl	10d64 <__sprintf_chk@plt>
   10f44:	add	r2, sp, #17
   10f48:	ldr	r1, [pc, #940]	; 112fc <__snprintf_chk@plt+0x4d8>
   10f4c:	mov	r0, #1
   10f50:	bl	10d88 <__printf_chk@plt>
   10f54:	add	r0, sp, #16
   10f58:	bl	1190c <__snprintf_chk@plt+0xae8>
   10f5c:	mov	r2, r0
   10f60:	ldr	r1, [pc, #920]	; 11300 <__snprintf_chk@plt+0x4dc>
   10f64:	mov	r0, #1
   10f68:	bl	10d88 <__printf_chk@plt>
   10f6c:	mvn	r2, #127	; 0x7f
   10f70:	mvn	r3, #0
   10f74:	mov	r1, #1
   10f78:	add	r0, sp, #17
   10f7c:	strd	r2, [sp]
   10f80:	mov	r3, r5
   10f84:	mov	r2, #21
   10f88:	bl	10d64 <__sprintf_chk@plt>
   10f8c:	add	r2, sp, #17
   10f90:	ldr	r1, [pc, #876]	; 11304 <__snprintf_chk@plt+0x4e0>
   10f94:	mov	r0, #1
   10f98:	bl	10d88 <__printf_chk@plt>
   10f9c:	add	r0, sp, #16
   10fa0:	bl	1190c <__snprintf_chk@plt+0xae8>
   10fa4:	mov	r2, r0
   10fa8:	ldr	r1, [pc, #856]	; 11308 <__snprintf_chk@plt+0x4e4>
   10fac:	mov	r0, #1
   10fb0:	bl	10d88 <__printf_chk@plt>
   10fb4:	mov	r3, r4
   10fb8:	mov	r2, #21
   10fbc:	strd	r6, [sp]
   10fc0:	mov	r1, #1
   10fc4:	add	r0, sp, #17
   10fc8:	bl	10d64 <__sprintf_chk@plt>
   10fcc:	add	r2, sp, #17
   10fd0:	ldr	r1, [pc, #820]	; 1130c <__snprintf_chk@plt+0x4e8>
   10fd4:	mov	r0, #1
   10fd8:	bl	10d88 <__printf_chk@plt>
   10fdc:	add	r0, sp, #16
   10fe0:	mvn	r6, #0
   10fe4:	bl	1190c <__snprintf_chk@plt+0xae8>
   10fe8:	mov	r2, r0
   10fec:	ldr	r1, [pc, #796]	; 11310 <__snprintf_chk@plt+0x4ec>
   10ff0:	mov	r0, #1
   10ff4:	bl	10d88 <__printf_chk@plt>
   10ff8:	movw	r2, #32767	; 0x7fff
   10ffc:	mov	r3, #0
   11000:	mov	r1, #1
   11004:	add	r0, sp, #17
   11008:	strd	r2, [sp]
   1100c:	mov	r3, r4
   11010:	mov	r2, #21
   11014:	bl	10d64 <__sprintf_chk@plt>
   11018:	add	r2, sp, #17
   1101c:	ldr	r1, [pc, #752]	; 11314 <__snprintf_chk@plt+0x4f0>
   11020:	mov	r0, #1
   11024:	bl	10d88 <__printf_chk@plt>
   11028:	add	r0, sp, #16
   1102c:	mov	r7, #0
   11030:	bl	1190c <__snprintf_chk@plt+0xae8>
   11034:	mov	r2, r0
   11038:	ldr	r1, [pc, #728]	; 11318 <__snprintf_chk@plt+0x4f4>
   1103c:	mov	r0, #1
   11040:	bl	10d88 <__printf_chk@plt>
   11044:	ldr	r2, [pc, #720]	; 1131c <__snprintf_chk@plt+0x4f8>
   11048:	mvn	r3, #0
   1104c:	mov	r1, #1
   11050:	add	r0, sp, #17
   11054:	strd	r2, [sp]
   11058:	mov	r3, r5
   1105c:	mov	r2, #21
   11060:	bl	10d64 <__sprintf_chk@plt>
   11064:	add	r2, sp, #17
   11068:	ldr	r1, [pc, #688]	; 11320 <__snprintf_chk@plt+0x4fc>
   1106c:	mov	r0, #1
   11070:	bl	10d88 <__printf_chk@plt>
   11074:	add	r0, sp, #16
   11078:	bl	1190c <__snprintf_chk@plt+0xae8>
   1107c:	mov	r2, r0
   11080:	ldr	r1, [pc, #668]	; 11324 <__snprintf_chk@plt+0x500>
   11084:	mov	r0, #1
   11088:	bl	10d88 <__printf_chk@plt>
   1108c:	mov	r3, r4
   11090:	mov	r2, #21
   11094:	strd	r8, [sp]
   11098:	mov	r1, #1
   1109c:	add	r0, sp, #17
   110a0:	bl	10d64 <__sprintf_chk@plt>
   110a4:	add	r2, sp, #17
   110a8:	ldr	r1, [pc, #632]	; 11328 <__snprintf_chk@plt+0x504>
   110ac:	mov	r0, #1
   110b0:	bl	10d88 <__printf_chk@plt>
   110b4:	add	r0, sp, #16
   110b8:	bl	1190c <__snprintf_chk@plt+0xae8>
   110bc:	mov	r2, r0
   110c0:	ldr	r1, [pc, #612]	; 1132c <__snprintf_chk@plt+0x508>
   110c4:	mov	r0, #1
   110c8:	bl	10d88 <__printf_chk@plt>
   110cc:	mov	r2, #-2147483648	; 0x80000000
   110d0:	mvn	r3, #0
   110d4:	mov	r1, #1
   110d8:	add	r0, sp, #17
   110dc:	strd	r2, [sp]
   110e0:	mov	r3, r5
   110e4:	mov	r2, #21
   110e8:	bl	10d64 <__sprintf_chk@plt>
   110ec:	add	r3, sp, #17
   110f0:	ldr	r1, [pc, #568]	; 11330 <__snprintf_chk@plt+0x50c>
   110f4:	mov	r0, #1
   110f8:	mov	r2, r3
   110fc:	bl	10d88 <__printf_chk@plt>
   11100:	add	r0, sp, #16
   11104:	bl	1190c <__snprintf_chk@plt+0xae8>
   11108:	mov	r2, r0
   1110c:	ldr	r1, [pc, #544]	; 11334 <__snprintf_chk@plt+0x510>
   11110:	mov	r0, #1
   11114:	bl	10d88 <__printf_chk@plt>
   11118:	mov	r3, r4
   1111c:	mov	r2, #21
   11120:	strd	r6, [sp]
   11124:	mov	r1, #1
   11128:	add	r0, sp, #17
   1112c:	bl	10d64 <__sprintf_chk@plt>
   11130:	add	r3, sp, #17
   11134:	ldr	r1, [pc, #508]	; 11338 <__snprintf_chk@plt+0x514>
   11138:	mov	r0, #1
   1113c:	mov	r2, r3
   11140:	bl	10d88 <__printf_chk@plt>
   11144:	add	r0, sp, #16
   11148:	bl	1190c <__snprintf_chk@plt+0xae8>
   1114c:	mov	r2, r0
   11150:	ldr	r1, [pc, #484]	; 1133c <__snprintf_chk@plt+0x518>
   11154:	mov	r0, #1
   11158:	bl	10d88 <__printf_chk@plt>
   1115c:	mov	r3, r4
   11160:	mov	r2, #21
   11164:	strd	r8, [sp]
   11168:	mov	r1, #1
   1116c:	add	r0, sp, #17
   11170:	bl	10d64 <__sprintf_chk@plt>
   11174:	add	r3, sp, #17
   11178:	ldr	r1, [pc, #448]	; 11340 <__snprintf_chk@plt+0x51c>
   1117c:	mov	r0, #1
   11180:	mov	r2, r3
   11184:	bl	10d88 <__printf_chk@plt>
   11188:	add	r0, sp, #16
   1118c:	bl	1190c <__snprintf_chk@plt+0xae8>
   11190:	mov	r2, r0
   11194:	ldr	r1, [pc, #424]	; 11344 <__snprintf_chk@plt+0x520>
   11198:	mov	r0, #1
   1119c:	bl	10d88 <__printf_chk@plt>
   111a0:	mov	r2, #-2147483648	; 0x80000000
   111a4:	mvn	r3, #0
   111a8:	mov	r1, #1
   111ac:	add	r0, sp, #17
   111b0:	strd	r2, [sp]
   111b4:	mov	r3, r5
   111b8:	mov	r2, #21
   111bc:	bl	10d64 <__sprintf_chk@plt>
   111c0:	add	r3, sp, #17
   111c4:	ldr	r1, [pc, #380]	; 11348 <__snprintf_chk@plt+0x524>
   111c8:	mov	r0, #1
   111cc:	mov	r2, r3
   111d0:	bl	10d88 <__printf_chk@plt>
   111d4:	add	r0, sp, #16
   111d8:	bl	1190c <__snprintf_chk@plt+0xae8>
   111dc:	mov	r2, r0
   111e0:	ldr	r1, [pc, #356]	; 1134c <__snprintf_chk@plt+0x528>
   111e4:	mov	r0, #1
   111e8:	bl	10d88 <__printf_chk@plt>
   111ec:	mov	r3, r4
   111f0:	mov	r2, #21
   111f4:	strd	r6, [sp]
   111f8:	mov	r1, #1
   111fc:	add	r0, sp, #17
   11200:	bl	10d64 <__sprintf_chk@plt>
   11204:	add	r3, sp, #17
   11208:	ldr	r1, [pc, #320]	; 11350 <__snprintf_chk@plt+0x52c>
   1120c:	mov	r0, #1
   11210:	mov	r2, r3
   11214:	bl	10d88 <__printf_chk@plt>
   11218:	add	r0, sp, #16
   1121c:	bl	1190c <__snprintf_chk@plt+0xae8>
   11220:	mov	r2, r0
   11224:	ldr	r1, [pc, #296]	; 11354 <__snprintf_chk@plt+0x530>
   11228:	mov	r0, #1
   1122c:	bl	10d88 <__printf_chk@plt>
   11230:	mov	r3, r4
   11234:	mov	r2, #21
   11238:	strd	r6, [sp]
   1123c:	mov	r1, #1
   11240:	add	r0, sp, #17
   11244:	bl	10d64 <__sprintf_chk@plt>
   11248:	add	r3, sp, #17
   1124c:	ldr	r1, [pc, #260]	; 11358 <__snprintf_chk@plt+0x534>
   11250:	mov	r0, #1
   11254:	mov	r2, r3
   11258:	bl	10d88 <__printf_chk@plt>
   1125c:	add	r0, sp, #16
   11260:	bl	1190c <__snprintf_chk@plt+0xae8>
   11264:	mov	r2, r0
   11268:	ldr	r1, [pc, #236]	; 1135c <__snprintf_chk@plt+0x538>
   1126c:	mov	r0, #1
   11270:	bl	10d88 <__printf_chk@plt>
   11274:	mov	r3, r4
   11278:	mov	r2, #21
   1127c:	strd	r8, [sp]
   11280:	mov	r1, #1
   11284:	add	r0, sp, #17
   11288:	bl	10d64 <__sprintf_chk@plt>
   1128c:	add	r3, sp, #17
   11290:	ldr	r1, [pc, #200]	; 11360 <__snprintf_chk@plt+0x53c>
   11294:	mov	r0, #1
   11298:	mov	r2, r3
   1129c:	bl	10d88 <__printf_chk@plt>
   112a0:	add	r0, sp, #16
   112a4:	bl	1190c <__snprintf_chk@plt+0xae8>
   112a8:	mov	r2, r0
   112ac:	ldr	r1, [pc, #176]	; 11364 <__snprintf_chk@plt+0x540>
   112b0:	mov	r0, #1
   112b4:	b	113e8 <__snprintf_chk@plt+0x5c4>
   112b8:	andeq	r0, r0, r0
   112bc:	andseq	r0, r0, r0
   112c0:			; <UNDEFINED> instruction: 0xffffffff
   112c4:	svcvc	0x00efffff
   112c8:	muleq	r1, r3, r6
   112cc:	andeq	r4, r1, ip, ror #11
   112d0:	andeq	r4, r1, r6, lsr r7
   112d4:	andeq	r4, r1, lr, lsl #15
   112d8:	andeq	r1, r1, r0, ror #23
   112dc:	andeq	r4, r1, lr, asr #14
   112e0:	andeq	r4, r1, fp, ror #14
   112e4:	andeq	r4, r1, r8, ror #10
   112e8:	andeq	r1, r1, r0, lsr #19
   112ec:	andeq	r4, r1, ip, asr r7
   112f0:	andeq	r4, r1, pc, lsl #13
   112f4:	andeq	r4, r1, r1, ror r7
   112f8:	andeq	r4, r1, pc, ror r7
   112fc:	andeq	r4, r1, r0, ror r7
   11300:	andeq	r4, r1, lr, ror r7
   11304:	muleq	r1, r3, r7
   11308:	andeq	r4, r1, r1, lsr #15
   1130c:			; <UNDEFINED> instruction: 0x000147b1
   11310:			; <UNDEFINED> instruction: 0x000147bf
   11314:	andeq	r4, r1, pc, asr #15
   11318:	ldrdeq	r4, [r1], -ip
   1131c:			; <UNDEFINED> instruction: 0xffff8000
   11320:	andeq	r4, r1, fp, ror #15
   11324:	strdeq	r4, [r1], -r8
   11328:	andeq	r4, r1, r2, lsr #16
   1132c:	andeq	r4, r1, pc, lsr #16
   11330:	andeq	r4, r1, r7, lsl #16
   11334:	andeq	r4, r1, r3, lsl r8
   11338:	andeq	r4, r1, r1, lsr #16
   1133c:	andeq	r4, r1, lr, lsr #16
   11340:	andeq	r4, r1, sl, asr r8
   11344:	andeq	r4, r1, r8, ror #16
   11348:	andeq	r4, r1, sp, lsr r8
   1134c:	andeq	r4, r1, sl, asr #16
   11350:	andeq	r4, r1, r9, asr r8
   11354:	andeq	r4, r1, r7, ror #16
   11358:	andeq	r4, r1, r8, ror r8
   1135c:	andeq	r4, r1, r6, lsl #17
   11360:	andeq	r4, r1, r7, ror r8
   11364:	andeq	r4, r1, r5, lsl #17
   11368:	muleq	r1, r5, r8
   1136c:	andeq	r4, r1, r3, lsr #17
   11370:			; <UNDEFINED> instruction: 0x000148b3
   11374:	andeq	r4, r1, r2, asr #17
   11378:	ldrdeq	r4, [r1], -r3
   1137c:	andeq	r4, r1, r2, ror #17
   11380:	strdeq	r4, [r1], -r3
   11384:	andeq	r4, r1, r1, lsl #18
   11388:	andeq	r4, r1, r1, lsl r9
   1138c:	andeq	r4, r1, pc, lsl r9
   11390:	andeq	r4, r1, pc, lsr #18
   11394:	andeq	r4, r1, sp, lsr r9
   11398:	andeq	r4, r1, sp, asr #18
   1139c:	andeq	r4, r1, fp, asr r9
   113a0:	andeq	r4, r1, fp, ror #18
   113a4:	andeq	r4, r1, r9, ror r9
   113a8:	andeq	r4, r1, r9, lsl #19
   113ac:	muleq	r1, r7, r9
   113b0:	andeq	r4, r1, r8, asr #19
   113b4:	ldrdeq	r4, [r1], -r8
   113b8:	andeq	r4, r1, r7, lsr #19
   113bc:			; <UNDEFINED> instruction: 0x000149b6
   113c0:	andeq	r4, r1, r7, asr #19
   113c4:	ldrdeq	r4, [r1], -r7
   113c8:	andeq	r4, r1, r9, ror #19
   113cc:	strdeq	r4, [r1], -r2
   113d0:	strdeq	r4, [r1], -ip
   113d4:	andeq	r4, r1, r6, lsl #20
   113d8:	strdeq	r4, [r1], -fp
   113dc:	andeq	r4, r1, r5, lsl #20
   113e0:	addeq	r0, r0, r0
   113e4:	svcvc	0x007fffff
   113e8:	bl	10d88 <__printf_chk@plt>
   113ec:	mov	r2, #-2147483648	; 0x80000000
   113f0:	mvn	r3, #0
   113f4:	mov	r1, #1
   113f8:	add	r0, sp, #17
   113fc:	strd	r2, [sp]
   11400:	mov	r3, r5
   11404:	mov	r2, #21
   11408:	bl	10d64 <__sprintf_chk@plt>
   1140c:	add	r3, sp, #17
   11410:	ldr	r1, [pc, #-176]	; 11368 <__snprintf_chk@plt+0x544>
   11414:	mov	r0, #1
   11418:	mov	r2, r3
   1141c:	bl	10d88 <__printf_chk@plt>
   11420:	add	r0, sp, #16
   11424:	bl	1190c <__snprintf_chk@plt+0xae8>
   11428:	mov	r2, r0
   1142c:	ldr	r1, [pc, #-200]	; 1136c <__snprintf_chk@plt+0x548>
   11430:	mov	r0, #1
   11434:	bl	10d88 <__printf_chk@plt>
   11438:	mov	r3, r4
   1143c:	mov	r2, #21
   11440:	strd	r8, [sp]
   11444:	mov	r1, #1
   11448:	add	r0, sp, #17
   1144c:	bl	10d64 <__sprintf_chk@plt>
   11450:	add	r3, sp, #17
   11454:	ldr	r1, [pc, #-236]	; 11370 <__snprintf_chk@plt+0x54c>
   11458:	mov	r0, #1
   1145c:	mov	r2, r3
   11460:	bl	10d88 <__printf_chk@plt>
   11464:	add	r0, sp, #16
   11468:	bl	1190c <__snprintf_chk@plt+0xae8>
   1146c:	mov	r2, r0
   11470:	ldr	r1, [pc, #-260]	; 11374 <__snprintf_chk@plt+0x550>
   11474:	mov	r0, #1
   11478:	bl	10d88 <__printf_chk@plt>
   1147c:	mov	r2, #-2147483648	; 0x80000000
   11480:	mvn	r3, #0
   11484:	mov	r1, #1
   11488:	add	r0, sp, #17
   1148c:	strd	r2, [sp]
   11490:	mov	r3, r5
   11494:	mov	r2, #21
   11498:	bl	10d64 <__sprintf_chk@plt>
   1149c:	add	r3, sp, #17
   114a0:	ldr	r1, [pc, #-304]	; 11378 <__snprintf_chk@plt+0x554>
   114a4:	mov	r0, #1
   114a8:	mov	r2, r3
   114ac:	bl	10d88 <__printf_chk@plt>
   114b0:	add	r0, sp, #16
   114b4:	bl	1190c <__snprintf_chk@plt+0xae8>
   114b8:	mov	r2, r0
   114bc:	ldr	r1, [pc, #-328]	; 1137c <__snprintf_chk@plt+0x558>
   114c0:	mov	r0, #1
   114c4:	bl	10d88 <__printf_chk@plt>
   114c8:	mov	r3, r4
   114cc:	mov	r2, #21
   114d0:	strd	r6, [sp]
   114d4:	mov	r1, #1
   114d8:	add	r0, sp, #17
   114dc:	bl	10d64 <__sprintf_chk@plt>
   114e0:	add	r3, sp, #17
   114e4:	ldr	r1, [pc, #-364]	; 11380 <__snprintf_chk@plt+0x55c>
   114e8:	mov	r0, #1
   114ec:	mov	r2, r3
   114f0:	bl	10d88 <__printf_chk@plt>
   114f4:	add	r0, sp, #16
   114f8:	bl	1190c <__snprintf_chk@plt+0xae8>
   114fc:	mov	r2, r0
   11500:	ldr	r1, [pc, #-388]	; 11384 <__snprintf_chk@plt+0x560>
   11504:	mov	r0, #1
   11508:	bl	10d88 <__printf_chk@plt>
   1150c:	mov	r3, r4
   11510:	mov	r2, #21
   11514:	strd	r6, [sp]
   11518:	mov	r1, #1
   1151c:	add	r0, sp, #17
   11520:	bl	10d64 <__sprintf_chk@plt>
   11524:	add	r3, sp, #17
   11528:	ldr	r1, [pc, #-424]	; 11388 <__snprintf_chk@plt+0x564>
   1152c:	mov	r0, #1
   11530:	mov	r2, r3
   11534:	mov	r6, #0
   11538:	bl	10d88 <__printf_chk@plt>
   1153c:	add	r0, sp, #16
   11540:	mov	r7, #-2147483648	; 0x80000000
   11544:	bl	1190c <__snprintf_chk@plt+0xae8>
   11548:	mov	r2, r0
   1154c:	ldr	r1, [pc, #-456]	; 1138c <__snprintf_chk@plt+0x568>
   11550:	mov	r0, #1
   11554:	bl	10d88 <__printf_chk@plt>
   11558:	mov	r3, r4
   1155c:	mov	r2, #21
   11560:	strd	r8, [sp]
   11564:	mov	r1, #1
   11568:	add	r0, sp, #17
   1156c:	bl	10d64 <__sprintf_chk@plt>
   11570:	add	r3, sp, #17
   11574:	ldr	r1, [pc, #-492]	; 11390 <__snprintf_chk@plt+0x56c>
   11578:	mov	r0, #1
   1157c:	mov	r2, r3
   11580:	mvn	r8, #0
   11584:	bl	10d88 <__printf_chk@plt>
   11588:	add	r0, sp, #16
   1158c:	mvn	r9, #-2147483648	; 0x80000000
   11590:	bl	1190c <__snprintf_chk@plt+0xae8>
   11594:	mov	r2, r0
   11598:	ldr	r1, [pc, #-524]	; 11394 <__snprintf_chk@plt+0x570>
   1159c:	mov	r0, #1
   115a0:	bl	10d88 <__printf_chk@plt>
   115a4:	mov	r2, #-2147483648	; 0x80000000
   115a8:	mvn	r3, #0
   115ac:	mov	r1, #1
   115b0:	add	r0, sp, #17
   115b4:	strd	r2, [sp]
   115b8:	mov	r3, r5
   115bc:	mov	r2, #21
   115c0:	bl	10d64 <__sprintf_chk@plt>
   115c4:	add	r2, sp, #17
   115c8:	ldr	r1, [pc, #-568]	; 11398 <__snprintf_chk@plt+0x574>
   115cc:	mov	r0, #1
   115d0:	bl	10d88 <__printf_chk@plt>
   115d4:	add	r0, sp, #16
   115d8:	bl	1190c <__snprintf_chk@plt+0xae8>
   115dc:	mov	r2, r0
   115e0:	ldr	r1, [pc, #-588]	; 1139c <__snprintf_chk@plt+0x578>
   115e4:	mov	r0, #1
   115e8:	bl	10d88 <__printf_chk@plt>
   115ec:	mov	r3, r4
   115f0:	mov	r2, #21
   115f4:	strd	r8, [sp]
   115f8:	mov	r1, #1
   115fc:	add	r0, sp, #17
   11600:	bl	10d64 <__sprintf_chk@plt>
   11604:	add	r2, sp, #17
   11608:	ldr	r1, [pc, #-624]	; 113a0 <__snprintf_chk@plt+0x57c>
   1160c:	mov	r0, #1
   11610:	bl	10d88 <__printf_chk@plt>
   11614:	add	r0, sp, #16
   11618:	bl	1190c <__snprintf_chk@plt+0xae8>
   1161c:	mov	r2, r0
   11620:	ldr	r1, [pc, #-644]	; 113a4 <__snprintf_chk@plt+0x580>
   11624:	mov	r0, #1
   11628:	bl	10d88 <__printf_chk@plt>
   1162c:	mov	r3, r5
   11630:	mov	r2, #21
   11634:	strd	r6, [sp]
   11638:	mov	r1, #1
   1163c:	add	r0, sp, #17
   11640:	bl	10d64 <__sprintf_chk@plt>
   11644:	add	r2, sp, #17
   11648:	ldr	r1, [pc, #-680]	; 113a8 <__snprintf_chk@plt+0x584>
   1164c:	mov	r0, #1
   11650:	bl	10d88 <__printf_chk@plt>
   11654:	add	r0, sp, #16
   11658:	bl	1190c <__snprintf_chk@plt+0xae8>
   1165c:	mov	r2, r0
   11660:	ldr	r1, [pc, #-700]	; 113ac <__snprintf_chk@plt+0x588>
   11664:	mov	r0, #1
   11668:	bl	10d88 <__printf_chk@plt>
   1166c:	mov	r3, r4
   11670:	mov	r2, #21
   11674:	strd	r8, [sp]
   11678:	mov	r1, #1
   1167c:	add	r0, sp, #17
   11680:	bl	10d64 <__sprintf_chk@plt>
   11684:	add	r2, sp, #17
   11688:	ldr	r1, [pc, #-736]	; 113b0 <__snprintf_chk@plt+0x58c>
   1168c:	mov	r0, #1
   11690:	bl	10d88 <__printf_chk@plt>
   11694:	add	r0, sp, #16
   11698:	bl	1190c <__snprintf_chk@plt+0xae8>
   1169c:	mov	r2, r0
   116a0:	ldr	r1, [pc, #-756]	; 113b4 <__snprintf_chk@plt+0x590>
   116a4:	mov	r0, #1
   116a8:	bl	10d88 <__printf_chk@plt>
   116ac:	mov	r3, r5
   116b0:	mov	r2, #21
   116b4:	strd	r6, [sp]
   116b8:	mov	r1, #1
   116bc:	add	r0, sp, #17
   116c0:	bl	10d64 <__sprintf_chk@plt>
   116c4:	add	r2, sp, #17
   116c8:	ldr	r1, [pc, #-792]	; 113b8 <__snprintf_chk@plt+0x594>
   116cc:	mov	r0, #1
   116d0:	bl	10d88 <__printf_chk@plt>
   116d4:	add	r0, sp, #16
   116d8:	bl	1190c <__snprintf_chk@plt+0xae8>
   116dc:	mov	r2, r0
   116e0:	ldr	r1, [pc, #-812]	; 113bc <__snprintf_chk@plt+0x598>
   116e4:	mov	r0, #1
   116e8:	bl	10d88 <__printf_chk@plt>
   116ec:	mvn	r2, #0
   116f0:	mvn	r3, #0
   116f4:	mov	r1, #1
   116f8:	add	r0, sp, #17
   116fc:	strd	r2, [sp]
   11700:	mov	r3, r4
   11704:	mov	r2, #21
   11708:	bl	10d64 <__sprintf_chk@plt>
   1170c:	add	r2, sp, #17
   11710:	ldr	r1, [pc, #-856]	; 113c0 <__snprintf_chk@plt+0x59c>
   11714:	mov	r0, #1
   11718:	bl	10d88 <__printf_chk@plt>
   1171c:	add	r0, sp, #16
   11720:	bl	1190c <__snprintf_chk@plt+0xae8>
   11724:	mov	r2, r0
   11728:	ldr	r1, [pc, #-876]	; 113c4 <__snprintf_chk@plt+0x5a0>
   1172c:	mov	r0, #1
   11730:	bl	10d88 <__printf_chk@plt>
   11734:	ldr	r1, [pc, #-884]	; 113c8 <__snprintf_chk@plt+0x5a4>
   11738:	mov	r0, #1
   1173c:	bl	10d88 <__printf_chk@plt>
   11740:	vldr	s0, [pc, #-872]	; 113e0 <__snprintf_chk@plt+0x5bc>
   11744:	bl	11974 <__snprintf_chk@plt+0xb50>
   11748:	ldr	r1, [pc, #-900]	; 113cc <__snprintf_chk@plt+0x5a8>
   1174c:	mov	r0, #1
   11750:	bl	10d88 <__printf_chk@plt>
   11754:	vldr	s0, [pc, #-888]	; 113e4 <__snprintf_chk@plt+0x5c0>
   11758:	bl	11974 <__snprintf_chk@plt+0xb50>
   1175c:	ldr	r1, [pc, #-916]	; 113d0 <__snprintf_chk@plt+0x5ac>
   11760:	mov	r0, #1
   11764:	bl	10d88 <__printf_chk@plt>
   11768:	mov	r1, #40	; 0x28
   1176c:	vmov.f64	d0, d9
   11770:	mov	r3, sl
   11774:	mov	r2, #1
   11778:	add	r0, sp, r1
   1177c:	bl	11cb8 <__snprintf_chk@plt+0xe94>
   11780:	add	r0, sp, #40	; 0x28
   11784:	bl	10cec <puts@plt>
   11788:	ldr	r1, [pc, #-956]	; 113d4 <__snprintf_chk@plt+0x5b0>
   1178c:	mov	r0, #1
   11790:	bl	10d88 <__printf_chk@plt>
   11794:	mov	r1, #40	; 0x28
   11798:	vmov.f64	d0, d8
   1179c:	mov	r3, sl
   117a0:	mov	r2, #1
   117a4:	add	r0, sp, r1
   117a8:	bl	11cb8 <__snprintf_chk@plt+0xe94>
   117ac:	add	r0, sp, #40	; 0x28
   117b0:	bl	10cec <puts@plt>
   117b4:	ldr	r1, [pc, #-996]	; 113d8 <__snprintf_chk@plt+0x5b4>
   117b8:	mov	r0, #1
   117bc:	bl	10d88 <__printf_chk@plt>
   117c0:	mov	r1, #40	; 0x28
   117c4:	vmov.f64	d0, d9
   117c8:	mov	r3, sl
   117cc:	mov	r2, #1
   117d0:	add	r0, sp, r1
   117d4:	bl	11f18 <__snprintf_chk@plt+0x10f4>
   117d8:	add	r0, sp, #40	; 0x28
   117dc:	bl	10cec <puts@plt>
   117e0:	ldr	r1, [pc, #-1036]	; 113dc <__snprintf_chk@plt+0x5b8>
   117e4:	mov	r0, #1
   117e8:	bl	10d88 <__printf_chk@plt>
   117ec:	mov	r1, #40	; 0x28
   117f0:	vmov.f64	d0, d8
   117f4:	mov	r3, sl
   117f8:	mov	r2, #1
   117fc:	add	r0, sp, r1
   11800:	bl	11f18 <__snprintf_chk@plt+0x10f4>
   11804:	add	r0, sp, #40	; 0x28
   11808:	bl	10cec <puts@plt>
   1180c:	mov	r0, sl
   11810:	add	sp, sp, #80	; 0x50
   11814:	vpop	{d8-d9}
   11818:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1181c:	mov	fp, #0
   11820:	mov	lr, #0
   11824:	pop	{r1}		; (ldr r1, [sp], #4)
   11828:	mov	r2, sp
   1182c:	push	{r2}		; (str r2, [sp, #-4]!)
   11830:	push	{r0}		; (str r0, [sp, #-4]!)
   11834:	ldr	ip, [pc, #16]	; 1184c <__snprintf_chk@plt+0xa28>
   11838:	push	{ip}		; (str ip, [sp, #-4]!)
   1183c:	ldr	r0, [pc, #12]	; 11850 <__snprintf_chk@plt+0xa2c>
   11840:	ldr	r3, [pc, #12]	; 11854 <__snprintf_chk@plt+0xa30>
   11844:	bl	10d04 <__libc_start_main@plt>
   11848:	bl	10e18 <abort@plt>
   1184c:	andeq	r4, r1, r8, lsl #10
   11850:	andeq	r0, r1, r8, asr #28
   11854:	andeq	r4, r1, r8, lsr #9
   11858:	ldr	r3, [pc, #20]	; 11874 <__snprintf_chk@plt+0xa50>
   1185c:	ldr	r2, [pc, #20]	; 11878 <__snprintf_chk@plt+0xa54>
   11860:	add	r3, pc, r3
   11864:	ldr	r2, [r3, r2]
   11868:	cmp	r2, #0
   1186c:	bxeq	lr
   11870:	b	10d1c <__gmon_start__@plt>
   11874:	muleq	r1, r8, r7
   11878:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   1187c:	ldr	r0, [pc, #24]	; 1189c <__snprintf_chk@plt+0xa78>
   11880:	ldr	r3, [pc, #24]	; 118a0 <__snprintf_chk@plt+0xa7c>
   11884:	cmp	r3, r0
   11888:	bxeq	lr
   1188c:	ldr	r3, [pc, #16]	; 118a4 <__snprintf_chk@plt+0xa80>
   11890:	cmp	r3, #0
   11894:	bxeq	lr
   11898:	bx	r3
   1189c:	andeq	r5, r2, r0, lsr #2
   118a0:	andeq	r5, r2, r0, lsr #2
   118a4:	andeq	r0, r0, r0
   118a8:	ldr	r0, [pc, #36]	; 118d4 <__snprintf_chk@plt+0xab0>
   118ac:	ldr	r1, [pc, #36]	; 118d8 <__snprintf_chk@plt+0xab4>
   118b0:	sub	r1, r1, r0
   118b4:	asr	r1, r1, #2
   118b8:	add	r1, r1, r1, lsr #31
   118bc:	asrs	r1, r1, #1
   118c0:	bxeq	lr
   118c4:	ldr	r3, [pc, #16]	; 118dc <__snprintf_chk@plt+0xab8>
   118c8:	cmp	r3, #0
   118cc:	bxeq	lr
   118d0:	bx	r3
   118d4:	andeq	r5, r2, r0, lsr #2
   118d8:	andeq	r5, r2, r0, lsr #2
   118dc:	andeq	r0, r0, r0
   118e0:	push	{r4, lr}
   118e4:	ldr	r4, [pc, #24]	; 11904 <__snprintf_chk@plt+0xae0>
   118e8:	ldrb	r3, [r4]
   118ec:	cmp	r3, #0
   118f0:	popne	{r4, pc}
   118f4:	bl	1187c <__snprintf_chk@plt+0xa58>
   118f8:	mov	r3, #1
   118fc:	strb	r3, [r4]
   11900:	pop	{r4, pc}
   11904:	andeq	r5, r2, ip, lsr r1
   11908:	b	118a8 <__snprintf_chk@plt+0xa84>
   1190c:	push	{r4, r5, r6, lr}
   11910:	ldrb	r5, [r0, #1]
   11914:	sub	r4, r5, #45	; 0x2d
   11918:	clz	r4, r4
   1191c:	lsr	r4, r4, #5
   11920:	add	r4, r4, #1
   11924:	add	r4, r0, r4
   11928:	mov	r0, r4
   1192c:	bl	10d4c <strlen@plt>
   11930:	mov	r3, #48	; 0x30
   11934:	add	r0, r4, r0
   11938:	mov	r2, r3
   1193c:	strb	r3, [r4, #-1]
   11940:	ldrb	r3, [r0, #-1]!
   11944:	cmp	r3, #57	; 0x39
   11948:	beq	1196c <__snprintf_chk@plt+0xb48>
   1194c:	add	r3, r3, #1
   11950:	cmp	r4, r0
   11954:	strb	r3, [r0]
   11958:	movcc	r0, r4
   1195c:	cmp	r5, #45	; 0x2d
   11960:	strbeq	r5, [r0, #-1]
   11964:	subeq	r0, r0, #1
   11968:	pop	{r4, r5, r6, pc}
   1196c:	strb	r2, [r0]
   11970:	b	11940 <__snprintf_chk@plt+0xb1c>
   11974:	push	{lr}		; (str lr, [sp, #-4]!)
   11978:	sub	sp, sp, #36	; 0x24
   1197c:	mov	r3, #0
   11980:	mov	r2, #1
   11984:	mov	r1, #31
   11988:	mov	r0, sp
   1198c:	bl	11de8 <__snprintf_chk@plt+0xfc4>
   11990:	mov	r0, sp
   11994:	bl	10cec <puts@plt>
   11998:	add	sp, sp, #36	; 0x24
   1199c:	pop	{pc}		; (ldr pc, [sp], #4)
   119a0:	subs	r6, r0, #0
   119a4:	push	{r7, lr}
   119a8:	sub	sp, sp, #56	; 0x38
   119ac:	ldr	r4, [pc, #448]	; 11b74 <__snprintf_chk@plt+0xd50>
   119b0:	beq	119e8 <__snprintf_chk@plt+0xbc4>
   119b4:	mov	r2, #5
   119b8:	mov	r0, #0
   119bc:	ldr	r3, [pc, #436]	; 11b78 <__snprintf_chk@plt+0xd54>
   119c0:	ldr	r1, [pc, #436]	; 11b7c <__snprintf_chk@plt+0xd58>
   119c4:	ldr	r5, [r3]
   119c8:	bl	10c68 <dcgettext@plt>
   119cc:	mov	r2, r0
   119d0:	mov	r1, #1
   119d4:	ldr	r3, [r4]
   119d8:	mov	r0, r5
   119dc:	bl	10dac <__fprintf_chk@plt>
   119e0:	mov	r0, r6
   119e4:	bl	10d40 <exit@plt>
   119e8:	mov	r2, #5
   119ec:	ldr	r1, [pc, #396]	; 11b80 <__snprintf_chk@plt+0xd5c>
   119f0:	mov	r5, sp
   119f4:	bl	10c68 <dcgettext@plt>
   119f8:	ldr	r2, [r4]
   119fc:	mov	r1, r0
   11a00:	mov	r0, #1
   11a04:	bl	10d88 <__printf_chk@plt>
   11a08:	ldr	r4, [pc, #372]	; 11b84 <__snprintf_chk@plt+0xd60>
   11a0c:	mov	r2, #5
   11a10:	mov	r0, r6
   11a14:	ldr	r1, [pc, #364]	; 11b88 <__snprintf_chk@plt+0xd64>
   11a18:	bl	10c68 <dcgettext@plt>
   11a1c:	ldr	r7, [pc, #360]	; 11b8c <__snprintf_chk@plt+0xd68>
   11a20:	ldr	r1, [r4]
   11a24:	bl	10bf0 <fputs_unlocked@plt>
   11a28:	mov	r2, #5
   11a2c:	ldr	r1, [pc, #348]	; 11b90 <__snprintf_chk@plt+0xd6c>
   11a30:	mov	r0, r6
   11a34:	bl	10c68 <dcgettext@plt>
   11a38:	ldr	r1, [r4]
   11a3c:	bl	10bf0 <fputs_unlocked@plt>
   11a40:	mov	r2, #5
   11a44:	ldr	r1, [pc, #328]	; 11b94 <__snprintf_chk@plt+0xd70>
   11a48:	mov	r0, r6
   11a4c:	bl	10c68 <dcgettext@plt>
   11a50:	ldr	r1, [r4]
   11a54:	bl	10bf0 <fputs_unlocked@plt>
   11a58:	ldr	lr, [pc, #312]	; 11b98 <__snprintf_chk@plt+0xd74>
   11a5c:	mov	ip, sp
   11a60:	ldm	lr!, {r0, r1, r2, r3}
   11a64:	stmia	ip!, {r0, r1, r2, r3}
   11a68:	ldm	lr!, {r0, r1, r2, r3}
   11a6c:	stmia	ip!, {r0, r1, r2, r3}
   11a70:	ldm	lr!, {r0, r1, r2, r3}
   11a74:	stmia	ip!, {r0, r1, r2, r3}
   11a78:	ldm	lr, {r0, r1}
   11a7c:	stm	ip, {r0, r1}
   11a80:	ldr	r1, [r5]
   11a84:	cmp	r1, #0
   11a88:	bne	11b2c <__snprintf_chk@plt+0xd08>
   11a8c:	ldr	r5, [r5, #4]
   11a90:	mov	r2, #5
   11a94:	mov	r0, #0
   11a98:	ldr	r7, [pc, #236]	; 11b8c <__snprintf_chk@plt+0xd68>
   11a9c:	ldr	r1, [pc, #248]	; 11b9c <__snprintf_chk@plt+0xd78>
   11aa0:	cmp	r5, #0
   11aa4:	moveq	r5, r7
   11aa8:	bl	10c68 <dcgettext@plt>
   11aac:	mov	r1, r0
   11ab0:	ldr	r3, [pc, #232]	; 11ba0 <__snprintf_chk@plt+0xd7c>
   11ab4:	mov	r0, #1
   11ab8:	ldr	r2, [pc, #228]	; 11ba4 <__snprintf_chk@plt+0xd80>
   11abc:	bl	10d88 <__printf_chk@plt>
   11ac0:	mov	r1, #0
   11ac4:	mov	r0, #5
   11ac8:	bl	10dd0 <setlocale@plt>
   11acc:	cmp	r0, #0
   11ad0:	bne	11b44 <__snprintf_chk@plt+0xd20>
   11ad4:	mov	r2, #5
   11ad8:	ldr	r1, [pc, #200]	; 11ba8 <__snprintf_chk@plt+0xd84>
   11adc:	mov	r0, #0
   11ae0:	bl	10c68 <dcgettext@plt>
   11ae4:	mov	r1, r0
   11ae8:	ldr	r3, [pc, #156]	; 11b8c <__snprintf_chk@plt+0xd68>
   11aec:	mov	r0, #1
   11af0:	ldr	r2, [pc, #168]	; 11ba0 <__snprintf_chk@plt+0xd7c>
   11af4:	bl	10d88 <__printf_chk@plt>
   11af8:	mov	r2, #5
   11afc:	ldr	r1, [pc, #168]	; 11bac <__snprintf_chk@plt+0xd88>
   11b00:	mov	r0, #0
   11b04:	bl	10c68 <dcgettext@plt>
   11b08:	ldr	r2, [pc, #160]	; 11bb0 <__snprintf_chk@plt+0xd8c>
   11b0c:	cmp	r5, r7
   11b10:	mov	r1, r0
   11b14:	mov	r0, #1
   11b18:	ldr	r3, [pc, #148]	; 11bb4 <__snprintf_chk@plt+0xd90>
   11b1c:	moveq	r3, r2
   11b20:	mov	r2, r5
   11b24:	bl	10d88 <__printf_chk@plt>
   11b28:	b	119e0 <__snprintf_chk@plt+0xbbc>
   11b2c:	mov	r0, r7
   11b30:	bl	10bfc <strcmp@plt>
   11b34:	cmp	r0, #0
   11b38:	beq	11a8c <__snprintf_chk@plt+0xc68>
   11b3c:	add	r5, r5, #8
   11b40:	b	11a80 <__snprintf_chk@plt+0xc5c>
   11b44:	mov	r2, #3
   11b48:	ldr	r1, [pc, #104]	; 11bb8 <__snprintf_chk@plt+0xd94>
   11b4c:	bl	10e0c <strncmp@plt>
   11b50:	cmp	r0, #0
   11b54:	beq	11ad4 <__snprintf_chk@plt+0xcb0>
   11b58:	mov	r2, #5
   11b5c:	ldr	r1, [pc, #88]	; 11bbc <__snprintf_chk@plt+0xd98>
   11b60:	mov	r0, #0
   11b64:	bl	10c68 <dcgettext@plt>
   11b68:	ldr	r1, [r4]
   11b6c:	bl	10bf0 <fputs_unlocked@plt>
   11b70:	b	11ad4 <__snprintf_chk@plt+0xcb0>
   11b74:	andeq	r5, r2, r8, asr #2
   11b78:	andeq	r5, r2, r0, lsr r1
   11b7c:	andeq	r4, r1, r2, ror r5
   11b80:	muleq	r1, r9, r5
   11b84:	andeq	r5, r2, r4, lsr r1
   11b88:	andeq	r4, r1, r4, lsr #11
   11b8c:	andeq	r4, r1, r8, ror #10
   11b90:	andeq	r4, r1, sp, ror #11
   11b94:	andeq	r4, r1, sl, lsl r6
   11b98:	andeq	r4, r1, r0, lsr r5
   11b9c:	andeq	r4, r1, r0, asr r6
   11ba0:	andeq	r4, r1, r7, ror #12
   11ba4:	andeq	r4, r1, pc, lsl #13
   11ba8:	andeq	r4, r1, r8, ror #13
   11bac:	andeq	r4, r1, r3, lsl #14
   11bb0:	andeq	r4, r1, fp, lsr #20
   11bb4:	andeq	r4, r1, ip, ror #11
   11bb8:	muleq	r1, sp, r6
   11bbc:	andeq	r4, r1, r1, lsr #13
   11bc0:	ldr	r3, [pc, #4]	; 11bcc <__snprintf_chk@plt+0xda8>
   11bc4:	str	r0, [r3]
   11bc8:	bx	lr
   11bcc:	andeq	r5, r2, r0, asr #2
   11bd0:	ldr	r3, [pc, #4]	; 11bdc <__snprintf_chk@plt+0xdb8>
   11bd4:	strb	r0, [r3, #4]
   11bd8:	bx	lr
   11bdc:	andeq	r5, r2, r0, asr #2
   11be0:	ldr	r3, [pc, #176]	; 11c98 <__snprintf_chk@plt+0xe74>
   11be4:	push	{r0, r1, r4, r5, r6, lr}
   11be8:	ldr	r0, [r3]
   11bec:	bl	140a0 <__snprintf_chk@plt+0x327c>
   11bf0:	cmp	r0, #0
   11bf4:	beq	11c7c <__snprintf_chk@plt+0xe58>
   11bf8:	ldr	r4, [pc, #156]	; 11c9c <__snprintf_chk@plt+0xe78>
   11bfc:	bl	10d58 <__errno_location@plt>
   11c00:	mov	r5, r0
   11c04:	ldrb	r6, [r4, #4]
   11c08:	cmp	r6, #0
   11c0c:	beq	11c1c <__snprintf_chk@plt+0xdf8>
   11c10:	ldr	r3, [r0]
   11c14:	cmp	r3, #32
   11c18:	beq	11c7c <__snprintf_chk@plt+0xe58>
   11c1c:	mov	r2, #5
   11c20:	ldr	r1, [pc, #120]	; 11ca0 <__snprintf_chk@plt+0xe7c>
   11c24:	mov	r0, #0
   11c28:	bl	10c68 <dcgettext@plt>
   11c2c:	mov	r6, r0
   11c30:	ldr	r0, [r4]
   11c34:	cmp	r0, #0
   11c38:	beq	11c68 <__snprintf_chk@plt+0xe44>
   11c3c:	ldr	r4, [r5]
   11c40:	bl	13680 <__snprintf_chk@plt+0x285c>
   11c44:	mov	r3, r0
   11c48:	ldr	r2, [pc, #84]	; 11ca4 <__snprintf_chk@plt+0xe80>
   11c4c:	mov	r0, #0
   11c50:	str	r6, [sp]
   11c54:	mov	r1, r4
   11c58:	bl	10cd4 <error@plt>
   11c5c:	ldr	r3, [pc, #68]	; 11ca8 <__snprintf_chk@plt+0xe84>
   11c60:	ldr	r0, [r3]
   11c64:	bl	10c20 <_exit@plt>
   11c68:	mov	r3, r6
   11c6c:	ldr	r2, [pc, #56]	; 11cac <__snprintf_chk@plt+0xe88>
   11c70:	ldr	r1, [r5]
   11c74:	bl	10cd4 <error@plt>
   11c78:	b	11c5c <__snprintf_chk@plt+0xe38>
   11c7c:	ldr	r3, [pc, #44]	; 11cb0 <__snprintf_chk@plt+0xe8c>
   11c80:	ldr	r0, [r3]
   11c84:	bl	140a0 <__snprintf_chk@plt+0x327c>
   11c88:	cmp	r0, #0
   11c8c:	bne	11c5c <__snprintf_chk@plt+0xe38>
   11c90:	add	sp, sp, #8
   11c94:	pop	{r4, r5, r6, pc}
   11c98:	andeq	r5, r2, r4, lsr r1
   11c9c:	andeq	r5, r2, r0, asr #2
   11ca0:	andeq	r4, r1, lr, ror #20
   11ca4:	andeq	r4, r1, sl, ror sl
   11ca8:	ldrdeq	r5, [r2], -ip
   11cac:	andeq	r4, r1, lr, ror sl
   11cb0:	andeq	r5, r2, r0, lsr r1
   11cb4:	andeq	r0, r0, r0
   11cb8:	vcmpe.f64	d0, #0.0
   11cbc:	vldr	d6, [pc, #284]	; 11de0 <__snprintf_chk@plt+0xfbc>
   11cc0:	mov	ip, #43	; 0x2b
   11cc4:	push	{r4, r5, r6, r7, r8, r9, lr}
   11cc8:	mov	r8, r3
   11ccc:	movw	r3, #11557	; 0x2d25
   11cd0:	mov	r7, r1
   11cd4:	mov	r6, r0
   11cd8:	vpush	{d8}
   11cdc:	sub	sp, sp, #44	; 0x2c
   11ce0:	vmov.f64	d8, d0
   11ce4:	add	r1, sp, #29
   11ce8:	add	r9, sp, #28
   11cec:	strh	r3, [sp, #28]
   11cf0:	and	r3, r2, #1
   11cf4:	vmrs	APSR_nzcv, fpscr
   11cf8:	add	r0, r1, r3
   11cfc:	strb	ip, [r1, r3]
   11d00:	ubfx	r3, r2, #1, #1
   11d04:	mov	ip, #32
   11d08:	add	r1, r0, r3
   11d0c:	vnegmi.f64	d7, d0
   11d10:	vmovpl.f64	d7, d0
   11d14:	strb	ip, [r0, r3]
   11d18:	ubfx	r3, r2, #2, #1
   11d1c:	mov	r0, #48	; 0x30
   11d20:	tst	r2, #16
   11d24:	add	ip, r1, r3
   11d28:	vcmpe.f64	d7, d6
   11d2c:	strb	r0, [r1, r3]
   11d30:	ubfx	r0, r2, #3, #1
   11d34:	movne	r2, #71	; 0x47
   11d38:	moveq	r2, #103	; 0x67
   11d3c:	add	r3, ip, r0
   11d40:	mov	r1, #42	; 0x2a
   11d44:	strb	r1, [ip, r0]
   11d48:	mov	r0, #46	; 0x2e
   11d4c:	strb	r2, [r3, #3]
   11d50:	mov	r2, #0
   11d54:	vmrs	APSR_nzcv, fpscr
   11d58:	strb	r0, [r3, #1]
   11d5c:	strb	r1, [r3, #2]
   11d60:	strb	r2, [r3, #4]
   11d64:	movmi	r5, #1
   11d68:	movpl	r5, #15
   11d6c:	mov	r1, r7
   11d70:	mvn	r3, #0
   11d74:	str	r9, [sp]
   11d78:	mov	r2, #1
   11d7c:	mov	r0, r6
   11d80:	str	r8, [sp, #4]
   11d84:	str	r5, [sp, #8]
   11d88:	vstr	d8, [sp, #16]
   11d8c:	bl	10e24 <__snprintf_chk@plt>
   11d90:	cmp	r5, #16
   11d94:	mov	r4, r0
   11d98:	movle	r1, #0
   11d9c:	movgt	r1, #1
   11da0:	orrs	r1, r1, r0, lsr #31
   11da4:	bne	11dcc <__snprintf_chk@plt+0xfa8>
   11da8:	cmp	r0, r7
   11dac:	bcs	11dc4 <__snprintf_chk@plt+0xfa0>
   11db0:	mov	r0, r6
   11db4:	bl	10d94 <strtod@plt>
   11db8:	vcmp.f64	d0, d8
   11dbc:	vmrs	APSR_nzcv, fpscr
   11dc0:	beq	11dcc <__snprintf_chk@plt+0xfa8>
   11dc4:	add	r5, r5, #1
   11dc8:	b	11d6c <__snprintf_chk@plt+0xf48>
   11dcc:	mov	r0, r4
   11dd0:	add	sp, sp, #44	; 0x2c
   11dd4:	vpop	{d8}
   11dd8:	pop	{r4, r5, r6, r7, r8, r9, pc}
   11ddc:	nop	{0}
   11de0:	andeq	r0, r0, r0
   11de4:	andseq	r0, r0, r0
   11de8:	vcmpe.f32	s0, #0.0
   11dec:	vldr	s14, [pc, #284]	; 11f10 <__snprintf_chk@plt+0x10ec>
   11df0:	mov	ip, #43	; 0x2b
   11df4:	push	{r4, r5, r6, r7, r8, r9, lr}
   11df8:	mov	r8, r3
   11dfc:	movw	r3, #11557	; 0x2d25
   11e00:	mov	r7, r1
   11e04:	mov	r6, r0
   11e08:	vpush	{d8-d9}
   11e0c:	sub	sp, sp, #44	; 0x2c
   11e10:	vcvt.f64.f32	d9, s0
   11e14:	add	r1, sp, #29
   11e18:	vmov.f32	s16, s0
   11e1c:	add	r9, sp, #28
   11e20:	strh	r3, [sp, #28]
   11e24:	and	r3, r2, #1
   11e28:	vmrs	APSR_nzcv, fpscr
   11e2c:	add	r0, r1, r3
   11e30:	strb	ip, [r1, r3]
   11e34:	ubfx	r3, r2, #1, #1
   11e38:	mov	ip, #32
   11e3c:	add	r1, r0, r3
   11e40:	vnegmi.f32	s15, s0
   11e44:	vmovpl.f32	s15, s0
   11e48:	strb	ip, [r0, r3]
   11e4c:	ubfx	r3, r2, #2, #1
   11e50:	mov	r0, #48	; 0x30
   11e54:	tst	r2, #16
   11e58:	add	ip, r1, r3
   11e5c:	vcmpe.f32	s15, s14
   11e60:	strb	r0, [r1, r3]
   11e64:	ubfx	r0, r2, #3, #1
   11e68:	movne	r2, #71	; 0x47
   11e6c:	moveq	r2, #103	; 0x67
   11e70:	add	r3, ip, r0
   11e74:	mov	r1, #42	; 0x2a
   11e78:	strb	r1, [ip, r0]
   11e7c:	mov	r0, #46	; 0x2e
   11e80:	strb	r2, [r3, #3]
   11e84:	mov	r2, #0
   11e88:	vmrs	APSR_nzcv, fpscr
   11e8c:	strb	r0, [r3, #1]
   11e90:	strb	r1, [r3, #2]
   11e94:	strb	r2, [r3, #4]
   11e98:	movmi	r5, #1
   11e9c:	movpl	r5, #6
   11ea0:	mov	r1, r7
   11ea4:	mvn	r3, #0
   11ea8:	str	r9, [sp]
   11eac:	mov	r2, #1
   11eb0:	mov	r0, r6
   11eb4:	str	r8, [sp, #4]
   11eb8:	str	r5, [sp, #8]
   11ebc:	vstr	d9, [sp, #16]
   11ec0:	bl	10e24 <__snprintf_chk@plt>
   11ec4:	cmp	r5, #8
   11ec8:	mov	r4, r0
   11ecc:	movle	r1, #0
   11ed0:	movgt	r1, #1
   11ed4:	orrs	r1, r1, r0, lsr #31
   11ed8:	bne	11f00 <__snprintf_chk@plt+0x10dc>
   11edc:	cmp	r0, r7
   11ee0:	bcs	11ef8 <__snprintf_chk@plt+0x10d4>
   11ee4:	mov	r0, r6
   11ee8:	bl	10ce0 <strtof@plt>
   11eec:	vcmp.f32	s0, s16
   11ef0:	vmrs	APSR_nzcv, fpscr
   11ef4:	beq	11f00 <__snprintf_chk@plt+0x10dc>
   11ef8:	add	r5, r5, #1
   11efc:	b	11ea0 <__snprintf_chk@plt+0x107c>
   11f00:	mov	r0, r4
   11f04:	add	sp, sp, #44	; 0x2c
   11f08:	vpop	{d8-d9}
   11f0c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   11f10:	addeq	r0, r0, r0
   11f14:	andeq	r0, r0, r0
   11f18:	vcmpe.f64	d0, #0.0
   11f1c:	vldr	d6, [pc, #292]	; 12048 <__snprintf_chk@plt+0x1224>
   11f20:	mov	ip, #43	; 0x2b
   11f24:	push	{r4, r5, r6, r7, r8, r9, lr}
   11f28:	mov	r8, r3
   11f2c:	movw	r3, #11557	; 0x2d25
   11f30:	mov	r7, r1
   11f34:	mov	r6, r0
   11f38:	vpush	{d8}
   11f3c:	sub	sp, sp, #44	; 0x2c
   11f40:	vmov.f64	d8, d0
   11f44:	add	r1, sp, #29
   11f48:	add	r9, sp, #28
   11f4c:	strh	r3, [sp, #28]
   11f50:	and	r3, r2, #1
   11f54:	vmrs	APSR_nzcv, fpscr
   11f58:	add	r0, r1, r3
   11f5c:	strb	ip, [r1, r3]
   11f60:	ubfx	r3, r2, #1, #1
   11f64:	mov	ip, #32
   11f68:	add	r1, r0, r3
   11f6c:	vnegmi.f64	d7, d0
   11f70:	vmovpl.f64	d7, d0
   11f74:	strb	ip, [r0, r3]
   11f78:	ubfx	r3, r2, #2, #1
   11f7c:	mov	r0, #48	; 0x30
   11f80:	tst	r2, #16
   11f84:	add	ip, r1, r3
   11f88:	vcmpe.f64	d7, d6
   11f8c:	strb	r0, [r1, r3]
   11f90:	ubfx	r0, r2, #3, #1
   11f94:	movne	r2, #71	; 0x47
   11f98:	moveq	r2, #103	; 0x67
   11f9c:	add	r3, ip, r0
   11fa0:	mov	r1, #42	; 0x2a
   11fa4:	strb	r1, [ip, r0]
   11fa8:	mov	r0, #46	; 0x2e
   11fac:	strb	r1, [r3, #2]
   11fb0:	mov	r1, #76	; 0x4c
   11fb4:	vmrs	APSR_nzcv, fpscr
   11fb8:	strb	r2, [r3, #4]
   11fbc:	mov	r2, #0
   11fc0:	strb	r0, [r3, #1]
   11fc4:	strb	r1, [r3, #3]
   11fc8:	strb	r2, [r3, #5]
   11fcc:	movmi	r5, #1
   11fd0:	movpl	r5, #15
   11fd4:	mov	r1, r7
   11fd8:	mvn	r3, #0
   11fdc:	str	r9, [sp]
   11fe0:	mov	r2, #1
   11fe4:	mov	r0, r6
   11fe8:	str	r8, [sp, #4]
   11fec:	str	r5, [sp, #8]
   11ff0:	vstr	d8, [sp, #16]
   11ff4:	bl	10e24 <__snprintf_chk@plt>
   11ff8:	cmp	r5, #16
   11ffc:	mov	r4, r0
   12000:	movle	r1, #0
   12004:	movgt	r1, #1
   12008:	orrs	r1, r1, r0, lsr #31
   1200c:	bne	12034 <__snprintf_chk@plt+0x1210>
   12010:	cmp	r0, r7
   12014:	bcs	1202c <__snprintf_chk@plt+0x1208>
   12018:	mov	r0, r6
   1201c:	bl	10c44 <strtold@plt>
   12020:	vcmp.f64	d0, d8
   12024:	vmrs	APSR_nzcv, fpscr
   12028:	beq	12034 <__snprintf_chk@plt+0x1210>
   1202c:	add	r5, r5, #1
   12030:	b	11fd4 <__snprintf_chk@plt+0x11b0>
   12034:	mov	r0, r4
   12038:	add	sp, sp, #44	; 0x2c
   1203c:	vpop	{d8}
   12040:	pop	{r4, r5, r6, r7, r8, r9, pc}
   12044:	nop	{0}
   12048:	andeq	r0, r0, r0
   1204c:	andseq	r0, r0, r0
   12050:	ldr	ip, [pc, #156]	; 120f4 <__snprintf_chk@plt+0x12d0>
   12054:	cmp	r0, #2
   12058:	push	{r0, r1, r2, r3, r4, r5, r6, r7, r8, lr}
   1205c:	mov	r6, #0
   12060:	mov	r8, ip
   12064:	ldr	r7, [ip]
   12068:	str	r6, [ip]
   1206c:	bne	120a0 <__snprintf_chk@plt+0x127c>
   12070:	mov	r5, r3
   12074:	mov	r4, r2
   12078:	ldr	r3, [pc, #120]	; 120f8 <__snprintf_chk@plt+0x12d4>
   1207c:	str	r6, [sp]
   12080:	ldr	r2, [pc, #116]	; 120fc <__snprintf_chk@plt+0x12d8>
   12084:	bl	10d28 <getopt_long@plt>
   12088:	cmn	r0, #1
   1208c:	beq	120a0 <__snprintf_chk@plt+0x127c>
   12090:	cmp	r0, #104	; 0x68
   12094:	beq	120b8 <__snprintf_chk@plt+0x1294>
   12098:	cmp	r0, #118	; 0x76
   1209c:	beq	120c8 <__snprintf_chk@plt+0x12a4>
   120a0:	ldr	r3, [pc, #88]	; 12100 <__snprintf_chk@plt+0x12dc>
   120a4:	mov	r2, #0
   120a8:	str	r7, [r8]
   120ac:	str	r2, [r3]
   120b0:	add	sp, sp, #16
   120b4:	pop	{r4, r5, r6, r7, r8, pc}
   120b8:	mov	r0, r6
   120bc:	ldr	r3, [sp, #44]	; 0x2c
   120c0:	blx	r3
   120c4:	b	120a0 <__snprintf_chk@plt+0x127c>
   120c8:	ldr	r0, [pc, #52]	; 12104 <__snprintf_chk@plt+0x12e0>
   120cc:	add	r3, sp, #48	; 0x30
   120d0:	mov	r2, r5
   120d4:	mov	r1, r4
   120d8:	str	r3, [sp]
   120dc:	str	r3, [sp, #12]
   120e0:	ldr	r3, [sp, #40]	; 0x28
   120e4:	ldr	r0, [r0]
   120e8:	bl	13bd8 <__snprintf_chk@plt+0x2db4>
   120ec:	mov	r0, r6
   120f0:	bl	10d40 <exit@plt>
   120f4:	andeq	r5, r2, r8, lsr r1
   120f8:	andeq	r4, r1, r4, lsl #21
   120fc:			; <UNDEFINED> instruction: 0x00014ab4
   12100:	andeq	r5, r2, r8, lsr #2
   12104:	andeq	r5, r2, r4, lsr r1
   12108:	push	{r4, r5, r6, r7, r8, r9, lr}
   1210c:	sub	sp, sp, #20
   12110:	mov	r8, r3
   12114:	mov	r4, #0
   12118:	mov	r7, r2
   1211c:	mov	r2, #1
   12120:	ldrb	lr, [sp, #52]	; 0x34
   12124:	ldr	r3, [pc, #140]	; 121b8 <__snprintf_chk@plt+0x1394>
   12128:	ldr	ip, [pc, #140]	; 121bc <__snprintf_chk@plt+0x1398>
   1212c:	cmp	lr, r4
   12130:	ldr	r6, [sp, #56]	; 0x38
   12134:	mov	r5, r3
   12138:	ldr	r9, [r3]
   1213c:	str	r2, [r3]
   12140:	ldr	r2, [pc, #120]	; 121c0 <__snprintf_chk@plt+0x139c>
   12144:	moveq	r2, ip
   12148:	str	r4, [sp]
   1214c:	ldr	r3, [pc, #112]	; 121c4 <__snprintf_chk@plt+0x13a0>
   12150:	bl	10d28 <getopt_long@plt>
   12154:	cmn	r0, #1
   12158:	beq	12180 <__snprintf_chk@plt+0x135c>
   1215c:	cmp	r0, #104	; 0x68
   12160:	beq	12178 <__snprintf_chk@plt+0x1354>
   12164:	cmp	r0, #118	; 0x76
   12168:	beq	1218c <__snprintf_chk@plt+0x1368>
   1216c:	ldr	r3, [pc, #84]	; 121c8 <__snprintf_chk@plt+0x13a4>
   12170:	ldr	r0, [r3]
   12174:	b	1217c <__snprintf_chk@plt+0x1358>
   12178:	mov	r0, r4
   1217c:	blx	r6
   12180:	str	r9, [r5]
   12184:	add	sp, sp, #20
   12188:	pop	{r4, r5, r6, r7, r8, r9, pc}
   1218c:	ldr	r0, [pc, #56]	; 121cc <__snprintf_chk@plt+0x13a8>
   12190:	add	r3, sp, #60	; 0x3c
   12194:	mov	r2, r8
   12198:	mov	r1, r7
   1219c:	str	r3, [sp]
   121a0:	str	r3, [sp, #12]
   121a4:	ldr	r3, [sp, #48]	; 0x30
   121a8:	ldr	r0, [r0]
   121ac:	bl	13bd8 <__snprintf_chk@plt+0x2db4>
   121b0:	mov	r0, r4
   121b4:	bl	10d40 <exit@plt>
   121b8:	andeq	r5, r2, r8, lsr r1
   121bc:			; <UNDEFINED> instruction: 0x00014ab4
   121c0:	andeq	r4, r1, ip, ror #11
   121c4:	andeq	r4, r1, r4, lsl #21
   121c8:	ldrdeq	r5, [r2], -ip
   121cc:	andeq	r5, r2, r4, lsr r1
   121d0:	push	{r4, r5, r6, lr}
   121d4:	subs	r4, r0, #0
   121d8:	bne	121f0 <__snprintf_chk@plt+0x13cc>
   121dc:	ldr	r3, [pc, #124]	; 12260 <__snprintf_chk@plt+0x143c>
   121e0:	ldr	r0, [pc, #124]	; 12264 <__snprintf_chk@plt+0x1440>
   121e4:	ldr	r1, [r3]
   121e8:	bl	10e00 <fputs@plt>
   121ec:	bl	10e18 <abort@plt>
   121f0:	mov	r1, #47	; 0x2f
   121f4:	bl	10ddc <strrchr@plt>
   121f8:	subs	r6, r0, #0
   121fc:	beq	1224c <__snprintf_chk@plt+0x1428>
   12200:	add	r5, r6, #1
   12204:	sub	r3, r5, r4
   12208:	cmp	r3, #6
   1220c:	ble	1224c <__snprintf_chk@plt+0x1428>
   12210:	mov	r2, #7
   12214:	ldr	r1, [pc, #76]	; 12268 <__snprintf_chk@plt+0x1444>
   12218:	sub	r0, r6, #6
   1221c:	bl	10e0c <strncmp@plt>
   12220:	cmp	r0, #0
   12224:	bne	1224c <__snprintf_chk@plt+0x1428>
   12228:	mov	r2, #3
   1222c:	ldr	r1, [pc, #56]	; 1226c <__snprintf_chk@plt+0x1448>
   12230:	mov	r0, r5
   12234:	bl	10e0c <strncmp@plt>
   12238:	cmp	r0, #0
   1223c:	ldreq	r3, [pc, #44]	; 12270 <__snprintf_chk@plt+0x144c>
   12240:	addeq	r4, r6, #4
   12244:	movne	r4, r5
   12248:	streq	r4, [r3]
   1224c:	ldr	r3, [pc, #32]	; 12274 <__snprintf_chk@plt+0x1450>
   12250:	str	r4, [r3]
   12254:	ldr	r3, [pc, #28]	; 12278 <__snprintf_chk@plt+0x1454>
   12258:	str	r4, [r3]
   1225c:	pop	{r4, r5, r6, pc}
   12260:	andeq	r5, r2, r0, lsr r1
   12264:	andeq	r4, r1, r3, asr #21
   12268:	strdeq	r4, [r1], -fp
   1226c:	andeq	r4, r1, r3, lsl #22
   12270:	andeq	r5, r2, r0, lsr #2
   12274:	andeq	r5, r2, r8, asr #2
   12278:	andeq	r5, r2, r4, lsr #2
   1227c:	push	{r4, lr}
   12280:	mov	r2, #48	; 0x30
   12284:	mov	r4, r1
   12288:	mov	r1, #0
   1228c:	bl	10d7c <memset@plt>
   12290:	cmp	r4, #10
   12294:	bne	1229c <__snprintf_chk@plt+0x1478>
   12298:	bl	10e18 <abort@plt>
   1229c:	str	r4, [r0]
   122a0:	pop	{r4, pc}
   122a4:	push	{r4, r5, r6, lr}
   122a8:	mov	r2, #5
   122ac:	mov	r6, r0
   122b0:	mov	r5, r1
   122b4:	mov	r1, r0
   122b8:	mov	r0, #0
   122bc:	bl	10c68 <dcgettext@plt>
   122c0:	cmp	r6, r0
   122c4:	mov	r4, r0
   122c8:	bne	12338 <__snprintf_chk@plt+0x1514>
   122cc:	bl	14318 <__snprintf_chk@plt+0x34f4>
   122d0:	ldrb	r3, [r0]
   122d4:	bic	r3, r3, #32
   122d8:	cmp	r3, #85	; 0x55
   122dc:	bne	12340 <__snprintf_chk@plt+0x151c>
   122e0:	ldrb	r3, [r0, #1]
   122e4:	bic	r3, r3, #32
   122e8:	cmp	r3, #84	; 0x54
   122ec:	bne	123b0 <__snprintf_chk@plt+0x158c>
   122f0:	ldrb	r3, [r0, #2]
   122f4:	bic	r3, r3, #32
   122f8:	cmp	r3, #70	; 0x46
   122fc:	bne	123b0 <__snprintf_chk@plt+0x158c>
   12300:	ldrb	r3, [r0, #3]
   12304:	cmp	r3, #45	; 0x2d
   12308:	bne	123b0 <__snprintf_chk@plt+0x158c>
   1230c:	ldrb	r3, [r0, #4]
   12310:	cmp	r3, #56	; 0x38
   12314:	bne	123b0 <__snprintf_chk@plt+0x158c>
   12318:	ldrb	r3, [r0, #5]
   1231c:	cmp	r3, #0
   12320:	bne	123b0 <__snprintf_chk@plt+0x158c>
   12324:	ldrb	r2, [r4]
   12328:	ldr	r3, [pc, #144]	; 123c0 <__snprintf_chk@plt+0x159c>
   1232c:	ldr	r4, [pc, #144]	; 123c4 <__snprintf_chk@plt+0x15a0>
   12330:	cmp	r2, #96	; 0x60
   12334:	movne	r4, r3
   12338:	mov	r0, r4
   1233c:	pop	{r4, r5, r6, pc}
   12340:	cmp	r3, #71	; 0x47
   12344:	bne	123b0 <__snprintf_chk@plt+0x158c>
   12348:	ldrb	r3, [r0, #1]
   1234c:	bic	r3, r3, #32
   12350:	cmp	r3, #66	; 0x42
   12354:	bne	123b0 <__snprintf_chk@plt+0x158c>
   12358:	ldrb	r3, [r0, #2]
   1235c:	cmp	r3, #49	; 0x31
   12360:	bne	123b0 <__snprintf_chk@plt+0x158c>
   12364:	ldrb	r3, [r0, #3]
   12368:	cmp	r3, #56	; 0x38
   1236c:	bne	123b0 <__snprintf_chk@plt+0x158c>
   12370:	ldrb	r3, [r0, #4]
   12374:	cmp	r3, #48	; 0x30
   12378:	bne	123b0 <__snprintf_chk@plt+0x158c>
   1237c:	ldrb	r3, [r0, #5]
   12380:	cmp	r3, #51	; 0x33
   12384:	bne	123b0 <__snprintf_chk@plt+0x158c>
   12388:	ldrb	r3, [r0, #6]
   1238c:	cmp	r3, #48	; 0x30
   12390:	bne	123b0 <__snprintf_chk@plt+0x158c>
   12394:	ldrb	r3, [r0, #7]
   12398:	cmp	r3, #0
   1239c:	bne	123b0 <__snprintf_chk@plt+0x158c>
   123a0:	ldrb	r2, [r4]
   123a4:	ldr	r3, [pc, #28]	; 123c8 <__snprintf_chk@plt+0x15a4>
   123a8:	ldr	r4, [pc, #28]	; 123cc <__snprintf_chk@plt+0x15a8>
   123ac:	b	12330 <__snprintf_chk@plt+0x150c>
   123b0:	ldr	r4, [pc, #24]	; 123d0 <__snprintf_chk@plt+0x15ac>
   123b4:	cmp	r5, #9
   123b8:	ldr	r3, [pc, #20]	; 123d4 <__snprintf_chk@plt+0x15b0>
   123bc:	b	12334 <__snprintf_chk@plt+0x1510>
   123c0:	andeq	r4, r1, lr, asr fp
   123c4:	andeq	r4, r1, r9, ror #22
   123c8:	andeq	r4, r1, r2, ror #22
   123cc:	andeq	r4, r1, r5, ror #22
   123d0:	andeq	r4, r1, ip, asr fp
   123d4:	andeq	r4, r1, sp, ror #22
   123d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   123dc:	sub	sp, sp, #108	; 0x6c
   123e0:	mov	r8, r0
   123e4:	mov	r5, r1
   123e8:	mov	r6, #0
   123ec:	str	r3, [sp, #40]	; 0x28
   123f0:	str	r2, [sp, #48]	; 0x30
   123f4:	ldr	sl, [sp, #144]	; 0x90
   123f8:	bl	10ca4 <__ctype_get_mb_cur_max@plt>
   123fc:	ldr	r3, [sp, #148]	; 0x94
   12400:	str	r6, [sp, #24]
   12404:	str	r6, [sp, #32]
   12408:	str	r6, [sp, #44]	; 0x2c
   1240c:	str	r6, [sp, #52]	; 0x34
   12410:	ubfx	r7, r3, #1, #1
   12414:	mov	r3, #1
   12418:	str	r6, [sp, #60]	; 0x3c
   1241c:	str	r3, [sp, #72]	; 0x48
   12420:	str	r0, [sp, #76]	; 0x4c
   12424:	cmp	sl, #10
   12428:	ldrls	pc, [pc, sl, lsl #2]
   1242c:	b	12670 <__snprintf_chk@plt+0x184c>
   12430:	andeq	r2, r1, ip, asr r4
   12434:	andeq	r2, r1, r8, lsl #13
   12438:	andeq	r2, r1, ip, lsl #12
   1243c:	andeq	r2, r1, r4, lsr #12
   12440:	strdeq	r2, [r1], -r4
   12444:	andeq	r2, r1, ip, asr #10
   12448:	andeq	r2, r1, ip, lsr #10
   1244c:	andeq	r2, r1, r4, ror r6
   12450:	andeq	r2, r1, ip, ror r5
   12454:	andeq	r2, r1, ip, ror r5
   12458:	andeq	r2, r1, ip, ror r5
   1245c:	mov	r4, sl
   12460:	mov	r7, #0
   12464:	mov	r9, r5
   12468:	mov	r3, #0
   1246c:	str	r6, [sp, #68]	; 0x44
   12470:	str	r3, [sp, #28]
   12474:	ldr	r3, [sp, #40]	; 0x28
   12478:	cmn	r3, #1
   1247c:	bne	1301c <__snprintf_chk@plt+0x21f8>
   12480:	ldr	r2, [sp, #28]
   12484:	ldr	r3, [sp, #48]	; 0x30
   12488:	ldrb	r3, [r3, r2]
   1248c:	adds	r3, r3, #0
   12490:	movne	r3, #1
   12494:	str	r3, [sp, #36]	; 0x24
   12498:	ldr	r3, [sp, #36]	; 0x24
   1249c:	cmp	r3, #0
   124a0:	bne	126ac <__snprintf_chk@plt+0x1888>
   124a4:	sub	r3, sl, #2
   124a8:	cmp	r4, #0
   124ac:	clz	r3, r3
   124b0:	movne	r2, #0
   124b4:	lsr	r3, r3, #5
   124b8:	andeq	r2, r3, r7
   124bc:	cmp	r2, #0
   124c0:	bne	12870 <__snprintf_chk@plt+0x1a4c>
   124c4:	eor	r7, r7, #1
   124c8:	ands	r3, r3, r7
   124cc:	beq	13094 <__snprintf_chk@plt+0x2270>
   124d0:	ldr	r2, [sp, #68]	; 0x44
   124d4:	cmp	r2, #0
   124d8:	beq	1305c <__snprintf_chk@plt+0x2238>
   124dc:	ldr	r3, [sp, #72]	; 0x48
   124e0:	cmp	r3, #0
   124e4:	beq	13030 <__snprintf_chk@plt+0x220c>
   124e8:	ldr	r2, [sp, #48]	; 0x30
   124ec:	ldr	r3, [sp, #160]	; 0xa0
   124f0:	ldr	r1, [sp, #60]	; 0x3c
   124f4:	str	r3, [sp, #16]
   124f8:	ldr	r3, [sp, #156]	; 0x9c
   124fc:	str	r3, [sp, #12]
   12500:	ldr	r3, [sp, #152]	; 0x98
   12504:	str	r3, [sp, #8]
   12508:	ldr	r3, [sp, #148]	; 0x94
   1250c:	str	r3, [sp, #4]
   12510:	mov	r3, #5
   12514:	str	r3, [sp]
   12518:	ldr	r3, [sp, #40]	; 0x28
   1251c:	mov	r0, r8
   12520:	bl	123d8 <__snprintf_chk@plt+0x15b4>
   12524:	mov	r4, r0
   12528:	b	13088 <__snprintf_chk@plt+0x2264>
   1252c:	ldr	r3, [pc, #2948]	; 130b8 <__snprintf_chk@plt+0x2294>
   12530:	mov	r7, #1
   12534:	mov	r4, #0
   12538:	mov	sl, #5
   1253c:	str	r7, [sp, #24]
   12540:	str	r7, [sp, #32]
   12544:	str	r3, [sp, #44]	; 0x2c
   12548:	b	12464 <__snprintf_chk@plt+0x1640>
   1254c:	cmp	r7, #0
   12550:	bne	12694 <__snprintf_chk@plt+0x1870>
   12554:	cmp	r5, #0
   12558:	mov	r4, #1
   1255c:	movne	r3, #34	; 0x22
   12560:	strbne	r3, [r8]
   12564:	mov	r3, #1
   12568:	str	r3, [sp, #24]
   1256c:	str	r3, [sp, #32]
   12570:	ldr	r3, [pc, #2880]	; 130b8 <__snprintf_chk@plt+0x2294>
   12574:	str	r3, [sp, #44]	; 0x2c
   12578:	b	12464 <__snprintf_chk@plt+0x1640>
   1257c:	cmp	sl, #10
   12580:	beq	125a4 <__snprintf_chk@plt+0x1780>
   12584:	mov	r1, sl
   12588:	ldr	r0, [pc, #2860]	; 130bc <__snprintf_chk@plt+0x2298>
   1258c:	bl	122a4 <__snprintf_chk@plt+0x1480>
   12590:	mov	r1, sl
   12594:	str	r0, [sp, #156]	; 0x9c
   12598:	ldr	r0, [pc, #2848]	; 130c0 <__snprintf_chk@plt+0x229c>
   1259c:	bl	122a4 <__snprintf_chk@plt+0x1480>
   125a0:	str	r0, [sp, #160]	; 0xa0
   125a4:	cmp	r7, #0
   125a8:	moveq	r4, r7
   125ac:	beq	125c4 <__snprintf_chk@plt+0x17a0>
   125b0:	mov	r4, #0
   125b4:	b	125d4 <__snprintf_chk@plt+0x17b0>
   125b8:	cmp	r5, r4
   125bc:	strbhi	r3, [r8, r4]
   125c0:	add	r4, r4, #1
   125c4:	ldr	r3, [sp, #156]	; 0x9c
   125c8:	ldrb	r3, [r3, r4]
   125cc:	cmp	r3, #0
   125d0:	bne	125b8 <__snprintf_chk@plt+0x1794>
   125d4:	ldr	r0, [sp, #160]	; 0xa0
   125d8:	bl	10d4c <strlen@plt>
   125dc:	ldr	r3, [sp, #160]	; 0xa0
   125e0:	str	r0, [sp, #32]
   125e4:	str	r3, [sp, #44]	; 0x2c
   125e8:	mov	r3, #1
   125ec:	str	r3, [sp, #24]
   125f0:	b	12464 <__snprintf_chk@plt+0x1640>
   125f4:	mov	r3, #1
   125f8:	cmp	r7, #0
   125fc:	streq	r3, [sp, #24]
   12600:	beq	12644 <__snprintf_chk@plt+0x1820>
   12604:	str	r3, [sp, #32]
   12608:	b	12630 <__snprintf_chk@plt+0x180c>
   1260c:	cmp	r7, #0
   12610:	beq	12644 <__snprintf_chk@plt+0x1820>
   12614:	mov	r3, #1
   12618:	str	r3, [sp, #32]
   1261c:	ldr	r3, [pc, #2716]	; 130c0 <__snprintf_chk@plt+0x229c>
   12620:	b	126a4 <__snprintf_chk@plt+0x1880>
   12624:	mov	r7, #1
   12628:	str	r7, [sp, #24]
   1262c:	str	r7, [sp, #32]
   12630:	ldr	r3, [pc, #2696]	; 130c0 <__snprintf_chk@plt+0x229c>
   12634:	mov	r4, #0
   12638:	str	r3, [sp, #44]	; 0x2c
   1263c:	mov	sl, #2
   12640:	b	12464 <__snprintf_chk@plt+0x1640>
   12644:	cmp	r5, #0
   12648:	movne	r3, #39	; 0x27
   1264c:	movne	r7, #0
   12650:	strbne	r3, [r8]
   12654:	moveq	r7, r5
   12658:	mov	r3, #1
   1265c:	mov	r4, #1
   12660:	str	r3, [sp, #32]
   12664:	ldr	r3, [pc, #2644]	; 130c0 <__snprintf_chk@plt+0x229c>
   12668:	str	r3, [sp, #44]	; 0x2c
   1266c:	b	1263c <__snprintf_chk@plt+0x1818>
   12670:	bl	10e18 <abort@plt>
   12674:	mov	r3, #1
   12678:	mov	r7, #0
   1267c:	str	r3, [sp, #24]
   12680:	mov	r4, #0
   12684:	b	12464 <__snprintf_chk@plt+0x1640>
   12688:	mov	r7, #1
   1268c:	str	sl, [sp, #32]
   12690:	b	12630 <__snprintf_chk@plt+0x180c>
   12694:	mov	r3, #1
   12698:	str	r7, [sp, #24]
   1269c:	str	r3, [sp, #32]
   126a0:	ldr	r3, [pc, #2576]	; 130b8 <__snprintf_chk@plt+0x2294>
   126a4:	str	r3, [sp, #44]	; 0x2c
   126a8:	b	12680 <__snprintf_chk@plt+0x185c>
   126ac:	ldr	fp, [sp, #24]
   126b0:	ldr	r3, [sp, #32]
   126b4:	cmp	sl, #2
   126b8:	moveq	fp, #0
   126bc:	andne	fp, fp, #1
   126c0:	adds	r5, r3, #0
   126c4:	movne	r5, #1
   126c8:	ands	r3, fp, r5
   126cc:	str	r3, [sp, #64]	; 0x40
   126d0:	beq	127a0 <__snprintf_chk@plt+0x197c>
   126d4:	ldr	r3, [sp, #28]
   126d8:	ldr	r2, [sp, #32]
   126dc:	cmp	r2, #1
   126e0:	add	r6, r3, r2
   126e4:	mov	r3, r2
   126e8:	ldr	r2, [sp, #40]	; 0x28
   126ec:	movls	r3, #0
   126f0:	movhi	r3, #1
   126f4:	cmn	r2, #1
   126f8:	movne	r3, #0
   126fc:	cmp	r3, #0
   12700:	beq	12710 <__snprintf_chk@plt+0x18ec>
   12704:	ldr	r0, [sp, #48]	; 0x30
   12708:	bl	10d4c <strlen@plt>
   1270c:	str	r0, [sp, #40]	; 0x28
   12710:	ldr	r3, [sp, #40]	; 0x28
   12714:	cmp	r6, r3
   12718:	bhi	12798 <__snprintf_chk@plt+0x1974>
   1271c:	ldr	r0, [sp, #28]
   12720:	ldr	r2, [sp, #32]
   12724:	ldr	r3, [sp, #48]	; 0x30
   12728:	ldr	r1, [sp, #44]	; 0x2c
   1272c:	add	r0, r3, r0
   12730:	bl	10c50 <memcmp@plt>
   12734:	cmp	r0, #0
   12738:	bne	12798 <__snprintf_chk@plt+0x1974>
   1273c:	cmp	r7, #0
   12740:	beq	127a0 <__snprintf_chk@plt+0x197c>
   12744:	str	r7, [sp, #24]
   12748:	ldr	r3, [sp, #24]
   1274c:	mov	r1, r9
   12750:	ldr	r2, [sp, #48]	; 0x30
   12754:	cmp	sl, #2
   12758:	movne	r3, #0
   1275c:	andeq	r3, r3, #1
   12760:	cmp	r3, #0
   12764:	ldr	r3, [sp, #160]	; 0xa0
   12768:	movne	sl, #4
   1276c:	str	sl, [sp]
   12770:	str	r3, [sp, #16]
   12774:	ldr	r3, [sp, #156]	; 0x9c
   12778:	str	r3, [sp, #12]
   1277c:	mov	r3, #0
   12780:	str	r3, [sp, #8]
   12784:	ldr	r3, [sp, #148]	; 0x94
   12788:	bic	r3, r3, #2
   1278c:	str	r3, [sp, #4]
   12790:	ldr	r3, [sp, #40]	; 0x28
   12794:	b	1251c <__snprintf_chk@plt+0x16f8>
   12798:	mov	r3, #0
   1279c:	str	r3, [sp, #64]	; 0x40
   127a0:	ldr	r2, [sp, #28]
   127a4:	ldr	r3, [sp, #48]	; 0x30
   127a8:	add	r3, r3, r2
   127ac:	str	r3, [sp, #80]	; 0x50
   127b0:	ldr	r3, [sp, #48]	; 0x30
   127b4:	ldrb	r6, [r3, r2]
   127b8:	cmp	r6, #58	; 0x3a
   127bc:	bhi	12920 <__snprintf_chk@plt+0x1afc>
   127c0:	cmp	r6, #43	; 0x2b
   127c4:	bcs	12ae0 <__snprintf_chk@plt+0x1cbc>
   127c8:	cmp	r6, #32
   127cc:	beq	12b34 <__snprintf_chk@plt+0x1d10>
   127d0:	bhi	12878 <__snprintf_chk@plt+0x1a54>
   127d4:	cmp	r6, #9
   127d8:	beq	12cdc <__snprintf_chk@plt+0x1eb8>
   127dc:	bhi	1283c <__snprintf_chk@plt+0x1a18>
   127e0:	cmp	r6, #7
   127e4:	beq	12cec <__snprintf_chk@plt+0x1ec8>
   127e8:	bhi	12d08 <__snprintf_chk@plt+0x1ee4>
   127ec:	cmp	r6, #0
   127f0:	beq	12b50 <__snprintf_chk@plt+0x1d2c>
   127f4:	ldr	r3, [sp, #76]	; 0x4c
   127f8:	cmp	r3, #1
   127fc:	bne	12d54 <__snprintf_chk@plt+0x1f30>
   12800:	bl	10d34 <__ctype_b_loc@plt>
   12804:	ldr	r2, [r0]
   12808:	sxth	r3, r6
   1280c:	lsl	r3, r3, #1
   12810:	ldrh	r5, [r2, r3]
   12814:	ldr	r3, [sp, #76]	; 0x4c
   12818:	ubfx	r5, r5, #14, #1
   1281c:	str	r3, [sp, #56]	; 0x38
   12820:	ldr	r3, [sp, #24]
   12824:	eor	fp, r5, #1
   12828:	and	fp, fp, r3
   1282c:	ands	fp, fp, #255	; 0xff
   12830:	beq	12a10 <__snprintf_chk@plt+0x1bec>
   12834:	mov	r5, #0
   12838:	b	12e00 <__snprintf_chk@plt+0x1fdc>
   1283c:	cmp	r6, #11
   12840:	beq	12d10 <__snprintf_chk@plt+0x1eec>
   12844:	bcc	12ce4 <__snprintf_chk@plt+0x1ec0>
   12848:	cmp	r6, #12
   1284c:	beq	12d18 <__snprintf_chk@plt+0x1ef4>
   12850:	cmp	r6, #13
   12854:	moveq	r3, #114	; 0x72
   12858:	bne	127f4 <__snprintf_chk@plt+0x19d0>
   1285c:	cmp	sl, #2
   12860:	movne	r2, #0
   12864:	andeq	r2, r7, #1
   12868:	cmp	r2, #0
   1286c:	beq	12cf0 <__snprintf_chk@plt+0x1ecc>
   12870:	mov	sl, #2
   12874:	b	12748 <__snprintf_chk@plt+0x1924>
   12878:	cmp	r6, #37	; 0x25
   1287c:	beq	12ae0 <__snprintf_chk@plt+0x1cbc>
   12880:	bhi	12894 <__snprintf_chk@plt+0x1a70>
   12884:	cmp	r6, #35	; 0x23
   12888:	beq	12b28 <__snprintf_chk@plt+0x1d04>
   1288c:	mov	r5, #0
   12890:	b	12b38 <__snprintf_chk@plt+0x1d14>
   12894:	cmp	r6, #39	; 0x27
   12898:	bne	1288c <__snprintf_chk@plt+0x1a68>
   1289c:	cmp	sl, #2
   128a0:	ldrne	r5, [sp, #36]	; 0x24
   128a4:	movne	r3, r5
   128a8:	strne	r3, [sp, #68]	; 0x44
   128ac:	bne	12c2c <__snprintf_chk@plt+0x1e08>
   128b0:	cmp	r7, #0
   128b4:	bne	12748 <__snprintf_chk@plt+0x1924>
   128b8:	ldr	r3, [sp, #60]	; 0x3c
   128bc:	cmp	r9, #0
   128c0:	clz	r3, r3
   128c4:	lsr	r3, r3, #5
   128c8:	moveq	r3, #0
   128cc:	cmp	r3, #0
   128d0:	strne	r9, [sp, #60]	; 0x3c
   128d4:	movne	r9, #0
   128d8:	bne	128e8 <__snprintf_chk@plt+0x1ac4>
   128dc:	cmp	r9, r4
   128e0:	movhi	r3, #39	; 0x27
   128e4:	strbhi	r3, [r8, r4]
   128e8:	add	r3, r4, #1
   128ec:	ldr	r5, [sp, #36]	; 0x24
   128f0:	mov	fp, #0
   128f4:	cmp	r3, r9
   128f8:	movcc	r2, #92	; 0x5c
   128fc:	str	fp, [sp, #52]	; 0x34
   12900:	strbcc	r2, [r8, r3]
   12904:	add	r3, r4, #2
   12908:	add	r4, r4, #3
   1290c:	cmp	r3, r9
   12910:	str	r5, [sp, #68]	; 0x44
   12914:	movcc	r2, #39	; 0x27
   12918:	strbcc	r2, [r8, r3]
   1291c:	b	12a10 <__snprintf_chk@plt+0x1bec>
   12920:	cmp	r6, #94	; 0x5e
   12924:	beq	1288c <__snprintf_chk@plt+0x1a68>
   12928:	bhi	12ae8 <__snprintf_chk@plt+0x1cc4>
   1292c:	cmp	r6, #90	; 0x5a
   12930:	bhi	12ad4 <__snprintf_chk@plt+0x1cb0>
   12934:	cmp	r6, #65	; 0x41
   12938:	bcs	12ae0 <__snprintf_chk@plt+0x1cbc>
   1293c:	cmp	r6, #62	; 0x3e
   12940:	bls	1288c <__snprintf_chk@plt+0x1a68>
   12944:	cmp	r6, #63	; 0x3f
   12948:	bne	127f4 <__snprintf_chk@plt+0x19d0>
   1294c:	cmp	sl, #2
   12950:	beq	12c34 <__snprintf_chk@plt+0x1e10>
   12954:	cmp	sl, #5
   12958:	movne	fp, #0
   1295c:	bne	13004 <__snprintf_chk@plt+0x21e0>
   12960:	ldr	r3, [sp, #148]	; 0x94
   12964:	tst	r3, #4
   12968:	beq	12c3c <__snprintf_chk@plt+0x1e18>
   1296c:	ldr	r3, [sp, #28]
   12970:	add	r2, r3, #2
   12974:	ldr	r3, [sp, #40]	; 0x28
   12978:	cmp	r2, r3
   1297c:	bcs	12c3c <__snprintf_chk@plt+0x1e18>
   12980:	ldr	r1, [sp, #28]
   12984:	ldr	r3, [sp, #48]	; 0x30
   12988:	add	r3, r3, r1
   1298c:	ldrb	r1, [r3, #1]
   12990:	cmp	r1, #63	; 0x3f
   12994:	bne	12c3c <__snprintf_chk@plt+0x1e18>
   12998:	ldr	r3, [sp, #48]	; 0x30
   1299c:	ldrb	r6, [r3, r2]
   129a0:	sub	r3, r6, #33	; 0x21
   129a4:	uxtb	r3, r3
   129a8:	cmp	r3, #29
   129ac:	bhi	1300c <__snprintf_chk@plt+0x21e8>
   129b0:	ldr	r0, [pc, #1804]	; 130c4 <__snprintf_chk@plt+0x22a0>
   129b4:	mov	r5, #1
   129b8:	ands	r5, r0, r5, lsl r3
   129bc:	beq	13014 <__snprintf_chk@plt+0x21f0>
   129c0:	cmp	r7, #0
   129c4:	bne	12748 <__snprintf_chk@plt+0x1924>
   129c8:	cmp	r9, r4
   129cc:	add	r3, r4, #1
   129d0:	str	r2, [sp, #28]
   129d4:	mov	r5, #0
   129d8:	strbhi	r1, [r8, r4]
   129dc:	cmp	r9, r3
   129e0:	mov	fp, r5
   129e4:	movhi	r1, #34	; 0x22
   129e8:	strbhi	r1, [r8, r3]
   129ec:	add	r3, r4, #2
   129f0:	cmp	r9, r3
   129f4:	movhi	r1, #34	; 0x22
   129f8:	strbhi	r1, [r8, r3]
   129fc:	add	r3, r4, #3
   12a00:	add	r4, r4, #4
   12a04:	cmp	r9, r3
   12a08:	movhi	r1, #63	; 0x3f
   12a0c:	strbhi	r1, [r8, r3]
   12a10:	ldr	r3, [sp, #24]
   12a14:	eor	r3, r3, #1
   12a18:	cmp	sl, #2
   12a1c:	orreq	r3, r3, #1
   12a20:	eor	r3, r3, #1
   12a24:	orr	r3, r7, r3
   12a28:	tst	r3, #255	; 0xff
   12a2c:	beq	12a58 <__snprintf_chk@plt+0x1c34>
   12a30:	ldr	r3, [sp, #152]	; 0x98
   12a34:	cmp	r3, #0
   12a38:	beq	12a58 <__snprintf_chk@plt+0x1c34>
   12a3c:	ldr	r1, [sp, #152]	; 0x98
   12a40:	ubfx	r2, r6, #5, #8
   12a44:	and	r3, r6, #31
   12a48:	ldr	r2, [r1, r2, lsl #2]
   12a4c:	lsr	r3, r2, r3
   12a50:	tst	r3, #1
   12a54:	bne	12a64 <__snprintf_chk@plt+0x1c40>
   12a58:	ldr	r3, [sp, #64]	; 0x40
   12a5c:	cmp	r3, #0
   12a60:	beq	12c5c <__snprintf_chk@plt+0x1e38>
   12a64:	sub	r3, sl, #2
   12a68:	cmp	r7, #0
   12a6c:	clz	r3, r3
   12a70:	lsr	r3, r3, #5
   12a74:	bne	12748 <__snprintf_chk@plt+0x1924>
   12a78:	ldr	r2, [sp, #52]	; 0x34
   12a7c:	eor	r2, r2, #1
   12a80:	ands	r3, r3, r2
   12a84:	beq	12abc <__snprintf_chk@plt+0x1c98>
   12a88:	cmp	r9, r4
   12a8c:	str	r3, [sp, #52]	; 0x34
   12a90:	movhi	r2, #39	; 0x27
   12a94:	strbhi	r2, [r8, r4]
   12a98:	add	r2, r4, #1
   12a9c:	cmp	r9, r2
   12aa0:	movhi	r1, #36	; 0x24
   12aa4:	strbhi	r1, [r8, r2]
   12aa8:	add	r2, r4, #2
   12aac:	add	r4, r4, #3
   12ab0:	cmp	r9, r2
   12ab4:	movhi	r1, #39	; 0x27
   12ab8:	strbhi	r1, [r8, r2]
   12abc:	cmp	r9, r4
   12ac0:	ldr	fp, [sp, #36]	; 0x24
   12ac4:	movhi	r3, #92	; 0x5c
   12ac8:	strbhi	r3, [r8, r4]
   12acc:	add	r4, r4, #1
   12ad0:	b	12c5c <__snprintf_chk@plt+0x1e38>
   12ad4:	cmp	r6, #92	; 0x5c
   12ad8:	beq	12c44 <__snprintf_chk@plt+0x1e20>
   12adc:	bls	1288c <__snprintf_chk@plt+0x1a68>
   12ae0:	ldr	r5, [sp, #36]	; 0x24
   12ae4:	b	12c2c <__snprintf_chk@plt+0x1e08>
   12ae8:	cmp	r6, #122	; 0x7a
   12aec:	bhi	12b0c <__snprintf_chk@plt+0x1ce8>
   12af0:	cmp	r6, #97	; 0x61
   12af4:	bcs	12ae0 <__snprintf_chk@plt+0x1cbc>
   12af8:	cmp	r6, #95	; 0x5f
   12afc:	beq	12ae0 <__snprintf_chk@plt+0x1cbc>
   12b00:	cmp	r6, #96	; 0x60
   12b04:	bne	127f4 <__snprintf_chk@plt+0x19d0>
   12b08:	b	1288c <__snprintf_chk@plt+0x1a68>
   12b0c:	cmp	r6, #124	; 0x7c
   12b10:	beq	1288c <__snprintf_chk@plt+0x1a68>
   12b14:	bcc	12d20 <__snprintf_chk@plt+0x1efc>
   12b18:	cmp	r6, #125	; 0x7d
   12b1c:	beq	12d20 <__snprintf_chk@plt+0x1efc>
   12b20:	cmp	r6, #126	; 0x7e
   12b24:	bne	127f4 <__snprintf_chk@plt+0x19d0>
   12b28:	ldr	r3, [sp, #28]
   12b2c:	cmp	r3, #0
   12b30:	bne	12c3c <__snprintf_chk@plt+0x1e18>
   12b34:	ldr	r5, [sp, #36]	; 0x24
   12b38:	cmp	sl, #2
   12b3c:	movne	fp, #0
   12b40:	andeq	fp, r7, #1
   12b44:	cmp	fp, #0
   12b48:	beq	12a10 <__snprintf_chk@plt+0x1bec>
   12b4c:	b	12870 <__snprintf_chk@plt+0x1a4c>
   12b50:	ldr	r3, [sp, #24]
   12b54:	cmp	r3, #0
   12b58:	beq	12c20 <__snprintf_chk@plt+0x1dfc>
   12b5c:	sub	r2, sl, #2
   12b60:	cmp	r7, #0
   12b64:	clz	r2, r2
   12b68:	lsr	r2, r2, #5
   12b6c:	bne	12744 <__snprintf_chk@plt+0x1920>
   12b70:	ldr	r3, [sp, #52]	; 0x34
   12b74:	eor	r3, r3, #1
   12b78:	ands	r2, r2, r3
   12b7c:	moveq	r3, r4
   12b80:	beq	12bb8 <__snprintf_chk@plt+0x1d94>
   12b84:	cmp	r9, r4
   12b88:	str	r2, [sp, #52]	; 0x34
   12b8c:	movhi	r3, #39	; 0x27
   12b90:	strbhi	r3, [r8, r4]
   12b94:	add	r3, r4, #1
   12b98:	cmp	r9, r3
   12b9c:	movhi	r1, #36	; 0x24
   12ba0:	strbhi	r1, [r8, r3]
   12ba4:	add	r3, r4, #2
   12ba8:	cmp	r9, r3
   12bac:	movhi	r1, #39	; 0x27
   12bb0:	strbhi	r1, [r8, r3]
   12bb4:	add	r3, r4, #3
   12bb8:	cmp	r9, r3
   12bbc:	add	r4, r3, #1
   12bc0:	movhi	r2, #92	; 0x5c
   12bc4:	strbhi	r2, [r8, r3]
   12bc8:	cmp	fp, #0
   12bcc:	beq	12ff4 <__snprintf_chk@plt+0x21d0>
   12bd0:	ldr	r2, [sp, #28]
   12bd4:	ldr	r1, [sp, #40]	; 0x28
   12bd8:	add	r2, r2, #1
   12bdc:	cmp	r2, r1
   12be0:	bcs	12c18 <__snprintf_chk@plt+0x1df4>
   12be4:	ldr	r1, [sp, #48]	; 0x30
   12be8:	mov	r6, #48	; 0x30
   12bec:	ldrb	r2, [r1, r2]
   12bf0:	sub	r2, r2, #48	; 0x30
   12bf4:	cmp	r2, #9
   12bf8:	bhi	13004 <__snprintf_chk@plt+0x21e0>
   12bfc:	cmp	r9, r4
   12c00:	add	r2, r3, #2
   12c04:	strbhi	r6, [r8, r4]
   12c08:	cmp	r9, r2
   12c0c:	add	r4, r3, #3
   12c10:	movhi	r1, #48	; 0x30
   12c14:	strbhi	r1, [r8, r2]
   12c18:	mov	r5, #0
   12c1c:	b	12ffc <__snprintf_chk@plt+0x21d8>
   12c20:	ldr	r3, [sp, #148]	; 0x94
   12c24:	ands	r5, r3, #1
   12c28:	bne	12cb0 <__snprintf_chk@plt+0x1e8c>
   12c2c:	mov	fp, #0
   12c30:	b	12a10 <__snprintf_chk@plt+0x1bec>
   12c34:	cmp	r7, #0
   12c38:	bne	12748 <__snprintf_chk@plt+0x1924>
   12c3c:	mov	r5, #0
   12c40:	b	12c2c <__snprintf_chk@plt+0x1e08>
   12c44:	cmp	sl, #2
   12c48:	bne	12cbc <__snprintf_chk@plt+0x1e98>
   12c4c:	cmp	r7, #0
   12c50:	bne	12748 <__snprintf_chk@plt+0x1924>
   12c54:	mov	r5, r7
   12c58:	mov	fp, r7
   12c5c:	ldr	r3, [sp, #52]	; 0x34
   12c60:	eor	fp, fp, #1
   12c64:	tst	r3, fp
   12c68:	beq	12c94 <__snprintf_chk@plt+0x1e70>
   12c6c:	cmp	r9, r4
   12c70:	movhi	r3, #39	; 0x27
   12c74:	strbhi	r3, [r8, r4]
   12c78:	add	r3, r4, #1
   12c7c:	add	r4, r4, #2
   12c80:	cmp	r9, r3
   12c84:	movhi	r2, #39	; 0x27
   12c88:	strbhi	r2, [r8, r3]
   12c8c:	mov	r3, #0
   12c90:	str	r3, [sp, #52]	; 0x34
   12c94:	cmp	r9, r4
   12c98:	ldr	r3, [sp, #72]	; 0x48
   12c9c:	strbhi	r6, [r8, r4]
   12ca0:	cmp	r5, #0
   12ca4:	add	r4, r4, #1
   12ca8:	moveq	r3, #0
   12cac:	str	r3, [sp, #72]	; 0x48
   12cb0:	ldr	r3, [sp, #28]
   12cb4:	add	r3, r3, #1
   12cb8:	b	12470 <__snprintf_chk@plt+0x164c>
   12cbc:	ldr	r3, [sp, #24]
   12cc0:	and	r3, r3, r7
   12cc4:	tst	r5, r3
   12cc8:	moveq	r3, r6
   12ccc:	beq	1285c <__snprintf_chk@plt+0x1a38>
   12cd0:	mov	fp, #0
   12cd4:	mov	r5, fp
   12cd8:	b	12c5c <__snprintf_chk@plt+0x1e38>
   12cdc:	mov	r3, #116	; 0x74
   12ce0:	b	1285c <__snprintf_chk@plt+0x1a38>
   12ce4:	mov	r3, #110	; 0x6e
   12ce8:	b	1285c <__snprintf_chk@plt+0x1a38>
   12cec:	mov	r3, #97	; 0x61
   12cf0:	ldr	r2, [sp, #24]
   12cf4:	cmp	r2, #0
   12cf8:	beq	12c3c <__snprintf_chk@plt+0x1e18>
   12cfc:	mov	r6, r3
   12d00:	mov	r5, #0
   12d04:	b	12a64 <__snprintf_chk@plt+0x1c40>
   12d08:	mov	r3, #98	; 0x62
   12d0c:	b	12cf0 <__snprintf_chk@plt+0x1ecc>
   12d10:	mov	r3, #118	; 0x76
   12d14:	b	12cf0 <__snprintf_chk@plt+0x1ecc>
   12d18:	mov	r3, #102	; 0x66
   12d1c:	b	12cf0 <__snprintf_chk@plt+0x1ecc>
   12d20:	ldr	r3, [sp, #40]	; 0x28
   12d24:	cmn	r3, #1
   12d28:	bne	12d48 <__snprintf_chk@plt+0x1f24>
   12d2c:	ldr	r3, [sp, #48]	; 0x30
   12d30:	ldrb	r3, [r3, #1]
   12d34:	adds	r3, r3, #0
   12d38:	movne	r3, #1
   12d3c:	cmp	r3, #0
   12d40:	bne	12c3c <__snprintf_chk@plt+0x1e18>
   12d44:	b	12b28 <__snprintf_chk@plt+0x1d04>
   12d48:	ldr	r3, [sp, #40]	; 0x28
   12d4c:	subs	r3, r3, #1
   12d50:	b	12d38 <__snprintf_chk@plt+0x1f14>
   12d54:	mov	r3, #0
   12d58:	mov	r2, #0
   12d5c:	strd	r2, [sp, #96]	; 0x60
   12d60:	ldr	r3, [sp, #40]	; 0x28
   12d64:	cmn	r3, #1
   12d68:	bne	12d78 <__snprintf_chk@plt+0x1f54>
   12d6c:	ldr	r0, [sp, #48]	; 0x30
   12d70:	bl	10d4c <strlen@plt>
   12d74:	str	r0, [sp, #40]	; 0x28
   12d78:	ldr	r5, [sp, #36]	; 0x24
   12d7c:	mov	r3, #0
   12d80:	str	r3, [sp, #56]	; 0x38
   12d84:	ldr	r3, [sp, #28]
   12d88:	add	r0, sp, #92	; 0x5c
   12d8c:	ldr	r1, [sp, #40]	; 0x28
   12d90:	ldr	r2, [sp, #56]	; 0x38
   12d94:	add	r2, r3, r2
   12d98:	ldr	r3, [sp, #48]	; 0x30
   12d9c:	add	fp, r3, r2
   12da0:	sub	r2, r1, r2
   12da4:	add	r3, sp, #96	; 0x60
   12da8:	mov	r1, fp
   12dac:	bl	1434c <__snprintf_chk@plt+0x3528>
   12db0:	subs	r2, r0, #0
   12db4:	beq	12df4 <__snprintf_chk@plt+0x1fd0>
   12db8:	cmn	r2, #1
   12dbc:	beq	12fc8 <__snprintf_chk@plt+0x21a4>
   12dc0:	cmn	r2, #2
   12dc4:	bne	12f38 <__snprintf_chk@plt+0x2114>
   12dc8:	ldr	r3, [sp, #28]
   12dcc:	ldr	r2, [sp, #56]	; 0x38
   12dd0:	add	r3, r3, r2
   12dd4:	ldr	r2, [sp, #40]	; 0x28
   12dd8:	cmp	r2, r3
   12ddc:	bls	12fc8 <__snprintf_chk@plt+0x21a4>
   12de0:	ldr	r2, [sp, #56]	; 0x38
   12de4:	ldr	r3, [sp, #80]	; 0x50
   12de8:	ldrb	r5, [r3, r2]
   12dec:	cmp	r5, #0
   12df0:	bne	12f28 <__snprintf_chk@plt+0x2104>
   12df4:	ldr	r3, [sp, #56]	; 0x38
   12df8:	cmp	r3, #1
   12dfc:	bls	12820 <__snprintf_chk@plt+0x19fc>
   12e00:	ldr	r3, [sp, #28]
   12e04:	mov	fp, #0
   12e08:	mov	ip, #92	; 0x5c
   12e0c:	ldr	r2, [sp, #56]	; 0x38
   12e10:	add	r3, r3, r2
   12e14:	ldr	r2, [sp, #24]
   12e18:	str	r3, [sp, #36]	; 0x24
   12e1c:	eor	r3, r5, #1
   12e20:	and	r3, r3, r2
   12e24:	mov	r2, #39	; 0x27
   12e28:	uxtb	r3, r3
   12e2c:	cmp	r3, #0
   12e30:	beq	12fd0 <__snprintf_chk@plt+0x21ac>
   12e34:	sub	r0, sl, #2
   12e38:	cmp	r7, #0
   12e3c:	clz	r0, r0
   12e40:	lsr	r0, r0, #5
   12e44:	bne	12744 <__snprintf_chk@plt+0x1920>
   12e48:	ldr	r1, [sp, #52]	; 0x34
   12e4c:	eor	r1, r1, #1
   12e50:	ands	r1, r0, r1
   12e54:	beq	12e84 <__snprintf_chk@plt+0x2060>
   12e58:	cmp	r9, r4
   12e5c:	add	r0, r4, #1
   12e60:	str	r1, [sp, #52]	; 0x34
   12e64:	strbhi	r2, [r8, r4]
   12e68:	cmp	r9, r0
   12e6c:	movhi	lr, #36	; 0x24
   12e70:	strbhi	lr, [r8, r0]
   12e74:	add	r0, r4, #2
   12e78:	add	r4, r4, #3
   12e7c:	cmp	r9, r0
   12e80:	strbhi	r2, [r8, r0]
   12e84:	cmp	r9, r4
   12e88:	add	r0, r4, #1
   12e8c:	mov	fp, r3
   12e90:	strbhi	ip, [r8, r4]
   12e94:	cmp	r9, r0
   12e98:	lsrhi	r1, r6, #6
   12e9c:	addhi	r1, r1, #48	; 0x30
   12ea0:	strbhi	r1, [r8, r0]
   12ea4:	add	r0, r4, #2
   12ea8:	add	r4, r4, #3
   12eac:	cmp	r9, r0
   12eb0:	ubfxhi	r1, r6, #3, #3
   12eb4:	and	r6, r6, #7
   12eb8:	add	r6, r6, #48	; 0x30
   12ebc:	addhi	r1, r1, #48	; 0x30
   12ec0:	strbhi	r1, [r8, r0]
   12ec4:	eor	r0, fp, #1
   12ec8:	ldr	r1, [sp, #28]
   12ecc:	ldr	lr, [sp, #52]	; 0x34
   12ed0:	add	r1, r1, #1
   12ed4:	and	r0, r0, lr
   12ed8:	ldr	lr, [sp, #36]	; 0x24
   12edc:	cmp	r1, lr
   12ee0:	bcs	12c5c <__snprintf_chk@plt+0x1e38>
   12ee4:	cmp	r0, #0
   12ee8:	beq	12f0c <__snprintf_chk@plt+0x20e8>
   12eec:	cmp	r9, r4
   12ef0:	add	r0, r4, #1
   12ef4:	strbhi	r2, [r8, r4]
   12ef8:	cmp	r9, r0
   12efc:	add	r4, r4, #2
   12f00:	strbhi	r2, [r8, r0]
   12f04:	mov	r0, #0
   12f08:	str	r0, [sp, #52]	; 0x34
   12f0c:	ldr	r0, [sp, #48]	; 0x30
   12f10:	cmp	r9, r4
   12f14:	str	r1, [sp, #28]
   12f18:	strbhi	r6, [r8, r4]
   12f1c:	add	r4, r4, #1
   12f20:	ldrb	r6, [r0, r1]
   12f24:	b	12e2c <__snprintf_chk@plt+0x2008>
   12f28:	ldr	r3, [sp, #56]	; 0x38
   12f2c:	add	r3, r3, #1
   12f30:	str	r3, [sp, #56]	; 0x38
   12f34:	b	12dc8 <__snprintf_chk@plt+0x1fa4>
   12f38:	cmp	sl, #2
   12f3c:	movne	r3, #0
   12f40:	andeq	r3, r7, #1
   12f44:	cmp	r3, #0
   12f48:	movne	r1, #1
   12f4c:	bne	12fa8 <__snprintf_chk@plt+0x2184>
   12f50:	ldr	r0, [sp, #92]	; 0x5c
   12f54:	str	r2, [sp, #84]	; 0x54
   12f58:	bl	10c8c <iswprint@plt>
   12f5c:	ldr	r3, [sp, #56]	; 0x38
   12f60:	cmp	r0, #0
   12f64:	add	r0, sp, #96	; 0x60
   12f68:	moveq	r5, #0
   12f6c:	ldr	r2, [sp, #84]	; 0x54
   12f70:	add	r3, r3, r2
   12f74:	str	r3, [sp, #56]	; 0x38
   12f78:	bl	10c38 <mbsinit@plt>
   12f7c:	cmp	r0, #0
   12f80:	beq	12d84 <__snprintf_chk@plt+0x1f60>
   12f84:	b	12df4 <__snprintf_chk@plt+0x1fd0>
   12f88:	ldrb	r3, [fp, #1]!
   12f8c:	cmp	r3, #94	; 0x5e
   12f90:	beq	12870 <__snprintf_chk@plt+0x1a4c>
   12f94:	bhi	12fb4 <__snprintf_chk@plt+0x2190>
   12f98:	sub	r3, r3, #91	; 0x5b
   12f9c:	cmp	r3, #1
   12fa0:	bls	12870 <__snprintf_chk@plt+0x1a4c>
   12fa4:	add	r1, r1, #1
   12fa8:	cmp	r1, r2
   12fac:	bne	12f88 <__snprintf_chk@plt+0x2164>
   12fb0:	b	12f50 <__snprintf_chk@plt+0x212c>
   12fb4:	cmp	r3, #96	; 0x60
   12fb8:	beq	12870 <__snprintf_chk@plt+0x1a4c>
   12fbc:	cmp	r3, #124	; 0x7c
   12fc0:	bne	12fa4 <__snprintf_chk@plt+0x2180>
   12fc4:	b	12870 <__snprintf_chk@plt+0x1a4c>
   12fc8:	mov	r5, #0
   12fcc:	b	12df4 <__snprintf_chk@plt+0x1fd0>
   12fd0:	ldr	r1, [sp, #64]	; 0x40
   12fd4:	cmp	r1, #0
   12fd8:	beq	12ec4 <__snprintf_chk@plt+0x20a0>
   12fdc:	cmp	r9, r4
   12fe0:	mov	r1, #0
   12fe4:	strbhi	ip, [r8, r4]
   12fe8:	add	r4, r4, #1
   12fec:	str	r1, [sp, #64]	; 0x40
   12ff0:	b	12ec4 <__snprintf_chk@plt+0x20a0>
   12ff4:	mov	r5, fp
   12ff8:	ldr	fp, [sp, #24]
   12ffc:	mov	r6, #48	; 0x30
   13000:	b	12a10 <__snprintf_chk@plt+0x1bec>
   13004:	mov	r5, #0
   13008:	b	12a10 <__snprintf_chk@plt+0x1bec>
   1300c:	mov	r6, r1
   13010:	b	12c3c <__snprintf_chk@plt+0x1e18>
   13014:	mov	r6, r1
   13018:	b	12c2c <__snprintf_chk@plt+0x1e08>
   1301c:	ldr	r2, [sp, #28]
   13020:	ldr	r3, [sp, #40]	; 0x28
   13024:	subs	r3, r3, r2
   13028:	movne	r3, #1
   1302c:	b	12494 <__snprintf_chk@plt+0x1670>
   13030:	ldr	r3, [sp, #60]	; 0x3c
   13034:	mov	sl, #2
   13038:	ldr	r7, [sp, #72]	; 0x48
   1303c:	adds	r6, r3, #0
   13040:	mov	r5, r3
   13044:	movne	r6, #1
   13048:	cmp	r9, #0
   1304c:	movne	r6, #0
   13050:	cmp	r6, #0
   13054:	bne	12424 <__snprintf_chk@plt+0x1600>
   13058:	ldr	r3, [sp, #68]	; 0x44
   1305c:	ldr	r2, [sp, #44]	; 0x2c
   13060:	cmp	r2, #0
   13064:	moveq	r3, #0
   13068:	andne	r3, r3, #1
   1306c:	cmp	r3, #0
   13070:	movne	r3, r2
   13074:	subne	r3, r3, #1
   13078:	bne	130a8 <__snprintf_chk@plt+0x2284>
   1307c:	cmp	r9, r4
   13080:	movhi	r3, #0
   13084:	strbhi	r3, [r8, r4]
   13088:	mov	r0, r4
   1308c:	add	sp, sp, #108	; 0x6c
   13090:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13094:	mov	r3, r7
   13098:	b	1305c <__snprintf_chk@plt+0x2238>
   1309c:	cmp	r9, r4
   130a0:	strbhi	r2, [r8, r4]
   130a4:	add	r4, r4, #1
   130a8:	ldrb	r2, [r3, #1]!
   130ac:	cmp	r2, #0
   130b0:	bne	1309c <__snprintf_chk@plt+0x2278>
   130b4:	b	1307c <__snprintf_chk@plt+0x2258>
   130b8:	andeq	r4, r1, ip, asr fp
   130bc:	andeq	r4, r1, pc, ror #22
   130c0:	andeq	r4, r1, sp, ror #22
   130c4:	stmdacc	r0, {r0, r6, r7, r8, ip, lr}
   130c8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   130cc:	sub	sp, sp, #52	; 0x34
   130d0:	mov	r6, r0
   130d4:	mov	r5, r3
   130d8:	mov	r8, r1
   130dc:	mov	r9, r2
   130e0:	bl	10d58 <__errno_location@plt>
   130e4:	ldr	r3, [r0]
   130e8:	cmn	r6, #-2147483647	; 0x80000001
   130ec:	str	r0, [sp, #24]
   130f0:	ldr	r7, [pc, #368]	; 13268 <__snprintf_chk@plt+0x2444>
   130f4:	str	r3, [sp, #32]
   130f8:	movne	r3, #0
   130fc:	moveq	r3, #1
   13100:	orrs	r3, r3, r6, lsr #31
   13104:	ldr	r4, [r7]
   13108:	beq	13110 <__snprintf_chk@plt+0x22ec>
   1310c:	bl	10e18 <abort@plt>
   13110:	ldr	r2, [r7, #4]
   13114:	cmp	r2, r6
   13118:	bgt	13188 <__snprintf_chk@plt+0x2364>
   1311c:	add	sl, r7, #8
   13120:	mov	r3, #8
   13124:	cmp	r4, sl
   13128:	add	r1, sp, #44	; 0x2c
   1312c:	str	r2, [sp, #44]	; 0x2c
   13130:	sub	r2, r6, r2
   13134:	movne	r0, r4
   13138:	moveq	r0, #0
   1313c:	add	r2, r2, #1
   13140:	str	r3, [sp]
   13144:	mvn	r3, #-2147483648	; 0x80000000
   13148:	bl	13e1c <__snprintf_chk@plt+0x2ff8>
   1314c:	cmp	r4, sl
   13150:	mov	fp, r0
   13154:	str	r0, [r7]
   13158:	ldmeq	r4, {r0, r1}
   1315c:	mov	r4, fp
   13160:	ldr	r2, [sp, #44]	; 0x2c
   13164:	stmeq	fp, {r0, r1}
   13168:	mov	r1, #0
   1316c:	ldr	r0, [r7, #4]
   13170:	sub	r2, r2, r0
   13174:	add	r0, fp, r0, lsl #3
   13178:	lsl	r2, r2, #3
   1317c:	bl	10d7c <memset@plt>
   13180:	ldr	r3, [sp, #44]	; 0x2c
   13184:	str	r3, [r7, #4]
   13188:	ldr	r3, [r5, #4]
   1318c:	add	sl, r4, r6, lsl #3
   13190:	mov	r2, r8
   13194:	ldr	fp, [r4, r6, lsl #3]
   13198:	ldr	r7, [sl, #4]
   1319c:	orr	r3, r3, #1
   131a0:	str	r3, [sp, #28]
   131a4:	add	r3, r5, #8
   131a8:	mov	r1, fp
   131ac:	str	r3, [sp, #36]	; 0x24
   131b0:	mov	r0, r7
   131b4:	ldr	r3, [r5, #44]	; 0x2c
   131b8:	str	r3, [sp, #16]
   131bc:	ldr	r3, [r5, #40]	; 0x28
   131c0:	str	r3, [sp, #12]
   131c4:	add	r3, r5, #8
   131c8:	str	r3, [sp, #8]
   131cc:	ldr	r3, [sp, #28]
   131d0:	str	r3, [sp, #4]
   131d4:	ldr	r3, [r5]
   131d8:	str	r3, [sp]
   131dc:	mov	r3, r9
   131e0:	bl	123d8 <__snprintf_chk@plt+0x15b4>
   131e4:	cmp	fp, r0
   131e8:	bhi	13250 <__snprintf_chk@plt+0x242c>
   131ec:	ldr	r3, [pc, #120]	; 1326c <__snprintf_chk@plt+0x2448>
   131f0:	add	fp, r0, #1
   131f4:	str	fp, [r4, r6, lsl #3]
   131f8:	cmp	r7, r3
   131fc:	beq	13208 <__snprintf_chk@plt+0x23e4>
   13200:	mov	r0, r7
   13204:	bl	14208 <__snprintf_chk@plt+0x33e4>
   13208:	mov	r0, fp
   1320c:	bl	13d0c <__snprintf_chk@plt+0x2ee8>
   13210:	ldr	r3, [r5, #44]	; 0x2c
   13214:	mov	r2, r8
   13218:	mov	r1, fp
   1321c:	str	r0, [sl, #4]
   13220:	mov	r7, r0
   13224:	str	r3, [sp, #16]
   13228:	ldr	r3, [r5, #40]	; 0x28
   1322c:	str	r3, [sp, #12]
   13230:	add	r3, r5, #8
   13234:	str	r3, [sp, #8]
   13238:	ldr	r3, [sp, #28]
   1323c:	str	r3, [sp, #4]
   13240:	ldr	r3, [r5]
   13244:	str	r3, [sp]
   13248:	mov	r3, r9
   1324c:	bl	123d8 <__snprintf_chk@plt+0x15b4>
   13250:	ldr	r3, [sp, #24]
   13254:	mov	r0, r7
   13258:	ldr	r2, [sp, #32]
   1325c:	str	r2, [r3]
   13260:	add	sp, sp, #52	; 0x34
   13264:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13268:	andeq	r5, r2, r0, ror #1
   1326c:	andeq	r5, r2, ip, asr #2
   13270:	push	{r4, r5, r6, lr}
   13274:	mov	r5, r0
   13278:	bl	10d58 <__errno_location@plt>
   1327c:	mov	r4, r0
   13280:	cmp	r5, #0
   13284:	ldr	r0, [pc, #20]	; 132a0 <__snprintf_chk@plt+0x247c>
   13288:	mov	r1, #48	; 0x30
   1328c:	movne	r0, r5
   13290:	ldr	r6, [r4]
   13294:	bl	13f0c <__snprintf_chk@plt+0x30e8>
   13298:	str	r6, [r4]
   1329c:	pop	{r4, r5, r6, pc}
   132a0:	andeq	r5, r2, ip, asr #4
   132a4:	ldr	r3, [pc, #12]	; 132b8 <__snprintf_chk@plt+0x2494>
   132a8:	cmp	r0, #0
   132ac:	moveq	r0, r3
   132b0:	ldr	r0, [r0]
   132b4:	bx	lr
   132b8:	andeq	r5, r2, ip, asr #4
   132bc:	ldr	r3, [pc, #12]	; 132d0 <__snprintf_chk@plt+0x24ac>
   132c0:	cmp	r0, #0
   132c4:	moveq	r0, r3
   132c8:	str	r1, [r0]
   132cc:	bx	lr
   132d0:	andeq	r5, r2, ip, asr #4
   132d4:	ldr	r3, [pc, #52]	; 13310 <__snprintf_chk@plt+0x24ec>
   132d8:	cmp	r0, #0
   132dc:	push	{lr}		; (str lr, [sp, #-4]!)
   132e0:	lsr	lr, r1, #5
   132e4:	and	r1, r1, #31
   132e8:	moveq	r0, r3
   132ec:	add	r3, r0, #8
   132f0:	ldr	ip, [r3, lr, lsl #2]
   132f4:	lsr	r0, ip, r1
   132f8:	eor	r2, r2, r0
   132fc:	and	r0, r0, #1
   13300:	and	r2, r2, #1
   13304:	eor	r1, ip, r2, lsl r1
   13308:	str	r1, [r3, lr, lsl #2]
   1330c:	pop	{pc}		; (ldr pc, [sp], #4)
   13310:	andeq	r5, r2, ip, asr #4
   13314:	ldr	r3, [pc, #16]	; 1332c <__snprintf_chk@plt+0x2508>
   13318:	cmp	r0, #0
   1331c:	movne	r3, r0
   13320:	ldr	r0, [r3, #4]
   13324:	str	r1, [r3, #4]
   13328:	bx	lr
   1332c:	andeq	r5, r2, ip, asr #4
   13330:	ldr	r3, [pc, #44]	; 13364 <__snprintf_chk@plt+0x2540>
   13334:	cmp	r0, #0
   13338:	moveq	r0, r3
   1333c:	mov	r3, #10
   13340:	cmp	r2, #0
   13344:	cmpne	r1, #0
   13348:	str	r3, [r0]
   1334c:	bne	13358 <__snprintf_chk@plt+0x2534>
   13350:	push	{r4, lr}
   13354:	bl	10e18 <abort@plt>
   13358:	str	r1, [r0, #40]	; 0x28
   1335c:	str	r2, [r0, #44]	; 0x2c
   13360:	bx	lr
   13364:	andeq	r5, r2, ip, asr #4
   13368:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1336c:	sub	sp, sp, #24
   13370:	mov	sl, r3
   13374:	mov	r7, r0
   13378:	mov	r8, r1
   1337c:	mov	r9, r2
   13380:	ldr	r4, [sp, #56]	; 0x38
   13384:	ldr	r3, [pc, #88]	; 133e4 <__snprintf_chk@plt+0x25c0>
   13388:	cmp	r4, #0
   1338c:	moveq	r4, r3
   13390:	bl	10d58 <__errno_location@plt>
   13394:	ldr	r3, [r4, #44]	; 0x2c
   13398:	mov	r5, r0
   1339c:	mov	r2, r9
   133a0:	mov	r1, r8
   133a4:	mov	r0, r7
   133a8:	ldr	r6, [r5]
   133ac:	str	r3, [sp, #16]
   133b0:	ldr	r3, [r4, #40]	; 0x28
   133b4:	str	r3, [sp, #12]
   133b8:	add	r3, r4, #8
   133bc:	str	r3, [sp, #8]
   133c0:	ldr	r3, [r4, #4]
   133c4:	str	r3, [sp, #4]
   133c8:	ldr	r3, [r4]
   133cc:	str	r3, [sp]
   133d0:	mov	r3, sl
   133d4:	bl	123d8 <__snprintf_chk@plt+0x15b4>
   133d8:	str	r6, [r5]
   133dc:	add	sp, sp, #24
   133e0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   133e4:	andeq	r5, r2, ip, asr #4
   133e8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   133ec:	cmp	r3, #0
   133f0:	sub	sp, sp, #44	; 0x2c
   133f4:	mov	r6, r2
   133f8:	mov	sl, r1
   133fc:	mov	r9, r0
   13400:	ldr	r4, [pc, #176]	; 134b8 <__snprintf_chk@plt+0x2694>
   13404:	movne	r4, r3
   13408:	bl	10d58 <__errno_location@plt>
   1340c:	ldr	r3, [r0]
   13410:	mov	r1, #0
   13414:	mov	r2, r9
   13418:	mov	r8, r0
   1341c:	mov	r0, r1
   13420:	ldr	r5, [r4, #4]
   13424:	add	fp, r4, #8
   13428:	str	r3, [sp, #28]
   1342c:	ldr	r3, [r4, #44]	; 0x2c
   13430:	cmp	r6, #0
   13434:	orreq	r5, r5, #1
   13438:	str	r3, [sp, #16]
   1343c:	ldr	r3, [r4, #40]	; 0x28
   13440:	stmib	sp, {r5, fp}
   13444:	str	r3, [sp, #12]
   13448:	ldr	r3, [r4]
   1344c:	str	r3, [sp]
   13450:	mov	r3, sl
   13454:	bl	123d8 <__snprintf_chk@plt+0x15b4>
   13458:	add	r1, r0, #1
   1345c:	mov	r7, r0
   13460:	mov	r0, r1
   13464:	str	r1, [sp, #36]	; 0x24
   13468:	bl	13d0c <__snprintf_chk@plt+0x2ee8>
   1346c:	ldr	r3, [r4, #44]	; 0x2c
   13470:	mov	r2, r9
   13474:	ldr	r1, [sp, #36]	; 0x24
   13478:	str	r3, [sp, #16]
   1347c:	ldr	r3, [r4, #40]	; 0x28
   13480:	stmib	sp, {r5, fp}
   13484:	str	r0, [sp, #32]
   13488:	str	r3, [sp, #12]
   1348c:	ldr	r3, [r4]
   13490:	str	r3, [sp]
   13494:	mov	r3, sl
   13498:	bl	123d8 <__snprintf_chk@plt+0x15b4>
   1349c:	ldr	r3, [sp, #28]
   134a0:	cmp	r6, #0
   134a4:	ldr	r0, [sp, #32]
   134a8:	str	r3, [r8]
   134ac:	strne	r7, [r6]
   134b0:	add	sp, sp, #44	; 0x2c
   134b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   134b8:	andeq	r5, r2, ip, asr #4
   134bc:	mov	r3, r2
   134c0:	mov	r2, #0
   134c4:	b	133e8 <__snprintf_chk@plt+0x25c4>
   134c8:	push	{r4, r5, r6, r7, r8, lr}
   134cc:	mov	r6, #1
   134d0:	ldr	r4, [pc, #100]	; 1353c <__snprintf_chk@plt+0x2718>
   134d4:	ldr	r5, [r4]
   134d8:	add	r7, r5, #4
   134dc:	ldr	r3, [r4, #4]
   134e0:	cmp	r3, r6
   134e4:	bgt	1352c <__snprintf_chk@plt+0x2708>
   134e8:	ldr	r6, [pc, #80]	; 13540 <__snprintf_chk@plt+0x271c>
   134ec:	ldr	r0, [r5, #4]
   134f0:	cmp	r0, r6
   134f4:	beq	13508 <__snprintf_chk@plt+0x26e4>
   134f8:	bl	14208 <__snprintf_chk@plt+0x33e4>
   134fc:	mov	r3, #256	; 0x100
   13500:	str	r3, [r4, #8]
   13504:	str	r6, [r4, #12]
   13508:	ldr	r6, [pc, #52]	; 13544 <__snprintf_chk@plt+0x2720>
   1350c:	cmp	r5, r6
   13510:	beq	13520 <__snprintf_chk@plt+0x26fc>
   13514:	mov	r0, r5
   13518:	bl	14208 <__snprintf_chk@plt+0x33e4>
   1351c:	str	r6, [r4]
   13520:	mov	r3, #1
   13524:	str	r3, [r4, #4]
   13528:	pop	{r4, r5, r6, r7, r8, pc}
   1352c:	ldr	r0, [r7, r6, lsl #3]
   13530:	add	r6, r6, #1
   13534:	bl	14208 <__snprintf_chk@plt+0x33e4>
   13538:	b	134dc <__snprintf_chk@plt+0x26b8>
   1353c:	andeq	r5, r2, r0, ror #1
   13540:	andeq	r5, r2, ip, asr #2
   13544:	andeq	r5, r2, r8, ror #1
   13548:	ldr	r3, [pc, #4]	; 13554 <__snprintf_chk@plt+0x2730>
   1354c:	mvn	r2, #0
   13550:	b	130c8 <__snprintf_chk@plt+0x22a4>
   13554:	andeq	r5, r2, ip, asr #4
   13558:	ldr	r3, [pc]	; 13560 <__snprintf_chk@plt+0x273c>
   1355c:	b	130c8 <__snprintf_chk@plt+0x22a4>
   13560:	andeq	r5, r2, ip, asr #4
   13564:	mov	r1, r0
   13568:	mov	r0, #0
   1356c:	b	13548 <__snprintf_chk@plt+0x2724>
   13570:	mov	r2, r1
   13574:	mov	r1, r0
   13578:	mov	r0, #0
   1357c:	b	13558 <__snprintf_chk@plt+0x2734>
   13580:	push	{r4, r5, lr}
   13584:	sub	sp, sp, #52	; 0x34
   13588:	mov	r5, r2
   1358c:	mov	r4, r0
   13590:	mov	r0, sp
   13594:	bl	1227c <__snprintf_chk@plt+0x1458>
   13598:	mov	r3, sp
   1359c:	mvn	r2, #0
   135a0:	mov	r1, r5
   135a4:	mov	r0, r4
   135a8:	bl	130c8 <__snprintf_chk@plt+0x22a4>
   135ac:	add	sp, sp, #52	; 0x34
   135b0:	pop	{r4, r5, pc}
   135b4:	push	{r4, r5, r6, lr}
   135b8:	sub	sp, sp, #48	; 0x30
   135bc:	mov	r5, r2
   135c0:	mov	r6, r3
   135c4:	mov	r4, r0
   135c8:	mov	r0, sp
   135cc:	bl	1227c <__snprintf_chk@plt+0x1458>
   135d0:	mov	r3, sp
   135d4:	mov	r2, r6
   135d8:	mov	r1, r5
   135dc:	mov	r0, r4
   135e0:	bl	130c8 <__snprintf_chk@plt+0x22a4>
   135e4:	add	sp, sp, #48	; 0x30
   135e8:	pop	{r4, r5, r6, pc}
   135ec:	mov	r2, r1
   135f0:	mov	r1, r0
   135f4:	mov	r0, #0
   135f8:	b	13580 <__snprintf_chk@plt+0x275c>
   135fc:	mov	r3, r2
   13600:	mov	r2, r1
   13604:	mov	r1, r0
   13608:	mov	r0, #0
   1360c:	b	135b4 <__snprintf_chk@plt+0x2790>
   13610:	push	{r4, r5, r6, lr}
   13614:	mov	r4, r0
   13618:	mov	r5, r1
   1361c:	mov	r6, r2
   13620:	sub	sp, sp, #48	; 0x30
   13624:	mov	ip, sp
   13628:	ldr	lr, [pc, #64]	; 13670 <__snprintf_chk@plt+0x284c>
   1362c:	ldm	lr!, {r0, r1, r2, r3}
   13630:	stmia	ip!, {r0, r1, r2, r3}
   13634:	ldm	lr!, {r0, r1, r2, r3}
   13638:	stmia	ip!, {r0, r1, r2, r3}
   1363c:	ldm	lr, {r0, r1, r2, r3}
   13640:	stm	ip, {r0, r1, r2, r3}
   13644:	mov	r1, r6
   13648:	mov	r2, #1
   1364c:	mov	r0, sp
   13650:	bl	132d4 <__snprintf_chk@plt+0x24b0>
   13654:	mov	r3, sp
   13658:	mov	r2, r5
   1365c:	mov	r1, r4
   13660:	mov	r0, #0
   13664:	bl	130c8 <__snprintf_chk@plt+0x22a4>
   13668:	add	sp, sp, #48	; 0x30
   1366c:	pop	{r4, r5, r6, pc}
   13670:	andeq	r5, r2, ip, asr #4
   13674:	mov	r2, r1
   13678:	mvn	r1, #0
   1367c:	b	13610 <__snprintf_chk@plt+0x27ec>
   13680:	mov	r1, #58	; 0x3a
   13684:	b	13674 <__snprintf_chk@plt+0x2850>
   13688:	mov	r2, #58	; 0x3a
   1368c:	b	13610 <__snprintf_chk@plt+0x27ec>
   13690:	push	{r4, r5, lr}
   13694:	sub	sp, sp, #100	; 0x64
   13698:	mov	r4, r0
   1369c:	mov	r0, sp
   136a0:	mov	r5, r2
   136a4:	bl	1227c <__snprintf_chk@plt+0x1458>
   136a8:	mov	ip, sp
   136ac:	add	lr, sp, #48	; 0x30
   136b0:	ldm	ip!, {r0, r1, r2, r3}
   136b4:	stmia	lr!, {r0, r1, r2, r3}
   136b8:	ldm	ip!, {r0, r1, r2, r3}
   136bc:	stmia	lr!, {r0, r1, r2, r3}
   136c0:	ldm	ip, {r0, r1, r2, r3}
   136c4:	stm	lr, {r0, r1, r2, r3}
   136c8:	mov	r2, #1
   136cc:	mov	r1, #58	; 0x3a
   136d0:	add	r0, sp, #48	; 0x30
   136d4:	bl	132d4 <__snprintf_chk@plt+0x24b0>
   136d8:	add	r3, sp, #48	; 0x30
   136dc:	mvn	r2, #0
   136e0:	mov	r1, r5
   136e4:	mov	r0, r4
   136e8:	bl	130c8 <__snprintf_chk@plt+0x22a4>
   136ec:	add	sp, sp, #100	; 0x64
   136f0:	pop	{r4, r5, pc}
   136f4:	push	{r4, r5, r6, r7, lr}
   136f8:	mov	r4, r0
   136fc:	mov	r6, r1
   13700:	mov	r7, r2
   13704:	mov	r5, r3
   13708:	sub	sp, sp, #52	; 0x34
   1370c:	ldr	lr, [pc, #68]	; 13758 <__snprintf_chk@plt+0x2934>
   13710:	mov	ip, sp
   13714:	ldm	lr!, {r0, r1, r2, r3}
   13718:	stmia	ip!, {r0, r1, r2, r3}
   1371c:	ldm	lr!, {r0, r1, r2, r3}
   13720:	stmia	ip!, {r0, r1, r2, r3}
   13724:	ldm	lr, {r0, r1, r2, r3}
   13728:	stm	ip, {r0, r1, r2, r3}
   1372c:	mov	r2, r7
   13730:	mov	r1, r6
   13734:	mov	r0, sp
   13738:	bl	13330 <__snprintf_chk@plt+0x250c>
   1373c:	ldr	r2, [sp, #72]	; 0x48
   13740:	mov	r3, sp
   13744:	mov	r1, r5
   13748:	mov	r0, r4
   1374c:	bl	130c8 <__snprintf_chk@plt+0x22a4>
   13750:	add	sp, sp, #52	; 0x34
   13754:	pop	{r4, r5, r6, r7, pc}
   13758:	andeq	r5, r2, ip, asr #4
   1375c:	mvn	ip, #0
   13760:	push	{r0, r1, r2, lr}
   13764:	str	ip, [sp]
   13768:	bl	136f4 <__snprintf_chk@plt+0x28d0>
   1376c:	add	sp, sp, #12
   13770:	pop	{pc}		; (ldr pc, [sp], #4)
   13774:	mov	r3, r2
   13778:	mov	r2, r1
   1377c:	mov	r1, r0
   13780:	mov	r0, #0
   13784:	b	1375c <__snprintf_chk@plt+0x2938>
   13788:	push	{r0, r1, r2, lr}
   1378c:	str	r3, [sp]
   13790:	mov	r3, r2
   13794:	mov	r2, r1
   13798:	mov	r1, r0
   1379c:	mov	r0, #0
   137a0:	bl	136f4 <__snprintf_chk@plt+0x28d0>
   137a4:	add	sp, sp, #12
   137a8:	pop	{pc}		; (ldr pc, [sp], #4)
   137ac:	ldr	r3, [pc]	; 137b4 <__snprintf_chk@plt+0x2990>
   137b0:	b	130c8 <__snprintf_chk@plt+0x22a4>
   137b4:	strdeq	r5, [r2], -r0
   137b8:	mov	r2, r1
   137bc:	mov	r1, r0
   137c0:	mov	r0, #0
   137c4:	b	137ac <__snprintf_chk@plt+0x2988>
   137c8:	mvn	r2, #0
   137cc:	b	137ac <__snprintf_chk@plt+0x2988>
   137d0:	mov	r1, r0
   137d4:	mov	r0, #0
   137d8:	b	137c8 <__snprintf_chk@plt+0x29a4>
   137dc:	push	{r4, r5, r6, lr}
   137e0:	cmp	r1, #0
   137e4:	sub	sp, sp, #32
   137e8:	mov	r5, r0
   137ec:	ldr	r4, [sp, #48]	; 0x30
   137f0:	ldr	r6, [sp, #52]	; 0x34
   137f4:	beq	138a8 <__snprintf_chk@plt+0x2a84>
   137f8:	strd	r2, [sp]
   137fc:	mov	r3, r1
   13800:	mov	r1, #1
   13804:	ldr	r2, [pc, #856]	; 13b64 <__snprintf_chk@plt+0x2d40>
   13808:	bl	10dac <__fprintf_chk@plt>
   1380c:	mov	r2, #5
   13810:	ldr	r1, [pc, #848]	; 13b68 <__snprintf_chk@plt+0x2d44>
   13814:	mov	r0, #0
   13818:	bl	10c68 <dcgettext@plt>
   1381c:	movw	r3, #2022	; 0x7e6
   13820:	ldr	r2, [pc, #836]	; 13b6c <__snprintf_chk@plt+0x2d48>
   13824:	mov	r1, #1
   13828:	str	r3, [sp]
   1382c:	mov	r3, r0
   13830:	mov	r0, r5
   13834:	bl	10dac <__fprintf_chk@plt>
   13838:	mov	r1, r5
   1383c:	mov	r0, #10
   13840:	bl	10c5c <fputc_unlocked@plt>
   13844:	mov	r2, #5
   13848:	ldr	r1, [pc, #800]	; 13b70 <__snprintf_chk@plt+0x2d4c>
   1384c:	mov	r0, #0
   13850:	bl	10c68 <dcgettext@plt>
   13854:	mov	r2, r0
   13858:	mov	r1, #1
   1385c:	ldr	r3, [pc, #784]	; 13b74 <__snprintf_chk@plt+0x2d50>
   13860:	mov	r0, r5
   13864:	bl	10dac <__fprintf_chk@plt>
   13868:	mov	r1, r5
   1386c:	mov	r0, #10
   13870:	bl	10c5c <fputc_unlocked@plt>
   13874:	cmp	r6, #9
   13878:	ldrls	pc, [pc, r6, lsl #2]
   1387c:	b	13b58 <__snprintf_chk@plt+0x2d34>
   13880:	muleq	r1, r8, r9
   13884:	andeq	r3, r1, r0, asr #17
   13888:	andeq	r3, r1, ip, ror #17
   1388c:	andeq	r3, r1, r0, lsr #18
   13890:	andeq	r3, r1, ip, asr r9
   13894:	andeq	r3, r1, r0, lsr #19
   13898:	andeq	r3, r1, r8, ror #19
   1389c:	andeq	r3, r1, r8, lsr sl
   138a0:	muleq	r1, r0, sl
   138a4:	strdeq	r3, [r1], -r0
   138a8:	mov	r1, #1
   138ac:	str	r3, [sp]
   138b0:	mov	r3, r2
   138b4:	ldr	r2, [pc, #700]	; 13b78 <__snprintf_chk@plt+0x2d54>
   138b8:	bl	10dac <__fprintf_chk@plt>
   138bc:	b	1380c <__snprintf_chk@plt+0x29e8>
   138c0:	mov	r2, #5
   138c4:	ldr	r1, [pc, #688]	; 13b7c <__snprintf_chk@plt+0x2d58>
   138c8:	mov	r0, #0
   138cc:	bl	10c68 <dcgettext@plt>
   138d0:	ldr	r3, [r4]
   138d4:	mov	r2, r0
   138d8:	mov	r1, #1
   138dc:	mov	r0, r5
   138e0:	add	sp, sp, #32
   138e4:	pop	{r4, r5, r6, lr}
   138e8:	b	10dac <__fprintf_chk@plt>
   138ec:	mov	r2, #5
   138f0:	ldr	r1, [pc, #648]	; 13b80 <__snprintf_chk@plt+0x2d5c>
   138f4:	mov	r0, #0
   138f8:	bl	10c68 <dcgettext@plt>
   138fc:	ldr	r3, [r4, #4]
   13900:	mov	r2, r0
   13904:	mov	r1, #1
   13908:	mov	r0, r5
   1390c:	str	r3, [sp, #48]	; 0x30
   13910:	ldr	r3, [r4]
   13914:	add	sp, sp, #32
   13918:	pop	{r4, r5, r6, lr}
   1391c:	b	10dac <__fprintf_chk@plt>
   13920:	mov	r2, #5
   13924:	ldr	r1, [pc, #600]	; 13b84 <__snprintf_chk@plt+0x2d60>
   13928:	mov	r0, #0
   1392c:	bl	10c68 <dcgettext@plt>
   13930:	ldr	r3, [r4, #8]
   13934:	mov	r2, r0
   13938:	mov	r1, #1
   1393c:	mov	r0, r5
   13940:	str	r3, [sp, #52]	; 0x34
   13944:	ldr	r3, [r4, #4]
   13948:	str	r3, [sp, #48]	; 0x30
   1394c:	ldr	r3, [r4]
   13950:	add	sp, sp, #32
   13954:	pop	{r4, r5, r6, lr}
   13958:	b	10dac <__fprintf_chk@plt>
   1395c:	mov	r2, #5
   13960:	ldr	r1, [pc, #544]	; 13b88 <__snprintf_chk@plt+0x2d64>
   13964:	mov	r0, #0
   13968:	bl	10c68 <dcgettext@plt>
   1396c:	ldr	r3, [r4, #12]
   13970:	mov	r2, r0
   13974:	mov	r1, #1
   13978:	mov	r0, r5
   1397c:	str	r3, [sp, #8]
   13980:	ldr	r3, [r4, #8]
   13984:	str	r3, [sp, #4]
   13988:	ldr	r3, [r4, #4]
   1398c:	str	r3, [sp]
   13990:	ldr	r3, [r4]
   13994:	bl	10dac <__fprintf_chk@plt>
   13998:	add	sp, sp, #32
   1399c:	pop	{r4, r5, r6, pc}
   139a0:	mov	r2, #5
   139a4:	ldr	r1, [pc, #480]	; 13b8c <__snprintf_chk@plt+0x2d68>
   139a8:	mov	r0, #0
   139ac:	bl	10c68 <dcgettext@plt>
   139b0:	ldr	r3, [r4, #16]
   139b4:	mov	r2, r0
   139b8:	mov	r1, #1
   139bc:	mov	r0, r5
   139c0:	str	r3, [sp, #12]
   139c4:	ldr	r3, [r4, #12]
   139c8:	str	r3, [sp, #8]
   139cc:	ldr	r3, [r4, #8]
   139d0:	str	r3, [sp, #4]
   139d4:	ldr	r3, [r4, #4]
   139d8:	str	r3, [sp]
   139dc:	ldr	r3, [r4]
   139e0:	bl	10dac <__fprintf_chk@plt>
   139e4:	b	13998 <__snprintf_chk@plt+0x2b74>
   139e8:	mov	r2, #5
   139ec:	ldr	r1, [pc, #412]	; 13b90 <__snprintf_chk@plt+0x2d6c>
   139f0:	mov	r0, #0
   139f4:	bl	10c68 <dcgettext@plt>
   139f8:	ldr	r3, [r4, #20]
   139fc:	mov	r2, r0
   13a00:	mov	r1, #1
   13a04:	mov	r0, r5
   13a08:	str	r3, [sp, #16]
   13a0c:	ldr	r3, [r4, #16]
   13a10:	str	r3, [sp, #12]
   13a14:	ldr	r3, [r4, #12]
   13a18:	str	r3, [sp, #8]
   13a1c:	ldr	r3, [r4, #8]
   13a20:	str	r3, [sp, #4]
   13a24:	ldr	r3, [r4, #4]
   13a28:	str	r3, [sp]
   13a2c:	ldr	r3, [r4]
   13a30:	bl	10dac <__fprintf_chk@plt>
   13a34:	b	13998 <__snprintf_chk@plt+0x2b74>
   13a38:	mov	r2, #5
   13a3c:	ldr	r1, [pc, #336]	; 13b94 <__snprintf_chk@plt+0x2d70>
   13a40:	mov	r0, #0
   13a44:	bl	10c68 <dcgettext@plt>
   13a48:	ldr	r3, [r4, #24]
   13a4c:	mov	r2, r0
   13a50:	mov	r1, #1
   13a54:	mov	r0, r5
   13a58:	str	r3, [sp, #20]
   13a5c:	ldr	r3, [r4, #20]
   13a60:	str	r3, [sp, #16]
   13a64:	ldr	r3, [r4, #16]
   13a68:	str	r3, [sp, #12]
   13a6c:	ldr	r3, [r4, #12]
   13a70:	str	r3, [sp, #8]
   13a74:	ldr	r3, [r4, #8]
   13a78:	str	r3, [sp, #4]
   13a7c:	ldr	r3, [r4, #4]
   13a80:	str	r3, [sp]
   13a84:	ldr	r3, [r4]
   13a88:	bl	10dac <__fprintf_chk@plt>
   13a8c:	b	13998 <__snprintf_chk@plt+0x2b74>
   13a90:	mov	r2, #5
   13a94:	ldr	r1, [pc, #252]	; 13b98 <__snprintf_chk@plt+0x2d74>
   13a98:	mov	r0, #0
   13a9c:	bl	10c68 <dcgettext@plt>
   13aa0:	ldr	r3, [r4, #28]
   13aa4:	mov	r2, r0
   13aa8:	mov	r1, #1
   13aac:	mov	r0, r5
   13ab0:	str	r3, [sp, #24]
   13ab4:	ldr	r3, [r4, #24]
   13ab8:	str	r3, [sp, #20]
   13abc:	ldr	r3, [r4, #20]
   13ac0:	str	r3, [sp, #16]
   13ac4:	ldr	r3, [r4, #16]
   13ac8:	str	r3, [sp, #12]
   13acc:	ldr	r3, [r4, #12]
   13ad0:	str	r3, [sp, #8]
   13ad4:	ldr	r3, [r4, #8]
   13ad8:	str	r3, [sp, #4]
   13adc:	ldr	r3, [r4, #4]
   13ae0:	str	r3, [sp]
   13ae4:	ldr	r3, [r4]
   13ae8:	bl	10dac <__fprintf_chk@plt>
   13aec:	b	13998 <__snprintf_chk@plt+0x2b74>
   13af0:	ldr	r1, [pc, #164]	; 13b9c <__snprintf_chk@plt+0x2d78>
   13af4:	mov	r2, #5
   13af8:	mov	r0, #0
   13afc:	bl	10c68 <dcgettext@plt>
   13b00:	ldr	r3, [r4, #32]
   13b04:	mov	r2, r0
   13b08:	mov	r1, #1
   13b0c:	mov	r0, r5
   13b10:	str	r3, [sp, #28]
   13b14:	ldr	r3, [r4, #28]
   13b18:	str	r3, [sp, #24]
   13b1c:	ldr	r3, [r4, #24]
   13b20:	str	r3, [sp, #20]
   13b24:	ldr	r3, [r4, #20]
   13b28:	str	r3, [sp, #16]
   13b2c:	ldr	r3, [r4, #16]
   13b30:	str	r3, [sp, #12]
   13b34:	ldr	r3, [r4, #12]
   13b38:	str	r3, [sp, #8]
   13b3c:	ldr	r3, [r4, #8]
   13b40:	str	r3, [sp, #4]
   13b44:	ldr	r3, [r4, #4]
   13b48:	str	r3, [sp]
   13b4c:	ldr	r3, [r4]
   13b50:	bl	10dac <__fprintf_chk@plt>
   13b54:	b	13998 <__snprintf_chk@plt+0x2b74>
   13b58:	mov	r2, #5
   13b5c:	ldr	r1, [pc, #60]	; 13ba0 <__snprintf_chk@plt+0x2d7c>
   13b60:	b	13af8 <__snprintf_chk@plt+0x2cd4>
   13b64:			; <UNDEFINED> instruction: 0x00014bbf
   13b68:	ldrdeq	r4, [r1], -r2
   13b6c:	andeq	r4, r1, r0, lsr #29
   13b70:	ldrdeq	r4, [r1], -r6
   13b74:	andeq	r4, r1, r1, lsl #25
   13b78:	andeq	r4, r1, fp, asr #23
   13b7c:	andeq	r4, r1, r3, lsr #25
   13b80:			; <UNDEFINED> instruction: 0x00014cb3
   13b84:	andeq	r4, r1, sl, asr #25
   13b88:	andeq	r4, r1, r6, ror #25
   13b8c:	andeq	r4, r1, r6, lsl #26
   13b90:	andeq	r4, r1, sl, lsr #26
   13b94:	andeq	r4, r1, r2, asr sp
   13b98:	andeq	r4, r1, lr, ror sp
   13b9c:	andeq	r4, r1, lr, lsr #27
   13ba0:	andeq	r4, r1, r2, ror #27
   13ba4:	push	{r0, r1, r4, lr}
   13ba8:	mov	ip, #0
   13bac:	ldr	lr, [sp, #16]
   13bb0:	ldr	r4, [lr, ip, lsl #2]
   13bb4:	cmp	r4, #0
   13bb8:	bne	13bd0 <__snprintf_chk@plt+0x2dac>
   13bbc:	str	lr, [sp]
   13bc0:	str	ip, [sp, #4]
   13bc4:	bl	137dc <__snprintf_chk@plt+0x29b8>
   13bc8:	add	sp, sp, #8
   13bcc:	pop	{r4, pc}
   13bd0:	add	ip, ip, #1
   13bd4:	b	13bb0 <__snprintf_chk@plt+0x2d8c>
   13bd8:	push	{r4, r5, r6, lr}
   13bdc:	sub	sp, sp, #48	; 0x30
   13be0:	mov	ip, #0
   13be4:	add	lr, sp, #8
   13be8:	mov	r5, lr
   13bec:	ldr	r6, [sp, #64]	; 0x40
   13bf0:	ldr	r4, [r6, ip, lsl #2]
   13bf4:	cmp	r4, #0
   13bf8:	str	r4, [lr], #4
   13bfc:	beq	13c0c <__snprintf_chk@plt+0x2de8>
   13c00:	add	ip, ip, #1
   13c04:	cmp	ip, #10
   13c08:	bne	13bf0 <__snprintf_chk@plt+0x2dcc>
   13c0c:	stm	sp, {r5, ip}
   13c10:	bl	137dc <__snprintf_chk@plt+0x29b8>
   13c14:	add	sp, sp, #48	; 0x30
   13c18:	pop	{r4, r5, r6, pc}
   13c1c:	push	{r3}		; (str r3, [sp, #-4]!)
   13c20:	push	{r0, r1, r2, r3, lr}
   13c24:	add	r3, sp, #24
   13c28:	str	r3, [sp]
   13c2c:	str	r3, [sp, #12]
   13c30:	ldr	r3, [sp, #20]
   13c34:	bl	13bd8 <__snprintf_chk@plt+0x2db4>
   13c38:	add	sp, sp, #16
   13c3c:	pop	{lr}		; (ldr lr, [sp], #4)
   13c40:	add	sp, sp, #4
   13c44:	bx	lr
   13c48:	ldr	r3, [pc, #116]	; 13cc4 <__snprintf_chk@plt+0x2ea0>
   13c4c:	mov	r0, #10
   13c50:	push	{r4, lr}
   13c54:	ldr	r1, [r3]
   13c58:	bl	10c5c <fputc_unlocked@plt>
   13c5c:	mov	r2, #5
   13c60:	ldr	r1, [pc, #96]	; 13cc8 <__snprintf_chk@plt+0x2ea4>
   13c64:	mov	r0, #0
   13c68:	bl	10c68 <dcgettext@plt>
   13c6c:	mov	r1, r0
   13c70:	ldr	r2, [pc, #84]	; 13ccc <__snprintf_chk@plt+0x2ea8>
   13c74:	mov	r0, #1
   13c78:	bl	10d88 <__printf_chk@plt>
   13c7c:	mov	r2, #5
   13c80:	ldr	r1, [pc, #72]	; 13cd0 <__snprintf_chk@plt+0x2eac>
   13c84:	mov	r0, #0
   13c88:	bl	10c68 <dcgettext@plt>
   13c8c:	mov	r1, r0
   13c90:	ldr	r3, [pc, #60]	; 13cd4 <__snprintf_chk@plt+0x2eb0>
   13c94:	mov	r0, #1
   13c98:	ldr	r2, [pc, #56]	; 13cd8 <__snprintf_chk@plt+0x2eb4>
   13c9c:	bl	10d88 <__printf_chk@plt>
   13ca0:	mov	r2, #5
   13ca4:	ldr	r1, [pc, #48]	; 13cdc <__snprintf_chk@plt+0x2eb8>
   13ca8:	mov	r0, #0
   13cac:	bl	10c68 <dcgettext@plt>
   13cb0:	mov	r1, r0
   13cb4:	ldr	r2, [pc, #36]	; 13ce0 <__snprintf_chk@plt+0x2ebc>
   13cb8:	mov	r0, #1
   13cbc:	pop	{r4, lr}
   13cc0:	b	10d88 <__printf_chk@plt>
   13cc4:	andeq	r5, r2, r4, lsr r1
   13cc8:	andeq	r4, r1, lr, lsl lr
   13ccc:	andeq	r4, r1, r2, lsr lr
   13cd0:	andeq	r4, r1, r8, asr #28
   13cd4:	andeq	r4, r1, r7, ror #12
   13cd8:	andeq	r4, r1, pc, lsl #13
   13cdc:	andeq	r4, r1, ip, asr lr
   13ce0:	andeq	r4, r1, r3, lsl #29
   13ce4:	push	{r4, lr}
   13ce8:	bl	14030 <__snprintf_chk@plt+0x320c>
   13cec:	cmp	r0, #0
   13cf0:	popne	{r4, pc}
   13cf4:	bl	13f9c <__snprintf_chk@plt+0x3178>
   13cf8:	push	{r4, lr}
   13cfc:	bl	14030 <__snprintf_chk@plt+0x320c>
   13d00:	cmp	r0, #0
   13d04:	popne	{r4, pc}
   13d08:	bl	13f9c <__snprintf_chk@plt+0x3178>
   13d0c:	b	13ce4 <__snprintf_chk@plt+0x2ec0>
   13d10:	push	{r4, r5, r6, lr}
   13d14:	mov	r5, r0
   13d18:	mov	r4, r1
   13d1c:	bl	1405c <__snprintf_chk@plt+0x3238>
   13d20:	cmp	r0, #0
   13d24:	popne	{r4, r5, r6, pc}
   13d28:	adds	r4, r4, #0
   13d2c:	movne	r4, #1
   13d30:	cmp	r5, #0
   13d34:	moveq	r4, #1
   13d38:	cmp	r4, #0
   13d3c:	popeq	{r4, r5, r6, pc}
   13d40:	bl	13f9c <__snprintf_chk@plt+0x3178>
   13d44:	push	{r4, lr}
   13d48:	bl	142f4 <__snprintf_chk@plt+0x34d0>
   13d4c:	cmp	r0, #0
   13d50:	popne	{r4, pc}
   13d54:	bl	13f9c <__snprintf_chk@plt+0x3178>
   13d58:	push	{r4, r5, r6, lr}
   13d5c:	mov	r6, r0
   13d60:	mov	r5, r1
   13d64:	mov	r4, r2
   13d68:	bl	1439c <__snprintf_chk@plt+0x3578>
   13d6c:	cmp	r0, #0
   13d70:	popne	{r4, r5, r6, pc}
   13d74:	cmp	r6, #0
   13d78:	beq	13d88 <__snprintf_chk@plt+0x2f64>
   13d7c:	cmp	r5, #0
   13d80:	cmpne	r4, #0
   13d84:	popeq	{r4, r5, r6, pc}
   13d88:	bl	13f9c <__snprintf_chk@plt+0x3178>
   13d8c:	b	13d58 <__snprintf_chk@plt+0x2f34>
   13d90:	push	{r4, lr}
   13d94:	bl	14304 <__snprintf_chk@plt+0x34e0>
   13d98:	cmp	r0, #0
   13d9c:	popne	{r4, pc}
   13da0:	bl	13f9c <__snprintf_chk@plt+0x3178>
   13da4:	mov	r2, r1
   13da8:	mov	r1, r0
   13dac:	mov	r0, #0
   13db0:	b	13d58 <__snprintf_chk@plt+0x2f34>
   13db4:	mov	r2, r1
   13db8:	mov	r1, r0
   13dbc:	mov	r0, #0
   13dc0:	b	13d90 <__snprintf_chk@plt+0x2f6c>
   13dc4:	cmp	r0, #0
   13dc8:	push	{r4, r5, r6, lr}
   13dcc:	mov	r5, r1
   13dd0:	ldr	r4, [r1]
   13dd4:	bne	13e00 <__snprintf_chk@plt+0x2fdc>
   13dd8:	cmp	r4, #0
   13ddc:	bne	13df0 <__snprintf_chk@plt+0x2fcc>
   13de0:	mov	r4, #64	; 0x40
   13de4:	udiv	r4, r4, r2
   13de8:	cmp	r2, #64	; 0x40
   13dec:	addhi	r4, r4, #1
   13df0:	mov	r1, r4
   13df4:	bl	13d58 <__snprintf_chk@plt+0x2f34>
   13df8:	str	r4, [r5]
   13dfc:	pop	{r4, r5, r6, pc}
   13e00:	lsr	r3, r4, #1
   13e04:	add	r3, r3, #1
   13e08:	adds	r4, r4, r3
   13e0c:	bcc	13df0 <__snprintf_chk@plt+0x2fcc>
   13e10:	bl	13f9c <__snprintf_chk@plt+0x3178>
   13e14:	mov	r2, #1
   13e18:	b	13dc4 <__snprintf_chk@plt+0x2fa0>
   13e1c:	ldr	ip, [r1]
   13e20:	push	{r4, r5, r6, r7, r8, lr}
   13e24:	mov	r5, r1
   13e28:	mvn	r8, r3
   13e2c:	lsr	r8, r8, #31
   13e30:	ldr	lr, [sp, #24]
   13e34:	asr	r1, ip, #1
   13e38:	adds	r4, ip, r1
   13e3c:	mvnvs	r4, #-2147483648	; 0x80000000
   13e40:	cmp	r3, r4
   13e44:	movge	r1, #0
   13e48:	andlt	r1, r8, #1
   13e4c:	cmp	r1, #0
   13e50:	movne	r4, r3
   13e54:	smull	r6, r7, r4, lr
   13e58:	cmp	r7, r6, asr #31
   13e5c:	bne	13e74 <__snprintf_chk@plt+0x3050>
   13e60:	cmp	r6, #63	; 0x3f
   13e64:	mov	r1, r6
   13e68:	bgt	13e84 <__snprintf_chk@plt+0x3060>
   13e6c:	mov	r1, #64	; 0x40
   13e70:	b	13e78 <__snprintf_chk@plt+0x3054>
   13e74:	mvn	r1, #-2147483648	; 0x80000000
   13e78:	sdiv	r4, r1, lr
   13e7c:	mls	r6, lr, r4, r1
   13e80:	sub	r1, r1, r6
   13e84:	cmp	r0, #0
   13e88:	sub	r6, r4, ip
   13e8c:	streq	r0, [r5]
   13e90:	cmp	r6, r2
   13e94:	bge	13ec8 <__snprintf_chk@plt+0x30a4>
   13e98:	adds	r4, ip, r2
   13e9c:	bvs	13ec4 <__snprintf_chk@plt+0x30a0>
   13ea0:	cmp	r4, r3
   13ea4:	movle	r3, #0
   13ea8:	andgt	r3, r8, #1
   13eac:	cmp	r3, #0
   13eb0:	bne	13ec4 <__snprintf_chk@plt+0x30a0>
   13eb4:	smull	r2, r3, r4, lr
   13eb8:	cmp	r3, r2, asr #31
   13ebc:	mov	r1, r2
   13ec0:	beq	13ec8 <__snprintf_chk@plt+0x30a4>
   13ec4:	bl	13f9c <__snprintf_chk@plt+0x3178>
   13ec8:	bl	13d10 <__snprintf_chk@plt+0x2eec>
   13ecc:	str	r4, [r5]
   13ed0:	pop	{r4, r5, r6, r7, r8, pc}
   13ed4:	push	{r4, lr}
   13ed8:	bl	13fdc <__snprintf_chk@plt+0x31b8>
   13edc:	cmp	r0, #0
   13ee0:	popne	{r4, pc}
   13ee4:	bl	13f9c <__snprintf_chk@plt+0x3178>
   13ee8:	mov	r1, #1
   13eec:	b	13ed4 <__snprintf_chk@plt+0x30b0>
   13ef0:	push	{r4, lr}
   13ef4:	bl	13fdc <__snprintf_chk@plt+0x31b8>
   13ef8:	cmp	r0, #0
   13efc:	popne	{r4, pc}
   13f00:	bl	13f9c <__snprintf_chk@plt+0x3178>
   13f04:	mov	r1, #1
   13f08:	b	13ef0 <__snprintf_chk@plt+0x30cc>
   13f0c:	push	{r4, r5, r6, lr}
   13f10:	mov	r4, r1
   13f14:	mov	r5, r0
   13f18:	mov	r0, r1
   13f1c:	bl	13ce4 <__snprintf_chk@plt+0x2ec0>
   13f20:	mov	r2, r4
   13f24:	mov	r1, r5
   13f28:	pop	{r4, r5, r6, lr}
   13f2c:	b	10c2c <memcpy@plt>
   13f30:	push	{r4, r5, r6, lr}
   13f34:	mov	r4, r1
   13f38:	mov	r5, r0
   13f3c:	mov	r0, r1
   13f40:	bl	13cf8 <__snprintf_chk@plt+0x2ed4>
   13f44:	mov	r2, r4
   13f48:	mov	r1, r5
   13f4c:	pop	{r4, r5, r6, lr}
   13f50:	b	10c2c <memcpy@plt>
   13f54:	push	{r4, r5, r6, lr}
   13f58:	mov	r5, r0
   13f5c:	add	r0, r1, #1
   13f60:	mov	r4, r1
   13f64:	bl	13cf8 <__snprintf_chk@plt+0x2ed4>
   13f68:	mov	r2, #0
   13f6c:	mov	r1, r5
   13f70:	strb	r2, [r0, r4]
   13f74:	mov	r2, r4
   13f78:	pop	{r4, r5, r6, lr}
   13f7c:	b	10c2c <memcpy@plt>
   13f80:	push	{r4, lr}
   13f84:	mov	r4, r0
   13f88:	bl	10d4c <strlen@plt>
   13f8c:	add	r1, r0, #1
   13f90:	mov	r0, r4
   13f94:	pop	{r4, lr}
   13f98:	b	13f0c <__snprintf_chk@plt+0x30e8>
   13f9c:	ldr	r3, [pc, #44]	; 13fd0 <__snprintf_chk@plt+0x31ac>
   13fa0:	mov	r2, #5
   13fa4:	mov	r0, #0
   13fa8:	push	{r4, lr}
   13fac:	ldr	r1, [pc, #32]	; 13fd4 <__snprintf_chk@plt+0x31b0>
   13fb0:	ldr	r4, [r3]
   13fb4:	bl	10c68 <dcgettext@plt>
   13fb8:	mov	r3, r0
   13fbc:	ldr	r2, [pc, #20]	; 13fd8 <__snprintf_chk@plt+0x31b4>
   13fc0:	mov	r1, #0
   13fc4:	mov	r0, r4
   13fc8:	bl	10cd4 <error@plt>
   13fcc:	bl	10e18 <abort@plt>
   13fd0:	ldrdeq	r5, [r2], -ip
   13fd4:	andeq	r4, r1, pc, asr #29
   13fd8:	andeq	r4, r1, lr, ror sl
   13fdc:	cmp	r1, #0
   13fe0:	cmpne	r0, #0
   13fe4:	beq	1401c <__snprintf_chk@plt+0x31f8>
   13fe8:	push	{r4, r5, r6, lr}
   13fec:	umull	r4, r5, r0, r1
   13ff0:	adds	r3, r5, #0
   13ff4:	movne	r3, #1
   13ff8:	cmp	r4, #0
   13ffc:	blt	14008 <__snprintf_chk@plt+0x31e4>
   14000:	cmp	r3, #0
   14004:	beq	14028 <__snprintf_chk@plt+0x3204>
   14008:	bl	10d58 <__errno_location@plt>
   1400c:	mov	r3, #12
   14010:	str	r3, [r0]
   14014:	mov	r0, #0
   14018:	pop	{r4, r5, r6, pc}
   1401c:	mov	r1, #1
   14020:	mov	r0, r1
   14024:	b	10be4 <calloc@plt>
   14028:	pop	{r4, r5, r6, lr}
   1402c:	b	14024 <__snprintf_chk@plt+0x3200>
   14030:	cmp	r0, #0
   14034:	beq	14054 <__snprintf_chk@plt+0x3230>
   14038:	bge	14058 <__snprintf_chk@plt+0x3234>
   1403c:	push	{r4, lr}
   14040:	bl	10d58 <__errno_location@plt>
   14044:	mov	r3, #12
   14048:	str	r3, [r0]
   1404c:	mov	r0, #0
   14050:	pop	{r4, pc}
   14054:	mov	r0, #1
   14058:	b	10cf8 <malloc@plt>
   1405c:	cmp	r0, #0
   14060:	bne	1406c <__snprintf_chk@plt+0x3248>
   14064:	mov	r0, r1
   14068:	b	14030 <__snprintf_chk@plt+0x320c>
   1406c:	cmp	r1, #0
   14070:	push	{r4, lr}
   14074:	bne	14084 <__snprintf_chk@plt+0x3260>
   14078:	bl	14208 <__snprintf_chk@plt+0x33e4>
   1407c:	mov	r0, #0
   14080:	pop	{r4, pc}
   14084:	blt	14090 <__snprintf_chk@plt+0x326c>
   14088:	pop	{r4, lr}
   1408c:	b	10c74 <realloc@plt>
   14090:	bl	10d58 <__errno_location@plt>
   14094:	mov	r3, #12
   14098:	str	r3, [r0]
   1409c:	b	1407c <__snprintf_chk@plt+0x3258>
   140a0:	push	{r4, r5, r6, lr}
   140a4:	mov	r4, r0
   140a8:	bl	10cb0 <__fpending@plt>
   140ac:	mov	r5, r0
   140b0:	mov	r0, r4
   140b4:	bl	10cbc <ferror_unlocked@plt>
   140b8:	mov	r6, r0
   140bc:	mov	r0, r4
   140c0:	bl	14110 <__snprintf_chk@plt+0x32ec>
   140c4:	cmp	r6, #0
   140c8:	mov	r4, r0
   140cc:	bne	140f8 <__snprintf_chk@plt+0x32d4>
   140d0:	cmp	r0, #0
   140d4:	beq	140f0 <__snprintf_chk@plt+0x32cc>
   140d8:	cmp	r5, #0
   140dc:	bne	14108 <__snprintf_chk@plt+0x32e4>
   140e0:	bl	10d58 <__errno_location@plt>
   140e4:	ldr	r4, [r0]
   140e8:	subs	r4, r4, #9
   140ec:	mvnne	r4, #0
   140f0:	mov	r0, r4
   140f4:	pop	{r4, r5, r6, pc}
   140f8:	cmp	r0, #0
   140fc:	bne	14108 <__snprintf_chk@plt+0x32e4>
   14100:	bl	10d58 <__errno_location@plt>
   14104:	str	r4, [r0]
   14108:	mvn	r4, #0
   1410c:	b	140f0 <__snprintf_chk@plt+0x32cc>
   14110:	push	{r0, r1, r2, r4, r5, lr}
   14114:	mov	r4, r0
   14118:	bl	10da0 <fileno@plt>
   1411c:	cmp	r0, #0
   14120:	mov	r0, r4
   14124:	bge	14134 <__snprintf_chk@plt+0x3310>
   14128:	add	sp, sp, #12
   1412c:	pop	{r4, r5, lr}
   14130:	b	10db8 <fclose@plt>
   14134:	bl	10d10 <__freading@plt>
   14138:	cmp	r0, #0
   1413c:	bne	14178 <__snprintf_chk@plt+0x3354>
   14140:	mov	r0, r4
   14144:	bl	141b8 <__snprintf_chk@plt+0x3394>
   14148:	cmp	r0, #0
   1414c:	bne	141ac <__snprintf_chk@plt+0x3388>
   14150:	mov	r5, #0
   14154:	mov	r0, r4
   14158:	bl	10db8 <fclose@plt>
   1415c:	cmp	r5, #0
   14160:	beq	14170 <__snprintf_chk@plt+0x334c>
   14164:	bl	10d58 <__errno_location@plt>
   14168:	str	r5, [r0]
   1416c:	mvn	r0, #0
   14170:	add	sp, sp, #12
   14174:	pop	{r4, r5, pc}
   14178:	mov	r0, r4
   1417c:	bl	10da0 <fileno@plt>
   14180:	mov	r3, #1
   14184:	mov	r2, #0
   14188:	str	r3, [sp]
   1418c:	mov	r3, #0
   14190:	bl	10c98 <lseek64@plt>
   14194:	mvn	r3, #0
   14198:	mvn	r2, #0
   1419c:	cmp	r1, r3
   141a0:	cmpeq	r0, r2
   141a4:	bne	14140 <__snprintf_chk@plt+0x331c>
   141a8:	b	14150 <__snprintf_chk@plt+0x332c>
   141ac:	bl	10d58 <__errno_location@plt>
   141b0:	ldr	r5, [r0]
   141b4:	b	14154 <__snprintf_chk@plt+0x3330>
   141b8:	push	{r0, r1, r4, lr}
   141bc:	subs	r4, r0, #0
   141c0:	bne	141d4 <__snprintf_chk@plt+0x33b0>
   141c4:	mov	r0, r4
   141c8:	add	sp, sp, #8
   141cc:	pop	{r4, lr}
   141d0:	b	10c08 <fflush@plt>
   141d4:	bl	10d10 <__freading@plt>
   141d8:	cmp	r0, #0
   141dc:	beq	141c4 <__snprintf_chk@plt+0x33a0>
   141e0:	ldr	r3, [r4]
   141e4:	tst	r3, #256	; 0x100
   141e8:	beq	141c4 <__snprintf_chk@plt+0x33a0>
   141ec:	mov	r3, #1
   141f0:	mov	r2, #0
   141f4:	mov	r0, r4
   141f8:	str	r3, [sp]
   141fc:	mov	r3, #0
   14200:	bl	14258 <__snprintf_chk@plt+0x3434>
   14204:	b	141c4 <__snprintf_chk@plt+0x33a0>
   14208:	push	{r0, r1, r2, r4, r5, lr}
   1420c:	mov	r5, r0
   14210:	bl	10d58 <__errno_location@plt>
   14214:	mov	r4, r0
   14218:	mov	r0, r5
   1421c:	ldr	r3, [r4]
   14220:	str	r3, [sp]
   14224:	str	r3, [sp, #4]
   14228:	mov	r3, #0
   1422c:	str	r3, [r4]
   14230:	bl	10c14 <free@plt>
   14234:	ldr	r3, [r4]
   14238:	add	r2, sp, #8
   1423c:	clz	r3, r3
   14240:	lsr	r3, r3, #5
   14244:	add	r3, r2, r3, lsl #2
   14248:	ldr	r3, [r3, #-8]
   1424c:	str	r3, [r4]
   14250:	add	sp, sp, #12
   14254:	pop	{r4, r5, pc}
   14258:	push	{r0, r1, r4, r5, r6, r7, r8, lr}
   1425c:	mov	r4, r0
   14260:	ldmib	r0, {ip, lr}
   14264:	ldr	r8, [sp, #32]
   14268:	cmp	lr, ip
   1426c:	bne	142dc <__snprintf_chk@plt+0x34b8>
   14270:	ldr	ip, [r0, #16]
   14274:	ldr	lr, [r0, #20]
   14278:	cmp	lr, ip
   1427c:	bne	142dc <__snprintf_chk@plt+0x34b8>
   14280:	ldr	r5, [r0, #36]	; 0x24
   14284:	cmp	r5, #0
   14288:	bne	142dc <__snprintf_chk@plt+0x34b8>
   1428c:	mov	r6, r2
   14290:	mov	r7, r3
   14294:	bl	10da0 <fileno@plt>
   14298:	mov	r2, r6
   1429c:	mov	r3, r7
   142a0:	str	r8, [sp]
   142a4:	bl	10c98 <lseek64@plt>
   142a8:	mvn	r3, #0
   142ac:	mvn	r2, #0
   142b0:	cmp	r1, r3
   142b4:	cmpeq	r0, r2
   142b8:	mvneq	r0, #0
   142bc:	beq	142d4 <__snprintf_chk@plt+0x34b0>
   142c0:	ldr	r3, [r4]
   142c4:	strd	r0, [r4, #80]	; 0x50
   142c8:	mov	r0, r5
   142cc:	bic	r3, r3, #16
   142d0:	str	r3, [r4]
   142d4:	add	sp, sp, #8
   142d8:	pop	{r4, r5, r6, r7, r8, pc}
   142dc:	mov	r0, r4
   142e0:	str	r8, [sp, #32]
   142e4:	add	sp, sp, #8
   142e8:	pop	{r4, r5, r6, r7, r8, lr}
   142ec:	b	10dc4 <fseeko64@plt>
   142f0:	b	14030 <__snprintf_chk@plt+0x320c>
   142f4:	cmp	r1, #0
   142f8:	orreq	r1, r1, #1
   142fc:	b	1405c <__snprintf_chk@plt+0x3238>
   14300:	b	13fdc <__snprintf_chk@plt+0x31b8>
   14304:	cmp	r2, #0
   14308:	cmpne	r1, #0
   1430c:	moveq	r2, #1
   14310:	moveq	r1, r2
   14314:	b	1439c <__snprintf_chk@plt+0x3578>
   14318:	push	{r4, lr}
   1431c:	mov	r0, #14
   14320:	bl	10de8 <nl_langinfo@plt>
   14324:	cmp	r0, #0
   14328:	beq	14340 <__snprintf_chk@plt+0x351c>
   1432c:	ldrb	r2, [r0]
   14330:	ldr	r3, [pc, #16]	; 14348 <__snprintf_chk@plt+0x3524>
   14334:	cmp	r2, #0
   14338:	moveq	r0, r3
   1433c:	pop	{r4, pc}
   14340:	ldr	r0, [pc]	; 14348 <__snprintf_chk@plt+0x3524>
   14344:	pop	{r4, pc}
   14348:	andeq	r4, r1, r0, ror #29
   1434c:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
   14350:	subs	r5, r0, #0
   14354:	mov	r7, r2
   14358:	addeq	r5, sp, #4
   1435c:	mov	r6, r1
   14360:	mov	r0, r5
   14364:	bl	10cc8 <mbrtowc@plt>
   14368:	cmp	r7, #0
   1436c:	cmnne	r0, #3
   14370:	mov	r4, r0
   14374:	bls	14390 <__snprintf_chk@plt+0x356c>
   14378:	mov	r0, #0
   1437c:	bl	143c8 <__snprintf_chk@plt+0x35a4>
   14380:	cmp	r0, #0
   14384:	ldrbeq	r3, [r6]
   14388:	moveq	r4, #1
   1438c:	streq	r3, [r5]
   14390:	mov	r0, r4
   14394:	add	sp, sp, #12
   14398:	pop	{r4, r5, r6, r7, pc}
   1439c:	umull	r2, r3, r1, r2
   143a0:	cmp	r3, #0
   143a4:	bne	143b0 <__snprintf_chk@plt+0x358c>
   143a8:	mov	r1, r2
   143ac:	b	1405c <__snprintf_chk@plt+0x3238>
   143b0:	push	{r4, lr}
   143b4:	bl	10d58 <__errno_location@plt>
   143b8:	mov	r3, #12
   143bc:	str	r3, [r0]
   143c0:	mov	r0, #0
   143c4:	pop	{r4, pc}
   143c8:	push	{lr}		; (str lr, [sp, #-4]!)
   143cc:	sub	sp, sp, #268	; 0x10c
   143d0:	movw	r2, #257	; 0x101
   143d4:	add	r1, sp, #4
   143d8:	bl	14424 <__snprintf_chk@plt+0x3600>
   143dc:	cmp	r0, #0
   143e0:	movne	r0, #0
   143e4:	bne	14414 <__snprintf_chk@plt+0x35f0>
   143e8:	ldr	r1, [pc, #44]	; 1441c <__snprintf_chk@plt+0x35f8>
   143ec:	add	r0, sp, #4
   143f0:	bl	10bfc <strcmp@plt>
   143f4:	cmp	r0, #0
   143f8:	beq	14410 <__snprintf_chk@plt+0x35ec>
   143fc:	ldr	r1, [pc, #28]	; 14420 <__snprintf_chk@plt+0x35fc>
   14400:	add	r0, sp, #4
   14404:	bl	10bfc <strcmp@plt>
   14408:	adds	r0, r0, #0
   1440c:	movne	r0, #1
   14410:	and	r0, r0, #1
   14414:	add	sp, sp, #268	; 0x10c
   14418:	pop	{pc}		; (ldr pc, [sp], #4)
   1441c:	andeq	r4, r1, r6, ror #29
   14420:	andeq	r4, r1, r8, ror #29
   14424:	push	{r4, r5, r6, lr}
   14428:	mov	r5, r1
   1442c:	mov	r1, #0
   14430:	mov	r4, r2
   14434:	bl	10dd0 <setlocale@plt>
   14438:	subs	r6, r0, #0
   1443c:	bne	14450 <__snprintf_chk@plt+0x362c>
   14440:	cmp	r4, #0
   14444:	mov	r0, #22
   14448:	strbne	r6, [r5]
   1444c:	pop	{r4, r5, r6, pc}
   14450:	bl	10d4c <strlen@plt>
   14454:	cmp	r4, r0
   14458:	bls	14474 <__snprintf_chk@plt+0x3650>
   1445c:	add	r2, r0, #1
   14460:	mov	r1, r6
   14464:	mov	r0, r5
   14468:	bl	10c2c <memcpy@plt>
   1446c:	mov	r0, #0
   14470:	pop	{r4, r5, r6, pc}
   14474:	cmp	r4, #0
   14478:	beq	14498 <__snprintf_chk@plt+0x3674>
   1447c:	sub	r4, r4, #1
   14480:	mov	r1, r6
   14484:	mov	r2, r4
   14488:	mov	r0, r5
   1448c:	bl	10c2c <memcpy@plt>
   14490:	mov	r3, #0
   14494:	strb	r3, [r5, r4]
   14498:	mov	r0, #34	; 0x22
   1449c:	pop	{r4, r5, r6, pc}
   144a0:	mov	r1, #0
   144a4:	b	10dd0 <setlocale@plt>
   144a8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   144ac:	mov	r7, r0
   144b0:	ldr	r6, [pc, #72]	; 14500 <__snprintf_chk@plt+0x36dc>
   144b4:	ldr	r5, [pc, #72]	; 14504 <__snprintf_chk@plt+0x36e0>
   144b8:	add	r6, pc, r6
   144bc:	add	r5, pc, r5
   144c0:	sub	r6, r6, r5
   144c4:	mov	r8, r1
   144c8:	mov	r9, r2
   144cc:	bl	10bc4 <calloc@plt-0x20>
   144d0:	asrs	r6, r6, #2
   144d4:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   144d8:	mov	r4, #0
   144dc:	add	r4, r4, #1
   144e0:	ldr	r3, [r5], #4
   144e4:	mov	r2, r9
   144e8:	mov	r1, r8
   144ec:	mov	r0, r7
   144f0:	blx	r3
   144f4:	cmp	r6, r4
   144f8:	bne	144dc <__snprintf_chk@plt+0x36b8>
   144fc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14500:	andeq	r0, r1, r4, asr sl
   14504:	andeq	r0, r1, ip, asr #20
   14508:	bx	lr
   1450c:	ldr	r3, [pc, #12]	; 14520 <__snprintf_chk@plt+0x36fc>
   14510:	mov	r1, #0
   14514:	add	r3, pc, r3
   14518:	ldr	r2, [r3]
   1451c:	b	10d70 <__cxa_atexit@plt>
   14520:			; <UNDEFINED> instruction: 0x00010bbc

Disassembly of section .fini:

00014524 <.fini>:
   14524:	push	{r3, lr}
   14528:	pop	{r3, pc}
