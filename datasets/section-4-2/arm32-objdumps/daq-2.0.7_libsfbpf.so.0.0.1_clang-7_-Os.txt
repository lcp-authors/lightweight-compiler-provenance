
../repos/daq-2.0.7/sfbpf/.libs/libsfbpf.so.0.0.1:     file format elf32-littlearm


Disassembly of section .init:

00000ddc <_init>:
 ddc:	push	{r3, lr}
 de0:	bl	fdc <call_weak_fn>
 de4:	pop	{r3, pc}

Disassembly of section .plt:

00000de8 <.plt>:
 de8:	push	{lr}		; (str lr, [sp, #-4]!)
 dec:	ldr	lr, [pc, #4]	; df8 <.plt+0x10>
 df0:	add	lr, pc, lr
 df4:	ldr	pc, [lr, #8]!
 df8:	.word	0x0002f208

00000dfc <calloc@plt>:
 dfc:	add	ip, pc, #0, 12
 e00:	add	ip, ip, #192512	; 0x2f000
 e04:	ldr	pc, [ip, #520]!	; 0x208

00000e08 <strcmp@plt>:
 e08:	add	ip, pc, #0, 12
 e0c:	add	ip, ip, #192512	; 0x2f000
 e10:	ldr	pc, [ip, #512]!	; 0x200

00000e14 <__cxa_finalize@plt>:
 e14:	add	ip, pc, #0, 12
 e18:	add	ip, ip, #192512	; 0x2f000
 e1c:	ldr	pc, [ip, #504]!	; 0x1f8

00000e20 <printf@plt>:
 e20:	add	ip, pc, #0, 12
 e24:	add	ip, ip, #192512	; 0x2f000
 e28:	ldr	pc, [ip, #496]!	; 0x1f0

00000e2c <fopen@plt>:
 e2c:	add	ip, pc, #0, 12
 e30:	add	ip, ip, #192512	; 0x2f000
 e34:	ldr	pc, [ip, #488]!	; 0x1e8

00000e38 <getprotobyname@plt>:
 e38:	add	ip, pc, #0, 12
 e3c:	add	ip, ip, #192512	; 0x2f000
 e40:	ldr	pc, [ip, #480]!	; 0x1e0

00000e44 <longjmp@plt>:
 e44:	add	ip, pc, #0, 12
 e48:	add	ip, ip, #192512	; 0x2f000
 e4c:	ldr	pc, [ip, #472]!	; 0x1d8

00000e50 <_setjmp@plt>:
 e50:	add	ip, pc, #0, 12
 e54:	add	ip, ip, #192512	; 0x2f000
 e58:	ldr	pc, [ip, #464]!	; 0x1d0

00000e5c <free@plt>:
 e5c:	add	ip, pc, #0, 12
 e60:	add	ip, ip, #192512	; 0x2f000
 e64:	ldr	pc, [ip, #456]!	; 0x1c8

00000e68 <getnetbyname@plt>:
 e68:	add	ip, pc, #0, 12
 e6c:	add	ip, ip, #192512	; 0x2f000
 e70:	ldr	pc, [ip, #448]!	; 0x1c0

00000e74 <ferror@plt>:
 e74:	add	ip, pc, #0, 12
 e78:	add	ip, ip, #192512	; 0x2f000
 e7c:	ldr	pc, [ip, #440]!	; 0x1b8

00000e80 <memcpy@plt>:
 e80:	add	ip, pc, #0, 12
 e84:	add	ip, ip, #192512	; 0x2f000
 e88:	ldr	pc, [ip, #432]!	; 0x1b0

00000e8c <strdup@plt>:
 e8c:	add	ip, pc, #0, 12
 e90:	add	ip, ip, #192512	; 0x2f000
 e94:	ldr	pc, [ip, #424]!	; 0x1a8

00000e98 <rewind@plt>:
 e98:	add	ip, pc, #0, 12
 e9c:	add	ip, ip, #192512	; 0x2f000
 ea0:	ldr	pc, [ip, #416]!	; 0x1a0

00000ea4 <realloc@plt>:
 ea4:	add	ip, pc, #0, 12
 ea8:	add	ip, ip, #192512	; 0x2f000
 eac:	ldr	pc, [ip, #408]!	; 0x198

00000eb0 <fwrite@plt>:
 eb0:	add	ip, pc, #0, 12
 eb4:	add	ip, ip, #192512	; 0x2f000
 eb8:	ldr	pc, [ip, #400]!	; 0x190

00000ebc <fread@plt>:
 ebc:	add	ip, pc, #0, 12
 ec0:	add	ip, ip, #192512	; 0x2f000
 ec4:	ldr	pc, [ip, #392]!	; 0x188

00000ec8 <puts@plt>:
 ec8:	add	ip, pc, #0, 12
 ecc:	add	ip, ip, #192512	; 0x2f000
 ed0:	ldr	pc, [ip, #384]!	; 0x180

00000ed4 <malloc@plt>:
 ed4:	add	ip, pc, #0, 12
 ed8:	add	ip, ip, #192512	; 0x2f000
 edc:	ldr	pc, [ip, #376]!	; 0x178

00000ee0 <__gmon_start__@plt>:
 ee0:	add	ip, pc, #0, 12
 ee4:	add	ip, ip, #192512	; 0x2f000
 ee8:	ldr	pc, [ip, #368]!	; 0x170

00000eec <__ctype_b_loc@plt>:
 eec:	add	ip, pc, #0, 12
 ef0:	add	ip, ip, #192512	; 0x2f000
 ef4:	ldr	pc, [ip, #360]!	; 0x168

00000ef8 <exit@plt>:
 ef8:	add	ip, pc, #0, 12
 efc:	add	ip, ip, #192512	; 0x2f000
 f00:	ldr	pc, [ip, #352]!	; 0x160

00000f04 <strlen@plt>:
 f04:	add	ip, pc, #0, 12
 f08:	add	ip, ip, #192512	; 0x2f000
 f0c:	ldr	pc, [ip, #344]!	; 0x158

00000f10 <strchr@plt>:
 f10:	add	ip, pc, #0, 12
 f14:	add	ip, ip, #192512	; 0x2f000
 f18:	ldr	pc, [ip, #336]!	; 0x150

00000f1c <fprintf@plt>:
 f1c:	add	ip, pc, #0, 12
 f20:	add	ip, ip, #192512	; 0x2f000
 f24:	ldr	pc, [ip, #328]!	; 0x148

00000f28 <__errno_location@plt>:
 f28:	add	ip, pc, #0, 12
 f2c:	add	ip, ip, #192512	; 0x2f000
 f30:	ldr	pc, [ip, #320]!	; 0x140

00000f34 <getservbyname@plt>:
 f34:	add	ip, pc, #0, 12
 f38:	add	ip, ip, #192512	; 0x2f000
 f3c:	ldr	pc, [ip, #312]!	; 0x138

00000f40 <memset@plt>:
 f40:	add	ip, pc, #0, 12
 f44:	add	ip, ip, #192512	; 0x2f000
 f48:	ldr	pc, [ip, #304]!	; 0x130

00000f4c <putchar@plt>:
 f4c:	add	ip, pc, #0, 12
 f50:	add	ip, ip, #192512	; 0x2f000
 f54:	ldr	pc, [ip, #296]!	; 0x128

00000f58 <strncpy@plt>:
 f58:	add	ip, pc, #0, 12
 f5c:	add	ip, ip, #192512	; 0x2f000
 f60:	ldr	pc, [ip, #288]!	; 0x120

00000f64 <fileno@plt>:
 f64:	add	ip, pc, #0, 12
 f68:	add	ip, ip, #192512	; 0x2f000
 f6c:	ldr	pc, [ip, #280]!	; 0x118

00000f70 <sscanf@plt>:
 f70:	add	ip, pc, #0, 12
 f74:	add	ip, ip, #192512	; 0x2f000
 f78:	ldr	pc, [ip, #272]!	; 0x110

00000f7c <clearerr@plt>:
 f7c:	add	ip, pc, #0, 12
 f80:	add	ip, ip, #192512	; 0x2f000
 f84:	ldr	pc, [ip, #264]!	; 0x108

00000f88 <vsnprintf@plt>:
 f88:	add	ip, pc, #0, 12
 f8c:	add	ip, ip, #192512	; 0x2f000
 f90:	ldr	pc, [ip, #256]!	; 0x100

00000f94 <freeaddrinfo@plt>:
 f94:	add	ip, pc, #0, 12
 f98:	add	ip, ip, #192512	; 0x2f000
 f9c:	ldr	pc, [ip, #248]!	; 0xf8

00000fa0 <getaddrinfo@plt>:
 fa0:	add	ip, pc, #0, 12
 fa4:	add	ip, ip, #192512	; 0x2f000
 fa8:	ldr	pc, [ip, #240]!	; 0xf0

00000fac <gethostbyname@plt>:
 fac:	add	ip, pc, #0, 12
 fb0:	add	ip, ip, #192512	; 0x2f000
 fb4:	ldr	pc, [ip, #232]!	; 0xe8

00000fb8 <isatty@plt>:
 fb8:	add	ip, pc, #0, 12
 fbc:	add	ip, ip, #192512	; 0x2f000
 fc0:	ldr	pc, [ip, #224]!	; 0xe0

00000fc4 <abort@plt>:
 fc4:	add	ip, pc, #0, 12
 fc8:	add	ip, ip, #192512	; 0x2f000
 fcc:	ldr	pc, [ip, #216]!	; 0xd8

00000fd0 <getc@plt>:
 fd0:	add	ip, pc, #0, 12
 fd4:	add	ip, ip, #192512	; 0x2f000
 fd8:	ldr	pc, [ip, #208]!	; 0xd0

Disassembly of section .text:

00000fdc <call_weak_fn>:
     fdc:	ldr	r3, [pc, #20]	; ff8 <call_weak_fn+0x1c>
     fe0:	ldr	r2, [pc, #20]	; ffc <call_weak_fn+0x20>
     fe4:	add	r3, pc, r3
     fe8:	ldr	r2, [r3, r2]
     fec:	cmp	r2, #0
     ff0:	bxeq	lr
     ff4:	b	ee0 <__gmon_start__@plt>
     ff8:	.word	0x0002f014
     ffc:	.word	0x000000bc

00001000 <deregister_tm_clones>:
    1000:	ldr	r0, [pc, #44]	; 1034 <deregister_tm_clones+0x34>
    1004:	ldr	r3, [pc, #44]	; 1038 <deregister_tm_clones+0x38>
    1008:	add	r0, pc, r0
    100c:	add	r3, pc, r3
    1010:	cmp	r3, r0
    1014:	ldr	r3, [pc, #32]	; 103c <deregister_tm_clones+0x3c>
    1018:	add	r3, pc, r3
    101c:	bxeq	lr
    1020:	ldr	r2, [pc, #24]	; 1040 <deregister_tm_clones+0x40>
    1024:	ldr	r3, [r3, r2]
    1028:	cmp	r3, #0
    102c:	bxeq	lr
    1030:	bx	r3
    1034:	.word	0x0002f180
    1038:	.word	0x0002f17c
    103c:	.word	0x0002efe0
    1040:	.word	0x000000b0

00001044 <register_tm_clones>:
    1044:	ldr	r0, [pc, #56]	; 1084 <register_tm_clones+0x40>
    1048:	ldr	r3, [pc, #56]	; 1088 <register_tm_clones+0x44>
    104c:	add	r0, pc, r0
    1050:	add	r3, pc, r3
    1054:	sub	r1, r3, r0
    1058:	ldr	r3, [pc, #44]	; 108c <register_tm_clones+0x48>
    105c:	asr	r1, r1, #2
    1060:	add	r3, pc, r3
    1064:	add	r1, r1, r1, lsr #31
    1068:	asrs	r1, r1, #1
    106c:	bxeq	lr
    1070:	ldr	r2, [pc, #24]	; 1090 <register_tm_clones+0x4c>
    1074:	ldr	r3, [r3, r2]
    1078:	cmp	r3, #0
    107c:	bxeq	lr
    1080:	bx	r3
    1084:	.word	0x0002f13c
    1088:	.word	0x0002f138
    108c:	.word	0x0002ef98
    1090:	.word	0x000000cc

00001094 <__do_global_dtors_aux>:
    1094:	ldr	r3, [pc, #76]	; 10e8 <__do_global_dtors_aux+0x54>
    1098:	ldr	r2, [pc, #76]	; 10ec <__do_global_dtors_aux+0x58>
    109c:	add	r3, pc, r3
    10a0:	add	r2, pc, r2
    10a4:	ldrb	r3, [r3]
    10a8:	cmp	r3, #0
    10ac:	bxne	lr
    10b0:	ldr	r3, [pc, #56]	; 10f0 <__do_global_dtors_aux+0x5c>
    10b4:	push	{r4, lr}
    10b8:	ldr	r3, [r2, r3]
    10bc:	cmp	r3, #0
    10c0:	beq	10d0 <__do_global_dtors_aux+0x3c>
    10c4:	ldr	r3, [pc, #40]	; 10f4 <__do_global_dtors_aux+0x60>
    10c8:	ldr	r0, [pc, r3]
    10cc:	bl	e14 <__cxa_finalize@plt>
    10d0:	bl	1000 <deregister_tm_clones>
    10d4:	ldr	r3, [pc, #28]	; 10f8 <__do_global_dtors_aux+0x64>
    10d8:	mov	r2, #1
    10dc:	add	r3, pc, r3
    10e0:	strb	r2, [r3]
    10e4:	pop	{r4, pc}
    10e8:	.word	0x0002f0ec
    10ec:	.word	0x0002ef58
    10f0:	.word	0x000000ac
    10f4:	.word	0x0002f000
    10f8:	.word	0x0002f0ac

000010fc <frame_dummy>:
    10fc:	b	1044 <register_tm_clones>

00001100 <sfbpf_filter>:
    1100:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    1104:	add	fp, sp, #24
    1108:	sub	sp, sp, #64	; 0x40
    110c:	cmp	r0, #0
    1110:	beq	112c <sfbpf_filter+0x2c>
    1114:	sub	r9, r0, #8
    1118:	mov	r7, #0
    111c:	mov	ip, sp
    1120:	mov	lr, #60	; 0x3c
    1124:	mov	r8, #0
    1128:	b	14ec <sfbpf_filter+0x3ec>
    112c:	mvn	r0, #0
    1130:	b	161c <sfbpf_filter+0x51c>
    1134:	ldr	r7, [r9, #12]
    1138:	mov	r9, r6
    113c:	b	14ec <sfbpf_filter+0x3ec>
    1140:	cmp	r7, #107	; 0x6b
    1144:	bgt	11b4 <sfbpf_filter+0xb4>
    1148:	sub	r4, r7, #68	; 0x44
    114c:	cmp	r4, #16
    1150:	bhi	1218 <sfbpf_filter+0x118>
    1154:	add	r7, pc, #4
    1158:	ldr	r4, [r7, r4, lsl #2]
    115c:	add	pc, r7, r4
    1160:	.word	0x00000044
    1164:	.word	0x00000298
    1168:	.word	0x000004cc
    116c:	.word	0x000004cc
    1170:	.word	0x000002a4
    1174:	.word	0x000004cc
    1178:	.word	0x000004cc
    117c:	.word	0x000004cc
    1180:	.word	0x000001ac
    1184:	.word	0x000002d0
    1188:	.word	0x000004cc
    118c:	.word	0x000004cc
    1190:	.word	0x000002ec
    1194:	.word	0x000004cc
    1198:	.word	0x000004cc
    119c:	.word	0x000004cc
    11a0:	.word	0x00000308
    11a4:	ldr	r4, [r9, #12]
    11a8:	mov	r9, r6
    11ac:	orr	r7, r4, r0
    11b0:	b	14ec <sfbpf_filter+0x3ec>
    11b4:	cmp	r7, #123	; 0x7b
    11b8:	ble	1260 <sfbpf_filter+0x160>
    11bc:	sub	r4, r7, #124	; 0x7c
    11c0:	cmp	r4, #11
    11c4:	bhi	1478 <sfbpf_filter+0x378>
    11c8:	add	r5, pc, #12
    11cc:	mov	r9, r6
    11d0:	mov	r7, r2
    11d4:	ldr	r4, [r5, r4, lsl #2]
    11d8:	add	pc, r5, r4
    11dc:	.word	0x00000030
    11e0:	.word	0x00000450
    11e4:	.word	0x00000450
    11e8:	.word	0x00000450
    11ec:	.word	0x00000310
    11f0:	.word	0x000002bc
    11f4:	.word	0x00000450
    11f8:	.word	0x00000450
    11fc:	.word	0x000002cc
    1200:	.word	0x00000450
    1204:	.word	0x00000450
    1208:	.word	0x0000013c
    120c:	lsr	r7, r0, r8
    1210:	mov	r9, r6
    1214:	b	14ec <sfbpf_filter+0x3ec>
    1218:	sub	r4, r7, #92	; 0x5c
    121c:	cmp	r4, #8
    1220:	bhi	162c <sfbpf_filter+0x52c>
    1224:	add	r7, pc, #4
    1228:	ldr	r4, [r7, r4, lsl #2]
    122c:	add	pc, r7, r4
    1230:	.word	0x00000024
    1234:	.word	0x000003fc
    1238:	.word	0x000003fc
    123c:	.word	0x000003fc
    1240:	.word	0x00000284
    1244:	.word	0x00000294
    1248:	.word	0x000003fc
    124c:	.word	0x000003fc
    1250:	.word	0x000000f4
    1254:	and	r7, r8, r0
    1258:	mov	r9, r6
    125c:	b	14ec <sfbpf_filter+0x3ec>
    1260:	cmp	r7, #108	; 0x6c
    1264:	bne	14d8 <sfbpf_filter+0x3d8>
    1268:	lsl	r7, r0, r8
    126c:	mov	r9, r6
    1270:	b	14ec <sfbpf_filter+0x3ec>
    1274:	ldr	r4, [r9, #12]
    1278:	str	r8, [ip, r4, lsl #2]
    127c:	b	14cc <sfbpf_filter+0x3cc>
    1280:	ldr	r4, [r9, #12]
    1284:	mov	r9, r6
    1288:	add	r7, r4, r0
    128c:	b	14ec <sfbpf_filter+0x3ec>
    1290:	ldr	r4, [r9, #12]
    1294:	b	1440 <sfbpf_filter+0x340>
    1298:	mov	r9, r6
    129c:	mov	r7, r0
    12a0:	mov	r8, r0
    12a4:	b	14ec <sfbpf_filter+0x3ec>
    12a8:	add	r7, r8, r0
    12ac:	mov	r9, r6
    12b0:	b	14ec <sfbpf_filter+0x3ec>
    12b4:	ldr	r4, [r9, #12]
    12b8:	mov	r9, r6
    12bc:	sub	r7, r0, r4
    12c0:	b	14ec <sfbpf_filter+0x3ec>
    12c4:	sub	r7, r0, r8
    12c8:	mov	r9, r6
    12cc:	b	14ec <sfbpf_filter+0x3ec>
    12d0:	mov	r4, #11
    12d4:	cmp	r0, r8
    12d8:	movweq	r4, #10
    12dc:	b	143c <sfbpf_filter+0x33c>
    12e0:	ldr	r4, [r9, #12]
    12e4:	mov	r9, r6
    12e8:	mul	r7, r4, r0
    12ec:	b	14ec <sfbpf_filter+0x3ec>
    12f0:	mov	r4, #10
    12f4:	cmp	r0, r8
    12f8:	movwcc	r4, #11
    12fc:	b	143c <sfbpf_filter+0x33c>
    1300:	ldr	r0, [r9, #12]
    1304:	add	r0, r0, r8
    1308:	b	1360 <sfbpf_filter+0x260>
    130c:	orr	r7, r8, r0
    1310:	mov	r9, r6
    1314:	b	14ec <sfbpf_filter+0x3ec>
    1318:	mov	r9, r6
    131c:	mov	r7, r8
    1320:	b	14ec <sfbpf_filter+0x3ec>
    1324:	ldr	r4, [r9, #12]
    1328:	mov	r9, r6
    132c:	lsl	r7, r0, r4
    1330:	b	14ec <sfbpf_filter+0x3ec>
    1334:	ldr	r8, [r9, #12]
    1338:	b	14cc <sfbpf_filter+0x3cc>
    133c:	ldr	r4, [r9, #12]
    1340:	str	r0, [ip, r4, lsl #2]
    1344:	b	14cc <sfbpf_filter+0x3cc>
    1348:	ldr	r4, [r9, #12]
    134c:	mov	r5, #11
    1350:	cmp	r0, r4
    1354:	movweq	r5, #10
    1358:	b	13dc <sfbpf_filter+0x2dc>
    135c:	ldr	r0, [r9, #12]
    1360:	add	r4, r0, #4
    1364:	cmp	r4, r3
    1368:	bhi	1624 <sfbpf_filter+0x524>
    136c:	ldr	r0, [r1, r0]
    1370:	mov	r9, r6
    1374:	rev	r7, r0
    1378:	b	14ec <sfbpf_filter+0x3ec>
    137c:	ldr	r4, [r9, #12]
    1380:	mov	r5, #11
    1384:	cmp	r0, r4
    1388:	movwhi	r5, #10
    138c:	b	13dc <sfbpf_filter+0x2dc>
    1390:	ldr	r0, [r9, #12]
    1394:	b	140c <sfbpf_filter+0x30c>
    1398:	mul	r7, r8, r0
    139c:	mov	r9, r6
    13a0:	b	14ec <sfbpf_filter+0x3ec>
    13a4:	mov	r4, #11
    13a8:	cmp	r0, r8
    13ac:	movwhi	r4, #10
    13b0:	b	143c <sfbpf_filter+0x33c>
    13b4:	ldr	r0, [r9, #12]
    13b8:	b	1454 <sfbpf_filter+0x354>
    13bc:	ldr	r4, [r9, #12]
    13c0:	mov	r9, r6
    13c4:	udiv	r7, r0, r4
    13c8:	b	14ec <sfbpf_filter+0x3ec>
    13cc:	ldr	r4, [r9, #12]
    13d0:	mov	r5, #10
    13d4:	cmp	r0, r4
    13d8:	movwcc	r5, #11
    13dc:	ldrb	r4, [r9, r5]
    13e0:	b	1440 <sfbpf_filter+0x340>
    13e4:	cmp	r8, #0
    13e8:	beq	1624 <sfbpf_filter+0x524>
    13ec:	udiv	r7, r0, r8
    13f0:	mov	r9, r6
    13f4:	b	14ec <sfbpf_filter+0x3ec>
    13f8:	ldr	r4, [r9, #12]
    13fc:	tst	r4, r0
    1400:	b	1434 <sfbpf_filter+0x334>
    1404:	ldr	r0, [r9, #12]
    1408:	add	r0, r0, r8
    140c:	add	r4, r0, #2
    1410:	cmp	r4, r3
    1414:	bhi	1624 <sfbpf_filter+0x524>
    1418:	mov	r4, r1
    141c:	mov	r9, r6
    1420:	ldrb	r0, [r4, r0]!
    1424:	ldrb	r4, [r4, #1]
    1428:	orr	r7, r4, r0, lsl #8
    142c:	b	14ec <sfbpf_filter+0x3ec>
    1430:	tst	r8, r0
    1434:	mov	r4, #10
    1438:	movweq	r4, #11
    143c:	ldrb	r4, [r9, r4]
    1440:	add	r9, r6, r4, lsl #3
    1444:	mov	r7, r0
    1448:	b	14ec <sfbpf_filter+0x3ec>
    144c:	ldr	r0, [r9, #12]
    1450:	add	r0, r0, r8
    1454:	cmp	r0, r3
    1458:	bcs	1624 <sfbpf_filter+0x524>
    145c:	ldrb	r7, [r1, r0]
    1460:	mov	r9, r6
    1464:	b	14ec <sfbpf_filter+0x3ec>
    1468:	ldr	r4, [r9, #12]
    146c:	mov	r9, r6
    1470:	and	r7, r4, r0
    1474:	b	14ec <sfbpf_filter+0x3ec>
    1478:	cmp	r7, #177	; 0xb1
    147c:	bne	162c <sfbpf_filter+0x52c>
    1480:	ldr	r4, [r9, #12]
    1484:	cmp	r4, r3
    1488:	bcs	1624 <sfbpf_filter+0x524>
    148c:	ldrb	r4, [r1, r4]
    1490:	and	r8, lr, r4, lsl #2
    1494:	b	14cc <sfbpf_filter+0x3cc>
    1498:	mov	r9, r6
    149c:	mov	r7, r0
    14a0:	mov	r8, r2
    14a4:	b	14ec <sfbpf_filter+0x3ec>
    14a8:	rsb	r7, r0, #0
    14ac:	mov	r9, r6
    14b0:	b	14ec <sfbpf_filter+0x3ec>
    14b4:	ldr	r0, [r9, #12]
    14b8:	mov	r9, r6
    14bc:	ldr	r7, [ip, r0, lsl #2]
    14c0:	b	14ec <sfbpf_filter+0x3ec>
    14c4:	ldr	r4, [r9, #12]
    14c8:	ldr	r8, [ip, r4, lsl #2]
    14cc:	mov	r9, r6
    14d0:	mov	r7, r0
    14d4:	b	14ec <sfbpf_filter+0x3ec>
    14d8:	cmp	r7, #116	; 0x74
    14dc:	bne	162c <sfbpf_filter+0x52c>
    14e0:	ldr	r4, [r9, #12]
    14e4:	mov	r9, r6
    14e8:	lsr	r7, r0, r4
    14ec:	mov	r6, r9
    14f0:	mov	r0, r7
    14f4:	ldrh	r7, [r6, #8]!
    14f8:	cmp	r7, #67	; 0x43
    14fc:	bgt	1140 <sfbpf_filter+0x40>
    1500:	cmp	r7, #64	; 0x40
    1504:	bhi	162c <sfbpf_filter+0x52c>
    1508:	add	r4, pc, #4
    150c:	ldr	r7, [r4, r7, lsl #2]
    1510:	add	pc, r4, r7
    1514:	.word	0xfffffc20
    1518:	.word	0xfffffe20
    151c:	.word	0xfffffe28
    1520:	.word	0xfffffd60
    1524:	.word	0xfffffd6c
    1528:	.word	0xfffffd7c
    152c:	.word	0x00000104
    1530:	.word	0xfffffd84
    1534:	.word	0x00000118
    1538:	.word	0x00000118
    153c:	.word	0x00000118
    1540:	.word	0x00000118
    1544:	.word	0xfffffd94
    1548:	.word	0x00000118
    154c:	.word	0x00000118
    1550:	.word	0x00000118
    1554:	.word	0x00000118
    1558:	.word	0x00000118
    155c:	.word	0x00000118
    1560:	.word	0x00000118
    1564:	.word	0xfffffda0
    1568:	.word	0xfffffe34
    156c:	.word	0x00000108
    1570:	.word	0x00000118
    1574:	.word	0x00000118
    1578:	.word	0x00000118
    157c:	.word	0x00000118
    1580:	.word	0x00000118
    1584:	.word	0xfffffdb0
    1588:	.word	0xfffffdbc
    158c:	.word	0x00000118
    1590:	.word	0x00000118
    1594:	.word	0xfffffe48
    1598:	.word	0x00000118
    159c:	.word	0x00000118
    15a0:	.word	0x00000118
    15a4:	.word	0xfffffdcc
    15a8:	.word	0xfffffe68
    15ac:	.word	0x00000118
    15b0:	.word	0x00000118
    15b4:	.word	0xfffffe7c
    15b8:	.word	0x00000118
    15bc:	.word	0x00000118
    15c0:	.word	0x00000118
    15c4:	.word	0xfffffe84
    15c8:	.word	0xfffffe90
    15cc:	.word	0x00000118
    15d0:	.word	0x00000118
    15d4:	.word	0xfffffea0
    15d8:	.word	0x00000118
    15dc:	.word	0x00000118
    15e0:	.word	0x00000118
    15e4:	.word	0xfffffea8
    15e8:	.word	0xfffffeb8
    15ec:	.word	0x00000118
    15f0:	.word	0x00000118
    15f4:	.word	0x00000118
    15f8:	.word	0x00000118
    15fc:	.word	0x00000118
    1600:	.word	0x00000118
    1604:	.word	0xfffffed0
    1608:	.word	0xfffffddc
    160c:	.word	0x00000118
    1610:	.word	0x00000118
    1614:	.word	0xfffffdec
    1618:	ldr	r0, [r9, #12]
    161c:	sub	sp, fp, #24
    1620:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    1624:	mov	r0, #0
    1628:	b	161c <sfbpf_filter+0x51c>
    162c:	bl	fc4 <abort@plt>

00001630 <sfbpf_validate>:
    1630:	push	{r4, r5, fp, lr}
    1634:	add	fp, sp, #8
    1638:	mov	ip, r0
    163c:	mov	r0, #0
    1640:	cmp	r1, #1
    1644:	blt	1744 <sfbpf_validate+0x114>
    1648:	add	r3, ip, #4
    164c:	mov	r2, #1
    1650:	mov	lr, r2
    1654:	ldrh	r2, [r3, #-4]
    1658:	and	r4, r2, #7
    165c:	sub	r4, r4, #2
    1660:	cmp	r4, #5
    1664:	bhi	169c <sfbpf_validate+0x6c>
    1668:	add	r5, pc, #4
    166c:	ldr	r4, [r5, r4, lsl #2]
    1670:	add	pc, r5, r4
    1674:	.word	0x00000018
    1678:	.word	0x00000018
    167c:	.word	0x00000040
    1680:	.word	0x00000068
    1684:	.word	0x000000a8
    1688:	.word	0x000000a8
    168c:	ldr	r2, [r3]
    1690:	cmp	r2, #15
    1694:	bls	171c <sfbpf_validate+0xec>
    1698:	b	1744 <sfbpf_validate+0x114>
    169c:	ubfx	r2, r2, #5, #3
    16a0:	cmp	r2, #5
    16a4:	bhi	1744 <sfbpf_validate+0x114>
    16a8:	cmp	r2, #3
    16ac:	bne	171c <sfbpf_validate+0xec>
    16b0:	b	168c <sfbpf_validate+0x5c>
    16b4:	ubfx	r4, r2, #4, #4
    16b8:	cmp	r4, #8
    16bc:	bhi	1744 <sfbpf_validate+0x114>
    16c0:	cmp	r4, #3
    16c4:	tsteq	r2, #24
    16c8:	bne	171c <sfbpf_validate+0xec>
    16cc:	ldr	r2, [r3]
    16d0:	cmp	r2, #0
    16d4:	bne	171c <sfbpf_validate+0xec>
    16d8:	b	1744 <sfbpf_validate+0x114>
    16dc:	ubfx	r2, r2, #4, #4
    16e0:	sub	r4, r2, #1
    16e4:	cmp	r4, #4
    16e8:	bcs	1704 <sfbpf_validate+0xd4>
    16ec:	ldrb	r2, [r3, #-2]
    16f0:	add	r2, lr, r2
    16f4:	cmp	r2, r1
    16f8:	bcs	1744 <sfbpf_validate+0x114>
    16fc:	ldrb	r2, [r3, #-1]
    1700:	b	1710 <sfbpf_validate+0xe0>
    1704:	cmp	r2, #0
    1708:	bne	1744 <sfbpf_validate+0x114>
    170c:	ldr	r2, [r3]
    1710:	add	r2, lr, r2
    1714:	cmp	r2, r1
    1718:	popcs	{r4, r5, fp, pc}
    171c:	add	r3, r3, #8
    1720:	add	r2, lr, #1
    1724:	cmp	lr, r1
    1728:	bcc	1650 <sfbpf_validate+0x20>
    172c:	add	r0, ip, r1, lsl #3
    1730:	ldrh	r0, [r0, #-8]
    1734:	and	r0, r0, #7
    1738:	sub	r0, r0, #6
    173c:	clz	r0, r0
    1740:	lsr	r0, r0, #5
    1744:	pop	{r4, r5, fp, pc}

00001748 <sfbpf_print>:
    1748:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    174c:	add	fp, sp, #28
    1750:	sub	sp, sp, #4
    1754:	mov	r5, r0
    1758:	ldr	r0, [pc, #1964]	; 1f0c <sfbpf_print+0x7c4>
    175c:	mov	r8, r1
    1760:	add	r0, pc, r0
    1764:	bl	ec8 <puts@plt>
    1768:	ldr	r0, [r5]
    176c:	cmp	r0, #0
    1770:	beq	1f04 <sfbpf_print+0x7bc>
    1774:	ldr	r7, [pc, #1940]	; 1f10 <sfbpf_print+0x7c8>
    1778:	mov	r6, #0
    177c:	add	r7, pc, r7
    1780:	ldr	sl, [r5, #4]
    1784:	ldr	r0, [pc, #1928]	; 1f14 <sfbpf_print+0x7cc>
    1788:	mov	r1, r6
    178c:	add	r0, pc, r0
    1790:	bl	e20 <printf@plt>
    1794:	lsl	r0, r6, #3
    1798:	mov	r9, sl
    179c:	cmp	r8, #0
    17a0:	ldrh	r0, [r9, r0]!	; <UNPREDICTABLE>
    17a4:	beq	18d0 <sfbpf_print+0x188>
    17a8:	ldr	r1, [pc, #1896]	; 1f18 <sfbpf_print+0x7d0>
    17ac:	ands	r0, r0, #7
    17b0:	add	r1, pc, r1
    17b4:	beq	17e4 <sfbpf_print+0x9c>
    17b8:	mov	r1, #0
    17bc:	mov	r2, #0
    17c0:	cmp	r2, #7
    17c4:	beq	17e4 <sfbpf_print+0x9c>
    17c8:	add	r3, r7, r2, lsl #3
    17cc:	add	r2, r2, #1
    17d0:	ldr	r3, [r3, #8]
    17d4:	cmp	r3, r0
    17d8:	bne	17c0 <sfbpf_print+0x78>
    17dc:	add	r0, r7, r2, lsl #3
    17e0:	ldr	r1, [r0, #4]
    17e4:	ldr	r0, [pc, #1840]	; 1f1c <sfbpf_print+0x7d4>
    17e8:	add	r0, pc, r0
    17ec:	bl	e20 <printf@plt>
    17f0:	ldrh	r0, [r9]
    17f4:	and	r1, r0, #7
    17f8:	cmp	r1, #7
    17fc:	bhi	1b40 <sfbpf_print+0x3f8>
    1800:	add	r2, pc, #4
    1804:	ldr	r1, [r2, r1, lsl #2]
    1808:	add	pc, r2, r1
    180c:	.word	0x00000020
    1810:	.word	0x00000020
    1814:	.word	0x00000334
    1818:	.word	0x00000334
    181c:	.word	0x00000150
    1820:	.word	0x000001dc
    1824:	.word	0x00000284
    1828:	.word	0x000002dc
    182c:	ldr	r1, [pc, #1772]	; 1f20 <sfbpf_print+0x7d8>
    1830:	ands	r2, r0, #24
    1834:	add	r1, pc, r1
    1838:	beq	1878 <sfbpf_print+0x130>
    183c:	mov	r1, #0
    1840:	mov	r3, #0
    1844:	cmp	r3, #2
    1848:	beq	1878 <sfbpf_print+0x130>
    184c:	ldr	r4, [pc, #1744]	; 1f24 <sfbpf_print+0x7dc>
    1850:	add	r4, pc, r4
    1854:	add	r4, r4, r3, lsl #3
    1858:	add	r3, r3, #1
    185c:	ldr	r4, [r4, #8]
    1860:	cmp	r4, r2
    1864:	bne	1844 <sfbpf_print+0xfc>
    1868:	ldr	r1, [pc, #1720]	; 1f28 <sfbpf_print+0x7e0>
    186c:	add	r1, pc, r1
    1870:	add	r1, r1, r3, lsl #3
    1874:	ldr	r1, [r1, #4]
    1878:	ldr	r2, [pc, #1708]	; 1f2c <sfbpf_print+0x7e4>
    187c:	ands	r0, r0, #224	; 0xe0
    1880:	add	r2, pc, r2
    1884:	beq	18c4 <sfbpf_print+0x17c>
    1888:	mov	r2, #0
    188c:	mov	r3, #0
    1890:	cmp	r3, #5
    1894:	beq	18c4 <sfbpf_print+0x17c>
    1898:	ldr	r4, [pc, #1680]	; 1f30 <sfbpf_print+0x7e8>
    189c:	add	r4, pc, r4
    18a0:	add	r4, r4, r3, lsl #3
    18a4:	add	r3, r3, #1
    18a8:	ldr	r4, [r4, #8]
    18ac:	cmp	r4, r0
    18b0:	bne	1890 <sfbpf_print+0x148>
    18b4:	ldr	r0, [pc, #1656]	; 1f34 <sfbpf_print+0x7ec>
    18b8:	add	r0, pc, r0
    18bc:	add	r0, r0, r3, lsl #3
    18c0:	ldr	r2, [r0, #4]
    18c4:	ldr	r0, [pc, #1644]	; 1f38 <sfbpf_print+0x7f0>
    18c8:	add	r0, pc, r0
    18cc:	b	1a88 <sfbpf_print+0x340>
    18d0:	and	r1, r0, #7
    18d4:	sub	r1, r1, #1
    18d8:	cmp	r1, #6
    18dc:	bhi	1b60 <sfbpf_print+0x418>
    18e0:	add	r2, pc, #4
    18e4:	ldr	r1, [r2, r1, lsl #2]
    18e8:	add	pc, r2, r1
    18ec:	.word	0x0000001c
    18f0:	.word	0x000002d8
    18f4:	.word	0x000002ec
    18f8:	.word	0x00000304
    18fc:	.word	0x00000354
    1900:	.word	0x000003a4
    1904:	.word	0x000003e8
    1908:	ldr	r0, [pc, #1676]	; 1f9c <sfbpf_print+0x854>
    190c:	add	r0, pc, r0
    1910:	bl	e20 <printf@plt>
    1914:	ldrh	r0, [r9]
    1918:	ubfx	r0, r0, #5, #3
    191c:	cmp	r0, #5
    1920:	bhi	1eec <sfbpf_print+0x7a4>
    1924:	add	r1, pc, #4
    1928:	ldr	r0, [r1, r0, lsl #2]
    192c:	add	pc, r1, r0
    1930:	.word	0x0000055c
    1934:	.word	0x000005bc
    1938:	.word	0x000005bc
    193c:	.word	0x000003e0
    1940:	.word	0x000003f4
    1944:	.word	0x00000018
    1948:	add	r0, sl, r6, lsl #3
    194c:	ldr	r1, [r0, #4]
    1950:	ldr	r0, [pc, #1616]	; 1fa8 <sfbpf_print+0x860>
    1954:	add	r0, pc, r0
    1958:	b	1e9c <sfbpf_print+0x754>
    195c:	ldr	r1, [pc, #1496]	; 1f3c <sfbpf_print+0x7f4>
    1960:	ands	r2, r0, #240	; 0xf0
    1964:	add	r1, pc, r1
    1968:	beq	19a8 <sfbpf_print+0x260>
    196c:	mov	r1, #0
    1970:	mov	r3, #0
    1974:	cmp	r3, #8
    1978:	beq	19a8 <sfbpf_print+0x260>
    197c:	ldr	r4, [pc, #1468]	; 1f40 <sfbpf_print+0x7f8>
    1980:	add	r4, pc, r4
    1984:	add	r4, r4, r3, lsl #3
    1988:	add	r3, r3, #1
    198c:	ldr	r4, [r4, #8]
    1990:	cmp	r4, r2
    1994:	bne	1974 <sfbpf_print+0x22c>
    1998:	ldr	r1, [pc, #1444]	; 1f44 <sfbpf_print+0x7fc>
    199c:	add	r1, pc, r1
    19a0:	add	r1, r1, r3, lsl #3
    19a4:	ldr	r1, [r1, #4]
    19a8:	ldr	r2, [pc, #1432]	; 1f48 <sfbpf_print+0x800>
    19ac:	ands	r0, r0, #8
    19b0:	add	r2, pc, r2
    19b4:	beq	1a80 <sfbpf_print+0x338>
    19b8:	mov	r2, #0
    19bc:	mov	r3, #0
    19c0:	cmp	r3, #1
    19c4:	beq	1a80 <sfbpf_print+0x338>
    19c8:	ldr	r4, [pc, #1404]	; 1f4c <sfbpf_print+0x804>
    19cc:	add	r4, pc, r4
    19d0:	add	r4, r4, r3, lsl #3
    19d4:	add	r3, r3, #1
    19d8:	ldr	r4, [r4, #8]
    19dc:	cmp	r4, r0
    19e0:	bne	19c0 <sfbpf_print+0x278>
    19e4:	b	1a70 <sfbpf_print+0x328>
    19e8:	ldr	r1, [pc, #1384]	; 1f58 <sfbpf_print+0x810>
    19ec:	ands	r2, r0, #240	; 0xf0
    19f0:	add	r1, pc, r1
    19f4:	beq	1a34 <sfbpf_print+0x2ec>
    19f8:	mov	r1, #0
    19fc:	mov	r3, #0
    1a00:	cmp	r3, #4
    1a04:	beq	1a34 <sfbpf_print+0x2ec>
    1a08:	ldr	r4, [pc, #1356]	; 1f5c <sfbpf_print+0x814>
    1a0c:	add	r4, pc, r4
    1a10:	add	r4, r4, r3, lsl #3
    1a14:	add	r3, r3, #1
    1a18:	ldr	r4, [r4, #8]
    1a1c:	cmp	r4, r2
    1a20:	bne	1a00 <sfbpf_print+0x2b8>
    1a24:	ldr	r1, [pc, #1332]	; 1f60 <sfbpf_print+0x818>
    1a28:	add	r1, pc, r1
    1a2c:	add	r1, r1, r3, lsl #3
    1a30:	ldr	r1, [r1, #4]
    1a34:	ldr	r2, [pc, #1320]	; 1f64 <sfbpf_print+0x81c>
    1a38:	ands	r0, r0, #8
    1a3c:	add	r2, pc, r2
    1a40:	beq	1a80 <sfbpf_print+0x338>
    1a44:	mov	r2, #0
    1a48:	mov	r3, #0
    1a4c:	cmp	r3, #1
    1a50:	beq	1a80 <sfbpf_print+0x338>
    1a54:	ldr	r4, [pc, #1292]	; 1f68 <sfbpf_print+0x820>
    1a58:	add	r4, pc, r4
    1a5c:	add	r4, r4, r3, lsl #3
    1a60:	add	r3, r3, #1
    1a64:	ldr	r4, [r4, #8]
    1a68:	cmp	r4, r0
    1a6c:	bne	1a4c <sfbpf_print+0x304>
    1a70:	ldr	r0, [pc, #1240]	; 1f50 <sfbpf_print+0x808>
    1a74:	add	r0, pc, r0
    1a78:	add	r0, r0, r3, lsl #3
    1a7c:	ldr	r2, [r0, #4]
    1a80:	ldr	r0, [pc, #1228]	; 1f54 <sfbpf_print+0x80c>
    1a84:	add	r0, pc, r0
    1a88:	bl	e20 <printf@plt>
    1a8c:	b	1b40 <sfbpf_print+0x3f8>
    1a90:	ldr	r1, [pc, #1236]	; 1f6c <sfbpf_print+0x824>
    1a94:	ands	r0, r0, #24
    1a98:	add	r1, pc, r1
    1a9c:	beq	1adc <sfbpf_print+0x394>
    1aa0:	mov	r1, #0
    1aa4:	mov	r2, #0
    1aa8:	cmp	r2, #2
    1aac:	beq	1adc <sfbpf_print+0x394>
    1ab0:	ldr	r3, [pc, #1208]	; 1f70 <sfbpf_print+0x828>
    1ab4:	add	r3, pc, r3
    1ab8:	add	r3, r3, r2, lsl #3
    1abc:	add	r2, r2, #1
    1ac0:	ldr	r3, [r3, #8]
    1ac4:	cmp	r3, r0
    1ac8:	bne	1aa8 <sfbpf_print+0x360>
    1acc:	ldr	r0, [pc, #1184]	; 1f74 <sfbpf_print+0x82c>
    1ad0:	add	r0, pc, r0
    1ad4:	add	r0, r0, r2, lsl #3
    1ad8:	ldr	r1, [r0, #4]
    1adc:	ldr	r0, [pc, #1172]	; 1f78 <sfbpf_print+0x830>
    1ae0:	add	r0, pc, r0
    1ae4:	b	1b3c <sfbpf_print+0x3f4>
    1ae8:	ldr	r1, [pc, #1164]	; 1f7c <sfbpf_print+0x834>
    1aec:	ands	r0, r0, #248	; 0xf8
    1af0:	add	r1, pc, r1
    1af4:	beq	1b34 <sfbpf_print+0x3ec>
    1af8:	mov	r1, #0
    1afc:	mov	r2, #0
    1b00:	cmp	r2, #1
    1b04:	beq	1b34 <sfbpf_print+0x3ec>
    1b08:	ldr	r3, [pc, #1136]	; 1f80 <sfbpf_print+0x838>
    1b0c:	add	r3, pc, r3
    1b10:	add	r3, r3, r2, lsl #3
    1b14:	add	r2, r2, #1
    1b18:	ldr	r3, [r3, #8]
    1b1c:	cmp	r3, r0
    1b20:	bne	1b00 <sfbpf_print+0x3b8>
    1b24:	ldr	r0, [pc, #1112]	; 1f84 <sfbpf_print+0x83c>
    1b28:	add	r0, pc, r0
    1b2c:	add	r0, r0, r2, lsl #3
    1b30:	ldr	r1, [r0, #4]
    1b34:	ldr	r0, [pc, #1100]	; 1f88 <sfbpf_print+0x840>
    1b38:	add	r0, pc, r0
    1b3c:	bl	e20 <printf@plt>
    1b40:	add	r0, sl, r6, lsl #3
    1b44:	ldr	r3, [r0, #4]
    1b48:	ldrb	r1, [r0, #2]
    1b4c:	ldrb	r2, [r0, #3]
    1b50:	ldr	r0, [pc, #1076]	; 1f8c <sfbpf_print+0x844>
    1b54:	add	r0, pc, r0
    1b58:	bl	e20 <printf@plt>
    1b5c:	b	1ef4 <sfbpf_print+0x7ac>
    1b60:	ldr	r0, [pc, #1064]	; 1f90 <sfbpf_print+0x848>
    1b64:	add	r0, pc, r0
    1b68:	bl	e20 <printf@plt>
    1b6c:	ldrh	r0, [r9]
    1b70:	ubfx	r1, r0, #5, #3
    1b74:	cmp	r1, #4
    1b78:	bhi	1d04 <sfbpf_print+0x5bc>
    1b7c:	add	r2, pc, #4
    1b80:	ldr	r1, [r2, r1, lsl #2]
    1b84:	add	pc, r2, r1
    1b88:	.word	0x00000304
    1b8c:	.word	0x00000014
    1b90:	.word	0x000001e8
    1b94:	.word	0x00000188
    1b98:	.word	0x0000019c
    1b9c:	add	r1, sl, r6, lsl #3
    1ba0:	ands	r0, r0, #24
    1ba4:	ldr	r1, [r1, #4]
    1ba8:	beq	1ebc <sfbpf_print+0x774>
    1bac:	cmp	r0, #16
    1bb0:	beq	1ec4 <sfbpf_print+0x77c>
    1bb4:	cmp	r0, #8
    1bb8:	movne	r2, #0
    1bbc:	moveq	r2, #2
    1bc0:	b	1ec8 <sfbpf_print+0x780>
    1bc4:	add	r0, sl, r6, lsl #3
    1bc8:	ldr	r1, [r0, #4]
    1bcc:	ldr	r0, [pc, #984]	; 1fac <sfbpf_print+0x864>
    1bd0:	add	r0, pc, r0
    1bd4:	b	1be8 <sfbpf_print+0x4a0>
    1bd8:	add	r0, sl, r6, lsl #3
    1bdc:	ldr	r1, [r0, #4]
    1be0:	ldr	r0, [pc, #968]	; 1fb0 <sfbpf_print+0x868>
    1be4:	add	r0, pc, r0
    1be8:	bl	e20 <printf@plt>
    1bec:	b	1ef4 <sfbpf_print+0x7ac>
    1bf0:	ubfx	r0, r0, #4, #4
    1bf4:	cmp	r0, #8
    1bf8:	bhi	1e24 <sfbpf_print+0x6dc>
    1bfc:	add	r2, pc, #12
    1c00:	ldr	r1, [pc, #940]	; 1fb4 <sfbpf_print+0x86c>
    1c04:	ldr	r0, [r2, r0, lsl #2]
    1c08:	add	r1, pc, r1
    1c0c:	add	pc, r2, r0
    1c10:	.word	0x00000264
    1c14:	.word	0x00000024
    1c18:	.word	0x00000220
    1c1c:	.word	0x0000022c
    1c20:	.word	0x00000238
    1c24:	.word	0x00000244
    1c28:	.word	0x00000250
    1c2c:	.word	0x0000025c
    1c30:	.word	0x000002a0
    1c34:	ldr	r1, [pc, #892]	; 1fb8 <sfbpf_print+0x870>
    1c38:	add	r1, pc, r1
    1c3c:	b	1e74 <sfbpf_print+0x72c>
    1c40:	ubfx	r0, r0, #4, #4
    1c44:	cmp	r0, #4
    1c48:	bhi	1d98 <sfbpf_print+0x650>
    1c4c:	add	r2, pc, #12
    1c50:	ldr	r1, [pc, #908]	; 1fe4 <sfbpf_print+0x89c>
    1c54:	ldr	r0, [r2, r0, lsl #2]
    1c58:	add	r1, pc, r1
    1c5c:	add	pc, r2, r0
    1c60:	.word	0x00000014
    1c64:	.word	0x00000164
    1c68:	.word	0x00000144
    1c6c:	.word	0x00000150
    1c70:	.word	0x0000015c
    1c74:	add	r0, sl, r6, lsl #3
    1c78:	ldr	r0, [r0, #4]
    1c7c:	add	r0, r6, r0
    1c80:	add	r1, r0, #1
    1c84:	ldr	r0, [pc, #860]	; 1fe8 <sfbpf_print+0x8a0>
    1c88:	add	r0, pc, r0
    1c8c:	b	1be8 <sfbpf_print+0x4a0>
    1c90:	ldr	r0, [pc, #880]	; 2008 <sfbpf_print+0x8c0>
    1c94:	add	r0, pc, r0
    1c98:	bl	e20 <printf@plt>
    1c9c:	ldrh	r0, [r9]
    1ca0:	and	r0, r0, #24
    1ca4:	cmp	r0, #16
    1ca8:	beq	1d40 <sfbpf_print+0x5f8>
    1cac:	cmp	r0, #8
    1cb0:	beq	1d48 <sfbpf_print+0x600>
    1cb4:	cmp	r0, #0
    1cb8:	bne	1d54 <sfbpf_print+0x60c>
    1cbc:	add	r0, sl, r6, lsl #3
    1cc0:	ldr	r1, [r0, #4]
    1cc4:	ldr	r0, [pc, #832]	; 200c <sfbpf_print+0x8c4>
    1cc8:	add	r0, pc, r0
    1ccc:	bl	e20 <printf@plt>
    1cd0:	b	1d60 <sfbpf_print+0x618>
    1cd4:	ldr	r0, [pc, #828]	; 2018 <sfbpf_print+0x8d0>
    1cd8:	add	r0, pc, r0
    1cdc:	bl	e20 <printf@plt>
    1ce0:	ldrh	r0, [r9]
    1ce4:	and	r0, r0, #248	; 0xf8
    1ce8:	cmp	r0, #128	; 0x80
    1cec:	beq	1d30 <sfbpf_print+0x5e8>
    1cf0:	cmp	r0, #0
    1cf4:	bne	1d04 <sfbpf_print+0x5bc>
    1cf8:	ldr	r0, [pc, #796]	; 201c <sfbpf_print+0x8d4>
    1cfc:	add	r0, pc, r0
    1d00:	b	1d38 <sfbpf_print+0x5f0>
    1d04:	ldr	r0, [pc, #792]	; 2024 <sfbpf_print+0x8dc>
    1d08:	add	r0, pc, r0
    1d0c:	b	1d38 <sfbpf_print+0x5f0>
    1d10:	add	r0, sl, r6, lsl #3
    1d14:	ldr	r1, [r0, #4]
    1d18:	ldr	r0, [pc, #644]	; 1fa4 <sfbpf_print+0x85c>
    1d1c:	add	r0, pc, r0
    1d20:	b	1e9c <sfbpf_print+0x754>
    1d24:	ldr	r0, [pc, #628]	; 1fa0 <sfbpf_print+0x858>
    1d28:	add	r0, pc, r0
    1d2c:	b	1d38 <sfbpf_print+0x5f0>
    1d30:	ldr	r0, [pc, #744]	; 2020 <sfbpf_print+0x8d8>
    1d34:	add	r0, pc, r0
    1d38:	bl	e20 <printf@plt>
    1d3c:	b	1eec <sfbpf_print+0x7a4>
    1d40:	mov	r0, #65	; 0x41
    1d44:	b	1d4c <sfbpf_print+0x604>
    1d48:	mov	r0, #88	; 0x58
    1d4c:	bl	f4c <putchar@plt>
    1d50:	b	1d60 <sfbpf_print+0x618>
    1d54:	ldr	r0, [pc, #692]	; 2010 <sfbpf_print+0x8c8>
    1d58:	add	r0, pc, r0
    1d5c:	bl	e20 <printf@plt>
    1d60:	ldr	r0, [pc, #684]	; 2014 <sfbpf_print+0x8cc>
    1d64:	add	r0, pc, r0
    1d68:	bl	ec8 <puts@plt>
    1d6c:	b	1ef4 <sfbpf_print+0x7ac>
    1d70:	add	r1, sl, r6, lsl #3
    1d74:	ands	r0, r0, #24
    1d78:	ldr	r1, [r1, #4]
    1d7c:	beq	1ed4 <sfbpf_print+0x78c>
    1d80:	cmp	r0, #16
    1d84:	beq	1edc <sfbpf_print+0x794>
    1d88:	cmp	r0, #8
    1d8c:	movne	r2, #0
    1d90:	moveq	r2, #2
    1d94:	b	1ee0 <sfbpf_print+0x798>
    1d98:	ldr	r1, [pc, #600]	; 1ff8 <sfbpf_print+0x8b0>
    1d9c:	add	r1, pc, r1
    1da0:	b	1dc4 <sfbpf_print+0x67c>
    1da4:	ldr	r1, [pc, #576]	; 1fec <sfbpf_print+0x8a4>
    1da8:	add	r1, pc, r1
    1dac:	b	1dc4 <sfbpf_print+0x67c>
    1db0:	ldr	r1, [pc, #568]	; 1ff0 <sfbpf_print+0x8a8>
    1db4:	add	r1, pc, r1
    1db8:	b	1dc4 <sfbpf_print+0x67c>
    1dbc:	ldr	r1, [pc, #560]	; 1ff4 <sfbpf_print+0x8ac>
    1dc0:	add	r1, pc, r1
    1dc4:	ldr	r0, [pc, #560]	; 1ffc <sfbpf_print+0x8b4>
    1dc8:	add	r0, pc, r0
    1dcc:	bl	e20 <printf@plt>
    1dd0:	ldrb	r0, [r9]
    1dd4:	tst	r0, #8
    1dd8:	bne	1df4 <sfbpf_print+0x6ac>
    1ddc:	add	r0, sl, r6, lsl #3
    1de0:	ldr	r1, [r0, #4]
    1de4:	ldr	r0, [pc, #532]	; 2000 <sfbpf_print+0x8b8>
    1de8:	add	r0, pc, r0
    1dec:	bl	e20 <printf@plt>
    1df0:	b	1dfc <sfbpf_print+0x6b4>
    1df4:	mov	r0, #88	; 0x58
    1df8:	bl	f4c <putchar@plt>
    1dfc:	add	r0, sl, r6, lsl #3
    1e00:	add	r2, r6, #1
    1e04:	ldrb	r1, [r0, #2]
    1e08:	ldrb	r0, [r0, #3]
    1e0c:	add	r1, r2, r1
    1e10:	add	r2, r2, r0
    1e14:	ldr	r0, [pc, #488]	; 2004 <sfbpf_print+0x8bc>
    1e18:	add	r0, pc, r0
    1e1c:	bl	e20 <printf@plt>
    1e20:	b	1ef4 <sfbpf_print+0x7ac>
    1e24:	ldr	r1, [pc, #428]	; 1fd8 <sfbpf_print+0x890>
    1e28:	add	r1, pc, r1
    1e2c:	b	1e74 <sfbpf_print+0x72c>
    1e30:	ldr	r1, [pc, #388]	; 1fbc <sfbpf_print+0x874>
    1e34:	add	r1, pc, r1
    1e38:	b	1e74 <sfbpf_print+0x72c>
    1e3c:	ldr	r1, [pc, #380]	; 1fc0 <sfbpf_print+0x878>
    1e40:	add	r1, pc, r1
    1e44:	b	1e74 <sfbpf_print+0x72c>
    1e48:	ldr	r1, [pc, #372]	; 1fc4 <sfbpf_print+0x87c>
    1e4c:	add	r1, pc, r1
    1e50:	b	1e74 <sfbpf_print+0x72c>
    1e54:	ldr	r1, [pc, #364]	; 1fc8 <sfbpf_print+0x880>
    1e58:	add	r1, pc, r1
    1e5c:	b	1e74 <sfbpf_print+0x72c>
    1e60:	ldr	r1, [pc, #356]	; 1fcc <sfbpf_print+0x884>
    1e64:	add	r1, pc, r1
    1e68:	b	1e74 <sfbpf_print+0x72c>
    1e6c:	ldr	r1, [pc, #348]	; 1fd0 <sfbpf_print+0x888>
    1e70:	add	r1, pc, r1
    1e74:	ldr	r0, [pc, #352]	; 1fdc <sfbpf_print+0x894>
    1e78:	add	r0, pc, r0
    1e7c:	bl	e20 <printf@plt>
    1e80:	ldrb	r0, [r9]
    1e84:	tst	r0, #8
    1e88:	bne	1ea4 <sfbpf_print+0x75c>
    1e8c:	add	r0, sl, r6, lsl #3
    1e90:	ldr	r1, [r0, #4]
    1e94:	ldr	r0, [pc, #324]	; 1fe0 <sfbpf_print+0x898>
    1e98:	add	r0, pc, r0
    1e9c:	bl	e20 <printf@plt>
    1ea0:	b	1eec <sfbpf_print+0x7a4>
    1ea4:	mov	r0, #88	; 0x58
    1ea8:	bl	f4c <putchar@plt>
    1eac:	b	1eec <sfbpf_print+0x7a4>
    1eb0:	ldr	r0, [pc, #284]	; 1fd4 <sfbpf_print+0x88c>
    1eb4:	add	r0, pc, r0
    1eb8:	b	1d68 <sfbpf_print+0x620>
    1ebc:	mov	r2, #4
    1ec0:	b	1ec8 <sfbpf_print+0x780>
    1ec4:	mov	r2, #1
    1ec8:	ldr	r0, [pc, #196]	; 1f94 <sfbpf_print+0x84c>
    1ecc:	add	r0, pc, r0
    1ed0:	b	1ee8 <sfbpf_print+0x7a0>
    1ed4:	mov	r2, #4
    1ed8:	b	1ee0 <sfbpf_print+0x798>
    1edc:	mov	r2, #1
    1ee0:	ldr	r0, [pc, #176]	; 1f98 <sfbpf_print+0x850>
    1ee4:	add	r0, pc, r0
    1ee8:	bl	e20 <printf@plt>
    1eec:	mov	r0, #10
    1ef0:	bl	f4c <putchar@plt>
    1ef4:	ldr	r0, [r5]
    1ef8:	add	r6, r6, #1
    1efc:	cmp	r6, r0
    1f00:	bcc	1780 <sfbpf_print+0x38>
    1f04:	sub	sp, fp, #28
    1f08:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1f0c:	.word	0x000110e5
    1f10:	.word	0x0002e444
    1f14:	.word	0x00010f0c
    1f18:	.word	0x00010f33
    1f1c:	.word	0x00011029
    1f20:	.word	0x00010ed7
    1f24:	.word	0x0002e3b8
    1f28:	.word	0x0002e39c
    1f2c:	.word	0x00010e8d
    1f30:	.word	0x0002e38c
    1f34:	.word	0x0002e370
    1f38:	.word	0x00010dd6
    1f3c:	.word	0x00010dc1
    1f40:	.word	0x0002e2e0
    1f44:	.word	0x0002e2c4
    1f48:	.word	0x00010d99
    1f4c:	.word	0x0002e2e4
    1f50:	.word	0x0002e23c
    1f54:	.word	0x00010c2b
    1f58:	.word	0x00010d5b
    1f5c:	.word	0x0002e2bc
    1f60:	.word	0x0002e2a0
    1f64:	.word	0x00010d0d
    1f68:	.word	0x0002e258
    1f6c:	.word	0x00010cb1
    1f70:	.word	0x0002e244
    1f74:	.word	0x0002e228
    1f78:	.word	0x00010bdd
    1f7c:	.word	0x00010c74
    1f80:	.word	0x0002e20c
    1f84:	.word	0x0002e1f0
    1f88:	.word	0x00010b8e
    1f8c:	.word	0x00010b79
    1f90:	.word	0x00010c2a
    1f94:	.word	0x000108cd
    1f98:	.word	0x000108be
    1f9c:	.word	0x00010eaf
    1fa0:	.word	0x00010a85
    1fa4:	.word	0x00010a95
    1fa8:	.word	0x00010e72
    1fac:	.word	0x00010b9c
    1fb0:	.word	0x00010b99
    1fb4:	.word	0x00010bce
    1fb8:	.word	0x00010ba0
    1fbc:	.word	0x000109a6
    1fc0:	.word	0x0001099c
    1fc4:	.word	0x00010992
    1fc8:	.word	0x00010988
    1fcc:	.word	0x0001097e
    1fd0:	.word	0x00010975
    1fd4:	.word	0x0001099f
    1fd8:	.word	0x0001098f
    1fdc:	.word	0x00010970
    1fe0:	.word	0x00011553
    1fe4:	.word	0x00010bab
    1fe8:	.word	0x00010b71
    1fec:	.word	0x00010a3e
    1ff0:	.word	0x00010a52
    1ff4:	.word	0x00010a20
    1ff8:	.word	0x00010a1b
    1ffc:	.word	0x00010a41
    2000:	.word	0x00011603
    2004:	.word	0x000109fd
    2008:	.word	0x00010b90
    200c:	.word	0x00011723
    2010:	.word	0x00010a5f
    2014:	.word	0x00010af7
    2018:	.word	0x00010b59
    201c:	.word	0x00010b3b
    2020:	.word	0x00010b0a
    2024:	.word	0x00010aaf

00002028 <sf_bpf_error>:
    2028:	sub	sp, sp, #12
    202c:	push	{fp, lr}
    2030:	mov	fp, sp
    2034:	sub	sp, sp, #4
    2038:	mov	ip, r0
    203c:	add	r0, fp, #8
    2040:	stm	r0, {r1, r2, r3}
    2044:	add	r3, fp, #8
    2048:	mov	r1, #256	; 0x100
    204c:	mov	r2, ip
    2050:	str	r3, [sp]
    2054:	ldr	r0, [pc, #20]	; 2070 <sf_bpf_error+0x48>
    2058:	add	r0, pc, r0
    205c:	bl	f88 <vsnprintf@plt>
    2060:	ldr	r0, [pc, #12]	; 2074 <sf_bpf_error+0x4c>
    2064:	mov	r1, #1
    2068:	add	r0, pc, r0
    206c:	bl	e44 <longjmp@plt>
    2070:	.word	0x0002e138
    2074:	.word	0x0002e230

00002078 <sf_sdup>:
    2078:	push	{r4, r5, r6, r7, fp, lr}
    207c:	add	fp, sp, #16
    2080:	mov	r6, r0
    2084:	bl	f04 <strlen@plt>
    2088:	add	r7, r0, #1
    208c:	mov	r4, r0
    2090:	mov	r0, r7
    2094:	bl	20bc <newchunk>
    2098:	mov	r1, r6
    209c:	mov	r2, r7
    20a0:	mov	r5, r0
    20a4:	bl	f58 <strncpy@plt>
    20a8:	cmp	r7, #1
    20ac:	movge	r0, #0
    20b0:	strbge	r0, [r5, r4]
    20b4:	mov	r0, r5
    20b8:	pop	{r4, r5, r6, r7, fp, pc}

000020bc <newchunk>:
    20bc:	push	{r4, r5, r6, sl, fp, lr}
    20c0:	add	fp, sp, #16
    20c4:	ldr	r1, [pc, #140]	; 2158 <newchunk+0x9c>
    20c8:	add	r0, r0, #3
    20cc:	bic	r6, r0, #3
    20d0:	ldr	r1, [pc, r1]
    20d4:	ldr	r5, [pc, #128]	; 215c <newchunk+0xa0>
    20d8:	add	r5, pc, r5
    20dc:	ldr	r4, [r5, r1, lsl #3]!
    20e0:	cmp	r6, r4
    20e4:	bls	2138 <newchunk+0x7c>
    20e8:	ldr	r2, [pc, #112]	; 2160 <newchunk+0xa4>
    20ec:	add	r0, r1, #1
    20f0:	cmp	r1, #15
    20f4:	add	r2, pc, r2
    20f8:	str	r0, [r2]
    20fc:	bge	214c <newchunk+0x90>
    2100:	mov	r1, #1024	; 0x400
    2104:	lsl	r4, r1, r0
    2108:	mov	r0, r4
    210c:	bl	ed4 <malloc@plt>
    2110:	cmp	r0, #0
    2114:	str	r0, [r5, #12]
    2118:	beq	214c <newchunk+0x90>
    211c:	mov	r1, #0
    2120:	mov	r2, r4
    2124:	add	r5, r5, #8
    2128:	bl	f40 <memset@plt>
    212c:	cmp	r6, r4
    2130:	str	r4, [r5]
    2134:	bhi	214c <newchunk+0x90>
    2138:	sub	r0, r4, r6
    213c:	str	r0, [r5]
    2140:	ldr	r1, [r5, #4]
    2144:	add	r0, r1, r0
    2148:	pop	{r4, r5, r6, sl, fp, pc}
    214c:	ldr	r0, [pc, #16]	; 2164 <newchunk+0xa8>
    2150:	add	r0, pc, r0
    2154:	bl	2028 <sf_bpf_error>
    2158:	.word	0x0002e42c
    215c:	.word	0x0002e3a4
    2160:	.word	0x0002e408
    2164:	.word	0x00011254

00002168 <sfbpf_compile>:
    2168:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    216c:	add	fp, sp, #28
    2170:	sub	sp, sp, #12
    2174:	str	r3, [sp, #8]
    2178:	mov	r5, r1
    217c:	mov	r6, r0
    2180:	mov	r0, #0
    2184:	vmov.i32	q8, #0	; 0x00000000
    2188:	mov	r4, r2
    218c:	ldr	r1, [pc, #2796]	; 2c80 <sfbpf_compile+0xb18>
    2190:	ldr	r1, [pc, r1]
    2194:	str	r0, [r1]
    2198:	ldr	r1, [pc, #2788]	; 2c84 <sfbpf_compile+0xb1c>
    219c:	add	r1, pc, r1
    21a0:	str	r0, [r1]
    21a4:	ldr	r1, [pc, #2780]	; 2c88 <sfbpf_compile+0xb20>
    21a8:	add	r1, pc, r1
    21ac:	str	r0, [r1]
    21b0:	ldr	r1, [pc, #2772]	; 2c8c <sfbpf_compile+0xb24>
    21b4:	add	r1, pc, r1
    21b8:	str	r0, [r1]
    21bc:	ldr	r0, [pc, #2764]	; 2c90 <sfbpf_compile+0xb28>
    21c0:	add	r0, pc, r0
    21c4:	add	r1, r0, #32
    21c8:	vst1.64	{d16-d17}, [r1]
    21cc:	add	r1, r0, #16
    21d0:	vst1.64	{d16-d17}, [r1]
    21d4:	mov	r1, #48	; 0x30
    21d8:	vst1.64	{d16-d17}, [r0], r1
    21dc:	vst1.64	{d16-d17}, [r0]
    21e0:	ldr	r0, [pc, #2732]	; 2c94 <sfbpf_compile+0xb2c>
    21e4:	add	r0, pc, r0
    21e8:	bl	e50 <_setjmp@plt>
    21ec:	cmp	r0, #0
    21f0:	beq	2228 <sfbpf_compile+0xc0>
    21f4:	ldr	r0, [pc, #2716]	; 2c98 <sfbpf_compile+0xb30>
    21f8:	ldr	r0, [pc, r0]
    21fc:	cmp	r0, #0
    2200:	beq	2218 <sfbpf_compile+0xb0>
    2204:	bl	f94 <freeaddrinfo@plt>
    2208:	ldr	r0, [pc, #2700]	; 2c9c <sfbpf_compile+0xb34>
    220c:	mov	r1, #0
    2210:	add	r0, pc, r0
    2214:	str	r1, [r0]
    2218:	bl	1265c <sf_lex_cleanup>
    221c:	bl	2e54 <freechunks>
    2220:	mvn	r0, #0
    2224:	b	2c58 <sfbpf_compile+0xaf0>
    2228:	ldr	r1, [pc, #2672]	; 2ca0 <sfbpf_compile+0xb38>
    222c:	ldr	r0, [fp, #12]
    2230:	cmp	r6, #0
    2234:	add	r1, pc, r1
    2238:	str	r6, [r1]
    223c:	ldr	r1, [pc, #2656]	; 2ca4 <sfbpf_compile+0xb3c>
    2240:	add	r1, pc, r1
    2244:	str	r0, [r1]
    2248:	beq	2264 <sfbpf_compile+0xfc>
    224c:	ldr	r0, [sp, #8]
    2250:	str	r4, [sp]
    2254:	cmp	r0, #0
    2258:	beq	2290 <sfbpf_compile+0x128>
    225c:	ldr	r0, [sp, #8]
    2260:	b	2298 <sfbpf_compile+0x130>
    2264:	ldr	r0, [pc, #2620]	; 2ca8 <sfbpf_compile+0xb40>
    2268:	ldr	r1, [pc, #2620]	; 2cac <sfbpf_compile+0xb44>
    226c:	add	r0, pc, r0
    2270:	add	r1, pc, r1
    2274:	ldm	r0!, {r2, r3, r6, r7}
    2278:	stmia	r1!, {r2, r3, r6, r7}
    227c:	ldm	r0!, {r2, r3, r6, r7}
    2280:	ldrb	r0, [r0]
    2284:	stmia	r1!, {r2, r3, r6, r7}
    2288:	strb	r0, [r1]
    228c:	b	2220 <sfbpf_compile+0xb8>
    2290:	ldr	r0, [pc, #2584]	; 2cb0 <sfbpf_compile+0xb48>
    2294:	add	r0, pc, r0
    2298:	bl	1262c <sf_lex_init>
    229c:	ldr	r0, [pc, #2576]	; 2cb4 <sfbpf_compile+0xb4c>
    22a0:	mov	sl, #0
    22a4:	mvn	r3, #0
    22a8:	cmp	r5, #98	; 0x62
    22ac:	add	r0, pc, r0
    22b0:	str	sl, [r0]
    22b4:	ldr	r0, [pc, #2556]	; 2cb8 <sfbpf_compile+0xb50>
    22b8:	add	r0, pc, r0
    22bc:	str	r5, [r0]
    22c0:	ldr	r0, [pc, #2548]	; 2cbc <sfbpf_compile+0xb54>
    22c4:	add	r0, pc, r0
    22c8:	strb	sl, [r0]
    22cc:	ldr	r0, [pc, #2540]	; 2cc0 <sfbpf_compile+0xb58>
    22d0:	add	r0, pc, r0
    22d4:	strb	sl, [r0]
    22d8:	mov	r0, #1
    22dc:	ldr	r4, [pc, #2528]	; 2cc4 <sfbpf_compile+0xb5c>
    22e0:	add	r4, pc, r4
    22e4:	str	r3, [r4]
    22e8:	ldr	r1, [pc, #2520]	; 2cc8 <sfbpf_compile+0xb60>
    22ec:	add	r1, pc, r1
    22f0:	str	r3, [r1]
    22f4:	ldr	r8, [pc, #2512]	; 2ccc <sfbpf_compile+0xb64>
    22f8:	add	r8, pc, r8
    22fc:	strb	r0, [r8]
    2300:	ldr	r7, [pc, #2504]	; 2cd0 <sfbpf_compile+0xb68>
    2304:	add	r7, pc, r7
    2308:	str	r3, [r7]
    230c:	ldr	r0, [pc, #2496]	; 2cd4 <sfbpf_compile+0xb6c>
    2310:	add	r0, pc, r0
    2314:	strb	sl, [r0]
    2318:	ldr	r9, [pc, #2488]	; 2cd8 <sfbpf_compile+0xb70>
    231c:	add	r9, pc, r9
    2320:	str	r3, [r9]
    2324:	ldr	ip, [pc, #2480]	; 2cdc <sfbpf_compile+0xb74>
    2328:	add	ip, pc, ip
    232c:	str	r3, [ip]
    2330:	ldr	r0, [pc, #2472]	; 2ce0 <sfbpf_compile+0xb78>
    2334:	add	r0, pc, r0
    2338:	str	r3, [r0]
    233c:	ldr	r6, [pc, #2464]	; 2ce4 <sfbpf_compile+0xb7c>
    2340:	add	r6, pc, r6
    2344:	str	r3, [r6]
    2348:	ldr	r2, [pc, #2456]	; 2ce8 <sfbpf_compile+0xb80>
    234c:	add	r2, pc, r2
    2350:	str	r3, [r2]
    2354:	ldr	r2, [pc, #2448]	; 2cec <sfbpf_compile+0xb84>
    2358:	add	r2, pc, r2
    235c:	str	sl, [r2]
    2360:	ldr	lr, [pc, #2440]	; 2cf0 <sfbpf_compile+0xb88>
    2364:	add	lr, pc, lr
    2368:	strb	sl, [lr]
    236c:	ldr	r2, [pc, #2432]	; 2cf4 <sfbpf_compile+0xb8c>
    2370:	add	r2, pc, r2
    2374:	str	r3, [r2]
    2378:	ldr	r2, [pc, #2424]	; 2cf8 <sfbpf_compile+0xb90>
    237c:	add	r2, pc, r2
    2380:	str	sl, [r2]
    2384:	ldr	r2, [pc, #2416]	; 2cfc <sfbpf_compile+0xb94>
    2388:	add	r2, pc, r2
    238c:	str	r3, [r2]
    2390:	ldr	r2, [pc, #2408]	; 2d00 <sfbpf_compile+0xb98>
    2394:	add	r2, pc, r2
    2398:	str	r3, [r2]
    239c:	ble	25e4 <sfbpf_compile+0x47c>
    23a0:	sub	r3, r5, #99	; 0x63
    23a4:	cmp	r3, #130	; 0x82
    23a8:	bhi	2c60 <sfbpf_compile+0xaf8>
    23ac:	add	r2, pc, #4
    23b0:	ldr	r3, [r2, r3, lsl #2]
    23b4:	add	pc, r2, r3
    23b8:	.word	0x00000444
    23bc:	.word	0x000008a8
    23c0:	.word	0x000008a8
    23c4:	.word	0x000008a8
    23c8:	.word	0x000008a8
    23cc:	.word	0x00000334
    23d0:	.word	0x000002d8
    23d4:	.word	0x000008a8
    23d8:	.word	0x000002b8
    23dc:	.word	0x00000324
    23e0:	.word	0x0000044c
    23e4:	.word	0x000008a8
    23e8:	.word	0x000008a8
    23ec:	.word	0x000008a8
    23f0:	.word	0x0000046c
    23f4:	.word	0x000002b8
    23f8:	.word	0x000008a8
    23fc:	.word	0x000008a8
    2400:	.word	0x000008a8
    2404:	.word	0x000008a8
    2408:	.word	0x000002d8
    240c:	.word	0x000008a8
    2410:	.word	0x000008a8
    2414:	.word	0x000003b8
    2418:	.word	0x0000048c
    241c:	.word	0x000008a8
    2420:	.word	0x000008a8
    2424:	.word	0x000008a8
    2428:	.word	0x000002d8
    242c:	.word	0x000008a8
    2430:	.word	0x00000690
    2434:	.word	0x00000298
    2438:	.word	0x00000298
    243c:	.word	0x000004e0
    2440:	.word	0x00000500
    2444:	.word	0x00000298
    2448:	.word	0x00000520
    244c:	.word	0x00000528
    2450:	.word	0x000006c0
    2454:	.word	0x000003c0
    2458:	.word	0x000003e0
    245c:	.word	0x000006fc
    2460:	.word	0x000008a8
    2464:	.word	0x000008a8
    2468:	.word	0x0000020c
    246c:	.word	0x0000020c
    2470:	.word	0x000008a8
    2474:	.word	0x000008a8
    2478:	.word	0x000008a8
    247c:	.word	0x000008a8
    2480:	.word	0x000008a8
    2484:	.word	0x000008a8
    2488:	.word	0x000008a8
    248c:	.word	0x000008a8
    2490:	.word	0x000008a8
    2494:	.word	0x000008a8
    2498:	.word	0x000008a8
    249c:	.word	0x000008a8
    24a0:	.word	0x000008a8
    24a4:	.word	0x000008a8
    24a8:	.word	0x000008a8
    24ac:	.word	0x000008a8
    24b0:	.word	0x000008a8
    24b4:	.word	0x000008a8
    24b8:	.word	0x000002d8
    24bc:	.word	0x00000548
    24c0:	.word	0x000008a8
    24c4:	.word	0x00000334
    24c8:	.word	0x00000354
    24cc:	.word	0x00000404
    24d0:	.word	0x000008a8
    24d4:	.word	0x000008a8
    24d8:	.word	0x000008a8
    24dc:	.word	0x000008a8
    24e0:	.word	0x000008a8
    24e4:	.word	0x000008a8
    24e8:	.word	0x000008a8
    24ec:	.word	0x000008a8
    24f0:	.word	0x0000020c
    24f4:	.word	0x00000354
    24f8:	.word	0x00000298
    24fc:	.word	0x00000298
    2500:	.word	0x00000298
    2504:	.word	0x00000550
    2508:	.word	0x00000304
    250c:	.word	0x000008a8
    2510:	.word	0x000008a8
    2514:	.word	0x0000020c
    2518:	.word	0x0000020c
    251c:	.word	0x000008a8
    2520:	.word	0x0000020c
    2524:	.word	0x0000020c
    2528:	.word	0x0000020c
    252c:	.word	0x000002d8
    2530:	.word	0x0000020c
    2534:	.word	0x000007a4
    2538:	.word	0x0000020c
    253c:	.word	0x0000020c
    2540:	.word	0x00000394
    2544:	.word	0x0000020c
    2548:	.word	0x0000020c
    254c:	.word	0x00000304
    2550:	.word	0x0000020c
    2554:	.word	0x00000760
    2558:	.word	0x000008a8
    255c:	.word	0x000008a8
    2560:	.word	0x000008a8
    2564:	.word	0x000008a8
    2568:	.word	0x000008a8
    256c:	.word	0x000008a8
    2570:	.word	0x000008a8
    2574:	.word	0x000008a8
    2578:	.word	0x000008a8
    257c:	.word	0x000008a8
    2580:	.word	0x000008a8
    2584:	.word	0x000008a8
    2588:	.word	0x0000020c
    258c:	.word	0x000008a8
    2590:	.word	0x000008a8
    2594:	.word	0x000008a8
    2598:	.word	0x0000020c
    259c:	.word	0x0000020c
    25a0:	.word	0x000008a8
    25a4:	.word	0x000008a8
    25a8:	.word	0x000008a8
    25ac:	.word	0x000008a8
    25b0:	.word	0x000008a8
    25b4:	.word	0x00000584
    25b8:	.word	0x0000020c
    25bc:	.word	0x000002b8
    25c0:	.word	0x000002b8
    25c4:	ldr	r1, [pc, #2160]	; 2e3c <sfbpf_compile+0xcd4>
    25c8:	mvn	r0, #0
    25cc:	add	r1, pc, r1
    25d0:	str	r0, [r1]
    25d4:	ldr	r1, [pc, #2148]	; 2e40 <sfbpf_compile+0xcd8>
    25d8:	add	r1, pc, r1
    25dc:	str	r0, [r1]
    25e0:	b	2b7c <sfbpf_compile+0xa14>
    25e4:	cmp	r5, #19
    25e8:	bhi	26e4 <sfbpf_compile+0x57c>
    25ec:	add	r0, pc, #4
    25f0:	ldr	r1, [r0, r5, lsl #2]
    25f4:	add	pc, r0, r1
    25f8:	.word	0x000000e4
    25fc:	.word	0x00000384
    2600:	.word	0x00000668
    2604:	.word	0x00000668
    2608:	.word	0x00000668
    260c:	.word	0x00000668
    2610:	.word	0x000003b4
    2614:	.word	0x000003bc
    2618:	.word	0x000003c4
    261c:	.word	0x000000f4
    2620:	.word	0x000003cc
    2624:	.word	0x00000050
    2628:	.word	0x00000078
    262c:	.word	0x00000668
    2630:	.word	0x00000668
    2634:	.word	0x00000408
    2638:	.word	0x000001e4
    263c:	.word	0x00000668
    2640:	.word	0x00000668
    2644:	.word	0x00000050
    2648:	mov	r0, #0
    264c:	b	29c8 <sfbpf_compile+0x860>
    2650:	mov	r0, #4
    2654:	ldr	r1, [pc, #1888]	; 2dbc <sfbpf_compile+0xc54>
    2658:	add	r1, pc, r1
    265c:	str	r0, [r1]
    2660:	ldr	r1, [pc, #1880]	; 2dc0 <sfbpf_compile+0xc58>
    2664:	add	r1, pc, r1
    2668:	str	r0, [r1]
    266c:	b	295c <sfbpf_compile+0x7f4>
    2670:	ldr	r1, [pc, #1816]	; 2d90 <sfbpf_compile+0xc28>
    2674:	mov	r0, #0
    2678:	mvn	r2, #0
    267c:	add	r1, pc, r1
    2680:	str	r0, [r1]
    2684:	ldr	r1, [pc, #1800]	; 2d94 <sfbpf_compile+0xc2c>
    2688:	add	r1, pc, r1
    268c:	b	2b78 <sfbpf_compile+0xa10>
    2690:	ldr	r1, [pc, #1760]	; 2d78 <sfbpf_compile+0xc10>
    2694:	mov	r0, #0
    2698:	add	r1, pc, r1
    269c:	str	r0, [r1]
    26a0:	mov	r1, #24
    26a4:	ldr	r0, [pc, #1744]	; 2d7c <sfbpf_compile+0xc14>
    26a8:	add	r0, pc, r0
    26ac:	str	r1, [r0]
    26b0:	mov	r0, #1
    26b4:	strb	r0, [lr]
    26b8:	b	29e0 <sfbpf_compile+0x878>
    26bc:	ldr	r1, [pc, #1864]	; 2e0c <sfbpf_compile+0xca4>
    26c0:	mvn	r0, #0
    26c4:	mov	r2, #18
    26c8:	add	r1, pc, r1
    26cc:	str	r0, [r1]
    26d0:	ldr	r1, [pc, #1848]	; 2e10 <sfbpf_compile+0xca8>
    26d4:	add	r1, pc, r1
    26d8:	b	2b78 <sfbpf_compile+0xa10>
    26dc:	mov	r0, #4
    26e0:	b	2808 <sfbpf_compile+0x6a0>
    26e4:	cmp	r5, #50	; 0x32
    26e8:	bne	2a20 <sfbpf_compile+0x8b8>
    26ec:	mov	r0, #4
    26f0:	ldr	r1, [pc, #1556]	; 2d0c <sfbpf_compile+0xba4>
    26f4:	add	r1, pc, r1
    26f8:	str	r0, [r1]
    26fc:	mov	r1, #2
    2700:	ldr	r0, [pc, #1544]	; 2d10 <sfbpf_compile+0xba8>
    2704:	add	r0, pc, r0
    2708:	b	2a64 <sfbpf_compile+0x8fc>
    270c:	ldr	r0, [pc, #1728]	; 2dd4 <sfbpf_compile+0xc6c>
    2710:	mov	r1, #16
    2714:	add	r0, pc, r0
    2718:	str	r1, [r0]
    271c:	mov	r0, #14
    2720:	ldr	r1, [pc, #1712]	; 2dd8 <sfbpf_compile+0xc70>
    2724:	add	r1, pc, r1
    2728:	str	r0, [r1]
    272c:	mov	r1, #18
    2730:	ldr	r0, [pc, #1700]	; 2ddc <sfbpf_compile+0xc74>
    2734:	add	r0, pc, r0
    2738:	str	r1, [r0]
    273c:	mov	r1, #21
    2740:	ldr	r0, [pc, #1688]	; 2de0 <sfbpf_compile+0xc78>
    2744:	add	r0, pc, r0
    2748:	b	2b10 <sfbpf_compile+0x9a8>
    274c:	mov	r1, #23
    2750:	str	r1, [ip]
    2754:	mov	r1, #22
    2758:	str	r1, [r9]
    275c:	mov	r1, #24
    2760:	str	r1, [r0]
    2764:	str	r1, [r6]
    2768:	mov	r0, #27
    276c:	b	2ad4 <sfbpf_compile+0x96c>
    2770:	mov	r0, #16
    2774:	b	29c8 <sfbpf_compile+0x860>
    2778:	ldr	r1, [pc, #1588]	; 2db4 <sfbpf_compile+0xc4c>
    277c:	mov	r0, #18
    2780:	add	r1, pc, r1
    2784:	str	r0, [r1]
    2788:	mov	r1, #16
    278c:	ldr	r0, [pc, #1572]	; 2db8 <sfbpf_compile+0xc50>
    2790:	add	r0, pc, r0
    2794:	b	2a64 <sfbpf_compile+0x8fc>
    2798:	mov	r1, #7
    279c:	str	r1, [ip]
    27a0:	mov	r1, #6
    27a4:	str	r1, [r9]
    27a8:	mov	r1, #8
    27ac:	str	r1, [r0]
    27b0:	str	r1, [r6]
    27b4:	mov	r0, #11
    27b8:	b	2ad4 <sfbpf_compile+0x96c>
    27bc:	ldr	r1, [pc, #1568]	; 2de4 <sfbpf_compile+0xc7c>
    27c0:	mov	r0, #6
    27c4:	add	r1, pc, r1
    27c8:	str	r0, [r1]
    27cc:	mov	r1, #4
    27d0:	ldr	r0, [pc, #1552]	; 2de8 <sfbpf_compile+0xc80>
    27d4:	add	r0, pc, r0
    27d8:	b	2958 <sfbpf_compile+0x7f0>
    27dc:	ldr	r1, [pc, #1404]	; 2d60 <sfbpf_compile+0xbf8>
    27e0:	mov	r0, #24
    27e4:	add	r1, pc, r1
    27e8:	str	r0, [r1]
    27ec:	mov	r1, #5
    27f0:	ldr	r0, [pc, #1388]	; 2d64 <sfbpf_compile+0xbfc>
    27f4:	add	r0, pc, r0
    27f8:	b	2a64 <sfbpf_compile+0x8fc>
    27fc:	mov	r0, #44	; 0x2c
    2800:	b	2a2c <sfbpf_compile+0x8c4>
    2804:	mov	r0, #12
    2808:	ldr	r1, [pc, #1316]	; 2d34 <sfbpf_compile+0xbcc>
    280c:	add	r1, pc, r1
    2810:	str	r0, [r1]
    2814:	mov	r1, #0
    2818:	ldr	r0, [pc, #1304]	; 2d38 <sfbpf_compile+0xbd0>
    281c:	add	r0, pc, r0
    2820:	b	2af8 <sfbpf_compile+0x990>
    2824:	ldr	r1, [pc, #1396]	; 2da0 <sfbpf_compile+0xc38>
    2828:	mov	r0, #16
    282c:	add	r1, pc, r1
    2830:	str	r0, [r1]
    2834:	mov	r1, #14
    2838:	ldr	r0, [pc, #1380]	; 2da4 <sfbpf_compile+0xc3c>
    283c:	add	r0, pc, r0
    2840:	b	2a64 <sfbpf_compile+0x8fc>
    2844:	mov	r0, #1
    2848:	str	r0, [r4]
    284c:	ldr	r2, [pc, #1324]	; 2d80 <sfbpf_compile+0xc18>
    2850:	add	r2, pc, r2
    2854:	strb	r0, [r2]
    2858:	mov	r0, #2
    285c:	str	r0, [r1]
    2860:	mov	r0, #0
    2864:	strb	r0, [r8]
    2868:	mvn	r0, #0
    286c:	ldr	r1, [pc, #1296]	; 2d84 <sfbpf_compile+0xc1c>
    2870:	add	r1, pc, r1
    2874:	str	r0, [r1]
    2878:	mov	r0, #4
    287c:	str	r0, [r7]
    2880:	ldr	r1, [pc, #1280]	; 2d88 <sfbpf_compile+0xc20>
    2884:	add	r1, pc, r1
    2888:	str	r0, [r1]
    288c:	ldr	r1, [pc, #1272]	; 2d8c <sfbpf_compile+0xc24>
    2890:	add	r1, pc, r1
    2894:	b	29dc <sfbpf_compile+0x874>
    2898:	ldr	r1, [pc, #1372]	; 2dfc <sfbpf_compile+0xc94>
    289c:	mvn	r0, #0
    28a0:	mov	r2, #6
    28a4:	add	r1, pc, r1
    28a8:	str	r0, [r1]
    28ac:	ldr	r1, [pc, #1356]	; 2e00 <sfbpf_compile+0xc98>
    28b0:	add	r1, pc, r1
    28b4:	b	2b78 <sfbpf_compile+0xa10>
    28b8:	ldr	r1, [pc, #1332]	; 2df4 <sfbpf_compile+0xc8c>
    28bc:	mov	r0, #12
    28c0:	add	r1, pc, r1
    28c4:	str	r0, [r1]
    28c8:	mov	r1, #6
    28cc:	ldr	r0, [pc, #1316]	; 2df8 <sfbpf_compile+0xc90>
    28d0:	add	r0, pc, r0
    28d4:	b	2958 <sfbpf_compile+0x7f0>
    28d8:	mov	r0, #8
    28dc:	b	2a7c <sfbpf_compile+0x914>
    28e0:	ldr	r1, [pc, #1308]	; 2e04 <sfbpf_compile+0xc9c>
    28e4:	mvn	r0, #0
    28e8:	mov	r2, #12
    28ec:	add	r1, pc, r1
    28f0:	str	r0, [r1]
    28f4:	ldr	r1, [pc, #1292]	; 2e08 <sfbpf_compile+0xca0>
    28f8:	add	r1, pc, r1
    28fc:	b	2b78 <sfbpf_compile+0xa10>
    2900:	mov	r0, #12
    2904:	b	2654 <sfbpf_compile+0x4ec>
    2908:	ldr	r1, [pc, #1176]	; 2da8 <sfbpf_compile+0xc40>
    290c:	mov	r0, #0
    2910:	mvn	r2, #0
    2914:	add	r1, pc, r1
    2918:	str	r0, [r1]
    291c:	ldr	r1, [pc, #1160]	; 2dac <sfbpf_compile+0xc44>
    2920:	add	r1, pc, r1
    2924:	str	r2, [r1]
    2928:	mov	r2, #4
    292c:	ldr	r1, [pc, #1148]	; 2db0 <sfbpf_compile+0xc48>
    2930:	add	r1, pc, r1
    2934:	str	r2, [r1]
    2938:	b	2b88 <sfbpf_compile+0xa20>
    293c:	ldr	r1, [pc, #1280]	; 2e44 <sfbpf_compile+0xcdc>
    2940:	mov	r0, #24
    2944:	add	r1, pc, r1
    2948:	str	r0, [r1]
    294c:	mov	r1, #1
    2950:	ldr	r0, [pc, #1264]	; 2e48 <sfbpf_compile+0xce0>
    2954:	add	r0, pc, r0
    2958:	str	r1, [r0]
    295c:	ldr	r0, [pc, #1160]	; 2dec <sfbpf_compile+0xc84>
    2960:	mov	r1, #0
    2964:	add	r0, pc, r0
    2968:	str	r1, [r0]
    296c:	mvn	r1, #0
    2970:	ldr	r0, [pc, #1144]	; 2df0 <sfbpf_compile+0xc88>
    2974:	add	r0, pc, r0
    2978:	b	2b10 <sfbpf_compile+0x9a8>
    297c:	ldr	r1, [pc, #924]	; 2d20 <sfbpf_compile+0xbb8>
    2980:	mov	r0, #14
    2984:	add	r1, pc, r1
    2988:	str	r0, [r1]
    298c:	mov	r1, #12
    2990:	ldr	r0, [pc, #908]	; 2d24 <sfbpf_compile+0xbbc>
    2994:	add	r0, pc, r0
    2998:	str	r1, [r0]
    299c:	mov	r1, #0
    29a0:	ldr	r0, [pc, #896]	; 2d28 <sfbpf_compile+0xbc0>
    29a4:	add	r0, pc, r0
    29a8:	b	29ec <sfbpf_compile+0x884>
    29ac:	mov	r0, #14
    29b0:	b	29c8 <sfbpf_compile+0x860>
    29b4:	mov	r0, #6
    29b8:	b	26f0 <sfbpf_compile+0x588>
    29bc:	mov	r0, #16
    29c0:	b	2a04 <sfbpf_compile+0x89c>
    29c4:	mov	r0, #13
    29c8:	ldr	r1, [pc, #920]	; 2d68 <sfbpf_compile+0xc00>
    29cc:	add	r1, pc, r1
    29d0:	str	r0, [r1]
    29d4:	ldr	r1, [pc, #912]	; 2d6c <sfbpf_compile+0xc04>
    29d8:	add	r1, pc, r1
    29dc:	str	r0, [r1]
    29e0:	ldr	r0, [pc, #904]	; 2d70 <sfbpf_compile+0xc08>
    29e4:	mov	r1, #8
    29e8:	add	r0, pc, r0
    29ec:	str	r1, [r0]
    29f0:	mov	r1, #3
    29f4:	ldr	r0, [pc, #888]	; 2d74 <sfbpf_compile+0xc0c>
    29f8:	add	r0, pc, r0
    29fc:	b	2b10 <sfbpf_compile+0x9a8>
    2a00:	mov	r0, #24
    2a04:	ldr	r1, [pc, #800]	; 2d2c <sfbpf_compile+0xbc4>
    2a08:	add	r1, pc, r1
    2a0c:	str	r0, [r1]
    2a10:	mvn	r1, #0
    2a14:	ldr	r0, [pc, #788]	; 2d30 <sfbpf_compile+0xbc8>
    2a18:	add	r0, pc, r0
    2a1c:	b	2a64 <sfbpf_compile+0x8fc>
    2a20:	cmp	r5, #51	; 0x33
    2a24:	bne	2c60 <sfbpf_compile+0xaf8>
    2a28:	mov	r0, #8
    2a2c:	ldr	r1, [pc, #720]	; 2d04 <sfbpf_compile+0xb9c>
    2a30:	add	r1, pc, r1
    2a34:	str	r0, [r1]
    2a38:	mov	r1, #6
    2a3c:	ldr	r0, [pc, #708]	; 2d08 <sfbpf_compile+0xba0>
    2a40:	add	r0, pc, r0
    2a44:	b	2a64 <sfbpf_compile+0x8fc>
    2a48:	ldr	r1, [pc, #712]	; 2d18 <sfbpf_compile+0xbb0>
    2a4c:	mov	r0, #8
    2a50:	add	r1, pc, r1
    2a54:	str	r0, [r1]
    2a58:	mov	r1, #4
    2a5c:	ldr	r0, [pc, #696]	; 2d1c <sfbpf_compile+0xbb4>
    2a60:	add	r0, pc, r0
    2a64:	str	r1, [r0]
    2a68:	mov	r1, #0
    2a6c:	ldr	r0, [pc, #672]	; 2d14 <sfbpf_compile+0xbac>
    2a70:	add	r0, pc, r0
    2a74:	b	2b04 <sfbpf_compile+0x99c>
    2a78:	mov	r0, #4
    2a7c:	ldr	r1, [pc, #832]	; 2dc4 <sfbpf_compile+0xc5c>
    2a80:	add	r1, pc, r1
    2a84:	str	r0, [r1]
    2a88:	ldr	r1, [pc, #824]	; 2dc8 <sfbpf_compile+0xc60>
    2a8c:	add	r1, pc, r1
    2a90:	str	r0, [r1]
    2a94:	mov	r1, #0
    2a98:	ldr	r0, [pc, #812]	; 2dcc <sfbpf_compile+0xc64>
    2a9c:	add	r0, pc, r0
    2aa0:	str	r1, [r0]
    2aa4:	mov	r1, #10
    2aa8:	ldr	r0, [pc, #800]	; 2dd0 <sfbpf_compile+0xc68>
    2aac:	add	r0, pc, r0
    2ab0:	b	2b10 <sfbpf_compile+0x9a8>
    2ab4:	mov	r1, #3
    2ab8:	str	r1, [ip]
    2abc:	mov	r1, #2
    2ac0:	str	r1, [r9]
    2ac4:	mov	r1, #4
    2ac8:	str	r1, [r0]
    2acc:	mov	r0, #7
    2ad0:	str	r1, [r6]
    2ad4:	ldr	r1, [pc, #832]	; 2e1c <sfbpf_compile+0xcb4>
    2ad8:	add	r1, pc, r1
    2adc:	str	r0, [r1]
    2ae0:	mvn	r1, #0
    2ae4:	ldr	r0, [pc, #820]	; 2e20 <sfbpf_compile+0xcb8>
    2ae8:	add	r0, pc, r0
    2aec:	str	r1, [r0]
    2af0:	ldr	r0, [pc, #812]	; 2e24 <sfbpf_compile+0xcbc>
    2af4:	add	r0, pc, r0
    2af8:	str	r1, [r0]
    2afc:	ldr	r0, [pc, #568]	; 2d3c <sfbpf_compile+0xbd4>
    2b00:	add	r0, pc, r0
    2b04:	str	r1, [r0]
    2b08:	ldr	r0, [pc, #560]	; 2d40 <sfbpf_compile+0xbd8>
    2b0c:	add	r0, pc, r0
    2b10:	str	r1, [r0]
    2b14:	b	2b94 <sfbpf_compile+0xa2c>
    2b18:	ldr	r1, [pc, #776]	; 2e28 <sfbpf_compile+0xcc0>
    2b1c:	mvn	r0, #0
    2b20:	add	r1, pc, r1
    2b24:	str	r0, [r1]
    2b28:	ldr	r1, [pc, #764]	; 2e2c <sfbpf_compile+0xcc4>
    2b2c:	add	r1, pc, r1
    2b30:	str	r0, [r1]
    2b34:	ldr	r1, [pc, #756]	; 2e30 <sfbpf_compile+0xcc8>
    2b38:	add	r1, pc, r1
    2b3c:	str	r0, [r1]
    2b40:	ldr	r1, [pc, #748]	; 2e34 <sfbpf_compile+0xccc>
    2b44:	add	r1, pc, r1
    2b48:	str	r0, [r1]
    2b4c:	mov	r0, #1
    2b50:	ldr	r1, [pc, #736]	; 2e38 <sfbpf_compile+0xcd0>
    2b54:	add	r1, pc, r1
    2b58:	b	2b90 <sfbpf_compile+0xa28>
    2b5c:	ldr	r1, [pc, #688]	; 2e14 <sfbpf_compile+0xcac>
    2b60:	mvn	r0, #0
    2b64:	mov	r2, #8
    2b68:	add	r1, pc, r1
    2b6c:	str	r0, [r1]
    2b70:	ldr	r1, [pc, #672]	; 2e18 <sfbpf_compile+0xcb0>
    2b74:	add	r1, pc, r1
    2b78:	str	r2, [r1]
    2b7c:	ldr	r1, [pc, #532]	; 2d98 <sfbpf_compile+0xc30>
    2b80:	add	r1, pc, r1
    2b84:	str	r0, [r1]
    2b88:	ldr	r1, [pc, #524]	; 2d9c <sfbpf_compile+0xc34>
    2b8c:	add	r1, pc, r1
    2b90:	str	r0, [r1]
    2b94:	ldr	r6, [sp]
    2b98:	ldr	r7, [pc, #420]	; 2d44 <sfbpf_compile+0xbdc>
    2b9c:	add	r7, pc, r7
    2ba0:	bl	efd8 <sfbpf_parse>
    2ba4:	ldr	r0, [pc, #412]	; 2d48 <sfbpf_compile+0xbe0>
    2ba8:	ldr	r0, [pc, r0]
    2bac:	ldr	r0, [r0]
    2bb0:	cmp	r0, #0
    2bb4:	bne	2c70 <sfbpf_compile+0xb08>
    2bb8:	ldr	r0, [pc, #396]	; 2d4c <sfbpf_compile+0xbe4>
    2bbc:	ldr	r4, [fp, #8]
    2bc0:	ldr	r0, [pc, r0]
    2bc4:	cmp	r0, #0
    2bc8:	bne	2bf0 <sfbpf_compile+0xa88>
    2bcc:	ldr	r5, [pc, #380]	; 2d50 <sfbpf_compile+0xbe8>
    2bd0:	mov	r0, #208	; 0xd0
    2bd4:	ldr	r5, [pc, r5]
    2bd8:	bl	20bc <newchunk>
    2bdc:	mov	r1, #6
    2be0:	str	r1, [r0, #8]
    2be4:	str	r5, [r0, #20]
    2be8:	str	r0, [r0, #96]	; 0x60
    2bec:	str	r0, [r7]
    2bf0:	cmp	r4, #0
    2bf4:	beq	2c38 <sfbpf_compile+0xad0>
    2bf8:	ldr	r1, [pc, #340]	; 2d54 <sfbpf_compile+0xbec>
    2bfc:	ldr	r1, [pc, r1]
    2c00:	cmp	r1, #0
    2c04:	bne	2c38 <sfbpf_compile+0xad0>
    2c08:	ldr	r0, [pc, #328]	; 2d58 <sfbpf_compile+0xbf0>
    2c0c:	add	r0, pc, r0
    2c10:	bl	c2f8 <sf_bpf_optimize>
    2c14:	ldr	r0, [pc, #320]	; 2d5c <sfbpf_compile+0xbf4>
    2c18:	ldr	r0, [pc, r0]
    2c1c:	cmp	r0, #0
    2c20:	beq	2c74 <sfbpf_compile+0xb0c>
    2c24:	ldr	r1, [r0, #8]
    2c28:	cmp	r1, #6
    2c2c:	ldreq	r1, [r0, #20]
    2c30:	cmpeq	r1, #0
    2c34:	beq	2c74 <sfbpf_compile+0xb0c>
    2c38:	add	r1, sp, #4
    2c3c:	bl	dfd4 <sf_icode_to_fcode>
    2c40:	ldr	r1, [sp, #4]
    2c44:	str	r1, [r6]
    2c48:	str	r0, [r6, #4]
    2c4c:	bl	1265c <sf_lex_cleanup>
    2c50:	bl	2e54 <freechunks>
    2c54:	mov	r0, #0
    2c58:	sub	sp, fp, #28
    2c5c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    2c60:	ldr	r0, [pc, #484]	; 2e4c <sfbpf_compile+0xce4>
    2c64:	mov	r1, r5
    2c68:	add	r0, pc, r0
    2c6c:	bl	2028 <sf_bpf_error>
    2c70:	bl	2eb0 <syntax>
    2c74:	ldr	r0, [pc, #468]	; 2e50 <sfbpf_compile+0xce8>
    2c78:	add	r0, pc, r0
    2c7c:	bl	2028 <sf_bpf_error>
    2c80:	.word	0x0002df20
    2c84:	.word	0x0002e808
    2c88:	.word	0x0002e278
    2c8c:	.word	0x0002e358
    2c90:	.word	0x0002e350
    2c94:	.word	0x0002e0b4
    2c98:	.word	0x0002e22c
    2c9c:	.word	0x0002e214
    2ca0:	.word	0x0002e1f8
    2ca4:	.word	0x0002e1e8
    2ca8:	.word	0x000105fc
    2cac:	.word	0x0002df20
    2cb0:	.word	0x00010564
    2cb4:	.word	0x0002e19c
    2cb8:	.word	0x0002e178
    2cbc:	.word	0x0002e190
    2cc0:	.word	0x0002e164
    2cc4:	.word	0x0002e178
    2cc8:	.word	0x0002e170
    2ccc:	.word	0x0002e168
    2cd0:	.word	0x0002e160
    2cd4:	.word	0x0002e140
    2cd8:	.word	0x0002e14c
    2cdc:	.word	0x0002e144
    2ce0:	.word	0x0002e13c
    2ce4:	.word	0x0002e134
    2ce8:	.word	0x0002e12c
    2cec:	.word	0x0002e0e4
    2cf0:	.word	0x0002e19c
    2cf4:	.word	0x0002dd68
    2cf8:	.word	0x0002dd58
    2cfc:	.word	0x0002e17c
    2d00:	.word	0x0002e174
    2d04:	.word	0x0002da0c
    2d08:	.word	0x0002d9f8
    2d0c:	.word	0x0002dd48
    2d10:	.word	0x0002dd34
    2d14:	.word	0x0002d9d0
    2d18:	.word	0x0002d9ec
    2d1c:	.word	0x0002d9d8
    2d20:	.word	0x0002dab8
    2d24:	.word	0x0002daa4
    2d28:	.word	0x0002da9c
    2d2c:	.word	0x0002da34
    2d30:	.word	0x0002da20
    2d34:	.word	0x0002dc30
    2d38:	.word	0x0002dc1c
    2d3c:	.word	0x0002d940
    2d40:	.word	0x0002d940
    2d44:	.word	0x0002d884
    2d48:	.word	0x0002d508
    2d4c:	.word	0x0002d860
    2d50:	.word	0x0002d858
    2d54:	.word	0x0002dda8
    2d58:	.word	0x0002d814
    2d5c:	.word	0x0002d808
    2d60:	.word	0x0002dc58
    2d64:	.word	0x0002dc44
    2d68:	.word	0x0002da70
    2d6c:	.word	0x0002da60
    2d70:	.word	0x0002da58
    2d74:	.word	0x0002da54
    2d78:	.word	0x0002dda4
    2d7c:	.word	0x0002dd90
    2d80:	.word	0x0002dc04
    2d84:	.word	0x0002dbd8
    2d88:	.word	0x0002dbb4
    2d8c:	.word	0x0002dbac
    2d90:	.word	0x0002ddc0
    2d94:	.word	0x0002ddb0
    2d98:	.word	0x0002d8c0
    2d9c:	.word	0x0002d8c0
    2da0:	.word	0x0002dc10
    2da4:	.word	0x0002dbfc
    2da8:	.word	0x0002db28
    2dac:	.word	0x0002db18
    2db0:	.word	0x0002db10
    2db4:	.word	0x0002dcbc
    2db8:	.word	0x0002dca8
    2dbc:	.word	0x0002dde4
    2dc0:	.word	0x0002ddd4
    2dc4:	.word	0x0002d9bc
    2dc8:	.word	0x0002d9ac
    2dcc:	.word	0x0002d9a4
    2dd0:	.word	0x0002d9a0
    2dd4:	.word	0x0002dd24
    2dd8:	.word	0x0002dd18
    2ddc:	.word	0x0002dd0c
    2de0:	.word	0x0002dd08
    2de4:	.word	0x0002dc78
    2de8:	.word	0x0002dc64
    2dec:	.word	0x0002dadc
    2df0:	.word	0x0002dad8
    2df4:	.word	0x0002db7c
    2df8:	.word	0x0002db68
    2dfc:	.word	0x0002db98
    2e00:	.word	0x0002db88
    2e04:	.word	0x0002db50
    2e08:	.word	0x0002db40
    2e0c:	.word	0x0002dd74
    2e10:	.word	0x0002dd64
    2e14:	.word	0x0002d8d4
    2e18:	.word	0x0002d8c4
    2e1c:	.word	0x0002d9a0
    2e20:	.word	0x0002d950
    2e24:	.word	0x0002d948
    2e28:	.word	0x0002d91c
    2e2c:	.word	0x0002d90c
    2e30:	.word	0x0002d908
    2e34:	.word	0x0002d908
    2e38:	.word	0x0002d8f4
    2e3c:	.word	0x0002de70
    2e40:	.word	0x0002de60
    2e44:	.word	0x0002daf8
    2e48:	.word	0x0002dae4
    2e4c:	.word	0x0001076c
    2e50:	.word	0x0000fc18

00002e54 <freechunks>:
    2e54:	push	{r4, r5, r6, r7, fp, lr}
    2e58:	add	fp, sp, #16
    2e5c:	ldr	r0, [pc, #68]	; 2ea8 <freechunks+0x54>
    2e60:	mov	r4, #0
    2e64:	mov	r6, #0
    2e68:	add	r0, pc, r0
    2e6c:	str	r4, [r0]
    2e70:	ldr	r5, [pc, #52]	; 2eac <freechunks+0x58>
    2e74:	add	r5, pc, r5
    2e78:	add	r0, r5, r6, lsl #3
    2e7c:	ldr	r0, [r0, #4]
    2e80:	cmp	r0, #0
    2e84:	beq	2e98 <freechunks+0x44>
    2e88:	lsl	r7, r6, #1
    2e8c:	bl	e5c <free@plt>
    2e90:	add	r0, r5, r7, lsl #2
    2e94:	str	r4, [r0, #4]
    2e98:	add	r6, r6, #1
    2e9c:	cmp	r6, #16
    2ea0:	popeq	{r4, r5, r6, r7, fp, pc}
    2ea4:	b	2e78 <freechunks+0x24>
    2ea8:	.word	0x0002d694
    2eac:	.word	0x0002d608

00002eb0 <syntax>:
    2eb0:	push	{fp, lr}
    2eb4:	mov	fp, sp
    2eb8:	ldr	r0, [pc, #4]	; 2ec4 <syntax+0x14>
    2ebc:	add	r0, pc, r0
    2ec0:	bl	2028 <sf_bpf_error>
    2ec4:	.word	0x000104f6

00002ec8 <sfbpf_freecode>:
    2ec8:	push	{r4, r5, fp, lr}
    2ecc:	add	fp, sp, #8
    2ed0:	mov	r5, #0
    2ed4:	mov	r4, r0
    2ed8:	str	r5, [r0]
    2edc:	ldr	r0, [r0, #4]
    2ee0:	cmp	r0, #0
    2ee4:	popeq	{r4, r5, fp, pc}
    2ee8:	bl	e5c <free@plt>
    2eec:	str	r5, [r4, #4]
    2ef0:	pop	{r4, r5, fp, pc}

00002ef4 <sf_finish_parse>:
    2ef4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    2ef8:	add	fp, sp, #28
    2efc:	sub	sp, sp, #4
    2f00:	mov	r8, r0
    2f04:	ldr	r9, [r0, #96]	; 0x60
    2f08:	ldr	r0, [pc, #2808]	; 3a08 <sf_finish_parse+0xb14>
    2f0c:	mov	r5, #0
    2f10:	ldr	r0, [pc, r0]
    2f14:	cmp	r0, #162	; 0xa2
    2f18:	bgt	3064 <sf_finish_parse+0x170>
    2f1c:	cmp	r0, #119	; 0x77
    2f20:	beq	31ac <sf_finish_parse+0x2b8>
    2f24:	cmp	r0, #127	; 0x7f
    2f28:	bne	33e0 <sf_finish_parse+0x4ec>
    2f2c:	ldr	r0, [pc, #2776]	; 3a0c <sf_finish_parse+0xb18>
    2f30:	ldr	r0, [pc, r0]
    2f34:	cmn	r0, #1
    2f38:	beq	3414 <sf_finish_parse+0x520>
    2f3c:	mov	r0, #20
    2f40:	bl	20bc <newchunk>
    2f44:	mov	r5, r0
    2f48:	mov	r0, #48	; 0x30
    2f4c:	str	r0, [r5]
    2f50:	mov	r0, #3
    2f54:	str	r0, [r5, #12]
    2f58:	mov	r0, #20
    2f5c:	bl	20bc <newchunk>
    2f60:	mov	r1, #100	; 0x64
    2f64:	mov	r2, r5
    2f68:	str	r1, [r0]
    2f6c:	mov	r1, r2
    2f70:	ldr	r2, [r2, #16]
    2f74:	cmp	r2, #0
    2f78:	bne	2f6c <sf_finish_parse+0x78>
    2f7c:	str	r0, [r1, #16]
    2f80:	mov	r1, #8
    2f84:	str	r1, [r0, #12]
    2f88:	mov	r0, #20
    2f8c:	bl	20bc <newchunk>
    2f90:	mov	r1, #7
    2f94:	mov	r2, r5
    2f98:	str	r1, [r0]
    2f9c:	mov	r1, r2
    2fa0:	ldr	r2, [r2, #16]
    2fa4:	cmp	r2, #0
    2fa8:	bne	2f9c <sf_finish_parse+0xa8>
    2fac:	str	r0, [r1, #16]
    2fb0:	mov	r0, #20
    2fb4:	bl	20bc <newchunk>
    2fb8:	mov	r1, #48	; 0x30
    2fbc:	mov	r2, r5
    2fc0:	str	r1, [r0]
    2fc4:	mov	r1, r2
    2fc8:	ldr	r2, [r2, #16]
    2fcc:	cmp	r2, #0
    2fd0:	bne	2fc4 <sf_finish_parse+0xd0>
    2fd4:	str	r0, [r1, #16]
    2fd8:	mov	r1, #2
    2fdc:	str	r1, [r0, #12]
    2fe0:	mov	r0, #20
    2fe4:	bl	20bc <newchunk>
    2fe8:	mov	r1, #76	; 0x4c
    2fec:	mov	r2, r5
    2ff0:	str	r1, [r0]
    2ff4:	mov	r1, r2
    2ff8:	ldr	r2, [r2, #16]
    2ffc:	cmp	r2, #0
    3000:	bne	2ff4 <sf_finish_parse+0x100>
    3004:	str	r0, [r1, #16]
    3008:	mov	r0, #20
    300c:	bl	20bc <newchunk>
    3010:	mov	r1, #2
    3014:	mov	r2, r5
    3018:	str	r1, [r0]
    301c:	ldr	r1, [pc, #2540]	; 3a10 <sf_finish_parse+0xb1c>
    3020:	ldr	r1, [pc, r1]
    3024:	str	r1, [r0, #12]
    3028:	mov	r1, r2
    302c:	ldr	r2, [r2, #16]
    3030:	cmp	r2, #0
    3034:	bne	3028 <sf_finish_parse+0x134>
    3038:	str	r0, [r1, #16]
    303c:	mov	r0, #20
    3040:	bl	20bc <newchunk>
    3044:	mov	r1, #7
    3048:	mov	r2, r5
    304c:	str	r1, [r0]
    3050:	mov	r1, r2
    3054:	ldr	r2, [r2, #16]
    3058:	cmp	r2, #0
    305c:	bne	3050 <sf_finish_parse+0x15c>
    3060:	b	33d4 <sf_finish_parse+0x4e0>
    3064:	cmp	r0, #163	; 0xa3
    3068:	beq	3350 <sf_finish_parse+0x45c>
    306c:	cmp	r0, #192	; 0xc0
    3070:	bne	33e0 <sf_finish_parse+0x4ec>
    3074:	ldr	r0, [pc, #2456]	; 3a14 <sf_finish_parse+0xb20>
    3078:	ldr	r0, [pc, r0]
    307c:	cmn	r0, #1
    3080:	beq	3414 <sf_finish_parse+0x520>
    3084:	mov	r0, #20
    3088:	bl	20bc <newchunk>
    308c:	mov	r5, r0
    3090:	mov	r0, #48	; 0x30
    3094:	str	r0, [r5]
    3098:	mov	r0, #3
    309c:	str	r0, [r5, #12]
    30a0:	mov	r0, #20
    30a4:	bl	20bc <newchunk>
    30a8:	mov	r1, #100	; 0x64
    30ac:	mov	r2, r5
    30b0:	str	r1, [r0]
    30b4:	mov	r1, r2
    30b8:	ldr	r2, [r2, #16]
    30bc:	cmp	r2, #0
    30c0:	bne	30b4 <sf_finish_parse+0x1c0>
    30c4:	str	r0, [r1, #16]
    30c8:	mov	r1, #8
    30cc:	str	r1, [r0, #12]
    30d0:	mov	r0, #20
    30d4:	bl	20bc <newchunk>
    30d8:	mov	r1, #7
    30dc:	mov	r2, r5
    30e0:	str	r1, [r0]
    30e4:	mov	r1, r2
    30e8:	ldr	r2, [r2, #16]
    30ec:	cmp	r2, #0
    30f0:	bne	30e4 <sf_finish_parse+0x1f0>
    30f4:	str	r0, [r1, #16]
    30f8:	mov	r0, #20
    30fc:	bl	20bc <newchunk>
    3100:	mov	r1, #48	; 0x30
    3104:	mov	r2, r5
    3108:	str	r1, [r0]
    310c:	mov	r1, r2
    3110:	ldr	r2, [r2, #16]
    3114:	cmp	r2, #0
    3118:	bne	310c <sf_finish_parse+0x218>
    311c:	str	r0, [r1, #16]
    3120:	mov	r1, #2
    3124:	str	r1, [r0, #12]
    3128:	mov	r0, #20
    312c:	bl	20bc <newchunk>
    3130:	mov	r1, #76	; 0x4c
    3134:	mov	r2, r5
    3138:	str	r1, [r0]
    313c:	mov	r1, r2
    3140:	ldr	r2, [r2, #16]
    3144:	cmp	r2, #0
    3148:	bne	313c <sf_finish_parse+0x248>
    314c:	str	r0, [r1, #16]
    3150:	mov	r0, #20
    3154:	bl	20bc <newchunk>
    3158:	mov	r1, #2
    315c:	mov	r2, r5
    3160:	str	r1, [r0]
    3164:	ldr	r1, [pc, #2220]	; 3a18 <sf_finish_parse+0xb24>
    3168:	ldr	r1, [pc, r1]
    316c:	str	r1, [r0, #12]
    3170:	mov	r1, r2
    3174:	ldr	r2, [r2, #16]
    3178:	cmp	r2, #0
    317c:	bne	3170 <sf_finish_parse+0x27c>
    3180:	str	r0, [r1, #16]
    3184:	mov	r0, #20
    3188:	bl	20bc <newchunk>
    318c:	mov	r1, #7
    3190:	mov	r2, r5
    3194:	str	r1, [r0]
    3198:	mov	r1, r2
    319c:	ldr	r2, [r2, #16]
    31a0:	cmp	r2, #0
    31a4:	bne	3198 <sf_finish_parse+0x2a4>
    31a8:	b	33d4 <sf_finish_parse+0x4e0>
    31ac:	ldr	r0, [pc, #2152]	; 3a1c <sf_finish_parse+0xb28>
    31b0:	mov	r1, #1
    31b4:	add	r0, pc, r0
    31b8:	str	r1, [r0]
    31bc:	ldr	r0, [pc, #2140]	; 3a20 <sf_finish_parse+0xb2c>
    31c0:	ldr	r0, [pc, r0]
    31c4:	cmn	r0, #1
    31c8:	beq	3414 <sf_finish_parse+0x520>
    31cc:	mov	r0, #20
    31d0:	bl	20bc <newchunk>
    31d4:	mov	r5, r0
    31d8:	mov	r0, #32
    31dc:	str	r0, [r5]
    31e0:	mov	r0, #0
    31e4:	str	r0, [r5, #12]
    31e8:	mov	r0, #20
    31ec:	bl	20bc <newchunk>
    31f0:	mov	r1, #84	; 0x54
    31f4:	mov	r2, r5
    31f8:	str	r1, [r0]
    31fc:	movw	r1, #61440	; 0xf000
    3200:	movt	r1, #65535	; 0xffff
    3204:	str	r1, [r0, #12]
    3208:	mov	r1, r2
    320c:	ldr	r2, [r2, #16]
    3210:	cmp	r2, #0
    3214:	bne	3208 <sf_finish_parse+0x314>
    3218:	str	r0, [r1, #16]
    321c:	mov	r0, #20
    3220:	bl	20bc <newchunk>
    3224:	mov	r6, r0
    3228:	mov	r0, #21
    322c:	mov	r1, r5
    3230:	str	r0, [r6]
    3234:	movw	r0, #4096	; 0x1000
    3238:	movt	r0, #32801	; 0x8021
    323c:	str	r0, [r6, #12]
    3240:	mov	r0, r1
    3244:	ldr	r1, [r1, #16]
    3248:	cmp	r1, #0
    324c:	bne	3240 <sf_finish_parse+0x34c>
    3250:	str	r6, [r0, #16]
    3254:	mov	r0, #20
    3258:	bl	20bc <newchunk>
    325c:	mov	r1, #32
    3260:	mov	r2, r5
    3264:	str	r1, [r0]
    3268:	mov	r1, #4
    326c:	str	r1, [r0, #12]
    3270:	mov	r1, r2
    3274:	ldr	r2, [r2, #16]
    3278:	cmp	r2, #0
    327c:	bne	3270 <sf_finish_parse+0x37c>
    3280:	str	r0, [r1, #16]
    3284:	str	r0, [r6, #4]
    3288:	mov	r0, #20
    328c:	bl	20bc <newchunk>
    3290:	mov	r4, r0
    3294:	mov	r0, #5
    3298:	mov	r1, r5
    329c:	str	r0, [r4]
    32a0:	mov	r0, #1
    32a4:	str	r0, [r4, #12]
    32a8:	mov	r0, r1
    32ac:	ldr	r1, [r1, #16]
    32b0:	cmp	r1, #0
    32b4:	bne	32a8 <sf_finish_parse+0x3b4>
    32b8:	str	r4, [r0, #16]
    32bc:	mov	r0, #20
    32c0:	bl	20bc <newchunk>
    32c4:	mov	r1, #0
    32c8:	mov	r2, r5
    32cc:	str	r1, [r0]
    32d0:	mov	r1, #144	; 0x90
    32d4:	str	r1, [r0, #12]
    32d8:	mov	r1, r2
    32dc:	ldr	r2, [r2, #16]
    32e0:	cmp	r2, #0
    32e4:	bne	32d8 <sf_finish_parse+0x3e4>
    32e8:	str	r0, [r1, #16]
    32ec:	str	r0, [r6, #8]
    32f0:	mov	r0, #20
    32f4:	bl	20bc <newchunk>
    32f8:	mov	r1, #2
    32fc:	mov	r2, r5
    3300:	str	r1, [r0]
    3304:	ldr	r1, [pc, #1816]	; 3a24 <sf_finish_parse+0xb30>
    3308:	ldr	r1, [pc, r1]
    330c:	str	r1, [r0, #12]
    3310:	mov	r1, r2
    3314:	ldr	r2, [r2, #16]
    3318:	cmp	r2, #0
    331c:	bne	3310 <sf_finish_parse+0x41c>
    3320:	str	r0, [r1, #16]
    3324:	str	r0, [r4, #8]
    3328:	mov	r0, #20
    332c:	bl	20bc <newchunk>
    3330:	mov	r1, #7
    3334:	mov	r2, r5
    3338:	str	r1, [r0]
    333c:	mov	r1, r2
    3340:	ldr	r2, [r2, #16]
    3344:	cmp	r2, #0
    3348:	bne	333c <sf_finish_parse+0x448>
    334c:	b	33d4 <sf_finish_parse+0x4e0>
    3350:	ldr	r0, [pc, #1744]	; 3a28 <sf_finish_parse+0xb34>
    3354:	ldr	r0, [pc, r0]
    3358:	cmn	r0, #1
    335c:	beq	3414 <sf_finish_parse+0x520>
    3360:	mov	r0, #20
    3364:	bl	20bc <newchunk>
    3368:	mov	r5, r0
    336c:	mov	r0, #32
    3370:	str	r0, [r5]
    3374:	mov	r0, #4
    3378:	str	r0, [r5, #12]
    337c:	mov	r0, #20
    3380:	bl	20bc <newchunk>
    3384:	mov	r1, #2
    3388:	mov	r2, r5
    338c:	str	r1, [r0]
    3390:	ldr	r1, [pc, #1684]	; 3a2c <sf_finish_parse+0xb38>
    3394:	ldr	r1, [pc, r1]
    3398:	str	r1, [r0, #12]
    339c:	mov	r1, r2
    33a0:	ldr	r2, [r2, #16]
    33a4:	cmp	r2, #0
    33a8:	bne	339c <sf_finish_parse+0x4a8>
    33ac:	str	r0, [r1, #16]
    33b0:	mov	r0, #20
    33b4:	bl	20bc <newchunk>
    33b8:	mov	r1, #7
    33bc:	mov	r2, r5
    33c0:	str	r1, [r0]
    33c4:	mov	r1, r2
    33c8:	ldr	r2, [r2, #16]
    33cc:	cmp	r2, #0
    33d0:	bne	33c4 <sf_finish_parse+0x4d0>
    33d4:	str	r0, [r1, #16]
    33d8:	ldr	r0, [pc, #1616]	; 3a30 <sf_finish_parse+0xb3c>
    33dc:	ldr	r0, [pc, r0]
    33e0:	sub	r1, r0, #105	; 0x69
    33e4:	cmp	r1, #22
    33e8:	bhi	3400 <sf_finish_parse+0x50c>
    33ec:	movw	r3, #16385	; 0x4001
    33f0:	mov	r2, #1
    33f4:	movt	r3, #64	; 0x40
    33f8:	tst	r3, r2, lsl r1
    33fc:	bne	3418 <sf_finish_parse+0x524>
    3400:	cmp	r0, #192	; 0xc0
    3404:	beq	3418 <sf_finish_parse+0x524>
    3408:	cmp	r0, #163	; 0xa3
    340c:	beq	3418 <sf_finish_parse+0x524>
    3410:	b	38c0 <sf_finish_parse+0x9cc>
    3414:	mov	r5, #0
    3418:	ldr	r0, [pc, #1556]	; 3a34 <sf_finish_parse+0xb40>
    341c:	ldr	r0, [pc, r0]
    3420:	cmn	r0, #1
    3424:	beq	38c0 <sf_finish_parse+0x9cc>
    3428:	ldr	sl, [r9, #4]
    342c:	ldr	r0, [pc, #1540]	; 3a38 <sf_finish_parse+0xb44>
    3430:	mov	r4, #1
    3434:	cmp	r5, #0
    3438:	add	r0, pc, r0
    343c:	str	r4, [r0]
    3440:	bne	345c <sf_finish_parse+0x568>
    3444:	mov	r0, #20
    3448:	bl	20bc <newchunk>
    344c:	mov	r5, r0
    3450:	str	r4, [r0]
    3454:	mov	r0, #0
    3458:	str	r0, [r5, #12]
    345c:	mov	r0, #20
    3460:	bl	20bc <newchunk>
    3464:	mov	r1, #135	; 0x87
    3468:	mov	r2, r5
    346c:	str	r1, [r0]
    3470:	mov	r1, r2
    3474:	ldr	r2, [r2, #16]
    3478:	cmp	r2, #0
    347c:	bne	3470 <sf_finish_parse+0x57c>
    3480:	str	r0, [r1, #16]
    3484:	mov	r0, #20
    3488:	bl	20bc <newchunk>
    348c:	mov	r1, #4
    3490:	mov	r2, r5
    3494:	str	r1, [r0]
    3498:	mov	r1, #24
    349c:	str	r1, [r0, #12]
    34a0:	mov	r1, r2
    34a4:	ldr	r2, [r2, #16]
    34a8:	cmp	r2, #0
    34ac:	bne	34a0 <sf_finish_parse+0x5ac>
    34b0:	str	r0, [r1, #16]
    34b4:	mov	r0, #20
    34b8:	bl	20bc <newchunk>
    34bc:	mov	r1, #2
    34c0:	mov	r2, r5
    34c4:	str	r1, [r0]
    34c8:	ldr	r1, [pc, #1388]	; 3a3c <sf_finish_parse+0xb48>
    34cc:	ldr	r1, [pc, r1]
    34d0:	str	r1, [r0, #12]
    34d4:	mov	r1, r2
    34d8:	ldr	r2, [r2, #16]
    34dc:	cmp	r2, #0
    34e0:	bne	34d4 <sf_finish_parse+0x5e0>
    34e4:	str	r0, [r1, #16]
    34e8:	mov	r0, #20
    34ec:	bl	20bc <newchunk>
    34f0:	mov	r1, #80	; 0x50
    34f4:	mov	r2, r5
    34f8:	str	r1, [r0]
    34fc:	mov	r1, #0
    3500:	str	r1, [r0, #12]
    3504:	mov	r1, r2
    3508:	ldr	r2, [r2, #16]
    350c:	cmp	r2, #0
    3510:	bne	3504 <sf_finish_parse+0x610>
    3514:	str	r0, [r1, #16]
    3518:	mov	r0, #20
    351c:	bl	20bc <newchunk>
    3520:	mov	r4, r0
    3524:	mov	r0, #69	; 0x45
    3528:	mov	r1, r5
    352c:	str	r0, [r4]
    3530:	mov	r0, #8
    3534:	str	r0, [r4, #12]
    3538:	mov	r0, r1
    353c:	ldr	r1, [r1, #16]
    3540:	cmp	r1, #0
    3544:	bne	3538 <sf_finish_parse+0x644>
    3548:	str	r4, [r0, #16]
    354c:	mov	r0, #20
    3550:	bl	20bc <newchunk>
    3554:	mov	r7, r0
    3558:	mov	r0, #69	; 0x45
    355c:	mov	r1, r5
    3560:	str	r0, [r7]
    3564:	mov	r0, #4
    3568:	str	r7, [r4, #4]
    356c:	str	r0, [r7, #12]
    3570:	mov	r0, r1
    3574:	ldr	r1, [r1, #16]
    3578:	cmp	r1, #0
    357c:	bne	3570 <sf_finish_parse+0x67c>
    3580:	str	r7, [r0, #16]
    3584:	mov	r0, #20
    3588:	str	sl, [r4, #8]
    358c:	str	sl, [r7, #4]
    3590:	bl	20bc <newchunk>
    3594:	mov	r6, r0
    3598:	mov	r0, #69	; 0x45
    359c:	mov	r1, r5
    35a0:	str	r0, [r6]
    35a4:	mov	r0, #128	; 0x80
    35a8:	str	r6, [r7, #8]
    35ac:	str	r0, [r6, #12]
    35b0:	mov	r0, r1
    35b4:	ldr	r1, [r1, #16]
    35b8:	cmp	r1, #0
    35bc:	bne	35b0 <sf_finish_parse+0x6bc>
    35c0:	str	r6, [r0, #16]
    35c4:	mov	r0, #20
    35c8:	bl	20bc <newchunk>
    35cc:	mov	r1, #96	; 0x60
    35d0:	mov	r2, r5
    35d4:	str	r1, [r0]
    35d8:	str	r0, [r6, #4]
    35dc:	ldr	r1, [pc, #1116]	; 3a40 <sf_finish_parse+0xb4c>
    35e0:	ldr	r1, [pc, r1]
    35e4:	str	r1, [r0, #12]
    35e8:	mov	r1, r2
    35ec:	ldr	r2, [r2, #16]
    35f0:	cmp	r2, #0
    35f4:	bne	35e8 <sf_finish_parse+0x6f4>
    35f8:	str	r0, [r1, #16]
    35fc:	mov	r0, #20
    3600:	bl	20bc <newchunk>
    3604:	mov	r1, #4
    3608:	mov	r2, r5
    360c:	str	r1, [r0]
    3610:	mov	r1, #2
    3614:	str	r1, [r0, #12]
    3618:	mov	r1, r2
    361c:	ldr	r2, [r2, #16]
    3620:	cmp	r2, #0
    3624:	bne	3618 <sf_finish_parse+0x724>
    3628:	str	r0, [r1, #16]
    362c:	mov	r0, #20
    3630:	bl	20bc <newchunk>
    3634:	mov	r1, #2
    3638:	mov	r2, r5
    363c:	str	r1, [r0]
    3640:	ldr	r1, [pc, #1020]	; 3a44 <sf_finish_parse+0xb50>
    3644:	ldr	r1, [pc, r1]
    3648:	str	r1, [r0, #12]
    364c:	mov	r1, r2
    3650:	ldr	r2, [r2, #16]
    3654:	cmp	r2, #0
    3658:	bne	364c <sf_finish_parse+0x758>
    365c:	str	r0, [r1, #16]
    3660:	ldr	r0, [pc, #992]	; 3a48 <sf_finish_parse+0xb54>
    3664:	ldr	r0, [pc, r0]
    3668:	cmp	r0, #127	; 0x7f
    366c:	bne	38bc <sf_finish_parse+0x9c8>
    3670:	mov	r0, #20
    3674:	bl	20bc <newchunk>
    3678:	mov	r1, #32
    367c:	mov	r2, r5
    3680:	str	r1, [r0]
    3684:	mov	r1, #4
    3688:	str	r0, [r6, #8]
    368c:	str	r1, [r0, #12]
    3690:	mov	r1, r2
    3694:	ldr	r2, [r2, #16]
    3698:	cmp	r2, #0
    369c:	bne	3690 <sf_finish_parse+0x79c>
    36a0:	str	r0, [r1, #16]
    36a4:	mov	r0, #20
    36a8:	bl	20bc <newchunk>
    36ac:	mov	r6, r0
    36b0:	mov	r0, #69	; 0x45
    36b4:	mov	r1, r5
    36b8:	str	r0, [r6]
    36bc:	mov	r0, #33554432	; 0x2000000
    36c0:	str	r0, [r6, #12]
    36c4:	mov	r0, r1
    36c8:	ldr	r1, [r1, #16]
    36cc:	cmp	r1, #0
    36d0:	bne	36c4 <sf_finish_parse+0x7d0>
    36d4:	str	r6, [r0, #16]
    36d8:	mov	r0, #20
    36dc:	str	sl, [r6, #8]
    36e0:	bl	20bc <newchunk>
    36e4:	mov	r4, r0
    36e8:	mov	r0, #69	; 0x45
    36ec:	mov	r1, r5
    36f0:	str	r0, [r4]
    36f4:	mov	r0, #16777216	; 0x1000000
    36f8:	str	r4, [r6, #4]
    36fc:	str	r0, [r4, #12]
    3700:	mov	r0, r1
    3704:	ldr	r1, [r1, #16]
    3708:	cmp	r1, #0
    370c:	bne	3700 <sf_finish_parse+0x80c>
    3710:	str	r4, [r0, #16]
    3714:	mov	r0, #20
    3718:	bl	20bc <newchunk>
    371c:	mov	r1, #48	; 0x30
    3720:	mov	r2, r5
    3724:	str	r1, [r0]
    3728:	mov	r1, #16
    372c:	str	r0, [r4, #4]
    3730:	str	r1, [r0, #12]
    3734:	mov	r1, r2
    3738:	ldr	r2, [r2, #16]
    373c:	cmp	r2, #0
    3740:	bne	3734 <sf_finish_parse+0x840>
    3744:	str	r0, [r1, #16]
    3748:	mov	r0, #20
    374c:	bl	20bc <newchunk>
    3750:	mov	r6, r0
    3754:	mov	r0, #69	; 0x45
    3758:	mov	r1, r5
    375c:	str	r0, [r6]
    3760:	mov	r0, #32
    3764:	str	r0, [r6, #12]
    3768:	mov	r0, r1
    376c:	ldr	r1, [r1, #16]
    3770:	cmp	r1, #0
    3774:	bne	3768 <sf_finish_parse+0x874>
    3778:	str	r6, [r0, #16]
    377c:	mov	r0, #20
    3780:	bl	20bc <newchunk>
    3784:	mov	r1, #48	; 0x30
    3788:	mov	r2, r5
    378c:	str	r1, [r0]
    3790:	mov	r1, #8
    3794:	str	r0, [r4, #8]
    3798:	str	r1, [r0, #12]
    379c:	mov	r1, r2
    37a0:	ldr	r2, [r2, #16]
    37a4:	cmp	r2, #0
    37a8:	bne	379c <sf_finish_parse+0x8a8>
    37ac:	str	r0, [r1, #16]
    37b0:	mov	r0, #20
    37b4:	bl	20bc <newchunk>
    37b8:	mov	r7, r0
    37bc:	mov	r0, #69	; 0x45
    37c0:	mov	r1, r5
    37c4:	str	r0, [r7]
    37c8:	mov	r0, #32
    37cc:	str	r0, [r7, #12]
    37d0:	mov	r0, r1
    37d4:	ldr	r1, [r1, #16]
    37d8:	cmp	r1, #0
    37dc:	bne	37d0 <sf_finish_parse+0x8dc>
    37e0:	str	r7, [r0, #16]
    37e4:	mov	r0, #20
    37e8:	bl	20bc <newchunk>
    37ec:	mov	r4, r0
    37f0:	mov	r0, #96	; 0x60
    37f4:	mov	r1, r5
    37f8:	str	r0, [r4]
    37fc:	ldr	r0, [pc, #584]	; 3a4c <sf_finish_parse+0xb58>
    3800:	ldr	r0, [pc, r0]
    3804:	str	r0, [r4, #12]
    3808:	mov	r0, r1
    380c:	ldr	r1, [r1, #16]
    3810:	cmp	r1, #0
    3814:	bne	3808 <sf_finish_parse+0x914>
    3818:	str	r4, [r0, #16]
    381c:	mov	r0, #20
    3820:	bl	20bc <newchunk>
    3824:	mov	r1, #4
    3828:	mov	r2, r5
    382c:	str	r1, [r0]
    3830:	mov	r1, #3
    3834:	str	r1, [r0, #12]
    3838:	mov	r1, r2
    383c:	ldr	r2, [r2, #16]
    3840:	cmp	r2, #0
    3844:	bne	3838 <sf_finish_parse+0x944>
    3848:	str	r0, [r1, #16]
    384c:	mov	r0, #20
    3850:	bl	20bc <newchunk>
    3854:	mov	r1, #84	; 0x54
    3858:	mov	r2, r5
    385c:	str	r1, [r0]
    3860:	mvn	r1, #3
    3864:	str	r1, [r0, #12]
    3868:	mov	r1, r2
    386c:	ldr	r2, [r2, #16]
    3870:	cmp	r2, #0
    3874:	bne	3868 <sf_finish_parse+0x974>
    3878:	str	r0, [r1, #16]
    387c:	mov	r0, #20
    3880:	bl	20bc <newchunk>
    3884:	mov	r1, #2
    3888:	mov	r2, r5
    388c:	str	r1, [r0]
    3890:	ldr	r1, [pc, #440]	; 3a50 <sf_finish_parse+0xb5c>
    3894:	ldr	r1, [pc, r1]
    3898:	str	r1, [r0, #12]
    389c:	mov	r1, r2
    38a0:	ldr	r2, [r2, #16]
    38a4:	cmp	r2, #0
    38a8:	bne	389c <sf_finish_parse+0x9a8>
    38ac:	str	r0, [r1, #16]
    38b0:	stmib	r6, {r4, sl}
    38b4:	stmib	r7, {r4, sl}
    38b8:	b	38c0 <sf_finish_parse+0x9cc>
    38bc:	str	sl, [r6, #8]
    38c0:	cmp	r5, #0
    38c4:	beq	38e8 <sf_finish_parse+0x9f4>
    38c8:	ldr	r0, [r9, #4]
    38cc:	mov	r2, r5
    38d0:	mov	r1, r2
    38d4:	ldr	r2, [r2, #16]
    38d8:	cmp	r2, #0
    38dc:	bne	38d0 <sf_finish_parse+0x9dc>
    38e0:	str	r0, [r1, #16]
    38e4:	str	r5, [r9, #4]
    38e8:	ldr	r0, [pc, #356]	; 3a54 <sf_finish_parse+0xb60>
    38ec:	ldr	r0, [pc, r0]
    38f0:	cmp	r0, #192	; 0xc0
    38f4:	bne	3940 <sf_finish_parse+0xa4c>
    38f8:	mov	r0, #20
    38fc:	bl	20bc <newchunk>
    3900:	mov	r4, r0
    3904:	mov	r0, #32
    3908:	str	r0, [r4]
    390c:	mov	r0, #4
    3910:	str	r0, [r4, #12]
    3914:	mov	r0, #208	; 0xd0
    3918:	bl	20bc <newchunk>
    391c:	mov	r1, #21
    3920:	str	r4, [r0, #4]
    3924:	cmp	r0, #0
    3928:	str	r1, [r0, #8]
    392c:	mov	r1, #1761607680	; 0x69000000
    3930:	str	r1, [r0, #20]
    3934:	movne	r1, r8
    3938:	str	r0, [r0, #96]	; 0x60
    393c:	blne	3a60 <sf_gen_and>
    3940:	ldr	r5, [pc, #272]	; 3a58 <sf_finish_parse+0xb64>
    3944:	mov	r0, #208	; 0xd0
    3948:	ldr	r5, [pc, r5]
    394c:	bl	20bc <newchunk>
    3950:	mov	r4, #6
    3954:	cmp	r8, #0
    3958:	str	r4, [r0, #8]
    395c:	str	r5, [r0, #20]
    3960:	str	r0, [r0, #96]	; 0x60
    3964:	beq	3994 <sf_finish_parse+0xaa0>
    3968:	mov	r1, r8
    396c:	ldr	r2, [r1, #44]	; 0x2c
    3970:	add	r3, r1, #84	; 0x54
    3974:	cmp	r2, #0
    3978:	mov	r2, #84	; 0x54
    397c:	movweq	r2, #60	; 0x3c
    3980:	addeq	r3, r1, #60	; 0x3c
    3984:	ldr	r1, [r1, r2]
    3988:	str	r0, [r3]
    398c:	cmp	r1, #0
    3990:	bne	396c <sf_finish_parse+0xa78>
    3994:	ldr	r0, [r8, #44]	; 0x2c
    3998:	clz	r0, r0
    399c:	lsr	r0, r0, #5
    39a0:	str	r0, [r8, #44]	; 0x2c
    39a4:	mov	r0, #208	; 0xd0
    39a8:	bl	20bc <newchunk>
    39ac:	cmp	r8, #0
    39b0:	mov	r1, #0
    39b4:	str	r4, [r0, #8]
    39b8:	str	r1, [r0, #20]
    39bc:	str	r0, [r0, #96]	; 0x60
    39c0:	beq	39f0 <sf_finish_parse+0xafc>
    39c4:	mov	r1, r8
    39c8:	ldr	r2, [r1, #44]	; 0x2c
    39cc:	add	r3, r1, #84	; 0x54
    39d0:	cmp	r2, #0
    39d4:	mov	r2, #84	; 0x54
    39d8:	movweq	r2, #60	; 0x3c
    39dc:	addeq	r3, r1, #60	; 0x3c
    39e0:	ldr	r1, [r1, r2]
    39e4:	str	r0, [r3]
    39e8:	cmp	r1, #0
    39ec:	bne	39c8 <sf_finish_parse+0xad4>
    39f0:	ldr	r0, [r8, #96]	; 0x60
    39f4:	ldr	r1, [pc, #96]	; 3a5c <sf_finish_parse+0xb68>
    39f8:	add	r1, pc, r1
    39fc:	str	r0, [r1]
    3a00:	sub	sp, fp, #28
    3a04:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    3a08:	.word	0x0002d520
    3a0c:	.word	0x0002d5d4
    3a10:	.word	0x0002d4e4
    3a14:	.word	0x0002d48c
    3a18:	.word	0x0002d39c
    3a1c:	.word	0x0002d7f0
    3a20:	.word	0x0002d344
    3a24:	.word	0x0002d1fc
    3a28:	.word	0x0002d1b0
    3a2c:	.word	0x0002d170
    3a30:	.word	0x0002d054
    3a34:	.word	0x0002d0ec
    3a38:	.word	0x0002d56c
    3a3c:	.word	0x0002d03c
    3a40:	.word	0x0002cf28
    3a44:	.word	0x0002cec4
    3a48:	.word	0x0002cdcc
    3a4c:	.word	0x0002cd08
    3a50:	.word	0x0002cc74
    3a54:	.word	0x0002cb44
    3a58:	.word	0x0002cae4
    3a5c:	.word	0x0002ca28

00003a60 <sf_gen_and>:
    3a60:	push	{r4, sl, fp, lr}
    3a64:	add	fp, sp, #8
    3a68:	sub	sp, sp, #4
    3a6c:	cmp	r0, #0
    3a70:	beq	3aa4 <sf_gen_and+0x44>
    3a74:	ldr	ip, [r1, #96]	; 0x60
    3a78:	mov	r3, r0
    3a7c:	ldr	lr, [r3, #44]	; 0x2c
    3a80:	mov	r2, #84	; 0x54
    3a84:	add	r4, r3, #84	; 0x54
    3a88:	cmp	lr, #0
    3a8c:	movweq	r2, #60	; 0x3c
    3a90:	addeq	r4, r3, #60	; 0x3c
    3a94:	ldr	r3, [r3, r2]
    3a98:	str	ip, [r4]
    3a9c:	cmp	r3, #0
    3aa0:	bne	3a7c <sf_gen_and+0x1c>
    3aa4:	ldr	r2, [r0, #44]	; 0x2c
    3aa8:	cmp	r1, #0
    3aac:	clz	r2, r2
    3ab0:	lsr	r2, r2, #5
    3ab4:	str	r2, [r0, #44]	; 0x2c
    3ab8:	ldr	r3, [r1, #44]	; 0x2c
    3abc:	clz	r2, r3
    3ac0:	lsr	r2, r2, #5
    3ac4:	str	r2, [r1, #44]	; 0x2c
    3ac8:	str	r1, [sp]
    3acc:	beq	3b14 <sf_gen_and+0xb4>
    3ad0:	cmp	r3, #0
    3ad4:	mov	r3, #60	; 0x3c
    3ad8:	add	r2, r1, #60	; 0x3c
    3adc:	movweq	r3, #84	; 0x54
    3ae0:	addeq	r2, r1, #84	; 0x54
    3ae4:	ldr	r3, [r1, r3]
    3ae8:	b	3b08 <sf_gen_and+0xa8>
    3aec:	ldr	r4, [r3, #44]	; 0x2c
    3af0:	add	r2, r3, #84	; 0x54
    3af4:	cmp	r4, #0
    3af8:	mov	r4, #84	; 0x54
    3afc:	movweq	r4, #60	; 0x3c
    3b00:	addeq	r2, r3, #60	; 0x3c
    3b04:	ldr	r3, [r3, r4]
    3b08:	cmp	r3, #0
    3b0c:	bne	3aec <sf_gen_and+0x8c>
    3b10:	b	3b18 <sf_gen_and+0xb8>
    3b14:	mov	r2, sp
    3b18:	str	r0, [r2]
    3b1c:	ldr	r2, [r1, #44]	; 0x2c
    3b20:	clz	r2, r2
    3b24:	lsr	r2, r2, #5
    3b28:	str	r2, [r1, #44]	; 0x2c
    3b2c:	ldr	r0, [r0, #96]	; 0x60
    3b30:	str	r0, [r1, #96]	; 0x60
    3b34:	sub	sp, fp, #8
    3b38:	pop	{r4, sl, fp, pc}

00003b3c <sf_gen_or>:
    3b3c:	push	{r4, sl, fp, lr}
    3b40:	add	fp, sp, #8
    3b44:	sub	sp, sp, #4
    3b48:	ldr	r2, [r0, #44]	; 0x2c
    3b4c:	cmp	r0, #0
    3b50:	clz	r2, r2
    3b54:	lsr	lr, r2, #5
    3b58:	str	lr, [r0, #44]	; 0x2c
    3b5c:	beq	3b98 <sf_gen_or+0x5c>
    3b60:	ldr	ip, [r1, #96]	; 0x60
    3b64:	mov	r3, r0
    3b68:	b	3b70 <sf_gen_or+0x34>
    3b6c:	ldr	lr, [r3, #44]	; 0x2c
    3b70:	cmp	lr, #0
    3b74:	mov	r2, #84	; 0x54
    3b78:	add	r4, r3, #84	; 0x54
    3b7c:	movweq	r2, #60	; 0x3c
    3b80:	addeq	r4, r3, #60	; 0x3c
    3b84:	ldr	r3, [r3, r2]
    3b88:	str	ip, [r4]
    3b8c:	cmp	r3, #0
    3b90:	bne	3b6c <sf_gen_or+0x30>
    3b94:	ldr	lr, [r0, #44]	; 0x2c
    3b98:	clz	r2, lr
    3b9c:	cmp	r1, #0
    3ba0:	lsr	r2, r2, #5
    3ba4:	str	r2, [r0, #44]	; 0x2c
    3ba8:	str	r1, [sp]
    3bac:	beq	3bdc <sf_gen_or+0xa0>
    3bb0:	mov	r3, r1
    3bb4:	ldr	r4, [r3, #44]	; 0x2c
    3bb8:	add	r2, r3, #84	; 0x54
    3bbc:	cmp	r4, #0
    3bc0:	mov	r4, #84	; 0x54
    3bc4:	movweq	r4, #60	; 0x3c
    3bc8:	addeq	r2, r3, #60	; 0x3c
    3bcc:	ldr	r3, [r3, r4]
    3bd0:	cmp	r3, #0
    3bd4:	bne	3bb4 <sf_gen_or+0x78>
    3bd8:	b	3be0 <sf_gen_or+0xa4>
    3bdc:	mov	r2, sp
    3be0:	str	r0, [r2]
    3be4:	ldr	r0, [r0, #96]	; 0x60
    3be8:	str	r0, [r1, #96]	; 0x60
    3bec:	sub	sp, fp, #8
    3bf0:	pop	{r4, sl, fp, pc}

00003bf4 <sf_gen_not>:
    3bf4:	ldr	r1, [r0, #44]	; 0x2c
    3bf8:	clz	r1, r1
    3bfc:	lsr	r1, r1, #5
    3c00:	str	r1, [r0, #44]	; 0x2c
    3c04:	bx	lr

00003c08 <sf_gen_proto_abbrev>:
    3c08:	push	{r4, r5, fp, lr}
    3c0c:	add	fp, sp, #8
    3c10:	sub	r0, r0, #1
    3c14:	cmp	r0, #39	; 0x27
    3c18:	bhi	404c <sf_gen_proto_abbrev+0x444>
    3c1c:	add	r1, pc, #4
    3c20:	ldr	r0, [r1, r0, lsl #2]
    3c24:	add	pc, r1, r0
    3c28:	.word	0x00000428
    3c2c:	.word	0x000000a0
    3c30:	.word	0x0000010c
    3c34:	.word	0x00000118
    3c38:	.word	0x000001e4
    3c3c:	.word	0x00000124
    3c40:	.word	0x00000200
    3c44:	.word	0x00000140
    3c48:	.word	0x00000148
    3c4c:	.word	0x0000021c
    3c50:	.word	0x00000228
    3c54:	.word	0x000000e4
    3c58:	.word	0x00000234
    3c5c:	.word	0x00000300
    3c60:	.word	0x00000150
    3c64:	.word	0x00000240
    3c68:	.word	0x000000f0
    3c6c:	.word	0x0000030c
    3c70:	.word	0x0000015c
    3c74:	.word	0x00000178
    3c78:	.word	0x00000318
    3c7c:	.word	0x00000194
    3c80:	.word	0x0000019c
    3c84:	.word	0x0000024c
    3c88:	.word	0x00000338
    3c8c:	.word	0x000000fc
    3c90:	.word	0x00000104
    3c94:	.word	0x0000034c
    3c98:	.word	0x000003dc
    3c9c:	.word	0x00000358
    3ca0:	.word	0x00000364
    3ca4:	.word	0x00000258
    3ca8:	.word	0x000001a8
    3cac:	.word	0x00000424
    3cb0:	.word	0x00000424
    3cb4:	.word	0x000002ac
    3cb8:	.word	0x000000c8
    3cbc:	.word	0x000000ac
    3cc0:	.word	0x000003e8
    3cc4:	.word	0x00000434
    3cc8:	mov	r0, #2048	; 0x800
    3ccc:	pop	{r4, r5, fp, lr}
    3cd0:	b	446c <gen_linktype>
    3cd4:	mov	r0, #26
    3cd8:	mov	r1, #26
    3cdc:	mov	r2, #0
    3ce0:	bl	4070 <gen_proto>
    3ce4:	mov	r5, r0
    3ce8:	mov	r0, #27
    3cec:	b	4028 <sf_gen_proto_abbrev+0x420>
    3cf0:	mov	r0, #24
    3cf4:	mov	r1, #26
    3cf8:	mov	r2, #0
    3cfc:	bl	4070 <gen_proto>
    3d00:	mov	r5, r0
    3d04:	mov	r0, #25
    3d08:	b	4028 <sf_gen_proto_abbrev+0x420>
    3d0c:	movw	r0, #24579	; 0x6003
    3d10:	pop	{r4, r5, fp, lr}
    3d14:	b	446c <gen_linktype>
    3d18:	movw	r0, #34525	; 0x86dd
    3d1c:	pop	{r4, r5, fp, lr}
    3d20:	b	446c <gen_linktype>
    3d24:	mov	r0, #131	; 0x83
    3d28:	b	3f64 <sf_gen_proto_abbrev+0x35c>
    3d2c:	mov	r0, #129	; 0x81
    3d30:	b	3f64 <sf_gen_proto_abbrev+0x35c>
    3d34:	movw	r0, #2054	; 0x806
    3d38:	pop	{r4, r5, fp, lr}
    3d3c:	b	446c <gen_linktype>
    3d40:	movw	r0, #32821	; 0x8035
    3d44:	pop	{r4, r5, fp, lr}
    3d48:	b	446c <gen_linktype>
    3d4c:	mov	r0, #6
    3d50:	mov	r1, #2
    3d54:	mov	r2, #0
    3d58:	bl	4070 <gen_proto>
    3d5c:	mov	r4, r0
    3d60:	mov	r0, #6
    3d64:	b	3f58 <sf_gen_proto_abbrev+0x350>
    3d68:	mov	r0, #1
    3d6c:	b	3e48 <sf_gen_proto_abbrev+0x240>
    3d70:	mov	r0, #2
    3d74:	b	3e48 <sf_gen_proto_abbrev+0x240>
    3d78:	movw	r0, #24578	; 0x6002
    3d7c:	pop	{r4, r5, fp, lr}
    3d80:	b	446c <gen_linktype>
    3d84:	mov	r0, #51	; 0x33
    3d88:	mov	r1, #2
    3d8c:	mov	r2, #0
    3d90:	bl	4070 <gen_proto>
    3d94:	mov	r4, r0
    3d98:	mov	r0, #51	; 0x33
    3d9c:	b	3f58 <sf_gen_proto_abbrev+0x350>
    3da0:	mov	r0, #50	; 0x32
    3da4:	mov	r1, #2
    3da8:	mov	r2, #0
    3dac:	bl	4070 <gen_proto>
    3db0:	mov	r4, r0
    3db4:	mov	r0, #50	; 0x32
    3db8:	b	3f58 <sf_gen_proto_abbrev+0x350>
    3dbc:	mov	r0, #112	; 0x70
    3dc0:	b	3e48 <sf_gen_proto_abbrev+0x240>
    3dc4:	movw	r0, #33011	; 0x80f3
    3dc8:	pop	{r4, r5, fp, lr}
    3dcc:	b	446c <gen_linktype>
    3dd0:	mov	r0, #15
    3dd4:	mov	r1, #26
    3dd8:	mov	r2, #0
    3ddc:	bl	4070 <gen_proto>
    3de0:	mov	r5, r0
    3de4:	mov	r0, #16
    3de8:	mov	r1, #26
    3dec:	mov	r2, #0
    3df0:	bl	4070 <gen_proto>
    3df4:	mov	r4, r0
    3df8:	mov	r0, r5
    3dfc:	mov	r1, r4
    3e00:	bl	3b3c <sf_gen_or>
    3e04:	mov	r0, #17
    3e08:	b	3ff4 <sf_gen_proto_abbrev+0x3ec>
    3e0c:	mov	r0, #132	; 0x84
    3e10:	mov	r1, #2
    3e14:	mov	r2, #0
    3e18:	bl	4070 <gen_proto>
    3e1c:	mov	r4, r0
    3e20:	mov	r0, #132	; 0x84
    3e24:	b	3f58 <sf_gen_proto_abbrev+0x350>
    3e28:	mov	r0, #17
    3e2c:	mov	r1, #2
    3e30:	mov	r2, #0
    3e34:	bl	4070 <gen_proto>
    3e38:	mov	r4, r0
    3e3c:	mov	r0, #17
    3e40:	b	3f58 <sf_gen_proto_abbrev+0x350>
    3e44:	mov	r0, #9
    3e48:	mov	r1, #2
    3e4c:	b	3f68 <sf_gen_proto_abbrev+0x360>
    3e50:	movw	r0, #32923	; 0x809b
    3e54:	pop	{r4, r5, fp, lr}
    3e58:	b	446c <gen_linktype>
    3e5c:	movw	r0, #24580	; 0x6004
    3e60:	pop	{r4, r5, fp, lr}
    3e64:	b	446c <gen_linktype>
    3e68:	movw	r0, #24577	; 0x6001
    3e6c:	pop	{r4, r5, fp, lr}
    3e70:	b	446c <gen_linktype>
    3e74:	mov	r0, #254	; 0xfe
    3e78:	pop	{r4, r5, fp, lr}
    3e7c:	b	446c <gen_linktype>
    3e80:	mov	r0, #16
    3e84:	mov	r1, #26
    3e88:	mov	r2, #0
    3e8c:	bl	4070 <gen_proto>
    3e90:	mov	r5, r0
    3e94:	mov	r0, #17
    3e98:	mov	r1, #26
    3e9c:	mov	r2, #0
    3ea0:	bl	4070 <gen_proto>
    3ea4:	mov	r4, r0
    3ea8:	mov	r0, r5
    3eac:	mov	r1, r4
    3eb0:	bl	3b3c <sf_gen_or>
    3eb4:	mov	r0, #20
    3eb8:	mov	r1, #26
    3ebc:	mov	r2, #0
    3ec0:	bl	4070 <gen_proto>
    3ec4:	mov	r1, r4
    3ec8:	bl	3b3c <sf_gen_or>
    3ecc:	mov	r0, #25
    3ed0:	b	3f0c <sf_gen_proto_abbrev+0x304>
    3ed4:	mov	r0, #24
    3ed8:	mov	r1, #26
    3edc:	mov	r2, #0
    3ee0:	bl	4070 <gen_proto>
    3ee4:	mov	r5, r0
    3ee8:	mov	r0, #25
    3eec:	mov	r1, #26
    3ef0:	mov	r2, #0
    3ef4:	bl	4070 <gen_proto>
    3ef8:	mov	r4, r0
    3efc:	mov	r0, r5
    3f00:	mov	r1, r4
    3f04:	bl	3b3c <sf_gen_or>
    3f08:	mov	r0, #26
    3f0c:	mov	r1, #26
    3f10:	mov	r2, #0
    3f14:	bl	4070 <gen_proto>
    3f18:	mov	r1, r4
    3f1c:	bl	3b3c <sf_gen_or>
    3f20:	mov	r0, #27
    3f24:	b	3ff4 <sf_gen_proto_abbrev+0x3ec>
    3f28:	movw	r0, #24583	; 0x6007
    3f2c:	pop	{r4, r5, fp, lr}
    3f30:	b	446c <gen_linktype>
    3f34:	mov	r0, #58	; 0x3a
    3f38:	mov	r1, #17
    3f3c:	b	3f68 <sf_gen_proto_abbrev+0x360>
    3f40:	mov	r0, #103	; 0x67
    3f44:	mov	r1, #2
    3f48:	mov	r2, #0
    3f4c:	bl	4070 <gen_proto>
    3f50:	mov	r4, r0
    3f54:	mov	r0, #103	; 0x67
    3f58:	mov	r1, #17
    3f5c:	b	3ff8 <sf_gen_proto_abbrev+0x3f0>
    3f60:	mov	r0, #130	; 0x82
    3f64:	mov	r1, #24
    3f68:	mov	r2, #0
    3f6c:	pop	{r4, r5, fp, lr}
    3f70:	b	4070 <gen_proto>
    3f74:	mov	r0, #66	; 0x42
    3f78:	pop	{r4, r5, fp, lr}
    3f7c:	b	446c <gen_linktype>
    3f80:	mov	r0, #240	; 0xf0
    3f84:	pop	{r4, r5, fp, lr}
    3f88:	b	446c <gen_linktype>
    3f8c:	mov	r0, #15
    3f90:	mov	r1, #26
    3f94:	mov	r2, #0
    3f98:	bl	4070 <gen_proto>
    3f9c:	mov	r5, r0
    3fa0:	mov	r0, #17
    3fa4:	mov	r1, #26
    3fa8:	mov	r2, #0
    3fac:	bl	4070 <gen_proto>
    3fb0:	mov	r4, r0
    3fb4:	mov	r0, r5
    3fb8:	mov	r1, r4
    3fbc:	bl	3b3c <sf_gen_or>
    3fc0:	mov	r0, #18
    3fc4:	mov	r1, #26
    3fc8:	mov	r2, #0
    3fcc:	bl	4070 <gen_proto>
    3fd0:	mov	r1, r4
    3fd4:	bl	3b3c <sf_gen_or>
    3fd8:	mov	r0, #24
    3fdc:	mov	r1, #26
    3fe0:	mov	r2, #0
    3fe4:	bl	4070 <gen_proto>
    3fe8:	mov	r1, r4
    3fec:	bl	3b3c <sf_gen_or>
    3ff0:	mov	r0, #26
    3ff4:	mov	r1, #26
    3ff8:	mov	r2, #0
    3ffc:	bl	4070 <gen_proto>
    4000:	b	403c <sf_gen_proto_abbrev+0x434>
    4004:	mov	r0, #224	; 0xe0
    4008:	pop	{r4, r5, fp, lr}
    400c:	b	446c <gen_linktype>
    4010:	mov	r0, #18
    4014:	mov	r1, #26
    4018:	mov	r2, #0
    401c:	bl	4070 <gen_proto>
    4020:	mov	r5, r0
    4024:	mov	r0, #20
    4028:	mov	r1, #26
    402c:	mov	r2, #0
    4030:	bl	4070 <gen_proto>
    4034:	mov	r4, r0
    4038:	mov	r0, r5
    403c:	mov	r1, r4
    4040:	bl	3b3c <sf_gen_or>
    4044:	mov	r0, r4
    4048:	pop	{r4, r5, fp, pc}
    404c:	bl	fc4 <abort@plt>
    4050:	ldr	r0, [pc, #16]	; 4068 <sf_gen_proto_abbrev+0x460>
    4054:	add	r0, pc, r0
    4058:	bl	2028 <sf_bpf_error>
    405c:	ldr	r0, [pc, #8]	; 406c <sf_gen_proto_abbrev+0x464>
    4060:	add	r0, pc, r0
    4064:	bl	2028 <sf_bpf_error>
    4068:	.word	0x0000e85b
    406c:	.word	0x0000e873

00004070 <gen_proto>:
    4070:	push	{r4, r5, r6, r7, fp, lr}
    4074:	add	fp, sp, #16
    4078:	cmp	r2, #0
    407c:	bne	4308 <gen_proto+0x298>
    4080:	cmp	r1, #40	; 0x28
    4084:	bhi	42ec <gen_proto+0x27c>
    4088:	mov	r4, r0
    408c:	add	r0, pc, #4
    4090:	ldr	r1, [r0, r1, lsl #2]
    4094:	add	pc, r0, r1
    4098:	.word	0x000000a4
    409c:	.word	0x000001b0
    40a0:	.word	0x00000134
    40a4:	.word	0x0000027c
    40a8:	.word	0x00000288
    40ac:	.word	0x00000294
    40b0:	.word	0x000002a0
    40b4:	.word	0x000002ac
    40b8:	.word	0x000002b8
    40bc:	.word	0x000002c4
    40c0:	.word	0x000002d0
    40c4:	.word	0x000002dc
    40c8:	.word	0x000002e8
    40cc:	.word	0x000002f4
    40d0:	.word	0x00000300
    40d4:	.word	0x0000030c
    40d8:	.word	0x00000264
    40dc:	.word	0x000001bc
    40e0:	.word	0x00000258
    40e4:	.word	0x00000248
    40e8:	.word	0x00000248
    40ec:	.word	0x00000348
    40f0:	.word	0x00000354
    40f4:	.word	0x00000254
    40f8:	.word	0x000000e0
    40fc:	.word	0x00000254
    4100:	.word	0x00000150
    4104:	.word	0x00000254
    4108:	.word	0x00000318
    410c:	.word	0x00000324
    4110:	.word	0x00000330
    4114:	.word	0x00000254
    4118:	.word	0x00000254
    411c:	.word	0x00000254
    4120:	.word	0x00000254
    4124:	.word	0x00000254
    4128:	.word	0x00000254
    412c:	.word	0x00000254
    4130:	.word	0x00000254
    4134:	.word	0x00000254
    4138:	.word	0x0000033c
    413c:	mov	r0, r4
    4140:	mov	r1, #2
    4144:	mov	r2, #0
    4148:	bl	4070 <gen_proto>
    414c:	mov	r5, r0
    4150:	mov	r0, r4
    4154:	mov	r1, #17
    4158:	mov	r2, #0
    415c:	bl	4070 <gen_proto>
    4160:	mov	r4, r0
    4164:	mov	r0, r5
    4168:	mov	r1, r4
    416c:	bl	3b3c <sf_gen_or>
    4170:	mov	r0, r4
    4174:	pop	{r4, r5, r6, r7, fp, pc}
    4178:	ldr	r0, [pc, #636]	; 43fc <gen_proto+0x38c>
    417c:	ldr	r0, [pc, r0]
    4180:	cmp	r0, #104	; 0x68
    4184:	beq	4270 <gen_proto+0x200>
    4188:	cmp	r0, #107	; 0x6b
    418c:	bne	428c <gen_proto+0x21c>
    4190:	mov	r0, #1
    4194:	mov	r1, #2
    4198:	mov	r2, #8
    419c:	bl	9a88 <gen_load_a>
    41a0:	mov	r6, r0
    41a4:	mov	r0, #208	; 0xd0
    41a8:	bl	20bc <newchunk>
    41ac:	mov	r5, r0
    41b0:	mov	r0, #21
    41b4:	str	r6, [r5, #4]
    41b8:	str	r0, [r5, #8]
    41bc:	orr	r0, r4, #768	; 0x300
    41c0:	str	r0, [r5, #20]
    41c4:	str	r5, [r5, #96]	; 0x60
    41c8:	b	42d8 <gen_proto+0x268>
    41cc:	mov	r0, #2048	; 0x800
    41d0:	bl	446c <gen_linktype>
    41d4:	mov	r6, r0
    41d8:	ldr	r0, [pc, #536]	; 43f8 <gen_proto+0x388>
    41dc:	ldr	r0, [pc, r0]
    41e0:	add	r0, r0, #9
    41e4:	b	42a0 <gen_proto+0x230>
    41e8:	mov	r0, #131	; 0x83
    41ec:	mov	r1, #24
    41f0:	mov	r2, #0
    41f4:	bl	4070 <gen_proto>
    41f8:	mov	r5, r0
    41fc:	ldr	r0, [pc, #516]	; 4408 <gen_proto+0x398>
    4200:	mov	r1, #16
    4204:	ldr	r0, [pc, r0]
    4208:	add	r0, r0, #4
    420c:	bl	bc70 <gen_load_macplrel>
    4210:	mov	r6, r0
    4214:	mov	r0, #208	; 0xd0
    4218:	bl	20bc <newchunk>
    421c:	mov	r7, r0
    4220:	mov	r0, #21
    4224:	str	r6, [r7, #4]
    4228:	str	r0, [r7, #8]
    422c:	mov	r0, r5
    4230:	mov	r1, r7
    4234:	str	r4, [r7, #20]
    4238:	str	r7, [r7, #96]	; 0x60
    423c:	bl	3a60 <sf_gen_and>
    4240:	mov	r0, r7
    4244:	pop	{r4, r5, r6, r7, fp, pc}
    4248:	mov	r0, r4
    424c:	pop	{r4, r5, r6, r7, fp, lr}
    4250:	b	446c <gen_linktype>
    4254:	movw	r0, #34525	; 0x86dd
    4258:	bl	446c <gen_linktype>
    425c:	mov	r6, r0
    4260:	ldr	r0, [pc, #484]	; 444c <gen_proto+0x3dc>
    4264:	ldr	r0, [pc, r0]
    4268:	add	r0, r0, #6
    426c:	b	42a0 <gen_proto+0x230>
    4270:	movw	r0, #65278	; 0xfefe
    4274:	bl	446c <gen_linktype>
    4278:	mov	r6, r0
    427c:	ldr	r0, [pc, #380]	; 4400 <gen_proto+0x390>
    4280:	ldr	r0, [pc, r0]
    4284:	add	r0, r0, #1
    4288:	b	42a0 <gen_proto+0x230>
    428c:	mov	r0, #254	; 0xfe
    4290:	bl	446c <gen_linktype>
    4294:	mov	r6, r0
    4298:	ldr	r0, [pc, #356]	; 4404 <gen_proto+0x394>
    429c:	ldr	r0, [pc, r0]
    42a0:	mov	r1, #16
    42a4:	bl	bc70 <gen_load_macplrel>
    42a8:	mov	r7, r0
    42ac:	mov	r0, #208	; 0xd0
    42b0:	bl	20bc <newchunk>
    42b4:	mov	r5, r0
    42b8:	mov	r0, #21
    42bc:	str	r7, [r5, #4]
    42c0:	str	r0, [r5, #8]
    42c4:	mov	r0, r6
    42c8:	mov	r1, r5
    42cc:	str	r4, [r5, #20]
    42d0:	str	r5, [r5, #96]	; 0x60
    42d4:	bl	3a60 <sf_gen_and>
    42d8:	mov	r0, r5
    42dc:	pop	{r4, r5, r6, r7, fp, pc}
    42e0:	ldr	r0, [pc, #364]	; 4454 <gen_proto+0x3e4>
    42e4:	add	r0, pc, r0
    42e8:	bl	2028 <sf_bpf_error>
    42ec:	bl	fc4 <abort@plt>
    42f0:	ldr	r0, [pc, #344]	; 4450 <gen_proto+0x3e0>
    42f4:	add	r0, pc, r0
    42f8:	bl	2028 <sf_bpf_error>
    42fc:	ldr	r0, [pc, #292]	; 4428 <gen_proto+0x3b8>
    4300:	add	r0, pc, r0
    4304:	bl	2028 <sf_bpf_error>
    4308:	ldr	r0, [pc, #344]	; 4468 <gen_proto+0x3f8>
    430c:	add	r0, pc, r0
    4310:	bl	2028 <sf_bpf_error>
    4314:	ldr	r0, [pc, #240]	; 440c <gen_proto+0x39c>
    4318:	add	r0, pc, r0
    431c:	bl	2028 <sf_bpf_error>
    4320:	ldr	r0, [pc, #232]	; 4410 <gen_proto+0x3a0>
    4324:	add	r0, pc, r0
    4328:	bl	2028 <sf_bpf_error>
    432c:	ldr	r0, [pc, #256]	; 4434 <gen_proto+0x3c4>
    4330:	add	r0, pc, r0
    4334:	bl	2028 <sf_bpf_error>
    4338:	ldr	r0, [pc, #240]	; 4430 <gen_proto+0x3c0>
    433c:	add	r0, pc, r0
    4340:	bl	2028 <sf_bpf_error>
    4344:	ldr	r0, [pc, #224]	; 442c <gen_proto+0x3bc>
    4348:	add	r0, pc, r0
    434c:	bl	2028 <sf_bpf_error>
    4350:	ldr	r0, [pc, #224]	; 4438 <gen_proto+0x3c8>
    4354:	add	r0, pc, r0
    4358:	bl	2028 <sf_bpf_error>
    435c:	ldr	r0, [pc, #216]	; 443c <gen_proto+0x3cc>
    4360:	add	r0, pc, r0
    4364:	bl	2028 <sf_bpf_error>
    4368:	ldr	r0, [pc, #208]	; 4440 <gen_proto+0x3d0>
    436c:	add	r0, pc, r0
    4370:	bl	2028 <sf_bpf_error>
    4374:	ldr	r0, [pc, #152]	; 4414 <gen_proto+0x3a4>
    4378:	add	r0, pc, r0
    437c:	bl	2028 <sf_bpf_error>
    4380:	ldr	r0, [pc, #144]	; 4418 <gen_proto+0x3a8>
    4384:	add	r0, pc, r0
    4388:	bl	2028 <sf_bpf_error>
    438c:	ldr	r0, [pc, #140]	; 4420 <gen_proto+0x3b0>
    4390:	add	r0, pc, r0
    4394:	bl	2028 <sf_bpf_error>
    4398:	ldr	r0, [pc, #124]	; 441c <gen_proto+0x3ac>
    439c:	add	r0, pc, r0
    43a0:	bl	2028 <sf_bpf_error>
    43a4:	ldr	r0, [pc, #120]	; 4424 <gen_proto+0x3b4>
    43a8:	add	r0, pc, r0
    43ac:	bl	2028 <sf_bpf_error>
    43b0:	ldr	r0, [pc, #160]	; 4458 <gen_proto+0x3e8>
    43b4:	add	r0, pc, r0
    43b8:	bl	2028 <sf_bpf_error>
    43bc:	ldr	r0, [pc, #152]	; 445c <gen_proto+0x3ec>
    43c0:	add	r0, pc, r0
    43c4:	bl	2028 <sf_bpf_error>
    43c8:	ldr	r0, [pc, #144]	; 4460 <gen_proto+0x3f0>
    43cc:	add	r0, pc, r0
    43d0:	bl	2028 <sf_bpf_error>
    43d4:	ldr	r0, [pc, #136]	; 4464 <gen_proto+0x3f4>
    43d8:	add	r0, pc, r0
    43dc:	bl	2028 <sf_bpf_error>
    43e0:	ldr	r0, [pc, #92]	; 4444 <gen_proto+0x3d4>
    43e4:	add	r0, pc, r0
    43e8:	bl	2028 <sf_bpf_error>
    43ec:	ldr	r0, [pc, #84]	; 4448 <gen_proto+0x3d8>
    43f0:	add	r0, pc, r0
    43f4:	bl	2028 <sf_bpf_error>
    43f8:	.word	0x0002c264
    43fc:	.word	0x0002c2b4
    4400:	.word	0x0002c1cc
    4404:	.word	0x0002c1b0
    4408:	.word	0x0002c248
    440c:	.word	0x0000f3fc
    4410:	.word	0x0000f3ef
    4414:	.word	0x0000f3c6
    4418:	.word	0x0000f3e1
    441c:	.word	0x0000f3f1
    4420:	.word	0x0000f427
    4424:	.word	0x0000f439
    4428:	.word	0x0000f50d
    442c:	.word	0x0000f4f1
    4430:	.word	0x0000f512
    4434:	.word	0x0000f533
    4438:	.word	0x0000f525
    443c:	.word	0x0000f52f
    4440:	.word	0x0000f539
    4444:	.word	0x0000f4d7
    4448:	.word	0x0000f4e0
    444c:	.word	0x0002c1dc
    4450:	.word	0x0000f5f2
    4454:	.word	0x0000f619
    4458:	.word	0x0000f55d
    445c:	.word	0x0000f566
    4460:	.word	0x0000f56f
    4464:	.word	0x0000f57c
    4468:	.word	0x0000f3ea

0000446c <gen_linktype>:
    446c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    4470:	add	fp, sp, #24
    4474:	sub	sp, sp, #24
    4478:	mov	r4, r0
    447c:	ldr	r0, [pc, #3704]	; 52fc <gen_linktype+0xe90>
    4480:	ldr	r0, [pc, r0]
    4484:	cmp	r0, #0
    4488:	beq	44a8 <gen_linktype+0x3c>
    448c:	cmp	r4, #2048	; 0x800
    4490:	bge	4508 <gen_linktype+0x9c>
    4494:	cmp	r4, #33	; 0x21
    4498:	beq	4774 <gen_linktype+0x308>
    449c:	cmp	r4, #87	; 0x57
    44a0:	beq	4514 <gen_linktype+0xa8>
    44a4:	b	5278 <gen_linktype+0xe0c>
    44a8:	ldr	r0, [pc, #3668]	; 5304 <gen_linktype+0xe98>
    44ac:	add	r0, pc, r0
    44b0:	ldrb	r0, [r0]
    44b4:	cmp	r0, #1
    44b8:	bne	451c <gen_linktype+0xb0>
    44bc:	mov	r0, r4
    44c0:	bl	af6c <ethertype_to_ppptype>
    44c4:	mov	r4, r0
    44c8:	ldr	r0, [pc, #3640]	; 5308 <gen_linktype+0xe9c>
    44cc:	mov	r1, #8
    44d0:	ldr	r0, [pc, r0]
    44d4:	bl	bc70 <gen_load_macplrel>
    44d8:	mov	r6, r0
    44dc:	mov	r0, #208	; 0xd0
    44e0:	bl	20bc <newchunk>
    44e4:	mov	r5, r0
    44e8:	mov	r0, #21
    44ec:	str	r6, [r5, #4]
    44f0:	str	r0, [r5, #8]
    44f4:	str	r4, [r5, #20]
    44f8:	str	r5, [r5, #96]	; 0x60
    44fc:	mov	r0, r5
    4500:	sub	sp, fp, #24
    4504:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    4508:	movw	r0, #34525	; 0x86dd
    450c:	cmp	r4, r0
    4510:	bne	476c <gen_linktype+0x300>
    4514:	mov	r0, #17
    4518:	b	4778 <gen_linktype+0x30c>
    451c:	ldr	r0, [pc, #3560]	; 530c <gen_linktype+0xea0>
    4520:	ldr	r0, [pc, r0]
    4524:	sub	r1, r0, #104	; 0x68
    4528:	cmp	r1, #125	; 0x7d
    452c:	bhi	4784 <gen_linktype+0x318>
    4530:	add	r2, pc, #4
    4534:	ldr	r1, [r2, r1, lsl #2]
    4538:	add	pc, r2, r1
    453c:	.word	0x00000428
    4540:	.word	0x000002bc
    4544:	.word	0x00000394
    4548:	.word	0x00000468
    454c:	.word	0x00000350
    4550:	.word	0x00000350
    4554:	.word	0x00000394
    4558:	.word	0x00000394
    455c:	.word	0x00000394
    4560:	.word	0x000004b8
    4564:	.word	0x00000410
    4568:	.word	0x00000394
    456c:	.word	0x00000394
    4570:	.word	0x00000394
    4574:	.word	0x00000394
    4578:	.word	0x000002bc
    457c:	.word	0x00000394
    4580:	.word	0x00000394
    4584:	.word	0x000002ac
    4588:	.word	0x00000540
    458c:	.word	0x00000394
    4590:	.word	0x00000394
    4594:	.word	0x00000394
    4598:	.word	0x000002bc
    459c:	.word	0x00000394
    45a0:	.word	0x000003a8
    45a4:	.word	0x000001f8
    45a8:	.word	0x000001f8
    45ac:	.word	0x000001f8
    45b0:	.word	0x000001f8
    45b4:	.word	0x000001f8
    45b8:	.word	0x000001f8
    45bc:	.word	0x000001f8
    45c0:	.word	0x000001f8
    45c4:	.word	0x00000394
    45c8:	.word	0x00000d18
    45cc:	.word	0x00000d18
    45d0:	.word	0x00000394
    45d4:	.word	0x00000394
    45d8:	.word	0x00000d48
    45dc:	.word	0x00000d54
    45e0:	.word	0x00000394
    45e4:	.word	0x00000394
    45e8:	.word	0x00000394
    45ec:	.word	0x00000394
    45f0:	.word	0x00000394
    45f4:	.word	0x00000394
    45f8:	.word	0x00000394
    45fc:	.word	0x00000394
    4600:	.word	0x00000394
    4604:	.word	0x00000394
    4608:	.word	0x00000394
    460c:	.word	0x00000394
    4610:	.word	0x00000394
    4614:	.word	0x00000394
    4618:	.word	0x00000394
    461c:	.word	0x00000394
    4620:	.word	0x00000394
    4624:	.word	0x00000394
    4628:	.word	0x000002bc
    462c:	.word	0x000001f8
    4630:	.word	0x00000394
    4634:	.word	0x00000748
    4638:	.word	0x000001f8
    463c:	.word	0x000001f8
    4640:	.word	0x00000394
    4644:	.word	0x00000394
    4648:	.word	0x00000394
    464c:	.word	0x00000394
    4650:	.word	0x00000394
    4654:	.word	0x00000394
    4658:	.word	0x00000394
    465c:	.word	0x00000394
    4660:	.word	0x00000d60
    4664:	.word	0x000001f8
    4668:	.word	0x000001f8
    466c:	.word	0x000001f8
    4670:	.word	0x000001f8
    4674:	.word	0x00000d6c
    4678:	.word	0x000001f8
    467c:	.word	0x00000394
    4680:	.word	0x00000394
    4684:	.word	0x00000d00
    4688:	.word	0x00000d24
    468c:	.word	0x00000394
    4690:	.word	0x00000d00
    4694:	.word	0x00000d30
    4698:	.word	0x00000d0c
    469c:	.word	0x000002bc
    46a0:	.word	0x00000d78
    46a4:	.word	0x000001f8
    46a8:	.word	0x00000d0c
    46ac:	.word	0x00000d84
    46b0:	.word	0x00000d90
    46b4:	.word	0x00000d9c
    46b8:	.word	0x00000da8
    46bc:	.word	0x000001f8
    46c0:	.word	0x00000d24
    46c4:	.word	0x00000db4
    46c8:	.word	0x00000394
    46cc:	.word	0x00000394
    46d0:	.word	0x00000394
    46d4:	.word	0x00000394
    46d8:	.word	0x00000394
    46dc:	.word	0x00000394
    46e0:	.word	0x00000394
    46e4:	.word	0x00000394
    46e8:	.word	0x00000394
    46ec:	.word	0x00000394
    46f0:	.word	0x00000394
    46f4:	.word	0x00000394
    46f8:	.word	0x00000d0c
    46fc:	.word	0x00000394
    4700:	.word	0x00000394
    4704:	.word	0x00000394
    4708:	.word	0x00000394
    470c:	.word	0x00000d00
    4710:	.word	0x00000394
    4714:	.word	0x00000394
    4718:	.word	0x00000394
    471c:	.word	0x00000394
    4720:	.word	0x00000394
    4724:	.word	0x00000608
    4728:	.word	0x00000d30
    472c:	.word	0x000005d0
    4730:	.word	0x000005a8
    4734:	movw	r0, #17152	; 0x4300
    4738:	mov	r1, #0
    473c:	mov	r2, #16
    4740:	mvn	r3, #255	; 0xff
    4744:	movt	r0, #19783	; 0x4d47
    4748:	str	r2, [sp]
    474c:	str	r1, [sp, #4]
    4750:	mov	r1, #0
    4754:	mov	r2, #0
    4758:	str	r0, [sp, #8]
    475c:	mov	r0, #1
    4760:	bl	a52c <gen_ncmp>
    4764:	sub	sp, fp, #24
    4768:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    476c:	cmp	r4, #2048	; 0x800
    4770:	bne	5278 <gen_linktype+0xe0c>
    4774:	mov	r0, #2
    4778:	sub	sp, fp, #24
    477c:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
    4780:	b	aea4 <gen_mpls_linktype>
    4784:	cmp	r0, #19
    4788:	bhi	48c4 <gen_linktype+0x458>
    478c:	add	r1, pc, #4
    4790:	ldr	r2, [r1, r0, lsl #2]
    4794:	add	pc, r1, r2
    4798:	.word	0x000000f4
    479c:	.word	0x00000510
    47a0:	.word	0x00000138
    47a4:	.word	0x00000138
    47a8:	.word	0x00000138
    47ac:	.word	0x00000138
    47b0:	.word	0x00000050
    47b4:	.word	0x0000014c
    47b8:	.word	0x00000110
    47bc:	.word	0x000004ec
    47c0:	.word	0x00000050
    47c4:	.word	0x00000050
    47c8:	.word	0x00000110
    47cc:	.word	0x00000138
    47d0:	.word	0x00000138
    47d4:	.word	0x00000110
    47d8:	.word	0x0000043c
    47dc:	.word	0x00000138
    47e0:	.word	0x00000138
    47e4:	.word	0x00000050
    47e8:	mov	r0, r4
    47ec:	sub	sp, fp, #24
    47f0:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
    47f4:	b	b3c0 <gen_llc_linktype>
    47f8:	mov	r0, #1
    47fc:	mov	r1, #0
    4800:	mov	r2, #16
    4804:	bl	9a88 <gen_load_a>
    4808:	mov	r5, r0
    480c:	mov	r0, #208	; 0xd0
    4810:	bl	20bc <newchunk>
    4814:	mov	r6, r0
    4818:	mov	r0, #8
    481c:	mov	r7, #69	; 0x45
    4820:	mov	r1, #0
    4824:	mov	r2, #16
    4828:	str	r0, [r6, #20]
    482c:	mov	r0, #1
    4830:	stmib	r6, {r5, r7}
    4834:	str	r6, [r6, #96]	; 0x60
    4838:	bl	9a88 <gen_load_a>
    483c:	mov	r5, r0
    4840:	mov	r0, #208	; 0xd0
    4844:	bl	20bc <newchunk>
    4848:	mov	r1, #4
    484c:	str	r1, [r0, #20]
    4850:	stmib	r0, {r5, r7}
    4854:	ldr	r1, [r0, #44]	; 0x2c
    4858:	clz	r1, r1
    485c:	lsr	r1, r1, #5
    4860:	str	r1, [r0, #44]	; 0x2c
    4864:	mov	r1, r6
    4868:	str	r0, [r0, #96]	; 0x60
    486c:	bl	3a60 <sf_gen_and>
    4870:	mov	r0, r4
    4874:	bl	b3c0 <gen_llc_linktype>
    4878:	mov	r5, r0
    487c:	mov	r0, r6
    4880:	mov	r1, r5
    4884:	bl	3a60 <sf_gen_and>
    4888:	b	44fc <gen_linktype+0x90>
    488c:	cmp	r4, #2048	; 0x800
    4890:	beq	4b90 <gen_linktype+0x724>
    4894:	movw	r1, #34525	; 0x86dd
    4898:	cmp	r4, r1
    489c:	bne	4d60 <gen_linktype+0x8f4>
    48a0:	mov	r6, #10
    48a4:	b	4b94 <gen_linktype+0x728>
    48a8:	movw	r0, #34525	; 0x86dd
    48ac:	cmp	r4, r0
    48b0:	beq	4cb8 <gen_linktype+0x84c>
    48b4:	cmp	r4, #2048	; 0x800
    48b8:	bne	4d60 <gen_linktype+0x8f4>
    48bc:	mov	r0, #64	; 0x40
    48c0:	b	4cbc <gen_linktype+0x850>
    48c4:	sub	r0, r0, #50	; 0x32
    48c8:	cmp	r0, #2
    48cc:	bcc	4c84 <gen_linktype+0x818>
    48d0:	ldr	r1, [pc, #2768]	; 53a8 <gen_linktype+0xf3c>
    48d4:	ldr	r1, [pc, r1]
    48d8:	cmn	r1, #1
    48dc:	bne	4c98 <gen_linktype+0x82c>
    48e0:	bl	fc4 <abort@plt>
    48e4:	movw	r0, #32820	; 0x8034
    48e8:	cmp	r4, r0
    48ec:	ble	4ce4 <gen_linktype+0x878>
    48f0:	movw	r0, #32821	; 0x8035
    48f4:	cmp	r4, r0
    48f8:	beq	4e6c <gen_linktype+0xa00>
    48fc:	movw	r0, #32923	; 0x809b
    4900:	cmp	r4, r0
    4904:	beq	4ea4 <gen_linktype+0xa38>
    4908:	movw	r0, #34525	; 0x86dd
    490c:	cmp	r4, r0
    4910:	bne	4d60 <gen_linktype+0x8f4>
    4914:	ldr	r1, [pc, #2612]	; 5350 <gen_linktype+0xee4>
    4918:	mov	r0, #1
    491c:	mov	r2, #16
    4920:	ldr	r1, [pc, r1]
    4924:	bl	9a88 <gen_load_a>
    4928:	mov	r4, r0
    492c:	mov	r0, #208	; 0xd0
    4930:	bl	20bc <newchunk>
    4934:	mov	r5, r0
    4938:	mov	r0, #21
    493c:	str	r4, [r5, #4]
    4940:	str	r0, [r5, #8]
    4944:	mov	r0, #196	; 0xc4
    4948:	b	4f80 <gen_linktype+0xb14>
    494c:	mov	r0, #20
    4950:	bl	20bc <newchunk>
    4954:	mov	r6, r0
    4958:	mov	r0, #0
    495c:	movw	r1, #32923	; 0x809b
    4960:	b	4af8 <gen_linktype+0x68c>
    4964:	ldr	r1, [pc, #2472]	; 5314 <gen_linktype+0xea8>
    4968:	mov	r0, #1
    496c:	mov	r2, #8
    4970:	ldr	r1, [pc, r1]
    4974:	bl	9a88 <gen_load_a>
    4978:	mov	r6, r0
    497c:	mov	r0, #208	; 0xd0
    4980:	bl	20bc <newchunk>
    4984:	mov	r5, r0
    4988:	mov	r0, #21
    498c:	cmp	r4, #254	; 0xfe
    4990:	str	r6, [r5, #4]
    4994:	str	r0, [r5, #8]
    4998:	mov	r0, #254	; 0xfe
    499c:	orreq	r4, r0, r4, lsl #8
    49a0:	b	44f4 <gen_linktype+0x88>
    49a4:	cmp	r4, #254	; 0xfe
    49a8:	beq	4f88 <gen_linktype+0xb1c>
    49ac:	movw	r0, #34525	; 0x86dd
    49b0:	cmp	r4, r0
    49b4:	beq	4f50 <gen_linktype+0xae4>
    49b8:	cmp	r4, #2048	; 0x800
    49bc:	bne	4d60 <gen_linktype+0x8f4>
    49c0:	mov	r0, #1
    49c4:	mov	r1, #2
    49c8:	mov	r2, #8
    49cc:	bl	9a88 <gen_load_a>
    49d0:	mov	r4, r0
    49d4:	mov	r0, #208	; 0xd0
    49d8:	bl	20bc <newchunk>
    49dc:	mov	r5, r0
    49e0:	mov	r0, #21
    49e4:	str	r4, [r5, #4]
    49e8:	str	r0, [r5, #8]
    49ec:	mov	r0, #972	; 0x3cc
    49f0:	b	4f80 <gen_linktype+0xb14>
    49f4:	cmp	r4, #253	; 0xfd
    49f8:	bgt	4d98 <gen_linktype+0x92c>
    49fc:	cmp	r4, #6
    4a00:	beq	4a14 <gen_linktype+0x5a8>
    4a04:	cmp	r4, #224	; 0xe0
    4a08:	beq	5118 <gen_linktype+0xcac>
    4a0c:	cmp	r4, #240	; 0xf0
    4a10:	bne	50a0 <gen_linktype+0xc34>
    4a14:	ldr	r1, [pc, #2312]	; 5324 <gen_linktype+0xeb8>
    4a18:	mov	r0, #1
    4a1c:	mov	r2, #8
    4a20:	ldr	r1, [pc, r1]
    4a24:	bl	9a88 <gen_load_a>
    4a28:	mov	r5, r0
    4a2c:	mov	r0, #208	; 0xd0
    4a30:	bl	20bc <newchunk>
    4a34:	mov	r8, #21
    4a38:	mov	r6, r0
    4a3c:	mov	r1, #8
    4a40:	stmib	r0, {r5, r8}
    4a44:	mov	r0, #4
    4a48:	str	r0, [r6, #20]
    4a4c:	mov	r0, #0
    4a50:	str	r6, [r6, #96]	; 0x60
    4a54:	bl	bc70 <gen_load_macplrel>
    4a58:	mov	r7, r0
    4a5c:	mov	r0, #208	; 0xd0
    4a60:	bl	20bc <newchunk>
    4a64:	mov	r5, r0
    4a68:	stmib	r0, {r7, r8}
    4a6c:	orr	r0, r4, r4, lsl #8
    4a70:	str	r0, [r5, #20]
    4a74:	str	r5, [r5, #96]	; 0x60
    4a78:	b	487c <gen_linktype+0x410>
    4a7c:	ldr	r0, [pc, #2196]	; 5318 <gen_linktype+0xeac>
    4a80:	add	r0, pc, r0
    4a84:	ldrb	r0, [r0]
    4a88:	cmp	r0, #1
    4a8c:	bne	4e18 <gen_linktype+0x9ac>
    4a90:	mov	r0, #1
    4a94:	mov	r1, #4
    4a98:	mov	r2, #8
    4a9c:	bl	9a88 <gen_load_a>
    4aa0:	mov	r5, r0
    4aa4:	mov	r0, #208	; 0xd0
    4aa8:	bl	20bc <newchunk>
    4aac:	mov	r6, r0
    4ab0:	mov	r0, #21
    4ab4:	str	r5, [r6, #4]
    4ab8:	str	r0, [r6, #8]
    4abc:	mov	r0, #65280	; 0xff00
    4ac0:	str	r0, [r6, #20]
    4ac4:	ldr	r0, [r6, #44]	; 0x2c
    4ac8:	clz	r0, r0
    4acc:	lsr	r0, r0, #5
    4ad0:	str	r0, [r6, #44]	; 0x2c
    4ad4:	mov	r0, r4
    4ad8:	str	r6, [r6, #96]	; 0x60
    4adc:	bl	b008 <gen_ether_linktype>
    4ae0:	b	4878 <gen_linktype+0x40c>
    4ae4:	mov	r0, #20
    4ae8:	bl	20bc <newchunk>
    4aec:	mov	r6, r0
    4af0:	mov	r0, #0
    4af4:	movw	r1, #34525	; 0x86dd
    4af8:	str	r0, [r6]
    4afc:	cmp	r4, r1
    4b00:	beq	4b28 <gen_linktype+0x6bc>
    4b04:	mov	r0, #1
    4b08:	b	4b28 <gen_linktype+0x6bc>
    4b0c:	mov	r0, #20
    4b10:	bl	20bc <newchunk>
    4b14:	mov	r6, r0
    4b18:	mov	r0, #0
    4b1c:	cmp	r4, #2048	; 0x800
    4b20:	str	r0, [r6]
    4b24:	movne	r0, #1
    4b28:	str	r0, [r6, #12]
    4b2c:	mov	r0, #208	; 0xd0
    4b30:	bl	20bc <newchunk>
    4b34:	mov	r5, r0
    4b38:	mov	r0, #21
    4b3c:	str	r6, [r5, #4]
    4b40:	b	4d90 <gen_linktype+0x924>
    4b44:	movw	r0, #34525	; 0x86dd
    4b48:	cmp	r4, r0
    4b4c:	beq	4e34 <gen_linktype+0x9c8>
    4b50:	cmp	r4, #2048	; 0x800
    4b54:	bne	4d60 <gen_linktype+0x8f4>
    4b58:	ldr	r1, [pc, #2056]	; 5368 <gen_linktype+0xefc>
    4b5c:	mov	r0, #1
    4b60:	mov	r2, #16
    4b64:	ldr	r1, [pc, r1]
    4b68:	bl	9a88 <gen_load_a>
    4b6c:	mov	r4, r0
    4b70:	mov	r0, #208	; 0xd0
    4b74:	bl	20bc <newchunk>
    4b78:	mov	r5, r0
    4b7c:	mov	r0, #21
    4b80:	str	r4, [r5, #4]
    4b84:	str	r0, [r5, #8]
    4b88:	mov	r0, #2
    4b8c:	b	4f80 <gen_linktype+0xb14>
    4b90:	mov	r6, #2
    4b94:	cmp	r0, #109	; 0x6d
    4b98:	mov	r1, #0
    4b9c:	mov	r2, #0
    4ba0:	cmpne	r0, #0
    4ba4:	mov	r0, #1
    4ba8:	reveq	r6, r6
    4bac:	bl	9a88 <gen_load_a>
    4bb0:	mov	r4, r0
    4bb4:	mov	r0, #208	; 0xd0
    4bb8:	bl	20bc <newchunk>
    4bbc:	mov	r5, r0
    4bc0:	mov	r0, #21
    4bc4:	str	r4, [r5, #4]
    4bc8:	str	r0, [r5, #8]
    4bcc:	str	r6, [r5, #20]
    4bd0:	b	44f8 <gen_linktype+0x8c>
    4bd4:	cmp	r4, #2048	; 0x800
    4bd8:	bne	4c84 <gen_linktype+0x818>
    4bdc:	ldr	r1, [pc, #1880]	; 533c <gen_linktype+0xed0>
    4be0:	mov	r0, #1
    4be4:	mov	r2, #8
    4be8:	ldr	r1, [pc, r1]
    4bec:	bl	9a88 <gen_load_a>
    4bf0:	mov	r4, r0
    4bf4:	mov	r0, #208	; 0xd0
    4bf8:	bl	20bc <newchunk>
    4bfc:	mov	r7, #21
    4c00:	mov	r5, r0
    4c04:	mov	r2, #8
    4c08:	stmib	r0, {r4, r7}
    4c0c:	mov	r0, #33	; 0x21
    4c10:	str	r0, [r5, #20]
    4c14:	str	r5, [r5, #96]	; 0x60
    4c18:	mov	r0, #1
    4c1c:	ldr	r1, [pc, #1820]	; 5340 <gen_linktype+0xed4>
    4c20:	ldr	r1, [pc, r1]
    4c24:	bl	9a88 <gen_load_a>
    4c28:	mov	r4, r0
    4c2c:	mov	r0, #208	; 0xd0
    4c30:	bl	20bc <newchunk>
    4c34:	mov	r6, r0
    4c38:	stmib	r0, {r4, r7}
    4c3c:	mov	r0, #45	; 0x2d
    4c40:	str	r0, [r6, #20]
    4c44:	mov	r0, r5
    4c48:	mov	r1, r6
    4c4c:	str	r6, [r6, #96]	; 0x60
    4c50:	bl	3b3c <sf_gen_or>
    4c54:	ldr	r1, [pc, #1768]	; 5344 <gen_linktype+0xed8>
    4c58:	mov	r0, #1
    4c5c:	mov	r2, #8
    4c60:	ldr	r1, [pc, r1]
    4c64:	bl	9a88 <gen_load_a>
    4c68:	mov	r4, r0
    4c6c:	mov	r0, #208	; 0xd0
    4c70:	bl	20bc <newchunk>
    4c74:	mov	r5, r0
    4c78:	stmib	r0, {r4, r7}
    4c7c:	mov	r0, #47	; 0x2f
    4c80:	b	4f40 <gen_linktype+0xad4>
    4c84:	mov	r0, r4
    4c88:	bl	af6c <ethertype_to_ppptype>
    4c8c:	ldr	r1, [pc, #1660]	; 5310 <gen_linktype+0xea4>
    4c90:	mov	r4, r0
    4c94:	ldr	r1, [pc, r1]
    4c98:	mov	r0, #1
    4c9c:	mov	r2, #8
    4ca0:	bl	9a88 <gen_load_a>
    4ca4:	b	44d8 <gen_linktype+0x6c>
    4ca8:	mov	r0, r4
    4cac:	sub	sp, fp, #24
    4cb0:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
    4cb4:	b	b008 <gen_ether_linktype>
    4cb8:	mov	r0, #96	; 0x60
    4cbc:	mov	r1, #0
    4cc0:	mov	r2, #16
    4cc4:	str	r0, [sp, #8]
    4cc8:	mov	r0, #1
    4ccc:	mov	r3, #240	; 0xf0
    4cd0:	str	r2, [sp]
    4cd4:	str	r1, [sp, #4]
    4cd8:	mov	r1, #0
    4cdc:	mov	r2, #16
    4ce0:	b	4760 <gen_linktype+0x2f4>
    4ce4:	cmp	r4, #2048	; 0x800
    4ce8:	beq	4edc <gen_linktype+0xa70>
    4cec:	movw	r0, #2054	; 0x806
    4cf0:	cmp	r4, r0
    4cf4:	bne	4d60 <gen_linktype+0x8f4>
    4cf8:	ldr	r1, [pc, #1608]	; 5348 <gen_linktype+0xedc>
    4cfc:	mov	r0, #1
    4d00:	mov	r2, #16
    4d04:	ldr	r1, [pc, r1]
    4d08:	bl	9a88 <gen_load_a>
    4d0c:	mov	r4, r0
    4d10:	mov	r0, #208	; 0xd0
    4d14:	bl	20bc <newchunk>
    4d18:	mov	r7, #21
    4d1c:	mov	r6, r0
    4d20:	mov	r2, #16
    4d24:	stmib	r0, {r4, r7}
    4d28:	mov	r0, #213	; 0xd5
    4d2c:	str	r0, [r6, #20]
    4d30:	str	r6, [r6, #96]	; 0x60
    4d34:	mov	r0, #1
    4d38:	ldr	r1, [pc, #1548]	; 534c <gen_linktype+0xee0>
    4d3c:	ldr	r1, [pc, r1]
    4d40:	bl	9a88 <gen_load_a>
    4d44:	mov	r4, r0
    4d48:	mov	r0, #208	; 0xd0
    4d4c:	bl	20bc <newchunk>
    4d50:	mov	r5, r0
    4d54:	stmib	r0, {r4, r7}
    4d58:	mov	r0, #241	; 0xf1
    4d5c:	b	4f40 <gen_linktype+0xad4>
    4d60:	mov	r0, #20
    4d64:	bl	20bc <newchunk>
    4d68:	mov	r4, r0
    4d6c:	mov	r0, #0
    4d70:	str	r0, [r4]
    4d74:	mov	r0, #1
    4d78:	str	r0, [r4, #12]
    4d7c:	mov	r0, #208	; 0xd0
    4d80:	bl	20bc <newchunk>
    4d84:	mov	r5, r0
    4d88:	mov	r0, #21
    4d8c:	str	r4, [r5, #4]
    4d90:	str	r0, [r5, #8]
    4d94:	b	44f8 <gen_linktype+0x8c>
    4d98:	movw	r0, #33011	; 0x80f3
    4d9c:	cmp	r4, r0
    4da0:	movwne	r0, #32923	; 0x809b
    4da4:	cmpne	r4, r0
    4da8:	bne	5098 <gen_linktype+0xc2c>
    4dac:	ldr	r1, [pc, #1408]	; 5334 <gen_linktype+0xec8>
    4db0:	mov	r0, #1
    4db4:	mov	r2, #8
    4db8:	ldr	r1, [pc, r1]
    4dbc:	bl	9a88 <gen_load_a>
    4dc0:	mov	r5, r0
    4dc4:	mov	r0, #208	; 0xd0
    4dc8:	bl	20bc <newchunk>
    4dcc:	mov	r6, r0
    4dd0:	mov	r0, #21
    4dd4:	str	r5, [r6, #4]
    4dd8:	str	r0, [r6, #8]
    4ddc:	mov	r0, #4
    4de0:	str	r0, [r6, #20]
    4de4:	mov	r0, #3
    4de8:	str	r6, [r6, #96]	; 0x60
    4dec:	strb	r0, [sp, #18]
    4df0:	movw	r0, #43690	; 0xaaaa
    4df4:	strh	r0, [sp, #16]
    4df8:	movw	r0, #32923	; 0x809b
    4dfc:	cmp	r4, r0
    4e00:	bne	5030 <gen_linktype+0xbc4>
    4e04:	mov	r0, #155	; 0x9b
    4e08:	strb	r0, [sp, #23]
    4e0c:	movw	r0, #8
    4e10:	movt	r0, #32775	; 0x8007
    4e14:	b	503c <gen_linktype+0xbd0>
    4e18:	mov	r0, #53	; 0x35
    4e1c:	mov	r1, #2
    4e20:	mov	r2, #16
    4e24:	mov	r3, #0
    4e28:	bl	a38c <sf_gen_atmfield_code>
    4e2c:	mov	r6, r0
    4e30:	b	4870 <gen_linktype+0x404>
    4e34:	ldr	r1, [pc, #1328]	; 536c <gen_linktype+0xf00>
    4e38:	mov	r0, #1
    4e3c:	mov	r2, #16
    4e40:	ldr	r1, [pc, r1]
    4e44:	bl	9a88 <gen_load_a>
    4e48:	mov	r4, r0
    4e4c:	mov	r0, #208	; 0xd0
    4e50:	bl	20bc <newchunk>
    4e54:	mov	r5, r0
    4e58:	mov	r0, #21
    4e5c:	str	r4, [r5, #4]
    4e60:	str	r0, [r5, #8]
    4e64:	mov	r0, #26
    4e68:	b	4f80 <gen_linktype+0xb14>
    4e6c:	ldr	r1, [pc, #1256]	; 535c <gen_linktype+0xef0>
    4e70:	mov	r0, #1
    4e74:	mov	r2, #16
    4e78:	ldr	r1, [pc, r1]
    4e7c:	bl	9a88 <gen_load_a>
    4e80:	mov	r4, r0
    4e84:	mov	r0, #208	; 0xd0
    4e88:	bl	20bc <newchunk>
    4e8c:	mov	r5, r0
    4e90:	mov	r0, #21
    4e94:	str	r4, [r5, #4]
    4e98:	str	r0, [r5, #8]
    4e9c:	mov	r0, #214	; 0xd6
    4ea0:	b	4f80 <gen_linktype+0xb14>
    4ea4:	ldr	r1, [pc, #1204]	; 5360 <gen_linktype+0xef4>
    4ea8:	mov	r0, #1
    4eac:	mov	r2, #16
    4eb0:	ldr	r1, [pc, r1]
    4eb4:	bl	9a88 <gen_load_a>
    4eb8:	mov	r4, r0
    4ebc:	mov	r0, #208	; 0xd0
    4ec0:	bl	20bc <newchunk>
    4ec4:	mov	r5, r0
    4ec8:	mov	r0, #21
    4ecc:	str	r4, [r5, #4]
    4ed0:	str	r0, [r5, #8]
    4ed4:	mov	r0, #221	; 0xdd
    4ed8:	b	4f80 <gen_linktype+0xb14>
    4edc:	ldr	r1, [pc, #1136]	; 5354 <gen_linktype+0xee8>
    4ee0:	mov	r0, #1
    4ee4:	mov	r2, #16
    4ee8:	ldr	r1, [pc, r1]
    4eec:	bl	9a88 <gen_load_a>
    4ef0:	mov	r4, r0
    4ef4:	mov	r0, #208	; 0xd0
    4ef8:	bl	20bc <newchunk>
    4efc:	mov	r7, #21
    4f00:	mov	r6, r0
    4f04:	mov	r2, #16
    4f08:	stmib	r0, {r4, r7}
    4f0c:	mov	r0, #212	; 0xd4
    4f10:	str	r0, [r6, #20]
    4f14:	str	r6, [r6, #96]	; 0x60
    4f18:	mov	r0, #1
    4f1c:	ldr	r1, [pc, #1076]	; 5358 <gen_linktype+0xeec>
    4f20:	ldr	r1, [pc, r1]
    4f24:	bl	9a88 <gen_load_a>
    4f28:	mov	r4, r0
    4f2c:	mov	r0, #208	; 0xd0
    4f30:	bl	20bc <newchunk>
    4f34:	mov	r5, r0
    4f38:	stmib	r0, {r4, r7}
    4f3c:	mov	r0, #240	; 0xf0
    4f40:	str	r0, [r5, #20]
    4f44:	str	r5, [r5, #96]	; 0x60
    4f48:	mov	r0, r6
    4f4c:	b	5224 <gen_linktype+0xdb8>
    4f50:	mov	r0, #1
    4f54:	mov	r1, #2
    4f58:	mov	r2, #8
    4f5c:	bl	9a88 <gen_load_a>
    4f60:	mov	r4, r0
    4f64:	mov	r0, #208	; 0xd0
    4f68:	bl	20bc <newchunk>
    4f6c:	mov	r5, r0
    4f70:	mov	r0, #21
    4f74:	str	r4, [r5, #4]
    4f78:	str	r0, [r5, #8]
    4f7c:	movw	r0, #910	; 0x38e
    4f80:	str	r0, [r5, #20]
    4f84:	b	44f8 <gen_linktype+0x8c>
    4f88:	mov	r0, #1
    4f8c:	mov	r1, #2
    4f90:	mov	r2, #8
    4f94:	bl	9a88 <gen_load_a>
    4f98:	mov	r5, r0
    4f9c:	mov	r0, #208	; 0xd0
    4fa0:	bl	20bc <newchunk>
    4fa4:	mov	r8, #21
    4fa8:	mov	r4, r0
    4fac:	mov	r1, #2
    4fb0:	mov	r2, #8
    4fb4:	stmib	r0, {r5, r8}
    4fb8:	movw	r0, #897	; 0x381
    4fbc:	str	r0, [r4, #20]
    4fc0:	mov	r0, #1
    4fc4:	str	r4, [r4, #96]	; 0x60
    4fc8:	bl	9a88 <gen_load_a>
    4fcc:	mov	r5, r0
    4fd0:	mov	r0, #208	; 0xd0
    4fd4:	bl	20bc <newchunk>
    4fd8:	mov	r6, r0
    4fdc:	stmib	r0, {r5, r8}
    4fe0:	movw	r0, #898	; 0x382
    4fe4:	mov	r1, #2
    4fe8:	mov	r2, #8
    4fec:	str	r0, [r6, #20]
    4ff0:	mov	r0, #1
    4ff4:	str	r6, [r6, #96]	; 0x60
    4ff8:	bl	9a88 <gen_load_a>
    4ffc:	mov	r7, r0
    5000:	mov	r0, #208	; 0xd0
    5004:	bl	20bc <newchunk>
    5008:	mov	r5, r0
    500c:	stmib	r0, {r7, r8}
    5010:	movw	r0, #899	; 0x383
    5014:	str	r0, [r5, #20]
    5018:	mov	r0, r6
    501c:	mov	r1, r5
    5020:	str	r5, [r5, #96]	; 0x60
    5024:	bl	3b3c <sf_gen_or>
    5028:	mov	r0, r4
    502c:	b	5224 <gen_linktype+0xdb8>
    5030:	mov	r0, #243	; 0xf3
    5034:	strb	r0, [sp, #23]
    5038:	mov	r0, #-2147483648	; 0x80000000
    503c:	str	r0, [sp, #19]
    5040:	add	r3, sp, #16
    5044:	mov	r0, #2
    5048:	mov	r1, #0
    504c:	mov	r2, #8
    5050:	bl	b4e0 <gen_bcmp>
    5054:	mov	r5, r0
    5058:	mov	r0, r6
    505c:	mov	r1, r5
    5060:	bl	3a60 <sf_gen_and>
    5064:	ldr	r1, [pc, #716]	; 5338 <gen_linktype+0xecc>
    5068:	mov	r0, #1
    506c:	mov	r2, #8
    5070:	ldr	r1, [pc, r1]
    5074:	bl	9a88 <gen_load_a>
    5078:	mov	r6, r0
    507c:	mov	r0, #208	; 0xd0
    5080:	bl	20bc <newchunk>
    5084:	mov	r1, #21
    5088:	str	r6, [r0, #4]
    508c:	str	r1, [r0, #8]
    5090:	str	r4, [r0, #20]
    5094:	b	5220 <gen_linktype+0xdb4>
    5098:	cmp	r4, #254	; 0xfe
    509c:	beq	4a14 <gen_linktype+0x5a8>
    50a0:	ldr	r1, [pc, #628]	; 531c <gen_linktype+0xeb0>
    50a4:	mov	r0, #1
    50a8:	mov	r2, #8
    50ac:	ldr	r1, [pc, r1]
    50b0:	bl	9a88 <gen_load_a>
    50b4:	mov	r5, r0
    50b8:	mov	r0, #208	; 0xd0
    50bc:	bl	20bc <newchunk>
    50c0:	mov	r8, #21
    50c4:	mov	r6, r0
    50c8:	stmib	r0, {r5, r8}
    50cc:	str	r0, [r0, #96]	; 0x60
    50d0:	movw	r0, #1500	; 0x5dc
    50d4:	cmp	r4, r0
    50d8:	bgt	5230 <gen_linktype+0xdc4>
    50dc:	mov	r0, #4
    50e0:	mov	r2, #16
    50e4:	str	r0, [r6, #20]
    50e8:	mov	r0, #1
    50ec:	ldr	r1, [pc, #556]	; 5320 <gen_linktype+0xeb4>
    50f0:	ldr	r1, [pc, r1]
    50f4:	bl	9a88 <gen_load_a>
    50f8:	mov	r7, r0
    50fc:	mov	r0, #208	; 0xd0
    5100:	bl	20bc <newchunk>
    5104:	stmib	r0, {r7, r8}
    5108:	str	r4, [r0, #20]
    510c:	mov	r5, r0
    5110:	str	r0, [r0, #96]	; 0x60
    5114:	b	487c <gen_linktype+0x410>
    5118:	mov	r0, #0
    511c:	mov	r1, #16
    5120:	bl	bc70 <gen_load_macplrel>
    5124:	mov	r4, r0
    5128:	mov	r0, #208	; 0xd0
    512c:	bl	20bc <newchunk>
    5130:	mov	r7, #21
    5134:	mov	r6, r0
    5138:	add	r3, sp, #16
    513c:	mov	r1, #0
    5140:	mov	r2, #8
    5144:	stmib	r0, {r4, r7}
    5148:	mov	r0, #224	; 0xe0
    514c:	str	r0, [r6, #20]
    5150:	movw	r0, #43690	; 0xaaaa
    5154:	str	r6, [r6, #96]	; 0x60
    5158:	movt	r0, #3
    515c:	str	r0, [sp, #16]
    5160:	movw	r0, #0
    5164:	movt	r0, #14209	; 0x3781
    5168:	str	r0, [sp, #20]
    516c:	mov	r0, #2
    5170:	bl	b4e0 <gen_bcmp>
    5174:	mov	r5, r0
    5178:	mov	r0, r6
    517c:	mov	r1, r5
    5180:	bl	3b3c <sf_gen_or>
    5184:	ldr	r1, [pc, #412]	; 5328 <gen_linktype+0xebc>
    5188:	mov	r0, #1
    518c:	mov	r2, #8
    5190:	mov	r6, #1
    5194:	ldr	r1, [pc, r1]
    5198:	bl	9a88 <gen_load_a>
    519c:	mov	r4, r0
    51a0:	mov	r0, #208	; 0xd0
    51a4:	bl	20bc <newchunk>
    51a8:	mov	r1, #4
    51ac:	stmib	r0, {r4, r7}
    51b0:	str	r1, [r0, #20]
    51b4:	mov	r1, r5
    51b8:	str	r0, [r0, #96]	; 0x60
    51bc:	bl	3a60 <sf_gen_and>
    51c0:	ldr	r1, [pc, #356]	; 532c <gen_linktype+0xec0>
    51c4:	mov	r0, #1
    51c8:	mov	r2, #8
    51cc:	ldr	r1, [pc, r1]
    51d0:	bl	9a88 <gen_load_a>
    51d4:	mov	r4, r0
    51d8:	mov	r0, #208	; 0xd0
    51dc:	bl	20bc <newchunk>
    51e0:	mov	r1, r5
    51e4:	stmib	r0, {r4, r7}
    51e8:	str	r6, [r0, #20]
    51ec:	str	r0, [r0, #96]	; 0x60
    51f0:	bl	3b3c <sf_gen_or>
    51f4:	ldr	r1, [pc, #308]	; 5330 <gen_linktype+0xec4>
    51f8:	mov	r0, #1
    51fc:	mov	r2, #8
    5200:	ldr	r1, [pc, r1]
    5204:	bl	9a88 <gen_load_a>
    5208:	mov	r4, r0
    520c:	mov	r0, #208	; 0xd0
    5210:	bl	20bc <newchunk>
    5214:	movw	r1, #33079	; 0x8137
    5218:	stmib	r0, {r4, r7}
    521c:	str	r1, [r0, #20]
    5220:	str	r0, [r0, #96]	; 0x60
    5224:	mov	r1, r5
    5228:	bl	3b3c <sf_gen_or>
    522c:	b	44fc <gen_linktype+0x90>
    5230:	str	r4, [r6, #20]
    5234:	mov	r5, r6
    5238:	b	44fc <gen_linktype+0x90>
    523c:	ldr	r0, [pc, #320]	; 5384 <gen_linktype+0xf18>
    5240:	add	r0, pc, r0
    5244:	bl	2028 <sf_bpf_error>
    5248:	ldr	r0, [pc, #320]	; 5390 <gen_linktype+0xf24>
    524c:	add	r0, pc, r0
    5250:	bl	2028 <sf_bpf_error>
    5254:	ldr	r0, [pc, #284]	; 5378 <gen_linktype+0xf0c>
    5258:	add	r0, pc, r0
    525c:	bl	2028 <sf_bpf_error>
    5260:	ldr	r0, [pc, #288]	; 5388 <gen_linktype+0xf1c>
    5264:	add	r0, pc, r0
    5268:	bl	2028 <sf_bpf_error>
    526c:	ldr	r0, [pc, #280]	; 538c <gen_linktype+0xf20>
    5270:	add	r0, pc, r0
    5274:	bl	2028 <sf_bpf_error>
    5278:	ldr	r0, [pc, #128]	; 5300 <gen_linktype+0xe94>
    527c:	add	r0, pc, r0
    5280:	bl	2028 <sf_bpf_error>
    5284:	ldr	r0, [pc, #232]	; 5374 <gen_linktype+0xf08>
    5288:	add	r0, pc, r0
    528c:	bl	2028 <sf_bpf_error>
    5290:	ldr	r0, [pc, #216]	; 5370 <gen_linktype+0xf04>
    5294:	add	r0, pc, r0
    5298:	bl	2028 <sf_bpf_error>
    529c:	ldr	r0, [pc, #220]	; 5380 <gen_linktype+0xf14>
    52a0:	add	r0, pc, r0
    52a4:	bl	2028 <sf_bpf_error>
    52a8:	ldr	r0, [pc, #180]	; 5364 <gen_linktype+0xef8>
    52ac:	add	r0, pc, r0
    52b0:	bl	2028 <sf_bpf_error>
    52b4:	ldr	r0, [pc, #216]	; 5394 <gen_linktype+0xf28>
    52b8:	add	r0, pc, r0
    52bc:	bl	2028 <sf_bpf_error>
    52c0:	ldr	r0, [pc, #208]	; 5398 <gen_linktype+0xf2c>
    52c4:	add	r0, pc, r0
    52c8:	bl	2028 <sf_bpf_error>
    52cc:	ldr	r0, [pc, #168]	; 537c <gen_linktype+0xf10>
    52d0:	add	r0, pc, r0
    52d4:	bl	2028 <sf_bpf_error>
    52d8:	ldr	r0, [pc, #188]	; 539c <gen_linktype+0xf30>
    52dc:	add	r0, pc, r0
    52e0:	bl	2028 <sf_bpf_error>
    52e4:	ldr	r0, [pc, #180]	; 53a0 <gen_linktype+0xf34>
    52e8:	add	r0, pc, r0
    52ec:	bl	2028 <sf_bpf_error>
    52f0:	ldr	r0, [pc, #172]	; 53a4 <gen_linktype+0xf38>
    52f4:	add	r0, pc, r0
    52f8:	bl	2028 <sf_bpf_error>
    52fc:	.word	0x0002bc54
    5300:	.word	0x0000e172
    5304:	.word	0x0002bfa4
    5308:	.word	0x0002bf68
    530c:	.word	0x0002bf10
    5310:	.word	0x0002b7a4
    5314:	.word	0x0002bac8
    5318:	.word	0x0002b9b4
    531c:	.word	0x0002b38c
    5320:	.word	0x0002b34c
    5324:	.word	0x0002ba18
    5328:	.word	0x0002b2a4
    532c:	.word	0x0002b26c
    5330:	.word	0x0002b238
    5334:	.word	0x0002b680
    5338:	.word	0x0002b3c8
    533c:	.word	0x0002b850
    5340:	.word	0x0002b818
    5344:	.word	0x0002b7d8
    5348:	.word	0x0002b734
    534c:	.word	0x0002b6fc
    5350:	.word	0x0002bb18
    5354:	.word	0x0002b550
    5358:	.word	0x0002b518
    535c:	.word	0x0002b5c0
    5360:	.word	0x0002b588
    5364:	.word	0x0000e161
    5368:	.word	0x0002b8d4
    536c:	.word	0x0002b5f8
    5370:	.word	0x0000e1ba
    5374:	.word	0x0000e1f5
    5378:	.word	0x0000e256
    537c:	.word	0x0000e20d
    5380:	.word	0x0000e26b
    5384:	.word	0x0000e2fa
    5388:	.word	0x0000e304
    538c:	.word	0x0000e32c
    5390:	.word	0x0000e37e
    5394:	.word	0x0000e34a
    5398:	.word	0x0000e374
    539c:	.word	0x0000e38b
    53a0:	.word	0x0000e3af
    53a4:	.word	0x0000e3d2
    53a8:	.word	0x0002bb64

000053ac <sf_gen_portop>:
    53ac:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    53b0:	add	fp, sp, #24
    53b4:	mov	r8, r0
    53b8:	ldr	r0, [pc, #420]	; 5564 <sf_gen_portop+0x1b8>
    53bc:	mov	r4, r1
    53c0:	mov	r1, #16
    53c4:	mov	r6, r2
    53c8:	ldr	r0, [pc, r0]
    53cc:	add	r0, r0, #9
    53d0:	bl	bc70 <gen_load_macplrel>
    53d4:	mov	r7, r0
    53d8:	mov	r0, #208	; 0xd0
    53dc:	bl	20bc <newchunk>
    53e0:	mov	r5, r0
    53e4:	mov	r0, #21
    53e8:	str	r7, [r5, #4]
    53ec:	str	r0, [r5, #8]
    53f0:	str	r4, [r5, #20]
    53f4:	str	r5, [r5, #96]	; 0x60
    53f8:	bl	5568 <gen_ipfrag>
    53fc:	mov	r4, r0
    5400:	mov	r0, r5
    5404:	mov	r1, r4
    5408:	bl	3a60 <sf_gen_and>
    540c:	cmp	r6, #4
    5410:	bhi	5560 <sf_gen_portop+0x1b4>
    5414:	add	r0, pc, #4
    5418:	ldr	r1, [r0, r6, lsl #2]
    541c:	add	pc, r0, r1
    5420:	.word	0x00000014
    5424:	.word	0x000000ec
    5428:	.word	0x000000f8
    542c:	.word	0x00000014
    5430:	.word	0x00000080
    5434:	mov	r0, #5
    5438:	mov	r1, #0
    543c:	mov	r2, #8
    5440:	bl	9a88 <gen_load_a>
    5444:	mov	r5, r0
    5448:	mov	r0, #208	; 0xd0
    544c:	bl	20bc <newchunk>
    5450:	mov	r9, #21
    5454:	mov	r7, r0
    5458:	mov	r1, #2
    545c:	mov	r2, #8
    5460:	stmib	r0, {r5, r9}
    5464:	str	r8, [r0, #20]
    5468:	str	r0, [r0, #96]	; 0x60
    546c:	mov	r0, #5
    5470:	bl	9a88 <gen_load_a>
    5474:	mov	r5, r0
    5478:	mov	r0, #208	; 0xd0
    547c:	bl	20bc <newchunk>
    5480:	mov	r6, r0
    5484:	stmib	r0, {r5, r9}
    5488:	str	r8, [r0, #20]
    548c:	str	r0, [r0, #96]	; 0x60
    5490:	mov	r0, r7
    5494:	mov	r1, r6
    5498:	bl	3b3c <sf_gen_or>
    549c:	b	554c <sf_gen_portop+0x1a0>
    54a0:	mov	r0, #5
    54a4:	mov	r1, #0
    54a8:	mov	r2, #8
    54ac:	bl	9a88 <gen_load_a>
    54b0:	mov	r5, r0
    54b4:	mov	r0, #208	; 0xd0
    54b8:	bl	20bc <newchunk>
    54bc:	mov	r9, #21
    54c0:	mov	r7, r0
    54c4:	mov	r1, #2
    54c8:	mov	r2, #8
    54cc:	stmib	r0, {r5, r9}
    54d0:	str	r8, [r0, #20]
    54d4:	str	r0, [r0, #96]	; 0x60
    54d8:	mov	r0, #5
    54dc:	bl	9a88 <gen_load_a>
    54e0:	mov	r5, r0
    54e4:	mov	r0, #208	; 0xd0
    54e8:	bl	20bc <newchunk>
    54ec:	mov	r6, r0
    54f0:	stmib	r0, {r5, r9}
    54f4:	str	r8, [r0, #20]
    54f8:	str	r0, [r0, #96]	; 0x60
    54fc:	mov	r0, r7
    5500:	mov	r1, r6
    5504:	bl	3a60 <sf_gen_and>
    5508:	b	554c <sf_gen_portop+0x1a0>
    550c:	mov	r0, #5
    5510:	mov	r1, #0
    5514:	b	5520 <sf_gen_portop+0x174>
    5518:	mov	r0, #5
    551c:	mov	r1, #2
    5520:	mov	r2, #8
    5524:	bl	9a88 <gen_load_a>
    5528:	mov	r5, r0
    552c:	mov	r0, #208	; 0xd0
    5530:	bl	20bc <newchunk>
    5534:	mov	r6, r0
    5538:	mov	r0, #21
    553c:	str	r5, [r6, #4]
    5540:	str	r0, [r6, #8]
    5544:	str	r8, [r6, #20]
    5548:	str	r6, [r6, #96]	; 0x60
    554c:	mov	r0, r4
    5550:	mov	r1, r6
    5554:	bl	3a60 <sf_gen_and>
    5558:	mov	r0, r6
    555c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    5560:	bl	fc4 <abort@plt>
    5564:	.word	0x0002b078

00005568 <gen_ipfrag>:
    5568:	push	{r4, sl, fp, lr}
    556c:	add	fp, sp, #8
    5570:	ldr	r0, [pc, #68]	; 55bc <gen_ipfrag+0x54>
    5574:	mov	r1, #8
    5578:	ldr	r0, [pc, r0]
    557c:	add	r0, r0, #6
    5580:	bl	bc70 <gen_load_macplrel>
    5584:	mov	r4, r0
    5588:	mov	r0, #208	; 0xd0
    558c:	bl	20bc <newchunk>
    5590:	movw	r2, #8191	; 0x1fff
    5594:	mov	r1, #69	; 0x45
    5598:	str	r2, [r0, #20]
    559c:	str	r4, [r0, #4]
    55a0:	str	r1, [r0, #8]
    55a4:	ldr	r1, [r0, #44]	; 0x2c
    55a8:	clz	r1, r1
    55ac:	lsr	r1, r1, #5
    55b0:	str	r1, [r0, #44]	; 0x2c
    55b4:	str	r0, [r0, #96]	; 0x60
    55b8:	pop	{r4, sl, fp, pc}
    55bc:	.word	0x0002aec8

000055c0 <sf_gen_portop6>:
    55c0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    55c4:	add	fp, sp, #24
    55c8:	mov	r8, r0
    55cc:	ldr	r0, [pc, #424]	; 577c <sf_gen_portop6+0x1bc>
    55d0:	mov	r7, r1
    55d4:	mov	r1, #16
    55d8:	mov	r6, r2
    55dc:	ldr	r0, [pc, r0]
    55e0:	add	r0, r0, #6
    55e4:	bl	bc70 <gen_load_macplrel>
    55e8:	mov	r5, r0
    55ec:	mov	r0, #208	; 0xd0
    55f0:	bl	20bc <newchunk>
    55f4:	mov	r4, r0
    55f8:	cmp	r6, #4
    55fc:	mov	r0, #21
    5600:	str	r5, [r4, #4]
    5604:	str	r0, [r4, #8]
    5608:	str	r7, [r4, #20]
    560c:	str	r4, [r4, #96]	; 0x60
    5610:	bhi	5778 <sf_gen_portop6+0x1b8>
    5614:	add	r0, pc, #4
    5618:	ldr	r1, [r0, r6, lsl #2]
    561c:	add	pc, r0, r1
    5620:	.word	0x00000014
    5624:	.word	0x000000fc
    5628:	.word	0x0000010c
    562c:	.word	0x00000014
    5630:	.word	0x00000088
    5634:	ldr	r0, [pc, #340]	; 5790 <sf_gen_portop6+0x1d0>
    5638:	mov	r1, #8
    563c:	ldr	r0, [pc, r0]
    5640:	add	r0, r0, #40	; 0x28
    5644:	bl	bc70 <gen_load_macplrel>
    5648:	mov	r5, r0
    564c:	mov	r0, #208	; 0xd0
    5650:	bl	20bc <newchunk>
    5654:	mov	r9, #21
    5658:	mov	r7, r0
    565c:	mov	r1, #8
    5660:	stmib	r0, {r5, r9}
    5664:	str	r8, [r0, #20]
    5668:	str	r0, [r0, #96]	; 0x60
    566c:	ldr	r0, [pc, #288]	; 5794 <sf_gen_portop6+0x1d4>
    5670:	ldr	r0, [pc, r0]
    5674:	add	r0, r0, #42	; 0x2a
    5678:	bl	bc70 <gen_load_macplrel>
    567c:	mov	r5, r0
    5680:	mov	r0, #208	; 0xd0
    5684:	bl	20bc <newchunk>
    5688:	mov	r6, r0
    568c:	stmib	r0, {r5, r9}
    5690:	str	r8, [r0, #20]
    5694:	str	r0, [r0, #96]	; 0x60
    5698:	mov	r0, r7
    569c:	mov	r1, r6
    56a0:	bl	3b3c <sf_gen_or>
    56a4:	b	5764 <sf_gen_portop6+0x1a4>
    56a8:	ldr	r0, [pc, #216]	; 5788 <sf_gen_portop6+0x1c8>
    56ac:	mov	r1, #8
    56b0:	ldr	r0, [pc, r0]
    56b4:	add	r0, r0, #40	; 0x28
    56b8:	bl	bc70 <gen_load_macplrel>
    56bc:	mov	r5, r0
    56c0:	mov	r0, #208	; 0xd0
    56c4:	bl	20bc <newchunk>
    56c8:	mov	r9, #21
    56cc:	mov	r7, r0
    56d0:	mov	r1, #8
    56d4:	stmib	r0, {r5, r9}
    56d8:	str	r8, [r0, #20]
    56dc:	str	r0, [r0, #96]	; 0x60
    56e0:	ldr	r0, [pc, #164]	; 578c <sf_gen_portop6+0x1cc>
    56e4:	ldr	r0, [pc, r0]
    56e8:	add	r0, r0, #42	; 0x2a
    56ec:	bl	bc70 <gen_load_macplrel>
    56f0:	mov	r5, r0
    56f4:	mov	r0, #208	; 0xd0
    56f8:	bl	20bc <newchunk>
    56fc:	mov	r6, r0
    5700:	stmib	r0, {r5, r9}
    5704:	str	r8, [r0, #20]
    5708:	str	r0, [r0, #96]	; 0x60
    570c:	mov	r0, r7
    5710:	mov	r1, r6
    5714:	bl	3a60 <sf_gen_and>
    5718:	b	5764 <sf_gen_portop6+0x1a4>
    571c:	ldr	r0, [pc, #92]	; 5780 <sf_gen_portop6+0x1c0>
    5720:	ldr	r0, [pc, r0]
    5724:	add	r0, r0, #40	; 0x28
    5728:	b	5738 <sf_gen_portop6+0x178>
    572c:	ldr	r0, [pc, #80]	; 5784 <sf_gen_portop6+0x1c4>
    5730:	ldr	r0, [pc, r0]
    5734:	add	r0, r0, #42	; 0x2a
    5738:	mov	r1, #8
    573c:	bl	bc70 <gen_load_macplrel>
    5740:	mov	r5, r0
    5744:	mov	r0, #208	; 0xd0
    5748:	bl	20bc <newchunk>
    574c:	mov	r6, r0
    5750:	mov	r0, #21
    5754:	str	r5, [r6, #4]
    5758:	str	r0, [r6, #8]
    575c:	str	r8, [r6, #20]
    5760:	str	r6, [r6, #96]	; 0x60
    5764:	mov	r0, r4
    5768:	mov	r1, r6
    576c:	bl	3a60 <sf_gen_and>
    5770:	mov	r0, r6
    5774:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    5778:	bl	fc4 <abort@plt>
    577c:	.word	0x0002ae64
    5780:	.word	0x0002ad20
    5784:	.word	0x0002ad10
    5788:	.word	0x0002ad90
    578c:	.word	0x0002ad5c
    5790:	.word	0x0002ae04
    5794:	.word	0x0002add0

00005798 <sf_gen_portrangeop>:
    5798:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    579c:	add	fp, sp, #24
    57a0:	mov	r9, r0
    57a4:	ldr	r0, [pc, #284]	; 58c8 <sf_gen_portrangeop+0x130>
    57a8:	mov	r8, r1
    57ac:	mov	r1, #16
    57b0:	mov	r7, r3
    57b4:	mov	r4, r2
    57b8:	ldr	r0, [pc, r0]
    57bc:	add	r0, r0, #9
    57c0:	bl	bc70 <gen_load_macplrel>
    57c4:	mov	r5, r0
    57c8:	mov	r0, #208	; 0xd0
    57cc:	bl	20bc <newchunk>
    57d0:	mov	r6, r0
    57d4:	mov	r0, #21
    57d8:	str	r5, [r6, #4]
    57dc:	str	r0, [r6, #8]
    57e0:	str	r4, [r6, #20]
    57e4:	str	r6, [r6, #96]	; 0x60
    57e8:	bl	5568 <gen_ipfrag>
    57ec:	mov	r4, r0
    57f0:	mov	r0, r6
    57f4:	mov	r1, r4
    57f8:	bl	3a60 <sf_gen_and>
    57fc:	cmp	r7, #4
    5800:	bhi	58c4 <sf_gen_portrangeop+0x12c>
    5804:	add	r0, pc, #4
    5808:	ldr	r1, [r0, r7, lsl #2]
    580c:	add	pc, r0, r1
    5810:	.word	0x00000014
    5814:	.word	0x00000084
    5818:	.word	0x0000008c
    581c:	.word	0x00000014
    5820:	.word	0x0000004c
    5824:	mov	r0, #0
    5828:	mov	r1, r9
    582c:	mov	r2, r8
    5830:	bl	58cc <gen_portrangeatom>
    5834:	mov	r6, r0
    5838:	mov	r0, #2
    583c:	mov	r1, r9
    5840:	mov	r2, r8
    5844:	bl	58cc <gen_portrangeatom>
    5848:	mov	r5, r0
    584c:	mov	r0, r6
    5850:	mov	r1, r5
    5854:	bl	3b3c <sf_gen_or>
    5858:	b	58b0 <sf_gen_portrangeop+0x118>
    585c:	mov	r0, #0
    5860:	mov	r1, r9
    5864:	mov	r2, r8
    5868:	bl	58cc <gen_portrangeatom>
    586c:	mov	r6, r0
    5870:	mov	r0, #2
    5874:	mov	r1, r9
    5878:	mov	r2, r8
    587c:	bl	58cc <gen_portrangeatom>
    5880:	mov	r5, r0
    5884:	mov	r0, r6
    5888:	mov	r1, r5
    588c:	bl	3a60 <sf_gen_and>
    5890:	b	58b0 <sf_gen_portrangeop+0x118>
    5894:	mov	r0, #0
    5898:	b	58a0 <sf_gen_portrangeop+0x108>
    589c:	mov	r0, #2
    58a0:	mov	r1, r9
    58a4:	mov	r2, r8
    58a8:	bl	58cc <gen_portrangeatom>
    58ac:	mov	r5, r0
    58b0:	mov	r0, r4
    58b4:	mov	r1, r5
    58b8:	bl	3a60 <sf_gen_and>
    58bc:	mov	r0, r5
    58c0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    58c4:	bl	fc4 <abort@plt>
    58c8:	.word	0x0002ac88

000058cc <gen_portrangeatom>:
    58cc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    58d0:	add	fp, sp, #24
    58d4:	mov	r8, r0
    58d8:	mov	r4, r2
    58dc:	mov	r5, r1
    58e0:	mov	r0, #5
    58e4:	mov	r2, #8
    58e8:	mov	r1, r8
    58ec:	bl	9a88 <gen_load_a>
    58f0:	mov	r7, r0
    58f4:	mov	r0, #208	; 0xd0
    58f8:	bl	20bc <newchunk>
    58fc:	mov	r6, r0
    5900:	mov	r0, #53	; 0x35
    5904:	cmp	r5, r4
    5908:	mov	r1, r8
    590c:	mov	r2, #8
    5910:	str	r7, [r6, #4]
    5914:	str	r0, [r6, #8]
    5918:	mov	r0, r5
    591c:	movgt	r0, r4
    5920:	str	r0, [r6, #20]
    5924:	mov	r0, #5
    5928:	str	r6, [r6, #96]	; 0x60
    592c:	bl	9a88 <gen_load_a>
    5930:	mov	r8, r0
    5934:	mov	r0, #208	; 0xd0
    5938:	bl	20bc <newchunk>
    593c:	cmp	r5, r4
    5940:	mov	r7, r0
    5944:	mov	r0, #37	; 0x25
    5948:	movgt	r4, r5
    594c:	str	r8, [r7, #4]
    5950:	str	r0, [r7, #8]
    5954:	mov	r1, r7
    5958:	str	r4, [r7, #20]
    595c:	ldr	r0, [r7, #44]	; 0x2c
    5960:	clz	r0, r0
    5964:	lsr	r0, r0, #5
    5968:	str	r0, [r7, #44]	; 0x2c
    596c:	mov	r0, r6
    5970:	str	r7, [r7, #96]	; 0x60
    5974:	bl	3a60 <sf_gen_and>
    5978:	mov	r0, r7
    597c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00005980 <sf_gen_portrangeop6>:
    5980:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    5984:	add	fp, sp, #24
    5988:	mov	r9, r0
    598c:	ldr	r0, [pc, #264]	; 5a9c <sf_gen_portrangeop6+0x11c>
    5990:	mov	r8, r1
    5994:	mov	r1, #16
    5998:	mov	r7, r3
    599c:	mov	r5, r2
    59a0:	ldr	r0, [pc, r0]
    59a4:	add	r0, r0, #6
    59a8:	bl	bc70 <gen_load_macplrel>
    59ac:	mov	r6, r0
    59b0:	mov	r0, #208	; 0xd0
    59b4:	bl	20bc <newchunk>
    59b8:	mov	r4, r0
    59bc:	cmp	r7, #4
    59c0:	mov	r0, #21
    59c4:	str	r6, [r4, #4]
    59c8:	str	r0, [r4, #8]
    59cc:	str	r5, [r4, #20]
    59d0:	str	r4, [r4, #96]	; 0x60
    59d4:	bhi	5a98 <sf_gen_portrangeop6+0x118>
    59d8:	add	r0, pc, #4
    59dc:	ldr	r1, [r0, r7, lsl #2]
    59e0:	add	pc, r0, r1
    59e4:	.word	0x00000014
    59e8:	.word	0x00000084
    59ec:	.word	0x0000008c
    59f0:	.word	0x00000014
    59f4:	.word	0x0000004c
    59f8:	mov	r0, #0
    59fc:	mov	r1, r9
    5a00:	mov	r2, r8
    5a04:	bl	5aa0 <gen_portrangeatom6>
    5a08:	mov	r6, r0
    5a0c:	mov	r0, #2
    5a10:	mov	r1, r9
    5a14:	mov	r2, r8
    5a18:	bl	5aa0 <gen_portrangeatom6>
    5a1c:	mov	r5, r0
    5a20:	mov	r0, r6
    5a24:	mov	r1, r5
    5a28:	bl	3b3c <sf_gen_or>
    5a2c:	b	5a84 <sf_gen_portrangeop6+0x104>
    5a30:	mov	r0, #0
    5a34:	mov	r1, r9
    5a38:	mov	r2, r8
    5a3c:	bl	5aa0 <gen_portrangeatom6>
    5a40:	mov	r6, r0
    5a44:	mov	r0, #2
    5a48:	mov	r1, r9
    5a4c:	mov	r2, r8
    5a50:	bl	5aa0 <gen_portrangeatom6>
    5a54:	mov	r5, r0
    5a58:	mov	r0, r6
    5a5c:	mov	r1, r5
    5a60:	bl	3a60 <sf_gen_and>
    5a64:	b	5a84 <sf_gen_portrangeop6+0x104>
    5a68:	mov	r0, #0
    5a6c:	b	5a74 <sf_gen_portrangeop6+0xf4>
    5a70:	mov	r0, #2
    5a74:	mov	r1, r9
    5a78:	mov	r2, r8
    5a7c:	bl	5aa0 <gen_portrangeatom6>
    5a80:	mov	r5, r0
    5a84:	mov	r0, r4
    5a88:	mov	r1, r5
    5a8c:	bl	3a60 <sf_gen_and>
    5a90:	mov	r0, r5
    5a94:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    5a98:	bl	fc4 <abort@plt>
    5a9c:	.word	0x0002aaa0

00005aa0 <gen_portrangeatom6>:
    5aa0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    5aa4:	add	fp, sp, #24
    5aa8:	add	r8, r0, #40	; 0x28
    5aac:	ldr	r0, [pc, #168]	; 5b5c <gen_portrangeatom6+0xbc>
    5ab0:	mov	r5, r1
    5ab4:	mov	r1, #8
    5ab8:	mov	r4, r2
    5abc:	ldr	r0, [pc, r0]
    5ac0:	add	r0, r0, r8
    5ac4:	bl	bc70 <gen_load_macplrel>
    5ac8:	mov	r7, r0
    5acc:	mov	r0, #208	; 0xd0
    5ad0:	bl	20bc <newchunk>
    5ad4:	mov	r6, r0
    5ad8:	mov	r0, #53	; 0x35
    5adc:	cmp	r5, r4
    5ae0:	mov	r1, #8
    5ae4:	str	r7, [r6, #4]
    5ae8:	str	r0, [r6, #8]
    5aec:	mov	r0, r5
    5af0:	movgt	r0, r4
    5af4:	str	r0, [r6, #20]
    5af8:	str	r6, [r6, #96]	; 0x60
    5afc:	ldr	r0, [pc, #92]	; 5b60 <gen_portrangeatom6+0xc0>
    5b00:	ldr	r0, [pc, r0]
    5b04:	add	r0, r0, r8
    5b08:	bl	bc70 <gen_load_macplrel>
    5b0c:	mov	r8, r0
    5b10:	mov	r0, #208	; 0xd0
    5b14:	bl	20bc <newchunk>
    5b18:	cmp	r5, r4
    5b1c:	mov	r7, r0
    5b20:	mov	r0, #37	; 0x25
    5b24:	movgt	r4, r5
    5b28:	str	r8, [r7, #4]
    5b2c:	str	r0, [r7, #8]
    5b30:	mov	r1, r7
    5b34:	str	r4, [r7, #20]
    5b38:	ldr	r0, [r7, #44]	; 0x2c
    5b3c:	clz	r0, r0
    5b40:	lsr	r0, r0, #5
    5b44:	str	r0, [r7, #44]	; 0x2c
    5b48:	mov	r0, r6
    5b4c:	str	r7, [r7, #96]	; 0x60
    5b50:	bl	3a60 <sf_gen_and>
    5b54:	mov	r0, r7
    5b58:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    5b5c:	.word	0x0002a984
    5b60:	.word	0x0002a940

00005b64 <sf_gen_scode>:
    5b64:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    5b68:	add	fp, sp, #28
    5b6c:	sub	sp, sp, #44	; 0x2c
    5b70:	uxtb	r9, r1
    5b74:	ubfx	r6, r1, #16, #8
    5b78:	ubfx	r5, r1, #8, #8
    5b7c:	cmp	r9, #7
    5b80:	bhi	613c <sf_gen_scode+0x5d8>
    5b84:	mov	r7, r0
    5b88:	lsr	r0, r1, #8
    5b8c:	add	r1, pc, #4
    5b90:	ldr	r2, [r1, r9, lsl #2]
    5b94:	add	pc, r1, r2
    5b98:	.word	0x00000020
    5b9c:	.word	0x00000020
    5ba0:	.word	0x000000a0
    5ba4:	.word	0x000000f0
    5ba8:	.word	0x000005b0
    5bac:	.word	0x000001e8
    5bb0:	.word	0x00000158
    5bb4:	.word	0x0000017c
    5bb8:	uxtb	r0, r0
    5bbc:	cmp	r0, #12
    5bc0:	beq	5da8 <sf_gen_scode+0x244>
    5bc4:	cmp	r0, #1
    5bc8:	bne	5dcc <sf_gen_scode+0x268>
    5bcc:	ldr	r0, [pc, #1704]	; 627c <sf_gen_scode+0x718>
    5bd0:	ldr	r0, [pc, r0]
    5bd4:	cmp	r0, #118	; 0x76
    5bd8:	ble	5f08 <sf_gen_scode+0x3a4>
    5bdc:	sub	r1, r0, #119	; 0x77
    5be0:	cmp	r1, #8
    5be4:	bhi	6010 <sf_gen_scode+0x4ac>
    5be8:	add	r0, pc, #4
    5bec:	ldr	r1, [r0, r1, lsl #2]
    5bf0:	add	pc, r0, r1
    5bf4:	.word	0x00000514
    5bf8:	.word	0x000005cc
    5bfc:	.word	0x000005cc
    5c00:	.word	0x00000024
    5c04:	.word	0x00000454
    5c08:	.word	0x000005cc
    5c0c:	.word	0x000005cc
    5c10:	.word	0x000005cc
    5c14:	.word	0x00000514
    5c18:	mov	r0, r7
    5c1c:	bl	c1e8 <pcap_ether_hostton>
    5c20:	cmp	r0, #0
    5c24:	beq	624c <sf_gen_scode+0x6e8>
    5c28:	mov	r1, r6
    5c2c:	mov	r4, r0
    5c30:	bl	6f98 <gen_ipfchostop>
    5c34:	b	6124 <sf_gen_scode+0x5c0>
    5c38:	mov	r0, r7
    5c3c:	bl	bda4 <pcap_nametonetaddr>
    5c40:	cmp	r0, #0
    5c44:	beq	6168 <sf_gen_scode+0x604>
    5c48:	movw	r3, #65534	; 0xfffe
    5c4c:	sub	r2, r0, #1
    5c50:	mvn	r1, #0
    5c54:	movt	r3, #255	; 0xff
    5c58:	cmp	r2, r3
    5c5c:	bhi	5c80 <sf_gen_scode+0x11c>
    5c60:	mvn	r2, #0
    5c64:	mvn	r3, #-16777216	; 0xff000000
    5c68:	mvn	r1, #0
    5c6c:	add	r7, r2, r0, lsl #8
    5c70:	lsl	r1, r1, #8
    5c74:	lsl	r0, r0, #8
    5c78:	cmp	r7, r3
    5c7c:	bcc	5c6c <sf_gen_scode+0x108>
    5c80:	str	r9, [sp]
    5c84:	b	5db8 <sf_gen_scode+0x254>
    5c88:	mvn	r1, #4
    5c8c:	uxtb	r4, r0
    5c90:	uxtab	r1, r1, r0
    5c94:	cmp	r1, #3
    5c98:	bcc	5ca4 <sf_gen_scode+0x140>
    5c9c:	cmp	r4, #0
    5ca0:	bne	6178 <sf_gen_scode+0x614>
    5ca4:	add	r1, sp, #24
    5ca8:	add	r2, sp, #20
    5cac:	mov	r0, r7
    5cb0:	bl	bdc0 <pcap_nametoport>
    5cb4:	cmp	r0, #0
    5cb8:	beq	6184 <sf_gen_scode+0x620>
    5cbc:	cmp	r4, #5
    5cc0:	beq	5f54 <sf_gen_scode+0x3f0>
    5cc4:	cmp	r4, #6
    5cc8:	beq	5f38 <sf_gen_scode+0x3d4>
    5ccc:	cmp	r4, #7
    5cd0:	bne	5f90 <sf_gen_scode+0x42c>
    5cd4:	ldr	r0, [sp, #20]
    5cd8:	cmp	r0, #132	; 0x84
    5cdc:	beq	61cc <sf_gen_scode+0x668>
    5ce0:	cmp	r0, #6
    5ce4:	beq	61dc <sf_gen_scode+0x678>
    5ce8:	mov	r1, #17
    5cec:	b	5f6c <sf_gen_scode+0x408>
    5cf0:	mov	r0, r7
    5cf4:	mov	r1, r5
    5cf8:	bl	768c <lookup_proto>
    5cfc:	cmp	r0, #0
    5d00:	str	r0, [sp, #20]
    5d04:	blt	6158 <sf_gen_scode+0x5f4>
    5d08:	mov	r1, r5
    5d0c:	bl	77a8 <gen_protochain>
    5d10:	b	5dc4 <sf_gen_scode+0x260>
    5d14:	mvn	r1, #4
    5d18:	uxtb	r4, r0
    5d1c:	uxtab	r1, r1, r0
    5d20:	cmp	r1, #3
    5d24:	bcc	5d30 <sf_gen_scode+0x1cc>
    5d28:	cmp	r4, #0
    5d2c:	bne	6194 <sf_gen_scode+0x630>
    5d30:	add	r1, sp, #24
    5d34:	add	r2, sp, #16
    5d38:	add	r3, sp, #20
    5d3c:	mov	r0, r7
    5d40:	bl	be68 <pcap_nametoportrange>
    5d44:	cmp	r0, #0
    5d48:	beq	61a0 <sf_gen_scode+0x63c>
    5d4c:	cmp	r4, #5
    5d50:	beq	5fb8 <sf_gen_scode+0x454>
    5d54:	cmp	r4, #6
    5d58:	beq	5f74 <sf_gen_scode+0x410>
    5d5c:	cmp	r4, #7
    5d60:	bne	5fd8 <sf_gen_scode+0x474>
    5d64:	ldr	r0, [sp, #20]
    5d68:	cmp	r0, #132	; 0x84
    5d6c:	beq	61fc <sf_gen_scode+0x698>
    5d70:	cmp	r0, #6
    5d74:	beq	620c <sf_gen_scode+0x6a8>
    5d78:	mov	r2, #17
    5d7c:	b	5fd0 <sf_gen_scode+0x46c>
    5d80:	mov	r0, r7
    5d84:	mov	r1, r5
    5d88:	bl	768c <lookup_proto>
    5d8c:	cmp	r0, #0
    5d90:	str	r0, [sp, #20]
    5d94:	blt	6158 <sf_gen_scode+0x5f4>
    5d98:	mov	r1, r5
    5d9c:	mov	r2, r6
    5da0:	bl	4070 <gen_proto>
    5da4:	b	5dc4 <sf_gen_scode+0x260>
    5da8:	mov	r0, r7
    5dac:	bl	c2dc <__pcap_nametodnaddr>
    5db0:	str	r9, [sp]
    5db4:	mov	r1, #0
    5db8:	mov	r2, r5
    5dbc:	mov	r3, r6
    5dc0:	bl	62ec <gen_host>
    5dc4:	mov	r8, r0
    5dc8:	b	6130 <sf_gen_scode+0x5cc>
    5dcc:	mvn	r0, #0
    5dd0:	mov	r4, r6
    5dd4:	str	r7, [sp, #8]
    5dd8:	str	r0, [sp, #36]	; 0x24
    5ddc:	str	r0, [sp, #32]
    5de0:	str	r0, [sp, #28]
    5de4:	str	r0, [sp, #24]
    5de8:	mov	r0, r7
    5dec:	bl	bd44 <pcap_nametoaddrinfo>
    5df0:	cmp	r0, #0
    5df4:	beq	61b0 <sf_gen_scode+0x64c>
    5df8:	ldr	r1, [pc, #1160]	; 6288 <sf_gen_scode+0x724>
    5dfc:	mov	r6, r5
    5e00:	mov	r8, #0
    5e04:	mov	sl, r0
    5e08:	add	r1, pc, r1
    5e0c:	str	r0, [r1]
    5e10:	ldr	r1, [pc, #1140]	; 628c <sf_gen_scode+0x728>
    5e14:	ldr	r1, [pc, r1]
    5e18:	str	r5, [sp, #4]
    5e1c:	str	r0, [sp, #12]
    5e20:	mvn	r1, r1
    5e24:	orrs	r1, r5, r1
    5e28:	movweq	r6, #2
    5e2c:	movweq	r5, #17
    5e30:	ldr	r0, [sl, #4]
    5e34:	cmp	r0, #10
    5e38:	beq	5e70 <sf_gen_scode+0x30c>
    5e3c:	cmp	r0, #2
    5e40:	bne	5eb0 <sf_gen_scode+0x34c>
    5e44:	cmp	r6, #17
    5e48:	beq	5eb0 <sf_gen_scode+0x34c>
    5e4c:	ldr	r0, [sl, #20]
    5e50:	mvn	r1, #0
    5e54:	mov	r2, r6
    5e58:	mov	r3, r4
    5e5c:	ldr	r0, [r0, #4]
    5e60:	str	r9, [sp]
    5e64:	rev	r0, r0
    5e68:	bl	62ec <gen_host>
    5e6c:	b	5e94 <sf_gen_scode+0x330>
    5e70:	cmp	r5, #2
    5e74:	beq	5eb0 <sf_gen_scode+0x34c>
    5e78:	ldr	r0, [sl, #20]
    5e7c:	add	r1, sp, #24
    5e80:	mov	r2, r5
    5e84:	mov	r3, r4
    5e88:	str	r9, [sp]
    5e8c:	add	r0, r0, #8
    5e90:	bl	7078 <gen_host6>
    5e94:	mov	r7, r0
    5e98:	cmp	r8, #0
    5e9c:	beq	5eac <sf_gen_scode+0x348>
    5ea0:	mov	r0, r8
    5ea4:	mov	r1, r7
    5ea8:	bl	3b3c <sf_gen_or>
    5eac:	mov	r8, r7
    5eb0:	ldr	sl, [sl, #28]
    5eb4:	cmp	sl, #0
    5eb8:	bne	5e30 <sf_gen_scode+0x2cc>
    5ebc:	ldr	r1, [pc, #972]	; 6290 <sf_gen_scode+0x72c>
    5ec0:	mov	r0, #0
    5ec4:	add	r1, pc, r1
    5ec8:	str	r0, [r1]
    5ecc:	ldr	r0, [sp, #12]
    5ed0:	bl	f94 <freeaddrinfo@plt>
    5ed4:	cmp	r8, #0
    5ed8:	bne	6130 <sf_gen_scode+0x5cc>
    5edc:	ldr	r0, [pc, #944]	; 6294 <sf_gen_scode+0x730>
    5ee0:	ldr	r2, [pc, #944]	; 6298 <sf_gen_scode+0x734>
    5ee4:	ldr	r1, [sp, #4]
    5ee8:	add	r0, pc, r0
    5eec:	add	r2, pc, r2
    5ef0:	cmp	r1, #0
    5ef4:	moveq	r2, r0
    5ef8:	ldr	r0, [pc, #924]	; 629c <sf_gen_scode+0x738>
    5efc:	ldr	r1, [sp, #8]
    5f00:	add	r0, pc, r0
    5f04:	bl	2028 <sf_bpf_error>
    5f08:	cmp	r0, #9
    5f0c:	bgt	6020 <sf_gen_scode+0x4bc>
    5f10:	cmp	r0, #1
    5f14:	bne	60d8 <sf_gen_scode+0x574>
    5f18:	mov	r0, r7
    5f1c:	bl	c1e8 <pcap_ether_hostton>
    5f20:	cmp	r0, #0
    5f24:	beq	623c <sf_gen_scode+0x6d8>
    5f28:	mov	r1, r6
    5f2c:	mov	r4, r0
    5f30:	bl	6694 <gen_ehostop>
    5f34:	b	6124 <sf_gen_scode+0x5c0>
    5f38:	ldr	r0, [sp, #20]
    5f3c:	cmp	r0, #132	; 0x84
    5f40:	beq	61cc <sf_gen_scode+0x668>
    5f44:	cmp	r0, #17
    5f48:	beq	61ec <sf_gen_scode+0x688>
    5f4c:	mov	r1, #6
    5f50:	b	5f6c <sf_gen_scode+0x408>
    5f54:	ldr	r0, [sp, #20]
    5f58:	cmp	r0, #6
    5f5c:	beq	61dc <sf_gen_scode+0x678>
    5f60:	cmp	r0, #17
    5f64:	beq	61ec <sf_gen_scode+0x688>
    5f68:	mov	r1, #132	; 0x84
    5f6c:	str	r1, [sp, #20]
    5f70:	b	5f94 <sf_gen_scode+0x430>
    5f74:	ldr	r0, [sp, #20]
    5f78:	cmp	r0, #132	; 0x84
    5f7c:	beq	61fc <sf_gen_scode+0x698>
    5f80:	cmp	r0, #17
    5f84:	beq	621c <sf_gen_scode+0x6b8>
    5f88:	mov	r2, #6
    5f8c:	b	5fd0 <sf_gen_scode+0x46c>
    5f90:	ldr	r1, [sp, #20]
    5f94:	ldr	r0, [sp, #24]
    5f98:	mov	r2, r6
    5f9c:	bl	7364 <gen_port>
    5fa0:	mov	r8, r0
    5fa4:	ldr	r0, [sp, #24]
    5fa8:	ldr	r1, [sp, #20]
    5fac:	mov	r2, r6
    5fb0:	bl	7424 <gen_port6>
    5fb4:	b	6004 <sf_gen_scode+0x4a0>
    5fb8:	ldr	r0, [sp, #20]
    5fbc:	cmp	r0, #6
    5fc0:	beq	620c <sf_gen_scode+0x6a8>
    5fc4:	cmp	r0, #17
    5fc8:	beq	621c <sf_gen_scode+0x6b8>
    5fcc:	mov	r2, #132	; 0x84
    5fd0:	str	r2, [sp, #20]
    5fd4:	b	5fdc <sf_gen_scode+0x478>
    5fd8:	ldr	r2, [sp, #20]
    5fdc:	ldr	r1, [sp, #16]
    5fe0:	ldr	r0, [sp, #24]
    5fe4:	mov	r3, r6
    5fe8:	bl	74e4 <gen_portrange>
    5fec:	mov	r8, r0
    5ff0:	ldr	r0, [sp, #24]
    5ff4:	ldr	r1, [sp, #16]
    5ff8:	ldr	r2, [sp, #20]
    5ffc:	mov	r3, r6
    6000:	bl	75b8 <gen_portrange6>
    6004:	mov	r1, r8
    6008:	bl	3b3c <sf_gen_or>
    600c:	b	6130 <sf_gen_scode+0x5cc>
    6010:	cmp	r0, #163	; 0xa3
    6014:	cmpne	r0, #192	; 0xc0
    6018:	beq	6108 <sf_gen_scode+0x5a4>
    601c:	b	61c0 <sf_gen_scode+0x65c>
    6020:	cmp	r0, #10
    6024:	bne	6100 <sf_gen_scode+0x59c>
    6028:	mov	r0, r7
    602c:	bl	c1e8 <pcap_ether_hostton>
    6030:	cmp	r0, #0
    6034:	beq	625c <sf_gen_scode+0x6f8>
    6038:	mov	r1, r6
    603c:	mov	r4, r0
    6040:	bl	67ac <gen_fhostop>
    6044:	b	6124 <sf_gen_scode+0x5c0>
    6048:	ldr	r0, [pc, #564]	; 6284 <sf_gen_scode+0x720>
    604c:	add	r0, pc, r0
    6050:	ldrb	r0, [r0]
    6054:	cmp	r0, #1
    6058:	bne	61c0 <sf_gen_scode+0x65c>
    605c:	mov	r0, #1
    6060:	mov	r1, #4
    6064:	mov	r2, #8
    6068:	bl	9a88 <gen_load_a>
    606c:	mov	r5, r0
    6070:	mov	r0, #208	; 0xd0
    6074:	bl	20bc <newchunk>
    6078:	mov	r4, r0
    607c:	mov	r0, #21
    6080:	str	r5, [r4, #4]
    6084:	str	r0, [r4, #8]
    6088:	mov	r0, #65280	; 0xff00
    608c:	str	r0, [r4, #20]
    6090:	ldr	r0, [r4, #44]	; 0x2c
    6094:	clz	r0, r0
    6098:	lsr	r0, r0, #5
    609c:	str	r0, [r4, #44]	; 0x2c
    60a0:	mov	r0, r7
    60a4:	str	r4, [r4, #96]	; 0x60
    60a8:	bl	c1e8 <pcap_ether_hostton>
    60ac:	cmp	r0, #0
    60b0:	beq	623c <sf_gen_scode+0x6d8>
    60b4:	mov	r1, r6
    60b8:	mov	r5, r0
    60bc:	bl	6694 <gen_ehostop>
    60c0:	mov	r8, r0
    60c4:	mov	r0, r4
    60c8:	mov	r1, r8
    60cc:	bl	3a60 <sf_gen_and>
    60d0:	mov	r0, r5
    60d4:	b	612c <sf_gen_scode+0x5c8>
    60d8:	cmp	r0, #6
    60dc:	bne	61c0 <sf_gen_scode+0x65c>
    60e0:	mov	r0, r7
    60e4:	bl	c1e8 <pcap_ether_hostton>
    60e8:	cmp	r0, #0
    60ec:	beq	626c <sf_gen_scode+0x708>
    60f0:	mov	r1, r6
    60f4:	mov	r4, r0
    60f8:	bl	688c <gen_thostop>
    60fc:	b	6124 <sf_gen_scode+0x5c0>
    6100:	cmp	r0, #105	; 0x69
    6104:	bne	61c0 <sf_gen_scode+0x65c>
    6108:	mov	r0, r7
    610c:	bl	c1e8 <pcap_ether_hostton>
    6110:	cmp	r0, #0
    6114:	beq	622c <sf_gen_scode+0x6c8>
    6118:	mov	r1, r6
    611c:	mov	r4, r0
    6120:	bl	696c <gen_wlanhostop>
    6124:	mov	r8, r0
    6128:	mov	r0, r4
    612c:	bl	e5c <free@plt>
    6130:	mov	r0, r8
    6134:	sub	sp, fp, #28
    6138:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    613c:	cmp	r9, #255	; 0xff
    6140:	bne	6154 <sf_gen_scode+0x5f0>
    6144:	bl	2eb0 <syntax>
    6148:	ldr	r0, [pc, #352]	; 62b0 <sf_gen_scode+0x74c>
    614c:	add	r0, pc, r0
    6150:	bl	2028 <sf_bpf_error>
    6154:	bl	fc4 <abort@plt>
    6158:	ldr	r0, [pc, #340]	; 62b4 <sf_gen_scode+0x750>
    615c:	mov	r1, r7
    6160:	add	r0, pc, r0
    6164:	bl	2028 <sf_bpf_error>
    6168:	ldr	r0, [pc, #328]	; 62b8 <sf_gen_scode+0x754>
    616c:	mov	r1, r7
    6170:	add	r0, pc, r0
    6174:	bl	2028 <sf_bpf_error>
    6178:	ldr	r0, [pc, #340]	; 62d4 <sf_gen_scode+0x770>
    617c:	add	r0, pc, r0
    6180:	bl	2028 <sf_bpf_error>
    6184:	ldr	r0, [pc, #332]	; 62d8 <sf_gen_scode+0x774>
    6188:	mov	r1, r7
    618c:	add	r0, pc, r0
    6190:	bl	2028 <sf_bpf_error>
    6194:	ldr	r0, [pc, #320]	; 62dc <sf_gen_scode+0x778>
    6198:	add	r0, pc, r0
    619c:	bl	2028 <sf_bpf_error>
    61a0:	ldr	r0, [pc, #312]	; 62e0 <sf_gen_scode+0x77c>
    61a4:	mov	r1, r7
    61a8:	add	r0, pc, r0
    61ac:	bl	2028 <sf_bpf_error>
    61b0:	ldr	r0, [pc, #280]	; 62d0 <sf_gen_scode+0x76c>
    61b4:	ldr	r1, [sp, #8]
    61b8:	add	r0, pc, r0
    61bc:	bl	2028 <sf_bpf_error>
    61c0:	ldr	r0, [pc, #184]	; 6280 <sf_gen_scode+0x71c>
    61c4:	add	r0, pc, r0
    61c8:	bl	2028 <sf_bpf_error>
    61cc:	ldr	r0, [pc, #208]	; 62a4 <sf_gen_scode+0x740>
    61d0:	mov	r1, r7
    61d4:	add	r0, pc, r0
    61d8:	bl	2028 <sf_bpf_error>
    61dc:	ldr	r0, [pc, #256]	; 62e4 <sf_gen_scode+0x780>
    61e0:	mov	r1, r7
    61e4:	add	r0, pc, r0
    61e8:	bl	2028 <sf_bpf_error>
    61ec:	ldr	r0, [pc, #172]	; 62a0 <sf_gen_scode+0x73c>
    61f0:	mov	r1, r7
    61f4:	add	r0, pc, r0
    61f8:	bl	2028 <sf_bpf_error>
    61fc:	ldr	r0, [pc, #168]	; 62ac <sf_gen_scode+0x748>
    6200:	mov	r1, r7
    6204:	add	r0, pc, r0
    6208:	bl	2028 <sf_bpf_error>
    620c:	ldr	r0, [pc, #212]	; 62e8 <sf_gen_scode+0x784>
    6210:	mov	r1, r7
    6214:	add	r0, pc, r0
    6218:	bl	2028 <sf_bpf_error>
    621c:	ldr	r0, [pc, #132]	; 62a8 <sf_gen_scode+0x744>
    6220:	mov	r1, r7
    6224:	add	r0, pc, r0
    6228:	bl	2028 <sf_bpf_error>
    622c:	ldr	r0, [pc, #148]	; 62c8 <sf_gen_scode+0x764>
    6230:	mov	r1, r7
    6234:	add	r0, pc, r0
    6238:	bl	2028 <sf_bpf_error>
    623c:	ldr	r0, [pc, #120]	; 62bc <sf_gen_scode+0x758>
    6240:	mov	r1, r7
    6244:	add	r0, pc, r0
    6248:	bl	2028 <sf_bpf_error>
    624c:	ldr	r0, [pc, #120]	; 62cc <sf_gen_scode+0x768>
    6250:	mov	r1, r7
    6254:	add	r0, pc, r0
    6258:	bl	2028 <sf_bpf_error>
    625c:	ldr	r0, [pc, #92]	; 62c0 <sf_gen_scode+0x75c>
    6260:	mov	r1, r7
    6264:	add	r0, pc, r0
    6268:	bl	2028 <sf_bpf_error>
    626c:	ldr	r0, [pc, #80]	; 62c4 <sf_gen_scode+0x760>
    6270:	mov	r1, r7
    6274:	add	r0, pc, r0
    6278:	bl	2028 <sf_bpf_error>
    627c:	.word	0x0002a860
    6280:	.word	0x0000c7ce
    6284:	.word	0x0002a3e8
    6288:	.word	0x0002a61c
    628c:	.word	0x0002a624
    6290:	.word	0x0002a560
    6294:	.word	0x0000c910
    6298:	.word	0x0000cb26
    629c:	.word	0x0000cafe
    62a0:	.word	0x0000c88d
    62a4:	.word	0x0000c89b
    62a8:	.word	0x0000c8df
    62ac:	.word	0x0000c8e4
    62b0:	.word	0x0000c9d1
    62b4:	.word	0x0000c9eb
    62b8:	.word	0x0000c788
    62bc:	.word	0x0000c6c9
    62c0:	.word	0x0000c6c1
    62c4:	.word	0x0000c6c8
    62c8:	.word	0x0000c725
    62cc:	.word	0x0000c71e
    62d0:	.word	0x0000c834
    62d4:	.word	0x0000c8b4
    62d8:	.word	0x0000c8c0
    62dc:	.word	0x0000c8fa
    62e0:	.word	0x0000c90b
    62e4:	.word	0x0000c87a
    62e8:	.word	0x0000c8ba

000062ec <gen_host>:
    62ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    62f0:	add	fp, sp, #28
    62f4:	sub	sp, sp, #12
    62f8:	mov	r6, r0
    62fc:	ldr	r0, [fp, #8]
    6300:	mov	r4, r3
    6304:	ldr	r3, [pc, #788]	; 6620 <gen_host+0x334>
    6308:	mov	r5, r1
    630c:	ldr	r1, [pc, #784]	; 6624 <gen_host+0x338>
    6310:	add	r3, pc, r3
    6314:	add	r1, pc, r1
    6318:	cmp	r0, #2
    631c:	moveq	r1, r3
    6320:	cmp	r2, #40	; 0x28
    6324:	bhi	64e4 <gen_host+0x1f8>
    6328:	add	r0, pc, #4
    632c:	ldr	r2, [r0, r2, lsl #2]
    6330:	add	pc, r0, r2
    6334:	.word	0x000000a4
    6338:	.word	0x000001b0
    633c:	.word	0x0000015c
    6340:	.word	0x00000170
    6344:	.word	0x00000148
    6348:	.word	0x00000298
    634c:	.word	0x000002a4
    6350:	.word	0x000002b0
    6354:	.word	0x000002bc
    6358:	.word	0x000002c8
    635c:	.word	0x000002d4
    6360:	.word	0x000002e0
    6364:	.word	0x0000019c
    6368:	.word	0x000001b4
    636c:	.word	0x000001c0
    6370:	.word	0x000001cc
    6374:	.word	0x000001d8
    6378:	.word	0x000001e4
    637c:	.word	0x000001f0
    6380:	.word	0x000001fc
    6384:	.word	0x00000208
    6388:	.word	0x00000214
    638c:	.word	0x00000220
    6390:	.word	0x0000022c
    6394:	.word	0x00000238
    6398:	.word	0x00000244
    639c:	.word	0x00000250
    63a0:	.word	0x0000025c
    63a4:	.word	0x00000268
    63a8:	.word	0x00000274
    63ac:	.word	0x00000280
    63b0:	.word	0x000001b0
    63b4:	.word	0x000001b0
    63b8:	.word	0x000001b0
    63bc:	.word	0x000001b0
    63c0:	.word	0x000001b0
    63c4:	.word	0x000001b0
    63c8:	.word	0x000001b0
    63cc:	.word	0x000001b0
    63d0:	.word	0x000001b0
    63d4:	.word	0x0000028c
    63d8:	mov	r0, #16
    63dc:	mov	r1, #12
    63e0:	mov	r2, r4
    63e4:	mov	r3, #2048	; 0x800
    63e8:	str	r1, [sp]
    63ec:	str	r0, [sp, #4]
    63f0:	mov	r0, r6
    63f4:	mov	r1, r5
    63f8:	bl	b680 <gen_hostop>
    63fc:	mov	r7, r0
    6400:	ldr	r0, [pc, #544]	; 6628 <gen_host+0x33c>
    6404:	ldr	r0, [pc, r0]
    6408:	cmp	r0, #0
    640c:	bne	6470 <gen_host+0x184>
    6410:	mov	r9, #24
    6414:	mov	sl, #14
    6418:	mov	r0, r6
    641c:	mov	r1, r5
    6420:	mov	r2, r4
    6424:	movw	r3, #2054	; 0x806
    6428:	str	sl, [sp]
    642c:	str	r9, [sp, #4]
    6430:	bl	b680 <gen_hostop>
    6434:	mov	r8, r0
    6438:	mov	r0, r7
    643c:	mov	r1, r8
    6440:	bl	3b3c <sf_gen_or>
    6444:	mov	r0, r6
    6448:	mov	r1, r5
    644c:	mov	r2, r4
    6450:	movw	r3, #32821	; 0x8035
    6454:	str	sl, [sp]
    6458:	str	r9, [sp, #4]
    645c:	bl	b680 <gen_hostop>
    6460:	mov	r7, r0
    6464:	mov	r0, r8
    6468:	mov	r1, r7
    646c:	bl	3b3c <sf_gen_or>
    6470:	mov	r0, r7
    6474:	sub	sp, fp, #28
    6478:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    647c:	mov	r0, #24
    6480:	mov	r1, #14
    6484:	mov	r2, r4
    6488:	movw	r3, #32821	; 0x8035
    648c:	b	64b4 <gen_host+0x1c8>
    6490:	mov	r0, #16
    6494:	mov	r1, #12
    6498:	mov	r2, r4
    649c:	mov	r3, #2048	; 0x800
    64a0:	b	64b4 <gen_host+0x1c8>
    64a4:	mov	r0, #24
    64a8:	mov	r1, #14
    64ac:	mov	r2, r4
    64b0:	movw	r3, #2054	; 0x806
    64b4:	str	r1, [sp]
    64b8:	str	r0, [sp, #4]
    64bc:	mov	r0, r6
    64c0:	mov	r1, r5
    64c4:	bl	b680 <gen_hostop>
    64c8:	sub	sp, fp, #28
    64cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    64d0:	mov	r0, r6
    64d4:	mov	r1, r4
    64d8:	sub	sp, fp, #28
    64dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    64e0:	b	b7a4 <gen_dnhostop>
    64e4:	bl	fc4 <abort@plt>
    64e8:	ldr	r0, [pc, #360]	; 6658 <gen_host+0x36c>
    64ec:	add	r0, pc, r0
    64f0:	bl	2028 <sf_bpf_error>
    64f4:	ldr	r0, [pc, #344]	; 6654 <gen_host+0x368>
    64f8:	add	r0, pc, r0
    64fc:	bl	2028 <sf_bpf_error>
    6500:	ldr	r0, [pc, #344]	; 6660 <gen_host+0x374>
    6504:	add	r0, pc, r0
    6508:	bl	2028 <sf_bpf_error>
    650c:	ldr	r0, [pc, #328]	; 665c <gen_host+0x370>
    6510:	add	r0, pc, r0
    6514:	bl	2028 <sf_bpf_error>
    6518:	ldr	r0, [pc, #324]	; 6664 <gen_host+0x378>
    651c:	add	r0, pc, r0
    6520:	bl	2028 <sf_bpf_error>
    6524:	ldr	r0, [pc, #316]	; 6668 <gen_host+0x37c>
    6528:	add	r0, pc, r0
    652c:	bl	2028 <sf_bpf_error>
    6530:	ldr	r0, [pc, #308]	; 666c <gen_host+0x380>
    6534:	add	r0, pc, r0
    6538:	bl	2028 <sf_bpf_error>
    653c:	ldr	r0, [pc, #300]	; 6670 <gen_host+0x384>
    6540:	add	r0, pc, r0
    6544:	bl	2028 <sf_bpf_error>
    6548:	ldr	r0, [pc, #244]	; 6644 <gen_host+0x358>
    654c:	add	r0, pc, r0
    6550:	bl	2028 <sf_bpf_error>
    6554:	ldr	r0, [pc, #236]	; 6648 <gen_host+0x35c>
    6558:	add	r0, pc, r0
    655c:	bl	2028 <sf_bpf_error>
    6560:	ldr	r0, [pc, #232]	; 6650 <gen_host+0x364>
    6564:	add	r0, pc, r0
    6568:	bl	2028 <sf_bpf_error>
    656c:	ldr	r0, [pc, #256]	; 6674 <gen_host+0x388>
    6570:	add	r0, pc, r0
    6574:	bl	2028 <sf_bpf_error>
    6578:	ldr	r0, [pc, #248]	; 6678 <gen_host+0x38c>
    657c:	add	r0, pc, r0
    6580:	bl	2028 <sf_bpf_error>
    6584:	ldr	r0, [pc, #240]	; 667c <gen_host+0x390>
    6588:	add	r0, pc, r0
    658c:	bl	2028 <sf_bpf_error>
    6590:	ldr	r0, [pc, #232]	; 6680 <gen_host+0x394>
    6594:	add	r0, pc, r0
    6598:	bl	2028 <sf_bpf_error>
    659c:	ldr	r0, [pc, #224]	; 6684 <gen_host+0x398>
    65a0:	add	r0, pc, r0
    65a4:	bl	2028 <sf_bpf_error>
    65a8:	ldr	r0, [pc, #216]	; 6688 <gen_host+0x39c>
    65ac:	add	r0, pc, r0
    65b0:	bl	2028 <sf_bpf_error>
    65b4:	ldr	r0, [pc, #208]	; 668c <gen_host+0x3a0>
    65b8:	add	r0, pc, r0
    65bc:	bl	2028 <sf_bpf_error>
    65c0:	ldr	r0, [pc, #200]	; 6690 <gen_host+0x3a4>
    65c4:	add	r0, pc, r0
    65c8:	bl	2028 <sf_bpf_error>
    65cc:	ldr	r0, [pc, #92]	; 6630 <gen_host+0x344>
    65d0:	add	r0, pc, r0
    65d4:	bl	2028 <sf_bpf_error>
    65d8:	ldr	r0, [pc, #76]	; 662c <gen_host+0x340>
    65dc:	add	r0, pc, r0
    65e0:	bl	2028 <sf_bpf_error>
    65e4:	ldr	r0, [pc, #72]	; 6634 <gen_host+0x348>
    65e8:	add	r0, pc, r0
    65ec:	bl	2028 <sf_bpf_error>
    65f0:	ldr	r0, [pc, #64]	; 6638 <gen_host+0x34c>
    65f4:	add	r0, pc, r0
    65f8:	bl	2028 <sf_bpf_error>
    65fc:	ldr	r0, [pc, #56]	; 663c <gen_host+0x350>
    6600:	add	r0, pc, r0
    6604:	bl	2028 <sf_bpf_error>
    6608:	ldr	r0, [pc, #48]	; 6640 <gen_host+0x354>
    660c:	add	r0, pc, r0
    6610:	bl	2028 <sf_bpf_error>
    6614:	ldr	r0, [pc, #48]	; 664c <gen_host+0x360>
    6618:	add	r0, pc, r0
    661c:	bl	2028 <sf_bpf_error>
    6620:	.word	0x0000ccc8
    6624:	.word	0x0000d83a
    6628:	.word	0x00029cd0
    662c:	.word	0x0000d38f
    6630:	.word	0x0000d3b8
    6634:	.word	0x0000d3be
    6638:	.word	0x0000d3cf
    663c:	.word	0x0000d3e1
    6640:	.word	0x0000d3f3
    6644:	.word	0x0000d4d1
    6648:	.word	0x0000d4e2
    664c:	.word	0x0000d440
    6650:	.word	0x0000d519
    6654:	.word	0x0000d5a9
    6658:	.word	0x0000d5d8
    665c:	.word	0x0000d5d7
    6660:	.word	0x0000d608
    6664:	.word	0x0000d615
    6668:	.word	0x0000d62b
    666c:	.word	0x0000d63e
    6670:	.word	0x0000d64e
    6674:	.word	0x0000d63b
    6678:	.word	0x0000d652
    667c:	.word	0x0000d664
    6680:	.word	0x0000d676
    6684:	.word	0x0000d688
    6688:	.word	0x0000d699
    668c:	.word	0x0000d6b0
    6690:	.word	0x0000d6c5

00006694 <gen_ehostop>:
    6694:	push	{r4, r5, fp, lr}
    6698:	add	fp, sp, #8
    669c:	cmp	r1, #4
    66a0:	bhi	6790 <gen_ehostop+0xfc>
    66a4:	mov	r4, r0
    66a8:	add	r0, pc, #4
    66ac:	ldr	r1, [r0, r1, lsl #2]
    66b0:	add	pc, r0, r1
    66b4:	.word	0x00000014
    66b8:	.word	0x000000b0
    66bc:	.word	0x000000c0
    66c0:	.word	0x00000014
    66c4:	.word	0x00000060
    66c8:	ldr	r0, [pc, #204]	; 679c <gen_ehostop+0x108>
    66cc:	mov	r2, #6
    66d0:	mov	r3, r4
    66d4:	ldr	r0, [pc, r0]
    66d8:	add	r1, r0, #6
    66dc:	mov	r0, #1
    66e0:	bl	b4e0 <gen_bcmp>
    66e4:	ldr	r1, [pc, #180]	; 67a0 <gen_ehostop+0x10c>
    66e8:	mov	r5, r0
    66ec:	mov	r0, #1
    66f0:	mov	r2, #6
    66f4:	mov	r3, r4
    66f8:	ldr	r1, [pc, r1]
    66fc:	bl	b4e0 <gen_bcmp>
    6700:	mov	r4, r0
    6704:	mov	r0, r5
    6708:	mov	r1, r4
    670c:	bl	3b3c <sf_gen_or>
    6710:	b	675c <gen_ehostop+0xc8>
    6714:	ldr	r0, [pc, #136]	; 67a4 <gen_ehostop+0x110>
    6718:	mov	r2, #6
    671c:	mov	r3, r4
    6720:	ldr	r0, [pc, r0]
    6724:	add	r1, r0, #6
    6728:	mov	r0, #1
    672c:	bl	b4e0 <gen_bcmp>
    6730:	ldr	r1, [pc, #112]	; 67a8 <gen_ehostop+0x114>
    6734:	mov	r5, r0
    6738:	mov	r0, #1
    673c:	mov	r2, #6
    6740:	mov	r3, r4
    6744:	ldr	r1, [pc, r1]
    6748:	bl	b4e0 <gen_bcmp>
    674c:	mov	r4, r0
    6750:	mov	r0, r5
    6754:	mov	r1, r4
    6758:	bl	3a60 <sf_gen_and>
    675c:	mov	r0, r4
    6760:	pop	{r4, r5, fp, pc}
    6764:	ldr	r0, [pc, #40]	; 6794 <gen_ehostop+0x100>
    6768:	ldr	r0, [pc, r0]
    676c:	add	r1, r0, #6
    6770:	b	677c <gen_ehostop+0xe8>
    6774:	ldr	r1, [pc, #28]	; 6798 <gen_ehostop+0x104>
    6778:	ldr	r1, [pc, r1]
    677c:	mov	r0, #1
    6780:	mov	r2, #6
    6784:	mov	r3, r4
    6788:	pop	{r4, r5, fp, lr}
    678c:	b	b4e0 <gen_bcmp>
    6790:	bl	fc4 <abort@plt>
    6794:	.word	0x00029ce0
    6798:	.word	0x00029cd0
    679c:	.word	0x00029d74
    67a0:	.word	0x00029d50
    67a4:	.word	0x00029d28
    67a8:	.word	0x00029d04

000067ac <gen_fhostop>:
    67ac:	push	{r4, r5, fp, lr}
    67b0:	add	fp, sp, #8
    67b4:	cmp	r1, #4
    67b8:	bhi	6888 <gen_fhostop+0xdc>
    67bc:	mov	r4, r0
    67c0:	add	r0, pc, #4
    67c4:	ldr	r1, [r0, r1, lsl #2]
    67c8:	add	pc, r0, r1
    67cc:	.word	0x00000014
    67d0:	.word	0x00000098
    67d4:	.word	0x000000a4
    67d8:	.word	0x00000014
    67dc:	.word	0x00000054
    67e0:	mov	r0, #1
    67e4:	mov	r1, #7
    67e8:	mov	r2, #6
    67ec:	mov	r3, r4
    67f0:	bl	b4e0 <gen_bcmp>
    67f4:	mov	r5, r0
    67f8:	mov	r0, #1
    67fc:	mov	r1, #1
    6800:	mov	r2, #6
    6804:	mov	r3, r4
    6808:	bl	b4e0 <gen_bcmp>
    680c:	mov	r4, r0
    6810:	mov	r0, r5
    6814:	mov	r1, r4
    6818:	bl	3b3c <sf_gen_or>
    681c:	b	685c <gen_fhostop+0xb0>
    6820:	mov	r0, #1
    6824:	mov	r1, #7
    6828:	mov	r2, #6
    682c:	mov	r3, r4
    6830:	bl	b4e0 <gen_bcmp>
    6834:	mov	r5, r0
    6838:	mov	r0, #1
    683c:	mov	r1, #1
    6840:	mov	r2, #6
    6844:	mov	r3, r4
    6848:	bl	b4e0 <gen_bcmp>
    684c:	mov	r4, r0
    6850:	mov	r0, r5
    6854:	mov	r1, r4
    6858:	bl	3a60 <sf_gen_and>
    685c:	mov	r0, r4
    6860:	pop	{r4, r5, fp, pc}
    6864:	mov	r0, #1
    6868:	mov	r1, #7
    686c:	b	6878 <gen_fhostop+0xcc>
    6870:	mov	r0, #1
    6874:	mov	r1, #1
    6878:	mov	r2, #6
    687c:	mov	r3, r4
    6880:	pop	{r4, r5, fp, lr}
    6884:	b	b4e0 <gen_bcmp>
    6888:	bl	fc4 <abort@plt>

0000688c <gen_thostop>:
    688c:	push	{r4, r5, fp, lr}
    6890:	add	fp, sp, #8
    6894:	cmp	r1, #4
    6898:	bhi	6968 <gen_thostop+0xdc>
    689c:	mov	r4, r0
    68a0:	add	r0, pc, #4
    68a4:	ldr	r1, [r0, r1, lsl #2]
    68a8:	add	pc, r0, r1
    68ac:	.word	0x00000014
    68b0:	.word	0x00000098
    68b4:	.word	0x000000a4
    68b8:	.word	0x00000014
    68bc:	.word	0x00000054
    68c0:	mov	r0, #1
    68c4:	mov	r1, #8
    68c8:	mov	r2, #6
    68cc:	mov	r3, r4
    68d0:	bl	b4e0 <gen_bcmp>
    68d4:	mov	r5, r0
    68d8:	mov	r0, #1
    68dc:	mov	r1, #2
    68e0:	mov	r2, #6
    68e4:	mov	r3, r4
    68e8:	bl	b4e0 <gen_bcmp>
    68ec:	mov	r4, r0
    68f0:	mov	r0, r5
    68f4:	mov	r1, r4
    68f8:	bl	3b3c <sf_gen_or>
    68fc:	b	693c <gen_thostop+0xb0>
    6900:	mov	r0, #1
    6904:	mov	r1, #8
    6908:	mov	r2, #6
    690c:	mov	r3, r4
    6910:	bl	b4e0 <gen_bcmp>
    6914:	mov	r5, r0
    6918:	mov	r0, #1
    691c:	mov	r1, #2
    6920:	mov	r2, #6
    6924:	mov	r3, r4
    6928:	bl	b4e0 <gen_bcmp>
    692c:	mov	r4, r0
    6930:	mov	r0, r5
    6934:	mov	r1, r4
    6938:	bl	3a60 <sf_gen_and>
    693c:	mov	r0, r4
    6940:	pop	{r4, r5, fp, pc}
    6944:	mov	r0, #1
    6948:	mov	r1, #8
    694c:	b	6958 <gen_thostop+0xcc>
    6950:	mov	r0, #1
    6954:	mov	r1, #2
    6958:	mov	r2, #6
    695c:	mov	r3, r4
    6960:	pop	{r4, r5, fp, lr}
    6964:	b	b4e0 <gen_bcmp>
    6968:	bl	fc4 <abort@plt>

0000696c <gen_wlanhostop>:
    696c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    6970:	add	fp, sp, #28
    6974:	sub	sp, sp, #12
    6978:	cmp	r1, #8
    697c:	bhi	6f94 <gen_wlanhostop+0x628>
    6980:	mov	r4, r0
    6984:	add	r0, pc, #4
    6988:	ldr	r1, [r0, r1, lsl #2]
    698c:	add	pc, r0, r1
    6990:	.word	0x00000024
    6994:	.word	0x0000008c
    6998:	.word	0x000002b8
    699c:	.word	0x00000024
    69a0:	.word	0x00000054
    69a4:	.word	0x000004ac
    69a8:	.word	0x000004c8
    69ac:	.word	0x00000460
    69b0:	.word	0x000005a4
    69b4:	mov	r0, r4
    69b8:	mov	r1, #1
    69bc:	bl	696c <gen_wlanhostop>
    69c0:	mov	r5, r0
    69c4:	mov	r0, r4
    69c8:	mov	r1, #2
    69cc:	bl	696c <gen_wlanhostop>
    69d0:	mov	r4, r0
    69d4:	mov	r0, r5
    69d8:	mov	r1, r4
    69dc:	bl	3b3c <sf_gen_or>
    69e0:	b	6a10 <gen_wlanhostop+0xa4>
    69e4:	mov	r0, r4
    69e8:	mov	r1, #1
    69ec:	bl	696c <gen_wlanhostop>
    69f0:	mov	r5, r0
    69f4:	mov	r0, r4
    69f8:	mov	r1, #2
    69fc:	bl	696c <gen_wlanhostop>
    6a00:	mov	r4, r0
    6a04:	mov	r0, r5
    6a08:	mov	r1, r4
    6a0c:	bl	3a60 <sf_gen_and>
    6a10:	mov	r0, r4
    6a14:	sub	sp, fp, #28
    6a18:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    6a1c:	mov	r0, #1
    6a20:	mov	r1, #1
    6a24:	mov	r2, #16
    6a28:	mov	r9, #1
    6a2c:	bl	9a88 <gen_load_a>
    6a30:	mov	r5, r0
    6a34:	mov	r0, #208	; 0xd0
    6a38:	bl	20bc <newchunk>
    6a3c:	mov	r8, #69	; 0x45
    6a40:	str	r9, [r0, #20]
    6a44:	mov	r6, r0
    6a48:	mov	r1, #24
    6a4c:	mov	r2, #6
    6a50:	mov	r3, r4
    6a54:	stmib	r0, {r5, r8}
    6a58:	str	r0, [r0, #96]	; 0x60
    6a5c:	mov	r0, #1
    6a60:	bl	b4e0 <gen_bcmp>
    6a64:	mov	r5, r0
    6a68:	mov	r0, r6
    6a6c:	mov	r1, r5
    6a70:	bl	3a60 <sf_gen_and>
    6a74:	mov	r0, #1
    6a78:	mov	r1, #1
    6a7c:	mov	r2, #16
    6a80:	bl	9a88 <gen_load_a>
    6a84:	mov	r6, r0
    6a88:	mov	r0, #208	; 0xd0
    6a8c:	bl	20bc <newchunk>
    6a90:	mov	r7, r0
    6a94:	ldr	r0, [r0, #44]	; 0x2c
    6a98:	mov	r1, #16
    6a9c:	mov	r2, #6
    6aa0:	mov	r3, r4
    6aa4:	clz	r0, r0
    6aa8:	lsr	r0, r0, #5
    6aac:	str	r0, [r7, #44]	; 0x2c
    6ab0:	mov	r0, #1
    6ab4:	stmib	r7, {r6, r8}
    6ab8:	str	r9, [r7, #20]
    6abc:	str	r7, [r7, #96]	; 0x60
    6ac0:	bl	b4e0 <gen_bcmp>
    6ac4:	mov	r6, r0
    6ac8:	mov	r0, r7
    6acc:	mov	r1, r6
    6ad0:	bl	3a60 <sf_gen_and>
    6ad4:	mov	r0, r6
    6ad8:	mov	r1, r5
    6adc:	bl	3b3c <sf_gen_or>
    6ae0:	mov	r0, #1
    6ae4:	mov	r1, #1
    6ae8:	mov	r2, #16
    6aec:	bl	9a88 <gen_load_a>
    6af0:	mov	r6, r0
    6af4:	mov	r0, #208	; 0xd0
    6af8:	bl	20bc <newchunk>
    6afc:	mov	r1, r5
    6b00:	mov	r9, #2
    6b04:	stmib	r0, {r6, r8}
    6b08:	str	r9, [r0, #20]
    6b0c:	str	r0, [r0, #96]	; 0x60
    6b10:	bl	3a60 <sf_gen_and>
    6b14:	mov	r0, #1
    6b18:	mov	r1, #1
    6b1c:	mov	r2, #16
    6b20:	bl	9a88 <gen_load_a>
    6b24:	mov	r6, r0
    6b28:	mov	r0, #208	; 0xd0
    6b2c:	bl	20bc <newchunk>
    6b30:	str	r9, [r0, #20]
    6b34:	mov	r7, r0
    6b38:	mov	r1, #10
    6b3c:	mov	r2, #6
    6b40:	mov	r3, r4
    6b44:	ldr	r0, [r0, #44]	; 0x2c
    6b48:	clz	r0, r0
    6b4c:	lsr	r0, r0, #5
    6b50:	str	r0, [r7, #44]	; 0x2c
    6b54:	mov	r0, #1
    6b58:	stmib	r7, {r6, r8}
    6b5c:	str	r7, [r7, #96]	; 0x60
    6b60:	bl	b4e0 <gen_bcmp>
    6b64:	mov	r6, r0
    6b68:	mov	r0, r7
    6b6c:	mov	r1, r6
    6b70:	bl	3a60 <sf_gen_and>
    6b74:	mov	r0, r6
    6b78:	mov	r1, r5
    6b7c:	bl	3b3c <sf_gen_or>
    6b80:	mov	r0, #1
    6b84:	mov	r1, #0
    6b88:	mov	r2, #16
    6b8c:	bl	9a88 <gen_load_a>
    6b90:	mov	r6, r0
    6b94:	mov	r0, #208	; 0xd0
    6b98:	bl	20bc <newchunk>
    6b9c:	mov	r1, r5
    6ba0:	mov	r9, #8
    6ba4:	stmib	r0, {r6, r8}
    6ba8:	str	r9, [r0, #20]
    6bac:	str	r0, [r0, #96]	; 0x60
    6bb0:	bl	3a60 <sf_gen_and>
    6bb4:	mov	r0, #1
    6bb8:	mov	r1, #0
    6bbc:	mov	r2, #16
    6bc0:	bl	9a88 <gen_load_a>
    6bc4:	mov	r6, r0
    6bc8:	mov	r0, #208	; 0xd0
    6bcc:	bl	20bc <newchunk>
    6bd0:	str	r9, [r0, #20]
    6bd4:	mov	r7, r0
    6bd8:	mov	r1, #10
    6bdc:	mov	r2, #6
    6be0:	mov	r3, r4
    6be4:	ldr	r0, [r0, #44]	; 0x2c
    6be8:	clz	r0, r0
    6bec:	lsr	r0, r0, #5
    6bf0:	str	r0, [r7, #44]	; 0x2c
    6bf4:	mov	r0, #1
    6bf8:	stmib	r7, {r6, r8}
    6bfc:	str	r7, [r7, #96]	; 0x60
    6c00:	bl	b4e0 <gen_bcmp>
    6c04:	mov	r4, r0
    6c08:	mov	r0, r7
    6c0c:	mov	r1, r4
    6c10:	bl	3a60 <sf_gen_and>
    6c14:	mov	r0, r4
    6c18:	mov	r1, r5
    6c1c:	bl	3b3c <sf_gen_or>
    6c20:	mov	r0, #1
    6c24:	mov	r1, #0
    6c28:	mov	r2, #16
    6c2c:	bl	9a88 <gen_load_a>
    6c30:	mov	r4, r0
    6c34:	mov	r0, #208	; 0xd0
    6c38:	bl	20bc <newchunk>
    6c3c:	mov	r1, #4
    6c40:	str	r1, [r0, #20]
    6c44:	b	6dd0 <gen_wlanhostop+0x464>
    6c48:	mov	r0, #1
    6c4c:	mov	r1, #1
    6c50:	mov	r2, #16
    6c54:	mov	r9, #1
    6c58:	bl	9a88 <gen_load_a>
    6c5c:	mov	r5, r0
    6c60:	mov	r0, #208	; 0xd0
    6c64:	bl	20bc <newchunk>
    6c68:	mov	r8, #69	; 0x45
    6c6c:	str	r9, [r0, #20]
    6c70:	mov	r6, r0
    6c74:	mov	r1, #16
    6c78:	mov	r2, #6
    6c7c:	mov	r3, r4
    6c80:	stmib	r0, {r5, r8}
    6c84:	str	r0, [r0, #96]	; 0x60
    6c88:	mov	r0, #1
    6c8c:	bl	b4e0 <gen_bcmp>
    6c90:	mov	r5, r0
    6c94:	mov	r0, r6
    6c98:	mov	r1, r5
    6c9c:	bl	3a60 <sf_gen_and>
    6ca0:	mov	r0, #1
    6ca4:	mov	r1, #1
    6ca8:	mov	r2, #16
    6cac:	bl	9a88 <gen_load_a>
    6cb0:	mov	r6, r0
    6cb4:	mov	r0, #208	; 0xd0
    6cb8:	bl	20bc <newchunk>
    6cbc:	mov	r7, r0
    6cc0:	ldr	r0, [r0, #44]	; 0x2c
    6cc4:	mov	r1, #4
    6cc8:	mov	r2, #6
    6ccc:	mov	r3, r4
    6cd0:	clz	r0, r0
    6cd4:	lsr	r0, r0, #5
    6cd8:	str	r0, [r7, #44]	; 0x2c
    6cdc:	mov	r0, #1
    6ce0:	stmib	r7, {r6, r8}
    6ce4:	str	r9, [r7, #20]
    6ce8:	str	r7, [r7, #96]	; 0x60
    6cec:	mov	r9, #4
    6cf0:	bl	b4e0 <gen_bcmp>
    6cf4:	mov	r6, r0
    6cf8:	mov	r0, r7
    6cfc:	mov	r1, r6
    6d00:	bl	3a60 <sf_gen_and>
    6d04:	mov	r0, r6
    6d08:	mov	r1, r5
    6d0c:	bl	3b3c <sf_gen_or>
    6d10:	mov	r0, #1
    6d14:	mov	r1, #0
    6d18:	mov	r2, #16
    6d1c:	bl	9a88 <gen_load_a>
    6d20:	mov	r6, r0
    6d24:	mov	r0, #208	; 0xd0
    6d28:	bl	20bc <newchunk>
    6d2c:	mov	r1, r5
    6d30:	mov	sl, #8
    6d34:	stmib	r0, {r6, r8}
    6d38:	str	sl, [r0, #20]
    6d3c:	str	r0, [r0, #96]	; 0x60
    6d40:	bl	3a60 <sf_gen_and>
    6d44:	mov	r0, #1
    6d48:	mov	r1, #0
    6d4c:	mov	r2, #16
    6d50:	bl	9a88 <gen_load_a>
    6d54:	mov	r6, r0
    6d58:	mov	r0, #208	; 0xd0
    6d5c:	bl	20bc <newchunk>
    6d60:	str	sl, [r0, #20]
    6d64:	mov	r7, r0
    6d68:	mov	r1, #4
    6d6c:	mov	r2, #6
    6d70:	mov	r3, r4
    6d74:	ldr	r0, [r0, #44]	; 0x2c
    6d78:	clz	r0, r0
    6d7c:	lsr	r0, r0, #5
    6d80:	str	r0, [r7, #44]	; 0x2c
    6d84:	mov	r0, #1
    6d88:	stmib	r7, {r6, r8}
    6d8c:	str	r7, [r7, #96]	; 0x60
    6d90:	bl	b4e0 <gen_bcmp>
    6d94:	mov	r4, r0
    6d98:	mov	r0, r7
    6d9c:	mov	r1, r4
    6da0:	bl	3a60 <sf_gen_and>
    6da4:	mov	r0, r4
    6da8:	mov	r1, r5
    6dac:	bl	3b3c <sf_gen_or>
    6db0:	mov	r0, #1
    6db4:	mov	r1, #0
    6db8:	mov	r2, #16
    6dbc:	bl	9a88 <gen_load_a>
    6dc0:	mov	r4, r0
    6dc4:	mov	r0, #208	; 0xd0
    6dc8:	bl	20bc <newchunk>
    6dcc:	str	r9, [r0, #20]
    6dd0:	str	r4, [r0, #4]
    6dd4:	str	r8, [r0, #8]
    6dd8:	ldr	r1, [r0, #44]	; 0x2c
    6ddc:	clz	r1, r1
    6de0:	lsr	r1, r1, #5
    6de4:	str	r1, [r0, #44]	; 0x2c
    6de8:	str	r0, [r0, #96]	; 0x60
    6dec:	b	6f80 <gen_wlanhostop+0x614>
    6df0:	mov	r0, #4
    6df4:	mov	r1, #0
    6df8:	mov	r2, #16
    6dfc:	mov	r3, #12
    6e00:	str	r2, [sp]
    6e04:	str	r1, [sp, #4]
    6e08:	str	r0, [sp, #8]
    6e0c:	mov	r0, #1
    6e10:	mov	r1, #0
    6e14:	mov	r2, #16
    6e18:	bl	a52c <gen_ncmp>
    6e1c:	mov	r6, r0
    6e20:	ldr	r0, [r0, #44]	; 0x2c
    6e24:	mov	r1, #16
    6e28:	clz	r0, r0
    6e2c:	lsr	r0, r0, #5
    6e30:	str	r0, [r6, #44]	; 0x2c
    6e34:	mov	r0, #1
    6e38:	b	6f6c <gen_wlanhostop+0x600>
    6e3c:	mov	r0, #1
    6e40:	mov	r1, #4
    6e44:	mov	r2, #6
    6e48:	mov	r3, r4
    6e4c:	sub	sp, fp, #28
    6e50:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    6e54:	b	b4e0 <gen_bcmp>
    6e58:	mov	r0, #4
    6e5c:	mov	r8, #0
    6e60:	mov	r7, #16
    6e64:	mov	r1, #0
    6e68:	mov	r2, #16
    6e6c:	mov	r3, #12
    6e70:	stm	sp, {r7, r8}
    6e74:	str	r0, [sp, #8]
    6e78:	mov	r0, #1
    6e7c:	bl	a52c <gen_ncmp>
    6e80:	mov	r5, r0
    6e84:	ldr	r0, [r0, #44]	; 0x2c
    6e88:	mov	r1, #0
    6e8c:	mov	r2, #16
    6e90:	mov	r3, #240	; 0xf0
    6e94:	clz	r0, r0
    6e98:	lsr	r0, r0, #5
    6e9c:	str	r0, [r5, #44]	; 0x2c
    6ea0:	mov	r0, #192	; 0xc0
    6ea4:	stm	sp, {r7, r8}
    6ea8:	str	r0, [sp, #8]
    6eac:	mov	r0, #1
    6eb0:	bl	a52c <gen_ncmp>
    6eb4:	mov	r6, r0
    6eb8:	ldr	r0, [r0, #44]	; 0x2c
    6ebc:	mov	r1, #0
    6ec0:	mov	r2, #16
    6ec4:	mov	r3, #240	; 0xf0
    6ec8:	clz	r0, r0
    6ecc:	lsr	r0, r0, #5
    6ed0:	str	r0, [r6, #44]	; 0x2c
    6ed4:	mov	r0, #208	; 0xd0
    6ed8:	stm	sp, {r7, r8}
    6edc:	str	r0, [sp, #8]
    6ee0:	mov	r0, #1
    6ee4:	bl	a52c <gen_ncmp>
    6ee8:	mov	r7, r0
    6eec:	ldr	r0, [r0, #44]	; 0x2c
    6ef0:	mov	r1, r7
    6ef4:	clz	r0, r0
    6ef8:	lsr	r0, r0, #5
    6efc:	str	r0, [r7, #44]	; 0x2c
    6f00:	mov	r0, r6
    6f04:	bl	3a60 <sf_gen_and>
    6f08:	mov	r0, r5
    6f0c:	mov	r1, r7
    6f10:	bl	3b3c <sf_gen_or>
    6f14:	mov	r0, #1
    6f18:	mov	r1, #10
    6f1c:	mov	r2, #6
    6f20:	mov	r3, r4
    6f24:	bl	b4e0 <gen_bcmp>
    6f28:	mov	r5, r0
    6f2c:	mov	r0, r7
    6f30:	b	6f80 <gen_wlanhostop+0x614>
    6f34:	mov	r0, #3
    6f38:	mov	r1, #0
    6f3c:	mov	r2, #16
    6f40:	mov	r3, #3
    6f44:	str	r2, [sp]
    6f48:	str	r1, [sp, #4]
    6f4c:	str	r0, [sp, #8]
    6f50:	mov	r0, #1
    6f54:	mov	r1, #1
    6f58:	mov	r2, #16
    6f5c:	bl	a52c <gen_ncmp>
    6f60:	mov	r6, r0
    6f64:	mov	r0, #1
    6f68:	mov	r1, #24
    6f6c:	mov	r2, #6
    6f70:	mov	r3, r4
    6f74:	bl	b4e0 <gen_bcmp>
    6f78:	mov	r5, r0
    6f7c:	mov	r0, r6
    6f80:	mov	r1, r5
    6f84:	bl	3a60 <sf_gen_and>
    6f88:	mov	r0, r5
    6f8c:	sub	sp, fp, #28
    6f90:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    6f94:	bl	fc4 <abort@plt>

00006f98 <gen_ipfchostop>:
    6f98:	push	{r4, r5, fp, lr}
    6f9c:	add	fp, sp, #8
    6fa0:	cmp	r1, #4
    6fa4:	bhi	7074 <gen_ipfchostop+0xdc>
    6fa8:	mov	r4, r0
    6fac:	add	r0, pc, #4
    6fb0:	ldr	r1, [r0, r1, lsl #2]
    6fb4:	add	pc, r0, r1
    6fb8:	.word	0x00000014
    6fbc:	.word	0x00000098
    6fc0:	.word	0x000000a4
    6fc4:	.word	0x00000014
    6fc8:	.word	0x00000054
    6fcc:	mov	r0, #1
    6fd0:	mov	r1, #10
    6fd4:	mov	r2, #6
    6fd8:	mov	r3, r4
    6fdc:	bl	b4e0 <gen_bcmp>
    6fe0:	mov	r5, r0
    6fe4:	mov	r0, #1
    6fe8:	mov	r1, #2
    6fec:	mov	r2, #6
    6ff0:	mov	r3, r4
    6ff4:	bl	b4e0 <gen_bcmp>
    6ff8:	mov	r4, r0
    6ffc:	mov	r0, r5
    7000:	mov	r1, r4
    7004:	bl	3b3c <sf_gen_or>
    7008:	b	7048 <gen_ipfchostop+0xb0>
    700c:	mov	r0, #1
    7010:	mov	r1, #10
    7014:	mov	r2, #6
    7018:	mov	r3, r4
    701c:	bl	b4e0 <gen_bcmp>
    7020:	mov	r5, r0
    7024:	mov	r0, #1
    7028:	mov	r1, #2
    702c:	mov	r2, #6
    7030:	mov	r3, r4
    7034:	bl	b4e0 <gen_bcmp>
    7038:	mov	r4, r0
    703c:	mov	r0, r5
    7040:	mov	r1, r4
    7044:	bl	3a60 <sf_gen_and>
    7048:	mov	r0, r4
    704c:	pop	{r4, r5, fp, pc}
    7050:	mov	r0, #1
    7054:	mov	r1, #10
    7058:	b	7064 <gen_ipfchostop+0xcc>
    705c:	mov	r0, #1
    7060:	mov	r1, #2
    7064:	mov	r2, #6
    7068:	mov	r3, r4
    706c:	pop	{r4, r5, fp, lr}
    7070:	b	b4e0 <gen_bcmp>
    7074:	bl	fc4 <abort@plt>

00007078 <gen_host6>:
    7078:	push	{r4, sl, fp, lr}
    707c:	add	fp, sp, #8
    7080:	sub	sp, sp, #8
    7084:	ldr	r4, [pc, #604]	; 72e8 <gen_host6+0x270>
    7088:	mov	ip, r3
    708c:	mov	lr, r1
    7090:	ldr	r1, [pc, #596]	; 72ec <gen_host6+0x274>
    7094:	ldr	r3, [fp, #8]
    7098:	add	r4, pc, r4
    709c:	add	r1, pc, r1
    70a0:	cmp	r3, #2
    70a4:	moveq	r1, r4
    70a8:	cmp	r2, #40	; 0x28
    70ac:	bhi	7188 <gen_host6+0x110>
    70b0:	add	r3, pc, #4
    70b4:	ldr	r2, [r3, r2, lsl #2]
    70b8:	add	pc, r3, r2
    70bc:	.word	0x000000a4
    70c0:	.word	0x000000cc
    70c4:	.word	0x000000d0
    70c8:	.word	0x000000dc
    70cc:	.word	0x000000e8
    70d0:	.word	0x000000f4
    70d4:	.word	0x00000100
    70d8:	.word	0x0000010c
    70dc:	.word	0x00000118
    70e0:	.word	0x00000124
    70e4:	.word	0x00000130
    70e8:	.word	0x0000013c
    70ec:	.word	0x00000148
    70f0:	.word	0x00000154
    70f4:	.word	0x00000160
    70f8:	.word	0x0000016c
    70fc:	.word	0x00000178
    7100:	.word	0x000000a4
    7104:	.word	0x00000184
    7108:	.word	0x00000190
    710c:	.word	0x0000019c
    7110:	.word	0x000001a8
    7114:	.word	0x000001b4
    7118:	.word	0x000001c0
    711c:	.word	0x000001cc
    7120:	.word	0x000001d8
    7124:	.word	0x000001e4
    7128:	.word	0x000001f0
    712c:	.word	0x000001fc
    7130:	.word	0x00000208
    7134:	.word	0x00000214
    7138:	.word	0x000000cc
    713c:	.word	0x000000cc
    7140:	.word	0x000000cc
    7144:	.word	0x000000cc
    7148:	.word	0x000000cc
    714c:	.word	0x000000cc
    7150:	.word	0x000000cc
    7154:	.word	0x000000cc
    7158:	.word	0x000000cc
    715c:	.word	0x00000220
    7160:	mov	r1, #24
    7164:	mov	r2, #8
    7168:	movw	r3, #34525	; 0x86dd
    716c:	str	r2, [sp]
    7170:	str	r1, [sp, #4]
    7174:	mov	r1, lr
    7178:	mov	r2, ip
    717c:	bl	ba98 <gen_hostop6>
    7180:	sub	sp, fp, #8
    7184:	pop	{r4, sl, fp, pc}
    7188:	bl	fc4 <abort@plt>
    718c:	ldr	r0, [pc, #348]	; 72f0 <gen_host6+0x278>
    7190:	add	r0, pc, r0
    7194:	bl	2028 <sf_bpf_error>
    7198:	ldr	r0, [pc, #344]	; 72f8 <gen_host6+0x280>
    719c:	add	r0, pc, r0
    71a0:	bl	2028 <sf_bpf_error>
    71a4:	ldr	r0, [pc, #328]	; 72f4 <gen_host6+0x27c>
    71a8:	add	r0, pc, r0
    71ac:	bl	2028 <sf_bpf_error>
    71b0:	ldr	r0, [pc, #324]	; 72fc <gen_host6+0x284>
    71b4:	add	r0, pc, r0
    71b8:	bl	2028 <sf_bpf_error>
    71bc:	ldr	r0, [pc, #316]	; 7300 <gen_host6+0x288>
    71c0:	add	r0, pc, r0
    71c4:	bl	2028 <sf_bpf_error>
    71c8:	ldr	r0, [pc, #308]	; 7304 <gen_host6+0x28c>
    71cc:	add	r0, pc, r0
    71d0:	bl	2028 <sf_bpf_error>
    71d4:	ldr	r0, [pc, #300]	; 7308 <gen_host6+0x290>
    71d8:	add	r0, pc, r0
    71dc:	bl	2028 <sf_bpf_error>
    71e0:	ldr	r0, [pc, #292]	; 730c <gen_host6+0x294>
    71e4:	add	r0, pc, r0
    71e8:	bl	2028 <sf_bpf_error>
    71ec:	ldr	r0, [pc, #284]	; 7310 <gen_host6+0x298>
    71f0:	add	r0, pc, r0
    71f4:	bl	2028 <sf_bpf_error>
    71f8:	ldr	r0, [pc, #284]	; 731c <gen_host6+0x2a4>
    71fc:	add	r0, pc, r0
    7200:	bl	2028 <sf_bpf_error>
    7204:	ldr	r0, [pc, #280]	; 7324 <gen_host6+0x2ac>
    7208:	add	r0, pc, r0
    720c:	bl	2028 <sf_bpf_error>
    7210:	ldr	r0, [pc, #276]	; 732c <gen_host6+0x2b4>
    7214:	add	r0, pc, r0
    7218:	bl	2028 <sf_bpf_error>
    721c:	ldr	r0, [pc, #260]	; 7328 <gen_host6+0x2b0>
    7220:	add	r0, pc, r0
    7224:	bl	2028 <sf_bpf_error>
    7228:	ldr	r0, [pc, #260]	; 7334 <gen_host6+0x2bc>
    722c:	add	r0, pc, r0
    7230:	bl	2028 <sf_bpf_error>
    7234:	ldr	r0, [pc, #244]	; 7330 <gen_host6+0x2b8>
    7238:	add	r0, pc, r0
    723c:	bl	2028 <sf_bpf_error>
    7240:	ldr	r0, [pc, #240]	; 7338 <gen_host6+0x2c0>
    7244:	add	r0, pc, r0
    7248:	bl	2028 <sf_bpf_error>
    724c:	ldr	r0, [pc, #232]	; 733c <gen_host6+0x2c4>
    7250:	add	r0, pc, r0
    7254:	bl	2028 <sf_bpf_error>
    7258:	ldr	r0, [pc, #224]	; 7340 <gen_host6+0x2c8>
    725c:	add	r0, pc, r0
    7260:	bl	2028 <sf_bpf_error>
    7264:	ldr	r0, [pc, #168]	; 7314 <gen_host6+0x29c>
    7268:	add	r0, pc, r0
    726c:	bl	2028 <sf_bpf_error>
    7270:	ldr	r0, [pc, #160]	; 7318 <gen_host6+0x2a0>
    7274:	add	r0, pc, r0
    7278:	bl	2028 <sf_bpf_error>
    727c:	ldr	r0, [pc, #156]	; 7320 <gen_host6+0x2a8>
    7280:	add	r0, pc, r0
    7284:	bl	2028 <sf_bpf_error>
    7288:	ldr	r0, [pc, #180]	; 7344 <gen_host6+0x2cc>
    728c:	add	r0, pc, r0
    7290:	bl	2028 <sf_bpf_error>
    7294:	ldr	r0, [pc, #172]	; 7348 <gen_host6+0x2d0>
    7298:	add	r0, pc, r0
    729c:	bl	2028 <sf_bpf_error>
    72a0:	ldr	r0, [pc, #164]	; 734c <gen_host6+0x2d4>
    72a4:	add	r0, pc, r0
    72a8:	bl	2028 <sf_bpf_error>
    72ac:	ldr	r0, [pc, #156]	; 7350 <gen_host6+0x2d8>
    72b0:	add	r0, pc, r0
    72b4:	bl	2028 <sf_bpf_error>
    72b8:	ldr	r0, [pc, #148]	; 7354 <gen_host6+0x2dc>
    72bc:	add	r0, pc, r0
    72c0:	bl	2028 <sf_bpf_error>
    72c4:	ldr	r0, [pc, #140]	; 7358 <gen_host6+0x2e0>
    72c8:	add	r0, pc, r0
    72cc:	bl	2028 <sf_bpf_error>
    72d0:	ldr	r0, [pc, #132]	; 735c <gen_host6+0x2e4>
    72d4:	add	r0, pc, r0
    72d8:	bl	2028 <sf_bpf_error>
    72dc:	ldr	r0, [pc, #124]	; 7360 <gen_host6+0x2e8>
    72e0:	add	r0, pc, r0
    72e4:	bl	2028 <sf_bpf_error>
    72e8:	.word	0x0000bf40
    72ec:	.word	0x0000cab2
    72f0:	.word	0x0000cb18
    72f4:	.word	0x0000cb20
    72f8:	.word	0x0000cb4e
    72fc:	.word	0x0000c7d4
    7300:	.word	0x0000c7ab
    7304:	.word	0x0000c7da
    7308:	.word	0x0000c7eb
    730c:	.word	0x0000c7fd
    7310:	.word	0x0000c80f
    7314:	.word	0x0000c7b5
    7318:	.word	0x0000c7c6
    731c:	.word	0x0000c85c
    7320:	.word	0x0000c7fd
    7324:	.word	0x0000cb03
    7328:	.word	0x0000c881
    732c:	.word	0x0000c8b0
    7330:	.word	0x0000c8af
    7334:	.word	0x0000c8e0
    7338:	.word	0x0000c90f
    733c:	.word	0x0000c922
    7340:	.word	0x0000c932
    7344:	.word	0x0000c91f
    7348:	.word	0x0000c936
    734c:	.word	0x0000c948
    7350:	.word	0x0000c95a
    7354:	.word	0x0000c96c
    7358:	.word	0x0000c97d
    735c:	.word	0x0000c994
    7360:	.word	0x0000c9a9

00007364 <gen_port>:
    7364:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    7368:	add	fp, sp, #24
    736c:	mov	r6, r0
    7370:	mov	r0, #2048	; 0x800
    7374:	mov	r5, r2
    7378:	mov	r7, r1
    737c:	bl	446c <gen_linktype>
    7380:	mov	r4, r0
    7384:	cmp	r7, #16
    7388:	bgt	73e4 <gen_port+0x80>
    738c:	cmn	r7, #1
    7390:	bne	7418 <gen_port+0xb4>
    7394:	mov	r0, r6
    7398:	mov	r1, #6
    739c:	mov	r2, r5
    73a0:	bl	53ac <sf_gen_portop>
    73a4:	mov	r8, r0
    73a8:	mov	r0, r6
    73ac:	mov	r1, #17
    73b0:	mov	r2, r5
    73b4:	bl	53ac <sf_gen_portop>
    73b8:	mov	r7, r0
    73bc:	mov	r0, r8
    73c0:	mov	r1, r7
    73c4:	bl	3b3c <sf_gen_or>
    73c8:	mov	r0, r6
    73cc:	mov	r1, #132	; 0x84
    73d0:	mov	r2, r5
    73d4:	bl	53ac <sf_gen_portop>
    73d8:	mov	r1, r7
    73dc:	bl	3b3c <sf_gen_or>
    73e0:	b	7404 <gen_port+0xa0>
    73e4:	cmp	r7, #132	; 0x84
    73e8:	cmpne	r7, #17
    73ec:	bne	7420 <gen_port+0xbc>
    73f0:	mov	r0, r6
    73f4:	mov	r1, r7
    73f8:	mov	r2, r5
    73fc:	bl	53ac <sf_gen_portop>
    7400:	mov	r7, r0
    7404:	mov	r0, r4
    7408:	mov	r1, r7
    740c:	bl	3a60 <sf_gen_and>
    7410:	mov	r0, r7
    7414:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    7418:	cmp	r7, #6
    741c:	beq	73f0 <gen_port+0x8c>
    7420:	bl	fc4 <abort@plt>

00007424 <gen_port6>:
    7424:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    7428:	add	fp, sp, #24
    742c:	mov	r6, r0
    7430:	movw	r0, #34525	; 0x86dd
    7434:	mov	r5, r2
    7438:	mov	r7, r1
    743c:	bl	446c <gen_linktype>
    7440:	mov	r4, r0
    7444:	cmp	r7, #16
    7448:	bgt	74a4 <gen_port6+0x80>
    744c:	cmn	r7, #1
    7450:	bne	74d8 <gen_port6+0xb4>
    7454:	mov	r0, r6
    7458:	mov	r1, #6
    745c:	mov	r2, r5
    7460:	bl	55c0 <sf_gen_portop6>
    7464:	mov	r8, r0
    7468:	mov	r0, r6
    746c:	mov	r1, #17
    7470:	mov	r2, r5
    7474:	bl	55c0 <sf_gen_portop6>
    7478:	mov	r7, r0
    747c:	mov	r0, r8
    7480:	mov	r1, r7
    7484:	bl	3b3c <sf_gen_or>
    7488:	mov	r0, r6
    748c:	mov	r1, #132	; 0x84
    7490:	mov	r2, r5
    7494:	bl	55c0 <sf_gen_portop6>
    7498:	mov	r1, r7
    749c:	bl	3b3c <sf_gen_or>
    74a0:	b	74c4 <gen_port6+0xa0>
    74a4:	cmp	r7, #132	; 0x84
    74a8:	cmpne	r7, #17
    74ac:	bne	74e0 <gen_port6+0xbc>
    74b0:	mov	r0, r6
    74b4:	mov	r1, r7
    74b8:	mov	r2, r5
    74bc:	bl	55c0 <sf_gen_portop6>
    74c0:	mov	r7, r0
    74c4:	mov	r0, r4
    74c8:	mov	r1, r7
    74cc:	bl	3a60 <sf_gen_and>
    74d0:	mov	r0, r7
    74d4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    74d8:	cmp	r7, #6
    74dc:	beq	74b0 <gen_port6+0x8c>
    74e0:	bl	fc4 <abort@plt>

000074e4 <gen_portrange>:
    74e4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    74e8:	add	fp, sp, #24
    74ec:	mov	r7, r0
    74f0:	mov	r0, #2048	; 0x800
    74f4:	mov	r5, r3
    74f8:	mov	r4, r2
    74fc:	mov	r6, r1
    7500:	bl	446c <gen_linktype>
    7504:	mov	r8, r0
    7508:	cmp	r4, #16
    750c:	bgt	7574 <gen_portrange+0x90>
    7510:	cmn	r4, #1
    7514:	bne	75ac <gen_portrange+0xc8>
    7518:	mov	r0, r7
    751c:	mov	r1, r6
    7520:	mov	r2, #6
    7524:	mov	r3, r5
    7528:	bl	5798 <sf_gen_portrangeop>
    752c:	mov	r9, r0
    7530:	mov	r0, r7
    7534:	mov	r1, r6
    7538:	mov	r2, #17
    753c:	mov	r3, r5
    7540:	bl	5798 <sf_gen_portrangeop>
    7544:	mov	r4, r0
    7548:	mov	r0, r9
    754c:	mov	r1, r4
    7550:	bl	3b3c <sf_gen_or>
    7554:	mov	r0, r7
    7558:	mov	r1, r6
    755c:	mov	r2, #132	; 0x84
    7560:	mov	r3, r5
    7564:	bl	5798 <sf_gen_portrangeop>
    7568:	mov	r1, r4
    756c:	bl	3b3c <sf_gen_or>
    7570:	b	7598 <gen_portrange+0xb4>
    7574:	cmp	r4, #132	; 0x84
    7578:	cmpne	r4, #17
    757c:	bne	75b4 <gen_portrange+0xd0>
    7580:	mov	r0, r7
    7584:	mov	r1, r6
    7588:	mov	r2, r4
    758c:	mov	r3, r5
    7590:	bl	5798 <sf_gen_portrangeop>
    7594:	mov	r4, r0
    7598:	mov	r0, r8
    759c:	mov	r1, r4
    75a0:	bl	3a60 <sf_gen_and>
    75a4:	mov	r0, r4
    75a8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    75ac:	cmp	r4, #6
    75b0:	beq	7580 <gen_portrange+0x9c>
    75b4:	bl	fc4 <abort@plt>

000075b8 <gen_portrange6>:
    75b8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    75bc:	add	fp, sp, #24
    75c0:	mov	r7, r0
    75c4:	movw	r0, #34525	; 0x86dd
    75c8:	mov	r5, r3
    75cc:	mov	r4, r2
    75d0:	mov	r6, r1
    75d4:	bl	446c <gen_linktype>
    75d8:	mov	r8, r0
    75dc:	cmp	r4, #16
    75e0:	bgt	7648 <gen_portrange6+0x90>
    75e4:	cmn	r4, #1
    75e8:	bne	7680 <gen_portrange6+0xc8>
    75ec:	mov	r0, r7
    75f0:	mov	r1, r6
    75f4:	mov	r2, #6
    75f8:	mov	r3, r5
    75fc:	bl	5980 <sf_gen_portrangeop6>
    7600:	mov	r9, r0
    7604:	mov	r0, r7
    7608:	mov	r1, r6
    760c:	mov	r2, #17
    7610:	mov	r3, r5
    7614:	bl	5980 <sf_gen_portrangeop6>
    7618:	mov	r4, r0
    761c:	mov	r0, r9
    7620:	mov	r1, r4
    7624:	bl	3b3c <sf_gen_or>
    7628:	mov	r0, r7
    762c:	mov	r1, r6
    7630:	mov	r2, #132	; 0x84
    7634:	mov	r3, r5
    7638:	bl	5980 <sf_gen_portrangeop6>
    763c:	mov	r1, r4
    7640:	bl	3b3c <sf_gen_or>
    7644:	b	766c <gen_portrange6+0xb4>
    7648:	cmp	r4, #132	; 0x84
    764c:	cmpne	r4, #17
    7650:	bne	7688 <gen_portrange6+0xd0>
    7654:	mov	r0, r7
    7658:	mov	r1, r6
    765c:	mov	r2, r4
    7660:	mov	r3, r5
    7664:	bl	5980 <sf_gen_portrangeop6>
    7668:	mov	r4, r0
    766c:	mov	r0, r8
    7670:	mov	r1, r4
    7674:	bl	3a60 <sf_gen_and>
    7678:	mov	r0, r4
    767c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    7680:	cmp	r4, #6
    7684:	beq	7654 <gen_portrange6+0x9c>
    7688:	bl	fc4 <abort@plt>

0000768c <lookup_proto>:
    768c:	push	{r4, sl, fp, lr}
    7690:	add	fp, sp, #8
    7694:	mov	r4, r0
    7698:	mvn	r0, #0
    769c:	cmp	r1, #1
    76a0:	ble	76c0 <lookup_proto+0x34>
    76a4:	cmp	r1, #2
    76a8:	beq	7700 <lookup_proto+0x74>
    76ac:	cmp	r1, #24
    76b0:	beq	7714 <lookup_proto+0x88>
    76b4:	cmp	r1, #17
    76b8:	beq	7700 <lookup_proto+0x74>
    76bc:	b	7710 <lookup_proto+0x84>
    76c0:	cmp	r1, #0
    76c4:	beq	7700 <lookup_proto+0x74>
    76c8:	cmp	r1, #1
    76cc:	bne	7710 <lookup_proto+0x84>
    76d0:	mov	r0, r4
    76d4:	bl	bf84 <pcap_nametoeproto>
    76d8:	cmn	r0, #1
    76dc:	bne	7710 <lookup_proto+0x84>
    76e0:	mov	r0, r4
    76e4:	bl	bfec <pcap_nametollc>
    76e8:	cmn	r0, #1
    76ec:	bne	7710 <lookup_proto+0x84>
    76f0:	ldr	r0, [pc, #152]	; 7790 <lookup_proto+0x104>
    76f4:	mov	r1, r4
    76f8:	add	r0, pc, r0
    76fc:	bl	2028 <sf_bpf_error>
    7700:	mov	r0, r4
    7704:	bl	bf68 <pcap_nametoproto>
    7708:	cmn	r0, #1
    770c:	beq	7780 <lookup_proto+0xf4>
    7710:	pop	{r4, sl, fp, pc}
    7714:	ldr	r1, [pc, #124]	; 7798 <lookup_proto+0x10c>
    7718:	mov	r0, r4
    771c:	add	r1, pc, r1
    7720:	bl	e08 <strcmp@plt>
    7724:	cmp	r0, #0
    7728:	moveq	r0, #130	; 0x82
    772c:	popeq	{r4, sl, fp, pc}
    7730:	ldr	r1, [pc, #100]	; 779c <lookup_proto+0x110>
    7734:	mov	r0, r4
    7738:	add	r1, pc, r1
    773c:	bl	e08 <strcmp@plt>
    7740:	cmp	r0, #0
    7744:	beq	7778 <lookup_proto+0xec>
    7748:	ldr	r1, [pc, #80]	; 77a0 <lookup_proto+0x114>
    774c:	mov	r0, r4
    7750:	add	r1, pc, r1
    7754:	bl	e08 <strcmp@plt>
    7758:	mov	r1, r0
    775c:	mov	r0, #129	; 0x81
    7760:	cmp	r1, #0
    7764:	popeq	{r4, sl, fp, pc}
    7768:	ldr	r0, [pc, #52]	; 77a4 <lookup_proto+0x118>
    776c:	mov	r1, r4
    7770:	add	r0, pc, r0
    7774:	bl	2028 <sf_bpf_error>
    7778:	mov	r0, #131	; 0x83
    777c:	pop	{r4, sl, fp, pc}
    7780:	ldr	r0, [pc, #12]	; 7794 <lookup_proto+0x108>
    7784:	mov	r1, r4
    7788:	add	r0, pc, r0
    778c:	bl	2028 <sf_bpf_error>
    7790:	.word	0x0000c64d
    7794:	.word	0x0000c5a7
    7798:	.word	0x0000c642
    779c:	.word	0x0000c62b
    77a0:	.word	0x0000c618
    77a4:	.word	0x0000c5fd

000077a8 <gen_protochain>:
    77a8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    77ac:	add	fp, sp, #28
    77b0:	sub	sp, sp, #412	; 0x19c
    77b4:	mov	r7, r1
    77b8:	mov	r6, r0
    77bc:	bl	8afc <alloc_reg>
    77c0:	add	sl, sp, #8
    77c4:	mov	r9, r0
    77c8:	mov	r1, #0
    77cc:	mov	r2, #400	; 0x190
    77d0:	mov	r0, sl
    77d4:	bl	f40 <memset@plt>
    77d8:	cmp	r7, #17
    77dc:	cmpne	r7, #2
    77e0:	bne	78c0 <gen_protochain+0x118>
    77e4:	ldr	r0, [pc, #1684]	; 7e80 <gen_protochain+0x6d8>
    77e8:	ldr	r0, [pc, r0]
    77ec:	sub	r1, r0, #105	; 0x69
    77f0:	cmp	r1, #22
    77f4:	bhi	780c <gen_protochain+0x64>
    77f8:	movw	r3, #16385	; 0x4001
    77fc:	mov	r2, #1
    7800:	movt	r3, #64	; 0x40
    7804:	tst	r3, r2, lsl r1
    7808:	bne	7818 <gen_protochain+0x70>
    780c:	cmp	r0, #192	; 0xc0
    7810:	cmpne	r0, #163	; 0xa3
    7814:	bne	7824 <gen_protochain+0x7c>
    7818:	ldr	r0, [pc, #1704]	; 7ec8 <gen_protochain+0x720>
    781c:	add	r0, pc, r0
    7820:	bl	2028 <sf_bpf_error>
    7824:	ldr	r0, [pc, #1624]	; 7e84 <gen_protochain+0x6dc>
    7828:	mov	r4, #1
    782c:	add	r0, pc, r0
    7830:	str	r4, [r0]
    7834:	mov	r0, #20
    7838:	bl	20bc <newchunk>
    783c:	mov	r1, #0
    7840:	cmp	r7, #17
    7844:	str	r1, [r0]
    7848:	str	r0, [sp, #8]
    784c:	beq	78f8 <gen_protochain+0x150>
    7850:	cmp	r7, #2
    7854:	bne	7e70 <gen_protochain+0x6c8>
    7858:	mov	r0, #2048	; 0x800
    785c:	bl	446c <gen_linktype>
    7860:	str	r0, [sp]
    7864:	mov	r0, #20
    7868:	bl	20bc <newchunk>
    786c:	mov	r1, #48	; 0x30
    7870:	str	r1, [r0]
    7874:	str	r0, [sp, #12]
    7878:	ldr	r1, [pc, #1544]	; 7e88 <gen_protochain+0x6e0>
    787c:	ldr	r1, [pc, r1]
    7880:	ldr	r2, [pc, #1540]	; 7e8c <gen_protochain+0x6e4>
    7884:	ldr	r2, [pc, r2]
    7888:	add	r1, r2, r1
    788c:	add	r1, r1, #9
    7890:	str	r1, [r0, #12]
    7894:	mov	r0, #20
    7898:	bl	20bc <newchunk>
    789c:	mov	r1, #177	; 0xb1
    78a0:	str	r1, [r0]
    78a4:	str	r0, [sp, #16]
    78a8:	ldr	r1, [pc, #1504]	; 7e90 <gen_protochain+0x6e8>
    78ac:	ldr	r1, [pc, r1]
    78b0:	ldr	r2, [pc, #1500]	; 7e94 <gen_protochain+0x6ec>
    78b4:	ldr	r2, [pc, r2]
    78b8:	add	r1, r2, r1
    78bc:	b	7948 <gen_protochain+0x1a0>
    78c0:	cmp	r7, #0
    78c4:	bne	7e64 <gen_protochain+0x6bc>
    78c8:	mov	r0, r6
    78cc:	mov	r1, #2
    78d0:	bl	77a8 <gen_protochain>
    78d4:	mov	r5, r0
    78d8:	mov	r0, r6
    78dc:	mov	r1, #17
    78e0:	bl	77a8 <gen_protochain>
    78e4:	mov	r6, r0
    78e8:	mov	r0, r5
    78ec:	mov	r1, r6
    78f0:	bl	3b3c <sf_gen_or>
    78f4:	b	7e58 <gen_protochain+0x6b0>
    78f8:	movw	r0, #34525	; 0x86dd
    78fc:	bl	446c <gen_linktype>
    7900:	str	r0, [sp]
    7904:	mov	r0, #20
    7908:	bl	20bc <newchunk>
    790c:	mov	r1, #48	; 0x30
    7910:	str	r1, [r0]
    7914:	str	r0, [sp, #12]
    7918:	ldr	r1, [pc, #1404]	; 7e9c <gen_protochain+0x6f4>
    791c:	ldr	r1, [pc, r1]
    7920:	ldr	r2, [pc, #1400]	; 7ea0 <gen_protochain+0x6f8>
    7924:	ldr	r2, [pc, r2]
    7928:	add	r1, r2, r1
    792c:	add	r1, r1, #6
    7930:	str	r1, [r0, #12]
    7934:	mov	r0, #20
    7938:	bl	20bc <newchunk>
    793c:	mov	r1, #40	; 0x28
    7940:	str	r4, [r0]
    7944:	str	r0, [sp, #16]
    7948:	str	r1, [r0, #12]
    794c:	mov	r0, #20
    7950:	bl	20bc <newchunk>
    7954:	mov	r4, #21
    7958:	mov	r5, #0
    795c:	str	r4, [r0]
    7960:	str	r0, [sp, #20]
    7964:	str	r6, [r0, #12]
    7968:	ldr	r0, [sp, #20]
    796c:	str	r5, [r0, #4]
    7970:	ldr	r0, [sp, #20]
    7974:	str	r5, [r0, #8]
    7978:	mov	r0, #20
    797c:	bl	20bc <newchunk>
    7980:	str	r4, [r0]
    7984:	str	r0, [sp, #24]
    7988:	str	r5, [r0, #4]
    798c:	mov	r1, #59	; 0x3b
    7990:	ldr	r0, [sp, #24]
    7994:	str	r5, [r0, #8]
    7998:	ldr	r0, [sp, #24]
    799c:	str	r1, [r0, #12]
    79a0:	ldr	r0, [sp, #20]
    79a4:	ldr	r1, [sp, #24]
    79a8:	str	r1, [r0, #8]
    79ac:	mov	r0, #20
    79b0:	bl	20bc <newchunk>
    79b4:	cmp	r7, #17
    79b8:	str	r6, [sp, #4]
    79bc:	bne	7bec <gen_protochain+0x444>
    79c0:	mov	r7, #0
    79c4:	str	r4, [r0]
    79c8:	str	r0, [sp, #28]
    79cc:	str	r7, [r0, #4]
    79d0:	ldr	r0, [sp, #28]
    79d4:	str	r7, [r0, #8]
    79d8:	ldr	r0, [sp, #28]
    79dc:	str	r7, [r0, #12]
    79e0:	ldr	r0, [sp, #24]
    79e4:	ldr	r1, [sp, #28]
    79e8:	str	r1, [r0, #8]
    79ec:	mov	r0, #20
    79f0:	bl	20bc <newchunk>
    79f4:	str	r4, [r0]
    79f8:	str	r0, [sp, #32]
    79fc:	ldr	r1, [sp, #28]
    7a00:	str	r0, [r1, #8]
    7a04:	mov	r1, #60	; 0x3c
    7a08:	ldr	r0, [sp, #32]
    7a0c:	str	r7, [r0, #4]
    7a10:	ldr	r0, [sp, #32]
    7a14:	str	r7, [r0, #8]
    7a18:	ldr	r0, [sp, #32]
    7a1c:	str	r1, [r0, #12]
    7a20:	mov	r0, #20
    7a24:	bl	20bc <newchunk>
    7a28:	str	r4, [r0]
    7a2c:	str	r0, [sp, #36]	; 0x24
    7a30:	ldr	r1, [sp, #32]
    7a34:	str	r0, [r1, #8]
    7a38:	mov	r1, #43	; 0x2b
    7a3c:	ldr	r0, [sp, #36]	; 0x24
    7a40:	str	r7, [r0, #4]
    7a44:	ldr	r0, [sp, #36]	; 0x24
    7a48:	str	r7, [r0, #8]
    7a4c:	ldr	r0, [sp, #36]	; 0x24
    7a50:	str	r1, [r0, #12]
    7a54:	mov	r0, #20
    7a58:	bl	20bc <newchunk>
    7a5c:	str	r4, [r0]
    7a60:	str	r0, [sp, #40]	; 0x28
    7a64:	ldr	r1, [sp, #36]	; 0x24
    7a68:	str	r0, [r1, #8]
    7a6c:	mov	r1, #44	; 0x2c
    7a70:	ldr	r0, [sp, #40]	; 0x28
    7a74:	str	r7, [r0, #4]
    7a78:	ldr	r0, [sp, #40]	; 0x28
    7a7c:	str	r7, [r0, #8]
    7a80:	ldr	r0, [sp, #40]	; 0x28
    7a84:	str	r1, [r0, #12]
    7a88:	mov	r0, #20
    7a8c:	bl	20bc <newchunk>
    7a90:	mov	r5, #135	; 0x87
    7a94:	str	r5, [r0]
    7a98:	str	r0, [sp, #44]	; 0x2c
    7a9c:	mov	r0, #20
    7aa0:	bl	20bc <newchunk>
    7aa4:	mov	r8, #80	; 0x50
    7aa8:	str	r8, [r0]
    7aac:	str	r0, [sp, #48]	; 0x30
    7ab0:	ldr	r1, [pc, #1004]	; 7ea4 <gen_protochain+0x6fc>
    7ab4:	ldr	r1, [pc, r1]
    7ab8:	ldr	r2, [pc, #1000]	; 7ea8 <gen_protochain+0x700>
    7abc:	ldr	r2, [pc, r2]
    7ac0:	add	r1, r2, r1
    7ac4:	str	r1, [r0, #12]
    7ac8:	mov	r0, #20
    7acc:	bl	20bc <newchunk>
    7ad0:	mov	r1, #2
    7ad4:	str	r1, [r0]
    7ad8:	str	r0, [sp, #52]	; 0x34
    7adc:	str	r9, [r0, #12]
    7ae0:	mov	r0, #20
    7ae4:	bl	20bc <newchunk>
    7ae8:	str	r5, [r0]
    7aec:	str	r0, [sp, #56]	; 0x38
    7af0:	mov	r0, #20
    7af4:	bl	20bc <newchunk>
    7af8:	mov	r5, #4
    7afc:	mov	r4, #1
    7b00:	str	r5, [r0]
    7b04:	str	r0, [sp, #60]	; 0x3c
    7b08:	str	r4, [r0, #12]
    7b0c:	mov	r0, #20
    7b10:	bl	20bc <newchunk>
    7b14:	mov	r6, #7
    7b18:	str	r6, [r0]
    7b1c:	str	r0, [sp, #64]	; 0x40
    7b20:	mov	r0, #20
    7b24:	bl	20bc <newchunk>
    7b28:	str	r8, [r0]
    7b2c:	str	r0, [sp, #68]	; 0x44
    7b30:	ldr	r1, [pc, #884]	; 7eac <gen_protochain+0x704>
    7b34:	ldr	r1, [pc, r1]
    7b38:	ldr	r2, [pc, #880]	; 7eb0 <gen_protochain+0x708>
    7b3c:	ldr	r2, [pc, r2]
    7b40:	add	r1, r2, r1
    7b44:	str	r1, [r0, #12]
    7b48:	mov	r0, #20
    7b4c:	bl	20bc <newchunk>
    7b50:	str	r5, [r0]
    7b54:	str	r0, [sp, #72]	; 0x48
    7b58:	str	r4, [r0, #12]
    7b5c:	mov	r0, #20
    7b60:	bl	20bc <newchunk>
    7b64:	mov	r1, #36	; 0x24
    7b68:	mov	r5, #8
    7b6c:	str	r1, [r0]
    7b70:	str	r0, [sp, #76]	; 0x4c
    7b74:	str	r5, [r0, #12]
    7b78:	mov	r0, #20
    7b7c:	bl	20bc <newchunk>
    7b80:	str	r6, [r0]
    7b84:	str	r0, [sp, #80]	; 0x50
    7b88:	mov	r0, #20
    7b8c:	bl	20bc <newchunk>
    7b90:	mov	r1, #96	; 0x60
    7b94:	str	r1, [r0]
    7b98:	str	r0, [sp, #84]	; 0x54
    7b9c:	str	r9, [r0, #12]
    7ba0:	mov	r0, #20
    7ba4:	bl	20bc <newchunk>
    7ba8:	mov	r1, #5
    7bac:	str	r1, [r0]
    7bb0:	mvn	r1, #17
    7bb4:	str	r0, [sp, #88]	; 0x58
    7bb8:	str	r1, [r0, #12]
    7bbc:	ldr	r0, [sp, #84]	; 0x54
    7bc0:	ldr	r1, [sp, #88]	; 0x58
    7bc4:	str	r1, [r0, #8]
    7bc8:	add	r0, sl, #20
    7bcc:	ldr	r1, [r0, r7, lsl #2]
    7bd0:	ldr	r2, [sp, #44]	; 0x2c
    7bd4:	add	r7, r7, #1
    7bd8:	cmp	r7, #4
    7bdc:	str	r2, [r1, #4]
    7be0:	bne	7bcc <gen_protochain+0x424>
    7be4:	mov	r7, #21
    7be8:	b	7c0c <gen_protochain+0x464>
    7bec:	mov	r1, #4
    7bf0:	mov	r7, #6
    7bf4:	str	r1, [r0]
    7bf8:	str	r0, [sp, #28]
    7bfc:	str	r5, [r0, #12]
    7c00:	ldr	r0, [sp, #24]
    7c04:	ldr	r1, [sp, #28]
    7c08:	str	r1, [r0, #8]
    7c0c:	mov	r0, #20
    7c10:	bl	20bc <newchunk>
    7c14:	mov	r1, #21
    7c18:	cmp	r5, #0
    7c1c:	str	r1, [r0]
    7c20:	mov	r1, #0
    7c24:	str	r0, [sl, r7, lsl #2]
    7c28:	str	r1, [r0, #4]
    7c2c:	ldr	r0, [sl, r7, lsl #2]
    7c30:	str	r1, [r0, #8]
    7c34:	mov	r1, #51	; 0x33
    7c38:	ldr	r0, [sl, r7, lsl #2]
    7c3c:	str	r1, [r0, #12]
    7c40:	ldrne	r0, [sl, r5, lsl #2]
    7c44:	ldrne	r1, [sl, r7, lsl #2]
    7c48:	strne	r1, [r0, #8]
    7c4c:	mov	r0, #20
    7c50:	bl	20bc <newchunk>
    7c54:	mov	r4, #135	; 0x87
    7c58:	add	r8, sl, r7, lsl #2
    7c5c:	str	r4, [r0]
    7c60:	str	r0, [r8, #4]
    7c64:	ldr	r1, [sl, r7, lsl #2]
    7c68:	str	r0, [r1, #4]
    7c6c:	mov	r0, #20
    7c70:	bl	20bc <newchunk>
    7c74:	mov	r6, #80	; 0x50
    7c78:	str	r6, [r0]
    7c7c:	ldr	r1, [pc, #560]	; 7eb4 <gen_protochain+0x70c>
    7c80:	ldr	r1, [pc, r1]
    7c84:	ldr	r2, [pc, #556]	; 7eb8 <gen_protochain+0x710>
    7c88:	ldr	r2, [pc, r2]
    7c8c:	str	r0, [r8, #8]
    7c90:	add	r1, r2, r1
    7c94:	str	r1, [r0, #12]
    7c98:	mov	r0, #20
    7c9c:	bl	20bc <newchunk>
    7ca0:	mov	r1, #2
    7ca4:	str	r1, [r0]
    7ca8:	str	r0, [r8, #12]
    7cac:	str	r9, [r0, #12]
    7cb0:	mov	r0, #20
    7cb4:	bl	20bc <newchunk>
    7cb8:	str	r4, [r0]
    7cbc:	str	r0, [r8, #16]
    7cc0:	ldr	r1, [r8, #12]
    7cc4:	str	r0, [r1, #4]
    7cc8:	mov	r0, #20
    7ccc:	bl	20bc <newchunk>
    7cd0:	mov	sl, #4
    7cd4:	mov	r1, #1
    7cd8:	str	sl, [r0]
    7cdc:	str	r0, [r8, #20]
    7ce0:	str	r1, [r0, #12]
    7ce4:	mov	r0, #20
    7ce8:	bl	20bc <newchunk>
    7cec:	mov	r5, #7
    7cf0:	str	r5, [r0]
    7cf4:	str	r0, [r8, #24]
    7cf8:	mov	r0, #20
    7cfc:	bl	20bc <newchunk>
    7d00:	str	r6, [r0]
    7d04:	str	r0, [r8, #28]
    7d08:	ldr	r1, [pc, #428]	; 7ebc <gen_protochain+0x714>
    7d0c:	ldr	r1, [pc, r1]
    7d10:	ldr	r2, [pc, #424]	; 7ec0 <gen_protochain+0x718>
    7d14:	ldr	r2, [pc, r2]
    7d18:	add	r1, r2, r1
    7d1c:	str	r1, [r0, #12]
    7d20:	mov	r0, #20
    7d24:	bl	20bc <newchunk>
    7d28:	orr	r4, r7, #8
    7d2c:	add	r1, sp, #8
    7d30:	str	sl, [r0]
    7d34:	str	r0, [r1, r4, lsl #2]
    7d38:	mov	r1, #2
    7d3c:	str	r1, [r0, #12]
    7d40:	mov	r0, #20
    7d44:	bl	20bc <newchunk>
    7d48:	mov	r1, #36	; 0x24
    7d4c:	str	r1, [r0]
    7d50:	add	r1, sp, #8
    7d54:	add	r6, r1, r4, lsl #2
    7d58:	str	r0, [r6, #4]
    7d5c:	str	sl, [r0, #12]
    7d60:	mov	r0, #20
    7d64:	bl	20bc <newchunk>
    7d68:	str	r5, [r0]
    7d6c:	str	r0, [r6, #8]
    7d70:	mov	r0, #20
    7d74:	bl	20bc <newchunk>
    7d78:	mov	r1, #96	; 0x60
    7d7c:	str	r1, [r0]
    7d80:	str	r0, [r6, #12]
    7d84:	str	r9, [r0, #12]
    7d88:	mov	r0, #20
    7d8c:	bl	20bc <newchunk>
    7d90:	mov	r1, #5
    7d94:	str	r1, [r0]
    7d98:	mvn	r1, #8
    7d9c:	str	r0, [r6, #16]
    7da0:	eor	r1, r7, r1
    7da4:	sub	r1, r1, #1
    7da8:	str	r1, [r0, #12]
    7dac:	mov	r0, #20
    7db0:	bl	20bc <newchunk>
    7db4:	add	r6, sp, #8
    7db8:	add	r1, r4, #5
    7dbc:	mov	r2, #0
    7dc0:	str	sl, [r0]
    7dc4:	str	r0, [r6, r1, lsl #2]
    7dc8:	str	r2, [r0, #12]
    7dcc:	ldr	r0, [r6, r1, lsl #2]
    7dd0:	ldr	r2, [sp, #24]
    7dd4:	str	r0, [r2, #4]
    7dd8:	ldr	r0, [r6, r7, lsl #2]
    7ddc:	ldr	r2, [r6, r1, lsl #2]
    7de0:	str	r2, [r0, #8]
    7de4:	ldr	r0, [r6, r1, lsl #2]
    7de8:	ldr	r2, [sp, #20]
    7dec:	str	r0, [r2, #4]
    7df0:	orr	r0, r6, #4
    7df4:	mov	r2, r1
    7df8:	ldmda	r0, {r3, r7}
    7dfc:	add	r0, r0, #4
    7e00:	subs	r2, r2, #1
    7e04:	str	r7, [r3, #16]
    7e08:	bne	7df8 <gen_protochain+0x650>
    7e0c:	ldr	r0, [r6, r1, lsl #2]
    7e10:	mov	r4, #0
    7e14:	str	r4, [r0, #16]
    7e18:	mov	r0, #208	; 0xd0
    7e1c:	bl	20bc <newchunk>
    7e20:	mov	r6, r0
    7e24:	mov	r0, #21
    7e28:	ldr	r1, [sp, #4]
    7e2c:	str	r0, [r6, #8]
    7e30:	str	r6, [r6, #96]	; 0x60
    7e34:	ldr	r0, [sp, #12]
    7e38:	str	r1, [r6, #20]
    7e3c:	mov	r1, r6
    7e40:	str	r0, [r6, #4]
    7e44:	ldr	r0, [pc, #120]	; 7ec4 <gen_protochain+0x71c>
    7e48:	add	r0, pc, r0
    7e4c:	str	r4, [r0, r9, lsl #2]
    7e50:	ldr	r0, [sp]
    7e54:	bl	3a60 <sf_gen_and>
    7e58:	mov	r0, r6
    7e5c:	sub	sp, fp, #28
    7e60:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    7e64:	ldr	r0, [pc, #16]	; 7e7c <gen_protochain+0x6d4>
    7e68:	add	r0, pc, r0
    7e6c:	bl	2028 <sf_bpf_error>
    7e70:	ldr	r0, [pc, #32]	; 7e98 <gen_protochain+0x6f0>
    7e74:	add	r0, pc, r0
    7e78:	bl	2028 <sf_bpf_error>
    7e7c:	.word	0x0000bf1c
    7e80:	.word	0x00028c48
    7e84:	.word	0x00029178
    7e88:	.word	0x00028bc4
    7e8c:	.word	0x00028bb8
    7e90:	.word	0x00028b90
    7e94:	.word	0x00028b8c
    7e98:	.word	0x0000bf5d
    7e9c:	.word	0x00028b24
    7ea0:	.word	0x00028b18
    7ea4:	.word	0x00028988
    7ea8:	.word	0x00028984
    7eac:	.word	0x00028908
    7eb0:	.word	0x00028904
    7eb4:	.word	0x000287bc
    7eb8:	.word	0x000287b8
    7ebc:	.word	0x00028730
    7ec0:	.word	0x0002872c
    7ec4:	.word	0x000286c8
    7ec8:	.word	0x0000c58e

00007ecc <sf_gen_mcode>:
    7ecc:	push	{r4, r5, r6, r7, fp, lr}
    7ed0:	add	fp, sp, #16
    7ed4:	sub	sp, sp, #16
    7ed8:	mov	r6, r1
    7edc:	add	r1, sp, #12
    7ee0:	mov	r4, r3
    7ee4:	mov	r7, r2
    7ee8:	mov	r5, r0
    7eec:	bl	c044 <__pcap_atoin>
    7ef0:	ldr	r1, [sp, #12]
    7ef4:	rsb	r0, r0, #32
    7ef8:	cmp	r6, #0
    7efc:	lsl	r0, r1, r0
    7f00:	str	r0, [sp, #12]
    7f04:	beq	7f48 <sf_gen_mcode+0x7c>
    7f08:	add	r1, sp, #8
    7f0c:	mov	r0, r6
    7f10:	bl	c044 <__pcap_atoin>
    7f14:	ldr	r2, [sp, #8]
    7f18:	rsb	r0, r0, #32
    7f1c:	lsl	r1, r2, r0
    7f20:	mvn	r2, r2, lsl r0
    7f24:	ldr	r0, [sp, #12]
    7f28:	str	r1, [sp, #8]
    7f2c:	tst	r0, r2
    7f30:	beq	7f74 <sf_gen_mcode+0xa8>
    7f34:	ldr	r0, [pc, #148]	; 7fd0 <sf_gen_mcode+0x104>
    7f38:	mov	r1, r5
    7f3c:	mov	r2, r6
    7f40:	add	r0, pc, r0
    7f44:	bl	2028 <sf_bpf_error>
    7f48:	cmp	r7, #33	; 0x21
    7f4c:	bge	7fb0 <sf_gen_mcode+0xe4>
    7f50:	rsb	r2, r7, #32
    7f54:	mvn	r3, #0
    7f58:	cmp	r7, #0
    7f5c:	mov	r1, r7
    7f60:	lslne	r1, r3, r2
    7f64:	mvn	r2, r1
    7f68:	str	r1, [sp, #8]
    7f6c:	tst	r0, r2
    7f70:	bne	7fbc <sf_gen_mcode+0xf0>
    7f74:	uxtb	r2, r4
    7f78:	cmp	r2, #2
    7f7c:	bne	7fa4 <sf_gen_mcode+0xd8>
    7f80:	lsr	r3, r4, #16
    7f84:	lsr	r2, r4, #8
    7f88:	mov	r7, #2
    7f8c:	uxtb	r2, r2
    7f90:	uxtb	r3, r3
    7f94:	str	r7, [sp]
    7f98:	bl	62ec <gen_host>
    7f9c:	sub	sp, fp, #16
    7fa0:	pop	{r4, r5, r6, r7, fp, pc}
    7fa4:	ldr	r0, [pc, #40]	; 7fd4 <sf_gen_mcode+0x108>
    7fa8:	add	r0, pc, r0
    7fac:	bl	2028 <sf_bpf_error>
    7fb0:	ldr	r0, [pc, #32]	; 7fd8 <sf_gen_mcode+0x10c>
    7fb4:	add	r0, pc, r0
    7fb8:	bl	2028 <sf_bpf_error>
    7fbc:	ldr	r0, [pc, #24]	; 7fdc <sf_gen_mcode+0x110>
    7fc0:	mov	r1, r5
    7fc4:	mov	r2, r7
    7fc8:	add	r0, pc, r0
    7fcc:	bl	2028 <sf_bpf_error>
    7fd0:	.word	0x0000ac20
    7fd4:	.word	0x0000ac17
    7fd8:	.word	0x0000abd1
    7fdc:	.word	0x0000abd7

00007fe0 <sf_gen_ncode>:
    7fe0:	push	{r4, r5, r6, r7, fp, lr}
    7fe4:	add	fp, sp, #16
    7fe8:	sub	sp, sp, #8
    7fec:	str	r1, [sp, #4]
    7ff0:	ubfx	r4, r2, #16, #8
    7ff4:	mov	r7, r2
    7ff8:	mov	r6, r0
    7ffc:	ubfx	r5, r2, #8, #8
    8000:	cmp	r0, #0
    8004:	beq	8020 <sf_gen_ncode+0x40>
    8008:	add	r1, sp, #4
    800c:	mov	r0, r6
    8010:	cmp	r5, #12
    8014:	bne	8028 <sf_gen_ncode+0x48>
    8018:	bl	c0a8 <__pcap_atodn>
    801c:	b	802c <sf_gen_ncode+0x4c>
    8020:	mov	r0, #32
    8024:	b	802c <sf_gen_ncode+0x4c>
    8028:	bl	c044 <__pcap_atoin>
    802c:	uxtb	r2, r7
    8030:	cmp	r2, #7
    8034:	bhi	81ec <sf_gen_ncode+0x20c>
    8038:	add	r3, pc, #8
    803c:	lsr	r1, r7, #8
    8040:	ldr	r7, [r3, r2, lsl #2]
    8044:	add	pc, r3, r7
    8048:	.word	0x00000020
    804c:	.word	0x00000020
    8050:	.word	0x00000020
    8054:	.word	0x0000007c
    8058:	.word	0x000001b0
    805c:	.word	0x00000144
    8060:	.word	0x000000d0
    8064:	.word	0x000000e0
    8068:	uxtb	r1, r1
    806c:	cmp	r1, #12
    8070:	beq	80a8 <sf_gen_ncode+0xc8>
    8074:	cmp	r1, #1
    8078:	beq	8208 <sf_gen_ncode+0x228>
    807c:	cmp	r6, #0
    8080:	cmpeq	r2, #2
    8084:	beq	81ac <sf_gen_ncode+0x1cc>
    8088:	rsb	r1, r0, #32
    808c:	ldr	r0, [sp, #4]
    8090:	mvn	r3, #0
    8094:	lsl	r0, r0, r1
    8098:	lsl	r1, r3, r1
    809c:	str	r0, [sp, #4]
    80a0:	str	r2, [sp]
    80a4:	b	80b4 <sf_gen_ncode+0xd4>
    80a8:	ldr	r0, [sp, #4]
    80ac:	str	r2, [sp]
    80b0:	mov	r1, #0
    80b4:	mov	r2, r5
    80b8:	mov	r3, r4
    80bc:	bl	62ec <gen_host>
    80c0:	b	819c <sf_gen_ncode+0x1bc>
    80c4:	uxtb	r0, r1
    80c8:	cmp	r0, #8
    80cc:	bcs	8214 <sf_gen_ncode+0x234>
    80d0:	mov	r2, #225	; 0xe1
    80d4:	mov	r3, #1
    80d8:	tst	r3, r2, lsr r0
    80dc:	beq	8214 <sf_gen_ncode+0x234>
    80e0:	lsl	r0, r1, #24
    80e4:	ldr	r1, [pc, #320]	; 822c <sf_gen_ncode+0x24c>
    80e8:	mov	r2, r4
    80ec:	add	r1, pc, r1
    80f0:	ldr	r6, [r1, r0, asr #22]
    80f4:	ldr	r0, [sp, #4]
    80f8:	mov	r1, r6
    80fc:	bl	7364 <gen_port>
    8100:	mov	r5, r0
    8104:	ldr	r0, [sp, #4]
    8108:	mov	r1, r6
    810c:	mov	r2, r4
    8110:	bl	7424 <gen_port6>
    8114:	b	8180 <sf_gen_ncode+0x1a0>
    8118:	ldr	r0, [sp, #4]
    811c:	mov	r1, r5
    8120:	bl	77a8 <gen_protochain>
    8124:	b	819c <sf_gen_ncode+0x1bc>
    8128:	uxtb	r0, r1
    812c:	cmp	r0, #8
    8130:	bcs	8220 <sf_gen_ncode+0x240>
    8134:	mov	r2, #225	; 0xe1
    8138:	mov	r3, #1
    813c:	tst	r3, r2, lsr r0
    8140:	beq	8220 <sf_gen_ncode+0x240>
    8144:	lsl	r0, r1, #24
    8148:	ldr	r1, [pc, #224]	; 8230 <sf_gen_ncode+0x250>
    814c:	mov	r3, r4
    8150:	add	r1, pc, r1
    8154:	ldr	r6, [r1, r0, asr #22]
    8158:	ldr	r0, [sp, #4]
    815c:	mov	r1, r0
    8160:	mov	r2, r6
    8164:	bl	74e4 <gen_portrange>
    8168:	mov	r5, r0
    816c:	ldr	r0, [sp, #4]
    8170:	mov	r2, r6
    8174:	mov	r3, r4
    8178:	mov	r1, r0
    817c:	bl	75b8 <gen_portrange6>
    8180:	mov	r1, r5
    8184:	bl	3b3c <sf_gen_or>
    8188:	b	81a0 <sf_gen_ncode+0x1c0>
    818c:	ldr	r0, [sp, #4]
    8190:	mov	r1, r5
    8194:	mov	r2, r4
    8198:	bl	4070 <gen_proto>
    819c:	mov	r5, r0
    81a0:	mov	r0, r5
    81a4:	sub	sp, fp, #16
    81a8:	pop	{r4, r5, r6, r7, fp, pc}
    81ac:	ldr	r0, [sp, #4]
    81b0:	movw	r7, #65534	; 0xfffe
    81b4:	mvn	r1, #0
    81b8:	movt	r7, #255	; 0xff
    81bc:	sub	r3, r0, #1
    81c0:	cmp	r3, r7
    81c4:	bhi	80a0 <sf_gen_ncode+0xc0>
    81c8:	mvn	r3, #0
    81cc:	mvn	r7, #-16777216	; 0xff000000
    81d0:	mvn	r1, #0
    81d4:	add	r6, r3, r0, lsl #8
    81d8:	lsl	r1, r1, #8
    81dc:	lsl	r0, r0, #8
    81e0:	cmp	r6, r7
    81e4:	bcc	81d4 <sf_gen_ncode+0x1f4>
    81e8:	b	809c <sf_gen_ncode+0xbc>
    81ec:	cmp	r2, #255	; 0xff
    81f0:	bne	8204 <sf_gen_ncode+0x224>
    81f4:	bl	2eb0 <syntax>
    81f8:	ldr	r0, [pc, #52]	; 8234 <sf_gen_ncode+0x254>
    81fc:	add	r0, pc, r0
    8200:	bl	2028 <sf_bpf_error>
    8204:	bl	fc4 <abort@plt>
    8208:	ldr	r0, [pc, #40]	; 8238 <sf_gen_ncode+0x258>
    820c:	add	r0, pc, r0
    8210:	bl	2028 <sf_bpf_error>
    8214:	ldr	r0, [pc, #32]	; 823c <sf_gen_ncode+0x25c>
    8218:	add	r0, pc, r0
    821c:	bl	2028 <sf_bpf_error>
    8220:	ldr	r0, [pc, #24]	; 8240 <sf_gen_ncode+0x260>
    8224:	add	r0, pc, r0
    8228:	bl	2028 <sf_bpf_error>
    822c:	.word	0x0000bd3c
    8230:	.word	0x0000bcd8
    8234:	.word	0x0000a9fc
    8238:	.word	0x0000a9d1
    823c:	.word	0x0000a818
    8240:	.word	0x0000a86e

00008244 <sf_gen_mcode6>:
    8244:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    8248:	add	fp, sp, #28
    824c:	sub	sp, sp, #28
    8250:	cmp	r1, #0
    8254:	bne	839c <sf_gen_mcode6+0x158>
    8258:	mov	sl, r3
    825c:	mov	r6, r2
    8260:	mov	r5, r0
    8264:	bl	bd44 <pcap_nametoaddrinfo>
    8268:	cmp	r0, #0
    826c:	beq	83a8 <sf_gen_mcode6+0x164>
    8270:	mov	r4, r0
    8274:	ldr	r0, [pc, #360]	; 83e4 <sf_gen_mcode6+0x1a0>
    8278:	add	r0, pc, r0
    827c:	str	r4, [r0]
    8280:	ldr	r0, [r4, #28]
    8284:	cmp	r0, #0
    8288:	bne	83b8 <sf_gen_mcode6+0x174>
    828c:	cmp	r6, #129	; 0x81
    8290:	str	r5, [sp, #4]
    8294:	bcs	83c8 <sf_gen_mcode6+0x184>
    8298:	ldr	r8, [r4, #20]
    829c:	add	r7, sp, #8
    82a0:	vmov.i32	q8, #0	; 0x00000000
    82a4:	mov	r1, #255	; 0xff
    82a8:	vst1.64	{d16-d17}, [r7]
    82ac:	ubfx	r5, r6, #3, #5
    82b0:	mov	r0, r7
    82b4:	mov	r2, r5
    82b8:	add	r9, r8, #8
    82bc:	bl	f40 <memset@plt>
    82c0:	ands	r0, r6, #7
    82c4:	rsbne	r0, r0, #8
    82c8:	movne	r1, #255	; 0xff
    82cc:	lslne	r0, r1, r0
    82d0:	strbne	r0, [r7, r5]
    82d4:	ldr	r1, [sp, #8]
    82d8:	ldr	r0, [r9]
    82dc:	mvn	r1, r1
    82e0:	tst	r0, r1
    82e4:	ldreq	r1, [sp, #12]
    82e8:	ldreq	r0, [r8, #12]
    82ec:	mvneq	r1, r1
    82f0:	tsteq	r0, r1
    82f4:	bne	831c <sf_gen_mcode6+0xd8>
    82f8:	ldr	r1, [sp, #16]
    82fc:	ldr	r0, [r8, #16]
    8300:	mvn	r1, r1
    8304:	tst	r0, r1
    8308:	ldreq	r1, [sp, #20]
    830c:	ldreq	r0, [r8, #20]
    8310:	mvneq	r1, r1
    8314:	tsteq	r0, r1
    8318:	beq	8330 <sf_gen_mcode6+0xec>
    831c:	ldr	r0, [pc, #220]	; 8400 <sf_gen_mcode6+0x1bc>
    8320:	ldr	r1, [sp, #4]
    8324:	mov	r2, r6
    8328:	add	r0, pc, r0
    832c:	bl	2028 <sf_bpf_error>
    8330:	uxtb	r0, sl
    8334:	cmp	r0, #2
    8338:	bcs	8350 <sf_gen_mcode6+0x10c>
    833c:	cmp	r6, #128	; 0x80
    8340:	beq	8354 <sf_gen_mcode6+0x110>
    8344:	ldr	r0, [pc, #184]	; 8404 <sf_gen_mcode6+0x1c0>
    8348:	add	r0, pc, r0
    834c:	bl	2028 <sf_bpf_error>
    8350:	bne	83d8 <sf_gen_mcode6+0x194>
    8354:	lsr	r2, sl, #8
    8358:	lsr	r1, sl, #16
    835c:	str	r0, [sp]
    8360:	mov	r0, r9
    8364:	uxtb	r3, r1
    8368:	uxtb	r2, r2
    836c:	add	r1, sp, #8
    8370:	bl	7078 <gen_host6>
    8374:	ldr	r1, [pc, #112]	; 83ec <sf_gen_mcode6+0x1a8>
    8378:	mov	r5, r0
    837c:	mov	r0, #0
    8380:	add	r1, pc, r1
    8384:	str	r0, [r1]
    8388:	mov	r0, r4
    838c:	bl	f94 <freeaddrinfo@plt>
    8390:	mov	r0, r5
    8394:	sub	sp, fp, #28
    8398:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    839c:	ldr	r0, [pc, #76]	; 83f0 <sf_gen_mcode6+0x1ac>
    83a0:	add	r0, pc, r0
    83a4:	bl	2028 <sf_bpf_error>
    83a8:	ldr	r0, [pc, #68]	; 83f4 <sf_gen_mcode6+0x1b0>
    83ac:	mov	r1, r5
    83b0:	add	r0, pc, r0
    83b4:	bl	2028 <sf_bpf_error>
    83b8:	ldr	r0, [pc, #56]	; 83f8 <sf_gen_mcode6+0x1b4>
    83bc:	mov	r1, r5
    83c0:	add	r0, pc, r0
    83c4:	bl	2028 <sf_bpf_error>
    83c8:	ldr	r0, [pc, #44]	; 83fc <sf_gen_mcode6+0x1b8>
    83cc:	mov	r1, #128	; 0x80
    83d0:	add	r0, pc, r0
    83d4:	bl	2028 <sf_bpf_error>
    83d8:	ldr	r0, [pc, #8]	; 83e8 <sf_gen_mcode6+0x1a4>
    83dc:	add	r0, pc, r0
    83e0:	bl	2028 <sf_bpf_error>
    83e4:	.word	0x000281ac
    83e8:	.word	0x0000a89c
    83ec:	.word	0x000280a4
    83f0:	.word	0x0000a872
    83f4:	.word	0x0000a877
    83f8:	.word	0x0000a87e
    83fc:	.word	0x0000a88e
    8400:	.word	0x0000a877
    8404:	.word	0x0000a877

00008408 <sf_gen_ecode>:
    8408:	push	{r4, r5, r6, r7, fp, lr}
    840c:	add	fp, sp, #16
    8410:	mov	r4, r0
    8414:	movw	r0, #65534	; 0xfffe
    8418:	and	r0, r1, r0
    841c:	cmp	r0, #256	; 0x100
    8420:	bne	857c <sf_gen_ecode+0x174>
    8424:	ldr	r0, [pc, #360]	; 8594 <sf_gen_ecode+0x18c>
    8428:	lsr	r7, r1, #16
    842c:	ldr	r0, [pc, r0]
    8430:	cmp	r0, #118	; 0x76
    8434:	ble	8484 <sf_gen_ecode+0x7c>
    8438:	sub	r1, r0, #119	; 0x77
    843c:	cmp	r1, #8
    8440:	bhi	84a4 <sf_gen_ecode+0x9c>
    8444:	add	r0, pc, #4
    8448:	ldr	r1, [r0, r1, lsl #2]
    844c:	add	pc, r0, r1
    8450:	.word	0x0000011c
    8454:	.word	0x00000138
    8458:	.word	0x00000138
    845c:	.word	0x00000024
    8460:	.word	0x0000007c
    8464:	.word	0x00000138
    8468:	.word	0x00000138
    846c:	.word	0x00000138
    8470:	.word	0x0000011c
    8474:	uxtb	r1, r7
    8478:	mov	r0, r4
    847c:	pop	{r4, r5, r6, r7, fp, lr}
    8480:	b	6f98 <gen_ipfchostop>
    8484:	cmp	r0, #9
    8488:	bgt	84b4 <sf_gen_ecode+0xac>
    848c:	cmp	r0, #1
    8490:	bne	854c <sf_gen_ecode+0x144>
    8494:	uxtb	r1, r7
    8498:	mov	r0, r4
    849c:	pop	{r4, r5, r6, r7, fp, lr}
    84a0:	b	6694 <gen_ehostop>
    84a4:	cmp	r0, #163	; 0xa3
    84a8:	cmpne	r0, #192	; 0xc0
    84ac:	beq	856c <sf_gen_ecode+0x164>
    84b0:	b	8588 <sf_gen_ecode+0x180>
    84b4:	cmp	r0, #10
    84b8:	bne	8564 <sf_gen_ecode+0x15c>
    84bc:	uxtb	r1, r7
    84c0:	mov	r0, r4
    84c4:	pop	{r4, r5, r6, r7, fp, lr}
    84c8:	b	67ac <gen_fhostop>
    84cc:	ldr	r0, [pc, #200]	; 859c <sf_gen_ecode+0x194>
    84d0:	add	r0, pc, r0
    84d4:	ldrb	r0, [r0]
    84d8:	cmp	r0, #1
    84dc:	bne	857c <sf_gen_ecode+0x174>
    84e0:	mov	r0, #1
    84e4:	mov	r1, #4
    84e8:	mov	r2, #8
    84ec:	bl	9a88 <gen_load_a>
    84f0:	mov	r5, r0
    84f4:	mov	r0, #208	; 0xd0
    84f8:	bl	20bc <newchunk>
    84fc:	mov	r6, r0
    8500:	mov	r0, #21
    8504:	uxtb	r1, r7
    8508:	str	r5, [r6, #4]
    850c:	str	r0, [r6, #8]
    8510:	mov	r0, #65280	; 0xff00
    8514:	str	r0, [r6, #20]
    8518:	ldr	r0, [r6, #44]	; 0x2c
    851c:	clz	r0, r0
    8520:	lsr	r0, r0, #5
    8524:	str	r0, [r6, #44]	; 0x2c
    8528:	mov	r0, r4
    852c:	str	r6, [r6, #96]	; 0x60
    8530:	bl	6694 <gen_ehostop>
    8534:	mov	r4, r0
    8538:	mov	r0, r6
    853c:	mov	r1, r4
    8540:	bl	3a60 <sf_gen_and>
    8544:	mov	r0, r4
    8548:	pop	{r4, r5, r6, r7, fp, pc}
    854c:	cmp	r0, #6
    8550:	bne	8588 <sf_gen_ecode+0x180>
    8554:	uxtb	r1, r7
    8558:	mov	r0, r4
    855c:	pop	{r4, r5, r6, r7, fp, lr}
    8560:	b	688c <gen_thostop>
    8564:	cmp	r0, #105	; 0x69
    8568:	bne	8588 <sf_gen_ecode+0x180>
    856c:	uxtb	r1, r7
    8570:	mov	r0, r4
    8574:	pop	{r4, r5, r6, r7, fp, lr}
    8578:	b	696c <gen_wlanhostop>
    857c:	ldr	r0, [pc, #28]	; 85a0 <sf_gen_ecode+0x198>
    8580:	add	r0, pc, r0
    8584:	bl	2028 <sf_bpf_error>
    8588:	ldr	r0, [pc, #8]	; 8598 <sf_gen_ecode+0x190>
    858c:	add	r0, pc, r0
    8590:	bl	2028 <sf_bpf_error>
    8594:	.word	0x00028004
    8598:	.word	0x0000a713
    859c:	.word	0x00027f64
    85a0:	.word	0x0000a77b

000085a4 <sf_append>:
    85a4:	mov	r2, r0
    85a8:	ldr	r0, [r0, #16]
    85ac:	cmp	r0, #0
    85b0:	bne	85a4 <sf_append>
    85b4:	str	r1, [r2, #16]
    85b8:	bx	lr

000085bc <sf_gen_load>:
    85bc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    85c0:	add	fp, sp, #24
    85c4:	mov	r7, r2
    85c8:	mov	r4, r1
    85cc:	mov	r6, r0
    85d0:	bl	8afc <alloc_reg>
    85d4:	mov	r8, r0
    85d8:	ldr	r0, [r4, #8]
    85dc:	ldr	r1, [pc, #1264]	; 8ad4 <sf_gen_load+0x518>
    85e0:	cmp	r7, #1
    85e4:	mov	r2, #0
    85e8:	add	r1, pc, r1
    85ec:	str	r2, [r1, r0, lsl #2]
    85f0:	beq	8614 <sf_gen_load+0x58>
    85f4:	cmp	r7, #2
    85f8:	beq	860c <sf_gen_load+0x50>
    85fc:	cmp	r7, #4
    8600:	bne	8abc <sf_gen_load+0x500>
    8604:	mov	r5, #64	; 0x40
    8608:	b	8618 <sf_gen_load+0x5c>
    860c:	mov	r5, #72	; 0x48
    8610:	b	8618 <sf_gen_load+0x5c>
    8614:	mov	r5, #80	; 0x50
    8618:	sub	r0, r6, #1
    861c:	cmp	r0, #39	; 0x27
    8620:	bhi	8ab0 <sf_gen_load+0x4f4>
    8624:	add	r1, pc, #4
    8628:	ldr	r0, [r1, r0, lsl #2]
    862c:	add	pc, r1, r0
    8630:	.word	0x0000037c
    8634:	.word	0x000000a0
    8638:	.word	0x000000a0
    863c:	.word	0x000000a0
    8640:	.word	0x00000134
    8644:	.word	0x00000134
    8648:	.word	0x00000134
    864c:	.word	0x00000134
    8650:	.word	0x00000134
    8654:	.word	0x00000134
    8658:	.word	0x000000a0
    865c:	.word	0x000000a0
    8660:	.word	0x000000a0
    8664:	.word	0x000000a0
    8668:	.word	0x000000a0
    866c:	.word	0x000000a0
    8670:	.word	0x000000a0
    8674:	.word	0x00000498
    8678:	.word	0x00000480
    867c:	.word	0x00000480
    8680:	.word	0x00000134
    8684:	.word	0x00000134
    8688:	.word	0x00000480
    868c:	.word	0x00000480
    8690:	.word	0x00000480
    8694:	.word	0x00000480
    8698:	.word	0x00000480
    869c:	.word	0x00000480
    86a0:	.word	0x00000480
    86a4:	.word	0x00000480
    86a8:	.word	0x00000480
    86ac:	.word	0x00000480
    86b0:	.word	0x00000480
    86b4:	.word	0x00000480
    86b8:	.word	0x00000480
    86bc:	.word	0x00000480
    86c0:	.word	0x00000480
    86c4:	.word	0x00000480
    86c8:	.word	0x00000480
    86cc:	.word	0x00000310
    86d0:	bl	8c00 <gen_off_macpl>
    86d4:	mov	r7, r0
    86d8:	mov	r0, #20
    86dc:	bl	20bc <newchunk>
    86e0:	cmp	r7, #0
    86e4:	beq	887c <sf_gen_load+0x2c0>
    86e8:	mov	r1, #96	; 0x60
    86ec:	mov	r2, r7
    86f0:	str	r1, [r0]
    86f4:	ldr	r1, [r4, #8]
    86f8:	str	r1, [r0, #12]
    86fc:	mov	r1, r2
    8700:	ldr	r2, [r2, #16]
    8704:	cmp	r2, #0
    8708:	bne	86fc <sf_gen_load+0x140>
    870c:	str	r0, [r1, #16]
    8710:	mov	r0, #20
    8714:	bl	20bc <newchunk>
    8718:	mov	r1, #12
    871c:	mov	r2, r7
    8720:	str	r1, [r0]
    8724:	mov	r1, r2
    8728:	ldr	r2, [r2, #16]
    872c:	cmp	r2, #0
    8730:	bne	8724 <sf_gen_load+0x168>
    8734:	str	r0, [r1, #16]
    8738:	mov	r0, #20
    873c:	bl	20bc <newchunk>
    8740:	mov	r1, #7
    8744:	mov	r2, r7
    8748:	str	r1, [r0]
    874c:	mov	r1, r2
    8750:	ldr	r2, [r2, #16]
    8754:	cmp	r2, #0
    8758:	bne	874c <sf_gen_load+0x190>
    875c:	str	r0, [r1, #16]
    8760:	b	8890 <sf_gen_load+0x2d4>
    8764:	bl	8c74 <gen_loadx_iphdrlen>
    8768:	mov	r7, r0
    876c:	mov	r0, #20
    8770:	bl	20bc <newchunk>
    8774:	mov	r1, #96	; 0x60
    8778:	mov	r2, r7
    877c:	str	r1, [r0]
    8780:	ldr	r1, [r4, #8]
    8784:	str	r1, [r0, #12]
    8788:	mov	r1, r2
    878c:	ldr	r2, [r2, #16]
    8790:	cmp	r2, #0
    8794:	bne	8788 <sf_gen_load+0x1cc>
    8798:	str	r0, [r1, #16]
    879c:	mov	r0, #20
    87a0:	bl	20bc <newchunk>
    87a4:	mov	r1, #12
    87a8:	mov	r2, r7
    87ac:	str	r1, [r0]
    87b0:	mov	r1, r2
    87b4:	ldr	r2, [r2, #16]
    87b8:	cmp	r2, #0
    87bc:	bne	87b0 <sf_gen_load+0x1f4>
    87c0:	str	r0, [r1, #16]
    87c4:	mov	r0, #20
    87c8:	bl	20bc <newchunk>
    87cc:	mov	r1, #7
    87d0:	mov	r2, r7
    87d4:	str	r1, [r0]
    87d8:	mov	r1, r2
    87dc:	ldr	r2, [r2, #16]
    87e0:	cmp	r2, #0
    87e4:	bne	87d8 <sf_gen_load+0x21c>
    87e8:	str	r0, [r1, #16]
    87ec:	mov	r0, #20
    87f0:	bl	20bc <newchunk>
    87f4:	mov	r2, r7
    87f8:	str	r5, [r0]
    87fc:	mov	r1, r2
    8800:	ldr	r2, [r2, #16]
    8804:	cmp	r2, #0
    8808:	bne	87fc <sf_gen_load+0x240>
    880c:	str	r0, [r1, #16]
    8810:	ldr	r1, [pc, #724]	; 8aec <sf_gen_load+0x530>
    8814:	ldr	r1, [pc, r1]
    8818:	ldr	r2, [pc, #720]	; 8af0 <sf_gen_load+0x534>
    881c:	ldr	r2, [pc, r2]
    8820:	add	r1, r2, r1
    8824:	str	r1, [r0, #12]
    8828:	ldr	r0, [r4, #4]
    882c:	mov	r1, r0
    8830:	ldr	r0, [r0, #16]
    8834:	cmp	r0, #0
    8838:	bne	882c <sf_gen_load+0x270>
    883c:	mov	r0, r6
    8840:	str	r7, [r1, #16]
    8844:	bl	3c08 <sf_gen_proto_abbrev>
    8848:	mov	r7, r0
    884c:	bl	5568 <gen_ipfrag>
    8850:	mov	r6, r0
    8854:	mov	r0, r7
    8858:	mov	r1, r6
    885c:	bl	3a60 <sf_gen_and>
    8860:	ldr	r0, [r4]
    8864:	cmp	r0, #0
    8868:	movne	r1, r6
    886c:	blne	3a60 <sf_gen_and>
    8870:	mov	r0, #2048	; 0x800
    8874:	bl	446c <gen_linktype>
    8878:	b	88fc <sf_gen_load+0x340>
    887c:	mov	r1, #97	; 0x61
    8880:	mov	r7, r0
    8884:	str	r1, [r0]
    8888:	ldr	r1, [r4, #8]
    888c:	str	r1, [r0, #12]
    8890:	mov	r0, #20
    8894:	bl	20bc <newchunk>
    8898:	str	r5, [r0]
    889c:	ldr	r1, [pc, #576]	; 8ae4 <sf_gen_load+0x528>
    88a0:	ldr	r1, [pc, r1]
    88a4:	ldr	r2, [pc, #572]	; 8ae8 <sf_gen_load+0x52c>
    88a8:	ldr	r2, [pc, r2]
    88ac:	add	r1, r2, r1
    88b0:	mov	r2, r7
    88b4:	str	r1, [r0, #12]
    88b8:	mov	r1, r2
    88bc:	ldr	r2, [r2, #16]
    88c0:	cmp	r2, #0
    88c4:	bne	88b8 <sf_gen_load+0x2fc>
    88c8:	str	r0, [r1, #16]
    88cc:	ldr	r0, [r4, #4]
    88d0:	mov	r1, r0
    88d4:	ldr	r0, [r0, #16]
    88d8:	cmp	r0, #0
    88dc:	bne	88d0 <sf_gen_load+0x314>
    88e0:	mov	r0, r6
    88e4:	str	r7, [r1, #16]
    88e8:	bl	3c08 <sf_gen_proto_abbrev>
    88ec:	mov	r6, r0
    88f0:	ldr	r0, [r4]
    88f4:	cmp	r0, #0
    88f8:	beq	8904 <sf_gen_load+0x348>
    88fc:	mov	r1, r6
    8900:	bl	3a60 <sf_gen_and>
    8904:	str	r6, [r4]
    8908:	mov	r0, #20
    890c:	str	r8, [r4, #8]
    8910:	bl	20bc <newchunk>
    8914:	mov	r1, #2
    8918:	str	r1, [r0]
    891c:	str	r8, [r0, #12]
    8920:	ldr	r1, [r4, #4]
    8924:	mov	r2, r1
    8928:	ldr	r1, [r1, #16]
    892c:	cmp	r1, #0
    8930:	bne	8924 <sf_gen_load+0x368>
    8934:	str	r0, [r2, #16]
    8938:	mov	r0, r4
    893c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    8940:	ldr	r0, [pc, #408]	; 8ae0 <sf_gen_load+0x524>
    8944:	ldr	r0, [pc, r0]
    8948:	cmp	r0, #119	; 0x77
    894c:	cmpne	r0, #127	; 0x7f
    8950:	bne	8a9c <sf_gen_load+0x4e0>
    8954:	mov	r0, #20
    8958:	bl	20bc <newchunk>
    895c:	mov	r6, r0
    8960:	mov	r0, #97	; 0x61
    8964:	str	r0, [r6]
    8968:	ldr	r0, [r4, #8]
    896c:	str	r0, [r6, #12]
    8970:	mov	r0, #20
    8974:	bl	20bc <newchunk>
    8978:	mov	r2, r6
    897c:	str	r5, [r0]
    8980:	mov	r1, r2
    8984:	ldr	r2, [r2, #16]
    8988:	cmp	r2, #0
    898c:	bne	8980 <sf_gen_load+0x3c4>
    8990:	str	r0, [r1, #16]
    8994:	ldr	r0, [r4, #4]
    8998:	mov	r1, r0
    899c:	ldr	r0, [r0, #16]
    89a0:	cmp	r0, #0
    89a4:	bne	8998 <sf_gen_load+0x3dc>
    89a8:	b	8a94 <sf_gen_load+0x4d8>
    89ac:	bl	8b74 <gen_llprefixlen>
    89b0:	mov	r6, r0
    89b4:	mov	r0, #20
    89b8:	bl	20bc <newchunk>
    89bc:	cmp	r6, #0
    89c0:	beq	8a40 <sf_gen_load+0x484>
    89c4:	mov	r1, #96	; 0x60
    89c8:	mov	r2, r6
    89cc:	str	r1, [r0]
    89d0:	ldr	r1, [r4, #8]
    89d4:	str	r1, [r0, #12]
    89d8:	mov	r1, r2
    89dc:	ldr	r2, [r2, #16]
    89e0:	cmp	r2, #0
    89e4:	bne	89d8 <sf_gen_load+0x41c>
    89e8:	str	r0, [r1, #16]
    89ec:	mov	r0, #20
    89f0:	bl	20bc <newchunk>
    89f4:	mov	r1, #12
    89f8:	mov	r2, r6
    89fc:	str	r1, [r0]
    8a00:	mov	r1, r2
    8a04:	ldr	r2, [r2, #16]
    8a08:	cmp	r2, #0
    8a0c:	bne	8a00 <sf_gen_load+0x444>
    8a10:	str	r0, [r1, #16]
    8a14:	mov	r0, #20
    8a18:	bl	20bc <newchunk>
    8a1c:	mov	r1, #7
    8a20:	mov	r2, r6
    8a24:	str	r1, [r0]
    8a28:	mov	r1, r2
    8a2c:	ldr	r2, [r2, #16]
    8a30:	cmp	r2, #0
    8a34:	bne	8a28 <sf_gen_load+0x46c>
    8a38:	str	r0, [r1, #16]
    8a3c:	b	8a54 <sf_gen_load+0x498>
    8a40:	mov	r1, #97	; 0x61
    8a44:	mov	r6, r0
    8a48:	str	r1, [r0]
    8a4c:	ldr	r1, [r4, #8]
    8a50:	str	r1, [r0, #12]
    8a54:	mov	r0, #20
    8a58:	bl	20bc <newchunk>
    8a5c:	mov	r2, r6
    8a60:	mov	r1, #0
    8a64:	str	r5, [r0]
    8a68:	str	r1, [r0, #12]
    8a6c:	mov	r1, r2
    8a70:	ldr	r2, [r2, #16]
    8a74:	cmp	r2, #0
    8a78:	bne	8a6c <sf_gen_load+0x4b0>
    8a7c:	str	r0, [r1, #16]
    8a80:	ldr	r0, [r4, #4]
    8a84:	mov	r1, r0
    8a88:	ldr	r0, [r0, #16]
    8a8c:	cmp	r0, #0
    8a90:	bne	8a84 <sf_gen_load+0x4c8>
    8a94:	str	r6, [r1, #16]
    8a98:	b	8908 <sf_gen_load+0x34c>
    8a9c:	cmp	r0, #163	; 0xa3
    8aa0:	beq	8954 <sf_gen_load+0x398>
    8aa4:	ldr	r0, [pc, #76]	; 8af8 <sf_gen_load+0x53c>
    8aa8:	add	r0, pc, r0
    8aac:	bl	2028 <sf_bpf_error>
    8ab0:	ldr	r0, [pc, #36]	; 8adc <sf_gen_load+0x520>
    8ab4:	add	r0, pc, r0
    8ab8:	bl	2028 <sf_bpf_error>
    8abc:	ldr	r0, [pc, #20]	; 8ad8 <sf_gen_load+0x51c>
    8ac0:	add	r0, pc, r0
    8ac4:	bl	2028 <sf_bpf_error>
    8ac8:	ldr	r0, [pc, #36]	; 8af4 <sf_gen_load+0x538>
    8acc:	add	r0, pc, r0
    8ad0:	bl	2028 <sf_bpf_error>
    8ad4:	.word	0x00027f28
    8ad8:	.word	0x0000a269
    8adc:	.word	0x0000a292
    8ae0:	.word	0x00027aec
    8ae4:	.word	0x00027b9c
    8ae8:	.word	0x00027b98
    8aec:	.word	0x00027c28
    8af0:	.word	0x00027c24
    8af4:	.word	0x0000a2bf
    8af8:	.word	0x0000a2ba

00008afc <alloc_reg>:
    8afc:	ldr	r0, [pc, #96]	; 8b64 <alloc_reg+0x68>
    8b00:	mvn	r2, #15
    8b04:	ldr	r0, [pc, r0]
    8b08:	ldr	ip, [pc, #88]	; 8b68 <alloc_reg+0x6c>
    8b0c:	ldr	r3, [pc, #88]	; 8b6c <alloc_reg+0x70>
    8b10:	add	ip, pc, ip
    8b14:	add	r3, pc, r3
    8b18:	ldr	r1, [ip, r0, lsl #2]
    8b1c:	cmp	r1, #0
    8b20:	beq	8b58 <alloc_reg+0x5c>
    8b24:	add	r0, r0, #1
    8b28:	adds	r2, r2, #1
    8b2c:	asr	r1, r0, #31
    8b30:	add	r1, r0, r1, lsr #28
    8b34:	bic	r1, r1, #15
    8b38:	sub	r0, r0, r1
    8b3c:	str	r0, [r3]
    8b40:	bne	8b18 <alloc_reg+0x1c>
    8b44:	push	{fp, lr}
    8b48:	mov	fp, sp
    8b4c:	ldr	r0, [pc, #28]	; 8b70 <alloc_reg+0x74>
    8b50:	add	r0, pc, r0
    8b54:	bl	2028 <sf_bpf_error>
    8b58:	mov	r1, #1
    8b5c:	str	r1, [ip, r0, lsl #2]
    8b60:	bx	lr
    8b64:	.word	0x00027a08
    8b68:	.word	0x00027a00
    8b6c:	.word	0x000279f8
    8b70:	.word	0x0000b2a5

00008b74 <gen_llprefixlen>:
    8b74:	push	{fp, lr}
    8b78:	mov	fp, sp
    8b7c:	ldr	r1, [pc, #108]	; 8bf0 <gen_llprefixlen+0x7c>
    8b80:	mov	r0, #0
    8b84:	ldr	r1, [pc, r1]
    8b88:	cmp	r1, #162	; 0xa2
    8b8c:	bgt	8ba4 <gen_llprefixlen+0x30>
    8b90:	cmp	r1, #119	; 0x77
    8b94:	beq	8bb0 <gen_llprefixlen+0x3c>
    8b98:	cmp	r1, #127	; 0x7f
    8b9c:	popne	{fp, pc}
    8ba0:	b	8bb0 <gen_llprefixlen+0x3c>
    8ba4:	cmp	r1, #163	; 0xa3
    8ba8:	cmpne	r1, #192	; 0xc0
    8bac:	bne	8bec <gen_llprefixlen+0x78>
    8bb0:	ldr	r0, [pc, #60]	; 8bf4 <gen_llprefixlen+0x80>
    8bb4:	ldr	r0, [pc, r0]
    8bb8:	cmn	r0, #1
    8bbc:	bne	8bd0 <gen_llprefixlen+0x5c>
    8bc0:	bl	8afc <alloc_reg>
    8bc4:	ldr	r1, [pc, #44]	; 8bf8 <gen_llprefixlen+0x84>
    8bc8:	add	r1, pc, r1
    8bcc:	str	r0, [r1]
    8bd0:	mov	r0, #20
    8bd4:	bl	20bc <newchunk>
    8bd8:	mov	r1, #97	; 0x61
    8bdc:	str	r1, [r0]
    8be0:	ldr	r1, [pc, #20]	; 8bfc <gen_llprefixlen+0x88>
    8be4:	ldr	r1, [pc, r1]
    8be8:	str	r1, [r0, #12]
    8bec:	pop	{fp, pc}
    8bf0:	.word	0x000278ac
    8bf4:	.word	0x00027950
    8bf8:	.word	0x0002793c
    8bfc:	.word	0x00027920

00008c00 <gen_off_macpl>:
    8c00:	ldr	r0, [pc, #92]	; 8c64 <gen_off_macpl+0x64>
    8c04:	add	r0, pc, r0
    8c08:	ldrb	r1, [r0]
    8c0c:	mov	r0, #0
    8c10:	cmp	r1, #1
    8c14:	bxne	lr
    8c18:	push	{fp, lr}
    8c1c:	mov	fp, sp
    8c20:	ldr	r0, [pc, #64]	; 8c68 <gen_off_macpl+0x68>
    8c24:	ldr	r0, [pc, r0]
    8c28:	cmn	r0, #1
    8c2c:	bne	8c40 <gen_off_macpl+0x40>
    8c30:	bl	8afc <alloc_reg>
    8c34:	ldr	r1, [pc, #48]	; 8c6c <gen_off_macpl+0x6c>
    8c38:	add	r1, pc, r1
    8c3c:	str	r0, [r1]
    8c40:	mov	r0, #20
    8c44:	bl	20bc <newchunk>
    8c48:	mov	r1, #97	; 0x61
    8c4c:	str	r1, [r0]
    8c50:	ldr	r1, [pc, #24]	; 8c70 <gen_off_macpl+0x70>
    8c54:	ldr	r1, [pc, r1]
    8c58:	str	r1, [r0, #12]
    8c5c:	pop	{fp, lr}
    8c60:	bx	lr
    8c64:	.word	0x000278fc
    8c68:	.word	0x000278e4
    8c6c:	.word	0x000278d0
    8c70:	.word	0x000278b4

00008c74 <gen_loadx_iphdrlen>:
    8c74:	push	{r4, sl, fp, lr}
    8c78:	add	fp, sp, #8
    8c7c:	bl	8c00 <gen_off_macpl>
    8c80:	mov	r4, r0
    8c84:	mov	r0, #20
    8c88:	bl	20bc <newchunk>
    8c8c:	cmp	r4, #0
    8c90:	beq	8d74 <gen_loadx_iphdrlen+0x100>
    8c94:	mov	r1, #80	; 0x50
    8c98:	mov	r2, r4
    8c9c:	str	r1, [r0]
    8ca0:	ldr	r1, [pc, #248]	; 8da0 <gen_loadx_iphdrlen+0x12c>
    8ca4:	ldr	r1, [pc, r1]
    8ca8:	str	r1, [r0, #12]
    8cac:	mov	r1, r2
    8cb0:	ldr	r2, [r2, #16]
    8cb4:	cmp	r2, #0
    8cb8:	bne	8cac <gen_loadx_iphdrlen+0x38>
    8cbc:	str	r0, [r1, #16]
    8cc0:	mov	r0, #20
    8cc4:	bl	20bc <newchunk>
    8cc8:	mov	r1, #84	; 0x54
    8ccc:	mov	r2, r4
    8cd0:	str	r1, [r0]
    8cd4:	mov	r1, #15
    8cd8:	str	r1, [r0, #12]
    8cdc:	mov	r1, r2
    8ce0:	ldr	r2, [r2, #16]
    8ce4:	cmp	r2, #0
    8ce8:	bne	8cdc <gen_loadx_iphdrlen+0x68>
    8cec:	str	r0, [r1, #16]
    8cf0:	mov	r0, #20
    8cf4:	bl	20bc <newchunk>
    8cf8:	mov	r1, #100	; 0x64
    8cfc:	mov	r2, r4
    8d00:	str	r1, [r0]
    8d04:	mov	r1, #2
    8d08:	str	r1, [r0, #12]
    8d0c:	mov	r1, r2
    8d10:	ldr	r2, [r2, #16]
    8d14:	cmp	r2, #0
    8d18:	bne	8d0c <gen_loadx_iphdrlen+0x98>
    8d1c:	str	r0, [r1, #16]
    8d20:	mov	r0, #20
    8d24:	bl	20bc <newchunk>
    8d28:	mov	r1, #12
    8d2c:	mov	r2, r4
    8d30:	str	r1, [r0]
    8d34:	mov	r1, r2
    8d38:	ldr	r2, [r2, #16]
    8d3c:	cmp	r2, #0
    8d40:	bne	8d34 <gen_loadx_iphdrlen+0xc0>
    8d44:	str	r0, [r1, #16]
    8d48:	mov	r0, #20
    8d4c:	bl	20bc <newchunk>
    8d50:	mov	r1, #7
    8d54:	mov	r2, r4
    8d58:	str	r1, [r0]
    8d5c:	mov	r1, r2
    8d60:	ldr	r2, [r2, #16]
    8d64:	cmp	r2, #0
    8d68:	bne	8d5c <gen_loadx_iphdrlen+0xe8>
    8d6c:	str	r0, [r1, #16]
    8d70:	b	8d98 <gen_loadx_iphdrlen+0x124>
    8d74:	mov	r1, #177	; 0xb1
    8d78:	mov	r4, r0
    8d7c:	str	r1, [r0]
    8d80:	ldr	r1, [pc, #28]	; 8da4 <gen_loadx_iphdrlen+0x130>
    8d84:	ldr	r1, [pc, r1]
    8d88:	ldr	r2, [pc, #24]	; 8da8 <gen_loadx_iphdrlen+0x134>
    8d8c:	ldr	r2, [pc, r2]
    8d90:	add	r1, r2, r1
    8d94:	str	r1, [r0, #12]
    8d98:	mov	r0, r4
    8d9c:	pop	{r4, sl, fp, pc}
    8da0:	.word	0x0002779c
    8da4:	.word	0x000276b8
    8da8:	.word	0x000276b4

00008dac <sf_gen_relation>:
    8dac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    8db0:	add	fp, sp, #28
    8db4:	sub	sp, sp, #4
    8db8:	mov	r6, r0
    8dbc:	mov	r0, #20
    8dc0:	mov	r9, r3
    8dc4:	mov	r5, r2
    8dc8:	mov	r8, r1
    8dcc:	bl	20bc <newchunk>
    8dd0:	mov	r7, r0
    8dd4:	mov	r0, #97	; 0x61
    8dd8:	str	r0, [r7]
    8ddc:	ldr	r0, [r5, #8]
    8de0:	str	r0, [r7, #12]
    8de4:	mov	r0, #20
    8de8:	bl	20bc <newchunk>
    8dec:	mov	r4, r0
    8df0:	mov	r0, #96	; 0x60
    8df4:	cmp	r6, #16
    8df8:	str	r0, [r4]
    8dfc:	ldr	r0, [r8, #8]
    8e00:	str	r0, [r4, #12]
    8e04:	bne	8e50 <sf_gen_relation+0xa4>
    8e08:	mov	r0, #20
    8e0c:	bl	20bc <newchunk>
    8e10:	mov	sl, r0
    8e14:	mov	r0, #28
    8e18:	str	r0, [sl]
    8e1c:	mov	r0, #208	; 0xd0
    8e20:	bl	20bc <newchunk>
    8e24:	mov	r6, r0
    8e28:	mov	r0, #21
    8e2c:	mov	r1, r4
    8e30:	str	r0, [r6, #8]
    8e34:	str	r6, [r6, #96]	; 0x60
    8e38:	mov	r0, r1
    8e3c:	ldr	r1, [r1, #16]
    8e40:	cmp	r1, #0
    8e44:	bne	8e38 <sf_gen_relation+0x8c>
    8e48:	str	sl, [r0, #16]
    8e4c:	b	8e68 <sf_gen_relation+0xbc>
    8e50:	mov	r0, #208	; 0xd0
    8e54:	orr	sl, r6, #13
    8e58:	bl	20bc <newchunk>
    8e5c:	mov	r6, r0
    8e60:	str	sl, [r0, #8]
    8e64:	str	r0, [r0, #96]	; 0x60
    8e68:	cmp	r9, #0
    8e6c:	mov	r1, r7
    8e70:	ldrne	r0, [r6, #44]	; 0x2c
    8e74:	clzne	r0, r0
    8e78:	lsrne	r0, r0, #5
    8e7c:	strne	r0, [r6, #44]	; 0x2c
    8e80:	mov	r0, r1
    8e84:	ldr	r1, [r1, #16]
    8e88:	cmp	r1, #0
    8e8c:	bne	8e80 <sf_gen_relation+0xd4>
    8e90:	str	r4, [r0, #16]
    8e94:	ldr	r0, [r5, #4]
    8e98:	mov	r1, r0
    8e9c:	ldr	r0, [r0, #16]
    8ea0:	cmp	r0, #0
    8ea4:	bne	8e98 <sf_gen_relation+0xec>
    8ea8:	str	r7, [r1, #16]
    8eac:	ldr	r0, [r5, #4]
    8eb0:	ldr	r1, [r8, #4]
    8eb4:	mov	r2, r1
    8eb8:	ldr	r1, [r1, #16]
    8ebc:	cmp	r1, #0
    8ec0:	bne	8eb4 <sf_gen_relation+0x108>
    8ec4:	str	r0, [r2, #16]
    8ec8:	mov	r2, #0
    8ecc:	ldr	r0, [r8, #4]
    8ed0:	str	r0, [r6, #4]
    8ed4:	ldr	r0, [r8, #8]
    8ed8:	ldr	r1, [pc, #88]	; 8f38 <sf_gen_relation+0x18c>
    8edc:	add	r1, pc, r1
    8ee0:	str	r2, [r1, r0, lsl #2]
    8ee4:	ldr	r0, [r5, #8]
    8ee8:	str	r2, [r1, r0, lsl #2]
    8eec:	ldr	r0, [r8]
    8ef0:	ldr	r4, [r5]
    8ef4:	cmp	r0, #0
    8ef8:	beq	8f10 <sf_gen_relation+0x164>
    8efc:	cmp	r4, #0
    8f00:	beq	8f1c <sf_gen_relation+0x170>
    8f04:	mov	r1, r4
    8f08:	bl	3a60 <sf_gen_and>
    8f0c:	b	8f20 <sf_gen_relation+0x174>
    8f10:	cmp	r4, #0
    8f14:	bne	8f20 <sf_gen_relation+0x174>
    8f18:	b	8f2c <sf_gen_relation+0x180>
    8f1c:	mov	r4, r0
    8f20:	mov	r0, r4
    8f24:	mov	r1, r6
    8f28:	bl	3a60 <sf_gen_and>
    8f2c:	mov	r0, r6
    8f30:	sub	sp, fp, #28
    8f34:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    8f38:	.word	0x00027634

00008f3c <sf_gen_loadlen>:
    8f3c:	push	{r4, r5, r6, sl, fp, lr}
    8f40:	add	fp, sp, #16
    8f44:	bl	8afc <alloc_reg>
    8f48:	mov	r4, r0
    8f4c:	mov	r0, #12
    8f50:	bl	20bc <newchunk>
    8f54:	mov	r5, r0
    8f58:	mov	r0, #20
    8f5c:	bl	20bc <newchunk>
    8f60:	mov	r6, r0
    8f64:	mov	r0, #128	; 0x80
    8f68:	str	r0, [r6]
    8f6c:	mov	r0, #20
    8f70:	bl	20bc <newchunk>
    8f74:	mov	r1, #2
    8f78:	str	r1, [r0]
    8f7c:	str	r0, [r6, #16]
    8f80:	str	r4, [r0, #12]
    8f84:	mov	r0, r5
    8f88:	str	r6, [r5, #4]
    8f8c:	str	r4, [r5, #8]
    8f90:	pop	{r4, r5, r6, sl, fp, pc}

00008f94 <sf_gen_loadi>:
    8f94:	push	{r4, r5, r6, r7, fp, lr}
    8f98:	add	fp, sp, #16
    8f9c:	mov	r4, r0
    8fa0:	mov	r0, #12
    8fa4:	bl	20bc <newchunk>
    8fa8:	mov	r5, r0
    8fac:	bl	8afc <alloc_reg>
    8fb0:	mov	r6, r0
    8fb4:	mov	r0, #20
    8fb8:	bl	20bc <newchunk>
    8fbc:	mov	r7, r0
    8fc0:	mov	r0, #0
    8fc4:	str	r0, [r7]
    8fc8:	mov	r0, #20
    8fcc:	str	r4, [r7, #12]
    8fd0:	bl	20bc <newchunk>
    8fd4:	mov	r1, #2
    8fd8:	str	r1, [r0]
    8fdc:	str	r0, [r7, #16]
    8fe0:	str	r6, [r0, #12]
    8fe4:	mov	r0, r5
    8fe8:	str	r7, [r5, #4]
    8fec:	str	r6, [r5, #8]
    8ff0:	pop	{r4, r5, r6, r7, fp, pc}

00008ff4 <sf_gen_neg>:
    8ff4:	push	{r4, sl, fp, lr}
    8ff8:	add	fp, sp, #8
    8ffc:	mov	r4, r0
    9000:	mov	r0, #20
    9004:	bl	20bc <newchunk>
    9008:	mov	r1, #96	; 0x60
    900c:	str	r1, [r0]
    9010:	ldr	r1, [r4, #8]
    9014:	str	r1, [r0, #12]
    9018:	ldr	r1, [r4, #4]
    901c:	mov	r2, r1
    9020:	ldr	r1, [r1, #16]
    9024:	cmp	r1, #0
    9028:	bne	901c <sf_gen_neg+0x28>
    902c:	str	r0, [r2, #16]
    9030:	mov	r0, #20
    9034:	bl	20bc <newchunk>
    9038:	mov	r1, #132	; 0x84
    903c:	str	r1, [r0]
    9040:	mov	r1, #0
    9044:	str	r1, [r0, #12]
    9048:	ldr	r1, [r4, #4]
    904c:	mov	r2, r1
    9050:	ldr	r1, [r1, #16]
    9054:	cmp	r1, #0
    9058:	bne	904c <sf_gen_neg+0x58>
    905c:	str	r0, [r2, #16]
    9060:	mov	r0, #20
    9064:	bl	20bc <newchunk>
    9068:	mov	r1, #2
    906c:	str	r1, [r0]
    9070:	ldr	r1, [r4, #8]
    9074:	str	r1, [r0, #12]
    9078:	ldr	r1, [r4, #4]
    907c:	mov	r2, r1
    9080:	ldr	r1, [r1, #16]
    9084:	cmp	r1, #0
    9088:	bne	907c <sf_gen_neg+0x88>
    908c:	str	r0, [r2, #16]
    9090:	mov	r0, r4
    9094:	pop	{r4, sl, fp, pc}

00009098 <sf_gen_arth>:
    9098:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    909c:	add	fp, sp, #24
    90a0:	mov	r8, r0
    90a4:	mov	r0, #20
    90a8:	mov	r9, r2
    90ac:	mov	r4, r1
    90b0:	bl	20bc <newchunk>
    90b4:	mov	r6, r0
    90b8:	mov	r0, #97	; 0x61
    90bc:	str	r0, [r6]
    90c0:	ldr	r0, [r9, #8]
    90c4:	str	r0, [r6, #12]
    90c8:	mov	r0, #20
    90cc:	bl	20bc <newchunk>
    90d0:	mov	r7, r0
    90d4:	mov	r0, #96	; 0x60
    90d8:	orr	r5, r8, #12
    90dc:	str	r0, [r7]
    90e0:	ldr	r0, [r4, #8]
    90e4:	str	r0, [r7, #12]
    90e8:	mov	r0, #20
    90ec:	bl	20bc <newchunk>
    90f0:	mov	r2, r7
    90f4:	str	r5, [r0]
    90f8:	mov	r1, r2
    90fc:	ldr	r2, [r2, #16]
    9100:	cmp	r2, #0
    9104:	bne	90f8 <sf_gen_arth+0x60>
    9108:	str	r0, [r1, #16]
    910c:	mov	r1, r6
    9110:	mov	r0, r1
    9114:	ldr	r1, [r1, #16]
    9118:	cmp	r1, #0
    911c:	bne	9110 <sf_gen_arth+0x78>
    9120:	str	r7, [r0, #16]
    9124:	ldr	r0, [r9, #4]
    9128:	mov	r1, r0
    912c:	ldr	r0, [r0, #16]
    9130:	cmp	r0, #0
    9134:	bne	9128 <sf_gen_arth+0x90>
    9138:	str	r6, [r1, #16]
    913c:	ldr	r0, [r9, #4]
    9140:	ldr	r1, [r4, #4]
    9144:	mov	r2, r1
    9148:	ldr	r1, [r1, #16]
    914c:	cmp	r1, #0
    9150:	bne	9144 <sf_gen_arth+0xac>
    9154:	str	r0, [r2, #16]
    9158:	mov	r2, #0
    915c:	ldr	r0, [r4, #8]
    9160:	ldr	r1, [pc, #76]	; 91b4 <sf_gen_arth+0x11c>
    9164:	add	r1, pc, r1
    9168:	str	r2, [r1, r0, lsl #2]
    916c:	ldr	r0, [r9, #8]
    9170:	str	r2, [r1, r0, lsl #2]
    9174:	mov	r0, #20
    9178:	bl	20bc <newchunk>
    917c:	mov	r5, r0
    9180:	mov	r0, #2
    9184:	str	r0, [r5]
    9188:	bl	8afc <alloc_reg>
    918c:	str	r0, [r5, #12]
    9190:	str	r0, [r4, #8]
    9194:	ldr	r0, [r4, #4]
    9198:	mov	r1, r0
    919c:	ldr	r0, [r0, #16]
    91a0:	cmp	r0, #0
    91a4:	bne	9198 <sf_gen_arth+0x100>
    91a8:	mov	r0, r4
    91ac:	str	r5, [r1, #16]
    91b0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    91b4:	.word	0x000273ac

000091b8 <sf_gen_greater>:
    91b8:	push	{r4, r5, fp, lr}
    91bc:	add	fp, sp, #8
    91c0:	mov	r4, r0
    91c4:	mov	r0, #20
    91c8:	bl	20bc <newchunk>
    91cc:	mov	r5, r0
    91d0:	mov	r0, #128	; 0x80
    91d4:	str	r0, [r5]
    91d8:	mov	r0, #208	; 0xd0
    91dc:	bl	20bc <newchunk>
    91e0:	mov	r1, #53	; 0x35
    91e4:	str	r5, [r0, #4]
    91e8:	str	r1, [r0, #8]
    91ec:	str	r4, [r0, #20]
    91f0:	str	r0, [r0, #96]	; 0x60
    91f4:	pop	{r4, r5, fp, pc}

000091f8 <sf_gen_less>:
    91f8:	push	{r4, r5, fp, lr}
    91fc:	add	fp, sp, #8
    9200:	mov	r4, r0
    9204:	mov	r0, #20
    9208:	bl	20bc <newchunk>
    920c:	mov	r5, r0
    9210:	mov	r0, #128	; 0x80
    9214:	str	r0, [r5]
    9218:	mov	r0, #208	; 0xd0
    921c:	bl	20bc <newchunk>
    9220:	mov	r1, #37	; 0x25
    9224:	str	r5, [r0, #4]
    9228:	str	r1, [r0, #8]
    922c:	str	r4, [r0, #20]
    9230:	ldr	r1, [r0, #44]	; 0x2c
    9234:	clz	r1, r1
    9238:	lsr	r1, r1, #5
    923c:	str	r1, [r0, #44]	; 0x2c
    9240:	str	r0, [r0, #96]	; 0x60
    9244:	pop	{r4, r5, fp, pc}

00009248 <sf_gen_byteop>:
    9248:	push	{r4, r5, r6, sl, fp, lr}
    924c:	add	fp, sp, #16
    9250:	mov	r4, r2
    9254:	cmp	r0, #60	; 0x3c
    9258:	ble	928c <sf_gen_byteop+0x44>
    925c:	cmp	r0, #61	; 0x3d
    9260:	beq	929c <sf_gen_byteop+0x54>
    9264:	cmp	r0, #62	; 0x3e
    9268:	bne	92c8 <sf_gen_byteop+0x80>
    926c:	mov	r0, #1
    9270:	mov	r2, #16
    9274:	bl	9a88 <gen_load_a>
    9278:	mov	r5, r0
    927c:	mov	r0, #208	; 0xd0
    9280:	bl	20bc <newchunk>
    9284:	mov	r1, #37	; 0x25
    9288:	b	92b8 <sf_gen_byteop+0x70>
    928c:	cmp	r0, #38	; 0x26
    9290:	bne	9300 <sf_gen_byteop+0xb8>
    9294:	mov	r6, #84	; 0x54
    9298:	b	92d4 <sf_gen_byteop+0x8c>
    929c:	mov	r0, #1
    92a0:	mov	r2, #16
    92a4:	bl	9a88 <gen_load_a>
    92a8:	mov	r5, r0
    92ac:	mov	r0, #208	; 0xd0
    92b0:	bl	20bc <newchunk>
    92b4:	mov	r1, #21
    92b8:	str	r5, [r0, #4]
    92bc:	str	r1, [r0, #8]
    92c0:	str	r4, [r0, #20]
    92c4:	b	9340 <sf_gen_byteop+0xf8>
    92c8:	mov	r6, #68	; 0x44
    92cc:	cmp	r0, #124	; 0x7c
    92d0:	bne	9348 <sf_gen_byteop+0x100>
    92d4:	mov	r0, #20
    92d8:	bl	20bc <newchunk>
    92dc:	str	r6, [r0]
    92e0:	mov	r5, r0
    92e4:	str	r4, [r0, #12]
    92e8:	mov	r0, #208	; 0xd0
    92ec:	bl	20bc <newchunk>
    92f0:	mov	r1, #21
    92f4:	str	r5, [r0, #4]
    92f8:	str	r1, [r0, #8]
    92fc:	b	9330 <sf_gen_byteop+0xe8>
    9300:	cmp	r0, #60	; 0x3c
    9304:	bne	9348 <sf_gen_byteop+0x100>
    9308:	mov	r0, #1
    930c:	mov	r2, #16
    9310:	bl	9a88 <gen_load_a>
    9314:	mov	r5, r0
    9318:	mov	r0, #208	; 0xd0
    931c:	bl	20bc <newchunk>
    9320:	mov	r1, #53	; 0x35
    9324:	str	r5, [r0, #4]
    9328:	str	r1, [r0, #8]
    932c:	str	r4, [r0, #20]
    9330:	ldr	r1, [r0, #44]	; 0x2c
    9334:	clz	r1, r1
    9338:	lsr	r1, r1, #5
    933c:	str	r1, [r0, #44]	; 0x2c
    9340:	str	r0, [r0, #96]	; 0x60
    9344:	pop	{r4, r5, r6, sl, fp, pc}
    9348:	bl	fc4 <abort@plt>

0000934c <sf_gen_broadcast>:
    934c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    9350:	add	fp, sp, #24
    9354:	sub	sp, sp, #16
    9358:	cmp	r0, #2
    935c:	bcs	9438 <sf_gen_broadcast+0xec>
    9360:	ldr	r0, [pc, #608]	; 95c8 <sf_gen_broadcast+0x27c>
    9364:	ldr	r0, [pc, r0]
    9368:	cmp	r0, #118	; 0x76
    936c:	ble	94d0 <sf_gen_broadcast+0x184>
    9370:	sub	r1, r0, #119	; 0x77
    9374:	cmp	r1, #10
    9378:	bhi	9528 <sf_gen_broadcast+0x1dc>
    937c:	add	r0, pc, #4
    9380:	ldr	r1, [r0, r1, lsl #2]
    9384:	add	pc, r0, r1
    9388:	.word	0x000001ac
    938c:	.word	0x000001f8
    9390:	.word	0x000001f8
    9394:	.word	0x000001c4
    9398:	.word	0x0000002c
    939c:	.word	0x000001f8
    93a0:	.word	0x000001f8
    93a4:	.word	0x000001f8
    93a8:	.word	0x000001ac
    93ac:	.word	0x000001f8
    93b0:	.word	0x000001d8
    93b4:	ldr	r0, [pc, #556]	; 95e8 <sf_gen_broadcast+0x29c>
    93b8:	add	r0, pc, r0
    93bc:	ldrb	r0, [r0]
    93c0:	cmp	r0, #1
    93c4:	bne	95ac <sf_gen_broadcast+0x260>
    93c8:	mov	r0, #1
    93cc:	mov	r1, #4
    93d0:	mov	r2, #8
    93d4:	bl	9a88 <gen_load_a>
    93d8:	mov	r4, r0
    93dc:	mov	r0, #208	; 0xd0
    93e0:	bl	20bc <newchunk>
    93e4:	mov	r6, r0
    93e8:	mov	r0, #21
    93ec:	mov	r2, #6
    93f0:	str	r4, [r6, #4]
    93f4:	str	r0, [r6, #8]
    93f8:	mov	r0, #65280	; 0xff00
    93fc:	str	r0, [r6, #20]
    9400:	ldr	r0, [r6, #44]	; 0x2c
    9404:	clz	r0, r0
    9408:	lsr	r0, r0, #5
    940c:	str	r0, [r6, #44]	; 0x2c
    9410:	str	r6, [r6, #96]	; 0x60
    9414:	mov	r0, #1
    9418:	ldr	r1, [pc, #460]	; 95ec <sf_gen_broadcast+0x2a0>
    941c:	ldr	r1, [pc, r1]
    9420:	ldr	r3, [pc, #456]	; 95f0 <sf_gen_broadcast+0x2a4>
    9424:	add	r3, pc, r3
    9428:	bl	b4e0 <gen_bcmp>
    942c:	mov	r5, r0
    9430:	mov	r0, r6
    9434:	b	94bc <sf_gen_broadcast+0x170>
    9438:	bne	95ac <sf_gen_broadcast+0x260>
    943c:	ldr	r0, [pc, #432]	; 95f4 <sf_gen_broadcast+0x2a8>
    9440:	ldr	r0, [pc, r0]
    9444:	cmn	r0, #1
    9448:	beq	95b8 <sf_gen_broadcast+0x26c>
    944c:	mov	r0, #2048	; 0x800
    9450:	bl	446c <gen_linktype>
    9454:	mov	r8, r0
    9458:	ldr	r0, [pc, #408]	; 95f8 <sf_gen_broadcast+0x2ac>
    945c:	mov	r7, #0
    9460:	mov	r4, #16
    9464:	mov	r1, #16
    9468:	mov	r2, #0
    946c:	ldr	r0, [pc, r0]
    9470:	stm	sp, {r4, r7}
    9474:	str	r7, [sp, #8]
    9478:	mvn	r5, r0
    947c:	mov	r0, #3
    9480:	mov	r3, r5
    9484:	bl	a52c <gen_ncmp>
    9488:	mov	r6, r0
    948c:	mov	r0, #3
    9490:	mov	r1, #16
    9494:	mov	r2, #0
    9498:	mov	r3, r5
    949c:	stm	sp, {r4, r7}
    94a0:	str	r5, [sp, #8]
    94a4:	bl	a52c <gen_ncmp>
    94a8:	mov	r5, r0
    94ac:	mov	r0, r6
    94b0:	mov	r1, r5
    94b4:	bl	3b3c <sf_gen_or>
    94b8:	mov	r0, r8
    94bc:	mov	r1, r5
    94c0:	bl	3a60 <sf_gen_and>
    94c4:	mov	r0, r5
    94c8:	sub	sp, fp, #24
    94cc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    94d0:	sub	r1, r0, #1
    94d4:	cmp	r1, #9
    94d8:	bhi	9578 <sf_gen_broadcast+0x22c>
    94dc:	add	r0, pc, #4
    94e0:	ldr	r1, [r0, r1, lsl #2]
    94e4:	add	pc, r0, r1
    94e8:	.word	0x00000028
    94ec:	.word	0x00000098
    94f0:	.word	0x00000098
    94f4:	.word	0x00000098
    94f8:	.word	0x00000098
    94fc:	.word	0x00000064
    9500:	.word	0x00000078
    9504:	.word	0x00000098
    9508:	.word	0x00000098
    950c:	.word	0x000000a4
    9510:	ldr	r1, [pc, #192]	; 95d8 <sf_gen_broadcast+0x28c>
    9514:	mov	r0, #1
    9518:	ldr	r1, [pc, r1]
    951c:	ldr	r3, [pc, #184]	; 95dc <sf_gen_broadcast+0x290>
    9520:	add	r3, pc, r3
    9524:	b	959c <sf_gen_broadcast+0x250>
    9528:	cmp	r0, #163	; 0xa3
    952c:	cmpne	r0, #192	; 0xc0
    9530:	bne	9580 <sf_gen_broadcast+0x234>
    9534:	ldr	r0, [pc, #148]	; 95d0 <sf_gen_broadcast+0x284>
    9538:	mov	r1, #2
    953c:	add	r0, pc, r0
    9540:	sub	sp, fp, #24
    9544:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
    9548:	b	696c <gen_wlanhostop>
    954c:	ldr	r3, [pc, #144]	; 95e4 <sf_gen_broadcast+0x298>
    9550:	mov	r0, #1
    9554:	mov	r1, #2
    9558:	add	r3, pc, r3
    955c:	b	959c <sf_gen_broadcast+0x250>
    9560:	ldr	r3, [pc, #108]	; 95d4 <sf_gen_broadcast+0x288>
    9564:	mov	r0, #1
    9568:	mov	r1, #1
    956c:	mov	r2, #1
    9570:	add	r3, pc, r3
    9574:	b	95a0 <sf_gen_broadcast+0x254>
    9578:	cmp	r0, #105	; 0x69
    957c:	beq	9534 <sf_gen_broadcast+0x1e8>
    9580:	ldr	r0, [pc, #68]	; 95cc <sf_gen_broadcast+0x280>
    9584:	add	r0, pc, r0
    9588:	bl	2028 <sf_bpf_error>
    958c:	ldr	r3, [pc, #76]	; 95e0 <sf_gen_broadcast+0x294>
    9590:	mov	r0, #1
    9594:	mov	r1, #1
    9598:	add	r3, pc, r3
    959c:	mov	r2, #6
    95a0:	sub	sp, fp, #24
    95a4:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
    95a8:	b	b4e0 <gen_bcmp>
    95ac:	ldr	r0, [pc, #16]	; 95c4 <sf_gen_broadcast+0x278>
    95b0:	add	r0, pc, r0
    95b4:	bl	2028 <sf_bpf_error>
    95b8:	ldr	r0, [pc, #60]	; 95fc <sf_gen_broadcast+0x2b0>
    95bc:	add	r0, pc, r0
    95c0:	bl	2028 <sf_bpf_error>
    95c4:	.word	0x0000985a
    95c8:	.word	0x000270cc
    95cc:	.word	0x0000983e
    95d0:	.word	0x00026b90
    95d4:	.word	0x00026ed4
    95d8:	.word	0x00026f30
    95dc:	.word	0x00026bac
    95e0:	.word	0x00026b34
    95e4:	.word	0x00026b74
    95e8:	.word	0x0002707c
    95ec:	.word	0x0002702c
    95f0:	.word	0x00026ca8
    95f4:	.word	0x00026fe8
    95f8:	.word	0x00026fbc
    95fc:	.word	0x0000981b

00009600 <sf_gen_multicast>:
    9600:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    9604:	add	fp, sp, #28
    9608:	sub	sp, sp, #4
    960c:	cmp	r0, #2
    9610:	bcc	9664 <sf_gen_multicast+0x64>
    9614:	beq	9750 <sf_gen_multicast+0x150>
    9618:	cmp	r0, #17
    961c:	bne	9a24 <sf_gen_multicast+0x424>
    9620:	movw	r0, #34525	; 0x86dd
    9624:	bl	446c <gen_linktype>
    9628:	mov	r5, r0
    962c:	ldr	r0, [pc, #1080]	; 9a6c <sf_gen_multicast+0x46c>
    9630:	mov	r1, #16
    9634:	ldr	r0, [pc, r0]
    9638:	add	r0, r0, #24
    963c:	bl	bc70 <gen_load_macplrel>
    9640:	mov	r6, r0
    9644:	mov	r0, #208	; 0xd0
    9648:	bl	20bc <newchunk>
    964c:	mov	r4, r0
    9650:	mov	r0, #21
    9654:	str	r6, [r4, #4]
    9658:	str	r0, [r4, #8]
    965c:	mov	r0, #255	; 0xff
    9660:	b	9790 <sf_gen_multicast+0x190>
    9664:	ldr	r0, [pc, #1028]	; 9a70 <sf_gen_multicast+0x470>
    9668:	ldr	r0, [pc, r0]
    966c:	cmp	r0, #118	; 0x76
    9670:	ble	97a0 <sf_gen_multicast+0x1a0>
    9674:	sub	r1, r0, #119	; 0x77
    9678:	cmp	r1, #10
    967c:	bhi	97f0 <sf_gen_multicast+0x1f0>
    9680:	add	r0, pc, #4
    9684:	ldr	r1, [r0, r1, lsl #2]
    9688:	add	pc, r0, r1
    968c:	.word	0x00000170
    9690:	.word	0x00000398
    9694:	.word	0x00000398
    9698:	.word	0x00000360
    969c:	.word	0x0000002c
    96a0:	.word	0x00000398
    96a4:	.word	0x00000398
    96a8:	.word	0x00000398
    96ac:	.word	0x00000170
    96b0:	.word	0x00000398
    96b4:	.word	0x00000370
    96b8:	ldr	r0, [pc, #956]	; 9a7c <sf_gen_multicast+0x47c>
    96bc:	add	r0, pc, r0
    96c0:	ldrb	r0, [r0]
    96c4:	cmp	r0, #1
    96c8:	bne	9a24 <sf_gen_multicast+0x424>
    96cc:	mov	r0, #1
    96d0:	mov	r1, #4
    96d4:	mov	r2, #8
    96d8:	mov	r7, #1
    96dc:	bl	9a88 <gen_load_a>
    96e0:	mov	r4, r0
    96e4:	mov	r0, #208	; 0xd0
    96e8:	bl	20bc <newchunk>
    96ec:	mov	r5, r0
    96f0:	mov	r0, #21
    96f4:	mov	r2, #16
    96f8:	str	r4, [r5, #4]
    96fc:	str	r0, [r5, #8]
    9700:	mov	r0, #65280	; 0xff00
    9704:	str	r0, [r5, #20]
    9708:	ldr	r0, [r5, #44]	; 0x2c
    970c:	clz	r0, r0
    9710:	lsr	r0, r0, #5
    9714:	str	r0, [r5, #44]	; 0x2c
    9718:	str	r5, [r5, #96]	; 0x60
    971c:	mov	r0, #1
    9720:	ldr	r1, [pc, #856]	; 9a80 <sf_gen_multicast+0x480>
    9724:	ldr	r1, [pc, r1]
    9728:	bl	9a88 <gen_load_a>
    972c:	mov	r6, r0
    9730:	mov	r0, #208	; 0xd0
    9734:	bl	20bc <newchunk>
    9738:	mov	r4, r0
    973c:	mov	r0, #69	; 0x45
    9740:	str	r7, [r4, #20]
    9744:	str	r6, [r4, #4]
    9748:	str	r0, [r4, #8]
    974c:	b	9794 <sf_gen_multicast+0x194>
    9750:	mov	r0, #2048	; 0x800
    9754:	bl	446c <gen_linktype>
    9758:	mov	r5, r0
    975c:	ldr	r0, [pc, #800]	; 9a84 <sf_gen_multicast+0x484>
    9760:	mov	r1, #16
    9764:	ldr	r0, [pc, r0]
    9768:	add	r0, r0, #16
    976c:	bl	bc70 <gen_load_macplrel>
    9770:	mov	r6, r0
    9774:	mov	r0, #208	; 0xd0
    9778:	bl	20bc <newchunk>
    977c:	mov	r4, r0
    9780:	mov	r0, #53	; 0x35
    9784:	str	r6, [r4, #4]
    9788:	str	r0, [r4, #8]
    978c:	mov	r0, #224	; 0xe0
    9790:	str	r0, [r4, #20]
    9794:	mov	r0, r5
    9798:	str	r4, [r4, #96]	; 0x60
    979c:	b	99d8 <sf_gen_multicast+0x3d8>
    97a0:	sub	r1, r0, #1
    97a4:	cmp	r1, #9
    97a8:	bhi	9a1c <sf_gen_multicast+0x41c>
    97ac:	add	r0, pc, #4
    97b0:	ldr	r1, [r0, r1, lsl #2]
    97b4:	add	pc, r0, r1
    97b8:	.word	0x00000028
    97bc:	.word	0x0000026c
    97c0:	.word	0x0000026c
    97c4:	.word	0x0000026c
    97c8:	.word	0x0000026c
    97cc:	.word	0x00000234
    97d0:	.word	0x00000244
    97d4:	.word	0x0000026c
    97d8:	.word	0x0000026c
    97dc:	.word	0x00000278
    97e0:	mov	r6, #1
    97e4:	mov	r0, #1
    97e8:	mov	r1, #0
    97ec:	b	9a3c <sf_gen_multicast+0x43c>
    97f0:	cmp	r0, #163	; 0xa3
    97f4:	cmpne	r0, #192	; 0xc0
    97f8:	bne	9a24 <sf_gen_multicast+0x424>
    97fc:	mov	r0, #1
    9800:	mov	r1, #1
    9804:	mov	r2, #16
    9808:	mov	r9, #1
    980c:	bl	9a88 <gen_load_a>
    9810:	mov	r4, r0
    9814:	mov	r0, #208	; 0xd0
    9818:	bl	20bc <newchunk>
    981c:	mov	r8, #69	; 0x45
    9820:	str	r9, [r0, #20]
    9824:	mov	r5, r0
    9828:	mov	r1, #16
    982c:	mov	r2, #16
    9830:	stmib	r0, {r4, r8}
    9834:	str	r0, [r0, #96]	; 0x60
    9838:	mov	r0, #1
    983c:	bl	9a88 <gen_load_a>
    9840:	mov	r6, r0
    9844:	mov	r0, #208	; 0xd0
    9848:	bl	20bc <newchunk>
    984c:	mov	r4, r0
    9850:	str	r9, [r0, #20]
    9854:	stmib	r0, {r6, r8}
    9858:	str	r0, [r0, #96]	; 0x60
    985c:	mov	r0, r5
    9860:	mov	r1, r4
    9864:	bl	3a60 <sf_gen_and>
    9868:	mov	r0, #1
    986c:	mov	r1, #1
    9870:	mov	r2, #16
    9874:	bl	9a88 <gen_load_a>
    9878:	mov	r5, r0
    987c:	mov	r0, #208	; 0xd0
    9880:	bl	20bc <newchunk>
    9884:	str	r9, [r0, #20]
    9888:	stmib	r0, {r5, r8}
    988c:	mov	r6, r0
    9890:	mov	r1, #4
    9894:	mov	r2, #16
    9898:	mov	sl, #4
    989c:	ldr	r0, [r0, #44]	; 0x2c
    98a0:	clz	r0, r0
    98a4:	lsr	r0, r0, #5
    98a8:	str	r0, [r6, #44]	; 0x2c
    98ac:	mov	r0, #1
    98b0:	str	r6, [r6, #96]	; 0x60
    98b4:	bl	9a88 <gen_load_a>
    98b8:	mov	r5, r0
    98bc:	mov	r0, #208	; 0xd0
    98c0:	bl	20bc <newchunk>
    98c4:	mov	r7, r0
    98c8:	stmib	r0, {r5, r8}
    98cc:	str	r9, [r0, #20]
    98d0:	str	r0, [r0, #96]	; 0x60
    98d4:	mov	r0, r6
    98d8:	mov	r1, r7
    98dc:	bl	3a60 <sf_gen_and>
    98e0:	mov	r0, r7
    98e4:	mov	r1, r4
    98e8:	bl	3b3c <sf_gen_or>
    98ec:	mov	r0, #1
    98f0:	mov	r1, #0
    98f4:	mov	r2, #16
    98f8:	bl	9a88 <gen_load_a>
    98fc:	mov	r5, r0
    9900:	mov	r0, #208	; 0xd0
    9904:	bl	20bc <newchunk>
    9908:	mov	r1, r4
    990c:	mov	r7, #8
    9910:	stmib	r0, {r5, r8}
    9914:	str	r7, [r0, #20]
    9918:	str	r0, [r0, #96]	; 0x60
    991c:	bl	3a60 <sf_gen_and>
    9920:	mov	r0, #1
    9924:	mov	r1, #0
    9928:	mov	r2, #16
    992c:	bl	9a88 <gen_load_a>
    9930:	mov	r5, r0
    9934:	mov	r0, #208	; 0xd0
    9938:	bl	20bc <newchunk>
    993c:	str	r7, [r0, #20]
    9940:	mov	r6, r0
    9944:	mov	r1, #4
    9948:	mov	r2, #16
    994c:	ldr	r0, [r0, #44]	; 0x2c
    9950:	clz	r0, r0
    9954:	lsr	r0, r0, #5
    9958:	str	r0, [r6, #44]	; 0x2c
    995c:	mov	r0, #1
    9960:	stmib	r6, {r5, r8}
    9964:	str	r6, [r6, #96]	; 0x60
    9968:	bl	9a88 <gen_load_a>
    996c:	mov	r5, r0
    9970:	mov	r0, #208	; 0xd0
    9974:	bl	20bc <newchunk>
    9978:	mov	r7, r0
    997c:	stmib	r0, {r5, r8}
    9980:	str	r9, [r0, #20]
    9984:	str	r0, [r0, #96]	; 0x60
    9988:	mov	r0, r6
    998c:	mov	r1, r7
    9990:	bl	3a60 <sf_gen_and>
    9994:	mov	r0, r7
    9998:	mov	r1, r4
    999c:	bl	3b3c <sf_gen_or>
    99a0:	mov	r0, #1
    99a4:	mov	r1, #0
    99a8:	mov	r2, #16
    99ac:	bl	9a88 <gen_load_a>
    99b0:	mov	r5, r0
    99b4:	mov	r0, #208	; 0xd0
    99b8:	bl	20bc <newchunk>
    99bc:	str	sl, [r0, #20]
    99c0:	stmib	r0, {r5, r8}
    99c4:	ldr	r1, [r0, #44]	; 0x2c
    99c8:	clz	r1, r1
    99cc:	lsr	r1, r1, #5
    99d0:	str	r1, [r0, #44]	; 0x2c
    99d4:	str	r0, [r0, #96]	; 0x60
    99d8:	mov	r1, r4
    99dc:	bl	3a60 <sf_gen_and>
    99e0:	mov	r0, r4
    99e4:	sub	sp, fp, #28
    99e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    99ec:	mov	r6, #1
    99f0:	mov	r0, #1
    99f4:	mov	r1, #2
    99f8:	b	9a3c <sf_gen_multicast+0x43c>
    99fc:	ldr	r3, [pc, #116]	; 9a78 <sf_gen_multicast+0x478>
    9a00:	mov	r0, #1
    9a04:	mov	r1, #1
    9a08:	mov	r2, #1
    9a0c:	add	r3, pc, r3
    9a10:	sub	sp, fp, #28
    9a14:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    9a18:	b	b4e0 <gen_bcmp>
    9a1c:	cmp	r0, #105	; 0x69
    9a20:	beq	97fc <sf_gen_multicast+0x1fc>
    9a24:	ldr	r0, [pc, #72]	; 9a74 <sf_gen_multicast+0x474>
    9a28:	add	r0, pc, r0
    9a2c:	bl	2028 <sf_bpf_error>
    9a30:	mov	r6, #1
    9a34:	mov	r0, #1
    9a38:	mov	r1, #1
    9a3c:	mov	r2, #16
    9a40:	bl	9a88 <gen_load_a>
    9a44:	mov	r5, r0
    9a48:	mov	r0, #208	; 0xd0
    9a4c:	bl	20bc <newchunk>
    9a50:	mov	r4, r0
    9a54:	mov	r0, #69	; 0x45
    9a58:	str	r6, [r4, #20]
    9a5c:	str	r5, [r4, #4]
    9a60:	str	r0, [r4, #8]
    9a64:	str	r4, [r4, #96]	; 0x60
    9a68:	b	99e0 <sf_gen_multicast+0x3e0>
    9a6c:	.word	0x00026e0c
    9a70:	.word	0x00026dc8
    9a74:	.word	0x00009411
    9a78:	.word	0x00026a38
    9a7c:	.word	0x00026d78
    9a80:	.word	0x00026d24
    9a84:	.word	0x00026cdc

00009a88 <gen_load_a>:
    9a88:	push	{r4, r5, r6, sl, fp, lr}
    9a8c:	add	fp, sp, #16
    9a90:	cmp	r0, #6
    9a94:	bhi	9bb4 <gen_load_a+0x12c>
    9a98:	mov	r5, r1
    9a9c:	add	r1, pc, #8
    9aa0:	mov	r6, r2
    9aa4:	ldr	r0, [r1, r0, lsl #2]
    9aa8:	add	pc, r1, r0
    9aac:	.word	0x00000058
    9ab0:	.word	0x0000001c
    9ab4:	.word	0x00000080
    9ab8:	.word	0x00000088
    9abc:	.word	0x00000074
    9ac0:	.word	0x00000098
    9ac4:	.word	0x000000ec
    9ac8:	bl	8b74 <gen_llprefixlen>
    9acc:	cmp	r0, #0
    9ad0:	beq	9b04 <gen_load_a+0x7c>
    9ad4:	mov	r4, r0
    9ad8:	mov	r0, #20
    9adc:	orr	r6, r6, #64	; 0x40
    9ae0:	bl	20bc <newchunk>
    9ae4:	mov	r2, r4
    9ae8:	str	r6, [r0]
    9aec:	str	r5, [r0, #12]
    9af0:	mov	r1, r2
    9af4:	ldr	r2, [r2, #16]
    9af8:	cmp	r2, #0
    9afc:	bne	9af0 <gen_load_a+0x68>
    9b00:	b	9b8c <gen_load_a+0x104>
    9b04:	mov	r0, #20
    9b08:	orr	r6, r6, #32
    9b0c:	bl	20bc <newchunk>
    9b10:	mov	r4, r0
    9b14:	str	r6, [r0]
    9b18:	str	r5, [r0, #12]
    9b1c:	b	9b90 <gen_load_a+0x108>
    9b20:	ldr	r0, [pc, #148]	; 9bbc <gen_load_a+0x134>
    9b24:	ldr	r0, [pc, r0]
    9b28:	b	9b3c <gen_load_a+0xb4>
    9b2c:	mov	r0, r5
    9b30:	b	9ba8 <gen_load_a+0x120>
    9b34:	ldr	r0, [pc, #124]	; 9bb8 <gen_load_a+0x130>
    9b38:	ldr	r0, [pc, r0]
    9b3c:	add	r0, r0, r5
    9b40:	b	9ba8 <gen_load_a+0x120>
    9b44:	bl	8c74 <gen_loadx_iphdrlen>
    9b48:	mov	r4, r0
    9b4c:	mov	r0, #20
    9b50:	orr	r6, r6, #64	; 0x40
    9b54:	bl	20bc <newchunk>
    9b58:	str	r6, [r0]
    9b5c:	ldr	r1, [pc, #92]	; 9bc0 <gen_load_a+0x138>
    9b60:	ldr	r1, [pc, r1]
    9b64:	ldr	r2, [pc, #88]	; 9bc4 <gen_load_a+0x13c>
    9b68:	ldr	r2, [pc, r2]
    9b6c:	add	r1, r1, r5
    9b70:	add	r1, r1, r2
    9b74:	mov	r2, r4
    9b78:	str	r1, [r0, #12]
    9b7c:	mov	r1, r2
    9b80:	ldr	r2, [r2, #16]
    9b84:	cmp	r2, #0
    9b88:	bne	9b7c <gen_load_a+0xf4>
    9b8c:	str	r0, [r1, #16]
    9b90:	mov	r0, r4
    9b94:	pop	{r4, r5, r6, sl, fp, pc}
    9b98:	ldr	r0, [pc, #40]	; 9bc8 <gen_load_a+0x140>
    9b9c:	ldr	r0, [pc, r0]
    9ba0:	add	r0, r5, r0
    9ba4:	add	r0, r0, #40	; 0x28
    9ba8:	mov	r1, r6
    9bac:	pop	{r4, r5, r6, sl, fp, lr}
    9bb0:	b	bc70 <gen_load_macplrel>
    9bb4:	bl	fc4 <abort@plt>
    9bb8:	.word	0x00026908
    9bbc:	.word	0x00026928
    9bc0:	.word	0x000268dc
    9bc4:	.word	0x000268d8
    9bc8:	.word	0x000268a4

00009bcc <sf_gen_inbound>:
    9bcc:	push	{r4, r5, r6, r7, fp, lr}
    9bd0:	add	fp, sp, #16
    9bd4:	sub	sp, sp, #16
    9bd8:	ldr	r1, [pc, #420]	; 9d84 <sf_gen_inbound+0x1b8>
    9bdc:	mov	r4, r0
    9be0:	ldr	r1, [pc, r1]
    9be4:	cmp	r1, #163	; 0xa3
    9be8:	ble	9c2c <sf_gen_inbound+0x60>
    9bec:	sub	r0, r1, #164	; 0xa4
    9bf0:	cmp	r0, #30
    9bf4:	bhi	9cd0 <sf_gen_inbound+0x104>
    9bf8:	movw	r3, #49177	; 0xc019
    9bfc:	mov	r2, #1
    9c00:	movt	r3, #16395	; 0x400b
    9c04:	tst	r3, r2, lsl r0
    9c08:	bne	9c38 <sf_gen_inbound+0x6c>
    9c0c:	cmp	r0, #2
    9c10:	bne	9cd0 <sf_gen_inbound+0x104>
    9c14:	mov	r6, #1
    9c18:	mov	r7, #0
    9c1c:	mov	r0, #1
    9c20:	mov	r1, #0
    9c24:	mov	r2, #16
    9c28:	b	9cf4 <sf_gen_inbound+0x128>
    9c2c:	sub	r0, r1, #130	; 0x82
    9c30:	cmp	r0, #8
    9c34:	bcs	9c88 <sf_gen_inbound+0xbc>
    9c38:	cmp	r4, #0
    9c3c:	beq	9c54 <sf_gen_inbound+0x88>
    9c40:	mov	r0, #0
    9c44:	mov	r1, #16
    9c48:	str	r1, [sp]
    9c4c:	str	r0, [sp, #4]
    9c50:	b	9c68 <sf_gen_inbound+0x9c>
    9c54:	mov	r1, #0
    9c58:	mov	r2, #16
    9c5c:	mov	r0, #1
    9c60:	str	r2, [sp]
    9c64:	str	r1, [sp, #4]
    9c68:	str	r0, [sp, #8]
    9c6c:	mov	r0, #1
    9c70:	mov	r1, #3
    9c74:	mov	r2, #16
    9c78:	mov	r3, #1
    9c7c:	bl	a52c <gen_ncmp>
    9c80:	sub	sp, fp, #16
    9c84:	pop	{r4, r5, r6, r7, fp, pc}
    9c88:	cmp	r1, #8
    9c8c:	bne	9d24 <sf_gen_inbound+0x158>
    9c90:	mov	r0, #0
    9c94:	bl	8f94 <sf_gen_loadi>
    9c98:	mov	r1, r0
    9c9c:	mov	r0, #1
    9ca0:	mov	r2, #1
    9ca4:	bl	85bc <sf_gen_load>
    9ca8:	mov	r5, r0
    9cac:	mov	r0, #0
    9cb0:	bl	8f94 <sf_gen_loadi>
    9cb4:	mov	r2, r0
    9cb8:	mov	r0, #16
    9cbc:	mov	r1, r5
    9cc0:	mov	r3, r4
    9cc4:	sub	sp, fp, #16
    9cc8:	pop	{r4, r5, r6, r7, fp, lr}
    9ccc:	b	8dac <sf_gen_relation>
    9cd0:	cmp	r1, #200	; 0xc8
    9cd4:	beq	9c38 <sf_gen_inbound+0x6c>
    9cd8:	cmp	r1, #226	; 0xe2
    9cdc:	bne	9d78 <sf_gen_inbound+0x1ac>
    9ce0:	mov	r6, #1
    9ce4:	mov	r7, #2
    9ce8:	mov	r0, #1
    9cec:	mov	r1, #2
    9cf0:	mov	r2, #8
    9cf4:	bl	9a88 <gen_load_a>
    9cf8:	mov	r5, r0
    9cfc:	mov	r0, #208	; 0xd0
    9d00:	bl	20bc <newchunk>
    9d04:	cmp	r4, #0
    9d08:	mov	r1, #21
    9d0c:	str	r5, [r0, #4]
    9d10:	str	r1, [r0, #8]
    9d14:	str	r0, [r0, #96]	; 0x60
    9d18:	bne	9d70 <sf_gen_inbound+0x1a4>
    9d1c:	str	r7, [r0, #20]
    9d20:	b	9c80 <sf_gen_inbound+0xb4>
    9d24:	cmp	r1, #113	; 0x71
    9d28:	bne	9d78 <sf_gen_inbound+0x1ac>
    9d2c:	mov	r0, #1
    9d30:	mov	r1, #0
    9d34:	mov	r2, #8
    9d38:	mov	r6, #0
    9d3c:	bl	9a88 <gen_load_a>
    9d40:	mov	r5, r0
    9d44:	mov	r0, #208	; 0xd0
    9d48:	bl	20bc <newchunk>
    9d4c:	cmp	r4, #0
    9d50:	mov	r1, #21
    9d54:	str	r5, [r0, #4]
    9d58:	str	r1, [r0, #8]
    9d5c:	str	r0, [r0, #96]	; 0x60
    9d60:	beq	9d70 <sf_gen_inbound+0x1a4>
    9d64:	mov	r1, #4
    9d68:	str	r1, [r0, #20]
    9d6c:	b	9c80 <sf_gen_inbound+0xb4>
    9d70:	str	r6, [r0, #20]
    9d74:	b	9c80 <sf_gen_inbound+0xb4>
    9d78:	ldr	r0, [pc, #8]	; 9d88 <sf_gen_inbound+0x1bc>
    9d7c:	add	r0, pc, r0
    9d80:	bl	2028 <sf_bpf_error>
    9d84:	.word	0x00026850
    9d88:	.word	0x0000912a

00009d8c <sf_gen_pf_ifname>:
    9d8c:	push	{fp, lr}
    9d90:	mov	fp, sp
    9d94:	ldr	r0, [pc, #4]	; 9da0 <sf_gen_pf_ifname+0x14>
    9d98:	add	r0, pc, r0
    9d9c:	bl	2028 <sf_bpf_error>
    9da0:	.word	0x0000913c

00009da4 <sf_gen_pf_ruleset>:
    9da4:	push	{fp, lr}
    9da8:	mov	fp, sp
    9dac:	ldr	r0, [pc, #4]	; 9db8 <sf_gen_pf_ruleset+0x14>
    9db0:	add	r0, pc, r0
    9db4:	bl	2028 <sf_bpf_error>
    9db8:	.word	0x0000914c

00009dbc <sf_gen_pf_rnr>:
    9dbc:	push	{fp, lr}
    9dc0:	mov	fp, sp
    9dc4:	ldr	r0, [pc, #4]	; 9dd0 <sf_gen_pf_rnr+0x14>
    9dc8:	add	r0, pc, r0
    9dcc:	bl	2028 <sf_bpf_error>
    9dd0:	.word	0x00009134

00009dd4 <sf_gen_pf_srnr>:
    9dd4:	push	{fp, lr}
    9dd8:	mov	fp, sp
    9ddc:	ldr	r0, [pc, #4]	; 9de8 <sf_gen_pf_srnr+0x14>
    9de0:	add	r0, pc, r0
    9de4:	bl	2028 <sf_bpf_error>
    9de8:	.word	0x0000911c

00009dec <sf_gen_pf_reason>:
    9dec:	push	{fp, lr}
    9df0:	mov	fp, sp
    9df4:	ldr	r0, [pc, #4]	; 9e00 <sf_gen_pf_reason+0x14>
    9df8:	add	r0, pc, r0
    9dfc:	bl	2028 <sf_bpf_error>
    9e00:	.word	0x00009104

00009e04 <sf_gen_pf_action>:
    9e04:	push	{fp, lr}
    9e08:	mov	fp, sp
    9e0c:	ldr	r0, [pc, #4]	; 9e18 <sf_gen_pf_action+0x14>
    9e10:	add	r0, pc, r0
    9e14:	bl	2028 <sf_bpf_error>
    9e18:	.word	0x000090ec

00009e1c <sf_gen_p80211_type>:
    9e1c:	push	{fp, lr}
    9e20:	mov	fp, sp
    9e24:	sub	sp, sp, #16
    9e28:	mov	lr, r1
    9e2c:	ldr	r1, [pc, #100]	; 9e98 <sf_gen_p80211_type+0x7c>
    9e30:	ldr	r1, [pc, r1]
    9e34:	sub	r2, r1, #105	; 0x69
    9e38:	cmp	r2, #22
    9e3c:	bhi	9e54 <sf_gen_p80211_type+0x38>
    9e40:	movw	r3, #16385	; 0x4001
    9e44:	mov	ip, #1
    9e48:	movt	r3, #64	; 0x40
    9e4c:	tst	r3, ip, lsl r2
    9e50:	bne	9e5c <sf_gen_p80211_type+0x40>
    9e54:	cmp	r1, #163	; 0xa3
    9e58:	bne	9e8c <sf_gen_p80211_type+0x70>
    9e5c:	mov	r1, #0
    9e60:	mov	r2, #16
    9e64:	str	r0, [sp, #8]
    9e68:	mov	r0, #1
    9e6c:	mov	r3, lr
    9e70:	str	r2, [sp]
    9e74:	str	r1, [sp, #4]
    9e78:	mov	r1, #0
    9e7c:	mov	r2, #16
    9e80:	bl	a52c <gen_ncmp>
    9e84:	mov	sp, fp
    9e88:	pop	{fp, pc}
    9e8c:	ldr	r0, [pc, #8]	; 9e9c <sf_gen_p80211_type+0x80>
    9e90:	add	r0, pc, r0
    9e94:	bl	2028 <sf_bpf_error>
    9e98:	.word	0x00026600
    9e9c:	.word	0x000090a1

00009ea0 <sf_gen_p80211_fcdir>:
    9ea0:	push	{fp, lr}
    9ea4:	mov	fp, sp
    9ea8:	sub	sp, sp, #16
    9eac:	ldr	r1, [pc, #100]	; 9f18 <sf_gen_p80211_fcdir+0x78>
    9eb0:	ldr	r1, [pc, r1]
    9eb4:	sub	r2, r1, #105	; 0x69
    9eb8:	cmp	r2, #22
    9ebc:	bhi	9ed4 <sf_gen_p80211_fcdir+0x34>
    9ec0:	movw	r3, #16385	; 0x4001
    9ec4:	mov	ip, #1
    9ec8:	movt	r3, #64	; 0x40
    9ecc:	tst	r3, ip, lsl r2
    9ed0:	bne	9edc <sf_gen_p80211_fcdir+0x3c>
    9ed4:	cmp	r1, #163	; 0xa3
    9ed8:	bne	9f0c <sf_gen_p80211_fcdir+0x6c>
    9edc:	mov	r1, #0
    9ee0:	mov	r2, #16
    9ee4:	str	r0, [sp, #8]
    9ee8:	mov	r0, #1
    9eec:	mov	r3, #3
    9ef0:	str	r2, [sp]
    9ef4:	str	r1, [sp, #4]
    9ef8:	mov	r1, #1
    9efc:	mov	r2, #16
    9f00:	bl	a52c <gen_ncmp>
    9f04:	mov	sp, fp
    9f08:	pop	{fp, pc}
    9f0c:	ldr	r0, [pc, #8]	; 9f1c <sf_gen_p80211_fcdir+0x7c>
    9f10:	add	r0, pc, r0
    9f14:	bl	2028 <sf_bpf_error>
    9f18:	.word	0x00026580
    9f1c:	.word	0x00009052

00009f20 <sf_gen_acode>:
    9f20:	push	{r4, r5, fp, lr}
    9f24:	add	fp, sp, #8
    9f28:	mov	r4, r0
    9f2c:	ldr	r0, [pc, #272]	; a044 <sf_gen_acode+0x124>
    9f30:	ldr	r0, [pc, r0]
    9f34:	cmp	r0, #129	; 0x81
    9f38:	cmpne	r0, #7
    9f3c:	bne	a028 <sf_gen_acode+0x108>
    9f40:	movw	r0, #65534	; 0xfffe
    9f44:	and	r0, r1, r0
    9f48:	cmp	r0, #256	; 0x100
    9f4c:	bne	a034 <sf_gen_acode+0x114>
    9f50:	lsr	r0, r1, #16
    9f54:	uxtb	r0, r0
    9f58:	cmp	r0, #4
    9f5c:	bhi	a040 <sf_gen_acode+0x120>
    9f60:	add	r1, pc, #4
    9f64:	ldr	r0, [r1, r0, lsl #2]
    9f68:	add	pc, r1, r0
    9f6c:	.word	0x00000014
    9f70:	.word	0x00000098
    9f74:	.word	0x000000a4
    9f78:	.word	0x00000014
    9f7c:	.word	0x00000054
    9f80:	mov	r0, #1
    9f84:	mov	r1, #0
    9f88:	mov	r2, #1
    9f8c:	mov	r3, r4
    9f90:	bl	b4e0 <gen_bcmp>
    9f94:	mov	r5, r0
    9f98:	mov	r0, #1
    9f9c:	mov	r1, #1
    9fa0:	mov	r2, #1
    9fa4:	mov	r3, r4
    9fa8:	bl	b4e0 <gen_bcmp>
    9fac:	mov	r4, r0
    9fb0:	mov	r0, r5
    9fb4:	mov	r1, r4
    9fb8:	bl	3b3c <sf_gen_or>
    9fbc:	b	9ffc <sf_gen_acode+0xdc>
    9fc0:	mov	r0, #1
    9fc4:	mov	r1, #0
    9fc8:	mov	r2, #1
    9fcc:	mov	r3, r4
    9fd0:	bl	b4e0 <gen_bcmp>
    9fd4:	mov	r5, r0
    9fd8:	mov	r0, #1
    9fdc:	mov	r1, #1
    9fe0:	mov	r2, #1
    9fe4:	mov	r3, r4
    9fe8:	bl	b4e0 <gen_bcmp>
    9fec:	mov	r4, r0
    9ff0:	mov	r0, r5
    9ff4:	mov	r1, r4
    9ff8:	bl	3a60 <sf_gen_and>
    9ffc:	mov	r0, r4
    a000:	pop	{r4, r5, fp, pc}
    a004:	mov	r0, #1
    a008:	mov	r1, #0
    a00c:	b	a018 <sf_gen_acode+0xf8>
    a010:	mov	r0, #1
    a014:	mov	r1, #1
    a018:	mov	r2, #1
    a01c:	mov	r3, r4
    a020:	pop	{r4, r5, fp, lr}
    a024:	b	b4e0 <gen_bcmp>
    a028:	ldr	r0, [pc, #28]	; a04c <sf_gen_acode+0x12c>
    a02c:	add	r0, pc, r0
    a030:	bl	2028 <sf_bpf_error>
    a034:	ldr	r0, [pc, #12]	; a048 <sf_gen_acode+0x128>
    a038:	add	r0, pc, r0
    a03c:	bl	2028 <sf_bpf_error>
    a040:	bl	fc4 <abort@plt>
    a044:	.word	0x00026500
    a048:	.word	0x00008f5d
    a04c:	.word	0x00008f93

0000a050 <sf_gen_vlan>:
    a050:	push	{r4, r5, r6, sl, fp, lr}
    a054:	add	fp, sp, #16
    a058:	sub	sp, sp, #16
    a05c:	mov	r4, r0
    a060:	ldr	r0, [pc, #252]	; a164 <sf_gen_vlan+0x114>
    a064:	ldr	r0, [pc, r0]
    a068:	cmp	r0, #0
    a06c:	bne	a14c <sf_gen_vlan+0xfc>
    a070:	ldr	r0, [pc, #240]	; a168 <sf_gen_vlan+0x118>
    a074:	ldr	r0, [pc, r0]
    a078:	ldr	r1, [pc, #236]	; a16c <sf_gen_vlan+0x11c>
    a07c:	add	r1, pc, r1
    a080:	str	r0, [r1]
    a084:	ldr	r1, [pc, #228]	; a170 <sf_gen_vlan+0x120>
    a088:	ldr	r1, [pc, r1]
    a08c:	cmp	r1, #1
    a090:	bne	a158 <sf_gen_vlan+0x108>
    a094:	ldr	r1, [pc, #216]	; a174 <sf_gen_vlan+0x124>
    a098:	mov	r0, #1
    a09c:	mov	r2, #8
    a0a0:	ldr	r1, [pc, r1]
    a0a4:	bl	9a88 <gen_load_a>
    a0a8:	mov	r6, r0
    a0ac:	mov	r0, #208	; 0xd0
    a0b0:	bl	20bc <newchunk>
    a0b4:	mov	r5, r0
    a0b8:	mov	r0, #21
    a0bc:	cmp	r4, #0
    a0c0:	str	r6, [r5, #4]
    a0c4:	str	r0, [r5, #8]
    a0c8:	mov	r0, #33024	; 0x8100
    a0cc:	str	r0, [r5, #20]
    a0d0:	str	r5, [r5, #96]	; 0x60
    a0d4:	blt	a110 <sf_gen_vlan+0xc0>
    a0d8:	mov	r1, #16
    a0dc:	mov	r0, #0
    a0e0:	mov	r2, #8
    a0e4:	movw	r3, #4095	; 0xfff
    a0e8:	str	r1, [sp]
    a0ec:	stmib	sp, {r0, r4}
    a0f0:	mov	r0, #2
    a0f4:	mov	r1, #0
    a0f8:	bl	a52c <gen_ncmp>
    a0fc:	mov	r4, r0
    a100:	mov	r0, r5
    a104:	mov	r1, r4
    a108:	bl	3a60 <sf_gen_and>
    a10c:	mov	r5, r4
    a110:	ldr	r0, [pc, #96]	; a178 <sf_gen_vlan+0x128>
    a114:	ldr	r0, [pc, r0]
    a118:	ldr	r1, [pc, #92]	; a17c <sf_gen_vlan+0x12c>
    a11c:	add	r0, r0, #4
    a120:	add	r1, pc, r1
    a124:	str	r0, [r1]
    a128:	ldr	r0, [pc, #80]	; a180 <sf_gen_vlan+0x130>
    a12c:	ldr	r0, [pc, r0]
    a130:	ldr	r1, [pc, #76]	; a184 <sf_gen_vlan+0x134>
    a134:	add	r0, r0, #4
    a138:	add	r1, pc, r1
    a13c:	str	r0, [r1]
    a140:	mov	r0, r5
    a144:	sub	sp, fp, #16
    a148:	pop	{r4, r5, r6, sl, fp, pc}
    a14c:	ldr	r0, [pc, #56]	; a18c <sf_gen_vlan+0x13c>
    a150:	add	r0, pc, r0
    a154:	bl	2028 <sf_bpf_error>
    a158:	ldr	r0, [pc, #40]	; a188 <sf_gen_vlan+0x138>
    a15c:	add	r0, pc, r0
    a160:	bl	2028 <sf_bpf_error>
    a164:	.word	0x00026070
    a168:	.word	0x000263cc
    a16c:	.word	0x0002605c
    a170:	.word	0x000263a8
    a174:	.word	0x00026398
    a178:	.word	0x00026328
    a17c:	.word	0x0002631c
    a180:	.word	0x0002630c
    a184:	.word	0x00026300
    a188:	.word	0x00008e99
    a18c:	.word	0x00008e8c

0000a190 <sf_gen_mpls>:
    a190:	push	{r4, r5, fp, lr}
    a194:	add	fp, sp, #8
    a198:	sub	sp, sp, #16
    a19c:	mov	r4, r0
    a1a0:	ldr	r0, [pc, #304]	; a2d8 <sf_gen_mpls+0x148>
    a1a4:	ldr	r0, [pc, r0]
    a1a8:	ldr	r1, [pc, #300]	; a2dc <sf_gen_mpls+0x14c>
    a1ac:	add	r1, pc, r1
    a1b0:	str	r0, [r1]
    a1b4:	ldr	r1, [pc, #292]	; a2e0 <sf_gen_mpls+0x150>
    a1b8:	ldr	r1, [pc, r1]
    a1bc:	cmp	r1, #0
    a1c0:	beq	a1f0 <sf_gen_mpls+0x60>
    a1c4:	mov	r1, #0
    a1c8:	mov	r2, #16
    a1cc:	mov	r3, #1
    a1d0:	str	r2, [sp]
    a1d4:	str	r1, [sp, #4]
    a1d8:	str	r1, [sp, #8]
    a1dc:	sub	r1, r0, #2
    a1e0:	mov	r0, #2
    a1e4:	mov	r2, #16
    a1e8:	bl	a52c <gen_ncmp>
    a1ec:	b	a220 <sf_gen_mpls+0x90>
    a1f0:	ldr	r1, [pc, #236]	; a2e4 <sf_gen_mpls+0x154>
    a1f4:	ldr	r1, [pc, r1]
    a1f8:	cmp	r1, #104	; 0x68
    a1fc:	beq	a210 <sf_gen_mpls+0x80>
    a200:	cmp	r1, #9
    a204:	beq	a218 <sf_gen_mpls+0x88>
    a208:	cmp	r1, #1
    a20c:	bne	a2cc <sf_gen_mpls+0x13c>
    a210:	movw	r0, #34887	; 0x8847
    a214:	b	a21c <sf_gen_mpls+0x8c>
    a218:	movw	r0, #641	; 0x281
    a21c:	bl	446c <gen_linktype>
    a220:	mov	r5, r0
    a224:	cmp	r4, #0
    a228:	blt	a274 <sf_gen_mpls+0xe4>
    a22c:	ldr	r1, [pc, #184]	; a2ec <sf_gen_mpls+0x15c>
    a230:	mov	r3, #16
    a234:	lsl	r0, r4, #12
    a238:	mov	r2, #0
    a23c:	ldr	r1, [pc, r1]
    a240:	str	r3, [sp]
    a244:	movw	r3, #61440	; 0xf000
    a248:	str	r2, [sp, #4]
    a24c:	str	r0, [sp, #8]
    a250:	mov	r0, #2
    a254:	mov	r2, #0
    a258:	movt	r3, #65535	; 0xffff
    a25c:	bl	a52c <gen_ncmp>
    a260:	mov	r4, r0
    a264:	mov	r0, r5
    a268:	mov	r1, r4
    a26c:	bl	3a60 <sf_gen_and>
    a270:	b	a278 <sf_gen_mpls+0xe8>
    a274:	mov	r4, r5
    a278:	ldr	r0, [pc, #112]	; a2f0 <sf_gen_mpls+0x160>
    a27c:	ldr	r0, [pc, r0]
    a280:	ldr	r1, [pc, #108]	; a2f4 <sf_gen_mpls+0x164>
    a284:	add	r0, r0, #4
    a288:	add	r1, pc, r1
    a28c:	str	r0, [r1]
    a290:	ldr	r0, [pc, #96]	; a2f8 <sf_gen_mpls+0x168>
    a294:	ldr	r0, [pc, r0]
    a298:	ldr	r1, [pc, #92]	; a2fc <sf_gen_mpls+0x16c>
    a29c:	add	r0, r0, #4
    a2a0:	add	r1, pc, r1
    a2a4:	str	r0, [r1]
    a2a8:	ldr	r0, [pc, #80]	; a300 <sf_gen_mpls+0x170>
    a2ac:	ldr	r0, [pc, r0]
    a2b0:	ldr	r1, [pc, #76]	; a304 <sf_gen_mpls+0x174>
    a2b4:	add	r0, r0, #1
    a2b8:	add	r1, pc, r1
    a2bc:	str	r0, [r1]
    a2c0:	mov	r0, r4
    a2c4:	sub	sp, fp, #8
    a2c8:	pop	{r4, r5, fp, pc}
    a2cc:	ldr	r0, [pc, #20]	; a2e8 <sf_gen_mpls+0x158>
    a2d0:	add	r0, pc, r0
    a2d4:	bl	2028 <sf_bpf_error>
    a2d8:	.word	0x0002629c
    a2dc:	.word	0x00025f2c
    a2e0:	.word	0x00025f1c
    a2e4:	.word	0x0002623c
    a2e8:	.word	0x00008d4b
    a2ec:	.word	0x00025e9c
    a2f0:	.word	0x000261d0
    a2f4:	.word	0x000261c4
    a2f8:	.word	0x000261ac
    a2fc:	.word	0x000261a0
    a300:	.word	0x00025e28
    a304:	.word	0x00025e1c

0000a308 <sf_gen_pppoed>:
    a308:	movw	r0, #34915	; 0x8863
    a30c:	b	446c <gen_linktype>

0000a310 <sf_gen_pppoes>:
    a310:	push	{fp, lr}
    a314:	mov	fp, sp
    a318:	movw	r0, #34916	; 0x8864
    a31c:	bl	446c <gen_linktype>
    a320:	ldr	r1, [pc, #76]	; a374 <sf_gen_pppoes+0x64>
    a324:	mov	r2, #1
    a328:	add	r1, pc, r1
    a32c:	strb	r2, [r1]
    a330:	mov	r2, #8
    a334:	ldr	r1, [pc, #60]	; a378 <sf_gen_pppoes+0x68>
    a338:	add	r1, pc, r1
    a33c:	str	r2, [r1]
    a340:	ldr	r1, [pc, #52]	; a37c <sf_gen_pppoes+0x6c>
    a344:	ldr	r1, [pc, r1]
    a348:	ldr	r3, [pc, #48]	; a380 <sf_gen_pppoes+0x70>
    a34c:	add	r3, pc, r3
    a350:	str	r2, [r3]
    a354:	ldr	r2, [pc, #40]	; a384 <sf_gen_pppoes+0x74>
    a358:	add	r2, pc, r2
    a35c:	str	r1, [r2]
    a360:	add	r1, r1, #6
    a364:	ldr	r2, [pc, #28]	; a388 <sf_gen_pppoes+0x78>
    a368:	add	r2, pc, r2
    a36c:	str	r1, [r2]
    a370:	pop	{fp, pc}
    a374:	.word	0x00026128
    a378:	.word	0x00026114
    a37c:	.word	0x000260fc
    a380:	.word	0x000260f4
    a384:	.word	0x00025d80
    a388:	.word	0x000260d0

0000a38c <sf_gen_atmfield_code>:
    a38c:	push	{fp, lr}
    a390:	mov	fp, sp
    a394:	sub	sp, sp, #16
    a398:	sub	ip, r0, #51	; 0x33
    a39c:	cmp	ip, #4
    a3a0:	bhi	a4d8 <sf_gen_atmfield_code+0x14c>
    a3a4:	add	lr, pc, #4
    a3a8:	ldr	r0, [lr, ip, lsl #2]
    a3ac:	add	pc, lr, r0
    a3b0:	.word	0x00000014
    a3b4:	.word	0x000000e0
    a3b8:	.word	0x00000088
    a3bc:	.word	0x000000b8
    a3c0:	.word	0x0000004c
    a3c4:	ldr	r0, [pc, #308]	; a500 <sf_gen_atmfield_code+0x174>
    a3c8:	add	r0, pc, r0
    a3cc:	ldrb	r0, [r0]
    a3d0:	cmp	r0, #0
    a3d4:	beq	a4dc <sf_gen_atmfield_code+0x150>
    a3d8:	ldr	ip, [pc, #292]	; a504 <sf_gen_atmfield_code+0x178>
    a3dc:	ldr	ip, [pc, ip]
    a3e0:	cmn	ip, #1
    a3e4:	beq	a4d8 <sf_gen_atmfield_code+0x14c>
    a3e8:	stm	sp, {r2, r3}
    a3ec:	str	r1, [sp, #8]
    a3f0:	mov	r0, #1
    a3f4:	mov	r1, ip
    a3f8:	b	a488 <sf_gen_atmfield_code+0xfc>
    a3fc:	ldr	r0, [pc, #276]	; a518 <sf_gen_atmfield_code+0x18c>
    a400:	add	r0, pc, r0
    a404:	ldrb	r0, [r0]
    a408:	cmp	r0, #0
    a40c:	beq	a4e8 <sf_gen_atmfield_code+0x15c>
    a410:	ldr	r0, [pc, #260]	; a51c <sf_gen_atmfield_code+0x190>
    a414:	add	r0, pc, r0
    a418:	ldrb	r0, [r0]
    a41c:	cmp	r0, #1
    a420:	beq	a4d8 <sf_gen_atmfield_code+0x14c>
    a424:	stm	sp, {r2, r3}
    a428:	str	r1, [sp, #8]
    a42c:	mov	r0, #1
    a430:	mov	r1, #0
    a434:	b	a488 <sf_gen_atmfield_code+0xfc>
    a438:	ldr	r0, [pc, #208]	; a510 <sf_gen_atmfield_code+0x184>
    a43c:	add	r0, pc, r0
    a440:	ldrb	r0, [r0]
    a444:	cmp	r0, #1
    a448:	beq	a4d8 <sf_gen_atmfield_code+0x14c>
    a44c:	stm	sp, {r2, r3}
    a450:	str	r1, [sp, #8]
    a454:	mov	r0, #1
    a458:	mov	r1, #0
    a45c:	mov	r2, #16
    a460:	mov	r3, #15
    a464:	b	a4cc <sf_gen_atmfield_code+0x140>
    a468:	ldr	r0, [pc, #164]	; a514 <sf_gen_atmfield_code+0x188>
    a46c:	ldr	r0, [pc, r0]
    a470:	cmn	r0, #1
    a474:	beq	a4d8 <sf_gen_atmfield_code+0x14c>
    a478:	stm	sp, {r2, r3}
    a47c:	str	r1, [sp, #8]
    a480:	add	r1, r0, #5
    a484:	mov	r0, #1
    a488:	mov	r2, #16
    a48c:	b	a4c8 <sf_gen_atmfield_code+0x13c>
    a490:	ldr	r0, [pc, #112]	; a508 <sf_gen_atmfield_code+0x17c>
    a494:	add	r0, pc, r0
    a498:	ldrb	r0, [r0]
    a49c:	cmp	r0, #0
    a4a0:	beq	a4f4 <sf_gen_atmfield_code+0x168>
    a4a4:	ldr	ip, [pc, #96]	; a50c <sf_gen_atmfield_code+0x180>
    a4a8:	ldr	ip, [pc, ip]
    a4ac:	cmn	ip, #1
    a4b0:	beq	a4d8 <sf_gen_atmfield_code+0x14c>
    a4b4:	stm	sp, {r2, r3}
    a4b8:	str	r1, [sp, #8]
    a4bc:	mov	r0, #1
    a4c0:	mov	r1, ip
    a4c4:	mov	r2, #8
    a4c8:	mvn	r3, #0
    a4cc:	bl	a52c <gen_ncmp>
    a4d0:	mov	sp, fp
    a4d4:	pop	{fp, pc}
    a4d8:	bl	fc4 <abort@plt>
    a4dc:	ldr	r0, [pc, #60]	; a520 <sf_gen_atmfield_code+0x194>
    a4e0:	add	r0, pc, r0
    a4e4:	bl	2028 <sf_bpf_error>
    a4e8:	ldr	r0, [pc, #56]	; a528 <sf_gen_atmfield_code+0x19c>
    a4ec:	add	r0, pc, r0
    a4f0:	bl	2028 <sf_bpf_error>
    a4f4:	ldr	r0, [pc, #40]	; a524 <sf_gen_atmfield_code+0x198>
    a4f8:	add	r0, pc, r0
    a4fc:	bl	2028 <sf_bpf_error>
    a500:	.word	0x0002608c
    a504:	.word	0x0002607c
    a508:	.word	0x00025fc0
    a50c:	.word	0x00025fb4
    a510:	.word	0x00026024
    a514:	.word	0x00025ff8
    a518:	.word	0x00026054
    a51c:	.word	0x0002604c
    a520:	.word	0x00008b61
    a524:	.word	0x00008b69
    a528:	.word	0x00008b95

0000a52c <gen_ncmp>:
    a52c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    a530:	add	fp, sp, #24
    a534:	mov	r5, r3
    a538:	bl	9a88 <gen_load_a>
    a53c:	ldr	r7, [fp, #16]
    a540:	ldr	r8, [fp, #12]
    a544:	ldr	r6, [fp, #8]
    a548:	mov	r4, r0
    a54c:	cmn	r5, #1
    a550:	beq	a580 <gen_ncmp+0x54>
    a554:	mov	r0, #20
    a558:	bl	20bc <newchunk>
    a55c:	mov	r1, #84	; 0x54
    a560:	mov	r2, r4
    a564:	str	r1, [r0]
    a568:	str	r5, [r0, #12]
    a56c:	mov	r1, r2
    a570:	ldr	r2, [r2, #16]
    a574:	cmp	r2, #0
    a578:	bne	a56c <gen_ncmp+0x40>
    a57c:	str	r0, [r1, #16]
    a580:	mov	r0, #208	; 0xd0
    a584:	orr	r5, r6, #5
    a588:	bl	20bc <newchunk>
    a58c:	cmp	r8, #0
    a590:	stmib	r0, {r4, r5}
    a594:	str	r7, [r0, #20]
    a598:	str	r0, [r0, #96]	; 0x60
    a59c:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
    a5a0:	orr	r1, r6, #16
    a5a4:	cmp	r1, #48	; 0x30
    a5a8:	ldreq	r1, [r0, #44]	; 0x2c
    a5ac:	clzeq	r1, r1
    a5b0:	lsreq	r1, r1, #5
    a5b4:	streq	r1, [r0, #44]	; 0x2c
    a5b8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0000a5bc <sf_gen_atmtype_abbrev>:
    a5bc:	push	{r4, r5, fp, lr}
    a5c0:	add	fp, sp, #8
    a5c4:	sub	r0, r0, #22
    a5c8:	cmp	r0, #9
    a5cc:	bhi	a844 <sf_gen_atmtype_abbrev+0x288>
    a5d0:	add	r1, pc, #4
    a5d4:	ldr	r0, [r1, r0, lsl #2]
    a5d8:	add	pc, r1, r0
    a5dc:	.word	0x00000028
    a5e0:	.word	0x0000010c
    a5e4:	.word	0x000000d4
    a5e8:	.word	0x00000060
    a5ec:	.word	0x00000210
    a5f0:	.word	0x00000144
    a5f4:	.word	0x00000268
    a5f8:	.word	0x00000268
    a5fc:	.word	0x0000017c
    a600:	.word	0x00000098
    a604:	ldr	r0, [pc, #668]	; a8a8 <sf_gen_atmtype_abbrev+0x2ec>
    a608:	add	r0, pc, r0
    a60c:	ldrb	r0, [r0]
    a610:	cmp	r0, #0
    a614:	beq	a848 <sf_gen_atmtype_abbrev+0x28c>
    a618:	mov	r0, #51	; 0x33
    a61c:	mov	r1, #0
    a620:	mov	r2, #16
    a624:	mov	r3, #0
    a628:	bl	a38c <sf_gen_atmfield_code>
    a62c:	mov	r5, r0
    a630:	mov	r0, #52	; 0x34
    a634:	mov	r1, #1
    a638:	b	a820 <sf_gen_atmtype_abbrev+0x264>
    a63c:	ldr	r0, [pc, #624]	; a8b4 <sf_gen_atmtype_abbrev+0x2f8>
    a640:	add	r0, pc, r0
    a644:	ldrb	r0, [r0]
    a648:	cmp	r0, #0
    a64c:	beq	a854 <sf_gen_atmtype_abbrev+0x298>
    a650:	mov	r0, #51	; 0x33
    a654:	mov	r1, #0
    a658:	mov	r2, #16
    a65c:	mov	r3, #0
    a660:	bl	a38c <sf_gen_atmfield_code>
    a664:	mov	r5, r0
    a668:	mov	r0, #52	; 0x34
    a66c:	mov	r1, #4
    a670:	b	a820 <sf_gen_atmtype_abbrev+0x264>
    a674:	ldr	r0, [pc, #612]	; a8e0 <sf_gen_atmtype_abbrev+0x324>
    a678:	add	r0, pc, r0
    a67c:	ldrb	r0, [r0]
    a680:	cmp	r0, #0
    a684:	beq	a860 <sf_gen_atmtype_abbrev+0x2a4>
    a688:	mov	r0, #53	; 0x35
    a68c:	mov	r1, #2
    a690:	mov	r2, #16
    a694:	mov	r3, #0
    a698:	mov	r4, #0
    a69c:	bl	a38c <sf_gen_atmfield_code>
    a6a0:	ldr	r1, [pc, #572]	; a8e4 <sf_gen_atmtype_abbrev+0x328>
    a6a4:	add	r1, pc, r1
    a6a8:	strb	r4, [r1]
    a6ac:	pop	{r4, r5, fp, pc}
    a6b0:	ldr	r0, [pc, #504]	; a8b0 <sf_gen_atmtype_abbrev+0x2f4>
    a6b4:	add	r0, pc, r0
    a6b8:	ldrb	r0, [r0]
    a6bc:	cmp	r0, #0
    a6c0:	beq	a86c <sf_gen_atmtype_abbrev+0x2b0>
    a6c4:	mov	r0, #51	; 0x33
    a6c8:	mov	r1, #0
    a6cc:	mov	r2, #16
    a6d0:	mov	r3, #0
    a6d4:	bl	a38c <sf_gen_atmfield_code>
    a6d8:	mov	r5, r0
    a6dc:	mov	r0, #52	; 0x34
    a6e0:	mov	r1, #3
    a6e4:	b	a820 <sf_gen_atmtype_abbrev+0x264>
    a6e8:	ldr	r0, [pc, #444]	; a8ac <sf_gen_atmtype_abbrev+0x2f0>
    a6ec:	add	r0, pc, r0
    a6f0:	ldrb	r0, [r0]
    a6f4:	cmp	r0, #0
    a6f8:	beq	a878 <sf_gen_atmtype_abbrev+0x2bc>
    a6fc:	mov	r0, #51	; 0x33
    a700:	mov	r1, #0
    a704:	mov	r2, #16
    a708:	mov	r3, #0
    a70c:	bl	a38c <sf_gen_atmfield_code>
    a710:	mov	r5, r0
    a714:	mov	r0, #52	; 0x34
    a718:	mov	r1, #2
    a71c:	b	a820 <sf_gen_atmtype_abbrev+0x264>
    a720:	ldr	r0, [pc, #404]	; a8bc <sf_gen_atmtype_abbrev+0x300>
    a724:	add	r0, pc, r0
    a728:	ldrb	r0, [r0]
    a72c:	cmp	r0, #0
    a730:	beq	a884 <sf_gen_atmtype_abbrev+0x2c8>
    a734:	mov	r0, #51	; 0x33
    a738:	mov	r1, #0
    a73c:	mov	r2, #16
    a740:	mov	r3, #0
    a744:	bl	a38c <sf_gen_atmfield_code>
    a748:	mov	r5, r0
    a74c:	mov	r0, #52	; 0x34
    a750:	mov	r1, #16
    a754:	b	a820 <sf_gen_atmtype_abbrev+0x264>
    a758:	ldr	r0, [pc, #352]	; a8c0 <sf_gen_atmtype_abbrev+0x304>
    a75c:	add	r0, pc, r0
    a760:	ldrb	r0, [r0]
    a764:	cmp	r0, #0
    a768:	beq	a890 <sf_gen_atmtype_abbrev+0x2d4>
    a76c:	mov	r0, #53	; 0x35
    a770:	mov	r1, #1
    a774:	mov	r2, #16
    a778:	mov	r3, #0
    a77c:	mov	r4, #1
    a780:	mov	r5, #0
    a784:	bl	a38c <sf_gen_atmfield_code>
    a788:	ldr	r1, [pc, #308]	; a8c4 <sf_gen_atmtype_abbrev+0x308>
    a78c:	mov	r2, #3
    a790:	add	r1, pc, r1
    a794:	strb	r4, [r1]
    a798:	ldr	r1, [pc, #296]	; a8c8 <sf_gen_atmtype_abbrev+0x30c>
    a79c:	add	r1, pc, r1
    a7a0:	str	r5, [r1]
    a7a4:	ldr	r1, [pc, #288]	; a8cc <sf_gen_atmtype_abbrev+0x310>
    a7a8:	add	r1, pc, r1
    a7ac:	str	r2, [r1]
    a7b0:	ldr	r1, [pc, #280]	; a8d0 <sf_gen_atmtype_abbrev+0x314>
    a7b4:	ldr	r1, [pc, r1]
    a7b8:	ldr	r3, [pc, #276]	; a8d4 <sf_gen_atmtype_abbrev+0x318>
    a7bc:	add	r2, r1, #2
    a7c0:	add	r3, pc, r3
    a7c4:	str	r2, [r3]
    a7c8:	add	r2, r1, #14
    a7cc:	add	r1, r1, #16
    a7d0:	ldr	r3, [pc, #256]	; a8d8 <sf_gen_atmtype_abbrev+0x31c>
    a7d4:	add	r3, pc, r3
    a7d8:	str	r2, [r3]
    a7dc:	ldr	r2, [pc, #248]	; a8dc <sf_gen_atmtype_abbrev+0x320>
    a7e0:	add	r2, pc, r2
    a7e4:	str	r1, [r2]
    a7e8:	pop	{r4, r5, fp, pc}
    a7ec:	ldr	r0, [pc, #196]	; a8b8 <sf_gen_atmtype_abbrev+0x2fc>
    a7f0:	add	r0, pc, r0
    a7f4:	ldrb	r0, [r0]
    a7f8:	cmp	r0, #0
    a7fc:	beq	a89c <sf_gen_atmtype_abbrev+0x2e0>
    a800:	mov	r0, #51	; 0x33
    a804:	mov	r1, #0
    a808:	mov	r2, #16
    a80c:	mov	r3, #0
    a810:	bl	a38c <sf_gen_atmfield_code>
    a814:	mov	r5, r0
    a818:	mov	r0, #52	; 0x34
    a81c:	mov	r1, #5
    a820:	mov	r2, #16
    a824:	mov	r3, #0
    a828:	bl	a38c <sf_gen_atmfield_code>
    a82c:	mov	r4, r0
    a830:	mov	r0, r5
    a834:	mov	r1, r4
    a838:	bl	3a60 <sf_gen_and>
    a83c:	mov	r0, r4
    a840:	pop	{r4, r5, fp, pc}
    a844:	bl	fc4 <abort@plt>
    a848:	ldr	r0, [pc, #152]	; a8e8 <sf_gen_atmtype_abbrev+0x32c>
    a84c:	add	r0, pc, r0
    a850:	bl	2028 <sf_bpf_error>
    a854:	ldr	r0, [pc, #152]	; a8f4 <sf_gen_atmtype_abbrev+0x338>
    a858:	add	r0, pc, r0
    a85c:	bl	2028 <sf_bpf_error>
    a860:	ldr	r0, [pc, #156]	; a904 <sf_gen_atmtype_abbrev+0x348>
    a864:	add	r0, pc, r0
    a868:	bl	2028 <sf_bpf_error>
    a86c:	ldr	r0, [pc, #124]	; a8f0 <sf_gen_atmtype_abbrev+0x334>
    a870:	add	r0, pc, r0
    a874:	bl	2028 <sf_bpf_error>
    a878:	ldr	r0, [pc, #108]	; a8ec <sf_gen_atmtype_abbrev+0x330>
    a87c:	add	r0, pc, r0
    a880:	bl	2028 <sf_bpf_error>
    a884:	ldr	r0, [pc, #112]	; a8fc <sf_gen_atmtype_abbrev+0x340>
    a888:	add	r0, pc, r0
    a88c:	bl	2028 <sf_bpf_error>
    a890:	ldr	r0, [pc, #104]	; a900 <sf_gen_atmtype_abbrev+0x344>
    a894:	add	r0, pc, r0
    a898:	bl	2028 <sf_bpf_error>
    a89c:	ldr	r0, [pc, #84]	; a8f8 <sf_gen_atmtype_abbrev+0x33c>
    a8a0:	add	r0, pc, r0
    a8a4:	bl	2028 <sf_bpf_error>
    a8a8:	.word	0x00025e4c
    a8ac:	.word	0x00025d68
    a8b0:	.word	0x00025da0
    a8b4:	.word	0x00025e14
    a8b8:	.word	0x00025c64
    a8bc:	.word	0x00025d30
    a8c0:	.word	0x00025cf8
    a8c4:	.word	0x00025ca4
    a8c8:	.word	0x00025ca4
    a8cc:	.word	0x00025ca4
    a8d0:	.word	0x00025cb0
    a8d4:	.word	0x00025c88
    a8d8:	.word	0x00025c64
    a8dc:	.word	0x00025c5c
    a8e0:	.word	0x00025ddc
    a8e4:	.word	0x00025d90
    a8e8:	.word	0x00008859
    a8ec:	.word	0x0000884b
    a8f0:	.word	0x00008877
    a8f4:	.word	0x000088b2
    a8f8:	.word	0x0000888d
    a8fc:	.word	0x000088c4
    a900:	.word	0x000088da
    a904:	.word	0x0000892b

0000a908 <sf_gen_mtp2type_abbrev>:
    a908:	push	{r4, r5, r6, sl, fp, lr}
    a90c:	add	fp, sp, #16
    a910:	sub	sp, sp, #16
    a914:	cmp	r0, #24
    a918:	beq	a9ec <sf_gen_mtp2type_abbrev+0xe4>
    a91c:	cmp	r0, #23
    a920:	beq	a964 <sf_gen_mtp2type_abbrev+0x5c>
    a924:	cmp	r0, #22
    a928:	bne	aa40 <sf_gen_mtp2type_abbrev+0x138>
    a92c:	ldr	r0, [pc, #308]	; aa68 <sf_gen_mtp2type_abbrev+0x160>
    a930:	ldr	r0, [pc, r0]
    a934:	sub	r1, r0, #139	; 0x8b
    a938:	cmp	r1, #2
    a93c:	bcc	a948 <sf_gen_mtp2type_abbrev+0x40>
    a940:	cmp	r0, #197	; 0xc5
    a944:	bne	aa44 <sf_gen_mtp2type_abbrev+0x13c>
    a948:	ldr	r1, [pc, #284]	; aa6c <sf_gen_mtp2type_abbrev+0x164>
    a94c:	mov	r0, #0
    a950:	mov	r2, #16
    a954:	ldr	r1, [pc, r1]
    a958:	str	r2, [sp]
    a95c:	str	r0, [sp, #4]
    a960:	b	aa24 <sf_gen_mtp2type_abbrev+0x11c>
    a964:	ldr	r0, [pc, #260]	; aa70 <sf_gen_mtp2type_abbrev+0x168>
    a968:	ldr	r0, [pc, r0]
    a96c:	sub	r1, r0, #139	; 0x8b
    a970:	cmp	r1, #2
    a974:	bcc	a980 <sf_gen_mtp2type_abbrev+0x78>
    a978:	cmp	r0, #197	; 0xc5
    a97c:	bne	aa50 <sf_gen_mtp2type_abbrev+0x148>
    a980:	ldr	r1, [pc, #236]	; aa74 <sf_gen_mtp2type_abbrev+0x16c>
    a984:	mov	r0, #2
    a988:	mov	r2, #1
    a98c:	mov	r5, #32
    a990:	mov	r3, #63	; 0x3f
    a994:	mov	r6, #0
    a998:	ldr	r1, [pc, r1]
    a99c:	str	r2, [sp, #4]
    a9a0:	str	r0, [sp, #8]
    a9a4:	mov	r0, #0
    a9a8:	mov	r2, #16
    a9ac:	str	r5, [sp]
    a9b0:	bl	a52c <gen_ncmp>
    a9b4:	ldr	r1, [pc, #188]	; aa78 <sf_gen_mtp2type_abbrev+0x170>
    a9b8:	mov	r4, r0
    a9bc:	mov	r0, #0
    a9c0:	mov	r2, #16
    a9c4:	mov	r3, #63	; 0x3f
    a9c8:	ldr	r1, [pc, r1]
    a9cc:	stm	sp, {r5, r6}
    a9d0:	str	r6, [sp, #8]
    a9d4:	bl	a52c <gen_ncmp>
    a9d8:	mov	r1, r4
    a9dc:	bl	3a60 <sf_gen_and>
    a9e0:	mov	r0, r4
    a9e4:	sub	sp, fp, #16
    a9e8:	pop	{r4, r5, r6, sl, fp, pc}
    a9ec:	ldr	r0, [pc, #136]	; aa7c <sf_gen_mtp2type_abbrev+0x174>
    a9f0:	ldr	r0, [pc, r0]
    a9f4:	sub	r1, r0, #139	; 0x8b
    a9f8:	cmp	r1, #2
    a9fc:	bcc	aa08 <sf_gen_mtp2type_abbrev+0x100>
    aa00:	cmp	r0, #197	; 0xc5
    aa04:	bne	aa5c <sf_gen_mtp2type_abbrev+0x154>
    aa08:	ldr	r1, [pc, #112]	; aa80 <sf_gen_mtp2type_abbrev+0x178>
    aa0c:	mov	r2, #0
    aa10:	mov	r3, #32
    aa14:	mov	r0, #2
    aa18:	ldr	r1, [pc, r1]
    aa1c:	str	r3, [sp]
    aa20:	str	r2, [sp, #4]
    aa24:	str	r0, [sp, #8]
    aa28:	mov	r0, #0
    aa2c:	mov	r2, #16
    aa30:	mov	r3, #63	; 0x3f
    aa34:	bl	a52c <gen_ncmp>
    aa38:	sub	sp, fp, #16
    aa3c:	pop	{r4, r5, r6, sl, fp, pc}
    aa40:	bl	fc4 <abort@plt>
    aa44:	ldr	r0, [pc, #56]	; aa84 <sf_gen_mtp2type_abbrev+0x17c>
    aa48:	add	r0, pc, r0
    aa4c:	bl	2028 <sf_bpf_error>
    aa50:	ldr	r0, [pc, #48]	; aa88 <sf_gen_mtp2type_abbrev+0x180>
    aa54:	add	r0, pc, r0
    aa58:	bl	2028 <sf_bpf_error>
    aa5c:	ldr	r0, [pc, #40]	; aa8c <sf_gen_mtp2type_abbrev+0x184>
    aa60:	add	r0, pc, r0
    aa64:	bl	2028 <sf_bpf_error>
    aa68:	.word	0x00025b00
    aa6c:	.word	0x00025b14
    aa70:	.word	0x00025ac8
    aa74:	.word	0x00025ad0
    aa78:	.word	0x00025aa0
    aa7c:	.word	0x00025a40
    aa80:	.word	0x00025a50
    aa84:	.word	0x00008767
    aa88:	.word	0x00008779
    aa8c:	.word	0x0000878b

0000aa90 <sf_gen_mtp3field_code>:
    aa90:	push	{fp, lr}
    aa94:	mov	fp, sp
    aa98:	sub	sp, sp, #16
    aa9c:	sub	ip, r0, #1
    aaa0:	cmp	ip, #3
    aaa4:	bhi	abb8 <sf_gen_mtp3field_code+0x128>
    aaa8:	add	lr, pc, #4
    aaac:	ldr	r0, [lr, ip, lsl #2]
    aab0:	add	pc, lr, r0
    aab4:	.word	0x00000010
    aab8:	.word	0x000000b0
    aabc:	.word	0x00000044
    aac0:	.word	0x00000078
    aac4:	ldr	ip, [pc, #336]	; ac1c <sf_gen_mtp3field_code+0x18c>
    aac8:	ldr	ip, [pc, ip]
    aacc:	cmn	ip, #1
    aad0:	beq	abbc <sf_gen_mtp3field_code+0x12c>
    aad4:	cmp	r1, #256	; 0x100
    aad8:	bcs	abc8 <sf_gen_mtp3field_code+0x138>
    aadc:	stm	sp, {r2, r3}
    aae0:	str	r1, [sp, #8]
    aae4:	mov	r0, #0
    aae8:	mov	r1, ip
    aaec:	mov	r2, #16
    aaf0:	mvn	r3, #0
    aaf4:	b	abac <sf_gen_mtp3field_code+0x11c>
    aaf8:	ldr	ip, [pc, #292]	; ac24 <sf_gen_mtp3field_code+0x194>
    aafc:	ldr	ip, [pc, ip]
    ab00:	cmn	ip, #1
    ab04:	beq	abd4 <sf_gen_mtp3field_code+0x144>
    ab08:	cmp	r1, #16384	; 0x4000
    ab0c:	bcs	abe0 <sf_gen_mtp3field_code+0x150>
    ab10:	mov	r0, #4128768	; 0x3f0000
    ab14:	stm	sp, {r2, r3}
    ab18:	movw	r3, #0
    ab1c:	and	r0, r0, r1, lsl #8
    ab20:	movt	r3, #65343	; 0xff3f
    ab24:	orr	r0, r0, r1, lsl #24
    ab28:	b	ab9c <sf_gen_mtp3field_code+0x10c>
    ab2c:	ldr	ip, [pc, #244]	; ac28 <sf_gen_mtp3field_code+0x198>
    ab30:	ldr	ip, [pc, ip]
    ab34:	cmn	ip, #1
    ab38:	beq	abec <sf_gen_mtp3field_code+0x15c>
    ab3c:	cmp	r1, #16
    ab40:	bcs	abf8 <sf_gen_mtp3field_code+0x168>
    ab44:	lsl	r0, r1, #4
    ab48:	stm	sp, {r2, r3}
    ab4c:	mov	r1, ip
    ab50:	mov	r2, #16
    ab54:	mov	r3, #240	; 0xf0
    ab58:	str	r0, [sp, #8]
    ab5c:	mov	r0, #0
    ab60:	b	abac <sf_gen_mtp3field_code+0x11c>
    ab64:	ldr	ip, [pc, #180]	; ac20 <sf_gen_mtp3field_code+0x190>
    ab68:	ldr	ip, [pc, ip]
    ab6c:	cmn	ip, #1
    ab70:	beq	ac04 <sf_gen_mtp3field_code+0x174>
    ab74:	cmp	r1, #16384	; 0x4000
    ab78:	bcs	ac10 <sf_gen_mtp3field_code+0x180>
    ab7c:	stm	sp, {r2, r3}
    ab80:	and	r0, r1, #1020	; 0x3fc
    ab84:	ubfx	r2, r1, #10, #4
    ab88:	and	r1, r1, #3
    ab8c:	movw	r3, #65295	; 0xff0f
    ab90:	orr	r0, r2, r0, lsl #6
    ab94:	movt	r3, #192	; 0xc0
    ab98:	orr	r0, r0, r1, lsl #22
    ab9c:	str	r0, [sp, #8]
    aba0:	mov	r0, #0
    aba4:	mov	r1, ip
    aba8:	mov	r2, #0
    abac:	bl	a52c <gen_ncmp>
    abb0:	mov	sp, fp
    abb4:	pop	{fp, pc}
    abb8:	bl	fc4 <abort@plt>
    abbc:	ldr	r0, [pc, #104]	; ac2c <sf_gen_mtp3field_code+0x19c>
    abc0:	add	r0, pc, r0
    abc4:	bl	2028 <sf_bpf_error>
    abc8:	ldr	r0, [pc, #96]	; ac30 <sf_gen_mtp3field_code+0x1a0>
    abcc:	add	r0, pc, r0
    abd0:	bl	2028 <sf_bpf_error>
    abd4:	ldr	r0, [pc, #96]	; ac3c <sf_gen_mtp3field_code+0x1ac>
    abd8:	add	r0, pc, r0
    abdc:	bl	2028 <sf_bpf_error>
    abe0:	ldr	r0, [pc, #88]	; ac40 <sf_gen_mtp3field_code+0x1b0>
    abe4:	add	r0, pc, r0
    abe8:	bl	2028 <sf_bpf_error>
    abec:	ldr	r0, [pc, #80]	; ac44 <sf_gen_mtp3field_code+0x1b4>
    abf0:	add	r0, pc, r0
    abf4:	bl	2028 <sf_bpf_error>
    abf8:	ldr	r0, [pc, #72]	; ac48 <sf_gen_mtp3field_code+0x1b8>
    abfc:	add	r0, pc, r0
    ac00:	bl	2028 <sf_bpf_error>
    ac04:	ldr	r0, [pc, #40]	; ac34 <sf_gen_mtp3field_code+0x1a4>
    ac08:	add	r0, pc, r0
    ac0c:	bl	2028 <sf_bpf_error>
    ac10:	ldr	r0, [pc, #32]	; ac38 <sf_gen_mtp3field_code+0x1a8>
    ac14:	add	r0, pc, r0
    ac18:	bl	2028 <sf_bpf_error>
    ac1c:	.word	0x000259a4
    ac20:	.word	0x00025908
    ac24:	.word	0x00025978
    ac28:	.word	0x00025948
    ac2c:	.word	0x00008648
    ac30:	.word	0x00008658
    ac34:	.word	0x00008642
    ac38:	.word	0x00008652
    ac3c:	.word	0x000086b6
    ac40:	.word	0x000086c6
    ac44:	.word	0x000086e2
    ac48:	.word	0x000086f2

0000ac4c <sf_gen_atmmulti_abbrev>:
    ac4c:	push	{r4, r5, fp, lr}
    ac50:	add	fp, sp, #8
    ac54:	ldr	r1, [pc, #564]	; ae90 <sf_gen_atmmulti_abbrev+0x244>
    ac58:	add	r1, pc, r1
    ac5c:	ldrb	r1, [r1]
    ac60:	cmp	r0, #69	; 0x45
    ac64:	bgt	ac88 <sf_gen_atmmulti_abbrev+0x3c>
    ac68:	cmp	r0, #28
    ac6c:	bne	ad4c <sf_gen_atmmulti_abbrev+0x100>
    ac70:	mov	r0, #29
    ac74:	cmp	r1, #0
    ac78:	bne	ac60 <sf_gen_atmmulti_abbrev+0x14>
    ac7c:	ldr	r0, [pc, #528]	; ae94 <sf_gen_atmmulti_abbrev+0x248>
    ac80:	add	r0, pc, r0
    ac84:	bl	2028 <sf_bpf_error>
    ac88:	cmp	r0, #70	; 0x46
    ac8c:	bne	adb0 <sf_gen_atmmulti_abbrev+0x164>
    ac90:	cmp	r1, #0
    ac94:	beq	ae6c <sf_gen_atmmulti_abbrev+0x220>
    ac98:	mov	r0, #54	; 0x36
    ac9c:	mov	r1, #5
    aca0:	mov	r2, #16
    aca4:	mov	r3, #0
    aca8:	bl	a38c <sf_gen_atmfield_code>
    acac:	mov	r5, r0
    acb0:	mov	r0, #54	; 0x36
    acb4:	mov	r1, #2
    acb8:	mov	r2, #16
    acbc:	mov	r3, #0
    acc0:	bl	a38c <sf_gen_atmfield_code>
    acc4:	mov	r4, r0
    acc8:	mov	r0, r5
    accc:	mov	r1, r4
    acd0:	bl	3b3c <sf_gen_or>
    acd4:	mov	r0, #54	; 0x36
    acd8:	mov	r1, #7
    acdc:	mov	r2, #16
    ace0:	mov	r3, #0
    ace4:	bl	a38c <sf_gen_atmfield_code>
    ace8:	mov	r1, r4
    acec:	bl	3b3c <sf_gen_or>
    acf0:	mov	r0, #54	; 0x36
    acf4:	mov	r1, #15
    acf8:	mov	r2, #16
    acfc:	mov	r3, #0
    ad00:	bl	a38c <sf_gen_atmfield_code>
    ad04:	mov	r1, r4
    ad08:	bl	3b3c <sf_gen_or>
    ad0c:	mov	r0, #54	; 0x36
    ad10:	mov	r1, #77	; 0x4d
    ad14:	mov	r2, #16
    ad18:	mov	r3, #0
    ad1c:	bl	a38c <sf_gen_atmfield_code>
    ad20:	mov	r1, r4
    ad24:	bl	3b3c <sf_gen_or>
    ad28:	mov	r0, #54	; 0x36
    ad2c:	mov	r1, #90	; 0x5a
    ad30:	mov	r2, #16
    ad34:	mov	r3, #0
    ad38:	bl	a38c <sf_gen_atmfield_code>
    ad3c:	mov	r1, r4
    ad40:	bl	3b3c <sf_gen_or>
    ad44:	mov	r0, #26
    ad48:	b	ae54 <sf_gen_atmmulti_abbrev+0x208>
    ad4c:	cmp	r0, #29
    ad50:	bne	ae68 <sf_gen_atmmulti_abbrev+0x21c>
    ad54:	cmp	r1, #0
    ad58:	beq	ae78 <sf_gen_atmmulti_abbrev+0x22c>
    ad5c:	mov	r0, #52	; 0x34
    ad60:	mov	r1, #3
    ad64:	mov	r2, #16
    ad68:	mov	r3, #0
    ad6c:	bl	a38c <sf_gen_atmfield_code>
    ad70:	mov	r5, r0
    ad74:	mov	r0, #52	; 0x34
    ad78:	mov	r1, #4
    ad7c:	mov	r2, #16
    ad80:	mov	r3, #0
    ad84:	bl	a38c <sf_gen_atmfield_code>
    ad88:	mov	r4, r0
    ad8c:	mov	r0, r5
    ad90:	mov	r1, r4
    ad94:	bl	3b3c <sf_gen_or>
    ad98:	mov	r0, #51	; 0x33
    ad9c:	mov	r1, #0
    ada0:	mov	r2, #16
    ada4:	mov	r3, #0
    ada8:	bl	a38c <sf_gen_atmfield_code>
    adac:	b	ae58 <sf_gen_atmmulti_abbrev+0x20c>
    adb0:	cmp	r0, #71	; 0x47
    adb4:	bne	ae68 <sf_gen_atmmulti_abbrev+0x21c>
    adb8:	cmp	r1, #0
    adbc:	beq	ae84 <sf_gen_atmmulti_abbrev+0x238>
    adc0:	mov	r0, #54	; 0x36
    adc4:	mov	r1, #5
    adc8:	mov	r2, #16
    adcc:	mov	r3, #0
    add0:	bl	a38c <sf_gen_atmfield_code>
    add4:	mov	r5, r0
    add8:	mov	r0, #54	; 0x36
    addc:	mov	r1, #2
    ade0:	mov	r2, #16
    ade4:	mov	r3, #0
    ade8:	bl	a38c <sf_gen_atmfield_code>
    adec:	mov	r4, r0
    adf0:	mov	r0, r5
    adf4:	mov	r1, r4
    adf8:	bl	3b3c <sf_gen_or>
    adfc:	mov	r0, #54	; 0x36
    ae00:	mov	r1, #7
    ae04:	mov	r2, #16
    ae08:	mov	r3, #0
    ae0c:	bl	a38c <sf_gen_atmfield_code>
    ae10:	mov	r1, r4
    ae14:	bl	3b3c <sf_gen_or>
    ae18:	mov	r0, #54	; 0x36
    ae1c:	mov	r1, #77	; 0x4d
    ae20:	mov	r2, #16
    ae24:	mov	r3, #0
    ae28:	bl	a38c <sf_gen_atmfield_code>
    ae2c:	mov	r1, r4
    ae30:	bl	3b3c <sf_gen_or>
    ae34:	mov	r0, #54	; 0x36
    ae38:	mov	r1, #90	; 0x5a
    ae3c:	mov	r2, #16
    ae40:	mov	r3, #0
    ae44:	bl	a38c <sf_gen_atmfield_code>
    ae48:	mov	r1, r4
    ae4c:	bl	3b3c <sf_gen_or>
    ae50:	mov	r0, #22
    ae54:	bl	a5bc <sf_gen_atmtype_abbrev>
    ae58:	mov	r1, r4
    ae5c:	bl	3a60 <sf_gen_and>
    ae60:	mov	r0, r4
    ae64:	pop	{r4, r5, fp, pc}
    ae68:	bl	fc4 <abort@plt>
    ae6c:	ldr	r0, [pc, #40]	; ae9c <sf_gen_atmmulti_abbrev+0x250>
    ae70:	add	r0, pc, r0
    ae74:	bl	2028 <sf_bpf_error>
    ae78:	ldr	r0, [pc, #24]	; ae98 <sf_gen_atmmulti_abbrev+0x24c>
    ae7c:	add	r0, pc, r0
    ae80:	bl	2028 <sf_bpf_error>
    ae84:	ldr	r0, [pc, #20]	; aea0 <sf_gen_atmmulti_abbrev+0x254>
    ae88:	add	r0, pc, r0
    ae8c:	bl	2028 <sf_bpf_error>
    ae90:	.word	0x000257fc
    ae94:	.word	0x00008693
    ae98:	.word	0x000084b7
    ae9c:	.word	0x000084e5
    aea0:	.word	0x000084f4

0000aea4 <gen_mpls_linktype>:
    aea4:	push	{r4, r5, r6, sl, fp, lr}
    aea8:	add	fp, sp, #16
    aeac:	sub	sp, sp, #16
    aeb0:	cmp	r0, #17
    aeb4:	beq	aef8 <gen_mpls_linktype+0x54>
    aeb8:	cmp	r0, #2
    aebc:	bne	af68 <gen_mpls_linktype+0xc4>
    aec0:	mov	r0, #1
    aec4:	mov	r4, #0
    aec8:	mov	r6, #16
    aecc:	mvn	r1, #1
    aed0:	mov	r2, #16
    aed4:	mov	r3, #1
    aed8:	str	r0, [sp, #8]
    aedc:	mov	r0, #3
    aee0:	str	r6, [sp]
    aee4:	str	r4, [sp, #4]
    aee8:	bl	a52c <gen_ncmp>
    aeec:	mov	r5, r0
    aef0:	mov	r0, #64	; 0x40
    aef4:	b	af2c <gen_mpls_linktype+0x88>
    aef8:	mov	r0, #1
    aefc:	mov	r4, #0
    af00:	mov	r6, #16
    af04:	mvn	r1, #1
    af08:	mov	r2, #16
    af0c:	mov	r3, #1
    af10:	str	r0, [sp, #8]
    af14:	mov	r0, #3
    af18:	str	r6, [sp]
    af1c:	str	r4, [sp, #4]
    af20:	bl	a52c <gen_ncmp>
    af24:	mov	r5, r0
    af28:	mov	r0, #96	; 0x60
    af2c:	str	r0, [sp, #8]
    af30:	mov	r0, #3
    af34:	mov	r1, #0
    af38:	mov	r2, #16
    af3c:	mov	r3, #240	; 0xf0
    af40:	str	r6, [sp]
    af44:	str	r4, [sp, #4]
    af48:	bl	a52c <gen_ncmp>
    af4c:	mov	r4, r0
    af50:	mov	r0, r5
    af54:	mov	r1, r4
    af58:	bl	3a60 <sf_gen_and>
    af5c:	mov	r0, r4
    af60:	sub	sp, fp, #16
    af64:	pop	{r4, r5, r6, sl, fp, pc}
    af68:	bl	fc4 <abort@plt>

0000af6c <ethertype_to_ppptype>:
    af6c:	cmp	r0, #2048	; 0x800
    af70:	bge	af94 <ethertype_to_ppptype+0x28>
    af74:	cmp	r0, #253	; 0xfd
    af78:	bgt	afc0 <ethertype_to_ppptype+0x54>
    af7c:	cmp	r0, #66	; 0x42
    af80:	beq	b000 <ethertype_to_ppptype+0x94>
    af84:	cmp	r0, #224	; 0xe0
    af88:	moveq	r0, #43	; 0x2b
    af8c:	bxeq	lr
    af90:	bx	lr
    af94:	movw	r1, #32922	; 0x809a
    af98:	cmp	r0, r1
    af9c:	bgt	afdc <ethertype_to_ppptype+0x70>
    afa0:	cmp	r0, #2048	; 0x800
    afa4:	moveq	r0, #33	; 0x21
    afa8:	bxeq	lr
    afac:	movw	r1, #24579	; 0x6003
    afb0:	cmp	r0, r1
    afb4:	moveq	r0, #39	; 0x27
    afb8:	bxeq	lr
    afbc:	bx	lr
    afc0:	cmp	r0, #254	; 0xfe
    afc4:	moveq	r0, #35	; 0x23
    afc8:	bxeq	lr
    afcc:	cmp	r0, #1536	; 0x600
    afd0:	moveq	r0, #37	; 0x25
    afd4:	bxeq	lr
    afd8:	bx	lr
    afdc:	movw	r1, #32923	; 0x809b
    afe0:	cmp	r0, r1
    afe4:	moveq	r0, #41	; 0x29
    afe8:	bxeq	lr
    afec:	movw	r1, #34525	; 0x86dd
    aff0:	cmp	r0, r1
    aff4:	moveq	r0, #87	; 0x57
    aff8:	bxeq	lr
    affc:	bx	lr
    b000:	mov	r0, #49	; 0x31
    b004:	bx	lr

0000b008 <gen_ether_linktype>:
    b008:	push	{r4, r5, r6, r7, fp, lr}
    b00c:	add	fp, sp, #16
    b010:	sub	sp, sp, #8
    b014:	mov	r4, r0
    b018:	cmp	r0, #253	; 0xfd
    b01c:	bgt	b0c8 <gen_ether_linktype+0xc0>
    b020:	cmp	r4, #6
    b024:	beq	b038 <gen_ether_linktype+0x30>
    b028:	cmp	r4, #224	; 0xe0
    b02c:	beq	b258 <gen_ether_linktype+0x250>
    b030:	cmp	r4, #240	; 0xf0
    b034:	bne	b1c8 <gen_ether_linktype+0x1c0>
    b038:	ldr	r1, [pc, #876]	; b3ac <gen_ether_linktype+0x3a4>
    b03c:	mov	r0, #1
    b040:	mov	r2, #8
    b044:	ldr	r1, [pc, r1]
    b048:	bl	9a88 <gen_load_a>
    b04c:	mov	r5, r0
    b050:	mov	r0, #208	; 0xd0
    b054:	bl	20bc <newchunk>
    b058:	mov	r6, r0
    b05c:	mov	r0, #37	; 0x25
    b060:	mov	r1, #8
    b064:	str	r5, [r6, #4]
    b068:	str	r0, [r6, #8]
    b06c:	movw	r0, #1500	; 0x5dc
    b070:	str	r0, [r6, #20]
    b074:	ldr	r0, [r6, #44]	; 0x2c
    b078:	clz	r0, r0
    b07c:	lsr	r0, r0, #5
    b080:	str	r0, [r6, #44]	; 0x2c
    b084:	mov	r0, #0
    b088:	str	r6, [r6, #96]	; 0x60
    b08c:	bl	bc70 <gen_load_macplrel>
    b090:	mov	r7, r0
    b094:	mov	r0, #208	; 0xd0
    b098:	bl	20bc <newchunk>
    b09c:	mov	r5, r0
    b0a0:	mov	r0, #21
    b0a4:	str	r7, [r5, #4]
    b0a8:	str	r0, [r5, #8]
    b0ac:	orr	r0, r4, r4, lsl #8
    b0b0:	str	r0, [r5, #20]
    b0b4:	mov	r0, r6
    b0b8:	mov	r1, r5
    b0bc:	str	r5, [r5, #96]	; 0x60
    b0c0:	bl	3a60 <sf_gen_and>
    b0c4:	b	b37c <gen_ether_linktype+0x374>
    b0c8:	movw	r0, #33011	; 0x80f3
    b0cc:	cmp	r4, r0
    b0d0:	movwne	r0, #32923	; 0x809b
    b0d4:	cmpne	r4, r0
    b0d8:	bne	b1c0 <gen_ether_linktype+0x1b8>
    b0dc:	ldr	r1, [pc, #724]	; b3b8 <gen_ether_linktype+0x3b0>
    b0e0:	mov	r0, #1
    b0e4:	mov	r2, #8
    b0e8:	ldr	r1, [pc, r1]
    b0ec:	bl	9a88 <gen_load_a>
    b0f0:	mov	r5, r0
    b0f4:	mov	r0, #208	; 0xd0
    b0f8:	bl	20bc <newchunk>
    b0fc:	mov	r6, r0
    b100:	mov	r0, #37	; 0x25
    b104:	str	r5, [r6, #4]
    b108:	str	r0, [r6, #8]
    b10c:	movw	r0, #1500	; 0x5dc
    b110:	str	r0, [r6, #20]
    b114:	ldr	r0, [r6, #44]	; 0x2c
    b118:	clz	r0, r0
    b11c:	lsr	r0, r0, #5
    b120:	str	r0, [r6, #44]	; 0x2c
    b124:	mov	r0, #3
    b128:	str	r6, [r6, #96]	; 0x60
    b12c:	strb	r0, [sp, #2]
    b130:	movw	r0, #43690	; 0xaaaa
    b134:	strh	r0, [sp]
    b138:	movw	r0, #32923	; 0x809b
    b13c:	cmp	r4, r0
    b140:	bne	b158 <gen_ether_linktype+0x150>
    b144:	mov	r0, #155	; 0x9b
    b148:	strb	r0, [sp, #7]
    b14c:	movw	r0, #8
    b150:	movt	r0, #32775	; 0x8007
    b154:	b	b164 <gen_ether_linktype+0x15c>
    b158:	mov	r0, #243	; 0xf3
    b15c:	strb	r0, [sp, #7]
    b160:	mov	r0, #-2147483648	; 0x80000000
    b164:	str	r0, [sp, #3]
    b168:	mov	r3, sp
    b16c:	mov	r0, #2
    b170:	mov	r1, #0
    b174:	mov	r2, #8
    b178:	bl	b4e0 <gen_bcmp>
    b17c:	mov	r5, r0
    b180:	mov	r0, r6
    b184:	mov	r1, r5
    b188:	bl	3a60 <sf_gen_and>
    b18c:	ldr	r1, [pc, #552]	; b3bc <gen_ether_linktype+0x3b4>
    b190:	mov	r0, #1
    b194:	mov	r2, #8
    b198:	ldr	r1, [pc, r1]
    b19c:	bl	9a88 <gen_load_a>
    b1a0:	mov	r6, r0
    b1a4:	mov	r0, #208	; 0xd0
    b1a8:	bl	20bc <newchunk>
    b1ac:	mov	r1, #21
    b1b0:	str	r6, [r0, #4]
    b1b4:	str	r1, [r0, #8]
    b1b8:	str	r4, [r0, #20]
    b1bc:	b	b370 <gen_ether_linktype+0x368>
    b1c0:	cmp	r4, #254	; 0xfe
    b1c4:	beq	b038 <gen_ether_linktype+0x30>
    b1c8:	ldr	r1, [pc, #468]	; b3a4 <gen_ether_linktype+0x39c>
    b1cc:	mov	r0, #1
    b1d0:	mov	r2, #8
    b1d4:	ldr	r1, [pc, r1]
    b1d8:	bl	9a88 <gen_load_a>
    b1dc:	mov	r5, r0
    b1e0:	mov	r0, #208	; 0xd0
    b1e4:	bl	20bc <newchunk>
    b1e8:	mov	r6, r0
    b1ec:	movw	r0, #1500	; 0x5dc
    b1f0:	cmp	r4, r0
    b1f4:	bgt	b388 <gen_ether_linktype+0x380>
    b1f8:	mov	r1, #37	; 0x25
    b1fc:	str	r5, [r6, #4]
    b200:	mov	r2, #16
    b204:	str	r1, [r6, #8]
    b208:	str	r0, [r6, #20]
    b20c:	ldr	r0, [r6, #44]	; 0x2c
    b210:	clz	r0, r0
    b214:	lsr	r0, r0, #5
    b218:	str	r0, [r6, #44]	; 0x2c
    b21c:	str	r6, [r6, #96]	; 0x60
    b220:	ldr	r0, [pc, #384]	; b3a8 <gen_ether_linktype+0x3a0>
    b224:	ldr	r0, [pc, r0]
    b228:	add	r1, r0, #2
    b22c:	mov	r0, #1
    b230:	bl	9a88 <gen_load_a>
    b234:	mov	r7, r0
    b238:	mov	r0, #208	; 0xd0
    b23c:	bl	20bc <newchunk>
    b240:	mov	r5, r0
    b244:	mov	r0, #21
    b248:	str	r7, [r5, #4]
    b24c:	str	r0, [r5, #8]
    b250:	str	r4, [r5, #20]
    b254:	b	b0b4 <gen_ether_linktype+0xac>
    b258:	mov	r0, #0
    b25c:	mov	r1, #16
    b260:	bl	bc70 <gen_load_macplrel>
    b264:	mov	r4, r0
    b268:	mov	r0, #208	; 0xd0
    b26c:	bl	20bc <newchunk>
    b270:	mov	r7, #21
    b274:	mov	r6, r0
    b278:	mov	r1, #8
    b27c:	stmib	r0, {r4, r7}
    b280:	mov	r0, #224	; 0xe0
    b284:	str	r0, [r6, #20]
    b288:	mov	r0, #0
    b28c:	str	r6, [r6, #96]	; 0x60
    b290:	bl	bc70 <gen_load_macplrel>
    b294:	mov	r4, r0
    b298:	mov	r0, #208	; 0xd0
    b29c:	bl	20bc <newchunk>
    b2a0:	mov	r5, r0
    b2a4:	stmib	r0, {r4, r7}
    b2a8:	movw	r0, #65535	; 0xffff
    b2ac:	str	r0, [r5, #20]
    b2b0:	mov	r0, r6
    b2b4:	mov	r1, r5
    b2b8:	str	r5, [r5, #96]	; 0x60
    b2bc:	bl	3b3c <sf_gen_or>
    b2c0:	movw	r0, #43690	; 0xaaaa
    b2c4:	mov	r3, sp
    b2c8:	mov	r1, #0
    b2cc:	mov	r2, #8
    b2d0:	movt	r0, #3
    b2d4:	str	r0, [sp]
    b2d8:	movw	r0, #0
    b2dc:	movt	r0, #14209	; 0x3781
    b2e0:	str	r0, [sp, #4]
    b2e4:	mov	r0, #2
    b2e8:	bl	b4e0 <gen_bcmp>
    b2ec:	mov	r1, r5
    b2f0:	bl	3b3c <sf_gen_or>
    b2f4:	ldr	r1, [pc, #180]	; b3b0 <gen_ether_linktype+0x3a8>
    b2f8:	mov	r0, #1
    b2fc:	mov	r2, #8
    b300:	ldr	r1, [pc, r1]
    b304:	bl	9a88 <gen_load_a>
    b308:	mov	r4, r0
    b30c:	mov	r0, #208	; 0xd0
    b310:	bl	20bc <newchunk>
    b314:	mov	r1, #37	; 0x25
    b318:	str	r4, [r0, #4]
    b31c:	str	r1, [r0, #8]
    b320:	movw	r1, #1500	; 0x5dc
    b324:	str	r1, [r0, #20]
    b328:	ldr	r1, [r0, #44]	; 0x2c
    b32c:	clz	r1, r1
    b330:	lsr	r1, r1, #5
    b334:	str	r1, [r0, #44]	; 0x2c
    b338:	mov	r1, r5
    b33c:	str	r0, [r0, #96]	; 0x60
    b340:	bl	3a60 <sf_gen_and>
    b344:	ldr	r1, [pc, #104]	; b3b4 <gen_ether_linktype+0x3ac>
    b348:	mov	r0, #1
    b34c:	mov	r2, #8
    b350:	ldr	r1, [pc, r1]
    b354:	bl	9a88 <gen_load_a>
    b358:	mov	r4, r0
    b35c:	mov	r0, #208	; 0xd0
    b360:	bl	20bc <newchunk>
    b364:	movw	r1, #33079	; 0x8137
    b368:	stmib	r0, {r4, r7}
    b36c:	str	r1, [r0, #20]
    b370:	mov	r1, r5
    b374:	str	r0, [r0, #96]	; 0x60
    b378:	bl	3b3c <sf_gen_or>
    b37c:	mov	r0, r5
    b380:	sub	sp, fp, #16
    b384:	pop	{r4, r5, r6, r7, fp, pc}
    b388:	str	r5, [r6, #4]
    b38c:	mov	r0, #21
    b390:	mov	r5, r6
    b394:	str	r0, [r6, #8]
    b398:	str	r4, [r6, #20]
    b39c:	str	r6, [r6, #96]	; 0x60
    b3a0:	b	b37c <gen_ether_linktype+0x374>
    b3a4:	.word	0x00025264
    b3a8:	.word	0x00025214
    b3ac:	.word	0x000253f4
    b3b0:	.word	0x00025138
    b3b4:	.word	0x000250e8
    b3b8:	.word	0x00025350
    b3bc:	.word	0x000252a0

0000b3c0 <gen_llc_linktype>:
    b3c0:	push	{r4, r5, fp, lr}
    b3c4:	add	fp, sp, #8
    b3c8:	sub	sp, sp, #8
    b3cc:	mov	r4, r0
    b3d0:	cmp	r0, #239	; 0xef
    b3d4:	ble	b3f8 <gen_llc_linktype+0x38>
    b3d8:	cmp	r4, #240	; 0xf0
    b3dc:	beq	b434 <gen_llc_linktype+0x74>
    b3e0:	movw	r0, #32923	; 0x809b
    b3e4:	cmp	r4, r0
    b3e8:	beq	b464 <gen_llc_linktype+0xa4>
    b3ec:	cmp	r4, #254	; 0xfe
    b3f0:	beq	b434 <gen_llc_linktype+0x74>
    b3f4:	b	b494 <gen_llc_linktype+0xd4>
    b3f8:	cmp	r4, #6
    b3fc:	beq	b434 <gen_llc_linktype+0x74>
    b400:	cmp	r4, #224	; 0xe0
    b404:	bne	b494 <gen_llc_linktype+0xd4>
    b408:	mov	r0, #0
    b40c:	mov	r1, #16
    b410:	bl	bc70 <gen_load_macplrel>
    b414:	mov	r4, r0
    b418:	mov	r0, #208	; 0xd0
    b41c:	bl	20bc <newchunk>
    b420:	mov	r1, #21
    b424:	str	r4, [r0, #4]
    b428:	str	r1, [r0, #8]
    b42c:	mov	r1, #224	; 0xe0
    b430:	b	b45c <gen_llc_linktype+0x9c>
    b434:	mov	r0, #0
    b438:	mov	r1, #8
    b43c:	bl	bc70 <gen_load_macplrel>
    b440:	mov	r5, r0
    b444:	mov	r0, #208	; 0xd0
    b448:	bl	20bc <newchunk>
    b44c:	mov	r1, #21
    b450:	str	r5, [r0, #4]
    b454:	str	r1, [r0, #8]
    b458:	orr	r1, r4, r4, lsl #8
    b45c:	str	r1, [r0, #20]
    b460:	b	b4d4 <gen_llc_linktype+0x114>
    b464:	movw	r0, #43690	; 0xaaaa
    b468:	mov	r3, sp
    b46c:	mov	r1, #0
    b470:	mov	r2, #8
    b474:	movt	r0, #2051	; 0x803
    b478:	str	r0, [sp]
    b47c:	movw	r0, #1792	; 0x700
    b480:	movt	r0, #39808	; 0x9b80
    b484:	str	r0, [sp, #4]
    b488:	mov	r0, #2
    b48c:	bl	b4e0 <gen_bcmp>
    b490:	b	b4d8 <gen_llc_linktype+0x118>
    b494:	movw	r0, #1500	; 0x5dc
    b498:	cmp	r4, r0
    b49c:	bgt	b4ac <gen_llc_linktype+0xec>
    b4a0:	mov	r0, #0
    b4a4:	mov	r1, #16
    b4a8:	b	b4b4 <gen_llc_linktype+0xf4>
    b4ac:	mov	r0, #6
    b4b0:	mov	r1, #8
    b4b4:	bl	bc70 <gen_load_macplrel>
    b4b8:	mov	r5, r0
    b4bc:	mov	r0, #208	; 0xd0
    b4c0:	bl	20bc <newchunk>
    b4c4:	mov	r1, #21
    b4c8:	str	r5, [r0, #4]
    b4cc:	str	r1, [r0, #8]
    b4d0:	str	r4, [r0, #20]
    b4d4:	str	r0, [r0, #96]	; 0x60
    b4d8:	sub	sp, fp, #8
    b4dc:	pop	{r4, r5, fp, pc}

0000b4e0 <gen_bcmp>:
    b4e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    b4e4:	add	fp, sp, #28
    b4e8:	sub	sp, sp, #20
    b4ec:	mov	r7, #0
    b4f0:	cmp	r2, #4
    b4f4:	str	r0, [sp, #16]
    b4f8:	str	r1, [sp, #12]
    b4fc:	str	r3, [sp, #8]
    b500:	bcc	b58c <gen_bcmp+0xac>
    b504:	sub	r8, r3, #2
    b508:	sub	r9, r1, #4
    b50c:	mov	r4, #0
    b510:	mov	r5, r2
    b514:	str	r2, [sp, #4]
    b518:	add	r0, r8, r5
    b51c:	add	r1, r9, r5
    b520:	mov	r2, #0
    b524:	ldr	sl, [r0, #-2]
    b528:	ldr	r0, [sp, #16]
    b52c:	bl	9a88 <gen_load_a>
    b530:	mov	r6, r0
    b534:	mov	r0, #208	; 0xd0
    b538:	bl	20bc <newchunk>
    b53c:	mov	r7, r0
    b540:	str	r6, [r0, #4]
    b544:	mov	r0, #21
    b548:	sub	r5, r5, #4
    b54c:	cmp	r4, #0
    b550:	str	r0, [r7, #8]
    b554:	rev	r0, sl
    b558:	str	r0, [r7, #20]
    b55c:	str	r7, [r7, #96]	; 0x60
    b560:	beq	b570 <gen_bcmp+0x90>
    b564:	mov	r0, r4
    b568:	mov	r1, r7
    b56c:	bl	3a60 <sf_gen_and>
    b570:	cmp	r5, #3
    b574:	mov	r4, r7
    b578:	bhi	b518 <gen_bcmp+0x38>
    b57c:	ldr	r2, [sp, #4]
    b580:	ldr	r1, [sp, #12]
    b584:	ldr	r3, [sp, #8]
    b588:	and	r2, r2, #3
    b58c:	cmp	r2, #2
    b590:	bcc	b618 <gen_bcmp+0x138>
    b594:	sub	r5, r2, #2
    b598:	mov	r8, #21
    b59c:	str	r2, [sp, #4]
    b5a0:	mov	r0, r3
    b5a4:	add	r1, r1, r5
    b5a8:	mov	r2, #8
    b5ac:	ldrb	r9, [r0, r5]!
    b5b0:	ldrb	sl, [r0, #1]
    b5b4:	ldr	r0, [sp, #16]
    b5b8:	bl	9a88 <gen_load_a>
    b5bc:	mov	r6, r0
    b5c0:	mov	r0, #208	; 0xd0
    b5c4:	bl	20bc <newchunk>
    b5c8:	mov	r4, r0
    b5cc:	stmib	r0, {r6, r8}
    b5d0:	orr	r0, sl, r9, lsl #8
    b5d4:	cmp	r7, #0
    b5d8:	str	r0, [r4, #20]
    b5dc:	str	r4, [r4, #96]	; 0x60
    b5e0:	beq	b5f0 <gen_bcmp+0x110>
    b5e4:	mov	r0, r7
    b5e8:	mov	r1, r4
    b5ec:	bl	3a60 <sf_gen_and>
    b5f0:	ldr	r1, [sp, #12]
    b5f4:	ldr	r3, [sp, #8]
    b5f8:	sub	r0, r5, #2
    b5fc:	cmp	r5, #1
    b600:	mov	r7, r4
    b604:	mov	r5, r0
    b608:	bhi	b5a0 <gen_bcmp+0xc0>
    b60c:	ldr	r2, [sp, #4]
    b610:	and	r2, r2, #1
    b614:	b	b61c <gen_bcmp+0x13c>
    b618:	mov	r4, r7
    b61c:	cmp	r2, #1
    b620:	bne	b670 <gen_bcmp+0x190>
    b624:	ldr	r0, [sp, #16]
    b628:	ldrb	r7, [r3]
    b62c:	mov	r2, #16
    b630:	bl	9a88 <gen_load_a>
    b634:	mov	r6, r0
    b638:	mov	r0, #208	; 0xd0
    b63c:	bl	20bc <newchunk>
    b640:	mov	r5, r0
    b644:	cmp	r4, #0
    b648:	mov	r0, #21
    b64c:	str	r6, [r5, #4]
    b650:	str	r0, [r5, #8]
    b654:	str	r7, [r5, #20]
    b658:	str	r5, [r5, #96]	; 0x60
    b65c:	beq	b674 <gen_bcmp+0x194>
    b660:	mov	r0, r4
    b664:	mov	r1, r5
    b668:	bl	3a60 <sf_gen_and>
    b66c:	b	b674 <gen_bcmp+0x194>
    b670:	mov	r5, r4
    b674:	mov	r0, r5
    b678:	sub	sp, fp, #28
    b67c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0000b680 <gen_hostop>:
    b680:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    b684:	add	fp, sp, #24
    b688:	sub	sp, sp, #16
    b68c:	cmp	r2, #4
    b690:	bhi	b7a0 <gen_hostop+0x120>
    b694:	mov	r5, r0
    b698:	add	r0, pc, #20
    b69c:	mov	r4, r1
    b6a0:	ldr	r9, [fp, #12]
    b6a4:	ldr	r7, [fp, #8]
    b6a8:	mov	r6, r3
    b6ac:	ldr	r1, [r0, r2, lsl #2]
    b6b0:	add	pc, r0, r1
    b6b4:	.word	0x00000014
    b6b8:	.word	0x000000a0
    b6bc:	.word	0x0000009c
    b6c0:	.word	0x00000014
    b6c4:	.word	0x0000005c
    b6c8:	mov	r0, r5
    b6cc:	mov	r1, r4
    b6d0:	mov	r2, #1
    b6d4:	mov	r3, r6
    b6d8:	stm	sp, {r7, r9}
    b6dc:	bl	b680 <gen_hostop>
    b6e0:	mov	r8, r0
    b6e4:	mov	r0, r5
    b6e8:	mov	r1, r4
    b6ec:	mov	r2, #2
    b6f0:	mov	r3, r6
    b6f4:	stm	sp, {r7, r9}
    b6f8:	bl	b680 <gen_hostop>
    b6fc:	mov	r4, r0
    b700:	mov	r0, r8
    b704:	mov	r1, r4
    b708:	bl	3b3c <sf_gen_or>
    b70c:	b	b794 <gen_hostop+0x114>
    b710:	mov	r0, r5
    b714:	mov	r1, r4
    b718:	mov	r2, #1
    b71c:	mov	r3, r6
    b720:	stm	sp, {r7, r9}
    b724:	bl	b680 <gen_hostop>
    b728:	mov	r8, r0
    b72c:	mov	r0, r5
    b730:	mov	r1, r4
    b734:	mov	r2, #2
    b738:	mov	r3, r6
    b73c:	stm	sp, {r7, r9}
    b740:	bl	b680 <gen_hostop>
    b744:	mov	r4, r0
    b748:	mov	r0, r8
    b74c:	b	b78c <gen_hostop+0x10c>
    b750:	mov	r7, r9
    b754:	mov	r0, r6
    b758:	bl	446c <gen_linktype>
    b75c:	mov	r6, r0
    b760:	mov	r1, #16
    b764:	mov	r0, #0
    b768:	mov	r2, #0
    b76c:	mov	r3, r4
    b770:	str	r1, [sp]
    b774:	stmib	sp, {r0, r5}
    b778:	mov	r0, #3
    b77c:	mov	r1, r7
    b780:	bl	a52c <gen_ncmp>
    b784:	mov	r4, r0
    b788:	mov	r0, r6
    b78c:	mov	r1, r4
    b790:	bl	3a60 <sf_gen_and>
    b794:	mov	r0, r4
    b798:	sub	sp, fp, #24
    b79c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    b7a0:	bl	fc4 <abort@plt>

0000b7a4 <gen_dnhostop>:
    b7a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    b7a8:	add	fp, sp, #28
    b7ac:	sub	sp, sp, #20
    b7b0:	cmp	r1, #4
    b7b4:	bhi	ba6c <gen_dnhostop+0x2c8>
    b7b8:	mov	r6, r0
    b7bc:	add	r0, pc, #12
    b7c0:	mov	r9, #1
    b7c4:	mov	r8, #7
    b7c8:	ldr	r1, [r0, r1, lsl #2]
    b7cc:	add	pc, r0, r1
    b7d0:	.word	0x00000014
    b7d4:	.word	0x0000006c
    b7d8:	.word	0x00000074
    b7dc:	.word	0x00000014
    b7e0:	.word	0x00000044
    b7e4:	mov	r0, r6
    b7e8:	mov	r1, #1
    b7ec:	bl	b7a4 <gen_dnhostop>
    b7f0:	mov	r4, r0
    b7f4:	mov	r0, r6
    b7f8:	mov	r1, #2
    b7fc:	bl	b7a4 <gen_dnhostop>
    b800:	mov	r5, r0
    b804:	mov	r0, r4
    b808:	mov	r1, r5
    b80c:	bl	3b3c <sf_gen_or>
    b810:	b	ba60 <gen_dnhostop+0x2bc>
    b814:	mov	r0, r6
    b818:	mov	r1, #1
    b81c:	bl	b7a4 <gen_dnhostop>
    b820:	mov	r4, r0
    b824:	mov	r0, r6
    b828:	mov	r1, #2
    b82c:	bl	b7a4 <gen_dnhostop>
    b830:	mov	r5, r0
    b834:	mov	r0, r4
    b838:	b	ba58 <gen_dnhostop+0x2b4>
    b83c:	mov	r9, #3
    b840:	mov	r8, #15
    b844:	movw	r0, #24579	; 0x6003
    b848:	bl	446c <gen_linktype>
    b84c:	str	r0, [sp, #16]
    b850:	movw	r0, #33030	; 0x8106
    b854:	mov	r1, #0
    b858:	mov	r2, #16
    b85c:	movw	r3, #65287	; 0xff07
    b860:	str	r2, [sp]
    b864:	str	r1, [sp, #4]
    b868:	str	r0, [sp, #8]
    b86c:	mov	r0, #3
    b870:	mov	r1, #2
    b874:	mov	r2, #8
    b878:	bl	a52c <gen_ncmp>
    b87c:	mov	r7, r0
    b880:	ldr	r0, [pc, #512]	; ba88 <gen_dnhostop+0x2e4>
    b884:	mov	r1, #8
    b888:	ldr	r0, [pc, r0]
    b88c:	add	r0, r8, r0
    b890:	add	r0, r0, #3
    b894:	bl	bc70 <gen_load_macplrel>
    b898:	mov	r4, r0
    b89c:	mov	r0, #208	; 0xd0
    b8a0:	bl	20bc <newchunk>
    b8a4:	mov	r5, r0
    b8a8:	rev	r0, r6
    b8ac:	lsr	sl, r0, #16
    b8b0:	mov	r0, #21
    b8b4:	str	r4, [r5, #4]
    b8b8:	mov	r1, r5
    b8bc:	str	r0, [r5, #8]
    b8c0:	mov	r0, r7
    b8c4:	str	sl, [r5, #20]
    b8c8:	str	r5, [r5, #96]	; 0x60
    b8cc:	bl	3a60 <sf_gen_and>
    b8d0:	mov	r1, #16
    b8d4:	mov	r0, #6
    b8d8:	mov	r2, #16
    b8dc:	mov	r3, #7
    b8e0:	str	r1, [sp]
    b8e4:	mov	r1, #0
    b8e8:	str	r0, [sp, #8]
    b8ec:	mov	r0, #3
    b8f0:	str	r1, [sp, #4]
    b8f4:	mov	r1, #2
    b8f8:	bl	a52c <gen_ncmp>
    b8fc:	mov	r4, r0
    b900:	ldr	r0, [pc, #388]	; ba8c <gen_dnhostop+0x2e8>
    b904:	mov	r1, #8
    b908:	ldr	r0, [pc, r0]
    b90c:	add	r0, r8, r0
    b910:	add	r0, r0, #2
    b914:	bl	bc70 <gen_load_macplrel>
    b918:	mov	r6, r0
    b91c:	mov	r0, #208	; 0xd0
    b920:	bl	20bc <newchunk>
    b924:	mov	r7, r0
    b928:	str	r6, [r0, #4]
    b92c:	mov	r0, #21
    b930:	str	r0, [r7, #8]
    b934:	mov	r0, r4
    b938:	mov	r1, r7
    b93c:	str	sl, [r7, #20]
    b940:	str	r7, [r7, #96]	; 0x60
    b944:	bl	3a60 <sf_gen_and>
    b948:	mov	r0, r7
    b94c:	mov	r1, r5
    b950:	bl	3b3c <sf_gen_or>
    b954:	movw	r0, #33026	; 0x8102
    b958:	mov	r1, #16
    b95c:	mov	r8, #0
    b960:	mov	r2, #8
    b964:	movw	r3, #65287	; 0xff07
    b968:	str	r1, [sp]
    b96c:	str	r0, [sp, #8]
    b970:	mov	r0, #3
    b974:	mov	r1, #2
    b978:	str	r8, [sp, #4]
    b97c:	bl	a52c <gen_ncmp>
    b980:	mov	r4, r0
    b984:	ldr	r0, [pc, #260]	; ba90 <gen_dnhostop+0x2ec>
    b988:	mov	r1, #8
    b98c:	ldr	r0, [pc, r0]
    b990:	add	r0, r9, r0
    b994:	add	r0, r0, #3
    b998:	bl	bc70 <gen_load_macplrel>
    b99c:	mov	r6, r0
    b9a0:	mov	r0, #208	; 0xd0
    b9a4:	bl	20bc <newchunk>
    b9a8:	mov	r7, r0
    b9ac:	str	r6, [r0, #4]
    b9b0:	mov	r0, #21
    b9b4:	str	r0, [r7, #8]
    b9b8:	mov	r0, r4
    b9bc:	mov	r1, r7
    b9c0:	str	sl, [r7, #20]
    b9c4:	str	r7, [r7, #96]	; 0x60
    b9c8:	bl	3a60 <sf_gen_and>
    b9cc:	mov	r0, r7
    b9d0:	mov	r1, r5
    b9d4:	bl	3b3c <sf_gen_or>
    b9d8:	mov	r0, #16
    b9dc:	mov	r1, #2
    b9e0:	mov	r2, #16
    b9e4:	mov	r3, #7
    b9e8:	stm	sp, {r0, r8}
    b9ec:	mov	r0, #2
    b9f0:	str	r0, [sp, #8]
    b9f4:	mov	r0, #3
    b9f8:	bl	a52c <gen_ncmp>
    b9fc:	mov	r4, r0
    ba00:	ldr	r0, [pc, #140]	; ba94 <gen_dnhostop+0x2f0>
    ba04:	mov	r1, #8
    ba08:	ldr	r0, [pc, r0]
    ba0c:	add	r0, r9, r0
    ba10:	add	r0, r0, #2
    ba14:	bl	bc70 <gen_load_macplrel>
    ba18:	mov	r6, r0
    ba1c:	mov	r0, #208	; 0xd0
    ba20:	bl	20bc <newchunk>
    ba24:	mov	r7, r0
    ba28:	str	r6, [r0, #4]
    ba2c:	mov	r0, #21
    ba30:	str	r0, [r7, #8]
    ba34:	mov	r0, r4
    ba38:	mov	r1, r7
    ba3c:	str	sl, [r7, #20]
    ba40:	str	r7, [r7, #96]	; 0x60
    ba44:	bl	3a60 <sf_gen_and>
    ba48:	mov	r0, r7
    ba4c:	mov	r1, r5
    ba50:	bl	3b3c <sf_gen_or>
    ba54:	ldr	r0, [sp, #16]
    ba58:	mov	r1, r5
    ba5c:	bl	3a60 <sf_gen_and>
    ba60:	mov	r0, r5
    ba64:	sub	sp, fp, #28
    ba68:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    ba6c:	cmp	r1, #24
    ba70:	bne	ba80 <gen_dnhostop+0x2dc>
    ba74:	ldr	r0, [pc, #8]	; ba84 <gen_dnhostop+0x2e0>
    ba78:	add	r0, pc, r0
    ba7c:	bl	2028 <sf_bpf_error>
    ba80:	bl	fc4 <abort@plt>
    ba84:	.word	0x00008133
    ba88:	.word	0x00024bb8
    ba8c:	.word	0x00024b38
    ba90:	.word	0x00024ab4
    ba94:	.word	0x00024a38

0000ba98 <gen_hostop6>:
    ba98:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    ba9c:	add	fp, sp, #28
    baa0:	sub	sp, sp, #12
    baa4:	cmp	r2, #4
    baa8:	bhi	bc6c <gen_hostop6+0x1d4>
    baac:	mov	r6, r0
    bab0:	add	r0, pc, #20
    bab4:	mov	r5, r1
    bab8:	ldr	r9, [fp, #12]
    babc:	ldr	r7, [fp, #8]
    bac0:	mov	r8, r3
    bac4:	ldr	r1, [r0, r2, lsl #2]
    bac8:	add	pc, r0, r1
    bacc:	.word	0x00000014
    bad0:	.word	0x000000b0
    bad4:	.word	0x000000ac
    bad8:	.word	0x00000014
    badc:	.word	0x0000005c
    bae0:	mov	r0, r6
    bae4:	mov	r1, r5
    bae8:	mov	r2, #1
    baec:	mov	r3, r8
    baf0:	stm	sp, {r7, r9}
    baf4:	bl	ba98 <gen_hostop6>
    baf8:	mov	r4, r0
    bafc:	mov	r0, r6
    bb00:	mov	r1, r5
    bb04:	mov	r2, #2
    bb08:	mov	r3, r8
    bb0c:	stm	sp, {r7, r9}
    bb10:	bl	ba98 <gen_hostop6>
    bb14:	mov	r5, r0
    bb18:	mov	r0, r4
    bb1c:	mov	r1, r5
    bb20:	bl	3b3c <sf_gen_or>
    bb24:	b	bb6c <gen_hostop6+0xd4>
    bb28:	mov	r0, r6
    bb2c:	mov	r1, r5
    bb30:	mov	r2, #1
    bb34:	mov	r3, r8
    bb38:	stm	sp, {r7, r9}
    bb3c:	bl	ba98 <gen_hostop6>
    bb40:	mov	r4, r0
    bb44:	mov	r0, r6
    bb48:	mov	r1, r5
    bb4c:	mov	r2, #2
    bb50:	mov	r3, r8
    bb54:	stm	sp, {r7, r9}
    bb58:	bl	ba98 <gen_hostop6>
    bb5c:	mov	r5, r0
    bb60:	mov	r0, r4
    bb64:	mov	r1, r5
    bb68:	bl	3a60 <sf_gen_and>
    bb6c:	mov	r0, r5
    bb70:	sub	sp, fp, #28
    bb74:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    bb78:	mov	r7, r9
    bb7c:	ldr	r1, [r6, #12]
    bb80:	ldr	r0, [r5, #12]
    bb84:	mov	r9, #0
    bb88:	mov	sl, #16
    bb8c:	mov	r2, #0
    bb90:	str	sl, [sp]
    bb94:	str	r9, [sp, #4]
    bb98:	rev	r1, r1
    bb9c:	rev	r3, r0
    bba0:	mov	r0, #3
    bba4:	str	r1, [sp, #8]
    bba8:	add	r1, r7, #12
    bbac:	bl	a52c <gen_ncmp>
    bbb0:	mov	r4, r0
    bbb4:	ldr	r0, [r6, #8]
    bbb8:	ldr	r1, [r5, #8]
    bbbc:	mov	r2, #0
    bbc0:	str	sl, [sp]
    bbc4:	str	r9, [sp, #4]
    bbc8:	rev	r0, r0
    bbcc:	rev	r3, r1
    bbd0:	add	r1, r7, #8
    bbd4:	str	r0, [sp, #8]
    bbd8:	mov	r0, #3
    bbdc:	bl	a52c <gen_ncmp>
    bbe0:	mov	r1, r4
    bbe4:	bl	3a60 <sf_gen_and>
    bbe8:	ldr	r0, [r6, #4]
    bbec:	ldr	r1, [r5, #4]
    bbf0:	mov	r2, #0
    bbf4:	str	sl, [sp]
    bbf8:	str	r9, [sp, #4]
    bbfc:	rev	r0, r0
    bc00:	rev	r3, r1
    bc04:	add	r1, r7, #4
    bc08:	str	r0, [sp, #8]
    bc0c:	mov	r0, #3
    bc10:	bl	a52c <gen_ncmp>
    bc14:	mov	r1, r4
    bc18:	bl	3a60 <sf_gen_and>
    bc1c:	ldr	r1, [r6]
    bc20:	ldr	r0, [r5]
    bc24:	mov	r2, #0
    bc28:	str	sl, [sp]
    bc2c:	str	r9, [sp, #4]
    bc30:	rev	r1, r1
    bc34:	rev	r3, r0
    bc38:	mov	r0, #3
    bc3c:	str	r1, [sp, #8]
    bc40:	mov	r1, r7
    bc44:	bl	a52c <gen_ncmp>
    bc48:	mov	r1, r4
    bc4c:	bl	3a60 <sf_gen_and>
    bc50:	mov	r0, r8
    bc54:	bl	446c <gen_linktype>
    bc58:	mov	r1, r4
    bc5c:	bl	3a60 <sf_gen_and>
    bc60:	mov	r0, r4
    bc64:	sub	sp, fp, #28
    bc68:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    bc6c:	bl	fc4 <abort@plt>

0000bc70 <gen_load_macplrel>:
    bc70:	push	{r4, r5, r6, sl, fp, lr}
    bc74:	add	fp, sp, #16
    bc78:	mov	r6, r1
    bc7c:	mov	r5, r0
    bc80:	bl	8c00 <gen_off_macpl>
    bc84:	cmp	r0, #0
    bc88:	beq	bcc0 <gen_load_macplrel+0x50>
    bc8c:	mov	r4, r0
    bc90:	mov	r0, #20
    bc94:	orr	r6, r6, #64	; 0x40
    bc98:	bl	20bc <newchunk>
    bc9c:	mov	r2, r4
    bca0:	str	r6, [r0]
    bca4:	str	r5, [r0, #12]
    bca8:	mov	r1, r2
    bcac:	ldr	r2, [r2, #16]
    bcb0:	cmp	r2, #0
    bcb4:	bne	bca8 <gen_load_macplrel+0x38>
    bcb8:	str	r0, [r1, #16]
    bcbc:	b	bce4 <gen_load_macplrel+0x74>
    bcc0:	mov	r0, #20
    bcc4:	orr	r6, r6, #32
    bcc8:	bl	20bc <newchunk>
    bccc:	str	r6, [r0]
    bcd0:	mov	r4, r0
    bcd4:	ldr	r0, [pc, #16]	; bcec <gen_load_macplrel+0x7c>
    bcd8:	ldr	r0, [pc, r0]
    bcdc:	add	r0, r0, r5
    bce0:	str	r0, [r4, #12]
    bce4:	mov	r0, r4
    bce8:	pop	{r4, r5, r6, sl, fp, pc}
    bcec:	.word	0x00024764

0000bcf0 <pcap_nametoaddr>:
    bcf0:	push	{fp, lr}
    bcf4:	mov	fp, sp
    bcf8:	bl	fac <gethostbyname@plt>
    bcfc:	cmp	r0, #0
    bd00:	beq	bd38 <pcap_nametoaddr+0x48>
    bd04:	ldr	r1, [r0, #16]
    bd08:	ldr	r2, [r1]
    bd0c:	cmp	r2, #0
    bd10:	beq	bd3c <pcap_nametoaddr+0x4c>
    bd14:	add	r1, r1, #4
    bd18:	ldr	r3, [r2]
    bd1c:	rev	r3, r3
    bd20:	str	r3, [r2]
    bd24:	ldr	r2, [r1], #4
    bd28:	cmp	r2, #0
    bd2c:	bne	bd18 <pcap_nametoaddr+0x28>
    bd30:	ldr	r1, [r0, #16]
    bd34:	b	bd3c <pcap_nametoaddr+0x4c>
    bd38:	mov	r1, #0
    bd3c:	mov	r0, r1
    bd40:	pop	{fp, pc}

0000bd44 <pcap_nametoaddrinfo>:
    bd44:	push	{r4, sl, fp, lr}
    bd48:	add	fp, sp, #8
    bd4c:	sub	sp, sp, #40	; 0x28
    bd50:	add	r2, sp, #8
    bd54:	vmov.i32	q8, #0	; 0x00000000
    bd58:	mov	r4, #0
    bd5c:	add	r1, r2, #16
    bd60:	mov	r3, r2
    bd64:	vst1.64	{d16-d17}, [r1]
    bd68:	mov	r1, #12
    bd6c:	vst1.64	{d16-d17}, [r3], r1
    bd70:	mov	r1, #6
    bd74:	str	r1, [r3]
    bd78:	mov	r1, #1
    bd7c:	add	r3, sp, #4
    bd80:	str	r1, [sp, #16]
    bd84:	mov	r1, #0
    bd88:	bl	fa0 <getaddrinfo@plt>
    bd8c:	ldr	r1, [sp, #4]
    bd90:	cmp	r0, #0
    bd94:	movne	r1, r4
    bd98:	mov	r0, r1
    bd9c:	sub	sp, fp, #8
    bda0:	pop	{r4, sl, fp, pc}

0000bda4 <pcap_nametonetaddr>:
    bda4:	push	{fp, lr}
    bda8:	mov	fp, sp
    bdac:	bl	e68 <getnetbyname@plt>
    bdb0:	cmp	r0, #0
    bdb4:	ldrne	r0, [r0, #12]
    bdb8:	moveq	r0, #0
    bdbc:	pop	{fp, pc}

0000bdc0 <pcap_nametoport>:
    bdc0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    bdc4:	add	fp, sp, #24
    bdc8:	mov	r5, r1
    bdcc:	ldr	r1, [pc, #140]	; be60 <pcap_nametoport+0xa0>
    bdd0:	mov	r8, r2
    bdd4:	mov	r6, r0
    bdd8:	add	r1, pc, r1
    bddc:	bl	f34 <getservbyname@plt>
    bde0:	cmp	r0, #0
    bde4:	mvn	r4, #0
    bde8:	mvn	r7, #0
    bdec:	ldrhne	r0, [r0, #8]
    bdf0:	ldr	r1, [pc, #108]	; be64 <pcap_nametoport+0xa4>
    bdf4:	rev16ne	r4, r0
    bdf8:	add	r1, pc, r1
    bdfc:	mov	r0, r6
    be00:	bl	f34 <getservbyname@plt>
    be04:	cmp	r0, #0
    be08:	ldrhne	r0, [r0, #8]
    be0c:	rev16ne	r7, r0
    be10:	cmp	r4, #0
    be14:	blt	be40 <pcap_nametoport+0x80>
    be18:	cmp	r7, r4
    be1c:	mov	r1, #6
    be20:	mov	r0, #6
    be24:	str	r4, [r5]
    be28:	mvneq	r1, #0
    be2c:	cmn	r7, #1
    be30:	movle	r1, r0
    be34:	mov	r0, #1
    be38:	str	r1, [r8]
    be3c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    be40:	cmp	r7, #0
    be44:	movlt	r0, #0
    be48:	poplt	{r4, r5, r6, r7, r8, sl, fp, pc}
    be4c:	mov	r0, #17
    be50:	str	r7, [r5]
    be54:	str	r0, [r8]
    be58:	mov	r0, #1
    be5c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    be60:	.word	0x00006d0c
    be64:	.word	0x00006d21

0000be68 <pcap_nametoportrange>:
    be68:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    be6c:	add	fp, sp, #24
    be70:	sub	sp, sp, #8
    be74:	mov	r6, r1
    be78:	ldr	r1, [pc, #228]	; bf64 <pcap_nametoportrange+0xfc>
    be7c:	mov	r9, r3
    be80:	mov	r8, r2
    be84:	add	r2, sp, #4
    be88:	mov	r3, sp
    be8c:	mov	r4, r0
    be90:	add	r1, pc, r1
    be94:	bl	f70 <sscanf@plt>
    be98:	cmp	r0, #2
    be9c:	bne	bec0 <pcap_nametoportrange+0x58>
    bea0:	ldr	r0, [sp, #4]
    bea4:	mov	r5, #1
    bea8:	str	r0, [r6]
    beac:	ldr	r0, [sp]
    beb0:	str	r0, [r8]
    beb4:	mvn	r0, #0
    beb8:	str	r0, [r9]
    bebc:	b	bf58 <pcap_nametoportrange+0xf0>
    bec0:	mov	r0, r4
    bec4:	bl	e8c <strdup@plt>
    bec8:	mov	r5, #0
    becc:	cmp	r0, #0
    bed0:	beq	bf58 <pcap_nametoportrange+0xf0>
    bed4:	mov	r1, #45	; 0x2d
    bed8:	mov	r7, r0
    bedc:	bl	f10 <strchr@plt>
    bee0:	cmp	r0, #0
    bee4:	beq	bf40 <pcap_nametoportrange+0xd8>
    bee8:	mov	r5, #0
    beec:	mov	r4, r0
    bef0:	mov	r1, r6
    bef4:	mov	r2, r9
    bef8:	strb	r5, [r0]
    befc:	mov	r0, r7
    bf00:	bl	bdc0 <pcap_nametoport>
    bf04:	cmp	r0, #0
    bf08:	beq	bf40 <pcap_nametoportrange+0xd8>
    bf0c:	ldr	r6, [r9]
    bf10:	add	r0, r4, #1
    bf14:	mov	r1, r8
    bf18:	mov	r2, r9
    bf1c:	bl	bdc0 <pcap_nametoport>
    bf20:	cmp	r0, #0
    bf24:	beq	bf4c <pcap_nametoportrange+0xe4>
    bf28:	ldr	r0, [r9]
    bf2c:	mov	r5, #1
    bf30:	cmp	r0, r6
    bf34:	mvnne	r0, #0
    bf38:	strne	r0, [r9]
    bf3c:	b	bf58 <pcap_nametoportrange+0xf0>
    bf40:	mov	r0, r7
    bf44:	bl	e5c <free@plt>
    bf48:	b	bf58 <pcap_nametoportrange+0xf0>
    bf4c:	mov	r0, r7
    bf50:	bl	e5c <free@plt>
    bf54:	mov	r5, #0
    bf58:	mov	r0, r5
    bf5c:	sub	sp, fp, #24
    bf60:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    bf64:	.word	0x00007fb8

0000bf68 <pcap_nametoproto>:
    bf68:	push	{fp, lr}
    bf6c:	mov	fp, sp
    bf70:	bl	e38 <getprotobyname@plt>
    bf74:	cmp	r0, #0
    bf78:	ldrne	r0, [r0, #8]
    bf7c:	mvneq	r0, #0
    bf80:	pop	{fp, pc}

0000bf84 <pcap_nametoeproto>:
    bf84:	push	{r4, r5, r6, sl, fp, lr}
    bf88:	add	fp, sp, #16
    bf8c:	mov	r5, r0
    bf90:	ldr	r0, [pc, #76]	; bfe4 <pcap_nametoeproto+0x60>
    bf94:	mvn	r4, #0
    bf98:	ldr	r0, [pc, r0]
    bf9c:	cmp	r0, #0
    bfa0:	beq	bfdc <pcap_nametoeproto+0x58>
    bfa4:	ldr	r1, [pc, #60]	; bfe8 <pcap_nametoeproto+0x64>
    bfa8:	add	r1, pc, r1
    bfac:	add	r6, r1, #4
    bfb0:	mov	r1, r5
    bfb4:	bl	e08 <strcmp@plt>
    bfb8:	cmp	r0, #0
    bfbc:	beq	bfd8 <pcap_nametoeproto+0x54>
    bfc0:	ldr	r0, [r6, #4]
    bfc4:	add	r1, r6, #8
    bfc8:	mov	r6, r1
    bfcc:	cmp	r0, #0
    bfd0:	bne	bfb0 <pcap_nametoeproto+0x2c>
    bfd4:	b	bfdc <pcap_nametoeproto+0x58>
    bfd8:	ldrh	r4, [r6]
    bfdc:	mov	r0, r4
    bfe0:	pop	{r4, r5, r6, sl, fp, pc}
    bfe4:	.word	0x00024144
    bfe8:	.word	0x00024134

0000bfec <pcap_nametollc>:
    bfec:	push	{r4, r5, fp, lr}
    bff0:	add	fp, sp, #8
    bff4:	mov	r4, r0
    bff8:	ldr	r0, [pc, #60]	; c03c <pcap_nametollc+0x50>
    bffc:	add	r0, pc, r0
    c000:	add	r5, r0, #4
    c004:	ldr	r0, [pc, #52]	; c040 <pcap_nametollc+0x54>
    c008:	add	r0, pc, r0
    c00c:	mov	r1, r4
    c010:	bl	e08 <strcmp@plt>
    c014:	cmp	r0, #0
    c018:	ldrheq	r0, [r5]
    c01c:	popeq	{r4, r5, fp, pc}
    c020:	ldr	r0, [r5, #4]
    c024:	add	r1, r5, #8
    c028:	mov	r5, r1
    c02c:	cmp	r0, #0
    c030:	mvneq	r0, #0
    c034:	popeq	{r4, r5, fp, pc}
    c038:	b	c00c <pcap_nametollc+0x20>
    c03c:	.word	0x00023d34
    c040:	.word	0x00007f24

0000c044 <__pcap_atoin>:
    c044:	push	{fp, lr}
    c048:	mov	fp, sp
    c04c:	mov	lr, #0
    c050:	mov	ip, #0
    c054:	str	lr, [r1]
    c058:	add	r0, r0, #1
    c05c:	mov	r2, #0
    c060:	b	c074 <__pcap_atoin+0x30>
    c064:	add	r2, r2, r2, lsl #2
    c068:	add	r0, r0, #1
    c06c:	add	r2, r3, r2, lsl #1
    c070:	sub	r2, r2, #48	; 0x30
    c074:	ldrb	r3, [r0, #-1]
    c078:	cmp	r3, #0
    c07c:	cmpne	r3, #46	; 0x2e
    c080:	bne	c064 <__pcap_atoin+0x20>
    c084:	uxtb	r2, r2
    c088:	add	ip, ip, #8
    c08c:	orr	lr, r2, lr, lsl #8
    c090:	str	lr, [r1]
    c094:	ldrb	r2, [r0, #-1]
    c098:	cmp	r2, #0
    c09c:	moveq	r0, ip
    c0a0:	popeq	{fp, pc}
    c0a4:	b	c058 <__pcap_atoin+0x14>

0000c0a8 <__pcap_atodn>:
    c0a8:	push	{r4, r5, fp, lr}
    c0ac:	add	fp, sp, #8
    c0b0:	sub	sp, sp, #8
    c0b4:	mov	r4, r1
    c0b8:	ldr	r1, [pc, #72]	; c108 <__pcap_atodn+0x60>
    c0bc:	mov	r2, sp
    c0c0:	add	r3, sp, #4
    c0c4:	mov	r5, r0
    c0c8:	add	r1, pc, r1
    c0cc:	bl	f70 <sscanf@plt>
    c0d0:	cmp	r0, #2
    c0d4:	ldreq	r0, [sp]
    c0d8:	ldreq	r1, [sp, #4]
    c0dc:	andeq	r0, r0, #63	; 0x3f
    c0e0:	bfceq	r1, #10, #22
    c0e4:	orreq	r0, r1, r0, lsl #10
    c0e8:	streq	r0, [r4]
    c0ec:	moveq	r0, #32
    c0f0:	subeq	sp, fp, #8
    c0f4:	popeq	{r4, r5, fp, pc}
    c0f8:	ldr	r0, [pc, #12]	; c10c <__pcap_atodn+0x64>
    c0fc:	mov	r1, r5
    c100:	add	r0, pc, r0
    c104:	bl	2028 <sf_bpf_error>
    c108:	.word	0x00007df7
    c10c:	.word	0x00007dc5

0000c110 <pcap_ether_aton>:
    c110:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    c114:	add	fp, sp, #24
    c118:	mov	r4, r0
    c11c:	mov	r0, #6
    c120:	bl	ed4 <malloc@plt>
    c124:	mov	r8, r0
    c128:	cmp	r0, #0
    c12c:	beq	c1e0 <pcap_ether_aton+0xd0>
    c130:	mov	r9, #1
    c134:	movw	r7, #8195	; 0x2003
    c138:	mov	r5, r8
    c13c:	b	c1b8 <pcap_ether_aton+0xa8>
    c140:	bl	eec <__ctype_b_loc@plt>
    c144:	ldr	r2, [r0]
    c148:	mvn	r1, #47	; 0x2f
    c14c:	add	r0, r2, r6, lsl #1
    c150:	ldrh	r3, [r0]
    c154:	add	r0, r4, #1
    c158:	tst	r3, #2048	; 0x800
    c15c:	bne	c16c <pcap_ether_aton+0x5c>
    c160:	tst	r3, #512	; 0x200
    c164:	mvn	r1, #86	; 0x56
    c168:	mvneq	r1, #54	; 0x36
    c16c:	add	r3, r1, r6
    c170:	ldrb	r1, [r0]
    c174:	add	r2, r2, r1, lsl #1
    c178:	ldrh	r2, [r2]
    c17c:	tst	r2, #4096	; 0x1000
    c180:	bne	c18c <pcap_ether_aton+0x7c>
    c184:	mov	r4, r0
    c188:	b	c1b4 <pcap_ether_aton+0xa4>
    c18c:	lsl	r0, r3, #4
    c190:	mvn	r3, #47	; 0x2f
    c194:	tst	r2, #2048	; 0x800
    c198:	bne	c1a8 <pcap_ether_aton+0x98>
    c19c:	tst	r2, #512	; 0x200
    c1a0:	mvn	r3, #86	; 0x56
    c1a4:	mvneq	r3, #54	; 0x36
    c1a8:	add	r1, r3, r1
    c1ac:	add	r4, r4, #2
    c1b0:	orr	r3, r1, r0
    c1b4:	strb	r3, [r5], #1
    c1b8:	ldrb	r6, [r4]
    c1bc:	sub	r0, r6, #45	; 0x2d
    c1c0:	cmp	r0, #13
    c1c4:	bhi	c1d8 <pcap_ether_aton+0xc8>
    c1c8:	tst	r7, r9, lsl r0
    c1cc:	beq	c1d8 <pcap_ether_aton+0xc8>
    c1d0:	ldrb	r6, [r4, #1]!
    c1d4:	b	c140 <pcap_ether_aton+0x30>
    c1d8:	cmp	r6, #0
    c1dc:	bne	c140 <pcap_ether_aton+0x30>
    c1e0:	mov	r0, r8
    c1e4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0000c1e8 <pcap_ether_hostton>:
    c1e8:	push	{r4, r5, r6, sl, fp, lr}
    c1ec:	add	fp, sp, #16
    c1f0:	mov	r4, r0
    c1f4:	ldr	r0, [pc, #192]	; c2bc <pcap_ether_hostton+0xd4>
    c1f8:	ldr	r0, [pc, r0]
    c1fc:	cmp	r0, #0
    c200:	beq	c21c <pcap_ether_hostton+0x34>
    c204:	ldr	r0, [pc, #200]	; c2d4 <pcap_ether_hostton+0xec>
    c208:	ldr	r0, [pc, r0]
    c20c:	cmp	r0, #0
    c210:	beq	c2b0 <pcap_ether_hostton+0xc8>
    c214:	bl	e98 <rewind@plt>
    c218:	b	c25c <pcap_ether_hostton+0x74>
    c21c:	ldr	r0, [pc, #156]	; c2c0 <pcap_ether_hostton+0xd8>
    c220:	ldr	r1, [pc, #156]	; c2c4 <pcap_ether_hostton+0xdc>
    c224:	add	r0, pc, r0
    c228:	add	r1, pc, r1
    c22c:	bl	e2c <fopen@plt>
    c230:	ldr	r1, [pc, #144]	; c2c8 <pcap_ether_hostton+0xe0>
    c234:	cmp	r0, #0
    c238:	add	r1, pc, r1
    c23c:	str	r0, [r1]
    c240:	ldr	r1, [pc, #132]	; c2cc <pcap_ether_hostton+0xe4>
    c244:	ldr	r1, [pc, r1]
    c248:	ldr	r2, [pc, #128]	; c2d0 <pcap_ether_hostton+0xe8>
    c24c:	add	r1, r1, #1
    c250:	add	r2, pc, r2
    c254:	str	r1, [r2]
    c258:	beq	c2b0 <pcap_ether_hostton+0xc8>
    c25c:	mov	r5, #0
    c260:	ldr	r0, [pc, #112]	; c2d8 <pcap_ether_hostton+0xf0>
    c264:	ldr	r0, [pc, r0]
    c268:	bl	edb4 <pcap_next_etherent>
    c26c:	cmp	r0, #0
    c270:	beq	c2b4 <pcap_ether_hostton+0xcc>
    c274:	mov	r6, r0
    c278:	add	r0, r0, #6
    c27c:	mov	r1, r4
    c280:	bl	e08 <strcmp@plt>
    c284:	cmp	r0, #0
    c288:	bne	c260 <pcap_ether_hostton+0x78>
    c28c:	mov	r0, #6
    c290:	bl	ed4 <malloc@plt>
    c294:	cmp	r0, #0
    c298:	ldrhne	r1, [r6, #4]
    c29c:	movne	r5, r0
    c2a0:	strhne	r1, [r0, #4]
    c2a4:	ldrne	r1, [r6]
    c2a8:	strne	r1, [r0]
    c2ac:	b	c2b4 <pcap_ether_hostton+0xcc>
    c2b0:	mov	r5, #0
    c2b4:	mov	r0, r5
    c2b8:	pop	{r4, r5, r6, sl, fp, pc}
    c2bc:	.word	0x0002435c
    c2c0:	.word	0x00007cbf
    c2c4:	.word	0x00009124
    c2c8:	.word	0x00024318
    c2cc:	.word	0x00024310
    c2d0:	.word	0x00024304
    c2d4:	.word	0x00024348
    c2d8:	.word	0x000242ec

0000c2dc <__pcap_nametodnaddr>:
    c2dc:	push	{fp, lr}
    c2e0:	mov	fp, sp
    c2e4:	mov	r1, r0
    c2e8:	ldr	r0, [pc, #4]	; c2f4 <__pcap_nametodnaddr+0x18>
    c2ec:	add	r0, pc, r0
    c2f0:	bl	2028 <sf_bpf_error>
    c2f4:	.word	0x00007c03

0000c2f8 <sf_bpf_optimize>:
    c2f8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    c2fc:	add	fp, sp, #28
    c300:	sub	sp, sp, #20
    c304:	str	r0, [sp]
    c308:	ldr	r5, [r0]
    c30c:	ldr	r4, [pc, #1676]	; c9a0 <sf_bpf_optimize+0x6a8>
    c310:	ldr	r4, [pc, r4]
    c314:	ldr	r7, [pc, #1672]	; c9a4 <sf_bpf_optimize+0x6ac>
    c318:	add	r0, r4, #1
    c31c:	add	r7, pc, r7
    c320:	str	r0, [r7]
    c324:	mov	r0, r5
    c328:	bl	ec98 <count_blocks>
    c32c:	mov	r1, #4
    c330:	mov	r6, r0
    c334:	bl	dfc <calloc@plt>
    c338:	ldr	r1, [pc, #1640]	; c9a8 <sf_bpf_optimize+0x6b0>
    c33c:	cmp	r0, #0
    c340:	add	r1, pc, r1
    c344:	str	r0, [r1]
    c348:	beq	c66c <sf_bpf_optimize+0x374>
    c34c:	ldr	r0, [pc, #1624]	; c9ac <sf_bpf_optimize+0x6b4>
    c350:	mov	r1, #0
    c354:	add	r0, pc, r0
    c358:	str	r1, [r0]
    c35c:	add	r0, r4, #2
    c360:	str	r0, [r7]
    c364:	mov	r0, r5
    c368:	bl	ecf0 <number_blks_r>
    c36c:	ldr	r8, [pc, #1596]	; c9b0 <sf_bpf_optimize+0x6b8>
    c370:	ldr	r8, [pc, r8]
    c374:	ldr	r1, [pc, #1592]	; c9b4 <sf_bpf_optimize+0x6bc>
    c378:	lsl	r0, r8, #1
    c37c:	add	r1, pc, r1
    c380:	str	r0, [r1]
    c384:	mov	r1, #4
    c388:	bl	dfc <calloc@plt>
    c38c:	mov	r9, r0
    c390:	ldr	r0, [pc, #1568]	; c9b8 <sf_bpf_optimize+0x6c0>
    c394:	cmp	r9, #0
    c398:	add	r0, pc, r0
    c39c:	str	r9, [r0]
    c3a0:	beq	c66c <sf_bpf_optimize+0x374>
    c3a4:	mov	r0, r8
    c3a8:	mov	r1, #4
    c3ac:	str	r5, [sp, #12]
    c3b0:	bl	dfc <calloc@plt>
    c3b4:	ldr	r1, [pc, #1536]	; c9bc <sf_bpf_optimize+0x6c4>
    c3b8:	cmp	r0, #0
    c3bc:	add	r1, pc, r1
    c3c0:	str	r0, [r1]
    c3c4:	beq	c66c <sf_bpf_optimize+0x374>
    c3c8:	mov	r0, #1
    c3cc:	add	r4, r0, r8, lsr #5
    c3d0:	ldr	r0, [pc, #1512]	; c9c0 <sf_bpf_optimize+0x6c8>
    c3d4:	add	r0, pc, r0
    c3d8:	str	r4, [r0]
    c3dc:	ubfx	r7, r8, #4, #27
    c3e0:	ldr	r0, [pc, #1500]	; c9c4 <sf_bpf_optimize+0x6cc>
    c3e4:	add	r5, r7, #1
    c3e8:	add	r0, pc, r0
    c3ec:	str	r5, [r0]
    c3f0:	add	r0, r5, r4
    c3f4:	mul	r0, r8, r0
    c3f8:	lsl	r0, r0, #3
    c3fc:	bl	ed4 <malloc@plt>
    c400:	mov	ip, r0
    c404:	ldr	r0, [pc, #1468]	; c9c8 <sf_bpf_optimize+0x6d0>
    c408:	cmp	ip, #0
    c40c:	add	r0, pc, r0
    c410:	str	ip, [r0]
    c414:	beq	c66c <sf_bpf_optimize+0x374>
    c418:	ldr	r0, [pc, #1452]	; c9cc <sf_bpf_optimize+0x6d4>
    c41c:	cmp	r6, #1
    c420:	add	r0, pc, r0
    c424:	str	ip, [r0]
    c428:	blt	c600 <sf_bpf_optimize+0x308>
    c42c:	lsr	r0, r8, #5
    c430:	mov	r1, #4
    c434:	sub	r2, r6, #1
    c438:	add	r1, r1, r0, lsl #2
    c43c:	lsl	r0, r0, #2
    c440:	mul	r2, r1, r2
    c444:	mul	sl, r1, r6
    c448:	str	r2, [sp, #16]
    c44c:	str	r0, [sp, #8]
    c450:	mov	r2, #0
    c454:	mov	r0, ip
    c458:	ldr	r3, [pc, #1392]	; c9d0 <sf_bpf_optimize+0x6d8>
    c45c:	ldr	r3, [pc, r3]
    c460:	ldr	lr, [r3, r2, lsl #2]
    c464:	add	r2, r2, #1
    c468:	cmp	r6, r2
    c46c:	str	r0, [lr, #104]	; 0x68
    c470:	add	r0, r0, r1
    c474:	bne	c460 <sf_bpf_optimize+0x168>
    c478:	ldr	r0, [pc, #1364]	; c9d4 <sf_bpf_optimize+0x6dc>
    c47c:	add	r2, ip, sl
    c480:	add	sl, r2, r4, lsl #2
    c484:	mov	r4, #0
    c488:	add	r0, pc, r0
    c48c:	str	r2, [r0]
    c490:	ldr	r0, [r3, r4, lsl #2]
    c494:	add	r4, r4, #1
    c498:	cmp	r6, r4
    c49c:	str	r2, [r0, #108]	; 0x6c
    c4a0:	add	r2, r2, r1
    c4a4:	bne	c490 <sf_bpf_optimize+0x198>
    c4a8:	ldr	r0, [sp, #16]
    c4ac:	ldr	r2, [pc, #1316]	; c9d8 <sf_bpf_optimize+0x6e0>
    c4b0:	cmp	r6, #1
    c4b4:	add	r0, sl, r0
    c4b8:	add	r2, pc, r2
    c4bc:	str	r0, [r2]
    c4c0:	add	r2, r0, r5, lsl #2
    c4c4:	ldr	r5, [r3]
    c4c8:	mov	r3, #0
    c4cc:	str	r2, [r5, #80]	; 0x50
    c4d0:	str	r0, [r5, #56]	; 0x38
    c4d4:	mov	r0, r5
    c4d8:	str	r3, [r0, #48]!	; 0x30
    c4dc:	str	r0, [r9]
    c4e0:	mov	r0, r5
    c4e4:	str	r8, [r0, #72]!	; 0x48
    c4e8:	ldr	r2, [pc, #1260]	; c9dc <sf_bpf_optimize+0x6e4>
    c4ec:	ldr	r2, [pc, r2]
    c4f0:	str	r0, [r2, r8, lsl #2]
    c4f4:	str	r5, [r5, #88]	; 0x58
    c4f8:	str	r5, [r5, #64]	; 0x40
    c4fc:	beq	c5a4 <sf_bpf_optimize+0x2ac>
    c500:	ldr	r4, [sp, #8]
    c504:	mvn	r2, #0
    c508:	add	r2, r2, r6, lsl #1
    c50c:	add	r0, r4, r7, lsl #3
    c510:	mla	r0, r1, r2, r0
    c514:	add	r0, ip, r0
    c518:	add	lr, r0, #12
    c51c:	add	r0, r7, r7, lsl #1
    c520:	add	r0, r4, r0, lsl #2
    c524:	mov	r4, #1
    c528:	mla	r0, r1, r2, r0
    c52c:	mov	r1, #8
    c530:	lsl	r2, r8, #2
    c534:	add	r0, ip, r0
    c538:	add	r1, r1, r7, lsl #3
    c53c:	add	ip, r0, #16
    c540:	ldr	r7, [pc, #1176]	; c9e0 <sf_bpf_optimize+0x6e8>
    c544:	add	r5, ip, r3
    c548:	ldr	r7, [pc, r7]
    c54c:	ldr	r7, [r7, r4, lsl #2]
    c550:	ldr	r0, [pc, #1164]	; c9e4 <sf_bpf_optimize+0x6ec>
    c554:	ldr	r0, [pc, r0]
    c558:	str	r5, [r7, #80]	; 0x50
    c55c:	add	r5, lr, r3
    c560:	add	r3, r3, r1
    c564:	str	r5, [r7, #56]	; 0x38
    c568:	mov	r5, r7
    c56c:	str	r4, [r5, #48]!	; 0x30
    c570:	str	r5, [r0, r4, lsl #2]
    c574:	add	r0, r8, r4
    c578:	mov	r5, r7
    c57c:	str	r0, [r5, #72]!	; 0x48
    c580:	ldr	r0, [pc, #1120]	; c9e8 <sf_bpf_optimize+0x6f0>
    c584:	ldr	r0, [pc, r0]
    c588:	add	r0, r0, r2
    c58c:	str	r5, [r0, r4, lsl #2]
    c590:	add	r4, r4, #1
    c594:	str	r7, [r7, #88]	; 0x58
    c598:	str	r7, [r7, #64]	; 0x40
    c59c:	cmp	r6, r4
    c5a0:	bne	c540 <sf_bpf_optimize+0x248>
    c5a4:	ldr	r1, [pc, #1088]	; c9ec <sf_bpf_optimize+0x6f4>
    c5a8:	mov	r0, #0
    c5ac:	mov	r2, #0
    c5b0:	ldr	r1, [pc, r1]
    c5b4:	ldr	r3, [r1, r2, lsl #2]
    c5b8:	mov	r7, #0
    c5bc:	ldr	r3, [r3, #4]
    c5c0:	cmp	r3, #0
    c5c4:	beq	c5e4 <sf_bpf_optimize+0x2ec>
    c5c8:	mov	r7, #0
    c5cc:	ldr	r5, [r3]
    c5d0:	ldr	r3, [r3, #16]
    c5d4:	cmn	r5, #1
    c5d8:	addne	r7, r7, #1
    c5dc:	cmp	r3, #0
    c5e0:	bne	c5cc <sf_bpf_optimize+0x2d4>
    c5e4:	add	r0, r0, r7
    c5e8:	add	r2, r2, #1
    c5ec:	add	r0, r0, #1
    c5f0:	cmp	r2, r6
    c5f4:	bne	c5b4 <sf_bpf_optimize+0x2bc>
    c5f8:	add	r4, r0, r0, lsl #1
    c5fc:	b	c61c <sf_bpf_optimize+0x324>
    c600:	ldr	r0, [pc, #1064]	; ca30 <sf_bpf_optimize+0x738>
    c604:	mov	r4, #0
    c608:	add	r0, pc, r0
    c60c:	str	ip, [r0]
    c610:	ldr	r0, [pc, #1052]	; ca34 <sf_bpf_optimize+0x73c>
    c614:	add	r0, pc, r0
    c618:	str	ip, [r0]
    c61c:	ldr	r0, [pc, #972]	; c9f0 <sf_bpf_optimize+0x6f8>
    c620:	mov	r1, #8
    c624:	add	r0, pc, r0
    c628:	str	r4, [r0]
    c62c:	mov	r0, r4
    c630:	bl	dfc <calloc@plt>
    c634:	mov	r6, r0
    c638:	ldr	r0, [pc, #948]	; c9f4 <sf_bpf_optimize+0x6fc>
    c63c:	mov	r1, #20
    c640:	add	r0, pc, r0
    c644:	str	r6, [r0]
    c648:	mov	r0, r4
    c64c:	bl	dfc <calloc@plt>
    c650:	ldr	r1, [pc, #928]	; c9f8 <sf_bpf_optimize+0x700>
    c654:	ldr	r4, [sp, #12]
    c658:	cmp	r6, #0
    c65c:	cmpne	r0, #0
    c660:	add	r1, pc, r1
    c664:	str	r0, [r1]
    c668:	bne	c678 <sf_bpf_optimize+0x380>
    c66c:	ldr	r0, [pc, #952]	; ca2c <sf_bpf_optimize+0x734>
    c670:	add	r0, pc, r0
    c674:	bl	2028 <sf_bpf_error>
    c678:	mov	r0, r4
    c67c:	mov	r1, #0
    c680:	mov	r5, #0
    c684:	bl	ca38 <opt_loop>
    c688:	mov	r0, r4
    c68c:	mov	r1, #1
    c690:	bl	ca38 <opt_loop>
    c694:	ldr	r6, [pc, #864]	; c9fc <sf_bpf_optimize+0x704>
    c698:	ldr	r6, [pc, r6]
    c69c:	sub	r0, r6, #1
    c6a0:	str	r0, [sp, #8]
    c6a4:	sub	r0, r6, #2
    c6a8:	str	r0, [sp, #4]
    c6ac:	cmp	r6, #1
    c6b0:	blt	c6d0 <sf_bpf_optimize+0x3d8>
    c6b4:	ldr	r0, [pc, #836]	; ca00 <sf_bpf_optimize+0x708>
    c6b8:	mov	r1, r6
    c6bc:	ldr	r0, [pc, r0]
    c6c0:	ldr	r2, [r0], #4
    c6c4:	subs	r1, r1, #1
    c6c8:	str	r5, [r2, #100]	; 0x64
    c6cc:	bne	c6c0 <sf_bpf_optimize+0x3c8>
    c6d0:	ldr	r0, [pc, #812]	; ca04 <sf_bpf_optimize+0x70c>
    c6d4:	ldr	r0, [pc, r0]
    c6d8:	add	r9, r0, #1
    c6dc:	ldr	r0, [pc, #804]	; ca08 <sf_bpf_optimize+0x710>
    c6e0:	add	r0, pc, r0
    c6e4:	str	r9, [r0]
    c6e8:	mov	r0, r4
    c6ec:	bl	ec4c <make_marks>
    c6f0:	cmp	r6, #2
    c6f4:	blt	c860 <sf_bpf_optimize+0x568>
    c6f8:	ldr	r0, [pc, #780]	; ca0c <sf_bpf_optimize+0x714>
    c6fc:	ldr	r0, [pc, r0]
    c700:	ldmib	sp, {r1, lr}
    c704:	mov	r2, lr
    c708:	mov	lr, r1
    c70c:	cmp	r2, r6
    c710:	bge	c854 <sf_bpf_optimize+0x55c>
    c714:	ldr	r3, [r0, lr, lsl #2]
    c718:	ldr	r1, [r3, #24]
    c71c:	cmp	r1, r9
    c720:	bne	c854 <sf_bpf_optimize+0x55c>
    c724:	add	r1, r3, #4
    c728:	str	r1, [sp, #16]
    c72c:	ldr	r5, [r0, r2, lsl #2]
    c730:	ldr	r1, [r5, #24]
    c734:	cmp	r1, r9
    c738:	bne	c82c <sf_bpf_optimize+0x534>
    c73c:	ldr	r1, [r5, #8]
    c740:	ldr	r4, [r3, #8]
    c744:	cmp	r4, r1
    c748:	bne	c82c <sf_bpf_optimize+0x534>
    c74c:	ldr	r1, [r5, #20]
    c750:	ldr	r4, [r3, #20]
    c754:	cmp	r4, r1
    c758:	bne	c82c <sf_bpf_optimize+0x534>
    c75c:	ldr	r1, [r5, #60]	; 0x3c
    c760:	ldr	r4, [r3, #60]	; 0x3c
    c764:	cmp	r4, r1
    c768:	bne	c82c <sf_bpf_optimize+0x534>
    c76c:	ldr	r1, [r5, #84]	; 0x54
    c770:	ldr	r4, [r3, #84]	; 0x54
    c774:	cmp	r4, r1
    c778:	bne	c82c <sf_bpf_optimize+0x534>
    c77c:	ldr	r1, [sp, #16]
    c780:	add	r4, r5, #4
    c784:	b	c790 <sf_bpf_optimize+0x498>
    c788:	add	r4, r4, #16
    c78c:	add	r1, r8, #16
    c790:	ldr	r1, [r1]
    c794:	ldr	r4, [r4]
    c798:	mov	ip, #1
    c79c:	mov	r8, #0
    c7a0:	mov	sl, #1
    c7a4:	cmp	r1, #0
    c7a8:	beq	c7e0 <sf_bpf_optimize+0x4e8>
    c7ac:	ldr	r7, [r1]
    c7b0:	cmn	r7, #1
    c7b4:	bne	c7d0 <sf_bpf_optimize+0x4d8>
    c7b8:	ldr	r1, [r1, #16]
    c7bc:	cmp	r1, #0
    c7c0:	bne	c7ac <sf_bpf_optimize+0x4b4>
    c7c4:	mov	r8, #0
    c7c8:	mov	sl, #1
    c7cc:	b	c7e0 <sf_bpf_optimize+0x4e8>
    c7d0:	mov	sl, #0
    c7d4:	mov	r8, r1
    c7d8:	b	c7e0 <sf_bpf_optimize+0x4e8>
    c7dc:	ldr	r4, [r4, #16]
    c7e0:	cmp	r4, #0
    c7e4:	beq	c7fc <sf_bpf_optimize+0x504>
    c7e8:	ldr	r1, [r4]
    c7ec:	cmn	r1, #1
    c7f0:	beq	c7dc <sf_bpf_optimize+0x4e4>
    c7f4:	mov	ip, #0
    c7f8:	b	c800 <sf_bpf_optimize+0x508>
    c7fc:	mov	r4, #0
    c800:	cmp	sl, #0
    c804:	bne	c83c <sf_bpf_optimize+0x544>
    c808:	cmp	ip, #0
    c80c:	bne	c82c <sf_bpf_optimize+0x534>
    c810:	ldr	r1, [r4]
    c814:	ldr	r7, [r8]
    c818:	cmp	r7, r1
    c81c:	ldreq	r1, [r4, #12]
    c820:	ldreq	r7, [r8, #12]
    c824:	cmpeq	r7, r1
    c828:	beq	c788 <sf_bpf_optimize+0x490>
    c82c:	add	r2, r2, #1
    c830:	cmp	r2, r6
    c834:	blt	c72c <sf_bpf_optimize+0x434>
    c838:	b	c854 <sf_bpf_optimize+0x55c>
    c83c:	cmp	ip, #0
    c840:	beq	c82c <sf_bpf_optimize+0x534>
    c844:	ldr	r1, [r5, #100]	; 0x64
    c848:	cmp	r1, #0
    c84c:	moveq	r1, r5
    c850:	str	r1, [r3, #100]	; 0x64
    c854:	sub	r1, lr, #1
    c858:	cmp	lr, #0
    c85c:	bgt	c704 <sf_bpf_optimize+0x40c>
    c860:	ldr	r4, [sp, #12]
    c864:	cmp	r6, #1
    c868:	mov	r5, #0
    c86c:	blt	c8c8 <sf_bpf_optimize+0x5d0>
    c870:	ldr	r0, [pc, #408]	; ca10 <sf_bpf_optimize+0x718>
    c874:	mov	r2, #1
    c878:	mov	r1, r6
    c87c:	ldr	r0, [pc, r0]
    c880:	ldr	r3, [r0]
    c884:	ldr	r7, [r3, #60]	; 0x3c
    c888:	cmp	r7, #0
    c88c:	beq	c8b4 <sf_bpf_optimize+0x5bc>
    c890:	ldr	r7, [r7, #100]	; 0x64
    c894:	cmp	r7, #0
    c898:	strne	r7, [r3, #60]	; 0x3c
    c89c:	movne	r2, #0
    c8a0:	ldr	r7, [r3, #84]	; 0x54
    c8a4:	ldr	r7, [r7, #100]	; 0x64
    c8a8:	cmp	r7, #0
    c8ac:	movne	r2, #0
    c8b0:	strne	r7, [r3, #84]	; 0x54
    c8b4:	add	r0, r0, #4
    c8b8:	subs	r1, r1, #1
    c8bc:	bne	c880 <sf_bpf_optimize+0x588>
    c8c0:	cmp	r2, #0
    c8c4:	beq	c6ac <sf_bpf_optimize+0x3b4>
    c8c8:	ldr	r5, [sp]
    c8cc:	mov	r1, #0
    c8d0:	ldr	r0, [r5]
    c8d4:	ldr	r4, [r0, #4]
    c8d8:	str	r1, [r0, #4]
    c8dc:	ldr	r0, [r5]
    c8e0:	ldr	r1, [r0, #8]
    c8e4:	and	r1, r1, #7
    c8e8:	cmp	r1, #5
    c8ec:	bne	c918 <sf_bpf_optimize+0x620>
    c8f0:	ldr	r1, [r0, #60]	; 0x3c
    c8f4:	ldr	r2, [r0, #84]	; 0x54
    c8f8:	cmp	r1, r2
    c8fc:	bne	c918 <sf_bpf_optimize+0x620>
    c900:	str	r1, [r5]
    c904:	ldr	r0, [r1, #8]
    c908:	and	r0, r0, #7
    c90c:	cmp	r0, #5
    c910:	mov	r0, r1
    c914:	beq	c8f0 <sf_bpf_optimize+0x5f8>
    c918:	ldr	r1, [r0, #4]!
    c91c:	cmp	r1, #0
    c920:	beq	c934 <sf_bpf_optimize+0x63c>
    c924:	mov	r0, r4
    c928:	bl	85a4 <sf_append>
    c92c:	ldr	r0, [r5]
    c930:	add	r0, r0, #4
    c934:	str	r4, [r0]
    c938:	ldr	r0, [r5]
    c93c:	ldr	r1, [r0, #8]
    c940:	and	r1, r1, #7
    c944:	cmp	r1, #6
    c948:	moveq	r1, #0
    c94c:	streq	r1, [r0, #4]
    c950:	ldr	r0, [pc, #188]	; ca14 <sf_bpf_optimize+0x71c>
    c954:	ldr	r0, [pc, r0]
    c958:	bl	e5c <free@plt>
    c95c:	ldr	r0, [pc, #180]	; ca18 <sf_bpf_optimize+0x720>
    c960:	ldr	r0, [pc, r0]
    c964:	bl	e5c <free@plt>
    c968:	ldr	r0, [pc, #172]	; ca1c <sf_bpf_optimize+0x724>
    c96c:	ldr	r0, [pc, r0]
    c970:	bl	e5c <free@plt>
    c974:	ldr	r0, [pc, #164]	; ca20 <sf_bpf_optimize+0x728>
    c978:	ldr	r0, [pc, r0]
    c97c:	bl	e5c <free@plt>
    c980:	ldr	r0, [pc, #156]	; ca24 <sf_bpf_optimize+0x72c>
    c984:	ldr	r0, [pc, r0]
    c988:	bl	e5c <free@plt>
    c98c:	ldr	r0, [pc, #148]	; ca28 <sf_bpf_optimize+0x730>
    c990:	ldr	r0, [pc, r0]
    c994:	sub	sp, fp, #28
    c998:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    c99c:	b	e5c <free@plt>
    c9a0:	.word	0x00024248
    c9a4:	.word	0x0002423c
    c9a8:	.word	0x00024670
    c9ac:	.word	0x00024214
    c9b0:	.word	0x000241f8
    c9b4:	.word	0x00024200
    c9b8:	.word	0x0002461c
    c9bc:	.word	0x000245f0
    c9c0:	.word	0x0002419c
    c9c4:	.word	0x00024198
    c9c8:	.word	0x0002459c
    c9cc:	.word	0x0002414c
    c9d0:	.word	0x00024554
    c9d4:	.word	0x000240ec
    c9d8:	.word	0x000240c0
    c9dc:	.word	0x000244c8
    c9e0:	.word	0x00024468
    c9e4:	.word	0x00024460
    c9e8:	.word	0x00024430
    c9ec:	.word	0x00024400
    c9f0:	.word	0x00023f64
    c9f4:	.word	0x00024380
    c9f8:	.word	0x0002435c
    c9fc:	.word	0x00023ed0
    ca00:	.word	0x000242f4
    ca04:	.word	0x00023e84
    ca08:	.word	0x00023e78
    ca0c:	.word	0x000242b4
    ca10:	.word	0x00024134
    ca14:	.word	0x00024068
    ca18:	.word	0x00024060
    ca1c:	.word	0x00024048
    ca20:	.word	0x00024030
    ca24:	.word	0x00024028
    ca28:	.word	0x00024020
    ca2c:	.word	0x000078d0
    ca30:	.word	0x00023f70
    ca34:	.word	0x00023f60

0000ca38 <opt_loop>:
    ca38:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    ca3c:	add	fp, sp, #28
    ca40:	sub	sp, sp, #100	; 0x64
    ca44:	str	r1, [sp, #20]
    ca48:	mov	r9, r0
    ca4c:	mov	r1, #1
    ca50:	mov	r8, #0
    ca54:	ldr	r0, [pc, #4084]	; da50 <opt_loop+0x1018>
    ca58:	str	r9, [sp]
    ca5c:	add	r0, pc, r0
    ca60:	strb	r1, [r0]
    ca64:	mov	r1, #0
    ca68:	ldr	r0, [pc, #4068]	; da54 <opt_loop+0x101c>
    ca6c:	ldr	r0, [pc, r0]
    ca70:	ldr	r6, [pc, #4064]	; da58 <opt_loop+0x1020>
    ca74:	ldr	r6, [pc, r6]
    ca78:	lsl	r5, r6, #2
    ca7c:	mov	r2, r5
    ca80:	bl	f40 <memset@plt>
    ca84:	ldr	r0, [pc, #4048]	; da5c <opt_loop+0x1024>
    ca88:	ldr	r0, [pc, r0]
    ca8c:	ldr	r1, [pc, #4044]	; da60 <opt_loop+0x1028>
    ca90:	add	r0, r0, #1
    ca94:	add	r1, pc, r1
    ca98:	str	r0, [r1]
    ca9c:	mov	r0, r9
    caa0:	bl	e4d4 <find_levels_r>
    caa4:	ldr	r7, [pc, #4024]	; da64 <opt_loop+0x102c>
    caa8:	ldr	r7, [pc, r7]
    caac:	mul	r0, r7, r6
    cab0:	cmp	r0, #1
    cab4:	blt	cae4 <opt_loop+0xac>
    cab8:	mvn	r1, r0
    cabc:	mvn	r2, #1
    cac0:	cmn	r1, #2
    cac4:	movle	r1, r2
    cac8:	add	r0, r1, r0
    cacc:	mov	r1, #8
    cad0:	add	r2, r1, r0, lsl #2
    cad4:	ldr	r0, [pc, #3980]	; da68 <opt_loop+0x1030>
    cad8:	mov	r1, #255	; 0xff
    cadc:	ldr	r0, [pc, r0]
    cae0:	bl	f40 <memset@plt>
    cae4:	mov	r4, #1
    cae8:	cmp	r7, #1
    caec:	blt	cb10 <opt_loop+0xd8>
    caf0:	sub	r0, r7, #1
    caf4:	ldr	r1, [r9, #104]	; 0x68
    caf8:	str	r8, [r1, r0, lsl #2]
    cafc:	sub	r1, r0, #1
    cb00:	add	r0, r0, #1
    cb04:	cmp	r0, #1
    cb08:	mov	r0, r1
    cb0c:	bgt	caf4 <opt_loop+0xbc>
    cb10:	ldr	r0, [r9, #36]	; 0x24
    cb14:	cmp	r0, #0
    cb18:	blt	cbf8 <opt_loop+0x1c0>
    cb1c:	ldr	r1, [pc, #4044]	; daf0 <opt_loop+0x10b8>
    cb20:	ldr	r1, [pc, r1]
    cb24:	ldr	r1, [r1, r0, lsl #2]
    cb28:	b	cbcc <opt_loop+0x194>
    cb2c:	ldr	r2, [r1]
    cb30:	ldr	r3, [r1, #104]	; 0x68
    cb34:	lsr	r7, r2, #5
    cb38:	and	r2, r2, #31
    cb3c:	ldr	r6, [r3, r7, lsl #2]
    cb40:	orr	r2, r6, r4, lsl r2
    cb44:	str	r2, [r3, r7, lsl #2]
    cb48:	ldr	r3, [r1, #60]	; 0x3c
    cb4c:	cmp	r3, #0
    cb50:	beq	cbc8 <opt_loop+0x190>
    cb54:	ldr	r2, [pc, #3992]	; daf4 <opt_loop+0x10bc>
    cb58:	ldr	r2, [pc, r2]
    cb5c:	cmp	r2, #1
    cb60:	blt	cbc8 <opt_loop+0x190>
    cb64:	ldr	r3, [r3, #104]	; 0x68
    cb68:	ldr	r7, [r1, #104]	; 0x68
    cb6c:	add	r2, r2, #1
    cb70:	ldr	r6, [r7], #4
    cb74:	ldr	r5, [r3]
    cb78:	sub	r2, r2, #1
    cb7c:	cmp	r2, #1
    cb80:	and	r6, r5, r6
    cb84:	str	r6, [r3], #4
    cb88:	bgt	cb70 <opt_loop+0x138>
    cb8c:	ldr	r2, [pc, #4080]	; db84 <opt_loop+0x114c>
    cb90:	ldr	r2, [pc, r2]
    cb94:	cmp	r2, #1
    cb98:	blt	cbc8 <opt_loop+0x190>
    cb9c:	ldr	r7, [r1, #84]	; 0x54
    cba0:	ldr	r3, [r1, #104]	; 0x68
    cba4:	add	r2, r2, #1
    cba8:	ldr	r7, [r7, #104]	; 0x68
    cbac:	ldr	r6, [r3], #4
    cbb0:	ldr	r5, [r7]
    cbb4:	sub	r2, r2, #1
    cbb8:	cmp	r2, #1
    cbbc:	and	r6, r5, r6
    cbc0:	str	r6, [r7], #4
    cbc4:	bgt	cbac <opt_loop+0x174>
    cbc8:	ldr	r1, [r1, #100]	; 0x64
    cbcc:	cmp	r1, #0
    cbd0:	bne	cb2c <opt_loop+0xf4>
    cbd4:	sub	r1, r0, #1
    cbd8:	cmp	r0, #0
    cbdc:	mov	r0, r1
    cbe0:	bgt	cb1c <opt_loop+0xe4>
    cbe4:	ldr	r0, [pc, #4092]	; dbe8 <opt_loop+0x11b0>
    cbe8:	ldr	r0, [pc, r0]
    cbec:	ldr	r7, [pc, #4088]	; dbec <opt_loop+0x11b4>
    cbf0:	ldr	r7, [pc, r7]
    cbf4:	lsl	r5, r0, #2
    cbf8:	ldr	r0, [pc, #4080]	; dbf0 <opt_loop+0x11b8>
    cbfc:	mul	r2, r5, r7
    cc00:	mov	r1, #0
    cc04:	ldr	r0, [pc, r0]
    cc08:	bl	f40 <memset@plt>
    cc0c:	ldr	r0, [r9, #36]	; 0x24
    cc10:	cmp	r0, #0
    cc14:	blt	ceb4 <opt_loop+0x47c>
    cc18:	ldr	r1, [pc, #4052]	; dbf4 <opt_loop+0x11bc>
    cc1c:	ldr	r1, [pc, r1]
    cc20:	ldr	r1, [r1, r0, lsl #2]
    cc24:	b	ccc8 <opt_loop+0x290>
    cc28:	ldr	r2, [r1]
    cc2c:	ldr	r3, [r1, #108]	; 0x6c
    cc30:	lsr	r7, r2, #5
    cc34:	and	r2, r2, #31
    cc38:	ldr	r6, [r3, r7, lsl #2]
    cc3c:	orr	r2, r6, r4, lsl r2
    cc40:	str	r2, [r3, r7, lsl #2]
    cc44:	ldr	r3, [r1, #60]	; 0x3c
    cc48:	cmp	r3, #0
    cc4c:	beq	ccc4 <opt_loop+0x28c>
    cc50:	ldr	r2, [pc, #4088]	; dc50 <opt_loop+0x1218>
    cc54:	ldr	r2, [pc, r2]
    cc58:	cmp	r2, #1
    cc5c:	blt	ccc4 <opt_loop+0x28c>
    cc60:	ldr	r3, [r3, #108]	; 0x6c
    cc64:	ldr	r7, [r1, #108]	; 0x6c
    cc68:	add	r2, r2, #1
    cc6c:	ldr	r6, [r7], #4
    cc70:	ldr	r5, [r3]
    cc74:	sub	r2, r2, #1
    cc78:	cmp	r2, #1
    cc7c:	orr	r6, r5, r6
    cc80:	str	r6, [r3], #4
    cc84:	bgt	cc6c <opt_loop+0x234>
    cc88:	ldr	r2, [pc, #4092]	; dc8c <opt_loop+0x1254>
    cc8c:	ldr	r2, [pc, r2]
    cc90:	cmp	r2, #1
    cc94:	blt	ccc4 <opt_loop+0x28c>
    cc98:	ldr	r7, [r1, #84]	; 0x54
    cc9c:	ldr	r3, [r1, #108]	; 0x6c
    cca0:	add	r2, r2, #1
    cca4:	ldr	r7, [r7, #108]	; 0x6c
    cca8:	ldr	r6, [r3], #4
    ccac:	ldr	r5, [r7]
    ccb0:	sub	r2, r2, #1
    ccb4:	cmp	r2, #1
    ccb8:	orr	r6, r5, r6
    ccbc:	str	r6, [r7], #4
    ccc0:	bgt	cca8 <opt_loop+0x270>
    ccc4:	ldr	r1, [r1, #100]	; 0x64
    ccc8:	cmp	r1, #0
    cccc:	bne	cc28 <opt_loop+0x1f0>
    ccd0:	sub	r1, r0, #1
    ccd4:	cmp	r0, #0
    ccd8:	mov	r0, r1
    ccdc:	bgt	cc18 <opt_loop+0x1e0>
    cce0:	ldr	r0, [r9, #36]	; 0x24
    cce4:	cmp	r0, #0
    cce8:	blt	ceb4 <opt_loop+0x47c>
    ccec:	ldr	r1, [pc, #3996]	; dc90 <opt_loop+0x1258>
    ccf0:	mov	r9, #65536	; 0x10000
    ccf4:	ldr	r1, [pc, r1]
    ccf8:	str	r0, [sp, #8]
    ccfc:	str	r1, [sp, #12]
    cd00:	mov	r1, r0
    cd04:	ldr	r0, [sp, #12]
    cd08:	str	r1, [sp, #16]
    cd0c:	ldr	r4, [r0, r1, lsl #2]
    cd10:	b	ce20 <opt_loop+0x3e8>
    cd14:	ldr	r5, [r4, #4]
    cd18:	cmp	r5, #0
    cd1c:	beq	cdac <opt_loop+0x374>
    cd20:	mov	sl, #0
    cd24:	mov	r7, #0
    cd28:	mov	r6, #0
    cd2c:	ldr	r0, [r5]
    cd30:	cmn	r0, #1
    cd34:	beq	cd9c <opt_loop+0x364>
    cd38:	mov	r0, r5
    cd3c:	bl	e558 <atomuse>
    cd40:	cmp	r0, #0
    cd44:	blt	cd7c <opt_loop+0x344>
    cd48:	cmp	r0, #18
    cd4c:	bne	cd68 <opt_loop+0x330>
    cd50:	mov	r1, #131072	; 0x20000
    cd54:	bic	r0, r9, r6
    cd58:	bic	r1, r1, r6
    cd5c:	orr	r1, r1, r7
    cd60:	orr	r7, r1, r0
    cd64:	b	cd7c <opt_loop+0x344>
    cd68:	cmp	r0, #17
    cd6c:	bgt	df30 <opt_loop+0x14f8>
    cd70:	mov	r1, #1
    cd74:	tst	r6, r1, lsl r0
    cd78:	orreq	r7, r7, r1, lsl r0
    cd7c:	mov	r0, r5
    cd80:	bl	e608 <atomdef>
    cd84:	cmp	r0, #0
    cd88:	blt	cd9c <opt_loop+0x364>
    cd8c:	mov	r1, #1
    cd90:	tst	r7, r1, lsl r0
    cd94:	orr	r6, r6, r1, lsl r0
    cd98:	orreq	sl, sl, r1, lsl r0
    cd9c:	ldr	r5, [r5, #16]
    cda0:	cmp	r5, #0
    cda4:	bne	cd2c <opt_loop+0x2f4>
    cda8:	b	cdb8 <opt_loop+0x380>
    cdac:	mov	r6, #0
    cdb0:	mov	r7, #0
    cdb4:	mov	sl, #0
    cdb8:	mov	r0, r4
    cdbc:	ldr	r1, [r0, #8]!
    cdc0:	and	r1, r1, #7
    cdc4:	cmp	r1, #5
    cdc8:	bne	ce0c <opt_loop+0x3d4>
    cdcc:	bl	e558 <atomuse>
    cdd0:	cmp	r0, #0
    cdd4:	blt	ce0c <opt_loop+0x3d4>
    cdd8:	cmp	r0, #18
    cddc:	bne	cdf8 <opt_loop+0x3c0>
    cde0:	mov	r1, #131072	; 0x20000
    cde4:	bic	r0, r9, r6
    cde8:	bic	r1, r1, r6
    cdec:	orr	r1, r1, r7
    cdf0:	orr	r7, r1, r0
    cdf4:	b	ce0c <opt_loop+0x3d4>
    cdf8:	cmp	r0, #17
    cdfc:	bgt	df30 <opt_loop+0x14f8>
    ce00:	mov	r1, #1
    ce04:	tst	r6, r1, lsl r0
    ce08:	orreq	r7, r7, r1, lsl r0
    ce0c:	str	r6, [r4, #116]	; 0x74
    ce10:	str	sl, [r4, #120]	; 0x78
    ce14:	str	r7, [r4, #124]	; 0x7c
    ce18:	str	r8, [r4, #128]	; 0x80
    ce1c:	ldr	r4, [r4, #100]	; 0x64
    ce20:	cmp	r4, #0
    ce24:	bne	cd14 <opt_loop+0x2dc>
    ce28:	ldr	r1, [sp, #16]
    ce2c:	sub	r0, r1, #1
    ce30:	cmp	r1, #0
    ce34:	mov	r1, r0
    ce38:	bgt	cd04 <opt_loop+0x2cc>
    ce3c:	ldr	r5, [sp, #8]
    ce40:	ldr	r9, [sp]
    ce44:	cmp	r5, #1
    ce48:	blt	ceb4 <opt_loop+0x47c>
    ce4c:	mov	r0, #1
    ce50:	ldr	r1, [sp, #12]
    ce54:	ldr	r1, [r1, r0, lsl #2]
    ce58:	cmp	r1, #0
    ce5c:	beq	cea4 <opt_loop+0x46c>
    ce60:	ldr	r2, [r1, #60]	; 0x3c
    ce64:	ldr	r3, [r1, #84]	; 0x54
    ce68:	ldr	r7, [r1, #100]	; 0x64
    ce6c:	ldr	r6, [r1, #120]	; 0x78
    ce70:	ldr	r2, [r2, #124]	; 0x7c
    ce74:	ldr	r3, [r3, #124]	; 0x7c
    ce78:	cmp	r7, #0
    ce7c:	orr	r2, r3, r2
    ce80:	ldr	r3, [r1, #128]	; 0x80
    ce84:	orr	r2, r2, r3
    ce88:	str	r2, [r1, #128]	; 0x80
    ce8c:	bic	r2, r2, r6
    ce90:	ldr	r3, [r1, #124]	; 0x7c
    ce94:	orr	r2, r3, r2
    ce98:	str	r2, [r1, #124]	; 0x7c
    ce9c:	mov	r1, r7
    cea0:	bne	ce60 <opt_loop+0x428>
    cea4:	add	r1, r0, #1
    cea8:	cmp	r0, r5
    ceac:	mov	r0, r1
    ceb0:	bne	ce50 <opt_loop+0x418>
    ceb4:	ldr	r0, [pc, #4088]	; deb4 <opt_loop+0x147c>
    ceb8:	ldr	r0, [pc, r0]
    cebc:	ldr	r4, [pc, #4084]	; deb8 <opt_loop+0x1480>
    cec0:	ldr	r4, [pc, r4]
    cec4:	mul	r1, r4, r0
    cec8:	cmp	r1, #1
    cecc:	blt	cf04 <opt_loop+0x4cc>
    ced0:	ldr	r3, [pc, #4092]	; ded4 <opt_loop+0x149c>
    ced4:	mvn	r2, r1
    ced8:	mvn	r0, #1
    cedc:	cmn	r2, #2
    cee0:	movle	r2, r0
    cee4:	sub	r0, r0, r2
    cee8:	add	r1, r2, r1
    ceec:	mov	r2, #8
    cef0:	ldr	r3, [pc, r3]
    cef4:	add	r2, r2, r1, lsl #2
    cef8:	mov	r1, #255	; 0xff
    cefc:	add	r0, r3, r0, lsl #2
    cf00:	bl	f40 <memset@plt>
    cf04:	ldr	r0, [r9, #56]	; 0x38
    cf08:	lsl	r5, r4, #2
    cf0c:	mov	r1, #0
    cf10:	mov	r2, r5
    cf14:	bl	f40 <memset@plt>
    cf18:	ldr	r0, [r9, #80]	; 0x50
    cf1c:	mov	r1, #0
    cf20:	mov	r2, r5
    cf24:	bl	f40 <memset@plt>
    cf28:	ldr	r4, [r9, #36]	; 0x24
    cf2c:	mov	r7, #1
    cf30:	cmp	r4, #0
    cf34:	blt	cf74 <opt_loop+0x53c>
    cf38:	ldr	r0, [pc, #4084]	; df34 <opt_loop+0x14fc>
    cf3c:	ldr	r0, [pc, r0]
    cf40:	ldr	r5, [r0, r4, lsl #2]
    cf44:	b	cf5c <opt_loop+0x524>
    cf48:	add	r0, r5, #48	; 0x30
    cf4c:	bl	e680 <propedom>
    cf50:	add	r0, r5, #72	; 0x48
    cf54:	bl	e680 <propedom>
    cf58:	ldr	r5, [r5, #100]	; 0x64
    cf5c:	cmp	r5, #0
    cf60:	bne	cf48 <opt_loop+0x510>
    cf64:	sub	r0, r4, #1
    cf68:	cmp	r4, #0
    cf6c:	mov	r4, r0
    cf70:	bgt	cf38 <opt_loop+0x500>
    cf74:	ldr	r0, [pc, #4028]	; df38 <opt_loop+0x1500>
    cf78:	add	r0, pc, r0
    cf7c:	str	r8, [r0]
    cf80:	ldr	r0, [pc, #4020]	; df3c <opt_loop+0x1504>
    cf84:	ldr	r0, [pc, r0]
    cf88:	ldr	r1, [pc, #4016]	; df40 <opt_loop+0x1508>
    cf8c:	add	r1, pc, r1
    cf90:	str	r0, [r1]
    cf94:	ldr	r0, [pc, #4008]	; df44 <opt_loop+0x150c>
    cf98:	ldr	r0, [pc, r0]
    cf9c:	ldr	r1, [pc, #4004]	; df48 <opt_loop+0x1510>
    cfa0:	ldr	r1, [pc, r1]
    cfa4:	lsl	r2, r1, #3
    cfa8:	mov	r1, #0
    cfac:	bl	f40 <memset@plt>
    cfb0:	ldr	r0, [pc, #3988]	; df4c <opt_loop+0x1514>
    cfb4:	mov	r1, #0
    cfb8:	mov	r2, #852	; 0x354
    cfbc:	add	r0, pc, r0
    cfc0:	bl	f40 <memset@plt>
    cfc4:	ldr	r4, [r9, #36]	; 0x24
    cfc8:	mov	r0, r9
    cfcc:	bl	e728 <find_inedges>
    cfd0:	str	r4, [sp, #4]
    cfd4:	cmp	r4, #0
    cfd8:	ldr	r4, [sp, #20]
    cfdc:	ldr	r9, [pc, #3948]	; df50 <opt_loop+0x1518>
    cfe0:	add	r9, pc, r9
    cfe4:	blt	dbbc <opt_loop+0x1184>
    cfe8:	ldr	r1, [sp, #4]
    cfec:	ldr	r0, [pc, #3936]	; df54 <opt_loop+0x151c>
    cff0:	ldr	r0, [pc, r0]
    cff4:	str	r1, [sp, #8]
    cff8:	ldr	sl, [r0, r1, lsl #2]
    cffc:	cmp	sl, #0
    d000:	beq	dba8 <opt_loop+0x1170>
    d004:	ldr	r4, [sl, #112]	; 0x70
    d008:	add	r0, sl, #136	; 0x88
    d00c:	cmp	r4, #0
    d010:	beq	d068 <opt_loop+0x630>
    d014:	ldr	r1, [r4, #16]
    d018:	mov	r2, #72	; 0x48
    d01c:	add	r1, r1, #136	; 0x88
    d020:	bl	e80 <memcpy@plt>
    d024:	ldr	r0, [r4, #20]
    d028:	ldr	r4, [sp, #20]
    d02c:	cmp	r0, #0
    d030:	beq	d078 <opt_loop+0x640>
    d034:	mov	r1, #34	; 0x22
    d038:	ldr	r3, [r0, #16]
    d03c:	ldr	r2, [sl, r1, lsl #2]
    d040:	ldr	r3, [r3, r1, lsl #2]
    d044:	cmp	r2, r3
    d048:	strne	r8, [sl, r1, lsl #2]
    d04c:	add	r1, r1, #1
    d050:	cmp	r1, #52	; 0x34
    d054:	bne	d038 <opt_loop+0x600>
    d058:	ldr	r0, [r0, #20]
    d05c:	cmp	r0, #0
    d060:	bne	d034 <opt_loop+0x5fc>
    d064:	b	d078 <opt_loop+0x640>
    d068:	mov	r1, #0
    d06c:	mov	r2, #72	; 0x48
    d070:	bl	f40 <memset@plt>
    d074:	ldr	r4, [sp, #20]
    d078:	mov	r9, sl
    d07c:	ldr	r0, [r9, #200]!	; 0xc8
    d080:	str	r0, [sp, #16]
    d084:	ldr	r6, [r9, #-196]	; 0xffffff3c
    d088:	ldr	r0, [r9, #4]
    d08c:	str	r0, [sp, #12]
    d090:	cmp	r6, #0
    d094:	beq	d648 <opt_loop+0xc10>
    d098:	ldr	r5, [r6]
    d09c:	cmp	r5, #59	; 0x3b
    d0a0:	ble	d134 <opt_loop+0x6fc>
    d0a4:	cmp	r5, #91	; 0x5b
    d0a8:	ble	d184 <opt_loop+0x74c>
    d0ac:	cmp	r5, #123	; 0x7b
    d0b0:	bgt	d210 <opt_loop+0x7d8>
    d0b4:	sub	r0, r5, #92	; 0x5c
    d0b8:	cmp	r0, #8
    d0bc:	bhi	d2e0 <opt_loop+0x8a8>
    d0c0:	add	r1, pc, #4
    d0c4:	ldr	r0, [r1, r0, lsl #2]
    d0c8:	add	pc, r1, r0
    d0cc:	.word	0x0000027c
    d0d0:	.word	0x00000524
    d0d4:	.word	0x00000524
    d0d8:	.word	0x00000524
    d0dc:	.word	0x00000024
    d0e0:	.word	0x00000458
    d0e4:	.word	0x00000524
    d0e8:	.word	0x00000524
    d0ec:	.word	0x00000224
    d0f0:	ldr	r0, [r6, #12]
    d0f4:	cmp	r4, #0
    d0f8:	add	r0, sl, r0, lsl #2
    d0fc:	ldr	r0, [r0, #136]	; 0x88
    d100:	beq	d5ec <opt_loop+0xbb4>
    d104:	ldr	r1, [pc, #3692]	; df78 <opt_loop+0x1540>
    d108:	ldr	r1, [pc, r1]
    d10c:	ldr	r1, [r1, r0, lsl #3]
    d110:	cmp	r1, #0
    d114:	beq	d2d0 <opt_loop+0x898>
    d118:	str	r8, [r6]
    d11c:	ldr	r1, [pc, #3672]	; df7c <opt_loop+0x1544>
    d120:	ldr	r1, [pc, r1]
    d124:	add	r1, r1, r0, lsl #3
    d128:	ldr	r1, [r1, #4]
    d12c:	str	r1, [r6, #12]
    d130:	b	d28c <opt_loop+0x854>
    d134:	cmp	r5, #12
    d138:	bls	d1c4 <opt_loop+0x78c>
    d13c:	sub	r0, r5, #28
    d140:	cmp	r0, #24
    d144:	bhi	d178 <opt_loop+0x740>
    d148:	movw	r1, #4112	; 0x1010
    d14c:	movt	r1, #16
    d150:	tst	r1, r7, lsl r0
    d154:	bne	d29c <opt_loop+0x864>
    d158:	movw	r1, #1
    d15c:	movt	r1, #1
    d160:	tst	r1, r7, lsl r0
    d164:	bne	d348 <opt_loop+0x910>
    d168:	movw	r1, #256	; 0x100
    d16c:	movt	r1, #256	; 0x100
    d170:	tst	r1, r7, lsl r0
    d174:	bne	d2f0 <opt_loop+0x8b8>
    d178:	cmp	r5, #20
    d17c:	beq	d2f0 <opt_loop+0x8b8>
    d180:	b	d5f0 <opt_loop+0xbb8>
    d184:	sub	r0, r5, #60	; 0x3c
    d188:	cmp	r0, #24
    d18c:	bhi	d5f0 <opt_loop+0xbb8>
    d190:	movw	r1, #4112	; 0x1010
    d194:	movt	r1, #16
    d198:	tst	r1, r7, lsl r0
    d19c:	bne	d23c <opt_loop+0x804>
    d1a0:	movw	r1, #1
    d1a4:	movt	r1, #1
    d1a8:	tst	r1, r7, lsl r0
    d1ac:	bne	d348 <opt_loop+0x910>
    d1b0:	movw	r1, #256	; 0x100
    d1b4:	movt	r1, #256	; 0x100
    d1b8:	tst	r1, r7, lsl r0
    d1bc:	bne	d2f0 <opt_loop+0x8b8>
    d1c0:	b	d5f0 <opt_loop+0xbb8>
    d1c4:	add	r0, pc, #4
    d1c8:	ldr	r1, [r0, r5, lsl #2]
    d1cc:	add	pc, r0, r1
    d1d0:	.word	0x00000034
    d1d4:	.word	0x0000031c
    d1d8:	.word	0x000002e4
    d1dc:	.word	0x000002f0
    d1e0:	.word	0x00000120
    d1e4:	.word	0x00000420
    d1e8:	.word	0x00000420
    d1ec:	.word	0x00000330
    d1f0:	.word	0x00000420
    d1f4:	.word	0x00000420
    d1f8:	.word	0x00000420
    d1fc:	.word	0x00000420
    d200:	.word	0x00000178
    d204:	ldr	r1, [r6, #12]
    d208:	mov	r0, #0
    d20c:	b	d2c0 <opt_loop+0x888>
    d210:	cmp	r5, #131	; 0x83
    d214:	ble	d2a8 <opt_loop+0x870>
    d218:	cmp	r5, #132	; 0x84
    d21c:	beq	d584 <opt_loop+0xb4c>
    d220:	cmp	r5, #135	; 0x87
    d224:	beq	d57c <opt_loop+0xb44>
    d228:	cmp	r5, #177	; 0xb1
    d22c:	bne	d5f0 <opt_loop+0xbb8>
    d230:	ldr	r1, [r6, #12]
    d234:	mov	r0, #177	; 0xb1
    d238:	b	d4f4 <opt_loop+0xabc>
    d23c:	ldr	r2, [sl, #204]	; 0xcc
    d240:	cmp	r4, #0
    d244:	beq	d4ac <opt_loop+0xa74>
    d248:	ldr	r0, [pc, #3336]	; df58 <opt_loop+0x1520>
    d24c:	ldr	r0, [pc, r0]
    d250:	ldr	r0, [r0, r2, lsl #3]
    d254:	cmp	r0, #0
    d258:	beq	d5cc <opt_loop+0xb94>
    d25c:	and	r0, r5, #24
    d260:	orr	r0, r0, #32
    d264:	str	r0, [r6]
    d268:	ldr	r1, [pc, #3308]	; df5c <opt_loop+0x1524>
    d26c:	ldr	r1, [pc, r1]
    d270:	add	r1, r1, r2, lsl #3
    d274:	ldr	r2, [r6, #12]
    d278:	ldr	r1, [r1, #4]
    d27c:	add	r1, r2, r1
    d280:	mov	r2, #0
    d284:	str	r1, [r6, #12]
    d288:	bl	e9fc <F>
    d28c:	ldr	r1, [pc, #3308]	; df80 <opt_loop+0x1548>
    d290:	add	r1, pc, r1
    d294:	strb	r8, [r1]
    d298:	b	d2d0 <opt_loop+0x898>
    d29c:	ldr	r1, [r6, #12]
    d2a0:	mov	r0, r5
    d2a4:	b	d2c0 <opt_loop+0x888>
    d2a8:	cmp	r5, #124	; 0x7c
    d2ac:	beq	d348 <opt_loop+0x910>
    d2b0:	cmp	r5, #128	; 0x80
    d2b4:	bne	d5f0 <opt_loop+0xbb8>
    d2b8:	mov	r0, #128	; 0x80
    d2bc:	mov	r1, #0
    d2c0:	mov	r2, #0
    d2c4:	bl	e9fc <F>
    d2c8:	cmp	r4, #0
    d2cc:	beq	d5ec <opt_loop+0xbb4>
    d2d0:	ldr	r1, [r9]
    d2d4:	cmp	r1, r0
    d2d8:	beq	d518 <opt_loop+0xae0>
    d2dc:	b	d5ec <opt_loop+0xbb4>
    d2e0:	cmp	r5, #108	; 0x6c
    d2e4:	beq	d348 <opt_loop+0x910>
    d2e8:	cmp	r5, #116	; 0x74
    d2ec:	bne	d5f0 <opt_loop+0xbb8>
    d2f0:	cmp	r4, #0
    d2f4:	beq	d3a8 <opt_loop+0x970>
    d2f8:	ldr	r1, [r6, #12]
    d2fc:	cmp	r1, #0
    d300:	beq	d414 <opt_loop+0x9dc>
    d304:	ldr	r7, [r9]
    d308:	ldr	r0, [pc, #3160]	; df68 <opt_loop+0x1530>
    d30c:	ldr	r0, [pc, r0]
    d310:	ldr	r0, [r0, r7, lsl #3]
    d314:	cmp	r0, #0
    d318:	beq	d3b0 <opt_loop+0x978>
    d31c:	mov	r0, #0
    d320:	mov	r2, #0
    d324:	bl	e9fc <F>
    d328:	mov	r2, r0
    d32c:	mov	r0, r6
    d330:	mov	r1, r7
    d334:	bl	eaf4 <fold_op>
    d338:	ldr	r1, [r6, #12]
    d33c:	mov	r0, #0
    d340:	mov	r2, #0
    d344:	b	d3c8 <opt_loop+0x990>
    d348:	cmp	r4, #0
    d34c:	beq	d39c <opt_loop+0x964>
    d350:	ldr	r1, [sl, #200]	; 0xc8
    d354:	ldr	r2, [sl, #204]	; 0xcc
    d358:	ldr	r3, [pc, #3084]	; df6c <opt_loop+0x1534>
    d35c:	and	r0, r5, #240	; 0xf0
    d360:	ldr	r3, [pc, r3]
    d364:	ldr	r4, [r3, r2, lsl #3]
    d368:	ldr	r7, [r3, r1, lsl #3]
    d36c:	cmp	r4, #0
    d370:	beq	d3d4 <opt_loop+0x99c>
    d374:	cmp	r7, #0
    d378:	beq	d450 <opt_loop+0xa18>
    d37c:	mov	r0, r6
    d380:	bl	eaf4 <fold_op>
    d384:	ldr	r1, [r6, #12]
    d388:	mov	r0, #0
    d38c:	mov	r2, #0
    d390:	bl	e9fc <F>
    d394:	str	r0, [r9]
    d398:	b	d4a0 <opt_loop+0xa68>
    d39c:	ldr	r1, [sl, #200]	; 0xc8
    d3a0:	ldr	r2, [sl, #204]	; 0xcc
    d3a4:	b	d5e4 <opt_loop+0xbac>
    d3a8:	ldr	r1, [r6, #12]
    d3ac:	ldr	r7, [r9]
    d3b0:	mov	r0, #0
    d3b4:	mov	r2, #0
    d3b8:	bl	e9fc <F>
    d3bc:	mov	r2, r0
    d3c0:	mov	r0, r5
    d3c4:	mov	r1, r7
    d3c8:	bl	e9fc <F>
    d3cc:	str	r0, [r9]
    d3d0:	b	d4a4 <opt_loop+0xa6c>
    d3d4:	cmp	r7, #0
    d3d8:	beq	d5dc <opt_loop+0xba4>
    d3dc:	add	r3, r3, r1, lsl #3
    d3e0:	ldr	r4, [sp, #20]
    d3e4:	mov	r7, #1
    d3e8:	ldr	r3, [r3, #4]
    d3ec:	cmp	r3, #0
    d3f0:	bne	d5e4 <opt_loop+0xbac>
    d3f4:	orr	r3, r0, #64	; 0x40
    d3f8:	cmp	r3, #64	; 0x40
    d3fc:	bne	d608 <opt_loop+0xbd0>
    d400:	mov	r0, #135	; 0x87
    d404:	str	r0, [r6]
    d408:	ldr	r1, [sl, #200]	; 0xc8
    d40c:	ldr	r0, [sl, #204]	; 0xcc
    d410:	b	d2d4 <opt_loop+0x89c>
    d414:	and	r0, r5, #240	; 0xf0
    d418:	sbfx	r2, r0, #4, #4
    d41c:	cmp	r2, #0
    d420:	blt	d434 <opt_loop+0x9fc>
    d424:	lsr	r2, r0, #4
    d428:	mov	r3, #209	; 0xd1
    d42c:	tst	r3, r7, lsl r2
    d430:	bne	d518 <opt_loop+0xae0>
    d434:	cmp	r0, #80	; 0x50
    d438:	cmpne	r0, #32
    d43c:	bne	d304 <opt_loop+0x8cc>
    d440:	str	r8, [r6]
    d444:	mov	r0, #0
    d448:	mov	r1, #0
    d44c:	b	d600 <opt_loop+0xbc8>
    d450:	orr	r5, r0, #4
    d454:	mov	r2, #0
    d458:	str	r5, [r6]
    d45c:	ldr	r0, [sl, #204]	; 0xcc
    d460:	ldr	r1, [pc, #2824]	; df70 <opt_loop+0x1538>
    d464:	ldr	r1, [pc, r1]
    d468:	add	r0, r1, r0, lsl #3
    d46c:	ldr	r1, [r0, #4]
    d470:	str	r1, [r6, #12]
    d474:	ldr	r0, [pc, #2808]	; df74 <opt_loop+0x153c>
    d478:	add	r0, pc, r0
    d47c:	strb	r8, [r0]
    d480:	mov	r0, #0
    d484:	ldr	r7, [sl, #200]	; 0xc8
    d488:	bl	e9fc <F>
    d48c:	mov	r2, r0
    d490:	mov	r0, r5
    d494:	mov	r1, r7
    d498:	bl	e9fc <F>
    d49c:	str	r0, [sl, #200]	; 0xc8
    d4a0:	ldr	r4, [sp, #20]
    d4a4:	mov	r7, #1
    d4a8:	b	d5f0 <opt_loop+0xbb8>
    d4ac:	ldr	r1, [r6, #12]
    d4b0:	b	d5e4 <opt_loop+0xbac>
    d4b4:	ldr	r0, [r6, #12]
    d4b8:	ldr	r1, [sl, #200]	; 0xc8
    d4bc:	b	d4c8 <opt_loop+0xa90>
    d4c0:	ldr	r0, [r6, #12]
    d4c4:	ldr	r1, [sl, #204]	; 0xcc
    d4c8:	add	r0, sl, r0, lsl #2
    d4cc:	add	r0, r0, #136	; 0x88
    d4d0:	cmp	r4, #0
    d4d4:	beq	d4e4 <opt_loop+0xaac>
    d4d8:	ldr	r2, [r0]
    d4dc:	cmp	r2, r1
    d4e0:	beq	d518 <opt_loop+0xae0>
    d4e4:	str	r1, [r0]
    d4e8:	b	d5f0 <opt_loop+0xbb8>
    d4ec:	ldr	r1, [r6, #12]
    d4f0:	mov	r0, #0
    d4f4:	mov	r2, #0
    d4f8:	bl	e9fc <F>
    d4fc:	b	d504 <opt_loop+0xacc>
    d500:	ldr	r0, [r9]
    d504:	cmp	r4, #0
    d508:	beq	d574 <opt_loop+0xb3c>
    d50c:	ldr	r1, [sl, #204]	; 0xcc
    d510:	cmp	r1, r0
    d514:	bne	d574 <opt_loop+0xb3c>
    d518:	mvn	r0, #0
    d51c:	str	r0, [r6]
    d520:	b	d5f0 <opt_loop+0xbb8>
    d524:	ldr	r0, [r6, #12]
    d528:	cmp	r4, #0
    d52c:	add	r0, sl, r0, lsl #2
    d530:	ldr	r0, [r0, #136]	; 0x88
    d534:	beq	d574 <opt_loop+0xb3c>
    d538:	ldr	r1, [pc, #2628]	; df84 <opt_loop+0x154c>
    d53c:	ldr	r1, [pc, r1]
    d540:	ldr	r1, [r1, r0, lsl #3]
    d544:	cmp	r1, #0
    d548:	beq	d50c <opt_loop+0xad4>
    d54c:	str	r7, [r6]
    d550:	ldr	r1, [pc, #2608]	; df88 <opt_loop+0x1550>
    d554:	ldr	r1, [pc, r1]
    d558:	add	r1, r1, r0, lsl #3
    d55c:	ldr	r1, [r1, #4]
    d560:	str	r1, [r6, #12]
    d564:	ldr	r1, [pc, #2592]	; df8c <opt_loop+0x1554>
    d568:	add	r1, pc, r1
    d56c:	strb	r8, [r1]
    d570:	b	d50c <opt_loop+0xad4>
    d574:	str	r0, [sl, #204]	; 0xcc
    d578:	b	d5f0 <opt_loop+0xbb8>
    d57c:	ldr	r0, [sl, #204]	; 0xcc
    d580:	b	d2c8 <opt_loop+0x890>
    d584:	cmp	r4, #0
    d588:	beq	d5f8 <opt_loop+0xbc0>
    d58c:	ldr	r1, [r9]
    d590:	ldr	r0, [pc, #2504]	; df60 <opt_loop+0x1528>
    d594:	ldr	r0, [pc, r0]
    d598:	ldr	r0, [r0, r1, lsl #3]
    d59c:	cmp	r0, #0
    d5a0:	beq	d5fc <opt_loop+0xbc4>
    d5a4:	str	r8, [r6]
    d5a8:	ldr	r0, [r9]
    d5ac:	ldr	r1, [pc, #2480]	; df64 <opt_loop+0x152c>
    d5b0:	ldr	r1, [pc, r1]
    d5b4:	add	r0, r1, r0, lsl #3
    d5b8:	ldr	r0, [r0, #4]
    d5bc:	rsb	r1, r0, #0
    d5c0:	mov	r0, #0
    d5c4:	str	r1, [r6, #12]
    d5c8:	b	d600 <opt_loop+0xbc8>
    d5cc:	ldr	r1, [r6, #12]
    d5d0:	mov	r0, r5
    d5d4:	bl	e9fc <F>
    d5d8:	b	d2d0 <opt_loop+0x898>
    d5dc:	ldr	r4, [sp, #20]
    d5e0:	mov	r7, #1
    d5e4:	mov	r0, r5
    d5e8:	bl	e9fc <F>
    d5ec:	str	r0, [r9]
    d5f0:	ldr	r6, [r6, #16]
    d5f4:	b	d090 <opt_loop+0x658>
    d5f8:	ldr	r1, [r9]
    d5fc:	mov	r0, #132	; 0x84
    d600:	mov	r2, #0
    d604:	b	d5e8 <opt_loop+0xbb0>
    d608:	sub	r0, r0, #32
    d60c:	lsr	r0, r0, #4
    d610:	cmp	r0, #6
    d614:	bhi	d5e4 <opt_loop+0xbac>
    d618:	mov	r3, #59	; 0x3b
    d61c:	tst	r3, r7, lsl r0
    d620:	beq	d63c <opt_loop+0xc04>
    d624:	mov	r0, #0
    d628:	mov	r1, #0
    d62c:	mov	r2, #0
    d630:	str	r8, [r6, #12]
    d634:	str	r8, [r6]
    d638:	b	d5d4 <opt_loop+0xb9c>
    d63c:	cmp	r0, #6
    d640:	beq	d518 <opt_loop+0xae0>
    d644:	b	d5e4 <opt_loop+0xbac>
    d648:	cmp	r4, #0
    d64c:	beq	d6c0 <opt_loop+0xc88>
    d650:	ldr	r0, [sp, #16]
    d654:	cmp	r0, #0
    d658:	beq	d694 <opt_loop+0xc5c>
    d65c:	ldr	r0, [sl, #128]	; 0x80
    d660:	cmp	r0, #0
    d664:	bne	d694 <opt_loop+0xc5c>
    d668:	ldr	r0, [sp, #12]
    d66c:	cmp	r0, #0
    d670:	beq	d694 <opt_loop+0xc5c>
    d674:	ldr	r0, [r9]
    d678:	ldr	r1, [sp, #16]
    d67c:	cmp	r0, r1
    d680:	bne	d694 <opt_loop+0xc5c>
    d684:	ldr	r0, [sl, #204]	; 0xcc
    d688:	ldr	r1, [sp, #12]
    d68c:	cmp	r0, r1
    d690:	beq	d6a4 <opt_loop+0xc6c>
    d694:	ldr	r0, [sl, #8]
    d698:	and	r0, r0, #7
    d69c:	cmp	r0, #6
    d6a0:	bne	d6c0 <opt_loop+0xc88>
    d6a4:	ldr	r0, [sl, #4]
    d6a8:	ldr	r9, [pc, #2272]	; df90 <opt_loop+0x1558>
    d6ac:	cmp	r0, #0
    d6b0:	add	r9, pc, r9
    d6b4:	strne	r8, [sl, #4]
    d6b8:	strbne	r8, [r9]
    d6bc:	b	db44 <opt_loop+0x110c>
    d6c0:	ldr	r0, [sl, #4]
    d6c4:	add	r5, sp, #24
    d6c8:	cmp	r0, #0
    d6cc:	beq	d6dc <opt_loop+0xca4>
    d6d0:	mov	ip, #1
    d6d4:	add	r6, sl, #128	; 0x80
    d6d8:	b	d7f0 <opt_loop+0xdb8>
    d6dc:	mov	r0, r5
    d6e0:	mov	r1, #0
    d6e4:	mov	r2, #72	; 0x48
    d6e8:	bl	f40 <memset@plt>
    d6ec:	ldr	r9, [pc, #2208]	; df94 <opt_loop+0x155c>
    d6f0:	add	r6, sl, #128	; 0x80
    d6f4:	add	r9, pc, r9
    d6f8:	b	db04 <opt_loop+0x10cc>
    d6fc:	cmp	r7, #7
    d700:	bne	d728 <opt_loop+0xcf0>
    d704:	mov	r2, #135	; 0x87
    d708:	str	ip, [r1]
    d70c:	str	r2, [r0]
    d710:	ldr	r2, [pc, #2180]	; df9c <opt_loop+0x1564>
    d714:	add	r2, pc, r2
    d718:	strb	r8, [r2]
    d71c:	ldr	r2, [r1]
    d720:	cmp	r2, #0
    d724:	bne	d870 <opt_loop+0xe38>
    d728:	ldrb	r2, [r6, #2]
    d72c:	tst	r2, #2
    d730:	bne	d870 <opt_loop+0xe38>
    d734:	ldr	r3, [r0]
    d738:	mov	r2, r0
    d73c:	cmp	r3, #177	; 0xb1
    d740:	bne	d764 <opt_loop+0xd2c>
    d744:	ldr	r2, [r0, #16]
    d748:	b	d750 <opt_loop+0xd18>
    d74c:	ldr	r2, [r2, #16]
    d750:	cmp	r2, #0
    d754:	beq	d870 <opt_loop+0xe38>
    d758:	ldr	r3, [r2]
    d75c:	cmn	r3, #1
    d760:	beq	d74c <opt_loop+0xd14>
    d764:	cmp	r3, #12
    d768:	bne	d870 <opt_loop+0xe38>
    d76c:	ldr	r3, [r2, #16]
    d770:	b	d778 <opt_loop+0xd40>
    d774:	ldr	r3, [r3, #16]
    d778:	cmp	r3, #0
    d77c:	beq	d870 <opt_loop+0xe38>
    d780:	ldr	r7, [r3]
    d784:	cmn	r7, #1
    d788:	beq	d774 <opt_loop+0xd3c>
    d78c:	cmp	r7, #7
    d790:	bne	d870 <opt_loop+0xe38>
    d794:	ldr	r7, [r3, #16]
    d798:	b	d7a0 <opt_loop+0xd68>
    d79c:	ldr	r7, [r7, #16]
    d7a0:	cmp	r7, #0
    d7a4:	beq	d870 <opt_loop+0xe38>
    d7a8:	ldr	r5, [r7]
    d7ac:	cmn	r5, #1
    d7b0:	beq	d79c <opt_loop+0xd64>
    d7b4:	and	r5, r5, #231	; 0xe7
    d7b8:	cmp	r5, #64	; 0x40
    d7bc:	bne	d870 <opt_loop+0xe38>
    d7c0:	ldr	r5, [r1, #12]
    d7c4:	ldr	r4, [r7, #12]
    d7c8:	mvn	lr, #0
    d7cc:	add	r5, r4, r5
    d7d0:	str	r5, [r7, #12]
    d7d4:	str	lr, [r1]
    d7d8:	str	lr, [r2]
    d7dc:	str	lr, [r3]
    d7e0:	ldr	r1, [pc, #1976]	; dfa0 <opt_loop+0x1568>
    d7e4:	add	r1, pc, r1
    d7e8:	strb	r8, [r1]
    d7ec:	b	d870 <opt_loop+0xe38>
    d7f0:	mov	r2, r0
    d7f4:	mov	r1, r0
    d7f8:	ldr	r3, [r1]
    d7fc:	ldr	r0, [r1, #16]
    d800:	cmn	r3, #1
    d804:	bne	d81c <opt_loop+0xde4>
    d808:	cmp	r0, #0
    d80c:	mov	r1, r0
    d810:	bne	d7f8 <opt_loop+0xdc0>
    d814:	b	d87c <opt_loop+0xe44>
    d818:	ldr	r0, [r0, #16]
    d81c:	cmp	r0, #0
    d820:	beq	d87c <opt_loop+0xe44>
    d824:	ldr	r7, [r0]
    d828:	cmn	r7, #1
    d82c:	beq	d818 <opt_loop+0xde0>
    d830:	cmp	r3, #2
    d834:	bne	d868 <opt_loop+0xe30>
    d838:	cmp	r7, #97	; 0x61
    d83c:	bne	d870 <opt_loop+0xe38>
    d840:	ldr	r2, [r0, #12]
    d844:	ldr	r3, [r1, #12]
    d848:	cmp	r3, r2
    d84c:	bne	d870 <opt_loop+0xe38>
    d850:	ldr	r2, [pc, #1856]	; df98 <opt_loop+0x1560>
    d854:	mov	r7, #7
    d858:	add	r2, pc, r2
    d85c:	strb	r8, [r2]
    d860:	str	r7, [r0]
    d864:	ldr	r3, [r1]
    d868:	cmp	r3, #0
    d86c:	beq	d6fc <opt_loop+0xcc4>
    d870:	cmp	r0, #0
    d874:	bne	d7f0 <opt_loop+0xdb8>
    d878:	mov	r2, #0
    d87c:	ldr	r0, [sl, #8]
    d880:	mov	r7, #1
    d884:	cmp	r0, #21
    d888:	bne	d968 <opt_loop+0xf30>
    d88c:	ldrb	r0, [r6, #2]
    d890:	tst	r0, #1
    d894:	bne	d964 <opt_loop+0xf2c>
    d898:	ldr	r0, [r2]
    d89c:	cmp	r0, #20
    d8a0:	beq	d8ec <opt_loop+0xeb4>
    d8a4:	cmp	r0, #84	; 0x54
    d8a8:	beq	d914 <opt_loop+0xedc>
    d8ac:	cmp	r0, #28
    d8b0:	bne	d964 <opt_loop+0xf2c>
    d8b4:	ldr	r0, [sl, #204]	; 0xcc
    d8b8:	ldr	r1, [pc, #1764]	; dfa4 <opt_loop+0x156c>
    d8bc:	ldr	r1, [pc, r1]
    d8c0:	ldr	r3, [r1, r0, lsl #3]
    d8c4:	cmp	r3, #0
    d8c8:	beq	d958 <opt_loop+0xf20>
    d8cc:	add	r0, r1, r0, lsl #3
    d8d0:	ldr	r1, [sl, #20]
    d8d4:	ldr	r0, [r0, #4]
    d8d8:	add	r0, r1, r0
    d8dc:	str	r0, [sl, #20]
    d8e0:	mvn	r0, #0
    d8e4:	str	r0, [r2]
    d8e8:	b	d904 <opt_loop+0xecc>
    d8ec:	mvn	r0, #0
    d8f0:	str	r0, [r2]
    d8f4:	ldr	r0, [r2, #12]
    d8f8:	ldr	r1, [sl, #20]
    d8fc:	add	r0, r1, r0
    d900:	str	r0, [sl, #20]
    d904:	ldr	r0, [pc, #1696]	; dfac <opt_loop+0x1574>
    d908:	add	r0, pc, r0
    d90c:	strb	r8, [r0]
    d910:	b	d964 <opt_loop+0xf2c>
    d914:	ldr	r0, [sl, #20]
    d918:	cmp	r0, #0
    d91c:	bne	d964 <opt_loop+0xf2c>
    d920:	ldr	r0, [r2, #12]
    d924:	mov	r1, #69	; 0x45
    d928:	str	r1, [sl, #8]
    d92c:	str	r0, [sl, #20]
    d930:	mvn	r0, #0
    d934:	str	r0, [r2]
    d938:	ldr	r0, [pc, #1648]	; dfb0 <opt_loop+0x1578>
    d93c:	add	r0, pc, r0
    d940:	strb	r8, [r0]
    d944:	ldr	r0, [sl, #60]	; 0x3c
    d948:	ldr	r1, [sl, #84]	; 0x54
    d94c:	str	r1, [sl, #60]	; 0x3c
    d950:	str	r0, [sl, #84]	; 0x54
    d954:	b	d964 <opt_loop+0xf2c>
    d958:	ldr	r0, [sl, #20]
    d95c:	cmp	r0, #0
    d960:	beq	db88 <opt_loop+0x1150>
    d964:	ldr	r0, [sl, #8]
    d968:	cmp	r0, #69	; 0x45
    d96c:	bne	d998 <opt_loop+0xf60>
    d970:	ldr	r1, [sl, #20]
    d974:	mov	r0, #69	; 0x45
    d978:	cmn	r1, #1
    d97c:	beq	d990 <opt_loop+0xf58>
    d980:	cmp	r1, #0
    d984:	ldreq	r1, [sl, #84]	; 0x54
    d988:	streq	r1, [sl, #60]	; 0x3c
    d98c:	b	d998 <opt_loop+0xf60>
    d990:	ldr	r1, [sl, #60]	; 0x3c
    d994:	str	r1, [sl, #84]	; 0x54
    d998:	ldr	r1, [pc, #1556]	; dfb4 <opt_loop+0x157c>
    d99c:	tst	r0, #8
    d9a0:	ldr	r1, [pc, r1]
    d9a4:	ldrne	r2, [sl, #204]	; 0xcc
    d9a8:	ldrne	r3, [r1, r2, lsl #3]
    d9ac:	cmpne	r3, #0
    d9b0:	addne	r2, r1, r2, lsl #3
    d9b4:	bicne	r0, r0, #8
    d9b8:	ldrne	r2, [r2, #4]
    d9bc:	strne	r0, [sl, #8]
    d9c0:	strne	r2, [sl, #20]
    d9c4:	tst	r0, #8
    d9c8:	bne	daa8 <opt_loop+0x1070>
    d9cc:	ldr	r2, [r9]
    d9d0:	ldr	r3, [r1, r2, lsl #3]
    d9d4:	cmp	r3, #0
    d9d8:	beq	daa8 <opt_loop+0x1070>
    d9dc:	and	r0, r0, #240	; 0xf0
    d9e0:	sub	r0, r0, #16
    d9e4:	lsr	r3, r0, #4
    d9e8:	cmp	r3, #3
    d9ec:	bhi	df30 <opt_loop+0x14f8>
    d9f0:	add	r0, r1, r2, lsl #3
    d9f4:	ldr	r0, [r0, #4]
    d9f8:	add	r1, pc, #4
    d9fc:	ldr	r2, [r1, r3, lsl #2]
    da00:	add	pc, r1, r2
    da04:	.word	0x00000010
    da08:	.word	0x00000038
    da0c:	.word	0x00000024
    da10:	.word	0x00000068
    da14:	ldr	r1, [sl, #20]
    da18:	sub	r0, r0, r1
    da1c:	clz	r0, r0
    da20:	lsr	r0, r0, #5
    da24:	b	da74 <opt_loop+0x103c>
    da28:	ldr	r1, [sl, #20]
    da2c:	cmp	r0, r1
    da30:	mov	r0, #0
    da34:	movwcs	r0, #1
    da38:	b	da74 <opt_loop+0x103c>
    da3c:	ldr	r1, [sl, #20]
    da40:	cmp	r0, r1
    da44:	mov	r0, #0
    da48:	movwhi	r0, #1
    da4c:	b	da74 <opt_loop+0x103c>
    da50:	.word	0x00023b08
    da54:	.word	0x00023f40
    da58:	.word	0x00023af4
    da5c:	.word	0x00023ad0
    da60:	.word	0x00023ac4
    da64:	.word	0x00023ac8
    da68:	.word	0x00023a90
    da6c:	ldr	r1, [sl, #20]
    da70:	and	r0, r1, r0
    da74:	mov	r3, sl
    da78:	ldr	r5, [pc, #1336]	; dfb8 <opt_loop+0x1580>
    da7c:	ldr	r1, [r3, #60]!	; 0x3c
    da80:	add	r5, pc, r5
    da84:	mov	r2, r3
    da88:	ldr	r7, [r2, #24]!
    da8c:	cmp	r7, r1
    da90:	strbne	r8, [r5]
    da94:	cmp	r0, #0
    da98:	moveq	r1, r7
    da9c:	moveq	r2, r3
    daa0:	mov	r7, #1
    daa4:	str	r1, [r2]
    daa8:	ldr	r5, [sl, #4]
    daac:	add	r0, sp, #24
    dab0:	mov	r1, #0
    dab4:	mov	r2, #72	; 0x48
    dab8:	bl	f40 <memset@plt>
    dabc:	cmp	r5, #0
    dac0:	beq	daf8 <opt_loop+0x10c0>
    dac4:	add	r4, sp, #24
    dac8:	mov	r0, r5
    dacc:	mov	r1, r4
    dad0:	bl	ebd8 <deadstmt>
    dad4:	ldr	r5, [r5, #16]
    dad8:	cmp	r5, #0
    dadc:	bne	dac8 <opt_loop+0x1090>
    dae0:	ldr	r9, [pc, #1240]	; dfc0 <opt_loop+0x1588>
    dae4:	mov	r5, r4
    dae8:	add	r9, pc, r9
    daec:	b	db04 <opt_loop+0x10cc>
    daf0:	.word	0x00023e8c
    daf4:	.word	0x00023a18
    daf8:	ldr	r9, [pc, #1212]	; dfbc <opt_loop+0x1584>
    dafc:	add	r5, sp, #24
    db00:	add	r9, pc, r9
    db04:	add	r0, sl, #8
    db08:	mov	r1, r5
    db0c:	bl	ebd8 <deadstmt>
    db10:	ldr	r4, [sp, #20]
    db14:	mov	r0, #0
    db18:	ldr	r1, [r5, r0, lsl #2]
    db1c:	cmp	r1, #0
    db20:	beq	db38 <opt_loop+0x1100>
    db24:	ldr	r2, [r6]
    db28:	tst	r2, r7, lsl r0
    db2c:	mvneq	r2, #0
    db30:	streq	r2, [r1]
    db34:	strbeq	r8, [r9]
    db38:	add	r0, r0, #1
    db3c:	cmp	r0, #18
    db40:	bne	db18 <opt_loop+0x10e0>
    db44:	ldr	r1, [sl, #8]
    db48:	tst	r1, #8
    db4c:	bne	db68 <opt_loop+0x1130>
    db50:	ldr	r1, [sl, #20]
    db54:	mov	r0, #0
    db58:	mov	r2, #0
    db5c:	bl	e9fc <F>
    db60:	ldr	r1, [sl, #8]
    db64:	b	db6c <opt_loop+0x1134>
    db68:	ldr	r0, [sl, #204]	; 0xcc
    db6c:	str	r1, [sl, #52]	; 0x34
    db70:	str	r0, [sl, #132]	; 0x84
    db74:	rsb	r0, r1, #0
    db78:	str	r0, [sl, #76]	; 0x4c
    db7c:	ldr	sl, [sl, #100]	; 0x64
    db80:	b	cffc <opt_loop+0x5c4>
    db84:	.word	0x000239e0
    db88:	mvn	r0, #0
    db8c:	str	r0, [r2]
    db90:	mov	r0, #29
    db94:	str	r0, [sl, #8]
    db98:	ldr	r1, [pc, #1032]	; dfa8 <opt_loop+0x1570>
    db9c:	add	r1, pc, r1
    dba0:	strb	r8, [r1]
    dba4:	b	d998 <opt_loop+0xf60>
    dba8:	ldr	r1, [sp, #8]
    dbac:	sub	r0, r1, #1
    dbb0:	cmp	r1, #0
    dbb4:	mov	r1, r0
    dbb8:	bgt	cfec <opt_loop+0x5b4>
    dbbc:	cmp	r4, #0
    dbc0:	bne	df10 <opt_loop+0x14d8>
    dbc4:	ldr	r0, [sp, #4]
    dbc8:	cmp	r0, #1
    dbcc:	blt	df08 <opt_loop+0x14d0>
    dbd0:	ldr	r6, [sp]
    dbd4:	mov	r4, #1
    dbd8:	ldr	r0, [pc, #996]	; dfc4 <opt_loop+0x158c>
    dbdc:	ldr	r0, [pc, r0]
    dbe0:	ldr	r5, [r0, r4, lsl #2]
    dbe4:	b	dc0c <opt_loop+0x11d4>
    dbe8:	.word	0x00023980
    dbec:	.word	0x00023980
    dbf0:	.word	0x00023970
    dbf4:	.word	0x00023d90
    dbf8:	add	r0, r5, #48	; 0x30
    dbfc:	bl	e7cc <opt_j>
    dc00:	add	r0, r5, #72	; 0x48
    dc04:	bl	e7cc <opt_j>
    dc08:	ldr	r5, [r5, #100]	; 0x64
    dc0c:	cmp	r5, #0
    dc10:	bne	dbf8 <opt_loop+0x11c0>
    dc14:	ldr	r1, [sp, #4]
    dc18:	add	r0, r4, #1
    dc1c:	cmp	r4, r1
    dc20:	mov	r4, r0
    dc24:	bne	dbd8 <opt_loop+0x11a0>
    dc28:	mov	r0, r6
    dc2c:	bl	e728 <find_inedges>
    dc30:	ldr	r0, [pc, #912]	; dfc8 <opt_loop+0x1590>
    dc34:	mov	r1, #1
    dc38:	ldr	r0, [pc, r0]
    dc3c:	str	r0, [sp, #12]
    dc40:	ldr	r0, [sp, #12]
    dc44:	str	r1, [sp, #16]
    dc48:	ldr	sl, [r0, r1, lsl #2]
    dc4c:	b	dee4 <opt_loop+0x14ac>
    dc50:	.word	0x0002391c
    dc54:	ldr	r3, [sl, #112]	; 0x70
    dc58:	cmp	r3, #0
    dc5c:	beq	dee0 <opt_loop+0x14a8>
    dc60:	ldr	r0, [r3, #16]
    dc64:	mov	r1, r3
    dc68:	ldr	r7, [r0, #200]	; 0xc8
    dc6c:	ldr	r1, [r1, #20]
    dc70:	cmp	r1, #0
    dc74:	beq	dc94 <opt_loop+0x125c>
    dc78:	ldr	r2, [r1, #16]
    dc7c:	ldr	r2, [r2, #200]	; 0xc8
    dc80:	cmp	r7, r2
    dc84:	beq	dc6c <opt_loop+0x1234>
    dc88:	b	dd68 <opt_loop+0x1330>
    dc8c:	.word	0x000238e4
    dc90:	.word	0x00023cb8
    dc94:	ldr	r1, [r0, #60]!	; 0x3c
    dc98:	mov	r4, #1
    dc9c:	cmp	r1, sl
    dca0:	addne	r0, r0, #24
    dca4:	mov	ip, r4
    dca8:	ldr	r4, [r0]
    dcac:	cmp	r4, #0
    dcb0:	beq	dd60 <opt_loop+0x1328>
    dcb4:	mov	r9, r0
    dcb8:	ldr	r1, [r4, #60]	; 0x3c
    dcbc:	ldr	r0, [sl, #60]	; 0x3c
    dcc0:	cmp	r1, r0
    dcc4:	bne	dd60 <opt_loop+0x1328>
    dcc8:	ldr	r0, [sl]
    dccc:	ldr	r6, [r4, #104]	; 0x68
    dcd0:	lsr	r2, r0, #5
    dcd4:	and	r5, r0, #31
    dcd8:	ldr	r0, [r6, r2, lsl #2]
    dcdc:	mov	r6, #1
    dce0:	tst	r0, r6, lsl r5
    dce4:	beq	dd60 <opt_loop+0x1328>
    dce8:	ldr	r6, [r4, #200]	; 0xc8
    dcec:	add	r0, r4, #84	; 0x54
    dcf0:	mov	r4, #0
    dcf4:	cmp	r6, r7
    dcf8:	beq	dca4 <opt_loop+0x126c>
    dcfc:	mov	r6, #1
    dd00:	lsl	r5, r6, r5
    dd04:	ldr	r4, [r0]
    dd08:	cmp	r4, #0
    dd0c:	beq	dd60 <opt_loop+0x1328>
    dd10:	mov	lr, r0
    dd14:	ldr	r0, [r4, #60]	; 0x3c
    dd18:	cmp	r0, r1
    dd1c:	bne	dd60 <opt_loop+0x1328>
    dd20:	ldr	r0, [r4, #104]	; 0x68
    dd24:	ldr	r0, [r0, r2, lsl #2]
    dd28:	tst	r0, r5
    dd2c:	beq	dd60 <opt_loop+0x1328>
    dd30:	ldr	r6, [r4, #200]	; 0xc8
    dd34:	add	r0, r4, #84	; 0x54
    dd38:	cmp	r6, r7
    dd3c:	bne	dd04 <opt_loop+0x12cc>
    dd40:	ldr	r1, [r0]
    dd44:	cmp	ip, #0
    dd48:	str	r1, [lr]
    dd4c:	ldr	r1, [r9]
    dd50:	str	r1, [r0]
    dd54:	beq	debc <opt_loop+0x1484>
    dd58:	ldr	r0, [sl, #112]	; 0x70
    dd5c:	b	ddb4 <opt_loop+0x137c>
    dd60:	ldr	r9, [pc, #612]	; dfcc <opt_loop+0x1594>
    dd64:	add	r9, pc, r9
    dd68:	cmp	r3, #0
    dd6c:	beq	dee0 <opt_loop+0x14a8>
    dd70:	ldr	r0, [r3, #16]
    dd74:	ldr	r7, [r0, #200]	; 0xc8
    dd78:	ldr	r3, [r3, #20]
    dd7c:	cmp	r3, #0
    dd80:	beq	ddc0 <opt_loop+0x1388>
    dd84:	ldr	r1, [r3, #16]
    dd88:	ldr	r1, [r1, #200]	; 0xc8
    dd8c:	cmp	r7, r1
    dd90:	beq	dd78 <opt_loop+0x1340>
    dd94:	b	dee0 <opt_loop+0x14a8>
    dd98:	ldr	r1, [r0, #16]
    dd9c:	ldr	r2, [r1, #60]	; 0x3c
    dda0:	cmp	r2, sl
    dda4:	mov	r2, #84	; 0x54
    dda8:	movweq	r2, #60	; 0x3c
    ddac:	str	r4, [r1, r2]
    ddb0:	ldr	r0, [r0, #20]
    ddb4:	cmp	r0, #0
    ddb8:	bne	dd98 <opt_loop+0x1360>
    ddbc:	b	dec0 <opt_loop+0x1488>
    ddc0:	ldr	r1, [r0, #60]!	; 0x3c
    ddc4:	mov	r2, #1
    ddc8:	cmp	r1, sl
    ddcc:	addne	r0, r0, #24
    ddd0:	mov	lr, r2
    ddd4:	ldr	r2, [r0]
    ddd8:	cmp	r2, #0
    dddc:	beq	dee0 <opt_loop+0x14a8>
    dde0:	mov	r3, r0
    dde4:	ldr	r4, [r2, #84]	; 0x54
    dde8:	ldr	r0, [sl, #84]	; 0x54
    ddec:	cmp	r4, r0
    ddf0:	bne	dee0 <opt_loop+0x14a8>
    ddf4:	ldr	r0, [sl]
    ddf8:	ldr	r6, [r2, #104]	; 0x68
    ddfc:	lsr	r1, r0, #5
    de00:	and	r5, r0, #31
    de04:	ldr	r0, [r6, r1, lsl #2]
    de08:	mov	r6, #1
    de0c:	tst	r0, r6, lsl r5
    de10:	beq	dee0 <opt_loop+0x14a8>
    de14:	ldr	r6, [r2, #200]	; 0xc8
    de18:	add	r0, r2, #60	; 0x3c
    de1c:	mov	r2, #0
    de20:	cmp	r6, r7
    de24:	beq	ddd0 <opt_loop+0x1398>
    de28:	mov	r2, #1
    de2c:	lsl	r2, r2, r5
    de30:	ldr	r5, [r0]
    de34:	cmp	r5, #0
    de38:	beq	dee0 <opt_loop+0x14a8>
    de3c:	mov	ip, r0
    de40:	ldr	r0, [r5, #84]	; 0x54
    de44:	cmp	r0, r4
    de48:	bne	dee0 <opt_loop+0x14a8>
    de4c:	ldr	r0, [r5, #104]	; 0x68
    de50:	ldr	r0, [r0, r1, lsl #2]
    de54:	tst	r0, r2
    de58:	beq	dee0 <opt_loop+0x14a8>
    de5c:	ldr	r6, [r5, #200]	; 0xc8
    de60:	add	r0, r5, #60	; 0x3c
    de64:	cmp	r6, r7
    de68:	bne	de30 <opt_loop+0x13f8>
    de6c:	ldr	r1, [r0]
    de70:	cmp	lr, #0
    de74:	str	r1, [ip]
    de78:	ldr	r1, [r3]
    de7c:	str	r1, [r0]
    de80:	beq	ded8 <opt_loop+0x14a0>
    de84:	ldr	r0, [sl, #112]	; 0x70
    de88:	b	dea8 <opt_loop+0x1470>
    de8c:	ldr	r1, [r0, #16]
    de90:	ldr	r2, [r1, #60]	; 0x3c
    de94:	cmp	r2, sl
    de98:	mov	r2, #84	; 0x54
    de9c:	movweq	r2, #60	; 0x3c
    dea0:	str	r5, [r1, r2]
    dea4:	ldr	r0, [r0, #20]
    dea8:	cmp	r0, #0
    deac:	bne	de8c <opt_loop+0x1454>
    deb0:	b	dedc <opt_loop+0x14a4>
    deb4:	.word	0x000236c4
    deb8:	.word	0x000236c0
    debc:	str	r4, [r9]
    dec0:	ldr	r9, [pc, #264]	; dfd0 <opt_loop+0x1598>
    dec4:	add	r9, pc, r9
    dec8:	strb	r8, [r9]
    decc:	ldr	r3, [sl, #112]	; 0x70
    ded0:	b	dd68 <opt_loop+0x1330>
    ded4:	.word	0x00023688
    ded8:	str	r5, [r3]
    dedc:	strb	r8, [r9]
    dee0:	ldr	sl, [sl, #100]	; 0x64
    dee4:	cmp	sl, #0
    dee8:	bne	dc54 <opt_loop+0x121c>
    deec:	ldr	r2, [sp, #16]
    def0:	ldr	r1, [sp, #4]
    def4:	add	r0, r2, #1
    def8:	cmp	r2, r1
    defc:	mov	r1, r0
    df00:	bne	dc40 <opt_loop+0x1208>
    df04:	b	df10 <opt_loop+0x14d8>
    df08:	ldr	r0, [sp]
    df0c:	bl	e728 <find_inedges>
    df10:	ldrb	r0, [r9]
    df14:	mov	r1, #1
    df18:	cmp	r0, #1
    df1c:	mov	r0, r9
    df20:	ldr	r9, [sp]
    df24:	subeq	sp, fp, #28
    df28:	popeq	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    df2c:	b	ca60 <opt_loop+0x28>
    df30:	bl	fc4 <abort@plt>
    df34:	.word	0x00023a70
    df38:	.word	0x0002360c
    df3c:	.word	0x00023a38
    df40:	.word	0x00023a2c
    df44:	.word	0x00023a28
    df48:	.word	0x000235e8
    df4c:	.word	0x000235d4
    df50:	.word	0x00023584
    df54:	.word	0x000239bc
    df58:	.word	0x00023774
    df5c:	.word	0x00023754
    df60:	.word	0x0002342c
    df64:	.word	0x00023410
    df68:	.word	0x000236b4
    df6c:	.word	0x00023660
    df70:	.word	0x0002355c
    df74:	.word	0x000230ec
    df78:	.word	0x000238b8
    df7c:	.word	0x000238a0
    df80:	.word	0x000232d4
    df84:	.word	0x00023484
    df88:	.word	0x0002346c
    df8c:	.word	0x00022ffc
    df90:	.word	0x00022eb4
    df94:	.word	0x00022e70
    df98:	.word	0x00022d0c
    df9c:	.word	0x00022e50
    dfa0:	.word	0x00022d80
    dfa4:	.word	0x00023104
    dfa8:	.word	0x000229c8
    dfac:	.word	0x00022c5c
    dfb0:	.word	0x00022c28
    dfb4:	.word	0x00023020
    dfb8:	.word	0x00022ae4
    dfbc:	.word	0x00022a64
    dfc0:	.word	0x00022a7c
    dfc4:	.word	0x00022dd0
    dfc8:	.word	0x00022d74
    dfcc:	.word	0x00022800
    dfd0:	.word	0x000226a0

0000dfd4 <sf_icode_to_fcode>:
    dfd4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    dfd8:	add	fp, sp, #28
    dfdc:	sub	sp, sp, #4
    dfe0:	ldr	r5, [pc, #220]	; e0c4 <sf_icode_to_fcode+0xf0>
    dfe4:	mov	sl, r0
    dfe8:	mov	r8, r1
    dfec:	ldr	r5, [pc, r5]
    dff0:	ldr	r9, [pc, #208]	; e0c8 <sf_icode_to_fcode+0xf4>
    dff4:	add	r0, r5, #1
    dff8:	add	r9, pc, r9
    dffc:	str	r0, [r9]
    e000:	mov	r0, sl
    e004:	bl	e0dc <count_stmts>
    e008:	lsl	r4, r0, #3
    e00c:	mov	r7, r0
    e010:	str	r0, [r8]
    e014:	mov	r0, r4
    e018:	bl	ed4 <malloc@plt>
    e01c:	cmp	r0, #0
    e020:	beq	e0ac <sf_icode_to_fcode+0xd8>
    e024:	mov	r6, r0
    e028:	mov	r0, r6
    e02c:	mov	r1, #0
    e030:	mov	r2, r4
    e034:	bl	f40 <memset@plt>
    e038:	ldr	r0, [pc, #140]	; e0cc <sf_icode_to_fcode+0xf8>
    e03c:	add	r0, pc, r0
    e040:	str	r6, [r0]
    e044:	add	r0, r6, r7, lsl #3
    e048:	ldr	r1, [pc, #128]	; e0d0 <sf_icode_to_fcode+0xfc>
    e04c:	add	r1, pc, r1
    e050:	str	r0, [r1]
    e054:	add	r0, r5, #2
    e058:	str	r0, [r9]
    e05c:	mov	r0, sl
    e060:	bl	e168 <convert_code_r>
    e064:	cmp	r0, #0
    e068:	bne	e0b8 <sf_icode_to_fcode+0xe4>
    e06c:	mov	r0, r6
    e070:	bl	e5c <free@plt>
    e074:	ldr	r5, [pc, #88]	; e0d4 <sf_icode_to_fcode+0x100>
    e078:	ldr	r5, [pc, r5]
    e07c:	add	r0, r5, #1
    e080:	str	r0, [r9]
    e084:	mov	r0, sl
    e088:	bl	e0dc <count_stmts>
    e08c:	lsl	r4, r0, #3
    e090:	mov	r7, r0
    e094:	str	r0, [r8]
    e098:	mov	r0, r4
    e09c:	bl	ed4 <malloc@plt>
    e0a0:	mov	r6, r0
    e0a4:	cmp	r0, #0
    e0a8:	bne	e028 <sf_icode_to_fcode+0x54>
    e0ac:	ldr	r0, [pc, #36]	; e0d8 <sf_icode_to_fcode+0x104>
    e0b0:	add	r0, pc, r0
    e0b4:	bl	2028 <sf_bpf_error>
    e0b8:	mov	r0, r6
    e0bc:	sub	sp, fp, #28
    e0c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    e0c4:	.word	0x0002256c
    e0c8:	.word	0x00022560
    e0cc:	.word	0x00022520
    e0d0:	.word	0x00022514
    e0d4:	.word	0x000224e0
    e0d8:	.word	0x00005e90

0000e0dc <count_stmts>:
    e0dc:	push	{r4, r5, fp, lr}
    e0e0:	add	fp, sp, #8
    e0e4:	mov	r4, r0
    e0e8:	mov	r0, #0
    e0ec:	cmp	r4, #0
    e0f0:	beq	e160 <count_stmts+0x84>
    e0f4:	ldr	r2, [r4, #24]
    e0f8:	ldr	r1, [pc, #100]	; e164 <count_stmts+0x88>
    e0fc:	ldr	r1, [pc, r1]
    e100:	cmp	r2, r1
    e104:	popeq	{r4, r5, fp, pc}
    e108:	str	r1, [r4, #24]
    e10c:	ldr	r0, [r4, #60]	; 0x3c
    e110:	bl	e0dc <count_stmts>
    e114:	mov	r5, r0
    e118:	ldr	r0, [r4, #84]	; 0x54
    e11c:	bl	e0dc <count_stmts>
    e120:	ldr	r2, [r4, #4]
    e124:	mov	r1, #0
    e128:	b	e13c <count_stmts+0x60>
    e12c:	ldr	r3, [r2]
    e130:	ldr	r2, [r2, #16]
    e134:	cmn	r3, #1
    e138:	addne	r1, r1, #1
    e13c:	cmp	r2, #0
    e140:	bne	e12c <count_stmts+0x50>
    e144:	add	r0, r5, r0
    e148:	ldr	r2, [r4, #32]
    e14c:	add	r0, r0, r1
    e150:	ldr	r1, [r4, #28]
    e154:	add	r0, r0, r1
    e158:	add	r0, r0, r2
    e15c:	add	r0, r0, #1
    e160:	pop	{r4, r5, fp, pc}
    e164:	.word	0x0002245c

0000e168 <convert_code_r>:
    e168:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    e16c:	add	fp, sp, #28
    e170:	sub	sp, sp, #4
    e174:	cmp	r0, #0
    e178:	beq	e194 <convert_code_r+0x2c>
    e17c:	mov	r8, r0
    e180:	ldr	r1, [r0, #24]
    e184:	ldr	r0, [pc, #796]	; e4a8 <convert_code_r+0x340>
    e188:	ldr	r0, [pc, r0]
    e18c:	cmp	r1, r0
    e190:	bne	e1a4 <convert_code_r+0x3c>
    e194:	mov	r5, #1
    e198:	mov	r0, r5
    e19c:	sub	sp, fp, #28
    e1a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    e1a4:	str	r0, [r8, #24]
    e1a8:	ldr	r0, [r8, #84]	; 0x54
    e1ac:	bl	e168 <convert_code_r>
    e1b0:	mov	r5, #0
    e1b4:	cmp	r0, #0
    e1b8:	beq	e198 <convert_code_r+0x30>
    e1bc:	ldr	r0, [r8, #60]	; 0x3c
    e1c0:	bl	e168 <convert_code_r>
    e1c4:	cmp	r0, #0
    e1c8:	beq	e198 <convert_code_r+0x30>
    e1cc:	ldr	r7, [r8, #4]
    e1d0:	mov	r0, #0
    e1d4:	mov	sl, #0
    e1d8:	cmp	r7, #0
    e1dc:	beq	e200 <convert_code_r+0x98>
    e1e0:	mov	sl, #0
    e1e4:	mov	r1, r7
    e1e8:	ldr	r2, [r1]
    e1ec:	ldr	r1, [r1, #16]
    e1f0:	cmn	r2, #1
    e1f4:	addne	sl, sl, #1
    e1f8:	cmp	r1, #0
    e1fc:	bne	e1e8 <convert_code_r+0x80>
    e200:	ldr	r1, [r8, #28]
    e204:	ldr	r2, [r8, #32]
    e208:	cmp	sl, #0
    e20c:	add	r1, sl, r1
    e210:	add	r1, r1, r2
    e214:	ldr	r2, [pc, #656]	; e4ac <convert_code_r+0x344>
    e218:	add	r1, r1, #1
    e21c:	ldr	r2, [pc, r2]
    e220:	sub	r9, r2, r1, lsl #3
    e224:	ldr	r1, [pc, #644]	; e4b0 <convert_code_r+0x348>
    e228:	add	r1, pc, r1
    e22c:	str	r9, [r1]
    e230:	ldr	r1, [pc, #636]	; e4b4 <convert_code_r+0x34c>
    e234:	ldr	r1, [pc, r1]
    e238:	sub	r1, r9, r1
    e23c:	asr	r1, r1, #3
    e240:	str	r1, [r8, #40]	; 0x28
    e244:	beq	e288 <convert_code_r+0x120>
    e248:	mov	r0, sl
    e24c:	mov	r1, #4
    e250:	bl	dfc <calloc@plt>
    e254:	cmp	r0, #0
    e258:	beq	e49c <convert_code_r+0x334>
    e25c:	cmp	r7, #0
    e260:	beq	e288 <convert_code_r+0x120>
    e264:	mov	r1, #0
    e268:	mov	r2, r7
    e26c:	str	r2, [r0, r1, lsl #2]
    e270:	add	r1, r1, #1
    e274:	cmp	r1, sl
    e278:	bcs	e288 <convert_code_r+0x120>
    e27c:	ldr	r2, [r2, #16]
    e280:	cmp	r2, #0
    e284:	bne	e26c <convert_code_r+0x104>
    e288:	cmp	r7, #0
    e28c:	beq	e388 <convert_code_r+0x220>
    e290:	sub	ip, sl, #2
    e294:	mov	r2, #0
    e298:	ldr	r1, [r7]
    e29c:	cmn	r1, #1
    e2a0:	beq	e2c8 <convert_code_r+0x160>
    e2a4:	strh	r1, [r9]
    e2a8:	cmp	r2, ip
    e2ac:	ldr	r1, [r7, #12]
    e2b0:	str	r1, [r9, #4]
    e2b4:	ldrne	r1, [r7]
    e2b8:	cmpne	r1, #5
    e2bc:	bne	e2d8 <convert_code_r+0x170>
    e2c0:	add	r2, r2, #1
    e2c4:	add	r9, r9, #8
    e2c8:	ldr	r7, [r7, #16]
    e2cc:	cmp	r7, #0
    e2d0:	bne	e298 <convert_code_r+0x130>
    e2d4:	b	e388 <convert_code_r+0x220>
    e2d8:	and	r1, r1, #7
    e2dc:	cmp	r1, #5
    e2e0:	bne	e2c0 <convert_code_r+0x158>
    e2e4:	ldr	r5, [r7, #4]
    e2e8:	cmp	r5, #0
    e2ec:	ldrne	r1, [r7, #8]
    e2f0:	cmpne	r1, #0
    e2f4:	beq	e3f8 <convert_code_r+0x290>
    e2f8:	cmp	sl, #1
    e2fc:	blt	e374 <convert_code_r+0x20c>
    e300:	eor	lr, r2, #255	; 0xff
    e304:	mov	r1, #0
    e308:	mov	r6, #0
    e30c:	mov	r4, #0
    e310:	b	e318 <convert_code_r+0x1b0>
    e314:	ldr	r5, [r7, #4]
    e318:	ldr	r3, [r0, r4, lsl #2]
    e31c:	cmp	r3, r5
    e320:	bne	e33c <convert_code_r+0x1d4>
    e324:	cmp	r6, #0
    e328:	bne	e488 <convert_code_r+0x320>
    e32c:	add	r3, lr, r4
    e330:	mov	r6, #1
    e334:	strb	r3, [r9, #2]
    e338:	ldr	r3, [r0, r4, lsl #2]
    e33c:	ldr	r5, [r7, #8]
    e340:	cmp	r3, r5
    e344:	bne	e35c <convert_code_r+0x1f4>
    e348:	cmp	r1, #0
    e34c:	bne	e488 <convert_code_r+0x320>
    e350:	add	r1, lr, r4
    e354:	strb	r1, [r9, #3]
    e358:	mov	r1, #1
    e35c:	add	r4, r4, #1
    e360:	cmp	r4, sl
    e364:	blt	e314 <convert_code_r+0x1ac>
    e368:	cmp	r6, #0
    e36c:	cmpne	r1, #0
    e370:	bne	e2c0 <convert_code_r+0x158>
    e374:	ldr	r0, [pc, #336]	; e4cc <convert_code_r+0x364>
    e378:	ldr	r1, [pc, #336]	; e4d0 <convert_code_r+0x368>
    e37c:	add	r0, pc, r0
    e380:	add	r1, pc, r1
    e384:	bl	2028 <sf_bpf_error>
    e388:	cmp	r0, #0
    e38c:	beq	e394 <convert_code_r+0x22c>
    e390:	bl	e5c <free@plt>
    e394:	ldr	r0, [r8, #8]
    e398:	strh	r0, [r9]
    e39c:	ldr	r0, [r8, #20]
    e3a0:	str	r0, [r9, #4]
    e3a4:	ldr	r0, [r8, #60]	; 0x3c
    e3a8:	cmp	r0, #0
    e3ac:	beq	e194 <convert_code_r+0x2c>
    e3b0:	ldr	r1, [r8, #40]	; 0x28
    e3b4:	ldr	r0, [r0, #40]	; 0x28
    e3b8:	add	r1, r1, sl
    e3bc:	mvn	r1, r1
    e3c0:	add	r0, r0, r1
    e3c4:	cmp	r0, #256	; 0x100
    e3c8:	bcc	e40c <convert_code_r+0x2a4>
    e3cc:	ldr	r1, [r8, #28]
    e3d0:	cmp	r1, #0
    e3d4:	beq	e468 <convert_code_r+0x300>
    e3d8:	mov	r1, #5
    e3dc:	sub	r0, r0, #1
    e3e0:	strh	r1, [r9, #8]
    e3e4:	mov	r1, #0
    e3e8:	strb	r1, [r9, #2]
    e3ec:	str	r0, [r9, #12]
    e3f0:	mov	r0, #1
    e3f4:	b	e414 <convert_code_r+0x2ac>
    e3f8:	ldr	r0, [pc, #192]	; e4c0 <convert_code_r+0x358>
    e3fc:	ldr	r1, [pc, #192]	; e4c4 <convert_code_r+0x35c>
    e400:	add	r0, pc, r0
    e404:	add	r1, pc, r1
    e408:	bl	2028 <sf_bpf_error>
    e40c:	strb	r0, [r9, #2]
    e410:	mov	r0, #0
    e414:	ldr	r2, [r8, #84]	; 0x54
    e418:	ldr	r1, [r8, #40]	; 0x28
    e41c:	ldr	r2, [r2, #40]	; 0x28
    e420:	add	r1, r1, sl
    e424:	mvn	r1, r1
    e428:	add	r1, r2, r1
    e42c:	cmp	r1, #256	; 0x100
    e430:	bcc	e460 <convert_code_r+0x2f8>
    e434:	ldr	r2, [r8, #32]
    e438:	cmp	r2, #0
    e43c:	beq	e478 <convert_code_r+0x310>
    e440:	strb	r0, [r9, #3]
    e444:	add	r0, r0, #1
    e448:	mov	r3, #5
    e44c:	lsl	r2, r0, #3
    e450:	sub	r0, r1, r0
    e454:	strh	r3, [r9, r2]!
    e458:	str	r0, [r9, #4]
    e45c:	b	e194 <convert_code_r+0x2c>
    e460:	strb	r1, [r9, #3]
    e464:	b	e194 <convert_code_r+0x2c>
    e468:	mov	r0, #1
    e46c:	mov	r5, #0
    e470:	str	r0, [r8, #28]
    e474:	b	e198 <convert_code_r+0x30>
    e478:	mov	r0, #1
    e47c:	mov	r5, #0
    e480:	str	r0, [r8, #32]
    e484:	b	e198 <convert_code_r+0x30>
    e488:	ldr	r0, [pc, #40]	; e4b8 <convert_code_r+0x350>
    e48c:	ldr	r1, [pc, #40]	; e4bc <convert_code_r+0x354>
    e490:	add	r0, pc, r0
    e494:	add	r1, pc, r1
    e498:	bl	2028 <sf_bpf_error>
    e49c:	ldr	r0, [pc, #36]	; e4c8 <convert_code_r+0x360>
    e4a0:	add	r0, pc, r0
    e4a4:	bl	2028 <sf_bpf_error>
    e4a8:	.word	0x000223d0
    e4ac:	.word	0x00022344
    e4b0:	.word	0x00022338
    e4b4:	.word	0x00022328
    e4b8:	.word	0x00005ad8
    e4bc:	.word	0x00005b10
    e4c0:	.word	0x00005b68
    e4c4:	.word	0x00005b8d
    e4c8:	.word	0x00005ab8
    e4cc:	.word	0x00005bec
    e4d0:	.word	0x00005c35

0000e4d4 <find_levels_r>:
    e4d4:	push	{r4, sl, fp, lr}
    e4d8:	add	fp, sp, #8
    e4dc:	mov	r4, r0
    e4e0:	ldr	r1, [r0, #24]
    e4e4:	ldr	r0, [pc, #100]	; e550 <find_levels_r+0x7c>
    e4e8:	ldr	r0, [pc, r0]
    e4ec:	cmp	r1, r0
    e4f0:	popeq	{r4, sl, fp, pc}
    e4f4:	mov	r1, #0
    e4f8:	str	r1, [r4, #100]	; 0x64
    e4fc:	str	r0, [r4, #24]
    e500:	ldr	r0, [r4, #60]	; 0x3c
    e504:	cmp	r0, #0
    e508:	beq	e534 <find_levels_r+0x60>
    e50c:	bl	e4d4 <find_levels_r>
    e510:	ldr	r0, [r4, #84]	; 0x54
    e514:	bl	e4d4 <find_levels_r>
    e518:	ldr	r0, [r4, #60]	; 0x3c
    e51c:	ldr	r1, [r4, #84]	; 0x54
    e520:	ldr	r0, [r0, #36]	; 0x24
    e524:	ldr	r1, [r1, #36]	; 0x24
    e528:	cmp	r0, r1
    e52c:	movgt	r1, r0
    e530:	add	r1, r1, #1
    e534:	str	r1, [r4, #36]	; 0x24
    e538:	ldr	r0, [pc, #20]	; e554 <find_levels_r+0x80>
    e53c:	ldr	r0, [pc, r0]
    e540:	ldr	r2, [r0, r1, lsl #2]
    e544:	str	r2, [r4, #100]	; 0x64
    e548:	str	r4, [r0, r1, lsl #2]
    e54c:	pop	{r4, sl, fp, pc}
    e550:	.word	0x00022070
    e554:	.word	0x00022470

0000e558 <atomuse>:
    e558:	ldr	r2, [r0]
    e55c:	mov	r1, r0
    e560:	mvn	r0, #0
    e564:	cmn	r2, #1
    e568:	bxeq	lr
    e56c:	and	r3, r2, #7
    e570:	sub	r3, r3, #2
    e574:	cmp	r3, #5
    e578:	bhi	e5b4 <atomuse+0x5c>
    e57c:	add	r1, pc, #8
    e580:	mov	r0, #16
    e584:	ldr	r3, [r1, r3, lsl #2]
    e588:	add	pc, r1, r3
    e58c:	.word	0x00000040
    e590:	.word	0x00000044
    e594:	.word	0x00000018
    e598:	.word	0x00000018
    e59c:	.word	0x0000004c
    e5a0:	.word	0x00000068
    e5a4:	mov	r0, #18
    e5a8:	tst	r2, #8
    e5ac:	movweq	r0, #16
    e5b0:	bx	lr
    e5b4:	and	r2, r2, #224	; 0xe0
    e5b8:	cmp	r2, #64	; 0x40
    e5bc:	beq	e5d0 <atomuse+0x78>
    e5c0:	cmp	r2, #96	; 0x60
    e5c4:	ldreq	r0, [r1, #12]
    e5c8:	bxeq	lr
    e5cc:	bx	lr
    e5d0:	mov	r0, #17
    e5d4:	bx	lr
    e5d8:	and	r1, r2, #24
    e5dc:	mvn	r0, #0
    e5e0:	cmp	r1, #8
    e5e4:	movweq	r0, #17
    e5e8:	cmp	r1, #16
    e5ec:	moveq	r0, r1
    e5f0:	bx	lr
    e5f4:	and	r1, r2, #248	; 0xf8
    e5f8:	mov	r0, #16
    e5fc:	cmp	r1, #128	; 0x80
    e600:	movweq	r0, #17
    e604:	bx	lr

0000e608 <atomdef>:
    e608:	ldr	r2, [r0]
    e60c:	mov	ip, r0
    e610:	mvn	r0, #0
    e614:	cmn	r2, #1
    e618:	bxeq	lr
    e61c:	and	r3, r2, #7
    e620:	cmp	r3, #7
    e624:	bhi	e668 <atomdef+0x60>
    e628:	add	r1, pc, #8
    e62c:	mov	r0, #16
    e630:	ldr	r3, [r1, r3, lsl #2]
    e634:	add	pc, r1, r3
    e638:	.word	0x00000034
    e63c:	.word	0x00000028
    e640:	.word	0x00000020
    e644:	.word	0x00000020
    e648:	.word	0x00000034
    e64c:	.word	0x00000030
    e650:	.word	0x00000030
    e654:	.word	0x00000038
    e658:	ldr	r0, [ip, #12]
    e65c:	bx	lr
    e660:	mov	r0, #17
    e664:	bx	lr
    e668:	mvn	r0, #0
    e66c:	bx	lr
    e670:	mov	r0, #16
    e674:	tst	r2, #248	; 0xf8
    e678:	movweq	r0, #17
    e67c:	bx	lr

0000e680 <propedom>:
    e680:	push	{r4, sl, fp, lr}
    e684:	add	fp, sp, #8
    e688:	ldr	r1, [r0]
    e68c:	ldr	r2, [r0, #8]
    e690:	lsr	r3, r1, #5
    e694:	and	lr, r1, #31
    e698:	mov	r1, #1
    e69c:	ldr	ip, [r2, r3, lsl #2]
    e6a0:	orr	r1, ip, r1, lsl lr
    e6a4:	str	r1, [r2, r3, lsl #2]
    e6a8:	ldr	r1, [r0, #12]
    e6ac:	cmp	r1, #0
    e6b0:	beq	e720 <propedom+0xa0>
    e6b4:	ldr	ip, [pc, #104]	; e724 <propedom+0xa4>
    e6b8:	ldr	ip, [pc, ip]
    e6bc:	cmp	ip, #1
    e6c0:	blt	e720 <propedom+0xa0>
    e6c4:	ldr	r3, [r1, #56]	; 0x38
    e6c8:	ldr	r1, [r0, #8]
    e6cc:	add	r2, ip, #1
    e6d0:	ldr	lr, [r1], #4
    e6d4:	ldr	r4, [r3]
    e6d8:	sub	r2, r2, #1
    e6dc:	cmp	r2, #1
    e6e0:	and	r4, r4, lr
    e6e4:	str	r4, [r3], #4
    e6e8:	bgt	e6d0 <propedom+0x50>
    e6ec:	cmp	ip, #1
    e6f0:	poplt	{r4, sl, fp, pc}
    e6f4:	ldr	r2, [r0, #8]
    e6f8:	ldr	r0, [r0, #12]
    e6fc:	add	r1, ip, #1
    e700:	ldr	r0, [r0, #80]	; 0x50
    e704:	ldr	r3, [r2], #4
    e708:	ldr	r4, [r0]
    e70c:	sub	r1, r1, #1
    e710:	cmp	r1, #1
    e714:	and	r3, r4, r3
    e718:	str	r3, [r0], #4
    e71c:	bgt	e704 <propedom+0x84>
    e720:	pop	{r4, sl, fp, pc}
    e724:	.word	0x00021ec8

0000e728 <find_inedges>:
    e728:	push	{fp, lr}
    e72c:	mov	fp, sp
    e730:	ldr	lr, [pc, #136]	; e7c0 <find_inedges+0x98>
    e734:	ldr	lr, [pc, lr]
    e738:	cmp	lr, #1
    e73c:	blt	e764 <find_inedges+0x3c>
    e740:	ldr	r3, [pc, #124]	; e7c4 <find_inedges+0x9c>
    e744:	mov	ip, #0
    e748:	mov	r2, #0
    e74c:	ldr	r3, [pc, r3]
    e750:	ldr	r1, [r3, r2, lsl #2]
    e754:	add	r2, r2, #1
    e758:	cmp	r2, lr
    e75c:	str	ip, [r1, #112]	; 0x70
    e760:	blt	e750 <find_inedges+0x28>
    e764:	ldr	r0, [r0, #36]	; 0x24
    e768:	cmp	r0, #1
    e76c:	poplt	{fp, pc}
    e770:	ldr	ip, [pc, #80]	; e7c8 <find_inedges+0xa0>
    e774:	ldr	ip, [pc, ip]
    e778:	ldr	r2, [ip, r0, lsl #2]
    e77c:	b	e7ac <find_inedges+0x84>
    e780:	ldr	r3, [r2, #60]	; 0x3c
    e784:	ldr	r1, [r3, #112]	; 0x70
    e788:	str	r1, [r2, #68]	; 0x44
    e78c:	add	r1, r2, #48	; 0x30
    e790:	str	r1, [r3, #112]	; 0x70
    e794:	ldr	r1, [r2, #84]	; 0x54
    e798:	ldr	r3, [r1, #112]	; 0x70
    e79c:	str	r3, [r2, #92]	; 0x5c
    e7a0:	add	r3, r2, #72	; 0x48
    e7a4:	str	r3, [r1, #112]	; 0x70
    e7a8:	ldr	r2, [r2, #100]	; 0x64
    e7ac:	cmp	r2, #0
    e7b0:	bne	e780 <find_inedges+0x58>
    e7b4:	subs	r0, r0, #1
    e7b8:	bgt	e778 <find_inedges+0x50>
    e7bc:	pop	{fp, pc}
    e7c0:	.word	0x00021e34
    e7c4:	.word	0x00022264
    e7c8:	.word	0x00022238

0000e7cc <opt_j>:
    e7cc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    e7d0:	add	fp, sp, #28
    e7d4:	sub	sp, sp, #24
    e7d8:	ldr	r1, [r0, #12]
    e7dc:	str	r0, [sp, #8]
    e7e0:	ldr	r5, [r1, #60]	; 0x3c
    e7e4:	cmp	r5, #0
    e7e8:	beq	e9e4 <opt_j+0x218>
    e7ec:	ldr	r0, [r1, #84]	; 0x54
    e7f0:	cmp	r5, r0
    e7f4:	beq	e800 <opt_j+0x34>
    e7f8:	mov	r5, r1
    e7fc:	b	e860 <opt_j+0x94>
    e800:	ldr	r2, [r5, #128]	; 0x80
    e804:	cmp	r2, #0
    e808:	beq	e848 <opt_j+0x7c>
    e80c:	ldr	r0, [sp, #8]
    e810:	add	r3, r5, #136	; 0x88
    e814:	mov	r7, #0
    e818:	mov	ip, #1
    e81c:	ldr	r0, [r0, #16]
    e820:	add	r0, r0, #136	; 0x88
    e824:	tst	r2, ip, lsl r7
    e828:	beq	e83c <opt_j+0x70>
    e82c:	ldr	r6, [r3, r7, lsl #2]
    e830:	ldr	r4, [r0, r7, lsl #2]
    e834:	cmp	r4, r6
    e838:	bne	e7f8 <opt_j+0x2c>
    e83c:	add	r7, r7, #1
    e840:	cmp	r7, #18
    e844:	bcc	e824 <opt_j+0x58>
    e848:	ldr	r0, [pc, #412]	; e9ec <opt_j+0x220>
    e84c:	mov	r1, #0
    e850:	add	r0, pc, r0
    e854:	strb	r1, [r0]
    e858:	ldr	r0, [sp, #8]
    e85c:	str	r5, [r0, #12]
    e860:	ldr	r0, [pc, #392]	; e9f0 <opt_j+0x224>
    e864:	ldr	r0, [pc, r0]
    e868:	cmp	r0, #1
    e86c:	str	r0, [sp]
    e870:	blt	e9e4 <opt_j+0x218>
    e874:	ldr	r0, [sp, #8]
    e878:	mov	r1, #1
    e87c:	ldr	r0, [r0, #8]
    e880:	str	r0, [sp, #4]
    e884:	ldr	r0, [pc, #360]	; e9f4 <opt_j+0x228>
    e888:	ldr	r0, [pc, r0]
    e88c:	str	r0, [sp, #20]
    e890:	add	r0, r5, #84	; 0x54
    e894:	mov	r2, #0
    e898:	str	r0, [sp, #12]
    e89c:	ldr	r0, [sp, #4]
    e8a0:	str	r2, [sp, #16]
    e8a4:	ldr	r2, [r0, r2, lsl #2]
    e8a8:	cmp	r2, #0
    e8ac:	beq	e9a4 <opt_j+0x1d8>
    e8b0:	ldr	r0, [sp, #16]
    e8b4:	ldr	lr, [r5, #8]
    e8b8:	lsl	r6, r0, #5
    e8bc:	ldr	r3, [sp, #20]
    e8c0:	rbit	r0, r2
    e8c4:	mov	r4, #0
    e8c8:	clz	r8, r0
    e8cc:	orr	r0, r8, r6
    e8d0:	ldr	r0, [r3, r0, lsl #2]
    e8d4:	ldr	ip, [r0, #4]
    e8d8:	cmn	ip, #1
    e8dc:	mov	r3, ip
    e8e0:	movwgt	r4, #1
    e8e4:	cmp	ip, #0
    e8e8:	rsbmi	r3, ip, #0
    e8ec:	cmp	lr, r3
    e8f0:	bne	e998 <opt_j+0x1cc>
    e8f4:	ldr	r0, [r0, #16]
    e8f8:	ldr	r3, [r5, #200]	; 0xc8
    e8fc:	ldr	r7, [r0, #200]	; 0xc8
    e900:	cmp	r3, r7
    e904:	bne	e998 <opt_j+0x1cc>
    e908:	ldr	r0, [r0, #132]	; 0x84
    e90c:	ldr	r3, [r5, #132]	; 0x84
    e910:	cmp	r3, r0
    e914:	bne	e928 <opt_j+0x15c>
    e918:	ldr	r0, [sp, #12]
    e91c:	cmp	ip, #0
    e920:	addge	r0, r5, #60	; 0x3c
    e924:	b	e940 <opt_j+0x174>
    e928:	subs	r0, lr, #21
    e92c:	eor	r3, r4, #1
    e930:	movwne	r0, #1
    e934:	orrs	r0, r0, r3
    e938:	ldr	r0, [sp, #12]
    e93c:	bne	e998 <opt_j+0x1cc>
    e940:	ldr	r0, [r0]
    e944:	cmp	r0, #0
    e948:	beq	e998 <opt_j+0x1cc>
    e94c:	ldr	r3, [r0, #128]	; 0x80
    e950:	mov	r9, r0
    e954:	cmp	r3, #0
    e958:	beq	e9bc <opt_j+0x1f0>
    e95c:	ldr	r0, [sp, #8]
    e960:	add	r4, r9, #136	; 0x88
    e964:	mov	sl, #0
    e968:	ldr	r0, [r0, #16]
    e96c:	add	r0, r0, #136	; 0x88
    e970:	tst	r3, r1, lsl sl
    e974:	beq	e988 <opt_j+0x1bc>
    e978:	ldr	r7, [r4, sl, lsl #2]
    e97c:	ldr	ip, [r0, sl, lsl #2]
    e980:	cmp	ip, r7
    e984:	bne	e998 <opt_j+0x1cc>
    e988:	add	sl, sl, #1
    e98c:	cmp	sl, #18
    e990:	bcc	e970 <opt_j+0x1a4>
    e994:	b	e9bc <opt_j+0x1f0>
    e998:	bic	r2, r2, r1, lsl r8
    e99c:	cmp	r2, #0
    e9a0:	bne	e8bc <opt_j+0xf0>
    e9a4:	ldr	r2, [sp, #16]
    e9a8:	ldr	r0, [sp]
    e9ac:	add	r2, r2, #1
    e9b0:	cmp	r2, r0
    e9b4:	blt	e89c <opt_j+0xd0>
    e9b8:	b	e9e4 <opt_j+0x218>
    e9bc:	ldr	r2, [pc, #52]	; e9f8 <opt_j+0x22c>
    e9c0:	mov	r0, #0
    e9c4:	mov	r5, r9
    e9c8:	add	r2, pc, r2
    e9cc:	strb	r0, [r2]
    e9d0:	ldr	r0, [sp, #8]
    e9d4:	str	r9, [r0, #12]
    e9d8:	ldr	r0, [r9, #60]	; 0x3c
    e9dc:	cmp	r0, #0
    e9e0:	bne	e890 <opt_j+0xc4>
    e9e4:	sub	sp, fp, #28
    e9e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    e9ec:	.word	0x00021d14
    e9f0:	.word	0x00021d1c
    e9f4:	.word	0x0002212c
    e9f8:	.word	0x00021b9c

0000e9fc <F>:
    e9fc:	push	{r4, r5, r6, sl, fp, lr}
    ea00:	add	fp, sp, #16
    ea04:	eor	r3, r0, r1, lsl #4
    ea08:	eor	ip, r3, r2, lsl #8
    ea0c:	movw	r3, #8923	; 0x22db
    ea10:	movt	r3, #39383	; 0x99d7
    ea14:	umull	r3, lr, ip, r3
    ea18:	lsr	lr, lr, #7
    ea1c:	mov	r3, #213	; 0xd5
    ea20:	mls	ip, lr, r3, ip
    ea24:	ldr	lr, [pc, #172]	; ead8 <F+0xdc>
    ea28:	add	lr, pc, lr
    ea2c:	ldr	r3, [lr, ip, lsl #2]
    ea30:	b	ea58 <F+0x5c>
    ea34:	ldr	r4, [r3]
    ea38:	cmp	r4, r0
    ea3c:	bne	ea54 <F+0x58>
    ea40:	ldr	r4, [r3, #4]
    ea44:	cmp	r4, r1
    ea48:	ldreq	r4, [r3, #8]
    ea4c:	cmpeq	r4, r2
    ea50:	beq	ead0 <F+0xd4>
    ea54:	ldr	r3, [r3, #16]
    ea58:	cmp	r3, #0
    ea5c:	bne	ea34 <F+0x38>
    ea60:	ldr	r3, [pc, #116]	; eadc <F+0xe0>
    ea64:	tst	r0, #230	; 0xe6
    ea68:	ldr	r3, [pc, r3]
    ea6c:	ldr	r4, [pc, #108]	; eae0 <F+0xe4>
    ea70:	add	r3, r3, #1
    ea74:	add	r4, pc, r4
    ea78:	str	r3, [r4]
    ea7c:	bne	eaa0 <F+0xa4>
    ea80:	ldr	r4, [pc, #92]	; eae4 <F+0xe8>
    ea84:	mov	r5, #1
    ea88:	ldr	r4, [pc, r4]
    ea8c:	add	r4, r4, r3, lsl #3
    ea90:	str	r1, [r4, #4]
    ea94:	ldr	r4, [pc, #76]	; eae8 <F+0xec>
    ea98:	ldr	r4, [pc, r4]
    ea9c:	str	r5, [r4, r3, lsl #3]
    eaa0:	ldr	r4, [pc, #68]	; eaec <F+0xf0>
    eaa4:	ldr	r4, [pc, r4]
    eaa8:	ldr	r6, [pc, #64]	; eaf0 <F+0xf4>
    eaac:	add	r5, r4, #20
    eab0:	add	r6, pc, r6
    eab4:	str	r5, [r6]
    eab8:	stm	r4, {r0, r1, r2, r3}
    eabc:	ldr	r0, [lr, ip, lsl #2]
    eac0:	str	r0, [r4, #16]
    eac4:	str	r4, [lr, ip, lsl #2]
    eac8:	mov	r0, r3
    eacc:	pop	{r4, r5, r6, sl, fp, pc}
    ead0:	ldr	r3, [r3, #12]
    ead4:	b	eac8 <F+0xcc>
    ead8:	.word	0x00021b68
    eadc:	.word	0x00021b1c
    eae0:	.word	0x00021b10
    eae4:	.word	0x00021f38
    eae8:	.word	0x00021f28
    eaec:	.word	0x00021f14
    eaf0:	.word	0x00021f08

0000eaf4 <fold_op>:
    eaf4:	push	{fp, lr}
    eaf8:	mov	fp, sp
    eafc:	ldr	r3, [r0]
    eb00:	ubfx	ip, r3, #4, #4
    eb04:	cmp	ip, #8
    eb08:	bhi	ebbc <fold_op+0xc8>
    eb0c:	ldr	r3, [pc, #184]	; ebcc <fold_op+0xd8>
    eb10:	ldr	r3, [pc, r3]
    eb14:	add	r1, r3, r1, lsl #3
    eb18:	add	r2, r3, r2, lsl #3
    eb1c:	ldr	lr, [r2, #4]
    eb20:	ldr	r1, [r1, #4]
    eb24:	add	r3, pc, #4
    eb28:	ldr	r2, [r3, ip, lsl #2]
    eb2c:	add	pc, r3, r2
    eb30:	.word	0x00000024
    eb34:	.word	0x00000054
    eb38:	.word	0x00000034
    eb3c:	.word	0x0000003c
    eb40:	.word	0x0000002c
    eb44:	.word	0x0000005c
    eb48:	.word	0x00000064
    eb4c:	.word	0x0000004c
    eb50:	.word	0x0000006c
    eb54:	add	r1, lr, r1
    eb58:	b	eba0 <fold_op+0xac>
    eb5c:	orr	r1, lr, r1
    eb60:	b	eba0 <fold_op+0xac>
    eb64:	mul	r1, lr, r1
    eb68:	b	eba0 <fold_op+0xac>
    eb6c:	cmp	lr, #0
    eb70:	beq	ebc0 <fold_op+0xcc>
    eb74:	udiv	r1, r1, lr
    eb78:	b	eba0 <fold_op+0xac>
    eb7c:	lsr	r1, r1, lr
    eb80:	b	eba0 <fold_op+0xac>
    eb84:	sub	r1, r1, lr
    eb88:	b	eba0 <fold_op+0xac>
    eb8c:	and	r1, lr, r1
    eb90:	b	eba0 <fold_op+0xac>
    eb94:	lsl	r1, r1, lr
    eb98:	b	eba0 <fold_op+0xac>
    eb9c:	rsb	r1, r1, #0
    eba0:	mov	r2, #0
    eba4:	str	r2, [r0]
    eba8:	str	r1, [r0, #12]
    ebac:	ldr	r0, [pc, #28]	; ebd0 <fold_op+0xdc>
    ebb0:	add	r0, pc, r0
    ebb4:	strb	r2, [r0]
    ebb8:	pop	{fp, pc}
    ebbc:	bl	fc4 <abort@plt>
    ebc0:	ldr	r0, [pc, #12]	; ebd4 <fold_op+0xe0>
    ebc4:	add	r0, pc, r0
    ebc8:	bl	2028 <sf_bpf_error>
    ebcc:	.word	0x00021eb0
    ebd0:	.word	0x000219b4
    ebd4:	.word	0x00005383

0000ebd8 <deadstmt>:
    ebd8:	push	{r4, r5, fp, lr}
    ebdc:	add	fp, sp, #8
    ebe0:	mov	r4, r1
    ebe4:	mov	r5, r0
    ebe8:	bl	e558 <atomuse>
    ebec:	cmp	r0, #0
    ebf0:	blt	ec0c <deadstmt+0x34>
    ebf4:	cmp	r0, #18
    ebf8:	mov	r1, #0
    ebfc:	moveq	r0, #0
    ec00:	streq	r0, [r4, #68]	; 0x44
    ec04:	moveq	r0, #16
    ec08:	str	r1, [r4, r0, lsl #2]
    ec0c:	mov	r0, r5
    ec10:	bl	e608 <atomdef>
    ec14:	cmp	r0, #0
    ec18:	poplt	{r4, r5, fp, pc}
    ec1c:	ldr	r1, [r4, r0, lsl #2]
    ec20:	cmp	r1, #0
    ec24:	beq	ec40 <deadstmt+0x68>
    ec28:	ldr	r2, [pc, #24]	; ec48 <deadstmt+0x70>
    ec2c:	mov	r3, #0
    ec30:	add	r2, pc, r2
    ec34:	strb	r3, [r2]
    ec38:	mvn	r2, #0
    ec3c:	str	r2, [r1]
    ec40:	str	r5, [r4, r0, lsl #2]
    ec44:	pop	{r4, r5, fp, pc}
    ec48:	.word	0x00021934

0000ec4c <make_marks>:
    ec4c:	push	{r4, r5, fp, lr}
    ec50:	add	fp, sp, #8
    ec54:	mov	r4, r0
    ec58:	ldr	r0, [r0, #24]
    ec5c:	ldr	r5, [pc, #48]	; ec94 <make_marks+0x48>
    ec60:	ldr	r5, [pc, r5]
    ec64:	b	ec78 <make_marks+0x2c>
    ec68:	ldr	r0, [r4, #60]	; 0x3c
    ec6c:	bl	ec4c <make_marks>
    ec70:	ldr	r4, [r4, #84]	; 0x54
    ec74:	ldr	r0, [r4, #24]
    ec78:	cmp	r0, r5
    ec7c:	strne	r5, [r4, #24]
    ec80:	ldrne	r0, [r4, #8]
    ec84:	andne	r0, r0, #7
    ec88:	cmpne	r0, #6
    ec8c:	bne	ec68 <make_marks+0x1c>
    ec90:	pop	{r4, r5, fp, pc}
    ec94:	.word	0x000218f8

0000ec98 <count_blocks>:
    ec98:	push	{r4, r5, fp, lr}
    ec9c:	add	fp, sp, #8
    eca0:	cmp	r0, #0
    eca4:	beq	ecc0 <count_blocks+0x28>
    eca8:	mov	r4, r0
    ecac:	ldr	r1, [r0, #24]
    ecb0:	ldr	r0, [pc, #52]	; ecec <count_blocks+0x54>
    ecb4:	ldr	r0, [pc, r0]
    ecb8:	cmp	r1, r0
    ecbc:	bne	ecc8 <count_blocks+0x30>
    ecc0:	mov	r0, #0
    ecc4:	pop	{r4, r5, fp, pc}
    ecc8:	str	r0, [r4, #24]
    eccc:	ldr	r0, [r4, #60]	; 0x3c
    ecd0:	bl	ec98 <count_blocks>
    ecd4:	mov	r5, r0
    ecd8:	ldr	r0, [r4, #84]	; 0x54
    ecdc:	bl	ec98 <count_blocks>
    ece0:	add	r0, r5, r0
    ece4:	add	r0, r0, #1
    ece8:	pop	{r4, r5, fp, pc}
    ecec:	.word	0x000218a4

0000ecf0 <number_blks_r>:
    ecf0:	push	{r4, r5, r6, sl, fp, lr}
    ecf4:	add	fp, sp, #16
    ecf8:	cmp	r0, #0
    ecfc:	beq	ed58 <number_blks_r+0x68>
    ed00:	ldr	r5, [pc, #84]	; ed5c <number_blks_r+0x6c>
    ed04:	mov	r4, r0
    ed08:	ldr	r5, [pc, r5]
    ed0c:	ldr	r6, [pc, #76]	; ed60 <number_blks_r+0x70>
    ed10:	add	r6, pc, r6
    ed14:	ldr	r0, [r4, #24]
    ed18:	cmp	r0, r5
    ed1c:	popeq	{r4, r5, r6, sl, fp, pc}
    ed20:	str	r5, [r4, #24]
    ed24:	ldr	r0, [pc, #56]	; ed64 <number_blks_r+0x74>
    ed28:	ldr	r0, [pc, r0]
    ed2c:	add	r1, r0, #1
    ed30:	str	r1, [r6]
    ed34:	str	r0, [r4]
    ed38:	ldr	r1, [pc, #40]	; ed68 <number_blks_r+0x78>
    ed3c:	ldr	r1, [pc, r1]
    ed40:	str	r4, [r1, r0, lsl #2]
    ed44:	ldr	r0, [r4, #60]	; 0x3c
    ed48:	bl	ecf0 <number_blks_r>
    ed4c:	ldr	r4, [r4, #84]	; 0x54
    ed50:	cmp	r4, #0
    ed54:	bne	ed14 <number_blks_r+0x24>
    ed58:	pop	{r4, r5, r6, sl, fp, pc}
    ed5c:	.word	0x00021850
    ed60:	.word	0x00021858
    ed64:	.word	0x00021840
    ed68:	.word	0x00021c74

0000ed6c <sfbpf_strcasecmp>:
    ed6c:	push	{fp, lr}
    ed70:	mov	fp, sp
    ed74:	ldr	ip, [pc, #52]	; edb0 <sfbpf_strcasecmp+0x44>
    ed78:	add	ip, pc, ip
    ed7c:	ldrb	r2, [r1]
    ed80:	ldrb	r3, [r0]
    ed84:	ldrb	lr, [ip, r2]
    ed88:	ldrb	r2, [ip, r3]
    ed8c:	cmp	r2, lr
    ed90:	subne	r0, r2, lr
    ed94:	popne	{fp, pc}
    ed98:	add	r0, r0, #1
    ed9c:	cmp	r3, #0
    eda0:	add	r1, r1, #1
    eda4:	moveq	r0, #0
    eda8:	popeq	{fp, pc}
    edac:	b	ed7c <sfbpf_strcasecmp+0x10>
    edb0:	.word	0x00005252

0000edb4 <pcap_next_etherent>:
    edb4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    edb8:	add	fp, sp, #24
    edbc:	ldr	r8, [pc, #528]	; efd4 <pcap_next_etherent+0x220>
    edc0:	mov	r5, r0
    edc4:	mov	r1, #0
    edc8:	mov	r2, #128	; 0x80
    edcc:	add	r8, pc, r8
    edd0:	mov	r0, r8
    edd4:	bl	f40 <memset@plt>
    edd8:	mov	r0, r5
    eddc:	bl	fd0 <getc@plt>
    ede0:	mov	r7, r0
    ede4:	bl	eec <__ctype_b_loc@plt>
    ede8:	mov	r9, r0
    edec:	ldr	r0, [r0]
    edf0:	cmp	r7, #10
    edf4:	add	r0, r0, r7, lsl #1
    edf8:	ldrh	r1, [r0]
    edfc:	andsne	r0, r1, #8192	; 0x2000
    ee00:	bne	edd8 <pcap_next_etherent+0x24>
    ee04:	mov	r0, #10
    ee08:	cmp	r7, #10
    ee0c:	beq	ef58 <pcap_next_etherent+0x1a4>
    ee10:	tst	r1, #4096	; 0x1000
    ee14:	bne	ee34 <pcap_next_etherent+0x80>
    ee18:	mov	r0, r5
    ee1c:	bl	fd0 <getc@plt>
    ee20:	cmn	r0, #1
    ee24:	beq	ef58 <pcap_next_etherent+0x1a4>
    ee28:	cmp	r0, #10
    ee2c:	bne	ee18 <pcap_next_etherent+0x64>
    ee30:	b	ef58 <pcap_next_etherent+0x1a4>
    ee34:	mov	r4, #0
    ee38:	b	ee48 <pcap_next_etherent+0x94>
    ee3c:	ldr	r0, [r9]
    ee40:	add	r0, r0, r7, lsl #1
    ee44:	ldrh	r1, [r0]
    ee48:	mvn	r0, #47	; 0x2f
    ee4c:	tst	r1, #2048	; 0x800
    ee50:	bne	ee64 <pcap_next_etherent+0xb0>
    ee54:	uxth	r0, r1
    ee58:	tst	r0, #512	; 0x200
    ee5c:	mvn	r0, #86	; 0x56
    ee60:	mvneq	r0, #54	; 0x36
    ee64:	add	r6, r7, r0
    ee68:	mov	r0, r5
    ee6c:	bl	fd0 <getc@plt>
    ee70:	mov	r7, r0
    ee74:	ldr	r0, [r9]
    ee78:	add	r0, r0, r7, lsl #1
    ee7c:	ldrh	r1, [r0]
    ee80:	tst	r1, #4096	; 0x1000
    ee84:	beq	eeb8 <pcap_next_etherent+0x104>
    ee88:	lsl	r0, r6, #4
    ee8c:	mvn	r2, #47	; 0x2f
    ee90:	tst	r1, #2048	; 0x800
    ee94:	bne	eea4 <pcap_next_etherent+0xf0>
    ee98:	tst	r1, #512	; 0x200
    ee9c:	mvn	r2, #86	; 0x56
    eea0:	mvneq	r2, #54	; 0x36
    eea4:	add	r1, r7, r2
    eea8:	orr	r6, r1, r0
    eeac:	mov	r0, r5
    eeb0:	bl	fd0 <getc@plt>
    eeb4:	mov	r7, r0
    eeb8:	cmp	r7, #58	; 0x3a
    eebc:	strb	r6, [r8, r4]
    eec0:	bne	eedc <pcap_next_etherent+0x128>
    eec4:	mov	r0, r5
    eec8:	bl	fd0 <getc@plt>
    eecc:	add	r4, r4, #1
    eed0:	mov	r7, r0
    eed4:	cmp	r4, #5
    eed8:	bls	ee3c <pcap_next_etherent+0x88>
    eedc:	cmn	r7, #1
    eee0:	beq	ef60 <pcap_next_etherent+0x1ac>
    eee4:	ldr	r0, [r9]
    eee8:	add	r0, r0, r7, lsl #1
    eeec:	ldrb	r0, [r0, #1]
    eef0:	tst	r0, #32
    eef4:	bne	ef14 <pcap_next_etherent+0x160>
    eef8:	mov	r0, r5
    eefc:	bl	fd0 <getc@plt>
    ef00:	cmn	r0, #1
    ef04:	beq	ef58 <pcap_next_etherent+0x1a4>
    ef08:	cmp	r0, #10
    ef0c:	bne	eef8 <pcap_next_etherent+0x144>
    ef10:	b	ef58 <pcap_next_etherent+0x1a4>
    ef14:	mov	r0, r5
    ef18:	bl	fd0 <getc@plt>
    ef1c:	cmp	r0, #10
    ef20:	ldrne	r1, [r9]
    ef24:	addne	r1, r1, r0, lsl #1
    ef28:	ldrhne	r1, [r1]
    ef2c:	andsne	r1, r1, #8192	; 0x2000
    ef30:	bne	ef14 <pcap_next_etherent+0x160>
    ef34:	cmp	r0, #10
    ef38:	beq	ef58 <pcap_next_etherent+0x1a4>
    ef3c:	cmp	r0, #35	; 0x23
    ef40:	bne	ef6c <pcap_next_etherent+0x1b8>
    ef44:	mov	r0, r5
    ef48:	bl	fd0 <getc@plt>
    ef4c:	cmn	r0, #1
    ef50:	cmpne	r0, #10
    ef54:	bne	ef44 <pcap_next_etherent+0x190>
    ef58:	cmn	r0, #1
    ef5c:	bne	edd8 <pcap_next_etherent+0x24>
    ef60:	mov	r8, #0
    ef64:	mov	r0, r8
    ef68:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    ef6c:	mov	r4, #0
    ef70:	sub	r6, r8, r4
    ef74:	strb	r0, [r6, #6]
    ef78:	mov	r0, r5
    ef7c:	bl	fd0 <getc@plt>
    ef80:	cmn	r0, #1
    ef84:	beq	efb0 <pcap_next_etherent+0x1fc>
    ef88:	ldr	r1, [r9]
    ef8c:	add	r1, r1, r0, lsl #1
    ef90:	ldrh	r1, [r1]
    ef94:	ands	r1, r1, #8192	; 0x2000
    ef98:	bne	efb0 <pcap_next_etherent+0x1fc>
    ef9c:	add	r2, r4, #121	; 0x79
    efa0:	sub	r1, r4, #1
    efa4:	cmp	r2, #1
    efa8:	mov	r4, r1
    efac:	bhi	ef70 <pcap_next_etherent+0x1bc>
    efb0:	mov	r1, #0
    efb4:	strb	r1, [r6, #7]
    efb8:	cmp	r0, #10
    efbc:	beq	ef64 <pcap_next_etherent+0x1b0>
    efc0:	mov	r0, r5
    efc4:	bl	fd0 <getc@plt>
    efc8:	cmn	r0, #1
    efcc:	bne	efb8 <pcap_next_etherent+0x204>
    efd0:	b	ef64 <pcap_next_etherent+0x1b0>
    efd4:	.word	0x00021b1c

0000efd8 <sfbpf_parse>:
    efd8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    efdc:	add	fp, sp, #28
    efe0:	sub	sp, sp, #564	; 0x234
    efe4:	sub	sp, sp, #3072	; 0xc00
    efe8:	ldr	r0, [pc, #4076]	; ffdc <sfbpf_parse+0x1004>
    efec:	mvn	r1, #1
    eff0:	sub	r4, fp, #432	; 0x1b0
    eff4:	mov	sl, #0
    eff8:	add	r9, sp, #32
    effc:	mov	ip, #200	; 0xc8
    f000:	mov	r6, #15
    f004:	mov	r8, r4
    f008:	add	r0, pc, r0
    f00c:	str	r1, [r0]
    f010:	ldr	r0, [pc, #4068]	; fffc <sfbpf_parse+0x1024>
    f014:	str	r9, [sp, #20]
    f018:	add	r0, pc, r0
    f01c:	str	sl, [r0]
    f020:	add	r0, r4, ip, lsl #1
    f024:	strh	sl, [r8]
    f028:	sub	r0, r0, #2
    f02c:	cmp	r0, r8
    f030:	bhi	f0e8 <sfbpf_parse+0x110>
    f034:	movw	r0, #9999	; 0x270f
    f038:	cmp	ip, r0
    f03c:	bhi	102a4 <sfbpf_parse+0x12cc>
    f040:	lsl	r0, ip, #1
    f044:	movw	r1, #10000	; 0x2710
    f048:	movw	r7, #10000	; 0x2710
    f04c:	cmp	r0, r1
    f050:	lslcc	r7, ip, #1
    f054:	add	r0, r7, r7, lsl #3
    f058:	add	r0, r6, r0, lsl #1
    f05c:	bl	ed4 <malloc@plt>
    f060:	cmp	r0, #0
    f064:	beq	102a4 <sfbpf_parse+0x12cc>
    f068:	mov	r5, r0
    f06c:	sub	r0, r8, r4
    f070:	mov	r1, #1
    f074:	mov	r8, r4
    f078:	add	r4, r1, r0, asr #1
    f07c:	asr	r9, r0, #1
    f080:	mov	r0, r5
    f084:	mov	r1, r8
    f088:	lsl	r2, r4, #1
    f08c:	bl	e80 <memcpy@plt>
    f090:	add	r0, r6, r7, lsl #1
    f094:	ldr	r1, [sp, #20]
    f098:	lsl	r2, r4, #4
    f09c:	bic	r0, r0, #15
    f0a0:	add	r6, r5, r0
    f0a4:	mov	r0, r6
    f0a8:	bl	e80 <memcpy@plt>
    f0ac:	sub	r0, fp, #432	; 0x1b0
    f0b0:	cmp	r8, r0
    f0b4:	beq	f0c0 <sfbpf_parse+0xe8>
    f0b8:	mov	r0, r8
    f0bc:	bl	e5c <free@plt>
    f0c0:	add	r0, r5, r7, lsl #1
    f0c4:	add	r8, r5, r9, lsl #1
    f0c8:	sub	r0, r0, #2
    f0cc:	cmp	r0, r8
    f0d0:	bls	10288 <sfbpf_parse+0x12b0>
    f0d4:	add	r9, r6, r9, lsl #4
    f0d8:	str	r6, [sp, #20]
    f0dc:	mov	ip, r7
    f0e0:	mov	r4, r5
    f0e4:	mov	r6, #15
    f0e8:	cmp	sl, #3
    f0ec:	beq	10274 <sfbpf_parse+0x129c>
    f0f0:	ldr	r0, [pc, #4036]	; 100bc <sfbpf_parse+0x10e4>
    f0f4:	str	r4, [sp, #24]
    f0f8:	add	r0, pc, r0
    f0fc:	add	r0, r0, sl, lsl #1
    f100:	ldrsh	r5, [r0]
    f104:	cmn	r5, #198	; 0xc6
    f108:	beq	f1d0 <sfbpf_parse+0x1f8>
    f10c:	ldr	r0, [pc, #4012]	; 100c0 <sfbpf_parse+0x10e8>
    f110:	ldr	r0, [pc, r0]
    f114:	cmn	r0, #2
    f118:	bne	f134 <sfbpf_parse+0x15c>
    f11c:	mov	r7, ip
    f120:	bl	10458 <sfbpf_lex>
    f124:	ldr	r1, [pc, #3992]	; 100c4 <sfbpf_parse+0x10ec>
    f128:	mov	ip, r7
    f12c:	add	r1, pc, r1
    f130:	str	r0, [r1]
    f134:	cmp	r0, #0
    f138:	ble	f158 <sfbpf_parse+0x180>
    f13c:	lsr	r2, r0, #1
    f140:	mov	r1, #2
    f144:	cmp	r2, #182	; 0xb6
    f148:	ldrls	r1, [pc, #3960]	; 100c8 <sfbpf_parse+0x10f0>
    f14c:	addls	r1, pc, r1
    f150:	ldrbls	r1, [r1, r0]
    f154:	b	f168 <sfbpf_parse+0x190>
    f158:	ldr	r0, [pc, #3948]	; 100cc <sfbpf_parse+0x10f4>
    f15c:	mov	r1, #0
    f160:	add	r0, pc, r0
    f164:	str	r1, [r0]
    f168:	add	r0, r1, r5
    f16c:	movw	r2, #669	; 0x29d
    f170:	cmp	r0, r2
    f174:	bhi	f1d0 <sfbpf_parse+0x1f8>
    f178:	ldr	r2, [pc, #3920]	; 100d0 <sfbpf_parse+0x10f8>
    f17c:	add	r2, pc, r2
    f180:	add	r2, r2, r0, lsl #1
    f184:	ldrsh	r2, [r2]
    f188:	cmp	r1, r2
    f18c:	bne	f1d0 <sfbpf_parse+0x1f8>
    f190:	ldr	r1, [pc, #3900]	; 100d4 <sfbpf_parse+0x10fc>
    f194:	add	r1, pc, r1
    f198:	add	r0, r1, r0, lsl #1
    f19c:	ldrsh	sl, [r0]
    f1a0:	cmp	sl, #0
    f1a4:	ble	f564 <sfbpf_parse+0x58c>
    f1a8:	ldr	r0, [pc, #4092]	; 101ac <sfbpf_parse+0x11d4>
    f1ac:	add	r9, r9, #16
    f1b0:	mvn	r1, #1
    f1b4:	add	r0, pc, r0
    f1b8:	vld1.32	{d16-d17}, [r0]
    f1bc:	ldr	r0, [pc, #4076]	; 101b0 <sfbpf_parse+0x11d8>
    f1c0:	add	r0, pc, r0
    f1c4:	vst1.32	{d16-d17}, [r9]
    f1c8:	str	r1, [r0]
    f1cc:	b	101cc <sfbpf_parse+0x11f4>
    f1d0:	ldr	r0, [pc, #4092]	; 101d4 <sfbpf_parse+0x11fc>
    f1d4:	add	r0, pc, r0
    f1d8:	ldrb	r7, [r0, sl]
    f1dc:	cmp	r7, #0
    f1e0:	beq	102b8 <sfbpf_parse+0x12e0>
    f1e4:	ldr	r0, [pc, #4076]	; 101d8 <sfbpf_parse+0x1200>
    f1e8:	mov	r1, r9
    f1ec:	add	r0, pc, r0
    f1f0:	ldrb	lr, [r0, r7]
    f1f4:	rsb	r0, lr, #1
    f1f8:	ldr	r6, [r1, r0, lsl #4]!
    f1fc:	sub	r0, r7, #2
    f200:	cmp	r0, #200	; 0xc8
    f204:	ldmib	r1, {r2, r3}
    f208:	ldr	r1, [r1, #12]
    f20c:	lsr	r5, r6, #24
    f210:	lsr	r4, r6, #16
    f214:	lsr	sl, r6, #8
    f218:	str	r1, [sp, #28]
    f21c:	bhi	10120 <sfbpf_parse+0x1148>
    f220:	add	r1, pc, #4
    f224:	ldr	r0, [r1, r0, lsl #2]
    f228:	add	pc, r1, r0
    f22c:	.word	0x00000dd4
    f230:	.word	0x00000ef4
    f234:	.word	0x00000bf8
    f238:	.word	0x00000ef4
    f23c:	.word	0x00000370
    f240:	.word	0x00000370
    f244:	.word	0x00000340
    f248:	.word	0x00000340
    f24c:	.word	0x00000324
    f250:	.word	0x00000324
    f254:	.word	0x00000ef4
    f258:	.word	0x000003f0
    f25c:	.word	0x00000324
    f260:	.word	0x000006a8
    f264:	.word	0x00000538
    f268:	.word	0x000005f0
    f26c:	.word	0x0000055c
    f270:	.word	0x000004fc
    f274:	.word	0x00000eac
    f278:	.word	0x00000e6c
    f27c:	.word	0x00000fb0
    f280:	.word	0x00000418
    f284:	.word	0x00000324
    f288:	.word	0x00000324
    f28c:	.word	0x00000ef4
    f290:	.word	0x00000370
    f294:	.word	0x00000340
    f298:	.word	0x000003f0
    f29c:	.word	0x00000ef4
    f2a0:	.word	0x00000ef4
    f2a4:	.word	0x00000418
    f2a8:	.word	0x000005c0
    f2ac:	.word	0x000005d0
    f2b0:	.word	0x00000464
    f2b4:	.word	0x000005e0
    f2b8:	.word	0x0000061c
    f2bc:	.word	0x00000464
    f2c0:	.word	0x00000430
    f2c4:	.word	0x00000a6c
    f2c8:	.word	0x0000062c
    f2cc:	.word	0x000006d4
    f2d0:	.word	0x00000a74
    f2d4:	.word	0x00000514
    f2d8:	.word	0x000007ec
    f2dc:	.word	0x0000051c
    f2e0:	.word	0x00000444
    f2e4:	.word	0x00000bcc
    f2e8:	.word	0x00000444
    f2ec:	.word	0x00000ef4
    f2f0:	.word	0x00000738
    f2f4:	.word	0x000003e4
    f2f8:	.word	0x00000388
    f2fc:	.word	0x00000364
    f300:	.word	0x00000364
    f304:	.word	0x00000358
    f308:	.word	0x00000358
    f30c:	.word	0x000004c0
    f310:	.word	0x000004cc
    f314:	.word	0x000003d8
    f318:	.word	0x00000474
    f31c:	.word	0x000003e4
    f320:	.word	0x00000388
    f324:	.word	0x00000364
    f328:	.word	0x000003d8
    f32c:	.word	0x00000358
    f330:	.word	0x000003e4
    f334:	.word	0x00000388
    f338:	.word	0x00000364
    f33c:	.word	0x00000358
    f340:	.word	0x000004c0
    f344:	.word	0x000004cc
    f348:	.word	0x000003d8
    f34c:	.word	0x00000474
    f350:	.word	0x00000b98
    f354:	.word	0x00000c0c
    f358:	.word	0x0000086c
    f35c:	.word	0x000003c4
    f360:	.word	0x000006f0
    f364:	.word	0x000003b8
    f368:	.word	0x00000550
    f36c:	.word	0x0000069c
    f370:	.word	0x000006fc
    f374:	.word	0x00000394
    f378:	.word	0x00000d98
    f37c:	.word	0x00000674
    f380:	.word	0x00000da4
    f384:	.word	0x00000df8
    f388:	.word	0x00000e4c
    f38c:	.word	0x000003a0
    f390:	.word	0x0000044c
    f394:	.word	0x000004d8
    f398:	.word	0x000004b4
    f39c:	.word	0x000003ac
    f3a0:	.word	0x00000b80
    f3a4:	.word	0x00000b8c
    f3a8:	.word	0x00000e40
    f3ac:	.word	0x00000480
    f3b0:	.word	0x00000878
    f3b4:	.word	0x000004f0
    f3b8:	.word	0x00000458
    f3bc:	.word	0x0000048c
    f3c0:	.word	0x000004e4
    f3c4:	.word	0x00000cdc
    f3c8:	.word	0x00000680
    f3cc:	.word	0x00000e04
    f3d0:	.word	0x00000708
    f3d4:	.word	0x00000db4
    f3d8:	.word	0x000007bc
    f3dc:	.word	0x00000650
    f3e0:	.word	0x000008c8
    f3e4:	.word	0x00000884
    f3e8:	.word	0x000008a4
    f3ec:	.word	0x000008e4
    f3f0:	.word	0x000008ec
    f3f4:	.word	0x0000088c
    f3f8:	.word	0x00000b40
    f3fc:	.word	0x000003d0
    f400:	.word	0x000003d0
    f404:	.word	0x00000c9c
    f408:	.word	0x00000ba4
    f40c:	.word	0x00000658
    f410:	.word	0x00000ce8
    f414:	.word	0x00000d60
    f418:	.word	0x00000d7c
    f41c:	.word	0x0000081c
    f420:	.word	0x000007e0
    f424:	.word	0x00000648
    f428:	.word	0x00000d04
    f42c:	.word	0x00000ef4
    f430:	.word	0x0000093c
    f434:	.word	0x00000ef4
    f438:	.word	0x0000076c
    f43c:	.word	0x00000d20
    f440:	.word	0x00000ef4
    f444:	.word	0x000009b0
    f448:	.word	0x000003d0
    f44c:	.word	0x00001084
    f450:	.word	0x00001088
    f454:	.word	0x000003ac
    f458:	.word	0x000004a0
    f45c:	.word	0x00000394
    f460:	.word	0x000003ac
    f464:	.word	0x000004a0
    f468:	.word	0x00000394
    f46c:	.word	0x00000c18
    f470:	.word	0x00000ef4
    f474:	.word	0x00000cb8
    f478:	.word	0x00000724
    f47c:	.word	0x00000744
    f480:	.word	0x00000758
    f484:	.word	0x00000808
    f488:	.word	0x00000858
    f48c:	.word	0x00000b58
    f490:	.word	0x00000a3c
    f494:	.word	0x00000b6c
    f498:	.word	0x00000c34
    f49c:	.word	0x00000c68
    f4a0:	.word	0x000004ac
    f4a4:	.word	0x00000964
    f4a8:	.word	0x00000480
    f4ac:	.word	0x0000097c
    f4b0:	.word	0x00000c84
    f4b4:	.word	0x00000bc0
    f4b8:	.word	0x00000aac
    f4bc:	.word	0x00000ef4
    f4c0:	.word	0x000004ac
    f4c4:	.word	0x000004e4
    f4c8:	.word	0x000004b4
    f4cc:	.word	0x000003c4
    f4d0:	.word	0x000003b8
    f4d4:	.word	0x0000044c
    f4d8:	.word	0x000003a0
    f4dc:	.word	0x000004d8
    f4e0:	.word	0x000004f0
    f4e4:	.word	0x00000458
    f4e8:	.word	0x0000048c
    f4ec:	.word	0x00000ab8
    f4f0:	.word	0x00000c90
    f4f4:	.word	0x00000ac4
    f4f8:	.word	0x00000a50
    f4fc:	.word	0x00000ef4
    f500:	.word	0x00000844
    f504:	.word	0x00000988
    f508:	.word	0x00000498
    f50c:	.word	0x00000908
    f510:	.word	0x00000ef4
    f514:	.word	0x00000340
    f518:	.word	0x000003c4
    f51c:	.word	0x000003b8
    f520:	.word	0x000003a0
    f524:	.word	0x000008c0
    f528:	.word	0x00000acc
    f52c:	.word	0x00000934
    f530:	.word	0x00000ad4
    f534:	.word	0x00000ef4
    f538:	.word	0x00000a58
    f53c:	.word	0x00000adc
    f540:	.word	0x00000498
    f544:	.word	0x00000af8
    f548:	.word	0x00000ef4
    f54c:	.word	0x00000340
    f550:	ldr	r6, [r9, #-16]
    f554:	ldr	r2, [r9, #-12]
    f558:	ldr	r3, [r9, #-8]
    f55c:	ldr	r0, [r9, #-4]
    f560:	b	10110 <sfbpf_parse+0x1138>
    f564:	rsb	r7, sl, #0
    f568:	b	f1e4 <sfbpf_parse+0x20c>
    f56c:	ldr	r0, [r9, #-20]	; 0xffffffec
    f570:	ldr	r1, [r9, #12]
    f574:	mov	r4, ip
    f578:	mov	r5, lr
    f57c:	bl	3b3c <sf_gen_or>
    f580:	b	f654 <sfbpf_parse+0x67c>
    f584:	mov	sl, #0
    f588:	mov	r6, #4
    f58c:	b	10080 <sfbpf_parse+0x10a8>
    f590:	mov	sl, #0
    f594:	mov	r6, #3
    f598:	b	10080 <sfbpf_parse+0x10a8>
    f59c:	ldr	r0, [r9, #-20]	; 0xffffffec
    f5a0:	ldr	r1, [r9, #12]
    f5a4:	mov	r4, ip
    f5a8:	mov	r5, lr
    f5ac:	bl	3a60 <sf_gen_and>
    f5b0:	b	f654 <sfbpf_parse+0x67c>
    f5b4:	mov	sl, #0
    f5b8:	mov	r6, #2
    f5bc:	b	10080 <sfbpf_parse+0x10a8>
    f5c0:	mov	sl, #0
    f5c4:	mov	r6, #16
    f5c8:	b	10080 <sfbpf_parse+0x10a8>
    f5cc:	mov	sl, #0
    f5d0:	mov	r6, #24
    f5d4:	b	10080 <sfbpf_parse+0x10a8>
    f5d8:	mov	sl, #0
    f5dc:	mov	r6, #32
    f5e0:	b	10080 <sfbpf_parse+0x10a8>
    f5e4:	mov	sl, #0
    f5e8:	mov	r6, #23
    f5ec:	b	10080 <sfbpf_parse+0x10a8>
    f5f0:	mov	sl, #0
    f5f4:	mov	r6, #22
    f5f8:	b	10080 <sfbpf_parse+0x10a8>
    f5fc:	ldr	r6, [r9]
    f600:	b	10114 <sfbpf_parse+0x113c>
    f604:	mov	sl, #0
    f608:	mov	r6, #7
    f60c:	b	10080 <sfbpf_parse+0x10a8>
    f610:	mov	sl, #0
    f614:	mov	r6, #1
    f618:	b	10080 <sfbpf_parse+0x10a8>
    f61c:	ldr	r6, [r9, #-16]
    f620:	ldr	r1, [r9]
    f624:	str	r2, [sp, #16]
    f628:	mov	r0, #0
    f62c:	mov	r4, ip
    f630:	mov	r5, lr
    f634:	mov	sl, r3
    f638:	mov	r2, r6
    f63c:	bl	7fe0 <sf_gen_ncode>
    f640:	b	10100 <sfbpf_parse+0x1128>
    f644:	ldr	r0, [r9, #12]
    f648:	mov	r4, ip
    f64c:	mov	r5, lr
    f650:	bl	3bf4 <sf_gen_not>
    f654:	mov	lr, r5
    f658:	mov	ip, r4
    f65c:	ldr	r6, [r9]
    f660:	ldr	r2, [r9, #4]
    f664:	ldr	r3, [r9, #8]
    f668:	ldr	r0, [r9, #12]
    f66c:	b	10110 <sfbpf_parse+0x1138>
    f670:	ldr	r0, [r9, #12]
    f674:	b	fe20 <sfbpf_parse+0xe48>
    f678:	mov	sl, #0
    f67c:	mov	r6, #25
    f680:	b	10080 <sfbpf_parse+0x10a8>
    f684:	mov	sl, #0
    f688:	mov	r6, #28
    f68c:	b	10080 <sfbpf_parse+0x10a8>
    f690:	ldrb	r6, [r9]
    f694:	ldr	sl, [r9, #-16]
    f698:	mov	r4, #0
    f69c:	b	10120 <sfbpf_parse+0x1148>
    f6a0:	mov	sl, #0
    f6a4:	mov	r6, #8
    f6a8:	b	10080 <sfbpf_parse+0x10a8>
    f6ac:	mov	sl, #0
    f6b0:	mov	r6, #38	; 0x26
    f6b4:	b	10080 <sfbpf_parse+0x10a8>
    f6b8:	mov	sl, #0
    f6bc:	mov	r6, #29
    f6c0:	b	10080 <sfbpf_parse+0x10a8>
    f6c4:	ldr	r0, [r9, #-4]
    f6c8:	b	fe20 <sfbpf_parse+0xe48>
    f6cc:	mov	sl, #0
    f6d0:	mov	r6, #48	; 0x30
    f6d4:	b	10080 <sfbpf_parse+0x10a8>
    f6d8:	ldr	r6, [r9, #-16]
    f6dc:	b	10114 <sfbpf_parse+0x113c>
    f6e0:	mov	sl, #0
    f6e4:	mov	r6, #31
    f6e8:	b	10080 <sfbpf_parse+0x10a8>
    f6ec:	mov	sl, #0
    f6f0:	mov	r6, #5
    f6f4:	b	10080 <sfbpf_parse+0x10a8>
    f6f8:	mov	sl, #0
    f6fc:	mov	r6, #6
    f700:	b	10080 <sfbpf_parse+0x10a8>
    f704:	mov	sl, #0
    f708:	mov	r6, #26
    f70c:	b	10080 <sfbpf_parse+0x10a8>
    f710:	mov	sl, #0
    f714:	mov	r6, #30
    f718:	b	10080 <sfbpf_parse+0x10a8>
    f71c:	mov	sl, #0
    f720:	mov	r6, #27
    f724:	b	10080 <sfbpf_parse+0x10a8>
    f728:	str	r2, [sp, #16]
    f72c:	ldr	r6, [r9, #-48]	; 0xffffffd0
    f730:	ldr	r0, [r9, #-32]	; 0xffffffe0
    f734:	ldr	r2, [r9]
    f738:	mov	r1, #0
    f73c:	b	100ec <sfbpf_parse+0x1114>
    f740:	ldr	r0, [r9]
    f744:	b	fe20 <sfbpf_parse+0xe48>
    f748:	ldr	r0, [r9]
    f74c:	mov	sl, ip
    f750:	mov	r5, lr
    f754:	mov	r6, r2
    f758:	mov	r4, r3
    f75c:	bl	ac4c <sf_gen_atmmulti_abbrev>
    f760:	b	fe10 <sfbpf_parse+0xe38>
    f764:	str	r2, [sp, #16]
    f768:	ldr	r6, [r9, #-48]	; 0xffffffd0
    f76c:	ldr	r0, [r9, #-32]	; 0xffffffe0
    f770:	ldr	r2, [r9]
    f774:	mov	r1, #0
    f778:	b	f830 <sfbpf_parse+0x858>
    f77c:	mov	sl, #0
    f780:	mov	r6, #12
    f784:	b	10080 <sfbpf_parse+0x10a8>
    f788:	str	r2, [sp, #16]
    f78c:	stmib	sp, {r3, lr}
    f790:	mvn	r0, #2
    f794:	str	ip, [sp, #12]
    f798:	ldr	r6, [r9, #-16]
    f79c:	uxtab	r0, r0, r6
    f7a0:	cmp	r0, #4
    f7a4:	bhi	f7c8 <sfbpf_parse+0x7f0>
    f7a8:	add	r1, pc, #4
    f7ac:	ldr	r0, [r1, r0, lsl #2]
    f7b0:	add	pc, r1, r0
    f7b4:	.word	0x00000b40
    f7b8:	.word	0x00000014
    f7bc:	.word	0x00000b4c
    f7c0:	.word	0x00000b58
    f7c4:	.word	0x00000b64
    f7c8:	ldr	r0, [r9]
    f7cc:	mov	r1, #0
    f7d0:	mov	r2, r6
    f7d4:	bl	7fe0 <sf_gen_ncode>
    f7d8:	str	r0, [sp, #28]
    f7dc:	lsr	sl, r6, #8
    f7e0:	lsr	r4, r6, #16
    f7e4:	lsr	r5, r6, #24
    f7e8:	b	10264 <sfbpf_parse+0x128c>
    f7ec:	ldrb	r6, [r9]
    f7f0:	ldr	sl, [r9, #-32]	; 0xffffffe0
    f7f4:	ldr	r4, [r9, #-16]
    f7f8:	b	10120 <sfbpf_parse+0x1148>
    f7fc:	ldr	sl, [r9, #-16]
    f800:	ldr	r4, [r9]
    f804:	mov	r6, #0
    f808:	b	10120 <sfbpf_parse+0x1148>
    f80c:	ldr	sl, [r9, #-16]
    f810:	mov	r4, #0
    f814:	mov	r6, #5
    f818:	b	10120 <sfbpf_parse+0x1148>
    f81c:	ldr	r6, [r9, #-48]	; 0xffffffd0
    f820:	ldr	r0, [r9, #-32]	; 0xffffffe0
    f824:	ldr	r1, [r9]
    f828:	str	r2, [sp, #16]
    f82c:	mov	r2, #0
    f830:	mov	sl, r3
    f834:	mov	r3, r6
    f838:	mov	r4, ip
    f83c:	mov	r5, lr
    f840:	bl	7ecc <sf_gen_mcode>
    f844:	b	10100 <sfbpf_parse+0x1128>
    f848:	ldr	sl, [r9, #-16]
    f84c:	mov	r4, #0
    f850:	mov	r6, #6
    f854:	b	10120 <sfbpf_parse+0x1148>
    f858:	ldr	r0, [r9]
    f85c:	mov	sl, ip
    f860:	mov	r5, lr
    f864:	mov	r6, r2
    f868:	mov	r4, r3
    f86c:	bl	3c08 <sf_gen_proto_abbrev>
    f870:	b	fe10 <sfbpf_parse+0xe38>
    f874:	ldr	r0, [r9]
    f878:	b	fa54 <sfbpf_parse+0xa7c>
    f87c:	mov	r0, #0
    f880:	b	faf8 <sfbpf_parse+0xb20>
    f884:	ldr	r0, [r9]
    f888:	mov	sl, ip
    f88c:	mov	r5, lr
    f890:	mov	r6, r2
    f894:	mov	r4, r3
    f898:	bl	9dbc <sf_gen_pf_rnr>
    f89c:	b	10048 <sfbpf_parse+0x1070>
    f8a0:	mov	sl, #0
    f8a4:	mov	r6, #17
    f8a8:	b	10080 <sfbpf_parse+0x10a8>
    f8ac:	ldr	r0, [r9, #-16]
    f8b0:	mov	sl, ip
    f8b4:	mov	r5, lr
    f8b8:	mov	r6, r2
    f8bc:	mov	r4, r3
    f8c0:	bl	934c <sf_gen_broadcast>
    f8c4:	b	10048 <sfbpf_parse+0x1070>
    f8c8:	mov	sl, #0
    f8cc:	mov	r6, #13
    f8d0:	b	10080 <sfbpf_parse+0x10a8>
    f8d4:	ldr	r6, [r9, #-16]
    f8d8:	ldr	r0, [r9]
    f8dc:	str	ip, [sp, #12]
    f8e0:	str	r2, [sp, #16]
    f8e4:	stmib	sp, {r3, lr}
    f8e8:	mov	r1, r6
    f8ec:	lsr	r5, r6, #24
    f8f0:	lsr	r4, r6, #16
    f8f4:	lsr	sl, r6, #8
    f8f8:	bl	5b64 <sf_gen_scode>
    f8fc:	b	fd58 <sfbpf_parse+0xd80>
    f900:	mov	sl, r2
    f904:	ldr	r1, [r9, #-32]	; 0xffffffe0
    f908:	ldr	r0, [r9, #-16]
    f90c:	ldr	r2, [r9]
    f910:	mov	r6, r3
    f914:	mov	r3, #0
    f918:	b	fcb8 <sfbpf_parse+0xce0>
    f91c:	mov	sl, #0
    f920:	mov	r6, #11
    f924:	b	10080 <sfbpf_parse+0x10a8>
    f928:	mov	sl, #0
    f92c:	mov	r6, #14
    f930:	b	10080 <sfbpf_parse+0x10a8>
    f934:	ldr	r0, [r9]
    f938:	mov	sl, ip
    f93c:	mov	r5, lr
    f940:	mov	r6, r2
    f944:	mov	r4, r3
    f948:	bl	91f8 <sf_gen_less>
    f94c:	b	10048 <sfbpf_parse+0x1070>
    f950:	mov	sl, r2
    f954:	ldr	r0, [r9, #-80]	; 0xffffffb0
    f958:	ldr	r1, [r9, #-48]	; 0xffffffd0
    f95c:	ldr	r2, [r9, #-16]
    f960:	b	fef4 <sfbpf_parse+0xf1c>
    f964:	mov	r6, #0
    f968:	mov	sl, #0
    f96c:	b	10080 <sfbpf_parse+0x10a8>
    f970:	mov	sl, r2
    f974:	ldr	r1, [r9, #-32]	; 0xffffffe0
    f978:	ldr	r2, [r9]
    f97c:	mov	r0, #0
    f980:	b	fe70 <sfbpf_parse+0xe98>
    f984:	mov	sl, r2
    f988:	ldr	r1, [r9, #-32]	; 0xffffffe0
    f98c:	ldr	r2, [r9]
    f990:	mov	r0, #16
    f994:	b	fe70 <sfbpf_parse+0xe98>
    f998:	ldr	r0, [r9, #-32]	; 0xffffffe0
    f99c:	str	r3, [sp, #4]
    f9a0:	str	r2, [sp, #16]
    f9a4:	str	ip, [sp, #12]
    f9a8:	str	lr, [sp, #8]
    f9ac:	cmp	r0, #0
    f9b0:	beq	1021c <sfbpf_parse+0x1244>
    f9b4:	mov	r1, #0
    f9b8:	cmp	r1, #2
    f9bc:	beq	102e8 <sfbpf_parse+0x1310>
    f9c0:	ldr	r2, [pc, #2444]	; 10354 <sfbpf_parse+0x137c>
    f9c4:	add	r2, pc, r2
    f9c8:	add	r3, r2, r1, lsl #3
    f9cc:	add	r1, r1, #1
    f9d0:	ldr	r3, [r3, #8]
    f9d4:	cmp	r0, r3
    f9d8:	bne	f9b8 <sfbpf_parse+0x9e0>
    f9dc:	add	r0, r2, r1, lsl #3
    f9e0:	ldr	r1, [r0, #4]
    f9e4:	b	10224 <sfbpf_parse+0x124c>
    f9e8:	mov	sl, r2
    f9ec:	ldr	r1, [r9, #-32]	; 0xffffffe0
    f9f0:	ldr	r0, [r9, #-16]
    f9f4:	ldr	r2, [r9]
    f9f8:	mov	r4, ip
    f9fc:	mov	r5, lr
    fa00:	mov	r6, r3
    fa04:	bl	9248 <sf_gen_byteop>
    fa08:	b	fe80 <sfbpf_parse+0xea8>
    fa0c:	ldr	r0, [r9]
    fa10:	mov	r1, #12
    fa14:	b	fa58 <sfbpf_parse+0xa80>
    fa18:	ldr	r0, [r9]
    fa1c:	mov	sl, ip
    fa20:	mov	r5, lr
    fa24:	mov	r6, r2
    fa28:	mov	r4, r3
    fa2c:	bl	a5bc <sf_gen_atmtype_abbrev>
    fa30:	b	fe10 <sfbpf_parse+0xe38>
    fa34:	mov	sl, r2
    fa38:	ldr	r1, [r9, #-32]	; 0xffffffe0
    fa3c:	ldr	r2, [r9]
    fa40:	mov	r0, #32
    fa44:	b	fe70 <sfbpf_parse+0xe98>
    fa48:	ldr	r0, [r9, #-32]	; 0xffffffe0
    fa4c:	ldr	r1, [r9]
    fa50:	orr	r0, r1, r0
    fa54:	mov	r1, #252	; 0xfc
    fa58:	mov	sl, ip
    fa5c:	mov	r5, lr
    fa60:	mov	r6, r2
    fa64:	mov	r4, r3
    fa68:	bl	9e1c <sf_gen_p80211_type>
    fa6c:	b	10048 <sfbpf_parse+0x1070>
    fa70:	str	r2, [sp, #16]
    fa74:	ldr	r0, [r9, #-28]	; 0xffffffe4
    fa78:	ldr	r2, [r9, #-16]
    fa7c:	ldr	r1, [r9]
    fa80:	b	fb54 <sfbpf_parse+0xb7c>
    fa84:	mov	sl, r2
    fa88:	ldr	r1, [r9, #-32]	; 0xffffffe0
    fa8c:	ldr	r2, [r9]
    fa90:	mov	r0, #48	; 0x30
    fa94:	b	fe70 <sfbpf_parse+0xe98>
    fa98:	mov	sl, #0
    fa9c:	mov	r6, #21
    faa0:	b	10080 <sfbpf_parse+0x10a8>
    faa4:	mov	sl, #0
    faa8:	mov	r6, #37	; 0x25
    faac:	b	10080 <sfbpf_parse+0x10a8>
    fab0:	ldr	r0, [r9]
    fab4:	b	fad4 <sfbpf_parse+0xafc>
    fab8:	mov	sl, ip
    fabc:	mov	r5, lr
    fac0:	mov	r6, r2
    fac4:	mov	r4, r3
    fac8:	bl	a308 <sf_gen_pppoed>
    facc:	b	10048 <sfbpf_parse+0x1070>
    fad0:	mvn	r0, #0
    fad4:	mov	sl, ip
    fad8:	mov	r5, lr
    fadc:	mov	r6, r2
    fae0:	mov	r4, r3
    fae4:	bl	a050 <sf_gen_vlan>
    fae8:	b	10048 <sfbpf_parse+0x1070>
    faec:	mov	r3, #1
    faf0:	b	10120 <sfbpf_parse+0x1148>
    faf4:	mov	r0, #1
    faf8:	mov	sl, ip
    fafc:	mov	r5, lr
    fb00:	mov	r6, r2
    fb04:	mov	r4, r3
    fb08:	bl	9bcc <sf_gen_inbound>
    fb0c:	b	10048 <sfbpf_parse+0x1070>
    fb10:	ldr	r0, [r9]
    fb14:	b	fb1c <sfbpf_parse+0xb44>
    fb18:	mvn	r0, #0
    fb1c:	mov	sl, ip
    fb20:	mov	r5, lr
    fb24:	mov	r6, r2
    fb28:	mov	r4, r3
    fb2c:	bl	a190 <sf_gen_mpls>
    fb30:	b	10048 <sfbpf_parse+0x1070>
    fb34:	ldr	r2, [r9, #-12]
    fb38:	sub	r0, r2, #51	; 0x33
    fb3c:	cmp	r0, #1
    fb40:	bhi	10120 <sfbpf_parse+0x1148>
    fb44:	ldr	r1, [r9]
    fb48:	mov	r0, r2
    fb4c:	str	r2, [sp, #16]
    fb50:	mov	r2, #16
    fb54:	str	r3, [sp, #4]
    fb58:	mov	r3, #0
    fb5c:	b	fbcc <sfbpf_parse+0xbf4>
    fb60:	mov	r3, #3
    fb64:	b	10120 <sfbpf_parse+0x1148>
    fb68:	str	r2, [sp, #16]
    fb6c:	stmib	sp, {r3, lr}
    fb70:	str	ip, [sp, #12]
    fb74:	ldr	r0, [r9]
    fb78:	ldr	r1, [pc, #2000]	; 10350 <sfbpf_parse+0x1378>
    fb7c:	add	r1, pc, r1
    fb80:	bl	103a0 <str2tok>
    fb84:	cmn	r0, #1
    fb88:	bne	10234 <sfbpf_parse+0x125c>
    fb8c:	b	102dc <sfbpf_parse+0x1304>
    fb90:	mov	sl, ip
    fb94:	mov	r5, lr
    fb98:	mov	r6, r2
    fb9c:	mov	r4, r3
    fba0:	bl	8f3c <sf_gen_loadlen>
    fba4:	b	10048 <sfbpf_parse+0x1070>
    fba8:	mov	sl, #0
    fbac:	mov	r6, #124	; 0x7c
    fbb0:	b	10080 <sfbpf_parse+0x10a8>
    fbb4:	str	r2, [sp, #16]
    fbb8:	ldr	r0, [r9, #-28]	; 0xffffffe4
    fbbc:	ldr	r2, [r9, #-16]
    fbc0:	ldr	r1, [r9]
    fbc4:	str	r3, [sp, #4]
    fbc8:	mov	r3, #1
    fbcc:	str	ip, [sp, #12]
    fbd0:	str	lr, [sp, #8]
    fbd4:	bl	a38c <sf_gen_atmfield_code>
    fbd8:	b	fd58 <sfbpf_parse+0xd80>
    fbdc:	str	r2, [sp, #16]
    fbe0:	stmib	sp, {r3, lr}
    fbe4:	str	ip, [sp, #12]
    fbe8:	ldr	r0, [r9]
    fbec:	ldr	r1, [pc, #1900]	; 10360 <sfbpf_parse+0x1388>
    fbf0:	add	r1, pc, r1
    fbf4:	bl	ed6c <sfbpf_strcasecmp>
    fbf8:	mov	sl, #0
    fbfc:	cmp	r0, #0
    fc00:	beq	10248 <sfbpf_parse+0x1270>
    fc04:	ldr	r0, [r9]
    fc08:	ldr	r1, [pc, #1876]	; 10364 <sfbpf_parse+0x138c>
    fc0c:	add	r1, pc, r1
    fc10:	bl	ed6c <sfbpf_strcasecmp>
    fc14:	cmp	r0, #0
    fc18:	beq	10250 <sfbpf_parse+0x1278>
    fc1c:	ldr	r0, [r9]
    fc20:	ldr	r1, [pc, #1856]	; 10368 <sfbpf_parse+0x1390>
    fc24:	add	r1, pc, r1
    fc28:	bl	ed6c <sfbpf_strcasecmp>
    fc2c:	cmp	r0, #0
    fc30:	beq	10258 <sfbpf_parse+0x1280>
    fc34:	ldr	r0, [r9]
    fc38:	ldr	r1, [pc, #1836]	; 1036c <sfbpf_parse+0x1394>
    fc3c:	add	r1, pc, r1
    fc40:	bl	ed6c <sfbpf_strcasecmp>
    fc44:	ldr	ip, [sp, #12]
    fc48:	ldr	r2, [sp, #16]
    fc4c:	ldmib	sp, {r3, lr}
    fc50:	mov	r6, #3
    fc54:	cmp	r0, #0
    fc58:	mov	r4, #0
    fc5c:	mov	r5, #0
    fc60:	beq	10120 <sfbpf_parse+0x1148>
    fc64:	b	10324 <sfbpf_parse+0x134c>
    fc68:	mov	sl, r2
    fc6c:	ldr	r1, [r9, #-32]	; 0xffffffe0
    fc70:	ldr	r2, [r9]
    fc74:	mov	r0, #64	; 0x40
    fc78:	b	fe70 <sfbpf_parse+0xe98>
    fc7c:	mov	r2, #52	; 0x34
    fc80:	b	10120 <sfbpf_parse+0x1148>
    fc84:	str	r2, [sp, #16]
    fc88:	ldr	r0, [r9, #-24]	; 0xffffffe8
    fc8c:	ldr	r2, [r9, #-16]
    fc90:	ldr	r1, [r9]
    fc94:	b	fd44 <sfbpf_parse+0xd6c>
    fc98:	ldr	r6, [r9, #-32]	; 0xffffffe0
    fc9c:	b	f55c <sfbpf_parse+0x584>
    fca0:	mov	sl, r2
    fca4:	ldr	r1, [r9, #-32]	; 0xffffffe0
    fca8:	ldr	r0, [r9, #-16]
    fcac:	ldr	r2, [r9]
    fcb0:	mov	r6, r3
    fcb4:	mov	r3, #1
    fcb8:	mov	r4, ip
    fcbc:	mov	r5, lr
    fcc0:	bl	8dac <sf_gen_relation>
    fcc4:	mov	r3, r6
    fcc8:	mov	r2, sl
    fccc:	mov	lr, r5
    fcd0:	mov	ip, r4
    fcd4:	b	fe20 <sfbpf_parse+0xe48>
    fcd8:	mov	sl, #0
    fcdc:	mov	r6, #61	; 0x3d
    fce0:	b	10080 <sfbpf_parse+0x10a8>
    fce4:	mov	sl, #0
    fce8:	mov	r6, #70	; 0x46
    fcec:	b	10080 <sfbpf_parse+0x10a8>
    fcf0:	mov	r2, #51	; 0x33
    fcf4:	b	10120 <sfbpf_parse+0x1148>
    fcf8:	mov	r3, #2
    fcfc:	b	10120 <sfbpf_parse+0x1148>
    fd00:	mov	r3, #4
    fd04:	b	10120 <sfbpf_parse+0x1148>
    fd08:	str	r2, [sp, #16]
    fd0c:	ldr	r0, [r9, #-24]	; 0xffffffe8
    fd10:	ldr	r2, [r9, #-16]
    fd14:	ldr	r1, [r9]
    fd18:	str	r3, [sp, #4]
    fd1c:	mov	r3, #1
    fd20:	b	fd4c <sfbpf_parse+0xd74>
    fd24:	ldr	r3, [r9, #-8]
    fd28:	sub	r0, r3, #1
    fd2c:	cmp	r0, #3
    fd30:	bhi	10120 <sfbpf_parse+0x1148>
    fd34:	ldr	r1, [r9]
    fd38:	str	r2, [sp, #16]
    fd3c:	mov	r0, r3
    fd40:	mov	r2, #16
    fd44:	str	r3, [sp, #4]
    fd48:	mov	r3, #0
    fd4c:	str	ip, [sp, #12]
    fd50:	str	lr, [sp, #8]
    fd54:	bl	aa90 <sf_gen_mtp3field_code>
    fd58:	ldr	r2, [sp, #16]
    fd5c:	ldmib	sp, {r3, lr}
    fd60:	ldr	ip, [sp, #12]
    fd64:	str	r0, [sp, #28]
    fd68:	b	10120 <sfbpf_parse+0x1148>
    fd6c:	mov	sl, ip
    fd70:	mov	r5, lr
    fd74:	mov	r6, r2
    fd78:	mov	r4, r3
    fd7c:	bl	a310 <sf_gen_pppoes>
    fd80:	b	10048 <sfbpf_parse+0x1070>
    fd84:	mov	sl, r2
    fd88:	ldr	r1, [r9, #-32]	; 0xffffffe0
    fd8c:	ldr	r2, [r9]
    fd90:	mov	r0, #80	; 0x50
    fd94:	b	fe70 <sfbpf_parse+0xe98>
    fd98:	mov	sl, r2
    fd9c:	ldr	r1, [r9, #-32]	; 0xffffffe0
    fda0:	ldr	r2, [r9]
    fda4:	mov	r0, #96	; 0x60
    fda8:	b	fe70 <sfbpf_parse+0xe98>
    fdac:	mov	sl, #0
    fdb0:	mov	r6, #33	; 0x21
    fdb4:	b	10080 <sfbpf_parse+0x10a8>
    fdb8:	mov	sl, #0
    fdbc:	mov	r6, #39	; 0x27
    fdc0:	b	10080 <sfbpf_parse+0x10a8>
    fdc4:	mov	sl, #0
    fdc8:	mov	r6, #9
    fdcc:	b	10080 <sfbpf_parse+0x10a8>
    fdd0:	ldr	r0, [r9]
    fdd4:	mov	sl, ip
    fdd8:	mov	r5, lr
    fddc:	mov	r6, r2
    fde0:	mov	r4, r3
    fde4:	bl	9da4 <sf_gen_pf_ruleset>
    fde8:	b	10048 <sfbpf_parse+0x1070>
    fdec:	mov	sl, #0
    fdf0:	mov	r6, #62	; 0x3e
    fdf4:	b	10080 <sfbpf_parse+0x10a8>
    fdf8:	ldr	r0, [r9]
    fdfc:	mov	sl, ip
    fe00:	mov	r5, lr
    fe04:	mov	r6, r2
    fe08:	mov	r4, r3
    fe0c:	bl	a908 <sf_gen_mtp2type_abbrev>
    fe10:	mov	r3, r4
    fe14:	mov	r2, r6
    fe18:	mov	lr, r5
    fe1c:	mov	ip, sl
    fe20:	str	r0, [sp, #28]
    fe24:	mov	r6, #255	; 0xff
    fe28:	mov	sl, #255	; 0xff
    fe2c:	mov	r4, #255	; 0xff
    fe30:	mov	r5, #255	; 0xff
    fe34:	b	10120 <sfbpf_parse+0x1148>
    fe38:	mov	sl, #0
    fe3c:	mov	r6, #10
    fe40:	b	10080 <sfbpf_parse+0x10a8>
    fe44:	ldr	r0, [r9]
    fe48:	mov	sl, ip
    fe4c:	mov	r5, lr
    fe50:	mov	r6, r2
    fe54:	mov	r4, r3
    fe58:	bl	8f94 <sf_gen_loadi>
    fe5c:	b	10048 <sfbpf_parse+0x1070>
    fe60:	mov	sl, r2
    fe64:	ldr	r1, [r9, #-32]	; 0xffffffe0
    fe68:	ldr	r2, [r9]
    fe6c:	mov	r0, #112	; 0x70
    fe70:	mov	r4, ip
    fe74:	mov	r5, lr
    fe78:	mov	r6, r3
    fe7c:	bl	9098 <sf_gen_arth>
    fe80:	mov	r3, r6
    fe84:	mov	r2, sl
    fe88:	mov	lr, r5
    fe8c:	mov	ip, r4
    fe90:	b	10058 <sfbpf_parse+0x1080>
    fe94:	ldr	r0, [r9]
    fe98:	mov	sl, ip
    fe9c:	mov	r5, lr
    fea0:	mov	r6, r2
    fea4:	mov	r4, r3
    fea8:	bl	8ff4 <sf_gen_neg>
    feac:	b	10048 <sfbpf_parse+0x1070>
    feb0:	mov	sl, #0
    feb4:	mov	r6, #60	; 0x3c
    feb8:	b	10080 <sfbpf_parse+0x10a8>
    febc:	mov	sl, #0
    fec0:	mov	r6, #71	; 0x47
    fec4:	b	10080 <sfbpf_parse+0x10a8>
    fec8:	ldr	r0, [r9]
    fecc:	mov	sl, ip
    fed0:	mov	r5, lr
    fed4:	mov	r6, r2
    fed8:	mov	r4, r3
    fedc:	bl	9d8c <sf_gen_pf_ifname>
    fee0:	b	10048 <sfbpf_parse+0x1070>
    fee4:	ldr	r0, [r9, #-48]	; 0xffffffd0
    fee8:	ldr	r1, [r9, #-16]
    feec:	mov	sl, r2
    fef0:	mov	r2, #1
    fef4:	mov	r4, ip
    fef8:	mov	r5, lr
    fefc:	mov	r6, r3
    ff00:	bl	85bc <sf_gen_load>
    ff04:	b	fe80 <sfbpf_parse+0xea8>
    ff08:	mov	sl, #0
    ff0c:	mov	r6, #40	; 0x28
    ff10:	b	10080 <sfbpf_parse+0x10a8>
    ff14:	ldr	r0, [r9]
    ff18:	mov	sl, ip
    ff1c:	mov	r5, lr
    ff20:	mov	r6, r2
    ff24:	mov	r4, r3
    ff28:	bl	9dd4 <sf_gen_pf_srnr>
    ff2c:	b	10048 <sfbpf_parse+0x1070>
    ff30:	ldr	r0, [r9]
    ff34:	mov	sl, ip
    ff38:	mov	r5, lr
    ff3c:	mov	r6, r2
    ff40:	mov	r4, r3
    ff44:	bl	9ea0 <sf_gen_p80211_fcdir>
    ff48:	b	10048 <sfbpf_parse+0x1070>
    ff4c:	mov	r4, #0
    ff50:	str	r2, [sp, #16]
    ff54:	stmib	sp, {r3, lr}
    ff58:	str	ip, [sp, #12]
    ff5c:	ldr	r5, [pc, #1012]	; 10358 <sfbpf_parse+0x1380>
    ff60:	add	r5, pc, r5
    ff64:	add	r0, r5, r4, lsl #3
    ff68:	ldr	r1, [r0, #4]
    ff6c:	ldr	r0, [r9]
    ff70:	bl	103a0 <str2tok>
    ff74:	cmn	r0, #1
    ff78:	bne	1008c <sfbpf_parse+0x10b4>
    ff7c:	add	r4, r4, #1
    ff80:	cmp	r4, #3
    ff84:	bne	ff5c <sfbpf_parse+0xf84>
    ff88:	b	102dc <sfbpf_parse+0x1304>
    ff8c:	ldr	r0, [r9]
    ff90:	mov	sl, ip
    ff94:	mov	r5, lr
    ff98:	mov	r6, r2
    ff9c:	mov	r4, r3
    ffa0:	bl	9dec <sf_gen_pf_reason>
    ffa4:	b	10048 <sfbpf_parse+0x1070>
    ffa8:	ldr	r0, [r9]
    ffac:	mov	sl, ip
    ffb0:	mov	r5, lr
    ffb4:	mov	r6, r2
    ffb8:	mov	r4, r3
    ffbc:	bl	9e04 <sf_gen_pf_action>
    ffc0:	b	10048 <sfbpf_parse+0x1070>
    ffc4:	mov	sl, #0
    ffc8:	mov	r6, #15
    ffcc:	b	10080 <sfbpf_parse+0x10a8>
    ffd0:	mov	sl, #0
    ffd4:	mov	r6, #18
    ffd8:	b	10080 <sfbpf_parse+0x10a8>
    ffdc:	.word	0x000219bc
    ffe0:	ldr	r0, [r9]
    ffe4:	mov	sl, ip
    ffe8:	mov	r5, lr
    ffec:	mov	r6, r2
    fff0:	mov	r4, r3
    fff4:	bl	91b8 <sf_gen_greater>
    fff8:	b	10048 <sfbpf_parse+0x1070>
    fffc:	.word	0x000219b0
   10000:	ldr	r0, [r9, #12]
   10004:	str	ip, [sp, #12]
   10008:	str	r2, [sp, #16]
   1000c:	stmib	sp, {r3, lr}
   10010:	bl	2ef4 <sf_finish_parse>
   10014:	ldr	r2, [sp, #16]
   10018:	ldmib	sp, {r3, lr}
   1001c:	ldr	ip, [sp, #12]
   10020:	b	10120 <sfbpf_parse+0x1148>
   10024:	mov	sl, #0
   10028:	mov	r6, #19
   1002c:	b	10080 <sfbpf_parse+0x10a8>
   10030:	ldr	r0, [r9, #-16]
   10034:	mov	sl, ip
   10038:	mov	r5, lr
   1003c:	mov	r6, r2
   10040:	mov	r4, r3
   10044:	bl	9600 <sf_gen_multicast>
   10048:	mov	r3, r4
   1004c:	mov	r2, r6
   10050:	mov	lr, r5
   10054:	mov	ip, sl
   10058:	mov	r6, r0
   1005c:	lsr	r5, r0, #24
   10060:	lsr	r4, r0, #16
   10064:	lsr	sl, r0, #8
   10068:	b	10120 <sfbpf_parse+0x1148>
   1006c:	mov	sl, #0
   10070:	mov	r6, #36	; 0x24
   10074:	b	10080 <sfbpf_parse+0x10a8>
   10078:	mov	sl, #0
   1007c:	mov	r6, #20
   10080:	mov	r4, #0
   10084:	mov	r5, #0
   10088:	b	10120 <sfbpf_parse+0x1148>
   1008c:	ldr	r1, [r5, r4, lsl #3]
   10090:	orr	r6, r1, r0
   10094:	b	10238 <sfbpf_parse+0x1260>
   10098:	ldr	r6, [r9, #-16]
   1009c:	ldr	r0, [r9]
   100a0:	str	ip, [sp, #12]
   100a4:	mov	r5, lr
   100a8:	mov	r4, r2
   100ac:	mov	sl, r3
   100b0:	mov	r1, r6
   100b4:	bl	8408 <sf_gen_ecode>
   100b8:	b	101fc <sfbpf_parse+0x1224>
   100bc:	.word	0x00004fd2
   100c0:	.word	0x000218b4
   100c4:	.word	0x00021898
   100c8:	.word	0x000051a2
   100cc:	.word	0x00021864
   100d0:	.word	0x000052e0
   100d4:	.word	0x00005804
   100d8:	ldr	r6, [r9, #-16]
   100dc:	ldr	r0, [r9]
   100e0:	str	r2, [sp, #16]
   100e4:	mov	r1, #0
   100e8:	mov	r2, #128	; 0x80
   100ec:	mov	sl, r3
   100f0:	mov	r3, r6
   100f4:	mov	r4, ip
   100f8:	mov	r5, lr
   100fc:	bl	8244 <sf_gen_mcode6>
   10100:	ldr	r2, [sp, #16]
   10104:	mov	r3, sl
   10108:	mov	lr, r5
   1010c:	mov	ip, r4
   10110:	str	r0, [sp, #28]
   10114:	lsr	r5, r6, #24
   10118:	lsr	r4, r6, #16
   1011c:	lsr	sl, r6, #8
   10120:	uxtb	r0, r6
   10124:	uxtb	r1, r4
   10128:	sub	r9, r9, lr, lsl #4
   1012c:	bfi	r0, sl, #8, #8
   10130:	orr	r0, r0, r1, lsl #16
   10134:	orr	r0, r0, r5, lsl #24
   10138:	str	r0, [r9, #16]!
   1013c:	stmib	r9, {r2, r3}
   10140:	movw	r3, #669	; 0x29d
   10144:	ldr	r0, [sp, #28]
   10148:	str	r0, [r9, #12]
   1014c:	lsl	r0, lr, #1
   10150:	ldrsh	r2, [r8, -r0]!
   10154:	ldr	r0, [pc, #536]	; 10374 <sfbpf_parse+0x139c>
   10158:	ldr	r1, [pc, #536]	; 10378 <sfbpf_parse+0x13a0>
   1015c:	add	r0, pc, r0
   10160:	add	r1, pc, r1
   10164:	ldrb	r0, [r0, r7]
   10168:	sub	r0, r0, #126	; 0x7e
   1016c:	add	r1, r1, r0, lsl #1
   10170:	ldrsh	r1, [r1]
   10174:	add	r1, r2, r1
   10178:	cmp	r1, r3
   1017c:	bhi	101b4 <sfbpf_parse+0x11dc>
   10180:	ldr	r3, [pc, #500]	; 1037c <sfbpf_parse+0x13a4>
   10184:	uxth	r2, r2
   10188:	add	r3, pc, r3
   1018c:	add	r3, r3, r1, lsl #1
   10190:	ldrh	r3, [r3]
   10194:	cmp	r3, r2
   10198:	bne	101b4 <sfbpf_parse+0x11dc>
   1019c:	ldr	r0, [pc, #476]	; 10380 <sfbpf_parse+0x13a8>
   101a0:	add	r0, pc, r0
   101a4:	add	r0, r0, r1, lsl #1
   101a8:	b	101c0 <sfbpf_parse+0x11e8>
   101ac:	.word	0x00021818
   101b0:	.word	0x00021804
   101b4:	ldr	r1, [pc, #456]	; 10384 <sfbpf_parse+0x13ac>
   101b8:	add	r1, pc, r1
   101bc:	add	r0, r1, r0, lsl #1
   101c0:	ldr	r4, [sp, #24]
   101c4:	ldrsh	sl, [r0]
   101c8:	mov	r6, #15
   101cc:	add	r8, r8, #2
   101d0:	b	f020 <sfbpf_parse+0x48>
   101d4:	.word	0x00005d00
   101d8:	.word	0x00005dfa
   101dc:	ldr	r6, [r9, #-16]
   101e0:	ldr	r0, [r9]
   101e4:	str	ip, [sp, #12]
   101e8:	mov	r5, lr
   101ec:	mov	r4, r2
   101f0:	mov	sl, r3
   101f4:	mov	r1, r6
   101f8:	bl	9f20 <sf_gen_acode>
   101fc:	str	r0, [sp, #28]
   10200:	ldr	r0, [r9]
   10204:	bl	e5c <free@plt>
   10208:	ldr	ip, [sp, #12]
   1020c:	mov	r3, sl
   10210:	mov	r2, r4
   10214:	mov	lr, r5
   10218:	b	10114 <sfbpf_parse+0x113c>
   1021c:	ldr	r1, [pc, #280]	; 1033c <sfbpf_parse+0x1364>
   10220:	add	r1, pc, r1
   10224:	ldr	r0, [r9]
   10228:	bl	103a0 <str2tok>
   1022c:	cmn	r0, #1
   10230:	beq	10330 <sfbpf_parse+0x1358>
   10234:	mov	r6, r0
   10238:	lsr	r5, r6, #24
   1023c:	lsr	r4, r6, #16
   10240:	lsr	sl, r6, #8
   10244:	b	10264 <sfbpf_parse+0x128c>
   10248:	mov	r6, #0
   1024c:	b	1025c <sfbpf_parse+0x1284>
   10250:	mov	r6, #1
   10254:	b	1025c <sfbpf_parse+0x1284>
   10258:	mov	r6, #2
   1025c:	mov	r4, #0
   10260:	mov	r5, #0
   10264:	ldr	ip, [sp, #12]
   10268:	ldr	r2, [sp, #16]
   1026c:	ldmib	sp, {r3, lr}
   10270:	b	10120 <sfbpf_parse+0x1148>
   10274:	sub	r0, fp, #432	; 0x1b0
   10278:	mov	r6, #0
   1027c:	cmp	r4, r0
   10280:	bne	10290 <sfbpf_parse+0x12b8>
   10284:	b	10298 <sfbpf_parse+0x12c0>
   10288:	mov	r6, #1
   1028c:	mov	r4, r5
   10290:	mov	r0, r4
   10294:	bl	e5c <free@plt>
   10298:	mov	r0, r6
   1029c:	sub	sp, fp, #28
   102a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   102a4:	ldr	r0, [pc, #232]	; 10394 <sfbpf_parse+0x13bc>
   102a8:	add	r0, pc, r0
   102ac:	bl	1041c <sfbpf_error>
   102b0:	bl	103ec <pfreason_to_num>
   102b4:	bl	10404 <pfaction_to_num>
   102b8:	ldr	r0, [pc, #200]	; 10388 <sfbpf_parse+0x13b0>
   102bc:	ldr	r0, [pc, r0]
   102c0:	ldr	r1, [pc, #196]	; 1038c <sfbpf_parse+0x13b4>
   102c4:	add	r0, r0, #1
   102c8:	add	r1, pc, r1
   102cc:	str	r0, [r1]
   102d0:	ldr	r0, [pc, #184]	; 10390 <sfbpf_parse+0x13b8>
   102d4:	add	r0, pc, r0
   102d8:	bl	1041c <sfbpf_error>
   102dc:	ldr	r0, [pc, #120]	; 1035c <sfbpf_parse+0x1384>
   102e0:	add	r0, pc, r0
   102e4:	bl	2028 <sf_bpf_error>
   102e8:	ldr	r0, [pc, #168]	; 10398 <sfbpf_parse+0x13c0>
   102ec:	add	r0, pc, r0
   102f0:	bl	2028 <sf_bpf_error>
   102f4:	ldr	r0, [pc, #68]	; 10340 <sfbpf_parse+0x1368>
   102f8:	add	r0, pc, r0
   102fc:	bl	2028 <sf_bpf_error>
   10300:	ldr	r0, [pc, #64]	; 10348 <sfbpf_parse+0x1370>
   10304:	add	r0, pc, r0
   10308:	bl	2028 <sf_bpf_error>
   1030c:	ldr	r0, [pc, #56]	; 1034c <sfbpf_parse+0x1374>
   10310:	add	r0, pc, r0
   10314:	bl	2028 <sf_bpf_error>
   10318:	ldr	r0, [pc, #36]	; 10344 <sfbpf_parse+0x136c>
   1031c:	add	r0, pc, r0
   10320:	bl	2028 <sf_bpf_error>
   10324:	ldr	r0, [pc, #68]	; 10370 <sfbpf_parse+0x1398>
   10328:	add	r0, pc, r0
   1032c:	bl	2028 <sf_bpf_error>
   10330:	ldr	r0, [pc, #100]	; 1039c <sfbpf_parse+0x13c4>
   10334:	add	r0, pc, r0
   10338:	bl	2028 <sf_bpf_error>
   1033c:	.word	0x0001fb88
   10340:	.word	0x00004f3c
   10344:	.word	0x00004f3b
   10348:	.word	0x00004f7b
   1034c:	.word	0x00004f93
   10350:	.word	0x000201dc
   10354:	.word	0x000203c4
   10358:	.word	0x0001fe28
   1035c:	.word	0x00004fec
   10360:	.word	0x00005725
   10364:	.word	0x00005717
   10368:	.word	0x000056f6
   1036c:	.word	0x000056e5
   10370:	.word	0x00005000
   10374:	.word	0x00004f55
   10378:	.word	0x0000501c
   1037c:	.word	0x000042d4
   10380:	.word	0x000047f8
   10384:	.word	0x00005020
   10388:	.word	0x0002070c
   1038c:	.word	0x00020700
   10390:	.word	0x0000506d
   10394:	.word	0x000050a6
   10398:	.word	0x00004ff9
   1039c:	.word	0x00004fc5

000103a0 <str2tok>:
   103a0:	push	{r4, r5, r6, sl, fp, lr}
   103a4:	add	fp, sp, #16
   103a8:	mov	r5, r0
   103ac:	ldr	r0, [r1, #4]
   103b0:	mvn	r4, #0
   103b4:	cmp	r0, #0
   103b8:	beq	103e4 <str2tok+0x44>
   103bc:	add	r6, r1, #12
   103c0:	mov	r1, r5
   103c4:	bl	ed6c <sfbpf_strcasecmp>
   103c8:	cmp	r0, #0
   103cc:	beq	103e0 <str2tok+0x40>
   103d0:	ldr	r0, [r6], #8
   103d4:	cmp	r0, #0
   103d8:	bne	103c0 <str2tok+0x20>
   103dc:	b	103e4 <str2tok+0x44>
   103e0:	ldr	r4, [r6, #-12]
   103e4:	mov	r0, r4
   103e8:	pop	{r4, r5, r6, sl, fp, pc}

000103ec <pfreason_to_num>:
   103ec:	push	{fp, lr}
   103f0:	mov	fp, sp
   103f4:	ldr	r0, [pc, #4]	; 10400 <pfreason_to_num+0x14>
   103f8:	add	r0, pc, r0
   103fc:	bl	2028 <sf_bpf_error>
   10400:	.word	0x00002b04

00010404 <pfaction_to_num>:
   10404:	push	{fp, lr}
   10408:	mov	fp, sp
   1040c:	ldr	r0, [pc, #4]	; 10418 <pfaction_to_num+0x14>
   10410:	add	r0, pc, r0
   10414:	bl	2028 <sf_bpf_error>
   10418:	.word	0x00002aec

0001041c <sfbpf_error>:
   1041c:	push	{fp, lr}
   10420:	mov	fp, sp
   10424:	mov	r1, r0
   10428:	ldr	r0, [pc, #28]	; 1044c <sfbpf_error+0x30>
   1042c:	ldr	r0, [pc, r0]
   10430:	ldr	r2, [pc, #24]	; 10450 <sfbpf_error+0x34>
   10434:	add	r0, r0, #1
   10438:	add	r2, pc, r2
   1043c:	str	r0, [r2]
   10440:	ldr	r0, [pc, #12]	; 10454 <sfbpf_error+0x38>
   10444:	add	r0, pc, r0
   10448:	bl	2028 <sf_bpf_error>
   1044c:	.word	0x0002053c
   10450:	.word	0x00020530
   10454:	.word	0x00003881

00010458 <sfbpf_lex>:
   10458:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1045c:	add	fp, sp, #28
   10460:	sub	sp, sp, #84	; 0x54
   10464:	ldr	r1, [pc, #4088]	; 11464 <sfbpf_lex+0x100c>
   10468:	add	r1, pc, r1
   1046c:	ldrb	r0, [r1]
   10470:	cmp	r0, #0
   10474:	bne	10580 <sfbpf_lex+0x128>
   10478:	mov	r0, #1
   1047c:	strb	r0, [r1]
   10480:	ldr	r1, [pc, #4080]	; 11478 <sfbpf_lex+0x1020>
   10484:	add	r1, pc, r1
   10488:	ldrb	r2, [r1]
   1048c:	cmp	r2, #0
   10490:	strbeq	r0, [r1]
   10494:	ldr	r0, [pc, #4088]	; 11494 <sfbpf_lex+0x103c>
   10498:	ldr	r0, [pc, r0]
   1049c:	cmp	r0, #0
   104a0:	bne	104bc <sfbpf_lex+0x64>
   104a4:	ldr	r0, [pc, #4084]	; 114a0 <sfbpf_lex+0x1048>
   104a8:	ldr	r0, [pc, r0]
   104ac:	ldr	r0, [r0]
   104b0:	ldr	r1, [pc, #4092]	; 114b4 <sfbpf_lex+0x105c>
   104b4:	add	r1, pc, r1
   104b8:	str	r0, [r1]
   104bc:	ldr	r0, [pc, #4092]	; 114c0 <sfbpf_lex+0x1068>
   104c0:	ldr	r0, [pc, r0]
   104c4:	cmp	r0, #0
   104c8:	bne	104e4 <sfbpf_lex+0x8c>
   104cc:	ldr	r0, [pc, #4088]	; 114cc <sfbpf_lex+0x1074>
   104d0:	ldr	r0, [pc, r0]
   104d4:	ldr	r0, [r0]
   104d8:	ldr	r1, [pc, #4088]	; 114d8 <sfbpf_lex+0x1080>
   104dc:	add	r1, pc, r1
   104e0:	str	r0, [r1]
   104e4:	ldr	r1, [pc, #4080]	; 114dc <sfbpf_lex+0x1084>
   104e8:	ldr	r1, [pc, r1]
   104ec:	cmp	r1, #0
   104f0:	beq	10508 <sfbpf_lex+0xb0>
   104f4:	ldr	r0, [pc, #4092]	; 114f8 <sfbpf_lex+0x10a0>
   104f8:	ldr	r0, [pc, r0]
   104fc:	ldr	r0, [r1, r0, lsl #2]!
   10500:	cmp	r0, #0
   10504:	bne	10530 <sfbpf_lex+0xd8>
   10508:	bl	11aac <sfbpf_ensure_buffer_stack>
   1050c:	ldr	r0, [pc, #4080]	; 11504 <sfbpf_lex+0x10ac>
   10510:	mov	r1, #16384	; 0x4000
   10514:	ldr	r0, [pc, r0]
   10518:	bl	11b9c <sfbpf__create_buffer>
   1051c:	ldr	r1, [pc, #4068]	; 11508 <sfbpf_lex+0x10b0>
   10520:	ldr	r1, [pc, r1]
   10524:	ldr	r2, [pc, #4064]	; 1150c <sfbpf_lex+0x10b4>
   10528:	ldr	r2, [pc, r2]
   1052c:	str	r0, [r1, r2, lsl #2]!
   10530:	ldr	r2, [r0, #16]
   10534:	ldr	r3, [pc, #4088]	; 11534 <sfbpf_lex+0x10dc>
   10538:	add	r3, pc, r3
   1053c:	str	r2, [r3]
   10540:	ldr	r0, [r0, #8]
   10544:	ldr	r2, [pc, #4092]	; 11548 <sfbpf_lex+0x10f0>
   10548:	add	r2, pc, r2
   1054c:	str	r0, [r2]
   10550:	ldr	r2, [pc, #4092]	; 11554 <sfbpf_lex+0x10fc>
   10554:	add	r2, pc, r2
   10558:	str	r0, [r2]
   1055c:	ldr	r1, [r1]
   10560:	ldr	r1, [r1]
   10564:	ldr	r2, [pc, #4092]	; 11568 <sfbpf_lex+0x1110>
   10568:	add	r2, pc, r2
   1056c:	str	r1, [r2]
   10570:	ldrb	r0, [r0]
   10574:	ldr	r1, [pc, #4088]	; 11574 <sfbpf_lex+0x111c>
   10578:	add	r1, pc, r1
   1057c:	strb	r0, [r1]
   10580:	ldr	ip, [pc, #4088]	; 11580 <sfbpf_lex+0x1128>
   10584:	ldr	lr, [pc, #4088]	; 11584 <sfbpf_lex+0x112c>
   10588:	ldr	r7, [pc, #4088]	; 11588 <sfbpf_lex+0x1130>
   1058c:	ldr	r6, [pc, #4088]	; 1158c <sfbpf_lex+0x1134>
   10590:	ldr	r8, [pc, #4088]	; 11590 <sfbpf_lex+0x1138>
   10594:	ldr	r9, [pc, #4088]	; 11594 <sfbpf_lex+0x113c>
   10598:	ldr	sl, [pc, #4088]	; 11598 <sfbpf_lex+0x1140>
   1059c:	movw	r5, #1434	; 0x59a
   105a0:	add	ip, pc, ip
   105a4:	add	lr, pc, lr
   105a8:	add	r7, pc, r7
   105ac:	add	r6, pc, r6
   105b0:	add	r8, pc, r8
   105b4:	add	r9, pc, r9
   105b8:	add	sl, pc, sl
   105bc:	ldrb	r0, [ip]
   105c0:	ldr	r4, [pc, #4092]	; 115c4 <sfbpf_lex+0x116c>
   105c4:	ldr	r4, [pc, r4]
   105c8:	strb	r0, [r4]
   105cc:	str	r4, [sp, #40]	; 0x28
   105d0:	ldrb	r0, [lr]
   105d4:	b	1063c <sfbpf_lex+0x1e4>
   105d8:	ldr	r0, [sp, #4]
   105dc:	mov	r6, ip
   105e0:	mov	r7, lr
   105e4:	mvn	r0, r0
   105e8:	add	r0, r0, r4
   105ec:	add	r4, r1, r0
   105f0:	ldr	r0, [pc, #4088]	; 115f0 <sfbpf_lex+0x1198>
   105f4:	add	r0, pc, r0
   105f8:	str	r4, [r0]
   105fc:	bl	11c04 <yy_get_previous_state>
   10600:	mov	lr, r7
   10604:	ldr	r7, [pc, #4088]	; 11604 <sfbpf_lex+0x11ac>
   10608:	mov	ip, r6
   1060c:	ldr	r6, [pc, #4092]	; 11610 <sfbpf_lex+0x11b8>
   10610:	ldr	r1, [pc, #4092]	; 11614 <sfbpf_lex+0x11bc>
   10614:	ldr	r1, [pc, r1]
   10618:	add	r7, pc, r7
   1061c:	add	r6, pc, r6
   10620:	str	r1, [sp, #40]	; 0x28
   10624:	b	1063c <sfbpf_lex+0x1e4>
   10628:	sxth	r0, r1
   1062c:	ldr	r1, [pc, #4084]	; 11628 <sfbpf_lex+0x11d0>
   10630:	add	r4, r4, #1
   10634:	add	r1, pc, r1
   10638:	str	r4, [r1]
   1063c:	ldrb	r1, [r4]
   10640:	add	r2, r6, r0, lsl #1
   10644:	ldrh	r2, [r2]
   10648:	ldrb	r1, [r7, r1]
   1064c:	cmp	r2, #0
   10650:	beq	1066c <sfbpf_lex+0x214>
   10654:	ldr	r2, [pc, #4088]	; 11654 <sfbpf_lex+0x11fc>
   10658:	add	r2, pc, r2
   1065c:	str	r4, [r2]
   10660:	ldr	r2, [pc, #4088]	; 11660 <sfbpf_lex+0x1208>
   10664:	add	r2, pc, r2
   10668:	str	r0, [r2]
   1066c:	add	r2, r8, r0, lsl #1
   10670:	ldrsh	r2, [r2]
   10674:	add	r3, r2, r1
   10678:	add	r2, r9, r3, lsl #1
   1067c:	ldrsh	r2, [r2]
   10680:	cmp	r0, r2
   10684:	beq	106d8 <sfbpf_lex+0x280>
   10688:	mov	r2, r1
   1068c:	add	r0, sl, r0, lsl #1
   10690:	ldrsh	r0, [r0]
   10694:	cmp	r0, r5
   10698:	uxth	r7, r0
   1069c:	ldrge	r2, [pc, #4088]	; 1169c <sfbpf_lex+0x1244>
   106a0:	addge	r2, pc, r2
   106a4:	ldrbge	r2, [r2, r1]
   106a8:	add	r1, r8, r0, lsl #1
   106ac:	ldrsh	r1, [r1]
   106b0:	uxtab	r3, r1, r2
   106b4:	add	r1, r9, r3, lsl #1
   106b8:	ldrh	r6, [r1]
   106bc:	uxtb	r1, r2
   106c0:	cmp	r7, r6
   106c4:	bne	1068c <sfbpf_lex+0x234>
   106c8:	ldr	r7, [pc, #4088]	; 116c8 <sfbpf_lex+0x1270>
   106cc:	ldr	r6, [pc, #4088]	; 116cc <sfbpf_lex+0x1274>
   106d0:	add	r7, pc, r7
   106d4:	add	r6, pc, r6
   106d8:	ldr	r0, [pc, #4080]	; 116d0 <sfbpf_lex+0x1278>
   106dc:	movw	r2, #7401	; 0x1ce9
   106e0:	add	r4, r4, #1
   106e4:	add	r0, pc, r0
   106e8:	add	r0, r0, r3, lsl #1
   106ec:	ldrsh	r0, [r0]
   106f0:	add	r1, r8, r0, lsl #1
   106f4:	ldrh	r1, [r1]
   106f8:	cmp	r1, r2
   106fc:	bne	1063c <sfbpf_lex+0x1e4>
   10700:	b	10764 <sfbpf_lex+0x30c>
   10704:	ldr	r0, [pc, #4088]	; 11704 <sfbpf_lex+0x12ac>
   10708:	mov	r6, ip
   1070c:	mov	r7, lr
   10710:	ldr	r0, [pc, r0]
   10714:	ldr	r1, [pc, #4092]	; 11718 <sfbpf_lex+0x12c0>
   10718:	ldr	r1, [pc, r1]
   1071c:	ldr	r0, [r1, r0, lsl #2]
   10720:	ldr	r0, [r0, #4]
   10724:	ldr	r1, [pc, #4080]	; 1171c <sfbpf_lex+0x12c4>
   10728:	ldr	r1, [pc, r1]
   1072c:	add	r4, r0, r1
   10730:	ldr	r0, [pc, #4072]	; 11720 <sfbpf_lex+0x12c8>
   10734:	add	r0, pc, r0
   10738:	str	r4, [r0]
   1073c:	bl	11c04 <yy_get_previous_state>
   10740:	mov	lr, r7
   10744:	ldr	r7, [pc, #4056]	; 11724 <sfbpf_lex+0x12cc>
   10748:	mov	ip, r6
   1074c:	ldr	r6, [pc, #4052]	; 11728 <sfbpf_lex+0x12d0>
   10750:	ldr	r1, [pc, #4052]	; 1172c <sfbpf_lex+0x12d4>
   10754:	ldr	r1, [pc, r1]
   10758:	add	r7, pc, r7
   1075c:	add	r6, pc, r6
   10760:	str	r1, [sp, #40]	; 0x28
   10764:	add	r0, r6, r0, lsl #1
   10768:	ldrh	r0, [r0]
   1076c:	cmp	r0, #0
   10770:	bne	1078c <sfbpf_lex+0x334>
   10774:	ldr	r0, [pc, #4020]	; 11730 <sfbpf_lex+0x12d8>
   10778:	ldr	r0, [pc, r0]
   1077c:	ldr	r4, [pc, #4016]	; 11734 <sfbpf_lex+0x12dc>
   10780:	add	r0, r6, r0, lsl #1
   10784:	ldr	r4, [pc, r4]
   10788:	ldrh	r0, [r0]
   1078c:	ldr	r1, [pc, #4004]	; 11738 <sfbpf_lex+0x12e0>
   10790:	ldr	r2, [sp, #40]	; 0x28
   10794:	sxth	r0, r0
   10798:	add	r1, pc, r1
   1079c:	str	r2, [r1]
   107a0:	sub	r1, r4, r2
   107a4:	ldr	r2, [pc, #3984]	; 1173c <sfbpf_lex+0x12e4>
   107a8:	add	r2, pc, r2
   107ac:	str	r1, [r2]
   107b0:	ldrb	r1, [r4]
   107b4:	strb	r1, [ip]
   107b8:	mov	r1, #0
   107bc:	strb	r1, [r4]
   107c0:	ldr	r1, [pc, #4088]	; 117c0 <sfbpf_lex+0x1368>
   107c4:	add	r1, pc, r1
   107c8:	str	r4, [r1]
   107cc:	cmp	r0, #146	; 0x92
   107d0:	bhi	118a0 <sfbpf_lex+0x1448>
   107d4:	add	r1, pc, #4
   107d8:	ldr	r0, [r1, r0, lsl #2]
   107dc:	add	pc, r1, r0
   107e0:	.word	0x0000082c
   107e4:	.word	0x00000e78
   107e8:	.word	0x00000a9c
   107ec:	.word	0x00000978
   107f0:	.word	0x00000978
   107f4:	.word	0x00000bf0
   107f8:	.word	0x00000ac0
   107fc:	.word	0x00000ae8
   10800:	.word	0x00000bc8
   10804:	.word	0x00000b98
   10808:	.word	0x00000c10
   1080c:	.word	0x00000a74
   10810:	.word	0x00000ce4
   10814:	.word	0x00000b48
   10818:	.word	0x00000a10
   1081c:	.word	0x00000a6c
   10820:	.word	0x00000f1c
   10824:	.word	0x00000ae0
   10828:	.word	0x00000a4c
   1082c:	.word	0x00000ddc
   10830:	.word	0x00000fd0
   10834:	.word	0x00000d78
   10838:	.word	0x00000eb4
   1083c:	.word	0x00000d80
   10840:	.word	0x00000de8
   10844:	.word	0x00000ad0
   10848:	.word	0x00000cd8
   1084c:	.word	0x00000c6c
   10850:	.word	0x00000d6c
   10854:	.word	0x000009a8
   10858:	.word	0x000009a8
   1085c:	.word	0x000009e0
   10860:	.word	0x000009e0
   10864:	.word	0x00000ed0
   10868:	.word	0x00000b38
   1086c:	.word	0x00000c00
   10870:	.word	0x00000bf8
   10874:	.word	0x00000c64
   10878:	.word	0x00000a94
   1087c:	.word	0x00000a84
   10880:	.word	0x00000c18
   10884:	.word	0x00000bb8
   10888:	.word	0x00000a64
   1088c:	.word	0x00000f30
   10890:	.word	0x00000a8c
   10894:	.word	0x00000b58
   10898:	.word	0x00000fd8
   1089c:	.word	0x00000bd8
   108a0:	.word	0x00000f28
   108a4:	.word	0x00000d98
   108a8:	.word	0x00000df8
   108ac:	.word	0x00000df0
   108b0:	.word	0x00000ec0
   108b4:	.word	0x00000e40
   108b8:	.word	0x00000cb8
   108bc:	.word	0x00000e5c
   108c0:	.word	0x00000b00
   108c4:	.word	0x00000b68
   108c8:	.word	0x00000b50
   108cc:	.word	0x00000c20
   108d0:	.word	0x00000ab0
   108d4:	.word	0x00000b88
   108d8:	.word	0x00000b20
   108dc:	.word	0x00000b08
   108e0:	.word	0x00000ad8
   108e4:	.word	0x00000b28
   108e8:	.word	0x00000b70
   108ec:	.word	0x00000ee0
   108f0:	.word	0x00000b30
   108f4:	.word	0x00000ac8
   108f8:	.word	0x00000a5c
   108fc:	.word	0x00000a08
   10900:	.word	0x00000a54
   10904:	.word	0x00000af8
   10908:	.word	0x000009f8
   1090c:	.word	0x00000bc0
   10910:	.word	0x00000e28
   10914:	.word	0x00000e6c
   10918:	.word	0x00000d8c
   1091c:	.word	0x00000cf0
   10920:	.word	0x00000cac
   10924:	.word	0x00000eac
   10928:	.word	0x00000d10
   1092c:	.word	0x00000e64
   10930:	.word	0x00000c38
   10934:	.word	0x00000c30
   10938:	.word	0x00000d1c
   1093c:	.word	0x00000c28
   10940:	.word	0x00000ab8
   10944:	.word	0x00000b40
   10948:	.word	0x00000bd0
   1094c:	.word	0x00000b60
   10950:	.word	0x00000b10
   10954:	.word	0x00000b18
   10958:	.word	0x00000c08
   1095c:	.word	0x00000980
   10960:	.word	0x00000980
   10964:	.word	0x00000af0
   10968:	.word	0x00000b90
   1096c:	.word	0x00000a00
   10970:	.word	0x00000ed8
   10974:	.word	0x00000a7c
   10978:	.word	0xfffffddc
   1097c:	.word	0x00000ba8
   10980:	.word	0x00000f14
   10984:	.word	0x00000ba0
   10988:	.word	0x00000e38
   1098c:	.word	0x00000e8c
   10990:	.word	0x00000e84
   10994:	.word	0x00000e94
   10998:	.word	0x00000d30
   1099c:	.word	0x00000dbc
   109a0:	.word	0x00000a18
   109a4:	.word	0x00000ef4
   109a8:	.word	0x00000f60
   109ac:	.word	0x000010cc
   109b0:	.word	0x00000998
   109b4:	.word	0x00000988
   109b8:	.word	0x00000998
   109bc:	.word	0x00000cc4
   109c0:	.word	0x000009d0
   109c4:	.word	0x00000e14
   109c8:	.word	0x000009c0
   109cc:	.word	0x00000e9c
   109d0:	.word	0x00000d58
   109d4:	.word	0x00000c88
   109d8:	.word	0x00000d00
   109dc:	.word	0x000009b0
   109e0:	.word	0x00000c9c
   109e4:	.word	0x00000e00
   109e8:	.word	0x000009e8
   109ec:	.word	0x00000e4c
   109f0:	.word	0x00000be0
   109f4:	.word	0x000009b0
   109f8:	.word	0x00000988
   109fc:	.word	0x00000b78
   10a00:	.word	0x000009d0
   10a04:	.word	0x000009c0
   10a08:	.word	0x000009e8
   10a0c:	.word	0x00000c74
   10a10:	.word	0x00000aa4
   10a14:	.word	0x00000c40
   10a18:	.word	0x00001080
   10a1c:	.word	0x00001068
   10a20:	.word	0x0000093c
   10a24:	.word	0x0000024c
   10a28:	.word	0x00000ec8
   10a2c:	ldrb	r0, [ip]
   10a30:	ldr	r1, [pc, #3932]	; 11994 <sfbpf_lex+0x153c>
   10a34:	ldr	r1, [pc, r1]
   10a38:	strb	r0, [r4]
   10a3c:	str	r1, [sp, #4]
   10a40:	ldr	r1, [pc, #3920]	; 11998 <sfbpf_lex+0x1540>
   10a44:	ldr	r1, [pc, r1]
   10a48:	ldr	r3, [pc, #3916]	; 1199c <sfbpf_lex+0x1544>
   10a4c:	ldr	r3, [pc, r3]
   10a50:	str	r1, [sp, #20]
   10a54:	mov	r0, r3
   10a58:	str	r3, [sp, #12]
   10a5c:	ldr	r1, [r0, r1, lsl #2]!
   10a60:	ldr	r2, [r1, #44]	; 0x2c
   10a64:	str	r0, [sp, #16]
   10a68:	cmp	r2, #0
   10a6c:	beq	10a7c <sfbpf_lex+0x624>
   10a70:	ldr	r3, [pc, #3880]	; 119a0 <sfbpf_lex+0x1548>
   10a74:	ldr	r3, [pc, r3]
   10a78:	b	10ab0 <sfbpf_lex+0x658>
   10a7c:	ldr	r3, [r1, #16]
   10a80:	ldr	r2, [pc, #3868]	; 119a4 <sfbpf_lex+0x154c>
   10a84:	mov	r7, #1
   10a88:	add	r2, pc, r2
   10a8c:	str	r3, [r2]
   10a90:	ldr	r2, [pc, #3856]	; 119a8 <sfbpf_lex+0x1550>
   10a94:	ldr	r2, [pc, r2]
   10a98:	str	r2, [r1]
   10a9c:	ldr	r2, [r0]
   10aa0:	str	r7, [r2, #44]	; 0x2c
   10aa4:	ldr	r7, [pc, #3840]	; 119ac <sfbpf_lex+0x1554>
   10aa8:	ldr	r1, [r0]
   10aac:	add	r7, pc, r7
   10ab0:	str	r1, [sp, #36]	; 0x24
   10ab4:	ldr	r2, [r1, #4]
   10ab8:	ldr	r1, [pc, #3824]	; 119b0 <sfbpf_lex+0x1558>
   10abc:	add	r3, r2, r3
   10ac0:	ldr	r1, [pc, r1]
   10ac4:	ldr	r0, [pc, #3816]	; 119b4 <sfbpf_lex+0x155c>
   10ac8:	ldr	r0, [pc, r0]
   10acc:	cmp	r0, r3
   10ad0:	bls	11028 <sfbpf_lex+0xbd0>
   10ad4:	add	r3, r3, #1
   10ad8:	cmp	r0, r3
   10adc:	bhi	118c0 <sfbpf_lex+0x1468>
   10ae0:	str	r1, [sp, #24]
   10ae4:	str	r0, [sp, #8]
   10ae8:	sub	r1, r0, r1
   10aec:	ldr	r0, [sp, #36]	; 0x24
   10af0:	ldr	r3, [r0, #40]	; 0x28
   10af4:	cmp	r3, #0
   10af8:	beq	10b70 <sfbpf_lex+0x718>
   10afc:	ldr	r0, [sp, #36]	; 0x24
   10b00:	sub	r3, r1, #1
   10b04:	cmp	r1, #2
   10b08:	str	r1, [sp, #32]
   10b0c:	str	r3, [sp, #28]
   10b10:	blt	10b48 <sfbpf_lex+0x6f0>
   10b14:	ldr	r1, [sp, #28]
   10b18:	ldr	r0, [sp, #24]
   10b1c:	mov	r3, #0
   10b20:	ldrb	r7, [r0, r3]
   10b24:	strb	r7, [r2, r3]
   10b28:	add	r3, r3, #1
   10b2c:	cmp	r3, r1
   10b30:	blt	10b20 <sfbpf_lex+0x6c8>
   10b34:	ldr	r0, [sp, #16]
   10b38:	ldr	r0, [r0]
   10b3c:	ldr	r7, [pc, #3732]	; 119d8 <sfbpf_lex+0x1580>
   10b40:	ldr	r1, [sp, #32]
   10b44:	add	r7, pc, r7
   10b48:	ldr	r2, [r0, #44]	; 0x2c
   10b4c:	cmp	r2, #2
   10b50:	bne	10b84 <sfbpf_lex+0x72c>
   10b54:	ldr	r2, [pc, #3712]	; 119dc <sfbpf_lex+0x1584>
   10b58:	mov	r3, #0
   10b5c:	add	r2, pc, r2
   10b60:	str	r3, [r2]
   10b64:	str	r3, [r0, #16]
   10b68:	ldr	r0, [sp, #12]
   10b6c:	b	10e7c <sfbpf_lex+0xa24>
   10b70:	cmp	r1, #1
   10b74:	movwne	r1, #2
   10b78:	mov	r0, r1
   10b7c:	ldr	r1, [sp, #24]
   10b80:	b	10fd8 <sfbpf_lex+0xb80>
   10b84:	ldr	r7, [r0, #12]
   10b88:	mov	r2, r0
   10b8c:	sub	r3, r7, r1
   10b90:	cmp	r3, #0
   10b94:	ble	10ba0 <sfbpf_lex+0x748>
   10b98:	ldr	r6, [sp, #16]
   10b9c:	b	10c38 <sfbpf_lex+0x7e0>
   10ba0:	ldr	r6, [sp, #8]
   10ba4:	ldr	r1, [r2, #20]
   10ba8:	cmp	r1, #0
   10bac:	beq	11874 <sfbpf_lex+0x141c>
   10bb0:	ldr	r0, [r2, #4]
   10bb4:	cmp	r7, #0
   10bb8:	str	r6, [sp, #36]	; 0x24
   10bbc:	ble	10bc8 <sfbpf_lex+0x770>
   10bc0:	lsl	r1, r7, #1
   10bc4:	b	10bd4 <sfbpf_lex+0x77c>
   10bc8:	asr	r1, r7, #31
   10bcc:	add	r1, r7, r1, lsr #29
   10bd0:	add	r1, r7, r1, asr #3
   10bd4:	str	r1, [r2, #12]
   10bd8:	add	r1, r1, #2
   10bdc:	mov	r6, r2
   10be0:	mov	r7, r0
   10be4:	bl	ea4 <realloc@plt>
   10be8:	cmp	r0, #0
   10bec:	str	r0, [r6, #4]
   10bf0:	beq	1187c <sfbpf_lex+0x1424>
   10bf4:	ldr	r1, [sp, #36]	; 0x24
   10bf8:	sub	r1, r1, r7
   10bfc:	add	r6, r0, r1
   10c00:	ldr	r0, [pc, #3548]	; 119e4 <sfbpf_lex+0x158c>
   10c04:	add	r0, pc, r0
   10c08:	str	r6, [r0]
   10c0c:	ldr	r1, [pc, #3540]	; 119e8 <sfbpf_lex+0x1590>
   10c10:	ldr	r1, [pc, r1]
   10c14:	ldr	r0, [pc, #3536]	; 119ec <sfbpf_lex+0x1594>
   10c18:	ldr	r0, [pc, r0]
   10c1c:	ldr	r3, [sp, #32]
   10c20:	ldr	r2, [r0, r1, lsl #2]
   10c24:	ldr	r7, [r2, #12]
   10c28:	sub	r3, r7, r3
   10c2c:	cmp	r3, #1
   10c30:	blt	10ba4 <sfbpf_lex+0x74c>
   10c34:	add	r6, r0, r1, lsl #2
   10c38:	ldr	r0, [r2, #24]
   10c3c:	ldr	r1, [sp, #24]
   10c40:	cmp	r3, #8192	; 0x2000
   10c44:	movge	r3, #8192	; 0x2000
   10c48:	cmp	r0, #0
   10c4c:	beq	10d1c <sfbpf_lex+0x8c4>
   10c50:	ldr	r0, [sp, #8]
   10c54:	sub	r0, r0, #1
   10c58:	sub	r0, r0, r1
   10c5c:	mov	r1, #0
   10c60:	str	r0, [sp, #36]	; 0x24
   10c64:	ldr	r0, [pc, #3460]	; 119f0 <sfbpf_lex+0x1598>
   10c68:	mov	r6, r3
   10c6c:	mov	r7, r1
   10c70:	ldr	r0, [pc, r0]
   10c74:	bl	fd0 <getc@plt>
   10c78:	cmn	r0, #1
   10c7c:	cmpne	r0, #10
   10c80:	beq	10cc0 <sfbpf_lex+0x868>
   10c84:	ldr	r1, [pc, #3432]	; 119f4 <sfbpf_lex+0x159c>
   10c88:	mov	r3, r6
   10c8c:	ldr	r1, [pc, r1]
   10c90:	ldr	r2, [pc, #3424]	; 119f8 <sfbpf_lex+0x15a0>
   10c94:	ldr	r2, [pc, r2]
   10c98:	ldr	r1, [r2, r1, lsl #2]
   10c9c:	ldr	r2, [sp, #36]	; 0x24
   10ca0:	ldr	r1, [r1, #4]
   10ca4:	add	r1, r1, r2
   10ca8:	strb	r0, [r1, r7]
   10cac:	mov	r1, r7
   10cb0:	add	r1, r7, #1
   10cb4:	cmp	r1, r6
   10cb8:	blt	10c64 <sfbpf_lex+0x80c>
   10cbc:	b	10cc4 <sfbpf_lex+0x86c>
   10cc0:	mov	r1, r7
   10cc4:	cmn	r0, #1
   10cc8:	beq	10e08 <sfbpf_lex+0x9b0>
   10ccc:	cmp	r0, #10
   10cd0:	bne	10d08 <sfbpf_lex+0x8b0>
   10cd4:	ldr	r0, [pc, #3368]	; 11a04 <sfbpf_lex+0x15ac>
   10cd8:	mov	r2, r1
   10cdc:	ldr	r0, [pc, r0]
   10ce0:	ldr	r1, [pc, #3360]	; 11a08 <sfbpf_lex+0x15b0>
   10ce4:	ldr	r1, [pc, r1]
   10ce8:	ldr	r0, [r1, r0, lsl #2]
   10cec:	ldr	r1, [sp, #28]
   10cf0:	ldr	r0, [r0, #4]
   10cf4:	add	r0, r0, r1
   10cf8:	mov	r1, #10
   10cfc:	strb	r1, [r0, r2]
   10d00:	mov	r1, r2
   10d04:	add	r1, r2, #1
   10d08:	ldr	ip, [pc, #3308]	; 119fc <sfbpf_lex+0x15a4>
   10d0c:	ldr	lr, [pc, #3308]	; 11a00 <sfbpf_lex+0x15a8>
   10d10:	add	ip, pc, ip
   10d14:	add	lr, pc, lr
   10d18:	b	10e34 <sfbpf_lex+0x9dc>
   10d1c:	mov	r7, r3
   10d20:	bl	f28 <__errno_location@plt>
   10d24:	mov	r1, #0
   10d28:	str	r0, [sp, #24]
   10d2c:	mov	r2, r7
   10d30:	str	r1, [r0]
   10d34:	ldr	r1, [sp, #28]
   10d38:	ldr	r0, [r6]
   10d3c:	ldr	r0, [r0, #4]
   10d40:	ldr	r3, [pc, #3284]	; 11a1c <sfbpf_lex+0x15c4>
   10d44:	ldr	r3, [pc, r3]
   10d48:	add	r0, r0, r1
   10d4c:	mov	r1, #1
   10d50:	bl	ebc <fread@plt>
   10d54:	mov	r1, r0
   10d58:	ldr	r0, [pc, #3264]	; 11a20 <sfbpf_lex+0x15c8>
   10d5c:	cmp	r1, #0
   10d60:	add	r0, pc, r0
   10d64:	str	r1, [r0]
   10d68:	ldr	ip, [pc, #3252]	; 11a24 <sfbpf_lex+0x15cc>
   10d6c:	ldr	lr, [pc, #3252]	; 11a28 <sfbpf_lex+0x15d0>
   10d70:	add	ip, pc, ip
   10d74:	add	lr, pc, lr
   10d78:	bne	10e40 <sfbpf_lex+0x9e8>
   10d7c:	ldr	r6, [sp, #24]
   10d80:	str	r7, [sp, #36]	; 0x24
   10d84:	mov	r7, r0
   10d88:	ldr	r0, [pc, #3228]	; 11a2c <sfbpf_lex+0x15d4>
   10d8c:	ldr	r0, [pc, r0]
   10d90:	bl	e74 <ferror@plt>
   10d94:	cmp	r0, #0
   10d98:	beq	10ff4 <sfbpf_lex+0xb9c>
   10d9c:	ldr	r0, [r6]
   10da0:	cmp	r0, #4
   10da4:	bne	11888 <sfbpf_lex+0x1430>
   10da8:	mov	r0, #0
   10dac:	str	r0, [r6]
   10db0:	ldr	r0, [pc, #3192]	; 11a30 <sfbpf_lex+0x15d8>
   10db4:	ldr	r0, [pc, r0]
   10db8:	bl	f7c <clearerr@plt>
   10dbc:	ldr	r0, [pc, #3184]	; 11a34 <sfbpf_lex+0x15dc>
   10dc0:	ldr	r0, [pc, r0]
   10dc4:	ldr	r1, [pc, #3180]	; 11a38 <sfbpf_lex+0x15e0>
   10dc8:	ldr	r1, [pc, r1]
   10dcc:	ldr	r0, [r1, r0, lsl #2]
   10dd0:	ldr	r1, [sp, #28]
   10dd4:	ldr	r0, [r0, #4]
   10dd8:	ldr	r3, [pc, #3164]	; 11a3c <sfbpf_lex+0x15e4>
   10ddc:	ldr	r3, [pc, r3]
   10de0:	ldr	r2, [sp, #36]	; 0x24
   10de4:	add	r0, r0, r1
   10de8:	mov	r1, #1
   10dec:	bl	ebc <fread@plt>
   10df0:	mov	r1, r0
   10df4:	mov	r0, r7
   10df8:	cmp	r1, #0
   10dfc:	str	r1, [r7]
   10e00:	beq	10d84 <sfbpf_lex+0x92c>
   10e04:	b	10ff8 <sfbpf_lex+0xba0>
   10e08:	ldr	r0, [pc, #3068]	; 11a0c <sfbpf_lex+0x15b4>
   10e0c:	mov	r7, r1
   10e10:	ldr	r0, [pc, r0]
   10e14:	bl	e74 <ferror@plt>
   10e18:	ldr	ip, [pc, #3056]	; 11a10 <sfbpf_lex+0x15b8>
   10e1c:	ldr	lr, [pc, #3056]	; 11a14 <sfbpf_lex+0x15bc>
   10e20:	mov	r1, r7
   10e24:	cmp	r0, #0
   10e28:	add	ip, pc, ip
   10e2c:	add	lr, pc, lr
   10e30:	bne	11888 <sfbpf_lex+0x1430>
   10e34:	ldr	r0, [pc, #3036]	; 11a18 <sfbpf_lex+0x15c0>
   10e38:	add	r0, pc, r0
   10e3c:	str	r1, [r0]
   10e40:	ldr	r3, [pc, #3072]	; 11a48 <sfbpf_lex+0x15f0>
   10e44:	cmp	r1, #0
   10e48:	ldr	r3, [pc, r3]
   10e4c:	ldr	r0, [pc, #3064]	; 11a4c <sfbpf_lex+0x15f4>
   10e50:	ldr	r0, [pc, r0]
   10e54:	str	r3, [sp, #20]
   10e58:	mov	r2, r0
   10e5c:	ldr	r3, [r2, r3, lsl #2]!
   10e60:	str	r1, [r3, #16]
   10e64:	mov	r3, #0
   10e68:	ldr	r7, [pc, #3040]	; 11a50 <sfbpf_lex+0x15f8>
   10e6c:	ldr	r6, [pc, #3040]	; 11a54 <sfbpf_lex+0x15fc>
   10e70:	add	r7, pc, r7
   10e74:	add	r6, pc, r6
   10e78:	bne	10ef0 <sfbpf_lex+0xa98>
   10e7c:	ldr	r1, [sp, #28]
   10e80:	cmp	r1, #0
   10e84:	beq	10ea4 <sfbpf_lex+0xa4c>
   10e88:	ldr	r1, [sp, #20]
   10e8c:	mov	r3, #2
   10e90:	ldr	r1, [r0, r1, lsl #2]!
   10e94:	str	r3, [r1, #44]	; 0x2c
   10e98:	mov	r1, #0
   10e9c:	mov	r2, r0
   10ea0:	b	10ef0 <sfbpf_lex+0xa98>
   10ea4:	ldr	r0, [pc, #2988]	; 11a58 <sfbpf_lex+0x1600>
   10ea8:	mov	r6, ip
   10eac:	mov	r7, lr
   10eb0:	ldr	r0, [pc, r0]
   10eb4:	bl	11d7c <sfbpf_restart>
   10eb8:	mov	lr, r7
   10ebc:	ldr	r7, [pc, #2968]	; 11a5c <sfbpf_lex+0x1604>
   10ec0:	mov	ip, r6
   10ec4:	ldr	r6, [pc, #2964]	; 11a60 <sfbpf_lex+0x1608>
   10ec8:	ldr	r0, [pc, #2964]	; 11a64 <sfbpf_lex+0x160c>
   10ecc:	mov	r3, #1
   10ed0:	ldr	r0, [pc, r0]
   10ed4:	ldr	r1, [pc, #2956]	; 11a68 <sfbpf_lex+0x1610>
   10ed8:	add	r7, pc, r7
   10edc:	add	r6, pc, r6
   10ee0:	ldr	r1, [pc, r1]
   10ee4:	add	r2, r1, r0, lsl #2
   10ee8:	ldr	r1, [pc, #2940]	; 11a6c <sfbpf_lex+0x1614>
   10eec:	ldr	r1, [pc, r1]
   10ef0:	ldr	r0, [sp, #28]
   10ef4:	str	r1, [sp, #36]	; 0x24
   10ef8:	str	r3, [sp, #24]
   10efc:	add	r0, r1, r0
   10f00:	ldr	r1, [r2]
   10f04:	ldr	r3, [r1, #12]
   10f08:	cmp	r0, r3
   10f0c:	ble	10f90 <sfbpf_lex+0xb38>
   10f10:	ldr	r2, [sp, #36]	; 0x24
   10f14:	mov	r3, r1
   10f18:	mov	r6, ip
   10f1c:	add	r1, r0, r2, asr #1
   10f20:	ldr	r0, [r3, #4]
   10f24:	mov	r7, r1
   10f28:	bl	ea4 <realloc@plt>
   10f2c:	ldr	r1, [pc, #2876]	; 11a70 <sfbpf_lex+0x1618>
   10f30:	ldr	r1, [pc, r1]
   10f34:	ldr	r2, [pc, #2872]	; 11a74 <sfbpf_lex+0x161c>
   10f38:	ldr	r2, [pc, r2]
   10f3c:	ldr	r1, [r2, r1, lsl #2]!
   10f40:	str	r0, [r1, #4]
   10f44:	ldr	r0, [r2]
   10f48:	ldr	r1, [r0, #4]
   10f4c:	cmp	r1, #0
   10f50:	beq	11894 <sfbpf_lex+0x143c>
   10f54:	sub	r1, r7, #2
   10f58:	mov	ip, r6
   10f5c:	str	r1, [r0, #12]
   10f60:	ldr	r1, [pc, #2832]	; 11a78 <sfbpf_lex+0x1620>
   10f64:	ldr	r1, [pc, r1]
   10f68:	ldr	r0, [sp, #28]
   10f6c:	str	r1, [sp, #36]	; 0x24
   10f70:	add	r0, r1, r0
   10f74:	ldr	r1, [r2]
   10f78:	ldr	lr, [pc, #2812]	; 11a7c <sfbpf_lex+0x1624>
   10f7c:	ldr	r7, [pc, #2812]	; 11a80 <sfbpf_lex+0x1628>
   10f80:	ldr	r6, [pc, #2812]	; 11a84 <sfbpf_lex+0x162c>
   10f84:	add	lr, pc, lr
   10f88:	add	r7, pc, r7
   10f8c:	add	r6, pc, r6
   10f90:	ldr	r3, [pc, #2800]	; 11a88 <sfbpf_lex+0x1630>
   10f94:	add	r3, pc, r3
   10f98:	str	r0, [r3]
   10f9c:	mov	r3, #0
   10fa0:	ldr	r1, [r1, #4]
   10fa4:	strb	r3, [r1, r0]
   10fa8:	ldr	r0, [sp, #32]
   10fac:	ldr	r1, [sp, #36]	; 0x24
   10fb0:	add	r0, r1, r0
   10fb4:	ldr	r1, [r2]
   10fb8:	ldr	r1, [r1, #4]
   10fbc:	strb	r3, [r1, r0]
   10fc0:	ldr	r0, [r2]
   10fc4:	ldr	r1, [r0, #4]
   10fc8:	ldr	r0, [pc, #2748]	; 11a8c <sfbpf_lex+0x1634>
   10fcc:	add	r0, pc, r0
   10fd0:	str	r1, [r0]
   10fd4:	ldr	r0, [sp, #24]
   10fd8:	cmp	r0, #1
   10fdc:	bne	11108 <sfbpf_lex+0xcb0>
   10fe0:	ldr	r0, [pc, #2728]	; 11a90 <sfbpf_lex+0x1638>
   10fe4:	add	r0, pc, r0
   10fe8:	str	r1, [r0]
   10fec:	mov	r0, #146	; 0x92
   10ff0:	b	107cc <sfbpf_lex+0x374>
   10ff4:	mov	r1, #0
   10ff8:	ldr	ip, [pc, #2624]	; 11a40 <sfbpf_lex+0x15e8>
   10ffc:	ldr	lr, [pc, #2624]	; 11a44 <sfbpf_lex+0x15ec>
   11000:	add	ip, pc, ip
   11004:	add	lr, pc, lr
   11008:	b	10e40 <sfbpf_lex+0x9e8>
   1100c:	ldrb	r0, [ip]
   11010:	strb	r0, [r4]
   11014:	ldr	r0, [pc, #2244]	; 118e0 <sfbpf_lex+0x1488>
   11018:	ldr	r0, [pc, r0]
   1101c:	ldr	r4, [pc, #2240]	; 118e4 <sfbpf_lex+0x148c>
   11020:	ldr	r4, [pc, r4]
   11024:	b	10764 <sfbpf_lex+0x30c>
   11028:	ldr	r0, [sp, #4]
   1102c:	mov	r7, ip
   11030:	mvn	r0, r0
   11034:	add	r0, r0, r4
   11038:	add	r4, r1, r0
   1103c:	ldr	r0, [pc, #2420]	; 119b8 <sfbpf_lex+0x1560>
   11040:	add	r0, pc, r0
   11044:	str	r4, [r0]
   11048:	bl	11c04 <yy_get_previous_state>
   1104c:	add	r1, r6, r0, lsl #1
   11050:	ldrh	r1, [r1]
   11054:	cmp	r1, #0
   11058:	beq	11074 <sfbpf_lex+0xc1c>
   1105c:	ldr	r1, [pc, #2392]	; 119bc <sfbpf_lex+0x1564>
   11060:	add	r1, pc, r1
   11064:	str	r4, [r1]
   11068:	ldr	r1, [pc, #2384]	; 119c0 <sfbpf_lex+0x1568>
   1106c:	add	r1, pc, r1
   11070:	str	r0, [r1]
   11074:	add	r1, r8, r0, lsl #1
   11078:	ldr	lr, [pc, #2372]	; 119c4 <sfbpf_lex+0x156c>
   1107c:	mov	ip, r7
   11080:	ldrsh	r1, [r1]
   11084:	add	lr, pc, lr
   11088:	add	r1, r1, #1
   1108c:	add	r2, r9, r1, lsl #1
   11090:	ldrsh	r2, [r2]
   11094:	cmp	r0, r2
   11098:	beq	110c8 <sfbpf_lex+0xc70>
   1109c:	mov	r2, r0
   110a0:	add	r1, sl, r2, lsl #1
   110a4:	ldrh	r3, [r1]
   110a8:	sxth	r2, r3
   110ac:	add	r1, r8, r2, lsl #1
   110b0:	ldrsh	r1, [r1]
   110b4:	add	r1, r1, #1
   110b8:	add	r7, r9, r1, lsl #1
   110bc:	ldrh	r7, [r7]
   110c0:	cmp	r3, r7
   110c4:	bne	110a0 <sfbpf_lex+0xc48>
   110c8:	ldr	r2, [pc, #2296]	; 119c8 <sfbpf_lex+0x1570>
   110cc:	add	r2, pc, r2
   110d0:	add	r1, r2, r1, lsl #1
   110d4:	ldr	r2, [pc, #2288]	; 119cc <sfbpf_lex+0x1574>
   110d8:	ldrh	r1, [r1]
   110dc:	ldr	r2, [pc, r2]
   110e0:	cmp	r1, #0
   110e4:	str	r2, [sp, #40]	; 0x28
   110e8:	movwne	r2, #1433	; 0x599
   110ec:	ldr	r7, [pc, #2268]	; 119d0 <sfbpf_lex+0x1578>
   110f0:	ldr	r6, [pc, #2268]	; 119d4 <sfbpf_lex+0x157c>
   110f4:	cmpne	r1, r2
   110f8:	add	r7, pc, r7
   110fc:	add	r6, pc, r6
   11100:	beq	10764 <sfbpf_lex+0x30c>
   11104:	b	10628 <sfbpf_lex+0x1d0>
   11108:	cmp	r0, #2
   1110c:	beq	10704 <sfbpf_lex+0x2ac>
   11110:	cmp	r0, #0
   11114:	bne	105bc <sfbpf_lex+0x164>
   11118:	b	105d8 <sfbpf_lex+0x180>
   1111c:	ldr	r3, [pc, #2144]	; 11984 <sfbpf_lex+0x152c>
   11120:	mov	r2, #1
   11124:	mov	r4, ip
   11128:	mov	r6, lr
   1112c:	ldr	r3, [pc, r3]
   11130:	ldr	r1, [pc, #2128]	; 11988 <sfbpf_lex+0x1530>
   11134:	ldr	r1, [pc, r1]
   11138:	ldr	r0, [pc, #2124]	; 1198c <sfbpf_lex+0x1534>
   1113c:	ldr	r0, [pc, r0]
   11140:	bl	eb0 <fwrite@plt>
   11144:	mov	lr, r6
   11148:	ldr	r6, [pc, #2112]	; 11990 <sfbpf_lex+0x1538>
   1114c:	mov	ip, r4
   11150:	add	r6, pc, r6
   11154:	b	105bc <sfbpf_lex+0x164>
   11158:	movw	r0, #307	; 0x133
   1115c:	b	11840 <sfbpf_lex+0x13e8>
   11160:	movw	r0, #357	; 0x165
   11164:	b	11840 <sfbpf_lex+0x13e8>
   11168:	ldr	r0, [pc, #2016]	; 11950 <sfbpf_lex+0x14f8>
   1116c:	mov	r1, #1
   11170:	ldr	r0, [pc, r0]
   11174:	b	11838 <sfbpf_lex+0x13e0>
   11178:	ldr	r0, [pc, #1952]	; 11920 <sfbpf_lex+0x14c8>
   1117c:	mov	r1, #0
   11180:	ldr	r0, [pc, r0]
   11184:	b	11838 <sfbpf_lex+0x13e0>
   11188:	mov	r0, #328	; 0x148
   1118c:	b	11840 <sfbpf_lex+0x13e8>
   11190:	ldr	r0, [pc, #1972]	; 1194c <sfbpf_lex+0x14f4>
   11194:	mov	r1, #13
   11198:	ldr	r0, [pc, r0]
   1119c:	b	11838 <sfbpf_lex+0x13e0>
   111a0:	ldr	r0, [pc, #1972]	; 1195c <sfbpf_lex+0x1504>
   111a4:	mov	r1, #8
   111a8:	ldr	r0, [pc, r0]
   111ac:	b	11838 <sfbpf_lex+0x13e0>
   111b0:	ldr	r0, [pc, #1952]	; 11958 <sfbpf_lex+0x1500>
   111b4:	mov	r1, #4
   111b8:	ldr	r0, [pc, r0]
   111bc:	b	11838 <sfbpf_lex+0x13e0>
   111c0:	movw	r0, #330	; 0x14a
   111c4:	b	11840 <sfbpf_lex+0x13e8>
   111c8:	ldr	r0, [pc, #1936]	; 11960 <sfbpf_lex+0x1508>
   111cc:	mov	r1, #16
   111d0:	ldr	r0, [pc, r0]
   111d4:	b	11838 <sfbpf_lex+0x13e0>
   111d8:	movw	r0, #341	; 0x155
   111dc:	b	11840 <sfbpf_lex+0x13e8>
   111e0:	mov	r0, #360	; 0x168
   111e4:	b	11840 <sfbpf_lex+0x13e8>
   111e8:	mov	r0, #324	; 0x144
   111ec:	b	11840 <sfbpf_lex+0x13e8>
   111f0:	mov	r0, #280	; 0x118
   111f4:	b	11840 <sfbpf_lex+0x13e8>
   111f8:	ldr	r0, [pc, #1788]	; 118fc <sfbpf_lex+0x14a4>
   111fc:	ldr	r0, [pc, r0]
   11200:	ldrb	r5, [r0]
   11204:	cmp	r5, #48	; 0x30
   11208:	bne	117c4 <sfbpf_lex+0x136c>
   1120c:	mov	r1, r0
   11210:	ldrb	r5, [r1, #1]!
   11214:	orr	r2, r5, #32
   11218:	cmp	r2, #120	; 0x78
   1121c:	bne	117cc <sfbpf_lex+0x1374>
   11220:	ldrb	r5, [r0, #2]!
   11224:	mov	r4, #16
   11228:	b	117d4 <sfbpf_lex+0x137c>
   1122c:	mov	r0, #320	; 0x140
   11230:	b	11840 <sfbpf_lex+0x13e8>
   11234:	movw	r0, #325	; 0x145
   11238:	b	11840 <sfbpf_lex+0x13e8>
   1123c:	movw	r0, #323	; 0x143
   11240:	b	11840 <sfbpf_lex+0x13e8>
   11244:	movw	r0, #339	; 0x153
   11248:	b	11840 <sfbpf_lex+0x13e8>
   1124c:	movw	r0, #281	; 0x119
   11250:	b	11840 <sfbpf_lex+0x13e8>
   11254:	movw	r0, #277	; 0x115
   11258:	b	11840 <sfbpf_lex+0x13e8>
   1125c:	movw	r0, #362	; 0x16a
   11260:	b	11840 <sfbpf_lex+0x13e8>
   11264:	movw	r0, #337	; 0x151
   11268:	b	11840 <sfbpf_lex+0x13e8>
   1126c:	mov	r0, #260	; 0x104
   11270:	b	11840 <sfbpf_lex+0x13e8>
   11274:	mov	r0, #336	; 0x150
   11278:	b	11840 <sfbpf_lex+0x13e8>
   1127c:	movw	r0, #259	; 0x103
   11280:	b	11840 <sfbpf_lex+0x13e8>
   11284:	ldr	r0, [pc, #1756]	; 11968 <sfbpf_lex+0x1510>
   11288:	ldr	r0, [pc, r0]
   1128c:	b	1142c <sfbpf_lex+0xfd4>
   11290:	movw	r0, #267	; 0x10b
   11294:	b	11840 <sfbpf_lex+0x13e8>
   11298:	movw	r0, #294	; 0x126
   1129c:	b	11840 <sfbpf_lex+0x13e8>
   112a0:	mov	r0, #272	; 0x110
   112a4:	b	11840 <sfbpf_lex+0x13e8>
   112a8:	movw	r0, #293	; 0x125
   112ac:	b	11840 <sfbpf_lex+0x13e8>
   112b0:	movw	r0, #286	; 0x11e
   112b4:	b	11840 <sfbpf_lex+0x13e8>
   112b8:	mov	r0, #364	; 0x16c
   112bc:	b	11840 <sfbpf_lex+0x13e8>
   112c0:	movw	r0, #319	; 0x13f
   112c4:	b	11840 <sfbpf_lex+0x13e8>
   112c8:	movw	r0, #273	; 0x111
   112cc:	b	11840 <sfbpf_lex+0x13e8>
   112d0:	movw	r0, #358	; 0x166
   112d4:	b	11840 <sfbpf_lex+0x13e8>
   112d8:	movw	r0, #326	; 0x146
   112dc:	b	11840 <sfbpf_lex+0x13e8>
   112e0:	mov	r0, #304	; 0x130
   112e4:	b	11840 <sfbpf_lex+0x13e8>
   112e8:	movw	r0, #290	; 0x122
   112ec:	b	11840 <sfbpf_lex+0x13e8>
   112f0:	movw	r0, #298	; 0x12a
   112f4:	b	11840 <sfbpf_lex+0x13e8>
   112f8:	movw	r0, #299	; 0x12b
   112fc:	b	11840 <sfbpf_lex+0x13e8>
   11300:	movw	r0, #289	; 0x121
   11304:	b	11840 <sfbpf_lex+0x13e8>
   11308:	movw	r0, #363	; 0x16b
   1130c:	b	11840 <sfbpf_lex+0x13e8>
   11310:	mov	r0, #292	; 0x124
   11314:	b	11840 <sfbpf_lex+0x13e8>
   11318:	mov	r0, #332	; 0x14c
   1131c:	b	11840 <sfbpf_lex+0x13e8>
   11320:	movw	r0, #295	; 0x127
   11324:	b	11840 <sfbpf_lex+0x13e8>
   11328:	movw	r0, #279	; 0x117
   1132c:	b	11840 <sfbpf_lex+0x13e8>
   11330:	movw	r0, #306	; 0x132
   11334:	b	11840 <sfbpf_lex+0x13e8>
   11338:	movw	r0, #262	; 0x106
   1133c:	b	11840 <sfbpf_lex+0x13e8>
   11340:	movw	r0, #297	; 0x129
   11344:	b	11840 <sfbpf_lex+0x13e8>
   11348:	movw	r0, #305	; 0x131
   1134c:	b	11840 <sfbpf_lex+0x13e8>
   11350:	mov	r0, #33	; 0x21
   11354:	b	11840 <sfbpf_lex+0x13e8>
   11358:	ldr	r0, [pc, #1524]	; 11954 <sfbpf_lex+0x14fc>
   1135c:	mov	r1, #2
   11360:	ldr	r0, [pc, r0]
   11364:	b	11838 <sfbpf_lex+0x13e0>
   11368:	movw	r0, #270	; 0x10e
   1136c:	b	11840 <sfbpf_lex+0x13e8>
   11370:	movw	r0, #359	; 0x167
   11374:	b	11840 <sfbpf_lex+0x13e8>
   11378:	movw	r0, #275	; 0x113
   1137c:	b	11840 <sfbpf_lex+0x13e8>
   11380:	movw	r0, #309	; 0x135
   11384:	b	11840 <sfbpf_lex+0x13e8>
   11388:	ldr	r0, [pc, #1368]	; 118e8 <sfbpf_lex+0x1490>
   1138c:	ldr	r0, [pc, r0]
   11390:	ldrb	r0, [r0]
   11394:	b	11840 <sfbpf_lex+0x13e8>
   11398:	movw	r0, #338	; 0x152
   1139c:	b	11840 <sfbpf_lex+0x13e8>
   113a0:	movw	r0, #342	; 0x156
   113a4:	b	11840 <sfbpf_lex+0x13e8>
   113a8:	movw	r0, #274	; 0x112
   113ac:	b	11840 <sfbpf_lex+0x13e8>
   113b0:	mov	r0, #296	; 0x128
   113b4:	b	11840 <sfbpf_lex+0x13e8>
   113b8:	mov	r0, #264	; 0x108
   113bc:	b	11840 <sfbpf_lex+0x13e8>
   113c0:	ldr	r0, [pc, #1408]	; 11948 <sfbpf_lex+0x14f0>
   113c4:	mov	r1, #18
   113c8:	ldr	r0, [pc, r0]
   113cc:	b	11838 <sfbpf_lex+0x13e0>
   113d0:	movw	r0, #271	; 0x10f
   113d4:	b	11840 <sfbpf_lex+0x13e8>
   113d8:	movw	r0, #334	; 0x14e
   113dc:	b	11840 <sfbpf_lex+0x13e8>
   113e0:	movw	r0, #333	; 0x14d
   113e4:	b	11840 <sfbpf_lex+0x13e8>
   113e8:	mov	r0, #356	; 0x164
   113ec:	b	11840 <sfbpf_lex+0x13e8>
   113f0:	mov	r0, #276	; 0x114
   113f4:	b	11840 <sfbpf_lex+0x13e8>
   113f8:	movw	r0, #329	; 0x149
   113fc:	b	11840 <sfbpf_lex+0x13e8>
   11400:	movw	r0, #266	; 0x10a
   11404:	b	11840 <sfbpf_lex+0x13e8>
   11408:	mov	r0, #352	; 0x160
   1140c:	b	11840 <sfbpf_lex+0x13e8>
   11410:	movw	r0, #354	; 0x162
   11414:	b	11840 <sfbpf_lex+0x13e8>
   11418:	movw	r0, #353	; 0x161
   1141c:	b	11840 <sfbpf_lex+0x13e8>
   11420:	ldr	r0, [pc, #1352]	; 11970 <sfbpf_lex+0x1518>
   11424:	ldr	r0, [pc, r0]
   11428:	add	r0, r0, #1
   1142c:	bl	2078 <sf_sdup>
   11430:	ldr	r1, [pc, #1332]	; 1196c <sfbpf_lex+0x1514>
   11434:	ldr	r1, [pc, r1]
   11438:	str	r0, [r1]
   1143c:	movw	r0, #311	; 0x137
   11440:	b	11840 <sfbpf_lex+0x13e8>
   11444:	movw	r0, #335	; 0x14f
   11448:	b	11840 <sfbpf_lex+0x13e8>
   1144c:	mov	r0, #288	; 0x120
   11450:	b	11840 <sfbpf_lex+0x13e8>
   11454:	ldr	r0, [pc, #1288]	; 11964 <sfbpf_lex+0x150c>
   11458:	mov	r1, #32
   1145c:	ldr	r0, [pc, r0]
   11460:	b	11838 <sfbpf_lex+0x13e0>
   11464:	.word	0x00020510
   11468:	ldr	r0, [pc, #1220]	; 11934 <sfbpf_lex+0x14dc>
   1146c:	mov	r1, #11
   11470:	ldr	r0, [pc, r0]
   11474:	b	11838 <sfbpf_lex+0x13e0>
   11478:	.word	0x000204f8
   1147c:	ldr	r0, [pc, #1208]	; 1193c <sfbpf_lex+0x14e4>
   11480:	mov	r1, #14
   11484:	ldr	r0, [pc, r0]
   11488:	b	11838 <sfbpf_lex+0x13e0>
   1148c:	movw	r0, #347	; 0x15b
   11490:	b	11840 <sfbpf_lex+0x13e8>
   11494:	.word	0x000204d4
   11498:	movw	r0, #302	; 0x12e
   1149c:	b	11840 <sfbpf_lex+0x13e8>
   114a0:	.word	0x0001fc10
   114a4:	ldr	r0, [pc, #1144]	; 11924 <sfbpf_lex+0x14cc>
   114a8:	mov	r1, #3
   114ac:	ldr	r0, [pc, r0]
   114b0:	b	11838 <sfbpf_lex+0x13e0>
   114b4:	.word	0x000204b8
   114b8:	movw	r0, #287	; 0x11f
   114bc:	b	11840 <sfbpf_lex+0x13e8>
   114c0:	.word	0x000204b0
   114c4:	movw	r0, #278	; 0x116
   114c8:	b	11840 <sfbpf_lex+0x13e8>
   114cc:	.word	0x0001fbec
   114d0:	movw	r0, #350	; 0x15e
   114d4:	b	11840 <sfbpf_lex+0x13e8>
   114d8:	.word	0x00020494
   114dc:	.word	0x00020498
   114e0:	ldr	r0, [pc, #1104]	; 11938 <sfbpf_lex+0x14e0>
   114e4:	mov	r1, #12
   114e8:	ldr	r0, [pc, r0]
   114ec:	b	11838 <sfbpf_lex+0x13e0>
   114f0:	movw	r0, #345	; 0x159
   114f4:	b	11840 <sfbpf_lex+0x13e8>
   114f8:	.word	0x0002048c
   114fc:	movw	r0, #351	; 0x15f
   11500:	b	11840 <sfbpf_lex+0x13e8>
   11504:	.word	0x00020458
   11508:	.word	0x00020460
   1150c:	.word	0x0002045c
   11510:	ldr	r0, [pc, #980]	; 118ec <sfbpf_lex+0x1494>
   11514:	ldr	r0, [pc, r0]
   11518:	add	r0, r0, #1
   1151c:	bl	c110 <pcap_ether_aton>
   11520:	ldr	r1, [pc, #968]	; 118f0 <sfbpf_lex+0x1498>
   11524:	ldr	r1, [pc, r1]
   11528:	str	r0, [r1]
   1152c:	movw	r0, #315	; 0x13b
   11530:	b	11840 <sfbpf_lex+0x13e8>
   11534:	.word	0x00020460
   11538:	ldr	r0, [pc, #1008]	; 11930 <sfbpf_lex+0x14d8>
   1153c:	mov	r1, #10
   11540:	ldr	r0, [pc, r0]
   11544:	b	11838 <sfbpf_lex+0x13e0>
   11548:	.word	0x00020498
   1154c:	movw	r0, #327	; 0x147
   11550:	b	11840 <sfbpf_lex+0x13e8>
   11554:	.word	0x00020434
   11558:	movw	r0, #282	; 0x11a
   1155c:	b	11840 <sfbpf_lex+0x13e8>
   11560:	mov	r0, #284	; 0x11c
   11564:	b	11840 <sfbpf_lex+0x13e8>
   11568:	.word	0x00020404
   1156c:	movw	r0, #349	; 0x15d
   11570:	b	11840 <sfbpf_lex+0x13e8>
   11574:	.word	0x00020414
   11578:	mov	r0, #268	; 0x10c
   1157c:	b	11840 <sfbpf_lex+0x13e8>
   11580:	.word	0x000203ec
   11584:	.word	0x000203d8
   11588:	.word	0x00004eec
   1158c:	.word	0x00004fe8
   11590:	.word	0x00009556
   11594:	.word	0x00005b14
   11598:	.word	0x0000a41a
   1159c:	ldr	r0, [pc, #848]	; 118f4 <sfbpf_lex+0x149c>
   115a0:	ldr	r0, [pc, r0]
   115a4:	bl	c110 <pcap_ether_aton>
   115a8:	ldr	r1, [pc, #840]	; 118f8 <sfbpf_lex+0x14a0>
   115ac:	ldr	r1, [pc, r1]
   115b0:	str	r0, [r1]
   115b4:	mov	r0, #312	; 0x138
   115b8:	b	11840 <sfbpf_lex+0x13e8>
   115bc:	movw	r0, #321	; 0x141
   115c0:	b	11840 <sfbpf_lex+0x13e8>
   115c4:	.word	0x000203c4
   115c8:	movw	r0, #285	; 0x11d
   115cc:	b	11840 <sfbpf_lex+0x13e8>
   115d0:	movw	r0, #261	; 0x105
   115d4:	b	11840 <sfbpf_lex+0x13e8>
   115d8:	movw	r0, #269	; 0x10d
   115dc:	b	11840 <sfbpf_lex+0x13e8>
   115e0:	ldr	r0, [pc, #856]	; 11940 <sfbpf_lex+0x14e8>
   115e4:	mov	r1, #15
   115e8:	ldr	r0, [pc, r0]
   115ec:	b	11838 <sfbpf_lex+0x13e0>
   115f0:	.word	0x00020394
   115f4:	ldr	r0, [pc, #812]	; 11928 <sfbpf_lex+0x14d0>
   115f8:	mov	r1, #5
   115fc:	ldr	r0, [pc, r0]
   11600:	b	11838 <sfbpf_lex+0x13e0>
   11604:	.word	0x00004e7c
   11608:	movw	r0, #343	; 0x157
   1160c:	b	11840 <sfbpf_lex+0x13e8>
   11610:	.word	0x00004f78
   11614:	.word	0x000203cc
   11618:	movw	r0, #310	; 0x136
   1161c:	b	11840 <sfbpf_lex+0x13e8>
   11620:	movw	r0, #301	; 0x12d
   11624:	b	11840 <sfbpf_lex+0x13e8>
   11628:	.word	0x00020354
   1162c:	ldr	r0, [pc, #784]	; 11944 <sfbpf_lex+0x14ec>
   11630:	mov	r1, #17
   11634:	ldr	r0, [pc, r0]
   11638:	b	11838 <sfbpf_lex+0x13e0>
   1163c:	movw	r0, #303	; 0x12f
   11640:	b	11840 <sfbpf_lex+0x13e8>
   11644:	movw	r0, #346	; 0x15a
   11648:	b	11840 <sfbpf_lex+0x13e8>
   1164c:	mov	r0, #344	; 0x158
   11650:	b	11840 <sfbpf_lex+0x13e8>
   11654:	.word	0x0002033c
   11658:	movw	r0, #258	; 0x102
   1165c:	b	11840 <sfbpf_lex+0x13e8>
   11660:	.word	0x0002032c
   11664:	mov	r0, #316	; 0x13c
   11668:	b	11840 <sfbpf_lex+0x13e8>
   1166c:	mov	r0, #61	; 0x3d
   11670:	b	11840 <sfbpf_lex+0x13e8>
   11674:	movw	r0, #317	; 0x13d
   11678:	b	11840 <sfbpf_lex+0x13e8>
   1167c:	ldr	r0, [pc, #680]	; 1192c <sfbpf_lex+0x14d4>
   11680:	mov	r1, #9
   11684:	ldr	r0, [pc, r0]
   11688:	b	11838 <sfbpf_lex+0x13e0>
   1168c:	mov	r0, #348	; 0x15c
   11690:	b	11840 <sfbpf_lex+0x13e8>
   11694:	movw	r0, #283	; 0x11b
   11698:	b	11840 <sfbpf_lex+0x13e8>
   1169c:	.word	0x0000b1fe
   116a0:	mov	r0, #300	; 0x12c
   116a4:	b	11840 <sfbpf_lex+0x13e8>
   116a8:	mov	r0, #0
   116ac:	b	11840 <sfbpf_lex+0x13e8>
   116b0:	movw	r0, #331	; 0x14b
   116b4:	b	11840 <sfbpf_lex+0x13e8>
   116b8:	movw	r0, #361	; 0x169
   116bc:	b	11840 <sfbpf_lex+0x13e8>
   116c0:	movw	r0, #318	; 0x13e
   116c4:	b	11840 <sfbpf_lex+0x13e8>
   116c8:	.word	0x00004dc4
   116cc:	.word	0x00004ec0
   116d0:	.word	0x0000b1f0
   116d4:	ldr	r0, [pc, #552]	; 11904 <sfbpf_lex+0x14ac>
   116d8:	ldr	r0, [pc, r0]
   116dc:	bl	2078 <sf_sdup>
   116e0:	ldr	r1, [pc, #544]	; 11908 <sfbpf_lex+0x14b0>
   116e4:	ldr	r1, [pc, r1]
   116e8:	str	r0, [r1]
   116ec:	movw	r0, #313	; 0x139
   116f0:	b	11840 <sfbpf_lex+0x13e8>
   116f4:	mov	r0, #308	; 0x134
   116f8:	b	11840 <sfbpf_lex+0x13e8>
   116fc:	movw	r0, #355	; 0x163
   11700:	b	11840 <sfbpf_lex+0x13e8>
   11704:	.word	0x00020274
   11708:	movw	r0, #265	; 0x109
   1170c:	b	11840 <sfbpf_lex+0x13e8>
   11710:	mov	r0, #340	; 0x154
   11714:	b	11840 <sfbpf_lex+0x13e8>
   11718:	.word	0x00020268
   1171c:	.word	0x00020270
   11720:	.word	0x00020254
   11724:	.word	0x00004d3c
   11728:	.word	0x00004e38
   1172c:	.word	0x0002028c
   11730:	.word	0x00020218
   11734:	.word	0x00020210
   11738:	.word	0x00020248
   1173c:	.word	0x00020234
   11740:	add	r2, sp, #48	; 0x30
   11744:	vmov.i32	q8, #0	; 0x00000000
   11748:	add	r3, sp, #44	; 0x2c
   1174c:	mov	r1, #0
   11750:	add	r0, r2, #8
   11754:	vst1.64	{d16-d17}, [r0]
   11758:	mov	r0, #0
   1175c:	str	r0, [sp, #76]	; 0x4c
   11760:	str	r0, [sp, #72]	; 0x48
   11764:	mov	r0, #10
   11768:	str	r0, [sp, #52]	; 0x34
   1176c:	mov	r0, #4
   11770:	str	r0, [sp, #48]	; 0x30
   11774:	ldr	r0, [pc, #400]	; 1190c <sfbpf_lex+0x14b4>
   11778:	ldr	r0, [pc, r0]
   1177c:	bl	fa0 <getaddrinfo@plt>
   11780:	cmp	r0, #0
   11784:	bne	118cc <sfbpf_lex+0x1474>
   11788:	ldr	r0, [sp, #44]	; 0x2c
   1178c:	bl	f94 <freeaddrinfo@plt>
   11790:	ldr	r0, [pc, #376]	; 11910 <sfbpf_lex+0x14b8>
   11794:	ldr	r0, [pc, r0]
   11798:	bl	2078 <sf_sdup>
   1179c:	ldr	r1, [pc, #368]	; 11914 <sfbpf_lex+0x14bc>
   117a0:	ldr	r1, [pc, r1]
   117a4:	str	r0, [r1]
   117a8:	movw	r0, #314	; 0x13a
   117ac:	b	11840 <sfbpf_lex+0x13e8>
   117b0:	movw	r0, #322	; 0x142
   117b4:	b	11840 <sfbpf_lex+0x13e8>
   117b8:	movw	r0, #263	; 0x107
   117bc:	b	11840 <sfbpf_lex+0x13e8>
   117c0:	.word	0x000201c4
   117c4:	mov	r4, #10
   117c8:	b	117d4 <sfbpf_lex+0x137c>
   117cc:	mov	r4, #8
   117d0:	mov	r0, r1
   117d4:	cmp	r5, #0
   117d8:	beq	1182c <sfbpf_lex+0x13d4>
   117dc:	add	r6, r0, #1
   117e0:	bl	eec <__ctype_b_loc@plt>
   117e4:	ldr	r0, [r0]
   117e8:	mov	r1, #0
   117ec:	uxtb	r2, r5
   117f0:	mul	r1, r1, r4
   117f4:	add	r3, r0, r2, lsl #1
   117f8:	ldrh	r7, [r3]
   117fc:	mvn	r3, #47	; 0x2f
   11800:	tst	r7, #2048	; 0x800
   11804:	bne	11814 <sfbpf_lex+0x13bc>
   11808:	tst	r7, #512	; 0x200
   1180c:	mvn	r3, #86	; 0x56
   11810:	mvneq	r3, #54	; 0x36
   11814:	ldrb	r5, [r6], #1
   11818:	add	r2, r3, r2
   1181c:	add	r1, r2, r1
   11820:	cmp	r5, #0
   11824:	bne	117ec <sfbpf_lex+0x1394>
   11828:	b	11830 <sfbpf_lex+0x13d8>
   1182c:	mov	r1, #0
   11830:	ldr	r0, [pc, #200]	; 11900 <sfbpf_lex+0x14a8>
   11834:	ldr	r0, [pc, r0]
   11838:	str	r1, [r0]
   1183c:	movw	r0, #291	; 0x123
   11840:	sub	sp, fp, #28
   11844:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11848:	ldr	r0, [pc, #300]	; 1197c <sfbpf_lex+0x1524>
   1184c:	ldr	r0, [pc, r0]
   11850:	ldrb	r1, [r0]
   11854:	ldr	r0, [pc, #292]	; 11980 <sfbpf_lex+0x1528>
   11858:	add	r0, pc, r0
   1185c:	bl	2028 <sf_bpf_error>
   11860:	ldr	r1, [pc, #268]	; 11974 <sfbpf_lex+0x151c>
   11864:	ldr	r1, [pc, r1]
   11868:	ldr	r0, [pc, #264]	; 11978 <sfbpf_lex+0x1520>
   1186c:	add	r0, pc, r0
   11870:	bl	2028 <sf_bpf_error>
   11874:	mov	r0, #0
   11878:	str	r0, [r2, #4]
   1187c:	ldr	r0, [pc, #348]	; 119e0 <sfbpf_lex+0x1588>
   11880:	add	r0, pc, r0
   11884:	bl	11e7c <yy_fatal_error>
   11888:	ldr	r0, [pc, #532]	; 11aa4 <sfbpf_lex+0x164c>
   1188c:	add	r0, pc, r0
   11890:	bl	11e7c <yy_fatal_error>
   11894:	ldr	r0, [pc, #524]	; 11aa8 <sfbpf_lex+0x1650>
   11898:	add	r0, pc, r0
   1189c:	bl	11e7c <yy_fatal_error>
   118a0:	ldr	r0, [pc, #492]	; 11a94 <sfbpf_lex+0x163c>
   118a4:	add	r0, pc, r0
   118a8:	bl	11e7c <yy_fatal_error>
   118ac:	ldr	r1, [pc, #100]	; 11918 <sfbpf_lex+0x14c0>
   118b0:	ldr	r1, [pc, r1]
   118b4:	ldr	r0, [pc, #96]	; 1191c <sfbpf_lex+0x14c4>
   118b8:	add	r0, pc, r0
   118bc:	bl	2028 <sf_bpf_error>
   118c0:	ldr	r0, [pc, #472]	; 11aa0 <sfbpf_lex+0x1648>
   118c4:	add	r0, pc, r0
   118c8:	bl	11e7c <yy_fatal_error>
   118cc:	ldr	r1, [pc, #452]	; 11a98 <sfbpf_lex+0x1640>
   118d0:	ldr	r1, [pc, r1]
   118d4:	ldr	r0, [pc, #448]	; 11a9c <sfbpf_lex+0x1644>
   118d8:	add	r0, pc, r0
   118dc:	bl	2028 <sf_bpf_error>
   118e0:	.word	0x0001f978
   118e4:	.word	0x0001f974
   118e8:	.word	0x0001f654
   118ec:	.word	0x0001f4cc
   118f0:	.word	0x0001eb9c
   118f4:	.word	0x0001f440
   118f8:	.word	0x0001eb14
   118fc:	.word	0x0001f7e4
   11900:	.word	0x0001e88c
   11904:	.word	0x0001f308
   11908:	.word	0x0001e9dc
   1190c:	.word	0x0001f268
   11910:	.word	0x0001f24c
   11914:	.word	0x0001e920
   11918:	.word	0x0001f130
   1191c:	.word	0x0000da70
   11920:	.word	0x0001ef40
   11924:	.word	0x0001ec14
   11928:	.word	0x0001eac4
   1192c:	.word	0x0001ea3c
   11930:	.word	0x0001eb80
   11934:	.word	0x0001ec50
   11938:	.word	0x0001ebd8
   1193c:	.word	0x0001ec3c
   11940:	.word	0x0001ead8
   11944:	.word	0x0001ea8c
   11948:	.word	0x0001ecf8
   1194c:	.word	0x0001ef28
   11950:	.word	0x0001ef50
   11954:	.word	0x0001ed60
   11958:	.word	0x0001ef08
   1195c:	.word	0x0001ef18
   11960:	.word	0x0001eef0
   11964:	.word	0x0001ec64
   11968:	.word	0x0001f758
   1196c:	.word	0x0001ec8c
   11970:	.word	0x0001f5bc
   11974:	.word	0x0001f17c
   11978:	.word	0x0000dad6
   1197c:	.word	0x0001f194
   11980:	.word	0x0000dafc
   11984:	.word	0x0001f844
   11988:	.word	0x0001f8a8
   1198c:	.word	0x0001f8a4
   11990:	.word	0x00004444
   11994:	.word	0x0001ffac
   11998:	.word	0x0001ff40
   1199c:	.word	0x0001ff34
   119a0:	.word	0x0001ff24
   119a4:	.word	0x0001ff10
   119a8:	.word	0x0001fed8
   119ac:	.word	0x000049e8
   119b0:	.word	0x0001ff20
   119b4:	.word	0x0001fec0
   119b8:	.word	0x0001f948
   119bc:	.word	0x0001f934
   119c0:	.word	0x0001f924
   119c4:	.word	0x0001f8f8
   119c8:	.word	0x0000a808
   119cc:	.word	0x0001f904
   119d0:	.word	0x0000439c
   119d4:	.word	0x00004498
   119d8:	.word	0x00004950
   119dc:	.word	0x0001fe3c
   119e0:	.word	0x0000dbee
   119e4:	.word	0x0001fd84
   119e8:	.word	0x0001fd74
   119ec:	.word	0x0001fd68
   119f0:	.word	0x0001fcfc
   119f4:	.word	0x0001fcf8
   119f8:	.word	0x0001fcec
   119fc:	.word	0x0001fc7c
   11a00:	.word	0x0001fc68
   11a04:	.word	0x0001fca8
   11a08:	.word	0x0001fc9c
   11a0c:	.word	0x0001fb5c
   11a10:	.word	0x0001fb64
   11a14:	.word	0x0001fb50
   11a18:	.word	0x0001fb60
   11a1c:	.word	0x0001fc28
   11a20:	.word	0x0001fc38
   11a24:	.word	0x0001fc1c
   11a28:	.word	0x0001fc08
   11a2c:	.word	0x0001fbe0
   11a30:	.word	0x0001fbb8
   11a34:	.word	0x0001fbc4
   11a38:	.word	0x0001fbb8
   11a3c:	.word	0x0001fb90
   11a40:	.word	0x0001f98c
   11a44:	.word	0x0001f978
   11a48:	.word	0x0001fb3c
   11a4c:	.word	0x0001fb30
   11a50:	.word	0x00004624
   11a54:	.word	0x00004720
   11a58:	.word	0x0001fabc
   11a5c:	.word	0x000045bc
   11a60:	.word	0x000046b8
   11a64:	.word	0x0001fab4
   11a68:	.word	0x0001faa0
   11a6c:	.word	0x0001faac
   11a70:	.word	0x0001fa54
   11a74:	.word	0x0001fa48
   11a78:	.word	0x0001fa34
   11a7c:	.word	0x0001f9f8
   11a80:	.word	0x0000450c
   11a84:	.word	0x00004608
   11a88:	.word	0x0001fa04
   11a8c:	.word	0x0001fa14
   11a90:	.word	0x0001f9a4
   11a94:	.word	0x0000dac2
   11a98:	.word	0x0001f110
   11a9c:	.word	0x0000da3a
   11aa0:	.word	0x0000db72
   11aa4:	.word	0x0000dc0e
   11aa8:	.word	0x0000dc1f

00011aac <sfbpf_ensure_buffer_stack>:
   11aac:	push	{r4, sl, fp, lr}
   11ab0:	add	fp, sp, #8
   11ab4:	ldr	r0, [pc, #184]	; 11b74 <sfbpf_ensure_buffer_stack+0xc8>
   11ab8:	ldr	r0, [pc, r0]
   11abc:	cmp	r0, #0
   11ac0:	beq	11b28 <sfbpf_ensure_buffer_stack+0x7c>
   11ac4:	ldr	r1, [pc, #184]	; 11b84 <sfbpf_ensure_buffer_stack+0xd8>
   11ac8:	ldr	r1, [pc, r1]
   11acc:	ldr	r3, [pc, #180]	; 11b88 <sfbpf_ensure_buffer_stack+0xdc>
   11ad0:	ldr	r3, [pc, r3]
   11ad4:	sub	r2, r1, #1
   11ad8:	cmp	r3, r2
   11adc:	popcc	{r4, sl, fp, pc}
   11ae0:	add	r4, r1, #8
   11ae4:	lsl	r1, r4, #2
   11ae8:	bl	ea4 <realloc@plt>
   11aec:	ldr	r1, [pc, #152]	; 11b8c <sfbpf_ensure_buffer_stack+0xe0>
   11af0:	cmp	r0, #0
   11af4:	add	r1, pc, r1
   11af8:	str	r0, [r1]
   11afc:	beq	11b68 <sfbpf_ensure_buffer_stack+0xbc>
   11b00:	ldr	r1, [pc, #136]	; 11b90 <sfbpf_ensure_buffer_stack+0xe4>
   11b04:	vmov.i32	q8, #0	; 0x00000000
   11b08:	ldr	r1, [pc, r1]
   11b0c:	add	r0, r0, r1, lsl #2
   11b10:	vst1.32	{d16-d17}, [r0]!
   11b14:	vst1.32	{d16-d17}, [r0]
   11b18:	ldr	r0, [pc, #116]	; 11b94 <sfbpf_ensure_buffer_stack+0xe8>
   11b1c:	add	r0, pc, r0
   11b20:	str	r4, [r0]
   11b24:	pop	{r4, sl, fp, pc}
   11b28:	mov	r0, #4
   11b2c:	bl	ed4 <malloc@plt>
   11b30:	ldr	r1, [pc, #64]	; 11b78 <sfbpf_ensure_buffer_stack+0xcc>
   11b34:	cmp	r0, #0
   11b38:	add	r1, pc, r1
   11b3c:	str	r0, [r1]
   11b40:	movne	r1, #0
   11b44:	strne	r1, [r0]
   11b48:	ldrne	r0, [pc, #44]	; 11b7c <sfbpf_ensure_buffer_stack+0xd0>
   11b4c:	addne	r0, pc, r0
   11b50:	strne	r1, [r0]
   11b54:	movne	r1, #1
   11b58:	ldrne	r0, [pc, #32]	; 11b80 <sfbpf_ensure_buffer_stack+0xd4>
   11b5c:	addne	r0, pc, r0
   11b60:	strne	r1, [r0]
   11b64:	popne	{r4, sl, fp, pc}
   11b68:	ldr	r0, [pc, #40]	; 11b98 <sfbpf_ensure_buffer_stack+0xec>
   11b6c:	add	r0, pc, r0
   11b70:	bl	11e7c <yy_fatal_error>
   11b74:	.word	0x0001eec8
   11b78:	.word	0x0001ee48
   11b7c:	.word	0x0001ee38
   11b80:	.word	0x0001ee44
   11b84:	.word	0x0001eed8
   11b88:	.word	0x0001eeb4
   11b8c:	.word	0x0001ee8c
   11b90:	.word	0x0001ee98
   11b94:	.word	0x0001ee84
   11b98:	.word	0x0000d979

00011b9c <sfbpf__create_buffer>:
   11b9c:	push	{r4, r5, r6, sl, fp, lr}
   11ba0:	add	fp, sp, #16
   11ba4:	mov	r4, r0
   11ba8:	mov	r0, #48	; 0x30
   11bac:	mov	r6, r1
   11bb0:	bl	ed4 <malloc@plt>
   11bb4:	cmp	r0, #0
   11bb8:	beq	11bf4 <sfbpf__create_buffer+0x58>
   11bbc:	mov	r5, r0
   11bc0:	str	r6, [r0, #12]
   11bc4:	add	r0, r6, #2
   11bc8:	bl	ed4 <malloc@plt>
   11bcc:	cmp	r0, #0
   11bd0:	str	r0, [r5, #4]
   11bd4:	beq	11bf4 <sfbpf__create_buffer+0x58>
   11bd8:	mov	r0, #1
   11bdc:	mov	r1, r4
   11be0:	str	r0, [r5, #20]
   11be4:	mov	r0, r5
   11be8:	bl	11eb0 <sfbpf__init_buffer>
   11bec:	mov	r0, r5
   11bf0:	pop	{r4, r5, r6, sl, fp, pc}
   11bf4:	ldr	r0, [pc, #4]	; 11c00 <sfbpf__create_buffer+0x64>
   11bf8:	add	r0, pc, r0
   11bfc:	bl	11e7c <yy_fatal_error>
   11c00:	.word	0x0000d7a1

00011c04 <yy_get_previous_state>:
   11c04:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11c08:	add	fp, sp, #28
   11c0c:	sub	sp, sp, #4
   11c10:	ldr	r0, [pc, #296]	; 11d40 <yy_get_previous_state+0x13c>
   11c14:	add	r0, pc, r0
   11c18:	ldrb	r0, [r0]
   11c1c:	ldr	r7, [pc, #288]	; 11d44 <yy_get_previous_state+0x140>
   11c20:	ldr	r7, [pc, r7]
   11c24:	ldr	r2, [pc, #284]	; 11d48 <yy_get_previous_state+0x144>
   11c28:	ldr	r2, [pc, r2]
   11c2c:	cmp	r2, r7
   11c30:	bcs	11d38 <yy_get_previous_state+0x134>
   11c34:	ldr	ip, [pc, #272]	; 11d4c <yy_get_previous_state+0x148>
   11c38:	ldr	r3, [pc, #272]	; 11d50 <yy_get_previous_state+0x14c>
   11c3c:	ldr	r1, [pc, #272]	; 11d54 <yy_get_previous_state+0x150>
   11c40:	ldr	r9, [pc, #272]	; 11d58 <yy_get_previous_state+0x154>
   11c44:	ldr	r5, [pc, #272]	; 11d5c <yy_get_previous_state+0x158>
   11c48:	ldr	lr, [pc, #272]	; 11d60 <yy_get_previous_state+0x15c>
   11c4c:	movw	r6, #1434	; 0x59a
   11c50:	str	r7, [sp]
   11c54:	add	ip, pc, ip
   11c58:	add	r3, pc, r3
   11c5c:	add	r1, pc, r1
   11c60:	add	r9, pc, r9
   11c64:	add	r5, pc, r5
   11c68:	add	lr, pc, lr
   11c6c:	ldrb	r4, [r2]
   11c70:	cmp	r4, #0
   11c74:	beq	11c90 <yy_get_previous_state+0x8c>
   11c78:	mov	sl, r7
   11c7c:	ldr	r7, [pc, #224]	; 11d64 <yy_get_previous_state+0x160>
   11c80:	add	r7, pc, r7
   11c84:	ldrb	r8, [r7, r4]
   11c88:	mov	r7, sl
   11c8c:	b	11c94 <yy_get_previous_state+0x90>
   11c90:	mov	r8, #1
   11c94:	add	r4, ip, r0, lsl #1
   11c98:	ldrh	r4, [r4]
   11c9c:	cmp	r4, #0
   11ca0:	beq	11cbc <yy_get_previous_state+0xb8>
   11ca4:	ldr	r4, [pc, #188]	; 11d68 <yy_get_previous_state+0x164>
   11ca8:	add	r4, pc, r4
   11cac:	str	r2, [r4]
   11cb0:	ldr	r4, [pc, #180]	; 11d6c <yy_get_previous_state+0x168>
   11cb4:	add	r4, pc, r4
   11cb8:	str	r0, [r4]
   11cbc:	add	r4, r3, r0, lsl #1
   11cc0:	ldrsh	r4, [r4]
   11cc4:	add	sl, r4, r8
   11cc8:	add	r4, r1, sl, lsl #1
   11ccc:	ldrsh	r4, [r4]
   11cd0:	cmp	r0, r4
   11cd4:	beq	11d24 <yy_get_previous_state+0x120>
   11cd8:	mov	r7, ip
   11cdc:	mov	r9, r8
   11ce0:	add	r0, r5, r0, lsl #1
   11ce4:	ldrsh	r0, [r0]
   11ce8:	add	r4, r3, r0, lsl #1
   11cec:	cmp	r0, r6
   11cf0:	uxth	ip, r0
   11cf4:	ldrbge	r9, [lr, r8]
   11cf8:	ldrsh	r4, [r4]
   11cfc:	uxtab	sl, r4, r9
   11d00:	uxtb	r8, r9
   11d04:	add	r4, r1, sl, lsl #1
   11d08:	ldrh	r4, [r4]
   11d0c:	cmp	ip, r4
   11d10:	bne	11ce0 <yy_get_previous_state+0xdc>
   11d14:	mov	ip, r7
   11d18:	ldr	r7, [sp]
   11d1c:	ldr	r9, [pc, #76]	; 11d70 <yy_get_previous_state+0x16c>
   11d20:	add	r9, pc, r9
   11d24:	add	r0, r9, sl, lsl #1
   11d28:	add	r2, r2, #1
   11d2c:	ldrsh	r0, [r0]
   11d30:	cmp	r2, r7
   11d34:	bcc	11c6c <yy_get_previous_state+0x68>
   11d38:	sub	sp, fp, #28
   11d3c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11d40:	.word	0x0001ed68
   11d44:	.word	0x0001ed68
   11d48:	.word	0x0001edb8
   11d4c:	.word	0x00003940
   11d50:	.word	0x00007eae
   11d54:	.word	0x0000446c
   11d58:	.word	0x00009c74
   11d5c:	.word	0x00008d6e
   11d60:	.word	0x00009c36
   11d64:	.word	0x00003814
   11d68:	.word	0x0001ecec
   11d6c:	.word	0x0001ecdc
   11d70:	.word	0x00009bb4

00011d74 <sfbpf_wrap>:
   11d74:	mov	r0, #1
   11d78:	bx	lr

00011d7c <sfbpf_restart>:
   11d7c:	push	{r4, sl, fp, lr}
   11d80:	add	fp, sp, #8
   11d84:	mov	r4, r0
   11d88:	ldr	r0, [pc, #188]	; 11e4c <sfbpf_restart+0xd0>
   11d8c:	ldr	r0, [pc, r0]
   11d90:	cmp	r0, #0
   11d94:	beq	11dac <sfbpf_restart+0x30>
   11d98:	ldr	r1, [pc, #176]	; 11e50 <sfbpf_restart+0xd4>
   11d9c:	ldr	r1, [pc, r1]
   11da0:	ldr	r0, [r0, r1, lsl #2]
   11da4:	cmp	r0, #0
   11da8:	bne	11ddc <sfbpf_restart+0x60>
   11dac:	bl	11aac <sfbpf_ensure_buffer_stack>
   11db0:	ldr	r0, [pc, #156]	; 11e54 <sfbpf_restart+0xd8>
   11db4:	mov	r1, #16384	; 0x4000
   11db8:	ldr	r0, [pc, r0]
   11dbc:	bl	11b9c <sfbpf__create_buffer>
   11dc0:	ldr	r1, [pc, #144]	; 11e58 <sfbpf_restart+0xdc>
   11dc4:	ldr	r1, [pc, r1]
   11dc8:	ldr	r2, [pc, #140]	; 11e5c <sfbpf_restart+0xe0>
   11dcc:	ldr	r2, [pc, r2]
   11dd0:	cmp	r1, #0
   11dd4:	str	r0, [r1, r2, lsl #2]
   11dd8:	moveq	r0, #0
   11ddc:	mov	r1, r4
   11de0:	bl	11eb0 <sfbpf__init_buffer>
   11de4:	ldr	r0, [pc, #116]	; 11e60 <sfbpf_restart+0xe4>
   11de8:	ldr	r0, [pc, r0]
   11dec:	ldr	r1, [pc, #112]	; 11e64 <sfbpf_restart+0xe8>
   11df0:	ldr	r1, [pc, r1]
   11df4:	ldr	r2, [r1, r0, lsl #2]
   11df8:	ldr	r3, [r2, #16]
   11dfc:	ldr	r4, [pc, #100]	; 11e68 <sfbpf_restart+0xec>
   11e00:	add	r4, pc, r4
   11e04:	str	r3, [r4]
   11e08:	ldr	r2, [r2, #8]
   11e0c:	ldr	r3, [pc, #88]	; 11e6c <sfbpf_restart+0xf0>
   11e10:	add	r3, pc, r3
   11e14:	str	r2, [r3]
   11e18:	ldr	r3, [pc, #80]	; 11e70 <sfbpf_restart+0xf4>
   11e1c:	add	r3, pc, r3
   11e20:	str	r2, [r3]
   11e24:	ldr	r0, [r1, r0, lsl #2]
   11e28:	ldr	r0, [r0]
   11e2c:	ldr	r1, [pc, #64]	; 11e74 <sfbpf_restart+0xf8>
   11e30:	add	r1, pc, r1
   11e34:	str	r0, [r1]
   11e38:	ldrb	r0, [r2]
   11e3c:	ldr	r1, [pc, #52]	; 11e78 <sfbpf_restart+0xfc>
   11e40:	add	r1, pc, r1
   11e44:	strb	r0, [r1]
   11e48:	pop	{r4, sl, fp, pc}
   11e4c:	.word	0x0001ebf4
   11e50:	.word	0x0001ebe8
   11e54:	.word	0x0001ebb4
   11e58:	.word	0x0001ebbc
   11e5c:	.word	0x0001ebb8
   11e60:	.word	0x0001eb9c
   11e64:	.word	0x0001eb90
   11e68:	.word	0x0001eb98
   11e6c:	.word	0x0001ebd0
   11e70:	.word	0x0001eb6c
   11e74:	.word	0x0001eb3c
   11e78:	.word	0x0001eb4c

00011e7c <yy_fatal_error>:
   11e7c:	push	{fp, lr}
   11e80:	mov	fp, sp
   11e84:	mov	r2, r0
   11e88:	ldr	r0, [pc, #24]	; 11ea8 <yy_fatal_error+0x2c>
   11e8c:	ldr	r0, [pc, r0]
   11e90:	ldr	r0, [r0]
   11e94:	ldr	r1, [pc, #16]	; 11eac <yy_fatal_error+0x30>
   11e98:	add	r1, pc, r1
   11e9c:	bl	f1c <fprintf@plt>
   11ea0:	mov	r0, #2
   11ea4:	bl	ef8 <exit@plt>
   11ea8:	.word	0x0001e220
   11eac:	.word	0x00000821

00011eb0 <sfbpf__init_buffer>:
   11eb0:	push	{r4, r5, r6, r7, fp, lr}
   11eb4:	add	fp, sp, #16
   11eb8:	mov	r6, r1
   11ebc:	mov	r4, r0
   11ec0:	bl	f28 <__errno_location@plt>
   11ec4:	ldr	r7, [r0]
   11ec8:	mov	r5, r0
   11ecc:	mov	r0, r4
   11ed0:	bl	120ec <sfbpf__flush_buffer>
   11ed4:	mov	r0, #1
   11ed8:	str	r0, [r4, #40]	; 0x28
   11edc:	str	r6, [r4]
   11ee0:	ldr	r0, [pc, #100]	; 11f4c <sfbpf__init_buffer+0x9c>
   11ee4:	ldr	r0, [pc, r0]
   11ee8:	cmp	r0, #0
   11eec:	beq	11f00 <sfbpf__init_buffer+0x50>
   11ef0:	ldr	r1, [pc, #88]	; 11f50 <sfbpf__init_buffer+0xa0>
   11ef4:	ldr	r1, [pc, r1]
   11ef8:	ldr	r0, [r0, r1, lsl #2]
   11efc:	b	11f04 <sfbpf__init_buffer+0x54>
   11f00:	mov	r0, #0
   11f04:	cmp	r0, r4
   11f08:	movne	r1, #1
   11f0c:	movne	r0, #0
   11f10:	strne	r1, [r4, #32]
   11f14:	strne	r0, [r4, #36]	; 0x24
   11f18:	cmp	r6, #0
   11f1c:	beq	11f3c <sfbpf__init_buffer+0x8c>
   11f20:	mov	r0, r6
   11f24:	bl	f64 <fileno@plt>
   11f28:	bl	fb8 <isatty@plt>
   11f2c:	mov	r1, #0
   11f30:	cmp	r0, #0
   11f34:	movwgt	r1, #1
   11f38:	b	11f40 <sfbpf__init_buffer+0x90>
   11f3c:	mov	r1, #0
   11f40:	str	r1, [r4, #24]
   11f44:	str	r7, [r5]
   11f48:	pop	{r4, r5, r6, r7, fp, pc}
   11f4c:	.word	0x0001ea9c
   11f50:	.word	0x0001ea90

00011f54 <sfbpf__switch_to_buffer>:
   11f54:	push	{r4, sl, fp, lr}
   11f58:	add	fp, sp, #8
   11f5c:	mov	r4, r0
   11f60:	bl	11aac <sfbpf_ensure_buffer_stack>
   11f64:	ldr	r0, [pc, #208]	; 1203c <sfbpf__switch_to_buffer+0xe8>
   11f68:	ldr	r0, [pc, r0]
   11f6c:	cmp	r0, #0
   11f70:	beq	11f84 <sfbpf__switch_to_buffer+0x30>
   11f74:	ldr	r1, [pc, #196]	; 12040 <sfbpf__switch_to_buffer+0xec>
   11f78:	ldr	r1, [pc, r1]
   11f7c:	ldr	r1, [r0, r1, lsl #2]
   11f80:	b	11f88 <sfbpf__switch_to_buffer+0x34>
   11f84:	mov	r1, #0
   11f88:	cmp	r1, r4
   11f8c:	popeq	{r4, sl, fp, pc}
   11f90:	ldr	r1, [pc, #172]	; 12044 <sfbpf__switch_to_buffer+0xf0>
   11f94:	cmp	r0, #0
   11f98:	ldr	r1, [pc, r1]
   11f9c:	beq	11fe0 <sfbpf__switch_to_buffer+0x8c>
   11fa0:	ldr	r1, [r0, r1, lsl #2]!
   11fa4:	cmp	r1, #0
   11fa8:	beq	11fe4 <sfbpf__switch_to_buffer+0x90>
   11fac:	ldr	r1, [pc, #148]	; 12048 <sfbpf__switch_to_buffer+0xf4>
   11fb0:	add	r1, pc, r1
   11fb4:	ldrb	r1, [r1]
   11fb8:	ldr	r2, [pc, #140]	; 1204c <sfbpf__switch_to_buffer+0xf8>
   11fbc:	ldr	r2, [pc, r2]
   11fc0:	strb	r1, [r2]
   11fc4:	ldr	r1, [r0]
   11fc8:	str	r2, [r1, #8]
   11fcc:	ldr	r1, [r0]
   11fd0:	ldr	r2, [pc, #120]	; 12050 <sfbpf__switch_to_buffer+0xfc>
   11fd4:	ldr	r2, [pc, r2]
   11fd8:	str	r2, [r1, #16]
   11fdc:	b	11fe4 <sfbpf__switch_to_buffer+0x90>
   11fe0:	lsl	r0, r1, #2
   11fe4:	str	r4, [r0]
   11fe8:	ldr	r1, [r4, #16]
   11fec:	ldr	r2, [pc, #96]	; 12054 <sfbpf__switch_to_buffer+0x100>
   11ff0:	add	r2, pc, r2
   11ff4:	str	r1, [r2]
   11ff8:	ldr	r1, [r4, #8]
   11ffc:	ldr	r2, [pc, #84]	; 12058 <sfbpf__switch_to_buffer+0x104>
   12000:	add	r2, pc, r2
   12004:	str	r1, [r2]
   12008:	ldr	r2, [pc, #76]	; 1205c <sfbpf__switch_to_buffer+0x108>
   1200c:	add	r2, pc, r2
   12010:	str	r1, [r2]
   12014:	ldr	r0, [r0]
   12018:	ldr	r0, [r0]
   1201c:	ldr	r2, [pc, #60]	; 12060 <sfbpf__switch_to_buffer+0x10c>
   12020:	add	r2, pc, r2
   12024:	str	r0, [r2]
   12028:	ldrb	r0, [r1]
   1202c:	ldr	r1, [pc, #48]	; 12064 <sfbpf__switch_to_buffer+0x110>
   12030:	add	r1, pc, r1
   12034:	strb	r0, [r1]
   12038:	pop	{r4, sl, fp, pc}
   1203c:	.word	0x0001ea18
   12040:	.word	0x0001ea0c
   12044:	.word	0x0001e9ec
   12048:	.word	0x0001e9dc
   1204c:	.word	0x0001e9cc
   12050:	.word	0x0001e9c4
   12054:	.word	0x0001e9a8
   12058:	.word	0x0001e9e0
   1205c:	.word	0x0001e97c
   12060:	.word	0x0001e94c
   12064:	.word	0x0001e95c

00012068 <sfbpf_alloc>:
   12068:	b	ed4 <malloc@plt>

0001206c <sfbpf__delete_buffer>:
   1206c:	cmp	r0, #0
   12070:	bxeq	lr
   12074:	push	{r4, sl, fp, lr}
   12078:	add	fp, sp, #8
   1207c:	mov	r4, r0
   12080:	ldr	r0, [pc, #84]	; 120dc <sfbpf__delete_buffer+0x70>
   12084:	ldr	r0, [pc, r0]
   12088:	cmp	r0, #0
   1208c:	beq	120a0 <sfbpf__delete_buffer+0x34>
   12090:	ldr	r1, [pc, #72]	; 120e0 <sfbpf__delete_buffer+0x74>
   12094:	ldr	r1, [pc, r1]
   12098:	ldr	r1, [r0, r1, lsl #2]
   1209c:	b	120a4 <sfbpf__delete_buffer+0x38>
   120a0:	mov	r1, #0
   120a4:	cmp	r1, r4
   120a8:	bne	120bc <sfbpf__delete_buffer+0x50>
   120ac:	ldr	r1, [pc, #48]	; 120e4 <sfbpf__delete_buffer+0x78>
   120b0:	mov	r2, #0
   120b4:	ldr	r1, [pc, r1]
   120b8:	str	r2, [r0, r1, lsl #2]
   120bc:	ldr	r0, [r4, #20]
   120c0:	cmp	r0, #0
   120c4:	beq	120d0 <sfbpf__delete_buffer+0x64>
   120c8:	ldr	r0, [r4, #4]
   120cc:	bl	e5c <free@plt>
   120d0:	mov	r0, r4
   120d4:	pop	{r4, sl, fp, lr}
   120d8:	b	e5c <free@plt>
   120dc:	.word	0x0001e8fc
   120e0:	.word	0x0001e8f0
   120e4:	.word	0x0001e8d0

000120e8 <sfbpf_free>:
   120e8:	b	e5c <free@plt>

000120ec <sfbpf__flush_buffer>:
   120ec:	cmp	r0, #0
   120f0:	beq	1219c <sfbpf__flush_buffer+0xb0>
   120f4:	mov	r2, #0
   120f8:	str	r2, [r0, #16]
   120fc:	ldr	r1, [r0, #4]
   12100:	strb	r2, [r1]
   12104:	ldr	r1, [r0, #4]
   12108:	strb	r2, [r1, #1]
   1210c:	mov	r1, #1
   12110:	str	r1, [r0, #28]
   12114:	str	r2, [r0, #44]	; 0x2c
   12118:	ldr	r1, [r0, #4]
   1211c:	str	r1, [r0, #8]
   12120:	ldr	r1, [pc, #120]	; 121a0 <sfbpf__flush_buffer+0xb4>
   12124:	ldr	r1, [pc, r1]
   12128:	cmp	r1, #0
   1212c:	ldrne	r2, [pc, #112]	; 121a4 <sfbpf__flush_buffer+0xb8>
   12130:	ldrne	r2, [pc, r2]
   12134:	ldrne	r2, [r1, r2, lsl #2]
   12138:	cmp	r2, r0
   1213c:	bxne	lr
   12140:	ldr	r0, [pc, #96]	; 121a8 <sfbpf__flush_buffer+0xbc>
   12144:	ldr	r0, [pc, r0]
   12148:	ldr	r2, [r1, r0, lsl #2]
   1214c:	ldr	ip, [r2, #16]
   12150:	ldr	r3, [pc, #84]	; 121ac <sfbpf__flush_buffer+0xc0>
   12154:	add	r3, pc, r3
   12158:	str	ip, [r3]
   1215c:	ldr	r2, [r2, #8]
   12160:	ldr	r3, [pc, #72]	; 121b0 <sfbpf__flush_buffer+0xc4>
   12164:	add	r3, pc, r3
   12168:	str	r2, [r3]
   1216c:	ldr	r3, [pc, #64]	; 121b4 <sfbpf__flush_buffer+0xc8>
   12170:	add	r3, pc, r3
   12174:	str	r2, [r3]
   12178:	ldr	r0, [r1, r0, lsl #2]
   1217c:	ldr	r0, [r0]
   12180:	ldr	r1, [pc, #48]	; 121b8 <sfbpf__flush_buffer+0xcc>
   12184:	add	r1, pc, r1
   12188:	str	r0, [r1]
   1218c:	ldrb	r0, [r2]
   12190:	ldr	r1, [pc, #36]	; 121bc <sfbpf__flush_buffer+0xd0>
   12194:	add	r1, pc, r1
   12198:	strb	r0, [r1]
   1219c:	bx	lr
   121a0:	.word	0x0001e85c
   121a4:	.word	0x0001e854
   121a8:	.word	0x0001e840
   121ac:	.word	0x0001e844
   121b0:	.word	0x0001e87c
   121b4:	.word	0x0001e818
   121b8:	.word	0x0001e7e8
   121bc:	.word	0x0001e7f8

000121c0 <sfbpf_push_buffer_state>:
   121c0:	cmp	r0, #0
   121c4:	bxeq	lr
   121c8:	push	{r4, sl, fp, lr}
   121cc:	add	fp, sp, #8
   121d0:	mov	r4, r0
   121d4:	bl	11aac <sfbpf_ensure_buffer_stack>
   121d8:	ldr	r0, [pc, #188]	; 1229c <sfbpf_push_buffer_state+0xdc>
   121dc:	ldr	r0, [pc, r0]
   121e0:	ldr	r1, [pc, #184]	; 122a0 <sfbpf_push_buffer_state+0xe0>
   121e4:	ldr	r1, [pc, r1]
   121e8:	cmp	r1, #0
   121ec:	ldrne	r2, [r1, r0, lsl #2]
   121f0:	cmpne	r2, #0
   121f4:	beq	12240 <sfbpf_push_buffer_state+0x80>
   121f8:	ldr	r2, [pc, #164]	; 122a4 <sfbpf_push_buffer_state+0xe4>
   121fc:	add	r2, pc, r2
   12200:	ldrb	r2, [r2]
   12204:	ldr	r3, [pc, #156]	; 122a8 <sfbpf_push_buffer_state+0xe8>
   12208:	ldr	r3, [pc, r3]
   1220c:	strb	r2, [r3]
   12210:	ldr	r2, [r1, r0, lsl #2]
   12214:	str	r3, [r2, #8]
   12218:	ldr	r2, [r1, r0, lsl #2]
   1221c:	ldr	r3, [pc, #136]	; 122ac <sfbpf_push_buffer_state+0xec>
   12220:	ldr	r3, [pc, r3]
   12224:	str	r3, [r2, #16]
   12228:	ldr	r2, [r1, r0, lsl #2]
   1222c:	cmp	r2, #0
   12230:	ldrne	r2, [pc, #120]	; 122b0 <sfbpf_push_buffer_state+0xf0>
   12234:	addne	r0, r0, #1
   12238:	addne	r2, pc, r2
   1223c:	strne	r0, [r2]
   12240:	str	r4, [r1, r0, lsl #2]
   12244:	ldr	r2, [r4, #16]
   12248:	ldr	r3, [pc, #100]	; 122b4 <sfbpf_push_buffer_state+0xf4>
   1224c:	add	r3, pc, r3
   12250:	str	r2, [r3]
   12254:	ldr	r2, [r4, #8]
   12258:	ldr	r3, [pc, #88]	; 122b8 <sfbpf_push_buffer_state+0xf8>
   1225c:	add	r3, pc, r3
   12260:	str	r2, [r3]
   12264:	ldr	r3, [pc, #80]	; 122bc <sfbpf_push_buffer_state+0xfc>
   12268:	add	r3, pc, r3
   1226c:	str	r2, [r3]
   12270:	ldr	r0, [r1, r0, lsl #2]
   12274:	ldr	r0, [r0]
   12278:	ldr	r1, [pc, #64]	; 122c0 <sfbpf_push_buffer_state+0x100>
   1227c:	add	r1, pc, r1
   12280:	str	r0, [r1]
   12284:	ldrb	r0, [r2]
   12288:	ldr	r1, [pc, #52]	; 122c4 <sfbpf_push_buffer_state+0x104>
   1228c:	add	r1, pc, r1
   12290:	strb	r0, [r1]
   12294:	pop	{r4, sl, fp, lr}
   12298:	bx	lr
   1229c:	.word	0x0001e7a8
   122a0:	.word	0x0001e79c
   122a4:	.word	0x0001e790
   122a8:	.word	0x0001e780
   122ac:	.word	0x0001e778
   122b0:	.word	0x0001e74c
   122b4:	.word	0x0001e74c
   122b8:	.word	0x0001e784
   122bc:	.word	0x0001e720
   122c0:	.word	0x0001e6f0
   122c4:	.word	0x0001e700

000122c8 <sfbpf_pop_buffer_state>:
   122c8:	ldr	r0, [pc, #192]	; 12390 <sfbpf_pop_buffer_state+0xc8>
   122cc:	ldr	r0, [pc, r0]
   122d0:	cmp	r0, #0
   122d4:	beq	12338 <sfbpf_pop_buffer_state+0x70>
   122d8:	ldr	r1, [pc, #180]	; 12394 <sfbpf_pop_buffer_state+0xcc>
   122dc:	ldr	r1, [pc, r1]
   122e0:	ldr	r0, [r0, r1, lsl #2]
   122e4:	cmp	r0, #0
   122e8:	bxeq	lr
   122ec:	push	{fp, lr}
   122f0:	mov	fp, sp
   122f4:	bl	1206c <sfbpf__delete_buffer>
   122f8:	ldr	r2, [pc, #152]	; 12398 <sfbpf_pop_buffer_state+0xd0>
   122fc:	mov	r1, #0
   12300:	ldr	r2, [pc, r2]
   12304:	ldr	r0, [pc, #144]	; 1239c <sfbpf_pop_buffer_state+0xd4>
   12308:	ldr	r0, [pc, r0]
   1230c:	cmp	r2, #0
   12310:	str	r1, [r0, r2, lsl #2]
   12314:	pop	{fp, lr}
   12318:	subne	r1, r2, #1
   1231c:	ldrne	r2, [pc, #124]	; 123a0 <sfbpf_pop_buffer_state+0xd8>
   12320:	addne	r2, pc, r2
   12324:	strne	r1, [r2]
   12328:	cmp	r0, #0
   1232c:	ldrne	r2, [r0, r1, lsl #2]
   12330:	cmpne	r2, #0
   12334:	bne	1233c <sfbpf_pop_buffer_state+0x74>
   12338:	bx	lr
   1233c:	ldr	ip, [r2, #16]
   12340:	ldr	r3, [pc, #92]	; 123a4 <sfbpf_pop_buffer_state+0xdc>
   12344:	add	r3, pc, r3
   12348:	str	ip, [r3]
   1234c:	ldr	r2, [r2, #8]
   12350:	ldr	r3, [pc, #80]	; 123a8 <sfbpf_pop_buffer_state+0xe0>
   12354:	add	r3, pc, r3
   12358:	str	r2, [r3]
   1235c:	ldr	r3, [pc, #72]	; 123ac <sfbpf_pop_buffer_state+0xe4>
   12360:	add	r3, pc, r3
   12364:	str	r2, [r3]
   12368:	ldr	r0, [r0, r1, lsl #2]
   1236c:	ldr	r0, [r0]
   12370:	ldr	r1, [pc, #56]	; 123b0 <sfbpf_pop_buffer_state+0xe8>
   12374:	add	r1, pc, r1
   12378:	str	r0, [r1]
   1237c:	ldrb	r0, [r2]
   12380:	ldr	r1, [pc, #44]	; 123b4 <sfbpf_pop_buffer_state+0xec>
   12384:	add	r1, pc, r1
   12388:	strb	r0, [r1]
   1238c:	bx	lr
   12390:	.word	0x0001e6b4
   12394:	.word	0x0001e6a8
   12398:	.word	0x0001e684
   1239c:	.word	0x0001e678
   123a0:	.word	0x0001e664
   123a4:	.word	0x0001e654
   123a8:	.word	0x0001e68c
   123ac:	.word	0x0001e628
   123b0:	.word	0x0001e5f8
   123b4:	.word	0x0001e608

000123b8 <sfbpf__scan_buffer>:
   123b8:	push	{r4, r5, r6, sl, fp, lr}
   123bc:	add	fp, sp, #16
   123c0:	mov	r4, #0
   123c4:	cmp	r1, #2
   123c8:	bcc	12438 <sfbpf__scan_buffer+0x80>
   123cc:	sub	r6, r1, #2
   123d0:	mov	r5, r0
   123d4:	ldrb	r0, [r0, r6]
   123d8:	cmp	r0, #0
   123dc:	bne	12438 <sfbpf__scan_buffer+0x80>
   123e0:	add	r0, r5, r1
   123e4:	ldrb	r0, [r0, #-1]
   123e8:	cmp	r0, #0
   123ec:	bne	12438 <sfbpf__scan_buffer+0x80>
   123f0:	mov	r0, #48	; 0x30
   123f4:	bl	ed4 <malloc@plt>
   123f8:	cmp	r0, #0
   123fc:	beq	12440 <sfbpf__scan_buffer+0x88>
   12400:	mov	r4, r0
   12404:	mov	r0, #0
   12408:	mov	r1, #1
   1240c:	stm	r4, {r0, r5}
   12410:	str	r5, [r4, #8]
   12414:	str	r6, [r4, #12]
   12418:	str	r6, [r4, #16]
   1241c:	str	r0, [r4, #20]
   12420:	str	r0, [r4, #24]
   12424:	str	r1, [r4, #28]
   12428:	str	r0, [r4, #40]	; 0x28
   1242c:	str	r0, [r4, #44]	; 0x2c
   12430:	mov	r0, r4
   12434:	bl	11f54 <sfbpf__switch_to_buffer>
   12438:	mov	r0, r4
   1243c:	pop	{r4, r5, r6, sl, fp, pc}
   12440:	ldr	r0, [pc, #4]	; 1244c <sfbpf__scan_buffer+0x94>
   12444:	add	r0, pc, r0
   12448:	bl	11e7c <yy_fatal_error>
   1244c:	.word	0x0000cf81

00012450 <sfbpf__scan_string>:
   12450:	push	{r4, sl, fp, lr}
   12454:	add	fp, sp, #8
   12458:	mov	r4, r0
   1245c:	bl	f04 <strlen@plt>
   12460:	mov	r1, r0
   12464:	mov	r0, r4
   12468:	pop	{r4, sl, fp, lr}
   1246c:	b	12470 <sfbpf__scan_bytes>

00012470 <sfbpf__scan_bytes>:
   12470:	push	{r4, r5, r6, r7, fp, lr}
   12474:	add	fp, sp, #16
   12478:	add	r4, r1, #2
   1247c:	mov	r7, r0
   12480:	mov	r5, r1
   12484:	mov	r0, r4
   12488:	bl	ed4 <malloc@plt>
   1248c:	cmp	r0, #0
   12490:	beq	124e4 <sfbpf__scan_bytes+0x74>
   12494:	mov	r6, r0
   12498:	cmp	r5, #1
   1249c:	blt	124b0 <sfbpf__scan_bytes+0x40>
   124a0:	mov	r0, r6
   124a4:	mov	r1, r7
   124a8:	mov	r2, r5
   124ac:	bl	e80 <memcpy@plt>
   124b0:	add	r0, r6, r5
   124b4:	mov	r1, #0
   124b8:	strh	r1, [r0]
   124bc:	mov	r0, r6
   124c0:	mov	r1, r4
   124c4:	bl	123b8 <sfbpf__scan_buffer>
   124c8:	cmp	r0, #0
   124cc:	movne	r1, #1
   124d0:	strne	r1, [r0, #20]
   124d4:	popne	{r4, r5, r6, r7, fp, pc}
   124d8:	ldr	r0, [pc, #20]	; 124f4 <sfbpf__scan_bytes+0x84>
   124dc:	add	r0, pc, r0
   124e0:	bl	11e7c <yy_fatal_error>
   124e4:	ldr	r0, [pc, #4]	; 124f0 <sfbpf__scan_bytes+0x80>
   124e8:	add	r0, pc, r0
   124ec:	bl	11e7c <yy_fatal_error>
   124f0:	.word	0x0000cf07
   124f4:	.word	0x0000cf3c

000124f8 <sfbpf_get_debug>:
   124f8:	ldr	r0, [pc, #4]	; 12504 <sfbpf_get_debug+0xc>
   124fc:	ldr	r0, [pc, r0]
   12500:	bx	lr
   12504:	.word	0x0001e478

00012508 <sfbpf_set_debug>:
   12508:	ldr	r1, [pc, #8]	; 12518 <sfbpf_set_debug+0x10>
   1250c:	add	r1, pc, r1
   12510:	str	r0, [r1]
   12514:	bx	lr
   12518:	.word	0x0001e468

0001251c <sfbpf_lex_destroy>:
   1251c:	push	{r4, r5, fp, lr}
   12520:	add	fp, sp, #8
   12524:	ldr	r1, [pc, #200]	; 125f4 <sfbpf_lex_destroy+0xd8>
   12528:	mov	r5, #0
   1252c:	mov	r4, #0
   12530:	ldr	r1, [pc, r1]
   12534:	cmp	r1, #0
   12538:	beq	12584 <sfbpf_lex_destroy+0x68>
   1253c:	ldr	r0, [pc, #180]	; 125f8 <sfbpf_lex_destroy+0xdc>
   12540:	mov	r4, r1
   12544:	ldr	r0, [pc, r0]
   12548:	ldr	r0, [r1, r0, lsl #2]
   1254c:	cmp	r0, #0
   12550:	beq	12584 <sfbpf_lex_destroy+0x68>
   12554:	bl	1206c <sfbpf__delete_buffer>
   12558:	ldr	r0, [pc, #156]	; 125fc <sfbpf_lex_destroy+0xe0>
   1255c:	mov	r4, #0
   12560:	ldr	r0, [pc, r0]
   12564:	ldr	r1, [pc, #148]	; 12600 <sfbpf_lex_destroy+0xe4>
   12568:	ldr	r1, [pc, r1]
   1256c:	str	r4, [r1, r0, lsl #2]
   12570:	bl	122c8 <sfbpf_pop_buffer_state>
   12574:	ldr	r1, [pc, #136]	; 12604 <sfbpf_lex_destroy+0xe8>
   12578:	ldr	r1, [pc, r1]
   1257c:	cmp	r1, #0
   12580:	bne	1253c <sfbpf_lex_destroy+0x20>
   12584:	mov	r0, r4
   12588:	bl	e5c <free@plt>
   1258c:	ldr	r0, [pc, #116]	; 12608 <sfbpf_lex_destroy+0xec>
   12590:	add	r0, pc, r0
   12594:	str	r5, [r0]
   12598:	ldr	r0, [pc, #108]	; 1260c <sfbpf_lex_destroy+0xf0>
   1259c:	add	r0, pc, r0
   125a0:	str	r5, [r0]
   125a4:	ldr	r0, [pc, #100]	; 12610 <sfbpf_lex_destroy+0xf4>
   125a8:	add	r0, pc, r0
   125ac:	str	r5, [r0]
   125b0:	ldr	r0, [pc, #92]	; 12614 <sfbpf_lex_destroy+0xf8>
   125b4:	add	r0, pc, r0
   125b8:	str	r5, [r0]
   125bc:	ldr	r0, [pc, #84]	; 12618 <sfbpf_lex_destroy+0xfc>
   125c0:	add	r0, pc, r0
   125c4:	strb	r5, [r0]
   125c8:	ldr	r0, [pc, #76]	; 1261c <sfbpf_lex_destroy+0x100>
   125cc:	add	r0, pc, r0
   125d0:	strb	r5, [r0]
   125d4:	ldr	r0, [pc, #68]	; 12620 <sfbpf_lex_destroy+0x104>
   125d8:	add	r0, pc, r0
   125dc:	str	r5, [r0]
   125e0:	ldr	r0, [pc, #60]	; 12624 <sfbpf_lex_destroy+0x108>
   125e4:	add	r0, pc, r0
   125e8:	str	r5, [r0]
   125ec:	mov	r0, #0
   125f0:	pop	{r4, r5, fp, pc}
   125f4:	.word	0x0001e450
   125f8:	.word	0x0001e440
   125fc:	.word	0x0001e424
   12600:	.word	0x0001e418
   12604:	.word	0x0001e408
   12608:	.word	0x0001e3f4
   1260c:	.word	0x0001e3e4
   12610:	.word	0x0001e3f8
   12614:	.word	0x0001e3d4
   12618:	.word	0x0001e3b8
   1261c:	.word	0x0001e3b0
   12620:	.word	0x0001e394
   12624:	.word	0x0001e38c

00012628 <sfbpf_realloc>:
   12628:	b	ea4 <realloc@plt>

0001262c <sf_lex_init>:
   1262c:	push	{r4, sl, fp, lr}
   12630:	add	fp, sp, #8
   12634:	mov	r4, r0
   12638:	bl	f04 <strlen@plt>
   1263c:	mov	r1, r0
   12640:	mov	r0, r4
   12644:	bl	12470 <sfbpf__scan_bytes>
   12648:	ldr	r1, [pc, #8]	; 12658 <sf_lex_init+0x2c>
   1264c:	add	r1, pc, r1
   12650:	str	r0, [r1]
   12654:	pop	{r4, sl, fp, pc}
   12658:	.word	0x0001e350

0001265c <sf_lex_cleanup>:
   1265c:	ldr	r0, [pc, #44]	; 12690 <sf_lex_cleanup+0x34>
   12660:	ldr	r0, [pc, r0]
   12664:	cmp	r0, #0
   12668:	beq	1267c <sf_lex_cleanup+0x20>
   1266c:	push	{fp, lr}
   12670:	mov	fp, sp
   12674:	bl	1206c <sfbpf__delete_buffer>
   12678:	pop	{fp, lr}
   1267c:	ldr	r0, [pc, #16]	; 12694 <sf_lex_cleanup+0x38>
   12680:	mov	r1, #0
   12684:	add	r0, pc, r0
   12688:	str	r1, [r0]
   1268c:	bx	lr
   12690:	.word	0x0001e33c
   12694:	.word	0x0001e318

Disassembly of section .fini:

00012698 <_fini>:
   12698:	push	{r3, lr}
   1269c:	pop	{r3, pc}
