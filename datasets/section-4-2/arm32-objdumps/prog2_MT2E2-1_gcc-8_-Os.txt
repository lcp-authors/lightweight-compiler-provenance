
../repos/prog2/MT2E2-1:     file format elf32-littlearm


Disassembly of section .init:

00010e68 <.init>:
   10e68:	push	{r3, lr}
   10e6c:	bl	11140 <_start@@Base+0x3c>
   10e70:	pop	{r3, pc}

Disassembly of section .plt:

00010e74 <calloc@plt-0x14>:
   10e74:	push	{lr}		; (str lr, [sp, #-4]!)
   10e78:	ldr	lr, [pc, #4]	; 10e84 <calloc@plt-0x4>
   10e7c:	add	lr, pc, lr
   10e80:	ldr	pc, [lr, #8]!
   10e84:	andeq	r2, r1, ip, ror r1

00010e88 <calloc@plt>:
   10e88:	add	ip, pc, #0, 12
   10e8c:	add	ip, ip, #73728	; 0x12000
   10e90:	ldr	pc, [ip, #380]!	; 0x17c

00010e94 <strcmp@plt>:
   10e94:	add	ip, pc, #0, 12
   10e98:	add	ip, ip, #73728	; 0x12000
   10e9c:	ldr	pc, [ip, #372]!	; 0x174

00010ea0 <printf@plt>:
   10ea0:	add	ip, pc, #0, 12
   10ea4:	add	ip, ip, #73728	; 0x12000
   10ea8:	ldr	pc, [ip, #364]!	; 0x16c

00010eac <__isoc99_fscanf@plt>:
   10eac:	add	ip, pc, #0, 12
   10eb0:	add	ip, ip, #73728	; 0x12000
   10eb4:	ldr	pc, [ip, #356]!	; 0x164

00010eb8 <fopen@plt>:
   10eb8:	add	ip, pc, #0, 12
   10ebc:	add	ip, ip, #73728	; 0x12000
   10ec0:	ldr	pc, [ip, #348]!	; 0x15c

00010ec4 <free@plt>:
   10ec4:	add	ip, pc, #0, 12
   10ec8:	add	ip, ip, #73728	; 0x12000
   10ecc:	ldr	pc, [ip, #340]!	; 0x154

00010ed0 <memcpy@plt>:
   10ed0:	add	ip, pc, #0, 12
   10ed4:	add	ip, ip, #73728	; 0x12000
   10ed8:	ldr	pc, [ip, #332]!	; 0x14c

00010edc <realloc@plt>:
   10edc:	add	ip, pc, #0, 12
   10ee0:	add	ip, ip, #73728	; 0x12000
   10ee4:	ldr	pc, [ip, #324]!	; 0x144

00010ee8 <strcpy@plt>:
   10ee8:	add	ip, pc, #0, 12
   10eec:	add	ip, ip, #73728	; 0x12000
   10ef0:	ldr	pc, [ip, #316]!	; 0x13c

00010ef4 <puts@plt>:
   10ef4:	add	ip, pc, #0, 12
   10ef8:	add	ip, ip, #73728	; 0x12000
   10efc:	ldr	pc, [ip, #308]!	; 0x134

00010f00 <malloc@plt>:
   10f00:	add	ip, pc, #0, 12
   10f04:	add	ip, ip, #73728	; 0x12000
   10f08:	ldr	pc, [ip, #300]!	; 0x12c

00010f0c <__libc_start_main@plt>:
   10f0c:	add	ip, pc, #0, 12
   10f10:	add	ip, ip, #73728	; 0x12000
   10f14:	ldr	pc, [ip, #292]!	; 0x124

00010f18 <__gmon_start__@plt>:
   10f18:	add	ip, pc, #0, 12
   10f1c:	add	ip, ip, #73728	; 0x12000
   10f20:	ldr	pc, [ip, #284]!	; 0x11c

00010f24 <strlen@plt>:
   10f24:	add	ip, pc, #0, 12
   10f28:	add	ip, ip, #73728	; 0x12000
   10f2c:	ldr	pc, [ip, #276]!	; 0x114

00010f30 <putchar@plt>:
   10f30:	add	ip, pc, #0, 12
   10f34:	add	ip, ip, #73728	; 0x12000
   10f38:	ldr	pc, [ip, #268]!	; 0x10c

00010f3c <fclose@plt>:
   10f3c:	add	ip, pc, #0, 12
   10f40:	add	ip, ip, #73728	; 0x12000
   10f44:	ldr	pc, [ip, #260]!	; 0x104

00010f48 <abort@plt>:
   10f48:	add	ip, pc, #0, 12
   10f4c:	add	ip, ip, #73728	; 0x12000
   10f50:	ldr	pc, [ip, #252]!	; 0xfc

Disassembly of section .text:

00010f54 <main@@Base>:
   10f54:	ldr	r3, [pc, #380]	; 110d8 <main@@Base+0x184>
   10f58:	push	{r4, r5, r6, r7, lr}
   10f5c:	sub	sp, sp, #380	; 0x17c
   10f60:	add	r2, sp, #76	; 0x4c
   10f64:	mov	r4, r2
   10f68:	add	lr, r3, #48	; 0x30
   10f6c:	ldr	r0, [r3]
   10f70:	mov	ip, r2
   10f74:	add	r3, r3, #8
   10f78:	ldr	r1, [r3, #-4]
   10f7c:	cmp	r3, lr
   10f80:	stmia	ip!, {r0, r1}
   10f84:	mov	r2, ip
   10f88:	bne	10f6c <main@@Base+0x18>
   10f8c:	ldr	r0, [r3]
   10f90:	mov	r7, r4
   10f94:	mov	r6, #0
   10f98:	str	r0, [ip]
   10f9c:	ldr	r0, [pc, #312]	; 110dc <main@@Base+0x188>
   10fa0:	bl	10ef4 <puts@plt>
   10fa4:	bl	11354 <avl_nova@@Base>
   10fa8:	mov	r5, r0
   10fac:	mov	r1, r7
   10fb0:	mov	r0, r5
   10fb4:	add	r6, r6, #1
   10fb8:	add	r7, r7, #4
   10fbc:	bl	11664 <avl_insere@@Base>
   10fc0:	cmp	r6, #13
   10fc4:	bne	10fac <main@@Base+0x58>
   10fc8:	ldr	r0, [pc, #272]	; 110e0 <main@@Base+0x18c>
   10fcc:	bl	10ea0 <printf@plt>
   10fd0:	ldr	r0, [r5]
   10fd4:	bl	11924 <avl_imprime@@Base>
   10fd8:	ldr	r0, [pc, #260]	; 110e4 <main@@Base+0x190>
   10fdc:	bl	10ea0 <printf@plt>
   10fe0:	ldr	r0, [r5]
   10fe4:	bl	111f4 <crescente@@Base>
   10fe8:	ldr	r0, [pc, #248]	; 110e8 <main@@Base+0x194>
   10fec:	bl	10ef4 <puts@plt>
   10ff0:	mov	r2, #300	; 0x12c
   10ff4:	ldr	r1, [pc, #240]	; 110ec <main@@Base+0x198>
   10ff8:	mov	r0, r4
   10ffc:	bl	10ed0 <memcpy@plt>
   11000:	mov	r2, #75	; 0x4b
   11004:	ldr	r1, [pc, #228]	; 110f0 <main@@Base+0x19c>
   11008:	mov	r0, sp
   1100c:	bl	10ed0 <memcpy@plt>
   11010:	ldr	r0, [pc, #220]	; 110f4 <main@@Base+0x1a0>
   11014:	bl	10ef4 <puts@plt>
   11018:	ldr	r1, [pc, #216]	; 110f8 <main@@Base+0x1a4>
   1101c:	ldr	r0, [pc, #216]	; 110fc <main@@Base+0x1a8>
   11020:	bl	10eb8 <fopen@plt>
   11024:	subs	r6, r0, #0
   11028:	bne	11040 <main@@Base+0xec>
   1102c:	ldr	r0, [pc, #204]	; 11100 <main@@Base+0x1ac>
   11030:	bl	10ef4 <puts@plt>
   11034:	mvn	r0, #0
   11038:	add	sp, sp, #380	; 0x17c
   1103c:	pop	{r4, r5, r6, r7, pc}
   11040:	bl	119a4 <lista_nova@@Base>
   11044:	mov	r5, r0
   11048:	mov	r1, r4
   1104c:	mov	r2, #0
   11050:	bl	11a2c <lista_insere@@Base>
   11054:	mov	r2, #0
   11058:	add	r1, sp, #176	; 0xb0
   1105c:	mov	r0, r5
   11060:	bl	11a2c <lista_insere@@Base>
   11064:	mov	r2, #0
   11068:	add	r1, sp, #276	; 0x114
   1106c:	mov	r0, r5
   11070:	bl	11a2c <lista_insere@@Base>
   11074:	bl	119a4 <lista_nova@@Base>
   11078:	mov	r4, r0
   1107c:	mov	r2, #0
   11080:	mov	r1, sp
   11084:	bl	11a2c <lista_insere@@Base>
   11088:	mov	r2, #0
   1108c:	add	r1, sp, #25
   11090:	mov	r0, r4
   11094:	bl	11a2c <lista_insere@@Base>
   11098:	mov	r2, #0
   1109c:	add	r1, sp, #50	; 0x32
   110a0:	mov	r0, r4
   110a4:	bl	11a2c <lista_insere@@Base>
   110a8:	mov	r2, r4
   110ac:	mov	r1, r5
   110b0:	mov	r0, r6
   110b4:	bl	11270 <valida_passwds@@Base>
   110b8:	mov	r0, r5
   110bc:	bl	119c8 <lista_apaga@@Base>
   110c0:	mov	r0, r4
   110c4:	bl	119c8 <lista_apaga@@Base>
   110c8:	mov	r0, r6
   110cc:	bl	10f3c <fclose@plt>
   110d0:	mov	r0, #0
   110d4:	b	11038 <main@@Base+0xe4>
   110d8:	andeq	r2, r1, r4, lsl r2
   110dc:	andeq	r2, r1, r0, lsl r4
   110e0:	andeq	r2, r1, r1, lsr #8
   110e4:	andeq	r2, r1, r3, lsr r4
   110e8:			; <UNDEFINED> instruction: 0x000124b4
   110ec:	andeq	r2, r1, r8, asr #4
   110f0:	andeq	r2, r1, r4, ror r3
   110f4:	andeq	r2, r1, r0, asr r4
   110f8:	andeq	r2, r1, r1, ror #8
   110fc:	andeq	r2, r1, r3, ror #8
   11100:	andeq	r2, r1, r1, ror r4

00011104 <_start@@Base>:
   11104:	mov	fp, #0
   11108:	mov	lr, #0
   1110c:	pop	{r1}		; (ldr r1, [sp], #4)
   11110:	mov	r2, sp
   11114:	push	{r2}		; (str r2, [sp, #-4]!)
   11118:	push	{r0}		; (str r0, [sp, #-4]!)
   1111c:	ldr	ip, [pc, #16]	; 11134 <_start@@Base+0x30>
   11120:	push	{ip}		; (str ip, [sp, #-4]!)
   11124:	ldr	r0, [pc, #12]	; 11138 <_start@@Base+0x34>
   11128:	ldr	r3, [pc, #12]	; 1113c <_start@@Base+0x38>
   1112c:	bl	10f0c <__libc_start_main@plt>
   11130:	bl	10f48 <abort@plt>
   11134:	andeq	r2, r1, r4, lsl #4
   11138:	andeq	r0, r1, r4, asr pc
   1113c:	andeq	r2, r1, r4, lsr #3
   11140:	ldr	r3, [pc, #20]	; 1115c <_start@@Base+0x58>
   11144:	ldr	r2, [pc, #20]	; 11160 <_start@@Base+0x5c>
   11148:	add	r3, pc, r3
   1114c:	ldr	r2, [r3, r2]
   11150:	cmp	r2, #0
   11154:	bxeq	lr
   11158:	b	10f18 <__gmon_start__@plt>
   1115c:			; <UNDEFINED> instruction: 0x00011eb0
   11160:	andeq	r0, r0, r0, asr r0
   11164:	ldr	r0, [pc, #24]	; 11184 <_start@@Base+0x80>
   11168:	ldr	r3, [pc, #24]	; 11188 <_start@@Base+0x84>
   1116c:	cmp	r3, r0
   11170:	bxeq	lr
   11174:	ldr	r3, [pc, #16]	; 1118c <_start@@Base+0x88>
   11178:	cmp	r3, #0
   1117c:	bxeq	lr
   11180:	bx	r3
   11184:	andeq	r3, r2, ip, asr r0
   11188:	andeq	r3, r2, ip, asr r0
   1118c:	andeq	r0, r0, r0
   11190:	ldr	r0, [pc, #36]	; 111bc <_start@@Base+0xb8>
   11194:	ldr	r1, [pc, #36]	; 111c0 <_start@@Base+0xbc>
   11198:	sub	r1, r1, r0
   1119c:	asr	r1, r1, #2
   111a0:	add	r1, r1, r1, lsr #31
   111a4:	asrs	r1, r1, #1
   111a8:	bxeq	lr
   111ac:	ldr	r3, [pc, #16]	; 111c4 <_start@@Base+0xc0>
   111b0:	cmp	r3, #0
   111b4:	bxeq	lr
   111b8:	bx	r3
   111bc:	andeq	r3, r2, ip, asr r0
   111c0:	andeq	r3, r2, ip, asr r0
   111c4:	andeq	r0, r0, r0
   111c8:	push	{r4, lr}
   111cc:	ldr	r4, [pc, #24]	; 111ec <_start@@Base+0xe8>
   111d0:	ldrb	r3, [r4]
   111d4:	cmp	r3, #0
   111d8:	popne	{r4, pc}
   111dc:	bl	11164 <_start@@Base+0x60>
   111e0:	mov	r3, #1
   111e4:	strb	r3, [r4]
   111e8:	pop	{r4, pc}
   111ec:	andeq	r3, r2, ip, asr r0
   111f0:	b	11190 <_start@@Base+0x8c>

000111f4 <crescente@@Base>:
   111f4:	push	{r4, r5, r6, lr}
   111f8:	mov	r4, r0
   111fc:	ldr	r5, [pc, #32]	; 11224 <crescente@@Base+0x30>
   11200:	cmp	r4, #0
   11204:	popeq	{r4, r5, r6, pc}
   11208:	ldr	r0, [r4, #4]
   1120c:	bl	111f4 <crescente@@Base>
   11210:	mov	r0, r5
   11214:	ldr	r1, [r4]
   11218:	bl	10ea0 <printf@plt>
   1121c:	ldr	r4, [r4, #8]
   11220:	b	11200 <crescente@@Base+0xc>
   11224:			; <UNDEFINED> instruction: 0x000123bf

00011228 <decrescente@@Base>:
   11228:	push	{r4, r5, r6, lr}
   1122c:	mov	r4, r0
   11230:	ldr	r5, [pc, #32]	; 11258 <decrescente@@Base+0x30>
   11234:	cmp	r4, #0
   11238:	popeq	{r4, r5, r6, pc}
   1123c:	ldr	r0, [r4, #8]
   11240:	bl	11228 <decrescente@@Base>
   11244:	mov	r0, r5
   11248:	ldr	r1, [r4]
   1124c:	bl	10ea0 <printf@plt>
   11250:	ldr	r4, [r4, #4]
   11254:	b	11234 <decrescente@@Base+0xc>
   11258:			; <UNDEFINED> instruction: 0x000123bf

0001125c <avl_imprime_ord@@Base>:
   1125c:	cmp	r1, #0
   11260:	ldr	r0, [r0]
   11264:	blt	1126c <avl_imprime_ord@@Base+0x10>
   11268:	b	111f4 <crescente@@Base>
   1126c:	b	11228 <decrescente@@Base>

00011270 <valida_passwds@@Base>:
   11270:	push	{r4, r5, r6, r7, r8, r9, lr}
   11274:	mov	r7, r0
   11278:	sub	sp, sp, #60	; 0x3c
   1127c:	mov	r5, r1
   11280:	mov	r0, #10
   11284:	mov	r4, r2
   11288:	ldr	r8, [pc, #176]	; 11340 <valida_passwds@@Base+0xd0>
   1128c:	ldr	r1, [pc, #176]	; 11344 <valida_passwds@@Base+0xd4>
   11290:	bl	11cd0 <tabela_nova@@Base>
   11294:	mov	r6, r0
   11298:	add	r3, sp, #28
   1129c:	mov	r2, sp
   112a0:	mov	r1, r8
   112a4:	mov	r0, r7
   112a8:	bl	10eac <__isoc99_fscanf@plt>
   112ac:	cmp	r0, #2
   112b0:	beq	112ec <valida_passwds@@Base+0x7c>
   112b4:	ldr	r7, [pc, #140]	; 11348 <valida_passwds@@Base+0xd8>
   112b8:	ldr	r8, [pc, #140]	; 1134c <valida_passwds@@Base+0xdc>
   112bc:	ldr	r9, [pc, #140]	; 11350 <valida_passwds@@Base+0xe0>
   112c0:	ldr	r4, [r4]
   112c4:	ldr	r5, [r5]
   112c8:	cmp	r5, #0
   112cc:	cmpne	r4, #0
   112d0:	bne	11300 <valida_passwds@@Base+0x90>
   112d4:	mov	r0, r6
   112d8:	bl	11f80 <tabela_esvazia@@Base>
   112dc:	mov	r0, r6
   112e0:	bl	10ec4 <free@plt>
   112e4:	add	sp, sp, #60	; 0x3c
   112e8:	pop	{r4, r5, r6, r7, r8, r9, pc}
   112ec:	add	r2, sp, #28
   112f0:	mov	r1, sp
   112f4:	mov	r0, r6
   112f8:	bl	11d88 <tabela_adiciona@@Base>
   112fc:	b	11298 <valida_passwds@@Base+0x28>
   11300:	mov	r0, r7
   11304:	ldr	r2, [r4]
   11308:	ldr	r1, [r5]
   1130c:	bl	10ea0 <printf@plt>
   11310:	mov	r0, r6
   11314:	ldr	r1, [r5]
   11318:	bl	11ef4 <tabela_valor@@Base>
   1131c:	ldr	r1, [r4]
   11320:	bl	10e94 <strcmp@plt>
   11324:	cmp	r0, #0
   11328:	moveq	r0, r9
   1132c:	movne	r0, r8
   11330:	bl	10ef4 <puts@plt>
   11334:	ldr	r4, [r4, #4]
   11338:	ldr	r5, [r5, #4]
   1133c:	b	112c8 <valida_passwds@@Base+0x58>
   11340:	andeq	r2, r1, r3, asr #7
   11344:	ldrdeq	r2, [r1], -ip
   11348:	andeq	r2, r1, r9, asr #7
   1134c:	strdeq	r2, [r1], -sl
   11350:	andeq	r2, r1, r1, ror #7

00011354 <avl_nova@@Base>:
   11354:	push	{r4, lr}
   11358:	mov	r0, #4
   1135c:	bl	10f00 <malloc@plt>
   11360:	cmp	r0, #0
   11364:	movne	r3, #0
   11368:	strne	r3, [r0]
   1136c:	pop	{r4, pc}

00011370 <avl_min@@Base>:
   11370:	cmp	r0, #0
   11374:	bxeq	lr
   11378:	ldr	r3, [r0, #4]
   1137c:	cmp	r3, #0
   11380:	bne	1138c <avl_min@@Base+0x1c>
   11384:	ldr	r0, [r0]
   11388:	bx	lr
   1138c:	mov	r0, r3
   11390:	b	11378 <avl_min@@Base+0x8>

00011394 <avl_max@@Base>:
   11394:	cmp	r0, #0
   11398:	bxeq	lr
   1139c:	ldr	r3, [r0, #8]
   113a0:	cmp	r3, #0
   113a4:	bne	113b0 <avl_max@@Base+0x1c>
   113a8:	ldr	r0, [r0]
   113ac:	bx	lr
   113b0:	mov	r0, r3
   113b4:	b	1139c <avl_max@@Base+0x8>

000113b8 <avl_altura@@Base>:
   113b8:	cmp	r0, #0
   113bc:	ldrne	r0, [r0, #12]
   113c0:	mvneq	r0, #0
   113c4:	bx	lr

000113c8 <max@@Base>:
   113c8:	cmp	r1, r0
   113cc:	movge	r0, r1
   113d0:	bx	lr

000113d4 <avl_novo_no@@Base>:
   113d4:	push	{r4, r5, r6, lr}
   113d8:	mov	r5, r0
   113dc:	mov	r0, #16
   113e0:	bl	10f00 <malloc@plt>
   113e4:	mov	r4, r0
   113e8:	mov	r0, r5
   113ec:	bl	10f24 <strlen@plt>
   113f0:	add	r0, r0, #1
   113f4:	bl	10f00 <malloc@plt>
   113f8:	mov	r1, r5
   113fc:	str	r0, [r4]
   11400:	bl	10ee8 <strcpy@plt>
   11404:	mov	r3, #0
   11408:	mov	r0, r4
   1140c:	str	r3, [r4, #4]
   11410:	str	r3, [r4, #8]
   11414:	str	r3, [r4, #12]
   11418:	pop	{r4, r5, r6, pc}

0001141c <roda_direita@@Base>:
   1141c:	ldr	r2, [r0, #4]
   11420:	ldr	r3, [r2, #8]
   11424:	str	r0, [r2, #8]
   11428:	cmp	r3, #0
   1142c:	str	r3, [r0, #4]
   11430:	ldrne	r1, [r3, #12]
   11434:	mvneq	r1, #0
   11438:	ldr	r3, [r0, #8]
   1143c:	cmp	r3, #0
   11440:	ldrne	r3, [r3, #12]
   11444:	mvneq	r3, #0
   11448:	cmp	r3, r1
   1144c:	movlt	r3, r1
   11450:	ldr	r1, [r2, #4]
   11454:	add	r3, r3, #1
   11458:	str	r3, [r0, #12]
   1145c:	mov	r0, r2
   11460:	cmp	r1, #0
   11464:	ldrne	r1, [r1, #12]
   11468:	mvneq	r1, #0
   1146c:	cmp	r3, r1
   11470:	movlt	r3, r1
   11474:	add	r3, r3, #1
   11478:	str	r3, [r2, #12]
   1147c:	bx	lr

00011480 <roda_esquerda@@Base>:
   11480:	ldr	r2, [r0, #8]
   11484:	ldr	r3, [r2, #4]
   11488:	str	r0, [r2, #4]
   1148c:	ldr	r1, [r0, #4]
   11490:	str	r3, [r0, #8]
   11494:	cmp	r1, #0
   11498:	ldrne	r1, [r1, #12]
   1149c:	mvneq	r1, #0
   114a0:	cmp	r3, #0
   114a4:	mvneq	r3, #0
   114a8:	ldrne	r3, [r3, #12]
   114ac:	cmp	r3, r1
   114b0:	movlt	r3, r1
   114b4:	ldr	r1, [r2, #8]
   114b8:	add	r3, r3, #1
   114bc:	str	r3, [r0, #12]
   114c0:	mov	r0, r2
   114c4:	cmp	r1, #0
   114c8:	ldrne	r1, [r1, #12]
   114cc:	mvneq	r1, #0
   114d0:	cmp	r3, r1
   114d4:	movlt	r3, r1
   114d8:	add	r3, r3, #1
   114dc:	str	r3, [r2, #12]
   114e0:	bx	lr

000114e4 <calc_balanceamento@@Base>:
   114e4:	cmp	r0, #0
   114e8:	bxeq	lr
   114ec:	ldr	r2, [r0, #4]
   114f0:	ldr	r3, [r0, #8]
   114f4:	cmp	r3, #0
   114f8:	ldrne	r3, [r3, #12]
   114fc:	mvneq	r3, #0
   11500:	cmp	r2, #0
   11504:	mvneq	r0, #0
   11508:	ldrne	r0, [r2, #12]
   1150c:	sub	r0, r3, r0
   11510:	bx	lr

00011514 <avl_pesquisa_impl@@Base>:
   11514:	push	{r4, r5, r6, lr}
   11518:	mov	r5, r1
   1151c:	mov	r4, r0
   11520:	cmp	r4, #0
   11524:	beq	11548 <avl_pesquisa_impl@@Base+0x34>
   11528:	mov	r0, r5
   1152c:	ldr	r1, [r4]
   11530:	bl	10e94 <strcmp@plt>
   11534:	cmp	r0, #0
   11538:	ldrlt	r4, [r4, #4]
   1153c:	blt	11520 <avl_pesquisa_impl@@Base+0xc>
   11540:	ldrne	r4, [r4, #8]
   11544:	bne	11520 <avl_pesquisa_impl@@Base+0xc>
   11548:	mov	r0, r4
   1154c:	pop	{r4, r5, r6, pc}

00011550 <avl_pesquisa@@Base>:
   11550:	cmp	r1, #0
   11554:	cmpne	r0, #0
   11558:	beq	11564 <avl_pesquisa@@Base+0x14>
   1155c:	ldr	r0, [r0]
   11560:	b	11514 <avl_pesquisa_impl@@Base>
   11564:	mov	r0, #0
   11568:	bx	lr

0001156c <avl_insere_impl@@Base>:
   1156c:	push	{r4, r5, r6, lr}
   11570:	subs	r4, r0, #0
   11574:	bne	11584 <avl_insere_impl@@Base+0x18>
   11578:	mov	r0, r1
   1157c:	pop	{r4, r5, r6, lr}
   11580:	b	113d4 <avl_novo_no@@Base>
   11584:	mov	r0, r1
   11588:	mov	r5, r1
   1158c:	ldr	r1, [r4]
   11590:	bl	10e94 <strcmp@plt>
   11594:	cmp	r0, #0
   11598:	bge	11614 <avl_insere_impl@@Base+0xa8>
   1159c:	mov	r1, r5
   115a0:	ldr	r0, [r4, #4]
   115a4:	bl	1156c <avl_insere_impl@@Base>
   115a8:	str	r0, [r4, #4]
   115ac:	ldr	r1, [r4, #4]
   115b0:	mov	r0, r4
   115b4:	ldr	r5, [r4, #8]
   115b8:	cmp	r1, #0
   115bc:	ldrne	r3, [r1, #12]
   115c0:	mvneq	r3, #0
   115c4:	cmp	r5, #0
   115c8:	ldrne	r2, [r5, #12]
   115cc:	mvneq	r2, #0
   115d0:	cmp	r3, r2
   115d4:	movlt	r3, r2
   115d8:	add	r3, r3, #1
   115dc:	str	r3, [r4, #12]
   115e0:	bl	114e4 <calc_balanceamento@@Base>
   115e4:	cmp	r0, #1
   115e8:	ble	1162c <avl_insere_impl@@Base+0xc0>
   115ec:	mov	r0, r5
   115f0:	bl	114e4 <calc_balanceamento@@Base>
   115f4:	cmp	r0, #0
   115f8:	bge	11608 <avl_insere_impl@@Base+0x9c>
   115fc:	mov	r0, r5
   11600:	bl	1141c <roda_direita@@Base>
   11604:	str	r0, [r4, #8]
   11608:	mov	r0, r4
   1160c:	pop	{r4, r5, r6, lr}
   11610:	b	11480 <roda_esquerda@@Base>
   11614:	beq	1165c <avl_insere_impl@@Base+0xf0>
   11618:	mov	r1, r5
   1161c:	ldr	r0, [r4, #8]
   11620:	bl	1156c <avl_insere_impl@@Base>
   11624:	str	r0, [r4, #8]
   11628:	b	115ac <avl_insere_impl@@Base+0x40>
   1162c:	cmn	r0, #1
   11630:	bge	1165c <avl_insere_impl@@Base+0xf0>
   11634:	mov	r0, r1
   11638:	bl	114e4 <calc_balanceamento@@Base>
   1163c:	cmp	r0, #0
   11640:	ble	11650 <avl_insere_impl@@Base+0xe4>
   11644:	mov	r0, r1
   11648:	bl	11480 <roda_esquerda@@Base>
   1164c:	str	r0, [r4, #4]
   11650:	mov	r0, r4
   11654:	pop	{r4, r5, r6, lr}
   11658:	b	1141c <roda_direita@@Base>
   1165c:	mov	r0, r4
   11660:	pop	{r4, r5, r6, pc}

00011664 <avl_insere@@Base>:
   11664:	clz	r3, r1
   11668:	cmp	r0, #0
   1166c:	push	{r4, r5, r6, lr}
   11670:	lsr	r3, r3, #5
   11674:	moveq	r4, #1
   11678:	movne	r4, r3
   1167c:	cmp	r4, #0
   11680:	bne	1169c <avl_insere@@Base+0x38>
   11684:	mov	r5, r0
   11688:	ldr	r0, [r0]
   1168c:	bl	1156c <avl_insere_impl@@Base>
   11690:	str	r0, [r5]
   11694:	mov	r0, r4
   11698:	pop	{r4, r5, r6, pc}
   1169c:	mvn	r0, #0
   116a0:	pop	{r4, r5, r6, pc}

000116a4 <avl_no_valormin@@Base>:
   116a4:	ldr	r3, [r0, #4]
   116a8:	cmp	r3, #0
   116ac:	bxeq	lr
   116b0:	mov	r0, r3
   116b4:	b	116a4 <avl_no_valormin@@Base>

000116b8 <avl_no_valormax@@Base>:
   116b8:	ldr	r3, [r0, #8]
   116bc:	cmp	r3, #0
   116c0:	bxeq	lr
   116c4:	mov	r0, r3
   116c8:	b	116b8 <avl_no_valormax@@Base>

000116cc <avl_remove_impl@@Base>:
   116cc:	push	{r4, r5, r6, r7, r8, lr}
   116d0:	subs	r4, r0, #0
   116d4:	bne	116e4 <avl_remove_impl@@Base+0x18>
   116d8:	mov	r4, #0
   116dc:	mov	r0, r4
   116e0:	pop	{r4, r5, r6, r7, r8, pc}
   116e4:	ldr	r7, [r4]
   116e8:	mov	r0, r1
   116ec:	mov	r6, r1
   116f0:	mov	r1, r7
   116f4:	bl	10e94 <strcmp@plt>
   116f8:	cmp	r0, #0
   116fc:	bge	11778 <avl_remove_impl@@Base+0xac>
   11700:	mov	r1, r6
   11704:	ldr	r0, [r4, #4]
   11708:	bl	116cc <avl_remove_impl@@Base>
   1170c:	str	r0, [r4, #4]
   11710:	ldr	r1, [r4, #4]
   11714:	mov	r0, r4
   11718:	ldr	r5, [r4, #8]
   1171c:	cmp	r1, #0
   11720:	ldrne	r2, [r1, #12]
   11724:	mvneq	r2, #0
   11728:	cmp	r5, #0
   1172c:	ldrne	r3, [r5, #12]
   11730:	mvneq	r3, #0
   11734:	cmp	r3, r2
   11738:	movlt	r3, r2
   1173c:	add	r3, r3, #1
   11740:	str	r3, [r4, #12]
   11744:	bl	114e4 <calc_balanceamento@@Base>
   11748:	cmp	r0, #1
   1174c:	ble	1184c <avl_remove_impl@@Base+0x180>
   11750:	mov	r0, r5
   11754:	bl	114e4 <calc_balanceamento@@Base>
   11758:	cmp	r0, #0
   1175c:	bge	1176c <avl_remove_impl@@Base+0xa0>
   11760:	mov	r0, r5
   11764:	bl	1141c <roda_direita@@Base>
   11768:	str	r0, [r4, #8]
   1176c:	mov	r0, r4
   11770:	pop	{r4, r5, r6, r7, r8, lr}
   11774:	b	11480 <roda_esquerda@@Base>
   11778:	ldr	r5, [r4, #8]
   1177c:	movne	r1, r6
   11780:	movne	r0, r5
   11784:	bne	11840 <avl_remove_impl@@Base+0x174>
   11788:	ldr	r6, [r4, #4]
   1178c:	cmp	r6, #0
   11790:	beq	117f0 <avl_remove_impl@@Base+0x124>
   11794:	cmp	r5, #0
   11798:	bne	1180c <avl_remove_impl@@Base+0x140>
   1179c:	ldr	r0, [r6]
   117a0:	bl	10f24 <strlen@plt>
   117a4:	add	r1, r0, #1
   117a8:	mov	r0, r7
   117ac:	bl	10edc <realloc@plt>
   117b0:	str	r0, [r4]
   117b4:	ldr	r1, [r6]
   117b8:	bl	10ee8 <strcpy@plt>
   117bc:	ldr	r3, [r6, #4]
   117c0:	str	r3, [r4, #4]
   117c4:	ldr	r3, [r6, #8]
   117c8:	str	r3, [r4, #8]
   117cc:	ldr	r3, [r6, #12]
   117d0:	str	r3, [r4, #12]
   117d4:	ldr	r0, [r6]
   117d8:	bl	10ec4 <free@plt>
   117dc:	mov	r0, r6
   117e0:	bl	10ec4 <free@plt>
   117e4:	cmp	r4, #0
   117e8:	bne	11710 <avl_remove_impl@@Base+0x44>
   117ec:	b	116d8 <avl_remove_impl@@Base+0xc>
   117f0:	cmp	r5, #0
   117f4:	moveq	r6, r4
   117f8:	moveq	r4, r5
   117fc:	beq	117d4 <avl_remove_impl@@Base+0x108>
   11800:	mov	r6, r5
   11804:	b	1179c <avl_remove_impl@@Base+0xd0>
   11808:	mov	r5, r3
   1180c:	ldr	r3, [r5, #4]
   11810:	cmp	r3, #0
   11814:	bne	11808 <avl_remove_impl@@Base+0x13c>
   11818:	ldr	r0, [r5]
   1181c:	bl	10f24 <strlen@plt>
   11820:	add	r1, r0, #1
   11824:	mov	r0, r7
   11828:	bl	10edc <realloc@plt>
   1182c:	str	r0, [r4]
   11830:	ldr	r1, [r5]
   11834:	bl	10ee8 <strcpy@plt>
   11838:	ldr	r1, [r5]
   1183c:	ldr	r0, [r4, #8]
   11840:	bl	116cc <avl_remove_impl@@Base>
   11844:	str	r0, [r4, #8]
   11848:	b	11710 <avl_remove_impl@@Base+0x44>
   1184c:	cmn	r0, #1
   11850:	bge	116dc <avl_remove_impl@@Base+0x10>
   11854:	mov	r0, r1
   11858:	bl	114e4 <calc_balanceamento@@Base>
   1185c:	cmp	r0, #0
   11860:	ble	11870 <avl_remove_impl@@Base+0x1a4>
   11864:	mov	r0, r1
   11868:	bl	11480 <roda_esquerda@@Base>
   1186c:	str	r0, [r4, #4]
   11870:	mov	r0, r4
   11874:	pop	{r4, r5, r6, r7, r8, lr}
   11878:	b	1141c <roda_direita@@Base>

0001187c <avl_apaga@@Base>:
   1187c:	push	{r4, lr}
   11880:	subs	r4, r0, #0
   11884:	popeq	{r4, pc}
   11888:	ldr	r0, [r4]
   1188c:	cmp	r0, #0
   11890:	bne	118a0 <avl_apaga@@Base+0x24>
   11894:	mov	r0, r4
   11898:	pop	{r4, lr}
   1189c:	b	10ec4 <free@plt>
   118a0:	ldr	r1, [r0]
   118a4:	bl	116cc <avl_remove_impl@@Base>
   118a8:	str	r0, [r4]
   118ac:	b	11888 <avl_apaga@@Base+0xc>

000118b0 <avl_remove@@Base>:
   118b0:	clz	r3, r1
   118b4:	cmp	r0, #0
   118b8:	push	{r4, r5, r6, lr}
   118bc:	lsr	r3, r3, #5
   118c0:	moveq	r4, #1
   118c4:	movne	r4, r3
   118c8:	cmp	r4, #0
   118cc:	bne	118e8 <avl_remove@@Base+0x38>
   118d0:	mov	r5, r0
   118d4:	ldr	r0, [r0]
   118d8:	bl	116cc <avl_remove_impl@@Base>
   118dc:	str	r0, [r5]
   118e0:	mov	r0, r4
   118e4:	pop	{r4, r5, r6, pc}
   118e8:	mvn	r0, #0
   118ec:	pop	{r4, r5, r6, pc}

000118f0 <avl_preordem_impl@@Base>:
   118f0:	push	{r4, r5, r6, lr}
   118f4:	mov	r4, r0
   118f8:	ldr	r5, [pc, #32]	; 11920 <avl_preordem_impl@@Base+0x30>
   118fc:	cmp	r4, #0
   11900:	popeq	{r4, r5, r6, pc}
   11904:	mov	r0, r5
   11908:	ldr	r1, [r4]
   1190c:	bl	10ea0 <printf@plt>
   11910:	ldr	r0, [r4, #4]
   11914:	bl	118f0 <avl_preordem_impl@@Base>
   11918:	ldr	r4, [r4, #8]
   1191c:	b	118fc <avl_preordem_impl@@Base+0xc>
   11920:			; <UNDEFINED> instruction: 0x000123bf

00011924 <avl_imprime@@Base>:
   11924:	cmp	r0, #0
   11928:	bxeq	lr
   1192c:	push	{r4, lr}
   11930:	bl	118f0 <avl_preordem_impl@@Base>
   11934:	mov	r0, #10
   11938:	pop	{r4, lr}
   1193c:	b	10f30 <putchar@plt>

00011940 <novo_str@@Base>:
   11940:	push	{r4, r5, r6, r7, r8, lr}
   11944:	mov	r7, r0
   11948:	mov	r0, #12
   1194c:	bl	10f00 <malloc@plt>
   11950:	subs	r4, r0, #0
   11954:	beq	11988 <novo_str@@Base+0x48>
   11958:	mov	r0, r7
   1195c:	mov	r6, #0
   11960:	bl	10f24 <strlen@plt>
   11964:	add	r0, r0, #1
   11968:	bl	10f00 <malloc@plt>
   1196c:	cmp	r0, #0
   11970:	mov	r5, r0
   11974:	str	r0, [r4]
   11978:	bne	11990 <novo_str@@Base+0x50>
   1197c:	mov	r0, r4
   11980:	mov	r4, r5
   11984:	bl	10ec4 <free@plt>
   11988:	mov	r0, r4
   1198c:	pop	{r4, r5, r6, r7, r8, pc}
   11990:	mov	r1, r7
   11994:	bl	10ee8 <strcpy@plt>
   11998:	str	r6, [r4, #4]
   1199c:	str	r6, [r4, #8]
   119a0:	b	11988 <novo_str@@Base+0x48>

000119a4 <lista_nova@@Base>:
   119a4:	push	{r4, lr}
   119a8:	mov	r0, #12
   119ac:	bl	10f00 <malloc@plt>
   119b0:	cmp	r0, #0
   119b4:	movne	r3, #0
   119b8:	strne	r3, [r0]
   119bc:	strne	r3, [r0, #4]
   119c0:	strne	r3, [r0, #8]
   119c4:	pop	{r4, pc}

000119c8 <lista_apaga@@Base>:
   119c8:	push	{r4, r5, r6, lr}
   119cc:	subs	r5, r0, #0
   119d0:	popeq	{r4, r5, r6, pc}
   119d4:	ldr	r4, [r5]
   119d8:	cmp	r4, #0
   119dc:	bne	119ec <lista_apaga@@Base+0x24>
   119e0:	mov	r0, r5
   119e4:	pop	{r4, r5, r6, lr}
   119e8:	b	10ec4 <free@plt>
   119ec:	ldm	r4, {r0, r3}
   119f0:	str	r3, [r5]
   119f4:	bl	10ec4 <free@plt>
   119f8:	mov	r0, r4
   119fc:	bl	10ec4 <free@plt>
   11a00:	b	119d4 <lista_apaga@@Base+0xc>

00011a04 <lista_tamanho@@Base>:
   11a04:	cmp	r0, #0
   11a08:	ldrne	r0, [r0, #8]
   11a0c:	mvneq	r0, #0
   11a10:	bx	lr

00011a14 <lista_inicio@@Base>:
   11a14:	cmp	r0, #0
   11a18:	ldrne	r0, [r0]
   11a1c:	bx	lr

00011a20 <lista_fim@@Base>:
   11a20:	cmp	r0, #0
   11a24:	ldrne	r0, [r0, #4]
   11a28:	bx	lr

00011a2c <lista_insere@@Base>:
   11a2c:	cmp	r1, #0
   11a30:	cmpne	r0, #0
   11a34:	bne	11a48 <lista_insere@@Base+0x1c>
   11a38:	mov	r0, #0
   11a3c:	bx	lr
   11a40:	mov	r0, #0
   11a44:	pop	{r4, r5, r6, pc}
   11a48:	push	{r4, r5, r6, lr}
   11a4c:	mov	r4, r0
   11a50:	mov	r0, r1
   11a54:	mov	r5, r2
   11a58:	bl	11940 <novo_str@@Base>
   11a5c:	cmp	r0, #0
   11a60:	beq	11a40 <lista_insere@@Base+0x14>
   11a64:	ldr	r3, [r4, #8]
   11a68:	cmp	r5, #0
   11a6c:	add	r3, r3, #1
   11a70:	str	r3, [r4, #8]
   11a74:	ldr	r3, [r4]
   11a78:	bne	11a9c <lista_insere@@Base+0x70>
   11a7c:	cmp	r3, #0
   11a80:	streq	r0, [r4, #4]
   11a84:	beq	11aac <lista_insere@@Base+0x80>
   11a88:	ldr	r3, [r4, #4]
   11a8c:	str	r3, [r0, #8]
   11a90:	str	r0, [r3, #4]
   11a94:	str	r0, [r4, #4]
   11a98:	pop	{r4, r5, r6, pc}
   11a9c:	cmp	r5, r3
   11aa0:	bne	11ab4 <lista_insere@@Base+0x88>
   11aa4:	str	r5, [r0, #4]
   11aa8:	str	r0, [r5, #8]
   11aac:	str	r0, [r4]
   11ab0:	pop	{r4, r5, r6, pc}
   11ab4:	ldr	r3, [r5, #8]
   11ab8:	str	r5, [r0, #4]
   11abc:	str	r3, [r0, #8]
   11ac0:	ldr	r3, [r5, #8]
   11ac4:	str	r0, [r3, #4]
   11ac8:	str	r0, [r5, #8]
   11acc:	pop	{r4, r5, r6, pc}

00011ad0 <lista_remove@@Base>:
   11ad0:	cmp	r1, #0
   11ad4:	cmpne	r0, #0
   11ad8:	push	{r4, r5, r6, lr}
   11adc:	moveq	r5, #0
   11ae0:	beq	11b28 <lista_remove@@Base+0x58>
   11ae4:	mov	r4, r1
   11ae8:	ldr	r3, [r0, #8]
   11aec:	ldr	r2, [r1, #4]
   11af0:	sub	r3, r3, #1
   11af4:	str	r3, [r0, #8]
   11af8:	ldr	r3, [r1, #8]
   11afc:	cmp	r3, #0
   11b00:	strne	r2, [r3, #4]
   11b04:	ldr	r5, [r1, #4]
   11b08:	streq	r2, [r0]
   11b0c:	cmp	r5, #0
   11b10:	streq	r3, [r0, #4]
   11b14:	strne	r3, [r5, #8]
   11b18:	ldr	r0, [r1]
   11b1c:	bl	10ec4 <free@plt>
   11b20:	mov	r0, r4
   11b24:	bl	10ec4 <free@plt>
   11b28:	mov	r0, r5
   11b2c:	pop	{r4, r5, r6, pc}

00011b30 <lista_pesquisa@@Base>:
   11b30:	push	{r4, r5, r6, lr}
   11b34:	clz	r4, r1
   11b38:	cmp	r0, #0
   11b3c:	lsr	r4, r4, #5
   11b40:	moveq	r4, #1
   11b44:	cmp	r4, #0
   11b48:	movne	r4, #0
   11b4c:	bne	11bb0 <lista_pesquisa@@Base+0x80>
   11b50:	cmp	r2, #1
   11b54:	bhi	11bb0 <lista_pesquisa@@Base+0x80>
   11b58:	cmp	r2, #0
   11b5c:	mov	r5, r1
   11b60:	ldreq	r4, [r0]
   11b64:	beq	11ba8 <lista_pesquisa@@Base+0x78>
   11b68:	ldr	r4, [r0, #4]
   11b6c:	cmp	r4, #0
   11b70:	beq	11bb0 <lista_pesquisa@@Base+0x80>
   11b74:	mov	r1, r5
   11b78:	ldr	r0, [r4]
   11b7c:	bl	10e94 <strcmp@plt>
   11b80:	cmp	r0, #0
   11b84:	beq	11bb0 <lista_pesquisa@@Base+0x80>
   11b88:	ldr	r4, [r4, #8]
   11b8c:	b	11b6c <lista_pesquisa@@Base+0x3c>
   11b90:	mov	r1, r5
   11b94:	ldr	r0, [r4]
   11b98:	bl	10e94 <strcmp@plt>
   11b9c:	cmp	r0, #0
   11ba0:	beq	11bb0 <lista_pesquisa@@Base+0x80>
   11ba4:	ldr	r4, [r4, #4]
   11ba8:	cmp	r4, #0
   11bac:	bne	11b90 <lista_pesquisa@@Base+0x60>
   11bb0:	mov	r0, r4
   11bb4:	pop	{r4, r5, r6, pc}

00011bb8 <lista_ordena@@Base>:
   11bb8:	cmp	r0, #0
   11bbc:	beq	11c34 <lista_ordena@@Base+0x7c>
   11bc0:	ldr	r3, [r0, #8]
   11bc4:	cmp	r3, #0
   11bc8:	bne	11bd4 <lista_ordena@@Base+0x1c>
   11bcc:	mov	r0, #0
   11bd0:	bx	lr
   11bd4:	push	{r4, r5, r6, r7, r8, lr}
   11bd8:	ldr	r4, [r0]
   11bdc:	ldr	r7, [r4, #4]
   11be0:	cmp	r7, #0
   11be4:	bne	11bf0 <lista_ordena@@Base+0x38>
   11be8:	mov	r0, #0
   11bec:	pop	{r4, r5, r6, r7, r8, pc}
   11bf0:	mov	r5, r4
   11bf4:	mov	r6, r7
   11bf8:	ldr	r1, [r5]
   11bfc:	ldr	r0, [r6]
   11c00:	bl	10e94 <strcmp@plt>
   11c04:	cmp	r0, #0
   11c08:	movlt	r5, r6
   11c0c:	ldr	r6, [r6, #4]
   11c10:	cmp	r6, #0
   11c14:	bne	11bf8 <lista_ordena@@Base+0x40>
   11c18:	cmp	r4, r5
   11c1c:	ldrne	r3, [r4]
   11c20:	ldrne	r2, [r5]
   11c24:	strne	r2, [r4]
   11c28:	mov	r4, r7
   11c2c:	strne	r3, [r5]
   11c30:	b	11bdc <lista_ordena@@Base+0x24>
   11c34:	mvn	r0, #0
   11c38:	bx	lr

00011c3c <lista_inverte@@Base>:
   11c3c:	subs	r3, r0, #0
   11c40:	beq	11cc0 <lista_inverte@@Base+0x84>
   11c44:	ldr	r1, [r3, #8]
   11c48:	cmp	r1, #1
   11c4c:	ble	11cc8 <lista_inverte@@Base+0x8c>
   11c50:	ldr	r2, [r3]
   11c54:	mov	ip, #0
   11c58:	sub	r0, r1, #2
   11c5c:	push	{r4, lr}
   11c60:	ldr	r2, [r2, #4]
   11c64:	cmp	r0, ip
   11c68:	ldr	r1, [r3]
   11c6c:	bgt	11c98 <lista_inverte@@Base+0x5c>
   11c70:	mov	r0, #0
   11c74:	ldr	r2, [r3, #4]
   11c78:	ldr	ip, [r2, #8]
   11c7c:	str	ip, [r3, #4]
   11c80:	str	r0, [ip, #4]
   11c84:	str	r1, [r2, #4]
   11c88:	str	r0, [r2, #8]
   11c8c:	str	r2, [r1, #8]
   11c90:	str	r2, [r3]
   11c94:	pop	{r4, pc}
   11c98:	ldr	lr, [r2, #4]
   11c9c:	add	ip, ip, #1
   11ca0:	ldr	r4, [r2, #8]
   11ca4:	str	lr, [r4, #4]
   11ca8:	str	r4, [lr, #8]
   11cac:	str	r1, [r2, #4]
   11cb0:	str	r2, [r1, #8]
   11cb4:	str	r2, [r3]
   11cb8:	mov	r2, lr
   11cbc:	b	11c64 <lista_inverte@@Base+0x28>
   11cc0:	mvn	r0, #0
   11cc4:	bx	lr
   11cc8:	mov	r0, #0
   11ccc:	bx	lr

00011cd0 <tabela_nova@@Base>:
   11cd0:	cmp	r1, #0
   11cd4:	cmpne	r0, #0
   11cd8:	push	{r4, r5, r6, r7, r8, lr}
   11cdc:	bgt	11cec <tabela_nova@@Base+0x1c>
   11ce0:	mov	r4, #0
   11ce4:	mov	r0, r4
   11ce8:	pop	{r4, r5, r6, r7, r8, pc}
   11cec:	mov	r5, r0
   11cf0:	mov	r0, #12
   11cf4:	mov	r6, r1
   11cf8:	bl	10f00 <malloc@plt>
   11cfc:	subs	r4, r0, #0
   11d00:	beq	11ce0 <tabela_nova@@Base+0x10>
   11d04:	mov	r1, #4
   11d08:	mov	r0, r5
   11d0c:	bl	10e88 <calloc@plt>
   11d10:	cmp	r0, #0
   11d14:	mov	r7, r0
   11d18:	str	r0, [r4, #4]
   11d1c:	strne	r6, [r4]
   11d20:	strne	r5, [r4, #8]
   11d24:	bne	11ce4 <tabela_nova@@Base+0x14>
   11d28:	mov	r0, r4
   11d2c:	bl	10ec4 <free@plt>
   11d30:	b	11ce0 <tabela_nova@@Base+0x10>

00011d34 <tabela_apaga@@Base>:
   11d34:	push	{r4, r5, r6, r7, r8, lr}
   11d38:	subs	r4, r0, #0
   11d3c:	movne	r6, #0
   11d40:	popeq	{r4, r5, r6, r7, r8, pc}
   11d44:	ldmib	r4, {r0, r3}
   11d48:	cmp	r3, r6
   11d4c:	bgt	11d60 <tabela_apaga@@Base+0x2c>
   11d50:	bl	10ec4 <free@plt>
   11d54:	mov	r0, r4
   11d58:	pop	{r4, r5, r6, r7, r8, lr}
   11d5c:	b	10ec4 <free@plt>
   11d60:	ldr	r5, [r0, r6, lsl #2]
   11d64:	cmp	r5, #0
   11d68:	addeq	r6, r6, #1
   11d6c:	beq	11d44 <tabela_apaga@@Base+0x10>
   11d70:	ldm	r5, {r0, r7}
   11d74:	bl	10ec4 <free@plt>
   11d78:	mov	r0, r5
   11d7c:	bl	10ec4 <free@plt>
   11d80:	mov	r5, r7
   11d84:	b	11d64 <tabela_apaga@@Base+0x30>

00011d88 <tabela_adiciona@@Base>:
   11d88:	cmp	r1, #0
   11d8c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11d90:	mov	r6, r2
   11d94:	clz	r2, r2
   11d98:	lsr	r2, r2, #5
   11d9c:	moveq	r2, #1
   11da0:	cmp	r0, #0
   11da4:	moveq	r2, #1
   11da8:	cmp	r2, #0
   11dac:	beq	11dbc <tabela_adiciona@@Base+0x34>
   11db0:	mvn	r7, #1
   11db4:	mov	r0, r7
   11db8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11dbc:	mov	r5, r0
   11dc0:	mov	r4, r1
   11dc4:	mov	r0, r1
   11dc8:	ldr	r3, [r5]
   11dcc:	ldr	r1, [r5, #8]
   11dd0:	blx	r3
   11dd4:	ldr	r9, [r5, #4]
   11dd8:	mov	r8, r0
   11ddc:	ldr	r5, [r9, r0, lsl #2]
   11de0:	cmp	r5, #0
   11de4:	beq	11e18 <tabela_adiciona@@Base+0x90>
   11de8:	ldr	sl, [r5]
   11dec:	mov	r1, r4
   11df0:	mov	r0, sl
   11df4:	bl	10e94 <strcmp@plt>
   11df8:	subs	r7, r0, #0
   11dfc:	bne	11e10 <tabela_adiciona@@Base+0x88>
   11e00:	mov	r1, r6
   11e04:	add	r0, sl, #25
   11e08:	bl	10ee8 <strcpy@plt>
   11e0c:	b	11db4 <tabela_adiciona@@Base+0x2c>
   11e10:	ldr	r5, [r5, #4]
   11e14:	b	11de0 <tabela_adiciona@@Base+0x58>
   11e18:	mov	r0, #8
   11e1c:	bl	10f00 <malloc@plt>
   11e20:	subs	r7, r0, #0
   11e24:	beq	11db0 <tabela_adiciona@@Base+0x28>
   11e28:	mov	r0, #125	; 0x7d
   11e2c:	bl	10f00 <malloc@plt>
   11e30:	cmp	r0, #0
   11e34:	mov	sl, r0
   11e38:	str	r0, [r7]
   11e3c:	beq	11db0 <tabela_adiciona@@Base+0x28>
   11e40:	mov	r1, r4
   11e44:	bl	10ee8 <strcpy@plt>
   11e48:	mov	r1, r6
   11e4c:	add	r0, sl, #25
   11e50:	bl	10ee8 <strcpy@plt>
   11e54:	ldr	r3, [r9, r8, lsl #2]
   11e58:	str	r3, [r7, #4]
   11e5c:	str	r7, [r9, r8, lsl #2]
   11e60:	mov	r7, r5
   11e64:	b	11db4 <tabela_adiciona@@Base+0x2c>

00011e68 <tabela_remove@@Base>:
   11e68:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11e6c:	subs	r4, r0, #0
   11e70:	mvneq	r6, #1
   11e74:	beq	11ee0 <tabela_remove@@Base+0x78>
   11e78:	mov	r0, r1
   11e7c:	mov	r5, r1
   11e80:	ldr	r3, [r4]
   11e84:	mov	r7, #0
   11e88:	ldr	r1, [r4, #8]
   11e8c:	blx	r3
   11e90:	ldr	r9, [r4, #4]
   11e94:	mov	r8, r0
   11e98:	ldr	r4, [r9, r0, lsl #2]
   11e9c:	cmp	r4, #0
   11ea0:	mvneq	r6, #2
   11ea4:	beq	11ee0 <tabela_remove@@Base+0x78>
   11ea8:	ldr	sl, [r4]
   11eac:	mov	r1, r5
   11eb0:	mov	r0, sl
   11eb4:	bl	10e94 <strcmp@plt>
   11eb8:	subs	r6, r0, #0
   11ebc:	ldr	r3, [r4, #4]
   11ec0:	bne	11ee8 <tabela_remove@@Base+0x80>
   11ec4:	cmp	r7, #0
   11ec8:	mov	r0, sl
   11ecc:	strne	r3, [r7, #4]
   11ed0:	streq	r3, [r9, r8, lsl #2]
   11ed4:	bl	10ec4 <free@plt>
   11ed8:	mov	r0, r4
   11edc:	bl	10ec4 <free@plt>
   11ee0:	mov	r0, r6
   11ee4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11ee8:	mov	r7, r4
   11eec:	mov	r4, r3
   11ef0:	b	11e9c <tabela_remove@@Base+0x34>

00011ef4 <tabela_valor@@Base>:
   11ef4:	push	{r4, r5, r6, lr}
   11ef8:	subs	r4, r0, #0
   11efc:	bne	11f08 <tabela_valor@@Base+0x14>
   11f00:	mov	r0, #0
   11f04:	pop	{r4, r5, r6, pc}
   11f08:	mov	r0, r1
   11f0c:	mov	r6, r1
   11f10:	ldr	r3, [r4]
   11f14:	ldr	r1, [r4, #8]
   11f18:	blx	r3
   11f1c:	ldr	r3, [r4, #4]
   11f20:	ldr	r5, [r3, r0, lsl #2]
   11f24:	cmp	r5, #0
   11f28:	beq	11f00 <tabela_valor@@Base+0xc>
   11f2c:	ldr	r4, [r5]
   11f30:	mov	r1, r6
   11f34:	mov	r0, r4
   11f38:	bl	10e94 <strcmp@plt>
   11f3c:	cmp	r0, #0
   11f40:	bne	11f4c <tabela_valor@@Base+0x58>
   11f44:	add	r0, r4, #25
   11f48:	pop	{r4, r5, r6, pc}
   11f4c:	ldr	r5, [r5, #4]
   11f50:	b	11f24 <tabela_valor@@Base+0x30>

00011f54 <tabela_existe@@Base>:
   11f54:	cmp	r0, #0
   11f58:	cmpne	r1, #0
   11f5c:	beq	11f78 <tabela_existe@@Base+0x24>
   11f60:	push	{r4, lr}
   11f64:	bl	11ef4 <tabela_valor@@Base>
   11f68:	cmp	r0, #0
   11f6c:	movne	r0, #1
   11f70:	mvneq	r0, #2
   11f74:	pop	{r4, pc}
   11f78:	mvn	r0, #1
   11f7c:	bx	lr

00011f80 <tabela_esvazia@@Base>:
   11f80:	push	{r4, r5, r6, r7, r8, lr}
   11f84:	subs	r6, r0, #0
   11f88:	movne	r5, #0
   11f8c:	bne	11fb8 <tabela_esvazia@@Base+0x38>
   11f90:	mvn	r0, #1
   11f94:	pop	{r4, r5, r6, r7, r8, pc}
   11f98:	ldr	r3, [r6, #4]
   11f9c:	lsl	r7, r5, #2
   11fa0:	ldr	r4, [r3, r5, lsl #2]
   11fa4:	cmp	r4, #0
   11fa8:	bne	11fcc <tabela_esvazia@@Base+0x4c>
   11fac:	ldr	r3, [r6, #4]
   11fb0:	add	r5, r5, #1
   11fb4:	str	r4, [r3, r7]
   11fb8:	ldr	r3, [r6, #8]
   11fbc:	cmp	r3, r5
   11fc0:	bgt	11f98 <tabela_esvazia@@Base+0x18>
   11fc4:	mov	r0, #0
   11fc8:	pop	{r4, r5, r6, r7, r8, pc}
   11fcc:	ldm	r4, {r0, r8}
   11fd0:	bl	10ec4 <free@plt>
   11fd4:	mov	r0, r4
   11fd8:	bl	10ec4 <free@plt>
   11fdc:	mov	r4, r8
   11fe0:	b	11fa4 <tabela_esvazia@@Base+0x24>

00011fe4 <tabela_numelementos@@Base>:
   11fe4:	subs	r1, r0, #0
   11fe8:	movne	r0, #0
   11fec:	ldrne	ip, [r1, #8]
   11ff0:	movne	r3, r0
   11ff4:	bne	12014 <tabela_numelementos@@Base+0x30>
   11ff8:	mvn	r0, #1
   11ffc:	bx	lr
   12000:	ldr	r2, [r1, #4]
   12004:	ldr	r2, [r2, r3, lsl #2]
   12008:	cmp	r2, #0
   1200c:	bne	12020 <tabela_numelementos@@Base+0x3c>
   12010:	add	r3, r3, #1
   12014:	cmp	r3, ip
   12018:	blt	12000 <tabela_numelementos@@Base+0x1c>
   1201c:	bx	lr
   12020:	add	r0, r0, #1
   12024:	ldr	r2, [r2, #4]
   12028:	b	12008 <tabela_numelementos@@Base+0x24>

0001202c <tabela_elementos@@Base>:
   1202c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12030:	mov	r4, r1
   12034:	mov	r9, r0
   12038:	bl	11fe4 <tabela_numelementos@@Base>
   1203c:	cmp	r0, #0
   12040:	str	r0, [r4]
   12044:	bgt	12054 <tabela_elementos@@Base+0x28>
   12048:	mov	r8, #0
   1204c:	mov	r0, r8
   12050:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12054:	mov	r7, #125	; 0x7d
   12058:	mul	r0, r7, r0
   1205c:	bl	10f00 <malloc@plt>
   12060:	subs	r8, r0, #0
   12064:	movne	r6, #0
   12068:	subne	sl, r8, #125	; 0x7d
   1206c:	movne	r5, r6
   12070:	beq	12048 <tabela_elementos@@Base+0x1c>
   12074:	ldr	r3, [r9, #8]
   12078:	cmp	r3, r5
   1207c:	ble	1204c <tabela_elementos@@Base+0x20>
   12080:	ldr	r3, [r9, #4]
   12084:	ldr	r4, [r3, r5, lsl #2]
   12088:	cmp	r4, #0
   1208c:	beq	120ac <tabela_elementos@@Base+0x80>
   12090:	add	r6, r6, #1
   12094:	mov	r2, #125	; 0x7d
   12098:	ldr	r1, [r4]
   1209c:	mla	r0, r7, r6, sl
   120a0:	bl	10ed0 <memcpy@plt>
   120a4:	ldr	r4, [r4, #4]
   120a8:	b	12088 <tabela_elementos@@Base+0x5c>
   120ac:	add	r5, r5, #1
   120b0:	b	12074 <tabela_elementos@@Base+0x48>

000120b4 <hash_krm@@Base>:
   120b4:	sub	r0, r0, #1
   120b8:	mov	r3, #7
   120bc:	ldrb	r2, [r0, #1]!
   120c0:	cmp	r2, #0
   120c4:	bne	120d4 <hash_krm@@Base+0x20>
   120c8:	udiv	r0, r3, r1
   120cc:	mls	r0, r1, r0, r3
   120d0:	bx	lr
   120d4:	add	r3, r3, r2
   120d8:	b	120bc <hash_krm@@Base+0x8>

000120dc <hash_djbm@@Base>:
   120dc:	sub	r0, r0, #1
   120e0:	movw	r3, #5347	; 0x14e3
   120e4:	ldrb	r2, [r0, #1]!
   120e8:	cmp	r2, #0
   120ec:	bne	120fc <hash_djbm@@Base+0x20>
   120f0:	udiv	r0, r3, r1
   120f4:	mls	r0, r1, r0, r3
   120f8:	bx	lr
   120fc:	rsb	r3, r3, r3, lsl #5
   12100:	eor	r3, r3, r2
   12104:	b	120e4 <hash_djbm@@Base+0x8>

00012108 <mostraTabela@@Base>:
   12108:	push	{r4, r5, r6, r7, r8, lr}
   1210c:	mov	r6, r0
   12110:	mov	r4, #0
   12114:	ldr	r7, [pc, #124]	; 12198 <mostraTabela@@Base+0x90>
   12118:	bl	11fe4 <tabela_numelementos@@Base>
   1211c:	ldr	r8, [pc, #120]	; 1219c <mostraTabela@@Base+0x94>
   12120:	mov	r1, r0
   12124:	ldr	r0, [pc, #116]	; 121a0 <mostraTabela@@Base+0x98>
   12128:	bl	10ea0 <printf@plt>
   1212c:	ldr	r3, [r6, #8]
   12130:	cmp	r3, r4
   12134:	bgt	12144 <mostraTabela@@Base+0x3c>
   12138:	mov	r0, #10
   1213c:	pop	{r4, r5, r6, r7, r8, lr}
   12140:	b	10f30 <putchar@plt>
   12144:	ldr	r3, [r6, #4]
   12148:	ldr	r3, [r3, r4, lsl #2]
   1214c:	cmp	r3, #0
   12150:	beq	12178 <mostraTabela@@Base+0x70>
   12154:	mov	r1, r4
   12158:	mov	r0, r7
   1215c:	bl	10ea0 <printf@plt>
   12160:	ldr	r3, [r6, #4]
   12164:	ldr	r5, [r3, r4, lsl #2]
   12168:	cmp	r5, #0
   1216c:	bne	12180 <mostraTabela@@Base+0x78>
   12170:	mov	r0, #10
   12174:	bl	10f30 <putchar@plt>
   12178:	add	r4, r4, #1
   1217c:	b	1212c <mostraTabela@@Base+0x24>
   12180:	ldr	r1, [r5]
   12184:	mov	r0, r8
   12188:	add	r2, r1, #25
   1218c:	bl	10ea0 <printf@plt>
   12190:	ldr	r5, [r5, #4]
   12194:	b	12168 <mostraTabela@@Base+0x60>
   12198:			; <UNDEFINED> instruction: 0x000124b6
   1219c:			; <UNDEFINED> instruction: 0x000124bd
   121a0:	muleq	r1, r2, r4

000121a4 <__libc_csu_init@@Base>:
   121a4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   121a8:	mov	r7, r0
   121ac:	ldr	r6, [pc, #72]	; 121fc <__libc_csu_init@@Base+0x58>
   121b0:	ldr	r5, [pc, #72]	; 12200 <__libc_csu_init@@Base+0x5c>
   121b4:	add	r6, pc, r6
   121b8:	add	r5, pc, r5
   121bc:	sub	r6, r6, r5
   121c0:	mov	r8, r1
   121c4:	mov	r9, r2
   121c8:	bl	10e68 <calloc@plt-0x20>
   121cc:	asrs	r6, r6, #2
   121d0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   121d4:	mov	r4, #0
   121d8:	add	r4, r4, #1
   121dc:	ldr	r3, [r5], #4
   121e0:	mov	r2, r9
   121e4:	mov	r1, r8
   121e8:	mov	r0, r7
   121ec:	blx	r3
   121f0:	cmp	r6, r4
   121f4:	bne	121d8 <__libc_csu_init@@Base+0x34>
   121f8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   121fc:	andeq	r0, r1, r8, asr sp
   12200:	andeq	r0, r1, r0, asr sp

00012204 <__libc_csu_fini@@Base>:
   12204:	bx	lr

Disassembly of section .fini:

00012208 <.fini>:
   12208:	push	{r3, lr}
   1220c:	pop	{r3, pc}
