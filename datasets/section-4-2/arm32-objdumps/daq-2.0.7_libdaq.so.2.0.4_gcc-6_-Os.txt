
../repos/daq-2.0.7/api/.libs/libdaq.so.2.0.4:     file format elf32-littlearm


Disassembly of section .init:

00000c88 <_init>:
 c88:	push	{r3, lr}
 c8c:	bl	db0 <call_weak_fn>
 c90:	pop	{r3, pc}

Disassembly of section .plt:

00000c94 <.plt>:
 c94:	push	{lr}		; (str lr, [sp, #-4]!)
 c98:	ldr	lr, [pc, #4]	; ca4 <.plt+0x10>
 c9c:	add	lr, pc, lr
 ca0:	ldr	pc, [lr, #8]!
 ca4:	.word	0x0001235c

00000ca8 <calloc@plt>:
 ca8:	add	ip, pc, #0, 12
 cac:	add	ip, ip, #73728	; 0x12000
 cb0:	ldr	pc, [ip, #860]!	; 0x35c

00000cb4 <strcmp@plt>:
 cb4:	add	ip, pc, #0, 12
 cb8:	add	ip, ip, #73728	; 0x12000
 cbc:	ldr	pc, [ip, #852]!	; 0x354

00000cc0 <__cxa_finalize@plt>:
 cc0:	add	ip, pc, #0, 12
 cc4:	add	ip, ip, #73728	; 0x12000
 cc8:	ldr	pc, [ip, #844]!	; 0x34c

00000ccc <printf@plt>:
 ccc:	add	ip, pc, #0, 12
 cd0:	add	ip, ip, #73728	; 0x12000
 cd4:	ldr	pc, [ip, #836]!	; 0x344

00000cd8 <free@plt>:
 cd8:	add	ip, pc, #0, 12
 cdc:	add	ip, ip, #73728	; 0x12000
 ce0:	ldr	pc, [ip, #828]!	; 0x33c

00000ce4 <strdup@plt>:
 ce4:	add	ip, pc, #0, 12
 ce8:	add	ip, ip, #73728	; 0x12000
 cec:	ldr	pc, [ip, #820]!	; 0x334

00000cf0 <dlclose@plt>:
 cf0:	add	ip, pc, #0, 12
 cf4:	add	ip, ip, #73728	; 0x12000
 cf8:	ldr	pc, [ip, #812]!	; 0x32c

00000cfc <dlerror@plt>:
 cfc:	add	ip, pc, #0, 12
 d00:	add	ip, ip, #73728	; 0x12000
 d04:	ldr	pc, [ip, #804]!	; 0x324

00000d08 <daq_mode_string@plt>:
 d08:	add	ip, pc, #0, 12
 d0c:	add	ip, ip, #73728	; 0x12000
 d10:	ldr	pc, [ip, #796]!	; 0x31c

00000d14 <__xstat@plt>:
 d14:	add	ip, pc, #0, 12
 d18:	add	ip, ip, #73728	; 0x12000
 d1c:	ldr	pc, [ip, #788]!	; 0x314

00000d20 <dlopen@plt>:
 d20:	add	ip, pc, #0, 12
 d24:	add	ip, ip, #73728	; 0x12000
 d28:	ldr	pc, [ip, #780]!	; 0x30c

00000d2c <opendir@plt>:
 d2c:	add	ip, pc, #0, 12
 d30:	add	ip, ip, #73728	; 0x12000
 d34:	ldr	pc, [ip, #772]!	; 0x304

00000d38 <__gmon_start__@plt>:
 d38:	add	ip, pc, #0, 12
 d3c:	add	ip, ip, #73728	; 0x12000
 d40:	ldr	pc, [ip, #764]!	; 0x2fc

00000d44 <strlen@plt>:
 d44:	add	ip, pc, #0, 12
 d48:	add	ip, ip, #73728	; 0x12000
 d4c:	ldr	pc, [ip, #756]!	; 0x2f4

00000d50 <fprintf@plt>:
 d50:	add	ip, pc, #0, 12
 d54:	add	ip, ip, #73728	; 0x12000
 d58:	ldr	pc, [ip, #748]!	; 0x2ec

00000d5c <snprintf@plt>:
 d5c:	add	ip, pc, #0, 12
 d60:	add	ip, ip, #73728	; 0x12000
 d64:	ldr	pc, [ip, #740]!	; 0x2e4

00000d68 <daq_free_module_list@plt>:
 d68:	add	ip, pc, #0, 12
 d6c:	add	ip, ip, #73728	; 0x12000
 d70:	ldr	pc, [ip, #732]!	; 0x2dc

00000d74 <readdir@plt>:
 d74:	add	ip, pc, #0, 12
 d78:	add	ip, ip, #73728	; 0x12000
 d7c:	ldr	pc, [ip, #724]!	; 0x2d4

00000d80 <strrchr@plt>:
 d80:	add	ip, pc, #0, 12
 d84:	add	ip, ip, #73728	; 0x12000
 d88:	ldr	pc, [ip, #716]!	; 0x2cc

00000d8c <fputs@plt>:
 d8c:	add	ip, pc, #0, 12
 d90:	add	ip, ip, #73728	; 0x12000
 d94:	ldr	pc, [ip, #708]!	; 0x2c4

00000d98 <dlsym@plt>:
 d98:	add	ip, pc, #0, 12
 d9c:	add	ip, ip, #73728	; 0x12000
 da0:	ldr	pc, [ip, #700]!	; 0x2bc

00000da4 <closedir@plt>:
 da4:	add	ip, pc, #0, 12
 da8:	add	ip, ip, #73728	; 0x12000
 dac:	ldr	pc, [ip, #692]!	; 0x2b4

Disassembly of section .text:

00000db0 <call_weak_fn>:
     db0:	ldr	r3, [pc, #20]	; dcc <call_weak_fn+0x1c>
     db4:	ldr	r2, [pc, #20]	; dd0 <call_weak_fn+0x20>
     db8:	add	r3, pc, r3
     dbc:	ldr	r2, [r3, r2]
     dc0:	cmp	r2, #0
     dc4:	bxeq	lr
     dc8:	b	d38 <__gmon_start__@plt>
     dcc:	.word	0x00012240
     dd0:	.word	0x00000070

00000dd4 <deregister_tm_clones>:
     dd4:	ldr	r3, [pc, #52]	; e10 <deregister_tm_clones+0x3c>
     dd8:	ldr	r0, [pc, #52]	; e14 <deregister_tm_clones+0x40>
     ddc:	add	r3, pc, r3
     de0:	add	r0, pc, r0
     de4:	add	r3, r3, #3
     de8:	sub	r3, r3, r0
     dec:	cmp	r3, #6
     df0:	ldr	r3, [pc, #32]	; e18 <deregister_tm_clones+0x44>
     df4:	add	r3, pc, r3
     df8:	bxls	lr
     dfc:	ldr	r2, [pc, #24]	; e1c <deregister_tm_clones+0x48>
     e00:	ldr	r3, [r3, r2]
     e04:	cmp	r3, #0
     e08:	bxeq	lr
     e0c:	bx	r3
     e10:	.word	0x000122a0
     e14:	.word	0x0001229c
     e18:	.word	0x00012204
     e1c:	.word	0x00000068

00000e20 <register_tm_clones>:
     e20:	ldr	r1, [pc, #56]	; e60 <register_tm_clones+0x40>
     e24:	ldr	r0, [pc, #56]	; e64 <register_tm_clones+0x44>
     e28:	add	r1, pc, r1
     e2c:	add	r0, pc, r0
     e30:	sub	r1, r1, r0
     e34:	ldr	r3, [pc, #44]	; e68 <register_tm_clones+0x48>
     e38:	asr	r1, r1, #2
     e3c:	add	r3, pc, r3
     e40:	add	r1, r1, r1, lsr #31
     e44:	asrs	r1, r1, #1
     e48:	bxeq	lr
     e4c:	ldr	r2, [pc, #24]	; e6c <register_tm_clones+0x4c>
     e50:	ldr	r3, [r3, r2]
     e54:	cmp	r3, #0
     e58:	bxeq	lr
     e5c:	bx	r3
     e60:	.word	0x00012254
     e64:	.word	0x00012250
     e68:	.word	0x000121bc
     e6c:	.word	0x0000007c

00000e70 <__do_global_dtors_aux>:
     e70:	ldr	r3, [pc, #76]	; ec4 <__do_global_dtors_aux+0x54>
     e74:	ldr	r2, [pc, #76]	; ec8 <__do_global_dtors_aux+0x58>
     e78:	add	r3, pc, r3
     e7c:	add	r2, pc, r2
     e80:	ldrb	r3, [r3]
     e84:	cmp	r3, #0
     e88:	bxne	lr
     e8c:	ldr	r3, [pc, #56]	; ecc <__do_global_dtors_aux+0x5c>
     e90:	push	{r4, lr}
     e94:	ldr	r3, [r2, r3]
     e98:	cmp	r3, #0
     e9c:	beq	eac <__do_global_dtors_aux+0x3c>
     ea0:	ldr	r3, [pc, #40]	; ed0 <__do_global_dtors_aux+0x60>
     ea4:	ldr	r0, [pc, r3]
     ea8:	bl	cc0 <__cxa_finalize@plt>
     eac:	bl	dd4 <deregister_tm_clones>
     eb0:	ldr	r3, [pc, #28]	; ed4 <__do_global_dtors_aux+0x64>
     eb4:	mov	r2, #1
     eb8:	add	r3, pc, r3
     ebc:	strb	r2, [r3]
     ec0:	pop	{r4, pc}
     ec4:	.word	0x00012204
     ec8:	.word	0x0001217c
     ecc:	.word	0x00000064
     ed0:	.word	0x000121d4
     ed4:	.word	0x000121c4

00000ed8 <frame_dummy>:
     ed8:	ldr	r0, [pc, #56]	; f18 <frame_dummy+0x40>
     edc:	ldr	r3, [pc, #56]	; f1c <frame_dummy+0x44>
     ee0:	add	r0, pc, r0
     ee4:	ldr	r2, [r0]
     ee8:	add	r3, pc, r3
     eec:	cmp	r2, #0
     ef0:	bne	ef8 <frame_dummy+0x20>
     ef4:	b	e20 <register_tm_clones>
     ef8:	ldr	r2, [pc, #32]	; f20 <frame_dummy+0x48>
     efc:	ldr	r3, [r3, r2]
     f00:	cmp	r3, #0
     f04:	beq	ef4 <frame_dummy+0x1c>
     f08:	push	{r4, lr}
     f0c:	blx	r3
     f10:	pop	{r4, lr}
     f14:	b	e20 <register_tm_clones>
     f18:	.word	0x00011fe8
     f1c:	.word	0x00012110
     f20:	.word	0x00000078

00000f24 <daq_verdict_string>:
     f24:	cmp	r0, #6
     f28:	bhi	f3c <daq_verdict_string+0x18>
     f2c:	ldr	r3, [pc, #16]	; f44 <daq_verdict_string+0x20>
     f30:	add	r3, pc, r3
     f34:	ldr	r0, [r3, r0, lsl #2]
     f38:	bx	lr
     f3c:	mov	r0, #0
     f40:	bx	lr
     f44:	.word	0x00011f9c

00000f48 <daq_mode_string>:
     f48:	cmp	r0, #2
     f4c:	bhi	f64 <daq_mode_string+0x1c>
     f50:	ldr	r3, [pc, #20]	; f6c <daq_mode_string+0x24>
     f54:	add	r3, pc, r3
     f58:	add	r0, r3, r0, lsl #2
     f5c:	ldr	r0, [r0, #28]
     f60:	bx	lr
     f64:	mov	r0, #0
     f68:	bx	lr
     f6c:	.word	0x00011f78

00000f70 <daq_state_string>:
     f70:	cmp	r0, #4
     f74:	bhi	f8c <daq_state_string+0x1c>
     f78:	ldr	r3, [pc, #20]	; f94 <daq_state_string+0x24>
     f7c:	add	r3, pc, r3
     f80:	add	r0, r3, r0, lsl #2
     f84:	ldr	r0, [r0, #40]	; 0x28
     f88:	bx	lr
     f8c:	mov	r0, #0
     f90:	bx	lr
     f94:	.word	0x00011f50

00000f98 <daq_find_module>:
     f98:	ldr	r3, [pc, #60]	; fdc <daq_find_module+0x44>
     f9c:	push	{r4, r5, r6, lr}
     fa0:	mov	r6, r0
     fa4:	ldr	r4, [pc, r3]
     fa8:	cmp	r4, #0
     fac:	bne	fbc <daq_find_module+0x24>
     fb0:	mov	r5, r4
     fb4:	mov	r0, r5
     fb8:	pop	{r4, r5, r6, pc}
     fbc:	ldr	r5, [r4]
     fc0:	mov	r0, r6
     fc4:	ldr	r1, [r5, #8]
     fc8:	bl	cb4 <strcmp@plt>
     fcc:	cmp	r0, #0
     fd0:	beq	fb4 <daq_find_module+0x1c>
     fd4:	ldr	r4, [r4, #8]
     fd8:	b	fa8 <daq_find_module+0x10>
     fdc:	.word	0x000120dc

00000fe0 <daq_load_modules>:
     fe0:	ldr	r3, [pc, #1080]	; 1420 <daq_load_modules+0x440>
     fe4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
     fe8:	sub	sp, sp, #644	; 0x284
     fec:	add	r3, pc, r3
     ff0:	str	r3, [sp, #28]
     ff4:	ldr	r3, [pc, #1064]	; 1424 <daq_load_modules+0x444>
     ff8:	ldr	r5, [pc, #1064]	; 1428 <daq_load_modules+0x448>
     ffc:	mov	r7, r0
    1000:	add	r3, pc, r3
    1004:	add	r5, pc, r5
    1008:	str	r3, [sp, #32]
    100c:	cmp	r7, #0
    1010:	beq	1020 <daq_load_modules+0x40>
    1014:	ldr	r0, [r7], #4
    1018:	cmp	r0, #0
    101c:	bne	102c <daq_load_modules+0x4c>
    1020:	mov	r0, #0
    1024:	add	sp, sp, #644	; 0x284
    1028:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    102c:	ldrb	r3, [r0]
    1030:	cmp	r3, #0
    1034:	beq	100c <daq_load_modules+0x2c>
    1038:	bl	d2c <opendir@plt>
    103c:	subs	r3, r0, #0
    1040:	str	r3, [sp, #12]
    1044:	bne	1068 <daq_load_modules+0x88>
    1048:	ldr	r3, [pc, #988]	; 142c <daq_load_modules+0x44c>
    104c:	ldr	r1, [pc, #988]	; 1430 <daq_load_modules+0x450>
    1050:	ldr	r2, [r7, #-4]
    1054:	ldr	r3, [r5, r3]
    1058:	add	r1, pc, r1
    105c:	ldr	r0, [r3]
    1060:	bl	d50 <fprintf@plt>
    1064:	b	100c <daq_load_modules+0x2c>
    1068:	ldr	r3, [sp, #28]
    106c:	ldr	r3, [r3, #4]
    1070:	cmp	r3, #0
    1074:	ble	1088 <daq_load_modules+0xa8>
    1078:	ldr	r0, [pc, #948]	; 1434 <daq_load_modules+0x454>
    107c:	ldr	r1, [r7, #-4]
    1080:	add	r0, pc, r0
    1084:	bl	ccc <printf@plt>
    1088:	ldr	r3, [pc, #936]	; 1438 <daq_load_modules+0x458>
    108c:	add	r3, pc, r3
    1090:	str	r3, [sp, #20]
    1094:	ldr	r3, [pc, #928]	; 143c <daq_load_modules+0x45c>
    1098:	add	r3, pc, r3
    109c:	str	r3, [sp, #24]
    10a0:	ldr	r0, [sp, #12]
    10a4:	bl	d74 <readdir@plt>
    10a8:	cmp	r0, #0
    10ac:	bne	10bc <daq_load_modules+0xdc>
    10b0:	ldr	r0, [sp, #12]
    10b4:	bl	da4 <closedir@plt>
    10b8:	b	100c <daq_load_modules+0x2c>
    10bc:	add	r8, r0, #11
    10c0:	mov	r1, #46	; 0x2e
    10c4:	mov	r0, r8
    10c8:	bl	d80 <strrchr@plt>
    10cc:	cmp	r0, #0
    10d0:	beq	10a0 <daq_load_modules+0xc0>
    10d4:	ldr	r1, [sp, #32]
    10d8:	bl	cb4 <strcmp@plt>
    10dc:	cmp	r0, #0
    10e0:	bne	10a0 <daq_load_modules+0xc0>
    10e4:	add	r6, sp, #128	; 0x80
    10e8:	str	r8, [sp]
    10ec:	ldr	r2, [sp, #20]
    10f0:	ldr	r3, [r7, #-4]
    10f4:	mov	r1, #512	; 0x200
    10f8:	mov	r0, r6
    10fc:	bl	d5c <snprintf@plt>
    1100:	add	r1, sp, #40	; 0x28
    1104:	mov	r0, r6
    1108:	bl	2198 <__stat>
    110c:	cmp	r0, #0
    1110:	bne	1120 <daq_load_modules+0x140>
    1114:	ldr	r3, [sp, #56]	; 0x38
    1118:	tst	r3, #32768	; 0x8000
    111c:	bne	113c <daq_load_modules+0x15c>
    1120:	ldr	r3, [pc, #772]	; 142c <daq_load_modules+0x44c>
    1124:	mov	r2, r6
    1128:	ldr	r1, [sp, #24]
    112c:	ldr	r3, [r5, r3]
    1130:	ldr	r0, [r3]
    1134:	bl	d50 <fprintf@plt>
    1138:	b	10a0 <daq_load_modules+0xc0>
    113c:	mov	r1, #2
    1140:	mov	r0, r6
    1144:	bl	d20 <dlopen@plt>
    1148:	subs	r9, r0, #0
    114c:	bne	1184 <daq_load_modules+0x1a4>
    1150:	ldr	r3, [pc, #724]	; 142c <daq_load_modules+0x44c>
    1154:	ldr	r3, [r5, r3]
    1158:	ldr	r4, [r3]
    115c:	bl	cfc <dlerror@plt>
    1160:	ldr	r3, [pc, #728]	; 1440 <daq_load_modules+0x460>
    1164:	ldr	r1, [pc, #728]	; 1444 <daq_load_modules+0x464>
    1168:	add	r3, pc, r3
    116c:	mov	r2, r6
    1170:	add	r1, pc, r1
    1174:	str	r0, [sp]
    1178:	mov	r0, r4
    117c:	bl	d50 <fprintf@plt>
    1180:	b	10a0 <daq_load_modules+0xc0>
    1184:	ldr	r1, [pc, #700]	; 1448 <daq_load_modules+0x468>
    1188:	add	r1, pc, r1
    118c:	bl	d98 <dlsym@plt>
    1190:	subs	r4, r0, #0
    1194:	bne	11d4 <daq_load_modules+0x1f4>
    1198:	ldr	r3, [pc, #652]	; 142c <daq_load_modules+0x44c>
    119c:	ldr	r3, [r5, r3]
    11a0:	ldr	r4, [r3]
    11a4:	bl	cfc <dlerror@plt>
    11a8:	ldr	r3, [pc, #668]	; 144c <daq_load_modules+0x46c>
    11ac:	ldr	r1, [pc, #668]	; 1450 <daq_load_modules+0x470>
    11b0:	add	r3, pc, r3
    11b4:	mov	r2, r6
    11b8:	add	r1, pc, r1
    11bc:	str	r0, [sp]
    11c0:	mov	r0, r4
    11c4:	bl	d50 <fprintf@plt>
    11c8:	mov	r0, r9
    11cc:	bl	cf0 <dlclose@plt>
    11d0:	b	10a0 <daq_load_modules+0xc0>
    11d4:	ldr	r3, [r4]
    11d8:	ldr	r2, [pc, #628]	; 1454 <daq_load_modules+0x474>
    11dc:	cmp	r3, r2
    11e0:	beq	1224 <daq_load_modules+0x244>
    11e4:	ldr	r1, [pc, #576]	; 142c <daq_load_modules+0x44c>
    11e8:	ldr	r0, [r5, r1]
    11ec:	ldr	r1, [pc, #612]	; 1458 <daq_load_modules+0x478>
    11f0:	str	r2, [sp]
    11f4:	add	r1, pc, r1
    11f8:	ldr	r2, [r4, #8]
    11fc:	ldr	r0, [r0]
    1200:	bl	d50 <fprintf@plt>
    1204:	ldr	r3, [pc, #544]	; 142c <daq_load_modules+0x44c>
    1208:	ldr	r1, [pc, #588]	; 145c <daq_load_modules+0x47c>
    120c:	mov	r2, r6
    1210:	ldr	r3, [r5, r3]
    1214:	add	r1, pc, r1
    1218:	ldr	r0, [r3]
    121c:	bl	d50 <fprintf@plt>
    1220:	b	11c8 <daq_load_modules+0x1e8>
    1224:	ldr	r3, [r4, #16]
    1228:	cmp	r3, #0
    122c:	beq	12e4 <daq_load_modules+0x304>
    1230:	ldr	r3, [r4, #20]
    1234:	cmp	r3, #0
    1238:	beq	12e4 <daq_load_modules+0x304>
    123c:	ldr	r3, [r4, #24]
    1240:	cmp	r3, #0
    1244:	beq	12e4 <daq_load_modules+0x304>
    1248:	ldr	r3, [r4, #28]
    124c:	cmp	r3, #0
    1250:	beq	12e4 <daq_load_modules+0x304>
    1254:	ldr	r3, [r4, #32]
    1258:	cmp	r3, #0
    125c:	beq	12e4 <daq_load_modules+0x304>
    1260:	ldr	r3, [r4, #36]	; 0x24
    1264:	cmp	r3, #0
    1268:	beq	12e4 <daq_load_modules+0x304>
    126c:	ldr	r3, [r4, #40]	; 0x28
    1270:	cmp	r3, #0
    1274:	beq	12e4 <daq_load_modules+0x304>
    1278:	ldr	r3, [r4, #44]	; 0x2c
    127c:	cmp	r3, #0
    1280:	beq	12e4 <daq_load_modules+0x304>
    1284:	ldr	r3, [r4, #48]	; 0x30
    1288:	cmp	r3, #0
    128c:	beq	12e4 <daq_load_modules+0x304>
    1290:	ldr	r3, [r4, #52]	; 0x34
    1294:	cmp	r3, #0
    1298:	beq	12e4 <daq_load_modules+0x304>
    129c:	ldr	r3, [r4, #56]	; 0x38
    12a0:	cmp	r3, #0
    12a4:	beq	12e4 <daq_load_modules+0x304>
    12a8:	ldr	r3, [r4, #60]	; 0x3c
    12ac:	cmp	r3, #0
    12b0:	beq	12e4 <daq_load_modules+0x304>
    12b4:	ldr	r3, [r4, #64]	; 0x40
    12b8:	cmp	r3, #0
    12bc:	beq	12e4 <daq_load_modules+0x304>
    12c0:	ldr	r3, [r4, #72]	; 0x48
    12c4:	cmp	r3, #0
    12c8:	beq	12e4 <daq_load_modules+0x304>
    12cc:	ldr	r3, [r4, #76]	; 0x4c
    12d0:	cmp	r3, #0
    12d4:	beq	12e4 <daq_load_modules+0x304>
    12d8:	ldr	r3, [r4, #80]	; 0x50
    12dc:	cmp	r3, #0
    12e0:	bne	1304 <daq_load_modules+0x324>
    12e4:	ldr	r3, [pc, #320]	; 142c <daq_load_modules+0x44c>
    12e8:	ldr	r1, [pc, #368]	; 1460 <daq_load_modules+0x480>
    12ec:	ldr	r2, [r4, #8]
    12f0:	ldr	r3, [r5, r3]
    12f4:	add	r1, pc, r1
    12f8:	ldr	r0, [r3]
    12fc:	bl	d50 <fprintf@plt>
    1300:	b	1204 <daq_load_modules+0x224>
    1304:	ldr	r3, [pc, #344]	; 1464 <daq_load_modules+0x484>
    1308:	add	r3, pc, r3
    130c:	ldr	r3, [r3]
    1310:	mov	sl, r3
    1314:	str	r3, [sp, #16]
    1318:	cmp	sl, #0
    131c:	bne	1358 <daq_load_modules+0x378>
    1320:	mov	r1, #12
    1324:	mov	r0, #1
    1328:	bl	ca8 <calloc@plt>
    132c:	subs	sl, r0, #0
    1330:	beq	1204 <daq_load_modules+0x224>
    1334:	ldr	r2, [pc, #300]	; 1468 <daq_load_modules+0x488>
    1338:	ldr	r3, [sp, #16]
    133c:	add	r2, pc, r2
    1340:	str	r3, [sl, #8]
    1344:	ldr	r1, [r2, #8]
    1348:	str	sl, [r2]
    134c:	add	r1, r1, #1
    1350:	str	r1, [r2, #8]
    1354:	b	13d0 <daq_load_modules+0x3f0>
    1358:	ldr	r2, [sl]
    135c:	ldr	r1, [r4, #8]
    1360:	str	r2, [sp, #36]	; 0x24
    1364:	ldr	fp, [r2, #8]
    1368:	mov	r0, fp
    136c:	bl	cb4 <strcmp@plt>
    1370:	ldr	r2, [sp, #36]	; 0x24
    1374:	cmp	r0, #0
    1378:	beq	13b0 <daq_load_modules+0x3d0>
    137c:	ldr	sl, [sl, #8]
    1380:	b	1318 <daq_load_modules+0x338>
    1384:	ldr	r3, [pc, #224]	; 146c <daq_load_modules+0x48c>
    1388:	add	r3, pc, r3
    138c:	ldr	r3, [r3, #4]
    1390:	cmp	r3, #0
    1394:	ble	11c8 <daq_load_modules+0x1e8>
    1398:	ldr	r0, [pc, #208]	; 1470 <daq_load_modules+0x490>
    139c:	mov	r3, r1
    13a0:	add	r0, pc, r0
    13a4:	mov	r1, fp
    13a8:	bl	ccc <printf@plt>
    13ac:	b	11c8 <daq_load_modules+0x1e8>
    13b0:	ldr	r2, [r2, #4]
    13b4:	ldr	r1, [r4, #4]
    13b8:	cmp	r2, r1
    13bc:	bcs	1384 <daq_load_modules+0x3a4>
    13c0:	ldr	r0, [sl, #4]
    13c4:	cmp	r0, #0
    13c8:	beq	13d0 <daq_load_modules+0x3f0>
    13cc:	bl	cf0 <dlclose@plt>
    13d0:	ldr	r2, [pc, #156]	; 1474 <daq_load_modules+0x494>
    13d4:	add	r2, pc, r2
    13d8:	ldr	r2, [r2, #4]
    13dc:	cmp	r2, #0
    13e0:	ble	13f4 <daq_load_modules+0x414>
    13e4:	ldr	r0, [pc, #140]	; 1478 <daq_load_modules+0x498>
    13e8:	ldr	r1, [r4, #8]
    13ec:	add	r0, pc, r0
    13f0:	bl	ccc <printf@plt>
    13f4:	ldr	r3, [pc, #128]	; 147c <daq_load_modules+0x49c>
    13f8:	stm	sl, {r4, r9}
    13fc:	add	r3, pc, r3
    1400:	ldr	r3, [r3, #4]
    1404:	cmp	r3, #0
    1408:	ble	10a0 <daq_load_modules+0xc0>
    140c:	ldr	r0, [pc, #108]	; 1480 <daq_load_modules+0x4a0>
    1410:	mov	r1, r8
    1414:	add	r0, pc, r0
    1418:	bl	ccc <printf@plt>
    141c:	b	10a0 <daq_load_modules+0xc0>
    1420:	.word	0x00012094
    1424:	.word	0x000011f4
    1428:	.word	0x00011ff4
    142c:	.word	0x0000006c
    1430:	.word	0x00001165
    1434:	.word	0x0000115c
    1438:	.word	0x0000116c
    143c:	.word	0x00001166
    1440:	.word	0x000010b0
    1444:	.word	0x000010af
    1448:	.word	0x000010a3
    144c:	.word	0x0000108b
    1450:	.word	0x00001067
    1454:	.word	0x00010002
    1458:	.word	0x0000104d
    145c:	.word	0x0000111f
    1460:	.word	0x00000f91
    1464:	.word	0x00011d78
    1468:	.word	0x00011d44
    146c:	.word	0x00011cf8
    1470:	.word	0x00000f1c
    1474:	.word	0x00011cac
    1478:	.word	0x00000f1b
    147c:	.word	0x00011c84
    1480:	.word	0x00000f0e

00001484 <daq_unload_modules>:
    1484:	push	{r4, r5, r6, lr}
    1488:	ldr	r5, [pc, #72]	; 14d8 <daq_unload_modules+0x54>
    148c:	ldr	r6, [pc, #72]	; 14dc <daq_unload_modules+0x58>
    1490:	add	r5, pc, r5
    1494:	add	r6, pc, r6
    1498:	ldr	r4, [r5]
    149c:	cmp	r4, #0
    14a0:	bne	14a8 <daq_unload_modules+0x24>
    14a4:	pop	{r4, r5, r6, pc}
    14a8:	ldr	r0, [r4, #4]
    14ac:	ldr	r3, [r4, #8]
    14b0:	cmp	r0, #0
    14b4:	str	r3, [r5]
    14b8:	beq	14c0 <daq_unload_modules+0x3c>
    14bc:	bl	cf0 <dlclose@plt>
    14c0:	mov	r0, r4
    14c4:	bl	cd8 <free@plt>
    14c8:	ldr	r3, [r6, #8]
    14cc:	sub	r3, r3, #1
    14d0:	str	r3, [r6, #8]
    14d4:	b	1498 <daq_unload_modules+0x14>
    14d8:	.word	0x00011bf0
    14dc:	.word	0x00011bec

000014e0 <daq_print_stats>:
    14e0:	push	{r4, r5, r6, lr}
    14e4:	subs	r5, r0, #0
    14e8:	ldr	r3, [pc, #264]	; 15f8 <daq_print_stats+0x118>
    14ec:	add	r3, pc, r3
    14f0:	popeq	{r4, r5, r6, pc}
    14f4:	cmp	r1, #0
    14f8:	mov	r4, r1
    14fc:	ldreq	r2, [pc, #248]	; 15fc <daq_print_stats+0x11c>
    1500:	ldreq	r3, [r3, r2]
    1504:	ldreq	r4, [r3]
    1508:	ldr	r0, [pc, #240]	; 1600 <daq_print_stats+0x120>
    150c:	mov	r1, r4
    1510:	add	r0, pc, r0
    1514:	bl	d8c <fputs@plt>
    1518:	ldr	r1, [pc, #228]	; 1604 <daq_print_stats+0x124>
    151c:	ldrd	r2, [r5]
    1520:	add	r1, pc, r1
    1524:	mov	r0, r4
    1528:	bl	d50 <fprintf@plt>
    152c:	ldr	r1, [pc, #212]	; 1608 <daq_print_stats+0x128>
    1530:	ldrd	r2, [r5, #8]
    1534:	add	r1, pc, r1
    1538:	mov	r0, r4
    153c:	bl	d50 <fprintf@plt>
    1540:	ldr	r1, [pc, #196]	; 160c <daq_print_stats+0x12c>
    1544:	ldrd	r2, [r5, #16]
    1548:	add	r1, pc, r1
    154c:	mov	r0, r4
    1550:	bl	d50 <fprintf@plt>
    1554:	ldr	r1, [pc, #180]	; 1610 <daq_print_stats+0x130>
    1558:	ldrd	r2, [r5, #24]
    155c:	add	r1, pc, r1
    1560:	mov	r0, r4
    1564:	bl	d50 <fprintf@plt>
    1568:	ldr	r1, [pc, #164]	; 1614 <daq_print_stats+0x134>
    156c:	ldrd	r2, [r5, #40]	; 0x28
    1570:	add	r1, pc, r1
    1574:	mov	r0, r4
    1578:	bl	d50 <fprintf@plt>
    157c:	ldr	r1, [pc, #148]	; 1618 <daq_print_stats+0x138>
    1580:	ldrd	r2, [r5, #56]	; 0x38
    1584:	add	r1, pc, r1
    1588:	mov	r0, r4
    158c:	bl	d50 <fprintf@plt>
    1590:	ldr	r1, [pc, #132]	; 161c <daq_print_stats+0x13c>
    1594:	ldrd	r2, [r5, #48]	; 0x30
    1598:	add	r1, pc, r1
    159c:	mov	r0, r4
    15a0:	bl	d50 <fprintf@plt>
    15a4:	ldr	r1, [pc, #116]	; 1620 <daq_print_stats+0x140>
    15a8:	ldrd	r2, [r5, #32]
    15ac:	add	r1, pc, r1
    15b0:	mov	r0, r4
    15b4:	bl	d50 <fprintf@plt>
    15b8:	ldr	r1, [pc, #100]	; 1624 <daq_print_stats+0x144>
    15bc:	ldrd	r2, [r5, #64]	; 0x40
    15c0:	add	r1, pc, r1
    15c4:	mov	r0, r4
    15c8:	bl	d50 <fprintf@plt>
    15cc:	ldr	r1, [pc, #84]	; 1628 <daq_print_stats+0x148>
    15d0:	ldrd	r2, [r5, #72]	; 0x48
    15d4:	add	r1, pc, r1
    15d8:	mov	r0, r4
    15dc:	bl	d50 <fprintf@plt>
    15e0:	ldr	r1, [pc, #68]	; 162c <daq_print_stats+0x14c>
    15e4:	ldrd	r2, [r5, #80]	; 0x50
    15e8:	mov	r0, r4
    15ec:	add	r1, pc, r1
    15f0:	pop	{r4, r5, r6, lr}
    15f4:	b	d50 <fprintf@plt>
    15f8:	.word	0x00011b0c
    15fc:	.word	0x00000074
    1600:	.word	0x00000e47
    1604:	.word	0x00000e50
    1608:	.word	0x00000e60
    160c:	.word	0x00000e70
    1610:	.word	0x00000e78
    1614:	.word	0x00000e80
    1618:	.word	0x00000e88
    161c:	.word	0x00000e90
    1620:	.word	0x00000e98
    1624:	.word	0x00000ea0
    1628:	.word	0x00000ea8
    162c:	.word	0x00000eac

00001630 <daq_free_module_list>:
    1630:	cmp	r0, #0
    1634:	cmpne	r1, #0
    1638:	push	{r4, r5, r6, r7, r8, lr}
    163c:	movle	r5, #1
    1640:	movgt	r5, #0
    1644:	pople	{r4, r5, r6, r7, r8, pc}
    1648:	mov	r6, r1
    164c:	mov	r4, r0
    1650:	mov	r7, #12
    1654:	mul	r3, r7, r5
    1658:	ldr	r0, [r4, r3]
    165c:	cmp	r0, #0
    1660:	beq	1668 <daq_free_module_list+0x38>
    1664:	bl	cd8 <free@plt>
    1668:	add	r5, r5, #1
    166c:	cmp	r6, r5
    1670:	bgt	1654 <daq_free_module_list+0x24>
    1674:	mov	r0, r4
    1678:	pop	{r4, r5, r6, r7, r8, lr}
    167c:	b	cd8 <free@plt>

00001680 <daq_get_module_list>:
    1680:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    1684:	subs	r7, r0, #0
    1688:	mvneq	r5, #6
    168c:	beq	1718 <daq_get_module_list+0x98>
    1690:	ldr	r4, [pc, #136]	; 1720 <daq_get_module_list+0xa0>
    1694:	mov	r1, #12
    1698:	add	r4, pc, r4
    169c:	ldr	r5, [r4, #8]
    16a0:	mov	r0, r5
    16a4:	bl	ca8 <calloc@plt>
    16a8:	subs	r8, r0, #0
    16ac:	movne	r6, r8
    16b0:	ldrne	r4, [r4]
    16b4:	movne	r9, #0
    16b8:	bne	170c <daq_get_module_list+0x8c>
    16bc:	mvn	r5, #1
    16c0:	b	1718 <daq_get_module_list+0x98>
    16c4:	ldr	r3, [r4]
    16c8:	ldr	r0, [r3, #8]
    16cc:	bl	ce4 <strdup@plt>
    16d0:	cmp	r0, #0
    16d4:	str	r0, [r6], #12
    16d8:	bne	16ec <daq_get_module_list+0x6c>
    16dc:	mov	r1, r9
    16e0:	mov	r0, r8
    16e4:	bl	d68 <daq_free_module_list@plt>
    16e8:	b	16bc <daq_get_module_list+0x3c>
    16ec:	ldr	r3, [r4]
    16f0:	add	r9, r9, #1
    16f4:	ldr	r3, [r3, #4]
    16f8:	str	r3, [r6, #-8]
    16fc:	ldr	r3, [r4]
    1700:	ldr	r3, [r3, #12]
    1704:	str	r3, [r6, #-4]
    1708:	ldr	r4, [r4, #8]
    170c:	cmp	r4, #0
    1710:	bne	16c4 <daq_get_module_list+0x44>
    1714:	str	r8, [r7]
    1718:	mov	r0, r5
    171c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    1720:	.word	0x000119e8

00001724 <daq_set_verbosity>:
    1724:	ldr	r3, [pc, #28]	; 1748 <daq_set_verbosity+0x24>
    1728:	cmp	r0, #0
    172c:	add	r3, pc, r3
    1730:	mov	r1, r0
    1734:	str	r0, [r3, #4]
    1738:	bxle	lr
    173c:	ldr	r0, [pc, #8]	; 174c <daq_set_verbosity+0x28>
    1740:	add	r0, pc, r0
    1744:	b	ccc <printf@plt>
    1748:	.word	0x00011954
    174c:	.word	0x00000d74

00001750 <daq_config_get_value>:
    1750:	cmp	r1, #0
    1754:	cmpne	r0, #0
    1758:	beq	179c <daq_config_get_value+0x4c>
    175c:	push	{r4, r5, r6, lr}
    1760:	mov	r5, r1
    1764:	ldr	r4, [r0, #20]
    1768:	cmp	r4, #0
    176c:	bne	1778 <daq_config_get_value+0x28>
    1770:	mov	r0, r4
    1774:	pop	{r4, r5, r6, pc}
    1778:	mov	r1, r5
    177c:	ldr	r0, [r4]
    1780:	bl	cb4 <strcmp@plt>
    1784:	cmp	r0, #0
    1788:	bne	1794 <daq_config_get_value+0x44>
    178c:	ldr	r0, [r4, #4]
    1790:	pop	{r4, r5, r6, pc}
    1794:	ldr	r4, [r4, #8]
    1798:	b	1768 <daq_config_get_value+0x18>
    179c:	mov	r0, #0
    17a0:	bx	lr

000017a4 <daq_config_set_value>:
    17a4:	push	{r4, r5, r6, r7, r8, lr}
    17a8:	cmp	r1, #0
    17ac:	cmpne	r0, #0
    17b0:	ldr	r8, [pc, #308]	; 18ec <daq_config_set_value+0x148>
    17b4:	add	r8, pc, r8
    17b8:	popeq	{r4, r5, r6, r7, r8, pc}
    17bc:	ldr	r4, [r0, #20]
    17c0:	mov	r6, r1
    17c4:	mov	r5, r0
    17c8:	mov	r7, r2
    17cc:	cmp	r4, #0
    17d0:	bne	1810 <daq_config_set_value+0x6c>
    17d4:	mov	r1, #12
    17d8:	mov	r0, #1
    17dc:	bl	ca8 <calloc@plt>
    17e0:	subs	r4, r0, #0
    17e4:	bne	182c <daq_config_set_value+0x88>
    17e8:	ldr	r3, [pc, #256]	; 18f0 <daq_config_set_value+0x14c>
    17ec:	ldr	r2, [pc, #256]	; 18f4 <daq_config_set_value+0x150>
    17f0:	ldr	r1, [pc, #256]	; 18f8 <daq_config_set_value+0x154>
    17f4:	ldr	r0, [r8, r3]
    17f8:	add	r2, pc, r2
    17fc:	mov	r3, #12
    1800:	ldr	r0, [r0]
    1804:	add	r1, pc, r1
    1808:	pop	{r4, r5, r6, r7, r8, lr}
    180c:	b	d50 <fprintf@plt>
    1810:	mov	r1, r6
    1814:	ldr	r0, [r4]
    1818:	bl	cb4 <strcmp@plt>
    181c:	cmp	r0, #0
    1820:	beq	1878 <daq_config_set_value+0xd4>
    1824:	ldr	r4, [r4, #8]
    1828:	b	17cc <daq_config_set_value+0x28>
    182c:	mov	r0, r6
    1830:	bl	ce4 <strdup@plt>
    1834:	cmp	r0, #0
    1838:	str	r0, [r4]
    183c:	ldrne	r3, [r5, #20]
    1840:	strne	r4, [r5, #20]
    1844:	strne	r3, [r4, #8]
    1848:	bne	1878 <daq_config_set_value+0xd4>
    184c:	mov	r0, r6
    1850:	bl	d44 <strlen@plt>
    1854:	ldr	r3, [pc, #148]	; 18f0 <daq_config_set_value+0x14c>
    1858:	ldr	r2, [pc, #156]	; 18fc <daq_config_set_value+0x158>
    185c:	ldr	r1, [pc, #156]	; 1900 <daq_config_set_value+0x15c>
    1860:	ldr	ip, [r8, r3]
    1864:	add	r2, pc, r2
    1868:	add	r1, pc, r1
    186c:	add	r3, r0, #1
    1870:	ldr	r0, [ip]
    1874:	b	1808 <daq_config_set_value+0x64>
    1878:	ldr	r0, [r4, #4]
    187c:	bl	cd8 <free@plt>
    1880:	cmp	r7, #0
    1884:	beq	18c4 <daq_config_set_value+0x120>
    1888:	mov	r0, r7
    188c:	bl	ce4 <strdup@plt>
    1890:	cmp	r0, #0
    1894:	str	r0, [r4, #4]
    1898:	bne	18c4 <daq_config_set_value+0x120>
    189c:	mov	r0, r7
    18a0:	bl	d44 <strlen@plt>
    18a4:	ldr	r3, [pc, #68]	; 18f0 <daq_config_set_value+0x14c>
    18a8:	ldr	r2, [pc, #84]	; 1904 <daq_config_set_value+0x160>
    18ac:	ldr	r1, [pc, #84]	; 1908 <daq_config_set_value+0x164>
    18b0:	ldr	ip, [r8, r3]
    18b4:	add	r2, pc, r2
    18b8:	add	r1, pc, r1
    18bc:	add	r3, r0, #1
    18c0:	b	1870 <daq_config_set_value+0xcc>
    18c4:	ldr	r3, [pc, #64]	; 190c <daq_config_set_value+0x168>
    18c8:	add	r3, pc, r3
    18cc:	ldr	r3, [r3, #4]
    18d0:	cmp	r3, #0
    18d4:	pople	{r4, r5, r6, r7, r8, pc}
    18d8:	ldr	r0, [pc, #48]	; 1910 <daq_config_set_value+0x16c>
    18dc:	ldm	r4, {r1, r2}
    18e0:	add	r0, pc, r0
    18e4:	pop	{r4, r5, r6, r7, r8, lr}
    18e8:	b	ccc <printf@plt>
    18ec:	.word	0x00011844
    18f0:	.word	0x0000006c
    18f4:	.word	0x000009b0
    18f8:	.word	0x00000cd3
    18fc:	.word	0x00000944
    1900:	.word	0x00000ca9
    1904:	.word	0x000008f4
    1908:	.word	0x00000c97
    190c:	.word	0x000117b8
    1910:	.word	0x00000caf

00001914 <daq_config_clear_value>:
    1914:	cmp	r1, #0
    1918:	cmpne	r0, #0
    191c:	push	{r4, r5, r6, r7, r8, lr}
    1920:	movne	r5, r0
    1924:	moveq	r6, #1
    1928:	movne	r6, #0
    192c:	movne	r7, r1
    1930:	ldrne	r4, [r5, #20]
    1934:	bne	1984 <daq_config_clear_value+0x70>
    1938:	pop	{r4, r5, r6, r7, r8, pc}
    193c:	mov	r1, r7
    1940:	ldr	r0, [r4]
    1944:	bl	cb4 <strcmp@plt>
    1948:	ldr	r3, [r4, #8]
    194c:	cmp	r0, #0
    1950:	bne	197c <daq_config_clear_value+0x68>
    1954:	cmp	r6, #0
    1958:	strne	r3, [r6, #8]
    195c:	streq	r3, [r5, #20]
    1960:	ldr	r0, [r4]
    1964:	bl	cd8 <free@plt>
    1968:	ldr	r0, [r4, #4]
    196c:	bl	cd8 <free@plt>
    1970:	mov	r0, r4
    1974:	pop	{r4, r5, r6, r7, r8, lr}
    1978:	b	cd8 <free@plt>
    197c:	mov	r6, r4
    1980:	mov	r4, r3
    1984:	cmp	r4, #0
    1988:	bne	193c <daq_config_clear_value+0x28>
    198c:	pop	{r4, r5, r6, r7, r8, pc}

00001990 <daq_config_clear_values>:
    1990:	push	{r4, r5, r6, lr}
    1994:	subs	r5, r0, #0
    1998:	bne	19c0 <daq_config_clear_values+0x30>
    199c:	pop	{r4, r5, r6, pc}
    19a0:	ldr	r3, [r4, #8]
    19a4:	str	r3, [r5, #20]
    19a8:	ldr	r0, [r4]
    19ac:	bl	cd8 <free@plt>
    19b0:	ldr	r0, [r4, #4]
    19b4:	bl	cd8 <free@plt>
    19b8:	mov	r0, r4
    19bc:	bl	cd8 <free@plt>
    19c0:	ldr	r4, [r5, #20]
    19c4:	cmp	r4, #0
    19c8:	bne	19a0 <daq_config_clear_values+0x10>
    19cc:	pop	{r4, r5, r6, pc}

000019d0 <daq_initialize>:
    19d0:	push	{r0, r1, r4, r5, r6, lr}
    19d4:	subs	r4, r3, #0
    19d8:	ldr	r5, [sp, #24]
    19dc:	beq	1ab4 <daq_initialize+0xe4>
    19e0:	cmp	r0, #0
    19e4:	mov	ip, r0
    19e8:	beq	1abc <daq_initialize+0xec>
    19ec:	mov	r0, r1
    19f0:	cmp	r0, #0
    19f4:	mov	r1, r2
    19f8:	bne	1a1c <daq_initialize+0x4c>
    19fc:	ldr	r2, [pc, #192]	; 1ac4 <daq_initialize+0xf4>
    1a00:	add	r2, pc, r2
    1a04:	mov	r1, r5
    1a08:	mov	r0, r4
    1a0c:	bl	d5c <snprintf@plt>
    1a10:	mvn	r0, #6
    1a14:	add	sp, sp, #8
    1a18:	pop	{r4, r5, r6, pc}
    1a1c:	cmp	r2, #0
    1a20:	ldreq	r2, [pc, #160]	; 1ac8 <daq_initialize+0xf8>
    1a24:	addeq	r2, pc, r2
    1a28:	beq	1a04 <daq_initialize+0x34>
    1a2c:	ldr	r2, [r0, #12]
    1a30:	cmp	r2, #0
    1a34:	bne	1a70 <daq_initialize+0xa0>
    1a38:	ldr	r3, [ip, #12]
    1a3c:	tst	r3, #2
    1a40:	bne	1a98 <daq_initialize+0xc8>
    1a44:	mov	r0, r2
    1a48:	ldr	r6, [ip, #8]
    1a4c:	bl	d08 <daq_mode_string@plt>
    1a50:	ldr	r2, [pc, #116]	; 1acc <daq_initialize+0xfc>
    1a54:	mov	r3, r6
    1a58:	add	r2, pc, r2
    1a5c:	mov	r1, r5
    1a60:	str	r0, [sp]
    1a64:	mov	r0, r4
    1a68:	bl	d5c <snprintf@plt>
    1a6c:	b	1a10 <daq_initialize+0x40>
    1a70:	cmp	r2, #1
    1a74:	bne	1a84 <daq_initialize+0xb4>
    1a78:	ldr	r3, [ip, #12]
    1a7c:	tst	r3, #4
    1a80:	b	1a40 <daq_initialize+0x70>
    1a84:	cmp	r2, #2
    1a88:	bne	1a98 <daq_initialize+0xc8>
    1a8c:	ldr	r3, [ip, #12]
    1a90:	tst	r3, #1
    1a94:	b	1a40 <daq_initialize+0x70>
    1a98:	ldr	r6, [ip, #16]
    1a9c:	mov	r3, r5
    1aa0:	mov	r2, r4
    1aa4:	mov	ip, r6
    1aa8:	add	sp, sp, #8
    1aac:	pop	{r4, r5, r6, lr}
    1ab0:	bx	ip
    1ab4:	mvn	r0, #0
    1ab8:	b	1a14 <daq_initialize+0x44>
    1abc:	mvn	r0, #4
    1ac0:	b	1a14 <daq_initialize+0x44>
    1ac4:	.word	0x00000c2d
    1ac8:	.word	0x00000c33
    1acc:	.word	0x00000c2b

00001ad0 <daq_set_filter>:
    1ad0:	cmp	r0, #0
    1ad4:	beq	1b28 <daq_set_filter+0x58>
    1ad8:	cmp	r1, #0
    1adc:	mov	r3, r1
    1ae0:	beq	1b30 <daq_set_filter+0x60>
    1ae4:	cmp	r2, #0
    1ae8:	push	{r4, lr}
    1aec:	bne	1b10 <daq_set_filter+0x40>
    1af0:	mov	r2, r0
    1af4:	mov	r0, r1
    1af8:	ldr	r1, [pc, #56]	; 1b38 <daq_set_filter+0x68>
    1afc:	ldr	r3, [r2, #76]	; 0x4c
    1b00:	add	r1, pc, r1
    1b04:	blx	r3
    1b08:	mvn	r0, #6
    1b0c:	pop	{r4, pc}
    1b10:	ldr	lr, [r0, #20]
    1b14:	mov	r1, r2
    1b18:	mov	r0, r3
    1b1c:	mov	r3, lr
    1b20:	pop	{r4, lr}
    1b24:	bx	r3
    1b28:	mvn	r0, #4
    1b2c:	bx	lr
    1b30:	mvn	r0, #5
    1b34:	bx	lr
    1b38:	.word	0x00000baf

00001b3c <daq_start>:
    1b3c:	push	{r4, r5, r6, lr}
    1b40:	subs	r5, r0, #0
    1b44:	beq	1b94 <daq_start+0x58>
    1b48:	cmp	r1, #0
    1b4c:	beq	1b9c <daq_start+0x60>
    1b50:	ldr	r3, [r5, #48]	; 0x30
    1b54:	mov	r0, r1
    1b58:	mov	r4, r1
    1b5c:	blx	r3
    1b60:	cmp	r0, #1
    1b64:	beq	1b84 <daq_start+0x48>
    1b68:	ldr	r1, [pc, #52]	; 1ba4 <daq_start+0x68>
    1b6c:	mov	r0, r4
    1b70:	ldr	r3, [r5, #76]	; 0x4c
    1b74:	add	r1, pc, r1
    1b78:	blx	r3
    1b7c:	mvn	r0, #0
    1b80:	pop	{r4, r5, r6, pc}
    1b84:	ldr	r3, [r5, #24]
    1b88:	mov	r0, r4
    1b8c:	pop	{r4, r5, r6, lr}
    1b90:	bx	r3
    1b94:	mvn	r0, #4
    1b98:	pop	{r4, r5, r6, pc}
    1b9c:	mvn	r0, #5
    1ba0:	pop	{r4, r5, r6, pc}
    1ba4:	.word	0x00000b57

00001ba8 <daq_acquire>:
    1ba8:	push	{r4, r5, r6, r7, r8, lr}
    1bac:	subs	r5, r0, #0
    1bb0:	ldr	r8, [sp, #24]
    1bb4:	beq	1c20 <daq_acquire+0x78>
    1bb8:	cmp	r1, #0
    1bbc:	beq	1c28 <daq_acquire+0x80>
    1bc0:	mov	r7, r3
    1bc4:	mov	r0, r1
    1bc8:	ldr	r3, [r5, #48]	; 0x30
    1bcc:	mov	r6, r2
    1bd0:	mov	r4, r1
    1bd4:	blx	r3
    1bd8:	cmp	r0, #2
    1bdc:	beq	1bfc <daq_acquire+0x54>
    1be0:	ldr	r1, [pc, #72]	; 1c30 <daq_acquire+0x88>
    1be4:	mov	r0, r4
    1be8:	ldr	r3, [r5, #76]	; 0x4c
    1bec:	add	r1, pc, r1
    1bf0:	blx	r3
    1bf4:	mvn	r0, #0
    1bf8:	pop	{r4, r5, r6, r7, r8, pc}
    1bfc:	str	r8, [sp, #24]
    1c00:	ldr	lr, [r5, #28]
    1c04:	mov	r2, r7
    1c08:	mov	r1, r6
    1c0c:	mov	r0, r4
    1c10:	mov	ip, lr
    1c14:	mov	r3, #0
    1c18:	pop	{r4, r5, r6, r7, r8, lr}
    1c1c:	bx	ip
    1c20:	mvn	r0, #4
    1c24:	pop	{r4, r5, r6, r7, r8, pc}
    1c28:	mvn	r0, #5
    1c2c:	pop	{r4, r5, r6, r7, r8, pc}
    1c30:	.word	0x00000b0f

00001c34 <daq_acquire_with_meta>:
    1c34:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
    1c38:	subs	r5, r0, #0
    1c3c:	ldr	r8, [sp, #32]
    1c40:	ldr	r9, [sp, #36]	; 0x24
    1c44:	beq	1cb0 <daq_acquire_with_meta+0x7c>
    1c48:	cmp	r1, #0
    1c4c:	beq	1cb8 <daq_acquire_with_meta+0x84>
    1c50:	mov	r7, r3
    1c54:	mov	r0, r1
    1c58:	ldr	r3, [r5, #48]	; 0x30
    1c5c:	mov	r6, r2
    1c60:	mov	r4, r1
    1c64:	blx	r3
    1c68:	cmp	r0, #2
    1c6c:	beq	1c8c <daq_acquire_with_meta+0x58>
    1c70:	ldr	r1, [pc, #72]	; 1cc0 <daq_acquire_with_meta+0x8c>
    1c74:	mov	r0, r4
    1c78:	ldr	r3, [r5, #76]	; 0x4c
    1c7c:	add	r1, pc, r1
    1c80:	blx	r3
    1c84:	mvn	r0, #0
    1c88:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    1c8c:	str	r9, [sp, #32]
    1c90:	ldr	lr, [r5, #28]
    1c94:	mov	r3, r8
    1c98:	mov	r2, r7
    1c9c:	mov	r1, r6
    1ca0:	mov	r0, r4
    1ca4:	mov	ip, lr
    1ca8:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
    1cac:	bx	ip
    1cb0:	mvn	r0, #4
    1cb4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    1cb8:	mvn	r0, #5
    1cbc:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
    1cc0:	.word	0x00000a7f

00001cc4 <daq_inject>:
    1cc4:	push	{r4, lr}
    1cc8:	subs	ip, r0, #0
    1ccc:	mov	lr, r2
    1cd0:	ldr	r4, [sp, #12]
    1cd4:	mov	r2, r3
    1cd8:	ldr	r3, [sp, #8]
    1cdc:	beq	1d38 <daq_inject+0x74>
    1ce0:	cmp	r1, #0
    1ce4:	beq	1d40 <daq_inject+0x7c>
    1ce8:	cmp	lr, #0
    1cec:	mov	r0, r1
    1cf0:	bne	1d0c <daq_inject+0x48>
    1cf4:	ldr	r1, [pc, #76]	; 1d48 <daq_inject+0x84>
    1cf8:	ldr	r3, [ip, #76]	; 0x4c
    1cfc:	add	r1, pc, r1
    1d00:	blx	r3
    1d04:	mvn	r0, #6
    1d08:	pop	{r4, pc}
    1d0c:	cmp	r2, #0
    1d10:	ldreq	r1, [pc, #52]	; 1d4c <daq_inject+0x88>
    1d14:	ldreq	r3, [ip, #76]	; 0x4c
    1d18:	addeq	r1, pc, r1
    1d1c:	beq	1d00 <daq_inject+0x3c>
    1d20:	str	r4, [sp, #8]
    1d24:	ldr	r4, [ip, #32]
    1d28:	mov	r1, lr
    1d2c:	mov	ip, r4
    1d30:	pop	{r4, lr}
    1d34:	bx	ip
    1d38:	mvn	r0, #4
    1d3c:	pop	{r4, pc}
    1d40:	mvn	r0, #5
    1d44:	pop	{r4, pc}
    1d48:	.word	0x00000a3a
    1d4c:	.word	0x00000a46

00001d50 <daq_breakloop>:
    1d50:	cmp	r0, #0
    1d54:	beq	1d6c <daq_breakloop+0x1c>
    1d58:	cmp	r1, #0
    1d5c:	beq	1d74 <daq_breakloop+0x24>
    1d60:	ldr	r3, [r0, #36]	; 0x24
    1d64:	mov	r0, r1
    1d68:	bx	r3
    1d6c:	mvn	r0, #4
    1d70:	bx	lr
    1d74:	mvn	r0, #5
    1d78:	bx	lr

00001d7c <daq_stop>:
    1d7c:	push	{r4, r5, r6, lr}
    1d80:	subs	r5, r0, #0
    1d84:	beq	1dd4 <daq_stop+0x58>
    1d88:	cmp	r1, #0
    1d8c:	beq	1ddc <daq_stop+0x60>
    1d90:	ldr	r3, [r5, #48]	; 0x30
    1d94:	mov	r0, r1
    1d98:	mov	r4, r1
    1d9c:	blx	r3
    1da0:	cmp	r0, #2
    1da4:	beq	1dc4 <daq_stop+0x48>
    1da8:	ldr	r1, [pc, #52]	; 1de4 <daq_stop+0x68>
    1dac:	mov	r0, r4
    1db0:	ldr	r3, [r5, #76]	; 0x4c
    1db4:	add	r1, pc, r1
    1db8:	blx	r3
    1dbc:	mvn	r0, #0
    1dc0:	pop	{r4, r5, r6, pc}
    1dc4:	ldr	r3, [r5, #40]	; 0x28
    1dc8:	mov	r0, r4
    1dcc:	pop	{r4, r5, r6, lr}
    1dd0:	bx	r3
    1dd4:	mvn	r0, #4
    1dd8:	pop	{r4, r5, r6, pc}
    1ddc:	mvn	r0, #5
    1de0:	pop	{r4, r5, r6, pc}
    1de4:	.word	0x000009c4

00001de8 <daq_shutdown>:
    1de8:	subs	r3, r0, #0
    1dec:	beq	1e10 <daq_shutdown+0x28>
    1df0:	cmp	r1, #0
    1df4:	beq	1e18 <daq_shutdown+0x30>
    1df8:	push	{r4, lr}
    1dfc:	mov	r0, r1
    1e00:	ldr	r3, [r3, #44]	; 0x2c
    1e04:	blx	r3
    1e08:	mov	r0, #0
    1e0c:	pop	{r4, pc}
    1e10:	mvn	r0, #4
    1e14:	bx	lr
    1e18:	mvn	r0, #5
    1e1c:	bx	lr

00001e20 <daq_check_status>:
    1e20:	cmp	r1, #0
    1e24:	cmpne	r0, #0
    1e28:	beq	1e38 <daq_check_status+0x18>
    1e2c:	ldr	r3, [r0, #48]	; 0x30
    1e30:	mov	r0, r1
    1e34:	bx	r3
    1e38:	mov	r0, #4
    1e3c:	bx	lr

00001e40 <daq_get_stats>:
    1e40:	cmp	r0, #0
    1e44:	beq	1e98 <daq_get_stats+0x58>
    1e48:	cmp	r1, #0
    1e4c:	mov	r3, r1
    1e50:	beq	1ea0 <daq_get_stats+0x60>
    1e54:	cmp	r2, #0
    1e58:	push	{r4, lr}
    1e5c:	bne	1e80 <daq_get_stats+0x40>
    1e60:	mov	r2, r0
    1e64:	mov	r0, r1
    1e68:	ldr	r1, [pc, #56]	; 1ea8 <daq_get_stats+0x68>
    1e6c:	ldr	r3, [r2, #76]	; 0x4c
    1e70:	add	r1, pc, r1
    1e74:	blx	r3
    1e78:	mvn	r0, #6
    1e7c:	pop	{r4, pc}
    1e80:	ldr	lr, [r0, #52]	; 0x34
    1e84:	mov	r1, r2
    1e88:	mov	r0, r3
    1e8c:	mov	r3, lr
    1e90:	pop	{r4, lr}
    1e94:	bx	r3
    1e98:	mvn	r0, #4
    1e9c:	bx	lr
    1ea0:	mvn	r0, #5
    1ea4:	bx	lr
    1ea8:	.word	0x00000934

00001eac <daq_reset_stats>:
    1eac:	cmp	r0, #0
    1eb0:	cmpne	r1, #0
    1eb4:	bxeq	lr
    1eb8:	ldr	r3, [r0, #56]	; 0x38
    1ebc:	mov	r0, r1
    1ec0:	bx	r3

00001ec4 <daq_get_snaplen>:
    1ec4:	cmp	r0, #0
    1ec8:	beq	1ee0 <daq_get_snaplen+0x1c>
    1ecc:	cmp	r1, #0
    1ed0:	beq	1ee8 <daq_get_snaplen+0x24>
    1ed4:	ldr	r3, [r0, #60]	; 0x3c
    1ed8:	mov	r0, r1
    1edc:	bx	r3
    1ee0:	mvn	r0, #4
    1ee4:	bx	lr
    1ee8:	mvn	r0, #5
    1eec:	bx	lr

00001ef0 <daq_get_capabilities>:
    1ef0:	cmp	r0, #0
    1ef4:	beq	1f0c <daq_get_capabilities+0x1c>
    1ef8:	cmp	r1, #0
    1efc:	beq	1f14 <daq_get_capabilities+0x24>
    1f00:	ldr	r3, [r0, #64]	; 0x40
    1f04:	mov	r0, r1
    1f08:	bx	r3
    1f0c:	mvn	r0, #4
    1f10:	bx	lr
    1f14:	mvn	r0, #5
    1f18:	bx	lr

00001f1c <daq_get_datalink_type>:
    1f1c:	cmp	r0, #0
    1f20:	beq	1f38 <daq_get_datalink_type+0x1c>
    1f24:	cmp	r1, #0
    1f28:	beq	1f40 <daq_get_datalink_type+0x24>
    1f2c:	ldr	r3, [r0, #68]	; 0x44
    1f30:	mov	r0, r1
    1f34:	bx	r3
    1f38:	mvn	r0, #4
    1f3c:	bx	lr
    1f40:	mvn	r0, #5
    1f44:	bx	lr

00001f48 <daq_get_error>:
    1f48:	cmp	r1, #0
    1f4c:	cmpne	r0, #0
    1f50:	beq	1f60 <daq_get_error+0x18>
    1f54:	ldr	r3, [r0, #72]	; 0x48
    1f58:	mov	r0, r1
    1f5c:	bx	r3
    1f60:	mov	r0, #0
    1f64:	bx	lr

00001f68 <daq_clear_error>:
    1f68:	cmp	r1, #0
    1f6c:	cmpne	r0, #0
    1f70:	mov	r3, r1
    1f74:	bxeq	lr
    1f78:	ldr	r1, [pc, #12]	; 1f8c <daq_clear_error+0x24>
    1f7c:	ldr	r2, [r0, #76]	; 0x4c
    1f80:	add	r1, pc, r1
    1f84:	mov	r0, r3
    1f88:	bx	r2
    1f8c:	.word	0x0000033b

00001f90 <daq_get_device_index>:
    1f90:	cmp	r0, #0
    1f94:	beq	1fe8 <daq_get_device_index+0x58>
    1f98:	cmp	r1, #0
    1f9c:	mov	r3, r1
    1fa0:	beq	1ff0 <daq_get_device_index+0x60>
    1fa4:	cmp	r2, #0
    1fa8:	push	{r4, lr}
    1fac:	bne	1fd0 <daq_get_device_index+0x40>
    1fb0:	mov	r2, r0
    1fb4:	mov	r0, r1
    1fb8:	ldr	r1, [pc, #56]	; 1ff8 <daq_get_device_index+0x68>
    1fbc:	ldr	r3, [r2, #76]	; 0x4c
    1fc0:	add	r1, pc, r1
    1fc4:	blx	r3
    1fc8:	mvn	r0, #6
    1fcc:	pop	{r4, pc}
    1fd0:	ldr	lr, [r0, #80]	; 0x50
    1fd4:	mov	r1, r2
    1fd8:	mov	r0, r3
    1fdc:	mov	r3, lr
    1fe0:	pop	{r4, lr}
    1fe4:	bx	r3
    1fe8:	mvn	r0, #4
    1fec:	bx	lr
    1ff0:	mvn	r0, #5
    1ff4:	bx	lr
    1ff8:	.word	0x00000804

00001ffc <daq_hup_prep>:
    1ffc:	cmp	r0, #0
    2000:	mov	ip, r1
    2004:	beq	2038 <daq_hup_prep+0x3c>
    2008:	cmp	r1, #0
    200c:	beq	2040 <daq_hup_prep+0x44>
    2010:	ldr	r3, [r0, #88]	; 0x58
    2014:	cmp	r3, #0
    2018:	bne	202c <daq_hup_prep+0x30>
    201c:	ldr	r0, [r0, #92]	; 0x5c
    2020:	clz	r0, r0
    2024:	lsr	r0, r0, #5
    2028:	bx	lr
    202c:	mov	r1, r2
    2030:	mov	r0, ip
    2034:	bx	r3
    2038:	mvn	r0, #4
    203c:	bx	lr
    2040:	mvn	r0, #5
    2044:	bx	lr

00002048 <daq_hup_apply>:
    2048:	cmp	r0, #0
    204c:	beq	2084 <daq_hup_apply+0x3c>
    2050:	cmp	r1, #0
    2054:	mov	ip, r1
    2058:	beq	208c <daq_hup_apply+0x44>
    205c:	push	{lr}		; (str lr, [sp, #-4]!)
    2060:	ldr	lr, [r0, #92]	; 0x5c
    2064:	cmp	lr, #0
    2068:	beq	2094 <daq_hup_apply+0x4c>
    206c:	mov	r1, r2
    2070:	mov	r0, ip
    2074:	mov	r2, r3
    2078:	mov	r3, lr
    207c:	pop	{lr}		; (ldr lr, [sp], #4)
    2080:	bx	r3
    2084:	mvn	r0, #4
    2088:	bx	lr
    208c:	mvn	r0, #5
    2090:	bx	lr
    2094:	mov	r0, lr
    2098:	pop	{pc}		; (ldr pc, [sp], #4)

0000209c <daq_hup_post>:
    209c:	cmp	r0, #0
    20a0:	mov	ip, r1
    20a4:	beq	20c8 <daq_hup_post+0x2c>
    20a8:	cmp	r1, #0
    20ac:	beq	20d0 <daq_hup_post+0x34>
    20b0:	ldr	r3, [r0, #96]	; 0x60
    20b4:	cmp	r3, #0
    20b8:	beq	20d8 <daq_hup_post+0x3c>
    20bc:	mov	r1, r2
    20c0:	mov	r0, ip
    20c4:	bx	r3
    20c8:	mvn	r0, #4
    20cc:	bx	lr
    20d0:	mvn	r0, #5
    20d4:	bx	lr
    20d8:	mov	r0, r3
    20dc:	bx	lr

000020e0 <daq_modify_flow>:
    20e0:	cmp	r0, #0
    20e4:	beq	2114 <daq_modify_flow+0x34>
    20e8:	push	{lr}		; (str lr, [sp, #-4]!)
    20ec:	ldr	lr, [r0, #84]	; 0x54
    20f0:	cmp	lr, #0
    20f4:	beq	211c <daq_modify_flow+0x3c>
    20f8:	mov	ip, r1
    20fc:	mov	r0, ip
    2100:	mov	r1, r2
    2104:	mov	r2, r3
    2108:	mov	r3, lr
    210c:	pop	{lr}		; (ldr lr, [sp], #4)
    2110:	bx	r3
    2114:	mvn	r0, #4
    2118:	bx	lr
    211c:	mov	r0, lr
    2120:	pop	{pc}		; (ldr pc, [sp], #4)

00002124 <daq_get_name>:
    2124:	cmp	r0, #0
    2128:	ldrne	r0, [r0, #8]
    212c:	bx	lr

00002130 <daq_get_type>:
    2130:	cmp	r0, #0
    2134:	ldrne	r0, [r0, #12]
    2138:	mvneq	r0, #4
    213c:	bx	lr

00002140 <daq_dp_add_dc>:
    2140:	push	{lr}		; (str lr, [sp, #-4]!)
    2144:	cmp	r0, #0
    2148:	mov	ip, r1
    214c:	mov	r1, r2
    2150:	mov	r2, r3
    2154:	ldr	r3, [sp, #4]
    2158:	beq	2180 <daq_dp_add_dc+0x40>
    215c:	cmp	ip, #0
    2160:	beq	2188 <daq_dp_add_dc+0x48>
    2164:	ldr	lr, [r0, #100]	; 0x64
    2168:	cmp	lr, #0
    216c:	beq	2190 <daq_dp_add_dc+0x50>
    2170:	mov	r0, ip
    2174:	mov	ip, lr
    2178:	pop	{lr}		; (ldr lr, [sp], #4)
    217c:	bx	ip
    2180:	mvn	r0, #4
    2184:	pop	{pc}		; (ldr pc, [sp], #4)
    2188:	mvn	r0, #5
    218c:	pop	{pc}		; (ldr pc, [sp], #4)
    2190:	mov	r0, lr
    2194:	pop	{pc}		; (ldr pc, [sp], #4)

00002198 <__stat>:
    2198:	mov	r2, r1
    219c:	mov	r1, r0
    21a0:	mov	r0, #3
    21a4:	b	d14 <__xstat@plt>

Disassembly of section .fini:

000021a8 <_fini>:
    21a8:	push	{r3, lr}
    21ac:	pop	{r3, pc}
