
../repos/takev-yyast-2f13a16/yyast/.libs/libyyast.so.1.0.0:     file format elf32-littlearm


Disassembly of section .init:

00000cc4 <_init>:
 cc4:	push	{r3, lr}
 cc8:	bl	ee8 <call_weak_fn>
 ccc:	pop	{r3, pc}

Disassembly of section .plt:

00000cd0 <.plt>:
 cd0:	push	{lr}		; (str lr, [sp, #-4]!)
 cd4:	ldr	lr, [pc, #4]	; ce0 <.plt+0x10>
 cd8:	add	lr, pc, lr
 cdc:	ldr	pc, [lr, #8]!
 ce0:	.word	0x00012320

00000ce4 <calloc@plt>:
 ce4:	add	ip, pc, #0, 12
 ce8:	add	ip, ip, #73728	; 0x12000
 cec:	ldr	pc, [ip, #800]!	; 0x320

00000cf0 <ya_reposition@plt>:
 cf0:	add	ip, pc, #0, 12
 cf4:	add	ip, ip, #73728	; 0x12000
 cf8:	ldr	pc, [ip, #792]!	; 0x318

00000cfc <ya_node_save@plt>:
 cfc:	add	ip, pc, #0, 12
 d00:	add	ip, ip, #73728	; 0x12000
 d04:	ldr	pc, [ip, #784]!	; 0x310

00000d08 <vasprintf@plt>:
 d08:	add	ip, pc, #0, 12
 d0c:	add	ip, ip, #73728	; 0x12000
 d10:	ldr	pc, [ip, #776]!	; 0x308

00000d14 <strcmp@plt>:
 d14:	add	ip, pc, #0, 12
 d18:	add	ip, ip, #73728	; 0x12000
 d1c:	ldr	pc, [ip, #768]!	; 0x300

00000d20 <__cxa_finalize@plt>:
 d20:	add	ip, pc, #0, 12
 d24:	add	ip, ip, #73728	; 0x12000
 d28:	ldr	pc, [ip, #760]!	; 0x2f8

00000d2c <strtol@plt>:
 d2c:	add	ip, pc, #0, 12
 d30:	add	ip, ip, #73728	; 0x12000
 d34:	ldr	pc, [ip, #752]!	; 0x2f0

00000d38 <fopen@plt>:
 d38:	add	ip, pc, #0, 12
 d3c:	add	ip, ip, #73728	; 0x12000
 d40:	ldr	pc, [ip, #744]!	; 0x2e8

00000d44 <free@plt>:
 d44:	add	ip, pc, #0, 12
 d48:	add	ip, ip, #73728	; 0x12000
 d4c:	ldr	pc, [ip, #736]!	; 0x2e0

00000d50 <strndup@plt>:
 d50:	add	ip, pc, #0, 12
 d54:	add	ip, ip, #73728	; 0x12000
 d58:	ldr	pc, [ip, #728]!	; 0x2d8

00000d5c <memcpy@plt>:
 d5c:	add	ip, pc, #0, 12
 d60:	add	ip, ip, #73728	; 0x12000
 d64:	ldr	pc, [ip, #720]!	; 0x2d0

00000d68 <ya_null@plt>:
 d68:	add	ip, pc, #0, 12
 d6c:	add	ip, ip, #73728	; 0x12000
 d70:	ldr	pc, [ip, #712]!	; 0x2c8

00000d74 <yyparse@plt>:
 d74:	add	ip, pc, #0, 12
 d78:	add	ip, ip, #73728	; 0x12000
 d7c:	ldr	pc, [ip, #704]!	; 0x2c0

00000d80 <strtold@plt>:
 d80:	add	ip, pc, #0, 12
 d84:	add	ip, ip, #73728	; 0x12000
 d88:	ldr	pc, [ip, #696]!	; 0x2b8

00000d8c <strdup@plt>:
 d8c:	add	ip, pc, #0, 12
 d90:	add	ip, ip, #73728	; 0x12000
 d94:	ldr	pc, [ip, #688]!	; 0x2b0

00000d98 <perror@plt>:
 d98:	add	ip, pc, #0, 12
 d9c:	add	ip, ip, #73728	; 0x12000
 da0:	ldr	pc, [ip, #680]!	; 0x2a8

00000da4 <ya_get_filenames@plt>:
 da4:	add	ip, pc, #0, 12
 da8:	add	ip, ip, #73728	; 0x12000
 dac:	ldr	pc, [ip, #672]!	; 0x2a0

00000db0 <fwrite@plt>:
 db0:	add	ip, pc, #0, 12
 db4:	add	ip, ip, #73728	; 0x12000
 db8:	ldr	pc, [ip, #664]!	; 0x298

00000dbc <ya_branch@plt>:
 dbc:	add	ip, pc, #0, 12
 dc0:	add	ip, ip, #73728	; 0x12000
 dc4:	ldr	pc, [ip, #656]!	; 0x290

00000dc8 <__gmon_start__@plt>:
 dc8:	add	ip, pc, #0, 12
 dcc:	add	ip, ip, #73728	; 0x12000
 dd0:	ldr	pc, [ip, #648]!	; 0x288

00000dd4 <getopt_long@plt>:
 dd4:	add	ip, pc, #0, 12
 dd8:	add	ip, ip, #73728	; 0x12000
 ddc:	ldr	pc, [ip, #640]!	; 0x280

00000de0 <exit@plt>:
 de0:	add	ip, pc, #0, 12
 de4:	add	ip, ip, #73728	; 0x12000
 de8:	ldr	pc, [ip, #632]!	; 0x278

00000dec <strlen@plt>:
 dec:	add	ip, pc, #0, 12
 df0:	add	ip, ip, #73728	; 0x12000
 df4:	ldr	pc, [ip, #624]!	; 0x270

00000df8 <fprintf@plt>:
 df8:	add	ip, pc, #0, 12
 dfc:	add	ip, ip, #73728	; 0x12000
 e00:	ldr	pc, [ip, #616]!	; 0x268

00000e04 <__errno_location@plt>:
 e04:	add	ip, pc, #0, 12
 e08:	add	ip, ip, #73728	; 0x12000
 e0c:	ldr	pc, [ip, #608]!	; 0x260

00000e10 <ya_integer@plt>:
 e10:	add	ip, pc, #0, 12
 e14:	add	ip, ip, #73728	; 0x12000
 e18:	ldr	pc, [ip, #600]!	; 0x258

00000e1c <memset@plt>:
 e1c:	add	ip, pc, #0, 12
 e20:	add	ip, ip, #73728	; 0x12000
 e24:	ldr	pc, [ip, #592]!	; 0x250

00000e28 <ya_list@plt>:
 e28:	add	ip, pc, #0, 12
 e2c:	add	ip, ip, #73728	; 0x12000
 e30:	ldr	pc, [ip, #584]!	; 0x248

00000e34 <asprintf@plt>:
 e34:	add	ip, pc, #0, 12
 e38:	add	ip, ip, #73728	; 0x12000
 e3c:	ldr	pc, [ip, #576]!	; 0x240

00000e40 <ya_get_file_nr@plt>:
 e40:	add	ip, pc, #0, 12
 e44:	add	ip, ip, #73728	; 0x12000
 e48:	ldr	pc, [ip, #568]!	; 0x238

00000e4c <fclose@plt>:
 e4c:	add	ip, pc, #0, 12
 e50:	add	ip, ip, #73728	; 0x12000
 e54:	ldr	pc, [ip, #560]!	; 0x230

00000e58 <strrchr@plt>:
 e58:	add	ip, pc, #0, 12
 e5c:	add	ip, ip, #73728	; 0x12000
 e60:	ldr	pc, [ip, #552]!	; 0x228

00000e64 <ya_error@plt>:
 e64:	add	ip, pc, #0, 12
 e68:	add	ip, ip, #73728	; 0x12000
 e6c:	ldr	pc, [ip, #544]!	; 0x220

00000e70 <ya_literal@plt>:
 e70:	add	ip, pc, #0, 12
 e74:	add	ip, ip, #73728	; 0x12000
 e78:	ldr	pc, [ip, #536]!	; 0x218

00000e7c <fputc@plt>:
 e7c:	add	ip, pc, #0, 12
 e80:	add	ip, ip, #73728	; 0x12000
 e84:	ldr	pc, [ip, #528]!	; 0x210

00000e88 <ya_generic_nodev@plt>:
 e88:	add	ip, pc, #0, 12
 e8c:	add	ip, ip, #73728	; 0x12000
 e90:	ldr	pc, [ip, #520]!	; 0x208

00000e94 <ya_new_extension@plt>:
 e94:	add	ip, pc, #0, 12
 e98:	add	ip, ip, #73728	; 0x12000
 e9c:	ldr	pc, [ip, #512]!	; 0x200

00000ea0 <ya_clear_position@plt>:
 ea0:	add	ip, pc, #0, 12
 ea4:	add	ip, ip, #73728	; 0x12000
 ea8:	ldr	pc, [ip, #504]!	; 0x1f8

00000eac <ya_usage@plt>:
 eac:	add	ip, pc, #0, 12
 eb0:	add	ip, ip, #73728	; 0x12000
 eb4:	ldr	pc, [ip, #496]!	; 0x1f0

00000eb8 <ya_text@plt>:
 eb8:	add	ip, pc, #0, 12
 ebc:	add	ip, ip, #73728	; 0x12000
 ec0:	ldr	pc, [ip, #488]!	; 0x1e8

00000ec4 <fputs@plt>:
 ec4:	add	ip, pc, #0, 12
 ec8:	add	ip, ip, #73728	; 0x12000
 ecc:	ldr	pc, [ip, #480]!	; 0x1e0

00000ed0 <abort@plt>:
 ed0:	add	ip, pc, #0, 12
 ed4:	add	ip, ip, #73728	; 0x12000
 ed8:	ldr	pc, [ip, #472]!	; 0x1d8

00000edc <ya_parse_options@plt>:
 edc:	add	ip, pc, #0, 12
 ee0:	add	ip, ip, #73728	; 0x12000
 ee4:	ldr	pc, [ip, #464]!	; 0x1d0

Disassembly of section .text:

00000ee8 <call_weak_fn>:
     ee8:	ldr	r3, [pc, #20]	; f04 <call_weak_fn+0x1c>
     eec:	ldr	r2, [pc, #20]	; f08 <call_weak_fn+0x20>
     ef0:	add	r3, pc, r3
     ef4:	ldr	r2, [r3, r2]
     ef8:	cmp	r2, #0
     efc:	bxeq	lr
     f00:	b	dc8 <__gmon_start__@plt>
     f04:	.word	0x00012108
     f08:	.word	0x000000d4

00000f0c <deregister_tm_clones>:
     f0c:	ldr	r3, [pc, #52]	; f48 <deregister_tm_clones+0x3c>
     f10:	ldr	r0, [pc, #52]	; f4c <deregister_tm_clones+0x40>
     f14:	add	r3, pc, r3
     f18:	add	r0, pc, r0
     f1c:	add	r3, r3, #3
     f20:	sub	r3, r3, r0
     f24:	cmp	r3, #6
     f28:	ldr	r3, [pc, #32]	; f50 <deregister_tm_clones+0x44>
     f2c:	add	r3, pc, r3
     f30:	bxls	lr
     f34:	ldr	r2, [pc, #24]	; f54 <deregister_tm_clones+0x48>
     f38:	ldr	r3, [r3, r2]
     f3c:	cmp	r3, #0
     f40:	bxeq	lr
     f44:	bx	r3
     f48:	.word	0x00012254
     f4c:	.word	0x00012250
     f50:	.word	0x000120cc
     f54:	.word	0x000000bc

00000f58 <register_tm_clones>:
     f58:	ldr	r1, [pc, #56]	; f98 <register_tm_clones+0x40>
     f5c:	ldr	r0, [pc, #56]	; f9c <register_tm_clones+0x44>
     f60:	add	r1, pc, r1
     f64:	add	r0, pc, r0
     f68:	sub	r1, r1, r0
     f6c:	ldr	r3, [pc, #44]	; fa0 <register_tm_clones+0x48>
     f70:	asr	r1, r1, #2
     f74:	add	r3, pc, r3
     f78:	add	r1, r1, r1, lsr #31
     f7c:	asrs	r1, r1, #1
     f80:	bxeq	lr
     f84:	ldr	r2, [pc, #24]	; fa4 <register_tm_clones+0x4c>
     f88:	ldr	r3, [r3, r2]
     f8c:	cmp	r3, #0
     f90:	bxeq	lr
     f94:	bx	r3
     f98:	.word	0x00012208
     f9c:	.word	0x00012204
     fa0:	.word	0x00012084
     fa4:	.word	0x000000fc

00000fa8 <__do_global_dtors_aux>:
     fa8:	ldr	r3, [pc, #76]	; ffc <__do_global_dtors_aux+0x54>
     fac:	ldr	r2, [pc, #76]	; 1000 <__do_global_dtors_aux+0x58>
     fb0:	add	r3, pc, r3
     fb4:	add	r2, pc, r2
     fb8:	ldrb	r3, [r3]
     fbc:	cmp	r3, #0
     fc0:	bxne	lr
     fc4:	ldr	r3, [pc, #56]	; 1004 <__do_global_dtors_aux+0x5c>
     fc8:	push	{r4, lr}
     fcc:	ldr	r3, [r2, r3]
     fd0:	cmp	r3, #0
     fd4:	beq	fe4 <__do_global_dtors_aux+0x3c>
     fd8:	ldr	r3, [pc, #40]	; 1008 <__do_global_dtors_aux+0x60>
     fdc:	ldr	r0, [pc, r3]
     fe0:	bl	d20 <__cxa_finalize@plt>
     fe4:	bl	f0c <deregister_tm_clones>
     fe8:	ldr	r3, [pc, #28]	; 100c <__do_global_dtors_aux+0x64>
     fec:	mov	r2, #1
     ff0:	add	r3, pc, r3
     ff4:	strb	r2, [r3]
     ff8:	pop	{r4, pc}
     ffc:	.word	0x000121b8
    1000:	.word	0x00012044
    1004:	.word	0x000000b8
    1008:	.word	0x00012124
    100c:	.word	0x00012178

00001010 <frame_dummy>:
    1010:	ldr	r0, [pc, #56]	; 1050 <frame_dummy+0x40>
    1014:	ldr	r3, [pc, #56]	; 1054 <frame_dummy+0x44>
    1018:	add	r0, pc, r0
    101c:	ldr	r2, [r0]
    1020:	add	r3, pc, r3
    1024:	cmp	r2, #0
    1028:	bne	1030 <frame_dummy+0x20>
    102c:	b	f58 <register_tm_clones>
    1030:	ldr	r2, [pc, #32]	; 1058 <frame_dummy+0x48>
    1034:	ldr	r3, [r3, r2]
    1038:	cmp	r3, #0
    103c:	beq	102c <frame_dummy+0x1c>
    1040:	push	{r4, lr}
    1044:	blx	r3
    1048:	pop	{r4, lr}
    104c:	b	f58 <register_tm_clones>
    1050:	.word	0x00011ef4
    1054:	.word	0x00011fd8
    1058:	.word	0x000000f0

0000105c <ya_string_escape>:
    105c:	push	{r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1060:	add	r3, r0, r1
    1064:	ldr	fp, [pc, #816]	; 139c <ya_string_escape+0x340>
    1068:	mov	r5, #0
    106c:	ldr	sl, [pc, #812]	; 13a0 <ya_string_escape+0x344>
    1070:	str	r3, [sp]
    1074:	mov	r6, r0
    1078:	mov	r9, r2
    107c:	mov	r8, r0
    1080:	mov	r3, r5
    1084:	mov	r7, r5
    1088:	mov	r4, r5
    108c:	add	fp, pc, fp
    1090:	ldr	r2, [sp]
    1094:	cmp	r8, r2
    1098:	bne	10b8 <ya_string_escape+0x5c>
    109c:	cmp	r7, #0
    10a0:	movne	r3, #92	; 0x5c
    10a4:	strbne	r3, [r6, r4]
    10a8:	addne	r4, r4, #1
    10ac:	mov	r0, r4
    10b0:	add	sp, sp, #12
    10b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    10b8:	cmp	r3, #0
    10bc:	ldrb	r2, [r8], #1
    10c0:	beq	127c <ya_string_escape+0x220>
    10c4:	sub	r1, r2, #48	; 0x30
    10c8:	uxtb	r0, r1
    10cc:	cmp	r0, #9
    10d0:	orrls	r5, r1, r5, lsl #4
    10d4:	bls	10fc <ya_string_escape+0xa0>
    10d8:	sub	r1, r2, #97	; 0x61
    10dc:	cmp	r1, #5
    10e0:	subls	r2, r2, #87	; 0x57
    10e4:	bls	10f8 <ya_string_escape+0x9c>
    10e8:	sub	r1, r2, #65	; 0x41
    10ec:	cmp	r1, #5
    10f0:	bhi	1158 <ya_string_escape+0xfc>
    10f4:	sub	r2, r2, #55	; 0x37
    10f8:	orr	r5, r2, r5, lsl #4
    10fc:	subs	r1, r3, #1
    1100:	bne	1150 <ya_string_escape+0xf4>
    1104:	cmp	r5, #127	; 0x7f
    1108:	addle	r3, r4, #1
    110c:	strble	r5, [r6, r4]
    1110:	ble	1148 <ya_string_escape+0xec>
    1114:	ldr	r3, [pc, #648]	; 13a4 <ya_string_escape+0x348>
    1118:	add	r0, r6, r4
    111c:	cmp	r5, r3
    1120:	and	r2, r5, #63	; 0x3f
    1124:	asr	r3, r5, #6
    1128:	bgt	116c <ya_string_escape+0x110>
    112c:	mvn	r3, r3, lsl #26
    1130:	mvn	r2, r2, lsl #25
    1134:	mvn	r3, r3, lsr #26
    1138:	strb	r3, [r6, r4]
    113c:	add	r3, r4, #2
    1140:	mvn	r2, r2, lsr #25
    1144:	strb	r2, [r0, #1]
    1148:	add	r4, r3, #1
    114c:	strb	r5, [r6, r3]
    1150:	mov	r3, r7
    1154:	b	136c <ya_string_escape+0x310>
    1158:	mov	r0, fp
    115c:	str	r3, [sp, #4]
    1160:	bl	e64 <ya_error@plt>
    1164:	ldr	r3, [sp, #4]
    1168:	b	10fc <ya_string_escape+0xa0>
    116c:	cmp	r5, sl
    1170:	bgt	11a0 <ya_string_escape+0x144>
    1174:	mvn	ip, #31
    1178:	orr	ip, ip, r5, asr #12
    117c:	strb	ip, [r6, r4]
    1180:	and	r3, r3, #63	; 0x3f
    1184:	mvn	ip, #127	; 0x7f
    1188:	orr	r3, r3, ip
    118c:	orr	r2, r2, ip
    1190:	strb	r3, [r0, #1]
    1194:	strb	r2, [r0, #2]
    1198:	add	r3, r4, #3
    119c:	b	1148 <ya_string_escape+0xec>
    11a0:	cmp	r5, #2097152	; 0x200000
    11a4:	bge	11e0 <ya_string_escape+0x184>
    11a8:	mvn	ip, #15
    11ac:	orr	ip, ip, r5, asr #18
    11b0:	lsl	lr, r5, #14
    11b4:	strb	ip, [r6, r4]
    11b8:	and	r3, r3, #63	; 0x3f
    11bc:	mvn	ip, #127	; 0x7f
    11c0:	orr	r3, r3, ip
    11c4:	orr	lr, ip, lr, lsr #26
    11c8:	orr	r2, r2, ip
    11cc:	strb	r3, [r0, #2]
    11d0:	strb	lr, [r0, #1]
    11d4:	add	r3, r4, #4
    11d8:	strb	r2, [r0, #3]
    11dc:	b	1148 <ya_string_escape+0xec>
    11e0:	cmn	r5, #-67108863	; 0xfc000001
    11e4:	bgt	122c <ya_string_escape+0x1d0>
    11e8:	mvn	ip, #7
    11ec:	orr	ip, ip, r5, asr #24
    11f0:	lsl	lr, r5, #8
    11f4:	strb	ip, [r6, r4]
    11f8:	mvn	ip, #127	; 0x7f
    11fc:	orr	lr, ip, lr, lsr #26
    1200:	strb	lr, [r0, #1]
    1204:	lsl	lr, r5, #14
    1208:	and	r3, r3, #63	; 0x3f
    120c:	orr	r3, r3, ip
    1210:	orr	lr, ip, lr, lsr #26
    1214:	orr	r2, r2, ip
    1218:	strb	r3, [r0, #3]
    121c:	strb	lr, [r0, #2]
    1220:	add	r3, r4, #5
    1224:	strb	r2, [r0, #4]
    1228:	b	1148 <ya_string_escape+0xec>
    122c:	mvn	ip, #3
    1230:	orr	ip, ip, r5, asr #30
    1234:	lsl	lr, r5, #2
    1238:	strb	ip, [r6, r4]
    123c:	mvn	ip, #127	; 0x7f
    1240:	orr	lr, ip, lr, lsr #26
    1244:	strb	lr, [r0, #1]
    1248:	lsl	lr, r5, #8
    124c:	and	r3, r3, #63	; 0x3f
    1250:	orr	lr, ip, lr, lsr #26
    1254:	strb	lr, [r0, #2]
    1258:	lsl	lr, r5, #14
    125c:	orr	r3, r3, ip
    1260:	orr	lr, ip, lr, lsr #26
    1264:	orr	r2, r2, ip
    1268:	strb	r3, [r0, #4]
    126c:	strb	lr, [r0, #3]
    1270:	add	r3, r4, #6
    1274:	strb	r2, [r0, #5]
    1278:	b	1148 <ya_string_escape+0xec>
    127c:	cmp	r7, #0
    1280:	beq	1388 <ya_string_escape+0x32c>
    1284:	cmp	r9, #1
    1288:	beq	12c4 <ya_string_escape+0x268>
    128c:	cmp	r9, #2
    1290:	bne	12cc <ya_string_escape+0x270>
    1294:	cmp	r2, #47	; 0x2f
    1298:	add	r0, r4, #1
    129c:	strbeq	r2, [r6, r4]
    12a0:	moveq	r1, r3
    12a4:	moveq	r4, r0
    12a8:	beq	136c <ya_string_escape+0x310>
    12ac:	mov	r1, #92	; 0x5c
    12b0:	strb	r1, [r6, r4]
    12b4:	add	r4, r4, #2
    12b8:	strb	r2, [r6, r0]
    12bc:	mov	r1, r3
    12c0:	b	136c <ya_string_escape+0x310>
    12c4:	cmp	r2, #34	; 0x22
    12c8:	b	1298 <ya_string_escape+0x23c>
    12cc:	cmp	r2, #110	; 0x6e
    12d0:	beq	1378 <ya_string_escape+0x31c>
    12d4:	bhi	1330 <ya_string_escape+0x2d4>
    12d8:	cmp	r2, #47	; 0x2f
    12dc:	beq	1320 <ya_string_escape+0x2c4>
    12e0:	bhi	1308 <ya_string_escape+0x2ac>
    12e4:	cmp	r2, #34	; 0x22
    12e8:	moveq	r2, #34	; 0x22
    12ec:	beq	1320 <ya_string_escape+0x2c4>
    12f0:	add	r1, r4, #1
    12f4:	mov	r0, #92	; 0x5c
    12f8:	strb	r0, [r6, r4]
    12fc:	strb	r2, [r6, r1]
    1300:	add	r4, r4, #2
    1304:	b	12bc <ya_string_escape+0x260>
    1308:	cmp	r2, #85	; 0x55
    130c:	moveq	r5, r3
    1310:	moveq	r1, #8
    1314:	beq	136c <ya_string_escape+0x310>
    1318:	cmp	r2, #92	; 0x5c
    131c:	bne	12f0 <ya_string_escape+0x294>
    1320:	strb	r2, [r6, r4]
    1324:	mov	r1, r3
    1328:	add	r4, r4, #1
    132c:	b	136c <ya_string_escape+0x310>
    1330:	cmp	r2, #116	; 0x74
    1334:	beq	1380 <ya_string_escape+0x324>
    1338:	bhi	134c <ya_string_escape+0x2f0>
    133c:	cmp	r2, #114	; 0x72
    1340:	moveq	r2, #13
    1344:	beq	1320 <ya_string_escape+0x2c4>
    1348:	b	12f0 <ya_string_escape+0x294>
    134c:	cmp	r2, #117	; 0x75
    1350:	moveq	r5, r3
    1354:	moveq	r1, #4
    1358:	beq	136c <ya_string_escape+0x310>
    135c:	cmp	r2, #120	; 0x78
    1360:	moveq	r5, r3
    1364:	moveq	r1, #2
    1368:	bne	12f0 <ya_string_escape+0x294>
    136c:	mov	r7, r3
    1370:	mov	r3, r1
    1374:	b	1090 <ya_string_escape+0x34>
    1378:	mov	r2, #10
    137c:	b	1320 <ya_string_escape+0x2c4>
    1380:	mov	r2, #9
    1384:	b	1320 <ya_string_escape+0x2c4>
    1388:	cmp	r2, #92	; 0x5c
    138c:	moveq	r1, r3
    1390:	moveq	r3, #1
    1394:	bne	1320 <ya_string_escape+0x2c4>
    1398:	b	136c <ya_string_escape+0x310>
    139c:	.word	0x000015b0
    13a0:	.word	0x0000ffff
    13a4:	.word	0x000007ff

000013a8 <ya_new_extension>:
    13a8:	push	{r0, r1, r2, r4, r5, lr}
    13ac:	mov	r5, r1
    13b0:	bl	d8c <strdup@plt>
    13b4:	mov	r1, #46	; 0x2e
    13b8:	mov	r4, r0
    13bc:	bl	e58 <strrchr@plt>
    13c0:	ldr	r1, [pc, #72]	; 1410 <ya_new_extension+0x68>
    13c4:	mov	r2, r4
    13c8:	add	r1, pc, r1
    13cc:	cmp	r0, #0
    13d0:	movne	r3, #0
    13d4:	strbne	r3, [r0]
    13d8:	mov	r3, r5
    13dc:	add	r0, sp, #4
    13e0:	bl	e34 <asprintf@plt>
    13e4:	cmn	r0, #1
    13e8:	bne	13fc <ya_new_extension+0x54>
    13ec:	ldr	r0, [pc, #32]	; 1414 <ya_new_extension+0x6c>
    13f0:	add	r0, pc, r0
    13f4:	bl	d98 <perror@plt>
    13f8:	bl	ed0 <abort@plt>
    13fc:	mov	r0, r4
    1400:	bl	d44 <free@plt>
    1404:	ldr	r0, [sp, #4]
    1408:	add	sp, sp, #12
    140c:	pop	{r4, r5, pc}
    1410:	.word	0x0000129b
    1414:	.word	0x00001279

00001418 <ya_error>:
    1418:	push	{r0, r1, r2, r3}
    141c:	push	{r0, r1, r2, r3, r4, lr}
    1420:	add	r2, sp, #28
    1424:	ldr	r1, [sp, #24]
    1428:	add	r0, sp, #8
    142c:	str	r2, [sp, #12]
    1430:	bl	d08 <vasprintf@plt>
    1434:	ldr	r4, [pc, #76]	; 1488 <ya_error+0x70>
    1438:	add	r4, pc, r4
    143c:	cmp	r0, #0
    1440:	blt	1480 <ya_error+0x68>
    1444:	ldr	r3, [pc, #64]	; 148c <ya_error+0x74>
    1448:	ldr	r1, [pc, #64]	; 1490 <ya_error+0x78>
    144c:	ldr	r2, [r4, r3]
    1450:	ldr	r0, [r4, r1]
    1454:	ldr	r1, [sp, #8]
    1458:	ldm	r2, {r2, r3}
    145c:	str	r1, [sp]
    1460:	ldr	r1, [pc, #44]	; 1494 <ya_error+0x7c>
    1464:	add	r3, r3, #1
    1468:	add	r2, r2, #1
    146c:	add	r1, pc, r1
    1470:	ldr	r0, [r0]
    1474:	bl	df8 <fprintf@plt>
    1478:	ldr	r0, [sp, #8]
    147c:	bl	d44 <free@plt>
    1480:	mov	r0, #1
    1484:	bl	de0 <exit@plt>
    1488:	.word	0x00011bc0
    148c:	.word	0x000000f4
    1490:	.word	0x000000d0
    1494:	.word	0x00001229

00001498 <ya_count>:
    1498:	ldr	r3, [pc, #200]	; 1568 <ya_count+0xd0>
    149c:	push	{r4, r5, lr}
    14a0:	mov	r4, r2
    14a4:	ldr	r2, [pc, #192]	; 156c <ya_count+0xd4>
    14a8:	add	r3, pc, r3
    14ac:	mov	r5, r1
    14b0:	ldr	ip, [r3, r2]
    14b4:	ldr	r2, [pc, #180]	; 1570 <ya_count+0xd8>
    14b8:	mov	lr, r0
    14bc:	ldr	r3, [r3, r2]
    14c0:	ldm	r3, {r0, r1, r2}
    14c4:	stm	ip, {r0, r1, r2}
    14c8:	mov	r1, r5
    14cc:	add	r2, r5, r4
    14d0:	mov	r5, #0
    14d4:	cmp	r2, r1
    14d8:	bne	150c <ya_count+0x74>
    14dc:	ldm	ip, {r0, r1, r2}
    14e0:	add	r3, lr, #8
    14e4:	stm	r3, {r0, r1, r2}
    14e8:	mov	r2, #0
    14ec:	mov	r3, #0
    14f0:	mov	r0, lr
    14f4:	strd	r2, [lr]
    14f8:	mvn	r3, #0
    14fc:	strb	r3, [lr, #20]
    1500:	mov	r3, #0
    1504:	str	r3, [lr, #24]
    1508:	pop	{r4, r5, pc}
    150c:	ldrb	r0, [r1], #1
    1510:	cmp	r0, #10
    1514:	beq	1554 <ya_count+0xbc>
    1518:	cmp	r0, #13
    151c:	beq	1560 <ya_count+0xc8>
    1520:	cmp	r0, #9
    1524:	ldreq	r4, [r3, #4]
    1528:	biceq	r4, r4, #7
    152c:	addeq	r4, r4, #8
    1530:	streq	r4, [r3, #4]
    1534:	sub	r4, r0, #32
    1538:	and	r0, r0, #192	; 0xc0
    153c:	cmp	r0, #128	; 0x80
    1540:	cmpne	r4, #94	; 0x5e
    1544:	ldrls	r0, [r3, #4]
    1548:	addls	r0, r0, #1
    154c:	strls	r0, [r3, #4]
    1550:	b	14d4 <ya_count+0x3c>
    1554:	ldr	r0, [r3]
    1558:	add	r0, r0, #1
    155c:	str	r0, [r3]
    1560:	str	r5, [r3, #4]
    1564:	b	14d4 <ya_count+0x3c>
    1568:	.word	0x00011b50
    156c:	.word	0x000000ec
    1570:	.word	0x000000f4

00001574 <ya_get_file_nr>:
    1574:	ldr	r3, [pc, #116]	; 15f0 <ya_get_file_nr+0x7c>
    1578:	ldr	r2, [pc, #116]	; 15f4 <ya_get_file_nr+0x80>
    157c:	add	r3, pc, r3
    1580:	push	{r4, r5, r6, r7, r8, lr}
    1584:	mov	r6, r0
    1588:	ldr	r5, [r3, r2]
    158c:	ldr	r2, [pc, #100]	; 15f8 <ya_get_file_nr+0x84>
    1590:	mov	r4, #0
    1594:	ldr	r8, [r5]
    1598:	ldr	r7, [r3, r2]
    159c:	cmp	r8, r4
    15a0:	ble	15c0 <ya_get_file_nr+0x4c>
    15a4:	mov	r1, r6
    15a8:	ldr	r0, [r7, r4, lsl #2]
    15ac:	bl	d14 <strcmp@plt>
    15b0:	cmp	r0, #0
    15b4:	bne	15dc <ya_get_file_nr+0x68>
    15b8:	mov	r0, r4
    15bc:	pop	{r4, r5, r6, r7, r8, pc}
    15c0:	mov	r0, r6
    15c4:	bl	d8c <strdup@plt>
    15c8:	ldr	r3, [r5]
    15cc:	add	r3, r3, #1
    15d0:	str	r3, [r5]
    15d4:	str	r0, [r7, r4, lsl #2]
    15d8:	b	15b8 <ya_get_file_nr+0x44>
    15dc:	add	r4, r4, #1
    15e0:	cmp	r4, #65536	; 0x10000
    15e4:	bne	159c <ya_get_file_nr+0x28>
    15e8:	mvn	r0, #0
    15ec:	pop	{r4, r5, r6, r7, r8, pc}
    15f0:	.word	0x00011a7c
    15f4:	.word	0x000000cc
    15f8:	.word	0x000000e4

000015fc <ya_reposition>:
    15fc:	push	{r0, r1, r2, r4, r5, r6, r7, lr}
    1600:	mov	r2, #10
    1604:	mov	r7, r1
    1608:	add	r1, sp, #4
    160c:	mov	r5, r0
    1610:	bl	d2c <strtol@plt>
    1614:	ldr	r6, [pc, #132]	; 16a0 <ya_reposition+0xa4>
    1618:	ldr	r2, [pc, #132]	; 16a4 <ya_reposition+0xa8>
    161c:	add	r6, pc, r6
    1620:	ldr	ip, [r6, r2]
    1624:	ldr	r2, [pc, #124]	; 16a8 <ya_reposition+0xac>
    1628:	ldr	r4, [r6, r2]
    162c:	mov	r3, r0
    1630:	ldm	r4, {r0, r1, r2}
    1634:	stm	ip, {r0, r1, r2}
    1638:	ldr	r0, [sp, #4]
    163c:	cmp	r5, r0
    1640:	bne	1660 <ya_reposition+0x64>
    1644:	ldr	r3, [pc, #96]	; 16ac <ya_reposition+0xb0>
    1648:	ldr	r0, [pc, #96]	; 16b0 <ya_reposition+0xb4>
    164c:	ldr	r3, [r6, r3]
    1650:	add	r0, pc, r0
    1654:	ldr	r1, [r3]
    1658:	bl	ec4 <fputs@plt>
    165c:	bl	ed0 <abort@plt>
    1660:	sub	r3, r3, #1
    1664:	mov	r2, #0
    1668:	str	r2, [r4, #4]
    166c:	str	r3, [r4]
    1670:	ldrb	r3, [r0]
    1674:	cmp	r3, #32
    1678:	bne	1698 <ya_reposition+0x9c>
    167c:	sub	r5, r0, r5
    1680:	sub	r1, r7, #3
    1684:	sub	r1, r1, r5
    1688:	add	r0, r0, #2
    168c:	bl	d50 <strndup@plt>
    1690:	bl	e40 <ya_get_file_nr@plt>
    1694:	str	r0, [r4, #8]
    1698:	add	sp, sp, #12
    169c:	pop	{r4, r5, r6, r7, pc}
    16a0:	.word	0x000119dc
    16a4:	.word	0x000000ec
    16a8:	.word	0x000000f4
    16ac:	.word	0x000000d0
    16b0:	.word	0x00001055

000016b4 <ya_clear_position>:
    16b4:	ldr	r2, [r0, #24]
    16b8:	mvn	r3, #0
    16bc:	str	r3, [r0, #12]
    16c0:	str	r3, [r0, #8]
    16c4:	str	r3, [r0, #16]
    16c8:	str	r3, [r2, #20]
    16cc:	str	r3, [r2, #16]
    16d0:	str	r3, [r2, #24]
    16d4:	bx	lr

000016d8 <ya_get_filenames>:
    16d8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    16dc:	sub	sp, sp, #148	; 0x94
    16e0:	ldr	r1, [pc, #308]	; 181c <ya_get_filenames+0x144>
    16e4:	add	r6, sp, #80	; 0x50
    16e8:	mov	r9, r0
    16ec:	ldr	r8, [pc, #300]	; 1820 <ya_get_filenames+0x148>
    16f0:	mov	r2, #0
    16f4:	add	r1, pc, r1
    16f8:	mov	r0, r6
    16fc:	bl	e28 <ya_list@plt>
    1700:	ldr	r3, [pc, #284]	; 1824 <ya_get_filenames+0x14c>
    1704:	add	r8, pc, r8
    1708:	ldr	sl, [pc, #280]	; 1828 <ya_get_filenames+0x150>
    170c:	ldr	fp, [pc, #280]	; 182c <ya_get_filenames+0x154>
    1710:	ldr	r3, [r8, r3]
    1714:	mov	r7, #0
    1718:	add	sl, pc, sl
    171c:	add	fp, pc, fp
    1720:	str	r3, [sp, #8]
    1724:	ldr	r3, [sp, #8]
    1728:	add	r4, sp, #16
    172c:	ldr	r3, [r3]
    1730:	cmp	r7, r3
    1734:	blt	1794 <ya_get_filenames+0xbc>
    1738:	ldr	r1, [pc, #240]	; 1830 <ya_get_filenames+0x158>
    173c:	mov	r2, r6
    1740:	mov	r3, #0
    1744:	add	r1, pc, r1
    1748:	mov	r0, r4
    174c:	bl	dbc <ya_branch@plt>
    1750:	ldm	r4!, {r0, r1, r2, r3}
    1754:	add	r5, sp, #112	; 0x70
    1758:	stmia	r5!, {r0, r1, r2, r3}
    175c:	ldm	r4, {r0, r1, r2, r3}
    1760:	add	r4, sp, #112	; 0x70
    1764:	stm	r5, {r0, r1, r2, r3}
    1768:	mov	r0, r4
    176c:	bl	ea0 <ya_clear_position@plt>
    1770:	mov	lr, r4
    1774:	mov	ip, r9
    1778:	ldm	lr!, {r0, r1, r2, r3}
    177c:	stmia	ip!, {r0, r1, r2, r3}
    1780:	ldm	r5, {r0, r1, r2, r3}
    1784:	stm	ip, {r0, r1, r2, r3}
    1788:	mov	r0, r9
    178c:	add	sp, sp, #148	; 0x94
    1790:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1794:	ldr	r3, [pc, #152]	; 1834 <ya_get_filenames+0x15c>
    1798:	ldr	r3, [r8, r3]
    179c:	ldr	r5, [r3, r7, lsl #2]
    17a0:	add	r7, r7, #1
    17a4:	mov	r0, r5
    17a8:	bl	dec <strlen@plt>
    17ac:	mov	r2, r5
    17b0:	mov	r5, r4
    17b4:	mov	r1, sl
    17b8:	mov	r3, r0
    17bc:	mov	r0, r4
    17c0:	bl	eb8 <ya_text@plt>
    17c4:	ldm	r5!, {r0, r1, r2, r3}
    17c8:	add	ip, sp, #48	; 0x30
    17cc:	stmia	ip!, {r0, r1, r2, r3}
    17d0:	ldm	r5, {r0, r1, r2, r3}
    17d4:	stm	ip, {r0, r1, r2, r3}
    17d8:	add	r3, sp, #48	; 0x30
    17dc:	mov	r0, r3
    17e0:	str	r3, [sp, #12]
    17e4:	bl	ea0 <ya_clear_position@plt>
    17e8:	mov	r2, #0
    17ec:	str	r2, [sp]
    17f0:	ldr	r3, [sp, #12]
    17f4:	mov	r2, r6
    17f8:	mov	r1, fp
    17fc:	mov	r0, r4
    1800:	bl	e28 <ya_list@plt>
    1804:	ldm	r4!, {r0, r1, r2, r3}
    1808:	mov	ip, r6
    180c:	stmia	ip!, {r0, r1, r2, r3}
    1810:	ldm	r5, {r0, r1, r2, r3}
    1814:	stm	ip, {r0, r1, r2, r3}
    1818:	b	1724 <ya_get_filenames+0x4c>
    181c:	.word	0x00000fd7
    1820:	.word	0x000118f4
    1824:	.word	0x000000cc
    1828:	.word	0x00000fb9
    182c:	.word	0x00000faf
    1830:	.word	0x00000f93
    1834:	.word	0x000000e4

00001838 <ya_literal>:
    1838:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    183c:	sub	sp, sp, #28
    1840:	mov	fp, r1
    1844:	str	r3, [sp, #20]
    1848:	ldr	r3, [sp, #64]	; 0x40
    184c:	mov	r8, r2
    1850:	add	r3, r3, #7
    1854:	bic	r3, r3, #7
    1858:	mov	r2, #32
    185c:	mov	r1, #0
    1860:	mov	r5, r0
    1864:	str	r3, [sp, #16]
    1868:	bl	e1c <memset@plt>
    186c:	ldr	r3, [sp, #16]
    1870:	ldr	r4, [pc, #328]	; 19c0 <ya_literal+0x188>
    1874:	add	r7, r3, #32
    1878:	mov	r2, r7
    187c:	mov	r3, #0
    1880:	add	r4, pc, r4
    1884:	strd	r2, [sp, #8]
    1888:	ldr	r3, [pc, #308]	; 19c4 <ya_literal+0x18c>
    188c:	cmp	r8, #0
    1890:	mvneq	r6, #0
    1894:	ldr	r2, [r4, r3]
    1898:	add	r3, r5, #8
    189c:	moveq	r9, r6
    18a0:	ldm	r2, {r0, r1, r2}
    18a4:	moveq	sl, r6
    18a8:	stm	r3, {r0, r1, r2}
    18ac:	movne	sl, r0
    18b0:	movne	r9, r1
    18b4:	mov	r0, #1
    18b8:	mov	r1, r7
    18bc:	movne	r6, r2
    18c0:	bl	ce4 <calloc@plt>
    18c4:	mov	r4, r0
    18c8:	mov	r0, fp
    18cc:	bl	dec <strlen@plt>
    18d0:	mov	ip, #0
    18d4:	mov	r2, #0
    18d8:	mov	r3, #0
    18dc:	mov	lr, r0
    18e0:	lsl	r1, r3, #8
    18e4:	orr	r1, r1, r2, lsr #24
    18e8:	lsl	r3, r2, #8
    18ec:	str	r1, [sp, #4]
    18f0:	str	r3, [sp]
    18f4:	ldrd	r2, [sp]
    18f8:	cmp	lr, ip
    18fc:	orr	r2, r2, #32
    1900:	bls	1920 <ya_literal+0xe8>
    1904:	ldrb	r2, [fp, ip]
    1908:	ldrd	r0, [sp]
    190c:	mov	r3, #0
    1910:	orr	r0, r0, r2
    1914:	orr	r1, r1, r3
    1918:	mov	r2, r0
    191c:	mov	r3, r1
    1920:	add	ip, ip, #1
    1924:	cmp	ip, #8
    1928:	bne	18e0 <ya_literal+0xa8>
    192c:	rev	r3, r3
    1930:	str	r3, [r4]
    1934:	rev	r3, r6
    1938:	str	r3, [r4, #24]
    193c:	rev	r3, sl
    1940:	mov	fp, #0
    1944:	str	r3, [r4, #16]
    1948:	rev	r2, r2
    194c:	rev	r3, r9
    1950:	rev	r7, r7
    1954:	str	r2, [r4, #4]
    1958:	str	r3, [r4, #20]
    195c:	ldr	r2, [sp, #64]	; 0x40
    1960:	ldr	r1, [sp, #20]
    1964:	str	fp, [r4, #8]
    1968:	str	r7, [r4, #12]
    196c:	strb	r8, [r4, #31]
    1970:	add	r0, r4, #32
    1974:	bl	d5c <memcpy@plt>
    1978:	ldr	r3, [sp, #64]	; 0x40
    197c:	ldr	r2, [sp, #64]	; 0x40
    1980:	add	r0, r3, #32
    1984:	ldr	r3, [sp, #16]
    1988:	mov	r1, fp
    198c:	sub	r2, r3, r2
    1990:	add	r0, r4, r0
    1994:	bl	e1c <memset@plt>
    1998:	ldrd	r2, [sp, #8]
    199c:	mov	r0, r5
    19a0:	str	sl, [r5, #8]
    19a4:	strd	r2, [r5]
    19a8:	str	r9, [r5, #12]
    19ac:	str	r6, [r5, #16]
    19b0:	strb	r8, [r5, #20]
    19b4:	str	r4, [r5, #24]
    19b8:	add	sp, sp, #28
    19bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    19c0:	.word	0x00011778
    19c4:	.word	0x000000ec

000019c8 <ya_binary_float>:
    19c8:	push	{r4, r5, r6, lr}
    19cc:	sub	sp, sp, #24
    19d0:	mov	r5, r0
    19d4:	mov	r6, r1
    19d8:	mov	r0, r2
    19dc:	add	r1, sp, #12
    19e0:	mov	r4, r2
    19e4:	bl	d80 <strtold@plt>
    19e8:	ldr	r3, [sp, #12]
    19ec:	cmp	r4, r3
    19f0:	vstr	d0, [sp, #16]
    19f4:	bne	1a08 <ya_binary_float+0x40>
    19f8:	ldr	r0, [pc, #208]	; 1ad0 <ya_binary_float+0x108>
    19fc:	mov	r1, r4
    1a00:	add	r0, pc, r0
    1a04:	bl	e64 <ya_error@plt>
    1a08:	vldr	d7, [sp, #16]
    1a0c:	vldr	d6, [pc, #172]	; 1ac0 <ya_binary_float+0xf8>
    1a10:	vcmpe.f64	d7, d6
    1a14:	vmrs	APSR_nzcv, fpscr
    1a18:	bgt	1a2c <ya_binary_float+0x64>
    1a1c:	vldr	d6, [pc, #164]	; 1ac8 <ya_binary_float+0x100>
    1a20:	vcmpe.f64	d7, d6
    1a24:	vmrs	APSR_nzcv, fpscr
    1a28:	bpl	1a4c <ya_binary_float+0x84>
    1a2c:	bl	e04 <__errno_location@plt>
    1a30:	ldr	r3, [r0]
    1a34:	cmp	r3, #34	; 0x22
    1a38:	bne	1a4c <ya_binary_float+0x84>
    1a3c:	ldr	r0, [pc, #144]	; 1ad4 <ya_binary_float+0x10c>
    1a40:	mov	r1, r4
    1a44:	add	r0, pc, r0
    1a48:	bl	e64 <ya_error@plt>
    1a4c:	vldr	d7, [sp, #16]
    1a50:	vcmp.f64	d7, #0.0
    1a54:	vmrs	APSR_nzcv, fpscr
    1a58:	bne	1a7c <ya_binary_float+0xb4>
    1a5c:	bl	e04 <__errno_location@plt>
    1a60:	ldr	r3, [r0]
    1a64:	cmp	r3, #34	; 0x22
    1a68:	bne	1a7c <ya_binary_float+0xb4>
    1a6c:	ldr	r0, [pc, #100]	; 1ad8 <ya_binary_float+0x110>
    1a70:	mov	r1, r4
    1a74:	add	r0, pc, r0
    1a78:	bl	e64 <ya_error@plt>
    1a7c:	ldr	r3, [sp, #16]
    1a80:	ldr	r2, [sp, #20]
    1a84:	rev	r3, r3
    1a88:	str	r3, [sp, #20]
    1a8c:	rev	r2, r2
    1a90:	mov	r3, #8
    1a94:	str	r2, [sp, #16]
    1a98:	str	r3, [sp]
    1a9c:	mov	r0, r5
    1aa0:	add	r3, sp, #16
    1aa4:	mov	r2, #6
    1aa8:	mov	r1, r6
    1aac:	bl	e70 <ya_literal@plt>
    1ab0:	mov	r0, r5
    1ab4:	add	sp, sp, #24
    1ab8:	pop	{r4, r5, r6, pc}
    1abc:	nop			; (mov r0, r0)
    1ac0:	.word	0xffffffff
    1ac4:	.word	0x7fefffff
    1ac8:	.word	0xffffffff
    1acc:	.word	0xffefffff
    1ad0:	.word	0x00000cde
    1ad4:	.word	0x00000cbc
    1ad8:	.word	0x00000cb8

00001adc <ya_integer>:
    1adc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1ae0:	sub	sp, sp, #44	; 0x2c
    1ae4:	mov	r7, r3
    1ae8:	ldr	r6, [sp, #84]	; 0x54
    1aec:	ldr	r8, [sp, #80]	; 0x50
    1af0:	str	r2, [sp, #12]
    1af4:	add	r8, r3, r8
    1af8:	mov	r2, r6
    1afc:	asr	r3, r6, #31
    1b00:	mov	fp, r1
    1b04:	strd	r2, [sp, #16]
    1b08:	ldr	r3, [pc, #396]	; 1c9c <ya_integer+0x1c0>
    1b0c:	ldr	sl, [pc, #396]	; 1ca0 <ya_integer+0x1c4>
    1b10:	mov	r9, r0
    1b14:	mov	r4, #0
    1b18:	mov	r5, #0
    1b1c:	sub	r1, r6, #37	; 0x25
    1b20:	add	r3, pc, r3
    1b24:	add	sl, pc, sl
    1b28:	str	r3, [sp, #24]
    1b2c:	cmp	r8, r7
    1b30:	bne	1b6c <ya_integer+0x90>
    1b34:	rev	r3, r4
    1b38:	rev	r1, r5
    1b3c:	str	r3, [sp, #36]	; 0x24
    1b40:	mov	r3, #8
    1b44:	str	r1, [sp, #32]
    1b48:	str	r3, [sp]
    1b4c:	mov	r0, r9
    1b50:	add	r3, sp, #32
    1b54:	ldr	r2, [sp, #12]
    1b58:	mov	r1, fp
    1b5c:	bl	e70 <ya_literal@plt>
    1b60:	mov	r0, r9
    1b64:	add	sp, sp, #44	; 0x2c
    1b68:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1b6c:	cmp	r6, #32
    1b70:	ldrb	ip, [r7], #1
    1b74:	bne	1be4 <ya_integer+0x108>
    1b78:	sub	r0, ip, #97	; 0x61
    1b7c:	uxtb	lr, r0
    1b80:	cmp	lr, #25
    1b84:	bls	1ba8 <ya_integer+0xcc>
    1b88:	sub	r0, ip, #65	; 0x41
    1b8c:	uxtb	lr, r0
    1b90:	cmp	lr, #25
    1b94:	bls	1ba8 <ya_integer+0xcc>
    1b98:	sub	r0, ip, #50	; 0x32
    1b9c:	cmp	r0, #5
    1ba0:	subls	r0, ip, #24
    1ba4:	bhi	1b2c <ya_integer+0x50>
    1ba8:	mul	ip, r6, r5
    1bac:	ldr	r3, [sp, #20]
    1bb0:	mla	ip, r4, r3, ip
    1bb4:	umull	r2, r3, r6, r4
    1bb8:	adds	r4, r2, r0
    1bbc:	add	r3, ip, r3
    1bc0:	adc	r5, r3, r0, asr #31
    1bc4:	cmp	r3, r5
    1bc8:	cmpeq	r2, r4
    1bcc:	bls	1b2c <ya_integer+0x50>
    1bd0:	ldr	r0, [sp, #24]
    1bd4:	str	r1, [sp, #28]
    1bd8:	bl	e64 <ya_error@plt>
    1bdc:	ldr	r1, [sp, #28]
    1be0:	b	1b2c <ya_integer+0x50>
    1be4:	cmp	r1, #27
    1be8:	bhi	1c34 <ya_integer+0x158>
    1bec:	sub	r0, ip, #65	; 0x41
    1bf0:	uxtb	lr, r0
    1bf4:	cmp	lr, #25
    1bf8:	bls	1ba8 <ya_integer+0xcc>
    1bfc:	sub	r0, ip, #97	; 0x61
    1c00:	cmp	r0, #25
    1c04:	subls	r0, ip, #71	; 0x47
    1c08:	bls	1c6c <ya_integer+0x190>
    1c0c:	sub	r0, ip, #48	; 0x30
    1c10:	cmp	r0, #9
    1c14:	addls	r0, ip, #4
    1c18:	bls	1c6c <ya_integer+0x190>
    1c1c:	cmp	ip, #43	; 0x2b
    1c20:	beq	1c94 <ya_integer+0x1b8>
    1c24:	cmp	ip, #47	; 0x2f
    1c28:	bne	1b2c <ya_integer+0x50>
    1c2c:	mov	r0, #63	; 0x3f
    1c30:	b	1c6c <ya_integer+0x190>
    1c34:	cmp	r6, #36	; 0x24
    1c38:	bhi	1c78 <ya_integer+0x19c>
    1c3c:	sub	r0, ip, #48	; 0x30
    1c40:	uxtb	lr, r0
    1c44:	cmp	lr, #9
    1c48:	bls	1c6c <ya_integer+0x190>
    1c4c:	sub	r0, ip, #65	; 0x41
    1c50:	cmp	r0, #25
    1c54:	subls	r0, ip, #55	; 0x37
    1c58:	bls	1c6c <ya_integer+0x190>
    1c5c:	sub	r0, ip, #97	; 0x61
    1c60:	cmp	r0, #25
    1c64:	subls	r0, ip, #87	; 0x57
    1c68:	bhi	1b2c <ya_integer+0x50>
    1c6c:	cmp	r0, r6
    1c70:	bge	1b2c <ya_integer+0x50>
    1c74:	b	1ba8 <ya_integer+0xcc>
    1c78:	ldr	r3, [pc, #36]	; 1ca4 <ya_integer+0x1c8>
    1c7c:	ldr	r0, [pc, #36]	; 1ca8 <ya_integer+0x1cc>
    1c80:	ldr	r3, [sl, r3]
    1c84:	add	r0, pc, r0
    1c88:	ldr	r1, [r3]
    1c8c:	bl	ec4 <fputs@plt>
    1c90:	bl	ed0 <abort@plt>
    1c94:	mov	r0, #62	; 0x3e
    1c98:	b	1c6c <ya_integer+0x190>
    1c9c:	.word	0x00000c69
    1ca0:	.word	0x000114d4
    1ca4:	.word	0x000000d0
    1ca8:	.word	0x00000ad5

00001cac <ya_text>:
    1cac:	push	{r0, r1, r4, lr}
    1cb0:	mov	r4, r0
    1cb4:	str	r3, [sp]
    1cb8:	mov	r3, r2
    1cbc:	mov	r2, #3
    1cc0:	bl	e70 <ya_literal@plt>
    1cc4:	mov	r0, r4
    1cc8:	add	sp, sp, #8
    1ccc:	pop	{r4, pc}

00001cd0 <ya_leaf>:
    1cd0:	mov	r3, #0
    1cd4:	push	{r0, r1, r4, lr}
    1cd8:	mov	r2, #1
    1cdc:	str	r3, [sp]
    1ce0:	mov	r4, r0
    1ce4:	bl	e70 <ya_literal@plt>
    1ce8:	mov	r0, r4
    1cec:	add	sp, sp, #8
    1cf0:	pop	{r4, pc}

00001cf4 <ya_null>:
    1cf4:	push	{r0, r1, r4, lr}
    1cf8:	mov	r3, #0
    1cfc:	ldr	r1, [pc, #28]	; 1d20 <ya_null+0x2c>
    1d00:	str	r3, [sp]
    1d04:	mov	r2, r3
    1d08:	add	r1, pc, r1
    1d0c:	mov	r4, r0
    1d10:	bl	e70 <ya_literal@plt>
    1d14:	mov	r0, r4
    1d18:	add	sp, sp, #8
    1d1c:	pop	{r4, pc}
    1d20:	.word	0x00000a9d

00001d24 <ya_positive_integer>:
    1d24:	push	{r0, r1, r4, lr}
    1d28:	mov	r4, r0
    1d2c:	ldr	ip, [sp, #16]
    1d30:	stm	sp, {r3, ip}
    1d34:	mov	r3, r2
    1d38:	mov	r2, #4
    1d3c:	bl	e10 <ya_integer@plt>
    1d40:	mov	r0, r4
    1d44:	add	sp, sp, #8
    1d48:	pop	{r4, pc}

00001d4c <ya_negative_integer>:
    1d4c:	push	{r0, r1, r4, lr}
    1d50:	mov	r4, r0
    1d54:	ldr	ip, [sp, #16]
    1d58:	stm	sp, {r3, ip}
    1d5c:	mov	r3, r2
    1d60:	mov	r2, #5
    1d64:	bl	e10 <ya_integer@plt>
    1d68:	mov	r0, r4
    1d6c:	add	sp, sp, #8
    1d70:	pop	{r4, pc}

00001d74 <ya_generic_nodev>:
    1d74:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    1d78:	mov	ip, r3
    1d7c:	ldr	r7, [pc, #712]	; 204c <ya_generic_nodev+0x2d8>
    1d80:	ldr	r3, [pc, #712]	; 2050 <ya_generic_nodev+0x2dc>
    1d84:	sub	sp, sp, #36	; 0x24
    1d88:	add	r7, pc, r7
    1d8c:	str	r2, [sp, #20]
    1d90:	ldr	lr, [r7, r3]
    1d94:	mov	r5, r0
    1d98:	mov	r6, lr
    1d9c:	mov	r4, r0
    1da0:	mov	r9, r1
    1da4:	ldm	r6!, {r0, r1, r2, r3}
    1da8:	ldr	sl, [ip]
    1dac:	str	ip, [sp, #28]
    1db0:	stmia	r5!, {r0, r1, r2, r3}
    1db4:	ldm	r6, {r0, r1, r2, r3}
    1db8:	ldr	r6, [lr, #8]
    1dbc:	stm	r5, {r0, r1, r2, r3}
    1dc0:	mov	r8, r0
    1dc4:	ldrd	r2, [lr]
    1dc8:	ldr	r5, [lr, #12]
    1dcc:	strd	r2, [sp]
    1dd0:	cmp	sl, #0
    1dd4:	bne	1f00 <ya_generic_nodev+0x18c>
    1dd8:	ldr	r1, [sp]
    1ddc:	mov	r0, #1
    1de0:	bl	ce4 <calloc@plt>
    1de4:	mov	fp, r0
    1de8:	mov	r0, r9
    1dec:	bl	dec <strlen@plt>
    1df0:	mov	r2, #0
    1df4:	mov	r3, #0
    1df8:	mov	ip, r0
    1dfc:	lsl	r1, r3, #8
    1e00:	orr	r1, r1, r2, lsr #24
    1e04:	lsl	r3, r2, #8
    1e08:	str	r1, [sp, #12]
    1e0c:	str	r3, [sp, #8]
    1e10:	ldrd	r2, [sp, #8]
    1e14:	cmp	ip, sl
    1e18:	orr	r2, r2, #32
    1e1c:	bls	1e3c <ya_generic_nodev+0xc8>
    1e20:	ldrb	r2, [r9, sl]
    1e24:	ldrd	r0, [sp, #8]
    1e28:	mov	r3, #0
    1e2c:	orr	r0, r0, r2
    1e30:	orr	r1, r1, r3
    1e34:	mov	r2, r0
    1e38:	mov	r3, r1
    1e3c:	add	sl, sl, #1
    1e40:	cmp	sl, #8
    1e44:	bne	1dfc <ya_generic_nodev+0x88>
    1e48:	rev	r3, r3
    1e4c:	str	r3, [fp]
    1e50:	ldrb	r3, [sp, #20]
    1e54:	rev	r2, r2
    1e58:	str	r2, [fp, #4]
    1e5c:	strb	r3, [fp, #31]
    1e60:	ldr	r3, [sp]
    1e64:	ldr	r2, [sp, #4]
    1e68:	rev	r3, r3
    1e6c:	str	r3, [fp, #12]
    1e70:	rev	r3, r8
    1e74:	str	r3, [fp, #24]
    1e78:	rev	r3, r6
    1e7c:	str	r3, [fp, #16]
    1e80:	rev	r3, r5
    1e84:	str	r3, [fp, #20]
    1e88:	ldr	r3, [sp, #28]
    1e8c:	rev	r2, r2
    1e90:	str	r2, [fp, #8]
    1e94:	add	r2, r3, #4
    1e98:	str	r2, [sp, #28]
    1e9c:	ldr	r9, [r3]
    1ea0:	mov	sl, #0
    1ea4:	cmp	r9, #0
    1ea8:	bne	1fb8 <ya_generic_nodev+0x244>
    1eac:	cmn	r8, #1
    1eb0:	bne	1ed4 <ya_generic_nodev+0x160>
    1eb4:	ldr	r3, [pc, #408]	; 2054 <ya_generic_nodev+0x2e0>
    1eb8:	ldr	r2, [r7, r3]
    1ebc:	add	r3, r4, #8
    1ec0:	ldm	r2, {r0, r1, r2}
    1ec4:	mov	r6, r0
    1ec8:	mov	r5, r1
    1ecc:	mov	r8, r2
    1ed0:	stm	r3, {r0, r1, r2}
    1ed4:	mov	r0, r4
    1ed8:	ldrd	r2, [sp]
    1edc:	str	r6, [r4, #8]
    1ee0:	str	r5, [r4, #12]
    1ee4:	strd	r2, [r4]
    1ee8:	ldrb	r3, [sp, #20]
    1eec:	str	r8, [r4, #16]
    1ef0:	str	fp, [r4, #24]
    1ef4:	strb	r3, [r4, #20]
    1ef8:	add	sp, sp, #36	; 0x24
    1efc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1f00:	cmn	r8, #1
    1f04:	ldr	r3, [sl, #16]
    1f08:	bne	1f20 <ya_generic_nodev+0x1ac>
    1f0c:	cmn	r3, #1
    1f10:	movne	r8, r3
    1f14:	ldrne	r6, [sl, #8]
    1f18:	ldrne	r5, [sl, #12]
    1f1c:	bne	1f4c <ya_generic_nodev+0x1d8>
    1f20:	cmp	r3, r8
    1f24:	bne	1f4c <ya_generic_nodev+0x1d8>
    1f28:	ldr	r3, [sl, #8]
    1f2c:	cmp	r3, r6
    1f30:	movcc	r6, r3
    1f34:	ldrcc	r5, [sl, #12]
    1f38:	bcc	1f4c <ya_generic_nodev+0x1d8>
    1f3c:	bne	1f4c <ya_generic_nodev+0x1d8>
    1f40:	ldr	r3, [sl, #12]
    1f44:	cmp	r5, r3
    1f48:	movcs	r5, r3
    1f4c:	ldrb	r3, [sl, #20]
    1f50:	cmp	r3, #254	; 0xfe
    1f54:	beq	1f7c <ya_generic_nodev+0x208>
    1f58:	cmp	r3, #255	; 0xff
    1f5c:	bne	1fa0 <ya_generic_nodev+0x22c>
    1f60:	ldr	r3, [pc, #240]	; 2058 <ya_generic_nodev+0x2e4>
    1f64:	ldr	r0, [pc, #240]	; 205c <ya_generic_nodev+0x2e8>
    1f68:	ldr	r3, [r7, r3]
    1f6c:	add	r0, pc, r0
    1f70:	ldr	r1, [r3]
    1f74:	bl	ec4 <fputs@plt>
    1f78:	bl	ed0 <abort@plt>
    1f7c:	ldrd	r0, [sp]
    1f80:	ldrd	r2, [sl]
    1f84:	subs	r0, r0, #32
    1f88:	sbc	r1, r1, #0
    1f8c:	adds	sl, r0, r2
    1f90:	adc	fp, r1, r3
    1f94:	strd	sl, [sp]
    1f98:	ldr	sl, [ip, #4]!
    1f9c:	b	1dd0 <ya_generic_nodev+0x5c>
    1fa0:	ldrd	r0, [sp]
    1fa4:	ldrd	r2, [sl]
    1fa8:	adds	r0, r0, r2
    1fac:	adc	r1, r1, r3
    1fb0:	strd	r0, [sp]
    1fb4:	b	1f98 <ya_generic_nodev+0x224>
    1fb8:	ldrb	r3, [r9, #20]
    1fbc:	add	r0, sl, #32
    1fc0:	cmp	r3, #254	; 0xfe
    1fc4:	beq	1fe8 <ya_generic_nodev+0x274>
    1fc8:	cmp	r3, #255	; 0xff
    1fcc:	bne	2038 <ya_generic_nodev+0x2c4>
    1fd0:	ldr	r3, [pc, #128]	; 2058 <ya_generic_nodev+0x2e4>
    1fd4:	ldr	r0, [pc, #132]	; 2060 <ya_generic_nodev+0x2ec>
    1fd8:	ldr	r3, [r7, r3]
    1fdc:	add	r0, pc, r0
    1fe0:	ldr	r1, [r3]
    1fe4:	b	1f74 <ya_generic_nodev+0x200>
    1fe8:	ldr	r3, [r9]
    1fec:	ldr	r1, [r9, #24]
    1ff0:	sub	r3, r3, #32
    1ff4:	mov	r2, r3
    1ff8:	add	r1, r1, #32
    1ffc:	str	r3, [sp, #8]
    2000:	add	r0, fp, r0
    2004:	bl	d5c <memcpy@plt>
    2008:	ldr	r3, [sp, #8]
    200c:	add	sl, sl, r3
    2010:	ldrb	r3, [r9, #20]
    2014:	cmp	r3, #0
    2018:	beq	2024 <ya_generic_nodev+0x2b0>
    201c:	ldr	r0, [r9, #24]
    2020:	bl	d44 <free@plt>
    2024:	ldr	r3, [sp, #28]
    2028:	add	r2, r3, #4
    202c:	str	r2, [sp, #28]
    2030:	ldr	r9, [r3]
    2034:	b	1ea4 <ya_generic_nodev+0x130>
    2038:	ldr	r3, [r9]
    203c:	ldr	r1, [r9, #24]
    2040:	mov	r2, r3
    2044:	str	r3, [sp, #8]
    2048:	b	2000 <ya_generic_nodev+0x28c>
    204c:	.word	0x00011270
    2050:	.word	0x000000f8
    2054:	.word	0x000000ec
    2058:	.word	0x000000d0
    205c:	.word	0x0000083f
    2060:	.word	0x000007cf

00002064 <ya_generic_node>:
    2064:	push	{r2, r3}
    2068:	push	{r0, r1, r4, lr}
    206c:	add	r3, sp, #20
    2070:	ldrb	r2, [sp, #16]
    2074:	mov	r4, r0
    2078:	str	r3, [sp, #4]
    207c:	bl	e88 <ya_generic_nodev@plt>
    2080:	mov	r0, r4
    2084:	add	sp, sp, #8
    2088:	pop	{r4, lr}
    208c:	add	sp, sp, #8
    2090:	bx	lr

00002094 <ya_branch>:
    2094:	push	{r1, r2, r3}
    2098:	push	{r0, r1, r2, r4, lr}
    209c:	mov	r2, #2
    20a0:	add	r3, sp, #24
    20a4:	ldr	r1, [sp, #20]
    20a8:	mov	r4, r0
    20ac:	str	r3, [sp, #4]
    20b0:	bl	e88 <ya_generic_nodev@plt>
    20b4:	mov	r0, r4
    20b8:	add	sp, sp, #12
    20bc:	pop	{r4, lr}
    20c0:	add	sp, sp, #12
    20c4:	bx	lr

000020c8 <ya_list>:
    20c8:	push	{r1, r2, r3}
    20cc:	push	{r0, r1, r2, r4, lr}
    20d0:	mov	r2, #254	; 0xfe
    20d4:	add	r3, sp, #24
    20d8:	ldr	r1, [sp, #20]
    20dc:	mov	r4, r0
    20e0:	str	r3, [sp, #4]
    20e4:	bl	e88 <ya_generic_nodev@plt>
    20e8:	mov	r0, r4
    20ec:	add	sp, sp, #12
    20f0:	pop	{r4, lr}
    20f4:	add	sp, sp, #12
    20f8:	bx	lr

000020fc <ya_node_save>:
    20fc:	mov	ip, r1
    2100:	mov	r3, r0
    2104:	mov	r2, #1
    2108:	ldr	r1, [r1]
    210c:	ldr	r0, [ip, #24]
    2110:	b	db0 <fwrite@plt>

00002114 <ya_header>:
    2114:	push	{r4, r5, r6, lr}
    2118:	sub	sp, sp, #104	; 0x68
    211c:	add	r4, sp, #72	; 0x48
    2120:	mov	r5, r0
    2124:	mov	r0, r4
    2128:	mov	r6, r1
    212c:	bl	da4 <ya_get_filenames@plt>
    2130:	ldr	r1, [pc, #100]	; 219c <ya_header+0x88>
    2134:	mov	r2, r4
    2138:	mov	r3, #0
    213c:	add	r4, sp, #8
    2140:	str	r3, [sp]
    2144:	mov	r0, r4
    2148:	mov	r3, r6
    214c:	add	r1, pc, r1
    2150:	bl	dbc <ya_branch@plt>
    2154:	mov	ip, r4
    2158:	add	lr, sp, #40	; 0x28
    215c:	ldm	ip!, {r0, r1, r2, r3}
    2160:	add	r4, sp, #40	; 0x28
    2164:	stmia	lr!, {r0, r1, r2, r3}
    2168:	ldm	ip, {r0, r1, r2, r3}
    216c:	stm	lr, {r0, r1, r2, r3}
    2170:	mov	r0, r4
    2174:	bl	ea0 <ya_clear_position@plt>
    2178:	mov	ip, r4
    217c:	mov	lr, r5
    2180:	ldm	ip!, {r0, r1, r2, r3}
    2184:	stmia	lr!, {r0, r1, r2, r3}
    2188:	ldm	ip, {r0, r1, r2, r3}
    218c:	stm	lr, {r0, r1, r2, r3}
    2190:	mov	r0, r5
    2194:	add	sp, sp, #104	; 0x68
    2198:	pop	{r4, r5, r6, pc}
    219c:	.word	0x000006a8

000021a0 <ya_usage>:
    21a0:	ldr	r3, [pc, #172]	; 2254 <ya_usage+0xb4>
    21a4:	ldr	r2, [pc, #172]	; 2258 <ya_usage+0xb8>
    21a8:	add	r3, pc, r3
    21ac:	push	{r4, r5, r6, lr}
    21b0:	mov	r5, r0
    21b4:	ldr	r4, [r3, r2]
    21b8:	ldr	r0, [pc, #156]	; 225c <ya_usage+0xbc>
    21bc:	mov	r6, r1
    21c0:	add	r0, pc, r0
    21c4:	ldr	r1, [r4]
    21c8:	bl	ec4 <fputs@plt>
    21cc:	ldr	r1, [pc, #140]	; 2260 <ya_usage+0xc0>
    21d0:	mov	r2, r5
    21d4:	add	r1, pc, r1
    21d8:	ldr	r0, [r4]
    21dc:	bl	df8 <fprintf@plt>
    21e0:	ldr	r1, [pc, #124]	; 2264 <ya_usage+0xc4>
    21e4:	mov	r2, r5
    21e8:	add	r1, pc, r1
    21ec:	ldr	r0, [r4]
    21f0:	bl	df8 <fprintf@plt>
    21f4:	ldr	r1, [r4]
    21f8:	mov	r0, #10
    21fc:	bl	e7c <fputc@plt>
    2200:	ldr	r0, [pc, #96]	; 2268 <ya_usage+0xc8>
    2204:	ldr	r1, [r4]
    2208:	add	r0, pc, r0
    220c:	bl	ec4 <fputs@plt>
    2210:	ldr	r0, [pc, #84]	; 226c <ya_usage+0xcc>
    2214:	ldr	r1, [r4]
    2218:	add	r0, pc, r0
    221c:	bl	ec4 <fputs@plt>
    2220:	ldr	r0, [pc, #72]	; 2270 <ya_usage+0xd0>
    2224:	ldr	r1, [r4]
    2228:	add	r0, pc, r0
    222c:	bl	ec4 <fputs@plt>
    2230:	ldr	r0, [pc, #60]	; 2274 <ya_usage+0xd4>
    2234:	ldr	r1, [r4]
    2238:	add	r0, pc, r0
    223c:	bl	ec4 <fputs@plt>
    2240:	ldr	r1, [r4]
    2244:	mov	r0, #10
    2248:	bl	e7c <fputc@plt>
    224c:	mov	r0, r6
    2250:	bl	de0 <exit@plt>
    2254:	.word	0x00010e50
    2258:	.word	0x000000d0
    225c:	.word	0x0000063a
    2260:	.word	0x0000062e
    2264:	.word	0x00000623
    2268:	.word	0x0000062a
    226c:	.word	0x00000624
    2270:	.word	0x0000062e
    2274:	.word	0x00000646

00002278 <ya_parse_options>:
    2278:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    227c:	mov	r6, r0
    2280:	ldr	lr, [pc, #440]	; 2440 <ya_parse_options+0x1c8>
    2284:	mov	r5, r1
    2288:	add	lr, pc, lr
    228c:	mov	r7, r2
    2290:	ldm	lr!, {r0, r1, r2, r3}
    2294:	sub	sp, sp, #84	; 0x54
    2298:	add	ip, sp, #16
    229c:	ldr	sl, [pc, #416]	; 2444 <ya_parse_options+0x1cc>
    22a0:	stmia	ip!, {r0, r1, r2, r3}
    22a4:	add	r8, sp, #16
    22a8:	ldm	lr!, {r0, r1, r2, r3}
    22ac:	add	sl, pc, sl
    22b0:	ldr	fp, [pc, #400]	; 2448 <ya_parse_options+0x1d0>
    22b4:	ldr	r4, [pc, #400]	; 244c <ya_parse_options+0x1d4>
    22b8:	stmia	ip!, {r0, r1, r2, r3}
    22bc:	add	fp, pc, fp
    22c0:	ldm	lr!, {r0, r1, r2, r3}
    22c4:	add	r4, pc, r4
    22c8:	stmia	ip!, {r0, r1, r2, r3}
    22cc:	ldm	lr, {r0, r1, r2, r3}
    22d0:	stm	ip, {r0, r1, r2, r3}
    22d4:	ldr	r3, [pc, #372]	; 2450 <ya_parse_options+0x1d8>
    22d8:	add	r3, pc, r3
    22dc:	str	r3, [sp, #12]
    22e0:	mov	r9, #0
    22e4:	b	2338 <ya_parse_options+0xc0>
    22e8:	cmp	r0, #63	; 0x3f
    22ec:	beq	241c <ya_parse_options+0x1a4>
    22f0:	bgt	2320 <ya_parse_options+0xa8>
    22f4:	cmp	r0, #0
    22f8:	beq	2338 <ya_parse_options+0xc0>
    22fc:	cmp	r0, #58	; 0x3a
    2300:	beq	23f8 <ya_parse_options+0x180>
    2304:	ldr	r3, [pc, #328]	; 2454 <ya_parse_options+0x1dc>
    2308:	mov	r0, sl
    230c:	ldr	r3, [r4, r3]
    2310:	ldr	r1, [r3]
    2314:	bl	ec4 <fputs@plt>
    2318:	mov	r1, #2
    231c:	b	23ec <ya_parse_options+0x174>
    2320:	cmp	r0, #104	; 0x68
    2324:	beq	23e8 <ya_parse_options+0x170>
    2328:	cmp	r0, #111	; 0x6f
    232c:	beq	23cc <ya_parse_options+0x154>
    2330:	cmp	r0, #99	; 0x63
    2334:	bne	2304 <ya_parse_options+0x8c>
    2338:	str	r9, [sp]
    233c:	mov	r3, r8
    2340:	ldr	r2, [sp, #12]
    2344:	mov	r1, r5
    2348:	mov	r0, r6
    234c:	bl	dd4 <getopt_long@plt>
    2350:	cmn	r0, #1
    2354:	bne	22e8 <ya_parse_options+0x70>
    2358:	ldr	r3, [pc, #248]	; 2458 <ya_parse_options+0x1e0>
    235c:	ldr	r3, [r4, r3]
    2360:	ldr	r8, [r3]
    2364:	sub	r6, r6, r8
    2368:	cmp	r6, #1
    236c:	beq	2394 <ya_parse_options+0x11c>
    2370:	ldr	r3, [pc, #220]	; 2454 <ya_parse_options+0x1dc>
    2374:	ldr	r0, [pc, #224]	; 245c <ya_parse_options+0x1e4>
    2378:	ldr	r3, [r4, r3]
    237c:	add	r0, pc, r0
    2380:	ldr	r1, [r3]
    2384:	bl	ec4 <fputs@plt>
    2388:	mov	r1, #2
    238c:	ldr	r0, [r5, r8, lsl #2]
    2390:	bl	eac <ya_usage@plt>
    2394:	ldr	r3, [pc, #196]	; 2460 <ya_parse_options+0x1e8>
    2398:	ldr	r0, [r5, r8, lsl #2]
    239c:	ldr	r3, [r4, r3]
    23a0:	str	r0, [r3]
    23a4:	ldr	r3, [pc, #184]	; 2464 <ya_parse_options+0x1ec>
    23a8:	ldr	r4, [r4, r3]
    23ac:	ldr	r3, [r4]
    23b0:	cmp	r3, #0
    23b4:	bne	23c4 <ya_parse_options+0x14c>
    23b8:	mov	r1, r7
    23bc:	bl	e94 <ya_new_extension@plt>
    23c0:	str	r0, [r4]
    23c4:	add	sp, sp, #84	; 0x54
    23c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    23cc:	ldr	r2, [pc, #148]	; 2468 <ya_parse_options+0x1f0>
    23d0:	ldr	r3, [pc, #140]	; 2464 <ya_parse_options+0x1ec>
    23d4:	ldr	r2, [r4, r2]
    23d8:	ldr	r3, [r4, r3]
    23dc:	ldr	r2, [r2]
    23e0:	str	r2, [r3]
    23e4:	b	22e0 <ya_parse_options+0x68>
    23e8:	mov	r1, #0
    23ec:	ldr	r0, [r5]
    23f0:	bl	eac <ya_usage@plt>
    23f4:	b	22e0 <ya_parse_options+0x68>
    23f8:	ldr	r3, [pc, #84]	; 2454 <ya_parse_options+0x1dc>
    23fc:	ldr	r0, [pc, #104]	; 246c <ya_parse_options+0x1f4>
    2400:	ldr	r3, [r4, r3]
    2404:	add	r0, pc, r0
    2408:	ldr	r1, [r3]
    240c:	bl	ec4 <fputs@plt>
    2410:	mov	r1, #2
    2414:	ldr	r0, [r5]
    2418:	bl	eac <ya_usage@plt>
    241c:	ldr	r3, [pc, #48]	; 2454 <ya_parse_options+0x1dc>
    2420:	mov	r0, fp
    2424:	ldr	r3, [r4, r3]
    2428:	ldr	r1, [r3]
    242c:	bl	ec4 <fputs@plt>
    2430:	mov	r1, #2
    2434:	ldr	r0, [r5]
    2438:	bl	eac <ya_usage@plt>
    243c:	b	2304 <ya_parse_options+0x8c>
    2440:	.word	0x00010ea0
    2444:	.word	0x00000642
    2448:	.word	0x00000622
    244c:	.word	0x00010d34
    2450:	.word	0x00000636
    2454:	.word	0x000000d0
    2458:	.word	0x000000c8
    245c:	.word	0x00000597
    2460:	.word	0x000000c0
    2464:	.word	0x00000100
    2468:	.word	0x00000104
    246c:	.word	0x000004c1

00002470 <ya_main>:
    2470:	push	{r4, r5, r6, r7, r8, lr}
    2474:	sub	sp, sp, #48	; 0x30
    2478:	ldr	r5, [pc, #384]	; 2600 <ya_main+0x190>
    247c:	ldr	r3, [pc, #384]	; 2604 <ya_main+0x194>
    2480:	add	r5, pc, r5
    2484:	add	r4, sp, #8
    2488:	ldr	r3, [r5, r3]
    248c:	mov	r6, r0
    2490:	mov	r0, r4
    2494:	mov	r7, r1
    2498:	mov	r8, r2
    249c:	str	r3, [sp, #4]
    24a0:	bl	d68 <ya_null@plt>
    24a4:	mov	ip, r4
    24a8:	ldr	lr, [sp, #4]
    24ac:	ldm	ip!, {r0, r1, r2, r3}
    24b0:	stmia	lr!, {r0, r1, r2, r3}
    24b4:	ldm	ip, {r0, r1, r2, r3}
    24b8:	stm	lr, {r0, r1, r2, r3}
    24bc:	mov	r1, r7
    24c0:	mov	r0, r6
    24c4:	mov	r2, r8
    24c8:	bl	edc <ya_parse_options@plt>
    24cc:	ldr	r3, [pc, #308]	; 2608 <ya_main+0x198>
    24d0:	ldr	r1, [pc, #308]	; 260c <ya_main+0x19c>
    24d4:	ldr	r6, [r5, r3]
    24d8:	add	r1, pc, r1
    24dc:	ldr	r7, [r6]
    24e0:	mov	r0, r7
    24e4:	bl	d14 <strcmp@plt>
    24e8:	ldr	r3, [pc, #288]	; 2610 <ya_main+0x1a0>
    24ec:	ldr	r4, [r5, r3]
    24f0:	cmp	r0, #0
    24f4:	bne	25a8 <ya_main+0x138>
    24f8:	ldr	r3, [pc, #276]	; 2614 <ya_main+0x1a4>
    24fc:	ldr	r3, [r5, r3]
    2500:	ldr	r3, [r3]
    2504:	str	r3, [r4]
    2508:	ldr	r1, [pc, #264]	; 2618 <ya_main+0x1a8>
    250c:	ldr	r2, [r6]
    2510:	add	r1, pc, r1
    2514:	add	r0, sp, #44	; 0x2c
    2518:	bl	e34 <asprintf@plt>
    251c:	cmp	r0, #0
    2520:	blt	2544 <ya_main+0xd4>
    2524:	ldr	r6, [sp, #44]	; 0x2c
    2528:	mov	r0, r6
    252c:	bl	dec <strlen@plt>
    2530:	mov	r1, r0
    2534:	mov	r0, r6
    2538:	bl	cf0 <ya_reposition@plt>
    253c:	ldr	r0, [sp, #44]	; 0x2c
    2540:	bl	d44 <free@plt>
    2544:	bl	d74 <yyparse@plt>
    2548:	ldr	r0, [r4]
    254c:	bl	e4c <fclose@plt>
    2550:	ldr	r3, [pc, #196]	; 261c <ya_main+0x1ac>
    2554:	ldr	r1, [pc, #196]	; 2620 <ya_main+0x1b0>
    2558:	ldr	r3, [r5, r3]
    255c:	add	r1, pc, r1
    2560:	ldr	r4, [r3]
    2564:	mov	r0, r4
    2568:	bl	d14 <strcmp@plt>
    256c:	cmp	r0, #0
    2570:	bne	25dc <ya_main+0x16c>
    2574:	ldr	r3, [pc, #168]	; 2624 <ya_main+0x1b4>
    2578:	ldr	r3, [r5, r3]
    257c:	ldr	r4, [r3]
    2580:	ldr	r3, [pc, #160]	; 2628 <ya_main+0x1b8>
    2584:	mov	r0, r4
    2588:	ldr	r3, [r5, r3]
    258c:	mov	r1, r3
    2590:	str	r3, [sp, #4]
    2594:	bl	cfc <ya_node_save@plt>
    2598:	mov	r0, r4
    259c:	bl	e4c <fclose@plt>
    25a0:	mov	r0, #0
    25a4:	b	25d4 <ya_main+0x164>
    25a8:	ldr	r1, [pc, #124]	; 262c <ya_main+0x1bc>
    25ac:	mov	r0, r7
    25b0:	add	r1, pc, r1
    25b4:	bl	d38 <fopen@plt>
    25b8:	cmp	r0, #0
    25bc:	str	r0, [r4]
    25c0:	bne	2508 <ya_main+0x98>
    25c4:	ldr	r0, [pc, #100]	; 2630 <ya_main+0x1c0>
    25c8:	add	r0, pc, r0
    25cc:	bl	d98 <perror@plt>
    25d0:	mvn	r0, #0
    25d4:	add	sp, sp, #48	; 0x30
    25d8:	pop	{r4, r5, r6, r7, r8, pc}
    25dc:	ldr	r1, [pc, #80]	; 2634 <ya_main+0x1c4>
    25e0:	mov	r0, r4
    25e4:	add	r1, pc, r1
    25e8:	bl	d38 <fopen@plt>
    25ec:	subs	r4, r0, #0
    25f0:	bne	2580 <ya_main+0x110>
    25f4:	ldr	r0, [pc, #60]	; 2638 <ya_main+0x1c8>
    25f8:	add	r0, pc, r0
    25fc:	b	25cc <ya_main+0x15c>
    2600:	.word	0x00010b78
    2604:	.word	0x000000d8
    2608:	.word	0x000000c0
    260c:	.word	0x00000459
    2610:	.word	0x000000c4
    2614:	.word	0x000000e0
    2618:	.word	0x0000043f
    261c:	.word	0x00000100
    2620:	.word	0x000003d5
    2624:	.word	0x000000e8
    2628:	.word	0x000000dc
    262c:	.word	0x00000383
    2630:	.word	0x0000036d
    2634:	.word	0x00000173
    2638:	.word	0x0000035e

Disassembly of section .fini:

0000263c <_fini>:
    263c:	push	{r3, lr}
    2640:	pop	{r3, pc}
