
../repos/inetutils/src/syslogd:     file format elf32-littlearm


Disassembly of section .init:

00011634 <.init>:
   11634:	push	{r3, lr}
   11638:	bl	12874 <__assert_fail@plt+0xd64>
   1163c:	pop	{r3, pc}

Disassembly of section .plt:

00011640 <calloc@plt-0x14>:
   11640:	push	{lr}		; (str lr, [sp, #-4]!)
   11644:	ldr	lr, [pc, #4]	; 11650 <calloc@plt-0x4>
   11648:	add	lr, pc, lr
   1164c:	ldr	pc, [lr, #8]!
   11650:			; <UNDEFINED> instruction: 0x0001d9b0

00011654 <calloc@plt>:
   11654:	add	ip, pc, #0, 12
   11658:	add	ip, ip, #118784	; 0x1d000
   1165c:	ldr	pc, [ip, #2480]!	; 0x9b0

00011660 <fputs_unlocked@plt>:
   11660:	add	ip, pc, #0, 12
   11664:	add	ip, ip, #118784	; 0x1d000
   11668:	ldr	pc, [ip, #2472]!	; 0x9a8

0001166c <raise@plt>:
   1166c:	add	ip, pc, #0, 12
   11670:	add	ip, ip, #118784	; 0x1d000
   11674:	ldr	pc, [ip, #2464]!	; 0x9a0

00011678 <fsync@plt>:
   11678:	add	ip, pc, #0, 12
   1167c:	add	ip, ip, #118784	; 0x1d000
   11680:	ldr	pc, [ip, #2456]!	; 0x998

00011684 <strcmp@plt>:
   11684:	add	ip, pc, #0, 12
   11688:	add	ip, ip, #118784	; 0x1d000
   1168c:	ldr	pc, [ip, #2448]!	; 0x990

00011690 <strtol@plt>:
   11690:	add	ip, pc, #0, 12
   11694:	add	ip, ip, #118784	; 0x1d000
   11698:	ldr	pc, [ip, #2440]!	; 0x988

0001169c <setsockopt@plt>:
   1169c:	add	ip, pc, #0, 12
   116a0:	add	ip, ip, #118784	; 0x1d000
   116a4:	ldr	pc, [ip, #2432]!	; 0x980

000116a8 <pause@plt>:
   116a8:	add	ip, pc, #0, 12
   116ac:	add	ip, ip, #118784	; 0x1d000
   116b0:	ldr	pc, [ip, #2424]!	; 0x978

000116b4 <printf@plt>:
   116b4:	add	ip, pc, #0, 12
   116b8:	add	ip, ip, #118784	; 0x1d000
   116bc:	ldr	pc, [ip, #2416]!	; 0x970

000116c0 <read@plt>:
   116c0:	add	ip, pc, #0, 12
   116c4:	add	ip, ip, #118784	; 0x1d000
   116c8:	ldr	pc, [ip, #2408]!	; 0x968

000116cc <fflush@plt>:
   116cc:	add	ip, pc, #0, 12
   116d0:	add	ip, ip, #118784	; 0x1d000
   116d4:	ldr	pc, [ip, #2400]!	; 0x960

000116d8 <utmpxname@plt>:
   116d8:	add	ip, pc, #0, 12
   116dc:	add	ip, ip, #118784	; 0x1d000
   116e0:	ldr	pc, [ip, #2392]!	; 0x958

000116e4 <sigprocmask@plt>:
   116e4:	add	ip, pc, #0, 12
   116e8:	add	ip, ip, #118784	; 0x1d000
   116ec:	ldr	pc, [ip, #2384]!	; 0x950

000116f0 <memmove@plt>:
   116f0:	add	ip, pc, #0, 12
   116f4:	add	ip, ip, #118784	; 0x1d000
   116f8:	ldr	pc, [ip, #2376]!	; 0x948

000116fc <strchrnul@plt>:
   116fc:	add	ip, pc, #0, 12
   11700:	add	ip, ip, #118784	; 0x1d000
   11704:	ldr	pc, [ip, #2368]!	; 0x940

00011708 <free@plt>:
   11708:	add	ip, pc, #0, 12
   1170c:	add	ip, ip, #118784	; 0x1d000
   11710:	ldr	pc, [ip, #2360]!	; 0x938

00011714 <gai_strerror@plt>:
   11714:	add	ip, pc, #0, 12
   11718:	add	ip, ip, #118784	; 0x1d000
   1171c:	ldr	pc, [ip, #2352]!	; 0x930

00011720 <fgets@plt>:
   11720:	add	ip, pc, #0, 12
   11724:	add	ip, ip, #118784	; 0x1d000
   11728:	ldr	pc, [ip, #2344]!	; 0x928

0001172c <strndup@plt>:
   1172c:	add	ip, pc, #0, 12
   11730:	add	ip, ip, #118784	; 0x1d000
   11734:	ldr	pc, [ip, #2336]!	; 0x920

00011738 <_exit@plt>:
   11738:	add	ip, pc, #0, 12
   1173c:	add	ip, ip, #118784	; 0x1d000
   11740:	ldr	pc, [ip, #2328]!	; 0x918

00011744 <memcpy@plt>:
   11744:	add	ip, pc, #0, 12
   11748:	add	ip, ip, #118784	; 0x1d000
   1174c:	ldr	pc, [ip, #2320]!	; 0x910

00011750 <signal@plt>:
   11750:	add	ip, pc, #0, 12
   11754:	add	ip, ip, #118784	; 0x1d000
   11758:	ldr	pc, [ip, #2312]!	; 0x908

0001175c <time@plt>:
   1175c:	add	ip, pc, #0, 12
   11760:	add	ip, ip, #118784	; 0x1d000
   11764:	ldr	pc, [ip, #2304]!	; 0x900

00011768 <fwrite_unlocked@plt>:
   11768:	add	ip, pc, #0, 12
   1176c:	add	ip, ip, #118784	; 0x1d000
   11770:	ldr	pc, [ip, #2296]!	; 0x8f8

00011774 <sleep@plt>:
   11774:	add	ip, pc, #0, 12
   11778:	add	ip, ip, #118784	; 0x1d000
   1177c:	ldr	pc, [ip, #2288]!	; 0x8f0

00011780 <stpcpy@plt>:
   11780:	add	ip, pc, #0, 12
   11784:	add	ip, ip, #118784	; 0x1d000
   11788:	ldr	pc, [ip, #2280]!	; 0x8e8

0001178c <ctime@plt>:
   1178c:	add	ip, pc, #0, 12
   11790:	add	ip, ip, #118784	; 0x1d000
   11794:	ldr	pc, [ip, #2272]!	; 0x8e0

00011798 <recvfrom@plt>:
   11798:	add	ip, pc, #0, 12
   1179c:	add	ip, ip, #118784	; 0x1d000
   117a0:	ldr	pc, [ip, #2264]!	; 0x8d8

000117a4 <strdup@plt>:
   117a4:	add	ip, pc, #0, 12
   117a8:	add	ip, ip, #118784	; 0x1d000
   117ac:	ldr	pc, [ip, #2256]!	; 0x8d0

000117b0 <setutxent@plt>:
   117b0:	add	ip, pc, #0, 12
   117b4:	add	ip, ip, #118784	; 0x1d000
   117b8:	ldr	pc, [ip, #2248]!	; 0x8c8

000117bc <alarm@plt>:
   117bc:	add	ip, pc, #0, 12
   117c0:	add	ip, ip, #118784	; 0x1d000
   117c4:	ldr	pc, [ip, #2240]!	; 0x8c0

000117c8 <sysconf@plt>:
   117c8:	add	ip, pc, #0, 12
   117cc:	add	ip, ip, #118784	; 0x1d000
   117d0:	ldr	pc, [ip, #2232]!	; 0x8b8

000117d4 <unlink@plt>:
   117d4:	add	ip, pc, #0, 12
   117d8:	add	ip, ip, #118784	; 0x1d000
   117dc:	ldr	pc, [ip, #2224]!	; 0x8b0

000117e0 <dup2@plt>:
   117e0:	add	ip, pc, #0, 12
   117e4:	add	ip, ip, #118784	; 0x1d000
   117e8:	ldr	pc, [ip, #2216]!	; 0x8a8

000117ec <realloc@plt>:
   117ec:	add	ip, pc, #0, 12
   117f0:	add	ip, ip, #118784	; 0x1d000
   117f4:	ldr	pc, [ip, #2208]!	; 0x8a0

000117f8 <chdir@plt>:
   117f8:	add	ip, pc, #0, 12
   117fc:	add	ip, ip, #118784	; 0x1d000
   11800:	ldr	pc, [ip, #2200]!	; 0x898

00011804 <strcasecmp@plt>:
   11804:	add	ip, pc, #0, 12
   11808:	add	ip, ip, #118784	; 0x1d000
   1180c:	ldr	pc, [ip, #2192]!	; 0x890

00011810 <funlockfile@plt>:
   11810:	add	ip, pc, #0, 12
   11814:	add	ip, ip, #118784	; 0x1d000
   11818:	ldr	pc, [ip, #2184]!	; 0x888

0001181c <poll@plt>:
   1181c:	add	ip, pc, #0, 12
   11820:	add	ip, ip, #118784	; 0x1d000
   11824:	ldr	pc, [ip, #2176]!	; 0x880

00011828 <sigaction@plt>:
   11828:	add	ip, pc, #0, 12
   1182c:	add	ip, ip, #118784	; 0x1d000
   11830:	ldr	pc, [ip, #2168]!	; 0x878

00011834 <fwrite@plt>:
   11834:	add	ip, pc, #0, 12
   11838:	add	ip, ip, #118784	; 0x1d000
   1183c:	ldr	pc, [ip, #2160]!	; 0x870

00011840 <waitpid@plt>:
   11840:	add	ip, pc, #0, 12
   11844:	add	ip, ip, #118784	; 0x1d000
   11848:	ldr	pc, [ip, #2152]!	; 0x868

0001184c <strcpy@plt>:
   1184c:	add	ip, pc, #0, 12
   11850:	add	ip, ip, #118784	; 0x1d000
   11854:	ldr	pc, [ip, #2144]!	; 0x860

00011858 <error@plt>:
   11858:	add	ip, pc, #0, 12
   1185c:	add	ip, ip, #118784	; 0x1d000
   11860:	ldr	pc, [ip, #2136]!	; 0x858

00011864 <gethostname@plt>:
   11864:	add	ip, pc, #0, 12
   11868:	add	ip, ip, #118784	; 0x1d000
   1186c:	ldr	pc, [ip, #2128]!	; 0x850

00011870 <opendir@plt>:
   11870:	add	ip, pc, #0, 12
   11874:	add	ip, ip, #118784	; 0x1d000
   11878:	ldr	pc, [ip, #2120]!	; 0x848

0001187c <open64@plt>:
   1187c:	add	ip, pc, #0, 12
   11880:	add	ip, ip, #118784	; 0x1d000
   11884:	ldr	pc, [ip, #2112]!	; 0x840

00011888 <getenv@plt>:
   11888:	add	ip, pc, #0, 12
   1188c:	add	ip, ip, #118784	; 0x1d000
   11890:	ldr	pc, [ip, #2104]!	; 0x838

00011894 <malloc@plt>:
   11894:	add	ip, pc, #0, 12
   11898:	add	ip, ip, #118784	; 0x1d000
   1189c:	ldr	pc, [ip, #2096]!	; 0x830

000118a0 <sigaddset@plt>:
   118a0:	add	ip, pc, #0, 12
   118a4:	add	ip, ip, #118784	; 0x1d000
   118a8:	ldr	pc, [ip, #2088]!	; 0x828

000118ac <__libc_start_main@plt>:
   118ac:	add	ip, pc, #0, 12
   118b0:	add	ip, ip, #118784	; 0x1d000
   118b4:	ldr	pc, [ip, #2080]!	; 0x820

000118b8 <strerror@plt>:
   118b8:	add	ip, pc, #0, 12
   118bc:	add	ip, ip, #118784	; 0x1d000
   118c0:	ldr	pc, [ip, #2072]!	; 0x818

000118c4 <__ctype_tolower_loc@plt>:
   118c4:	add	ip, pc, #0, 12
   118c8:	add	ip, ip, #118784	; 0x1d000
   118cc:	ldr	pc, [ip, #2064]!	; 0x810

000118d0 <__gmon_start__@plt>:
   118d0:	add	ip, pc, #0, 12
   118d4:	add	ip, ip, #118784	; 0x1d000
   118d8:	ldr	pc, [ip, #2056]!	; 0x808

000118dc <mempcpy@plt>:
   118dc:	add	ip, pc, #0, 12
   118e0:	add	ip, ip, #118784	; 0x1d000
   118e4:	ldr	pc, [ip, #2048]!	; 0x800

000118e8 <kill@plt>:
   118e8:	add	ip, pc, #0, 12
   118ec:	add	ip, ip, #118784	; 0x1d000
   118f0:	ldr	pc, [ip, #2040]!	; 0x7f8

000118f4 <__ctype_b_loc@plt>:
   118f4:	add	ip, pc, #0, 12
   118f8:	add	ip, ip, #118784	; 0x1d000
   118fc:	ldr	pc, [ip, #2032]!	; 0x7f0

00011900 <getpid@plt>:
   11900:	add	ip, pc, #0, 12
   11904:	add	ip, ip, #118784	; 0x1d000
   11908:	ldr	pc, [ip, #2024]!	; 0x7e8

0001190c <exit@plt>:
   1190c:	add	ip, pc, #0, 12
   11910:	add	ip, ip, #118784	; 0x1d000
   11914:	ldr	pc, [ip, #2016]!	; 0x7e0

00011918 <strlen@plt>:
   11918:	add	ip, pc, #0, 12
   1191c:	add	ip, ip, #118784	; 0x1d000
   11920:	ldr	pc, [ip, #2008]!	; 0x7d8

00011924 <setsid@plt>:
   11924:	add	ip, pc, #0, 12
   11928:	add	ip, ip, #118784	; 0x1d000
   1192c:	ldr	pc, [ip, #2000]!	; 0x7d0

00011930 <strchr@plt>:
   11930:	add	ip, pc, #0, 12
   11934:	add	ip, ip, #118784	; 0x1d000
   11938:	ldr	pc, [ip, #1992]!	; 0x7c8

0001193c <fprintf@plt>:
   1193c:	add	ip, pc, #0, 12
   11940:	add	ip, ip, #118784	; 0x1d000
   11944:	ldr	pc, [ip, #1984]!	; 0x7c0

00011948 <__errno_location@plt>:
   11948:	add	ip, pc, #0, 12
   1194c:	add	ip, ip, #118784	; 0x1d000
   11950:	ldr	pc, [ip, #1976]!	; 0x7b8

00011954 <snprintf@plt>:
   11954:	add	ip, pc, #0, 12
   11958:	add	ip, ip, #118784	; 0x1d000
   1195c:	ldr	pc, [ip, #1968]!	; 0x7b0

00011960 <strerror_r@plt>:
   11960:	add	ip, pc, #0, 12
   11964:	add	ip, ip, #118784	; 0x1d000
   11968:	ldr	pc, [ip, #1960]!	; 0x7a8

0001196c <bind@plt>:
   1196c:	add	ip, pc, #0, 12
   11970:	add	ip, ip, #118784	; 0x1d000
   11974:	ldr	pc, [ip, #1952]!	; 0x7a0

00011978 <setvbuf@plt>:
   11978:	add	ip, pc, #0, 12
   1197c:	add	ip, ip, #118784	; 0x1d000
   11980:	ldr	pc, [ip, #1944]!	; 0x798

00011984 <memset@plt>:
   11984:	add	ip, pc, #0, 12
   11988:	add	ip, ip, #118784	; 0x1d000
   1198c:	ldr	pc, [ip, #1936]!	; 0x790

00011990 <strncpy@plt>:
   11990:	add	ip, pc, #0, 12
   11994:	add	ip, ip, #118784	; 0x1d000
   11998:	ldr	pc, [ip, #1928]!	; 0x788

0001199c <asprintf@plt>:
   1199c:	add	ip, pc, #0, 12
   119a0:	add	ip, ip, #118784	; 0x1d000
   119a4:	ldr	pc, [ip, #1920]!	; 0x780

000119a8 <memchr@plt>:
   119a8:	add	ip, pc, #0, 12
   119ac:	add	ip, ip, #118784	; 0x1d000
   119b0:	ldr	pc, [ip, #1912]!	; 0x778

000119b4 <writev@plt>:
   119b4:	add	ip, pc, #0, 12
   119b8:	add	ip, ip, #118784	; 0x1d000
   119bc:	ldr	pc, [ip, #1904]!	; 0x770

000119c0 <fclose@plt>:
   119c0:	add	ip, pc, #0, 12
   119c4:	add	ip, ip, #118784	; 0x1d000
   119c8:	ldr	pc, [ip, #1896]!	; 0x768

000119cc <fcntl64@plt>:
   119cc:	add	ip, pc, #0, 12
   119d0:	add	ip, ip, #118784	; 0x1d000
   119d4:	ldr	pc, [ip, #1888]!	; 0x760

000119d8 <sendto@plt>:
   119d8:	add	ip, pc, #0, 12
   119dc:	add	ip, ip, #118784	; 0x1d000
   119e0:	ldr	pc, [ip, #1880]!	; 0x758

000119e4 <endutxent@plt>:
   119e4:	add	ip, pc, #0, 12
   119e8:	add	ip, ip, #118784	; 0x1d000
   119ec:	ldr	pc, [ip, #1872]!	; 0x750

000119f0 <__overflow@plt>:
   119f0:	add	ip, pc, #0, 12
   119f4:	add	ip, ip, #118784	; 0x1d000
   119f8:	ldr	pc, [ip, #1864]!	; 0x748

000119fc <sigemptyset@plt>:
   119fc:	add	ip, pc, #0, 12
   11a00:	add	ip, ip, #118784	; 0x1d000
   11a04:	ldr	pc, [ip, #1856]!	; 0x740

00011a08 <fork@plt>:
   11a08:	add	ip, pc, #0, 12
   11a0c:	add	ip, ip, #118784	; 0x1d000
   11a10:	ldr	pc, [ip, #1848]!	; 0x738

00011a14 <getnameinfo@plt>:
   11a14:	add	ip, pc, #0, 12
   11a18:	add	ip, ip, #118784	; 0x1d000
   11a1c:	ldr	pc, [ip, #1840]!	; 0x730

00011a20 <strrchr@plt>:
   11a20:	add	ip, pc, #0, 12
   11a24:	add	ip, ip, #118784	; 0x1d000
   11a28:	ldr	pc, [ip, #1832]!	; 0x728

00011a2c <vfprintf@plt>:
   11a2c:	add	ip, pc, #0, 12
   11a30:	add	ip, ip, #118784	; 0x1d000
   11a34:	ldr	pc, [ip, #1824]!	; 0x720

00011a38 <fputc@plt>:
   11a38:	add	ip, pc, #0, 12
   11a3c:	add	ip, ip, #118784	; 0x1d000
   11a40:	ldr	pc, [ip, #1816]!	; 0x718

00011a44 <readdir64@plt>:
   11a44:	add	ip, pc, #0, 12
   11a48:	add	ip, ip, #118784	; 0x1d000
   11a4c:	ldr	pc, [ip, #1808]!	; 0x710

00011a50 <flockfile@plt>:
   11a50:	add	ip, pc, #0, 12
   11a54:	add	ip, ip, #118784	; 0x1d000
   11a58:	ldr	pc, [ip, #1800]!	; 0x708

00011a5c <vsnprintf@plt>:
   11a5c:	add	ip, pc, #0, 12
   11a60:	add	ip, ip, #118784	; 0x1d000
   11a64:	ldr	pc, [ip, #1792]!	; 0x700

00011a68 <fopen64@plt>:
   11a68:	add	ip, pc, #0, 12
   11a6c:	add	ip, ip, #118784	; 0x1d000
   11a70:	ldr	pc, [ip, #1784]!	; 0x6f8

00011a74 <qsort@plt>:
   11a74:	add	ip, pc, #0, 12
   11a78:	add	ip, ip, #118784	; 0x1d000
   11a7c:	ldr	pc, [ip, #1776]!	; 0x6f0

00011a80 <strpbrk@plt>:
   11a80:	add	ip, pc, #0, 12
   11a84:	add	ip, ip, #118784	; 0x1d000
   11a88:	ldr	pc, [ip, #1768]!	; 0x6e8

00011a8c <freeaddrinfo@plt>:
   11a8c:	add	ip, pc, #0, 12
   11a90:	add	ip, ip, #118784	; 0x1d000
   11a94:	ldr	pc, [ip, #1760]!	; 0x6e0

00011a98 <getaddrinfo@plt>:
   11a98:	add	ip, pc, #0, 12
   11a9c:	add	ip, ip, #118784	; 0x1d000
   11aa0:	ldr	pc, [ip, #1752]!	; 0x6d8

00011aa4 <socket@plt>:
   11aa4:	add	ip, pc, #0, 12
   11aa8:	add	ip, ip, #118784	; 0x1d000
   11aac:	ldr	pc, [ip, #1744]!	; 0x6d0

00011ab0 <chmod@plt>:
   11ab0:	add	ip, pc, #0, 12
   11ab4:	add	ip, ip, #118784	; 0x1d000
   11ab8:	ldr	pc, [ip, #1736]!	; 0x6c8

00011abc <__xstat64@plt>:
   11abc:	add	ip, pc, #0, 12
   11ac0:	add	ip, ip, #118784	; 0x1d000
   11ac4:	ldr	pc, [ip, #1728]!	; 0x6c0

00011ac8 <isatty@plt>:
   11ac8:	add	ip, pc, #0, 12
   11acc:	add	ip, ip, #118784	; 0x1d000
   11ad0:	ldr	pc, [ip, #1720]!	; 0x6b8

00011ad4 <strncmp@plt>:
   11ad4:	add	ip, pc, #0, 12
   11ad8:	add	ip, ip, #118784	; 0x1d000
   11adc:	ldr	pc, [ip, #1712]!	; 0x6b0

00011ae0 <abort@plt>:
   11ae0:	add	ip, pc, #0, 12
   11ae4:	add	ip, ip, #118784	; 0x1d000
   11ae8:	ldr	pc, [ip, #1704]!	; 0x6a8

00011aec <getutxent@plt>:
   11aec:	add	ip, pc, #0, 12
   11af0:	add	ip, ip, #118784	; 0x1d000
   11af4:	ldr	pc, [ip, #1696]!	; 0x6a0

00011af8 <close@plt>:
   11af8:	add	ip, pc, #0, 12
   11afc:	add	ip, ip, #118784	; 0x1d000
   11b00:	ldr	pc, [ip, #1688]!	; 0x698

00011b04 <closedir@plt>:
   11b04:	add	ip, pc, #0, 12
   11b08:	add	ip, ip, #118784	; 0x1d000
   11b0c:	ldr	pc, [ip, #1680]!	; 0x690

00011b10 <__assert_fail@plt>:
   11b10:	add	ip, pc, #0, 12
   11b14:	add	ip, ip, #118784	; 0x1d000
   11b18:	ldr	pc, [ip, #1672]!	; 0x688

Disassembly of section .text:

00011b1c <daemon@@Base-0x3e84>:
   11b1c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11b20:	sub	sp, sp, #2368	; 0x940
   11b24:	sub	sp, sp, #4
   11b28:	mov	r5, r0
   11b2c:	ldr	r0, [r1]
   11b30:	mov	r4, r1
   11b34:	bl	1a9a4 <argp_parse@@Base+0x1174>
   11b38:	ldr	r0, [pc, #3088]	; 12750 <__assert_fail@plt+0xc40>
   11b3c:	bl	12974 <__assert_fail@plt+0xe64>
   11b40:	ldr	r3, [pc, #3084]	; 12754 <__assert_fail@plt+0xc44>
   11b44:	ldr	r2, [pc, #3084]	; 12758 <__assert_fail@plt+0xc48>
   11b48:	ldr	r1, [pc, #3084]	; 1275c <__assert_fail@plt+0xc4c>
   11b4c:	ldr	r0, [pc, #3084]	; 12760 <__assert_fail@plt+0xc50>
   11b50:	str	r2, [r3]
   11b54:	bl	1a5f4 <argp_parse@@Base+0xdc4>
   11b58:	mov	r3, #0
   11b5c:	mov	r2, r4
   11b60:	mov	r1, r5
   11b64:	str	r3, [sp, #4]
   11b68:	str	r3, [sp]
   11b6c:	ldr	r0, [pc, #3056]	; 12764 <__assert_fail@plt+0xc54>
   11b70:	bl	19830 <argp_parse@@Base>
   11b74:	ldr	r3, [pc, #3052]	; 12768 <__assert_fail@plt+0xc58>
   11b78:	ldr	r8, [pc, #3052]	; 1276c <__assert_fail@plt+0xc5c>
   11b7c:	ldr	r0, [r3, #12]
   11b80:	bl	15724 <__assert_fail@plt+0x3c14>
   11b84:	ldr	r4, [r8]
   11b88:	cmp	r4, #0
   11b8c:	beq	120d4 <__assert_fail@plt+0x5c4>
   11b90:	ldr	r3, [pc, #3032]	; 12770 <__assert_fail@plt+0xc60>
   11b94:	ldr	r3, [r3]
   11b98:	cmp	r3, #0
   11b9c:	movne	r3, #1
   11ba0:	ldrne	r2, [pc, #3008]	; 12768 <__assert_fail@plt+0xc58>
   11ba4:	strne	r3, [r2, #4]
   11ba8:	ldr	r2, [pc, #3012]	; 12774 <__assert_fail@plt+0xc64>
   11bac:	mov	r3, #0
   11bb0:	mov	r1, r3
   11bb4:	ldr	r0, [r2]
   11bb8:	mov	r2, #1
   11bbc:	bl	11978 <setvbuf@plt>
   11bc0:	mov	r3, #0
   11bc4:	str	r3, [sp, #12]
   11bc8:	bl	159c0 <daemon@@Base+0x20>
   11bcc:	ldr	r3, [pc, #2980]	; 12778 <__assert_fail@plt+0xc68>
   11bd0:	cmp	r0, #0
   11bd4:	mov	r5, r0
   11bd8:	str	r0, [r3]
   11bdc:	bne	11bfc <__assert_fail@plt+0xec>
   11be0:	bl	11948 <__errno_location@plt>
   11be4:	ldr	r2, [pc, #2960]	; 1277c <__assert_fail@plt+0xc6c>
   11be8:	ldr	r1, [r0]
   11bec:	mov	r0, #1
   11bf0:	bl	11858 <error@plt>
   11bf4:	ldr	r3, [pc, #2940]	; 12778 <__assert_fail@plt+0xc68>
   11bf8:	ldr	r5, [r3]
   11bfc:	mov	r1, #46	; 0x2e
   11c00:	mov	r0, r5
   11c04:	bl	11930 <strchr@plt>
   11c08:	subs	r4, r0, #0
   11c0c:	beq	12064 <__assert_fail@plt+0x554>
   11c10:	ldr	r3, [pc, #2920]	; 12780 <__assert_fail@plt+0xc70>
   11c14:	mov	r2, #0
   11c18:	add	sl, sp, #1328	; 0x530
   11c1c:	strb	r2, [r4], #1
   11c20:	add	sl, sl, #12
   11c24:	str	r4, [r3]
   11c28:	add	r3, sp, #320	; 0x140
   11c2c:	str	r3, [sp, #32]
   11c30:	add	r3, sp, #312	; 0x138
   11c34:	str	r3, [sp, #16]
   11c38:	ldr	r6, [pc, #2884]	; 12784 <__assert_fail@plt+0xc74>
   11c3c:	mov	r5, #3
   11c40:	ldr	r0, [pc, #2880]	; 12788 <__assert_fail@plt+0xc78>
   11c44:	strh	r5, [r6, #4]
   11c48:	bl	117a4 <strdup@plt>
   11c4c:	ldr	r1, [pc, #2872]	; 1278c <__assert_fail@plt+0xc7c>
   11c50:	mov	r4, r1
   11c54:	str	r0, [r6, #40]	; 0x28
   11c58:	mov	r0, #15
   11c5c:	bl	11750 <signal@plt>
   11c60:	ldr	r1, [r8]
   11c64:	mov	r0, #2
   11c68:	cmp	r1, #0
   11c6c:	movne	r1, r4
   11c70:	moveq	r1, #1
   11c74:	bl	11750 <signal@plt>
   11c78:	ldr	r1, [r8]
   11c7c:	mov	r0, r5
   11c80:	cmp	r1, #0
   11c84:	movne	r1, r4
   11c88:	moveq	r1, #1
   11c8c:	bl	11750 <signal@plt>
   11c90:	add	r0, sp, #176	; 0xb0
   11c94:	mov	r3, #268435456	; 0x10000000
   11c98:	sub	r2, r0, #4
   11c9c:	str	r2, [sp, #28]
   11ca0:	str	r3, [sp, #304]	; 0x130
   11ca4:	bl	119fc <sigemptyset@plt>
   11ca8:	ldr	r3, [pc, #2784]	; 12790 <__assert_fail@plt+0xc80>
   11cac:	ldr	r1, [sp, #28]
   11cb0:	mov	r2, #0
   11cb4:	mov	r0, #14
   11cb8:	str	r3, [sp, #172]	; 0xac
   11cbc:	bl	11828 <sigaction@plt>
   11cc0:	ldr	r2, [r8]
   11cc4:	ldr	r3, [pc, #2760]	; 12794 <__assert_fail@plt+0xc84>
   11cc8:	cmp	r2, #0
   11ccc:	moveq	r3, #1
   11cd0:	ldr	r1, [sp, #28]
   11cd4:	mov	r2, #0
   11cd8:	mov	r0, #10
   11cdc:	str	r3, [sp, #172]	; 0xac
   11ce0:	bl	11828 <sigaction@plt>
   11ce4:	mov	r0, #30
   11ce8:	bl	117bc <alarm@plt>
   11cec:	ldr	r3, [pc, #2724]	; 12798 <__assert_fail@plt+0xc88>
   11cf0:	ldr	r0, [r3]
   11cf4:	add	r0, r0, r5
   11cf8:	lsl	r0, r0, r5
   11cfc:	bl	1b5a8 <argp_parse@@Base+0x1d78>
   11d00:	subs	r3, r0, #0
   11d04:	str	r3, [sp, #24]
   11d08:	bne	11d20 <__assert_fail@plt+0x210>
   11d0c:	bl	11948 <__errno_location@plt>
   11d10:	ldr	r2, [pc, #2692]	; 1279c <__assert_fail@plt+0xc8c>
   11d14:	ldr	r1, [r0]
   11d18:	mov	r0, #1
   11d1c:	bl	11858 <error@plt>
   11d20:	mov	r0, #0
   11d24:	bl	15338 <__assert_fail@plt+0x3828>
   11d28:	ldr	r3, [pc, #2672]	; 127a0 <__assert_fail@plt+0xc90>
   11d2c:	ldr	fp, [r3]
   11d30:	cmp	fp, #0
   11d34:	beq	125f4 <__assert_fail@plt+0xae4>
   11d38:	ldr	r9, [pc, #2660]	; 127a4 <__assert_fail@plt+0xc94>
   11d3c:	mov	r3, #0
   11d40:	str	r3, [sp, #8]
   11d44:	ldr	r3, [pc, #2652]	; 127a8 <__assert_fail@plt+0xc98>
   11d48:	ldr	r3, [r3]
   11d4c:	cmp	r3, #0
   11d50:	bne	11e88 <__assert_fail@plt+0x378>
   11d54:	ldr	r2, [pc, #2620]	; 12798 <__assert_fail@plt+0xc88>
   11d58:	ldr	r2, [r2]
   11d5c:	cmp	r2, #0
   11d60:	beq	11e88 <__assert_fail@plt+0x378>
   11d64:	ldr	r7, [pc, #2624]	; 127ac <__assert_fail@plt+0xc9c>
   11d68:	str	r9, [sp, #36]	; 0x24
   11d6c:	mov	r9, r3
   11d70:	ldr	r3, [r7]
   11d74:	lsl	r4, r9, #3
   11d78:	ldr	r5, [r3, r9, lsl #3]
   11d7c:	add	r3, r3, r4
   11d80:	str	r3, [sp, #20]
   11d84:	ldrb	r3, [r5]
   11d88:	cmp	r3, #0
   11d8c:	beq	12668 <__assert_fail@plt+0xb58>
   11d90:	mov	r0, r5
   11d94:	bl	11918 <strlen@plt>
   11d98:	cmp	r0, #107	; 0x6b
   11d9c:	bhi	1263c <__assert_fail@plt+0xb2c>
   11da0:	mov	r0, r5
   11da4:	bl	117d4 <unlink@plt>
   11da8:	ldr	r3, [sp, #32]
   11dac:	mov	r2, #110	; 0x6e
   11db0:	mov	r1, #0
   11db4:	ldr	r0, [sp, #16]
   11db8:	sub	fp, r3, #6
   11dbc:	bl	11984 <memset@plt>
   11dc0:	ldr	r3, [sp, #16]
   11dc4:	mov	r6, #1
   11dc8:	mov	r2, #107	; 0x6b
   11dcc:	mov	r1, r5
   11dd0:	mov	r0, fp
   11dd4:	strh	r6, [r3]
   11dd8:	bl	11990 <strncpy@plt>
   11ddc:	mov	r0, r6
   11de0:	mov	r2, #0
   11de4:	mov	r1, #2
   11de8:	bl	11aa4 <socket@plt>
   11dec:	subs	r6, r0, #0
   11df0:	blt	126bc <__assert_fail@plt+0xbac>
   11df4:	mov	r0, fp
   11df8:	bl	11918 <strlen@plt>
   11dfc:	ldr	r1, [sp, #16]
   11e00:	add	r2, r0, #2
   11e04:	mov	r0, r6
   11e08:	bl	1196c <bind@plt>
   11e0c:	cmp	r0, #0
   11e10:	blt	126bc <__assert_fail@plt+0xbac>
   11e14:	ldr	r1, [pc, #2452]	; 127b0 <__assert_fail@plt+0xca0>
   11e18:	mov	r0, r5
   11e1c:	bl	11ab0 <chmod@plt>
   11e20:	cmp	r0, #0
   11e24:	blt	126bc <__assert_fail@plt+0xbac>
   11e28:	ldr	r3, [r7]
   11e2c:	add	r4, r3, r4
   11e30:	ldr	r3, [sp, #20]
   11e34:	str	r6, [r3, #4]
   11e38:	ldr	r3, [r4, #4]
   11e3c:	cmp	r3, #0
   11e40:	blt	12698 <__assert_fail@plt+0xb88>
   11e44:	ldr	ip, [sp, #8]
   11e48:	ldr	lr, [sp, #24]
   11e4c:	mov	r0, #3
   11e50:	add	r2, lr, ip, lsl #3
   11e54:	str	r3, [lr, ip, lsl #3]
   11e58:	ldr	r1, [r4]
   11e5c:	add	r3, ip, #1
   11e60:	strh	r0, [r2, #4]
   11e64:	ldr	r0, [pc, #2376]	; 127b4 <__assert_fail@plt+0xca4>
   11e68:	str	r3, [sp, #8]
   11e6c:	bl	129ec <__assert_fail@plt+0xedc>
   11e70:	ldr	r3, [pc, #2336]	; 12798 <__assert_fail@plt+0xc88>
   11e74:	add	r9, r9, #1
   11e78:	ldr	r3, [r3]
   11e7c:	cmp	r3, r9
   11e80:	bhi	11d70 <__assert_fail@plt+0x260>
   11e84:	ldr	r9, [sp, #36]	; 0x24
   11e88:	ldr	r3, [pc, #2344]	; 127b8 <__assert_fail@plt+0xca8>
   11e8c:	ldr	r3, [r3]
   11e90:	cmp	r3, #0
   11e94:	bne	123b4 <__assert_fail@plt+0x8a4>
   11e98:	add	r3, sp, #44	; 0x2c
   11e9c:	str	r3, [sp, #20]
   11ea0:	ldr	r1, [pc, #2324]	; 127bc <__assert_fail@plt+0xcac>
   11ea4:	ldr	r0, [r9, #12]
   11ea8:	bl	11a68 <fopen64@plt>
   11eac:	subs	r4, r0, #0
   11eb0:	beq	11ed0 <__assert_fail@plt+0x3c0>
   11eb4:	bl	11900 <getpid@plt>
   11eb8:	ldr	r1, [pc, #2304]	; 127c0 <__assert_fail@plt+0xcb0>
   11ebc:	mov	r2, r0
   11ec0:	mov	r0, r4
   11ec4:	bl	1193c <fprintf@plt>
   11ec8:	mov	r0, r4
   11ecc:	bl	119c0 <fclose@plt>
   11ed0:	ldr	r0, [pc, #2284]	; 127c4 <__assert_fail@plt+0xcb4>
   11ed4:	bl	129ec <__assert_fail@plt+0xedc>
   11ed8:	ldr	r3, [pc, #2280]	; 127c8 <__assert_fail@plt+0xcb8>
   11edc:	ldr	r1, [sp, #28]
   11ee0:	mov	r2, #0
   11ee4:	mov	r0, #1
   11ee8:	str	r3, [sp, #172]	; 0xac
   11eec:	bl	11828 <sigaction@plt>
   11ef0:	ldr	r3, [r8]
   11ef4:	cmp	r3, #0
   11ef8:	beq	11f24 <__assert_fail@plt+0x414>
   11efc:	ldr	r2, [pc, #2148]	; 12768 <__assert_fail@plt+0xc58>
   11f00:	mov	r3, #1
   11f04:	str	r3, [r2, #4]
   11f08:	bl	11900 <getpid@plt>
   11f0c:	mov	r1, r0
   11f10:	ldr	r0, [pc, #2228]	; 127cc <__assert_fail@plt+0xcbc>
   11f14:	bl	129ec <__assert_fail@plt+0xedc>
   11f18:	ldr	r2, [pc, #2120]	; 12768 <__assert_fail@plt+0xc58>
   11f1c:	mov	r3, #0
   11f20:	str	r3, [r2, #4]
   11f24:	ldr	r3, [sp, #12]
   11f28:	cmp	r3, #0
   11f2c:	beq	11f3c <__assert_fail@plt+0x42c>
   11f30:	mov	r0, r3
   11f34:	mov	r1, #15
   11f38:	bl	118e8 <kill@plt>
   11f3c:	ldr	r3, [sp, #24]
   11f40:	mov	r4, #0
   11f44:	add	r3, r3, #6
   11f48:	str	r3, [sp, #28]
   11f4c:	mvn	r2, #0
   11f50:	ldr	r1, [sp, #8]
   11f54:	ldr	r0, [sp, #24]
   11f58:	bl	1181c <poll@plt>
   11f5c:	cmp	r0, #0
   11f60:	beq	11f4c <__assert_fail@plt+0x43c>
   11f64:	ldr	r3, [pc, #2044]	; 12768 <__assert_fail@plt+0xc58>
   11f68:	ldr	r3, [r3]
   11f6c:	cmp	r3, #0
   11f70:	str	r3, [sp, #12]
   11f74:	bne	1234c <__assert_fail@plt+0x83c>
   11f78:	cmp	r0, #0
   11f7c:	blt	1236c <__assert_fail@plt+0x85c>
   11f80:	ldr	r3, [sp, #8]
   11f84:	cmp	r3, #0
   11f88:	beq	11f4c <__assert_fail@plt+0x43c>
   11f8c:	ldr	r7, [sp, #28]
   11f90:	ldr	r8, [sp, #12]
   11f94:	b	12034 <__assert_fail@plt+0x524>
   11f98:	ldr	r5, [r7, #-6]
   11f9c:	cmn	r5, #1
   11fa0:	beq	12020 <__assert_fail@plt+0x510>
   11fa4:	ldr	r3, [r9, #384]	; 0x180
   11fa8:	cmp	r5, r3
   11fac:	beq	121e4 <__assert_fail@plt+0x6d4>
   11fb0:	ldr	r3, [r9, #312]	; 0x138
   11fb4:	cmp	r5, r3
   11fb8:	beq	12114 <__assert_fail@plt+0x604>
   11fbc:	ldr	r3, [r9, #316]	; 0x13c
   11fc0:	cmp	r5, r3
   11fc4:	beq	12114 <__assert_fail@plt+0x604>
   11fc8:	add	r3, sp, #40	; 0x28
   11fcc:	str	r3, [sp, #4]
   11fd0:	mov	r0, r5
   11fd4:	ldr	r3, [sp, #20]
   11fd8:	ldr	r5, [sp, #16]
   11fdc:	str	r3, [sp]
   11fe0:	mov	ip, #110	; 0x6e
   11fe4:	mov	r3, #0
   11fe8:	mov	r2, #1024	; 0x400
   11fec:	mov	r1, r5
   11ff0:	str	ip, [sp, #40]	; 0x28
   11ff4:	bl	11798 <recvfrom@plt>
   11ff8:	cmp	r0, #0
   11ffc:	ble	121c4 <__assert_fail@plt+0x6b4>
   12000:	add	r3, sp, #2368	; 0x940
   12004:	add	r0, r3, r0
   12008:	mov	r3, #0
   1200c:	strb	r3, [r0, #-2056]	; 0xfffff7f8
   12010:	ldr	r3, [pc, #1888]	; 12778 <__assert_fail@plt+0xc68>
   12014:	mov	r1, r5
   12018:	ldr	r0, [r3]
   1201c:	bl	14220 <__assert_fail@plt+0x2710>
   12020:	ldr	r3, [sp, #8]
   12024:	add	r8, r8, #1
   12028:	cmp	r3, r8
   1202c:	add	r7, r7, #8
   12030:	beq	11f4c <__assert_fail@plt+0x43c>
   12034:	ldrh	r3, [r7]
   12038:	tst	r3, #3
   1203c:	bne	11f98 <__assert_fail@plt+0x488>
   12040:	tst	r3, #32
   12044:	bne	12184 <__assert_fail@plt+0x674>
   12048:	tst	r3, #8
   1204c:	bne	12198 <__assert_fail@plt+0x688>
   12050:	tst	r3, #16
   12054:	beq	12020 <__assert_fail@plt+0x510>
   12058:	ldr	r0, [pc, #1904]	; 127d0 <__assert_fail@plt+0xcc0>
   1205c:	bl	13474 <__assert_fail@plt+0x1964>
   12060:	b	12020 <__assert_fail@plt+0x510>
   12064:	add	r3, sp, #1344	; 0x540
   12068:	sub	sl, r3, #4
   1206c:	add	r3, sp, #320	; 0x140
   12070:	str	r3, [sp, #32]
   12074:	add	r3, sp, #312	; 0x138
   12078:	mov	r6, r3
   1207c:	mov	r2, #32
   12080:	mov	r1, r4
   12084:	mov	r0, sl
   12088:	str	r3, [sp, #16]
   1208c:	bl	11984 <memset@plt>
   12090:	mov	r3, r6
   12094:	mov	ip, #2
   12098:	mov	r1, r4
   1209c:	mov	r0, r5
   120a0:	mov	r2, sl
   120a4:	str	ip, [sp, #1340]	; 0x53c
   120a8:	bl	11a98 <getaddrinfo@plt>
   120ac:	subs	r6, r0, #0
   120b0:	beq	1270c <__assert_fail@plt+0xbfc>
   120b4:	ldr	r4, [pc, #1732]	; 12780 <__assert_fail@plt+0xc70>
   120b8:	ldr	r3, [r4]
   120bc:	cmp	r3, #0
   120c0:	bne	11c38 <__assert_fail@plt+0x128>
   120c4:	ldr	r0, [pc, #1800]	; 127d4 <__assert_fail@plt+0xcc4>
   120c8:	bl	117a4 <strdup@plt>
   120cc:	str	r0, [r4]
   120d0:	b	11c38 <__assert_fail@plt+0x128>
   120d4:	ldr	r1, [pc, #1788]	; 127d8 <__assert_fail@plt+0xcc8>
   120d8:	mov	r0, #15
   120dc:	bl	11750 <signal@plt>
   120e0:	mov	r2, #30
   120e4:	mov	r1, r4
   120e8:	mov	r0, r4
   120ec:	bl	15854 <__assert_fail@plt+0x3d44>
   120f0:	subs	r3, r0, #0
   120f4:	str	r3, [sp, #12]
   120f8:	bge	11bc8 <__assert_fail@plt+0xb8>
   120fc:	bl	11948 <__errno_location@plt>
   12100:	ldr	r2, [pc, #1748]	; 127dc <__assert_fail@plt+0xccc>
   12104:	ldr	r1, [r0]
   12108:	mov	r0, #1
   1210c:	bl	11858 <error@plt>
   12110:	b	11bc8 <__assert_fail@plt+0xb8>
   12114:	ldr	r6, [sp, #16]
   12118:	mov	r3, #128	; 0x80
   1211c:	ldr	r2, [pc, #1724]	; 127e0 <__assert_fail@plt+0xcd0>
   12120:	mov	r1, #0
   12124:	mov	r0, r6
   12128:	str	r3, [sp, #40]	; 0x28
   1212c:	bl	11984 <memset@plt>
   12130:	ldr	fp, [sp, #20]
   12134:	add	r3, sp, #40	; 0x28
   12138:	str	r3, [sp, #4]
   1213c:	str	fp, [sp]
   12140:	mov	r0, r5
   12144:	mov	r3, #0
   12148:	mov	r2, #1024	; 0x400
   1214c:	mov	r1, r6
   12150:	bl	11798 <recvfrom@plt>
   12154:	cmp	r0, #0
   12158:	ble	121a4 <__assert_fail@plt+0x694>
   1215c:	add	r3, sp, #2368	; 0x940
   12160:	add	r0, r3, r0
   12164:	mov	r3, #0
   12168:	ldr	r1, [sp, #40]	; 0x28
   1216c:	strb	r3, [r0, #-2056]	; 0xfffff7f8
   12170:	mov	r0, fp
   12174:	bl	132dc <__assert_fail@plt+0x17cc>
   12178:	mov	r1, r6
   1217c:	bl	14220 <__assert_fail@plt+0x2710>
   12180:	b	12020 <__assert_fail@plt+0x510>
   12184:	ldr	r0, [pc, #1624]	; 127e4 <__assert_fail@plt+0xcd4>
   12188:	bl	13474 <__assert_fail@plt+0x1964>
   1218c:	mvn	r3, #0
   12190:	str	r3, [r7, #-6]
   12194:	b	12020 <__assert_fail@plt+0x510>
   12198:	ldr	r0, [pc, #1608]	; 127e8 <__assert_fail@plt+0xcd8>
   1219c:	bl	13474 <__assert_fail@plt+0x1964>
   121a0:	b	12020 <__assert_fail@plt+0x510>
   121a4:	beq	12020 <__assert_fail@plt+0x510>
   121a8:	bl	11948 <__errno_location@plt>
   121ac:	ldr	r3, [r0]
   121b0:	cmp	r3, #4
   121b4:	beq	12020 <__assert_fail@plt+0x510>
   121b8:	ldr	r0, [pc, #1580]	; 127ec <__assert_fail@plt+0xcdc>
   121bc:	bl	13474 <__assert_fail@plt+0x1964>
   121c0:	b	12020 <__assert_fail@plt+0x510>
   121c4:	beq	12020 <__assert_fail@plt+0x510>
   121c8:	bl	11948 <__errno_location@plt>
   121cc:	ldr	r3, [r0]
   121d0:	cmp	r3, #4
   121d4:	beq	12020 <__assert_fail@plt+0x510>
   121d8:	ldr	r0, [pc, #1552]	; 127f0 <__assert_fail@plt+0xce0>
   121dc:	bl	13474 <__assert_fail@plt+0x1964>
   121e0:	b	12020 <__assert_fail@plt+0x510>
   121e4:	rsb	r2, r4, #1024	; 0x400
   121e8:	add	r1, sl, r4
   121ec:	mov	r0, r5
   121f0:	bl	116c0 <read@plt>
   121f4:	cmp	r0, #0
   121f8:	addgt	r4, r4, r0
   121fc:	ble	12388 <__assert_fail@plt+0x878>
   12200:	mov	r6, #0
   12204:	mov	r5, #10
   12208:	add	r3, sp, #2368	; 0x940
   1220c:	add	r3, r3, r4
   12210:	mov	r1, r5
   12214:	mov	r0, sl
   12218:	strb	r6, [r3, #-1028]	; 0xfffffbfc
   1221c:	bl	11930 <strchr@plt>
   12220:	cmp	r0, #0
   12224:	beq	12344 <__assert_fail@plt+0x834>
   12228:	mov	r3, sl
   1222c:	add	fp, r0, #1
   12230:	sub	r2, fp, r3
   12234:	strb	r6, [r0]
   12238:	mov	r0, r3
   1223c:	sub	r4, r4, r2
   12240:	bl	14378 <__assert_fail@plt+0x2868>
   12244:	mov	r1, r5
   12248:	mov	r0, fp
   1224c:	bl	11930 <strchr@plt>
   12250:	mov	r3, fp
   12254:	cmp	r0, #0
   12258:	bne	1222c <__assert_fail@plt+0x71c>
   1225c:	cmp	r4, #0
   12260:	beq	12294 <__assert_fail@plt+0x784>
   12264:	ldrb	r3, [fp]
   12268:	cmp	r3, #0
   1226c:	bne	1229c <__assert_fail@plt+0x78c>
   12270:	add	r3, fp, #1
   12274:	b	12288 <__assert_fail@plt+0x778>
   12278:	ldrb	r2, [r3]
   1227c:	add	r3, r3, #1
   12280:	cmp	r2, #0
   12284:	bne	1229c <__assert_fail@plt+0x78c>
   12288:	subs	r4, r4, #1
   1228c:	mov	fp, r3
   12290:	bne	12278 <__assert_fail@plt+0x768>
   12294:	ldr	r4, [sp, #12]
   12298:	b	12020 <__assert_fail@plt+0x510>
   1229c:	cmp	fp, sl
   122a0:	beq	122b8 <__assert_fail@plt+0x7a8>
   122a4:	mov	r1, fp
   122a8:	mov	r2, r4
   122ac:	mov	r0, sl
   122b0:	bl	116f0 <memmove@plt>
   122b4:	b	12208 <__assert_fail@plt+0x6f8>
   122b8:	ldr	r3, [pc, #1332]	; 127f4 <__assert_fail@plt+0xce4>
   122bc:	cmp	r4, r3
   122c0:	ble	12020 <__assert_fail@plt+0x510>
   122c4:	mov	r0, sl
   122c8:	bl	14378 <__assert_fail@plt+0x2868>
   122cc:	ldrb	r3, [sp, #1340]	; 0x53c
   122d0:	cmp	r3, #60	; 0x3c
   122d4:	beq	122fc <__assert_fail@plt+0x7ec>
   122d8:	mov	r1, r5
   122dc:	mov	r0, sl
   122e0:	strb	r6, [sp, #1340]	; 0x53c
   122e4:	bl	11930 <strchr@plt>
   122e8:	ldr	r4, [sp, #12]
   122ec:	cmp	r0, #0
   122f0:	bne	12228 <__assert_fail@plt+0x718>
   122f4:	ldr	r4, [sp, #12]
   122f8:	b	12020 <__assert_fail@plt+0x510>
   122fc:	bl	118f4 <__ctype_b_loc@plt>
   12300:	ldrb	r3, [sp, #1341]	; 0x53d
   12304:	lsl	r3, r3, #1
   12308:	ldr	r2, [r0]
   1230c:	ldrh	r3, [r2, r3]
   12310:	tst	r3, #2048	; 0x800
   12314:	beq	122d8 <__assert_fail@plt+0x7c8>
   12318:	ldrb	r3, [sp, #1342]	; 0x53e
   1231c:	cmp	r3, #62	; 0x3e
   12320:	bne	122d8 <__assert_fail@plt+0x7c8>
   12324:	mov	r1, r5
   12328:	mov	r0, sl
   1232c:	strb	r6, [sp, #1343]	; 0x53f
   12330:	bl	11930 <strchr@plt>
   12334:	mov	r4, #3
   12338:	cmp	r0, #0
   1233c:	bne	12228 <__assert_fail@plt+0x718>
   12340:	b	12020 <__assert_fail@plt+0x510>
   12344:	mov	fp, sl
   12348:	b	1225c <__assert_fail@plt+0x74c>
   1234c:	ldr	r0, [pc, #1188]	; 127f8 <__assert_fail@plt+0xce8>
   12350:	bl	129ec <__assert_fail@plt+0xedc>
   12354:	mov	r0, #0
   12358:	bl	15338 <__assert_fail@plt+0x3828>
   1235c:	ldr	r2, [pc, #1028]	; 12768 <__assert_fail@plt+0xc58>
   12360:	mov	r3, #0
   12364:	str	r3, [r2]
   12368:	b	11f4c <__assert_fail@plt+0x43c>
   1236c:	bl	11948 <__errno_location@plt>
   12370:	ldr	r3, [r0]
   12374:	cmp	r3, #4
   12378:	beq	11f4c <__assert_fail@plt+0x43c>
   1237c:	ldr	r0, [pc, #1144]	; 127fc <__assert_fail@plt+0xcec>
   12380:	bl	13474 <__assert_fail@plt+0x1964>
   12384:	b	11f4c <__assert_fail@plt+0x43c>
   12388:	beq	12200 <__assert_fail@plt+0x6f0>
   1238c:	bl	11948 <__errno_location@plt>
   12390:	ldr	r3, [r0]
   12394:	cmp	r3, #4
   12398:	beq	12200 <__assert_fail@plt+0x6f0>
   1239c:	ldr	r0, [pc, #1116]	; 12800 <__assert_fail@plt+0xcf0>
   123a0:	bl	13474 <__assert_fail@plt+0x1964>
   123a4:	mvn	r3, #0
   123a8:	str	r3, [r9, #384]	; 0x180
   123ac:	str	r3, [r7, #-6]
   123b0:	b	12200 <__assert_fail@plt+0x6f0>
   123b4:	ldr	r3, [pc, #940]	; 12768 <__assert_fail@plt+0xc58>
   123b8:	ldr	r4, [r9, #4]
   123bc:	ldr	r5, [r3, #48]	; 0x30
   123c0:	mvn	r3, #0
   123c4:	cmp	r5, #0
   123c8:	str	r3, [r9, #316]	; 0x13c
   123cc:	str	r3, [r9, #312]	; 0x138
   123d0:	beq	125dc <__assert_fail@plt+0xacc>
   123d4:	mov	r2, #32
   123d8:	mov	r1, #0
   123dc:	mov	r0, sl
   123e0:	bl	11984 <memset@plt>
   123e4:	ldr	r0, [pc, #892]	; 12768 <__assert_fail@plt+0xc58>
   123e8:	add	r3, sp, #44	; 0x2c
   123ec:	mov	r1, r5
   123f0:	mov	r6, #1
   123f4:	mov	r5, #2
   123f8:	mov	r2, sl
   123fc:	ldr	r0, [r0, #8]
   12400:	str	r3, [sp, #20]
   12404:	str	r4, [sp, #1344]	; 0x540
   12408:	str	r5, [sp, #1348]	; 0x544
   1240c:	str	r6, [sp, #1340]	; 0x53c
   12410:	bl	11a98 <getaddrinfo@plt>
   12414:	cmp	r0, #0
   12418:	bne	125cc <__assert_fail@plt+0xabc>
   1241c:	ldr	r4, [sp, #44]	; 0x2c
   12420:	cmp	r4, #0
   12424:	beq	124d8 <__assert_fail@plt+0x9c8>
   12428:	mov	r7, #4
   1242c:	mov	fp, #26
   12430:	str	r5, [sp, #32]
   12434:	str	r6, [sp, #312]	; 0x138
   12438:	ldmib	r4, {r0, r1, r2}
   1243c:	bl	11aa4 <socket@plt>
   12440:	subs	r5, r0, #0
   12444:	blt	124c8 <__assert_fail@plt+0x9b8>
   12448:	str	r7, [sp]
   1244c:	ldr	r3, [sp, #16]
   12450:	ldr	r2, [sp, #32]
   12454:	mov	r1, r6
   12458:	bl	1169c <setsockopt@plt>
   1245c:	cmp	r0, #0
   12460:	bge	1246c <__assert_fail@plt+0x95c>
   12464:	ldr	r0, [pc, #920]	; 12804 <__assert_fail@plt+0xcf4>
   12468:	bl	13474 <__assert_fail@plt+0x1964>
   1246c:	ldr	r3, [r4, #4]
   12470:	cmp	r3, #10
   12474:	bne	12490 <__assert_fail@plt+0x980>
   12478:	str	r7, [sp]
   1247c:	ldr	r3, [sp, #16]
   12480:	mov	r2, fp
   12484:	mov	r1, #41	; 0x29
   12488:	mov	r0, r5
   1248c:	bl	1169c <setsockopt@plt>
   12490:	ldr	r2, [r4, #16]
   12494:	ldr	r1, [r4, #20]
   12498:	mov	r0, r5
   1249c:	bl	1196c <bind@plt>
   124a0:	cmp	r0, #0
   124a4:	blt	1259c <__assert_fail@plt+0xa8c>
   124a8:	ldr	r3, [r4, #4]
   124ac:	cmp	r3, #2
   124b0:	beq	1258c <__assert_fail@plt+0xa7c>
   124b4:	cmp	r3, #10
   124b8:	bne	124c8 <__assert_fail@plt+0x9b8>
   124bc:	ldr	r3, [r9, #316]	; 0x13c
   124c0:	cmp	r3, #0
   124c4:	strlt	r5, [r9, #316]	; 0x13c
   124c8:	ldr	r4, [r4, #28]
   124cc:	cmp	r4, #0
   124d0:	bne	12434 <__assert_fail@plt+0x924>
   124d4:	ldr	r4, [sp, #44]	; 0x2c
   124d8:	mov	r0, r4
   124dc:	bl	11a8c <freeaddrinfo@plt>
   124e0:	ldr	r3, [r9, #312]	; 0x138
   124e4:	cmp	r3, #0
   124e8:	blt	125a8 <__assert_fail@plt+0xa98>
   124ec:	ldr	ip, [sp, #8]
   124f0:	ldr	lr, [sp, #24]
   124f4:	mov	r1, #3
   124f8:	add	r2, lr, ip, lsl #3
   124fc:	str	r3, [lr, ip, lsl #3]
   12500:	ldr	r0, [pc, #768]	; 12808 <__assert_fail@plt+0xcf8>
   12504:	add	r3, ip, #1
   12508:	strh	r1, [r2, #4]
   1250c:	str	r3, [sp, #8]
   12510:	bl	129ec <__assert_fail@plt+0xedc>
   12514:	ldr	r3, [r9, #316]	; 0x13c
   12518:	cmp	r3, #0
   1251c:	blt	1257c <__assert_fail@plt+0xa6c>
   12520:	ldr	r4, [sp, #8]
   12524:	ldr	ip, [sp, #24]
   12528:	mov	r1, #3
   1252c:	add	r2, ip, r4, lsl #3
   12530:	str	r3, [ip, r4, lsl #3]
   12534:	ldr	r0, [pc, #720]	; 1280c <__assert_fail@plt+0xcfc>
   12538:	strh	r1, [r2, #4]
   1253c:	bl	129ec <__assert_fail@plt+0xedc>
   12540:	ldr	r3, [r9, #312]	; 0x138
   12544:	add	r2, r4, #1
   12548:	cmp	r3, #0
   1254c:	str	r2, [sp, #8]
   12550:	bge	11ea0 <__assert_fail@plt+0x390>
   12554:	ldr	r3, [r9, #316]	; 0x13c
   12558:	cmp	r3, #0
   1255c:	bge	11ea0 <__assert_fail@plt+0x390>
   12560:	bl	11948 <__errno_location@plt>
   12564:	ldr	r0, [r0]
   12568:	bl	118b8 <strerror@plt>
   1256c:	mov	r1, r0
   12570:	ldr	r0, [pc, #664]	; 12810 <__assert_fail@plt+0xd00>
   12574:	bl	129ec <__assert_fail@plt+0xedc>
   12578:	b	11ea0 <__assert_fail@plt+0x390>
   1257c:	ldr	r3, [r9, #312]	; 0x138
   12580:	cmp	r3, #0
   12584:	bge	11ea0 <__assert_fail@plt+0x390>
   12588:	b	12560 <__assert_fail@plt+0xa50>
   1258c:	ldr	r3, [r9, #312]	; 0x138
   12590:	cmp	r3, #0
   12594:	strlt	r5, [r9, #312]	; 0x138
   12598:	b	124c8 <__assert_fail@plt+0x9b8>
   1259c:	mov	r0, r5
   125a0:	bl	11af8 <close@plt>
   125a4:	b	124c8 <__assert_fail@plt+0x9b8>
   125a8:	ldr	r3, [r9, #316]	; 0x13c
   125ac:	cmp	r3, #0
   125b0:	bge	12514 <__assert_fail@plt+0xa04>
   125b4:	ldr	r0, [pc, #600]	; 12814 <__assert_fail@plt+0xd04>
   125b8:	bl	13474 <__assert_fail@plt+0x1964>
   125bc:	ldr	r3, [r9, #312]	; 0x138
   125c0:	cmp	r3, #0
   125c4:	bge	124ec <__assert_fail@plt+0x9dc>
   125c8:	b	12514 <__assert_fail@plt+0xa04>
   125cc:	ldr	r0, [pc, #580]	; 12818 <__assert_fail@plt+0xd08>
   125d0:	bl	13474 <__assert_fail@plt+0x1964>
   125d4:	ldr	r3, [r9, #312]	; 0x138
   125d8:	b	125c0 <__assert_fail@plt+0xab0>
   125dc:	ldr	r0, [pc, #568]	; 1281c <__assert_fail@plt+0xd0c>
   125e0:	bl	129ec <__assert_fail@plt+0xedc>
   125e4:	add	r3, sp, #44	; 0x2c
   125e8:	str	r3, [sp, #20]
   125ec:	ldr	r3, [r9, #312]	; 0x138
   125f0:	b	125c0 <__assert_fail@plt+0xab0>
   125f4:	mov	r2, fp
   125f8:	mov	r1, fp
   125fc:	ldr	r0, [pc, #540]	; 12820 <__assert_fail@plt+0xd10>
   12600:	bl	1187c <open64@plt>
   12604:	ldr	r9, [pc, #408]	; 127a4 <__assert_fail@plt+0xc94>
   12608:	cmp	r0, #0
   1260c:	str	r0, [r9, #384]	; 0x180
   12610:	blt	12674 <__assert_fail@plt+0xb64>
   12614:	ldr	r2, [sp, #24]
   12618:	mov	r3, #3
   1261c:	ldr	r1, [pc, #508]	; 12820 <__assert_fail@plt+0xd10>
   12620:	str	r0, [r2]
   12624:	strh	r3, [r2, #4]
   12628:	ldr	r0, [pc, #500]	; 12824 <__assert_fail@plt+0xd14>
   1262c:	bl	129ec <__assert_fail@plt+0xedc>
   12630:	mov	r3, #1
   12634:	str	r3, [sp, #8]
   12638:	b	11d44 <__assert_fail@plt+0x234>
   1263c:	mov	r3, r5
   12640:	ldr	r2, [pc, #480]	; 12828 <__assert_fail@plt+0xd18>
   12644:	ldr	r1, [pc, #404]	; 127e0 <__assert_fail@plt+0xcd0>
   12648:	mov	r0, sl
   1264c:	bl	11954 <snprintf@plt>
   12650:	mov	r0, sl
   12654:	bl	13474 <__assert_fail@plt+0x1964>
   12658:	ldr	r3, [r7]
   1265c:	mvn	r6, #0
   12660:	add	r4, r3, r4
   12664:	b	11e30 <__assert_fail@plt+0x320>
   12668:	ldr	r4, [sp, #20]
   1266c:	mvn	r6, #0
   12670:	b	11e30 <__assert_fail@plt+0x320>
   12674:	bl	11948 <__errno_location@plt>
   12678:	str	fp, [sp, #8]
   1267c:	ldr	r0, [r0]
   12680:	bl	118b8 <strerror@plt>
   12684:	ldr	r1, [pc, #404]	; 12820 <__assert_fail@plt+0xd10>
   12688:	mov	r2, r0
   1268c:	ldr	r0, [pc, #408]	; 1282c <__assert_fail@plt+0xd1c>
   12690:	bl	129ec <__assert_fail@plt+0xedc>
   12694:	b	11d44 <__assert_fail@plt+0x234>
   12698:	bl	11948 <__errno_location@plt>
   1269c:	ldr	r4, [r4]
   126a0:	ldr	r0, [r0]
   126a4:	bl	118b8 <strerror@plt>
   126a8:	mov	r1, r4
   126ac:	mov	r2, r0
   126b0:	ldr	r0, [pc, #372]	; 1282c <__assert_fail@plt+0xd1c>
   126b4:	bl	129ec <__assert_fail@plt+0xedc>
   126b8:	b	11e70 <__assert_fail@plt+0x360>
   126bc:	mov	r3, r5
   126c0:	ldr	r2, [pc, #360]	; 12830 <__assert_fail@plt+0xd20>
   126c4:	ldr	r1, [pc, #276]	; 127e0 <__assert_fail@plt+0xcd0>
   126c8:	mov	r0, sl
   126cc:	bl	11954 <snprintf@plt>
   126d0:	mov	r0, sl
   126d4:	bl	13474 <__assert_fail@plt+0x1964>
   126d8:	bl	11948 <__errno_location@plt>
   126dc:	ldr	r0, [r0]
   126e0:	bl	118b8 <strerror@plt>
   126e4:	mov	r1, r5
   126e8:	mov	r2, r0
   126ec:	ldr	r0, [pc, #320]	; 12834 <__assert_fail@plt+0xd24>
   126f0:	bl	129ec <__assert_fail@plt+0xedc>
   126f4:	mov	r0, r6
   126f8:	bl	11af8 <close@plt>
   126fc:	ldr	r3, [r7]
   12700:	mvn	r6, #0
   12704:	add	r4, r3, r4
   12708:	b	11e30 <__assert_fail@plt+0x320>
   1270c:	ldr	r3, [pc, #100]	; 12778 <__assert_fail@plt+0xc68>
   12710:	ldr	r4, [pc, #104]	; 12780 <__assert_fail@plt+0xc70>
   12714:	ldr	r0, [r3]
   12718:	bl	1a89c <argp_parse@@Base+0x106c>
   1271c:	ldr	r5, [sp, #312]	; 0x138
   12720:	ldr	r0, [r5, #24]
   12724:	bl	117a4 <strdup@plt>
   12728:	ldr	r3, [pc, #72]	; 12778 <__assert_fail@plt+0xc68>
   1272c:	mov	r1, #46	; 0x2e
   12730:	str	r0, [r3]
   12734:	bl	11930 <strchr@plt>
   12738:	subs	r3, r0, #0
   1273c:	mov	r0, r5
   12740:	strbne	r6, [r3], #1
   12744:	strne	r3, [r4]
   12748:	bl	11a8c <freeaddrinfo@plt>
   1274c:	b	120b8 <__assert_fail@plt+0x5a8>
   12750:	andeq	sp, r1, ip, lsl #26
   12754:	muleq	r3, r4, r0
   12758:			; <UNDEFINED> instruction: 0x0001d5b8
   1275c:	andeq	pc, r2, r8, ror r5	; <UNPREDICTABLE>
   12760:	ldrdeq	sp, [r1], -r0
   12764:	andeq	pc, r2, r4, lsr r3	; <UNPREDICTABLE>
   12768:	ldrdeq	pc, [r2], -r4
   1276c:	andeq	pc, r2, r4, asr #24
   12770:	andeq	pc, r2, ip, lsr #24
   12774:	andeq	pc, r2, ip, asr #11
   12778:	andeq	pc, r2, r0, asr #24
   1277c:	strdeq	sp, [r1], -r0
   12780:	andeq	pc, r2, ip, lsr ip	; <UNPREDICTABLE>
   12784:	andeq	pc, r2, r4, asr sl	; <UNPREDICTABLE>
   12788:	andeq	pc, r2, r8, lsl r3	; <UNPREDICTABLE>
   1278c:	ldrdeq	r4, [r1], -ip
   12790:			; <UNDEFINED> instruction: 0x000144b0
   12794:	andeq	r2, r1, r8, ror #20
   12798:	andeq	pc, r2, r8, lsr #24
   1279c:	andeq	sp, r1, ip, lsl #12
   127a0:	andeq	pc, r2, r4, asr #20
   127a4:			; <UNDEFINED> instruction: 0x0002f1b0
   127a8:	andeq	pc, r2, r0, lsr ip	; <UNPREDICTABLE>
   127ac:	andeq	pc, r2, r8, lsl #25
   127b0:			; <UNDEFINED> instruction: 0x000001b6
   127b4:	andeq	sp, r1, r0, lsr #13
   127b8:	andeq	pc, r2, r8, asr #20
   127bc:	andeq	sp, r1, r0, lsr #15
   127c0:	andeq	sp, r1, r4, lsr #15
   127c4:	andeq	sp, r1, r8, lsr #15
   127c8:	andeq	r2, r1, r0, ror #18
   127cc:			; <UNDEFINED> instruction: 0x0001d7bc
   127d0:	andeq	sp, r1, r4, ror r8
   127d4:	muleq	r1, r4, sl
   127d8:			; <UNDEFINED> instruction: 0x00012ab4
   127dc:	ldrdeq	sp, [r1], -r8
   127e0:	andeq	r0, r0, r1, lsl #8
   127e4:	andeq	sp, r1, ip, asr r8
   127e8:	andeq	sp, r1, r8, ror #16
   127ec:	andeq	sp, r1, ip, lsr r8
   127f0:	andeq	sp, r1, ip, asr #16
   127f4:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   127f8:	andeq	sp, r1, r4, lsl #16
   127fc:	andeq	sp, r1, ip, lsr #16
   12800:	andeq	sp, r1, r4, lsr r8
   12804:	andeq	sp, r1, r8, lsl #14
   12808:	andeq	sp, r1, r4, asr #14
   1280c:	andeq	sp, r1, r4, ror #14
   12810:	andeq	sp, r1, r4, lsl #15
   12814:	andeq	sp, r1, r4, lsr #14
   12818:	andeq	sp, r1, r0, ror #13
   1281c:			; <UNDEFINED> instruction: 0x0001d6bc
   12820:	andeq	sp, r1, r4, lsr #12
   12824:	andeq	sp, r1, r0, lsr r6
   12828:	andeq	sp, r1, r4, asr r6
   1282c:	andeq	sp, r1, r0, asr #12
   12830:	andeq	sp, r1, r4, ror r6
   12834:	andeq	sp, r1, r8, lsl #13
   12838:	mov	fp, #0
   1283c:	mov	lr, #0
   12840:	pop	{r1}		; (ldr r1, [sp], #4)
   12844:	mov	r2, sp
   12848:	push	{r2}		; (str r2, [sp, #-4]!)
   1284c:	push	{r0}		; (str r0, [sp, #-4]!)
   12850:	ldr	ip, [pc, #16]	; 12868 <__assert_fail@plt+0xd58>
   12854:	push	{ip}		; (str ip, [sp, #-4]!)
   12858:	ldr	r0, [pc, #12]	; 1286c <__assert_fail@plt+0xd5c>
   1285c:	ldr	r3, [pc, #12]	; 12870 <__assert_fail@plt+0xd60>
   12860:	bl	118ac <__libc_start_main@plt>
   12864:	bl	11ae0 <abort@plt>
   12868:	strdeq	ip, [r1], -r4
   1286c:	andeq	r1, r1, ip, lsl fp
   12870:	muleq	r1, r4, lr
   12874:	ldr	r3, [pc, #20]	; 12890 <__assert_fail@plt+0xd80>
   12878:	ldr	r2, [pc, #20]	; 12894 <__assert_fail@plt+0xd84>
   1287c:	add	r3, pc, r3
   12880:	ldr	r2, [r3, r2]
   12884:	cmp	r2, #0
   12888:	bxeq	lr
   1288c:	b	118d0 <__gmon_start__@plt>
   12890:	andeq	ip, r1, ip, ror r7
   12894:	andeq	r0, r0, r4, lsr #3
   12898:	ldr	r3, [pc, #28]	; 128bc <__assert_fail@plt+0xdac>
   1289c:	ldr	r0, [pc, #28]	; 128c0 <__assert_fail@plt+0xdb0>
   128a0:	sub	r3, r3, r0
   128a4:	cmp	r3, #6
   128a8:	bxls	lr
   128ac:	ldr	r3, [pc, #16]	; 128c4 <__assert_fail@plt+0xdb4>
   128b0:	cmp	r3, #0
   128b4:	bxeq	lr
   128b8:	bx	r3
   128bc:			; <UNDEFINED> instruction: 0x0002f5bf
   128c0:			; <UNDEFINED> instruction: 0x0002f5bc
   128c4:	andeq	r0, r0, r0
   128c8:	ldr	r1, [pc, #36]	; 128f4 <__assert_fail@plt+0xde4>
   128cc:	ldr	r0, [pc, #36]	; 128f8 <__assert_fail@plt+0xde8>
   128d0:	sub	r1, r1, r0
   128d4:	asr	r1, r1, #2
   128d8:	add	r1, r1, r1, lsr #31
   128dc:	asrs	r1, r1, #1
   128e0:	bxeq	lr
   128e4:	ldr	r3, [pc, #16]	; 128fc <__assert_fail@plt+0xdec>
   128e8:	cmp	r3, #0
   128ec:	bxeq	lr
   128f0:	bx	r3
   128f4:			; <UNDEFINED> instruction: 0x0002f5bc
   128f8:			; <UNDEFINED> instruction: 0x0002f5bc
   128fc:	andeq	r0, r0, r0
   12900:	push	{r4, lr}
   12904:	ldr	r4, [pc, #24]	; 12924 <__assert_fail@plt+0xe14>
   12908:	ldrb	r3, [r4]
   1290c:	cmp	r3, #0
   12910:	popne	{r4, pc}
   12914:	bl	12898 <__assert_fail@plt+0xd88>
   12918:	mov	r3, #1
   1291c:	strb	r3, [r4]
   12920:	pop	{r4, pc}
   12924:	ldrdeq	pc, [r2], -r0
   12928:	ldr	r0, [pc, #40]	; 12958 <__assert_fail@plt+0xe48>
   1292c:	ldr	r3, [r0]
   12930:	cmp	r3, #0
   12934:	bne	1293c <__assert_fail@plt+0xe2c>
   12938:	b	128c8 <__assert_fail@plt+0xdb8>
   1293c:	ldr	r3, [pc, #24]	; 1295c <__assert_fail@plt+0xe4c>
   12940:	cmp	r3, #0
   12944:	beq	12938 <__assert_fail@plt+0xe28>
   12948:	push	{r4, lr}
   1294c:	blx	r3
   12950:	pop	{r4, lr}
   12954:	b	128c8 <__assert_fail@plt+0xdb8>
   12958:	andeq	lr, r2, ip, lsl #30
   1295c:	andeq	r0, r0, r0
   12960:	ldr	r3, [pc, #8]	; 12970 <__assert_fail@plt+0xe60>
   12964:	mov	r2, #1
   12968:	str	r2, [r3]
   1296c:	bx	lr
   12970:	ldrdeq	pc, [r2], -r4
   12974:	push	{r4, r5, r6, lr}
   12978:	mov	r6, r0
   1297c:	ldr	r4, [pc, #92]	; 129e0 <__assert_fail@plt+0xed0>
   12980:	ldr	r5, [pc, #92]	; 129e4 <__assert_fail@plt+0xed4>
   12984:	ldr	r1, [r4]
   12988:	ldr	r0, [r5]
   1298c:	add	r1, r1, #1
   12990:	lsl	r1, r1, #3
   12994:	bl	1b5d4 <argp_parse@@Base+0x1da4>
   12998:	cmp	r0, #0
   1299c:	str	r0, [r5]
   129a0:	beq	129c4 <__assert_fail@plt+0xeb4>
   129a4:	ldr	r3, [r4]
   129a8:	mvn	r1, #0
   129ac:	add	ip, r3, #1
   129b0:	add	r2, r0, r3, lsl #3
   129b4:	str	r6, [r0, r3, lsl #3]
   129b8:	str	ip, [r4]
   129bc:	str	r1, [r2, #4]
   129c0:	pop	{r4, r5, r6, pc}
   129c4:	bl	11948 <__errno_location@plt>
   129c8:	ldr	r2, [pc, #24]	; 129e8 <__assert_fail@plt+0xed8>
   129cc:	ldr	r1, [r0]
   129d0:	mov	r0, #1
   129d4:	bl	11858 <error@plt>
   129d8:	ldr	r0, [r5]
   129dc:	b	129a4 <__assert_fail@plt+0xe94>
   129e0:	andeq	pc, r2, r8, lsr #24
   129e4:	andeq	pc, r2, r8, lsl #25
   129e8:	andeq	ip, r1, r0, lsr #30
   129ec:	push	{r0, r1, r2, r3}
   129f0:	ldr	r3, [pc, #100]	; 12a5c <__assert_fail@plt+0xf4c>
   129f4:	push	{r4, lr}
   129f8:	sub	sp, sp, #8
   129fc:	ldr	r3, [r3]
   12a00:	cmp	r3, #0
   12a04:	beq	12a18 <__assert_fail@plt+0xf08>
   12a08:	ldr	r3, [pc, #80]	; 12a60 <__assert_fail@plt+0xf50>
   12a0c:	ldr	r3, [r3, #4]
   12a10:	cmp	r3, #0
   12a14:	bne	12a28 <__assert_fail@plt+0xf18>
   12a18:	add	sp, sp, #8
   12a1c:	pop	{r4, lr}
   12a20:	add	sp, sp, #16
   12a24:	bx	lr
   12a28:	ldr	r4, [pc, #52]	; 12a64 <__assert_fail@plt+0xf54>
   12a2c:	add	r3, sp, #20
   12a30:	mov	r2, r3
   12a34:	ldr	r1, [sp, #16]
   12a38:	ldr	r0, [r4]
   12a3c:	str	r3, [sp, #4]
   12a40:	bl	11a2c <vfprintf@plt>
   12a44:	ldr	r0, [r4]
   12a48:	bl	116cc <fflush@plt>
   12a4c:	add	sp, sp, #8
   12a50:	pop	{r4, lr}
   12a54:	add	sp, sp, #16
   12a58:	bx	lr
   12a5c:	andeq	pc, r2, r4, asr #24
   12a60:	ldrdeq	pc, [r2], -r4
   12a64:	andeq	pc, r2, ip, asr #11
   12a68:	push	{r4, r5, r6, lr}
   12a6c:	mov	r3, #1
   12a70:	ldr	r5, [pc, #44]	; 12aa4 <__assert_fail@plt+0xf94>
   12a74:	ldr	r2, [pc, #44]	; 12aa8 <__assert_fail@plt+0xf98>
   12a78:	ldr	r1, [pc, #44]	; 12aac <__assert_fail@plt+0xf9c>
   12a7c:	ldr	r4, [r5, #4]
   12a80:	ldr	r0, [pc, #40]	; 12ab0 <__assert_fail@plt+0xfa0>
   12a84:	cmp	r4, #0
   12a88:	movne	r1, r2
   12a8c:	str	r3, [r5, #4]
   12a90:	bl	129ec <__assert_fail@plt+0xedc>
   12a94:	clz	r3, r4
   12a98:	lsr	r3, r3, #5
   12a9c:	str	r3, [r5, #4]
   12aa0:	pop	{r4, r5, r6, pc}
   12aa4:	ldrdeq	pc, [r2], -r4
   12aa8:	andeq	ip, r1, r0, asr pc
   12aac:	andeq	ip, r1, r8, asr #30
   12ab0:	andeq	ip, r1, r8, asr pc
   12ab4:	push	{r4, lr}
   12ab8:	mov	r0, #0
   12abc:	bl	11738 <_exit@plt>
   12ac0:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12ac4:	mov	r8, r0
   12ac8:	mov	r4, r1
   12acc:	mov	r5, #0
   12ad0:	b	12ad8 <__assert_fail@plt+0xfc8>
   12ad4:	strb	r5, [r4, r0]
   12ad8:	mov	r0, r4
   12adc:	bl	11918 <strlen@plt>
   12ae0:	sub	r0, r0, #1
   12ae4:	ldrb	r3, [r4, r0]
   12ae8:	cmp	r3, #58	; 0x3a
   12aec:	beq	12ad4 <__assert_fail@plt+0xfc4>
   12af0:	ldrb	r3, [r4]
   12af4:	cmp	r3, #58	; 0x3a
   12af8:	bne	12b08 <__assert_fail@plt+0xff8>
   12afc:	ldrb	r3, [r4, #1]!
   12b00:	cmp	r3, #58	; 0x3a
   12b04:	beq	12afc <__assert_fail@plt+0xfec>
   12b08:	cmp	r3, #0
   12b0c:	beq	12c40 <__assert_fail@plt+0x1130>
   12b10:	ldrb	r3, [r4]
   12b14:	cmp	r3, #0
   12b18:	beq	12c64 <__assert_fail@plt+0x1154>
   12b1c:	mov	r2, r4
   12b20:	mov	r1, #1
   12b24:	cmp	r3, #58	; 0x3a
   12b28:	ldrb	r3, [r2, #1]!
   12b2c:	addeq	r1, r1, #1
   12b30:	cmp	r3, #0
   12b34:	bne	12b24 <__assert_fail@plt+0x1014>
   12b38:	cmp	r8, #0
   12b3c:	beq	12c84 <__assert_fail@plt+0x1174>
   12b40:	ldr	r6, [r8]
   12b44:	cmp	r6, #0
   12b48:	beq	12b64 <__assert_fail@plt+0x1054>
   12b4c:	mov	r3, r8
   12b50:	mov	r6, #0
   12b54:	ldr	r2, [r3, #4]!
   12b58:	add	r6, r6, #1
   12b5c:	cmp	r2, #0
   12b60:	bne	12b54 <__assert_fail@plt+0x1044>
   12b64:	add	r1, r6, r1
   12b68:	add	r1, r1, #1
   12b6c:	mov	r0, r8
   12b70:	lsl	r1, r1, #2
   12b74:	bl	1b5d4 <argp_parse@@Base+0x1da4>
   12b78:	subs	r8, r0, #0
   12b7c:	beq	12c6c <__assert_fail@plt+0x115c>
   12b80:	add	r7, r8, r6, lsl #2
   12b84:	mov	r9, #58	; 0x3a
   12b88:	mov	sl, #0
   12b8c:	b	12bc0 <__assert_fail@plt+0x10b0>
   12b90:	bl	1b5a8 <argp_parse@@Base+0x1d78>
   12b94:	mov	r3, r0
   12b98:	cmp	r0, #0
   12b9c:	str	r3, [r7]
   12ba0:	beq	12c48 <__assert_fail@plt+0x1138>
   12ba4:	mov	r1, r4
   12ba8:	mov	r2, fp
   12bac:	bl	11990 <strncpy@plt>
   12bb0:	ldr	r3, [r7], #4
   12bb4:	add	r6, r6, #1
   12bb8:	add	r4, r5, #1
   12bbc:	strb	sl, [r3, fp]
   12bc0:	mov	r1, r9
   12bc4:	mov	r0, r4
   12bc8:	bl	11930 <strchr@plt>
   12bcc:	subs	r5, r0, #0
   12bd0:	sub	fp, r5, r4
   12bd4:	add	r0, fp, #1
   12bd8:	bne	12b90 <__assert_fail@plt+0x1080>
   12bdc:	mov	r0, r4
   12be0:	bl	11918 <strlen@plt>
   12be4:	add	r7, r8, r6, lsl #2
   12be8:	add	r0, r0, #1
   12bec:	bl	1afec <argp_parse@@Base+0x17bc>
   12bf0:	mov	r1, r4
   12bf4:	str	r0, [r8, r6, lsl #2]
   12bf8:	bl	1184c <strcpy@plt>
   12bfc:	ldr	r3, [pc, #136]	; 12c8c <__assert_fail@plt+0x117c>
   12c00:	str	r5, [r7, #4]
   12c04:	ldr	r3, [r3]
   12c08:	cmp	r3, #0
   12c0c:	beq	12c40 <__assert_fail@plt+0x1130>
   12c10:	ldr	r2, [r8]
   12c14:	cmp	r2, #0
   12c18:	beq	12c40 <__assert_fail@plt+0x1130>
   12c1c:	ldr	r6, [pc, #108]	; 12c90 <__assert_fail@plt+0x1180>
   12c20:	mov	r4, r8
   12c24:	mov	r1, r5
   12c28:	mov	r0, r6
   12c2c:	bl	116b4 <printf@plt>
   12c30:	ldr	r2, [r4, #4]!
   12c34:	add	r5, r5, #1
   12c38:	cmp	r2, #0
   12c3c:	bne	12c24 <__assert_fail@plt+0x1114>
   12c40:	mov	r0, r8
   12c44:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12c48:	bl	11948 <__errno_location@plt>
   12c4c:	ldr	r2, [pc, #64]	; 12c94 <__assert_fail@plt+0x1184>
   12c50:	ldr	r1, [r0]
   12c54:	mov	r0, #1
   12c58:	bl	11858 <error@plt>
   12c5c:	ldr	r0, [r7]
   12c60:	b	12ba4 <__assert_fail@plt+0x1094>
   12c64:	mov	r1, #1
   12c68:	b	12b38 <__assert_fail@plt+0x1028>
   12c6c:	bl	11948 <__errno_location@plt>
   12c70:	ldr	r2, [pc, #28]	; 12c94 <__assert_fail@plt+0x1184>
   12c74:	ldr	r1, [r0]
   12c78:	mov	r0, #1
   12c7c:	bl	11858 <error@plt>
   12c80:	b	12b80 <__assert_fail@plt+0x1070>
   12c84:	mov	r6, r8
   12c88:	b	12b64 <__assert_fail@plt+0x1054>
   12c8c:	andeq	pc, r2, ip, lsr #24
   12c90:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   12c94:	andeq	ip, r1, r8, ror pc
   12c98:	sub	r0, r0, #52	; 0x34
   12c9c:	push	{r4, r5, r6, lr}
   12ca0:	mov	r4, r1
   12ca4:	sub	sp, sp, #8
   12ca8:	cmp	r0, #207	; 0xcf
   12cac:	ldrls	pc, [pc, r0, lsl #2]
   12cb0:	b	131e4 <__assert_fail@plt+0x16d4>
   12cb4:	ldrdeq	r3, [r1], -r0
   12cb8:	andeq	r3, r1, r4, ror #3
   12cbc:			; <UNDEFINED> instruction: 0x000131bc
   12cc0:	andeq	r3, r1, r4, ror #3
   12cc4:	andeq	r3, r1, r4, ror #3
   12cc8:	andeq	r3, r1, r4, ror #3
   12ccc:	andeq	r3, r1, r4, ror #3
   12cd0:	andeq	r3, r1, r4, ror #3
   12cd4:	andeq	r3, r1, r4, ror #3
   12cd8:	andeq	r3, r1, r4, ror #3
   12cdc:	andeq	r3, r1, r4, ror #3
   12ce0:	andeq	r3, r1, r4, ror #3
   12ce4:	andeq	r3, r1, r4, ror #3
   12ce8:	andeq	r3, r1, r4, ror #3
   12cec:	andeq	r3, r1, ip, lsr #3
   12cf0:	andeq	r3, r1, r4, ror #3
   12cf4:	muleq	r1, ip, r1
   12cf8:	andeq	r3, r1, r4, ror #3
   12cfc:	andeq	r3, r1, r4, ror #3
   12d00:	andeq	r3, r1, r4, ror #3
   12d04:	andeq	r3, r1, r4, ror #3
   12d08:	andeq	r3, r1, r4, ror #3
   12d0c:	andeq	r3, r1, r4, ror #3
   12d10:	andeq	r3, r1, r4, ror #3
   12d14:	andeq	r3, r1, r4, ror #3
   12d18:	andeq	r3, r1, r4, ror #3
   12d1c:	andeq	r3, r1, r4, ror #3
   12d20:	andeq	r3, r1, r4, ror #3
   12d24:	andeq	r3, r1, ip, lsl #3
   12d28:	andeq	r3, r1, r4, ror #3
   12d2c:	andeq	r3, r1, r4, ror #3
   12d30:	andeq	r3, r1, r8, ror r1
   12d34:	andeq	r3, r1, r4, ror #2
   12d38:	andeq	r3, r1, r4, ror #3
   12d3c:	andeq	r3, r1, r4, ror #3
   12d40:	andeq	r3, r1, r4, ror #3
   12d44:	andeq	r3, r1, r4, ror #3
   12d48:	andeq	r3, r1, r4, ror #3
   12d4c:	andeq	r3, r1, r4, ror #3
   12d50:	andeq	r3, r1, r4, ror #3
   12d54:	andeq	r3, r1, r4, ror #3
   12d58:	andeq	r3, r1, r4, ror #3
   12d5c:	andeq	r3, r1, r4, ror #3
   12d60:	andeq	r3, r1, r4, ror #3
   12d64:	andeq	r3, r1, r4, ror #3
   12d68:	andeq	r3, r1, r4, asr r1
   12d6c:	andeq	r3, r1, r4, asr #2
   12d70:	andeq	r3, r1, r4, ror #3
   12d74:	andeq	r3, r1, r8, lsr #2
   12d78:	andeq	r3, r1, r4, ror #3
   12d7c:	andeq	r3, r1, r8, lsl r1
   12d80:	andeq	r3, r1, r4, ror #3
   12d84:	andeq	r3, r1, r4, lsl #2
   12d88:	andeq	r3, r1, r4, ror #3
   12d8c:	andeq	r3, r1, r4, ror #3
   12d90:	andeq	r3, r1, r4, ror #3
   12d94:	strdeq	r3, [r1], -ip
   12d98:	andeq	r3, r1, ip, lsr #1
   12d9c:	muleq	r1, r8, r0
   12da0:	andeq	r3, r1, r4, ror #3
   12da4:	andeq	r3, r1, ip, ror r0
   12da8:	andeq	r3, r1, r4, ror #3
   12dac:	andeq	r3, r1, r8, rrx
   12db0:	andeq	r3, r1, ip, asr #32
   12db4:	andeq	r3, r1, r4, ror #3
   12db8:	andeq	r3, r1, r4, ror #3
   12dbc:	andeq	r3, r1, r4, ror #3
   12dc0:	andeq	r3, r1, r4, ror #3
   12dc4:	andeq	r3, r1, r4, ror #3
   12dc8:	andeq	r3, r1, r4, ror #3
   12dcc:	andeq	r3, r1, r4, ror #3
   12dd0:	andeq	r3, r1, r4, ror #3
   12dd4:	andeq	r3, r1, r4, ror #3
   12dd8:	andeq	r3, r1, r4, ror #3
   12ddc:	andeq	r3, r1, r4, ror #3
   12de0:	andeq	r3, r1, r4, ror #3
   12de4:	andeq	r3, r1, r4, ror #3
   12de8:	andeq	r3, r1, r4, ror #3
   12dec:	andeq	r3, r1, r4, ror #3
   12df0:	andeq	r3, r1, r4, ror #3
   12df4:	andeq	r3, r1, r4, ror #3
   12df8:	andeq	r3, r1, r4, ror #3
   12dfc:	andeq	r3, r1, r4, ror #3
   12e00:	andeq	r3, r1, r4, ror #3
   12e04:	andeq	r3, r1, r4, ror #3
   12e08:	andeq	r3, r1, r4, ror #3
   12e0c:	andeq	r3, r1, r4, ror #3
   12e10:	andeq	r3, r1, r4, ror #3
   12e14:	andeq	r3, r1, r4, ror #3
   12e18:	andeq	r3, r1, r4, ror #3
   12e1c:	andeq	r3, r1, r4, ror #3
   12e20:	andeq	r3, r1, r4, ror #3
   12e24:	andeq	r3, r1, r4, ror #3
   12e28:	andeq	r3, r1, r4, ror #3
   12e2c:	andeq	r3, r1, r4, ror #3
   12e30:	andeq	r3, r1, r4, ror #3
   12e34:	andeq	r3, r1, r4, ror #3
   12e38:	andeq	r3, r1, r4, ror #3
   12e3c:	andeq	r3, r1, r4, ror #3
   12e40:	andeq	r3, r1, r4, ror #3
   12e44:	andeq	r3, r1, r4, ror #3
   12e48:	andeq	r3, r1, r4, ror #3
   12e4c:	andeq	r3, r1, r4, ror #3
   12e50:	andeq	r3, r1, r4, ror #3
   12e54:	andeq	r3, r1, r4, ror #3
   12e58:	andeq	r3, r1, r4, ror #3
   12e5c:	andeq	r3, r1, r4, ror #3
   12e60:	andeq	r3, r1, r4, ror #3
   12e64:	andeq	r3, r1, r4, ror #3
   12e68:	andeq	r3, r1, r4, ror #3
   12e6c:	andeq	r3, r1, r4, ror #3
   12e70:	andeq	r3, r1, r4, ror #3
   12e74:	andeq	r3, r1, r4, ror #3
   12e78:	andeq	r3, r1, r4, ror #3
   12e7c:	andeq	r3, r1, r4, ror #3
   12e80:	andeq	r3, r1, r4, ror #3
   12e84:	andeq	r3, r1, r4, ror #3
   12e88:	andeq	r3, r1, r4, ror #3
   12e8c:	andeq	r3, r1, r4, ror #3
   12e90:	andeq	r3, r1, r4, ror #3
   12e94:	andeq	r3, r1, r4, ror #3
   12e98:	andeq	r3, r1, r4, ror #3
   12e9c:	andeq	r3, r1, r4, ror #3
   12ea0:	andeq	r3, r1, r4, ror #3
   12ea4:	andeq	r3, r1, r4, ror #3
   12ea8:	andeq	r3, r1, r4, ror #3
   12eac:	andeq	r3, r1, r4, ror #3
   12eb0:	andeq	r3, r1, r4, ror #3
   12eb4:	andeq	r3, r1, r4, ror #3
   12eb8:	andeq	r3, r1, r4, ror #3
   12ebc:	andeq	r3, r1, r4, ror #3
   12ec0:	andeq	r3, r1, r4, ror #3
   12ec4:	andeq	r3, r1, r4, ror #3
   12ec8:	andeq	r3, r1, r4, ror #3
   12ecc:	andeq	r3, r1, r4, ror #3
   12ed0:	andeq	r3, r1, r4, ror #3
   12ed4:	andeq	r3, r1, r4, ror #3
   12ed8:	andeq	r3, r1, r4, ror #3
   12edc:	andeq	r3, r1, r4, ror #3
   12ee0:	andeq	r3, r1, r4, ror #3
   12ee4:	andeq	r3, r1, r4, ror #3
   12ee8:	andeq	r3, r1, r4, ror #3
   12eec:	andeq	r3, r1, r4, ror #3
   12ef0:	andeq	r3, r1, r4, ror #3
   12ef4:	andeq	r3, r1, r4, ror #3
   12ef8:	andeq	r3, r1, r4, ror #3
   12efc:	andeq	r3, r1, r4, ror #3
   12f00:	andeq	r3, r1, r4, ror #3
   12f04:	andeq	r3, r1, r4, ror #3
   12f08:	andeq	r3, r1, r4, ror #3
   12f0c:	andeq	r3, r1, r4, ror #3
   12f10:	andeq	r3, r1, r4, ror #3
   12f14:	andeq	r3, r1, r4, ror #3
   12f18:	andeq	r3, r1, r4, ror #3
   12f1c:	andeq	r3, r1, r4, ror #3
   12f20:	andeq	r3, r1, r4, ror #3
   12f24:	andeq	r3, r1, r4, ror #3
   12f28:	andeq	r3, r1, r4, ror #3
   12f2c:	andeq	r3, r1, r4, ror #3
   12f30:	andeq	r3, r1, r4, ror #3
   12f34:	andeq	r3, r1, r4, ror #3
   12f38:	andeq	r3, r1, r4, ror #3
   12f3c:	andeq	r3, r1, r4, ror #3
   12f40:	andeq	r3, r1, r4, ror #3
   12f44:	andeq	r3, r1, r4, ror #3
   12f48:	andeq	r3, r1, r4, ror #3
   12f4c:	andeq	r3, r1, r4, ror #3
   12f50:	andeq	r3, r1, r4, ror #3
   12f54:	andeq	r3, r1, r4, ror #3
   12f58:	andeq	r3, r1, r4, ror #3
   12f5c:	andeq	r3, r1, r4, ror #3
   12f60:	andeq	r3, r1, r4, ror #3
   12f64:	andeq	r3, r1, r4, ror #3
   12f68:	andeq	r3, r1, r4, ror #3
   12f6c:	andeq	r3, r1, r4, ror #3
   12f70:	andeq	r3, r1, r4, ror #3
   12f74:	andeq	r3, r1, r4, ror #3
   12f78:	andeq	r3, r1, r4, ror #3
   12f7c:	andeq	r3, r1, r4, ror #3
   12f80:	andeq	r3, r1, r4, ror #3
   12f84:	andeq	r3, r1, r4, ror #3
   12f88:	andeq	r3, r1, r4, ror #3
   12f8c:	andeq	r3, r1, r4, ror #3
   12f90:	andeq	r3, r1, r4, ror #3
   12f94:	andeq	r3, r1, r4, ror #3
   12f98:	andeq	r3, r1, r4, ror #3
   12f9c:	andeq	r3, r1, r4, ror #3
   12fa0:	andeq	r3, r1, r4, ror #3
   12fa4:	andeq	r3, r1, r4, ror #3
   12fa8:	andeq	r3, r1, r4, ror #3
   12fac:	andeq	r3, r1, r4, ror #3
   12fb0:	andeq	r3, r1, r4, ror #3
   12fb4:	andeq	r3, r1, r4, ror #3
   12fb8:	andeq	r3, r1, r4, ror #3
   12fbc:	andeq	r3, r1, r4, ror #3
   12fc0:	andeq	r3, r1, r4, ror #3
   12fc4:	andeq	r3, r1, r4, ror #3
   12fc8:	andeq	r3, r1, r4, ror #3
   12fcc:	andeq	r3, r1, r4, ror #3
   12fd0:	andeq	r3, r1, r4, ror #3
   12fd4:	andeq	r3, r1, r4, ror #3
   12fd8:	andeq	r3, r1, r4, ror #3
   12fdc:	andeq	r3, r1, r4, ror #3
   12fe0:	andeq	r3, r1, r4, ror #3
   12fe4:	andeq	r3, r1, r8, lsr r0
   12fe8:	andeq	r3, r1, r4, lsr #32
   12fec:	andeq	r3, r1, r0, lsl r0
   12ff0:	strdeq	r2, [r1], -r4
   12ff4:	mov	r2, #0
   12ff8:	ldr	r1, [pc, #492]	; 131ec <__assert_fail@plt+0x16dc>
   12ffc:	mov	r3, r2
   13000:	str	r2, [r1, #4]
   13004:	mov	r0, r3
   13008:	add	sp, sp, #8
   1300c:	pop	{r4, r5, r6, pc}
   13010:	ldr	r2, [pc, #472]	; 131f0 <__assert_fail@plt+0x16e0>
   13014:	mov	r1, #1
   13018:	mov	r3, #0
   1301c:	str	r1, [r2]
   13020:	b	13004 <__assert_fail@plt+0x14f4>
   13024:	ldr	r2, [pc, #456]	; 131f4 <__assert_fail@plt+0x16e4>
   13028:	mov	r1, #1
   1302c:	mov	r3, #0
   13030:	str	r1, [r2]
   13034:	b	13004 <__assert_fail@plt+0x14f4>
   13038:	ldr	r2, [pc, #440]	; 131f8 <__assert_fail@plt+0x16e8>
   1303c:	mov	r1, #1
   13040:	mov	r3, #0
   13044:	str	r1, [r2]
   13048:	b	13004 <__assert_fail@plt+0x14f4>
   1304c:	ldr	r5, [pc, #424]	; 131fc <__assert_fail@plt+0x16ec>
   13050:	mov	r1, r4
   13054:	ldr	r0, [r5]
   13058:	bl	12ac0 <__assert_fail@plt+0xfb0>
   1305c:	mov	r3, #0
   13060:	str	r0, [r5]
   13064:	b	13004 <__assert_fail@plt+0x14f4>
   13068:	ldr	r2, [pc, #400]	; 13200 <__assert_fail@plt+0x16f0>
   1306c:	mov	r1, #1
   13070:	mov	r3, #0
   13074:	str	r1, [r2]
   13078:	b	13004 <__assert_fail@plt+0x14f4>
   1307c:	ldr	r2, [pc, #384]	; 13204 <__assert_fail@plt+0x16f4>
   13080:	mvn	r1, #0
   13084:	mov	r3, #0
   13088:	ldr	r2, [r2]
   1308c:	str	r4, [r2]
   13090:	str	r1, [r2, #4]
   13094:	b	13004 <__assert_fail@plt+0x14f4>
   13098:	ldr	r2, [pc, #360]	; 13208 <__assert_fail@plt+0x16f8>
   1309c:	mov	r1, #1
   130a0:	mov	r3, #0
   130a4:	str	r1, [r2]
   130a8:	b	13004 <__assert_fail@plt+0x14f4>
   130ac:	mov	r5, r2
   130b0:	add	r1, sp, #4
   130b4:	mov	r2, #10
   130b8:	mov	r0, r4
   130bc:	bl	11690 <strtol@plt>
   130c0:	ldr	r3, [sp, #4]
   130c4:	ldrb	r2, [r3]
   130c8:	cmp	r2, #0
   130cc:	mov	r6, r0
   130d0:	beq	130e4 <__assert_fail@plt+0x15d4>
   130d4:	mov	r2, r4
   130d8:	mov	r0, r5
   130dc:	ldr	r1, [pc, #296]	; 1320c <__assert_fail@plt+0x16fc>
   130e0:	bl	1918c <argp_error@@Base>
   130e4:	rsb	r6, r6, r6, lsl #4
   130e8:	ldr	r2, [pc, #252]	; 131ec <__assert_fail@plt+0x16dc>
   130ec:	lsl	r6, r6, #2
   130f0:	mov	r3, #0
   130f4:	str	r6, [r2, #8]
   130f8:	b	13004 <__assert_fail@plt+0x14f4>
   130fc:	ldr	r5, [pc, #268]	; 13210 <__assert_fail@plt+0x1700>
   13100:	b	13050 <__assert_fail@plt+0x1540>
   13104:	ldr	r1, [pc, #224]	; 131ec <__assert_fail@plt+0x16dc>
   13108:	mov	r2, #0
   1310c:	mov	r3, r2
   13110:	str	r2, [r1]
   13114:	b	13004 <__assert_fail@plt+0x14f4>
   13118:	ldr	r2, [pc, #204]	; 131ec <__assert_fail@plt+0x16dc>
   1311c:	mov	r3, #0
   13120:	str	r1, [r2, #16]
   13124:	b	13004 <__assert_fail@plt+0x14f4>
   13128:	ldr	r1, [pc, #228]	; 13214 <__assert_fail@plt+0x1704>
   1312c:	ldr	r2, [pc, #212]	; 13208 <__assert_fail@plt+0x16f8>
   13130:	mov	r3, #1
   13134:	str	r3, [r1]
   13138:	str	r3, [r2]
   1313c:	mov	r3, #0
   13140:	b	13004 <__assert_fail@plt+0x14f4>
   13144:	ldr	r2, [pc, #204]	; 13218 <__assert_fail@plt+0x1708>
   13148:	mov	r3, #0
   1314c:	str	r1, [r2, #8]
   13150:	b	13004 <__assert_fail@plt+0x14f4>
   13154:	mov	r0, r1
   13158:	bl	12974 <__assert_fail@plt+0xe64>
   1315c:	mov	r3, #0
   13160:	b	13004 <__assert_fail@plt+0x14f4>
   13164:	ldr	r2, [pc, #172]	; 13218 <__assert_fail@plt+0x1708>
   13168:	mov	r1, #1
   1316c:	mov	r3, #0
   13170:	str	r1, [r2, #16]
   13174:	b	13004 <__assert_fail@plt+0x14f4>
   13178:	ldr	r2, [pc, #156]	; 1321c <__assert_fail@plt+0x170c>
   1317c:	mov	r1, #1
   13180:	mov	r3, #0
   13184:	str	r1, [r2]
   13188:	b	13004 <__assert_fail@plt+0x14f4>
   1318c:	ldr	r2, [pc, #88]	; 131ec <__assert_fail@plt+0x16dc>
   13190:	mov	r3, #0
   13194:	str	r1, [r2, #12]
   13198:	b	13004 <__assert_fail@plt+0x14f4>
   1319c:	ldr	r2, [pc, #72]	; 131ec <__assert_fail@plt+0x16dc>
   131a0:	mov	r3, #0
   131a4:	str	r1, [r2, #20]
   131a8:	b	13004 <__assert_fail@plt+0x14f4>
   131ac:	ldr	r2, [pc, #100]	; 13218 <__assert_fail@plt+0x1708>
   131b0:	mov	r3, #0
   131b4:	str	r1, [r2, #12]
   131b8:	b	13004 <__assert_fail@plt+0x14f4>
   131bc:	ldr	r2, [pc, #40]	; 131ec <__assert_fail@plt+0x16dc>
   131c0:	mov	r1, #10
   131c4:	mov	r3, #0
   131c8:	str	r1, [r2, #4]
   131cc:	b	13004 <__assert_fail@plt+0x14f4>
   131d0:	ldr	r2, [pc, #20]	; 131ec <__assert_fail@plt+0x16dc>
   131d4:	mov	r1, #2
   131d8:	mov	r3, #0
   131dc:	str	r1, [r2, #4]
   131e0:	b	13004 <__assert_fail@plt+0x14f4>
   131e4:	mov	r3, #7
   131e8:	b	13004 <__assert_fail@plt+0x14f4>
   131ec:			; <UNDEFINED> instruction: 0x0002f1b0
   131f0:	andeq	pc, r2, r0, lsr ip	; <UNPREDICTABLE>
   131f4:	andeq	pc, r2, r4, asr #20
   131f8:	andeq	pc, r2, r4, lsl #25
   131fc:	andeq	pc, r2, r4, lsr #24
   13200:	andeq	pc, r2, r8, asr #20
   13204:	andeq	pc, r2, r8, lsl #25
   13208:	andeq	pc, r2, r4, asr #24
   1320c:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   13210:	andeq	pc, r2, ip, asr #24
   13214:	andeq	pc, r2, ip, lsr #24
   13218:	ldrdeq	pc, [r2], -r4
   1321c:	andeq	pc, r2, r4, lsr ip	; <UNPREDICTABLE>
   13220:	push	{lr}		; (str lr, [sp, #-4]!)
   13224:	sub	sp, sp, #12
   13228:	ldr	lr, [pc, #156]	; 132cc <__assert_fail@plt+0x17bc>
   1322c:	ldr	r3, [lr, #24]
   13230:	cmp	r3, #0
   13234:	beq	1326c <__assert_fail@plt+0x175c>
   13238:	ldr	r2, [lr, #28]
   1323c:	and	ip, r0, #1016	; 0x3f8
   13240:	cmp	r2, ip
   13244:	beq	1326c <__assert_fail@plt+0x175c>
   13248:	add	r2, lr, #24
   1324c:	b	1325c <__assert_fail@plt+0x174c>
   13250:	ldr	r1, [r2, #4]
   13254:	cmp	r1, ip
   13258:	beq	1326c <__assert_fail@plt+0x175c>
   1325c:	ldr	r3, [r2, #8]
   13260:	add	r2, r2, #8
   13264:	cmp	r3, #0
   13268:	bne	13250 <__assert_fail@plt+0x1740>
   1326c:	ldr	r1, [lr, #208]	; 0xd0
   13270:	cmp	r1, #0
   13274:	beq	132ac <__assert_fail@plt+0x179c>
   13278:	ldr	r2, [lr, #212]	; 0xd4
   1327c:	and	r0, r0, #7
   13280:	cmp	r0, r2
   13284:	beq	132ac <__assert_fail@plt+0x179c>
   13288:	ldr	r2, [pc, #64]	; 132d0 <__assert_fail@plt+0x17c0>
   1328c:	b	1329c <__assert_fail@plt+0x178c>
   13290:	ldr	ip, [r2, #4]
   13294:	cmp	ip, r0
   13298:	beq	132ac <__assert_fail@plt+0x179c>
   1329c:	ldr	r1, [r2, #8]
   132a0:	add	r2, r2, #8
   132a4:	cmp	r1, #0
   132a8:	bne	13290 <__assert_fail@plt+0x1780>
   132ac:	str	r1, [sp]
   132b0:	ldr	r2, [pc, #28]	; 132d4 <__assert_fail@plt+0x17c4>
   132b4:	mov	r1, #20
   132b8:	ldr	r0, [pc, #24]	; 132d8 <__assert_fail@plt+0x17c8>
   132bc:	bl	11954 <snprintf@plt>
   132c0:	ldr	r0, [pc, #16]	; 132d8 <__assert_fail@plt+0x17c8>
   132c4:	add	sp, sp, #12
   132c8:	pop	{pc}		; (ldr pc, [sp], #4)
   132cc:			; <UNDEFINED> instruction: 0x0002f1b0
   132d0:	andeq	pc, r2, r0, lsl #5
   132d4:			; <UNDEFINED> instruction: 0x0001cfbc
   132d8:	andeq	pc, r2, r8, ror #11
   132dc:	push	{r4, r5, r6, lr}
   132e0:	sub	sp, sp, #16
   132e4:	mov	r3, #0
   132e8:	mov	r2, #1
   132ec:	str	r2, [sp, #8]
   132f0:	str	r3, [sp, #4]
   132f4:	str	r3, [sp]
   132f8:	ldr	r2, [pc, #332]	; 1344c <__assert_fail@plt+0x193c>
   132fc:	mov	r3, #46	; 0x2e
   13300:	mov	r5, r0
   13304:	mov	r6, r1
   13308:	bl	11a14 <getnameinfo@plt>
   1330c:	subs	r4, r0, #0
   13310:	bne	133c8 <__assert_fail@plt+0x18b8>
   13314:	ldr	r1, [pc, #304]	; 1344c <__assert_fail@plt+0x193c>
   13318:	ldr	r0, [pc, #304]	; 13450 <__assert_fail@plt+0x1940>
   1331c:	bl	129ec <__assert_fail@plt+0xedc>
   13320:	mov	r3, #8
   13324:	str	r3, [sp, #8]
   13328:	str	r4, [sp, #4]
   1332c:	str	r4, [sp]
   13330:	mov	r1, r6
   13334:	mov	r0, r5
   13338:	ldr	r3, [pc, #276]	; 13454 <__assert_fail@plt+0x1944>
   1333c:	ldr	r2, [pc, #276]	; 13458 <__assert_fail@plt+0x1948>
   13340:	bl	11a14 <getnameinfo@plt>
   13344:	cmp	r0, #0
   13348:	bne	133e4 <__assert_fail@plt+0x18d4>
   1334c:	mov	r1, #46	; 0x2e
   13350:	ldr	r0, [pc, #256]	; 13458 <__assert_fail@plt+0x1948>
   13354:	bl	11930 <strchr@plt>
   13358:	subs	r6, r0, #0
   1335c:	beq	13440 <__assert_fail@plt+0x1930>
   13360:	ldr	r3, [pc, #244]	; 1345c <__assert_fail@plt+0x194c>
   13364:	add	r5, r6, #1
   13368:	mov	r0, r5
   1336c:	ldr	r1, [r3]
   13370:	bl	11804 <strcasecmp@plt>
   13374:	cmp	r0, #0
   13378:	beq	133b8 <__assert_fail@plt+0x18a8>
   1337c:	ldr	r3, [pc, #220]	; 13460 <__assert_fail@plt+0x1950>
   13380:	ldr	r4, [r3]
   13384:	cmp	r4, #0
   13388:	beq	133fc <__assert_fail@plt+0x18ec>
   1338c:	ldr	r1, [r4]
   13390:	cmp	r1, #0
   13394:	bne	133a8 <__assert_fail@plt+0x1898>
   13398:	b	133fc <__assert_fail@plt+0x18ec>
   1339c:	ldr	r1, [r4, #4]!
   133a0:	cmp	r1, #0
   133a4:	beq	133fc <__assert_fail@plt+0x18ec>
   133a8:	mov	r0, r5
   133ac:	bl	11804 <strcasecmp@plt>
   133b0:	cmp	r0, #0
   133b4:	bne	1339c <__assert_fail@plt+0x188c>
   133b8:	strb	r0, [r6]
   133bc:	ldr	r0, [pc, #148]	; 13458 <__assert_fail@plt+0x1948>
   133c0:	add	sp, sp, #16
   133c4:	pop	{r4, r5, r6, pc}
   133c8:	bl	11714 <gai_strerror@plt>
   133cc:	mov	r1, r0
   133d0:	ldr	r0, [pc, #140]	; 13464 <__assert_fail@plt+0x1954>
   133d4:	bl	129ec <__assert_fail@plt+0xedc>
   133d8:	ldr	r0, [pc, #136]	; 13468 <__assert_fail@plt+0x1958>
   133dc:	add	sp, sp, #16
   133e0:	pop	{r4, r5, r6, pc}
   133e4:	ldr	r1, [pc, #96]	; 1344c <__assert_fail@plt+0x193c>
   133e8:	ldr	r0, [pc, #124]	; 1346c <__assert_fail@plt+0x195c>
   133ec:	bl	129ec <__assert_fail@plt+0xedc>
   133f0:	ldr	r0, [pc, #84]	; 1344c <__assert_fail@plt+0x193c>
   133f4:	add	sp, sp, #16
   133f8:	pop	{r4, r5, r6, pc}
   133fc:	ldr	r3, [pc, #108]	; 13470 <__assert_fail@plt+0x1960>
   13400:	ldr	r4, [r3]
   13404:	cmp	r4, #0
   13408:	beq	13440 <__assert_fail@plt+0x1930>
   1340c:	ldr	r1, [r4]
   13410:	cmp	r1, #0
   13414:	beq	13440 <__assert_fail@plt+0x1930>
   13418:	ldr	r5, [pc, #56]	; 13458 <__assert_fail@plt+0x1948>
   1341c:	b	1342c <__assert_fail@plt+0x191c>
   13420:	ldr	r1, [r4, #4]!
   13424:	cmp	r1, #0
   13428:	beq	13440 <__assert_fail@plt+0x1930>
   1342c:	mov	r0, r5
   13430:	bl	11804 <strcasecmp@plt>
   13434:	cmp	r0, #0
   13438:	bne	13420 <__assert_fail@plt+0x1910>
   1343c:	b	133b8 <__assert_fail@plt+0x18a8>
   13440:	ldr	r0, [pc, #16]	; 13458 <__assert_fail@plt+0x1948>
   13444:	add	sp, sp, #16
   13448:	pop	{r4, r5, r6, pc}
   1344c:	andeq	pc, r2, r0, asr ip	; <UNPREDICTABLE>
   13450:	andeq	ip, r1, r8, ror #31
   13454:	andeq	r0, r0, r1, lsl #8
   13458:	muleq	r2, r0, ip
   1345c:	andeq	pc, r2, ip, lsr ip	; <UNPREDICTABLE>
   13460:	andeq	pc, r2, r4, lsr #24
   13464:	andeq	ip, r1, r8, asr #31
   13468:	andeq	ip, r1, r4, asr #31
   1346c:	strdeq	ip, [r1], -r8
   13470:	andeq	pc, r2, ip, asr #24
   13474:	push	{r4, r5, r6, lr}
   13478:	sub	sp, sp, #112	; 0x70
   1347c:	mov	r6, r0
   13480:	bl	11948 <__errno_location@plt>
   13484:	mov	r5, r0
   13488:	ldr	r0, [r0]
   1348c:	cmp	r0, #0
   13490:	bne	134e0 <__assert_fail@plt+0x19d0>
   13494:	add	r4, sp, #12
   13498:	mov	r3, r6
   1349c:	mov	r0, r4
   134a0:	ldr	r2, [pc, #92]	; 13504 <__assert_fail@plt+0x19f4>
   134a4:	mov	r1, #100	; 0x64
   134a8:	bl	11954 <snprintf@plt>
   134ac:	mov	r3, #0
   134b0:	str	r3, [r5]
   134b4:	mov	r1, r4
   134b8:	ldr	r0, [pc, #72]	; 13508 <__assert_fail@plt+0x19f8>
   134bc:	bl	129ec <__assert_fail@plt+0xedc>
   134c0:	ldr	r2, [pc, #68]	; 1350c <__assert_fail@plt+0x19fc>
   134c4:	mov	r1, r4
   134c8:	mov	r3, #4
   134cc:	ldr	r2, [r2]
   134d0:	mov	r0, #43	; 0x2b
   134d4:	bl	13dac <__assert_fail@plt+0x229c>
   134d8:	add	sp, sp, #112	; 0x70
   134dc:	pop	{r4, r5, r6, pc}
   134e0:	bl	118b8 <strerror@plt>
   134e4:	add	r4, sp, #12
   134e8:	mov	r3, r6
   134ec:	ldr	r2, [pc, #28]	; 13510 <__assert_fail@plt+0x1a00>
   134f0:	mov	r1, #100	; 0x64
   134f4:	str	r0, [sp]
   134f8:	mov	r0, r4
   134fc:	bl	11954 <snprintf@plt>
   13500:	b	134ac <__assert_fail@plt+0x199c>
   13504:	andeq	sp, r1, r4, lsr r0
   13508:	andeq	lr, r1, ip, lsl r6
   1350c:	andeq	pc, r2, r0, asr #24
   13510:	andeq	sp, r1, r4, lsr #32
   13514:	ldr	r3, [pc, #380]	; 13698 <__assert_fail@plt+0x1b88>
   13518:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1351c:	sub	sp, sp, #60	; 0x3c
   13520:	ldr	r3, [r3, #40]	; 0x28
   13524:	ldr	r2, [pc, #364]	; 13698 <__assert_fail@plt+0x1b88>
   13528:	str	r3, [sp]
   1352c:	cmp	r3, #0
   13530:	add	r3, r3, #1
   13534:	str	r3, [r2, #40]	; 0x28
   13538:	beq	13544 <__assert_fail@plt+0x1a34>
   1353c:	add	sp, sp, #60	; 0x3c
   13540:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13544:	str	r1, [sp, #4]
   13548:	mov	sl, r0
   1354c:	mov	r3, #3
   13550:	add	r2, sp, #12
   13554:	add	r1, sp, #16
   13558:	ldr	r0, [pc, #316]	; 1369c <__assert_fail@plt+0x1b8c>
   1355c:	bl	1aacc <argp_parse@@Base+0x129c>
   13560:	cmp	r0, #0
   13564:	blt	13684 <__assert_fail@plt+0x1b74>
   13568:	ldr	r3, [sp, #16]
   1356c:	ldr	r9, [sp, #12]
   13570:	add	r3, r3, r3, lsl #1
   13574:	add	r3, r9, r3, lsl #7
   13578:	cmp	r9, r3
   1357c:	bcs	13690 <__assert_fail@plt+0x1b80>
   13580:	mov	r6, #32
   13584:	mov	r2, r6
   13588:	add	r1, r9, #8
   1358c:	add	r0, sp, #20
   13590:	bl	11990 <strncpy@plt>
   13594:	ldrsh	r3, [sl, #4]
   13598:	mov	r2, #0
   1359c:	strb	r2, [sp, #52]	; 0x34
   135a0:	cmp	r3, #6
   135a4:	beq	13650 <__assert_fail@plt+0x1b40>
   135a8:	ldr	r5, [sl, #40]	; 0x28
   135ac:	cmp	r5, #0
   135b0:	ble	1361c <__assert_fail@plt+0x1b0c>
   135b4:	ldr	r3, [sl, #44]	; 0x2c
   135b8:	add	r7, r9, #44	; 0x2c
   135bc:	sub	fp, r3, #4
   135c0:	ldr	r4, [sp]
   135c4:	b	135d0 <__assert_fail@plt+0x1ac0>
   135c8:	cmp	r4, r5
   135cc:	beq	1361c <__assert_fail@plt+0x1b0c>
   135d0:	mov	r2, r6
   135d4:	mov	r1, r7
   135d8:	ldr	r0, [fp, #4]!
   135dc:	bl	11ad4 <strncmp@plt>
   135e0:	add	r4, r4, #1
   135e4:	cmp	r0, #0
   135e8:	bne	135c8 <__assert_fail@plt+0x1ab8>
   135ec:	mov	r8, r0
   135f0:	mov	r3, #10
   135f4:	add	r2, sp, #20
   135f8:	mov	r1, #6
   135fc:	ldr	r0, [sp, #4]
   13600:	bl	15b1c <daemon@@Base+0x17c>
   13604:	subs	r4, r0, #0
   13608:	beq	1361c <__assert_fail@plt+0x1b0c>
   1360c:	bl	11948 <__errno_location@plt>
   13610:	str	r8, [r0]
   13614:	mov	r0, r4
   13618:	bl	13474 <__assert_fail@plt+0x1964>
   1361c:	ldr	r3, [sp, #16]
   13620:	ldr	r0, [sp, #12]
   13624:	add	r9, r9, #384	; 0x180
   13628:	add	r3, r3, r3, lsl #1
   1362c:	add	r3, r0, r3, lsl #7
   13630:	cmp	r9, r3
   13634:	bcc	13584 <__assert_fail@plt+0x1a74>
   13638:	bl	1a89c <argp_parse@@Base+0x106c>
   1363c:	ldr	r2, [pc, #84]	; 13698 <__assert_fail@plt+0x1b88>
   13640:	mov	r3, #0
   13644:	str	r3, [r2, #40]	; 0x28
   13648:	add	sp, sp, #60	; 0x3c
   1364c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13650:	mov	r3, #10
   13654:	add	r2, sp, #20
   13658:	mov	r1, #6
   1365c:	ldr	r0, [sp, #4]
   13660:	bl	15b1c <daemon@@Base+0x17c>
   13664:	subs	r4, r0, #0
   13668:	beq	1361c <__assert_fail@plt+0x1b0c>
   1366c:	bl	11948 <__errno_location@plt>
   13670:	mov	r3, #0
   13674:	str	r3, [r0]
   13678:	mov	r0, r4
   1367c:	bl	13474 <__assert_fail@plt+0x1964>
   13680:	b	1361c <__assert_fail@plt+0x1b0c>
   13684:	ldr	r0, [pc, #20]	; 136a0 <__assert_fail@plt+0x1b90>
   13688:	bl	13474 <__assert_fail@plt+0x1964>
   1368c:	b	1353c <__assert_fail@plt+0x1a2c>
   13690:	mov	r0, r9
   13694:	b	13638 <__assert_fail@plt+0x1b28>
   13698:	ldrdeq	pc, [r2], -r4
   1369c:	andeq	sp, r1, r0, asr #32
   136a0:	andeq	sp, r1, r0, asr r0
   136a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   136a8:	sub	sp, sp, #1360	; 0x550
   136ac:	sub	sp, sp, #12
   136b0:	mov	r4, r0
   136b4:	mov	r7, r1
   136b8:	mov	r9, r2
   136bc:	add	r0, sp, #12
   136c0:	mov	r2, #48	; 0x30
   136c4:	mov	r1, #0
   136c8:	mov	r6, r3
   136cc:	bl	11984 <memset@plt>
   136d0:	ldrsh	r3, [r4, #4]
   136d4:	cmp	r3, #6
   136d8:	beq	13b48 <__assert_fail@plt+0x2038>
   136dc:	add	r3, r4, #416	; 0x1a0
   136e0:	ldr	r8, [pc, #1608]	; 13d30 <__assert_fail@plt+0x2220>
   136e4:	mov	r2, #15
   136e8:	str	r3, [sp, #12]
   136ec:	mov	r3, #1
   136f0:	str	r8, [sp, #20]
   136f4:	str	r2, [sp, #16]
   136f8:	str	r3, [sp, #24]
   136fc:	ldr	r3, [r4, #432]	; 0x1b0
   13700:	cmp	r3, #0
   13704:	addeq	r5, sp, #28
   13708:	beq	13720 <__assert_fail@plt+0x1c10>
   1370c:	mov	r0, r3
   13710:	str	r3, [sp, #28]
   13714:	bl	11918 <strlen@plt>
   13718:	add	r5, sp, #36	; 0x24
   1371c:	str	r0, [sp, #32]
   13720:	mov	r3, #1
   13724:	cmp	r6, #0
   13728:	str	r8, [r5]
   1372c:	str	r3, [r5, #4]
   13730:	beq	13b14 <__assert_fail@plt+0x2004>
   13734:	mov	r0, r6
   13738:	str	r6, [r5, #8]
   1373c:	bl	11918 <strlen@plt>
   13740:	str	r0, [r5, #12]
   13744:	ldrsh	r3, [r4, #4]
   13748:	ldr	r6, [pc, #1508]	; 13d34 <__assert_fail@plt+0x2224>
   1374c:	ldr	r0, [pc, #1508]	; 13d38 <__assert_fail@plt+0x2228>
   13750:	add	r3, r6, r3, lsl #2
   13754:	ldr	r1, [r3, #320]	; 0x140
   13758:	bl	129ec <__assert_fail@plt+0xedc>
   1375c:	ldrsh	r3, [r4, #4]
   13760:	cmp	r3, #9
   13764:	ldrls	pc, [pc, r3, lsl #2]
   13768:	b	13884 <__assert_fail@plt+0x1d74>
   1376c:	ldrdeq	r3, [r1], -r0
   13770:	andeq	r3, r1, ip, ror #21
   13774:	andeq	r3, r1, ip, ror #21
   13778:	muleq	r1, r4, r7
   1377c:	andeq	r3, r1, r8, asr #17
   13780:	andeq	r3, r1, r4, ror #19
   13784:	andeq	r3, r1, r4, ror #19
   13788:	andeq	r3, r1, r0, lsr #17
   1378c:	andeq	r3, r1, ip, lsl sl
   13790:	andeq	r3, r1, ip, ror #21
   13794:	ldr	r3, [pc, #1440]	; 13d3c <__assert_fail@plt+0x222c>
   13798:	tst	r9, #1
   1379c:	ldr	r3, [r3]
   137a0:	str	r3, [r4, #8]
   137a4:	bne	13c5c <__assert_fail@plt+0x214c>
   137a8:	str	r3, [r4, #8]
   137ac:	ldr	r0, [pc, #1420]	; 13d40 <__assert_fail@plt+0x2230>
   137b0:	ldr	r1, [r4, #40]	; 0x28
   137b4:	bl	129ec <__assert_fail@plt+0xedc>
   137b8:	ldrh	r3, [r4, #4]
   137bc:	ldrsh	r0, [r4, #6]
   137c0:	ldr	r8, [pc, #1404]	; 13d44 <__assert_fail@plt+0x2234>
   137c4:	sub	r3, r3, #2
   137c8:	cmp	r3, #1
   137cc:	movls	r3, #2
   137d0:	ldrls	r2, [pc, #1392]	; 13d48 <__assert_fail@plt+0x2238>
   137d4:	ldrhi	r2, [pc, #1392]	; 13d4c <__assert_fail@plt+0x223c>
   137d8:	movhi	r3, #1
   137dc:	str	r3, [r5, #20]
   137e0:	mov	r6, #6
   137e4:	mov	r7, #0
   137e8:	str	r2, [r5, #16]
   137ec:	b	13850 <__assert_fail@plt+0x1d40>
   137f0:	bl	11948 <__errno_location@plt>
   137f4:	ldrsh	r3, [r4, #4]
   137f8:	ldr	sl, [r0]
   137fc:	mov	fp, r0
   13800:	cmp	r3, #9
   13804:	cmpeq	sl, #11
   13808:	beq	1388c <__assert_fail@plt+0x1d7c>
   1380c:	ldrsh	r0, [r4, #6]
   13810:	sub	r5, sl, #5
   13814:	bl	11af8 <close@plt>
   13818:	bics	r5, r5, #4
   1381c:	mov	r2, r7
   13820:	mov	r1, r8
   13824:	bne	13b98 <__assert_fail@plt+0x2088>
   13828:	ldrh	r3, [r4, #4]
   1382c:	sub	r3, r3, #2
   13830:	cmp	r3, #1
   13834:	bhi	13b98 <__assert_fail@plt+0x2088>
   13838:	ldr	r0, [r4, #40]	; 0x28
   1383c:	bl	1187c <open64@plt>
   13840:	sxth	r0, r0
   13844:	cmp	r0, #0
   13848:	strh	r0, [r4, #6]
   1384c:	blt	13c54 <__assert_fail@plt+0x2144>
   13850:	mov	r2, r6
   13854:	add	r1, sp, #12
   13858:	bl	119b4 <writev@plt>
   1385c:	cmp	r0, #0
   13860:	blt	137f0 <__assert_fail@plt+0x1ce0>
   13864:	tst	r9, #2
   13868:	beq	13a14 <__assert_fail@plt+0x1f04>
   1386c:	ldr	r3, [r4, #460]	; 0x1cc
   13870:	tst	r3, #1
   13874:	bne	13a14 <__assert_fail@plt+0x1f04>
   13878:	ldrsh	r0, [r4, #6]
   1387c:	bl	11678 <fsync@plt>
   13880:	ldrsh	r3, [r4, #4]
   13884:	cmp	r3, #8
   13888:	beq	13894 <__assert_fail@plt+0x1d84>
   1388c:	mov	r3, #0
   13890:	str	r3, [r4, #452]	; 0x1c4
   13894:	add	sp, sp, #1360	; 0x550
   13898:	add	sp, sp, #12
   1389c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   138a0:	mov	r0, #0
   138a4:	bl	1175c <time@plt>
   138a8:	ldr	r5, [r4, #8]
   138ac:	sub	r5, r0, r5
   138b0:	cmp	r5, #179	; 0xb3
   138b4:	ble	13be8 <__assert_fail@plt+0x20d8>
   138b8:	ldr	r0, [pc, #1168]	; 13d50 <__assert_fail@plt+0x2240>
   138bc:	bl	129ec <__assert_fail@plt+0xedc>
   138c0:	mov	r3, #4
   138c4:	strh	r3, [r4, #4]
   138c8:	ldr	r1, [r4, #40]	; 0x28
   138cc:	ldr	r0, [pc, #1132]	; 13d40 <__assert_fail@plt+0x2230>
   138d0:	bl	129ec <__assert_fail@plt+0xedc>
   138d4:	ldr	r3, [pc, #1144]	; 13d54 <__assert_fail@plt+0x2244>
   138d8:	mov	r0, r7
   138dc:	ldr	r1, [r3]
   138e0:	bl	11804 <strcasecmp@plt>
   138e4:	cmp	r0, #0
   138e8:	bne	13af8 <__assert_fail@plt+0x1fe8>
   138ec:	ldr	r3, [pc, #1124]	; 13d58 <__assert_fail@plt+0x2248>
   138f0:	ldr	r3, [r3]
   138f4:	cmp	r3, #0
   138f8:	bne	13c08 <__assert_fail@plt+0x20f8>
   138fc:	ldrh	r7, [r4, #44]	; 0x2c
   13900:	cmp	r7, #2
   13904:	ldreq	r6, [r6, #312]	; 0x138
   13908:	ldrne	r6, [r6, #316]	; 0x13c
   1390c:	ldreq	r8, [pc, #1096]	; 13d5c <__assert_fail@plt+0x224c>
   13910:	ldrne	r8, [pc, #1096]	; 13d60 <__assert_fail@plt+0x2250>
   13914:	cmp	r6, #0
   13918:	addge	r5, sp, #340	; 0x154
   1391c:	blt	13c6c <__assert_fail@plt+0x215c>
   13920:	ldr	r2, [pc, #1044]	; 13d3c <__assert_fail@plt+0x222c>
   13924:	ldr	r1, [sp, #44]	; 0x2c
   13928:	ldr	r3, [r4, #444]	; 0x1bc
   1392c:	ldr	r0, [r2]
   13930:	ldr	r2, [sp, #12]
   13934:	str	r0, [r4, #8]
   13938:	mov	r0, r5
   1393c:	str	r1, [sp, #4]
   13940:	str	r2, [sp]
   13944:	ldr	r1, [pc, #1016]	; 13d44 <__assert_fail@plt+0x2234>
   13948:	ldr	r2, [pc, #1044]	; 13d64 <__assert_fail@plt+0x2254>
   1394c:	bl	11954 <snprintf@plt>
   13950:	mov	r0, r5
   13954:	bl	11918 <strlen@plt>
   13958:	ldr	r2, [r4, #172]	; 0xac
   1395c:	mov	r1, r5
   13960:	add	r3, r4, #44	; 0x2c
   13964:	str	r2, [sp, #4]
   13968:	str	r3, [sp]
   1396c:	mov	r3, #0
   13970:	cmp	r0, #1024	; 0x400
   13974:	movlt	r5, r0
   13978:	movge	r5, #1024	; 0x400
   1397c:	mov	r2, r5
   13980:	mov	r0, r6
   13984:	bl	119d8 <sendto@plt>
   13988:	cmp	r5, r0
   1398c:	beq	139c8 <__assert_fail@plt+0x1eb8>
   13990:	bl	11948 <__errno_location@plt>
   13994:	ldr	r5, [r0]
   13998:	mov	r7, r0
   1399c:	mov	r0, r5
   139a0:	bl	118b8 <strerror@plt>
   139a4:	mov	r1, r5
   139a8:	mov	r2, r0
   139ac:	ldr	r0, [pc, #948]	; 13d68 <__assert_fail@plt+0x2258>
   139b0:	bl	129ec <__assert_fail@plt+0xedc>
   139b4:	mov	r3, #7
   139b8:	strh	r3, [r4, #4]
   139bc:	ldr	r0, [pc, #936]	; 13d6c <__assert_fail@plt+0x225c>
   139c0:	str	r5, [r7]
   139c4:	bl	13474 <__assert_fail@plt+0x1964>
   139c8:	ldr	r3, [r8]
   139cc:	cmp	r3, #0
   139d0:	bge	13a14 <__assert_fail@plt+0x1f04>
   139d4:	mov	r0, r6
   139d8:	bl	11af8 <close@plt>
   139dc:	ldrsh	r3, [r4, #4]
   139e0:	b	13884 <__assert_fail@plt+0x1d74>
   139e4:	ldr	r3, [pc, #848]	; 13d3c <__assert_fail@plt+0x222c>
   139e8:	ldr	r0, [pc, #860]	; 13d4c <__assert_fail@plt+0x223c>
   139ec:	ldr	r3, [r3]
   139f0:	str	r3, [r4, #8]
   139f4:	bl	129ec <__assert_fail@plt+0xedc>
   139f8:	ldr	r2, [pc, #840]	; 13d48 <__assert_fail@plt+0x2238>
   139fc:	mov	r3, #2
   13a00:	add	r1, sp, #12
   13a04:	mov	r0, r4
   13a08:	str	r2, [r5, #16]
   13a0c:	str	r3, [r5, #20]
   13a10:	bl	13514 <__assert_fail@plt+0x1a04>
   13a14:	ldrsh	r3, [r4, #4]
   13a18:	b	13884 <__assert_fail@plt+0x1d74>
   13a1c:	ldr	r1, [r4, #40]	; 0x28
   13a20:	ldr	r0, [pc, #792]	; 13d40 <__assert_fail@plt+0x2230>
   13a24:	bl	129ec <__assert_fail@plt+0xedc>
   13a28:	mov	r0, #0
   13a2c:	bl	1175c <time@plt>
   13a30:	ldr	r1, [r4, #8]
   13a34:	sub	r1, r0, r1
   13a38:	cmp	r1, #179	; 0xb3
   13a3c:	ble	13bd4 <__assert_fail@plt+0x20c4>
   13a40:	mov	r8, #32
   13a44:	add	r5, sp, #340	; 0x154
   13a48:	mov	r2, r8
   13a4c:	mov	r1, #0
   13a50:	mov	r0, r5
   13a54:	bl	11984 <memset@plt>
   13a58:	ldr	r1, [pc, #784]	; 13d70 <__assert_fail@plt+0x2260>
   13a5c:	ldr	r3, [r6, #4]
   13a60:	mov	r2, r5
   13a64:	cmp	r3, #0
   13a68:	str	r3, [sp, #344]	; 0x158
   13a6c:	ldr	r1, [r1, #44]	; 0x2c
   13a70:	add	r3, sp, #8
   13a74:	ldr	r0, [r4, #40]	; 0x28
   13a78:	streq	r8, [sp, #340]	; 0x154
   13a7c:	bl	11a98 <getaddrinfo@plt>
   13a80:	subs	r8, r0, #0
   13a84:	beq	13c18 <__assert_fail@plt+0x2108>
   13a88:	bl	11714 <gai_strerror@plt>
   13a8c:	mov	r1, r0
   13a90:	ldr	r0, [pc, #732]	; 13d74 <__assert_fail@plt+0x2264>
   13a94:	bl	129ec <__assert_fail@plt+0xedc>
   13a98:	ldr	r1, [r4, #452]	; 0x1c4
   13a9c:	ldr	r0, [pc, #724]	; 13d78 <__assert_fail@plt+0x2268>
   13aa0:	bl	129ec <__assert_fail@plt+0xedc>
   13aa4:	ldr	r3, [r4, #452]	; 0x1c4
   13aa8:	sub	r3, r3, #1
   13aac:	cmp	r3, #0
   13ab0:	str	r3, [r4, #452]	; 0x1c4
   13ab4:	bge	13a14 <__assert_fail@plt+0x1f04>
   13ab8:	mov	r5, #0
   13abc:	strh	r5, [r4, #4]
   13ac0:	ldr	r0, [r4, #40]	; 0x28
   13ac4:	bl	1a89c <argp_parse@@Base+0x106c>
   13ac8:	str	r5, [r4, #40]	; 0x28
   13acc:	b	13a14 <__assert_fail@plt+0x1f04>
   13ad0:	ldr	r3, [pc, #612]	; 13d3c <__assert_fail@plt+0x222c>
   13ad4:	ldr	r0, [pc, #624]	; 13d4c <__assert_fail@plt+0x223c>
   13ad8:	ldr	r3, [r3]
   13adc:	str	r3, [r4, #8]
   13ae0:	bl	129ec <__assert_fail@plt+0xedc>
   13ae4:	ldrsh	r3, [r4, #4]
   13ae8:	b	13884 <__assert_fail@plt+0x1d74>
   13aec:	ldr	r3, [pc, #584]	; 13d3c <__assert_fail@plt+0x222c>
   13af0:	ldr	r3, [r3]
   13af4:	b	137a8 <__assert_fail@plt+0x1c98>
   13af8:	ldr	r3, [r6]
   13afc:	cmp	r3, #0
   13b00:	beq	138ec <__assert_fail@plt+0x1ddc>
   13b04:	ldr	r0, [pc, #624]	; 13d7c <__assert_fail@plt+0x226c>
   13b08:	bl	129ec <__assert_fail@plt+0xedc>
   13b0c:	ldrsh	r3, [r4, #4]
   13b10:	b	13884 <__assert_fail@plt+0x1d74>
   13b14:	ldr	r3, [r4, #452]	; 0x1c4
   13b18:	cmp	r3, #1
   13b1c:	ble	13bc0 <__assert_fail@plt+0x20b0>
   13b20:	add	r6, sp, #60	; 0x3c
   13b24:	ldr	r2, [pc, #596]	; 13d80 <__assert_fail@plt+0x2270>
   13b28:	mov	r1, #80	; 0x50
   13b2c:	mov	r0, r6
   13b30:	str	r6, [r5, #8]
   13b34:	bl	11954 <snprintf@plt>
   13b38:	mov	r0, r6
   13b3c:	bl	11918 <strlen@plt>
   13b40:	str	r0, [r5, #12]
   13b44:	b	13744 <__assert_fail@plt+0x1c34>
   13b48:	add	r5, sp, #140	; 0x8c
   13b4c:	ldr	r0, [pc, #488]	; 13d3c <__assert_fail@plt+0x222c>
   13b50:	ldr	r8, [r4, #432]	; 0x1b0
   13b54:	str	r5, [sp, #12]
   13b58:	bl	1178c <ctime@plt>
   13b5c:	mov	r3, r8
   13b60:	ldr	r2, [pc, #540]	; 13d84 <__assert_fail@plt+0x2274>
   13b64:	mov	r1, #200	; 0xc8
   13b68:	ldr	r8, [pc, #448]	; 13d30 <__assert_fail@plt+0x2220>
   13b6c:	str	r0, [sp]
   13b70:	mov	r0, r5
   13b74:	bl	11954 <snprintf@plt>
   13b78:	mov	r0, r5
   13b7c:	bl	11918 <strlen@plt>
   13b80:	ldr	r2, [pc, #512]	; 13d88 <__assert_fail@plt+0x2278>
   13b84:	mov	r3, #0
   13b88:	str	r2, [sp, #20]
   13b8c:	str	r3, [sp, #24]
   13b90:	str	r0, [sp, #16]
   13b94:	b	136fc <__assert_fail@plt+0x1bec>
   13b98:	mov	r5, #0
   13b9c:	strh	r5, [r4, #4]
   13ba0:	str	sl, [fp]
   13ba4:	ldr	r0, [r4, #40]	; 0x28
   13ba8:	bl	13474 <__assert_fail@plt+0x1964>
   13bac:	ldr	r0, [r4, #40]	; 0x28
   13bb0:	bl	1a89c <argp_parse@@Base+0x106c>
   13bb4:	str	r5, [r4, #40]	; 0x28
   13bb8:	ldrsh	r3, [r4, #4]
   13bbc:	b	13884 <__assert_fail@plt+0x1d74>
   13bc0:	ldr	r2, [r4, #448]	; 0x1c0
   13bc4:	add	r3, r4, #176	; 0xb0
   13bc8:	str	r2, [r5, #12]
   13bcc:	str	r3, [r5, #8]
   13bd0:	b	13744 <__assert_fail@plt+0x1c34>
   13bd4:	rsb	r1, r1, #180	; 0xb4
   13bd8:	ldr	r0, [pc, #428]	; 13d8c <__assert_fail@plt+0x227c>
   13bdc:	bl	129ec <__assert_fail@plt+0xedc>
   13be0:	ldrsh	r3, [r4, #4]
   13be4:	b	13884 <__assert_fail@plt+0x1d74>
   13be8:	ldr	r1, [r4, #40]	; 0x28
   13bec:	ldr	r0, [pc, #332]	; 13d40 <__assert_fail@plt+0x2230>
   13bf0:	bl	129ec <__assert_fail@plt+0xedc>
   13bf4:	rsb	r1, r5, #180	; 0xb4
   13bf8:	ldr	r0, [pc, #400]	; 13d90 <__assert_fail@plt+0x2280>
   13bfc:	bl	129ec <__assert_fail@plt+0xedc>
   13c00:	ldrsh	r3, [r4, #4]
   13c04:	b	13884 <__assert_fail@plt+0x1d74>
   13c08:	ldr	r0, [pc, #388]	; 13d94 <__assert_fail@plt+0x2284>
   13c0c:	bl	129ec <__assert_fail@plt+0xedc>
   13c10:	ldrsh	r3, [r4, #4]
   13c14:	b	13884 <__assert_fail@plt+0x1d74>
   13c18:	ldr	r1, [r4, #40]	; 0x28
   13c1c:	ldr	r0, [pc, #372]	; 13d98 <__assert_fail@plt+0x2288>
   13c20:	bl	129ec <__assert_fail@plt+0xedc>
   13c24:	ldr	r5, [sp, #8]
   13c28:	add	r0, r4, #44	; 0x2c
   13c2c:	ldr	r2, [r5, #16]
   13c30:	str	r2, [r4, #172]	; 0xac
   13c34:	ldr	r1, [r5, #20]
   13c38:	bl	11744 <memcpy@plt>
   13c3c:	mov	r0, r5
   13c40:	bl	11a8c <freeaddrinfo@plt>
   13c44:	mov	r3, #4
   13c48:	str	r8, [r4, #452]	; 0x1c4
   13c4c:	strh	r3, [r4, #4]
   13c50:	b	138c8 <__assert_fail@plt+0x1db8>
   13c54:	strh	r5, [r4, #4]
   13c58:	b	13ba4 <__assert_fail@plt+0x2094>
   13c5c:	ldr	r0, [pc, #312]	; 13d9c <__assert_fail@plt+0x228c>
   13c60:	bl	129ec <__assert_fail@plt+0xedc>
   13c64:	ldrsh	r3, [r4, #4]
   13c68:	b	13884 <__assert_fail@plt+0x1d74>
   13c6c:	add	r5, sp, #340	; 0x154
   13c70:	mov	r2, #32
   13c74:	mov	r1, #0
   13c78:	mov	r0, r5
   13c7c:	bl	11984 <memset@plt>
   13c80:	ldr	r3, [pc, #232]	; 13d70 <__assert_fail@plt+0x2260>
   13c84:	mov	r0, #2
   13c88:	mov	ip, #1
   13c8c:	ldr	r1, [r3, #44]	; 0x2c
   13c90:	str	r0, [sp, #348]	; 0x15c
   13c94:	mov	r2, r5
   13c98:	add	r3, sp, #8
   13c9c:	mov	r0, #0
   13ca0:	str	r7, [sp, #344]	; 0x158
   13ca4:	str	ip, [sp, #340]	; 0x154
   13ca8:	bl	11a98 <getaddrinfo@plt>
   13cac:	cmp	r0, #0
   13cb0:	beq	13cc8 <__assert_fail@plt+0x21b8>
   13cb4:	bl	11714 <gai_strerror@plt>
   13cb8:	mov	r1, r0
   13cbc:	ldr	r0, [pc, #220]	; 13da0 <__assert_fail@plt+0x2290>
   13cc0:	bl	129ec <__assert_fail@plt+0xedc>
   13cc4:	b	13a14 <__assert_fail@plt+0x1f04>
   13cc8:	ldr	r3, [sp, #8]
   13ccc:	ldmib	r3, {r0, r1, r2}
   13cd0:	bl	11aa4 <socket@plt>
   13cd4:	subs	r6, r0, #0
   13cd8:	blt	13d1c <__assert_fail@plt+0x220c>
   13cdc:	ldr	r3, [sp, #8]
   13ce0:	ldr	r2, [r3, #16]
   13ce4:	ldr	r1, [r3, #20]
   13ce8:	bl	1196c <bind@plt>
   13cec:	mov	r7, r0
   13cf0:	ldr	r0, [sp, #8]
   13cf4:	bl	11a8c <freeaddrinfo@plt>
   13cf8:	cmp	r7, #0
   13cfc:	beq	13920 <__assert_fail@plt+0x1e10>
   13d00:	bl	11948 <__errno_location@plt>
   13d04:	ldr	r0, [r0]
   13d08:	bl	118b8 <strerror@plt>
   13d0c:	mov	r1, r0
   13d10:	ldr	r0, [pc, #140]	; 13da4 <__assert_fail@plt+0x2294>
   13d14:	bl	129ec <__assert_fail@plt+0xedc>
   13d18:	b	13a14 <__assert_fail@plt+0x1f04>
   13d1c:	ldr	r0, [pc, #132]	; 13da8 <__assert_fail@plt+0x2298>
   13d20:	bl	129ec <__assert_fail@plt+0xedc>
   13d24:	ldr	r0, [sp, #8]
   13d28:	bl	11a8c <freeaddrinfo@plt>
   13d2c:	b	13a14 <__assert_fail@plt+0x1f04>
   13d30:	muleq	r1, r0, r0
   13d34:			; <UNDEFINED> instruction: 0x0002f1b0
   13d38:	strheq	sp, [r1], -r4
   13d3c:	andeq	pc, r2, r0, lsl #25
   13d40:	muleq	r1, r4, pc	; <UNPREDICTABLE>
   13d44:	andeq	r0, r0, r1, lsl #8
   13d48:	muleq	r1, r8, r2
   13d4c:	andeq	sp, r1, ip, lsl #1
   13d50:	andeq	sp, r1, r4, asr #1
   13d54:	andeq	pc, r2, r0, asr #24
   13d58:	andeq	pc, r2, r4, lsl #25
   13d5c:	andeq	pc, r2, r8, ror #5
   13d60:	andeq	pc, r2, ip, ror #5
   13d64:	andeq	sp, r1, r4, asr r2
   13d68:	andeq	sp, r1, r4, ror #4
   13d6c:	andeq	sp, r1, r4, lsl #5
   13d70:	ldrdeq	pc, [r2], -r4
   13d74:	andeq	sp, r1, r0, lsr #2
   13d78:	andeq	sp, r1, r0, lsr r1
   13d7c:	andeq	sp, r1, r8, lsl #3
   13d80:	muleq	r1, r4, r0
   13d84:	andeq	sp, r1, r4, rrx
   13d88:	muleq	r1, r4, sl
   13d8c:	andeq	sp, r1, r8, asr r1
   13d90:	strdeq	sp, [r1], -r0
   13d94:	andeq	sp, r1, r8, lsr #3
   13d98:	andeq	sp, r1, r0, asr #2
   13d9c:	andeq	sp, r1, ip, lsl #5
   13da0:	ldrdeq	sp, [r1], -r8
   13da4:	andeq	sp, r1, ip, lsr #4
   13da8:	andeq	sp, r1, r4, lsl #4
   13dac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13db0:	sub	sp, sp, #292	; 0x124
   13db4:	mov	r5, r1
   13db8:	mov	r4, r2
   13dbc:	str	r2, [sp, #16]
   13dc0:	mov	r8, r3
   13dc4:	mov	r6, r0
   13dc8:	str	r0, [sp, #12]
   13dcc:	bl	13220 <__assert_fail@plt+0x1710>
   13dd0:	mov	r3, r8
   13dd4:	mov	r2, r6
   13dd8:	stm	sp, {r4, r5}
   13ddc:	mov	r1, r0
   13de0:	ldr	r0, [pc, #1040]	; 141f8 <__assert_fail@plt+0x26e8>
   13de4:	bl	129ec <__assert_fail@plt+0xedc>
   13de8:	add	r0, sp, #32
   13dec:	bl	119fc <sigemptyset@plt>
   13df0:	mov	r1, #1
   13df4:	add	r0, sp, #32
   13df8:	bl	118a0 <sigaddset@plt>
   13dfc:	mov	r1, #14
   13e00:	add	r0, sp, #32
   13e04:	bl	118a0 <sigaddset@plt>
   13e08:	add	r1, sp, #32
   13e0c:	add	r2, sp, #160	; 0xa0
   13e10:	mov	r0, #0
   13e14:	bl	116e4 <sigprocmask@plt>
   13e18:	mov	r0, r5
   13e1c:	bl	11918 <strlen@plt>
   13e20:	cmp	r0, #15
   13e24:	mov	r4, r0
   13e28:	str	r0, [sp, #8]
   13e2c:	ble	13e3c <__assert_fail@plt+0x232c>
   13e30:	ldrb	r3, [r5, #3]
   13e34:	cmp	r3, #32
   13e38:	beq	140fc <__assert_fail@plt+0x25ec>
   13e3c:	orr	r8, r8, #4
   13e40:	ldr	fp, [pc, #948]	; 141fc <__assert_fail@plt+0x26ec>
   13e44:	mov	r0, fp
   13e48:	bl	1175c <time@plt>
   13e4c:	tst	r8, #4
   13e50:	bne	1406c <__assert_fail@plt+0x255c>
   13e54:	ldr	r3, [pc, #932]	; 14200 <__assert_fail@plt+0x26f0>
   13e58:	ldr	r3, [r3, #16]
   13e5c:	cmp	r3, #0
   13e60:	streq	r5, [sp, #24]
   13e64:	bne	140d0 <__assert_fail@plt+0x25c0>
   13e68:	add	r5, r5, #16
   13e6c:	sub	r3, r4, #16
   13e70:	str	r3, [sp, #8]
   13e74:	ands	sl, r8, #8
   13e78:	movne	r6, #24
   13e7c:	ldreq	r3, [sp, #12]
   13e80:	asreq	r6, r3, #3
   13e84:	ldr	r3, [pc, #888]	; 14204 <__assert_fail@plt+0x26f4>
   13e88:	andeq	r6, r6, #127	; 0x7f
   13e8c:	ldr	r2, [r3]
   13e90:	cmp	r2, #0
   13e94:	beq	14080 <__assert_fail@plt+0x2570>
   13e98:	ldr	r3, [pc, #872]	; 14208 <__assert_fail@plt+0x26f8>
   13e9c:	ldr	r4, [r3]
   13ea0:	cmp	r4, #0
   13ea4:	beq	13ff4 <__assert_fail@plt+0x24e4>
   13ea8:	ldr	r3, [sp, #12]
   13eac:	and	r7, r3, #7
   13eb0:	mov	r3, #1
   13eb4:	str	r3, [sp, #28]
   13eb8:	lsl	r7, r3, r7
   13ebc:	and	r3, r8, r3
   13ec0:	str	r3, [sp, #20]
   13ec4:	add	r3, r4, r6
   13ec8:	ldrb	r3, [r3, #12]
   13ecc:	tst	r3, r7
   13ed0:	beq	13fe8 <__assert_fail@plt+0x24d8>
   13ed4:	ldrsh	r3, [r4, #4]
   13ed8:	cmp	r3, #3
   13edc:	beq	1401c <__assert_fail@plt+0x250c>
   13ee0:	cmp	sl, #0
   13ee4:	beq	1400c <__assert_fail@plt+0x24fc>
   13ee8:	ldr	r3, [pc, #796]	; 1420c <__assert_fail@plt+0x26fc>
   13eec:	ldr	r2, [fp]
   13ef0:	ldr	r1, [r4, #8]
   13ef4:	ldr	r3, [r3, #8]
   13ef8:	sub	r2, r2, r1
   13efc:	add	r3, r3, r3, lsr #31
   13f00:	cmp	r2, r3, asr #1
   13f04:	blt	13fe8 <__assert_fail@plt+0x24d8>
   13f08:	ldr	r1, [r4, #436]	; 0x1b4
   13f0c:	cmp	r1, #0
   13f10:	beq	13f74 <__assert_fail@plt+0x2464>
   13f14:	ldr	r9, [r4, #440]	; 0x1b8
   13f18:	mov	r0, r5
   13f1c:	mov	r2, r9
   13f20:	bl	11ad4 <strncmp@plt>
   13f24:	cmp	r0, #0
   13f28:	bne	13fe8 <__assert_fail@plt+0x24d8>
   13f2c:	bl	118f4 <__ctype_b_loc@plt>
   13f30:	ldrb	r3, [r5, r9]
   13f34:	cmp	r3, #45	; 0x2d
   13f38:	cmpne	r3, #95	; 0x5f
   13f3c:	lsl	r3, r3, #1
   13f40:	moveq	r2, #1
   13f44:	movne	r2, #0
   13f48:	ldr	r1, [r0]
   13f4c:	ldrh	r3, [r1, r3]
   13f50:	lsl	r3, r3, #28
   13f54:	orrs	r3, r2, r3, lsr #31
   13f58:	bne	13fe8 <__assert_fail@plt+0x24d8>
   13f5c:	cmp	sl, #0
   13f60:	bne	13f74 <__assert_fail@plt+0x2464>
   13f64:	ldr	r3, [r4, #448]	; 0x1c0
   13f68:	ldr	r2, [sp, #8]
   13f6c:	cmp	r2, r3
   13f70:	beq	14130 <__assert_fail@plt+0x2620>
   13f74:	ldr	r3, [r4, #452]	; 0x1c4
   13f78:	cmp	r3, #0
   13f7c:	bne	140e4 <__assert_fail@plt+0x25d4>
   13f80:	mov	r3, #0
   13f84:	str	r3, [r4, #456]	; 0x1c8
   13f88:	mov	r2, #15
   13f8c:	ldr	r1, [sp, #24]
   13f90:	add	r0, r4, #416	; 0x1a0
   13f94:	bl	11990 <strncpy@plt>
   13f98:	ldr	r0, [r4, #432]	; 0x1b0
   13f9c:	bl	1a89c <argp_parse@@Base+0x106c>
   13fa0:	ldr	r9, [sp, #16]
   13fa4:	mov	r0, r9
   13fa8:	bl	117a4 <strdup@plt>
   13fac:	ldr	r3, [sp, #8]
   13fb0:	cmp	r3, #239	; 0xef
   13fb4:	str	r0, [r4, #432]	; 0x1b0
   13fb8:	bgt	14038 <__assert_fail@plt+0x2528>
   13fbc:	str	r3, [r4, #448]	; 0x1c0
   13fc0:	ldr	r3, [sp, #12]
   13fc4:	mov	r1, r5
   13fc8:	str	r3, [r4, #444]	; 0x1bc
   13fcc:	add	r0, r4, #176	; 0xb0
   13fd0:	bl	1184c <strcpy@plt>
   13fd4:	mov	r3, #0
   13fd8:	mov	r2, r8
   13fdc:	mov	r1, r9
   13fe0:	mov	r0, r4
   13fe4:	bl	136a4 <__assert_fail@plt+0x1b94>
   13fe8:	ldr	r4, [r4]
   13fec:	cmp	r4, #0
   13ff0:	bne	13ec4 <__assert_fail@plt+0x23b4>
   13ff4:	add	r1, sp, #160	; 0xa0
   13ff8:	mov	r2, #0
   13ffc:	mov	r0, #2
   14000:	bl	116e4 <sigprocmask@plt>
   14004:	add	sp, sp, #292	; 0x124
   14008:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1400c:	ldr	r1, [r4, #436]	; 0x1b4
   14010:	cmp	r1, #0
   14014:	bne	13f14 <__assert_fail@plt+0x2404>
   14018:	b	13f64 <__assert_fail@plt+0x2454>
   1401c:	ldr	r3, [sp, #20]
   14020:	cmp	r3, #0
   14024:	beq	13ee0 <__assert_fail@plt+0x23d0>
   14028:	ldr	r4, [r4]
   1402c:	cmp	r4, #0
   14030:	bne	13ec4 <__assert_fail@plt+0x23b4>
   14034:	b	13ff4 <__assert_fail@plt+0x24e4>
   14038:	mov	r3, #0
   1403c:	strb	r3, [r4, #176]	; 0xb0
   14040:	mov	r3, #0
   14044:	str	r3, [r4, #448]	; 0x1c0
   14048:	mov	r0, r4
   1404c:	mov	r3, r5
   14050:	mov	r2, r8
   14054:	ldr	r1, [sp, #16]
   14058:	bl	136a4 <__assert_fail@plt+0x1b94>
   1405c:	ldr	r4, [r4]
   14060:	cmp	r4, #0
   14064:	bne	13ec4 <__assert_fail@plt+0x23b4>
   14068:	b	13ff4 <__assert_fail@plt+0x24e4>
   1406c:	mov	r0, fp
   14070:	bl	1178c <ctime@plt>
   14074:	add	r3, r0, #4
   14078:	str	r3, [sp, #24]
   1407c:	b	13e74 <__assert_fail@plt+0x2364>
   14080:	mov	r1, #1
   14084:	ldr	r0, [pc, #388]	; 14210 <__assert_fail@plt+0x2700>
   14088:	bl	1187c <open64@plt>
   1408c:	ldr	r3, [pc, #384]	; 14214 <__assert_fail@plt+0x2704>
   14090:	ldr	r4, [pc, #384]	; 14218 <__assert_fail@plt+0x2708>
   14094:	sxth	r6, r0
   14098:	ldr	r0, [r3]
   1409c:	strh	r6, [r4, #6]
   140a0:	bl	117a4 <strdup@plt>
   140a4:	cmp	r6, #0
   140a8:	str	r0, [r4, #432]	; 0x1b0
   140ac:	blt	13ff4 <__assert_fail@plt+0x24e4>
   140b0:	mov	r0, r4
   140b4:	mov	r3, r5
   140b8:	mov	r2, r8
   140bc:	ldr	r1, [sp, #16]
   140c0:	bl	136a4 <__assert_fail@plt+0x1b94>
   140c4:	ldrsh	r0, [r4, #6]
   140c8:	bl	11af8 <close@plt>
   140cc:	b	13ff4 <__assert_fail@plt+0x24e4>
   140d0:	mov	r0, fp
   140d4:	bl	1178c <ctime@plt>
   140d8:	add	r3, r0, #4
   140dc:	str	r3, [sp, #24]
   140e0:	b	13e68 <__assert_fail@plt+0x2358>
   140e4:	mov	r3, #0
   140e8:	mov	r2, r3
   140ec:	ldr	r1, [sp, #16]
   140f0:	mov	r0, r4
   140f4:	bl	136a4 <__assert_fail@plt+0x1b94>
   140f8:	b	13f80 <__assert_fail@plt+0x2470>
   140fc:	ldrb	r3, [r5, #6]
   14100:	cmp	r3, #32
   14104:	bne	13e3c <__assert_fail@plt+0x232c>
   14108:	ldrb	r3, [r5, #9]
   1410c:	cmp	r3, #58	; 0x3a
   14110:	bne	13e3c <__assert_fail@plt+0x232c>
   14114:	ldrb	r3, [r5, #12]
   14118:	cmp	r3, #58	; 0x3a
   1411c:	bne	13e3c <__assert_fail@plt+0x232c>
   14120:	ldrb	r3, [r5, #15]
   14124:	cmp	r3, #32
   14128:	bne	13e3c <__assert_fail@plt+0x232c>
   1412c:	b	13e40 <__assert_fail@plt+0x2330>
   14130:	ldr	r9, [r4, #432]	; 0x1b0
   14134:	cmp	r9, #0
   14138:	beq	13f74 <__assert_fail@plt+0x2464>
   1413c:	add	r1, r4, #176	; 0xb0
   14140:	mov	r0, r5
   14144:	bl	11684 <strcmp@plt>
   14148:	cmp	r0, #0
   1414c:	bne	13f74 <__assert_fail@plt+0x2464>
   14150:	mov	r1, r9
   14154:	ldr	r0, [sp, #16]
   14158:	bl	11684 <strcmp@plt>
   1415c:	cmp	r0, #0
   14160:	bne	13f74 <__assert_fail@plt+0x2464>
   14164:	mov	r2, #15
   14168:	ldr	r1, [sp, #24]
   1416c:	add	r0, r4, #416	; 0x1a0
   14170:	bl	11990 <strncpy@plt>
   14174:	ldr	r3, [r4, #456]	; 0x1c8
   14178:	ldr	r2, [pc, #140]	; 1420c <__assert_fail@plt+0x26fc>
   1417c:	ldr	r1, [r4, #452]	; 0x1c4
   14180:	ldr	r0, [fp]
   14184:	add	r3, r2, r3, lsl #2
   14188:	ldr	r2, [r4, #8]
   1418c:	add	r1, r1, #1
   14190:	sub	r2, r0, r2
   14194:	ldr	r3, [r3, #376]	; 0x178
   14198:	str	r1, [r4, #452]	; 0x1c4
   1419c:	ldr	r0, [pc, #120]	; 1421c <__assert_fail@plt+0x270c>
   141a0:	bl	129ec <__assert_fail@plt+0xedc>
   141a4:	ldr	r3, [r4, #456]	; 0x1c8
   141a8:	ldr	r0, [pc, #92]	; 1420c <__assert_fail@plt+0x26fc>
   141ac:	ldr	r1, [r4, #8]
   141b0:	add	r3, r0, r3, lsl #2
   141b4:	ldr	r2, [fp]
   141b8:	ldr	r3, [r3, #376]	; 0x178
   141bc:	add	r3, r3, r1
   141c0:	cmp	r3, r2
   141c4:	bge	13fe8 <__assert_fail@plt+0x24d8>
   141c8:	mov	r3, #0
   141cc:	mov	r2, r8
   141d0:	ldr	r1, [sp, #16]
   141d4:	mov	r0, r4
   141d8:	bl	136a4 <__assert_fail@plt+0x1b94>
   141dc:	ldr	r3, [r4, #456]	; 0x1c8
   141e0:	ldr	r2, [sp, #28]
   141e4:	add	r3, r3, #1
   141e8:	cmp	r3, #1
   141ec:	movhi	r3, r2
   141f0:	str	r3, [r4, #456]	; 0x1c8
   141f4:	b	13fe8 <__assert_fail@plt+0x24d8>
   141f8:	muleq	r1, ip, r2
   141fc:	andeq	pc, r2, r0, lsl #25
   14200:	ldrdeq	pc, [r2], -r4
   14204:	andeq	pc, r2, r8, lsr ip	; <UNPREDICTABLE>
   14208:	andeq	pc, r2, r0, asr sl	; <UNPREDICTABLE>
   1420c:			; <UNDEFINED> instruction: 0x0002f1b0
   14210:	andeq	pc, r2, r8, lsl r3	; <UNPREDICTABLE>
   14214:	andeq	pc, r2, r0, asr #24
   14218:	andeq	pc, r2, r4, asr sl	; <UNPREDICTABLE>
   1421c:	andeq	sp, r1, ip, asr #5
   14220:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14224:	sub	sp, sp, #1040	; 0x410
   14228:	ldrb	r4, [r1]
   1422c:	sub	sp, sp, #4
   14230:	mov	fp, r1
   14234:	cmp	r4, #60	; 0x3c
   14238:	mov	sl, r0
   1423c:	beq	14304 <__assert_fail@plt+0x27f4>
   14240:	mov	r7, #13
   14244:	add	r3, sp, #12
   14248:	add	r6, sp, #1024	; 0x400
   1424c:	str	r3, [sp, #4]
   14250:	mov	r5, r3
   14254:	add	r6, r6, #12
   14258:	mov	r9, #94	; 0x5e
   1425c:	mov	r8, #32
   14260:	b	1429c <__assert_fail@plt+0x278c>
   14264:	cmp	r4, #10
   14268:	strbeq	r8, [r5]
   1426c:	addeq	r5, r5, #1
   14270:	beq	14298 <__assert_fail@plt+0x2788>
   14274:	cmp	r4, #9
   14278:	beq	142c8 <__assert_fail@plt+0x27b8>
   1427c:	cmp	r4, #126	; 0x7e
   14280:	bgt	142c8 <__assert_fail@plt+0x27b8>
   14284:	mov	r3, r5
   14288:	eor	r4, r4, #64	; 0x40
   1428c:	strb	r9, [r3], #2
   14290:	strb	r4, [r5, #1]
   14294:	mov	r5, r3
   14298:	ldrb	r4, [fp, #1]!
   1429c:	cmp	r4, #0
   142a0:	cmpne	r5, r6
   142a4:	movcc	r3, #1
   142a8:	movcs	r3, #0
   142ac:	bcs	142d4 <__assert_fail@plt+0x27c4>
   142b0:	bl	118f4 <__ctype_b_loc@plt>
   142b4:	lsl	r3, r4, #1
   142b8:	ldr	r2, [r0]
   142bc:	ldrh	r3, [r2, r3]
   142c0:	tst	r3, #2
   142c4:	bne	14264 <__assert_fail@plt+0x2754>
   142c8:	strb	r4, [r5]
   142cc:	add	r5, r5, #1
   142d0:	b	14298 <__assert_fail@plt+0x2788>
   142d4:	ldr	r2, [pc, #152]	; 14374 <__assert_fail@plt+0x2864>
   142d8:	strb	r3, [r5]
   142dc:	ldr	r1, [sp, #4]
   142e0:	ldr	r3, [r2]
   142e4:	mov	r0, r7
   142e8:	cmp	r3, #0
   142ec:	mov	r2, sl
   142f0:	movne	r3, #2
   142f4:	bl	13dac <__assert_fail@plt+0x229c>
   142f8:	add	sp, sp, #1040	; 0x410
   142fc:	add	sp, sp, #4
   14300:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14304:	bl	118f4 <__ctype_b_loc@plt>
   14308:	mov	r7, #0
   1430c:	mov	ip, fp
   14310:	ldr	r0, [r0]
   14314:	b	14320 <__assert_fail@plt+0x2810>
   14318:	add	r7, r2, r1, lsl #1
   1431c:	mov	ip, fp
   14320:	ldrb	r4, [fp, #1]!
   14324:	add	r1, r7, r7, lsl #2
   14328:	sub	r2, r4, #48	; 0x30
   1432c:	lsl	r3, r4, #1
   14330:	ldrh	r3, [r0, r3]
   14334:	tst	r3, #2048	; 0x800
   14338:	bne	14318 <__assert_fail@plt+0x2808>
   1433c:	cmp	r4, #62	; 0x3e
   14340:	bic	r3, r7, #1020	; 0x3fc
   14344:	bic	r3, r3, #3
   14348:	ldrbeq	r4, [ip, #2]
   1434c:	addeq	fp, ip, #2
   14350:	cmp	r3, #0
   14354:	bne	14240 <__assert_fail@plt+0x2730>
   14358:	asr	r3, r7, #3
   1435c:	cmp	r3, #24
   14360:	bgt	14240 <__assert_fail@plt+0x2730>
   14364:	cmp	r3, #0
   14368:	andeq	r7, r7, #7
   1436c:	orreq	r7, r7, #8
   14370:	b	14244 <__assert_fail@plt+0x2734>
   14374:	andeq	pc, r2, r4, lsr ip	; <UNPREDICTABLE>
   14378:	ldr	r3, [pc, #292]	; 144a4 <__assert_fail@plt+0x2994>
   1437c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14380:	mov	r4, r0
   14384:	sub	sp, sp, #1024	; 0x400
   14388:	ldm	r3, {r0, r1, r2}
   1438c:	sub	sp, sp, #8
   14390:	ldrb	r3, [r4]
   14394:	add	ip, sp, #4
   14398:	cmp	r3, #0
   1439c:	stmia	ip!, {r0, r1}
   143a0:	strb	r2, [ip]
   143a4:	beq	14438 <__assert_fail@plt+0x2928>
   143a8:	add	r5, sp, #1024	; 0x400
   143ac:	ldr	r7, [pc, #244]	; 144a8 <__assert_fail@plt+0x2998>
   143b0:	ldr	r9, [pc, #244]	; 144ac <__assert_fail@plt+0x299c>
   143b4:	mov	r8, #7
   143b8:	add	r5, r5, #4
   143bc:	mov	r6, #0
   143c0:	cmp	r3, #60	; 0x3c
   143c4:	beq	14444 <__assert_fail@plt+0x2934>
   143c8:	ldrb	r2, [r4]
   143cc:	mov	r3, r8
   143d0:	mov	lr, #2
   143d4:	cmp	r2, #0
   143d8:	beq	1449c <__assert_fail@plt+0x298c>
   143dc:	cmp	r2, #10
   143e0:	add	r4, r4, #1
   143e4:	beq	1449c <__assert_fail@plt+0x298c>
   143e8:	mov	r1, r4
   143ec:	add	ip, sp, #12
   143f0:	b	14404 <__assert_fail@plt+0x28f4>
   143f4:	cmp	r2, #10
   143f8:	cmpne	ip, r5
   143fc:	mov	r4, r1
   14400:	bcs	14418 <__assert_fail@plt+0x2908>
   14404:	strb	r2, [ip], #1
   14408:	mov	r4, r1
   1440c:	ldrb	r2, [r1], #1
   14410:	cmp	r2, #0
   14414:	bne	143f4 <__assert_fail@plt+0x28e4>
   14418:	mov	r0, lr
   1441c:	ldr	r2, [r7]
   14420:	add	r1, sp, #4
   14424:	strb	r6, [ip]
   14428:	bl	13dac <__assert_fail@plt+0x229c>
   1442c:	ldrb	r3, [r4]
   14430:	cmp	r3, #0
   14434:	bne	143c0 <__assert_fail@plt+0x28b0>
   14438:	add	sp, sp, #1024	; 0x400
   1443c:	add	sp, sp, #8
   14440:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14444:	bl	118f4 <__ctype_b_loc@plt>
   14448:	mov	ip, r4
   1444c:	mov	lr, #0
   14450:	ldr	sl, [r0]
   14454:	b	14460 <__assert_fail@plt+0x2950>
   14458:	add	lr, r1, r0, lsl #1
   1445c:	mov	ip, r4
   14460:	ldrb	r2, [r4, #1]!
   14464:	add	r0, lr, lr, lsl #2
   14468:	sub	r1, r2, #48	; 0x30
   1446c:	lsl	r3, r2, #1
   14470:	ldrh	r3, [sl, r3]
   14474:	tst	r3, #2048	; 0x800
   14478:	bne	14458 <__assert_fail@plt+0x2948>
   1447c:	cmp	r2, #62	; 0x3e
   14480:	addeq	r4, ip, #2
   14484:	ldrbeq	r2, [ip, #2]
   14488:	tst	lr, r9
   1448c:	movne	lr, #2
   14490:	cmp	r2, #0
   14494:	mov	r3, #6
   14498:	bne	143dc <__assert_fail@plt+0x28cc>
   1449c:	add	ip, sp, #12
   144a0:	b	14418 <__assert_fail@plt+0x2908>
   144a4:	strdeq	sp, [r1], -r4
   144a8:	andeq	pc, r2, r0, asr #24
   144ac:			; <UNDEFINED> instruction: 0xfffffc00
   144b0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   144b4:	mov	r0, #0
   144b8:	bl	1175c <time@plt>
   144bc:	ldr	r5, [pc, #252]	; 145c0 <__assert_fail@plt+0x2ab0>
   144c0:	ldr	r6, [pc, #252]	; 145c4 <__assert_fail@plt+0x2ab4>
   144c4:	ldr	r2, [r5, #8]
   144c8:	cmp	r2, #0
   144cc:	str	r0, [r6]
   144d0:	ble	144ec <__assert_fail@plt+0x29dc>
   144d4:	ldr	r4, [pc, #236]	; 145c8 <__assert_fail@plt+0x2ab8>
   144d8:	ldr	r3, [r4]
   144dc:	add	r3, r3, #30
   144e0:	cmp	r2, r3
   144e4:	str	r3, [r4]
   144e8:	ble	1459c <__assert_fail@plt+0x2a8c>
   144ec:	ldr	r3, [pc, #216]	; 145cc <__assert_fail@plt+0x2abc>
   144f0:	ldr	r4, [r3]
   144f4:	cmp	r4, #0
   144f8:	beq	14590 <__assert_fail@plt+0x2a80>
   144fc:	ldr	sl, [pc, #204]	; 145d0 <__assert_fail@plt+0x2ac0>
   14500:	ldr	r9, [pc, #204]	; 145d4 <__assert_fail@plt+0x2ac4>
   14504:	mov	r8, #0
   14508:	mov	r7, #1
   1450c:	b	1451c <__assert_fail@plt+0x2a0c>
   14510:	ldr	r4, [r4]
   14514:	cmp	r4, #0
   14518:	beq	14590 <__assert_fail@plt+0x2a80>
   1451c:	ldr	r2, [r4, #452]	; 0x1c4
   14520:	cmp	r2, #0
   14524:	beq	14510 <__assert_fail@plt+0x2a00>
   14528:	ldr	r3, [r4, #456]	; 0x1c8
   1452c:	ldr	r1, [r4, #8]
   14530:	ldr	r0, [r6]
   14534:	add	r3, r5, r3, lsl #2
   14538:	ldr	r3, [r3, #376]	; 0x178
   1453c:	add	r1, r3, r1
   14540:	cmp	r1, r0
   14544:	bgt	14510 <__assert_fail@plt+0x2a00>
   14548:	ldrsh	r1, [r4, #4]
   1454c:	mov	r0, sl
   14550:	add	r1, r5, r1, lsl #2
   14554:	ldr	r1, [r1, #320]	; 0x140
   14558:	bl	129ec <__assert_fail@plt+0xedc>
   1455c:	mov	r3, r8
   14560:	mov	r0, r4
   14564:	mov	r2, #0
   14568:	ldr	r1, [r9]
   1456c:	bl	136a4 <__assert_fail@plt+0x1b94>
   14570:	ldr	r3, [r4, #456]	; 0x1c8
   14574:	add	r3, r3, #1
   14578:	cmp	r3, #1
   1457c:	movhi	r3, r7
   14580:	str	r3, [r4, #456]	; 0x1c8
   14584:	ldr	r4, [r4]
   14588:	cmp	r4, #0
   1458c:	bne	1451c <__assert_fail@plt+0x2a0c>
   14590:	mov	r0, #30
   14594:	pop	{r4, r5, r6, r7, r8, r9, sl, lr}
   14598:	b	117bc <alarm@plt>
   1459c:	ldr	r2, [pc, #48]	; 145d4 <__assert_fail@plt+0x2ac4>
   145a0:	mov	r3, #12
   145a4:	ldr	r1, [pc, #44]	; 145d8 <__assert_fail@plt+0x2ac8>
   145a8:	ldr	r2, [r2]
   145ac:	mov	r0, #6
   145b0:	bl	13dac <__assert_fail@plt+0x229c>
   145b4:	mov	r3, #0
   145b8:	str	r3, [r4]
   145bc:	b	144ec <__assert_fail@plt+0x29dc>
   145c0:			; <UNDEFINED> instruction: 0x0002f1b0
   145c4:	andeq	pc, r2, r0, lsl #25
   145c8:	andeq	pc, r2, ip, lsl #25
   145cc:	andeq	pc, r2, r0, asr sl	; <UNPREDICTABLE>
   145d0:	andeq	sp, r1, ip, lsl #6
   145d4:	andeq	pc, r2, r0, asr #24
   145d8:	andeq	sp, r1, r0, lsl #6
   145dc:	ldr	r3, [pc, #324]	; 14728 <__assert_fail@plt+0x2c18>
   145e0:	push	{r4, r5, r6, r7, r8, r9, lr}
   145e4:	mov	r5, #0
   145e8:	ldr	r4, [r3]
   145ec:	ldr	r6, [pc, #312]	; 1472c <__assert_fail@plt+0x2c1c>
   145f0:	cmp	r4, r5
   145f4:	sub	sp, sp, #108	; 0x6c
   145f8:	ldr	r9, [r6]
   145fc:	mov	r8, r0
   14600:	str	r5, [r6]
   14604:	ldrne	r7, [pc, #292]	; 14730 <__assert_fail@plt+0x2c20>
   14608:	bne	1461c <__assert_fail@plt+0x2b0c>
   1460c:	b	14648 <__assert_fail@plt+0x2b38>
   14610:	ldr	r4, [r4]
   14614:	cmp	r4, #0
   14618:	beq	14648 <__assert_fail@plt+0x2b38>
   1461c:	ldr	r3, [r4, #452]	; 0x1c4
   14620:	cmp	r3, #0
   14624:	beq	14610 <__assert_fail@plt+0x2b00>
   14628:	mov	r0, r4
   1462c:	mov	r3, r5
   14630:	mov	r2, #0
   14634:	ldr	r1, [r7]
   14638:	bl	136a4 <__assert_fail@plt+0x1b94>
   1463c:	ldr	r4, [r4]
   14640:	cmp	r4, #0
   14644:	bne	1461c <__assert_fail@plt+0x2b0c>
   14648:	cmp	r8, #0
   1464c:	str	r9, [r6]
   14650:	bne	146e4 <__assert_fail@plt+0x2bd4>
   14654:	ldr	r6, [pc, #216]	; 14734 <__assert_fail@plt+0x2c24>
   14658:	ldr	r0, [r6, #384]	; 0x180
   1465c:	cmp	r0, #0
   14660:	blt	14668 <__assert_fail@plt+0x2b58>
   14664:	bl	11af8 <close@plt>
   14668:	ldr	r7, [pc, #200]	; 14738 <__assert_fail@plt+0x2c28>
   1466c:	ldr	r3, [r7]
   14670:	cmp	r3, #0
   14674:	movne	r4, #0
   14678:	ldrne	r5, [pc, #188]	; 1473c <__assert_fail@plt+0x2c2c>
   1467c:	beq	146bc <__assert_fail@plt+0x2bac>
   14680:	ldr	r3, [r5]
   14684:	add	r3, r3, r4, lsl #3
   14688:	ldr	r0, [r3, #4]
   1468c:	cmp	r0, #0
   14690:	blt	146ac <__assert_fail@plt+0x2b9c>
   14694:	bl	11af8 <close@plt>
   14698:	ldr	r3, [r5]
   1469c:	ldr	r0, [r3, r4, lsl #3]
   146a0:	cmp	r0, #0
   146a4:	beq	146ac <__assert_fail@plt+0x2b9c>
   146a8:	bl	117d4 <unlink@plt>
   146ac:	ldr	r3, [r7]
   146b0:	add	r4, r4, #1
   146b4:	cmp	r3, r4
   146b8:	bhi	14680 <__assert_fail@plt+0x2b70>
   146bc:	ldr	r0, [r6, #312]	; 0x138
   146c0:	cmp	r0, #0
   146c4:	blt	146cc <__assert_fail@plt+0x2bbc>
   146c8:	bl	11af8 <close@plt>
   146cc:	ldr	r0, [r6, #316]	; 0x13c
   146d0:	cmp	r0, #0
   146d4:	blt	146dc <__assert_fail@plt+0x2bcc>
   146d8:	bl	11af8 <close@plt>
   146dc:	mov	r0, #0
   146e0:	bl	1190c <exit@plt>
   146e4:	ldr	r3, [pc, #84]	; 14740 <__assert_fail@plt+0x2c30>
   146e8:	mov	r2, r8
   146ec:	ldr	r0, [pc, #80]	; 14744 <__assert_fail@plt+0x2c34>
   146f0:	ldr	r1, [r3]
   146f4:	bl	129ec <__assert_fail@plt+0xedc>
   146f8:	mov	r3, r8
   146fc:	ldr	r2, [pc, #68]	; 14748 <__assert_fail@plt+0x2c38>
   14700:	mov	r1, #100	; 0x64
   14704:	add	r0, sp, #4
   14708:	bl	11954 <snprintf@plt>
   1470c:	bl	11948 <__errno_location@plt>
   14710:	mov	r2, #0
   14714:	mov	r3, r0
   14718:	add	r0, sp, #4
   1471c:	str	r2, [r3]
   14720:	bl	13474 <__assert_fail@plt+0x1964>
   14724:	b	14654 <__assert_fail@plt+0x2b44>
   14728:	andeq	pc, r2, r0, asr sl	; <UNPREDICTABLE>
   1472c:	andeq	pc, r2, r8, lsr ip	; <UNPREDICTABLE>
   14730:	andeq	pc, r2, r0, asr #24
   14734:			; <UNDEFINED> instruction: 0x0002f1b0
   14738:	andeq	pc, r2, r8, lsr #24
   1473c:	andeq	pc, r2, r8, lsl #25
   14740:	andeq	pc, r2, r4, asr #11
   14744:	andeq	sp, r1, r4, lsr r3
   14748:	andeq	sp, r1, r0, asr r3
   1474c:	push	{r4, r5, r6, lr}
   14750:	mov	r5, r0
   14754:	mov	r4, r1
   14758:	bl	118f4 <__ctype_b_loc@plt>
   1475c:	ldrb	r3, [r5]
   14760:	lsl	r3, r3, #1
   14764:	ldr	r2, [r0]
   14768:	ldrh	r3, [r2, r3]
   1476c:	tst	r3, #2048	; 0x800
   14770:	bne	147b0 <__assert_fail@plt+0x2ca0>
   14774:	ldr	r1, [r4]
   14778:	cmp	r1, #0
   1477c:	bne	14790 <__assert_fail@plt+0x2c80>
   14780:	b	147a8 <__assert_fail@plt+0x2c98>
   14784:	ldr	r1, [r4, #8]!
   14788:	cmp	r1, #0
   1478c:	beq	147a8 <__assert_fail@plt+0x2c98>
   14790:	mov	r0, r5
   14794:	bl	11804 <strcasecmp@plt>
   14798:	cmp	r0, #0
   1479c:	bne	14784 <__assert_fail@plt+0x2c74>
   147a0:	ldr	r0, [r4, #4]
   147a4:	pop	{r4, r5, r6, pc}
   147a8:	mvn	r0, #0
   147ac:	pop	{r4, r5, r6, pc}
   147b0:	mov	r0, r5
   147b4:	mov	r2, #10
   147b8:	mov	r1, #0
   147bc:	pop	{r4, r5, r6, lr}
   147c0:	b	11690 <strtol@plt>
   147c4:	ldr	r3, [pc, #1948]	; 14f68 <__assert_fail@plt+0x3458>
   147c8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   147cc:	sub	sp, sp, #1248	; 0x4e0
   147d0:	ldr	r3, [r3]
   147d4:	sub	sp, sp, #4
   147d8:	cmp	r3, #0
   147dc:	str	r1, [sp, #8]
   147e0:	ldreq	r2, [pc, #1924]	; 14f6c <__assert_fail@plt+0x345c>
   147e4:	ldrne	r2, [pc, #1924]	; 14f70 <__assert_fail@plt+0x3460>
   147e8:	moveq	r3, r2
   147ec:	mov	r1, r0
   147f0:	mov	r4, r0
   147f4:	ldr	r0, [pc, #1912]	; 14f74 <__assert_fail@plt+0x3464>
   147f8:	bl	129ec <__assert_fail@plt+0xedc>
   147fc:	bl	11948 <__errno_location@plt>
   14800:	ldr	r6, [sp, #8]
   14804:	mov	r5, #0
   14808:	mov	r1, r5
   1480c:	mov	r2, #464	; 0x1d0
   14810:	str	r5, [r0]
   14814:	mov	r0, r6
   14818:	bl	11984 <memset@plt>
   1481c:	add	r2, r6, #12
   14820:	str	r2, [sp, #12]
   14824:	add	r3, r6, #11
   14828:	mov	r2, r5
   1482c:	add	r1, r6, #36	; 0x24
   14830:	strb	r2, [r3, #1]!
   14834:	cmp	r3, r1
   14838:	bne	14830 <__assert_fail@plt+0x2d20>
   1483c:	ldr	r3, [sp, #8]
   14840:	ldr	r7, [pc, #1840]	; 14f78 <__assert_fail@plt+0x3468>
   14844:	mov	r9, r4
   14848:	str	r2, [r3, #460]	; 0x1cc
   1484c:	ldrb	fp, [r9]
   14850:	and	r2, fp, #223	; 0xdf
   14854:	cmp	fp, #9
   14858:	cmpne	r2, #0
   1485c:	beq	14b34 <__assert_fail@plt+0x3024>
   14860:	mov	r4, fp
   14864:	cmp	r4, #0
   14868:	cmpne	r4, #9
   1486c:	mov	r2, r9
   14870:	beq	14894 <__assert_fail@plt+0x2d84>
   14874:	cmp	r4, #46	; 0x2e
   14878:	add	r8, r2, #1
   1487c:	ldrb	r4, [r2, #1]
   14880:	beq	14898 <__assert_fail@plt+0x2d88>
   14884:	cmp	r4, #0
   14888:	cmpne	r4, #9
   1488c:	mov	r2, r8
   14890:	bne	14874 <__assert_fail@plt+0x2d64>
   14894:	mov	r8, r2
   14898:	cmp	r4, #0
   1489c:	addne	r3, sp, #224	; 0xe0
   148a0:	strne	r3, [sp, #4]
   148a4:	movne	r5, r3
   148a8:	bne	148c0 <__assert_fail@plt+0x2db0>
   148ac:	b	14c20 <__assert_fail@plt+0x3110>
   148b0:	strb	r4, [r5], #1
   148b4:	ldrb	r4, [r8, #1]!
   148b8:	cmp	r4, #0
   148bc:	beq	14aec <__assert_fail@plt+0x2fdc>
   148c0:	mov	r1, r4
   148c4:	ldr	r0, [pc, #1712]	; 14f7c <__assert_fail@plt+0x346c>
   148c8:	bl	11930 <strchr@plt>
   148cc:	cmp	r0, #0
   148d0:	beq	148b0 <__assert_fail@plt+0x2da0>
   148d4:	ldrb	r1, [r8]
   148d8:	mov	r2, #0
   148dc:	strb	r2, [r5]
   148e0:	cmp	r1, r2
   148e4:	bne	148f8 <__assert_fail@plt+0x2de8>
   148e8:	b	14908 <__assert_fail@plt+0x2df8>
   148ec:	ldrb	r1, [r8, #1]!
   148f0:	cmp	r1, #0
   148f4:	beq	14908 <__assert_fail@plt+0x2df8>
   148f8:	ldr	r0, [pc, #1664]	; 14f80 <__assert_fail@plt+0x3470>
   148fc:	bl	11930 <strchr@plt>
   14900:	cmp	r0, #0
   14904:	bne	148ec <__assert_fail@plt+0x2ddc>
   14908:	mov	r4, #0
   1490c:	ldr	r1, [sp, #4]
   14910:	mov	r6, r4
   14914:	mov	r0, #1
   14918:	mov	sl, r1
   1491c:	ldrb	r2, [r1], #1
   14920:	cmp	r2, #61	; 0x3d
   14924:	cmpne	r2, #33	; 0x21
   14928:	moveq	r5, #1
   1492c:	movne	r5, #0
   14930:	bne	1494c <__assert_fail@plt+0x2e3c>
   14934:	cmp	r2, #33	; 0x21
   14938:	moveq	r6, r0
   1493c:	beq	14918 <__assert_fail@plt+0x2e08>
   14940:	cmp	r2, #61	; 0x3d
   14944:	moveq	r4, #1
   14948:	b	14918 <__assert_fail@plt+0x2e08>
   1494c:	cmp	r2, #42	; 0x2a
   14950:	beq	14ae4 <__assert_fail@plt+0x2fd4>
   14954:	ldr	r1, [pc, #1576]	; 14f84 <__assert_fail@plt+0x3474>
   14958:	mov	r0, sl
   1495c:	bl	1474c <__assert_fail@plt+0x2c3c>
   14960:	cmp	r0, #0
   14964:	blt	14c30 <__assert_fail@plt+0x3120>
   14968:	cmp	r0, #16
   1496c:	cmpne	r0, #7
   14970:	movgt	r5, #1
   14974:	movle	r5, #0
   14978:	bgt	14c30 <__assert_fail@plt+0x3120>
   1497c:	cmp	r0, #16
   14980:	beq	14b24 <__assert_fail@plt+0x3014>
   14984:	cmp	r4, #0
   14988:	movne	r2, #1
   1498c:	addeq	r0, r0, #1
   14990:	mvneq	r2, #0
   14994:	ldrb	fp, [r9]
   14998:	lslne	r2, r2, r0
   1499c:	mvneq	r2, r2, lsl r0
   149a0:	moveq	r5, r4
   149a4:	cmp	r6, #0
   149a8:	moveq	r6, r5
   149ac:	movne	r6, r2
   149b0:	ldr	sl, [pc, #1488]	; 14f88 <__assert_fail@plt+0x3478>
   149b4:	mvn	r6, r6
   149b8:	moveq	r5, r2
   149bc:	cmp	fp, #0
   149c0:	beq	14a98 <__assert_fail@plt+0x2f88>
   149c4:	mov	r1, fp
   149c8:	ldr	r0, [pc, #1468]	; 14f8c <__assert_fail@plt+0x347c>
   149cc:	bl	11930 <strchr@plt>
   149d0:	cmp	r0, #0
   149d4:	bne	14a98 <__assert_fail@plt+0x2f88>
   149d8:	ldr	r4, [sp, #4]
   149dc:	b	149f0 <__assert_fail@plt+0x2ee0>
   149e0:	strb	fp, [r4], #1
   149e4:	ldrb	fp, [r9, #1]!
   149e8:	cmp	fp, #0
   149ec:	beq	14a04 <__assert_fail@plt+0x2ef4>
   149f0:	mov	r1, fp
   149f4:	mov	r0, r7
   149f8:	bl	11930 <strchr@plt>
   149fc:	cmp	r0, #0
   14a00:	beq	149e0 <__assert_fail@plt+0x2ed0>
   14a04:	mov	r3, #0
   14a08:	strb	r3, [r4]
   14a0c:	ldrb	r3, [sp, #224]	; 0xe0
   14a10:	cmp	r3, #42	; 0x2a
   14a14:	bne	14aa0 <__assert_fail@plt+0x2f90>
   14a18:	ldrb	r0, [sp, #225]	; 0xe1
   14a1c:	ldr	ip, [sl]
   14a20:	ldr	r2, [sp, #12]
   14a24:	mov	r1, #0
   14a28:	b	14a4c <__assert_fail@plt+0x2f3c>
   14a2c:	ldrb	r3, [r2]
   14a30:	add	r1, r1, #1
   14a34:	cmp	r1, #25
   14a38:	and	r3, r3, r6
   14a3c:	orr	r3, r3, r5
   14a40:	strb	r3, [r2]
   14a44:	add	r2, r2, #1
   14a48:	beq	14a70 <__assert_fail@plt+0x2f60>
   14a4c:	cmp	r0, #42	; 0x2a
   14a50:	bne	14a2c <__assert_fail@plt+0x2f1c>
   14a54:	asr	r3, ip, r1
   14a58:	tst	r3, #1
   14a5c:	beq	14a2c <__assert_fail@plt+0x2f1c>
   14a60:	add	r1, r1, #1
   14a64:	cmp	r1, #25
   14a68:	add	r2, r2, #1
   14a6c:	bne	14a4c <__assert_fail@plt+0x2f3c>
   14a70:	ldrb	fp, [r9]
   14a74:	cmp	fp, #44	; 0x2c
   14a78:	cmpne	fp, #32
   14a7c:	bne	149bc <__assert_fail@plt+0x2eac>
   14a80:	ldrb	fp, [r9, #1]!
   14a84:	cmp	fp, #32
   14a88:	cmpne	fp, #44	; 0x2c
   14a8c:	beq	14a80 <__assert_fail@plt+0x2f70>
   14a90:	cmp	fp, #0
   14a94:	bne	149c4 <__assert_fail@plt+0x2eb4>
   14a98:	mov	r9, r8
   14a9c:	b	1484c <__assert_fail@plt+0x2d3c>
   14aa0:	ldr	r1, [pc, #1256]	; 14f90 <__assert_fail@plt+0x3480>
   14aa4:	ldr	r0, [sp, #4]
   14aa8:	bl	1474c <__assert_fail@plt+0x2c3c>
   14aac:	cmp	r0, #192	; 0xc0
   14ab0:	bhi	14af4 <__assert_fail@plt+0x2fe4>
   14ab4:	ldr	r3, [sp, #8]
   14ab8:	asr	r0, r0, #3
   14abc:	add	r1, r3, r0
   14ac0:	ldr	r2, [sl]
   14ac4:	ldrb	r3, [r1, #12]
   14ac8:	mov	ip, #1
   14acc:	and	r3, r3, r6
   14ad0:	orr	r0, r2, ip, lsl r0
   14ad4:	orr	r3, r3, r5
   14ad8:	str	r0, [sl]
   14adc:	strb	r3, [r1, #12]
   14ae0:	b	14a70 <__assert_fail@plt+0x2f60>
   14ae4:	mov	r2, #255	; 0xff
   14ae8:	b	149a4 <__assert_fail@plt+0x2e94>
   14aec:	strb	r4, [r5]
   14af0:	b	14908 <__assert_fail@plt+0x2df8>
   14af4:	add	r3, sp, #24
   14af8:	str	r3, [sp, #8]
   14afc:	ldr	r2, [pc, #1168]	; 14f94 <__assert_fail@plt+0x3484>
   14b00:	ldr	r3, [sp, #4]
   14b04:	mov	r1, #200	; 0xc8
   14b08:	ldr	r0, [sp, #8]
   14b0c:	bl	11954 <snprintf@plt>
   14b10:	ldr	r0, [sp, #8]
   14b14:	bl	13474 <__assert_fail@plt+0x1964>
   14b18:	add	sp, sp, #1248	; 0x4e0
   14b1c:	add	sp, sp, #4
   14b20:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14b24:	mov	r2, r5
   14b28:	ldrb	fp, [r9]
   14b2c:	mov	r5, #255	; 0xff
   14b30:	b	149a4 <__assert_fail@plt+0x2e94>
   14b34:	cmp	fp, #9
   14b38:	cmpne	fp, #32
   14b3c:	mov	r4, r9
   14b40:	bne	14b54 <__assert_fail@plt+0x3044>
   14b44:	ldrb	fp, [r4, #1]!
   14b48:	cmp	fp, #32
   14b4c:	cmpne	fp, #9
   14b50:	beq	14b44 <__assert_fail@plt+0x3034>
   14b54:	cmp	fp, #45	; 0x2d
   14b58:	bne	14b70 <__assert_fail@plt+0x3060>
   14b5c:	ldr	r2, [sp, #8]
   14b60:	add	r4, r4, #1
   14b64:	ldr	r3, [r2, #460]	; 0x1cc
   14b68:	orr	r3, r3, #1
   14b6c:	str	r3, [r2, #460]	; 0x1cc
   14b70:	ldrb	r3, [r4]
   14b74:	cmp	r3, #0
   14b78:	beq	14c8c <__assert_fail@plt+0x317c>
   14b7c:	cmp	r3, #47	; 0x2f
   14b80:	beq	14ca8 <__assert_fail@plt+0x3198>
   14b84:	bls	14c74 <__assert_fail@plt+0x3164>
   14b88:	cmp	r3, #64	; 0x40
   14b8c:	beq	14e58 <__assert_fail@plt+0x3348>
   14b90:	cmp	r3, #124	; 0x7c
   14b94:	bne	14d60 <__assert_fail@plt+0x3250>
   14b98:	mov	r0, r4
   14b9c:	bl	117a4 <strdup@plt>
   14ba0:	ldr	r6, [sp, #8]
   14ba4:	add	r4, r4, #1
   14ba8:	ldr	r1, [pc, #1000]	; 14f98 <__assert_fail@plt+0x3488>
   14bac:	str	r0, [r6, #40]	; 0x28
   14bb0:	mov	r0, r4
   14bb4:	bl	1187c <open64@plt>
   14bb8:	sxth	r5, r0
   14bbc:	cmp	r5, #0
   14bc0:	strh	r5, [r6, #6]
   14bc4:	blt	14d0c <__assert_fail@plt+0x31fc>
   14bc8:	mov	r0, r4
   14bcc:	ldr	r1, [pc, #968]	; 14f9c <__assert_fail@plt+0x348c>
   14bd0:	bl	11684 <strcmp@plt>
   14bd4:	cmp	r0, #0
   14bd8:	bne	14d30 <__assert_fail@plt+0x3220>
   14bdc:	ldr	r2, [sp, #8]
   14be0:	mov	r3, #3
   14be4:	strh	r3, [r2, #4]
   14be8:	ldr	r3, [pc, #888]	; 14f68 <__assert_fail@plt+0x3458>
   14bec:	ldr	r4, [r3]
   14bf0:	cmp	r4, #0
   14bf4:	beq	14c60 <__assert_fail@plt+0x3150>
   14bf8:	mov	r0, r4
   14bfc:	bl	117a4 <strdup@plt>
   14c00:	ldr	r5, [sp, #8]
   14c04:	str	r0, [r5, #436]	; 0x1b4
   14c08:	mov	r0, r4
   14c0c:	bl	11918 <strlen@plt>
   14c10:	str	r0, [r5, #440]	; 0x1b8
   14c14:	add	sp, sp, #1248	; 0x4e0
   14c18:	add	sp, sp, #4
   14c1c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14c20:	add	r3, sp, #1248	; 0x4e0
   14c24:	strb	r4, [r3, #-1024]!	; 0xfffffc00
   14c28:	str	r3, [sp, #4]
   14c2c:	b	14908 <__assert_fail@plt+0x2df8>
   14c30:	add	r3, sp, #24
   14c34:	str	r3, [sp, #4]
   14c38:	ldr	r2, [pc, #864]	; 14fa0 <__assert_fail@plt+0x3490>
   14c3c:	mov	r3, sl
   14c40:	mov	r1, #200	; 0xc8
   14c44:	ldr	r0, [sp, #4]
   14c48:	bl	11954 <snprintf@plt>
   14c4c:	ldr	r0, [sp, #4]
   14c50:	bl	13474 <__assert_fail@plt+0x1964>
   14c54:	add	sp, sp, #1248	; 0x4e0
   14c58:	add	sp, sp, #4
   14c5c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14c60:	ldr	r3, [sp, #8]
   14c64:	str	r4, [r3, #436]	; 0x1b4
   14c68:	add	sp, sp, #1248	; 0x4e0
   14c6c:	add	sp, sp, #4
   14c70:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14c74:	cmp	r3, #42	; 0x2a
   14c78:	bne	14d60 <__assert_fail@plt+0x3250>
   14c7c:	ldr	r2, [sp, #8]
   14c80:	mov	r3, #6
   14c84:	strh	r3, [r2, #4]
   14c88:	b	14be8 <__assert_fail@plt+0x30d8>
   14c8c:	ldr	r2, [sp, #8]
   14c90:	ldr	r0, [pc, #780]	; 14fa4 <__assert_fail@plt+0x3494>
   14c94:	strh	r3, [r2, #4]
   14c98:	bl	13474 <__assert_fail@plt+0x1964>
   14c9c:	add	sp, sp, #1248	; 0x4e0
   14ca0:	add	sp, sp, #4
   14ca4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14ca8:	mov	r0, r4
   14cac:	bl	117a4 <strdup@plt>
   14cb0:	ldr	r6, [sp, #8]
   14cb4:	mov	r2, #420	; 0x1a4
   14cb8:	ldr	r1, [pc, #744]	; 14fa8 <__assert_fail@plt+0x3498>
   14cbc:	str	r0, [r6, #40]	; 0x28
   14cc0:	mov	r0, r4
   14cc4:	bl	1187c <open64@plt>
   14cc8:	sxth	r5, r0
   14ccc:	cmp	r5, #0
   14cd0:	strh	r5, [r6, #6]
   14cd4:	blt	14d0c <__assert_fail@plt+0x31fc>
   14cd8:	mov	r0, r4
   14cdc:	ldr	r1, [pc, #696]	; 14f9c <__assert_fail@plt+0x348c>
   14ce0:	bl	11684 <strcmp@plt>
   14ce4:	cmp	r0, #0
   14ce8:	beq	14bdc <__assert_fail@plt+0x30cc>
   14cec:	mov	r0, r5
   14cf0:	bl	11ac8 <isatty@plt>
   14cf4:	cmp	r0, #0
   14cf8:	bne	14d40 <__assert_fail@plt+0x3230>
   14cfc:	ldr	r2, [sp, #8]
   14d00:	mov	r3, #1
   14d04:	strh	r3, [r2, #4]
   14d08:	b	14be8 <__assert_fail@plt+0x30d8>
   14d0c:	mov	r0, r4
   14d10:	ldr	r4, [sp, #8]
   14d14:	mov	r5, #0
   14d18:	strh	r5, [r4, #4]
   14d1c:	bl	13474 <__assert_fail@plt+0x1964>
   14d20:	ldr	r0, [r4, #40]	; 0x28
   14d24:	bl	1a89c <argp_parse@@Base+0x106c>
   14d28:	str	r5, [r4, #40]	; 0x28
   14d2c:	b	14be8 <__assert_fail@plt+0x30d8>
   14d30:	mov	r0, r5
   14d34:	bl	11ac8 <isatty@plt>
   14d38:	cmp	r0, #0
   14d3c:	beq	14d50 <__assert_fail@plt+0x3240>
   14d40:	ldr	r2, [sp, #8]
   14d44:	mov	r3, #2
   14d48:	strh	r3, [r2, #4]
   14d4c:	b	14be8 <__assert_fail@plt+0x30d8>
   14d50:	ldr	r2, [sp, #8]
   14d54:	mov	r3, #9
   14d58:	strh	r3, [r2, #4]
   14d5c:	b	14be8 <__assert_fail@plt+0x30d8>
   14d60:	ldr	r2, [sp, #8]
   14d64:	mov	r3, #1
   14d68:	str	r3, [r2, #40]	; 0x28
   14d6c:	ldrb	r2, [r4]
   14d70:	cmp	r2, #0
   14d74:	beq	14f18 <__assert_fail@plt+0x3408>
   14d78:	mov	r1, r4
   14d7c:	cmp	r2, #44	; 0x2c
   14d80:	addeq	r3, r3, #1
   14d84:	ldreq	r2, [sp, #8]
   14d88:	streq	r3, [r2, #40]	; 0x28
   14d8c:	ldrb	r2, [r1, #1]!
   14d90:	cmp	r2, #0
   14d94:	bne	14d7c <__assert_fail@plt+0x326c>
   14d98:	lsl	r0, r3, #2
   14d9c:	bl	1b5a8 <argp_parse@@Base+0x1d78>
   14da0:	ldr	sl, [sp, #8]
   14da4:	str	r0, [sl, #44]	; 0x2c
   14da8:	ldrb	r3, [r4]
   14dac:	cmp	r3, #0
   14db0:	beq	14f08 <__assert_fail@plt+0x33f8>
   14db4:	mov	r8, #0
   14db8:	mov	r9, r0
   14dbc:	mov	r6, r8
   14dc0:	mov	r7, #1
   14dc4:	cmp	r3, #44	; 0x2c
   14dc8:	mov	r5, r4
   14dcc:	moveq	r0, r7
   14dd0:	moveq	fp, r6
   14dd4:	beq	14df0 <__assert_fail@plt+0x32e0>
   14dd8:	ldrb	r3, [r5, #1]!
   14ddc:	cmp	r3, #0
   14de0:	cmpne	r3, #44	; 0x2c
   14de4:	bne	14dd8 <__assert_fail@plt+0x32c8>
   14de8:	sub	fp, r5, r4
   14dec:	add	r0, fp, #1
   14df0:	bl	1b5a8 <argp_parse@@Base+0x1d78>
   14df4:	str	r0, [r9, r8]
   14df8:	ldr	r3, [sl, #44]	; 0x2c
   14dfc:	ldr	r0, [r3, r8]
   14e00:	cmp	r0, #0
   14e04:	beq	14e20 <__assert_fail@plt+0x3310>
   14e08:	mov	r1, r4
   14e0c:	mov	r2, fp
   14e10:	bl	11990 <strncpy@plt>
   14e14:	ldr	r3, [sl, #44]	; 0x2c
   14e18:	ldr	r3, [r3, r8]
   14e1c:	strb	r6, [r3, fp]
   14e20:	ldrb	r3, [r5]
   14e24:	cmp	r3, #32
   14e28:	cmpne	r3, #44	; 0x2c
   14e2c:	bne	14e40 <__assert_fail@plt+0x3330>
   14e30:	ldrb	r3, [r5, #1]!
   14e34:	cmp	r3, #32
   14e38:	cmpne	r3, #44	; 0x2c
   14e3c:	beq	14e30 <__assert_fail@plt+0x3320>
   14e40:	cmp	r3, #0
   14e44:	add	r8, r8, #4
   14e48:	beq	14f08 <__assert_fail@plt+0x33f8>
   14e4c:	ldr	r9, [sl, #44]	; 0x2c
   14e50:	mov	r4, r5
   14e54:	b	14dc4 <__assert_fail@plt+0x32b4>
   14e58:	add	r4, r4, #1
   14e5c:	mov	r0, r4
   14e60:	bl	117a4 <strdup@plt>
   14e64:	ldr	r3, [sp, #8]
   14e68:	mov	r5, #32
   14e6c:	mov	r2, r5
   14e70:	mov	r1, #0
   14e74:	str	r0, [r3, #40]	; 0x28
   14e78:	add	r0, sp, #24
   14e7c:	bl	11984 <memset@plt>
   14e80:	ldr	r3, [pc, #292]	; 14fac <__assert_fail@plt+0x349c>
   14e84:	mov	r2, #2
   14e88:	str	r2, [sp, #32]
   14e8c:	ldr	r3, [r3, #4]
   14e90:	mov	r2, #128	; 0x80
   14e94:	cmp	r3, #0
   14e98:	str	r3, [sp, #28]
   14e9c:	ldr	r3, [sp, #8]
   14ea0:	streq	r5, [sp, #24]
   14ea4:	add	r6, r3, #44	; 0x2c
   14ea8:	mov	r5, #0
   14eac:	str	r5, [r3, #172]	; 0xac
   14eb0:	mov	r1, r5
   14eb4:	mov	r0, r6
   14eb8:	bl	11984 <memset@plt>
   14ebc:	ldr	r1, [pc, #236]	; 14fb0 <__assert_fail@plt+0x34a0>
   14ec0:	add	r3, sp, #20
   14ec4:	add	r2, sp, #24
   14ec8:	mov	r0, r4
   14ecc:	ldr	r1, [r1, #44]	; 0x2c
   14ed0:	bl	11a98 <getaddrinfo@plt>
   14ed4:	cmp	r0, #0
   14ed8:	beq	14f38 <__assert_fail@plt+0x3428>
   14edc:	cmn	r0, #10
   14ee0:	beq	14f20 <__assert_fail@plt+0x3410>
   14ee4:	cmn	r0, #3
   14ee8:	beq	14f20 <__assert_fail@plt+0x3410>
   14eec:	ldr	r3, [sp, #8]
   14ef0:	strh	r5, [r3, #4]
   14ef4:	mov	r0, #0
   14ef8:	bl	1175c <time@plt>
   14efc:	ldr	r3, [sp, #8]
   14f00:	str	r0, [r3, #8]
   14f04:	b	14be8 <__assert_fail@plt+0x30d8>
   14f08:	ldr	r2, [sp, #8]
   14f0c:	mov	r3, #5
   14f10:	strh	r3, [r2, #4]
   14f14:	b	14be8 <__assert_fail@plt+0x30d8>
   14f18:	mov	r0, #4
   14f1c:	b	14d9c <__assert_fail@plt+0x328c>
   14f20:	ldr	r1, [sp, #8]
   14f24:	mov	r2, #8
   14f28:	mov	r3, #10
   14f2c:	strh	r2, [r1, #4]
   14f30:	str	r3, [r1, #452]	; 0x1c4
   14f34:	b	14ef4 <__assert_fail@plt+0x33e4>
   14f38:	ldr	r4, [sp, #20]
   14f3c:	ldr	r1, [sp, #8]
   14f40:	mov	r3, #4
   14f44:	ldr	r2, [r4, #16]
   14f48:	mov	r0, r6
   14f4c:	strh	r3, [r1, #4]
   14f50:	str	r2, [r1, #172]	; 0xac
   14f54:	ldr	r1, [r4, #20]
   14f58:	bl	11744 <memcpy@plt>
   14f5c:	mov	r0, r4
   14f60:	bl	11a8c <freeaddrinfo@plt>
   14f64:	b	14be8 <__assert_fail@plt+0x30d8>
   14f68:	andeq	pc, r2, r8, asr #24
   14f6c:	muleq	r1, r4, sl
   14f70:	andeq	sp, r1, r8, ror #6
   14f74:	andeq	sp, r1, r4, ror r3
   14f78:	andeq	sp, r1, ip, lsr #7
   14f7c:	andeq	sp, r1, r4, lsl #7
   14f80:	andeq	sp, r1, ip, lsl #7
   14f84:	andeq	pc, r2, r0, lsl #5
   14f88:	andeq	pc, r2, ip, asr #20
   14f8c:	ldrdeq	sp, [r1], -r0
   14f90:	andeq	pc, r2, r8, asr #3
   14f94:			; <UNDEFINED> instruction: 0x0001d3b4
   14f98:	andeq	r0, r0, r2, lsl #16
   14f9c:	andeq	pc, r2, r8, lsl r3	; <UNPREDICTABLE>
   14fa0:	muleq	r1, r0, r3
   14fa4:	ldrdeq	sp, [r1], -r8
   14fa8:	andeq	r0, r0, r1, asr #8
   14fac:			; <UNDEFINED> instruction: 0x0002f1b0
   14fb0:	ldrdeq	pc, [r2], -r4
   14fb4:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14fb8:	mov	r4, r0
   14fbc:	ldr	r1, [pc, #844]	; 15310 <__assert_fail@plt+0x3800>
   14fc0:	bl	11a68 <fopen64@plt>
   14fc4:	subs	sl, r0, #0
   14fc8:	beq	15260 <__assert_fail@plt+0x3750>
   14fcc:	mov	r0, #2048	; 0x800
   14fd0:	bl	1b5a8 <argp_parse@@Base+0x1d78>
   14fd4:	subs	fp, r0, #0
   14fd8:	beq	15290 <__assert_fail@plt+0x3780>
   14fdc:	ldr	r3, [pc, #816]	; 15314 <__assert_fail@plt+0x3804>
   14fe0:	mov	r6, fp
   14fe4:	mov	r9, #2048	; 0x800
   14fe8:	ldr	r0, [r3]
   14fec:	bl	1a89c <argp_parse@@Base+0x106c>
   14ff0:	mov	r2, #0
   14ff4:	ldr	r3, [pc, #792]	; 15314 <__assert_fail@plt+0x3804>
   14ff8:	mov	r7, r2
   14ffc:	mov	r8, r2
   15000:	str	r2, [r3]
   15004:	sub	r5, fp, r6
   15008:	sub	r1, r9, r5
   1500c:	mov	r2, sl
   15010:	mov	r0, fp
   15014:	bl	11720 <fgets@plt>
   15018:	cmp	r0, #0
   1501c:	beq	15240 <__assert_fail@plt+0x3730>
   15020:	mov	r0, fp
   15024:	bl	11918 <strlen@plt>
   15028:	cmp	r7, #0
   1502c:	mov	r4, r0
   15030:	beq	1506c <__assert_fail@plt+0x355c>
   15034:	ldrb	r3, [fp]
   15038:	mov	r1, fp
   1503c:	cmp	r3, #32
   15040:	cmpne	r3, #9
   15044:	bne	15258 <__assert_fail@plt+0x3748>
   15048:	ldrb	r3, [r1, #1]!
   1504c:	cmp	r3, #9
   15050:	cmpne	r3, #32
   15054:	beq	15048 <__assert_fail@plt+0x3538>
   15058:	sub	r3, r1, fp
   1505c:	sub	r4, r4, r3
   15060:	add	r2, r4, #1
   15064:	mov	r0, fp
   15068:	bl	116f0 <memmove@plt>
   1506c:	mov	r0, fp
   15070:	mov	r1, #10
   15074:	bl	11930 <strchr@plt>
   15078:	cmp	r0, #0
   1507c:	beq	15210 <__assert_fail@plt+0x3700>
   15080:	bl	118f4 <__ctype_b_loc@plt>
   15084:	mov	r3, r6
   15088:	ldr	r1, [r0]
   1508c:	mov	r4, r0
   15090:	mov	r5, r3
   15094:	ldrb	r2, [r3], #1
   15098:	lsl	r0, r2, #1
   1509c:	ldrh	r0, [r1, r0]
   150a0:	tst	r0, #8192	; 0x2000
   150a4:	bne	15090 <__assert_fail@plt+0x3580>
   150a8:	cmp	r2, #33	; 0x21
   150ac:	beq	150cc <__assert_fail@plt+0x35bc>
   150b0:	cmp	r2, #35	; 0x23
   150b4:	beq	15160 <__assert_fail@plt+0x3650>
   150b8:	cmp	r2, #0
   150bc:	bne	15178 <__assert_fail@plt+0x3668>
   150c0:	mov	fp, r6
   150c4:	mov	r7, r8
   150c8:	b	15004 <__assert_fail@plt+0x34f4>
   150cc:	ldrb	r2, [r5, #1]
   150d0:	mov	r4, r3
   150d4:	cmp	r2, #33	; 0x21
   150d8:	bne	150e4 <__assert_fail@plt+0x35d4>
   150dc:	b	1516c <__assert_fail@plt+0x365c>
   150e0:	ldrb	r2, [r4, #1]!
   150e4:	lsl	r3, r2, #1
   150e8:	ldrh	r3, [r1, r3]
   150ec:	tst	r3, #8192	; 0x2000
   150f0:	bne	150e0 <__assert_fail@plt+0x35d0>
   150f4:	cmp	r2, #0
   150f8:	beq	150c0 <__assert_fail@plt+0x35b0>
   150fc:	ldr	r3, [pc, #528]	; 15314 <__assert_fail@plt+0x3804>
   15100:	ldr	r0, [r3]
   15104:	bl	1a89c <argp_parse@@Base+0x106c>
   15108:	ldr	r3, [pc, #516]	; 15314 <__assert_fail@plt+0x3804>
   1510c:	str	r8, [r3]
   15110:	ldrb	r3, [r4]
   15114:	cmp	r3, #42	; 0x2a
   15118:	beq	150c0 <__assert_fail@plt+0x35b0>
   1511c:	mov	r1, #44	; 0x2c
   15120:	mov	r0, r4
   15124:	bl	11930 <strchr@plt>
   15128:	ldr	r1, [pc, #488]	; 15318 <__assert_fail@plt+0x3808>
   1512c:	mov	fp, r6
   15130:	mov	r7, r8
   15134:	cmp	r0, #0
   15138:	strbne	r8, [r0]
   1513c:	mov	r0, r4
   15140:	bl	11a80 <strpbrk@plt>
   15144:	cmp	r0, #0
   15148:	strbne	r8, [r0]
   1514c:	mov	r0, r4
   15150:	bl	117a4 <strdup@plt>
   15154:	ldr	r3, [pc, #440]	; 15314 <__assert_fail@plt+0x3804>
   15158:	str	r0, [r3]
   1515c:	b	15004 <__assert_fail@plt+0x34f4>
   15160:	ldrb	r3, [r5, #1]
   15164:	cmp	r3, #33	; 0x21
   15168:	bne	150c0 <__assert_fail@plt+0x35b0>
   1516c:	ldrb	r2, [r5, #2]
   15170:	add	r4, r5, #2
   15174:	b	150e4 <__assert_fail@plt+0x35d4>
   15178:	mov	r0, r5
   1517c:	bl	11918 <strlen@plt>
   15180:	mov	r1, r5
   15184:	add	r2, r0, #1
   15188:	mov	r0, r6
   1518c:	bl	116f0 <memmove@plt>
   15190:	mov	r1, r8
   15194:	mov	r0, r6
   15198:	bl	11930 <strchr@plt>
   1519c:	ldr	r1, [r4]
   151a0:	b	151a8 <__assert_fail@plt+0x3698>
   151a4:	mov	r0, fp
   151a8:	ldrb	r2, [r0, #-1]
   151ac:	sub	fp, r0, #1
   151b0:	lsl	r3, r2, #1
   151b4:	ldrh	r3, [r1, r3]
   151b8:	ands	r3, r3, #8192	; 0x2000
   151bc:	bne	151a4 <__assert_fail@plt+0x3694>
   151c0:	cmp	r2, #92	; 0x5c
   151c4:	strbeq	r3, [fp]
   151c8:	moveq	r7, #1
   151cc:	beq	15004 <__assert_fail@plt+0x34f4>
   151d0:	strb	r3, [r0]
   151d4:	mov	r1, #464	; 0x1d0
   151d8:	mov	r0, #1
   151dc:	bl	1b560 <argp_parse@@Base+0x1d30>
   151e0:	mov	fp, r6
   151e4:	mov	r7, r8
   151e8:	mov	r4, r0
   151ec:	mov	r1, r0
   151f0:	mov	r0, r6
   151f4:	bl	147c4 <__assert_fail@plt+0x2cb4>
   151f8:	ldr	r3, [pc, #284]	; 1531c <__assert_fail@plt+0x380c>
   151fc:	ldr	r3, [r3]
   15200:	str	r3, [r4]
   15204:	ldr	r3, [pc, #272]	; 1531c <__assert_fail@plt+0x380c>
   15208:	str	r4, [r3]
   1520c:	b	15004 <__assert_fail@plt+0x34f4>
   15210:	lsl	r9, r9, #1
   15214:	mov	r1, r9
   15218:	mov	r0, r6
   1521c:	bl	1b5d4 <argp_parse@@Base+0x1da4>
   15220:	cmp	r0, #0
   15224:	beq	152a8 <__assert_fail@plt+0x3798>
   15228:	sub	r5, r5, #1
   1522c:	add	r4, r5, r4
   15230:	add	fp, r0, r4
   15234:	mov	r6, r0
   15238:	mov	r7, r8
   1523c:	b	15004 <__assert_fail@plt+0x34f4>
   15240:	mov	r0, sl
   15244:	bl	119c0 <fclose@plt>
   15248:	mov	r0, r6
   1524c:	bl	1a89c <argp_parse@@Base+0x106c>
   15250:	mov	r0, #1
   15254:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15258:	mov	r3, r8
   1525c:	b	1505c <__assert_fail@plt+0x354c>
   15260:	ldr	r5, [pc, #180]	; 1531c <__assert_fail@plt+0x380c>
   15264:	mov	r1, r4
   15268:	ldr	r0, [pc, #176]	; 15320 <__assert_fail@plt+0x3810>
   1526c:	bl	129ec <__assert_fail@plt+0xedc>
   15270:	ldr	r3, [r5]
   15274:	cmp	r3, #0
   15278:	beq	152cc <__assert_fail@plt+0x37bc>
   1527c:	ldr	r2, [pc, #160]	; 15324 <__assert_fail@plt+0x3814>
   15280:	mov	r3, #1
   15284:	mov	r0, r3
   15288:	str	r3, [r2]
   1528c:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15290:	ldr	r0, [pc, #144]	; 15328 <__assert_fail@plt+0x3818>
   15294:	bl	129ec <__assert_fail@plt+0xedc>
   15298:	mov	r0, sl
   1529c:	bl	119c0 <fclose@plt>
   152a0:	mov	r0, fp
   152a4:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   152a8:	mov	r7, r0
   152ac:	ldr	r0, [pc, #120]	; 1532c <__assert_fail@plt+0x381c>
   152b0:	bl	129ec <__assert_fail@plt+0xedc>
   152b4:	mov	r0, sl
   152b8:	bl	119c0 <fclose@plt>
   152bc:	mov	r0, r6
   152c0:	bl	1a89c <argp_parse@@Base+0x106c>
   152c4:	mov	r0, r7
   152c8:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   152cc:	mov	r1, #464	; 0x1d0
   152d0:	mov	r0, #1
   152d4:	bl	1b560 <argp_parse@@Base+0x1d30>
   152d8:	mov	r4, r0
   152dc:	mov	r1, r0
   152e0:	ldr	r0, [pc, #72]	; 15330 <__assert_fail@plt+0x3820>
   152e4:	bl	147c4 <__assert_fail@plt+0x2cb4>
   152e8:	mov	r1, #464	; 0x1d0
   152ec:	mov	r0, #1
   152f0:	bl	1b560 <argp_parse@@Base+0x1d30>
   152f4:	mov	r3, r0
   152f8:	mov	r1, r0
   152fc:	str	r3, [r4]
   15300:	ldr	r0, [pc, #44]	; 15334 <__assert_fail@plt+0x3824>
   15304:	bl	147c4 <__assert_fail@plt+0x2cb4>
   15308:	str	r4, [r5]
   1530c:	b	1527c <__assert_fail@plt+0x376c>
   15310:	andeq	lr, r1, r8, lsl #4
   15314:	andeq	pc, r2, r8, asr #24
   15318:	andeq	sp, r1, r0, ror r4
   1531c:	andeq	pc, r2, r0, asr sl	; <UNPREDICTABLE>
   15320:	andeq	sp, r1, ip, ror #7
   15324:	andeq	pc, r2, r8, lsr ip	; <UNPREDICTABLE>
   15328:	andeq	sp, r1, ip, lsl r4
   1532c:	andeq	sp, r1, r8, asr #8
   15330:	strdeq	sp, [r1], -ip
   15334:	andeq	sp, r1, r0, lsl r4
   15338:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1533c:	sub	sp, sp, #132	; 0x84
   15340:	ldr	fp, [pc, #896]	; 156c8 <__assert_fail@plt+0x3bb8>
   15344:	ldr	r0, [pc, #896]	; 156cc <__assert_fail@plt+0x3bbc>
   15348:	bl	129ec <__assert_fail@plt+0xedc>
   1534c:	ldr	r3, [pc, #892]	; 156d0 <__assert_fail@plt+0x3bc0>
   15350:	ldr	r4, [fp]
   15354:	mov	r7, #0
   15358:	cmp	r4, r7
   1535c:	str	r7, [r3]
   15360:	ldr	r3, [pc, #876]	; 156d4 <__assert_fail@plt+0x3bc4>
   15364:	ldrne	r6, [pc, #876]	; 156d8 <__assert_fail@plt+0x3bc8>
   15368:	str	r3, [sp, #12]
   1536c:	movne	r8, #1
   15370:	movne	r9, r3
   15374:	beq	15400 <__assert_fail@plt+0x38f0>
   15378:	ldr	r3, [r4, #452]	; 0x1c4
   1537c:	cmp	r3, #0
   15380:	bne	154a4 <__assert_fail@plt+0x3994>
   15384:	ldrh	r3, [r4, #4]
   15388:	cmp	r3, #9
   1538c:	bhi	153dc <__assert_fail@plt+0x38cc>
   15390:	lsl	r3, r8, r3
   15394:	tst	r3, #400	; 0x190
   15398:	bne	154c8 <__assert_fail@plt+0x39b8>
   1539c:	ands	r5, r3, r6
   153a0:	bne	154d4 <__assert_fail@plt+0x39c4>
   153a4:	tst	r3, #32
   153a8:	beq	153dc <__assert_fail@plt+0x38cc>
   153ac:	ldr	r3, [r4, #40]	; 0x28
   153b0:	cmp	r3, #0
   153b4:	ble	153d4 <__assert_fail@plt+0x38c4>
   153b8:	ldr	r3, [r4, #44]	; 0x2c
   153bc:	ldr	r0, [r3, r5, lsl #2]
   153c0:	bl	1a89c <argp_parse@@Base+0x106c>
   153c4:	ldr	r3, [r4, #40]	; 0x28
   153c8:	add	r5, r5, #1
   153cc:	cmp	r3, r5
   153d0:	bgt	153b8 <__assert_fail@plt+0x38a8>
   153d4:	ldr	r0, [r4, #44]	; 0x2c
   153d8:	bl	1a89c <argp_parse@@Base+0x106c>
   153dc:	ldr	r0, [r4, #436]	; 0x1b4
   153e0:	bl	1a89c <argp_parse@@Base+0x106c>
   153e4:	ldr	r0, [r4, #432]	; 0x1b0
   153e8:	bl	1a89c <argp_parse@@Base+0x106c>
   153ec:	ldr	r5, [r4]
   153f0:	mov	r0, r4
   153f4:	bl	1a89c <argp_parse@@Base+0x106c>
   153f8:	subs	r4, r5, #0
   153fc:	bne	15378 <__assert_fail@plt+0x3868>
   15400:	ldr	r8, [pc, #724]	; 156dc <__assert_fail@plt+0x3bcc>
   15404:	ldr	r3, [pc, #724]	; 156e0 <__assert_fail@plt+0x3bd0>
   15408:	mov	r9, #0
   1540c:	ldr	r0, [r8, #16]
   15410:	str	r9, [r3]
   15414:	str	r9, [fp]
   15418:	bl	14fb4 <__assert_fail@plt+0x34a4>
   1541c:	ldr	r4, [r8, #20]
   15420:	str	r0, [sp, #8]
   15424:	mov	r0, r4
   15428:	bl	11870 <opendir@plt>
   1542c:	subs	r5, r0, #0
   15430:	beq	156b8 <__assert_fail@plt+0x3ba8>
   15434:	ldr	r6, [pc, #680]	; 156e4 <__assert_fail@plt+0x3bd4>
   15438:	ldr	sl, [pc, #680]	; 156e8 <__assert_fail@plt+0x3bd8>
   1543c:	mov	r7, #3
   15440:	str	r9, [sp, #4]
   15444:	mov	r0, r5
   15448:	bl	11a44 <readdir64@plt>
   1544c:	mov	r2, r4
   15450:	mov	r1, r6
   15454:	subs	r3, r0, #0
   15458:	add	r3, r3, #19
   1545c:	add	r0, sp, #20
   15460:	beq	15504 <__assert_fail@plt+0x39f4>
   15464:	bl	1199c <asprintf@plt>
   15468:	add	r2, sp, #24
   1546c:	cmp	r0, #0
   15470:	mov	r0, r7
   15474:	blt	156a4 <__assert_fail@plt+0x3b94>
   15478:	ldr	r1, [sp, #20]
   1547c:	bl	11abc <__xstat64@plt>
   15480:	cmp	r0, #0
   15484:	bne	154bc <__assert_fail@plt+0x39ac>
   15488:	ldr	r3, [sp, #40]	; 0x28
   1548c:	and	r3, r3, #61440	; 0xf000
   15490:	cmp	r3, #32768	; 0x8000
   15494:	beq	154e8 <__assert_fail@plt+0x39d8>
   15498:	ldr	r0, [sp, #20]
   1549c:	bl	1a89c <argp_parse@@Base+0x106c>
   154a0:	b	15444 <__assert_fail@plt+0x3934>
   154a4:	mov	r3, r7
   154a8:	mov	r2, #0
   154ac:	ldr	r1, [r9]
   154b0:	mov	r0, r4
   154b4:	bl	136a4 <__assert_fail@plt+0x1b94>
   154b8:	b	15384 <__assert_fail@plt+0x3874>
   154bc:	mov	r0, sl
   154c0:	bl	129ec <__assert_fail@plt+0xedc>
   154c4:	b	15444 <__assert_fail@plt+0x3934>
   154c8:	ldr	r0, [r4, #40]	; 0x28
   154cc:	bl	1a89c <argp_parse@@Base+0x106c>
   154d0:	b	153dc <__assert_fail@plt+0x38cc>
   154d4:	ldr	r0, [r4, #40]	; 0x28
   154d8:	bl	1a89c <argp_parse@@Base+0x106c>
   154dc:	ldrsh	r0, [r4, #6]
   154e0:	bl	11af8 <close@plt>
   154e4:	b	153dc <__assert_fail@plt+0x38cc>
   154e8:	ldr	r0, [sp, #20]
   154ec:	bl	14fb4 <__assert_fail@plt+0x34a4>
   154f0:	ldr	r3, [sp, #4]
   154f4:	add	r9, r9, #1
   154f8:	add	r3, r3, r0
   154fc:	str	r3, [sp, #4]
   15500:	b	15498 <__assert_fail@plt+0x3988>
   15504:	mov	r0, r5
   15508:	bl	11b04 <closedir@plt>
   1550c:	cmp	r9, #0
   15510:	beq	15524 <__assert_fail@plt+0x3a14>
   15514:	ldmib	sp, {r2, r3}
   15518:	cmp	r2, #0
   1551c:	moveq	r3, #0
   15520:	str	r3, [sp, #8]
   15524:	ldr	r3, [pc, #448]	; 156ec <__assert_fail@plt+0x3bdc>
   15528:	ldr	r1, [pc, #416]	; 156d0 <__assert_fail@plt+0x3bc0>
   1552c:	mov	r2, #1
   15530:	ldr	r3, [r3]
   15534:	str	r2, [r1]
   15538:	cmp	r3, #0
   1553c:	beq	1561c <__assert_fail@plt+0x3b0c>
   15540:	ldr	r7, [fp]
   15544:	cmp	r7, #0
   15548:	beq	1561c <__assert_fail@plt+0x3b0c>
   1554c:	ldr	r5, [pc, #412]	; 156f0 <__assert_fail@plt+0x3be0>
   15550:	ldr	r6, [pc, #412]	; 156f4 <__assert_fail@plt+0x3be4>
   15554:	ldr	fp, [pc, #412]	; 156f8 <__assert_fail@plt+0x3be8>
   15558:	ldr	r9, [pc, #412]	; 156fc <__assert_fail@plt+0x3bec>
   1555c:	add	r4, r7, #11
   15560:	add	sl, r7, #36	; 0x24
   15564:	b	15578 <__assert_fail@plt+0x3a68>
   15568:	mov	r0, r6
   1556c:	bl	129ec <__assert_fail@plt+0xedc>
   15570:	cmp	sl, r4
   15574:	beq	15594 <__assert_fail@plt+0x3a84>
   15578:	ldrb	r3, [r4, #1]!
   1557c:	mov	r0, r5
   15580:	subs	r1, r3, #0
   15584:	beq	15568 <__assert_fail@plt+0x3a58>
   15588:	bl	129ec <__assert_fail@plt+0xedc>
   1558c:	cmp	sl, r4
   15590:	bne	15578 <__assert_fail@plt+0x3a68>
   15594:	ldrsh	r3, [r7, #4]
   15598:	mov	r0, fp
   1559c:	add	r3, r8, r3, lsl #2
   155a0:	ldr	r1, [r3, #320]	; 0x140
   155a4:	bl	129ec <__assert_fail@plt+0xedc>
   155a8:	ldrh	r2, [r7, #4]
   155ac:	cmp	r2, #9
   155b0:	bhi	15608 <__assert_fail@plt+0x3af8>
   155b4:	mov	r3, #1
   155b8:	lsl	r3, r3, r2
   155bc:	tst	r3, #400	; 0x190
   155c0:	bne	15678 <__assert_fail@plt+0x3b68>
   155c4:	ldr	r4, [pc, #268]	; 156d8 <__assert_fail@plt+0x3bc8>
   155c8:	and	r4, r4, r3
   155cc:	cmp	r4, #0
   155d0:	bne	15678 <__assert_fail@plt+0x3b68>
   155d4:	tst	r3, #32
   155d8:	beq	15608 <__assert_fail@plt+0x3af8>
   155dc:	ldr	r3, [r7, #40]	; 0x28
   155e0:	cmp	r3, #0
   155e4:	ble	15608 <__assert_fail@plt+0x3af8>
   155e8:	ldr	r3, [r7, #44]	; 0x2c
   155ec:	mov	r0, r9
   155f0:	ldr	r1, [r3, r4, lsl #2]
   155f4:	bl	129ec <__assert_fail@plt+0xedc>
   155f8:	ldr	r3, [r7, #40]	; 0x28
   155fc:	add	r4, r4, #1
   15600:	cmp	r3, r4
   15604:	bgt	155e8 <__assert_fail@plt+0x3ad8>
   15608:	ldr	r0, [pc, #240]	; 15700 <__assert_fail@plt+0x3bf0>
   1560c:	bl	129ec <__assert_fail@plt+0xedc>
   15610:	ldr	r7, [r7]
   15614:	cmp	r7, #0
   15618:	bne	1555c <__assert_fail@plt+0x3a4c>
   1561c:	ldr	r3, [pc, #224]	; 15704 <__assert_fail@plt+0x3bf4>
   15620:	ldr	r3, [r3]
   15624:	cmp	r3, #0
   15628:	beq	15688 <__assert_fail@plt+0x3b78>
   1562c:	ldr	r2, [sp, #12]
   15630:	mov	r3, #4
   15634:	ldr	r1, [pc, #204]	; 15708 <__assert_fail@plt+0x3bf8>
   15638:	ldr	r2, [r2]
   1563c:	mov	r0, #46	; 0x2e
   15640:	bl	13dac <__assert_fail@plt+0x229c>
   15644:	ldr	r3, [sp, #8]
   15648:	cmp	r3, #0
   1564c:	bne	15668 <__assert_fail@plt+0x3b58>
   15650:	ldr	r3, [sp, #12]
   15654:	ldr	r1, [pc, #176]	; 1570c <__assert_fail@plt+0x3bfc>
   15658:	mov	r0, #43	; 0x2b
   1565c:	ldr	r2, [r3]
   15660:	mov	r3, #4
   15664:	bl	13dac <__assert_fail@plt+0x229c>
   15668:	ldr	r0, [pc, #160]	; 15710 <__assert_fail@plt+0x3c00>
   1566c:	bl	129ec <__assert_fail@plt+0xedc>
   15670:	add	sp, sp, #132	; 0x84
   15674:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15678:	ldr	r1, [r7, #40]	; 0x28
   1567c:	ldr	r0, [pc, #144]	; 15714 <__assert_fail@plt+0x3c04>
   15680:	bl	129ec <__assert_fail@plt+0xedc>
   15684:	b	15608 <__assert_fail@plt+0x3af8>
   15688:	ldr	r2, [sp, #12]
   1568c:	mov	r3, #4
   15690:	ldr	r1, [pc, #128]	; 15718 <__assert_fail@plt+0x3c08>
   15694:	ldr	r2, [r2]
   15698:	mov	r0, #46	; 0x2e
   1569c:	bl	13dac <__assert_fail@plt+0x229c>
   156a0:	b	15644 <__assert_fail@plt+0x3b34>
   156a4:	ldr	r0, [pc, #112]	; 1571c <__assert_fail@plt+0x3c0c>
   156a8:	bl	129ec <__assert_fail@plt+0xedc>
   156ac:	mov	r3, #0
   156b0:	str	r3, [sp, #8]
   156b4:	b	15524 <__assert_fail@plt+0x3a14>
   156b8:	mov	r1, r4
   156bc:	ldr	r0, [pc, #92]	; 15720 <__assert_fail@plt+0x3c10>
   156c0:	bl	129ec <__assert_fail@plt+0xedc>
   156c4:	b	15524 <__assert_fail@plt+0x3a14>
   156c8:	andeq	pc, r2, r0, asr sl	; <UNPREDICTABLE>
   156cc:	andeq	sp, r1, r8, ror r4
   156d0:	andeq	pc, r2, r8, lsr ip	; <UNPREDICTABLE>
   156d4:	andeq	pc, r2, r0, asr #24
   156d8:	andeq	r0, r0, lr, lsl #4
   156dc:			; <UNDEFINED> instruction: 0x0002f1b0
   156e0:	andeq	pc, r2, ip, asr #20
   156e4:	andeq	sp, r1, r0, lsl #9
   156e8:			; <UNDEFINED> instruction: 0x0001d4bc
   156ec:	andeq	pc, r2, ip, lsr #24
   156f0:	andeq	sp, r1, r8, ror #9
   156f4:	andeq	sp, r1, r4, ror #9
   156f8:	strdeq	sp, [r1], -r0
   156fc:	strdeq	sp, [r1], -r8
   15700:	andeq	sp, r1, ip, lsl #1
   15704:	andeq	pc, r2, r8, asr #20
   15708:	andeq	sp, r1, r0, lsl #10
   1570c:	andeq	sp, r1, r4, ror r5
   15710:	muleq	r1, r8, r5
   15714:			; <UNDEFINED> instruction: 0x0001dfbc
   15718:	andeq	sp, r1, r4, asr #10
   1571c:	andeq	sp, r1, r8, lsl #9
   15720:	andeq	sp, r1, ip, ror #7
   15724:	push	{r4, r5, r6, lr}
   15728:	sub	sp, sp, #40	; 0x28
   1572c:	ldr	r4, [pc, #216]	; 1580c <__assert_fail@plt+0x3cfc>
   15730:	ldr	r3, [pc, #216]	; 15810 <__assert_fail@plt+0x3d00>
   15734:	mov	r2, #32
   15738:	mov	r1, #0
   1573c:	ldr	r6, [pc, #208]	; 15814 <__assert_fail@plt+0x3d04>
   15740:	mov	r5, r0
   15744:	add	r0, sp, #8
   15748:	str	r3, [r4, #44]	; 0x2c
   1574c:	bl	11984 <memset@plt>
   15750:	mov	r0, #2
   15754:	mov	ip, #1
   15758:	str	r0, [sp, #16]
   1575c:	add	r2, sp, #8
   15760:	mov	r1, r6
   15764:	add	r3, sp, #4
   15768:	mov	r0, #0
   1576c:	str	ip, [sp, #8]
   15770:	bl	11a98 <getaddrinfo@plt>
   15774:	cmp	r0, #0
   15778:	beq	157e4 <__assert_fail@plt+0x3cd4>
   1577c:	cmp	r5, #0
   15780:	str	r5, [r4, #48]	; 0x30
   15784:	beq	157fc <__assert_fail@plt+0x3cec>
   15788:	mov	r2, #32
   1578c:	mov	r1, #0
   15790:	add	r0, sp, #8
   15794:	bl	11984 <memset@plt>
   15798:	add	r3, sp, #4
   1579c:	mov	lr, #2
   157a0:	mov	ip, #1
   157a4:	add	r2, sp, #8
   157a8:	mov	r1, r5
   157ac:	mov	r0, #0
   157b0:	str	lr, [sp, #16]
   157b4:	str	ip, [sp, #8]
   157b8:	bl	11a98 <getaddrinfo@plt>
   157bc:	cmp	r0, #0
   157c0:	movne	r3, #0
   157c4:	strne	r3, [r4, #48]	; 0x30
   157c8:	beq	157d4 <__assert_fail@plt+0x3cc4>
   157cc:	add	sp, sp, #40	; 0x28
   157d0:	pop	{r4, r5, r6, pc}
   157d4:	ldr	r0, [sp, #4]
   157d8:	bl	11a8c <freeaddrinfo@plt>
   157dc:	add	sp, sp, #40	; 0x28
   157e0:	pop	{r4, r5, r6, pc}
   157e4:	ldr	r0, [sp, #4]
   157e8:	str	r6, [r4, #44]	; 0x2c
   157ec:	bl	11a8c <freeaddrinfo@plt>
   157f0:	cmp	r5, #0
   157f4:	str	r5, [r4, #48]	; 0x30
   157f8:	bne	15788 <__assert_fail@plt+0x3c78>
   157fc:	ldr	r3, [r4, #44]	; 0x2c
   15800:	str	r3, [r4, #48]	; 0x30
   15804:	add	sp, sp, #40	; 0x28
   15808:	pop	{r4, r5, r6, pc}
   1580c:	ldrdeq	pc, [r2], -r4
   15810:	andeq	sp, r1, ip, lsr #11
   15814:			; <UNDEFINED> instruction: 0x0001d5b0
   15818:	push	{r4, lr}
   1581c:	mov	r0, #0
   15820:	bl	117bc <alarm@plt>
   15824:	mov	r1, #0
   15828:	mov	r4, r0
   1582c:	mov	r0, #14
   15830:	bl	11750 <signal@plt>
   15834:	cmp	r4, #0
   15838:	popne	{r4, pc}
   1583c:	mov	r1, r4
   15840:	ldr	r2, [pc, #8]	; 15850 <__assert_fail@plt+0x3d40>
   15844:	mov	r0, #1
   15848:	pop	{r4, lr}
   1584c:	b	11858 <error@plt>
   15850:	andeq	sp, r1, ip, lsl #30
   15854:	push	{r4, r5, r6, r7, r8, lr}
   15858:	mov	r5, r1
   1585c:	mov	r6, r2
   15860:	mov	r7, r0
   15864:	bl	11900 <getpid@plt>
   15868:	mov	r8, r0
   1586c:	bl	11a08 <fork@plt>
   15870:	cmn	r0, #1
   15874:	mov	r4, r0
   15878:	beq	15900 <__assert_fail@plt+0x3df0>
   1587c:	cmp	r0, #0
   15880:	bne	158c8 <__assert_fail@plt+0x3db8>
   15884:	bl	11924 <setsid@plt>
   15888:	cmn	r0, #1
   1588c:	beq	15900 <__assert_fail@plt+0x3df0>
   15890:	mov	r1, #1
   15894:	mov	r0, r1
   15898:	bl	11750 <signal@plt>
   1589c:	bl	11a08 <fork@plt>
   158a0:	cmn	r0, #1
   158a4:	popeq	{r4, r5, r6, r7, r8, pc}
   158a8:	cmp	r0, #0
   158ac:	bne	158e8 <__assert_fail@plt+0x3dd8>
   158b0:	cmp	r7, #0
   158b4:	beq	158f0 <__assert_fail@plt+0x3de0>
   158b8:	cmp	r5, #0
   158bc:	beq	15908 <__assert_fail@plt+0x3df8>
   158c0:	mov	r0, r8
   158c4:	pop	{r4, r5, r6, r7, r8, pc}
   158c8:	cmp	r6, #0
   158cc:	ble	158e8 <__assert_fail@plt+0x3dd8>
   158d0:	ldr	r1, [pc, #188]	; 15994 <__assert_fail@plt+0x3e84>
   158d4:	mov	r0, #14
   158d8:	bl	11750 <signal@plt>
   158dc:	mov	r0, r6
   158e0:	bl	117bc <alarm@plt>
   158e4:	bl	116a8 <pause@plt>
   158e8:	mov	r0, #0
   158ec:	bl	11738 <_exit@plt>
   158f0:	ldr	r0, [pc, #160]	; 15998 <__assert_fail@plt+0x3e88>
   158f4:	bl	117f8 <chdir@plt>
   158f8:	cmp	r0, #0
   158fc:	bge	158b8 <__assert_fail@plt+0x3da8>
   15900:	mvn	r0, #0
   15904:	pop	{r4, r5, r6, r7, r8, pc}
   15908:	mov	r0, #4
   1590c:	bl	117c8 <sysconf@plt>
   15910:	cmn	r0, #1
   15914:	mov	r4, r0
   15918:	beq	1598c <__assert_fail@plt+0x3e7c>
   1591c:	cmp	r0, #0
   15920:	ble	15938 <__assert_fail@plt+0x3e28>
   15924:	mov	r0, r5
   15928:	add	r5, r5, #1
   1592c:	bl	11af8 <close@plt>
   15930:	cmp	r5, r4
   15934:	blt	15924 <__assert_fail@plt+0x3e14>
   15938:	mov	r2, #0
   1593c:	mov	r1, #2
   15940:	ldr	r0, [pc, #84]	; 1599c <__assert_fail@plt+0x3e8c>
   15944:	bl	1187c <open64@plt>
   15948:	cmn	r0, #1
   1594c:	mov	r4, r0
   15950:	beq	158c0 <__assert_fail@plt+0x3db0>
   15954:	mov	r1, #0
   15958:	bl	117e0 <dup2@plt>
   1595c:	mov	r1, #1
   15960:	mov	r0, r4
   15964:	bl	117e0 <dup2@plt>
   15968:	mov	r1, #2
   1596c:	mov	r0, r4
   15970:	bl	117e0 <dup2@plt>
   15974:	cmp	r4, #2
   15978:	ble	158c0 <__assert_fail@plt+0x3db0>
   1597c:	mov	r0, r4
   15980:	bl	11af8 <close@plt>
   15984:	mov	r0, r8
   15988:	pop	{r4, r5, r6, r7, r8, pc}
   1598c:	mov	r4, #64	; 0x40
   15990:	b	15924 <__assert_fail@plt+0x3e14>
   15994:	andeq	r5, r1, r8, lsl r8
   15998:	andeq	sp, r1, r0, lsr #31
   1599c:	andeq	sp, r1, r8, lsr #30

000159a0 <daemon@@Base>:
   159a0:	push	{r4, lr}
   159a4:	mov	r2, #0
   159a8:	bl	15854 <__assert_fail@plt+0x3d44>
   159ac:	cmn	r0, #1
   159b0:	movne	r0, #0
   159b4:	moveq	r0, #1
   159b8:	rsb	r0, r0, #0
   159bc:	pop	{r4, pc}
   159c0:	push	{r4, r5, r6, r7, r8, r9, lr}
   159c4:	sub	sp, sp, #1088	; 0x440
   159c8:	sub	sp, sp, #4
   159cc:	bl	11948 <__errno_location@plt>
   159d0:	mov	r4, #0
   159d4:	mov	r6, r4
   159d8:	mov	r7, r4
   159dc:	mov	r8, r0
   159e0:	b	15a18 <daemon@@Base+0x78>
   159e4:	bl	11864 <gethostname@plt>
   159e8:	mov	r6, r5
   159ec:	mov	r2, r4
   159f0:	mov	r1, r7
   159f4:	subs	r9, r0, #0
   159f8:	mov	r0, r5
   159fc:	bne	15a0c <daemon@@Base+0x6c>
   15a00:	bl	119a8 <memchr@plt>
   15a04:	cmp	r0, #0
   15a08:	beq	15a18 <daemon@@Base+0x78>
   15a0c:	ldr	r3, [r8]
   15a10:	cmp	r3, #36	; 0x24
   15a14:	bne	15a58 <daemon@@Base+0xb8>
   15a18:	add	r4, r4, #256	; 0x100
   15a1c:	mov	r1, r4
   15a20:	str	r7, [r8]
   15a24:	mov	r0, r6
   15a28:	bl	1b5d4 <argp_parse@@Base+0x1da4>
   15a2c:	mov	r1, r4
   15a30:	subs	r5, r0, #0
   15a34:	bne	159e4 <daemon@@Base+0x44>
   15a38:	mov	r3, #12
   15a3c:	mov	r0, r6
   15a40:	str	r3, [r8]
   15a44:	bl	1a89c <argp_parse@@Base+0x106c>
   15a48:	mov	r0, r5
   15a4c:	add	sp, sp, #1088	; 0x440
   15a50:	add	sp, sp, #4
   15a54:	pop	{r4, r5, r6, r7, r8, r9, pc}
   15a58:	cmp	r3, #0
   15a5c:	cmpne	r9, #0
   15a60:	movne	r9, #1
   15a64:	moveq	r9, #0
   15a68:	bne	15b08 <daemon@@Base+0x168>
   15a6c:	mov	r2, #32
   15a70:	mov	r1, r9
   15a74:	add	r0, sp, #28
   15a78:	bl	11984 <memset@plt>
   15a7c:	add	r3, sp, #24
   15a80:	mov	ip, #2
   15a84:	add	r2, sp, #28
   15a88:	mov	r1, r9
   15a8c:	mov	r0, r5
   15a90:	str	ip, [sp, #32]
   15a94:	bl	11a98 <getaddrinfo@plt>
   15a98:	subs	r3, r0, #0
   15a9c:	bne	15a48 <daemon@@Base+0xa8>
   15aa0:	ldr	r2, [sp, #24]
   15aa4:	add	r1, sp, #60	; 0x3c
   15aa8:	str	r1, [sp, #20]
   15aac:	mov	ip, #8
   15ab0:	ldr	r1, [r2, #16]
   15ab4:	ldr	r0, [r2, #20]
   15ab8:	str	r3, [sp, #4]
   15abc:	str	r3, [sp]
   15ac0:	ldr	r2, [sp, #20]
   15ac4:	str	ip, [sp, #8]
   15ac8:	ldr	r3, [pc, #72]	; 15b18 <daemon@@Base+0x178>
   15acc:	bl	11a14 <getnameinfo@plt>
   15ad0:	cmp	r0, #0
   15ad4:	beq	15af0 <daemon@@Base+0x150>
   15ad8:	ldr	r0, [sp, #24]
   15adc:	bl	11a8c <freeaddrinfo@plt>
   15ae0:	mov	r0, r5
   15ae4:	add	sp, sp, #1088	; 0x440
   15ae8:	add	sp, sp, #4
   15aec:	pop	{r4, r5, r6, r7, r8, r9, pc}
   15af0:	mov	r0, r5
   15af4:	bl	1a89c <argp_parse@@Base+0x106c>
   15af8:	ldr	r0, [sp, #20]
   15afc:	bl	117a4 <strdup@plt>
   15b00:	mov	r5, r0
   15b04:	b	15ad8 <daemon@@Base+0x138>
   15b08:	mov	r0, r5
   15b0c:	bl	1a89c <argp_parse@@Base+0x106c>
   15b10:	mov	r5, #0
   15b14:	b	15a48 <daemon@@Base+0xa8>
   15b18:	andeq	r0, r0, r1, lsl #8
   15b1c:	cmp	r1, #6
   15b20:	ble	15b2c <daemon@@Base+0x18c>
   15b24:	ldr	r0, [pc, #1092]	; 15f70 <daemon@@Base+0x5d0>
   15b28:	bx	lr
   15b2c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15b30:	mov	r5, r0
   15b34:	sub	sp, sp, #196	; 0xc4
   15b38:	mov	r0, r2
   15b3c:	mov	r6, r1
   15b40:	mov	r8, r2
   15b44:	mov	fp, r3
   15b48:	bl	11918 <strlen@plt>
   15b4c:	add	r0, r0, #6
   15b50:	bl	1b5a8 <argp_parse@@Base+0x1d78>
   15b54:	subs	r7, r0, #0
   15b58:	beq	15ea8 <daemon@@Base+0x508>
   15b5c:	ldr	r3, [pc, #1040]	; 15f74 <daemon@@Base+0x5d4>
   15b60:	mov	r1, r8
   15b64:	ldr	r0, [r3]
   15b68:	ldrb	r3, [r3, #4]
   15b6c:	str	r0, [r7]
   15b70:	add	r0, r7, #5
   15b74:	strb	r3, [r7, #4]
   15b78:	bl	11780 <stpcpy@plt>
   15b7c:	cmp	r7, r0
   15b80:	sub	r0, r0, r7
   15b84:	beq	15bc8 <daemon@@Base+0x228>
   15b88:	sub	r0, r0, #1
   15b8c:	mov	r1, #46	; 0x2e
   15b90:	ldrb	r3, [r7, r0]
   15b94:	cmp	r3, #47	; 0x2f
   15b98:	moveq	r3, #0
   15b9c:	strbeq	r3, [r7, r0]
   15ba0:	mov	r0, r7
   15ba4:	bl	11930 <strchr@plt>
   15ba8:	subs	r3, r0, #0
   15bac:	movne	r4, #46	; 0x2e
   15bb0:	bne	15ce4 <daemon@@Base+0x344>
   15bb4:	ldrb	r3, [r7]
   15bb8:	cmp	r3, #0
   15bbc:	moveq	r2, #47	; 0x2f
   15bc0:	strbeq	r3, [r7, #1]
   15bc4:	strbeq	r2, [r7]
   15bc8:	mov	r2, #5
   15bcc:	ldr	r1, [pc, #928]	; 15f74 <daemon@@Base+0x5d4>
   15bd0:	mov	r0, r7
   15bd4:	bl	11ad4 <strncmp@plt>
   15bd8:	subs	r9, r0, #0
   15bdc:	bne	15e0c <daemon@@Base+0x46c>
   15be0:	mov	r2, r9
   15be4:	ldr	r1, [pc, #908]	; 15f78 <daemon@@Base+0x5d8>
   15be8:	mov	r0, r7
   15bec:	bl	1187c <open64@plt>
   15bf0:	subs	sl, r0, #0
   15bf4:	blt	15cfc <daemon@@Base+0x35c>
   15bf8:	cmp	r6, #0
   15bfc:	movle	r8, r9
   15c00:	ble	15c24 <daemon@@Base+0x284>
   15c04:	mov	r3, r5
   15c08:	add	r1, r5, r6, lsl #3
   15c0c:	mov	r8, r9
   15c10:	ldr	r2, [r3, #4]
   15c14:	add	r3, r3, #8
   15c18:	cmp	r3, r1
   15c1c:	add	r8, r8, r2
   15c20:	bne	15c10 <daemon@@Base+0x270>
   15c24:	mov	r2, r6
   15c28:	mov	r1, r5
   15c2c:	mov	r0, sl
   15c30:	bl	119b4 <writev@plt>
   15c34:	cmp	r8, r0
   15c38:	mov	r4, r0
   15c3c:	ble	15ed4 <daemon@@Base+0x534>
   15c40:	cmp	r0, #0
   15c44:	blt	15d8c <daemon@@Base+0x3ec>
   15c48:	add	r3, sp, #16
   15c4c:	cmp	r5, r3
   15c50:	sub	r8, r8, r0
   15c54:	beq	15c6c <daemon@@Base+0x2cc>
   15c58:	mov	r0, r3
   15c5c:	mov	r1, r5
   15c60:	lsl	r2, r6, #3
   15c64:	bl	11744 <memcpy@plt>
   15c68:	mov	r3, r0
   15c6c:	ldr	r2, [sp, #20]
   15c70:	mov	r5, r3
   15c74:	cmp	r4, r2
   15c78:	blt	15c94 <daemon@@Base+0x2f4>
   15c7c:	add	r5, r5, #8
   15c80:	sub	r4, r4, r2
   15c84:	ldr	r2, [r5, #4]
   15c88:	sub	r6, r6, #1
   15c8c:	cmp	r2, r4
   15c90:	ble	15c7c <daemon@@Base+0x2dc>
   15c94:	cmp	r4, #0
   15c98:	beq	15c24 <daemon@@Base+0x284>
   15c9c:	ldr	r3, [r5]
   15ca0:	sub	r2, r2, r4
   15ca4:	add	r4, r3, r4
   15ca8:	str	r2, [r5, #4]
   15cac:	str	r4, [r5]
   15cb0:	b	15c24 <daemon@@Base+0x284>
   15cb4:	ldrb	r2, [r3, #1]
   15cb8:	cmp	r2, #46	; 0x2e
   15cbc:	bne	15cd0 <daemon@@Base+0x330>
   15cc0:	ldrb	r1, [r3, #2]
   15cc4:	cmp	r1, #0
   15cc8:	cmpne	r1, #47	; 0x2f
   15ccc:	beq	15d3c <daemon@@Base+0x39c>
   15cd0:	add	r0, r3, #1
   15cd4:	mov	r1, r4
   15cd8:	bl	11930 <strchr@plt>
   15cdc:	subs	r3, r0, #0
   15ce0:	beq	15bb4 <daemon@@Base+0x214>
   15ce4:	cmp	r7, r3
   15ce8:	bcs	15cd0 <daemon@@Base+0x330>
   15cec:	ldrb	r2, [r3, #-1]
   15cf0:	cmp	r2, #47	; 0x2f
   15cf4:	bne	15cd0 <daemon@@Base+0x330>
   15cf8:	b	15cb4 <daemon@@Base+0x314>
   15cfc:	bl	11948 <__errno_location@plt>
   15d00:	ldr	r0, [r0]
   15d04:	cmp	r0, #13
   15d08:	cmpne	r0, #16
   15d0c:	beq	15e50 <daemon@@Base+0x4b0>
   15d10:	bl	118b8 <strerror@plt>
   15d14:	mov	r3, r7
   15d18:	ldr	r2, [pc, #604]	; 15f7c <daemon@@Base+0x5dc>
   15d1c:	mov	r1, #1024	; 0x400
   15d20:	str	r0, [sp]
   15d24:	ldr	r0, [pc, #596]	; 15f80 <daemon@@Base+0x5e0>
   15d28:	bl	11954 <snprintf@plt>
   15d2c:	mov	r0, r7
   15d30:	bl	1a89c <argp_parse@@Base+0x106c>
   15d34:	ldr	r0, [pc, #580]	; 15f80 <daemon@@Base+0x5e0>
   15d38:	b	15e04 <daemon@@Base+0x464>
   15d3c:	ldrb	r2, [r3, #-2]
   15d40:	sub	r0, r3, #2
   15d44:	b	15d4c <daemon@@Base+0x3ac>
   15d48:	ldrb	r2, [r0, #-1]!
   15d4c:	subs	r2, r2, #47	; 0x2f
   15d50:	movne	r2, #1
   15d54:	cmp	r7, r0
   15d58:	movhi	r2, #0
   15d5c:	cmp	r2, #0
   15d60:	bne	15d48 <daemon@@Base+0x3a8>
   15d64:	cmp	r7, r0
   15d68:	bhi	15bb4 <daemon@@Base+0x214>
   15d6c:	add	r3, r3, #2
   15d70:	mov	r2, r0
   15d74:	b	15d7c <daemon@@Base+0x3dc>
   15d78:	ldrb	r1, [r3, #1]!
   15d7c:	cmp	r1, #0
   15d80:	strb	r1, [r2], #1
   15d84:	bne	15d78 <daemon@@Base+0x3d8>
   15d88:	b	15cd4 <daemon@@Base+0x334>
   15d8c:	bl	11948 <__errno_location@plt>
   15d90:	ldr	r3, [r0]
   15d94:	mov	r4, r0
   15d98:	cmp	r3, #11
   15d9c:	bne	15f38 <daemon@@Base+0x598>
   15da0:	mov	r3, #0
   15da4:	cmp	r9, #0
   15da8:	str	r3, [sp, #12]
   15dac:	bne	15f60 <daemon@@Base+0x5c0>
   15db0:	bl	11a08 <fork@plt>
   15db4:	cmp	r0, #0
   15db8:	beq	15e2c <daemon@@Base+0x48c>
   15dbc:	blt	15ef4 <daemon@@Base+0x554>
   15dc0:	mov	r2, r9
   15dc4:	add	r1, sp, #64	; 0x40
   15dc8:	bl	11840 <waitpid@plt>
   15dcc:	cmp	r0, #0
   15dd0:	blt	15ef4 <daemon@@Base+0x554>
   15dd4:	ldr	r3, [sp, #64]	; 0x40
   15dd8:	tst	r3, #127	; 0x7f
   15ddc:	bne	15f28 <daemon@@Base+0x588>
   15de0:	asr	r3, r3, #8
   15de4:	ands	r0, r3, #255	; 0xff
   15de8:	strne	r0, [r4]
   15dec:	bne	15ef8 <daemon@@Base+0x558>
   15df0:	mov	r0, sl
   15df4:	bl	11af8 <close@plt>
   15df8:	mov	r0, r7
   15dfc:	bl	1a89c <argp_parse@@Base+0x106c>
   15e00:	mov	r0, r9
   15e04:	add	sp, sp, #196	; 0xc4
   15e08:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15e0c:	mov	r3, r8
   15e10:	ldr	r2, [pc, #364]	; 15f84 <daemon@@Base+0x5e4>
   15e14:	mov	r1, #1024	; 0x400
   15e18:	ldr	r0, [pc, #352]	; 15f80 <daemon@@Base+0x5e0>
   15e1c:	bl	11954 <snprintf@plt>
   15e20:	ldr	r0, [pc, #344]	; 15f80 <daemon@@Base+0x5e0>
   15e24:	add	sp, sp, #196	; 0xc4
   15e28:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15e2c:	bl	11a08 <fork@plt>
   15e30:	cmn	r0, #1
   15e34:	beq	15e48 <daemon@@Base+0x4a8>
   15e38:	cmp	r0, #0
   15e3c:	beq	15e58 <daemon@@Base+0x4b8>
   15e40:	mov	r0, r9
   15e44:	bl	11738 <_exit@plt>
   15e48:	ldr	r0, [r4]
   15e4c:	bl	11738 <_exit@plt>
   15e50:	mov	r0, #0
   15e54:	b	15e04 <daemon@@Base+0x464>
   15e58:	mov	r1, #0
   15e5c:	mov	r0, #14
   15e60:	bl	11750 <signal@plt>
   15e64:	mov	r1, #0
   15e68:	mov	r0, #15
   15e6c:	bl	11750 <signal@plt>
   15e70:	add	r0, sp, #64	; 0x40
   15e74:	bl	119fc <sigemptyset@plt>
   15e78:	mov	r2, #0
   15e7c:	add	r1, sp, #64	; 0x40
   15e80:	mov	r0, #2
   15e84:	bl	116e4 <sigprocmask@plt>
   15e88:	mov	r0, fp
   15e8c:	bl	117bc <alarm@plt>
   15e90:	add	r2, sp, #12
   15e94:	mov	r1, #2048	; 0x800
   15e98:	mov	r0, sl
   15e9c:	bl	1a6c8 <argp_parse@@Base+0xe98>
   15ea0:	mov	r9, #1
   15ea4:	b	15c24 <daemon@@Base+0x284>
   15ea8:	ldr	ip, [pc, #216]	; 15f88 <daemon@@Base+0x5e8>
   15eac:	ldr	r9, [pc, #204]	; 15f80 <daemon@@Base+0x5e0>
   15eb0:	ldm	ip!, {r0, r1, r2, r3}
   15eb4:	stmia	r9!, {r0, r1, r2, r3}
   15eb8:	ldm	ip!, {r0, r1, r2, r3}
   15ebc:	stmia	r9!, {r0, r1, r2, r3}
   15ec0:	ldm	ip, {r0, r1}
   15ec4:	str	r0, [r9], #4
   15ec8:	mov	r0, r9
   15ecc:	strh	r1, [r0], #-36	; 0xffffffdc
   15ed0:	b	15e04 <daemon@@Base+0x464>
   15ed4:	mov	r0, r7
   15ed8:	bl	1a89c <argp_parse@@Base+0x106c>
   15edc:	mov	r0, sl
   15ee0:	bl	11af8 <close@plt>
   15ee4:	cmp	r9, #0
   15ee8:	beq	15e50 <daemon@@Base+0x4b0>
   15eec:	mov	r0, #0
   15ef0:	bl	11738 <_exit@plt>
   15ef4:	ldr	r0, [r4]
   15ef8:	bl	118b8 <strerror@plt>
   15efc:	ldr	r2, [pc, #136]	; 15f8c <daemon@@Base+0x5ec>
   15f00:	mov	r1, #1024	; 0x400
   15f04:	mov	r3, r0
   15f08:	ldr	r0, [pc, #112]	; 15f80 <daemon@@Base+0x5e0>
   15f0c:	bl	11954 <snprintf@plt>
   15f10:	mov	r0, sl
   15f14:	bl	11af8 <close@plt>
   15f18:	mov	r0, r7
   15f1c:	bl	1a89c <argp_parse@@Base+0x106c>
   15f20:	ldr	r0, [pc, #88]	; 15f80 <daemon@@Base+0x5e0>
   15f24:	b	15e04 <daemon@@Base+0x464>
   15f28:	mov	r3, #4
   15f2c:	str	r3, [r4]
   15f30:	mov	r0, r3
   15f34:	b	15ef8 <daemon@@Base+0x558>
   15f38:	cmp	r3, #5
   15f3c:	cmpne	r3, #19
   15f40:	beq	15ed4 <daemon@@Base+0x534>
   15f44:	mov	r0, sl
   15f48:	bl	11af8 <close@plt>
   15f4c:	cmp	r9, #0
   15f50:	ldreq	r0, [r4]
   15f54:	beq	15d10 <daemon@@Base+0x370>
   15f58:	mov	r0, #1
   15f5c:	bl	11738 <_exit@plt>
   15f60:	mov	r0, sl
   15f64:	bl	11af8 <close@plt>
   15f68:	mov	r0, #1
   15f6c:	bl	11738 <_exit@plt>
   15f70:	andeq	sp, r1, r4, asr #30
   15f74:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   15f78:	andeq	r0, r0, r1, lsl #16
   15f7c:			; <UNDEFINED> instruction: 0x0001dfb8
   15f80:	andeq	pc, r2, r8, lsl #12
   15f84:	andeq	sp, r1, r4, lsr #31
   15f88:	andeq	sp, r1, r4, ror pc
   15f8c:	andeq	sp, r1, r0, asr #31
   15f90:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15f94:	sub	sp, sp, #20
   15f98:	ldr	r5, [r0, #4]
   15f9c:	ldr	r4, [r0]
   15fa0:	cmp	r5, #0
   15fa4:	ldr	r7, [r0, #8]
   15fa8:	beq	16080 <daemon@@Base+0x6e0>
   15fac:	stmib	sp, {r1, r2, r3}
   15fb0:	mov	r6, #1
   15fb4:	str	r4, [sp]
   15fb8:	mov	r8, #0
   15fbc:	b	15fdc <daemon@@Base+0x63c>
   15fc0:	mov	r3, r6
   15fc4:	subs	r5, r5, #1
   15fc8:	moveq	r3, #0
   15fcc:	andne	r3, r3, #1
   15fd0:	cmp	r3, #0
   15fd4:	add	r4, r4, #24
   15fd8:	beq	16048 <daemon@@Base+0x6a8>
   15fdc:	ldr	fp, [r4, #12]
   15fe0:	ands	r9, fp, #8
   15fe4:	movne	r3, r6
   15fe8:	movne	r9, r8
   15fec:	bne	15fc4 <daemon@@Base+0x624>
   15ff0:	ldr	sl, [r4, #4]
   15ff4:	sub	r3, sl, #1
   15ff8:	cmp	r3, #254	; 0xfe
   15ffc:	bhi	15fc0 <daemon@@Base+0x620>
   16000:	bl	118f4 <__ctype_b_loc@plt>
   16004:	lsl	r3, sl, #1
   16008:	ldr	r1, [r0]
   1600c:	ldrh	r3, [r1, r3]
   16010:	tst	r3, #16384	; 0x4000
   16014:	beq	15fc0 <daemon@@Base+0x620>
   16018:	ldrb	r3, [r7]
   1601c:	cmp	r3, sl
   16020:	bne	15fc0 <daemon@@Base+0x620>
   16024:	ldr	r3, [sp]
   16028:	tst	fp, #4
   1602c:	moveq	r3, r4
   16030:	tst	fp, #2
   16034:	str	r3, [sp]
   16038:	movne	r3, r6
   1603c:	beq	16058 <daemon@@Base+0x6b8>
   16040:	add	r7, r7, #1
   16044:	b	15fc4 <daemon@@Base+0x624>
   16048:	mov	sl, r9
   1604c:	mov	r0, sl
   16050:	add	sp, sp, #20
   16054:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16058:	ldr	r3, [sp, #12]
   1605c:	ldr	r2, [sp, #8]
   16060:	ldr	r1, [sp]
   16064:	mov	r0, r4
   16068:	ldr	ip, [sp, #4]
   1606c:	blx	ip
   16070:	clz	r3, r0
   16074:	mov	r9, r0
   16078:	lsr	r3, r3, #5
   1607c:	b	16040 <daemon@@Base+0x6a0>
   16080:	mov	sl, r5
   16084:	b	1604c <daemon@@Base+0x6ac>
   16088:	push	{r4, r5, r6, lr}
   1608c:	ldr	r4, [r0, #12]
   16090:	ands	r4, r4, #8
   16094:	movne	r4, #0
   16098:	bne	160c4 <daemon@@Base+0x724>
   1609c:	ldr	r5, [r0, #4]
   160a0:	sub	r3, r5, #1
   160a4:	cmp	r3, #254	; 0xfe
   160a8:	bhi	160c4 <daemon@@Base+0x724>
   160ac:	bl	118f4 <__ctype_b_loc@plt>
   160b0:	lsl	r3, r5, #1
   160b4:	ldr	r2, [r0]
   160b8:	ldrh	r3, [r2, r3]
   160bc:	tst	r3, #16384	; 0x4000
   160c0:	movne	r4, r5
   160c4:	mov	r0, r4
   160c8:	pop	{r4, r5, r6, pc}
   160cc:	push	{r4, lr}
   160d0:	mov	r4, r0
   160d4:	bl	118f4 <__ctype_b_loc@plt>
   160d8:	ldr	r2, [r4]
   160dc:	ldr	lr, [r0]
   160e0:	b	160e8 <daemon@@Base+0x748>
   160e4:	str	r2, [r4]
   160e8:	ldrb	r1, [r2]
   160ec:	mov	r3, r2
   160f0:	add	r2, r2, #1
   160f4:	lsl	r0, r1, #1
   160f8:	ldrh	ip, [lr, r0]
   160fc:	tst	ip, #8192	; 0x2000
   16100:	bne	160e4 <daemon@@Base+0x744>
   16104:	subs	r0, r1, #45	; 0x2d
   16108:	movne	r0, #1
   1610c:	cmp	r1, #0
   16110:	popeq	{r4, pc}
   16114:	tst	ip, #8
   16118:	popne	{r4, pc}
   1611c:	add	r3, r3, #1
   16120:	str	r3, [r4]
   16124:	ldrb	r2, [r3]
   16128:	cmp	r2, #0
   1612c:	lsl	r2, r2, #1
   16130:	popeq	{r4, pc}
   16134:	ldrh	r2, [lr, r2]
   16138:	tst	r2, #8
   1613c:	beq	1611c <daemon@@Base+0x77c>
   16140:	pop	{r4, pc}
   16144:	push	{r4, r5, r6, lr}
   16148:	mov	r5, r0
   1614c:	ldr	r0, [r0, #12]
   16150:	cmp	r0, #0
   16154:	beq	16168 <daemon@@Base+0x7c8>
   16158:	ldr	r4, [r0, #24]
   1615c:	bl	1a89c <argp_parse@@Base+0x106c>
   16160:	subs	r0, r4, #0
   16164:	bne	16158 <daemon@@Base+0x7b8>
   16168:	ldr	r3, [r5, #4]
   1616c:	cmp	r3, #0
   16170:	beq	16184 <daemon@@Base+0x7e4>
   16174:	ldr	r0, [r5]
   16178:	bl	1a89c <argp_parse@@Base+0x106c>
   1617c:	ldr	r0, [r5, #8]
   16180:	bl	1a89c <argp_parse@@Base+0x106c>
   16184:	mov	r0, r5
   16188:	pop	{r4, r5, r6, lr}
   1618c:	b	1a89c <argp_parse@@Base+0x106c>
   16190:	push	{r4, r5, r6, r7, r8, lr}
   16194:	mov	r5, r1
   16198:	ldr	r3, [r0, #28]
   1619c:	ldr	r1, [r0, #24]
   161a0:	ldr	r2, [r0, #16]
   161a4:	sub	r3, r3, r1
   161a8:	cmp	r3, r2
   161ac:	mov	r4, r0
   161b0:	bhi	1621c <daemon@@Base+0x87c>
   161b4:	ldr	r1, [r4, #20]
   161b8:	mov	r6, #32
   161bc:	cmp	r1, #0
   161c0:	subge	r5, r5, r1
   161c4:	mov	r7, #1
   161c8:	cmp	r5, #0
   161cc:	sub	r5, r5, #1
   161d0:	ble	161fc <daemon@@Base+0x85c>
   161d4:	ldr	r3, [r4, #28]
   161d8:	ldr	r2, [r4, #32]
   161dc:	cmp	r3, r2
   161e0:	bcs	16200 <daemon@@Base+0x860>
   161e4:	add	r2, r3, #1
   161e8:	cmp	r5, #0
   161ec:	str	r2, [r4, #28]
   161f0:	sub	r5, r5, #1
   161f4:	strb	r6, [r3]
   161f8:	bgt	161d4 <daemon@@Base+0x834>
   161fc:	pop	{r4, r5, r6, r7, r8, pc}
   16200:	mov	r1, r7
   16204:	mov	r0, r4
   16208:	bl	1bd3c <argp_parse@@Base+0x250c>
   1620c:	cmp	r0, #0
   16210:	beq	161c8 <daemon@@Base+0x828>
   16214:	ldr	r3, [r4, #28]
   16218:	b	161e4 <daemon@@Base+0x844>
   1621c:	bl	1b6ac <argp_parse@@Base+0x1e7c>
   16220:	b	161b4 <daemon@@Base+0x814>
   16224:	push	{r4, r5, r6, lr}
   16228:	subs	r4, r2, #0
   1622c:	popeq	{r4, r5, r6, pc}
   16230:	ldr	ip, [r4, #20]
   16234:	cmp	ip, #0
   16238:	popeq	{r4, r5, r6, pc}
   1623c:	mov	r6, r1
   16240:	mov	r5, r0
   16244:	mov	r1, r3
   16248:	mov	r0, r4
   1624c:	bl	1a56c <argp_parse@@Base+0xd3c>
   16250:	ldr	r3, [r4, #20]
   16254:	mov	r1, r5
   16258:	mov	r2, r0
   1625c:	mov	r0, r6
   16260:	pop	{r4, r5, r6, lr}
   16264:	bx	r3
   16268:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1626c:	mov	r5, r2
   16270:	sub	sp, sp, #12
   16274:	mov	r2, r1
   16278:	ldr	r3, [r5, #16]
   1627c:	ldr	r1, [pc, #488]	; 1646c <daemon@@Base+0xacc>
   16280:	mov	r8, r0
   16284:	bl	16224 <daemon@@Base+0x884>
   16288:	subs	r6, r0, #0
   1628c:	beq	16398 <daemon@@Base+0x9f8>
   16290:	ldrb	r3, [r6]
   16294:	cmp	r3, #0
   16298:	beq	1638c <daemon@@Base+0x9ec>
   1629c:	ldr	r3, [r5, #8]
   162a0:	ldr	r3, [r3]
   162a4:	cmp	r3, #0
   162a8:	beq	162d0 <daemon@@Base+0x930>
   162ac:	ldr	r4, [r5, #4]
   162b0:	ldr	r3, [r4, #28]
   162b4:	ldr	r2, [r4, #32]
   162b8:	cmp	r3, r2
   162bc:	bcs	16450 <daemon@@Base+0xab0>
   162c0:	add	r1, r3, #1
   162c4:	mov	r2, #10
   162c8:	str	r1, [r4, #28]
   162cc:	strb	r2, [r3]
   162d0:	ldr	sl, [pc, #408]	; 16470 <daemon@@Base+0xad0>
   162d4:	ldr	r0, [r5, #4]
   162d8:	ldr	r1, [sl, #24]
   162dc:	bl	16190 <daemon@@Base+0x7f0>
   162e0:	ldr	r4, [r5, #4]
   162e4:	ldr	r9, [sl, #24]
   162e8:	ldr	r7, [r4, #28]
   162ec:	ldr	r3, [r4, #24]
   162f0:	ldr	r2, [r4, #16]
   162f4:	sub	r3, r7, r3
   162f8:	cmp	r3, r2
   162fc:	strls	r9, [r4, #4]
   16300:	movls	fp, r4
   16304:	bhi	163d4 <daemon@@Base+0xa34>
   16308:	str	r9, [fp, #12]
   1630c:	mov	r0, r6
   16310:	bl	11918 <strlen@plt>
   16314:	subs	r9, r0, #0
   16318:	beq	16350 <daemon@@Base+0x9b0>
   1631c:	ldr	r2, [r4, #32]
   16320:	add	r3, r7, r9
   16324:	cmp	r2, r3
   16328:	bcc	163b8 <daemon@@Base+0xa18>
   1632c:	mov	r2, r9
   16330:	mov	r0, r7
   16334:	mov	r1, r6
   16338:	bl	11744 <memcpy@plt>
   1633c:	ldr	r3, [r4, #28]
   16340:	add	r9, r3, r9
   16344:	str	r9, [r4, #28]
   16348:	ldr	r4, [r5, #4]
   1634c:	ldr	r7, [r4, #28]
   16350:	ldr	r3, [r4, #24]
   16354:	ldr	r2, [r4, #16]
   16358:	sub	r3, r7, r3
   1635c:	cmp	r3, r2
   16360:	movls	r9, r4
   16364:	bhi	16420 <daemon@@Base+0xa80>
   16368:	ldr	r2, [r9, #32]
   1636c:	mov	r3, #0
   16370:	cmp	r2, r7
   16374:	str	r3, [r4, #4]
   16378:	bls	16434 <daemon@@Base+0xa94>
   1637c:	add	r2, r7, #1
   16380:	mov	r3, #10
   16384:	str	r2, [r9, #28]
   16388:	strb	r3, [r7]
   1638c:	ldr	r3, [r5, #8]
   16390:	mov	r2, #1
   16394:	str	r2, [r3, #4]
   16398:	cmp	r8, r6
   1639c:	beq	163b0 <daemon@@Base+0xa10>
   163a0:	mov	r0, r6
   163a4:	add	sp, sp, #12
   163a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   163ac:	b	1a89c <argp_parse@@Base+0x106c>
   163b0:	add	sp, sp, #12
   163b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   163b8:	mov	r1, r9
   163bc:	mov	r0, r4
   163c0:	bl	1bd3c <argp_parse@@Base+0x250c>
   163c4:	cmp	r0, #0
   163c8:	beq	16348 <daemon@@Base+0x9a8>
   163cc:	ldr	r7, [r4, #28]
   163d0:	b	1632c <daemon@@Base+0x98c>
   163d4:	mov	r0, r4
   163d8:	str	r9, [sp, #4]
   163dc:	bl	1b6ac <argp_parse@@Base+0x1e7c>
   163e0:	ldr	fp, [r5, #4]
   163e4:	ldr	r3, [sp, #4]
   163e8:	ldr	r9, [sl, #24]
   163ec:	ldr	r7, [fp, #28]
   163f0:	ldr	r2, [fp, #24]
   163f4:	ldr	r1, [fp, #16]
   163f8:	sub	r2, r7, r2
   163fc:	cmp	r2, r1
   16400:	str	r3, [r4, #4]
   16404:	movls	r4, fp
   16408:	bls	16308 <daemon@@Base+0x968>
   1640c:	mov	r0, fp
   16410:	bl	1b6ac <argp_parse@@Base+0x1e7c>
   16414:	ldr	r4, [r5, #4]
   16418:	ldr	r7, [r4, #28]
   1641c:	b	16308 <daemon@@Base+0x968>
   16420:	mov	r0, r4
   16424:	bl	1b6ac <argp_parse@@Base+0x1e7c>
   16428:	ldr	r9, [r5, #4]
   1642c:	ldr	r7, [r9, #28]
   16430:	b	16368 <daemon@@Base+0x9c8>
   16434:	mov	r1, #1
   16438:	mov	r0, r9
   1643c:	bl	1bd3c <argp_parse@@Base+0x250c>
   16440:	cmp	r0, #0
   16444:	beq	1638c <daemon@@Base+0x9ec>
   16448:	ldr	r7, [r9, #28]
   1644c:	b	1637c <daemon@@Base+0x9dc>
   16450:	mov	r1, #1
   16454:	mov	r0, r4
   16458:	bl	1bd3c <argp_parse@@Base+0x250c>
   1645c:	cmp	r0, #0
   16460:	beq	162d0 <daemon@@Base+0x930>
   16464:	ldr	r3, [r4, #28]
   16468:	b	162c0 <daemon@@Base+0x920>
   1646c:	andeq	r0, r0, #3
   16470:	andeq	pc, r2, r0, lsl #11
   16474:	ldr	r3, [r1, #12]
   16478:	push	{r4, r5, r6, r7, r8, lr}
   1647c:	cmp	r3, #0
   16480:	mov	r4, r1
   16484:	mov	r6, r0
   16488:	beq	16570 <daemon@@Base+0xbd0>
   1648c:	ldr	r3, [r1, #8]
   16490:	ldr	r2, [r1]
   16494:	ldr	r7, [r3]
   16498:	ldr	r3, [r3, #4]
   1649c:	ldr	r5, [r2, #16]
   164a0:	cmp	r3, #0
   164a4:	cmpne	r7, #0
   164a8:	beq	164e0 <daemon@@Base+0xb40>
   164ac:	ldr	r2, [r2, #12]
   164b0:	ldr	r3, [r7, #12]
   164b4:	cmp	r2, r3
   164b8:	beq	164e0 <daemon@@Base+0xb40>
   164bc:	ldr	r8, [r1, #4]
   164c0:	ldr	r3, [r8, #28]
   164c4:	ldr	r2, [r8, #32]
   164c8:	cmp	r3, r2
   164cc:	bcs	16600 <daemon@@Base+0xc60>
   164d0:	add	r1, r3, #1
   164d4:	mov	r2, #10
   164d8:	str	r1, [r8, #28]
   164dc:	strb	r2, [r3]
   164e0:	cmp	r5, #0
   164e4:	beq	165cc <daemon@@Base+0xc2c>
   164e8:	ldr	r0, [r5]
   164ec:	cmp	r0, #0
   164f0:	beq	165cc <daemon@@Base+0xc2c>
   164f4:	ldrb	r3, [r0]
   164f8:	cmp	r3, #0
   164fc:	beq	165cc <daemon@@Base+0xc2c>
   16500:	cmp	r7, #0
   16504:	beq	16534 <daemon@@Base+0xb94>
   16508:	ldr	r3, [r7, #16]
   1650c:	cmp	r5, r3
   16510:	beq	165cc <daemon@@Base+0xc2c>
   16514:	cmp	r3, #0
   16518:	beq	16534 <daemon@@Base+0xb94>
   1651c:	ldr	r3, [r3, #12]
   16520:	cmp	r3, #0
   16524:	cmpne	r5, r3
   16528:	bne	1651c <daemon@@Base+0xb7c>
   1652c:	cmp	r5, r3
   16530:	beq	165cc <daemon@@Base+0xc2c>
   16534:	ldr	r3, [r4, #4]
   16538:	ldr	r1, [r5, #16]
   1653c:	mov	r2, r4
   16540:	ldr	r7, [r3, #12]
   16544:	bl	16268 <daemon@@Base+0x8c8>
   16548:	ldr	r5, [r4, #4]
   1654c:	mov	r0, r5
   16550:	ldr	r3, [r5, #28]
   16554:	ldr	r1, [r5, #24]
   16558:	ldr	r2, [r5, #16]
   1655c:	sub	r3, r3, r1
   16560:	cmp	r3, r2
   16564:	bhi	165f4 <daemon@@Base+0xc54>
   16568:	str	r7, [r5, #12]
   1656c:	b	165d0 <daemon@@Base+0xc30>
   16570:	ldr	r5, [r1, #4]
   16574:	ldr	r3, [r5, #28]
   16578:	ldr	r1, [r5, #32]
   1657c:	add	r2, r3, #2
   16580:	cmp	r1, r2
   16584:	bcc	165b0 <daemon@@Base+0xc10>
   16588:	ldr	r2, [pc, #140]	; 1661c <daemon@@Base+0xc7c>
   1658c:	mov	r1, r6
   16590:	ldrh	r2, [r2]
   16594:	strh	r2, [r3]
   16598:	ldr	r3, [r5, #28]
   1659c:	ldr	r0, [r4, #4]
   165a0:	add	r3, r3, #2
   165a4:	str	r3, [r5, #28]
   165a8:	pop	{r4, r5, r6, r7, r8, lr}
   165ac:	b	16190 <daemon@@Base+0x7f0>
   165b0:	mov	r1, #2
   165b4:	mov	r0, r5
   165b8:	bl	1bd3c <argp_parse@@Base+0x250c>
   165bc:	cmp	r0, #0
   165c0:	beq	165e4 <daemon@@Base+0xc44>
   165c4:	ldr	r3, [r5, #28]
   165c8:	b	16588 <daemon@@Base+0xbe8>
   165cc:	ldr	r0, [r4, #4]
   165d0:	mov	r3, #0
   165d4:	str	r3, [r4, #12]
   165d8:	mov	r1, r6
   165dc:	pop	{r4, r5, r6, r7, r8, lr}
   165e0:	b	16190 <daemon@@Base+0x7f0>
   165e4:	ldr	r0, [r4, #4]
   165e8:	mov	r1, r6
   165ec:	pop	{r4, r5, r6, r7, r8, lr}
   165f0:	b	16190 <daemon@@Base+0x7f0>
   165f4:	bl	1b6ac <argp_parse@@Base+0x1e7c>
   165f8:	ldr	r0, [r4, #4]
   165fc:	b	16568 <daemon@@Base+0xbc8>
   16600:	mov	r1, #1
   16604:	mov	r0, r8
   16608:	bl	1bd3c <argp_parse@@Base+0x250c>
   1660c:	cmp	r0, #0
   16610:	beq	164e0 <daemon@@Base+0xb40>
   16614:	ldr	r3, [r8, #28]
   16618:	b	164d0 <daemon@@Base+0xb30>
   1661c:	andeq	lr, r1, r4, ror r0
   16620:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16624:	mov	r7, r3
   16628:	ldr	sl, [r0, #12]
   1662c:	sub	sp, sp, #36	; 0x24
   16630:	ldr	r3, [r0, #16]
   16634:	cmp	sl, #0
   16638:	mov	fp, r0
   1663c:	mov	r6, r2
   16640:	str	r3, [sp, #16]
   16644:	mov	r9, r1
   16648:	ldr	r8, [sp, #72]	; 0x48
   1664c:	ldr	r5, [sp, #76]	; 0x4c
   16650:	beq	16a20 <daemon@@Base+0x1080>
   16654:	mov	r1, #11
   16658:	mov	r0, sl
   1665c:	bl	11930 <strchr@plt>
   16660:	cmp	r6, #0
   16664:	bne	1693c <daemon@@Base+0xf9c>
   16668:	cmp	r0, #0
   1666c:	ldr	r3, [fp, #20]
   16670:	beq	16b78 <daemon@@Base+0x11d8>
   16674:	cmp	r3, #0
   16678:	sub	r4, r0, sl
   1667c:	beq	16b10 <daemon@@Base+0x1170>
   16680:	cmp	r4, #0
   16684:	beq	16ab0 <daemon@@Base+0x1110>
   16688:	mov	r0, sl
   1668c:	mov	r1, r4
   16690:	bl	1172c <strndup@plt>
   16694:	mov	r3, #1
   16698:	str	r3, [sp, #24]
   1669c:	mov	sl, r0
   166a0:	adds	r3, r0, #0
   166a4:	movne	r3, #1
   166a8:	str	r3, [sp, #20]
   166ac:	mov	r1, r9
   166b0:	mov	r0, fp
   166b4:	bl	1a56c <argp_parse@@Base+0xd3c>
   166b8:	ldr	r3, [fp, #20]
   166bc:	str	r0, [sp, #12]
   166c0:	ldr	r0, [pc, #1272]	; 16bc0 <daemon@@Base+0x1220>
   166c4:	ldr	r2, [sp, #12]
   166c8:	mov	r1, sl
   166cc:	blx	r3
   166d0:	subs	r3, r0, #0
   166d4:	beq	16a60 <daemon@@Base+0x10c0>
   166d8:	cmp	r7, #0
   166dc:	beq	16700 <daemon@@Base+0xd60>
   166e0:	ldr	r2, [r5, #28]
   166e4:	ldr	r1, [r5, #32]
   166e8:	cmp	r2, r1
   166ec:	bcs	16a68 <daemon@@Base+0x10c8>
   166f0:	add	r0, r2, #1
   166f4:	mov	r1, #10
   166f8:	str	r0, [r5, #28]
   166fc:	strb	r1, [r2]
   16700:	ldr	r2, [sp, #24]
   16704:	cmp	r3, sl
   16708:	movne	r2, #0
   1670c:	andeq	r2, r2, #1
   16710:	cmp	r2, #0
   16714:	beq	16980 <daemon@@Base+0xfe0>
   16718:	ldr	r0, [r5, #28]
   1671c:	ldr	r1, [r5, #32]
   16720:	add	r2, r0, r4
   16724:	cmp	r1, r2
   16728:	bcs	169e0 <daemon@@Base+0x1040>
   1672c:	mov	r1, r4
   16730:	mov	r0, r5
   16734:	str	r3, [sp, #24]
   16738:	bl	1bd3c <argp_parse@@Base+0x250c>
   1673c:	ldr	r3, [sp, #24]
   16740:	cmp	r0, #0
   16744:	bne	169dc <daemon@@Base+0x103c>
   16748:	ldr	r4, [r5, #28]
   1674c:	ldr	r1, [r5, #24]
   16750:	ldr	r2, [r5, #16]
   16754:	sub	r4, r4, r1
   16758:	cmp	r4, r2
   1675c:	bhi	16a04 <daemon@@Base+0x1064>
   16760:	ldr	r2, [r5, #20]
   16764:	ldr	r1, [r5, #4]
   16768:	bic	r2, r2, r2, asr #31
   1676c:	cmp	r1, r2
   16770:	bcs	16794 <daemon@@Base+0xdf4>
   16774:	ldr	r2, [r5, #28]
   16778:	ldr	r1, [r5, #32]
   1677c:	cmp	r2, r1
   16780:	bcs	16a8c <daemon@@Base+0x10ec>
   16784:	add	r0, r2, #1
   16788:	mov	r1, #10
   1678c:	str	r0, [r5, #28]
   16790:	strb	r1, [r2]
   16794:	cmp	r3, sl
   16798:	moveq	r4, #1
   1679c:	beq	167ac <daemon@@Base+0xe0c>
   167a0:	mov	r0, r3
   167a4:	bl	1a89c <argp_parse@@Base+0x106c>
   167a8:	mov	r4, #1
   167ac:	ldr	r3, [sp, #20]
   167b0:	cmp	r3, #0
   167b4:	beq	167cc <daemon@@Base+0xe2c>
   167b8:	ldr	r3, [fp, #20]
   167bc:	cmp	r3, #0
   167c0:	beq	168b0 <daemon@@Base+0xf10>
   167c4:	mov	r0, sl
   167c8:	bl	1a89c <argp_parse@@Base+0x106c>
   167cc:	cmp	r6, #0
   167d0:	beq	168b0 <daemon@@Base+0xf10>
   167d4:	ldr	r3, [fp, #20]
   167d8:	cmp	r3, #0
   167dc:	beq	168b0 <daemon@@Base+0xf10>
   167e0:	ldr	r2, [sp, #12]
   167e4:	mov	r1, #0
   167e8:	ldr	r0, [pc, #980]	; 16bc4 <daemon@@Base+0x1224>
   167ec:	blx	r3
   167f0:	subs	sl, r0, #0
   167f4:	beq	168b0 <daemon@@Base+0xf10>
   167f8:	orrs	r3, r7, r4
   167fc:	beq	16820 <daemon@@Base+0xe80>
   16800:	ldr	r3, [r5, #28]
   16804:	ldr	r2, [r5, #32]
   16808:	cmp	r3, r2
   1680c:	bcs	16b48 <daemon@@Base+0x11a8>
   16810:	add	r1, r3, #1
   16814:	mov	r2, #10
   16818:	str	r1, [r5, #28]
   1681c:	strb	r2, [r3]
   16820:	mov	r0, sl
   16824:	bl	11918 <strlen@plt>
   16828:	subs	r4, r0, #0
   1682c:	beq	16858 <daemon@@Base+0xeb8>
   16830:	ldr	r0, [r5, #28]
   16834:	ldr	r2, [r5, #32]
   16838:	add	r3, r0, r4
   1683c:	cmp	r2, r3
   16840:	bcs	16ac0 <daemon@@Base+0x1120>
   16844:	mov	r1, r4
   16848:	mov	r0, r5
   1684c:	bl	1bd3c <argp_parse@@Base+0x250c>
   16850:	cmp	r0, #0
   16854:	bne	16abc <daemon@@Base+0x111c>
   16858:	mov	r0, sl
   1685c:	bl	1a89c <argp_parse@@Base+0x106c>
   16860:	ldr	r3, [r5, #28]
   16864:	ldr	r1, [r5, #24]
   16868:	ldr	r2, [r5, #16]
   1686c:	sub	r3, r3, r1
   16870:	cmp	r3, r2
   16874:	bhi	16adc <daemon@@Base+0x113c>
   16878:	ldr	r3, [r5, #20]
   1687c:	ldr	r2, [r5, #4]
   16880:	bic	r3, r3, r3, asr #31
   16884:	cmp	r2, r3
   16888:	bcs	16a18 <daemon@@Base+0x1078>
   1688c:	ldr	r3, [r5, #28]
   16890:	ldr	r2, [r5, #32]
   16894:	cmp	r3, r2
   16898:	bcs	16b2c <daemon@@Base+0x118c>
   1689c:	mov	r4, #1
   168a0:	add	r2, r3, r4
   168a4:	str	r2, [r5, #28]
   168a8:	mov	r2, #10
   168ac:	strb	r2, [r3]
   168b0:	ldr	fp, [sp, #16]
   168b4:	cmp	fp, #0
   168b8:	beq	16930 <daemon@@Base+0xf90>
   168bc:	ldr	r3, [fp]
   168c0:	cmp	r3, #0
   168c4:	beq	16930 <daemon@@Base+0xf90>
   168c8:	eor	r2, r4, #1
   168cc:	and	r2, r2, #1
   168d0:	clz	sl, r8
   168d4:	lsr	sl, sl, #5
   168d8:	orrs	r2, sl, r2
   168dc:	bne	168f8 <daemon@@Base+0xf58>
   168e0:	b	16b64 <daemon@@Base+0x11c4>
   168e4:	cmp	r4, #0
   168e8:	movne	r2, sl
   168ec:	orreq	r2, sl, #1
   168f0:	cmp	r2, #0
   168f4:	beq	16930 <daemon@@Base+0xf90>
   168f8:	orrs	r2, r7, r4
   168fc:	mov	r0, r3
   16900:	str	r5, [sp, #4]
   16904:	movne	r3, #1
   16908:	moveq	r3, #0
   1690c:	str	r8, [sp]
   16910:	mov	r2, r6
   16914:	mov	r1, r9
   16918:	bl	16620 <daemon@@Base+0xc80>
   1691c:	ldr	r3, [fp, #16]
   16920:	add	fp, fp, #16
   16924:	cmp	r3, #0
   16928:	orr	r4, r4, r0
   1692c:	bne	168e4 <daemon@@Base+0xf44>
   16930:	mov	r0, r4
   16934:	add	sp, sp, #36	; 0x24
   16938:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1693c:	cmp	r0, #0
   16940:	addne	sl, r0, #1
   16944:	beq	16b08 <daemon@@Base+0x1168>
   16948:	ldr	r3, [fp, #20]
   1694c:	cmp	r3, #0
   16950:	beq	16ae8 <daemon@@Base+0x1148>
   16954:	mov	r3, #0
   16958:	mov	r1, r9
   1695c:	mov	r0, fp
   16960:	mov	r4, r3
   16964:	str	r3, [sp, #20]
   16968:	bl	1a56c <argp_parse@@Base+0xd3c>
   1696c:	str	r4, [sp, #24]
   16970:	ldr	r3, [fp, #20]
   16974:	str	r0, [sp, #12]
   16978:	ldr	r0, [pc, #584]	; 16bc8 <daemon@@Base+0x1228>
   1697c:	b	166c4 <daemon@@Base+0xd24>
   16980:	mov	r0, r3
   16984:	str	r3, [sp, #24]
   16988:	bl	11918 <strlen@plt>
   1698c:	ldr	r3, [sp, #24]
   16990:	subs	r4, r0, #0
   16994:	beq	16748 <daemon@@Base+0xda8>
   16998:	ldr	r0, [r5, #28]
   1699c:	ldr	r1, [r5, #32]
   169a0:	add	r2, r0, r4
   169a4:	cmp	r1, r2
   169a8:	bcs	169cc <daemon@@Base+0x102c>
   169ac:	mov	r1, r4
   169b0:	mov	r0, r5
   169b4:	str	r3, [sp, #24]
   169b8:	bl	1bd3c <argp_parse@@Base+0x250c>
   169bc:	ldr	r3, [sp, #24]
   169c0:	cmp	r0, #0
   169c4:	beq	16748 <daemon@@Base+0xda8>
   169c8:	ldr	r0, [r5, #28]
   169cc:	mov	r2, r4
   169d0:	mov	r1, r3
   169d4:	str	r3, [sp, #24]
   169d8:	b	169ec <daemon@@Base+0x104c>
   169dc:	ldr	r0, [r5, #28]
   169e0:	mov	r2, r4
   169e4:	mov	r1, sl
   169e8:	str	r3, [sp, #24]
   169ec:	bl	11744 <memcpy@plt>
   169f0:	ldr	r2, [r5, #28]
   169f4:	ldr	r3, [sp, #24]
   169f8:	add	r4, r2, r4
   169fc:	str	r4, [r5, #28]
   16a00:	b	1674c <daemon@@Base+0xdac>
   16a04:	mov	r0, r5
   16a08:	str	r3, [sp, #24]
   16a0c:	bl	1b6ac <argp_parse@@Base+0x1e7c>
   16a10:	ldr	r3, [sp, #24]
   16a14:	b	16760 <daemon@@Base+0xdc0>
   16a18:	mov	r4, #1
   16a1c:	b	168b0 <daemon@@Base+0xf10>
   16a20:	ldr	r4, [r0, #20]
   16a24:	cmp	r4, #0
   16a28:	beq	16b70 <daemon@@Base+0x11d0>
   16a2c:	bl	1a56c <argp_parse@@Base+0xd3c>
   16a30:	cmp	r6, #0
   16a34:	ldr	r3, [fp, #20]
   16a38:	strne	sl, [sp, #20]
   16a3c:	strne	sl, [sp, #24]
   16a40:	movne	r4, sl
   16a44:	streq	r6, [sp, #20]
   16a48:	streq	r6, [sp, #24]
   16a4c:	moveq	r4, r6
   16a50:	str	r0, [sp, #12]
   16a54:	ldrne	r0, [pc, #364]	; 16bc8 <daemon@@Base+0x1228>
   16a58:	ldreq	r0, [pc, #352]	; 16bc0 <daemon@@Base+0x1220>
   16a5c:	b	166c4 <daemon@@Base+0xd24>
   16a60:	mov	r4, r3
   16a64:	b	167ac <daemon@@Base+0xe0c>
   16a68:	mov	r1, #1
   16a6c:	mov	r0, r5
   16a70:	str	r3, [sp, #28]
   16a74:	bl	1bd3c <argp_parse@@Base+0x250c>
   16a78:	ldr	r3, [sp, #28]
   16a7c:	cmp	r0, #0
   16a80:	beq	16700 <daemon@@Base+0xd60>
   16a84:	ldr	r2, [r5, #28]
   16a88:	b	166f0 <daemon@@Base+0xd50>
   16a8c:	mov	r1, #1
   16a90:	mov	r0, r5
   16a94:	str	r3, [sp, #24]
   16a98:	bl	1bd3c <argp_parse@@Base+0x250c>
   16a9c:	ldr	r3, [sp, #24]
   16aa0:	cmp	r0, #0
   16aa4:	beq	16794 <daemon@@Base+0xdf4>
   16aa8:	ldr	r2, [r5, #28]
   16aac:	b	16784 <daemon@@Base+0xde4>
   16ab0:	str	r4, [sp, #20]
   16ab4:	str	r4, [sp, #24]
   16ab8:	b	166ac <daemon@@Base+0xd0c>
   16abc:	ldr	r0, [r5, #28]
   16ac0:	mov	r2, r4
   16ac4:	mov	r1, sl
   16ac8:	bl	11744 <memcpy@plt>
   16acc:	ldr	r3, [r5, #28]
   16ad0:	add	r4, r3, r4
   16ad4:	str	r4, [r5, #28]
   16ad8:	b	16858 <daemon@@Base+0xeb8>
   16adc:	mov	r0, r5
   16ae0:	bl	1b6ac <argp_parse@@Base+0x1e7c>
   16ae4:	b	16878 <daemon@@Base+0xed8>
   16ae8:	cmp	sl, #0
   16aec:	beq	16b6c <daemon@@Base+0x11cc>
   16af0:	str	r3, [sp, #20]
   16af4:	str	r3, [sp, #24]
   16af8:	mov	r4, r3
   16afc:	str	r3, [sp, #12]
   16b00:	mov	r3, sl
   16b04:	b	166d8 <daemon@@Base+0xd38>
   16b08:	mov	sl, r0
   16b0c:	b	16948 <daemon@@Base+0xfa8>
   16b10:	adds	r3, r4, #0
   16b14:	movne	r3, #1
   16b18:	str	r3, [sp, #24]
   16b1c:	str	r3, [sp, #20]
   16b20:	str	r6, [sp, #12]
   16b24:	mov	r3, sl
   16b28:	b	166d8 <daemon@@Base+0xd38>
   16b2c:	mov	r1, #1
   16b30:	mov	r0, r5
   16b34:	bl	1bd3c <argp_parse@@Base+0x250c>
   16b38:	cmp	r0, #0
   16b3c:	beq	16a18 <daemon@@Base+0x1078>
   16b40:	ldr	r3, [r5, #28]
   16b44:	b	1689c <daemon@@Base+0xefc>
   16b48:	mov	r1, #1
   16b4c:	mov	r0, r5
   16b50:	bl	1bd3c <argp_parse@@Base+0x250c>
   16b54:	cmp	r0, #0
   16b58:	beq	16820 <daemon@@Base+0xe80>
   16b5c:	ldr	r3, [r5, #28]
   16b60:	b	16810 <daemon@@Base+0xe70>
   16b64:	mov	r4, #1
   16b68:	b	16930 <daemon@@Base+0xf90>
   16b6c:	mov	r4, sl
   16b70:	str	r4, [sp, #12]
   16b74:	b	167cc <daemon@@Base+0xe2c>
   16b78:	cmp	r3, #0
   16b7c:	beq	16ba8 <daemon@@Base+0x1208>
   16b80:	mov	r1, r9
   16b84:	mov	r0, fp
   16b88:	bl	1a56c <argp_parse@@Base+0xd3c>
   16b8c:	mov	r4, r6
   16b90:	ldr	r3, [fp, #20]
   16b94:	str	r6, [sp, #20]
   16b98:	str	r6, [sp, #24]
   16b9c:	str	r0, [sp, #12]
   16ba0:	ldr	r0, [pc, #24]	; 16bc0 <daemon@@Base+0x1220>
   16ba4:	b	166c4 <daemon@@Base+0xd24>
   16ba8:	mov	r3, sl
   16bac:	str	r6, [sp, #20]
   16bb0:	str	r6, [sp, #24]
   16bb4:	mov	r4, r6
   16bb8:	str	r6, [sp, #12]
   16bbc:	b	166d8 <daemon@@Base+0xd38>
   16bc0:	andeq	r0, r0, #1
   16bc4:	andeq	r0, r0, #4
   16bc8:	andeq	r0, r0, #2
   16bcc:	ldr	r3, [r0, #12]
   16bd0:	ldr	r2, [r1, #12]
   16bd4:	push	{r4, r5, r6, lr}
   16bd8:	cmp	r3, r2
   16bdc:	beq	16c2c <daemon@@Base+0x128c>
   16be0:	mov	r5, r1
   16be4:	mov	r4, r0
   16be8:	mov	r1, r2
   16bec:	mov	r0, r3
   16bf0:	bl	16bcc <daemon@@Base+0x122c>
   16bf4:	cmp	r0, #0
   16bf8:	popne	{r4, r5, r6, pc}
   16bfc:	ldr	r3, [r5, #8]
   16c00:	ldr	r0, [r4, #8]
   16c04:	mvn	r2, r3
   16c08:	lsr	r2, r2, #31
   16c0c:	cmp	r2, r0, lsr #31
   16c10:	subne	r0, r0, r3
   16c14:	subeq	r0, r3, r0
   16c18:	cmp	r0, #0
   16c1c:	ldreq	r3, [r5, #4]
   16c20:	ldreq	r0, [r4, #4]
   16c24:	subeq	r0, r3, r0
   16c28:	pop	{r4, r5, r6, pc}
   16c2c:	ldr	r3, [r1, #8]
   16c30:	ldr	r2, [r0, #8]
   16c34:	mvn	ip, r3
   16c38:	ldr	lr, [r1, #4]
   16c3c:	lsr	ip, ip, #31
   16c40:	cmp	ip, r2, lsr #31
   16c44:	ldr	r1, [r0, #4]
   16c48:	subne	r0, r2, r3
   16c4c:	subeq	r0, r3, r2
   16c50:	cmp	r0, #0
   16c54:	subeq	r0, lr, r1
   16c58:	pop	{r4, r5, r6, pc}
   16c5c:	push	{r4, r5, r6, r7, r8, r9, lr}
   16c60:	sub	sp, sp, #12
   16c64:	ldr	lr, [r0, #16]
   16c68:	cmp	lr, #0
   16c6c:	movne	r2, lr
   16c70:	bne	16c7c <daemon@@Base+0x12dc>
   16c74:	b	16f40 <daemon@@Base+0x15a0>
   16c78:	mov	r2, r3
   16c7c:	ldr	r3, [r2, #12]
   16c80:	cmp	r3, #0
   16c84:	bne	16c78 <daemon@@Base+0x12d8>
   16c88:	ldr	ip, [r1, #16]
   16c8c:	ldr	r4, [r2, #8]
   16c90:	cmp	ip, #0
   16c94:	movne	r2, ip
   16c98:	bne	16ca4 <daemon@@Base+0x1304>
   16c9c:	b	16f54 <daemon@@Base+0x15b4>
   16ca0:	mov	r2, r3
   16ca4:	ldr	r3, [r2, #12]
   16ca8:	cmp	r3, #0
   16cac:	bne	16ca0 <daemon@@Base+0x1300>
   16cb0:	ldr	r3, [r2, #8]
   16cb4:	mvn	r2, r3
   16cb8:	lsr	r2, r2, #31
   16cbc:	cmp	r2, r4, lsr #31
   16cc0:	subne	r4, r4, r3
   16cc4:	subeq	r4, r3, r4
   16cc8:	cmp	r4, #0
   16ccc:	bne	16d34 <daemon@@Base+0x1394>
   16cd0:	adds	r4, ip, #0
   16cd4:	movne	r4, #1
   16cd8:	cmp	lr, #0
   16cdc:	rsbeq	r4, r4, #0
   16ce0:	rsbne	r4, r4, #1
   16ce4:	cmp	r4, #0
   16ce8:	bne	16d34 <daemon@@Base+0x1394>
   16cec:	cmp	lr, #0
   16cf0:	mov	r5, r1
   16cf4:	mov	r6, r0
   16cf8:	beq	16d50 <daemon@@Base+0x13b0>
   16cfc:	ldr	r0, [lr, #20]
   16d00:	ldr	r2, [ip, #20]
   16d04:	cmp	r0, r2
   16d08:	ble	16f14 <daemon@@Base+0x1574>
   16d0c:	mov	r0, lr
   16d10:	ldr	r0, [r0, #12]
   16d14:	ldr	r3, [r0, #20]
   16d18:	cmp	r2, r3
   16d1c:	blt	16d10 <daemon@@Base+0x1370>
   16d20:	mov	r1, ip
   16d24:	bl	16bcc <daemon@@Base+0x122c>
   16d28:	cmp	r0, #0
   16d2c:	movne	r4, r0
   16d30:	moveq	r4, #1
   16d34:	mov	r0, r4
   16d38:	add	sp, sp, #12
   16d3c:	pop	{r4, r5, r6, r7, r8, r9, pc}
   16d40:	mov	r0, lr
   16d44:	bl	16bcc <daemon@@Base+0x122c>
   16d48:	subs	r4, r0, #0
   16d4c:	bne	16d34 <daemon@@Base+0x1394>
   16d50:	ldr	r4, [r5, #12]
   16d54:	ldr	r3, [r6, #12]
   16d58:	mvn	r2, r4
   16d5c:	lsr	r2, r2, #31
   16d60:	cmp	r2, r3, lsr #31
   16d64:	subne	r4, r3, r4
   16d68:	subeq	r4, r4, r3
   16d6c:	cmp	r4, #0
   16d70:	bne	16d34 <daemon@@Base+0x1394>
   16d74:	ldr	r2, [r6, #4]
   16d78:	ldr	lr, [r6]
   16d7c:	cmp	r2, #0
   16d80:	beq	16dac <daemon@@Base+0x140c>
   16d84:	add	r3, lr, #24
   16d88:	ldr	r1, [r3, #-24]	; 0xffffffe8
   16d8c:	cmp	r1, #0
   16d90:	beq	16da0 <daemon@@Base+0x1400>
   16d94:	ldr	r0, [r3, #-12]
   16d98:	tst	r0, #2
   16d9c:	beq	16f5c <daemon@@Base+0x15bc>
   16da0:	subs	r2, r2, #1
   16da4:	add	r3, r3, #24
   16da8:	bne	16d88 <daemon@@Base+0x13e8>
   16dac:	ldr	r2, [r5, #4]
   16db0:	mov	ip, #0
   16db4:	cmp	r2, ip
   16db8:	str	ip, [sp]
   16dbc:	ldr	r3, [r5]
   16dc0:	beq	16fcc <daemon@@Base+0x162c>
   16dc4:	add	r3, r3, #24
   16dc8:	ldr	r1, [r3, #-24]	; 0xffffffe8
   16dcc:	cmp	r1, #0
   16dd0:	beq	16de0 <daemon@@Base+0x1440>
   16dd4:	ldr	r0, [r3, #-12]
   16dd8:	tst	r0, #2
   16ddc:	beq	16df0 <daemon@@Base+0x1450>
   16de0:	subs	r2, r2, #1
   16de4:	add	r3, r3, #24
   16de8:	bne	16dc8 <daemon@@Base+0x1428>
   16dec:	mov	r1, r2
   16df0:	ldr	r3, [lr, #12]
   16df4:	str	r1, [sp, #4]
   16df8:	ands	r3, ip, r3, lsr #3
   16dfc:	beq	16fc4 <daemon@@Base+0x1624>
   16e00:	mov	r0, sp
   16e04:	bl	160cc <daemon@@Base+0x72c>
   16e08:	ldr	r3, [r5]
   16e0c:	cmp	r0, #0
   16e10:	bne	16fb0 <daemon@@Base+0x1610>
   16e14:	ldr	r3, [r3, #12]
   16e18:	tst	r3, #8
   16e1c:	beq	16e44 <daemon@@Base+0x14a4>
   16e20:	ldr	r3, [sp, #4]
   16e24:	cmp	r3, #0
   16e28:	beq	16e44 <daemon@@Base+0x14a4>
   16e2c:	add	r0, sp, #4
   16e30:	bl	160cc <daemon@@Base+0x72c>
   16e34:	cmp	r0, #0
   16e38:	subne	r4, r4, #1
   16e3c:	cmp	r4, #0
   16e40:	bne	16d34 <daemon@@Base+0x1394>
   16e44:	ldr	r2, [r6, #20]
   16e48:	mov	r0, r6
   16e4c:	mov	r3, #0
   16e50:	ldr	r2, [r2, #24]
   16e54:	ldr	r1, [pc, #408]	; 16ff4 <daemon@@Base+0x1654>
   16e58:	bl	15f90 <daemon@@Base+0x5f0>
   16e5c:	ldr	r2, [r5, #20]
   16e60:	mov	r3, #0
   16e64:	ldr	r1, [pc, #392]	; 16ff4 <daemon@@Base+0x1654>
   16e68:	ldr	r2, [r2, #24]
   16e6c:	uxtb	r6, r0
   16e70:	mov	r0, r5
   16e74:	bl	15f90 <daemon@@Base+0x5f0>
   16e78:	cmp	r6, #0
   16e7c:	lslne	r4, r6, #2
   16e80:	movne	r7, r6
   16e84:	uxtb	r5, r0
   16e88:	beq	16f94 <daemon@@Base+0x15f4>
   16e8c:	cmp	r5, #0
   16e90:	lslne	r9, r5, #2
   16e94:	movne	r8, r5
   16e98:	beq	16f78 <daemon@@Base+0x15d8>
   16e9c:	bl	118c4 <__ctype_tolower_loc@plt>
   16ea0:	ldr	r3, [r0]
   16ea4:	ldr	r4, [r3, r4]
   16ea8:	ldr	r3, [r3, r9]
   16eac:	subs	r4, r4, r3
   16eb0:	bne	16d34 <daemon@@Base+0x1394>
   16eb4:	subs	r4, r8, r7
   16eb8:	bne	16d34 <daemon@@Base+0x1394>
   16ebc:	adds	r4, r5, #0
   16ec0:	movne	r4, #1
   16ec4:	cmp	r6, #0
   16ec8:	rsbeq	r4, r4, #0
   16ecc:	rsbne	r4, r4, #1
   16ed0:	cmp	r4, #0
   16ed4:	bne	16d34 <daemon@@Base+0x1394>
   16ed8:	cmp	r6, #0
   16edc:	bne	16d34 <daemon@@Base+0x1394>
   16ee0:	ldm	sp, {r0, r1}
   16ee4:	adds	r4, r1, #0
   16ee8:	movne	r4, #1
   16eec:	cmp	r0, #0
   16ef0:	rsbeq	r4, r4, #0
   16ef4:	rsbne	r4, r4, #1
   16ef8:	cmp	r4, #0
   16efc:	bne	16d34 <daemon@@Base+0x1394>
   16f00:	cmp	r0, #0
   16f04:	beq	16d34 <daemon@@Base+0x1394>
   16f08:	bl	11804 <strcasecmp@plt>
   16f0c:	mov	r4, r0
   16f10:	b	16d34 <daemon@@Base+0x1394>
   16f14:	mov	r1, ip
   16f18:	bge	16d40 <daemon@@Base+0x13a0>
   16f1c:	ldr	r1, [r1, #12]
   16f20:	ldr	r3, [r1, #20]
   16f24:	cmp	r0, r3
   16f28:	blt	16f1c <daemon@@Base+0x157c>
   16f2c:	mov	r0, lr
   16f30:	bl	16bcc <daemon@@Base+0x122c>
   16f34:	subs	r4, r0, #0
   16f38:	mvneq	r4, #0
   16f3c:	b	16d34 <daemon@@Base+0x1394>
   16f40:	ldr	ip, [r1, #16]
   16f44:	ldr	r4, [r0, #12]
   16f48:	cmp	ip, #0
   16f4c:	movne	r2, ip
   16f50:	bne	16ca4 <daemon@@Base+0x1304>
   16f54:	ldr	r3, [r1, #12]
   16f58:	b	16cb4 <daemon@@Base+0x1314>
   16f5c:	ldr	r2, [r5, #4]
   16f60:	str	r1, [sp]
   16f64:	cmp	r2, #0
   16f68:	ldr	r3, [r5]
   16f6c:	beq	16fd4 <daemon@@Base+0x1634>
   16f70:	mov	ip, #1
   16f74:	b	16dc4 <daemon@@Base+0x1424>
   16f78:	ldr	r3, [sp, #4]
   16f7c:	cmp	r3, #0
   16f80:	moveq	r9, r5
   16f84:	ldrbne	r8, [r3]
   16f88:	moveq	r8, r5
   16f8c:	lslne	r9, r8, #2
   16f90:	b	16e9c <daemon@@Base+0x14fc>
   16f94:	ldr	r3, [sp]
   16f98:	cmp	r3, #0
   16f9c:	moveq	r4, r6
   16fa0:	ldrbne	r7, [r3]
   16fa4:	moveq	r7, r6
   16fa8:	lslne	r4, r7, #2
   16fac:	b	16e8c <daemon@@Base+0x14ec>
   16fb0:	ldr	r3, [r3, #12]
   16fb4:	tst	r3, #8
   16fb8:	bne	16fe0 <daemon@@Base+0x1640>
   16fbc:	mov	r4, #1
   16fc0:	b	16d34 <daemon@@Base+0x1394>
   16fc4:	ldr	r3, [r5]
   16fc8:	b	16e14 <daemon@@Base+0x1474>
   16fcc:	str	r2, [sp, #4]
   16fd0:	b	16e44 <daemon@@Base+0x14a4>
   16fd4:	mov	r1, r2
   16fd8:	mov	ip, #1
   16fdc:	b	16df0 <daemon@@Base+0x1450>
   16fe0:	ldr	r3, [sp, #4]
   16fe4:	mov	r4, #1
   16fe8:	cmp	r3, #0
   16fec:	bne	16e2c <daemon@@Base+0x148c>
   16ff0:	b	16d34 <daemon@@Base+0x1394>
   16ff4:	andeq	r6, r1, r8, lsl #1
   16ff8:	ldr	r3, [r0, #28]
   16ffc:	ldr	r2, [r0, #24]
   17000:	push	{r4, r5, r6, lr}
   17004:	mov	r5, r1
   17008:	ldr	r1, [r0, #16]
   1700c:	sub	r2, r3, r2
   17010:	cmp	r2, r1
   17014:	mov	r4, r0
   17018:	movls	r2, r3
   1701c:	bhi	17078 <daemon@@Base+0x16d8>
   17020:	ldr	r1, [r4, #20]
   17024:	ldr	r0, [r4, #8]
   17028:	cmp	r1, #0
   1702c:	addge	r5, r5, r1
   17030:	cmp	r5, r0
   17034:	bcc	17058 <daemon@@Base+0x16b8>
   17038:	ldr	r1, [r4, #32]
   1703c:	cmp	r1, r3
   17040:	bls	17088 <daemon@@Base+0x16e8>
   17044:	add	r1, r2, #1
   17048:	mov	r3, #10
   1704c:	str	r1, [r4, #28]
   17050:	strb	r3, [r2]
   17054:	pop	{r4, r5, r6, pc}
   17058:	ldr	r2, [r4, #32]
   1705c:	cmp	r2, r3
   17060:	bls	170a4 <daemon@@Base+0x1704>
   17064:	add	r1, r3, #1
   17068:	mov	r2, #32
   1706c:	str	r1, [r4, #28]
   17070:	strb	r2, [r3]
   17074:	pop	{r4, r5, r6, pc}
   17078:	bl	1b6ac <argp_parse@@Base+0x1e7c>
   1707c:	ldr	r3, [r4, #28]
   17080:	mov	r2, r3
   17084:	b	17020 <daemon@@Base+0x1680>
   17088:	mov	r1, #1
   1708c:	mov	r0, r4
   17090:	bl	1bd3c <argp_parse@@Base+0x250c>
   17094:	cmp	r0, #0
   17098:	popeq	{r4, r5, r6, pc}
   1709c:	ldr	r2, [r4, #28]
   170a0:	b	17044 <daemon@@Base+0x16a4>
   170a4:	mov	r1, #1
   170a8:	mov	r0, r4
   170ac:	bl	1bd3c <argp_parse@@Base+0x250c>
   170b0:	cmp	r0, #0
   170b4:	popeq	{r4, r5, r6, pc}
   170b8:	ldr	r3, [r4, #28]
   170bc:	b	17064 <daemon@@Base+0x16c4>
   170c0:	push	{r4, r5, r6, lr}
   170c4:	ldr	r5, [r0, #8]
   170c8:	ldr	r2, [r0, #12]
   170cc:	ldr	ip, [r1, #12]
   170d0:	cmp	r5, #0
   170d4:	orr	r2, r2, ip
   170d8:	beq	17140 <daemon@@Base+0x17a0>
   170dc:	tst	r2, #16
   170e0:	bne	1711c <daemon@@Base+0x177c>
   170e4:	tst	r2, #1
   170e8:	mov	r6, r3
   170ec:	mov	r4, r0
   170f0:	bne	17124 <daemon@@Base+0x1784>
   170f4:	mov	r0, r5
   170f8:	bl	11918 <strlen@plt>
   170fc:	add	r1, r0, #6
   17100:	mov	r0, r6
   17104:	bl	16ff8 <daemon@@Base+0x1658>
   17108:	mov	r3, r5
   1710c:	ldr	r2, [r4, #4]
   17110:	mov	r0, r6
   17114:	ldr	r1, [pc, #56]	; 17154 <daemon@@Base+0x17b4>
   17118:	bl	1bd5c <argp_parse@@Base+0x252c>
   1711c:	mov	r0, #0
   17120:	pop	{r4, r5, r6, pc}
   17124:	ldr	r2, [r0, #4]
   17128:	mov	r3, r5
   1712c:	mov	r0, r6
   17130:	ldr	r1, [pc, #32]	; 17158 <daemon@@Base+0x17b8>
   17134:	bl	1bd5c <argp_parse@@Base+0x252c>
   17138:	mov	r0, #0
   1713c:	pop	{r4, r5, r6, pc}
   17140:	ldr	r5, [r1, #8]
   17144:	cmp	r5, #0
   17148:	bne	170dc <daemon@@Base+0x173c>
   1714c:	mov	r0, #0
   17150:	pop	{r4, r5, r6, pc}
   17154:	andeq	lr, r1, r4, lsl #1
   17158:	andeq	lr, r1, r8, ror r0
   1715c:	mov	ip, r0
   17160:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17164:	mov	r8, r2
   17168:	sub	sp, sp, #28
   1716c:	mov	r2, ip
   17170:	ldr	ip, [ip, #16]
   17174:	mov	r9, r1
   17178:	ldr	r1, [r0, #8]
   1717c:	str	ip, [sp, #8]
   17180:	ldr	ip, [r8]
   17184:	str	r1, [sp, #16]
   17188:	mov	r0, r1
   1718c:	mov	r4, r3
   17190:	ldr	r1, [pc, #456]	; 17360 <daemon@@Base+0x19c0>
   17194:	mov	r3, r9
   17198:	mov	r5, ip
   1719c:	str	ip, [sp, #20]
   171a0:	ldr	r6, [sp, #64]	; 0x40
   171a4:	bl	16224 <daemon@@Base+0x884>
   171a8:	subs	r3, r0, #0
   171ac:	str	r3, [sp, #12]
   171b0:	beq	1730c <daemon@@Base+0x196c>
   171b4:	mov	r1, #10
   171b8:	bl	116fc <strchrnul@plt>
   171bc:	ldrb	sl, [r0]
   171c0:	mov	r7, r0
   171c4:	cmp	sl, #0
   171c8:	bne	172c8 <daemon@@Base+0x1928>
   171cc:	ldr	r5, [sp, #12]
   171d0:	add	r1, r7, #1
   171d4:	sub	r1, r1, r5
   171d8:	mov	r0, r6
   171dc:	bl	16ff8 <daemon@@Base+0x1658>
   171e0:	ldr	r0, [r6, #28]
   171e4:	sub	fp, r7, r5
   171e8:	ldr	r1, [r6, #32]
   171ec:	add	r2, r0, fp
   171f0:	cmp	r1, r2
   171f4:	bcs	17210 <daemon@@Base+0x1870>
   171f8:	mov	r1, fp
   171fc:	mov	r0, r6
   17200:	bl	1bd3c <argp_parse@@Base+0x250c>
   17204:	cmp	r0, #0
   17208:	beq	17228 <daemon@@Base+0x1888>
   1720c:	ldr	r0, [r6, #28]
   17210:	mov	r2, fp
   17214:	mov	r1, r5
   17218:	bl	11744 <memcpy@plt>
   1721c:	ldr	r3, [r6, #28]
   17220:	add	fp, r3, fp
   17224:	str	fp, [r6, #28]
   17228:	ldr	r3, [sp, #16]
   1722c:	ldr	r2, [sp, #12]
   17230:	cmp	r3, r2
   17234:	beq	17240 <daemon@@Base+0x18a0>
   17238:	mov	r0, r2
   1723c:	bl	1a89c <argp_parse@@Base+0x106c>
   17240:	ldr	r3, [sp, #8]
   17244:	cmp	r3, #0
   17248:	beq	1728c <daemon@@Base+0x18ec>
   1724c:	ldr	r2, [r3]
   17250:	cmp	r2, #0
   17254:	beq	1728c <daemon@@Base+0x18ec>
   17258:	ldr	r5, [sp, #8]
   1725c:	mov	r3, r4
   17260:	mov	r0, r2
   17264:	str	r6, [sp]
   17268:	mov	r2, r8
   1726c:	mov	r1, r9
   17270:	bl	1715c <daemon@@Base+0x17bc>
   17274:	ldr	r2, [r5, #16]!
   17278:	cmp	r2, #0
   1727c:	clz	r3, r0
   17280:	lsr	r3, r3, #5
   17284:	bne	17260 <daemon@@Base+0x18c0>
   17288:	mov	r4, r3
   1728c:	cmp	r4, #0
   17290:	moveq	sl, #0
   17294:	andne	sl, sl, #1
   17298:	cmp	sl, #0
   1729c:	beq	1732c <daemon@@Base+0x198c>
   172a0:	ldrb	r0, [r7]
   172a4:	cmp	r0, #0
   172a8:	bne	1733c <daemon@@Base+0x199c>
   172ac:	ldr	r3, [sp, #20]
   172b0:	ldrb	r4, [r3]
   172b4:	cmp	r4, #0
   172b8:	moveq	r0, r4
   172bc:	strbne	r0, [r3]
   172c0:	add	sp, sp, #28
   172c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   172c8:	ldrb	sl, [r5]
   172cc:	cmp	sl, #0
   172d0:	beq	17358 <daemon@@Base+0x19b8>
   172d4:	mov	fp, #0
   172d8:	add	r5, r0, #1
   172dc:	add	fp, fp, #1
   172e0:	mov	r0, r5
   172e4:	mov	r1, #10
   172e8:	bl	116fc <strchrnul@plt>
   172ec:	cmp	fp, sl
   172f0:	bne	172d8 <daemon@@Base+0x1938>
   172f4:	mov	r7, r0
   172f8:	ldr	r2, [r8]
   172fc:	mov	sl, #1
   17300:	add	r2, r2, sl
   17304:	str	r2, [r8]
   17308:	b	171d0 <daemon@@Base+0x1830>
   1730c:	ldr	r3, [sp, #8]
   17310:	cmp	r3, #0
   17314:	beq	1732c <daemon@@Base+0x198c>
   17318:	ldr	r2, [r3]
   1731c:	cmp	r2, #0
   17320:	ldrne	r7, [sp, #12]
   17324:	movne	sl, r7
   17328:	bne	17258 <daemon@@Base+0x18b8>
   1732c:	clz	r0, r4
   17330:	lsr	r0, r0, #5
   17334:	add	sp, sp, #28
   17338:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1733c:	ldr	r2, [sp, #20]
   17340:	mov	r0, #1
   17344:	ldrb	r3, [r2]
   17348:	add	r3, r3, r0
   1734c:	strb	r3, [r2]
   17350:	add	sp, sp, #28
   17354:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17358:	ldr	r5, [sp, #12]
   1735c:	b	172f8 <daemon@@Base+0x1958>
   17360:	andeq	r0, r0, #6
   17364:	ldr	r2, [r0, #8]
   17368:	cmp	r2, #0
   1736c:	beq	17378 <daemon@@Base+0x19d8>
   17370:	mov	r0, #0
   17374:	bx	lr
   17378:	ldr	r2, [r1, #8]
   1737c:	cmp	r2, #0
   17380:	bne	17370 <daemon@@Base+0x19d0>
   17384:	ldr	r1, [r1, #12]
   17388:	ldr	r2, [r0, #12]
   1738c:	orr	r2, r2, r1
   17390:	tst	r2, #16
   17394:	ldreq	r2, [r3]
   17398:	ldreq	r1, [r0, #4]
   1739c:	addeq	r0, r2, #1
   173a0:	streq	r0, [r3]
   173a4:	strbeq	r1, [r2]
   173a8:	b	17370 <daemon@@Base+0x19d0>
   173ac:	mov	r3, r0
   173b0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   173b4:	sub	sp, sp, #52	; 0x34
   173b8:	ldr	r2, [r3, #16]
   173bc:	str	r0, [sp, #24]
   173c0:	mov	r0, #16
   173c4:	ldr	r4, [r3]
   173c8:	str	r1, [sp, #28]
   173cc:	str	r2, [sp, #8]
   173d0:	bl	1b5a8 <argp_parse@@Base+0x1d78>
   173d4:	subs	r3, r0, #0
   173d8:	str	r3, [sp, #20]
   173dc:	beq	17a40 <daemon@@Base+0x20a0>
   173e0:	ldr	r2, [sp, #20]
   173e4:	mov	r3, #0
   173e8:	cmp	r4, #0
   173ec:	str	r3, [r2, #4]
   173f0:	str	r3, [r2, #12]
   173f4:	beq	175f8 <daemon@@Base+0x1c58>
   173f8:	ldr	r5, [r4, #12]
   173fc:	ands	r5, r5, #4
   17400:	bne	17a54 <daemon@@Base+0x20b4>
   17404:	add	r6, r4, #24
   17408:	mov	r9, r5
   1740c:	mov	sl, r5
   17410:	mov	fp, r2
   17414:	b	17458 <daemon@@Base+0x1ab8>
   17418:	ldr	r3, [r6, #-12]
   1741c:	tst	r3, #4
   17420:	addeq	r9, r9, #1
   17424:	streq	r9, [fp, #4]
   17428:	tst	r3, #8
   1742c:	bne	17454 <daemon@@Base+0x1ab4>
   17430:	sub	r3, r8, #1
   17434:	cmp	r3, #254	; 0xfe
   17438:	bhi	17454 <daemon@@Base+0x1ab4>
   1743c:	bl	118f4 <__ctype_b_loc@plt>
   17440:	lsl	r8, r8, #1
   17444:	ldr	r3, [r0]
   17448:	ldrh	r3, [r3, r8]
   1744c:	tst	r3, #16384	; 0x4000
   17450:	addne	sl, sl, #1
   17454:	add	r6, r6, #24
   17458:	ldr	r8, [r6, #-20]	; 0xffffffec
   1745c:	cmp	r8, #0
   17460:	bne	17418 <daemon@@Base+0x1a78>
   17464:	ldr	r3, [r6, #-24]	; 0xffffffe8
   17468:	cmp	r3, #0
   1746c:	bne	17418 <daemon@@Base+0x1a78>
   17470:	ldr	r3, [r6, #-8]
   17474:	cmp	r3, #0
   17478:	bne	17418 <daemon@@Base+0x1a78>
   1747c:	ldr	r7, [r6, #-4]
   17480:	cmp	r7, #0
   17484:	bne	17418 <daemon@@Base+0x1a78>
   17488:	rsb	r9, r9, r9, lsl #3
   1748c:	lsl	r0, r9, #2
   17490:	bl	1b5a8 <argp_parse@@Base+0x1d78>
   17494:	ldr	r6, [sp, #20]
   17498:	str	r0, [r6]
   1749c:	add	r0, sl, #1
   174a0:	bl	1b5a8 <argp_parse@@Base+0x1d78>
   174a4:	ldr	r8, [r6]
   174a8:	mov	r3, r6
   174ac:	cmp	r0, #0
   174b0:	cmpne	r8, #0
   174b4:	mov	sl, r0
   174b8:	str	r0, [r3, #8]
   174bc:	beq	17a04 <daemon@@Base+0x2064>
   174c0:	ldr	r2, [sp, #20]
   174c4:	ldr	r3, [pc, #1436]	; 17a68 <daemon@@Base+0x20c8>
   174c8:	ldr	r2, [r2, #4]
   174cc:	cmp	r2, r3
   174d0:	bhi	179f0 <daemon@@Base+0x2050>
   174d4:	add	r8, r8, #28
   174d8:	mov	r2, r8
   174dc:	ldr	r3, [r4, #4]
   174e0:	mov	r8, sl
   174e4:	mov	r9, r2
   174e8:	cmp	r3, #0
   174ec:	bne	174fc <daemon@@Base+0x1b5c>
   174f0:	ldr	r2, [r4]
   174f4:	cmp	r2, #0
   174f8:	beq	179a8 <daemon@@Base+0x2008>
   174fc:	str	r7, [r9, #-24]	; 0xffffffe8
   17500:	ldr	r6, [r4, #20]
   17504:	str	r4, [r9, #-28]	; 0xffffffe4
   17508:	cmp	r6, #0
   1750c:	str	sl, [r9, #-20]	; 0xffffffec
   17510:	bne	17528 <daemon@@Base+0x1b88>
   17514:	ldr	r2, [r4]
   17518:	cmp	r2, #0
   1751c:	cmpeq	r3, #0
   17520:	movne	r6, r5
   17524:	beq	179cc <daemon@@Base+0x202c>
   17528:	ldr	r1, [sp, #28]
   1752c:	str	r6, [r9, #-16]
   17530:	mov	r5, r4
   17534:	ldr	r2, [r4, #12]
   17538:	mov	r3, r7
   1753c:	str	r1, [r9, #-12]
   17540:	ldr	r1, [sp, #24]
   17544:	str	r1, [r9, #-8]
   17548:	add	r3, r3, #1
   1754c:	tst	r2, #8
   17550:	str	r3, [r9, #-24]	; 0xffffffe8
   17554:	bne	175c0 <daemon@@Base+0x1c20>
   17558:	ldr	fp, [r4, #4]
   1755c:	sub	r3, fp, #1
   17560:	cmp	r3, #254	; 0xfe
   17564:	bhi	175c0 <daemon@@Base+0x1c20>
   17568:	bl	118f4 <__ctype_b_loc@plt>
   1756c:	lsl	r3, fp, #1
   17570:	ldr	r2, [r0]
   17574:	ldrh	r3, [r2, r3]
   17578:	tst	r3, #16384	; 0x4000
   1757c:	beq	175c0 <daemon@@Base+0x1c20>
   17580:	cmp	r8, sl
   17584:	uxtb	r1, fp
   17588:	bcs	175b8 <daemon@@Base+0x1c18>
   1758c:	ldrb	r3, [r8]
   17590:	cmp	r3, r1
   17594:	movne	r3, r8
   17598:	subne	r0, sl, #1
   1759c:	bne	175b0 <daemon@@Base+0x1c10>
   175a0:	b	175c0 <daemon@@Base+0x1c20>
   175a4:	ldrb	r2, [r3, #1]!
   175a8:	cmp	r2, r1
   175ac:	beq	175c0 <daemon@@Base+0x1c20>
   175b0:	cmp	r0, r3
   175b4:	bne	175a4 <daemon@@Base+0x1c04>
   175b8:	strb	r1, [sl]
   175bc:	add	sl, sl, #1
   175c0:	ldr	r3, [r5, #28]
   175c4:	add	r4, r4, #24
   175c8:	cmp	r3, #0
   175cc:	bne	175dc <daemon@@Base+0x1c3c>
   175d0:	ldr	r2, [r5, #24]
   175d4:	cmp	r2, #0
   175d8:	beq	17984 <daemon@@Base+0x1fe4>
   175dc:	ldr	r2, [r5, #36]	; 0x24
   175e0:	tst	r2, #4
   175e4:	beq	1799c <daemon@@Base+0x1ffc>
   175e8:	ldr	r3, [r9, #-24]	; 0xffffffe8
   175ec:	mov	r5, r4
   175f0:	b	17548 <daemon@@Base+0x1ba8>
   175f4:	strb	r3, [sl]
   175f8:	ldr	r3, [sp, #8]
   175fc:	cmp	r3, #0
   17600:	beq	1773c <daemon@@Base+0x1d9c>
   17604:	ldr	r3, [r3]
   17608:	cmp	r3, #0
   1760c:	beq	1773c <daemon@@Base+0x1d9c>
   17610:	ldr	r3, [sp, #20]
   17614:	add	r3, r3, #12
   17618:	str	r3, [sp, #44]	; 0x2c
   1761c:	ldr	r3, [sp, #8]
   17620:	ldr	r5, [r3, #12]
   17624:	cmp	r5, #0
   17628:	ldrne	r6, [r3, #8]
   1762c:	bne	17640 <daemon@@Base+0x1ca0>
   17630:	ldr	r3, [sp, #8]
   17634:	ldr	r6, [r3, #8]
   17638:	cmp	r6, #0
   1763c:	beq	17964 <daemon@@Base+0x1fc4>
   17640:	ldr	r7, [sp, #24]
   17644:	ldr	r2, [sp, #8]
   17648:	mov	r0, #28
   1764c:	ldr	r3, [r7, #16]
   17650:	sub	r3, r2, r3
   17654:	asr	r4, r3, #4
   17658:	bl	1b5a8 <argp_parse@@Base+0x1d78>
   1765c:	subs	r1, r0, #0
   17660:	beq	176a0 <daemon@@Base+0x1d00>
   17664:	ldr	r3, [sp, #28]
   17668:	ldr	r0, [sp, #20]
   1766c:	cmp	r3, #0
   17670:	str	r3, [r1, #12]
   17674:	ldrne	r3, [r3, #20]
   17678:	ldr	r2, [r0, #12]
   1767c:	addne	r3, r3, #1
   17680:	moveq	r3, #0
   17684:	str	r5, [r1, #8]
   17688:	str	r6, [r1]
   1768c:	str	r4, [r1, #4]
   17690:	str	r7, [r1, #16]
   17694:	str	r3, [r1, #20]
   17698:	str	r2, [r1, #24]
   1769c:	str	r1, [r0, #12]
   176a0:	ldr	r3, [sp, #8]
   176a4:	ldr	r0, [r3]
   176a8:	bl	173ac <daemon@@Base+0x1a0c>
   176ac:	ldr	r3, [sp, #20]
   176b0:	ldr	r2, [r3, #12]
   176b4:	cmp	r2, #0
   176b8:	str	r0, [sp, #16]
   176bc:	bne	176c8 <daemon@@Base+0x1d28>
   176c0:	b	1796c <daemon@@Base+0x1fcc>
   176c4:	mov	r2, r3
   176c8:	ldr	r3, [r2, #24]
   176cc:	cmp	r3, #0
   176d0:	bne	176c4 <daemon@@Base+0x1d24>
   176d4:	add	r2, r2, #24
   176d8:	ldr	r0, [sp, #16]
   176dc:	mov	ip, r0
   176e0:	ldr	r3, [r0, #4]
   176e4:	ldr	r1, [r0, #12]
   176e8:	cmp	r3, #0
   176ec:	str	r1, [r2]
   176f0:	mov	r2, #0
   176f4:	str	r2, [r0, #12]
   176f8:	beq	17720 <daemon@@Base+0x1d80>
   176fc:	ldr	lr, [sp, #20]
   17700:	ldr	r2, [lr, #4]
   17704:	cmp	r2, #0
   17708:	bne	17748 <daemon@@Base+0x1da8>
   1770c:	ldr	r0, [r0]
   17710:	ldr	r1, [ip, #8]
   17714:	stm	lr, {r0, r3}
   17718:	str	r1, [lr, #8]
   1771c:	str	r2, [ip, #4]
   17720:	ldr	r0, [sp, #16]
   17724:	bl	16144 <daemon@@Base+0x7a4>
   17728:	ldr	r2, [sp, #8]
   1772c:	ldr	r3, [r2, #16]!
   17730:	cmp	r3, #0
   17734:	str	r2, [sp, #8]
   17738:	bne	1761c <daemon@@Base+0x1c7c>
   1773c:	ldr	r0, [sp, #20]
   17740:	add	sp, sp, #52	; 0x34
   17744:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17748:	add	r3, r3, r2
   1774c:	str	r3, [sp, #36]	; 0x24
   17750:	rsb	r0, r3, r3, lsl #3
   17754:	lsl	r0, r0, #2
   17758:	bl	1b5a8 <argp_parse@@Base+0x1d78>
   1775c:	ldr	r3, [sp, #20]
   17760:	mov	r4, r0
   17764:	str	r0, [sp, #32]
   17768:	ldr	r0, [r3, #8]
   1776c:	bl	11918 <strlen@plt>
   17770:	ldr	r3, [sp, #16]
   17774:	mov	r8, r0
   17778:	ldr	r0, [r3, #8]
   1777c:	bl	11918 <strlen@plt>
   17780:	add	r0, r8, r0
   17784:	add	r0, r0, #1
   17788:	bl	1b5a8 <argp_parse@@Base+0x1d78>
   1778c:	cmp	r4, #0
   17790:	cmpne	r0, #0
   17794:	mov	r7, r0
   17798:	beq	17a18 <daemon@@Base+0x2078>
   1779c:	ldr	r3, [sp, #36]	; 0x24
   177a0:	ldr	r2, [pc, #704]	; 17a68 <daemon@@Base+0x20c8>
   177a4:	cmp	r3, r2
   177a8:	bhi	17a2c <daemon@@Base+0x208c>
   177ac:	ldr	r5, [sp, #20]
   177b0:	ldr	r9, [sp, #32]
   177b4:	ldm	r5, {r3, r4}
   177b8:	mov	r0, r9
   177bc:	rsb	r6, r4, r4, lsl #3
   177c0:	mov	r1, r3
   177c4:	lsl	r6, r6, #2
   177c8:	mov	r2, r6
   177cc:	str	r3, [sp, #40]	; 0x28
   177d0:	bl	118dc <mempcpy@plt>
   177d4:	ldr	r3, [sp, #16]
   177d8:	ldr	r1, [r3, #4]
   177dc:	mov	ip, r1
   177e0:	str	r1, [sp, #4]
   177e4:	rsb	r2, ip, ip, lsl #3
   177e8:	ldr	r1, [r3]
   177ec:	lsl	r2, r2, #2
   177f0:	bl	11744 <memcpy@plt>
   177f4:	ldr	r5, [r5, #8]
   177f8:	mov	r2, r8
   177fc:	mov	r1, r5
   17800:	mov	r0, r7
   17804:	bl	11744 <memcpy@plt>
   17808:	cmp	r4, #0
   1780c:	beq	1797c <daemon@@Base+0x1fdc>
   17810:	mov	r2, r9
   17814:	ldr	r3, [r2, #8]
   17818:	subs	r4, r4, #1
   1781c:	sub	r3, r3, r5
   17820:	add	r3, r7, r3
   17824:	str	r3, [r2, #8]
   17828:	add	r2, r2, #28
   1782c:	bne	17814 <daemon@@Base+0x1e74>
   17830:	ldr	r3, [sp, #32]
   17834:	add	r1, r3, r6
   17838:	ldr	r3, [sp, #4]
   1783c:	ldr	r2, [sp, #16]
   17840:	cmp	r3, #0
   17844:	add	r3, r7, r8
   17848:	str	r3, [sp, #12]
   1784c:	ldr	sl, [r2, #8]
   17850:	beq	17974 <daemon@@Base+0x1fd4>
   17854:	sub	r8, r3, #1
   17858:	add	fp, r1, #28
   1785c:	mov	r9, r3
   17860:	mov	r3, r8
   17864:	mov	r8, fp
   17868:	mov	fp, sl
   1786c:	mov	sl, r3
   17870:	ldr	r5, [r8, #-24]	; 0xffffffe8
   17874:	str	r9, [r8, #-20]	; 0xffffffec
   17878:	cmp	r5, #0
   1787c:	ldr	r4, [r8, #-28]	; 0xffffffe4
   17880:	bne	17894 <daemon@@Base+0x1ef4>
   17884:	b	17920 <daemon@@Base+0x1f80>
   17888:	subs	r5, r5, #1
   1788c:	add	r4, r4, #24
   17890:	beq	17920 <daemon@@Base+0x1f80>
   17894:	ldr	r3, [r4, #12]
   17898:	tst	r3, #8
   1789c:	bne	17888 <daemon@@Base+0x1ee8>
   178a0:	ldr	r6, [r4, #4]
   178a4:	sub	r3, r6, #1
   178a8:	cmp	r3, #254	; 0xfe
   178ac:	bhi	17888 <daemon@@Base+0x1ee8>
   178b0:	bl	118f4 <__ctype_b_loc@plt>
   178b4:	lsl	r3, r6, #1
   178b8:	ldr	r2, [r0]
   178bc:	ldrh	r3, [r2, r3]
   178c0:	tst	r3, #16384	; 0x4000
   178c4:	beq	17888 <daemon@@Base+0x1ee8>
   178c8:	ldrb	r1, [fp]
   178cc:	cmp	r1, r6
   178d0:	bne	17888 <daemon@@Base+0x1ee8>
   178d4:	ldr	r3, [sp, #12]
   178d8:	cmp	r7, r3
   178dc:	bcs	17908 <daemon@@Base+0x1f68>
   178e0:	ldrb	r3, [r7]
   178e4:	cmp	r3, r1
   178e8:	movne	r3, r7
   178ec:	bne	17900 <daemon@@Base+0x1f60>
   178f0:	b	17910 <daemon@@Base+0x1f70>
   178f4:	ldrb	r2, [r3, #1]!
   178f8:	cmp	r2, r1
   178fc:	beq	17910 <daemon@@Base+0x1f70>
   17900:	cmp	sl, r3
   17904:	bne	178f4 <daemon@@Base+0x1f54>
   17908:	strb	r1, [r9]
   1790c:	add	r9, r9, #1
   17910:	subs	r5, r5, #1
   17914:	add	fp, fp, #1
   17918:	add	r4, r4, #24
   1791c:	bne	17894 <daemon@@Base+0x1ef4>
   17920:	ldr	r3, [sp, #4]
   17924:	add	r8, r8, #28
   17928:	subs	r3, r3, #1
   1792c:	str	r3, [sp, #4]
   17930:	bne	17870 <daemon@@Base+0x1ed0>
   17934:	mov	r3, #0
   17938:	strb	r3, [r9]
   1793c:	ldr	r0, [sp, #40]	; 0x28
   17940:	bl	1a89c <argp_parse@@Base+0x106c>
   17944:	ldr	r4, [sp, #20]
   17948:	ldr	r0, [r4, #8]
   1794c:	bl	1a89c <argp_parse@@Base+0x106c>
   17950:	ldr	r2, [sp, #32]
   17954:	str	r2, [r4]
   17958:	ldr	r2, [sp, #36]	; 0x24
   1795c:	stmib	r4, {r2, r7}
   17960:	b	17720 <daemon@@Base+0x1d80>
   17964:	ldr	r1, [sp, #28]
   17968:	b	176a0 <daemon@@Base+0x1d00>
   1796c:	ldr	r2, [sp, #44]	; 0x2c
   17970:	b	176d8 <daemon@@Base+0x1d38>
   17974:	ldr	r9, [sp, #12]
   17978:	b	17934 <daemon@@Base+0x1f94>
   1797c:	ldr	r1, [sp, #32]
   17980:	b	17838 <daemon@@Base+0x1e98>
   17984:	ldr	r2, [r5, #40]	; 0x28
   17988:	cmp	r2, #0
   1798c:	bne	175dc <daemon@@Base+0x1c3c>
   17990:	ldr	r2, [r5, #44]	; 0x2c
   17994:	cmp	r2, #0
   17998:	bne	175dc <daemon@@Base+0x1c3c>
   1799c:	add	r9, r9, #28
   179a0:	mov	r5, r6
   179a4:	b	174e8 <daemon@@Base+0x1b48>
   179a8:	ldr	r2, [r4, #16]
   179ac:	cmp	r2, #0
   179b0:	beq	179d4 <daemon@@Base+0x2034>
   179b4:	str	r3, [r9, #-24]	; 0xffffffe8
   179b8:	ldr	r6, [r4, #20]
   179bc:	str	r4, [r9, #-28]	; 0xffffffe4
   179c0:	cmp	r6, #0
   179c4:	str	sl, [r9, #-20]	; 0xffffffec
   179c8:	bne	17528 <daemon@@Base+0x1b88>
   179cc:	add	r6, r5, #1
   179d0:	b	17528 <daemon@@Base+0x1b88>
   179d4:	ldr	r6, [r4, #20]
   179d8:	cmp	r6, #0
   179dc:	beq	175f4 <daemon@@Base+0x1c54>
   179e0:	str	r4, [r9, #-28]	; 0xffffffe4
   179e4:	str	r3, [r9, #-24]	; 0xffffffe8
   179e8:	str	sl, [r9, #-20]	; 0xffffffec
   179ec:	b	17528 <daemon@@Base+0x1b88>
   179f0:	ldr	r3, [pc, #116]	; 17a6c <daemon@@Base+0x20cc>
   179f4:	mov	r2, #476	; 0x1dc
   179f8:	ldr	r1, [pc, #112]	; 17a70 <daemon@@Base+0x20d0>
   179fc:	ldr	r0, [pc, #112]	; 17a74 <daemon@@Base+0x20d4>
   17a00:	bl	11b10 <__assert_fail@plt>
   17a04:	ldr	r3, [pc, #96]	; 17a6c <daemon@@Base+0x20cc>
   17a08:	ldr	r2, [pc, #104]	; 17a78 <daemon@@Base+0x20d8>
   17a0c:	ldr	r1, [pc, #92]	; 17a70 <daemon@@Base+0x20d0>
   17a10:	ldr	r0, [pc, #100]	; 17a7c <daemon@@Base+0x20dc>
   17a14:	bl	11b10 <__assert_fail@plt>
   17a18:	ldr	r3, [pc, #96]	; 17a80 <daemon@@Base+0x20e0>
   17a1c:	ldr	r2, [pc, #96]	; 17a84 <daemon@@Base+0x20e4>
   17a20:	ldr	r1, [pc, #72]	; 17a70 <daemon@@Base+0x20d0>
   17a24:	ldr	r0, [pc, #92]	; 17a88 <daemon@@Base+0x20e8>
   17a28:	bl	11b10 <__assert_fail@plt>
   17a2c:	ldr	r3, [pc, #76]	; 17a80 <daemon@@Base+0x20e0>
   17a30:	mov	r2, #972	; 0x3cc
   17a34:	ldr	r1, [pc, #52]	; 17a70 <daemon@@Base+0x20d0>
   17a38:	ldr	r0, [pc, #76]	; 17a8c <daemon@@Base+0x20ec>
   17a3c:	bl	11b10 <__assert_fail@plt>
   17a40:	ldr	r3, [pc, #36]	; 17a6c <daemon@@Base+0x20cc>
   17a44:	ldr	r2, [pc, #68]	; 17a90 <daemon@@Base+0x20f0>
   17a48:	ldr	r1, [pc, #32]	; 17a70 <daemon@@Base+0x20d0>
   17a4c:	ldr	r0, [pc, #64]	; 17a94 <daemon@@Base+0x20f4>
   17a50:	bl	11b10 <__assert_fail@plt>
   17a54:	ldr	r3, [pc, #16]	; 17a6c <daemon@@Base+0x20cc>
   17a58:	mov	r2, #460	; 0x1cc
   17a5c:	ldr	r1, [pc, #12]	; 17a70 <daemon@@Base+0x20d0>
   17a60:	ldr	r0, [pc, #48]	; 17a98 <daemon@@Base+0x20f8>
   17a64:	bl	11b10 <__assert_fail@plt>
   17a68:	stmdbeq	r4!, {r0, r3, r6, r9, ip, pc}
   17a6c:	andeq	sp, r1, ip, asr #31
   17a70:	muleq	r1, r0, r0
   17a74:	ldrdeq	lr, [r1], -r4
   17a78:	ldrdeq	r0, [r0], -sl
   17a7c:	strheq	lr, [r1], -r0
   17a80:	ldrdeq	sp, [r1], -r8
   17a84:	andeq	r0, r0, sl, asr #7
   17a88:	andeq	lr, r1, r0, lsl r1
   17a8c:	andeq	lr, r1, ip, lsr #2
   17a90:	andeq	r0, r0, r2, asr #3
   17a94:	muleq	r1, ip, r0
   17a98:	andeq	lr, r1, r0, lsr #1
   17a9c:	cmp	r1, #0
   17aa0:	push	{r4, r5, r6, r7, r8, lr}
   17aa4:	beq	17b1c <daemon@@Base+0x217c>
   17aa8:	sub	r7, r1, #1
   17aac:	mov	r8, r2
   17ab0:	mov	r6, r0
   17ab4:	ldm	r6, {r4, r5}
   17ab8:	cmp	r5, #0
   17abc:	sub	r5, r5, #1
   17ac0:	beq	17b00 <daemon@@Base+0x2160>
   17ac4:	add	r4, r4, #24
   17ac8:	ldr	r3, [r4, #-24]	; 0xffffffe8
   17acc:	mov	r1, r8
   17ad0:	subs	r0, r3, #0
   17ad4:	sub	r5, r5, #1
   17ad8:	beq	17af4 <daemon@@Base+0x2154>
   17adc:	ldr	r3, [r4, #-12]
   17ae0:	tst	r3, #2
   17ae4:	bne	17af4 <daemon@@Base+0x2154>
   17ae8:	bl	11684 <strcmp@plt>
   17aec:	cmp	r0, #0
   17af0:	beq	17b14 <daemon@@Base+0x2174>
   17af4:	cmn	r5, #1
   17af8:	add	r4, r4, #24
   17afc:	bne	17ac8 <daemon@@Base+0x2128>
   17b00:	sub	r7, r7, #1
   17b04:	cmn	r7, #1
   17b08:	add	r6, r6, #28
   17b0c:	bne	17ab4 <daemon@@Base+0x2114>
   17b10:	mov	r6, #0
   17b14:	mov	r0, r6
   17b18:	pop	{r4, r5, r6, r7, r8, pc}
   17b1c:	mov	r6, r1
   17b20:	b	17b14 <daemon@@Base+0x2174>
   17b24:	push	{r4, r5, r6, lr}
   17b28:	subs	r4, r0, #0
   17b2c:	mov	r5, r1
   17b30:	beq	17b44 <daemon@@Base+0x21a4>
   17b34:	mov	r1, #10
   17b38:	bl	11930 <strchr@plt>
   17b3c:	adds	r4, r0, #0
   17b40:	movne	r4, #1
   17b44:	cmp	r5, #0
   17b48:	beq	17b74 <daemon@@Base+0x21d4>
   17b4c:	ldr	r3, [r5]
   17b50:	cmp	r3, #0
   17b54:	beq	17b74 <daemon@@Base+0x21d4>
   17b58:	ldr	r1, [r3, #16]
   17b5c:	ldr	r0, [r3, #8]
   17b60:	bl	17b24 <daemon@@Base+0x2184>
   17b64:	ldr	r3, [r5, #16]!
   17b68:	cmp	r3, #0
   17b6c:	add	r4, r4, r0
   17b70:	bne	17b58 <daemon@@Base+0x21b8>
   17b74:	mov	r0, r4
   17b78:	pop	{r4, r5, r6, pc}
   17b7c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17b80:	add	fp, sp, #32
   17b84:	sub	sp, sp, #12
   17b88:	ldr	r5, [r0, #4]
   17b8c:	cmp	r5, #0
   17b90:	bne	17b9c <daemon@@Base+0x21fc>
   17b94:	sub	sp, fp, #32
   17b98:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17b9c:	mov	r6, r0
   17ba0:	ldr	r0, [r0, #8]
   17ba4:	mov	r9, r1
   17ba8:	bl	11918 <strlen@plt>
   17bac:	ldr	r8, [pc, #360]	; 17d1c <daemon@@Base+0x237c>
   17bb0:	ldr	r4, [r6]
   17bb4:	sub	r7, fp, #36	; 0x24
   17bb8:	add	r3, r0, #15
   17bbc:	bic	r3, r3, #7
   17bc0:	sub	sp, sp, r3
   17bc4:	mov	sl, sp
   17bc8:	str	sp, [r7, #-4]!
   17bcc:	ldr	r2, [r4, #20]
   17bd0:	mov	r0, r4
   17bd4:	mov	r3, r7
   17bd8:	mov	r1, r8
   17bdc:	ldr	r2, [r2, #24]
   17be0:	bl	15f90 <daemon@@Base+0x5f0>
   17be4:	subs	r5, r5, #1
   17be8:	add	r4, r4, #28
   17bec:	bne	17bcc <daemon@@Base+0x222c>
   17bf0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   17bf4:	cmp	sl, r3
   17bf8:	bcc	17cfc <daemon@@Base+0x235c>
   17bfc:	ldm	r6, {r4, r5}
   17c00:	cmp	r5, #0
   17c04:	beq	17b94 <daemon@@Base+0x21f4>
   17c08:	ldr	r7, [pc, #272]	; 17d20 <daemon@@Base+0x2380>
   17c0c:	ldr	r2, [r4, #20]
   17c10:	mov	r0, r4
   17c14:	mov	r3, r9
   17c18:	mov	r1, r7
   17c1c:	ldr	r2, [r2, #24]
   17c20:	bl	15f90 <daemon@@Base+0x5f0>
   17c24:	subs	r5, r5, #1
   17c28:	add	r4, r4, #28
   17c2c:	bne	17c0c <daemon@@Base+0x226c>
   17c30:	ldm	r6, {r7, r8}
   17c34:	cmp	r8, #0
   17c38:	beq	17b94 <daemon@@Base+0x21f4>
   17c3c:	ldr	sl, [pc, #224]	; 17d24 <daemon@@Base+0x2384>
   17c40:	add	r7, r7, #28
   17c44:	ldr	r5, [r7, #-24]	; 0xffffffe8
   17c48:	ldr	r4, [r7, #-28]	; 0xffffffe4
   17c4c:	cmp	r5, #0
   17c50:	movne	r6, r4
   17c54:	bne	17c68 <daemon@@Base+0x22c8>
   17c58:	b	17cc4 <daemon@@Base+0x2324>
   17c5c:	subs	r5, r5, #1
   17c60:	add	r4, r4, #24
   17c64:	beq	17cc4 <daemon@@Base+0x2324>
   17c68:	ldr	r2, [r4]
   17c6c:	cmp	r2, #0
   17c70:	beq	17c5c <daemon@@Base+0x22bc>
   17c74:	ldr	r1, [r4, #12]
   17c78:	tst	r1, #4
   17c7c:	moveq	r6, r4
   17c80:	tst	r1, #2
   17c84:	bne	17c5c <daemon@@Base+0x22bc>
   17c88:	ldr	r3, [r4, #8]
   17c8c:	ldr	r0, [r6, #12]
   17c90:	cmp	r3, #0
   17c94:	orr	r1, r1, r0
   17c98:	beq	17cd8 <daemon@@Base+0x2338>
   17c9c:	tst	r1, #16
   17ca0:	bne	17c5c <daemon@@Base+0x22bc>
   17ca4:	tst	r1, #1
   17ca8:	moveq	r1, sl
   17cac:	ldrne	r1, [pc, #116]	; 17d28 <daemon@@Base+0x2388>
   17cb0:	mov	r0, r9
   17cb4:	bl	1bd5c <argp_parse@@Base+0x252c>
   17cb8:	subs	r5, r5, #1
   17cbc:	add	r4, r4, #24
   17cc0:	bne	17c68 <daemon@@Base+0x22c8>
   17cc4:	subs	r8, r8, #1
   17cc8:	add	r7, r7, #28
   17ccc:	bne	17c44 <daemon@@Base+0x22a4>
   17cd0:	sub	sp, fp, #32
   17cd4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17cd8:	tst	r1, #16
   17cdc:	bne	17c5c <daemon@@Base+0x22bc>
   17ce0:	ldr	r3, [r6, #8]
   17ce4:	cmp	r3, #0
   17ce8:	bne	17ca4 <daemon@@Base+0x2304>
   17cec:	ldr	r1, [pc, #56]	; 17d2c <daemon@@Base+0x238c>
   17cf0:	mov	r0, r9
   17cf4:	bl	1bd5c <argp_parse@@Base+0x252c>
   17cf8:	b	17c5c <daemon@@Base+0x22bc>
   17cfc:	add	r1, r3, #1
   17d00:	str	r1, [fp, #-40]	; 0xffffffd8
   17d04:	mov	r2, sl
   17d08:	ldr	r1, [pc, #32]	; 17d30 <daemon@@Base+0x2390>
   17d0c:	strb	r5, [r3]
   17d10:	mov	r0, r9
   17d14:	bl	1bd5c <argp_parse@@Base+0x252c>
   17d18:	b	17bfc <daemon@@Base+0x225c>
   17d1c:	andeq	r7, r1, r4, ror #6
   17d20:	andeq	r7, r1, r0, asr #1
   17d24:	andeq	lr, r1, r8, ror r1
   17d28:	andeq	lr, r1, r8, ror #2
   17d2c:	andeq	lr, r1, r4, lsl #3
   17d30:	andeq	lr, r1, r0, ror #2

00017d34 <argp_failure@@Base>:
   17d34:	push	{r3}		; (str r3, [sp, #-4]!)
   17d38:	push	{r4, r5, r6, r7, lr}
   17d3c:	subs	r5, r0, #0
   17d40:	sub	sp, sp, #200	; 0xc8
   17d44:	mov	r7, r1
   17d48:	mov	r6, r2
   17d4c:	beq	17e9c <argp_failure@@Base+0x168>
   17d50:	ldr	r3, [r5, #16]
   17d54:	tst	r3, #2
   17d58:	bne	17e8c <argp_failure@@Base+0x158>
   17d5c:	ldr	r4, [r5, #44]	; 0x2c
   17d60:	cmp	r4, #0
   17d64:	beq	17e8c <argp_failure@@Base+0x158>
   17d68:	mov	r0, r4
   17d6c:	bl	11a50 <flockfile@plt>
   17d70:	ldr	r0, [r5, #40]	; 0x28
   17d74:	mov	r1, r4
   17d78:	bl	11660 <fputs_unlocked@plt>
   17d7c:	ldr	r3, [sp, #220]	; 0xdc
   17d80:	cmp	r3, #0
   17d84:	beq	17de0 <argp_failure@@Base+0xac>
   17d88:	ldr	r3, [r4, #20]
   17d8c:	ldr	r1, [r4, #24]
   17d90:	add	r2, sp, #224	; 0xe0
   17d94:	cmp	r3, r1
   17d98:	str	r2, [sp]
   17d9c:	addcc	r1, r3, #1
   17da0:	movcc	r2, #58	; 0x3a
   17da4:	strcc	r1, [r4, #20]
   17da8:	strbcc	r2, [r3]
   17dac:	bcs	17ee8 <argp_failure@@Base+0x1b4>
   17db0:	ldr	r3, [r4, #20]
   17db4:	ldr	r2, [r4, #24]
   17db8:	cmp	r3, r2
   17dbc:	addcc	r1, r3, #1
   17dc0:	movcc	r2, #32
   17dc4:	strcc	r1, [r4, #20]
   17dc8:	strbcc	r2, [r3]
   17dcc:	bcs	17ed8 <argp_failure@@Base+0x1a4>
   17dd0:	ldr	r2, [sp]
   17dd4:	ldr	r1, [sp, #220]	; 0xdc
   17dd8:	mov	r0, r4
   17ddc:	bl	11a2c <vfprintf@plt>
   17de0:	cmp	r6, #0
   17de4:	beq	17e48 <argp_failure@@Base+0x114>
   17de8:	ldr	r3, [r4, #20]
   17dec:	ldr	r2, [r4, #24]
   17df0:	cmp	r3, r2
   17df4:	addcc	r1, r3, #1
   17df8:	movcc	r2, #58	; 0x3a
   17dfc:	strcc	r1, [r4, #20]
   17e00:	strbcc	r2, [r3]
   17e04:	bcs	17f08 <argp_failure@@Base+0x1d4>
   17e08:	ldr	r3, [r4, #20]
   17e0c:	ldr	r2, [r4, #24]
   17e10:	cmp	r3, r2
   17e14:	addcc	r1, r3, #1
   17e18:	movcc	r2, #32
   17e1c:	strcc	r1, [r4, #20]
   17e20:	strbcc	r2, [r3]
   17e24:	bcs	17ef8 <argp_failure@@Base+0x1c4>
   17e28:	mov	r2, #200	; 0xc8
   17e2c:	mov	r1, sp
   17e30:	mov	r0, r6
   17e34:	bl	11960 <strerror_r@plt>
   17e38:	cmp	r0, #0
   17e3c:	beq	17f18 <argp_failure@@Base+0x1e4>
   17e40:	mov	r1, r4
   17e44:	bl	11660 <fputs_unlocked@plt>
   17e48:	ldr	r3, [r4, #20]
   17e4c:	ldr	r2, [r4, #24]
   17e50:	cmp	r3, r2
   17e54:	addcc	r1, r3, #1
   17e58:	movcc	r2, #10
   17e5c:	strcc	r1, [r4, #20]
   17e60:	strbcc	r2, [r3]
   17e64:	bcs	17ec0 <argp_failure@@Base+0x18c>
   17e68:	mov	r0, r4
   17e6c:	bl	11810 <funlockfile@plt>
   17e70:	cmp	r7, #0
   17e74:	beq	17e8c <argp_failure@@Base+0x158>
   17e78:	cmp	r5, #0
   17e7c:	beq	17ed0 <argp_failure@@Base+0x19c>
   17e80:	ldr	r3, [r5, #16]
   17e84:	tst	r3, #32
   17e88:	beq	17ed0 <argp_failure@@Base+0x19c>
   17e8c:	add	sp, sp, #200	; 0xc8
   17e90:	pop	{r4, r5, r6, r7, lr}
   17e94:	add	sp, sp, #4
   17e98:	bx	lr
   17e9c:	ldr	r3, [pc, #140]	; 17f30 <argp_failure@@Base+0x1fc>
   17ea0:	ldr	r4, [r3]
   17ea4:	cmp	r4, #0
   17ea8:	beq	17e8c <argp_failure@@Base+0x158>
   17eac:	mov	r0, r4
   17eb0:	bl	11a50 <flockfile@plt>
   17eb4:	ldr	r3, [pc, #120]	; 17f34 <argp_failure@@Base+0x200>
   17eb8:	ldr	r0, [r3]
   17ebc:	b	17d74 <argp_failure@@Base+0x40>
   17ec0:	mov	r1, #10
   17ec4:	mov	r0, r4
   17ec8:	bl	119f0 <__overflow@plt>
   17ecc:	b	17e68 <argp_failure@@Base+0x134>
   17ed0:	mov	r0, r7
   17ed4:	bl	1190c <exit@plt>
   17ed8:	mov	r1, #32
   17edc:	mov	r0, r4
   17ee0:	bl	119f0 <__overflow@plt>
   17ee4:	b	17dd0 <argp_failure@@Base+0x9c>
   17ee8:	mov	r1, #58	; 0x3a
   17eec:	mov	r0, r4
   17ef0:	bl	119f0 <__overflow@plt>
   17ef4:	b	17db0 <argp_failure@@Base+0x7c>
   17ef8:	mov	r1, #32
   17efc:	mov	r0, r4
   17f00:	bl	119f0 <__overflow@plt>
   17f04:	b	17e28 <argp_failure@@Base+0xf4>
   17f08:	mov	r1, #58	; 0x3a
   17f0c:	mov	r0, r4
   17f10:	bl	119f0 <__overflow@plt>
   17f14:	b	17e08 <argp_failure@@Base+0xd4>
   17f18:	mov	r0, r6
   17f1c:	bl	118b8 <strerror@plt>
   17f20:	ldr	r3, [pc, #16]	; 17f38 <argp_failure@@Base+0x204>
   17f24:	cmp	r0, #0
   17f28:	moveq	r0, r3
   17f2c:	b	17e40 <argp_failure@@Base+0x10c>
   17f30:	andeq	pc, r2, r8, asr #11
   17f34:	andeq	pc, r2, r0, asr #11
   17f38:	andeq	lr, r1, ip, lsl #3
   17f3c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   17f40:	add	fp, sp, #32
   17f44:	cmp	r2, #0
   17f48:	sub	sp, sp, #116	; 0x74
   17f4c:	str	r2, [fp, #-132]	; 0xffffff7c
   17f50:	str	r0, [fp, #-112]	; 0xffffff90
   17f54:	str	r1, [fp, #-104]	; 0xffffff98
   17f58:	str	r3, [fp, #-96]	; 0xffffffa0
   17f5c:	beq	18014 <argp_failure@@Base+0x2e0>
   17f60:	ldr	sl, [pc, #4064]	; 18f48 <argp_failure@@Base+0x1214>
   17f64:	mov	r0, r2
   17f68:	bl	11a50 <flockfile@plt>
   17f6c:	ldr	r3, [sl, #36]	; 0x24
   17f70:	cmp	r3, #0
   17f74:	str	r3, [fp, #-108]	; 0xffffff94
   17f78:	beq	184c4 <argp_failure@@Base+0x790>
   17f7c:	mov	r3, #0
   17f80:	mov	r1, r3
   17f84:	ldr	r2, [sl, #32]
   17f88:	ldr	r0, [fp, #-132]	; 0xffffff7c
   17f8c:	bl	1b630 <argp_parse@@Base+0x1e00>
   17f90:	subs	r9, r0, #0
   17f94:	beq	19008 <argp_failure@@Base+0x12d4>
   17f98:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17f9c:	ands	r3, r3, #11
   17fa0:	streq	r3, [fp, #-136]	; 0xffffff78
   17fa4:	bne	18920 <argp_failure@@Base+0xbec>
   17fa8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17fac:	ands	r4, r3, #3
   17fb0:	bne	18714 <argp_failure@@Base+0x9e0>
   17fb4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17fb8:	tst	r3, #16
   17fbc:	bne	186f0 <argp_failure@@Base+0x9bc>
   17fc0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17fc4:	tst	r3, #4
   17fc8:	bne	186d4 <argp_failure@@Base+0x9a0>
   17fcc:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17fd0:	tst	r3, #8
   17fd4:	bne	18068 <argp_failure@@Base+0x334>
   17fd8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17fdc:	tst	r3, #32
   17fe0:	bne	1849c <argp_failure@@Base+0x768>
   17fe4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17fe8:	tst	r3, #64	; 0x40
   17fec:	bne	1801c <argp_failure@@Base+0x2e8>
   17ff0:	ldr	r0, [fp, #-132]	; 0xffffff7c
   17ff4:	bl	11810 <funlockfile@plt>
   17ff8:	ldr	r3, [fp, #-136]	; 0xffffff78
   17ffc:	cmp	r3, #0
   18000:	beq	1800c <argp_failure@@Base+0x2d8>
   18004:	mov	r0, r3
   18008:	bl	16144 <daemon@@Base+0x7a4>
   1800c:	mov	r0, r9
   18010:	bl	1bc1c <argp_parse@@Base+0x23ec>
   18014:	sub	sp, fp, #32
   18018:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1801c:	ldr	r5, [pc, #3880]	; 18f4c <argp_failure@@Base+0x1218>
   18020:	ldr	r2, [r5]
   18024:	cmp	r2, #0
   18028:	beq	17ff0 <argp_failure@@Base+0x2bc>
   1802c:	cmp	r4, #0
   18030:	beq	18058 <argp_failure@@Base+0x324>
   18034:	ldr	r3, [r9, #28]
   18038:	ldr	r2, [r9, #32]
   1803c:	cmp	r3, r2
   18040:	bcs	18fec <argp_failure@@Base+0x12b8>
   18044:	add	r1, r3, #1
   18048:	mov	r2, #10
   1804c:	str	r1, [r9, #28]
   18050:	strb	r2, [r3]
   18054:	ldr	r2, [r5]
   18058:	ldr	r1, [pc, #3824]	; 18f50 <argp_failure@@Base+0x121c>
   1805c:	mov	r0, r9
   18060:	bl	1bd5c <argp_parse@@Base+0x252c>
   18064:	b	17ff0 <argp_failure@@Base+0x2bc>
   18068:	ldr	r3, [fp, #-136]	; 0xffffff78
   1806c:	ldr	r3, [r3, #4]
   18070:	cmp	r3, #0
   18074:	str	r3, [fp, #-108]	; 0xffffff94
   18078:	beq	17fd8 <argp_failure@@Base+0x2a4>
   1807c:	cmp	r4, #0
   18080:	beq	18e9c <argp_failure@@Base+0x1168>
   18084:	ldr	r3, [r9, #28]
   18088:	ldr	r2, [r9, #32]
   1808c:	cmp	r3, r2
   18090:	bcs	19040 <argp_failure@@Base+0x130c>
   18094:	add	r1, r3, #1
   18098:	mov	r2, #10
   1809c:	str	r1, [r9, #28]
   180a0:	strb	r2, [r3]
   180a4:	ldr	r3, [fp, #-136]	; 0xffffff78
   180a8:	ldr	r2, [fp, #-136]	; 0xffffff78
   180ac:	ldr	r3, [r3, #4]
   180b0:	ldr	r8, [r2]
   180b4:	str	r3, [fp, #-108]	; 0xffffff94
   180b8:	ldr	r3, [fp, #-108]	; 0xffffff94
   180bc:	cmp	r3, #0
   180c0:	mov	r3, #0
   180c4:	str	r3, [fp, #-88]	; 0xffffffa8
   180c8:	str	r3, [fp, #-84]	; 0xffffffac
   180cc:	str	r3, [fp, #-80]	; 0xffffffb0
   180d0:	beq	1848c <argp_failure@@Base+0x758>
   180d4:	str	sl, [fp, #-100]	; 0xffffff9c
   180d8:	ldr	lr, [r9, #28]
   180dc:	ldr	r3, [r9, #24]
   180e0:	ldr	r5, [r9, #16]
   180e4:	sub	lr, lr, r3
   180e8:	cmp	lr, r5
   180ec:	ldr	r6, [r8]
   180f0:	ldr	sl, [r8, #8]
   180f4:	bhi	18bf4 <argp_failure@@Base+0xec0>
   180f8:	ldr	r1, [r9, #4]
   180fc:	ldr	r7, [r6, #12]
   18100:	str	r1, [fp, #-116]	; 0xffffff8c
   18104:	ldr	r1, [r9, #12]
   18108:	mov	r3, #0
   1810c:	str	r1, [fp, #-120]	; 0xffffff88
   18110:	sub	r1, fp, #88	; 0x58
   18114:	str	r3, [r9, #4]
   18118:	and	r2, r7, #8
   1811c:	str	r1, [fp, #-68]	; 0xffffffbc
   18120:	ldr	r1, [fp, #-104]	; 0xffffff98
   18124:	mov	r0, #1
   18128:	cmp	r2, r3
   1812c:	mov	r4, r2
   18130:	str	r0, [fp, #-64]	; 0xffffffc0
   18134:	str	r8, [fp, #-76]	; 0xffffffb4
   18138:	str	r9, [fp, #-72]	; 0xffffffb8
   1813c:	str	r1, [fp, #-60]	; 0xffffffc4
   18140:	bne	18a80 <argp_failure@@Base+0xd4c>
   18144:	ldr	ip, [r8, #4]
   18148:	cmp	ip, r3
   1814c:	beq	18178 <argp_failure@@Base+0x444>
   18150:	add	r0, r6, #24
   18154:	ldr	r3, [r0, #-24]	; 0xffffffe8
   18158:	cmp	r3, #0
   1815c:	beq	1816c <argp_failure@@Base+0x438>
   18160:	ldr	r3, [r0, #-12]
   18164:	tst	r3, #2
   18168:	beq	18a7c <argp_failure@@Base+0xd48>
   1816c:	subs	ip, ip, #1
   18170:	add	r0, r0, #24
   18174:	bne	18154 <argp_failure@@Base+0x420>
   18178:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1817c:	cmp	lr, r5
   18180:	str	r2, [fp, #-128]	; 0xffffff80
   18184:	ldr	r5, [r3, #8]
   18188:	bhi	18a94 <argp_failure@@Base+0xd60>
   1818c:	str	r5, [r9, #12]
   18190:	ldr	r5, [r8, #4]
   18194:	cmp	r5, #0
   18198:	beq	1821c <argp_failure@@Base+0x4e8>
   1819c:	mov	r4, r6
   181a0:	str	r8, [fp, #-124]	; 0xffffff84
   181a4:	b	181bc <argp_failure@@Base+0x488>
   181a8:	subs	r5, r5, #1
   181ac:	add	r4, r4, #24
   181b0:	beq	18210 <argp_failure@@Base+0x4dc>
   181b4:	ldr	r7, [r4, #12]
   181b8:	and	r2, r7, #8
   181bc:	cmp	r2, #0
   181c0:	bne	181a8 <argp_failure@@Base+0x474>
   181c4:	ldr	r8, [r4, #4]
   181c8:	sub	r2, r8, #1
   181cc:	cmp	r2, #254	; 0xfe
   181d0:	bhi	181a8 <argp_failure@@Base+0x474>
   181d4:	bl	118f4 <__ctype_b_loc@plt>
   181d8:	lsl	r2, r8, #1
   181dc:	ldr	r1, [r0]
   181e0:	ldrh	r2, [r1, r2]
   181e4:	tst	r2, #16384	; 0x4000
   181e8:	beq	181a8 <argp_failure@@Base+0x474>
   181ec:	ldrb	r2, [sl]
   181f0:	cmp	r8, r2
   181f4:	bne	181a8 <argp_failure@@Base+0x474>
   181f8:	tst	r7, #2
   181fc:	beq	18b40 <argp_failure@@Base+0xe0c>
   18200:	subs	r5, r5, #1
   18204:	add	sl, sl, #1
   18208:	add	r4, r4, #24
   1820c:	bne	181b4 <argp_failure@@Base+0x480>
   18210:	ldr	r4, [r6, #12]
   18214:	ldr	r8, [fp, #-124]	; 0xffffff84
   18218:	and	r4, r4, #8
   1821c:	ldr	r3, [r9, #28]
   18220:	ldr	r1, [r9, #24]
   18224:	cmp	r4, #0
   18228:	ldr	r2, [r9, #16]
   1822c:	sub	r3, r3, r1
   18230:	beq	18aac <argp_failure@@Base+0xd78>
   18234:	cmp	r3, r2
   18238:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1823c:	ldr	r4, [r3, #16]
   18240:	bhi	18d74 <argp_failure@@Base+0x1040>
   18244:	str	r4, [r9, #12]
   18248:	ldr	r5, [r8, #4]
   1824c:	cmp	r5, #0
   18250:	addne	r4, r6, #24
   18254:	bne	18268 <argp_failure@@Base+0x534>
   18258:	b	182f8 <argp_failure@@Base+0x5c4>
   1825c:	subs	r5, r5, #1
   18260:	add	r4, r4, #24
   18264:	beq	182f8 <argp_failure@@Base+0x5c4>
   18268:	ldr	r3, [r4, #-24]	; 0xffffffe8
   1826c:	cmp	r3, #0
   18270:	beq	1825c <argp_failure@@Base+0x528>
   18274:	ldr	r3, [r4, #-12]
   18278:	tst	r3, #2
   1827c:	bne	1825c <argp_failure@@Base+0x528>
   18280:	ldr	r3, [fp, #-100]	; 0xffffff9c
   18284:	sub	r1, fp, #76	; 0x4c
   18288:	ldr	r0, [r3, #16]
   1828c:	bl	16474 <daemon@@Base+0xad4>
   18290:	ldr	sl, [r4, #-24]	; 0xffffffe8
   18294:	mov	r0, sl
   18298:	bl	11918 <strlen@plt>
   1829c:	subs	r7, r0, #0
   182a0:	beq	1825c <argp_failure@@Base+0x528>
   182a4:	ldr	r2, [r9, #28]
   182a8:	ldr	lr, [r9, #32]
   182ac:	add	ip, r2, r7
   182b0:	cmp	lr, ip
   182b4:	mov	r1, r7
   182b8:	mov	r0, r9
   182bc:	bcs	182d0 <argp_failure@@Base+0x59c>
   182c0:	bl	1bd3c <argp_parse@@Base+0x250c>
   182c4:	cmp	r0, #0
   182c8:	beq	1825c <argp_failure@@Base+0x528>
   182cc:	ldr	r2, [r9, #28]
   182d0:	mov	r0, r2
   182d4:	mov	r1, sl
   182d8:	mov	r2, r7
   182dc:	bl	11744 <memcpy@plt>
   182e0:	ldr	r2, [r9, #28]
   182e4:	subs	r5, r5, #1
   182e8:	add	r3, r2, r7
   182ec:	str	r3, [r9, #28]
   182f0:	add	r4, r4, #24
   182f4:	bne	18268 <argp_failure@@Base+0x534>
   182f8:	ldr	r3, [r9, #28]
   182fc:	ldr	r1, [r9, #24]
   18300:	ldr	r2, [r9, #16]
   18304:	sub	r3, r3, r1
   18308:	cmp	r3, r2
   1830c:	bhi	18d28 <argp_failure@@Base+0xff4>
   18310:	ldr	r2, [fp, #-64]	; 0xffffffc0
   18314:	mov	r3, #0
   18318:	cmp	r2, r3
   1831c:	str	r3, [r9, #4]
   18320:	beq	18c10 <argp_failure@@Base+0xedc>
   18324:	ldr	r3, [r6, #12]
   18328:	tst	r3, #8
   1832c:	bne	18358 <argp_failure@@Base+0x624>
   18330:	ldr	r4, [r6, #4]
   18334:	sub	r3, r4, #1
   18338:	cmp	r3, #254	; 0xfe
   1833c:	bhi	18358 <argp_failure@@Base+0x624>
   18340:	bl	118f4 <__ctype_b_loc@plt>
   18344:	lsl	r4, r4, #1
   18348:	ldr	r3, [r0]
   1834c:	ldrh	r3, [r3, r4]
   18350:	tst	r3, #16384	; 0x4000
   18354:	bne	18364 <argp_failure@@Base+0x630>
   18358:	ldr	r3, [r6]
   1835c:	cmp	r3, #0
   18360:	beq	18fd8 <argp_failure@@Base+0x12a4>
   18364:	ldr	r3, [r9, #28]
   18368:	ldr	r1, [r9, #24]
   1836c:	ldr	r2, [r9, #16]
   18370:	sub	r3, r3, r1
   18374:	cmp	r3, r2
   18378:	bhi	18bc0 <argp_failure@@Base+0xe8c>
   1837c:	ldr	r3, [fp, #-116]	; 0xffffff8c
   18380:	str	r3, [r9, #4]
   18384:	ldr	r3, [fp, #-108]	; 0xffffff94
   18388:	add	r8, r8, #28
   1838c:	subs	r3, r3, #1
   18390:	str	r3, [fp, #-108]	; 0xffffff94
   18394:	ldr	r3, [fp, #-120]	; 0xffffff88
   18398:	str	r3, [r9, #12]
   1839c:	bne	180d8 <argp_failure@@Base+0x3a4>
   183a0:	ldr	r3, [fp, #-80]	; 0xffffffb0
   183a4:	ldr	sl, [fp, #-100]	; 0xffffff9c
   183a8:	cmp	r3, #0
   183ac:	beq	1848c <argp_failure@@Base+0x758>
   183b0:	ldr	r3, [sl, #4]
   183b4:	cmp	r3, #0
   183b8:	beq	1848c <argp_failure@@Base+0x758>
   183bc:	ldr	r3, [fp, #-104]	; 0xffffff98
   183c0:	ldr	r1, [pc, #2956]	; 18f54 <argp_failure@@Base+0x1220>
   183c4:	cmp	r3, #0
   183c8:	ldr	r0, [pc, #2952]	; 18f58 <argp_failure@@Base+0x1224>
   183cc:	ldrne	r2, [r3]
   183d0:	ldreq	r2, [fp, #-104]	; 0xffffff98
   183d4:	ldr	r3, [fp, #-104]	; 0xffffff98
   183d8:	bl	16224 <daemon@@Base+0x884>
   183dc:	subs	r4, r0, #0
   183e0:	beq	1848c <argp_failure@@Base+0x758>
   183e4:	ldrb	r3, [r4]
   183e8:	cmp	r3, #0
   183ec:	beq	18480 <argp_failure@@Base+0x74c>
   183f0:	ldr	r3, [r9, #28]
   183f4:	ldr	r2, [r9, #32]
   183f8:	cmp	r3, r2
   183fc:	bcs	1909c <argp_failure@@Base+0x1368>
   18400:	add	r1, r3, #1
   18404:	mov	r2, #10
   18408:	str	r1, [r9, #28]
   1840c:	strb	r2, [r3]
   18410:	mov	r0, r4
   18414:	bl	11918 <strlen@plt>
   18418:	subs	r5, r0, #0
   1841c:	beq	19078 <argp_failure@@Base+0x1344>
   18420:	ldr	r0, [r9, #28]
   18424:	ldr	r2, [r9, #32]
   18428:	add	r3, r0, r5
   1842c:	cmp	r2, r3
   18430:	bcs	1844c <argp_failure@@Base+0x718>
   18434:	mov	r1, r5
   18438:	mov	r0, r9
   1843c:	bl	1bd3c <argp_parse@@Base+0x250c>
   18440:	cmp	r0, #0
   18444:	beq	19078 <argp_failure@@Base+0x1344>
   18448:	ldr	r0, [r9, #28]
   1844c:	mov	r2, r5
   18450:	mov	r1, r4
   18454:	bl	11744 <memcpy@plt>
   18458:	ldr	r3, [r9, #28]
   1845c:	add	r3, r3, r5
   18460:	str	r3, [r9, #28]
   18464:	ldr	r2, [r9, #32]
   18468:	cmp	r2, r3
   1846c:	bls	19080 <argp_failure@@Base+0x134c>
   18470:	add	r1, r3, #1
   18474:	mov	r2, #10
   18478:	str	r1, [r9, #28]
   1847c:	strb	r2, [r3]
   18480:	ldr	r3, [pc, #2768]	; 18f58 <argp_failure@@Base+0x1224>
   18484:	cmp	r4, r3
   18488:	bne	18fcc <argp_failure@@Base+0x1298>
   1848c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   18490:	mov	r4, #1
   18494:	tst	r3, #32
   18498:	beq	17fe4 <argp_failure@@Base+0x2b0>
   1849c:	mov	r3, #0
   184a0:	str	r3, [sp]
   184a4:	str	r9, [sp, #4]
   184a8:	mov	r3, r4
   184ac:	ldr	r1, [fp, #-104]	; 0xffffff98
   184b0:	ldr	r0, [fp, #-112]	; 0xffffff90
   184b4:	mov	r2, #1
   184b8:	bl	16620 <daemon@@Base+0xc80>
   184bc:	orr	r4, r4, r0
   184c0:	b	17fe4 <argp_failure@@Base+0x2b0>
   184c4:	ldr	r0, [pc, #2704]	; 18f5c <argp_failure@@Base+0x1228>
   184c8:	bl	11888 <getenv@plt>
   184cc:	mov	lr, sl
   184d0:	sub	r3, fp, #76	; 0x4c
   184d4:	mov	ip, r3
   184d8:	str	r3, [fp, #-100]	; 0xffffff9c
   184dc:	mov	r6, r0
   184e0:	ldm	lr!, {r0, r1, r2, r3}
   184e4:	cmp	r6, #0
   184e8:	stmia	ip!, {r0, r1, r2, r3}
   184ec:	ldm	lr!, {r0, r1, r2, r3}
   184f0:	stmia	ip!, {r0, r1, r2, r3}
   184f4:	ldm	lr, {r0, r1}
   184f8:	stm	ip, {r0, r1}
   184fc:	beq	17f7c <argp_failure@@Base+0x248>
   18500:	ldrb	r9, [r6]
   18504:	ldr	r8, [pc, #2644]	; 18f60 <argp_failure@@Base+0x122c>
   18508:	cmp	r9, #0
   1850c:	beq	18660 <argp_failure@@Base+0x92c>
   18510:	bl	118f4 <__ctype_b_loc@plt>
   18514:	mov	r5, r0
   18518:	ldr	r1, [r0]
   1851c:	b	18524 <argp_failure@@Base+0x7f0>
   18520:	ldrb	r9, [r6, #1]!
   18524:	lsl	r3, r9, #1
   18528:	ldrh	r3, [r1, r3]
   1852c:	tst	r3, #8192	; 0x2000
   18530:	bne	18520 <argp_failure@@Base+0x7ec>
   18534:	ands	r2, r3, #1024	; 0x400
   18538:	beq	18658 <argp_failure@@Base+0x924>
   1853c:	cmp	r9, #95	; 0x5f
   18540:	cmpne	r9, #45	; 0x2d
   18544:	lsl	r3, r3, #28
   18548:	moveq	r7, #1
   1854c:	movne	r7, #0
   18550:	orrs	r3, r7, r3, lsr #31
   18554:	beq	18e14 <argp_failure@@Base+0x10e0>
   18558:	mov	r4, r6
   1855c:	ldrb	r3, [r4, #1]!
   18560:	cmp	r3, #95	; 0x5f
   18564:	cmpne	r3, #45	; 0x2d
   18568:	lsl	r2, r3, #1
   1856c:	moveq	r0, #1
   18570:	ldrh	r2, [r1, r2]
   18574:	movne	r0, #0
   18578:	lsl	ip, r2, #28
   1857c:	orrs	r0, r0, ip, lsr #31
   18580:	bne	1855c <argp_failure@@Base+0x828>
   18584:	tst	r2, #8192	; 0x2000
   18588:	sub	r7, r4, r6
   1858c:	beq	185a4 <argp_failure@@Base+0x870>
   18590:	ldrb	r3, [r4, #1]!
   18594:	lsl	r2, r3, #1
   18598:	ldrh	r2, [r1, r2]
   1859c:	tst	r2, #8192	; 0x2000
   185a0:	bne	18590 <argp_failure@@Base+0x85c>
   185a4:	cmp	r3, #44	; 0x2c
   185a8:	cmpne	r3, #0
   185ac:	beq	186c0 <argp_failure@@Base+0x98c>
   185b0:	cmp	r3, #61	; 0x3d
   185b4:	beq	18a1c <argp_failure@@Base+0xce8>
   185b8:	ldrb	r3, [r4]
   185bc:	lsl	r3, r3, #1
   185c0:	ldrh	r3, [r1, r3]
   185c4:	tst	r3, #2048	; 0x800
   185c8:	bne	189bc <argp_failure@@Base+0xc88>
   185cc:	ldr	r3, [fp, #-108]	; 0xffffff94
   185d0:	mov	r9, r3
   185d4:	str	r3, [fp, #-116]	; 0xffffff8c
   185d8:	ldr	r5, [pc, #2436]	; 18f64 <argp_failure@@Base+0x1230>
   185dc:	b	185ec <argp_failure@@Base+0x8b8>
   185e0:	add	r5, r5, #16
   185e4:	cmp	r5, r8
   185e8:	beq	18e7c <argp_failure@@Base+0x1148>
   185ec:	mov	r0, r5
   185f0:	bl	11918 <strlen@plt>
   185f4:	cmp	r0, r7
   185f8:	bne	185e0 <argp_failure@@Base+0x8ac>
   185fc:	mov	r2, r7
   18600:	mov	r1, r5
   18604:	mov	r0, r6
   18608:	bl	11ad4 <strncmp@plt>
   1860c:	cmp	r0, #0
   18610:	bne	185e0 <argp_failure@@Base+0x8ac>
   18614:	cmp	r9, #0
   18618:	beq	18628 <argp_failure@@Base+0x8f4>
   1861c:	ldrb	r1, [r5, #14]
   18620:	cmp	r1, #0
   18624:	beq	1905c <argp_failure@@Base+0x1328>
   18628:	ldrb	r3, [r5, #15]
   1862c:	sub	r2, fp, #36	; 0x24
   18630:	add	r3, r2, r3
   18634:	ldr	r2, [fp, #-116]	; 0xffffff8c
   18638:	str	r2, [r3, #-40]	; 0xffffffd8
   1863c:	cmp	r5, r8
   18640:	beq	18e7c <argp_failure@@Base+0x1148>
   18644:	ldrb	r9, [r4]
   18648:	cmp	r9, #44	; 0x2c
   1864c:	beq	18d5c <argp_failure@@Base+0x1028>
   18650:	mov	r6, r4
   18654:	b	18508 <argp_failure@@Base+0x7d4>
   18658:	cmp	r9, #0
   1865c:	bne	18fb4 <argp_failure@@Base+0x1280>
   18660:	ldr	lr, [fp, #-44]	; 0xffffffd4
   18664:	ldr	r1, [pc, #2296]	; 18f64 <argp_failure@@Base+0x1230>
   18668:	add	r3, r1, #16
   1866c:	cmp	r3, r8
   18670:	mov	r1, r3
   18674:	beq	18db8 <argp_failure@@Base+0x1084>
   18678:	ldrb	r2, [r3, #14]
   1867c:	cmp	r2, #0
   18680:	bne	18668 <argp_failure@@Base+0x934>
   18684:	ldrb	r0, [r3, #15]
   18688:	sub	ip, fp, #36	; 0x24
   1868c:	cmp	r0, #32
   18690:	add	ip, ip, r0
   18694:	beq	18668 <argp_failure@@Base+0x934>
   18698:	ldr	r0, [ip, #-40]	; 0xffffffd8
   1869c:	cmp	r0, lr
   186a0:	blt	18668 <argp_failure@@Base+0x934>
   186a4:	ldr	r1, [pc, #2236]	; 18f68 <argp_failure@@Base+0x1234>
   186a8:	ldr	r0, [fp, #-104]	; 0xffffff98
   186ac:	stm	sp, {r1, r3}
   186b0:	ldr	r3, [pc, #2228]	; 18f6c <argp_failure@@Base+0x1238>
   186b4:	mov	r1, r2
   186b8:	bl	17d34 <argp_failure@@Base>
   186bc:	b	17f7c <argp_failure@@Base+0x248>
   186c0:	cmp	r9, #110	; 0x6e
   186c4:	beq	18a4c <argp_failure@@Base+0xd18>
   186c8:	mov	r9, #1
   186cc:	str	r9, [fp, #-116]	; 0xffffff8c
   186d0:	b	185d8 <argp_failure@@Base+0x8a4>
   186d4:	ldr	r3, [fp, #4]
   186d8:	ldr	r1, [pc, #2192]	; 18f70 <argp_failure@@Base+0x123c>
   186dc:	mov	r2, r3
   186e0:	mov	r0, r9
   186e4:	bl	1bd5c <argp_parse@@Base+0x252c>
   186e8:	mov	r4, #1
   186ec:	b	17fcc <argp_failure@@Base+0x298>
   186f0:	mov	r2, #1
   186f4:	mov	r3, #0
   186f8:	stm	sp, {r2, r9}
   186fc:	ldr	r1, [fp, #-104]	; 0xffffff98
   18700:	mov	r2, r3
   18704:	ldr	r0, [fp, #-112]	; 0xffffff90
   18708:	bl	16620 <daemon@@Base+0xc80>
   1870c:	orr	r4, r4, r0
   18710:	b	17fc0 <argp_failure@@Base+0x28c>
   18714:	ldr	r3, [fp, #-112]	; 0xffffff90
   18718:	mov	r4, #1
   1871c:	mov	r6, r4
   18720:	ldr	r1, [r3, #16]
   18724:	ldr	r0, [r3, #8]
   18728:	bl	17b24 <daemon@@Base+0x2184>
   1872c:	mov	r1, #0
   18730:	add	r3, r0, #14
   18734:	bic	r3, r3, #7
   18738:	sub	sp, sp, r3
   1873c:	add	r7, sp, #8
   18740:	mov	r2, r0
   18744:	mov	r0, r7
   18748:	bl	11984 <memset@plt>
   1874c:	sub	r3, fp, #76	; 0x4c
   18750:	str	r3, [fp, #-100]	; 0xffffff9c
   18754:	ldr	r8, [fp, #-136]	; 0xffffff78
   18758:	str	r7, [fp, #-108]	; 0xffffff94
   1875c:	b	18878 <argp_failure@@Base+0xb44>
   18760:	cmp	r4, #0
   18764:	ldr	r3, [fp, #-108]	; 0xffffff94
   18768:	ldr	r5, [r9, #12]
   1876c:	ldrne	r2, [pc, #2048]	; 18f74 <argp_failure@@Base+0x1240>
   18770:	str	r7, [r9, #12]
   18774:	ldreq	r2, [pc, #2044]	; 18f78 <argp_failure@@Base+0x1244>
   18778:	str	r3, [fp, #-76]	; 0xffffffb4
   1877c:	ldr	r1, [pc, #2040]	; 18f7c <argp_failure@@Base+0x1248>
   18780:	ldr	r3, [fp, #4]
   18784:	mov	r0, r9
   18788:	bl	1bd5c <argp_parse@@Base+0x252c>
   1878c:	ldr	r3, [r9, #28]
   18790:	ldr	r1, [r9, #24]
   18794:	ldr	r2, [r9, #16]
   18798:	sub	r3, r3, r1
   1879c:	cmp	r3, r2
   187a0:	ldr	r7, [sl, #28]
   187a4:	bhi	1890c <argp_failure@@Base+0xbd8>
   187a8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   187ac:	ldr	r4, [r9, #4]
   187b0:	tst	r3, #2
   187b4:	str	r7, [r9, #4]
   187b8:	beq	188f0 <argp_failure@@Base+0xbbc>
   187bc:	ldr	r3, [r8, #4]
   187c0:	cmp	r3, #0
   187c4:	beq	18814 <argp_failure@@Base+0xae0>
   187c8:	ldr	ip, [r9, #28]
   187cc:	ldr	r2, [r9, #32]
   187d0:	add	r3, ip, #12
   187d4:	cmp	r2, r3
   187d8:	bcs	187f4 <argp_failure@@Base+0xac0>
   187dc:	mov	r1, #12
   187e0:	mov	r0, r9
   187e4:	bl	1bd3c <argp_parse@@Base+0x250c>
   187e8:	cmp	r0, #0
   187ec:	beq	18814 <argp_failure@@Base+0xae0>
   187f0:	ldr	ip, [r9, #28]
   187f4:	ldr	r3, [pc, #1924]	; 18f80 <argp_failure@@Base+0x124c>
   187f8:	ldm	r3!, {r0, r1, r2}
   187fc:	str	r0, [ip]
   18800:	str	r1, [ip, #4]
   18804:	str	r2, [ip, #8]
   18808:	ldr	r3, [r9, #28]
   1880c:	add	r3, r3, #12
   18810:	str	r3, [r9, #28]
   18814:	mov	r3, r6
   18818:	ldr	r1, [fp, #-104]	; 0xffffff98
   1881c:	str	r9, [sp]
   18820:	ldr	r2, [fp, #-100]	; 0xffffff9c
   18824:	ldr	r0, [fp, #-112]	; 0xffffff90
   18828:	bl	1715c <daemon@@Base+0x17bc>
   1882c:	ldr	r3, [r9, #28]
   18830:	ldr	r1, [r9, #24]
   18834:	sub	r1, r3, r1
   18838:	mov	r7, r0
   1883c:	ldr	r0, [r9, #16]
   18840:	cmp	r1, r0
   18844:	strls	r5, [r9, #12]
   18848:	bhi	188bc <argp_failure@@Base+0xb88>
   1884c:	ldr	r1, [r9, #32]
   18850:	str	r4, [r9, #4]
   18854:	cmp	r1, r3
   18858:	bls	188a0 <argp_failure@@Base+0xb6c>
   1885c:	add	r1, r3, #1
   18860:	mov	r2, #10
   18864:	str	r1, [r9, #28]
   18868:	strb	r2, [r3]
   1886c:	cmp	r7, #0
   18870:	mov	r4, #0
   18874:	beq	18918 <argp_failure@@Base+0xbe4>
   18878:	ldr	r3, [r9, #28]
   1887c:	ldr	r1, [r9, #24]
   18880:	ldr	r2, [r9, #16]
   18884:	sub	r3, r3, r1
   18888:	cmp	r3, r2
   1888c:	ldr	r7, [sl, #28]
   18890:	bls	18760 <argp_failure@@Base+0xa2c>
   18894:	mov	r0, r9
   18898:	bl	1b6ac <argp_parse@@Base+0x1e7c>
   1889c:	b	18760 <argp_failure@@Base+0xa2c>
   188a0:	mov	r1, r6
   188a4:	mov	r0, r9
   188a8:	bl	1bd3c <argp_parse@@Base+0x250c>
   188ac:	cmp	r0, #0
   188b0:	beq	1886c <argp_failure@@Base+0xb38>
   188b4:	ldr	r3, [r9, #28]
   188b8:	b	1885c <argp_failure@@Base+0xb28>
   188bc:	mov	r0, r9
   188c0:	bl	1b6ac <argp_parse@@Base+0x1e7c>
   188c4:	ldr	r3, [r9, #28]
   188c8:	ldr	r1, [r9, #24]
   188cc:	ldr	r0, [r9, #16]
   188d0:	sub	r1, r3, r1
   188d4:	cmp	r1, r0
   188d8:	str	r5, [r9, #12]
   188dc:	bls	1884c <argp_failure@@Base+0xb18>
   188e0:	mov	r0, r9
   188e4:	bl	1b6ac <argp_parse@@Base+0x1e7c>
   188e8:	ldr	r3, [r9, #28]
   188ec:	b	1884c <argp_failure@@Base+0xb18>
   188f0:	mov	r1, r9
   188f4:	mov	r0, r8
   188f8:	bl	17b7c <daemon@@Base+0x21dc>
   188fc:	ldr	r3, [fp, #-96]	; 0xffffffa0
   18900:	orr	r3, r3, #2
   18904:	str	r3, [fp, #-96]	; 0xffffffa0
   18908:	b	18814 <argp_failure@@Base+0xae0>
   1890c:	mov	r0, r9
   18910:	bl	1b6ac <argp_parse@@Base+0x1e7c>
   18914:	b	187a8 <argp_failure@@Base+0xa74>
   18918:	mov	r4, #1
   1891c:	b	17fb4 <argp_failure@@Base+0x280>
   18920:	mov	r1, #0
   18924:	ldr	r0, [fp, #-112]	; 0xffffff90
   18928:	bl	173ac <daemon@@Base+0x1a0c>
   1892c:	ldr	r2, [pc, #1616]	; 18f84 <argp_failure@@Base+0x1250>
   18930:	ldr	r4, [r0, #4]
   18934:	ldr	r5, [r0]
   18938:	mov	r1, r4
   1893c:	mov	r6, r0
   18940:	str	r0, [fp, #-136]	; 0xffffff78
   18944:	mov	r0, r5
   18948:	bl	17a9c <daemon@@Base+0x20fc>
   1894c:	ldr	r2, [pc, #1588]	; 18f88 <argp_failure@@Base+0x1254>
   18950:	cmp	r0, #0
   18954:	mvnne	r3, #0
   18958:	strne	r3, [r0, #12]
   1895c:	movne	r3, r6
   18960:	mov	r0, r5
   18964:	ldrne	r4, [r3, #4]
   18968:	mov	r1, r4
   1896c:	bl	17a9c <daemon@@Base+0x20fc>
   18970:	cmp	r0, #0
   18974:	mvnne	r3, #0
   18978:	strne	r3, [r0, #12]
   1897c:	ldrne	r3, [fp, #-136]	; 0xffffff78
   18980:	ldrne	r4, [r3, #4]
   18984:	cmp	r4, #0
   18988:	beq	17fa8 <argp_failure@@Base+0x274>
   1898c:	mov	r3, r5
   18990:	mov	r1, #0
   18994:	str	r1, [r3, #24]
   18998:	add	r1, r1, #1
   1899c:	cmp	r1, r4
   189a0:	add	r3, r3, #28
   189a4:	bne	18994 <argp_failure@@Base+0xc60>
   189a8:	mov	r0, r5
   189ac:	ldr	r3, [pc, #1496]	; 18f8c <argp_failure@@Base+0x1258>
   189b0:	mov	r2, #28
   189b4:	bl	11a74 <qsort@plt>
   189b8:	b	17fa8 <argp_failure@@Base+0x274>
   189bc:	mov	r2, #10
   189c0:	mov	r1, #0
   189c4:	mov	r0, r4
   189c8:	bl	11690 <strtol@plt>
   189cc:	ldrb	r3, [r4]
   189d0:	ldr	r2, [r5]
   189d4:	lsl	r3, r3, #1
   189d8:	ldrh	r3, [r2, r3]
   189dc:	tst	r3, #2048	; 0x800
   189e0:	str	r0, [fp, #-116]	; 0xffffff8c
   189e4:	beq	18a0c <argp_failure@@Base+0xcd8>
   189e8:	ldrb	r3, [r4, #1]!
   189ec:	lsl	r3, r3, #1
   189f0:	ldrh	r3, [r2, r3]
   189f4:	tst	r3, #2048	; 0x800
   189f8:	bne	189e8 <argp_failure@@Base+0xcb4>
   189fc:	b	18a0c <argp_failure@@Base+0xcd8>
   18a00:	ldrb	r3, [r4, #1]!
   18a04:	lsl	r3, r3, #1
   18a08:	ldrh	r3, [r2, r3]
   18a0c:	tst	r3, #8192	; 0x2000
   18a10:	bne	18a00 <argp_failure@@Base+0xccc>
   18a14:	ldr	r9, [fp, #-108]	; 0xffffff94
   18a18:	b	185d8 <argp_failure@@Base+0x8a4>
   18a1c:	ldrb	r3, [r4, #1]
   18a20:	add	r4, r4, #1
   18a24:	lsl	r3, r3, #1
   18a28:	ldrh	r3, [r1, r3]
   18a2c:	tst	r3, #8192	; 0x2000
   18a30:	beq	185c4 <argp_failure@@Base+0x890>
   18a34:	ldrb	r3, [r4, #1]!
   18a38:	lsl	r3, r3, #1
   18a3c:	ldrh	r3, [r1, r3]
   18a40:	tst	r3, #8192	; 0x2000
   18a44:	bne	18a34 <argp_failure@@Base+0xd00>
   18a48:	b	185c4 <argp_failure@@Base+0x890>
   18a4c:	ldrb	r3, [r6, #1]
   18a50:	cmp	r3, #111	; 0x6f
   18a54:	bne	186c8 <argp_failure@@Base+0x994>
   18a58:	ldrb	r3, [r6, #2]
   18a5c:	cmp	r3, #45	; 0x2d
   18a60:	bne	186c8 <argp_failure@@Base+0x994>
   18a64:	ldr	r3, [fp, #-108]	; 0xffffff94
   18a68:	add	r6, r6, #3
   18a6c:	sub	r7, r7, #3
   18a70:	str	r3, [fp, #-116]	; 0xffffff8c
   18a74:	mov	r9, #1
   18a78:	b	185d8 <argp_failure@@Base+0x8a4>
   18a7c:	mov	r3, #1
   18a80:	str	r3, [fp, #-128]	; 0xffffff80
   18a84:	ldr	r3, [fp, #-100]	; 0xffffff9c
   18a88:	cmp	lr, r5
   18a8c:	ldr	r5, [r3, #8]
   18a90:	bls	1818c <argp_failure@@Base+0x458>
   18a94:	mov	r0, r9
   18a98:	bl	1b6ac <argp_parse@@Base+0x1e7c>
   18a9c:	ldr	r7, [r6, #12]
   18aa0:	and	r2, r7, #8
   18aa4:	mov	r4, r2
   18aa8:	b	1818c <argp_failure@@Base+0x458>
   18aac:	cmp	r3, r2
   18ab0:	ldr	r3, [fp, #-100]	; 0xffffff9c
   18ab4:	ldr	r4, [r3, #12]
   18ab8:	bhi	18d68 <argp_failure@@Base+0x1034>
   18abc:	str	r4, [r9, #12]
   18ac0:	ldr	r5, [r8, #4]
   18ac4:	cmp	r5, #0
   18ac8:	beq	182f8 <argp_failure@@Base+0x5c4>
   18acc:	add	r4, r6, #24
   18ad0:	ldr	r7, [fp, #-100]	; 0xffffff9c
   18ad4:	b	18ae4 <argp_failure@@Base+0xdb0>
   18ad8:	subs	r5, r5, #1
   18adc:	add	r4, r4, #24
   18ae0:	beq	182f8 <argp_failure@@Base+0x5c4>
   18ae4:	ldr	r3, [r4, #-24]	; 0xffffffe8
   18ae8:	cmp	r3, #0
   18aec:	beq	18ad8 <argp_failure@@Base+0xda4>
   18af0:	ldr	r3, [r4, #-12]
   18af4:	tst	r3, #2
   18af8:	bne	18ad8 <argp_failure@@Base+0xda4>
   18afc:	sub	r1, fp, #76	; 0x4c
   18b00:	ldr	r0, [r7, #12]
   18b04:	bl	16474 <daemon@@Base+0xad4>
   18b08:	ldr	r2, [r4, #-24]	; 0xffffffe8
   18b0c:	ldr	r1, [pc, #1148]	; 18f90 <argp_failure@@Base+0x125c>
   18b10:	mov	r0, r9
   18b14:	bl	1bd5c <argp_parse@@Base+0x252c>
   18b18:	ldr	r3, [r6, #8]
   18b1c:	ldr	r1, [pc, #1136]	; 18f94 <argp_failure@@Base+0x1260>
   18b20:	subs	r2, r3, #0
   18b24:	mov	r0, r9
   18b28:	beq	18ad8 <argp_failure@@Base+0xda4>
   18b2c:	ldr	ip, [r6, #12]
   18b30:	tst	ip, #1
   18b34:	ldrne	r1, [pc, #1116]	; 18f98 <argp_failure@@Base+0x1264>
   18b38:	bl	1bd5c <argp_parse@@Base+0x252c>
   18b3c:	b	18ad8 <argp_failure@@Base+0xda4>
   18b40:	ldr	r3, [fp, #-100]	; 0xffffff9c
   18b44:	sub	r1, fp, #76	; 0x4c
   18b48:	ldr	r0, [r3, #8]
   18b4c:	bl	16474 <daemon@@Base+0xad4>
   18b50:	ldr	r3, [r9, #28]
   18b54:	ldr	r2, [r9, #32]
   18b58:	cmp	r3, r2
   18b5c:	bcs	18d9c <argp_failure@@Base+0x1068>
   18b60:	add	r2, r3, #1
   18b64:	str	r2, [r9, #28]
   18b68:	mov	r2, #45	; 0x2d
   18b6c:	strb	r2, [r3]
   18b70:	ldr	r3, [r9, #28]
   18b74:	ldr	r2, [r9, #32]
   18b78:	ldrb	r7, [sl]
   18b7c:	cmp	r3, r2
   18b80:	bcs	18d80 <argp_failure@@Base+0x104c>
   18b84:	add	r2, r3, #1
   18b88:	str	r2, [r9, #28]
   18b8c:	strb	r7, [r3]
   18b90:	ldr	r3, [fp, #-128]	; 0xffffff80
   18b94:	cmp	r3, #0
   18b98:	beq	18d34 <argp_failure@@Base+0x1000>
   18b9c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   18ba0:	ldr	r3, [r3]
   18ba4:	cmp	r3, #0
   18ba8:	bne	18d34 <argp_failure@@Base+0x1000>
   18bac:	ldr	r3, [r6, #8]
   18bb0:	cmp	r3, #0
   18bb4:	movne	r3, #1
   18bb8:	strne	r3, [fp, #-80]	; 0xffffffb0
   18bbc:	b	18200 <argp_failure@@Base+0x4cc>
   18bc0:	mov	r0, r9
   18bc4:	bl	1b6ac <argp_parse@@Base+0x1e7c>
   18bc8:	ldr	r2, [fp, #-116]	; 0xffffff8c
   18bcc:	ldr	r3, [r9, #28]
   18bd0:	ldr	r1, [r9, #24]
   18bd4:	str	r2, [r9, #4]
   18bd8:	ldr	r2, [r9, #16]
   18bdc:	sub	r3, r3, r1
   18be0:	cmp	r3, r2
   18be4:	bls	18384 <argp_failure@@Base+0x650>
   18be8:	mov	r0, r9
   18bec:	bl	1b6ac <argp_parse@@Base+0x1e7c>
   18bf0:	b	18384 <argp_failure@@Base+0x650>
   18bf4:	mov	r0, r9
   18bf8:	bl	1b6ac <argp_parse@@Base+0x1e7c>
   18bfc:	ldr	lr, [r9, #28]
   18c00:	ldr	r2, [r9, #24]
   18c04:	ldr	r5, [r9, #16]
   18c08:	sub	lr, lr, r2
   18c0c:	b	180f8 <argp_failure@@Base+0x3c4>
   18c10:	ldr	r4, [r6, #16]
   18c14:	ldr	r1, [r6, #4]
   18c18:	mov	r0, r4
   18c1c:	ldr	r3, [fp, #-104]	; 0xffffff98
   18c20:	ldr	r2, [r8, #20]
   18c24:	bl	16224 <daemon@@Base+0x884>
   18c28:	subs	r5, r0, #0
   18c2c:	beq	18ce4 <argp_failure@@Base+0xfb0>
   18c30:	ldrb	r3, [r5]
   18c34:	cmp	r3, #0
   18c38:	beq	18cd4 <argp_failure@@Base+0xfa0>
   18c3c:	ldr	r3, [r9, #28]
   18c40:	ldr	r1, [r9, #24]
   18c44:	ldr	r2, [r9, #16]
   18c48:	sub	r3, r3, r1
   18c4c:	cmp	r3, r2
   18c50:	bhi	18ed4 <argp_failure@@Base+0x11a0>
   18c54:	ldr	r7, [r9, #20]
   18c58:	ldr	r3, [fp, #-100]	; 0xffffff9c
   18c5c:	bic	r7, r7, r7, asr #31
   18c60:	ldr	r6, [r3, #20]
   18c64:	mov	r3, r6
   18c68:	str	r6, [r9, #4]
   18c6c:	add	r2, r6, #3
   18c70:	cmp	r2, r7
   18c74:	str	r3, [r9, #12]
   18c78:	bcs	18e24 <argp_failure@@Base+0x10f0>
   18c7c:	ldr	r3, [r9, #28]
   18c80:	ldr	r2, [r9, #32]
   18c84:	cmp	r3, r2
   18c88:	bcs	19024 <argp_failure@@Base+0x12f0>
   18c8c:	add	r1, r3, #1
   18c90:	mov	r2, #10
   18c94:	str	r1, [r9, #28]
   18c98:	strb	r2, [r3]
   18c9c:	mov	r0, r5
   18ca0:	bl	11918 <strlen@plt>
   18ca4:	subs	r6, r0, #0
   18ca8:	beq	18cd4 <argp_failure@@Base+0xfa0>
   18cac:	ldr	r0, [r9, #28]
   18cb0:	ldr	r2, [r9, #32]
   18cb4:	add	r3, r0, r6
   18cb8:	cmp	r2, r3
   18cbc:	bcs	18eb8 <argp_failure@@Base+0x1184>
   18cc0:	mov	r1, r6
   18cc4:	mov	r0, r9
   18cc8:	bl	1bd3c <argp_parse@@Base+0x250c>
   18ccc:	cmp	r0, #0
   18cd0:	bne	18eb4 <argp_failure@@Base+0x1180>
   18cd4:	cmp	r4, r5
   18cd8:	beq	18ce4 <argp_failure@@Base+0xfb0>
   18cdc:	mov	r0, r5
   18ce0:	bl	1a89c <argp_parse@@Base+0x106c>
   18ce4:	ldr	r3, [r9, #28]
   18ce8:	ldr	r2, [r9, #24]
   18cec:	ldr	r1, [r9, #16]
   18cf0:	sub	r2, r3, r2
   18cf4:	cmp	r2, r1
   18cf8:	bhi	18e04 <argp_failure@@Base+0x10d0>
   18cfc:	ldr	r1, [r9, #32]
   18d00:	mov	r2, #0
   18d04:	cmp	r1, r3
   18d08:	str	r2, [r9, #4]
   18d0c:	bls	18de8 <argp_failure@@Base+0x10b4>
   18d10:	add	r1, r3, #1
   18d14:	mov	r2, #10
   18d18:	str	r1, [r9, #28]
   18d1c:	strb	r2, [r3]
   18d20:	str	r8, [fp, #-88]	; 0xffffffa8
   18d24:	b	18364 <argp_failure@@Base+0x630>
   18d28:	mov	r0, r9
   18d2c:	bl	1b6ac <argp_parse@@Base+0x1e7c>
   18d30:	b	18310 <argp_failure@@Base+0x5dc>
   18d34:	ldr	r2, [r6, #8]
   18d38:	cmp	r2, #0
   18d3c:	beq	18200 <argp_failure@@Base+0x4cc>
   18d40:	ldr	r3, [r6, #12]
   18d44:	mov	r0, r9
   18d48:	tst	r3, #1
   18d4c:	ldrne	r1, [pc, #584]	; 18f9c <argp_failure@@Base+0x1268>
   18d50:	ldreq	r1, [pc, #584]	; 18fa0 <argp_failure@@Base+0x126c>
   18d54:	bl	1bd5c <argp_parse@@Base+0x252c>
   18d58:	b	18200 <argp_failure@@Base+0x4cc>
   18d5c:	ldrb	r9, [r4, #1]
   18d60:	add	r4, r4, #1
   18d64:	b	18650 <argp_failure@@Base+0x91c>
   18d68:	mov	r0, r9
   18d6c:	bl	1b6ac <argp_parse@@Base+0x1e7c>
   18d70:	b	18abc <argp_failure@@Base+0xd88>
   18d74:	mov	r0, r9
   18d78:	bl	1b6ac <argp_parse@@Base+0x1e7c>
   18d7c:	b	18244 <argp_failure@@Base+0x510>
   18d80:	mov	r1, #1
   18d84:	mov	r0, r9
   18d88:	bl	1bd3c <argp_parse@@Base+0x250c>
   18d8c:	cmp	r0, #0
   18d90:	beq	18b90 <argp_failure@@Base+0xe5c>
   18d94:	ldr	r3, [r9, #28]
   18d98:	b	18b84 <argp_failure@@Base+0xe50>
   18d9c:	mov	r1, #1
   18da0:	mov	r0, r9
   18da4:	bl	1bd3c <argp_parse@@Base+0x250c>
   18da8:	cmp	r0, #0
   18dac:	beq	18b70 <argp_failure@@Base+0xe3c>
   18db0:	ldr	r3, [r9, #28]
   18db4:	b	18b60 <argp_failure@@Base+0xe2c>
   18db8:	ldr	lr, [fp, #-100]	; 0xffffff9c
   18dbc:	ldr	sl, [pc, #388]	; 18f48 <argp_failure@@Base+0x1214>
   18dc0:	mov	r4, #1
   18dc4:	ldm	lr!, {r0, r1, r2, r3}
   18dc8:	mov	ip, sl
   18dcc:	stmia	ip!, {r0, r1, r2, r3}
   18dd0:	ldm	lr!, {r0, r1, r2, r3}
   18dd4:	stmia	ip!, {r0, r1, r2, r3}
   18dd8:	ldm	lr, {r0, r1}
   18ddc:	stm	ip, {r0, r1}
   18de0:	str	r4, [sl, #36]	; 0x24
   18de4:	b	17f7c <argp_failure@@Base+0x248>
   18de8:	mov	r1, #1
   18dec:	mov	r0, r9
   18df0:	bl	1bd3c <argp_parse@@Base+0x250c>
   18df4:	cmp	r0, #0
   18df8:	beq	18d20 <argp_failure@@Base+0xfec>
   18dfc:	ldr	r3, [r9, #28]
   18e00:	b	18d10 <argp_failure@@Base+0xfdc>
   18e04:	mov	r0, r9
   18e08:	bl	1b6ac <argp_parse@@Base+0x1e7c>
   18e0c:	ldr	r3, [r9, #28]
   18e10:	b	18cfc <argp_failure@@Base+0xfc8>
   18e14:	mov	r7, r3
   18e18:	mov	r4, r6
   18e1c:	mov	r3, r9
   18e20:	b	185a4 <argp_failure@@Base+0x870>
   18e24:	cmp	r6, r7
   18e28:	bhi	19014 <argp_failure@@Base+0x12e0>
   18e2c:	ldr	r3, [r9, #28]
   18e30:	ldr	r1, [r9, #32]
   18e34:	add	r2, r3, #3
   18e38:	cmp	r1, r2
   18e3c:	bcs	18e58 <argp_failure@@Base+0x1124>
   18e40:	mov	r1, #3
   18e44:	mov	r0, r9
   18e48:	bl	1bd3c <argp_parse@@Base+0x250c>
   18e4c:	cmp	r0, #0
   18e50:	beq	18c9c <argp_failure@@Base+0xf68>
   18e54:	ldr	r3, [r9, #28]
   18e58:	ldr	r2, [pc, #324]	; 18fa4 <argp_failure@@Base+0x1270>
   18e5c:	ldrh	r1, [r2]
   18e60:	ldrb	r2, [r2, #2]
   18e64:	strh	r1, [r3]
   18e68:	strb	r2, [r3, #2]
   18e6c:	ldr	r3, [r9, #28]
   18e70:	add	r3, r3, #3
   18e74:	str	r3, [r9, #28]
   18e78:	b	18c9c <argp_failure@@Base+0xf68>
   18e7c:	mov	r2, #0
   18e80:	str	r6, [sp, #4]
   18e84:	str	r7, [sp]
   18e88:	ldr	r3, [pc, #280]	; 18fa8 <argp_failure@@Base+0x1274>
   18e8c:	mov	r1, r2
   18e90:	ldr	r0, [fp, #-104]	; 0xffffff98
   18e94:	bl	17d34 <argp_failure@@Base>
   18e98:	b	18644 <argp_failure@@Base+0x910>
   18e9c:	ldr	r3, [fp, #-136]	; 0xffffff78
   18ea0:	ldr	r8, [r3]
   18ea4:	str	r4, [fp, #-88]	; 0xffffffa8
   18ea8:	str	r4, [fp, #-84]	; 0xffffffac
   18eac:	str	r4, [fp, #-80]	; 0xffffffb0
   18eb0:	b	180d4 <argp_failure@@Base+0x3a0>
   18eb4:	ldr	r0, [r9, #28]
   18eb8:	mov	r2, r6
   18ebc:	mov	r1, r5
   18ec0:	bl	11744 <memcpy@plt>
   18ec4:	ldr	r3, [r9, #28]
   18ec8:	add	r6, r3, r6
   18ecc:	str	r6, [r9, #28]
   18ed0:	b	18cd4 <argp_failure@@Base+0xfa0>
   18ed4:	mov	r0, r9
   18ed8:	bl	1b6ac <argp_parse@@Base+0x1e7c>
   18edc:	ldr	r3, [r9, #28]
   18ee0:	ldr	r1, [r9, #24]
   18ee4:	ldr	r2, [r9, #16]
   18ee8:	ldr	r7, [r9, #20]
   18eec:	ldr	sl, [fp, #-100]	; 0xffffff9c
   18ef0:	sub	r3, r3, r1
   18ef4:	cmp	r3, r2
   18ef8:	ldr	r6, [sl, #20]
   18efc:	bic	r7, r7, r7, asr #31
   18f00:	bls	18c64 <argp_failure@@Base+0xf30>
   18f04:	mov	r0, r9
   18f08:	bl	1b6ac <argp_parse@@Base+0x1e7c>
   18f0c:	ldr	r3, [r9, #28]
   18f10:	ldr	r1, [r9, #24]
   18f14:	ldr	r2, [r9, #16]
   18f18:	sub	r3, r3, r1
   18f1c:	cmp	r3, r2
   18f20:	ldr	r3, [sl, #20]
   18f24:	str	r6, [r9, #4]
   18f28:	movls	r6, r3
   18f2c:	bls	18c6c <argp_failure@@Base+0xf38>
   18f30:	mov	r0, r9
   18f34:	str	r3, [fp, #-124]	; 0xffffff84
   18f38:	bl	1b6ac <argp_parse@@Base+0x1e7c>
   18f3c:	ldr	r6, [sl, #20]
   18f40:	ldr	r3, [fp, #-124]	; 0xffffff84
   18f44:	b	18c6c <argp_failure@@Base+0xf38>
   18f48:	andeq	pc, r2, r0, lsl #11
   18f4c:	muleq	r3, r4, r0
   18f50:	andeq	lr, r1, ip, ror #6
   18f54:	andeq	r0, r0, #5
   18f58:	strdeq	lr, [r1], -r8
   18f5c:	andeq	lr, r1, r4, lsr #3
   18f60:	andeq	lr, r1, r4, ror r0
   18f64:	andeq	sp, r1, r4, ror #31
   18f68:	andeq	lr, r1, r0, ror #4
   18f6c:	andeq	lr, r1, ip, lsr #4
   18f70:	andeq	lr, r1, r0, lsr #5
   18f74:	andeq	lr, r1, r8, ror r2
   18f78:	andeq	lr, r1, r8, lsl #5
   18f7c:	andeq	lr, r1, r0, lsl #5
   18f80:	muleq	r1, r0, r2
   18f84:	andeq	lr, r1, r8, ror #4
   18f88:	andeq	lr, r1, r0, ror r2
   18f8c:	andeq	r6, r1, ip, asr ip
   18f90:	andeq	lr, r1, r0, ror #5
   18f94:	strdeq	lr, [r1], -r0
   18f98:	andeq	lr, r1, r8, ror #5
   18f9c:	ldrdeq	lr, [r1], -r8
   18fa0:	andeq	lr, r1, r8, asr #9
   18fa4:	strdeq	lr, [r1], -r4
   18fa8:	andeq	lr, r1, r4, ror #3
   18fac:	andeq	lr, r1, ip, lsl #4
   18fb0:			; <UNDEFINED> instruction: 0x0001e1b4
   18fb4:	str	r6, [sp]
   18fb8:	ldr	r3, [pc, #-20]	; 18fac <argp_failure@@Base+0x1278>
   18fbc:	mov	r1, r2
   18fc0:	ldr	r0, [fp, #-104]	; 0xffffff98
   18fc4:	bl	17d34 <argp_failure@@Base>
   18fc8:	b	18660 <argp_failure@@Base+0x92c>
   18fcc:	mov	r0, r4
   18fd0:	bl	1a89c <argp_parse@@Base+0x106c>
   18fd4:	b	1848c <argp_failure@@Base+0x758>
   18fd8:	ldr	r0, [r6, #16]
   18fdc:	sub	r2, fp, #76	; 0x4c
   18fe0:	ldr	r1, [r8, #20]
   18fe4:	bl	16268 <daemon@@Base+0x8c8>
   18fe8:	b	18d20 <argp_failure@@Base+0xfec>
   18fec:	mov	r1, #1
   18ff0:	mov	r0, r9
   18ff4:	bl	1bd3c <argp_parse@@Base+0x250c>
   18ff8:	cmp	r0, #0
   18ffc:	beq	18054 <argp_failure@@Base+0x320>
   19000:	ldr	r3, [r9, #28]
   19004:	b	18044 <argp_failure@@Base+0x310>
   19008:	ldr	r0, [fp, #-132]	; 0xffffff7c
   1900c:	bl	11810 <funlockfile@plt>
   19010:	b	18014 <argp_failure@@Base+0x2e0>
   19014:	mov	r1, r6
   19018:	mov	r0, r9
   1901c:	bl	16190 <daemon@@Base+0x7f0>
   19020:	b	18c9c <argp_failure@@Base+0xf68>
   19024:	mov	r1, #1
   19028:	mov	r0, r9
   1902c:	bl	1bd3c <argp_parse@@Base+0x250c>
   19030:	cmp	r0, #0
   19034:	beq	18c9c <argp_failure@@Base+0xf68>
   19038:	ldr	r3, [r9, #28]
   1903c:	b	18c8c <argp_failure@@Base+0xf58>
   19040:	mov	r1, #1
   19044:	mov	r0, r9
   19048:	bl	1bd3c <argp_parse@@Base+0x250c>
   1904c:	cmp	r0, #0
   19050:	beq	180a4 <argp_failure@@Base+0x370>
   19054:	ldr	r3, [r9, #28]
   19058:	b	18094 <argp_failure@@Base+0x360>
   1905c:	str	r6, [sp, #4]
   19060:	str	r7, [sp]
   19064:	ldr	r3, [pc, #-188]	; 18fb0 <argp_failure@@Base+0x127c>
   19068:	mov	r2, #0
   1906c:	ldr	r0, [fp, #-104]	; 0xffffff98
   19070:	bl	17d34 <argp_failure@@Base>
   19074:	b	1863c <argp_failure@@Base+0x908>
   19078:	ldr	r3, [r9, #28]
   1907c:	b	18464 <argp_failure@@Base+0x730>
   19080:	mov	r1, #1
   19084:	mov	r0, r9
   19088:	bl	1bd3c <argp_parse@@Base+0x250c>
   1908c:	cmp	r0, #0
   19090:	beq	18480 <argp_failure@@Base+0x74c>
   19094:	ldr	r3, [r9, #28]
   19098:	b	18470 <argp_failure@@Base+0x73c>
   1909c:	mov	r1, #1
   190a0:	mov	r0, r9
   190a4:	bl	1bd3c <argp_parse@@Base+0x250c>
   190a8:	cmp	r0, #0
   190ac:	beq	18410 <argp_failure@@Base+0x6dc>
   190b0:	ldr	r3, [r9, #28]
   190b4:	b	18400 <argp_failure@@Base+0x6cc>

000190b8 <argp_help@@Base>:
   190b8:	push	{lr}		; (str lr, [sp, #-4]!)
   190bc:	sub	sp, sp, #12
   190c0:	str	r3, [sp]
   190c4:	mov	r3, r2
   190c8:	mov	r2, r1
   190cc:	mov	r1, #0
   190d0:	bl	17f3c <argp_failure@@Base+0x208>
   190d4:	add	sp, sp, #12
   190d8:	pop	{pc}		; (ldr pc, [sp], #4)

000190dc <argp_state_help@@Base>:
   190dc:	push	{r4, r5, lr}
   190e0:	subs	r4, r0, #0
   190e4:	sub	sp, sp, #12
   190e8:	mov	r5, r2
   190ec:	beq	1914c <argp_state_help@@Base+0x70>
   190f0:	ldr	r3, [r4, #16]
   190f4:	tst	r3, #2
   190f8:	bne	19144 <argp_state_help@@Base+0x68>
   190fc:	cmp	r1, #0
   19100:	beq	19144 <argp_state_help@@Base+0x68>
   19104:	tst	r3, #64	; 0x40
   19108:	ldr	r3, [r4, #40]	; 0x28
   1910c:	orrne	r5, r5, #128	; 0x80
   19110:	ldr	r0, [r4]
   19114:	mov	r2, r1
   19118:	str	r3, [sp]
   1911c:	mov	r1, r4
   19120:	mov	r3, r5
   19124:	bl	17f3c <argp_failure@@Base+0x208>
   19128:	ldr	r3, [r4, #16]
   1912c:	tst	r3, #32
   19130:	bne	19144 <argp_state_help@@Base+0x68>
   19134:	ands	r0, r5, #256	; 0x100
   19138:	bne	19178 <argp_state_help@@Base+0x9c>
   1913c:	tst	r5, #512	; 0x200
   19140:	bne	19174 <argp_state_help@@Base+0x98>
   19144:	add	sp, sp, #12
   19148:	pop	{r4, r5, pc}
   1914c:	cmp	r1, #0
   19150:	beq	19144 <argp_state_help@@Base+0x68>
   19154:	ldr	r3, [pc, #40]	; 19184 <argp_state_help@@Base+0xa8>
   19158:	mov	r2, r1
   1915c:	mov	r1, r4
   19160:	ldr	ip, [r3]
   19164:	mov	r3, r5
   19168:	str	ip, [sp]
   1916c:	bl	17f3c <argp_failure@@Base+0x208>
   19170:	b	19134 <argp_state_help@@Base+0x58>
   19174:	bl	1190c <exit@plt>
   19178:	ldr	r3, [pc, #8]	; 19188 <argp_state_help@@Base+0xac>
   1917c:	ldr	r0, [r3]
   19180:	bl	1190c <exit@plt>
   19184:	andeq	pc, r2, r0, asr #11
   19188:	andeq	pc, r2, r8, lsr #11

0001918c <argp_error@@Base>:
   1918c:	push	{r1, r2, r3}
   19190:	push	{r4, r5, lr}
   19194:	subs	r5, r0, #0
   19198:	sub	sp, sp, #8
   1919c:	beq	1926c <argp_error@@Base+0xe0>
   191a0:	ldr	r3, [r5, #16]
   191a4:	tst	r3, #2
   191a8:	bne	1925c <argp_error@@Base+0xd0>
   191ac:	ldr	r4, [r5, #44]	; 0x2c
   191b0:	cmp	r4, #0
   191b4:	beq	1925c <argp_error@@Base+0xd0>
   191b8:	mov	r0, r4
   191bc:	bl	11a50 <flockfile@plt>
   191c0:	ldr	r0, [r5, #40]	; 0x28
   191c4:	add	r3, sp, #24
   191c8:	str	r3, [sp, #4]
   191cc:	mov	r1, r4
   191d0:	bl	11660 <fputs_unlocked@plt>
   191d4:	ldr	r3, [r4, #20]
   191d8:	ldr	r2, [r4, #24]
   191dc:	cmp	r3, r2
   191e0:	addcc	r1, r3, #1
   191e4:	movcc	r2, #58	; 0x3a
   191e8:	strcc	r1, [r4, #20]
   191ec:	strbcc	r2, [r3]
   191f0:	bcs	192b8 <argp_error@@Base+0x12c>
   191f4:	ldr	r3, [r4, #20]
   191f8:	ldr	r2, [r4, #24]
   191fc:	cmp	r3, r2
   19200:	addcc	r1, r3, #1
   19204:	movcc	r2, #32
   19208:	strcc	r1, [r4, #20]
   1920c:	strbcc	r2, [r3]
   19210:	bcs	192a8 <argp_error@@Base+0x11c>
   19214:	ldr	r1, [sp, #20]
   19218:	ldr	r2, [sp, #4]
   1921c:	mov	r0, r4
   19220:	bl	11a2c <vfprintf@plt>
   19224:	ldr	r3, [r4, #20]
   19228:	ldr	r2, [r4, #24]
   1922c:	cmp	r3, r2
   19230:	addcc	r1, r3, #1
   19234:	movcc	r2, #10
   19238:	strcc	r1, [r4, #20]
   1923c:	strbcc	r2, [r3]
   19240:	bcs	19298 <argp_error@@Base+0x10c>
   19244:	mov	r0, r5
   19248:	mov	r2, #260	; 0x104
   1924c:	mov	r1, r4
   19250:	bl	190dc <argp_state_help@@Base>
   19254:	mov	r0, r4
   19258:	bl	11810 <funlockfile@plt>
   1925c:	add	sp, sp, #8
   19260:	pop	{r4, r5, lr}
   19264:	add	sp, sp, #12
   19268:	bx	lr
   1926c:	ldr	r3, [pc, #84]	; 192c8 <argp_error@@Base+0x13c>
   19270:	ldr	r4, [r3]
   19274:	cmp	r4, #0
   19278:	beq	1925c <argp_error@@Base+0xd0>
   1927c:	mov	r0, r4
   19280:	bl	11a50 <flockfile@plt>
   19284:	ldr	r2, [pc, #64]	; 192cc <argp_error@@Base+0x140>
   19288:	add	r3, sp, #24
   1928c:	str	r3, [sp, #4]
   19290:	ldr	r0, [r2]
   19294:	b	191cc <argp_error@@Base+0x40>
   19298:	mov	r1, #10
   1929c:	mov	r0, r4
   192a0:	bl	119f0 <__overflow@plt>
   192a4:	b	19244 <argp_error@@Base+0xb8>
   192a8:	mov	r1, #32
   192ac:	mov	r0, r4
   192b0:	bl	119f0 <__overflow@plt>
   192b4:	b	19214 <argp_error@@Base+0x88>
   192b8:	mov	r1, #58	; 0x3a
   192bc:	mov	r0, r4
   192c0:	bl	119f0 <__overflow@plt>
   192c4:	b	191f4 <argp_error@@Base+0x68>
   192c8:	andeq	pc, r2, r8, asr #11
   192cc:	andeq	pc, r2, r0, asr #11
   192d0:	ldr	r3, [r0]
   192d4:	push	{r4, r5, r6, lr}
   192d8:	cmp	r3, #0
   192dc:	ldr	r5, [r0, #16]
   192e0:	beq	19348 <argp_error@@Base+0x1bc>
   192e4:	ldr	r0, [r1, #8]
   192e8:	mov	r2, #0
   192ec:	add	r0, r0, #1
   192f0:	str	r0, [r1, #8]
   192f4:	b	192fc <argp_error@@Base+0x170>
   192f8:	add	r2, r2, #1
   192fc:	add	r3, r3, #24
   19300:	ldr	r0, [r3, #-20]	; 0xffffffec
   19304:	cmp	r0, #0
   19308:	bne	192f8 <argp_error@@Base+0x16c>
   1930c:	ldr	r0, [r3, #-24]	; 0xffffffe8
   19310:	cmp	r0, #0
   19314:	bne	192f8 <argp_error@@Base+0x16c>
   19318:	ldr	r0, [r3, #-8]
   1931c:	cmp	r0, #0
   19320:	bne	192f8 <argp_error@@Base+0x16c>
   19324:	ldr	r0, [r3, #-4]
   19328:	cmp	r0, #0
   1932c:	bne	192f8 <argp_error@@Base+0x16c>
   19330:	ldm	r1, {r0, r3}
   19334:	add	ip, r2, r2, lsl #1
   19338:	add	r0, r0, ip
   1933c:	add	r2, r3, r2
   19340:	stm	r1, {r0, r2}
   19344:	b	1935c <argp_error@@Base+0x1d0>
   19348:	ldr	r3, [r0, #4]
   1934c:	cmp	r3, #0
   19350:	ldrne	r3, [r1, #8]
   19354:	addne	r3, r3, #1
   19358:	strne	r3, [r1, #8]
   1935c:	cmp	r5, #0
   19360:	popeq	{r4, r5, r6, pc}
   19364:	ldr	r0, [r5]
   19368:	cmp	r0, #0
   1936c:	popeq	{r4, r5, r6, pc}
   19370:	mov	r4, r1
   19374:	mov	r1, r4
   19378:	bl	192d0 <argp_error@@Base+0x144>
   1937c:	ldr	r3, [r4, #12]
   19380:	ldr	r0, [r5, #16]!
   19384:	add	r3, r3, #1
   19388:	cmp	r0, #0
   1938c:	str	r3, [r4, #12]
   19390:	bne	19374 <argp_error@@Base+0x1e8>
   19394:	pop	{r4, r5, r6, pc}
   19398:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1939c:	sub	sp, sp, #36	; 0x24
   193a0:	ldr	sl, [r0]
   193a4:	str	r0, [sp, #12]
   193a8:	cmp	sl, #0
   193ac:	str	r1, [sp, #16]
   193b0:	str	r2, [sp, #20]
   193b4:	mov	r9, r3
   193b8:	ldr	r8, [r0, #16]
   193bc:	ldr	r7, [sp, #72]	; 0x48
   193c0:	beq	1958c <argp_error@@Base+0x400>
   193c4:	add	fp, sl, #24
   193c8:	str	r8, [sp, #28]
   193cc:	str	r3, [sp, #24]
   193d0:	ldr	r4, [fp, #-20]	; 0xffffffec
   193d4:	sub	r1, fp, #24
   193d8:	cmp	r4, #0
   193dc:	bne	193ec <argp_error@@Base+0x260>
   193e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   193e4:	cmp	r3, #0
   193e8:	beq	19560 <argp_error@@Base+0x3d4>
   193ec:	ldr	r3, [fp, #-12]
   193f0:	tst	r3, #4
   193f4:	moveq	sl, r1
   193f8:	moveq	r5, r3
   193fc:	ldrne	r5, [sl, #12]
   19400:	ands	r5, r5, #8
   19404:	bne	19548 <argp_error@@Base+0x3bc>
   19408:	tst	r3, #8
   1940c:	bne	19488 <argp_error@@Base+0x2fc>
   19410:	sub	r3, r4, #1
   19414:	cmp	r3, #254	; 0xfe
   19418:	bhi	19488 <argp_error@@Base+0x2fc>
   1941c:	bl	118f4 <__ctype_b_loc@plt>
   19420:	lsl	r3, r4, #1
   19424:	ldr	r1, [r0]
   19428:	ldrh	r3, [r1, r3]
   1942c:	tst	r3, #16384	; 0x4000
   19430:	beq	19488 <argp_error@@Base+0x2fc>
   19434:	ldr	r3, [r7, #4]
   19438:	add	r1, r3, #1
   1943c:	str	r1, [r7, #4]
   19440:	strb	r4, [r3]
   19444:	ldr	r3, [sl, #8]
   19448:	cmp	r3, #0
   1944c:	beq	1947c <argp_error@@Base+0x2f0>
   19450:	ldr	r3, [r7, #4]
   19454:	mov	r2, #58	; 0x3a
   19458:	add	r1, r3, #1
   1945c:	str	r1, [r7, #4]
   19460:	strb	r2, [r3]
   19464:	ldr	r3, [sl, #12]
   19468:	tst	r3, #1
   1946c:	ldrne	r3, [r7, #4]
   19470:	addne	r1, r3, #1
   19474:	strne	r1, [r7, #4]
   19478:	strbne	r2, [r3]
   1947c:	ldr	r3, [r7, #4]
   19480:	mov	r2, #0
   19484:	strb	r2, [r3]
   19488:	ldr	r4, [fp, #-24]	; 0xffffffe8
   1948c:	cmp	r4, #0
   19490:	beq	19548 <argp_error@@Base+0x3bc>
   19494:	ldr	r8, [r7]
   19498:	ldr	r6, [r8, #8]
   1949c:	ldr	r0, [r6]
   194a0:	cmp	r0, #0
   194a4:	beq	194c8 <argp_error@@Base+0x33c>
   194a8:	mov	r9, r6
   194ac:	mov	r1, r4
   194b0:	bl	11684 <strcmp@plt>
   194b4:	cmp	r0, #0
   194b8:	beq	19550 <argp_error@@Base+0x3c4>
   194bc:	ldr	r0, [r9, #16]!
   194c0:	cmp	r0, #0
   194c4:	bne	194ac <argp_error@@Base+0x320>
   194c8:	ldr	r3, [sl, #8]
   194cc:	ldr	r1, [r7, #8]
   194d0:	cmp	r3, #0
   194d4:	str	r4, [r1]
   194d8:	beq	194ec <argp_error@@Base+0x360>
   194dc:	ldr	r3, [sl, #12]
   194e0:	tst	r3, #1
   194e4:	moveq	r5, #1
   194e8:	movne	r5, #2
   194ec:	str	r5, [r1, #4]
   194f0:	ldr	ip, [fp, #-20]	; 0xffffffec
   194f4:	mov	r3, #0
   194f8:	cmp	ip, r3
   194fc:	str	r3, [r1, #8]
   19500:	ldr	r2, [sp, #24]
   19504:	ldr	r3, [r8, #48]	; 0x30
   19508:	ldreq	ip, [sl, #4]
   1950c:	sub	r3, r2, r3
   19510:	bic	ip, ip, #-16777216	; 0xff000000
   19514:	asr	r3, r3, #2
   19518:	add	lr, r1, #16
   1951c:	rsb	r0, r3, r3, lsl #3
   19520:	add	r0, r0, r0, lsl #6
   19524:	add	r0, r3, r0, lsl #3
   19528:	rsb	r0, r0, r0, lsl #15
   1952c:	add	r3, r3, r0, lsl #3
   19530:	add	r3, r3, #1
   19534:	add	r3, ip, r3, lsl #24
   19538:	str	r3, [r1, #12]
   1953c:	mov	r3, #0
   19540:	str	lr, [r7, #8]
   19544:	str	r3, [r1, #16]
   19548:	add	fp, fp, #24
   1954c:	b	193d0 <argp_error@@Base+0x244>
   19550:	sub	r6, r9, r6
   19554:	cmn	r6, #15
   19558:	bge	19548 <argp_error@@Base+0x3bc>
   1955c:	b	194c8 <argp_error@@Base+0x33c>
   19560:	ldr	r3, [fp, #-8]
   19564:	cmp	r3, #0
   19568:	bne	193ec <argp_error@@Base+0x260>
   1956c:	ldr	r3, [fp, #-4]
   19570:	cmp	r3, #0
   19574:	bne	193ec <argp_error@@Base+0x260>
   19578:	ldr	r3, [sp, #12]
   1957c:	ldr	r8, [sp, #28]
   19580:	ldr	r9, [sp, #24]
   19584:	ldr	r3, [r3, #4]
   19588:	b	195a4 <argp_error@@Base+0x418>
   1958c:	ldr	r3, [sp, #12]
   19590:	ldr	r3, [r3, #4]
   19594:	cmp	r3, #0
   19598:	moveq	r0, r9
   1959c:	moveq	r9, r3
   195a0:	beq	19614 <argp_error@@Base+0x488>
   195a4:	ldr	r2, [r7, #4]
   195a8:	ldr	r1, [sp, #12]
   195ac:	str	r3, [r9]
   195b0:	cmp	r8, #0
   195b4:	stmib	r9, {r1, r2}
   195b8:	ldr	r2, [sp, #16]
   195bc:	mov	r3, #0
   195c0:	str	r2, [r9, #16]
   195c4:	ldr	r2, [sp, #20]
   195c8:	str	r3, [r9, #12]
   195cc:	str	r2, [r9, #20]
   195d0:	str	r3, [r9, #24]
   195d4:	str	r3, [r9, #32]
   195d8:	str	r3, [r9, #28]
   195dc:	beq	19610 <argp_error@@Base+0x484>
   195e0:	ldr	r2, [r8]
   195e4:	cmp	r2, r3
   195e8:	beq	1965c <argp_error@@Base+0x4d0>
   195ec:	add	r3, r3, #1
   195f0:	ldr	r2, [r8, r3, lsl #4]
   195f4:	cmp	r2, #0
   195f8:	bne	195ec <argp_error@@Base+0x460>
   195fc:	lsl	r3, r3, #2
   19600:	ldr	r2, [r7, #12]
   19604:	add	r3, r2, r3
   19608:	str	r2, [r9, #28]
   1960c:	str	r3, [r7, #12]
   19610:	add	r0, r9, #36	; 0x24
   19614:	cmp	r8, #0
   19618:	beq	19654 <argp_error@@Base+0x4c8>
   1961c:	ldr	r1, [r8]
   19620:	cmp	r1, #0
   19624:	beq	19654 <argp_error@@Base+0x4c8>
   19628:	mov	r2, #0
   1962c:	add	r4, r2, #1
   19630:	mov	r3, r0
   19634:	str	r7, [sp]
   19638:	mov	r0, r1
   1963c:	mov	r1, r9
   19640:	bl	19398 <argp_error@@Base+0x20c>
   19644:	ldr	r1, [r8, r4, lsl #4]
   19648:	mov	r2, r4
   1964c:	cmp	r1, #0
   19650:	bne	1962c <argp_error@@Base+0x4a0>
   19654:	add	sp, sp, #36	; 0x24
   19658:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1965c:	mov	r3, r2
   19660:	b	19600 <argp_error@@Base+0x474>
   19664:	cmp	r0, #86	; 0x56
   19668:	beq	19674 <argp_error@@Base+0x4e8>
   1966c:	mov	r0, #7
   19670:	bx	lr
   19674:	ldr	r3, [pc, #104]	; 196e4 <argp_error@@Base+0x558>
   19678:	push	{r4, lr}
   1967c:	mov	r4, r2
   19680:	ldr	r3, [r3]
   19684:	cmp	r3, #0
   19688:	beq	196ac <argp_error@@Base+0x520>
   1968c:	mov	r1, r2
   19690:	ldr	r0, [r2, #48]	; 0x30
   19694:	blx	r3
   19698:	ldr	r0, [r4, #16]
   1969c:	ands	r0, r0, #32
   196a0:	beq	196e0 <argp_error@@Base+0x554>
   196a4:	mov	r0, #0
   196a8:	pop	{r4, pc}
   196ac:	ldr	r3, [pc, #52]	; 196e8 <argp_error@@Base+0x55c>
   196b0:	ldr	r2, [r3]
   196b4:	cmp	r2, #0
   196b8:	beq	196cc <argp_error@@Base+0x540>
   196bc:	ldr	r1, [pc, #40]	; 196ec <argp_error@@Base+0x560>
   196c0:	ldr	r0, [r4, #48]	; 0x30
   196c4:	bl	1193c <fprintf@plt>
   196c8:	b	19698 <argp_error@@Base+0x50c>
   196cc:	ldr	r2, [pc, #28]	; 196f0 <argp_error@@Base+0x564>
   196d0:	ldr	r1, [pc, #28]	; 196f4 <argp_error@@Base+0x568>
   196d4:	mov	r0, r4
   196d8:	bl	1918c <argp_error@@Base>
   196dc:	b	19698 <argp_error@@Base+0x50c>
   196e0:	bl	1190c <exit@plt>
   196e4:	andeq	pc, r2, ip, lsl #20
   196e8:	muleq	r3, r8, r0
   196ec:	andeq	lr, r1, ip, lsl r6
   196f0:	muleq	r1, r8, r4
   196f4:			; <UNDEFINED> instruction: 0x0001dfbc
   196f8:	cmn	r0, #3
   196fc:	push	{r4, r5, lr}
   19700:	mov	r4, r2
   19704:	sub	sp, sp, #12
   19708:	beq	197ec <argp_error@@Base+0x660>
   1970c:	ble	1977c <argp_error@@Base+0x5f0>
   19710:	cmn	r0, #2
   19714:	beq	1973c <argp_error@@Base+0x5b0>
   19718:	cmp	r0, #63	; 0x3f
   1971c:	bne	197e0 <argp_error@@Base+0x654>
   19720:	mov	r0, r4
   19724:	ldr	r2, [pc, #236]	; 19818 <argp_error@@Base+0x68c>
   19728:	ldr	r1, [r4, #48]	; 0x30
   1972c:	bl	190dc <argp_state_help@@Base>
   19730:	mov	r0, #0
   19734:	add	sp, sp, #12
   19738:	pop	{r4, r5, pc}
   1973c:	ldr	r3, [pc, #216]	; 1981c <argp_error@@Base+0x690>
   19740:	mov	r0, r1
   19744:	str	r1, [sp, #4]
   19748:	str	r1, [r3]
   1974c:	bl	1a61c <argp_parse@@Base+0xdec>
   19750:	ldr	r3, [r4, #16]
   19754:	ldr	r2, [pc, #196]	; 19820 <argp_error@@Base+0x694>
   19758:	and	r3, r3, #3
   1975c:	cmp	r3, #1
   19760:	ldr	r1, [sp, #4]
   19764:	str	r0, [r4, #40]	; 0x28
   19768:	str	r0, [r2]
   1976c:	beq	19808 <argp_error@@Base+0x67c>
   19770:	mov	r0, #0
   19774:	add	sp, sp, #12
   19778:	pop	{r4, r5, pc}
   1977c:	cmn	r0, #4
   19780:	bne	197e0 <argp_error@@Base+0x654>
   19784:	cmp	r1, #0
   19788:	ldr	r0, [pc, #148]	; 19824 <argp_error@@Base+0x698>
   1978c:	mov	r2, #10
   19790:	movne	r0, r1
   19794:	mov	r1, #0
   19798:	bl	11690 <strtol@plt>
   1979c:	ldr	r4, [pc, #132]	; 19828 <argp_error@@Base+0x69c>
   197a0:	str	r0, [r4]
   197a4:	ldr	r3, [r4]
   197a8:	cmp	r3, #0
   197ac:	sub	r3, r3, #1
   197b0:	str	r3, [r4]
   197b4:	ble	19770 <argp_error@@Base+0x5e4>
   197b8:	mov	r5, #1
   197bc:	mov	r0, r5
   197c0:	bl	11774 <sleep@plt>
   197c4:	ldr	r3, [r4]
   197c8:	cmp	r3, #0
   197cc:	sub	r3, r3, #1
   197d0:	str	r3, [r4]
   197d4:	bgt	197bc <argp_error@@Base+0x630>
   197d8:	mov	r0, #0
   197dc:	b	19774 <argp_error@@Base+0x5e8>
   197e0:	mov	r0, #7
   197e4:	add	sp, sp, #12
   197e8:	pop	{r4, r5, pc}
   197ec:	mov	r0, r4
   197f0:	ldr	r2, [pc, #52]	; 1982c <argp_error@@Base+0x6a0>
   197f4:	ldr	r1, [r4, #48]	; 0x30
   197f8:	bl	190dc <argp_state_help@@Base>
   197fc:	mov	r0, #0
   19800:	add	sp, sp, #12
   19804:	pop	{r4, r5, pc}
   19808:	ldr	r3, [r4, #8]
   1980c:	mov	r0, #0
   19810:	str	r1, [r3]
   19814:	b	19734 <argp_error@@Base+0x5a8>
   19818:	andeq	r0, r0, sl, ror r2
   1981c:	andeq	pc, r2, r4, asr #11
   19820:	andeq	pc, r2, r0, asr #11
   19824:			; <UNDEFINED> instruction: 0x0001e4bc
   19828:	andeq	pc, r2, r8, lsl #20
   1982c:	andeq	r0, r0, r1, lsl #4

00019830 <argp_parse@@Base>:
   19830:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19834:	add	fp, sp, #32
   19838:	tst	r3, #1
   1983c:	sub	sp, sp, #228	; 0xe4
   19840:	mov	r6, r3
   19844:	mov	r7, r0
   19848:	str	r1, [fp, #-240]	; 0xffffff10
   1984c:	str	r2, [fp, #-232]	; 0xffffff18
   19850:	bne	1987c <argp_parse@@Base+0x4c>
   19854:	ldr	r3, [pc, #3260]	; 1a518 <argp_parse@@Base+0xce8>
   19858:	ldr	r4, [pc, #3260]	; 1a51c <argp_parse@@Base+0xcec>
   1985c:	ldr	r2, [r3]
   19860:	cmp	r2, #0
   19864:	ldreq	r2, [fp, #-232]	; 0xffffff18
   19868:	ldreq	r2, [r2]
   1986c:	streq	r2, [r3]
   19870:	ldr	r3, [r4]
   19874:	cmp	r3, #0
   19878:	beq	19f1c <argp_parse@@Base+0x6ec>
   1987c:	ands	r3, r6, #16
   19880:	beq	19e24 <argp_parse@@Base+0x5f4>
   19884:	sub	r4, fp, #196	; 0xc4
   19888:	mov	r0, r4
   1988c:	mov	r2, #36	; 0x24
   19890:	mov	r1, #0
   19894:	bl	11984 <memset@plt>
   19898:	ands	r3, r6, #4
   1989c:	str	r3, [fp, #-244]	; 0xffffff0c
   198a0:	mov	r3, #0
   198a4:	moveq	r0, #1
   198a8:	movne	r0, #0
   198ac:	cmp	r7, r3
   198b0:	str	r3, [fp, #-224]	; 0xffffff20
   198b4:	str	r3, [fp, #-220]	; 0xffffff24
   198b8:	str	r3, [fp, #-216]	; 0xffffff28
   198bc:	str	r0, [fp, #-228]	; 0xffffff1c
   198c0:	beq	19d28 <argp_parse@@Base+0x4f8>
   198c4:	mov	r0, r7
   198c8:	sub	r1, fp, #228	; 0xe4
   198cc:	bl	192d0 <argp_error@@Base+0x144>
   198d0:	ldr	r5, [fp, #-220]	; 0xffffff24
   198d4:	ldr	r9, [fp, #-216]	; 0xffffff28
   198d8:	add	r5, r5, #1
   198dc:	ldr	r3, [fp, #-224]	; 0xffffff20
   198e0:	add	r5, r5, r5, lsl #3
   198e4:	lsl	r2, r9, #2
   198e8:	lsl	r5, r5, #2
   198ec:	add	r3, r3, #1
   198f0:	add	sl, r2, r5
   198f4:	ldr	r0, [fp, #-228]	; 0xffffff1c
   198f8:	add	r9, sl, r3, lsl #4
   198fc:	str	r2, [fp, #-236]	; 0xffffff14
   19900:	add	r0, r9, r0
   19904:	add	r0, r0, #1
   19908:	bl	1b5a8 <argp_parse@@Base+0x1d78>
   1990c:	cmp	r0, #0
   19910:	mov	r8, r0
   19914:	str	r0, [fp, #-40]	; 0xffffffd8
   19918:	moveq	r5, #12
   1991c:	beq	19d1c <argp_parse@@Base+0x4ec>
   19920:	mov	r3, #1
   19924:	str	r3, [fp, #-196]	; 0xffffff3c
   19928:	str	r3, [fp, #-192]	; 0xffffff40
   1992c:	ldm	r4!, {r0, r1, r2, r3}
   19930:	sub	ip, fp, #148	; 0x94
   19934:	add	r5, r8, r5
   19938:	str	r5, [fp, #-104]	; 0xffffff98
   1993c:	stmia	ip!, {r0, r1, r2, r3}
   19940:	add	r3, r8, sl
   19944:	mov	lr, r3
   19948:	ldm	r4!, {r0, r1, r2, r3}
   1994c:	add	sl, r8, r9
   19950:	str	lr, [fp, #-248]	; 0xffffff08
   19954:	str	lr, [fp, #-152]	; 0xffffff68
   19958:	ldr	lr, [r4]
   1995c:	stmia	ip!, {r0, r1, r2, r3}
   19960:	mov	r0, r5
   19964:	ldr	r2, [fp, #-236]	; 0xffffff14
   19968:	mov	r1, #0
   1996c:	str	lr, [ip]
   19970:	str	r8, [fp, #-112]	; 0xffffff90
   19974:	str	sl, [fp, #-156]	; 0xffffff64
   19978:	bl	11984 <memset@plt>
   1997c:	ldr	lr, [fp, #-248]	; 0xffffff08
   19980:	sub	r4, fp, #160	; 0xa0
   19984:	tst	r6, #8
   19988:	str	lr, [fp, #-204]	; 0xffffff34
   1998c:	str	sl, [fp, #-208]	; 0xffffff30
   19990:	str	r5, [fp, #-200]	; 0xffffff38
   19994:	str	r4, [fp, #-212]	; 0xffffff2c
   19998:	bne	19d3c <argp_parse@@Base+0x50c>
   1999c:	ldr	r3, [fp, #-244]	; 0xffffff0c
   199a0:	cmp	r3, #0
   199a4:	addne	r3, sl, #1
   199a8:	movne	r2, #43	; 0x2b
   199ac:	strbne	r2, [sl]
   199b0:	movne	sl, r3
   199b4:	strne	r3, [fp, #-208]	; 0xffffff30
   199b8:	mov	r2, #0
   199bc:	strb	r2, [sl]
   199c0:	ldr	r3, [fp, #-204]	; 0xffffff34
   199c4:	cmp	r7, r2
   199c8:	str	r2, [r3]
   199cc:	str	r7, [fp, #-160]	; 0xffffff60
   199d0:	beq	19ee4 <argp_parse@@Base+0x6b4>
   199d4:	sub	r1, fp, #212	; 0xd4
   199d8:	mov	r0, r7
   199dc:	str	r1, [sp]
   199e0:	ldr	r3, [fp, #-112]	; 0xffffff90
   199e4:	mov	r1, r2
   199e8:	bl	19398 <argp_error@@Base+0x20c>
   199ec:	ldr	r7, [fp, #-160]	; 0xffffff60
   199f0:	ldr	r5, [fp, #-112]	; 0xffffff90
   199f4:	mov	r8, r0
   199f8:	str	r0, [fp, #-108]	; 0xffffff94
   199fc:	mov	r2, #56	; 0x38
   19a00:	mov	r1, #0
   19a04:	sub	r0, fp, #96	; 0x60
   19a08:	bl	11984 <memset@plt>
   19a0c:	ldr	r2, [pc, #2828]	; 1a520 <argp_parse@@Base+0xcf0>
   19a10:	ldr	r3, [pc, #2828]	; 1a524 <argp_parse@@Base+0xcf4>
   19a14:	ldr	r0, [fp, #-240]	; 0xffffff10
   19a18:	ldr	r1, [r2]
   19a1c:	str	r0, [fp, #-92]	; 0xffffffa4
   19a20:	ldr	r2, [r3]
   19a24:	ldr	r0, [fp, #-232]	; 0xffffff18
   19a28:	mov	r3, #1
   19a2c:	cmp	r5, r8
   19a30:	str	r7, [fp, #-96]	; 0xffffffa0
   19a34:	str	r0, [fp, #-88]	; 0xffffffa8
   19a38:	str	r6, [fp, #-80]	; 0xffffffb0
   19a3c:	str	r4, [fp, #-44]	; 0xffffffd4
   19a40:	str	r1, [fp, #-52]	; 0xffffffcc
   19a44:	str	r2, [fp, #-48]	; 0xffffffd0
   19a48:	str	r3, [fp, #-100]	; 0xffffff9c
   19a4c:	bcc	19d50 <argp_parse@@Base+0x520>
   19a50:	ldr	r3, [fp, #-80]	; 0xffffffb0
   19a54:	tst	r3, #2
   19a58:	bne	19ef4 <argp_parse@@Base+0x6c4>
   19a5c:	ldr	r3, [fp, #-88]	; 0xffffffa8
   19a60:	ldr	r4, [fp, #-92]	; 0xffffffa4
   19a64:	mov	r2, #1
   19a68:	str	r2, [fp, #-144]	; 0xffffff70
   19a6c:	ldr	r2, [fp, #-232]	; 0xffffff18
   19a70:	cmp	r2, r3
   19a74:	beq	1a3f4 <argp_parse@@Base+0xbc4>
   19a78:	ldr	r3, [pc, #2716]	; 1a51c <argp_parse@@Base+0xcec>
   19a7c:	ldr	r3, [r3]
   19a80:	str	r3, [fp, #-56]	; 0xffffffc8
   19a84:	ldr	r2, [fp, #-100]	; 0xffffff9c
   19a88:	ldr	r5, [fp, #-84]	; 0xffffffac
   19a8c:	ldr	sl, [pc, #2708]	; 1a528 <argp_parse@@Base+0xcf8>
   19a90:	mov	r0, r4
   19a94:	mov	r6, #0
   19a98:	ldr	r3, [fp, #-72]	; 0xffffffb8
   19a9c:	cmp	r3, #0
   19aa0:	beq	19f30 <argp_parse@@Base+0x700>
   19aa4:	cmp	r3, r5
   19aa8:	strgt	r6, [fp, #-72]	; 0xffffffb8
   19aac:	bgt	19f30 <argp_parse@@Base+0x700>
   19ab0:	cmp	r5, r0
   19ab4:	blt	1a2cc <argp_parse@@Base+0xa9c>
   19ab8:	cmp	r5, r0
   19abc:	bne	1a2d8 <argp_parse@@Base+0xaa8>
   19ac0:	ldr	r3, [fp, #-112]	; 0xffffff90
   19ac4:	ldr	ip, [fp, #-108]	; 0xffffff94
   19ac8:	cmp	r3, ip
   19acc:	bcs	1a4bc <argp_parse@@Base+0xc8c>
   19ad0:	mov	r5, #0
   19ad4:	add	r4, r3, #36	; 0x24
   19ad8:	mov	r7, r5
   19adc:	ldr	r6, [pc, #2632]	; 1a52c <argp_parse@@Base+0xcfc>
   19ae0:	mov	r0, r5
   19ae4:	b	19b2c <argp_parse@@Base+0x2fc>
   19ae8:	ldr	ip, [r4, #-4]
   19aec:	str	ip, [fp, #-60]	; 0xffffffc4
   19af0:	ldr	ip, [r4, #-12]
   19af4:	str	ip, [fp, #-68]	; 0xffffffbc
   19af8:	ldr	ip, [r4, #-8]
   19afc:	str	r3, [fp, #-76]	; 0xffffffb4
   19b00:	str	ip, [fp, #-64]	; 0xffffffc0
   19b04:	blx	r5
   19b08:	ldr	r3, [fp, #-60]	; 0xffffffc4
   19b0c:	str	r3, [r4, #-4]
   19b10:	ldr	ip, [fp, #-108]	; 0xffffff94
   19b14:	cmp	ip, r4
   19b18:	bls	1a464 <argp_parse@@Base+0xc34>
   19b1c:	cmp	r0, #7
   19b20:	cmpne	r0, #0
   19b24:	bne	1a440 <argp_parse@@Base+0xc10>
   19b28:	add	r4, r4, #36	; 0x24
   19b2c:	ldr	r3, [r4, #-24]	; 0xffffffe8
   19b30:	cmp	r3, #0
   19b34:	bne	19b14 <argp_parse@@Base+0x2e4>
   19b38:	ldr	r5, [r4, #-36]	; 0xffffffdc
   19b3c:	sub	r2, fp, #96	; 0x60
   19b40:	cmp	r5, #0
   19b44:	mov	r1, r7
   19b48:	mov	r0, r6
   19b4c:	bne	19ae8 <argp_parse@@Base+0x2b8>
   19b50:	cmp	ip, r4
   19b54:	mov	r0, #7
   19b58:	bhi	19b28 <argp_parse@@Base+0x2f8>
   19b5c:	ldr	r3, [fp, #-112]	; 0xffffff90
   19b60:	sub	r4, ip, #36	; 0x24
   19b64:	cmp	r4, r3
   19b68:	movcs	r5, #7
   19b6c:	bcc	19bf4 <argp_parse@@Base+0x3c4>
   19b70:	cmp	r5, #7
   19b74:	cmpne	r5, #0
   19b78:	bne	1a454 <argp_parse@@Base+0xc24>
   19b7c:	sub	r4, r4, #36	; 0x24
   19b80:	mov	r7, #0
   19b84:	ldr	r6, [pc, #2468]	; 1a530 <argp_parse@@Base+0xd00>
   19b88:	b	19bd4 <argp_parse@@Base+0x3a4>
   19b8c:	ldr	r3, [r4, #68]	; 0x44
   19b90:	ldr	ip, [r4, #48]	; 0x30
   19b94:	str	r3, [fp, #-60]	; 0xffffffc4
   19b98:	ldr	r3, [r4, #60]	; 0x3c
   19b9c:	str	r3, [fp, #-68]	; 0xffffffbc
   19ba0:	ldr	r3, [r4, #64]	; 0x40
   19ba4:	str	ip, [fp, #-76]	; 0xffffffb4
   19ba8:	str	r3, [fp, #-64]	; 0xffffffc0
   19bac:	blx	r5
   19bb0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   19bb4:	str	r3, [r4, #68]	; 0x44
   19bb8:	ldr	r3, [fp, #-112]	; 0xffffff90
   19bbc:	cmp	r4, r3
   19bc0:	bcc	1a4b4 <argp_parse@@Base+0xc84>
   19bc4:	cmp	r0, #7
   19bc8:	cmpne	r0, #0
   19bcc:	bne	1a424 <argp_parse@@Base+0xbf4>
   19bd0:	sub	r4, r4, #36	; 0x24
   19bd4:	ldr	r5, [r4, #36]	; 0x24
   19bd8:	sub	r2, fp, #96	; 0x60
   19bdc:	cmp	r5, #0
   19be0:	mov	r1, r7
   19be4:	mov	r0, r6
   19be8:	bne	19b8c <argp_parse@@Base+0x35c>
   19bec:	cmp	r4, r3
   19bf0:	bcs	19bd0 <argp_parse@@Base+0x3a0>
   19bf4:	ldr	r2, [fp, #4]
   19bf8:	cmp	r2, #0
   19bfc:	beq	19c18 <argp_parse@@Base+0x3e8>
   19c00:	mov	r5, #0
   19c04:	ldr	r1, [fp, #4]
   19c08:	ldr	r2, [fp, #-84]	; 0xffffffac
   19c0c:	str	r2, [r1]
   19c10:	cmp	r5, #0
   19c14:	bne	1a434 <argp_parse@@Base+0xc04>
   19c18:	ldr	ip, [fp, #-108]	; 0xffffff94
   19c1c:	b	1a2f0 <argp_parse@@Base+0xac0>
   19c20:	ldr	r3, [fp, #-112]	; 0xffffff90
   19c24:	mov	r5, r0
   19c28:	ldr	ip, [fp, #-108]	; 0xffffff94
   19c2c:	cmp	ip, r3
   19c30:	bls	1a3ec <argp_parse@@Base+0xbbc>
   19c34:	ldr	r7, [pc, #2296]	; 1a534 <argp_parse@@Base+0xd04>
   19c38:	add	r4, r3, #36	; 0x24
   19c3c:	mov	r8, #0
   19c40:	ldr	r3, [r4, #-36]	; 0xffffffdc
   19c44:	sub	r2, fp, #96	; 0x60
   19c48:	cmp	r3, #0
   19c4c:	mov	r1, r8
   19c50:	mov	r0, r7
   19c54:	mov	r6, r4
   19c58:	beq	19c8c <argp_parse@@Base+0x45c>
   19c5c:	ldr	ip, [r4, #-4]
   19c60:	ldr	lr, [r4, #-24]	; 0xffffffe8
   19c64:	str	ip, [fp, #-60]	; 0xffffffc4
   19c68:	ldr	ip, [r4, #-12]
   19c6c:	str	ip, [fp, #-68]	; 0xffffffbc
   19c70:	ldr	ip, [r4, #-8]
   19c74:	str	lr, [fp, #-76]	; 0xffffffb4
   19c78:	str	ip, [fp, #-64]	; 0xffffffc0
   19c7c:	blx	r3
   19c80:	ldr	r3, [fp, #-60]	; 0xffffffc4
   19c84:	str	r3, [r4, #-4]
   19c88:	ldr	ip, [fp, #-108]	; 0xffffff94
   19c8c:	cmp	ip, r6
   19c90:	add	r4, r4, #36	; 0x24
   19c94:	bhi	19c40 <argp_parse@@Base+0x410>
   19c98:	ldr	r3, [fp, #-112]	; 0xffffff90
   19c9c:	sub	ip, ip, #36	; 0x24
   19ca0:	cmp	r3, ip
   19ca4:	bhi	19d0c <argp_parse@@Base+0x4dc>
   19ca8:	ldr	r8, [pc, #2184]	; 1a538 <argp_parse@@Base+0xd08>
   19cac:	sub	r4, ip, #36	; 0x24
   19cb0:	mov	r9, #0
   19cb4:	ldr	r6, [r4, #36]	; 0x24
   19cb8:	sub	r2, fp, #96	; 0x60
   19cbc:	cmp	r6, #0
   19cc0:	mov	r1, r9
   19cc4:	mov	r0, r8
   19cc8:	mov	r7, r4
   19ccc:	beq	19d00 <argp_parse@@Base+0x4d0>
   19cd0:	ldr	r3, [r4, #68]	; 0x44
   19cd4:	ldr	ip, [r4, #48]	; 0x30
   19cd8:	str	r3, [fp, #-60]	; 0xffffffc4
   19cdc:	ldr	r3, [r4, #60]	; 0x3c
   19ce0:	str	r3, [fp, #-68]	; 0xffffffbc
   19ce4:	ldr	r3, [r4, #64]	; 0x40
   19ce8:	str	ip, [fp, #-76]	; 0xffffffb4
   19cec:	str	r3, [fp, #-64]	; 0xffffffc0
   19cf0:	blx	r6
   19cf4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   19cf8:	str	r3, [r4, #68]	; 0x44
   19cfc:	ldr	r3, [fp, #-112]	; 0xffffff90
   19d00:	cmp	r3, r7
   19d04:	sub	r4, r4, #36	; 0x24
   19d08:	bls	19cb4 <argp_parse@@Base+0x484>
   19d0c:	cmp	r5, #7
   19d10:	moveq	r5, #22
   19d14:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19d18:	bl	1a89c <argp_parse@@Base+0x106c>
   19d1c:	mov	r0, r5
   19d20:	sub	sp, fp, #32
   19d24:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19d28:	mov	sl, #36	; 0x24
   19d2c:	mov	r5, sl
   19d30:	mov	r9, #52	; 0x34
   19d34:	str	r7, [fp, #-236]	; 0xffffff14
   19d38:	b	19900 <argp_parse@@Base+0xd0>
   19d3c:	add	sl, sl, #1
   19d40:	mov	r3, #45	; 0x2d
   19d44:	str	sl, [fp, #-208]	; 0xffffff30
   19d48:	strb	r3, [r8, r9]
   19d4c:	b	199b8 <argp_parse@@Base+0x188>
   19d50:	ldr	r3, [fp, #8]
   19d54:	add	r4, r5, #36	; 0x24
   19d58:	str	r3, [r5, #24]
   19d5c:	mov	r7, #0
   19d60:	ldr	r6, [pc, #2004]	; 1a53c <argp_parse@@Base+0xd0c>
   19d64:	b	19dbc <argp_parse@@Base+0x58c>
   19d68:	ldr	r2, [r4, #-4]
   19d6c:	ldr	r0, [r4, #-24]	; 0xffffffe8
   19d70:	str	r2, [fp, #-60]	; 0xffffffc4
   19d74:	ldr	r1, [r4, #-12]
   19d78:	sub	r2, fp, #96	; 0x60
   19d7c:	str	r1, [fp, #-68]	; 0xffffffbc
   19d80:	ldr	ip, [r4, #-8]
   19d84:	mov	r1, r7
   19d88:	str	r0, [fp, #-76]	; 0xffffffb4
   19d8c:	str	ip, [fp, #-64]	; 0xffffffc0
   19d90:	mov	r0, r6
   19d94:	blx	r3
   19d98:	ldr	r3, [fp, #-60]	; 0xffffffc4
   19d9c:	str	r3, [r4, #-4]
   19da0:	ldr	r3, [fp, #-108]	; 0xffffff94
   19da4:	cmp	r3, r4
   19da8:	bls	1a4d8 <argp_parse@@Base+0xca8>
   19dac:	cmp	r0, #7
   19db0:	cmpne	r0, #0
   19db4:	bne	19ed4 <argp_parse@@Base+0x6a4>
   19db8:	add	r4, r4, #36	; 0x24
   19dbc:	ldr	r3, [r4, #-20]	; 0xffffffec
   19dc0:	cmp	r3, #0
   19dc4:	ldrne	r3, [r3, #28]
   19dc8:	ldrne	r2, [r4, #-16]
   19dcc:	ldrne	r3, [r3, r2, lsl #2]
   19dd0:	strne	r3, [r4, #-12]
   19dd4:	ldr	r3, [r4, #-36]	; 0xffffffdc
   19dd8:	cmp	r3, #0
   19ddc:	bne	19d68 <argp_parse@@Base+0x538>
   19de0:	ldr	r3, [r4, #-32]	; 0xffffffe0
   19de4:	ldr	r3, [r3, #16]
   19de8:	cmp	r3, #0
   19dec:	beq	19e14 <argp_parse@@Base+0x5e4>
   19df0:	ldr	r3, [r3]
   19df4:	cmp	r3, #0
   19df8:	beq	19e14 <argp_parse@@Base+0x5e4>
   19dfc:	ldr	r3, [r4, #-8]
   19e00:	ldr	r2, [r4, #-12]
   19e04:	str	r2, [r3]
   19e08:	ldr	r3, [r4, #-36]	; 0xffffffdc
   19e0c:	cmp	r3, #0
   19e10:	bne	19d68 <argp_parse@@Base+0x538>
   19e14:	ldr	r3, [fp, #-108]	; 0xffffff94
   19e18:	cmp	r3, r4
   19e1c:	bhi	19db8 <argp_parse@@Base+0x588>
   19e20:	b	19a50 <argp_parse@@Base+0x220>
   19e24:	sub	sp, sp, #72	; 0x48
   19e28:	add	r4, sp, #8
   19e2c:	sub	sp, sp, #40	; 0x28
   19e30:	add	r5, sp, #8
   19e34:	mov	r1, r3
   19e38:	mov	r0, r4
   19e3c:	mov	r2, #64	; 0x40
   19e40:	str	r3, [r5]
   19e44:	str	r3, [r5, #4]
   19e48:	str	r3, [r5, #8]
   19e4c:	str	r3, [r5, #12]
   19e50:	str	r3, [r5, #20]
   19e54:	str	r3, [r5, #24]
   19e58:	str	r4, [r5, #16]
   19e5c:	bl	11984 <memset@plt>
   19e60:	ldr	r3, [pc, #1752]	; 1a540 <argp_parse@@Base+0xd10>
   19e64:	cmp	r7, #0
   19e68:	strne	r7, [r4]
   19e6c:	ldr	r3, [r3]
   19e70:	addne	r4, r4, #16
   19e74:	ldr	r2, [pc, #1736]	; 1a544 <argp_parse@@Base+0xd14>
   19e78:	cmp	r3, #0
   19e7c:	str	r2, [r4]
   19e80:	beq	1a40c <argp_parse@@Base+0xbdc>
   19e84:	ldr	r2, [pc, #1724]	; 1a548 <argp_parse@@Base+0xd18>
   19e88:	add	r3, r4, #32
   19e8c:	str	r2, [r4, #16]
   19e90:	mov	r8, #0
   19e94:	sub	r4, fp, #196	; 0xc4
   19e98:	str	r8, [r3]
   19e9c:	mov	r1, r8
   19ea0:	mov	r0, r4
   19ea4:	mov	r2, #36	; 0x24
   19ea8:	bl	11984 <memset@plt>
   19eac:	ands	r3, r6, #4
   19eb0:	str	r3, [fp, #-244]	; 0xffffff0c
   19eb4:	moveq	r3, #1
   19eb8:	movne	r3, r8
   19ebc:	mov	r7, r5
   19ec0:	str	r8, [fp, #-224]	; 0xffffff20
   19ec4:	str	r8, [fp, #-220]	; 0xffffff24
   19ec8:	str	r8, [fp, #-216]	; 0xffffff28
   19ecc:	str	r3, [fp, #-228]	; 0xffffff1c
   19ed0:	b	198c4 <argp_parse@@Base+0x94>
   19ed4:	mov	r5, r0
   19ed8:	mov	r0, r5
   19edc:	sub	sp, fp, #32
   19ee0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19ee4:	ldr	r5, [fp, #-112]	; 0xffffff90
   19ee8:	mov	r8, r5
   19eec:	str	r5, [fp, #-108]	; 0xffffff94
   19ef0:	b	199fc <argp_parse@@Base+0x1cc>
   19ef4:	tst	r3, #1
   19ef8:	mov	r3, #0
   19efc:	str	r3, [fp, #-144]	; 0xffffff70
   19f00:	ldr	r4, [fp, #-92]	; 0xffffffa4
   19f04:	ldr	r3, [fp, #-88]	; 0xffffffa8
   19f08:	subne	r3, r3, #4
   19f0c:	addne	r4, r4, #1
   19f10:	strne	r3, [fp, #-88]	; 0xffffffa8
   19f14:	strne	r4, [fp, #-92]	; 0xffffffa4
   19f18:	b	19a6c <argp_parse@@Base+0x23c>
   19f1c:	ldr	r3, [fp, #-232]	; 0xffffff18
   19f20:	ldr	r0, [r3]
   19f24:	bl	1a61c <argp_parse@@Base+0xdec>
   19f28:	str	r0, [r4]
   19f2c:	b	1987c <argp_parse@@Base+0x4c>
   19f30:	cmp	r2, #0
   19f34:	beq	19ab0 <argp_parse@@Base+0x280>
   19f38:	ldr	r3, [fp, #-80]	; 0xffffffb0
   19f3c:	str	r5, [fp, #-148]	; 0xffffff6c
   19f40:	ands	ip, r3, #64	; 0x40
   19f44:	mvn	r3, #0
   19f48:	str	r3, [fp, #-140]	; 0xffffff74
   19f4c:	ldr	r2, [fp, #-156]	; 0xffffff64
   19f50:	ldr	r3, [fp, #-152]	; 0xffffff68
   19f54:	ldr	r1, [fp, #-88]	; 0xffffffa8
   19f58:	beq	1a278 <argp_parse@@Base+0xa48>
   19f5c:	sub	ip, fp, #148	; 0x94
   19f60:	stm	sp, {r6, ip}
   19f64:	bl	1a970 <argp_parse@@Base+0x1140>
   19f68:	ldr	r5, [fp, #-148]	; 0xffffff6c
   19f6c:	str	r5, [fp, #-84]	; 0xffffffac
   19f70:	mov	r7, r0
   19f74:	cmn	r7, #1
   19f78:	beq	1a298 <argp_parse@@Base+0xa68>
   19f7c:	cmp	r7, #63	; 0x3f
   19f80:	beq	1a39c <argp_parse@@Base+0xb6c>
   19f84:	cmp	r7, #1
   19f88:	beq	1a0e0 <argp_parse@@Base+0x8b0>
   19f8c:	asrs	r8, r7, #24
   19f90:	bne	1a03c <argp_parse@@Base+0x80c>
   19f94:	mov	r1, r7
   19f98:	ldr	r0, [fp, #-156]	; 0xffffff64
   19f9c:	bl	11930 <strchr@plt>
   19fa0:	cmp	r0, #0
   19fa4:	beq	1a0ac <argp_parse@@Base+0x87c>
   19fa8:	ldr	r4, [fp, #-112]	; 0xffffff90
   19fac:	ldr	r2, [fp, #-108]	; 0xffffff94
   19fb0:	cmp	r4, r2
   19fb4:	bcc	19fc8 <argp_parse@@Base+0x798>
   19fb8:	b	1a0ac <argp_parse@@Base+0x87c>
   19fbc:	add	r4, r4, #36	; 0x24
   19fc0:	cmp	r4, r2
   19fc4:	bcs	1a0ac <argp_parse@@Base+0x87c>
   19fc8:	ldr	r3, [r4, #8]
   19fcc:	cmp	r0, r3
   19fd0:	bcs	19fbc <argp_parse@@Base+0x78c>
   19fd4:	ldr	r3, [r4]
   19fd8:	cmp	r3, #0
   19fdc:	beq	1a0ac <argp_parse@@Base+0x87c>
   19fe0:	ldr	r2, [r4, #32]
   19fe4:	ldr	r0, [r4, #28]
   19fe8:	ldr	ip, [r4, #24]
   19fec:	str	r2, [fp, #-60]	; 0xffffffc4
   19ff0:	ldr	r2, [r4, #12]
   19ff4:	ldr	r1, [fp, #-136]	; 0xffffff78
   19ff8:	str	r0, [fp, #-64]	; 0xffffffc0
   19ffc:	str	r2, [fp, #-76]	; 0xffffffb4
   1a000:	str	ip, [fp, #-68]	; 0xffffffbc
   1a004:	sub	r2, fp, #96	; 0x60
   1a008:	mov	r0, r7
   1a00c:	blx	r3
   1a010:	mov	r8, r6
   1a014:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1a018:	str	r3, [r4, #32]
   1a01c:	cmp	r0, #7
   1a020:	beq	1a0a4 <argp_parse@@Base+0x874>
   1a024:	cmp	r0, #0
   1a028:	bne	19c20 <argp_parse@@Base+0x3f0>
   1a02c:	ldr	r2, [fp, #-100]	; 0xffffff9c
   1a030:	ldr	r5, [fp, #-84]	; 0xffffffac
   1a034:	ldr	r0, [fp, #-92]	; 0xffffffa4
   1a038:	b	19a98 <argp_parse@@Base+0x268>
   1a03c:	add	r3, r8, r8, lsl #3
   1a040:	ldr	r2, [fp, #-112]	; 0xffffff90
   1a044:	lsl	r3, r3, #2
   1a048:	sub	r3, r3, #36	; 0x24
   1a04c:	add	r4, r2, r3
   1a050:	ldr	r5, [r2, r3]
   1a054:	ands	r3, r7, #8388608	; 0x800000
   1a058:	movne	r3, #-16777216	; 0xff000000
   1a05c:	cmp	r5, #0
   1a060:	beq	1a230 <argp_parse@@Base+0xa00>
   1a064:	ldr	r0, [r4, #32]
   1a068:	ldr	r2, [r4, #24]
   1a06c:	str	r0, [fp, #-60]	; 0xffffffc4
   1a070:	ldr	r0, [r4, #28]
   1a074:	str	r2, [fp, #-68]	; 0xffffffbc
   1a078:	ldr	r2, [r4, #12]
   1a07c:	str	r0, [fp, #-64]	; 0xffffffc0
   1a080:	bic	r0, r7, #-16777216	; 0xff000000
   1a084:	str	r2, [fp, #-76]	; 0xffffffb4
   1a088:	orr	r0, r0, r3
   1a08c:	ldr	r1, [fp, #-136]	; 0xffffff78
   1a090:	sub	r2, fp, #96	; 0x60
   1a094:	blx	r5
   1a098:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1a09c:	str	r3, [r4, #32]
   1a0a0:	b	1a01c <argp_parse@@Base+0x7ec>
   1a0a4:	cmp	r8, #0
   1a0a8:	bne	1a230 <argp_parse@@Base+0xa00>
   1a0ac:	mov	r2, r7
   1a0b0:	ldr	r3, [pc, #1172]	; 1a54c <argp_parse@@Base+0xd1c>
   1a0b4:	ldr	r1, [pc, #1172]	; 1a550 <argp_parse@@Base+0xd20>
   1a0b8:	sub	r0, fp, #96	; 0x60
   1a0bc:	bl	1918c <argp_error@@Base>
   1a0c0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1a0c4:	mov	r2, #260	; 0x104
   1a0c8:	sub	r0, fp, #96	; 0x60
   1a0cc:	bl	190dc <argp_state_help@@Base>
   1a0d0:	mov	r5, #7
   1a0d4:	ldr	r3, [fp, #-112]	; 0xffffff90
   1a0d8:	ldr	ip, [fp, #-108]	; 0xffffff94
   1a0dc:	b	19c2c <argp_parse@@Base+0x3fc>
   1a0e0:	ldr	r7, [fp, #-136]	; 0xffffff78
   1a0e4:	ldr	r3, [fp, #-112]	; 0xffffff90
   1a0e8:	ldr	ip, [fp, #-108]	; 0xffffff94
   1a0ec:	sub	r8, r5, #1
   1a0f0:	cmp	r3, ip
   1a0f4:	str	r8, [fp, #-84]	; 0xffffffac
   1a0f8:	bcs	1a224 <argp_parse@@Base+0x9f4>
   1a0fc:	mov	lr, r8
   1a100:	add	r4, r3, #36	; 0x24
   1a104:	ldr	r3, [r4, #-36]	; 0xffffffdc
   1a108:	add	r5, lr, #1
   1a10c:	cmp	r3, #0
   1a110:	str	r5, [fp, #-84]	; 0xffffffac
   1a114:	sub	r2, fp, #96	; 0x60
   1a118:	mov	r1, r7
   1a11c:	mov	r0, r6
   1a120:	sub	r5, r4, #36	; 0x24
   1a124:	mov	r9, r4
   1a128:	streq	lr, [fp, #-84]	; 0xffffffac
   1a12c:	beq	1a218 <argp_parse@@Base+0x9e8>
   1a130:	ldr	ip, [r4, #-4]
   1a134:	ldr	lr, [r4, #-24]	; 0xffffffe8
   1a138:	str	ip, [fp, #-60]	; 0xffffffc4
   1a13c:	ldr	ip, [r4, #-12]
   1a140:	str	ip, [fp, #-68]	; 0xffffffbc
   1a144:	ldr	ip, [r4, #-8]
   1a148:	str	lr, [fp, #-76]	; 0xffffffb4
   1a14c:	str	ip, [fp, #-64]	; 0xffffffc0
   1a150:	blx	r3
   1a154:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1a158:	str	r3, [r4, #-4]
   1a15c:	cmp	r0, #7
   1a160:	beq	1a19c <argp_parse@@Base+0x96c>
   1a164:	cmp	r0, #0
   1a168:	bne	19c20 <argp_parse@@Base+0x3f0>
   1a16c:	ldr	r0, [fp, #-92]	; 0xffffffa4
   1a170:	ldr	r5, [fp, #-84]	; 0xffffffac
   1a174:	cmp	r8, r5
   1a178:	sublt	r8, r5, r8
   1a17c:	ldrlt	r3, [r4, #-24]	; 0xffffffe8
   1a180:	movge	r3, #1
   1a184:	addlt	r8, r3, r8
   1a188:	strlt	r8, [r4, #-24]	; 0xffffffe8
   1a18c:	ldrlt	r2, [fp, #-100]	; 0xffffff9c
   1a190:	strge	r3, [fp, #-100]	; 0xffffff9c
   1a194:	movge	r2, r3
   1a198:	b	19a98 <argp_parse@@Base+0x268>
   1a19c:	ldr	lr, [fp, #-84]	; 0xffffffac
   1a1a0:	ldr	r3, [r4, #-36]	; 0xffffffdc
   1a1a4:	sub	lr, lr, #1
   1a1a8:	cmp	r3, #0
   1a1ac:	str	lr, [fp, #-84]	; 0xffffffac
   1a1b0:	beq	1a214 <argp_parse@@Base+0x9e4>
   1a1b4:	add	r0, r5, #24
   1a1b8:	ldr	r2, [r5, #12]
   1a1bc:	ldm	r0, {r0, r1, ip}
   1a1c0:	str	r2, [fp, #-76]	; 0xffffffb4
   1a1c4:	sub	r2, fp, #96	; 0x60
   1a1c8:	str	ip, [fp, #-60]	; 0xffffffc4
   1a1cc:	str	r0, [fp, #-68]	; 0xffffffbc
   1a1d0:	str	r1, [fp, #-64]	; 0xffffffc0
   1a1d4:	mov	r0, sl
   1a1d8:	mov	r1, r6
   1a1dc:	blx	r3
   1a1e0:	ldr	ip, [fp, #-108]	; 0xffffff94
   1a1e4:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1a1e8:	cmp	r4, ip
   1a1ec:	movcs	r1, #0
   1a1f0:	movcc	r1, #1
   1a1f4:	mov	r3, r4
   1a1f8:	str	r2, [r5, #32]
   1a1fc:	cmp	r0, #7
   1a200:	movne	r1, #0
   1a204:	cmp	r1, #0
   1a208:	beq	1a4f0 <argp_parse@@Base+0xcc0>
   1a20c:	ldr	lr, [fp, #-84]	; 0xffffffac
   1a210:	b	1a100 <argp_parse@@Base+0x8d0>
   1a214:	ldr	ip, [fp, #-108]	; 0xffffff94
   1a218:	cmp	r9, ip
   1a21c:	add	r4, r4, #36	; 0x24
   1a220:	bcc	1a104 <argp_parse@@Base+0x8d4>
   1a224:	ldr	r5, [fp, #-84]	; 0xffffffac
   1a228:	ldr	r0, [fp, #-92]	; 0xffffffa4
   1a22c:	b	19ab8 <argp_parse@@Base+0x288>
   1a230:	ldr	r3, [fp, #-152]	; 0xffffff68
   1a234:	ldr	r2, [r3, #12]
   1a238:	cmp	r2, r7
   1a23c:	bne	1a254 <argp_parse@@Base+0xa24>
   1a240:	b	1a388 <argp_parse@@Base+0xb58>
   1a244:	add	r3, r3, #16
   1a248:	ldr	r2, [r3, #12]
   1a24c:	cmp	r2, r7
   1a250:	beq	1a388 <argp_parse@@Base+0xb58>
   1a254:	ldr	r2, [r3]
   1a258:	cmp	r2, #0
   1a25c:	bne	1a244 <argp_parse@@Base+0xa14>
   1a260:	ldr	r2, [pc, #748]	; 1a554 <argp_parse@@Base+0xd24>
   1a264:	ldr	r3, [pc, #736]	; 1a54c <argp_parse@@Base+0xd1c>
   1a268:	ldr	r1, [pc, #744]	; 1a558 <argp_parse@@Base+0xd28>
   1a26c:	sub	r0, fp, #96	; 0x60
   1a270:	bl	1918c <argp_error@@Base>
   1a274:	b	1a0c0 <argp_parse@@Base+0x890>
   1a278:	sub	lr, fp, #148	; 0x94
   1a27c:	stm	sp, {ip, lr}
   1a280:	bl	1a91c <argp_parse@@Base+0x10ec>
   1a284:	ldr	r5, [fp, #-148]	; 0xffffff6c
   1a288:	str	r5, [fp, #-84]	; 0xffffffac
   1a28c:	mov	r7, r0
   1a290:	cmn	r7, #1
   1a294:	bne	19f7c <argp_parse@@Base+0x74c>
   1a298:	cmp	r5, #1
   1a29c:	str	r6, [fp, #-100]	; 0xffffff9c
   1a2a0:	ble	1a2c0 <argp_parse@@Base+0xa90>
   1a2a4:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1a2a8:	sub	r3, r5, #-1073741823	; 0xc0000001
   1a2ac:	ldr	r1, [pc, #680]	; 1a55c <argp_parse@@Base+0xd2c>
   1a2b0:	ldr	r0, [r2, r3, lsl #2]
   1a2b4:	bl	11684 <strcmp@plt>
   1a2b8:	cmp	r0, #0
   1a2bc:	streq	r5, [fp, #-72]	; 0xffffffb8
   1a2c0:	ldr	r0, [fp, #-92]	; 0xffffffa4
   1a2c4:	cmp	r5, r0
   1a2c8:	bge	19ab8 <argp_parse@@Base+0x288>
   1a2cc:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1a2d0:	tst	r3, #4
   1a2d4:	beq	1a3ac <argp_parse@@Base+0xb7c>
   1a2d8:	ldr	r3, [fp, #4]
   1a2dc:	cmp	r3, #0
   1a2e0:	beq	1a484 <argp_parse@@Base+0xc54>
   1a2e4:	str	r5, [r3]
   1a2e8:	ldr	ip, [fp, #-108]	; 0xffffff94
   1a2ec:	ldr	r3, [fp, #-112]	; 0xffffff90
   1a2f0:	sub	r2, ip, #36	; 0x24
   1a2f4:	cmp	r3, r2
   1a2f8:	bhi	1a3e0 <argp_parse@@Base+0xbb0>
   1a2fc:	ldr	r6, [pc, #604]	; 1a560 <argp_parse@@Base+0xd30>
   1a300:	sub	r4, ip, #72	; 0x48
   1a304:	mov	r7, #0
   1a308:	ldr	r5, [r4, #36]	; 0x24
   1a30c:	sub	r2, fp, #96	; 0x60
   1a310:	cmp	r5, #0
   1a314:	mov	r1, r7
   1a318:	mov	r0, r6
   1a31c:	beq	1a378 <argp_parse@@Base+0xb48>
   1a320:	ldr	r3, [r4, #68]	; 0x44
   1a324:	ldr	ip, [r4, #48]	; 0x30
   1a328:	str	r3, [fp, #-60]	; 0xffffffc4
   1a32c:	ldr	r3, [r4, #60]	; 0x3c
   1a330:	str	r3, [fp, #-68]	; 0xffffffbc
   1a334:	ldr	r3, [r4, #64]	; 0x40
   1a338:	str	ip, [fp, #-76]	; 0xffffffb4
   1a33c:	str	r3, [fp, #-64]	; 0xffffffc0
   1a340:	blx	r5
   1a344:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1a348:	str	r3, [r4, #68]	; 0x44
   1a34c:	ldr	r3, [fp, #-112]	; 0xffffff90
   1a350:	cmp	r4, r3
   1a354:	bcc	1a3c0 <argp_parse@@Base+0xb90>
   1a358:	cmp	r0, #7
   1a35c:	cmpne	r0, #0
   1a360:	sub	r4, r4, #36	; 0x24
   1a364:	beq	1a308 <argp_parse@@Base+0xad8>
   1a368:	ldr	ip, [fp, #-108]	; 0xffffff94
   1a36c:	mov	r5, r0
   1a370:	sub	ip, ip, #36	; 0x24
   1a374:	b	19ca0 <argp_parse@@Base+0x470>
   1a378:	cmp	r4, r3
   1a37c:	bcc	1a3cc <argp_parse@@Base+0xb9c>
   1a380:	sub	r4, r4, #36	; 0x24
   1a384:	b	1a308 <argp_parse@@Base+0xad8>
   1a388:	ldr	r2, [r3]
   1a38c:	ldr	r3, [pc, #448]	; 1a554 <argp_parse@@Base+0xd24>
   1a390:	cmp	r2, #0
   1a394:	moveq	r2, r3
   1a398:	b	1a264 <argp_parse@@Base+0xa34>
   1a39c:	ldr	r3, [fp, #-140]	; 0xffffff74
   1a3a0:	cmn	r3, #1
   1a3a4:	bne	1a0c0 <argp_parse@@Base+0x890>
   1a3a8:	b	19f94 <argp_parse@@Base+0x764>
   1a3ac:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1a3b0:	ldr	r7, [r3, r5, lsl #2]
   1a3b4:	add	r5, r5, #1
   1a3b8:	str	r7, [fp, #-136]	; 0xffffff78
   1a3bc:	b	1a0e4 <argp_parse@@Base+0x8b4>
   1a3c0:	cmp	r0, #7
   1a3c4:	mov	r5, r0
   1a3c8:	bne	1a3e8 <argp_parse@@Base+0xbb8>
   1a3cc:	ldr	ip, [fp, #-108]	; 0xffffff94
   1a3d0:	sub	ip, ip, #36	; 0x24
   1a3d4:	cmp	ip, r3
   1a3d8:	movcs	r5, #0
   1a3dc:	bcs	19ca8 <argp_parse@@Base+0x478>
   1a3e0:	mov	r5, #0
   1a3e4:	b	19d14 <argp_parse@@Base+0x4e4>
   1a3e8:	ldr	ip, [fp, #-108]	; 0xffffff94
   1a3ec:	sub	ip, ip, #36	; 0x24
   1a3f0:	b	19ca0 <argp_parse@@Base+0x470>
   1a3f4:	ldr	r0, [r2]
   1a3f8:	cmp	r0, #0
   1a3fc:	beq	19a78 <argp_parse@@Base+0x248>
   1a400:	bl	1a61c <argp_parse@@Base+0xdec>
   1a404:	str	r0, [fp, #-56]	; 0xffffffc8
   1a408:	b	19a84 <argp_parse@@Base+0x254>
   1a40c:	ldr	r3, [pc, #336]	; 1a564 <argp_parse@@Base+0xd34>
   1a410:	ldr	r3, [r3]
   1a414:	cmp	r3, #0
   1a418:	addeq	r3, r4, #16
   1a41c:	bne	19e84 <argp_parse@@Base+0x654>
   1a420:	b	19e90 <argp_parse@@Base+0x660>
   1a424:	mov	r5, r0
   1a428:	ldr	r2, [fp, #4]
   1a42c:	cmp	r2, #0
   1a430:	bne	19c04 <argp_parse@@Base+0x3d4>
   1a434:	cmp	r5, #7
   1a438:	bne	19c28 <argp_parse@@Base+0x3f8>
   1a43c:	b	1a0c0 <argp_parse@@Base+0x890>
   1a440:	ldr	r3, [fp, #-112]	; 0xffffff90
   1a444:	sub	ip, ip, #36	; 0x24
   1a448:	cmp	r3, ip
   1a44c:	mov	r5, r0
   1a450:	bls	1a428 <argp_parse@@Base+0xbf8>
   1a454:	ldr	r2, [fp, #4]
   1a458:	cmp	r2, #0
   1a45c:	bne	19c04 <argp_parse@@Base+0x3d4>
   1a460:	b	19c10 <argp_parse@@Base+0x3e0>
   1a464:	ldr	r3, [fp, #-112]	; 0xffffff90
   1a468:	sub	r4, ip, #36	; 0x24
   1a46c:	cmp	r4, r3
   1a470:	mov	r5, r0
   1a474:	bcs	19b70 <argp_parse@@Base+0x340>
   1a478:	cmp	r5, #7
   1a47c:	beq	19bf4 <argp_parse@@Base+0x3c4>
   1a480:	b	1a454 <argp_parse@@Base+0xc24>
   1a484:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1a488:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1a48c:	tst	r3, #2
   1a490:	bne	1a0c4 <argp_parse@@Base+0x894>
   1a494:	cmp	r1, #0
   1a498:	beq	1a0c4 <argp_parse@@Base+0x894>
   1a49c:	mov	r0, r1
   1a4a0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1a4a4:	ldr	r1, [pc, #188]	; 1a568 <argp_parse@@Base+0xd38>
   1a4a8:	bl	1193c <fprintf@plt>
   1a4ac:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1a4b0:	b	1a0c4 <argp_parse@@Base+0x894>
   1a4b4:	mov	r5, r0
   1a4b8:	b	1a478 <argp_parse@@Base+0xc48>
   1a4bc:	sub	r4, ip, #36	; 0x24
   1a4c0:	cmp	r3, r4
   1a4c4:	bls	19b7c <argp_parse@@Base+0x34c>
   1a4c8:	ldr	r2, [fp, #4]
   1a4cc:	cmp	r2, #0
   1a4d0:	bne	19c00 <argp_parse@@Base+0x3d0>
   1a4d4:	b	1a2f0 <argp_parse@@Base+0xac0>
   1a4d8:	cmp	r0, #7
   1a4dc:	mov	r5, r0
   1a4e0:	beq	19a50 <argp_parse@@Base+0x220>
   1a4e4:	cmp	r0, #0
   1a4e8:	beq	19a50 <argp_parse@@Base+0x220>
   1a4ec:	b	19d1c <argp_parse@@Base+0x4ec>
   1a4f0:	cmp	r0, #0
   1a4f4:	ldreq	r0, [fp, #-92]	; 0xffffffa4
   1a4f8:	moveq	r5, r0
   1a4fc:	streq	r0, [fp, #-84]	; 0xffffffac
   1a500:	beq	1a174 <argp_parse@@Base+0x944>
   1a504:	cmp	r0, #7
   1a508:	mov	r5, r0
   1a50c:	beq	1a224 <argp_parse@@Base+0x9f4>
   1a510:	ldr	r3, [fp, #-112]	; 0xffffff90
   1a514:	b	19c2c <argp_parse@@Base+0x3fc>
   1a518:	andeq	pc, r2, r4, asr #11
   1a51c:	andeq	pc, r2, r0, asr #11
   1a520:	andeq	pc, r2, r8, asr #11
   1a524:	andeq	pc, r2, ip, asr #11
   1a528:	tsteq	r0, r6
   1a52c:	tsteq	r0, r2
   1a530:	tsteq	r0, r1
   1a534:	tsteq	r0, r5
   1a538:	tsteq	r0, r7
   1a53c:	tsteq	r0, r3
   1a540:	muleq	r3, r8, r0
   1a544:	andeq	lr, r1, r0, lsl #7
   1a548:	muleq	r1, ip, r3
   1a54c:			; <UNDEFINED> instruction: 0x0001e3b8
   1a550:	andeq	lr, r1, r4, asr #9
   1a554:	andeq	ip, r1, r4, asr #31
   1a558:	andeq	lr, r1, ip, asr #9
   1a55c:	andeq	sp, r1, r8, lsl #6
   1a560:	tsteq	r0, r4
   1a564:	andeq	pc, r2, ip, lsl #20
   1a568:	ldrdeq	lr, [r1], -r8
   1a56c:	cmp	r1, #0
   1a570:	beq	1a5b0 <argp_parse@@Base+0xd80>
   1a574:	ldr	r2, [r1, #52]	; 0x34
   1a578:	ldr	r3, [r2, #48]	; 0x30
   1a57c:	ldr	r1, [r2, #52]	; 0x34
   1a580:	cmp	r3, r1
   1a584:	bcs	1a5b0 <argp_parse@@Base+0xd80>
   1a588:	ldr	r2, [r3, #4]
   1a58c:	cmp	r0, r2
   1a590:	bne	1a5a4 <argp_parse@@Base+0xd74>
   1a594:	b	1a5b8 <argp_parse@@Base+0xd88>
   1a598:	ldr	r2, [r3, #4]
   1a59c:	cmp	r2, r0
   1a5a0:	beq	1a5b8 <argp_parse@@Base+0xd88>
   1a5a4:	add	r3, r3, #36	; 0x24
   1a5a8:	cmp	r3, r1
   1a5ac:	bcc	1a598 <argp_parse@@Base+0xd68>
   1a5b0:	mov	r0, #0
   1a5b4:	bx	lr
   1a5b8:	ldr	r0, [r3, #24]
   1a5bc:	bx	lr
   1a5c0:	ldr	ip, [pc, #32]	; 1a5e8 <argp_parse@@Base+0xdb8>
   1a5c4:	push	{lr}		; (str lr, [sp, #-4]!)
   1a5c8:	sub	sp, sp, #12
   1a5cc:	ldm	ip, {r1, ip}
   1a5d0:	ldr	r3, [pc, #20]	; 1a5ec <argp_parse@@Base+0xdbc>
   1a5d4:	ldr	r2, [pc, #20]	; 1a5f0 <argp_parse@@Base+0xdc0>
   1a5d8:	str	ip, [sp]
   1a5dc:	bl	1aea0 <argp_parse@@Base+0x1670>
   1a5e0:	add	sp, sp, #12
   1a5e4:	pop	{pc}		; (ldr pc, [sp], #4)
   1a5e8:	andeq	pc, r2, r0, lsl sl	; <UNPREDICTABLE>
   1a5ec:			; <UNDEFINED> instruction: 0x0001e5b0
   1a5f0:	andeq	lr, r1, r0, asr #11
   1a5f4:	ldr	r3, [pc, #20]	; 1a610 <argp_parse@@Base+0xde0>
   1a5f8:	ldr	r2, [pc, #20]	; 1a614 <argp_parse@@Base+0xde4>
   1a5fc:	ldr	ip, [pc, #20]	; 1a618 <argp_parse@@Base+0xde8>
   1a600:	str	r0, [r3]
   1a604:	str	ip, [r2]
   1a608:	str	r1, [r3, #4]
   1a60c:	bx	lr
   1a610:	andeq	pc, r2, r0, lsl sl	; <UNPREDICTABLE>
   1a614:	andeq	pc, r2, ip, lsl #20
   1a618:	andeq	sl, r1, r0, asr #11
   1a61c:	ldrb	r3, [r0]
   1a620:	cmp	r3, #47	; 0x2f
   1a624:	bne	1a634 <argp_parse@@Base+0xe04>
   1a628:	ldrb	r3, [r0, #1]!
   1a62c:	cmp	r3, #47	; 0x2f
   1a630:	beq	1a628 <argp_parse@@Base+0xdf8>
   1a634:	cmp	r3, #0
   1a638:	bxeq	lr
   1a63c:	mov	r2, #0
   1a640:	push	{lr}		; (str lr, [sp, #-4]!)
   1a644:	mov	ip, r2
   1a648:	mov	r1, r0
   1a64c:	mov	lr, #1
   1a650:	cmp	r3, #47	; 0x2f
   1a654:	moveq	r2, lr
   1a658:	beq	1a668 <argp_parse@@Base+0xe38>
   1a65c:	cmp	r2, #0
   1a660:	movne	r0, r1
   1a664:	movne	r2, ip
   1a668:	ldrb	r3, [r1, #1]!
   1a66c:	cmp	r3, #0
   1a670:	bne	1a650 <argp_parse@@Base+0xe20>
   1a674:	pop	{pc}		; (ldr pc, [sp], #4)
   1a678:	push	{r4, lr}
   1a67c:	mov	r4, r0
   1a680:	bl	11918 <strlen@plt>
   1a684:	cmp	r0, #1
   1a688:	popls	{r4, pc}
   1a68c:	sub	r3, r0, #1
   1a690:	add	r2, r4, r3
   1a694:	ldrb	r1, [r4, r3]
   1a698:	cmp	r1, #47	; 0x2f
   1a69c:	popne	{r4, pc}
   1a6a0:	cmp	r3, #1
   1a6a4:	beq	1a6b8 <argp_parse@@Base+0xe88>
   1a6a8:	ldrb	r1, [r2, #-1]!
   1a6ac:	sub	r0, r3, #1
   1a6b0:	cmp	r1, #47	; 0x2f
   1a6b4:	beq	1a6c0 <argp_parse@@Base+0xe90>
   1a6b8:	mov	r0, r3
   1a6bc:	pop	{r4, pc}
   1a6c0:	mov	r3, r0
   1a6c4:	b	1a6a0 <argp_parse@@Base+0xe70>
   1a6c8:	push	{r1, r2, r3}
   1a6cc:	push	{r4, r5, r6, r7, lr}
   1a6d0:	sub	sp, sp, #8
   1a6d4:	add	r3, sp, #32
   1a6d8:	ldr	r1, [sp, #28]
   1a6dc:	str	r3, [sp, #4]
   1a6e0:	cmp	r1, #0
   1a6e4:	beq	1a77c <argp_parse@@Base+0xf4c>
   1a6e8:	ldr	r2, [pc, #412]	; 1a88c <argp_parse@@Base+0x105c>
   1a6ec:	mov	r5, r0
   1a6f0:	cmp	r1, r2
   1a6f4:	bne	1a740 <argp_parse@@Base+0xf10>
   1a6f8:	ldr	r6, [pc, #400]	; 1a890 <argp_parse@@Base+0x1060>
   1a6fc:	ldr	r7, [r3]
   1a700:	add	r2, sp, #36	; 0x24
   1a704:	ldr	r3, [r6]
   1a708:	str	r2, [sp, #4]
   1a70c:	cmp	r3, #0
   1a710:	mov	r2, r7
   1a714:	blt	1a840 <argp_parse@@Base+0x1010>
   1a718:	bl	119cc <fcntl64@plt>
   1a71c:	subs	r4, r0, #0
   1a720:	blt	1a7c4 <argp_parse@@Base+0xf94>
   1a724:	mov	r3, #1
   1a728:	str	r3, [r6]
   1a72c:	mov	r0, r4
   1a730:	add	sp, sp, #8
   1a734:	pop	{r4, r5, r6, r7, lr}
   1a738:	add	sp, sp, #12
   1a73c:	bx	lr
   1a740:	cmp	r1, #11
   1a744:	beq	1a76c <argp_parse@@Base+0xf3c>
   1a748:	bgt	1a78c <argp_parse@@Base+0xf5c>
   1a74c:	cmp	r1, #3
   1a750:	beq	1a76c <argp_parse@@Base+0xf3c>
   1a754:	ble	1a880 <argp_parse@@Base+0x1050>
   1a758:	cmp	r1, #8
   1a75c:	beq	1a7ac <argp_parse@@Base+0xf7c>
   1a760:	ble	1a7ac <argp_parse@@Base+0xf7c>
   1a764:	cmp	r1, #9
   1a768:	bne	1a7ac <argp_parse@@Base+0xf7c>
   1a76c:	mov	r0, r5
   1a770:	bl	119cc <fcntl64@plt>
   1a774:	mov	r4, r0
   1a778:	b	1a72c <argp_parse@@Base+0xefc>
   1a77c:	ldr	r2, [sp, #32]
   1a780:	bl	119cc <fcntl64@plt>
   1a784:	mov	r4, r0
   1a788:	b	1a72c <argp_parse@@Base+0xefc>
   1a78c:	ldr	r3, [pc, #256]	; 1a894 <argp_parse@@Base+0x1064>
   1a790:	cmp	r1, r3
   1a794:	bgt	1a860 <argp_parse@@Base+0x1030>
   1a798:	cmp	r1, r2
   1a79c:	bge	1a7ac <argp_parse@@Base+0xf7c>
   1a7a0:	sub	r3, r3, #6
   1a7a4:	cmp	r1, r3
   1a7a8:	beq	1a76c <argp_parse@@Base+0xf3c>
   1a7ac:	ldr	r3, [sp, #4]
   1a7b0:	mov	r0, r5
   1a7b4:	ldr	r2, [r3]
   1a7b8:	bl	119cc <fcntl64@plt>
   1a7bc:	mov	r4, r0
   1a7c0:	b	1a72c <argp_parse@@Base+0xefc>
   1a7c4:	bl	11948 <__errno_location@plt>
   1a7c8:	ldr	r3, [r0]
   1a7cc:	cmp	r3, #22
   1a7d0:	bne	1a724 <argp_parse@@Base+0xef4>
   1a7d4:	mov	r2, r7
   1a7d8:	mov	r0, r5
   1a7dc:	mov	r1, #0
   1a7e0:	bl	119cc <fcntl64@plt>
   1a7e4:	subs	r4, r0, #0
   1a7e8:	blt	1a72c <argp_parse@@Base+0xefc>
   1a7ec:	mvn	r3, #0
   1a7f0:	str	r3, [r6]
   1a7f4:	mov	r1, #1
   1a7f8:	mov	r0, r4
   1a7fc:	bl	119cc <fcntl64@plt>
   1a800:	subs	r2, r0, #0
   1a804:	blt	1a820 <argp_parse@@Base+0xff0>
   1a808:	orr	r2, r2, #1
   1a80c:	mov	r1, #2
   1a810:	mov	r0, r4
   1a814:	bl	119cc <fcntl64@plt>
   1a818:	cmn	r0, #1
   1a81c:	bne	1a72c <argp_parse@@Base+0xefc>
   1a820:	bl	11948 <__errno_location@plt>
   1a824:	mov	r5, r0
   1a828:	mov	r0, r4
   1a82c:	ldr	r6, [r5]
   1a830:	mvn	r4, #0
   1a834:	bl	11af8 <close@plt>
   1a838:	str	r6, [r5]
   1a83c:	b	1a72c <argp_parse@@Base+0xefc>
   1a840:	mov	r1, #0
   1a844:	bl	119cc <fcntl64@plt>
   1a848:	subs	r4, r0, #0
   1a84c:	blt	1a72c <argp_parse@@Base+0xefc>
   1a850:	ldr	r3, [r6]
   1a854:	cmn	r3, #1
   1a858:	beq	1a7f4 <argp_parse@@Base+0xfc4>
   1a85c:	b	1a72c <argp_parse@@Base+0xefc>
   1a860:	ldr	r3, [pc, #48]	; 1a898 <argp_parse@@Base+0x1068>
   1a864:	cmp	r1, r3
   1a868:	beq	1a7ac <argp_parse@@Base+0xf7c>
   1a86c:	blt	1a76c <argp_parse@@Base+0xf3c>
   1a870:	add	r3, r3, #1
   1a874:	cmp	r1, r3
   1a878:	bne	1a7ac <argp_parse@@Base+0xf7c>
   1a87c:	b	1a76c <argp_parse@@Base+0xf3c>
   1a880:	cmp	r1, #1
   1a884:	bne	1a7ac <argp_parse@@Base+0xf7c>
   1a888:	b	1a76c <argp_parse@@Base+0xf3c>
   1a88c:	andeq	r0, r0, r6, lsl #8
   1a890:	andeq	pc, r2, r8, lsl sl	; <UNPREDICTABLE>
   1a894:	andeq	r0, r0, r7, lsl #8
   1a898:	andeq	r0, r0, r9, lsl #8
   1a89c:	push	{r4, r5, lr}
   1a8a0:	sub	sp, sp, #12
   1a8a4:	mov	r5, r0
   1a8a8:	bl	11948 <__errno_location@plt>
   1a8ac:	mov	r2, #0
   1a8b0:	mov	r4, r0
   1a8b4:	ldr	r3, [r0]
   1a8b8:	str	r2, [r4]
   1a8bc:	mov	r0, r5
   1a8c0:	str	r3, [sp]
   1a8c4:	str	r3, [sp, #4]
   1a8c8:	bl	11708 <free@plt>
   1a8cc:	ldr	r3, [r4]
   1a8d0:	add	r2, sp, #8
   1a8d4:	cmp	r3, #0
   1a8d8:	moveq	r3, #4
   1a8dc:	movne	r3, #0
   1a8e0:	add	r3, r2, r3
   1a8e4:	ldr	r3, [r3, #-8]
   1a8e8:	str	r3, [r4]
   1a8ec:	add	sp, sp, #12
   1a8f0:	pop	{r4, r5, pc}
   1a8f4:	push	{lr}		; (str lr, [sp, #-4]!)
   1a8f8:	sub	sp, sp, #20
   1a8fc:	mov	ip, #0
   1a900:	ldr	lr, [sp, #24]
   1a904:	str	ip, [sp, #8]
   1a908:	str	lr, [sp]
   1a90c:	str	ip, [sp, #4]
   1a910:	bl	1c958 <argp_parse@@Base+0x3128>
   1a914:	add	sp, sp, #20
   1a918:	pop	{pc}		; (ldr pc, [sp], #4)
   1a91c:	push	{r4, lr}
   1a920:	sub	sp, sp, #16
   1a924:	mov	ip, #0
   1a928:	ldr	r4, [sp, #24]
   1a92c:	ldr	lr, [sp, #28]
   1a930:	str	r4, [sp]
   1a934:	str	lr, [sp, #8]
   1a938:	str	ip, [sp, #12]
   1a93c:	str	ip, [sp, #4]
   1a940:	bl	1c3f8 <argp_parse@@Base+0x2bc8>
   1a944:	add	sp, sp, #16
   1a948:	pop	{r4, pc}
   1a94c:	push	{r4, lr}
   1a950:	sub	sp, sp, #16
   1a954:	mov	lr, #0
   1a958:	ldr	r4, [sp, #24]
   1a95c:	mov	ip, #1
   1a960:	stm	sp, {r4, ip, lr}
   1a964:	bl	1c958 <argp_parse@@Base+0x3128>
   1a968:	add	sp, sp, #16
   1a96c:	pop	{r4, pc}
   1a970:	push	{r4, r5, lr}
   1a974:	sub	sp, sp, #20
   1a978:	mov	lr, #0
   1a97c:	ldr	r5, [sp, #32]
   1a980:	ldr	r4, [sp, #36]	; 0x24
   1a984:	mov	ip, #1
   1a988:	str	r5, [sp]
   1a98c:	str	r4, [sp, #8]
   1a990:	str	lr, [sp, #12]
   1a994:	str	ip, [sp, #4]
   1a998:	bl	1c3f8 <argp_parse@@Base+0x2bc8>
   1a99c:	add	sp, sp, #20
   1a9a0:	pop	{r4, r5, pc}
   1a9a4:	push	{r4, r5, r6, lr}
   1a9a8:	subs	r4, r0, #0
   1a9ac:	beq	1aa20 <argp_parse@@Base+0x11f0>
   1a9b0:	mov	r1, #47	; 0x2f
   1a9b4:	bl	11a20 <strrchr@plt>
   1a9b8:	subs	r5, r0, #0
   1a9bc:	beq	1aa0c <argp_parse@@Base+0x11dc>
   1a9c0:	add	r6, r5, #1
   1a9c4:	sub	r3, r6, r4
   1a9c8:	cmp	r3, #6
   1a9cc:	ble	1aa0c <argp_parse@@Base+0x11dc>
   1a9d0:	mov	r2, #7
   1a9d4:	ldr	r1, [pc, #96]	; 1aa3c <argp_parse@@Base+0x120c>
   1a9d8:	sub	r0, r5, #6
   1a9dc:	bl	11ad4 <strncmp@plt>
   1a9e0:	cmp	r0, #0
   1a9e4:	bne	1aa0c <argp_parse@@Base+0x11dc>
   1a9e8:	mov	r2, #3
   1a9ec:	ldr	r1, [pc, #76]	; 1aa40 <argp_parse@@Base+0x1210>
   1a9f0:	mov	r0, r6
   1a9f4:	bl	11ad4 <strncmp@plt>
   1a9f8:	cmp	r0, #0
   1a9fc:	movne	r4, r6
   1aa00:	ldreq	r3, [pc, #60]	; 1aa44 <argp_parse@@Base+0x1214>
   1aa04:	addeq	r4, r5, #4
   1aa08:	streq	r4, [r3]
   1aa0c:	ldr	r2, [pc, #52]	; 1aa48 <argp_parse@@Base+0x1218>
   1aa10:	ldr	r3, [pc, #52]	; 1aa4c <argp_parse@@Base+0x121c>
   1aa14:	str	r4, [r2]
   1aa18:	str	r4, [r3]
   1aa1c:	pop	{r4, r5, r6, pc}
   1aa20:	ldr	r3, [pc, #40]	; 1aa50 <argp_parse@@Base+0x1220>
   1aa24:	mov	r2, #55	; 0x37
   1aa28:	mov	r1, #1
   1aa2c:	ldr	r3, [r3]
   1aa30:	ldr	r0, [pc, #28]	; 1aa54 <argp_parse@@Base+0x1224>
   1aa34:	bl	11834 <fwrite@plt>
   1aa38:	bl	11ae0 <abort@plt>
   1aa3c:	andeq	lr, r1, r8, lsl #12
   1aa40:	andeq	lr, r1, r0, lsl r6
   1aa44:	andeq	pc, r2, r0, asr #11
   1aa48:	andeq	pc, r2, ip, lsl sl	; <UNPREDICTABLE>
   1aa4c:	andeq	pc, r2, r4, asr #11
   1aa50:	andeq	pc, r2, r8, asr #11
   1aa54:	ldrdeq	lr, [r1], -r0
   1aa58:	push	{r4, r5, r6, lr}
   1aa5c:	mov	r5, r0
   1aa60:	mov	r0, #33	; 0x21
   1aa64:	bl	1afec <argp_parse@@Base+0x17bc>
   1aa68:	add	r1, r5, #44	; 0x2c
   1aa6c:	mov	r2, #32
   1aa70:	mov	r5, #0
   1aa74:	mov	r4, r0
   1aa78:	bl	11990 <strncpy@plt>
   1aa7c:	mov	r0, r4
   1aa80:	strb	r5, [r4, #32]
   1aa84:	bl	11918 <strlen@plt>
   1aa88:	add	r0, r4, r0
   1aa8c:	cmp	r4, r0
   1aa90:	bcs	1aaa0 <argp_parse@@Base+0x1270>
   1aa94:	ldrb	r3, [r0, #-1]
   1aa98:	cmp	r3, #32
   1aa9c:	beq	1aaa8 <argp_parse@@Base+0x1278>
   1aaa0:	mov	r0, r4
   1aaa4:	pop	{r4, r5, r6, pc}
   1aaa8:	sub	r0, r0, #1
   1aaac:	cmp	r0, r4
   1aab0:	strb	r5, [r0]
   1aab4:	beq	1aaa0 <argp_parse@@Base+0x1270>
   1aab8:	ldrb	r3, [r0, #-1]!
   1aabc:	cmp	r3, #32
   1aac0:	beq	1aaac <argp_parse@@Base+0x127c>
   1aac4:	mov	r0, r4
   1aac8:	pop	{r4, r5, r6, pc}
   1aacc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1aad0:	sub	sp, sp, #28
   1aad4:	add	fp, sp, #24
   1aad8:	mov	ip, #0
   1aadc:	mov	r8, r3
   1aae0:	mov	r7, ip
   1aae4:	str	r1, [sp, #8]
   1aae8:	str	r2, [sp, #12]
   1aaec:	str	ip, [fp, #-4]!
   1aaf0:	mov	sl, ip
   1aaf4:	bl	116d8 <utmpxname@plt>
   1aaf8:	bl	117b0 <setutxent@plt>
   1aafc:	and	r6, r8, #2
   1ab00:	mov	r5, r7
   1ab04:	mov	r9, r7
   1ab08:	and	r8, r8, #1
   1ab0c:	bl	11aec <getutxent@plt>
   1ab10:	subs	r4, r0, #0
   1ab14:	beq	1ab74 <argp_parse@@Base+0x1344>
   1ab18:	ldrb	r2, [r4, #44]	; 0x2c
   1ab1c:	ldrsh	r3, [r4]
   1ab20:	cmp	r2, #0
   1ab24:	sub	r3, r3, #7
   1ab28:	clz	r3, r3
   1ab2c:	lsr	r3, r3, #5
   1ab30:	moveq	r3, #0
   1ab34:	cmp	r3, #0
   1ab38:	bne	1ab94 <argp_parse@@Base+0x1364>
   1ab3c:	cmp	r6, #0
   1ab40:	bne	1ab0c <argp_parse@@Base+0x12dc>
   1ab44:	ldr	r3, [sp, #20]
   1ab48:	cmp	r5, r3
   1ab4c:	beq	1abd4 <argp_parse@@Base+0x13a4>
   1ab50:	mov	r1, r4
   1ab54:	mov	r2, #384	; 0x180
   1ab58:	add	r0, sl, r7
   1ab5c:	bl	11744 <memcpy@plt>
   1ab60:	bl	11aec <getutxent@plt>
   1ab64:	add	r5, r5, #1
   1ab68:	add	r7, r7, #384	; 0x180
   1ab6c:	subs	r4, r0, #0
   1ab70:	bne	1ab18 <argp_parse@@Base+0x12e8>
   1ab74:	bl	119e4 <endutxent@plt>
   1ab78:	ldr	r3, [sp, #8]
   1ab7c:	mov	r0, r4
   1ab80:	str	r5, [r3]
   1ab84:	ldr	r3, [sp, #12]
   1ab88:	str	sl, [r3]
   1ab8c:	add	sp, sp, #28
   1ab90:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ab94:	cmp	r8, #0
   1ab98:	beq	1ab44 <argp_parse@@Base+0x1314>
   1ab9c:	ldr	r0, [r4, #4]
   1aba0:	cmp	r0, #0
   1aba4:	ble	1ab44 <argp_parse@@Base+0x1314>
   1aba8:	mov	r1, r9
   1abac:	bl	118e8 <kill@plt>
   1abb0:	cmp	r0, #0
   1abb4:	bge	1ab44 <argp_parse@@Base+0x1314>
   1abb8:	bl	11948 <__errno_location@plt>
   1abbc:	ldr	r3, [r0]
   1abc0:	cmp	r3, #3
   1abc4:	beq	1ab0c <argp_parse@@Base+0x12dc>
   1abc8:	ldr	r3, [sp, #20]
   1abcc:	cmp	r5, r3
   1abd0:	bne	1ab50 <argp_parse@@Base+0x1320>
   1abd4:	mov	r3, #384	; 0x180
   1abd8:	str	r3, [sp]
   1abdc:	mov	r0, sl
   1abe0:	mvn	r3, #0
   1abe4:	mov	r2, #1
   1abe8:	mov	r1, fp
   1abec:	bl	1b178 <argp_parse@@Base+0x1948>
   1abf0:	mov	sl, r0
   1abf4:	b	1ab50 <argp_parse@@Base+0x1320>
   1abf8:	push	{r4, r5, r6, r7, lr}
   1abfc:	sub	sp, sp, #36	; 0x24
   1ac00:	cmp	r1, #0
   1ac04:	mov	r4, r0
   1ac08:	ldr	r5, [sp, #56]	; 0x38
   1ac0c:	ldr	r6, [sp, #60]	; 0x3c
   1ac10:	beq	1ae50 <argp_parse@@Base+0x1620>
   1ac14:	str	r3, [sp]
   1ac18:	mov	r3, r2
   1ac1c:	mov	r2, r1
   1ac20:	ldr	r1, [pc, #564]	; 1ae5c <argp_parse@@Base+0x162c>
   1ac24:	bl	1193c <fprintf@plt>
   1ac28:	ldr	r3, [pc, #560]	; 1ae60 <argp_parse@@Base+0x1630>
   1ac2c:	ldr	r2, [pc, #560]	; 1ae64 <argp_parse@@Base+0x1634>
   1ac30:	ldr	r1, [pc, #560]	; 1ae68 <argp_parse@@Base+0x1638>
   1ac34:	mov	r0, r4
   1ac38:	bl	1193c <fprintf@plt>
   1ac3c:	mov	r1, r4
   1ac40:	mov	r0, #10
   1ac44:	bl	11a38 <fputc@plt>
   1ac48:	ldr	r1, [pc, #540]	; 1ae6c <argp_parse@@Base+0x163c>
   1ac4c:	ldr	r2, [pc, #540]	; 1ae70 <argp_parse@@Base+0x1640>
   1ac50:	mov	r0, r4
   1ac54:	bl	1193c <fprintf@plt>
   1ac58:	mov	r1, r4
   1ac5c:	mov	r0, #10
   1ac60:	bl	11a38 <fputc@plt>
   1ac64:	cmp	r6, #9
   1ac68:	ldrls	pc, [pc, r6, lsl #2]
   1ac6c:	b	1ac98 <argp_parse@@Base+0x1468>
   1ac70:	ldrdeq	sl, [r1], -r8
   1ac74:	andeq	sl, r1, r4, lsr #26
   1ac78:	andeq	sl, r1, ip, lsr sp
   1ac7c:	andeq	sl, r1, r4, asr sp
   1ac80:	andeq	sl, r1, r4, ror sp
   1ac84:	muleq	r1, ip, sp
   1ac88:			; <UNDEFINED> instruction: 0x0001adbc
   1ac8c:	andeq	sl, r1, r4, ror #27
   1ac90:	andeq	sl, r1, r4, lsl lr
   1ac94:	andeq	sl, r1, r0, ror #25
   1ac98:	ldr	ip, [r5, #32]
   1ac9c:	ldr	r1, [r5, #28]
   1aca0:	ldm	r5, {r2, r3}
   1aca4:	ldr	r7, [r5, #24]
   1aca8:	ldr	r6, [r5, #20]
   1acac:	str	ip, [sp, #24]
   1acb0:	ldr	lr, [r5, #16]
   1acb4:	str	r1, [sp, #20]
   1acb8:	ldr	r1, [r5, #8]
   1acbc:	ldr	ip, [r5, #12]
   1acc0:	mov	r0, r4
   1acc4:	str	r7, [sp, #16]
   1acc8:	stm	sp, {r1, ip, lr}
   1accc:	str	r6, [sp, #12]
   1acd0:	ldr	r1, [pc, #412]	; 1ae74 <argp_parse@@Base+0x1644>
   1acd4:	bl	1193c <fprintf@plt>
   1acd8:	add	sp, sp, #36	; 0x24
   1acdc:	pop	{r4, r5, r6, r7, pc}
   1ace0:	ldr	ip, [r5, #32]
   1ace4:	ldr	r1, [r5, #28]
   1ace8:	ldm	r5, {r2, r3}
   1acec:	ldr	r7, [r5, #24]
   1acf0:	ldr	r6, [r5, #20]
   1acf4:	str	ip, [sp, #24]
   1acf8:	ldr	lr, [r5, #16]
   1acfc:	str	r1, [sp, #20]
   1ad00:	ldr	r1, [r5, #8]
   1ad04:	ldr	ip, [r5, #12]
   1ad08:	mov	r0, r4
   1ad0c:	str	r7, [sp, #16]
   1ad10:	stm	sp, {r1, ip, lr}
   1ad14:	str	r6, [sp, #12]
   1ad18:	ldr	r1, [pc, #344]	; 1ae78 <argp_parse@@Base+0x1648>
   1ad1c:	bl	1193c <fprintf@plt>
   1ad20:	b	1acd8 <argp_parse@@Base+0x14a8>
   1ad24:	ldr	r2, [r5]
   1ad28:	mov	r0, r4
   1ad2c:	ldr	r1, [pc, #328]	; 1ae7c <argp_parse@@Base+0x164c>
   1ad30:	add	sp, sp, #36	; 0x24
   1ad34:	pop	{r4, r5, r6, r7, lr}
   1ad38:	b	1193c <fprintf@plt>
   1ad3c:	mov	r0, r4
   1ad40:	ldm	r5, {r2, r3}
   1ad44:	ldr	r1, [pc, #308]	; 1ae80 <argp_parse@@Base+0x1650>
   1ad48:	add	sp, sp, #36	; 0x24
   1ad4c:	pop	{r4, r5, r6, r7, lr}
   1ad50:	b	1193c <fprintf@plt>
   1ad54:	ldr	r1, [r5, #8]
   1ad58:	ldm	r5, {r2, r3}
   1ad5c:	mov	r0, r4
   1ad60:	str	r1, [sp, #56]	; 0x38
   1ad64:	ldr	r1, [pc, #280]	; 1ae84 <argp_parse@@Base+0x1654>
   1ad68:	add	sp, sp, #36	; 0x24
   1ad6c:	pop	{r4, r5, r6, r7, lr}
   1ad70:	b	1193c <fprintf@plt>
   1ad74:	ldr	r1, [r5, #8]
   1ad78:	ldr	ip, [r5, #12]
   1ad7c:	ldm	r5, {r2, r3}
   1ad80:	mov	r0, r4
   1ad84:	str	r1, [sp, #56]	; 0x38
   1ad88:	str	ip, [sp, #60]	; 0x3c
   1ad8c:	ldr	r1, [pc, #244]	; 1ae88 <argp_parse@@Base+0x1658>
   1ad90:	add	sp, sp, #36	; 0x24
   1ad94:	pop	{r4, r5, r6, r7, lr}
   1ad98:	b	1193c <fprintf@plt>
   1ad9c:	add	r1, r5, #8
   1ada0:	ldm	r5, {r2, r3}
   1ada4:	ldm	r1, {r1, ip, lr}
   1ada8:	mov	r0, r4
   1adac:	stm	sp, {r1, ip, lr}
   1adb0:	ldr	r1, [pc, #212]	; 1ae8c <argp_parse@@Base+0x165c>
   1adb4:	bl	1193c <fprintf@plt>
   1adb8:	b	1acd8 <argp_parse@@Base+0x14a8>
   1adbc:	add	r1, r5, #8
   1adc0:	ldr	r6, [r5, #20]
   1adc4:	ldm	r1, {r1, ip, lr}
   1adc8:	mov	r0, r4
   1adcc:	ldm	r5, {r2, r3}
   1add0:	str	r6, [sp, #12]
   1add4:	stm	sp, {r1, ip, lr}
   1add8:	ldr	r1, [pc, #176]	; 1ae90 <argp_parse@@Base+0x1660>
   1addc:	bl	1193c <fprintf@plt>
   1ade0:	b	1acd8 <argp_parse@@Base+0x14a8>
   1ade4:	add	r1, r5, #8
   1ade8:	ldr	r7, [r5, #24]
   1adec:	ldm	r1, {r1, ip, lr}
   1adf0:	mov	r0, r4
   1adf4:	ldr	r6, [r5, #20]
   1adf8:	ldm	r5, {r2, r3}
   1adfc:	stm	sp, {r1, ip, lr}
   1ae00:	str	r7, [sp, #16]
   1ae04:	str	r6, [sp, #12]
   1ae08:	ldr	r1, [pc, #132]	; 1ae94 <argp_parse@@Base+0x1664>
   1ae0c:	bl	1193c <fprintf@plt>
   1ae10:	b	1acd8 <argp_parse@@Base+0x14a8>
   1ae14:	ldr	r1, [r5, #28]
   1ae18:	ldm	r5, {r2, r3}
   1ae1c:	ldr	r7, [r5, #24]
   1ae20:	ldr	r6, [r5, #20]
   1ae24:	ldr	lr, [r5, #16]
   1ae28:	str	r1, [sp, #20]
   1ae2c:	ldr	r1, [r5, #8]
   1ae30:	ldr	ip, [r5, #12]
   1ae34:	mov	r0, r4
   1ae38:	str	r7, [sp, #16]
   1ae3c:	stm	sp, {r1, ip, lr}
   1ae40:	str	r6, [sp, #12]
   1ae44:	ldr	r1, [pc, #76]	; 1ae98 <argp_parse@@Base+0x1668>
   1ae48:	bl	1193c <fprintf@plt>
   1ae4c:	b	1acd8 <argp_parse@@Base+0x14a8>
   1ae50:	ldr	r1, [pc, #68]	; 1ae9c <argp_parse@@Base+0x166c>
   1ae54:	bl	1193c <fprintf@plt>
   1ae58:	b	1ac28 <argp_parse@@Base+0x13f8>
   1ae5c:	andeq	lr, r1, r4, lsl r6
   1ae60:	andeq	r0, r0, r6, ror #15
   1ae64:	andeq	lr, r1, r8, lsr #12
   1ae68:	andeq	lr, r1, r8, lsr #18
   1ae6c:	andeq	lr, r1, r0, asr r6
   1ae70:	andeq	lr, r1, ip, lsr #12
   1ae74:	andeq	lr, r1, ip, lsr r8
   1ae78:	andeq	lr, r1, r8, lsl #16
   1ae7c:	strdeq	lr, [r1], -ip
   1ae80:	andeq	lr, r1, ip, lsl #14
   1ae84:	andeq	lr, r1, r4, lsr #14
   1ae88:	andeq	lr, r1, r0, asr #14
   1ae8c:	andeq	lr, r1, r0, ror #14
   1ae90:	andeq	lr, r1, r4, lsl #15
   1ae94:	andeq	lr, r1, ip, lsr #15
   1ae98:	ldrdeq	lr, [r1], -r8
   1ae9c:	andeq	lr, r1, r0, lsr #12
   1aea0:	push	{r4, r5, lr}
   1aea4:	sub	sp, sp, #12
   1aea8:	ldr	r5, [sp, #24]
   1aeac:	ldr	ip, [r5]
   1aeb0:	cmp	ip, #0
   1aeb4:	beq	1aed0 <argp_parse@@Base+0x16a0>
   1aeb8:	mov	lr, r5
   1aebc:	mov	ip, #0
   1aec0:	ldr	r4, [lr, #4]!
   1aec4:	add	ip, ip, #1
   1aec8:	cmp	r4, #0
   1aecc:	bne	1aec0 <argp_parse@@Base+0x1690>
   1aed0:	stm	sp, {r5, ip}
   1aed4:	bl	1abf8 <argp_parse@@Base+0x13c8>
   1aed8:	add	sp, sp, #12
   1aedc:	pop	{r4, r5, pc}
   1aee0:	push	{r4, r5, lr}
   1aee4:	sub	sp, sp, #52	; 0x34
   1aee8:	add	r5, sp, #4
   1aeec:	ldr	r4, [sp, #64]	; 0x40
   1aef0:	mov	ip, #0
   1aef4:	sub	r4, r4, #4
   1aef8:	ldr	lr, [r4, #4]!
   1aefc:	cmp	lr, #0
   1af00:	str	lr, [r5, #4]!
   1af04:	beq	1af14 <argp_parse@@Base+0x16e4>
   1af08:	add	ip, ip, #1
   1af0c:	cmp	ip, #10
   1af10:	bne	1aef8 <argp_parse@@Base+0x16c8>
   1af14:	add	lr, sp, #8
   1af18:	str	ip, [sp, #4]
   1af1c:	str	lr, [sp]
   1af20:	bl	1abf8 <argp_parse@@Base+0x13c8>
   1af24:	add	sp, sp, #52	; 0x34
   1af28:	pop	{r4, r5, pc}
   1af2c:	push	{r3}		; (str r3, [sp, #-4]!)
   1af30:	push	{r4, lr}
   1af34:	sub	sp, sp, #60	; 0x3c
   1af38:	add	lr, sp, #56	; 0x38
   1af3c:	add	r3, sp, #72	; 0x48
   1af40:	str	r3, [lr, #-44]!	; 0xffffffd4
   1af44:	add	r4, sp, #68	; 0x44
   1af48:	mov	r3, #0
   1af4c:	ldr	ip, [r4, #4]!
   1af50:	cmp	ip, #0
   1af54:	str	ip, [lr, #4]!
   1af58:	beq	1af68 <argp_parse@@Base+0x1738>
   1af5c:	add	r3, r3, #1
   1af60:	cmp	r3, #10
   1af64:	bne	1af4c <argp_parse@@Base+0x171c>
   1af68:	add	ip, sp, #16
   1af6c:	str	r3, [sp, #4]
   1af70:	str	ip, [sp]
   1af74:	ldr	r3, [sp, #68]	; 0x44
   1af78:	bl	1abf8 <argp_parse@@Base+0x13c8>
   1af7c:	add	sp, sp, #60	; 0x3c
   1af80:	pop	{r4, lr}
   1af84:	add	sp, sp, #4
   1af88:	bx	lr
   1af8c:	ldr	r3, [pc, #56]	; 1afcc <argp_parse@@Base+0x179c>
   1af90:	push	{r4, lr}
   1af94:	mov	r0, #10
   1af98:	ldr	r1, [r3]
   1af9c:	bl	11a38 <fputc@plt>
   1afa0:	ldr	r1, [pc, #40]	; 1afd0 <argp_parse@@Base+0x17a0>
   1afa4:	ldr	r0, [pc, #40]	; 1afd4 <argp_parse@@Base+0x17a4>
   1afa8:	bl	116b4 <printf@plt>
   1afac:	ldr	r1, [pc, #36]	; 1afd8 <argp_parse@@Base+0x17a8>
   1afb0:	ldr	r2, [pc, #36]	; 1afdc <argp_parse@@Base+0x17ac>
   1afb4:	ldr	r0, [pc, #36]	; 1afe0 <argp_parse@@Base+0x17b0>
   1afb8:	bl	116b4 <printf@plt>
   1afbc:	ldr	r1, [pc, #32]	; 1afe4 <argp_parse@@Base+0x17b4>
   1afc0:	ldr	r0, [pc, #32]	; 1afe8 <argp_parse@@Base+0x17b8>
   1afc4:	pop	{r4, lr}
   1afc8:	b	116b4 <printf@plt>
   1afcc:	andeq	pc, r2, ip, asr #11
   1afd0:	andeq	lr, r1, r8, ror r8
   1afd4:	muleq	r1, r0, r8
   1afd8:	andeq	lr, r1, r0, asr #11
   1afdc:	andeq	lr, r1, r4, lsr #17
   1afe0:	andeq	lr, r1, ip, asr #17
   1afe4:	andeq	lr, r1, r0, ror #17
   1afe8:	andeq	lr, r1, r0, lsl #18
   1afec:	push	{r4, lr}
   1aff0:	bl	1b5a8 <argp_parse@@Base+0x1d78>
   1aff4:	cmp	r0, #0
   1aff8:	popne	{r4, pc}
   1affc:	bl	1b534 <argp_parse@@Base+0x1d04>
   1b000:	push	{r4, lr}
   1b004:	bl	1b5a8 <argp_parse@@Base+0x1d78>
   1b008:	cmp	r0, #0
   1b00c:	popne	{r4, pc}
   1b010:	bl	1b534 <argp_parse@@Base+0x1d04>
   1b014:	push	{r4, lr}
   1b018:	bl	1b5a8 <argp_parse@@Base+0x1d78>
   1b01c:	cmp	r0, #0
   1b020:	popne	{r4, pc}
   1b024:	bl	1b534 <argp_parse@@Base+0x1d04>
   1b028:	push	{r4, r5, r6, lr}
   1b02c:	mov	r5, r0
   1b030:	mov	r4, r1
   1b034:	bl	1b5d4 <argp_parse@@Base+0x1da4>
   1b038:	cmp	r0, #0
   1b03c:	popne	{r4, r5, r6, pc}
   1b040:	adds	r4, r4, #0
   1b044:	movne	r4, #1
   1b048:	cmp	r5, #0
   1b04c:	orreq	r4, r4, #1
   1b050:	cmp	r4, #0
   1b054:	popeq	{r4, r5, r6, pc}
   1b058:	bl	1b534 <argp_parse@@Base+0x1d04>
   1b05c:	push	{r4, lr}
   1b060:	cmp	r1, #0
   1b064:	orreq	r1, r1, #1
   1b068:	bl	1b5d4 <argp_parse@@Base+0x1da4>
   1b06c:	cmp	r0, #0
   1b070:	popne	{r4, pc}
   1b074:	bl	1b534 <argp_parse@@Base+0x1d04>
   1b078:	push	{r4, r5, r6, lr}
   1b07c:	mov	r6, r0
   1b080:	mov	r5, r1
   1b084:	mov	r4, r2
   1b088:	bl	1c9ec <argp_parse@@Base+0x31bc>
   1b08c:	cmp	r0, #0
   1b090:	popne	{r4, r5, r6, pc}
   1b094:	cmp	r6, #0
   1b098:	beq	1b0a8 <argp_parse@@Base+0x1878>
   1b09c:	cmp	r5, #0
   1b0a0:	cmpne	r4, #0
   1b0a4:	popeq	{r4, r5, r6, pc}
   1b0a8:	bl	1b534 <argp_parse@@Base+0x1d04>
   1b0ac:	b	1b078 <argp_parse@@Base+0x1848>
   1b0b0:	cmp	r2, #0
   1b0b4:	cmpne	r1, #0
   1b0b8:	moveq	r2, #1
   1b0bc:	moveq	r1, r2
   1b0c0:	push	{r4, lr}
   1b0c4:	bl	1c9ec <argp_parse@@Base+0x31bc>
   1b0c8:	cmp	r0, #0
   1b0cc:	popne	{r4, pc}
   1b0d0:	bl	1b534 <argp_parse@@Base+0x1d04>
   1b0d4:	mov	r2, r1
   1b0d8:	mov	r1, r0
   1b0dc:	mov	r0, #0
   1b0e0:	b	1b078 <argp_parse@@Base+0x1848>
   1b0e4:	mov	r2, r1
   1b0e8:	mov	r1, r0
   1b0ec:	mov	r0, #0
   1b0f0:	b	1b0b0 <argp_parse@@Base+0x1880>
   1b0f4:	push	{r4, r5, r6, lr}
   1b0f8:	subs	r6, r0, #0
   1b0fc:	sub	sp, sp, #8
   1b100:	mov	r5, r1
   1b104:	ldr	r4, [r1]
   1b108:	beq	1b144 <argp_parse@@Base+0x1914>
   1b10c:	lsr	r1, r4, #1
   1b110:	add	r3, r1, #1
   1b114:	mvn	r3, r3
   1b118:	cmp	r4, r3
   1b11c:	bhi	1b140 <argp_parse@@Base+0x1910>
   1b120:	add	r4, r4, #1
   1b124:	add	r4, r4, r1
   1b128:	mov	r0, r6
   1b12c:	mov	r1, r4
   1b130:	bl	1b078 <argp_parse@@Base+0x1848>
   1b134:	str	r4, [r5]
   1b138:	add	sp, sp, #8
   1b13c:	pop	{r4, r5, r6, pc}
   1b140:	bl	1b534 <argp_parse@@Base+0x1d04>
   1b144:	cmp	r4, #0
   1b148:	bne	1b128 <argp_parse@@Base+0x18f8>
   1b14c:	mov	r1, r2
   1b150:	mov	r0, #64	; 0x40
   1b154:	str	r2, [sp, #4]
   1b158:	bl	1ca38 <argp_parse@@Base+0x3208>
   1b15c:	ldr	r2, [sp, #4]
   1b160:	cmp	r0, #0
   1b164:	movne	r4, r0
   1b168:	addeq	r4, r0, #1
   1b16c:	b	1b128 <argp_parse@@Base+0x18f8>
   1b170:	mov	r2, #1
   1b174:	b	1b0f4 <argp_parse@@Base+0x18c4>
   1b178:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b17c:	sub	sp, sp, #12
   1b180:	ldr	r6, [r1]
   1b184:	mov	sl, r1
   1b188:	mov	r9, r0
   1b18c:	asrs	r4, r6, #1
   1b190:	mov	r5, r2
   1b194:	mov	fp, r3
   1b198:	ldr	r7, [sp, #48]	; 0x30
   1b19c:	bmi	1b308 <argp_parse@@Base+0x1ad8>
   1b1a0:	mvn	r3, #-2147483648	; 0x80000000
   1b1a4:	sub	r3, r3, r4
   1b1a8:	cmp	r6, r3
   1b1ac:	movle	r3, #0
   1b1b0:	movgt	r3, #1
   1b1b4:	mvn	r8, fp
   1b1b8:	cmp	r3, #0
   1b1bc:	addeq	r4, r4, r6
   1b1c0:	mvnne	r4, #-2147483648	; 0x80000000
   1b1c4:	lsr	r8, r8, #31
   1b1c8:	cmp	fp, r4
   1b1cc:	movge	r3, #0
   1b1d0:	andlt	r3, r8, #1
   1b1d4:	cmp	r3, #0
   1b1d8:	beq	1b2c0 <argp_parse@@Base+0x1a90>
   1b1dc:	cmp	r7, #0
   1b1e0:	blt	1b390 <argp_parse@@Base+0x1b60>
   1b1e4:	bne	1b388 <argp_parse@@Base+0x1b58>
   1b1e8:	mov	r2, #64	; 0x40
   1b1ec:	mov	r1, r7
   1b1f0:	mov	r0, r2
   1b1f4:	str	r2, [sp, #4]
   1b1f8:	bl	1cc44 <argp_parse@@Base+0x3414>
   1b1fc:	ldr	r2, [sp, #4]
   1b200:	mov	r1, r7
   1b204:	mov	r4, r0
   1b208:	mov	r0, r2
   1b20c:	bl	1ce64 <argp_parse@@Base+0x3634>
   1b210:	ldr	r2, [sp, #4]
   1b214:	sub	r1, r2, r1
   1b218:	cmp	r9, #0
   1b21c:	sub	r3, r4, r6
   1b220:	streq	r9, [sl]
   1b224:	cmp	r3, r5
   1b228:	bge	1b2ac <argp_parse@@Base+0x1a7c>
   1b22c:	cmp	r5, #0
   1b230:	blt	1b31c <argp_parse@@Base+0x1aec>
   1b234:	cmp	r6, #0
   1b238:	blt	1b258 <argp_parse@@Base+0x1a28>
   1b23c:	mvn	r3, #-2147483648	; 0x80000000
   1b240:	sub	r3, r3, r5
   1b244:	cmp	r6, r3
   1b248:	movle	r3, #0
   1b24c:	movgt	r3, #1
   1b250:	cmp	r3, #0
   1b254:	bne	1b418 <argp_parse@@Base+0x1be8>
   1b258:	add	r5, r6, r5
   1b25c:	cmp	fp, r5
   1b260:	movge	r8, #0
   1b264:	andlt	r8, r8, #1
   1b268:	cmp	r8, #0
   1b26c:	mov	r4, r5
   1b270:	bne	1b418 <argp_parse@@Base+0x1be8>
   1b274:	cmp	r7, #0
   1b278:	blt	1b330 <argp_parse@@Base+0x1b00>
   1b27c:	beq	1b2a8 <argp_parse@@Base+0x1a78>
   1b280:	cmp	r5, #0
   1b284:	blt	1b3d8 <argp_parse@@Base+0x1ba8>
   1b288:	mov	r1, r7
   1b28c:	mvn	r0, #-2147483648	; 0x80000000
   1b290:	bl	1cc44 <argp_parse@@Base+0x3414>
   1b294:	cmp	r5, r0
   1b298:	movle	r0, #0
   1b29c:	movgt	r0, #1
   1b2a0:	cmp	r0, #0
   1b2a4:	bne	1b418 <argp_parse@@Base+0x1be8>
   1b2a8:	mul	r1, r5, r7
   1b2ac:	mov	r0, r9
   1b2b0:	bl	1b028 <argp_parse@@Base+0x17f8>
   1b2b4:	str	r4, [sl]
   1b2b8:	add	sp, sp, #12
   1b2bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b2c0:	cmp	r7, #0
   1b2c4:	blt	1b35c <argp_parse@@Base+0x1b2c>
   1b2c8:	beq	1b1e8 <argp_parse@@Base+0x19b8>
   1b2cc:	cmp	r4, #0
   1b2d0:	blt	1b398 <argp_parse@@Base+0x1b68>
   1b2d4:	mov	r1, r7
   1b2d8:	mvn	r0, #-2147483648	; 0x80000000
   1b2dc:	bl	1cc44 <argp_parse@@Base+0x3414>
   1b2e0:	cmp	r0, r4
   1b2e4:	movge	r0, #0
   1b2e8:	movlt	r0, #1
   1b2ec:	cmp	r0, #0
   1b2f0:	mvnne	r2, #-2147483648	; 0x80000000
   1b2f4:	bne	1b1ec <argp_parse@@Base+0x19bc>
   1b2f8:	mul	r1, r7, r4
   1b2fc:	cmp	r1, #63	; 0x3f
   1b300:	bgt	1b218 <argp_parse@@Base+0x19e8>
   1b304:	b	1b1e8 <argp_parse@@Base+0x19b8>
   1b308:	rsb	r3, r4, #-2147483648	; 0x80000000
   1b30c:	cmp	r6, r3
   1b310:	movge	r3, #0
   1b314:	movlt	r3, #1
   1b318:	b	1b1b4 <argp_parse@@Base+0x1984>
   1b31c:	rsb	r3, r5, #-2147483648	; 0x80000000
   1b320:	cmp	r6, r3
   1b324:	movge	r3, #0
   1b328:	movlt	r3, #1
   1b32c:	b	1b250 <argp_parse@@Base+0x1a20>
   1b330:	cmp	r5, #0
   1b334:	blt	1b3bc <argp_parse@@Base+0x1b8c>
   1b338:	cmn	r7, #1
   1b33c:	beq	1b2a8 <argp_parse@@Base+0x1a78>
   1b340:	mov	r1, r7
   1b344:	mov	r0, #-2147483648	; 0x80000000
   1b348:	bl	1cc44 <argp_parse@@Base+0x3414>
   1b34c:	cmp	r5, r0
   1b350:	movle	r0, #0
   1b354:	movgt	r0, #1
   1b358:	b	1b2a0 <argp_parse@@Base+0x1a70>
   1b35c:	cmp	r4, #0
   1b360:	blt	1b3fc <argp_parse@@Base+0x1bcc>
   1b364:	cmn	r7, #1
   1b368:	beq	1b2f8 <argp_parse@@Base+0x1ac8>
   1b36c:	mov	r1, r7
   1b370:	mov	r0, #-2147483648	; 0x80000000
   1b374:	bl	1cc44 <argp_parse@@Base+0x3414>
   1b378:	cmp	r0, r4
   1b37c:	movge	r0, #0
   1b380:	movlt	r0, #1
   1b384:	b	1b2ec <argp_parse@@Base+0x1abc>
   1b388:	mov	r4, fp
   1b38c:	b	1b2d4 <argp_parse@@Base+0x1aa4>
   1b390:	mov	r4, fp
   1b394:	b	1b364 <argp_parse@@Base+0x1b34>
   1b398:	cmn	r4, #1
   1b39c:	beq	1b2f8 <argp_parse@@Base+0x1ac8>
   1b3a0:	mov	r1, r4
   1b3a4:	mov	r0, #-2147483648	; 0x80000000
   1b3a8:	bl	1cc44 <argp_parse@@Base+0x3414>
   1b3ac:	cmp	r7, r0
   1b3b0:	movle	r0, #0
   1b3b4:	movgt	r0, #1
   1b3b8:	b	1b2ec <argp_parse@@Base+0x1abc>
   1b3bc:	mov	r1, r7
   1b3c0:	mvn	r0, #-2147483648	; 0x80000000
   1b3c4:	bl	1cc44 <argp_parse@@Base+0x3414>
   1b3c8:	cmp	r5, r0
   1b3cc:	movge	r0, #0
   1b3d0:	movlt	r0, #1
   1b3d4:	b	1b2a0 <argp_parse@@Base+0x1a70>
   1b3d8:	cmn	r5, #1
   1b3dc:	beq	1b2a8 <argp_parse@@Base+0x1a78>
   1b3e0:	mov	r1, r5
   1b3e4:	mov	r0, #-2147483648	; 0x80000000
   1b3e8:	bl	1cc44 <argp_parse@@Base+0x3414>
   1b3ec:	cmp	r7, r0
   1b3f0:	movle	r0, #0
   1b3f4:	movgt	r0, #1
   1b3f8:	b	1b2a0 <argp_parse@@Base+0x1a70>
   1b3fc:	mov	r1, r7
   1b400:	mvn	r0, #-2147483648	; 0x80000000
   1b404:	bl	1cc44 <argp_parse@@Base+0x3414>
   1b408:	cmp	r0, r4
   1b40c:	movle	r0, #0
   1b410:	movgt	r0, #1
   1b414:	b	1b2ec <argp_parse@@Base+0x1abc>
   1b418:	bl	1b534 <argp_parse@@Base+0x1d04>
   1b41c:	push	{r4, lr}
   1b420:	mov	r1, #1
   1b424:	bl	1b560 <argp_parse@@Base+0x1d30>
   1b428:	cmp	r0, #0
   1b42c:	popne	{r4, pc}
   1b430:	bl	1b534 <argp_parse@@Base+0x1d04>
   1b434:	push	{r4, lr}
   1b438:	mov	r1, #1
   1b43c:	bl	1b560 <argp_parse@@Base+0x1d30>
   1b440:	cmp	r0, #0
   1b444:	popne	{r4, pc}
   1b448:	bl	1b534 <argp_parse@@Base+0x1d04>
   1b44c:	push	{r4, lr}
   1b450:	bl	1b560 <argp_parse@@Base+0x1d30>
   1b454:	cmp	r0, #0
   1b458:	popne	{r4, pc}
   1b45c:	bl	1b534 <argp_parse@@Base+0x1d04>
   1b460:	push	{r4, lr}
   1b464:	bl	1b560 <argp_parse@@Base+0x1d30>
   1b468:	cmp	r0, #0
   1b46c:	popne	{r4, pc}
   1b470:	bl	1b534 <argp_parse@@Base+0x1d04>
   1b474:	push	{r4, r5, r6, lr}
   1b478:	mov	r6, r0
   1b47c:	mov	r0, r1
   1b480:	mov	r4, r1
   1b484:	bl	1b5a8 <argp_parse@@Base+0x1d78>
   1b488:	subs	r5, r0, #0
   1b48c:	beq	1b4a4 <argp_parse@@Base+0x1c74>
   1b490:	mov	r2, r4
   1b494:	mov	r1, r6
   1b498:	bl	11744 <memcpy@plt>
   1b49c:	mov	r0, r5
   1b4a0:	pop	{r4, r5, r6, pc}
   1b4a4:	bl	1b534 <argp_parse@@Base+0x1d04>
   1b4a8:	push	{r4, r5, r6, lr}
   1b4ac:	mov	r6, r0
   1b4b0:	mov	r0, r1
   1b4b4:	mov	r4, r1
   1b4b8:	bl	1b5a8 <argp_parse@@Base+0x1d78>
   1b4bc:	subs	r5, r0, #0
   1b4c0:	beq	1b4d8 <argp_parse@@Base+0x1ca8>
   1b4c4:	mov	r2, r4
   1b4c8:	mov	r1, r6
   1b4cc:	bl	11744 <memcpy@plt>
   1b4d0:	mov	r0, r5
   1b4d4:	pop	{r4, r5, r6, pc}
   1b4d8:	bl	1b534 <argp_parse@@Base+0x1d04>
   1b4dc:	push	{r4, r5, r6, lr}
   1b4e0:	mov	r6, r0
   1b4e4:	add	r0, r1, #1
   1b4e8:	mov	r4, r1
   1b4ec:	bl	1b5a8 <argp_parse@@Base+0x1d78>
   1b4f0:	subs	r5, r0, #0
   1b4f4:	beq	1b514 <argp_parse@@Base+0x1ce4>
   1b4f8:	mov	r3, #0
   1b4fc:	mov	r1, r6
   1b500:	strb	r3, [r5, r4]
   1b504:	mov	r2, r4
   1b508:	bl	11744 <memcpy@plt>
   1b50c:	mov	r0, r5
   1b510:	pop	{r4, r5, r6, pc}
   1b514:	bl	1b534 <argp_parse@@Base+0x1d04>
   1b518:	push	{r4, lr}
   1b51c:	mov	r4, r0
   1b520:	bl	11918 <strlen@plt>
   1b524:	add	r1, r0, #1
   1b528:	mov	r0, r4
   1b52c:	pop	{r4, lr}
   1b530:	b	1b474 <argp_parse@@Base+0x1c44>
   1b534:	ldr	r1, [pc, #24]	; 1b554 <argp_parse@@Base+0x1d24>
   1b538:	push	{r4, lr}
   1b53c:	ldr	r0, [r1]
   1b540:	ldr	r3, [pc, #16]	; 1b558 <argp_parse@@Base+0x1d28>
   1b544:	ldr	r2, [pc, #16]	; 1b55c <argp_parse@@Base+0x1d2c>
   1b548:	mov	r1, #0
   1b54c:	bl	11858 <error@plt>
   1b550:	bl	11ae0 <abort@plt>
   1b554:	andeq	pc, r2, ip, lsr #11
   1b558:	andeq	lr, r1, r8, asr r9
   1b55c:			; <UNDEFINED> instruction: 0x0001dfbc
   1b560:	cmp	r1, #0
   1b564:	cmpne	r0, #0
   1b568:	moveq	r1, #1
   1b56c:	moveq	r0, r1
   1b570:	umull	r2, r3, r0, r1
   1b574:	adds	r3, r3, #0
   1b578:	movne	r3, #1
   1b57c:	cmp	r2, #0
   1b580:	blt	1b590 <argp_parse@@Base+0x1d60>
   1b584:	cmp	r3, #0
   1b588:	bne	1b590 <argp_parse@@Base+0x1d60>
   1b58c:	b	11654 <calloc@plt>
   1b590:	push	{r4, lr}
   1b594:	bl	11948 <__errno_location@plt>
   1b598:	mov	r3, #12
   1b59c:	str	r3, [r0]
   1b5a0:	mov	r0, #0
   1b5a4:	pop	{r4, pc}
   1b5a8:	cmp	r0, #0
   1b5ac:	moveq	r0, #1
   1b5b0:	cmp	r0, #0
   1b5b4:	blt	1b5bc <argp_parse@@Base+0x1d8c>
   1b5b8:	b	11894 <malloc@plt>
   1b5bc:	push	{r4, lr}
   1b5c0:	bl	11948 <__errno_location@plt>
   1b5c4:	mov	r3, #12
   1b5c8:	str	r3, [r0]
   1b5cc:	mov	r0, #0
   1b5d0:	pop	{r4, pc}
   1b5d4:	cmp	r0, #0
   1b5d8:	beq	1b5fc <argp_parse@@Base+0x1dcc>
   1b5dc:	cmp	r1, #0
   1b5e0:	push	{lr}		; (str lr, [sp, #-4]!)
   1b5e4:	sub	sp, sp, #12
   1b5e8:	beq	1b604 <argp_parse@@Base+0x1dd4>
   1b5ec:	blt	1b61c <argp_parse@@Base+0x1dec>
   1b5f0:	add	sp, sp, #12
   1b5f4:	pop	{lr}		; (ldr lr, [sp], #4)
   1b5f8:	b	117ec <realloc@plt>
   1b5fc:	mov	r0, r1
   1b600:	b	1b5a8 <argp_parse@@Base+0x1d78>
   1b604:	str	r1, [sp, #4]
   1b608:	bl	1a89c <argp_parse@@Base+0x106c>
   1b60c:	ldr	r3, [sp, #4]
   1b610:	mov	r0, r3
   1b614:	add	sp, sp, #12
   1b618:	pop	{pc}		; (ldr pc, [sp], #4)
   1b61c:	bl	11948 <__errno_location@plt>
   1b620:	mov	r2, #12
   1b624:	mov	r3, #0
   1b628:	str	r2, [r0]
   1b62c:	b	1b610 <argp_parse@@Base+0x1de0>
   1b630:	push	{r4, r5, r6, r7, r8, lr}
   1b634:	mov	r8, r0
   1b638:	mov	r0, #36	; 0x24
   1b63c:	mov	r7, r1
   1b640:	mov	r6, r2
   1b644:	mov	r5, r3
   1b648:	bl	1b5a8 <argp_parse@@Base+0x1d78>
   1b64c:	subs	r4, r0, #0
   1b650:	beq	1b694 <argp_parse@@Base+0x1e64>
   1b654:	mov	r0, #0
   1b658:	str	r5, [r4, #12]
   1b65c:	str	r0, [r4, #20]
   1b660:	str	r0, [r4, #16]
   1b664:	str	r8, [r4]
   1b668:	str	r7, [r4, #4]
   1b66c:	str	r6, [r4, #8]
   1b670:	mov	r0, #200	; 0xc8
   1b674:	bl	1b5a8 <argp_parse@@Base+0x1d78>
   1b678:	cmp	r0, #0
   1b67c:	addne	r3, r0, #200	; 0xc8
   1b680:	mov	r5, r0
   1b684:	str	r0, [r4, #24]
   1b688:	strne	r0, [r4, #28]
   1b68c:	strne	r3, [r4, #32]
   1b690:	beq	1b69c <argp_parse@@Base+0x1e6c>
   1b694:	mov	r0, r4
   1b698:	pop	{r4, r5, r6, r7, r8, pc}
   1b69c:	mov	r0, r4
   1b6a0:	bl	1a89c <argp_parse@@Base+0x106c>
   1b6a4:	mov	r4, r5
   1b6a8:	b	1b694 <argp_parse@@Base+0x1e64>
   1b6ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b6b0:	mov	r7, r0
   1b6b4:	ldr	r6, [r0, #24]
   1b6b8:	ldr	r3, [r0, #16]
   1b6bc:	ldr	fp, [r0, #28]
   1b6c0:	sub	sp, sp, #12
   1b6c4:	add	r6, r6, r3
   1b6c8:	mov	r9, #32
   1b6cc:	cmp	r6, fp
   1b6d0:	bcs	1b7ac <argp_parse@@Base+0x1f7c>
   1b6d4:	ldr	r8, [r7, #20]
   1b6d8:	cmp	r8, #0
   1b6dc:	bne	1b74c <argp_parse@@Base+0x1f1c>
   1b6e0:	ldr	r4, [r7, #4]
   1b6e4:	cmp	r4, #0
   1b6e8:	beq	1b9f0 <argp_parse@@Base+0x21c0>
   1b6ec:	ldr	r2, [r7, #32]
   1b6f0:	add	r3, fp, r4
   1b6f4:	cmp	r2, r3
   1b6f8:	bls	1b70c <argp_parse@@Base+0x1edc>
   1b6fc:	b	1bb38 <argp_parse@@Base+0x2308>
   1b700:	add	r8, r8, #1
   1b704:	cmp	r4, r8
   1b708:	beq	1b740 <argp_parse@@Base+0x1f10>
   1b70c:	ldr	r0, [r7]
   1b710:	ldr	r3, [r0, #20]
   1b714:	ldr	r2, [r0, #24]
   1b718:	add	r1, r3, #1
   1b71c:	cmp	r3, r2
   1b720:	strcc	r1, [r0, #20]
   1b724:	strbcc	r9, [r3]
   1b728:	bcc	1b700 <argp_parse@@Base+0x1ed0>
   1b72c:	mov	r1, r9
   1b730:	add	r8, r8, #1
   1b734:	bl	119f0 <__overflow@plt>
   1b738:	cmp	r4, r8
   1b73c:	bne	1b70c <argp_parse@@Base+0x1edc>
   1b740:	ldr	fp, [r7, #28]
   1b744:	mov	r8, r4
   1b748:	str	r4, [r7, #20]
   1b74c:	sub	sl, fp, r6
   1b750:	mov	r2, sl
   1b754:	mov	r1, #10
   1b758:	mov	r0, r6
   1b75c:	bl	119a8 <memchr@plt>
   1b760:	cmp	r8, #0
   1b764:	movlt	r8, #0
   1b768:	movlt	r3, r8
   1b76c:	str	r6, [sp]
   1b770:	mov	r4, r0
   1b774:	strlt	r3, [r7, #20]
   1b778:	cmp	r4, #0
   1b77c:	beq	1ba14 <argp_parse@@Base+0x21e4>
   1b780:	sub	r2, r4, r6
   1b784:	ldr	r3, [r7, #8]
   1b788:	add	r2, r2, r8
   1b78c:	cmp	r2, r3
   1b790:	bge	1b7c0 <argp_parse@@Base+0x1f90>
   1b794:	ldr	fp, [r7, #28]
   1b798:	add	r6, r4, #1
   1b79c:	mov	r3, #0
   1b7a0:	cmp	r6, fp
   1b7a4:	str	r3, [r7, #20]
   1b7a8:	bcc	1b6d4 <argp_parse@@Base+0x1ea4>
   1b7ac:	ldr	r3, [r7, #24]
   1b7b0:	sub	r3, fp, r3
   1b7b4:	str	r3, [r7, #16]
   1b7b8:	add	sp, sp, #12
   1b7bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b7c0:	ldr	r2, [r7, #12]
   1b7c4:	sub	r5, r3, #1
   1b7c8:	cmp	r2, #0
   1b7cc:	str	r2, [sp, #4]
   1b7d0:	blt	1bacc <argp_parse@@Base+0x229c>
   1b7d4:	add	r5, r5, #1
   1b7d8:	sub	r8, r5, r8
   1b7dc:	adds	r8, r6, r8
   1b7e0:	bcs	1ba4c <argp_parse@@Base+0x221c>
   1b7e4:	bl	118f4 <__ctype_b_loc@plt>
   1b7e8:	mov	r3, r8
   1b7ec:	ldr	r0, [r0]
   1b7f0:	b	1b7fc <argp_parse@@Base+0x1fcc>
   1b7f4:	cmp	r3, r6
   1b7f8:	bcc	1ba50 <argp_parse@@Base+0x2220>
   1b7fc:	mov	r1, r3
   1b800:	sub	r3, r3, #1
   1b804:	ldrb	r2, [r1]
   1b808:	mov	r5, r3
   1b80c:	lsl	r2, r2, #1
   1b810:	ldrh	r2, [r0, r2]
   1b814:	tst	r2, #1
   1b818:	beq	1b7f4 <argp_parse@@Base+0x1fc4>
   1b81c:	add	r5, r1, #1
   1b820:	cmp	r5, r6
   1b824:	bls	1ba64 <argp_parse@@Base+0x2234>
   1b828:	cmp	r1, r6
   1b82c:	bcc	1ba5c <argp_parse@@Base+0x222c>
   1b830:	mov	r1, r3
   1b834:	sub	r8, r6, #1
   1b838:	b	1b854 <argp_parse@@Base+0x2024>
   1b83c:	ldrb	r3, [r1]
   1b840:	sub	r1, r1, #1
   1b844:	lsl	r3, r3, #1
   1b848:	ldrh	r3, [r0, r3]
   1b84c:	tst	r3, #1
   1b850:	beq	1bb7c <argp_parse@@Base+0x234c>
   1b854:	cmp	r8, r1
   1b858:	mov	r2, r1
   1b85c:	bne	1b83c <argp_parse@@Base+0x200c>
   1b860:	add	r8, r8, #1
   1b864:	add	r3, sl, #1
   1b868:	add	r3, r6, r3
   1b86c:	cmp	r5, r3
   1b870:	beq	1b958 <argp_parse@@Base+0x2128>
   1b874:	add	r3, r8, #1
   1b878:	ldr	r1, [sp, #4]
   1b87c:	sub	r2, r5, r3
   1b880:	cmp	r2, r1
   1b884:	bge	1b974 <argp_parse@@Base+0x2144>
   1b888:	cmp	r5, fp
   1b88c:	bcs	1b96c <argp_parse@@Base+0x213c>
   1b890:	ldr	r3, [r7, #32]
   1b894:	ldr	r2, [sp, #4]
   1b898:	sub	r3, r3, fp
   1b89c:	add	r0, r2, #1
   1b8a0:	cmp	r3, r0
   1b8a4:	bgt	1bbac <argp_parse@@Base+0x237c>
   1b8a8:	ldr	r0, [r7, #24]
   1b8ac:	cmp	r8, r0
   1b8b0:	bls	1b8c4 <argp_parse@@Base+0x2094>
   1b8b4:	sub	r2, r8, r0
   1b8b8:	ldr	r3, [r7]
   1b8bc:	mov	r1, #1
   1b8c0:	bl	11768 <fwrite_unlocked@plt>
   1b8c4:	ldr	r0, [r7]
   1b8c8:	ldr	r2, [r0, #24]
   1b8cc:	ldr	r3, [r0, #20]
   1b8d0:	cmp	r3, r2
   1b8d4:	addcc	r2, r3, #1
   1b8d8:	strcc	r2, [r0, #20]
   1b8dc:	movcc	r2, #10
   1b8e0:	strbcc	r2, [r3]
   1b8e4:	bcs	1bbec <argp_parse@@Base+0x23bc>
   1b8e8:	ldr	r6, [r7, #24]
   1b8ec:	ldr	r3, [sp]
   1b8f0:	sub	r2, r5, r6
   1b8f4:	sub	r3, r3, r6
   1b8f8:	add	sl, sl, r3
   1b8fc:	mov	fp, r2
   1b900:	mov	r4, r6
   1b904:	ldr	r3, [r7, #12]
   1b908:	cmp	r3, r2
   1b90c:	bgt	1b994 <argp_parse@@Base+0x2164>
   1b910:	cmp	r3, #0
   1b914:	movgt	r2, r6
   1b918:	ble	1b934 <argp_parse@@Base+0x2104>
   1b91c:	strb	r9, [r2], #1
   1b920:	ldr	r3, [r7, #12]
   1b924:	sub	r1, r2, r6
   1b928:	cmp	r3, r1
   1b92c:	bgt	1b91c <argp_parse@@Base+0x20ec>
   1b930:	mov	r6, r2
   1b934:	cmp	r6, r5
   1b938:	bcc	1bb1c <argp_parse@@Base+0x22ec>
   1b93c:	sub	fp, sl, fp
   1b940:	cmp	r3, #0
   1b944:	add	fp, r6, fp
   1b948:	mvneq	r3, #0
   1b94c:	str	fp, [r7, #28]
   1b950:	str	r3, [r7, #20]
   1b954:	b	1b6cc <argp_parse@@Base+0x1e9c>
   1b958:	ldr	r3, [r7, #32]
   1b95c:	ldr	r2, [sp, #4]
   1b960:	sub	r3, r3, r8
   1b964:	cmp	r3, r2
   1b968:	ble	1b888 <argp_parse@@Base+0x2058>
   1b96c:	add	r3, r8, #1
   1b970:	sub	r2, r5, r3
   1b974:	sub	fp, r5, r6
   1b978:	mov	r4, r6
   1b97c:	mov	r6, r3
   1b980:	mov	r3, #10
   1b984:	strb	r3, [r8]
   1b988:	ldr	r3, [r7, #12]
   1b98c:	cmp	r3, r2
   1b990:	ble	1b910 <argp_parse@@Base+0x20e0>
   1b994:	add	r2, sl, #1
   1b998:	add	r2, r4, r2
   1b99c:	cmp	r5, r2
   1b9a0:	beq	1bb98 <argp_parse@@Base+0x2368>
   1b9a4:	cmp	r3, #0
   1b9a8:	movgt	r8, #0
   1b9ac:	bgt	1b9c4 <argp_parse@@Base+0x2194>
   1b9b0:	b	1b934 <argp_parse@@Base+0x2104>
   1b9b4:	ldr	r3, [r7, #12]
   1b9b8:	add	r8, r8, #1
   1b9bc:	cmp	r3, r8
   1b9c0:	ble	1b934 <argp_parse@@Base+0x2104>
   1b9c4:	ldr	r0, [r7]
   1b9c8:	ldr	r3, [r0, #20]
   1b9cc:	ldr	r2, [r0, #24]
   1b9d0:	add	r1, r3, #1
   1b9d4:	cmp	r3, r2
   1b9d8:	strcc	r1, [r0, #20]
   1b9dc:	strbcc	r9, [r3]
   1b9e0:	bcc	1b9b4 <argp_parse@@Base+0x2184>
   1b9e4:	mov	r1, r9
   1b9e8:	bl	119f0 <__overflow@plt>
   1b9ec:	b	1b9b4 <argp_parse@@Base+0x2184>
   1b9f0:	sub	sl, fp, r6
   1b9f4:	mov	r2, sl
   1b9f8:	mov	r1, #10
   1b9fc:	mov	r0, r6
   1ba00:	bl	119a8 <memchr@plt>
   1ba04:	str	r6, [sp]
   1ba08:	mov	r4, r0
   1ba0c:	cmp	r4, #0
   1ba10:	bne	1b780 <argp_parse@@Base+0x1f50>
   1ba14:	ldr	r5, [r7, #8]
   1ba18:	add	r3, r8, sl
   1ba1c:	cmp	r3, r5
   1ba20:	bcc	1bc10 <argp_parse@@Base+0x23e0>
   1ba24:	ldr	r2, [r7, #12]
   1ba28:	sub	r5, r5, #1
   1ba2c:	cmp	r2, #0
   1ba30:	str	r2, [sp, #4]
   1ba34:	blt	1bbfc <argp_parse@@Base+0x23cc>
   1ba38:	add	r5, r5, #1
   1ba3c:	sub	r8, r5, r8
   1ba40:	adds	r8, r6, r8
   1ba44:	mov	r4, fp
   1ba48:	bcc	1b7e4 <argp_parse@@Base+0x1fb4>
   1ba4c:	mov	r5, r8
   1ba50:	add	r5, r5, #1
   1ba54:	cmp	r5, r6
   1ba58:	bls	1ba64 <argp_parse@@Base+0x2234>
   1ba5c:	mov	r8, r5
   1ba60:	b	1b864 <argp_parse@@Base+0x2034>
   1ba64:	cmp	r8, r4
   1ba68:	bcs	1baa0 <argp_parse@@Base+0x2270>
   1ba6c:	add	r5, r8, #1
   1ba70:	b	1ba94 <argp_parse@@Base+0x2264>
   1ba74:	bl	118f4 <__ctype_b_loc@plt>
   1ba78:	ldrb	r3, [r5]
   1ba7c:	add	r5, r5, #1
   1ba80:	lsl	r3, r3, #1
   1ba84:	ldr	r2, [r0]
   1ba88:	ldrh	r3, [r2, r3]
   1ba8c:	tst	r3, #1
   1ba90:	bne	1bab0 <argp_parse@@Base+0x2280>
   1ba94:	cmp	r5, r4
   1ba98:	mov	r8, r5
   1ba9c:	bne	1ba74 <argp_parse@@Base+0x2244>
   1baa0:	cmp	r8, r4
   1baa4:	beq	1bb84 <argp_parse@@Base+0x2354>
   1baa8:	bl	118f4 <__ctype_b_loc@plt>
   1baac:	ldr	r2, [r0]
   1bab0:	mov	r5, r8
   1bab4:	ldrb	r3, [r5, #1]!
   1bab8:	lsl	r3, r3, #1
   1babc:	ldrh	r3, [r2, r3]
   1bac0:	tst	r3, #1
   1bac4:	bne	1bab4 <argp_parse@@Base+0x2284>
   1bac8:	b	1b864 <argp_parse@@Base+0x2034>
   1bacc:	cmp	r4, fp
   1bad0:	str	r3, [sp]
   1bad4:	bcs	1bbf8 <argp_parse@@Base+0x23c8>
   1bad8:	sub	r0, r5, r8
   1badc:	sub	r2, fp, r4
   1bae0:	add	r0, r6, r0
   1bae4:	mov	r1, r4
   1bae8:	bl	116f0 <memmove@plt>
   1baec:	ldr	r2, [r7, #20]
   1baf0:	ldr	fp, [r7, #28]
   1baf4:	sub	r5, r5, r2
   1baf8:	add	r5, r6, r5
   1bafc:	mov	r3, #0
   1bb00:	sub	r4, r5, r4
   1bb04:	str	r3, [r7, #20]
   1bb08:	ldr	r3, [sp]
   1bb0c:	sub	fp, fp, r4
   1bb10:	add	r6, r6, r3
   1bb14:	str	fp, [r7, #28]
   1bb18:	b	1b6cc <argp_parse@@Base+0x1e9c>
   1bb1c:	add	r2, r4, sl
   1bb20:	sub	r2, r2, r5
   1bb24:	mov	r1, r5
   1bb28:	mov	r0, r6
   1bb2c:	bl	116f0 <memmove@plt>
   1bb30:	ldr	r3, [r7, #12]
   1bb34:	b	1b93c <argp_parse@@Base+0x210c>
   1bb38:	add	r5, r6, r4
   1bb3c:	sub	r2, fp, r6
   1bb40:	mov	r1, r6
   1bb44:	mov	r0, r5
   1bb48:	bl	116f0 <memmove@plt>
   1bb4c:	ldr	r3, [r7, #28]
   1bb50:	mov	r0, r6
   1bb54:	add	r3, r3, r4
   1bb58:	str	r3, [r7, #28]
   1bb5c:	mov	r2, r4
   1bb60:	mov	r1, r9
   1bb64:	bl	11984 <memset@plt>
   1bb68:	mov	r6, r5
   1bb6c:	ldr	fp, [r7, #28]
   1bb70:	mov	r8, r4
   1bb74:	str	r4, [r7, #20]
   1bb78:	b	1b74c <argp_parse@@Base+0x1f1c>
   1bb7c:	add	r8, r2, #1
   1bb80:	b	1b864 <argp_parse@@Base+0x2034>
   1bb84:	mov	r3, #0
   1bb88:	str	r3, [r7, #20]
   1bb8c:	add	r6, r8, #1
   1bb90:	ldr	fp, [r7, #28]
   1bb94:	b	1b6cc <argp_parse@@Base+0x1e9c>
   1bb98:	ldr	r2, [r7, #32]
   1bb9c:	sub	r2, r2, r5
   1bba0:	cmp	r3, r2
   1bba4:	ble	1b910 <argp_parse@@Base+0x20e0>
   1bba8:	b	1b9a4 <argp_parse@@Base+0x2174>
   1bbac:	sub	fp, fp, r5
   1bbb0:	mov	r2, fp
   1bbb4:	mov	r1, r5
   1bbb8:	add	r0, r8, r0
   1bbbc:	bl	116f0 <memmove@plt>
   1bbc0:	ldr	r2, [r7, #12]
   1bbc4:	mov	r3, #10
   1bbc8:	add	r5, r2, #1
   1bbcc:	add	r5, r8, r5
   1bbd0:	add	fp, r5, fp
   1bbd4:	sub	sl, fp, r6
   1bbd8:	mov	r4, r6
   1bbdc:	sub	fp, r5, r6
   1bbe0:	strb	r3, [r8]
   1bbe4:	add	r6, r8, #1
   1bbe8:	b	1b904 <argp_parse@@Base+0x20d4>
   1bbec:	mov	r1, #10
   1bbf0:	bl	119f0 <__overflow@plt>
   1bbf4:	b	1b8e8 <argp_parse@@Base+0x20b8>
   1bbf8:	add	r3, r8, sl
   1bbfc:	sub	r5, r5, r3
   1bc00:	add	fp, fp, r5
   1bc04:	str	fp, [r7, #28]
   1bc08:	str	r3, [r7, #20]
   1bc0c:	b	1b7ac <argp_parse@@Base+0x1f7c>
   1bc10:	str	r3, [r7, #20]
   1bc14:	ldr	fp, [r7, #28]
   1bc18:	b	1b7ac <argp_parse@@Base+0x1f7c>
   1bc1c:	push	{r4, lr}
   1bc20:	mov	r4, r0
   1bc24:	bl	1b6ac <argp_parse@@Base+0x1e7c>
   1bc28:	ldr	r2, [r4, #28]
   1bc2c:	ldr	r0, [r4, #24]
   1bc30:	cmp	r2, r0
   1bc34:	bls	1bc4c <argp_parse@@Base+0x241c>
   1bc38:	sub	r2, r2, r0
   1bc3c:	ldr	r3, [r4]
   1bc40:	mov	r1, #1
   1bc44:	bl	11768 <fwrite_unlocked@plt>
   1bc48:	ldr	r0, [r4, #24]
   1bc4c:	bl	1a89c <argp_parse@@Base+0x106c>
   1bc50:	mov	r0, r4
   1bc54:	pop	{r4, lr}
   1bc58:	b	1a89c <argp_parse@@Base+0x106c>
   1bc5c:	push	{r4, r5, r6, lr}
   1bc60:	mov	r4, r0
   1bc64:	mov	r5, r1
   1bc68:	bl	1b6ac <argp_parse@@Base+0x1e7c>
   1bc6c:	ldr	r3, [r4, #24]
   1bc70:	ldr	r2, [r4, #28]
   1bc74:	mov	r0, r3
   1bc78:	sub	r2, r2, r3
   1bc7c:	mov	r1, #1
   1bc80:	ldr	r3, [r4]
   1bc84:	bl	11768 <fwrite_unlocked@plt>
   1bc88:	ldr	r2, [r4, #28]
   1bc8c:	ldr	r3, [r4, #24]
   1bc90:	sub	r1, r2, r3
   1bc94:	cmp	r0, r1
   1bc98:	bne	1bcdc <argp_parse@@Base+0x24ac>
   1bc9c:	ldr	r1, [r4, #32]
   1bca0:	mov	r2, #0
   1bca4:	sub	r1, r1, r3
   1bca8:	cmp	r1, r5
   1bcac:	str	r3, [r4, #28]
   1bcb0:	str	r2, [r4, #16]
   1bcb4:	movcs	r3, #1
   1bcb8:	bcs	1bcd4 <argp_parse@@Base+0x24a4>
   1bcbc:	adds	r5, r1, r5
   1bcc0:	bcc	1bd0c <argp_parse@@Base+0x24dc>
   1bcc4:	bl	11948 <__errno_location@plt>
   1bcc8:	mov	r3, #0
   1bccc:	mov	r2, #12
   1bcd0:	str	r2, [r0]
   1bcd4:	mov	r0, r3
   1bcd8:	pop	{r4, r5, r6, pc}
   1bcdc:	ldr	r1, [r4, #16]
   1bce0:	sub	r2, r2, r0
   1bce4:	sub	r1, r1, r0
   1bce8:	str	r2, [r4, #28]
   1bcec:	str	r1, [r4, #16]
   1bcf0:	sub	r2, r2, r3
   1bcf4:	add	r1, r3, r0
   1bcf8:	mov	r0, r3
   1bcfc:	bl	116f0 <memmove@plt>
   1bd00:	mov	r3, #0
   1bd04:	mov	r0, r3
   1bd08:	pop	{r4, r5, r6, pc}
   1bd0c:	mov	r0, r3
   1bd10:	mov	r1, r5
   1bd14:	bl	1b5d4 <argp_parse@@Base+0x1da4>
   1bd18:	cmp	r0, #0
   1bd1c:	beq	1bcc4 <argp_parse@@Base+0x2494>
   1bd20:	add	r1, r0, r5
   1bd24:	mov	r3, #1
   1bd28:	str	r0, [r4, #24]
   1bd2c:	str	r0, [r4, #28]
   1bd30:	str	r1, [r4, #32]
   1bd34:	mov	r0, r3
   1bd38:	pop	{r4, r5, r6, pc}
   1bd3c:	ldr	r3, [r0, #32]
   1bd40:	ldr	r2, [r0, #28]
   1bd44:	sub	r3, r3, r2
   1bd48:	cmp	r3, r1
   1bd4c:	bcc	1bd58 <argp_parse@@Base+0x2528>
   1bd50:	mov	r0, #1
   1bd54:	bx	lr
   1bd58:	b	1bc5c <argp_parse@@Base+0x242c>
   1bd5c:	push	{r1, r2, r3}
   1bd60:	mov	r1, #150	; 0x96
   1bd64:	push	{r4, r5, r6, r7, lr}
   1bd68:	sub	sp, sp, #8
   1bd6c:	mov	r5, r0
   1bd70:	ldr	r7, [sp, #28]
   1bd74:	add	r6, sp, #32
   1bd78:	ldr	r3, [r5, #32]
   1bd7c:	ldr	r0, [r5, #28]
   1bd80:	sub	r2, r3, r0
   1bd84:	cmp	r1, r2
   1bd88:	bhi	1bdcc <argp_parse@@Base+0x259c>
   1bd8c:	sub	r4, r3, r0
   1bd90:	mov	r1, r4
   1bd94:	mov	r3, r6
   1bd98:	mov	r2, r7
   1bd9c:	str	r6, [sp, #4]
   1bda0:	bl	11a5c <vsnprintf@plt>
   1bda4:	cmp	r4, r0
   1bda8:	addls	r1, r0, #1
   1bdac:	bls	1bd78 <argp_parse@@Base+0x2548>
   1bdb0:	ldr	r3, [r5, #28]
   1bdb4:	add	r3, r3, r0
   1bdb8:	str	r3, [r5, #28]
   1bdbc:	add	sp, sp, #8
   1bdc0:	pop	{r4, r5, r6, r7, lr}
   1bdc4:	add	sp, sp, #12
   1bdc8:	bx	lr
   1bdcc:	mov	r0, r5
   1bdd0:	bl	1bc5c <argp_parse@@Base+0x242c>
   1bdd4:	cmp	r0, #0
   1bdd8:	ldrne	r3, [r5, #32]
   1bddc:	ldrne	r0, [r5, #28]
   1bde0:	bne	1bd8c <argp_parse@@Base+0x255c>
   1bde4:	mvn	r0, #0
   1bde8:	add	sp, sp, #8
   1bdec:	pop	{r4, r5, r6, r7, lr}
   1bdf0:	add	sp, sp, #12
   1bdf4:	bx	lr
   1bdf8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1bdfc:	ldr	r4, [r1, #32]
   1be00:	ldr	r8, [r1, #28]
   1be04:	ldr	r7, [r1]
   1be08:	add	r6, r0, r4, lsl #2
   1be0c:	mov	r2, r8
   1be10:	mov	r5, r7
   1be14:	cmp	r5, r4
   1be18:	movle	r3, #0
   1be1c:	movgt	r3, #1
   1be20:	cmp	r2, r4
   1be24:	movge	r3, #0
   1be28:	cmp	r3, #0
   1be2c:	beq	1bea0 <argp_parse@@Base+0x2670>
   1be30:	sub	r3, r5, r4
   1be34:	sub	sl, r4, r2
   1be38:	cmp	r3, sl
   1be3c:	ble	1be70 <argp_parse@@Base+0x2640>
   1be40:	sub	r5, r5, sl
   1be44:	add	sl, sl, r2
   1be48:	add	ip, r0, r5, lsl #2
   1be4c:	add	sl, r0, sl, lsl #2
   1be50:	add	r3, r0, r2, lsl #2
   1be54:	ldr	r9, [ip]
   1be58:	ldr	lr, [r3]
   1be5c:	str	r9, [r3], #4
   1be60:	cmp	sl, r3
   1be64:	str	lr, [ip], #4
   1be68:	bne	1be54 <argp_parse@@Base+0x2624>
   1be6c:	b	1be14 <argp_parse@@Base+0x25e4>
   1be70:	add	sl, r3, r2
   1be74:	add	r3, r0, r2, lsl #2
   1be78:	add	r9, r0, sl, lsl #2
   1be7c:	mov	r2, r6
   1be80:	ldr	lr, [r2]
   1be84:	ldr	ip, [r3]
   1be88:	str	lr, [r3], #4
   1be8c:	cmp	r3, r9
   1be90:	str	ip, [r2], #4
   1be94:	bne	1be80 <argp_parse@@Base+0x2650>
   1be98:	mov	r2, sl
   1be9c:	b	1be14 <argp_parse@@Base+0x25e4>
   1bea0:	sub	r4, r7, r4
   1bea4:	add	r8, r4, r8
   1bea8:	str	r8, [r1, #28]
   1beac:	str	r7, [r1, #32]
   1beb0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1beb4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1beb8:	sub	sp, sp, #44	; 0x2c
   1bebc:	str	r1, [sp, #20]
   1bec0:	ldr	r1, [sp, #88]	; 0x58
   1bec4:	str	r0, [sp, #24]
   1bec8:	str	r2, [sp, #28]
   1becc:	ldr	r8, [r1, #20]
   1bed0:	str	r3, [sp, #12]
   1bed4:	mov	r7, r8
   1bed8:	ldrb	r5, [r8]
   1bedc:	cmp	r5, #61	; 0x3d
   1bee0:	cmpne	r5, #0
   1bee4:	movne	r5, #1
   1bee8:	moveq	r5, #0
   1beec:	beq	1bf04 <argp_parse@@Base+0x26d4>
   1bef0:	ldrb	r3, [r7, #1]!
   1bef4:	cmp	r3, #0
   1bef8:	cmpne	r3, #61	; 0x3d
   1befc:	bne	1bef0 <argp_parse@@Base+0x26c0>
   1bf00:	sub	r5, r7, r8
   1bf04:	ldr	r3, [sp, #12]
   1bf08:	ldr	sl, [r3]
   1bf0c:	cmp	sl, #0
   1bf10:	beq	1c1c4 <argp_parse@@Base+0x2994>
   1bf14:	mov	fp, r3
   1bf18:	mov	r4, sl
   1bf1c:	mov	r6, #0
   1bf20:	mov	r2, r5
   1bf24:	mov	r1, r8
   1bf28:	mov	r0, r4
   1bf2c:	bl	11ad4 <strncmp@plt>
   1bf30:	mov	r9, fp
   1bf34:	cmp	r0, #0
   1bf38:	mov	r0, r4
   1bf3c:	bne	1bf4c <argp_parse@@Base+0x271c>
   1bf40:	bl	11918 <strlen@plt>
   1bf44:	cmp	r0, r5
   1bf48:	beq	1bfd8 <argp_parse@@Base+0x27a8>
   1bf4c:	ldr	r4, [fp, #16]!
   1bf50:	add	r6, r6, #1
   1bf54:	cmp	r4, #0
   1bf58:	bne	1bf20 <argp_parse@@Base+0x26f0>
   1bf5c:	ldr	r3, [sp, #12]
   1bf60:	ldr	fp, [sp, #88]	; 0x58
   1bf64:	mov	r0, sl
   1bf68:	mov	r1, r8
   1bf6c:	mov	r9, r4
   1bf70:	mov	sl, r4
   1bf74:	mov	r8, r3
   1bf78:	mvn	r2, #0
   1bf7c:	str	r4, [sp, #36]	; 0x24
   1bf80:	str	r4, [sp, #16]
   1bf84:	str	r2, [sp, #32]
   1bf88:	mov	r2, r5
   1bf8c:	bl	11ad4 <strncmp@plt>
   1bf90:	cmp	r0, #0
   1bf94:	bne	1bfb4 <argp_parse@@Base+0x2784>
   1bf98:	cmp	r9, #0
   1bf9c:	beq	1c234 <argp_parse@@Base+0x2a04>
   1bfa0:	ldr	r3, [sp, #84]	; 0x54
   1bfa4:	cmp	r3, #0
   1bfa8:	beq	1c07c <argp_parse@@Base+0x284c>
   1bfac:	cmp	r4, #0
   1bfb0:	beq	1c0b0 <argp_parse@@Base+0x2880>
   1bfb4:	ldr	r0, [r8, #16]!
   1bfb8:	add	sl, sl, #1
   1bfbc:	cmp	r0, #0
   1bfc0:	beq	1c0e4 <argp_parse@@Base+0x28b4>
   1bfc4:	ldr	r1, [fp, #20]
   1bfc8:	b	1bf88 <argp_parse@@Base+0x2758>
   1bfcc:	cmp	r9, #0
   1bfd0:	beq	1c1c4 <argp_parse@@Base+0x2994>
   1bfd4:	ldr	r6, [sp, #32]
   1bfd8:	ldr	r3, [sp, #88]	; 0x58
   1bfdc:	ldr	r0, [sp, #88]	; 0x58
   1bfe0:	mov	r1, #0
   1bfe4:	ldr	r2, [r3]
   1bfe8:	str	r1, [r0, #20]
   1bfec:	add	r3, r2, #1
   1bff0:	str	r3, [r0]
   1bff4:	ldrb	r1, [r7]
   1bff8:	cmp	r1, #0
   1bffc:	bne	1c03c <argp_parse@@Base+0x280c>
   1c000:	ldr	r1, [r9, #4]
   1c004:	cmp	r1, #1
   1c008:	beq	1c240 <argp_parse@@Base+0x2a10>
   1c00c:	ldr	r3, [sp, #80]	; 0x50
   1c010:	ldr	r2, [r9, #8]
   1c014:	cmp	r3, #0
   1c018:	strne	r6, [r3]
   1c01c:	cmp	r2, #0
   1c020:	movne	r3, #0
   1c024:	ldreq	r3, [r9, #12]
   1c028:	ldrne	r1, [r9, #12]
   1c02c:	strne	r1, [r2]
   1c030:	mov	r0, r3
   1c034:	add	sp, sp, #44	; 0x2c
   1c038:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c03c:	ldr	r3, [r9, #4]
   1c040:	cmp	r3, #0
   1c044:	movne	r3, r0
   1c048:	addne	r7, r7, #1
   1c04c:	strne	r7, [r3, #12]
   1c050:	bne	1c00c <argp_parse@@Base+0x27dc>
   1c054:	ldr	r3, [sp, #92]	; 0x5c
   1c058:	cmp	r3, #0
   1c05c:	bne	1c18c <argp_parse@@Base+0x295c>
   1c060:	ldr	r1, [sp, #88]	; 0x58
   1c064:	ldr	r2, [r9, #12]
   1c068:	mov	r3, #63	; 0x3f
   1c06c:	str	r2, [r1, #8]
   1c070:	mov	r0, r3
   1c074:	add	sp, sp, #44	; 0x2c
   1c078:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c07c:	ldr	r2, [r9, #4]
   1c080:	ldr	r3, [r8, #4]
   1c084:	cmp	r2, r3
   1c088:	bne	1bfac <argp_parse@@Base+0x277c>
   1c08c:	ldr	r2, [r9, #8]
   1c090:	ldr	r3, [r8, #8]
   1c094:	cmp	r2, r3
   1c098:	bne	1bfac <argp_parse@@Base+0x277c>
   1c09c:	ldr	r2, [r9, #12]
   1c0a0:	ldr	r3, [r8, #12]
   1c0a4:	cmp	r2, r3
   1c0a8:	bne	1bfac <argp_parse@@Base+0x277c>
   1c0ac:	b	1bfb4 <argp_parse@@Base+0x2784>
   1c0b0:	ldr	r3, [sp, #92]	; 0x5c
   1c0b4:	cmp	r3, #0
   1c0b8:	ldr	r3, [sp, #16]
   1c0bc:	beq	1c17c <argp_parse@@Base+0x294c>
   1c0c0:	cmp	r3, #0
   1c0c4:	beq	1c398 <argp_parse@@Base+0x2b68>
   1c0c8:	ldr	r3, [sp, #16]
   1c0cc:	ldr	r0, [r8, #16]!
   1c0d0:	mov	r2, #1
   1c0d4:	cmp	r0, #0
   1c0d8:	strb	r2, [r3, sl]
   1c0dc:	add	sl, sl, #1
   1c0e0:	bne	1bfc4 <argp_parse@@Base+0x2794>
   1c0e4:	ldr	r3, [sp, #16]
   1c0e8:	cmp	r3, #0
   1c0ec:	cmpeq	r4, #0
   1c0f0:	beq	1bfcc <argp_parse@@Base+0x279c>
   1c0f4:	ldr	r3, [sp, #92]	; 0x5c
   1c0f8:	cmp	r3, #0
   1c0fc:	beq	1c27c <argp_parse@@Base+0x2a4c>
   1c100:	cmp	r4, #0
   1c104:	bne	1c304 <argp_parse@@Base+0x2ad4>
   1c108:	ldr	r5, [pc, #716]	; 1c3dc <argp_parse@@Base+0x2bac>
   1c10c:	ldr	r8, [sp, #16]
   1c110:	ldr	r7, [pc, #712]	; 1c3e0 <argp_parse@@Base+0x2bb0>
   1c114:	ldr	r0, [r5]
   1c118:	bl	11a50 <flockfile@plt>
   1c11c:	ldr	r3, [sp, #20]
   1c120:	ldr	r0, [r5]
   1c124:	ldr	r1, [pc, #696]	; 1c3e4 <argp_parse@@Base+0x2bb4>
   1c128:	ldr	r2, [r3]
   1c12c:	ldr	r3, [sp, #88]	; 0x58
   1c130:	add	r6, r8, r6
   1c134:	ldr	r3, [r3, #20]
   1c138:	str	r3, [sp]
   1c13c:	ldr	r3, [sp, #96]	; 0x60
   1c140:	bl	1193c <fprintf@plt>
   1c144:	ldr	r9, [sp, #12]
   1c148:	b	1c158 <argp_parse@@Base+0x2928>
   1c14c:	cmp	r8, r6
   1c150:	add	r4, r4, #1
   1c154:	beq	1c268 <argp_parse@@Base+0x2a38>
   1c158:	ldrb	r3, [r8], #1
   1c15c:	cmp	r3, #0
   1c160:	beq	1c14c <argp_parse@@Base+0x291c>
   1c164:	ldr	r3, [r9, r4, lsl #4]
   1c168:	ldr	r2, [sp, #96]	; 0x60
   1c16c:	mov	r1, r7
   1c170:	ldr	r0, [r5]
   1c174:	bl	1193c <fprintf@plt>
   1c178:	b	1c14c <argp_parse@@Base+0x291c>
   1c17c:	cmp	r3, #0
   1c180:	mov	r4, #1
   1c184:	bne	1c0c8 <argp_parse@@Base+0x2898>
   1c188:	b	1bfb4 <argp_parse@@Base+0x2784>
   1c18c:	ldr	r3, [sp, #20]
   1c190:	ldr	r1, [pc, #580]	; 1c3dc <argp_parse@@Base+0x2bac>
   1c194:	ldr	r2, [r3]
   1c198:	ldr	r3, [r9]
   1c19c:	ldr	r0, [r1]
   1c1a0:	str	r3, [sp]
   1c1a4:	ldr	r1, [pc, #572]	; 1c3e8 <argp_parse@@Base+0x2bb8>
   1c1a8:	ldr	r3, [sp, #96]	; 0x60
   1c1ac:	bl	1193c <fprintf@plt>
   1c1b0:	ldr	r1, [sp, #88]	; 0x58
   1c1b4:	ldr	r2, [r9, #12]
   1c1b8:	mov	r3, #63	; 0x3f
   1c1bc:	str	r2, [r1, #8]
   1c1c0:	b	1c070 <argp_parse@@Base+0x2840>
   1c1c4:	ldr	r3, [sp, #84]	; 0x54
   1c1c8:	cmp	r3, #0
   1c1cc:	bne	1c358 <argp_parse@@Base+0x2b28>
   1c1d0:	ldr	r3, [sp, #92]	; 0x5c
   1c1d4:	cmp	r3, #0
   1c1d8:	beq	1c204 <argp_parse@@Base+0x29d4>
   1c1dc:	ldr	r3, [sp, #20]
   1c1e0:	ldr	r1, [pc, #500]	; 1c3dc <argp_parse@@Base+0x2bac>
   1c1e4:	ldr	r2, [r3]
   1c1e8:	ldr	r3, [sp, #88]	; 0x58
   1c1ec:	ldr	r0, [r1]
   1c1f0:	ldr	r1, [pc, #500]	; 1c3ec <argp_parse@@Base+0x2bbc>
   1c1f4:	ldr	r3, [r3, #20]
   1c1f8:	str	r3, [sp]
   1c1fc:	ldr	r3, [sp, #96]	; 0x60
   1c200:	bl	1193c <fprintf@plt>
   1c204:	ldr	r3, [sp, #88]	; 0x58
   1c208:	ldr	r1, [sp, #88]	; 0x58
   1c20c:	mov	r2, #0
   1c210:	ldr	r3, [r3]
   1c214:	str	r2, [r1, #20]
   1c218:	add	r3, r3, #1
   1c21c:	str	r3, [r1]
   1c220:	mov	r3, #63	; 0x3f
   1c224:	mov	r0, r3
   1c228:	str	r2, [r1, #8]
   1c22c:	add	sp, sp, #44	; 0x2c
   1c230:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c234:	str	sl, [sp, #32]
   1c238:	mov	r9, r8
   1c23c:	b	1bfb4 <argp_parse@@Base+0x2784>
   1c240:	ldr	r1, [sp, #24]
   1c244:	cmp	r3, r1
   1c248:	bge	1c2d4 <argp_parse@@Base+0x2aa4>
   1c24c:	ldr	r1, [sp, #20]
   1c250:	add	r2, r2, #2
   1c254:	ldr	r3, [r1, r3, lsl #2]
   1c258:	ldr	r1, [sp, #88]	; 0x58
   1c25c:	str	r3, [r1, #12]
   1c260:	str	r2, [r1]
   1c264:	b	1c00c <argp_parse@@Base+0x27dc>
   1c268:	ldr	r1, [r5]
   1c26c:	mov	r0, #10
   1c270:	bl	11a38 <fputc@plt>
   1c274:	ldr	r0, [r5]
   1c278:	bl	11810 <funlockfile@plt>
   1c27c:	ldr	r3, [sp, #36]	; 0x24
   1c280:	cmp	r3, #0
   1c284:	beq	1c290 <argp_parse@@Base+0x2a60>
   1c288:	ldr	r0, [sp, #16]
   1c28c:	bl	1a89c <argp_parse@@Base+0x106c>
   1c290:	ldr	r3, [sp, #88]	; 0x58
   1c294:	ldr	r4, [r3, #20]
   1c298:	mov	r0, r4
   1c29c:	bl	11918 <strlen@plt>
   1c2a0:	ldr	r3, [sp, #88]	; 0x58
   1c2a4:	ldr	r1, [sp, #88]	; 0x58
   1c2a8:	mov	r2, #0
   1c2ac:	ldr	r3, [r3]
   1c2b0:	str	r2, [r1, #8]
   1c2b4:	add	r3, r3, #1
   1c2b8:	str	r3, [r1]
   1c2bc:	mov	r3, #63	; 0x3f
   1c2c0:	add	r0, r4, r0
   1c2c4:	str	r0, [r1, #20]
   1c2c8:	mov	r0, r3
   1c2cc:	add	sp, sp, #44	; 0x2c
   1c2d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c2d4:	ldr	r3, [sp, #92]	; 0x5c
   1c2d8:	cmp	r3, #0
   1c2dc:	bne	1c330 <argp_parse@@Base+0x2b00>
   1c2e0:	ldr	r2, [sp, #88]	; 0x58
   1c2e4:	ldr	r3, [r9, #12]
   1c2e8:	str	r3, [r2, #8]
   1c2ec:	ldr	r3, [sp, #28]
   1c2f0:	ldrb	r3, [r3]
   1c2f4:	cmp	r3, #58	; 0x3a
   1c2f8:	movne	r3, #63	; 0x3f
   1c2fc:	moveq	r3, #58	; 0x3a
   1c300:	b	1c030 <argp_parse@@Base+0x2800>
   1c304:	ldr	r3, [sp, #20]
   1c308:	ldr	r1, [pc, #204]	; 1c3dc <argp_parse@@Base+0x2bac>
   1c30c:	ldr	r2, [r3]
   1c310:	ldr	r3, [sp, #88]	; 0x58
   1c314:	ldr	r0, [r1]
   1c318:	ldr	r1, [pc, #208]	; 1c3f0 <argp_parse@@Base+0x2bc0>
   1c31c:	ldr	r3, [r3, #20]
   1c320:	str	r3, [sp]
   1c324:	ldr	r3, [sp, #96]	; 0x60
   1c328:	bl	1193c <fprintf@plt>
   1c32c:	b	1c27c <argp_parse@@Base+0x2a4c>
   1c330:	ldr	r3, [sp, #20]
   1c334:	ldr	r1, [pc, #160]	; 1c3dc <argp_parse@@Base+0x2bac>
   1c338:	ldr	r2, [r3]
   1c33c:	ldr	r3, [r9]
   1c340:	ldr	r0, [r1]
   1c344:	str	r3, [sp]
   1c348:	ldr	r1, [pc, #164]	; 1c3f4 <argp_parse@@Base+0x2bc4>
   1c34c:	ldr	r3, [sp, #96]	; 0x60
   1c350:	bl	1193c <fprintf@plt>
   1c354:	b	1c2e0 <argp_parse@@Base+0x2ab0>
   1c358:	ldr	r3, [sp, #88]	; 0x58
   1c35c:	ldr	r2, [sp, #20]
   1c360:	ldr	r3, [r3]
   1c364:	ldr	r3, [r2, r3, lsl #2]
   1c368:	ldrb	r3, [r3, #1]
   1c36c:	cmp	r3, #45	; 0x2d
   1c370:	beq	1c1d0 <argp_parse@@Base+0x29a0>
   1c374:	ldr	r3, [sp, #88]	; 0x58
   1c378:	ldr	r0, [sp, #28]
   1c37c:	ldr	r3, [r3, #20]
   1c380:	ldrb	r1, [r3]
   1c384:	bl	11930 <strchr@plt>
   1c388:	cmp	r0, #0
   1c38c:	beq	1c1d0 <argp_parse@@Base+0x29a0>
   1c390:	mvn	r3, #0
   1c394:	b	1c030 <argp_parse@@Base+0x2800>
   1c398:	mov	r0, r6
   1c39c:	bl	1b5a8 <argp_parse@@Base+0x1d78>
   1c3a0:	subs	r3, r0, #0
   1c3a4:	str	r3, [sp, #16]
   1c3a8:	beq	1c3d4 <argp_parse@@Base+0x2ba4>
   1c3ac:	mov	r2, r6
   1c3b0:	mov	r1, #0
   1c3b4:	bl	11984 <memset@plt>
   1c3b8:	mov	r3, #1
   1c3bc:	str	r3, [sp, #36]	; 0x24
   1c3c0:	ldr	r2, [sp, #32]
   1c3c4:	ldr	r3, [sp, #16]
   1c3c8:	mov	r1, #1
   1c3cc:	strb	r1, [r3, r2]
   1c3d0:	b	1c0c8 <argp_parse@@Base+0x2898>
   1c3d4:	mov	r4, #1
   1c3d8:	b	1bfb4 <argp_parse@@Base+0x2784>
   1c3dc:	andeq	pc, r2, r8, asr #11
   1c3e0:			; <UNDEFINED> instruction: 0x0001e9bc
   1c3e4:	andeq	lr, r1, ip, lsl #19
   1c3e8:	andeq	lr, r1, r4, ror #19
   1c3ec:	andeq	lr, r1, r4, asr #19
   1c3f0:	andeq	lr, r1, ip, ror #18
   1c3f4:	andeq	lr, r1, r4, lsl sl
   1c3f8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c3fc:	sub	sp, sp, #36	; 0x24
   1c400:	subs	r6, r0, #0
   1c404:	ldr	r4, [sp, #80]	; 0x50
   1c408:	ldr	r8, [r4, #4]
   1c40c:	ble	1c5e8 <argp_parse@@Base+0x2db8>
   1c410:	mov	sl, r3
   1c414:	ldr	r3, [r4]
   1c418:	mov	r7, r2
   1c41c:	mov	r2, #0
   1c420:	cmp	r3, r2
   1c424:	mov	r9, r1
   1c428:	str	r2, [r4, #12]
   1c42c:	beq	1c670 <argp_parse@@Base+0x2e40>
   1c430:	ldr	r2, [r4, #16]
   1c434:	cmp	r2, #0
   1c438:	bne	1c5f4 <argp_parse@@Base+0x2dc4>
   1c43c:	mov	r5, #0
   1c440:	str	r3, [r4, #32]
   1c444:	str	r3, [r4, #28]
   1c448:	str	r5, [r4, #20]
   1c44c:	ldrb	r3, [r7]
   1c450:	cmp	r3, #45	; 0x2d
   1c454:	moveq	r3, #2
   1c458:	addeq	r7, r7, #1
   1c45c:	streq	r3, [r4, #24]
   1c460:	beq	1c488 <argp_parse@@Base+0x2c58>
   1c464:	cmp	r3, #43	; 0x2b
   1c468:	streq	r5, [r4, #24]
   1c46c:	addeq	r7, r7, #1
   1c470:	beq	1c488 <argp_parse@@Base+0x2c58>
   1c474:	ldr	r3, [sp, #84]	; 0x54
   1c478:	cmp	r3, #0
   1c47c:	beq	1c710 <argp_parse@@Base+0x2ee0>
   1c480:	mov	r3, #0
   1c484:	str	r3, [r4, #24]
   1c488:	mov	r3, #1
   1c48c:	str	r3, [r4, #16]
   1c490:	ldrb	r3, [r7]
   1c494:	cmp	r3, #58	; 0x3a
   1c498:	moveq	r8, #0
   1c49c:	cmp	r5, #0
   1c4a0:	beq	1c554 <argp_parse@@Base+0x2d24>
   1c4a4:	ldrb	r3, [r5]
   1c4a8:	cmp	r3, #0
   1c4ac:	beq	1c554 <argp_parse@@Base+0x2d24>
   1c4b0:	add	r3, r5, #1
   1c4b4:	str	r3, [r4, #20]
   1c4b8:	ldrb	fp, [r5]
   1c4bc:	mov	r0, r7
   1c4c0:	str	r3, [sp, #28]
   1c4c4:	mov	r1, fp
   1c4c8:	bl	11930 <strchr@plt>
   1c4cc:	ldrb	r1, [r5, #1]
   1c4d0:	ldr	r3, [sp, #28]
   1c4d4:	cmp	r1, #0
   1c4d8:	ldreq	r1, [r4]
   1c4dc:	addeq	r1, r1, #1
   1c4e0:	streq	r1, [r4]
   1c4e4:	sub	r1, fp, #58	; 0x3a
   1c4e8:	mov	r2, r0
   1c4ec:	cmp	r2, #0
   1c4f0:	cmpne	r1, #1
   1c4f4:	mov	r0, fp
   1c4f8:	bls	1c640 <argp_parse@@Base+0x2e10>
   1c4fc:	ldrb	r1, [r2]
   1c500:	cmp	r1, #87	; 0x57
   1c504:	ldrb	r1, [r2, #1]
   1c508:	beq	1c794 <argp_parse@@Base+0x2f64>
   1c50c:	cmp	r1, #58	; 0x3a
   1c510:	bne	1c638 <argp_parse@@Base+0x2e08>
   1c514:	ldrb	r2, [r2, #2]
   1c518:	cmp	r2, #58	; 0x3a
   1c51c:	ldrb	r2, [r5, #1]
   1c520:	beq	1c81c <argp_parse@@Base+0x2fec>
   1c524:	cmp	r2, #0
   1c528:	bne	1c828 <argp_parse@@Base+0x2ff8>
   1c52c:	ldr	r3, [r4]
   1c530:	cmp	r6, r3
   1c534:	beq	1c8c8 <argp_parse@@Base+0x3098>
   1c538:	ldr	r2, [r9, r3, lsl #2]
   1c53c:	add	r3, r3, #1
   1c540:	str	r2, [r4, #12]
   1c544:	str	r3, [r4]
   1c548:	mov	r3, #0
   1c54c:	str	r3, [r4, #20]
   1c550:	b	1c638 <argp_parse@@Base+0x2e08>
   1c554:	ldr	fp, [r4]
   1c558:	ldr	r3, [r4, #32]
   1c55c:	cmp	r3, fp
   1c560:	ldr	r3, [r4, #28]
   1c564:	strgt	fp, [r4, #32]
   1c568:	cmp	fp, r3
   1c56c:	ldr	r3, [r4, #24]
   1c570:	strlt	fp, [r4, #28]
   1c574:	cmp	r3, #1
   1c578:	beq	1c680 <argp_parse@@Base+0x2e50>
   1c57c:	cmp	r6, fp
   1c580:	beq	1c6f8 <argp_parse@@Base+0x2ec8>
   1c584:	ldr	r3, [pc, #944]	; 1c93c <argp_parse@@Base+0x310c>
   1c588:	ldr	r5, [r9, fp, lsl #2]
   1c58c:	mov	r1, r3
   1c590:	mov	r0, r5
   1c594:	str	r3, [sp, #28]
   1c598:	bl	11684 <strcmp@plt>
   1c59c:	ldr	r3, [sp, #28]
   1c5a0:	cmp	r0, #0
   1c5a4:	bne	1c610 <argp_parse@@Base+0x2de0>
   1c5a8:	ldr	r3, [r4, #28]
   1c5ac:	ldr	r2, [r4, #32]
   1c5b0:	add	fp, fp, #1
   1c5b4:	cmp	r3, r2
   1c5b8:	str	fp, [r4]
   1c5bc:	beq	1c788 <argp_parse@@Base+0x2f58>
   1c5c0:	cmp	fp, r2
   1c5c4:	beq	1c5d8 <argp_parse@@Base+0x2da8>
   1c5c8:	mov	r0, r9
   1c5cc:	mov	r1, r4
   1c5d0:	bl	1bdf8 <argp_parse@@Base+0x25c8>
   1c5d4:	ldr	r3, [r4, #28]
   1c5d8:	cmp	r3, r6
   1c5dc:	str	r6, [r4]
   1c5e0:	str	r6, [r4, #32]
   1c5e4:	strne	r3, [r4]
   1c5e8:	mvn	r0, #0
   1c5ec:	add	sp, sp, #36	; 0x24
   1c5f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c5f4:	ldrb	r3, [r7]
   1c5f8:	ldr	r5, [r4, #20]
   1c5fc:	sub	r2, r3, #43	; 0x2b
   1c600:	tst	r2, #253	; 0xfd
   1c604:	ldrbeq	r3, [r7, #1]
   1c608:	addeq	r7, r7, #1
   1c60c:	b	1c494 <argp_parse@@Base+0x2c64>
   1c610:	ldrb	r2, [r5]
   1c614:	cmp	r2, #45	; 0x2d
   1c618:	beq	1c73c <argp_parse@@Base+0x2f0c>
   1c61c:	ldr	r3, [r4, #24]
   1c620:	cmp	r3, #0
   1c624:	beq	1c5e8 <argp_parse@@Base+0x2db8>
   1c628:	mov	r0, #1
   1c62c:	add	fp, fp, #1
   1c630:	str	fp, [r4]
   1c634:	str	r5, [r4, #12]
   1c638:	add	sp, sp, #36	; 0x24
   1c63c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c640:	cmp	r8, #0
   1c644:	beq	1c660 <argp_parse@@Base+0x2e30>
   1c648:	ldr	r1, [pc, #752]	; 1c940 <argp_parse@@Base+0x3110>
   1c64c:	ldr	r2, [r9]
   1c650:	mov	r3, fp
   1c654:	ldr	r0, [r1]
   1c658:	ldr	r1, [pc, #740]	; 1c944 <argp_parse@@Base+0x3114>
   1c65c:	bl	1193c <fprintf@plt>
   1c660:	mov	r0, #63	; 0x3f
   1c664:	str	fp, [r4, #8]
   1c668:	add	sp, sp, #36	; 0x24
   1c66c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c670:	mov	r2, #1
   1c674:	mov	r3, r2
   1c678:	str	r2, [r4]
   1c67c:	b	1c43c <argp_parse@@Base+0x2c0c>
   1c680:	ldr	r2, [r4, #28]
   1c684:	ldr	r3, [r4, #32]
   1c688:	cmp	r2, r3
   1c68c:	beq	1c80c <argp_parse@@Base+0x2fdc>
   1c690:	cmp	fp, r3
   1c694:	beq	1c6a8 <argp_parse@@Base+0x2e78>
   1c698:	mov	r1, r4
   1c69c:	mov	r0, r9
   1c6a0:	bl	1bdf8 <argp_parse@@Base+0x25c8>
   1c6a4:	ldr	r3, [r4]
   1c6a8:	cmp	r6, r3
   1c6ac:	movle	fp, r3
   1c6b0:	ble	1c6ec <argp_parse@@Base+0x2ebc>
   1c6b4:	add	r1, r9, r3, lsl #2
   1c6b8:	b	1c6cc <argp_parse@@Base+0x2e9c>
   1c6bc:	add	r3, r3, #1
   1c6c0:	cmp	r6, r3
   1c6c4:	str	r3, [r4]
   1c6c8:	beq	1c730 <argp_parse@@Base+0x2f00>
   1c6cc:	ldr	r2, [r1], #4
   1c6d0:	ldrb	r0, [r2]
   1c6d4:	cmp	r0, #45	; 0x2d
   1c6d8:	bne	1c6bc <argp_parse@@Base+0x2e8c>
   1c6dc:	ldrb	r2, [r2, #1]
   1c6e0:	cmp	r2, #0
   1c6e4:	beq	1c6bc <argp_parse@@Base+0x2e8c>
   1c6e8:	ldr	fp, [r4]
   1c6ec:	str	r3, [r4, #32]
   1c6f0:	cmp	r6, fp
   1c6f4:	bne	1c584 <argp_parse@@Base+0x2d54>
   1c6f8:	ldr	r3, [r4, #28]
   1c6fc:	ldr	r6, [r4, #32]
   1c700:	mvn	r0, #0
   1c704:	cmp	r3, r6
   1c708:	strne	r3, [r4]
   1c70c:	b	1c5ec <argp_parse@@Base+0x2dbc>
   1c710:	ldr	r0, [pc, #560]	; 1c948 <argp_parse@@Base+0x3118>
   1c714:	bl	11888 <getenv@plt>
   1c718:	ldr	r5, [r4, #20]
   1c71c:	cmp	r0, #0
   1c720:	bne	1c480 <argp_parse@@Base+0x2c50>
   1c724:	mov	r3, #1
   1c728:	str	r3, [r4, #24]
   1c72c:	b	1c488 <argp_parse@@Base+0x2c58>
   1c730:	mov	fp, r6
   1c734:	str	r3, [r4, #32]
   1c738:	b	1c6f0 <argp_parse@@Base+0x2ec0>
   1c73c:	ldrb	r1, [r5, #1]
   1c740:	cmp	r1, #0
   1c744:	beq	1c61c <argp_parse@@Base+0x2dec>
   1c748:	cmp	sl, #0
   1c74c:	beq	1c780 <argp_parse@@Base+0x2f50>
   1c750:	cmp	r1, #45	; 0x2d
   1c754:	beq	1c88c <argp_parse@@Base+0x305c>
   1c758:	ldr	r3, [sp, #76]	; 0x4c
   1c75c:	cmp	r3, #0
   1c760:	beq	1c780 <argp_parse@@Base+0x2f50>
   1c764:	ldrb	r3, [r5, #2]
   1c768:	cmp	r3, #0
   1c76c:	bne	1c83c <argp_parse@@Base+0x300c>
   1c770:	mov	r0, r7
   1c774:	bl	11930 <strchr@plt>
   1c778:	cmp	r0, #0
   1c77c:	beq	1c83c <argp_parse@@Base+0x300c>
   1c780:	add	r5, r5, #1
   1c784:	b	1c4b0 <argp_parse@@Base+0x2c80>
   1c788:	mov	r3, fp
   1c78c:	str	fp, [r4, #28]
   1c790:	b	1c5d8 <argp_parse@@Base+0x2da8>
   1c794:	cmp	sl, #0
   1c798:	sub	ip, r1, #59	; 0x3b
   1c79c:	clz	ip, ip
   1c7a0:	lsr	ip, ip, #5
   1c7a4:	moveq	ip, #0
   1c7a8:	cmp	ip, #0
   1c7ac:	beq	1c50c <argp_parse@@Base+0x2cdc>
   1c7b0:	ldrb	r2, [r5, #1]
   1c7b4:	cmp	r2, #0
   1c7b8:	bne	1c7cc <argp_parse@@Base+0x2f9c>
   1c7bc:	ldr	r3, [r4]
   1c7c0:	cmp	r6, r3
   1c7c4:	ldrne	r3, [r9, r3, lsl #2]
   1c7c8:	beq	1c8e8 <argp_parse@@Base+0x30b8>
   1c7cc:	str	r3, [r4, #20]
   1c7d0:	ldr	lr, [pc, #372]	; 1c94c <argp_parse@@Base+0x311c>
   1c7d4:	ldr	r3, [sp, #72]	; 0x48
   1c7d8:	mov	ip, #0
   1c7dc:	str	r3, [sp]
   1c7e0:	str	r8, [sp, #12]
   1c7e4:	str	r4, [sp, #8]
   1c7e8:	str	lr, [sp, #16]
   1c7ec:	mov	r3, sl
   1c7f0:	str	ip, [r4, #12]
   1c7f4:	mov	r2, r7
   1c7f8:	mov	r1, r9
   1c7fc:	mov	r0, r6
   1c800:	str	ip, [sp, #4]
   1c804:	bl	1beb4 <argp_parse@@Base+0x2684>
   1c808:	b	1c638 <argp_parse@@Base+0x2e08>
   1c80c:	cmp	fp, r3
   1c810:	movne	r3, fp
   1c814:	strne	fp, [r4, #28]
   1c818:	b	1c6a8 <argp_parse@@Base+0x2e78>
   1c81c:	cmp	r2, #0
   1c820:	streq	r2, [r4, #12]
   1c824:	beq	1c548 <argp_parse@@Base+0x2d18>
   1c828:	ldr	r2, [r4]
   1c82c:	str	r3, [r4, #12]
   1c830:	add	r3, r2, #1
   1c834:	str	r3, [r4]
   1c838:	b	1c548 <argp_parse@@Base+0x2d18>
   1c83c:	ldr	r2, [sp, #76]	; 0x4c
   1c840:	add	r5, r5, #1
   1c844:	str	r5, [r4, #20]
   1c848:	ldr	r3, [pc, #256]	; 1c950 <argp_parse@@Base+0x3120>
   1c84c:	str	r2, [sp, #4]
   1c850:	ldr	r2, [sp, #72]	; 0x48
   1c854:	str	r3, [sp, #16]
   1c858:	str	r2, [sp]
   1c85c:	str	r8, [sp, #12]
   1c860:	str	r4, [sp, #8]
   1c864:	mov	r3, sl
   1c868:	mov	r2, r7
   1c86c:	mov	r1, r9
   1c870:	mov	r0, r6
   1c874:	bl	1beb4 <argp_parse@@Base+0x2684>
   1c878:	cmn	r0, #1
   1c87c:	bne	1c638 <argp_parse@@Base+0x2e08>
   1c880:	ldr	r3, [r4]
   1c884:	ldr	r5, [r9, r3, lsl #2]
   1c888:	b	1c780 <argp_parse@@Base+0x2f50>
   1c88c:	add	r5, r5, #2
   1c890:	str	r5, [r4, #20]
   1c894:	str	r3, [sp, #16]
   1c898:	ldr	r3, [sp, #76]	; 0x4c
   1c89c:	str	r8, [sp, #12]
   1c8a0:	str	r3, [sp, #4]
   1c8a4:	ldr	r3, [sp, #72]	; 0x48
   1c8a8:	str	r4, [sp, #8]
   1c8ac:	str	r3, [sp]
   1c8b0:	mov	r2, r7
   1c8b4:	mov	r3, sl
   1c8b8:	mov	r1, r9
   1c8bc:	mov	r0, r6
   1c8c0:	bl	1beb4 <argp_parse@@Base+0x2684>
   1c8c4:	b	1c638 <argp_parse@@Base+0x2e08>
   1c8c8:	cmp	r8, #0
   1c8cc:	bne	1c920 <argp_parse@@Base+0x30f0>
   1c8d0:	str	fp, [r4, #8]
   1c8d4:	ldrb	r0, [r7]
   1c8d8:	cmp	r0, #58	; 0x3a
   1c8dc:	movne	r0, #63	; 0x3f
   1c8e0:	moveq	r0, #58	; 0x3a
   1c8e4:	b	1c548 <argp_parse@@Base+0x2d18>
   1c8e8:	cmp	r8, #0
   1c8ec:	beq	1c908 <argp_parse@@Base+0x30d8>
   1c8f0:	ldr	r1, [pc, #72]	; 1c940 <argp_parse@@Base+0x3110>
   1c8f4:	ldr	r2, [r9]
   1c8f8:	mov	r3, fp
   1c8fc:	ldr	r0, [r1]
   1c900:	ldr	r1, [pc, #76]	; 1c954 <argp_parse@@Base+0x3124>
   1c904:	bl	1193c <fprintf@plt>
   1c908:	str	fp, [r4, #8]
   1c90c:	ldrb	r0, [r7]
   1c910:	cmp	r0, #58	; 0x3a
   1c914:	movne	r0, #63	; 0x3f
   1c918:	moveq	r0, #58	; 0x3a
   1c91c:	b	1c638 <argp_parse@@Base+0x2e08>
   1c920:	ldr	r1, [pc, #24]	; 1c940 <argp_parse@@Base+0x3110>
   1c924:	ldr	r2, [r9]
   1c928:	mov	r3, fp
   1c92c:	ldr	r0, [r1]
   1c930:	ldr	r1, [pc, #28]	; 1c954 <argp_parse@@Base+0x3124>
   1c934:	bl	1193c <fprintf@plt>
   1c938:	b	1c8d0 <argp_parse@@Base+0x30a0>
   1c93c:	andeq	sp, r1, r8, lsl #6
   1c940:	andeq	pc, r2, r8, asr #11
   1c944:	andeq	lr, r1, r0, asr sl
   1c948:	andeq	lr, r1, ip, lsr sl
   1c94c:	muleq	r1, r8, sl
   1c950:	andeq	lr, r1, ip, asr #20
   1c954:	andeq	lr, r1, ip, ror #20
   1c958:	push	{r4, r5, r6, lr}
   1c95c:	sub	sp, sp, #16
   1c960:	ldr	r5, [pc, #84]	; 1c9bc <argp_parse@@Base+0x318c>
   1c964:	ldr	ip, [sp, #32]
   1c968:	ldr	r4, [pc, #80]	; 1c9c0 <argp_parse@@Base+0x3190>
   1c96c:	str	ip, [sp]
   1c970:	ldr	ip, [sp, #40]	; 0x28
   1c974:	ldr	r6, [sp, #36]	; 0x24
   1c978:	ldr	lr, [r5]
   1c97c:	str	ip, [sp, #12]
   1c980:	ldr	ip, [r5, #4]
   1c984:	str	r4, [sp, #8]
   1c988:	str	r6, [sp, #4]
   1c98c:	str	ip, [r4, #4]
   1c990:	str	lr, [r4]
   1c994:	bl	1c3f8 <argp_parse@@Base+0x2bc8>
   1c998:	ldr	r3, [pc, #36]	; 1c9c4 <argp_parse@@Base+0x3194>
   1c99c:	ldr	ip, [r4]
   1c9a0:	ldr	r1, [r4, #8]
   1c9a4:	ldr	r2, [r4, #12]
   1c9a8:	str	ip, [r5]
   1c9ac:	str	r1, [r5, #8]
   1c9b0:	str	r2, [r3]
   1c9b4:	add	sp, sp, #16
   1c9b8:	pop	{r4, r5, r6, pc}
   1c9bc:			; <UNDEFINED> instruction: 0x0002f5b0
   1c9c0:	andeq	pc, r2, r0, lsr #20
   1c9c4:	muleq	r3, ip, r0
   1c9c8:	push	{lr}		; (str lr, [sp, #-4]!)
   1c9cc:	mov	r3, #0
   1c9d0:	sub	sp, sp, #20
   1c9d4:	mov	ip, #1
   1c9d8:	str	r3, [sp]
   1c9dc:	stmib	sp, {r3, ip}
   1c9e0:	bl	1c958 <argp_parse@@Base+0x3128>
   1c9e4:	add	sp, sp, #20
   1c9e8:	pop	{pc}		; (ldr pc, [sp], #4)
   1c9ec:	push	{r4, r5, r6, lr}
   1c9f0:	subs	r4, r2, #0
   1c9f4:	mov	r6, r0
   1c9f8:	mov	r5, r1
   1c9fc:	beq	1ca28 <argp_parse@@Base+0x31f8>
   1ca00:	mov	r1, r4
   1ca04:	mvn	r0, #0
   1ca08:	bl	1ca38 <argp_parse@@Base+0x3208>
   1ca0c:	cmp	r0, r5
   1ca10:	bcs	1ca28 <argp_parse@@Base+0x31f8>
   1ca14:	bl	11948 <__errno_location@plt>
   1ca18:	mov	r3, #12
   1ca1c:	str	r3, [r0]
   1ca20:	mov	r0, #0
   1ca24:	pop	{r4, r5, r6, pc}
   1ca28:	mul	r1, r5, r4
   1ca2c:	mov	r0, r6
   1ca30:	pop	{r4, r5, r6, lr}
   1ca34:	b	1b5d4 <argp_parse@@Base+0x1da4>
   1ca38:	subs	r2, r1, #1
   1ca3c:	bxeq	lr
   1ca40:	bcc	1cc18 <argp_parse@@Base+0x33e8>
   1ca44:	cmp	r0, r1
   1ca48:	bls	1cbfc <argp_parse@@Base+0x33cc>
   1ca4c:	tst	r1, r2
   1ca50:	beq	1cc08 <argp_parse@@Base+0x33d8>
   1ca54:	clz	r3, r0
   1ca58:	clz	r2, r1
   1ca5c:	sub	r3, r2, r3
   1ca60:	rsbs	r3, r3, #31
   1ca64:	addne	r3, r3, r3, lsl #1
   1ca68:	mov	r2, #0
   1ca6c:	addne	pc, pc, r3, lsl #2
   1ca70:	nop			; (mov r0, r0)
   1ca74:	cmp	r0, r1, lsl #31
   1ca78:	adc	r2, r2, r2
   1ca7c:	subcs	r0, r0, r1, lsl #31
   1ca80:	cmp	r0, r1, lsl #30
   1ca84:	adc	r2, r2, r2
   1ca88:	subcs	r0, r0, r1, lsl #30
   1ca8c:	cmp	r0, r1, lsl #29
   1ca90:	adc	r2, r2, r2
   1ca94:	subcs	r0, r0, r1, lsl #29
   1ca98:	cmp	r0, r1, lsl #28
   1ca9c:	adc	r2, r2, r2
   1caa0:	subcs	r0, r0, r1, lsl #28
   1caa4:	cmp	r0, r1, lsl #27
   1caa8:	adc	r2, r2, r2
   1caac:	subcs	r0, r0, r1, lsl #27
   1cab0:	cmp	r0, r1, lsl #26
   1cab4:	adc	r2, r2, r2
   1cab8:	subcs	r0, r0, r1, lsl #26
   1cabc:	cmp	r0, r1, lsl #25
   1cac0:	adc	r2, r2, r2
   1cac4:	subcs	r0, r0, r1, lsl #25
   1cac8:	cmp	r0, r1, lsl #24
   1cacc:	adc	r2, r2, r2
   1cad0:	subcs	r0, r0, r1, lsl #24
   1cad4:	cmp	r0, r1, lsl #23
   1cad8:	adc	r2, r2, r2
   1cadc:	subcs	r0, r0, r1, lsl #23
   1cae0:	cmp	r0, r1, lsl #22
   1cae4:	adc	r2, r2, r2
   1cae8:	subcs	r0, r0, r1, lsl #22
   1caec:	cmp	r0, r1, lsl #21
   1caf0:	adc	r2, r2, r2
   1caf4:	subcs	r0, r0, r1, lsl #21
   1caf8:	cmp	r0, r1, lsl #20
   1cafc:	adc	r2, r2, r2
   1cb00:	subcs	r0, r0, r1, lsl #20
   1cb04:	cmp	r0, r1, lsl #19
   1cb08:	adc	r2, r2, r2
   1cb0c:	subcs	r0, r0, r1, lsl #19
   1cb10:	cmp	r0, r1, lsl #18
   1cb14:	adc	r2, r2, r2
   1cb18:	subcs	r0, r0, r1, lsl #18
   1cb1c:	cmp	r0, r1, lsl #17
   1cb20:	adc	r2, r2, r2
   1cb24:	subcs	r0, r0, r1, lsl #17
   1cb28:	cmp	r0, r1, lsl #16
   1cb2c:	adc	r2, r2, r2
   1cb30:	subcs	r0, r0, r1, lsl #16
   1cb34:	cmp	r0, r1, lsl #15
   1cb38:	adc	r2, r2, r2
   1cb3c:	subcs	r0, r0, r1, lsl #15
   1cb40:	cmp	r0, r1, lsl #14
   1cb44:	adc	r2, r2, r2
   1cb48:	subcs	r0, r0, r1, lsl #14
   1cb4c:	cmp	r0, r1, lsl #13
   1cb50:	adc	r2, r2, r2
   1cb54:	subcs	r0, r0, r1, lsl #13
   1cb58:	cmp	r0, r1, lsl #12
   1cb5c:	adc	r2, r2, r2
   1cb60:	subcs	r0, r0, r1, lsl #12
   1cb64:	cmp	r0, r1, lsl #11
   1cb68:	adc	r2, r2, r2
   1cb6c:	subcs	r0, r0, r1, lsl #11
   1cb70:	cmp	r0, r1, lsl #10
   1cb74:	adc	r2, r2, r2
   1cb78:	subcs	r0, r0, r1, lsl #10
   1cb7c:	cmp	r0, r1, lsl #9
   1cb80:	adc	r2, r2, r2
   1cb84:	subcs	r0, r0, r1, lsl #9
   1cb88:	cmp	r0, r1, lsl #8
   1cb8c:	adc	r2, r2, r2
   1cb90:	subcs	r0, r0, r1, lsl #8
   1cb94:	cmp	r0, r1, lsl #7
   1cb98:	adc	r2, r2, r2
   1cb9c:	subcs	r0, r0, r1, lsl #7
   1cba0:	cmp	r0, r1, lsl #6
   1cba4:	adc	r2, r2, r2
   1cba8:	subcs	r0, r0, r1, lsl #6
   1cbac:	cmp	r0, r1, lsl #5
   1cbb0:	adc	r2, r2, r2
   1cbb4:	subcs	r0, r0, r1, lsl #5
   1cbb8:	cmp	r0, r1, lsl #4
   1cbbc:	adc	r2, r2, r2
   1cbc0:	subcs	r0, r0, r1, lsl #4
   1cbc4:	cmp	r0, r1, lsl #3
   1cbc8:	adc	r2, r2, r2
   1cbcc:	subcs	r0, r0, r1, lsl #3
   1cbd0:	cmp	r0, r1, lsl #2
   1cbd4:	adc	r2, r2, r2
   1cbd8:	subcs	r0, r0, r1, lsl #2
   1cbdc:	cmp	r0, r1, lsl #1
   1cbe0:	adc	r2, r2, r2
   1cbe4:	subcs	r0, r0, r1, lsl #1
   1cbe8:	cmp	r0, r1
   1cbec:	adc	r2, r2, r2
   1cbf0:	subcs	r0, r0, r1
   1cbf4:	mov	r0, r2
   1cbf8:	bx	lr
   1cbfc:	moveq	r0, #1
   1cc00:	movne	r0, #0
   1cc04:	bx	lr
   1cc08:	clz	r2, r1
   1cc0c:	rsb	r2, r2, #31
   1cc10:	lsr	r0, r0, r2
   1cc14:	bx	lr
   1cc18:	cmp	r0, #0
   1cc1c:	mvnne	r0, #0
   1cc20:	b	1ce84 <argp_parse@@Base+0x3654>
   1cc24:	cmp	r1, #0
   1cc28:	beq	1cc18 <argp_parse@@Base+0x33e8>
   1cc2c:	push	{r0, r1, lr}
   1cc30:	bl	1ca38 <argp_parse@@Base+0x3208>
   1cc34:	pop	{r1, r2, lr}
   1cc38:	mul	r3, r2, r0
   1cc3c:	sub	r1, r1, r3
   1cc40:	bx	lr
   1cc44:	cmp	r1, #0
   1cc48:	beq	1ce54 <argp_parse@@Base+0x3624>
   1cc4c:	eor	ip, r0, r1
   1cc50:	rsbmi	r1, r1, #0
   1cc54:	subs	r2, r1, #1
   1cc58:	beq	1ce20 <argp_parse@@Base+0x35f0>
   1cc5c:	movs	r3, r0
   1cc60:	rsbmi	r3, r0, #0
   1cc64:	cmp	r3, r1
   1cc68:	bls	1ce2c <argp_parse@@Base+0x35fc>
   1cc6c:	tst	r1, r2
   1cc70:	beq	1ce3c <argp_parse@@Base+0x360c>
   1cc74:	clz	r2, r3
   1cc78:	clz	r0, r1
   1cc7c:	sub	r2, r0, r2
   1cc80:	rsbs	r2, r2, #31
   1cc84:	addne	r2, r2, r2, lsl #1
   1cc88:	mov	r0, #0
   1cc8c:	addne	pc, pc, r2, lsl #2
   1cc90:	nop			; (mov r0, r0)
   1cc94:	cmp	r3, r1, lsl #31
   1cc98:	adc	r0, r0, r0
   1cc9c:	subcs	r3, r3, r1, lsl #31
   1cca0:	cmp	r3, r1, lsl #30
   1cca4:	adc	r0, r0, r0
   1cca8:	subcs	r3, r3, r1, lsl #30
   1ccac:	cmp	r3, r1, lsl #29
   1ccb0:	adc	r0, r0, r0
   1ccb4:	subcs	r3, r3, r1, lsl #29
   1ccb8:	cmp	r3, r1, lsl #28
   1ccbc:	adc	r0, r0, r0
   1ccc0:	subcs	r3, r3, r1, lsl #28
   1ccc4:	cmp	r3, r1, lsl #27
   1ccc8:	adc	r0, r0, r0
   1cccc:	subcs	r3, r3, r1, lsl #27
   1ccd0:	cmp	r3, r1, lsl #26
   1ccd4:	adc	r0, r0, r0
   1ccd8:	subcs	r3, r3, r1, lsl #26
   1ccdc:	cmp	r3, r1, lsl #25
   1cce0:	adc	r0, r0, r0
   1cce4:	subcs	r3, r3, r1, lsl #25
   1cce8:	cmp	r3, r1, lsl #24
   1ccec:	adc	r0, r0, r0
   1ccf0:	subcs	r3, r3, r1, lsl #24
   1ccf4:	cmp	r3, r1, lsl #23
   1ccf8:	adc	r0, r0, r0
   1ccfc:	subcs	r3, r3, r1, lsl #23
   1cd00:	cmp	r3, r1, lsl #22
   1cd04:	adc	r0, r0, r0
   1cd08:	subcs	r3, r3, r1, lsl #22
   1cd0c:	cmp	r3, r1, lsl #21
   1cd10:	adc	r0, r0, r0
   1cd14:	subcs	r3, r3, r1, lsl #21
   1cd18:	cmp	r3, r1, lsl #20
   1cd1c:	adc	r0, r0, r0
   1cd20:	subcs	r3, r3, r1, lsl #20
   1cd24:	cmp	r3, r1, lsl #19
   1cd28:	adc	r0, r0, r0
   1cd2c:	subcs	r3, r3, r1, lsl #19
   1cd30:	cmp	r3, r1, lsl #18
   1cd34:	adc	r0, r0, r0
   1cd38:	subcs	r3, r3, r1, lsl #18
   1cd3c:	cmp	r3, r1, lsl #17
   1cd40:	adc	r0, r0, r0
   1cd44:	subcs	r3, r3, r1, lsl #17
   1cd48:	cmp	r3, r1, lsl #16
   1cd4c:	adc	r0, r0, r0
   1cd50:	subcs	r3, r3, r1, lsl #16
   1cd54:	cmp	r3, r1, lsl #15
   1cd58:	adc	r0, r0, r0
   1cd5c:	subcs	r3, r3, r1, lsl #15
   1cd60:	cmp	r3, r1, lsl #14
   1cd64:	adc	r0, r0, r0
   1cd68:	subcs	r3, r3, r1, lsl #14
   1cd6c:	cmp	r3, r1, lsl #13
   1cd70:	adc	r0, r0, r0
   1cd74:	subcs	r3, r3, r1, lsl #13
   1cd78:	cmp	r3, r1, lsl #12
   1cd7c:	adc	r0, r0, r0
   1cd80:	subcs	r3, r3, r1, lsl #12
   1cd84:	cmp	r3, r1, lsl #11
   1cd88:	adc	r0, r0, r0
   1cd8c:	subcs	r3, r3, r1, lsl #11
   1cd90:	cmp	r3, r1, lsl #10
   1cd94:	adc	r0, r0, r0
   1cd98:	subcs	r3, r3, r1, lsl #10
   1cd9c:	cmp	r3, r1, lsl #9
   1cda0:	adc	r0, r0, r0
   1cda4:	subcs	r3, r3, r1, lsl #9
   1cda8:	cmp	r3, r1, lsl #8
   1cdac:	adc	r0, r0, r0
   1cdb0:	subcs	r3, r3, r1, lsl #8
   1cdb4:	cmp	r3, r1, lsl #7
   1cdb8:	adc	r0, r0, r0
   1cdbc:	subcs	r3, r3, r1, lsl #7
   1cdc0:	cmp	r3, r1, lsl #6
   1cdc4:	adc	r0, r0, r0
   1cdc8:	subcs	r3, r3, r1, lsl #6
   1cdcc:	cmp	r3, r1, lsl #5
   1cdd0:	adc	r0, r0, r0
   1cdd4:	subcs	r3, r3, r1, lsl #5
   1cdd8:	cmp	r3, r1, lsl #4
   1cddc:	adc	r0, r0, r0
   1cde0:	subcs	r3, r3, r1, lsl #4
   1cde4:	cmp	r3, r1, lsl #3
   1cde8:	adc	r0, r0, r0
   1cdec:	subcs	r3, r3, r1, lsl #3
   1cdf0:	cmp	r3, r1, lsl #2
   1cdf4:	adc	r0, r0, r0
   1cdf8:	subcs	r3, r3, r1, lsl #2
   1cdfc:	cmp	r3, r1, lsl #1
   1ce00:	adc	r0, r0, r0
   1ce04:	subcs	r3, r3, r1, lsl #1
   1ce08:	cmp	r3, r1
   1ce0c:	adc	r0, r0, r0
   1ce10:	subcs	r3, r3, r1
   1ce14:	cmp	ip, #0
   1ce18:	rsbmi	r0, r0, #0
   1ce1c:	bx	lr
   1ce20:	teq	ip, r0
   1ce24:	rsbmi	r0, r0, #0
   1ce28:	bx	lr
   1ce2c:	movcc	r0, #0
   1ce30:	asreq	r0, ip, #31
   1ce34:	orreq	r0, r0, #1
   1ce38:	bx	lr
   1ce3c:	clz	r2, r1
   1ce40:	rsb	r2, r2, #31
   1ce44:	cmp	ip, #0
   1ce48:	lsr	r0, r3, r2
   1ce4c:	rsbmi	r0, r0, #0
   1ce50:	bx	lr
   1ce54:	cmp	r0, #0
   1ce58:	mvngt	r0, #-2147483648	; 0x80000000
   1ce5c:	movlt	r0, #-2147483648	; 0x80000000
   1ce60:	b	1ce84 <argp_parse@@Base+0x3654>
   1ce64:	cmp	r1, #0
   1ce68:	beq	1ce54 <argp_parse@@Base+0x3624>
   1ce6c:	push	{r0, r1, lr}
   1ce70:	bl	1cc4c <argp_parse@@Base+0x341c>
   1ce74:	pop	{r1, r2, lr}
   1ce78:	mul	r3, r2, r0
   1ce7c:	sub	r1, r1, r3
   1ce80:	bx	lr
   1ce84:	push	{r1, lr}
   1ce88:	mov	r0, #8
   1ce8c:	bl	1166c <raise@plt>
   1ce90:	pop	{r1, pc}
   1ce94:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1ce98:	mov	r7, r0
   1ce9c:	ldr	r6, [pc, #72]	; 1ceec <argp_parse@@Base+0x36bc>
   1cea0:	ldr	r5, [pc, #72]	; 1cef0 <argp_parse@@Base+0x36c0>
   1cea4:	add	r6, pc, r6
   1cea8:	add	r5, pc, r5
   1ceac:	sub	r6, r6, r5
   1ceb0:	mov	r8, r1
   1ceb4:	mov	r9, r2
   1ceb8:	bl	11634 <calloc@plt-0x20>
   1cebc:	asrs	r6, r6, #2
   1cec0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1cec4:	mov	r4, #0
   1cec8:	add	r4, r4, #1
   1cecc:	ldr	r3, [r5], #4
   1ced0:	mov	r2, r9
   1ced4:	mov	r1, r8
   1ced8:	mov	r0, r7
   1cedc:	blx	r3
   1cee0:	cmp	r6, r4
   1cee4:	bne	1cec8 <argp_parse@@Base+0x3698>
   1cee8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1ceec:	andeq	r2, r1, ip, asr r0
   1cef0:	andeq	r2, r1, r4, asr r0
   1cef4:	bx	lr

Disassembly of section .fini:

0001cef8 <.fini>:
   1cef8:	push	{r3, lr}
   1cefc:	pop	{r3, pc}
