
../repos/sgerbino-table-2fdd8d0/bin/table_column_test:     file format elf32-littlearm


Disassembly of section .init:

00011e70 <.init>:
   11e70:	push	{r3, lr}
   11e74:	bl	11f5c <_start@@Base+0x3c>
   11e78:	pop	{r3, pc}

Disassembly of section .plt:

00011e7c <strcmp@plt-0x14>:
   11e7c:	push	{lr}		; (str lr, [sp, #-4]!)
   11e80:	ldr	lr, [pc, #4]	; 11e8c <strcmp@plt-0x4>
   11e84:	add	lr, pc, lr
   11e88:	ldr	pc, [lr, #8]!
   11e8c:	andeq	r3, r1, r4, ror r1

00011e90 <strcmp@plt>:
   11e90:	add	ip, pc, #0, 12
   11e94:	add	ip, ip, #77824	; 0x13000
   11e98:	ldr	pc, [ip, #372]!	; 0x174

00011e9c <printf@plt>:
   11e9c:	add	ip, pc, #0, 12
   11ea0:	add	ip, ip, #77824	; 0x13000
   11ea4:	ldr	pc, [ip, #364]!	; 0x16c

00011ea8 <free@plt>:
   11ea8:	add	ip, pc, #0, 12
   11eac:	add	ip, ip, #77824	; 0x13000
   11eb0:	ldr	pc, [ip, #356]!	; 0x164

00011eb4 <realloc@plt>:
   11eb4:	add	ip, pc, #0, 12
   11eb8:	add	ip, ip, #77824	; 0x13000
   11ebc:	ldr	pc, [ip, #348]!	; 0x15c

00011ec0 <strcpy@plt>:
   11ec0:	add	ip, pc, #0, 12
   11ec4:	add	ip, ip, #77824	; 0x13000
   11ec8:	ldr	pc, [ip, #340]!	; 0x154

00011ecc <malloc@plt>:
   11ecc:	add	ip, pc, #0, 12
   11ed0:	add	ip, ip, #77824	; 0x13000
   11ed4:	ldr	pc, [ip, #332]!	; 0x14c

00011ed8 <__libc_start_main@plt>:
   11ed8:	add	ip, pc, #0, 12
   11edc:	add	ip, ip, #77824	; 0x13000
   11ee0:	ldr	pc, [ip, #324]!	; 0x144

00011ee4 <__gmon_start__@plt>:
   11ee4:	add	ip, pc, #0, 12
   11ee8:	add	ip, ip, #77824	; 0x13000
   11eec:	ldr	pc, [ip, #316]!	; 0x13c

00011ef0 <strlen@plt>:
   11ef0:	add	ip, pc, #0, 12
   11ef4:	add	ip, ip, #77824	; 0x13000
   11ef8:	ldr	pc, [ip, #308]!	; 0x134

00011efc <snprintf@plt>:
   11efc:	add	ip, pc, #0, 12
   11f00:	add	ip, ip, #77824	; 0x13000
   11f04:	ldr	pc, [ip, #300]!	; 0x12c

00011f08 <__isoc99_sscanf@plt>:
   11f08:	add	ip, pc, #0, 12
   11f0c:	add	ip, ip, #77824	; 0x13000
   11f10:	ldr	pc, [ip, #292]!	; 0x124

00011f14 <abort@plt>:
   11f14:	add	ip, pc, #0, 12
   11f18:	add	ip, ip, #77824	; 0x13000
   11f1c:	ldr	pc, [ip, #284]!	; 0x11c

Disassembly of section .text:

00011f20 <_start@@Base>:
   11f20:	mov	fp, #0
   11f24:	mov	lr, #0
   11f28:	pop	{r1}		; (ldr r1, [sp], #4)
   11f2c:	mov	r2, sp
   11f30:	push	{r2}		; (str r2, [sp, #-4]!)
   11f34:	push	{r0}		; (str r0, [sp, #-4]!)
   11f38:	ldr	ip, [pc, #16]	; 11f50 <_start@@Base+0x30>
   11f3c:	push	{ip}		; (str ip, [sp, #-4]!)
   11f40:	ldr	r0, [pc, #12]	; 11f54 <_start@@Base+0x34>
   11f44:	ldr	r3, [pc, #12]	; 11f58 <_start@@Base+0x38>
   11f48:	bl	11ed8 <__libc_start_main@plt>
   11f4c:	bl	11f14 <abort@plt>
   11f50:	andeq	r4, r1, ip, asr #22
   11f54:	andeq	r2, r1, r0, lsl r0
   11f58:	andeq	r4, r1, ip, ror #21
   11f5c:	ldr	r3, [pc, #20]	; 11f78 <_start@@Base+0x58>
   11f60:	ldr	r2, [pc, #20]	; 11f7c <_start@@Base+0x5c>
   11f64:	add	r3, pc, r3
   11f68:	ldr	r2, [r3, r2]
   11f6c:	cmp	r2, #0
   11f70:	bxeq	lr
   11f74:	b	11ee4 <__gmon_start__@plt>
   11f78:	muleq	r1, r4, r0
   11f7c:	andeq	r0, r0, ip, lsr r0
   11f80:	ldr	r0, [pc, #24]	; 11fa0 <_start@@Base+0x80>
   11f84:	ldr	r3, [pc, #24]	; 11fa4 <_start@@Base+0x84>
   11f88:	cmp	r3, r0
   11f8c:	bxeq	lr
   11f90:	ldr	r3, [pc, #16]	; 11fa8 <_start@@Base+0x88>
   11f94:	cmp	r3, #0
   11f98:	bxeq	lr
   11f9c:	bx	r3
   11fa0:	andeq	r5, r2, r8, asr #32
   11fa4:	andeq	r5, r2, r8, asr #32
   11fa8:	andeq	r0, r0, r0
   11fac:	ldr	r0, [pc, #36]	; 11fd8 <_start@@Base+0xb8>
   11fb0:	ldr	r1, [pc, #36]	; 11fdc <_start@@Base+0xbc>
   11fb4:	sub	r1, r1, r0
   11fb8:	asr	r1, r1, #2
   11fbc:	add	r1, r1, r1, lsr #31
   11fc0:	asrs	r1, r1, #1
   11fc4:	bxeq	lr
   11fc8:	ldr	r3, [pc, #16]	; 11fe0 <_start@@Base+0xc0>
   11fcc:	cmp	r3, #0
   11fd0:	bxeq	lr
   11fd4:	bx	r3
   11fd8:	andeq	r5, r2, r8, asr #32
   11fdc:	andeq	r5, r2, r8, asr #32
   11fe0:	andeq	r0, r0, r0
   11fe4:	push	{r4, lr}
   11fe8:	ldr	r4, [pc, #24]	; 12008 <_start@@Base+0xe8>
   11fec:	ldrb	r3, [r4]
   11ff0:	cmp	r3, #0
   11ff4:	popne	{r4, pc}
   11ff8:	bl	11f80 <_start@@Base+0x60>
   11ffc:	mov	r3, #1
   12000:	strb	r3, [r4]
   12004:	pop	{r4, pc}
   12008:	andeq	r5, r2, r8, asr #32
   1200c:	b	11fac <_start@@Base+0x8c>

00012010 <main@@Base>:
   12010:	push	{r4, r5, r6, r7, fp, lr}
   12014:	add	fp, sp, #16
   12018:	sub	sp, sp, #56	; 0x38
   1201c:	mov	r7, sp
   12020:	mov	r0, r7
   12024:	bl	12140 <table_init@@Base>
   12028:	movw	r1, #19292	; 0x4b5c
   1202c:	mov	r0, r7
   12030:	mov	r2, #0
   12034:	mov	r4, #0
   12038:	movt	r1, #1
   1203c:	bl	12ba0 <table_add_column@@Base>
   12040:	movw	r1, #19358	; 0x4b9e
   12044:	mov	r6, r0
   12048:	mov	r0, r7
   1204c:	mov	r2, #21
   12050:	movt	r1, #1
   12054:	bl	12ba0 <table_add_column@@Base>
   12058:	mov	r5, r0
   1205c:	mov	r0, r7
   12060:	bl	12b14 <table_get_column_length@@Base>
   12064:	cmp	r0, #2
   12068:	beq	1207c <main@@Base+0x6c>
   1206c:	movw	r0, #19295	; 0x4b5f
   12070:	movt	r0, #1
   12074:	bl	11e9c <printf@plt>
   12078:	mvn	r4, #0
   1207c:	mov	r0, sp
   12080:	mov	r1, r6
   12084:	bl	12b7c <table_get_column_name@@Base>
   12088:	movw	r1, #19292	; 0x4b5c
   1208c:	movt	r1, #1
   12090:	bl	11e90 <strcmp@plt>
   12094:	cmp	r0, #0
   12098:	beq	120ac <main@@Base+0x9c>
   1209c:	movw	r0, #19332	; 0x4b84
   120a0:	movt	r0, #1
   120a4:	bl	11e9c <printf@plt>
   120a8:	mvn	r4, #0
   120ac:	mov	r0, sp
   120b0:	mov	r1, r5
   120b4:	bl	12b7c <table_get_column_name@@Base>
   120b8:	movw	r1, #19358	; 0x4b9e
   120bc:	movt	r1, #1
   120c0:	bl	11e90 <strcmp@plt>
   120c4:	cmp	r0, #0
   120c8:	beq	120dc <main@@Base+0xcc>
   120cc:	movw	r0, #19332	; 0x4b84
   120d0:	movt	r0, #1
   120d4:	bl	11e9c <printf@plt>
   120d8:	mvn	r4, #0
   120dc:	mov	r0, sp
   120e0:	bl	1219c <table_destroy@@Base>
   120e4:	mov	r0, r4
   120e8:	sub	sp, fp, #16
   120ec:	pop	{r4, r5, r6, r7, fp, pc}

000120f0 <table_new@@Base>:
   120f0:	push	{fp, lr}
   120f4:	mov	fp, sp
   120f8:	mov	r0, #56	; 0x38
   120fc:	bl	11ecc <malloc@plt>
   12100:	vmov.i32	q8, #0	; 0x00000000
   12104:	mov	r1, #0
   12108:	mov	r2, #10
   1210c:	mov	r3, #20
   12110:	str	r1, [r0]
   12114:	stmib	r0, {r1, r2}
   12118:	str	r1, [r0, #12]
   1211c:	str	r1, [r0, #16]
   12120:	str	r1, [r0, #20]
   12124:	str	r3, [r0, #24]
   12128:	str	r1, [r0, #28]
   1212c:	str	r2, [r0, #48]	; 0x30
   12130:	str	r1, [r0, #52]	; 0x34
   12134:	add	r1, r0, #32
   12138:	vst1.32	{d16-d17}, [r1]
   1213c:	pop	{fp, pc}

00012140 <table_init@@Base>:
   12140:	vmov.i32	q8, #0	; 0x00000000
   12144:	mov	r1, #0
   12148:	mov	r2, #10
   1214c:	mov	r3, #20
   12150:	str	r1, [r0]
   12154:	stmib	r0, {r1, r2}
   12158:	str	r1, [r0, #12]
   1215c:	str	r1, [r0, #16]
   12160:	str	r1, [r0, #20]
   12164:	str	r3, [r0, #24]
   12168:	str	r1, [r0, #28]
   1216c:	str	r2, [r0, #48]	; 0x30
   12170:	str	r1, [r0, #52]	; 0x34
   12174:	add	r0, r0, #32
   12178:	vst1.32	{d16-d17}, [r0]
   1217c:	bx	lr

00012180 <table_delete@@Base>:
   12180:	push	{r4, sl, fp, lr}
   12184:	add	fp, sp, #8
   12188:	mov	r4, r0
   1218c:	bl	1219c <table_destroy@@Base>
   12190:	mov	r0, r4
   12194:	pop	{r4, sl, fp, lr}
   12198:	b	11ea8 <free@plt>

0001219c <table_destroy@@Base>:
   1219c:	cmp	r0, #0
   121a0:	bxeq	lr
   121a4:	push	{r4, r5, r6, sl, fp, lr}
   121a8:	add	fp, sp, #16
   121ac:	mvn	r1, #0
   121b0:	mvn	r2, #0
   121b4:	mov	r3, #64	; 0x40
   121b8:	mov	r4, r0
   121bc:	bl	12a20 <table_notify@@Base>
   121c0:	mov	r0, r4
   121c4:	bl	137cc <table_get_row_length@@Base>
   121c8:	cmp	r0, #1
   121cc:	blt	121f0 <table_destroy@@Base+0x54>
   121d0:	mov	r5, r0
   121d4:	mov	r6, #0
   121d8:	mov	r0, r4
   121dc:	mov	r1, r6
   121e0:	bl	13770 <table_row_destroy@@Base>
   121e4:	add	r6, r6, #1
   121e8:	cmp	r5, r6
   121ec:	bne	121d8 <table_destroy@@Base+0x3c>
   121f0:	ldr	r0, [r4, #16]
   121f4:	cmp	r0, #0
   121f8:	beq	12200 <table_destroy@@Base+0x64>
   121fc:	bl	11ea8 <free@plt>
   12200:	mov	r0, r4
   12204:	bl	12b14 <table_get_column_length@@Base>
   12208:	cmp	r0, #1
   1220c:	blt	12230 <table_destroy@@Base+0x94>
   12210:	mov	r5, r0
   12214:	mov	r6, #0
   12218:	mov	r0, r4
   1221c:	mov	r1, r6
   12220:	bl	12afc <table_column_destroy@@Base>
   12224:	add	r6, r6, #1
   12228:	cmp	r5, r6
   1222c:	bne	12218 <table_destroy@@Base+0x7c>
   12230:	ldr	r0, [r4]
   12234:	cmp	r0, #0
   12238:	beq	12240 <table_destroy@@Base+0xa4>
   1223c:	bl	11ea8 <free@plt>
   12240:	ldr	r0, [r4, #36]	; 0x24
   12244:	cmp	r0, #0
   12248:	beq	12250 <table_destroy@@Base+0xb4>
   1224c:	bl	11ea8 <free@plt>
   12250:	ldr	r0, [r4, #40]	; 0x28
   12254:	cmp	r0, #0
   12258:	beq	12260 <table_destroy@@Base+0xc4>
   1225c:	bl	11ea8 <free@plt>
   12260:	ldr	r0, [r4, #44]	; 0x2c
   12264:	cmp	r0, #0
   12268:	pop	{r4, r5, r6, sl, fp, lr}
   1226c:	beq	12274 <table_destroy@@Base+0xd8>
   12270:	b	11ea8 <free@plt>
   12274:	bx	lr

00012278 <table_dupe@@Base>:
   12278:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1227c:	add	fp, sp, #28
   12280:	sub	sp, sp, #12
   12284:	mov	r4, r0
   12288:	bl	137cc <table_get_row_length@@Base>
   1228c:	mov	r8, r0
   12290:	mov	r0, r4
   12294:	bl	12b14 <table_get_column_length@@Base>
   12298:	mov	r6, r0
   1229c:	mov	r0, #56	; 0x38
   122a0:	bl	11ecc <malloc@plt>
   122a4:	vmov.i32	q8, #0	; 0x00000000
   122a8:	mov	sl, r0
   122ac:	mov	r5, #0
   122b0:	mov	r0, #10
   122b4:	mov	r1, #20
   122b8:	cmp	r6, #1
   122bc:	str	r5, [sl]
   122c0:	str	r5, [sl, #4]
   122c4:	str	r0, [sl, #8]
   122c8:	str	r5, [sl, #12]
   122cc:	str	r5, [sl, #16]
   122d0:	str	r5, [sl, #20]
   122d4:	str	r1, [sl, #24]
   122d8:	str	r5, [sl, #28]
   122dc:	str	r0, [sl, #48]	; 0x30
   122e0:	add	r0, sl, #32
   122e4:	str	r5, [sl, #52]	; 0x34
   122e8:	vst1.32	{d16-d17}, [r0]
   122ec:	blt	12328 <table_dupe@@Base+0xb0>
   122f0:	mov	r0, r4
   122f4:	mov	r1, r5
   122f8:	bl	12b7c <table_get_column_name@@Base>
   122fc:	mov	r7, r0
   12300:	mov	r0, r4
   12304:	mov	r1, r5
   12308:	bl	12b8c <table_get_column_data_type@@Base>
   1230c:	mov	r2, r0
   12310:	mov	r0, sl
   12314:	mov	r1, r7
   12318:	bl	12ba0 <table_add_column@@Base>
   1231c:	add	r5, r5, #1
   12320:	cmp	r6, r5
   12324:	bne	122f0 <table_dupe@@Base+0x78>
   12328:	cmp	r8, #1
   1232c:	blt	12794 <table_dupe@@Base+0x51c>
   12330:	mov	r5, #0
   12334:	add	r9, sp, #8
   12338:	mov	r0, sl
   1233c:	bl	137d4 <table_add_row@@Base>
   12340:	cmp	r6, #1
   12344:	blt	12788 <table_dupe@@Base+0x510>
   12348:	mov	r7, #0
   1234c:	mov	r0, r4
   12350:	mov	r1, r7
   12354:	bl	12b8c <table_get_column_data_type@@Base>
   12358:	cmp	r0, #23
   1235c:	bhi	1277c <table_dupe@@Base+0x504>
   12360:	add	r1, pc, #0
   12364:	ldr	pc, [r1, r0, lsl #2]
   12368:	andeq	r2, r1, r8, asr #7
   1236c:	strdeq	r2, [r1], -r0
   12370:	andeq	r2, r1, r8, lsl r4
   12374:	andeq	r2, r1, r0, asr #8
   12378:	andeq	r2, r1, r8, ror #8
   1237c:	muleq	r1, r0, r4
   12380:			; <UNDEFINED> instruction: 0x000124b8
   12384:	andeq	r2, r1, r0, ror #9
   12388:	andeq	r2, r1, r8, lsl #10
   1238c:	andeq	r2, r1, r0, lsr r5
   12390:	andeq	r2, r1, r8, asr r5
   12394:	andeq	r2, r1, r0, lsl #11
   12398:	andeq	r2, r1, r8, lsr #11
   1239c:	ldrdeq	r2, [r1], -r0
   123a0:	strdeq	r2, [r1], -r8
   123a4:	andeq	r2, r1, r0, lsr #12
   123a8:	andeq	r2, r1, r8, asr #12
   123ac:	andeq	r2, r1, ip, ror #12
   123b0:	muleq	r1, r0, r6
   123b4:			; <UNDEFINED> instruction: 0x000126b4
   123b8:	ldrdeq	r2, [r1], -ip
   123bc:	andeq	r2, r1, r4, lsl #14
   123c0:	andeq	r2, r1, ip, lsr #14
   123c4:	andeq	r2, r1, r4, asr r7
   123c8:	mov	r0, r4
   123cc:	mov	r1, r5
   123d0:	mov	r2, r7
   123d4:	bl	13520 <table_get_int@@Base>
   123d8:	mov	r3, r0
   123dc:	mov	r0, sl
   123e0:	mov	r1, r5
   123e4:	mov	r2, r7
   123e8:	bl	13cd0 <table_set_int@@Base>
   123ec:	b	1277c <table_dupe@@Base+0x504>
   123f0:	mov	r0, r4
   123f4:	mov	r1, r5
   123f8:	mov	r2, r7
   123fc:	bl	13538 <table_get_uint@@Base>
   12400:	mov	r3, r0
   12404:	mov	r0, sl
   12408:	mov	r1, r5
   1240c:	mov	r2, r7
   12410:	bl	13cf8 <table_set_uint@@Base>
   12414:	b	1277c <table_dupe@@Base+0x504>
   12418:	mov	r0, r4
   1241c:	mov	r1, r5
   12420:	mov	r2, r7
   12424:	bl	13550 <table_get_int8@@Base>
   12428:	mov	r3, r0
   1242c:	mov	r0, sl
   12430:	mov	r1, r5
   12434:	mov	r2, r7
   12438:	bl	13d20 <table_set_int8@@Base>
   1243c:	b	1277c <table_dupe@@Base+0x504>
   12440:	mov	r0, r4
   12444:	mov	r1, r5
   12448:	mov	r2, r7
   1244c:	bl	13568 <table_get_uint8@@Base>
   12450:	mov	r3, r0
   12454:	mov	r0, sl
   12458:	mov	r1, r5
   1245c:	mov	r2, r7
   12460:	bl	13d48 <table_set_uint8@@Base>
   12464:	b	1277c <table_dupe@@Base+0x504>
   12468:	mov	r0, r4
   1246c:	mov	r1, r5
   12470:	mov	r2, r7
   12474:	bl	13580 <table_get_int16@@Base>
   12478:	mov	r3, r0
   1247c:	mov	r0, sl
   12480:	mov	r1, r5
   12484:	mov	r2, r7
   12488:	bl	13d70 <table_set_int16@@Base>
   1248c:	b	1277c <table_dupe@@Base+0x504>
   12490:	mov	r0, r4
   12494:	mov	r1, r5
   12498:	mov	r2, r7
   1249c:	bl	13598 <table_get_uint16@@Base>
   124a0:	mov	r3, r0
   124a4:	mov	r0, sl
   124a8:	mov	r1, r5
   124ac:	mov	r2, r7
   124b0:	bl	13d98 <table_set_uint16@@Base>
   124b4:	b	1277c <table_dupe@@Base+0x504>
   124b8:	mov	r0, r4
   124bc:	mov	r1, r5
   124c0:	mov	r2, r7
   124c4:	bl	135b0 <table_get_int32@@Base>
   124c8:	mov	r3, r0
   124cc:	mov	r0, sl
   124d0:	mov	r1, r5
   124d4:	mov	r2, r7
   124d8:	bl	13dc0 <table_set_int32@@Base>
   124dc:	b	1277c <table_dupe@@Base+0x504>
   124e0:	mov	r0, r4
   124e4:	mov	r1, r5
   124e8:	mov	r2, r7
   124ec:	bl	135c8 <table_get_uint32@@Base>
   124f0:	mov	r3, r0
   124f4:	mov	r0, sl
   124f8:	mov	r1, r5
   124fc:	mov	r2, r7
   12500:	bl	13de8 <table_set_uint32@@Base>
   12504:	b	1277c <table_dupe@@Base+0x504>
   12508:	mov	r0, r4
   1250c:	mov	r1, r5
   12510:	mov	r2, r7
   12514:	bl	135e0 <table_get_int64@@Base>
   12518:	stm	sp, {r0, r1}
   1251c:	mov	r0, sl
   12520:	mov	r1, r5
   12524:	mov	r2, r7
   12528:	bl	13e10 <table_set_int64@@Base>
   1252c:	b	1277c <table_dupe@@Base+0x504>
   12530:	mov	r0, r4
   12534:	mov	r1, r5
   12538:	mov	r2, r7
   1253c:	bl	135f8 <table_get_uint64@@Base>
   12540:	stm	sp, {r0, r1}
   12544:	mov	r0, sl
   12548:	mov	r1, r5
   1254c:	mov	r2, r7
   12550:	bl	13e44 <table_set_uint64@@Base>
   12554:	b	1277c <table_dupe@@Base+0x504>
   12558:	mov	r0, r4
   1255c:	mov	r1, r5
   12560:	mov	r2, r7
   12564:	bl	13610 <table_get_short@@Base>
   12568:	mov	r3, r0
   1256c:	mov	r0, sl
   12570:	mov	r1, r5
   12574:	mov	r2, r7
   12578:	bl	13e78 <table_set_short@@Base>
   1257c:	b	1277c <table_dupe@@Base+0x504>
   12580:	mov	r0, r4
   12584:	mov	r1, r5
   12588:	mov	r2, r7
   1258c:	bl	13628 <table_get_ushort@@Base>
   12590:	mov	r3, r0
   12594:	mov	r0, sl
   12598:	mov	r1, r5
   1259c:	mov	r2, r7
   125a0:	bl	13ea0 <table_set_ushort@@Base>
   125a4:	b	1277c <table_dupe@@Base+0x504>
   125a8:	mov	r0, r4
   125ac:	mov	r1, r5
   125b0:	mov	r2, r7
   125b4:	bl	13640 <table_get_long@@Base>
   125b8:	mov	r3, r0
   125bc:	mov	r0, sl
   125c0:	mov	r1, r5
   125c4:	mov	r2, r7
   125c8:	bl	13ec8 <table_set_long@@Base>
   125cc:	b	1277c <table_dupe@@Base+0x504>
   125d0:	mov	r0, r4
   125d4:	mov	r1, r5
   125d8:	mov	r2, r7
   125dc:	bl	13658 <table_get_ulong@@Base>
   125e0:	mov	r3, r0
   125e4:	mov	r0, sl
   125e8:	mov	r1, r5
   125ec:	mov	r2, r7
   125f0:	bl	13ef0 <table_set_ulong@@Base>
   125f4:	b	1277c <table_dupe@@Base+0x504>
   125f8:	mov	r0, r4
   125fc:	mov	r1, r5
   12600:	mov	r2, r7
   12604:	bl	13670 <table_get_llong@@Base>
   12608:	stm	sp, {r0, r1}
   1260c:	mov	r0, sl
   12610:	mov	r1, r5
   12614:	mov	r2, r7
   12618:	bl	13f18 <table_set_llong@@Base>
   1261c:	b	1277c <table_dupe@@Base+0x504>
   12620:	mov	r0, r4
   12624:	mov	r1, r5
   12628:	mov	r2, r7
   1262c:	bl	13688 <table_get_ullong@@Base>
   12630:	stm	sp, {r0, r1}
   12634:	mov	r0, sl
   12638:	mov	r1, r5
   1263c:	mov	r2, r7
   12640:	bl	13f4c <table_set_ullong@@Base>
   12644:	b	1277c <table_dupe@@Base+0x504>
   12648:	mov	r0, r4
   1264c:	mov	r1, r5
   12650:	mov	r2, r7
   12654:	bl	136a0 <table_get_float@@Base>
   12658:	mov	r0, sl
   1265c:	mov	r1, r5
   12660:	mov	r2, r7
   12664:	bl	13f80 <table_set_float@@Base>
   12668:	b	1277c <table_dupe@@Base+0x504>
   1266c:	mov	r0, r4
   12670:	mov	r1, r5
   12674:	mov	r2, r7
   12678:	bl	136b8 <table_get_double@@Base>
   1267c:	mov	r0, sl
   12680:	mov	r1, r5
   12684:	mov	r2, r7
   12688:	bl	13fa8 <table_set_double@@Base>
   1268c:	b	1277c <table_dupe@@Base+0x504>
   12690:	mov	r0, r4
   12694:	mov	r1, r5
   12698:	mov	r2, r7
   1269c:	bl	136d0 <table_get_ldouble@@Base>
   126a0:	mov	r0, sl
   126a4:	mov	r1, r5
   126a8:	mov	r2, r7
   126ac:	bl	13fd0 <table_set_ldouble@@Base>
   126b0:	b	1277c <table_dupe@@Base+0x504>
   126b4:	mov	r0, r4
   126b8:	mov	r1, r5
   126bc:	mov	r2, r7
   126c0:	bl	136e8 <table_get_char@@Base>
   126c4:	mov	r3, r0
   126c8:	mov	r0, sl
   126cc:	mov	r1, r5
   126d0:	mov	r2, r7
   126d4:	bl	14018 <table_set_char@@Base>
   126d8:	b	1277c <table_dupe@@Base+0x504>
   126dc:	mov	r0, r4
   126e0:	mov	r1, r5
   126e4:	mov	r2, r7
   126e8:	bl	13700 <table_get_uchar@@Base>
   126ec:	mov	r3, r0
   126f0:	mov	r0, sl
   126f4:	mov	r1, r5
   126f8:	mov	r2, r7
   126fc:	bl	14040 <table_set_uchar@@Base>
   12700:	b	1277c <table_dupe@@Base+0x504>
   12704:	mov	r0, r4
   12708:	mov	r1, r5
   1270c:	mov	r2, r7
   12710:	bl	13718 <table_get_string@@Base>
   12714:	mov	r3, r0
   12718:	mov	r0, sl
   1271c:	mov	r1, r5
   12720:	mov	r2, r7
   12724:	bl	13ff8 <table_set_string@@Base>
   12728:	b	1277c <table_dupe@@Base+0x504>
   1272c:	mov	r0, r4
   12730:	mov	r1, r5
   12734:	mov	r2, r7
   12738:	bl	13508 <table_get_bool@@Base>
   1273c:	mov	r3, r0
   12740:	mov	r0, sl
   12744:	mov	r1, r5
   12748:	mov	r2, r7
   1274c:	bl	13ca8 <table_set_bool@@Base>
   12750:	b	1277c <table_dupe@@Base+0x504>
   12754:	mov	r0, r4
   12758:	mov	r1, r5
   1275c:	mov	r2, r7
   12760:	bl	1372c <table_get_ptr@@Base>
   12764:	str	r0, [sp, #8]
   12768:	mov	r0, sl
   1276c:	mov	r1, r5
   12770:	mov	r2, r7
   12774:	mov	r3, r9
   12778:	bl	14068 <table_set_ptr@@Base>
   1277c:	add	r7, r7, #1
   12780:	cmp	r6, r7
   12784:	bne	1234c <table_dupe@@Base+0xd4>
   12788:	add	r5, r5, #1
   1278c:	cmp	r5, r8
   12790:	bne	12338 <table_dupe@@Base+0xc0>
   12794:	mov	r0, sl
   12798:	sub	sp, fp, #28
   1279c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000127a0 <table_get_major_version@@Base>:
   127a0:	mov	r0, #0
   127a4:	bx	lr

000127a8 <table_get_minor_version@@Base>:
   127a8:	mov	r0, #0
   127ac:	bx	lr

000127b0 <table_get_patch_version@@Base>:
   127b0:	mov	r0, #0
   127b4:	bx	lr

000127b8 <table_get_version@@Base>:
   127b8:	movw	r0, #19508	; 0x4c34
   127bc:	movt	r0, #1
   127c0:	bx	lr

000127c4 <table_get_callback_length@@Base>:
   127c4:	ldr	r0, [r0, #32]
   127c8:	bx	lr

000127cc <table_register_callback@@Base>:
   127cc:	push	{r4, r5, r6, r7, fp, lr}
   127d0:	add	fp, sp, #16
   127d4:	mov	r5, r0
   127d8:	ldr	r0, [r0, #32]
   127dc:	mov	r4, r3
   127e0:	mov	r6, r2
   127e4:	mov	r7, r1
   127e8:	cmp	r0, #1
   127ec:	blt	12820 <table_register_callback@@Base+0x54>
   127f0:	ldr	r2, [r5, #36]	; 0x24
   127f4:	mov	r1, #0
   127f8:	ldr	r3, [r2, r1, lsl #2]
   127fc:	cmp	r3, r7
   12800:	bne	12814 <table_register_callback@@Base+0x48>
   12804:	ldr	r3, [r5, #40]	; 0x28
   12808:	ldr	r3, [r3, r1, lsl #2]
   1280c:	cmp	r3, r6
   12810:	beq	128a4 <table_register_callback@@Base+0xd8>
   12814:	add	r1, r1, #1
   12818:	cmp	r0, r1
   1281c:	bne	127f8 <table_register_callback@@Base+0x2c>
   12820:	ldr	r1, [r5, #48]	; 0x30
   12824:	udiv	r2, r0, r1
   12828:	mls	r2, r2, r1, r0
   1282c:	cmp	r2, #0
   12830:	bne	1287c <table_register_callback@@Base+0xb0>
   12834:	ldr	r2, [r5, #52]	; 0x34
   12838:	ldr	r0, [r5, #36]	; 0x24
   1283c:	add	r1, r2, r1
   12840:	str	r1, [r5, #52]	; 0x34
   12844:	lsl	r1, r1, #2
   12848:	bl	11eb4 <realloc@plt>
   1284c:	str	r0, [r5, #36]	; 0x24
   12850:	ldr	r1, [r5, #52]	; 0x34
   12854:	ldr	r0, [r5, #40]	; 0x28
   12858:	lsl	r1, r1, #2
   1285c:	bl	11eb4 <realloc@plt>
   12860:	str	r0, [r5, #40]	; 0x28
   12864:	ldr	r1, [r5, #52]	; 0x34
   12868:	ldr	r0, [r5, #44]	; 0x2c
   1286c:	lsl	r1, r1, #2
   12870:	bl	11eb4 <realloc@plt>
   12874:	str	r0, [r5, #44]	; 0x2c
   12878:	ldr	r0, [r5, #32]
   1287c:	ldr	r1, [r5, #36]	; 0x24
   12880:	str	r7, [r1, r0, lsl #2]
   12884:	ldr	r1, [r5, #40]	; 0x28
   12888:	str	r6, [r1, r0, lsl #2]
   1288c:	ldr	r1, [r5, #44]	; 0x2c
   12890:	str	r4, [r1, r0, lsl #2]
   12894:	ldr	r0, [r5, #32]
   12898:	add	r0, r0, #1
   1289c:	str	r0, [r5, #32]
   128a0:	pop	{r4, r5, r6, r7, fp, pc}
   128a4:	cmp	r1, #0
   128a8:	beq	12820 <table_register_callback@@Base+0x54>
   128ac:	ldr	r0, [r5, #44]	; 0x2c
   128b0:	ldr	r2, [r0, r1, lsl #2]
   128b4:	orr	r2, r2, r4
   128b8:	str	r2, [r0, r1, lsl #2]
   128bc:	pop	{r4, r5, r6, r7, fp, pc}

000128c0 <table_unregister_callback@@Base>:
   128c0:	push	{r4, r5, r6, sl, fp, lr}
   128c4:	add	fp, sp, #16
   128c8:	ldr	r4, [r0, #32]
   128cc:	cmp	r4, #1
   128d0:	blt	12908 <table_unregister_callback@@Base+0x48>
   128d4:	ldr	r3, [r0, #36]	; 0x24
   128d8:	mov	r6, r0
   128dc:	mov	r0, #0
   128e0:	ldr	r5, [r3, r0, lsl #2]
   128e4:	cmp	r5, r1
   128e8:	bne	128fc <table_unregister_callback@@Base+0x3c>
   128ec:	ldr	r5, [r6, #40]	; 0x28
   128f0:	ldr	r5, [r5, r0, lsl #2]
   128f4:	cmp	r5, r2
   128f8:	beq	1290c <table_unregister_callback@@Base+0x4c>
   128fc:	add	r0, r0, #1
   12900:	cmp	r0, r4
   12904:	bne	128e0 <table_unregister_callback@@Base+0x20>
   12908:	pop	{r4, r5, r6, sl, fp, pc}
   1290c:	sub	r1, r4, #1
   12910:	cmp	r0, r1
   12914:	bge	12998 <table_unregister_callback@@Base+0xd8>
   12918:	add	r2, r0, #1
   1291c:	ldr	r1, [r3, r2, lsl #2]
   12920:	str	r1, [r3, r0, lsl #2]
   12924:	ldr	r1, [r6, #40]	; 0x28
   12928:	ldr	r3, [r1, r2, lsl #2]
   1292c:	str	r3, [r1, r0, lsl #2]
   12930:	ldr	r1, [r6, #44]	; 0x2c
   12934:	ldr	r3, [r1, r2, lsl #2]
   12938:	str	r3, [r1, r0, lsl #2]
   1293c:	ldr	r1, [r6, #32]
   12940:	sub	r1, r1, #1
   12944:	cmp	r2, r1
   12948:	bge	12998 <table_unregister_callback@@Base+0xd8>
   1294c:	ldr	r1, [r6, #36]	; 0x24
   12950:	add	r1, r1, r0, lsl #2
   12954:	ldr	r2, [r1, #8]
   12958:	str	r2, [r1, #4]
   1295c:	ldr	r1, [r6, #40]	; 0x28
   12960:	add	r1, r1, r0, lsl #2
   12964:	ldr	r2, [r1, #8]
   12968:	str	r2, [r1, #4]
   1296c:	ldr	r1, [r6, #44]	; 0x2c
   12970:	add	r1, r1, r0, lsl #2
   12974:	ldr	r2, [r1, #8]
   12978:	str	r2, [r1, #4]
   1297c:	add	r2, r0, #1
   12980:	add	r0, r0, #2
   12984:	ldr	r1, [r6, #32]
   12988:	sub	r1, r1, #1
   1298c:	cmp	r0, r1
   12990:	mov	r0, r2
   12994:	blt	1294c <table_unregister_callback@@Base+0x8c>
   12998:	str	r1, [r6, #32]
   1299c:	ldr	r2, [r6, #48]	; 0x30
   129a0:	udiv	r0, r1, r2
   129a4:	mls	r0, r0, r2, r1
   129a8:	cmp	r0, #0
   129ac:	popne	{r4, r5, r6, sl, fp, pc}
   129b0:	ldr	r1, [r6, #52]	; 0x34
   129b4:	ldr	r0, [r6, #36]	; 0x24
   129b8:	subs	r1, r1, r2
   129bc:	str	r1, [r6, #52]	; 0x34
   129c0:	beq	129f8 <table_unregister_callback@@Base+0x138>
   129c4:	lsl	r1, r1, #2
   129c8:	bl	11eb4 <realloc@plt>
   129cc:	str	r0, [r6, #36]	; 0x24
   129d0:	ldr	r1, [r6, #52]	; 0x34
   129d4:	ldr	r0, [r6, #40]	; 0x28
   129d8:	lsl	r1, r1, #2
   129dc:	bl	11eb4 <realloc@plt>
   129e0:	str	r0, [r6, #40]	; 0x28
   129e4:	ldr	r1, [r6, #52]	; 0x34
   129e8:	ldr	r0, [r6, #44]	; 0x2c
   129ec:	lsl	r1, r1, #2
   129f0:	bl	11eb4 <realloc@plt>
   129f4:	b	12a18 <table_unregister_callback@@Base+0x158>
   129f8:	bl	11ea8 <free@plt>
   129fc:	ldr	r0, [r6, #40]	; 0x28
   12a00:	bl	11ea8 <free@plt>
   12a04:	ldr	r0, [r6, #44]	; 0x2c
   12a08:	bl	11ea8 <free@plt>
   12a0c:	mov	r0, #0
   12a10:	str	r0, [r6, #36]	; 0x24
   12a14:	str	r0, [r6, #40]	; 0x28
   12a18:	str	r0, [r6, #44]	; 0x2c
   12a1c:	pop	{r4, r5, r6, sl, fp, pc}

00012a20 <table_notify@@Base>:
   12a20:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12a24:	add	fp, sp, #24
   12a28:	sub	sp, sp, #8
   12a2c:	mov	r7, r0
   12a30:	ldr	r0, [r0, #32]
   12a34:	cmp	r0, #1
   12a38:	blt	12a94 <table_notify@@Base+0x74>
   12a3c:	mov	r4, r3
   12a40:	mov	r8, r2
   12a44:	mov	r9, r1
   12a48:	mov	r5, #0
   12a4c:	ldr	r1, [r7, #44]	; 0x2c
   12a50:	ldr	r1, [r1, r5, lsl #2]
   12a54:	tst	r1, r4
   12a58:	beq	12a88 <table_notify@@Base+0x68>
   12a5c:	ldr	r0, [r7, #36]	; 0x24
   12a60:	ldr	r1, [r7, #40]	; 0x28
   12a64:	mov	r2, r8
   12a68:	mov	r3, r4
   12a6c:	ldr	r6, [r0, r5, lsl #2]
   12a70:	ldr	r0, [r1, r5, lsl #2]
   12a74:	mov	r1, r9
   12a78:	str	r0, [sp]
   12a7c:	mov	r0, r7
   12a80:	blx	r6
   12a84:	ldr	r0, [r7, #32]
   12a88:	add	r5, r5, #1
   12a8c:	cmp	r5, r0
   12a90:	blt	12a4c <table_notify@@Base+0x2c>
   12a94:	sub	sp, fp, #24
   12a98:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00012a9c <table_column_init@@Base>:
   12a9c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   12aa0:	add	fp, sp, #24
   12aa4:	ldr	r7, [r0]
   12aa8:	mov	r0, r2
   12aac:	mov	r4, r3
   12ab0:	mov	r5, r2
   12ab4:	mov	r6, r1
   12ab8:	bl	11ef0 <strlen@plt>
   12abc:	add	r0, r0, #1
   12ac0:	bl	11ecc <malloc@plt>
   12ac4:	ldr	r8, [fp, #8]
   12ac8:	add	r6, r6, r6, lsl #1
   12acc:	cmp	r0, #0
   12ad0:	str	r0, [r7, r6, lsl #2]
   12ad4:	beq	12ae0 <table_column_init@@Base+0x44>
   12ad8:	mov	r1, r5
   12adc:	bl	11ec0 <strcpy@plt>
   12ae0:	add	r0, r7, r6, lsl #2
   12ae4:	stmib	r0, {r4, r8}
   12ae8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00012aec <table_get_col_ptr@@Base>:
   12aec:	ldr	r0, [r0]
   12af0:	add	r1, r1, r1, lsl #1
   12af4:	add	r0, r0, r1, lsl #2
   12af8:	bx	lr

00012afc <table_column_destroy@@Base>:
   12afc:	ldr	r0, [r0]
   12b00:	add	r1, r1, r1, lsl #1
   12b04:	ldr	r0, [r0, r1, lsl #2]
   12b08:	cmp	r0, #0
   12b0c:	bxeq	lr
   12b10:	b	11ea8 <free@plt>

00012b14 <table_get_column_length@@Base>:
   12b14:	ldr	r0, [r0, #4]
   12b18:	bx	lr

00012b1c <table_get_column@@Base>:
   12b1c:	push	{r4, r5, r6, r7, fp, lr}
   12b20:	add	fp, sp, #16
   12b24:	ldr	r6, [r0, #4]
   12b28:	cmp	r6, #1
   12b2c:	blt	12b68 <table_get_column@@Base+0x4c>
   12b30:	ldr	r7, [r0]
   12b34:	mov	r5, r1
   12b38:	mov	r4, #0
   12b3c:	ldr	r0, [r7]
   12b40:	mov	r1, r5
   12b44:	bl	11e90 <strcmp@plt>
   12b48:	cmp	r0, #0
   12b4c:	beq	12b6c <table_get_column@@Base+0x50>
   12b50:	add	r4, r4, #1
   12b54:	add	r7, r7, #12
   12b58:	cmp	r6, r4
   12b5c:	bne	12b3c <table_get_column@@Base+0x20>
   12b60:	mov	r4, r6
   12b64:	b	12b6c <table_get_column@@Base+0x50>
   12b68:	mov	r4, #0
   12b6c:	cmp	r4, r6
   12b70:	mvneq	r4, #0
   12b74:	mov	r0, r4
   12b78:	pop	{r4, r5, r6, r7, fp, pc}

00012b7c <table_get_column_name@@Base>:
   12b7c:	ldr	r0, [r0]
   12b80:	add	r1, r1, r1, lsl #1
   12b84:	ldr	r0, [r0, r1, lsl #2]
   12b88:	bx	lr

00012b8c <table_get_column_data_type@@Base>:
   12b8c:	ldr	r0, [r0]
   12b90:	add	r1, r1, r1, lsl #1
   12b94:	add	r0, r0, r1, lsl #2
   12b98:	ldr	r0, [r0, #4]
   12b9c:	bx	lr

00012ba0 <table_add_column@@Base>:
   12ba0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12ba4:	add	fp, sp, #24
   12ba8:	sub	sp, sp, #8
   12bac:	mov	r4, r0
   12bb0:	mov	r8, r1
   12bb4:	ldr	r0, [r0, #4]
   12bb8:	mov	r9, r2
   12bbc:	ldr	r1, [r4, #8]
   12bc0:	udiv	r2, r0, r1
   12bc4:	mls	r0, r2, r1, r0
   12bc8:	cmp	r0, #0
   12bcc:	bne	12c38 <table_add_column@@Base+0x98>
   12bd0:	ldr	r2, [r4, #12]
   12bd4:	ldr	r0, [r4]
   12bd8:	add	r1, r2, r1
   12bdc:	str	r1, [r4, #12]
   12be0:	add	r1, r1, r1, lsl #1
   12be4:	lsl	r1, r1, #2
   12be8:	bl	11eb4 <realloc@plt>
   12bec:	str	r0, [r4]
   12bf0:	mov	r0, r4
   12bf4:	bl	137cc <table_get_row_length@@Base>
   12bf8:	cmp	r0, #1
   12bfc:	blt	12c38 <table_add_column@@Base+0x98>
   12c00:	mov	r6, r0
   12c04:	mov	r7, #0
   12c08:	mov	r0, r4
   12c0c:	mov	r1, r7
   12c10:	bl	13764 <table_get_row_ptr@@Base>
   12c14:	ldr	r1, [r4, #12]
   12c18:	mov	r5, r0
   12c1c:	ldr	r0, [r0]
   12c20:	lsl	r1, r1, #2
   12c24:	bl	11eb4 <realloc@plt>
   12c28:	add	r7, r7, #1
   12c2c:	str	r0, [r5]
   12c30:	cmp	r6, r7
   12c34:	bne	12c08 <table_add_column@@Base+0x68>
   12c38:	mov	r0, r4
   12c3c:	bl	137cc <table_get_row_length@@Base>
   12c40:	ldr	r6, [r4, #4]
   12c44:	mov	r7, r0
   12c48:	mov	r0, r9
   12c4c:	bl	134d8 <table_get_default_compare_function_for_data_type@@Base>
   12c50:	str	r0, [sp]
   12c54:	mov	r0, r4
   12c58:	mov	r1, r6
   12c5c:	mov	r2, r8
   12c60:	mov	r3, r9
   12c64:	bl	12a9c <table_column_init@@Base>
   12c68:	cmp	r7, #1
   12c6c:	blt	12c90 <table_add_column@@Base+0xf0>
   12c70:	mov	r5, #0
   12c74:	mov	r0, r4
   12c78:	mov	r1, r5
   12c7c:	mov	r2, r6
   12c80:	bl	14088 <table_cell_init@@Base>
   12c84:	add	r5, r5, #1
   12c88:	cmp	r7, r5
   12c8c:	bne	12c74 <table_add_column@@Base+0xd4>
   12c90:	ldr	r2, [r4, #4]
   12c94:	mov	r0, r4
   12c98:	mvn	r1, #0
   12c9c:	mov	r3, #8
   12ca0:	bl	12a20 <table_notify@@Base>
   12ca4:	ldr	r0, [r4, #4]
   12ca8:	add	r1, r0, #1
   12cac:	str	r1, [r4, #4]
   12cb0:	sub	sp, fp, #24
   12cb4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00012cb8 <table_remove_column@@Base>:
   12cb8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12cbc:	add	fp, sp, #24
   12cc0:	mov	r5, r0
   12cc4:	ldr	r0, [r0]
   12cc8:	add	r6, r1, r1, lsl #1
   12ccc:	mov	r9, r1
   12cd0:	ldr	r0, [r0, r6, lsl #2]
   12cd4:	cmp	r0, #0
   12cd8:	beq	12ce0 <table_remove_column@@Base+0x28>
   12cdc:	bl	11ea8 <free@plt>
   12ce0:	ldr	r0, [r5, #4]
   12ce4:	sub	r4, r0, #1
   12ce8:	cmp	r4, r9
   12cec:	ble	12d20 <table_remove_column@@Base+0x68>
   12cf0:	mvn	r1, r9
   12cf4:	add	r0, r1, r0
   12cf8:	lsl	r1, r6, #2
   12cfc:	ldr	r2, [r5]
   12d00:	subs	r0, r0, #1
   12d04:	add	r2, r2, r1
   12d08:	add	r1, r1, #12
   12d0c:	vldr	d16, [r2, #12]
   12d10:	ldr	r3, [r2, #20]
   12d14:	str	r3, [r2, #8]
   12d18:	vstr	d16, [r2]
   12d1c:	bne	12cfc <table_remove_column@@Base+0x44>
   12d20:	mov	r0, r5
   12d24:	bl	137cc <table_get_row_length@@Base>
   12d28:	cmp	r0, #1
   12d2c:	blt	12d88 <table_remove_column@@Base+0xd0>
   12d30:	mov	r6, r0
   12d34:	mov	r7, #0
   12d38:	mov	r0, r5
   12d3c:	mov	r1, r7
   12d40:	mov	r2, r9
   12d44:	bl	140c4 <table_cell_destroy@@Base>
   12d48:	mov	r0, r5
   12d4c:	mov	r1, r7
   12d50:	bl	13764 <table_get_row_ptr@@Base>
   12d54:	cmp	r4, r9
   12d58:	ble	12d7c <table_remove_column@@Base+0xc4>
   12d5c:	mov	r1, r9
   12d60:	ldr	r2, [r0]
   12d64:	add	r3, r2, r1, lsl #2
   12d68:	ldr	r3, [r3, #4]
   12d6c:	str	r3, [r2, r1, lsl #2]
   12d70:	add	r1, r1, #1
   12d74:	cmp	r4, r1
   12d78:	bne	12d60 <table_remove_column@@Base+0xa8>
   12d7c:	add	r7, r7, #1
   12d80:	cmp	r7, r6
   12d84:	bne	12d38 <table_remove_column@@Base+0x80>
   12d88:	ldmib	r5, {r0, r1}
   12d8c:	sub	r0, r0, #1
   12d90:	udiv	r2, r0, r1
   12d94:	str	r0, [r5, #4]
   12d98:	mls	r0, r2, r1, r0
   12d9c:	cmp	r0, #0
   12da0:	bne	12e0c <table_remove_column@@Base+0x154>
   12da4:	ldr	r2, [r5, #12]
   12da8:	ldr	r0, [r5]
   12dac:	sub	r1, r2, r1
   12db0:	str	r1, [r5, #12]
   12db4:	add	r1, r1, r1, lsl #1
   12db8:	lsl	r1, r1, #2
   12dbc:	bl	11eb4 <realloc@plt>
   12dc0:	str	r0, [r5]
   12dc4:	mov	r0, r5
   12dc8:	bl	137cc <table_get_row_length@@Base>
   12dcc:	cmp	r0, #1
   12dd0:	blt	12e0c <table_remove_column@@Base+0x154>
   12dd4:	mov	r8, r0
   12dd8:	mov	r7, #0
   12ddc:	mov	r0, r5
   12de0:	mov	r1, r7
   12de4:	bl	13764 <table_get_row_ptr@@Base>
   12de8:	ldr	r1, [r5, #12]
   12dec:	mov	r6, r0
   12df0:	ldr	r0, [r0]
   12df4:	lsl	r1, r1, #2
   12df8:	bl	11eb4 <realloc@plt>
   12dfc:	add	r7, r7, #1
   12e00:	str	r0, [r6]
   12e04:	cmp	r8, r7
   12e08:	bne	12ddc <table_remove_column@@Base+0x124>
   12e0c:	mov	r0, r5
   12e10:	mvn	r1, #0
   12e14:	mov	r2, r9
   12e18:	mov	r3, #16
   12e1c:	bl	12a20 <table_notify@@Base>
   12e20:	mov	r0, #0
   12e24:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00012e28 <table_get_column_compare_function@@Base>:
   12e28:	ldr	r0, [r0]
   12e2c:	add	r1, r1, r1, lsl #1
   12e30:	add	r0, r0, r1, lsl #2
   12e34:	ldr	r0, [r0, #8]
   12e38:	bx	lr

00012e3c <table_set_column_compare_function@@Base>:
   12e3c:	ldr	r0, [r0]
   12e40:	add	r1, r1, r1, lsl #1
   12e44:	add	r0, r0, r1, lsl #2
   12e48:	str	r2, [r0, #8]
   12e4c:	bx	lr

00012e50 <table_compare_bool@@Base>:
   12e50:	cmp	r0, #0
   12e54:	beq	12e7c <table_compare_bool@@Base+0x2c>
   12e58:	cmp	r1, #0
   12e5c:	beq	12e88 <table_compare_bool@@Base+0x38>
   12e60:	ldrb	r2, [r1]
   12e64:	ldrb	r0, [r0]
   12e68:	mov	r1, #0
   12e6c:	cmp	r0, r2
   12e70:	mvncc	r1, #0
   12e74:	movwhi	r1, #1
   12e78:	b	12e8c <table_compare_bool@@Base+0x3c>
   12e7c:	cmp	r1, #0
   12e80:	mvnne	r1, #0
   12e84:	b	12e8c <table_compare_bool@@Base+0x3c>
   12e88:	mov	r1, #1
   12e8c:	mov	r0, r1
   12e90:	bx	lr

00012e94 <table_compare_int@@Base>:
   12e94:	cmp	r0, #0
   12e98:	beq	12ec0 <table_compare_int@@Base+0x2c>
   12e9c:	cmp	r1, #0
   12ea0:	beq	12ecc <table_compare_int@@Base+0x38>
   12ea4:	ldr	r2, [r1]
   12ea8:	ldr	r0, [r0]
   12eac:	mov	r1, #0
   12eb0:	cmp	r0, r2
   12eb4:	mvnlt	r1, #0
   12eb8:	movwgt	r1, #1
   12ebc:	b	12ed0 <table_compare_int@@Base+0x3c>
   12ec0:	cmp	r1, #0
   12ec4:	mvnne	r1, #0
   12ec8:	b	12ed0 <table_compare_int@@Base+0x3c>
   12ecc:	mov	r1, #1
   12ed0:	mov	r0, r1
   12ed4:	bx	lr

00012ed8 <table_compare_uint@@Base>:
   12ed8:	cmp	r0, #0
   12edc:	beq	12f04 <table_compare_uint@@Base+0x2c>
   12ee0:	cmp	r1, #0
   12ee4:	beq	12f10 <table_compare_uint@@Base+0x38>
   12ee8:	ldr	r2, [r1]
   12eec:	ldr	r0, [r0]
   12ef0:	mov	r1, #0
   12ef4:	cmp	r0, r2
   12ef8:	mvncc	r1, #0
   12efc:	movwhi	r1, #1
   12f00:	b	12f14 <table_compare_uint@@Base+0x3c>
   12f04:	cmp	r1, #0
   12f08:	mvnne	r1, #0
   12f0c:	b	12f14 <table_compare_uint@@Base+0x3c>
   12f10:	mov	r1, #1
   12f14:	mov	r0, r1
   12f18:	bx	lr

00012f1c <table_compare_int8@@Base>:
   12f1c:	cmp	r0, #0
   12f20:	beq	12f48 <table_compare_int8@@Base+0x2c>
   12f24:	cmp	r1, #0
   12f28:	beq	12f54 <table_compare_int8@@Base+0x38>
   12f2c:	ldrsb	r2, [r1]
   12f30:	ldrsb	r0, [r0]
   12f34:	mov	r1, #0
   12f38:	cmp	r0, r2
   12f3c:	mvnlt	r1, #0
   12f40:	movwgt	r1, #1
   12f44:	b	12f58 <table_compare_int8@@Base+0x3c>
   12f48:	cmp	r1, #0
   12f4c:	mvnne	r1, #0
   12f50:	b	12f58 <table_compare_int8@@Base+0x3c>
   12f54:	mov	r1, #1
   12f58:	mov	r0, r1
   12f5c:	bx	lr

00012f60 <table_compare_uint8@@Base>:
   12f60:	cmp	r0, #0
   12f64:	beq	12f8c <table_compare_uint8@@Base+0x2c>
   12f68:	cmp	r1, #0
   12f6c:	beq	12f98 <table_compare_uint8@@Base+0x38>
   12f70:	ldrb	r2, [r1]
   12f74:	ldrb	r0, [r0]
   12f78:	mov	r1, #0
   12f7c:	cmp	r0, r2
   12f80:	mvncc	r1, #0
   12f84:	movwhi	r1, #1
   12f88:	b	12f9c <table_compare_uint8@@Base+0x3c>
   12f8c:	cmp	r1, #0
   12f90:	mvnne	r1, #0
   12f94:	b	12f9c <table_compare_uint8@@Base+0x3c>
   12f98:	mov	r1, #1
   12f9c:	mov	r0, r1
   12fa0:	bx	lr

00012fa4 <table_compare_int16@@Base>:
   12fa4:	cmp	r0, #0
   12fa8:	beq	12fd0 <table_compare_int16@@Base+0x2c>
   12fac:	cmp	r1, #0
   12fb0:	beq	12fdc <table_compare_int16@@Base+0x38>
   12fb4:	ldrsh	r2, [r1]
   12fb8:	ldrsh	r0, [r0]
   12fbc:	mov	r1, #0
   12fc0:	cmp	r0, r2
   12fc4:	mvnlt	r1, #0
   12fc8:	movwgt	r1, #1
   12fcc:	b	12fe0 <table_compare_int16@@Base+0x3c>
   12fd0:	cmp	r1, #0
   12fd4:	mvnne	r1, #0
   12fd8:	b	12fe0 <table_compare_int16@@Base+0x3c>
   12fdc:	mov	r1, #1
   12fe0:	mov	r0, r1
   12fe4:	bx	lr

00012fe8 <table_compare_uint16@@Base>:
   12fe8:	cmp	r0, #0
   12fec:	beq	13014 <table_compare_uint16@@Base+0x2c>
   12ff0:	cmp	r1, #0
   12ff4:	beq	13020 <table_compare_uint16@@Base+0x38>
   12ff8:	ldrh	r2, [r1]
   12ffc:	ldrh	r0, [r0]
   13000:	mov	r1, #0
   13004:	cmp	r0, r2
   13008:	mvncc	r1, #0
   1300c:	movwhi	r1, #1
   13010:	b	13024 <table_compare_uint16@@Base+0x3c>
   13014:	cmp	r1, #0
   13018:	mvnne	r1, #0
   1301c:	b	13024 <table_compare_uint16@@Base+0x3c>
   13020:	mov	r1, #1
   13024:	mov	r0, r1
   13028:	bx	lr

0001302c <table_compare_int32@@Base>:
   1302c:	cmp	r0, #0
   13030:	beq	13058 <table_compare_int32@@Base+0x2c>
   13034:	cmp	r1, #0
   13038:	beq	13064 <table_compare_int32@@Base+0x38>
   1303c:	ldr	r2, [r1]
   13040:	ldr	r0, [r0]
   13044:	mov	r1, #0
   13048:	cmp	r0, r2
   1304c:	mvnlt	r1, #0
   13050:	movwgt	r1, #1
   13054:	b	13068 <table_compare_int32@@Base+0x3c>
   13058:	cmp	r1, #0
   1305c:	mvnne	r1, #0
   13060:	b	13068 <table_compare_int32@@Base+0x3c>
   13064:	mov	r1, #1
   13068:	mov	r0, r1
   1306c:	bx	lr

00013070 <table_compare_uint32@@Base>:
   13070:	cmp	r0, #0
   13074:	beq	1309c <table_compare_uint32@@Base+0x2c>
   13078:	cmp	r1, #0
   1307c:	beq	130a8 <table_compare_uint32@@Base+0x38>
   13080:	ldr	r2, [r1]
   13084:	ldr	r0, [r0]
   13088:	mov	r1, #0
   1308c:	cmp	r0, r2
   13090:	mvncc	r1, #0
   13094:	movwhi	r1, #1
   13098:	b	130ac <table_compare_uint32@@Base+0x3c>
   1309c:	cmp	r1, #0
   130a0:	mvnne	r1, #0
   130a4:	b	130ac <table_compare_uint32@@Base+0x3c>
   130a8:	mov	r1, #1
   130ac:	mov	r0, r1
   130b0:	bx	lr

000130b4 <table_compare_int64@@Base>:
   130b4:	cmp	r0, #0
   130b8:	beq	13100 <table_compare_int64@@Base+0x4c>
   130bc:	cmp	r1, #0
   130c0:	beq	1310c <table_compare_int64@@Base+0x58>
   130c4:	push	{r5, r7, fp, lr}
   130c8:	add	fp, sp, #8
   130cc:	ldm	r0, {r0, r5}
   130d0:	ldm	r1, {r2, r7}
   130d4:	mov	r1, #0
   130d8:	subs	r3, r0, r2
   130dc:	sbcs	r3, r5, r7
   130e0:	movwlt	r1, #1
   130e4:	cmp	r1, #0
   130e8:	mvnne	r1, #0
   130ec:	subs	r0, r2, r0
   130f0:	sbcs	r0, r7, r5
   130f4:	movwlt	r1, #1
   130f8:	pop	{r5, r7, fp, lr}
   130fc:	b	13110 <table_compare_int64@@Base+0x5c>
   13100:	cmp	r1, #0
   13104:	mvnne	r1, #0
   13108:	b	13110 <table_compare_int64@@Base+0x5c>
   1310c:	mov	r1, #1
   13110:	mov	r0, r1
   13114:	bx	lr

00013118 <table_compare_uint64@@Base>:
   13118:	cmp	r0, #0
   1311c:	beq	13164 <table_compare_uint64@@Base+0x4c>
   13120:	cmp	r1, #0
   13124:	beq	13170 <table_compare_uint64@@Base+0x58>
   13128:	push	{r5, r7, fp, lr}
   1312c:	add	fp, sp, #8
   13130:	ldm	r0, {r0, r5}
   13134:	ldm	r1, {r2, r7}
   13138:	mov	r1, #0
   1313c:	subs	r3, r0, r2
   13140:	sbcs	r3, r5, r7
   13144:	movwcc	r1, #1
   13148:	cmp	r1, #0
   1314c:	mvnne	r1, #0
   13150:	subs	r0, r2, r0
   13154:	sbcs	r0, r7, r5
   13158:	movwcc	r1, #1
   1315c:	pop	{r5, r7, fp, lr}
   13160:	b	13174 <table_compare_uint64@@Base+0x5c>
   13164:	cmp	r1, #0
   13168:	mvnne	r1, #0
   1316c:	b	13174 <table_compare_uint64@@Base+0x5c>
   13170:	mov	r1, #1
   13174:	mov	r0, r1
   13178:	bx	lr

0001317c <table_compare_short@@Base>:
   1317c:	cmp	r0, #0
   13180:	beq	131a8 <table_compare_short@@Base+0x2c>
   13184:	cmp	r1, #0
   13188:	beq	131b4 <table_compare_short@@Base+0x38>
   1318c:	ldrsh	r2, [r1]
   13190:	ldrsh	r0, [r0]
   13194:	mov	r1, #0
   13198:	cmp	r0, r2
   1319c:	mvnlt	r1, #0
   131a0:	movwgt	r1, #1
   131a4:	b	131b8 <table_compare_short@@Base+0x3c>
   131a8:	cmp	r1, #0
   131ac:	mvnne	r1, #0
   131b0:	b	131b8 <table_compare_short@@Base+0x3c>
   131b4:	mov	r1, #1
   131b8:	mov	r0, r1
   131bc:	bx	lr

000131c0 <table_compare_ushort@@Base>:
   131c0:	cmp	r0, #0
   131c4:	beq	131ec <table_compare_ushort@@Base+0x2c>
   131c8:	cmp	r1, #0
   131cc:	beq	131f8 <table_compare_ushort@@Base+0x38>
   131d0:	ldrh	r2, [r1]
   131d4:	ldrh	r0, [r0]
   131d8:	mov	r1, #0
   131dc:	cmp	r0, r2
   131e0:	mvncc	r1, #0
   131e4:	movwhi	r1, #1
   131e8:	b	131fc <table_compare_ushort@@Base+0x3c>
   131ec:	cmp	r1, #0
   131f0:	mvnne	r1, #0
   131f4:	b	131fc <table_compare_ushort@@Base+0x3c>
   131f8:	mov	r1, #1
   131fc:	mov	r0, r1
   13200:	bx	lr

00013204 <table_compare_long@@Base>:
   13204:	cmp	r0, #0
   13208:	beq	13230 <table_compare_long@@Base+0x2c>
   1320c:	cmp	r1, #0
   13210:	beq	1323c <table_compare_long@@Base+0x38>
   13214:	ldr	r2, [r1]
   13218:	ldr	r0, [r0]
   1321c:	mov	r1, #0
   13220:	cmp	r0, r2
   13224:	mvnlt	r1, #0
   13228:	movwgt	r1, #1
   1322c:	b	13240 <table_compare_long@@Base+0x3c>
   13230:	cmp	r1, #0
   13234:	mvnne	r1, #0
   13238:	b	13240 <table_compare_long@@Base+0x3c>
   1323c:	mov	r1, #1
   13240:	mov	r0, r1
   13244:	bx	lr

00013248 <table_compare_ulong@@Base>:
   13248:	cmp	r0, #0
   1324c:	beq	13274 <table_compare_ulong@@Base+0x2c>
   13250:	cmp	r1, #0
   13254:	beq	13280 <table_compare_ulong@@Base+0x38>
   13258:	ldr	r2, [r1]
   1325c:	ldr	r0, [r0]
   13260:	mov	r1, #0
   13264:	cmp	r0, r2
   13268:	mvncc	r1, #0
   1326c:	movwhi	r1, #1
   13270:	b	13284 <table_compare_ulong@@Base+0x3c>
   13274:	cmp	r1, #0
   13278:	mvnne	r1, #0
   1327c:	b	13284 <table_compare_ulong@@Base+0x3c>
   13280:	mov	r1, #1
   13284:	mov	r0, r1
   13288:	bx	lr

0001328c <table_compare_llong@@Base>:
   1328c:	cmp	r0, #0
   13290:	beq	132d8 <table_compare_llong@@Base+0x4c>
   13294:	cmp	r1, #0
   13298:	beq	132e4 <table_compare_llong@@Base+0x58>
   1329c:	push	{r5, r7, fp, lr}
   132a0:	add	fp, sp, #8
   132a4:	ldm	r0, {r0, r5}
   132a8:	ldm	r1, {r2, r7}
   132ac:	mov	r1, #0
   132b0:	subs	r3, r0, r2
   132b4:	sbcs	r3, r5, r7
   132b8:	movwlt	r1, #1
   132bc:	cmp	r1, #0
   132c0:	mvnne	r1, #0
   132c4:	subs	r0, r2, r0
   132c8:	sbcs	r0, r7, r5
   132cc:	movwlt	r1, #1
   132d0:	pop	{r5, r7, fp, lr}
   132d4:	b	132e8 <table_compare_llong@@Base+0x5c>
   132d8:	cmp	r1, #0
   132dc:	mvnne	r1, #0
   132e0:	b	132e8 <table_compare_llong@@Base+0x5c>
   132e4:	mov	r1, #1
   132e8:	mov	r0, r1
   132ec:	bx	lr

000132f0 <table_compare_ullong@@Base>:
   132f0:	cmp	r0, #0
   132f4:	beq	1331c <table_compare_ullong@@Base+0x2c>
   132f8:	cmp	r1, #0
   132fc:	beq	13328 <table_compare_ullong@@Base+0x38>
   13300:	ldr	r2, [r1]
   13304:	ldr	r0, [r0]
   13308:	mov	r1, #0
   1330c:	cmp	r0, r2
   13310:	mvncc	r1, #0
   13314:	movwhi	r1, #1
   13318:	b	1332c <table_compare_ullong@@Base+0x3c>
   1331c:	cmp	r1, #0
   13320:	mvnne	r1, #0
   13324:	b	1332c <table_compare_ullong@@Base+0x3c>
   13328:	mov	r1, #1
   1332c:	mov	r0, r1
   13330:	bx	lr

00013334 <table_compare_float@@Base>:
   13334:	cmp	r0, #0
   13338:	beq	13364 <table_compare_float@@Base+0x30>
   1333c:	cmp	r1, #0
   13340:	beq	13370 <table_compare_float@@Base+0x3c>
   13344:	vldr	s0, [r1]
   13348:	vldr	s2, [r0]
   1334c:	mov	r1, #0
   13350:	vcmpe.f32	s2, s0
   13354:	vmrs	APSR_nzcv, fpscr
   13358:	mvnmi	r1, #0
   1335c:	movwgt	r1, #1
   13360:	b	13374 <table_compare_float@@Base+0x40>
   13364:	cmp	r1, #0
   13368:	mvnne	r1, #0
   1336c:	b	13374 <table_compare_float@@Base+0x40>
   13370:	mov	r1, #1
   13374:	mov	r0, r1
   13378:	bx	lr

0001337c <table_compare_double@@Base>:
   1337c:	cmp	r0, #0
   13380:	beq	133ac <table_compare_double@@Base+0x30>
   13384:	cmp	r1, #0
   13388:	beq	133b8 <table_compare_double@@Base+0x3c>
   1338c:	vldr	d16, [r1]
   13390:	vldr	d17, [r0]
   13394:	mov	r1, #0
   13398:	vcmpe.f64	d17, d16
   1339c:	vmrs	APSR_nzcv, fpscr
   133a0:	mvnmi	r1, #0
   133a4:	movwgt	r1, #1
   133a8:	b	133bc <table_compare_double@@Base+0x40>
   133ac:	cmp	r1, #0
   133b0:	mvnne	r1, #0
   133b4:	b	133bc <table_compare_double@@Base+0x40>
   133b8:	mov	r1, #1
   133bc:	mov	r0, r1
   133c0:	bx	lr

000133c4 <table_compare_ldouble@@Base>:
   133c4:	cmp	r0, #0
   133c8:	beq	133f4 <table_compare_ldouble@@Base+0x30>
   133cc:	cmp	r1, #0
   133d0:	beq	13400 <table_compare_ldouble@@Base+0x3c>
   133d4:	vldr	d16, [r1]
   133d8:	vldr	d17, [r0]
   133dc:	mov	r1, #0
   133e0:	vcmpe.f64	d17, d16
   133e4:	vmrs	APSR_nzcv, fpscr
   133e8:	mvnmi	r1, #0
   133ec:	movwgt	r1, #1
   133f0:	b	13404 <table_compare_ldouble@@Base+0x40>
   133f4:	cmp	r1, #0
   133f8:	mvnne	r1, #0
   133fc:	b	13404 <table_compare_ldouble@@Base+0x40>
   13400:	mov	r1, #1
   13404:	mov	r0, r1
   13408:	bx	lr

0001340c <table_compare_char@@Base>:
   1340c:	cmp	r0, #0
   13410:	beq	13438 <table_compare_char@@Base+0x2c>
   13414:	cmp	r1, #0
   13418:	beq	13444 <table_compare_char@@Base+0x38>
   1341c:	ldrb	r2, [r1]
   13420:	ldrb	r0, [r0]
   13424:	mov	r1, #0
   13428:	cmp	r0, r2
   1342c:	mvncc	r1, #0
   13430:	movwhi	r1, #1
   13434:	b	13448 <table_compare_char@@Base+0x3c>
   13438:	cmp	r1, #0
   1343c:	mvnne	r1, #0
   13440:	b	13448 <table_compare_char@@Base+0x3c>
   13444:	mov	r1, #1
   13448:	mov	r0, r1
   1344c:	bx	lr

00013450 <table_compare_uchar@@Base>:
   13450:	cmp	r0, #0
   13454:	beq	1347c <table_compare_uchar@@Base+0x2c>
   13458:	cmp	r1, #0
   1345c:	beq	13488 <table_compare_uchar@@Base+0x38>
   13460:	ldrb	r2, [r1]
   13464:	ldrb	r0, [r0]
   13468:	mov	r1, #0
   1346c:	cmp	r0, r2
   13470:	mvncc	r1, #0
   13474:	movwhi	r1, #1
   13478:	b	1348c <table_compare_uchar@@Base+0x3c>
   1347c:	cmp	r1, #0
   13480:	mvnne	r1, #0
   13484:	b	1348c <table_compare_uchar@@Base+0x3c>
   13488:	mov	r1, #1
   1348c:	mov	r0, r1
   13490:	bx	lr

00013494 <table_compare_string@@Base>:
   13494:	cmp	r0, #0
   13498:	beq	134a8 <table_compare_string@@Base+0x14>
   1349c:	cmp	r1, #0
   134a0:	beq	134b4 <table_compare_string@@Base+0x20>
   134a4:	b	11e90 <strcmp@plt>
   134a8:	cmp	r1, #0
   134ac:	mvnne	r1, #0
   134b0:	b	134b8 <table_compare_string@@Base+0x24>
   134b4:	mov	r1, #1
   134b8:	mov	r0, r1
   134bc:	bx	lr

000134c0 <table_compare_ptr@@Base>:
   134c0:	cmp	r0, r1
   134c4:	mov	r2, #0
   134c8:	mvncc	r2, #0
   134cc:	movwhi	r2, #1
   134d0:	mov	r0, r2
   134d4:	bx	lr

000134d8 <table_get_default_compare_function_for_data_type@@Base>:
   134d8:	cmp	r0, #23
   134dc:	movhi	r0, #0
   134e0:	bxhi	lr
   134e4:	movw	r1, #19364	; 0x4ba4
   134e8:	movt	r1, #1
   134ec:	ldr	r0, [r1, r0, lsl #2]
   134f0:	bx	lr

000134f4 <table_get@@Base>:
   134f4:	push	{fp, lr}
   134f8:	mov	fp, sp
   134fc:	bl	140a8 <table_get_cell_ptr@@Base>
   13500:	ldr	r0, [r0]
   13504:	pop	{fp, pc}

00013508 <table_get_bool@@Base>:
   13508:	push	{fp, lr}
   1350c:	mov	fp, sp
   13510:	bl	140a8 <table_get_cell_ptr@@Base>
   13514:	ldr	r0, [r0]
   13518:	ldrb	r0, [r0]
   1351c:	pop	{fp, pc}

00013520 <table_get_int@@Base>:
   13520:	push	{fp, lr}
   13524:	mov	fp, sp
   13528:	bl	140a8 <table_get_cell_ptr@@Base>
   1352c:	ldr	r0, [r0]
   13530:	ldr	r0, [r0]
   13534:	pop	{fp, pc}

00013538 <table_get_uint@@Base>:
   13538:	push	{fp, lr}
   1353c:	mov	fp, sp
   13540:	bl	140a8 <table_get_cell_ptr@@Base>
   13544:	ldr	r0, [r0]
   13548:	ldr	r0, [r0]
   1354c:	pop	{fp, pc}

00013550 <table_get_int8@@Base>:
   13550:	push	{fp, lr}
   13554:	mov	fp, sp
   13558:	bl	140a8 <table_get_cell_ptr@@Base>
   1355c:	ldr	r0, [r0]
   13560:	ldrsb	r0, [r0]
   13564:	pop	{fp, pc}

00013568 <table_get_uint8@@Base>:
   13568:	push	{fp, lr}
   1356c:	mov	fp, sp
   13570:	bl	140a8 <table_get_cell_ptr@@Base>
   13574:	ldr	r0, [r0]
   13578:	ldrb	r0, [r0]
   1357c:	pop	{fp, pc}

00013580 <table_get_int16@@Base>:
   13580:	push	{fp, lr}
   13584:	mov	fp, sp
   13588:	bl	140a8 <table_get_cell_ptr@@Base>
   1358c:	ldr	r0, [r0]
   13590:	ldrsh	r0, [r0]
   13594:	pop	{fp, pc}

00013598 <table_get_uint16@@Base>:
   13598:	push	{fp, lr}
   1359c:	mov	fp, sp
   135a0:	bl	140a8 <table_get_cell_ptr@@Base>
   135a4:	ldr	r0, [r0]
   135a8:	ldrh	r0, [r0]
   135ac:	pop	{fp, pc}

000135b0 <table_get_int32@@Base>:
   135b0:	push	{fp, lr}
   135b4:	mov	fp, sp
   135b8:	bl	140a8 <table_get_cell_ptr@@Base>
   135bc:	ldr	r0, [r0]
   135c0:	ldr	r0, [r0]
   135c4:	pop	{fp, pc}

000135c8 <table_get_uint32@@Base>:
   135c8:	push	{fp, lr}
   135cc:	mov	fp, sp
   135d0:	bl	140a8 <table_get_cell_ptr@@Base>
   135d4:	ldr	r0, [r0]
   135d8:	ldr	r0, [r0]
   135dc:	pop	{fp, pc}

000135e0 <table_get_int64@@Base>:
   135e0:	push	{fp, lr}
   135e4:	mov	fp, sp
   135e8:	bl	140a8 <table_get_cell_ptr@@Base>
   135ec:	ldr	r0, [r0]
   135f0:	ldrd	r0, [r0]
   135f4:	pop	{fp, pc}

000135f8 <table_get_uint64@@Base>:
   135f8:	push	{fp, lr}
   135fc:	mov	fp, sp
   13600:	bl	140a8 <table_get_cell_ptr@@Base>
   13604:	ldr	r0, [r0]
   13608:	ldrd	r0, [r0]
   1360c:	pop	{fp, pc}

00013610 <table_get_short@@Base>:
   13610:	push	{fp, lr}
   13614:	mov	fp, sp
   13618:	bl	140a8 <table_get_cell_ptr@@Base>
   1361c:	ldr	r0, [r0]
   13620:	ldrsh	r0, [r0]
   13624:	pop	{fp, pc}

00013628 <table_get_ushort@@Base>:
   13628:	push	{fp, lr}
   1362c:	mov	fp, sp
   13630:	bl	140a8 <table_get_cell_ptr@@Base>
   13634:	ldr	r0, [r0]
   13638:	ldrh	r0, [r0]
   1363c:	pop	{fp, pc}

00013640 <table_get_long@@Base>:
   13640:	push	{fp, lr}
   13644:	mov	fp, sp
   13648:	bl	140a8 <table_get_cell_ptr@@Base>
   1364c:	ldr	r0, [r0]
   13650:	ldr	r0, [r0]
   13654:	pop	{fp, pc}

00013658 <table_get_ulong@@Base>:
   13658:	push	{fp, lr}
   1365c:	mov	fp, sp
   13660:	bl	140a8 <table_get_cell_ptr@@Base>
   13664:	ldr	r0, [r0]
   13668:	ldr	r0, [r0]
   1366c:	pop	{fp, pc}

00013670 <table_get_llong@@Base>:
   13670:	push	{fp, lr}
   13674:	mov	fp, sp
   13678:	bl	140a8 <table_get_cell_ptr@@Base>
   1367c:	ldr	r0, [r0]
   13680:	ldrd	r0, [r0]
   13684:	pop	{fp, pc}

00013688 <table_get_ullong@@Base>:
   13688:	push	{fp, lr}
   1368c:	mov	fp, sp
   13690:	bl	140a8 <table_get_cell_ptr@@Base>
   13694:	ldr	r0, [r0]
   13698:	ldrd	r0, [r0]
   1369c:	pop	{fp, pc}

000136a0 <table_get_float@@Base>:
   136a0:	push	{fp, lr}
   136a4:	mov	fp, sp
   136a8:	bl	140a8 <table_get_cell_ptr@@Base>
   136ac:	ldr	r0, [r0]
   136b0:	vldr	s0, [r0]
   136b4:	pop	{fp, pc}

000136b8 <table_get_double@@Base>:
   136b8:	push	{fp, lr}
   136bc:	mov	fp, sp
   136c0:	bl	140a8 <table_get_cell_ptr@@Base>
   136c4:	ldr	r0, [r0]
   136c8:	vldr	d0, [r0]
   136cc:	pop	{fp, pc}

000136d0 <table_get_ldouble@@Base>:
   136d0:	push	{fp, lr}
   136d4:	mov	fp, sp
   136d8:	bl	140a8 <table_get_cell_ptr@@Base>
   136dc:	ldr	r0, [r0]
   136e0:	vldr	d0, [r0]
   136e4:	pop	{fp, pc}

000136e8 <table_get_char@@Base>:
   136e8:	push	{fp, lr}
   136ec:	mov	fp, sp
   136f0:	bl	140a8 <table_get_cell_ptr@@Base>
   136f4:	ldr	r0, [r0]
   136f8:	ldrb	r0, [r0]
   136fc:	pop	{fp, pc}

00013700 <table_get_uchar@@Base>:
   13700:	push	{fp, lr}
   13704:	mov	fp, sp
   13708:	bl	140a8 <table_get_cell_ptr@@Base>
   1370c:	ldr	r0, [r0]
   13710:	ldrb	r0, [r0]
   13714:	pop	{fp, pc}

00013718 <table_get_string@@Base>:
   13718:	push	{fp, lr}
   1371c:	mov	fp, sp
   13720:	bl	140a8 <table_get_cell_ptr@@Base>
   13724:	ldr	r0, [r0]
   13728:	pop	{fp, pc}

0001372c <table_get_ptr@@Base>:
   1372c:	push	{fp, lr}
   13730:	mov	fp, sp
   13734:	bl	140a8 <table_get_cell_ptr@@Base>
   13738:	ldr	r0, [r0]
   1373c:	pop	{fp, pc}

00013740 <table_row_init@@Base>:
   13740:	push	{r4, r5, fp, lr}
   13744:	add	fp, sp, #8
   13748:	mov	r4, r1
   1374c:	ldr	r1, [r0, #12]
   13750:	ldr	r5, [r0, #16]
   13754:	lsl	r0, r1, #2
   13758:	bl	11ecc <malloc@plt>
   1375c:	str	r0, [r5, r4, lsl #2]
   13760:	pop	{r4, r5, fp, pc}

00013764 <table_get_row_ptr@@Base>:
   13764:	ldr	r0, [r0, #16]
   13768:	add	r0, r0, r1, lsl #2
   1376c:	bx	lr

00013770 <table_row_destroy@@Base>:
   13770:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13774:	add	fp, sp, #24
   13778:	mov	r4, r1
   1377c:	mov	r5, r0
   13780:	bl	12b14 <table_get_column_length@@Base>
   13784:	ldr	r8, [r5, #16]
   13788:	cmp	r0, #1
   1378c:	blt	137b4 <table_row_destroy@@Base+0x44>
   13790:	mov	r6, r0
   13794:	mov	r7, #0
   13798:	mov	r0, r5
   1379c:	mov	r1, r4
   137a0:	mov	r2, r7
   137a4:	bl	140c4 <table_cell_destroy@@Base>
   137a8:	add	r7, r7, #1
   137ac:	cmp	r6, r7
   137b0:	bne	13798 <table_row_destroy@@Base+0x28>
   137b4:	ldr	r0, [r8, r4, lsl #2]
   137b8:	cmp	r0, #0
   137bc:	beq	137c8 <table_row_destroy@@Base+0x58>
   137c0:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   137c4:	b	11ea8 <free@plt>
   137c8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000137cc <table_get_row_length@@Base>:
   137cc:	ldr	r0, [r0, #20]
   137d0:	bx	lr

000137d4 <table_add_row@@Base>:
   137d4:	push	{r4, r5, r6, r7, fp, lr}
   137d8:	add	fp, sp, #16
   137dc:	ldr	r5, [r0, #20]
   137e0:	ldr	r1, [r0, #24]
   137e4:	mov	r4, r0
   137e8:	udiv	r0, r5, r1
   137ec:	mls	r0, r0, r1, r5
   137f0:	cmp	r0, #0
   137f4:	bne	13818 <table_add_row@@Base+0x44>
   137f8:	ldr	r2, [r4, #28]
   137fc:	ldr	r0, [r4, #16]
   13800:	add	r1, r2, r1
   13804:	str	r1, [r4, #28]
   13808:	lsl	r1, r1, #2
   1380c:	bl	11eb4 <realloc@plt>
   13810:	str	r0, [r4, #16]
   13814:	ldr	r5, [r4, #20]
   13818:	mov	r0, r4
   1381c:	bl	12b14 <table_get_column_length@@Base>
   13820:	mov	r6, r0
   13824:	ldr	r0, [r4, #12]
   13828:	ldr	r7, [r4, #16]
   1382c:	lsl	r0, r0, #2
   13830:	bl	11ecc <malloc@plt>
   13834:	cmp	r6, #1
   13838:	str	r0, [r7, r5, lsl #2]
   1383c:	blt	13860 <table_add_row@@Base+0x8c>
   13840:	mov	r7, #0
   13844:	mov	r0, r4
   13848:	mov	r1, r5
   1384c:	mov	r2, r7
   13850:	bl	14088 <table_cell_init@@Base>
   13854:	add	r7, r7, #1
   13858:	cmp	r6, r7
   1385c:	bne	13844 <table_add_row@@Base+0x70>
   13860:	ldr	r1, [r4, #20]
   13864:	mov	r0, r4
   13868:	mvn	r2, #0
   1386c:	mov	r3, #2
   13870:	bl	12a20 <table_notify@@Base>
   13874:	ldr	r0, [r4, #20]
   13878:	add	r1, r0, #1
   1387c:	str	r1, [r4, #20]
   13880:	pop	{r4, r5, r6, r7, fp, pc}

00013884 <table_remove_row@@Base>:
   13884:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13888:	add	fp, sp, #24
   1388c:	ldr	r8, [r0, #20]
   13890:	mov	r4, r1
   13894:	mov	r5, r0
   13898:	bl	12b14 <table_get_column_length@@Base>
   1389c:	cmp	r0, #1
   138a0:	blt	138ec <table_remove_row@@Base+0x68>
   138a4:	mov	r6, r0
   138a8:	mov	r7, #0
   138ac:	mov	r0, r5
   138b0:	mov	r1, r7
   138b4:	bl	12b8c <table_get_column_data_type@@Base>
   138b8:	cmp	r0, #23
   138bc:	beq	138e0 <table_remove_row@@Base+0x5c>
   138c0:	mov	r0, r5
   138c4:	mov	r1, r4
   138c8:	mov	r2, r7
   138cc:	bl	140a8 <table_get_cell_ptr@@Base>
   138d0:	ldr	r0, [r0]
   138d4:	cmp	r0, #0
   138d8:	beq	138e0 <table_remove_row@@Base+0x5c>
   138dc:	bl	11ea8 <free@plt>
   138e0:	add	r7, r7, #1
   138e4:	cmp	r6, r7
   138e8:	bne	138ac <table_remove_row@@Base+0x28>
   138ec:	ldr	r0, [r5, #16]
   138f0:	ldr	r0, [r0, r4, lsl #2]
   138f4:	cmp	r0, #0
   138f8:	beq	13900 <table_remove_row@@Base+0x7c>
   138fc:	bl	11ea8 <free@plt>
   13900:	sub	r0, r8, #1
   13904:	cmp	r0, r4
   13908:	ble	1392c <table_remove_row@@Base+0xa8>
   1390c:	mov	r1, r4
   13910:	ldr	r2, [r5, #16]
   13914:	add	r3, r2, r1, lsl #2
   13918:	ldr	r3, [r3, #4]
   1391c:	str	r3, [r2, r1, lsl #2]
   13920:	add	r1, r1, #1
   13924:	cmp	r0, r1
   13928:	bne	13910 <table_remove_row@@Base+0x8c>
   1392c:	ldr	r0, [r5, #20]
   13930:	ldr	r1, [r5, #24]
   13934:	sub	r0, r0, #1
   13938:	udiv	r2, r0, r1
   1393c:	str	r0, [r5, #20]
   13940:	mls	r0, r2, r1, r0
   13944:	cmp	r0, #0
   13948:	bne	13968 <table_remove_row@@Base+0xe4>
   1394c:	ldr	r2, [r5, #28]
   13950:	ldr	r0, [r5, #16]
   13954:	sub	r1, r2, r1
   13958:	str	r1, [r5, #28]
   1395c:	lsl	r1, r1, #2
   13960:	bl	11eb4 <realloc@plt>
   13964:	str	r0, [r5, #16]
   13968:	mov	r0, r5
   1396c:	mov	r1, r4
   13970:	mvn	r2, #0
   13974:	mov	r3, #4
   13978:	bl	12a20 <table_notify@@Base>
   1397c:	mov	r0, #0
   13980:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00013984 <table_set_row_ptr@@Base>:
   13984:	ldr	r2, [r2]
   13988:	ldr	r0, [r0, #16]
   1398c:	str	r2, [r0, r1, lsl #2]
   13990:	bx	lr

00013994 <table_set@@Base>:
   13994:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   13998:	add	fp, sp, #24
   1399c:	mov	r8, r3
   139a0:	mov	r4, r2
   139a4:	mov	r9, r1
   139a8:	mov	r6, r0
   139ac:	bl	140a8 <table_get_cell_ptr@@Base>
   139b0:	mov	r5, r0
   139b4:	mov	r0, r6
   139b8:	mov	r1, r4
   139bc:	bl	12aec <table_get_col_ptr@@Base>
   139c0:	ldr	r1, [fp, #8]
   139c4:	mvn	r7, #0
   139c8:	cmp	r1, #23
   139cc:	bhi	13c8c <table_set@@Base+0x2f8>
   139d0:	add	r2, pc, #0
   139d4:	ldr	pc, [r2, r1, lsl #2]
   139d8:	andeq	r3, r1, r8, lsr sl
   139dc:	andeq	r3, r1, r8, asr #20
   139e0:	andeq	r3, r1, r8, asr sl
   139e4:	andeq	r3, r1, r8, ror #20
   139e8:	andeq	r3, r1, r8, ror sl
   139ec:	andeq	r3, r1, r8, lsl #21
   139f0:	muleq	r1, r8, sl
   139f4:	andeq	r3, r1, r8, lsr #21
   139f8:			; <UNDEFINED> instruction: 0x00013ab8
   139fc:	andeq	r3, r1, r8, asr #21
   13a00:	ldrdeq	r3, [r1], -r8
   13a04:	andeq	r3, r1, r8, ror #21
   13a08:	andeq	r3, r1, r0, lsr #22
   13a0c:	andeq	r3, r1, r0, lsr fp
   13a10:	andeq	r3, r1, r0, asr #22
   13a14:	andeq	r3, r1, r0, asr fp
   13a18:	andeq	r3, r1, r0, ror #22
   13a1c:	muleq	r1, r4, fp
   13a20:	andeq	r3, r1, r4, lsr #23
   13a24:	andeq	r3, r1, r4, ror #23
   13a28:	strdeq	r3, [r1], -r4
   13a2c:	andeq	r3, r1, r4, lsl #24
   13a30:	andeq	r3, r1, r0, asr #24
   13a34:	muleq	r1, r4, ip
   13a38:	ldr	r0, [r0, #4]
   13a3c:	cmp	r0, #0
   13a40:	bne	13c8c <table_set@@Base+0x2f8>
   13a44:	b	13b6c <table_set@@Base+0x1d8>
   13a48:	ldr	r0, [r0, #4]
   13a4c:	cmp	r0, #1
   13a50:	beq	13b6c <table_set@@Base+0x1d8>
   13a54:	b	13c8c <table_set@@Base+0x2f8>
   13a58:	ldr	r0, [r0, #4]
   13a5c:	cmp	r0, #2
   13a60:	beq	13c4c <table_set@@Base+0x2b8>
   13a64:	b	13c8c <table_set@@Base+0x2f8>
   13a68:	ldr	r0, [r0, #4]
   13a6c:	cmp	r0, #3
   13a70:	beq	13c4c <table_set@@Base+0x2b8>
   13a74:	b	13c8c <table_set@@Base+0x2f8>
   13a78:	ldr	r0, [r0, #4]
   13a7c:	cmp	r0, #4
   13a80:	beq	13af4 <table_set@@Base+0x160>
   13a84:	b	13c8c <table_set@@Base+0x2f8>
   13a88:	ldr	r0, [r0, #4]
   13a8c:	cmp	r0, #5
   13a90:	beq	13af4 <table_set@@Base+0x160>
   13a94:	b	13c8c <table_set@@Base+0x2f8>
   13a98:	ldr	r0, [r0, #4]
   13a9c:	cmp	r0, #6
   13aa0:	beq	13b6c <table_set@@Base+0x1d8>
   13aa4:	b	13c8c <table_set@@Base+0x2f8>
   13aa8:	ldr	r0, [r0, #4]
   13aac:	cmp	r0, #7
   13ab0:	beq	13b6c <table_set@@Base+0x1d8>
   13ab4:	b	13c8c <table_set@@Base+0x2f8>
   13ab8:	ldr	r0, [r0, #4]
   13abc:	cmp	r0, #8
   13ac0:	beq	13bb0 <table_set@@Base+0x21c>
   13ac4:	b	13c8c <table_set@@Base+0x2f8>
   13ac8:	ldr	r0, [r0, #4]
   13acc:	cmp	r0, #9
   13ad0:	beq	13bb0 <table_set@@Base+0x21c>
   13ad4:	b	13c8c <table_set@@Base+0x2f8>
   13ad8:	ldr	r0, [r0, #4]
   13adc:	cmp	r0, #10
   13ae0:	beq	13af4 <table_set@@Base+0x160>
   13ae4:	b	13c8c <table_set@@Base+0x2f8>
   13ae8:	ldr	r0, [r0, #4]
   13aec:	cmp	r0, #11
   13af0:	bne	13c8c <table_set@@Base+0x2f8>
   13af4:	ldr	r0, [r5]
   13af8:	cmp	r0, #0
   13afc:	bne	13b14 <table_set@@Base+0x180>
   13b00:	mov	r0, #2
   13b04:	bl	11ecc <malloc@plt>
   13b08:	cmp	r0, #0
   13b0c:	str	r0, [r5]
   13b10:	beq	13c8c <table_set@@Base+0x2f8>
   13b14:	ldrh	r1, [r8]
   13b18:	strh	r1, [r0]
   13b1c:	b	13c74 <table_set@@Base+0x2e0>
   13b20:	ldr	r0, [r0, #4]
   13b24:	cmp	r0, #12
   13b28:	beq	13b6c <table_set@@Base+0x1d8>
   13b2c:	b	13c8c <table_set@@Base+0x2f8>
   13b30:	ldr	r0, [r0, #4]
   13b34:	cmp	r0, #13
   13b38:	beq	13b6c <table_set@@Base+0x1d8>
   13b3c:	b	13c8c <table_set@@Base+0x2f8>
   13b40:	ldr	r0, [r0, #4]
   13b44:	cmp	r0, #14
   13b48:	beq	13bb0 <table_set@@Base+0x21c>
   13b4c:	b	13c8c <table_set@@Base+0x2f8>
   13b50:	ldr	r0, [r0, #4]
   13b54:	cmp	r0, #15
   13b58:	beq	13bb0 <table_set@@Base+0x21c>
   13b5c:	b	13c8c <table_set@@Base+0x2f8>
   13b60:	ldr	r0, [r0, #4]
   13b64:	cmp	r0, #16
   13b68:	bne	13c8c <table_set@@Base+0x2f8>
   13b6c:	ldr	r0, [r5]
   13b70:	cmp	r0, #0
   13b74:	bne	13b8c <table_set@@Base+0x1f8>
   13b78:	mov	r0, #4
   13b7c:	bl	11ecc <malloc@plt>
   13b80:	cmp	r0, #0
   13b84:	str	r0, [r5]
   13b88:	beq	13c8c <table_set@@Base+0x2f8>
   13b8c:	ldr	r1, [r8]
   13b90:	b	13bdc <table_set@@Base+0x248>
   13b94:	ldr	r0, [r0, #4]
   13b98:	cmp	r0, #17
   13b9c:	beq	13bb0 <table_set@@Base+0x21c>
   13ba0:	b	13c8c <table_set@@Base+0x2f8>
   13ba4:	ldr	r0, [r0, #4]
   13ba8:	cmp	r0, #18
   13bac:	bne	13c8c <table_set@@Base+0x2f8>
   13bb0:	ldr	r0, [r5]
   13bb4:	cmp	r0, #0
   13bb8:	bne	13bd0 <table_set@@Base+0x23c>
   13bbc:	mov	r0, #8
   13bc0:	bl	11ecc <malloc@plt>
   13bc4:	cmp	r0, #0
   13bc8:	str	r0, [r5]
   13bcc:	beq	13c8c <table_set@@Base+0x2f8>
   13bd0:	ldr	r1, [r8]
   13bd4:	ldr	r2, [r8, #4]
   13bd8:	str	r2, [r0, #4]
   13bdc:	str	r1, [r0]
   13be0:	b	13c74 <table_set@@Base+0x2e0>
   13be4:	ldr	r0, [r0, #4]
   13be8:	cmp	r0, #19
   13bec:	beq	13c4c <table_set@@Base+0x2b8>
   13bf0:	b	13c8c <table_set@@Base+0x2f8>
   13bf4:	ldr	r0, [r0, #4]
   13bf8:	cmp	r0, #20
   13bfc:	beq	13c4c <table_set@@Base+0x2b8>
   13c00:	b	13c8c <table_set@@Base+0x2f8>
   13c04:	ldr	r0, [r0, #4]
   13c08:	cmp	r0, #21
   13c0c:	bne	13c8c <table_set@@Base+0x2f8>
   13c10:	mov	r0, r8
   13c14:	bl	11ef0 <strlen@plt>
   13c18:	ldr	r2, [r5]
   13c1c:	add	r1, r0, #1
   13c20:	mov	r0, r2
   13c24:	bl	11eb4 <realloc@plt>
   13c28:	cmp	r0, #0
   13c2c:	str	r0, [r5]
   13c30:	beq	13c8c <table_set@@Base+0x2f8>
   13c34:	mov	r1, r8
   13c38:	bl	11ec0 <strcpy@plt>
   13c3c:	b	13c74 <table_set@@Base+0x2e0>
   13c40:	ldr	r0, [r0, #4]
   13c44:	cmp	r0, #22
   13c48:	bne	13c8c <table_set@@Base+0x2f8>
   13c4c:	ldr	r0, [r5]
   13c50:	cmp	r0, #0
   13c54:	bne	13c6c <table_set@@Base+0x2d8>
   13c58:	mov	r0, #1
   13c5c:	bl	11ecc <malloc@plt>
   13c60:	cmp	r0, #0
   13c64:	str	r0, [r5]
   13c68:	beq	13c8c <table_set@@Base+0x2f8>
   13c6c:	ldrb	r1, [r8]
   13c70:	strb	r1, [r0]
   13c74:	mov	r0, r6
   13c78:	mov	r1, r9
   13c7c:	mov	r2, r4
   13c80:	mov	r3, #1
   13c84:	bl	12a20 <table_notify@@Base>
   13c88:	mov	r7, #0
   13c8c:	mov	r0, r7
   13c90:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   13c94:	ldr	r0, [r0, #4]
   13c98:	cmp	r0, #23
   13c9c:	bne	13c8c <table_set@@Base+0x2f8>
   13ca0:	str	r8, [r5]
   13ca4:	b	13c74 <table_set@@Base+0x2e0>

00013ca8 <table_set_bool@@Base>:
   13ca8:	push	{fp, lr}
   13cac:	mov	fp, sp
   13cb0:	sub	sp, sp, #8
   13cb4:	strb	r3, [fp, #-1]
   13cb8:	mov	r3, #22
   13cbc:	str	r3, [sp]
   13cc0:	sub	r3, fp, #1
   13cc4:	bl	13994 <table_set@@Base>
   13cc8:	mov	sp, fp
   13ccc:	pop	{fp, pc}

00013cd0 <table_set_int@@Base>:
   13cd0:	push	{fp, lr}
   13cd4:	mov	fp, sp
   13cd8:	sub	sp, sp, #8
   13cdc:	str	r3, [sp, #4]
   13ce0:	mov	r3, #0
   13ce4:	str	r3, [sp]
   13ce8:	add	r3, sp, #4
   13cec:	bl	13994 <table_set@@Base>
   13cf0:	mov	sp, fp
   13cf4:	pop	{fp, pc}

00013cf8 <table_set_uint@@Base>:
   13cf8:	push	{fp, lr}
   13cfc:	mov	fp, sp
   13d00:	sub	sp, sp, #8
   13d04:	str	r3, [sp, #4]
   13d08:	mov	r3, #1
   13d0c:	str	r3, [sp]
   13d10:	add	r3, sp, #4
   13d14:	bl	13994 <table_set@@Base>
   13d18:	mov	sp, fp
   13d1c:	pop	{fp, pc}

00013d20 <table_set_int8@@Base>:
   13d20:	push	{fp, lr}
   13d24:	mov	fp, sp
   13d28:	sub	sp, sp, #8
   13d2c:	strb	r3, [fp, #-1]
   13d30:	mov	r3, #2
   13d34:	str	r3, [sp]
   13d38:	sub	r3, fp, #1
   13d3c:	bl	13994 <table_set@@Base>
   13d40:	mov	sp, fp
   13d44:	pop	{fp, pc}

00013d48 <table_set_uint8@@Base>:
   13d48:	push	{fp, lr}
   13d4c:	mov	fp, sp
   13d50:	sub	sp, sp, #8
   13d54:	strb	r3, [fp, #-1]
   13d58:	mov	r3, #3
   13d5c:	str	r3, [sp]
   13d60:	sub	r3, fp, #1
   13d64:	bl	13994 <table_set@@Base>
   13d68:	mov	sp, fp
   13d6c:	pop	{fp, pc}

00013d70 <table_set_int16@@Base>:
   13d70:	push	{fp, lr}
   13d74:	mov	fp, sp
   13d78:	sub	sp, sp, #8
   13d7c:	strh	r3, [fp, #-2]
   13d80:	mov	r3, #4
   13d84:	str	r3, [sp]
   13d88:	sub	r3, fp, #2
   13d8c:	bl	13994 <table_set@@Base>
   13d90:	mov	sp, fp
   13d94:	pop	{fp, pc}

00013d98 <table_set_uint16@@Base>:
   13d98:	push	{fp, lr}
   13d9c:	mov	fp, sp
   13da0:	sub	sp, sp, #8
   13da4:	strh	r3, [fp, #-2]
   13da8:	mov	r3, #5
   13dac:	str	r3, [sp]
   13db0:	sub	r3, fp, #2
   13db4:	bl	13994 <table_set@@Base>
   13db8:	mov	sp, fp
   13dbc:	pop	{fp, pc}

00013dc0 <table_set_int32@@Base>:
   13dc0:	push	{fp, lr}
   13dc4:	mov	fp, sp
   13dc8:	sub	sp, sp, #8
   13dcc:	str	r3, [sp, #4]
   13dd0:	mov	r3, #6
   13dd4:	str	r3, [sp]
   13dd8:	add	r3, sp, #4
   13ddc:	bl	13994 <table_set@@Base>
   13de0:	mov	sp, fp
   13de4:	pop	{fp, pc}

00013de8 <table_set_uint32@@Base>:
   13de8:	push	{fp, lr}
   13dec:	mov	fp, sp
   13df0:	sub	sp, sp, #8
   13df4:	str	r3, [sp, #4]
   13df8:	mov	r3, #7
   13dfc:	str	r3, [sp]
   13e00:	add	r3, sp, #4
   13e04:	bl	13994 <table_set@@Base>
   13e08:	mov	sp, fp
   13e0c:	pop	{fp, pc}

00013e10 <table_set_int64@@Base>:
   13e10:	push	{fp, lr}
   13e14:	mov	fp, sp
   13e18:	sub	sp, sp, #16
   13e1c:	ldr	r3, [fp, #12]
   13e20:	str	r3, [sp, #12]
   13e24:	ldr	r3, [fp, #8]
   13e28:	str	r3, [sp, #8]
   13e2c:	mov	r3, #8
   13e30:	str	r3, [sp]
   13e34:	add	r3, sp, #8
   13e38:	bl	13994 <table_set@@Base>
   13e3c:	mov	sp, fp
   13e40:	pop	{fp, pc}

00013e44 <table_set_uint64@@Base>:
   13e44:	push	{fp, lr}
   13e48:	mov	fp, sp
   13e4c:	sub	sp, sp, #16
   13e50:	ldr	r3, [fp, #12]
   13e54:	str	r3, [sp, #12]
   13e58:	ldr	r3, [fp, #8]
   13e5c:	str	r3, [sp, #8]
   13e60:	mov	r3, #9
   13e64:	str	r3, [sp]
   13e68:	add	r3, sp, #8
   13e6c:	bl	13994 <table_set@@Base>
   13e70:	mov	sp, fp
   13e74:	pop	{fp, pc}

00013e78 <table_set_short@@Base>:
   13e78:	push	{fp, lr}
   13e7c:	mov	fp, sp
   13e80:	sub	sp, sp, #8
   13e84:	strh	r3, [fp, #-2]
   13e88:	mov	r3, #10
   13e8c:	str	r3, [sp]
   13e90:	sub	r3, fp, #2
   13e94:	bl	13994 <table_set@@Base>
   13e98:	mov	sp, fp
   13e9c:	pop	{fp, pc}

00013ea0 <table_set_ushort@@Base>:
   13ea0:	push	{fp, lr}
   13ea4:	mov	fp, sp
   13ea8:	sub	sp, sp, #8
   13eac:	strh	r3, [fp, #-2]
   13eb0:	mov	r3, #11
   13eb4:	str	r3, [sp]
   13eb8:	sub	r3, fp, #2
   13ebc:	bl	13994 <table_set@@Base>
   13ec0:	mov	sp, fp
   13ec4:	pop	{fp, pc}

00013ec8 <table_set_long@@Base>:
   13ec8:	push	{fp, lr}
   13ecc:	mov	fp, sp
   13ed0:	sub	sp, sp, #8
   13ed4:	str	r3, [sp, #4]
   13ed8:	mov	r3, #12
   13edc:	str	r3, [sp]
   13ee0:	add	r3, sp, #4
   13ee4:	bl	13994 <table_set@@Base>
   13ee8:	mov	sp, fp
   13eec:	pop	{fp, pc}

00013ef0 <table_set_ulong@@Base>:
   13ef0:	push	{fp, lr}
   13ef4:	mov	fp, sp
   13ef8:	sub	sp, sp, #8
   13efc:	str	r3, [sp, #4]
   13f00:	mov	r3, #13
   13f04:	str	r3, [sp]
   13f08:	add	r3, sp, #4
   13f0c:	bl	13994 <table_set@@Base>
   13f10:	mov	sp, fp
   13f14:	pop	{fp, pc}

00013f18 <table_set_llong@@Base>:
   13f18:	push	{fp, lr}
   13f1c:	mov	fp, sp
   13f20:	sub	sp, sp, #16
   13f24:	ldr	r3, [fp, #12]
   13f28:	str	r3, [sp, #12]
   13f2c:	ldr	r3, [fp, #8]
   13f30:	str	r3, [sp, #8]
   13f34:	mov	r3, #14
   13f38:	str	r3, [sp]
   13f3c:	add	r3, sp, #8
   13f40:	bl	13994 <table_set@@Base>
   13f44:	mov	sp, fp
   13f48:	pop	{fp, pc}

00013f4c <table_set_ullong@@Base>:
   13f4c:	push	{fp, lr}
   13f50:	mov	fp, sp
   13f54:	sub	sp, sp, #16
   13f58:	ldr	r3, [fp, #12]
   13f5c:	str	r3, [sp, #12]
   13f60:	ldr	r3, [fp, #8]
   13f64:	str	r3, [sp, #8]
   13f68:	mov	r3, #15
   13f6c:	str	r3, [sp]
   13f70:	add	r3, sp, #8
   13f74:	bl	13994 <table_set@@Base>
   13f78:	mov	sp, fp
   13f7c:	pop	{fp, pc}

00013f80 <table_set_float@@Base>:
   13f80:	push	{fp, lr}
   13f84:	mov	fp, sp
   13f88:	sub	sp, sp, #8
   13f8c:	mov	r3, #16
   13f90:	vstr	s0, [sp, #4]
   13f94:	str	r3, [sp]
   13f98:	add	r3, sp, #4
   13f9c:	bl	13994 <table_set@@Base>
   13fa0:	mov	sp, fp
   13fa4:	pop	{fp, pc}

00013fa8 <table_set_double@@Base>:
   13fa8:	push	{fp, lr}
   13fac:	mov	fp, sp
   13fb0:	sub	sp, sp, #16
   13fb4:	mov	r3, #17
   13fb8:	vstr	d0, [sp, #8]
   13fbc:	str	r3, [sp]
   13fc0:	add	r3, sp, #8
   13fc4:	bl	13994 <table_set@@Base>
   13fc8:	mov	sp, fp
   13fcc:	pop	{fp, pc}

00013fd0 <table_set_ldouble@@Base>:
   13fd0:	push	{fp, lr}
   13fd4:	mov	fp, sp
   13fd8:	sub	sp, sp, #16
   13fdc:	mov	r3, #18
   13fe0:	vstr	d0, [sp, #8]
   13fe4:	str	r3, [sp]
   13fe8:	add	r3, sp, #8
   13fec:	bl	13994 <table_set@@Base>
   13ff0:	mov	sp, fp
   13ff4:	pop	{fp, pc}

00013ff8 <table_set_string@@Base>:
   13ff8:	push	{fp, lr}
   13ffc:	mov	fp, sp
   14000:	sub	sp, sp, #8
   14004:	mov	ip, #21
   14008:	str	ip, [sp]
   1400c:	bl	13994 <table_set@@Base>
   14010:	mov	sp, fp
   14014:	pop	{fp, pc}

00014018 <table_set_char@@Base>:
   14018:	push	{fp, lr}
   1401c:	mov	fp, sp
   14020:	sub	sp, sp, #8
   14024:	strb	r3, [fp, #-1]
   14028:	mov	r3, #19
   1402c:	str	r3, [sp]
   14030:	sub	r3, fp, #1
   14034:	bl	13994 <table_set@@Base>
   14038:	mov	sp, fp
   1403c:	pop	{fp, pc}

00014040 <table_set_uchar@@Base>:
   14040:	push	{fp, lr}
   14044:	mov	fp, sp
   14048:	sub	sp, sp, #8
   1404c:	strb	r3, [fp, #-1]
   14050:	mov	r3, #20
   14054:	str	r3, [sp]
   14058:	sub	r3, fp, #1
   1405c:	bl	13994 <table_set@@Base>
   14060:	mov	sp, fp
   14064:	pop	{fp, pc}

00014068 <table_set_ptr@@Base>:
   14068:	push	{fp, lr}
   1406c:	mov	fp, sp
   14070:	sub	sp, sp, #8
   14074:	mov	ip, #23
   14078:	str	ip, [sp]
   1407c:	bl	13994 <table_set@@Base>
   14080:	mov	sp, fp
   14084:	pop	{fp, pc}

00014088 <table_cell_init@@Base>:
   14088:	push	{r4, sl, fp, lr}
   1408c:	add	fp, sp, #8
   14090:	mov	r4, r2
   14094:	bl	13764 <table_get_row_ptr@@Base>
   14098:	ldr	r0, [r0]
   1409c:	mov	r1, #0
   140a0:	str	r1, [r0, r4, lsl #2]
   140a4:	pop	{r4, sl, fp, pc}

000140a8 <table_get_cell_ptr@@Base>:
   140a8:	push	{r4, sl, fp, lr}
   140ac:	add	fp, sp, #8
   140b0:	mov	r4, r2
   140b4:	bl	13764 <table_get_row_ptr@@Base>
   140b8:	ldr	r0, [r0]
   140bc:	add	r0, r0, r4, lsl #2
   140c0:	pop	{r4, sl, fp, pc}

000140c4 <table_cell_destroy@@Base>:
   140c4:	push	{r4, r5, r6, sl, fp, lr}
   140c8:	add	fp, sp, #16
   140cc:	mov	r5, r1
   140d0:	mov	r1, r2
   140d4:	mov	r4, r2
   140d8:	mov	r6, r0
   140dc:	bl	12b8c <table_get_column_data_type@@Base>
   140e0:	cmp	r0, #23
   140e4:	popeq	{r4, r5, r6, sl, fp, pc}
   140e8:	mov	r0, r6
   140ec:	mov	r1, r5
   140f0:	bl	13764 <table_get_row_ptr@@Base>
   140f4:	ldr	r0, [r0]
   140f8:	ldr	r0, [r0, r4, lsl #2]
   140fc:	cmp	r0, #0
   14100:	beq	1410c <table_cell_destroy@@Base+0x48>
   14104:	pop	{r4, r5, r6, sl, fp, lr}
   14108:	b	11ea8 <free@plt>
   1410c:	pop	{r4, r5, r6, sl, fp, pc}

00014110 <table_cell_to_buffer@@Base>:
   14110:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14114:	add	fp, sp, #24
   14118:	sub	sp, sp, #8
   1411c:	mov	r7, r1
   14120:	mov	r1, r2
   14124:	mov	r5, r3
   14128:	mov	r6, r2
   1412c:	mov	r4, r0
   14130:	bl	12b8c <table_get_column_data_type@@Base>
   14134:	cmp	r0, #23
   14138:	bhi	14428 <table_cell_to_buffer@@Base+0x318>
   1413c:	ldr	r8, [fp, #8]
   14140:	add	r1, pc, #0
   14144:	ldr	pc, [r1, r0, lsl #2]
   14148:	andeq	r4, r1, r8, lsr #3
   1414c:			; <UNDEFINED> instruction: 0x000141bc
   14150:	ldrdeq	r4, [r1], -r0
   14154:	andeq	r4, r1, r4, ror #3
   14158:	strdeq	r4, [r1], -r8
   1415c:	andeq	r4, r1, ip, lsl #4
   14160:	andeq	r4, r1, r0, lsr #4
   14164:	andeq	r4, r1, r4, lsr r2
   14168:	andeq	r4, r1, r4, asr r2
   1416c:	andeq	r4, r1, r8, ror #4
   14170:	andeq	r4, r1, ip, ror r2
   14174:	muleq	r1, ip, r2
   14178:			; <UNDEFINED> instruction: 0x000142bc
   1417c:	ldrdeq	r4, [r1], -ip
   14180:	strdeq	r4, [r1], -ip
   14184:	andeq	r4, r1, ip, lsl r3
   14188:	andeq	r4, r1, ip, lsr r3
   1418c:	andeq	r4, r1, r0, ror #6
   14190:	andeq	r4, r1, r0, lsl #7
   14194:	andeq	r4, r1, ip, lsr #7
   14198:	andeq	r4, r1, r0, asr #7
   1419c:	andeq	r4, r1, r0, ror #7
   141a0:	andeq	r4, r1, r0, lsl #8
   141a4:	andeq	r4, r1, r4, lsr r4
   141a8:	mov	r0, r4
   141ac:	mov	r1, r7
   141b0:	mov	r2, r6
   141b4:	bl	13520 <table_get_int@@Base>
   141b8:	b	14410 <table_cell_to_buffer@@Base+0x300>
   141bc:	mov	r0, r4
   141c0:	mov	r1, r7
   141c4:	mov	r2, r6
   141c8:	bl	13538 <table_get_uint@@Base>
   141cc:	b	14244 <table_cell_to_buffer@@Base+0x134>
   141d0:	mov	r0, r4
   141d4:	mov	r1, r7
   141d8:	mov	r2, r6
   141dc:	bl	13550 <table_get_int8@@Base>
   141e0:	b	14410 <table_cell_to_buffer@@Base+0x300>
   141e4:	mov	r0, r4
   141e8:	mov	r1, r7
   141ec:	mov	r2, r6
   141f0:	bl	13568 <table_get_uint8@@Base>
   141f4:	b	14244 <table_cell_to_buffer@@Base+0x134>
   141f8:	mov	r0, r4
   141fc:	mov	r1, r7
   14200:	mov	r2, r6
   14204:	bl	13580 <table_get_int16@@Base>
   14208:	b	14410 <table_cell_to_buffer@@Base+0x300>
   1420c:	mov	r0, r4
   14210:	mov	r1, r7
   14214:	mov	r2, r6
   14218:	bl	13598 <table_get_uint16@@Base>
   1421c:	b	14244 <table_cell_to_buffer@@Base+0x134>
   14220:	mov	r0, r4
   14224:	mov	r1, r7
   14228:	mov	r2, r6
   1422c:	bl	135b0 <table_get_int32@@Base>
   14230:	b	14410 <table_cell_to_buffer@@Base+0x300>
   14234:	mov	r0, r4
   14238:	mov	r1, r7
   1423c:	mov	r2, r6
   14240:	bl	135c8 <table_get_uint32@@Base>
   14244:	movw	r2, #19463	; 0x4c07
   14248:	mov	r3, r0
   1424c:	movt	r2, #1
   14250:	b	1441c <table_cell_to_buffer@@Base+0x30c>
   14254:	mov	r0, r4
   14258:	mov	r1, r7
   1425c:	mov	r2, r6
   14260:	bl	135e0 <table_get_int64@@Base>
   14264:	b	1430c <table_cell_to_buffer@@Base+0x1fc>
   14268:	mov	r0, r4
   1426c:	mov	r1, r7
   14270:	mov	r2, r6
   14274:	bl	135f8 <table_get_uint64@@Base>
   14278:	b	1432c <table_cell_to_buffer@@Base+0x21c>
   1427c:	mov	r0, r4
   14280:	mov	r1, r7
   14284:	mov	r2, r6
   14288:	bl	13610 <table_get_short@@Base>
   1428c:	movw	r2, #19476	; 0x4c14
   14290:	mov	r3, r0
   14294:	movt	r2, #1
   14298:	b	1441c <table_cell_to_buffer@@Base+0x30c>
   1429c:	mov	r0, r4
   142a0:	mov	r1, r7
   142a4:	mov	r2, r6
   142a8:	bl	13628 <table_get_ushort@@Base>
   142ac:	movw	r2, #19480	; 0x4c18
   142b0:	mov	r3, r0
   142b4:	movt	r2, #1
   142b8:	b	1441c <table_cell_to_buffer@@Base+0x30c>
   142bc:	mov	r0, r4
   142c0:	mov	r1, r7
   142c4:	mov	r2, r6
   142c8:	bl	13640 <table_get_long@@Base>
   142cc:	movw	r2, #19484	; 0x4c1c
   142d0:	mov	r3, r0
   142d4:	movt	r2, #1
   142d8:	b	1441c <table_cell_to_buffer@@Base+0x30c>
   142dc:	mov	r0, r4
   142e0:	mov	r1, r7
   142e4:	mov	r2, r6
   142e8:	bl	13658 <table_get_ulong@@Base>
   142ec:	movw	r2, #19488	; 0x4c20
   142f0:	mov	r3, r0
   142f4:	movt	r2, #1
   142f8:	b	1441c <table_cell_to_buffer@@Base+0x30c>
   142fc:	mov	r0, r4
   14300:	mov	r1, r7
   14304:	mov	r2, r6
   14308:	bl	13670 <table_get_llong@@Base>
   1430c:	movw	r2, #19466	; 0x4c0a
   14310:	stm	sp, {r0, r1}
   14314:	movt	r2, #1
   14318:	b	1439c <table_cell_to_buffer@@Base+0x28c>
   1431c:	mov	r0, r4
   14320:	mov	r1, r7
   14324:	mov	r2, r6
   14328:	bl	13688 <table_get_ullong@@Base>
   1432c:	movw	r2, #19471	; 0x4c0f
   14330:	stm	sp, {r0, r1}
   14334:	movt	r2, #1
   14338:	b	1439c <table_cell_to_buffer@@Base+0x28c>
   1433c:	mov	r0, r4
   14340:	mov	r1, r7
   14344:	mov	r2, r6
   14348:	bl	136a0 <table_get_float@@Base>
   1434c:	vcvt.f64.f32	d16, s0
   14350:	movw	r2, #19495	; 0x4c27
   14354:	movt	r2, #1
   14358:	vstr	d16, [sp]
   1435c:	b	1439c <table_cell_to_buffer@@Base+0x28c>
   14360:	mov	r0, r4
   14364:	mov	r1, r7
   14368:	mov	r2, r6
   1436c:	bl	136b8 <table_get_double@@Base>
   14370:	movw	r2, #19498	; 0x4c2a
   14374:	vstr	d0, [sp]
   14378:	movt	r2, #1
   1437c:	b	1439c <table_cell_to_buffer@@Base+0x28c>
   14380:	mov	r0, r4
   14384:	mov	r1, r7
   14388:	mov	r2, r6
   1438c:	bl	136d0 <table_get_ldouble@@Base>
   14390:	movw	r2, #19502	; 0x4c2e
   14394:	vstr	d0, [sp]
   14398:	movt	r2, #1
   1439c:	mov	r0, r5
   143a0:	mov	r1, r8
   143a4:	bl	11efc <snprintf@plt>
   143a8:	b	14428 <table_cell_to_buffer@@Base+0x318>
   143ac:	mov	r0, r4
   143b0:	mov	r1, r7
   143b4:	mov	r2, r6
   143b8:	bl	136e8 <table_get_char@@Base>
   143bc:	b	143d0 <table_cell_to_buffer@@Base+0x2c0>
   143c0:	mov	r0, r4
   143c4:	mov	r1, r7
   143c8:	mov	r2, r6
   143cc:	bl	13700 <table_get_uchar@@Base>
   143d0:	movw	r2, #19506	; 0x4c32
   143d4:	mov	r3, r0
   143d8:	movt	r2, #1
   143dc:	b	1441c <table_cell_to_buffer@@Base+0x30c>
   143e0:	mov	r0, r4
   143e4:	mov	r1, r7
   143e8:	mov	r2, r6
   143ec:	bl	13718 <table_get_string@@Base>
   143f0:	movw	r2, #19492	; 0x4c24
   143f4:	mov	r3, r0
   143f8:	movt	r2, #1
   143fc:	b	1441c <table_cell_to_buffer@@Base+0x30c>
   14400:	mov	r0, r4
   14404:	mov	r1, r7
   14408:	mov	r2, r6
   1440c:	bl	13508 <table_get_bool@@Base>
   14410:	movw	r2, #19460	; 0x4c04
   14414:	mov	r3, r0
   14418:	movt	r2, #1
   1441c:	mov	r0, r5
   14420:	mov	r1, r8
   14424:	bl	11efc <snprintf@plt>
   14428:	mov	r0, #0
   1442c:	sub	sp, fp, #24
   14430:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14434:	mov	r0, r4
   14438:	mov	r1, r7
   1443c:	mov	r2, r6
   14440:	bl	1372c <table_get_ptr@@Base>
   14444:	movw	r2, #19509	; 0x4c35
   14448:	mov	r3, r0
   1444c:	movt	r2, #1
   14450:	b	1441c <table_cell_to_buffer@@Base+0x30c>

00014454 <table_cell_from_buffer@@Base>:
   14454:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   14458:	add	fp, sp, #24
   1445c:	sub	sp, sp, #264	; 0x108
   14460:	mov	r5, r1
   14464:	mov	r1, r2
   14468:	mov	r7, r3
   1446c:	mov	r4, r2
   14470:	mov	r6, r0
   14474:	bl	12b8c <table_get_column_data_type@@Base>
   14478:	cmp	r0, #23
   1447c:	bhi	14aac <table_cell_from_buffer@@Base+0x658>
   14480:	add	r1, pc, #0
   14484:	ldr	pc, [r1, r0, lsl #2]
   14488:	andeq	r4, r1, r8, ror #9
   1448c:	andeq	r4, r1, r4, lsr #10
   14490:	andeq	r4, r1, r0, ror #10
   14494:	muleq	r1, ip, r5
   14498:	ldrdeq	r4, [r1], -r8
   1449c:	andeq	r4, r1, r4, lsl r6
   144a0:	andeq	r4, r1, r0, asr r6
   144a4:	andeq	r4, r1, ip, lsl #13
   144a8:	andeq	r4, r1, r8, asr #13
   144ac:	andeq	r4, r1, ip, lsl #14
   144b0:	andeq	r4, r1, r0, asr r7
   144b4:	andeq	r4, r1, ip, lsl #15
   144b8:	andeq	r4, r1, r8, asr #15
   144bc:	andeq	r4, r1, r4, lsl #16
   144c0:	andeq	r4, r1, r0, asr #16
   144c4:	andeq	r4, r1, r4, lsl #17
   144c8:	andeq	r4, r1, r8, asr #17
   144cc:	andeq	r4, r1, r4, lsl #18
   144d0:	andeq	r4, r1, r0, asr #18
   144d4:	andeq	r4, r1, ip, ror r9
   144d8:			; <UNDEFINED> instruction: 0x000149b8
   144dc:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   144e0:	andeq	r4, r1, r0, lsr sl
   144e4:	andeq	r4, r1, r4, ror sl
   144e8:	movw	r1, #19460	; 0x4c04
   144ec:	add	r2, sp, #8
   144f0:	mov	r0, r7
   144f4:	movt	r1, #1
   144f8:	bl	11f08 <__isoc99_sscanf@plt>
   144fc:	mov	r1, r0
   14500:	mvn	r0, #0
   14504:	cmp	r1, #1
   14508:	bne	14ab0 <table_cell_from_buffer@@Base+0x65c>
   1450c:	ldr	r3, [sp, #8]
   14510:	mov	r0, r6
   14514:	mov	r1, r5
   14518:	mov	r2, r4
   1451c:	bl	13cd0 <table_set_int@@Base>
   14520:	b	14aac <table_cell_from_buffer@@Base+0x658>
   14524:	movw	r1, #19463	; 0x4c07
   14528:	add	r2, sp, #8
   1452c:	mov	r0, r7
   14530:	movt	r1, #1
   14534:	bl	11f08 <__isoc99_sscanf@plt>
   14538:	mov	r1, r0
   1453c:	mvn	r0, #0
   14540:	cmp	r1, #1
   14544:	bne	14ab0 <table_cell_from_buffer@@Base+0x65c>
   14548:	ldr	r3, [sp, #8]
   1454c:	mov	r0, r6
   14550:	mov	r1, r5
   14554:	mov	r2, r4
   14558:	bl	13cf8 <table_set_uint@@Base>
   1455c:	b	14aac <table_cell_from_buffer@@Base+0x658>
   14560:	movw	r1, #19512	; 0x4c38
   14564:	add	r2, sp, #8
   14568:	mov	r0, r7
   1456c:	movt	r1, #1
   14570:	bl	11f08 <__isoc99_sscanf@plt>
   14574:	mov	r1, r0
   14578:	mvn	r0, #0
   1457c:	cmp	r1, #1
   14580:	bne	14ab0 <table_cell_from_buffer@@Base+0x65c>
   14584:	ldrsb	r3, [sp, #8]
   14588:	mov	r0, r6
   1458c:	mov	r1, r5
   14590:	mov	r2, r4
   14594:	bl	13d20 <table_set_int8@@Base>
   14598:	b	14aac <table_cell_from_buffer@@Base+0x658>
   1459c:	movw	r1, #19517	; 0x4c3d
   145a0:	add	r2, sp, #8
   145a4:	mov	r0, r7
   145a8:	movt	r1, #1
   145ac:	bl	11f08 <__isoc99_sscanf@plt>
   145b0:	mov	r1, r0
   145b4:	mvn	r0, #0
   145b8:	cmp	r1, #1
   145bc:	bne	14ab0 <table_cell_from_buffer@@Base+0x65c>
   145c0:	ldrb	r3, [sp, #8]
   145c4:	mov	r0, r6
   145c8:	mov	r1, r5
   145cc:	mov	r2, r4
   145d0:	bl	13d48 <table_set_uint8@@Base>
   145d4:	b	14aac <table_cell_from_buffer@@Base+0x658>
   145d8:	movw	r1, #19476	; 0x4c14
   145dc:	add	r2, sp, #8
   145e0:	mov	r0, r7
   145e4:	movt	r1, #1
   145e8:	bl	11f08 <__isoc99_sscanf@plt>
   145ec:	mov	r1, r0
   145f0:	mvn	r0, #0
   145f4:	cmp	r1, #1
   145f8:	bne	14ab0 <table_cell_from_buffer@@Base+0x65c>
   145fc:	ldrsh	r3, [sp, #8]
   14600:	mov	r0, r6
   14604:	mov	r1, r5
   14608:	mov	r2, r4
   1460c:	bl	13d70 <table_set_int16@@Base>
   14610:	b	14aac <table_cell_from_buffer@@Base+0x658>
   14614:	movw	r1, #19480	; 0x4c18
   14618:	add	r2, sp, #8
   1461c:	mov	r0, r7
   14620:	movt	r1, #1
   14624:	bl	11f08 <__isoc99_sscanf@plt>
   14628:	mov	r1, r0
   1462c:	mvn	r0, #0
   14630:	cmp	r1, #1
   14634:	bne	14ab0 <table_cell_from_buffer@@Base+0x65c>
   14638:	ldrh	r3, [sp, #8]
   1463c:	mov	r0, r6
   14640:	mov	r1, r5
   14644:	mov	r2, r4
   14648:	bl	13d98 <table_set_uint16@@Base>
   1464c:	b	14aac <table_cell_from_buffer@@Base+0x658>
   14650:	movw	r1, #19460	; 0x4c04
   14654:	add	r2, sp, #8
   14658:	mov	r0, r7
   1465c:	movt	r1, #1
   14660:	bl	11f08 <__isoc99_sscanf@plt>
   14664:	mov	r1, r0
   14668:	mvn	r0, #0
   1466c:	cmp	r1, #1
   14670:	bne	14ab0 <table_cell_from_buffer@@Base+0x65c>
   14674:	ldr	r3, [sp, #8]
   14678:	mov	r0, r6
   1467c:	mov	r1, r5
   14680:	mov	r2, r4
   14684:	bl	13dc0 <table_set_int32@@Base>
   14688:	b	14aac <table_cell_from_buffer@@Base+0x658>
   1468c:	movw	r1, #19463	; 0x4c07
   14690:	add	r2, sp, #8
   14694:	mov	r0, r7
   14698:	movt	r1, #1
   1469c:	bl	11f08 <__isoc99_sscanf@plt>
   146a0:	mov	r1, r0
   146a4:	mvn	r0, #0
   146a8:	cmp	r1, #1
   146ac:	bne	14ab0 <table_cell_from_buffer@@Base+0x65c>
   146b0:	ldr	r3, [sp, #8]
   146b4:	mov	r0, r6
   146b8:	mov	r1, r5
   146bc:	mov	r2, r4
   146c0:	bl	13de8 <table_set_uint32@@Base>
   146c4:	b	14aac <table_cell_from_buffer@@Base+0x658>
   146c8:	movw	r1, #19466	; 0x4c0a
   146cc:	add	r2, sp, #8
   146d0:	mov	r0, r7
   146d4:	movt	r1, #1
   146d8:	bl	11f08 <__isoc99_sscanf@plt>
   146dc:	mov	r1, r0
   146e0:	mvn	r0, #0
   146e4:	cmp	r1, #1
   146e8:	bne	14ab0 <table_cell_from_buffer@@Base+0x65c>
   146ec:	ldr	r0, [sp, #8]
   146f0:	ldr	r1, [sp, #12]
   146f4:	mov	r2, r4
   146f8:	stm	sp, {r0, r1}
   146fc:	mov	r0, r6
   14700:	mov	r1, r5
   14704:	bl	13e10 <table_set_int64@@Base>
   14708:	b	14aac <table_cell_from_buffer@@Base+0x658>
   1470c:	movw	r1, #19471	; 0x4c0f
   14710:	add	r2, sp, #8
   14714:	mov	r0, r7
   14718:	movt	r1, #1
   1471c:	bl	11f08 <__isoc99_sscanf@plt>
   14720:	mov	r1, r0
   14724:	mvn	r0, #0
   14728:	cmp	r1, #1
   1472c:	bne	14ab0 <table_cell_from_buffer@@Base+0x65c>
   14730:	ldr	r0, [sp, #8]
   14734:	ldr	r1, [sp, #12]
   14738:	mov	r2, r4
   1473c:	stm	sp, {r0, r1}
   14740:	mov	r0, r6
   14744:	mov	r1, r5
   14748:	bl	13e44 <table_set_uint64@@Base>
   1474c:	b	14aac <table_cell_from_buffer@@Base+0x658>
   14750:	movw	r1, #19476	; 0x4c14
   14754:	add	r2, sp, #8
   14758:	mov	r0, r7
   1475c:	movt	r1, #1
   14760:	bl	11f08 <__isoc99_sscanf@plt>
   14764:	mov	r1, r0
   14768:	mvn	r0, #0
   1476c:	cmp	r1, #1
   14770:	bne	14ab0 <table_cell_from_buffer@@Base+0x65c>
   14774:	ldrsh	r3, [sp, #8]
   14778:	mov	r0, r6
   1477c:	mov	r1, r5
   14780:	mov	r2, r4
   14784:	bl	13e78 <table_set_short@@Base>
   14788:	b	14aac <table_cell_from_buffer@@Base+0x658>
   1478c:	movw	r1, #19480	; 0x4c18
   14790:	add	r2, sp, #8
   14794:	mov	r0, r7
   14798:	movt	r1, #1
   1479c:	bl	11f08 <__isoc99_sscanf@plt>
   147a0:	mov	r1, r0
   147a4:	mvn	r0, #0
   147a8:	cmp	r1, #1
   147ac:	bne	14ab0 <table_cell_from_buffer@@Base+0x65c>
   147b0:	ldrh	r3, [sp, #8]
   147b4:	mov	r0, r6
   147b8:	mov	r1, r5
   147bc:	mov	r2, r4
   147c0:	bl	13ea0 <table_set_ushort@@Base>
   147c4:	b	14aac <table_cell_from_buffer@@Base+0x658>
   147c8:	movw	r1, #19484	; 0x4c1c
   147cc:	add	r2, sp, #8
   147d0:	mov	r0, r7
   147d4:	movt	r1, #1
   147d8:	bl	11f08 <__isoc99_sscanf@plt>
   147dc:	mov	r1, r0
   147e0:	mvn	r0, #0
   147e4:	cmp	r1, #1
   147e8:	bne	14ab0 <table_cell_from_buffer@@Base+0x65c>
   147ec:	ldr	r3, [sp, #8]
   147f0:	mov	r0, r6
   147f4:	mov	r1, r5
   147f8:	mov	r2, r4
   147fc:	bl	13ec8 <table_set_long@@Base>
   14800:	b	14aac <table_cell_from_buffer@@Base+0x658>
   14804:	movw	r1, #19488	; 0x4c20
   14808:	add	r2, sp, #8
   1480c:	mov	r0, r7
   14810:	movt	r1, #1
   14814:	bl	11f08 <__isoc99_sscanf@plt>
   14818:	mov	r1, r0
   1481c:	mvn	r0, #0
   14820:	cmp	r1, #1
   14824:	bne	14ab0 <table_cell_from_buffer@@Base+0x65c>
   14828:	ldr	r3, [sp, #8]
   1482c:	mov	r0, r6
   14830:	mov	r1, r5
   14834:	mov	r2, r4
   14838:	bl	13ef0 <table_set_ulong@@Base>
   1483c:	b	14aac <table_cell_from_buffer@@Base+0x658>
   14840:	movw	r1, #19466	; 0x4c0a
   14844:	add	r2, sp, #8
   14848:	mov	r0, r7
   1484c:	movt	r1, #1
   14850:	bl	11f08 <__isoc99_sscanf@plt>
   14854:	mov	r1, r0
   14858:	mvn	r0, #0
   1485c:	cmp	r1, #1
   14860:	bne	14ab0 <table_cell_from_buffer@@Base+0x65c>
   14864:	ldr	r0, [sp, #8]
   14868:	ldr	r1, [sp, #12]
   1486c:	mov	r2, r4
   14870:	stm	sp, {r0, r1}
   14874:	mov	r0, r6
   14878:	mov	r1, r5
   1487c:	bl	13f18 <table_set_llong@@Base>
   14880:	b	14aac <table_cell_from_buffer@@Base+0x658>
   14884:	movw	r1, #19471	; 0x4c0f
   14888:	add	r2, sp, #8
   1488c:	mov	r0, r7
   14890:	movt	r1, #1
   14894:	bl	11f08 <__isoc99_sscanf@plt>
   14898:	mov	r1, r0
   1489c:	mvn	r0, #0
   148a0:	cmp	r1, #1
   148a4:	bne	14ab0 <table_cell_from_buffer@@Base+0x65c>
   148a8:	ldr	r0, [sp, #8]
   148ac:	ldr	r1, [sp, #12]
   148b0:	mov	r2, r4
   148b4:	stm	sp, {r0, r1}
   148b8:	mov	r0, r6
   148bc:	mov	r1, r5
   148c0:	bl	13f4c <table_set_ullong@@Base>
   148c4:	b	14aac <table_cell_from_buffer@@Base+0x658>
   148c8:	movw	r1, #19495	; 0x4c27
   148cc:	add	r2, sp, #8
   148d0:	mov	r0, r7
   148d4:	movt	r1, #1
   148d8:	bl	11f08 <__isoc99_sscanf@plt>
   148dc:	mov	r1, r0
   148e0:	mvn	r0, #0
   148e4:	cmp	r1, #1
   148e8:	bne	14ab0 <table_cell_from_buffer@@Base+0x65c>
   148ec:	vldr	s0, [sp, #8]
   148f0:	mov	r0, r6
   148f4:	mov	r1, r5
   148f8:	mov	r2, r4
   148fc:	bl	13f80 <table_set_float@@Base>
   14900:	b	14aac <table_cell_from_buffer@@Base+0x658>
   14904:	movw	r1, #19498	; 0x4c2a
   14908:	add	r2, sp, #8
   1490c:	mov	r0, r7
   14910:	movt	r1, #1
   14914:	bl	11f08 <__isoc99_sscanf@plt>
   14918:	mov	r1, r0
   1491c:	mvn	r0, #0
   14920:	cmp	r1, #1
   14924:	bne	14ab0 <table_cell_from_buffer@@Base+0x65c>
   14928:	vldr	d0, [sp, #8]
   1492c:	mov	r0, r6
   14930:	mov	r1, r5
   14934:	mov	r2, r4
   14938:	bl	13fa8 <table_set_double@@Base>
   1493c:	b	14aac <table_cell_from_buffer@@Base+0x658>
   14940:	movw	r1, #19502	; 0x4c2e
   14944:	add	r2, sp, #8
   14948:	mov	r0, r7
   1494c:	movt	r1, #1
   14950:	bl	11f08 <__isoc99_sscanf@plt>
   14954:	mov	r1, r0
   14958:	mvn	r0, #0
   1495c:	cmp	r1, #1
   14960:	bne	14ab0 <table_cell_from_buffer@@Base+0x65c>
   14964:	vldr	d0, [sp, #8]
   14968:	mov	r0, r6
   1496c:	mov	r1, r5
   14970:	mov	r2, r4
   14974:	bl	13fd0 <table_set_ldouble@@Base>
   14978:	b	14aac <table_cell_from_buffer@@Base+0x658>
   1497c:	movw	r1, #19506	; 0x4c32
   14980:	add	r2, sp, #8
   14984:	mov	r0, r7
   14988:	movt	r1, #1
   1498c:	bl	11f08 <__isoc99_sscanf@plt>
   14990:	mov	r1, r0
   14994:	mvn	r0, #0
   14998:	cmp	r1, #1
   1499c:	bne	14ab0 <table_cell_from_buffer@@Base+0x65c>
   149a0:	ldrb	r3, [sp, #8]
   149a4:	mov	r0, r6
   149a8:	mov	r1, r5
   149ac:	mov	r2, r4
   149b0:	bl	14018 <table_set_char@@Base>
   149b4:	b	14aac <table_cell_from_buffer@@Base+0x658>
   149b8:	movw	r1, #19506	; 0x4c32
   149bc:	add	r2, sp, #8
   149c0:	mov	r0, r7
   149c4:	movt	r1, #1
   149c8:	bl	11f08 <__isoc99_sscanf@plt>
   149cc:	mov	r1, r0
   149d0:	mvn	r0, #0
   149d4:	cmp	r1, #1
   149d8:	bne	14ab0 <table_cell_from_buffer@@Base+0x65c>
   149dc:	ldrb	r3, [sp, #8]
   149e0:	mov	r0, r6
   149e4:	mov	r1, r5
   149e8:	mov	r2, r4
   149ec:	bl	14040 <table_set_uchar@@Base>
   149f0:	b	14aac <table_cell_from_buffer@@Base+0x658>
   149f4:	movw	r1, #19492	; 0x4c24
   149f8:	add	r2, sp, #8
   149fc:	mov	r0, r7
   14a00:	movt	r1, #1
   14a04:	bl	11f08 <__isoc99_sscanf@plt>
   14a08:	mov	r1, r0
   14a0c:	mvn	r0, #0
   14a10:	cmp	r1, #1
   14a14:	bne	14ab0 <table_cell_from_buffer@@Base+0x65c>
   14a18:	add	r3, sp, #8
   14a1c:	mov	r0, r6
   14a20:	mov	r1, r5
   14a24:	mov	r2, r4
   14a28:	bl	13ff8 <table_set_string@@Base>
   14a2c:	b	14aac <table_cell_from_buffer@@Base+0x658>
   14a30:	movw	r1, #19460	; 0x4c04
   14a34:	add	r2, sp, #8
   14a38:	mov	r0, r7
   14a3c:	movt	r1, #1
   14a40:	bl	11f08 <__isoc99_sscanf@plt>
   14a44:	mov	r1, r0
   14a48:	mvn	r0, #0
   14a4c:	cmp	r1, #1
   14a50:	bne	14ab0 <table_cell_from_buffer@@Base+0x65c>
   14a54:	ldr	r3, [sp, #8]
   14a58:	mov	r0, r6
   14a5c:	mov	r1, r5
   14a60:	mov	r2, r4
   14a64:	cmp	r3, #0
   14a68:	movwne	r3, #1
   14a6c:	bl	13ca8 <table_set_bool@@Base>
   14a70:	b	14aac <table_cell_from_buffer@@Base+0x658>
   14a74:	movw	r1, #19509	; 0x4c35
   14a78:	add	r2, sp, #8
   14a7c:	mov	r0, r7
   14a80:	movt	r1, #1
   14a84:	bl	11f08 <__isoc99_sscanf@plt>
   14a88:	mov	r1, r0
   14a8c:	mvn	r0, #0
   14a90:	cmp	r1, #1
   14a94:	bne	14ab0 <table_cell_from_buffer@@Base+0x65c>
   14a98:	ldr	r3, [sp, #8]
   14a9c:	mov	r0, r6
   14aa0:	mov	r1, r5
   14aa4:	mov	r2, r4
   14aa8:	bl	14068 <table_set_ptr@@Base>
   14aac:	mov	r0, #0
   14ab0:	sub	sp, fp, #24
   14ab4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00014ab8 <table_cell_nullify@@Base>:
   14ab8:	push	{r4, r5, fp, lr}
   14abc:	add	fp, sp, #8
   14ac0:	mov	r4, r2
   14ac4:	bl	13764 <table_get_row_ptr@@Base>
   14ac8:	ldr	r5, [r0]
   14acc:	ldr	r0, [r5, r4, lsl #2]
   14ad0:	cmp	r0, #0
   14ad4:	beq	14ae4 <table_cell_nullify@@Base+0x2c>
   14ad8:	bl	11ea8 <free@plt>
   14adc:	mov	r0, #0
   14ae0:	str	r0, [r5, r4, lsl #2]
   14ae4:	mov	r0, #0
   14ae8:	pop	{r4, r5, fp, pc}

00014aec <__libc_csu_init@@Base>:
   14aec:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14af0:	mov	r7, r0
   14af4:	ldr	r6, [pc, #72]	; 14b44 <__libc_csu_init@@Base+0x58>
   14af8:	ldr	r5, [pc, #72]	; 14b48 <__libc_csu_init@@Base+0x5c>
   14afc:	add	r6, pc, r6
   14b00:	add	r5, pc, r5
   14b04:	sub	r6, r6, r5
   14b08:	mov	r8, r1
   14b0c:	mov	r9, r2
   14b10:	bl	11e70 <strcmp@plt-0x20>
   14b14:	asrs	r6, r6, #2
   14b18:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   14b1c:	mov	r4, #0
   14b20:	add	r4, r4, #1
   14b24:	ldr	r3, [r5], #4
   14b28:	mov	r2, r9
   14b2c:	mov	r1, r8
   14b30:	mov	r0, r7
   14b34:	blx	r3
   14b38:	cmp	r6, r4
   14b3c:	bne	14b20 <__libc_csu_init@@Base+0x34>
   14b40:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   14b44:	andeq	r0, r1, r8, lsl #8
   14b48:	andeq	r0, r1, r0, lsl #8

00014b4c <__libc_csu_fini@@Base>:
   14b4c:	bx	lr

Disassembly of section .fini:

00014b50 <.fini>:
   14b50:	push	{r3, lr}
   14b54:	pop	{r3, pc}
