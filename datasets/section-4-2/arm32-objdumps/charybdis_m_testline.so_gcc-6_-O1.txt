
../repos/charybdis/modules/.libs/m_testline.so:     file format elf32-littlearm


Disassembly of section .init:

0000076c <_init>:
 76c:	push	{r3, lr}
 770:	bl	894 <call_weak_fn>
 774:	pop	{r3, pc}

Disassembly of section .plt:

00000778 <.plt>:
 778:	push	{lr}		; (str lr, [sp, #-4]!)
 77c:	ldr	lr, [pc, #4]	; 788 <.plt+0x10>
 780:	add	lr, pc, lr
 784:	ldr	pc, [lr, #8]!
 788:	.word	0x00011878

0000078c <raise@plt>:
 78c:	add	ip, pc, #0, 12
 790:	add	ip, ip, #69632	; 0x11000
 794:	ldr	pc, [ip, #2168]!	; 0x878

00000798 <rb_current_time@plt>:
 798:	add	ip, pc, #0, 12
 79c:	add	ip, ip, #69632	; 0x11000
 7a0:	ldr	pc, [ip, #2160]!	; 0x870

000007a4 <__cxa_finalize@plt>:
 7a4:	add	ip, pc, #0, 12
 7a8:	add	ip, ip, #69632	; 0x11000
 7ac:	ldr	pc, [ip, #2152]!	; 0x868

000007b0 <sendto_one@plt>:
 7b0:	add	ip, pc, #0, 12
 7b4:	add	ip, ip, #69632	; 0x11000
 7b8:	ldr	pc, [ip, #2144]!	; 0x860

000007bc <find_address_conf@plt>:
 7bc:	add	ip, pc, #0, 12
 7c0:	add	ip, ip, #69632	; 0x11000
 7c4:	ldr	pc, [ip, #2136]!	; 0x858

000007c8 <parse_netmask@plt>:
 7c8:	add	ip, pc, #0, 12
 7cc:	add	ip, ip, #69632	; 0x11000
 7d0:	ldr	pc, [ip, #2128]!	; 0x850

000007d4 <get_printable_kline@plt>:
 7d4:	add	ip, pc, #0, 12
 7d8:	add	ip, ip, #69632	; 0x11000
 7dc:	ldr	pc, [ip, #2120]!	; 0x848

000007e0 <is_throttle_ip@plt>:
 7e0:	add	ip, pc, #0, 12
 7e4:	add	ip, ip, #69632	; 0x11000
 7e8:	ldr	pc, [ip, #2112]!	; 0x840

000007ec <strcpy@plt>:
 7ec:	add	ip, pc, #0, 12
 7f0:	add	ip, ip, #69632	; 0x11000
 7f4:	ldr	pc, [ip, #2104]!	; 0x838

000007f8 <find_nick_resv@plt>:
 7f8:	add	ip, pc, #0, 12
 7fc:	add	ip, ip, #69632	; 0x11000
 800:	ldr	pc, [ip, #2096]!	; 0x830

00000804 <show_iline_prefix@plt>:
 804:	add	ip, pc, #0, 12
 808:	add	ip, ip, #69632	; 0x11000
 80c:	ldr	pc, [ip, #2088]!	; 0x828

00000810 <__gmon_start__@plt>:
 810:	add	ip, pc, #0, 12
 814:	add	ip, ip, #69632	; 0x11000
 818:	ldr	pc, [ip, #2080]!	; 0x820

0000081c <sendto_one_numeric@plt>:
 81c:	add	ip, pc, #0, 12
 820:	add	ip, ip, #69632	; 0x11000
 824:	ldr	pc, [ip, #2072]!	; 0x818

00000828 <strlen@plt>:
 828:	add	ip, pc, #0, 12
 82c:	add	ip, ip, #69632	; 0x11000
 830:	ldr	pc, [ip, #2064]!	; 0x810

00000834 <strchr@plt>:
 834:	add	ip, pc, #0, 12
 838:	add	ip, ip, #69632	; 0x11000
 83c:	ldr	pc, [ip, #2056]!	; 0x808

00000840 <snprintf@plt>:
 840:	add	ip, pc, #0, 12
 844:	add	ip, ip, #69632	; 0x11000
 848:	ldr	pc, [ip, #2048]!	; 0x800

0000084c <is_reject_ip@plt>:
 84c:	add	ip, pc, #0, 12
 850:	add	ip, ip, #69632	; 0x11000
 854:	ldr	pc, [ip, #2040]!	; 0x7f8

00000858 <find_xline@plt>:
 858:	add	ip, pc, #0, 12
 85c:	add	ip, ip, #69632	; 0x11000
 860:	ldr	pc, [ip, #2032]!	; 0x7f0

00000864 <rb_strlcpy@plt>:
 864:	add	ip, pc, #0, 12
 868:	add	ip, ip, #69632	; 0x11000
 86c:	ldr	pc, [ip, #2024]!	; 0x7e8

00000870 <privilegeset_in_set@plt>:
 870:	add	ip, pc, #0, 12
 874:	add	ip, ip, #69632	; 0x11000
 878:	ldr	pc, [ip, #2016]!	; 0x7e0

0000087c <hash_find_resv@plt>:
 87c:	add	ip, pc, #0, 12
 880:	add	ip, ip, #69632	; 0x11000
 884:	ldr	pc, [ip, #2008]!	; 0x7d8

00000888 <find_dline@plt>:
 888:	add	ip, pc, #0, 12
 88c:	add	ip, ip, #69632	; 0x11000
 890:	ldr	pc, [ip, #2000]!	; 0x7d0

Disassembly of section .text:

00000894 <call_weak_fn>:
     894:	ldr	r3, [pc, #20]	; 8b0 <call_weak_fn+0x1c>
     898:	ldr	r2, [pc, #20]	; 8b4 <call_weak_fn+0x20>
     89c:	add	r3, pc, r3
     8a0:	ldr	r2, [r3, r2]
     8a4:	cmp	r2, #0
     8a8:	bxeq	lr
     8ac:	b	810 <__gmon_start__@plt>
     8b0:	.word	0x0001175c
     8b4:	.word	0x0000006c

000008b8 <deregister_tm_clones>:
     8b8:	ldr	r3, [pc, #52]	; 8f4 <deregister_tm_clones+0x3c>
     8bc:	ldr	r0, [pc, #52]	; 8f8 <deregister_tm_clones+0x40>
     8c0:	add	r3, pc, r3
     8c4:	add	r0, pc, r0
     8c8:	add	r3, r3, #3
     8cc:	sub	r3, r3, r0
     8d0:	cmp	r3, #6
     8d4:	ldr	r3, [pc, #32]	; 8fc <deregister_tm_clones+0x44>
     8d8:	add	r3, pc, r3
     8dc:	bxls	lr
     8e0:	ldr	r2, [pc, #24]	; 900 <deregister_tm_clones+0x48>
     8e4:	ldr	r3, [r3, r2]
     8e8:	cmp	r3, #0
     8ec:	bxeq	lr
     8f0:	bx	r3
     8f4:	.word	0x00011878
     8f8:	.word	0x00011874
     8fc:	.word	0x00011720
     900:	.word	0x00000068

00000904 <register_tm_clones>:
     904:	ldr	r1, [pc, #56]	; 944 <register_tm_clones+0x40>
     908:	ldr	r0, [pc, #56]	; 948 <register_tm_clones+0x44>
     90c:	add	r1, pc, r1
     910:	add	r0, pc, r0
     914:	sub	r1, r1, r0
     918:	ldr	r3, [pc, #44]	; 94c <register_tm_clones+0x48>
     91c:	asr	r1, r1, #2
     920:	add	r3, pc, r3
     924:	add	r1, r1, r1, lsr #31
     928:	asrs	r1, r1, #1
     92c:	bxeq	lr
     930:	ldr	r2, [pc, #24]	; 950 <register_tm_clones+0x4c>
     934:	ldr	r3, [r3, r2]
     938:	cmp	r3, #0
     93c:	bxeq	lr
     940:	bx	r3
     944:	.word	0x0001182c
     948:	.word	0x00011828
     94c:	.word	0x000116d8
     950:	.word	0x00000078

00000954 <__do_global_dtors_aux>:
     954:	ldr	r3, [pc, #76]	; 9a8 <__do_global_dtors_aux+0x54>
     958:	ldr	r2, [pc, #76]	; 9ac <__do_global_dtors_aux+0x58>
     95c:	add	r3, pc, r3
     960:	add	r2, pc, r2
     964:	ldrb	r3, [r3]
     968:	cmp	r3, #0
     96c:	bxne	lr
     970:	ldr	r3, [pc, #56]	; 9b0 <__do_global_dtors_aux+0x5c>
     974:	push	{r4, lr}
     978:	ldr	r3, [r2, r3]
     97c:	cmp	r3, #0
     980:	beq	990 <__do_global_dtors_aux+0x3c>
     984:	ldr	r3, [pc, #40]	; 9b4 <__do_global_dtors_aux+0x60>
     988:	ldr	r0, [pc, r3]
     98c:	bl	7a4 <__cxa_finalize@plt>
     990:	bl	8b8 <deregister_tm_clones>
     994:	ldr	r3, [pc, #28]	; 9b8 <__do_global_dtors_aux+0x64>
     998:	mov	r2, #1
     99c:	add	r3, pc, r3
     9a0:	strb	r2, [r3]
     9a4:	pop	{r4, pc}
     9a8:	.word	0x000117dc
     9ac:	.word	0x00011698
     9b0:	.word	0x00000064
     9b4:	.word	0x000116f0
     9b8:	.word	0x0001179c

000009bc <frame_dummy>:
     9bc:	ldr	r0, [pc, #56]	; 9fc <frame_dummy+0x40>
     9c0:	ldr	r3, [pc, #56]	; a00 <frame_dummy+0x44>
     9c4:	add	r0, pc, r0
     9c8:	ldr	r2, [r0]
     9cc:	add	r3, pc, r3
     9d0:	cmp	r2, #0
     9d4:	bne	9dc <frame_dummy+0x20>
     9d8:	b	904 <register_tm_clones>
     9dc:	ldr	r2, [pc, #32]	; a04 <frame_dummy+0x48>
     9e0:	ldr	r3, [r3, r2]
     9e4:	cmp	r3, #0
     9e8:	beq	9d8 <frame_dummy+0x1c>
     9ec:	push	{r4, lr}
     9f0:	blx	r3
     9f4:	pop	{r4, lr}
     9f8:	b	904 <register_tm_clones>
     9fc:	.word	0x00011530
     a00:	.word	0x0001162c
     a04:	.word	0x00000074

00000a08 <mo_testline>:
     a08:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
     a0c:	add	fp, sp, #32
     a10:	sub	sp, sp, #724	; 0x2d4
     a14:	mov	r4, r2
     a18:	ldr	r5, [pc, #1848]	; 1158 <mo_testline+0x750>
     a1c:	add	r5, pc, r5
     a20:	ldr	r3, [r2, #24]
     a24:	cmp	r3, #0
     a28:	beq	a4c <mo_testline+0x44>
     a2c:	ldr	r0, [r3, #36]	; 0x24
     a30:	cmp	r0, #0
     a34:	beq	a4c <mo_testline+0x44>
     a38:	ldr	r1, [pc, #1820]	; 115c <mo_testline+0x754>
     a3c:	add	r1, pc, r1
     a40:	bl	870 <privilegeset_in_set@plt>
     a44:	cmp	r0, #0
     a48:	bne	a80 <mo_testline+0x78>
     a4c:	ldr	r3, [pc, #1804]	; 1160 <mo_testline+0x758>
     a50:	ldr	r2, [r5, r3]
     a54:	ldr	r3, [pc, #1800]	; 1164 <mo_testline+0x75c>
     a58:	add	r3, pc, r3
     a5c:	str	r3, [sp]
     a60:	add	r3, r4, #88	; 0x58
     a64:	add	r2, r2, #88	; 0x58
     a68:	ldr	r1, [pc, #1784]	; 1168 <mo_testline+0x760>
     a6c:	add	r1, pc, r1
     a70:	mov	r0, r4
     a74:	bl	7b0 <sendto_one@plt>
     a78:	sub	sp, fp, #32
     a7c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
     a80:	ldr	r3, [fp, #4]
     a84:	ldr	r7, [r3, #4]
     a88:	mov	r0, r7
     a8c:	bl	828 <strlen@plt>
     a90:	add	r0, r0, #15
     a94:	bic	r0, r0, #7
     a98:	sub	sp, sp, r0
     a9c:	add	r6, sp, #24
     aa0:	mov	r1, r7
     aa4:	mov	r0, r6
     aa8:	bl	7ec <strcpy@plt>
     aac:	cmp	r6, #0
     ab0:	beq	acc <mo_testline+0xc4>
     ab4:	ldr	r3, [pc, #1712]	; 116c <mo_testline+0x764>
     ab8:	ldr	r3, [r5, r3]
     abc:	ldrb	r2, [r6]
     ac0:	ldr	r3, [r3, r2, lsl #2]
     ac4:	tst	r3, #512	; 0x200
     ac8:	bne	c74 <mo_testline+0x26c>
     acc:	mov	r1, #33	; 0x21
     ad0:	mov	r0, r6
     ad4:	bl	834 <strchr@plt>
     ad8:	cmp	r0, #0
     adc:	beq	d14 <mo_testline+0x30c>
     ae0:	mov	r3, #0
     ae4:	strb	r3, [r0]
     ae8:	adds	r7, r0, #1
     aec:	beq	a78 <mo_testline+0x70>
     af0:	ldrb	r3, [r0, #1]
     af4:	cmp	r3, #0
     af8:	beq	a78 <mo_testline+0x70>
     afc:	mov	r1, #64	; 0x40
     b00:	mov	r0, r7
     b04:	bl	834 <strchr@plt>
     b08:	cmp	r0, #0
     b0c:	beq	1070 <mo_testline+0x668>
     b10:	mov	r3, #0
     b14:	strb	r3, [r0]
     b18:	adds	r8, r0, #1
     b1c:	beq	a78 <mo_testline+0x70>
     b20:	ldrb	r3, [r0, #1]
     b24:	cmp	r3, #0
     b28:	beq	a78 <mo_testline+0x70>
     b2c:	sub	r2, fp, #192	; 0xc0
     b30:	sub	r1, fp, #164	; 0xa4
     b34:	mov	r0, r8
     b38:	bl	7c8 <parse_netmask@plt>
     b3c:	mov	r9, r0
     b40:	cmp	r0, #1
     b44:	beq	b74 <mo_testline+0x16c>
     b48:	cmp	r9, #3
     b4c:	moveq	r1, #10
     b50:	movne	r1, #2
     b54:	sub	r0, fp, #164	; 0xa4
     b58:	bl	888 <find_dline@plt>
     b5c:	mov	sl, r0
     b60:	cmp	r0, #0
     b64:	beq	ddc <mo_testline+0x3d4>
     b68:	ldr	r3, [r0]
     b6c:	tst	r3, #131072	; 0x20000
     b70:	bne	d20 <mo_testline+0x318>
     b74:	cmp	r7, #0
     b78:	beq	ea4 <mo_testline+0x49c>
     b7c:	mov	r2, #11
     b80:	mov	r1, r7
     b84:	sub	r0, fp, #176	; 0xb0
     b88:	bl	864 <rb_strlcpy@plt>
     b8c:	ldrb	r3, [r7]
     b90:	cmp	r3, #126	; 0x7e
     b94:	addeq	r7, r7, #1
     b98:	mov	r2, #11
     b9c:	mov	r1, r7
     ba0:	sub	r0, fp, #188	; 0xbc
     ba4:	bl	864 <rb_strlcpy@plt>
     ba8:	cmp	r9, #1
     bac:	moveq	r3, #0
     bb0:	moveq	r2, r3
     bb4:	beq	bc8 <mo_testline+0x1c0>
     bb8:	cmp	r9, #3
     bbc:	beq	ed0 <mo_testline+0x4c8>
     bc0:	sub	r3, fp, #164	; 0xa4
     bc4:	mov	r2, #2
     bc8:	mov	r1, #0
     bcc:	str	r1, [sp, #8]
     bd0:	str	r2, [sp, #4]
     bd4:	str	r3, [sp]
     bd8:	sub	r3, fp, #188	; 0xbc
     bdc:	sub	r2, fp, #176	; 0xb0
     be0:	mov	r0, r8
     be4:	bl	7bc <find_address_conf@plt>
     be8:	subs	r7, r0, #0
     bec:	beq	10ec <mo_testline+0x6e4>
     bf0:	ldr	r3, [r7]
     bf4:	tst	r3, #64	; 0x40
     bf8:	bne	edc <mo_testline+0x4d4>
     bfc:	cmp	r6, #0
     c00:	beq	fc0 <mo_testline+0x5b8>
     c04:	mov	r0, r6
     c08:	bl	7f8 <find_nick_resv@plt>
     c0c:	subs	r8, r0, #0
     c10:	beq	fc0 <mo_testline+0x5b8>
     c14:	add	r7, r4, #88	; 0x58
     c18:	ldr	r6, [r8, #36]	; 0x24
     c1c:	cmp	r6, #0
     c20:	bne	1134 <mo_testline+0x72c>
     c24:	mov	r1, #81	; 0x51
     c28:	mov	r3, #0
     c2c:	ldr	r2, [pc, #1324]	; 1160 <mo_testline+0x758>
     c30:	ldr	r2, [r5, r2]
     c34:	ldr	r0, [r8, #20]
     c38:	str	r0, [sp, #12]
     c3c:	ldr	r0, [r8, #16]
     c40:	str	r0, [sp, #8]
     c44:	str	r3, [sp, #4]
     c48:	str	r1, [sp]
     c4c:	mov	r3, r7
     c50:	add	r2, r2, #88	; 0x58
     c54:	ldr	r1, [pc, #1300]	; 1170 <mo_testline+0x768>
     c58:	add	r1, pc, r1
     c5c:	mov	r0, r4
     c60:	bl	7b0 <sendto_one@plt>
     c64:	ldr	r3, [r8, #32]
     c68:	sub	r3, r3, #1
     c6c:	str	r3, [r8, #32]
     c70:	b	a78 <mo_testline+0x70>
     c74:	mov	r0, r6
     c78:	bl	87c <hash_find_resv@plt>
     c7c:	subs	r7, r0, #0
     c80:	beq	ce4 <mo_testline+0x2dc>
     c84:	add	r8, r4, #88	; 0x58
     c88:	ldr	r6, [r7, #36]	; 0x24
     c8c:	cmp	r6, #0
     c90:	bne	104c <mo_testline+0x644>
     c94:	mov	r0, #81	; 0x51
     c98:	mov	r3, #0
     c9c:	ldr	r2, [pc, #1212]	; 1160 <mo_testline+0x758>
     ca0:	ldr	r2, [r5, r2]
     ca4:	ldr	r1, [r7, #20]
     ca8:	str	r1, [sp, #12]
     cac:	ldr	r1, [r7, #16]
     cb0:	str	r1, [sp, #8]
     cb4:	str	r3, [sp, #4]
     cb8:	str	r0, [sp]
     cbc:	mov	r3, r8
     cc0:	add	r2, r2, #88	; 0x58
     cc4:	ldr	r1, [pc, #1192]	; 1174 <mo_testline+0x76c>
     cc8:	add	r1, pc, r1
     ccc:	mov	r0, r4
     cd0:	bl	7b0 <sendto_one@plt>
     cd4:	ldr	r3, [r7, #32]
     cd8:	sub	r3, r3, #1
     cdc:	str	r3, [r7, #32]
     ce0:	b	a78 <mo_testline+0x70>
     ce4:	ldr	r3, [pc, #1140]	; 1160 <mo_testline+0x758>
     ce8:	ldr	r2, [r5, r3]
     cec:	ldr	r3, [fp, #4]
     cf0:	ldr	r3, [r3, #4]
     cf4:	str	r3, [sp]
     cf8:	add	r3, r4, #88	; 0x58
     cfc:	add	r2, r2, #88	; 0x58
     d00:	ldr	r1, [pc, #1136]	; 1178 <mo_testline+0x770>
     d04:	add	r1, pc, r1
     d08:	mov	r0, r4
     d0c:	bl	7b0 <sendto_one@plt>
     d10:	b	a78 <mo_testline+0x70>
     d14:	mov	r7, r6
     d18:	mov	r6, #0
     d1c:	b	afc <mo_testline+0xf4>
     d20:	sub	r3, fp, #208	; 0xd0
     d24:	str	r3, [sp, #4]
     d28:	sub	r3, fp, #196	; 0xc4
     d2c:	str	r3, [sp]
     d30:	sub	r3, fp, #204	; 0xcc
     d34:	sub	r2, fp, #200	; 0xc8
     d38:	mov	r1, r0
     d3c:	mov	r0, r4
     d40:	bl	7d4 <get_printable_kline@plt>
     d44:	ldr	r3, [fp, #-204]	; 0xffffff34
     d48:	ldr	r2, [fp, #-208]	; 0xffffff30
     d4c:	ldr	r1, [pc, #1064]	; 117c <mo_testline+0x774>
     d50:	add	r1, pc, r1
     d54:	cmp	r2, #0
     d58:	beq	dcc <mo_testline+0x3c4>
     d5c:	str	r2, [sp, #4]
     d60:	str	r1, [sp]
     d64:	ldr	r2, [pc, #1044]	; 1180 <mo_testline+0x778>
     d68:	add	r2, pc, r2
     d6c:	mov	r1, #512	; 0x200
     d70:	sub	r0, fp, #720	; 0x2d0
     d74:	bl	840 <snprintf@plt>
     d78:	add	r7, r4, #88	; 0x58
     d7c:	ldr	r3, [sl, #4]
     d80:	tst	r3, #8388608	; 0x800000
     d84:	bne	109c <mo_testline+0x694>
     d88:	mov	r1, #68	; 0x44
     d8c:	mov	r3, #0
     d90:	ldr	r2, [pc, #968]	; 1160 <mo_testline+0x758>
     d94:	ldr	r2, [r5, r2]
     d98:	sub	r0, fp, #720	; 0x2d0
     d9c:	str	r0, [sp, #12]
     da0:	ldr	r0, [fp, #-200]	; 0xffffff38
     da4:	str	r0, [sp, #8]
     da8:	str	r3, [sp, #4]
     dac:	str	r1, [sp]
     db0:	mov	r3, r7
     db4:	add	r2, r2, #88	; 0x58
     db8:	ldr	r1, [pc, #964]	; 1184 <mo_testline+0x77c>
     dbc:	add	r1, pc, r1
     dc0:	mov	r0, r4
     dc4:	bl	7b0 <sendto_one@plt>
     dc8:	b	a78 <mo_testline+0x70>
     dcc:	ldr	r1, [pc, #948]	; 1188 <mo_testline+0x780>
     dd0:	add	r1, pc, r1
     dd4:	mov	r2, r1
     dd8:	b	d5c <mo_testline+0x354>
     ddc:	sub	r0, fp, #164	; 0xa4
     de0:	bl	84c <is_reject_ip@plt>
     de4:	cmp	r0, #0
     de8:	bne	e50 <mo_testline+0x448>
     dec:	sub	r0, fp, #164	; 0xa4
     df0:	bl	7e0 <is_throttle_ip@plt>
     df4:	cmp	r0, #0
     df8:	beq	b74 <mo_testline+0x16c>
     dfc:	add	sl, r4, #88	; 0x58
     e00:	ldr	r3, [pc, #856]	; 1160 <mo_testline+0x758>
     e04:	ldr	r3, [r5, r3]
     e08:	add	r3, r3, #88	; 0x58
     e0c:	str	r3, [fp, #-728]	; 0xfffffd28
     e10:	ldr	r3, [pc, #884]	; 118c <mo_testline+0x784>
     e14:	add	r3, pc, r3
     e18:	str	r3, [sp, #12]
     e1c:	str	r8, [sp, #8]
     e20:	mov	r1, #60	; 0x3c
     e24:	bl	1324 <__divsi3>
     e28:	str	r0, [sp, #4]
     e2c:	mov	r3, #33	; 0x21
     e30:	str	r3, [sp]
     e34:	mov	r3, sl
     e38:	ldr	r2, [fp, #-728]	; 0xfffffd28
     e3c:	ldr	r1, [pc, #844]	; 1190 <mo_testline+0x788>
     e40:	add	r1, pc, r1
     e44:	mov	r0, r4
     e48:	bl	7b0 <sendto_one@plt>
     e4c:	b	b74 <mo_testline+0x16c>
     e50:	add	sl, r4, #88	; 0x58
     e54:	ldr	r3, [pc, #772]	; 1160 <mo_testline+0x758>
     e58:	ldr	r3, [r5, r3]
     e5c:	add	r3, r3, #88	; 0x58
     e60:	str	r3, [fp, #-728]	; 0xfffffd28
     e64:	ldr	r3, [pc, #808]	; 1194 <mo_testline+0x78c>
     e68:	add	r3, pc, r3
     e6c:	str	r3, [sp, #12]
     e70:	str	r8, [sp, #8]
     e74:	mov	r1, #60	; 0x3c
     e78:	bl	1324 <__divsi3>
     e7c:	str	r0, [sp, #4]
     e80:	mov	r3, #33	; 0x21
     e84:	str	r3, [sp]
     e88:	mov	r3, sl
     e8c:	ldr	r2, [fp, #-728]	; 0xfffffd28
     e90:	ldr	r1, [pc, #768]	; 1198 <mo_testline+0x790>
     e94:	add	r1, pc, r1
     e98:	mov	r0, r4
     e9c:	bl	7b0 <sendto_one@plt>
     ea0:	b	dec <mo_testline+0x3e4>
     ea4:	ldr	r7, [pc, #752]	; 119c <mo_testline+0x794>
     ea8:	add	r7, pc, r7
     eac:	mov	r2, #11
     eb0:	mov	r1, r7
     eb4:	sub	r0, fp, #176	; 0xb0
     eb8:	bl	864 <rb_strlcpy@plt>
     ebc:	mov	r2, #11
     ec0:	mov	r1, r7
     ec4:	sub	r0, fp, #188	; 0xbc
     ec8:	bl	864 <rb_strlcpy@plt>
     ecc:	b	ba8 <mo_testline+0x1a0>
     ed0:	sub	r3, fp, #164	; 0xa4
     ed4:	mov	r2, #10
     ed8:	b	bc8 <mo_testline+0x1c0>
     edc:	sub	r3, fp, #208	; 0xd0
     ee0:	str	r3, [sp, #4]
     ee4:	sub	r3, fp, #196	; 0xc4
     ee8:	str	r3, [sp]
     eec:	sub	r3, fp, #204	; 0xcc
     ef0:	sub	r2, fp, #200	; 0xc8
     ef4:	mov	r1, r7
     ef8:	mov	r0, r4
     efc:	bl	7d4 <get_printable_kline@plt>
     f00:	ldr	r3, [fp, #-200]	; 0xffffff38
     f04:	str	r3, [sp]
     f08:	ldr	r3, [fp, #-196]	; 0xffffff3c
     f0c:	ldr	r2, [pc, #652]	; 11a0 <mo_testline+0x798>
     f10:	add	r2, pc, r2
     f14:	mov	r1, #75	; 0x4b
     f18:	ldr	r0, [pc, #644]	; 11a4 <mo_testline+0x79c>
     f1c:	add	r0, pc, r0
     f20:	bl	840 <snprintf@plt>
     f24:	ldr	r3, [fp, #-204]	; 0xffffff34
     f28:	ldr	r2, [fp, #-208]	; 0xffffff30
     f2c:	ldr	r1, [pc, #628]	; 11a8 <mo_testline+0x7a0>
     f30:	add	r1, pc, r1
     f34:	cmp	r2, #0
     f38:	beq	fb0 <mo_testline+0x5a8>
     f3c:	str	r2, [sp, #4]
     f40:	str	r1, [sp]
     f44:	ldr	r2, [pc, #608]	; 11ac <mo_testline+0x7a4>
     f48:	add	r2, pc, r2
     f4c:	mov	r1, #512	; 0x200
     f50:	sub	r0, fp, #720	; 0x2d0
     f54:	bl	840 <snprintf@plt>
     f58:	add	r8, r4, #88	; 0x58
     f5c:	ldr	r3, [r7, #4]
     f60:	tst	r3, #8388608	; 0x800000
     f64:	bne	10c4 <mo_testline+0x6bc>
     f68:	mov	r1, #75	; 0x4b
     f6c:	mov	r3, #0
     f70:	ldr	r2, [pc, #488]	; 1160 <mo_testline+0x758>
     f74:	ldr	r2, [r5, r2]
     f78:	sub	r0, fp, #720	; 0x2d0
     f7c:	str	r0, [sp, #12]
     f80:	ldr	r0, [pc, #552]	; 11b0 <mo_testline+0x7a8>
     f84:	add	r0, pc, r0
     f88:	str	r0, [sp, #8]
     f8c:	str	r3, [sp, #4]
     f90:	str	r1, [sp]
     f94:	mov	r3, r8
     f98:	add	r2, r2, #88	; 0x58
     f9c:	ldr	r1, [pc, #528]	; 11b4 <mo_testline+0x7ac>
     fa0:	add	r1, pc, r1
     fa4:	mov	r0, r4
     fa8:	bl	7b0 <sendto_one@plt>
     fac:	b	a78 <mo_testline+0x70>
     fb0:	ldr	r1, [pc, #512]	; 11b8 <mo_testline+0x7b0>
     fb4:	add	r1, pc, r1
     fb8:	mov	r2, r1
     fbc:	b	f3c <mo_testline+0x534>
     fc0:	ldr	r3, [r7]
     fc4:	tst	r3, #2
     fc8:	beq	1104 <mo_testline+0x6fc>
     fcc:	ldr	r6, [r7, #12]
     fd0:	ldr	r5, [r7, #24]
     fd4:	cmp	r5, #0
     fd8:	beq	1034 <mo_testline+0x62c>
     fdc:	ldrb	r3, [r5]
     fe0:	cmp	r3, #0
     fe4:	beq	1040 <mo_testline+0x638>
     fe8:	ldr	r2, [r7, #28]
     fec:	mov	r1, r7
     ff0:	mov	r0, r4
     ff4:	bl	804 <show_iline_prefix@plt>
     ff8:	ldr	r3, [r7, #48]	; 0x30
     ffc:	str	r3, [sp, #16]
    1000:	ldr	r3, [r7, #32]
    1004:	str	r3, [sp, #12]
    1008:	ldr	r3, [r7, #16]
    100c:	str	r3, [sp, #8]
    1010:	str	r0, [sp, #4]
    1014:	str	r5, [sp]
    1018:	mov	r3, r6
    101c:	ldr	r2, [pc, #408]	; 11bc <mo_testline+0x7b4>
    1020:	add	r2, pc, r2
    1024:	mov	r1, #215	; 0xd7
    1028:	mov	r0, r4
    102c:	bl	81c <sendto_one_numeric@plt>
    1030:	b	a78 <mo_testline+0x70>
    1034:	ldr	r5, [pc, #388]	; 11c0 <mo_testline+0x7b8>
    1038:	add	r5, pc, r5
    103c:	b	fe8 <mo_testline+0x5e0>
    1040:	ldr	r5, [pc, #380]	; 11c4 <mo_testline+0x7bc>
    1044:	add	r5, pc, r5
    1048:	b	fe8 <mo_testline+0x5e0>
    104c:	bl	798 <rb_current_time@plt>
    1050:	sub	r0, r6, r0
    1054:	ldr	r3, [pc, #364]	; 11c8 <mo_testline+0x7c0>
    1058:	smull	r2, r3, r3, r0
    105c:	add	r3, r3, r0
    1060:	asr	r0, r0, #31
    1064:	rsb	r3, r0, r3, asr #5
    1068:	mov	r0, #113	; 0x71
    106c:	b	c9c <mo_testline+0x294>
    1070:	sub	r2, fp, #192	; 0xc0
    1074:	sub	r1, fp, #164	; 0xa4
    1078:	mov	r0, r7
    107c:	bl	7c8 <parse_netmask@plt>
    1080:	mov	r9, r0
    1084:	cmp	r0, #1
    1088:	moveq	r8, r7
    108c:	beq	ea4 <mo_testline+0x49c>
    1090:	mov	r8, r7
    1094:	mov	r7, #0
    1098:	b	b48 <mo_testline+0x140>
    109c:	ldr	r6, [sl, #36]	; 0x24
    10a0:	bl	798 <rb_current_time@plt>
    10a4:	sub	r0, r6, r0
    10a8:	ldr	r3, [pc, #280]	; 11c8 <mo_testline+0x7c0>
    10ac:	smull	r2, r3, r3, r0
    10b0:	add	r2, r3, r0
    10b4:	asr	r3, r0, #31
    10b8:	rsb	r3, r3, r2, asr #5
    10bc:	mov	r1, #100	; 0x64
    10c0:	b	d90 <mo_testline+0x388>
    10c4:	ldr	r6, [r7, #36]	; 0x24
    10c8:	bl	798 <rb_current_time@plt>
    10cc:	sub	r0, r6, r0
    10d0:	ldr	r3, [pc, #240]	; 11c8 <mo_testline+0x7c0>
    10d4:	smull	r2, r3, r3, r0
    10d8:	add	r2, r3, r0
    10dc:	asr	r3, r0, #31
    10e0:	rsb	r3, r3, r2, asr #5
    10e4:	mov	r1, #107	; 0x6b
    10e8:	b	f70 <mo_testline+0x568>
    10ec:	cmp	r6, #0
    10f0:	beq	1104 <mo_testline+0x6fc>
    10f4:	mov	r0, r6
    10f8:	bl	7f8 <find_nick_resv@plt>
    10fc:	subs	r8, r0, #0
    1100:	bne	c14 <mo_testline+0x20c>
    1104:	ldr	r3, [pc, #84]	; 1160 <mo_testline+0x758>
    1108:	ldr	r2, [r5, r3]
    110c:	ldr	r3, [fp, #4]
    1110:	ldr	r3, [r3, #4]
    1114:	str	r3, [sp]
    1118:	add	r3, r4, #88	; 0x58
    111c:	add	r2, r2, #88	; 0x58
    1120:	ldr	r1, [pc, #164]	; 11cc <mo_testline+0x7c4>
    1124:	add	r1, pc, r1
    1128:	mov	r0, r4
    112c:	bl	7b0 <sendto_one@plt>
    1130:	b	a78 <mo_testline+0x70>
    1134:	bl	798 <rb_current_time@plt>
    1138:	sub	r0, r6, r0
    113c:	ldr	r3, [pc, #132]	; 11c8 <mo_testline+0x7c0>
    1140:	smull	r2, r3, r3, r0
    1144:	add	r2, r3, r0
    1148:	asr	r3, r0, #31
    114c:	rsb	r3, r3, r2, asr #5
    1150:	mov	r1, #113	; 0x71
    1154:	b	c2c <mo_testline+0x224>
    1158:	.word	0x000115dc
    115c:	.word	0x00000b7c
    1160:	.word	0x0000007c
    1164:	.word	0x00000b98
    1168:	.word	0x00000b5c
    116c:	.word	0x00000070
    1170:	.word	0x000009a4
    1174:	.word	0x00000934
    1178:	.word	0x00000914
    117c:	.word	0x0000085c
    1180:	.word	0x000008cc
    1184:	.word	0x00000840
    1188:	.word	0x000008c0
    118c:	.word	0x00000838
    1190:	.word	0x000007bc
    1194:	.word	0x000007d4
    1198:	.word	0x00000768
    119c:	.word	0x000007b0
    11a0:	.word	0x00000750
    11a4:	.word	0x00011220
    11a8:	.word	0x0000067c
    11ac:	.word	0x000006ec
    11b0:	.word	0x000111b8
    11b4:	.word	0x0000065c
    11b8:	.word	0x000006dc
    11bc:	.word	0x00000648
    11c0:	.word	0x00000578
    11c4:	.word	0x0000056c
    11c8:	.word	0x88888889
    11cc:	.word	0x000004f4

000011d0 <mo_testgecos>:
    11d0:	push	{r4, r5, r6, r7, r8, lr}
    11d4:	sub	sp, sp, #16
    11d8:	mov	r4, r2
    11dc:	ldr	r5, [pc, #288]	; 1304 <mo_testgecos+0x134>
    11e0:	add	r5, pc, r5
    11e4:	ldr	r3, [r2, #24]
    11e8:	cmp	r3, #0
    11ec:	beq	1210 <mo_testgecos+0x40>
    11f0:	ldr	r0, [r3, #36]	; 0x24
    11f4:	cmp	r0, #0
    11f8:	beq	1210 <mo_testgecos+0x40>
    11fc:	ldr	r1, [pc, #260]	; 1308 <mo_testgecos+0x138>
    1200:	add	r1, pc, r1
    1204:	bl	870 <privilegeset_in_set@plt>
    1208:	cmp	r0, #0
    120c:	bne	1244 <mo_testgecos+0x74>
    1210:	ldr	r3, [pc, #244]	; 130c <mo_testgecos+0x13c>
    1214:	ldr	r2, [r5, r3]
    1218:	ldr	r3, [pc, #240]	; 1310 <mo_testgecos+0x140>
    121c:	add	r3, pc, r3
    1220:	str	r3, [sp]
    1224:	add	r3, r4, #88	; 0x58
    1228:	add	r2, r2, #88	; 0x58
    122c:	ldr	r1, [pc, #224]	; 1314 <mo_testgecos+0x144>
    1230:	add	r1, pc, r1
    1234:	mov	r0, r4
    1238:	bl	7b0 <sendto_one@plt>
    123c:	add	sp, sp, #16
    1240:	pop	{r4, r5, r6, r7, r8, pc}
    1244:	mov	r1, #0
    1248:	ldr	r3, [sp, #40]	; 0x28
    124c:	ldr	r0, [r3, #4]
    1250:	bl	858 <find_xline@plt>
    1254:	subs	r7, r0, #0
    1258:	beq	12b0 <mo_testgecos+0xe0>
    125c:	add	r8, r4, #88	; 0x58
    1260:	ldr	r6, [r7, #36]	; 0x24
    1264:	cmp	r6, #0
    1268:	bne	12e0 <mo_testgecos+0x110>
    126c:	mov	r1, #88	; 0x58
    1270:	mov	r0, #0
    1274:	ldr	r3, [pc, #144]	; 130c <mo_testgecos+0x13c>
    1278:	ldr	r2, [r5, r3]
    127c:	ldr	r3, [r7, #20]
    1280:	str	r3, [sp, #12]
    1284:	ldr	r3, [r7, #16]
    1288:	str	r3, [sp, #8]
    128c:	str	r0, [sp, #4]
    1290:	str	r1, [sp]
    1294:	mov	r3, r8
    1298:	add	r2, r2, #88	; 0x58
    129c:	ldr	r1, [pc, #116]	; 1318 <mo_testgecos+0x148>
    12a0:	add	r1, pc, r1
    12a4:	mov	r0, r4
    12a8:	bl	7b0 <sendto_one@plt>
    12ac:	b	123c <mo_testgecos+0x6c>
    12b0:	ldr	r3, [pc, #84]	; 130c <mo_testgecos+0x13c>
    12b4:	ldr	r2, [r5, r3]
    12b8:	ldr	r3, [sp, #40]	; 0x28
    12bc:	ldr	r3, [r3, #4]
    12c0:	str	r3, [sp]
    12c4:	add	r3, r4, #88	; 0x58
    12c8:	add	r2, r2, #88	; 0x58
    12cc:	ldr	r1, [pc, #72]	; 131c <mo_testgecos+0x14c>
    12d0:	add	r1, pc, r1
    12d4:	mov	r0, r4
    12d8:	bl	7b0 <sendto_one@plt>
    12dc:	b	123c <mo_testgecos+0x6c>
    12e0:	bl	798 <rb_current_time@plt>
    12e4:	sub	r6, r6, r0
    12e8:	ldr	r0, [pc, #48]	; 1320 <mo_testgecos+0x150>
    12ec:	smull	r3, r0, r0, r6
    12f0:	add	r0, r0, r6
    12f4:	asr	r6, r6, #31
    12f8:	rsb	r0, r6, r0, asr #5
    12fc:	mov	r1, #120	; 0x78
    1300:	b	1274 <mo_testgecos+0xa4>
    1304:	.word	0x00010e18
    1308:	.word	0x000003b8
    130c:	.word	0x0000007c
    1310:	.word	0x000003d4
    1314:	.word	0x00000398
    1318:	.word	0x0000035c
    131c:	.word	0x00000348
    1320:	.word	0x88888889

00001324 <__divsi3>:
    1324:	cmp	r1, #0
    1328:	beq	1534 <.divsi3_skip_div0_test+0x208>

0000132c <.divsi3_skip_div0_test>:
    132c:	eor	ip, r0, r1
    1330:	rsbmi	r1, r1, #0
    1334:	subs	r2, r1, #1
    1338:	beq	1500 <.divsi3_skip_div0_test+0x1d4>
    133c:	movs	r3, r0
    1340:	rsbmi	r3, r0, #0
    1344:	cmp	r3, r1
    1348:	bls	150c <.divsi3_skip_div0_test+0x1e0>
    134c:	tst	r1, r2
    1350:	beq	151c <.divsi3_skip_div0_test+0x1f0>
    1354:	clz	r2, r3
    1358:	clz	r0, r1
    135c:	sub	r2, r0, r2
    1360:	rsbs	r2, r2, #31
    1364:	addne	r2, r2, r2, lsl #1
    1368:	mov	r0, #0
    136c:	addne	pc, pc, r2, lsl #2
    1370:	nop			; (mov r0, r0)
    1374:	cmp	r3, r1, lsl #31
    1378:	adc	r0, r0, r0
    137c:	subcs	r3, r3, r1, lsl #31
    1380:	cmp	r3, r1, lsl #30
    1384:	adc	r0, r0, r0
    1388:	subcs	r3, r3, r1, lsl #30
    138c:	cmp	r3, r1, lsl #29
    1390:	adc	r0, r0, r0
    1394:	subcs	r3, r3, r1, lsl #29
    1398:	cmp	r3, r1, lsl #28
    139c:	adc	r0, r0, r0
    13a0:	subcs	r3, r3, r1, lsl #28
    13a4:	cmp	r3, r1, lsl #27
    13a8:	adc	r0, r0, r0
    13ac:	subcs	r3, r3, r1, lsl #27
    13b0:	cmp	r3, r1, lsl #26
    13b4:	adc	r0, r0, r0
    13b8:	subcs	r3, r3, r1, lsl #26
    13bc:	cmp	r3, r1, lsl #25
    13c0:	adc	r0, r0, r0
    13c4:	subcs	r3, r3, r1, lsl #25
    13c8:	cmp	r3, r1, lsl #24
    13cc:	adc	r0, r0, r0
    13d0:	subcs	r3, r3, r1, lsl #24
    13d4:	cmp	r3, r1, lsl #23
    13d8:	adc	r0, r0, r0
    13dc:	subcs	r3, r3, r1, lsl #23
    13e0:	cmp	r3, r1, lsl #22
    13e4:	adc	r0, r0, r0
    13e8:	subcs	r3, r3, r1, lsl #22
    13ec:	cmp	r3, r1, lsl #21
    13f0:	adc	r0, r0, r0
    13f4:	subcs	r3, r3, r1, lsl #21
    13f8:	cmp	r3, r1, lsl #20
    13fc:	adc	r0, r0, r0
    1400:	subcs	r3, r3, r1, lsl #20
    1404:	cmp	r3, r1, lsl #19
    1408:	adc	r0, r0, r0
    140c:	subcs	r3, r3, r1, lsl #19
    1410:	cmp	r3, r1, lsl #18
    1414:	adc	r0, r0, r0
    1418:	subcs	r3, r3, r1, lsl #18
    141c:	cmp	r3, r1, lsl #17
    1420:	adc	r0, r0, r0
    1424:	subcs	r3, r3, r1, lsl #17
    1428:	cmp	r3, r1, lsl #16
    142c:	adc	r0, r0, r0
    1430:	subcs	r3, r3, r1, lsl #16
    1434:	cmp	r3, r1, lsl #15
    1438:	adc	r0, r0, r0
    143c:	subcs	r3, r3, r1, lsl #15
    1440:	cmp	r3, r1, lsl #14
    1444:	adc	r0, r0, r0
    1448:	subcs	r3, r3, r1, lsl #14
    144c:	cmp	r3, r1, lsl #13
    1450:	adc	r0, r0, r0
    1454:	subcs	r3, r3, r1, lsl #13
    1458:	cmp	r3, r1, lsl #12
    145c:	adc	r0, r0, r0
    1460:	subcs	r3, r3, r1, lsl #12
    1464:	cmp	r3, r1, lsl #11
    1468:	adc	r0, r0, r0
    146c:	subcs	r3, r3, r1, lsl #11
    1470:	cmp	r3, r1, lsl #10
    1474:	adc	r0, r0, r0
    1478:	subcs	r3, r3, r1, lsl #10
    147c:	cmp	r3, r1, lsl #9
    1480:	adc	r0, r0, r0
    1484:	subcs	r3, r3, r1, lsl #9
    1488:	cmp	r3, r1, lsl #8
    148c:	adc	r0, r0, r0
    1490:	subcs	r3, r3, r1, lsl #8
    1494:	cmp	r3, r1, lsl #7
    1498:	adc	r0, r0, r0
    149c:	subcs	r3, r3, r1, lsl #7
    14a0:	cmp	r3, r1, lsl #6
    14a4:	adc	r0, r0, r0
    14a8:	subcs	r3, r3, r1, lsl #6
    14ac:	cmp	r3, r1, lsl #5
    14b0:	adc	r0, r0, r0
    14b4:	subcs	r3, r3, r1, lsl #5
    14b8:	cmp	r3, r1, lsl #4
    14bc:	adc	r0, r0, r0
    14c0:	subcs	r3, r3, r1, lsl #4
    14c4:	cmp	r3, r1, lsl #3
    14c8:	adc	r0, r0, r0
    14cc:	subcs	r3, r3, r1, lsl #3
    14d0:	cmp	r3, r1, lsl #2
    14d4:	adc	r0, r0, r0
    14d8:	subcs	r3, r3, r1, lsl #2
    14dc:	cmp	r3, r1, lsl #1
    14e0:	adc	r0, r0, r0
    14e4:	subcs	r3, r3, r1, lsl #1
    14e8:	cmp	r3, r1
    14ec:	adc	r0, r0, r0
    14f0:	subcs	r3, r3, r1
    14f4:	cmp	ip, #0
    14f8:	rsbmi	r0, r0, #0
    14fc:	bx	lr
    1500:	teq	ip, r0
    1504:	rsbmi	r0, r0, #0
    1508:	bx	lr
    150c:	movcc	r0, #0
    1510:	asreq	r0, ip, #31
    1514:	orreq	r0, r0, #1
    1518:	bx	lr
    151c:	clz	r2, r1
    1520:	rsb	r2, r2, #31
    1524:	cmp	ip, #0
    1528:	lsr	r0, r3, r2
    152c:	rsbmi	r0, r0, #0
    1530:	bx	lr
    1534:	cmp	r0, #0
    1538:	mvngt	r0, #-2147483648	; 0x80000000
    153c:	movlt	r0, #-2147483648	; 0x80000000
    1540:	b	1564 <__aeabi_idiv0>

00001544 <__aeabi_idivmod>:
    1544:	cmp	r1, #0
    1548:	beq	1534 <.divsi3_skip_div0_test+0x208>
    154c:	push	{r0, r1, lr}
    1550:	bl	132c <.divsi3_skip_div0_test>
    1554:	pop	{r1, r2, lr}
    1558:	mul	r3, r2, r0
    155c:	sub	r1, r1, r3
    1560:	bx	lr

00001564 <__aeabi_idiv0>:
    1564:	push	{r1, lr}
    1568:	mov	r0, #8
    156c:	bl	78c <raise@plt>
    1570:	pop	{r1, pc}

Disassembly of section .fini:

00001574 <_fini>:
    1574:	push	{r3, lr}
    1578:	pop	{r3, pc}
