
../repos/daq-2.0.7/sfbpf/.libs/libsfbpf.so.0.0.1:     file format elf32-littlearm


Disassembly of section .init:

00000ddc <_init>:
 ddc:	push	{r3, lr}
 de0:	bl	fdc <call_weak_fn>
 de4:	pop	{r3, pc}

Disassembly of section .plt:

00000de8 <.plt>:
 de8:	push	{lr}		; (str lr, [sp, #-4]!)
 dec:	ldr	lr, [pc, #4]	; df8 <.plt+0x10>
 df0:	add	lr, pc, lr
 df4:	ldr	pc, [lr, #8]!
 df8:	.word	0x00046208

00000dfc <calloc@plt>:
 dfc:	add	ip, pc, #0, 12
 e00:	add	ip, ip, #286720	; 0x46000
 e04:	ldr	pc, [ip, #520]!	; 0x208

00000e08 <strcmp@plt>:
 e08:	add	ip, pc, #0, 12
 e0c:	add	ip, ip, #286720	; 0x46000
 e10:	ldr	pc, [ip, #512]!	; 0x200

00000e14 <__cxa_finalize@plt>:
 e14:	add	ip, pc, #0, 12
 e18:	add	ip, ip, #286720	; 0x46000
 e1c:	ldr	pc, [ip, #504]!	; 0x1f8

00000e20 <printf@plt>:
 e20:	add	ip, pc, #0, 12
 e24:	add	ip, ip, #286720	; 0x46000
 e28:	ldr	pc, [ip, #496]!	; 0x1f0

00000e2c <fopen@plt>:
 e2c:	add	ip, pc, #0, 12
 e30:	add	ip, ip, #286720	; 0x46000
 e34:	ldr	pc, [ip, #488]!	; 0x1e8

00000e38 <getprotobyname@plt>:
 e38:	add	ip, pc, #0, 12
 e3c:	add	ip, ip, #286720	; 0x46000
 e40:	ldr	pc, [ip, #480]!	; 0x1e0

00000e44 <longjmp@plt>:
 e44:	add	ip, pc, #0, 12
 e48:	add	ip, ip, #286720	; 0x46000
 e4c:	ldr	pc, [ip, #472]!	; 0x1d8

00000e50 <_setjmp@plt>:
 e50:	add	ip, pc, #0, 12
 e54:	add	ip, ip, #286720	; 0x46000
 e58:	ldr	pc, [ip, #464]!	; 0x1d0

00000e5c <free@plt>:
 e5c:	add	ip, pc, #0, 12
 e60:	add	ip, ip, #286720	; 0x46000
 e64:	ldr	pc, [ip, #456]!	; 0x1c8

00000e68 <getnetbyname@plt>:
 e68:	add	ip, pc, #0, 12
 e6c:	add	ip, ip, #286720	; 0x46000
 e70:	ldr	pc, [ip, #448]!	; 0x1c0

00000e74 <ferror@plt>:
 e74:	add	ip, pc, #0, 12
 e78:	add	ip, ip, #286720	; 0x46000
 e7c:	ldr	pc, [ip, #440]!	; 0x1b8

00000e80 <memcpy@plt>:
 e80:	add	ip, pc, #0, 12
 e84:	add	ip, ip, #286720	; 0x46000
 e88:	ldr	pc, [ip, #432]!	; 0x1b0

00000e8c <strdup@plt>:
 e8c:	add	ip, pc, #0, 12
 e90:	add	ip, ip, #286720	; 0x46000
 e94:	ldr	pc, [ip, #424]!	; 0x1a8

00000e98 <rewind@plt>:
 e98:	add	ip, pc, #0, 12
 e9c:	add	ip, ip, #286720	; 0x46000
 ea0:	ldr	pc, [ip, #416]!	; 0x1a0

00000ea4 <realloc@plt>:
 ea4:	add	ip, pc, #0, 12
 ea8:	add	ip, ip, #286720	; 0x46000
 eac:	ldr	pc, [ip, #408]!	; 0x198

00000eb0 <fwrite@plt>:
 eb0:	add	ip, pc, #0, 12
 eb4:	add	ip, ip, #286720	; 0x46000
 eb8:	ldr	pc, [ip, #400]!	; 0x190

00000ebc <fread@plt>:
 ebc:	add	ip, pc, #0, 12
 ec0:	add	ip, ip, #286720	; 0x46000
 ec4:	ldr	pc, [ip, #392]!	; 0x188

00000ec8 <puts@plt>:
 ec8:	add	ip, pc, #0, 12
 ecc:	add	ip, ip, #286720	; 0x46000
 ed0:	ldr	pc, [ip, #384]!	; 0x180

00000ed4 <malloc@plt>:
 ed4:	add	ip, pc, #0, 12
 ed8:	add	ip, ip, #286720	; 0x46000
 edc:	ldr	pc, [ip, #376]!	; 0x178

00000ee0 <__gmon_start__@plt>:
 ee0:	add	ip, pc, #0, 12
 ee4:	add	ip, ip, #286720	; 0x46000
 ee8:	ldr	pc, [ip, #368]!	; 0x170

00000eec <__ctype_b_loc@plt>:
 eec:	add	ip, pc, #0, 12
 ef0:	add	ip, ip, #286720	; 0x46000
 ef4:	ldr	pc, [ip, #360]!	; 0x168

00000ef8 <exit@plt>:
 ef8:	add	ip, pc, #0, 12
 efc:	add	ip, ip, #286720	; 0x46000
 f00:	ldr	pc, [ip, #352]!	; 0x160

00000f04 <strlen@plt>:
 f04:	add	ip, pc, #0, 12
 f08:	add	ip, ip, #286720	; 0x46000
 f0c:	ldr	pc, [ip, #344]!	; 0x158

00000f10 <strchr@plt>:
 f10:	add	ip, pc, #0, 12
 f14:	add	ip, ip, #286720	; 0x46000
 f18:	ldr	pc, [ip, #336]!	; 0x150

00000f1c <fprintf@plt>:
 f1c:	add	ip, pc, #0, 12
 f20:	add	ip, ip, #286720	; 0x46000
 f24:	ldr	pc, [ip, #328]!	; 0x148

00000f28 <__errno_location@plt>:
 f28:	add	ip, pc, #0, 12
 f2c:	add	ip, ip, #286720	; 0x46000
 f30:	ldr	pc, [ip, #320]!	; 0x140

00000f34 <getservbyname@plt>:
 f34:	add	ip, pc, #0, 12
 f38:	add	ip, ip, #286720	; 0x46000
 f3c:	ldr	pc, [ip, #312]!	; 0x138

00000f40 <memset@plt>:
 f40:	add	ip, pc, #0, 12
 f44:	add	ip, ip, #286720	; 0x46000
 f48:	ldr	pc, [ip, #304]!	; 0x130

00000f4c <putchar@plt>:
 f4c:	add	ip, pc, #0, 12
 f50:	add	ip, ip, #286720	; 0x46000
 f54:	ldr	pc, [ip, #296]!	; 0x128

00000f58 <strncpy@plt>:
 f58:	add	ip, pc, #0, 12
 f5c:	add	ip, ip, #286720	; 0x46000
 f60:	ldr	pc, [ip, #288]!	; 0x120

00000f64 <fileno@plt>:
 f64:	add	ip, pc, #0, 12
 f68:	add	ip, ip, #286720	; 0x46000
 f6c:	ldr	pc, [ip, #280]!	; 0x118

00000f70 <sscanf@plt>:
 f70:	add	ip, pc, #0, 12
 f74:	add	ip, ip, #286720	; 0x46000
 f78:	ldr	pc, [ip, #272]!	; 0x110

00000f7c <clearerr@plt>:
 f7c:	add	ip, pc, #0, 12
 f80:	add	ip, ip, #286720	; 0x46000
 f84:	ldr	pc, [ip, #264]!	; 0x108

00000f88 <vsnprintf@plt>:
 f88:	add	ip, pc, #0, 12
 f8c:	add	ip, ip, #286720	; 0x46000
 f90:	ldr	pc, [ip, #256]!	; 0x100

00000f94 <freeaddrinfo@plt>:
 f94:	add	ip, pc, #0, 12
 f98:	add	ip, ip, #286720	; 0x46000
 f9c:	ldr	pc, [ip, #248]!	; 0xf8

00000fa0 <getaddrinfo@plt>:
 fa0:	add	ip, pc, #0, 12
 fa4:	add	ip, ip, #286720	; 0x46000
 fa8:	ldr	pc, [ip, #240]!	; 0xf0

00000fac <gethostbyname@plt>:
 fac:	add	ip, pc, #0, 12
 fb0:	add	ip, ip, #286720	; 0x46000
 fb4:	ldr	pc, [ip, #232]!	; 0xe8

00000fb8 <isatty@plt>:
 fb8:	add	ip, pc, #0, 12
 fbc:	add	ip, ip, #286720	; 0x46000
 fc0:	ldr	pc, [ip, #224]!	; 0xe0

00000fc4 <abort@plt>:
 fc4:	add	ip, pc, #0, 12
 fc8:	add	ip, ip, #286720	; 0x46000
 fcc:	ldr	pc, [ip, #216]!	; 0xd8

00000fd0 <getc@plt>:
 fd0:	add	ip, pc, #0, 12
 fd4:	add	ip, ip, #286720	; 0x46000
 fd8:	ldr	pc, [ip, #208]!	; 0xd0

Disassembly of section .text:

00000fdc <call_weak_fn>:
     fdc:	ldr	r3, [pc, #20]	; ff8 <call_weak_fn+0x1c>
     fe0:	ldr	r2, [pc, #20]	; ffc <call_weak_fn+0x20>
     fe4:	add	r3, pc, r3
     fe8:	ldr	r2, [r3, r2]
     fec:	cmp	r2, #0
     ff0:	bxeq	lr
     ff4:	b	ee0 <__gmon_start__@plt>
     ff8:	.word	0x00046014
     ffc:	.word	0x000000bc

00001000 <deregister_tm_clones>:
    1000:	ldr	r0, [pc, #44]	; 1034 <deregister_tm_clones+0x34>
    1004:	ldr	r3, [pc, #44]	; 1038 <deregister_tm_clones+0x38>
    1008:	add	r0, pc, r0
    100c:	add	r3, pc, r3
    1010:	cmp	r3, r0
    1014:	ldr	r3, [pc, #32]	; 103c <deregister_tm_clones+0x3c>
    1018:	add	r3, pc, r3
    101c:	bxeq	lr
    1020:	ldr	r2, [pc, #24]	; 1040 <deregister_tm_clones+0x40>
    1024:	ldr	r3, [r3, r2]
    1028:	cmp	r3, #0
    102c:	bxeq	lr
    1030:	bx	r3
    1034:	.word	0x00046180
    1038:	.word	0x0004617c
    103c:	.word	0x00045fe0
    1040:	.word	0x000000b0

00001044 <register_tm_clones>:
    1044:	ldr	r0, [pc, #56]	; 1084 <register_tm_clones+0x40>
    1048:	ldr	r3, [pc, #56]	; 1088 <register_tm_clones+0x44>
    104c:	add	r0, pc, r0
    1050:	add	r3, pc, r3
    1054:	sub	r1, r3, r0
    1058:	ldr	r3, [pc, #44]	; 108c <register_tm_clones+0x48>
    105c:	asr	r1, r1, #2
    1060:	add	r3, pc, r3
    1064:	add	r1, r1, r1, lsr #31
    1068:	asrs	r1, r1, #1
    106c:	bxeq	lr
    1070:	ldr	r2, [pc, #24]	; 1090 <register_tm_clones+0x4c>
    1074:	ldr	r3, [r3, r2]
    1078:	cmp	r3, #0
    107c:	bxeq	lr
    1080:	bx	r3
    1084:	.word	0x0004613c
    1088:	.word	0x00046138
    108c:	.word	0x00045f98
    1090:	.word	0x000000cc

00001094 <__do_global_dtors_aux>:
    1094:	ldr	r3, [pc, #76]	; 10e8 <__do_global_dtors_aux+0x54>
    1098:	ldr	r2, [pc, #76]	; 10ec <__do_global_dtors_aux+0x58>
    109c:	add	r3, pc, r3
    10a0:	add	r2, pc, r2
    10a4:	ldrb	r3, [r3]
    10a8:	cmp	r3, #0
    10ac:	bxne	lr
    10b0:	ldr	r3, [pc, #56]	; 10f0 <__do_global_dtors_aux+0x5c>
    10b4:	push	{r4, lr}
    10b8:	ldr	r3, [r2, r3]
    10bc:	cmp	r3, #0
    10c0:	beq	10d0 <__do_global_dtors_aux+0x3c>
    10c4:	ldr	r3, [pc, #40]	; 10f4 <__do_global_dtors_aux+0x60>
    10c8:	ldr	r0, [pc, r3]
    10cc:	bl	e14 <__cxa_finalize@plt>
    10d0:	bl	1000 <deregister_tm_clones>
    10d4:	ldr	r3, [pc, #28]	; 10f8 <__do_global_dtors_aux+0x64>
    10d8:	mov	r2, #1
    10dc:	add	r3, pc, r3
    10e0:	strb	r2, [r3]
    10e4:	pop	{r4, pc}
    10e8:	.word	0x000460ec
    10ec:	.word	0x00045f58
    10f0:	.word	0x000000ac
    10f4:	.word	0x00046000
    10f8:	.word	0x000460ac

000010fc <frame_dummy>:
    10fc:	b	1044 <register_tm_clones>

00001100 <sfbpf_filter>:
    1100:	push	{r4, r5, r6, r7, fp, lr}
    1104:	add	fp, sp, #16
    1108:	sub	sp, sp, #64	; 0x40
    110c:	cmp	r0, #0
    1110:	mvneq	r0, #0
    1114:	subeq	sp, fp, #16
    1118:	popeq	{r4, r5, r6, r7, fp, pc}
    111c:	sub	ip, r0, #8
    1120:	mov	r4, #0
    1124:	mov	lr, #0
    1128:	b	1134 <sfbpf_filter+0x34>
    112c:	add	ip, ip, r4, lsl #3
    1130:	mov	r4, r0
    1134:	mov	r0, r4
    1138:	mov	r5, ip
    113c:	ldrh	r4, [ip, #8]!
    1140:	cmp	r4, #177	; 0xb1
    1144:	bhi	16c4 <sfbpf_filter+0x5c4>
    1148:	add	r6, pc, #8
    114c:	ldr	r7, [r6, r4, lsl #2]
    1150:	mov	r4, r2
    1154:	add	pc, r6, r7
    1158:	.word	0x000002c8
    115c:	.word	0x00000368
    1160:	.word	0x00000374
    1164:	.word	0x00000388
    1168:	.word	0x0000039c
    116c:	.word	0x000003a8
    1170:	.word	0x00000554
    1174:	.word	0x00000318
    1178:	.word	0x0000056c
    117c:	.word	0x0000056c
    1180:	.word	0x0000056c
    1184:	.word	0x0000056c
    1188:	.word	0x000003b0
    118c:	.word	0x0000056c
    1190:	.word	0x0000056c
    1194:	.word	0x0000056c
    1198:	.word	0x0000056c
    119c:	.word	0x0000056c
    11a0:	.word	0x0000056c
    11a4:	.word	0x0000056c
    11a8:	.word	0x000003b8
    11ac:	.word	0x000003c4
    11b0:	.word	0x00000558
    11b4:	.word	0x0000056c
    11b8:	.word	0x0000056c
    11bc:	.word	0x0000056c
    11c0:	.word	0x0000056c
    11c4:	.word	0x0000056c
    11c8:	.word	0x00000324
    11cc:	.word	0x000003dc
    11d0:	.word	0x0000056c
    11d4:	.word	0x0000056c
    11d8:	.word	0x000003f0
    11dc:	.word	0x0000056c
    11e0:	.word	0x0000056c
    11e4:	.word	0x0000056c
    11e8:	.word	0x000003f8
    11ec:	.word	0x00000404
    11f0:	.word	0x0000056c
    11f4:	.word	0x0000056c
    11f8:	.word	0x0000041c
    11fc:	.word	0x0000056c
    1200:	.word	0x0000056c
    1204:	.word	0x0000056c
    1208:	.word	0x00000424
    120c:	.word	0x0000042c
    1210:	.word	0x0000056c
    1214:	.word	0x0000056c
    1218:	.word	0x00000440
    121c:	.word	0x0000056c
    1220:	.word	0x0000056c
    1224:	.word	0x0000056c
    1228:	.word	0x00000454
    122c:	.word	0x00000460
    1230:	.word	0x0000056c
    1234:	.word	0x0000056c
    1238:	.word	0x0000056c
    123c:	.word	0x0000056c
    1240:	.word	0x0000056c
    1244:	.word	0x0000056c
    1248:	.word	0x00000478
    124c:	.word	0x00000488
    1250:	.word	0x0000056c
    1254:	.word	0x0000056c
    1258:	.word	0x0000049c
    125c:	.word	0x0000056c
    1260:	.word	0x0000056c
    1264:	.word	0x0000056c
    1268:	.word	0x0000053c
    126c:	.word	0x0000032c
    1270:	.word	0x0000056c
    1274:	.word	0x0000056c
    1278:	.word	0x000004bc
    127c:	.word	0x0000056c
    1280:	.word	0x0000056c
    1284:	.word	0x0000056c
    1288:	.word	0x000004e4
    128c:	.word	0x000004ec
    1290:	.word	0x0000056c
    1294:	.word	0x0000056c
    1298:	.word	0x00000500
    129c:	.word	0x0000056c
    12a0:	.word	0x0000056c
    12a4:	.word	0x0000056c
    12a8:	.word	0x00000518
    12ac:	.word	0x0000056c
    12b0:	.word	0x0000056c
    12b4:	.word	0x0000056c
    12b8:	.word	0x0000056c
    12bc:	.word	0x0000056c
    12c0:	.word	0x0000056c
    12c4:	.word	0x0000056c
    12c8:	.word	0x00000344
    12cc:	.word	0x0000056c
    12d0:	.word	0x0000056c
    12d4:	.word	0x0000056c
    12d8:	.word	0x0000034c
    12dc:	.word	0x000002d0
    12e0:	.word	0x0000056c
    12e4:	.word	0x0000056c
    12e8:	.word	0x000002e4
    12ec:	.word	0x0000056c
    12f0:	.word	0x0000056c
    12f4:	.word	0x0000056c
    12f8:	.word	0x0000056c
    12fc:	.word	0x0000056c
    1300:	.word	0x0000056c
    1304:	.word	0x0000056c
    1308:	.word	0x000002f0
    130c:	.word	0x0000056c
    1310:	.word	0x0000056c
    1314:	.word	0x0000056c
    1318:	.word	0x0000056c
    131c:	.word	0x0000056c
    1320:	.word	0x0000056c
    1324:	.word	0x0000056c
    1328:	.word	0x00000548
    132c:	.word	0x0000056c
    1330:	.word	0x0000056c
    1334:	.word	0x0000056c
    1338:	.word	0x0000056c
    133c:	.word	0x0000056c
    1340:	.word	0x0000056c
    1344:	.word	0x0000056c
    1348:	.word	0x00000524
    134c:	.word	0x0000056c
    1350:	.word	0x0000056c
    1354:	.word	0x0000056c
    1358:	.word	0xffffffdc
    135c:	.word	0x0000035c
    1360:	.word	0x0000056c
    1364:	.word	0x0000056c
    1368:	.word	0x0000052c
    136c:	.word	0x0000056c
    1370:	.word	0x0000056c
    1374:	.word	0x00000534
    1378:	.word	0x0000056c
    137c:	.word	0x0000056c
    1380:	.word	0x0000056c
    1384:	.word	0x0000056c
    1388:	.word	0x0000056c
    138c:	.word	0x0000056c
    1390:	.word	0x0000056c
    1394:	.word	0x0000056c
    1398:	.word	0x0000056c
    139c:	.word	0x0000056c
    13a0:	.word	0x0000056c
    13a4:	.word	0x0000056c
    13a8:	.word	0x0000056c
    13ac:	.word	0x0000056c
    13b0:	.word	0x0000056c
    13b4:	.word	0x0000056c
    13b8:	.word	0x0000056c
    13bc:	.word	0x0000056c
    13c0:	.word	0x0000056c
    13c4:	.word	0x0000056c
    13c8:	.word	0x0000056c
    13cc:	.word	0x0000056c
    13d0:	.word	0x0000056c
    13d4:	.word	0x0000056c
    13d8:	.word	0x0000056c
    13dc:	.word	0x0000056c
    13e0:	.word	0x0000056c
    13e4:	.word	0x0000056c
    13e8:	.word	0x0000056c
    13ec:	.word	0x0000056c
    13f0:	.word	0x0000056c
    13f4:	.word	0x0000056c
    13f8:	.word	0x0000056c
    13fc:	.word	0x0000056c
    1400:	.word	0x0000056c
    1404:	.word	0x0000056c
    1408:	.word	0x0000056c
    140c:	.word	0x0000056c
    1410:	.word	0x0000056c
    1414:	.word	0x0000056c
    1418:	.word	0x0000056c
    141c:	.word	0x000002f8
    1420:	ldr	r4, [r5, #12]
    1424:	b	1134 <sfbpf_filter+0x34>
    1428:	ldr	r7, [r5, #12]
    142c:	mov	r6, sp
    1430:	mov	r4, r0
    1434:	ldr	lr, [r6, r7, lsl #2]
    1438:	b	1134 <sfbpf_filter+0x34>
    143c:	ldr	r4, [r5, #12]
    1440:	lsl	r4, r0, r4
    1444:	b	1134 <sfbpf_filter+0x34>
    1448:	lsl	r4, r0, lr
    144c:	b	1134 <sfbpf_filter+0x34>
    1450:	ldr	r5, [r5, #12]
    1454:	cmp	r5, r3
    1458:	bcs	16b8 <sfbpf_filter+0x5b8>
    145c:	ldrb	r7, [r1, r5]
    1460:	mov	r6, #60	; 0x3c
    1464:	mov	r4, r0
    1468:	and	lr, r6, r7, lsl #2
    146c:	b	1134 <sfbpf_filter+0x34>
    1470:	mov	r4, r0
    1474:	mov	lr, r0
    1478:	b	1134 <sfbpf_filter+0x34>
    147c:	sub	r4, r0, lr
    1480:	b	1134 <sfbpf_filter+0x34>
    1484:	ldr	r4, [r5, #12]
    1488:	mov	r6, #10
    148c:	tst	r4, r0
    1490:	movweq	r6, #11
    1494:	ldrb	r4, [r5, r6]
    1498:	b	112c <sfbpf_filter+0x2c>
    149c:	and	r4, lr, r0
    14a0:	b	1134 <sfbpf_filter+0x34>
    14a4:	ldr	r0, [r5, #12]
    14a8:	mov	r4, sp
    14ac:	ldr	r4, [r4, r0, lsl #2]
    14b0:	b	1134 <sfbpf_filter+0x34>
    14b4:	mov	r4, r0
    14b8:	mov	lr, r2
    14bc:	b	1134 <sfbpf_filter+0x34>
    14c0:	ldr	lr, [r5, #12]
    14c4:	mov	r4, r0
    14c8:	b	1134 <sfbpf_filter+0x34>
    14cc:	ldr	r4, [r5, #12]
    14d0:	mov	r5, sp
    14d4:	str	r0, [r5, r4, lsl #2]
    14d8:	mov	r4, r0
    14dc:	b	1134 <sfbpf_filter+0x34>
    14e0:	ldr	r4, [r5, #12]
    14e4:	mov	r5, sp
    14e8:	str	lr, [r5, r4, lsl #2]
    14ec:	mov	r4, r0
    14f0:	b	1134 <sfbpf_filter+0x34>
    14f4:	ldr	r4, [r5, #12]
    14f8:	add	r4, r4, r0
    14fc:	b	1134 <sfbpf_filter+0x34>
    1500:	ldr	r4, [r5, #12]
    1504:	b	112c <sfbpf_filter+0x2c>
    1508:	add	r4, lr, r0
    150c:	b	1134 <sfbpf_filter+0x34>
    1510:	ldr	r4, [r5, #12]
    1514:	sub	r4, r0, r4
    1518:	b	1134 <sfbpf_filter+0x34>
    151c:	ldr	r4, [r5, #12]
    1520:	mov	r6, #11
    1524:	cmp	r0, r4
    1528:	movweq	r6, #10
    152c:	ldrb	r4, [r5, r6]
    1530:	b	112c <sfbpf_filter+0x2c>
    1534:	mov	r4, #11
    1538:	cmp	r0, lr
    153c:	movweq	r4, #10
    1540:	ldrb	r4, [r5, r4]
    1544:	b	112c <sfbpf_filter+0x2c>
    1548:	ldr	r0, [r5, #12]
    154c:	b	15fc <sfbpf_filter+0x4fc>
    1550:	ldr	r4, [r5, #12]
    1554:	mul	r4, r4, r0
    1558:	b	1134 <sfbpf_filter+0x34>
    155c:	ldr	r4, [r5, #12]
    1560:	mov	r6, #11
    1564:	cmp	r0, r4
    1568:	movwhi	r6, #10
    156c:	ldrb	r4, [r5, r6]
    1570:	b	112c <sfbpf_filter+0x2c>
    1574:	ldr	r0, [r5, #12]
    1578:	b	161c <sfbpf_filter+0x51c>
    157c:	mul	r4, lr, r0
    1580:	b	1134 <sfbpf_filter+0x34>
    1584:	mov	r4, #11
    1588:	cmp	r0, lr
    158c:	movwhi	r4, #10
    1590:	ldrb	r4, [r5, r4]
    1594:	b	112c <sfbpf_filter+0x2c>
    1598:	ldr	r0, [r5, #12]
    159c:	cmp	r0, r3
    15a0:	bcs	16b8 <sfbpf_filter+0x5b8>
    15a4:	ldrb	r4, [r1, r0]
    15a8:	b	1134 <sfbpf_filter+0x34>
    15ac:	ldr	r4, [r5, #12]
    15b0:	udiv	r4, r0, r4
    15b4:	b	1134 <sfbpf_filter+0x34>
    15b8:	ldr	r4, [r5, #12]
    15bc:	mov	r6, #10
    15c0:	cmp	r0, r4
    15c4:	movwcc	r6, #11
    15c8:	ldrb	r4, [r5, r6]
    15cc:	b	112c <sfbpf_filter+0x2c>
    15d0:	cmp	lr, #0
    15d4:	beq	16b8 <sfbpf_filter+0x5b8>
    15d8:	udiv	r4, r0, lr
    15dc:	b	1134 <sfbpf_filter+0x34>
    15e0:	mov	r4, #10
    15e4:	cmp	r0, lr
    15e8:	movwcc	r4, #11
    15ec:	ldrb	r4, [r5, r4]
    15f0:	b	112c <sfbpf_filter+0x2c>
    15f4:	ldr	r0, [r5, #12]
    15f8:	add	r0, r0, lr
    15fc:	add	r4, r0, #4
    1600:	cmp	r4, r3
    1604:	bhi	16b8 <sfbpf_filter+0x5b8>
    1608:	ldr	r0, [r1, r0]
    160c:	rev	r4, r0
    1610:	b	1134 <sfbpf_filter+0x34>
    1614:	ldr	r0, [r5, #12]
    1618:	add	r0, r0, lr
    161c:	add	r4, r0, #2
    1620:	cmp	r4, r3
    1624:	bhi	16b8 <sfbpf_filter+0x5b8>
    1628:	mov	r4, r1
    162c:	ldrb	r0, [r4, r0]!
    1630:	ldrb	r4, [r4, #1]
    1634:	orr	r4, r4, r0, lsl #8
    1638:	b	1134 <sfbpf_filter+0x34>
    163c:	orr	r4, lr, r0
    1640:	b	1134 <sfbpf_filter+0x34>
    1644:	mov	r4, #10
    1648:	tst	lr, r0
    164c:	movweq	r4, #11
    1650:	ldrb	r4, [r5, r4]
    1654:	b	112c <sfbpf_filter+0x2c>
    1658:	ldr	r0, [r5, #12]
    165c:	add	r0, r0, lr
    1660:	cmp	r0, r3
    1664:	bcs	16b8 <sfbpf_filter+0x5b8>
    1668:	ldrb	r4, [r1, r0]
    166c:	b	1134 <sfbpf_filter+0x34>
    1670:	ldr	r4, [r5, #12]
    1674:	and	r4, r4, r0
    1678:	b	1134 <sfbpf_filter+0x34>
    167c:	lsr	r4, r0, lr
    1680:	b	1134 <sfbpf_filter+0x34>
    1684:	rsb	r4, r0, #0
    1688:	b	1134 <sfbpf_filter+0x34>
    168c:	mov	r4, lr
    1690:	b	1134 <sfbpf_filter+0x34>
    1694:	ldr	r4, [r5, #12]
    1698:	orr	r4, r4, r0
    169c:	b	1134 <sfbpf_filter+0x34>
    16a0:	ldr	r4, [r5, #12]
    16a4:	lsr	r4, r0, r4
    16a8:	b	1134 <sfbpf_filter+0x34>
    16ac:	ldr	r0, [r5, #12]
    16b0:	sub	sp, fp, #16
    16b4:	pop	{r4, r5, r6, r7, fp, pc}
    16b8:	mov	r0, #0
    16bc:	sub	sp, fp, #16
    16c0:	pop	{r4, r5, r6, r7, fp, pc}
    16c4:	bl	fc4 <abort@plt>

000016c8 <sfbpf_validate>:
    16c8:	push	{r4, r5, fp, lr}
    16cc:	add	fp, sp, #8
    16d0:	mov	ip, r0
    16d4:	mov	r0, #0
    16d8:	cmp	r1, #1
    16dc:	blt	17dc <sfbpf_validate+0x114>
    16e0:	add	r3, ip, #4
    16e4:	mov	r2, #1
    16e8:	mov	lr, r2
    16ec:	ldrh	r2, [r3, #-4]
    16f0:	and	r4, r2, #7
    16f4:	sub	r4, r4, #2
    16f8:	cmp	r4, #5
    16fc:	bhi	1734 <sfbpf_validate+0x6c>
    1700:	add	r5, pc, #4
    1704:	ldr	r4, [r5, r4, lsl #2]
    1708:	add	pc, r5, r4
    170c:	.word	0x00000018
    1710:	.word	0x00000018
    1714:	.word	0x00000040
    1718:	.word	0x00000068
    171c:	.word	0x000000a8
    1720:	.word	0x000000a8
    1724:	ldr	r2, [r3]
    1728:	cmp	r2, #15
    172c:	bls	17b4 <sfbpf_validate+0xec>
    1730:	b	17dc <sfbpf_validate+0x114>
    1734:	ubfx	r2, r2, #5, #3
    1738:	cmp	r2, #5
    173c:	bhi	17dc <sfbpf_validate+0x114>
    1740:	cmp	r2, #3
    1744:	bne	17b4 <sfbpf_validate+0xec>
    1748:	b	1724 <sfbpf_validate+0x5c>
    174c:	ubfx	r4, r2, #4, #4
    1750:	cmp	r4, #8
    1754:	bhi	17dc <sfbpf_validate+0x114>
    1758:	cmp	r4, #3
    175c:	tsteq	r2, #24
    1760:	bne	17b4 <sfbpf_validate+0xec>
    1764:	ldr	r2, [r3]
    1768:	cmp	r2, #0
    176c:	bne	17b4 <sfbpf_validate+0xec>
    1770:	b	17dc <sfbpf_validate+0x114>
    1774:	ubfx	r2, r2, #4, #4
    1778:	sub	r4, r2, #1
    177c:	cmp	r4, #4
    1780:	bcs	179c <sfbpf_validate+0xd4>
    1784:	ldrb	r2, [r3, #-2]
    1788:	add	r2, lr, r2
    178c:	cmp	r2, r1
    1790:	bcs	17dc <sfbpf_validate+0x114>
    1794:	ldrb	r2, [r3, #-1]
    1798:	b	17a8 <sfbpf_validate+0xe0>
    179c:	cmp	r2, #0
    17a0:	bne	17dc <sfbpf_validate+0x114>
    17a4:	ldr	r2, [r3]
    17a8:	add	r2, lr, r2
    17ac:	cmp	r2, r1
    17b0:	popcs	{r4, r5, fp, pc}
    17b4:	add	r3, r3, #8
    17b8:	add	r2, lr, #1
    17bc:	cmp	lr, r1
    17c0:	bcc	16e8 <sfbpf_validate+0x20>
    17c4:	add	r0, ip, r1, lsl #3
    17c8:	ldrh	r0, [r0, #-8]
    17cc:	and	r0, r0, #7
    17d0:	sub	r0, r0, #6
    17d4:	clz	r0, r0
    17d8:	lsr	r0, r0, #5
    17dc:	pop	{r4, r5, fp, pc}

000017e0 <sfbpf_print>:
    17e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    17e4:	add	fp, sp, #28
    17e8:	sub	sp, sp, #4
    17ec:	mov	r5, r0
    17f0:	ldr	r0, [pc, #2052]	; 1ffc <sfbpf_print+0x81c>
    17f4:	mov	r8, r1
    17f8:	add	r0, pc, r0
    17fc:	bl	ec8 <puts@plt>
    1800:	ldr	r0, [r5]
    1804:	cmp	r0, #0
    1808:	beq	1ff4 <sfbpf_print+0x814>
    180c:	ldr	r7, [pc, #2028]	; 2000 <sfbpf_print+0x820>
    1810:	mov	r6, #0
    1814:	add	r7, pc, r7
    1818:	ldr	sl, [r5, #4]
    181c:	ldr	r0, [pc, #2016]	; 2004 <sfbpf_print+0x824>
    1820:	mov	r1, r6
    1824:	add	r0, pc, r0
    1828:	bl	e20 <printf@plt>
    182c:	lsl	r0, r6, #3
    1830:	mov	r9, sl
    1834:	cmp	r8, #0
    1838:	ldrh	r0, [r9, r0]!	; <UNPREDICTABLE>
    183c:	beq	196c <sfbpf_print+0x18c>
    1840:	ldr	r1, [pc, #1984]	; 2008 <sfbpf_print+0x828>
    1844:	ands	r0, r0, #7
    1848:	add	r1, pc, r1
    184c:	beq	187c <sfbpf_print+0x9c>
    1850:	mov	r1, #0
    1854:	mov	r2, #0
    1858:	cmp	r2, #7
    185c:	beq	187c <sfbpf_print+0x9c>
    1860:	add	r3, r7, r2, lsl #3
    1864:	add	r2, r2, #1
    1868:	ldr	r3, [r3, #8]
    186c:	cmp	r3, r0
    1870:	bne	1858 <sfbpf_print+0x78>
    1874:	add	r0, r7, r2, lsl #3
    1878:	ldr	r1, [r0, #4]
    187c:	ldr	r0, [pc, #1928]	; 200c <sfbpf_print+0x82c>
    1880:	add	r0, pc, r0
    1884:	bl	e20 <printf@plt>
    1888:	ldrh	r0, [r9]
    188c:	and	r1, r0, #7
    1890:	cmp	r1, #7
    1894:	bhi	1be0 <sfbpf_print+0x400>
    1898:	add	r2, pc, #4
    189c:	ldr	r1, [r2, r1, lsl #2]
    18a0:	add	pc, r2, r1
    18a4:	.word	0x00000020
    18a8:	.word	0x00000020
    18ac:	.word	0x0000033c
    18b0:	.word	0x0000033c
    18b4:	.word	0x00000158
    18b8:	.word	0x000001e4
    18bc:	.word	0x0000028c
    18c0:	.word	0x000002e4
    18c4:	ldr	r1, [pc, #1860]	; 2010 <sfbpf_print+0x830>
    18c8:	ands	r2, r0, #24
    18cc:	add	r1, pc, r1
    18d0:	beq	1910 <sfbpf_print+0x130>
    18d4:	mov	r1, #0
    18d8:	mov	r3, #0
    18dc:	cmp	r3, #2
    18e0:	beq	1910 <sfbpf_print+0x130>
    18e4:	ldr	r4, [pc, #1832]	; 2014 <sfbpf_print+0x834>
    18e8:	add	r4, pc, r4
    18ec:	add	r4, r4, r3, lsl #3
    18f0:	add	r3, r3, #1
    18f4:	ldr	r4, [r4, #8]
    18f8:	cmp	r4, r2
    18fc:	bne	18dc <sfbpf_print+0xfc>
    1900:	ldr	r1, [pc, #1808]	; 2018 <sfbpf_print+0x838>
    1904:	add	r1, pc, r1
    1908:	add	r1, r1, r3, lsl #3
    190c:	ldr	r1, [r1, #4]
    1910:	ldr	r2, [pc, #1796]	; 201c <sfbpf_print+0x83c>
    1914:	ands	r0, r0, #224	; 0xe0
    1918:	add	r2, pc, r2
    191c:	beq	195c <sfbpf_print+0x17c>
    1920:	mov	r2, #0
    1924:	mov	r3, #0
    1928:	cmp	r3, #5
    192c:	beq	195c <sfbpf_print+0x17c>
    1930:	ldr	r4, [pc, #1768]	; 2020 <sfbpf_print+0x840>
    1934:	add	r4, pc, r4
    1938:	add	r4, r4, r3, lsl #3
    193c:	add	r3, r3, #1
    1940:	ldr	r4, [r4, #8]
    1944:	cmp	r4, r0
    1948:	bne	1928 <sfbpf_print+0x148>
    194c:	ldr	r0, [pc, #1744]	; 2024 <sfbpf_print+0x844>
    1950:	add	r0, pc, r0
    1954:	add	r0, r0, r3, lsl #3
    1958:	ldr	r2, [r0, #4]
    195c:	ldr	r0, [pc, #1732]	; 2028 <sfbpf_print+0x848>
    1960:	add	r0, pc, r0
    1964:	bl	e20 <printf@plt>
    1968:	b	1be0 <sfbpf_print+0x400>
    196c:	and	r1, r0, #7
    1970:	sub	r1, r1, #1
    1974:	cmp	r1, #6
    1978:	bhi	1c00 <sfbpf_print+0x420>
    197c:	add	r2, pc, #4
    1980:	ldr	r1, [r2, r1, lsl #2]
    1984:	add	pc, r2, r1
    1988:	.word	0x0000001c
    198c:	.word	0x000002dc
    1990:	.word	0x000002f4
    1994:	.word	0x0000030c
    1998:	.word	0x0000035c
    199c:	.word	0x000003b0
    19a0:	.word	0x000003f4
    19a4:	ldr	r0, [pc, #1768]	; 2094 <sfbpf_print+0x8b4>
    19a8:	add	r0, pc, r0
    19ac:	bl	e20 <printf@plt>
    19b0:	ldrh	r0, [r9]
    19b4:	ubfx	r0, r0, #5, #3
    19b8:	cmp	r0, #5
    19bc:	bhi	1fdc <sfbpf_print+0x7fc>
    19c0:	add	r1, pc, #4
    19c4:	ldr	r0, [r1, r0, lsl #2]
    19c8:	add	pc, r1, r0
    19cc:	.word	0x00000018
    19d0:	.word	0x00000610
    19d4:	.word	0x00000610
    19d8:	.word	0x0000042c
    19dc:	.word	0x00000444
    19e0:	.word	0x00000450
    19e4:	add	r0, sl, r6, lsl #3
    19e8:	ldr	r1, [r0, #4]
    19ec:	ldr	r0, [pc, #1704]	; 209c <sfbpf_print+0x8bc>
    19f0:	add	r0, pc, r0
    19f4:	bl	e20 <printf@plt>
    19f8:	b	1fdc <sfbpf_print+0x7fc>
    19fc:	ldr	r1, [pc, #1576]	; 202c <sfbpf_print+0x84c>
    1a00:	ands	r2, r0, #240	; 0xf0
    1a04:	add	r1, pc, r1
    1a08:	beq	1a48 <sfbpf_print+0x268>
    1a0c:	mov	r1, #0
    1a10:	mov	r3, #0
    1a14:	cmp	r3, #8
    1a18:	beq	1a48 <sfbpf_print+0x268>
    1a1c:	ldr	r4, [pc, #1548]	; 2030 <sfbpf_print+0x850>
    1a20:	add	r4, pc, r4
    1a24:	add	r4, r4, r3, lsl #3
    1a28:	add	r3, r3, #1
    1a2c:	ldr	r4, [r4, #8]
    1a30:	cmp	r4, r2
    1a34:	bne	1a14 <sfbpf_print+0x234>
    1a38:	ldr	r1, [pc, #1524]	; 2034 <sfbpf_print+0x854>
    1a3c:	add	r1, pc, r1
    1a40:	add	r1, r1, r3, lsl #3
    1a44:	ldr	r1, [r1, #4]
    1a48:	ldr	r2, [pc, #1512]	; 2038 <sfbpf_print+0x858>
    1a4c:	ands	r0, r0, #8
    1a50:	add	r2, pc, r2
    1a54:	beq	1b20 <sfbpf_print+0x340>
    1a58:	mov	r2, #0
    1a5c:	mov	r3, #0
    1a60:	cmp	r3, #1
    1a64:	beq	1b20 <sfbpf_print+0x340>
    1a68:	ldr	r4, [pc, #1484]	; 203c <sfbpf_print+0x85c>
    1a6c:	add	r4, pc, r4
    1a70:	add	r4, r4, r3, lsl #3
    1a74:	add	r3, r3, #1
    1a78:	ldr	r4, [r4, #8]
    1a7c:	cmp	r4, r0
    1a80:	bne	1a60 <sfbpf_print+0x280>
    1a84:	b	1b10 <sfbpf_print+0x330>
    1a88:	ldr	r1, [pc, #1464]	; 2048 <sfbpf_print+0x868>
    1a8c:	ands	r2, r0, #240	; 0xf0
    1a90:	add	r1, pc, r1
    1a94:	beq	1ad4 <sfbpf_print+0x2f4>
    1a98:	mov	r1, #0
    1a9c:	mov	r3, #0
    1aa0:	cmp	r3, #4
    1aa4:	beq	1ad4 <sfbpf_print+0x2f4>
    1aa8:	ldr	r4, [pc, #1436]	; 204c <sfbpf_print+0x86c>
    1aac:	add	r4, pc, r4
    1ab0:	add	r4, r4, r3, lsl #3
    1ab4:	add	r3, r3, #1
    1ab8:	ldr	r4, [r4, #8]
    1abc:	cmp	r4, r2
    1ac0:	bne	1aa0 <sfbpf_print+0x2c0>
    1ac4:	ldr	r1, [pc, #1412]	; 2050 <sfbpf_print+0x870>
    1ac8:	add	r1, pc, r1
    1acc:	add	r1, r1, r3, lsl #3
    1ad0:	ldr	r1, [r1, #4]
    1ad4:	ldr	r2, [pc, #1400]	; 2054 <sfbpf_print+0x874>
    1ad8:	ands	r0, r0, #8
    1adc:	add	r2, pc, r2
    1ae0:	beq	1b20 <sfbpf_print+0x340>
    1ae4:	mov	r2, #0
    1ae8:	mov	r3, #0
    1aec:	cmp	r3, #1
    1af0:	beq	1b20 <sfbpf_print+0x340>
    1af4:	ldr	r4, [pc, #1372]	; 2058 <sfbpf_print+0x878>
    1af8:	add	r4, pc, r4
    1afc:	add	r4, r4, r3, lsl #3
    1b00:	add	r3, r3, #1
    1b04:	ldr	r4, [r4, #8]
    1b08:	cmp	r4, r0
    1b0c:	bne	1aec <sfbpf_print+0x30c>
    1b10:	ldr	r0, [pc, #1320]	; 2040 <sfbpf_print+0x860>
    1b14:	add	r0, pc, r0
    1b18:	add	r0, r0, r3, lsl #3
    1b1c:	ldr	r2, [r0, #4]
    1b20:	ldr	r0, [pc, #1308]	; 2044 <sfbpf_print+0x864>
    1b24:	add	r0, pc, r0
    1b28:	bl	e20 <printf@plt>
    1b2c:	b	1be0 <sfbpf_print+0x400>
    1b30:	ldr	r1, [pc, #1316]	; 205c <sfbpf_print+0x87c>
    1b34:	ands	r0, r0, #24
    1b38:	add	r1, pc, r1
    1b3c:	beq	1b7c <sfbpf_print+0x39c>
    1b40:	mov	r1, #0
    1b44:	mov	r2, #0
    1b48:	cmp	r2, #2
    1b4c:	beq	1b7c <sfbpf_print+0x39c>
    1b50:	ldr	r3, [pc, #1288]	; 2060 <sfbpf_print+0x880>
    1b54:	add	r3, pc, r3
    1b58:	add	r3, r3, r2, lsl #3
    1b5c:	add	r2, r2, #1
    1b60:	ldr	r3, [r3, #8]
    1b64:	cmp	r3, r0
    1b68:	bne	1b48 <sfbpf_print+0x368>
    1b6c:	ldr	r0, [pc, #1264]	; 2064 <sfbpf_print+0x884>
    1b70:	add	r0, pc, r0
    1b74:	add	r0, r0, r2, lsl #3
    1b78:	ldr	r1, [r0, #4]
    1b7c:	ldr	r0, [pc, #1252]	; 2068 <sfbpf_print+0x888>
    1b80:	add	r0, pc, r0
    1b84:	b	1bdc <sfbpf_print+0x3fc>
    1b88:	ldr	r1, [pc, #1244]	; 206c <sfbpf_print+0x88c>
    1b8c:	ands	r0, r0, #248	; 0xf8
    1b90:	add	r1, pc, r1
    1b94:	beq	1bd4 <sfbpf_print+0x3f4>
    1b98:	mov	r1, #0
    1b9c:	mov	r2, #0
    1ba0:	cmp	r2, #1
    1ba4:	beq	1bd4 <sfbpf_print+0x3f4>
    1ba8:	ldr	r3, [pc, #1216]	; 2070 <sfbpf_print+0x890>
    1bac:	add	r3, pc, r3
    1bb0:	add	r3, r3, r2, lsl #3
    1bb4:	add	r2, r2, #1
    1bb8:	ldr	r3, [r3, #8]
    1bbc:	cmp	r3, r0
    1bc0:	bne	1ba0 <sfbpf_print+0x3c0>
    1bc4:	ldr	r0, [pc, #1192]	; 2074 <sfbpf_print+0x894>
    1bc8:	add	r0, pc, r0
    1bcc:	add	r0, r0, r2, lsl #3
    1bd0:	ldr	r1, [r0, #4]
    1bd4:	ldr	r0, [pc, #1180]	; 2078 <sfbpf_print+0x898>
    1bd8:	add	r0, pc, r0
    1bdc:	bl	e20 <printf@plt>
    1be0:	add	r0, sl, r6, lsl #3
    1be4:	ldr	r3, [r0, #4]
    1be8:	ldrb	r1, [r0, #2]
    1bec:	ldrb	r2, [r0, #3]
    1bf0:	ldr	r0, [pc, #1156]	; 207c <sfbpf_print+0x89c>
    1bf4:	add	r0, pc, r0
    1bf8:	bl	e20 <printf@plt>
    1bfc:	b	1fe4 <sfbpf_print+0x804>
    1c00:	ldr	r0, [pc, #1144]	; 2080 <sfbpf_print+0x8a0>
    1c04:	add	r0, pc, r0
    1c08:	bl	e20 <printf@plt>
    1c0c:	ldrh	r0, [r9]
    1c10:	ubfx	r1, r0, #5, #3
    1c14:	cmp	r1, #4
    1c18:	bhi	1dac <sfbpf_print+0x5cc>
    1c1c:	add	r2, pc, #4
    1c20:	ldr	r1, [r2, r1, lsl #2]
    1c24:	add	pc, r2, r1
    1c28:	.word	0x00000350
    1c2c:	.word	0x00000014
    1c30:	.word	0x0000020c
    1c34:	.word	0x00000234
    1c38:	.word	0x0000024c
    1c3c:	add	r1, sl, r6, lsl #3
    1c40:	ands	r0, r0, #24
    1c44:	ldr	r1, [r1, #4]
    1c48:	beq	1fac <sfbpf_print+0x7cc>
    1c4c:	cmp	r0, #16
    1c50:	beq	1fb4 <sfbpf_print+0x7d4>
    1c54:	cmp	r0, #8
    1c58:	movne	r2, #0
    1c5c:	moveq	r2, #2
    1c60:	b	1fb8 <sfbpf_print+0x7d8>
    1c64:	add	r0, sl, r6, lsl #3
    1c68:	ldr	r1, [r0, #4]
    1c6c:	ldr	r0, [pc, #1076]	; 20a8 <sfbpf_print+0x8c8>
    1c70:	add	r0, pc, r0
    1c74:	bl	e20 <printf@plt>
    1c78:	b	1fe4 <sfbpf_print+0x804>
    1c7c:	add	r0, sl, r6, lsl #3
    1c80:	ldr	r1, [r0, #4]
    1c84:	ldr	r0, [pc, #1056]	; 20ac <sfbpf_print+0x8cc>
    1c88:	add	r0, pc, r0
    1c8c:	bl	e20 <printf@plt>
    1c90:	b	1fe4 <sfbpf_print+0x804>
    1c94:	ubfx	r0, r0, #4, #4
    1c98:	cmp	r0, #8
    1c9c:	bhi	1f10 <sfbpf_print+0x730>
    1ca0:	add	r2, pc, #12
    1ca4:	ldr	r1, [pc, #1028]	; 20b0 <sfbpf_print+0x8d0>
    1ca8:	ldr	r0, [r2, r0, lsl #2]
    1cac:	add	r1, pc, r1
    1cb0:	add	pc, r2, r0
    1cb4:	.word	0x000002ac
    1cb8:	.word	0x00000024
    1cbc:	.word	0x00000268
    1cc0:	.word	0x00000274
    1cc4:	.word	0x00000280
    1cc8:	.word	0x0000028c
    1ccc:	.word	0x00000298
    1cd0:	.word	0x000002a4
    1cd4:	.word	0x000002e8
    1cd8:	ldr	r1, [pc, #980]	; 20b4 <sfbpf_print+0x8d4>
    1cdc:	add	r1, pc, r1
    1ce0:	b	1f60 <sfbpf_print+0x780>
    1ce4:	ubfx	r0, r0, #4, #4
    1ce8:	cmp	r0, #4
    1cec:	bhi	1e84 <sfbpf_print+0x6a4>
    1cf0:	add	r2, pc, #12
    1cf4:	ldr	r1, [pc, #996]	; 20e0 <sfbpf_print+0x900>
    1cf8:	ldr	r0, [r2, r0, lsl #2]
    1cfc:	add	r1, pc, r1
    1d00:	add	pc, r2, r0
    1d04:	.word	0x00000014
    1d08:	.word	0x000001ac
    1d0c:	.word	0x0000018c
    1d10:	.word	0x00000198
    1d14:	.word	0x000001a4
    1d18:	add	r0, sl, r6, lsl #3
    1d1c:	ldr	r0, [r0, #4]
    1d20:	add	r0, r6, r0
    1d24:	add	r1, r0, #1
    1d28:	ldr	r0, [pc, #948]	; 20e4 <sfbpf_print+0x904>
    1d2c:	add	r0, pc, r0
    1d30:	bl	e20 <printf@plt>
    1d34:	b	1fe4 <sfbpf_print+0x804>
    1d38:	ldr	r0, [pc, #964]	; 2104 <sfbpf_print+0x924>
    1d3c:	add	r0, pc, r0
    1d40:	bl	e20 <printf@plt>
    1d44:	ldrh	r0, [r9]
    1d48:	and	r0, r0, #24
    1d4c:	cmp	r0, #16
    1d50:	beq	1dc4 <sfbpf_print+0x5e4>
    1d54:	cmp	r0, #8
    1d58:	beq	1dd0 <sfbpf_print+0x5f0>
    1d5c:	cmp	r0, #0
    1d60:	bne	1ddc <sfbpf_print+0x5fc>
    1d64:	add	r0, sl, r6, lsl #3
    1d68:	ldr	r1, [r0, #4]
    1d6c:	ldr	r0, [pc, #916]	; 2108 <sfbpf_print+0x928>
    1d70:	add	r0, pc, r0
    1d74:	bl	e20 <printf@plt>
    1d78:	b	1de8 <sfbpf_print+0x608>
    1d7c:	ldr	r0, [pc, #912]	; 2114 <sfbpf_print+0x934>
    1d80:	add	r0, pc, r0
    1d84:	bl	e20 <printf@plt>
    1d88:	ldrh	r0, [r9]
    1d8c:	and	r0, r0, #248	; 0xf8
    1d90:	cmp	r0, #128	; 0x80
    1d94:	beq	1db8 <sfbpf_print+0x5d8>
    1d98:	cmp	r0, #0
    1d9c:	bne	1dac <sfbpf_print+0x5cc>
    1da0:	ldr	r0, [pc, #880]	; 2118 <sfbpf_print+0x938>
    1da4:	add	r0, pc, r0
    1da8:	b	1e7c <sfbpf_print+0x69c>
    1dac:	ldr	r0, [pc, #876]	; 2120 <sfbpf_print+0x940>
    1db0:	add	r0, pc, r0
    1db4:	b	1e7c <sfbpf_print+0x69c>
    1db8:	ldr	r0, [pc, #860]	; 211c <sfbpf_print+0x93c>
    1dbc:	add	r0, pc, r0
    1dc0:	b	1e7c <sfbpf_print+0x69c>
    1dc4:	mov	r0, #65	; 0x41
    1dc8:	bl	f4c <putchar@plt>
    1dcc:	b	1de8 <sfbpf_print+0x608>
    1dd0:	mov	r0, #88	; 0x58
    1dd4:	bl	f4c <putchar@plt>
    1dd8:	b	1de8 <sfbpf_print+0x608>
    1ddc:	ldr	r0, [pc, #808]	; 210c <sfbpf_print+0x92c>
    1de0:	add	r0, pc, r0
    1de4:	bl	e20 <printf@plt>
    1de8:	ldr	r0, [pc, #800]	; 2110 <sfbpf_print+0x930>
    1dec:	add	r0, pc, r0
    1df0:	bl	ec8 <puts@plt>
    1df4:	b	1fe4 <sfbpf_print+0x804>
    1df8:	add	r0, sl, r6, lsl #3
    1dfc:	ldr	r1, [r0, #4]
    1e00:	ldr	r0, [pc, #664]	; 20a0 <sfbpf_print+0x8c0>
    1e04:	add	r0, pc, r0
    1e08:	bl	e20 <printf@plt>
    1e0c:	b	1fdc <sfbpf_print+0x7fc>
    1e10:	ldr	r0, [pc, #640]	; 2098 <sfbpf_print+0x8b8>
    1e14:	add	r0, pc, r0
    1e18:	b	1e7c <sfbpf_print+0x69c>
    1e1c:	add	r0, sl, r6, lsl #3
    1e20:	ldr	r1, [r0, #4]
    1e24:	ldr	r0, [pc, #632]	; 20a4 <sfbpf_print+0x8c4>
    1e28:	add	r0, pc, r0
    1e2c:	bl	e20 <printf@plt>
    1e30:	b	1fdc <sfbpf_print+0x7fc>
    1e34:	add	r1, sl, r6, lsl #3
    1e38:	ands	r0, r0, #24
    1e3c:	ldr	r1, [r1, #4]
    1e40:	beq	1fc4 <sfbpf_print+0x7e4>
    1e44:	cmp	r0, #16
    1e48:	beq	1fcc <sfbpf_print+0x7ec>
    1e4c:	cmp	r0, #8
    1e50:	movne	r2, #0
    1e54:	moveq	r2, #2
    1e58:	b	1fd0 <sfbpf_print+0x7f0>
    1e5c:	add	r0, sl, r6, lsl #3
    1e60:	ldr	r1, [r0, #4]
    1e64:	ldr	r0, [pc, #548]	; 2090 <sfbpf_print+0x8b0>
    1e68:	add	r0, pc, r0
    1e6c:	bl	e20 <printf@plt>
    1e70:	b	1fdc <sfbpf_print+0x7fc>
    1e74:	ldr	r0, [pc, #528]	; 208c <sfbpf_print+0x8ac>
    1e78:	add	r0, pc, r0
    1e7c:	bl	e20 <printf@plt>
    1e80:	b	1fdc <sfbpf_print+0x7fc>
    1e84:	ldr	r1, [pc, #616]	; 20f4 <sfbpf_print+0x914>
    1e88:	add	r1, pc, r1
    1e8c:	b	1eb0 <sfbpf_print+0x6d0>
    1e90:	ldr	r1, [pc, #592]	; 20e8 <sfbpf_print+0x908>
    1e94:	add	r1, pc, r1
    1e98:	b	1eb0 <sfbpf_print+0x6d0>
    1e9c:	ldr	r1, [pc, #584]	; 20ec <sfbpf_print+0x90c>
    1ea0:	add	r1, pc, r1
    1ea4:	b	1eb0 <sfbpf_print+0x6d0>
    1ea8:	ldr	r1, [pc, #576]	; 20f0 <sfbpf_print+0x910>
    1eac:	add	r1, pc, r1
    1eb0:	ldr	r0, [pc, #576]	; 20f8 <sfbpf_print+0x918>
    1eb4:	add	r0, pc, r0
    1eb8:	bl	e20 <printf@plt>
    1ebc:	ldrb	r0, [r9]
    1ec0:	tst	r0, #8
    1ec4:	bne	1ee0 <sfbpf_print+0x700>
    1ec8:	add	r0, sl, r6, lsl #3
    1ecc:	ldr	r1, [r0, #4]
    1ed0:	ldr	r0, [pc, #548]	; 20fc <sfbpf_print+0x91c>
    1ed4:	add	r0, pc, r0
    1ed8:	bl	e20 <printf@plt>
    1edc:	b	1ee8 <sfbpf_print+0x708>
    1ee0:	mov	r0, #88	; 0x58
    1ee4:	bl	f4c <putchar@plt>
    1ee8:	add	r0, sl, r6, lsl #3
    1eec:	add	r2, r6, #1
    1ef0:	ldrb	r1, [r0, #2]
    1ef4:	ldrb	r0, [r0, #3]
    1ef8:	add	r1, r2, r1
    1efc:	add	r2, r2, r0
    1f00:	ldr	r0, [pc, #504]	; 2100 <sfbpf_print+0x920>
    1f04:	add	r0, pc, r0
    1f08:	bl	e20 <printf@plt>
    1f0c:	b	1fe4 <sfbpf_print+0x804>
    1f10:	ldr	r1, [pc, #444]	; 20d4 <sfbpf_print+0x8f4>
    1f14:	add	r1, pc, r1
    1f18:	b	1f60 <sfbpf_print+0x780>
    1f1c:	ldr	r1, [pc, #404]	; 20b8 <sfbpf_print+0x8d8>
    1f20:	add	r1, pc, r1
    1f24:	b	1f60 <sfbpf_print+0x780>
    1f28:	ldr	r1, [pc, #396]	; 20bc <sfbpf_print+0x8dc>
    1f2c:	add	r1, pc, r1
    1f30:	b	1f60 <sfbpf_print+0x780>
    1f34:	ldr	r1, [pc, #388]	; 20c0 <sfbpf_print+0x8e0>
    1f38:	add	r1, pc, r1
    1f3c:	b	1f60 <sfbpf_print+0x780>
    1f40:	ldr	r1, [pc, #380]	; 20c4 <sfbpf_print+0x8e4>
    1f44:	add	r1, pc, r1
    1f48:	b	1f60 <sfbpf_print+0x780>
    1f4c:	ldr	r1, [pc, #372]	; 20c8 <sfbpf_print+0x8e8>
    1f50:	add	r1, pc, r1
    1f54:	b	1f60 <sfbpf_print+0x780>
    1f58:	ldr	r1, [pc, #364]	; 20cc <sfbpf_print+0x8ec>
    1f5c:	add	r1, pc, r1
    1f60:	ldr	r0, [pc, #368]	; 20d8 <sfbpf_print+0x8f8>
    1f64:	add	r0, pc, r0
    1f68:	bl	e20 <printf@plt>
    1f6c:	ldrb	r0, [r9]
    1f70:	tst	r0, #8
    1f74:	bne	1f90 <sfbpf_print+0x7b0>
    1f78:	add	r0, sl, r6, lsl #3
    1f7c:	ldr	r1, [r0, #4]
    1f80:	ldr	r0, [pc, #340]	; 20dc <sfbpf_print+0x8fc>
    1f84:	add	r0, pc, r0
    1f88:	bl	e20 <printf@plt>
    1f8c:	b	1fdc <sfbpf_print+0x7fc>
    1f90:	mov	r0, #88	; 0x58
    1f94:	bl	f4c <putchar@plt>
    1f98:	b	1fdc <sfbpf_print+0x7fc>
    1f9c:	ldr	r0, [pc, #300]	; 20d0 <sfbpf_print+0x8f0>
    1fa0:	add	r0, pc, r0
    1fa4:	bl	ec8 <puts@plt>
    1fa8:	b	1fe4 <sfbpf_print+0x804>
    1fac:	mov	r2, #4
    1fb0:	b	1fb8 <sfbpf_print+0x7d8>
    1fb4:	mov	r2, #1
    1fb8:	ldr	r0, [pc, #196]	; 2084 <sfbpf_print+0x8a4>
    1fbc:	add	r0, pc, r0
    1fc0:	b	1fd8 <sfbpf_print+0x7f8>
    1fc4:	mov	r2, #4
    1fc8:	b	1fd0 <sfbpf_print+0x7f0>
    1fcc:	mov	r2, #1
    1fd0:	ldr	r0, [pc, #176]	; 2088 <sfbpf_print+0x8a8>
    1fd4:	add	r0, pc, r0
    1fd8:	bl	e20 <printf@plt>
    1fdc:	mov	r0, #10
    1fe0:	bl	f4c <putchar@plt>
    1fe4:	ldr	r0, [r5]
    1fe8:	add	r6, r6, #1
    1fec:	cmp	r6, r0
    1ff0:	bcc	1818 <sfbpf_print+0x38>
    1ff4:	sub	sp, fp, #28
    1ff8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    1ffc:	.word	0x00027cad
    2000:	.word	0x000453ac
    2004:	.word	0x00027ad4
    2008:	.word	0x00027afb
    200c:	.word	0x00027bf1
    2010:	.word	0x00027a9f
    2014:	.word	0x00045320
    2018:	.word	0x00045304
    201c:	.word	0x00027a55
    2020:	.word	0x000452f4
    2024:	.word	0x000452d8
    2028:	.word	0x0002799e
    202c:	.word	0x00027981
    2030:	.word	0x00045240
    2034:	.word	0x00045224
    2038:	.word	0x00027959
    203c:	.word	0x00045244
    2040:	.word	0x0004519c
    2044:	.word	0x000277eb
    2048:	.word	0x0002791b
    204c:	.word	0x0004521c
    2050:	.word	0x00045200
    2054:	.word	0x000278cd
    2058:	.word	0x000451b8
    205c:	.word	0x00027871
    2060:	.word	0x000451a4
    2064:	.word	0x00045188
    2068:	.word	0x0002779d
    206c:	.word	0x00027834
    2070:	.word	0x0004516c
    2074:	.word	0x00045150
    2078:	.word	0x0002774e
    207c:	.word	0x00027739
    2080:	.word	0x000277ea
    2084:	.word	0x0002743d
    2088:	.word	0x0002742e
    208c:	.word	0x00027595
    2090:	.word	0x000275a9
    2094:	.word	0x00027a73
    2098:	.word	0x000275f9
    209c:	.word	0x0002865b
    20a0:	.word	0x0002760d
    20a4:	.word	0x000275fe
    20a8:	.word	0x0002775c
    20ac:	.word	0x00027755
    20b0:	.word	0x0002778a
    20b4:	.word	0x0002775c
    20b8:	.word	0x0002751a
    20bc:	.word	0x00027510
    20c0:	.word	0x00027506
    20c4:	.word	0x000274fc
    20c8:	.word	0x000274f2
    20cc:	.word	0x000274e9
    20d0:	.word	0x00027513
    20d4:	.word	0x00027503
    20d8:	.word	0x000274e4
    20dc:	.word	0x000280c7
    20e0:	.word	0x00027767
    20e4:	.word	0x0002772d
    20e8:	.word	0x000275b2
    20ec:	.word	0x000275c6
    20f0:	.word	0x00027594
    20f4:	.word	0x0002758f
    20f8:	.word	0x000275b5
    20fc:	.word	0x00028177
    2100:	.word	0x00027571
    2104:	.word	0x00027748
    2108:	.word	0x000282db
    210c:	.word	0x00027637
    2110:	.word	0x000276cf
    2114:	.word	0x00027711
    2118:	.word	0x000276f3
    211c:	.word	0x000276e2
    2120:	.word	0x00027667

00002124 <sf_bpf_error>:
    2124:	sub	sp, sp, #12
    2128:	push	{fp, lr}
    212c:	mov	fp, sp
    2130:	sub	sp, sp, #4
    2134:	mov	ip, r0
    2138:	add	r0, fp, #8
    213c:	stm	r0, {r1, r2, r3}
    2140:	add	r3, fp, #8
    2144:	mov	r1, #256	; 0x100
    2148:	mov	r2, ip
    214c:	str	r3, [sp]
    2150:	ldr	r0, [pc, #20]	; 216c <sf_bpf_error+0x48>
    2154:	add	r0, pc, r0
    2158:	bl	f88 <vsnprintf@plt>
    215c:	ldr	r0, [pc, #12]	; 2170 <sf_bpf_error+0x4c>
    2160:	mov	r1, #1
    2164:	add	r0, pc, r0
    2168:	bl	e44 <longjmp@plt>
    216c:	.word	0x0004503c
    2170:	.word	0x00045134

00002174 <sf_sdup>:
    2174:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    2178:	add	fp, sp, #24
    217c:	mov	r8, r0
    2180:	bl	f04 <strlen@plt>
    2184:	mov	r9, r0
    2188:	ldr	r0, [pc, #176]	; 2240 <sf_sdup+0xcc>
    218c:	add	r1, r9, #4
    2190:	bic	r4, r1, #3
    2194:	ldr	r0, [pc, r0]
    2198:	ldr	r5, [pc, #164]	; 2244 <sf_sdup+0xd0>
    219c:	add	r5, pc, r5
    21a0:	ldr	r6, [r5, r0, lsl #3]!
    21a4:	cmp	r4, r6
    21a8:	bls	21fc <sf_sdup+0x88>
    21ac:	ldr	r2, [pc, #148]	; 2248 <sf_sdup+0xd4>
    21b0:	add	r1, r0, #1
    21b4:	cmp	r0, #15
    21b8:	add	r2, pc, r2
    21bc:	str	r1, [r2]
    21c0:	bge	2234 <sf_sdup+0xc0>
    21c4:	mov	r0, #1024	; 0x400
    21c8:	lsl	r6, r0, r1
    21cc:	mov	r0, r6
    21d0:	bl	ed4 <malloc@plt>
    21d4:	cmp	r0, #0
    21d8:	str	r0, [r5, #12]
    21dc:	beq	2234 <sf_sdup+0xc0>
    21e0:	mov	r1, #0
    21e4:	mov	r2, r6
    21e8:	add	r5, r5, #8
    21ec:	bl	f40 <memset@plt>
    21f0:	cmp	r4, r6
    21f4:	str	r6, [r5]
    21f8:	bhi	2234 <sf_sdup+0xc0>
    21fc:	sub	r0, r6, r4
    2200:	add	r7, r9, #1
    2204:	str	r0, [r5]
    2208:	mov	r2, r7
    220c:	ldr	r1, [r5, #4]
    2210:	add	r6, r1, r0
    2214:	mov	r1, r8
    2218:	mov	r0, r6
    221c:	bl	f58 <strncpy@plt>
    2220:	cmp	r7, #1
    2224:	movge	r0, #0
    2228:	strbge	r0, [r6, r9]
    222c:	mov	r0, r6
    2230:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
    2234:	ldr	r0, [pc, #16]	; 224c <sf_sdup+0xd8>
    2238:	add	r0, pc, r0
    223c:	bl	2124 <sf_bpf_error>
    2240:	.word	0x00045368
    2244:	.word	0x000452e0
    2248:	.word	0x00045344
    224c:	.word	0x00027dcc

00002250 <sfbpf_compile>:
    2250:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    2254:	add	fp, sp, #28
    2258:	sub	sp, sp, #12
    225c:	str	r3, [sp, #8]
    2260:	mov	r5, r1
    2264:	mov	r6, r0
    2268:	mov	r0, #0
    226c:	vmov.i32	q8, #0	; 0x00000000
    2270:	mov	r4, r2
    2274:	ldr	r1, [pc, #3204]	; 2f00 <sfbpf_compile+0xcb0>
    2278:	ldr	r1, [pc, r1]
    227c:	str	r0, [r1]
    2280:	ldr	r1, [pc, #3196]	; 2f04 <sfbpf_compile+0xcb4>
    2284:	add	r1, pc, r1
    2288:	str	r0, [r1]
    228c:	ldr	r1, [pc, #3188]	; 2f08 <sfbpf_compile+0xcb8>
    2290:	add	r1, pc, r1
    2294:	str	r0, [r1]
    2298:	ldr	r1, [pc, #3180]	; 2f0c <sfbpf_compile+0xcbc>
    229c:	add	r1, pc, r1
    22a0:	str	r0, [r1]
    22a4:	ldr	r0, [pc, #3172]	; 2f10 <sfbpf_compile+0xcc0>
    22a8:	add	r0, pc, r0
    22ac:	add	r1, r0, #32
    22b0:	vst1.64	{d16-d17}, [r1]
    22b4:	add	r1, r0, #16
    22b8:	vst1.64	{d16-d17}, [r1]
    22bc:	mov	r1, #48	; 0x30
    22c0:	vst1.64	{d16-d17}, [r0], r1
    22c4:	vst1.64	{d16-d17}, [r0]
    22c8:	ldr	r0, [pc, #3140]	; 2f14 <sfbpf_compile+0xcc4>
    22cc:	add	r0, pc, r0
    22d0:	bl	e50 <_setjmp@plt>
    22d4:	cmp	r0, #0
    22d8:	beq	2314 <sfbpf_compile+0xc4>
    22dc:	ldr	r0, [pc, #3124]	; 2f18 <sfbpf_compile+0xcc8>
    22e0:	ldr	r0, [pc, r0]
    22e4:	cmp	r0, #0
    22e8:	beq	2300 <sfbpf_compile+0xb0>
    22ec:	bl	f94 <freeaddrinfo@plt>
    22f0:	ldr	r0, [pc, #3108]	; 2f1c <sfbpf_compile+0xccc>
    22f4:	mov	r1, #0
    22f8:	add	r0, pc, r0
    22fc:	str	r1, [r0]
    2300:	bl	29254 <sf_lex_cleanup>
    2304:	bl	30e4 <freechunks>
    2308:	mvn	r0, #0
    230c:	sub	sp, fp, #28
    2310:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    2314:	ldr	r1, [pc, #3076]	; 2f20 <sfbpf_compile+0xcd0>
    2318:	ldr	r0, [fp, #12]
    231c:	cmp	r6, #0
    2320:	add	r1, pc, r1
    2324:	str	r6, [r1]
    2328:	ldr	r1, [pc, #3060]	; 2f24 <sfbpf_compile+0xcd4>
    232c:	add	r1, pc, r1
    2330:	str	r0, [r1]
    2334:	beq	2350 <sfbpf_compile+0x100>
    2338:	ldr	r0, [sp, #8]
    233c:	str	r4, [sp]
    2340:	cmp	r0, #0
    2344:	beq	2384 <sfbpf_compile+0x134>
    2348:	ldr	r0, [sp, #8]
    234c:	b	238c <sfbpf_compile+0x13c>
    2350:	ldr	r0, [pc, #3024]	; 2f28 <sfbpf_compile+0xcd8>
    2354:	ldr	r2, [pc, #3024]	; 2f2c <sfbpf_compile+0xcdc>
    2358:	mov	r1, #32
    235c:	add	r0, pc, r0
    2360:	add	r2, pc, r2
    2364:	vld1.64	{d16-d17}, [r0]!
    2368:	add	r3, r2, #16
    236c:	vst1.64	{d16-d17}, [r2], r1
    2370:	vld1.64	{d16-d17}, [r0]
    2374:	mov	r1, #0
    2378:	strb	r1, [r2]
    237c:	vst1.64	{d16-d17}, [r3]
    2380:	b	2308 <sfbpf_compile+0xb8>
    2384:	ldr	r0, [pc, #2980]	; 2f30 <sfbpf_compile+0xce0>
    2388:	add	r0, pc, r0
    238c:	bl	291b8 <sf_lex_init>
    2390:	ldr	r0, [pc, #2972]	; 2f34 <sfbpf_compile+0xce4>
    2394:	mov	sl, #0
    2398:	mvn	r3, #0
    239c:	mov	r2, #1
    23a0:	cmp	r5, #229	; 0xe5
    23a4:	add	r0, pc, r0
    23a8:	str	sl, [r0]
    23ac:	ldr	r0, [pc, #2948]	; 2f38 <sfbpf_compile+0xce8>
    23b0:	add	r0, pc, r0
    23b4:	str	r5, [r0]
    23b8:	ldr	r0, [pc, #2940]	; 2f3c <sfbpf_compile+0xcec>
    23bc:	add	r0, pc, r0
    23c0:	strb	sl, [r0]
    23c4:	ldr	r0, [pc, #2932]	; 2f40 <sfbpf_compile+0xcf0>
    23c8:	add	r0, pc, r0
    23cc:	strb	sl, [r0]
    23d0:	ldr	r0, [pc, #2924]	; 2f44 <sfbpf_compile+0xcf4>
    23d4:	add	r0, pc, r0
    23d8:	str	r3, [r0]
    23dc:	ldr	r1, [pc, #2916]	; 2f48 <sfbpf_compile+0xcf8>
    23e0:	add	r1, pc, r1
    23e4:	str	r3, [r1]
    23e8:	ldr	r8, [pc, #2908]	; 2f4c <sfbpf_compile+0xcfc>
    23ec:	add	r8, pc, r8
    23f0:	strb	r2, [r8]
    23f4:	ldr	r7, [pc, #2900]	; 2f50 <sfbpf_compile+0xd00>
    23f8:	add	r7, pc, r7
    23fc:	str	r3, [r7]
    2400:	ldr	r2, [pc, #2892]	; 2f54 <sfbpf_compile+0xd04>
    2404:	add	r2, pc, r2
    2408:	strb	sl, [r2]
    240c:	ldr	r9, [pc, #2884]	; 2f58 <sfbpf_compile+0xd08>
    2410:	add	r9, pc, r9
    2414:	str	r3, [r9]
    2418:	ldr	ip, [pc, #2876]	; 2f5c <sfbpf_compile+0xd0c>
    241c:	add	ip, pc, ip
    2420:	str	r3, [ip]
    2424:	ldr	r4, [pc, #2868]	; 2f60 <sfbpf_compile+0xd10>
    2428:	add	r4, pc, r4
    242c:	str	r3, [r4]
    2430:	ldr	r6, [pc, #2860]	; 2f64 <sfbpf_compile+0xd14>
    2434:	add	r6, pc, r6
    2438:	str	r3, [r6]
    243c:	ldr	r2, [pc, #2852]	; 2f68 <sfbpf_compile+0xd18>
    2440:	add	r2, pc, r2
    2444:	str	r3, [r2]
    2448:	ldr	r2, [pc, #2844]	; 2f6c <sfbpf_compile+0xd1c>
    244c:	add	r2, pc, r2
    2450:	str	sl, [r2]
    2454:	ldr	lr, [pc, #2836]	; 2f70 <sfbpf_compile+0xd20>
    2458:	add	lr, pc, lr
    245c:	strb	sl, [lr]
    2460:	ldr	r2, [pc, #2828]	; 2f74 <sfbpf_compile+0xd24>
    2464:	add	r2, pc, r2
    2468:	str	r3, [r2]
    246c:	ldr	r2, [pc, #2820]	; 2f78 <sfbpf_compile+0xd28>
    2470:	add	r2, pc, r2
    2474:	str	sl, [r2]
    2478:	ldr	r2, [pc, #2812]	; 2f7c <sfbpf_compile+0xd2c>
    247c:	add	r2, pc, r2
    2480:	str	r3, [r2]
    2484:	ldr	r2, [pc, #2804]	; 2f80 <sfbpf_compile+0xd30>
    2488:	add	r2, pc, r2
    248c:	str	r3, [r2]
    2490:	bhi	2ed4 <sfbpf_compile+0xc84>
    2494:	add	r2, pc, #4
    2498:	ldr	r3, [r2, r5, lsl #2]
    249c:	add	pc, r2, r3
    24a0:	.word	0x00000484
    24a4:	.word	0x000005d8
    24a8:	.word	0x00000a34
    24ac:	.word	0x00000a34
    24b0:	.word	0x00000a34
    24b4:	.word	0x00000a34
    24b8:	.word	0x00000608
    24bc:	.word	0x000005b0
    24c0:	.word	0x00000610
    24c4:	.word	0x00000424
    24c8:	.word	0x000005b8
    24cc:	.word	0x0000048c
    24d0:	.word	0x000003d8
    24d4:	.word	0x00000a34
    24d8:	.word	0x00000a34
    24dc:	.word	0x000005c0
    24e0:	.word	0x00000630
    24e4:	.word	0x00000a34
    24e8:	.word	0x00000a34
    24ec:	.word	0x0000048c
    24f0:	.word	0x00000a34
    24f4:	.word	0x00000a34
    24f8:	.word	0x00000a34
    24fc:	.word	0x00000a34
    2500:	.word	0x00000a34
    2504:	.word	0x00000a34
    2508:	.word	0x00000a34
    250c:	.word	0x00000a34
    2510:	.word	0x00000a34
    2514:	.word	0x00000a34
    2518:	.word	0x00000a34
    251c:	.word	0x00000a34
    2520:	.word	0x00000a34
    2524:	.word	0x00000a34
    2528:	.word	0x00000a34
    252c:	.word	0x00000a34
    2530:	.word	0x00000a34
    2534:	.word	0x00000a34
    2538:	.word	0x00000a34
    253c:	.word	0x00000a34
    2540:	.word	0x00000a34
    2544:	.word	0x00000a34
    2548:	.word	0x00000a34
    254c:	.word	0x00000a34
    2550:	.word	0x00000a34
    2554:	.word	0x00000a34
    2558:	.word	0x00000a34
    255c:	.word	0x00000a34
    2560:	.word	0x00000a34
    2564:	.word	0x00000a34
    2568:	.word	0x00000424
    256c:	.word	0x000005c8
    2570:	.word	0x00000a34
    2574:	.word	0x00000a34
    2578:	.word	0x00000a34
    257c:	.word	0x00000a34
    2580:	.word	0x00000a34
    2584:	.word	0x00000a34
    2588:	.word	0x00000a34
    258c:	.word	0x00000a34
    2590:	.word	0x00000a34
    2594:	.word	0x00000a34
    2598:	.word	0x00000a34
    259c:	.word	0x00000a34
    25a0:	.word	0x00000a34
    25a4:	.word	0x00000a34
    25a8:	.word	0x00000a34
    25ac:	.word	0x00000a34
    25b0:	.word	0x00000a34
    25b4:	.word	0x00000a34
    25b8:	.word	0x00000a34
    25bc:	.word	0x00000a34
    25c0:	.word	0x00000a34
    25c4:	.word	0x00000a34
    25c8:	.word	0x00000a34
    25cc:	.word	0x00000a34
    25d0:	.word	0x00000a34
    25d4:	.word	0x00000a34
    25d8:	.word	0x00000a34
    25dc:	.word	0x00000a34
    25e0:	.word	0x00000a34
    25e4:	.word	0x00000a34
    25e8:	.word	0x00000a34
    25ec:	.word	0x00000a34
    25f0:	.word	0x00000a34
    25f4:	.word	0x00000a34
    25f8:	.word	0x00000a34
    25fc:	.word	0x00000a34
    2600:	.word	0x00000a34
    2604:	.word	0x00000a34
    2608:	.word	0x00000a34
    260c:	.word	0x00000a34
    2610:	.word	0x00000a34
    2614:	.word	0x00000a34
    2618:	.word	0x00000a34
    261c:	.word	0x00000a34
    2620:	.word	0x00000a34
    2624:	.word	0x00000a34
    2628:	.word	0x00000a34
    262c:	.word	0x00000650
    2630:	.word	0x00000a34
    2634:	.word	0x00000a34
    2638:	.word	0x00000a34
    263c:	.word	0x00000a34
    2640:	.word	0x00000424
    2644:	.word	0x000003f8
    2648:	.word	0x00000a34
    264c:	.word	0x000003d8
    2650:	.word	0x00000484
    2654:	.word	0x00000730
    2658:	.word	0x00000a34
    265c:	.word	0x00000a34
    2660:	.word	0x00000a34
    2664:	.word	0x00000824
    2668:	.word	0x000003d8
    266c:	.word	0x00000a34
    2670:	.word	0x00000a34
    2674:	.word	0x00000a34
    2678:	.word	0x00000a34
    267c:	.word	0x000003f8
    2680:	.word	0x00000a34
    2684:	.word	0x00000a34
    2688:	.word	0x00000670
    268c:	.word	0x00000750
    2690:	.word	0x00000a34
    2694:	.word	0x00000a34
    2698:	.word	0x00000a34
    269c:	.word	0x000003f8
    26a0:	.word	0x00000a34
    26a4:	.word	0x0000052c
    26a8:	.word	0x000003b8
    26ac:	.word	0x000003b8
    26b0:	.word	0x000007a4
    26b4:	.word	0x000006ac
    26b8:	.word	0x000003b8
    26bc:	.word	0x000006cc
    26c0:	.word	0x000006d4
    26c4:	.word	0x000006f4
    26c8:	.word	0x0000054c
    26cc:	.word	0x0000056c
    26d0:	.word	0x000004d4
    26d4:	.word	0x00000a34
    26d8:	.word	0x00000a34
    26dc:	.word	0x00000398
    26e0:	.word	0x00000398
    26e4:	.word	0x00000a34
    26e8:	.word	0x00000a34
    26ec:	.word	0x00000a34
    26f0:	.word	0x00000a34
    26f4:	.word	0x00000a34
    26f8:	.word	0x00000a34
    26fc:	.word	0x00000a34
    2700:	.word	0x00000a34
    2704:	.word	0x00000a34
    2708:	.word	0x00000a34
    270c:	.word	0x00000a34
    2710:	.word	0x00000a34
    2714:	.word	0x00000a34
    2718:	.word	0x00000a34
    271c:	.word	0x00000a34
    2720:	.word	0x00000a34
    2724:	.word	0x00000a34
    2728:	.word	0x00000a34
    272c:	.word	0x000003f8
    2730:	.word	0x000005d0
    2734:	.word	0x00000a34
    2738:	.word	0x00000424
    273c:	.word	0x00000444
    2740:	.word	0x00000590
    2744:	.word	0x00000a34
    2748:	.word	0x00000a34
    274c:	.word	0x00000a34
    2750:	.word	0x00000a34
    2754:	.word	0x00000a34
    2758:	.word	0x00000a34
    275c:	.word	0x00000a34
    2760:	.word	0x00000a34
    2764:	.word	0x00000398
    2768:	.word	0x00000444
    276c:	.word	0x000003b8
    2770:	.word	0x000003b8
    2774:	.word	0x000003b8
    2778:	.word	0x000004f8
    277c:	.word	0x00000494
    2780:	.word	0x00000a34
    2784:	.word	0x00000a34
    2788:	.word	0x00000398
    278c:	.word	0x00000398
    2790:	.word	0x00000a34
    2794:	.word	0x00000398
    2798:	.word	0x00000398
    279c:	.word	0x00000398
    27a0:	.word	0x000003f8
    27a4:	.word	0x00000398
    27a8:	.word	0x000004b4
    27ac:	.word	0x00000398
    27b0:	.word	0x00000398
    27b4:	.word	0x00000894
    27b8:	.word	0x00000398
    27bc:	.word	0x00000398
    27c0:	.word	0x00000494
    27c4:	.word	0x00000398
    27c8:	.word	0x000007e0
    27cc:	.word	0x00000a34
    27d0:	.word	0x00000a34
    27d4:	.word	0x00000a34
    27d8:	.word	0x00000a34
    27dc:	.word	0x00000a34
    27e0:	.word	0x00000a34
    27e4:	.word	0x00000a34
    27e8:	.word	0x00000a34
    27ec:	.word	0x00000a34
    27f0:	.word	0x00000a34
    27f4:	.word	0x00000a34
    27f8:	.word	0x00000a34
    27fc:	.word	0x00000398
    2800:	.word	0x00000a34
    2804:	.word	0x00000a34
    2808:	.word	0x00000a34
    280c:	.word	0x00000398
    2810:	.word	0x00000398
    2814:	.word	0x00000a34
    2818:	.word	0x00000a34
    281c:	.word	0x00000a34
    2820:	.word	0x00000a34
    2824:	.word	0x00000a34
    2828:	.word	0x00000854
    282c:	.word	0x00000398
    2830:	.word	0x000003d8
    2834:	.word	0x000003d8
    2838:	ldr	r1, [pc, #2184]	; 30c8 <sfbpf_compile+0xe78>
    283c:	mvn	r0, #0
    2840:	add	r1, pc, r1
    2844:	str	r0, [r1]
    2848:	ldr	r1, [pc, #2172]	; 30cc <sfbpf_compile+0xe7c>
    284c:	add	r1, pc, r1
    2850:	str	r0, [r1]
    2854:	b	2c64 <sfbpf_compile+0xa14>
    2858:	mov	r0, #4
    285c:	ldr	r1, [pc, #2020]	; 3048 <sfbpf_compile+0xdf8>
    2860:	add	r1, pc, r1
    2864:	str	r0, [r1]
    2868:	ldr	r1, [pc, #2012]	; 304c <sfbpf_compile+0xdfc>
    286c:	add	r1, pc, r1
    2870:	str	r0, [r1]
    2874:	b	2d14 <sfbpf_compile+0xac4>
    2878:	ldr	r1, [pc, #1908]	; 2ff4 <sfbpf_compile+0xda4>
    287c:	mov	r0, #0
    2880:	mvn	r2, #0
    2884:	add	r1, pc, r1
    2888:	str	r0, [r1]
    288c:	ldr	r1, [pc, #1892]	; 2ff8 <sfbpf_compile+0xda8>
    2890:	add	r1, pc, r1
    2894:	b	2c60 <sfbpf_compile+0xa10>
    2898:	ldr	r1, [pc, #1852]	; 2fdc <sfbpf_compile+0xd8c>
    289c:	mov	r0, #0
    28a0:	add	r1, pc, r1
    28a4:	str	r0, [r1]
    28a8:	mov	r1, #24
    28ac:	ldr	r0, [pc, #1836]	; 2fe0 <sfbpf_compile+0xd90>
    28b0:	add	r0, pc, r0
    28b4:	str	r1, [r0]
    28b8:	mov	r0, #1
    28bc:	strb	r0, [lr]
    28c0:	b	2b2c <sfbpf_compile+0x8dc>
    28c4:	mov	r0, #4
    28c8:	ldr	r1, [pc, #1716]	; 2f84 <sfbpf_compile+0xd34>
    28cc:	add	r1, pc, r1
    28d0:	str	r0, [r1]
    28d4:	mov	r1, #2
    28d8:	ldr	r0, [pc, #1704]	; 2f88 <sfbpf_compile+0xd38>
    28dc:	add	r0, pc, r0
    28e0:	b	2ce0 <sfbpf_compile+0xa90>
    28e4:	ldr	r0, [pc, #1908]	; 3060 <sfbpf_compile+0xe10>
    28e8:	mov	r1, #16
    28ec:	add	r0, pc, r0
    28f0:	str	r1, [r0]
    28f4:	mov	r0, #14
    28f8:	ldr	r1, [pc, #1892]	; 3064 <sfbpf_compile+0xe14>
    28fc:	add	r1, pc, r1
    2900:	str	r0, [r1]
    2904:	mov	r1, #18
    2908:	ldr	r0, [pc, #1880]	; 3068 <sfbpf_compile+0xe18>
    290c:	add	r0, pc, r0
    2910:	str	r1, [r0]
    2914:	mov	r1, #21
    2918:	ldr	r0, [pc, #1868]	; 306c <sfbpf_compile+0xe1c>
    291c:	add	r0, pc, r0
    2920:	b	2d90 <sfbpf_compile+0xb40>
    2924:	mov	r0, #4
    2928:	b	2bd4 <sfbpf_compile+0x984>
    292c:	mov	r0, #0
    2930:	b	2b14 <sfbpf_compile+0x8c4>
    2934:	ldr	r1, [pc, #1884]	; 3098 <sfbpf_compile+0xe48>
    2938:	mvn	r0, #0
    293c:	mov	r2, #18
    2940:	add	r1, pc, r1
    2944:	str	r0, [r1]
    2948:	ldr	r1, [pc, #1868]	; 309c <sfbpf_compile+0xe4c>
    294c:	add	r1, pc, r1
    2950:	b	2c60 <sfbpf_compile+0xa10>
    2954:	ldr	r1, [pc, #1860]	; 30a0 <sfbpf_compile+0xe50>
    2958:	mvn	r0, #0
    295c:	mov	r2, #8
    2960:	add	r1, pc, r1
    2964:	str	r0, [r1]
    2968:	ldr	r1, [pc, #1844]	; 30a4 <sfbpf_compile+0xe54>
    296c:	add	r1, pc, r1
    2970:	b	2c60 <sfbpf_compile+0xa10>
    2974:	mov	r0, #3
    2978:	str	r0, [ip]
    297c:	mov	r0, #2
    2980:	str	r0, [r9]
    2984:	mov	r0, #4
    2988:	str	r0, [r4]
    298c:	str	r0, [r6]
    2990:	mov	r0, #7
    2994:	b	2d54 <sfbpf_compile+0xb04>
    2998:	ldr	r1, [pc, #1684]	; 3034 <sfbpf_compile+0xde4>
    299c:	mov	r0, #0
    29a0:	mvn	r2, #0
    29a4:	add	r1, pc, r1
    29a8:	str	r0, [r1]
    29ac:	ldr	r1, [pc, #1668]	; 3038 <sfbpf_compile+0xde8>
    29b0:	add	r1, pc, r1
    29b4:	str	r2, [r1]
    29b8:	mov	r2, #4
    29bc:	ldr	r1, [pc, #1656]	; 303c <sfbpf_compile+0xdec>
    29c0:	add	r1, pc, r1
    29c4:	str	r2, [r1]
    29c8:	b	2c70 <sfbpf_compile+0xa20>
    29cc:	ldr	r1, [pc, #1468]	; 2f90 <sfbpf_compile+0xd40>
    29d0:	mov	r0, #8
    29d4:	add	r1, pc, r1
    29d8:	str	r0, [r1]
    29dc:	mov	r1, #4
    29e0:	ldr	r0, [pc, #1452]	; 2f94 <sfbpf_compile+0xd44>
    29e4:	add	r0, pc, r0
    29e8:	b	2ce0 <sfbpf_compile+0xa90>
    29ec:	ldr	r1, [pc, #1612]	; 3040 <sfbpf_compile+0xdf0>
    29f0:	mov	r0, #18
    29f4:	add	r1, pc, r1
    29f8:	str	r0, [r1]
    29fc:	mov	r1, #16
    2a00:	ldr	r0, [pc, #1596]	; 3044 <sfbpf_compile+0xdf4>
    2a04:	add	r0, pc, r0
    2a08:	b	2ce0 <sfbpf_compile+0xa90>
    2a0c:	mov	r0, #7
    2a10:	str	r0, [ip]
    2a14:	mov	r0, #6
    2a18:	str	r0, [r9]
    2a1c:	mov	r0, #8
    2a20:	str	r0, [r4]
    2a24:	str	r0, [r6]
    2a28:	mov	r0, #11
    2a2c:	b	2d54 <sfbpf_compile+0xb04>
    2a30:	ldr	r1, [pc, #1592]	; 3070 <sfbpf_compile+0xe20>
    2a34:	mov	r0, #6
    2a38:	add	r1, pc, r1
    2a3c:	str	r0, [r1]
    2a40:	mov	r1, #4
    2a44:	ldr	r0, [pc, #1576]	; 3074 <sfbpf_compile+0xe24>
    2a48:	add	r0, pc, r0
    2a4c:	b	2d10 <sfbpf_compile+0xac0>
    2a50:	mov	r0, #6
    2a54:	b	28c8 <sfbpf_compile+0x678>
    2a58:	mov	r0, #13
    2a5c:	b	2b14 <sfbpf_compile+0x8c4>
    2a60:	mov	r0, #24
    2a64:	b	2ab4 <sfbpf_compile+0x864>
    2a68:	mov	r0, #8
    2a6c:	b	2af4 <sfbpf_compile+0x8a4>
    2a70:	mov	r0, #12
    2a74:	b	285c <sfbpf_compile+0x60c>
    2a78:	ldr	r1, [pc, #1304]	; 2f98 <sfbpf_compile+0xd48>
    2a7c:	mov	r0, #14
    2a80:	add	r1, pc, r1
    2a84:	str	r0, [r1]
    2a88:	mov	r1, #12
    2a8c:	ldr	r0, [pc, #1288]	; 2f9c <sfbpf_compile+0xd4c>
    2a90:	add	r0, pc, r0
    2a94:	str	r1, [r0]
    2a98:	mov	r1, #0
    2a9c:	ldr	r0, [pc, #1276]	; 2fa0 <sfbpf_compile+0xd50>
    2aa0:	add	r0, pc, r0
    2aa4:	b	2b38 <sfbpf_compile+0x8e8>
    2aa8:	mov	r0, #14
    2aac:	b	2b14 <sfbpf_compile+0x8c4>
    2ab0:	mov	r0, #16
    2ab4:	ldr	r1, [pc, #1256]	; 2fa4 <sfbpf_compile+0xd54>
    2ab8:	add	r1, pc, r1
    2abc:	str	r0, [r1]
    2ac0:	mvn	r1, #0
    2ac4:	ldr	r0, [pc, #1244]	; 2fa8 <sfbpf_compile+0xd58>
    2ac8:	add	r0, pc, r0
    2acc:	b	2ce0 <sfbpf_compile+0xa90>
    2ad0:	ldr	r1, [pc, #1260]	; 2fc4 <sfbpf_compile+0xd74>
    2ad4:	mov	r0, #24
    2ad8:	add	r1, pc, r1
    2adc:	str	r0, [r1]
    2ae0:	mov	r1, #5
    2ae4:	ldr	r0, [pc, #1244]	; 2fc8 <sfbpf_compile+0xd78>
    2ae8:	add	r0, pc, r0
    2aec:	b	2ce0 <sfbpf_compile+0xa90>
    2af0:	mov	r0, #44	; 0x2c
    2af4:	ldr	r1, [pc, #1216]	; 2fbc <sfbpf_compile+0xd6c>
    2af8:	add	r1, pc, r1
    2afc:	str	r0, [r1]
    2b00:	mov	r1, #6
    2b04:	ldr	r0, [pc, #1204]	; 2fc0 <sfbpf_compile+0xd70>
    2b08:	add	r0, pc, r0
    2b0c:	b	2ce0 <sfbpf_compile+0xa90>
    2b10:	mov	r0, #16
    2b14:	ldr	r1, [pc, #1200]	; 2fcc <sfbpf_compile+0xd7c>
    2b18:	add	r1, pc, r1
    2b1c:	str	r0, [r1]
    2b20:	ldr	r1, [pc, #1192]	; 2fd0 <sfbpf_compile+0xd80>
    2b24:	add	r1, pc, r1
    2b28:	str	r0, [r1]
    2b2c:	ldr	r0, [pc, #1184]	; 2fd4 <sfbpf_compile+0xd84>
    2b30:	mov	r1, #8
    2b34:	add	r0, pc, r0
    2b38:	str	r1, [r0]
    2b3c:	mov	r1, #3
    2b40:	ldr	r0, [pc, #1168]	; 2fd8 <sfbpf_compile+0xd88>
    2b44:	add	r0, pc, r0
    2b48:	b	2d90 <sfbpf_compile+0xb40>
    2b4c:	ldr	r1, [pc, #1324]	; 3080 <sfbpf_compile+0xe30>
    2b50:	mov	r0, #12
    2b54:	add	r1, pc, r1
    2b58:	str	r0, [r1]
    2b5c:	mov	r1, #6
    2b60:	ldr	r0, [pc, #1308]	; 3084 <sfbpf_compile+0xe34>
    2b64:	add	r0, pc, r0
    2b68:	b	2d10 <sfbpf_compile+0xac0>
    2b6c:	mov	r0, #8
    2b70:	b	2b98 <sfbpf_compile+0x948>
    2b74:	ldr	r1, [pc, #1300]	; 3090 <sfbpf_compile+0xe40>
    2b78:	mvn	r0, #0
    2b7c:	mov	r2, #12
    2b80:	add	r1, pc, r1
    2b84:	str	r0, [r1]
    2b88:	ldr	r1, [pc, #1284]	; 3094 <sfbpf_compile+0xe44>
    2b8c:	add	r1, pc, r1
    2b90:	b	2c60 <sfbpf_compile+0xa10>
    2b94:	mov	r0, #4
    2b98:	ldr	r1, [pc, #1200]	; 3050 <sfbpf_compile+0xe00>
    2b9c:	add	r1, pc, r1
    2ba0:	str	r0, [r1]
    2ba4:	ldr	r1, [pc, #1192]	; 3054 <sfbpf_compile+0xe04>
    2ba8:	add	r1, pc, r1
    2bac:	str	r0, [r1]
    2bb0:	mov	r1, #0
    2bb4:	ldr	r0, [pc, #1180]	; 3058 <sfbpf_compile+0xe08>
    2bb8:	add	r0, pc, r0
    2bbc:	str	r1, [r0]
    2bc0:	mov	r1, #10
    2bc4:	ldr	r0, [pc, #1168]	; 305c <sfbpf_compile+0xe0c>
    2bc8:	add	r0, pc, r0
    2bcc:	b	2d90 <sfbpf_compile+0xb40>
    2bd0:	mov	r0, #12
    2bd4:	ldr	r1, [pc, #976]	; 2fac <sfbpf_compile+0xd5c>
    2bd8:	add	r1, pc, r1
    2bdc:	str	r0, [r1]
    2be0:	mov	r1, #0
    2be4:	ldr	r0, [pc, #964]	; 2fb0 <sfbpf_compile+0xd60>
    2be8:	add	r0, pc, r0
    2bec:	b	2d78 <sfbpf_compile+0xb28>
    2bf0:	mov	r2, #1
    2bf4:	str	r2, [r0]
    2bf8:	ldr	r0, [pc, #996]	; 2fe4 <sfbpf_compile+0xd94>
    2bfc:	add	r0, pc, r0
    2c00:	strb	r2, [r0]
    2c04:	mov	r0, #2
    2c08:	str	r0, [r1]
    2c0c:	mov	r0, #0
    2c10:	strb	r0, [r8]
    2c14:	mvn	r0, #0
    2c18:	ldr	r1, [pc, #968]	; 2fe8 <sfbpf_compile+0xd98>
    2c1c:	add	r1, pc, r1
    2c20:	str	r0, [r1]
    2c24:	mov	r0, #4
    2c28:	str	r0, [r7]
    2c2c:	ldr	r1, [pc, #952]	; 2fec <sfbpf_compile+0xd9c>
    2c30:	add	r1, pc, r1
    2c34:	str	r0, [r1]
    2c38:	ldr	r1, [pc, #944]	; 2ff0 <sfbpf_compile+0xda0>
    2c3c:	add	r1, pc, r1
    2c40:	b	2b28 <sfbpf_compile+0x8d8>
    2c44:	ldr	r1, [pc, #1084]	; 3088 <sfbpf_compile+0xe38>
    2c48:	mvn	r0, #0
    2c4c:	mov	r2, #6
    2c50:	add	r1, pc, r1
    2c54:	str	r0, [r1]
    2c58:	ldr	r1, [pc, #1068]	; 308c <sfbpf_compile+0xe3c>
    2c5c:	add	r1, pc, r1
    2c60:	str	r2, [r1]
    2c64:	ldr	r1, [pc, #912]	; 2ffc <sfbpf_compile+0xdac>
    2c68:	add	r1, pc, r1
    2c6c:	str	r0, [r1]
    2c70:	ldr	r1, [pc, #904]	; 3000 <sfbpf_compile+0xdb0>
    2c74:	add	r1, pc, r1
    2c78:	str	r0, [r1]
    2c7c:	b	2d94 <sfbpf_compile+0xb44>
    2c80:	ldr	r1, [pc, #1068]	; 30b4 <sfbpf_compile+0xe64>
    2c84:	mvn	r0, #0
    2c88:	add	r1, pc, r1
    2c8c:	str	r0, [r1]
    2c90:	ldr	r1, [pc, #1056]	; 30b8 <sfbpf_compile+0xe68>
    2c94:	add	r1, pc, r1
    2c98:	str	r0, [r1]
    2c9c:	ldr	r1, [pc, #1048]	; 30bc <sfbpf_compile+0xe6c>
    2ca0:	add	r1, pc, r1
    2ca4:	str	r0, [r1]
    2ca8:	ldr	r1, [pc, #1040]	; 30c0 <sfbpf_compile+0xe70>
    2cac:	add	r1, pc, r1
    2cb0:	str	r0, [r1]
    2cb4:	mov	r0, #1
    2cb8:	ldr	r1, [pc, #1028]	; 30c4 <sfbpf_compile+0xe74>
    2cbc:	add	r1, pc, r1
    2cc0:	b	2c78 <sfbpf_compile+0xa28>
    2cc4:	ldr	r1, [pc, #864]	; 302c <sfbpf_compile+0xddc>
    2cc8:	mov	r0, #16
    2ccc:	add	r1, pc, r1
    2cd0:	str	r0, [r1]
    2cd4:	mov	r1, #14
    2cd8:	ldr	r0, [pc, #848]	; 3030 <sfbpf_compile+0xde0>
    2cdc:	add	r0, pc, r0
    2ce0:	str	r1, [r0]
    2ce4:	mov	r1, #0
    2ce8:	ldr	r0, [pc, #668]	; 2f8c <sfbpf_compile+0xd3c>
    2cec:	add	r0, pc, r0
    2cf0:	b	2d84 <sfbpf_compile+0xb34>
    2cf4:	ldr	r1, [pc, #980]	; 30d0 <sfbpf_compile+0xe80>
    2cf8:	mov	r0, #24
    2cfc:	add	r1, pc, r1
    2d00:	str	r0, [r1]
    2d04:	mov	r1, #1
    2d08:	ldr	r0, [pc, #964]	; 30d4 <sfbpf_compile+0xe84>
    2d0c:	add	r0, pc, r0
    2d10:	str	r1, [r0]
    2d14:	ldr	r0, [pc, #860]	; 3078 <sfbpf_compile+0xe28>
    2d18:	mov	r1, #0
    2d1c:	add	r0, pc, r0
    2d20:	str	r1, [r0]
    2d24:	mvn	r1, #0
    2d28:	ldr	r0, [pc, #844]	; 307c <sfbpf_compile+0xe2c>
    2d2c:	add	r0, pc, r0
    2d30:	b	2d90 <sfbpf_compile+0xb40>
    2d34:	mov	r0, #23
    2d38:	str	r0, [ip]
    2d3c:	mov	r0, #22
    2d40:	str	r0, [r9]
    2d44:	mov	r0, #24
    2d48:	str	r0, [r4]
    2d4c:	str	r0, [r6]
    2d50:	mov	r0, #27
    2d54:	ldr	r1, [pc, #844]	; 30a8 <sfbpf_compile+0xe58>
    2d58:	add	r1, pc, r1
    2d5c:	str	r0, [r1]
    2d60:	mvn	r1, #0
    2d64:	ldr	r0, [pc, #832]	; 30ac <sfbpf_compile+0xe5c>
    2d68:	add	r0, pc, r0
    2d6c:	str	r1, [r0]
    2d70:	ldr	r0, [pc, #824]	; 30b0 <sfbpf_compile+0xe60>
    2d74:	add	r0, pc, r0
    2d78:	str	r1, [r0]
    2d7c:	ldr	r0, [pc, #560]	; 2fb4 <sfbpf_compile+0xd64>
    2d80:	add	r0, pc, r0
    2d84:	str	r1, [r0]
    2d88:	ldr	r0, [pc, #552]	; 2fb8 <sfbpf_compile+0xd68>
    2d8c:	add	r0, pc, r0
    2d90:	str	r1, [r0]
    2d94:	ldr	r4, [pc, #616]	; 3004 <sfbpf_compile+0xdb4>
    2d98:	ldr	r4, [pc, r4]
    2d9c:	bl	250e8 <sfbpf_parse>
    2da0:	ldr	r0, [r4]
    2da4:	ldr	r4, [sp]
    2da8:	cmp	r0, #0
    2dac:	bne	2ee4 <sfbpf_compile+0xc94>
    2db0:	ldr	r0, [pc, #592]	; 3008 <sfbpf_compile+0xdb8>
    2db4:	ldr	r0, [pc, r0]
    2db8:	cmp	r0, #0
    2dbc:	bne	2e60 <sfbpf_compile+0xc10>
    2dc0:	ldr	r0, [pc, #580]	; 300c <sfbpf_compile+0xdbc>
    2dc4:	ldr	r0, [pc, r0]
    2dc8:	ldr	r6, [pc, #576]	; 3010 <sfbpf_compile+0xdc0>
    2dcc:	add	r6, pc, r6
    2dd0:	ldr	r5, [r6, r0, lsl #3]!
    2dd4:	ldr	r7, [pc, #568]	; 3014 <sfbpf_compile+0xdc4>
    2dd8:	ldr	r7, [pc, r7]
    2ddc:	cmp	r5, #207	; 0xcf
    2de0:	bhi	2e34 <sfbpf_compile+0xbe4>
    2de4:	ldr	r2, [pc, #556]	; 3018 <sfbpf_compile+0xdc8>
    2de8:	add	r1, r0, #1
    2dec:	cmp	r0, #15
    2df0:	add	r2, pc, r2
    2df4:	str	r1, [r2]
    2df8:	bge	2ef4 <sfbpf_compile+0xca4>
    2dfc:	mov	r0, #1024	; 0x400
    2e00:	lsl	r5, r0, r1
    2e04:	mov	r0, r5
    2e08:	bl	ed4 <malloc@plt>
    2e0c:	cmp	r0, #0
    2e10:	str	r0, [r6, #12]
    2e14:	beq	2ef4 <sfbpf_compile+0xca4>
    2e18:	mov	r1, #0
    2e1c:	mov	r2, r5
    2e20:	add	r6, r6, #8
    2e24:	bl	f40 <memset@plt>
    2e28:	cmp	r5, #207	; 0xcf
    2e2c:	str	r5, [r6]
    2e30:	bls	2ef4 <sfbpf_compile+0xca4>
    2e34:	sub	r0, r5, #208	; 0xd0
    2e38:	str	r0, [r6]
    2e3c:	ldr	r1, [r6, #4]
    2e40:	add	r0, r1, r0
    2e44:	mov	r1, #6
    2e48:	str	r7, [r0, #20]
    2e4c:	str	r1, [r0, #8]
    2e50:	str	r0, [r0, #96]	; 0x60
    2e54:	ldr	r1, [pc, #448]	; 301c <sfbpf_compile+0xdcc>
    2e58:	add	r1, pc, r1
    2e5c:	str	r0, [r1]
    2e60:	ldr	r1, [fp, #8]
    2e64:	cmp	r1, #0
    2e68:	beq	2eac <sfbpf_compile+0xc5c>
    2e6c:	ldr	r1, [pc, #428]	; 3020 <sfbpf_compile+0xdd0>
    2e70:	ldr	r1, [pc, r1]
    2e74:	cmp	r1, #0
    2e78:	bne	2eac <sfbpf_compile+0xc5c>
    2e7c:	ldr	r0, [pc, #416]	; 3024 <sfbpf_compile+0xdd4>
    2e80:	add	r0, pc, r0
    2e84:	bl	20bcc <sf_bpf_optimize>
    2e88:	ldr	r0, [pc, #408]	; 3028 <sfbpf_compile+0xdd8>
    2e8c:	ldr	r0, [pc, r0]
    2e90:	cmp	r0, #0
    2e94:	beq	2ee8 <sfbpf_compile+0xc98>
    2e98:	ldr	r1, [r0, #8]
    2e9c:	cmp	r1, #6
    2ea0:	ldreq	r1, [r0, #20]
    2ea4:	cmpeq	r1, #0
    2ea8:	beq	2ee8 <sfbpf_compile+0xc98>
    2eac:	add	r1, sp, #4
    2eb0:	bl	24318 <sf_icode_to_fcode>
    2eb4:	ldr	r1, [sp, #4]
    2eb8:	str	r1, [r4]
    2ebc:	str	r0, [r4, #4]
    2ec0:	bl	29254 <sf_lex_cleanup>
    2ec4:	bl	30e4 <freechunks>
    2ec8:	mov	r0, #0
    2ecc:	sub	sp, fp, #28
    2ed0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    2ed4:	ldr	r0, [pc, #508]	; 30d8 <sfbpf_compile+0xe88>
    2ed8:	mov	r1, r5
    2edc:	add	r0, pc, r0
    2ee0:	bl	2124 <sf_bpf_error>
    2ee4:	bl	328c <syntax>
    2ee8:	ldr	r0, [pc, #496]	; 30e0 <sfbpf_compile+0xe90>
    2eec:	add	r0, pc, r0
    2ef0:	bl	2124 <sf_bpf_error>
    2ef4:	ldr	r0, [pc, #480]	; 30dc <sfbpf_compile+0xe8c>
    2ef8:	add	r0, pc, r0
    2efc:	bl	2124 <sf_bpf_error>
    2f00:	.word	0x00044e38
    2f04:	.word	0x00045720
    2f08:	.word	0x00045190
    2f0c:	.word	0x00045270
    2f10:	.word	0x00045268
    2f14:	.word	0x00044fcc
    2f18:	.word	0x00045144
    2f1c:	.word	0x0004512c
    2f20:	.word	0x0004510c
    2f24:	.word	0x000450fc
    2f28:	.word	0x0002716c
    2f2c:	.word	0x00044e30
    2f30:	.word	0x000270d0
    2f34:	.word	0x000450a4
    2f38:	.word	0x00045080
    2f3c:	.word	0x00045098
    2f40:	.word	0x0004506c
    2f44:	.word	0x00045084
    2f48:	.word	0x0004507c
    2f4c:	.word	0x00045074
    2f50:	.word	0x0004506c
    2f54:	.word	0x0004504c
    2f58:	.word	0x00045058
    2f5c:	.word	0x00045050
    2f60:	.word	0x00045048
    2f64:	.word	0x00045040
    2f68:	.word	0x00045038
    2f6c:	.word	0x00044ff0
    2f70:	.word	0x000450a8
    2f74:	.word	0x00044c74
    2f78:	.word	0x00044c64
    2f7c:	.word	0x00045088
    2f80:	.word	0x00045080
    2f84:	.word	0x00044b70
    2f88:	.word	0x00044b5c
    2f8c:	.word	0x00044754
    2f90:	.word	0x00044a68
    2f94:	.word	0x00044a54
    2f98:	.word	0x000449bc
    2f9c:	.word	0x000449a8
    2fa0:	.word	0x000449a0
    2fa4:	.word	0x00044984
    2fa8:	.word	0x00044970
    2fac:	.word	0x00044864
    2fb0:	.word	0x00044850
    2fb4:	.word	0x000446c0
    2fb8:	.word	0x000446c0
    2fbc:	.word	0x00044944
    2fc0:	.word	0x00044930
    2fc4:	.word	0x00044964
    2fc8:	.word	0x00044950
    2fcc:	.word	0x00044924
    2fd0:	.word	0x00044914
    2fd4:	.word	0x0004490c
    2fd8:	.word	0x00044908
    2fdc:	.word	0x00044b9c
    2fe0:	.word	0x00044b88
    2fe4:	.word	0x00044858
    2fe8:	.word	0x0004482c
    2fec:	.word	0x00044808
    2ff0:	.word	0x00044800
    2ff4:	.word	0x00044bb8
    2ff8:	.word	0x00044ba8
    2ffc:	.word	0x000447d8
    3000:	.word	0x000447d8
    3004:	.word	0x00044318
    3008:	.word	0x0004466c
    300c:	.word	0x00044738
    3010:	.word	0x000446b0
    3014:	.word	0x00044654
    3018:	.word	0x0004470c
    301c:	.word	0x000445c8
    3020:	.word	0x00044b34
    3024:	.word	0x000445a0
    3028:	.word	0x00044594
    302c:	.word	0x00044770
    3030:	.word	0x0004475c
    3034:	.word	0x00044a98
    3038:	.word	0x00044a88
    303c:	.word	0x00044a80
    3040:	.word	0x00044a48
    3044:	.word	0x00044a34
    3048:	.word	0x00044bdc
    304c:	.word	0x00044bcc
    3050:	.word	0x000448a0
    3054:	.word	0x00044890
    3058:	.word	0x00044888
    305c:	.word	0x00044884
    3060:	.word	0x00044b4c
    3064:	.word	0x00044b40
    3068:	.word	0x00044b34
    306c:	.word	0x00044b30
    3070:	.word	0x00044a04
    3074:	.word	0x000449f0
    3078:	.word	0x00044724
    307c:	.word	0x00044720
    3080:	.word	0x000448e8
    3084:	.word	0x000448d4
    3088:	.word	0x000447ec
    308c:	.word	0x000447dc
    3090:	.word	0x000448bc
    3094:	.word	0x000448ac
    3098:	.word	0x00044afc
    309c:	.word	0x00044aec
    30a0:	.word	0x00044adc
    30a4:	.word	0x00044acc
    30a8:	.word	0x00044720
    30ac:	.word	0x000446d0
    30b0:	.word	0x000446c8
    30b4:	.word	0x000447b4
    30b8:	.word	0x000447a4
    30bc:	.word	0x000447a0
    30c0:	.word	0x000447a0
    30c4:	.word	0x0004478c
    30c8:	.word	0x00044bfc
    30cc:	.word	0x00044bec
    30d0:	.word	0x00044740
    30d4:	.word	0x0004472c
    30d8:	.word	0x00027158
    30dc:	.word	0x0002710c
    30e0:	.word	0x00026604

000030e4 <freechunks>:
    30e4:	push	{r4, r5, fp, lr}
    30e8:	add	fp, sp, #8
    30ec:	ldr	r0, [pc, #400]	; 3284 <freechunks+0x1a0>
    30f0:	mov	r5, #0
    30f4:	add	r0, pc, r0
    30f8:	str	r5, [r0]
    30fc:	ldr	r4, [pc, #388]	; 3288 <freechunks+0x1a4>
    3100:	add	r4, pc, r4
    3104:	ldr	r0, [r4, #4]
    3108:	cmp	r0, #0
    310c:	beq	3118 <freechunks+0x34>
    3110:	bl	e5c <free@plt>
    3114:	str	r5, [r4, #4]
    3118:	ldr	r0, [r4, #12]
    311c:	cmp	r0, #0
    3120:	beq	3130 <freechunks+0x4c>
    3124:	bl	e5c <free@plt>
    3128:	mov	r0, #0
    312c:	str	r0, [r4, #12]
    3130:	ldr	r0, [r4, #20]
    3134:	cmp	r0, #0
    3138:	beq	3148 <freechunks+0x64>
    313c:	bl	e5c <free@plt>
    3140:	mov	r0, #0
    3144:	str	r0, [r4, #20]
    3148:	ldr	r0, [r4, #28]
    314c:	cmp	r0, #0
    3150:	beq	3160 <freechunks+0x7c>
    3154:	bl	e5c <free@plt>
    3158:	mov	r0, #0
    315c:	str	r0, [r4, #28]
    3160:	ldr	r0, [r4, #36]	; 0x24
    3164:	cmp	r0, #0
    3168:	beq	3178 <freechunks+0x94>
    316c:	bl	e5c <free@plt>
    3170:	mov	r0, #0
    3174:	str	r0, [r4, #36]	; 0x24
    3178:	ldr	r0, [r4, #44]	; 0x2c
    317c:	cmp	r0, #0
    3180:	beq	3190 <freechunks+0xac>
    3184:	bl	e5c <free@plt>
    3188:	mov	r0, #0
    318c:	str	r0, [r4, #44]	; 0x2c
    3190:	ldr	r0, [r4, #52]	; 0x34
    3194:	cmp	r0, #0
    3198:	beq	31a8 <freechunks+0xc4>
    319c:	bl	e5c <free@plt>
    31a0:	mov	r0, #0
    31a4:	str	r0, [r4, #52]	; 0x34
    31a8:	ldr	r0, [r4, #60]	; 0x3c
    31ac:	cmp	r0, #0
    31b0:	beq	31c0 <freechunks+0xdc>
    31b4:	bl	e5c <free@plt>
    31b8:	mov	r0, #0
    31bc:	str	r0, [r4, #60]	; 0x3c
    31c0:	ldr	r0, [r4, #68]	; 0x44
    31c4:	cmp	r0, #0
    31c8:	beq	31d8 <freechunks+0xf4>
    31cc:	bl	e5c <free@plt>
    31d0:	mov	r0, #0
    31d4:	str	r0, [r4, #68]	; 0x44
    31d8:	ldr	r0, [r4, #76]	; 0x4c
    31dc:	cmp	r0, #0
    31e0:	beq	31f0 <freechunks+0x10c>
    31e4:	bl	e5c <free@plt>
    31e8:	mov	r0, #0
    31ec:	str	r0, [r4, #76]	; 0x4c
    31f0:	ldr	r0, [r4, #84]	; 0x54
    31f4:	cmp	r0, #0
    31f8:	beq	3208 <freechunks+0x124>
    31fc:	bl	e5c <free@plt>
    3200:	mov	r0, #0
    3204:	str	r0, [r4, #84]	; 0x54
    3208:	ldr	r0, [r4, #92]	; 0x5c
    320c:	cmp	r0, #0
    3210:	beq	3220 <freechunks+0x13c>
    3214:	bl	e5c <free@plt>
    3218:	mov	r0, #0
    321c:	str	r0, [r4, #92]	; 0x5c
    3220:	ldr	r0, [r4, #100]	; 0x64
    3224:	cmp	r0, #0
    3228:	beq	3238 <freechunks+0x154>
    322c:	bl	e5c <free@plt>
    3230:	mov	r0, #0
    3234:	str	r0, [r4, #100]	; 0x64
    3238:	ldr	r0, [r4, #108]	; 0x6c
    323c:	cmp	r0, #0
    3240:	beq	3250 <freechunks+0x16c>
    3244:	bl	e5c <free@plt>
    3248:	mov	r0, #0
    324c:	str	r0, [r4, #108]	; 0x6c
    3250:	ldr	r0, [r4, #116]	; 0x74
    3254:	cmp	r0, #0
    3258:	beq	3268 <freechunks+0x184>
    325c:	bl	e5c <free@plt>
    3260:	mov	r0, #0
    3264:	str	r0, [r4, #116]	; 0x74
    3268:	ldr	r0, [r4, #124]	; 0x7c
    326c:	cmp	r0, #0
    3270:	popeq	{r4, r5, fp, pc}
    3274:	bl	e5c <free@plt>
    3278:	mov	r0, #0
    327c:	str	r0, [r4, #124]	; 0x7c
    3280:	pop	{r4, r5, fp, pc}
    3284:	.word	0x00044408
    3288:	.word	0x0004437c

0000328c <syntax>:
    328c:	push	{fp, lr}
    3290:	mov	fp, sp
    3294:	ldr	r0, [pc, #4]	; 32a0 <syntax+0x14>
    3298:	add	r0, pc, r0
    329c:	bl	2124 <sf_bpf_error>
    32a0:	.word	0x00026d7a

000032a4 <sfbpf_freecode>:
    32a4:	push	{r4, r5, fp, lr}
    32a8:	add	fp, sp, #8
    32ac:	mov	r5, #0
    32b0:	mov	r4, r0
    32b4:	str	r5, [r0]
    32b8:	ldr	r0, [r0, #4]
    32bc:	cmp	r0, #0
    32c0:	popeq	{r4, r5, fp, pc}
    32c4:	bl	e5c <free@plt>
    32c8:	str	r5, [r4, #4]
    32cc:	pop	{r4, r5, fp, pc}

000032d0 <sf_finish_parse>:
    32d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    32d4:	add	fp, sp, #28
    32d8:	sub	sp, sp, #36	; 0x24
    32dc:	ldr	r7, [r0, #96]	; 0x60
    32e0:	ldr	r3, [pc, #3872]	; 4208 <sf_finish_parse+0xf38>
    32e4:	mov	r9, r0
    32e8:	mov	ip, #0
    32ec:	ldr	r3, [pc, r3]
    32f0:	str	r0, [sp, #20]
    32f4:	str	r7, [sp, #16]
    32f8:	cmp	r3, #162	; 0xa2
    32fc:	str	r3, [sp, #24]
    3300:	bgt	33a0 <sf_finish_parse+0xd0>
    3304:	cmp	r3, #119	; 0x77
    3308:	beq	343c <sf_finish_parse+0x16c>
    330c:	cmp	r3, #127	; 0x7f
    3310:	bne	42f4 <sf_finish_parse+0x1024>
    3314:	ldr	r6, [pc, #3824]	; 420c <sf_finish_parse+0xf3c>
    3318:	ldr	r6, [pc, r6]
    331c:	cmn	r6, #1
    3320:	beq	355c <sf_finish_parse+0x28c>
    3324:	ldr	r0, [pc, #3812]	; 4210 <sf_finish_parse+0xf40>
    3328:	ldr	r0, [pc, r0]
    332c:	ldr	sl, [pc, #3808]	; 4214 <sf_finish_parse+0xf44>
    3330:	str	r6, [sp, #12]
    3334:	add	sl, pc, sl
    3338:	mov	r4, sl
    333c:	ldr	r5, [r4, r0, lsl #3]!
    3340:	cmp	r5, #19
    3344:	bhi	3564 <sf_finish_parse+0x294>
    3348:	ldr	r1, [pc, #3784]	; 4218 <sf_finish_parse+0xf48>
    334c:	add	r8, r0, #1
    3350:	cmp	r0, #15
    3354:	add	r1, pc, r1
    3358:	str	r8, [r1]
    335c:	bge	54c4 <sf_finish_parse+0x21f4>
    3360:	mov	r0, #1024	; 0x400
    3364:	lsl	r5, r0, r8
    3368:	mov	r0, r5
    336c:	bl	ed4 <malloc@plt>
    3370:	cmp	r0, #0
    3374:	str	r0, [r4, #12]
    3378:	beq	54c4 <sf_finish_parse+0x21f4>
    337c:	mov	r1, #0
    3380:	mov	r2, r5
    3384:	add	r7, r4, #8
    3388:	bl	f40 <memset@plt>
    338c:	cmp	r5, #20
    3390:	str	r5, [r7]
    3394:	bcc	54c4 <sf_finish_parse+0x21f4>
    3398:	add	r4, sl, r8, lsl #3
    339c:	b	356c <sf_finish_parse+0x29c>
    33a0:	cmp	r3, #163	; 0xa3
    33a4:	beq	34d4 <sf_finish_parse+0x204>
    33a8:	cmp	r3, #192	; 0xc0
    33ac:	bne	42f4 <sf_finish_parse+0x1024>
    33b0:	ldr	r6, [pc, #4012]	; 4364 <sf_finish_parse+0x1094>
    33b4:	ldr	r6, [pc, r6]
    33b8:	cmn	r6, #1
    33bc:	beq	355c <sf_finish_parse+0x28c>
    33c0:	ldr	r0, [pc, #4000]	; 4368 <sf_finish_parse+0x1098>
    33c4:	ldr	r0, [pc, r0]
    33c8:	ldr	sl, [pc, #3996]	; 436c <sf_finish_parse+0x109c>
    33cc:	str	r6, [sp, #12]
    33d0:	add	sl, pc, sl
    33d4:	mov	r4, sl
    33d8:	ldr	r5, [r4, r0, lsl #3]!
    33dc:	cmp	r5, #19
    33e0:	bhi	35f0 <sf_finish_parse+0x320>
    33e4:	ldr	r1, [pc, #4076]	; 43d8 <sf_finish_parse+0x1108>
    33e8:	add	r8, r0, #1
    33ec:	cmp	r0, #15
    33f0:	add	r1, pc, r1
    33f4:	str	r8, [r1]
    33f8:	bge	54c4 <sf_finish_parse+0x21f4>
    33fc:	mov	r0, #1024	; 0x400
    3400:	lsl	r5, r0, r8
    3404:	mov	r0, r5
    3408:	bl	ed4 <malloc@plt>
    340c:	cmp	r0, #0
    3410:	str	r0, [r4, #12]
    3414:	beq	54c4 <sf_finish_parse+0x21f4>
    3418:	mov	r1, #0
    341c:	mov	r2, r5
    3420:	add	r7, r4, #8
    3424:	bl	f40 <memset@plt>
    3428:	cmp	r5, #20
    342c:	str	r5, [r7]
    3430:	bcc	54c4 <sf_finish_parse+0x21f4>
    3434:	add	r4, sl, r8, lsl #3
    3438:	b	35f8 <sf_finish_parse+0x328>
    343c:	ldr	r0, [pc, #3992]	; 43dc <sf_finish_parse+0x110c>
    3440:	mov	r1, #1
    3444:	add	r0, pc, r0
    3448:	str	r1, [r0]
    344c:	ldr	sl, [pc, #3980]	; 43e0 <sf_finish_parse+0x1110>
    3450:	ldr	sl, [pc, sl]
    3454:	cmn	sl, #1
    3458:	beq	355c <sf_finish_parse+0x28c>
    345c:	ldr	r0, [pc, #3968]	; 43e4 <sf_finish_parse+0x1114>
    3460:	ldr	r0, [pc, r0]
    3464:	ldr	r8, [pc, #3964]	; 43e8 <sf_finish_parse+0x1118>
    3468:	add	r8, pc, r8
    346c:	mov	r4, r8
    3470:	ldr	r5, [r4, r0, lsl #3]!
    3474:	cmp	r5, #19
    3478:	bhi	367c <sf_finish_parse+0x3ac>
    347c:	ldr	r1, [pc, #4092]	; 4480 <sf_finish_parse+0x11b0>
    3480:	add	r7, r0, #1
    3484:	cmp	r0, #15
    3488:	add	r1, pc, r1
    348c:	str	r7, [r1]
    3490:	bge	54c4 <sf_finish_parse+0x21f4>
    3494:	mov	r0, #1024	; 0x400
    3498:	lsl	r5, r0, r7
    349c:	mov	r0, r5
    34a0:	bl	ed4 <malloc@plt>
    34a4:	cmp	r0, #0
    34a8:	str	r0, [r4, #12]
    34ac:	beq	54c4 <sf_finish_parse+0x21f4>
    34b0:	mov	r1, #0
    34b4:	mov	r2, r5
    34b8:	add	r6, r4, #8
    34bc:	bl	f40 <memset@plt>
    34c0:	cmp	r5, #20
    34c4:	str	r5, [r6]
    34c8:	bcc	54c4 <sf_finish_parse+0x21f4>
    34cc:	add	r4, r8, r7, lsl #3
    34d0:	b	3684 <sf_finish_parse+0x3b4>
    34d4:	ldr	r8, [pc, #4008]	; 4484 <sf_finish_parse+0x11b4>
    34d8:	ldr	r8, [pc, r8]
    34dc:	cmn	r8, #1
    34e0:	beq	355c <sf_finish_parse+0x28c>
    34e4:	ldr	r0, [pc, #3996]	; 4488 <sf_finish_parse+0x11b8>
    34e8:	ldr	r0, [pc, r0]
    34ec:	ldr	r9, [pc, #3992]	; 448c <sf_finish_parse+0x11bc>
    34f0:	add	r9, pc, r9
    34f4:	mov	r4, r9
    34f8:	ldr	r5, [r4, r0, lsl #3]!
    34fc:	cmp	r5, #19
    3500:	bhi	3708 <sf_finish_parse+0x438>
    3504:	ldr	r1, [pc, #3972]	; 4490 <sf_finish_parse+0x11c0>
    3508:	add	r7, r0, #1
    350c:	cmp	r0, #15
    3510:	add	r1, pc, r1
    3514:	str	r7, [r1]
    3518:	bge	54c4 <sf_finish_parse+0x21f4>
    351c:	mov	r0, #1024	; 0x400
    3520:	lsl	r5, r0, r7
    3524:	mov	r0, r5
    3528:	bl	ed4 <malloc@plt>
    352c:	cmp	r0, #0
    3530:	str	r0, [r4, #12]
    3534:	beq	54c4 <sf_finish_parse+0x21f4>
    3538:	mov	r1, #0
    353c:	mov	r2, r5
    3540:	add	r6, r4, #8
    3544:	bl	f40 <memset@plt>
    3548:	cmp	r5, #20
    354c:	str	r5, [r6]
    3550:	bcc	54c4 <sf_finish_parse+0x21f4>
    3554:	add	r4, r9, r7, lsl #3
    3558:	b	3710 <sf_finish_parse+0x440>
    355c:	mov	ip, #0
    3560:	b	4324 <sf_finish_parse+0x1054>
    3564:	mov	r8, r0
    3568:	mov	r7, r4
    356c:	sub	r0, r5, #20
    3570:	mov	r1, #48	; 0x30
    3574:	str	r0, [r7]
    3578:	ldr	ip, [r7, #4]
    357c:	str	r1, [ip, r0]!
    3580:	mov	r0, #3
    3584:	str	r0, [ip, #12]
    3588:	str	ip, [sp, #28]
    358c:	ldr	r5, [sl, r8, lsl #3]
    3590:	cmp	r5, #19
    3594:	bhi	3794 <sf_finish_parse+0x4c4>
    3598:	ldr	r0, [pc, #3980]	; 452c <sf_finish_parse+0x125c>
    359c:	add	r6, r8, #1
    35a0:	cmp	r8, #15
    35a4:	add	r0, pc, r0
    35a8:	str	r6, [r0]
    35ac:	bge	54c4 <sf_finish_parse+0x21f4>
    35b0:	mov	r0, #1024	; 0x400
    35b4:	lsl	r5, r0, r6
    35b8:	mov	r0, r5
    35bc:	bl	ed4 <malloc@plt>
    35c0:	cmp	r0, #0
    35c4:	str	r0, [r4, #12]
    35c8:	beq	54c4 <sf_finish_parse+0x21f4>
    35cc:	mov	r1, #0
    35d0:	mov	r2, r5
    35d4:	add	r4, r4, #8
    35d8:	bl	f40 <memset@plt>
    35dc:	ldr	ip, [sp, #28]
    35e0:	cmp	r5, #19
    35e4:	str	r5, [r4]
    35e8:	bhi	3798 <sf_finish_parse+0x4c8>
    35ec:	b	54c4 <sf_finish_parse+0x21f4>
    35f0:	mov	r8, r0
    35f4:	mov	r7, r4
    35f8:	sub	r0, r5, #20
    35fc:	mov	r1, #48	; 0x30
    3600:	str	r0, [r7]
    3604:	ldr	ip, [r7, #4]
    3608:	str	r1, [ip, r0]!
    360c:	mov	r0, #3
    3610:	str	r0, [ip, #12]
    3614:	str	ip, [sp, #28]
    3618:	ldr	r5, [sl, r8, lsl #3]
    361c:	cmp	r5, #19
    3620:	bhi	3834 <sf_finish_parse+0x564>
    3624:	ldr	r0, [pc, #4004]	; 45d0 <sf_finish_parse+0x1300>
    3628:	add	r6, r8, #1
    362c:	cmp	r8, #15
    3630:	add	r0, pc, r0
    3634:	str	r6, [r0]
    3638:	bge	54c4 <sf_finish_parse+0x21f4>
    363c:	mov	r0, #1024	; 0x400
    3640:	lsl	r5, r0, r6
    3644:	mov	r0, r5
    3648:	bl	ed4 <malloc@plt>
    364c:	cmp	r0, #0
    3650:	str	r0, [r4, #12]
    3654:	beq	54c4 <sf_finish_parse+0x21f4>
    3658:	mov	r1, #0
    365c:	mov	r2, r5
    3660:	add	r4, r4, #8
    3664:	bl	f40 <memset@plt>
    3668:	ldr	ip, [sp, #28]
    366c:	cmp	r5, #19
    3670:	str	r5, [r4]
    3674:	bhi	3838 <sf_finish_parse+0x568>
    3678:	b	54c4 <sf_finish_parse+0x21f4>
    367c:	mov	r7, r0
    3680:	mov	r6, r4
    3684:	sub	r0, r5, #20
    3688:	mov	r1, #32
    368c:	str	r0, [r6]
    3690:	ldr	ip, [r6, #4]
    3694:	str	r1, [ip, r0]!
    3698:	mov	r0, #0
    369c:	str	r0, [ip, #12]
    36a0:	str	ip, [sp, #28]
    36a4:	ldr	r5, [r8, r7, lsl #3]
    36a8:	cmp	r5, #19
    36ac:	bhi	38d4 <sf_finish_parse+0x604>
    36b0:	ldr	r0, [pc, #4024]	; 4670 <sf_finish_parse+0x13a0>
    36b4:	add	r6, r7, #1
    36b8:	cmp	r7, #15
    36bc:	add	r0, pc, r0
    36c0:	str	r6, [r0]
    36c4:	bge	54c4 <sf_finish_parse+0x21f4>
    36c8:	mov	r0, #1024	; 0x400
    36cc:	lsl	r5, r0, r6
    36d0:	mov	r0, r5
    36d4:	bl	ed4 <malloc@plt>
    36d8:	cmp	r0, #0
    36dc:	str	r0, [r4, #12]
    36e0:	beq	54c4 <sf_finish_parse+0x21f4>
    36e4:	mov	r1, #0
    36e8:	mov	r2, r5
    36ec:	add	r4, r4, #8
    36f0:	bl	f40 <memset@plt>
    36f4:	ldr	ip, [sp, #28]
    36f8:	cmp	r5, #19
    36fc:	str	r5, [r4]
    3700:	bhi	38d8 <sf_finish_parse+0x608>
    3704:	b	54c4 <sf_finish_parse+0x21f4>
    3708:	mov	r7, r0
    370c:	mov	r6, r4
    3710:	sub	r0, r5, #20
    3714:	mov	r1, #32
    3718:	str	r0, [r6]
    371c:	ldr	ip, [r6, #4]
    3720:	str	r1, [ip, r0]!
    3724:	mov	r0, #4
    3728:	str	r0, [ip, #12]
    372c:	ldr	r5, [r9, r7, lsl #3]
    3730:	cmp	r5, #19
    3734:	bhi	397c <sf_finish_parse+0x6ac>
    3738:	ldr	r0, [pc, #4052]	; 4714 <sf_finish_parse+0x1444>
    373c:	add	sl, r7, #1
    3740:	cmp	r7, #15
    3744:	add	r0, pc, r0
    3748:	str	sl, [r0]
    374c:	bge	54c4 <sf_finish_parse+0x21f4>
    3750:	mov	r0, #1024	; 0x400
    3754:	mov	r6, ip
    3758:	lsl	r5, r0, sl
    375c:	mov	r0, r5
    3760:	bl	ed4 <malloc@plt>
    3764:	cmp	r0, #0
    3768:	str	r0, [r4, #12]
    376c:	beq	54c4 <sf_finish_parse+0x21f4>
    3770:	mov	r1, #0
    3774:	mov	r2, r5
    3778:	add	r4, r4, #8
    377c:	bl	f40 <memset@plt>
    3780:	cmp	r5, #19
    3784:	mov	ip, r6
    3788:	str	r5, [r4]
    378c:	bhi	3980 <sf_finish_parse+0x6b0>
    3790:	b	54c4 <sf_finish_parse+0x21f4>
    3794:	mov	r6, r8
    3798:	sub	r1, r5, #20
    379c:	mov	r2, #100	; 0x64
    37a0:	str	r1, [r4]
    37a4:	ldr	r0, [r4, #4]
    37a8:	str	r2, [r0, r1]!
    37ac:	mov	r2, ip
    37b0:	mov	r1, r2
    37b4:	ldr	r2, [r2, #16]
    37b8:	cmp	r2, #0
    37bc:	bne	37b0 <sf_finish_parse+0x4e0>
    37c0:	str	r0, [r1, #16]
    37c4:	mov	r1, #8
    37c8:	mov	r4, sl
    37cc:	str	r1, [r0, #12]
    37d0:	ldr	r5, [r4, r6, lsl #3]!
    37d4:	cmp	r5, #19
    37d8:	bhi	3a44 <sf_finish_parse+0x774>
    37dc:	ldr	r0, [pc, #4056]	; 47bc <sf_finish_parse+0x14ec>
    37e0:	add	r7, r6, #1
    37e4:	cmp	r6, #15
    37e8:	add	r0, pc, r0
    37ec:	str	r7, [r0]
    37f0:	bge	54c4 <sf_finish_parse+0x21f4>
    37f4:	mov	r0, #1024	; 0x400
    37f8:	lsl	r5, r0, r7
    37fc:	mov	r0, r5
    3800:	bl	ed4 <malloc@plt>
    3804:	cmp	r0, #0
    3808:	str	r0, [r4, #12]
    380c:	beq	54c4 <sf_finish_parse+0x21f4>
    3810:	mov	r1, #0
    3814:	mov	r2, r5
    3818:	add	r4, r4, #8
    381c:	bl	f40 <memset@plt>
    3820:	ldr	ip, [sp, #28]
    3824:	cmp	r5, #19
    3828:	str	r5, [r4]
    382c:	bhi	3a48 <sf_finish_parse+0x778>
    3830:	b	54c4 <sf_finish_parse+0x21f4>
    3834:	mov	r6, r8
    3838:	sub	r1, r5, #20
    383c:	mov	r2, #100	; 0x64
    3840:	str	r1, [r4]
    3844:	ldr	r0, [r4, #4]
    3848:	str	r2, [r0, r1]!
    384c:	mov	r2, ip
    3850:	mov	r1, r2
    3854:	ldr	r2, [r2, #16]
    3858:	cmp	r2, #0
    385c:	bne	3850 <sf_finish_parse+0x580>
    3860:	str	r0, [r1, #16]
    3864:	mov	r1, #8
    3868:	mov	r4, sl
    386c:	str	r1, [r0, #12]
    3870:	ldr	r5, [r4, r6, lsl #3]!
    3874:	cmp	r5, #19
    3878:	bhi	3adc <sf_finish_parse+0x80c>
    387c:	ldr	r0, [pc, #4080]	; 4874 <sf_finish_parse+0x15a4>
    3880:	add	r7, r6, #1
    3884:	cmp	r6, #15
    3888:	add	r0, pc, r0
    388c:	str	r7, [r0]
    3890:	bge	54c4 <sf_finish_parse+0x21f4>
    3894:	mov	r0, #1024	; 0x400
    3898:	lsl	r5, r0, r7
    389c:	mov	r0, r5
    38a0:	bl	ed4 <malloc@plt>
    38a4:	cmp	r0, #0
    38a8:	str	r0, [r4, #12]
    38ac:	beq	54c4 <sf_finish_parse+0x21f4>
    38b0:	mov	r1, #0
    38b4:	mov	r2, r5
    38b8:	add	r4, r4, #8
    38bc:	bl	f40 <memset@plt>
    38c0:	ldr	ip, [sp, #28]
    38c4:	cmp	r5, #19
    38c8:	str	r5, [r4]
    38cc:	bhi	3ae0 <sf_finish_parse+0x810>
    38d0:	b	54c4 <sf_finish_parse+0x21f4>
    38d4:	mov	r6, r7
    38d8:	sub	r1, r5, #20
    38dc:	mov	r2, #84	; 0x54
    38e0:	str	r1, [r4]
    38e4:	ldr	r0, [r4, #4]
    38e8:	str	r2, [r0, r1]!
    38ec:	movw	r1, #61440	; 0xf000
    38f0:	mov	r2, ip
    38f4:	movt	r1, #65535	; 0xffff
    38f8:	str	r1, [r0, #12]
    38fc:	mov	r1, r2
    3900:	ldr	r2, [r2, #16]
    3904:	cmp	r2, #0
    3908:	bne	38fc <sf_finish_parse+0x62c>
    390c:	str	r0, [r1, #16]
    3910:	mov	r4, r8
    3914:	str	sl, [sp, #12]
    3918:	ldr	r5, [r4, r6, lsl #3]!
    391c:	cmp	r5, #19
    3920:	bhi	3b74 <sf_finish_parse+0x8a4>
    3924:	ldr	r0, [pc, #4084]	; 4920 <sf_finish_parse+0x1650>
    3928:	add	r7, r6, #1
    392c:	cmp	r6, #15
    3930:	add	r0, pc, r0
    3934:	str	r7, [r0]
    3938:	bge	54c4 <sf_finish_parse+0x21f4>
    393c:	mov	r0, #1024	; 0x400
    3940:	lsl	r5, r0, r7
    3944:	mov	r0, r5
    3948:	bl	ed4 <malloc@plt>
    394c:	cmp	r0, #0
    3950:	str	r0, [r4, #12]
    3954:	beq	54c4 <sf_finish_parse+0x21f4>
    3958:	mov	r1, #0
    395c:	mov	r2, r5
    3960:	add	r4, r4, #8
    3964:	bl	f40 <memset@plt>
    3968:	ldr	ip, [sp, #28]
    396c:	cmp	r5, #19
    3970:	str	r5, [r4]
    3974:	bhi	3b78 <sf_finish_parse+0x8a8>
    3978:	b	54c4 <sf_finish_parse+0x21f4>
    397c:	mov	sl, r7
    3980:	sub	r1, r5, #20
    3984:	mov	r2, #2
    3988:	str	r1, [r4]
    398c:	ldr	r0, [r4, #4]
    3990:	str	r2, [r0, r1]!
    3994:	mov	r2, ip
    3998:	str	r8, [r0, #12]
    399c:	mov	r1, r2
    39a0:	ldr	r2, [r2, #16]
    39a4:	cmp	r2, #0
    39a8:	bne	399c <sf_finish_parse+0x6cc>
    39ac:	str	r0, [r1, #16]
    39b0:	ldr	r5, [r9, sl, lsl #3]!
    39b4:	cmp	r5, #19
    39b8:	bhi	3a14 <sf_finish_parse+0x744>
    39bc:	ldr	r1, [pc, #3936]	; 4924 <sf_finish_parse+0x1654>
    39c0:	add	r0, sl, #1
    39c4:	cmp	sl, #15
    39c8:	add	r1, pc, r1
    39cc:	str	r0, [r1]
    39d0:	bge	54c4 <sf_finish_parse+0x21f4>
    39d4:	mov	r1, #1024	; 0x400
    39d8:	mov	r4, ip
    39dc:	lsl	r5, r1, r0
    39e0:	mov	r0, r5
    39e4:	bl	ed4 <malloc@plt>
    39e8:	cmp	r0, #0
    39ec:	str	r0, [r9, #12]
    39f0:	beq	54c4 <sf_finish_parse+0x21f4>
    39f4:	mov	r1, #0
    39f8:	mov	r2, r5
    39fc:	add	r9, r9, #8
    3a00:	bl	f40 <memset@plt>
    3a04:	cmp	r5, #19
    3a08:	mov	ip, r4
    3a0c:	str	r5, [r9]
    3a10:	bls	54c4 <sf_finish_parse+0x21f4>
    3a14:	sub	r1, r5, #20
    3a18:	mov	r2, #7
    3a1c:	str	r1, [r9]
    3a20:	ldr	r0, [r9, #4]
    3a24:	str	r2, [r0, r1]!
    3a28:	mov	r2, ip
    3a2c:	mov	r1, r2
    3a30:	ldr	r2, [r2, #16]
    3a34:	cmp	r2, #0
    3a38:	bne	3a2c <sf_finish_parse+0x75c>
    3a3c:	ldr	r9, [sp, #20]
    3a40:	b	42e8 <sf_finish_parse+0x1018>
    3a44:	mov	r7, r6
    3a48:	sub	r1, r5, #20
    3a4c:	mov	r2, #7
    3a50:	str	r1, [r4]
    3a54:	ldr	r0, [r4, #4]
    3a58:	str	r2, [r0, r1]!
    3a5c:	mov	r2, ip
    3a60:	mov	r1, r2
    3a64:	ldr	r2, [r2, #16]
    3a68:	cmp	r2, #0
    3a6c:	bne	3a60 <sf_finish_parse+0x790>
    3a70:	str	r0, [r1, #16]
    3a74:	mov	r6, sl
    3a78:	ldr	r5, [r6, r7, lsl #3]!
    3a7c:	cmp	r5, #19
    3a80:	bhi	3c18 <sf_finish_parse+0x948>
    3a84:	ldr	r0, [pc, #4060]	; 4a68 <sf_finish_parse+0x1798>
    3a88:	add	r4, r7, #1
    3a8c:	cmp	r7, #15
    3a90:	add	r0, pc, r0
    3a94:	str	r4, [r0]
    3a98:	bge	54c4 <sf_finish_parse+0x21f4>
    3a9c:	mov	r0, #1024	; 0x400
    3aa0:	lsl	r5, r0, r4
    3aa4:	mov	r0, r5
    3aa8:	bl	ed4 <malloc@plt>
    3aac:	cmp	r0, #0
    3ab0:	str	r0, [r6, #12]
    3ab4:	beq	54c4 <sf_finish_parse+0x21f4>
    3ab8:	mov	r1, #0
    3abc:	mov	r2, r5
    3ac0:	add	r6, r6, #8
    3ac4:	bl	f40 <memset@plt>
    3ac8:	ldr	ip, [sp, #28]
    3acc:	cmp	r5, #19
    3ad0:	str	r5, [r6]
    3ad4:	bhi	3c1c <sf_finish_parse+0x94c>
    3ad8:	b	54c4 <sf_finish_parse+0x21f4>
    3adc:	mov	r7, r6
    3ae0:	sub	r1, r5, #20
    3ae4:	mov	r2, #7
    3ae8:	str	r1, [r4]
    3aec:	ldr	r0, [r4, #4]
    3af0:	str	r2, [r0, r1]!
    3af4:	mov	r2, ip
    3af8:	mov	r1, r2
    3afc:	ldr	r2, [r2, #16]
    3b00:	cmp	r2, #0
    3b04:	bne	3af8 <sf_finish_parse+0x828>
    3b08:	str	r0, [r1, #16]
    3b0c:	mov	r6, sl
    3b10:	ldr	r5, [r6, r7, lsl #3]!
    3b14:	cmp	r5, #19
    3b18:	bhi	3cb8 <sf_finish_parse+0x9e8>
    3b1c:	ldr	r0, [pc, #4080]	; 4b14 <sf_finish_parse+0x1844>
    3b20:	add	r4, r7, #1
    3b24:	cmp	r7, #15
    3b28:	add	r0, pc, r0
    3b2c:	str	r4, [r0]
    3b30:	bge	54c4 <sf_finish_parse+0x21f4>
    3b34:	mov	r0, #1024	; 0x400
    3b38:	lsl	r5, r0, r4
    3b3c:	mov	r0, r5
    3b40:	bl	ed4 <malloc@plt>
    3b44:	cmp	r0, #0
    3b48:	str	r0, [r6, #12]
    3b4c:	beq	54c4 <sf_finish_parse+0x21f4>
    3b50:	mov	r1, #0
    3b54:	mov	r2, r5
    3b58:	add	r6, r6, #8
    3b5c:	bl	f40 <memset@plt>
    3b60:	ldr	ip, [sp, #28]
    3b64:	cmp	r5, #19
    3b68:	str	r5, [r6]
    3b6c:	bhi	3cbc <sf_finish_parse+0x9ec>
    3b70:	b	54c4 <sf_finish_parse+0x21f4>
    3b74:	mov	r7, r6
    3b78:	sub	r0, r5, #20
    3b7c:	mov	r1, #21
    3b80:	str	r0, [r4]
    3b84:	ldr	sl, [r4, #4]
    3b88:	str	r1, [sl, r0]!
    3b8c:	movw	r0, #4096	; 0x1000
    3b90:	mov	r1, ip
    3b94:	movt	r0, #32801	; 0x8021
    3b98:	str	r0, [sl, #12]
    3b9c:	mov	r0, r1
    3ba0:	ldr	r1, [r1, #16]
    3ba4:	cmp	r1, #0
    3ba8:	bne	3b9c <sf_finish_parse+0x8cc>
    3bac:	str	sl, [r0, #16]
    3bb0:	mov	r4, r8
    3bb4:	ldr	r5, [r4, r7, lsl #3]!
    3bb8:	cmp	r5, #19
    3bbc:	bhi	3d58 <sf_finish_parse+0xa88>
    3bc0:	ldr	r0, [pc, #3936]	; 4b28 <sf_finish_parse+0x1858>
    3bc4:	add	r8, r7, #1
    3bc8:	cmp	r7, #15
    3bcc:	add	r0, pc, r0
    3bd0:	str	r8, [r0]
    3bd4:	bge	54c4 <sf_finish_parse+0x21f4>
    3bd8:	mov	r0, #1024	; 0x400
    3bdc:	lsl	r5, r0, r8
    3be0:	mov	r0, r5
    3be4:	bl	ed4 <malloc@plt>
    3be8:	cmp	r0, #0
    3bec:	str	r0, [r4, #12]
    3bf0:	beq	54c4 <sf_finish_parse+0x21f4>
    3bf4:	mov	r1, #0
    3bf8:	mov	r2, r5
    3bfc:	add	r4, r4, #8
    3c00:	bl	f40 <memset@plt>
    3c04:	ldr	ip, [sp, #28]
    3c08:	cmp	r5, #19
    3c0c:	str	r5, [r4]
    3c10:	bhi	3d5c <sf_finish_parse+0xa8c>
    3c14:	b	54c4 <sf_finish_parse+0x21f4>
    3c18:	mov	r4, r7
    3c1c:	sub	r1, r5, #20
    3c20:	mov	r2, #48	; 0x30
    3c24:	str	r1, [r6]
    3c28:	ldr	r0, [r6, #4]
    3c2c:	str	r2, [r0, r1]!
    3c30:	mov	r2, ip
    3c34:	mov	r1, r2
    3c38:	ldr	r2, [r2, #16]
    3c3c:	cmp	r2, #0
    3c40:	bne	3c34 <sf_finish_parse+0x964>
    3c44:	str	r0, [r1, #16]
    3c48:	mov	r1, #2
    3c4c:	mov	r7, sl
    3c50:	str	r1, [r0, #12]
    3c54:	ldr	r5, [r7, r4, lsl #3]!
    3c58:	cmp	r5, #19
    3c5c:	bhi	3e00 <sf_finish_parse+0xb30>
    3c60:	ldr	r0, [pc, #3944]	; 4bd0 <sf_finish_parse+0x1900>
    3c64:	add	r6, r4, #1
    3c68:	cmp	r4, #15
    3c6c:	add	r0, pc, r0
    3c70:	str	r6, [r0]
    3c74:	bge	54c4 <sf_finish_parse+0x21f4>
    3c78:	mov	r0, #1024	; 0x400
    3c7c:	lsl	r5, r0, r6
    3c80:	mov	r0, r5
    3c84:	bl	ed4 <malloc@plt>
    3c88:	cmp	r0, #0
    3c8c:	str	r0, [r7, #12]
    3c90:	beq	54c4 <sf_finish_parse+0x21f4>
    3c94:	mov	r1, #0
    3c98:	mov	r2, r5
    3c9c:	add	r7, r7, #8
    3ca0:	bl	f40 <memset@plt>
    3ca4:	ldr	ip, [sp, #28]
    3ca8:	cmp	r5, #19
    3cac:	str	r5, [r7]
    3cb0:	bhi	3e04 <sf_finish_parse+0xb34>
    3cb4:	b	54c4 <sf_finish_parse+0x21f4>
    3cb8:	mov	r4, r7
    3cbc:	sub	r1, r5, #20
    3cc0:	mov	r2, #48	; 0x30
    3cc4:	str	r1, [r6]
    3cc8:	ldr	r0, [r6, #4]
    3ccc:	str	r2, [r0, r1]!
    3cd0:	mov	r2, ip
    3cd4:	mov	r1, r2
    3cd8:	ldr	r2, [r2, #16]
    3cdc:	cmp	r2, #0
    3ce0:	bne	3cd4 <sf_finish_parse+0xa04>
    3ce4:	str	r0, [r1, #16]
    3ce8:	mov	r1, #2
    3cec:	mov	r7, sl
    3cf0:	str	r1, [r0, #12]
    3cf4:	ldr	r5, [r7, r4, lsl #3]!
    3cf8:	cmp	r5, #19
    3cfc:	bhi	3e98 <sf_finish_parse+0xbc8>
    3d00:	ldr	r0, [pc, #3956]	; 4c7c <sf_finish_parse+0x19ac>
    3d04:	add	r6, r4, #1
    3d08:	cmp	r4, #15
    3d0c:	add	r0, pc, r0
    3d10:	str	r6, [r0]
    3d14:	bge	54c4 <sf_finish_parse+0x21f4>
    3d18:	mov	r0, #1024	; 0x400
    3d1c:	lsl	r5, r0, r6
    3d20:	mov	r0, r5
    3d24:	bl	ed4 <malloc@plt>
    3d28:	cmp	r0, #0
    3d2c:	str	r0, [r7, #12]
    3d30:	beq	54c4 <sf_finish_parse+0x21f4>
    3d34:	mov	r1, #0
    3d38:	mov	r2, r5
    3d3c:	add	r7, r7, #8
    3d40:	bl	f40 <memset@plt>
    3d44:	ldr	ip, [sp, #28]
    3d48:	cmp	r5, #19
    3d4c:	str	r5, [r7]
    3d50:	bhi	3e9c <sf_finish_parse+0xbcc>
    3d54:	b	54c4 <sf_finish_parse+0x21f4>
    3d58:	mov	r8, r7
    3d5c:	sub	r1, r5, #20
    3d60:	mov	r2, #32
    3d64:	str	r1, [r4]
    3d68:	ldr	r0, [r4, #4]
    3d6c:	str	r2, [r0, r1]!
    3d70:	mov	r1, #4
    3d74:	mov	r2, ip
    3d78:	str	r1, [r0, #12]
    3d7c:	mov	r1, r2
    3d80:	ldr	r2, [r2, #16]
    3d84:	cmp	r2, #0
    3d88:	bne	3d7c <sf_finish_parse+0xaac>
    3d8c:	str	r0, [r1, #16]
    3d90:	str	r0, [sl, #4]
    3d94:	ldr	r4, [pc, #3976]	; 4d24 <sf_finish_parse+0x1a54>
    3d98:	add	r4, pc, r4
    3d9c:	ldr	r5, [r4, r8, lsl #3]!
    3da0:	cmp	r5, #19
    3da4:	bhi	3f30 <sf_finish_parse+0xc60>
    3da8:	ldr	r0, [pc, #3960]	; 4d28 <sf_finish_parse+0x1a58>
    3dac:	add	r6, r8, #1
    3db0:	cmp	r8, #15
    3db4:	add	r0, pc, r0
    3db8:	str	r6, [r0]
    3dbc:	bge	54c4 <sf_finish_parse+0x21f4>
    3dc0:	mov	r0, #1024	; 0x400
    3dc4:	lsl	r5, r0, r6
    3dc8:	mov	r0, r5
    3dcc:	bl	ed4 <malloc@plt>
    3dd0:	cmp	r0, #0
    3dd4:	str	r0, [r4, #12]
    3dd8:	beq	54c4 <sf_finish_parse+0x21f4>
    3ddc:	mov	r1, #0
    3de0:	mov	r2, r5
    3de4:	add	r4, r4, #8
    3de8:	bl	f40 <memset@plt>
    3dec:	ldr	ip, [sp, #28]
    3df0:	cmp	r5, #19
    3df4:	str	r5, [r4]
    3df8:	bhi	3f34 <sf_finish_parse+0xc64>
    3dfc:	b	54c4 <sf_finish_parse+0x21f4>
    3e00:	mov	r6, r4
    3e04:	sub	r1, r5, #20
    3e08:	mov	r2, #76	; 0x4c
    3e0c:	str	r1, [r7]
    3e10:	ldr	r0, [r7, #4]
    3e14:	str	r2, [r0, r1]!
    3e18:	mov	r2, ip
    3e1c:	mov	r1, r2
    3e20:	ldr	r2, [r2, #16]
    3e24:	cmp	r2, #0
    3e28:	bne	3e1c <sf_finish_parse+0xb4c>
    3e2c:	str	r0, [r1, #16]
    3e30:	mov	r7, sl
    3e34:	ldr	r5, [r7, r6, lsl #3]!
    3e38:	cmp	r5, #19
    3e3c:	bhi	3fd4 <sf_finish_parse+0xd04>
    3e40:	ldr	r0, [pc, #3976]	; 4dd0 <sf_finish_parse+0x1b00>
    3e44:	add	r4, r6, #1
    3e48:	cmp	r6, #15
    3e4c:	add	r0, pc, r0
    3e50:	str	r4, [r0]
    3e54:	bge	54c4 <sf_finish_parse+0x21f4>
    3e58:	mov	r0, #1024	; 0x400
    3e5c:	lsl	r5, r0, r4
    3e60:	mov	r0, r5
    3e64:	bl	ed4 <malloc@plt>
    3e68:	cmp	r0, #0
    3e6c:	str	r0, [r7, #12]
    3e70:	beq	54c4 <sf_finish_parse+0x21f4>
    3e74:	mov	r1, #0
    3e78:	mov	r2, r5
    3e7c:	add	r7, r7, #8
    3e80:	bl	f40 <memset@plt>
    3e84:	ldr	ip, [sp, #28]
    3e88:	cmp	r5, #19
    3e8c:	str	r5, [r7]
    3e90:	bhi	3fd8 <sf_finish_parse+0xd08>
    3e94:	b	54c4 <sf_finish_parse+0x21f4>
    3e98:	mov	r6, r4
    3e9c:	sub	r1, r5, #20
    3ea0:	mov	r2, #76	; 0x4c
    3ea4:	str	r1, [r7]
    3ea8:	ldr	r0, [r7, #4]
    3eac:	str	r2, [r0, r1]!
    3eb0:	mov	r2, ip
    3eb4:	mov	r1, r2
    3eb8:	ldr	r2, [r2, #16]
    3ebc:	cmp	r2, #0
    3ec0:	bne	3eb4 <sf_finish_parse+0xbe4>
    3ec4:	str	r0, [r1, #16]
    3ec8:	mov	r7, sl
    3ecc:	ldr	r5, [r7, r6, lsl #3]!
    3ed0:	cmp	r5, #19
    3ed4:	bhi	4098 <sf_finish_parse+0xdc8>
    3ed8:	ldr	r0, [pc, #3988]	; 4e74 <sf_finish_parse+0x1ba4>
    3edc:	add	r4, r6, #1
    3ee0:	cmp	r6, #15
    3ee4:	add	r0, pc, r0
    3ee8:	str	r4, [r0]
    3eec:	bge	54c4 <sf_finish_parse+0x21f4>
    3ef0:	mov	r0, #1024	; 0x400
    3ef4:	lsl	r5, r0, r4
    3ef8:	mov	r0, r5
    3efc:	bl	ed4 <malloc@plt>
    3f00:	cmp	r0, #0
    3f04:	str	r0, [r7, #12]
    3f08:	beq	54c4 <sf_finish_parse+0x21f4>
    3f0c:	mov	r1, #0
    3f10:	mov	r2, r5
    3f14:	add	r7, r7, #8
    3f18:	bl	f40 <memset@plt>
    3f1c:	ldr	ip, [sp, #28]
    3f20:	cmp	r5, #19
    3f24:	str	r5, [r7]
    3f28:	bhi	409c <sf_finish_parse+0xdcc>
    3f2c:	b	54c4 <sf_finish_parse+0x21f4>
    3f30:	mov	r6, r8
    3f34:	sub	r0, r5, #20
    3f38:	mov	r1, #5
    3f3c:	str	r0, [r4]
    3f40:	ldr	r8, [r4, #4]
    3f44:	str	r1, [r8, r0]!
    3f48:	mov	r0, #1
    3f4c:	mov	r1, ip
    3f50:	str	r0, [r8, #12]
    3f54:	mov	r0, r1
    3f58:	ldr	r1, [r1, #16]
    3f5c:	cmp	r1, #0
    3f60:	bne	3f54 <sf_finish_parse+0xc84>
    3f64:	str	r8, [r0, #16]
    3f68:	ldr	r4, [pc, #4012]	; 4f1c <sf_finish_parse+0x1c4c>
    3f6c:	add	r4, pc, r4
    3f70:	ldr	r5, [r4, r6, lsl #3]!
    3f74:	cmp	r5, #19
    3f78:	bhi	415c <sf_finish_parse+0xe8c>
    3f7c:	ldr	r0, [pc, #3996]	; 4f20 <sf_finish_parse+0x1c50>
    3f80:	add	r7, r6, #1
    3f84:	cmp	r6, #15
    3f88:	add	r0, pc, r0
    3f8c:	str	r7, [r0]
    3f90:	bge	54c4 <sf_finish_parse+0x21f4>
    3f94:	mov	r0, #1024	; 0x400
    3f98:	lsl	r5, r0, r7
    3f9c:	mov	r0, r5
    3fa0:	bl	ed4 <malloc@plt>
    3fa4:	cmp	r0, #0
    3fa8:	str	r0, [r4, #12]
    3fac:	beq	54c4 <sf_finish_parse+0x21f4>
    3fb0:	mov	r1, #0
    3fb4:	mov	r2, r5
    3fb8:	add	r4, r4, #8
    3fbc:	bl	f40 <memset@plt>
    3fc0:	ldr	ip, [sp, #28]
    3fc4:	cmp	r5, #19
    3fc8:	str	r5, [r4]
    3fcc:	bhi	4160 <sf_finish_parse+0xe90>
    3fd0:	b	54c4 <sf_finish_parse+0x21f4>
    3fd4:	mov	r4, r6
    3fd8:	sub	r1, r5, #20
    3fdc:	mov	r2, #2
    3fe0:	str	r1, [r7]
    3fe4:	ldr	r0, [r7, #4]
    3fe8:	str	r2, [r0, r1]!
    3fec:	mov	r2, ip
    3ff0:	ldr	r1, [sp, #12]
    3ff4:	str	r1, [r0, #12]
    3ff8:	mov	r1, r2
    3ffc:	ldr	r2, [r2, #16]
    4000:	cmp	r2, #0
    4004:	bne	3ff8 <sf_finish_parse+0xd28>
    4008:	str	r0, [r1, #16]
    400c:	ldr	r5, [sl, r4, lsl #3]!
    4010:	cmp	r5, #19
    4014:	bhi	406c <sf_finish_parse+0xd9c>
    4018:	ldr	r1, [pc, #4008]	; 4fc8 <sf_finish_parse+0x1cf8>
    401c:	add	r0, r4, #1
    4020:	cmp	r4, #15
    4024:	add	r1, pc, r1
    4028:	str	r0, [r1]
    402c:	bge	54c4 <sf_finish_parse+0x21f4>
    4030:	mov	r1, #1024	; 0x400
    4034:	lsl	r5, r1, r0
    4038:	mov	r0, r5
    403c:	bl	ed4 <malloc@plt>
    4040:	cmp	r0, #0
    4044:	str	r0, [sl, #12]
    4048:	beq	54c4 <sf_finish_parse+0x21f4>
    404c:	mov	r1, #0
    4050:	mov	r2, r5
    4054:	add	sl, sl, #8
    4058:	bl	f40 <memset@plt>
    405c:	ldr	ip, [sp, #28]
    4060:	cmp	r5, #19
    4064:	str	r5, [sl]
    4068:	bls	54c4 <sf_finish_parse+0x21f4>
    406c:	sub	r1, r5, #20
    4070:	mov	r2, #7
    4074:	str	r1, [sl]
    4078:	ldr	r0, [sl, #4]
    407c:	str	r2, [r0, r1]!
    4080:	mov	r2, ip
    4084:	mov	r1, r2
    4088:	ldr	r2, [r2, #16]
    408c:	cmp	r2, #0
    4090:	bne	4084 <sf_finish_parse+0xdb4>
    4094:	b	42e8 <sf_finish_parse+0x1018>
    4098:	mov	r4, r6
    409c:	sub	r1, r5, #20
    40a0:	mov	r2, #2
    40a4:	str	r1, [r7]
    40a8:	ldr	r0, [r7, #4]
    40ac:	str	r2, [r0, r1]!
    40b0:	mov	r2, ip
    40b4:	ldr	r1, [sp, #12]
    40b8:	str	r1, [r0, #12]
    40bc:	mov	r1, r2
    40c0:	ldr	r2, [r2, #16]
    40c4:	cmp	r2, #0
    40c8:	bne	40bc <sf_finish_parse+0xdec>
    40cc:	str	r0, [r1, #16]
    40d0:	ldr	r5, [sl, r4, lsl #3]!
    40d4:	cmp	r5, #19
    40d8:	bhi	4130 <sf_finish_parse+0xe60>
    40dc:	ldr	r1, [pc, #3976]	; 506c <sf_finish_parse+0x1d9c>
    40e0:	add	r0, r4, #1
    40e4:	cmp	r4, #15
    40e8:	add	r1, pc, r1
    40ec:	str	r0, [r1]
    40f0:	bge	54c4 <sf_finish_parse+0x21f4>
    40f4:	mov	r1, #1024	; 0x400
    40f8:	lsl	r5, r1, r0
    40fc:	mov	r0, r5
    4100:	bl	ed4 <malloc@plt>
    4104:	cmp	r0, #0
    4108:	str	r0, [sl, #12]
    410c:	beq	54c4 <sf_finish_parse+0x21f4>
    4110:	mov	r1, #0
    4114:	mov	r2, r5
    4118:	add	sl, sl, #8
    411c:	bl	f40 <memset@plt>
    4120:	ldr	ip, [sp, #28]
    4124:	cmp	r5, #19
    4128:	str	r5, [sl]
    412c:	bls	54c4 <sf_finish_parse+0x21f4>
    4130:	sub	r1, r5, #20
    4134:	mov	r2, #7
    4138:	str	r1, [sl]
    413c:	ldr	r0, [sl, #4]
    4140:	str	r2, [r0, r1]!
    4144:	mov	r2, ip
    4148:	mov	r1, r2
    414c:	ldr	r2, [r2, #16]
    4150:	cmp	r2, #0
    4154:	bne	4148 <sf_finish_parse+0xe78>
    4158:	b	42e8 <sf_finish_parse+0x1018>
    415c:	mov	r7, r6
    4160:	sub	r1, r5, #20
    4164:	mov	r2, #0
    4168:	str	r1, [r4]
    416c:	ldr	r0, [r4, #4]
    4170:	str	r2, [r0, r1]!
    4174:	mov	r1, #144	; 0x90
    4178:	mov	r2, ip
    417c:	str	r1, [r0, #12]
    4180:	mov	r1, r2
    4184:	ldr	r2, [r2, #16]
    4188:	cmp	r2, #0
    418c:	bne	4180 <sf_finish_parse+0xeb0>
    4190:	str	r0, [r1, #16]
    4194:	str	r0, [sl, #8]
    4198:	ldr	r4, [pc, #3952]	; 5110 <sf_finish_parse+0x1e40>
    419c:	add	r4, pc, r4
    41a0:	ldr	r5, [r4, r7, lsl #3]!
    41a4:	cmp	r5, #19
    41a8:	bhi	421c <sf_finish_parse+0xf4c>
    41ac:	ldr	r0, [pc, #3936]	; 5114 <sf_finish_parse+0x1e44>
    41b0:	add	r6, r7, #1
    41b4:	cmp	r7, #15
    41b8:	ldr	r7, [sp, #12]
    41bc:	add	r0, pc, r0
    41c0:	str	r6, [r0]
    41c4:	bge	54c4 <sf_finish_parse+0x21f4>
    41c8:	mov	r0, #1024	; 0x400
    41cc:	lsl	r5, r0, r6
    41d0:	mov	r0, r5
    41d4:	bl	ed4 <malloc@plt>
    41d8:	cmp	r0, #0
    41dc:	str	r0, [r4, #12]
    41e0:	beq	54c4 <sf_finish_parse+0x21f4>
    41e4:	mov	r1, #0
    41e8:	mov	r2, r5
    41ec:	add	r4, r4, #8
    41f0:	bl	f40 <memset@plt>
    41f4:	ldr	ip, [sp, #28]
    41f8:	cmp	r5, #19
    41fc:	str	r5, [r4]
    4200:	bhi	4224 <sf_finish_parse+0xf54>
    4204:	b	54c4 <sf_finish_parse+0x21f4>
    4208:	.word	0x00044144
    420c:	.word	0x000441ec
    4210:	.word	0x000441d4
    4214:	.word	0x00044148
    4218:	.word	0x000441a8
    421c:	mov	r6, r7
    4220:	ldr	r7, [sp, #12]
    4224:	sub	r1, r5, #20
    4228:	mov	r2, #2
    422c:	str	r1, [r4]
    4230:	ldr	r0, [r4, #4]
    4234:	str	r2, [r0, r1]!
    4238:	mov	r2, ip
    423c:	str	r7, [r0, #12]
    4240:	mov	r1, r2
    4244:	ldr	r2, [r2, #16]
    4248:	cmp	r2, #0
    424c:	bne	4240 <sf_finish_parse+0xf70>
    4250:	str	r0, [r1, #16]
    4254:	str	r0, [r8, #8]
    4258:	ldr	r4, [pc, #3768]	; 5118 <sf_finish_parse+0x1e48>
    425c:	add	r4, pc, r4
    4260:	ldr	r5, [r4, r6, lsl #3]!
    4264:	cmp	r5, #19
    4268:	bhi	42c0 <sf_finish_parse+0xff0>
    426c:	ldr	r1, [pc, #3752]	; 511c <sf_finish_parse+0x1e4c>
    4270:	add	r0, r6, #1
    4274:	cmp	r6, #15
    4278:	add	r1, pc, r1
    427c:	str	r0, [r1]
    4280:	bge	54c4 <sf_finish_parse+0x21f4>
    4284:	mov	r1, #1024	; 0x400
    4288:	lsl	r5, r1, r0
    428c:	mov	r0, r5
    4290:	bl	ed4 <malloc@plt>
    4294:	cmp	r0, #0
    4298:	str	r0, [r4, #12]
    429c:	beq	54c4 <sf_finish_parse+0x21f4>
    42a0:	mov	r1, #0
    42a4:	mov	r2, r5
    42a8:	add	r4, r4, #8
    42ac:	bl	f40 <memset@plt>
    42b0:	ldr	ip, [sp, #28]
    42b4:	cmp	r5, #19
    42b8:	str	r5, [r4]
    42bc:	bls	54c4 <sf_finish_parse+0x21f4>
    42c0:	sub	r1, r5, #20
    42c4:	mov	r2, #7
    42c8:	str	r1, [r4]
    42cc:	ldr	r0, [r4, #4]
    42d0:	str	r2, [r0, r1]!
    42d4:	mov	r2, ip
    42d8:	mov	r1, r2
    42dc:	ldr	r2, [r2, #16]
    42e0:	cmp	r2, #0
    42e4:	bne	42d8 <sf_finish_parse+0x1008>
    42e8:	ldr	r3, [sp, #24]
    42ec:	ldr	r7, [sp, #16]
    42f0:	str	r0, [r1, #16]
    42f4:	sub	r0, r3, #105	; 0x69
    42f8:	cmp	r0, #22
    42fc:	bhi	4314 <sf_finish_parse+0x1044>
    4300:	movw	r2, #16385	; 0x4001
    4304:	mov	r1, #1
    4308:	movt	r2, #64	; 0x40
    430c:	tst	r2, r1, lsl r0
    4310:	bne	4324 <sf_finish_parse+0x1054>
    4314:	cmp	r3, #192	; 0xc0
    4318:	beq	4324 <sf_finish_parse+0x1054>
    431c:	cmp	r3, #163	; 0xa3
    4320:	bne	5210 <sf_finish_parse+0x1f40>
    4324:	ldr	sl, [pc, #3980]	; 52b8 <sf_finish_parse+0x1fe8>
    4328:	ldr	sl, [pc, sl]
    432c:	cmn	sl, #1
    4330:	beq	5210 <sf_finish_parse+0x1f40>
    4334:	ldr	r0, [r7, #4]
    4338:	mov	r1, #1
    433c:	cmp	ip, #0
    4340:	str	r0, [sp, #12]
    4344:	ldr	r0, [pc, #4088]	; 5344 <sf_finish_parse+0x2074>
    4348:	add	r0, pc, r0
    434c:	str	r1, [r0]
    4350:	ldr	r0, [pc, #4080]	; 5348 <sf_finish_parse+0x2078>
    4354:	ldr	r0, [pc, r0]
    4358:	beq	4370 <sf_finish_parse+0x10a0>
    435c:	mov	r4, r0
    4360:	b	440c <sf_finish_parse+0x113c>
    4364:	.word	0x00044150
    4368:	.word	0x00044138
    436c:	.word	0x000440ac
    4370:	ldr	r6, [pc, #4052]	; 534c <sf_finish_parse+0x207c>
    4374:	add	r6, pc, r6
    4378:	ldr	r5, [r6, r0, lsl #3]!
    437c:	cmp	r5, #19
    4380:	bhi	43ec <sf_finish_parse+0x111c>
    4384:	ldr	r1, [pc, #4036]	; 5350 <sf_finish_parse+0x2080>
    4388:	add	r4, r0, #1
    438c:	cmp	r0, #15
    4390:	add	r1, pc, r1
    4394:	str	r4, [r1]
    4398:	bge	54c4 <sf_finish_parse+0x21f4>
    439c:	mov	r0, #1024	; 0x400
    43a0:	lsl	r5, r0, r4
    43a4:	mov	r0, r5
    43a8:	bl	ed4 <malloc@plt>
    43ac:	cmp	r0, #0
    43b0:	str	r0, [r6, #12]
    43b4:	beq	54c4 <sf_finish_parse+0x21f4>
    43b8:	mov	r1, #0
    43bc:	mov	r2, r5
    43c0:	add	r6, r6, #8
    43c4:	bl	f40 <memset@plt>
    43c8:	cmp	r5, #19
    43cc:	str	r5, [r6]
    43d0:	bhi	43f0 <sf_finish_parse+0x1120>
    43d4:	b	54c4 <sf_finish_parse+0x21f4>
    43d8:	.word	0x0004410c
    43dc:	.word	0x00044560
    43e0:	.word	0x000440b4
    43e4:	.word	0x0004409c
    43e8:	.word	0x00044014
    43ec:	mov	r4, r0
    43f0:	sub	r0, r5, #20
    43f4:	mov	r1, #1
    43f8:	str	r0, [r6]
    43fc:	ldr	ip, [r6, #4]
    4400:	str	r1, [ip, r0]!
    4404:	mov	r0, #0
    4408:	str	r0, [ip, #12]
    440c:	ldr	r8, [pc, #3904]	; 5354 <sf_finish_parse+0x2084>
    4410:	str	ip, [sp, #28]
    4414:	add	r8, pc, r8
    4418:	mov	r7, r8
    441c:	ldr	r5, [r7, r4, lsl #3]!
    4420:	cmp	r5, #19
    4424:	bhi	4494 <sf_finish_parse+0x11c4>
    4428:	ldr	r0, [pc, #3880]	; 5358 <sf_finish_parse+0x2088>
    442c:	add	r6, r4, #1
    4430:	cmp	r4, #15
    4434:	add	r0, pc, r0
    4438:	str	r6, [r0]
    443c:	bge	54c4 <sf_finish_parse+0x21f4>
    4440:	mov	r0, #1024	; 0x400
    4444:	lsl	r5, r0, r6
    4448:	mov	r0, r5
    444c:	bl	ed4 <malloc@plt>
    4450:	cmp	r0, #0
    4454:	str	r0, [r7, #12]
    4458:	beq	54c4 <sf_finish_parse+0x21f4>
    445c:	mov	r1, #0
    4460:	mov	r2, r5
    4464:	add	r7, r7, #8
    4468:	bl	f40 <memset@plt>
    446c:	ldr	ip, [sp, #28]
    4470:	cmp	r5, #19
    4474:	str	r5, [r7]
    4478:	bhi	4498 <sf_finish_parse+0x11c8>
    447c:	b	54c4 <sf_finish_parse+0x21f4>
    4480:	.word	0x00044074
    4484:	.word	0x0004402c
    4488:	.word	0x00044014
    448c:	.word	0x00043f8c
    4490:	.word	0x00043fec
    4494:	mov	r6, r4
    4498:	sub	r1, r5, #20
    449c:	mov	r2, #135	; 0x87
    44a0:	str	r1, [r7]
    44a4:	ldr	r0, [r7, #4]
    44a8:	str	r2, [r0, r1]!
    44ac:	mov	r2, ip
    44b0:	mov	r1, r2
    44b4:	ldr	r2, [r2, #16]
    44b8:	cmp	r2, #0
    44bc:	bne	44b0 <sf_finish_parse+0x11e0>
    44c0:	str	r0, [r1, #16]
    44c4:	mov	r7, r8
    44c8:	ldr	r5, [r7, r6, lsl #3]!
    44cc:	cmp	r5, #19
    44d0:	bhi	4530 <sf_finish_parse+0x1260>
    44d4:	ldr	r0, [pc, #4084]	; 54d0 <sf_finish_parse+0x2200>
    44d8:	add	r4, r6, #1
    44dc:	cmp	r6, #15
    44e0:	add	r0, pc, r0
    44e4:	str	r4, [r0]
    44e8:	bge	54c4 <sf_finish_parse+0x21f4>
    44ec:	mov	r0, #1024	; 0x400
    44f0:	lsl	r5, r0, r4
    44f4:	mov	r0, r5
    44f8:	bl	ed4 <malloc@plt>
    44fc:	cmp	r0, #0
    4500:	str	r0, [r7, #12]
    4504:	beq	54c4 <sf_finish_parse+0x21f4>
    4508:	mov	r1, #0
    450c:	mov	r2, r5
    4510:	add	r7, r7, #8
    4514:	bl	f40 <memset@plt>
    4518:	ldr	ip, [sp, #28]
    451c:	cmp	r5, #19
    4520:	str	r5, [r7]
    4524:	bhi	4534 <sf_finish_parse+0x1264>
    4528:	b	54c4 <sf_finish_parse+0x21f4>
    452c:	.word	0x00043f58
    4530:	mov	r4, r6
    4534:	sub	r1, r5, #20
    4538:	mov	r2, #4
    453c:	str	r1, [r7]
    4540:	ldr	r0, [r7, #4]
    4544:	str	r2, [r0, r1]!
    4548:	mov	r1, #24
    454c:	mov	r2, ip
    4550:	str	r1, [r0, #12]
    4554:	mov	r1, r2
    4558:	ldr	r2, [r2, #16]
    455c:	cmp	r2, #0
    4560:	bne	4554 <sf_finish_parse+0x1284>
    4564:	str	r0, [r1, #16]
    4568:	mov	r7, r8
    456c:	ldr	r5, [r7, r4, lsl #3]!
    4570:	cmp	r5, #19
    4574:	bhi	45d4 <sf_finish_parse+0x1304>
    4578:	ldr	r0, [pc, #3924]	; 54d4 <sf_finish_parse+0x2204>
    457c:	add	r6, r4, #1
    4580:	cmp	r4, #15
    4584:	add	r0, pc, r0
    4588:	str	r6, [r0]
    458c:	bge	54c4 <sf_finish_parse+0x21f4>
    4590:	mov	r0, #1024	; 0x400
    4594:	lsl	r5, r0, r6
    4598:	mov	r0, r5
    459c:	bl	ed4 <malloc@plt>
    45a0:	cmp	r0, #0
    45a4:	str	r0, [r7, #12]
    45a8:	beq	54c4 <sf_finish_parse+0x21f4>
    45ac:	mov	r1, #0
    45b0:	mov	r2, r5
    45b4:	add	r7, r7, #8
    45b8:	bl	f40 <memset@plt>
    45bc:	ldr	ip, [sp, #28]
    45c0:	cmp	r5, #19
    45c4:	str	r5, [r7]
    45c8:	bhi	45d8 <sf_finish_parse+0x1308>
    45cc:	b	54c4 <sf_finish_parse+0x21f4>
    45d0:	.word	0x00043ecc
    45d4:	mov	r6, r4
    45d8:	sub	r1, r5, #20
    45dc:	mov	r2, #2
    45e0:	str	r1, [r7]
    45e4:	ldr	r0, [r7, #4]
    45e8:	str	r2, [r0, r1]!
    45ec:	mov	r2, ip
    45f0:	str	sl, [r0, #12]
    45f4:	mov	r1, r2
    45f8:	ldr	r2, [r2, #16]
    45fc:	cmp	r2, #0
    4600:	bne	45f4 <sf_finish_parse+0x1324>
    4604:	str	r0, [r1, #16]
    4608:	mov	r7, r8
    460c:	ldr	r5, [r7, r6, lsl #3]!
    4610:	cmp	r5, #19
    4614:	bhi	4674 <sf_finish_parse+0x13a4>
    4618:	ldr	r0, [pc, #4080]	; 5610 <sf_finish_parse+0x2340>
    461c:	add	r4, r6, #1
    4620:	cmp	r6, #15
    4624:	add	r0, pc, r0
    4628:	str	r4, [r0]
    462c:	bge	54c4 <sf_finish_parse+0x21f4>
    4630:	mov	r0, #1024	; 0x400
    4634:	lsl	r5, r0, r4
    4638:	mov	r0, r5
    463c:	bl	ed4 <malloc@plt>
    4640:	cmp	r0, #0
    4644:	str	r0, [r7, #12]
    4648:	beq	54c4 <sf_finish_parse+0x21f4>
    464c:	mov	r1, #0
    4650:	mov	r2, r5
    4654:	add	r7, r7, #8
    4658:	bl	f40 <memset@plt>
    465c:	ldr	ip, [sp, #28]
    4660:	cmp	r5, #19
    4664:	str	r5, [r7]
    4668:	bhi	4678 <sf_finish_parse+0x13a8>
    466c:	b	54c4 <sf_finish_parse+0x21f4>
    4670:	.word	0x00043e40
    4674:	mov	r4, r6
    4678:	sub	r1, r5, #20
    467c:	mov	r2, #80	; 0x50
    4680:	str	r1, [r7]
    4684:	ldr	r0, [r7, #4]
    4688:	str	r2, [r0, r1]!
    468c:	mov	r1, #0
    4690:	mov	r2, ip
    4694:	str	r1, [r0, #12]
    4698:	mov	r1, r2
    469c:	ldr	r2, [r2, #16]
    46a0:	cmp	r2, #0
    46a4:	bne	4698 <sf_finish_parse+0x13c8>
    46a8:	str	r0, [r1, #16]
    46ac:	mov	r6, r8
    46b0:	ldr	r5, [r6, r4, lsl #3]!
    46b4:	cmp	r5, #19
    46b8:	bhi	4718 <sf_finish_parse+0x1448>
    46bc:	ldr	r0, [pc, #3920]	; 5614 <sf_finish_parse+0x2344>
    46c0:	add	r7, r4, #1
    46c4:	cmp	r4, #15
    46c8:	add	r0, pc, r0
    46cc:	str	r7, [r0]
    46d0:	bge	54c4 <sf_finish_parse+0x21f4>
    46d4:	mov	r0, #1024	; 0x400
    46d8:	lsl	r5, r0, r7
    46dc:	mov	r0, r5
    46e0:	bl	ed4 <malloc@plt>
    46e4:	cmp	r0, #0
    46e8:	str	r0, [r6, #12]
    46ec:	beq	54c4 <sf_finish_parse+0x21f4>
    46f0:	mov	r1, #0
    46f4:	mov	r2, r5
    46f8:	add	r6, r6, #8
    46fc:	bl	f40 <memset@plt>
    4700:	ldr	ip, [sp, #28]
    4704:	cmp	r5, #19
    4708:	str	r5, [r6]
    470c:	bhi	471c <sf_finish_parse+0x144c>
    4710:	b	54c4 <sf_finish_parse+0x21f4>
    4714:	.word	0x00043db8
    4718:	mov	r7, r4
    471c:	sub	r0, r5, #20
    4720:	mov	r1, #69	; 0x45
    4724:	str	r0, [r6]
    4728:	ldr	r4, [r6, #4]
    472c:	str	r1, [r4, r0]!
    4730:	mov	r0, #8
    4734:	mov	r1, ip
    4738:	str	r0, [r4, #12]
    473c:	mov	r0, r1
    4740:	ldr	r1, [r1, #16]
    4744:	cmp	r1, #0
    4748:	bne	473c <sf_finish_parse+0x146c>
    474c:	str	r4, [r0, #16]
    4750:	mov	r6, r8
    4754:	str	sl, [sp, #8]
    4758:	ldr	r5, [r6, r7, lsl #3]!
    475c:	cmp	r5, #19
    4760:	bhi	47c0 <sf_finish_parse+0x14f0>
    4764:	ldr	r0, [pc, #3756]	; 5618 <sf_finish_parse+0x2348>
    4768:	add	sl, r7, #1
    476c:	cmp	r7, #15
    4770:	add	r0, pc, r0
    4774:	str	sl, [r0]
    4778:	bge	54c4 <sf_finish_parse+0x21f4>
    477c:	mov	r0, #1024	; 0x400
    4780:	lsl	r5, r0, sl
    4784:	mov	r0, r5
    4788:	bl	ed4 <malloc@plt>
    478c:	cmp	r0, #0
    4790:	str	r0, [r6, #12]
    4794:	beq	54c4 <sf_finish_parse+0x21f4>
    4798:	mov	r1, #0
    479c:	mov	r2, r5
    47a0:	add	r6, r6, #8
    47a4:	bl	f40 <memset@plt>
    47a8:	ldr	ip, [sp, #28]
    47ac:	cmp	r5, #19
    47b0:	str	r5, [r6]
    47b4:	bhi	47c4 <sf_finish_parse+0x14f4>
    47b8:	b	54c4 <sf_finish_parse+0x21f4>
    47bc:	.word	0x00043d14
    47c0:	mov	sl, r7
    47c4:	sub	r0, r5, #20
    47c8:	mov	r1, #69	; 0x45
    47cc:	str	r0, [r6]
    47d0:	ldr	r7, [r6, #4]
    47d4:	str	r1, [r7, r0]!
    47d8:	mov	r1, ip
    47dc:	mov	r0, #4
    47e0:	str	r7, [r4, #4]
    47e4:	str	r0, [r7, #12]
    47e8:	mov	r0, r1
    47ec:	ldr	r1, [r1, #16]
    47f0:	cmp	r1, #0
    47f4:	bne	47e8 <sf_finish_parse+0x1518>
    47f8:	str	r7, [r0, #16]
    47fc:	ldr	r0, [sp, #12]
    4800:	mov	r6, r8
    4804:	str	r0, [r4, #8]
    4808:	str	r0, [r7, #4]
    480c:	ldr	r5, [r6, sl, lsl #3]!
    4810:	cmp	r5, #19
    4814:	bhi	4878 <sf_finish_parse+0x15a8>
    4818:	ldr	r0, [pc, #3580]	; 561c <sf_finish_parse+0x234c>
    481c:	add	r4, sl, #1
    4820:	cmp	sl, #15
    4824:	add	r0, pc, r0
    4828:	str	r4, [r0]
    482c:	bge	54c4 <sf_finish_parse+0x21f4>
    4830:	mov	r0, #1024	; 0x400
    4834:	lsl	r5, r0, r4
    4838:	mov	r0, r5
    483c:	bl	ed4 <malloc@plt>
    4840:	ldr	sl, [sp, #8]
    4844:	cmp	r0, #0
    4848:	str	r0, [r6, #12]
    484c:	beq	54c4 <sf_finish_parse+0x21f4>
    4850:	mov	r1, #0
    4854:	mov	r2, r5
    4858:	add	r6, r6, #8
    485c:	bl	f40 <memset@plt>
    4860:	ldr	ip, [sp, #28]
    4864:	cmp	r5, #19
    4868:	str	r5, [r6]
    486c:	bhi	4880 <sf_finish_parse+0x15b0>
    4870:	b	54c4 <sf_finish_parse+0x21f4>
    4874:	.word	0x00043c74
    4878:	mov	r4, sl
    487c:	ldr	sl, [sp, #8]
    4880:	sub	r0, r5, #20
    4884:	mov	r1, #69	; 0x45
    4888:	str	r0, [r6]
    488c:	ldr	r9, [r6, #4]
    4890:	str	r1, [r9, r0]!
    4894:	mov	r1, ip
    4898:	mov	r0, #128	; 0x80
    489c:	str	r9, [r7, #8]
    48a0:	str	r0, [r9, #12]
    48a4:	mov	r0, r1
    48a8:	ldr	r1, [r1, #16]
    48ac:	cmp	r1, #0
    48b0:	bne	48a4 <sf_finish_parse+0x15d4>
    48b4:	str	r9, [r0, #16]
    48b8:	mov	r6, r8
    48bc:	ldr	r5, [r6, r4, lsl #3]!
    48c0:	cmp	r5, #19
    48c4:	bhi	4928 <sf_finish_parse+0x1658>
    48c8:	ldr	r0, [pc, #3408]	; 5620 <sf_finish_parse+0x2350>
    48cc:	add	r7, r4, #1
    48d0:	cmp	r4, #15
    48d4:	add	r0, pc, r0
    48d8:	str	r7, [r0]
    48dc:	bge	54c4 <sf_finish_parse+0x21f4>
    48e0:	mov	r0, #1024	; 0x400
    48e4:	lsl	r5, r0, r7
    48e8:	mov	r0, r5
    48ec:	bl	ed4 <malloc@plt>
    48f0:	cmp	r0, #0
    48f4:	str	r0, [r6, #12]
    48f8:	beq	54c4 <sf_finish_parse+0x21f4>
    48fc:	mov	r1, #0
    4900:	mov	r2, r5
    4904:	add	r6, r6, #8
    4908:	bl	f40 <memset@plt>
    490c:	ldr	ip, [sp, #28]
    4910:	cmp	r5, #19
    4914:	str	r5, [r6]
    4918:	bhi	492c <sf_finish_parse+0x165c>
    491c:	b	54c4 <sf_finish_parse+0x21f4>
    4920:	.word	0x00043bcc
    4924:	.word	0x00043b34
    4928:	mov	r7, r4
    492c:	sub	r1, r5, #20
    4930:	mov	r2, #96	; 0x60
    4934:	str	r1, [r6]
    4938:	ldr	r0, [r6, #4]
    493c:	str	r2, [r0, r1]!
    4940:	mov	r2, ip
    4944:	str	r0, [r9, #4]
    4948:	str	sl, [r0, #12]
    494c:	mov	r1, r2
    4950:	ldr	r2, [r2, #16]
    4954:	cmp	r2, #0
    4958:	bne	494c <sf_finish_parse+0x167c>
    495c:	str	r0, [r1, #16]
    4960:	mov	r6, r8
    4964:	ldr	r5, [r6, r7, lsl #3]!
    4968:	cmp	r5, #19
    496c:	bhi	49c8 <sf_finish_parse+0x16f8>
    4970:	ldr	r0, [pc, #3244]	; 5624 <sf_finish_parse+0x2354>
    4974:	add	r4, r7, #1
    4978:	cmp	r7, #15
    497c:	add	r0, pc, r0
    4980:	str	r4, [r0]
    4984:	bge	54c4 <sf_finish_parse+0x21f4>
    4988:	mov	r0, #1024	; 0x400
    498c:	lsl	r5, r0, r4
    4990:	mov	r0, r5
    4994:	bl	ed4 <malloc@plt>
    4998:	cmp	r0, #0
    499c:	str	r0, [r6, #12]
    49a0:	beq	54c4 <sf_finish_parse+0x21f4>
    49a4:	mov	r1, #0
    49a8:	mov	r2, r5
    49ac:	add	r6, r6, #8
    49b0:	bl	f40 <memset@plt>
    49b4:	ldr	ip, [sp, #28]
    49b8:	cmp	r5, #19
    49bc:	str	r5, [r6]
    49c0:	bhi	49cc <sf_finish_parse+0x16fc>
    49c4:	b	54c4 <sf_finish_parse+0x21f4>
    49c8:	mov	r4, r7
    49cc:	sub	r1, r5, #20
    49d0:	mov	r2, #4
    49d4:	str	r1, [r6]
    49d8:	ldr	r0, [r6, #4]
    49dc:	str	r2, [r0, r1]!
    49e0:	mov	r1, #2
    49e4:	mov	r2, ip
    49e8:	str	r1, [r0, #12]
    49ec:	mov	r1, r2
    49f0:	ldr	r2, [r2, #16]
    49f4:	cmp	r2, #0
    49f8:	bne	49ec <sf_finish_parse+0x171c>
    49fc:	str	r0, [r1, #16]
    4a00:	mov	r6, r8
    4a04:	ldr	r5, [r6, r4, lsl #3]!
    4a08:	cmp	r5, #19
    4a0c:	bhi	4a6c <sf_finish_parse+0x179c>
    4a10:	ldr	r0, [pc, #3088]	; 5628 <sf_finish_parse+0x2358>
    4a14:	add	r7, r4, #1
    4a18:	cmp	r4, #15
    4a1c:	add	r0, pc, r0
    4a20:	str	r7, [r0]
    4a24:	bge	54c4 <sf_finish_parse+0x21f4>
    4a28:	mov	r0, #1024	; 0x400
    4a2c:	lsl	r5, r0, r7
    4a30:	mov	r0, r5
    4a34:	bl	ed4 <malloc@plt>
    4a38:	cmp	r0, #0
    4a3c:	str	r0, [r6, #12]
    4a40:	beq	54c4 <sf_finish_parse+0x21f4>
    4a44:	mov	r1, #0
    4a48:	mov	r2, r5
    4a4c:	add	r6, r6, #8
    4a50:	bl	f40 <memset@plt>
    4a54:	ldr	ip, [sp, #28]
    4a58:	cmp	r5, #19
    4a5c:	str	r5, [r6]
    4a60:	bhi	4a70 <sf_finish_parse+0x17a0>
    4a64:	b	54c4 <sf_finish_parse+0x21f4>
    4a68:	.word	0x00043a6c
    4a6c:	mov	r7, r4
    4a70:	sub	r1, r5, #20
    4a74:	mov	r2, #2
    4a78:	str	r1, [r6]
    4a7c:	ldr	r0, [r6, #4]
    4a80:	str	r2, [r0, r1]!
    4a84:	mov	r2, ip
    4a88:	str	sl, [r0, #12]
    4a8c:	mov	r1, r2
    4a90:	ldr	r2, [r2, #16]
    4a94:	cmp	r2, #0
    4a98:	bne	4a8c <sf_finish_parse+0x17bc>
    4a9c:	ldr	r3, [sp, #24]
    4aa0:	str	r0, [r1, #16]
    4aa4:	cmp	r3, #127	; 0x7f
    4aa8:	bne	4b18 <sf_finish_parse+0x1848>
    4aac:	mov	r4, r8
    4ab0:	ldr	r5, [r4, r7, lsl #3]!
    4ab4:	cmp	r5, #19
    4ab8:	bhi	4b2c <sf_finish_parse+0x185c>
    4abc:	ldr	r0, [pc, #2920]	; 562c <sf_finish_parse+0x235c>
    4ac0:	add	sl, r7, #1
    4ac4:	cmp	r7, #15
    4ac8:	add	r0, pc, r0
    4acc:	str	sl, [r0]
    4ad0:	bge	54c4 <sf_finish_parse+0x21f4>
    4ad4:	mov	r0, #1024	; 0x400
    4ad8:	lsl	r5, r0, sl
    4adc:	mov	r0, r5
    4ae0:	bl	ed4 <malloc@plt>
    4ae4:	cmp	r0, #0
    4ae8:	str	r0, [r4, #12]
    4aec:	beq	54c4 <sf_finish_parse+0x21f4>
    4af0:	mov	r1, #0
    4af4:	mov	r2, r5
    4af8:	add	r4, r4, #8
    4afc:	bl	f40 <memset@plt>
    4b00:	ldr	ip, [sp, #28]
    4b04:	cmp	r5, #19
    4b08:	str	r5, [r4]
    4b0c:	bhi	4b30 <sf_finish_parse+0x1860>
    4b10:	b	54c4 <sf_finish_parse+0x21f4>
    4b14:	.word	0x000439d4
    4b18:	ldr	r0, [sp, #12]
    4b1c:	str	r0, [r9, #8]
    4b20:	ldr	r9, [sp, #20]
    4b24:	b	520c <sf_finish_parse+0x1f3c>
    4b28:	.word	0x00043930
    4b2c:	mov	sl, r7
    4b30:	sub	r1, r5, #20
    4b34:	mov	r2, #32
    4b38:	str	r1, [r4]
    4b3c:	ldr	r0, [r4, #4]
    4b40:	str	r2, [r0, r1]!
    4b44:	mov	r2, ip
    4b48:	mov	r1, #4
    4b4c:	str	r0, [r9, #8]
    4b50:	str	r1, [r0, #12]
    4b54:	mov	r1, r2
    4b58:	ldr	r2, [r2, #16]
    4b5c:	cmp	r2, #0
    4b60:	bne	4b54 <sf_finish_parse+0x1884>
    4b64:	str	r0, [r1, #16]
    4b68:	mov	r6, r8
    4b6c:	ldr	r5, [r6, sl, lsl #3]!
    4b70:	cmp	r5, #19
    4b74:	bhi	4bd4 <sf_finish_parse+0x1904>
    4b78:	ldr	r0, [pc, #2736]	; 5630 <sf_finish_parse+0x2360>
    4b7c:	add	r9, sl, #1
    4b80:	cmp	sl, #15
    4b84:	add	r0, pc, r0
    4b88:	str	r9, [r0]
    4b8c:	bge	54c4 <sf_finish_parse+0x21f4>
    4b90:	mov	r0, #1024	; 0x400
    4b94:	lsl	r5, r0, r9
    4b98:	mov	r0, r5
    4b9c:	bl	ed4 <malloc@plt>
    4ba0:	cmp	r0, #0
    4ba4:	str	r0, [r6, #12]
    4ba8:	beq	54c4 <sf_finish_parse+0x21f4>
    4bac:	mov	r1, #0
    4bb0:	mov	r2, r5
    4bb4:	add	r6, r6, #8
    4bb8:	bl	f40 <memset@plt>
    4bbc:	ldr	ip, [sp, #28]
    4bc0:	cmp	r5, #19
    4bc4:	str	r5, [r6]
    4bc8:	bhi	4bd8 <sf_finish_parse+0x1908>
    4bcc:	b	54c4 <sf_finish_parse+0x21f4>
    4bd0:	.word	0x00043890
    4bd4:	mov	r9, sl
    4bd8:	sub	r0, r5, #20
    4bdc:	mov	r1, #69	; 0x45
    4be0:	str	r0, [r6]
    4be4:	ldr	r6, [r6, #4]
    4be8:	str	r1, [r6, r0]!
    4bec:	mov	r0, #33554432	; 0x2000000
    4bf0:	mov	r1, ip
    4bf4:	str	r0, [r6, #12]
    4bf8:	mov	r0, r1
    4bfc:	ldr	r1, [r1, #16]
    4c00:	cmp	r1, #0
    4c04:	bne	4bf8 <sf_finish_parse+0x1928>
    4c08:	str	r6, [r0, #16]
    4c0c:	ldr	r0, [sp, #12]
    4c10:	mov	r4, r8
    4c14:	str	r0, [r6, #8]
    4c18:	ldr	r5, [r4, r9, lsl #3]!
    4c1c:	cmp	r5, #19
    4c20:	bhi	4c80 <sf_finish_parse+0x19b0>
    4c24:	ldr	r0, [pc, #2568]	; 5634 <sf_finish_parse+0x2364>
    4c28:	add	r7, r9, #1
    4c2c:	cmp	r9, #15
    4c30:	add	r0, pc, r0
    4c34:	str	r7, [r0]
    4c38:	bge	54c4 <sf_finish_parse+0x21f4>
    4c3c:	mov	r0, #1024	; 0x400
    4c40:	lsl	r5, r0, r7
    4c44:	mov	r0, r5
    4c48:	bl	ed4 <malloc@plt>
    4c4c:	cmp	r0, #0
    4c50:	str	r0, [r4, #12]
    4c54:	beq	54c4 <sf_finish_parse+0x21f4>
    4c58:	mov	r1, #0
    4c5c:	mov	r2, r5
    4c60:	add	r4, r4, #8
    4c64:	bl	f40 <memset@plt>
    4c68:	ldr	ip, [sp, #28]
    4c6c:	cmp	r5, #19
    4c70:	str	r5, [r4]
    4c74:	bhi	4c84 <sf_finish_parse+0x19b4>
    4c78:	b	54c4 <sf_finish_parse+0x21f4>
    4c7c:	.word	0x000437f0
    4c80:	mov	r7, r9
    4c84:	sub	r0, r5, #20
    4c88:	mov	r1, #69	; 0x45
    4c8c:	str	r0, [r4]
    4c90:	ldr	sl, [r4, #4]
    4c94:	str	r1, [sl, r0]!
    4c98:	mov	r1, ip
    4c9c:	mov	r0, #16777216	; 0x1000000
    4ca0:	str	sl, [r6, #4]
    4ca4:	str	r0, [sl, #12]
    4ca8:	mov	r0, r1
    4cac:	ldr	r1, [r1, #16]
    4cb0:	cmp	r1, #0
    4cb4:	bne	4ca8 <sf_finish_parse+0x19d8>
    4cb8:	str	sl, [r0, #16]
    4cbc:	mov	r6, r8
    4cc0:	ldr	r5, [r6, r7, lsl #3]!
    4cc4:	cmp	r5, #19
    4cc8:	bhi	4d2c <sf_finish_parse+0x1a5c>
    4ccc:	ldr	r0, [pc, #2404]	; 5638 <sf_finish_parse+0x2368>
    4cd0:	add	r4, r7, #1
    4cd4:	cmp	r7, #15
    4cd8:	add	r0, pc, r0
    4cdc:	str	r4, [r0]
    4ce0:	bge	54c4 <sf_finish_parse+0x21f4>
    4ce4:	mov	r0, #1024	; 0x400
    4ce8:	lsl	r5, r0, r4
    4cec:	mov	r0, r5
    4cf0:	bl	ed4 <malloc@plt>
    4cf4:	cmp	r0, #0
    4cf8:	str	r0, [r6, #12]
    4cfc:	beq	54c4 <sf_finish_parse+0x21f4>
    4d00:	mov	r1, #0
    4d04:	mov	r2, r5
    4d08:	add	r6, r6, #8
    4d0c:	bl	f40 <memset@plt>
    4d10:	ldr	ip, [sp, #28]
    4d14:	cmp	r5, #19
    4d18:	str	r5, [r6]
    4d1c:	bhi	4d30 <sf_finish_parse+0x1a60>
    4d20:	b	54c4 <sf_finish_parse+0x21f4>
    4d24:	.word	0x000436e4
    4d28:	.word	0x00043748
    4d2c:	mov	r4, r7
    4d30:	sub	r1, r5, #20
    4d34:	mov	r2, #48	; 0x30
    4d38:	str	r1, [r6]
    4d3c:	ldr	r0, [r6, #4]
    4d40:	str	r2, [r0, r1]!
    4d44:	mov	r2, ip
    4d48:	mov	r1, #16
    4d4c:	str	r0, [sl, #4]
    4d50:	str	r1, [r0, #12]
    4d54:	mov	r1, r2
    4d58:	ldr	r2, [r2, #16]
    4d5c:	cmp	r2, #0
    4d60:	bne	4d54 <sf_finish_parse+0x1a84>
    4d64:	str	r0, [r1, #16]
    4d68:	mov	r7, r8
    4d6c:	ldr	r5, [r7, r4, lsl #3]!
    4d70:	cmp	r5, #19
    4d74:	bhi	4dd4 <sf_finish_parse+0x1b04>
    4d78:	ldr	r0, [pc, #2236]	; 563c <sf_finish_parse+0x236c>
    4d7c:	add	r6, r4, #1
    4d80:	cmp	r4, #15
    4d84:	add	r0, pc, r0
    4d88:	str	r6, [r0]
    4d8c:	bge	54c4 <sf_finish_parse+0x21f4>
    4d90:	mov	r0, #1024	; 0x400
    4d94:	lsl	r5, r0, r6
    4d98:	mov	r0, r5
    4d9c:	bl	ed4 <malloc@plt>
    4da0:	cmp	r0, #0
    4da4:	str	r0, [r7, #12]
    4da8:	beq	54c4 <sf_finish_parse+0x21f4>
    4dac:	mov	r1, #0
    4db0:	mov	r2, r5
    4db4:	add	r7, r7, #8
    4db8:	bl	f40 <memset@plt>
    4dbc:	ldr	ip, [sp, #28]
    4dc0:	cmp	r5, #19
    4dc4:	str	r5, [r7]
    4dc8:	bhi	4dd8 <sf_finish_parse+0x1b08>
    4dcc:	b	54c4 <sf_finish_parse+0x21f4>
    4dd0:	.word	0x000436b0
    4dd4:	mov	r6, r4
    4dd8:	sub	r0, r5, #20
    4ddc:	mov	r1, #69	; 0x45
    4de0:	str	r0, [r7]
    4de4:	ldr	r9, [r7, #4]
    4de8:	str	r1, [r9, r0]!
    4dec:	mov	r0, #32
    4df0:	mov	r1, ip
    4df4:	str	r0, [r9, #12]
    4df8:	mov	r0, r1
    4dfc:	ldr	r1, [r1, #16]
    4e00:	cmp	r1, #0
    4e04:	bne	4df8 <sf_finish_parse+0x1b28>
    4e08:	str	r9, [r0, #16]
    4e0c:	mov	r4, r8
    4e10:	ldr	r5, [r4, r6, lsl #3]!
    4e14:	cmp	r5, #19
    4e18:	bhi	4e78 <sf_finish_parse+0x1ba8>
    4e1c:	ldr	r0, [pc, #2076]	; 5640 <sf_finish_parse+0x2370>
    4e20:	add	r7, r6, #1
    4e24:	cmp	r6, #15
    4e28:	add	r0, pc, r0
    4e2c:	str	r7, [r0]
    4e30:	bge	54c4 <sf_finish_parse+0x21f4>
    4e34:	mov	r0, #1024	; 0x400
    4e38:	lsl	r5, r0, r7
    4e3c:	mov	r0, r5
    4e40:	bl	ed4 <malloc@plt>
    4e44:	cmp	r0, #0
    4e48:	str	r0, [r4, #12]
    4e4c:	beq	54c4 <sf_finish_parse+0x21f4>
    4e50:	mov	r1, #0
    4e54:	mov	r2, r5
    4e58:	add	r4, r4, #8
    4e5c:	bl	f40 <memset@plt>
    4e60:	ldr	ip, [sp, #28]
    4e64:	cmp	r5, #19
    4e68:	str	r5, [r4]
    4e6c:	bhi	4e7c <sf_finish_parse+0x1bac>
    4e70:	b	54c4 <sf_finish_parse+0x21f4>
    4e74:	.word	0x00043618
    4e78:	mov	r7, r6
    4e7c:	sub	r1, r5, #20
    4e80:	mov	r2, #48	; 0x30
    4e84:	str	r1, [r4]
    4e88:	ldr	r0, [r4, #4]
    4e8c:	str	r2, [r0, r1]!
    4e90:	mov	r2, ip
    4e94:	mov	r1, #8
    4e98:	str	r0, [sl, #8]
    4e9c:	str	r1, [r0, #12]
    4ea0:	mov	r1, r2
    4ea4:	ldr	r2, [r2, #16]
    4ea8:	cmp	r2, #0
    4eac:	bne	4ea0 <sf_finish_parse+0x1bd0>
    4eb0:	str	r0, [r1, #16]
    4eb4:	mov	r6, r8
    4eb8:	ldr	r5, [r6, r7, lsl #3]!
    4ebc:	cmp	r5, #19
    4ec0:	bhi	4f24 <sf_finish_parse+0x1c54>
    4ec4:	ldr	r0, [pc, #1912]	; 5644 <sf_finish_parse+0x2374>
    4ec8:	add	r4, r7, #1
    4ecc:	cmp	r7, #15
    4ed0:	add	r0, pc, r0
    4ed4:	str	r4, [r0]
    4ed8:	bge	54c4 <sf_finish_parse+0x21f4>
    4edc:	mov	r0, #1024	; 0x400
    4ee0:	lsl	r5, r0, r4
    4ee4:	mov	r0, r5
    4ee8:	bl	ed4 <malloc@plt>
    4eec:	cmp	r0, #0
    4ef0:	str	r0, [r6, #12]
    4ef4:	beq	54c4 <sf_finish_parse+0x21f4>
    4ef8:	mov	r1, #0
    4efc:	mov	r2, r5
    4f00:	add	r6, r6, #8
    4f04:	bl	f40 <memset@plt>
    4f08:	ldr	ip, [sp, #28]
    4f0c:	cmp	r5, #19
    4f10:	str	r5, [r6]
    4f14:	bhi	4f28 <sf_finish_parse+0x1c58>
    4f18:	b	54c4 <sf_finish_parse+0x21f4>
    4f1c:	.word	0x00043510
    4f20:	.word	0x00043574
    4f24:	mov	r4, r7
    4f28:	sub	r0, r5, #20
    4f2c:	mov	r1, #69	; 0x45
    4f30:	str	r0, [r6]
    4f34:	ldr	sl, [r6, #4]
    4f38:	str	r1, [sl, r0]!
    4f3c:	mov	r0, #32
    4f40:	mov	r1, ip
    4f44:	str	r0, [sl, #12]
    4f48:	mov	r0, r1
    4f4c:	ldr	r1, [r1, #16]
    4f50:	cmp	r1, #0
    4f54:	bne	4f48 <sf_finish_parse+0x1c78>
    4f58:	str	sl, [r0, #16]
    4f5c:	mov	r6, r8
    4f60:	str	r9, [sp, #4]
    4f64:	ldr	r5, [r6, r4, lsl #3]!
    4f68:	cmp	r5, #19
    4f6c:	bhi	4fcc <sf_finish_parse+0x1cfc>
    4f70:	ldr	r0, [pc, #1744]	; 5648 <sf_finish_parse+0x2378>
    4f74:	add	r7, r4, #1
    4f78:	cmp	r4, #15
    4f7c:	add	r0, pc, r0
    4f80:	str	r7, [r0]
    4f84:	bge	54c4 <sf_finish_parse+0x21f4>
    4f88:	mov	r0, #1024	; 0x400
    4f8c:	lsl	r5, r0, r7
    4f90:	mov	r0, r5
    4f94:	bl	ed4 <malloc@plt>
    4f98:	cmp	r0, #0
    4f9c:	str	r0, [r6, #12]
    4fa0:	beq	54c4 <sf_finish_parse+0x21f4>
    4fa4:	mov	r1, #0
    4fa8:	mov	r2, r5
    4fac:	add	r6, r6, #8
    4fb0:	bl	f40 <memset@plt>
    4fb4:	ldr	ip, [sp, #28]
    4fb8:	cmp	r5, #19
    4fbc:	str	r5, [r6]
    4fc0:	bhi	4fd0 <sf_finish_parse+0x1d00>
    4fc4:	b	54c4 <sf_finish_parse+0x21f4>
    4fc8:	.word	0x000434d8
    4fcc:	mov	r7, r4
    4fd0:	sub	r0, r5, #20
    4fd4:	mov	r1, #96	; 0x60
    4fd8:	str	r0, [r6]
    4fdc:	ldr	r9, [r6, #4]
    4fe0:	str	r1, [r9, r0]!
    4fe4:	mov	r1, ip
    4fe8:	ldr	r0, [sp, #8]
    4fec:	str	r0, [r9, #12]
    4ff0:	mov	r0, r1
    4ff4:	ldr	r1, [r1, #16]
    4ff8:	cmp	r1, #0
    4ffc:	bne	4ff0 <sf_finish_parse+0x1d20>
    5000:	str	r9, [r0, #16]
    5004:	mov	r4, r8
    5008:	ldr	r5, [r4, r7, lsl #3]!
    500c:	cmp	r5, #19
    5010:	bhi	5070 <sf_finish_parse+0x1da0>
    5014:	ldr	r0, [pc, #1584]	; 564c <sf_finish_parse+0x237c>
    5018:	add	r6, r7, #1
    501c:	cmp	r7, #15
    5020:	add	r0, pc, r0
    5024:	str	r6, [r0]
    5028:	bge	54c4 <sf_finish_parse+0x21f4>
    502c:	mov	r0, #1024	; 0x400
    5030:	lsl	r5, r0, r6
    5034:	mov	r0, r5
    5038:	bl	ed4 <malloc@plt>
    503c:	cmp	r0, #0
    5040:	str	r0, [r4, #12]
    5044:	beq	54c4 <sf_finish_parse+0x21f4>
    5048:	mov	r1, #0
    504c:	mov	r2, r5
    5050:	add	r4, r4, #8
    5054:	bl	f40 <memset@plt>
    5058:	ldr	ip, [sp, #28]
    505c:	cmp	r5, #19
    5060:	str	r5, [r4]
    5064:	bhi	5074 <sf_finish_parse+0x1da4>
    5068:	b	54c4 <sf_finish_parse+0x21f4>
    506c:	.word	0x00043414
    5070:	mov	r6, r7
    5074:	sub	r1, r5, #20
    5078:	mov	r2, #4
    507c:	str	r1, [r4]
    5080:	ldr	r0, [r4, #4]
    5084:	str	r2, [r0, r1]!
    5088:	mov	r1, #3
    508c:	mov	r2, ip
    5090:	str	r1, [r0, #12]
    5094:	mov	r1, r2
    5098:	ldr	r2, [r2, #16]
    509c:	cmp	r2, #0
    50a0:	bne	5094 <sf_finish_parse+0x1dc4>
    50a4:	str	r0, [r1, #16]
    50a8:	mov	r4, r8
    50ac:	ldr	r5, [r4, r6, lsl #3]!
    50b0:	cmp	r5, #19
    50b4:	bhi	5120 <sf_finish_parse+0x1e50>
    50b8:	ldr	r0, [pc, #1424]	; 5650 <sf_finish_parse+0x2380>
    50bc:	add	r7, r6, #1
    50c0:	cmp	r6, #15
    50c4:	add	r0, pc, r0
    50c8:	str	r7, [r0]
    50cc:	bge	54c4 <sf_finish_parse+0x21f4>
    50d0:	mov	r0, #1024	; 0x400
    50d4:	lsl	r5, r0, r7
    50d8:	mov	r0, r5
    50dc:	bl	ed4 <malloc@plt>
    50e0:	cmp	r0, #0
    50e4:	str	r0, [r4, #12]
    50e8:	beq	54c4 <sf_finish_parse+0x21f4>
    50ec:	mov	r1, #0
    50f0:	mov	r2, r5
    50f4:	add	r4, r4, #8
    50f8:	bl	f40 <memset@plt>
    50fc:	ldr	ip, [sp, #28]
    5100:	cmp	r5, #19
    5104:	str	r5, [r4]
    5108:	bhi	5124 <sf_finish_parse+0x1e54>
    510c:	b	54c4 <sf_finish_parse+0x21f4>
    5110:	.word	0x000432e0
    5114:	.word	0x00043340
    5118:	.word	0x00043220
    511c:	.word	0x00043284
    5120:	mov	r7, r6
    5124:	sub	r1, r5, #20
    5128:	mov	r2, #84	; 0x54
    512c:	str	r1, [r4]
    5130:	ldr	r0, [r4, #4]
    5134:	str	r2, [r0, r1]!
    5138:	mvn	r1, #3
    513c:	mov	r2, ip
    5140:	str	r1, [r0, #12]
    5144:	mov	r1, r2
    5148:	ldr	r2, [r2, #16]
    514c:	cmp	r2, #0
    5150:	bne	5144 <sf_finish_parse+0x1e74>
    5154:	str	r0, [r1, #16]
    5158:	ldr	r5, [r8, r7, lsl #3]!
    515c:	cmp	r5, #19
    5160:	bhi	51b8 <sf_finish_parse+0x1ee8>
    5164:	ldr	r1, [pc, #1256]	; 5654 <sf_finish_parse+0x2384>
    5168:	add	r0, r7, #1
    516c:	cmp	r7, #15
    5170:	add	r1, pc, r1
    5174:	str	r0, [r1]
    5178:	bge	54c4 <sf_finish_parse+0x21f4>
    517c:	mov	r1, #1024	; 0x400
    5180:	lsl	r5, r1, r0
    5184:	mov	r0, r5
    5188:	bl	ed4 <malloc@plt>
    518c:	cmp	r0, #0
    5190:	str	r0, [r8, #12]
    5194:	beq	54c4 <sf_finish_parse+0x21f4>
    5198:	mov	r1, #0
    519c:	mov	r2, r5
    51a0:	add	r8, r8, #8
    51a4:	bl	f40 <memset@plt>
    51a8:	ldr	ip, [sp, #28]
    51ac:	cmp	r5, #19
    51b0:	str	r5, [r8]
    51b4:	bls	54c4 <sf_finish_parse+0x21f4>
    51b8:	sub	r1, r5, #20
    51bc:	mov	r2, #2
    51c0:	str	r1, [r8]
    51c4:	ldr	r0, [r8, #4]
    51c8:	str	r2, [r0, r1]!
    51cc:	mov	r2, ip
    51d0:	ldr	r1, [sp, #8]
    51d4:	str	r1, [r0, #12]
    51d8:	mov	r1, r2
    51dc:	ldr	r2, [r2, #16]
    51e0:	cmp	r2, #0
    51e4:	bne	51d8 <sf_finish_parse+0x1f08>
    51e8:	str	r0, [r1, #16]
    51ec:	ldr	r1, [sp, #4]
    51f0:	ldr	r0, [sp, #12]
    51f4:	ldr	r3, [sp, #24]
    51f8:	str	r9, [r1, #4]
    51fc:	str	r0, [r1, #8]
    5200:	str	r9, [sl, #4]
    5204:	ldr	r9, [sp, #20]
    5208:	str	r0, [sl, #8]
    520c:	ldr	r7, [sp, #16]
    5210:	cmp	ip, #0
    5214:	beq	5238 <sf_finish_parse+0x1f68>
    5218:	ldr	r0, [r7, #4]
    521c:	mov	r2, ip
    5220:	mov	r1, r2
    5224:	ldr	r2, [r2, #16]
    5228:	cmp	r2, #0
    522c:	bne	5220 <sf_finish_parse+0x1f50>
    5230:	str	r0, [r1, #16]
    5234:	str	ip, [r7, #4]
    5238:	ldr	sl, [pc, #1048]	; 5658 <sf_finish_parse+0x2388>
    523c:	cmp	r3, #192	; 0xc0
    5240:	ldr	sl, [pc, sl]
    5244:	bne	5454 <sf_finish_parse+0x2184>
    5248:	ldr	r8, [pc, #1036]	; 565c <sf_finish_parse+0x238c>
    524c:	add	r8, pc, r8
    5250:	mov	r6, r8
    5254:	ldr	r5, [r6, sl, lsl #3]!
    5258:	cmp	r5, #19
    525c:	bhi	52bc <sf_finish_parse+0x1fec>
    5260:	ldr	r0, [pc, #1016]	; 5660 <sf_finish_parse+0x2390>
    5264:	add	r9, sl, #1
    5268:	cmp	sl, #15
    526c:	add	r0, pc, r0
    5270:	str	r9, [r0]
    5274:	bge	54c4 <sf_finish_parse+0x21f4>
    5278:	mov	r0, #1024	; 0x400
    527c:	lsl	r5, r0, r9
    5280:	mov	r0, r5
    5284:	bl	ed4 <malloc@plt>
    5288:	cmp	r0, #0
    528c:	str	r0, [r6, #12]
    5290:	beq	54c4 <sf_finish_parse+0x21f4>
    5294:	mov	r1, #0
    5298:	mov	r2, r5
    529c:	add	r4, r6, #8
    52a0:	bl	f40 <memset@plt>
    52a4:	cmp	r5, #20
    52a8:	str	r5, [r4]
    52ac:	bcc	54c4 <sf_finish_parse+0x21f4>
    52b0:	add	r6, r8, r9, lsl #3
    52b4:	b	52c4 <sf_finish_parse+0x1ff4>
    52b8:	.word	0x000431e0
    52bc:	mov	r9, sl
    52c0:	mov	r4, r6
    52c4:	sub	r0, r5, #20
    52c8:	mov	r1, #32
    52cc:	str	r0, [r4]
    52d0:	ldr	r7, [r4, #4]
    52d4:	str	r1, [r7, r0]!
    52d8:	mov	r0, #4
    52dc:	str	r0, [r7, #12]
    52e0:	ldr	r5, [r8, r9, lsl #3]
    52e4:	cmp	r5, #207	; 0xcf
    52e8:	bhi	535c <sf_finish_parse+0x208c>
    52ec:	ldr	r0, [pc, #880]	; 5664 <sf_finish_parse+0x2394>
    52f0:	add	sl, r9, #1
    52f4:	cmp	r9, #15
    52f8:	add	r0, pc, r0
    52fc:	str	sl, [r0]
    5300:	bge	54c4 <sf_finish_parse+0x21f4>
    5304:	mov	r0, #1024	; 0x400
    5308:	lsl	r5, r0, sl
    530c:	mov	r0, r5
    5310:	bl	ed4 <malloc@plt>
    5314:	ldr	r9, [sp, #20]
    5318:	cmp	r0, #0
    531c:	str	r0, [r6, #12]
    5320:	beq	54c4 <sf_finish_parse+0x21f4>
    5324:	mov	r1, #0
    5328:	mov	r2, r5
    532c:	add	r6, r6, #8
    5330:	bl	f40 <memset@plt>
    5334:	cmp	r5, #207	; 0xcf
    5338:	str	r5, [r6]
    533c:	bhi	5364 <sf_finish_parse+0x2094>
    5340:	b	54c4 <sf_finish_parse+0x21f4>
    5344:	.word	0x0004365c
    5348:	.word	0x000431a8
    534c:	.word	0x00043108
    5350:	.word	0x0004316c
    5354:	.word	0x00043068
    5358:	.word	0x000430c8
    535c:	mov	sl, r9
    5360:	ldr	r9, [sp, #20]
    5364:	sub	r0, r5, #208	; 0xd0
    5368:	str	r0, [r6]
    536c:	ldr	r1, [r6, #4]
    5370:	adds	r0, r1, r0
    5374:	mov	r1, #21
    5378:	str	r7, [r0, #4]
    537c:	str	r1, [r0, #8]
    5380:	mov	r1, #1761607680	; 0x69000000
    5384:	str	r1, [r0, #20]
    5388:	str	r0, [r0, #96]	; 0x60
    538c:	beq	5454 <sf_finish_parse+0x2184>
    5390:	ldr	r1, [r9, #96]	; 0x60
    5394:	mov	r2, r0
    5398:	ldr	r3, [r2, #44]	; 0x2c
    539c:	add	r7, r2, #84	; 0x54
    53a0:	cmp	r3, #0
    53a4:	mov	r3, #84	; 0x54
    53a8:	movweq	r3, #60	; 0x3c
    53ac:	addeq	r7, r2, #60	; 0x3c
    53b0:	ldr	r2, [r2, r3]
    53b4:	str	r1, [r7]
    53b8:	cmp	r2, #0
    53bc:	bne	5398 <sf_finish_parse+0x20c8>
    53c0:	ldr	r1, [r0, #44]	; 0x2c
    53c4:	cmp	r9, #0
    53c8:	clz	r1, r1
    53cc:	lsr	r1, r1, #5
    53d0:	str	r1, [r0, #44]	; 0x2c
    53d4:	ldr	r2, [r9, #44]	; 0x2c
    53d8:	clz	r1, r2
    53dc:	lsr	r1, r1, #5
    53e0:	str	r1, [r9, #44]	; 0x2c
    53e4:	str	r9, [sp, #32]
    53e8:	beq	5434 <sf_finish_parse+0x2164>
    53ec:	cmp	r2, #0
    53f0:	mov	r2, #60	; 0x3c
    53f4:	add	r1, r9, #60	; 0x3c
    53f8:	movweq	r2, #84	; 0x54
    53fc:	addeq	r1, r9, #84	; 0x54
    5400:	ldr	r2, [r9, r2]
    5404:	cmp	r2, #0
    5408:	beq	5438 <sf_finish_parse+0x2168>
    540c:	ldr	r3, [r2, #44]	; 0x2c
    5410:	add	r1, r2, #84	; 0x54
    5414:	cmp	r3, #0
    5418:	mov	r3, #84	; 0x54
    541c:	movweq	r3, #60	; 0x3c
    5420:	addeq	r1, r2, #60	; 0x3c
    5424:	ldr	r2, [r2, r3]
    5428:	cmp	r2, #0
    542c:	bne	540c <sf_finish_parse+0x213c>
    5430:	b	5438 <sf_finish_parse+0x2168>
    5434:	add	r1, sp, #32
    5438:	str	r0, [r1]
    543c:	ldr	r1, [r9, #44]	; 0x2c
    5440:	clz	r1, r1
    5444:	lsr	r1, r1, #5
    5448:	str	r1, [r9, #44]	; 0x2c
    544c:	ldr	r0, [r0, #96]	; 0x60
    5450:	str	r0, [r9, #96]	; 0x60
    5454:	ldr	r4, [pc, #524]	; 5668 <sf_finish_parse+0x2398>
    5458:	add	r4, pc, r4
    545c:	mov	r6, r4
    5460:	ldr	r5, [r6, sl, lsl #3]!
    5464:	ldr	r8, [pc, #512]	; 566c <sf_finish_parse+0x239c>
    5468:	ldr	r8, [pc, r8]
    546c:	cmp	r5, #207	; 0xcf
    5470:	bhi	54d8 <sf_finish_parse+0x2208>
    5474:	ldr	r0, [pc, #500]	; 5670 <sf_finish_parse+0x23a0>
    5478:	add	r7, sl, #1
    547c:	cmp	sl, #15
    5480:	add	r0, pc, r0
    5484:	str	r7, [r0]
    5488:	bge	54c4 <sf_finish_parse+0x21f4>
    548c:	mov	r0, #1024	; 0x400
    5490:	lsl	r5, r0, r7
    5494:	mov	r0, r5
    5498:	bl	ed4 <malloc@plt>
    549c:	cmp	r0, #0
    54a0:	str	r0, [r6, #12]
    54a4:	beq	54c4 <sf_finish_parse+0x21f4>
    54a8:	mov	r1, #0
    54ac:	mov	r2, r5
    54b0:	add	r6, r6, #8
    54b4:	bl	f40 <memset@plt>
    54b8:	cmp	r5, #207	; 0xcf
    54bc:	str	r5, [r6]
    54c0:	bhi	54dc <sf_finish_parse+0x220c>
    54c4:	ldr	r0, [pc, #432]	; 567c <sf_finish_parse+0x23ac>
    54c8:	add	r0, pc, r0
    54cc:	bl	2124 <sf_bpf_error>
    54d0:	.word	0x0004301c
    54d4:	.word	0x00042f78
    54d8:	mov	r7, sl
    54dc:	sub	r0, r5, #208	; 0xd0
    54e0:	cmp	r9, #0
    54e4:	str	r0, [r6]
    54e8:	ldr	r1, [r6, #4]
    54ec:	add	r0, r1, r0
    54f0:	mov	r1, #6
    54f4:	str	r1, [r0, #8]
    54f8:	str	r8, [r0, #20]
    54fc:	str	r0, [r0, #96]	; 0x60
    5500:	beq	5530 <sf_finish_parse+0x2260>
    5504:	mov	r1, r9
    5508:	ldr	r2, [r1, #44]	; 0x2c
    550c:	add	r3, r1, #84	; 0x54
    5510:	cmp	r2, #0
    5514:	mov	r2, #84	; 0x54
    5518:	movweq	r2, #60	; 0x3c
    551c:	addeq	r3, r1, #60	; 0x3c
    5520:	ldr	r1, [r1, r2]
    5524:	str	r0, [r3]
    5528:	cmp	r1, #0
    552c:	bne	5508 <sf_finish_parse+0x2238>
    5530:	ldr	r0, [r9, #44]	; 0x2c
    5534:	clz	r0, r0
    5538:	lsr	r0, r0, #5
    553c:	str	r0, [r9, #44]	; 0x2c
    5540:	ldr	r5, [r4, r7, lsl #3]!
    5544:	cmp	r5, #207	; 0xcf
    5548:	bhi	559c <sf_finish_parse+0x22cc>
    554c:	ldr	r1, [pc, #288]	; 5674 <sf_finish_parse+0x23a4>
    5550:	add	r0, r7, #1
    5554:	cmp	r7, #15
    5558:	add	r1, pc, r1
    555c:	str	r0, [r1]
    5560:	bge	5604 <sf_finish_parse+0x2334>
    5564:	mov	r1, #1024	; 0x400
    5568:	lsl	r5, r1, r0
    556c:	mov	r0, r5
    5570:	bl	ed4 <malloc@plt>
    5574:	cmp	r0, #0
    5578:	str	r0, [r4, #12]
    557c:	beq	5604 <sf_finish_parse+0x2334>
    5580:	mov	r1, #0
    5584:	mov	r2, r5
    5588:	add	r4, r4, #8
    558c:	bl	f40 <memset@plt>
    5590:	cmp	r5, #207	; 0xcf
    5594:	str	r5, [r4]
    5598:	bls	5604 <sf_finish_parse+0x2334>
    559c:	sub	r0, r5, #208	; 0xd0
    55a0:	str	r0, [r4]
    55a4:	ldr	r1, [r4, #4]
    55a8:	add	r0, r1, r0
    55ac:	mov	r1, #6
    55b0:	str	r1, [r0, #8]
    55b4:	mov	r1, #0
    55b8:	str	r1, [r0, #20]
    55bc:	mov	r1, r9
    55c0:	str	r0, [r0, #96]	; 0x60
    55c4:	ldr	r2, [r1, #44]	; 0x2c
    55c8:	add	r3, r1, #84	; 0x54
    55cc:	cmp	r2, #0
    55d0:	mov	r2, #84	; 0x54
    55d4:	movweq	r2, #60	; 0x3c
    55d8:	addeq	r3, r1, #60	; 0x3c
    55dc:	ldr	r1, [r1, r2]
    55e0:	str	r0, [r3]
    55e4:	cmp	r1, #0
    55e8:	bne	55c4 <sf_finish_parse+0x22f4>
    55ec:	ldr	r0, [r9, #96]	; 0x60
    55f0:	ldr	r1, [pc, #128]	; 5678 <sf_finish_parse+0x23a8>
    55f4:	add	r1, pc, r1
    55f8:	str	r0, [r1]
    55fc:	sub	sp, fp, #28
    5600:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    5604:	ldr	r0, [pc, #116]	; 5680 <sf_finish_parse+0x23b0>
    5608:	add	r0, pc, r0
    560c:	bl	2124 <sf_bpf_error>
    5610:	.word	0x00042ed8
    5614:	.word	0x00042e34
    5618:	.word	0x00042d8c
    561c:	.word	0x00042cd8
    5620:	.word	0x00042c28
    5624:	.word	0x00042b80
    5628:	.word	0x00042ae0
    562c:	.word	0x00042a34
    5630:	.word	0x00042978
    5634:	.word	0x000428cc
    5638:	.word	0x00042824
    563c:	.word	0x00042778
    5640:	.word	0x000426d4
    5644:	.word	0x0004262c
    5648:	.word	0x00042580
    564c:	.word	0x000424dc
    5650:	.word	0x00042438
    5654:	.word	0x0004238c
    5658:	.word	0x000422bc
    565c:	.word	0x00042230
    5660:	.word	0x00042290
    5664:	.word	0x00042204
    5668:	.word	0x00042024
    566c:	.word	0x00041fc4
    5670:	.word	0x0004207c
    5674:	.word	0x00041fa4
    5678:	.word	0x00041e2c
    567c:	.word	0x00024b3c
    5680:	.word	0x000249fc

00005684 <sf_gen_and>:
    5684:	push	{r4, sl, fp, lr}
    5688:	add	fp, sp, #8
    568c:	sub	sp, sp, #4
    5690:	cmp	r0, #0
    5694:	beq	56c8 <sf_gen_and+0x44>
    5698:	ldr	ip, [r1, #96]	; 0x60
    569c:	mov	r3, r0
    56a0:	ldr	lr, [r3, #44]	; 0x2c
    56a4:	mov	r2, #84	; 0x54
    56a8:	add	r4, r3, #84	; 0x54
    56ac:	cmp	lr, #0
    56b0:	movweq	r2, #60	; 0x3c
    56b4:	addeq	r4, r3, #60	; 0x3c
    56b8:	ldr	r3, [r3, r2]
    56bc:	str	ip, [r4]
    56c0:	cmp	r3, #0
    56c4:	bne	56a0 <sf_gen_and+0x1c>
    56c8:	ldr	r2, [r0, #44]	; 0x2c
    56cc:	cmp	r1, #0
    56d0:	clz	r2, r2
    56d4:	lsr	r2, r2, #5
    56d8:	str	r2, [r0, #44]	; 0x2c
    56dc:	ldr	r3, [r1, #44]	; 0x2c
    56e0:	clz	r2, r3
    56e4:	lsr	r2, r2, #5
    56e8:	str	r2, [r1, #44]	; 0x2c
    56ec:	str	r1, [sp]
    56f0:	beq	573c <sf_gen_and+0xb8>
    56f4:	cmp	r3, #0
    56f8:	mov	r3, #60	; 0x3c
    56fc:	add	r2, r1, #60	; 0x3c
    5700:	movweq	r3, #84	; 0x54
    5704:	addeq	r2, r1, #84	; 0x54
    5708:	ldr	r3, [r1, r3]
    570c:	cmp	r3, #0
    5710:	beq	5740 <sf_gen_and+0xbc>
    5714:	ldr	r4, [r3, #44]	; 0x2c
    5718:	add	r2, r3, #84	; 0x54
    571c:	cmp	r4, #0
    5720:	mov	r4, #84	; 0x54
    5724:	movweq	r4, #60	; 0x3c
    5728:	addeq	r2, r3, #60	; 0x3c
    572c:	ldr	r3, [r3, r4]
    5730:	cmp	r3, #0
    5734:	bne	5714 <sf_gen_and+0x90>
    5738:	b	5740 <sf_gen_and+0xbc>
    573c:	mov	r2, sp
    5740:	str	r0, [r2]
    5744:	ldr	r2, [r1, #44]	; 0x2c
    5748:	clz	r2, r2
    574c:	lsr	r2, r2, #5
    5750:	str	r2, [r1, #44]	; 0x2c
    5754:	ldr	r0, [r0, #96]	; 0x60
    5758:	str	r0, [r1, #96]	; 0x60
    575c:	sub	sp, fp, #8
    5760:	pop	{r4, sl, fp, pc}

00005764 <sf_gen_or>:
    5764:	push	{r4, sl, fp, lr}
    5768:	add	fp, sp, #8
    576c:	sub	sp, sp, #4
    5770:	ldr	r2, [r0, #44]	; 0x2c
    5774:	cmp	r0, #0
    5778:	clz	r2, r2
    577c:	lsr	lr, r2, #5
    5780:	str	lr, [r0, #44]	; 0x2c
    5784:	beq	57c0 <sf_gen_or+0x5c>
    5788:	ldr	ip, [r1, #96]	; 0x60
    578c:	mov	r3, r0
    5790:	b	5798 <sf_gen_or+0x34>
    5794:	ldr	lr, [r3, #44]	; 0x2c
    5798:	cmp	lr, #0
    579c:	mov	r2, #84	; 0x54
    57a0:	add	r4, r3, #84	; 0x54
    57a4:	movweq	r2, #60	; 0x3c
    57a8:	addeq	r4, r3, #60	; 0x3c
    57ac:	ldr	r3, [r3, r2]
    57b0:	str	ip, [r4]
    57b4:	cmp	r3, #0
    57b8:	bne	5794 <sf_gen_or+0x30>
    57bc:	ldr	lr, [r0, #44]	; 0x2c
    57c0:	clz	r2, lr
    57c4:	cmp	r1, #0
    57c8:	lsr	r2, r2, #5
    57cc:	str	r2, [r0, #44]	; 0x2c
    57d0:	str	r1, [sp]
    57d4:	beq	5804 <sf_gen_or+0xa0>
    57d8:	mov	r3, r1
    57dc:	ldr	r4, [r3, #44]	; 0x2c
    57e0:	add	r2, r3, #84	; 0x54
    57e4:	cmp	r4, #0
    57e8:	mov	r4, #84	; 0x54
    57ec:	movweq	r4, #60	; 0x3c
    57f0:	addeq	r2, r3, #60	; 0x3c
    57f4:	ldr	r3, [r3, r4]
    57f8:	cmp	r3, #0
    57fc:	bne	57dc <sf_gen_or+0x78>
    5800:	b	5808 <sf_gen_or+0xa4>
    5804:	mov	r2, sp
    5808:	str	r0, [r2]
    580c:	ldr	r0, [r0, #96]	; 0x60
    5810:	str	r0, [r1, #96]	; 0x60
    5814:	sub	sp, fp, #8
    5818:	pop	{r4, sl, fp, pc}

0000581c <sf_gen_not>:
    581c:	ldr	r1, [r0, #44]	; 0x2c
    5820:	clz	r1, r1
    5824:	lsr	r1, r1, #5
    5828:	str	r1, [r0, #44]	; 0x2c
    582c:	bx	lr

00005830 <sf_gen_proto_abbrev>:
    5830:	push	{r4, r5, fp, lr}
    5834:	add	fp, sp, #8
    5838:	sub	sp, sp, #8
    583c:	sub	r0, r0, #1
    5840:	cmp	r0, #39	; 0x27
    5844:	bhi	69c8 <sf_gen_proto_abbrev+0x1198>
    5848:	add	r1, pc, #4
    584c:	ldr	r0, [r1, r0, lsl #2]
    5850:	add	pc, r1, r0
    5854:	.word	0x00001178
    5858:	.word	0x000000a0
    585c:	.word	0x00000248
    5860:	.word	0x00000250
    5864:	.word	0x00000564
    5868:	.word	0x00000258
    586c:	.word	0x0000061c
    5870:	.word	0x00000310
    5874:	.word	0x00000318
    5878:	.word	0x000006d4
    587c:	.word	0x000006ec
    5880:	.word	0x00000220
    5884:	.word	0x000006f4
    5888:	.word	0x00000884
    588c:	.word	0x00000320
    5890:	.word	0x000006fc
    5894:	.word	0x00000228
    5898:	.word	0x0000088c
    589c:	.word	0x00000328
    58a0:	.word	0x000003e0
    58a4:	.word	0x00000898
    58a8:	.word	0x00000498
    58ac:	.word	0x000004a0
    58b0:	.word	0x00000704
    58b4:	.word	0x00000950
    58b8:	.word	0x00000230
    58bc:	.word	0x0000023c
    58c0:	.word	0x0000095c
    58c4:	.word	0x00000a28
    58c8:	.word	0x00000964
    58cc:	.word	0x0000096c
    58d0:	.word	0x0000070c
    58d4:	.word	0x000004a8
    58d8:	.word	0x00001174
    58dc:	.word	0x00001174
    58e0:	.word	0x000007c8
    58e4:	.word	0x00000164
    58e8:	.word	0x000000a8
    58ec:	.word	0x00000a38
    58f0:	.word	0x00001184
    58f4:	mov	r0, #2048	; 0x800
    58f8:	b	6280 <sf_gen_proto_abbrev+0xa50>
    58fc:	mov	r0, #26
    5900:	mov	r1, #26
    5904:	mov	r2, #0
    5908:	bl	69ec <gen_proto>
    590c:	mov	r5, r0
    5910:	mov	r0, #27
    5914:	mov	r1, #26
    5918:	mov	r2, #0
    591c:	bl	69ec <gen_proto>
    5920:	mov	r4, r0
    5924:	ldr	r0, [r5, #44]	; 0x2c
    5928:	cmp	r5, #0
    592c:	clz	r0, r0
    5930:	lsr	r0, r0, #5
    5934:	str	r0, [r5, #44]	; 0x2c
    5938:	beq	5974 <sf_gen_proto_abbrev+0x144>
    593c:	ldr	r1, [r4, #96]	; 0x60
    5940:	mov	r2, r5
    5944:	b	594c <sf_gen_proto_abbrev+0x11c>
    5948:	ldr	r0, [r2, #44]	; 0x2c
    594c:	cmp	r0, #0
    5950:	mov	r0, #84	; 0x54
    5954:	add	r3, r2, #84	; 0x54
    5958:	movweq	r0, #60	; 0x3c
    595c:	addeq	r3, r2, #60	; 0x3c
    5960:	ldr	r2, [r2, r0]
    5964:	str	r1, [r3]
    5968:	cmp	r2, #0
    596c:	bne	5948 <sf_gen_proto_abbrev+0x118>
    5970:	ldr	r0, [r5, #44]	; 0x2c
    5974:	clz	r0, r0
    5978:	cmp	r4, #0
    597c:	lsr	r0, r0, #5
    5980:	str	r0, [r5, #44]	; 0x2c
    5984:	str	r4, [sp, #4]
    5988:	beq	6348 <sf_gen_proto_abbrev+0xb18>
    598c:	mov	r1, r4
    5990:	ldr	r2, [r1, #44]	; 0x2c
    5994:	add	r0, r1, #84	; 0x54
    5998:	cmp	r2, #0
    599c:	mov	r2, #84	; 0x54
    59a0:	movweq	r2, #60	; 0x3c
    59a4:	addeq	r0, r1, #60	; 0x3c
    59a8:	ldr	r1, [r1, r2]
    59ac:	cmp	r1, #0
    59b0:	bne	5990 <sf_gen_proto_abbrev+0x160>
    59b4:	b	634c <sf_gen_proto_abbrev+0xb1c>
    59b8:	mov	r0, #24
    59bc:	mov	r1, #26
    59c0:	mov	r2, #0
    59c4:	bl	69ec <gen_proto>
    59c8:	mov	r5, r0
    59cc:	mov	r0, #25
    59d0:	mov	r1, #26
    59d4:	mov	r2, #0
    59d8:	bl	69ec <gen_proto>
    59dc:	mov	r4, r0
    59e0:	ldr	r0, [r5, #44]	; 0x2c
    59e4:	cmp	r5, #0
    59e8:	clz	r0, r0
    59ec:	lsr	r0, r0, #5
    59f0:	str	r0, [r5, #44]	; 0x2c
    59f4:	beq	5a30 <sf_gen_proto_abbrev+0x200>
    59f8:	ldr	r1, [r4, #96]	; 0x60
    59fc:	mov	r2, r5
    5a00:	b	5a08 <sf_gen_proto_abbrev+0x1d8>
    5a04:	ldr	r0, [r2, #44]	; 0x2c
    5a08:	cmp	r0, #0
    5a0c:	mov	r0, #84	; 0x54
    5a10:	add	r3, r2, #84	; 0x54
    5a14:	movweq	r0, #60	; 0x3c
    5a18:	addeq	r3, r2, #60	; 0x3c
    5a1c:	ldr	r2, [r2, r0]
    5a20:	str	r1, [r3]
    5a24:	cmp	r2, #0
    5a28:	bne	5a04 <sf_gen_proto_abbrev+0x1d4>
    5a2c:	ldr	r0, [r5, #44]	; 0x2c
    5a30:	clz	r0, r0
    5a34:	cmp	r4, #0
    5a38:	lsr	r0, r0, #5
    5a3c:	str	r0, [r5, #44]	; 0x2c
    5a40:	str	r4, [sp, #4]
    5a44:	beq	6348 <sf_gen_proto_abbrev+0xb18>
    5a48:	mov	r1, r4
    5a4c:	ldr	r2, [r1, #44]	; 0x2c
    5a50:	add	r0, r1, #84	; 0x54
    5a54:	cmp	r2, #0
    5a58:	mov	r2, #84	; 0x54
    5a5c:	movweq	r2, #60	; 0x3c
    5a60:	addeq	r0, r1, #60	; 0x3c
    5a64:	ldr	r1, [r1, r2]
    5a68:	cmp	r1, #0
    5a6c:	bne	5a4c <sf_gen_proto_abbrev+0x21c>
    5a70:	b	634c <sf_gen_proto_abbrev+0xb1c>
    5a74:	movw	r0, #24579	; 0x6003
    5a78:	b	6280 <sf_gen_proto_abbrev+0xa50>
    5a7c:	movw	r0, #34525	; 0x86dd
    5a80:	b	6280 <sf_gen_proto_abbrev+0xa50>
    5a84:	mov	r0, #131	; 0x83
    5a88:	mov	r1, #24
    5a8c:	b	5f30 <sf_gen_proto_abbrev+0x700>
    5a90:	mov	r0, #129	; 0x81
    5a94:	mov	r1, #24
    5a98:	b	5f30 <sf_gen_proto_abbrev+0x700>
    5a9c:	movw	r0, #2054	; 0x806
    5aa0:	b	6280 <sf_gen_proto_abbrev+0xa50>
    5aa4:	movw	r0, #32821	; 0x8035
    5aa8:	b	6280 <sf_gen_proto_abbrev+0xa50>
    5aac:	mov	r0, #6
    5ab0:	mov	r1, #2
    5ab4:	mov	r2, #0
    5ab8:	bl	69ec <gen_proto>
    5abc:	mov	r4, r0
    5ac0:	mov	r0, #6
    5ac4:	mov	r1, #17
    5ac8:	mov	r2, #0
    5acc:	bl	69ec <gen_proto>
    5ad0:	ldr	r1, [r0, #44]	; 0x2c
    5ad4:	cmp	r0, #0
    5ad8:	clz	r1, r1
    5adc:	lsr	r1, r1, #5
    5ae0:	str	r1, [r0, #44]	; 0x2c
    5ae4:	beq	5b20 <sf_gen_proto_abbrev+0x2f0>
    5ae8:	ldr	r2, [r4, #96]	; 0x60
    5aec:	mov	r3, r0
    5af0:	b	5af8 <sf_gen_proto_abbrev+0x2c8>
    5af4:	ldr	r1, [r3, #44]	; 0x2c
    5af8:	cmp	r1, #0
    5afc:	mov	r1, #84	; 0x54
    5b00:	add	r5, r3, #84	; 0x54
    5b04:	movweq	r1, #60	; 0x3c
    5b08:	addeq	r5, r3, #60	; 0x3c
    5b0c:	ldr	r3, [r3, r1]
    5b10:	str	r2, [r5]
    5b14:	cmp	r3, #0
    5b18:	bne	5af4 <sf_gen_proto_abbrev+0x2c4>
    5b1c:	ldr	r1, [r0, #44]	; 0x2c
    5b20:	clz	r1, r1
    5b24:	cmp	r4, #0
    5b28:	lsr	r1, r1, #5
    5b2c:	str	r1, [r0, #44]	; 0x2c
    5b30:	str	r4, [sp, #4]
    5b34:	beq	69ac <sf_gen_proto_abbrev+0x117c>
    5b38:	mov	r2, r4
    5b3c:	ldr	r3, [r2, #44]	; 0x2c
    5b40:	add	r1, r2, #84	; 0x54
    5b44:	cmp	r3, #0
    5b48:	mov	r3, #84	; 0x54
    5b4c:	movweq	r3, #60	; 0x3c
    5b50:	addeq	r1, r2, #60	; 0x3c
    5b54:	ldr	r2, [r2, r3]
    5b58:	cmp	r2, #0
    5b5c:	bne	5b3c <sf_gen_proto_abbrev+0x30c>
    5b60:	b	69b0 <sf_gen_proto_abbrev+0x1180>
    5b64:	mov	r0, #1
    5b68:	b	5f2c <sf_gen_proto_abbrev+0x6fc>
    5b6c:	mov	r0, #2
    5b70:	b	5f2c <sf_gen_proto_abbrev+0x6fc>
    5b74:	movw	r0, #24578	; 0x6002
    5b78:	b	6280 <sf_gen_proto_abbrev+0xa50>
    5b7c:	mov	r0, #51	; 0x33
    5b80:	mov	r1, #2
    5b84:	mov	r2, #0
    5b88:	bl	69ec <gen_proto>
    5b8c:	mov	r4, r0
    5b90:	mov	r0, #51	; 0x33
    5b94:	mov	r1, #17
    5b98:	mov	r2, #0
    5b9c:	bl	69ec <gen_proto>
    5ba0:	ldr	r1, [r0, #44]	; 0x2c
    5ba4:	cmp	r0, #0
    5ba8:	clz	r1, r1
    5bac:	lsr	r1, r1, #5
    5bb0:	str	r1, [r0, #44]	; 0x2c
    5bb4:	beq	5bf0 <sf_gen_proto_abbrev+0x3c0>
    5bb8:	ldr	r2, [r4, #96]	; 0x60
    5bbc:	mov	r3, r0
    5bc0:	b	5bc8 <sf_gen_proto_abbrev+0x398>
    5bc4:	ldr	r1, [r3, #44]	; 0x2c
    5bc8:	cmp	r1, #0
    5bcc:	mov	r1, #84	; 0x54
    5bd0:	add	r5, r3, #84	; 0x54
    5bd4:	movweq	r1, #60	; 0x3c
    5bd8:	addeq	r5, r3, #60	; 0x3c
    5bdc:	ldr	r3, [r3, r1]
    5be0:	str	r2, [r5]
    5be4:	cmp	r3, #0
    5be8:	bne	5bc4 <sf_gen_proto_abbrev+0x394>
    5bec:	ldr	r1, [r0, #44]	; 0x2c
    5bf0:	clz	r1, r1
    5bf4:	cmp	r4, #0
    5bf8:	lsr	r1, r1, #5
    5bfc:	str	r1, [r0, #44]	; 0x2c
    5c00:	str	r4, [sp, #4]
    5c04:	beq	69ac <sf_gen_proto_abbrev+0x117c>
    5c08:	mov	r2, r4
    5c0c:	ldr	r3, [r2, #44]	; 0x2c
    5c10:	add	r1, r2, #84	; 0x54
    5c14:	cmp	r3, #0
    5c18:	mov	r3, #84	; 0x54
    5c1c:	movweq	r3, #60	; 0x3c
    5c20:	addeq	r1, r2, #60	; 0x3c
    5c24:	ldr	r2, [r2, r3]
    5c28:	cmp	r2, #0
    5c2c:	bne	5c0c <sf_gen_proto_abbrev+0x3dc>
    5c30:	b	69b0 <sf_gen_proto_abbrev+0x1180>
    5c34:	mov	r0, #50	; 0x32
    5c38:	mov	r1, #2
    5c3c:	mov	r2, #0
    5c40:	bl	69ec <gen_proto>
    5c44:	mov	r4, r0
    5c48:	mov	r0, #50	; 0x32
    5c4c:	mov	r1, #17
    5c50:	mov	r2, #0
    5c54:	bl	69ec <gen_proto>
    5c58:	ldr	r1, [r0, #44]	; 0x2c
    5c5c:	cmp	r0, #0
    5c60:	clz	r1, r1
    5c64:	lsr	r1, r1, #5
    5c68:	str	r1, [r0, #44]	; 0x2c
    5c6c:	beq	5ca8 <sf_gen_proto_abbrev+0x478>
    5c70:	ldr	r2, [r4, #96]	; 0x60
    5c74:	mov	r3, r0
    5c78:	b	5c80 <sf_gen_proto_abbrev+0x450>
    5c7c:	ldr	r1, [r3, #44]	; 0x2c
    5c80:	cmp	r1, #0
    5c84:	mov	r1, #84	; 0x54
    5c88:	add	r5, r3, #84	; 0x54
    5c8c:	movweq	r1, #60	; 0x3c
    5c90:	addeq	r5, r3, #60	; 0x3c
    5c94:	ldr	r3, [r3, r1]
    5c98:	str	r2, [r5]
    5c9c:	cmp	r3, #0
    5ca0:	bne	5c7c <sf_gen_proto_abbrev+0x44c>
    5ca4:	ldr	r1, [r0, #44]	; 0x2c
    5ca8:	clz	r1, r1
    5cac:	cmp	r4, #0
    5cb0:	lsr	r1, r1, #5
    5cb4:	str	r1, [r0, #44]	; 0x2c
    5cb8:	str	r4, [sp, #4]
    5cbc:	beq	69ac <sf_gen_proto_abbrev+0x117c>
    5cc0:	mov	r2, r4
    5cc4:	ldr	r3, [r2, #44]	; 0x2c
    5cc8:	add	r1, r2, #84	; 0x54
    5ccc:	cmp	r3, #0
    5cd0:	mov	r3, #84	; 0x54
    5cd4:	movweq	r3, #60	; 0x3c
    5cd8:	addeq	r1, r2, #60	; 0x3c
    5cdc:	ldr	r2, [r2, r3]
    5ce0:	cmp	r2, #0
    5ce4:	bne	5cc4 <sf_gen_proto_abbrev+0x494>
    5ce8:	b	69b0 <sf_gen_proto_abbrev+0x1180>
    5cec:	mov	r0, #112	; 0x70
    5cf0:	b	5f2c <sf_gen_proto_abbrev+0x6fc>
    5cf4:	movw	r0, #33011	; 0x80f3
    5cf8:	b	6280 <sf_gen_proto_abbrev+0xa50>
    5cfc:	mov	r0, #15
    5d00:	mov	r1, #26
    5d04:	mov	r2, #0
    5d08:	bl	69ec <gen_proto>
    5d0c:	mov	r5, r0
    5d10:	mov	r0, #16
    5d14:	mov	r1, #26
    5d18:	mov	r2, #0
    5d1c:	bl	69ec <gen_proto>
    5d20:	mov	r4, r0
    5d24:	ldr	r0, [r5, #44]	; 0x2c
    5d28:	cmp	r5, #0
    5d2c:	clz	r0, r0
    5d30:	lsr	r0, r0, #5
    5d34:	str	r0, [r5, #44]	; 0x2c
    5d38:	beq	5d74 <sf_gen_proto_abbrev+0x544>
    5d3c:	ldr	r1, [r4, #96]	; 0x60
    5d40:	mov	r2, r5
    5d44:	b	5d4c <sf_gen_proto_abbrev+0x51c>
    5d48:	ldr	r0, [r2, #44]	; 0x2c
    5d4c:	cmp	r0, #0
    5d50:	mov	r0, #84	; 0x54
    5d54:	add	r3, r2, #84	; 0x54
    5d58:	movweq	r0, #60	; 0x3c
    5d5c:	addeq	r3, r2, #60	; 0x3c
    5d60:	ldr	r2, [r2, r0]
    5d64:	str	r1, [r3]
    5d68:	cmp	r2, #0
    5d6c:	bne	5d48 <sf_gen_proto_abbrev+0x518>
    5d70:	ldr	r0, [r5, #44]	; 0x2c
    5d74:	clz	r0, r0
    5d78:	cmp	r4, #0
    5d7c:	lsr	r0, r0, #5
    5d80:	str	r0, [r5, #44]	; 0x2c
    5d84:	str	r4, [sp, #4]
    5d88:	beq	6358 <sf_gen_proto_abbrev+0xb28>
    5d8c:	mov	r1, r4
    5d90:	ldr	r2, [r1, #44]	; 0x2c
    5d94:	add	r0, r1, #84	; 0x54
    5d98:	cmp	r2, #0
    5d9c:	mov	r2, #84	; 0x54
    5da0:	movweq	r2, #60	; 0x3c
    5da4:	addeq	r0, r1, #60	; 0x3c
    5da8:	ldr	r1, [r1, r2]
    5dac:	cmp	r1, #0
    5db0:	bne	5d90 <sf_gen_proto_abbrev+0x560>
    5db4:	b	635c <sf_gen_proto_abbrev+0xb2c>
    5db8:	mov	r0, #132	; 0x84
    5dbc:	mov	r1, #2
    5dc0:	mov	r2, #0
    5dc4:	bl	69ec <gen_proto>
    5dc8:	mov	r4, r0
    5dcc:	mov	r0, #132	; 0x84
    5dd0:	mov	r1, #17
    5dd4:	mov	r2, #0
    5dd8:	bl	69ec <gen_proto>
    5ddc:	ldr	r1, [r0, #44]	; 0x2c
    5de0:	cmp	r0, #0
    5de4:	clz	r1, r1
    5de8:	lsr	r1, r1, #5
    5dec:	str	r1, [r0, #44]	; 0x2c
    5df0:	beq	5e2c <sf_gen_proto_abbrev+0x5fc>
    5df4:	ldr	r2, [r4, #96]	; 0x60
    5df8:	mov	r3, r0
    5dfc:	b	5e04 <sf_gen_proto_abbrev+0x5d4>
    5e00:	ldr	r1, [r3, #44]	; 0x2c
    5e04:	cmp	r1, #0
    5e08:	mov	r1, #84	; 0x54
    5e0c:	add	r5, r3, #84	; 0x54
    5e10:	movweq	r1, #60	; 0x3c
    5e14:	addeq	r5, r3, #60	; 0x3c
    5e18:	ldr	r3, [r3, r1]
    5e1c:	str	r2, [r5]
    5e20:	cmp	r3, #0
    5e24:	bne	5e00 <sf_gen_proto_abbrev+0x5d0>
    5e28:	ldr	r1, [r0, #44]	; 0x2c
    5e2c:	clz	r1, r1
    5e30:	cmp	r4, #0
    5e34:	lsr	r1, r1, #5
    5e38:	str	r1, [r0, #44]	; 0x2c
    5e3c:	str	r4, [sp, #4]
    5e40:	beq	69ac <sf_gen_proto_abbrev+0x117c>
    5e44:	mov	r2, r4
    5e48:	ldr	r3, [r2, #44]	; 0x2c
    5e4c:	add	r1, r2, #84	; 0x54
    5e50:	cmp	r3, #0
    5e54:	mov	r3, #84	; 0x54
    5e58:	movweq	r3, #60	; 0x3c
    5e5c:	addeq	r1, r2, #60	; 0x3c
    5e60:	ldr	r2, [r2, r3]
    5e64:	cmp	r2, #0
    5e68:	bne	5e48 <sf_gen_proto_abbrev+0x618>
    5e6c:	b	69b0 <sf_gen_proto_abbrev+0x1180>
    5e70:	mov	r0, #17
    5e74:	mov	r1, #2
    5e78:	mov	r2, #0
    5e7c:	bl	69ec <gen_proto>
    5e80:	mov	r4, r0
    5e84:	mov	r0, #17
    5e88:	mov	r1, #17
    5e8c:	mov	r2, #0
    5e90:	bl	69ec <gen_proto>
    5e94:	ldr	r1, [r0, #44]	; 0x2c
    5e98:	cmp	r0, #0
    5e9c:	clz	r1, r1
    5ea0:	lsr	r1, r1, #5
    5ea4:	str	r1, [r0, #44]	; 0x2c
    5ea8:	beq	5ee4 <sf_gen_proto_abbrev+0x6b4>
    5eac:	ldr	r2, [r4, #96]	; 0x60
    5eb0:	mov	r3, r0
    5eb4:	b	5ebc <sf_gen_proto_abbrev+0x68c>
    5eb8:	ldr	r1, [r3, #44]	; 0x2c
    5ebc:	cmp	r1, #0
    5ec0:	mov	r1, #84	; 0x54
    5ec4:	add	r5, r3, #84	; 0x54
    5ec8:	movweq	r1, #60	; 0x3c
    5ecc:	addeq	r5, r3, #60	; 0x3c
    5ed0:	ldr	r3, [r3, r1]
    5ed4:	str	r2, [r5]
    5ed8:	cmp	r3, #0
    5edc:	bne	5eb8 <sf_gen_proto_abbrev+0x688>
    5ee0:	ldr	r1, [r0, #44]	; 0x2c
    5ee4:	clz	r1, r1
    5ee8:	cmp	r4, #0
    5eec:	lsr	r1, r1, #5
    5ef0:	str	r1, [r0, #44]	; 0x2c
    5ef4:	str	r4, [sp, #4]
    5ef8:	beq	69ac <sf_gen_proto_abbrev+0x117c>
    5efc:	mov	r2, r4
    5f00:	ldr	r3, [r2, #44]	; 0x2c
    5f04:	add	r1, r2, #84	; 0x54
    5f08:	cmp	r3, #0
    5f0c:	mov	r3, #84	; 0x54
    5f10:	movweq	r3, #60	; 0x3c
    5f14:	addeq	r1, r2, #60	; 0x3c
    5f18:	ldr	r2, [r2, r3]
    5f1c:	cmp	r2, #0
    5f20:	bne	5f00 <sf_gen_proto_abbrev+0x6d0>
    5f24:	b	69b0 <sf_gen_proto_abbrev+0x1180>
    5f28:	mov	r0, #9
    5f2c:	mov	r1, #2
    5f30:	mov	r2, #0
    5f34:	sub	sp, fp, #8
    5f38:	pop	{r4, r5, fp, lr}
    5f3c:	b	69ec <gen_proto>
    5f40:	movw	r0, #32923	; 0x809b
    5f44:	b	6280 <sf_gen_proto_abbrev+0xa50>
    5f48:	movw	r0, #24580	; 0x6004
    5f4c:	b	6280 <sf_gen_proto_abbrev+0xa50>
    5f50:	movw	r0, #24577	; 0x6001
    5f54:	b	6280 <sf_gen_proto_abbrev+0xa50>
    5f58:	mov	r0, #254	; 0xfe
    5f5c:	b	6280 <sf_gen_proto_abbrev+0xa50>
    5f60:	mov	r0, #16
    5f64:	mov	r1, #26
    5f68:	mov	r2, #0
    5f6c:	bl	69ec <gen_proto>
    5f70:	mov	r5, r0
    5f74:	mov	r0, #17
    5f78:	mov	r1, #26
    5f7c:	mov	r2, #0
    5f80:	bl	69ec <gen_proto>
    5f84:	mov	r4, r0
    5f88:	ldr	r0, [r5, #44]	; 0x2c
    5f8c:	cmp	r5, #0
    5f90:	clz	r0, r0
    5f94:	lsr	r0, r0, #5
    5f98:	str	r0, [r5, #44]	; 0x2c
    5f9c:	beq	5fd8 <sf_gen_proto_abbrev+0x7a8>
    5fa0:	ldr	r1, [r4, #96]	; 0x60
    5fa4:	mov	r2, r5
    5fa8:	b	5fb0 <sf_gen_proto_abbrev+0x780>
    5fac:	ldr	r0, [r2, #44]	; 0x2c
    5fb0:	cmp	r0, #0
    5fb4:	mov	r0, #84	; 0x54
    5fb8:	add	r3, r2, #84	; 0x54
    5fbc:	movweq	r0, #60	; 0x3c
    5fc0:	addeq	r3, r2, #60	; 0x3c
    5fc4:	ldr	r2, [r2, r0]
    5fc8:	str	r1, [r3]
    5fcc:	cmp	r2, #0
    5fd0:	bne	5fac <sf_gen_proto_abbrev+0x77c>
    5fd4:	ldr	r0, [r5, #44]	; 0x2c
    5fd8:	clz	r0, r0
    5fdc:	cmp	r4, #0
    5fe0:	lsr	r0, r0, #5
    5fe4:	str	r0, [r5, #44]	; 0x2c
    5fe8:	str	r4, [sp, #4]
    5fec:	beq	640c <sf_gen_proto_abbrev+0xbdc>
    5ff0:	mov	r1, r4
    5ff4:	ldr	r2, [r1, #44]	; 0x2c
    5ff8:	add	r0, r1, #84	; 0x54
    5ffc:	cmp	r2, #0
    6000:	mov	r2, #84	; 0x54
    6004:	movweq	r2, #60	; 0x3c
    6008:	addeq	r0, r1, #60	; 0x3c
    600c:	ldr	r1, [r1, r2]
    6010:	cmp	r1, #0
    6014:	bne	5ff4 <sf_gen_proto_abbrev+0x7c4>
    6018:	b	6410 <sf_gen_proto_abbrev+0xbe0>
    601c:	mov	r0, #24
    6020:	mov	r1, #26
    6024:	mov	r2, #0
    6028:	bl	69ec <gen_proto>
    602c:	mov	r5, r0
    6030:	mov	r0, #25
    6034:	mov	r1, #26
    6038:	mov	r2, #0
    603c:	bl	69ec <gen_proto>
    6040:	mov	r4, r0
    6044:	ldr	r0, [r5, #44]	; 0x2c
    6048:	cmp	r5, #0
    604c:	clz	r0, r0
    6050:	lsr	r0, r0, #5
    6054:	str	r0, [r5, #44]	; 0x2c
    6058:	beq	6094 <sf_gen_proto_abbrev+0x864>
    605c:	ldr	r1, [r4, #96]	; 0x60
    6060:	mov	r2, r5
    6064:	b	606c <sf_gen_proto_abbrev+0x83c>
    6068:	ldr	r0, [r2, #44]	; 0x2c
    606c:	cmp	r0, #0
    6070:	mov	r0, #84	; 0x54
    6074:	add	r3, r2, #84	; 0x54
    6078:	movweq	r0, #60	; 0x3c
    607c:	addeq	r3, r2, #60	; 0x3c
    6080:	ldr	r2, [r2, r0]
    6084:	str	r1, [r3]
    6088:	cmp	r2, #0
    608c:	bne	6068 <sf_gen_proto_abbrev+0x838>
    6090:	ldr	r0, [r5, #44]	; 0x2c
    6094:	clz	r0, r0
    6098:	cmp	r4, #0
    609c:	lsr	r0, r0, #5
    60a0:	str	r0, [r5, #44]	; 0x2c
    60a4:	str	r4, [sp, #4]
    60a8:	beq	64c0 <sf_gen_proto_abbrev+0xc90>
    60ac:	mov	r1, r4
    60b0:	ldr	r2, [r1, #44]	; 0x2c
    60b4:	add	r0, r1, #84	; 0x54
    60b8:	cmp	r2, #0
    60bc:	mov	r2, #84	; 0x54
    60c0:	movweq	r2, #60	; 0x3c
    60c4:	addeq	r0, r1, #60	; 0x3c
    60c8:	ldr	r1, [r1, r2]
    60cc:	cmp	r1, #0
    60d0:	bne	60b0 <sf_gen_proto_abbrev+0x880>
    60d4:	b	64c4 <sf_gen_proto_abbrev+0xc94>
    60d8:	movw	r0, #24583	; 0x6007
    60dc:	b	6280 <sf_gen_proto_abbrev+0xa50>
    60e0:	mov	r0, #58	; 0x3a
    60e4:	mov	r1, #17
    60e8:	b	5f30 <sf_gen_proto_abbrev+0x700>
    60ec:	mov	r0, #103	; 0x67
    60f0:	mov	r1, #2
    60f4:	mov	r2, #0
    60f8:	bl	69ec <gen_proto>
    60fc:	mov	r4, r0
    6100:	mov	r0, #103	; 0x67
    6104:	mov	r1, #17
    6108:	mov	r2, #0
    610c:	bl	69ec <gen_proto>
    6110:	ldr	r1, [r0, #44]	; 0x2c
    6114:	cmp	r0, #0
    6118:	clz	r1, r1
    611c:	lsr	r1, r1, #5
    6120:	str	r1, [r0, #44]	; 0x2c
    6124:	beq	6160 <sf_gen_proto_abbrev+0x930>
    6128:	ldr	r2, [r4, #96]	; 0x60
    612c:	mov	r3, r0
    6130:	b	6138 <sf_gen_proto_abbrev+0x908>
    6134:	ldr	r1, [r3, #44]	; 0x2c
    6138:	cmp	r1, #0
    613c:	mov	r1, #84	; 0x54
    6140:	add	r5, r3, #84	; 0x54
    6144:	movweq	r1, #60	; 0x3c
    6148:	addeq	r5, r3, #60	; 0x3c
    614c:	ldr	r3, [r3, r1]
    6150:	str	r2, [r5]
    6154:	cmp	r3, #0
    6158:	bne	6134 <sf_gen_proto_abbrev+0x904>
    615c:	ldr	r1, [r0, #44]	; 0x2c
    6160:	clz	r1, r1
    6164:	cmp	r4, #0
    6168:	lsr	r1, r1, #5
    616c:	str	r1, [r0, #44]	; 0x2c
    6170:	str	r4, [sp, #4]
    6174:	beq	69ac <sf_gen_proto_abbrev+0x117c>
    6178:	mov	r2, r4
    617c:	ldr	r3, [r2, #44]	; 0x2c
    6180:	add	r1, r2, #84	; 0x54
    6184:	cmp	r3, #0
    6188:	mov	r3, #84	; 0x54
    618c:	movweq	r3, #60	; 0x3c
    6190:	addeq	r1, r2, #60	; 0x3c
    6194:	ldr	r2, [r2, r3]
    6198:	cmp	r2, #0
    619c:	bne	617c <sf_gen_proto_abbrev+0x94c>
    61a0:	b	69b0 <sf_gen_proto_abbrev+0x1180>
    61a4:	mov	r0, #130	; 0x82
    61a8:	mov	r1, #24
    61ac:	b	5f30 <sf_gen_proto_abbrev+0x700>
    61b0:	mov	r0, #66	; 0x42
    61b4:	b	6280 <sf_gen_proto_abbrev+0xa50>
    61b8:	mov	r0, #240	; 0xf0
    61bc:	b	6280 <sf_gen_proto_abbrev+0xa50>
    61c0:	mov	r0, #15
    61c4:	mov	r1, #26
    61c8:	mov	r2, #0
    61cc:	bl	69ec <gen_proto>
    61d0:	mov	r5, r0
    61d4:	mov	r0, #17
    61d8:	mov	r1, #26
    61dc:	mov	r2, #0
    61e0:	bl	69ec <gen_proto>
    61e4:	mov	r4, r0
    61e8:	ldr	r0, [r5, #44]	; 0x2c
    61ec:	cmp	r5, #0
    61f0:	clz	r0, r0
    61f4:	lsr	r0, r0, #5
    61f8:	str	r0, [r5, #44]	; 0x2c
    61fc:	beq	6238 <sf_gen_proto_abbrev+0xa08>
    6200:	ldr	r1, [r4, #96]	; 0x60
    6204:	mov	r2, r5
    6208:	b	6210 <sf_gen_proto_abbrev+0x9e0>
    620c:	ldr	r0, [r2, #44]	; 0x2c
    6210:	cmp	r0, #0
    6214:	mov	r0, #84	; 0x54
    6218:	add	r3, r2, #84	; 0x54
    621c:	movweq	r0, #60	; 0x3c
    6220:	addeq	r3, r2, #60	; 0x3c
    6224:	ldr	r2, [r2, r0]
    6228:	str	r1, [r3]
    622c:	cmp	r2, #0
    6230:	bne	620c <sf_gen_proto_abbrev+0x9dc>
    6234:	ldr	r0, [r5, #44]	; 0x2c
    6238:	clz	r0, r0
    623c:	cmp	r4, #0
    6240:	lsr	r0, r0, #5
    6244:	str	r0, [r5, #44]	; 0x2c
    6248:	str	r4, [sp, #4]
    624c:	beq	6790 <sf_gen_proto_abbrev+0xf60>
    6250:	mov	r1, r4
    6254:	ldr	r2, [r1, #44]	; 0x2c
    6258:	add	r0, r1, #84	; 0x54
    625c:	cmp	r2, #0
    6260:	mov	r2, #84	; 0x54
    6264:	movweq	r2, #60	; 0x3c
    6268:	addeq	r0, r1, #60	; 0x3c
    626c:	ldr	r1, [r1, r2]
    6270:	cmp	r1, #0
    6274:	bne	6254 <sf_gen_proto_abbrev+0xa24>
    6278:	b	6794 <sf_gen_proto_abbrev+0xf64>
    627c:	mov	r0, #224	; 0xe0
    6280:	sub	sp, fp, #8
    6284:	pop	{r4, r5, fp, lr}
    6288:	b	7320 <gen_linktype>
    628c:	mov	r0, #18
    6290:	mov	r1, #26
    6294:	mov	r2, #0
    6298:	bl	69ec <gen_proto>
    629c:	mov	r5, r0
    62a0:	mov	r0, #20
    62a4:	mov	r1, #26
    62a8:	mov	r2, #0
    62ac:	bl	69ec <gen_proto>
    62b0:	mov	r4, r0
    62b4:	ldr	r0, [r5, #44]	; 0x2c
    62b8:	cmp	r5, #0
    62bc:	clz	r0, r0
    62c0:	lsr	r0, r0, #5
    62c4:	str	r0, [r5, #44]	; 0x2c
    62c8:	beq	6304 <sf_gen_proto_abbrev+0xad4>
    62cc:	ldr	r1, [r4, #96]	; 0x60
    62d0:	mov	r2, r5
    62d4:	b	62dc <sf_gen_proto_abbrev+0xaac>
    62d8:	ldr	r0, [r2, #44]	; 0x2c
    62dc:	cmp	r0, #0
    62e0:	mov	r0, #84	; 0x54
    62e4:	add	r3, r2, #84	; 0x54
    62e8:	movweq	r0, #60	; 0x3c
    62ec:	addeq	r3, r2, #60	; 0x3c
    62f0:	ldr	r2, [r2, r0]
    62f4:	str	r1, [r3]
    62f8:	cmp	r2, #0
    62fc:	bne	62d8 <sf_gen_proto_abbrev+0xaa8>
    6300:	ldr	r0, [r5, #44]	; 0x2c
    6304:	clz	r0, r0
    6308:	cmp	r4, #0
    630c:	lsr	r0, r0, #5
    6310:	str	r0, [r5, #44]	; 0x2c
    6314:	str	r4, [sp, #4]
    6318:	beq	6348 <sf_gen_proto_abbrev+0xb18>
    631c:	mov	r1, r4
    6320:	ldr	r2, [r1, #44]	; 0x2c
    6324:	add	r0, r1, #84	; 0x54
    6328:	cmp	r2, #0
    632c:	mov	r2, #84	; 0x54
    6330:	movweq	r2, #60	; 0x3c
    6334:	addeq	r0, r1, #60	; 0x3c
    6338:	ldr	r1, [r1, r2]
    633c:	cmp	r1, #0
    6340:	bne	6320 <sf_gen_proto_abbrev+0xaf0>
    6344:	b	634c <sf_gen_proto_abbrev+0xb1c>
    6348:	add	r0, sp, #4
    634c:	str	r5, [r0]
    6350:	ldr	r0, [r5, #96]	; 0x60
    6354:	b	69b8 <sf_gen_proto_abbrev+0x1188>
    6358:	add	r0, sp, #4
    635c:	str	r5, [r0]
    6360:	mov	r1, #26
    6364:	mov	r2, #0
    6368:	ldr	r0, [r5, #96]	; 0x60
    636c:	str	r0, [r4, #96]	; 0x60
    6370:	mov	r0, #17
    6374:	bl	69ec <gen_proto>
    6378:	ldr	r1, [r0, #44]	; 0x2c
    637c:	cmp	r0, #0
    6380:	clz	r1, r1
    6384:	lsr	r1, r1, #5
    6388:	str	r1, [r0, #44]	; 0x2c
    638c:	beq	63c8 <sf_gen_proto_abbrev+0xb98>
    6390:	ldr	r2, [r4, #96]	; 0x60
    6394:	mov	r3, r0
    6398:	b	63a0 <sf_gen_proto_abbrev+0xb70>
    639c:	ldr	r1, [r3, #44]	; 0x2c
    63a0:	cmp	r1, #0
    63a4:	mov	r1, #84	; 0x54
    63a8:	add	r5, r3, #84	; 0x54
    63ac:	movweq	r1, #60	; 0x3c
    63b0:	addeq	r5, r3, #60	; 0x3c
    63b4:	ldr	r3, [r3, r1]
    63b8:	str	r2, [r5]
    63bc:	cmp	r3, #0
    63c0:	bne	639c <sf_gen_proto_abbrev+0xb6c>
    63c4:	ldr	r1, [r0, #44]	; 0x2c
    63c8:	clz	r1, r1
    63cc:	cmp	r4, #0
    63d0:	lsr	r1, r1, #5
    63d4:	str	r1, [r0, #44]	; 0x2c
    63d8:	str	r4, [sp, #4]
    63dc:	beq	69ac <sf_gen_proto_abbrev+0x117c>
    63e0:	mov	r2, r4
    63e4:	ldr	r3, [r2, #44]	; 0x2c
    63e8:	add	r1, r2, #84	; 0x54
    63ec:	cmp	r3, #0
    63f0:	mov	r3, #84	; 0x54
    63f4:	movweq	r3, #60	; 0x3c
    63f8:	addeq	r1, r2, #60	; 0x3c
    63fc:	ldr	r2, [r2, r3]
    6400:	cmp	r2, #0
    6404:	bne	63e4 <sf_gen_proto_abbrev+0xbb4>
    6408:	b	69b0 <sf_gen_proto_abbrev+0x1180>
    640c:	add	r0, sp, #4
    6410:	str	r5, [r0]
    6414:	mov	r1, #26
    6418:	mov	r2, #0
    641c:	ldr	r0, [r5, #96]	; 0x60
    6420:	str	r0, [r4, #96]	; 0x60
    6424:	mov	r0, #20
    6428:	bl	69ec <gen_proto>
    642c:	ldr	r1, [r0, #44]	; 0x2c
    6430:	cmp	r0, #0
    6434:	clz	r1, r1
    6438:	lsr	r1, r1, #5
    643c:	str	r1, [r0, #44]	; 0x2c
    6440:	beq	647c <sf_gen_proto_abbrev+0xc4c>
    6444:	ldr	r2, [r4, #96]	; 0x60
    6448:	mov	r3, r0
    644c:	b	6454 <sf_gen_proto_abbrev+0xc24>
    6450:	ldr	r1, [r3, #44]	; 0x2c
    6454:	cmp	r1, #0
    6458:	mov	r1, #84	; 0x54
    645c:	add	r5, r3, #84	; 0x54
    6460:	movweq	r1, #60	; 0x3c
    6464:	addeq	r5, r3, #60	; 0x3c
    6468:	ldr	r3, [r3, r1]
    646c:	str	r2, [r5]
    6470:	cmp	r3, #0
    6474:	bne	6450 <sf_gen_proto_abbrev+0xc20>
    6478:	ldr	r1, [r0, #44]	; 0x2c
    647c:	clz	r1, r1
    6480:	cmp	r4, #0
    6484:	lsr	r1, r1, #5
    6488:	str	r1, [r0, #44]	; 0x2c
    648c:	str	r4, [sp, #4]
    6490:	beq	6574 <sf_gen_proto_abbrev+0xd44>
    6494:	mov	r2, r4
    6498:	ldr	r3, [r2, #44]	; 0x2c
    649c:	add	r1, r2, #84	; 0x54
    64a0:	cmp	r3, #0
    64a4:	mov	r3, #84	; 0x54
    64a8:	movweq	r3, #60	; 0x3c
    64ac:	addeq	r1, r2, #60	; 0x3c
    64b0:	ldr	r2, [r2, r3]
    64b4:	cmp	r2, #0
    64b8:	bne	6498 <sf_gen_proto_abbrev+0xc68>
    64bc:	b	6578 <sf_gen_proto_abbrev+0xd48>
    64c0:	add	r0, sp, #4
    64c4:	str	r5, [r0]
    64c8:	mov	r1, #26
    64cc:	mov	r2, #0
    64d0:	ldr	r0, [r5, #96]	; 0x60
    64d4:	str	r0, [r4, #96]	; 0x60
    64d8:	mov	r0, #26
    64dc:	bl	69ec <gen_proto>
    64e0:	ldr	r1, [r0, #44]	; 0x2c
    64e4:	cmp	r0, #0
    64e8:	clz	r1, r1
    64ec:	lsr	r1, r1, #5
    64f0:	str	r1, [r0, #44]	; 0x2c
    64f4:	beq	6530 <sf_gen_proto_abbrev+0xd00>
    64f8:	ldr	r2, [r4, #96]	; 0x60
    64fc:	mov	r3, r0
    6500:	b	6508 <sf_gen_proto_abbrev+0xcd8>
    6504:	ldr	r1, [r3, #44]	; 0x2c
    6508:	cmp	r1, #0
    650c:	mov	r1, #84	; 0x54
    6510:	add	r5, r3, #84	; 0x54
    6514:	movweq	r1, #60	; 0x3c
    6518:	addeq	r5, r3, #60	; 0x3c
    651c:	ldr	r3, [r3, r1]
    6520:	str	r2, [r5]
    6524:	cmp	r3, #0
    6528:	bne	6504 <sf_gen_proto_abbrev+0xcd4>
    652c:	ldr	r1, [r0, #44]	; 0x2c
    6530:	clz	r1, r1
    6534:	cmp	r4, #0
    6538:	lsr	r1, r1, #5
    653c:	str	r1, [r0, #44]	; 0x2c
    6540:	str	r4, [sp, #4]
    6544:	beq	6628 <sf_gen_proto_abbrev+0xdf8>
    6548:	mov	r2, r4
    654c:	ldr	r3, [r2, #44]	; 0x2c
    6550:	add	r1, r2, #84	; 0x54
    6554:	cmp	r3, #0
    6558:	mov	r3, #84	; 0x54
    655c:	movweq	r3, #60	; 0x3c
    6560:	addeq	r1, r2, #60	; 0x3c
    6564:	ldr	r2, [r2, r3]
    6568:	cmp	r2, #0
    656c:	bne	654c <sf_gen_proto_abbrev+0xd1c>
    6570:	b	662c <sf_gen_proto_abbrev+0xdfc>
    6574:	add	r1, sp, #4
    6578:	str	r0, [r1]
    657c:	mov	r1, #26
    6580:	mov	r2, #0
    6584:	ldr	r0, [r0, #96]	; 0x60
    6588:	str	r0, [r4, #96]	; 0x60
    658c:	mov	r0, #25
    6590:	bl	69ec <gen_proto>
    6594:	ldr	r1, [r0, #44]	; 0x2c
    6598:	cmp	r0, #0
    659c:	clz	r1, r1
    65a0:	lsr	r1, r1, #5
    65a4:	str	r1, [r0, #44]	; 0x2c
    65a8:	beq	65e4 <sf_gen_proto_abbrev+0xdb4>
    65ac:	ldr	r2, [r4, #96]	; 0x60
    65b0:	mov	r3, r0
    65b4:	b	65bc <sf_gen_proto_abbrev+0xd8c>
    65b8:	ldr	r1, [r3, #44]	; 0x2c
    65bc:	cmp	r1, #0
    65c0:	mov	r1, #84	; 0x54
    65c4:	add	r5, r3, #84	; 0x54
    65c8:	movweq	r1, #60	; 0x3c
    65cc:	addeq	r5, r3, #60	; 0x3c
    65d0:	ldr	r3, [r3, r1]
    65d4:	str	r2, [r5]
    65d8:	cmp	r3, #0
    65dc:	bne	65b8 <sf_gen_proto_abbrev+0xd88>
    65e0:	ldr	r1, [r0, #44]	; 0x2c
    65e4:	clz	r1, r1
    65e8:	cmp	r4, #0
    65ec:	lsr	r1, r1, #5
    65f0:	str	r1, [r0, #44]	; 0x2c
    65f4:	str	r4, [sp, #4]
    65f8:	beq	66dc <sf_gen_proto_abbrev+0xeac>
    65fc:	mov	r2, r4
    6600:	ldr	r3, [r2, #44]	; 0x2c
    6604:	add	r1, r2, #84	; 0x54
    6608:	cmp	r3, #0
    660c:	mov	r3, #84	; 0x54
    6610:	movweq	r3, #60	; 0x3c
    6614:	addeq	r1, r2, #60	; 0x3c
    6618:	ldr	r2, [r2, r3]
    661c:	cmp	r2, #0
    6620:	bne	6600 <sf_gen_proto_abbrev+0xdd0>
    6624:	b	66e0 <sf_gen_proto_abbrev+0xeb0>
    6628:	add	r1, sp, #4
    662c:	str	r0, [r1]
    6630:	mov	r1, #26
    6634:	mov	r2, #0
    6638:	ldr	r0, [r0, #96]	; 0x60
    663c:	str	r0, [r4, #96]	; 0x60
    6640:	mov	r0, #27
    6644:	bl	69ec <gen_proto>
    6648:	ldr	r1, [r0, #44]	; 0x2c
    664c:	cmp	r0, #0
    6650:	clz	r1, r1
    6654:	lsr	r1, r1, #5
    6658:	str	r1, [r0, #44]	; 0x2c
    665c:	beq	6698 <sf_gen_proto_abbrev+0xe68>
    6660:	ldr	r2, [r4, #96]	; 0x60
    6664:	mov	r3, r0
    6668:	b	6670 <sf_gen_proto_abbrev+0xe40>
    666c:	ldr	r1, [r3, #44]	; 0x2c
    6670:	cmp	r1, #0
    6674:	mov	r1, #84	; 0x54
    6678:	add	r5, r3, #84	; 0x54
    667c:	movweq	r1, #60	; 0x3c
    6680:	addeq	r5, r3, #60	; 0x3c
    6684:	ldr	r3, [r3, r1]
    6688:	str	r2, [r5]
    668c:	cmp	r3, #0
    6690:	bne	666c <sf_gen_proto_abbrev+0xe3c>
    6694:	ldr	r1, [r0, #44]	; 0x2c
    6698:	clz	r1, r1
    669c:	cmp	r4, #0
    66a0:	lsr	r1, r1, #5
    66a4:	str	r1, [r0, #44]	; 0x2c
    66a8:	str	r4, [sp, #4]
    66ac:	beq	69ac <sf_gen_proto_abbrev+0x117c>
    66b0:	mov	r2, r4
    66b4:	ldr	r3, [r2, #44]	; 0x2c
    66b8:	add	r1, r2, #84	; 0x54
    66bc:	cmp	r3, #0
    66c0:	mov	r3, #84	; 0x54
    66c4:	movweq	r3, #60	; 0x3c
    66c8:	addeq	r1, r2, #60	; 0x3c
    66cc:	ldr	r2, [r2, r3]
    66d0:	cmp	r2, #0
    66d4:	bne	66b4 <sf_gen_proto_abbrev+0xe84>
    66d8:	b	69b0 <sf_gen_proto_abbrev+0x1180>
    66dc:	add	r1, sp, #4
    66e0:	str	r0, [r1]
    66e4:	mov	r1, #26
    66e8:	mov	r2, #0
    66ec:	ldr	r0, [r0, #96]	; 0x60
    66f0:	str	r0, [r4, #96]	; 0x60
    66f4:	mov	r0, #27
    66f8:	bl	69ec <gen_proto>
    66fc:	ldr	r1, [r0, #44]	; 0x2c
    6700:	cmp	r0, #0
    6704:	clz	r1, r1
    6708:	lsr	r1, r1, #5
    670c:	str	r1, [r0, #44]	; 0x2c
    6710:	beq	674c <sf_gen_proto_abbrev+0xf1c>
    6714:	ldr	r2, [r4, #96]	; 0x60
    6718:	mov	r3, r0
    671c:	b	6724 <sf_gen_proto_abbrev+0xef4>
    6720:	ldr	r1, [r3, #44]	; 0x2c
    6724:	cmp	r1, #0
    6728:	mov	r1, #84	; 0x54
    672c:	add	r5, r3, #84	; 0x54
    6730:	movweq	r1, #60	; 0x3c
    6734:	addeq	r5, r3, #60	; 0x3c
    6738:	ldr	r3, [r3, r1]
    673c:	str	r2, [r5]
    6740:	cmp	r3, #0
    6744:	bne	6720 <sf_gen_proto_abbrev+0xef0>
    6748:	ldr	r1, [r0, #44]	; 0x2c
    674c:	clz	r1, r1
    6750:	cmp	r4, #0
    6754:	lsr	r1, r1, #5
    6758:	str	r1, [r0, #44]	; 0x2c
    675c:	str	r4, [sp, #4]
    6760:	beq	69ac <sf_gen_proto_abbrev+0x117c>
    6764:	mov	r2, r4
    6768:	ldr	r3, [r2, #44]	; 0x2c
    676c:	add	r1, r2, #84	; 0x54
    6770:	cmp	r3, #0
    6774:	mov	r3, #84	; 0x54
    6778:	movweq	r3, #60	; 0x3c
    677c:	addeq	r1, r2, #60	; 0x3c
    6780:	ldr	r2, [r2, r3]
    6784:	cmp	r2, #0
    6788:	bne	6768 <sf_gen_proto_abbrev+0xf38>
    678c:	b	69b0 <sf_gen_proto_abbrev+0x1180>
    6790:	add	r0, sp, #4
    6794:	str	r5, [r0]
    6798:	mov	r1, #26
    679c:	mov	r2, #0
    67a0:	ldr	r0, [r5, #96]	; 0x60
    67a4:	str	r0, [r4, #96]	; 0x60
    67a8:	mov	r0, #18
    67ac:	bl	69ec <gen_proto>
    67b0:	ldr	r1, [r0, #44]	; 0x2c
    67b4:	cmp	r0, #0
    67b8:	clz	r1, r1
    67bc:	lsr	r1, r1, #5
    67c0:	str	r1, [r0, #44]	; 0x2c
    67c4:	beq	6800 <sf_gen_proto_abbrev+0xfd0>
    67c8:	ldr	r2, [r4, #96]	; 0x60
    67cc:	mov	r3, r0
    67d0:	b	67d8 <sf_gen_proto_abbrev+0xfa8>
    67d4:	ldr	r1, [r3, #44]	; 0x2c
    67d8:	cmp	r1, #0
    67dc:	mov	r1, #84	; 0x54
    67e0:	add	r5, r3, #84	; 0x54
    67e4:	movweq	r1, #60	; 0x3c
    67e8:	addeq	r5, r3, #60	; 0x3c
    67ec:	ldr	r3, [r3, r1]
    67f0:	str	r2, [r5]
    67f4:	cmp	r3, #0
    67f8:	bne	67d4 <sf_gen_proto_abbrev+0xfa4>
    67fc:	ldr	r1, [r0, #44]	; 0x2c
    6800:	clz	r1, r1
    6804:	cmp	r4, #0
    6808:	lsr	r1, r1, #5
    680c:	str	r1, [r0, #44]	; 0x2c
    6810:	str	r4, [sp, #4]
    6814:	beq	6844 <sf_gen_proto_abbrev+0x1014>
    6818:	mov	r2, r4
    681c:	ldr	r3, [r2, #44]	; 0x2c
    6820:	add	r1, r2, #84	; 0x54
    6824:	cmp	r3, #0
    6828:	mov	r3, #84	; 0x54
    682c:	movweq	r3, #60	; 0x3c
    6830:	addeq	r1, r2, #60	; 0x3c
    6834:	ldr	r2, [r2, r3]
    6838:	cmp	r2, #0
    683c:	bne	681c <sf_gen_proto_abbrev+0xfec>
    6840:	b	6848 <sf_gen_proto_abbrev+0x1018>
    6844:	add	r1, sp, #4
    6848:	str	r0, [r1]
    684c:	mov	r1, #26
    6850:	mov	r2, #0
    6854:	ldr	r0, [r0, #96]	; 0x60
    6858:	str	r0, [r4, #96]	; 0x60
    685c:	mov	r0, #24
    6860:	bl	69ec <gen_proto>
    6864:	ldr	r1, [r0, #44]	; 0x2c
    6868:	cmp	r0, #0
    686c:	clz	r1, r1
    6870:	lsr	r1, r1, #5
    6874:	str	r1, [r0, #44]	; 0x2c
    6878:	beq	68b4 <sf_gen_proto_abbrev+0x1084>
    687c:	ldr	r2, [r4, #96]	; 0x60
    6880:	mov	r3, r0
    6884:	b	688c <sf_gen_proto_abbrev+0x105c>
    6888:	ldr	r1, [r3, #44]	; 0x2c
    688c:	cmp	r1, #0
    6890:	mov	r1, #84	; 0x54
    6894:	add	r5, r3, #84	; 0x54
    6898:	movweq	r1, #60	; 0x3c
    689c:	addeq	r5, r3, #60	; 0x3c
    68a0:	ldr	r3, [r3, r1]
    68a4:	str	r2, [r5]
    68a8:	cmp	r3, #0
    68ac:	bne	6888 <sf_gen_proto_abbrev+0x1058>
    68b0:	ldr	r1, [r0, #44]	; 0x2c
    68b4:	clz	r1, r1
    68b8:	cmp	r4, #0
    68bc:	lsr	r1, r1, #5
    68c0:	str	r1, [r0, #44]	; 0x2c
    68c4:	str	r4, [sp, #4]
    68c8:	beq	68f8 <sf_gen_proto_abbrev+0x10c8>
    68cc:	mov	r2, r4
    68d0:	ldr	r3, [r2, #44]	; 0x2c
    68d4:	add	r1, r2, #84	; 0x54
    68d8:	cmp	r3, #0
    68dc:	mov	r3, #84	; 0x54
    68e0:	movweq	r3, #60	; 0x3c
    68e4:	addeq	r1, r2, #60	; 0x3c
    68e8:	ldr	r2, [r2, r3]
    68ec:	cmp	r2, #0
    68f0:	bne	68d0 <sf_gen_proto_abbrev+0x10a0>
    68f4:	b	68fc <sf_gen_proto_abbrev+0x10cc>
    68f8:	add	r1, sp, #4
    68fc:	str	r0, [r1]
    6900:	mov	r1, #26
    6904:	mov	r2, #0
    6908:	ldr	r0, [r0, #96]	; 0x60
    690c:	str	r0, [r4, #96]	; 0x60
    6910:	mov	r0, #26
    6914:	bl	69ec <gen_proto>
    6918:	ldr	r1, [r0, #44]	; 0x2c
    691c:	cmp	r0, #0
    6920:	clz	r1, r1
    6924:	lsr	r1, r1, #5
    6928:	str	r1, [r0, #44]	; 0x2c
    692c:	beq	6968 <sf_gen_proto_abbrev+0x1138>
    6930:	ldr	r2, [r4, #96]	; 0x60
    6934:	mov	r3, r0
    6938:	b	6940 <sf_gen_proto_abbrev+0x1110>
    693c:	ldr	r1, [r3, #44]	; 0x2c
    6940:	cmp	r1, #0
    6944:	mov	r1, #84	; 0x54
    6948:	add	r5, r3, #84	; 0x54
    694c:	movweq	r1, #60	; 0x3c
    6950:	addeq	r5, r3, #60	; 0x3c
    6954:	ldr	r3, [r3, r1]
    6958:	str	r2, [r5]
    695c:	cmp	r3, #0
    6960:	bne	693c <sf_gen_proto_abbrev+0x110c>
    6964:	ldr	r1, [r0, #44]	; 0x2c
    6968:	clz	r1, r1
    696c:	cmp	r4, #0
    6970:	lsr	r1, r1, #5
    6974:	str	r1, [r0, #44]	; 0x2c
    6978:	str	r4, [sp, #4]
    697c:	beq	69ac <sf_gen_proto_abbrev+0x117c>
    6980:	mov	r2, r4
    6984:	ldr	r3, [r2, #44]	; 0x2c
    6988:	add	r1, r2, #84	; 0x54
    698c:	cmp	r3, #0
    6990:	mov	r3, #84	; 0x54
    6994:	movweq	r3, #60	; 0x3c
    6998:	addeq	r1, r2, #60	; 0x3c
    699c:	ldr	r2, [r2, r3]
    69a0:	cmp	r2, #0
    69a4:	bne	6984 <sf_gen_proto_abbrev+0x1154>
    69a8:	b	69b0 <sf_gen_proto_abbrev+0x1180>
    69ac:	add	r1, sp, #4
    69b0:	str	r0, [r1]
    69b4:	ldr	r0, [r0, #96]	; 0x60
    69b8:	str	r0, [r4, #96]	; 0x60
    69bc:	mov	r0, r4
    69c0:	sub	sp, fp, #8
    69c4:	pop	{r4, r5, fp, pc}
    69c8:	bl	fc4 <abort@plt>
    69cc:	ldr	r0, [pc, #16]	; 69e4 <sf_gen_proto_abbrev+0x11b4>
    69d0:	add	r0, pc, r0
    69d4:	bl	2124 <sf_bpf_error>
    69d8:	ldr	r0, [pc, #8]	; 69e8 <sf_gen_proto_abbrev+0x11b8>
    69dc:	add	r0, pc, r0
    69e0:	bl	2124 <sf_bpf_error>
    69e4:	.word	0x00022b3f
    69e8:	.word	0x00022b57

000069ec <gen_proto>:
    69ec:	push	{r4, r5, r6, sl, fp, lr}
    69f0:	add	fp, sp, #16
    69f4:	sub	sp, sp, #8
    69f8:	cmp	r2, #0
    69fc:	bne	71d0 <gen_proto+0x7e4>
    6a00:	cmp	r1, #40	; 0x28
    6a04:	bhi	71b4 <gen_proto+0x7c8>
    6a08:	mov	r5, r0
    6a0c:	add	r0, pc, #4
    6a10:	ldr	r1, [r0, r1, lsl #2]
    6a14:	add	pc, r0, r1
    6a18:	.word	0x000000a4
    6a1c:	.word	0x00000348
    6a20:	.word	0x000001a8
    6a24:	.word	0x000007c4
    6a28:	.word	0x000007d0
    6a2c:	.word	0x000007dc
    6a30:	.word	0x000007e8
    6a34:	.word	0x000007f4
    6a38:	.word	0x00000800
    6a3c:	.word	0x0000080c
    6a40:	.word	0x00000818
    6a44:	.word	0x00000824
    6a48:	.word	0x00000830
    6a4c:	.word	0x0000083c
    6a50:	.word	0x00000848
    6a54:	.word	0x00000854
    6a58:	.word	0x000007ac
    6a5c:	.word	0x00000358
    6a60:	.word	0x000007a0
    6a64:	.word	0x00000790
    6a68:	.word	0x00000790
    6a6c:	.word	0x00000890
    6a70:	.word	0x0000089c
    6a74:	.word	0x0000079c
    6a78:	.word	0x00000174
    6a7c:	.word	0x0000079c
    6a80:	.word	0x00000274
    6a84:	.word	0x0000079c
    6a88:	.word	0x00000860
    6a8c:	.word	0x0000086c
    6a90:	.word	0x00000878
    6a94:	.word	0x0000079c
    6a98:	.word	0x0000079c
    6a9c:	.word	0x0000079c
    6aa0:	.word	0x0000079c
    6aa4:	.word	0x0000079c
    6aa8:	.word	0x0000079c
    6aac:	.word	0x0000079c
    6ab0:	.word	0x0000079c
    6ab4:	.word	0x0000079c
    6ab8:	.word	0x00000884
    6abc:	mov	r0, #2048	; 0x800
    6ac0:	bl	7320 <gen_linktype>
    6ac4:	mov	r6, r0
    6ac8:	mov	r0, #3
    6acc:	mov	r1, #9
    6ad0:	mov	r2, #16
    6ad4:	mov	r3, r5
    6ad8:	bl	a9f8 <gen_cmp>
    6adc:	mov	r4, r0
    6ae0:	cmp	r6, #0
    6ae4:	beq	6b18 <gen_proto+0x12c>
    6ae8:	ldr	r0, [r4, #96]	; 0x60
    6aec:	mov	r1, r6
    6af0:	ldr	r2, [r1, #44]	; 0x2c
    6af4:	add	r3, r1, #84	; 0x54
    6af8:	cmp	r2, #0
    6afc:	mov	r2, #84	; 0x54
    6b00:	movweq	r2, #60	; 0x3c
    6b04:	addeq	r3, r1, #60	; 0x3c
    6b08:	ldr	r1, [r1, r2]
    6b0c:	str	r0, [r3]
    6b10:	cmp	r1, #0
    6b14:	bne	6af0 <gen_proto+0x104>
    6b18:	ldr	r0, [r6, #44]	; 0x2c
    6b1c:	cmp	r4, #0
    6b20:	clz	r0, r0
    6b24:	lsr	r0, r0, #5
    6b28:	str	r0, [r6, #44]	; 0x2c
    6b2c:	ldr	r1, [r4, #44]	; 0x2c
    6b30:	clz	r0, r1
    6b34:	lsr	r0, r0, #5
    6b38:	str	r0, [r4, #44]	; 0x2c
    6b3c:	str	r4, [sp, #4]
    6b40:	beq	6e3c <gen_proto+0x450>
    6b44:	cmp	r1, #0
    6b48:	mov	r1, #60	; 0x3c
    6b4c:	add	r0, r4, #60	; 0x3c
    6b50:	movweq	r1, #84	; 0x54
    6b54:	addeq	r0, r4, #84	; 0x54
    6b58:	ldr	r1, [r4, r1]
    6b5c:	cmp	r1, #0
    6b60:	beq	6e40 <gen_proto+0x454>
    6b64:	ldr	r2, [r1, #44]	; 0x2c
    6b68:	add	r0, r1, #84	; 0x54
    6b6c:	cmp	r2, #0
    6b70:	mov	r2, #84	; 0x54
    6b74:	movweq	r2, #60	; 0x3c
    6b78:	addeq	r0, r1, #60	; 0x3c
    6b7c:	ldr	r1, [r1, r2]
    6b80:	cmp	r1, #0
    6b84:	bne	6b64 <gen_proto+0x178>
    6b88:	b	6e40 <gen_proto+0x454>
    6b8c:	ldr	r0, [pc, #1836]	; 72c0 <gen_proto+0x8d4>
    6b90:	ldr	r0, [pc, r0]
    6b94:	cmp	r0, #104	; 0x68
    6b98:	beq	6fe8 <gen_proto+0x5fc>
    6b9c:	cmp	r0, #107	; 0x6b
    6ba0:	bne	70b4 <gen_proto+0x6c8>
    6ba4:	orr	r3, r5, #768	; 0x300
    6ba8:	mov	r0, #1
    6bac:	mov	r1, #2
    6bb0:	mov	r2, #8
    6bb4:	sub	sp, fp, #16
    6bb8:	pop	{r4, r5, r6, sl, fp, lr}
    6bbc:	b	a9f8 <gen_cmp>
    6bc0:	mov	r0, #2048	; 0x800
    6bc4:	bl	7320 <gen_linktype>
    6bc8:	mov	r4, r0
    6bcc:	mov	r0, #3
    6bd0:	mov	r1, #9
    6bd4:	mov	r2, #16
    6bd8:	mov	r3, r5
    6bdc:	bl	a9f8 <gen_cmp>
    6be0:	cmp	r4, #0
    6be4:	beq	6c18 <gen_proto+0x22c>
    6be8:	ldr	r1, [r0, #96]	; 0x60
    6bec:	mov	r2, r4
    6bf0:	ldr	r3, [r2, #44]	; 0x2c
    6bf4:	add	r6, r2, #84	; 0x54
    6bf8:	cmp	r3, #0
    6bfc:	mov	r3, #84	; 0x54
    6c00:	movweq	r3, #60	; 0x3c
    6c04:	addeq	r6, r2, #60	; 0x3c
    6c08:	ldr	r2, [r2, r3]
    6c0c:	str	r1, [r6]
    6c10:	cmp	r2, #0
    6c14:	bne	6bf0 <gen_proto+0x204>
    6c18:	ldr	r1, [r4, #44]	; 0x2c
    6c1c:	cmp	r0, #0
    6c20:	clz	r1, r1
    6c24:	lsr	r1, r1, #5
    6c28:	str	r1, [r4, #44]	; 0x2c
    6c2c:	ldr	r2, [r0, #44]	; 0x2c
    6c30:	clz	r1, r2
    6c34:	lsr	r1, r1, #5
    6c38:	str	r1, [r0, #44]	; 0x2c
    6c3c:	str	r0, [sp, #4]
    6c40:	beq	7180 <gen_proto+0x794>
    6c44:	cmp	r2, #0
    6c48:	mov	r2, #60	; 0x3c
    6c4c:	add	r1, r0, #60	; 0x3c
    6c50:	movweq	r2, #84	; 0x54
    6c54:	addeq	r1, r0, #84	; 0x54
    6c58:	ldr	r2, [r0, r2]
    6c5c:	cmp	r2, #0
    6c60:	beq	7184 <gen_proto+0x798>
    6c64:	ldr	r3, [r2, #44]	; 0x2c
    6c68:	add	r1, r2, #84	; 0x54
    6c6c:	cmp	r3, #0
    6c70:	mov	r3, #84	; 0x54
    6c74:	movweq	r3, #60	; 0x3c
    6c78:	addeq	r1, r2, #60	; 0x3c
    6c7c:	ldr	r2, [r2, r3]
    6c80:	cmp	r2, #0
    6c84:	bne	6c64 <gen_proto+0x278>
    6c88:	b	7184 <gen_proto+0x798>
    6c8c:	mov	r0, #131	; 0x83
    6c90:	mov	r1, #24
    6c94:	mov	r2, #0
    6c98:	bl	69ec <gen_proto>
    6c9c:	mov	r4, r0
    6ca0:	mov	r0, #4
    6ca4:	mov	r1, #4
    6ca8:	mov	r2, #16
    6cac:	mov	r3, r5
    6cb0:	bl	a9f8 <gen_cmp>
    6cb4:	cmp	r4, #0
    6cb8:	beq	6cec <gen_proto+0x300>
    6cbc:	ldr	r1, [r0, #96]	; 0x60
    6cc0:	mov	r2, r4
    6cc4:	ldr	r3, [r2, #44]	; 0x2c
    6cc8:	add	r6, r2, #84	; 0x54
    6ccc:	cmp	r3, #0
    6cd0:	mov	r3, #84	; 0x54
    6cd4:	movweq	r3, #60	; 0x3c
    6cd8:	addeq	r6, r2, #60	; 0x3c
    6cdc:	ldr	r2, [r2, r3]
    6ce0:	str	r1, [r6]
    6ce4:	cmp	r2, #0
    6ce8:	bne	6cc4 <gen_proto+0x2d8>
    6cec:	ldr	r1, [r4, #44]	; 0x2c
    6cf0:	cmp	r0, #0
    6cf4:	clz	r1, r1
    6cf8:	lsr	r1, r1, #5
    6cfc:	str	r1, [r4, #44]	; 0x2c
    6d00:	ldr	r2, [r0, #44]	; 0x2c
    6d04:	clz	r1, r2
    6d08:	lsr	r1, r1, #5
    6d0c:	str	r1, [r0, #44]	; 0x2c
    6d10:	str	r0, [sp, #4]
    6d14:	beq	7180 <gen_proto+0x794>
    6d18:	cmp	r2, #0
    6d1c:	mov	r2, #60	; 0x3c
    6d20:	add	r1, r0, #60	; 0x3c
    6d24:	movweq	r2, #84	; 0x54
    6d28:	addeq	r1, r0, #84	; 0x54
    6d2c:	ldr	r2, [r0, r2]
    6d30:	cmp	r2, #0
    6d34:	beq	7184 <gen_proto+0x798>
    6d38:	ldr	r3, [r2, #44]	; 0x2c
    6d3c:	add	r1, r2, #84	; 0x54
    6d40:	cmp	r3, #0
    6d44:	mov	r3, #84	; 0x54
    6d48:	movweq	r3, #60	; 0x3c
    6d4c:	addeq	r1, r2, #60	; 0x3c
    6d50:	ldr	r2, [r2, r3]
    6d54:	cmp	r2, #0
    6d58:	bne	6d38 <gen_proto+0x34c>
    6d5c:	b	7184 <gen_proto+0x798>
    6d60:	mov	r0, r5
    6d64:	sub	sp, fp, #16
    6d68:	pop	{r4, r5, r6, sl, fp, lr}
    6d6c:	b	7320 <gen_linktype>
    6d70:	movw	r0, #34525	; 0x86dd
    6d74:	bl	7320 <gen_linktype>
    6d78:	mov	r4, r0
    6d7c:	mov	r0, #3
    6d80:	mov	r1, #6
    6d84:	mov	r2, #16
    6d88:	mov	r3, r5
    6d8c:	bl	a9f8 <gen_cmp>
    6d90:	cmp	r4, #0
    6d94:	beq	6dc8 <gen_proto+0x3dc>
    6d98:	ldr	r1, [r0, #96]	; 0x60
    6d9c:	mov	r2, r4
    6da0:	ldr	r3, [r2, #44]	; 0x2c
    6da4:	add	r6, r2, #84	; 0x54
    6da8:	cmp	r3, #0
    6dac:	mov	r3, #84	; 0x54
    6db0:	movweq	r3, #60	; 0x3c
    6db4:	addeq	r6, r2, #60	; 0x3c
    6db8:	ldr	r2, [r2, r3]
    6dbc:	str	r1, [r6]
    6dc0:	cmp	r2, #0
    6dc4:	bne	6da0 <gen_proto+0x3b4>
    6dc8:	ldr	r1, [r4, #44]	; 0x2c
    6dcc:	cmp	r0, #0
    6dd0:	clz	r1, r1
    6dd4:	lsr	r1, r1, #5
    6dd8:	str	r1, [r4, #44]	; 0x2c
    6ddc:	ldr	r2, [r0, #44]	; 0x2c
    6de0:	clz	r1, r2
    6de4:	lsr	r1, r1, #5
    6de8:	str	r1, [r0, #44]	; 0x2c
    6dec:	str	r0, [sp, #4]
    6df0:	beq	7180 <gen_proto+0x794>
    6df4:	cmp	r2, #0
    6df8:	mov	r2, #60	; 0x3c
    6dfc:	add	r1, r0, #60	; 0x3c
    6e00:	movweq	r2, #84	; 0x54
    6e04:	addeq	r1, r0, #84	; 0x54
    6e08:	ldr	r2, [r0, r2]
    6e0c:	cmp	r2, #0
    6e10:	beq	7184 <gen_proto+0x798>
    6e14:	ldr	r3, [r2, #44]	; 0x2c
    6e18:	add	r1, r2, #84	; 0x54
    6e1c:	cmp	r3, #0
    6e20:	mov	r3, #84	; 0x54
    6e24:	movweq	r3, #60	; 0x3c
    6e28:	addeq	r1, r2, #60	; 0x3c
    6e2c:	ldr	r2, [r2, r3]
    6e30:	cmp	r2, #0
    6e34:	bne	6e14 <gen_proto+0x428>
    6e38:	b	7184 <gen_proto+0x798>
    6e3c:	add	r0, sp, #4
    6e40:	str	r6, [r0]
    6e44:	ldr	r0, [r4, #44]	; 0x2c
    6e48:	clz	r0, r0
    6e4c:	lsr	r0, r0, #5
    6e50:	str	r0, [r4, #44]	; 0x2c
    6e54:	ldr	r0, [r6, #96]	; 0x60
    6e58:	str	r0, [r4, #96]	; 0x60
    6e5c:	movw	r0, #34525	; 0x86dd
    6e60:	bl	7320 <gen_linktype>
    6e64:	mov	r6, r0
    6e68:	mov	r0, #3
    6e6c:	mov	r1, #6
    6e70:	mov	r2, #16
    6e74:	mov	r3, r5
    6e78:	bl	a9f8 <gen_cmp>
    6e7c:	cmp	r6, #0
    6e80:	beq	6eb4 <gen_proto+0x4c8>
    6e84:	ldr	r1, [r0, #96]	; 0x60
    6e88:	mov	r2, r6
    6e8c:	ldr	r3, [r2, #44]	; 0x2c
    6e90:	add	r5, r2, #84	; 0x54
    6e94:	cmp	r3, #0
    6e98:	mov	r3, #84	; 0x54
    6e9c:	movweq	r3, #60	; 0x3c
    6ea0:	addeq	r5, r2, #60	; 0x3c
    6ea4:	ldr	r2, [r2, r3]
    6ea8:	str	r1, [r5]
    6eac:	cmp	r2, #0
    6eb0:	bne	6e8c <gen_proto+0x4a0>
    6eb4:	ldr	r1, [r6, #44]	; 0x2c
    6eb8:	cmp	r0, #0
    6ebc:	clz	r1, r1
    6ec0:	lsr	r1, r1, #5
    6ec4:	str	r1, [r6, #44]	; 0x2c
    6ec8:	ldr	r2, [r0, #44]	; 0x2c
    6ecc:	clz	r1, r2
    6ed0:	lsr	r1, r1, #5
    6ed4:	str	r1, [r0, #44]	; 0x2c
    6ed8:	str	r0, [sp, #4]
    6edc:	beq	6f28 <gen_proto+0x53c>
    6ee0:	cmp	r2, #0
    6ee4:	mov	r2, #60	; 0x3c
    6ee8:	add	r1, r0, #60	; 0x3c
    6eec:	movweq	r2, #84	; 0x54
    6ef0:	addeq	r1, r0, #84	; 0x54
    6ef4:	ldr	r2, [r0, r2]
    6ef8:	cmp	r2, #0
    6efc:	beq	6f2c <gen_proto+0x540>
    6f00:	ldr	r3, [r2, #44]	; 0x2c
    6f04:	add	r1, r2, #84	; 0x54
    6f08:	cmp	r3, #0
    6f0c:	mov	r3, #84	; 0x54
    6f10:	movweq	r3, #60	; 0x3c
    6f14:	addeq	r1, r2, #60	; 0x3c
    6f18:	ldr	r2, [r2, r3]
    6f1c:	cmp	r2, #0
    6f20:	bne	6f00 <gen_proto+0x514>
    6f24:	b	6f2c <gen_proto+0x540>
    6f28:	add	r1, sp, #4
    6f2c:	str	r6, [r1]
    6f30:	cmp	r4, #0
    6f34:	ldr	r1, [r0, #44]	; 0x2c
    6f38:	clz	r1, r1
    6f3c:	lsr	r1, r1, #5
    6f40:	str	r1, [r0, #44]	; 0x2c
    6f44:	ldr	r1, [r6, #96]	; 0x60
    6f48:	str	r1, [r0, #96]	; 0x60
    6f4c:	ldr	r1, [r4, #44]	; 0x2c
    6f50:	clz	r1, r1
    6f54:	lsr	r1, r1, #5
    6f58:	str	r1, [r4, #44]	; 0x2c
    6f5c:	beq	6f98 <gen_proto+0x5ac>
    6f60:	ldr	r2, [r0, #96]	; 0x60
    6f64:	mov	r3, r4
    6f68:	b	6f70 <gen_proto+0x584>
    6f6c:	ldr	r1, [r3, #44]	; 0x2c
    6f70:	cmp	r1, #0
    6f74:	mov	r1, #84	; 0x54
    6f78:	add	r6, r3, #84	; 0x54
    6f7c:	movweq	r1, #60	; 0x3c
    6f80:	addeq	r6, r3, #60	; 0x3c
    6f84:	ldr	r3, [r3, r1]
    6f88:	str	r2, [r6]
    6f8c:	cmp	r3, #0
    6f90:	bne	6f6c <gen_proto+0x580>
    6f94:	ldr	r1, [r4, #44]	; 0x2c
    6f98:	clz	r1, r1
    6f9c:	cmp	r0, #0
    6fa0:	lsr	r1, r1, #5
    6fa4:	str	r1, [r4, #44]	; 0x2c
    6fa8:	str	r0, [sp, #4]
    6fac:	beq	6fdc <gen_proto+0x5f0>
    6fb0:	mov	r2, r0
    6fb4:	ldr	r3, [r2, #44]	; 0x2c
    6fb8:	add	r1, r2, #84	; 0x54
    6fbc:	cmp	r3, #0
    6fc0:	mov	r3, #84	; 0x54
    6fc4:	movweq	r3, #60	; 0x3c
    6fc8:	addeq	r1, r2, #60	; 0x3c
    6fcc:	ldr	r2, [r2, r3]
    6fd0:	cmp	r2, #0
    6fd4:	bne	6fb4 <gen_proto+0x5c8>
    6fd8:	b	6fe0 <gen_proto+0x5f4>
    6fdc:	add	r1, sp, #4
    6fe0:	str	r4, [r1]
    6fe4:	b	7198 <gen_proto+0x7ac>
    6fe8:	movw	r0, #65278	; 0xfefe
    6fec:	bl	7320 <gen_linktype>
    6ff0:	mov	r4, r0
    6ff4:	mov	r0, #4
    6ff8:	mov	r1, #1
    6ffc:	mov	r2, #16
    7000:	mov	r3, r5
    7004:	bl	a9f8 <gen_cmp>
    7008:	cmp	r4, #0
    700c:	beq	7040 <gen_proto+0x654>
    7010:	ldr	r1, [r0, #96]	; 0x60
    7014:	mov	r2, r4
    7018:	ldr	r3, [r2, #44]	; 0x2c
    701c:	add	r6, r2, #84	; 0x54
    7020:	cmp	r3, #0
    7024:	mov	r3, #84	; 0x54
    7028:	movweq	r3, #60	; 0x3c
    702c:	addeq	r6, r2, #60	; 0x3c
    7030:	ldr	r2, [r2, r3]
    7034:	str	r1, [r6]
    7038:	cmp	r2, #0
    703c:	bne	7018 <gen_proto+0x62c>
    7040:	ldr	r1, [r4, #44]	; 0x2c
    7044:	cmp	r0, #0
    7048:	clz	r1, r1
    704c:	lsr	r1, r1, #5
    7050:	str	r1, [r4, #44]	; 0x2c
    7054:	ldr	r2, [r0, #44]	; 0x2c
    7058:	clz	r1, r2
    705c:	lsr	r1, r1, #5
    7060:	str	r1, [r0, #44]	; 0x2c
    7064:	str	r0, [sp, #4]
    7068:	beq	7180 <gen_proto+0x794>
    706c:	cmp	r2, #0
    7070:	mov	r2, #60	; 0x3c
    7074:	add	r1, r0, #60	; 0x3c
    7078:	movweq	r2, #84	; 0x54
    707c:	addeq	r1, r0, #84	; 0x54
    7080:	ldr	r2, [r0, r2]
    7084:	cmp	r2, #0
    7088:	beq	7184 <gen_proto+0x798>
    708c:	ldr	r3, [r2, #44]	; 0x2c
    7090:	add	r1, r2, #84	; 0x54
    7094:	cmp	r3, #0
    7098:	mov	r3, #84	; 0x54
    709c:	movweq	r3, #60	; 0x3c
    70a0:	addeq	r1, r2, #60	; 0x3c
    70a4:	ldr	r2, [r2, r3]
    70a8:	cmp	r2, #0
    70ac:	bne	708c <gen_proto+0x6a0>
    70b0:	b	7184 <gen_proto+0x798>
    70b4:	mov	r0, #254	; 0xfe
    70b8:	bl	7320 <gen_linktype>
    70bc:	mov	r4, r0
    70c0:	mov	r0, #4
    70c4:	mov	r1, #0
    70c8:	mov	r2, #16
    70cc:	mov	r3, r5
    70d0:	bl	a9f8 <gen_cmp>
    70d4:	cmp	r4, #0
    70d8:	beq	710c <gen_proto+0x720>
    70dc:	ldr	r1, [r0, #96]	; 0x60
    70e0:	mov	r2, r4
    70e4:	ldr	r3, [r2, #44]	; 0x2c
    70e8:	add	r6, r2, #84	; 0x54
    70ec:	cmp	r3, #0
    70f0:	mov	r3, #84	; 0x54
    70f4:	movweq	r3, #60	; 0x3c
    70f8:	addeq	r6, r2, #60	; 0x3c
    70fc:	ldr	r2, [r2, r3]
    7100:	str	r1, [r6]
    7104:	cmp	r2, #0
    7108:	bne	70e4 <gen_proto+0x6f8>
    710c:	ldr	r1, [r4, #44]	; 0x2c
    7110:	cmp	r0, #0
    7114:	clz	r1, r1
    7118:	lsr	r1, r1, #5
    711c:	str	r1, [r4, #44]	; 0x2c
    7120:	ldr	r2, [r0, #44]	; 0x2c
    7124:	clz	r1, r2
    7128:	lsr	r1, r1, #5
    712c:	str	r1, [r0, #44]	; 0x2c
    7130:	str	r0, [sp, #4]
    7134:	beq	7180 <gen_proto+0x794>
    7138:	cmp	r2, #0
    713c:	mov	r2, #60	; 0x3c
    7140:	add	r1, r0, #60	; 0x3c
    7144:	movweq	r2, #84	; 0x54
    7148:	addeq	r1, r0, #84	; 0x54
    714c:	ldr	r2, [r0, r2]
    7150:	cmp	r2, #0
    7154:	beq	7184 <gen_proto+0x798>
    7158:	ldr	r3, [r2, #44]	; 0x2c
    715c:	add	r1, r2, #84	; 0x54
    7160:	cmp	r3, #0
    7164:	mov	r3, #84	; 0x54
    7168:	movweq	r3, #60	; 0x3c
    716c:	addeq	r1, r2, #60	; 0x3c
    7170:	ldr	r2, [r2, r3]
    7174:	cmp	r2, #0
    7178:	bne	7158 <gen_proto+0x76c>
    717c:	b	7184 <gen_proto+0x798>
    7180:	add	r1, sp, #4
    7184:	str	r4, [r1]
    7188:	ldr	r1, [r0, #44]	; 0x2c
    718c:	clz	r1, r1
    7190:	lsr	r1, r1, #5
    7194:	str	r1, [r0, #44]	; 0x2c
    7198:	ldr	r1, [r4, #96]	; 0x60
    719c:	str	r1, [r0, #96]	; 0x60
    71a0:	sub	sp, fp, #16
    71a4:	pop	{r4, r5, r6, sl, fp, pc}
    71a8:	ldr	r0, [pc, #344]	; 7308 <gen_proto+0x91c>
    71ac:	add	r0, pc, r0
    71b0:	bl	2124 <sf_bpf_error>
    71b4:	bl	fc4 <abort@plt>
    71b8:	ldr	r0, [pc, #324]	; 7304 <gen_proto+0x918>
    71bc:	add	r0, pc, r0
    71c0:	bl	2124 <sf_bpf_error>
    71c4:	ldr	r0, [pc, #276]	; 72e0 <gen_proto+0x8f4>
    71c8:	add	r0, pc, r0
    71cc:	bl	2124 <sf_bpf_error>
    71d0:	ldr	r0, [pc, #324]	; 731c <gen_proto+0x930>
    71d4:	add	r0, pc, r0
    71d8:	bl	2124 <sf_bpf_error>
    71dc:	ldr	r0, [pc, #224]	; 72c4 <gen_proto+0x8d8>
    71e0:	add	r0, pc, r0
    71e4:	bl	2124 <sf_bpf_error>
    71e8:	ldr	r0, [pc, #216]	; 72c8 <gen_proto+0x8dc>
    71ec:	add	r0, pc, r0
    71f0:	bl	2124 <sf_bpf_error>
    71f4:	ldr	r0, [pc, #240]	; 72ec <gen_proto+0x900>
    71f8:	add	r0, pc, r0
    71fc:	bl	2124 <sf_bpf_error>
    7200:	ldr	r0, [pc, #224]	; 72e8 <gen_proto+0x8fc>
    7204:	add	r0, pc, r0
    7208:	bl	2124 <sf_bpf_error>
    720c:	ldr	r0, [pc, #208]	; 72e4 <gen_proto+0x8f8>
    7210:	add	r0, pc, r0
    7214:	bl	2124 <sf_bpf_error>
    7218:	ldr	r0, [pc, #208]	; 72f0 <gen_proto+0x904>
    721c:	add	r0, pc, r0
    7220:	bl	2124 <sf_bpf_error>
    7224:	ldr	r0, [pc, #200]	; 72f4 <gen_proto+0x908>
    7228:	add	r0, pc, r0
    722c:	bl	2124 <sf_bpf_error>
    7230:	ldr	r0, [pc, #192]	; 72f8 <gen_proto+0x90c>
    7234:	add	r0, pc, r0
    7238:	bl	2124 <sf_bpf_error>
    723c:	ldr	r0, [pc, #136]	; 72cc <gen_proto+0x8e0>
    7240:	add	r0, pc, r0
    7244:	bl	2124 <sf_bpf_error>
    7248:	ldr	r0, [pc, #128]	; 72d0 <gen_proto+0x8e4>
    724c:	add	r0, pc, r0
    7250:	bl	2124 <sf_bpf_error>
    7254:	ldr	r0, [pc, #124]	; 72d8 <gen_proto+0x8ec>
    7258:	add	r0, pc, r0
    725c:	bl	2124 <sf_bpf_error>
    7260:	ldr	r0, [pc, #108]	; 72d4 <gen_proto+0x8e8>
    7264:	add	r0, pc, r0
    7268:	bl	2124 <sf_bpf_error>
    726c:	ldr	r0, [pc, #104]	; 72dc <gen_proto+0x8f0>
    7270:	add	r0, pc, r0
    7274:	bl	2124 <sf_bpf_error>
    7278:	ldr	r0, [pc, #140]	; 730c <gen_proto+0x920>
    727c:	add	r0, pc, r0
    7280:	bl	2124 <sf_bpf_error>
    7284:	ldr	r0, [pc, #132]	; 7310 <gen_proto+0x924>
    7288:	add	r0, pc, r0
    728c:	bl	2124 <sf_bpf_error>
    7290:	ldr	r0, [pc, #124]	; 7314 <gen_proto+0x928>
    7294:	add	r0, pc, r0
    7298:	bl	2124 <sf_bpf_error>
    729c:	ldr	r0, [pc, #116]	; 7318 <gen_proto+0x92c>
    72a0:	add	r0, pc, r0
    72a4:	bl	2124 <sf_bpf_error>
    72a8:	ldr	r0, [pc, #76]	; 72fc <gen_proto+0x910>
    72ac:	add	r0, pc, r0
    72b0:	bl	2124 <sf_bpf_error>
    72b4:	ldr	r0, [pc, #68]	; 7300 <gen_proto+0x914>
    72b8:	add	r0, pc, r0
    72bc:	bl	2124 <sf_bpf_error>
    72c0:	.word	0x000408a0
    72c4:	.word	0x00023194
    72c8:	.word	0x00023187
    72cc:	.word	0x0002315e
    72d0:	.word	0x00023179
    72d4:	.word	0x00023189
    72d8:	.word	0x000231bf
    72dc:	.word	0x000231d1
    72e0:	.word	0x000232a5
    72e4:	.word	0x00023289
    72e8:	.word	0x000232aa
    72ec:	.word	0x000232cb
    72f0:	.word	0x000232bd
    72f4:	.word	0x000232c7
    72f8:	.word	0x000232d1
    72fc:	.word	0x0002326f
    7300:	.word	0x00023278
    7304:	.word	0x0002338a
    7308:	.word	0x000233b1
    730c:	.word	0x000232f5
    7310:	.word	0x000232fe
    7314:	.word	0x00023307
    7318:	.word	0x00023314
    731c:	.word	0x00023182

00007320 <gen_linktype>:
    7320:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    7324:	add	fp, sp, #28
    7328:	sub	sp, sp, #20
    732c:	mov	r5, r0
    7330:	ldr	r0, [pc, #4072]	; 8320 <gen_linktype+0x1000>
    7334:	ldr	r0, [pc, r0]
    7338:	cmp	r0, #0
    733c:	beq	735c <gen_linktype+0x3c>
    7340:	cmp	r5, #2048	; 0x800
    7344:	bge	7394 <gen_linktype+0x74>
    7348:	cmp	r5, #33	; 0x21
    734c:	beq	7868 <gen_linktype+0x548>
    7350:	cmp	r5, #87	; 0x57
    7354:	beq	73a0 <gen_linktype+0x80>
    7358:	b	a170 <gen_linktype+0x2e50>
    735c:	ldr	r0, [pc, #4080]	; 8354 <gen_linktype+0x1034>
    7360:	add	r0, pc, r0
    7364:	ldrb	r0, [r0]
    7368:	cmp	r0, #1
    736c:	bne	7424 <gen_linktype+0x104>
    7370:	cmp	r5, #2048	; 0x800
    7374:	bge	7904 <gen_linktype+0x5e4>
    7378:	cmp	r5, #253	; 0xfd
    737c:	bgt	87c0 <gen_linktype+0x14a0>
    7380:	cmp	r5, #66	; 0x42
    7384:	beq	88d8 <gen_linktype+0x15b8>
    7388:	cmp	r5, #224	; 0xe0
    738c:	moveq	r5, #43	; 0x2b
    7390:	b	88fc <gen_linktype+0x15dc>
    7394:	movw	r0, #34525	; 0x86dd
    7398:	cmp	r5, r0
    739c:	bne	7860 <gen_linktype+0x540>
    73a0:	ldr	r0, [pc, #4016]	; 8358 <gen_linktype+0x1038>
    73a4:	add	r0, pc, r0
    73a8:	ldrb	r9, [r0]
    73ac:	ldr	r6, [pc, #4008]	; 835c <gen_linktype+0x103c>
    73b0:	ldr	r6, [pc, r6]
    73b4:	cmp	r9, #0
    73b8:	sub	r8, r6, #2
    73bc:	str	r6, [sp, #8]
    73c0:	str	r9, [sp, #4]
    73c4:	beq	78ec <gen_linktype+0x5cc>
    73c8:	ldr	r7, [pc, #3984]	; 8360 <gen_linktype+0x1040>
    73cc:	ldr	r7, [pc, r7]
    73d0:	cmn	r7, #1
    73d4:	bne	793c <gen_linktype+0x61c>
    73d8:	ldr	r7, [pc, #3972]	; 8364 <gen_linktype+0x1044>
    73dc:	mvn	r1, #15
    73e0:	ldr	r7, [pc, r7]
    73e4:	ldr	r0, [pc, #3964]	; 8368 <gen_linktype+0x1048>
    73e8:	ldr	r2, [pc, #3964]	; 836c <gen_linktype+0x104c>
    73ec:	add	r0, pc, r0
    73f0:	add	r2, pc, r2
    73f4:	ldr	r3, [r0, r7, lsl #2]
    73f8:	cmp	r3, #0
    73fc:	beq	7928 <gen_linktype+0x608>
    7400:	add	r3, r7, #1
    7404:	adds	r1, r1, #1
    7408:	asr	r7, r3, #31
    740c:	add	r7, r3, r7, lsr #28
    7410:	bic	r7, r7, #15
    7414:	sub	r7, r3, r7
    7418:	str	r7, [r2]
    741c:	bne	73f4 <gen_linktype+0xd4>
    7420:	b	81a4 <gen_linktype+0xe84>
    7424:	ldr	r0, [pc, #4076]	; 8418 <gen_linktype+0x10f8>
    7428:	ldr	r0, [pc, r0]
    742c:	cmp	r0, #229	; 0xe5
    7430:	bhi	8ff8 <gen_linktype+0x1cd8>
    7434:	add	r1, pc, #4
    7438:	ldr	r2, [r1, r0, lsl #2]
    743c:	add	pc, r1, r2
    7440:	.word	0x000017e8
    7444:	.word	0x00001c04
    7448:	.word	0x00001bb8
    744c:	.word	0x00001bb8
    7450:	.word	0x00001bb8
    7454:	.word	0x00001bb8
    7458:	.word	0x000014dc
    745c:	.word	0x00001840
    7460:	.word	0x0000174c
    7464:	.word	0x00001710
    7468:	.word	0x000014dc
    746c:	.word	0x000014dc
    7470:	.word	0x0000174c
    7474:	.word	0x00001bb8
    7478:	.word	0x00001bb8
    747c:	.word	0x0000174c
    7480:	.word	0x00001bd4
    7484:	.word	0x00001bb8
    7488:	.word	0x00001bb8
    748c:	.word	0x000014dc
    7490:	.word	0x00001bb8
    7494:	.word	0x00001bb8
    7498:	.word	0x00001bb8
    749c:	.word	0x00001bb8
    74a0:	.word	0x00001bb8
    74a4:	.word	0x00001bb8
    74a8:	.word	0x00001bb8
    74ac:	.word	0x00001bb8
    74b0:	.word	0x00001bb8
    74b4:	.word	0x00001bb8
    74b8:	.word	0x00001bb8
    74bc:	.word	0x00001bb8
    74c0:	.word	0x00001bb8
    74c4:	.word	0x00001bb8
    74c8:	.word	0x00001bb8
    74cc:	.word	0x00001bb8
    74d0:	.word	0x00001bb8
    74d4:	.word	0x00001bb8
    74d8:	.word	0x00001bb8
    74dc:	.word	0x00001bb8
    74e0:	.word	0x00001bb8
    74e4:	.word	0x00001bb8
    74e8:	.word	0x00001bb8
    74ec:	.word	0x00001bb8
    74f0:	.word	0x00001bb8
    74f4:	.word	0x00001bb8
    74f8:	.word	0x00001bb8
    74fc:	.word	0x00001bb8
    7500:	.word	0x00001bb8
    7504:	.word	0x00001bb8
    7508:	.word	0x00001710
    750c:	.word	0x00001710
    7510:	.word	0x00001bb8
    7514:	.word	0x00001bb8
    7518:	.word	0x00001bb8
    751c:	.word	0x00001bb8
    7520:	.word	0x00001bb8
    7524:	.word	0x00001bb8
    7528:	.word	0x00001bb8
    752c:	.word	0x00001bb8
    7530:	.word	0x00001bb8
    7534:	.word	0x00001bb8
    7538:	.word	0x00001bb8
    753c:	.word	0x00001bb8
    7540:	.word	0x00001bb8
    7544:	.word	0x00001bb8
    7548:	.word	0x00001bb8
    754c:	.word	0x00001bb8
    7550:	.word	0x00001bb8
    7554:	.word	0x00001bb8
    7558:	.word	0x00001bb8
    755c:	.word	0x00001bb8
    7560:	.word	0x00001bb8
    7564:	.word	0x00001bb8
    7568:	.word	0x00001bb8
    756c:	.word	0x00001bb8
    7570:	.word	0x00001bb8
    7574:	.word	0x00001bb8
    7578:	.word	0x00001bb8
    757c:	.word	0x00001bb8
    7580:	.word	0x00001bb8
    7584:	.word	0x00001bb8
    7588:	.word	0x00001bb8
    758c:	.word	0x00001bb8
    7590:	.word	0x00001bb8
    7594:	.word	0x00001bb8
    7598:	.word	0x00001bb8
    759c:	.word	0x00001bb8
    75a0:	.word	0x00001bb8
    75a4:	.word	0x00001bb8
    75a8:	.word	0x00001bb8
    75ac:	.word	0x00001bb8
    75b0:	.word	0x00001bb8
    75b4:	.word	0x00001bb8
    75b8:	.word	0x00001bb8
    75bc:	.word	0x00001bb8
    75c0:	.word	0x00001bb8
    75c4:	.word	0x00001bb8
    75c8:	.word	0x00001bb8
    75cc:	.word	0x00001bb8
    75d0:	.word	0x00001bb8
    75d4:	.word	0x00001bb8
    75d8:	.word	0x00001bb8
    75dc:	.word	0x00001bb8
    75e0:	.word	0x00001d48
    75e4:	.word	0x0000151c
    75e8:	.word	0x00001bb8
    75ec:	.word	0x00001d68
    75f0:	.word	0x000017e8
    75f4:	.word	0x000017e8
    75f8:	.word	0x00001bb8
    75fc:	.word	0x00001bb8
    7600:	.word	0x00001bb8
    7604:	.word	0x00001c1c
    7608:	.word	0x00001d28
    760c:	.word	0x00001bb8
    7610:	.word	0x00001bb8
    7614:	.word	0x00001bb8
    7618:	.word	0x00001bb8
    761c:	.word	0x0000151c
    7620:	.word	0x00001bb8
    7624:	.word	0x00001bb8
    7628:	.word	0x000014dc
    762c:	.word	0x00001ac4
    7630:	.word	0x00001bb8
    7634:	.word	0x00001bb8
    7638:	.word	0x00001bb8
    763c:	.word	0x0000151c
    7640:	.word	0x00001bb8
    7644:	.word	0x00001840
    7648:	.word	0x00000398
    764c:	.word	0x00000398
    7650:	.word	0x00000398
    7654:	.word	0x00000398
    7658:	.word	0x00000398
    765c:	.word	0x00000398
    7660:	.word	0x00000398
    7664:	.word	0x00000398
    7668:	.word	0x00001bb8
    766c:	.word	0x00002d0c
    7670:	.word	0x00002d0c
    7674:	.word	0x00001bb8
    7678:	.word	0x00001bb8
    767c:	.word	0x00002d3c
    7680:	.word	0x00002d4c
    7684:	.word	0x00001bb8
    7688:	.word	0x00001bb8
    768c:	.word	0x00001bb8
    7690:	.word	0x00001bb8
    7694:	.word	0x00001bb8
    7698:	.word	0x00001bb8
    769c:	.word	0x00001bb8
    76a0:	.word	0x00001bb8
    76a4:	.word	0x00001bb8
    76a8:	.word	0x00001bb8
    76ac:	.word	0x00001bb8
    76b0:	.word	0x00001bb8
    76b4:	.word	0x00001bb8
    76b8:	.word	0x00001bb8
    76bc:	.word	0x00001bb8
    76c0:	.word	0x00001bb8
    76c4:	.word	0x00001bb8
    76c8:	.word	0x00001bb8
    76cc:	.word	0x0000151c
    76d0:	.word	0x00000398
    76d4:	.word	0x00001bb8
    76d8:	.word	0x00001710
    76dc:	.word	0x00000398
    76e0:	.word	0x00000398
    76e4:	.word	0x00001bb8
    76e8:	.word	0x00001bb8
    76ec:	.word	0x00001bb8
    76f0:	.word	0x00001bb8
    76f4:	.word	0x00001bb8
    76f8:	.word	0x00001bb8
    76fc:	.word	0x00001bb8
    7700:	.word	0x00001bb8
    7704:	.word	0x00002d58
    7708:	.word	0x00000398
    770c:	.word	0x00000398
    7710:	.word	0x00000398
    7714:	.word	0x00000398
    7718:	.word	0x00002d64
    771c:	.word	0x00000398
    7720:	.word	0x00001bb8
    7724:	.word	0x00001bb8
    7728:	.word	0x00002cf4
    772c:	.word	0x00002d18
    7730:	.word	0x00001bb8
    7734:	.word	0x00002cf4
    7738:	.word	0x00002d24
    773c:	.word	0x00002d00
    7740:	.word	0x0000151c
    7744:	.word	0x00002d70
    7748:	.word	0x00000398
    774c:	.word	0x00002d00
    7750:	.word	0x00002d7c
    7754:	.word	0x00002d88
    7758:	.word	0x00002d94
    775c:	.word	0x00002da0
    7760:	.word	0x00000398
    7764:	.word	0x00002d18
    7768:	.word	0x00002dac
    776c:	.word	0x00001bb8
    7770:	.word	0x00001bb8
    7774:	.word	0x00001bb8
    7778:	.word	0x00001bb8
    777c:	.word	0x00001bb8
    7780:	.word	0x00001bb8
    7784:	.word	0x00001bb8
    7788:	.word	0x00001bb8
    778c:	.word	0x00001bb8
    7790:	.word	0x00001bb8
    7794:	.word	0x00001bb8
    7798:	.word	0x00001bb8
    779c:	.word	0x00002d00
    77a0:	.word	0x00001bb8
    77a4:	.word	0x00001bb8
    77a8:	.word	0x00001bb8
    77ac:	.word	0x00001bb8
    77b0:	.word	0x00002cf4
    77b4:	.word	0x00001bb8
    77b8:	.word	0x00001bb8
    77bc:	.word	0x00001bb8
    77c0:	.word	0x00001bb8
    77c4:	.word	0x00001bb8
    77c8:	.word	0x00001a90
    77cc:	.word	0x00002d24
    77d0:	.word	0x00001d9c
    77d4:	.word	0x00001d38
    77d8:	mov	r0, #1
    77dc:	mov	r1, #0
    77e0:	mov	r2, #0
    77e4:	bl	17a3c <gen_load_a>
    77e8:	mov	r8, r0
    77ec:	ldr	r0, [pc, #4092]	; 87f0 <gen_linktype+0x14d0>
    77f0:	ldr	r0, [pc, r0]
    77f4:	ldr	r5, [pc, #4088]	; 87f4 <gen_linktype+0x14d4>
    77f8:	add	r5, pc, r5
    77fc:	mov	r6, r5
    7800:	ldr	r4, [r6, r0, lsl #3]!
    7804:	cmp	r4, #19
    7808:	bhi	8814 <gen_linktype+0x14f4>
    780c:	ldr	r1, [pc, #4068]	; 87f8 <gen_linktype+0x14d8>
    7810:	add	r7, r0, #1
    7814:	cmp	r0, #15
    7818:	add	r1, pc, r1
    781c:	str	r7, [r1]
    7820:	bge	a128 <gen_linktype+0x2e08>
    7824:	mov	r0, #1024	; 0x400
    7828:	lsl	r4, r0, r7
    782c:	mov	r0, r4
    7830:	bl	ed4 <malloc@plt>
    7834:	cmp	r0, #0
    7838:	str	r0, [r6, #12]
    783c:	beq	a128 <gen_linktype+0x2e08>
    7840:	mov	r1, #0
    7844:	mov	r2, r4
    7848:	add	r6, r6, #8
    784c:	bl	f40 <memset@plt>
    7850:	cmp	r4, #19
    7854:	str	r4, [r6]
    7858:	bhi	8818 <gen_linktype+0x14f8>
    785c:	b	a128 <gen_linktype+0x2e08>
    7860:	cmp	r5, #2048	; 0x800
    7864:	bne	a170 <gen_linktype+0x2e50>
    7868:	ldr	r0, [pc, #3980]	; 87fc <gen_linktype+0x14dc>
    786c:	add	r0, pc, r0
    7870:	ldrb	r9, [r0]
    7874:	ldr	r6, [pc, #3972]	; 8800 <gen_linktype+0x14e0>
    7878:	ldr	r6, [pc, r6]
    787c:	cmp	r9, #0
    7880:	sub	r8, r6, #2
    7884:	str	r6, [sp, #8]
    7888:	str	r9, [sp, #4]
    788c:	beq	78f8 <gen_linktype+0x5d8>
    7890:	ldr	r7, [pc, #3948]	; 8804 <gen_linktype+0x14e4>
    7894:	ldr	r7, [pc, r7]
    7898:	cmn	r7, #1
    789c:	bne	7adc <gen_linktype+0x7bc>
    78a0:	ldr	r7, [pc, #3936]	; 8808 <gen_linktype+0x14e8>
    78a4:	mvn	r1, #15
    78a8:	ldr	r7, [pc, r7]
    78ac:	ldr	r0, [pc, #3928]	; 880c <gen_linktype+0x14ec>
    78b0:	ldr	r2, [pc, #3928]	; 8810 <gen_linktype+0x14f0>
    78b4:	add	r0, pc, r0
    78b8:	add	r2, pc, r2
    78bc:	ldr	r3, [r0, r7, lsl #2]
    78c0:	cmp	r3, #0
    78c4:	beq	7ac8 <gen_linktype+0x7a8>
    78c8:	add	r3, r7, #1
    78cc:	adds	r1, r1, #1
    78d0:	asr	r7, r3, #31
    78d4:	add	r7, r3, r7, lsr #28
    78d8:	bic	r7, r7, #15
    78dc:	sub	r7, r3, r7
    78e0:	str	r7, [r2]
    78e4:	bne	78bc <gen_linktype+0x59c>
    78e8:	b	81a4 <gen_linktype+0xe84>
    78ec:	ldr	r6, [pc, #4092]	; 88f0 <gen_linktype+0x15d0>
    78f0:	ldr	r6, [pc, r6]
    78f4:	b	7a34 <gen_linktype+0x714>
    78f8:	ldr	r6, [pc, #4084]	; 88f4 <gen_linktype+0x15d4>
    78fc:	ldr	r6, [pc, r6]
    7900:	b	7bd4 <gen_linktype+0x8b4>
    7904:	movw	r0, #32922	; 0x809a
    7908:	cmp	r5, r0
    790c:	bgt	87d4 <gen_linktype+0x14b4>
    7910:	cmp	r5, #2048	; 0x800
    7914:	beq	88e0 <gen_linktype+0x15c0>
    7918:	movw	r0, #24579	; 0x6003
    791c:	cmp	r5, r0
    7920:	moveq	r5, #39	; 0x27
    7924:	b	88fc <gen_linktype+0x15dc>
    7928:	mov	r1, #1
    792c:	str	r1, [r0, r7, lsl #2]
    7930:	ldr	r0, [pc, #4084]	; 892c <gen_linktype+0x160c>
    7934:	add	r0, pc, r0
    7938:	str	r7, [r0]
    793c:	ldr	r0, [pc, #4076]	; 8930 <gen_linktype+0x1610>
    7940:	ldr	r0, [pc, r0]
    7944:	ldr	sl, [pc, #4072]	; 8934 <gen_linktype+0x1614>
    7948:	add	sl, pc, sl
    794c:	mov	r5, sl
    7950:	ldr	r4, [r5, r0, lsl #3]!
    7954:	cmp	r4, #19
    7958:	bhi	79b0 <gen_linktype+0x690>
    795c:	ldr	r1, [pc, #4052]	; 8938 <gen_linktype+0x1618>
    7960:	add	r6, r0, #1
    7964:	cmp	r0, #15
    7968:	add	r1, pc, r1
    796c:	str	r6, [r1]
    7970:	bge	a128 <gen_linktype+0x2e08>
    7974:	mov	r0, #1024	; 0x400
    7978:	lsl	r4, r0, r6
    797c:	mov	r0, r4
    7980:	bl	ed4 <malloc@plt>
    7984:	cmp	r0, #0
    7988:	str	r0, [r5, #12]
    798c:	beq	a128 <gen_linktype+0x2e08>
    7990:	mov	r1, #0
    7994:	mov	r2, r4
    7998:	add	r5, r5, #8
    799c:	bl	f40 <memset@plt>
    79a0:	cmp	r4, #19
    79a4:	str	r4, [r5]
    79a8:	bhi	79b4 <gen_linktype+0x694>
    79ac:	b	a128 <gen_linktype+0x2e08>
    79b0:	mov	r6, r0
    79b4:	sub	r0, r4, #20
    79b8:	mov	r1, #97	; 0x61
    79bc:	str	r0, [r5]
    79c0:	ldr	r5, [r5, #4]
    79c4:	str	r1, [r5, r0]!
    79c8:	cmp	r5, #0
    79cc:	str	r7, [r5, #12]
    79d0:	beq	7a34 <gen_linktype+0x714>
    79d4:	ldr	r4, [sl, r6, lsl #3]!
    79d8:	cmp	r4, #19
    79dc:	bhi	7c68 <gen_linktype+0x948>
    79e0:	ldr	r0, [pc, #3924]	; 893c <gen_linktype+0x161c>
    79e4:	add	r9, r6, #1
    79e8:	cmp	r6, #15
    79ec:	add	r0, pc, r0
    79f0:	str	r9, [r0]
    79f4:	bge	a128 <gen_linktype+0x2e08>
    79f8:	mov	r0, #1024	; 0x400
    79fc:	lsl	r4, r0, r9
    7a00:	mov	r0, r4
    7a04:	bl	ed4 <malloc@plt>
    7a08:	cmp	r0, #0
    7a0c:	str	r0, [sl, #12]
    7a10:	beq	a128 <gen_linktype+0x2e08>
    7a14:	mov	r1, #0
    7a18:	mov	r2, r4
    7a1c:	add	sl, sl, #8
    7a20:	bl	f40 <memset@plt>
    7a24:	cmp	r4, #19
    7a28:	str	r4, [sl]
    7a2c:	bhi	7c6c <gen_linktype+0x94c>
    7a30:	b	a128 <gen_linktype+0x2e08>
    7a34:	ldr	r5, [pc, #3844]	; 8940 <gen_linktype+0x1620>
    7a38:	add	r5, pc, r5
    7a3c:	ldr	r4, [r5, r6, lsl #3]!
    7a40:	cmp	r4, #19
    7a44:	bhi	7a9c <gen_linktype+0x77c>
    7a48:	ldr	r0, [pc, #3828]	; 8944 <gen_linktype+0x1624>
    7a4c:	add	r9, r6, #1
    7a50:	cmp	r6, #15
    7a54:	add	r0, pc, r0
    7a58:	str	r9, [r0]
    7a5c:	bge	a128 <gen_linktype+0x2e08>
    7a60:	mov	r0, #1024	; 0x400
    7a64:	lsl	r4, r0, r9
    7a68:	mov	r0, r4
    7a6c:	bl	ed4 <malloc@plt>
    7a70:	cmp	r0, #0
    7a74:	str	r0, [r5, #12]
    7a78:	beq	a128 <gen_linktype+0x2e08>
    7a7c:	mov	r1, #0
    7a80:	mov	r2, r4
    7a84:	add	r5, r5, #8
    7a88:	bl	f40 <memset@plt>
    7a8c:	cmp	r4, #19
    7a90:	str	r4, [r5]
    7a94:	bhi	7aa0 <gen_linktype+0x780>
    7a98:	b	a128 <gen_linktype+0x2e08>
    7a9c:	mov	r9, r6
    7aa0:	sub	r0, r4, #20
    7aa4:	mov	r1, #48	; 0x30
    7aa8:	str	r0, [r5]
    7aac:	ldr	r5, [r5, #4]
    7ab0:	str	r1, [r5, r0]!
    7ab4:	ldr	r0, [pc, #3724]	; 8948 <gen_linktype+0x1628>
    7ab8:	ldr	r0, [pc, r0]
    7abc:	add	r0, r0, r8
    7ac0:	str	r0, [r5, #12]
    7ac4:	b	7c9c <gen_linktype+0x97c>
    7ac8:	mov	r1, #1
    7acc:	str	r1, [r0, r7, lsl #2]
    7ad0:	ldr	r0, [pc, #3700]	; 894c <gen_linktype+0x162c>
    7ad4:	add	r0, pc, r0
    7ad8:	str	r7, [r0]
    7adc:	ldr	r0, [pc, #3692]	; 8950 <gen_linktype+0x1630>
    7ae0:	ldr	r0, [pc, r0]
    7ae4:	ldr	sl, [pc, #3688]	; 8954 <gen_linktype+0x1634>
    7ae8:	add	sl, pc, sl
    7aec:	mov	r5, sl
    7af0:	ldr	r4, [r5, r0, lsl #3]!
    7af4:	cmp	r4, #19
    7af8:	bhi	7b50 <gen_linktype+0x830>
    7afc:	ldr	r1, [pc, #3668]	; 8958 <gen_linktype+0x1638>
    7b00:	add	r6, r0, #1
    7b04:	cmp	r0, #15
    7b08:	add	r1, pc, r1
    7b0c:	str	r6, [r1]
    7b10:	bge	a128 <gen_linktype+0x2e08>
    7b14:	mov	r0, #1024	; 0x400
    7b18:	lsl	r4, r0, r6
    7b1c:	mov	r0, r4
    7b20:	bl	ed4 <malloc@plt>
    7b24:	cmp	r0, #0
    7b28:	str	r0, [r5, #12]
    7b2c:	beq	a128 <gen_linktype+0x2e08>
    7b30:	mov	r1, #0
    7b34:	mov	r2, r4
    7b38:	add	r5, r5, #8
    7b3c:	bl	f40 <memset@plt>
    7b40:	cmp	r4, #19
    7b44:	str	r4, [r5]
    7b48:	bhi	7b54 <gen_linktype+0x834>
    7b4c:	b	a128 <gen_linktype+0x2e08>
    7b50:	mov	r6, r0
    7b54:	sub	r0, r4, #20
    7b58:	mov	r1, #97	; 0x61
    7b5c:	str	r0, [r5]
    7b60:	ldr	r5, [r5, #4]
    7b64:	str	r1, [r5, r0]!
    7b68:	cmp	r5, #0
    7b6c:	str	r7, [r5, #12]
    7b70:	beq	7bd4 <gen_linktype+0x8b4>
    7b74:	ldr	r4, [sl, r6, lsl #3]!
    7b78:	cmp	r4, #19
    7b7c:	bhi	7fd8 <gen_linktype+0xcb8>
    7b80:	ldr	r0, [pc, #4088]	; 8b80 <gen_linktype+0x1860>
    7b84:	add	r9, r6, #1
    7b88:	cmp	r6, #15
    7b8c:	add	r0, pc, r0
    7b90:	str	r9, [r0]
    7b94:	bge	a128 <gen_linktype+0x2e08>
    7b98:	mov	r0, #1024	; 0x400
    7b9c:	lsl	r4, r0, r9
    7ba0:	mov	r0, r4
    7ba4:	bl	ed4 <malloc@plt>
    7ba8:	cmp	r0, #0
    7bac:	str	r0, [sl, #12]
    7bb0:	beq	a128 <gen_linktype+0x2e08>
    7bb4:	mov	r1, #0
    7bb8:	mov	r2, r4
    7bbc:	add	sl, sl, #8
    7bc0:	bl	f40 <memset@plt>
    7bc4:	cmp	r4, #19
    7bc8:	str	r4, [sl]
    7bcc:	bhi	7fdc <gen_linktype+0xcbc>
    7bd0:	b	a128 <gen_linktype+0x2e08>
    7bd4:	ldr	r5, [pc, #4008]	; 8b84 <gen_linktype+0x1864>
    7bd8:	add	r5, pc, r5
    7bdc:	ldr	r4, [r5, r6, lsl #3]!
    7be0:	cmp	r4, #19
    7be4:	bhi	7c3c <gen_linktype+0x91c>
    7be8:	ldr	r0, [pc, #3992]	; 8b88 <gen_linktype+0x1868>
    7bec:	add	r9, r6, #1
    7bf0:	cmp	r6, #15
    7bf4:	add	r0, pc, r0
    7bf8:	str	r9, [r0]
    7bfc:	bge	a128 <gen_linktype+0x2e08>
    7c00:	mov	r0, #1024	; 0x400
    7c04:	lsl	r4, r0, r9
    7c08:	mov	r0, r4
    7c0c:	bl	ed4 <malloc@plt>
    7c10:	cmp	r0, #0
    7c14:	str	r0, [r5, #12]
    7c18:	beq	a128 <gen_linktype+0x2e08>
    7c1c:	mov	r1, #0
    7c20:	mov	r2, r4
    7c24:	add	r5, r5, #8
    7c28:	bl	f40 <memset@plt>
    7c2c:	cmp	r4, #19
    7c30:	str	r4, [r5]
    7c34:	bhi	7c40 <gen_linktype+0x920>
    7c38:	b	a128 <gen_linktype+0x2e08>
    7c3c:	mov	r9, r6
    7c40:	sub	r0, r4, #20
    7c44:	mov	r1, #48	; 0x30
    7c48:	str	r0, [r5]
    7c4c:	ldr	r5, [r5, #4]
    7c50:	str	r1, [r5, r0]!
    7c54:	ldr	r0, [pc, #4072]	; 8c44 <gen_linktype+0x1924>
    7c58:	ldr	r0, [pc, r0]
    7c5c:	add	r0, r0, r8
    7c60:	str	r0, [r5, #12]
    7c64:	b	800c <gen_linktype+0xcec>
    7c68:	mov	r9, r6
    7c6c:	sub	r1, r4, #20
    7c70:	mov	r2, #80	; 0x50
    7c74:	str	r1, [sl]
    7c78:	ldr	r0, [sl, #4]
    7c7c:	str	r2, [r0, r1]!
    7c80:	mov	r2, r5
    7c84:	str	r8, [r0, #12]
    7c88:	mov	r1, r2
    7c8c:	ldr	r2, [r2, #16]
    7c90:	cmp	r2, #0
    7c94:	bne	7c88 <gen_linktype+0x968>
    7c98:	str	r0, [r1, #16]
    7c9c:	ldr	sl, [pc, #4052]	; 8c78 <gen_linktype+0x1958>
    7ca0:	add	sl, pc, sl
    7ca4:	mov	r7, sl
    7ca8:	ldr	r4, [r7, r9, lsl #3]!
    7cac:	cmp	r4, #19
    7cb0:	bhi	7d08 <gen_linktype+0x9e8>
    7cb4:	ldr	r0, [pc, #4032]	; 8c7c <gen_linktype+0x195c>
    7cb8:	add	r6, r9, #1
    7cbc:	cmp	r9, #15
    7cc0:	add	r0, pc, r0
    7cc4:	str	r6, [r0]
    7cc8:	bge	a128 <gen_linktype+0x2e08>
    7ccc:	mov	r0, #1024	; 0x400
    7cd0:	lsl	r4, r0, r6
    7cd4:	mov	r0, r4
    7cd8:	bl	ed4 <malloc@plt>
    7cdc:	cmp	r0, #0
    7ce0:	str	r0, [r7, #12]
    7ce4:	beq	a128 <gen_linktype+0x2e08>
    7ce8:	mov	r1, #0
    7cec:	mov	r2, r4
    7cf0:	add	r7, r7, #8
    7cf4:	bl	f40 <memset@plt>
    7cf8:	cmp	r4, #19
    7cfc:	str	r4, [r7]
    7d00:	bhi	7d0c <gen_linktype+0x9ec>
    7d04:	b	a128 <gen_linktype+0x2e08>
    7d08:	mov	r6, r9
    7d0c:	sub	r1, r4, #20
    7d10:	mov	r2, #84	; 0x54
    7d14:	str	r1, [r7]
    7d18:	ldr	r0, [r7, #4]
    7d1c:	str	r2, [r0, r1]!
    7d20:	mov	r1, #1
    7d24:	mov	r2, r5
    7d28:	str	r1, [r0, #12]
    7d2c:	mov	r1, r2
    7d30:	ldr	r2, [r2, #16]
    7d34:	cmp	r2, #0
    7d38:	bne	7d2c <gen_linktype+0xa0c>
    7d3c:	str	r0, [r1, #16]
    7d40:	mov	r7, sl
    7d44:	ldr	r4, [r7, r6, lsl #3]!
    7d48:	cmp	r4, #207	; 0xcf
    7d4c:	bhi	7da4 <gen_linktype+0xa84>
    7d50:	ldr	r0, [pc, #3952]	; 8cc8 <gen_linktype+0x19a8>
    7d54:	add	r9, r6, #1
    7d58:	cmp	r6, #15
    7d5c:	add	r0, pc, r0
    7d60:	str	r9, [r0]
    7d64:	bge	a128 <gen_linktype+0x2e08>
    7d68:	mov	r0, #1024	; 0x400
    7d6c:	lsl	r4, r0, r9
    7d70:	mov	r0, r4
    7d74:	bl	ed4 <malloc@plt>
    7d78:	cmp	r0, #0
    7d7c:	str	r0, [r7, #12]
    7d80:	beq	a128 <gen_linktype+0x2e08>
    7d84:	mov	r1, #0
    7d88:	mov	r2, r4
    7d8c:	add	r7, r7, #8
    7d90:	bl	f40 <memset@plt>
    7d94:	cmp	r4, #207	; 0xcf
    7d98:	str	r4, [r7]
    7d9c:	bhi	7da8 <gen_linktype+0xa88>
    7da0:	b	a128 <gen_linktype+0x2e08>
    7da4:	mov	r9, r6
    7da8:	sub	r0, r4, #208	; 0xd0
    7dac:	str	r0, [r7]
    7db0:	ldr	r1, [r7, #4]
    7db4:	add	r8, r1, r0
    7db8:	mov	r0, #21
    7dbc:	str	r5, [r8, #4]
    7dc0:	str	r0, [r8, #8]
    7dc4:	mov	r0, #1
    7dc8:	str	r0, [r8, #20]
    7dcc:	ldr	r0, [sp, #4]
    7dd0:	str	r8, [r8, #96]	; 0x60
    7dd4:	cmp	r0, #0
    7dd8:	beq	7f44 <gen_linktype+0xc24>
    7ddc:	ldr	r7, [pc, #4064]	; 8dc4 <gen_linktype+0x1aa4>
    7de0:	ldr	r7, [pc, r7]
    7de4:	cmn	r7, #1
    7de8:	bne	7e4c <gen_linktype+0xb2c>
    7dec:	ldr	r7, [pc, #4052]	; 8dc8 <gen_linktype+0x1aa8>
    7df0:	mvn	r1, #15
    7df4:	ldr	r7, [pc, r7]
    7df8:	ldr	r0, [pc, #4044]	; 8dcc <gen_linktype+0x1aac>
    7dfc:	ldr	r2, [pc, #4044]	; 8dd0 <gen_linktype+0x1ab0>
    7e00:	add	r0, pc, r0
    7e04:	add	r2, pc, r2
    7e08:	ldr	r3, [r0, r7, lsl #2]
    7e0c:	cmp	r3, #0
    7e10:	beq	7e38 <gen_linktype+0xb18>
    7e14:	add	r3, r7, #1
    7e18:	adds	r1, r1, #1
    7e1c:	asr	r7, r3, #31
    7e20:	add	r7, r3, r7, lsr #28
    7e24:	bic	r7, r7, #15
    7e28:	sub	r7, r3, r7
    7e2c:	str	r7, [r2]
    7e30:	bne	7e08 <gen_linktype+0xae8>
    7e34:	b	81a4 <gen_linktype+0xe84>
    7e38:	mov	r1, #1
    7e3c:	str	r1, [r0, r7, lsl #2]
    7e40:	ldr	r0, [pc, #3980]	; 8dd4 <gen_linktype+0x1ab4>
    7e44:	add	r0, pc, r0
    7e48:	str	r7, [r0]
    7e4c:	mov	r5, sl
    7e50:	ldr	r4, [r5, r9, lsl #3]!
    7e54:	cmp	r4, #19
    7e58:	bhi	7eb8 <gen_linktype+0xb98>
    7e5c:	ldr	r0, [pc, #4092]	; 8e60 <gen_linktype+0x1b40>
    7e60:	add	r1, r9, #1
    7e64:	cmp	r9, #15
    7e68:	add	r0, pc, r0
    7e6c:	str	r1, [r0]
    7e70:	bge	a128 <gen_linktype+0x2e08>
    7e74:	mov	r0, #1024	; 0x400
    7e78:	mov	r6, r1
    7e7c:	lsl	r4, r0, r1
    7e80:	mov	r0, r4
    7e84:	bl	ed4 <malloc@plt>
    7e88:	cmp	r0, #0
    7e8c:	str	r0, [r5, #12]
    7e90:	beq	a128 <gen_linktype+0x2e08>
    7e94:	mov	r1, #0
    7e98:	mov	r2, r4
    7e9c:	add	r5, r5, #8
    7ea0:	bl	f40 <memset@plt>
    7ea4:	cmp	r4, #19
    7ea8:	mov	r2, r6
    7eac:	str	r4, [r5]
    7eb0:	bhi	7ebc <gen_linktype+0xb9c>
    7eb4:	b	a128 <gen_linktype+0x2e08>
    7eb8:	mov	r2, r9
    7ebc:	sub	r0, r4, #20
    7ec0:	mov	r1, #97	; 0x61
    7ec4:	str	r0, [r5]
    7ec8:	ldr	r9, [r5, #4]
    7ecc:	str	r1, [r9, r0]!
    7ed0:	cmp	r9, #0
    7ed4:	str	r7, [r9, #12]
    7ed8:	beq	7f40 <gen_linktype+0xc20>
    7edc:	mov	r6, sl
    7ee0:	ldr	r4, [r6, r2, lsl #3]!
    7ee4:	cmp	r4, #19
    7ee8:	bhi	8370 <gen_linktype+0x1050>
    7eec:	ldr	r0, [pc, #4056]	; 8ecc <gen_linktype+0x1bac>
    7ef0:	add	sl, r2, #1
    7ef4:	cmp	r2, #15
    7ef8:	add	r0, pc, r0
    7efc:	str	sl, [r0]
    7f00:	bge	a128 <gen_linktype+0x2e08>
    7f04:	mov	r0, #1024	; 0x400
    7f08:	lsl	r4, r0, sl
    7f0c:	mov	r0, r4
    7f10:	bl	ed4 <malloc@plt>
    7f14:	cmp	r0, #0
    7f18:	str	r0, [r6, #12]
    7f1c:	beq	a128 <gen_linktype+0x2e08>
    7f20:	mov	r1, #0
    7f24:	mov	r2, r4
    7f28:	add	r6, r6, #8
    7f2c:	bl	f40 <memset@plt>
    7f30:	cmp	r4, #19
    7f34:	str	r4, [r6]
    7f38:	bhi	8374 <gen_linktype+0x1054>
    7f3c:	b	a128 <gen_linktype+0x2e08>
    7f40:	mov	r9, r2
    7f44:	mov	r5, sl
    7f48:	ldr	r4, [r5, r9, lsl #3]!
    7f4c:	cmp	r4, #19
    7f50:	bhi	7fa8 <gen_linktype+0xc88>
    7f54:	ldr	r0, [pc, #4000]	; 8efc <gen_linktype+0x1bdc>
    7f58:	add	sl, r9, #1
    7f5c:	cmp	r9, #15
    7f60:	add	r0, pc, r0
    7f64:	str	sl, [r0]
    7f68:	bge	a128 <gen_linktype+0x2e08>
    7f6c:	mov	r0, #1024	; 0x400
    7f70:	lsl	r4, r0, sl
    7f74:	mov	r0, r4
    7f78:	bl	ed4 <malloc@plt>
    7f7c:	cmp	r0, #0
    7f80:	str	r0, [r5, #12]
    7f84:	beq	a128 <gen_linktype+0x2e08>
    7f88:	mov	r1, #0
    7f8c:	mov	r2, r4
    7f90:	add	r5, r5, #8
    7f94:	bl	f40 <memset@plt>
    7f98:	cmp	r4, #19
    7f9c:	str	r4, [r5]
    7fa0:	bhi	7fac <gen_linktype+0xc8c>
    7fa4:	b	a128 <gen_linktype+0x2e08>
    7fa8:	mov	sl, r9
    7fac:	sub	r0, r4, #20
    7fb0:	mov	r1, #48	; 0x30
    7fb4:	str	r0, [r5]
    7fb8:	ldr	r9, [r5, #4]
    7fbc:	str	r1, [r9, r0]!
    7fc0:	ldr	r0, [pc, #3896]	; 8f00 <gen_linktype+0x1be0>
    7fc4:	ldr	r0, [pc, r0]
    7fc8:	ldr	r1, [sp, #8]
    7fcc:	add	r0, r0, r1
    7fd0:	str	r0, [r9, #12]
    7fd4:	b	83a8 <gen_linktype+0x1088>
    7fd8:	mov	r9, r6
    7fdc:	sub	r1, r4, #20
    7fe0:	mov	r2, #80	; 0x50
    7fe4:	str	r1, [sl]
    7fe8:	ldr	r0, [sl, #4]
    7fec:	str	r2, [r0, r1]!
    7ff0:	mov	r2, r5
    7ff4:	str	r8, [r0, #12]
    7ff8:	mov	r1, r2
    7ffc:	ldr	r2, [r2, #16]
    8000:	cmp	r2, #0
    8004:	bne	7ff8 <gen_linktype+0xcd8>
    8008:	str	r0, [r1, #16]
    800c:	ldr	sl, [pc, #4088]	; 900c <gen_linktype+0x1cec>
    8010:	add	sl, pc, sl
    8014:	mov	r7, sl
    8018:	ldr	r4, [r7, r9, lsl #3]!
    801c:	cmp	r4, #19
    8020:	bhi	8078 <gen_linktype+0xd58>
    8024:	ldr	r0, [pc, #4068]	; 9010 <gen_linktype+0x1cf0>
    8028:	add	r6, r9, #1
    802c:	cmp	r9, #15
    8030:	add	r0, pc, r0
    8034:	str	r6, [r0]
    8038:	bge	a128 <gen_linktype+0x2e08>
    803c:	mov	r0, #1024	; 0x400
    8040:	lsl	r4, r0, r6
    8044:	mov	r0, r4
    8048:	bl	ed4 <malloc@plt>
    804c:	cmp	r0, #0
    8050:	str	r0, [r7, #12]
    8054:	beq	a128 <gen_linktype+0x2e08>
    8058:	mov	r1, #0
    805c:	mov	r2, r4
    8060:	add	r7, r7, #8
    8064:	bl	f40 <memset@plt>
    8068:	cmp	r4, #19
    806c:	str	r4, [r7]
    8070:	bhi	807c <gen_linktype+0xd5c>
    8074:	b	a128 <gen_linktype+0x2e08>
    8078:	mov	r6, r9
    807c:	sub	r1, r4, #20
    8080:	mov	r2, #84	; 0x54
    8084:	str	r1, [r7]
    8088:	ldr	r0, [r7, #4]
    808c:	str	r2, [r0, r1]!
    8090:	mov	r1, #1
    8094:	mov	r2, r5
    8098:	str	r1, [r0, #12]
    809c:	mov	r1, r2
    80a0:	ldr	r2, [r2, #16]
    80a4:	cmp	r2, #0
    80a8:	bne	809c <gen_linktype+0xd7c>
    80ac:	str	r0, [r1, #16]
    80b0:	mov	r7, sl
    80b4:	ldr	r4, [r7, r6, lsl #3]!
    80b8:	cmp	r4, #207	; 0xcf
    80bc:	bhi	8114 <gen_linktype+0xdf4>
    80c0:	ldr	r0, [pc, #3980]	; 9054 <gen_linktype+0x1d34>
    80c4:	add	r9, r6, #1
    80c8:	cmp	r6, #15
    80cc:	add	r0, pc, r0
    80d0:	str	r9, [r0]
    80d4:	bge	a128 <gen_linktype+0x2e08>
    80d8:	mov	r0, #1024	; 0x400
    80dc:	lsl	r4, r0, r9
    80e0:	mov	r0, r4
    80e4:	bl	ed4 <malloc@plt>
    80e8:	cmp	r0, #0
    80ec:	str	r0, [r7, #12]
    80f0:	beq	a128 <gen_linktype+0x2e08>
    80f4:	mov	r1, #0
    80f8:	mov	r2, r4
    80fc:	add	r7, r7, #8
    8100:	bl	f40 <memset@plt>
    8104:	cmp	r4, #207	; 0xcf
    8108:	str	r4, [r7]
    810c:	bhi	8118 <gen_linktype+0xdf8>
    8110:	b	a128 <gen_linktype+0x2e08>
    8114:	mov	r9, r6
    8118:	sub	r0, r4, #208	; 0xd0
    811c:	str	r0, [r7]
    8120:	ldr	r1, [r7, #4]
    8124:	add	r8, r1, r0
    8128:	mov	r0, #21
    812c:	str	r5, [r8, #4]
    8130:	str	r0, [r8, #8]
    8134:	mov	r0, #1
    8138:	str	r0, [r8, #20]
    813c:	ldr	r0, [sp, #4]
    8140:	str	r8, [r8, #96]	; 0x60
    8144:	cmp	r0, #0
    8148:	beq	82bc <gen_linktype+0xf9c>
    814c:	ldr	r7, [pc, #3844]	; 9058 <gen_linktype+0x1d38>
    8150:	ldr	r7, [pc, r7]
    8154:	cmn	r7, #1
    8158:	bne	81c4 <gen_linktype+0xea4>
    815c:	ldr	r7, [pc, #4088]	; 915c <gen_linktype+0x1e3c>
    8160:	mvn	r1, #15
    8164:	ldr	r7, [pc, r7]
    8168:	ldr	r0, [pc, #4080]	; 9160 <gen_linktype+0x1e40>
    816c:	ldr	r2, [pc, #4080]	; 9164 <gen_linktype+0x1e44>
    8170:	add	r0, pc, r0
    8174:	add	r2, pc, r2
    8178:	ldr	r3, [r0, r7, lsl #2]
    817c:	cmp	r3, #0
    8180:	beq	81b0 <gen_linktype+0xe90>
    8184:	add	r3, r7, #1
    8188:	adds	r1, r1, #1
    818c:	asr	r7, r3, #31
    8190:	add	r7, r3, r7, lsr #28
    8194:	bic	r7, r7, #15
    8198:	sub	r7, r3, r7
    819c:	str	r7, [r2]
    81a0:	bne	8178 <gen_linktype+0xe58>
    81a4:	ldr	r0, [pc, #4084]	; 91a0 <gen_linktype+0x1e80>
    81a8:	add	r0, pc, r0
    81ac:	bl	2124 <sf_bpf_error>
    81b0:	mov	r1, #1
    81b4:	str	r1, [r0, r7, lsl #2]
    81b8:	ldr	r0, [pc, #4068]	; 91a4 <gen_linktype+0x1e84>
    81bc:	add	r0, pc, r0
    81c0:	str	r7, [r0]
    81c4:	mov	r5, sl
    81c8:	ldr	r4, [r5, r9, lsl #3]!
    81cc:	cmp	r4, #19
    81d0:	bhi	8230 <gen_linktype+0xf10>
    81d4:	ldr	r0, [pc, #4092]	; 91d8 <gen_linktype+0x1eb8>
    81d8:	add	r1, r9, #1
    81dc:	cmp	r9, #15
    81e0:	add	r0, pc, r0
    81e4:	str	r1, [r0]
    81e8:	bge	a128 <gen_linktype+0x2e08>
    81ec:	mov	r0, #1024	; 0x400
    81f0:	mov	r6, r1
    81f4:	lsl	r4, r0, r1
    81f8:	mov	r0, r4
    81fc:	bl	ed4 <malloc@plt>
    8200:	cmp	r0, #0
    8204:	str	r0, [r5, #12]
    8208:	beq	a128 <gen_linktype+0x2e08>
    820c:	mov	r1, #0
    8210:	mov	r2, r4
    8214:	add	r5, r5, #8
    8218:	bl	f40 <memset@plt>
    821c:	cmp	r4, #19
    8220:	mov	r2, r6
    8224:	str	r4, [r5]
    8228:	bhi	8234 <gen_linktype+0xf14>
    822c:	b	a128 <gen_linktype+0x2e08>
    8230:	mov	r2, r9
    8234:	sub	r0, r4, #20
    8238:	mov	r1, #97	; 0x61
    823c:	str	r0, [r5]
    8240:	ldr	r9, [r5, #4]
    8244:	str	r1, [r9, r0]!
    8248:	cmp	r9, #0
    824c:	str	r7, [r9, #12]
    8250:	beq	82b8 <gen_linktype+0xf98>
    8254:	mov	r6, sl
    8258:	ldr	r4, [r6, r2, lsl #3]!
    825c:	cmp	r4, #19
    8260:	bhi	8584 <gen_linktype+0x1264>
    8264:	ldr	r0, [pc, #4080]	; 925c <gen_linktype+0x1f3c>
    8268:	add	sl, r2, #1
    826c:	cmp	r2, #15
    8270:	add	r0, pc, r0
    8274:	str	sl, [r0]
    8278:	bge	a128 <gen_linktype+0x2e08>
    827c:	mov	r0, #1024	; 0x400
    8280:	lsl	r4, r0, sl
    8284:	mov	r0, r4
    8288:	bl	ed4 <malloc@plt>
    828c:	cmp	r0, #0
    8290:	str	r0, [r6, #12]
    8294:	beq	a128 <gen_linktype+0x2e08>
    8298:	mov	r1, #0
    829c:	mov	r2, r4
    82a0:	add	r6, r6, #8
    82a4:	bl	f40 <memset@plt>
    82a8:	cmp	r4, #19
    82ac:	str	r4, [r6]
    82b0:	bhi	8588 <gen_linktype+0x1268>
    82b4:	b	a128 <gen_linktype+0x2e08>
    82b8:	mov	r9, r2
    82bc:	mov	r5, sl
    82c0:	ldr	r4, [r5, r9, lsl #3]!
    82c4:	cmp	r4, #19
    82c8:	bhi	8324 <gen_linktype+0x1004>
    82cc:	ldr	r0, [pc, #4092]	; 92d0 <gen_linktype+0x1fb0>
    82d0:	add	sl, r9, #1
    82d4:	cmp	r9, #15
    82d8:	add	r0, pc, r0
    82dc:	str	sl, [r0]
    82e0:	bge	a128 <gen_linktype+0x2e08>
    82e4:	mov	r0, #1024	; 0x400
    82e8:	lsl	r4, r0, sl
    82ec:	mov	r0, r4
    82f0:	bl	ed4 <malloc@plt>
    82f4:	cmp	r0, #0
    82f8:	str	r0, [r5, #12]
    82fc:	beq	a128 <gen_linktype+0x2e08>
    8300:	mov	r1, #0
    8304:	mov	r2, r4
    8308:	add	r5, r5, #8
    830c:	bl	f40 <memset@plt>
    8310:	cmp	r4, #19
    8314:	str	r4, [r5]
    8318:	bhi	8328 <gen_linktype+0x1008>
    831c:	b	a128 <gen_linktype+0x2e08>
    8320:	.word	0x0003fda0
    8324:	mov	sl, r9
    8328:	sub	r0, r4, #20
    832c:	mov	r1, #48	; 0x30
    8330:	str	r0, [r5]
    8334:	ldr	r9, [r5, #4]
    8338:	str	r1, [r9, r0]!
    833c:	ldr	r0, [pc, #4016]	; 92f4 <gen_linktype+0x1fd4>
    8340:	ldr	r0, [pc, r0]
    8344:	ldr	r1, [sp, #8]
    8348:	add	r0, r0, r1
    834c:	str	r0, [r9, #12]
    8350:	b	85bc <gen_linktype+0x129c>
    8354:	.word	0x000400f0
    8358:	.word	0x0004015c
    835c:	.word	0x00040090
    8360:	.word	0x0004013c
    8364:	.word	0x0004012c
    8368:	.word	0x00040124
    836c:	.word	0x0004011c
    8370:	mov	sl, r2
    8374:	sub	r1, r4, #20
    8378:	mov	r2, #80	; 0x50
    837c:	str	r1, [r6]
    8380:	ldr	r0, [r6, #4]
    8384:	str	r2, [r0, r1]!
    8388:	mov	r2, r9
    838c:	ldr	r1, [sp, #8]
    8390:	str	r1, [r0, #12]
    8394:	mov	r1, r2
    8398:	ldr	r2, [r2, #16]
    839c:	cmp	r2, #0
    83a0:	bne	8394 <gen_linktype+0x1074>
    83a4:	str	r0, [r1, #16]
    83a8:	ldr	r7, [pc, #3912]	; 92f8 <gen_linktype+0x1fd8>
    83ac:	add	r7, pc, r7
    83b0:	ldr	r4, [r7, sl, lsl #3]!
    83b4:	cmp	r4, #19
    83b8:	bhi	841c <gen_linktype+0x10fc>
    83bc:	ldr	r0, [pc, #4080]	; 93b4 <gen_linktype+0x2094>
    83c0:	add	r6, sl, #1
    83c4:	cmp	sl, #15
    83c8:	add	r0, pc, r0
    83cc:	str	r6, [r0]
    83d0:	bge	a128 <gen_linktype+0x2e08>
    83d4:	mov	r0, #1024	; 0x400
    83d8:	lsl	r4, r0, r6
    83dc:	mov	r0, r4
    83e0:	bl	ed4 <malloc@plt>
    83e4:	str	r0, [r7, #12]
    83e8:	cmp	r0, #0
    83ec:	ldr	r5, [pc, #4036]	; 93b8 <gen_linktype+0x2098>
    83f0:	add	r5, pc, r5
    83f4:	beq	a128 <gen_linktype+0x2e08>
    83f8:	mov	r1, #0
    83fc:	mov	r2, r4
    8400:	add	r7, r7, #8
    8404:	bl	f40 <memset@plt>
    8408:	cmp	r4, #19
    840c:	str	r4, [r7]
    8410:	bhi	8428 <gen_linktype+0x1108>
    8414:	b	a128 <gen_linktype+0x2e08>
    8418:	.word	0x00040008
    841c:	ldr	r5, [pc, #3992]	; 93bc <gen_linktype+0x209c>
    8420:	mov	r6, sl
    8424:	add	r5, pc, r5
    8428:	sub	r1, r4, #20
    842c:	mov	r2, #84	; 0x54
    8430:	str	r1, [r7]
    8434:	ldr	r0, [r7, #4]
    8438:	str	r2, [r0, r1]!
    843c:	mov	r1, #240	; 0xf0
    8440:	mov	r2, r9
    8444:	str	r1, [r0, #12]
    8448:	mov	r1, r2
    844c:	ldr	r2, [r2, #16]
    8450:	cmp	r2, #0
    8454:	bne	8448 <gen_linktype+0x1128>
    8458:	str	r0, [r1, #16]
    845c:	ldr	r4, [r5, r6, lsl #3]!
    8460:	cmp	r4, #207	; 0xcf
    8464:	bhi	84b8 <gen_linktype+0x1198>
    8468:	ldr	r1, [pc, #3920]	; 93c0 <gen_linktype+0x20a0>
    846c:	add	r0, r6, #1
    8470:	cmp	r6, #15
    8474:	add	r1, pc, r1
    8478:	str	r0, [r1]
    847c:	bge	a128 <gen_linktype+0x2e08>
    8480:	mov	r1, #1024	; 0x400
    8484:	lsl	r4, r1, r0
    8488:	mov	r0, r4
    848c:	bl	ed4 <malloc@plt>
    8490:	cmp	r0, #0
    8494:	str	r0, [r5, #12]
    8498:	beq	a128 <gen_linktype+0x2e08>
    849c:	mov	r1, #0
    84a0:	mov	r2, r4
    84a4:	add	r5, r5, #8
    84a8:	bl	f40 <memset@plt>
    84ac:	cmp	r4, #207	; 0xcf
    84b0:	str	r4, [r5]
    84b4:	bls	a128 <gen_linktype+0x2e08>
    84b8:	sub	r0, r4, #208	; 0xd0
    84bc:	cmp	r8, #0
    84c0:	str	r0, [r5]
    84c4:	ldr	r1, [r5, #4]
    84c8:	add	r4, r1, r0
    84cc:	mov	r0, #21
    84d0:	str	r9, [r4, #4]
    84d4:	str	r0, [r4, #8]
    84d8:	mov	r0, #96	; 0x60
    84dc:	str	r0, [r4, #20]
    84e0:	str	r4, [r4, #96]	; 0x60
    84e4:	beq	8514 <gen_linktype+0x11f4>
    84e8:	mov	r0, r8
    84ec:	ldr	r1, [r0, #44]	; 0x2c
    84f0:	add	r2, r0, #84	; 0x54
    84f4:	cmp	r1, #0
    84f8:	mov	r1, #84	; 0x54
    84fc:	movweq	r1, #60	; 0x3c
    8500:	addeq	r2, r0, #60	; 0x3c
    8504:	ldr	r0, [r0, r1]
    8508:	str	r4, [r2]
    850c:	cmp	r0, #0
    8510:	bne	84ec <gen_linktype+0x11cc>
    8514:	ldr	r0, [r8, #44]	; 0x2c
    8518:	cmp	r4, #0
    851c:	clz	r0, r0
    8520:	lsr	r0, r0, #5
    8524:	str	r0, [r8, #44]	; 0x2c
    8528:	ldr	r0, [r4, #44]	; 0x2c
    852c:	clz	r1, r0
    8530:	lsr	r1, r1, #5
    8534:	str	r1, [r4, #44]	; 0x2c
    8538:	str	r4, [sp, #12]
    853c:	beq	8794 <gen_linktype+0x1474>
    8540:	mov	r2, #60	; 0x3c
    8544:	cmp	r0, #0
    8548:	mov	r1, r4
    854c:	movweq	r2, #84	; 0x54
    8550:	ldr	r0, [r1, r2]!
    8554:	cmp	r0, #0
    8558:	beq	8798 <gen_linktype+0x1478>
    855c:	ldr	r2, [r0, #44]	; 0x2c
    8560:	add	r1, r0, #84	; 0x54
    8564:	cmp	r2, #0
    8568:	mov	r2, #84	; 0x54
    856c:	movweq	r2, #60	; 0x3c
    8570:	addeq	r1, r0, #60	; 0x3c
    8574:	ldr	r0, [r0, r2]
    8578:	cmp	r0, #0
    857c:	bne	855c <gen_linktype+0x123c>
    8580:	b	8798 <gen_linktype+0x1478>
    8584:	mov	sl, r2
    8588:	sub	r1, r4, #20
    858c:	mov	r2, #80	; 0x50
    8590:	str	r1, [r6]
    8594:	ldr	r0, [r6, #4]
    8598:	str	r2, [r0, r1]!
    859c:	mov	r2, r9
    85a0:	ldr	r1, [sp, #8]
    85a4:	str	r1, [r0, #12]
    85a8:	mov	r1, r2
    85ac:	ldr	r2, [r2, #16]
    85b0:	cmp	r2, #0
    85b4:	bne	85a8 <gen_linktype+0x1288>
    85b8:	str	r0, [r1, #16]
    85bc:	ldr	r7, [pc, #4024]	; 957c <gen_linktype+0x225c>
    85c0:	add	r7, pc, r7
    85c4:	ldr	r4, [r7, sl, lsl #3]!
    85c8:	cmp	r4, #19
    85cc:	bhi	862c <gen_linktype+0x130c>
    85d0:	ldr	r0, [pc, #4008]	; 9580 <gen_linktype+0x2260>
    85d4:	add	r6, sl, #1
    85d8:	cmp	sl, #15
    85dc:	add	r0, pc, r0
    85e0:	str	r6, [r0]
    85e4:	bge	a128 <gen_linktype+0x2e08>
    85e8:	mov	r0, #1024	; 0x400
    85ec:	lsl	r4, r0, r6
    85f0:	mov	r0, r4
    85f4:	bl	ed4 <malloc@plt>
    85f8:	str	r0, [r7, #12]
    85fc:	cmp	r0, #0
    8600:	ldr	r5, [pc, #4092]	; 9604 <gen_linktype+0x22e4>
    8604:	add	r5, pc, r5
    8608:	beq	a128 <gen_linktype+0x2e08>
    860c:	mov	r1, #0
    8610:	mov	r2, r4
    8614:	add	r7, r7, #8
    8618:	bl	f40 <memset@plt>
    861c:	cmp	r4, #19
    8620:	str	r4, [r7]
    8624:	bhi	8638 <gen_linktype+0x1318>
    8628:	b	a128 <gen_linktype+0x2e08>
    862c:	ldr	r5, [pc, #4072]	; 961c <gen_linktype+0x22fc>
    8630:	mov	r6, sl
    8634:	add	r5, pc, r5
    8638:	sub	r1, r4, #20
    863c:	mov	r2, #84	; 0x54
    8640:	str	r1, [r7]
    8644:	ldr	r0, [r7, #4]
    8648:	str	r2, [r0, r1]!
    864c:	mov	r1, #240	; 0xf0
    8650:	mov	r2, r9
    8654:	str	r1, [r0, #12]
    8658:	mov	r1, r2
    865c:	ldr	r2, [r2, #16]
    8660:	cmp	r2, #0
    8664:	bne	8658 <gen_linktype+0x1338>
    8668:	str	r0, [r1, #16]
    866c:	ldr	r4, [r5, r6, lsl #3]!
    8670:	cmp	r4, #207	; 0xcf
    8674:	bhi	86c8 <gen_linktype+0x13a8>
    8678:	ldr	r1, [pc, #4072]	; 9668 <gen_linktype+0x2348>
    867c:	add	r0, r6, #1
    8680:	cmp	r6, #15
    8684:	add	r1, pc, r1
    8688:	str	r0, [r1]
    868c:	bge	a128 <gen_linktype+0x2e08>
    8690:	mov	r1, #1024	; 0x400
    8694:	lsl	r4, r1, r0
    8698:	mov	r0, r4
    869c:	bl	ed4 <malloc@plt>
    86a0:	cmp	r0, #0
    86a4:	str	r0, [r5, #12]
    86a8:	beq	a128 <gen_linktype+0x2e08>
    86ac:	mov	r1, #0
    86b0:	mov	r2, r4
    86b4:	add	r5, r5, #8
    86b8:	bl	f40 <memset@plt>
    86bc:	cmp	r4, #207	; 0xcf
    86c0:	str	r4, [r5]
    86c4:	bls	a128 <gen_linktype+0x2e08>
    86c8:	sub	r0, r4, #208	; 0xd0
    86cc:	cmp	r8, #0
    86d0:	str	r0, [r5]
    86d4:	ldr	r1, [r5, #4]
    86d8:	add	r4, r1, r0
    86dc:	mov	r0, #21
    86e0:	str	r9, [r4, #4]
    86e4:	str	r0, [r4, #8]
    86e8:	mov	r0, #64	; 0x40
    86ec:	str	r0, [r4, #20]
    86f0:	str	r4, [r4, #96]	; 0x60
    86f4:	beq	8724 <gen_linktype+0x1404>
    86f8:	mov	r0, r8
    86fc:	ldr	r1, [r0, #44]	; 0x2c
    8700:	add	r2, r0, #84	; 0x54
    8704:	cmp	r1, #0
    8708:	mov	r1, #84	; 0x54
    870c:	movweq	r1, #60	; 0x3c
    8710:	addeq	r2, r0, #60	; 0x3c
    8714:	ldr	r0, [r0, r1]
    8718:	str	r4, [r2]
    871c:	cmp	r0, #0
    8720:	bne	86fc <gen_linktype+0x13dc>
    8724:	ldr	r0, [r8, #44]	; 0x2c
    8728:	cmp	r4, #0
    872c:	clz	r0, r0
    8730:	lsr	r0, r0, #5
    8734:	str	r0, [r8, #44]	; 0x2c
    8738:	ldr	r0, [r4, #44]	; 0x2c
    873c:	clz	r1, r0
    8740:	lsr	r1, r1, #5
    8744:	str	r1, [r4, #44]	; 0x2c
    8748:	str	r4, [sp, #12]
    874c:	beq	8794 <gen_linktype+0x1474>
    8750:	mov	r2, #60	; 0x3c
    8754:	cmp	r0, #0
    8758:	mov	r1, r4
    875c:	movweq	r2, #84	; 0x54
    8760:	ldr	r0, [r1, r2]!
    8764:	cmp	r0, #0
    8768:	beq	8798 <gen_linktype+0x1478>
    876c:	ldr	r2, [r0, #44]	; 0x2c
    8770:	add	r1, r0, #84	; 0x54
    8774:	cmp	r2, #0
    8778:	mov	r2, #84	; 0x54
    877c:	movweq	r2, #60	; 0x3c
    8780:	addeq	r1, r0, #60	; 0x3c
    8784:	ldr	r0, [r0, r2]
    8788:	cmp	r0, #0
    878c:	bne	876c <gen_linktype+0x144c>
    8790:	b	8798 <gen_linktype+0x1478>
    8794:	add	r1, sp, #12
    8798:	str	r8, [r1]
    879c:	ldr	r0, [r4, #44]	; 0x2c
    87a0:	clz	r0, r0
    87a4:	lsr	r0, r0, #5
    87a8:	str	r0, [r4, #44]	; 0x2c
    87ac:	ldr	r0, [r8, #96]	; 0x60
    87b0:	str	r0, [r4, #96]	; 0x60
    87b4:	mov	r0, r4
    87b8:	sub	sp, fp, #28
    87bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    87c0:	cmp	r5, #254	; 0xfe
    87c4:	beq	88e8 <gen_linktype+0x15c8>
    87c8:	cmp	r5, #1536	; 0x600
    87cc:	moveq	r5, #37	; 0x25
    87d0:	b	88fc <gen_linktype+0x15dc>
    87d4:	movw	r0, #32923	; 0x809b
    87d8:	cmp	r5, r0
    87dc:	beq	88f8 <gen_linktype+0x15d8>
    87e0:	movw	r0, #34525	; 0x86dd
    87e4:	cmp	r5, r0
    87e8:	moveq	r5, #87	; 0x57
    87ec:	b	88fc <gen_linktype+0x15dc>
    87f0:	.word	0x0003fd0c
    87f4:	.word	0x0003fc84
    87f8:	.word	0x0003fce4
    87fc:	.word	0x0003fc94
    8800:	.word	0x0003fbc8
    8804:	.word	0x0003fc74
    8808:	.word	0x0003fc64
    880c:	.word	0x0003fc5c
    8810:	.word	0x0003fc54
    8814:	mov	r7, r0
    8818:	sub	r1, r4, #20
    881c:	mov	r2, #84	; 0x54
    8820:	str	r1, [r6]
    8824:	ldr	r0, [r6, #4]
    8828:	str	r2, [r0, r1]!
    882c:	mvn	r1, #255	; 0xff
    8830:	mov	r2, r8
    8834:	str	r1, [r0, #12]
    8838:	mov	r1, r2
    883c:	ldr	r2, [r2, #16]
    8840:	cmp	r2, #0
    8844:	bne	8838 <gen_linktype+0x1518>
    8848:	str	r0, [r1, #16]
    884c:	ldr	r4, [r5, r7, lsl #3]!
    8850:	cmp	r4, #207	; 0xcf
    8854:	bhi	88a8 <gen_linktype+0x1588>
    8858:	ldr	r1, [pc, #4000]	; 9800 <gen_linktype+0x24e0>
    885c:	add	r0, r7, #1
    8860:	cmp	r7, #15
    8864:	add	r1, pc, r1
    8868:	str	r0, [r1]
    886c:	bge	a128 <gen_linktype+0x2e08>
    8870:	mov	r1, #1024	; 0x400
    8874:	lsl	r4, r1, r0
    8878:	mov	r0, r4
    887c:	bl	ed4 <malloc@plt>
    8880:	cmp	r0, #0
    8884:	str	r0, [r5, #12]
    8888:	beq	a128 <gen_linktype+0x2e08>
    888c:	mov	r1, #0
    8890:	mov	r2, r4
    8894:	add	r5, r5, #8
    8898:	bl	f40 <memset@plt>
    889c:	cmp	r4, #207	; 0xcf
    88a0:	str	r4, [r5]
    88a4:	bls	a128 <gen_linktype+0x2e08>
    88a8:	sub	r0, r4, #208	; 0xd0
    88ac:	str	r0, [r5]
    88b0:	ldr	r1, [r5, #4]
    88b4:	add	r4, r1, r0
    88b8:	mov	r0, #21
    88bc:	str	r8, [r4, #4]
    88c0:	str	r0, [r4, #8]
    88c4:	movw	r0, #17152	; 0x4300
    88c8:	movt	r0, #19783	; 0x4d47
    88cc:	str	r0, [r4, #20]
    88d0:	str	r4, [r4, #96]	; 0x60
    88d4:	b	87b4 <gen_linktype+0x1494>
    88d8:	mov	r5, #49	; 0x31
    88dc:	b	88fc <gen_linktype+0x15dc>
    88e0:	mov	r5, #33	; 0x21
    88e4:	b	88fc <gen_linktype+0x15dc>
    88e8:	mov	r5, #35	; 0x23
    88ec:	b	88fc <gen_linktype+0x15dc>
    88f0:	.word	0x0003fc0c
    88f4:	.word	0x0003fc00
    88f8:	mov	r5, #41	; 0x29
    88fc:	ldr	r1, [pc, #3952]	; 9874 <gen_linktype+0x2554>
    8900:	mov	r0, #2
    8904:	ldr	r1, [pc, r1]
    8908:	mov	r2, #8
    890c:	mov	r3, r5
    8910:	sub	sp, fp, #28
    8914:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    8918:	b	a9f8 <gen_cmp>
    891c:	mov	r0, r5
    8920:	sub	sp, fp, #28
    8924:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    8928:	b	1c2fc <gen_llc_linktype>
    892c:	.word	0x0003fbd4
    8930:	.word	0x0003fbbc
    8934:	.word	0x0003fb34
    8938:	.word	0x0003fb94
    893c:	.word	0x0003fb10
    8940:	.word	0x0003fa44
    8944:	.word	0x0003faa8
    8948:	.word	0x0003f984
    894c:	.word	0x0003fa34
    8950:	.word	0x0003fa1c
    8954:	.word	0x0003f994
    8958:	.word	0x0003f9f4
    895c:	mov	r0, #1
    8960:	mov	r1, #0
    8964:	mov	r2, #16
    8968:	bl	17a3c <gen_load_a>
    896c:	mov	r8, r0
    8970:	ldr	r0, [pc, #4052]	; 994c <gen_linktype+0x262c>
    8974:	ldr	r0, [pc, r0]
    8978:	ldr	r4, [pc, #4048]	; 9950 <gen_linktype+0x2630>
    897c:	add	r4, pc, r4
    8980:	mov	r7, r4
    8984:	ldr	r6, [r7, r0, lsl #3]!
    8988:	cmp	r6, #207	; 0xcf
    898c:	bhi	89e0 <gen_linktype+0x16c0>
    8990:	ldr	r2, [pc, #4028]	; 9954 <gen_linktype+0x2634>
    8994:	add	r1, r0, #1
    8998:	cmp	r0, #15
    899c:	add	r2, pc, r2
    89a0:	str	r1, [r2]
    89a4:	bge	a128 <gen_linktype+0x2e08>
    89a8:	mov	r0, #1024	; 0x400
    89ac:	lsl	r6, r0, r1
    89b0:	mov	r0, r6
    89b4:	bl	ed4 <malloc@plt>
    89b8:	cmp	r0, #0
    89bc:	str	r0, [r7, #12]
    89c0:	beq	a128 <gen_linktype+0x2e08>
    89c4:	mov	r1, #0
    89c8:	mov	r2, r6
    89cc:	add	r7, r7, #8
    89d0:	bl	f40 <memset@plt>
    89d4:	cmp	r6, #207	; 0xcf
    89d8:	str	r6, [r7]
    89dc:	bls	a128 <gen_linktype+0x2e08>
    89e0:	sub	r0, r6, #208	; 0xd0
    89e4:	mov	r9, #69	; 0x45
    89e8:	mov	r2, #16
    89ec:	str	r0, [r7]
    89f0:	ldr	r1, [r7, #4]
    89f4:	add	r7, r1, r0
    89f8:	mov	r0, #8
    89fc:	mov	r1, #0
    8a00:	str	r0, [r7, #20]
    8a04:	mov	r0, #1
    8a08:	stmib	r7, {r8, r9}
    8a0c:	str	r7, [r7, #96]	; 0x60
    8a10:	bl	17a3c <gen_load_a>
    8a14:	mov	r8, r0
    8a18:	ldr	r0, [pc, #3896]	; 9958 <gen_linktype+0x2638>
    8a1c:	ldr	r0, [pc, r0]
    8a20:	ldr	r6, [r4, r0, lsl #3]!
    8a24:	cmp	r6, #207	; 0xcf
    8a28:	bhi	8a7c <gen_linktype+0x175c>
    8a2c:	ldr	r2, [pc, #3880]	; 995c <gen_linktype+0x263c>
    8a30:	add	r1, r0, #1
    8a34:	cmp	r0, #15
    8a38:	add	r2, pc, r2
    8a3c:	str	r1, [r2]
    8a40:	bge	a128 <gen_linktype+0x2e08>
    8a44:	mov	r0, #1024	; 0x400
    8a48:	lsl	r6, r0, r1
    8a4c:	mov	r0, r6
    8a50:	bl	ed4 <malloc@plt>
    8a54:	cmp	r0, #0
    8a58:	str	r0, [r4, #12]
    8a5c:	beq	a128 <gen_linktype+0x2e08>
    8a60:	mov	r1, #0
    8a64:	mov	r2, r6
    8a68:	add	r4, r4, #8
    8a6c:	bl	f40 <memset@plt>
    8a70:	cmp	r6, #207	; 0xcf
    8a74:	str	r6, [r4]
    8a78:	bls	a128 <gen_linktype+0x2e08>
    8a7c:	sub	r0, r6, #208	; 0xd0
    8a80:	str	r0, [r4]
    8a84:	ldr	r1, [r4, #4]
    8a88:	adds	r0, r1, r0
    8a8c:	mov	r1, #4
    8a90:	str	r1, [r0, #20]
    8a94:	stmib	r0, {r8, r9}
    8a98:	ldr	r1, [r0, #44]	; 0x2c
    8a9c:	clz	r1, r1
    8aa0:	lsr	r1, r1, #5
    8aa4:	str	r1, [r0, #44]	; 0x2c
    8aa8:	str	r0, [r0, #96]	; 0x60
    8aac:	beq	8ae4 <gen_linktype+0x17c4>
    8ab0:	ldr	r1, [r7, #96]	; 0x60
    8ab4:	mov	r2, r0
    8ab8:	ldr	r3, [r2, #44]	; 0x2c
    8abc:	add	r6, r2, #84	; 0x54
    8ac0:	cmp	r3, #0
    8ac4:	mov	r3, #84	; 0x54
    8ac8:	movweq	r3, #60	; 0x3c
    8acc:	addeq	r6, r2, #60	; 0x3c
    8ad0:	ldr	r2, [r2, r3]
    8ad4:	str	r1, [r6]
    8ad8:	cmp	r2, #0
    8adc:	bne	8ab8 <gen_linktype+0x1798>
    8ae0:	ldr	r1, [r0, #44]	; 0x2c
    8ae4:	clz	r1, r1
    8ae8:	cmp	r7, #0
    8aec:	lsr	r1, r1, #5
    8af0:	str	r1, [r0, #44]	; 0x2c
    8af4:	ldr	r1, [r7, #44]	; 0x2c
    8af8:	clz	r2, r1
    8afc:	lsr	r2, r2, #5
    8b00:	str	r2, [r7, #44]	; 0x2c
    8b04:	str	r7, [sp, #12]
    8b08:	beq	8ccc <gen_linktype+0x19ac>
    8b0c:	mov	r3, #60	; 0x3c
    8b10:	cmp	r1, #0
    8b14:	mov	r2, r7
    8b18:	movweq	r3, #84	; 0x54
    8b1c:	ldr	r1, [r2, r3]!
    8b20:	cmp	r1, #0
    8b24:	beq	8cd0 <gen_linktype+0x19b0>
    8b28:	ldr	r3, [r1, #44]	; 0x2c
    8b2c:	add	r2, r1, #84	; 0x54
    8b30:	cmp	r3, #0
    8b34:	mov	r3, #84	; 0x54
    8b38:	movweq	r3, #60	; 0x3c
    8b3c:	addeq	r2, r1, #60	; 0x3c
    8b40:	ldr	r1, [r1, r3]
    8b44:	cmp	r1, #0
    8b48:	bne	8b28 <gen_linktype+0x1808>
    8b4c:	b	8cd0 <gen_linktype+0x19b0>
    8b50:	cmp	r5, #2048	; 0x800
    8b54:	bge	8c48 <gen_linktype+0x1928>
    8b58:	cmp	r5, #253	; 0xfd
    8b5c:	bgt	8e84 <gen_linktype+0x1b64>
    8b60:	cmp	r5, #66	; 0x42
    8b64:	beq	92e4 <gen_linktype+0x1fc4>
    8b68:	cmp	r5, #224	; 0xe0
    8b6c:	bne	92e8 <gen_linktype+0x1fc8>
    8b70:	ldr	r1, [pc, #3952]	; 9ae8 <gen_linktype+0x27c8>
    8b74:	mov	r5, #43	; 0x2b
    8b78:	ldr	r1, [pc, r1]
    8b7c:	b	9614 <gen_linktype+0x22f4>
    8b80:	.word	0x0003f970
    8b84:	.word	0x0003f8a4
    8b88:	.word	0x0003f908
    8b8c:	movw	r0, #34525	; 0x86dd
    8b90:	cmp	r5, r0
    8b94:	beq	8dd8 <gen_linktype+0x1ab8>
    8b98:	cmp	r5, #2048	; 0x800
    8b9c:	bne	92d4 <gen_linktype+0x1fb4>
    8ba0:	mov	r0, #1
    8ba4:	mov	r1, #0
    8ba8:	mov	r2, #16
    8bac:	bl	17a3c <gen_load_a>
    8bb0:	mov	r8, r0
    8bb4:	ldr	r0, [pc, #3888]	; 9aec <gen_linktype+0x27cc>
    8bb8:	ldr	r0, [pc, r0]
    8bbc:	ldr	r5, [pc, #3884]	; 9af0 <gen_linktype+0x27d0>
    8bc0:	add	r5, pc, r5
    8bc4:	mov	r6, r5
    8bc8:	ldr	r4, [r6, r0, lsl #3]!
    8bcc:	cmp	r4, #19
    8bd0:	bhi	92fc <gen_linktype+0x1fdc>
    8bd4:	ldr	r1, [pc, #3864]	; 9af4 <gen_linktype+0x27d4>
    8bd8:	add	r7, r0, #1
    8bdc:	cmp	r0, #15
    8be0:	add	r1, pc, r1
    8be4:	str	r7, [r1]
    8be8:	bge	a128 <gen_linktype+0x2e08>
    8bec:	mov	r0, #1024	; 0x400
    8bf0:	lsl	r4, r0, r7
    8bf4:	mov	r0, r4
    8bf8:	bl	ed4 <malloc@plt>
    8bfc:	cmp	r0, #0
    8c00:	str	r0, [r6, #12]
    8c04:	beq	a128 <gen_linktype+0x2e08>
    8c08:	mov	r1, #0
    8c0c:	mov	r2, r4
    8c10:	add	r6, r6, #8
    8c14:	bl	f40 <memset@plt>
    8c18:	cmp	r4, #19
    8c1c:	str	r4, [r6]
    8c20:	bhi	9300 <gen_linktype+0x1fe0>
    8c24:	b	a128 <gen_linktype+0x2e08>
    8c28:	cmp	r5, #2048	; 0x800
    8c2c:	beq	8e64 <gen_linktype+0x1b44>
    8c30:	movw	r1, #34525	; 0x86dd
    8c34:	cmp	r5, r1
    8c38:	bne	92d4 <gen_linktype+0x1fb4>
    8c3c:	mov	r3, #10
    8c40:	b	8e68 <gen_linktype+0x1b48>
    8c44:	.word	0x0003f7e4
    8c48:	movw	r0, #32922	; 0x809a
    8c4c:	cmp	r5, r0
    8c50:	bgt	8ea4 <gen_linktype+0x1b84>
    8c54:	cmp	r5, #2048	; 0x800
    8c58:	beq	95e4 <gen_linktype+0x22c4>
    8c5c:	movw	r0, #24579	; 0x6003
    8c60:	cmp	r5, r0
    8c64:	bne	92e8 <gen_linktype+0x1fc8>
    8c68:	ldr	r1, [pc, #4036]	; 9c34 <gen_linktype+0x2914>
    8c6c:	mov	r5, #39	; 0x27
    8c70:	ldr	r1, [pc, r1]
    8c74:	b	9614 <gen_linktype+0x22f4>
    8c78:	.word	0x0003f7dc
    8c7c:	.word	0x0003f83c
    8c80:	movw	r0, #32820	; 0x8034
    8c84:	cmp	r5, r0
    8c88:	ble	91ec <gen_linktype+0x1ecc>
    8c8c:	movw	r0, #32821	; 0x8035
    8c90:	cmp	r5, r0
    8c94:	beq	9638 <gen_linktype+0x2318>
    8c98:	movw	r0, #32923	; 0x809b
    8c9c:	cmp	r5, r0
    8ca0:	beq	9650 <gen_linktype+0x2330>
    8ca4:	movw	r0, #34525	; 0x86dd
    8ca8:	cmp	r5, r0
    8cac:	bne	92d4 <gen_linktype+0x1fb4>
    8cb0:	ldr	r1, [pc, #4060]	; 9c94 <gen_linktype+0x2974>
    8cb4:	mov	r0, #1
    8cb8:	mov	r2, #16
    8cbc:	mov	r3, #196	; 0xc4
    8cc0:	ldr	r1, [pc, r1]
    8cc4:	b	8910 <gen_linktype+0x15f0>
    8cc8:	.word	0x0003f7a0
    8ccc:	add	r2, sp, #12
    8cd0:	str	r0, [r2]
    8cd4:	ldr	r1, [r7, #44]	; 0x2c
    8cd8:	clz	r1, r1
    8cdc:	lsr	r1, r1, #5
    8ce0:	str	r1, [r7, #44]	; 0x2c
    8ce4:	ldr	r0, [r0, #96]	; 0x60
    8ce8:	str	r0, [r7, #96]	; 0x60
    8cec:	mov	r0, r5
    8cf0:	bl	1c2fc <gen_llc_linktype>
    8cf4:	mov	r4, r0
    8cf8:	cmp	r7, #0
    8cfc:	beq	8d30 <gen_linktype+0x1a10>
    8d00:	ldr	r0, [r4, #96]	; 0x60
    8d04:	mov	r1, r7
    8d08:	ldr	r2, [r1, #44]	; 0x2c
    8d0c:	add	r3, r1, #84	; 0x54
    8d10:	cmp	r2, #0
    8d14:	mov	r2, #84	; 0x54
    8d18:	movweq	r2, #60	; 0x3c
    8d1c:	addeq	r3, r1, #60	; 0x3c
    8d20:	ldr	r1, [r1, r2]
    8d24:	str	r0, [r3]
    8d28:	cmp	r1, #0
    8d2c:	bne	8d08 <gen_linktype+0x19e8>
    8d30:	ldr	r0, [r7, #44]	; 0x2c
    8d34:	cmp	r4, #0
    8d38:	clz	r0, r0
    8d3c:	lsr	r0, r0, #5
    8d40:	str	r0, [r7, #44]	; 0x2c
    8d44:	ldr	r1, [r4, #44]	; 0x2c
    8d48:	clz	r0, r1
    8d4c:	lsr	r0, r0, #5
    8d50:	str	r0, [r4, #44]	; 0x2c
    8d54:	str	r4, [sp, #12]
    8d58:	beq	8da4 <gen_linktype+0x1a84>
    8d5c:	cmp	r1, #0
    8d60:	mov	r1, #60	; 0x3c
    8d64:	add	r0, r4, #60	; 0x3c
    8d68:	movweq	r1, #84	; 0x54
    8d6c:	addeq	r0, r4, #84	; 0x54
    8d70:	ldr	r1, [r4, r1]
    8d74:	cmp	r1, #0
    8d78:	beq	8da8 <gen_linktype+0x1a88>
    8d7c:	ldr	r2, [r1, #44]	; 0x2c
    8d80:	add	r0, r1, #84	; 0x54
    8d84:	cmp	r2, #0
    8d88:	mov	r2, #84	; 0x54
    8d8c:	movweq	r2, #60	; 0x3c
    8d90:	addeq	r0, r1, #60	; 0x3c
    8d94:	ldr	r1, [r1, r2]
    8d98:	cmp	r1, #0
    8d9c:	bne	8d7c <gen_linktype+0x1a5c>
    8da0:	b	8da8 <gen_linktype+0x1a88>
    8da4:	add	r0, sp, #12
    8da8:	str	r7, [r0]
    8dac:	ldr	r0, [r4, #44]	; 0x2c
    8db0:	clz	r0, r0
    8db4:	lsr	r0, r0, #5
    8db8:	str	r0, [r4, #44]	; 0x2c
    8dbc:	ldr	r0, [r7, #96]	; 0x60
    8dc0:	b	87b0 <gen_linktype+0x1490>
    8dc4:	.word	0x0003f728
    8dc8:	.word	0x0003f718
    8dcc:	.word	0x0003f710
    8dd0:	.word	0x0003f708
    8dd4:	.word	0x0003f6c4
    8dd8:	mov	r0, #1
    8ddc:	mov	r1, #0
    8de0:	mov	r2, #16
    8de4:	bl	17a3c <gen_load_a>
    8de8:	mov	r8, r0
    8dec:	ldr	r0, [pc, #4080]	; 9de4 <gen_linktype+0x2ac4>
    8df0:	ldr	r0, [pc, r0]
    8df4:	ldr	r5, [pc, #4092]	; 9df8 <gen_linktype+0x2ad8>
    8df8:	add	r5, pc, r5
    8dfc:	mov	r6, r5
    8e00:	ldr	r4, [r6, r0, lsl #3]!
    8e04:	cmp	r4, #19
    8e08:	bhi	93c4 <gen_linktype+0x20a4>
    8e0c:	ldr	r1, [pc, #4072]	; 9dfc <gen_linktype+0x2adc>
    8e10:	add	r7, r0, #1
    8e14:	cmp	r0, #15
    8e18:	add	r1, pc, r1
    8e1c:	str	r7, [r1]
    8e20:	bge	a128 <gen_linktype+0x2e08>
    8e24:	mov	r0, #1024	; 0x400
    8e28:	lsl	r4, r0, r7
    8e2c:	mov	r0, r4
    8e30:	bl	ed4 <malloc@plt>
    8e34:	cmp	r0, #0
    8e38:	str	r0, [r6, #12]
    8e3c:	beq	a128 <gen_linktype+0x2e08>
    8e40:	mov	r1, #0
    8e44:	mov	r2, r4
    8e48:	add	r6, r6, #8
    8e4c:	bl	f40 <memset@plt>
    8e50:	cmp	r4, #19
    8e54:	str	r4, [r6]
    8e58:	bhi	93c8 <gen_linktype+0x20a8>
    8e5c:	b	a128 <gen_linktype+0x2e08>
    8e60:	.word	0x0003f694
    8e64:	mov	r3, #2
    8e68:	cmp	r0, #109	; 0x6d
    8e6c:	mov	r1, #0
    8e70:	mov	r2, #0
    8e74:	cmpne	r0, #0
    8e78:	mov	r0, #1
    8e7c:	reveq	r3, r3
    8e80:	b	8910 <gen_linktype+0x15f0>
    8e84:	cmp	r5, #254	; 0xfe
    8e88:	beq	95f4 <gen_linktype+0x22d4>
    8e8c:	cmp	r5, #1536	; 0x600
    8e90:	bne	92e8 <gen_linktype+0x1fc8>
    8e94:	ldr	r1, [pc, #3992]	; 9e34 <gen_linktype+0x2b14>
    8e98:	mov	r5, #37	; 0x25
    8e9c:	ldr	r1, [pc, r1]
    8ea0:	b	9614 <gen_linktype+0x22f4>
    8ea4:	movw	r0, #32923	; 0x809b
    8ea8:	cmp	r5, r0
    8eac:	beq	9608 <gen_linktype+0x22e8>
    8eb0:	movw	r0, #34525	; 0x86dd
    8eb4:	cmp	r5, r0
    8eb8:	bne	92e8 <gen_linktype+0x1fc8>
    8ebc:	ldr	r1, [pc, #4068]	; 9ea8 <gen_linktype+0x2b88>
    8ec0:	mov	r5, #87	; 0x57
    8ec4:	ldr	r1, [pc, r1]
    8ec8:	b	9614 <gen_linktype+0x22f4>
    8ecc:	.word	0x0003f604
    8ed0:	movw	r0, #34525	; 0x86dd
    8ed4:	cmp	r5, r0
    8ed8:	beq	9620 <gen_linktype+0x2300>
    8edc:	cmp	r5, #2048	; 0x800
    8ee0:	bne	92d4 <gen_linktype+0x1fb4>
    8ee4:	ldr	r1, [pc, #4032]	; 9eac <gen_linktype+0x2b8c>
    8ee8:	mov	r0, #1
    8eec:	mov	r2, #16
    8ef0:	mov	r3, #2
    8ef4:	ldr	r1, [pc, r1]
    8ef8:	b	8910 <gen_linktype+0x15f0>
    8efc:	.word	0x0003f59c
    8f00:	.word	0x0003f478
    8f04:	ldr	r0, [pc, #4004]	; 9eb0 <gen_linktype+0x2b90>
    8f08:	add	r0, pc, r0
    8f0c:	ldrb	r0, [r0]
    8f10:	cmp	r0, #1
    8f14:	bne	947c <gen_linktype+0x215c>
    8f18:	mov	r0, #1
    8f1c:	mov	r1, #4
    8f20:	mov	r2, #8
    8f24:	mov	r3, #65280	; 0xff00
    8f28:	bl	a9f8 <gen_cmp>
    8f2c:	mov	r6, r0
    8f30:	ldr	r0, [r0, #44]	; 0x2c
    8f34:	clz	r0, r0
    8f38:	lsr	r0, r0, #5
    8f3c:	str	r0, [r6, #44]	; 0x2c
    8f40:	mov	r0, r5
    8f44:	bl	1bb0c <gen_ether_linktype>
    8f48:	mov	r4, r0
    8f4c:	cmp	r6, #0
    8f50:	beq	8f84 <gen_linktype+0x1c64>
    8f54:	ldr	r0, [r4, #96]	; 0x60
    8f58:	mov	r1, r6
    8f5c:	ldr	r2, [r1, #44]	; 0x2c
    8f60:	add	r3, r1, #84	; 0x54
    8f64:	cmp	r2, #0
    8f68:	mov	r2, #84	; 0x54
    8f6c:	movweq	r2, #60	; 0x3c
    8f70:	addeq	r3, r1, #60	; 0x3c
    8f74:	ldr	r1, [r1, r2]
    8f78:	str	r0, [r3]
    8f7c:	cmp	r1, #0
    8f80:	bne	8f5c <gen_linktype+0x1c3c>
    8f84:	ldr	r0, [r6, #44]	; 0x2c
    8f88:	cmp	r4, #0
    8f8c:	clz	r0, r0
    8f90:	lsr	r0, r0, #5
    8f94:	str	r0, [r6, #44]	; 0x2c
    8f98:	ldr	r1, [r4, #44]	; 0x2c
    8f9c:	clz	r0, r1
    8fa0:	lsr	r0, r0, #5
    8fa4:	str	r0, [r4, #44]	; 0x2c
    8fa8:	str	r4, [sp, #12]
    8fac:	beq	9a58 <gen_linktype+0x2738>
    8fb0:	cmp	r1, #0
    8fb4:	mov	r1, #60	; 0x3c
    8fb8:	add	r0, r4, #60	; 0x3c
    8fbc:	movweq	r1, #84	; 0x54
    8fc0:	addeq	r0, r4, #84	; 0x54
    8fc4:	ldr	r1, [r4, r1]
    8fc8:	cmp	r1, #0
    8fcc:	beq	9a5c <gen_linktype+0x273c>
    8fd0:	ldr	r2, [r1, #44]	; 0x2c
    8fd4:	add	r0, r1, #84	; 0x54
    8fd8:	cmp	r2, #0
    8fdc:	mov	r2, #84	; 0x54
    8fe0:	movweq	r2, #60	; 0x3c
    8fe4:	addeq	r0, r1, #60	; 0x3c
    8fe8:	ldr	r1, [r1, r2]
    8fec:	cmp	r1, #0
    8ff0:	bne	8fd0 <gen_linktype+0x1cb0>
    8ff4:	b	9a5c <gen_linktype+0x273c>
    8ff8:	ldr	r1, [pc, #4044]	; 9fcc <gen_linktype+0x2cac>
    8ffc:	ldr	r1, [pc, r1]
    9000:	cmn	r1, #1
    9004:	bne	9614 <gen_linktype+0x22f4>
    9008:	bl	fc4 <abort@plt>
    900c:	.word	0x0003f46c
    9010:	.word	0x0003f4cc
    9014:	cmp	r5, #2048	; 0x800
    9018:	bge	954c <gen_linktype+0x222c>
    901c:	cmp	r5, #253	; 0xfd
    9020:	bgt	9738 <gen_linktype+0x2418>
    9024:	cmp	r5, #66	; 0x42
    9028:	beq	92e4 <gen_linktype+0x1fc4>
    902c:	cmp	r5, #224	; 0xe0
    9030:	bne	92e8 <gen_linktype+0x1fc8>
    9034:	ldr	r1, [pc, #3988]	; 9fd0 <gen_linktype+0x2cb0>
    9038:	mov	r5, #43	; 0x2b
    903c:	ldr	r1, [pc, r1]
    9040:	b	9614 <gen_linktype+0x22f4>
    9044:	mov	r0, r5
    9048:	sub	sp, fp, #28
    904c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    9050:	b	1bb0c <gen_ether_linktype>
    9054:	.word	0x0003f430
    9058:	.word	0x0003f3b8
    905c:	cmp	r5, #253	; 0xfd
    9060:	bgt	9584 <gen_linktype+0x2264>
    9064:	cmp	r5, #6
    9068:	beq	907c <gen_linktype+0x1d5c>
    906c:	cmp	r5, #224	; 0xe0
    9070:	beq	9a78 <gen_linktype+0x2758>
    9074:	cmp	r5, #240	; 0xf0
    9078:	bne	9968 <gen_linktype+0x2648>
    907c:	ldr	r1, [pc, #4048]	; a054 <gen_linktype+0x2d34>
    9080:	mov	r0, #1
    9084:	mov	r2, #8
    9088:	mov	r3, #4
    908c:	ldr	r1, [pc, r1]
    9090:	bl	a9f8 <gen_cmp>
    9094:	mov	r6, r0
    9098:	orr	r3, r5, r5, lsl #8
    909c:	mov	r0, #2
    90a0:	mov	r1, #0
    90a4:	mov	r2, #8
    90a8:	bl	a9f8 <gen_cmp>
    90ac:	mov	r4, r0
    90b0:	cmp	r6, #0
    90b4:	beq	90e8 <gen_linktype+0x1dc8>
    90b8:	ldr	r0, [r4, #96]	; 0x60
    90bc:	mov	r1, r6
    90c0:	ldr	r2, [r1, #44]	; 0x2c
    90c4:	add	r3, r1, #84	; 0x54
    90c8:	cmp	r2, #0
    90cc:	mov	r2, #84	; 0x54
    90d0:	movweq	r2, #60	; 0x3c
    90d4:	addeq	r3, r1, #60	; 0x3c
    90d8:	ldr	r1, [r1, r2]
    90dc:	str	r0, [r3]
    90e0:	cmp	r1, #0
    90e4:	bne	90c0 <gen_linktype+0x1da0>
    90e8:	ldr	r0, [r6, #44]	; 0x2c
    90ec:	cmp	r4, #0
    90f0:	clz	r0, r0
    90f4:	lsr	r0, r0, #5
    90f8:	str	r0, [r6, #44]	; 0x2c
    90fc:	ldr	r1, [r4, #44]	; 0x2c
    9100:	clz	r0, r1
    9104:	lsr	r0, r0, #5
    9108:	str	r0, [r4, #44]	; 0x2c
    910c:	str	r4, [sp, #12]
    9110:	beq	9a58 <gen_linktype+0x2738>
    9114:	cmp	r1, #0
    9118:	mov	r1, #60	; 0x3c
    911c:	add	r0, r4, #60	; 0x3c
    9120:	movweq	r1, #84	; 0x54
    9124:	addeq	r0, r4, #84	; 0x54
    9128:	ldr	r1, [r4, r1]
    912c:	cmp	r1, #0
    9130:	beq	9a5c <gen_linktype+0x273c>
    9134:	ldr	r2, [r1, #44]	; 0x2c
    9138:	add	r0, r1, #84	; 0x54
    913c:	cmp	r2, #0
    9140:	mov	r2, #84	; 0x54
    9144:	movweq	r2, #60	; 0x3c
    9148:	addeq	r0, r1, #60	; 0x3c
    914c:	ldr	r1, [r1, r2]
    9150:	cmp	r1, #0
    9154:	bne	9134 <gen_linktype+0x1e14>
    9158:	b	9a5c <gen_linktype+0x273c>
    915c:	.word	0x0003f3a8
    9160:	.word	0x0003f3a0
    9164:	.word	0x0003f398
    9168:	movw	r0, #32923	; 0x809b
    916c:	cmp	r5, r0
    9170:	beq	91e4 <gen_linktype+0x1ec4>
    9174:	b	92d4 <gen_linktype+0x1fb4>
    9178:	movw	r0, #34525	; 0x86dd
    917c:	cmp	r5, r0
    9180:	beq	91e4 <gen_linktype+0x1ec4>
    9184:	b	92d4 <gen_linktype+0x1fb4>
    9188:	ldr	r1, [pc, #4088]	; a188 <gen_linktype+0x2e68>
    918c:	mov	r0, #254	; 0xfe
    9190:	cmp	r5, #254	; 0xfe
    9194:	orreq	r5, r0, r5, lsl #8
    9198:	ldr	r1, [pc, r1]
    919c:	b	9614 <gen_linktype+0x22f4>
    91a0:	.word	0x000228ad
    91a4:	.word	0x0003f34c
    91a8:	cmp	r5, #254	; 0xfe
    91ac:	beq	9794 <gen_linktype+0x2474>
    91b0:	movw	r0, #34525	; 0x86dd
    91b4:	cmp	r5, r0
    91b8:	beq	9780 <gen_linktype+0x2460>
    91bc:	cmp	r5, #2048	; 0x800
    91c0:	bne	92d4 <gen_linktype+0x1fb4>
    91c4:	mov	r0, #1
    91c8:	mov	r1, #2
    91cc:	mov	r2, #8
    91d0:	mov	r3, #972	; 0x3cc
    91d4:	b	8910 <gen_linktype+0x15f0>
    91d8:	.word	0x0003f31c
    91dc:	cmp	r5, #2048	; 0x800
    91e0:	bne	92d4 <gen_linktype+0x1fb4>
    91e4:	mov	r0, #1
    91e8:	b	92d8 <gen_linktype+0x1fb8>
    91ec:	cmp	r5, #2048	; 0x800
    91f0:	beq	966c <gen_linktype+0x234c>
    91f4:	movw	r0, #2054	; 0x806
    91f8:	cmp	r5, r0
    91fc:	bne	92d4 <gen_linktype+0x1fb4>
    9200:	ldr	r1, [pc, #4080]	; a1f8 <gen_linktype+0x2ed8>
    9204:	mov	r0, #1
    9208:	mov	r2, #16
    920c:	mov	r3, #213	; 0xd5
    9210:	ldr	r1, [pc, r1]
    9214:	bl	a9f8 <gen_cmp>
    9218:	ldr	r1, [pc, #4060]	; a1fc <gen_linktype+0x2edc>
    921c:	mov	r5, r0
    9220:	mov	r0, #1
    9224:	mov	r2, #16
    9228:	mov	r3, #241	; 0xf1
    922c:	ldr	r1, [pc, r1]
    9230:	bl	a9f8 <gen_cmp>
    9234:	mov	r4, r0
    9238:	ldr	r0, [r5, #44]	; 0x2c
    923c:	cmp	r5, #0
    9240:	clz	r0, r0
    9244:	lsr	r0, r0, #5
    9248:	str	r0, [r5, #44]	; 0x2c
    924c:	beq	928c <gen_linktype+0x1f6c>
    9250:	ldr	r1, [r4, #96]	; 0x60
    9254:	mov	r2, r5
    9258:	b	9264 <gen_linktype+0x1f44>
    925c:	.word	0x0003f28c
    9260:	ldr	r0, [r2, #44]	; 0x2c
    9264:	cmp	r0, #0
    9268:	mov	r0, #84	; 0x54
    926c:	add	r3, r2, #84	; 0x54
    9270:	movweq	r0, #60	; 0x3c
    9274:	addeq	r3, r2, #60	; 0x3c
    9278:	ldr	r2, [r2, r0]
    927c:	str	r1, [r3]
    9280:	cmp	r2, #0
    9284:	bne	9260 <gen_linktype+0x1f40>
    9288:	ldr	r0, [r5, #44]	; 0x2c
    928c:	clz	r0, r0
    9290:	cmp	r4, #0
    9294:	lsr	r0, r0, #5
    9298:	str	r0, [r5, #44]	; 0x2c
    929c:	str	r4, [sp, #12]
    92a0:	beq	a118 <gen_linktype+0x2df8>
    92a4:	mov	r1, r4
    92a8:	ldr	r2, [r1, #44]	; 0x2c
    92ac:	add	r0, r1, #84	; 0x54
    92b0:	cmp	r2, #0
    92b4:	mov	r2, #84	; 0x54
    92b8:	movweq	r2, #60	; 0x3c
    92bc:	addeq	r0, r1, #60	; 0x3c
    92c0:	ldr	r1, [r1, r2]
    92c4:	cmp	r1, #0
    92c8:	bne	92a8 <gen_linktype+0x1f88>
    92cc:	b	a11c <gen_linktype+0x2dfc>
    92d0:	.word	0x0003f224
    92d4:	mov	r0, #0
    92d8:	sub	sp, fp, #28
    92dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    92e0:	b	1c710 <gen_uncond>
    92e4:	mov	r5, #49	; 0x31
    92e8:	ldr	r1, [pc, #3904]	; a230 <gen_linktype+0x2f10>
    92ec:	ldr	r1, [pc, r1]
    92f0:	b	9614 <gen_linktype+0x22f4>
    92f4:	.word	0x0003f0fc
    92f8:	.word	0x0003f0d0
    92fc:	mov	r7, r0
    9300:	sub	r1, r4, #20
    9304:	mov	r2, #84	; 0x54
    9308:	str	r1, [r6]
    930c:	ldr	r0, [r6, #4]
    9310:	str	r2, [r0, r1]!
    9314:	mov	r1, #240	; 0xf0
    9318:	mov	r2, r8
    931c:	str	r1, [r0, #12]
    9320:	mov	r1, r2
    9324:	ldr	r2, [r2, #16]
    9328:	cmp	r2, #0
    932c:	bne	9320 <gen_linktype+0x2000>
    9330:	str	r0, [r1, #16]
    9334:	ldr	r4, [r5, r7, lsl #3]!
    9338:	cmp	r4, #207	; 0xcf
    933c:	bhi	9390 <gen_linktype+0x2070>
    9340:	ldr	r1, [pc, #3800]	; a220 <gen_linktype+0x2f00>
    9344:	add	r0, r7, #1
    9348:	cmp	r7, #15
    934c:	add	r1, pc, r1
    9350:	str	r0, [r1]
    9354:	bge	a128 <gen_linktype+0x2e08>
    9358:	mov	r1, #1024	; 0x400
    935c:	lsl	r4, r1, r0
    9360:	mov	r0, r4
    9364:	bl	ed4 <malloc@plt>
    9368:	cmp	r0, #0
    936c:	str	r0, [r5, #12]
    9370:	beq	a128 <gen_linktype+0x2e08>
    9374:	mov	r1, #0
    9378:	mov	r2, r4
    937c:	add	r5, r5, #8
    9380:	bl	f40 <memset@plt>
    9384:	cmp	r4, #207	; 0xcf
    9388:	str	r4, [r5]
    938c:	bls	a128 <gen_linktype+0x2e08>
    9390:	sub	r0, r4, #208	; 0xd0
    9394:	str	r0, [r5]
    9398:	ldr	r1, [r5, #4]
    939c:	add	r4, r1, r0
    93a0:	mov	r0, #21
    93a4:	str	r8, [r4, #4]
    93a8:	str	r0, [r4, #8]
    93ac:	mov	r0, #64	; 0x40
    93b0:	b	88cc <gen_linktype+0x15ac>
    93b4:	.word	0x0003f134
    93b8:	.word	0x0003f08c
    93bc:	.word	0x0003f058
    93c0:	.word	0x0003f088
    93c4:	mov	r7, r0
    93c8:	sub	r1, r4, #20
    93cc:	mov	r2, #84	; 0x54
    93d0:	str	r1, [r6]
    93d4:	ldr	r0, [r6, #4]
    93d8:	str	r2, [r0, r1]!
    93dc:	mov	r1, #240	; 0xf0
    93e0:	mov	r2, r8
    93e4:	str	r1, [r0, #12]
    93e8:	mov	r1, r2
    93ec:	ldr	r2, [r2, #16]
    93f0:	cmp	r2, #0
    93f4:	bne	93e8 <gen_linktype+0x20c8>
    93f8:	str	r0, [r1, #16]
    93fc:	ldr	r4, [r5, r7, lsl #3]!
    9400:	cmp	r4, #207	; 0xcf
    9404:	bhi	9458 <gen_linktype+0x2138>
    9408:	ldr	r1, [pc, #3604]	; a224 <gen_linktype+0x2f04>
    940c:	add	r0, r7, #1
    9410:	cmp	r7, #15
    9414:	add	r1, pc, r1
    9418:	str	r0, [r1]
    941c:	bge	a128 <gen_linktype+0x2e08>
    9420:	mov	r1, #1024	; 0x400
    9424:	lsl	r4, r1, r0
    9428:	mov	r0, r4
    942c:	bl	ed4 <malloc@plt>
    9430:	cmp	r0, #0
    9434:	str	r0, [r5, #12]
    9438:	beq	a128 <gen_linktype+0x2e08>
    943c:	mov	r1, #0
    9440:	mov	r2, r4
    9444:	add	r5, r5, #8
    9448:	bl	f40 <memset@plt>
    944c:	cmp	r4, #207	; 0xcf
    9450:	str	r4, [r5]
    9454:	bls	a128 <gen_linktype+0x2e08>
    9458:	sub	r0, r4, #208	; 0xd0
    945c:	str	r0, [r5]
    9460:	ldr	r1, [r5, #4]
    9464:	add	r4, r1, r0
    9468:	mov	r0, #21
    946c:	str	r8, [r4, #4]
    9470:	str	r0, [r4, #8]
    9474:	mov	r0, #96	; 0x60
    9478:	b	88cc <gen_linktype+0x15ac>
    947c:	mov	r0, #53	; 0x35
    9480:	mov	r1, #2
    9484:	mov	r2, #16
    9488:	mov	r3, #0
    948c:	bl	19400 <sf_gen_atmfield_code>
    9490:	mov	r6, r0
    9494:	mov	r0, r5
    9498:	bl	1c2fc <gen_llc_linktype>
    949c:	mov	r4, r0
    94a0:	cmp	r6, #0
    94a4:	beq	94d8 <gen_linktype+0x21b8>
    94a8:	ldr	r0, [r4, #96]	; 0x60
    94ac:	mov	r1, r6
    94b0:	ldr	r2, [r1, #44]	; 0x2c
    94b4:	add	r3, r1, #84	; 0x54
    94b8:	cmp	r2, #0
    94bc:	mov	r2, #84	; 0x54
    94c0:	movweq	r2, #60	; 0x3c
    94c4:	addeq	r3, r1, #60	; 0x3c
    94c8:	ldr	r1, [r1, r2]
    94cc:	str	r0, [r3]
    94d0:	cmp	r1, #0
    94d4:	bne	94b0 <gen_linktype+0x2190>
    94d8:	ldr	r0, [r6, #44]	; 0x2c
    94dc:	cmp	r4, #0
    94e0:	clz	r0, r0
    94e4:	lsr	r0, r0, #5
    94e8:	str	r0, [r6, #44]	; 0x2c
    94ec:	ldr	r1, [r4, #44]	; 0x2c
    94f0:	clz	r0, r1
    94f4:	lsr	r0, r0, #5
    94f8:	str	r0, [r4, #44]	; 0x2c
    94fc:	str	r4, [sp, #12]
    9500:	beq	9a58 <gen_linktype+0x2738>
    9504:	cmp	r1, #0
    9508:	mov	r1, #60	; 0x3c
    950c:	add	r0, r4, #60	; 0x3c
    9510:	movweq	r1, #84	; 0x54
    9514:	addeq	r0, r4, #84	; 0x54
    9518:	ldr	r1, [r4, r1]
    951c:	cmp	r1, #0
    9520:	beq	9a5c <gen_linktype+0x273c>
    9524:	ldr	r2, [r1, #44]	; 0x2c
    9528:	add	r0, r1, #84	; 0x54
    952c:	cmp	r2, #0
    9530:	mov	r2, #84	; 0x54
    9534:	movweq	r2, #60	; 0x3c
    9538:	addeq	r0, r1, #60	; 0x3c
    953c:	ldr	r1, [r1, r2]
    9540:	cmp	r1, #0
    9544:	bne	9524 <gen_linktype+0x2204>
    9548:	b	9a5c <gen_linktype+0x273c>
    954c:	movw	r0, #32922	; 0x809a
    9550:	cmp	r5, r0
    9554:	bgt	9758 <gen_linktype+0x2438>
    9558:	cmp	r5, #2048	; 0x800
    955c:	beq	9d08 <gen_linktype+0x29e8>
    9560:	movw	r0, #24579	; 0x6003
    9564:	cmp	r5, r0
    9568:	bne	92e8 <gen_linktype+0x1fc8>
    956c:	ldr	r1, [pc, #3268]	; a238 <gen_linktype+0x2f18>
    9570:	mov	r5, #39	; 0x27
    9574:	ldr	r1, [pc, r1]
    9578:	b	9614 <gen_linktype+0x22f4>
    957c:	.word	0x0003eebc
    9580:	.word	0x0003ef20
    9584:	movw	r0, #33011	; 0x80f3
    9588:	cmp	r5, r0
    958c:	movwne	r0, #32923	; 0x809b
    9590:	cmpne	r5, r0
    9594:	bne	9960 <gen_linktype+0x2640>
    9598:	ldr	r1, [pc, #3192]	; a218 <gen_linktype+0x2ef8>
    959c:	mov	r0, #1
    95a0:	mov	r2, #8
    95a4:	mov	r3, #4
    95a8:	ldr	r1, [pc, r1]
    95ac:	bl	a9f8 <gen_cmp>
    95b0:	mov	r6, r0
    95b4:	mov	r0, #3
    95b8:	strb	r0, [sp, #14]
    95bc:	movw	r0, #43690	; 0xaaaa
    95c0:	strh	r0, [sp, #12]
    95c4:	movw	r0, #32923	; 0x809b
    95c8:	cmp	r5, r0
    95cc:	bne	9878 <gen_linktype+0x2558>
    95d0:	mov	r0, #155	; 0x9b
    95d4:	strb	r0, [sp, #19]
    95d8:	movw	r0, #8
    95dc:	movt	r0, #32775	; 0x8007
    95e0:	b	9884 <gen_linktype+0x2564>
    95e4:	ldr	r1, [pc, #3260]	; a2a8 <gen_linktype+0x2f88>
    95e8:	mov	r5, #33	; 0x21
    95ec:	ldr	r1, [pc, r1]
    95f0:	b	9614 <gen_linktype+0x22f4>
    95f4:	ldr	r1, [pc, #3120]	; a22c <gen_linktype+0x2f0c>
    95f8:	mov	r5, #35	; 0x23
    95fc:	ldr	r1, [pc, r1]
    9600:	b	9614 <gen_linktype+0x22f4>
    9604:	.word	0x0003ee78
    9608:	ldr	r1, [pc, #3096]	; a228 <gen_linktype+0x2f08>
    960c:	mov	r5, #41	; 0x29
    9610:	ldr	r1, [pc, r1]
    9614:	mov	r0, #1
    9618:	b	8908 <gen_linktype+0x15e8>
    961c:	.word	0x0003ee48
    9620:	ldr	r1, [pc, #3136]	; a268 <gen_linktype+0x2f48>
    9624:	mov	r0, #1
    9628:	mov	r2, #16
    962c:	mov	r3, #26
    9630:	ldr	r1, [pc, r1]
    9634:	b	8910 <gen_linktype+0x15f0>
    9638:	ldr	r1, [pc, #3100]	; a25c <gen_linktype+0x2f3c>
    963c:	mov	r0, #1
    9640:	mov	r2, #16
    9644:	mov	r3, #214	; 0xd6
    9648:	ldr	r1, [pc, r1]
    964c:	b	8910 <gen_linktype+0x15f0>
    9650:	ldr	r1, [pc, #3080]	; a260 <gen_linktype+0x2f40>
    9654:	mov	r0, #1
    9658:	mov	r2, #16
    965c:	mov	r3, #221	; 0xdd
    9660:	ldr	r1, [pc, r1]
    9664:	b	8910 <gen_linktype+0x15f0>
    9668:	.word	0x0003ee78
    966c:	ldr	r1, [pc, #3040]	; a254 <gen_linktype+0x2f34>
    9670:	mov	r0, #1
    9674:	mov	r2, #16
    9678:	mov	r3, #212	; 0xd4
    967c:	ldr	r1, [pc, r1]
    9680:	bl	a9f8 <gen_cmp>
    9684:	ldr	r1, [pc, #3020]	; a258 <gen_linktype+0x2f38>
    9688:	mov	r5, r0
    968c:	mov	r0, #1
    9690:	mov	r2, #16
    9694:	mov	r3, #240	; 0xf0
    9698:	ldr	r1, [pc, r1]
    969c:	bl	a9f8 <gen_cmp>
    96a0:	mov	r4, r0
    96a4:	ldr	r0, [r5, #44]	; 0x2c
    96a8:	cmp	r5, #0
    96ac:	clz	r0, r0
    96b0:	lsr	r0, r0, #5
    96b4:	str	r0, [r5, #44]	; 0x2c
    96b8:	beq	96f4 <gen_linktype+0x23d4>
    96bc:	ldr	r1, [r4, #96]	; 0x60
    96c0:	mov	r2, r5
    96c4:	b	96cc <gen_linktype+0x23ac>
    96c8:	ldr	r0, [r2, #44]	; 0x2c
    96cc:	cmp	r0, #0
    96d0:	mov	r0, #84	; 0x54
    96d4:	add	r3, r2, #84	; 0x54
    96d8:	movweq	r0, #60	; 0x3c
    96dc:	addeq	r3, r2, #60	; 0x3c
    96e0:	ldr	r2, [r2, r0]
    96e4:	str	r1, [r3]
    96e8:	cmp	r2, #0
    96ec:	bne	96c8 <gen_linktype+0x23a8>
    96f0:	ldr	r0, [r5, #44]	; 0x2c
    96f4:	clz	r0, r0
    96f8:	cmp	r4, #0
    96fc:	lsr	r0, r0, #5
    9700:	str	r0, [r5, #44]	; 0x2c
    9704:	str	r4, [sp, #12]
    9708:	beq	a118 <gen_linktype+0x2df8>
    970c:	mov	r1, r4
    9710:	ldr	r2, [r1, #44]	; 0x2c
    9714:	add	r0, r1, #84	; 0x54
    9718:	cmp	r2, #0
    971c:	mov	r2, #84	; 0x54
    9720:	movweq	r2, #60	; 0x3c
    9724:	addeq	r0, r1, #60	; 0x3c
    9728:	ldr	r1, [r1, r2]
    972c:	cmp	r1, #0
    9730:	bne	9710 <gen_linktype+0x23f0>
    9734:	b	a11c <gen_linktype+0x2dfc>
    9738:	cmp	r5, #254	; 0xfe
    973c:	beq	9dd4 <gen_linktype+0x2ab4>
    9740:	cmp	r5, #1536	; 0x600
    9744:	bne	92e8 <gen_linktype+0x1fc8>
    9748:	ldr	r1, [pc, #2788]	; a234 <gen_linktype+0x2f14>
    974c:	mov	r5, #37	; 0x25
    9750:	ldr	r1, [pc, r1]
    9754:	b	9614 <gen_linktype+0x22f4>
    9758:	movw	r0, #32923	; 0x809b
    975c:	cmp	r5, r0
    9760:	beq	9de8 <gen_linktype+0x2ac8>
    9764:	movw	r0, #34525	; 0x86dd
    9768:	cmp	r5, r0
    976c:	bne	92e8 <gen_linktype+0x1fc8>
    9770:	ldr	r1, [pc, #2756]	; a23c <gen_linktype+0x2f1c>
    9774:	mov	r5, #87	; 0x57
    9778:	ldr	r1, [pc, r1]
    977c:	b	9614 <gen_linktype+0x22f4>
    9780:	mov	r0, #1
    9784:	mov	r1, #2
    9788:	mov	r2, #8
    978c:	movw	r3, #910	; 0x38e
    9790:	b	8910 <gen_linktype+0x15f0>
    9794:	mov	r0, #1
    9798:	mov	r1, #2
    979c:	mov	r2, #8
    97a0:	movw	r3, #897	; 0x381
    97a4:	bl	a9f8 <gen_cmp>
    97a8:	mov	r5, r0
    97ac:	mov	r0, #1
    97b0:	mov	r1, #2
    97b4:	mov	r2, #8
    97b8:	movw	r3, #898	; 0x382
    97bc:	bl	a9f8 <gen_cmp>
    97c0:	mov	r6, r0
    97c4:	mov	r0, #1
    97c8:	mov	r1, #2
    97cc:	mov	r2, #8
    97d0:	movw	r3, #899	; 0x383
    97d4:	bl	a9f8 <gen_cmp>
    97d8:	mov	r4, r0
    97dc:	ldr	r0, [r6, #44]	; 0x2c
    97e0:	cmp	r6, #0
    97e4:	clz	r0, r0
    97e8:	lsr	r0, r0, #5
    97ec:	str	r0, [r6, #44]	; 0x2c
    97f0:	beq	9830 <gen_linktype+0x2510>
    97f4:	ldr	r1, [r4, #96]	; 0x60
    97f8:	mov	r2, r6
    97fc:	b	9808 <gen_linktype+0x24e8>
    9800:	.word	0x0003ec98
    9804:	ldr	r0, [r2, #44]	; 0x2c
    9808:	cmp	r0, #0
    980c:	mov	r0, #84	; 0x54
    9810:	add	r3, r2, #84	; 0x54
    9814:	movweq	r0, #60	; 0x3c
    9818:	addeq	r3, r2, #60	; 0x3c
    981c:	ldr	r2, [r2, r0]
    9820:	str	r1, [r3]
    9824:	cmp	r2, #0
    9828:	bne	9804 <gen_linktype+0x24e4>
    982c:	ldr	r0, [r6, #44]	; 0x2c
    9830:	clz	r0, r0
    9834:	cmp	r4, #0
    9838:	lsr	r0, r0, #5
    983c:	str	r0, [r6, #44]	; 0x2c
    9840:	str	r4, [sp, #12]
    9844:	beq	9e00 <gen_linktype+0x2ae0>
    9848:	mov	r1, r4
    984c:	ldr	r2, [r1, #44]	; 0x2c
    9850:	add	r0, r1, #84	; 0x54
    9854:	cmp	r2, #0
    9858:	mov	r2, #84	; 0x54
    985c:	movweq	r2, #60	; 0x3c
    9860:	addeq	r0, r1, #60	; 0x3c
    9864:	ldr	r1, [r1, r2]
    9868:	cmp	r1, #0
    986c:	bne	984c <gen_linktype+0x252c>
    9870:	b	9e04 <gen_linktype+0x2ae4>
    9874:	.word	0x0003eb34
    9878:	mov	r0, #243	; 0xf3
    987c:	strb	r0, [sp, #19]
    9880:	mov	r0, #-2147483648	; 0x80000000
    9884:	str	r0, [sp, #15]
    9888:	add	r3, sp, #12
    988c:	mov	r0, #2
    9890:	mov	r1, #0
    9894:	mov	r2, #8
    9898:	bl	1c3c0 <gen_bcmp>
    989c:	mov	r4, r0
    98a0:	cmp	r6, #0
    98a4:	beq	98d8 <gen_linktype+0x25b8>
    98a8:	ldr	r0, [r4, #96]	; 0x60
    98ac:	mov	r1, r6
    98b0:	ldr	r2, [r1, #44]	; 0x2c
    98b4:	add	r3, r1, #84	; 0x54
    98b8:	cmp	r2, #0
    98bc:	mov	r2, #84	; 0x54
    98c0:	movweq	r2, #60	; 0x3c
    98c4:	addeq	r3, r1, #60	; 0x3c
    98c8:	ldr	r1, [r1, r2]
    98cc:	str	r0, [r3]
    98d0:	cmp	r1, #0
    98d4:	bne	98b0 <gen_linktype+0x2590>
    98d8:	ldr	r0, [r6, #44]	; 0x2c
    98dc:	cmp	r4, #0
    98e0:	clz	r0, r0
    98e4:	lsr	r0, r0, #5
    98e8:	str	r0, [r6, #44]	; 0x2c
    98ec:	ldr	r1, [r4, #44]	; 0x2c
    98f0:	clz	r0, r1
    98f4:	lsr	r0, r0, #5
    98f8:	str	r0, [r4, #44]	; 0x2c
    98fc:	str	r4, [sp, #12]
    9900:	beq	9c38 <gen_linktype+0x2918>
    9904:	cmp	r1, #0
    9908:	mov	r1, #60	; 0x3c
    990c:	add	r0, r4, #60	; 0x3c
    9910:	movweq	r1, #84	; 0x54
    9914:	addeq	r0, r4, #84	; 0x54
    9918:	ldr	r1, [r4, r1]
    991c:	cmp	r1, #0
    9920:	beq	9c3c <gen_linktype+0x291c>
    9924:	ldr	r2, [r1, #44]	; 0x2c
    9928:	add	r0, r1, #84	; 0x54
    992c:	cmp	r2, #0
    9930:	mov	r2, #84	; 0x54
    9934:	movweq	r2, #60	; 0x3c
    9938:	addeq	r0, r1, #60	; 0x3c
    993c:	ldr	r1, [r1, r2]
    9940:	cmp	r1, #0
    9944:	bne	9924 <gen_linktype+0x2604>
    9948:	b	9c3c <gen_linktype+0x291c>
    994c:	.word	0x0003eb88
    9950:	.word	0x0003eb00
    9954:	.word	0x0003eb60
    9958:	.word	0x0003eae0
    995c:	.word	0x0003eac4
    9960:	cmp	r5, #254	; 0xfe
    9964:	beq	907c <gen_linktype+0x1d5c>
    9968:	ldr	r1, [pc, #2196]	; a204 <gen_linktype+0x2ee4>
    996c:	movw	r0, #1500	; 0x5dc
    9970:	cmp	r5, r0
    9974:	ldr	r1, [pc, r1]
    9978:	bgt	9614 <gen_linktype+0x22f4>
    997c:	mov	r0, #1
    9980:	mov	r2, #8
    9984:	mov	r3, #4
    9988:	bl	a9f8 <gen_cmp>
    998c:	ldr	r1, [pc, #2164]	; a208 <gen_linktype+0x2ee8>
    9990:	mov	r6, r0
    9994:	mov	r0, #1
    9998:	mov	r2, #16
    999c:	mov	r3, r5
    99a0:	ldr	r1, [pc, r1]
    99a4:	bl	a9f8 <gen_cmp>
    99a8:	mov	r4, r0
    99ac:	cmp	r6, #0
    99b0:	beq	99e4 <gen_linktype+0x26c4>
    99b4:	ldr	r0, [r4, #96]	; 0x60
    99b8:	mov	r1, r6
    99bc:	ldr	r2, [r1, #44]	; 0x2c
    99c0:	add	r3, r1, #84	; 0x54
    99c4:	cmp	r2, #0
    99c8:	mov	r2, #84	; 0x54
    99cc:	movweq	r2, #60	; 0x3c
    99d0:	addeq	r3, r1, #60	; 0x3c
    99d4:	ldr	r1, [r1, r2]
    99d8:	str	r0, [r3]
    99dc:	cmp	r1, #0
    99e0:	bne	99bc <gen_linktype+0x269c>
    99e4:	ldr	r0, [r6, #44]	; 0x2c
    99e8:	cmp	r4, #0
    99ec:	clz	r0, r0
    99f0:	lsr	r0, r0, #5
    99f4:	str	r0, [r6, #44]	; 0x2c
    99f8:	ldr	r1, [r4, #44]	; 0x2c
    99fc:	clz	r0, r1
    9a00:	lsr	r0, r0, #5
    9a04:	str	r0, [r4, #44]	; 0x2c
    9a08:	str	r4, [sp, #12]
    9a0c:	beq	9a58 <gen_linktype+0x2738>
    9a10:	cmp	r1, #0
    9a14:	mov	r1, #60	; 0x3c
    9a18:	add	r0, r4, #60	; 0x3c
    9a1c:	movweq	r1, #84	; 0x54
    9a20:	addeq	r0, r4, #84	; 0x54
    9a24:	ldr	r1, [r4, r1]
    9a28:	cmp	r1, #0
    9a2c:	beq	9a5c <gen_linktype+0x273c>
    9a30:	ldr	r2, [r1, #44]	; 0x2c
    9a34:	add	r0, r1, #84	; 0x54
    9a38:	cmp	r2, #0
    9a3c:	mov	r2, #84	; 0x54
    9a40:	movweq	r2, #60	; 0x3c
    9a44:	addeq	r0, r1, #60	; 0x3c
    9a48:	ldr	r1, [r1, r2]
    9a4c:	cmp	r1, #0
    9a50:	bne	9a30 <gen_linktype+0x2710>
    9a54:	b	9a5c <gen_linktype+0x273c>
    9a58:	add	r0, sp, #12
    9a5c:	str	r6, [r0]
    9a60:	ldr	r0, [r4, #44]	; 0x2c
    9a64:	clz	r0, r0
    9a68:	lsr	r0, r0, #5
    9a6c:	str	r0, [r4, #44]	; 0x2c
    9a70:	ldr	r0, [r6, #96]	; 0x60
    9a74:	b	87b0 <gen_linktype+0x1490>
    9a78:	mov	r0, #2
    9a7c:	mov	r1, #0
    9a80:	mov	r2, #16
    9a84:	mov	r3, #224	; 0xe0
    9a88:	bl	a9f8 <gen_cmp>
    9a8c:	mov	r5, r0
    9a90:	movw	r0, #43690	; 0xaaaa
    9a94:	add	r6, sp, #12
    9a98:	mov	r1, #0
    9a9c:	mov	r2, #8
    9aa0:	movt	r0, #3
    9aa4:	mov	r3, r6
    9aa8:	str	r0, [sp, #12]
    9aac:	movw	r0, #0
    9ab0:	movt	r0, #14209	; 0x3781
    9ab4:	str	r0, [sp, #16]
    9ab8:	mov	r0, #2
    9abc:	bl	1c3c0 <gen_bcmp>
    9ac0:	mov	r4, r0
    9ac4:	ldr	r0, [r5, #44]	; 0x2c
    9ac8:	cmp	r5, #0
    9acc:	clz	r0, r0
    9ad0:	lsr	r0, r0, #5
    9ad4:	str	r0, [r5, #44]	; 0x2c
    9ad8:	beq	9b24 <gen_linktype+0x2804>
    9adc:	ldr	r1, [r4, #96]	; 0x60
    9ae0:	mov	r2, r5
    9ae4:	b	9afc <gen_linktype+0x27dc>
    9ae8:	.word	0x0003e8c0
    9aec:	.word	0x0003e944
    9af0:	.word	0x0003e8bc
    9af4:	.word	0x0003e91c
    9af8:	ldr	r0, [r2, #44]	; 0x2c
    9afc:	cmp	r0, #0
    9b00:	mov	r0, #84	; 0x54
    9b04:	add	r3, r2, #84	; 0x54
    9b08:	movweq	r0, #60	; 0x3c
    9b0c:	addeq	r3, r2, #60	; 0x3c
    9b10:	ldr	r2, [r2, r0]
    9b14:	str	r1, [r3]
    9b18:	cmp	r2, #0
    9b1c:	bne	9af8 <gen_linktype+0x27d8>
    9b20:	ldr	r0, [r5, #44]	; 0x2c
    9b24:	clz	r0, r0
    9b28:	cmp	r4, #0
    9b2c:	lsr	r0, r0, #5
    9b30:	str	r0, [r5, #44]	; 0x2c
    9b34:	str	r4, [sp, #12]
    9b38:	beq	9b64 <gen_linktype+0x2844>
    9b3c:	mov	r0, r4
    9b40:	ldr	r1, [r0, #44]	; 0x2c
    9b44:	add	r6, r0, #84	; 0x54
    9b48:	cmp	r1, #0
    9b4c:	mov	r1, #84	; 0x54
    9b50:	movweq	r1, #60	; 0x3c
    9b54:	addeq	r6, r0, #60	; 0x3c
    9b58:	ldr	r0, [r0, r1]
    9b5c:	cmp	r0, #0
    9b60:	bne	9b40 <gen_linktype+0x2820>
    9b64:	str	r5, [r6]
    9b68:	mov	r2, #8
    9b6c:	mov	r3, #4
    9b70:	ldr	r0, [r5, #96]	; 0x60
    9b74:	str	r0, [r4, #96]	; 0x60
    9b78:	mov	r0, #1
    9b7c:	ldr	r1, [pc, #1672]	; a20c <gen_linktype+0x2eec>
    9b80:	ldr	r1, [pc, r1]
    9b84:	bl	a9f8 <gen_cmp>
    9b88:	cmp	r0, #0
    9b8c:	beq	9bc0 <gen_linktype+0x28a0>
    9b90:	ldr	r1, [r4, #96]	; 0x60
    9b94:	mov	r2, r0
    9b98:	ldr	r3, [r2, #44]	; 0x2c
    9b9c:	add	r7, r2, #84	; 0x54
    9ba0:	cmp	r3, #0
    9ba4:	mov	r3, #84	; 0x54
    9ba8:	movweq	r3, #60	; 0x3c
    9bac:	addeq	r7, r2, #60	; 0x3c
    9bb0:	ldr	r2, [r2, r3]
    9bb4:	str	r1, [r7]
    9bb8:	cmp	r2, #0
    9bbc:	bne	9b98 <gen_linktype+0x2878>
    9bc0:	ldr	r1, [r0, #44]	; 0x2c
    9bc4:	cmp	r4, #0
    9bc8:	clz	r1, r1
    9bcc:	lsr	r1, r1, #5
    9bd0:	str	r1, [r0, #44]	; 0x2c
    9bd4:	ldr	r2, [r4, #44]	; 0x2c
    9bd8:	clz	r1, r2
    9bdc:	lsr	r1, r1, #5
    9be0:	str	r1, [r4, #44]	; 0x2c
    9be4:	str	r4, [sp, #12]
    9be8:	beq	9eb4 <gen_linktype+0x2b94>
    9bec:	cmp	r2, #0
    9bf0:	mov	r2, #60	; 0x3c
    9bf4:	add	r1, r4, #60	; 0x3c
    9bf8:	movweq	r2, #84	; 0x54
    9bfc:	addeq	r1, r4, #84	; 0x54
    9c00:	ldr	r2, [r4, r2]
    9c04:	cmp	r2, #0
    9c08:	beq	9eb8 <gen_linktype+0x2b98>
    9c0c:	ldr	r3, [r2, #44]	; 0x2c
    9c10:	add	r1, r2, #84	; 0x54
    9c14:	cmp	r3, #0
    9c18:	mov	r3, #84	; 0x54
    9c1c:	movweq	r3, #60	; 0x3c
    9c20:	addeq	r1, r2, #60	; 0x3c
    9c24:	ldr	r2, [r2, r3]
    9c28:	cmp	r2, #0
    9c2c:	bne	9c0c <gen_linktype+0x28ec>
    9c30:	b	9eb8 <gen_linktype+0x2b98>
    9c34:	.word	0x0003e7c8
    9c38:	add	r0, sp, #12
    9c3c:	str	r6, [r0]
    9c40:	mov	r2, #8
    9c44:	mov	r3, r5
    9c48:	ldr	r0, [r4, #44]	; 0x2c
    9c4c:	clz	r0, r0
    9c50:	lsr	r0, r0, #5
    9c54:	str	r0, [r4, #44]	; 0x2c
    9c58:	ldr	r0, [r6, #96]	; 0x60
    9c5c:	str	r0, [r4, #96]	; 0x60
    9c60:	mov	r0, #1
    9c64:	ldr	r1, [pc, #1456]	; a21c <gen_linktype+0x2efc>
    9c68:	ldr	r1, [pc, r1]
    9c6c:	bl	a9f8 <gen_cmp>
    9c70:	ldr	r1, [r0, #44]	; 0x2c
    9c74:	cmp	r0, #0
    9c78:	clz	r1, r1
    9c7c:	lsr	r1, r1, #5
    9c80:	str	r1, [r0, #44]	; 0x2c
    9c84:	beq	9cc4 <gen_linktype+0x29a4>
    9c88:	ldr	r2, [r4, #96]	; 0x60
    9c8c:	mov	r3, r0
    9c90:	b	9c9c <gen_linktype+0x297c>
    9c94:	.word	0x0003e778
    9c98:	ldr	r1, [r3, #44]	; 0x2c
    9c9c:	cmp	r1, #0
    9ca0:	mov	r1, #84	; 0x54
    9ca4:	add	r7, r3, #84	; 0x54
    9ca8:	movweq	r1, #60	; 0x3c
    9cac:	addeq	r7, r3, #60	; 0x3c
    9cb0:	ldr	r3, [r3, r1]
    9cb4:	str	r2, [r7]
    9cb8:	cmp	r3, #0
    9cbc:	bne	9c98 <gen_linktype+0x2978>
    9cc0:	ldr	r1, [r0, #44]	; 0x2c
    9cc4:	clz	r1, r1
    9cc8:	cmp	r4, #0
    9ccc:	lsr	r1, r1, #5
    9cd0:	str	r1, [r0, #44]	; 0x2c
    9cd4:	str	r4, [sp, #12]
    9cd8:	beq	a044 <gen_linktype+0x2d24>
    9cdc:	mov	r2, r4
    9ce0:	ldr	r3, [r2, #44]	; 0x2c
    9ce4:	add	r1, r2, #84	; 0x54
    9ce8:	cmp	r3, #0
    9cec:	mov	r3, #84	; 0x54
    9cf0:	movweq	r3, #60	; 0x3c
    9cf4:	addeq	r1, r2, #60	; 0x3c
    9cf8:	ldr	r2, [r2, r3]
    9cfc:	cmp	r2, #0
    9d00:	bne	9ce0 <gen_linktype+0x29c0>
    9d04:	b	a048 <gen_linktype+0x2d28>
    9d08:	ldr	r1, [pc, #1328]	; a240 <gen_linktype+0x2f20>
    9d0c:	mov	r0, #1
    9d10:	mov	r2, #8
    9d14:	mov	r3, #33	; 0x21
    9d18:	ldr	r1, [pc, r1]
    9d1c:	bl	a9f8 <gen_cmp>
    9d20:	ldr	r1, [pc, #1308]	; a244 <gen_linktype+0x2f24>
    9d24:	mov	r4, r0
    9d28:	mov	r0, #1
    9d2c:	mov	r2, #8
    9d30:	mov	r3, #45	; 0x2d
    9d34:	ldr	r1, [pc, r1]
    9d38:	bl	a9f8 <gen_cmp>
    9d3c:	mov	r5, r0
    9d40:	ldr	r0, [r4, #44]	; 0x2c
    9d44:	cmp	r4, #0
    9d48:	clz	r0, r0
    9d4c:	lsr	r0, r0, #5
    9d50:	str	r0, [r4, #44]	; 0x2c
    9d54:	beq	9d90 <gen_linktype+0x2a70>
    9d58:	ldr	r1, [r5, #96]	; 0x60
    9d5c:	mov	r2, r4
    9d60:	b	9d68 <gen_linktype+0x2a48>
    9d64:	ldr	r0, [r2, #44]	; 0x2c
    9d68:	cmp	r0, #0
    9d6c:	mov	r0, #84	; 0x54
    9d70:	add	r3, r2, #84	; 0x54
    9d74:	movweq	r0, #60	; 0x3c
    9d78:	addeq	r3, r2, #60	; 0x3c
    9d7c:	ldr	r2, [r2, r0]
    9d80:	str	r1, [r3]
    9d84:	cmp	r2, #0
    9d88:	bne	9d64 <gen_linktype+0x2a44>
    9d8c:	ldr	r0, [r4, #44]	; 0x2c
    9d90:	clz	r0, r0
    9d94:	cmp	r5, #0
    9d98:	lsr	r0, r0, #5
    9d9c:	str	r0, [r4, #44]	; 0x2c
    9da0:	str	r5, [sp, #12]
    9da4:	beq	a058 <gen_linktype+0x2d38>
    9da8:	mov	r1, r5
    9dac:	ldr	r2, [r1, #44]	; 0x2c
    9db0:	add	r0, r1, #84	; 0x54
    9db4:	cmp	r2, #0
    9db8:	mov	r2, #84	; 0x54
    9dbc:	movweq	r2, #60	; 0x3c
    9dc0:	addeq	r0, r1, #60	; 0x3c
    9dc4:	ldr	r1, [r1, r2]
    9dc8:	cmp	r1, #0
    9dcc:	bne	9dac <gen_linktype+0x2a8c>
    9dd0:	b	a05c <gen_linktype+0x2d3c>
    9dd4:	ldr	r1, [pc, #1140]	; a250 <gen_linktype+0x2f30>
    9dd8:	mov	r5, #35	; 0x23
    9ddc:	ldr	r1, [pc, r1]
    9de0:	b	9614 <gen_linktype+0x22f4>
    9de4:	.word	0x0003e70c
    9de8:	ldr	r1, [pc, #1116]	; a24c <gen_linktype+0x2f2c>
    9dec:	mov	r5, #41	; 0x29
    9df0:	ldr	r1, [pc, r1]
    9df4:	b	9614 <gen_linktype+0x22f4>
    9df8:	.word	0x0003e684
    9dfc:	.word	0x0003e6e4
    9e00:	add	r0, sp, #12
    9e04:	str	r6, [r0]
    9e08:	cmp	r5, #0
    9e0c:	ldr	r0, [r6, #96]	; 0x60
    9e10:	str	r0, [r4, #96]	; 0x60
    9e14:	ldr	r0, [r5, #44]	; 0x2c
    9e18:	clz	r0, r0
    9e1c:	lsr	r0, r0, #5
    9e20:	str	r0, [r5, #44]	; 0x2c
    9e24:	beq	9e64 <gen_linktype+0x2b44>
    9e28:	ldr	r1, [r4, #96]	; 0x60
    9e2c:	mov	r2, r5
    9e30:	b	9e3c <gen_linktype+0x2b1c>
    9e34:	.word	0x0003e59c
    9e38:	ldr	r0, [r2, #44]	; 0x2c
    9e3c:	cmp	r0, #0
    9e40:	mov	r0, #84	; 0x54
    9e44:	add	r3, r2, #84	; 0x54
    9e48:	movweq	r0, #60	; 0x3c
    9e4c:	addeq	r3, r2, #60	; 0x3c
    9e50:	ldr	r2, [r2, r0]
    9e54:	str	r1, [r3]
    9e58:	cmp	r2, #0
    9e5c:	bne	9e38 <gen_linktype+0x2b18>
    9e60:	ldr	r0, [r5, #44]	; 0x2c
    9e64:	clz	r0, r0
    9e68:	cmp	r4, #0
    9e6c:	lsr	r0, r0, #5
    9e70:	str	r0, [r5, #44]	; 0x2c
    9e74:	str	r4, [sp, #12]
    9e78:	beq	a118 <gen_linktype+0x2df8>
    9e7c:	mov	r1, r4
    9e80:	ldr	r2, [r1, #44]	; 0x2c
    9e84:	add	r0, r1, #84	; 0x54
    9e88:	cmp	r2, #0
    9e8c:	mov	r2, #84	; 0x54
    9e90:	movweq	r2, #60	; 0x3c
    9e94:	addeq	r0, r1, #60	; 0x3c
    9e98:	ldr	r1, [r1, r2]
    9e9c:	cmp	r1, #0
    9ea0:	bne	9e80 <gen_linktype+0x2b60>
    9ea4:	b	a11c <gen_linktype+0x2dfc>
    9ea8:	.word	0x0003e574
    9eac:	.word	0x0003e544
    9eb0:	.word	0x0003e52c
    9eb4:	add	r1, sp, #12
    9eb8:	str	r0, [r1]
    9ebc:	mov	r2, #8
    9ec0:	mov	r3, #1
    9ec4:	ldr	r1, [r4, #44]	; 0x2c
    9ec8:	clz	r1, r1
    9ecc:	lsr	r1, r1, #5
    9ed0:	str	r1, [r4, #44]	; 0x2c
    9ed4:	ldr	r0, [r0, #96]	; 0x60
    9ed8:	str	r0, [r4, #96]	; 0x60
    9edc:	mov	r0, #1
    9ee0:	ldr	r1, [pc, #808]	; a210 <gen_linktype+0x2ef0>
    9ee4:	ldr	r1, [pc, r1]
    9ee8:	bl	a9f8 <gen_cmp>
    9eec:	ldr	r1, [r0, #44]	; 0x2c
    9ef0:	cmp	r0, #0
    9ef4:	clz	r1, r1
    9ef8:	lsr	r1, r1, #5
    9efc:	str	r1, [r0, #44]	; 0x2c
    9f00:	beq	9f3c <gen_linktype+0x2c1c>
    9f04:	ldr	r2, [r4, #96]	; 0x60
    9f08:	mov	r3, r0
    9f0c:	b	9f14 <gen_linktype+0x2bf4>
    9f10:	ldr	r1, [r3, #44]	; 0x2c
    9f14:	cmp	r1, #0
    9f18:	mov	r1, #84	; 0x54
    9f1c:	add	r7, r3, #84	; 0x54
    9f20:	movweq	r1, #60	; 0x3c
    9f24:	addeq	r7, r3, #60	; 0x3c
    9f28:	ldr	r3, [r3, r1]
    9f2c:	str	r2, [r7]
    9f30:	cmp	r3, #0
    9f34:	bne	9f10 <gen_linktype+0x2bf0>
    9f38:	ldr	r1, [r0, #44]	; 0x2c
    9f3c:	clz	r1, r1
    9f40:	cmp	r4, #0
    9f44:	lsr	r1, r1, #5
    9f48:	str	r1, [r0, #44]	; 0x2c
    9f4c:	str	r4, [sp, #12]
    9f50:	beq	9f80 <gen_linktype+0x2c60>
    9f54:	mov	r2, r4
    9f58:	ldr	r3, [r2, #44]	; 0x2c
    9f5c:	add	r1, r2, #84	; 0x54
    9f60:	cmp	r3, #0
    9f64:	mov	r3, #84	; 0x54
    9f68:	movweq	r3, #60	; 0x3c
    9f6c:	addeq	r1, r2, #60	; 0x3c
    9f70:	ldr	r2, [r2, r3]
    9f74:	cmp	r2, #0
    9f78:	bne	9f58 <gen_linktype+0x2c38>
    9f7c:	b	9f84 <gen_linktype+0x2c64>
    9f80:	add	r1, sp, #12
    9f84:	str	r0, [r1]
    9f88:	mov	r2, #8
    9f8c:	movw	r3, #33079	; 0x8137
    9f90:	ldr	r0, [r0, #96]	; 0x60
    9f94:	str	r0, [r4, #96]	; 0x60
    9f98:	mov	r0, #1
    9f9c:	ldr	r1, [pc, #624]	; a214 <gen_linktype+0x2ef4>
    9fa0:	ldr	r1, [pc, r1]
    9fa4:	bl	a9f8 <gen_cmp>
    9fa8:	ldr	r1, [r0, #44]	; 0x2c
    9fac:	cmp	r0, #0
    9fb0:	clz	r1, r1
    9fb4:	lsr	r1, r1, #5
    9fb8:	str	r1, [r0, #44]	; 0x2c
    9fbc:	beq	a000 <gen_linktype+0x2ce0>
    9fc0:	ldr	r2, [r4, #96]	; 0x60
    9fc4:	mov	r3, r0
    9fc8:	b	9fd8 <gen_linktype+0x2cb8>
    9fcc:	.word	0x0003e43c
    9fd0:	.word	0x0003e3fc
    9fd4:	ldr	r1, [r3, #44]	; 0x2c
    9fd8:	cmp	r1, #0
    9fdc:	mov	r1, #84	; 0x54
    9fe0:	add	r7, r3, #84	; 0x54
    9fe4:	movweq	r1, #60	; 0x3c
    9fe8:	addeq	r7, r3, #60	; 0x3c
    9fec:	ldr	r3, [r3, r1]
    9ff0:	str	r2, [r7]
    9ff4:	cmp	r3, #0
    9ff8:	bne	9fd4 <gen_linktype+0x2cb4>
    9ffc:	ldr	r1, [r0, #44]	; 0x2c
    a000:	clz	r1, r1
    a004:	cmp	r4, #0
    a008:	lsr	r1, r1, #5
    a00c:	str	r1, [r0, #44]	; 0x2c
    a010:	str	r4, [sp, #12]
    a014:	beq	a044 <gen_linktype+0x2d24>
    a018:	mov	r2, r4
    a01c:	ldr	r3, [r2, #44]	; 0x2c
    a020:	add	r1, r2, #84	; 0x54
    a024:	cmp	r3, #0
    a028:	mov	r3, #84	; 0x54
    a02c:	movweq	r3, #60	; 0x3c
    a030:	addeq	r1, r2, #60	; 0x3c
    a034:	ldr	r2, [r2, r3]
    a038:	cmp	r2, #0
    a03c:	bne	a01c <gen_linktype+0x2cfc>
    a040:	b	a048 <gen_linktype+0x2d28>
    a044:	add	r1, sp, #12
    a048:	str	r0, [r1]
    a04c:	ldr	r0, [r0, #96]	; 0x60
    a050:	b	87b0 <gen_linktype+0x1490>
    a054:	.word	0x0003e3ac
    a058:	add	r0, sp, #12
    a05c:	str	r4, [r0]
    a060:	mov	r2, #8
    a064:	mov	r3, #47	; 0x2f
    a068:	ldr	r0, [r4, #96]	; 0x60
    a06c:	str	r0, [r5, #96]	; 0x60
    a070:	mov	r0, #1
    a074:	ldr	r1, [pc, #460]	; a248 <gen_linktype+0x2f28>
    a078:	ldr	r1, [pc, r1]
    a07c:	bl	a9f8 <gen_cmp>
    a080:	mov	r4, r0
    a084:	ldr	r0, [r5, #44]	; 0x2c
    a088:	cmp	r5, #0
    a08c:	clz	r0, r0
    a090:	lsr	r0, r0, #5
    a094:	str	r0, [r5, #44]	; 0x2c
    a098:	beq	a0d4 <gen_linktype+0x2db4>
    a09c:	ldr	r1, [r4, #96]	; 0x60
    a0a0:	mov	r2, r5
    a0a4:	b	a0ac <gen_linktype+0x2d8c>
    a0a8:	ldr	r0, [r2, #44]	; 0x2c
    a0ac:	cmp	r0, #0
    a0b0:	mov	r0, #84	; 0x54
    a0b4:	add	r3, r2, #84	; 0x54
    a0b8:	movweq	r0, #60	; 0x3c
    a0bc:	addeq	r3, r2, #60	; 0x3c
    a0c0:	ldr	r2, [r2, r0]
    a0c4:	str	r1, [r3]
    a0c8:	cmp	r2, #0
    a0cc:	bne	a0a8 <gen_linktype+0x2d88>
    a0d0:	ldr	r0, [r5, #44]	; 0x2c
    a0d4:	clz	r0, r0
    a0d8:	cmp	r4, #0
    a0dc:	lsr	r0, r0, #5
    a0e0:	str	r0, [r5, #44]	; 0x2c
    a0e4:	str	r4, [sp, #12]
    a0e8:	beq	a118 <gen_linktype+0x2df8>
    a0ec:	mov	r1, r4
    a0f0:	ldr	r2, [r1, #44]	; 0x2c
    a0f4:	add	r0, r1, #84	; 0x54
    a0f8:	cmp	r2, #0
    a0fc:	mov	r2, #84	; 0x54
    a100:	movweq	r2, #60	; 0x3c
    a104:	addeq	r0, r1, #60	; 0x3c
    a108:	ldr	r1, [r1, r2]
    a10c:	cmp	r1, #0
    a110:	bne	a0f0 <gen_linktype+0x2dd0>
    a114:	b	a11c <gen_linktype+0x2dfc>
    a118:	add	r0, sp, #12
    a11c:	str	r5, [r0]
    a120:	ldr	r0, [r5, #96]	; 0x60
    a124:	b	87b0 <gen_linktype+0x1490>
    a128:	ldr	r0, [pc, #372]	; a2a4 <gen_linktype+0x2f84>
    a12c:	add	r0, pc, r0
    a130:	bl	2124 <sf_bpf_error>
    a134:	ldr	r0, [pc, #324]	; a280 <gen_linktype+0x2f60>
    a138:	add	r0, pc, r0
    a13c:	bl	2124 <sf_bpf_error>
    a140:	ldr	r0, [pc, #324]	; a28c <gen_linktype+0x2f6c>
    a144:	add	r0, pc, r0
    a148:	bl	2124 <sf_bpf_error>
    a14c:	ldr	r0, [pc, #288]	; a274 <gen_linktype+0x2f54>
    a150:	add	r0, pc, r0
    a154:	bl	2124 <sf_bpf_error>
    a158:	ldr	r0, [pc, #292]	; a284 <gen_linktype+0x2f64>
    a15c:	add	r0, pc, r0
    a160:	bl	2124 <sf_bpf_error>
    a164:	ldr	r0, [pc, #284]	; a288 <gen_linktype+0x2f68>
    a168:	add	r0, pc, r0
    a16c:	bl	2124 <sf_bpf_error>
    a170:	ldr	r0, [pc, #136]	; a200 <gen_linktype+0x2ee0>
    a174:	add	r0, pc, r0
    a178:	bl	2124 <sf_bpf_error>
    a17c:	ldr	r0, [pc, #236]	; a270 <gen_linktype+0x2f50>
    a180:	add	r0, pc, r0
    a184:	bl	2124 <sf_bpf_error>
    a188:	.word	0x0003e2a0
    a18c:	ldr	r0, [pc, #216]	; a26c <gen_linktype+0x2f4c>
    a190:	add	r0, pc, r0
    a194:	bl	2124 <sf_bpf_error>
    a198:	ldr	r0, [pc, #220]	; a27c <gen_linktype+0x2f5c>
    a19c:	add	r0, pc, r0
    a1a0:	bl	2124 <sf_bpf_error>
    a1a4:	ldr	r0, [pc, #184]	; a264 <gen_linktype+0x2f44>
    a1a8:	add	r0, pc, r0
    a1ac:	bl	2124 <sf_bpf_error>
    a1b0:	ldr	r0, [pc, #216]	; a290 <gen_linktype+0x2f70>
    a1b4:	add	r0, pc, r0
    a1b8:	bl	2124 <sf_bpf_error>
    a1bc:	ldr	r0, [pc, #208]	; a294 <gen_linktype+0x2f74>
    a1c0:	add	r0, pc, r0
    a1c4:	bl	2124 <sf_bpf_error>
    a1c8:	ldr	r0, [pc, #168]	; a278 <gen_linktype+0x2f58>
    a1cc:	add	r0, pc, r0
    a1d0:	bl	2124 <sf_bpf_error>
    a1d4:	ldr	r0, [pc, #188]	; a298 <gen_linktype+0x2f78>
    a1d8:	add	r0, pc, r0
    a1dc:	bl	2124 <sf_bpf_error>
    a1e0:	ldr	r0, [pc, #180]	; a29c <gen_linktype+0x2f7c>
    a1e4:	add	r0, pc, r0
    a1e8:	bl	2124 <sf_bpf_error>
    a1ec:	ldr	r0, [pc, #172]	; a2a0 <gen_linktype+0x2f80>
    a1f0:	add	r0, pc, r0
    a1f4:	bl	2124 <sf_bpf_error>
    a1f8:	.word	0x0003e228
    a1fc:	.word	0x0003e20c
    a200:	.word	0x0001feda
    a204:	.word	0x0003dac4
    a208:	.word	0x0003da9c
    a20c:	.word	0x0003d8b8
    a210:	.word	0x0003d554
    a214:	.word	0x0003d498
    a218:	.word	0x0003de90
    a21c:	.word	0x0003d7d0
    a220:	.word	0x0003e1b0
    a224:	.word	0x0003e0e8
    a228:	.word	0x0003de28
    a22c:	.word	0x0003de3c
    a230:	.word	0x0003e14c
    a234:	.word	0x0003dce8
    a238:	.word	0x0003dec4
    a23c:	.word	0x0003dcc0
    a240:	.word	0x0003d720
    a244:	.word	0x0003d704
    a248:	.word	0x0003d3c0
    a24c:	.word	0x0003d648
    a250:	.word	0x0003d65c
    a254:	.word	0x0003ddbc
    a258:	.word	0x0003dda0
    a25c:	.word	0x0003ddf0
    a260:	.word	0x0003ddd8
    a264:	.word	0x0001fec5
    a268:	.word	0x0003de08
    a26c:	.word	0x0001ff1e
    a270:	.word	0x0001ff5d
    a274:	.word	0x0001ffbe
    a278:	.word	0x0001ff71
    a27c:	.word	0x0001ffcf
    a280:	.word	0x00020062
    a284:	.word	0x0002006c
    a288:	.word	0x00020094
    a28c:	.word	0x000200e6
    a290:	.word	0x000200ae
    a294:	.word	0x000200d8
    a298:	.word	0x000200ef
    a29c:	.word	0x00020113
    a2a0:	.word	0x00020136
    a2a4:	.word	0x0001fed8
    a2a8:	.word	0x0003de4c

0000a2ac <sf_gen_portop>:
    a2ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    a2b0:	add	fp, sp, #28
    a2b4:	sub	sp, sp, #12
    a2b8:	mov	r5, r2
    a2bc:	mov	r3, r1
    a2c0:	mov	r8, r0
    a2c4:	mov	r0, #3
    a2c8:	mov	r1, #9
    a2cc:	mov	r2, #16
    a2d0:	bl	a9f8 <gen_cmp>
    a2d4:	mov	sl, r0
    a2d8:	ldr	r0, [pc, #1740]	; a9ac <sf_gen_portop+0x700>
    a2dc:	add	r0, pc, r0
    a2e0:	ldrb	r0, [r0]
    a2e4:	ldr	r1, [pc, #1732]	; a9b0 <sf_gen_portop+0x704>
    a2e8:	ldr	r1, [pc, r1]
    a2ec:	cmp	r0, #0
    a2f0:	str	r5, [sp, #4]
    a2f4:	add	r6, r1, #6
    a2f8:	beq	a360 <sf_gen_portop+0xb4>
    a2fc:	ldr	r4, [pc, #1720]	; a9bc <sf_gen_portop+0x710>
    a300:	ldr	r4, [pc, r4]
    a304:	cmn	r4, #1
    a308:	bne	a380 <sf_gen_portop+0xd4>
    a30c:	ldr	r4, [pc, #1708]	; a9c0 <sf_gen_portop+0x714>
    a310:	mvn	r1, #15
    a314:	ldr	r4, [pc, r4]
    a318:	ldr	r0, [pc, #1700]	; a9c4 <sf_gen_portop+0x718>
    a31c:	ldr	r2, [pc, #1700]	; a9c8 <sf_gen_portop+0x71c>
    a320:	add	r0, pc, r0
    a324:	add	r2, pc, r2
    a328:	ldr	r3, [r0, r4, lsl #2]
    a32c:	cmp	r3, #0
    a330:	beq	a36c <sf_gen_portop+0xc0>
    a334:	add	r3, r4, #1
    a338:	adds	r1, r1, #1
    a33c:	asr	r7, r3, #31
    a340:	add	r7, r3, r7, lsr #28
    a344:	bic	r7, r7, #15
    a348:	sub	r4, r3, r7
    a34c:	str	r4, [r2]
    a350:	bne	a328 <sf_gen_portop+0x7c>
    a354:	ldr	r0, [pc, #1648]	; a9cc <sf_gen_portop+0x720>
    a358:	add	r0, pc, r0
    a35c:	bl	2124 <sf_bpf_error>
    a360:	ldr	r9, [pc, #1612]	; a9b4 <sf_gen_portop+0x708>
    a364:	ldr	r9, [pc, r9]
    a368:	b	a480 <sf_gen_portop+0x1d4>
    a36c:	mov	r1, #1
    a370:	str	r1, [r0, r4, lsl #2]
    a374:	ldr	r0, [pc, #1620]	; a9d0 <sf_gen_portop+0x724>
    a378:	add	r0, pc, r0
    a37c:	str	r4, [r0]
    a380:	str	r8, [sp]
    a384:	ldr	r0, [pc, #1608]	; a9d4 <sf_gen_portop+0x728>
    a388:	ldr	r0, [pc, r0]
    a38c:	ldr	r8, [pc, #1604]	; a9d8 <sf_gen_portop+0x72c>
    a390:	add	r8, pc, r8
    a394:	mov	r5, r8
    a398:	ldr	r7, [r5, r0, lsl #3]!
    a39c:	cmp	r7, #19
    a3a0:	bhi	a3f8 <sf_gen_portop+0x14c>
    a3a4:	ldr	r1, [pc, #1584]	; a9dc <sf_gen_portop+0x730>
    a3a8:	add	r9, r0, #1
    a3ac:	cmp	r0, #15
    a3b0:	add	r1, pc, r1
    a3b4:	str	r9, [r1]
    a3b8:	bge	a99c <sf_gen_portop+0x6f0>
    a3bc:	mov	r0, #1024	; 0x400
    a3c0:	lsl	r7, r0, r9
    a3c4:	mov	r0, r7
    a3c8:	bl	ed4 <malloc@plt>
    a3cc:	cmp	r0, #0
    a3d0:	str	r0, [r5, #12]
    a3d4:	beq	a99c <sf_gen_portop+0x6f0>
    a3d8:	mov	r1, #0
    a3dc:	mov	r2, r7
    a3e0:	add	r5, r5, #8
    a3e4:	bl	f40 <memset@plt>
    a3e8:	cmp	r7, #19
    a3ec:	str	r7, [r5]
    a3f0:	bhi	a3fc <sf_gen_portop+0x150>
    a3f4:	b	a99c <sf_gen_portop+0x6f0>
    a3f8:	mov	r9, r0
    a3fc:	sub	r0, r7, #20
    a400:	mov	r1, #97	; 0x61
    a404:	str	r0, [r5]
    a408:	ldr	r5, [r5, #4]
    a40c:	str	r1, [r5, r0]!
    a410:	cmp	r5, #0
    a414:	str	r4, [r5, #12]
    a418:	beq	a47c <sf_gen_portop+0x1d0>
    a41c:	ldr	r7, [r8, r9, lsl #3]!
    a420:	cmp	r7, #19
    a424:	bhi	a514 <sf_gen_portop+0x268>
    a428:	ldr	r0, [pc, #1456]	; a9e0 <sf_gen_portop+0x734>
    a42c:	add	r4, r9, #1
    a430:	cmp	r9, #15
    a434:	add	r0, pc, r0
    a438:	str	r4, [r0]
    a43c:	bge	a99c <sf_gen_portop+0x6f0>
    a440:	mov	r0, #1024	; 0x400
    a444:	lsl	r7, r0, r4
    a448:	mov	r0, r7
    a44c:	bl	ed4 <malloc@plt>
    a450:	cmp	r0, #0
    a454:	str	r0, [r8, #12]
    a458:	beq	a99c <sf_gen_portop+0x6f0>
    a45c:	mov	r1, #0
    a460:	mov	r2, r7
    a464:	add	r8, r8, #8
    a468:	bl	f40 <memset@plt>
    a46c:	cmp	r7, #19
    a470:	str	r7, [r8]
    a474:	bhi	a518 <sf_gen_portop+0x26c>
    a478:	b	a99c <sf_gen_portop+0x6f0>
    a47c:	ldr	r8, [sp]
    a480:	ldr	r5, [pc, #1328]	; a9b8 <sf_gen_portop+0x70c>
    a484:	add	r5, pc, r5
    a488:	ldr	r7, [r5, r9, lsl #3]!
    a48c:	cmp	r7, #19
    a490:	bhi	a4e8 <sf_gen_portop+0x23c>
    a494:	ldr	r0, [pc, #1352]	; a9e4 <sf_gen_portop+0x738>
    a498:	add	r4, r9, #1
    a49c:	cmp	r9, #15
    a4a0:	add	r0, pc, r0
    a4a4:	str	r4, [r0]
    a4a8:	bge	a99c <sf_gen_portop+0x6f0>
    a4ac:	mov	r0, #1024	; 0x400
    a4b0:	lsl	r7, r0, r4
    a4b4:	mov	r0, r7
    a4b8:	bl	ed4 <malloc@plt>
    a4bc:	cmp	r0, #0
    a4c0:	str	r0, [r5, #12]
    a4c4:	beq	a99c <sf_gen_portop+0x6f0>
    a4c8:	mov	r1, #0
    a4cc:	mov	r2, r7
    a4d0:	add	r5, r5, #8
    a4d4:	bl	f40 <memset@plt>
    a4d8:	cmp	r7, #19
    a4dc:	str	r7, [r5]
    a4e0:	bhi	a4ec <sf_gen_portop+0x240>
    a4e4:	b	a99c <sf_gen_portop+0x6f0>
    a4e8:	mov	r4, r9
    a4ec:	sub	r0, r7, #20
    a4f0:	mov	r1, #40	; 0x28
    a4f4:	str	r0, [r5]
    a4f8:	ldr	r5, [r5, #4]
    a4fc:	str	r1, [r5, r0]!
    a500:	ldr	r0, [pc, #1248]	; a9e8 <sf_gen_portop+0x73c>
    a504:	ldr	r0, [pc, r0]
    a508:	add	r0, r0, r6
    a50c:	str	r0, [r5, #12]
    a510:	b	a54c <sf_gen_portop+0x2a0>
    a514:	mov	r4, r9
    a518:	sub	r1, r7, #20
    a51c:	mov	r2, #72	; 0x48
    a520:	str	r1, [r8]
    a524:	ldr	r0, [r8, #4]
    a528:	str	r2, [r0, r1]!
    a52c:	mov	r2, r5
    a530:	str	r6, [r0, #12]
    a534:	mov	r1, r2
    a538:	ldr	r2, [r2, #16]
    a53c:	cmp	r2, #0
    a540:	bne	a534 <sf_gen_portop+0x288>
    a544:	ldr	r8, [sp]
    a548:	str	r0, [r1, #16]
    a54c:	ldr	r6, [pc, #1176]	; a9ec <sf_gen_portop+0x740>
    a550:	add	r6, pc, r6
    a554:	ldr	r7, [r6, r4, lsl #3]!
    a558:	cmp	r7, #207	; 0xcf
    a55c:	bhi	a5b0 <sf_gen_portop+0x304>
    a560:	ldr	r1, [pc, #1160]	; a9f0 <sf_gen_portop+0x744>
    a564:	add	r0, r4, #1
    a568:	cmp	r4, #15
    a56c:	add	r1, pc, r1
    a570:	str	r0, [r1]
    a574:	bge	a99c <sf_gen_portop+0x6f0>
    a578:	mov	r1, #1024	; 0x400
    a57c:	lsl	r7, r1, r0
    a580:	mov	r0, r7
    a584:	bl	ed4 <malloc@plt>
    a588:	cmp	r0, #0
    a58c:	str	r0, [r6, #12]
    a590:	beq	a99c <sf_gen_portop+0x6f0>
    a594:	mov	r1, #0
    a598:	mov	r2, r7
    a59c:	add	r6, r6, #8
    a5a0:	bl	f40 <memset@plt>
    a5a4:	cmp	r7, #207	; 0xcf
    a5a8:	str	r7, [r6]
    a5ac:	bls	a99c <sf_gen_portop+0x6f0>
    a5b0:	sub	r0, r7, #208	; 0xd0
    a5b4:	cmp	sl, #0
    a5b8:	str	r0, [r6]
    a5bc:	ldr	r1, [r6, #4]
    a5c0:	add	r7, r1, r0
    a5c4:	movw	r1, #8191	; 0x1fff
    a5c8:	mov	r0, #69	; 0x45
    a5cc:	str	r1, [r7, #20]
    a5d0:	str	r5, [r7, #4]
    a5d4:	str	r0, [r7, #8]
    a5d8:	ldr	r0, [r7, #44]	; 0x2c
    a5dc:	clz	r0, r0
    a5e0:	lsr	r0, r0, #5
    a5e4:	str	r0, [r7, #44]	; 0x2c
    a5e8:	str	r7, [r7, #96]	; 0x60
    a5ec:	beq	a61c <sf_gen_portop+0x370>
    a5f0:	mov	r0, sl
    a5f4:	ldr	r1, [r0, #44]	; 0x2c
    a5f8:	add	r2, r0, #84	; 0x54
    a5fc:	cmp	r1, #0
    a600:	mov	r1, #84	; 0x54
    a604:	movweq	r1, #60	; 0x3c
    a608:	addeq	r2, r0, #60	; 0x3c
    a60c:	ldr	r0, [r0, r1]
    a610:	str	r7, [r2]
    a614:	cmp	r0, #0
    a618:	bne	a5f4 <sf_gen_portop+0x348>
    a61c:	ldr	r0, [sl, #44]	; 0x2c
    a620:	ldr	r3, [sp, #4]
    a624:	cmp	r7, #0
    a628:	clz	r0, r0
    a62c:	lsr	r0, r0, #5
    a630:	str	r0, [sl, #44]	; 0x2c
    a634:	ldr	r0, [r7, #44]	; 0x2c
    a638:	clz	r1, r0
    a63c:	lsr	r1, r1, #5
    a640:	str	r1, [r7, #44]	; 0x2c
    a644:	str	r7, [sp, #8]
    a648:	beq	a690 <sf_gen_portop+0x3e4>
    a64c:	mov	r2, #60	; 0x3c
    a650:	cmp	r0, #0
    a654:	mov	r1, r7
    a658:	movweq	r2, #84	; 0x54
    a65c:	ldr	r0, [r1, r2]!
    a660:	cmp	r0, #0
    a664:	beq	a694 <sf_gen_portop+0x3e8>
    a668:	ldr	r2, [r0, #44]	; 0x2c
    a66c:	add	r1, r0, #84	; 0x54
    a670:	cmp	r2, #0
    a674:	mov	r2, #84	; 0x54
    a678:	movweq	r2, #60	; 0x3c
    a67c:	addeq	r1, r0, #60	; 0x3c
    a680:	ldr	r0, [r0, r2]
    a684:	cmp	r0, #0
    a688:	bne	a668 <sf_gen_portop+0x3bc>
    a68c:	b	a694 <sf_gen_portop+0x3e8>
    a690:	add	r1, sp, #8
    a694:	str	sl, [r1]
    a698:	cmp	r3, #4
    a69c:	ldr	r0, [r7, #44]	; 0x2c
    a6a0:	clz	r0, r0
    a6a4:	lsr	r0, r0, #5
    a6a8:	str	r0, [r7, #44]	; 0x2c
    a6ac:	ldr	r0, [sl, #96]	; 0x60
    a6b0:	str	r0, [r7, #96]	; 0x60
    a6b4:	bhi	a9a8 <sf_gen_portop+0x6fc>
    a6b8:	add	r0, pc, #4
    a6bc:	ldr	r1, [r0, r3, lsl #2]
    a6c0:	add	pc, r0, r1
    a6c4:	.word	0x00000014
    a6c8:	.word	0x000001ac
    a6cc:	.word	0x000001b8
    a6d0:	.word	0x00000014
    a6d4:	.word	0x000000d4
    a6d8:	mov	r0, #5
    a6dc:	mov	r1, #0
    a6e0:	mov	r2, #8
    a6e4:	mov	r3, r8
    a6e8:	bl	a9f8 <gen_cmp>
    a6ec:	mov	r5, r0
    a6f0:	mov	r0, #5
    a6f4:	mov	r1, #2
    a6f8:	mov	r2, #8
    a6fc:	mov	r3, r8
    a700:	bl	a9f8 <gen_cmp>
    a704:	ldr	r1, [r5, #44]	; 0x2c
    a708:	cmp	r5, #0
    a70c:	clz	r1, r1
    a710:	lsr	r1, r1, #5
    a714:	str	r1, [r5, #44]	; 0x2c
    a718:	beq	a754 <sf_gen_portop+0x4a8>
    a71c:	ldr	r2, [r0, #96]	; 0x60
    a720:	mov	r3, r5
    a724:	b	a72c <sf_gen_portop+0x480>
    a728:	ldr	r1, [r3, #44]	; 0x2c
    a72c:	cmp	r1, #0
    a730:	mov	r1, #84	; 0x54
    a734:	add	r6, r3, #84	; 0x54
    a738:	movweq	r1, #60	; 0x3c
    a73c:	addeq	r6, r3, #60	; 0x3c
    a740:	ldr	r3, [r3, r1]
    a744:	str	r2, [r6]
    a748:	cmp	r3, #0
    a74c:	bne	a728 <sf_gen_portop+0x47c>
    a750:	ldr	r1, [r5, #44]	; 0x2c
    a754:	clz	r1, r1
    a758:	cmp	r0, #0
    a75c:	lsr	r1, r1, #5
    a760:	str	r1, [r5, #44]	; 0x2c
    a764:	str	r0, [sp, #8]
    a768:	beq	a89c <sf_gen_portop+0x5f0>
    a76c:	mov	r2, r0
    a770:	ldr	r3, [r2, #44]	; 0x2c
    a774:	add	r1, r2, #84	; 0x54
    a778:	cmp	r3, #0
    a77c:	mov	r3, #84	; 0x54
    a780:	movweq	r3, #60	; 0x3c
    a784:	addeq	r1, r2, #60	; 0x3c
    a788:	ldr	r2, [r2, r3]
    a78c:	cmp	r2, #0
    a790:	bne	a770 <sf_gen_portop+0x4c4>
    a794:	b	a8a0 <sf_gen_portop+0x5f4>
    a798:	mov	r0, #5
    a79c:	mov	r1, #0
    a7a0:	mov	r2, #8
    a7a4:	mov	r3, r8
    a7a8:	bl	a9f8 <gen_cmp>
    a7ac:	mov	r5, r0
    a7b0:	mov	r0, #5
    a7b4:	mov	r1, #2
    a7b8:	mov	r2, #8
    a7bc:	mov	r3, r8
    a7c0:	bl	a9f8 <gen_cmp>
    a7c4:	cmp	r5, #0
    a7c8:	beq	a7fc <sf_gen_portop+0x550>
    a7cc:	ldr	r1, [r0, #96]	; 0x60
    a7d0:	mov	r2, r5
    a7d4:	ldr	r3, [r2, #44]	; 0x2c
    a7d8:	add	r6, r2, #84	; 0x54
    a7dc:	cmp	r3, #0
    a7e0:	mov	r3, #84	; 0x54
    a7e4:	movweq	r3, #60	; 0x3c
    a7e8:	addeq	r6, r2, #60	; 0x3c
    a7ec:	ldr	r2, [r2, r3]
    a7f0:	str	r1, [r6]
    a7f4:	cmp	r2, #0
    a7f8:	bne	a7d4 <sf_gen_portop+0x528>
    a7fc:	ldr	r1, [r5, #44]	; 0x2c
    a800:	cmp	r0, #0
    a804:	clz	r1, r1
    a808:	lsr	r1, r1, #5
    a80c:	str	r1, [r5, #44]	; 0x2c
    a810:	ldr	r2, [r0, #44]	; 0x2c
    a814:	clz	r1, r2
    a818:	lsr	r1, r1, #5
    a81c:	str	r1, [r0, #44]	; 0x2c
    a820:	str	r0, [sp, #8]
    a824:	beq	a8a8 <sf_gen_portop+0x5fc>
    a828:	cmp	r2, #0
    a82c:	mov	r2, #60	; 0x3c
    a830:	add	r1, r0, #60	; 0x3c
    a834:	movweq	r2, #84	; 0x54
    a838:	addeq	r1, r0, #84	; 0x54
    a83c:	ldr	r2, [r0, r2]
    a840:	cmp	r2, #0
    a844:	beq	a8ac <sf_gen_portop+0x600>
    a848:	ldr	r3, [r2, #44]	; 0x2c
    a84c:	add	r1, r2, #84	; 0x54
    a850:	cmp	r3, #0
    a854:	mov	r3, #84	; 0x54
    a858:	movweq	r3, #60	; 0x3c
    a85c:	addeq	r1, r2, #60	; 0x3c
    a860:	ldr	r2, [r2, r3]
    a864:	cmp	r2, #0
    a868:	bne	a848 <sf_gen_portop+0x59c>
    a86c:	b	a8ac <sf_gen_portop+0x600>
    a870:	mov	r0, #5
    a874:	mov	r1, #0
    a878:	b	a884 <sf_gen_portop+0x5d8>
    a87c:	mov	r0, #5
    a880:	mov	r1, #2
    a884:	mov	r2, #8
    a888:	mov	r3, r8
    a88c:	bl	a9f8 <gen_cmp>
    a890:	cmp	r7, #0
    a894:	bne	a8d0 <sf_gen_portop+0x624>
    a898:	b	a900 <sf_gen_portop+0x654>
    a89c:	add	r1, sp, #8
    a8a0:	str	r5, [r1]
    a8a4:	b	a8c0 <sf_gen_portop+0x614>
    a8a8:	add	r1, sp, #8
    a8ac:	str	r5, [r1]
    a8b0:	ldr	r1, [r0, #44]	; 0x2c
    a8b4:	clz	r1, r1
    a8b8:	lsr	r1, r1, #5
    a8bc:	str	r1, [r0, #44]	; 0x2c
    a8c0:	ldr	r1, [r5, #96]	; 0x60
    a8c4:	str	r1, [r0, #96]	; 0x60
    a8c8:	cmp	r7, #0
    a8cc:	beq	a900 <sf_gen_portop+0x654>
    a8d0:	ldr	r1, [r0, #96]	; 0x60
    a8d4:	mov	r2, r7
    a8d8:	ldr	r3, [r2, #44]	; 0x2c
    a8dc:	add	r6, r2, #84	; 0x54
    a8e0:	cmp	r3, #0
    a8e4:	mov	r3, #84	; 0x54
    a8e8:	movweq	r3, #60	; 0x3c
    a8ec:	addeq	r6, r2, #60	; 0x3c
    a8f0:	ldr	r2, [r2, r3]
    a8f4:	str	r1, [r6]
    a8f8:	cmp	r2, #0
    a8fc:	bne	a8d8 <sf_gen_portop+0x62c>
    a900:	ldr	r1, [r7, #44]	; 0x2c
    a904:	cmp	r0, #0
    a908:	clz	r1, r1
    a90c:	lsr	r1, r1, #5
    a910:	str	r1, [r7, #44]	; 0x2c
    a914:	ldr	r2, [r0, #44]	; 0x2c
    a918:	clz	r1, r2
    a91c:	lsr	r1, r1, #5
    a920:	str	r1, [r0, #44]	; 0x2c
    a924:	str	r0, [sp, #8]
    a928:	beq	a974 <sf_gen_portop+0x6c8>
    a92c:	cmp	r2, #0
    a930:	mov	r2, #60	; 0x3c
    a934:	add	r1, r0, #60	; 0x3c
    a938:	movweq	r2, #84	; 0x54
    a93c:	addeq	r1, r0, #84	; 0x54
    a940:	ldr	r2, [r0, r2]
    a944:	cmp	r2, #0
    a948:	beq	a978 <sf_gen_portop+0x6cc>
    a94c:	ldr	r3, [r2, #44]	; 0x2c
    a950:	add	r1, r2, #84	; 0x54
    a954:	cmp	r3, #0
    a958:	mov	r3, #84	; 0x54
    a95c:	movweq	r3, #60	; 0x3c
    a960:	addeq	r1, r2, #60	; 0x3c
    a964:	ldr	r2, [r2, r3]
    a968:	cmp	r2, #0
    a96c:	bne	a94c <sf_gen_portop+0x6a0>
    a970:	b	a978 <sf_gen_portop+0x6cc>
    a974:	add	r1, sp, #8
    a978:	str	r7, [r1]
    a97c:	ldr	r1, [r0, #44]	; 0x2c
    a980:	clz	r1, r1
    a984:	lsr	r1, r1, #5
    a988:	str	r1, [r0, #44]	; 0x2c
    a98c:	ldr	r1, [r7, #96]	; 0x60
    a990:	str	r1, [r0, #96]	; 0x60
    a994:	sub	sp, fp, #28
    a998:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    a99c:	ldr	r0, [pc, #80]	; a9f4 <sf_gen_portop+0x748>
    a9a0:	add	r0, pc, r0
    a9a4:	bl	2124 <sf_bpf_error>
    a9a8:	bl	fc4 <abort@plt>
    a9ac:	.word	0x0003d224
    a9b0:	.word	0x0003d158
    a9b4:	.word	0x0003d198
    a9b8:	.word	0x0003cff8
    a9bc:	.word	0x0003d208
    a9c0:	.word	0x0003d1f8
    a9c4:	.word	0x0003d1f0
    a9c8:	.word	0x0003d1e8
    a9cc:	.word	0x000206fd
    a9d0:	.word	0x0003d190
    a9d4:	.word	0x0003d174
    a9d8:	.word	0x0003d0ec
    a9dc:	.word	0x0003d14c
    a9e0:	.word	0x0003d0c8
    a9e4:	.word	0x0003d05c
    a9e8:	.word	0x0003cf38
    a9ec:	.word	0x0003cf2c
    a9f0:	.word	0x0003cf90
    a9f4:	.word	0x0001f664

0000a9f8 <gen_cmp>:
    a9f8:	push	{r4, r5, r6, r7, fp, lr}
    a9fc:	add	fp, sp, #16
    aa00:	mov	r4, r3
    aa04:	bl	17a3c <gen_load_a>
    aa08:	mov	r5, r0
    aa0c:	ldr	r0, [pc, #152]	; aaac <gen_cmp+0xb4>
    aa10:	ldr	r0, [pc, r0]
    aa14:	ldr	r7, [pc, #148]	; aab0 <gen_cmp+0xb8>
    aa18:	add	r7, pc, r7
    aa1c:	ldr	r6, [r7, r0, lsl #3]!
    aa20:	cmp	r6, #207	; 0xcf
    aa24:	bhi	aa78 <gen_cmp+0x80>
    aa28:	ldr	r2, [pc, #132]	; aab4 <gen_cmp+0xbc>
    aa2c:	add	r1, r0, #1
    aa30:	cmp	r0, #15
    aa34:	add	r2, pc, r2
    aa38:	str	r1, [r2]
    aa3c:	bge	aaa0 <gen_cmp+0xa8>
    aa40:	mov	r0, #1024	; 0x400
    aa44:	lsl	r6, r0, r1
    aa48:	mov	r0, r6
    aa4c:	bl	ed4 <malloc@plt>
    aa50:	cmp	r0, #0
    aa54:	str	r0, [r7, #12]
    aa58:	beq	aaa0 <gen_cmp+0xa8>
    aa5c:	mov	r1, #0
    aa60:	mov	r2, r6
    aa64:	add	r7, r7, #8
    aa68:	bl	f40 <memset@plt>
    aa6c:	cmp	r6, #207	; 0xcf
    aa70:	str	r6, [r7]
    aa74:	bls	aaa0 <gen_cmp+0xa8>
    aa78:	sub	r0, r6, #208	; 0xd0
    aa7c:	str	r0, [r7]
    aa80:	ldr	r1, [r7, #4]
    aa84:	add	r0, r1, r0
    aa88:	mov	r1, #21
    aa8c:	str	r5, [r0, #4]
    aa90:	str	r1, [r0, #8]
    aa94:	str	r4, [r0, #20]
    aa98:	str	r0, [r0, #96]	; 0x60
    aa9c:	pop	{r4, r5, r6, r7, fp, pc}
    aaa0:	ldr	r0, [pc, #16]	; aab8 <gen_cmp+0xc0>
    aaa4:	add	r0, pc, r0
    aaa8:	bl	2124 <sf_bpf_error>
    aaac:	.word	0x0003caec
    aab0:	.word	0x0003ca64
    aab4:	.word	0x0003cac8
    aab8:	.word	0x0001f560

0000aabc <sf_gen_portop6>:
    aabc:	push	{r4, r5, r6, sl, fp, lr}
    aac0:	add	fp, sp, #16
    aac4:	sub	sp, sp, #16
    aac8:	mov	r5, r2
    aacc:	mov	r3, r1
    aad0:	mov	r6, r0
    aad4:	mov	r0, #3
    aad8:	mov	r1, #6
    aadc:	mov	r2, #16
    aae0:	bl	a9f8 <gen_cmp>
    aae4:	cmp	r5, #4
    aae8:	bhi	add4 <sf_gen_portop6+0x318>
    aaec:	mov	r4, r0
    aaf0:	add	r0, pc, #4
    aaf4:	ldr	r1, [r0, r5, lsl #2]
    aaf8:	add	pc, r0, r1
    aafc:	.word	0x00000014
    ab00:	.word	0x000001ac
    ab04:	.word	0x000001b8
    ab08:	.word	0x00000014
    ab0c:	.word	0x000000d4
    ab10:	mov	r0, #6
    ab14:	mov	r1, #0
    ab18:	mov	r2, #8
    ab1c:	mov	r3, r6
    ab20:	bl	a9f8 <gen_cmp>
    ab24:	mov	r5, r0
    ab28:	mov	r0, #6
    ab2c:	mov	r1, #2
    ab30:	mov	r2, #8
    ab34:	mov	r3, r6
    ab38:	bl	a9f8 <gen_cmp>
    ab3c:	ldr	r1, [r5, #44]	; 0x2c
    ab40:	cmp	r5, #0
    ab44:	clz	r1, r1
    ab48:	lsr	r1, r1, #5
    ab4c:	str	r1, [r5, #44]	; 0x2c
    ab50:	beq	ab8c <sf_gen_portop6+0xd0>
    ab54:	ldr	r2, [r0, #96]	; 0x60
    ab58:	mov	r3, r5
    ab5c:	b	ab64 <sf_gen_portop6+0xa8>
    ab60:	ldr	r1, [r3, #44]	; 0x2c
    ab64:	cmp	r1, #0
    ab68:	mov	r1, #84	; 0x54
    ab6c:	add	r6, r3, #84	; 0x54
    ab70:	movweq	r1, #60	; 0x3c
    ab74:	addeq	r6, r3, #60	; 0x3c
    ab78:	ldr	r3, [r3, r1]
    ab7c:	str	r2, [r6]
    ab80:	cmp	r3, #0
    ab84:	bne	ab60 <sf_gen_portop6+0xa4>
    ab88:	ldr	r1, [r5, #44]	; 0x2c
    ab8c:	clz	r1, r1
    ab90:	cmp	r0, #0
    ab94:	lsr	r1, r1, #5
    ab98:	str	r1, [r5, #44]	; 0x2c
    ab9c:	str	r0, [sp, #4]
    aba0:	beq	acd4 <sf_gen_portop6+0x218>
    aba4:	mov	r2, r0
    aba8:	ldr	r3, [r2, #44]	; 0x2c
    abac:	add	r1, r2, #84	; 0x54
    abb0:	cmp	r3, #0
    abb4:	mov	r3, #84	; 0x54
    abb8:	movweq	r3, #60	; 0x3c
    abbc:	addeq	r1, r2, #60	; 0x3c
    abc0:	ldr	r2, [r2, r3]
    abc4:	cmp	r2, #0
    abc8:	bne	aba8 <sf_gen_portop6+0xec>
    abcc:	b	acd8 <sf_gen_portop6+0x21c>
    abd0:	mov	r0, #6
    abd4:	mov	r1, #0
    abd8:	mov	r2, #8
    abdc:	mov	r3, r6
    abe0:	bl	a9f8 <gen_cmp>
    abe4:	mov	r5, r0
    abe8:	mov	r0, #6
    abec:	mov	r1, #2
    abf0:	mov	r2, #8
    abf4:	mov	r3, r6
    abf8:	bl	a9f8 <gen_cmp>
    abfc:	cmp	r5, #0
    ac00:	beq	ac34 <sf_gen_portop6+0x178>
    ac04:	ldr	r1, [r0, #96]	; 0x60
    ac08:	mov	r2, r5
    ac0c:	ldr	r3, [r2, #44]	; 0x2c
    ac10:	add	r6, r2, #84	; 0x54
    ac14:	cmp	r3, #0
    ac18:	mov	r3, #84	; 0x54
    ac1c:	movweq	r3, #60	; 0x3c
    ac20:	addeq	r6, r2, #60	; 0x3c
    ac24:	ldr	r2, [r2, r3]
    ac28:	str	r1, [r6]
    ac2c:	cmp	r2, #0
    ac30:	bne	ac0c <sf_gen_portop6+0x150>
    ac34:	ldr	r1, [r5, #44]	; 0x2c
    ac38:	cmp	r0, #0
    ac3c:	clz	r1, r1
    ac40:	lsr	r1, r1, #5
    ac44:	str	r1, [r5, #44]	; 0x2c
    ac48:	ldr	r2, [r0, #44]	; 0x2c
    ac4c:	clz	r1, r2
    ac50:	lsr	r1, r1, #5
    ac54:	str	r1, [r0, #44]	; 0x2c
    ac58:	str	r0, [sp, #12]
    ac5c:	beq	ace0 <sf_gen_portop6+0x224>
    ac60:	cmp	r2, #0
    ac64:	mov	r2, #60	; 0x3c
    ac68:	add	r1, r0, #60	; 0x3c
    ac6c:	movweq	r2, #84	; 0x54
    ac70:	addeq	r1, r0, #84	; 0x54
    ac74:	ldr	r2, [r0, r2]
    ac78:	cmp	r2, #0
    ac7c:	beq	ace4 <sf_gen_portop6+0x228>
    ac80:	ldr	r3, [r2, #44]	; 0x2c
    ac84:	add	r1, r2, #84	; 0x54
    ac88:	cmp	r3, #0
    ac8c:	mov	r3, #84	; 0x54
    ac90:	movweq	r3, #60	; 0x3c
    ac94:	addeq	r1, r2, #60	; 0x3c
    ac98:	ldr	r2, [r2, r3]
    ac9c:	cmp	r2, #0
    aca0:	bne	ac80 <sf_gen_portop6+0x1c4>
    aca4:	b	ace4 <sf_gen_portop6+0x228>
    aca8:	mov	r0, #6
    acac:	mov	r1, #0
    acb0:	b	acbc <sf_gen_portop6+0x200>
    acb4:	mov	r0, #6
    acb8:	mov	r1, #2
    acbc:	mov	r2, #8
    acc0:	mov	r3, r6
    acc4:	bl	a9f8 <gen_cmp>
    acc8:	cmp	r4, #0
    accc:	bne	ad08 <sf_gen_portop6+0x24c>
    acd0:	b	ad38 <sf_gen_portop6+0x27c>
    acd4:	add	r1, sp, #4
    acd8:	str	r5, [r1]
    acdc:	b	acf8 <sf_gen_portop6+0x23c>
    ace0:	add	r1, sp, #12
    ace4:	str	r5, [r1]
    ace8:	ldr	r1, [r0, #44]	; 0x2c
    acec:	clz	r1, r1
    acf0:	lsr	r1, r1, #5
    acf4:	str	r1, [r0, #44]	; 0x2c
    acf8:	ldr	r1, [r5, #96]	; 0x60
    acfc:	str	r1, [r0, #96]	; 0x60
    ad00:	cmp	r4, #0
    ad04:	beq	ad38 <sf_gen_portop6+0x27c>
    ad08:	ldr	r1, [r0, #96]	; 0x60
    ad0c:	mov	r2, r4
    ad10:	ldr	r3, [r2, #44]	; 0x2c
    ad14:	add	r6, r2, #84	; 0x54
    ad18:	cmp	r3, #0
    ad1c:	mov	r3, #84	; 0x54
    ad20:	movweq	r3, #60	; 0x3c
    ad24:	addeq	r6, r2, #60	; 0x3c
    ad28:	ldr	r2, [r2, r3]
    ad2c:	str	r1, [r6]
    ad30:	cmp	r2, #0
    ad34:	bne	ad10 <sf_gen_portop6+0x254>
    ad38:	ldr	r1, [r4, #44]	; 0x2c
    ad3c:	cmp	r0, #0
    ad40:	clz	r1, r1
    ad44:	lsr	r1, r1, #5
    ad48:	str	r1, [r4, #44]	; 0x2c
    ad4c:	ldr	r2, [r0, #44]	; 0x2c
    ad50:	clz	r1, r2
    ad54:	lsr	r1, r1, #5
    ad58:	str	r1, [r0, #44]	; 0x2c
    ad5c:	str	r0, [sp, #8]
    ad60:	beq	adac <sf_gen_portop6+0x2f0>
    ad64:	cmp	r2, #0
    ad68:	mov	r2, #60	; 0x3c
    ad6c:	add	r1, r0, #60	; 0x3c
    ad70:	movweq	r2, #84	; 0x54
    ad74:	addeq	r1, r0, #84	; 0x54
    ad78:	ldr	r2, [r0, r2]
    ad7c:	cmp	r2, #0
    ad80:	beq	adb0 <sf_gen_portop6+0x2f4>
    ad84:	ldr	r3, [r2, #44]	; 0x2c
    ad88:	add	r1, r2, #84	; 0x54
    ad8c:	cmp	r3, #0
    ad90:	mov	r3, #84	; 0x54
    ad94:	movweq	r3, #60	; 0x3c
    ad98:	addeq	r1, r2, #60	; 0x3c
    ad9c:	ldr	r2, [r2, r3]
    ada0:	cmp	r2, #0
    ada4:	bne	ad84 <sf_gen_portop6+0x2c8>
    ada8:	b	adb0 <sf_gen_portop6+0x2f4>
    adac:	add	r1, sp, #8
    adb0:	str	r4, [r1]
    adb4:	ldr	r1, [r0, #44]	; 0x2c
    adb8:	clz	r1, r1
    adbc:	lsr	r1, r1, #5
    adc0:	str	r1, [r0, #44]	; 0x2c
    adc4:	ldr	r1, [r4, #96]	; 0x60
    adc8:	str	r1, [r0, #96]	; 0x60
    adcc:	sub	sp, fp, #16
    add0:	pop	{r4, r5, r6, sl, fp, pc}
    add4:	bl	fc4 <abort@plt>

0000add8 <sf_gen_portrangeop>:
    add8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    addc:	add	fp, sp, #28
    ade0:	sub	sp, sp, #20
    ade4:	mov	r7, r3
    ade8:	mov	r3, r2
    adec:	mov	r9, r1
    adf0:	mov	r4, r0
    adf4:	mov	r0, #3
    adf8:	mov	r1, #9
    adfc:	mov	r2, #16
    ae00:	bl	a9f8 <gen_cmp>
    ae04:	mov	sl, r0
    ae08:	ldr	r0, [pc, #1768]	; b4f8 <sf_gen_portrangeop+0x720>
    ae0c:	add	r0, pc, r0
    ae10:	ldrb	r0, [r0]
    ae14:	ldr	r1, [pc, #1760]	; b4fc <sf_gen_portrangeop+0x724>
    ae18:	ldr	r1, [pc, r1]
    ae1c:	cmp	r0, #0
    ae20:	str	r4, [sp, #12]
    ae24:	add	ip, r1, #6
    ae28:	beq	ae90 <sf_gen_portrangeop+0xb8>
    ae2c:	ldr	r5, [pc, #1748]	; b508 <sf_gen_portrangeop+0x730>
    ae30:	ldr	r5, [pc, r5]
    ae34:	cmn	r5, #1
    ae38:	bne	aeb0 <sf_gen_portrangeop+0xd8>
    ae3c:	ldr	r5, [pc, #1736]	; b50c <sf_gen_portrangeop+0x734>
    ae40:	mvn	r1, #15
    ae44:	ldr	r5, [pc, r5]
    ae48:	ldr	r0, [pc, #1728]	; b510 <sf_gen_portrangeop+0x738>
    ae4c:	ldr	r2, [pc, #1728]	; b514 <sf_gen_portrangeop+0x73c>
    ae50:	add	r0, pc, r0
    ae54:	add	r2, pc, r2
    ae58:	ldr	r3, [r0, r5, lsl #2]
    ae5c:	cmp	r3, #0
    ae60:	beq	ae9c <sf_gen_portrangeop+0xc4>
    ae64:	add	r3, r5, #1
    ae68:	adds	r1, r1, #1
    ae6c:	asr	r6, r3, #31
    ae70:	add	r6, r3, r6, lsr #28
    ae74:	bic	r6, r6, #15
    ae78:	sub	r5, r3, r6
    ae7c:	str	r5, [r2]
    ae80:	bne	ae58 <sf_gen_portrangeop+0x80>
    ae84:	ldr	r0, [pc, #1676]	; b518 <sf_gen_portrangeop+0x740>
    ae88:	add	r0, pc, r0
    ae8c:	bl	2124 <sf_bpf_error>
    ae90:	ldr	r8, [pc, #1640]	; b500 <sf_gen_portrangeop+0x728>
    ae94:	ldr	r8, [pc, r8]
    ae98:	b	afc4 <sf_gen_portrangeop+0x1ec>
    ae9c:	mov	r1, #1
    aea0:	str	r1, [r0, r5, lsl #2]
    aea4:	ldr	r0, [pc, #1648]	; b51c <sf_gen_portrangeop+0x744>
    aea8:	add	r0, pc, r0
    aeac:	str	r5, [r0]
    aeb0:	str	r9, [sp, #8]
    aeb4:	ldr	r0, [pc, #1636]	; b520 <sf_gen_portrangeop+0x748>
    aeb8:	ldr	r0, [pc, r0]
    aebc:	ldr	r9, [pc, #1632]	; b524 <sf_gen_portrangeop+0x74c>
    aec0:	add	r9, pc, r9
    aec4:	mov	r6, r9
    aec8:	ldr	r4, [r6, r0, lsl #3]!
    aecc:	cmp	r4, #19
    aed0:	bhi	af30 <sf_gen_portrangeop+0x158>
    aed4:	str	ip, [sp, #4]
    aed8:	add	r8, r0, #1
    aedc:	cmp	r0, #15
    aee0:	ldr	r1, [pc, #1600]	; b528 <sf_gen_portrangeop+0x750>
    aee4:	add	r1, pc, r1
    aee8:	str	r8, [r1]
    aeec:	bge	b4e8 <sf_gen_portrangeop+0x710>
    aef0:	mov	r0, #1024	; 0x400
    aef4:	lsl	r4, r0, r8
    aef8:	mov	r0, r4
    aefc:	bl	ed4 <malloc@plt>
    af00:	cmp	r0, #0
    af04:	str	r0, [r6, #12]
    af08:	beq	b4e8 <sf_gen_portrangeop+0x710>
    af0c:	mov	r1, #0
    af10:	mov	r2, r4
    af14:	add	r6, r6, #8
    af18:	bl	f40 <memset@plt>
    af1c:	ldr	ip, [sp, #4]
    af20:	cmp	r4, #19
    af24:	str	r4, [r6]
    af28:	bhi	af34 <sf_gen_portrangeop+0x15c>
    af2c:	b	b4e8 <sf_gen_portrangeop+0x710>
    af30:	mov	r8, r0
    af34:	sub	r0, r4, #20
    af38:	mov	r1, #97	; 0x61
    af3c:	str	r0, [r6]
    af40:	ldr	r6, [r6, #4]
    af44:	str	r1, [r6, r0]!
    af48:	cmp	r6, #0
    af4c:	str	r5, [r6, #12]
    af50:	beq	afc0 <sf_gen_portrangeop+0x1e8>
    af54:	ldr	r4, [r9, r8, lsl #3]!
    af58:	cmp	r4, #19
    af5c:	bhi	b070 <sf_gen_portrangeop+0x298>
    af60:	str	ip, [sp, #4]
    af64:	add	r5, r8, #1
    af68:	cmp	r8, #15
    af6c:	ldr	r0, [pc, #1464]	; b52c <sf_gen_portrangeop+0x754>
    af70:	add	r0, pc, r0
    af74:	str	r5, [r0]
    af78:	bge	b4e8 <sf_gen_portrangeop+0x710>
    af7c:	mov	r0, #1024	; 0x400
    af80:	lsl	r4, r0, r5
    af84:	mov	r0, r4
    af88:	bl	ed4 <malloc@plt>
    af8c:	cmp	r0, #0
    af90:	str	r0, [r9, #12]
    af94:	beq	b4e8 <sf_gen_portrangeop+0x710>
    af98:	mov	r1, #0
    af9c:	mov	r2, r4
    afa0:	mov	r8, r7
    afa4:	add	r9, r9, #8
    afa8:	bl	f40 <memset@plt>
    afac:	ldr	ip, [sp, #4]
    afb0:	cmp	r4, #19
    afb4:	str	r4, [r9]
    afb8:	bhi	b078 <sf_gen_portrangeop+0x2a0>
    afbc:	b	b4e8 <sf_gen_portrangeop+0x710>
    afc0:	ldr	r9, [sp, #8]
    afc4:	ldr	r6, [pc, #1336]	; b504 <sf_gen_portrangeop+0x72c>
    afc8:	add	r6, pc, r6
    afcc:	ldr	r4, [r6, r8, lsl #3]!
    afd0:	cmp	r4, #19
    afd4:	bhi	b040 <sf_gen_portrangeop+0x268>
    afd8:	str	r9, [sp, #8]
    afdc:	add	r5, r8, #1
    afe0:	cmp	r8, #15
    afe4:	ldr	r0, [pc, #1348]	; b530 <sf_gen_portrangeop+0x758>
    afe8:	add	r0, pc, r0
    afec:	str	r5, [r0]
    aff0:	bge	b4e8 <sf_gen_portrangeop+0x710>
    aff4:	mov	r0, #1024	; 0x400
    aff8:	mov	r9, ip
    affc:	lsl	r4, r0, r5
    b000:	mov	r0, r4
    b004:	bl	ed4 <malloc@plt>
    b008:	cmp	r0, #0
    b00c:	str	r0, [r6, #12]
    b010:	beq	b4e8 <sf_gen_portrangeop+0x710>
    b014:	mov	r1, #0
    b018:	mov	r2, r4
    b01c:	mov	r8, r7
    b020:	add	r6, r6, #8
    b024:	bl	f40 <memset@plt>
    b028:	mov	ip, r9
    b02c:	ldr	r9, [sp, #8]
    b030:	cmp	r4, #19
    b034:	str	r4, [r6]
    b038:	bhi	b048 <sf_gen_portrangeop+0x270>
    b03c:	b	b4e8 <sf_gen_portrangeop+0x710>
    b040:	mov	r5, r8
    b044:	mov	r8, r7
    b048:	sub	r0, r4, #20
    b04c:	mov	r1, #40	; 0x28
    b050:	str	r0, [r6]
    b054:	ldr	r6, [r6, #4]
    b058:	str	r1, [r6, r0]!
    b05c:	ldr	r0, [pc, #1232]	; b534 <sf_gen_portrangeop+0x75c>
    b060:	ldr	r0, [pc, r0]
    b064:	add	r0, r0, ip
    b068:	str	r0, [r6, #12]
    b06c:	b	b0ac <sf_gen_portrangeop+0x2d4>
    b070:	mov	r5, r8
    b074:	mov	r8, r7
    b078:	sub	r1, r4, #20
    b07c:	mov	r2, #72	; 0x48
    b080:	str	r1, [r9]
    b084:	ldr	r0, [r9, #4]
    b088:	str	r2, [r0, r1]!
    b08c:	mov	r2, r6
    b090:	str	ip, [r0, #12]
    b094:	mov	r1, r2
    b098:	ldr	r2, [r2, #16]
    b09c:	cmp	r2, #0
    b0a0:	bne	b094 <sf_gen_portrangeop+0x2bc>
    b0a4:	ldr	r9, [sp, #8]
    b0a8:	str	r0, [r1, #16]
    b0ac:	ldr	r7, [pc, #1156]	; b538 <sf_gen_portrangeop+0x760>
    b0b0:	add	r7, pc, r7
    b0b4:	ldr	r4, [r7, r5, lsl #3]!
    b0b8:	cmp	r4, #207	; 0xcf
    b0bc:	bhi	b110 <sf_gen_portrangeop+0x338>
    b0c0:	ldr	r1, [pc, #1140]	; b53c <sf_gen_portrangeop+0x764>
    b0c4:	add	r0, r5, #1
    b0c8:	cmp	r5, #15
    b0cc:	add	r1, pc, r1
    b0d0:	str	r0, [r1]
    b0d4:	bge	b4e8 <sf_gen_portrangeop+0x710>
    b0d8:	mov	r1, #1024	; 0x400
    b0dc:	lsl	r4, r1, r0
    b0e0:	mov	r0, r4
    b0e4:	bl	ed4 <malloc@plt>
    b0e8:	cmp	r0, #0
    b0ec:	str	r0, [r7, #12]
    b0f0:	beq	b4e8 <sf_gen_portrangeop+0x710>
    b0f4:	mov	r1, #0
    b0f8:	mov	r2, r4
    b0fc:	add	r7, r7, #8
    b100:	bl	f40 <memset@plt>
    b104:	cmp	r4, #207	; 0xcf
    b108:	str	r4, [r7]
    b10c:	bls	b4e8 <sf_gen_portrangeop+0x710>
    b110:	sub	r0, r4, #208	; 0xd0
    b114:	cmp	sl, #0
    b118:	str	r0, [r7]
    b11c:	ldr	r1, [r7, #4]
    b120:	add	r4, r1, r0
    b124:	movw	r1, #8191	; 0x1fff
    b128:	mov	r0, #69	; 0x45
    b12c:	str	r1, [r4, #20]
    b130:	str	r6, [r4, #4]
    b134:	str	r0, [r4, #8]
    b138:	ldr	r0, [r4, #44]	; 0x2c
    b13c:	clz	r0, r0
    b140:	lsr	r0, r0, #5
    b144:	str	r0, [r4, #44]	; 0x2c
    b148:	str	r4, [r4, #96]	; 0x60
    b14c:	beq	b17c <sf_gen_portrangeop+0x3a4>
    b150:	mov	r0, sl
    b154:	ldr	r1, [r0, #44]	; 0x2c
    b158:	add	r2, r0, #84	; 0x54
    b15c:	cmp	r1, #0
    b160:	mov	r1, #84	; 0x54
    b164:	movweq	r1, #60	; 0x3c
    b168:	addeq	r2, r0, #60	; 0x3c
    b16c:	ldr	r0, [r0, r1]
    b170:	str	r4, [r2]
    b174:	cmp	r0, #0
    b178:	bne	b154 <sf_gen_portrangeop+0x37c>
    b17c:	ldr	r0, [sl, #44]	; 0x2c
    b180:	cmp	r4, #0
    b184:	clz	r0, r0
    b188:	lsr	r0, r0, #5
    b18c:	str	r0, [sl, #44]	; 0x2c
    b190:	ldr	r0, [r4, #44]	; 0x2c
    b194:	clz	r1, r0
    b198:	lsr	r1, r1, #5
    b19c:	str	r1, [r4, #44]	; 0x2c
    b1a0:	str	r4, [sp, #16]
    b1a4:	beq	b1ec <sf_gen_portrangeop+0x414>
    b1a8:	mov	r2, #60	; 0x3c
    b1ac:	cmp	r0, #0
    b1b0:	mov	r1, r4
    b1b4:	movweq	r2, #84	; 0x54
    b1b8:	ldr	r0, [r1, r2]!
    b1bc:	cmp	r0, #0
    b1c0:	beq	b1f0 <sf_gen_portrangeop+0x418>
    b1c4:	ldr	r2, [r0, #44]	; 0x2c
    b1c8:	add	r1, r0, #84	; 0x54
    b1cc:	cmp	r2, #0
    b1d0:	mov	r2, #84	; 0x54
    b1d4:	movweq	r2, #60	; 0x3c
    b1d8:	addeq	r1, r0, #60	; 0x3c
    b1dc:	ldr	r0, [r0, r2]
    b1e0:	cmp	r0, #0
    b1e4:	bne	b1c4 <sf_gen_portrangeop+0x3ec>
    b1e8:	b	b1f0 <sf_gen_portrangeop+0x418>
    b1ec:	add	r1, sp, #16
    b1f0:	str	sl, [r1]
    b1f4:	cmp	r8, #4
    b1f8:	ldr	r0, [r4, #44]	; 0x2c
    b1fc:	clz	r0, r0
    b200:	lsr	r0, r0, #5
    b204:	str	r0, [r4, #44]	; 0x2c
    b208:	ldr	r0, [sl, #96]	; 0x60
    b20c:	str	r0, [r4, #96]	; 0x60
    b210:	bhi	b4f4 <sf_gen_portrangeop+0x71c>
    b214:	add	r0, pc, #4
    b218:	ldr	r1, [r0, r8, lsl #2]
    b21c:	add	pc, r0, r1
    b220:	.word	0x00000014
    b224:	.word	0x000001a4
    b228:	.word	0x000001ac
    b22c:	.word	0x00000014
    b230:	.word	0x000000d0
    b234:	ldr	r5, [sp, #12]
    b238:	mov	r0, #0
    b23c:	mov	r2, r9
    b240:	mov	r1, r5
    b244:	bl	b544 <gen_portrangeatom>
    b248:	mov	r6, r0
    b24c:	mov	r0, #2
    b250:	mov	r1, r5
    b254:	mov	r2, r9
    b258:	bl	b544 <gen_portrangeatom>
    b25c:	ldr	r1, [r6, #44]	; 0x2c
    b260:	cmp	r6, #0
    b264:	clz	r1, r1
    b268:	lsr	r1, r1, #5
    b26c:	str	r1, [r6, #44]	; 0x2c
    b270:	beq	b2ac <sf_gen_portrangeop+0x4d4>
    b274:	ldr	r2, [r0, #96]	; 0x60
    b278:	mov	r3, r6
    b27c:	b	b284 <sf_gen_portrangeop+0x4ac>
    b280:	ldr	r1, [r3, #44]	; 0x2c
    b284:	cmp	r1, #0
    b288:	mov	r1, #84	; 0x54
    b28c:	add	r7, r3, #84	; 0x54
    b290:	movweq	r1, #60	; 0x3c
    b294:	addeq	r7, r3, #60	; 0x3c
    b298:	ldr	r3, [r3, r1]
    b29c:	str	r2, [r7]
    b2a0:	cmp	r3, #0
    b2a4:	bne	b280 <sf_gen_portrangeop+0x4a8>
    b2a8:	ldr	r1, [r6, #44]	; 0x2c
    b2ac:	clz	r1, r1
    b2b0:	cmp	r0, #0
    b2b4:	lsr	r1, r1, #5
    b2b8:	str	r1, [r6, #44]	; 0x2c
    b2bc:	str	r0, [sp, #16]
    b2c0:	beq	b3e8 <sf_gen_portrangeop+0x610>
    b2c4:	mov	r2, r0
    b2c8:	ldr	r3, [r2, #44]	; 0x2c
    b2cc:	add	r1, r2, #84	; 0x54
    b2d0:	cmp	r3, #0
    b2d4:	mov	r3, #84	; 0x54
    b2d8:	movweq	r3, #60	; 0x3c
    b2dc:	addeq	r1, r2, #60	; 0x3c
    b2e0:	ldr	r2, [r2, r3]
    b2e4:	cmp	r2, #0
    b2e8:	bne	b2c8 <sf_gen_portrangeop+0x4f0>
    b2ec:	b	b3ec <sf_gen_portrangeop+0x614>
    b2f0:	ldr	r5, [sp, #12]
    b2f4:	mov	r0, #0
    b2f8:	mov	r2, r9
    b2fc:	mov	r1, r5
    b300:	bl	b544 <gen_portrangeatom>
    b304:	mov	r6, r0
    b308:	mov	r0, #2
    b30c:	mov	r1, r5
    b310:	mov	r2, r9
    b314:	bl	b544 <gen_portrangeatom>
    b318:	cmp	r6, #0
    b31c:	beq	b350 <sf_gen_portrangeop+0x578>
    b320:	ldr	r1, [r0, #96]	; 0x60
    b324:	mov	r2, r6
    b328:	ldr	r3, [r2, #44]	; 0x2c
    b32c:	add	r7, r2, #84	; 0x54
    b330:	cmp	r3, #0
    b334:	mov	r3, #84	; 0x54
    b338:	movweq	r3, #60	; 0x3c
    b33c:	addeq	r7, r2, #60	; 0x3c
    b340:	ldr	r2, [r2, r3]
    b344:	str	r1, [r7]
    b348:	cmp	r2, #0
    b34c:	bne	b328 <sf_gen_portrangeop+0x550>
    b350:	ldr	r1, [r6, #44]	; 0x2c
    b354:	cmp	r0, #0
    b358:	clz	r1, r1
    b35c:	lsr	r1, r1, #5
    b360:	str	r1, [r6, #44]	; 0x2c
    b364:	ldr	r2, [r0, #44]	; 0x2c
    b368:	clz	r1, r2
    b36c:	lsr	r1, r1, #5
    b370:	str	r1, [r0, #44]	; 0x2c
    b374:	str	r0, [sp, #16]
    b378:	beq	b3f4 <sf_gen_portrangeop+0x61c>
    b37c:	cmp	r2, #0
    b380:	mov	r2, #60	; 0x3c
    b384:	add	r1, r0, #60	; 0x3c
    b388:	movweq	r2, #84	; 0x54
    b38c:	addeq	r1, r0, #84	; 0x54
    b390:	ldr	r2, [r0, r2]
    b394:	cmp	r2, #0
    b398:	beq	b3f8 <sf_gen_portrangeop+0x620>
    b39c:	ldr	r3, [r2, #44]	; 0x2c
    b3a0:	add	r1, r2, #84	; 0x54
    b3a4:	cmp	r3, #0
    b3a8:	mov	r3, #84	; 0x54
    b3ac:	movweq	r3, #60	; 0x3c
    b3b0:	addeq	r1, r2, #60	; 0x3c
    b3b4:	ldr	r2, [r2, r3]
    b3b8:	cmp	r2, #0
    b3bc:	bne	b39c <sf_gen_portrangeop+0x5c4>
    b3c0:	b	b3f8 <sf_gen_portrangeop+0x620>
    b3c4:	mov	r0, #0
    b3c8:	b	b3d0 <sf_gen_portrangeop+0x5f8>
    b3cc:	mov	r0, #2
    b3d0:	ldr	r1, [sp, #12]
    b3d4:	mov	r2, r9
    b3d8:	bl	b544 <gen_portrangeatom>
    b3dc:	cmp	r4, #0
    b3e0:	bne	b41c <sf_gen_portrangeop+0x644>
    b3e4:	b	b44c <sf_gen_portrangeop+0x674>
    b3e8:	add	r1, sp, #16
    b3ec:	str	r6, [r1]
    b3f0:	b	b40c <sf_gen_portrangeop+0x634>
    b3f4:	add	r1, sp, #16
    b3f8:	str	r6, [r1]
    b3fc:	ldr	r1, [r0, #44]	; 0x2c
    b400:	clz	r1, r1
    b404:	lsr	r1, r1, #5
    b408:	str	r1, [r0, #44]	; 0x2c
    b40c:	ldr	r1, [r6, #96]	; 0x60
    b410:	str	r1, [r0, #96]	; 0x60
    b414:	cmp	r4, #0
    b418:	beq	b44c <sf_gen_portrangeop+0x674>
    b41c:	ldr	r1, [r0, #96]	; 0x60
    b420:	mov	r2, r4
    b424:	ldr	r3, [r2, #44]	; 0x2c
    b428:	add	r7, r2, #84	; 0x54
    b42c:	cmp	r3, #0
    b430:	mov	r3, #84	; 0x54
    b434:	movweq	r3, #60	; 0x3c
    b438:	addeq	r7, r2, #60	; 0x3c
    b43c:	ldr	r2, [r2, r3]
    b440:	str	r1, [r7]
    b444:	cmp	r2, #0
    b448:	bne	b424 <sf_gen_portrangeop+0x64c>
    b44c:	ldr	r1, [r4, #44]	; 0x2c
    b450:	cmp	r0, #0
    b454:	clz	r1, r1
    b458:	lsr	r1, r1, #5
    b45c:	str	r1, [r4, #44]	; 0x2c
    b460:	ldr	r2, [r0, #44]	; 0x2c
    b464:	clz	r1, r2
    b468:	lsr	r1, r1, #5
    b46c:	str	r1, [r0, #44]	; 0x2c
    b470:	str	r0, [sp, #16]
    b474:	beq	b4c0 <sf_gen_portrangeop+0x6e8>
    b478:	cmp	r2, #0
    b47c:	mov	r2, #60	; 0x3c
    b480:	add	r1, r0, #60	; 0x3c
    b484:	movweq	r2, #84	; 0x54
    b488:	addeq	r1, r0, #84	; 0x54
    b48c:	ldr	r2, [r0, r2]
    b490:	cmp	r2, #0
    b494:	beq	b4c4 <sf_gen_portrangeop+0x6ec>
    b498:	ldr	r3, [r2, #44]	; 0x2c
    b49c:	add	r1, r2, #84	; 0x54
    b4a0:	cmp	r3, #0
    b4a4:	mov	r3, #84	; 0x54
    b4a8:	movweq	r3, #60	; 0x3c
    b4ac:	addeq	r1, r2, #60	; 0x3c
    b4b0:	ldr	r2, [r2, r3]
    b4b4:	cmp	r2, #0
    b4b8:	bne	b498 <sf_gen_portrangeop+0x6c0>
    b4bc:	b	b4c4 <sf_gen_portrangeop+0x6ec>
    b4c0:	add	r1, sp, #16
    b4c4:	str	r4, [r1]
    b4c8:	ldr	r1, [r0, #44]	; 0x2c
    b4cc:	clz	r1, r1
    b4d0:	lsr	r1, r1, #5
    b4d4:	str	r1, [r0, #44]	; 0x2c
    b4d8:	ldr	r1, [r4, #96]	; 0x60
    b4dc:	str	r1, [r0, #96]	; 0x60
    b4e0:	sub	sp, fp, #28
    b4e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    b4e8:	ldr	r0, [pc, #80]	; b540 <sf_gen_portrangeop+0x768>
    b4ec:	add	r0, pc, r0
    b4f0:	bl	2124 <sf_bpf_error>
    b4f4:	bl	fc4 <abort@plt>
    b4f8:	.word	0x0003c6f4
    b4fc:	.word	0x0003c628
    b500:	.word	0x0003c668
    b504:	.word	0x0003c4b4
    b508:	.word	0x0003c6d8
    b50c:	.word	0x0003c6c8
    b510:	.word	0x0003c6c0
    b514:	.word	0x0003c6b8
    b518:	.word	0x0001fbcd
    b51c:	.word	0x0003c660
    b520:	.word	0x0003c644
    b524:	.word	0x0003c5bc
    b528:	.word	0x0003c618
    b52c:	.word	0x0003c58c
    b530:	.word	0x0003c514
    b534:	.word	0x0003c3dc
    b538:	.word	0x0003c3cc
    b53c:	.word	0x0003c430
    b540:	.word	0x0001eb18

0000b544 <gen_portrangeatom>:
    b544:	push	{r4, r5, r6, r7, fp, lr}
    b548:	add	fp, sp, #16
    b54c:	sub	sp, sp, #8
    b550:	mov	r7, r0
    b554:	cmp	r1, r2
    b558:	mov	r3, r1
    b55c:	mov	r6, r1
    b560:	mov	r5, r2
    b564:	mov	r0, #5
    b568:	movgt	r3, r2
    b56c:	mov	r1, r7
    b570:	mov	r2, #8
    b574:	bl	17da8 <gen_cmp_ge>
    b578:	cmp	r6, r5
    b57c:	mov	r4, r0
    b580:	mov	r0, #5
    b584:	mov	r1, r7
    b588:	mov	r2, #8
    b58c:	movgt	r5, r6
    b590:	mov	r3, r5
    b594:	bl	1c85c <gen_cmp_le>
    b598:	cmp	r4, #0
    b59c:	beq	b5d0 <gen_portrangeatom+0x8c>
    b5a0:	ldr	r1, [r0, #96]	; 0x60
    b5a4:	mov	r2, r4
    b5a8:	ldr	r3, [r2, #44]	; 0x2c
    b5ac:	add	r7, r2, #84	; 0x54
    b5b0:	cmp	r3, #0
    b5b4:	mov	r3, #84	; 0x54
    b5b8:	movweq	r3, #60	; 0x3c
    b5bc:	addeq	r7, r2, #60	; 0x3c
    b5c0:	ldr	r2, [r2, r3]
    b5c4:	str	r1, [r7]
    b5c8:	cmp	r2, #0
    b5cc:	bne	b5a8 <gen_portrangeatom+0x64>
    b5d0:	ldr	r1, [r4, #44]	; 0x2c
    b5d4:	cmp	r0, #0
    b5d8:	clz	r1, r1
    b5dc:	lsr	r1, r1, #5
    b5e0:	str	r1, [r4, #44]	; 0x2c
    b5e4:	ldr	r2, [r0, #44]	; 0x2c
    b5e8:	clz	r1, r2
    b5ec:	lsr	r1, r1, #5
    b5f0:	str	r1, [r0, #44]	; 0x2c
    b5f4:	str	r0, [sp, #4]
    b5f8:	beq	b644 <gen_portrangeatom+0x100>
    b5fc:	cmp	r2, #0
    b600:	mov	r2, #60	; 0x3c
    b604:	add	r1, r0, #60	; 0x3c
    b608:	movweq	r2, #84	; 0x54
    b60c:	addeq	r1, r0, #84	; 0x54
    b610:	ldr	r2, [r0, r2]
    b614:	cmp	r2, #0
    b618:	beq	b648 <gen_portrangeatom+0x104>
    b61c:	ldr	r3, [r2, #44]	; 0x2c
    b620:	add	r1, r2, #84	; 0x54
    b624:	cmp	r3, #0
    b628:	mov	r3, #84	; 0x54
    b62c:	movweq	r3, #60	; 0x3c
    b630:	addeq	r1, r2, #60	; 0x3c
    b634:	ldr	r2, [r2, r3]
    b638:	cmp	r2, #0
    b63c:	bne	b61c <gen_portrangeatom+0xd8>
    b640:	b	b648 <gen_portrangeatom+0x104>
    b644:	add	r1, sp, #4
    b648:	str	r4, [r1]
    b64c:	ldr	r1, [r0, #44]	; 0x2c
    b650:	clz	r1, r1
    b654:	lsr	r1, r1, #5
    b658:	str	r1, [r0, #44]	; 0x2c
    b65c:	ldr	r1, [r4, #96]	; 0x60
    b660:	str	r1, [r0, #96]	; 0x60
    b664:	sub	sp, fp, #16
    b668:	pop	{r4, r5, r6, r7, fp, pc}

0000b66c <sf_gen_portrangeop6>:
    b66c:	push	{r4, r5, r6, r7, fp, lr}
    b670:	add	fp, sp, #16
    b674:	sub	sp, sp, #16
    b678:	mov	r5, r3
    b67c:	mov	r3, r2
    b680:	mov	r6, r1
    b684:	mov	r7, r0
    b688:	mov	r0, #3
    b68c:	mov	r1, #6
    b690:	mov	r2, #16
    b694:	bl	a9f8 <gen_cmp>
    b698:	cmp	r5, #4
    b69c:	bhi	b970 <sf_gen_portrangeop6+0x304>
    b6a0:	mov	r4, r0
    b6a4:	add	r0, pc, #4
    b6a8:	ldr	r1, [r0, r5, lsl #2]
    b6ac:	add	pc, r0, r1
    b6b0:	.word	0x00000014
    b6b4:	.word	0x0000019c
    b6b8:	.word	0x000001a4
    b6bc:	.word	0x00000014
    b6c0:	.word	0x000000cc
    b6c4:	mov	r0, #0
    b6c8:	mov	r1, r7
    b6cc:	mov	r2, r6
    b6d0:	bl	b974 <gen_portrangeatom6>
    b6d4:	mov	r5, r0
    b6d8:	mov	r0, #2
    b6dc:	mov	r1, r7
    b6e0:	mov	r2, r6
    b6e4:	bl	b974 <gen_portrangeatom6>
    b6e8:	ldr	r1, [r5, #44]	; 0x2c
    b6ec:	cmp	r5, #0
    b6f0:	clz	r1, r1
    b6f4:	lsr	r1, r1, #5
    b6f8:	str	r1, [r5, #44]	; 0x2c
    b6fc:	beq	b738 <sf_gen_portrangeop6+0xcc>
    b700:	ldr	r2, [r0, #96]	; 0x60
    b704:	mov	r3, r5
    b708:	b	b710 <sf_gen_portrangeop6+0xa4>
    b70c:	ldr	r1, [r3, #44]	; 0x2c
    b710:	cmp	r1, #0
    b714:	mov	r1, #84	; 0x54
    b718:	add	r7, r3, #84	; 0x54
    b71c:	movweq	r1, #60	; 0x3c
    b720:	addeq	r7, r3, #60	; 0x3c
    b724:	ldr	r3, [r3, r1]
    b728:	str	r2, [r7]
    b72c:	cmp	r3, #0
    b730:	bne	b70c <sf_gen_portrangeop6+0xa0>
    b734:	ldr	r1, [r5, #44]	; 0x2c
    b738:	clz	r1, r1
    b73c:	cmp	r0, #0
    b740:	lsr	r1, r1, #5
    b744:	str	r1, [r5, #44]	; 0x2c
    b748:	str	r0, [sp, #4]
    b74c:	beq	b870 <sf_gen_portrangeop6+0x204>
    b750:	mov	r2, r0
    b754:	ldr	r3, [r2, #44]	; 0x2c
    b758:	add	r1, r2, #84	; 0x54
    b75c:	cmp	r3, #0
    b760:	mov	r3, #84	; 0x54
    b764:	movweq	r3, #60	; 0x3c
    b768:	addeq	r1, r2, #60	; 0x3c
    b76c:	ldr	r2, [r2, r3]
    b770:	cmp	r2, #0
    b774:	bne	b754 <sf_gen_portrangeop6+0xe8>
    b778:	b	b874 <sf_gen_portrangeop6+0x208>
    b77c:	mov	r0, #0
    b780:	mov	r1, r7
    b784:	mov	r2, r6
    b788:	bl	b974 <gen_portrangeatom6>
    b78c:	mov	r5, r0
    b790:	mov	r0, #2
    b794:	mov	r1, r7
    b798:	mov	r2, r6
    b79c:	bl	b974 <gen_portrangeatom6>
    b7a0:	cmp	r5, #0
    b7a4:	beq	b7d8 <sf_gen_portrangeop6+0x16c>
    b7a8:	ldr	r1, [r0, #96]	; 0x60
    b7ac:	mov	r2, r5
    b7b0:	ldr	r3, [r2, #44]	; 0x2c
    b7b4:	add	r7, r2, #84	; 0x54
    b7b8:	cmp	r3, #0
    b7bc:	mov	r3, #84	; 0x54
    b7c0:	movweq	r3, #60	; 0x3c
    b7c4:	addeq	r7, r2, #60	; 0x3c
    b7c8:	ldr	r2, [r2, r3]
    b7cc:	str	r1, [r7]
    b7d0:	cmp	r2, #0
    b7d4:	bne	b7b0 <sf_gen_portrangeop6+0x144>
    b7d8:	ldr	r1, [r5, #44]	; 0x2c
    b7dc:	cmp	r0, #0
    b7e0:	clz	r1, r1
    b7e4:	lsr	r1, r1, #5
    b7e8:	str	r1, [r5, #44]	; 0x2c
    b7ec:	ldr	r2, [r0, #44]	; 0x2c
    b7f0:	clz	r1, r2
    b7f4:	lsr	r1, r1, #5
    b7f8:	str	r1, [r0, #44]	; 0x2c
    b7fc:	str	r0, [sp, #12]
    b800:	beq	b87c <sf_gen_portrangeop6+0x210>
    b804:	cmp	r2, #0
    b808:	mov	r2, #60	; 0x3c
    b80c:	add	r1, r0, #60	; 0x3c
    b810:	movweq	r2, #84	; 0x54
    b814:	addeq	r1, r0, #84	; 0x54
    b818:	ldr	r2, [r0, r2]
    b81c:	cmp	r2, #0
    b820:	beq	b880 <sf_gen_portrangeop6+0x214>
    b824:	ldr	r3, [r2, #44]	; 0x2c
    b828:	add	r1, r2, #84	; 0x54
    b82c:	cmp	r3, #0
    b830:	mov	r3, #84	; 0x54
    b834:	movweq	r3, #60	; 0x3c
    b838:	addeq	r1, r2, #60	; 0x3c
    b83c:	ldr	r2, [r2, r3]
    b840:	cmp	r2, #0
    b844:	bne	b824 <sf_gen_portrangeop6+0x1b8>
    b848:	b	b880 <sf_gen_portrangeop6+0x214>
    b84c:	mov	r0, #0
    b850:	b	b858 <sf_gen_portrangeop6+0x1ec>
    b854:	mov	r0, #2
    b858:	mov	r1, r7
    b85c:	mov	r2, r6
    b860:	bl	b974 <gen_portrangeatom6>
    b864:	cmp	r4, #0
    b868:	bne	b8a4 <sf_gen_portrangeop6+0x238>
    b86c:	b	b8d4 <sf_gen_portrangeop6+0x268>
    b870:	add	r1, sp, #4
    b874:	str	r5, [r1]
    b878:	b	b894 <sf_gen_portrangeop6+0x228>
    b87c:	add	r1, sp, #12
    b880:	str	r5, [r1]
    b884:	ldr	r1, [r0, #44]	; 0x2c
    b888:	clz	r1, r1
    b88c:	lsr	r1, r1, #5
    b890:	str	r1, [r0, #44]	; 0x2c
    b894:	ldr	r1, [r5, #96]	; 0x60
    b898:	str	r1, [r0, #96]	; 0x60
    b89c:	cmp	r4, #0
    b8a0:	beq	b8d4 <sf_gen_portrangeop6+0x268>
    b8a4:	ldr	r1, [r0, #96]	; 0x60
    b8a8:	mov	r2, r4
    b8ac:	ldr	r3, [r2, #44]	; 0x2c
    b8b0:	add	r7, r2, #84	; 0x54
    b8b4:	cmp	r3, #0
    b8b8:	mov	r3, #84	; 0x54
    b8bc:	movweq	r3, #60	; 0x3c
    b8c0:	addeq	r7, r2, #60	; 0x3c
    b8c4:	ldr	r2, [r2, r3]
    b8c8:	str	r1, [r7]
    b8cc:	cmp	r2, #0
    b8d0:	bne	b8ac <sf_gen_portrangeop6+0x240>
    b8d4:	ldr	r1, [r4, #44]	; 0x2c
    b8d8:	cmp	r0, #0
    b8dc:	clz	r1, r1
    b8e0:	lsr	r1, r1, #5
    b8e4:	str	r1, [r4, #44]	; 0x2c
    b8e8:	ldr	r2, [r0, #44]	; 0x2c
    b8ec:	clz	r1, r2
    b8f0:	lsr	r1, r1, #5
    b8f4:	str	r1, [r0, #44]	; 0x2c
    b8f8:	str	r0, [sp, #8]
    b8fc:	beq	b948 <sf_gen_portrangeop6+0x2dc>
    b900:	cmp	r2, #0
    b904:	mov	r2, #60	; 0x3c
    b908:	add	r1, r0, #60	; 0x3c
    b90c:	movweq	r2, #84	; 0x54
    b910:	addeq	r1, r0, #84	; 0x54
    b914:	ldr	r2, [r0, r2]
    b918:	cmp	r2, #0
    b91c:	beq	b94c <sf_gen_portrangeop6+0x2e0>
    b920:	ldr	r3, [r2, #44]	; 0x2c
    b924:	add	r1, r2, #84	; 0x54
    b928:	cmp	r3, #0
    b92c:	mov	r3, #84	; 0x54
    b930:	movweq	r3, #60	; 0x3c
    b934:	addeq	r1, r2, #60	; 0x3c
    b938:	ldr	r2, [r2, r3]
    b93c:	cmp	r2, #0
    b940:	bne	b920 <sf_gen_portrangeop6+0x2b4>
    b944:	b	b94c <sf_gen_portrangeop6+0x2e0>
    b948:	add	r1, sp, #8
    b94c:	str	r4, [r1]
    b950:	ldr	r1, [r0, #44]	; 0x2c
    b954:	clz	r1, r1
    b958:	lsr	r1, r1, #5
    b95c:	str	r1, [r0, #44]	; 0x2c
    b960:	ldr	r1, [r4, #96]	; 0x60
    b964:	str	r1, [r0, #96]	; 0x60
    b968:	sub	sp, fp, #16
    b96c:	pop	{r4, r5, r6, r7, fp, pc}
    b970:	bl	fc4 <abort@plt>

0000b974 <gen_portrangeatom6>:
    b974:	push	{r4, r5, r6, r7, fp, lr}
    b978:	add	fp, sp, #16
    b97c:	sub	sp, sp, #8
    b980:	mov	r7, r0
    b984:	cmp	r1, r2
    b988:	mov	r3, r1
    b98c:	mov	r6, r1
    b990:	mov	r5, r2
    b994:	mov	r0, #6
    b998:	movgt	r3, r2
    b99c:	mov	r1, r7
    b9a0:	mov	r2, #8
    b9a4:	bl	17da8 <gen_cmp_ge>
    b9a8:	cmp	r6, r5
    b9ac:	mov	r4, r0
    b9b0:	mov	r0, #6
    b9b4:	mov	r1, r7
    b9b8:	mov	r2, #8
    b9bc:	movgt	r5, r6
    b9c0:	mov	r3, r5
    b9c4:	bl	1c85c <gen_cmp_le>
    b9c8:	cmp	r4, #0
    b9cc:	beq	ba00 <gen_portrangeatom6+0x8c>
    b9d0:	ldr	r1, [r0, #96]	; 0x60
    b9d4:	mov	r2, r4
    b9d8:	ldr	r3, [r2, #44]	; 0x2c
    b9dc:	add	r7, r2, #84	; 0x54
    b9e0:	cmp	r3, #0
    b9e4:	mov	r3, #84	; 0x54
    b9e8:	movweq	r3, #60	; 0x3c
    b9ec:	addeq	r7, r2, #60	; 0x3c
    b9f0:	ldr	r2, [r2, r3]
    b9f4:	str	r1, [r7]
    b9f8:	cmp	r2, #0
    b9fc:	bne	b9d8 <gen_portrangeatom6+0x64>
    ba00:	ldr	r1, [r4, #44]	; 0x2c
    ba04:	cmp	r0, #0
    ba08:	clz	r1, r1
    ba0c:	lsr	r1, r1, #5
    ba10:	str	r1, [r4, #44]	; 0x2c
    ba14:	ldr	r2, [r0, #44]	; 0x2c
    ba18:	clz	r1, r2
    ba1c:	lsr	r1, r1, #5
    ba20:	str	r1, [r0, #44]	; 0x2c
    ba24:	str	r0, [sp, #4]
    ba28:	beq	ba74 <gen_portrangeatom6+0x100>
    ba2c:	cmp	r2, #0
    ba30:	mov	r2, #60	; 0x3c
    ba34:	add	r1, r0, #60	; 0x3c
    ba38:	movweq	r2, #84	; 0x54
    ba3c:	addeq	r1, r0, #84	; 0x54
    ba40:	ldr	r2, [r0, r2]
    ba44:	cmp	r2, #0
    ba48:	beq	ba78 <gen_portrangeatom6+0x104>
    ba4c:	ldr	r3, [r2, #44]	; 0x2c
    ba50:	add	r1, r2, #84	; 0x54
    ba54:	cmp	r3, #0
    ba58:	mov	r3, #84	; 0x54
    ba5c:	movweq	r3, #60	; 0x3c
    ba60:	addeq	r1, r2, #60	; 0x3c
    ba64:	ldr	r2, [r2, r3]
    ba68:	cmp	r2, #0
    ba6c:	bne	ba4c <gen_portrangeatom6+0xd8>
    ba70:	b	ba78 <gen_portrangeatom6+0x104>
    ba74:	add	r1, sp, #4
    ba78:	str	r4, [r1]
    ba7c:	ldr	r1, [r0, #44]	; 0x2c
    ba80:	clz	r1, r1
    ba84:	lsr	r1, r1, #5
    ba88:	str	r1, [r0, #44]	; 0x2c
    ba8c:	ldr	r1, [r4, #96]	; 0x60
    ba90:	str	r1, [r0, #96]	; 0x60
    ba94:	sub	sp, fp, #16
    ba98:	pop	{r4, r5, r6, r7, fp, pc}

0000ba9c <sf_gen_scode>:
    ba9c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    baa0:	add	fp, sp, #28
    baa4:	sub	sp, sp, #44	; 0x2c
    baa8:	uxtb	r8, r1
    baac:	ubfx	r4, r1, #16, #8
    bab0:	ubfx	r5, r1, #8, #8
    bab4:	cmp	r8, #7
    bab8:	bhi	c3c4 <sf_gen_scode+0x928>
    babc:	mov	r7, r0
    bac0:	lsr	r0, r1, #8
    bac4:	add	r1, pc, #4
    bac8:	ldr	r2, [r1, r8, lsl #2]
    bacc:	add	pc, r1, r2
    bad0:	.word	0x00000020
    bad4:	.word	0x00000020
    bad8:	.word	0x00000178
    badc:	.word	0x000001c8
    bae0:	.word	0x00000900
    bae4:	.word	0x000002d0
    bae8:	.word	0x00000238
    baec:	.word	0x0000025c
    baf0:	uxtb	r0, r0
    baf4:	cmp	r0, #12
    baf8:	beq	bdc8 <sf_gen_scode+0x32c>
    bafc:	cmp	r0, #1
    bb00:	bne	bdec <sf_gen_scode+0x350>
    bb04:	ldr	r0, [pc, #2552]	; c504 <sf_gen_scode+0xa68>
    bb08:	ldr	r0, [pc, r0]
    bb0c:	cmp	r0, #104	; 0x68
    bb10:	ble	c1e0 <sf_gen_scode+0x744>
    bb14:	sub	r1, r0, #105	; 0x69
    bb18:	mov	r6, r4
    bb1c:	cmp	r1, #58	; 0x3a
    bb20:	bhi	c340 <sf_gen_scode+0x8a4>
    bb24:	add	r0, pc, #4
    bb28:	ldr	r1, [r0, r1, lsl #2]
    bb2c:	add	pc, r0, r1
    bb30:	.word	0x000000ec
    bb34:	.word	0x00000978
    bb38:	.word	0x00000978
    bb3c:	.word	0x00000978
    bb40:	.word	0x00000978
    bb44:	.word	0x00000978
    bb48:	.word	0x00000978
    bb4c:	.word	0x00000978
    bb50:	.word	0x00000978
    bb54:	.word	0x00000978
    bb58:	.word	0x00000978
    bb5c:	.word	0x00000978
    bb60:	.word	0x00000978
    bb64:	.word	0x00000978
    bb68:	.word	0x000000ec
    bb6c:	.word	0x00000978
    bb70:	.word	0x00000978
    bb74:	.word	0x0000081c
    bb78:	.word	0x00000708
    bb7c:	.word	0x00000978
    bb80:	.word	0x00000978
    bb84:	.word	0x00000978
    bb88:	.word	0x000000ec
    bb8c:	.word	0x00000978
    bb90:	.word	0x00000978
    bb94:	.word	0x00000978
    bb98:	.word	0x00000978
    bb9c:	.word	0x00000978
    bba0:	.word	0x00000978
    bba4:	.word	0x00000978
    bba8:	.word	0x00000978
    bbac:	.word	0x00000978
    bbb0:	.word	0x00000978
    bbb4:	.word	0x00000978
    bbb8:	.word	0x00000978
    bbbc:	.word	0x00000978
    bbc0:	.word	0x00000978
    bbc4:	.word	0x00000978
    bbc8:	.word	0x00000978
    bbcc:	.word	0x00000978
    bbd0:	.word	0x00000978
    bbd4:	.word	0x00000978
    bbd8:	.word	0x00000978
    bbdc:	.word	0x00000978
    bbe0:	.word	0x00000978
    bbe4:	.word	0x00000978
    bbe8:	.word	0x00000978
    bbec:	.word	0x00000978
    bbf0:	.word	0x00000978
    bbf4:	.word	0x00000978
    bbf8:	.word	0x00000978
    bbfc:	.word	0x00000978
    bc00:	.word	0x00000978
    bc04:	.word	0x00000978
    bc08:	.word	0x00000978
    bc0c:	.word	0x00000978
    bc10:	.word	0x00000978
    bc14:	.word	0x00000978
    bc18:	.word	0x000000ec
    bc1c:	mov	r0, r7
    bc20:	bl	20ab8 <pcap_ether_hostton>
    bc24:	cmp	r0, #0
    bc28:	beq	c4b4 <sf_gen_scode+0xa18>
    bc2c:	mov	r1, r6
    bc30:	mov	r4, r0
    bc34:	bl	d11c <gen_wlanhostop>
    bc38:	mov	r6, r0
    bc3c:	mov	r0, r4
    bc40:	bl	e5c <free@plt>
    bc44:	b	c1d4 <sf_gen_scode+0x738>
    bc48:	mov	r0, r7
    bc4c:	bl	20530 <pcap_nametonetaddr>
    bc50:	cmp	r0, #0
    bc54:	beq	c3f0 <sf_gen_scode+0x954>
    bc58:	movw	r3, #65534	; 0xfffe
    bc5c:	sub	r2, r0, #1
    bc60:	mvn	r1, #0
    bc64:	movt	r3, #255	; 0xff
    bc68:	cmp	r2, r3
    bc6c:	bhi	bc90 <sf_gen_scode+0x1f4>
    bc70:	mvn	r2, #0
    bc74:	mvn	r3, #-16777216	; 0xff000000
    bc78:	mvn	r1, #0
    bc7c:	add	r7, r2, r0, lsl #8
    bc80:	lsl	r1, r1, #8
    bc84:	lsl	r0, r0, #8
    bc88:	cmp	r7, r3
    bc8c:	bcc	bc7c <sf_gen_scode+0x1e0>
    bc90:	str	r8, [sp]
    bc94:	b	bdd8 <sf_gen_scode+0x33c>
    bc98:	mvn	r1, #4
    bc9c:	mov	r5, r4
    bca0:	uxtb	r4, r0
    bca4:	uxtab	r1, r1, r0
    bca8:	cmp	r1, #3
    bcac:	bcc	bcb8 <sf_gen_scode+0x21c>
    bcb0:	cmp	r4, #0
    bcb4:	bne	c400 <sf_gen_scode+0x964>
    bcb8:	sub	r1, fp, #32
    bcbc:	add	r2, sp, #20
    bcc0:	mov	r0, r7
    bcc4:	bl	2054c <pcap_nametoport>
    bcc8:	cmp	r0, #0
    bccc:	beq	c40c <sf_gen_scode+0x970>
    bcd0:	cmp	r4, #5
    bcd4:	beq	bfdc <sf_gen_scode+0x540>
    bcd8:	cmp	r4, #6
    bcdc:	beq	bfbc <sf_gen_scode+0x520>
    bce0:	cmp	r4, #7
    bce4:	bne	c020 <sf_gen_scode+0x584>
    bce8:	ldr	r0, [sp, #20]
    bcec:	cmp	r0, #132	; 0x84
    bcf0:	beq	c448 <sf_gen_scode+0x9ac>
    bcf4:	cmp	r0, #6
    bcf8:	beq	c458 <sf_gen_scode+0x9bc>
    bcfc:	mov	r4, r5
    bd00:	mov	r1, #17
    bd04:	b	bff8 <sf_gen_scode+0x55c>
    bd08:	mov	r0, r7
    bd0c:	mov	r1, r5
    bd10:	bl	1040c <lookup_proto>
    bd14:	cmp	r0, #0
    bd18:	str	r0, [sp, #20]
    bd1c:	blt	c3e0 <sf_gen_scode+0x944>
    bd20:	mov	r1, r5
    bd24:	bl	1056c <gen_protochain>
    bd28:	b	bde4 <sf_gen_scode+0x348>
    bd2c:	mvn	r1, #4
    bd30:	mov	r5, r4
    bd34:	uxtb	r4, r0
    bd38:	uxtab	r1, r1, r0
    bd3c:	cmp	r1, #3
    bd40:	bcc	bd4c <sf_gen_scode+0x2b0>
    bd44:	cmp	r4, #0
    bd48:	bne	c41c <sf_gen_scode+0x980>
    bd4c:	sub	r1, fp, #32
    bd50:	add	r2, sp, #16
    bd54:	add	r3, sp, #20
    bd58:	mov	r0, r7
    bd5c:	bl	205f4 <pcap_nametoportrange>
    bd60:	cmp	r0, #0
    bd64:	beq	c428 <sf_gen_scode+0x98c>
    bd68:	cmp	r4, #5
    bd6c:	beq	c0dc <sf_gen_scode+0x640>
    bd70:	cmp	r4, #6
    bd74:	beq	c000 <sf_gen_scode+0x564>
    bd78:	cmp	r4, #7
    bd7c:	bne	c100 <sf_gen_scode+0x664>
    bd80:	ldr	r0, [sp, #20]
    bd84:	cmp	r0, #132	; 0x84
    bd88:	beq	c478 <sf_gen_scode+0x9dc>
    bd8c:	cmp	r0, #6
    bd90:	beq	c488 <sf_gen_scode+0x9ec>
    bd94:	mov	r4, r5
    bd98:	mov	r2, #17
    bd9c:	b	c0f8 <sf_gen_scode+0x65c>
    bda0:	mov	r0, r7
    bda4:	mov	r1, r5
    bda8:	bl	1040c <lookup_proto>
    bdac:	cmp	r0, #0
    bdb0:	str	r0, [sp, #20]
    bdb4:	blt	c3e0 <sf_gen_scode+0x944>
    bdb8:	mov	r1, r5
    bdbc:	mov	r2, r4
    bdc0:	bl	69ec <gen_proto>
    bdc4:	b	bde4 <sf_gen_scode+0x348>
    bdc8:	mov	r0, r7
    bdcc:	bl	20bb0 <__pcap_nametodnaddr>
    bdd0:	str	r8, [sp]
    bdd4:	mov	r1, #0
    bdd8:	mov	r2, r5
    bddc:	mov	r3, r4
    bde0:	bl	c574 <gen_host>
    bde4:	mov	r6, r0
    bde8:	b	c1d4 <sf_gen_scode+0x738>
    bdec:	mvn	r0, #0
    bdf0:	str	r7, [sp, #8]
    bdf4:	str	r0, [sp, #36]	; 0x24
    bdf8:	str	r0, [sp, #32]
    bdfc:	str	r0, [sp, #28]
    be00:	str	r0, [sp, #24]
    be04:	mov	r0, r7
    be08:	bl	204d0 <pcap_nametoaddrinfo>
    be0c:	cmp	r0, #0
    be10:	beq	c438 <sf_gen_scode+0x99c>
    be14:	ldr	r1, [pc, #1780]	; c510 <sf_gen_scode+0xa74>
    be18:	mov	sl, r5
    be1c:	mov	r6, #0
    be20:	mov	r9, r0
    be24:	add	r1, pc, r1
    be28:	str	r0, [r1]
    be2c:	ldr	r1, [pc, #1760]	; c514 <sf_gen_scode+0xa78>
    be30:	ldr	r1, [pc, r1]
    be34:	str	r5, [sp, #4]
    be38:	str	r0, [sp, #12]
    be3c:	mvn	r1, r1
    be40:	orrs	r1, r5, r1
    be44:	movweq	sl, #2
    be48:	movweq	r5, #17
    be4c:	ldr	r0, [r9, #4]
    be50:	cmp	r0, #10
    be54:	beq	be94 <sf_gen_scode+0x3f8>
    be58:	cmp	r0, #2
    be5c:	bne	bf64 <sf_gen_scode+0x4c8>
    be60:	cmp	sl, #17
    be64:	beq	bf64 <sf_gen_scode+0x4c8>
    be68:	ldr	r0, [r9, #20]
    be6c:	mvn	r1, #0
    be70:	mov	r2, sl
    be74:	mov	r3, r4
    be78:	ldr	r0, [r0, #4]
    be7c:	str	r8, [sp]
    be80:	rev	r0, r0
    be84:	bl	c574 <gen_host>
    be88:	cmp	r6, #0
    be8c:	bne	bec0 <sf_gen_scode+0x424>
    be90:	b	bf60 <sf_gen_scode+0x4c4>
    be94:	cmp	r5, #2
    be98:	beq	bf64 <sf_gen_scode+0x4c8>
    be9c:	ldr	r0, [r9, #20]
    bea0:	add	r1, sp, #24
    bea4:	mov	r2, r5
    bea8:	mov	r3, r4
    beac:	str	r8, [sp]
    beb0:	add	r0, r0, #8
    beb4:	bl	f5c8 <gen_host6>
    beb8:	cmp	r6, #0
    bebc:	beq	bf60 <sf_gen_scode+0x4c4>
    bec0:	ldr	r1, [r6, #44]	; 0x2c
    bec4:	mov	r7, r4
    bec8:	mov	r2, r6
    becc:	clz	r1, r1
    bed0:	lsr	r3, r1, #5
    bed4:	str	r3, [r6, #44]	; 0x2c
    bed8:	ldr	r1, [r0, #96]	; 0x60
    bedc:	b	bee4 <sf_gen_scode+0x448>
    bee0:	ldr	r3, [r2, #44]	; 0x2c
    bee4:	cmp	r3, #0
    bee8:	mov	r3, #84	; 0x54
    beec:	add	r4, r2, #84	; 0x54
    bef0:	movweq	r3, #60	; 0x3c
    bef4:	addeq	r4, r2, #60	; 0x3c
    bef8:	ldr	r2, [r2, r3]
    befc:	str	r1, [r4]
    bf00:	cmp	r2, #0
    bf04:	bne	bee0 <sf_gen_scode+0x444>
    bf08:	ldr	r1, [r6, #44]	; 0x2c
    bf0c:	cmp	r0, #0
    bf10:	mov	r4, r7
    bf14:	clz	r1, r1
    bf18:	lsr	r1, r1, #5
    bf1c:	str	r1, [r6, #44]	; 0x2c
    bf20:	sub	r1, fp, #32
    bf24:	str	r0, [fp, #-32]	; 0xffffffe0
    bf28:	beq	bf54 <sf_gen_scode+0x4b8>
    bf2c:	mov	r2, r0
    bf30:	ldr	r3, [r2, #44]	; 0x2c
    bf34:	add	r1, r2, #84	; 0x54
    bf38:	cmp	r3, #0
    bf3c:	mov	r3, #84	; 0x54
    bf40:	movweq	r3, #60	; 0x3c
    bf44:	addeq	r1, r2, #60	; 0x3c
    bf48:	ldr	r2, [r2, r3]
    bf4c:	cmp	r2, #0
    bf50:	bne	bf30 <sf_gen_scode+0x494>
    bf54:	str	r6, [r1]
    bf58:	ldr	r1, [r6, #96]	; 0x60
    bf5c:	str	r1, [r0, #96]	; 0x60
    bf60:	mov	r6, r0
    bf64:	ldr	r9, [r9, #28]
    bf68:	cmp	r9, #0
    bf6c:	bne	be4c <sf_gen_scode+0x3b0>
    bf70:	ldr	r1, [pc, #1440]	; c518 <sf_gen_scode+0xa7c>
    bf74:	mov	r0, #0
    bf78:	add	r1, pc, r1
    bf7c:	str	r0, [r1]
    bf80:	ldr	r0, [sp, #12]
    bf84:	bl	f94 <freeaddrinfo@plt>
    bf88:	cmp	r6, #0
    bf8c:	bne	c1d4 <sf_gen_scode+0x738>
    bf90:	ldr	r0, [pc, #1412]	; c51c <sf_gen_scode+0xa80>
    bf94:	ldr	r2, [pc, #1412]	; c520 <sf_gen_scode+0xa84>
    bf98:	ldr	r1, [sp, #4]
    bf9c:	add	r0, pc, r0
    bfa0:	add	r2, pc, r2
    bfa4:	cmp	r1, #0
    bfa8:	moveq	r2, r0
    bfac:	ldr	r0, [pc, #1392]	; c524 <sf_gen_scode+0xa88>
    bfb0:	ldr	r1, [sp, #8]
    bfb4:	add	r0, pc, r0
    bfb8:	bl	2124 <sf_bpf_error>
    bfbc:	ldr	r0, [sp, #20]
    bfc0:	cmp	r0, #132	; 0x84
    bfc4:	beq	c448 <sf_gen_scode+0x9ac>
    bfc8:	cmp	r0, #17
    bfcc:	beq	c468 <sf_gen_scode+0x9cc>
    bfd0:	mov	r4, r5
    bfd4:	mov	r1, #6
    bfd8:	b	bff8 <sf_gen_scode+0x55c>
    bfdc:	ldr	r0, [sp, #20]
    bfe0:	cmp	r0, #6
    bfe4:	beq	c458 <sf_gen_scode+0x9bc>
    bfe8:	cmp	r0, #17
    bfec:	beq	c468 <sf_gen_scode+0x9cc>
    bff0:	mov	r4, r5
    bff4:	mov	r1, #132	; 0x84
    bff8:	str	r1, [sp, #20]
    bffc:	b	c028 <sf_gen_scode+0x58c>
    c000:	ldr	r0, [sp, #20]
    c004:	cmp	r0, #132	; 0x84
    c008:	beq	c478 <sf_gen_scode+0x9dc>
    c00c:	cmp	r0, #17
    c010:	beq	c498 <sf_gen_scode+0x9fc>
    c014:	mov	r4, r5
    c018:	mov	r2, #6
    c01c:	b	c0f8 <sf_gen_scode+0x65c>
    c020:	ldr	r1, [sp, #20]
    c024:	mov	r4, r5
    c028:	ldr	r0, [fp, #-32]	; 0xffffffe0
    c02c:	mov	r2, r4
    c030:	bl	f8b4 <gen_port>
    c034:	mov	r6, r0
    c038:	ldr	r0, [fp, #-32]	; 0xffffffe0
    c03c:	ldr	r1, [sp, #20]
    c040:	mov	r2, r4
    c044:	bl	fb80 <gen_port6>
    c048:	ldr	r1, [r0, #44]	; 0x2c
    c04c:	cmp	r0, #0
    c050:	clz	r1, r1
    c054:	lsr	r1, r1, #5
    c058:	str	r1, [r0, #44]	; 0x2c
    c05c:	beq	c098 <sf_gen_scode+0x5fc>
    c060:	ldr	r2, [r6, #96]	; 0x60
    c064:	mov	r3, r0
    c068:	b	c070 <sf_gen_scode+0x5d4>
    c06c:	ldr	r1, [r3, #44]	; 0x2c
    c070:	cmp	r1, #0
    c074:	mov	r1, #84	; 0x54
    c078:	add	r7, r3, #84	; 0x54
    c07c:	movweq	r1, #60	; 0x3c
    c080:	addeq	r7, r3, #60	; 0x3c
    c084:	ldr	r3, [r3, r1]
    c088:	str	r2, [r7]
    c08c:	cmp	r3, #0
    c090:	bne	c06c <sf_gen_scode+0x5d0>
    c094:	ldr	r1, [r0, #44]	; 0x2c
    c098:	clz	r1, r1
    c09c:	cmp	r6, #0
    c0a0:	lsr	r1, r1, #5
    c0a4:	str	r1, [r0, #44]	; 0x2c
    c0a8:	str	r6, [sp, #24]
    c0ac:	beq	c1c4 <sf_gen_scode+0x728>
    c0b0:	mov	r2, r6
    c0b4:	ldr	r3, [r2, #44]	; 0x2c
    c0b8:	add	r1, r2, #84	; 0x54
    c0bc:	cmp	r3, #0
    c0c0:	mov	r3, #84	; 0x54
    c0c4:	movweq	r3, #60	; 0x3c
    c0c8:	addeq	r1, r2, #60	; 0x3c
    c0cc:	ldr	r2, [r2, r3]
    c0d0:	cmp	r2, #0
    c0d4:	bne	c0b4 <sf_gen_scode+0x618>
    c0d8:	b	c1c8 <sf_gen_scode+0x72c>
    c0dc:	ldr	r0, [sp, #20]
    c0e0:	cmp	r0, #6
    c0e4:	beq	c488 <sf_gen_scode+0x9ec>
    c0e8:	cmp	r0, #17
    c0ec:	beq	c498 <sf_gen_scode+0x9fc>
    c0f0:	mov	r4, r5
    c0f4:	mov	r2, #132	; 0x84
    c0f8:	str	r2, [sp, #20]
    c0fc:	b	c108 <sf_gen_scode+0x66c>
    c100:	ldr	r2, [sp, #20]
    c104:	mov	r4, r5
    c108:	ldr	r1, [sp, #16]
    c10c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    c110:	mov	r3, r4
    c114:	bl	fe4c <gen_portrange>
    c118:	mov	r6, r0
    c11c:	ldr	r0, [fp, #-32]	; 0xffffffe0
    c120:	ldr	r1, [sp, #16]
    c124:	ldr	r2, [sp, #20]
    c128:	mov	r3, r4
    c12c:	bl	1012c <gen_portrange6>
    c130:	ldr	r1, [r0, #44]	; 0x2c
    c134:	cmp	r0, #0
    c138:	clz	r1, r1
    c13c:	lsr	r1, r1, #5
    c140:	str	r1, [r0, #44]	; 0x2c
    c144:	beq	c180 <sf_gen_scode+0x6e4>
    c148:	ldr	r2, [r6, #96]	; 0x60
    c14c:	mov	r3, r0
    c150:	b	c158 <sf_gen_scode+0x6bc>
    c154:	ldr	r1, [r3, #44]	; 0x2c
    c158:	cmp	r1, #0
    c15c:	mov	r1, #84	; 0x54
    c160:	add	r7, r3, #84	; 0x54
    c164:	movweq	r1, #60	; 0x3c
    c168:	addeq	r7, r3, #60	; 0x3c
    c16c:	ldr	r3, [r3, r1]
    c170:	str	r2, [r7]
    c174:	cmp	r3, #0
    c178:	bne	c154 <sf_gen_scode+0x6b8>
    c17c:	ldr	r1, [r0, #44]	; 0x2c
    c180:	clz	r1, r1
    c184:	cmp	r6, #0
    c188:	lsr	r1, r1, #5
    c18c:	str	r1, [r0, #44]	; 0x2c
    c190:	str	r6, [sp, #24]
    c194:	beq	c1c4 <sf_gen_scode+0x728>
    c198:	mov	r2, r6
    c19c:	ldr	r3, [r2, #44]	; 0x2c
    c1a0:	add	r1, r2, #84	; 0x54
    c1a4:	cmp	r3, #0
    c1a8:	mov	r3, #84	; 0x54
    c1ac:	movweq	r3, #60	; 0x3c
    c1b0:	addeq	r1, r2, #60	; 0x3c
    c1b4:	ldr	r2, [r2, r3]
    c1b8:	cmp	r2, #0
    c1bc:	bne	c19c <sf_gen_scode+0x700>
    c1c0:	b	c1c8 <sf_gen_scode+0x72c>
    c1c4:	add	r1, sp, #24
    c1c8:	str	r0, [r1]
    c1cc:	ldr	r0, [r0, #96]	; 0x60
    c1d0:	str	r0, [r6, #96]	; 0x60
    c1d4:	mov	r0, r6
    c1d8:	sub	sp, fp, #28
    c1dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    c1e0:	cmp	r0, #1
    c1e4:	beq	c214 <sf_gen_scode+0x778>
    c1e8:	cmp	r0, #6
    c1ec:	bne	c36c <sf_gen_scode+0x8d0>
    c1f0:	mov	r0, r7
    c1f4:	mov	r5, r4
    c1f8:	bl	20ab8 <pcap_ether_hostton>
    c1fc:	cmp	r0, #0
    c200:	beq	c4d4 <sf_gen_scode+0xa38>
    c204:	mov	r1, r5
    c208:	mov	r4, r0
    c20c:	bl	ceec <gen_thostop>
    c210:	b	bc38 <sf_gen_scode+0x19c>
    c214:	mov	r0, r7
    c218:	mov	r5, r4
    c21c:	bl	20ab8 <pcap_ether_hostton>
    c220:	cmp	r0, #0
    c224:	beq	c4c4 <sf_gen_scode+0xa28>
    c228:	mov	r1, r5
    c22c:	mov	r4, r0
    c230:	bl	ca54 <gen_ehostop>
    c234:	b	bc38 <sf_gen_scode+0x19c>
    c238:	ldr	r0, [pc, #716]	; c50c <sf_gen_scode+0xa70>
    c23c:	add	r0, pc, r0
    c240:	ldrb	r0, [r0]
    c244:	cmp	r0, #1
    c248:	bne	c4a8 <sf_gen_scode+0xa0c>
    c24c:	mov	r0, #1
    c250:	mov	r1, #4
    c254:	mov	r2, #8
    c258:	mov	r3, #65280	; 0xff00
    c25c:	bl	a9f8 <gen_cmp>
    c260:	mov	r4, r0
    c264:	ldr	r0, [r0, #44]	; 0x2c
    c268:	clz	r0, r0
    c26c:	lsr	r0, r0, #5
    c270:	str	r0, [r4, #44]	; 0x2c
    c274:	mov	r0, r7
    c278:	bl	20ab8 <pcap_ether_hostton>
    c27c:	cmp	r0, #0
    c280:	beq	c4c4 <sf_gen_scode+0xa28>
    c284:	mov	r1, r6
    c288:	mov	r5, r0
    c28c:	bl	ca54 <gen_ehostop>
    c290:	mov	r6, r0
    c294:	cmp	r4, #0
    c298:	beq	c2cc <sf_gen_scode+0x830>
    c29c:	ldr	r0, [r6, #96]	; 0x60
    c2a0:	mov	r1, r4
    c2a4:	ldr	r2, [r1, #44]	; 0x2c
    c2a8:	add	r3, r1, #84	; 0x54
    c2ac:	cmp	r2, #0
    c2b0:	mov	r2, #84	; 0x54
    c2b4:	movweq	r2, #60	; 0x3c
    c2b8:	addeq	r3, r1, #60	; 0x3c
    c2bc:	ldr	r1, [r1, r2]
    c2c0:	str	r0, [r3]
    c2c4:	cmp	r1, #0
    c2c8:	bne	c2a4 <sf_gen_scode+0x808>
    c2cc:	ldr	r0, [r4, #44]	; 0x2c
    c2d0:	cmp	r6, #0
    c2d4:	clz	r0, r0
    c2d8:	lsr	r0, r0, #5
    c2dc:	str	r0, [r4, #44]	; 0x2c
    c2e0:	ldr	r1, [r6, #44]	; 0x2c
    c2e4:	clz	r0, r1
    c2e8:	lsr	r0, r0, #5
    c2ec:	str	r0, [r6, #44]	; 0x2c
    c2f0:	str	r6, [sp, #24]
    c2f4:	beq	c398 <sf_gen_scode+0x8fc>
    c2f8:	cmp	r1, #0
    c2fc:	mov	r1, #60	; 0x3c
    c300:	add	r0, r6, #60	; 0x3c
    c304:	movweq	r1, #84	; 0x54
    c308:	addeq	r0, r6, #84	; 0x54
    c30c:	ldr	r1, [r6, r1]
    c310:	cmp	r1, #0
    c314:	beq	c39c <sf_gen_scode+0x900>
    c318:	ldr	r2, [r1, #44]	; 0x2c
    c31c:	add	r0, r1, #84	; 0x54
    c320:	cmp	r2, #0
    c324:	mov	r2, #84	; 0x54
    c328:	movweq	r2, #60	; 0x3c
    c32c:	addeq	r0, r1, #60	; 0x3c
    c330:	ldr	r1, [r1, r2]
    c334:	cmp	r1, #0
    c338:	bne	c318 <sf_gen_scode+0x87c>
    c33c:	b	c39c <sf_gen_scode+0x900>
    c340:	cmp	r0, #192	; 0xc0
    c344:	beq	bc1c <sf_gen_scode+0x180>
    c348:	b	c4a8 <sf_gen_scode+0xa0c>
    c34c:	mov	r0, r7
    c350:	bl	20ab8 <pcap_ether_hostton>
    c354:	cmp	r0, #0
    c358:	beq	c4e4 <sf_gen_scode+0xa48>
    c35c:	mov	r1, r6
    c360:	mov	r4, r0
    c364:	bl	f398 <gen_ipfchostop>
    c368:	b	bc38 <sf_gen_scode+0x19c>
    c36c:	cmp	r0, #10
    c370:	bne	c4a8 <sf_gen_scode+0xa0c>
    c374:	mov	r0, r7
    c378:	mov	r5, r4
    c37c:	bl	20ab8 <pcap_ether_hostton>
    c380:	cmp	r0, #0
    c384:	beq	c4f4 <sf_gen_scode+0xa58>
    c388:	mov	r1, r5
    c38c:	mov	r4, r0
    c390:	bl	ccbc <gen_fhostop>
    c394:	b	bc38 <sf_gen_scode+0x19c>
    c398:	add	r0, sp, #24
    c39c:	str	r4, [r0]
    c3a0:	ldr	r0, [r6, #44]	; 0x2c
    c3a4:	clz	r0, r0
    c3a8:	lsr	r0, r0, #5
    c3ac:	str	r0, [r6, #44]	; 0x2c
    c3b0:	ldr	r0, [r4, #96]	; 0x60
    c3b4:	str	r0, [r6, #96]	; 0x60
    c3b8:	mov	r0, r5
    c3bc:	bl	e5c <free@plt>
    c3c0:	b	c1d4 <sf_gen_scode+0x738>
    c3c4:	cmp	r8, #255	; 0xff
    c3c8:	bne	c3dc <sf_gen_scode+0x940>
    c3cc:	bl	328c <syntax>
    c3d0:	ldr	r0, [pc, #352]	; c538 <sf_gen_scode+0xa9c>
    c3d4:	add	r0, pc, r0
    c3d8:	bl	2124 <sf_bpf_error>
    c3dc:	bl	fc4 <abort@plt>
    c3e0:	ldr	r0, [pc, #340]	; c53c <sf_gen_scode+0xaa0>
    c3e4:	mov	r1, r7
    c3e8:	add	r0, pc, r0
    c3ec:	bl	2124 <sf_bpf_error>
    c3f0:	ldr	r0, [pc, #328]	; c540 <sf_gen_scode+0xaa4>
    c3f4:	mov	r1, r7
    c3f8:	add	r0, pc, r0
    c3fc:	bl	2124 <sf_bpf_error>
    c400:	ldr	r0, [pc, #340]	; c55c <sf_gen_scode+0xac0>
    c404:	add	r0, pc, r0
    c408:	bl	2124 <sf_bpf_error>
    c40c:	ldr	r0, [pc, #332]	; c560 <sf_gen_scode+0xac4>
    c410:	mov	r1, r7
    c414:	add	r0, pc, r0
    c418:	bl	2124 <sf_bpf_error>
    c41c:	ldr	r0, [pc, #320]	; c564 <sf_gen_scode+0xac8>
    c420:	add	r0, pc, r0
    c424:	bl	2124 <sf_bpf_error>
    c428:	ldr	r0, [pc, #312]	; c568 <sf_gen_scode+0xacc>
    c42c:	mov	r1, r7
    c430:	add	r0, pc, r0
    c434:	bl	2124 <sf_bpf_error>
    c438:	ldr	r0, [pc, #280]	; c558 <sf_gen_scode+0xabc>
    c43c:	ldr	r1, [sp, #8]
    c440:	add	r0, pc, r0
    c444:	bl	2124 <sf_bpf_error>
    c448:	ldr	r0, [pc, #220]	; c52c <sf_gen_scode+0xa90>
    c44c:	mov	r1, r7
    c450:	add	r0, pc, r0
    c454:	bl	2124 <sf_bpf_error>
    c458:	ldr	r0, [pc, #268]	; c56c <sf_gen_scode+0xad0>
    c45c:	mov	r1, r7
    c460:	add	r0, pc, r0
    c464:	bl	2124 <sf_bpf_error>
    c468:	ldr	r0, [pc, #184]	; c528 <sf_gen_scode+0xa8c>
    c46c:	mov	r1, r7
    c470:	add	r0, pc, r0
    c474:	bl	2124 <sf_bpf_error>
    c478:	ldr	r0, [pc, #180]	; c534 <sf_gen_scode+0xa98>
    c47c:	mov	r1, r7
    c480:	add	r0, pc, r0
    c484:	bl	2124 <sf_bpf_error>
    c488:	ldr	r0, [pc, #224]	; c570 <sf_gen_scode+0xad4>
    c48c:	mov	r1, r7
    c490:	add	r0, pc, r0
    c494:	bl	2124 <sf_bpf_error>
    c498:	ldr	r0, [pc, #144]	; c530 <sf_gen_scode+0xa94>
    c49c:	mov	r1, r7
    c4a0:	add	r0, pc, r0
    c4a4:	bl	2124 <sf_bpf_error>
    c4a8:	ldr	r0, [pc, #88]	; c508 <sf_gen_scode+0xa6c>
    c4ac:	add	r0, pc, r0
    c4b0:	bl	2124 <sf_bpf_error>
    c4b4:	ldr	r0, [pc, #148]	; c550 <sf_gen_scode+0xab4>
    c4b8:	mov	r1, r7
    c4bc:	add	r0, pc, r0
    c4c0:	bl	2124 <sf_bpf_error>
    c4c4:	ldr	r0, [pc, #120]	; c544 <sf_gen_scode+0xaa8>
    c4c8:	mov	r1, r7
    c4cc:	add	r0, pc, r0
    c4d0:	bl	2124 <sf_bpf_error>
    c4d4:	ldr	r0, [pc, #112]	; c54c <sf_gen_scode+0xab0>
    c4d8:	mov	r1, r7
    c4dc:	add	r0, pc, r0
    c4e0:	bl	2124 <sf_bpf_error>
    c4e4:	ldr	r0, [pc, #104]	; c554 <sf_gen_scode+0xab8>
    c4e8:	mov	r1, r7
    c4ec:	add	r0, pc, r0
    c4f0:	bl	2124 <sf_bpf_error>
    c4f4:	ldr	r0, [pc, #76]	; c548 <sf_gen_scode+0xaac>
    c4f8:	mov	r1, r7
    c4fc:	add	r0, pc, r0
    c500:	bl	2124 <sf_bpf_error>
    c504:	.word	0x0003b928
    c508:	.word	0x0001d146
    c50c:	.word	0x0003b1f8
    c510:	.word	0x0003b600
    c514:	.word	0x0003b608
    c518:	.word	0x0003b4ac
    c51c:	.word	0x0001d4bc
    c520:	.word	0x0001d6d2
    c524:	.word	0x0001d6aa
    c528:	.word	0x0001d271
    c52c:	.word	0x0001d27f
    c530:	.word	0x0001d2c3
    c534:	.word	0x0001d2c8
    c538:	.word	0x0001d3a9
    c53c:	.word	0x0001d3c3
    c540:	.word	0x0001d160
    c544:	.word	0x0001d0a1
    c548:	.word	0x0001d089
    c54c:	.word	0x0001d0c0
    c550:	.word	0x0001d0fd
    c554:	.word	0x0001d0e6
    c558:	.word	0x0001d20c
    c55c:	.word	0x0001d28c
    c560:	.word	0x0001d298
    c564:	.word	0x0001d2d2
    c568:	.word	0x0001d2e3
    c56c:	.word	0x0001d25e
    c570:	.word	0x0001d29e

0000c574 <gen_host>:
    c574:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
    c578:	add	fp, sp, #24
    c57c:	sub	sp, sp, #16
    c580:	mov	r6, r0
    c584:	ldr	r0, [fp, #8]
    c588:	mov	r5, r3
    c58c:	ldr	r3, [pc, #1100]	; c9e0 <gen_host+0x46c>
    c590:	mov	r7, r1
    c594:	ldr	r1, [pc, #1096]	; c9e4 <gen_host+0x470>
    c598:	add	r3, pc, r3
    c59c:	add	r1, pc, r1
    c5a0:	cmp	r0, #2
    c5a4:	moveq	r1, r3
    c5a8:	cmp	r2, #40	; 0x28
    c5ac:	bhi	c8a4 <gen_host+0x330>
    c5b0:	add	r0, pc, #4
    c5b4:	ldr	r2, [r0, r2, lsl #2]
    c5b8:	add	pc, r0, r2
    c5bc:	.word	0x000000a4
    c5c0:	.word	0x000002e8
    c5c4:	.word	0x000001ac
    c5c8:	.word	0x000001c0
    c5cc:	.word	0x00000198
    c5d0:	.word	0x000003d0
    c5d4:	.word	0x000003dc
    c5d8:	.word	0x000003e8
    c5dc:	.word	0x000003f4
    c5e0:	.word	0x00000400
    c5e4:	.word	0x0000040c
    c5e8:	.word	0x00000418
    c5ec:	.word	0x000001ec
    c5f0:	.word	0x000002ec
    c5f4:	.word	0x000002f8
    c5f8:	.word	0x00000304
    c5fc:	.word	0x00000310
    c600:	.word	0x0000031c
    c604:	.word	0x00000328
    c608:	.word	0x00000334
    c60c:	.word	0x00000340
    c610:	.word	0x0000034c
    c614:	.word	0x00000358
    c618:	.word	0x00000364
    c61c:	.word	0x00000370
    c620:	.word	0x0000037c
    c624:	.word	0x00000388
    c628:	.word	0x00000394
    c62c:	.word	0x000003a0
    c630:	.word	0x000003ac
    c634:	.word	0x000003b8
    c638:	.word	0x000002e8
    c63c:	.word	0x000002e8
    c640:	.word	0x000002e8
    c644:	.word	0x000002e8
    c648:	.word	0x000002e8
    c64c:	.word	0x000002e8
    c650:	.word	0x000002e8
    c654:	.word	0x000002e8
    c658:	.word	0x000002e8
    c65c:	.word	0x000003c4
    c660:	mov	r0, #16
    c664:	mov	r1, #12
    c668:	mov	r2, r5
    c66c:	mov	r3, #2048	; 0x800
    c670:	str	r1, [sp]
    c674:	str	r0, [sp, #4]
    c678:	mov	r0, r6
    c67c:	mov	r1, r7
    c680:	bl	1c930 <gen_hostop>
    c684:	mov	r4, r0
    c688:	ldr	r0, [pc, #856]	; c9e8 <gen_host+0x474>
    c68c:	ldr	r0, [pc, r0]
    c690:	cmp	r0, #0
    c694:	bne	c898 <gen_host+0x324>
    c698:	mov	r0, #24
    c69c:	mov	r1, #14
    c6a0:	mov	r2, r5
    c6a4:	movw	r3, #2054	; 0x806
    c6a8:	str	r1, [sp]
    c6ac:	str	r0, [sp, #4]
    c6b0:	mov	r0, r6
    c6b4:	mov	r1, r7
    c6b8:	bl	1c930 <gen_hostop>
    c6bc:	mov	r8, r0
    c6c0:	ldr	r0, [r4, #44]	; 0x2c
    c6c4:	cmp	r4, #0
    c6c8:	clz	r0, r0
    c6cc:	lsr	r0, r0, #5
    c6d0:	str	r0, [r4, #44]	; 0x2c
    c6d4:	beq	c710 <gen_host+0x19c>
    c6d8:	ldr	r1, [r8, #96]	; 0x60
    c6dc:	mov	r2, r4
    c6e0:	b	c6e8 <gen_host+0x174>
    c6e4:	ldr	r0, [r2, #44]	; 0x2c
    c6e8:	cmp	r0, #0
    c6ec:	mov	r0, #84	; 0x54
    c6f0:	add	r3, r2, #84	; 0x54
    c6f4:	movweq	r0, #60	; 0x3c
    c6f8:	addeq	r3, r2, #60	; 0x3c
    c6fc:	ldr	r2, [r2, r0]
    c700:	str	r1, [r3]
    c704:	cmp	r2, #0
    c708:	bne	c6e4 <gen_host+0x170>
    c70c:	ldr	r0, [r4, #44]	; 0x2c
    c710:	clz	r0, r0
    c714:	cmp	r8, #0
    c718:	lsr	r0, r0, #5
    c71c:	str	r0, [r4, #44]	; 0x2c
    c720:	str	r8, [sp, #8]
    c724:	beq	c7bc <gen_host+0x248>
    c728:	mov	r1, r8
    c72c:	ldr	r2, [r1, #44]	; 0x2c
    c730:	add	r0, r1, #84	; 0x54
    c734:	cmp	r2, #0
    c738:	mov	r2, #84	; 0x54
    c73c:	movweq	r2, #60	; 0x3c
    c740:	addeq	r0, r1, #60	; 0x3c
    c744:	ldr	r1, [r1, r2]
    c748:	cmp	r1, #0
    c74c:	bne	c72c <gen_host+0x1b8>
    c750:	b	c7c0 <gen_host+0x24c>
    c754:	mov	r0, #24
    c758:	mov	r1, #14
    c75c:	mov	r2, r5
    c760:	movw	r3, #32821	; 0x8035
    c764:	b	c78c <gen_host+0x218>
    c768:	mov	r0, #16
    c76c:	mov	r1, #12
    c770:	mov	r2, r5
    c774:	mov	r3, #2048	; 0x800
    c778:	b	c78c <gen_host+0x218>
    c77c:	mov	r0, #24
    c780:	mov	r1, #14
    c784:	mov	r2, r5
    c788:	movw	r3, #2054	; 0x806
    c78c:	str	r1, [sp]
    c790:	str	r0, [sp, #4]
    c794:	mov	r0, r6
    c798:	mov	r1, r7
    c79c:	bl	1c930 <gen_hostop>
    c7a0:	sub	sp, fp, #24
    c7a4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    c7a8:	mov	r0, r6
    c7ac:	mov	r1, r5
    c7b0:	sub	sp, fp, #24
    c7b4:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
    c7b8:	b	1d558 <gen_dnhostop>
    c7bc:	add	r0, sp, #8
    c7c0:	str	r4, [r0]
    c7c4:	mov	r1, #14
    c7c8:	mov	r2, r5
    c7cc:	movw	r3, #32821	; 0x8035
    c7d0:	ldr	r0, [r4, #96]	; 0x60
    c7d4:	str	r0, [r8, #96]	; 0x60
    c7d8:	mov	r0, #24
    c7dc:	str	r1, [sp]
    c7e0:	mov	r1, r7
    c7e4:	str	r0, [sp, #4]
    c7e8:	mov	r0, r6
    c7ec:	bl	1c930 <gen_hostop>
    c7f0:	mov	r4, r0
    c7f4:	ldr	r0, [r8, #44]	; 0x2c
    c7f8:	cmp	r8, #0
    c7fc:	clz	r0, r0
    c800:	lsr	r0, r0, #5
    c804:	str	r0, [r8, #44]	; 0x2c
    c808:	beq	c844 <gen_host+0x2d0>
    c80c:	ldr	r1, [r4, #96]	; 0x60
    c810:	mov	r2, r8
    c814:	b	c81c <gen_host+0x2a8>
    c818:	ldr	r0, [r2, #44]	; 0x2c
    c81c:	cmp	r0, #0
    c820:	mov	r0, #84	; 0x54
    c824:	add	r3, r2, #84	; 0x54
    c828:	movweq	r0, #60	; 0x3c
    c82c:	addeq	r3, r2, #60	; 0x3c
    c830:	ldr	r2, [r2, r0]
    c834:	str	r1, [r3]
    c838:	cmp	r2, #0
    c83c:	bne	c818 <gen_host+0x2a4>
    c840:	ldr	r0, [r8, #44]	; 0x2c
    c844:	clz	r0, r0
    c848:	cmp	r4, #0
    c84c:	lsr	r0, r0, #5
    c850:	str	r0, [r8, #44]	; 0x2c
    c854:	str	r4, [sp, #12]
    c858:	beq	c888 <gen_host+0x314>
    c85c:	mov	r1, r4
    c860:	ldr	r2, [r1, #44]	; 0x2c
    c864:	add	r0, r1, #84	; 0x54
    c868:	cmp	r2, #0
    c86c:	mov	r2, #84	; 0x54
    c870:	movweq	r2, #60	; 0x3c
    c874:	addeq	r0, r1, #60	; 0x3c
    c878:	ldr	r1, [r1, r2]
    c87c:	cmp	r1, #0
    c880:	bne	c860 <gen_host+0x2ec>
    c884:	b	c88c <gen_host+0x318>
    c888:	add	r0, sp, #12
    c88c:	str	r8, [r0]
    c890:	ldr	r0, [r8, #96]	; 0x60
    c894:	str	r0, [r4, #96]	; 0x60
    c898:	mov	r0, r4
    c89c:	sub	sp, fp, #24
    c8a0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
    c8a4:	bl	fc4 <abort@plt>
    c8a8:	ldr	r0, [pc, #360]	; ca18 <gen_host+0x4a4>
    c8ac:	add	r0, pc, r0
    c8b0:	bl	2124 <sf_bpf_error>
    c8b4:	ldr	r0, [pc, #344]	; ca14 <gen_host+0x4a0>
    c8b8:	add	r0, pc, r0
    c8bc:	bl	2124 <sf_bpf_error>
    c8c0:	ldr	r0, [pc, #344]	; ca20 <gen_host+0x4ac>
    c8c4:	add	r0, pc, r0
    c8c8:	bl	2124 <sf_bpf_error>
    c8cc:	ldr	r0, [pc, #328]	; ca1c <gen_host+0x4a8>
    c8d0:	add	r0, pc, r0
    c8d4:	bl	2124 <sf_bpf_error>
    c8d8:	ldr	r0, [pc, #324]	; ca24 <gen_host+0x4b0>
    c8dc:	add	r0, pc, r0
    c8e0:	bl	2124 <sf_bpf_error>
    c8e4:	ldr	r0, [pc, #316]	; ca28 <gen_host+0x4b4>
    c8e8:	add	r0, pc, r0
    c8ec:	bl	2124 <sf_bpf_error>
    c8f0:	ldr	r0, [pc, #308]	; ca2c <gen_host+0x4b8>
    c8f4:	add	r0, pc, r0
    c8f8:	bl	2124 <sf_bpf_error>
    c8fc:	ldr	r0, [pc, #300]	; ca30 <gen_host+0x4bc>
    c900:	add	r0, pc, r0
    c904:	bl	2124 <sf_bpf_error>
    c908:	ldr	r0, [pc, #244]	; ca04 <gen_host+0x490>
    c90c:	add	r0, pc, r0
    c910:	bl	2124 <sf_bpf_error>
    c914:	ldr	r0, [pc, #236]	; ca08 <gen_host+0x494>
    c918:	add	r0, pc, r0
    c91c:	bl	2124 <sf_bpf_error>
    c920:	ldr	r0, [pc, #232]	; ca10 <gen_host+0x49c>
    c924:	add	r0, pc, r0
    c928:	bl	2124 <sf_bpf_error>
    c92c:	ldr	r0, [pc, #256]	; ca34 <gen_host+0x4c0>
    c930:	add	r0, pc, r0
    c934:	bl	2124 <sf_bpf_error>
    c938:	ldr	r0, [pc, #248]	; ca38 <gen_host+0x4c4>
    c93c:	add	r0, pc, r0
    c940:	bl	2124 <sf_bpf_error>
    c944:	ldr	r0, [pc, #240]	; ca3c <gen_host+0x4c8>
    c948:	add	r0, pc, r0
    c94c:	bl	2124 <sf_bpf_error>
    c950:	ldr	r0, [pc, #232]	; ca40 <gen_host+0x4cc>
    c954:	add	r0, pc, r0
    c958:	bl	2124 <sf_bpf_error>
    c95c:	ldr	r0, [pc, #224]	; ca44 <gen_host+0x4d0>
    c960:	add	r0, pc, r0
    c964:	bl	2124 <sf_bpf_error>
    c968:	ldr	r0, [pc, #216]	; ca48 <gen_host+0x4d4>
    c96c:	add	r0, pc, r0
    c970:	bl	2124 <sf_bpf_error>
    c974:	ldr	r0, [pc, #208]	; ca4c <gen_host+0x4d8>
    c978:	add	r0, pc, r0
    c97c:	bl	2124 <sf_bpf_error>
    c980:	ldr	r0, [pc, #200]	; ca50 <gen_host+0x4dc>
    c984:	add	r0, pc, r0
    c988:	bl	2124 <sf_bpf_error>
    c98c:	ldr	r0, [pc, #92]	; c9f0 <gen_host+0x47c>
    c990:	add	r0, pc, r0
    c994:	bl	2124 <sf_bpf_error>
    c998:	ldr	r0, [pc, #76]	; c9ec <gen_host+0x478>
    c99c:	add	r0, pc, r0
    c9a0:	bl	2124 <sf_bpf_error>
    c9a4:	ldr	r0, [pc, #72]	; c9f4 <gen_host+0x480>
    c9a8:	add	r0, pc, r0
    c9ac:	bl	2124 <sf_bpf_error>
    c9b0:	ldr	r0, [pc, #64]	; c9f8 <gen_host+0x484>
    c9b4:	add	r0, pc, r0
    c9b8:	bl	2124 <sf_bpf_error>
    c9bc:	ldr	r0, [pc, #56]	; c9fc <gen_host+0x488>
    c9c0:	add	r0, pc, r0
    c9c4:	bl	2124 <sf_bpf_error>
    c9c8:	ldr	r0, [pc, #48]	; ca00 <gen_host+0x48c>
    c9cc:	add	r0, pc, r0
    c9d0:	bl	2124 <sf_bpf_error>
    c9d4:	ldr	r0, [pc, #48]	; ca0c <gen_host+0x498>
    c9d8:	add	r0, pc, r0
    c9dc:	bl	2124 <sf_bpf_error>
    c9e0:	.word	0x0001d6a0
    c9e4:	.word	0x0001e212
    c9e8:	.word	0x0003aa48
    c9ec:	.word	0x0001dc2f
    c9f0:	.word	0x0001dc58
    c9f4:	.word	0x0001dc5e
    c9f8:	.word	0x0001dc6f
    c9fc:	.word	0x0001dc81
    ca00:	.word	0x0001dc93
    ca04:	.word	0x0001dd71
    ca08:	.word	0x0001dd82
    ca0c:	.word	0x0001dce0
    ca10:	.word	0x0001ddb9
    ca14:	.word	0x0001de49
    ca18:	.word	0x0001de78
    ca1c:	.word	0x0001de77
    ca20:	.word	0x0001dea8
    ca24:	.word	0x0001deb5
    ca28:	.word	0x0001decb
    ca2c:	.word	0x0001dede
    ca30:	.word	0x0001deee
    ca34:	.word	0x0001dedb
    ca38:	.word	0x0001def2
    ca3c:	.word	0x0001df04
    ca40:	.word	0x0001df16
    ca44:	.word	0x0001df28
    ca48:	.word	0x0001df39
    ca4c:	.word	0x0001df50
    ca50:	.word	0x0001df65

0000ca54 <gen_ehostop>:
    ca54:	push	{r4, r5, fp, lr}
    ca58:	add	fp, sp, #8
    ca5c:	sub	sp, sp, #8
    ca60:	cmp	r1, #4
    ca64:	bhi	cca0 <gen_ehostop+0x24c>
    ca68:	mov	r5, r0
    ca6c:	add	r0, pc, #4
    ca70:	ldr	r1, [r0, r1, lsl #2]
    ca74:	add	pc, r0, r1
    ca78:	.word	0x00000014
    ca7c:	.word	0x000001c4
    ca80:	.word	0x000001d4
    ca84:	.word	0x00000014
    ca88:	.word	0x000000e0
    ca8c:	ldr	r0, [pc, #544]	; ccb4 <gen_ehostop+0x260>
    ca90:	mov	r2, #6
    ca94:	mov	r3, r5
    ca98:	ldr	r0, [pc, r0]
    ca9c:	add	r1, r0, #6
    caa0:	mov	r0, #1
    caa4:	bl	1c3c0 <gen_bcmp>
    caa8:	ldr	r1, [pc, #520]	; ccb8 <gen_ehostop+0x264>
    caac:	mov	r4, r0
    cab0:	mov	r0, #1
    cab4:	mov	r2, #6
    cab8:	mov	r3, r5
    cabc:	ldr	r1, [pc, r1]
    cac0:	bl	1c3c0 <gen_bcmp>
    cac4:	ldr	r1, [r4, #44]	; 0x2c
    cac8:	cmp	r4, #0
    cacc:	clz	r1, r1
    cad0:	lsr	r1, r1, #5
    cad4:	str	r1, [r4, #44]	; 0x2c
    cad8:	beq	cb14 <gen_ehostop+0xc0>
    cadc:	ldr	r2, [r0, #96]	; 0x60
    cae0:	mov	r3, r4
    cae4:	b	caec <gen_ehostop+0x98>
    cae8:	ldr	r1, [r3, #44]	; 0x2c
    caec:	cmp	r1, #0
    caf0:	mov	r1, #84	; 0x54
    caf4:	add	r5, r3, #84	; 0x54
    caf8:	movweq	r1, #60	; 0x3c
    cafc:	addeq	r5, r3, #60	; 0x3c
    cb00:	ldr	r3, [r3, r1]
    cb04:	str	r2, [r5]
    cb08:	cmp	r3, #0
    cb0c:	bne	cae8 <gen_ehostop+0x94>
    cb10:	ldr	r1, [r4, #44]	; 0x2c
    cb14:	clz	r1, r1
    cb18:	cmp	r0, #0
    cb1c:	lsr	r1, r1, #5
    cb20:	str	r1, [r4, #44]	; 0x2c
    cb24:	str	r0, [sp]
    cb28:	beq	cc6c <gen_ehostop+0x218>
    cb2c:	mov	r2, r0
    cb30:	ldr	r3, [r2, #44]	; 0x2c
    cb34:	add	r1, r2, #84	; 0x54
    cb38:	cmp	r3, #0
    cb3c:	mov	r3, #84	; 0x54
    cb40:	movweq	r3, #60	; 0x3c
    cb44:	addeq	r1, r2, #60	; 0x3c
    cb48:	ldr	r2, [r2, r3]
    cb4c:	cmp	r2, #0
    cb50:	bne	cb30 <gen_ehostop+0xdc>
    cb54:	b	cc70 <gen_ehostop+0x21c>
    cb58:	ldr	r0, [pc, #332]	; ccac <gen_ehostop+0x258>
    cb5c:	mov	r2, #6
    cb60:	mov	r3, r5
    cb64:	ldr	r0, [pc, r0]
    cb68:	add	r1, r0, #6
    cb6c:	mov	r0, #1
    cb70:	bl	1c3c0 <gen_bcmp>
    cb74:	ldr	r1, [pc, #308]	; ccb0 <gen_ehostop+0x25c>
    cb78:	mov	r4, r0
    cb7c:	mov	r0, #1
    cb80:	mov	r2, #6
    cb84:	mov	r3, r5
    cb88:	ldr	r1, [pc, r1]
    cb8c:	bl	1c3c0 <gen_bcmp>
    cb90:	cmp	r4, #0
    cb94:	beq	cbc8 <gen_ehostop+0x174>
    cb98:	ldr	r1, [r0, #96]	; 0x60
    cb9c:	mov	r2, r4
    cba0:	ldr	r3, [r2, #44]	; 0x2c
    cba4:	add	r5, r2, #84	; 0x54
    cba8:	cmp	r3, #0
    cbac:	mov	r3, #84	; 0x54
    cbb0:	movweq	r3, #60	; 0x3c
    cbb4:	addeq	r5, r2, #60	; 0x3c
    cbb8:	ldr	r2, [r2, r3]
    cbbc:	str	r1, [r5]
    cbc0:	cmp	r2, #0
    cbc4:	bne	cba0 <gen_ehostop+0x14c>
    cbc8:	ldr	r1, [r4, #44]	; 0x2c
    cbcc:	cmp	r0, #0
    cbd0:	clz	r1, r1
    cbd4:	lsr	r1, r1, #5
    cbd8:	str	r1, [r4, #44]	; 0x2c
    cbdc:	ldr	r2, [r0, #44]	; 0x2c
    cbe0:	clz	r1, r2
    cbe4:	lsr	r1, r1, #5
    cbe8:	str	r1, [r0, #44]	; 0x2c
    cbec:	str	r0, [sp, #4]
    cbf0:	beq	cc78 <gen_ehostop+0x224>
    cbf4:	cmp	r2, #0
    cbf8:	mov	r2, #60	; 0x3c
    cbfc:	add	r1, r0, #60	; 0x3c
    cc00:	movweq	r2, #84	; 0x54
    cc04:	addeq	r1, r0, #84	; 0x54
    cc08:	ldr	r2, [r0, r2]
    cc0c:	cmp	r2, #0
    cc10:	beq	cc7c <gen_ehostop+0x228>
    cc14:	ldr	r3, [r2, #44]	; 0x2c
    cc18:	add	r1, r2, #84	; 0x54
    cc1c:	cmp	r3, #0
    cc20:	mov	r3, #84	; 0x54
    cc24:	movweq	r3, #60	; 0x3c
    cc28:	addeq	r1, r2, #60	; 0x3c
    cc2c:	ldr	r2, [r2, r3]
    cc30:	cmp	r2, #0
    cc34:	bne	cc14 <gen_ehostop+0x1c0>
    cc38:	b	cc7c <gen_ehostop+0x228>
    cc3c:	ldr	r0, [pc, #96]	; cca4 <gen_ehostop+0x250>
    cc40:	ldr	r0, [pc, r0]
    cc44:	add	r1, r0, #6
    cc48:	b	cc54 <gen_ehostop+0x200>
    cc4c:	ldr	r1, [pc, #84]	; cca8 <gen_ehostop+0x254>
    cc50:	ldr	r1, [pc, r1]
    cc54:	mov	r0, #1
    cc58:	mov	r2, #6
    cc5c:	mov	r3, r5
    cc60:	sub	sp, fp, #8
    cc64:	pop	{r4, r5, fp, lr}
    cc68:	b	1c3c0 <gen_bcmp>
    cc6c:	mov	r1, sp
    cc70:	str	r4, [r1]
    cc74:	b	cc90 <gen_ehostop+0x23c>
    cc78:	add	r1, sp, #4
    cc7c:	str	r4, [r1]
    cc80:	ldr	r1, [r0, #44]	; 0x2c
    cc84:	clz	r1, r1
    cc88:	lsr	r1, r1, #5
    cc8c:	str	r1, [r0, #44]	; 0x2c
    cc90:	ldr	r1, [r4, #96]	; 0x60
    cc94:	str	r1, [r0, #96]	; 0x60
    cc98:	sub	sp, fp, #8
    cc9c:	pop	{r4, r5, fp, pc}
    cca0:	bl	fc4 <abort@plt>
    cca4:	.word	0x0003a808
    cca8:	.word	0x0003a7f8
    ccac:	.word	0x0003a8e4
    ccb0:	.word	0x0003a8c0
    ccb4:	.word	0x0003a9b0
    ccb8:	.word	0x0003a98c

0000ccbc <gen_fhostop>:
    ccbc:	push	{r4, r5, fp, lr}
    ccc0:	add	fp, sp, #8
    ccc4:	sub	sp, sp, #8
    ccc8:	cmp	r1, #4
    cccc:	bhi	cee8 <gen_fhostop+0x22c>
    ccd0:	mov	r5, r0
    ccd4:	add	r0, pc, #4
    ccd8:	ldr	r1, [r0, r1, lsl #2]
    ccdc:	add	pc, r0, r1
    cce0:	.word	0x00000014
    cce4:	.word	0x000001ac
    cce8:	.word	0x000001b8
    ccec:	.word	0x00000014
    ccf0:	.word	0x000000d4
    ccf4:	mov	r0, #1
    ccf8:	mov	r1, #7
    ccfc:	mov	r2, #6
    cd00:	mov	r3, r5
    cd04:	bl	1c3c0 <gen_bcmp>
    cd08:	mov	r4, r0
    cd0c:	mov	r0, #1
    cd10:	mov	r1, #1
    cd14:	mov	r2, #6
    cd18:	mov	r3, r5
    cd1c:	bl	1c3c0 <gen_bcmp>
    cd20:	ldr	r1, [r4, #44]	; 0x2c
    cd24:	cmp	r4, #0
    cd28:	clz	r1, r1
    cd2c:	lsr	r1, r1, #5
    cd30:	str	r1, [r4, #44]	; 0x2c
    cd34:	beq	cd70 <gen_fhostop+0xb4>
    cd38:	ldr	r2, [r0, #96]	; 0x60
    cd3c:	mov	r3, r4
    cd40:	b	cd48 <gen_fhostop+0x8c>
    cd44:	ldr	r1, [r3, #44]	; 0x2c
    cd48:	cmp	r1, #0
    cd4c:	mov	r1, #84	; 0x54
    cd50:	add	r5, r3, #84	; 0x54
    cd54:	movweq	r1, #60	; 0x3c
    cd58:	addeq	r5, r3, #60	; 0x3c
    cd5c:	ldr	r3, [r3, r1]
    cd60:	str	r2, [r5]
    cd64:	cmp	r3, #0
    cd68:	bne	cd44 <gen_fhostop+0x88>
    cd6c:	ldr	r1, [r4, #44]	; 0x2c
    cd70:	clz	r1, r1
    cd74:	cmp	r0, #0
    cd78:	lsr	r1, r1, #5
    cd7c:	str	r1, [r4, #44]	; 0x2c
    cd80:	str	r0, [sp]
    cd84:	beq	ceb4 <gen_fhostop+0x1f8>
    cd88:	mov	r2, r0
    cd8c:	ldr	r3, [r2, #44]	; 0x2c
    cd90:	add	r1, r2, #84	; 0x54
    cd94:	cmp	r3, #0
    cd98:	mov	r3, #84	; 0x54
    cd9c:	movweq	r3, #60	; 0x3c
    cda0:	addeq	r1, r2, #60	; 0x3c
    cda4:	ldr	r2, [r2, r3]
    cda8:	cmp	r2, #0
    cdac:	bne	cd8c <gen_fhostop+0xd0>
    cdb0:	b	ceb8 <gen_fhostop+0x1fc>
    cdb4:	mov	r0, #1
    cdb8:	mov	r1, #7
    cdbc:	mov	r2, #6
    cdc0:	mov	r3, r5
    cdc4:	bl	1c3c0 <gen_bcmp>
    cdc8:	mov	r4, r0
    cdcc:	mov	r0, #1
    cdd0:	mov	r1, #1
    cdd4:	mov	r2, #6
    cdd8:	mov	r3, r5
    cddc:	bl	1c3c0 <gen_bcmp>
    cde0:	cmp	r4, #0
    cde4:	beq	ce18 <gen_fhostop+0x15c>
    cde8:	ldr	r1, [r0, #96]	; 0x60
    cdec:	mov	r2, r4
    cdf0:	ldr	r3, [r2, #44]	; 0x2c
    cdf4:	add	r5, r2, #84	; 0x54
    cdf8:	cmp	r3, #0
    cdfc:	mov	r3, #84	; 0x54
    ce00:	movweq	r3, #60	; 0x3c
    ce04:	addeq	r5, r2, #60	; 0x3c
    ce08:	ldr	r2, [r2, r3]
    ce0c:	str	r1, [r5]
    ce10:	cmp	r2, #0
    ce14:	bne	cdf0 <gen_fhostop+0x134>
    ce18:	ldr	r1, [r4, #44]	; 0x2c
    ce1c:	cmp	r0, #0
    ce20:	clz	r1, r1
    ce24:	lsr	r1, r1, #5
    ce28:	str	r1, [r4, #44]	; 0x2c
    ce2c:	ldr	r2, [r0, #44]	; 0x2c
    ce30:	clz	r1, r2
    ce34:	lsr	r1, r1, #5
    ce38:	str	r1, [r0, #44]	; 0x2c
    ce3c:	str	r0, [sp, #4]
    ce40:	beq	cec0 <gen_fhostop+0x204>
    ce44:	cmp	r2, #0
    ce48:	mov	r2, #60	; 0x3c
    ce4c:	add	r1, r0, #60	; 0x3c
    ce50:	movweq	r2, #84	; 0x54
    ce54:	addeq	r1, r0, #84	; 0x54
    ce58:	ldr	r2, [r0, r2]
    ce5c:	cmp	r2, #0
    ce60:	beq	cec4 <gen_fhostop+0x208>
    ce64:	ldr	r3, [r2, #44]	; 0x2c
    ce68:	add	r1, r2, #84	; 0x54
    ce6c:	cmp	r3, #0
    ce70:	mov	r3, #84	; 0x54
    ce74:	movweq	r3, #60	; 0x3c
    ce78:	addeq	r1, r2, #60	; 0x3c
    ce7c:	ldr	r2, [r2, r3]
    ce80:	cmp	r2, #0
    ce84:	bne	ce64 <gen_fhostop+0x1a8>
    ce88:	b	cec4 <gen_fhostop+0x208>
    ce8c:	mov	r0, #1
    ce90:	mov	r1, #7
    ce94:	b	cea0 <gen_fhostop+0x1e4>
    ce98:	mov	r0, #1
    ce9c:	mov	r1, #1
    cea0:	mov	r2, #6
    cea4:	mov	r3, r5
    cea8:	sub	sp, fp, #8
    ceac:	pop	{r4, r5, fp, lr}
    ceb0:	b	1c3c0 <gen_bcmp>
    ceb4:	mov	r1, sp
    ceb8:	str	r4, [r1]
    cebc:	b	ced8 <gen_fhostop+0x21c>
    cec0:	add	r1, sp, #4
    cec4:	str	r4, [r1]
    cec8:	ldr	r1, [r0, #44]	; 0x2c
    cecc:	clz	r1, r1
    ced0:	lsr	r1, r1, #5
    ced4:	str	r1, [r0, #44]	; 0x2c
    ced8:	ldr	r1, [r4, #96]	; 0x60
    cedc:	str	r1, [r0, #96]	; 0x60
    cee0:	sub	sp, fp, #8
    cee4:	pop	{r4, r5, fp, pc}
    cee8:	bl	fc4 <abort@plt>

0000ceec <gen_thostop>:
    ceec:	push	{r4, r5, fp, lr}
    cef0:	add	fp, sp, #8
    cef4:	sub	sp, sp, #8
    cef8:	cmp	r1, #4
    cefc:	bhi	d118 <gen_thostop+0x22c>
    cf00:	mov	r5, r0
    cf04:	add	r0, pc, #4
    cf08:	ldr	r1, [r0, r1, lsl #2]
    cf0c:	add	pc, r0, r1
    cf10:	.word	0x00000014
    cf14:	.word	0x000001ac
    cf18:	.word	0x000001b8
    cf1c:	.word	0x00000014
    cf20:	.word	0x000000d4
    cf24:	mov	r0, #1
    cf28:	mov	r1, #8
    cf2c:	mov	r2, #6
    cf30:	mov	r3, r5
    cf34:	bl	1c3c0 <gen_bcmp>
    cf38:	mov	r4, r0
    cf3c:	mov	r0, #1
    cf40:	mov	r1, #2
    cf44:	mov	r2, #6
    cf48:	mov	r3, r5
    cf4c:	bl	1c3c0 <gen_bcmp>
    cf50:	ldr	r1, [r4, #44]	; 0x2c
    cf54:	cmp	r4, #0
    cf58:	clz	r1, r1
    cf5c:	lsr	r1, r1, #5
    cf60:	str	r1, [r4, #44]	; 0x2c
    cf64:	beq	cfa0 <gen_thostop+0xb4>
    cf68:	ldr	r2, [r0, #96]	; 0x60
    cf6c:	mov	r3, r4
    cf70:	b	cf78 <gen_thostop+0x8c>
    cf74:	ldr	r1, [r3, #44]	; 0x2c
    cf78:	cmp	r1, #0
    cf7c:	mov	r1, #84	; 0x54
    cf80:	add	r5, r3, #84	; 0x54
    cf84:	movweq	r1, #60	; 0x3c
    cf88:	addeq	r5, r3, #60	; 0x3c
    cf8c:	ldr	r3, [r3, r1]
    cf90:	str	r2, [r5]
    cf94:	cmp	r3, #0
    cf98:	bne	cf74 <gen_thostop+0x88>
    cf9c:	ldr	r1, [r4, #44]	; 0x2c
    cfa0:	clz	r1, r1
    cfa4:	cmp	r0, #0
    cfa8:	lsr	r1, r1, #5
    cfac:	str	r1, [r4, #44]	; 0x2c
    cfb0:	str	r0, [sp]
    cfb4:	beq	d0e4 <gen_thostop+0x1f8>
    cfb8:	mov	r2, r0
    cfbc:	ldr	r3, [r2, #44]	; 0x2c
    cfc0:	add	r1, r2, #84	; 0x54
    cfc4:	cmp	r3, #0
    cfc8:	mov	r3, #84	; 0x54
    cfcc:	movweq	r3, #60	; 0x3c
    cfd0:	addeq	r1, r2, #60	; 0x3c
    cfd4:	ldr	r2, [r2, r3]
    cfd8:	cmp	r2, #0
    cfdc:	bne	cfbc <gen_thostop+0xd0>
    cfe0:	b	d0e8 <gen_thostop+0x1fc>
    cfe4:	mov	r0, #1
    cfe8:	mov	r1, #8
    cfec:	mov	r2, #6
    cff0:	mov	r3, r5
    cff4:	bl	1c3c0 <gen_bcmp>
    cff8:	mov	r4, r0
    cffc:	mov	r0, #1
    d000:	mov	r1, #2
    d004:	mov	r2, #6
    d008:	mov	r3, r5
    d00c:	bl	1c3c0 <gen_bcmp>
    d010:	cmp	r4, #0
    d014:	beq	d048 <gen_thostop+0x15c>
    d018:	ldr	r1, [r0, #96]	; 0x60
    d01c:	mov	r2, r4
    d020:	ldr	r3, [r2, #44]	; 0x2c
    d024:	add	r5, r2, #84	; 0x54
    d028:	cmp	r3, #0
    d02c:	mov	r3, #84	; 0x54
    d030:	movweq	r3, #60	; 0x3c
    d034:	addeq	r5, r2, #60	; 0x3c
    d038:	ldr	r2, [r2, r3]
    d03c:	str	r1, [r5]
    d040:	cmp	r2, #0
    d044:	bne	d020 <gen_thostop+0x134>
    d048:	ldr	r1, [r4, #44]	; 0x2c
    d04c:	cmp	r0, #0
    d050:	clz	r1, r1
    d054:	lsr	r1, r1, #5
    d058:	str	r1, [r4, #44]	; 0x2c
    d05c:	ldr	r2, [r0, #44]	; 0x2c
    d060:	clz	r1, r2
    d064:	lsr	r1, r1, #5
    d068:	str	r1, [r0, #44]	; 0x2c
    d06c:	str	r0, [sp, #4]
    d070:	beq	d0f0 <gen_thostop+0x204>
    d074:	cmp	r2, #0
    d078:	mov	r2, #60	; 0x3c
    d07c:	add	r1, r0, #60	; 0x3c
    d080:	movweq	r2, #84	; 0x54
    d084:	addeq	r1, r0, #84	; 0x54
    d088:	ldr	r2, [r0, r2]
    d08c:	cmp	r2, #0
    d090:	beq	d0f4 <gen_thostop+0x208>
    d094:	ldr	r3, [r2, #44]	; 0x2c
    d098:	add	r1, r2, #84	; 0x54
    d09c:	cmp	r3, #0
    d0a0:	mov	r3, #84	; 0x54
    d0a4:	movweq	r3, #60	; 0x3c
    d0a8:	addeq	r1, r2, #60	; 0x3c
    d0ac:	ldr	r2, [r2, r3]
    d0b0:	cmp	r2, #0
    d0b4:	bne	d094 <gen_thostop+0x1a8>
    d0b8:	b	d0f4 <gen_thostop+0x208>
    d0bc:	mov	r0, #1
    d0c0:	mov	r1, #8
    d0c4:	b	d0d0 <gen_thostop+0x1e4>
    d0c8:	mov	r0, #1
    d0cc:	mov	r1, #2
    d0d0:	mov	r2, #6
    d0d4:	mov	r3, r5
    d0d8:	sub	sp, fp, #8
    d0dc:	pop	{r4, r5, fp, lr}
    d0e0:	b	1c3c0 <gen_bcmp>
    d0e4:	mov	r1, sp
    d0e8:	str	r4, [r1]
    d0ec:	b	d108 <gen_thostop+0x21c>
    d0f0:	add	r1, sp, #4
    d0f4:	str	r4, [r1]
    d0f8:	ldr	r1, [r0, #44]	; 0x2c
    d0fc:	clz	r1, r1
    d100:	lsr	r1, r1, #5
    d104:	str	r1, [r0, #44]	; 0x2c
    d108:	ldr	r1, [r4, #96]	; 0x60
    d10c:	str	r1, [r0, #96]	; 0x60
    d110:	sub	sp, fp, #8
    d114:	pop	{r4, r5, fp, pc}
    d118:	bl	fc4 <abort@plt>

0000d11c <gen_wlanhostop>:
    d11c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    d120:	add	fp, sp, #28
    d124:	sub	sp, sp, #12
    d128:	cmp	r1, #8
    d12c:	bhi	f350 <gen_wlanhostop+0x2234>
    d130:	mov	r9, r0
    d134:	add	r0, pc, #4
    d138:	ldr	r1, [r0, r1, lsl #2]
    d13c:	add	pc, r0, r1
    d140:	.word	0x00000024
    d144:	.word	0x000001a4
    d148:	.word	0x00000314
    d14c:	.word	0x00000024
    d150:	.word	0x000000d8
    d154:	.word	0x0000050c
    d158:	.word	0x00000528
    d15c:	.word	0x00000484
    d160:	.word	0x000005b4
    d164:	mov	r0, r9
    d168:	mov	r1, #1
    d16c:	bl	d11c <gen_wlanhostop>
    d170:	mov	r6, r0
    d174:	mov	r0, r9
    d178:	mov	r1, #2
    d17c:	bl	d11c <gen_wlanhostop>
    d180:	mov	r5, r0
    d184:	ldr	r0, [r6, #44]	; 0x2c
    d188:	cmp	r6, #0
    d18c:	clz	r0, r0
    d190:	lsr	r0, r0, #5
    d194:	str	r0, [r6, #44]	; 0x2c
    d198:	beq	d1d4 <gen_wlanhostop+0xb8>
    d19c:	ldr	r1, [r5, #96]	; 0x60
    d1a0:	mov	r2, r6
    d1a4:	b	d1ac <gen_wlanhostop+0x90>
    d1a8:	ldr	r0, [r2, #44]	; 0x2c
    d1ac:	cmp	r0, #0
    d1b0:	mov	r0, #84	; 0x54
    d1b4:	add	r3, r2, #84	; 0x54
    d1b8:	movweq	r0, #60	; 0x3c
    d1bc:	addeq	r3, r2, #60	; 0x3c
    d1c0:	ldr	r2, [r2, r0]
    d1c4:	str	r1, [r3]
    d1c8:	cmp	r2, #0
    d1cc:	bne	d1a8 <gen_wlanhostop+0x8c>
    d1d0:	ldr	r0, [r6, #44]	; 0x2c
    d1d4:	clz	r0, r0
    d1d8:	cmp	r5, #0
    d1dc:	lsr	r0, r0, #5
    d1e0:	str	r0, [r6, #44]	; 0x2c
    d1e4:	str	r5, [sp, #8]
    d1e8:	beq	d77c <gen_wlanhostop+0x660>
    d1ec:	mov	r1, r5
    d1f0:	ldr	r2, [r1, #44]	; 0x2c
    d1f4:	add	r0, r1, #84	; 0x54
    d1f8:	cmp	r2, #0
    d1fc:	mov	r2, #84	; 0x54
    d200:	movweq	r2, #60	; 0x3c
    d204:	addeq	r0, r1, #60	; 0x3c
    d208:	ldr	r1, [r1, r2]
    d20c:	cmp	r1, #0
    d210:	bne	d1f0 <gen_wlanhostop+0xd4>
    d214:	b	d780 <gen_wlanhostop+0x664>
    d218:	mov	r0, r9
    d21c:	mov	r1, #1
    d220:	bl	d11c <gen_wlanhostop>
    d224:	mov	r6, r0
    d228:	mov	r0, r9
    d22c:	mov	r1, #2
    d230:	bl	d11c <gen_wlanhostop>
    d234:	mov	r5, r0
    d238:	cmp	r6, #0
    d23c:	beq	d270 <gen_wlanhostop+0x154>
    d240:	ldr	r0, [r5, #96]	; 0x60
    d244:	mov	r1, r6
    d248:	ldr	r2, [r1, #44]	; 0x2c
    d24c:	add	r3, r1, #84	; 0x54
    d250:	cmp	r2, #0
    d254:	mov	r2, #84	; 0x54
    d258:	movweq	r2, #60	; 0x3c
    d25c:	addeq	r3, r1, #60	; 0x3c
    d260:	ldr	r1, [r1, r2]
    d264:	str	r0, [r3]
    d268:	cmp	r1, #0
    d26c:	bne	d248 <gen_wlanhostop+0x12c>
    d270:	ldr	r0, [r6, #44]	; 0x2c
    d274:	cmp	r5, #0
    d278:	clz	r0, r0
    d27c:	lsr	r0, r0, #5
    d280:	str	r0, [r6, #44]	; 0x2c
    d284:	ldr	r1, [r5, #44]	; 0x2c
    d288:	clz	r0, r1
    d28c:	lsr	r0, r0, #5
    d290:	str	r0, [r5, #44]	; 0x2c
    d294:	str	r5, [sp, #8]
    d298:	beq	deac <gen_wlanhostop+0xd90>
    d29c:	cmp	r1, #0
    d2a0:	mov	r1, #60	; 0x3c
    d2a4:	add	r0, r5, #60	; 0x3c
    d2a8:	movweq	r1, #84	; 0x54
    d2ac:	addeq	r0, r5, #84	; 0x54
    d2b0:	ldr	r1, [r5, r1]
    d2b4:	cmp	r1, #0
    d2b8:	beq	deb0 <gen_wlanhostop+0xd94>
    d2bc:	ldr	r2, [r1, #44]	; 0x2c
    d2c0:	add	r0, r1, #84	; 0x54
    d2c4:	cmp	r2, #0
    d2c8:	mov	r2, #84	; 0x54
    d2cc:	movweq	r2, #60	; 0x3c
    d2d0:	addeq	r0, r1, #60	; 0x3c
    d2d4:	ldr	r1, [r1, r2]
    d2d8:	cmp	r1, #0
    d2dc:	bne	d2bc <gen_wlanhostop+0x1a0>
    d2e0:	b	deb0 <gen_wlanhostop+0xd94>
    d2e4:	mov	r0, #1
    d2e8:	mov	r1, #1
    d2ec:	mov	r2, #16
    d2f0:	mov	r7, #1
    d2f4:	bl	17a3c <gen_load_a>
    d2f8:	mov	r5, r0
    d2fc:	ldr	r0, [pc, #4064]	; e2e4 <gen_wlanhostop+0x11c8>
    d300:	ldr	r0, [pc, r0]
    d304:	ldr	r8, [pc, #4060]	; e2e8 <gen_wlanhostop+0x11cc>
    d308:	add	r8, pc, r8
    d30c:	mov	r4, r8
    d310:	ldr	r6, [r4, r0, lsl #3]!
    d314:	cmp	r6, #207	; 0xcf
    d318:	bhi	d36c <gen_wlanhostop+0x250>
    d31c:	ldr	r2, [pc, #4040]	; e2ec <gen_wlanhostop+0x11d0>
    d320:	add	r1, r0, #1
    d324:	cmp	r0, #15
    d328:	add	r2, pc, r2
    d32c:	str	r1, [r2]
    d330:	bge	f344 <gen_wlanhostop+0x2228>
    d334:	mov	r0, #1024	; 0x400
    d338:	lsl	r6, r0, r1
    d33c:	mov	r0, r6
    d340:	bl	ed4 <malloc@plt>
    d344:	cmp	r0, #0
    d348:	str	r0, [r4, #12]
    d34c:	beq	f344 <gen_wlanhostop+0x2228>
    d350:	mov	r1, #0
    d354:	mov	r2, r6
    d358:	add	r4, r4, #8
    d35c:	bl	f40 <memset@plt>
    d360:	cmp	r6, #207	; 0xcf
    d364:	str	r6, [r4]
    d368:	bls	f344 <gen_wlanhostop+0x2228>
    d36c:	sub	r0, r6, #208	; 0xd0
    d370:	mov	r2, #6
    d374:	mov	r3, r9
    d378:	str	r0, [r4]
    d37c:	ldr	r1, [r4, #4]
    d380:	add	r4, r1, r0
    d384:	mov	r0, #69	; 0x45
    d388:	mov	r1, #24
    d38c:	str	r7, [r4, #20]
    d390:	str	r5, [r4, #4]
    d394:	str	r0, [r4, #8]
    d398:	mov	r0, #1
    d39c:	str	r4, [r4, #96]	; 0x60
    d3a0:	bl	1c3c0 <gen_bcmp>
    d3a4:	mov	r5, r0
    d3a8:	cmp	r4, #0
    d3ac:	beq	d3e0 <gen_wlanhostop+0x2c4>
    d3b0:	ldr	r0, [r5, #96]	; 0x60
    d3b4:	mov	r1, r4
    d3b8:	ldr	r2, [r1, #44]	; 0x2c
    d3bc:	add	r3, r1, #84	; 0x54
    d3c0:	cmp	r2, #0
    d3c4:	mov	r2, #84	; 0x54
    d3c8:	movweq	r2, #60	; 0x3c
    d3cc:	addeq	r3, r1, #60	; 0x3c
    d3d0:	ldr	r1, [r1, r2]
    d3d4:	str	r0, [r3]
    d3d8:	cmp	r1, #0
    d3dc:	bne	d3b8 <gen_wlanhostop+0x29c>
    d3e0:	ldr	r0, [r4, #44]	; 0x2c
    d3e4:	cmp	r5, #0
    d3e8:	clz	r0, r0
    d3ec:	lsr	r0, r0, #5
    d3f0:	str	r0, [r4, #44]	; 0x2c
    d3f4:	ldr	r1, [r5, #44]	; 0x2c
    d3f8:	clz	r0, r1
    d3fc:	lsr	r0, r0, #5
    d400:	str	r0, [r5, #44]	; 0x2c
    d404:	str	r5, [sp, #8]
    d408:	beq	decc <gen_wlanhostop+0xdb0>
    d40c:	cmp	r1, #0
    d410:	mov	r1, #60	; 0x3c
    d414:	add	r0, r5, #60	; 0x3c
    d418:	movweq	r1, #84	; 0x54
    d41c:	addeq	r0, r5, #84	; 0x54
    d420:	ldr	r1, [r5, r1]
    d424:	cmp	r1, #0
    d428:	beq	ded0 <gen_wlanhostop+0xdb4>
    d42c:	ldr	r2, [r1, #44]	; 0x2c
    d430:	add	r0, r1, #84	; 0x54
    d434:	cmp	r2, #0
    d438:	mov	r2, #84	; 0x54
    d43c:	movweq	r2, #60	; 0x3c
    d440:	addeq	r0, r1, #60	; 0x3c
    d444:	ldr	r1, [r1, r2]
    d448:	cmp	r1, #0
    d44c:	bne	d42c <gen_wlanhostop+0x310>
    d450:	b	ded0 <gen_wlanhostop+0xdb4>
    d454:	mov	r0, #1
    d458:	mov	r1, #1
    d45c:	mov	r2, #16
    d460:	mov	r7, #1
    d464:	bl	17a3c <gen_load_a>
    d468:	mov	r5, r0
    d46c:	ldr	r0, [pc, #3820]	; e360 <gen_wlanhostop+0x1244>
    d470:	ldr	r0, [pc, r0]
    d474:	ldr	r8, [pc, #3816]	; e364 <gen_wlanhostop+0x1248>
    d478:	add	r8, pc, r8
    d47c:	mov	r4, r8
    d480:	ldr	r6, [r4, r0, lsl #3]!
    d484:	cmp	r6, #207	; 0xcf
    d488:	bhi	d4dc <gen_wlanhostop+0x3c0>
    d48c:	ldr	r2, [pc, #3796]	; e368 <gen_wlanhostop+0x124c>
    d490:	add	r1, r0, #1
    d494:	cmp	r0, #15
    d498:	add	r2, pc, r2
    d49c:	str	r1, [r2]
    d4a0:	bge	f344 <gen_wlanhostop+0x2228>
    d4a4:	mov	r0, #1024	; 0x400
    d4a8:	lsl	r6, r0, r1
    d4ac:	mov	r0, r6
    d4b0:	bl	ed4 <malloc@plt>
    d4b4:	cmp	r0, #0
    d4b8:	str	r0, [r4, #12]
    d4bc:	beq	f344 <gen_wlanhostop+0x2228>
    d4c0:	mov	r1, #0
    d4c4:	mov	r2, r6
    d4c8:	add	r4, r4, #8
    d4cc:	bl	f40 <memset@plt>
    d4d0:	cmp	r6, #207	; 0xcf
    d4d4:	str	r6, [r4]
    d4d8:	bls	f344 <gen_wlanhostop+0x2228>
    d4dc:	sub	r0, r6, #208	; 0xd0
    d4e0:	mov	r2, #6
    d4e4:	mov	r3, r9
    d4e8:	str	r0, [r4]
    d4ec:	ldr	r1, [r4, #4]
    d4f0:	add	r4, r1, r0
    d4f4:	mov	r0, #69	; 0x45
    d4f8:	mov	r1, #16
    d4fc:	str	r7, [r4, #20]
    d500:	str	r5, [r4, #4]
    d504:	str	r0, [r4, #8]
    d508:	mov	r0, #1
    d50c:	str	r4, [r4, #96]	; 0x60
    d510:	bl	1c3c0 <gen_bcmp>
    d514:	mov	r5, r0
    d518:	cmp	r4, #0
    d51c:	beq	d550 <gen_wlanhostop+0x434>
    d520:	ldr	r0, [r5, #96]	; 0x60
    d524:	mov	r1, r4
    d528:	ldr	r2, [r1, #44]	; 0x2c
    d52c:	add	r3, r1, #84	; 0x54
    d530:	cmp	r2, #0
    d534:	mov	r2, #84	; 0x54
    d538:	movweq	r2, #60	; 0x3c
    d53c:	addeq	r3, r1, #60	; 0x3c
    d540:	ldr	r1, [r1, r2]
    d544:	str	r0, [r3]
    d548:	cmp	r1, #0
    d54c:	bne	d528 <gen_wlanhostop+0x40c>
    d550:	ldr	r0, [r4, #44]	; 0x2c
    d554:	cmp	r5, #0
    d558:	clz	r0, r0
    d55c:	lsr	r0, r0, #5
    d560:	str	r0, [r4, #44]	; 0x2c
    d564:	ldr	r1, [r5, #44]	; 0x2c
    d568:	clz	r0, r1
    d56c:	lsr	r0, r0, #5
    d570:	str	r0, [r5, #44]	; 0x2c
    d574:	str	r5, [sp, #8]
    d578:	beq	e060 <gen_wlanhostop+0xf44>
    d57c:	cmp	r1, #0
    d580:	mov	r1, #60	; 0x3c
    d584:	add	r0, r5, #60	; 0x3c
    d588:	movweq	r1, #84	; 0x54
    d58c:	addeq	r0, r5, #84	; 0x54
    d590:	ldr	r1, [r5, r1]
    d594:	cmp	r1, #0
    d598:	beq	e064 <gen_wlanhostop+0xf48>
    d59c:	ldr	r2, [r1, #44]	; 0x2c
    d5a0:	add	r0, r1, #84	; 0x54
    d5a4:	cmp	r2, #0
    d5a8:	mov	r2, #84	; 0x54
    d5ac:	movweq	r2, #60	; 0x3c
    d5b0:	addeq	r0, r1, #60	; 0x3c
    d5b4:	ldr	r1, [r1, r2]
    d5b8:	cmp	r1, #0
    d5bc:	bne	d59c <gen_wlanhostop+0x480>
    d5c0:	b	e064 <gen_wlanhostop+0xf48>
    d5c4:	mov	r0, #1
    d5c8:	mov	r1, #0
    d5cc:	mov	r2, #16
    d5d0:	bl	17a3c <gen_load_a>
    d5d4:	mov	r8, r0
    d5d8:	ldr	r0, [pc, #3816]	; e4c8 <gen_wlanhostop+0x13ac>
    d5dc:	ldr	r0, [pc, r0]
    d5e0:	ldr	r5, [pc, #3812]	; e4cc <gen_wlanhostop+0x13b0>
    d5e4:	add	r5, pc, r5
    d5e8:	mov	r4, r5
    d5ec:	ldr	r6, [r4, r0, lsl #3]!
    d5f0:	cmp	r6, #19
    d5f4:	bhi	d788 <gen_wlanhostop+0x66c>
    d5f8:	ldr	r1, [pc, #3792]	; e4d0 <gen_wlanhostop+0x13b4>
    d5fc:	add	r7, r0, #1
    d600:	cmp	r0, #15
    d604:	add	r1, pc, r1
    d608:	str	r7, [r1]
    d60c:	bge	f344 <gen_wlanhostop+0x2228>
    d610:	mov	r0, #1024	; 0x400
    d614:	lsl	r6, r0, r7
    d618:	mov	r0, r6
    d61c:	bl	ed4 <malloc@plt>
    d620:	cmp	r0, #0
    d624:	str	r0, [r4, #12]
    d628:	beq	f344 <gen_wlanhostop+0x2228>
    d62c:	mov	r1, #0
    d630:	mov	r2, r6
    d634:	add	r4, r4, #8
    d638:	bl	f40 <memset@plt>
    d63c:	cmp	r6, #19
    d640:	str	r6, [r4]
    d644:	bhi	d78c <gen_wlanhostop+0x670>
    d648:	b	f344 <gen_wlanhostop+0x2228>
    d64c:	mov	r0, #1
    d650:	mov	r1, #4
    d654:	mov	r2, #6
    d658:	mov	r3, r9
    d65c:	sub	sp, fp, #28
    d660:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    d664:	b	1c3c0 <gen_bcmp>
    d668:	mov	r0, #1
    d66c:	mov	r1, #0
    d670:	mov	r2, #16
    d674:	str	r9, [sp, #4]
    d678:	bl	17a3c <gen_load_a>
    d67c:	mov	r5, r0
    d680:	ldr	r0, [pc, #4008]	; e630 <gen_wlanhostop+0x1514>
    d684:	ldr	r0, [pc, r0]
    d688:	ldr	r9, [pc, #4004]	; e634 <gen_wlanhostop+0x1518>
    d68c:	add	r9, pc, r9
    d690:	mov	r4, r9
    d694:	ldr	r6, [r4, r0, lsl #3]!
    d698:	cmp	r6, #19
    d69c:	bhi	d918 <gen_wlanhostop+0x7fc>
    d6a0:	ldr	r1, [pc, #3984]	; e638 <gen_wlanhostop+0x151c>
    d6a4:	add	r7, r0, #1
    d6a8:	cmp	r0, #15
    d6ac:	add	r1, pc, r1
    d6b0:	str	r7, [r1]
    d6b4:	bge	f344 <gen_wlanhostop+0x2228>
    d6b8:	mov	r0, #1024	; 0x400
    d6bc:	lsl	r6, r0, r7
    d6c0:	mov	r0, r6
    d6c4:	bl	ed4 <malloc@plt>
    d6c8:	cmp	r0, #0
    d6cc:	str	r0, [r4, #12]
    d6d0:	beq	f344 <gen_wlanhostop+0x2228>
    d6d4:	mov	r1, #0
    d6d8:	mov	r2, r6
    d6dc:	add	r4, r4, #8
    d6e0:	bl	f40 <memset@plt>
    d6e4:	cmp	r6, #19
    d6e8:	str	r6, [r4]
    d6ec:	bhi	d91c <gen_wlanhostop+0x800>
    d6f0:	b	f344 <gen_wlanhostop+0x2228>
    d6f4:	mov	r0, #1
    d6f8:	mov	r1, #1
    d6fc:	mov	r2, #16
    d700:	bl	17a3c <gen_load_a>
    d704:	mov	r8, r0
    d708:	ldr	r0, [pc, #3884]	; e63c <gen_wlanhostop+0x1520>
    d70c:	ldr	r0, [pc, r0]
    d710:	ldr	r5, [pc, #3880]	; e640 <gen_wlanhostop+0x1524>
    d714:	add	r5, pc, r5
    d718:	mov	r4, r5
    d71c:	ldr	r6, [r4, r0, lsl #3]!
    d720:	cmp	r6, #19
    d724:	bhi	da68 <gen_wlanhostop+0x94c>
    d728:	ldr	r1, [pc, #3860]	; e644 <gen_wlanhostop+0x1528>
    d72c:	add	r7, r0, #1
    d730:	cmp	r0, #15
    d734:	add	r1, pc, r1
    d738:	str	r7, [r1]
    d73c:	bge	f344 <gen_wlanhostop+0x2228>
    d740:	mov	r0, #1024	; 0x400
    d744:	lsl	r6, r0, r7
    d748:	mov	r0, r6
    d74c:	bl	ed4 <malloc@plt>
    d750:	cmp	r0, #0
    d754:	str	r0, [r4, #12]
    d758:	beq	f344 <gen_wlanhostop+0x2228>
    d75c:	mov	r1, #0
    d760:	mov	r2, r6
    d764:	add	r4, r4, #8
    d768:	bl	f40 <memset@plt>
    d76c:	cmp	r6, #19
    d770:	str	r6, [r4]
    d774:	bhi	da6c <gen_wlanhostop+0x950>
    d778:	b	f344 <gen_wlanhostop+0x2228>
    d77c:	add	r0, sp, #8
    d780:	str	r6, [r0]
    d784:	b	dec4 <gen_wlanhostop+0xda8>
    d788:	mov	r7, r0
    d78c:	sub	r1, r6, #20
    d790:	mov	r2, #84	; 0x54
    d794:	str	r1, [r4]
    d798:	ldr	r0, [r4, #4]
    d79c:	str	r2, [r0, r1]!
    d7a0:	mov	r1, #12
    d7a4:	mov	r2, r8
    d7a8:	str	r1, [r0, #12]
    d7ac:	mov	r1, r2
    d7b0:	ldr	r2, [r2, #16]
    d7b4:	cmp	r2, #0
    d7b8:	bne	d7ac <gen_wlanhostop+0x690>
    d7bc:	str	r0, [r1, #16]
    d7c0:	ldr	r6, [r5, r7, lsl #3]!
    d7c4:	cmp	r6, #207	; 0xcf
    d7c8:	bhi	d81c <gen_wlanhostop+0x700>
    d7cc:	ldr	r1, [pc, #3700]	; e648 <gen_wlanhostop+0x152c>
    d7d0:	add	r0, r7, #1
    d7d4:	cmp	r7, #15
    d7d8:	add	r1, pc, r1
    d7dc:	str	r0, [r1]
    d7e0:	bge	f344 <gen_wlanhostop+0x2228>
    d7e4:	mov	r1, #1024	; 0x400
    d7e8:	lsl	r6, r1, r0
    d7ec:	mov	r0, r6
    d7f0:	bl	ed4 <malloc@plt>
    d7f4:	cmp	r0, #0
    d7f8:	str	r0, [r5, #12]
    d7fc:	beq	f344 <gen_wlanhostop+0x2228>
    d800:	mov	r1, #0
    d804:	mov	r2, r6
    d808:	add	r5, r5, #8
    d80c:	bl	f40 <memset@plt>
    d810:	cmp	r6, #207	; 0xcf
    d814:	str	r6, [r5]
    d818:	bls	f344 <gen_wlanhostop+0x2228>
    d81c:	sub	r0, r6, #208	; 0xd0
    d820:	mov	r2, #6
    d824:	mov	r3, r9
    d828:	str	r0, [r5]
    d82c:	ldr	r1, [r5, #4]
    d830:	add	r4, r1, r0
    d834:	mov	r0, #21
    d838:	mov	r1, #16
    d83c:	str	r8, [r4, #4]
    d840:	str	r0, [r4, #8]
    d844:	mov	r0, #4
    d848:	str	r0, [r4, #20]
    d84c:	ldr	r0, [r4, #44]	; 0x2c
    d850:	clz	r0, r0
    d854:	lsr	r0, r0, #5
    d858:	str	r0, [r4, #44]	; 0x2c
    d85c:	mov	r0, #1
    d860:	str	r4, [r4, #96]	; 0x60
    d864:	bl	1c3c0 <gen_bcmp>
    d868:	mov	r5, r0
    d86c:	cmp	r4, #0
    d870:	beq	d8a4 <gen_wlanhostop+0x788>
    d874:	ldr	r0, [r5, #96]	; 0x60
    d878:	mov	r1, r4
    d87c:	ldr	r2, [r1, #44]	; 0x2c
    d880:	add	r3, r1, #84	; 0x54
    d884:	cmp	r2, #0
    d888:	mov	r2, #84	; 0x54
    d88c:	movweq	r2, #60	; 0x3c
    d890:	addeq	r3, r1, #60	; 0x3c
    d894:	ldr	r1, [r1, r2]
    d898:	str	r0, [r3]
    d89c:	cmp	r1, #0
    d8a0:	bne	d87c <gen_wlanhostop+0x760>
    d8a4:	ldr	r0, [r4, #44]	; 0x2c
    d8a8:	cmp	r5, #0
    d8ac:	clz	r0, r0
    d8b0:	lsr	r0, r0, #5
    d8b4:	str	r0, [r4, #44]	; 0x2c
    d8b8:	ldr	r1, [r5, #44]	; 0x2c
    d8bc:	clz	r0, r1
    d8c0:	lsr	r0, r0, #5
    d8c4:	str	r0, [r5, #44]	; 0x2c
    d8c8:	str	r5, [sp, #8]
    d8cc:	beq	f318 <gen_wlanhostop+0x21fc>
    d8d0:	cmp	r1, #0
    d8d4:	mov	r1, #60	; 0x3c
    d8d8:	add	r0, r5, #60	; 0x3c
    d8dc:	movweq	r1, #84	; 0x54
    d8e0:	addeq	r0, r5, #84	; 0x54
    d8e4:	ldr	r1, [r5, r1]
    d8e8:	cmp	r1, #0
    d8ec:	beq	f31c <gen_wlanhostop+0x2200>
    d8f0:	ldr	r2, [r1, #44]	; 0x2c
    d8f4:	add	r0, r1, #84	; 0x54
    d8f8:	cmp	r2, #0
    d8fc:	mov	r2, #84	; 0x54
    d900:	movweq	r2, #60	; 0x3c
    d904:	addeq	r0, r1, #60	; 0x3c
    d908:	ldr	r1, [r1, r2]
    d90c:	cmp	r1, #0
    d910:	bne	d8f0 <gen_wlanhostop+0x7d4>
    d914:	b	f31c <gen_wlanhostop+0x2200>
    d918:	mov	r7, r0
    d91c:	sub	r1, r6, #20
    d920:	mov	r2, #84	; 0x54
    d924:	str	r1, [r4]
    d928:	ldr	r0, [r4, #4]
    d92c:	str	r2, [r0, r1]!
    d930:	mov	r1, #12
    d934:	mov	r2, r5
    d938:	str	r1, [r0, #12]
    d93c:	mov	r1, r2
    d940:	ldr	r2, [r2, #16]
    d944:	cmp	r2, #0
    d948:	bne	d93c <gen_wlanhostop+0x820>
    d94c:	str	r0, [r1, #16]
    d950:	mov	r4, r9
    d954:	ldr	r6, [r4, r7, lsl #3]!
    d958:	cmp	r6, #207	; 0xcf
    d95c:	bhi	d9b0 <gen_wlanhostop+0x894>
    d960:	ldr	r1, [pc, #3704]	; e7e0 <gen_wlanhostop+0x16c4>
    d964:	add	r0, r7, #1
    d968:	cmp	r7, #15
    d96c:	add	r1, pc, r1
    d970:	str	r0, [r1]
    d974:	bge	f344 <gen_wlanhostop+0x2228>
    d978:	mov	r1, #1024	; 0x400
    d97c:	lsl	r6, r1, r0
    d980:	mov	r0, r6
    d984:	bl	ed4 <malloc@plt>
    d988:	cmp	r0, #0
    d98c:	str	r0, [r4, #12]
    d990:	beq	f344 <gen_wlanhostop+0x2228>
    d994:	mov	r1, #0
    d998:	mov	r2, r6
    d99c:	add	r4, r4, #8
    d9a0:	bl	f40 <memset@plt>
    d9a4:	cmp	r6, #207	; 0xcf
    d9a8:	str	r6, [r4]
    d9ac:	bls	f344 <gen_wlanhostop+0x2228>
    d9b0:	sub	r0, r6, #208	; 0xd0
    d9b4:	mov	r2, #16
    d9b8:	str	r0, [r4]
    d9bc:	ldr	r1, [r4, #4]
    d9c0:	add	r7, r1, r0
    d9c4:	mov	r0, #21
    d9c8:	mov	r1, #0
    d9cc:	str	r5, [r7, #4]
    d9d0:	str	r0, [r7, #8]
    d9d4:	mov	r0, #4
    d9d8:	str	r0, [r7, #20]
    d9dc:	ldr	r0, [r7, #44]	; 0x2c
    d9e0:	clz	r0, r0
    d9e4:	lsr	r0, r0, #5
    d9e8:	str	r0, [r7, #44]	; 0x2c
    d9ec:	mov	r0, #1
    d9f0:	str	r7, [r7, #96]	; 0x60
    d9f4:	bl	17a3c <gen_load_a>
    d9f8:	mov	r8, r0
    d9fc:	ldr	r0, [pc, #4020]	; e9b8 <gen_wlanhostop+0x189c>
    da00:	mov	r4, r9
    da04:	ldr	r0, [pc, r0]
    da08:	ldr	r6, [r4, r0, lsl #3]!
    da0c:	cmp	r6, #19
    da10:	bhi	dbe8 <gen_wlanhostop+0xacc>
    da14:	ldr	r1, [pc, #4000]	; e9bc <gen_wlanhostop+0x18a0>
    da18:	add	r5, r0, #1
    da1c:	cmp	r0, #15
    da20:	add	r1, pc, r1
    da24:	str	r5, [r1]
    da28:	bge	f344 <gen_wlanhostop+0x2228>
    da2c:	mov	r0, #1024	; 0x400
    da30:	lsl	r6, r0, r5
    da34:	mov	r0, r6
    da38:	bl	ed4 <malloc@plt>
    da3c:	cmp	r0, #0
    da40:	str	r0, [r4, #12]
    da44:	beq	f344 <gen_wlanhostop+0x2228>
    da48:	mov	r1, #0
    da4c:	mov	r2, r6
    da50:	add	r4, r4, #8
    da54:	bl	f40 <memset@plt>
    da58:	cmp	r6, #19
    da5c:	str	r6, [r4]
    da60:	bhi	dbec <gen_wlanhostop+0xad0>
    da64:	b	f344 <gen_wlanhostop+0x2228>
    da68:	mov	r7, r0
    da6c:	sub	r1, r6, #20
    da70:	mov	r2, #84	; 0x54
    da74:	str	r1, [r4]
    da78:	ldr	r0, [r4, #4]
    da7c:	str	r2, [r0, r1]!
    da80:	mov	r1, #3
    da84:	mov	r2, r8
    da88:	str	r1, [r0, #12]
    da8c:	mov	r1, r2
    da90:	ldr	r2, [r2, #16]
    da94:	cmp	r2, #0
    da98:	bne	da8c <gen_wlanhostop+0x970>
    da9c:	str	r0, [r1, #16]
    daa0:	ldr	r6, [r5, r7, lsl #3]!
    daa4:	cmp	r6, #207	; 0xcf
    daa8:	bhi	dafc <gen_wlanhostop+0x9e0>
    daac:	ldr	r1, [pc, #4028]	; ea70 <gen_wlanhostop+0x1954>
    dab0:	add	r0, r7, #1
    dab4:	cmp	r7, #15
    dab8:	add	r1, pc, r1
    dabc:	str	r0, [r1]
    dac0:	bge	f344 <gen_wlanhostop+0x2228>
    dac4:	mov	r1, #1024	; 0x400
    dac8:	lsl	r6, r1, r0
    dacc:	mov	r0, r6
    dad0:	bl	ed4 <malloc@plt>
    dad4:	cmp	r0, #0
    dad8:	str	r0, [r5, #12]
    dadc:	beq	f344 <gen_wlanhostop+0x2228>
    dae0:	mov	r1, #0
    dae4:	mov	r2, r6
    dae8:	add	r5, r5, #8
    daec:	bl	f40 <memset@plt>
    daf0:	cmp	r6, #207	; 0xcf
    daf4:	str	r6, [r5]
    daf8:	bls	f344 <gen_wlanhostop+0x2228>
    dafc:	sub	r0, r6, #208	; 0xd0
    db00:	mov	r2, #6
    db04:	mov	r3, r9
    db08:	str	r0, [r5]
    db0c:	ldr	r1, [r5, #4]
    db10:	add	r4, r1, r0
    db14:	mov	r0, #21
    db18:	mov	r1, #24
    db1c:	str	r8, [r4, #4]
    db20:	str	r0, [r4, #8]
    db24:	mov	r0, #3
    db28:	str	r0, [r4, #20]
    db2c:	mov	r0, #1
    db30:	str	r4, [r4, #96]	; 0x60
    db34:	bl	1c3c0 <gen_bcmp>
    db38:	mov	r5, r0
    db3c:	cmp	r4, #0
    db40:	beq	db74 <gen_wlanhostop+0xa58>
    db44:	ldr	r0, [r5, #96]	; 0x60
    db48:	mov	r1, r4
    db4c:	ldr	r2, [r1, #44]	; 0x2c
    db50:	add	r3, r1, #84	; 0x54
    db54:	cmp	r2, #0
    db58:	mov	r2, #84	; 0x54
    db5c:	movweq	r2, #60	; 0x3c
    db60:	addeq	r3, r1, #60	; 0x3c
    db64:	ldr	r1, [r1, r2]
    db68:	str	r0, [r3]
    db6c:	cmp	r1, #0
    db70:	bne	db4c <gen_wlanhostop+0xa30>
    db74:	ldr	r0, [r4, #44]	; 0x2c
    db78:	cmp	r5, #0
    db7c:	clz	r0, r0
    db80:	lsr	r0, r0, #5
    db84:	str	r0, [r4, #44]	; 0x2c
    db88:	ldr	r1, [r5, #44]	; 0x2c
    db8c:	clz	r0, r1
    db90:	lsr	r0, r0, #5
    db94:	str	r0, [r5, #44]	; 0x2c
    db98:	str	r5, [sp, #8]
    db9c:	beq	f318 <gen_wlanhostop+0x21fc>
    dba0:	cmp	r1, #0
    dba4:	mov	r1, #60	; 0x3c
    dba8:	add	r0, r5, #60	; 0x3c
    dbac:	movweq	r1, #84	; 0x54
    dbb0:	addeq	r0, r5, #84	; 0x54
    dbb4:	ldr	r1, [r5, r1]
    dbb8:	cmp	r1, #0
    dbbc:	beq	f31c <gen_wlanhostop+0x2200>
    dbc0:	ldr	r2, [r1, #44]	; 0x2c
    dbc4:	add	r0, r1, #84	; 0x54
    dbc8:	cmp	r2, #0
    dbcc:	mov	r2, #84	; 0x54
    dbd0:	movweq	r2, #60	; 0x3c
    dbd4:	addeq	r0, r1, #60	; 0x3c
    dbd8:	ldr	r1, [r1, r2]
    dbdc:	cmp	r1, #0
    dbe0:	bne	dbc0 <gen_wlanhostop+0xaa4>
    dbe4:	b	f31c <gen_wlanhostop+0x2200>
    dbe8:	mov	r5, r0
    dbec:	sub	r1, r6, #20
    dbf0:	mov	r2, #84	; 0x54
    dbf4:	str	r1, [r4]
    dbf8:	ldr	r0, [r4, #4]
    dbfc:	str	r2, [r0, r1]!
    dc00:	mov	r1, #240	; 0xf0
    dc04:	mov	r2, r8
    dc08:	str	r1, [r0, #12]
    dc0c:	mov	r1, r2
    dc10:	ldr	r2, [r2, #16]
    dc14:	cmp	r2, #0
    dc18:	bne	dc0c <gen_wlanhostop+0xaf0>
    dc1c:	str	r0, [r1, #16]
    dc20:	mov	r4, r9
    dc24:	ldr	r6, [r4, r5, lsl #3]!
    dc28:	cmp	r6, #207	; 0xcf
    dc2c:	bhi	dc80 <gen_wlanhostop+0xb64>
    dc30:	ldr	r1, [pc, #3756]	; eae4 <gen_wlanhostop+0x19c8>
    dc34:	add	r0, r5, #1
    dc38:	cmp	r5, #15
    dc3c:	add	r1, pc, r1
    dc40:	str	r0, [r1]
    dc44:	bge	f344 <gen_wlanhostop+0x2228>
    dc48:	mov	r1, #1024	; 0x400
    dc4c:	lsl	r6, r1, r0
    dc50:	mov	r0, r6
    dc54:	bl	ed4 <malloc@plt>
    dc58:	cmp	r0, #0
    dc5c:	str	r0, [r4, #12]
    dc60:	beq	f344 <gen_wlanhostop+0x2228>
    dc64:	mov	r1, #0
    dc68:	mov	r2, r6
    dc6c:	add	r4, r4, #8
    dc70:	bl	f40 <memset@plt>
    dc74:	cmp	r6, #207	; 0xcf
    dc78:	str	r6, [r4]
    dc7c:	bls	f344 <gen_wlanhostop+0x2228>
    dc80:	sub	r0, r6, #208	; 0xd0
    dc84:	mov	r2, #16
    dc88:	str	r0, [r4]
    dc8c:	ldr	r1, [r4, #4]
    dc90:	add	r5, r1, r0
    dc94:	mov	r0, #21
    dc98:	mov	r1, #0
    dc9c:	str	r8, [r5, #4]
    dca0:	str	r0, [r5, #8]
    dca4:	mov	r0, #192	; 0xc0
    dca8:	str	r0, [r5, #20]
    dcac:	ldr	r0, [r5, #44]	; 0x2c
    dcb0:	clz	r0, r0
    dcb4:	lsr	r0, r0, #5
    dcb8:	str	r0, [r5, #44]	; 0x2c
    dcbc:	mov	r0, #1
    dcc0:	str	r5, [r5, #96]	; 0x60
    dcc4:	bl	17a3c <gen_load_a>
    dcc8:	mov	r8, r0
    dccc:	ldr	r0, [pc, #3952]	; ec44 <gen_wlanhostop+0x1b28>
    dcd0:	mov	sl, r9
    dcd4:	ldr	r0, [pc, r0]
    dcd8:	ldr	r6, [sl, r0, lsl #3]!
    dcdc:	cmp	r6, #19
    dce0:	bhi	dd38 <gen_wlanhostop+0xc1c>
    dce4:	ldr	r1, [pc, #3932]	; ec48 <gen_wlanhostop+0x1b2c>
    dce8:	add	r4, r0, #1
    dcec:	cmp	r0, #15
    dcf0:	add	r1, pc, r1
    dcf4:	str	r4, [r1]
    dcf8:	bge	f344 <gen_wlanhostop+0x2228>
    dcfc:	mov	r0, #1024	; 0x400
    dd00:	lsl	r6, r0, r4
    dd04:	mov	r0, r6
    dd08:	bl	ed4 <malloc@plt>
    dd0c:	cmp	r0, #0
    dd10:	str	r0, [sl, #12]
    dd14:	beq	f344 <gen_wlanhostop+0x2228>
    dd18:	mov	r1, #0
    dd1c:	mov	r2, r6
    dd20:	add	sl, sl, #8
    dd24:	bl	f40 <memset@plt>
    dd28:	cmp	r6, #19
    dd2c:	str	r6, [sl]
    dd30:	bhi	dd3c <gen_wlanhostop+0xc20>
    dd34:	b	f344 <gen_wlanhostop+0x2228>
    dd38:	mov	r4, r0
    dd3c:	sub	r1, r6, #20
    dd40:	mov	r2, #84	; 0x54
    dd44:	str	r1, [sl]
    dd48:	ldr	r0, [sl, #4]
    dd4c:	str	r2, [r0, r1]!
    dd50:	mov	r1, #240	; 0xf0
    dd54:	mov	r2, r8
    dd58:	str	r1, [r0, #12]
    dd5c:	mov	r1, r2
    dd60:	ldr	r2, [r2, #16]
    dd64:	cmp	r2, #0
    dd68:	bne	dd5c <gen_wlanhostop+0xc40>
    dd6c:	str	r0, [r1, #16]
    dd70:	ldr	r6, [r9, r4, lsl #3]!
    dd74:	cmp	r6, #207	; 0xcf
    dd78:	bhi	ddcc <gen_wlanhostop+0xcb0>
    dd7c:	ldr	r1, [pc, #3784]	; ec4c <gen_wlanhostop+0x1b30>
    dd80:	add	r0, r4, #1
    dd84:	cmp	r4, #15
    dd88:	add	r1, pc, r1
    dd8c:	str	r0, [r1]
    dd90:	bge	f344 <gen_wlanhostop+0x2228>
    dd94:	mov	r1, #1024	; 0x400
    dd98:	lsl	r6, r1, r0
    dd9c:	mov	r0, r6
    dda0:	bl	ed4 <malloc@plt>
    dda4:	cmp	r0, #0
    dda8:	str	r0, [r9, #12]
    ddac:	beq	f344 <gen_wlanhostop+0x2228>
    ddb0:	mov	r1, #0
    ddb4:	mov	r2, r6
    ddb8:	add	r9, r9, #8
    ddbc:	bl	f40 <memset@plt>
    ddc0:	cmp	r6, #207	; 0xcf
    ddc4:	str	r6, [r9]
    ddc8:	bls	f344 <gen_wlanhostop+0x2228>
    ddcc:	sub	r0, r6, #208	; 0xd0
    ddd0:	cmp	r5, #0
    ddd4:	str	r0, [r9]
    ddd8:	ldr	r1, [r9, #4]
    dddc:	add	r4, r1, r0
    dde0:	mov	r0, #21
    dde4:	str	r8, [r4, #4]
    dde8:	str	r0, [r4, #8]
    ddec:	mov	r0, #208	; 0xd0
    ddf0:	str	r0, [r4, #20]
    ddf4:	ldr	r0, [r4, #44]	; 0x2c
    ddf8:	clz	r0, r0
    ddfc:	lsr	r0, r0, #5
    de00:	str	r0, [r4, #44]	; 0x2c
    de04:	str	r4, [r4, #96]	; 0x60
    de08:	beq	de38 <gen_wlanhostop+0xd1c>
    de0c:	mov	r0, r5
    de10:	ldr	r1, [r0, #44]	; 0x2c
    de14:	add	r2, r0, #84	; 0x54
    de18:	cmp	r1, #0
    de1c:	mov	r1, #84	; 0x54
    de20:	movweq	r1, #60	; 0x3c
    de24:	addeq	r2, r0, #60	; 0x3c
    de28:	ldr	r0, [r0, r1]
    de2c:	str	r4, [r2]
    de30:	cmp	r0, #0
    de34:	bne	de10 <gen_wlanhostop+0xcf4>
    de38:	ldr	r0, [r5, #44]	; 0x2c
    de3c:	ldr	r3, [sp, #4]
    de40:	cmp	r4, #0
    de44:	clz	r0, r0
    de48:	lsr	r0, r0, #5
    de4c:	str	r0, [r5, #44]	; 0x2c
    de50:	ldr	r0, [r4, #44]	; 0x2c
    de54:	clz	r1, r0
    de58:	lsr	r1, r1, #5
    de5c:	str	r1, [r4, #44]	; 0x2c
    de60:	str	r4, [sp, #8]
    de64:	beq	f194 <gen_wlanhostop+0x2078>
    de68:	mov	r2, #60	; 0x3c
    de6c:	cmp	r0, #0
    de70:	mov	r1, r4
    de74:	movweq	r2, #84	; 0x54
    de78:	ldr	r0, [r1, r2]!
    de7c:	cmp	r0, #0
    de80:	beq	f198 <gen_wlanhostop+0x207c>
    de84:	ldr	r2, [r0, #44]	; 0x2c
    de88:	add	r1, r0, #84	; 0x54
    de8c:	cmp	r2, #0
    de90:	mov	r2, #84	; 0x54
    de94:	movweq	r2, #60	; 0x3c
    de98:	addeq	r1, r0, #60	; 0x3c
    de9c:	ldr	r0, [r0, r2]
    dea0:	cmp	r0, #0
    dea4:	bne	de84 <gen_wlanhostop+0xd68>
    dea8:	b	f198 <gen_wlanhostop+0x207c>
    deac:	add	r0, sp, #8
    deb0:	str	r6, [r0]
    deb4:	ldr	r0, [r5, #44]	; 0x2c
    deb8:	clz	r0, r0
    debc:	lsr	r0, r0, #5
    dec0:	str	r0, [r5, #44]	; 0x2c
    dec4:	ldr	r0, [r6, #96]	; 0x60
    dec8:	b	f334 <gen_wlanhostop+0x2218>
    decc:	add	r0, sp, #8
    ded0:	str	r4, [r0]
    ded4:	mov	r1, #1
    ded8:	mov	r2, #16
    dedc:	mov	sl, #1
    dee0:	ldr	r0, [r5, #44]	; 0x2c
    dee4:	clz	r0, r0
    dee8:	lsr	r0, r0, #5
    deec:	str	r0, [r5, #44]	; 0x2c
    def0:	ldr	r0, [r4, #96]	; 0x60
    def4:	str	r0, [r5, #96]	; 0x60
    def8:	mov	r0, #1
    defc:	bl	17a3c <gen_load_a>
    df00:	mov	r6, r0
    df04:	ldr	r0, [pc, #3756]	; edb8 <gen_wlanhostop+0x1c9c>
    df08:	mov	r4, r8
    df0c:	ldr	r0, [pc, r0]
    df10:	ldr	r7, [r4, r0, lsl #3]!
    df14:	cmp	r7, #207	; 0xcf
    df18:	bhi	df6c <gen_wlanhostop+0xe50>
    df1c:	ldr	r2, [pc, #3736]	; edbc <gen_wlanhostop+0x1ca0>
    df20:	add	r1, r0, #1
    df24:	cmp	r0, #15
    df28:	add	r2, pc, r2
    df2c:	str	r1, [r2]
    df30:	bge	f344 <gen_wlanhostop+0x2228>
    df34:	mov	r0, #1024	; 0x400
    df38:	lsl	r7, r0, r1
    df3c:	mov	r0, r7
    df40:	bl	ed4 <malloc@plt>
    df44:	cmp	r0, #0
    df48:	str	r0, [r4, #12]
    df4c:	beq	f344 <gen_wlanhostop+0x2228>
    df50:	mov	r1, #0
    df54:	mov	r2, r7
    df58:	add	r4, r4, #8
    df5c:	bl	f40 <memset@plt>
    df60:	cmp	r7, #207	; 0xcf
    df64:	str	r7, [r4]
    df68:	bls	f344 <gen_wlanhostop+0x2228>
    df6c:	sub	r0, r7, #208	; 0xd0
    df70:	mov	r2, #6
    df74:	mov	r3, r9
    df78:	str	r0, [r4]
    df7c:	ldr	r1, [r4, #4]
    df80:	add	r4, r1, r0
    df84:	mov	r0, #69	; 0x45
    df88:	mov	r1, #16
    df8c:	str	sl, [r4, #20]
    df90:	str	r6, [r4, #4]
    df94:	str	r0, [r4, #8]
    df98:	ldr	r0, [r4, #44]	; 0x2c
    df9c:	clz	r0, r0
    dfa0:	lsr	r0, r0, #5
    dfa4:	str	r0, [r4, #44]	; 0x2c
    dfa8:	mov	r0, #1
    dfac:	str	r4, [r4, #96]	; 0x60
    dfb0:	bl	1c3c0 <gen_bcmp>
    dfb4:	cmp	r4, #0
    dfb8:	beq	dfec <gen_wlanhostop+0xed0>
    dfbc:	ldr	r1, [r0, #96]	; 0x60
    dfc0:	mov	r2, r4
    dfc4:	ldr	r3, [r2, #44]	; 0x2c
    dfc8:	add	r7, r2, #84	; 0x54
    dfcc:	cmp	r3, #0
    dfd0:	mov	r3, #84	; 0x54
    dfd4:	movweq	r3, #60	; 0x3c
    dfd8:	addeq	r7, r2, #60	; 0x3c
    dfdc:	ldr	r2, [r2, r3]
    dfe0:	str	r1, [r7]
    dfe4:	cmp	r2, #0
    dfe8:	bne	dfc4 <gen_wlanhostop+0xea8>
    dfec:	ldr	r1, [r4, #44]	; 0x2c
    dff0:	cmp	r0, #0
    dff4:	clz	r1, r1
    dff8:	lsr	r1, r1, #5
    dffc:	str	r1, [r4, #44]	; 0x2c
    e000:	ldr	r2, [r0, #44]	; 0x2c
    e004:	clz	r1, r2
    e008:	lsr	r1, r1, #5
    e00c:	str	r1, [r0, #44]	; 0x2c
    e010:	str	r0, [sp, #8]
    e014:	beq	e1f4 <gen_wlanhostop+0x10d8>
    e018:	cmp	r2, #0
    e01c:	mov	r2, #60	; 0x3c
    e020:	add	r1, r0, #60	; 0x3c
    e024:	movweq	r2, #84	; 0x54
    e028:	addeq	r1, r0, #84	; 0x54
    e02c:	ldr	r2, [r0, r2]
    e030:	cmp	r2, #0
    e034:	beq	e1f8 <gen_wlanhostop+0x10dc>
    e038:	ldr	r3, [r2, #44]	; 0x2c
    e03c:	add	r1, r2, #84	; 0x54
    e040:	cmp	r3, #0
    e044:	mov	r3, #84	; 0x54
    e048:	movweq	r3, #60	; 0x3c
    e04c:	addeq	r1, r2, #60	; 0x3c
    e050:	ldr	r2, [r2, r3]
    e054:	cmp	r2, #0
    e058:	bne	e038 <gen_wlanhostop+0xf1c>
    e05c:	b	e1f8 <gen_wlanhostop+0x10dc>
    e060:	add	r0, sp, #8
    e064:	str	r4, [r0]
    e068:	mov	r1, #1
    e06c:	mov	r2, #16
    e070:	mov	sl, #1
    e074:	ldr	r0, [r5, #44]	; 0x2c
    e078:	clz	r0, r0
    e07c:	lsr	r0, r0, #5
    e080:	str	r0, [r5, #44]	; 0x2c
    e084:	ldr	r0, [r4, #96]	; 0x60
    e088:	str	r0, [r5, #96]	; 0x60
    e08c:	mov	r0, #1
    e090:	bl	17a3c <gen_load_a>
    e094:	mov	r6, r0
    e098:	ldr	r0, [pc, #3940]	; f004 <gen_wlanhostop+0x1ee8>
    e09c:	mov	r4, r8
    e0a0:	ldr	r0, [pc, r0]
    e0a4:	ldr	r7, [r4, r0, lsl #3]!
    e0a8:	cmp	r7, #207	; 0xcf
    e0ac:	bhi	e100 <gen_wlanhostop+0xfe4>
    e0b0:	ldr	r2, [pc, #3920]	; f008 <gen_wlanhostop+0x1eec>
    e0b4:	add	r1, r0, #1
    e0b8:	cmp	r0, #15
    e0bc:	add	r2, pc, r2
    e0c0:	str	r1, [r2]
    e0c4:	bge	f344 <gen_wlanhostop+0x2228>
    e0c8:	mov	r0, #1024	; 0x400
    e0cc:	lsl	r7, r0, r1
    e0d0:	mov	r0, r7
    e0d4:	bl	ed4 <malloc@plt>
    e0d8:	cmp	r0, #0
    e0dc:	str	r0, [r4, #12]
    e0e0:	beq	f344 <gen_wlanhostop+0x2228>
    e0e4:	mov	r1, #0
    e0e8:	mov	r2, r7
    e0ec:	add	r4, r4, #8
    e0f0:	bl	f40 <memset@plt>
    e0f4:	cmp	r7, #207	; 0xcf
    e0f8:	str	r7, [r4]
    e0fc:	bls	f344 <gen_wlanhostop+0x2228>
    e100:	sub	r0, r7, #208	; 0xd0
    e104:	mov	r2, #6
    e108:	mov	r3, r9
    e10c:	str	r0, [r4]
    e110:	ldr	r1, [r4, #4]
    e114:	add	r4, r1, r0
    e118:	mov	r0, #69	; 0x45
    e11c:	mov	r1, #4
    e120:	str	sl, [r4, #20]
    e124:	str	r6, [r4, #4]
    e128:	str	r0, [r4, #8]
    e12c:	ldr	r0, [r4, #44]	; 0x2c
    e130:	clz	r0, r0
    e134:	lsr	r0, r0, #5
    e138:	str	r0, [r4, #44]	; 0x2c
    e13c:	mov	r0, #1
    e140:	str	r4, [r4, #96]	; 0x60
    e144:	bl	1c3c0 <gen_bcmp>
    e148:	cmp	r4, #0
    e14c:	beq	e180 <gen_wlanhostop+0x1064>
    e150:	ldr	r1, [r0, #96]	; 0x60
    e154:	mov	r2, r4
    e158:	ldr	r3, [r2, #44]	; 0x2c
    e15c:	add	r7, r2, #84	; 0x54
    e160:	cmp	r3, #0
    e164:	mov	r3, #84	; 0x54
    e168:	movweq	r3, #60	; 0x3c
    e16c:	addeq	r7, r2, #60	; 0x3c
    e170:	ldr	r2, [r2, r3]
    e174:	str	r1, [r7]
    e178:	cmp	r2, #0
    e17c:	bne	e158 <gen_wlanhostop+0x103c>
    e180:	ldr	r1, [r4, #44]	; 0x2c
    e184:	cmp	r0, #0
    e188:	clz	r1, r1
    e18c:	lsr	r1, r1, #5
    e190:	str	r1, [r4, #44]	; 0x2c
    e194:	ldr	r2, [r0, #44]	; 0x2c
    e198:	clz	r1, r2
    e19c:	lsr	r1, r1, #5
    e1a0:	str	r1, [r0, #44]	; 0x2c
    e1a4:	str	r0, [sp, #8]
    e1a8:	beq	e2a4 <gen_wlanhostop+0x1188>
    e1ac:	cmp	r2, #0
    e1b0:	mov	r2, #60	; 0x3c
    e1b4:	add	r1, r0, #60	; 0x3c
    e1b8:	movweq	r2, #84	; 0x54
    e1bc:	addeq	r1, r0, #84	; 0x54
    e1c0:	ldr	r2, [r0, r2]
    e1c4:	cmp	r2, #0
    e1c8:	beq	e2a8 <gen_wlanhostop+0x118c>
    e1cc:	ldr	r3, [r2, #44]	; 0x2c
    e1d0:	add	r1, r2, #84	; 0x54
    e1d4:	cmp	r3, #0
    e1d8:	mov	r3, #84	; 0x54
    e1dc:	movweq	r3, #60	; 0x3c
    e1e0:	addeq	r1, r2, #60	; 0x3c
    e1e4:	ldr	r2, [r2, r3]
    e1e8:	cmp	r2, #0
    e1ec:	bne	e1cc <gen_wlanhostop+0x10b0>
    e1f0:	b	e2a8 <gen_wlanhostop+0x118c>
    e1f4:	add	r1, sp, #8
    e1f8:	str	r4, [r1]
    e1fc:	ldr	r1, [r0, #44]	; 0x2c
    e200:	clz	r2, r1
    e204:	cmp	r1, #0
    e208:	lsr	r2, r2, #5
    e20c:	movwne	r1, #1
    e210:	cmp	r0, #0
    e214:	str	r2, [r0, #44]	; 0x2c
    e218:	ldr	r2, [r4, #96]	; 0x60
    e21c:	str	r1, [r0, #44]	; 0x2c
    e220:	str	r2, [r0, #96]	; 0x60
    e224:	beq	e260 <gen_wlanhostop+0x1144>
    e228:	ldr	r2, [r5, #96]	; 0x60
    e22c:	mov	r3, r0
    e230:	b	e238 <gen_wlanhostop+0x111c>
    e234:	ldr	r1, [r3, #44]	; 0x2c
    e238:	cmp	r1, #0
    e23c:	mov	r1, #84	; 0x54
    e240:	add	r7, r3, #84	; 0x54
    e244:	movweq	r1, #60	; 0x3c
    e248:	addeq	r7, r3, #60	; 0x3c
    e24c:	ldr	r3, [r3, r1]
    e250:	str	r2, [r7]
    e254:	cmp	r3, #0
    e258:	bne	e234 <gen_wlanhostop+0x1118>
    e25c:	ldr	r1, [r0, #44]	; 0x2c
    e260:	clz	r1, r1
    e264:	cmp	r5, #0
    e268:	lsr	r1, r1, #5
    e26c:	str	r1, [r0, #44]	; 0x2c
    e270:	str	r5, [sp, #8]
    e274:	beq	e36c <gen_wlanhostop+0x1250>
    e278:	mov	r2, r5
    e27c:	ldr	r3, [r2, #44]	; 0x2c
    e280:	add	r1, r2, #84	; 0x54
    e284:	cmp	r3, #0
    e288:	mov	r3, #84	; 0x54
    e28c:	movweq	r3, #60	; 0x3c
    e290:	addeq	r1, r2, #60	; 0x3c
    e294:	ldr	r2, [r2, r3]
    e298:	cmp	r2, #0
    e29c:	bne	e27c <gen_wlanhostop+0x1160>
    e2a0:	b	e370 <gen_wlanhostop+0x1254>
    e2a4:	add	r1, sp, #8
    e2a8:	str	r4, [r1]
    e2ac:	ldr	r1, [r0, #44]	; 0x2c
    e2b0:	clz	r2, r1
    e2b4:	cmp	r1, #0
    e2b8:	lsr	r2, r2, #5
    e2bc:	movwne	r1, #1
    e2c0:	cmp	r0, #0
    e2c4:	str	r2, [r0, #44]	; 0x2c
    e2c8:	ldr	r2, [r4, #96]	; 0x60
    e2cc:	str	r1, [r0, #44]	; 0x2c
    e2d0:	str	r2, [r0, #96]	; 0x60
    e2d4:	beq	e31c <gen_wlanhostop+0x1200>
    e2d8:	ldr	r2, [r5, #96]	; 0x60
    e2dc:	mov	r3, r0
    e2e0:	b	e2f4 <gen_wlanhostop+0x11d8>
    e2e4:	.word	0x0003a1fc
    e2e8:	.word	0x0003a174
    e2ec:	.word	0x0003a1d4
    e2f0:	ldr	r1, [r3, #44]	; 0x2c
    e2f4:	cmp	r1, #0
    e2f8:	mov	r1, #84	; 0x54
    e2fc:	add	r7, r3, #84	; 0x54
    e300:	movweq	r1, #60	; 0x3c
    e304:	addeq	r7, r3, #60	; 0x3c
    e308:	ldr	r3, [r3, r1]
    e30c:	str	r2, [r7]
    e310:	cmp	r3, #0
    e314:	bne	e2f0 <gen_wlanhostop+0x11d4>
    e318:	ldr	r1, [r0, #44]	; 0x2c
    e31c:	clz	r1, r1
    e320:	cmp	r5, #0
    e324:	lsr	r1, r1, #5
    e328:	str	r1, [r0, #44]	; 0x2c
    e32c:	str	r5, [sp, #8]
    e330:	beq	e4d4 <gen_wlanhostop+0x13b8>
    e334:	mov	r2, r5
    e338:	ldr	r3, [r2, #44]	; 0x2c
    e33c:	add	r1, r2, #84	; 0x54
    e340:	cmp	r3, #0
    e344:	mov	r3, #84	; 0x54
    e348:	movweq	r3, #60	; 0x3c
    e34c:	addeq	r1, r2, #60	; 0x3c
    e350:	ldr	r2, [r2, r3]
    e354:	cmp	r2, #0
    e358:	bne	e338 <gen_wlanhostop+0x121c>
    e35c:	b	e4d8 <gen_wlanhostop+0x13bc>
    e360:	.word	0x0003a08c
    e364:	.word	0x0003a004
    e368:	.word	0x0003a064
    e36c:	add	r1, sp, #8
    e370:	str	r0, [r1]
    e374:	mov	r1, #1
    e378:	mov	r2, #16
    e37c:	ldr	r0, [r0, #96]	; 0x60
    e380:	str	r0, [r5, #96]	; 0x60
    e384:	mov	r0, #1
    e388:	bl	17a3c <gen_load_a>
    e38c:	mov	r6, r0
    e390:	ldr	r0, [pc, #4028]	; f354 <gen_wlanhostop+0x2238>
    e394:	mov	r4, r8
    e398:	ldr	r0, [pc, r0]
    e39c:	ldr	r7, [r4, r0, lsl #3]!
    e3a0:	cmp	r7, #207	; 0xcf
    e3a4:	bhi	e3f8 <gen_wlanhostop+0x12dc>
    e3a8:	ldr	r2, [pc, #4008]	; f358 <gen_wlanhostop+0x223c>
    e3ac:	add	r1, r0, #1
    e3b0:	cmp	r0, #15
    e3b4:	add	r2, pc, r2
    e3b8:	str	r1, [r2]
    e3bc:	bge	f344 <gen_wlanhostop+0x2228>
    e3c0:	mov	r0, #1024	; 0x400
    e3c4:	lsl	r7, r0, r1
    e3c8:	mov	r0, r7
    e3cc:	bl	ed4 <malloc@plt>
    e3d0:	cmp	r0, #0
    e3d4:	str	r0, [r4, #12]
    e3d8:	beq	f344 <gen_wlanhostop+0x2228>
    e3dc:	mov	r1, #0
    e3e0:	mov	r2, r7
    e3e4:	add	r4, r4, #8
    e3e8:	bl	f40 <memset@plt>
    e3ec:	cmp	r7, #207	; 0xcf
    e3f0:	str	r7, [r4]
    e3f4:	bls	f344 <gen_wlanhostop+0x2228>
    e3f8:	sub	r0, r7, #208	; 0xd0
    e3fc:	mov	r2, #2
    e400:	str	r0, [r4]
    e404:	ldr	r1, [r4, #4]
    e408:	adds	r0, r1, r0
    e40c:	mov	r1, #69	; 0x45
    e410:	str	r2, [r0, #20]
    e414:	str	r6, [r0, #4]
    e418:	str	r1, [r0, #8]
    e41c:	str	r0, [r0, #96]	; 0x60
    e420:	beq	e454 <gen_wlanhostop+0x1338>
    e424:	ldr	r1, [r5, #96]	; 0x60
    e428:	mov	r2, r0
    e42c:	ldr	r3, [r2, #44]	; 0x2c
    e430:	add	r7, r2, #84	; 0x54
    e434:	cmp	r3, #0
    e438:	mov	r3, #84	; 0x54
    e43c:	movweq	r3, #60	; 0x3c
    e440:	addeq	r7, r2, #60	; 0x3c
    e444:	ldr	r2, [r2, r3]
    e448:	str	r1, [r7]
    e44c:	cmp	r2, #0
    e450:	bne	e42c <gen_wlanhostop+0x1310>
    e454:	ldr	r1, [r0, #44]	; 0x2c
    e458:	cmp	r5, #0
    e45c:	clz	r1, r1
    e460:	lsr	r1, r1, #5
    e464:	str	r1, [r0, #44]	; 0x2c
    e468:	ldr	r2, [r5, #44]	; 0x2c
    e46c:	clz	r1, r2
    e470:	lsr	r1, r1, #5
    e474:	str	r1, [r5, #44]	; 0x2c
    e478:	str	r5, [sp, #8]
    e47c:	beq	e64c <gen_wlanhostop+0x1530>
    e480:	cmp	r2, #0
    e484:	mov	r2, #60	; 0x3c
    e488:	add	r1, r5, #60	; 0x3c
    e48c:	movweq	r2, #84	; 0x54
    e490:	addeq	r1, r5, #84	; 0x54
    e494:	ldr	r2, [r5, r2]
    e498:	cmp	r2, #0
    e49c:	beq	e650 <gen_wlanhostop+0x1534>
    e4a0:	ldr	r3, [r2, #44]	; 0x2c
    e4a4:	add	r1, r2, #84	; 0x54
    e4a8:	cmp	r3, #0
    e4ac:	mov	r3, #84	; 0x54
    e4b0:	movweq	r3, #60	; 0x3c
    e4b4:	addeq	r1, r2, #60	; 0x3c
    e4b8:	ldr	r2, [r2, r3]
    e4bc:	cmp	r2, #0
    e4c0:	bne	e4a0 <gen_wlanhostop+0x1384>
    e4c4:	b	e650 <gen_wlanhostop+0x1534>
    e4c8:	.word	0x00039f20
    e4cc:	.word	0x00039e98
    e4d0:	.word	0x00039ef8
    e4d4:	add	r1, sp, #8
    e4d8:	str	r0, [r1]
    e4dc:	mov	r1, #0
    e4e0:	mov	r2, #16
    e4e4:	ldr	r0, [r0, #96]	; 0x60
    e4e8:	str	r0, [r5, #96]	; 0x60
    e4ec:	mov	r0, #1
    e4f0:	bl	17a3c <gen_load_a>
    e4f4:	mov	r6, r0
    e4f8:	ldr	r0, [pc, #3708]	; f37c <gen_wlanhostop+0x2260>
    e4fc:	mov	r4, r8
    e500:	ldr	r0, [pc, r0]
    e504:	ldr	r7, [r4, r0, lsl #3]!
    e508:	cmp	r7, #207	; 0xcf
    e50c:	bhi	e560 <gen_wlanhostop+0x1444>
    e510:	ldr	r2, [pc, #3688]	; f380 <gen_wlanhostop+0x2264>
    e514:	add	r1, r0, #1
    e518:	cmp	r0, #15
    e51c:	add	r2, pc, r2
    e520:	str	r1, [r2]
    e524:	bge	f344 <gen_wlanhostop+0x2228>
    e528:	mov	r0, #1024	; 0x400
    e52c:	lsl	r7, r0, r1
    e530:	mov	r0, r7
    e534:	bl	ed4 <malloc@plt>
    e538:	cmp	r0, #0
    e53c:	str	r0, [r4, #12]
    e540:	beq	f344 <gen_wlanhostop+0x2228>
    e544:	mov	r1, #0
    e548:	mov	r2, r7
    e54c:	add	r4, r4, #8
    e550:	bl	f40 <memset@plt>
    e554:	cmp	r7, #207	; 0xcf
    e558:	str	r7, [r4]
    e55c:	bls	f344 <gen_wlanhostop+0x2228>
    e560:	sub	r0, r7, #208	; 0xd0
    e564:	mov	r2, #8
    e568:	str	r0, [r4]
    e56c:	ldr	r1, [r4, #4]
    e570:	adds	r0, r1, r0
    e574:	mov	r1, #69	; 0x45
    e578:	str	r2, [r0, #20]
    e57c:	str	r6, [r0, #4]
    e580:	str	r1, [r0, #8]
    e584:	str	r0, [r0, #96]	; 0x60
    e588:	beq	e5bc <gen_wlanhostop+0x14a0>
    e58c:	ldr	r1, [r5, #96]	; 0x60
    e590:	mov	r2, r0
    e594:	ldr	r3, [r2, #44]	; 0x2c
    e598:	add	r7, r2, #84	; 0x54
    e59c:	cmp	r3, #0
    e5a0:	mov	r3, #84	; 0x54
    e5a4:	movweq	r3, #60	; 0x3c
    e5a8:	addeq	r7, r2, #60	; 0x3c
    e5ac:	ldr	r2, [r2, r3]
    e5b0:	str	r1, [r7]
    e5b4:	cmp	r2, #0
    e5b8:	bne	e594 <gen_wlanhostop+0x1478>
    e5bc:	ldr	r1, [r0, #44]	; 0x2c
    e5c0:	cmp	r5, #0
    e5c4:	clz	r1, r1
    e5c8:	lsr	r1, r1, #5
    e5cc:	str	r1, [r0, #44]	; 0x2c
    e5d0:	ldr	r2, [r5, #44]	; 0x2c
    e5d4:	clz	r1, r2
    e5d8:	lsr	r1, r1, #5
    e5dc:	str	r1, [r5, #44]	; 0x2c
    e5e0:	str	r5, [sp, #8]
    e5e4:	beq	e7e4 <gen_wlanhostop+0x16c8>
    e5e8:	cmp	r2, #0
    e5ec:	mov	r2, #60	; 0x3c
    e5f0:	add	r1, r5, #60	; 0x3c
    e5f4:	movweq	r2, #84	; 0x54
    e5f8:	addeq	r1, r5, #84	; 0x54
    e5fc:	ldr	r2, [r5, r2]
    e600:	cmp	r2, #0
    e604:	beq	e7e8 <gen_wlanhostop+0x16cc>
    e608:	ldr	r3, [r2, #44]	; 0x2c
    e60c:	add	r1, r2, #84	; 0x54
    e610:	cmp	r3, #0
    e614:	mov	r3, #84	; 0x54
    e618:	movweq	r3, #60	; 0x3c
    e61c:	addeq	r1, r2, #60	; 0x3c
    e620:	ldr	r2, [r2, r3]
    e624:	cmp	r2, #0
    e628:	bne	e608 <gen_wlanhostop+0x14ec>
    e62c:	b	e7e8 <gen_wlanhostop+0x16cc>
    e630:	.word	0x00039e78
    e634:	.word	0x00039df0
    e638:	.word	0x00039e50
    e63c:	.word	0x00039df0
    e640:	.word	0x00039d68
    e644:	.word	0x00039dc8
    e648:	.word	0x00039d24
    e64c:	add	r1, sp, #8
    e650:	str	r0, [r1]
    e654:	mov	r2, #16
    e658:	ldr	r1, [r5, #44]	; 0x2c
    e65c:	clz	r1, r1
    e660:	lsr	r1, r1, #5
    e664:	str	r1, [r5, #44]	; 0x2c
    e668:	mov	r1, #1
    e66c:	ldr	r0, [r0, #96]	; 0x60
    e670:	str	r0, [r5, #96]	; 0x60
    e674:	mov	r0, #1
    e678:	bl	17a3c <gen_load_a>
    e67c:	mov	r6, r0
    e680:	ldr	r0, [pc, #3284]	; f35c <gen_wlanhostop+0x2240>
    e684:	mov	r4, r8
    e688:	ldr	r0, [pc, r0]
    e68c:	ldr	r7, [r4, r0, lsl #3]!
    e690:	cmp	r7, #207	; 0xcf
    e694:	bhi	e6e8 <gen_wlanhostop+0x15cc>
    e698:	ldr	r2, [pc, #3264]	; f360 <gen_wlanhostop+0x2244>
    e69c:	add	r1, r0, #1
    e6a0:	cmp	r0, #15
    e6a4:	add	r2, pc, r2
    e6a8:	str	r1, [r2]
    e6ac:	bge	f344 <gen_wlanhostop+0x2228>
    e6b0:	mov	r0, #1024	; 0x400
    e6b4:	lsl	r7, r0, r1
    e6b8:	mov	r0, r7
    e6bc:	bl	ed4 <malloc@plt>
    e6c0:	cmp	r0, #0
    e6c4:	str	r0, [r4, #12]
    e6c8:	beq	f344 <gen_wlanhostop+0x2228>
    e6cc:	mov	r1, #0
    e6d0:	mov	r2, r7
    e6d4:	add	r4, r4, #8
    e6d8:	bl	f40 <memset@plt>
    e6dc:	cmp	r7, #207	; 0xcf
    e6e0:	str	r7, [r4]
    e6e4:	bls	f344 <gen_wlanhostop+0x2228>
    e6e8:	sub	r0, r7, #208	; 0xd0
    e6ec:	mov	r2, #6
    e6f0:	mov	r3, r9
    e6f4:	str	r0, [r4]
    e6f8:	ldr	r1, [r4, #4]
    e6fc:	add	r4, r1, r0
    e700:	mov	r1, #2
    e704:	mov	r0, #69	; 0x45
    e708:	str	r1, [r4, #20]
    e70c:	str	r6, [r4, #4]
    e710:	str	r0, [r4, #8]
    e714:	mov	r1, #10
    e718:	ldr	r0, [r4, #44]	; 0x2c
    e71c:	clz	r0, r0
    e720:	lsr	r0, r0, #5
    e724:	str	r0, [r4, #44]	; 0x2c
    e728:	mov	r0, #1
    e72c:	str	r4, [r4, #96]	; 0x60
    e730:	bl	1c3c0 <gen_bcmp>
    e734:	cmp	r4, #0
    e738:	beq	e76c <gen_wlanhostop+0x1650>
    e73c:	ldr	r1, [r0, #96]	; 0x60
    e740:	mov	r2, r4
    e744:	ldr	r3, [r2, #44]	; 0x2c
    e748:	add	r7, r2, #84	; 0x54
    e74c:	cmp	r3, #0
    e750:	mov	r3, #84	; 0x54
    e754:	movweq	r3, #60	; 0x3c
    e758:	addeq	r7, r2, #60	; 0x3c
    e75c:	ldr	r2, [r2, r3]
    e760:	str	r1, [r7]
    e764:	cmp	r2, #0
    e768:	bne	e744 <gen_wlanhostop+0x1628>
    e76c:	ldr	r1, [r4, #44]	; 0x2c
    e770:	cmp	r0, #0
    e774:	clz	r1, r1
    e778:	lsr	r1, r1, #5
    e77c:	str	r1, [r4, #44]	; 0x2c
    e780:	ldr	r2, [r0, #44]	; 0x2c
    e784:	clz	r1, r2
    e788:	lsr	r1, r1, #5
    e78c:	str	r1, [r0, #44]	; 0x2c
    e790:	str	r0, [sp, #8]
    e794:	beq	e978 <gen_wlanhostop+0x185c>
    e798:	cmp	r2, #0
    e79c:	mov	r2, #60	; 0x3c
    e7a0:	add	r1, r0, #60	; 0x3c
    e7a4:	movweq	r2, #84	; 0x54
    e7a8:	addeq	r1, r0, #84	; 0x54
    e7ac:	ldr	r2, [r0, r2]
    e7b0:	cmp	r2, #0
    e7b4:	beq	e97c <gen_wlanhostop+0x1860>
    e7b8:	ldr	r3, [r2, #44]	; 0x2c
    e7bc:	add	r1, r2, #84	; 0x54
    e7c0:	cmp	r3, #0
    e7c4:	mov	r3, #84	; 0x54
    e7c8:	movweq	r3, #60	; 0x3c
    e7cc:	addeq	r1, r2, #60	; 0x3c
    e7d0:	ldr	r2, [r2, r3]
    e7d4:	cmp	r2, #0
    e7d8:	bne	e7b8 <gen_wlanhostop+0x169c>
    e7dc:	b	e97c <gen_wlanhostop+0x1860>
    e7e0:	.word	0x00039b90
    e7e4:	add	r1, sp, #8
    e7e8:	str	r0, [r1]
    e7ec:	mov	r2, #16
    e7f0:	ldr	r1, [r5, #44]	; 0x2c
    e7f4:	clz	r1, r1
    e7f8:	lsr	r1, r1, #5
    e7fc:	str	r1, [r5, #44]	; 0x2c
    e800:	mov	r1, #0
    e804:	ldr	r0, [r0, #96]	; 0x60
    e808:	str	r0, [r5, #96]	; 0x60
    e80c:	mov	r0, #1
    e810:	bl	17a3c <gen_load_a>
    e814:	mov	r6, r0
    e818:	ldr	r0, [pc, #2916]	; f384 <gen_wlanhostop+0x2268>
    e81c:	mov	r4, r8
    e820:	ldr	r0, [pc, r0]
    e824:	ldr	r7, [r4, r0, lsl #3]!
    e828:	cmp	r7, #207	; 0xcf
    e82c:	bhi	e880 <gen_wlanhostop+0x1764>
    e830:	ldr	r2, [pc, #2896]	; f388 <gen_wlanhostop+0x226c>
    e834:	add	r1, r0, #1
    e838:	cmp	r0, #15
    e83c:	add	r2, pc, r2
    e840:	str	r1, [r2]
    e844:	bge	f344 <gen_wlanhostop+0x2228>
    e848:	mov	r0, #1024	; 0x400
    e84c:	lsl	r7, r0, r1
    e850:	mov	r0, r7
    e854:	bl	ed4 <malloc@plt>
    e858:	cmp	r0, #0
    e85c:	str	r0, [r4, #12]
    e860:	beq	f344 <gen_wlanhostop+0x2228>
    e864:	mov	r1, #0
    e868:	mov	r2, r7
    e86c:	add	r4, r4, #8
    e870:	bl	f40 <memset@plt>
    e874:	cmp	r7, #207	; 0xcf
    e878:	str	r7, [r4]
    e87c:	bls	f344 <gen_wlanhostop+0x2228>
    e880:	sub	r0, r7, #208	; 0xd0
    e884:	mov	r2, #6
    e888:	mov	r3, r9
    e88c:	str	r0, [r4]
    e890:	ldr	r1, [r4, #4]
    e894:	add	r4, r1, r0
    e898:	mov	r1, #8
    e89c:	mov	r0, #69	; 0x45
    e8a0:	str	r1, [r4, #20]
    e8a4:	str	r6, [r4, #4]
    e8a8:	str	r0, [r4, #8]
    e8ac:	mov	r1, #4
    e8b0:	ldr	r0, [r4, #44]	; 0x2c
    e8b4:	clz	r0, r0
    e8b8:	lsr	r0, r0, #5
    e8bc:	str	r0, [r4, #44]	; 0x2c
    e8c0:	mov	r0, #1
    e8c4:	str	r4, [r4, #96]	; 0x60
    e8c8:	bl	1c3c0 <gen_bcmp>
    e8cc:	cmp	r4, #0
    e8d0:	beq	e904 <gen_wlanhostop+0x17e8>
    e8d4:	ldr	r1, [r0, #96]	; 0x60
    e8d8:	mov	r2, r4
    e8dc:	ldr	r3, [r2, #44]	; 0x2c
    e8e0:	add	r7, r2, #84	; 0x54
    e8e4:	cmp	r3, #0
    e8e8:	mov	r3, #84	; 0x54
    e8ec:	movweq	r3, #60	; 0x3c
    e8f0:	addeq	r7, r2, #60	; 0x3c
    e8f4:	ldr	r2, [r2, r3]
    e8f8:	str	r1, [r7]
    e8fc:	cmp	r2, #0
    e900:	bne	e8dc <gen_wlanhostop+0x17c0>
    e904:	ldr	r1, [r4, #44]	; 0x2c
    e908:	cmp	r0, #0
    e90c:	clz	r1, r1
    e910:	lsr	r1, r1, #5
    e914:	str	r1, [r4, #44]	; 0x2c
    e918:	ldr	r2, [r0, #44]	; 0x2c
    e91c:	clz	r1, r2
    e920:	lsr	r1, r1, #5
    e924:	str	r1, [r0, #44]	; 0x2c
    e928:	str	r0, [sp, #8]
    e92c:	beq	ea30 <gen_wlanhostop+0x1914>
    e930:	cmp	r2, #0
    e934:	mov	r2, #60	; 0x3c
    e938:	add	r1, r0, #60	; 0x3c
    e93c:	movweq	r2, #84	; 0x54
    e940:	addeq	r1, r0, #84	; 0x54
    e944:	ldr	r2, [r0, r2]
    e948:	cmp	r2, #0
    e94c:	beq	ea34 <gen_wlanhostop+0x1918>
    e950:	ldr	r3, [r2, #44]	; 0x2c
    e954:	add	r1, r2, #84	; 0x54
    e958:	cmp	r3, #0
    e95c:	mov	r3, #84	; 0x54
    e960:	movweq	r3, #60	; 0x3c
    e964:	addeq	r1, r2, #60	; 0x3c
    e968:	ldr	r2, [r2, r3]
    e96c:	cmp	r2, #0
    e970:	bne	e950 <gen_wlanhostop+0x1834>
    e974:	b	ea34 <gen_wlanhostop+0x1918>
    e978:	add	r1, sp, #8
    e97c:	str	r4, [r1]
    e980:	ldr	r1, [r0, #44]	; 0x2c
    e984:	clz	r2, r1
    e988:	cmp	r1, #0
    e98c:	lsr	r2, r2, #5
    e990:	movwne	r1, #1
    e994:	cmp	r0, #0
    e998:	str	r2, [r0, #44]	; 0x2c
    e99c:	ldr	r2, [r4, #96]	; 0x60
    e9a0:	str	r1, [r0, #44]	; 0x2c
    e9a4:	str	r2, [r0, #96]	; 0x60
    e9a8:	beq	e9ec <gen_wlanhostop+0x18d0>
    e9ac:	ldr	r2, [r5, #96]	; 0x60
    e9b0:	mov	r3, r0
    e9b4:	b	e9c4 <gen_wlanhostop+0x18a8>
    e9b8:	.word	0x00039af8
    e9bc:	.word	0x00039adc
    e9c0:	ldr	r1, [r3, #44]	; 0x2c
    e9c4:	cmp	r1, #0
    e9c8:	mov	r1, #84	; 0x54
    e9cc:	add	r7, r3, #84	; 0x54
    e9d0:	movweq	r1, #60	; 0x3c
    e9d4:	addeq	r7, r3, #60	; 0x3c
    e9d8:	ldr	r3, [r3, r1]
    e9dc:	str	r2, [r7]
    e9e0:	cmp	r3, #0
    e9e4:	bne	e9c0 <gen_wlanhostop+0x18a4>
    e9e8:	ldr	r1, [r0, #44]	; 0x2c
    e9ec:	clz	r1, r1
    e9f0:	cmp	r5, #0
    e9f4:	lsr	r1, r1, #5
    e9f8:	str	r1, [r0, #44]	; 0x2c
    e9fc:	str	r5, [sp, #8]
    ea00:	beq	eae8 <gen_wlanhostop+0x19cc>
    ea04:	mov	r2, r5
    ea08:	ldr	r3, [r2, #44]	; 0x2c
    ea0c:	add	r1, r2, #84	; 0x54
    ea10:	cmp	r3, #0
    ea14:	mov	r3, #84	; 0x54
    ea18:	movweq	r3, #60	; 0x3c
    ea1c:	addeq	r1, r2, #60	; 0x3c
    ea20:	ldr	r2, [r2, r3]
    ea24:	cmp	r2, #0
    ea28:	bne	ea08 <gen_wlanhostop+0x18ec>
    ea2c:	b	eaec <gen_wlanhostop+0x19d0>
    ea30:	add	r1, sp, #8
    ea34:	str	r4, [r1]
    ea38:	ldr	r1, [r0, #44]	; 0x2c
    ea3c:	clz	r2, r1
    ea40:	cmp	r1, #0
    ea44:	lsr	r2, r2, #5
    ea48:	movwne	r1, #1
    ea4c:	cmp	r0, #0
    ea50:	str	r2, [r0, #44]	; 0x2c
    ea54:	ldr	r2, [r4, #96]	; 0x60
    ea58:	str	r1, [r0, #44]	; 0x2c
    ea5c:	str	r2, [r0, #96]	; 0x60
    ea60:	beq	eaa0 <gen_wlanhostop+0x1984>
    ea64:	ldr	r2, [r5, #96]	; 0x60
    ea68:	mov	r3, r0
    ea6c:	b	ea78 <gen_wlanhostop+0x195c>
    ea70:	.word	0x00039a44
    ea74:	ldr	r1, [r3, #44]	; 0x2c
    ea78:	cmp	r1, #0
    ea7c:	mov	r1, #84	; 0x54
    ea80:	add	r7, r3, #84	; 0x54
    ea84:	movweq	r1, #60	; 0x3c
    ea88:	addeq	r7, r3, #60	; 0x3c
    ea8c:	ldr	r3, [r3, r1]
    ea90:	str	r2, [r7]
    ea94:	cmp	r3, #0
    ea98:	bne	ea74 <gen_wlanhostop+0x1958>
    ea9c:	ldr	r1, [r0, #44]	; 0x2c
    eaa0:	clz	r1, r1
    eaa4:	cmp	r5, #0
    eaa8:	lsr	r1, r1, #5
    eaac:	str	r1, [r0, #44]	; 0x2c
    eab0:	str	r5, [sp, #8]
    eab4:	beq	ec50 <gen_wlanhostop+0x1b34>
    eab8:	mov	r2, r5
    eabc:	ldr	r3, [r2, #44]	; 0x2c
    eac0:	add	r1, r2, #84	; 0x54
    eac4:	cmp	r3, #0
    eac8:	mov	r3, #84	; 0x54
    eacc:	movweq	r3, #60	; 0x3c
    ead0:	addeq	r1, r2, #60	; 0x3c
    ead4:	ldr	r2, [r2, r3]
    ead8:	cmp	r2, #0
    eadc:	bne	eabc <gen_wlanhostop+0x19a0>
    eae0:	b	ec54 <gen_wlanhostop+0x1b38>
    eae4:	.word	0x000398c0
    eae8:	add	r1, sp, #8
    eaec:	str	r0, [r1]
    eaf0:	mov	r1, #0
    eaf4:	mov	r2, #16
    eaf8:	ldr	r0, [r0, #96]	; 0x60
    eafc:	str	r0, [r5, #96]	; 0x60
    eb00:	mov	r0, #1
    eb04:	bl	17a3c <gen_load_a>
    eb08:	mov	r6, r0
    eb0c:	ldr	r0, [pc, #2128]	; f364 <gen_wlanhostop+0x2248>
    eb10:	mov	r4, r8
    eb14:	ldr	r0, [pc, r0]
    eb18:	ldr	r7, [r4, r0, lsl #3]!
    eb1c:	cmp	r7, #207	; 0xcf
    eb20:	bhi	eb74 <gen_wlanhostop+0x1a58>
    eb24:	ldr	r2, [pc, #2108]	; f368 <gen_wlanhostop+0x224c>
    eb28:	add	r1, r0, #1
    eb2c:	cmp	r0, #15
    eb30:	add	r2, pc, r2
    eb34:	str	r1, [r2]
    eb38:	bge	f344 <gen_wlanhostop+0x2228>
    eb3c:	mov	r0, #1024	; 0x400
    eb40:	lsl	r7, r0, r1
    eb44:	mov	r0, r7
    eb48:	bl	ed4 <malloc@plt>
    eb4c:	cmp	r0, #0
    eb50:	str	r0, [r4, #12]
    eb54:	beq	f344 <gen_wlanhostop+0x2228>
    eb58:	mov	r1, #0
    eb5c:	mov	r2, r7
    eb60:	add	r4, r4, #8
    eb64:	bl	f40 <memset@plt>
    eb68:	cmp	r7, #207	; 0xcf
    eb6c:	str	r7, [r4]
    eb70:	bls	f344 <gen_wlanhostop+0x2228>
    eb74:	sub	r0, r7, #208	; 0xd0
    eb78:	mov	r2, #8
    eb7c:	str	r0, [r4]
    eb80:	ldr	r1, [r4, #4]
    eb84:	adds	r0, r1, r0
    eb88:	mov	r1, #69	; 0x45
    eb8c:	str	r2, [r0, #20]
    eb90:	str	r6, [r0, #4]
    eb94:	str	r1, [r0, #8]
    eb98:	str	r0, [r0, #96]	; 0x60
    eb9c:	beq	ebd0 <gen_wlanhostop+0x1ab4>
    eba0:	ldr	r1, [r5, #96]	; 0x60
    eba4:	mov	r2, r0
    eba8:	ldr	r3, [r2, #44]	; 0x2c
    ebac:	add	r7, r2, #84	; 0x54
    ebb0:	cmp	r3, #0
    ebb4:	mov	r3, #84	; 0x54
    ebb8:	movweq	r3, #60	; 0x3c
    ebbc:	addeq	r7, r2, #60	; 0x3c
    ebc0:	ldr	r2, [r2, r3]
    ebc4:	str	r1, [r7]
    ebc8:	cmp	r2, #0
    ebcc:	bne	eba8 <gen_wlanhostop+0x1a8c>
    ebd0:	ldr	r1, [r0, #44]	; 0x2c
    ebd4:	cmp	r5, #0
    ebd8:	clz	r1, r1
    ebdc:	lsr	r1, r1, #5
    ebe0:	str	r1, [r0, #44]	; 0x2c
    ebe4:	ldr	r2, [r5, #44]	; 0x2c
    ebe8:	clz	r1, r2
    ebec:	lsr	r1, r1, #5
    ebf0:	str	r1, [r5, #44]	; 0x2c
    ebf4:	str	r5, [sp, #8]
    ebf8:	beq	edc0 <gen_wlanhostop+0x1ca4>
    ebfc:	cmp	r2, #0
    ec00:	mov	r2, #60	; 0x3c
    ec04:	add	r1, r5, #60	; 0x3c
    ec08:	movweq	r2, #84	; 0x54
    ec0c:	addeq	r1, r5, #84	; 0x54
    ec10:	ldr	r2, [r5, r2]
    ec14:	cmp	r2, #0
    ec18:	beq	edc4 <gen_wlanhostop+0x1ca8>
    ec1c:	ldr	r3, [r2, #44]	; 0x2c
    ec20:	add	r1, r2, #84	; 0x54
    ec24:	cmp	r3, #0
    ec28:	mov	r3, #84	; 0x54
    ec2c:	movweq	r3, #60	; 0x3c
    ec30:	addeq	r1, r2, #60	; 0x3c
    ec34:	ldr	r2, [r2, r3]
    ec38:	cmp	r2, #0
    ec3c:	bne	ec1c <gen_wlanhostop+0x1b00>
    ec40:	b	edc4 <gen_wlanhostop+0x1ca8>
    ec44:	.word	0x00039828
    ec48:	.word	0x0003980c
    ec4c:	.word	0x00039774
    ec50:	add	r1, sp, #8
    ec54:	str	r0, [r1]
    ec58:	mov	r1, #0
    ec5c:	mov	r2, #16
    ec60:	ldr	r0, [r0, #96]	; 0x60
    ec64:	str	r0, [r5, #96]	; 0x60
    ec68:	mov	r0, #1
    ec6c:	bl	17a3c <gen_load_a>
    ec70:	mov	r4, r0
    ec74:	ldr	r0, [pc, #1808]	; f38c <gen_wlanhostop+0x2270>
    ec78:	ldr	r0, [pc, r0]
    ec7c:	ldr	r6, [r8, r0, lsl #3]!
    ec80:	cmp	r6, #207	; 0xcf
    ec84:	bhi	ecd8 <gen_wlanhostop+0x1bbc>
    ec88:	ldr	r2, [pc, #1792]	; f390 <gen_wlanhostop+0x2274>
    ec8c:	add	r1, r0, #1
    ec90:	cmp	r0, #15
    ec94:	add	r2, pc, r2
    ec98:	str	r1, [r2]
    ec9c:	bge	f344 <gen_wlanhostop+0x2228>
    eca0:	mov	r0, #1024	; 0x400
    eca4:	lsl	r6, r0, r1
    eca8:	mov	r0, r6
    ecac:	bl	ed4 <malloc@plt>
    ecb0:	cmp	r0, #0
    ecb4:	str	r0, [r8, #12]
    ecb8:	beq	f344 <gen_wlanhostop+0x2228>
    ecbc:	mov	r1, #0
    ecc0:	mov	r2, r6
    ecc4:	add	r8, r8, #8
    ecc8:	bl	f40 <memset@plt>
    eccc:	cmp	r6, #207	; 0xcf
    ecd0:	str	r6, [r8]
    ecd4:	bls	f344 <gen_wlanhostop+0x2228>
    ecd8:	sub	r0, r6, #208	; 0xd0
    ecdc:	mov	r2, #4
    ece0:	str	r0, [r8]
    ece4:	ldr	r1, [r8, #4]
    ece8:	adds	r0, r1, r0
    ecec:	mov	r1, #69	; 0x45
    ecf0:	str	r2, [r0, #20]
    ecf4:	str	r4, [r0, #4]
    ecf8:	str	r1, [r0, #8]
    ecfc:	ldr	r1, [r0, #44]	; 0x2c
    ed00:	clz	r1, r1
    ed04:	lsr	r1, r1, #5
    ed08:	str	r1, [r0, #44]	; 0x2c
    ed0c:	str	r0, [r0, #96]	; 0x60
    ed10:	beq	ed48 <gen_wlanhostop+0x1c2c>
    ed14:	ldr	r1, [r5, #96]	; 0x60
    ed18:	mov	r2, r0
    ed1c:	ldr	r3, [r2, #44]	; 0x2c
    ed20:	add	r7, r2, #84	; 0x54
    ed24:	cmp	r3, #0
    ed28:	mov	r3, #84	; 0x54
    ed2c:	movweq	r3, #60	; 0x3c
    ed30:	addeq	r7, r2, #60	; 0x3c
    ed34:	ldr	r2, [r2, r3]
    ed38:	str	r1, [r7]
    ed3c:	cmp	r2, #0
    ed40:	bne	ed1c <gen_wlanhostop+0x1c00>
    ed44:	ldr	r1, [r0, #44]	; 0x2c
    ed48:	clz	r1, r1
    ed4c:	cmp	r5, #0
    ed50:	lsr	r1, r1, #5
    ed54:	str	r1, [r0, #44]	; 0x2c
    ed58:	ldr	r2, [r5, #44]	; 0x2c
    ed5c:	clz	r1, r2
    ed60:	lsr	r1, r1, #5
    ed64:	str	r1, [r5, #44]	; 0x2c
    ed68:	str	r5, [sp, #8]
    ed6c:	beq	f174 <gen_wlanhostop+0x2058>
    ed70:	cmp	r2, #0
    ed74:	mov	r2, #60	; 0x3c
    ed78:	add	r1, r5, #60	; 0x3c
    ed7c:	movweq	r2, #84	; 0x54
    ed80:	addeq	r1, r5, #84	; 0x54
    ed84:	ldr	r2, [r5, r2]
    ed88:	cmp	r2, #0
    ed8c:	beq	f178 <gen_wlanhostop+0x205c>
    ed90:	ldr	r3, [r2, #44]	; 0x2c
    ed94:	add	r1, r2, #84	; 0x54
    ed98:	cmp	r3, #0
    ed9c:	mov	r3, #84	; 0x54
    eda0:	movweq	r3, #60	; 0x3c
    eda4:	addeq	r1, r2, #60	; 0x3c
    eda8:	ldr	r2, [r2, r3]
    edac:	cmp	r2, #0
    edb0:	bne	ed90 <gen_wlanhostop+0x1c74>
    edb4:	b	f178 <gen_wlanhostop+0x205c>
    edb8:	.word	0x000395f0
    edbc:	.word	0x000395d4
    edc0:	add	r1, sp, #8
    edc4:	str	r0, [r1]
    edc8:	mov	r2, #16
    edcc:	ldr	r1, [r5, #44]	; 0x2c
    edd0:	clz	r1, r1
    edd4:	lsr	r1, r1, #5
    edd8:	str	r1, [r5, #44]	; 0x2c
    eddc:	mov	r1, #0
    ede0:	ldr	r0, [r0, #96]	; 0x60
    ede4:	str	r0, [r5, #96]	; 0x60
    ede8:	mov	r0, #1
    edec:	bl	17a3c <gen_load_a>
    edf0:	mov	r6, r0
    edf4:	ldr	r0, [pc, #1392]	; f36c <gen_wlanhostop+0x2250>
    edf8:	mov	r4, r8
    edfc:	ldr	r0, [pc, r0]
    ee00:	ldr	r7, [r4, r0, lsl #3]!
    ee04:	cmp	r7, #207	; 0xcf
    ee08:	bhi	ee5c <gen_wlanhostop+0x1d40>
    ee0c:	ldr	r2, [pc, #1372]	; f370 <gen_wlanhostop+0x2254>
    ee10:	add	r1, r0, #1
    ee14:	cmp	r0, #15
    ee18:	add	r2, pc, r2
    ee1c:	str	r1, [r2]
    ee20:	bge	f344 <gen_wlanhostop+0x2228>
    ee24:	mov	r0, #1024	; 0x400
    ee28:	lsl	r7, r0, r1
    ee2c:	mov	r0, r7
    ee30:	bl	ed4 <malloc@plt>
    ee34:	cmp	r0, #0
    ee38:	str	r0, [r4, #12]
    ee3c:	beq	f344 <gen_wlanhostop+0x2228>
    ee40:	mov	r1, #0
    ee44:	mov	r2, r7
    ee48:	add	r4, r4, #8
    ee4c:	bl	f40 <memset@plt>
    ee50:	cmp	r7, #207	; 0xcf
    ee54:	str	r7, [r4]
    ee58:	bls	f344 <gen_wlanhostop+0x2228>
    ee5c:	sub	r0, r7, #208	; 0xd0
    ee60:	mov	r2, #6
    ee64:	mov	r3, r9
    ee68:	str	r0, [r4]
    ee6c:	ldr	r1, [r4, #4]
    ee70:	add	r4, r1, r0
    ee74:	mov	r1, #8
    ee78:	mov	r0, #69	; 0x45
    ee7c:	str	r1, [r4, #20]
    ee80:	str	r6, [r4, #4]
    ee84:	str	r0, [r4, #8]
    ee88:	mov	r1, #10
    ee8c:	ldr	r0, [r4, #44]	; 0x2c
    ee90:	clz	r0, r0
    ee94:	lsr	r0, r0, #5
    ee98:	str	r0, [r4, #44]	; 0x2c
    ee9c:	mov	r0, #1
    eea0:	str	r4, [r4, #96]	; 0x60
    eea4:	bl	1c3c0 <gen_bcmp>
    eea8:	cmp	r4, #0
    eeac:	beq	eee0 <gen_wlanhostop+0x1dc4>
    eeb0:	ldr	r1, [r0, #96]	; 0x60
    eeb4:	mov	r2, r4
    eeb8:	ldr	r3, [r2, #44]	; 0x2c
    eebc:	add	r7, r2, #84	; 0x54
    eec0:	cmp	r3, #0
    eec4:	mov	r3, #84	; 0x54
    eec8:	movweq	r3, #60	; 0x3c
    eecc:	addeq	r7, r2, #60	; 0x3c
    eed0:	ldr	r2, [r2, r3]
    eed4:	str	r1, [r7]
    eed8:	cmp	r2, #0
    eedc:	bne	eeb8 <gen_wlanhostop+0x1d9c>
    eee0:	ldr	r1, [r4, #44]	; 0x2c
    eee4:	cmp	r0, #0
    eee8:	clz	r1, r1
    eeec:	lsr	r1, r1, #5
    eef0:	str	r1, [r4, #44]	; 0x2c
    eef4:	ldr	r2, [r0, #44]	; 0x2c
    eef8:	clz	r1, r2
    eefc:	lsr	r1, r1, #5
    ef00:	str	r1, [r0, #44]	; 0x2c
    ef04:	str	r0, [sp, #8]
    ef08:	beq	ef54 <gen_wlanhostop+0x1e38>
    ef0c:	cmp	r2, #0
    ef10:	mov	r2, #60	; 0x3c
    ef14:	add	r1, r0, #60	; 0x3c
    ef18:	movweq	r2, #84	; 0x54
    ef1c:	addeq	r1, r0, #84	; 0x54
    ef20:	ldr	r2, [r0, r2]
    ef24:	cmp	r2, #0
    ef28:	beq	ef58 <gen_wlanhostop+0x1e3c>
    ef2c:	ldr	r3, [r2, #44]	; 0x2c
    ef30:	add	r1, r2, #84	; 0x54
    ef34:	cmp	r3, #0
    ef38:	mov	r3, #84	; 0x54
    ef3c:	movweq	r3, #60	; 0x3c
    ef40:	addeq	r1, r2, #60	; 0x3c
    ef44:	ldr	r2, [r2, r3]
    ef48:	cmp	r2, #0
    ef4c:	bne	ef2c <gen_wlanhostop+0x1e10>
    ef50:	b	ef58 <gen_wlanhostop+0x1e3c>
    ef54:	add	r1, sp, #8
    ef58:	str	r4, [r1]
    ef5c:	ldr	r1, [r0, #44]	; 0x2c
    ef60:	clz	r2, r1
    ef64:	cmp	r1, #0
    ef68:	lsr	r2, r2, #5
    ef6c:	movwne	r1, #1
    ef70:	cmp	r0, #0
    ef74:	str	r2, [r0, #44]	; 0x2c
    ef78:	ldr	r2, [r4, #96]	; 0x60
    ef7c:	str	r1, [r0, #44]	; 0x2c
    ef80:	str	r2, [r0, #96]	; 0x60
    ef84:	beq	efc0 <gen_wlanhostop+0x1ea4>
    ef88:	ldr	r2, [r5, #96]	; 0x60
    ef8c:	mov	r3, r0
    ef90:	b	ef98 <gen_wlanhostop+0x1e7c>
    ef94:	ldr	r1, [r3, #44]	; 0x2c
    ef98:	cmp	r1, #0
    ef9c:	mov	r1, #84	; 0x54
    efa0:	add	r7, r3, #84	; 0x54
    efa4:	movweq	r1, #60	; 0x3c
    efa8:	addeq	r7, r3, #60	; 0x3c
    efac:	ldr	r3, [r3, r1]
    efb0:	str	r2, [r7]
    efb4:	cmp	r3, #0
    efb8:	bne	ef94 <gen_wlanhostop+0x1e78>
    efbc:	ldr	r1, [r0, #44]	; 0x2c
    efc0:	clz	r1, r1
    efc4:	cmp	r5, #0
    efc8:	lsr	r1, r1, #5
    efcc:	str	r1, [r0, #44]	; 0x2c
    efd0:	str	r5, [sp, #8]
    efd4:	beq	f00c <gen_wlanhostop+0x1ef0>
    efd8:	mov	r2, r5
    efdc:	ldr	r3, [r2, #44]	; 0x2c
    efe0:	add	r1, r2, #84	; 0x54
    efe4:	cmp	r3, #0
    efe8:	mov	r3, #84	; 0x54
    efec:	movweq	r3, #60	; 0x3c
    eff0:	addeq	r1, r2, #60	; 0x3c
    eff4:	ldr	r2, [r2, r3]
    eff8:	cmp	r2, #0
    effc:	bne	efdc <gen_wlanhostop+0x1ec0>
    f000:	b	f010 <gen_wlanhostop+0x1ef4>
    f004:	.word	0x0003945c
    f008:	.word	0x00039440
    f00c:	add	r1, sp, #8
    f010:	str	r0, [r1]
    f014:	mov	r1, #0
    f018:	mov	r2, #16
    f01c:	ldr	r0, [r0, #96]	; 0x60
    f020:	str	r0, [r5, #96]	; 0x60
    f024:	mov	r0, #1
    f028:	bl	17a3c <gen_load_a>
    f02c:	mov	r4, r0
    f030:	ldr	r0, [pc, #828]	; f374 <gen_wlanhostop+0x2258>
    f034:	ldr	r0, [pc, r0]
    f038:	ldr	r6, [r8, r0, lsl #3]!
    f03c:	cmp	r6, #207	; 0xcf
    f040:	bhi	f094 <gen_wlanhostop+0x1f78>
    f044:	ldr	r2, [pc, #812]	; f378 <gen_wlanhostop+0x225c>
    f048:	add	r1, r0, #1
    f04c:	cmp	r0, #15
    f050:	add	r2, pc, r2
    f054:	str	r1, [r2]
    f058:	bge	f344 <gen_wlanhostop+0x2228>
    f05c:	mov	r0, #1024	; 0x400
    f060:	lsl	r6, r0, r1
    f064:	mov	r0, r6
    f068:	bl	ed4 <malloc@plt>
    f06c:	cmp	r0, #0
    f070:	str	r0, [r8, #12]
    f074:	beq	f344 <gen_wlanhostop+0x2228>
    f078:	mov	r1, #0
    f07c:	mov	r2, r6
    f080:	add	r8, r8, #8
    f084:	bl	f40 <memset@plt>
    f088:	cmp	r6, #207	; 0xcf
    f08c:	str	r6, [r8]
    f090:	bls	f344 <gen_wlanhostop+0x2228>
    f094:	sub	r0, r6, #208	; 0xd0
    f098:	mov	r2, #4
    f09c:	str	r0, [r8]
    f0a0:	ldr	r1, [r8, #4]
    f0a4:	adds	r0, r1, r0
    f0a8:	mov	r1, #69	; 0x45
    f0ac:	str	r2, [r0, #20]
    f0b0:	str	r4, [r0, #4]
    f0b4:	str	r1, [r0, #8]
    f0b8:	ldr	r1, [r0, #44]	; 0x2c
    f0bc:	clz	r1, r1
    f0c0:	lsr	r1, r1, #5
    f0c4:	str	r1, [r0, #44]	; 0x2c
    f0c8:	str	r0, [r0, #96]	; 0x60
    f0cc:	beq	f104 <gen_wlanhostop+0x1fe8>
    f0d0:	ldr	r1, [r5, #96]	; 0x60
    f0d4:	mov	r2, r0
    f0d8:	ldr	r3, [r2, #44]	; 0x2c
    f0dc:	add	r7, r2, #84	; 0x54
    f0e0:	cmp	r3, #0
    f0e4:	mov	r3, #84	; 0x54
    f0e8:	movweq	r3, #60	; 0x3c
    f0ec:	addeq	r7, r2, #60	; 0x3c
    f0f0:	ldr	r2, [r2, r3]
    f0f4:	str	r1, [r7]
    f0f8:	cmp	r2, #0
    f0fc:	bne	f0d8 <gen_wlanhostop+0x1fbc>
    f100:	ldr	r1, [r0, #44]	; 0x2c
    f104:	clz	r1, r1
    f108:	cmp	r5, #0
    f10c:	lsr	r1, r1, #5
    f110:	str	r1, [r0, #44]	; 0x2c
    f114:	ldr	r2, [r5, #44]	; 0x2c
    f118:	clz	r1, r2
    f11c:	lsr	r1, r1, #5
    f120:	str	r1, [r5, #44]	; 0x2c
    f124:	str	r5, [sp, #8]
    f128:	beq	f174 <gen_wlanhostop+0x2058>
    f12c:	cmp	r2, #0
    f130:	mov	r2, #60	; 0x3c
    f134:	add	r1, r5, #60	; 0x3c
    f138:	movweq	r2, #84	; 0x54
    f13c:	addeq	r1, r5, #84	; 0x54
    f140:	ldr	r2, [r5, r2]
    f144:	cmp	r2, #0
    f148:	beq	f178 <gen_wlanhostop+0x205c>
    f14c:	ldr	r3, [r2, #44]	; 0x2c
    f150:	add	r1, r2, #84	; 0x54
    f154:	cmp	r3, #0
    f158:	mov	r3, #84	; 0x54
    f15c:	movweq	r3, #60	; 0x3c
    f160:	addeq	r1, r2, #60	; 0x3c
    f164:	ldr	r2, [r2, r3]
    f168:	cmp	r2, #0
    f16c:	bne	f14c <gen_wlanhostop+0x2030>
    f170:	b	f178 <gen_wlanhostop+0x205c>
    f174:	add	r1, sp, #8
    f178:	str	r0, [r1]
    f17c:	ldr	r1, [r5, #44]	; 0x2c
    f180:	clz	r1, r1
    f184:	lsr	r1, r1, #5
    f188:	str	r1, [r5, #44]	; 0x2c
    f18c:	ldr	r0, [r0, #96]	; 0x60
    f190:	b	f334 <gen_wlanhostop+0x2218>
    f194:	add	r1, sp, #8
    f198:	str	r5, [r1]
    f19c:	cmp	r7, #0
    f1a0:	ldr	r0, [r4, #44]	; 0x2c
    f1a4:	clz	r0, r0
    f1a8:	lsr	r0, r0, #5
    f1ac:	str	r0, [r4, #44]	; 0x2c
    f1b0:	ldr	r0, [r5, #96]	; 0x60
    f1b4:	str	r0, [r4, #96]	; 0x60
    f1b8:	ldr	r0, [r7, #44]	; 0x2c
    f1bc:	clz	r0, r0
    f1c0:	lsr	r0, r0, #5
    f1c4:	str	r0, [r7, #44]	; 0x2c
    f1c8:	beq	f204 <gen_wlanhostop+0x20e8>
    f1cc:	ldr	r1, [r4, #96]	; 0x60
    f1d0:	mov	r2, r7
    f1d4:	b	f1dc <gen_wlanhostop+0x20c0>
    f1d8:	ldr	r0, [r2, #44]	; 0x2c
    f1dc:	cmp	r0, #0
    f1e0:	mov	r0, #84	; 0x54
    f1e4:	add	r6, r2, #84	; 0x54
    f1e8:	movweq	r0, #60	; 0x3c
    f1ec:	addeq	r6, r2, #60	; 0x3c
    f1f0:	ldr	r2, [r2, r0]
    f1f4:	str	r1, [r6]
    f1f8:	cmp	r2, #0
    f1fc:	bne	f1d8 <gen_wlanhostop+0x20bc>
    f200:	ldr	r0, [r7, #44]	; 0x2c
    f204:	clz	r0, r0
    f208:	cmp	r4, #0
    f20c:	lsr	r0, r0, #5
    f210:	str	r0, [r7, #44]	; 0x2c
    f214:	str	r4, [sp, #8]
    f218:	beq	f248 <gen_wlanhostop+0x212c>
    f21c:	mov	r1, r4
    f220:	ldr	r2, [r1, #44]	; 0x2c
    f224:	add	r0, r1, #84	; 0x54
    f228:	cmp	r2, #0
    f22c:	mov	r2, #84	; 0x54
    f230:	movweq	r2, #60	; 0x3c
    f234:	addeq	r0, r1, #60	; 0x3c
    f238:	ldr	r1, [r1, r2]
    f23c:	cmp	r1, #0
    f240:	bne	f220 <gen_wlanhostop+0x2104>
    f244:	b	f24c <gen_wlanhostop+0x2130>
    f248:	add	r0, sp, #8
    f24c:	str	r7, [r0]
    f250:	mov	r1, #10
    f254:	mov	r2, #6
    f258:	ldr	r0, [r7, #96]	; 0x60
    f25c:	str	r0, [r4, #96]	; 0x60
    f260:	mov	r0, #1
    f264:	bl	1c3c0 <gen_bcmp>
    f268:	mov	r5, r0
    f26c:	cmp	r4, #0
    f270:	beq	f2a4 <gen_wlanhostop+0x2188>
    f274:	ldr	r0, [r5, #96]	; 0x60
    f278:	mov	r1, r4
    f27c:	ldr	r2, [r1, #44]	; 0x2c
    f280:	add	r3, r1, #84	; 0x54
    f284:	cmp	r2, #0
    f288:	mov	r2, #84	; 0x54
    f28c:	movweq	r2, #60	; 0x3c
    f290:	addeq	r3, r1, #60	; 0x3c
    f294:	ldr	r1, [r1, r2]
    f298:	str	r0, [r3]
    f29c:	cmp	r1, #0
    f2a0:	bne	f27c <gen_wlanhostop+0x2160>
    f2a4:	ldr	r0, [r4, #44]	; 0x2c
    f2a8:	cmp	r5, #0
    f2ac:	clz	r0, r0
    f2b0:	lsr	r0, r0, #5
    f2b4:	str	r0, [r4, #44]	; 0x2c
    f2b8:	ldr	r1, [r5, #44]	; 0x2c
    f2bc:	clz	r0, r1
    f2c0:	lsr	r0, r0, #5
    f2c4:	str	r0, [r5, #44]	; 0x2c
    f2c8:	str	r5, [sp, #8]
    f2cc:	beq	f318 <gen_wlanhostop+0x21fc>
    f2d0:	cmp	r1, #0
    f2d4:	mov	r1, #60	; 0x3c
    f2d8:	add	r0, r5, #60	; 0x3c
    f2dc:	movweq	r1, #84	; 0x54
    f2e0:	addeq	r0, r5, #84	; 0x54
    f2e4:	ldr	r1, [r5, r1]
    f2e8:	cmp	r1, #0
    f2ec:	beq	f31c <gen_wlanhostop+0x2200>
    f2f0:	ldr	r2, [r1, #44]	; 0x2c
    f2f4:	add	r0, r1, #84	; 0x54
    f2f8:	cmp	r2, #0
    f2fc:	mov	r2, #84	; 0x54
    f300:	movweq	r2, #60	; 0x3c
    f304:	addeq	r0, r1, #60	; 0x3c
    f308:	ldr	r1, [r1, r2]
    f30c:	cmp	r1, #0
    f310:	bne	f2f0 <gen_wlanhostop+0x21d4>
    f314:	b	f31c <gen_wlanhostop+0x2200>
    f318:	add	r0, sp, #8
    f31c:	str	r4, [r0]
    f320:	ldr	r0, [r5, #44]	; 0x2c
    f324:	clz	r0, r0
    f328:	lsr	r0, r0, #5
    f32c:	str	r0, [r5, #44]	; 0x2c
    f330:	ldr	r0, [r4, #96]	; 0x60
    f334:	str	r0, [r5, #96]	; 0x60
    f338:	mov	r0, r5
    f33c:	sub	sp, fp, #28
    f340:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
    f344:	ldr	r0, [pc, #72]	; f394 <gen_wlanhostop+0x2278>
    f348:	add	r0, pc, r0
    f34c:	bl	2124 <sf_bpf_error>
    f350:	bl	fc4 <abort@plt>
    f354:	.word	0x00039164
    f358:	.word	0x00039148
    f35c:	.word	0x00038e74
    f360:	.word	0x00038e58
    f364:	.word	0x000389e8
    f368:	.word	0x000389cc
    f36c:	.word	0x00038700
    f370:	.word	0x000386e4
    f374:	.word	0x000384c8
    f378:	.word	0x000384ac
    f37c:	.word	0x00038ffc
    f380:	.word	0x00038fe0
    f384:	.word	0x00038cdc
    f388:	.word	0x00038cc0
    f38c:	.word	0x00038884
    f390:	.word	0x00038868
    f394:	.word	0x0001acbc

0000f398 <gen_ipfchostop>:
    f398:	push	{r4, r5, fp, lr}
    f39c:	add	fp, sp, #8
    f3a0:	sub	sp, sp, #8
    f3a4:	cmp	r1, #4
    f3a8:	bhi	f5c4 <gen_ipfchostop+0x22c>
    f3ac:	mov	r5, r0
    f3b0:	add	r0, pc, #4
    f3b4:	ldr	r1, [r0, r1, lsl #2]
    f3b8:	add	pc, r0, r1
    f3bc:	.word	0x00000014
    f3c0:	.word	0x000001ac
    f3c4:	.word	0x000001b8
    f3c8:	.word	0x00000014
    f3cc:	.word	0x000000d4
    f3d0:	mov	r0, #1
    f3d4:	mov	r1, #10
    f3d8:	mov	r2, #6
    f3dc:	mov	r3, r5
    f3e0:	bl	1c3c0 <gen_bcmp>
    f3e4:	mov	r4, r0
    f3e8:	mov	r0, #1
    f3ec:	mov	r1, #2
    f3f0:	mov	r2, #6
    f3f4:	mov	r3, r5
    f3f8:	bl	1c3c0 <gen_bcmp>
    f3fc:	ldr	r1, [r4, #44]	; 0x2c
    f400:	cmp	r4, #0
    f404:	clz	r1, r1
    f408:	lsr	r1, r1, #5
    f40c:	str	r1, [r4, #44]	; 0x2c
    f410:	beq	f44c <gen_ipfchostop+0xb4>
    f414:	ldr	r2, [r0, #96]	; 0x60
    f418:	mov	r3, r4
    f41c:	b	f424 <gen_ipfchostop+0x8c>
    f420:	ldr	r1, [r3, #44]	; 0x2c
    f424:	cmp	r1, #0
    f428:	mov	r1, #84	; 0x54
    f42c:	add	r5, r3, #84	; 0x54
    f430:	movweq	r1, #60	; 0x3c
    f434:	addeq	r5, r3, #60	; 0x3c
    f438:	ldr	r3, [r3, r1]
    f43c:	str	r2, [r5]
    f440:	cmp	r3, #0
    f444:	bne	f420 <gen_ipfchostop+0x88>
    f448:	ldr	r1, [r4, #44]	; 0x2c
    f44c:	clz	r1, r1
    f450:	cmp	r0, #0
    f454:	lsr	r1, r1, #5
    f458:	str	r1, [r4, #44]	; 0x2c
    f45c:	str	r0, [sp]
    f460:	beq	f590 <gen_ipfchostop+0x1f8>
    f464:	mov	r2, r0
    f468:	ldr	r3, [r2, #44]	; 0x2c
    f46c:	add	r1, r2, #84	; 0x54
    f470:	cmp	r3, #0
    f474:	mov	r3, #84	; 0x54
    f478:	movweq	r3, #60	; 0x3c
    f47c:	addeq	r1, r2, #60	; 0x3c
    f480:	ldr	r2, [r2, r3]
    f484:	cmp	r2, #0
    f488:	bne	f468 <gen_ipfchostop+0xd0>
    f48c:	b	f594 <gen_ipfchostop+0x1fc>
    f490:	mov	r0, #1
    f494:	mov	r1, #10
    f498:	mov	r2, #6
    f49c:	mov	r3, r5
    f4a0:	bl	1c3c0 <gen_bcmp>
    f4a4:	mov	r4, r0
    f4a8:	mov	r0, #1
    f4ac:	mov	r1, #2
    f4b0:	mov	r2, #6
    f4b4:	mov	r3, r5
    f4b8:	bl	1c3c0 <gen_bcmp>
    f4bc:	cmp	r4, #0
    f4c0:	beq	f4f4 <gen_ipfchostop+0x15c>
    f4c4:	ldr	r1, [r0, #96]	; 0x60
    f4c8:	mov	r2, r4
    f4cc:	ldr	r3, [r2, #44]	; 0x2c
    f4d0:	add	r5, r2, #84	; 0x54
    f4d4:	cmp	r3, #0
    f4d8:	mov	r3, #84	; 0x54
    f4dc:	movweq	r3, #60	; 0x3c
    f4e0:	addeq	r5, r2, #60	; 0x3c
    f4e4:	ldr	r2, [r2, r3]
    f4e8:	str	r1, [r5]
    f4ec:	cmp	r2, #0
    f4f0:	bne	f4cc <gen_ipfchostop+0x134>
    f4f4:	ldr	r1, [r4, #44]	; 0x2c
    f4f8:	cmp	r0, #0
    f4fc:	clz	r1, r1
    f500:	lsr	r1, r1, #5
    f504:	str	r1, [r4, #44]	; 0x2c
    f508:	ldr	r2, [r0, #44]	; 0x2c
    f50c:	clz	r1, r2
    f510:	lsr	r1, r1, #5
    f514:	str	r1, [r0, #44]	; 0x2c
    f518:	str	r0, [sp, #4]
    f51c:	beq	f59c <gen_ipfchostop+0x204>
    f520:	cmp	r2, #0
    f524:	mov	r2, #60	; 0x3c
    f528:	add	r1, r0, #60	; 0x3c
    f52c:	movweq	r2, #84	; 0x54
    f530:	addeq	r1, r0, #84	; 0x54
    f534:	ldr	r2, [r0, r2]
    f538:	cmp	r2, #0
    f53c:	beq	f5a0 <gen_ipfchostop+0x208>
    f540:	ldr	r3, [r2, #44]	; 0x2c
    f544:	add	r1, r2, #84	; 0x54
    f548:	cmp	r3, #0
    f54c:	mov	r3, #84	; 0x54
    f550:	movweq	r3, #60	; 0x3c
    f554:	addeq	r1, r2, #60	; 0x3c
    f558:	ldr	r2, [r2, r3]
    f55c:	cmp	r2, #0
    f560:	bne	f540 <gen_ipfchostop+0x1a8>
    f564:	b	f5a0 <gen_ipfchostop+0x208>
    f568:	mov	r0, #1
    f56c:	mov	r1, #10
    f570:	b	f57c <gen_ipfchostop+0x1e4>
    f574:	mov	r0, #1
    f578:	mov	r1, #2
    f57c:	mov	r2, #6
    f580:	mov	r3, r5
    f584:	sub	sp, fp, #8
    f588:	pop	{r4, r5, fp, lr}
    f58c:	b	1c3c0 <gen_bcmp>
    f590:	mov	r1, sp
    f594:	str	r4, [r1]
    f598:	b	f5b4 <gen_ipfchostop+0x21c>
    f59c:	add	r1, sp, #4
    f5a0:	str	r4, [r1]
    f5a4:	ldr	r1, [r0, #44]	; 0x2c
    f5a8:	clz	r1, r1
    f5ac:	lsr	r1, r1, #5
    f5b0:	str	r1, [r0, #44]	; 0x2c
    f5b4:	ldr	r1, [r4, #96]	; 0x60
    f5b8:	str	r1, [r0, #96]	; 0x60
    f5bc:	sub	sp, fp, #8
    f5c0:	pop	{r4, r5, fp, pc}
    f5c4:	bl	fc4 <abort@plt>

0000f5c8 <gen_host6>:
    f5c8:	push	{r4, sl, fp, lr}
    f5cc:	add	fp, sp, #8
    f5d0:	sub	sp, sp, #8
    f5d4:	ldr	r4, [pc, #604]	; f838 <gen_host6+0x270>
    f5d8:	mov	ip, r3
    f5dc:	mov	lr, r1
    f5e0:	ldr	r1, [pc, #596]	; f83c <gen_host6+0x274>
    f5e4:	ldr	r3, [fp, #8]
    f5e8:	add	r4, pc, r4
    f5ec:	add	r1, pc, r1
    f5f0:	cmp	r3, #2
    f5f4:	moveq	r1, r4
    f5f8:	cmp	r2, #40	; 0x28
    f5fc:	bhi	f6d8 <gen_host6+0x110>
    f600:	add	r3, pc, #4
    f604:	ldr	r2, [r3, r2, lsl #2]
    f608:	add	pc, r3, r2
    f60c:	.word	0x000000a4
    f610:	.word	0x000000cc
    f614:	.word	0x000000d0
    f618:	.word	0x000000dc
    f61c:	.word	0x000000e8
    f620:	.word	0x000000f4
    f624:	.word	0x00000100
    f628:	.word	0x0000010c
    f62c:	.word	0x00000118
    f630:	.word	0x00000124
    f634:	.word	0x00000130
    f638:	.word	0x0000013c
    f63c:	.word	0x00000148
    f640:	.word	0x00000154
    f644:	.word	0x00000160
    f648:	.word	0x0000016c
    f64c:	.word	0x00000178
    f650:	.word	0x000000a4
    f654:	.word	0x00000184
    f658:	.word	0x00000190
    f65c:	.word	0x0000019c
    f660:	.word	0x000001a8
    f664:	.word	0x000001b4
    f668:	.word	0x000001c0
    f66c:	.word	0x000001cc
    f670:	.word	0x000001d8
    f674:	.word	0x000001e4
    f678:	.word	0x000001f0
    f67c:	.word	0x000001fc
    f680:	.word	0x00000208
    f684:	.word	0x00000214
    f688:	.word	0x000000cc
    f68c:	.word	0x000000cc
    f690:	.word	0x000000cc
    f694:	.word	0x000000cc
    f698:	.word	0x000000cc
    f69c:	.word	0x000000cc
    f6a0:	.word	0x000000cc
    f6a4:	.word	0x000000cc
    f6a8:	.word	0x000000cc
    f6ac:	.word	0x00000220
    f6b0:	mov	r1, #24
    f6b4:	mov	r2, #8
    f6b8:	movw	r3, #34525	; 0x86dd
    f6bc:	str	r2, [sp]
    f6c0:	str	r1, [sp, #4]
    f6c4:	mov	r1, lr
    f6c8:	mov	r2, ip
    f6cc:	bl	1ed98 <gen_hostop6>
    f6d0:	sub	sp, fp, #8
    f6d4:	pop	{r4, sl, fp, pc}
    f6d8:	bl	fc4 <abort@plt>
    f6dc:	ldr	r0, [pc, #348]	; f840 <gen_host6+0x278>
    f6e0:	add	r0, pc, r0
    f6e4:	bl	2124 <sf_bpf_error>
    f6e8:	ldr	r0, [pc, #344]	; f848 <gen_host6+0x280>
    f6ec:	add	r0, pc, r0
    f6f0:	bl	2124 <sf_bpf_error>
    f6f4:	ldr	r0, [pc, #328]	; f844 <gen_host6+0x27c>
    f6f8:	add	r0, pc, r0
    f6fc:	bl	2124 <sf_bpf_error>
    f700:	ldr	r0, [pc, #324]	; f84c <gen_host6+0x284>
    f704:	add	r0, pc, r0
    f708:	bl	2124 <sf_bpf_error>
    f70c:	ldr	r0, [pc, #316]	; f850 <gen_host6+0x288>
    f710:	add	r0, pc, r0
    f714:	bl	2124 <sf_bpf_error>
    f718:	ldr	r0, [pc, #308]	; f854 <gen_host6+0x28c>
    f71c:	add	r0, pc, r0
    f720:	bl	2124 <sf_bpf_error>
    f724:	ldr	r0, [pc, #300]	; f858 <gen_host6+0x290>
    f728:	add	r0, pc, r0
    f72c:	bl	2124 <sf_bpf_error>
    f730:	ldr	r0, [pc, #292]	; f85c <gen_host6+0x294>
    f734:	add	r0, pc, r0
    f738:	bl	2124 <sf_bpf_error>
    f73c:	ldr	r0, [pc, #284]	; f860 <gen_host6+0x298>
    f740:	add	r0, pc, r0
    f744:	bl	2124 <sf_bpf_error>
    f748:	ldr	r0, [pc, #284]	; f86c <gen_host6+0x2a4>
    f74c:	add	r0, pc, r0
    f750:	bl	2124 <sf_bpf_error>
    f754:	ldr	r0, [pc, #280]	; f874 <gen_host6+0x2ac>
    f758:	add	r0, pc, r0
    f75c:	bl	2124 <sf_bpf_error>
    f760:	ldr	r0, [pc, #276]	; f87c <gen_host6+0x2b4>
    f764:	add	r0, pc, r0
    f768:	bl	2124 <sf_bpf_error>
    f76c:	ldr	r0, [pc, #260]	; f878 <gen_host6+0x2b0>
    f770:	add	r0, pc, r0
    f774:	bl	2124 <sf_bpf_error>
    f778:	ldr	r0, [pc, #260]	; f884 <gen_host6+0x2bc>
    f77c:	add	r0, pc, r0
    f780:	bl	2124 <sf_bpf_error>
    f784:	ldr	r0, [pc, #244]	; f880 <gen_host6+0x2b8>
    f788:	add	r0, pc, r0
    f78c:	bl	2124 <sf_bpf_error>
    f790:	ldr	r0, [pc, #240]	; f888 <gen_host6+0x2c0>
    f794:	add	r0, pc, r0
    f798:	bl	2124 <sf_bpf_error>
    f79c:	ldr	r0, [pc, #232]	; f88c <gen_host6+0x2c4>
    f7a0:	add	r0, pc, r0
    f7a4:	bl	2124 <sf_bpf_error>
    f7a8:	ldr	r0, [pc, #224]	; f890 <gen_host6+0x2c8>
    f7ac:	add	r0, pc, r0
    f7b0:	bl	2124 <sf_bpf_error>
    f7b4:	ldr	r0, [pc, #168]	; f864 <gen_host6+0x29c>
    f7b8:	add	r0, pc, r0
    f7bc:	bl	2124 <sf_bpf_error>
    f7c0:	ldr	r0, [pc, #160]	; f868 <gen_host6+0x2a0>
    f7c4:	add	r0, pc, r0
    f7c8:	bl	2124 <sf_bpf_error>
    f7cc:	ldr	r0, [pc, #156]	; f870 <gen_host6+0x2a8>
    f7d0:	add	r0, pc, r0
    f7d4:	bl	2124 <sf_bpf_error>
    f7d8:	ldr	r0, [pc, #180]	; f894 <gen_host6+0x2cc>
    f7dc:	add	r0, pc, r0
    f7e0:	bl	2124 <sf_bpf_error>
    f7e4:	ldr	r0, [pc, #172]	; f898 <gen_host6+0x2d0>
    f7e8:	add	r0, pc, r0
    f7ec:	bl	2124 <sf_bpf_error>
    f7f0:	ldr	r0, [pc, #164]	; f89c <gen_host6+0x2d4>
    f7f4:	add	r0, pc, r0
    f7f8:	bl	2124 <sf_bpf_error>
    f7fc:	ldr	r0, [pc, #156]	; f8a0 <gen_host6+0x2d8>
    f800:	add	r0, pc, r0
    f804:	bl	2124 <sf_bpf_error>
    f808:	ldr	r0, [pc, #148]	; f8a4 <gen_host6+0x2dc>
    f80c:	add	r0, pc, r0
    f810:	bl	2124 <sf_bpf_error>
    f814:	ldr	r0, [pc, #140]	; f8a8 <gen_host6+0x2e0>
    f818:	add	r0, pc, r0
    f81c:	bl	2124 <sf_bpf_error>
    f820:	ldr	r0, [pc, #132]	; f8ac <gen_host6+0x2e4>
    f824:	add	r0, pc, r0
    f828:	bl	2124 <sf_bpf_error>
    f82c:	ldr	r0, [pc, #124]	; f8b0 <gen_host6+0x2e8>
    f830:	add	r0, pc, r0
    f834:	bl	2124 <sf_bpf_error>
    f838:	.word	0x0001a650
    f83c:	.word	0x0001b1c2
    f840:	.word	0x0001b228
    f844:	.word	0x0001b230
    f848:	.word	0x0001b25e
    f84c:	.word	0x0001aee4
    f850:	.word	0x0001aebb
    f854:	.word	0x0001aeea
    f858:	.word	0x0001aefb
    f85c:	.word	0x0001af0d
    f860:	.word	0x0001af1f
    f864:	.word	0x0001aec5
    f868:	.word	0x0001aed6
    f86c:	.word	0x0001af6c
    f870:	.word	0x0001af0d
    f874:	.word	0x0001b213
    f878:	.word	0x0001af91
    f87c:	.word	0x0001afc0
    f880:	.word	0x0001afbf
    f884:	.word	0x0001aff0
    f888:	.word	0x0001b01f
    f88c:	.word	0x0001b032
    f890:	.word	0x0001b042
    f894:	.word	0x0001b02f
    f898:	.word	0x0001b046
    f89c:	.word	0x0001b058
    f8a0:	.word	0x0001b06a
    f8a4:	.word	0x0001b07c
    f8a8:	.word	0x0001b08d
    f8ac:	.word	0x0001b0a4
    f8b0:	.word	0x0001b0b9

0000f8b4 <gen_port>:
    f8b4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    f8b8:	add	fp, sp, #24
    f8bc:	sub	sp, sp, #16
    f8c0:	mov	r9, r0
    f8c4:	mov	r0, #2048	; 0x800
    f8c8:	mov	r8, r2
    f8cc:	mov	r5, r1
    f8d0:	bl	7320 <gen_linktype>
    f8d4:	mov	r4, r0
    f8d8:	cmp	r5, #16
    f8dc:	bgt	f9a8 <gen_port+0xf4>
    f8e0:	cmn	r5, #1
    f8e4:	bne	f9dc <gen_port+0x128>
    f8e8:	mov	r0, r9
    f8ec:	mov	r1, #6
    f8f0:	mov	r2, r8
    f8f4:	bl	a2ac <sf_gen_portop>
    f8f8:	mov	r6, r0
    f8fc:	mov	r0, r9
    f900:	mov	r1, #17
    f904:	mov	r2, r8
    f908:	bl	a2ac <sf_gen_portop>
    f90c:	mov	r5, r0
    f910:	ldr	r0, [r6, #44]	; 0x2c
    f914:	cmp	r6, #0
    f918:	mov	r7, r5
    f91c:	clz	r0, r0
    f920:	lsr	r1, r0, #5
    f924:	str	r1, [r6, #44]	; 0x2c
    f928:	ldr	r0, [r7, #96]!	; 0x60
    f92c:	beq	f964 <gen_port+0xb0>
    f930:	mov	r2, r6
    f934:	b	f93c <gen_port+0x88>
    f938:	ldr	r1, [r2, #44]	; 0x2c
    f93c:	cmp	r1, #0
    f940:	mov	r1, #84	; 0x54
    f944:	add	r3, r2, #84	; 0x54
    f948:	movweq	r1, #60	; 0x3c
    f94c:	addeq	r3, r2, #60	; 0x3c
    f950:	ldr	r2, [r2, r1]
    f954:	str	r0, [r3]
    f958:	cmp	r2, #0
    f95c:	bne	f938 <gen_port+0x84>
    f960:	ldr	r1, [r6, #44]	; 0x2c
    f964:	clz	r0, r1
    f968:	cmp	r5, #0
    f96c:	lsr	r0, r0, #5
    f970:	str	r0, [r6, #44]	; 0x2c
    f974:	str	r5, [sp, #4]
    f978:	beq	f9e8 <gen_port+0x134>
    f97c:	mov	r1, r5
    f980:	ldr	r2, [r1, #44]	; 0x2c
    f984:	add	r0, r1, #84	; 0x54
    f988:	cmp	r2, #0
    f98c:	mov	r2, #84	; 0x54
    f990:	movweq	r2, #60	; 0x3c
    f994:	addeq	r0, r1, #60	; 0x3c
    f998:	ldr	r1, [r1, r2]
    f99c:	cmp	r1, #0
    f9a0:	bne	f980 <gen_port+0xcc>
    f9a4:	b	f9ec <gen_port+0x138>
    f9a8:	cmp	r5, #132	; 0x84
    f9ac:	cmpne	r5, #17
    f9b0:	bne	f9e4 <gen_port+0x130>
    f9b4:	mov	r0, r9
    f9b8:	mov	r1, r5
    f9bc:	mov	r2, r8
    f9c0:	bl	a2ac <sf_gen_portop>
    f9c4:	mov	r7, r0
    f9c8:	mov	r5, r0
    f9cc:	ldr	r0, [r7, #96]!	; 0x60
    f9d0:	cmp	r4, #0
    f9d4:	bne	fab4 <gen_port+0x200>
    f9d8:	b	fae0 <gen_port+0x22c>
    f9dc:	cmp	r5, #6
    f9e0:	beq	f9b4 <gen_port+0x100>
    f9e4:	bl	fc4 <abort@plt>
    f9e8:	add	r0, sp, #4
    f9ec:	str	r6, [r0]
    f9f0:	mov	r1, #132	; 0x84
    f9f4:	mov	r2, r8
    f9f8:	ldr	r0, [r6, #96]	; 0x60
    f9fc:	str	r0, [r7]
    fa00:	mov	r0, r9
    fa04:	bl	a2ac <sf_gen_portop>
    fa08:	ldr	r1, [r0, #44]	; 0x2c
    fa0c:	cmp	r0, #0
    fa10:	clz	r1, r1
    fa14:	lsr	r1, r1, #5
    fa18:	str	r1, [r0, #44]	; 0x2c
    fa1c:	beq	fa58 <gen_port+0x1a4>
    fa20:	ldr	r2, [r7]
    fa24:	mov	r3, r0
    fa28:	b	fa30 <gen_port+0x17c>
    fa2c:	ldr	r1, [r3, #44]	; 0x2c
    fa30:	cmp	r1, #0
    fa34:	mov	r1, #84	; 0x54
    fa38:	add	r6, r3, #84	; 0x54
    fa3c:	movweq	r1, #60	; 0x3c
    fa40:	addeq	r6, r3, #60	; 0x3c
    fa44:	ldr	r3, [r3, r1]
    fa48:	str	r2, [r6]
    fa4c:	cmp	r3, #0
    fa50:	bne	fa2c <gen_port+0x178>
    fa54:	ldr	r1, [r0, #44]	; 0x2c
    fa58:	clz	r1, r1
    fa5c:	cmp	r5, #0
    fa60:	lsr	r1, r1, #5
    fa64:	str	r1, [r0, #44]	; 0x2c
    fa68:	str	r5, [sp, #12]
    fa6c:	beq	fa9c <gen_port+0x1e8>
    fa70:	mov	r2, r5
    fa74:	ldr	r3, [r2, #44]	; 0x2c
    fa78:	add	r1, r2, #84	; 0x54
    fa7c:	cmp	r3, #0
    fa80:	mov	r3, #84	; 0x54
    fa84:	movweq	r3, #60	; 0x3c
    fa88:	addeq	r1, r2, #60	; 0x3c
    fa8c:	ldr	r2, [r2, r3]
    fa90:	cmp	r2, #0
    fa94:	bne	fa74 <gen_port+0x1c0>
    fa98:	b	faa0 <gen_port+0x1ec>
    fa9c:	add	r1, sp, #12
    faa0:	str	r0, [r1]
    faa4:	ldr	r0, [r0, #96]	; 0x60
    faa8:	str	r0, [r7]
    faac:	cmp	r4, #0
    fab0:	beq	fae0 <gen_port+0x22c>
    fab4:	mov	r1, r4
    fab8:	ldr	r2, [r1, #44]	; 0x2c
    fabc:	add	r3, r1, #84	; 0x54
    fac0:	cmp	r2, #0
    fac4:	mov	r2, #84	; 0x54
    fac8:	movweq	r2, #60	; 0x3c
    facc:	addeq	r3, r1, #60	; 0x3c
    fad0:	ldr	r1, [r1, r2]
    fad4:	str	r0, [r3]
    fad8:	cmp	r1, #0
    fadc:	bne	fab8 <gen_port+0x204>
    fae0:	ldr	r0, [r4, #44]	; 0x2c
    fae4:	cmp	r5, #0
    fae8:	clz	r0, r0
    faec:	lsr	r0, r0, #5
    faf0:	str	r0, [r4, #44]	; 0x2c
    faf4:	ldr	r1, [r5, #44]	; 0x2c
    faf8:	clz	r0, r1
    fafc:	lsr	r0, r0, #5
    fb00:	str	r0, [r5, #44]	; 0x2c
    fb04:	str	r5, [sp, #8]
    fb08:	beq	fb54 <gen_port+0x2a0>
    fb0c:	cmp	r1, #0
    fb10:	mov	r1, #60	; 0x3c
    fb14:	add	r0, r5, #60	; 0x3c
    fb18:	movweq	r1, #84	; 0x54
    fb1c:	addeq	r0, r5, #84	; 0x54
    fb20:	ldr	r1, [r5, r1]
    fb24:	cmp	r1, #0
    fb28:	beq	fb58 <gen_port+0x2a4>
    fb2c:	ldr	r2, [r1, #44]	; 0x2c
    fb30:	add	r0, r1, #84	; 0x54
    fb34:	cmp	r2, #0
    fb38:	mov	r2, #84	; 0x54
    fb3c:	movweq	r2, #60	; 0x3c
    fb40:	addeq	r0, r1, #60	; 0x3c
    fb44:	ldr	r1, [r1, r2]
    fb48:	cmp	r1, #0
    fb4c:	bne	fb2c <gen_port+0x278>
    fb50:	b	fb58 <gen_port+0x2a4>
    fb54:	add	r0, sp, #8
    fb58:	str	r4, [r0]
    fb5c:	ldr	r0, [r5, #44]	; 0x2c
    fb60:	clz	r0, r0
    fb64:	lsr	r0, r0, #5
    fb68:	str	r0, [r5, #44]	; 0x2c
    fb6c:	ldr	r0, [r4, #96]	; 0x60
    fb70:	str	r0, [r7]
    fb74:	mov	r0, r5
    fb78:	sub	sp, fp, #24
    fb7c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0000fb80 <gen_port6>:
    fb80:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
    fb84:	add	fp, sp, #24
    fb88:	sub	sp, sp, #16
    fb8c:	mov	r9, r0
    fb90:	movw	r0, #34525	; 0x86dd
    fb94:	mov	r8, r2
    fb98:	mov	r5, r1
    fb9c:	bl	7320 <gen_linktype>
    fba0:	mov	r4, r0
    fba4:	cmp	r5, #16
    fba8:	bgt	fc74 <gen_port6+0xf4>
    fbac:	cmn	r5, #1
    fbb0:	bne	fca8 <gen_port6+0x128>
    fbb4:	mov	r0, r9
    fbb8:	mov	r1, #6
    fbbc:	mov	r2, r8
    fbc0:	bl	aabc <sf_gen_portop6>
    fbc4:	mov	r6, r0
    fbc8:	mov	r0, r9
    fbcc:	mov	r1, #17
    fbd0:	mov	r2, r8
    fbd4:	bl	aabc <sf_gen_portop6>
    fbd8:	mov	r5, r0
    fbdc:	ldr	r0, [r6, #44]	; 0x2c
    fbe0:	cmp	r6, #0
    fbe4:	mov	r7, r5
    fbe8:	clz	r0, r0
    fbec:	lsr	r1, r0, #5
    fbf0:	str	r1, [r6, #44]	; 0x2c
    fbf4:	ldr	r0, [r7, #96]!	; 0x60
    fbf8:	beq	fc30 <gen_port6+0xb0>
    fbfc:	mov	r2, r6
    fc00:	b	fc08 <gen_port6+0x88>
    fc04:	ldr	r1, [r2, #44]	; 0x2c
    fc08:	cmp	r1, #0
    fc0c:	mov	r1, #84	; 0x54
    fc10:	add	r3, r2, #84	; 0x54
    fc14:	movweq	r1, #60	; 0x3c
    fc18:	addeq	r3, r2, #60	; 0x3c
    fc1c:	ldr	r2, [r2, r1]
    fc20:	str	r0, [r3]
    fc24:	cmp	r2, #0
    fc28:	bne	fc04 <gen_port6+0x84>
    fc2c:	ldr	r1, [r6, #44]	; 0x2c
    fc30:	clz	r0, r1
    fc34:	cmp	r5, #0
    fc38:	lsr	r0, r0, #5
    fc3c:	str	r0, [r6, #44]	; 0x2c
    fc40:	str	r5, [sp, #4]
    fc44:	beq	fcb4 <gen_port6+0x134>
    fc48:	mov	r1, r5
    fc4c:	ldr	r2, [r1, #44]	; 0x2c
    fc50:	add	r0, r1, #84	; 0x54
    fc54:	cmp	r2, #0
    fc58:	mov	r2, #84	; 0x54
    fc5c:	movweq	r2, #60	; 0x3c
    fc60:	addeq	r0, r1, #60	; 0x3c
    fc64:	ldr	r1, [r1, r2]
    fc68:	cmp	r1, #0
    fc6c:	bne	fc4c <gen_port6+0xcc>
    fc70:	b	fcb8 <gen_port6+0x138>
    fc74:	cmp	r5, #132	; 0x84
    fc78:	cmpne	r5, #17
    fc7c:	bne	fcb0 <gen_port6+0x130>
    fc80:	mov	r0, r9
    fc84:	mov	r1, r5
    fc88:	mov	r2, r8
    fc8c:	bl	aabc <sf_gen_portop6>
    fc90:	mov	r7, r0
    fc94:	mov	r5, r0
    fc98:	ldr	r0, [r7, #96]!	; 0x60
    fc9c:	cmp	r4, #0
    fca0:	bne	fd80 <gen_port6+0x200>
    fca4:	b	fdac <gen_port6+0x22c>
    fca8:	cmp	r5, #6
    fcac:	beq	fc80 <gen_port6+0x100>
    fcb0:	bl	fc4 <abort@plt>
    fcb4:	add	r0, sp, #4
    fcb8:	str	r6, [r0]
    fcbc:	mov	r1, #132	; 0x84
    fcc0:	mov	r2, r8
    fcc4:	ldr	r0, [r6, #96]	; 0x60
    fcc8:	str	r0, [r7]
    fccc:	mov	r0, r9
    fcd0:	bl	aabc <sf_gen_portop6>
    fcd4:	ldr	r1, [r0, #44]	; 0x2c
    fcd8:	cmp	r0, #0
    fcdc:	clz	r1, r1
    fce0:	lsr	r1, r1, #5
    fce4:	str	r1, [r0, #44]	; 0x2c
    fce8:	beq	fd24 <gen_port6+0x1a4>
    fcec:	ldr	r2, [r7]
    fcf0:	mov	r3, r0
    fcf4:	b	fcfc <gen_port6+0x17c>
    fcf8:	ldr	r1, [r3, #44]	; 0x2c
    fcfc:	cmp	r1, #0
    fd00:	mov	r1, #84	; 0x54
    fd04:	add	r6, r3, #84	; 0x54
    fd08:	movweq	r1, #60	; 0x3c
    fd0c:	addeq	r6, r3, #60	; 0x3c
    fd10:	ldr	r3, [r3, r1]
    fd14:	str	r2, [r6]
    fd18:	cmp	r3, #0
    fd1c:	bne	fcf8 <gen_port6+0x178>
    fd20:	ldr	r1, [r0, #44]	; 0x2c
    fd24:	clz	r1, r1
    fd28:	cmp	r5, #0
    fd2c:	lsr	r1, r1, #5
    fd30:	str	r1, [r0, #44]	; 0x2c
    fd34:	str	r5, [sp, #12]
    fd38:	beq	fd68 <gen_port6+0x1e8>
    fd3c:	mov	r2, r5
    fd40:	ldr	r3, [r2, #44]	; 0x2c
    fd44:	add	r1, r2, #84	; 0x54
    fd48:	cmp	r3, #0
    fd4c:	mov	r3, #84	; 0x54
    fd50:	movweq	r3, #60	; 0x3c
    fd54:	addeq	r1, r2, #60	; 0x3c
    fd58:	ldr	r2, [r2, r3]
    fd5c:	cmp	r2, #0
    fd60:	bne	fd40 <gen_port6+0x1c0>
    fd64:	b	fd6c <gen_port6+0x1ec>
    fd68:	add	r1, sp, #12
    fd6c:	str	r0, [r1]
    fd70:	ldr	r0, [r0, #96]	; 0x60
    fd74:	str	r0, [r7]
    fd78:	cmp	r4, #0
    fd7c:	beq	fdac <gen_port6+0x22c>
    fd80:	mov	r1, r4
    fd84:	ldr	r2, [r1, #44]	; 0x2c
    fd88:	add	r3, r1, #84	; 0x54
    fd8c:	cmp	r2, #0
    fd90:	mov	r2, #84	; 0x54
    fd94:	movweq	r2, #60	; 0x3c
    fd98:	addeq	r3, r1, #60	; 0x3c
    fd9c:	ldr	r1, [r1, r2]
    fda0:	str	r0, [r3]
    fda4:	cmp	r1, #0
    fda8:	bne	fd84 <gen_port6+0x204>
    fdac:	ldr	r0, [r4, #44]	; 0x2c
    fdb0:	cmp	r5, #0
    fdb4:	clz	r0, r0
    fdb8:	lsr	r0, r0, #5
    fdbc:	str	r0, [r4, #44]	; 0x2c
    fdc0:	ldr	r1, [r5, #44]	; 0x2c
    fdc4:	clz	r0, r1
    fdc8:	lsr	r0, r0, #5
    fdcc:	str	r0, [r5, #44]	; 0x2c
    fdd0:	str	r5, [sp, #8]
    fdd4:	beq	fe20 <gen_port6+0x2a0>
    fdd8:	cmp	r1, #0
    fddc:	mov	r1, #60	; 0x3c
    fde0:	add	r0, r5, #60	; 0x3c
    fde4:	movweq	r1, #84	; 0x54
    fde8:	addeq	r0, r5, #84	; 0x54
    fdec:	ldr	r1, [r5, r1]
    fdf0:	cmp	r1, #0
    fdf4:	beq	fe24 <gen_port6+0x2a4>
    fdf8:	ldr	r2, [r1, #44]	; 0x2c
    fdfc:	add	r0, r1, #84	; 0x54
    fe00:	cmp	r2, #0
    fe04:	mov	r2, #84	; 0x54
    fe08:	movweq	r2, #60	; 0x3c
    fe0c:	addeq	r0, r1, #60	; 0x3c
    fe10:	ldr	r1, [r1, r2]
    fe14:	cmp	r1, #0
    fe18:	bne	fdf8 <gen_port6+0x278>
    fe1c:	b	fe24 <gen_port6+0x2a4>
    fe20:	add	r0, sp, #8
    fe24:	str	r4, [r0]
    fe28:	ldr	r0, [r5, #44]	; 0x2c
    fe2c:	clz	r0, r0
    fe30:	lsr	r0, r0, #5
    fe34:	str	r0, [r5, #44]	; 0x2c
    fe38:	ldr	r0, [r4, #96]	; 0x60
    fe3c:	str	r0, [r7]
    fe40:	mov	r0, r5
    fe44:	sub	sp, fp, #24
    fe48:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

0000fe4c <gen_portrange>:
    fe4c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
    fe50:	add	fp, sp, #28
    fe54:	sub	sp, sp, #12
    fe58:	mov	sl, r0
    fe5c:	mov	r0, #2048	; 0x800
    fe60:	mov	r8, r3
    fe64:	mov	r5, r2
    fe68:	mov	r9, r1
    fe6c:	bl	7320 <gen_linktype>
    fe70:	mov	r4, r0
    fe74:	cmp	r5, #16
    fe78:	bgt	ff4c <gen_portrange+0x100>
    fe7c:	cmn	r5, #1
    fe80:	bne	ff84 <gen_portrange+0x138>
    fe84:	mov	r0, sl
    fe88:	mov	r1, r9
    fe8c:	mov	r2, #6
    fe90:	mov	r3, r8
    fe94:	bl	add8 <sf_gen_portrangeop>
    fe98:	mov	r7, r0
    fe9c:	mov	r0, sl
    fea0:	mov	r1, r9
    fea4:	mov	r2, #17
    fea8:	mov	r3, r8
    feac:	bl	add8 <sf_gen_portrangeop>
    feb0:	mov	r5, r0
    feb4:	ldr	r0, [r7, #44]	; 0x2c
    feb8:	cmp	r7, #0
    febc:	mov	r6, r5
    fec0:	clz	r0, r0
    fec4:	lsr	r1, r0, #5
    fec8:	str	r1, [r7, #44]	; 0x2c
    fecc:	ldr	r0, [r6, #96]!	; 0x60
    fed0:	beq	ff08 <gen_portrange+0xbc>
    fed4:	mov	r2, r7
    fed8:	b	fee0 <gen_portrange+0x94>
    fedc:	ldr	r1, [r2, #44]	; 0x2c
    fee0:	cmp	r1, #0
    fee4:	mov	r1, #84	; 0x54
    fee8:	add	r3, r2, #84	; 0x54
    feec:	movweq	r1, #60	; 0x3c
    fef0:	addeq	r3, r2, #60	; 0x3c
    fef4:	ldr	r2, [r2, r1]
    fef8:	str	r0, [r3]
    fefc:	cmp	r2, #0
    ff00:	bne	fedc <gen_portrange+0x90>
    ff04:	ldr	r1, [r7, #44]	; 0x2c
    ff08:	clz	r0, r1
    ff0c:	cmp	r5, #0
    ff10:	lsr	r0, r0, #5
    ff14:	str	r0, [r7, #44]	; 0x2c
    ff18:	str	r5, [sp]
    ff1c:	beq	ff90 <gen_portrange+0x144>
    ff20:	mov	r1, r5
    ff24:	ldr	r2, [r1, #44]	; 0x2c
    ff28:	add	r0, r1, #84	; 0x54
    ff2c:	cmp	r2, #0
    ff30:	mov	r2, #84	; 0x54
    ff34:	movweq	r2, #60	; 0x3c
    ff38:	addeq	r0, r1, #60	; 0x3c
    ff3c:	ldr	r1, [r1, r2]
    ff40:	cmp	r1, #0
    ff44:	bne	ff24 <gen_portrange+0xd8>
    ff48:	b	ff94 <gen_portrange+0x148>
    ff4c:	cmp	r5, #132	; 0x84
    ff50:	cmpne	r5, #17
    ff54:	bne	ff8c <gen_portrange+0x140>
    ff58:	mov	r0, sl
    ff5c:	mov	r1, r9
    ff60:	mov	r2, r5
    ff64:	mov	r3, r8
    ff68:	bl	add8 <sf_gen_portrangeop>
    ff6c:	mov	r6, r0
    ff70:	mov	r5, r0
    ff74:	ldr	r0, [r6, #96]!	; 0x60
    ff78:	cmp	r4, #0
    ff7c:	bne	10060 <gen_portrange+0x214>
    ff80:	b	1008c <gen_portrange+0x240>
    ff84:	cmp	r5, #6
    ff88:	beq	ff58 <gen_portrange+0x10c>
    ff8c:	bl	fc4 <abort@plt>
    ff90:	mov	r0, sp
    ff94:	str	r7, [r0]
    ff98:	mov	r1, r9
    ff9c:	mov	r2, #132	; 0x84
    ffa0:	mov	r3, r8
    ffa4:	ldr	r0, [r7, #96]	; 0x60
    ffa8:	str	r0, [r6]
    ffac:	mov	r0, sl
    ffb0:	bl	add8 <sf_gen_portrangeop>
    ffb4:	ldr	r1, [r0, #44]	; 0x2c
    ffb8:	cmp	r0, #0
    ffbc:	clz	r1, r1
    ffc0:	lsr	r1, r1, #5
    ffc4:	str	r1, [r0, #44]	; 0x2c
    ffc8:	beq	10004 <gen_portrange+0x1b8>
    ffcc:	ldr	r2, [r6]
    ffd0:	mov	r3, r0
    ffd4:	b	ffdc <gen_portrange+0x190>
    ffd8:	ldr	r1, [r3, #44]	; 0x2c
    ffdc:	cmp	r1, #0
    ffe0:	mov	r1, #84	; 0x54
    ffe4:	add	r7, r3, #84	; 0x54
    ffe8:	movweq	r1, #60	; 0x3c
    ffec:	addeq	r7, r3, #60	; 0x3c
    fff0:	ldr	r3, [r3, r1]
    fff4:	str	r2, [r7]
    fff8:	cmp	r3, #0
    fffc:	bne	ffd8 <gen_portrange+0x18c>
   10000:	ldr	r1, [r0, #44]	; 0x2c
   10004:	clz	r1, r1
   10008:	cmp	r5, #0
   1000c:	lsr	r1, r1, #5
   10010:	str	r1, [r0, #44]	; 0x2c
   10014:	str	r5, [sp, #8]
   10018:	beq	10048 <gen_portrange+0x1fc>
   1001c:	mov	r2, r5
   10020:	ldr	r3, [r2, #44]	; 0x2c
   10024:	add	r1, r2, #84	; 0x54
   10028:	cmp	r3, #0
   1002c:	mov	r3, #84	; 0x54
   10030:	movweq	r3, #60	; 0x3c
   10034:	addeq	r1, r2, #60	; 0x3c
   10038:	ldr	r2, [r2, r3]
   1003c:	cmp	r2, #0
   10040:	bne	10020 <gen_portrange+0x1d4>
   10044:	b	1004c <gen_portrange+0x200>
   10048:	add	r1, sp, #8
   1004c:	str	r0, [r1]
   10050:	ldr	r0, [r0, #96]	; 0x60
   10054:	str	r0, [r6]
   10058:	cmp	r4, #0
   1005c:	beq	1008c <gen_portrange+0x240>
   10060:	mov	r1, r4
   10064:	ldr	r2, [r1, #44]	; 0x2c
   10068:	add	r3, r1, #84	; 0x54
   1006c:	cmp	r2, #0
   10070:	mov	r2, #84	; 0x54
   10074:	movweq	r2, #60	; 0x3c
   10078:	addeq	r3, r1, #60	; 0x3c
   1007c:	ldr	r1, [r1, r2]
   10080:	str	r0, [r3]
   10084:	cmp	r1, #0
   10088:	bne	10064 <gen_portrange+0x218>
   1008c:	ldr	r0, [r4, #44]	; 0x2c
   10090:	cmp	r5, #0
   10094:	clz	r0, r0
   10098:	lsr	r0, r0, #5
   1009c:	str	r0, [r4, #44]	; 0x2c
   100a0:	ldr	r1, [r5, #44]	; 0x2c
   100a4:	clz	r0, r1
   100a8:	lsr	r0, r0, #5
   100ac:	str	r0, [r5, #44]	; 0x2c
   100b0:	str	r5, [sp, #4]
   100b4:	beq	10100 <gen_portrange+0x2b4>
   100b8:	cmp	r1, #0
   100bc:	mov	r1, #60	; 0x3c
   100c0:	add	r0, r5, #60	; 0x3c
   100c4:	movweq	r1, #84	; 0x54
   100c8:	addeq	r0, r5, #84	; 0x54
   100cc:	ldr	r1, [r5, r1]
   100d0:	cmp	r1, #0
   100d4:	beq	10104 <gen_portrange+0x2b8>
   100d8:	ldr	r2, [r1, #44]	; 0x2c
   100dc:	add	r0, r1, #84	; 0x54
   100e0:	cmp	r2, #0
   100e4:	mov	r2, #84	; 0x54
   100e8:	movweq	r2, #60	; 0x3c
   100ec:	addeq	r0, r1, #60	; 0x3c
   100f0:	ldr	r1, [r1, r2]
   100f4:	cmp	r1, #0
   100f8:	bne	100d8 <gen_portrange+0x28c>
   100fc:	b	10104 <gen_portrange+0x2b8>
   10100:	add	r0, sp, #4
   10104:	str	r4, [r0]
   10108:	ldr	r0, [r5, #44]	; 0x2c
   1010c:	clz	r0, r0
   10110:	lsr	r0, r0, #5
   10114:	str	r0, [r5, #44]	; 0x2c
   10118:	ldr	r0, [r4, #96]	; 0x60
   1011c:	str	r0, [r6]
   10120:	mov	r0, r5
   10124:	sub	sp, fp, #28
   10128:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001012c <gen_portrange6>:
   1012c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10130:	add	fp, sp, #28
   10134:	sub	sp, sp, #12
   10138:	mov	sl, r0
   1013c:	movw	r0, #34525	; 0x86dd
   10140:	mov	r8, r3
   10144:	mov	r5, r2
   10148:	mov	r9, r1
   1014c:	bl	7320 <gen_linktype>
   10150:	mov	r4, r0
   10154:	cmp	r5, #16
   10158:	bgt	1022c <gen_portrange6+0x100>
   1015c:	cmn	r5, #1
   10160:	bne	10264 <gen_portrange6+0x138>
   10164:	mov	r0, sl
   10168:	mov	r1, r9
   1016c:	mov	r2, #6
   10170:	mov	r3, r8
   10174:	bl	b66c <sf_gen_portrangeop6>
   10178:	mov	r7, r0
   1017c:	mov	r0, sl
   10180:	mov	r1, r9
   10184:	mov	r2, #17
   10188:	mov	r3, r8
   1018c:	bl	b66c <sf_gen_portrangeop6>
   10190:	mov	r5, r0
   10194:	ldr	r0, [r7, #44]	; 0x2c
   10198:	cmp	r7, #0
   1019c:	mov	r6, r5
   101a0:	clz	r0, r0
   101a4:	lsr	r1, r0, #5
   101a8:	str	r1, [r7, #44]	; 0x2c
   101ac:	ldr	r0, [r6, #96]!	; 0x60
   101b0:	beq	101e8 <gen_portrange6+0xbc>
   101b4:	mov	r2, r7
   101b8:	b	101c0 <gen_portrange6+0x94>
   101bc:	ldr	r1, [r2, #44]	; 0x2c
   101c0:	cmp	r1, #0
   101c4:	mov	r1, #84	; 0x54
   101c8:	add	r3, r2, #84	; 0x54
   101cc:	movweq	r1, #60	; 0x3c
   101d0:	addeq	r3, r2, #60	; 0x3c
   101d4:	ldr	r2, [r2, r1]
   101d8:	str	r0, [r3]
   101dc:	cmp	r2, #0
   101e0:	bne	101bc <gen_portrange6+0x90>
   101e4:	ldr	r1, [r7, #44]	; 0x2c
   101e8:	clz	r0, r1
   101ec:	cmp	r5, #0
   101f0:	lsr	r0, r0, #5
   101f4:	str	r0, [r7, #44]	; 0x2c
   101f8:	str	r5, [sp]
   101fc:	beq	10270 <gen_portrange6+0x144>
   10200:	mov	r1, r5
   10204:	ldr	r2, [r1, #44]	; 0x2c
   10208:	add	r0, r1, #84	; 0x54
   1020c:	cmp	r2, #0
   10210:	mov	r2, #84	; 0x54
   10214:	movweq	r2, #60	; 0x3c
   10218:	addeq	r0, r1, #60	; 0x3c
   1021c:	ldr	r1, [r1, r2]
   10220:	cmp	r1, #0
   10224:	bne	10204 <gen_portrange6+0xd8>
   10228:	b	10274 <gen_portrange6+0x148>
   1022c:	cmp	r5, #132	; 0x84
   10230:	cmpne	r5, #17
   10234:	bne	1026c <gen_portrange6+0x140>
   10238:	mov	r0, sl
   1023c:	mov	r1, r9
   10240:	mov	r2, r5
   10244:	mov	r3, r8
   10248:	bl	b66c <sf_gen_portrangeop6>
   1024c:	mov	r6, r0
   10250:	mov	r5, r0
   10254:	ldr	r0, [r6, #96]!	; 0x60
   10258:	cmp	r4, #0
   1025c:	bne	10340 <gen_portrange6+0x214>
   10260:	b	1036c <gen_portrange6+0x240>
   10264:	cmp	r5, #6
   10268:	beq	10238 <gen_portrange6+0x10c>
   1026c:	bl	fc4 <abort@plt>
   10270:	mov	r0, sp
   10274:	str	r7, [r0]
   10278:	mov	r1, r9
   1027c:	mov	r2, #132	; 0x84
   10280:	mov	r3, r8
   10284:	ldr	r0, [r7, #96]	; 0x60
   10288:	str	r0, [r6]
   1028c:	mov	r0, sl
   10290:	bl	b66c <sf_gen_portrangeop6>
   10294:	ldr	r1, [r0, #44]	; 0x2c
   10298:	cmp	r0, #0
   1029c:	clz	r1, r1
   102a0:	lsr	r1, r1, #5
   102a4:	str	r1, [r0, #44]	; 0x2c
   102a8:	beq	102e4 <gen_portrange6+0x1b8>
   102ac:	ldr	r2, [r6]
   102b0:	mov	r3, r0
   102b4:	b	102bc <gen_portrange6+0x190>
   102b8:	ldr	r1, [r3, #44]	; 0x2c
   102bc:	cmp	r1, #0
   102c0:	mov	r1, #84	; 0x54
   102c4:	add	r7, r3, #84	; 0x54
   102c8:	movweq	r1, #60	; 0x3c
   102cc:	addeq	r7, r3, #60	; 0x3c
   102d0:	ldr	r3, [r3, r1]
   102d4:	str	r2, [r7]
   102d8:	cmp	r3, #0
   102dc:	bne	102b8 <gen_portrange6+0x18c>
   102e0:	ldr	r1, [r0, #44]	; 0x2c
   102e4:	clz	r1, r1
   102e8:	cmp	r5, #0
   102ec:	lsr	r1, r1, #5
   102f0:	str	r1, [r0, #44]	; 0x2c
   102f4:	str	r5, [sp, #8]
   102f8:	beq	10328 <gen_portrange6+0x1fc>
   102fc:	mov	r2, r5
   10300:	ldr	r3, [r2, #44]	; 0x2c
   10304:	add	r1, r2, #84	; 0x54
   10308:	cmp	r3, #0
   1030c:	mov	r3, #84	; 0x54
   10310:	movweq	r3, #60	; 0x3c
   10314:	addeq	r1, r2, #60	; 0x3c
   10318:	ldr	r2, [r2, r3]
   1031c:	cmp	r2, #0
   10320:	bne	10300 <gen_portrange6+0x1d4>
   10324:	b	1032c <gen_portrange6+0x200>
   10328:	add	r1, sp, #8
   1032c:	str	r0, [r1]
   10330:	ldr	r0, [r0, #96]	; 0x60
   10334:	str	r0, [r6]
   10338:	cmp	r4, #0
   1033c:	beq	1036c <gen_portrange6+0x240>
   10340:	mov	r1, r4
   10344:	ldr	r2, [r1, #44]	; 0x2c
   10348:	add	r3, r1, #84	; 0x54
   1034c:	cmp	r2, #0
   10350:	mov	r2, #84	; 0x54
   10354:	movweq	r2, #60	; 0x3c
   10358:	addeq	r3, r1, #60	; 0x3c
   1035c:	ldr	r1, [r1, r2]
   10360:	str	r0, [r3]
   10364:	cmp	r1, #0
   10368:	bne	10344 <gen_portrange6+0x218>
   1036c:	ldr	r0, [r4, #44]	; 0x2c
   10370:	cmp	r5, #0
   10374:	clz	r0, r0
   10378:	lsr	r0, r0, #5
   1037c:	str	r0, [r4, #44]	; 0x2c
   10380:	ldr	r1, [r5, #44]	; 0x2c
   10384:	clz	r0, r1
   10388:	lsr	r0, r0, #5
   1038c:	str	r0, [r5, #44]	; 0x2c
   10390:	str	r5, [sp, #4]
   10394:	beq	103e0 <gen_portrange6+0x2b4>
   10398:	cmp	r1, #0
   1039c:	mov	r1, #60	; 0x3c
   103a0:	add	r0, r5, #60	; 0x3c
   103a4:	movweq	r1, #84	; 0x54
   103a8:	addeq	r0, r5, #84	; 0x54
   103ac:	ldr	r1, [r5, r1]
   103b0:	cmp	r1, #0
   103b4:	beq	103e4 <gen_portrange6+0x2b8>
   103b8:	ldr	r2, [r1, #44]	; 0x2c
   103bc:	add	r0, r1, #84	; 0x54
   103c0:	cmp	r2, #0
   103c4:	mov	r2, #84	; 0x54
   103c8:	movweq	r2, #60	; 0x3c
   103cc:	addeq	r0, r1, #60	; 0x3c
   103d0:	ldr	r1, [r1, r2]
   103d4:	cmp	r1, #0
   103d8:	bne	103b8 <gen_portrange6+0x28c>
   103dc:	b	103e4 <gen_portrange6+0x2b8>
   103e0:	add	r0, sp, #4
   103e4:	str	r4, [r0]
   103e8:	ldr	r0, [r5, #44]	; 0x2c
   103ec:	clz	r0, r0
   103f0:	lsr	r0, r0, #5
   103f4:	str	r0, [r5, #44]	; 0x2c
   103f8:	ldr	r0, [r4, #96]	; 0x60
   103fc:	str	r0, [r6]
   10400:	mov	r0, r5
   10404:	sub	sp, fp, #28
   10408:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001040c <lookup_proto>:
   1040c:	push	{r4, sl, fp, lr}
   10410:	add	fp, sp, #8
   10414:	mov	r4, r0
   10418:	mvn	r0, #0
   1041c:	cmp	r1, #24
   10420:	bhi	104a4 <lookup_proto+0x98>
   10424:	add	r2, pc, #4
   10428:	ldr	r1, [r2, r1, lsl #2]
   1042c:	add	pc, r2, r1
   10430:	.word	0x00000064
   10434:	.word	0x00000078
   10438:	.word	0x00000064
   1043c:	.word	0x00000074
   10440:	.word	0x00000074
   10444:	.word	0x00000074
   10448:	.word	0x00000074
   1044c:	.word	0x00000074
   10450:	.word	0x00000074
   10454:	.word	0x00000074
   10458:	.word	0x00000074
   1045c:	.word	0x00000074
   10460:	.word	0x00000074
   10464:	.word	0x00000074
   10468:	.word	0x00000074
   1046c:	.word	0x00000074
   10470:	.word	0x00000074
   10474:	.word	0x00000064
   10478:	.word	0x00000074
   1047c:	.word	0x00000074
   10480:	.word	0x00000074
   10484:	.word	0x00000074
   10488:	.word	0x00000074
   1048c:	.word	0x00000074
   10490:	.word	0x000000a8
   10494:	mov	r0, r4
   10498:	bl	207bc <pcap_nametoproto>
   1049c:	cmn	r0, #1
   104a0:	beq	10544 <lookup_proto+0x138>
   104a4:	pop	{r4, sl, fp, pc}
   104a8:	mov	r0, r4
   104ac:	bl	207d8 <pcap_nametoeproto>
   104b0:	cmn	r0, #1
   104b4:	bne	104a4 <lookup_proto+0x98>
   104b8:	mov	r0, r4
   104bc:	bl	20844 <pcap_nametollc>
   104c0:	cmn	r0, #1
   104c4:	bne	104a4 <lookup_proto+0x98>
   104c8:	ldr	r0, [pc, #136]	; 10558 <lookup_proto+0x14c>
   104cc:	mov	r1, r4
   104d0:	add	r0, pc, r0
   104d4:	bl	2124 <sf_bpf_error>
   104d8:	ldr	r1, [pc, #124]	; 1055c <lookup_proto+0x150>
   104dc:	mov	r0, r4
   104e0:	add	r1, pc, r1
   104e4:	bl	e08 <strcmp@plt>
   104e8:	cmp	r0, #0
   104ec:	moveq	r0, #130	; 0x82
   104f0:	popeq	{r4, sl, fp, pc}
   104f4:	ldr	r1, [pc, #100]	; 10560 <lookup_proto+0x154>
   104f8:	mov	r0, r4
   104fc:	add	r1, pc, r1
   10500:	bl	e08 <strcmp@plt>
   10504:	cmp	r0, #0
   10508:	beq	1053c <lookup_proto+0x130>
   1050c:	ldr	r1, [pc, #80]	; 10564 <lookup_proto+0x158>
   10510:	mov	r0, r4
   10514:	add	r1, pc, r1
   10518:	bl	e08 <strcmp@plt>
   1051c:	mov	r1, r0
   10520:	mov	r0, #129	; 0x81
   10524:	cmp	r1, #0
   10528:	popeq	{r4, sl, fp, pc}
   1052c:	ldr	r0, [pc, #52]	; 10568 <lookup_proto+0x15c>
   10530:	mov	r1, r4
   10534:	add	r0, pc, r0
   10538:	bl	2124 <sf_bpf_error>
   1053c:	mov	r0, #131	; 0x83
   10540:	pop	{r4, sl, fp, pc}
   10544:	ldr	r0, [pc, #8]	; 10554 <lookup_proto+0x148>
   10548:	mov	r1, r4
   1054c:	add	r0, pc, r0
   10550:	bl	2124 <sf_bpf_error>
   10554:	.word	0x0001a443
   10558:	.word	0x0001a4d5
   1055c:	.word	0x0001a4de
   10560:	.word	0x0001a4c7
   10564:	.word	0x0001a4b4
   10568:	.word	0x0001a499

0001056c <gen_protochain>:
   1056c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10570:	add	fp, sp, #28
   10574:	sub	sp, sp, #436	; 0x1b4
   10578:	ldr	r6, [pc, #4044]	; 1154c <gen_protochain+0xfe0>
   1057c:	mov	r8, r1
   10580:	mov	r9, r0
   10584:	mvn	r0, #15
   10588:	ldr	r6, [pc, r6]
   1058c:	ldr	r7, [pc, #4028]	; 11550 <gen_protochain+0xfe4>
   10590:	ldr	r1, [pc, #4028]	; 11554 <gen_protochain+0xfe8>
   10594:	add	r7, pc, r7
   10598:	add	r1, pc, r1
   1059c:	ldr	r2, [r7, r6, lsl #2]
   105a0:	cmp	r2, #0
   105a4:	beq	105d4 <gen_protochain+0x68>
   105a8:	add	r2, r6, #1
   105ac:	adds	r0, r0, #1
   105b0:	asr	r3, r2, #31
   105b4:	add	r3, r2, r3, lsr #28
   105b8:	bic	r3, r3, #15
   105bc:	sub	r6, r2, r3
   105c0:	str	r6, [r1]
   105c4:	bne	1059c <gen_protochain+0x30>
   105c8:	ldr	r0, [pc, #3976]	; 11558 <gen_protochain+0xfec>
   105cc:	add	r0, pc, r0
   105d0:	bl	2124 <sf_bpf_error>
   105d4:	mov	r0, #1
   105d8:	mov	r1, #0
   105dc:	mov	r2, #400	; 0x190
   105e0:	str	r0, [r7, r6, lsl #2]
   105e4:	add	r0, sp, #24
   105e8:	bl	f40 <memset@plt>
   105ec:	cmp	r8, #17
   105f0:	cmpne	r8, #2
   105f4:	bne	10764 <gen_protochain+0x1f8>
   105f8:	ldr	r0, [pc, #3932]	; 1155c <gen_protochain+0xff0>
   105fc:	ldr	r0, [pc, r0]
   10600:	sub	r1, r0, #105	; 0x69
   10604:	cmp	r1, #22
   10608:	bhi	10620 <gen_protochain+0xb4>
   1060c:	movw	r3, #16385	; 0x4001
   10610:	mov	r2, #1
   10614:	movt	r3, #64	; 0x40
   10618:	tst	r3, r2, lsl r1
   1061c:	bne	1062c <gen_protochain+0xc0>
   10620:	cmp	r0, #192	; 0xc0
   10624:	cmpne	r0, #163	; 0xa3
   10628:	bne	10638 <gen_protochain+0xcc>
   1062c:	ldr	r0, [pc, #3884]	; 11560 <gen_protochain+0xff4>
   10630:	add	r0, pc, r0
   10634:	bl	2124 <sf_bpf_error>
   10638:	ldr	r0, [pc, #3876]	; 11564 <gen_protochain+0xff8>
   1063c:	mov	r1, #1
   10640:	add	r0, pc, r0
   10644:	str	r1, [r0]
   10648:	ldr	r0, [pc, #3864]	; 11568 <gen_protochain+0xffc>
   1064c:	ldr	r0, [pc, r0]
   10650:	ldr	sl, [pc, #3860]	; 1156c <gen_protochain+0x1000>
   10654:	add	sl, pc, sl
   10658:	mov	r5, sl
   1065c:	ldr	r4, [r5, r0, lsl #3]!
   10660:	cmp	r4, #19
   10664:	bhi	106b8 <gen_protochain+0x14c>
   10668:	ldr	r2, [pc, #4076]	; 1165c <gen_protochain+0x10f0>
   1066c:	add	r1, r0, #1
   10670:	cmp	r0, #15
   10674:	add	r2, pc, r2
   10678:	str	r1, [r2]
   1067c:	bge	11fd8 <gen_protochain+0x1a6c>
   10680:	mov	r0, #1024	; 0x400
   10684:	lsl	r4, r0, r1
   10688:	mov	r0, r4
   1068c:	bl	ed4 <malloc@plt>
   10690:	cmp	r0, #0
   10694:	str	r0, [r5, #12]
   10698:	beq	11fd8 <gen_protochain+0x1a6c>
   1069c:	mov	r1, #0
   106a0:	mov	r2, r4
   106a4:	add	r5, r5, #8
   106a8:	bl	f40 <memset@plt>
   106ac:	cmp	r4, #19
   106b0:	str	r4, [r5]
   106b4:	bls	11fd8 <gen_protochain+0x1a6c>
   106b8:	sub	r0, r4, #20
   106bc:	mov	r2, #0
   106c0:	cmp	r8, #17
   106c4:	str	r0, [r5]
   106c8:	ldr	r1, [r5, #4]
   106cc:	str	r2, [r1, r0]!
   106d0:	str	r9, [sp, #16]
   106d4:	str	r8, [sp, #20]
   106d8:	str	r1, [sp, #24]
   106dc:	beq	10824 <gen_protochain+0x2b8>
   106e0:	cmp	r8, #2
   106e4:	bne	12108 <gen_protochain+0x1b9c>
   106e8:	mov	r0, #2048	; 0x800
   106ec:	bl	7320 <gen_linktype>
   106f0:	str	r0, [sp, #4]
   106f4:	mov	r4, sl
   106f8:	ldr	r0, [pc, #3936]	; 11660 <gen_protochain+0x10f4>
   106fc:	ldr	r0, [pc, r0]
   10700:	ldr	r5, [r4, r0, lsl #3]!
   10704:	cmp	r5, #19
   10708:	bhi	108ac <gen_protochain+0x340>
   1070c:	ldr	r1, [pc, #3920]	; 11664 <gen_protochain+0x10f8>
   10710:	add	r9, r0, #1
   10714:	cmp	r0, #15
   10718:	add	r1, pc, r1
   1071c:	str	r9, [r1]
   10720:	bge	11fd8 <gen_protochain+0x1a6c>
   10724:	mov	r0, #1024	; 0x400
   10728:	lsl	r5, r0, r9
   1072c:	mov	r0, r5
   10730:	bl	ed4 <malloc@plt>
   10734:	cmp	r0, #0
   10738:	str	r0, [r4, #12]
   1073c:	beq	11fd8 <gen_protochain+0x1a6c>
   10740:	mov	r1, #0
   10744:	mov	r2, r5
   10748:	add	r7, r4, #8
   1074c:	bl	f40 <memset@plt>
   10750:	cmp	r5, #20
   10754:	str	r5, [r7]
   10758:	bcc	11fd8 <gen_protochain+0x1a6c>
   1075c:	add	r4, sl, r9, lsl #3
   10760:	b	108b4 <gen_protochain+0x348>
   10764:	cmp	r8, #0
   10768:	bne	120fc <gen_protochain+0x1b90>
   1076c:	mov	r0, r9
   10770:	mov	r1, #2
   10774:	bl	1056c <gen_protochain>
   10778:	mov	r4, r0
   1077c:	mov	r0, r9
   10780:	mov	r1, #17
   10784:	bl	1056c <gen_protochain>
   10788:	ldr	r1, [r4, #44]	; 0x2c
   1078c:	cmp	r4, #0
   10790:	clz	r1, r1
   10794:	lsr	r3, r1, #5
   10798:	mov	r1, r0
   1079c:	str	r3, [r4, #44]	; 0x2c
   107a0:	ldr	r2, [r1, #96]!	; 0x60
   107a4:	beq	107dc <gen_protochain+0x270>
   107a8:	mov	r7, r4
   107ac:	b	107b4 <gen_protochain+0x248>
   107b0:	ldr	r3, [r7, #44]	; 0x2c
   107b4:	cmp	r3, #0
   107b8:	mov	r3, #84	; 0x54
   107bc:	add	r6, r7, #84	; 0x54
   107c0:	movweq	r3, #60	; 0x3c
   107c4:	addeq	r6, r7, #60	; 0x3c
   107c8:	ldr	r7, [r7, r3]
   107cc:	str	r2, [r6]
   107d0:	cmp	r7, #0
   107d4:	bne	107b0 <gen_protochain+0x244>
   107d8:	ldr	r3, [r4, #44]	; 0x2c
   107dc:	clz	r2, r3
   107e0:	cmp	r0, #0
   107e4:	lsr	r2, r2, #5
   107e8:	str	r2, [r4, #44]	; 0x2c
   107ec:	str	r0, [fp, #-36]	; 0xffffffdc
   107f0:	beq	108a0 <gen_protochain+0x334>
   107f4:	mov	r3, r0
   107f8:	ldr	r7, [r3, #44]	; 0x2c
   107fc:	add	r2, r3, #84	; 0x54
   10800:	cmp	r7, #0
   10804:	mov	r7, #84	; 0x54
   10808:	movweq	r7, #60	; 0x3c
   1080c:	addeq	r2, r3, #60	; 0x3c
   10810:	ldr	r3, [r3, r7]
   10814:	cmp	r3, #0
   10818:	bne	107f8 <gen_protochain+0x28c>
   1081c:	str	r4, [r2]
   10820:	b	120ec <gen_protochain+0x1b80>
   10824:	movw	r0, #34525	; 0x86dd
   10828:	bl	7320 <gen_linktype>
   1082c:	str	r0, [sp, #4]
   10830:	mov	r4, sl
   10834:	ldr	r0, [pc, #3976]	; 117c4 <gen_protochain+0x1258>
   10838:	ldr	r0, [pc, r0]
   1083c:	ldr	r5, [r4, r0, lsl #3]!
   10840:	cmp	r5, #19
   10844:	bhi	10968 <gen_protochain+0x3fc>
   10848:	ldr	r1, [pc, #3960]	; 117c8 <gen_protochain+0x125c>
   1084c:	add	r8, r0, #1
   10850:	cmp	r0, #15
   10854:	add	r1, pc, r1
   10858:	str	r8, [r1]
   1085c:	bge	11fd8 <gen_protochain+0x1a6c>
   10860:	mov	r0, #1024	; 0x400
   10864:	lsl	r5, r0, r8
   10868:	mov	r0, r5
   1086c:	bl	ed4 <malloc@plt>
   10870:	cmp	r0, #0
   10874:	str	r0, [r4, #12]
   10878:	beq	11fd8 <gen_protochain+0x1a6c>
   1087c:	mov	r1, #0
   10880:	mov	r2, r5
   10884:	add	r7, r4, #8
   10888:	bl	f40 <memset@plt>
   1088c:	cmp	r5, #20
   10890:	str	r5, [r7]
   10894:	bcc	11fd8 <gen_protochain+0x1a6c>
   10898:	add	r4, sl, r8, lsl #3
   1089c:	b	10970 <gen_protochain+0x404>
   108a0:	sub	r2, fp, #36	; 0x24
   108a4:	str	r4, [r2]
   108a8:	b	120ec <gen_protochain+0x1b80>
   108ac:	mov	r9, r0
   108b0:	mov	r7, r4
   108b4:	sub	r0, r5, #20
   108b8:	mov	r2, #48	; 0x30
   108bc:	str	r0, [r7]
   108c0:	ldr	r1, [r7, #4]
   108c4:	str	r2, [r1, r0]!
   108c8:	str	r1, [sp, #28]
   108cc:	ldr	r2, [pc, #4004]	; 11878 <gen_protochain+0x130c>
   108d0:	ldr	r2, [pc, r2]
   108d4:	ldr	r0, [pc, #4000]	; 1187c <gen_protochain+0x1310>
   108d8:	ldr	r0, [pc, r0]
   108dc:	str	r2, [sp, #8]
   108e0:	add	r8, r0, r2
   108e4:	str	r0, [sp, #12]
   108e8:	add	r0, r8, #9
   108ec:	str	r0, [r1, #12]
   108f0:	ldr	r5, [sl, r9, lsl #3]
   108f4:	cmp	r5, #19
   108f8:	bhi	10954 <gen_protochain+0x3e8>
   108fc:	ldr	r0, [pc, #3964]	; 11880 <gen_protochain+0x1314>
   10900:	add	sl, r9, #1
   10904:	cmp	r9, #15
   10908:	add	r0, pc, r0
   1090c:	str	sl, [r0]
   10910:	bge	11fd8 <gen_protochain+0x1a6c>
   10914:	mov	r0, #1024	; 0x400
   10918:	lsl	r5, r0, sl
   1091c:	mov	r0, r5
   10920:	bl	ed4 <malloc@plt>
   10924:	ldr	r9, [sp, #16]
   10928:	cmp	r0, #0
   1092c:	str	r0, [r4, #12]
   10930:	beq	11fd8 <gen_protochain+0x1a6c>
   10934:	mov	r1, #0
   10938:	mov	r2, r5
   1093c:	add	r4, r4, #8
   10940:	bl	f40 <memset@plt>
   10944:	cmp	r5, #19
   10948:	str	r5, [r4]
   1094c:	bhi	1095c <gen_protochain+0x3f0>
   10950:	b	11fd8 <gen_protochain+0x1a6c>
   10954:	mov	sl, r9
   10958:	ldr	r9, [sp, #16]
   1095c:	sub	r0, r5, #20
   10960:	mov	r1, #177	; 0xb1
   10964:	b	10a1c <gen_protochain+0x4b0>
   10968:	mov	r8, r0
   1096c:	mov	r7, r4
   10970:	sub	r0, r5, #20
   10974:	mov	r2, #48	; 0x30
   10978:	str	r0, [r7]
   1097c:	ldr	r1, [r7, #4]
   10980:	str	r2, [r1, r0]!
   10984:	str	r1, [sp, #28]
   10988:	ldr	r0, [pc, #3980]	; 1191c <gen_protochain+0x13b0>
   1098c:	ldr	r0, [pc, r0]
   10990:	ldr	r2, [pc, #3976]	; 11920 <gen_protochain+0x13b4>
   10994:	ldr	r2, [pc, r2]
   10998:	str	r0, [sp, #12]
   1099c:	add	r0, r2, r0
   109a0:	str	r2, [sp, #8]
   109a4:	add	r0, r0, #6
   109a8:	str	r0, [r1, #12]
   109ac:	ldr	r5, [sl, r8, lsl #3]
   109b0:	cmp	r5, #19
   109b4:	bhi	10a0c <gen_protochain+0x4a0>
   109b8:	ldr	r0, [pc, #3940]	; 11924 <gen_protochain+0x13b8>
   109bc:	add	sl, r8, #1
   109c0:	cmp	r8, #15
   109c4:	add	r0, pc, r0
   109c8:	str	sl, [r0]
   109cc:	bge	11fd8 <gen_protochain+0x1a6c>
   109d0:	mov	r0, #1024	; 0x400
   109d4:	lsl	r5, r0, sl
   109d8:	mov	r0, r5
   109dc:	bl	ed4 <malloc@plt>
   109e0:	cmp	r0, #0
   109e4:	str	r0, [r4, #12]
   109e8:	beq	11fd8 <gen_protochain+0x1a6c>
   109ec:	mov	r1, #0
   109f0:	mov	r2, r5
   109f4:	add	r4, r4, #8
   109f8:	bl	f40 <memset@plt>
   109fc:	cmp	r5, #19
   10a00:	str	r5, [r4]
   10a04:	bhi	10a10 <gen_protochain+0x4a4>
   10a08:	b	11fd8 <gen_protochain+0x1a6c>
   10a0c:	mov	sl, r8
   10a10:	sub	r0, r5, #20
   10a14:	mov	r8, #40	; 0x28
   10a18:	mov	r1, #1
   10a1c:	str	r0, [r4]
   10a20:	ldr	r2, [r4, #4]
   10a24:	str	r1, [r2, r0]!
   10a28:	str	r2, [sp, #32]
   10a2c:	str	r8, [r2, #12]
   10a30:	ldr	r8, [pc, #3988]	; 119cc <gen_protochain+0x1460>
   10a34:	add	r8, pc, r8
   10a38:	ldr	r5, [r8, sl, lsl #3]!
   10a3c:	cmp	r5, #19
   10a40:	bhi	10aa8 <gen_protochain+0x53c>
   10a44:	ldr	r0, [pc, #3972]	; 119d0 <gen_protochain+0x1464>
   10a48:	add	r7, sl, #1
   10a4c:	cmp	sl, #15
   10a50:	add	r0, pc, r0
   10a54:	str	r7, [r0]
   10a58:	bge	11fd8 <gen_protochain+0x1a6c>
   10a5c:	mov	r0, #1024	; 0x400
   10a60:	lsl	r5, r0, r7
   10a64:	mov	r0, r5
   10a68:	bl	ed4 <malloc@plt>
   10a6c:	str	r0, [r8, #12]
   10a70:	cmp	r0, #0
   10a74:	ldr	sl, [pc, #4088]	; 11a74 <gen_protochain+0x1508>
   10a78:	add	sl, pc, sl
   10a7c:	beq	11fd8 <gen_protochain+0x1a6c>
   10a80:	mov	r1, #0
   10a84:	mov	r2, r5
   10a88:	add	r4, r8, #8
   10a8c:	bl	f40 <memset@plt>
   10a90:	cmp	r5, #20
   10a94:	str	r5, [r4]
   10a98:	bcc	11fd8 <gen_protochain+0x1a6c>
   10a9c:	add	r8, sl, r7, lsl #3
   10aa0:	mov	r2, sl
   10aa4:	b	10ab8 <gen_protochain+0x54c>
   10aa8:	ldr	r2, [pc, #4040]	; 11a78 <gen_protochain+0x150c>
   10aac:	mov	r7, sl
   10ab0:	mov	r4, r8
   10ab4:	add	r2, pc, r2
   10ab8:	sub	r0, r5, #20
   10abc:	mov	sl, #21
   10ac0:	str	r0, [r4]
   10ac4:	ldr	r1, [r4, #4]
   10ac8:	str	sl, [r1, r0]!
   10acc:	str	r1, [sp, #36]	; 0x24
   10ad0:	str	r9, [r1, #12]
   10ad4:	mov	r9, #0
   10ad8:	ldr	r0, [sp, #36]	; 0x24
   10adc:	str	r9, [r0, #4]
   10ae0:	ldr	r0, [sp, #36]	; 0x24
   10ae4:	str	r9, [r0, #8]
   10ae8:	ldr	r5, [r2, r7, lsl #3]
   10aec:	cmp	r5, #19
   10af0:	bhi	10b54 <gen_protochain+0x5e8>
   10af4:	ldr	r0, [pc, #3968]	; 11a7c <gen_protochain+0x1510>
   10af8:	add	r4, r7, #1
   10afc:	cmp	r7, #15
   10b00:	add	r0, pc, r0
   10b04:	str	r4, [r0]
   10b08:	bge	11fd8 <gen_protochain+0x1a6c>
   10b0c:	mov	r0, #1024	; 0x400
   10b10:	lsl	r5, r0, r4
   10b14:	mov	r0, r5
   10b18:	bl	ed4 <malloc@plt>
   10b1c:	cmp	r0, #0
   10b20:	str	r0, [r8, #12]
   10b24:	beq	11fd8 <gen_protochain+0x1a6c>
   10b28:	mov	r1, #0
   10b2c:	mov	r2, r5
   10b30:	add	r7, r8, #8
   10b34:	bl	f40 <memset@plt>
   10b38:	cmp	r5, #20
   10b3c:	str	r5, [r7]
   10b40:	bcc	11fd8 <gen_protochain+0x1a6c>
   10b44:	ldr	r0, [pc, #4048]	; 11b1c <gen_protochain+0x15b0>
   10b48:	add	r0, pc, r0
   10b4c:	add	r8, r0, r4, lsl #3
   10b50:	b	10b5c <gen_protochain+0x5f0>
   10b54:	mov	r4, r7
   10b58:	mov	r7, r8
   10b5c:	sub	r0, r5, #20
   10b60:	str	r0, [r7]
   10b64:	ldr	r1, [r7, #4]
   10b68:	str	sl, [r1, r0]!
   10b6c:	str	r1, [sp, #40]	; 0x28
   10b70:	str	r9, [r1, #4]
   10b74:	mov	r1, #59	; 0x3b
   10b78:	ldr	r0, [sp, #40]	; 0x28
   10b7c:	str	r9, [r0, #8]
   10b80:	ldr	r0, [sp, #40]	; 0x28
   10b84:	str	r1, [r0, #12]
   10b88:	ldr	r0, [sp, #36]	; 0x24
   10b8c:	ldr	r1, [sp, #40]	; 0x28
   10b90:	str	r1, [r0, #8]
   10b94:	ldr	r0, [sp, #20]
   10b98:	ldr	r5, [r8]
   10b9c:	cmp	r0, #17
   10ba0:	bne	10c0c <gen_protochain+0x6a0>
   10ba4:	ldr	r7, [pc, #3956]	; 11b20 <gen_protochain+0x15b4>
   10ba8:	cmp	r5, #19
   10bac:	add	r7, pc, r7
   10bb0:	bhi	10c6c <gen_protochain+0x700>
   10bb4:	ldr	r0, [pc, #3944]	; 11b24 <gen_protochain+0x15b8>
   10bb8:	add	r9, r4, #1
   10bbc:	cmp	r4, #15
   10bc0:	add	r0, pc, r0
   10bc4:	str	r9, [r0]
   10bc8:	bge	11fd8 <gen_protochain+0x1a6c>
   10bcc:	mov	r0, #1024	; 0x400
   10bd0:	lsl	r5, r0, r9
   10bd4:	mov	r0, r5
   10bd8:	bl	ed4 <malloc@plt>
   10bdc:	cmp	r0, #0
   10be0:	str	r0, [r8, #12]
   10be4:	beq	11fd8 <gen_protochain+0x1a6c>
   10be8:	mov	r1, #0
   10bec:	mov	r2, r5
   10bf0:	add	r4, r8, #8
   10bf4:	bl	f40 <memset@plt>
   10bf8:	cmp	r5, #20
   10bfc:	str	r5, [r4]
   10c00:	bcc	11fd8 <gen_protochain+0x1a6c>
   10c04:	add	r8, r7, r9, lsl #3
   10c08:	b	10c74 <gen_protochain+0x708>
   10c0c:	cmp	r5, #19
   10c10:	bhi	10d20 <gen_protochain+0x7b4>
   10c14:	ldr	r0, [pc, #4004]	; 11bc0 <gen_protochain+0x1654>
   10c18:	add	sl, r4, #1
   10c1c:	cmp	r4, #15
   10c20:	add	r7, sp, #24
   10c24:	add	r0, pc, r0
   10c28:	str	sl, [r0]
   10c2c:	bge	11fd8 <gen_protochain+0x1a6c>
   10c30:	mov	r0, #1024	; 0x400
   10c34:	lsl	r5, r0, sl
   10c38:	mov	r0, r5
   10c3c:	bl	ed4 <malloc@plt>
   10c40:	cmp	r0, #0
   10c44:	str	r0, [r8, #12]
   10c48:	beq	11fd8 <gen_protochain+0x1a6c>
   10c4c:	mov	r1, #0
   10c50:	mov	r2, r5
   10c54:	add	r8, r8, #8
   10c58:	bl	f40 <memset@plt>
   10c5c:	cmp	r5, #19
   10c60:	str	r5, [r8]
   10c64:	bhi	10d28 <gen_protochain+0x7bc>
   10c68:	b	11fd8 <gen_protochain+0x1a6c>
   10c6c:	mov	r9, r4
   10c70:	mov	r4, r8
   10c74:	sub	r0, r5, #20
   10c78:	mov	r2, #21
   10c7c:	mov	sl, #0
   10c80:	str	r0, [r4]
   10c84:	ldr	r1, [r4, #4]
   10c88:	str	r2, [r1, r0]!
   10c8c:	str	r1, [sp, #44]	; 0x2c
   10c90:	str	sl, [r1, #4]
   10c94:	ldr	r0, [sp, #44]	; 0x2c
   10c98:	str	sl, [r0, #8]
   10c9c:	ldr	r0, [sp, #44]	; 0x2c
   10ca0:	str	sl, [r0, #12]
   10ca4:	ldr	r0, [sp, #40]	; 0x28
   10ca8:	ldr	r1, [sp, #44]	; 0x2c
   10cac:	str	r1, [r0, #8]
   10cb0:	ldr	r5, [r8]
   10cb4:	cmp	r5, #19
   10cb8:	bhi	10d5c <gen_protochain+0x7f0>
   10cbc:	ldr	r0, [pc, #4000]	; 11c64 <gen_protochain+0x16f8>
   10cc0:	add	r7, r9, #1
   10cc4:	cmp	r9, #15
   10cc8:	add	r0, pc, r0
   10ccc:	str	r7, [r0]
   10cd0:	bge	11fd8 <gen_protochain+0x1a6c>
   10cd4:	mov	r0, #1024	; 0x400
   10cd8:	lsl	r5, r0, r7
   10cdc:	mov	r0, r5
   10ce0:	bl	ed4 <malloc@plt>
   10ce4:	cmp	r0, #0
   10ce8:	str	r0, [r8, #12]
   10cec:	beq	11fd8 <gen_protochain+0x1a6c>
   10cf0:	mov	r1, #0
   10cf4:	mov	r2, r5
   10cf8:	add	r4, r8, #8
   10cfc:	bl	f40 <memset@plt>
   10d00:	cmp	r5, #20
   10d04:	str	r5, [r4]
   10d08:	bcc	11fd8 <gen_protochain+0x1a6c>
   10d0c:	ldr	r0, [pc, #4080]	; 11d04 <gen_protochain+0x1798>
   10d10:	mov	r2, #21
   10d14:	add	r0, pc, r0
   10d18:	add	r8, r0, r7, lsl #3
   10d1c:	b	10d64 <gen_protochain+0x7f8>
   10d20:	mov	sl, r4
   10d24:	add	r7, sp, #24
   10d28:	sub	r0, r5, #20
   10d2c:	mov	r2, #4
   10d30:	mov	r4, #0
   10d34:	mov	ip, #6
   10d38:	str	r0, [r8]
   10d3c:	ldr	r1, [r8, #4]
   10d40:	str	r2, [r1, r0]!
   10d44:	add	r0, r7, #20
   10d48:	str	r1, [sp, #44]	; 0x2c
   10d4c:	str	r4, [r1, #12]
   10d50:	ldr	r1, [sp, #40]	; 0x28
   10d54:	add	r1, r1, #8
   10d58:	b	115dc <gen_protochain+0x1070>
   10d5c:	mov	r7, r9
   10d60:	mov	r4, r8
   10d64:	sub	r0, r5, #20
   10d68:	str	r0, [r4]
   10d6c:	ldr	r1, [r4, #4]
   10d70:	str	r2, [r1, r0]!
   10d74:	str	r1, [sp, #48]	; 0x30
   10d78:	ldr	r0, [sp, #44]	; 0x2c
   10d7c:	str	r1, [r0, #8]
   10d80:	mov	r1, #60	; 0x3c
   10d84:	ldr	r0, [sp, #48]	; 0x30
   10d88:	str	sl, [r0, #4]
   10d8c:	ldr	r0, [sp, #48]	; 0x30
   10d90:	str	sl, [r0, #8]
   10d94:	ldr	r0, [sp, #48]	; 0x30
   10d98:	str	r1, [r0, #12]
   10d9c:	ldr	r5, [r8]
   10da0:	cmp	r5, #19
   10da4:	bhi	10e08 <gen_protochain+0x89c>
   10da8:	ldr	r0, [pc, #4084]	; 11da4 <gen_protochain+0x1838>
   10dac:	add	sl, r7, #1
   10db0:	cmp	r7, #15
   10db4:	add	r0, pc, r0
   10db8:	str	sl, [r0]
   10dbc:	bge	11fd8 <gen_protochain+0x1a6c>
   10dc0:	mov	r0, #1024	; 0x400
   10dc4:	lsl	r5, r0, sl
   10dc8:	mov	r0, r5
   10dcc:	bl	ed4 <malloc@plt>
   10dd0:	cmp	r0, #0
   10dd4:	str	r0, [r8, #12]
   10dd8:	beq	11fd8 <gen_protochain+0x1a6c>
   10ddc:	mov	r1, #0
   10de0:	mov	r2, r5
   10de4:	add	r4, r8, #8
   10de8:	bl	f40 <memset@plt>
   10dec:	cmp	r5, #20
   10df0:	str	r5, [r4]
   10df4:	bcc	11fd8 <gen_protochain+0x1a6c>
   10df8:	ldr	r0, [pc, #4008]	; 11da8 <gen_protochain+0x183c>
   10dfc:	add	r0, pc, r0
   10e00:	add	r8, r0, sl, lsl #3
   10e04:	b	10e10 <gen_protochain+0x8a4>
   10e08:	mov	sl, r7
   10e0c:	mov	r4, r8
   10e10:	sub	r0, r5, #20
   10e14:	mov	r2, #21
   10e18:	mov	r9, #0
   10e1c:	str	r0, [r4]
   10e20:	ldr	r1, [r4, #4]
   10e24:	str	r2, [r1, r0]!
   10e28:	str	r1, [sp, #52]	; 0x34
   10e2c:	ldr	r0, [sp, #48]	; 0x30
   10e30:	str	r1, [r0, #8]
   10e34:	mov	r1, #43	; 0x2b
   10e38:	ldr	r0, [sp, #52]	; 0x34
   10e3c:	str	r9, [r0, #4]
   10e40:	ldr	r0, [sp, #52]	; 0x34
   10e44:	str	r9, [r0, #8]
   10e48:	ldr	r0, [sp, #52]	; 0x34
   10e4c:	str	r1, [r0, #12]
   10e50:	ldr	r5, [r8]
   10e54:	cmp	r5, #19
   10e58:	bhi	10ec0 <gen_protochain+0x954>
   10e5c:	ldr	r0, [pc, #4068]	; 11e48 <gen_protochain+0x18dc>
   10e60:	add	r4, sl, #1
   10e64:	cmp	sl, #15
   10e68:	add	r0, pc, r0
   10e6c:	str	r4, [r0]
   10e70:	bge	11fd8 <gen_protochain+0x1a6c>
   10e74:	mov	r0, #1024	; 0x400
   10e78:	lsl	r5, r0, r4
   10e7c:	mov	r0, r5
   10e80:	bl	ed4 <malloc@plt>
   10e84:	str	r0, [r8, #12]
   10e88:	cmp	r0, #0
   10e8c:	ldr	sl, [pc, #4024]	; 11e4c <gen_protochain+0x18e0>
   10e90:	add	sl, pc, sl
   10e94:	beq	11fd8 <gen_protochain+0x1a6c>
   10e98:	mov	r1, #0
   10e9c:	mov	r2, r5
   10ea0:	add	r7, r8, #8
   10ea4:	bl	f40 <memset@plt>
   10ea8:	cmp	r5, #20
   10eac:	str	r5, [r7]
   10eb0:	bcc	11fd8 <gen_protochain+0x1a6c>
   10eb4:	add	r8, sl, r4, lsl #3
   10eb8:	mov	r2, #21
   10ebc:	b	10ed0 <gen_protochain+0x964>
   10ec0:	mov	r4, sl
   10ec4:	ldr	sl, [pc, #3972]	; 11e50 <gen_protochain+0x18e4>
   10ec8:	mov	r7, r8
   10ecc:	add	sl, pc, sl
   10ed0:	sub	r0, r5, #20
   10ed4:	str	r0, [r7]
   10ed8:	ldr	r1, [r7, #4]
   10edc:	str	r2, [r1, r0]!
   10ee0:	str	r1, [sp, #56]	; 0x38
   10ee4:	ldr	r0, [sp, #52]	; 0x34
   10ee8:	str	r1, [r0, #8]
   10eec:	mov	r1, #44	; 0x2c
   10ef0:	ldr	r0, [sp, #56]	; 0x38
   10ef4:	str	r9, [r0, #4]
   10ef8:	ldr	r0, [sp, #56]	; 0x38
   10efc:	str	r9, [r0, #8]
   10f00:	ldr	r0, [sp, #56]	; 0x38
   10f04:	str	r1, [r0, #12]
   10f08:	ldr	r5, [r8]
   10f0c:	cmp	r5, #19
   10f10:	bhi	10f6c <gen_protochain+0xa00>
   10f14:	ldr	r0, [pc, #4052]	; 11ef0 <gen_protochain+0x1984>
   10f18:	add	r7, r4, #1
   10f1c:	cmp	r4, #15
   10f20:	add	r0, pc, r0
   10f24:	str	r7, [r0]
   10f28:	bge	11fd8 <gen_protochain+0x1a6c>
   10f2c:	mov	r0, #1024	; 0x400
   10f30:	lsl	r5, r0, r7
   10f34:	mov	r0, r5
   10f38:	bl	ed4 <malloc@plt>
   10f3c:	cmp	r0, #0
   10f40:	str	r0, [r8, #12]
   10f44:	beq	11fd8 <gen_protochain+0x1a6c>
   10f48:	mov	r1, #0
   10f4c:	mov	r2, r5
   10f50:	add	r4, r8, #8
   10f54:	bl	f40 <memset@plt>
   10f58:	cmp	r5, #20
   10f5c:	str	r5, [r4]
   10f60:	bcc	11fd8 <gen_protochain+0x1a6c>
   10f64:	add	r8, sl, r7, lsl #3
   10f68:	b	10f74 <gen_protochain+0xa08>
   10f6c:	mov	r7, r4
   10f70:	mov	r4, r8
   10f74:	sub	r0, r5, #20
   10f78:	mov	r2, #135	; 0x87
   10f7c:	str	r0, [r4]
   10f80:	ldr	r1, [r4, #4]
   10f84:	str	r2, [r1, r0]!
   10f88:	ldr	r5, [r8]
   10f8c:	str	r1, [sp, #60]	; 0x3c
   10f90:	cmp	r5, #19
   10f94:	bhi	10ff0 <gen_protochain+0xa84>
   10f98:	ldr	r0, [pc, #3924]	; 11ef4 <gen_protochain+0x1988>
   10f9c:	add	r4, r7, #1
   10fa0:	cmp	r7, #15
   10fa4:	add	r0, pc, r0
   10fa8:	str	r4, [r0]
   10fac:	bge	11fd8 <gen_protochain+0x1a6c>
   10fb0:	mov	r0, #1024	; 0x400
   10fb4:	lsl	r5, r0, r4
   10fb8:	mov	r0, r5
   10fbc:	bl	ed4 <malloc@plt>
   10fc0:	cmp	r0, #0
   10fc4:	str	r0, [r8, #12]
   10fc8:	beq	11fd8 <gen_protochain+0x1a6c>
   10fcc:	mov	r1, #0
   10fd0:	mov	r2, r5
   10fd4:	add	r7, r8, #8
   10fd8:	bl	f40 <memset@plt>
   10fdc:	cmp	r5, #20
   10fe0:	str	r5, [r7]
   10fe4:	bcc	11fd8 <gen_protochain+0x1a6c>
   10fe8:	add	r8, sl, r4, lsl #3
   10fec:	b	10ff8 <gen_protochain+0xa8c>
   10ff0:	mov	r4, r7
   10ff4:	mov	r7, r8
   10ff8:	sub	r0, r5, #20
   10ffc:	mov	r2, #80	; 0x50
   11000:	str	r0, [r7]
   11004:	ldr	r1, [r7, #4]
   11008:	str	r2, [r1, r0]!
   1100c:	ldr	r0, [sp, #12]
   11010:	ldr	r2, [sp, #8]
   11014:	str	r1, [sp, #64]	; 0x40
   11018:	add	r9, r0, r2
   1101c:	str	r9, [r1, #12]
   11020:	ldr	r5, [r8]
   11024:	cmp	r5, #19
   11028:	bhi	11084 <gen_protochain+0xb18>
   1102c:	ldr	r0, [pc, #4016]	; 11fe4 <gen_protochain+0x1a78>
   11030:	add	r7, r4, #1
   11034:	cmp	r4, #15
   11038:	add	r0, pc, r0
   1103c:	str	r7, [r0]
   11040:	bge	11fd8 <gen_protochain+0x1a6c>
   11044:	mov	r0, #1024	; 0x400
   11048:	lsl	r5, r0, r7
   1104c:	mov	r0, r5
   11050:	bl	ed4 <malloc@plt>
   11054:	cmp	r0, #0
   11058:	str	r0, [r8, #12]
   1105c:	beq	11fd8 <gen_protochain+0x1a6c>
   11060:	mov	r1, #0
   11064:	mov	r2, r5
   11068:	add	r4, r8, #8
   1106c:	bl	f40 <memset@plt>
   11070:	cmp	r5, #20
   11074:	str	r5, [r4]
   11078:	bcc	11fd8 <gen_protochain+0x1a6c>
   1107c:	add	r8, sl, r7, lsl #3
   11080:	b	1108c <gen_protochain+0xb20>
   11084:	mov	r7, r4
   11088:	mov	r4, r8
   1108c:	sub	r0, r5, #20
   11090:	mov	r2, #2
   11094:	str	r0, [r4]
   11098:	ldr	r1, [r4, #4]
   1109c:	str	r2, [r1, r0]!
   110a0:	str	r1, [sp, #68]	; 0x44
   110a4:	str	r6, [r1, #12]
   110a8:	ldr	r5, [r8]
   110ac:	cmp	r5, #19
   110b0:	bhi	1110c <gen_protochain+0xba0>
   110b4:	ldr	r0, [pc, #3884]	; 11fe8 <gen_protochain+0x1a7c>
   110b8:	add	r4, r7, #1
   110bc:	cmp	r7, #15
   110c0:	add	r0, pc, r0
   110c4:	str	r4, [r0]
   110c8:	bge	11fd8 <gen_protochain+0x1a6c>
   110cc:	mov	r0, #1024	; 0x400
   110d0:	lsl	r5, r0, r4
   110d4:	mov	r0, r5
   110d8:	bl	ed4 <malloc@plt>
   110dc:	cmp	r0, #0
   110e0:	str	r0, [r8, #12]
   110e4:	beq	11fd8 <gen_protochain+0x1a6c>
   110e8:	mov	r1, #0
   110ec:	mov	r2, r5
   110f0:	add	r7, r8, #8
   110f4:	bl	f40 <memset@plt>
   110f8:	cmp	r5, #20
   110fc:	str	r5, [r7]
   11100:	bcc	11fd8 <gen_protochain+0x1a6c>
   11104:	add	r8, sl, r4, lsl #3
   11108:	b	11114 <gen_protochain+0xba8>
   1110c:	mov	r4, r7
   11110:	mov	r7, r8
   11114:	sub	r0, r5, #20
   11118:	mov	r2, #135	; 0x87
   1111c:	str	r0, [r7]
   11120:	ldr	r1, [r7, #4]
   11124:	str	r2, [r1, r0]!
   11128:	ldr	r5, [r8]
   1112c:	str	r1, [sp, #72]	; 0x48
   11130:	cmp	r5, #19
   11134:	bhi	11190 <gen_protochain+0xc24>
   11138:	ldr	r0, [pc, #4056]	; 12118 <gen_protochain+0x1bac>
   1113c:	add	r7, r4, #1
   11140:	cmp	r4, #15
   11144:	add	r0, pc, r0
   11148:	str	r7, [r0]
   1114c:	bge	11fd8 <gen_protochain+0x1a6c>
   11150:	mov	r0, #1024	; 0x400
   11154:	lsl	r5, r0, r7
   11158:	mov	r0, r5
   1115c:	bl	ed4 <malloc@plt>
   11160:	cmp	r0, #0
   11164:	str	r0, [r8, #12]
   11168:	beq	11fd8 <gen_protochain+0x1a6c>
   1116c:	mov	r1, #0
   11170:	mov	r2, r5
   11174:	add	r4, r8, #8
   11178:	bl	f40 <memset@plt>
   1117c:	cmp	r5, #20
   11180:	str	r5, [r4]
   11184:	bcc	11fd8 <gen_protochain+0x1a6c>
   11188:	add	r8, sl, r7, lsl #3
   1118c:	b	11198 <gen_protochain+0xc2c>
   11190:	mov	r7, r4
   11194:	mov	r4, r8
   11198:	sub	r0, r5, #20
   1119c:	mov	r2, #4
   111a0:	str	r0, [r4]
   111a4:	ldr	r1, [r4, #4]
   111a8:	str	r2, [r1, r0]!
   111ac:	mov	r0, #1
   111b0:	str	r1, [sp, #76]	; 0x4c
   111b4:	str	r0, [r1, #12]
   111b8:	ldr	r5, [r8]
   111bc:	cmp	r5, #19
   111c0:	bhi	1121c <gen_protochain+0xcb0>
   111c4:	ldr	r0, [pc, #3920]	; 1211c <gen_protochain+0x1bb0>
   111c8:	add	r4, r7, #1
   111cc:	cmp	r7, #15
   111d0:	add	r0, pc, r0
   111d4:	str	r4, [r0]
   111d8:	bge	11fd8 <gen_protochain+0x1a6c>
   111dc:	mov	r0, #1024	; 0x400
   111e0:	lsl	r5, r0, r4
   111e4:	mov	r0, r5
   111e8:	bl	ed4 <malloc@plt>
   111ec:	cmp	r0, #0
   111f0:	str	r0, [r8, #12]
   111f4:	beq	11fd8 <gen_protochain+0x1a6c>
   111f8:	mov	r1, #0
   111fc:	mov	r2, r5
   11200:	add	r7, r8, #8
   11204:	bl	f40 <memset@plt>
   11208:	cmp	r5, #20
   1120c:	str	r5, [r7]
   11210:	bcc	11fd8 <gen_protochain+0x1a6c>
   11214:	add	r8, sl, r4, lsl #3
   11218:	b	11224 <gen_protochain+0xcb8>
   1121c:	mov	r4, r7
   11220:	mov	r7, r8
   11224:	sub	r0, r5, #20
   11228:	mov	r2, #7
   1122c:	str	r0, [r7]
   11230:	ldr	r1, [r7, #4]
   11234:	str	r2, [r1, r0]!
   11238:	ldr	r5, [r8]
   1123c:	str	r1, [sp, #80]	; 0x50
   11240:	cmp	r5, #19
   11244:	bhi	112a0 <gen_protochain+0xd34>
   11248:	ldr	r0, [pc, #3792]	; 12120 <gen_protochain+0x1bb4>
   1124c:	add	r7, r4, #1
   11250:	cmp	r4, #15
   11254:	add	r0, pc, r0
   11258:	str	r7, [r0]
   1125c:	bge	11fd8 <gen_protochain+0x1a6c>
   11260:	mov	r0, #1024	; 0x400
   11264:	lsl	r5, r0, r7
   11268:	mov	r0, r5
   1126c:	bl	ed4 <malloc@plt>
   11270:	cmp	r0, #0
   11274:	str	r0, [r8, #12]
   11278:	beq	11fd8 <gen_protochain+0x1a6c>
   1127c:	mov	r1, #0
   11280:	mov	r2, r5
   11284:	add	r4, r8, #8
   11288:	bl	f40 <memset@plt>
   1128c:	cmp	r5, #20
   11290:	str	r5, [r4]
   11294:	bcc	11fd8 <gen_protochain+0x1a6c>
   11298:	add	r8, sl, r7, lsl #3
   1129c:	b	112a8 <gen_protochain+0xd3c>
   112a0:	mov	r7, r4
   112a4:	mov	r4, r8
   112a8:	sub	r0, r5, #20
   112ac:	mov	r2, #80	; 0x50
   112b0:	str	r0, [r4]
   112b4:	ldr	r1, [r4, #4]
   112b8:	str	r2, [r1, r0]!
   112bc:	str	r1, [sp, #84]	; 0x54
   112c0:	str	r9, [r1, #12]
   112c4:	ldr	r5, [r8]
   112c8:	cmp	r5, #19
   112cc:	bhi	11328 <gen_protochain+0xdbc>
   112d0:	ldr	r0, [pc, #3660]	; 12124 <gen_protochain+0x1bb8>
   112d4:	add	r4, r7, #1
   112d8:	cmp	r7, #15
   112dc:	add	r0, pc, r0
   112e0:	str	r4, [r0]
   112e4:	bge	11fd8 <gen_protochain+0x1a6c>
   112e8:	mov	r0, #1024	; 0x400
   112ec:	lsl	r5, r0, r4
   112f0:	mov	r0, r5
   112f4:	bl	ed4 <malloc@plt>
   112f8:	cmp	r0, #0
   112fc:	str	r0, [r8, #12]
   11300:	beq	11fd8 <gen_protochain+0x1a6c>
   11304:	mov	r1, #0
   11308:	mov	r2, r5
   1130c:	add	r7, r8, #8
   11310:	bl	f40 <memset@plt>
   11314:	cmp	r5, #20
   11318:	str	r5, [r7]
   1131c:	bcc	11fd8 <gen_protochain+0x1a6c>
   11320:	add	r8, sl, r4, lsl #3
   11324:	b	11330 <gen_protochain+0xdc4>
   11328:	mov	r4, r7
   1132c:	mov	r7, r8
   11330:	sub	r0, r5, #20
   11334:	mov	r2, #4
   11338:	str	r0, [r7]
   1133c:	ldr	r1, [r7, #4]
   11340:	str	r2, [r1, r0]!
   11344:	mov	r0, #1
   11348:	str	r1, [sp, #88]	; 0x58
   1134c:	str	r0, [r1, #12]
   11350:	ldr	r5, [r8]
   11354:	cmp	r5, #19
   11358:	bhi	113b4 <gen_protochain+0xe48>
   1135c:	ldr	r0, [pc, #3524]	; 12128 <gen_protochain+0x1bbc>
   11360:	add	r7, r4, #1
   11364:	cmp	r4, #15
   11368:	add	r0, pc, r0
   1136c:	str	r7, [r0]
   11370:	bge	11fd8 <gen_protochain+0x1a6c>
   11374:	mov	r0, #1024	; 0x400
   11378:	lsl	r5, r0, r7
   1137c:	mov	r0, r5
   11380:	bl	ed4 <malloc@plt>
   11384:	cmp	r0, #0
   11388:	str	r0, [r8, #12]
   1138c:	beq	11fd8 <gen_protochain+0x1a6c>
   11390:	mov	r1, #0
   11394:	mov	r2, r5
   11398:	add	r4, r8, #8
   1139c:	bl	f40 <memset@plt>
   113a0:	cmp	r5, #20
   113a4:	str	r5, [r4]
   113a8:	bcc	11fd8 <gen_protochain+0x1a6c>
   113ac:	add	r8, sl, r7, lsl #3
   113b0:	b	113bc <gen_protochain+0xe50>
   113b4:	mov	r7, r4
   113b8:	mov	r4, r8
   113bc:	sub	r0, r5, #20
   113c0:	mov	r2, #36	; 0x24
   113c4:	str	r0, [r4]
   113c8:	ldr	r1, [r4, #4]
   113cc:	str	r2, [r1, r0]!
   113d0:	mov	r0, #8
   113d4:	str	r1, [sp, #92]	; 0x5c
   113d8:	str	r0, [r1, #12]
   113dc:	ldr	r5, [r8]
   113e0:	cmp	r5, #19
   113e4:	bhi	11440 <gen_protochain+0xed4>
   113e8:	ldr	r0, [pc, #3388]	; 1212c <gen_protochain+0x1bc0>
   113ec:	add	r4, r7, #1
   113f0:	cmp	r7, #15
   113f4:	add	r0, pc, r0
   113f8:	str	r4, [r0]
   113fc:	bge	11fd8 <gen_protochain+0x1a6c>
   11400:	mov	r0, #1024	; 0x400
   11404:	lsl	r5, r0, r4
   11408:	mov	r0, r5
   1140c:	bl	ed4 <malloc@plt>
   11410:	cmp	r0, #0
   11414:	str	r0, [r8, #12]
   11418:	beq	11fd8 <gen_protochain+0x1a6c>
   1141c:	mov	r1, #0
   11420:	mov	r2, r5
   11424:	add	r7, r8, #8
   11428:	bl	f40 <memset@plt>
   1142c:	cmp	r5, #20
   11430:	str	r5, [r7]
   11434:	bcc	11fd8 <gen_protochain+0x1a6c>
   11438:	add	r8, sl, r4, lsl #3
   1143c:	b	11448 <gen_protochain+0xedc>
   11440:	mov	r4, r7
   11444:	mov	r7, r8
   11448:	sub	r0, r5, #20
   1144c:	mov	r2, #7
   11450:	str	r0, [r7]
   11454:	ldr	r1, [r7, #4]
   11458:	str	r2, [r1, r0]!
   1145c:	ldr	r5, [r8]
   11460:	str	r1, [sp, #96]	; 0x60
   11464:	cmp	r5, #19
   11468:	bhi	114c4 <gen_protochain+0xf58>
   1146c:	ldr	r0, [pc, #3260]	; 12130 <gen_protochain+0x1bc4>
   11470:	add	r7, r4, #1
   11474:	cmp	r4, #15
   11478:	add	r0, pc, r0
   1147c:	str	r7, [r0]
   11480:	bge	11fd8 <gen_protochain+0x1a6c>
   11484:	mov	r0, #1024	; 0x400
   11488:	lsl	r5, r0, r7
   1148c:	mov	r0, r5
   11490:	bl	ed4 <malloc@plt>
   11494:	cmp	r0, #0
   11498:	str	r0, [r8, #12]
   1149c:	beq	11fd8 <gen_protochain+0x1a6c>
   114a0:	mov	r1, #0
   114a4:	mov	r2, r5
   114a8:	add	r4, r8, #8
   114ac:	bl	f40 <memset@plt>
   114b0:	cmp	r5, #20
   114b4:	str	r5, [r4]
   114b8:	bcc	11fd8 <gen_protochain+0x1a6c>
   114bc:	add	r8, sl, r7, lsl #3
   114c0:	b	114cc <gen_protochain+0xf60>
   114c4:	mov	r7, r4
   114c8:	mov	r4, r8
   114cc:	sub	r0, r5, #20
   114d0:	mov	r2, #96	; 0x60
   114d4:	str	r0, [r4]
   114d8:	ldr	r1, [r4, #4]
   114dc:	str	r2, [r1, r0]!
   114e0:	str	r1, [sp, #100]	; 0x64
   114e4:	str	r6, [r1, #12]
   114e8:	ldr	r5, [r8]
   114ec:	cmp	r5, #19
   114f0:	bhi	11570 <gen_protochain+0x1004>
   114f4:	ldr	r0, [pc, #3128]	; 12134 <gen_protochain+0x1bc8>
   114f8:	add	sl, r7, #1
   114fc:	cmp	r7, #15
   11500:	add	r0, pc, r0
   11504:	str	sl, [r0]
   11508:	bge	11fd8 <gen_protochain+0x1a6c>
   1150c:	mov	r0, #1024	; 0x400
   11510:	lsl	r5, r0, sl
   11514:	mov	r0, r5
   11518:	bl	ed4 <malloc@plt>
   1151c:	cmp	r0, #0
   11520:	add	r4, sp, #24
   11524:	str	r0, [r8, #12]
   11528:	beq	11fd8 <gen_protochain+0x1a6c>
   1152c:	mov	r1, #0
   11530:	mov	r2, r5
   11534:	add	r8, r8, #8
   11538:	bl	f40 <memset@plt>
   1153c:	cmp	r5, #19
   11540:	str	r5, [r8]
   11544:	bhi	11578 <gen_protochain+0x100c>
   11548:	b	11fd8 <gen_protochain+0x1a6c>
   1154c:	.word	0x00036f84
   11550:	.word	0x00036f7c
   11554:	.word	0x00036f74
   11558:	.word	0x0001a489
   1155c:	.word	0x00036e34
   11560:	.word	0x0001a3da
   11564:	.word	0x00037364
   11568:	.word	0x00036eb0
   1156c:	.word	0x00036e28
   11570:	mov	sl, r7
   11574:	add	r4, sp, #24
   11578:	sub	r1, r5, #20
   1157c:	mov	r3, #5
   11580:	add	r0, r4, #36	; 0x24
   11584:	mov	r4, #8
   11588:	mov	ip, #21
   1158c:	str	r1, [r8]
   11590:	ldr	r2, [r8, #4]
   11594:	str	r3, [r2, r1]!
   11598:	mvn	r1, #17
   1159c:	str	r2, [sp, #104]	; 0x68
   115a0:	str	r1, [r2, #12]
   115a4:	ldr	r1, [sp, #100]	; 0x64
   115a8:	ldr	r2, [sp, #104]	; 0x68
   115ac:	str	r2, [r1, #8]
   115b0:	ldr	r1, [sp, #44]	; 0x2c
   115b4:	ldr	r2, [sp, #60]	; 0x3c
   115b8:	str	r2, [r1, #4]
   115bc:	ldr	r1, [sp, #48]	; 0x30
   115c0:	ldr	r2, [sp, #60]	; 0x3c
   115c4:	str	r2, [r1, #4]
   115c8:	ldr	r1, [sp, #52]	; 0x34
   115cc:	ldr	r2, [sp, #60]	; 0x3c
   115d0:	str	r2, [r1, #4]
   115d4:	ldr	r1, [sp, #56]	; 0x38
   115d8:	add	r1, r1, #4
   115dc:	ldr	r0, [r0]
   115e0:	str	r0, [r1]
   115e4:	ldr	r7, [pc, #2892]	; 12138 <gen_protochain+0x1bcc>
   115e8:	str	ip, [sp, #20]
   115ec:	add	r7, pc, r7
   115f0:	ldr	r5, [r7, sl, lsl #3]!
   115f4:	cmp	r5, #19
   115f8:	bhi	11668 <gen_protochain+0x10fc>
   115fc:	ldr	r0, [pc, #2876]	; 12140 <gen_protochain+0x1bd4>
   11600:	add	r9, sl, #1
   11604:	cmp	sl, #15
   11608:	add	r0, pc, r0
   1160c:	str	r9, [r0]
   11610:	bge	11fd8 <gen_protochain+0x1a6c>
   11614:	mov	r0, #1024	; 0x400
   11618:	lsl	r5, r0, r9
   1161c:	mov	r0, r5
   11620:	bl	ed4 <malloc@plt>
   11624:	str	r0, [r7, #12]
   11628:	cmp	r0, #0
   1162c:	ldr	sl, [pc, #2832]	; 12144 <gen_protochain+0x1bd8>
   11630:	add	sl, pc, sl
   11634:	beq	11fd8 <gen_protochain+0x1a6c>
   11638:	mov	r1, #0
   1163c:	mov	r2, r5
   11640:	add	r7, r7, #8
   11644:	bl	f40 <memset@plt>
   11648:	ldr	ip, [sp, #20]
   1164c:	cmp	r5, #19
   11650:	str	r5, [r7]
   11654:	bhi	11674 <gen_protochain+0x1108>
   11658:	b	11fd8 <gen_protochain+0x1a6c>
   1165c:	.word	0x00036e88
   11660:	.word	0x00036e00
   11664:	.word	0x00036de4
   11668:	mov	r9, sl
   1166c:	ldr	sl, [pc, #2760]	; 1213c <gen_protochain+0x1bd0>
   11670:	add	sl, pc, sl
   11674:	sub	r0, r5, #20
   11678:	mov	r2, #21
   1167c:	cmp	r4, #0
   11680:	mov	r8, sl
   11684:	str	r0, [r7]
   11688:	ldr	r1, [r7, #4]
   1168c:	str	r2, [r1, r0]!
   11690:	add	r2, sp, #24
   11694:	mov	r0, #0
   11698:	str	r1, [r2, ip, lsl #2]
   1169c:	str	r0, [r1, #4]
   116a0:	ldr	r1, [r2, ip, lsl #2]
   116a4:	str	r0, [r1, #8]
   116a8:	mov	r1, #51	; 0x33
   116ac:	ldr	r0, [r2, ip, lsl #2]
   116b0:	str	r1, [r0, #12]
   116b4:	ldrne	r0, [r2, r4, lsl #2]
   116b8:	ldrne	r1, [r2, ip, lsl #2]
   116bc:	strne	r1, [r0, #8]
   116c0:	ldr	r5, [r8, r9, lsl #3]!
   116c4:	cmp	r5, #19
   116c8:	bhi	11728 <gen_protochain+0x11bc>
   116cc:	ldr	r0, [pc, #2676]	; 12148 <gen_protochain+0x1bdc>
   116d0:	add	r7, r9, #1
   116d4:	cmp	r9, #15
   116d8:	add	r0, pc, r0
   116dc:	str	r7, [r0]
   116e0:	bge	11fd8 <gen_protochain+0x1a6c>
   116e4:	mov	r0, #1024	; 0x400
   116e8:	lsl	r5, r0, r7
   116ec:	mov	r0, r5
   116f0:	bl	ed4 <malloc@plt>
   116f4:	cmp	r0, #0
   116f8:	str	r0, [r8, #12]
   116fc:	beq	11fd8 <gen_protochain+0x1a6c>
   11700:	mov	r1, #0
   11704:	mov	r2, r5
   11708:	add	r4, r8, #8
   1170c:	bl	f40 <memset@plt>
   11710:	cmp	r5, #20
   11714:	str	r5, [r4]
   11718:	bcc	11fd8 <gen_protochain+0x1a6c>
   1171c:	ldr	ip, [sp, #20]
   11720:	add	r8, sl, r7, lsl #3
   11724:	b	11730 <gen_protochain+0x11c4>
   11728:	mov	r7, r9
   1172c:	mov	r4, r8
   11730:	sub	r1, r5, #20
   11734:	mov	r3, #135	; 0x87
   11738:	add	r0, ip, #1
   1173c:	str	r1, [r4]
   11740:	ldr	r2, [r4, #4]
   11744:	str	r3, [r2, r1]!
   11748:	add	r1, sp, #24
   1174c:	str	r2, [r1, r0, lsl #2]
   11750:	ldr	r0, [r1, ip, lsl #2]
   11754:	str	r2, [r0, #4]
   11758:	ldr	r5, [sl, r7, lsl #3]
   1175c:	cmp	r5, #19
   11760:	bhi	117cc <gen_protochain+0x1260>
   11764:	ldr	r0, [pc, #2528]	; 1214c <gen_protochain+0x1be0>
   11768:	add	r9, r7, #1
   1176c:	cmp	r7, #15
   11770:	add	r0, pc, r0
   11774:	str	r9, [r0]
   11778:	bge	11fd8 <gen_protochain+0x1a6c>
   1177c:	mov	r0, #1024	; 0x400
   11780:	lsl	r5, r0, r9
   11784:	mov	r0, r5
   11788:	bl	ed4 <malloc@plt>
   1178c:	cmp	r0, #0
   11790:	add	r7, sp, #24
   11794:	str	r0, [r8, #12]
   11798:	beq	11fd8 <gen_protochain+0x1a6c>
   1179c:	mov	r1, #0
   117a0:	mov	r2, r5
   117a4:	add	r4, r8, #8
   117a8:	bl	f40 <memset@plt>
   117ac:	cmp	r5, #20
   117b0:	str	r5, [r4]
   117b4:	bcc	11fd8 <gen_protochain+0x1a6c>
   117b8:	ldr	ip, [sp, #20]
   117bc:	add	r8, sl, r9, lsl #3
   117c0:	b	117d8 <gen_protochain+0x126c>
   117c4:	.word	0x00036cc4
   117c8:	.word	0x00036ca8
   117cc:	mov	r9, r7
   117d0:	mov	r4, r8
   117d4:	add	r7, sp, #24
   117d8:	sub	r1, r5, #20
   117dc:	mov	r3, #80	; 0x50
   117e0:	add	r0, ip, #2
   117e4:	str	r1, [r4]
   117e8:	ldr	r2, [r4, #4]
   117ec:	str	r3, [r2, r1]!
   117f0:	str	r2, [r7, r0, lsl #2]
   117f4:	ldr	r0, [sp, #12]
   117f8:	ldr	r1, [sp, #8]
   117fc:	add	r1, r0, r1
   11800:	str	r1, [r2, #12]
   11804:	str	r1, [sp, #12]
   11808:	ldr	r5, [r8]
   1180c:	cmp	r5, #19
   11810:	bhi	11884 <gen_protochain+0x1318>
   11814:	ldr	r0, [pc, #2356]	; 12150 <gen_protochain+0x1be4>
   11818:	add	sl, r9, #1
   1181c:	cmp	r9, #15
   11820:	add	r0, pc, r0
   11824:	str	sl, [r0]
   11828:	bge	11fd8 <gen_protochain+0x1a6c>
   1182c:	mov	r0, #1024	; 0x400
   11830:	lsl	r5, r0, sl
   11834:	mov	r0, r5
   11838:	bl	ed4 <malloc@plt>
   1183c:	cmp	r0, #0
   11840:	str	r0, [r8, #12]
   11844:	beq	11fd8 <gen_protochain+0x1a6c>
   11848:	mov	r1, #0
   1184c:	mov	r2, r5
   11850:	add	r4, r8, #8
   11854:	bl	f40 <memset@plt>
   11858:	cmp	r5, #20
   1185c:	str	r5, [r4]
   11860:	bcc	11fd8 <gen_protochain+0x1a6c>
   11864:	ldr	r0, [pc, #2280]	; 12154 <gen_protochain+0x1be8>
   11868:	ldr	ip, [sp, #20]
   1186c:	add	r0, pc, r0
   11870:	add	r8, r0, sl, lsl #3
   11874:	b	1188c <gen_protochain+0x1320>
   11878:	.word	0x00036b6c
   1187c:	.word	0x00036b68
   11880:	.word	0x00036bf4
   11884:	mov	sl, r9
   11888:	mov	r4, r8
   1188c:	sub	r0, r5, #20
   11890:	mov	r2, #2
   11894:	add	r9, ip, #3
   11898:	str	r0, [r4]
   1189c:	ldr	r1, [r4, #4]
   118a0:	str	r2, [r1, r0]!
   118a4:	str	r1, [r7, r9, lsl #2]
   118a8:	str	r6, [r1, #12]
   118ac:	ldr	r5, [r8]
   118b0:	cmp	r5, #19
   118b4:	bhi	11928 <gen_protochain+0x13bc>
   118b8:	ldr	r0, [pc, #2200]	; 12158 <gen_protochain+0x1bec>
   118bc:	add	r7, sl, #1
   118c0:	cmp	sl, #15
   118c4:	add	r0, pc, r0
   118c8:	str	r7, [r0]
   118cc:	bge	11fd8 <gen_protochain+0x1a6c>
   118d0:	mov	r0, #1024	; 0x400
   118d4:	lsl	r5, r0, r7
   118d8:	mov	r0, r5
   118dc:	bl	ed4 <malloc@plt>
   118e0:	str	r0, [r8, #12]
   118e4:	cmp	r0, #0
   118e8:	ldr	sl, [pc, #2156]	; 1215c <gen_protochain+0x1bf0>
   118ec:	add	sl, pc, sl
   118f0:	beq	11fd8 <gen_protochain+0x1a6c>
   118f4:	mov	r1, #0
   118f8:	mov	r2, r5
   118fc:	add	r4, r8, #8
   11900:	bl	f40 <memset@plt>
   11904:	cmp	r5, #20
   11908:	str	r5, [r4]
   1190c:	bcc	11fd8 <gen_protochain+0x1a6c>
   11910:	ldr	ip, [sp, #20]
   11914:	add	r8, sl, r7, lsl #3
   11918:	b	11930 <gen_protochain+0x13c4>
   1191c:	.word	0x00036ab4
   11920:	.word	0x00036aa8
   11924:	.word	0x00036b38
   11928:	mov	r7, sl
   1192c:	mov	r4, r8
   11930:	sub	r1, r5, #20
   11934:	mov	r3, #135	; 0x87
   11938:	add	r0, ip, #4
   1193c:	str	r1, [r4]
   11940:	ldr	r2, [r4, #4]
   11944:	str	r3, [r2, r1]!
   11948:	add	r1, sp, #24
   1194c:	str	r2, [r1, r0, lsl #2]
   11950:	ldr	r0, [r1, r9, lsl #2]
   11954:	str	r2, [r0, #4]
   11958:	ldr	r5, [r8]
   1195c:	cmp	r5, #19
   11960:	bhi	119d4 <gen_protochain+0x1468>
   11964:	ldr	r0, [pc, #2036]	; 12160 <gen_protochain+0x1bf4>
   11968:	add	sl, r7, #1
   1196c:	cmp	r7, #15
   11970:	add	r0, pc, r0
   11974:	str	sl, [r0]
   11978:	bge	11fd8 <gen_protochain+0x1a6c>
   1197c:	mov	r0, #1024	; 0x400
   11980:	lsl	r5, r0, sl
   11984:	mov	r0, r5
   11988:	bl	ed4 <malloc@plt>
   1198c:	cmp	r0, #0
   11990:	add	r7, sp, #24
   11994:	str	r0, [r8, #12]
   11998:	beq	11fd8 <gen_protochain+0x1a6c>
   1199c:	mov	r1, #0
   119a0:	mov	r2, r5
   119a4:	add	r4, r8, #8
   119a8:	bl	f40 <memset@plt>
   119ac:	cmp	r5, #20
   119b0:	str	r5, [r4]
   119b4:	bcc	11fd8 <gen_protochain+0x1a6c>
   119b8:	ldr	r0, [pc, #1956]	; 12164 <gen_protochain+0x1bf8>
   119bc:	ldr	ip, [sp, #20]
   119c0:	add	r0, pc, r0
   119c4:	add	r8, r0, sl, lsl #3
   119c8:	b	119e0 <gen_protochain+0x1474>
   119cc:	.word	0x00036a48
   119d0:	.word	0x00036aac
   119d4:	mov	sl, r7
   119d8:	mov	r4, r8
   119dc:	add	r7, sp, #24
   119e0:	sub	r1, r5, #20
   119e4:	mov	r3, #4
   119e8:	add	r0, ip, #5
   119ec:	str	r1, [r4]
   119f0:	ldr	r2, [r4, #4]
   119f4:	str	r3, [r2, r1]!
   119f8:	str	r2, [r7, r0, lsl #2]
   119fc:	mov	r0, #1
   11a00:	str	r0, [r2, #12]
   11a04:	ldr	r5, [r8]
   11a08:	cmp	r5, #19
   11a0c:	bhi	11a80 <gen_protochain+0x1514>
   11a10:	ldr	r0, [pc, #1876]	; 1216c <gen_protochain+0x1c00>
   11a14:	add	r7, sl, #1
   11a18:	cmp	sl, #15
   11a1c:	add	r0, pc, r0
   11a20:	str	r7, [r0]
   11a24:	bge	11fd8 <gen_protochain+0x1a6c>
   11a28:	mov	r0, #1024	; 0x400
   11a2c:	lsl	r5, r0, r7
   11a30:	mov	r0, r5
   11a34:	bl	ed4 <malloc@plt>
   11a38:	str	r0, [r8, #12]
   11a3c:	cmp	r0, #0
   11a40:	ldr	sl, [pc, #1832]	; 12170 <gen_protochain+0x1c04>
   11a44:	add	sl, pc, sl
   11a48:	beq	11fd8 <gen_protochain+0x1a6c>
   11a4c:	mov	r1, #0
   11a50:	mov	r2, r5
   11a54:	add	r4, r8, #8
   11a58:	bl	f40 <memset@plt>
   11a5c:	cmp	r5, #20
   11a60:	str	r5, [r4]
   11a64:	bcc	11fd8 <gen_protochain+0x1a6c>
   11a68:	ldr	ip, [sp, #20]
   11a6c:	add	r8, sl, r7, lsl #3
   11a70:	b	11a90 <gen_protochain+0x1524>
   11a74:	.word	0x00036a04
   11a78:	.word	0x000369c8
   11a7c:	.word	0x000369fc
   11a80:	mov	r7, sl
   11a84:	ldr	sl, [pc, #1756]	; 12168 <gen_protochain+0x1bfc>
   11a88:	mov	r4, r8
   11a8c:	add	sl, pc, sl
   11a90:	sub	r1, r5, #20
   11a94:	mov	r3, #7
   11a98:	add	r0, ip, #6
   11a9c:	str	r1, [r4]
   11aa0:	ldr	r2, [r4, #4]
   11aa4:	str	r3, [r2, r1]!
   11aa8:	add	r1, sp, #24
   11aac:	ldr	r5, [r8]
   11ab0:	str	r2, [r1, r0, lsl #2]
   11ab4:	cmp	r5, #19
   11ab8:	bhi	11b28 <gen_protochain+0x15bc>
   11abc:	ldr	r0, [pc, #1712]	; 12174 <gen_protochain+0x1c08>
   11ac0:	add	r9, r7, #1
   11ac4:	cmp	r7, #15
   11ac8:	add	r0, pc, r0
   11acc:	str	r9, [r0]
   11ad0:	bge	11fd8 <gen_protochain+0x1a6c>
   11ad4:	mov	r0, #1024	; 0x400
   11ad8:	lsl	r5, r0, r9
   11adc:	mov	r0, r5
   11ae0:	bl	ed4 <malloc@plt>
   11ae4:	cmp	r0, #0
   11ae8:	add	r7, sp, #24
   11aec:	str	r0, [r8, #12]
   11af0:	beq	11fd8 <gen_protochain+0x1a6c>
   11af4:	mov	r1, #0
   11af8:	mov	r2, r5
   11afc:	add	r4, r8, #8
   11b00:	bl	f40 <memset@plt>
   11b04:	cmp	r5, #20
   11b08:	str	r5, [r4]
   11b0c:	bcc	11fd8 <gen_protochain+0x1a6c>
   11b10:	ldr	ip, [sp, #20]
   11b14:	add	r8, sl, r9, lsl #3
   11b18:	b	11b34 <gen_protochain+0x15c8>
   11b1c:	.word	0x00036934
   11b20:	.word	0x000368d0
   11b24:	.word	0x0003693c
   11b28:	mov	r9, r7
   11b2c:	mov	r4, r8
   11b30:	add	r7, sp, #24
   11b34:	sub	r1, r5, #20
   11b38:	mov	r3, #80	; 0x50
   11b3c:	add	r0, ip, #7
   11b40:	str	r1, [r4]
   11b44:	ldr	r2, [r4, #4]
   11b48:	str	r3, [r2, r1]!
   11b4c:	str	r2, [r7, r0, lsl #2]
   11b50:	ldr	r0, [sp, #12]
   11b54:	str	r0, [r2, #12]
   11b58:	ldr	r5, [r8]
   11b5c:	cmp	r5, #19
   11b60:	bhi	11bc4 <gen_protochain+0x1658>
   11b64:	ldr	r0, [pc, #1548]	; 12178 <gen_protochain+0x1c0c>
   11b68:	add	r4, r9, #1
   11b6c:	cmp	r9, #15
   11b70:	add	r0, pc, r0
   11b74:	str	r4, [r0]
   11b78:	bge	11fd8 <gen_protochain+0x1a6c>
   11b7c:	mov	r0, #1024	; 0x400
   11b80:	lsl	r5, r0, r4
   11b84:	mov	r0, r5
   11b88:	bl	ed4 <malloc@plt>
   11b8c:	cmp	r0, #0
   11b90:	str	r0, [r8, #12]
   11b94:	beq	11fd8 <gen_protochain+0x1a6c>
   11b98:	mov	r1, #0
   11b9c:	mov	r2, r5
   11ba0:	add	r7, r8, #8
   11ba4:	bl	f40 <memset@plt>
   11ba8:	cmp	r5, #20
   11bac:	str	r5, [r7]
   11bb0:	bcc	11fd8 <gen_protochain+0x1a6c>
   11bb4:	ldr	ip, [sp, #20]
   11bb8:	add	r8, sl, r4, lsl #3
   11bbc:	b	11bcc <gen_protochain+0x1660>
   11bc0:	.word	0x000368d8
   11bc4:	mov	r4, r9
   11bc8:	mov	r7, r8
   11bcc:	sub	r0, r5, #20
   11bd0:	orr	sl, ip, #8
   11bd4:	str	r0, [r7]
   11bd8:	ldr	r1, [r7, #4]
   11bdc:	mov	r7, #4
   11be0:	str	r7, [r1, r0]!
   11be4:	add	r0, sp, #24
   11be8:	str	r1, [r0, sl, lsl #2]
   11bec:	mov	r0, #2
   11bf0:	str	r0, [r1, #12]
   11bf4:	ldr	r5, [r8]
   11bf8:	cmp	r5, #19
   11bfc:	bhi	11c68 <gen_protochain+0x16fc>
   11c00:	ldr	r0, [pc, #1396]	; 1217c <gen_protochain+0x1c10>
   11c04:	add	r9, r4, #1
   11c08:	cmp	r4, #15
   11c0c:	add	r0, pc, r0
   11c10:	str	r9, [r0]
   11c14:	bge	11fd8 <gen_protochain+0x1a6c>
   11c18:	mov	r0, #1024	; 0x400
   11c1c:	lsl	r5, r0, r9
   11c20:	mov	r0, r5
   11c24:	bl	ed4 <malloc@plt>
   11c28:	cmp	r0, #0
   11c2c:	str	r0, [r8, #12]
   11c30:	beq	11fd8 <gen_protochain+0x1a6c>
   11c34:	mov	r1, #0
   11c38:	mov	r2, r5
   11c3c:	add	r4, r8, #8
   11c40:	bl	f40 <memset@plt>
   11c44:	cmp	r5, #20
   11c48:	str	r5, [r4]
   11c4c:	bcc	11fd8 <gen_protochain+0x1a6c>
   11c50:	ldr	r0, [pc, #1320]	; 12180 <gen_protochain+0x1c14>
   11c54:	ldr	ip, [sp, #20]
   11c58:	add	r0, pc, r0
   11c5c:	add	r8, r0, r9, lsl #3
   11c60:	b	11c70 <gen_protochain+0x1704>
   11c64:	.word	0x00036834
   11c68:	mov	r9, r4
   11c6c:	mov	r4, r8
   11c70:	sub	r1, r5, #20
   11c74:	mov	r3, #36	; 0x24
   11c78:	add	r0, sl, #1
   11c7c:	str	r1, [r4]
   11c80:	ldr	r2, [r4, #4]
   11c84:	str	r3, [r2, r1]!
   11c88:	add	r1, sp, #24
   11c8c:	str	r2, [r1, r0, lsl #2]
   11c90:	str	r7, [r2, #12]
   11c94:	ldr	r5, [r8]
   11c98:	cmp	r5, #19
   11c9c:	bhi	11d08 <gen_protochain+0x179c>
   11ca0:	ldr	r0, [pc, #1244]	; 12184 <gen_protochain+0x1c18>
   11ca4:	add	r7, r9, #1
   11ca8:	cmp	r9, #15
   11cac:	add	r0, pc, r0
   11cb0:	str	r7, [r0]
   11cb4:	bge	11fd8 <gen_protochain+0x1a6c>
   11cb8:	mov	r0, #1024	; 0x400
   11cbc:	lsl	r5, r0, r7
   11cc0:	mov	r0, r5
   11cc4:	bl	ed4 <malloc@plt>
   11cc8:	cmp	r0, #0
   11ccc:	str	r0, [r8, #12]
   11cd0:	beq	11fd8 <gen_protochain+0x1a6c>
   11cd4:	mov	r1, #0
   11cd8:	mov	r2, r5
   11cdc:	add	r4, r8, #8
   11ce0:	bl	f40 <memset@plt>
   11ce4:	cmp	r5, #20
   11ce8:	str	r5, [r4]
   11cec:	bcc	11fd8 <gen_protochain+0x1a6c>
   11cf0:	ldr	r0, [pc, #1168]	; 12188 <gen_protochain+0x1c1c>
   11cf4:	ldr	ip, [sp, #20]
   11cf8:	add	r0, pc, r0
   11cfc:	add	r8, r0, r7, lsl #3
   11d00:	b	11d10 <gen_protochain+0x17a4>
   11d04:	.word	0x00036768
   11d08:	mov	r7, r9
   11d0c:	mov	r4, r8
   11d10:	sub	r1, r5, #20
   11d14:	mov	r3, #7
   11d18:	add	r0, sl, #2
   11d1c:	str	r1, [r4]
   11d20:	ldr	r2, [r4, #4]
   11d24:	str	r3, [r2, r1]!
   11d28:	add	r1, sp, #24
   11d2c:	ldr	r5, [r8]
   11d30:	str	r2, [r1, r0, lsl #2]
   11d34:	cmp	r5, #19
   11d38:	bhi	11dac <gen_protochain+0x1840>
   11d3c:	ldr	r0, [pc, #1096]	; 1218c <gen_protochain+0x1c20>
   11d40:	add	r9, r7, #1
   11d44:	cmp	r7, #15
   11d48:	add	r0, pc, r0
   11d4c:	str	r9, [r0]
   11d50:	bge	11fd8 <gen_protochain+0x1a6c>
   11d54:	mov	r0, #1024	; 0x400
   11d58:	lsl	r5, r0, r9
   11d5c:	mov	r0, r5
   11d60:	bl	ed4 <malloc@plt>
   11d64:	cmp	r0, #0
   11d68:	add	r7, sp, #24
   11d6c:	str	r0, [r8, #12]
   11d70:	beq	11fd8 <gen_protochain+0x1a6c>
   11d74:	mov	r1, #0
   11d78:	mov	r2, r5
   11d7c:	add	r4, r8, #8
   11d80:	bl	f40 <memset@plt>
   11d84:	cmp	r5, #20
   11d88:	str	r5, [r4]
   11d8c:	bcc	11fd8 <gen_protochain+0x1a6c>
   11d90:	ldr	r0, [pc, #1016]	; 12190 <gen_protochain+0x1c24>
   11d94:	ldr	ip, [sp, #20]
   11d98:	add	r0, pc, r0
   11d9c:	add	r8, r0, r9, lsl #3
   11da0:	b	11db8 <gen_protochain+0x184c>
   11da4:	.word	0x00036748
   11da8:	.word	0x00036680
   11dac:	mov	r9, r7
   11db0:	mov	r4, r8
   11db4:	add	r7, sp, #24
   11db8:	sub	r1, r5, #20
   11dbc:	mov	r3, #96	; 0x60
   11dc0:	add	r0, sl, #3
   11dc4:	str	r1, [r4]
   11dc8:	ldr	r2, [r4, #4]
   11dcc:	str	r3, [r2, r1]!
   11dd0:	str	r2, [r7, r0, lsl #2]
   11dd4:	str	r6, [r2, #12]
   11dd8:	ldr	r5, [r8]
   11ddc:	cmp	r5, #19
   11de0:	bhi	11e54 <gen_protochain+0x18e8>
   11de4:	ldr	r0, [pc, #936]	; 12194 <gen_protochain+0x1c28>
   11de8:	add	r4, r9, #1
   11dec:	cmp	r9, #15
   11df0:	add	r0, pc, r0
   11df4:	str	r4, [r0]
   11df8:	bge	11fd8 <gen_protochain+0x1a6c>
   11dfc:	mov	r0, #1024	; 0x400
   11e00:	lsl	r5, r0, r4
   11e04:	mov	r0, r5
   11e08:	bl	ed4 <malloc@plt>
   11e0c:	cmp	r0, #0
   11e10:	str	r0, [r8, #12]
   11e14:	beq	11fd8 <gen_protochain+0x1a6c>
   11e18:	mov	r1, #0
   11e1c:	mov	r2, r5
   11e20:	add	r7, r8, #8
   11e24:	bl	f40 <memset@plt>
   11e28:	cmp	r5, #20
   11e2c:	str	r5, [r7]
   11e30:	bcc	11fd8 <gen_protochain+0x1a6c>
   11e34:	ldr	r0, [pc, #860]	; 12198 <gen_protochain+0x1c2c>
   11e38:	ldr	ip, [sp, #20]
   11e3c:	add	r0, pc, r0
   11e40:	add	r8, r0, r4, lsl #3
   11e44:	b	11e5c <gen_protochain+0x18f0>
   11e48:	.word	0x00036694
   11e4c:	.word	0x000365ec
   11e50:	.word	0x000365b0
   11e54:	mov	r4, r9
   11e58:	mov	r7, r8
   11e5c:	sub	r1, r5, #20
   11e60:	mov	r3, #5
   11e64:	add	r0, sl, #4
   11e68:	str	r1, [r7]
   11e6c:	ldr	r2, [r7, #4]
   11e70:	add	r7, sp, #24
   11e74:	str	r3, [r2, r1]!
   11e78:	str	r2, [r7, r0, lsl #2]
   11e7c:	mvn	r0, #8
   11e80:	eor	r0, ip, r0
   11e84:	sub	r0, r0, #1
   11e88:	str	r0, [r2, #12]
   11e8c:	ldr	r5, [r8]
   11e90:	cmp	r5, #19
   11e94:	bhi	11ef8 <gen_protochain+0x198c>
   11e98:	ldr	r0, [pc, #764]	; 1219c <gen_protochain+0x1c30>
   11e9c:	add	r9, r4, #1
   11ea0:	cmp	r4, #15
   11ea4:	add	r0, pc, r0
   11ea8:	str	r9, [r0]
   11eac:	bge	11fd8 <gen_protochain+0x1a6c>
   11eb0:	mov	r0, #1024	; 0x400
   11eb4:	lsl	r5, r0, r9
   11eb8:	mov	r0, r5
   11ebc:	bl	ed4 <malloc@plt>
   11ec0:	cmp	r0, #0
   11ec4:	str	r0, [r8, #12]
   11ec8:	beq	11fd8 <gen_protochain+0x1a6c>
   11ecc:	mov	r1, #0
   11ed0:	mov	r2, r5
   11ed4:	add	r8, r8, #8
   11ed8:	bl	f40 <memset@plt>
   11edc:	ldr	ip, [sp, #20]
   11ee0:	cmp	r5, #19
   11ee4:	str	r5, [r8]
   11ee8:	bhi	11efc <gen_protochain+0x1990>
   11eec:	b	11fd8 <gen_protochain+0x1a6c>
   11ef0:	.word	0x000365dc
   11ef4:	.word	0x00036558
   11ef8:	mov	r9, r4
   11efc:	sub	r1, r5, #20
   11f00:	mov	r3, #4
   11f04:	add	r0, sl, #5
   11f08:	str	r1, [r8]
   11f0c:	ldr	r2, [r8, #4]
   11f10:	str	r3, [r2, r1]!
   11f14:	mov	r1, #0
   11f18:	str	r2, [r7, r0, lsl #2]
   11f1c:	str	r1, [r2, #12]
   11f20:	ldr	r1, [r7, r0, lsl #2]
   11f24:	ldr	r2, [sp, #40]	; 0x28
   11f28:	str	r1, [r2, #4]
   11f2c:	ldr	r1, [r7, ip, lsl #2]
   11f30:	ldr	r2, [r7, r0, lsl #2]
   11f34:	str	r2, [r1, #8]
   11f38:	ldr	r1, [r7, r0, lsl #2]
   11f3c:	ldr	r2, [sp, #36]	; 0x24
   11f40:	str	r1, [r2, #4]
   11f44:	orr	r1, r7, #4
   11f48:	mov	r2, r0
   11f4c:	ldmda	r1, {r3, r7}
   11f50:	add	r1, r1, #4
   11f54:	subs	r2, r2, #1
   11f58:	str	r7, [r3, #16]
   11f5c:	bne	11f4c <gen_protochain+0x19e0>
   11f60:	add	r1, sp, #24
   11f64:	mov	r8, #0
   11f68:	ldr	r0, [r1, r0, lsl #2]
   11f6c:	str	r8, [r0, #16]
   11f70:	ldr	r4, [pc, #552]	; 121a0 <gen_protochain+0x1c34>
   11f74:	add	r4, pc, r4
   11f78:	ldr	r5, [r4, r9, lsl #3]!
   11f7c:	cmp	r5, #207	; 0xcf
   11f80:	bhi	11fec <gen_protochain+0x1a80>
   11f84:	ldr	r1, [pc, #536]	; 121a4 <gen_protochain+0x1c38>
   11f88:	add	r0, r9, #1
   11f8c:	cmp	r9, #15
   11f90:	add	r1, pc, r1
   11f94:	str	r0, [r1]
   11f98:	bge	11fd8 <gen_protochain+0x1a6c>
   11f9c:	mov	r1, #1024	; 0x400
   11fa0:	lsl	r5, r1, r0
   11fa4:	mov	r0, r5
   11fa8:	bl	ed4 <malloc@plt>
   11fac:	ldr	r7, [sp, #16]
   11fb0:	cmp	r0, #0
   11fb4:	str	r0, [r4, #12]
   11fb8:	beq	11fd8 <gen_protochain+0x1a6c>
   11fbc:	mov	r1, #0
   11fc0:	mov	r2, r5
   11fc4:	add	r4, r4, #8
   11fc8:	bl	f40 <memset@plt>
   11fcc:	cmp	r5, #207	; 0xcf
   11fd0:	str	r5, [r4]
   11fd4:	bhi	11ff0 <gen_protochain+0x1a84>
   11fd8:	ldr	r0, [pc, #460]	; 121ac <gen_protochain+0x1c40>
   11fdc:	add	r0, pc, r0
   11fe0:	bl	2124 <sf_bpf_error>
   11fe4:	.word	0x000364c4
   11fe8:	.word	0x0003643c
   11fec:	ldr	r7, [sp, #16]
   11ff0:	sub	r0, r5, #208	; 0xd0
   11ff4:	str	r0, [r4]
   11ff8:	ldr	r1, [r4, #4]
   11ffc:	add	r0, r1, r0
   12000:	mov	r1, #21
   12004:	str	r1, [r0, #8]
   12008:	str	r0, [r0, #96]	; 0x60
   1200c:	ldr	r1, [sp, #28]
   12010:	str	r7, [r0, #20]
   12014:	str	r1, [r0, #4]
   12018:	ldr	r1, [pc, #392]	; 121a8 <gen_protochain+0x1c3c>
   1201c:	ldr	r4, [sp, #4]
   12020:	add	r1, pc, r1
   12024:	cmp	r4, #0
   12028:	str	r8, [r1, r6, lsl #2]
   1202c:	beq	12060 <gen_protochain+0x1af4>
   12030:	ldr	r1, [r0, #96]	; 0x60
   12034:	mov	r2, r4
   12038:	ldr	r3, [r2, #44]	; 0x2c
   1203c:	add	r7, r2, #84	; 0x54
   12040:	cmp	r3, #0
   12044:	mov	r3, #84	; 0x54
   12048:	movweq	r3, #60	; 0x3c
   1204c:	addeq	r7, r2, #60	; 0x3c
   12050:	ldr	r2, [r2, r3]
   12054:	str	r1, [r7]
   12058:	cmp	r2, #0
   1205c:	bne	12038 <gen_protochain+0x1acc>
   12060:	ldr	r2, [r4, #44]	; 0x2c
   12064:	add	r1, r0, #96	; 0x60
   12068:	cmp	r0, #0
   1206c:	clz	r2, r2
   12070:	lsr	r2, r2, #5
   12074:	str	r2, [r4, #44]	; 0x2c
   12078:	ldr	r2, [r0, #44]	; 0x2c
   1207c:	clz	r3, r2
   12080:	lsr	r3, r3, #5
   12084:	str	r3, [r0, #44]	; 0x2c
   12088:	str	r0, [fp, #-36]	; 0xffffffdc
   1208c:	beq	120d4 <gen_protochain+0x1b68>
   12090:	mov	r7, #60	; 0x3c
   12094:	cmp	r2, #0
   12098:	mov	r3, r0
   1209c:	movweq	r7, #84	; 0x54
   120a0:	ldr	r2, [r3, r7]!
   120a4:	cmp	r2, #0
   120a8:	beq	120d8 <gen_protochain+0x1b6c>
   120ac:	ldr	r7, [r2, #44]	; 0x2c
   120b0:	add	r3, r2, #84	; 0x54
   120b4:	cmp	r7, #0
   120b8:	mov	r7, #84	; 0x54
   120bc:	movweq	r7, #60	; 0x3c
   120c0:	addeq	r3, r2, #60	; 0x3c
   120c4:	ldr	r2, [r2, r7]
   120c8:	cmp	r2, #0
   120cc:	bne	120ac <gen_protochain+0x1b40>
   120d0:	b	120d8 <gen_protochain+0x1b6c>
   120d4:	sub	r3, fp, #36	; 0x24
   120d8:	str	r4, [r3]
   120dc:	ldr	r2, [r0, #44]	; 0x2c
   120e0:	clz	r2, r2
   120e4:	lsr	r2, r2, #5
   120e8:	str	r2, [r0, #44]	; 0x2c
   120ec:	ldr	r2, [r4, #96]	; 0x60
   120f0:	str	r2, [r1]
   120f4:	sub	sp, fp, #28
   120f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   120fc:	ldr	r0, [pc, #16]	; 12114 <gen_protochain+0x1ba8>
   12100:	add	r0, pc, r0
   12104:	bl	2124 <sf_bpf_error>
   12108:	ldr	r0, [pc, #160]	; 121b0 <gen_protochain+0x1c44>
   1210c:	add	r0, pc, r0
   12110:	bl	2124 <sf_bpf_error>
   12114:	.word	0x000188e4
   12118:	.word	0x000363b8
   1211c:	.word	0x0003632c
   12120:	.word	0x000362a8
   12124:	.word	0x00036220
   12128:	.word	0x00036194
   1212c:	.word	0x00036108
   12130:	.word	0x00036084
   12134:	.word	0x00035ffc
   12138:	.word	0x00035e90
   1213c:	.word	0x00035e0c
   12140:	.word	0x00035ef4
   12144:	.word	0x00035e4c
   12148:	.word	0x00035e24
   1214c:	.word	0x00035d8c
   12150:	.word	0x00035cdc
   12154:	.word	0x00035c10
   12158:	.word	0x00035c38
   1215c:	.word	0x00035b90
   12160:	.word	0x00035b8c
   12164:	.word	0x00035abc
   12168:	.word	0x000359f0
   1216c:	.word	0x00035ae0
   12170:	.word	0x00035a38
   12174:	.word	0x00035a34
   12178:	.word	0x0003598c
   1217c:	.word	0x000358f0
   12180:	.word	0x00035824
   12184:	.word	0x00035850
   12188:	.word	0x00035784
   1218c:	.word	0x000357b4
   12190:	.word	0x000356e4
   12194:	.word	0x0003570c
   12198:	.word	0x00035640
   1219c:	.word	0x00035658
   121a0:	.word	0x00035508
   121a4:	.word	0x0003556c
   121a8:	.word	0x000354f0
   121ac:	.word	0x00018028
   121b0:	.word	0x00018925

000121b4 <sf_gen_mcode>:
   121b4:	push	{r4, r5, r6, r7, fp, lr}
   121b8:	add	fp, sp, #16
   121bc:	sub	sp, sp, #16
   121c0:	mov	r6, r1
   121c4:	add	r1, sp, #12
   121c8:	mov	r4, r3
   121cc:	mov	r7, r2
   121d0:	mov	r5, r0
   121d4:	bl	2090c <__pcap_atoin>
   121d8:	ldr	r1, [sp, #12]
   121dc:	rsb	r0, r0, #32
   121e0:	cmp	r6, #0
   121e4:	lsl	r0, r1, r0
   121e8:	str	r0, [sp, #12]
   121ec:	beq	12230 <sf_gen_mcode+0x7c>
   121f0:	add	r1, sp, #8
   121f4:	mov	r0, r6
   121f8:	bl	2090c <__pcap_atoin>
   121fc:	ldr	r2, [sp, #8]
   12200:	rsb	r0, r0, #32
   12204:	lsl	r1, r2, r0
   12208:	mvn	r2, r2, lsl r0
   1220c:	ldr	r0, [sp, #12]
   12210:	str	r1, [sp, #8]
   12214:	tst	r0, r2
   12218:	beq	1225c <sf_gen_mcode+0xa8>
   1221c:	ldr	r0, [pc, #148]	; 122b8 <sf_gen_mcode+0x104>
   12220:	mov	r1, r5
   12224:	mov	r2, r6
   12228:	add	r0, pc, r0
   1222c:	bl	2124 <sf_bpf_error>
   12230:	cmp	r7, #33	; 0x21
   12234:	bge	12298 <sf_gen_mcode+0xe4>
   12238:	rsb	r2, r7, #32
   1223c:	mvn	r3, #0
   12240:	cmp	r7, #0
   12244:	mov	r1, r7
   12248:	lslne	r1, r3, r2
   1224c:	mvn	r2, r1
   12250:	str	r1, [sp, #8]
   12254:	tst	r0, r2
   12258:	bne	122a4 <sf_gen_mcode+0xf0>
   1225c:	uxtb	r2, r4
   12260:	cmp	r2, #2
   12264:	bne	1228c <sf_gen_mcode+0xd8>
   12268:	lsr	r3, r4, #16
   1226c:	lsr	r2, r4, #8
   12270:	mov	r7, #2
   12274:	uxtb	r2, r2
   12278:	uxtb	r3, r3
   1227c:	str	r7, [sp]
   12280:	bl	c574 <gen_host>
   12284:	sub	sp, fp, #16
   12288:	pop	{r4, r5, r6, r7, fp, pc}
   1228c:	ldr	r0, [pc, #40]	; 122bc <sf_gen_mcode+0x108>
   12290:	add	r0, pc, r0
   12294:	bl	2124 <sf_bpf_error>
   12298:	ldr	r0, [pc, #32]	; 122c0 <sf_gen_mcode+0x10c>
   1229c:	add	r0, pc, r0
   122a0:	bl	2124 <sf_bpf_error>
   122a4:	ldr	r0, [pc, #24]	; 122c4 <sf_gen_mcode+0x110>
   122a8:	mov	r1, r5
   122ac:	mov	r2, r7
   122b0:	add	r0, pc, r0
   122b4:	bl	2124 <sf_bpf_error>
   122b8:	.word	0x00017598
   122bc:	.word	0x0001758f
   122c0:	.word	0x00017549
   122c4:	.word	0x0001754f

000122c8 <sf_gen_ncode>:
   122c8:	push	{r4, r5, r6, r7, fp, lr}
   122cc:	add	fp, sp, #16
   122d0:	sub	sp, sp, #16
   122d4:	str	r1, [sp, #4]
   122d8:	ubfx	r4, r2, #16, #8
   122dc:	mov	r7, r2
   122e0:	mov	r6, r0
   122e4:	ubfx	r5, r2, #8, #8
   122e8:	cmp	r0, #0
   122ec:	beq	12308 <sf_gen_ncode+0x40>
   122f0:	add	r1, sp, #4
   122f4:	mov	r0, r6
   122f8:	cmp	r5, #12
   122fc:	bne	12310 <sf_gen_ncode+0x48>
   12300:	bl	20974 <__pcap_atodn>
   12304:	b	12314 <sf_gen_ncode+0x4c>
   12308:	mov	r0, #32
   1230c:	b	12314 <sf_gen_ncode+0x4c>
   12310:	bl	2090c <__pcap_atoin>
   12314:	uxtb	r2, r7
   12318:	cmp	r2, #7
   1231c:	bhi	12608 <sf_gen_ncode+0x340>
   12320:	add	r3, pc, #8
   12324:	lsr	r1, r7, #8
   12328:	ldr	r7, [r3, r2, lsl #2]
   1232c:	add	pc, r3, r7
   12330:	.word	0x00000020
   12334:	.word	0x00000020
   12338:	.word	0x00000020
   1233c:	.word	0x0000007c
   12340:	.word	0x000002e4
   12344:	.word	0x0000025c
   12348:	.word	0x00000160
   1234c:	.word	0x00000170
   12350:	uxtb	r1, r1
   12354:	cmp	r1, #12
   12358:	beq	12390 <sf_gen_ncode+0xc8>
   1235c:	cmp	r1, #1
   12360:	beq	12624 <sf_gen_ncode+0x35c>
   12364:	cmp	r6, #0
   12368:	cmpeq	r2, #2
   1236c:	beq	125a4 <sf_gen_ncode+0x2dc>
   12370:	rsb	r1, r0, #32
   12374:	ldr	r0, [sp, #4]
   12378:	mvn	r3, #0
   1237c:	lsl	r0, r0, r1
   12380:	lsl	r1, r3, r1
   12384:	str	r0, [sp, #4]
   12388:	str	r2, [sp]
   1238c:	b	1239c <sf_gen_ncode+0xd4>
   12390:	ldr	r0, [sp, #4]
   12394:	str	r2, [sp]
   12398:	mov	r1, #0
   1239c:	mov	r2, r5
   123a0:	mov	r3, r4
   123a4:	bl	c574 <gen_host>
   123a8:	b	1259c <sf_gen_ncode+0x2d4>
   123ac:	uxtb	r0, r1
   123b0:	cmp	r0, #8
   123b4:	bcs	12630 <sf_gen_ncode+0x368>
   123b8:	mov	r2, #225	; 0xe1
   123bc:	mov	r3, #1
   123c0:	tst	r3, r2, lsr r0
   123c4:	beq	12630 <sf_gen_ncode+0x368>
   123c8:	lsl	r0, r1, #24
   123cc:	ldr	r1, [pc, #628]	; 12648 <sf_gen_ncode+0x380>
   123d0:	mov	r2, r4
   123d4:	add	r1, pc, r1
   123d8:	ldr	r6, [r1, r0, asr #22]
   123dc:	ldr	r0, [sp, #4]
   123e0:	mov	r1, r6
   123e4:	bl	f8b4 <gen_port>
   123e8:	mov	r5, r0
   123ec:	ldr	r0, [sp, #4]
   123f0:	mov	r1, r6
   123f4:	mov	r2, r4
   123f8:	bl	fb80 <gen_port6>
   123fc:	ldr	r1, [r0, #44]	; 0x2c
   12400:	cmp	r0, #0
   12404:	clz	r1, r1
   12408:	lsr	r1, r1, #5
   1240c:	str	r1, [r0, #44]	; 0x2c
   12410:	beq	1244c <sf_gen_ncode+0x184>
   12414:	ldr	r2, [r5, #96]	; 0x60
   12418:	mov	r3, r0
   1241c:	b	12424 <sf_gen_ncode+0x15c>
   12420:	ldr	r1, [r3, #44]	; 0x2c
   12424:	cmp	r1, #0
   12428:	mov	r1, #84	; 0x54
   1242c:	add	r7, r3, #84	; 0x54
   12430:	movweq	r1, #60	; 0x3c
   12434:	addeq	r7, r3, #60	; 0x3c
   12438:	ldr	r3, [r3, r1]
   1243c:	str	r2, [r7]
   12440:	cmp	r3, #0
   12444:	bne	12420 <sf_gen_ncode+0x158>
   12448:	ldr	r1, [r0, #44]	; 0x2c
   1244c:	clz	r1, r1
   12450:	cmp	r5, #0
   12454:	lsr	r1, r1, #5
   12458:	str	r1, [r0, #44]	; 0x2c
   1245c:	str	r5, [sp, #8]
   12460:	beq	125e4 <sf_gen_ncode+0x31c>
   12464:	mov	r2, r5
   12468:	ldr	r3, [r2, #44]	; 0x2c
   1246c:	add	r1, r2, #84	; 0x54
   12470:	cmp	r3, #0
   12474:	mov	r3, #84	; 0x54
   12478:	movweq	r3, #60	; 0x3c
   1247c:	addeq	r1, r2, #60	; 0x3c
   12480:	ldr	r2, [r2, r3]
   12484:	cmp	r2, #0
   12488:	bne	12468 <sf_gen_ncode+0x1a0>
   1248c:	b	125f0 <sf_gen_ncode+0x328>
   12490:	ldr	r0, [sp, #4]
   12494:	mov	r1, r5
   12498:	bl	1056c <gen_protochain>
   1249c:	b	1259c <sf_gen_ncode+0x2d4>
   124a0:	uxtb	r0, r1
   124a4:	cmp	r0, #8
   124a8:	bcs	1263c <sf_gen_ncode+0x374>
   124ac:	mov	r2, #225	; 0xe1
   124b0:	mov	r3, #1
   124b4:	tst	r3, r2, lsr r0
   124b8:	beq	1263c <sf_gen_ncode+0x374>
   124bc:	lsl	r0, r1, #24
   124c0:	ldr	r1, [pc, #388]	; 1264c <sf_gen_ncode+0x384>
   124c4:	mov	r3, r4
   124c8:	add	r1, pc, r1
   124cc:	ldr	r6, [r1, r0, asr #22]
   124d0:	ldr	r0, [sp, #4]
   124d4:	mov	r1, r0
   124d8:	mov	r2, r6
   124dc:	bl	fe4c <gen_portrange>
   124e0:	mov	r5, r0
   124e4:	ldr	r0, [sp, #4]
   124e8:	mov	r2, r6
   124ec:	mov	r3, r4
   124f0:	mov	r1, r0
   124f4:	bl	1012c <gen_portrange6>
   124f8:	ldr	r1, [r0, #44]	; 0x2c
   124fc:	cmp	r0, #0
   12500:	clz	r1, r1
   12504:	lsr	r1, r1, #5
   12508:	str	r1, [r0, #44]	; 0x2c
   1250c:	beq	12548 <sf_gen_ncode+0x280>
   12510:	ldr	r2, [r5, #96]	; 0x60
   12514:	mov	r3, r0
   12518:	b	12520 <sf_gen_ncode+0x258>
   1251c:	ldr	r1, [r3, #44]	; 0x2c
   12520:	cmp	r1, #0
   12524:	mov	r1, #84	; 0x54
   12528:	add	r7, r3, #84	; 0x54
   1252c:	movweq	r1, #60	; 0x3c
   12530:	addeq	r7, r3, #60	; 0x3c
   12534:	ldr	r3, [r3, r1]
   12538:	str	r2, [r7]
   1253c:	cmp	r3, #0
   12540:	bne	1251c <sf_gen_ncode+0x254>
   12544:	ldr	r1, [r0, #44]	; 0x2c
   12548:	clz	r1, r1
   1254c:	cmp	r5, #0
   12550:	lsr	r1, r1, #5
   12554:	str	r1, [r0, #44]	; 0x2c
   12558:	str	r5, [sp, #12]
   1255c:	beq	125ec <sf_gen_ncode+0x324>
   12560:	mov	r2, r5
   12564:	ldr	r3, [r2, #44]	; 0x2c
   12568:	add	r1, r2, #84	; 0x54
   1256c:	cmp	r3, #0
   12570:	mov	r3, #84	; 0x54
   12574:	movweq	r3, #60	; 0x3c
   12578:	addeq	r1, r2, #60	; 0x3c
   1257c:	ldr	r2, [r2, r3]
   12580:	cmp	r2, #0
   12584:	bne	12564 <sf_gen_ncode+0x29c>
   12588:	b	125f0 <sf_gen_ncode+0x328>
   1258c:	ldr	r0, [sp, #4]
   12590:	mov	r1, r5
   12594:	mov	r2, r4
   12598:	bl	69ec <gen_proto>
   1259c:	mov	r5, r0
   125a0:	b	125fc <sf_gen_ncode+0x334>
   125a4:	ldr	r0, [sp, #4]
   125a8:	movw	r7, #65534	; 0xfffe
   125ac:	mvn	r1, #0
   125b0:	movt	r7, #255	; 0xff
   125b4:	sub	r3, r0, #1
   125b8:	cmp	r3, r7
   125bc:	bhi	12388 <sf_gen_ncode+0xc0>
   125c0:	mvn	r3, #0
   125c4:	mvn	r7, #-16777216	; 0xff000000
   125c8:	mvn	r1, #0
   125cc:	add	r6, r3, r0, lsl #8
   125d0:	lsl	r1, r1, #8
   125d4:	lsl	r0, r0, #8
   125d8:	cmp	r6, r7
   125dc:	bcc	125cc <sf_gen_ncode+0x304>
   125e0:	b	12384 <sf_gen_ncode+0xbc>
   125e4:	add	r1, sp, #8
   125e8:	b	125f0 <sf_gen_ncode+0x328>
   125ec:	add	r1, sp, #12
   125f0:	str	r0, [r1]
   125f4:	ldr	r0, [r0, #96]	; 0x60
   125f8:	str	r0, [r5, #96]	; 0x60
   125fc:	mov	r0, r5
   12600:	sub	sp, fp, #16
   12604:	pop	{r4, r5, r6, r7, fp, pc}
   12608:	cmp	r2, #255	; 0xff
   1260c:	bne	12620 <sf_gen_ncode+0x358>
   12610:	bl	328c <syntax>
   12614:	ldr	r0, [pc, #52]	; 12650 <sf_gen_ncode+0x388>
   12618:	add	r0, pc, r0
   1261c:	bl	2124 <sf_bpf_error>
   12620:	bl	fc4 <abort@plt>
   12624:	ldr	r0, [pc, #40]	; 12654 <sf_gen_ncode+0x38c>
   12628:	add	r0, pc, r0
   1262c:	bl	2124 <sf_bpf_error>
   12630:	ldr	r0, [pc, #32]	; 12658 <sf_gen_ncode+0x390>
   12634:	add	r0, pc, r0
   12638:	bl	2124 <sf_bpf_error>
   1263c:	ldr	r0, [pc, #24]	; 1265c <sf_gen_ncode+0x394>
   12640:	add	r0, pc, r0
   12644:	bl	2124 <sf_bpf_error>
   12648:	.word	0x000186b4
   1264c:	.word	0x000185c0
   12650:	.word	0x00017240
   12654:	.word	0x00017215
   12658:	.word	0x0001705c
   1265c:	.word	0x000170b2

00012660 <sf_gen_mcode6>:
   12660:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12664:	add	fp, sp, #28
   12668:	sub	sp, sp, #28
   1266c:	cmp	r1, #0
   12670:	bne	127b8 <sf_gen_mcode6+0x158>
   12674:	mov	sl, r3
   12678:	mov	r6, r2
   1267c:	mov	r5, r0
   12680:	bl	204d0 <pcap_nametoaddrinfo>
   12684:	cmp	r0, #0
   12688:	beq	127c4 <sf_gen_mcode6+0x164>
   1268c:	mov	r4, r0
   12690:	ldr	r0, [pc, #360]	; 12800 <sf_gen_mcode6+0x1a0>
   12694:	add	r0, pc, r0
   12698:	str	r4, [r0]
   1269c:	ldr	r0, [r4, #28]
   126a0:	cmp	r0, #0
   126a4:	bne	127d4 <sf_gen_mcode6+0x174>
   126a8:	cmp	r6, #129	; 0x81
   126ac:	str	r5, [sp, #4]
   126b0:	bcs	127e4 <sf_gen_mcode6+0x184>
   126b4:	ldr	r8, [r4, #20]
   126b8:	add	r7, sp, #8
   126bc:	vmov.i32	q8, #0	; 0x00000000
   126c0:	mov	r1, #255	; 0xff
   126c4:	vst1.64	{d16-d17}, [r7]
   126c8:	ubfx	r5, r6, #3, #5
   126cc:	mov	r0, r7
   126d0:	mov	r2, r5
   126d4:	add	r9, r8, #8
   126d8:	bl	f40 <memset@plt>
   126dc:	ands	r0, r6, #7
   126e0:	rsbne	r0, r0, #8
   126e4:	movne	r1, #255	; 0xff
   126e8:	lslne	r0, r1, r0
   126ec:	strbne	r0, [r7, r5]
   126f0:	ldr	r1, [sp, #8]
   126f4:	ldr	r0, [r9]
   126f8:	mvn	r1, r1
   126fc:	tst	r0, r1
   12700:	ldreq	r1, [sp, #12]
   12704:	ldreq	r0, [r8, #12]
   12708:	mvneq	r1, r1
   1270c:	tsteq	r0, r1
   12710:	bne	12738 <sf_gen_mcode6+0xd8>
   12714:	ldr	r1, [sp, #16]
   12718:	ldr	r0, [r8, #16]
   1271c:	mvn	r1, r1
   12720:	tst	r0, r1
   12724:	ldreq	r1, [sp, #20]
   12728:	ldreq	r0, [r8, #20]
   1272c:	mvneq	r1, r1
   12730:	tsteq	r0, r1
   12734:	beq	1274c <sf_gen_mcode6+0xec>
   12738:	ldr	r0, [pc, #220]	; 1281c <sf_gen_mcode6+0x1bc>
   1273c:	ldr	r1, [sp, #4]
   12740:	mov	r2, r6
   12744:	add	r0, pc, r0
   12748:	bl	2124 <sf_bpf_error>
   1274c:	uxtb	r0, sl
   12750:	cmp	r0, #2
   12754:	bcs	1276c <sf_gen_mcode6+0x10c>
   12758:	cmp	r6, #128	; 0x80
   1275c:	beq	12770 <sf_gen_mcode6+0x110>
   12760:	ldr	r0, [pc, #184]	; 12820 <sf_gen_mcode6+0x1c0>
   12764:	add	r0, pc, r0
   12768:	bl	2124 <sf_bpf_error>
   1276c:	bne	127f4 <sf_gen_mcode6+0x194>
   12770:	lsr	r2, sl, #8
   12774:	lsr	r1, sl, #16
   12778:	str	r0, [sp]
   1277c:	mov	r0, r9
   12780:	uxtb	r3, r1
   12784:	uxtb	r2, r2
   12788:	add	r1, sp, #8
   1278c:	bl	f5c8 <gen_host6>
   12790:	ldr	r1, [pc, #112]	; 12808 <sf_gen_mcode6+0x1a8>
   12794:	mov	r5, r0
   12798:	mov	r0, #0
   1279c:	add	r1, pc, r1
   127a0:	str	r0, [r1]
   127a4:	mov	r0, r4
   127a8:	bl	f94 <freeaddrinfo@plt>
   127ac:	mov	r0, r5
   127b0:	sub	sp, fp, #28
   127b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   127b8:	ldr	r0, [pc, #76]	; 1280c <sf_gen_mcode6+0x1ac>
   127bc:	add	r0, pc, r0
   127c0:	bl	2124 <sf_bpf_error>
   127c4:	ldr	r0, [pc, #68]	; 12810 <sf_gen_mcode6+0x1b0>
   127c8:	mov	r1, r5
   127cc:	add	r0, pc, r0
   127d0:	bl	2124 <sf_bpf_error>
   127d4:	ldr	r0, [pc, #56]	; 12814 <sf_gen_mcode6+0x1b4>
   127d8:	mov	r1, r5
   127dc:	add	r0, pc, r0
   127e0:	bl	2124 <sf_bpf_error>
   127e4:	ldr	r0, [pc, #44]	; 12818 <sf_gen_mcode6+0x1b8>
   127e8:	mov	r1, #128	; 0x80
   127ec:	add	r0, pc, r0
   127f0:	bl	2124 <sf_bpf_error>
   127f4:	ldr	r0, [pc, #8]	; 12804 <sf_gen_mcode6+0x1a4>
   127f8:	add	r0, pc, r0
   127fc:	bl	2124 <sf_bpf_error>
   12800:	.word	0x00034d90
   12804:	.word	0x000170e0
   12808:	.word	0x00034c88
   1280c:	.word	0x000170b6
   12810:	.word	0x000170bb
   12814:	.word	0x000170c2
   12818:	.word	0x000170d2
   1281c:	.word	0x000170bb
   12820:	.word	0x000170bb

00012824 <sf_gen_ecode>:
   12824:	push	{r4, r5, r6, sl, fp, lr}
   12828:	add	fp, sp, #16
   1282c:	sub	sp, sp, #8
   12830:	mov	r5, r0
   12834:	movw	r0, #65534	; 0xfffe
   12838:	and	r0, r1, r0
   1283c:	cmp	r0, #256	; 0x100
   12840:	bne	12b00 <sf_gen_ecode+0x2dc>
   12844:	ldr	r0, [pc, #716]	; 12b18 <sf_gen_ecode+0x2f4>
   12848:	lsr	r6, r1, #16
   1284c:	ldr	r0, [pc, r0]
   12850:	cmp	r0, #104	; 0x68
   12854:	ble	12970 <sf_gen_ecode+0x14c>
   12858:	sub	r1, r0, #105	; 0x69
   1285c:	cmp	r1, #58	; 0x3a
   12860:	bhi	129a8 <sf_gen_ecode+0x184>
   12864:	add	r0, pc, #4
   12868:	ldr	r1, [r0, r1, lsl #2]
   1286c:	add	pc, r0, r1
   12870:	.word	0x000000ec
   12874:	.word	0x0000029c
   12878:	.word	0x0000029c
   1287c:	.word	0x0000029c
   12880:	.word	0x0000029c
   12884:	.word	0x0000029c
   12888:	.word	0x0000029c
   1288c:	.word	0x0000029c
   12890:	.word	0x0000029c
   12894:	.word	0x0000029c
   12898:	.word	0x0000029c
   1289c:	.word	0x0000029c
   128a0:	.word	0x0000029c
   128a4:	.word	0x0000029c
   128a8:	.word	0x000000ec
   128ac:	.word	0x0000029c
   128b0:	.word	0x0000029c
   128b4:	.word	0x00000144
   128b8:	.word	0x00000158
   128bc:	.word	0x0000029c
   128c0:	.word	0x0000029c
   128c4:	.word	0x0000029c
   128c8:	.word	0x000000ec
   128cc:	.word	0x0000029c
   128d0:	.word	0x0000029c
   128d4:	.word	0x0000029c
   128d8:	.word	0x0000029c
   128dc:	.word	0x0000029c
   128e0:	.word	0x0000029c
   128e4:	.word	0x0000029c
   128e8:	.word	0x0000029c
   128ec:	.word	0x0000029c
   128f0:	.word	0x0000029c
   128f4:	.word	0x0000029c
   128f8:	.word	0x0000029c
   128fc:	.word	0x0000029c
   12900:	.word	0x0000029c
   12904:	.word	0x0000029c
   12908:	.word	0x0000029c
   1290c:	.word	0x0000029c
   12910:	.word	0x0000029c
   12914:	.word	0x0000029c
   12918:	.word	0x0000029c
   1291c:	.word	0x0000029c
   12920:	.word	0x0000029c
   12924:	.word	0x0000029c
   12928:	.word	0x0000029c
   1292c:	.word	0x0000029c
   12930:	.word	0x0000029c
   12934:	.word	0x0000029c
   12938:	.word	0x0000029c
   1293c:	.word	0x0000029c
   12940:	.word	0x0000029c
   12944:	.word	0x0000029c
   12948:	.word	0x0000029c
   1294c:	.word	0x0000029c
   12950:	.word	0x0000029c
   12954:	.word	0x0000029c
   12958:	.word	0x000000ec
   1295c:	uxtb	r1, r6
   12960:	mov	r0, r5
   12964:	sub	sp, fp, #16
   12968:	pop	{r4, r5, r6, sl, fp, lr}
   1296c:	b	d11c <gen_wlanhostop>
   12970:	cmp	r0, #1
   12974:	beq	12994 <sf_gen_ecode+0x170>
   12978:	cmp	r0, #6
   1297c:	bne	12abc <sf_gen_ecode+0x298>
   12980:	uxtb	r1, r6
   12984:	mov	r0, r5
   12988:	sub	sp, fp, #16
   1298c:	pop	{r4, r5, r6, sl, fp, lr}
   12990:	b	ceec <gen_thostop>
   12994:	uxtb	r1, r6
   12998:	mov	r0, r5
   1299c:	sub	sp, fp, #16
   129a0:	pop	{r4, r5, r6, sl, fp, lr}
   129a4:	b	ca54 <gen_ehostop>
   129a8:	cmp	r0, #192	; 0xc0
   129ac:	beq	1295c <sf_gen_ecode+0x138>
   129b0:	b	12b0c <sf_gen_ecode+0x2e8>
   129b4:	uxtb	r1, r6
   129b8:	mov	r0, r5
   129bc:	sub	sp, fp, #16
   129c0:	pop	{r4, r5, r6, sl, fp, lr}
   129c4:	b	f398 <gen_ipfchostop>
   129c8:	ldr	r0, [pc, #332]	; 12b1c <sf_gen_ecode+0x2f8>
   129cc:	add	r0, pc, r0
   129d0:	ldrb	r0, [r0]
   129d4:	cmp	r0, #1
   129d8:	bne	12b00 <sf_gen_ecode+0x2dc>
   129dc:	mov	r0, #1
   129e0:	mov	r1, #4
   129e4:	mov	r2, #8
   129e8:	mov	r3, #65280	; 0xff00
   129ec:	bl	a9f8 <gen_cmp>
   129f0:	mov	r4, r0
   129f4:	ldr	r0, [r0, #44]	; 0x2c
   129f8:	uxtb	r1, r6
   129fc:	clz	r0, r0
   12a00:	lsr	r0, r0, #5
   12a04:	str	r0, [r4, #44]	; 0x2c
   12a08:	mov	r0, r5
   12a0c:	bl	ca54 <gen_ehostop>
   12a10:	cmp	r4, #0
   12a14:	beq	12a48 <sf_gen_ecode+0x224>
   12a18:	ldr	r1, [r0, #96]	; 0x60
   12a1c:	mov	r2, r4
   12a20:	ldr	r3, [r2, #44]	; 0x2c
   12a24:	add	r6, r2, #84	; 0x54
   12a28:	cmp	r3, #0
   12a2c:	mov	r3, #84	; 0x54
   12a30:	movweq	r3, #60	; 0x3c
   12a34:	addeq	r6, r2, #60	; 0x3c
   12a38:	ldr	r2, [r2, r3]
   12a3c:	str	r1, [r6]
   12a40:	cmp	r2, #0
   12a44:	bne	12a20 <sf_gen_ecode+0x1fc>
   12a48:	ldr	r1, [r4, #44]	; 0x2c
   12a4c:	cmp	r0, #0
   12a50:	clz	r1, r1
   12a54:	lsr	r1, r1, #5
   12a58:	str	r1, [r4, #44]	; 0x2c
   12a5c:	ldr	r2, [r0, #44]	; 0x2c
   12a60:	clz	r1, r2
   12a64:	lsr	r1, r1, #5
   12a68:	str	r1, [r0, #44]	; 0x2c
   12a6c:	str	r0, [sp, #4]
   12a70:	beq	12ad8 <sf_gen_ecode+0x2b4>
   12a74:	cmp	r2, #0
   12a78:	mov	r2, #60	; 0x3c
   12a7c:	add	r1, r0, #60	; 0x3c
   12a80:	movweq	r2, #84	; 0x54
   12a84:	addeq	r1, r0, #84	; 0x54
   12a88:	ldr	r2, [r0, r2]
   12a8c:	cmp	r2, #0
   12a90:	beq	12adc <sf_gen_ecode+0x2b8>
   12a94:	ldr	r3, [r2, #44]	; 0x2c
   12a98:	add	r1, r2, #84	; 0x54
   12a9c:	cmp	r3, #0
   12aa0:	mov	r3, #84	; 0x54
   12aa4:	movweq	r3, #60	; 0x3c
   12aa8:	addeq	r1, r2, #60	; 0x3c
   12aac:	ldr	r2, [r2, r3]
   12ab0:	cmp	r2, #0
   12ab4:	bne	12a94 <sf_gen_ecode+0x270>
   12ab8:	b	12adc <sf_gen_ecode+0x2b8>
   12abc:	cmp	r0, #10
   12ac0:	bne	12b0c <sf_gen_ecode+0x2e8>
   12ac4:	uxtb	r1, r6
   12ac8:	mov	r0, r5
   12acc:	sub	sp, fp, #16
   12ad0:	pop	{r4, r5, r6, sl, fp, lr}
   12ad4:	b	ccbc <gen_fhostop>
   12ad8:	add	r1, sp, #4
   12adc:	str	r4, [r1]
   12ae0:	ldr	r1, [r0, #44]	; 0x2c
   12ae4:	clz	r1, r1
   12ae8:	lsr	r1, r1, #5
   12aec:	str	r1, [r0, #44]	; 0x2c
   12af0:	ldr	r1, [r4, #96]	; 0x60
   12af4:	str	r1, [r0, #96]	; 0x60
   12af8:	sub	sp, fp, #16
   12afc:	pop	{r4, r5, r6, sl, fp, pc}
   12b00:	ldr	r0, [pc, #28]	; 12b24 <sf_gen_ecode+0x300>
   12b04:	add	r0, pc, r0
   12b08:	bl	2124 <sf_bpf_error>
   12b0c:	ldr	r0, [pc, #12]	; 12b20 <sf_gen_ecode+0x2fc>
   12b10:	add	r0, pc, r0
   12b14:	bl	2124 <sf_bpf_error>
   12b18:	.word	0x00034be4
   12b1c:	.word	0x00034a68
   12b20:	.word	0x00016def
   12b24:	.word	0x00016e57

00012b28 <sf_append>:
   12b28:	mov	r2, r0
   12b2c:	ldr	r0, [r0, #16]
   12b30:	cmp	r0, #0
   12b34:	bne	12b28 <sf_append>
   12b38:	str	r1, [r2, #16]
   12b3c:	bx	lr

00012b40 <sf_gen_load>:
   12b40:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12b44:	add	fp, sp, #28
   12b48:	sub	sp, sp, #20
   12b4c:	ldr	r4, [pc, #4080]	; 13b44 <sf_gen_load+0x1004>
   12b50:	mov	r6, r0
   12b54:	mov	r8, r1
   12b58:	mvn	r0, #15
   12b5c:	ldr	r4, [pc, r4]
   12b60:	ldr	r9, [pc, #4064]	; 13b48 <sf_gen_load+0x1008>
   12b64:	ldr	sl, [pc, #4064]	; 13b4c <sf_gen_load+0x100c>
   12b68:	add	r9, pc, r9
   12b6c:	add	sl, pc, sl
   12b70:	ldr	r1, [r9, r4, lsl #2]
   12b74:	cmp	r1, #0
   12b78:	beq	12ba8 <sf_gen_load+0x68>
   12b7c:	add	r1, r4, #1
   12b80:	adds	r0, r0, #1
   12b84:	asr	r3, r1, #31
   12b88:	add	r3, r1, r3, lsr #28
   12b8c:	bic	r3, r3, #15
   12b90:	sub	r4, r1, r3
   12b94:	str	r4, [sl]
   12b98:	bne	12b70 <sf_gen_load+0x30>
   12b9c:	ldr	r0, [pc, #4012]	; 13b50 <sf_gen_load+0x1010>
   12ba0:	add	r0, pc, r0
   12ba4:	bl	2124 <sf_bpf_error>
   12ba8:	mov	r0, #1
   12bac:	cmp	r2, #1
   12bb0:	mov	r1, #0
   12bb4:	str	r0, [r9, r4, lsl #2]
   12bb8:	ldr	r0, [r8, #8]
   12bbc:	str	r1, [r9, r0, lsl #2]
   12bc0:	beq	12be4 <sf_gen_load+0xa4>
   12bc4:	cmp	r2, #2
   12bc8:	beq	12bdc <sf_gen_load+0x9c>
   12bcc:	cmp	r2, #4
   12bd0:	bne	13fb0 <sf_gen_load+0x1470>
   12bd4:	mov	r3, #64	; 0x40
   12bd8:	b	12be8 <sf_gen_load+0xa8>
   12bdc:	mov	r3, #72	; 0x48
   12be0:	b	12be8 <sf_gen_load+0xa8>
   12be4:	mov	r3, #80	; 0x50
   12be8:	sub	r0, r6, #1
   12bec:	cmp	r0, #39	; 0x27
   12bf0:	bhi	13f9c <sf_gen_load+0x145c>
   12bf4:	add	r1, pc, #8
   12bf8:	str	r3, [sp, #12]
   12bfc:	ldr	r0, [r1, r0, lsl #2]
   12c00:	add	pc, r1, r0
   12c04:	.word	0x00000f50
   12c08:	.word	0x000000a0
   12c0c:	.word	0x000000a0
   12c10:	.word	0x000000a0
   12c14:	.word	0x00000100
   12c18:	.word	0x00000100
   12c1c:	.word	0x00000100
   12c20:	.word	0x00000100
   12c24:	.word	0x00000100
   12c28:	.word	0x00000100
   12c2c:	.word	0x000000a0
   12c30:	.word	0x000000a0
   12c34:	.word	0x000000a0
   12c38:	.word	0x000000a0
   12c3c:	.word	0x000000a0
   12c40:	.word	0x000000a0
   12c44:	.word	0x000000a0
   12c48:	.word	0x000013b8
   12c4c:	.word	0x00001398
   12c50:	.word	0x00001398
   12c54:	.word	0x00000100
   12c58:	.word	0x00000100
   12c5c:	.word	0x00001398
   12c60:	.word	0x00001398
   12c64:	.word	0x00001398
   12c68:	.word	0x00001398
   12c6c:	.word	0x00001398
   12c70:	.word	0x00001398
   12c74:	.word	0x00001398
   12c78:	.word	0x00001398
   12c7c:	.word	0x00001398
   12c80:	.word	0x00001398
   12c84:	.word	0x00001398
   12c88:	.word	0x00001398
   12c8c:	.word	0x00001398
   12c90:	.word	0x00001398
   12c94:	.word	0x00001398
   12c98:	.word	0x00001398
   12c9c:	.word	0x00001398
   12ca0:	.word	0x00000eb0
   12ca4:	ldr	r0, [pc, #4024]	; 13c64 <sf_gen_load+0x1124>
   12ca8:	str	r6, [sp, #4]
   12cac:	add	r0, pc, r0
   12cb0:	ldrb	r0, [r0]
   12cb4:	cmp	r0, #0
   12cb8:	beq	12d84 <sf_gen_load+0x244>
   12cbc:	ldr	r7, [pc, #4080]	; 13cb4 <sf_gen_load+0x1174>
   12cc0:	ldr	r7, [pc, r7]
   12cc4:	cmn	r7, #1
   12cc8:	bne	13074 <sf_gen_load+0x534>
   12ccc:	mvn	r0, #15
   12cd0:	mov	r7, r4
   12cd4:	ldr	r1, [r9, r7, lsl #2]
   12cd8:	cmp	r1, #0
   12cdc:	beq	13060 <sf_gen_load+0x520>
   12ce0:	add	r1, r7, #1
   12ce4:	adds	r0, r0, #1
   12ce8:	asr	r2, r1, #31
   12cec:	add	r2, r1, r2, lsr #28
   12cf0:	bic	r2, r2, #15
   12cf4:	sub	r7, r1, r2
   12cf8:	str	r7, [sl]
   12cfc:	bne	12cd4 <sf_gen_load+0x194>
   12d00:	b	12b9c <sf_gen_load+0x5c>
   12d04:	str	r6, [sp, #4]
   12d08:	bl	144c0 <gen_loadx_iphdrlen>
   12d0c:	ldr	r2, [pc, #4004]	; 13cb8 <sf_gen_load+0x1178>
   12d10:	ldr	r2, [pc, r2]
   12d14:	ldr	r5, [pc, #4092]	; 13d18 <sf_gen_load+0x11d8>
   12d18:	str	r0, [sp]
   12d1c:	add	r5, pc, r5
   12d20:	ldr	r7, [r5, r2, lsl #3]!
   12d24:	cmp	r7, #19
   12d28:	bhi	12d90 <sf_gen_load+0x250>
   12d2c:	ldr	r1, [pc, #4072]	; 13d1c <sf_gen_load+0x11dc>
   12d30:	add	r6, r2, #1
   12d34:	cmp	r2, #15
   12d38:	add	r1, pc, r1
   12d3c:	str	r6, [r1]
   12d40:	bge	13f90 <sf_gen_load+0x1450>
   12d44:	mov	r0, #1024	; 0x400
   12d48:	lsl	r7, r0, r6
   12d4c:	mov	r0, r7
   12d50:	bl	ed4 <malloc@plt>
   12d54:	cmp	r0, #0
   12d58:	str	r0, [r5, #12]
   12d5c:	beq	13f90 <sf_gen_load+0x1450>
   12d60:	mov	r1, #0
   12d64:	mov	r2, r7
   12d68:	add	r5, r5, #8
   12d6c:	bl	f40 <memset@plt>
   12d70:	ldr	r0, [sp]
   12d74:	cmp	r7, #19
   12d78:	str	r7, [r5]
   12d7c:	bhi	12d94 <sf_gen_load+0x254>
   12d80:	b	13f90 <sf_gen_load+0x1450>
   12d84:	ldr	sl, [pc, #3988]	; 13d20 <sf_gen_load+0x11e0>
   12d88:	ldr	sl, [pc, sl]
   12d8c:	b	1317c <sf_gen_load+0x63c>
   12d90:	mov	r6, r2
   12d94:	sub	r1, r7, #20
   12d98:	mov	r2, #96	; 0x60
   12d9c:	str	r1, [r5]
   12da0:	ldr	r3, [r5, #4]
   12da4:	str	r2, [r3, r1]!
   12da8:	mov	r2, r0
   12dac:	str	r8, [sp, #8]
   12db0:	ldr	r1, [r8, #8]
   12db4:	str	r1, [r3, #12]
   12db8:	mov	r1, r2
   12dbc:	ldr	r2, [r2, #16]
   12dc0:	cmp	r2, #0
   12dc4:	bne	12db8 <sf_gen_load+0x278>
   12dc8:	str	r3, [r1, #16]
   12dcc:	ldr	r8, [pc, #4080]	; 13dc4 <sf_gen_load+0x1284>
   12dd0:	add	r8, pc, r8
   12dd4:	ldr	r7, [r8, r6, lsl #3]!
   12dd8:	cmp	r7, #19
   12ddc:	bhi	12e38 <sf_gen_load+0x2f8>
   12de0:	ldr	r0, [pc, #4064]	; 13dc8 <sf_gen_load+0x1288>
   12de4:	add	r5, r6, #1
   12de8:	cmp	r6, #15
   12dec:	add	r0, pc, r0
   12df0:	str	r5, [r0]
   12df4:	bge	13f90 <sf_gen_load+0x1450>
   12df8:	mov	r0, #1024	; 0x400
   12dfc:	lsl	r7, r0, r5
   12e00:	mov	r0, r7
   12e04:	bl	ed4 <malloc@plt>
   12e08:	cmp	r0, #0
   12e0c:	str	r0, [r8, #12]
   12e10:	beq	13f90 <sf_gen_load+0x1450>
   12e14:	mov	r1, #0
   12e18:	mov	r2, r7
   12e1c:	add	r8, r8, #8
   12e20:	bl	f40 <memset@plt>
   12e24:	ldr	r0, [sp]
   12e28:	cmp	r7, #19
   12e2c:	str	r7, [r8]
   12e30:	bhi	12e3c <sf_gen_load+0x2fc>
   12e34:	b	13f90 <sf_gen_load+0x1450>
   12e38:	mov	r5, r6
   12e3c:	sub	r1, r7, #20
   12e40:	mov	r2, #12
   12e44:	str	r1, [r8]
   12e48:	ldr	r3, [r8, #4]
   12e4c:	str	r2, [r3, r1]!
   12e50:	mov	r2, r0
   12e54:	mov	r1, r2
   12e58:	ldr	r2, [r2, #16]
   12e5c:	cmp	r2, #0
   12e60:	bne	12e54 <sf_gen_load+0x314>
   12e64:	str	r3, [r1, #16]
   12e68:	ldr	r6, [pc, #4080]	; 13e60 <sf_gen_load+0x1320>
   12e6c:	add	r6, pc, r6
   12e70:	ldr	r7, [r6, r5, lsl #3]!
   12e74:	cmp	r7, #19
   12e78:	bhi	12ed4 <sf_gen_load+0x394>
   12e7c:	ldr	r0, [pc, #4064]	; 13e64 <sf_gen_load+0x1324>
   12e80:	add	r8, r5, #1
   12e84:	cmp	r5, #15
   12e88:	add	r0, pc, r0
   12e8c:	str	r8, [r0]
   12e90:	bge	13f90 <sf_gen_load+0x1450>
   12e94:	mov	r0, #1024	; 0x400
   12e98:	lsl	r7, r0, r8
   12e9c:	mov	r0, r7
   12ea0:	bl	ed4 <malloc@plt>
   12ea4:	cmp	r0, #0
   12ea8:	str	r0, [r6, #12]
   12eac:	beq	13f90 <sf_gen_load+0x1450>
   12eb0:	mov	r1, #0
   12eb4:	mov	r2, r7
   12eb8:	add	r6, r6, #8
   12ebc:	bl	f40 <memset@plt>
   12ec0:	ldr	r0, [sp]
   12ec4:	cmp	r7, #19
   12ec8:	str	r7, [r6]
   12ecc:	bhi	12ed8 <sf_gen_load+0x398>
   12ed0:	b	13f90 <sf_gen_load+0x1450>
   12ed4:	mov	r8, r5
   12ed8:	sub	r1, r7, #20
   12edc:	mov	r2, #7
   12ee0:	str	r1, [r6]
   12ee4:	ldr	r3, [r6, #4]
   12ee8:	str	r2, [r3, r1]!
   12eec:	mov	r2, r0
   12ef0:	mov	r1, r2
   12ef4:	ldr	r2, [r2, #16]
   12ef8:	cmp	r2, #0
   12efc:	bne	12ef0 <sf_gen_load+0x3b0>
   12f00:	str	r3, [r1, #16]
   12f04:	ldr	r5, [pc, #4004]	; 13eb0 <sf_gen_load+0x1370>
   12f08:	add	r5, pc, r5
   12f0c:	ldr	r7, [r5, r8, lsl #3]!
   12f10:	cmp	r7, #19
   12f14:	bhi	12f74 <sf_gen_load+0x434>
   12f18:	ldr	r1, [pc, #3988]	; 13eb4 <sf_gen_load+0x1374>
   12f1c:	add	r0, r8, #1
   12f20:	cmp	r8, #15
   12f24:	add	r1, pc, r1
   12f28:	str	r0, [r1]
   12f2c:	bge	13f90 <sf_gen_load+0x1450>
   12f30:	mov	r1, #1024	; 0x400
   12f34:	lsl	r7, r1, r0
   12f38:	mov	r0, r7
   12f3c:	bl	ed4 <malloc@plt>
   12f40:	ldr	r6, [sp, #8]
   12f44:	cmp	r0, #0
   12f48:	str	r0, [r5, #12]
   12f4c:	beq	13f90 <sf_gen_load+0x1450>
   12f50:	mov	r1, #0
   12f54:	mov	r2, r7
   12f58:	add	r5, r5, #8
   12f5c:	bl	f40 <memset@plt>
   12f60:	ldr	r0, [sp]
   12f64:	cmp	r7, #19
   12f68:	str	r7, [r5]
   12f6c:	bhi	12f78 <sf_gen_load+0x438>
   12f70:	b	13f90 <sf_gen_load+0x1450>
   12f74:	ldr	r6, [sp, #8]
   12f78:	sub	r1, r7, #20
   12f7c:	ldr	r2, [sp, #12]
   12f80:	str	r1, [r5]
   12f84:	ldr	r3, [r5, #4]
   12f88:	str	r2, [r3, r1]!
   12f8c:	mov	r2, r0
   12f90:	mov	r1, r2
   12f94:	ldr	r2, [r2, #16]
   12f98:	cmp	r2, #0
   12f9c:	bne	12f90 <sf_gen_load+0x450>
   12fa0:	str	r3, [r1, #16]
   12fa4:	ldr	r1, [pc, #4092]	; 13fa8 <sf_gen_load+0x1468>
   12fa8:	ldr	r1, [pc, r1]
   12fac:	ldr	r2, [pc, #4088]	; 13fac <sf_gen_load+0x146c>
   12fb0:	ldr	r2, [pc, r2]
   12fb4:	add	r1, r2, r1
   12fb8:	str	r1, [r3, #12]
   12fbc:	ldr	r2, [r6, #4]
   12fc0:	mov	r1, r2
   12fc4:	ldr	r2, [r2, #16]
   12fc8:	cmp	r2, #0
   12fcc:	bne	12fc0 <sf_gen_load+0x480>
   12fd0:	str	r0, [r1, #16]
   12fd4:	ldr	r0, [sp, #4]
   12fd8:	bl	5830 <sf_gen_proto_abbrev>
   12fdc:	ldr	r1, [pc, #4068]	; 13fc8 <sf_gen_load+0x1488>
   12fe0:	add	r1, pc, r1
   12fe4:	ldrb	r2, [r1]
   12fe8:	ldr	r1, [pc, #4060]	; 13fcc <sf_gen_load+0x148c>
   12fec:	ldr	r1, [pc, r1]
   12ff0:	cmp	r2, #0
   12ff4:	str	r0, [sp, #12]
   12ff8:	add	ip, r1, #6
   12ffc:	beq	1304c <sf_gen_load+0x50c>
   13000:	ldr	r5, [pc, #4040]	; 13fd0 <sf_gen_load+0x1490>
   13004:	ldr	r5, [pc, r5]
   13008:	cmn	r5, #1
   1300c:	bne	1352c <sf_gen_load+0x9ec>
   13010:	ldr	r5, [pc, #4028]	; 13fd4 <sf_gen_load+0x1494>
   13014:	mvn	r3, #15
   13018:	ldr	r5, [pc, r5]
   1301c:	ldr	r1, [r9, r5, lsl #2]
   13020:	cmp	r1, #0
   13024:	beq	13518 <sf_gen_load+0x9d8>
   13028:	add	r1, r5, #1
   1302c:	adds	r3, r3, #1
   13030:	asr	r2, r1, #31
   13034:	add	r2, r1, r2, lsr #28
   13038:	bic	r2, r2, #15
   1303c:	sub	r5, r1, r2
   13040:	str	r5, [sl]
   13044:	bne	1301c <sf_gen_load+0x4dc>
   13048:	b	12b9c <sf_gen_load+0x5c>
   1304c:	ldr	r9, [pc, #4092]	; 14050 <sf_gen_load+0x1510>
   13050:	ldr	r9, [pc, r9]
   13054:	ldr	sl, [pc, #4088]	; 14054 <sf_gen_load+0x1514>
   13058:	add	sl, pc, sl
   1305c:	b	13638 <sf_gen_load+0xaf8>
   13060:	mov	r0, #1
   13064:	str	r0, [r9, r7, lsl #2]
   13068:	ldr	r0, [pc, #4004]	; 14014 <sf_gen_load+0x14d4>
   1306c:	add	r0, pc, r0
   13070:	str	r7, [r0]
   13074:	ldr	r0, [pc, #3996]	; 14018 <sf_gen_load+0x14d8>
   13078:	ldr	r0, [pc, r0]
   1307c:	ldr	r5, [pc, #3992]	; 1401c <sf_gen_load+0x14dc>
   13080:	add	r5, pc, r5
   13084:	ldr	r6, [r5, r0, lsl #3]!
   13088:	cmp	r6, #19
   1308c:	bhi	130e4 <sf_gen_load+0x5a4>
   13090:	ldr	r1, [pc, #3976]	; 14020 <sf_gen_load+0x14e0>
   13094:	add	sl, r0, #1
   13098:	cmp	r0, #15
   1309c:	add	r1, pc, r1
   130a0:	str	sl, [r1]
   130a4:	bge	13f90 <sf_gen_load+0x1450>
   130a8:	mov	r0, #1024	; 0x400
   130ac:	lsl	r6, r0, sl
   130b0:	mov	r0, r6
   130b4:	bl	ed4 <malloc@plt>
   130b8:	cmp	r0, #0
   130bc:	str	r0, [r5, #12]
   130c0:	beq	13f90 <sf_gen_load+0x1450>
   130c4:	mov	r1, #0
   130c8:	mov	r2, r6
   130cc:	add	r5, r5, #8
   130d0:	bl	f40 <memset@plt>
   130d4:	cmp	r6, #19
   130d8:	str	r6, [r5]
   130dc:	bhi	130e8 <sf_gen_load+0x5a8>
   130e0:	b	13f90 <sf_gen_load+0x1450>
   130e4:	mov	sl, r0
   130e8:	sub	r0, r6, #20
   130ec:	mov	r1, #97	; 0x61
   130f0:	str	r0, [r5]
   130f4:	ldr	r9, [r5, #4]
   130f8:	str	r1, [r9, r0]!
   130fc:	cmp	r9, #0
   13100:	str	r7, [r9, #12]
   13104:	beq	1317c <sf_gen_load+0x63c>
   13108:	str	r8, [sp, #8]
   1310c:	ldr	r7, [pc, #3856]	; 14024 <sf_gen_load+0x14e4>
   13110:	add	r7, pc, r7
   13114:	ldr	r6, [r7, sl, lsl #3]!
   13118:	cmp	r6, #19
   1311c:	bhi	13208 <sf_gen_load+0x6c8>
   13120:	ldr	r0, [pc, #3844]	; 1402c <sf_gen_load+0x14ec>
   13124:	add	r8, sl, #1
   13128:	cmp	sl, #15
   1312c:	add	r0, pc, r0
   13130:	str	r8, [r0]
   13134:	bge	13f90 <sf_gen_load+0x1450>
   13138:	mov	r0, #1024	; 0x400
   1313c:	lsl	r6, r0, r8
   13140:	mov	r0, r6
   13144:	bl	ed4 <malloc@plt>
   13148:	str	r0, [r7, #12]
   1314c:	cmp	r0, #0
   13150:	ldr	sl, [pc, #3800]	; 14030 <sf_gen_load+0x14f0>
   13154:	add	sl, pc, sl
   13158:	beq	13f90 <sf_gen_load+0x1450>
   1315c:	mov	r1, #0
   13160:	mov	r2, r6
   13164:	add	r7, r7, #8
   13168:	bl	f40 <memset@plt>
   1316c:	cmp	r6, #19
   13170:	str	r6, [r7]
   13174:	bhi	13214 <sf_gen_load+0x6d4>
   13178:	b	13f90 <sf_gen_load+0x1450>
   1317c:	ldr	r7, [pc, #3724]	; 14010 <sf_gen_load+0x14d0>
   13180:	add	r7, pc, r7
   13184:	ldr	r6, [r7, sl, lsl #3]!
   13188:	cmp	r6, #19
   1318c:	bhi	131e4 <sf_gen_load+0x6a4>
   13190:	ldr	r0, [pc, #3748]	; 1403c <sf_gen_load+0x14fc>
   13194:	add	r5, sl, #1
   13198:	cmp	sl, #15
   1319c:	add	r0, pc, r0
   131a0:	str	r5, [r0]
   131a4:	bge	13f90 <sf_gen_load+0x1450>
   131a8:	mov	r0, #1024	; 0x400
   131ac:	lsl	r6, r0, r5
   131b0:	mov	r0, r6
   131b4:	bl	ed4 <malloc@plt>
   131b8:	cmp	r0, #0
   131bc:	str	r0, [r7, #12]
   131c0:	beq	13f90 <sf_gen_load+0x1450>
   131c4:	mov	r1, #0
   131c8:	mov	r2, r6
   131cc:	add	r7, r7, #8
   131d0:	bl	f40 <memset@plt>
   131d4:	cmp	r6, #19
   131d8:	str	r6, [r7]
   131dc:	bhi	131e8 <sf_gen_load+0x6a8>
   131e0:	b	13f90 <sf_gen_load+0x1450>
   131e4:	mov	r5, sl
   131e8:	sub	r0, r6, #20
   131ec:	mov	r1, #97	; 0x61
   131f0:	str	r0, [r7]
   131f4:	ldr	r9, [r7, #4]
   131f8:	str	r1, [r9, r0]!
   131fc:	ldr	r0, [r8, #8]
   13200:	str	r0, [r9, #12]
   13204:	b	13378 <sf_gen_load+0x838>
   13208:	mov	r8, sl
   1320c:	ldr	sl, [pc, #3604]	; 14028 <sf_gen_load+0x14e8>
   13210:	add	sl, pc, sl
   13214:	sub	r1, r6, #20
   13218:	mov	r2, #96	; 0x60
   1321c:	str	r1, [r7]
   13220:	ldr	r0, [r7, #4]
   13224:	str	r2, [r0, r1]!
   13228:	mov	r2, r9
   1322c:	ldr	r1, [sp, #8]
   13230:	ldr	r1, [r1, #8]
   13234:	str	r1, [r0, #12]
   13238:	mov	r1, r2
   1323c:	ldr	r2, [r2, #16]
   13240:	cmp	r2, #0
   13244:	bne	13238 <sf_gen_load+0x6f8>
   13248:	str	r0, [r1, #16]
   1324c:	mov	r5, sl
   13250:	ldr	r6, [r5, r8, lsl #3]!
   13254:	cmp	r6, #19
   13258:	bhi	132b4 <sf_gen_load+0x774>
   1325c:	ldr	r0, [pc, #3536]	; 14034 <sf_gen_load+0x14f4>
   13260:	add	r7, r8, #1
   13264:	cmp	r8, #15
   13268:	add	r0, pc, r0
   1326c:	str	r7, [r0]
   13270:	bge	13f90 <sf_gen_load+0x1450>
   13274:	mov	r0, #1024	; 0x400
   13278:	lsl	r6, r0, r7
   1327c:	mov	r0, r6
   13280:	bl	ed4 <malloc@plt>
   13284:	ldr	r8, [sp, #8]
   13288:	cmp	r0, #0
   1328c:	str	r0, [r5, #12]
   13290:	beq	13f90 <sf_gen_load+0x1450>
   13294:	mov	r1, #0
   13298:	mov	r2, r6
   1329c:	add	r5, r5, #8
   132a0:	bl	f40 <memset@plt>
   132a4:	cmp	r6, #19
   132a8:	str	r6, [r5]
   132ac:	bhi	132bc <sf_gen_load+0x77c>
   132b0:	b	13f90 <sf_gen_load+0x1450>
   132b4:	mov	r7, r8
   132b8:	ldr	r8, [sp, #8]
   132bc:	sub	r1, r6, #20
   132c0:	mov	r2, #12
   132c4:	str	r1, [r5]
   132c8:	ldr	r0, [r5, #4]
   132cc:	str	r2, [r0, r1]!
   132d0:	mov	r2, r9
   132d4:	mov	r1, r2
   132d8:	ldr	r2, [r2, #16]
   132dc:	cmp	r2, #0
   132e0:	bne	132d4 <sf_gen_load+0x794>
   132e4:	str	r0, [r1, #16]
   132e8:	ldr	r6, [sl, r7, lsl #3]!
   132ec:	cmp	r6, #19
   132f0:	bhi	13348 <sf_gen_load+0x808>
   132f4:	ldr	r0, [pc, #3388]	; 14038 <sf_gen_load+0x14f8>
   132f8:	add	r5, r7, #1
   132fc:	cmp	r7, #15
   13300:	add	r0, pc, r0
   13304:	str	r5, [r0]
   13308:	bge	13f90 <sf_gen_load+0x1450>
   1330c:	mov	r0, #1024	; 0x400
   13310:	lsl	r6, r0, r5
   13314:	mov	r0, r6
   13318:	bl	ed4 <malloc@plt>
   1331c:	cmp	r0, #0
   13320:	str	r0, [sl, #12]
   13324:	beq	13f90 <sf_gen_load+0x1450>
   13328:	mov	r1, #0
   1332c:	mov	r2, r6
   13330:	add	sl, sl, #8
   13334:	bl	f40 <memset@plt>
   13338:	cmp	r6, #19
   1333c:	str	r6, [sl]
   13340:	bhi	1334c <sf_gen_load+0x80c>
   13344:	b	13f90 <sf_gen_load+0x1450>
   13348:	mov	r5, r7
   1334c:	sub	r1, r6, #20
   13350:	mov	r2, #7
   13354:	str	r1, [sl]
   13358:	ldr	r0, [sl, #4]
   1335c:	str	r2, [r0, r1]!
   13360:	mov	r2, r9
   13364:	mov	r1, r2
   13368:	ldr	r2, [r2, #16]
   1336c:	cmp	r2, #0
   13370:	bne	13364 <sf_gen_load+0x824>
   13374:	str	r0, [r1, #16]
   13378:	ldr	r7, [pc, #3264]	; 14040 <sf_gen_load+0x1500>
   1337c:	add	r7, pc, r7
   13380:	ldr	r6, [r7, r5, lsl #3]!
   13384:	cmp	r6, #19
   13388:	bhi	133dc <sf_gen_load+0x89c>
   1338c:	ldr	r1, [pc, #3248]	; 14044 <sf_gen_load+0x1504>
   13390:	add	r0, r5, #1
   13394:	cmp	r5, #15
   13398:	add	r1, pc, r1
   1339c:	str	r0, [r1]
   133a0:	bge	13f90 <sf_gen_load+0x1450>
   133a4:	mov	r1, #1024	; 0x400
   133a8:	lsl	r6, r1, r0
   133ac:	mov	r0, r6
   133b0:	bl	ed4 <malloc@plt>
   133b4:	cmp	r0, #0
   133b8:	str	r0, [r7, #12]
   133bc:	beq	13f90 <sf_gen_load+0x1450>
   133c0:	mov	r1, #0
   133c4:	mov	r2, r6
   133c8:	add	r7, r7, #8
   133cc:	bl	f40 <memset@plt>
   133d0:	cmp	r6, #19
   133d4:	str	r6, [r7]
   133d8:	bls	13f90 <sf_gen_load+0x1450>
   133dc:	sub	r1, r6, #20
   133e0:	ldr	r2, [sp, #12]
   133e4:	str	r1, [r7]
   133e8:	ldr	r0, [r7, #4]
   133ec:	str	r2, [r0, r1]!
   133f0:	ldr	r1, [pc, #3152]	; 14048 <sf_gen_load+0x1508>
   133f4:	ldr	r1, [pc, r1]
   133f8:	ldr	r2, [pc, #3148]	; 1404c <sf_gen_load+0x150c>
   133fc:	ldr	r2, [pc, r2]
   13400:	add	r1, r2, r1
   13404:	mov	r2, r9
   13408:	str	r1, [r0, #12]
   1340c:	mov	r1, r2
   13410:	ldr	r2, [r2, #16]
   13414:	cmp	r2, #0
   13418:	bne	1340c <sf_gen_load+0x8cc>
   1341c:	str	r0, [r1, #16]
   13420:	ldr	r0, [sp, #4]
   13424:	ldr	r2, [r8, #4]
   13428:	mov	r1, r2
   1342c:	ldr	r2, [r2, #16]
   13430:	cmp	r2, #0
   13434:	bne	13428 <sf_gen_load+0x8e8>
   13438:	str	r9, [r1, #16]
   1343c:	bl	5830 <sf_gen_proto_abbrev>
   13440:	ldr	r1, [r8]
   13444:	cmp	r1, #0
   13448:	beq	13510 <sf_gen_load+0x9d0>
   1344c:	ldr	r2, [r0, #96]	; 0x60
   13450:	mov	r3, r1
   13454:	ldr	r7, [r3, #44]	; 0x2c
   13458:	add	r6, r3, #84	; 0x54
   1345c:	cmp	r7, #0
   13460:	mov	r7, #84	; 0x54
   13464:	movweq	r7, #60	; 0x3c
   13468:	addeq	r6, r3, #60	; 0x3c
   1346c:	ldr	r3, [r3, r7]
   13470:	str	r2, [r6]
   13474:	cmp	r3, #0
   13478:	bne	13454 <sf_gen_load+0x914>
   1347c:	ldr	r2, [r1, #44]	; 0x2c
   13480:	cmp	r0, #0
   13484:	clz	r2, r2
   13488:	lsr	r2, r2, #5
   1348c:	str	r2, [r1, #44]	; 0x2c
   13490:	ldr	r3, [r0, #44]	; 0x2c
   13494:	clz	r2, r3
   13498:	lsr	r2, r2, #5
   1349c:	str	r2, [r0, #44]	; 0x2c
   134a0:	str	r0, [sp, #16]
   134a4:	beq	134f0 <sf_gen_load+0x9b0>
   134a8:	cmp	r3, #0
   134ac:	mov	r3, #60	; 0x3c
   134b0:	add	r2, r0, #60	; 0x3c
   134b4:	movweq	r3, #84	; 0x54
   134b8:	addeq	r2, r0, #84	; 0x54
   134bc:	ldr	r3, [r0, r3]
   134c0:	cmp	r3, #0
   134c4:	beq	134f4 <sf_gen_load+0x9b4>
   134c8:	ldr	r7, [r3, #44]	; 0x2c
   134cc:	add	r2, r3, #84	; 0x54
   134d0:	cmp	r7, #0
   134d4:	mov	r7, #84	; 0x54
   134d8:	movweq	r7, #60	; 0x3c
   134dc:	addeq	r2, r3, #60	; 0x3c
   134e0:	ldr	r3, [r3, r7]
   134e4:	cmp	r3, #0
   134e8:	bne	134c8 <sf_gen_load+0x988>
   134ec:	b	134f4 <sf_gen_load+0x9b4>
   134f0:	add	r2, sp, #16
   134f4:	str	r1, [r2]
   134f8:	ldr	r2, [r0, #44]	; 0x2c
   134fc:	clz	r2, r2
   13500:	lsr	r2, r2, #5
   13504:	str	r2, [r0, #44]	; 0x2c
   13508:	ldr	r1, [r1, #96]	; 0x60
   1350c:	str	r1, [r0, #96]	; 0x60
   13510:	str	r0, [r8]
   13514:	b	13a08 <sf_gen_load+0xec8>
   13518:	mov	r1, #1
   1351c:	str	r1, [r9, r5, lsl #2]
   13520:	ldr	r1, [pc, #2864]	; 14058 <sf_gen_load+0x1518>
   13524:	add	r1, pc, r1
   13528:	str	r5, [r1]
   1352c:	ldr	r0, [pc, #2856]	; 1405c <sf_gen_load+0x151c>
   13530:	ldr	r0, [pc, r0]
   13534:	ldr	sl, [pc, #2852]	; 14060 <sf_gen_load+0x1520>
   13538:	add	sl, pc, sl
   1353c:	mov	r7, sl
   13540:	ldr	r6, [r7, r0, lsl #3]!
   13544:	cmp	r6, #19
   13548:	bhi	135a8 <sf_gen_load+0xa68>
   1354c:	ldr	r1, [pc, #2832]	; 14064 <sf_gen_load+0x1524>
   13550:	add	r9, r0, #1
   13554:	cmp	r0, #15
   13558:	add	r1, pc, r1
   1355c:	str	r9, [r1]
   13560:	bge	13f90 <sf_gen_load+0x1450>
   13564:	mov	r0, #1024	; 0x400
   13568:	mov	r8, ip
   1356c:	lsl	r6, r0, r9
   13570:	mov	r0, r6
   13574:	bl	ed4 <malloc@plt>
   13578:	cmp	r0, #0
   1357c:	str	r0, [r7, #12]
   13580:	beq	13f90 <sf_gen_load+0x1450>
   13584:	mov	r1, #0
   13588:	mov	r2, r6
   1358c:	add	r7, r7, #8
   13590:	bl	f40 <memset@plt>
   13594:	cmp	r6, #19
   13598:	mov	ip, r8
   1359c:	str	r6, [r7]
   135a0:	bhi	135ac <sf_gen_load+0xa6c>
   135a4:	b	13f90 <sf_gen_load+0x1450>
   135a8:	mov	r9, r0
   135ac:	sub	r0, r6, #20
   135b0:	mov	r1, #97	; 0x61
   135b4:	str	r0, [r7]
   135b8:	ldr	r7, [r7, #4]
   135bc:	str	r1, [r7, r0]!
   135c0:	cmp	r7, #0
   135c4:	str	r5, [r7, #12]
   135c8:	beq	13638 <sf_gen_load+0xaf8>
   135cc:	mov	r5, sl
   135d0:	ldr	r6, [r5, r9, lsl #3]!
   135d4:	cmp	r6, #19
   135d8:	bhi	136d0 <sf_gen_load+0xb90>
   135dc:	str	ip, [sp, #4]
   135e0:	add	r8, r9, #1
   135e4:	cmp	r9, #15
   135e8:	ldr	r0, [pc, #2680]	; 14068 <sf_gen_load+0x1528>
   135ec:	add	r0, pc, r0
   135f0:	str	r8, [r0]
   135f4:	bge	13f90 <sf_gen_load+0x1450>
   135f8:	mov	r0, #1024	; 0x400
   135fc:	lsl	r6, r0, r8
   13600:	mov	r0, r6
   13604:	bl	ed4 <malloc@plt>
   13608:	cmp	r0, #0
   1360c:	str	r0, [r5, #12]
   13610:	beq	13f90 <sf_gen_load+0x1450>
   13614:	mov	r1, #0
   13618:	mov	r2, r6
   1361c:	add	r5, r5, #8
   13620:	bl	f40 <memset@plt>
   13624:	ldr	ip, [sp, #4]
   13628:	cmp	r6, #19
   1362c:	str	r6, [r5]
   13630:	bhi	136d4 <sf_gen_load+0xb94>
   13634:	b	13f90 <sf_gen_load+0x1450>
   13638:	mov	r5, sl
   1363c:	ldr	r6, [r5, r9, lsl #3]!
   13640:	cmp	r6, #19
   13644:	bhi	136a4 <sf_gen_load+0xb64>
   13648:	ldr	r0, [pc, #2588]	; 1406c <sf_gen_load+0x152c>
   1364c:	add	r8, r9, #1
   13650:	cmp	r9, #15
   13654:	add	r0, pc, r0
   13658:	str	r8, [r0]
   1365c:	bge	13f90 <sf_gen_load+0x1450>
   13660:	mov	r0, #1024	; 0x400
   13664:	mov	r7, ip
   13668:	lsl	r6, r0, r8
   1366c:	mov	r0, r6
   13670:	bl	ed4 <malloc@plt>
   13674:	cmp	r0, #0
   13678:	str	r0, [r5, #12]
   1367c:	beq	13f90 <sf_gen_load+0x1450>
   13680:	mov	r1, #0
   13684:	mov	r2, r6
   13688:	add	r5, r5, #8
   1368c:	bl	f40 <memset@plt>
   13690:	cmp	r6, #19
   13694:	mov	ip, r7
   13698:	str	r6, [r5]
   1369c:	bhi	136a8 <sf_gen_load+0xb68>
   136a0:	b	13f90 <sf_gen_load+0x1450>
   136a4:	mov	r8, r9
   136a8:	sub	r0, r6, #20
   136ac:	mov	r1, #40	; 0x28
   136b0:	str	r0, [r5]
   136b4:	ldr	r7, [r5, #4]
   136b8:	str	r1, [r7, r0]!
   136bc:	ldr	r0, [pc, #2476]	; 14070 <sf_gen_load+0x1530>
   136c0:	ldr	r0, [pc, r0]
   136c4:	add	r0, r0, ip
   136c8:	str	r0, [r7, #12]
   136cc:	b	13704 <sf_gen_load+0xbc4>
   136d0:	mov	r8, r9
   136d4:	sub	r1, r6, #20
   136d8:	mov	r2, #72	; 0x48
   136dc:	str	r1, [r5]
   136e0:	ldr	r0, [r5, #4]
   136e4:	str	r2, [r0, r1]!
   136e8:	mov	r2, r7
   136ec:	str	ip, [r0, #12]
   136f0:	mov	r1, r2
   136f4:	ldr	r2, [r2, #16]
   136f8:	cmp	r2, #0
   136fc:	bne	136f0 <sf_gen_load+0xbb0>
   13700:	str	r0, [r1, #16]
   13704:	ldr	r6, [sl, r8, lsl #3]!
   13708:	cmp	r6, #207	; 0xcf
   1370c:	bhi	13768 <sf_gen_load+0xc28>
   13710:	ldr	r1, [pc, #2396]	; 14074 <sf_gen_load+0x1534>
   13714:	add	r0, r8, #1
   13718:	cmp	r8, #15
   1371c:	add	r1, pc, r1
   13720:	str	r0, [r1]
   13724:	bge	13f90 <sf_gen_load+0x1450>
   13728:	mov	r1, #1024	; 0x400
   1372c:	lsl	r6, r1, r0
   13730:	mov	r0, r6
   13734:	bl	ed4 <malloc@plt>
   13738:	ldr	r8, [sp, #8]
   1373c:	cmp	r0, #0
   13740:	str	r0, [sl, #12]
   13744:	beq	13f90 <sf_gen_load+0x1450>
   13748:	mov	r1, #0
   1374c:	mov	r2, r6
   13750:	add	sl, sl, #8
   13754:	bl	f40 <memset@plt>
   13758:	cmp	r6, #207	; 0xcf
   1375c:	str	r6, [sl]
   13760:	bhi	1376c <sf_gen_load+0xc2c>
   13764:	b	13f90 <sf_gen_load+0x1450>
   13768:	ldr	r8, [sp, #8]
   1376c:	sub	r0, r6, #208	; 0xd0
   13770:	ldr	r3, [sp, #12]
   13774:	str	r0, [sl]
   13778:	ldr	r1, [sl, #4]
   1377c:	cmp	r3, #0
   13780:	add	r5, r1, r0
   13784:	movw	r1, #8191	; 0x1fff
   13788:	mov	r0, #69	; 0x45
   1378c:	str	r1, [r5, #20]
   13790:	str	r7, [r5, #4]
   13794:	str	r0, [r5, #8]
   13798:	ldr	r0, [r5, #44]	; 0x2c
   1379c:	clz	r0, r0
   137a0:	lsr	r0, r0, #5
   137a4:	str	r0, [r5, #44]	; 0x2c
   137a8:	str	r5, [r5, #96]	; 0x60
   137ac:	beq	137dc <sf_gen_load+0xc9c>
   137b0:	mov	r0, r3
   137b4:	ldr	r1, [r0, #44]	; 0x2c
   137b8:	add	r2, r0, #84	; 0x54
   137bc:	cmp	r1, #0
   137c0:	mov	r1, #84	; 0x54
   137c4:	movweq	r1, #60	; 0x3c
   137c8:	addeq	r2, r0, #60	; 0x3c
   137cc:	ldr	r0, [r0, r1]
   137d0:	str	r5, [r2]
   137d4:	cmp	r0, #0
   137d8:	bne	137b4 <sf_gen_load+0xc74>
   137dc:	ldr	r0, [r3, #44]	; 0x2c
   137e0:	cmp	r5, #0
   137e4:	clz	r0, r0
   137e8:	lsr	r0, r0, #5
   137ec:	str	r0, [r3, #44]	; 0x2c
   137f0:	ldr	r0, [r5, #44]	; 0x2c
   137f4:	clz	r1, r0
   137f8:	lsr	r1, r1, #5
   137fc:	str	r1, [r5, #44]	; 0x2c
   13800:	str	r5, [sp, #16]
   13804:	beq	1384c <sf_gen_load+0xd0c>
   13808:	mov	r2, #60	; 0x3c
   1380c:	cmp	r0, #0
   13810:	mov	r1, r5
   13814:	movweq	r2, #84	; 0x54
   13818:	ldr	r0, [r1, r2]!
   1381c:	cmp	r0, #0
   13820:	beq	13850 <sf_gen_load+0xd10>
   13824:	ldr	r2, [r0, #44]	; 0x2c
   13828:	add	r1, r0, #84	; 0x54
   1382c:	cmp	r2, #0
   13830:	mov	r2, #84	; 0x54
   13834:	movweq	r2, #60	; 0x3c
   13838:	addeq	r1, r0, #60	; 0x3c
   1383c:	ldr	r0, [r0, r2]
   13840:	cmp	r0, #0
   13844:	bne	13824 <sf_gen_load+0xce4>
   13848:	b	13850 <sf_gen_load+0xd10>
   1384c:	add	r1, sp, #16
   13850:	str	r3, [r1]
   13854:	ldr	r0, [r5, #44]	; 0x2c
   13858:	clz	r0, r0
   1385c:	lsr	r0, r0, #5
   13860:	str	r0, [r5, #44]	; 0x2c
   13864:	ldr	r1, [r3, #96]	; 0x60
   13868:	str	r1, [r5, #96]	; 0x60
   1386c:	ldr	r0, [r8]
   13870:	cmp	r0, #0
   13874:	beq	13934 <sf_gen_load+0xdf4>
   13878:	mov	r2, r0
   1387c:	ldr	r3, [r2, #44]	; 0x2c
   13880:	add	r7, r2, #84	; 0x54
   13884:	cmp	r3, #0
   13888:	mov	r3, #84	; 0x54
   1388c:	movweq	r3, #60	; 0x3c
   13890:	addeq	r7, r2, #60	; 0x3c
   13894:	ldr	r2, [r2, r3]
   13898:	str	r1, [r7]
   1389c:	cmp	r2, #0
   138a0:	bne	1387c <sf_gen_load+0xd3c>
   138a4:	ldr	r1, [r0, #44]	; 0x2c
   138a8:	cmp	r5, #0
   138ac:	clz	r1, r1
   138b0:	lsr	r1, r1, #5
   138b4:	str	r1, [r0, #44]	; 0x2c
   138b8:	ldr	r1, [r5, #44]	; 0x2c
   138bc:	clz	r2, r1
   138c0:	lsr	r2, r2, #5
   138c4:	str	r2, [r5, #44]	; 0x2c
   138c8:	str	r5, [sp, #16]
   138cc:	beq	13914 <sf_gen_load+0xdd4>
   138d0:	mov	r3, #60	; 0x3c
   138d4:	cmp	r1, #0
   138d8:	mov	r2, r5
   138dc:	movweq	r3, #84	; 0x54
   138e0:	ldr	r1, [r2, r3]!
   138e4:	cmp	r1, #0
   138e8:	beq	13918 <sf_gen_load+0xdd8>
   138ec:	ldr	r3, [r1, #44]	; 0x2c
   138f0:	add	r2, r1, #84	; 0x54
   138f4:	cmp	r3, #0
   138f8:	mov	r3, #84	; 0x54
   138fc:	movweq	r3, #60	; 0x3c
   13900:	addeq	r2, r1, #60	; 0x3c
   13904:	ldr	r1, [r1, r3]
   13908:	cmp	r1, #0
   1390c:	bne	138ec <sf_gen_load+0xdac>
   13910:	b	13918 <sf_gen_load+0xdd8>
   13914:	add	r2, sp, #16
   13918:	str	r0, [r2]
   1391c:	ldr	r1, [r5, #44]	; 0x2c
   13920:	clz	r1, r1
   13924:	lsr	r1, r1, #5
   13928:	str	r1, [r5, #44]	; 0x2c
   1392c:	ldr	r0, [r0, #96]	; 0x60
   13930:	str	r0, [r5, #96]	; 0x60
   13934:	mov	r0, #2048	; 0x800
   13938:	bl	7320 <gen_linktype>
   1393c:	cmp	r0, #0
   13940:	beq	13974 <sf_gen_load+0xe34>
   13944:	ldr	r1, [r5, #96]	; 0x60
   13948:	mov	r2, r0
   1394c:	ldr	r3, [r2, #44]	; 0x2c
   13950:	add	r7, r2, #84	; 0x54
   13954:	cmp	r3, #0
   13958:	mov	r3, #84	; 0x54
   1395c:	movweq	r3, #60	; 0x3c
   13960:	addeq	r7, r2, #60	; 0x3c
   13964:	ldr	r2, [r2, r3]
   13968:	str	r1, [r7]
   1396c:	cmp	r2, #0
   13970:	bne	1394c <sf_gen_load+0xe0c>
   13974:	ldr	r1, [r0, #44]	; 0x2c
   13978:	cmp	r5, #0
   1397c:	clz	r1, r1
   13980:	lsr	r1, r1, #5
   13984:	str	r1, [r0, #44]	; 0x2c
   13988:	ldr	r1, [r5, #44]	; 0x2c
   1398c:	clz	r2, r1
   13990:	lsr	r2, r2, #5
   13994:	str	r2, [r5, #44]	; 0x2c
   13998:	str	r5, [sp, #16]
   1399c:	beq	139e4 <sf_gen_load+0xea4>
   139a0:	mov	r3, #60	; 0x3c
   139a4:	cmp	r1, #0
   139a8:	mov	r2, r5
   139ac:	movweq	r3, #84	; 0x54
   139b0:	ldr	r1, [r2, r3]!
   139b4:	cmp	r1, #0
   139b8:	beq	139e8 <sf_gen_load+0xea8>
   139bc:	ldr	r3, [r1, #44]	; 0x2c
   139c0:	add	r2, r1, #84	; 0x54
   139c4:	cmp	r3, #0
   139c8:	mov	r3, #84	; 0x54
   139cc:	movweq	r3, #60	; 0x3c
   139d0:	addeq	r2, r1, #60	; 0x3c
   139d4:	ldr	r1, [r1, r3]
   139d8:	cmp	r1, #0
   139dc:	bne	139bc <sf_gen_load+0xe7c>
   139e0:	b	139e8 <sf_gen_load+0xea8>
   139e4:	add	r2, sp, #16
   139e8:	str	r0, [r2]
   139ec:	ldr	r1, [r5, #44]	; 0x2c
   139f0:	clz	r1, r1
   139f4:	lsr	r1, r1, #5
   139f8:	str	r1, [r5, #44]	; 0x2c
   139fc:	ldr	r0, [r0, #96]	; 0x60
   13a00:	str	r0, [r5, #96]	; 0x60
   13a04:	str	r5, [r8]
   13a08:	str	r4, [r8, #8]
   13a0c:	ldr	r0, [pc, #1636]	; 14078 <sf_gen_load+0x1538>
   13a10:	ldr	r0, [pc, r0]
   13a14:	ldr	r6, [pc, #1632]	; 1407c <sf_gen_load+0x153c>
   13a18:	add	r6, pc, r6
   13a1c:	ldr	r5, [r6, r0, lsl #3]!
   13a20:	cmp	r5, #19
   13a24:	bhi	13a78 <sf_gen_load+0xf38>
   13a28:	ldr	r2, [pc, #1616]	; 14080 <sf_gen_load+0x1540>
   13a2c:	add	r1, r0, #1
   13a30:	cmp	r0, #15
   13a34:	add	r2, pc, r2
   13a38:	str	r1, [r2]
   13a3c:	bge	13f90 <sf_gen_load+0x1450>
   13a40:	mov	r0, #1024	; 0x400
   13a44:	lsl	r5, r0, r1
   13a48:	mov	r0, r5
   13a4c:	bl	ed4 <malloc@plt>
   13a50:	cmp	r0, #0
   13a54:	str	r0, [r6, #12]
   13a58:	beq	13f90 <sf_gen_load+0x1450>
   13a5c:	mov	r1, #0
   13a60:	mov	r2, r5
   13a64:	add	r6, r6, #8
   13a68:	bl	f40 <memset@plt>
   13a6c:	cmp	r5, #19
   13a70:	str	r5, [r6]
   13a74:	bls	13f90 <sf_gen_load+0x1450>
   13a78:	sub	r1, r5, #20
   13a7c:	mov	r2, #2
   13a80:	str	r1, [r6]
   13a84:	ldr	r0, [r6, #4]
   13a88:	str	r2, [r0, r1]!
   13a8c:	str	r4, [r0, #12]
   13a90:	ldr	r1, [r8, #4]
   13a94:	mov	r2, r1
   13a98:	ldr	r1, [r1, #16]
   13a9c:	cmp	r1, #0
   13aa0:	bne	13a94 <sf_gen_load+0xf54>
   13aa4:	str	r0, [r2, #16]
   13aa8:	mov	r0, r8
   13aac:	sub	sp, fp, #28
   13ab0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13ab4:	ldr	r0, [pc, #1316]	; 13fe0 <sf_gen_load+0x14a0>
   13ab8:	mov	sl, r8
   13abc:	ldr	r0, [pc, r0]
   13ac0:	cmp	r0, #119	; 0x77
   13ac4:	cmpne	r0, #127	; 0x7f
   13ac8:	bne	13e9c <sf_gen_load+0x135c>
   13acc:	ldr	r0, [pc, #1296]	; 13fe4 <sf_gen_load+0x14a4>
   13ad0:	ldr	r0, [pc, r0]
   13ad4:	ldr	r8, [pc, #1292]	; 13fe8 <sf_gen_load+0x14a8>
   13ad8:	add	r8, pc, r8
   13adc:	mov	r6, r8
   13ae0:	ldr	r5, [r6, r0, lsl #3]!
   13ae4:	cmp	r5, #19
   13ae8:	bhi	13bdc <sf_gen_load+0x109c>
   13aec:	ldr	r1, [pc, #1272]	; 13fec <sf_gen_load+0x14ac>
   13af0:	add	r9, r0, #1
   13af4:	cmp	r0, #15
   13af8:	add	r1, pc, r1
   13afc:	str	r9, [r1]
   13b00:	bge	13f90 <sf_gen_load+0x1450>
   13b04:	mov	r0, #1024	; 0x400
   13b08:	lsl	r5, r0, r9
   13b0c:	mov	r0, r5
   13b10:	bl	ed4 <malloc@plt>
   13b14:	cmp	r0, #0
   13b18:	str	r0, [r6, #12]
   13b1c:	beq	13f90 <sf_gen_load+0x1450>
   13b20:	mov	r1, #0
   13b24:	mov	r2, r5
   13b28:	add	r7, r6, #8
   13b2c:	bl	f40 <memset@plt>
   13b30:	cmp	r5, #20
   13b34:	str	r5, [r7]
   13b38:	bcc	13f90 <sf_gen_load+0x1450>
   13b3c:	add	r6, r8, r9, lsl #3
   13b40:	b	13be4 <sf_gen_load+0x10a4>
   13b44:	.word	0x000349b0
   13b48:	.word	0x000349a8
   13b4c:	.word	0x000349a0
   13b50:	.word	0x00017eb5
   13b54:	str	r8, [sp, #8]
   13b58:	bl	14138 <gen_llprefixlen>
   13b5c:	mov	r8, r0
   13b60:	ldr	r0, [pc, #1164]	; 13ff4 <sf_gen_load+0x14b4>
   13b64:	cmp	r8, #0
   13b68:	ldr	r0, [pc, r0]
   13b6c:	ldr	sl, [pc, #1156]	; 13ff8 <sf_gen_load+0x14b8>
   13b70:	add	sl, pc, sl
   13b74:	mov	r7, sl
   13b78:	ldr	r6, [r7, r0, lsl #3]!
   13b7c:	beq	13cbc <sf_gen_load+0x117c>
   13b80:	cmp	r6, #19
   13b84:	bhi	13d24 <sf_gen_load+0x11e4>
   13b88:	ldr	r1, [pc, #1132]	; 13ffc <sf_gen_load+0x14bc>
   13b8c:	add	r9, r0, #1
   13b90:	cmp	r0, #15
   13b94:	add	r1, pc, r1
   13b98:	str	r9, [r1]
   13b9c:	bge	13f90 <sf_gen_load+0x1450>
   13ba0:	mov	r0, #1024	; 0x400
   13ba4:	lsl	r6, r0, r9
   13ba8:	mov	r0, r6
   13bac:	bl	ed4 <malloc@plt>
   13bb0:	cmp	r0, #0
   13bb4:	str	r0, [r7, #12]
   13bb8:	beq	13f90 <sf_gen_load+0x1450>
   13bbc:	mov	r1, #0
   13bc0:	mov	r2, r6
   13bc4:	add	r7, r7, #8
   13bc8:	bl	f40 <memset@plt>
   13bcc:	cmp	r6, #19
   13bd0:	str	r6, [r7]
   13bd4:	bhi	13d28 <sf_gen_load+0x11e8>
   13bd8:	b	13f90 <sf_gen_load+0x1450>
   13bdc:	mov	r9, r0
   13be0:	mov	r7, r6
   13be4:	sub	r0, r5, #20
   13be8:	mov	r1, #97	; 0x61
   13bec:	str	r0, [r7]
   13bf0:	ldr	r7, [r7, #4]
   13bf4:	str	r1, [r7, r0]!
   13bf8:	ldr	r0, [sl, #8]
   13bfc:	str	r0, [r7, #12]
   13c00:	ldr	r5, [r8, r9, lsl #3]
   13c04:	cmp	r5, #19
   13c08:	bhi	13c68 <sf_gen_load+0x1128>
   13c0c:	ldr	r1, [pc, #988]	; 13ff0 <sf_gen_load+0x14b0>
   13c10:	add	r0, r9, #1
   13c14:	cmp	r9, #15
   13c18:	add	r1, pc, r1
   13c1c:	str	r0, [r1]
   13c20:	bge	13f90 <sf_gen_load+0x1450>
   13c24:	mov	r1, #1024	; 0x400
   13c28:	lsl	r5, r1, r0
   13c2c:	mov	r0, r5
   13c30:	bl	ed4 <malloc@plt>
   13c34:	cmp	r0, #0
   13c38:	str	r0, [r6, #12]
   13c3c:	beq	13f90 <sf_gen_load+0x1450>
   13c40:	mov	r1, #0
   13c44:	mov	r2, r5
   13c48:	mov	r8, sl
   13c4c:	add	r6, r6, #8
   13c50:	bl	f40 <memset@plt>
   13c54:	cmp	r5, #19
   13c58:	str	r5, [r6]
   13c5c:	bhi	13c6c <sf_gen_load+0x112c>
   13c60:	b	13f90 <sf_gen_load+0x1450>
   13c64:	.word	0x00034854
   13c68:	mov	r8, sl
   13c6c:	sub	r1, r5, #20
   13c70:	ldr	r2, [sp, #12]
   13c74:	str	r1, [r6]
   13c78:	ldr	r0, [r6, #4]
   13c7c:	str	r2, [r0, r1]!
   13c80:	mov	r2, r7
   13c84:	mov	r1, r2
   13c88:	ldr	r2, [r2, #16]
   13c8c:	cmp	r2, #0
   13c90:	bne	13c84 <sf_gen_load+0x1144>
   13c94:	str	r0, [r1, #16]
   13c98:	ldr	r0, [r8, #4]
   13c9c:	mov	r1, r0
   13ca0:	ldr	r0, [r0, #16]
   13ca4:	cmp	r0, #0
   13ca8:	bne	13c9c <sf_gen_load+0x115c>
   13cac:	str	r7, [r1, #16]
   13cb0:	b	13a08 <sf_gen_load+0xec8>
   13cb4:	.word	0x00034848
   13cb8:	.word	0x000347ec
   13cbc:	cmp	r6, #19
   13cc0:	bhi	13eb8 <sf_gen_load+0x1378>
   13cc4:	ldr	r1, [pc, #828]	; 14008 <sf_gen_load+0x14c8>
   13cc8:	add	r9, r0, #1
   13ccc:	cmp	r0, #15
   13cd0:	add	r1, pc, r1
   13cd4:	str	r9, [r1]
   13cd8:	bge	13f90 <sf_gen_load+0x1450>
   13cdc:	mov	r0, #1024	; 0x400
   13ce0:	lsl	r6, r0, r9
   13ce4:	mov	r0, r6
   13ce8:	bl	ed4 <malloc@plt>
   13cec:	cmp	r0, #0
   13cf0:	str	r0, [r7, #12]
   13cf4:	beq	13f90 <sf_gen_load+0x1450>
   13cf8:	mov	r1, #0
   13cfc:	mov	r2, r6
   13d00:	add	r7, r7, #8
   13d04:	bl	f40 <memset@plt>
   13d08:	cmp	r6, #19
   13d0c:	str	r6, [r7]
   13d10:	bhi	13ebc <sf_gen_load+0x137c>
   13d14:	b	13f90 <sf_gen_load+0x1450>
   13d18:	.word	0x00034760
   13d1c:	.word	0x000347c4
   13d20:	.word	0x00034774
   13d24:	mov	r9, r0
   13d28:	sub	r1, r6, #20
   13d2c:	mov	r2, #96	; 0x60
   13d30:	str	r1, [r7]
   13d34:	ldr	r0, [r7, #4]
   13d38:	str	r2, [r0, r1]!
   13d3c:	mov	r2, r8
   13d40:	ldr	r1, [sp, #8]
   13d44:	ldr	r1, [r1, #8]
   13d48:	str	r1, [r0, #12]
   13d4c:	mov	r1, r2
   13d50:	ldr	r2, [r2, #16]
   13d54:	cmp	r2, #0
   13d58:	bne	13d4c <sf_gen_load+0x120c>
   13d5c:	str	r0, [r1, #16]
   13d60:	mov	r5, sl
   13d64:	ldr	r6, [r5, r9, lsl #3]!
   13d68:	cmp	r6, #19
   13d6c:	bhi	13dcc <sf_gen_load+0x128c>
   13d70:	ldr	r0, [pc, #648]	; 14000 <sf_gen_load+0x14c0>
   13d74:	add	r7, r9, #1
   13d78:	cmp	r9, #15
   13d7c:	add	r0, pc, r0
   13d80:	str	r7, [r0]
   13d84:	bge	13f90 <sf_gen_load+0x1450>
   13d88:	mov	r0, #1024	; 0x400
   13d8c:	lsl	r6, r0, r7
   13d90:	mov	r0, r6
   13d94:	bl	ed4 <malloc@plt>
   13d98:	cmp	r0, #0
   13d9c:	str	r0, [r5, #12]
   13da0:	beq	13f90 <sf_gen_load+0x1450>
   13da4:	mov	r1, #0
   13da8:	mov	r2, r6
   13dac:	add	r5, r5, #8
   13db0:	bl	f40 <memset@plt>
   13db4:	cmp	r6, #19
   13db8:	str	r6, [r5]
   13dbc:	bhi	13dd0 <sf_gen_load+0x1290>
   13dc0:	b	13f90 <sf_gen_load+0x1450>
   13dc4:	.word	0x000346ac
   13dc8:	.word	0x00034710
   13dcc:	mov	r7, r9
   13dd0:	sub	r1, r6, #20
   13dd4:	mov	r2, #12
   13dd8:	str	r1, [r5]
   13ddc:	ldr	r0, [r5, #4]
   13de0:	str	r2, [r0, r1]!
   13de4:	mov	r2, r8
   13de8:	mov	r1, r2
   13dec:	ldr	r2, [r2, #16]
   13df0:	cmp	r2, #0
   13df4:	bne	13de8 <sf_gen_load+0x12a8>
   13df8:	str	r0, [r1, #16]
   13dfc:	mov	r5, sl
   13e00:	ldr	r6, [r5, r7, lsl #3]!
   13e04:	cmp	r6, #19
   13e08:	bhi	13e68 <sf_gen_load+0x1328>
   13e0c:	ldr	r0, [pc, #496]	; 14004 <sf_gen_load+0x14c4>
   13e10:	add	r9, r7, #1
   13e14:	cmp	r7, #15
   13e18:	add	r0, pc, r0
   13e1c:	str	r9, [r0]
   13e20:	bge	13f90 <sf_gen_load+0x1450>
   13e24:	mov	r0, #1024	; 0x400
   13e28:	lsl	r6, r0, r9
   13e2c:	mov	r0, r6
   13e30:	bl	ed4 <malloc@plt>
   13e34:	cmp	r0, #0
   13e38:	str	r0, [r5, #12]
   13e3c:	beq	13f90 <sf_gen_load+0x1450>
   13e40:	mov	r1, #0
   13e44:	mov	r2, r6
   13e48:	add	r5, r5, #8
   13e4c:	bl	f40 <memset@plt>
   13e50:	cmp	r6, #19
   13e54:	str	r6, [r5]
   13e58:	bhi	13e6c <sf_gen_load+0x132c>
   13e5c:	b	13f90 <sf_gen_load+0x1450>
   13e60:	.word	0x00034610
   13e64:	.word	0x00034674
   13e68:	mov	r9, r7
   13e6c:	sub	r1, r6, #20
   13e70:	mov	r2, #7
   13e74:	str	r1, [r5]
   13e78:	ldr	r0, [r5, #4]
   13e7c:	str	r2, [r0, r1]!
   13e80:	mov	r2, r8
   13e84:	mov	r1, r2
   13e88:	ldr	r2, [r2, #16]
   13e8c:	cmp	r2, #0
   13e90:	bne	13e84 <sf_gen_load+0x1344>
   13e94:	str	r0, [r1, #16]
   13e98:	b	13edc <sf_gen_load+0x139c>
   13e9c:	cmp	r0, #163	; 0xa3
   13ea0:	beq	13acc <sf_gen_load+0xf8c>
   13ea4:	ldr	r0, [pc, #472]	; 14084 <sf_gen_load+0x1544>
   13ea8:	add	r0, pc, r0
   13eac:	bl	2124 <sf_bpf_error>
   13eb0:	.word	0x00034574
   13eb4:	.word	0x000345d8
   13eb8:	mov	r9, r0
   13ebc:	sub	r0, r6, #20
   13ec0:	mov	r1, #97	; 0x61
   13ec4:	str	r0, [r7]
   13ec8:	ldr	r8, [r7, #4]
   13ecc:	str	r1, [r8, r0]!
   13ed0:	ldr	r0, [sp, #8]
   13ed4:	ldr	r0, [r0, #8]
   13ed8:	str	r0, [r8, #12]
   13edc:	ldr	r6, [sl, r9, lsl #3]!
   13ee0:	cmp	r6, #19
   13ee4:	bhi	13f38 <sf_gen_load+0x13f8>
   13ee8:	ldr	r1, [pc, #284]	; 1400c <sf_gen_load+0x14cc>
   13eec:	add	r0, r9, #1
   13ef0:	cmp	r9, #15
   13ef4:	add	r1, pc, r1
   13ef8:	str	r0, [r1]
   13efc:	bge	13f90 <sf_gen_load+0x1450>
   13f00:	mov	r1, #1024	; 0x400
   13f04:	lsl	r6, r1, r0
   13f08:	mov	r0, r6
   13f0c:	bl	ed4 <malloc@plt>
   13f10:	cmp	r0, #0
   13f14:	str	r0, [sl, #12]
   13f18:	beq	13f90 <sf_gen_load+0x1450>
   13f1c:	mov	r1, #0
   13f20:	mov	r2, r6
   13f24:	add	sl, sl, #8
   13f28:	bl	f40 <memset@plt>
   13f2c:	cmp	r6, #19
   13f30:	str	r6, [sl]
   13f34:	bls	13f90 <sf_gen_load+0x1450>
   13f38:	sub	r1, r6, #20
   13f3c:	ldr	r2, [sp, #12]
   13f40:	str	r1, [sl]
   13f44:	ldr	r0, [sl, #4]
   13f48:	str	r2, [r0, r1]!
   13f4c:	mov	r1, #0
   13f50:	mov	r2, r8
   13f54:	str	r1, [r0, #12]
   13f58:	mov	r1, r2
   13f5c:	ldr	r2, [r2, #16]
   13f60:	cmp	r2, #0
   13f64:	bne	13f58 <sf_gen_load+0x1418>
   13f68:	str	r0, [r1, #16]
   13f6c:	ldr	r0, [sp, #8]
   13f70:	ldr	r0, [r0, #4]
   13f74:	mov	r1, r0
   13f78:	ldr	r0, [r0, #16]
   13f7c:	cmp	r0, #0
   13f80:	bne	13f74 <sf_gen_load+0x1434>
   13f84:	str	r8, [r1, #16]
   13f88:	ldr	r8, [sp, #8]
   13f8c:	b	13a08 <sf_gen_load+0xec8>
   13f90:	ldr	r0, [pc, #240]	; 14088 <sf_gen_load+0x1548>
   13f94:	add	r0, pc, r0
   13f98:	bl	2124 <sf_bpf_error>
   13f9c:	ldr	r0, [pc, #56]	; 13fdc <sf_gen_load+0x149c>
   13fa0:	add	r0, pc, r0
   13fa4:	bl	2124 <sf_bpf_error>
   13fa8:	.word	0x00034494
   13fac:	.word	0x00034490
   13fb0:	ldr	r0, [pc, #32]	; 13fd8 <sf_gen_load+0x1498>
   13fb4:	add	r0, pc, r0
   13fb8:	bl	2124 <sf_bpf_error>
   13fbc:	ldr	r0, [pc, #200]	; 1408c <sf_gen_load+0x154c>
   13fc0:	add	r0, pc, r0
   13fc4:	bl	2124 <sf_bpf_error>
   13fc8:	.word	0x00034520
   13fcc:	.word	0x00034454
   13fd0:	.word	0x00034504
   13fd4:	.word	0x000344f4
   13fd8:	.word	0x000159d5
   13fdc:	.word	0x00015a06
   13fe0:	.word	0x00033974
   13fe4:	.word	0x00033a2c
   13fe8:	.word	0x000339a4
   13fec:	.word	0x00033a04
   13ff0:	.word	0x000338e4
   13ff4:	.word	0x00033994
   13ff8:	.word	0x0003390c
   13ffc:	.word	0x00033968
   14000:	.word	0x00033780
   14004:	.word	0x000336e4
   14008:	.word	0x0003382c
   1400c:	.word	0x00033608
   14010:	.word	0x000342fc
   14014:	.word	0x0003449c
   14018:	.word	0x00034484
   1401c:	.word	0x000343fc
   14020:	.word	0x00034460
   14024:	.word	0x0003436c
   14028:	.word	0x0003426c
   1402c:	.word	0x000343d0
   14030:	.word	0x00034328
   14034:	.word	0x00034294
   14038:	.word	0x000341fc
   1403c:	.word	0x00034360
   14040:	.word	0x00034100
   14044:	.word	0x00034164
   14048:	.word	0x00034048
   1404c:	.word	0x00034044
   14050:	.word	0x000344ac
   14054:	.word	0x00034424
   14058:	.word	0x00033fe4
   1405c:	.word	0x00033fcc
   14060:	.word	0x00033f44
   14064:	.word	0x00033fa4
   14068:	.word	0x00033f10
   1406c:	.word	0x00033ea8
   14070:	.word	0x00033d7c
   14074:	.word	0x00033de0
   14078:	.word	0x00033aec
   1407c:	.word	0x00033a64
   14080:	.word	0x00033ac8
   14084:	.word	0x00015b1a
   14088:	.word	0x00016070
   1408c:	.word	0x00015a2b

00014090 <new_stmt>:
   14090:	push	{r4, r5, r6, sl, fp, lr}
   14094:	add	fp, sp, #16
   14098:	mov	r4, r0
   1409c:	ldr	r0, [pc, #132]	; 14128 <new_stmt+0x98>
   140a0:	ldr	r0, [pc, r0]
   140a4:	ldr	r6, [pc, #128]	; 1412c <new_stmt+0x9c>
   140a8:	add	r6, pc, r6
   140ac:	ldr	r5, [r6, r0, lsl #3]!
   140b0:	cmp	r5, #19
   140b4:	bhi	14108 <new_stmt+0x78>
   140b8:	ldr	r2, [pc, #112]	; 14130 <new_stmt+0xa0>
   140bc:	add	r1, r0, #1
   140c0:	cmp	r0, #15
   140c4:	add	r2, pc, r2
   140c8:	str	r1, [r2]
   140cc:	bge	1411c <new_stmt+0x8c>
   140d0:	mov	r0, #1024	; 0x400
   140d4:	lsl	r5, r0, r1
   140d8:	mov	r0, r5
   140dc:	bl	ed4 <malloc@plt>
   140e0:	cmp	r0, #0
   140e4:	str	r0, [r6, #12]
   140e8:	beq	1411c <new_stmt+0x8c>
   140ec:	mov	r1, #0
   140f0:	mov	r2, r5
   140f4:	add	r6, r6, #8
   140f8:	bl	f40 <memset@plt>
   140fc:	cmp	r5, #19
   14100:	str	r5, [r6]
   14104:	bls	1411c <new_stmt+0x8c>
   14108:	sub	r1, r5, #20
   1410c:	str	r1, [r6]
   14110:	ldr	r0, [r6, #4]
   14114:	str	r4, [r0, r1]!
   14118:	pop	{r4, r5, r6, sl, fp, pc}
   1411c:	ldr	r0, [pc, #16]	; 14134 <new_stmt+0xa4>
   14120:	add	r0, pc, r0
   14124:	bl	2124 <sf_bpf_error>
   14128:	.word	0x0003345c
   1412c:	.word	0x000333d4
   14130:	.word	0x00033438
   14134:	.word	0x00015ee4

00014138 <gen_llprefixlen>:
   14138:	push	{r4, r5, r6, sl, fp, lr}
   1413c:	add	fp, sp, #16
   14140:	ldr	r1, [pc, #588]	; 14394 <gen_llprefixlen+0x25c>
   14144:	mov	r0, #0
   14148:	ldr	r1, [pc, r1]
   1414c:	cmp	r1, #162	; 0xa2
   14150:	bgt	141c0 <gen_llprefixlen+0x88>
   14154:	cmp	r1, #119	; 0x77
   14158:	beq	1422c <gen_llprefixlen+0xf4>
   1415c:	cmp	r1, #127	; 0x7f
   14160:	bne	14384 <gen_llprefixlen+0x24c>
   14164:	ldr	r5, [pc, #556]	; 14398 <gen_llprefixlen+0x260>
   14168:	ldr	r5, [pc, r5]
   1416c:	cmn	r5, #1
   14170:	bne	14300 <gen_llprefixlen+0x1c8>
   14174:	ldr	r5, [pc, #544]	; 1439c <gen_llprefixlen+0x264>
   14178:	mvn	r1, #15
   1417c:	ldr	r5, [pc, r5]
   14180:	ldr	r0, [pc, #536]	; 143a0 <gen_llprefixlen+0x268>
   14184:	ldr	r2, [pc, #536]	; 143a4 <gen_llprefixlen+0x26c>
   14188:	add	r0, pc, r0
   1418c:	add	r2, pc, r2
   14190:	ldr	r3, [r0, r5, lsl #2]
   14194:	cmp	r3, #0
   14198:	beq	142ec <gen_llprefixlen+0x1b4>
   1419c:	add	r3, r5, #1
   141a0:	adds	r1, r1, #1
   141a4:	asr	r6, r3, #31
   141a8:	add	r6, r3, r6, lsr #28
   141ac:	bic	r6, r6, #15
   141b0:	sub	r5, r3, r6
   141b4:	str	r5, [r2]
   141b8:	bne	14190 <gen_llprefixlen+0x58>
   141bc:	b	142e0 <gen_llprefixlen+0x1a8>
   141c0:	cmp	r1, #163	; 0xa3
   141c4:	beq	14288 <gen_llprefixlen+0x150>
   141c8:	cmp	r1, #192	; 0xc0
   141cc:	popne	{r4, r5, r6, sl, fp, pc}
   141d0:	ldr	r5, [pc, #464]	; 143a8 <gen_llprefixlen+0x270>
   141d4:	ldr	r5, [pc, r5]
   141d8:	cmn	r5, #1
   141dc:	bne	14300 <gen_llprefixlen+0x1c8>
   141e0:	ldr	r5, [pc, #452]	; 143ac <gen_llprefixlen+0x274>
   141e4:	mvn	r1, #15
   141e8:	ldr	r5, [pc, r5]
   141ec:	ldr	r0, [pc, #444]	; 143b0 <gen_llprefixlen+0x278>
   141f0:	ldr	r2, [pc, #444]	; 143b4 <gen_llprefixlen+0x27c>
   141f4:	add	r0, pc, r0
   141f8:	add	r2, pc, r2
   141fc:	ldr	r3, [r0, r5, lsl #2]
   14200:	cmp	r3, #0
   14204:	beq	142ec <gen_llprefixlen+0x1b4>
   14208:	add	r3, r5, #1
   1420c:	adds	r1, r1, #1
   14210:	asr	r6, r3, #31
   14214:	add	r6, r3, r6, lsr #28
   14218:	bic	r6, r6, #15
   1421c:	sub	r5, r3, r6
   14220:	str	r5, [r2]
   14224:	bne	141fc <gen_llprefixlen+0xc4>
   14228:	b	142e0 <gen_llprefixlen+0x1a8>
   1422c:	ldr	r5, [pc, #388]	; 143b8 <gen_llprefixlen+0x280>
   14230:	ldr	r5, [pc, r5]
   14234:	cmn	r5, #1
   14238:	bne	14300 <gen_llprefixlen+0x1c8>
   1423c:	ldr	r5, [pc, #376]	; 143bc <gen_llprefixlen+0x284>
   14240:	mvn	r1, #15
   14244:	ldr	r5, [pc, r5]
   14248:	ldr	r0, [pc, #368]	; 143c0 <gen_llprefixlen+0x288>
   1424c:	ldr	r2, [pc, #368]	; 143c4 <gen_llprefixlen+0x28c>
   14250:	add	r0, pc, r0
   14254:	add	r2, pc, r2
   14258:	ldr	r3, [r0, r5, lsl #2]
   1425c:	cmp	r3, #0
   14260:	beq	142ec <gen_llprefixlen+0x1b4>
   14264:	add	r3, r5, #1
   14268:	adds	r1, r1, #1
   1426c:	asr	r6, r3, #31
   14270:	add	r6, r3, r6, lsr #28
   14274:	bic	r6, r6, #15
   14278:	sub	r5, r3, r6
   1427c:	str	r5, [r2]
   14280:	bne	14258 <gen_llprefixlen+0x120>
   14284:	b	142e0 <gen_llprefixlen+0x1a8>
   14288:	ldr	r5, [pc, #336]	; 143e0 <gen_llprefixlen+0x2a8>
   1428c:	ldr	r5, [pc, r5]
   14290:	cmn	r5, #1
   14294:	bne	14300 <gen_llprefixlen+0x1c8>
   14298:	ldr	r5, [pc, #324]	; 143e4 <gen_llprefixlen+0x2ac>
   1429c:	mvn	r1, #15
   142a0:	ldr	r5, [pc, r5]
   142a4:	ldr	r0, [pc, #316]	; 143e8 <gen_llprefixlen+0x2b0>
   142a8:	ldr	r2, [pc, #316]	; 143ec <gen_llprefixlen+0x2b4>
   142ac:	add	r0, pc, r0
   142b0:	add	r2, pc, r2
   142b4:	ldr	r3, [r0, r5, lsl #2]
   142b8:	cmp	r3, #0
   142bc:	beq	142ec <gen_llprefixlen+0x1b4>
   142c0:	add	r3, r5, #1
   142c4:	adds	r1, r1, #1
   142c8:	asr	r6, r3, #31
   142cc:	add	r6, r3, r6, lsr #28
   142d0:	bic	r6, r6, #15
   142d4:	sub	r5, r3, r6
   142d8:	str	r5, [r2]
   142dc:	bne	142b4 <gen_llprefixlen+0x17c>
   142e0:	ldr	r0, [pc, #224]	; 143c8 <gen_llprefixlen+0x290>
   142e4:	add	r0, pc, r0
   142e8:	bl	2124 <sf_bpf_error>
   142ec:	mov	r1, #1
   142f0:	str	r1, [r0, r5, lsl #2]
   142f4:	ldr	r0, [pc, #208]	; 143cc <gen_llprefixlen+0x294>
   142f8:	add	r0, pc, r0
   142fc:	str	r5, [r0]
   14300:	ldr	r0, [pc, #200]	; 143d0 <gen_llprefixlen+0x298>
   14304:	ldr	r0, [pc, r0]
   14308:	ldr	r6, [pc, #196]	; 143d4 <gen_llprefixlen+0x29c>
   1430c:	add	r6, pc, r6
   14310:	ldr	r4, [r6, r0, lsl #3]!
   14314:	cmp	r4, #19
   14318:	bhi	1436c <gen_llprefixlen+0x234>
   1431c:	ldr	r2, [pc, #180]	; 143d8 <gen_llprefixlen+0x2a0>
   14320:	add	r1, r0, #1
   14324:	cmp	r0, #15
   14328:	add	r2, pc, r2
   1432c:	str	r1, [r2]
   14330:	bge	14388 <gen_llprefixlen+0x250>
   14334:	mov	r0, #1024	; 0x400
   14338:	lsl	r4, r0, r1
   1433c:	mov	r0, r4
   14340:	bl	ed4 <malloc@plt>
   14344:	cmp	r0, #0
   14348:	str	r0, [r6, #12]
   1434c:	beq	14388 <gen_llprefixlen+0x250>
   14350:	mov	r1, #0
   14354:	mov	r2, r4
   14358:	add	r6, r6, #8
   1435c:	bl	f40 <memset@plt>
   14360:	cmp	r4, #19
   14364:	str	r4, [r6]
   14368:	bls	14388 <gen_llprefixlen+0x250>
   1436c:	sub	r1, r4, #20
   14370:	mov	r2, #97	; 0x61
   14374:	str	r1, [r6]
   14378:	ldr	r0, [r6, #4]
   1437c:	str	r2, [r0, r1]!
   14380:	str	r5, [r0, #12]
   14384:	pop	{r4, r5, r6, sl, fp, pc}
   14388:	ldr	r0, [pc, #76]	; 143dc <gen_llprefixlen+0x2a4>
   1438c:	add	r0, pc, r0
   14390:	bl	2124 <sf_bpf_error>
   14394:	.word	0x000332e8
   14398:	.word	0x0003339c
   1439c:	.word	0x00033390
   143a0:	.word	0x00033388
   143a4:	.word	0x00033380
   143a8:	.word	0x00033330
   143ac:	.word	0x00033324
   143b0:	.word	0x0003331c
   143b4:	.word	0x00033314
   143b8:	.word	0x000332d4
   143bc:	.word	0x000332c8
   143c0:	.word	0x000332c0
   143c4:	.word	0x000332b8
   143c8:	.word	0x00016771
   143cc:	.word	0x0003320c
   143d0:	.word	0x000331f8
   143d4:	.word	0x00033170
   143d8:	.word	0x000331d4
   143dc:	.word	0x00015c78
   143e0:	.word	0x00033278
   143e4:	.word	0x0003326c
   143e8:	.word	0x00033264
   143ec:	.word	0x0003325c

000143f0 <gen_off_macpl>:
   143f0:	push	{fp, lr}
   143f4:	mov	fp, sp
   143f8:	ldr	r0, [pc, #160]	; 144a0 <gen_off_macpl+0xb0>
   143fc:	add	r0, pc, r0
   14400:	ldrb	r1, [r0]
   14404:	mov	r0, #0
   14408:	cmp	r1, #1
   1440c:	popne	{fp, pc}
   14410:	ldr	r0, [pc, #140]	; 144a4 <gen_off_macpl+0xb4>
   14414:	ldr	r0, [pc, r0]
   14418:	cmn	r0, #1
   1441c:	bne	14488 <gen_off_macpl+0x98>
   14420:	ldr	r2, [pc, #128]	; 144a8 <gen_off_macpl+0xb8>
   14424:	mvn	r1, #15
   14428:	ldr	r2, [pc, r2]
   1442c:	ldr	ip, [pc, #120]	; 144ac <gen_off_macpl+0xbc>
   14430:	ldr	r3, [pc, #120]	; 144b0 <gen_off_macpl+0xc0>
   14434:	add	ip, pc, ip
   14438:	add	r3, pc, r3
   1443c:	ldr	r0, [ip, r2, lsl #2]
   14440:	cmp	r0, #0
   14444:	beq	14474 <gen_off_macpl+0x84>
   14448:	add	r0, r2, #1
   1444c:	adds	r1, r1, #1
   14450:	asr	r2, r0, #31
   14454:	add	r2, r0, r2, lsr #28
   14458:	bic	r2, r2, #15
   1445c:	sub	r2, r0, r2
   14460:	str	r2, [r3]
   14464:	bne	1443c <gen_off_macpl+0x4c>
   14468:	ldr	r0, [pc, #68]	; 144b4 <gen_off_macpl+0xc4>
   1446c:	add	r0, pc, r0
   14470:	bl	2124 <sf_bpf_error>
   14474:	mov	r0, #1
   14478:	str	r0, [ip, r2, lsl #2]
   1447c:	ldr	r0, [pc, #52]	; 144b8 <gen_off_macpl+0xc8>
   14480:	add	r0, pc, r0
   14484:	str	r2, [r0]
   14488:	mov	r0, #97	; 0x61
   1448c:	bl	14090 <new_stmt>
   14490:	ldr	r1, [pc, #36]	; 144bc <gen_off_macpl+0xcc>
   14494:	ldr	r1, [pc, r1]
   14498:	str	r1, [r0, #12]
   1449c:	pop	{fp, pc}
   144a0:	.word	0x00033104
   144a4:	.word	0x000330f4
   144a8:	.word	0x000330e4
   144ac:	.word	0x000330dc
   144b0:	.word	0x000330d4
   144b4:	.word	0x000165e9
   144b8:	.word	0x00033088
   144bc:	.word	0x00033074

000144c0 <gen_loadx_iphdrlen>:
   144c0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   144c4:	add	fp, sp, #24
   144c8:	ldr	r0, [pc, #1224]	; 14998 <gen_loadx_iphdrlen+0x4d8>
   144cc:	add	r0, pc, r0
   144d0:	ldrb	r0, [r0]
   144d4:	cmp	r0, #0
   144d8:	beq	14540 <gen_loadx_iphdrlen+0x80>
   144dc:	ldr	r5, [pc, #1228]	; 149b0 <gen_loadx_iphdrlen+0x4f0>
   144e0:	ldr	r5, [pc, r5]
   144e4:	cmn	r5, #1
   144e8:	bne	14560 <gen_loadx_iphdrlen+0xa0>
   144ec:	ldr	r5, [pc, #1216]	; 149b4 <gen_loadx_iphdrlen+0x4f4>
   144f0:	mvn	r1, #15
   144f4:	ldr	r5, [pc, r5]
   144f8:	ldr	r0, [pc, #1208]	; 149b8 <gen_loadx_iphdrlen+0x4f8>
   144fc:	ldr	r2, [pc, #1208]	; 149bc <gen_loadx_iphdrlen+0x4fc>
   14500:	add	r0, pc, r0
   14504:	add	r2, pc, r2
   14508:	ldr	r3, [r0, r5, lsl #2]
   1450c:	cmp	r3, #0
   14510:	beq	1454c <gen_loadx_iphdrlen+0x8c>
   14514:	add	r3, r5, #1
   14518:	adds	r1, r1, #1
   1451c:	asr	r7, r3, #31
   14520:	add	r7, r3, r7, lsr #28
   14524:	bic	r7, r7, #15
   14528:	sub	r5, r3, r7
   1452c:	str	r5, [r2]
   14530:	bne	14508 <gen_loadx_iphdrlen+0x48>
   14534:	ldr	r0, [pc, #1156]	; 149c0 <gen_loadx_iphdrlen+0x500>
   14538:	add	r0, pc, r0
   1453c:	bl	2124 <sf_bpf_error>
   14540:	ldr	r7, [pc, #1108]	; 1499c <gen_loadx_iphdrlen+0x4dc>
   14544:	ldr	r7, [pc, r7]
   14548:	b	1465c <gen_loadx_iphdrlen+0x19c>
   1454c:	mov	r1, #1
   14550:	str	r1, [r0, r5, lsl #2]
   14554:	ldr	r0, [pc, #1128]	; 149c4 <gen_loadx_iphdrlen+0x504>
   14558:	add	r0, pc, r0
   1455c:	str	r5, [r0]
   14560:	ldr	r0, [pc, #1120]	; 149c8 <gen_loadx_iphdrlen+0x508>
   14564:	ldr	r0, [pc, r0]
   14568:	ldr	r8, [pc, #1116]	; 149cc <gen_loadx_iphdrlen+0x50c>
   1456c:	add	r8, pc, r8
   14570:	mov	r6, r8
   14574:	ldr	r4, [r6, r0, lsl #3]!
   14578:	cmp	r4, #19
   1457c:	bhi	145d4 <gen_loadx_iphdrlen+0x114>
   14580:	ldr	r1, [pc, #1096]	; 149d0 <gen_loadx_iphdrlen+0x510>
   14584:	add	r7, r0, #1
   14588:	cmp	r0, #15
   1458c:	add	r1, pc, r1
   14590:	str	r7, [r1]
   14594:	bge	1498c <gen_loadx_iphdrlen+0x4cc>
   14598:	mov	r0, #1024	; 0x400
   1459c:	lsl	r4, r0, r7
   145a0:	mov	r0, r4
   145a4:	bl	ed4 <malloc@plt>
   145a8:	cmp	r0, #0
   145ac:	str	r0, [r6, #12]
   145b0:	beq	1498c <gen_loadx_iphdrlen+0x4cc>
   145b4:	mov	r1, #0
   145b8:	mov	r2, r4
   145bc:	add	r6, r6, #8
   145c0:	bl	f40 <memset@plt>
   145c4:	cmp	r4, #19
   145c8:	str	r4, [r6]
   145cc:	bhi	145d8 <gen_loadx_iphdrlen+0x118>
   145d0:	b	1498c <gen_loadx_iphdrlen+0x4cc>
   145d4:	mov	r7, r0
   145d8:	sub	r0, r4, #20
   145dc:	mov	r1, #97	; 0x61
   145e0:	str	r0, [r6]
   145e4:	ldr	r4, [r6, #4]
   145e8:	str	r1, [r4, r0]!
   145ec:	cmp	r4, #0
   145f0:	str	r5, [r4, #12]
   145f4:	beq	1465c <gen_loadx_iphdrlen+0x19c>
   145f8:	mov	r6, r8
   145fc:	ldr	r5, [r6, r7, lsl #3]!
   14600:	cmp	r5, #19
   14604:	bhi	146f4 <gen_loadx_iphdrlen+0x234>
   14608:	ldr	r0, [pc, #964]	; 149d4 <gen_loadx_iphdrlen+0x514>
   1460c:	add	r9, r7, #1
   14610:	cmp	r7, #15
   14614:	add	r0, pc, r0
   14618:	str	r9, [r0]
   1461c:	bge	1498c <gen_loadx_iphdrlen+0x4cc>
   14620:	mov	r0, #1024	; 0x400
   14624:	lsl	r5, r0, r9
   14628:	mov	r0, r5
   1462c:	bl	ed4 <malloc@plt>
   14630:	cmp	r0, #0
   14634:	str	r0, [r6, #12]
   14638:	beq	1498c <gen_loadx_iphdrlen+0x4cc>
   1463c:	mov	r1, #0
   14640:	mov	r2, r5
   14644:	add	r6, r6, #8
   14648:	bl	f40 <memset@plt>
   1464c:	cmp	r5, #19
   14650:	str	r5, [r6]
   14654:	bhi	146f8 <gen_loadx_iphdrlen+0x238>
   14658:	b	1498c <gen_loadx_iphdrlen+0x4cc>
   1465c:	ldr	r5, [pc, #828]	; 149a0 <gen_loadx_iphdrlen+0x4e0>
   14660:	add	r5, pc, r5
   14664:	ldr	r4, [r5, r7, lsl #3]!
   14668:	cmp	r4, #19
   1466c:	bhi	146c0 <gen_loadx_iphdrlen+0x200>
   14670:	ldr	r1, [pc, #812]	; 149a4 <gen_loadx_iphdrlen+0x4e4>
   14674:	add	r0, r7, #1
   14678:	cmp	r7, #15
   1467c:	add	r1, pc, r1
   14680:	str	r0, [r1]
   14684:	bge	1498c <gen_loadx_iphdrlen+0x4cc>
   14688:	mov	r1, #1024	; 0x400
   1468c:	lsl	r4, r1, r0
   14690:	mov	r0, r4
   14694:	bl	ed4 <malloc@plt>
   14698:	cmp	r0, #0
   1469c:	str	r0, [r5, #12]
   146a0:	beq	1498c <gen_loadx_iphdrlen+0x4cc>
   146a4:	mov	r1, #0
   146a8:	mov	r2, r4
   146ac:	add	r5, r5, #8
   146b0:	bl	f40 <memset@plt>
   146b4:	cmp	r4, #19
   146b8:	str	r4, [r5]
   146bc:	bls	1498c <gen_loadx_iphdrlen+0x4cc>
   146c0:	sub	r0, r4, #20
   146c4:	mov	r1, #177	; 0xb1
   146c8:	str	r0, [r5]
   146cc:	ldr	r4, [r5, #4]
   146d0:	str	r1, [r4, r0]!
   146d4:	ldr	r0, [pc, #716]	; 149a8 <gen_loadx_iphdrlen+0x4e8>
   146d8:	ldr	r0, [pc, r0]
   146dc:	ldr	r1, [pc, #712]	; 149ac <gen_loadx_iphdrlen+0x4ec>
   146e0:	ldr	r1, [pc, r1]
   146e4:	add	r0, r1, r0
   146e8:	str	r0, [r4, #12]
   146ec:	mov	r0, r4
   146f0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   146f4:	mov	r9, r7
   146f8:	sub	r1, r5, #20
   146fc:	mov	r2, #80	; 0x50
   14700:	str	r1, [r6]
   14704:	ldr	r0, [r6, #4]
   14708:	str	r2, [r0, r1]!
   1470c:	mov	r2, r4
   14710:	ldr	r1, [pc, #704]	; 149d8 <gen_loadx_iphdrlen+0x518>
   14714:	ldr	r1, [pc, r1]
   14718:	str	r1, [r0, #12]
   1471c:	mov	r1, r2
   14720:	ldr	r2, [r2, #16]
   14724:	cmp	r2, #0
   14728:	bne	1471c <gen_loadx_iphdrlen+0x25c>
   1472c:	str	r0, [r1, #16]
   14730:	mov	r6, r8
   14734:	ldr	r5, [r6, r9, lsl #3]!
   14738:	cmp	r5, #19
   1473c:	bhi	14794 <gen_loadx_iphdrlen+0x2d4>
   14740:	ldr	r0, [pc, #660]	; 149dc <gen_loadx_iphdrlen+0x51c>
   14744:	add	r7, r9, #1
   14748:	cmp	r9, #15
   1474c:	add	r0, pc, r0
   14750:	str	r7, [r0]
   14754:	bge	1498c <gen_loadx_iphdrlen+0x4cc>
   14758:	mov	r0, #1024	; 0x400
   1475c:	lsl	r5, r0, r7
   14760:	mov	r0, r5
   14764:	bl	ed4 <malloc@plt>
   14768:	cmp	r0, #0
   1476c:	str	r0, [r6, #12]
   14770:	beq	1498c <gen_loadx_iphdrlen+0x4cc>
   14774:	mov	r1, #0
   14778:	mov	r2, r5
   1477c:	add	r6, r6, #8
   14780:	bl	f40 <memset@plt>
   14784:	cmp	r5, #19
   14788:	str	r5, [r6]
   1478c:	bhi	14798 <gen_loadx_iphdrlen+0x2d8>
   14790:	b	1498c <gen_loadx_iphdrlen+0x4cc>
   14794:	mov	r7, r9
   14798:	sub	r1, r5, #20
   1479c:	mov	r2, #84	; 0x54
   147a0:	str	r1, [r6]
   147a4:	ldr	r0, [r6, #4]
   147a8:	str	r2, [r0, r1]!
   147ac:	mov	r1, #15
   147b0:	mov	r2, r4
   147b4:	str	r1, [r0, #12]
   147b8:	mov	r1, r2
   147bc:	ldr	r2, [r2, #16]
   147c0:	cmp	r2, #0
   147c4:	bne	147b8 <gen_loadx_iphdrlen+0x2f8>
   147c8:	str	r0, [r1, #16]
   147cc:	mov	r6, r8
   147d0:	ldr	r5, [r6, r7, lsl #3]!
   147d4:	cmp	r5, #19
   147d8:	bhi	14830 <gen_loadx_iphdrlen+0x370>
   147dc:	ldr	r0, [pc, #508]	; 149e0 <gen_loadx_iphdrlen+0x520>
   147e0:	add	r9, r7, #1
   147e4:	cmp	r7, #15
   147e8:	add	r0, pc, r0
   147ec:	str	r9, [r0]
   147f0:	bge	1498c <gen_loadx_iphdrlen+0x4cc>
   147f4:	mov	r0, #1024	; 0x400
   147f8:	lsl	r5, r0, r9
   147fc:	mov	r0, r5
   14800:	bl	ed4 <malloc@plt>
   14804:	cmp	r0, #0
   14808:	str	r0, [r6, #12]
   1480c:	beq	1498c <gen_loadx_iphdrlen+0x4cc>
   14810:	mov	r1, #0
   14814:	mov	r2, r5
   14818:	add	r6, r6, #8
   1481c:	bl	f40 <memset@plt>
   14820:	cmp	r5, #19
   14824:	str	r5, [r6]
   14828:	bhi	14834 <gen_loadx_iphdrlen+0x374>
   1482c:	b	1498c <gen_loadx_iphdrlen+0x4cc>
   14830:	mov	r9, r7
   14834:	sub	r1, r5, #20
   14838:	mov	r2, #100	; 0x64
   1483c:	str	r1, [r6]
   14840:	ldr	r0, [r6, #4]
   14844:	str	r2, [r0, r1]!
   14848:	mov	r1, #2
   1484c:	mov	r2, r4
   14850:	str	r1, [r0, #12]
   14854:	mov	r1, r2
   14858:	ldr	r2, [r2, #16]
   1485c:	cmp	r2, #0
   14860:	bne	14854 <gen_loadx_iphdrlen+0x394>
   14864:	str	r0, [r1, #16]
   14868:	mov	r6, r8
   1486c:	ldr	r5, [r6, r9, lsl #3]!
   14870:	cmp	r5, #19
   14874:	bhi	148cc <gen_loadx_iphdrlen+0x40c>
   14878:	ldr	r0, [pc, #356]	; 149e4 <gen_loadx_iphdrlen+0x524>
   1487c:	add	r7, r9, #1
   14880:	cmp	r9, #15
   14884:	add	r0, pc, r0
   14888:	str	r7, [r0]
   1488c:	bge	1498c <gen_loadx_iphdrlen+0x4cc>
   14890:	mov	r0, #1024	; 0x400
   14894:	lsl	r5, r0, r7
   14898:	mov	r0, r5
   1489c:	bl	ed4 <malloc@plt>
   148a0:	cmp	r0, #0
   148a4:	str	r0, [r6, #12]
   148a8:	beq	1498c <gen_loadx_iphdrlen+0x4cc>
   148ac:	mov	r1, #0
   148b0:	mov	r2, r5
   148b4:	add	r6, r6, #8
   148b8:	bl	f40 <memset@plt>
   148bc:	cmp	r5, #19
   148c0:	str	r5, [r6]
   148c4:	bhi	148d0 <gen_loadx_iphdrlen+0x410>
   148c8:	b	1498c <gen_loadx_iphdrlen+0x4cc>
   148cc:	mov	r7, r9
   148d0:	sub	r1, r5, #20
   148d4:	mov	r2, #12
   148d8:	str	r1, [r6]
   148dc:	ldr	r0, [r6, #4]
   148e0:	str	r2, [r0, r1]!
   148e4:	mov	r2, r4
   148e8:	mov	r1, r2
   148ec:	ldr	r2, [r2, #16]
   148f0:	cmp	r2, #0
   148f4:	bne	148e8 <gen_loadx_iphdrlen+0x428>
   148f8:	str	r0, [r1, #16]
   148fc:	ldr	r5, [r8, r7, lsl #3]!
   14900:	cmp	r5, #19
   14904:	bhi	14958 <gen_loadx_iphdrlen+0x498>
   14908:	ldr	r1, [pc, #216]	; 149e8 <gen_loadx_iphdrlen+0x528>
   1490c:	add	r0, r7, #1
   14910:	cmp	r7, #15
   14914:	add	r1, pc, r1
   14918:	str	r0, [r1]
   1491c:	bge	1498c <gen_loadx_iphdrlen+0x4cc>
   14920:	mov	r1, #1024	; 0x400
   14924:	lsl	r5, r1, r0
   14928:	mov	r0, r5
   1492c:	bl	ed4 <malloc@plt>
   14930:	cmp	r0, #0
   14934:	str	r0, [r8, #12]
   14938:	beq	1498c <gen_loadx_iphdrlen+0x4cc>
   1493c:	mov	r1, #0
   14940:	mov	r2, r5
   14944:	add	r8, r8, #8
   14948:	bl	f40 <memset@plt>
   1494c:	cmp	r5, #19
   14950:	str	r5, [r8]
   14954:	bls	1498c <gen_loadx_iphdrlen+0x4cc>
   14958:	sub	r1, r5, #20
   1495c:	mov	r2, #7
   14960:	str	r1, [r8]
   14964:	ldr	r0, [r8, #4]
   14968:	str	r2, [r0, r1]!
   1496c:	mov	r2, r4
   14970:	mov	r1, r2
   14974:	ldr	r2, [r2, #16]
   14978:	cmp	r2, #0
   1497c:	bne	14970 <gen_loadx_iphdrlen+0x4b0>
   14980:	str	r0, [r1, #16]
   14984:	mov	r0, r4
   14988:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1498c:	ldr	r0, [pc, #88]	; 149ec <gen_loadx_iphdrlen+0x52c>
   14990:	add	r0, pc, r0
   14994:	bl	2124 <sf_bpf_error>
   14998:	.word	0x00033034
   1499c:	.word	0x00032fb8
   149a0:	.word	0x00032e1c
   149a4:	.word	0x00032e80
   149a8:	.word	0x00032d64
   149ac:	.word	0x00032d60
   149b0:	.word	0x00033028
   149b4:	.word	0x00033018
   149b8:	.word	0x00033010
   149bc:	.word	0x00033008
   149c0:	.word	0x0001651d
   149c4:	.word	0x00032fb0
   149c8:	.word	0x00032f98
   149cc:	.word	0x00032f10
   149d0:	.word	0x00032f70
   149d4:	.word	0x00032ee8
   149d8:	.word	0x00032d2c
   149dc:	.word	0x00032db0
   149e0:	.word	0x00032d14
   149e4:	.word	0x00032c78
   149e8:	.word	0x00032be8
   149ec:	.word	0x00015674

000149f0 <sf_gen_relation>:
   149f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   149f4:	add	fp, sp, #28
   149f8:	sub	sp, sp, #28
   149fc:	str	r3, [sp, #12]
   14a00:	str	r1, [sp, #20]
   14a04:	str	r0, [sp, #4]
   14a08:	mov	r8, r2
   14a0c:	ldr	r0, [pc, #1288]	; 14f1c <sf_gen_relation+0x52c>
   14a10:	ldr	r0, [pc, r0]
   14a14:	ldr	r9, [pc, #1284]	; 14f20 <sf_gen_relation+0x530>
   14a18:	add	r9, pc, r9
   14a1c:	mov	r4, r9
   14a20:	ldr	r6, [r4, r0, lsl #3]!
   14a24:	cmp	r6, #19
   14a28:	bhi	14a84 <sf_gen_relation+0x94>
   14a2c:	ldr	r1, [pc, #1264]	; 14f24 <sf_gen_relation+0x534>
   14a30:	add	r5, r0, #1
   14a34:	cmp	r0, #15
   14a38:	add	r1, pc, r1
   14a3c:	str	r5, [r1]
   14a40:	bge	14f10 <sf_gen_relation+0x520>
   14a44:	mov	r0, #1024	; 0x400
   14a48:	lsl	r6, r0, r5
   14a4c:	mov	r0, r6
   14a50:	bl	ed4 <malloc@plt>
   14a54:	cmp	r0, #0
   14a58:	str	r0, [r4, #12]
   14a5c:	beq	14f10 <sf_gen_relation+0x520>
   14a60:	mov	r1, #0
   14a64:	mov	r2, r6
   14a68:	add	r7, r4, #8
   14a6c:	bl	f40 <memset@plt>
   14a70:	cmp	r6, #20
   14a74:	str	r6, [r7]
   14a78:	bcc	14f10 <sf_gen_relation+0x520>
   14a7c:	add	r4, r9, r5, lsl #3
   14a80:	b	14a8c <sf_gen_relation+0x9c>
   14a84:	mov	r5, r0
   14a88:	mov	r7, r4
   14a8c:	sub	r0, r6, #20
   14a90:	mov	r1, #97	; 0x61
   14a94:	str	r0, [r7]
   14a98:	ldr	r2, [r7, #4]
   14a9c:	str	r1, [r2, r0]!
   14aa0:	str	r8, [sp, #16]
   14aa4:	ldr	r0, [r8, #8]
   14aa8:	str	r2, [sp, #8]
   14aac:	str	r0, [r2, #12]
   14ab0:	ldr	r6, [r9, r5, lsl #3]
   14ab4:	cmp	r6, #19
   14ab8:	bhi	14b14 <sf_gen_relation+0x124>
   14abc:	ldr	r0, [pc, #1124]	; 14f28 <sf_gen_relation+0x538>
   14ac0:	add	sl, r5, #1
   14ac4:	cmp	r5, #15
   14ac8:	add	r0, pc, r0
   14acc:	str	sl, [r0]
   14ad0:	bge	14f10 <sf_gen_relation+0x520>
   14ad4:	mov	r0, #1024	; 0x400
   14ad8:	lsl	r6, r0, sl
   14adc:	mov	r0, r6
   14ae0:	bl	ed4 <malloc@plt>
   14ae4:	ldr	r5, [sp, #4]
   14ae8:	cmp	r0, #0
   14aec:	str	r0, [r4, #12]
   14af0:	beq	14f10 <sf_gen_relation+0x520>
   14af4:	mov	r1, #0
   14af8:	mov	r2, r6
   14afc:	add	r4, r4, #8
   14b00:	bl	f40 <memset@plt>
   14b04:	cmp	r6, #19
   14b08:	str	r6, [r4]
   14b0c:	bhi	14b1c <sf_gen_relation+0x12c>
   14b10:	b	14f10 <sf_gen_relation+0x520>
   14b14:	mov	sl, r5
   14b18:	ldr	r5, [sp, #4]
   14b1c:	sub	r0, r6, #20
   14b20:	mov	r1, #96	; 0x60
   14b24:	cmp	r5, #16
   14b28:	str	r0, [r4]
   14b2c:	ldr	r8, [r4, #4]
   14b30:	str	r1, [r8, r0]!
   14b34:	ldr	r4, [sp, #20]
   14b38:	ldr	r0, [r4, #8]
   14b3c:	str	r0, [r8, #12]
   14b40:	bne	14bac <sf_gen_relation+0x1bc>
   14b44:	mov	r4, r9
   14b48:	ldr	r6, [r4, sl, lsl #3]!
   14b4c:	cmp	r6, #19
   14b50:	bhi	14c28 <sf_gen_relation+0x238>
   14b54:	ldr	r0, [pc, #976]	; 14f2c <sf_gen_relation+0x53c>
   14b58:	add	r7, sl, #1
   14b5c:	cmp	sl, #15
   14b60:	add	r0, pc, r0
   14b64:	str	r7, [r0]
   14b68:	bge	14f10 <sf_gen_relation+0x520>
   14b6c:	mov	r0, #1024	; 0x400
   14b70:	lsl	r6, r0, r7
   14b74:	mov	r0, r6
   14b78:	bl	ed4 <malloc@plt>
   14b7c:	cmp	r0, #0
   14b80:	str	r0, [r4, #12]
   14b84:	beq	14f10 <sf_gen_relation+0x520>
   14b88:	mov	r1, #0
   14b8c:	mov	r2, r6
   14b90:	add	r5, r4, #8
   14b94:	bl	f40 <memset@plt>
   14b98:	cmp	r6, #20
   14b9c:	str	r6, [r5]
   14ba0:	bcc	14f10 <sf_gen_relation+0x520>
   14ba4:	add	r4, r9, r7, lsl #3
   14ba8:	b	14c30 <sf_gen_relation+0x240>
   14bac:	ldr	r6, [r9, sl, lsl #3]!
   14bb0:	cmp	r6, #207	; 0xcf
   14bb4:	bhi	14c08 <sf_gen_relation+0x218>
   14bb8:	ldr	r1, [pc, #884]	; 14f34 <sf_gen_relation+0x544>
   14bbc:	add	r0, sl, #1
   14bc0:	cmp	sl, #15
   14bc4:	add	r1, pc, r1
   14bc8:	str	r0, [r1]
   14bcc:	bge	14f10 <sf_gen_relation+0x520>
   14bd0:	mov	r1, #1024	; 0x400
   14bd4:	lsl	r6, r1, r0
   14bd8:	mov	r0, r6
   14bdc:	bl	ed4 <malloc@plt>
   14be0:	cmp	r0, #0
   14be4:	str	r0, [r9, #12]
   14be8:	beq	14f10 <sf_gen_relation+0x520>
   14bec:	mov	r1, #0
   14bf0:	mov	r2, r6
   14bf4:	add	r9, r9, #8
   14bf8:	bl	f40 <memset@plt>
   14bfc:	cmp	r6, #207	; 0xcf
   14c00:	str	r6, [r9]
   14c04:	bls	14f10 <sf_gen_relation+0x520>
   14c08:	sub	r0, r6, #208	; 0xd0
   14c0c:	orr	r1, r5, #13
   14c10:	str	r0, [r9]
   14c14:	ldr	r2, [r9, #4]
   14c18:	add	r0, r2, r0
   14c1c:	str	r1, [r0, #8]
   14c20:	str	r0, [r0, #96]	; 0x60
   14c24:	b	14cd8 <sf_gen_relation+0x2e8>
   14c28:	mov	r7, sl
   14c2c:	mov	r5, r4
   14c30:	sub	r0, r6, #20
   14c34:	mov	r1, #28
   14c38:	str	r0, [r5]
   14c3c:	ldr	r5, [r5, #4]
   14c40:	str	r1, [r5, r0]!
   14c44:	ldr	r6, [r9, r7, lsl #3]
   14c48:	cmp	r6, #207	; 0xcf
   14c4c:	bhi	14ca0 <sf_gen_relation+0x2b0>
   14c50:	ldr	r1, [pc, #728]	; 14f30 <sf_gen_relation+0x540>
   14c54:	add	r0, r7, #1
   14c58:	cmp	r7, #15
   14c5c:	add	r1, pc, r1
   14c60:	str	r0, [r1]
   14c64:	bge	14f10 <sf_gen_relation+0x520>
   14c68:	mov	r1, #1024	; 0x400
   14c6c:	lsl	r6, r1, r0
   14c70:	mov	r0, r6
   14c74:	bl	ed4 <malloc@plt>
   14c78:	cmp	r0, #0
   14c7c:	str	r0, [r4, #12]
   14c80:	beq	14f10 <sf_gen_relation+0x520>
   14c84:	mov	r1, #0
   14c88:	mov	r2, r6
   14c8c:	add	r4, r4, #8
   14c90:	bl	f40 <memset@plt>
   14c94:	cmp	r6, #207	; 0xcf
   14c98:	str	r6, [r4]
   14c9c:	bls	14f10 <sf_gen_relation+0x520>
   14ca0:	sub	r0, r6, #208	; 0xd0
   14ca4:	mov	r2, r8
   14ca8:	str	r0, [r4]
   14cac:	ldr	r1, [r4, #4]
   14cb0:	add	r0, r1, r0
   14cb4:	mov	r1, #21
   14cb8:	str	r1, [r0, #8]
   14cbc:	str	r0, [r0, #96]	; 0x60
   14cc0:	mov	r1, r2
   14cc4:	ldr	r2, [r2, #16]
   14cc8:	cmp	r2, #0
   14ccc:	bne	14cc0 <sf_gen_relation+0x2d0>
   14cd0:	ldr	r4, [sp, #20]
   14cd4:	str	r5, [r1, #16]
   14cd8:	ldr	r1, [sp, #12]
   14cdc:	ldr	r3, [sp, #8]
   14ce0:	cmp	r1, #0
   14ce4:	mov	r2, r3
   14ce8:	ldrne	r1, [r0, #44]	; 0x2c
   14cec:	clzne	r1, r1
   14cf0:	lsrne	r1, r1, #5
   14cf4:	strne	r1, [r0, #44]	; 0x2c
   14cf8:	mov	r1, r2
   14cfc:	ldr	r2, [r2, #16]
   14d00:	cmp	r2, #0
   14d04:	bne	14cf8 <sf_gen_relation+0x308>
   14d08:	ldr	r7, [sp, #16]
   14d0c:	str	r8, [r1, #16]
   14d10:	ldr	r1, [r7, #4]
   14d14:	mov	r2, r1
   14d18:	ldr	r1, [r1, #16]
   14d1c:	cmp	r1, #0
   14d20:	bne	14d14 <sf_gen_relation+0x324>
   14d24:	str	r3, [r2, #16]
   14d28:	ldr	r1, [r7, #4]
   14d2c:	ldr	r2, [r4, #4]
   14d30:	mov	r3, r2
   14d34:	ldr	r2, [r2, #16]
   14d38:	cmp	r2, #0
   14d3c:	bne	14d30 <sf_gen_relation+0x340>
   14d40:	str	r1, [r3, #16]
   14d44:	mov	r3, #0
   14d48:	ldr	r1, [r4, #4]
   14d4c:	str	r1, [r0, #4]
   14d50:	ldr	r1, [r4, #8]
   14d54:	ldr	r2, [pc, #476]	; 14f38 <sf_gen_relation+0x548>
   14d58:	add	r2, pc, r2
   14d5c:	str	r3, [r2, r1, lsl #2]
   14d60:	ldr	r1, [r7, #8]
   14d64:	str	r3, [r2, r1, lsl #2]
   14d68:	ldr	r6, [r4]
   14d6c:	ldr	r1, [r7]
   14d70:	cmp	r6, #0
   14d74:	beq	14e34 <sf_gen_relation+0x444>
   14d78:	cmp	r1, #0
   14d7c:	beq	14e44 <sf_gen_relation+0x454>
   14d80:	ldr	r3, [r1, #96]	; 0x60
   14d84:	mov	r2, r6
   14d88:	ldr	r7, [r2, #44]	; 0x2c
   14d8c:	add	r5, r2, #84	; 0x54
   14d90:	cmp	r7, #0
   14d94:	mov	r7, #84	; 0x54
   14d98:	movweq	r7, #60	; 0x3c
   14d9c:	addeq	r5, r2, #60	; 0x3c
   14da0:	ldr	r2, [r2, r7]
   14da4:	str	r3, [r5]
   14da8:	cmp	r2, #0
   14dac:	bne	14d88 <sf_gen_relation+0x398>
   14db0:	ldr	r2, [r6, #44]	; 0x2c
   14db4:	clz	r2, r2
   14db8:	lsr	r2, r2, #5
   14dbc:	str	r2, [r6, #44]	; 0x2c
   14dc0:	ldr	r2, [r1, #44]	; 0x2c
   14dc4:	clz	r3, r2
   14dc8:	cmp	r2, #0
   14dcc:	mov	r2, #60	; 0x3c
   14dd0:	lsr	r3, r3, #5
   14dd4:	movweq	r2, #84	; 0x54
   14dd8:	str	r3, [r1, #44]	; 0x2c
   14ddc:	add	r3, r1, #60	; 0x3c
   14de0:	ldr	r7, [r1, r2]
   14de4:	addeq	r3, r1, #84	; 0x54
   14de8:	cmp	r7, #0
   14dec:	beq	14e14 <sf_gen_relation+0x424>
   14df0:	ldr	r2, [r7, #44]	; 0x2c
   14df4:	add	r3, r7, #84	; 0x54
   14df8:	cmp	r2, #0
   14dfc:	mov	r2, #84	; 0x54
   14e00:	movweq	r2, #60	; 0x3c
   14e04:	addeq	r3, r7, #60	; 0x3c
   14e08:	ldr	r7, [r7, r2]
   14e0c:	cmp	r7, #0
   14e10:	bne	14df0 <sf_gen_relation+0x400>
   14e14:	str	r6, [r3]
   14e18:	ldr	r2, [r1, #44]	; 0x2c
   14e1c:	clz	r2, r2
   14e20:	lsr	r2, r2, #5
   14e24:	str	r2, [r1, #44]	; 0x2c
   14e28:	ldr	r2, [r6, #96]	; 0x60
   14e2c:	str	r2, [r1, #96]	; 0x60
   14e30:	b	14e48 <sf_gen_relation+0x458>
   14e34:	cmp	r1, #0
   14e38:	bne	14e48 <sf_gen_relation+0x458>
   14e3c:	sub	sp, fp, #28
   14e40:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14e44:	mov	r1, r6
   14e48:	ldr	r2, [r0, #96]	; 0x60
   14e4c:	mov	r3, r1
   14e50:	ldr	r7, [r3, #44]	; 0x2c
   14e54:	add	r6, r3, #84	; 0x54
   14e58:	cmp	r7, #0
   14e5c:	mov	r7, #84	; 0x54
   14e60:	movweq	r7, #60	; 0x3c
   14e64:	addeq	r6, r3, #60	; 0x3c
   14e68:	ldr	r3, [r3, r7]
   14e6c:	str	r2, [r6]
   14e70:	cmp	r3, #0
   14e74:	bne	14e50 <sf_gen_relation+0x460>
   14e78:	ldr	r2, [r1, #44]	; 0x2c
   14e7c:	cmp	r0, #0
   14e80:	clz	r2, r2
   14e84:	lsr	r2, r2, #5
   14e88:	str	r2, [r1, #44]	; 0x2c
   14e8c:	ldr	r2, [r0, #44]	; 0x2c
   14e90:	clz	r3, r2
   14e94:	lsr	r3, r3, #5
   14e98:	str	r3, [r0, #44]	; 0x2c
   14e9c:	str	r0, [sp, #24]
   14ea0:	beq	14ee8 <sf_gen_relation+0x4f8>
   14ea4:	mov	r7, #60	; 0x3c
   14ea8:	cmp	r2, #0
   14eac:	mov	r3, r0
   14eb0:	movweq	r7, #84	; 0x54
   14eb4:	ldr	r2, [r3, r7]!
   14eb8:	cmp	r2, #0
   14ebc:	beq	14eec <sf_gen_relation+0x4fc>
   14ec0:	ldr	r7, [r2, #44]	; 0x2c
   14ec4:	add	r3, r2, #84	; 0x54
   14ec8:	cmp	r7, #0
   14ecc:	mov	r7, #84	; 0x54
   14ed0:	movweq	r7, #60	; 0x3c
   14ed4:	addeq	r3, r2, #60	; 0x3c
   14ed8:	ldr	r2, [r2, r7]
   14edc:	cmp	r2, #0
   14ee0:	bne	14ec0 <sf_gen_relation+0x4d0>
   14ee4:	b	14eec <sf_gen_relation+0x4fc>
   14ee8:	add	r3, sp, #24
   14eec:	str	r1, [r3]
   14ef0:	ldr	r2, [r0, #44]	; 0x2c
   14ef4:	clz	r2, r2
   14ef8:	lsr	r2, r2, #5
   14efc:	str	r2, [r0, #44]	; 0x2c
   14f00:	ldr	r1, [r1, #96]	; 0x60
   14f04:	str	r1, [r0, #96]	; 0x60
   14f08:	sub	sp, fp, #28
   14f0c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   14f10:	ldr	r0, [pc, #36]	; 14f3c <sf_gen_relation+0x54c>
   14f14:	add	r0, pc, r0
   14f18:	bl	2124 <sf_bpf_error>
   14f1c:	.word	0x00032aec
   14f20:	.word	0x00032a64
   14f24:	.word	0x00032ac4
   14f28:	.word	0x00032a34
   14f2c:	.word	0x0003299c
   14f30:	.word	0x000328a0
   14f34:	.word	0x00032938
   14f38:	.word	0x000327b8
   14f3c:	.word	0x000150f0

00014f40 <sf_gen_loadlen>:
   14f40:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   14f44:	add	fp, sp, #28
   14f48:	sub	sp, sp, #4
   14f4c:	ldr	r5, [pc, #528]	; 15164 <sf_gen_loadlen+0x224>
   14f50:	mvn	r1, #15
   14f54:	ldr	r5, [pc, r5]
   14f58:	ldr	r0, [pc, #520]	; 15168 <sf_gen_loadlen+0x228>
   14f5c:	ldr	r2, [pc, #520]	; 1516c <sf_gen_loadlen+0x22c>
   14f60:	add	r0, pc, r0
   14f64:	add	r2, pc, r2
   14f68:	ldr	r3, [r0, r5, lsl #2]
   14f6c:	cmp	r3, #0
   14f70:	beq	14fa0 <sf_gen_loadlen+0x60>
   14f74:	add	r3, r5, #1
   14f78:	adds	r1, r1, #1
   14f7c:	asr	r7, r3, #31
   14f80:	add	r7, r3, r7, lsr #28
   14f84:	bic	r7, r7, #15
   14f88:	sub	r5, r3, r7
   14f8c:	str	r5, [r2]
   14f90:	bne	14f68 <sf_gen_loadlen+0x28>
   14f94:	ldr	r0, [pc, #468]	; 15170 <sf_gen_loadlen+0x230>
   14f98:	add	r0, pc, r0
   14f9c:	bl	2124 <sf_bpf_error>
   14fa0:	mov	r1, #1
   14fa4:	str	r1, [r0, r5, lsl #2]
   14fa8:	ldr	r0, [pc, #452]	; 15174 <sf_gen_loadlen+0x234>
   14fac:	ldr	r0, [pc, r0]
   14fb0:	ldr	r9, [pc, #448]	; 15178 <sf_gen_loadlen+0x238>
   14fb4:	add	r9, pc, r9
   14fb8:	mov	r6, r9
   14fbc:	ldr	r4, [r6, r0, lsl #3]!
   14fc0:	cmp	r4, #11
   14fc4:	bhi	15020 <sf_gen_loadlen+0xe0>
   14fc8:	ldr	r1, [pc, #428]	; 1517c <sf_gen_loadlen+0x23c>
   14fcc:	add	r8, r0, #1
   14fd0:	cmp	r0, #15
   14fd4:	add	r1, pc, r1
   14fd8:	str	r8, [r1]
   14fdc:	bge	15158 <sf_gen_loadlen+0x218>
   14fe0:	mov	r0, #1024	; 0x400
   14fe4:	lsl	r4, r0, r8
   14fe8:	mov	r0, r4
   14fec:	bl	ed4 <malloc@plt>
   14ff0:	cmp	r0, #0
   14ff4:	str	r0, [r6, #12]
   14ff8:	beq	15158 <sf_gen_loadlen+0x218>
   14ffc:	mov	r1, #0
   15000:	mov	r2, r4
   15004:	add	r7, r6, #8
   15008:	bl	f40 <memset@plt>
   1500c:	cmp	r4, #12
   15010:	str	r4, [r7]
   15014:	bcc	15158 <sf_gen_loadlen+0x218>
   15018:	add	r6, r9, r8, lsl #3
   1501c:	b	15028 <sf_gen_loadlen+0xe8>
   15020:	mov	r8, r0
   15024:	mov	r7, r6
   15028:	sub	sl, r4, #12
   1502c:	str	sl, [r7]
   15030:	ldr	r4, [r9, r8, lsl #3]
   15034:	ldr	r2, [r7, #4]
   15038:	cmp	r4, #19
   1503c:	bhi	150a8 <sf_gen_loadlen+0x168>
   15040:	str	r2, [sp]
   15044:	add	r9, r8, #1
   15048:	cmp	r8, #15
   1504c:	ldr	r0, [pc, #300]	; 15180 <sf_gen_loadlen+0x240>
   15050:	add	r0, pc, r0
   15054:	str	r9, [r0]
   15058:	bge	15158 <sf_gen_loadlen+0x218>
   1505c:	mov	r0, #1024	; 0x400
   15060:	lsl	r4, r0, r9
   15064:	mov	r0, r4
   15068:	bl	ed4 <malloc@plt>
   1506c:	cmp	r0, #0
   15070:	str	r0, [r6, #12]
   15074:	beq	15158 <sf_gen_loadlen+0x218>
   15078:	mov	r1, #0
   1507c:	mov	r2, r4
   15080:	add	r7, r6, #8
   15084:	bl	f40 <memset@plt>
   15088:	cmp	r4, #20
   1508c:	str	r4, [r7]
   15090:	bcc	15158 <sf_gen_loadlen+0x218>
   15094:	ldr	r0, [pc, #232]	; 15184 <sf_gen_loadlen+0x244>
   15098:	ldr	r2, [sp]
   1509c:	add	r0, pc, r0
   150a0:	add	r6, r0, r9, lsl #3
   150a4:	b	150b0 <sf_gen_loadlen+0x170>
   150a8:	mov	r9, r8
   150ac:	mov	r7, r6
   150b0:	sub	r0, r4, #20
   150b4:	mov	r1, #128	; 0x80
   150b8:	str	r0, [r7]
   150bc:	ldr	r7, [r7, #4]
   150c0:	str	r1, [r7, r0]!
   150c4:	ldr	r4, [r6]
   150c8:	cmp	r4, #19
   150cc:	bhi	15128 <sf_gen_loadlen+0x1e8>
   150d0:	ldr	r1, [pc, #176]	; 15188 <sf_gen_loadlen+0x248>
   150d4:	add	r0, r9, #1
   150d8:	cmp	r9, #15
   150dc:	add	r1, pc, r1
   150e0:	str	r0, [r1]
   150e4:	bge	15158 <sf_gen_loadlen+0x218>
   150e8:	mov	r1, #1024	; 0x400
   150ec:	mov	r8, r2
   150f0:	lsl	r4, r1, r0
   150f4:	mov	r0, r4
   150f8:	bl	ed4 <malloc@plt>
   150fc:	cmp	r0, #0
   15100:	str	r0, [r6, #12]
   15104:	beq	15158 <sf_gen_loadlen+0x218>
   15108:	mov	r1, #0
   1510c:	mov	r2, r4
   15110:	add	r6, r6, #8
   15114:	bl	f40 <memset@plt>
   15118:	cmp	r4, #19
   1511c:	mov	r2, r8
   15120:	str	r4, [r6]
   15124:	bls	15158 <sf_gen_loadlen+0x218>
   15128:	sub	r1, r4, #20
   1512c:	add	r0, r2, sl
   15130:	mov	r3, #2
   15134:	str	r1, [r6]
   15138:	ldr	r2, [r6, #4]
   1513c:	str	r3, [r2, r1]!
   15140:	str	r2, [r7, #16]
   15144:	str	r5, [r2, #12]
   15148:	str	r7, [r0, #4]
   1514c:	str	r5, [r0, #8]
   15150:	sub	sp, fp, #28
   15154:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15158:	ldr	r0, [pc, #44]	; 1518c <sf_gen_loadlen+0x24c>
   1515c:	add	r0, pc, r0
   15160:	bl	2124 <sf_bpf_error>
   15164:	.word	0x000325b8
   15168:	.word	0x000325b0
   1516c:	.word	0x000325a8
   15170:	.word	0x00015abd
   15174:	.word	0x00032550
   15178:	.word	0x000324c8
   1517c:	.word	0x00032528
   15180:	.word	0x000324ac
   15184:	.word	0x000323e0
   15188:	.word	0x00032420
   1518c:	.word	0x00014ea8

00015190 <sf_gen_loadi>:
   15190:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15194:	add	fp, sp, #28
   15198:	sub	sp, sp, #4
   1519c:	mov	r8, r0
   151a0:	ldr	r0, [pc, #512]	; 153a8 <sf_gen_loadi+0x218>
   151a4:	ldr	r0, [pc, r0]
   151a8:	ldr	r5, [pc, #508]	; 153ac <sf_gen_loadi+0x21c>
   151ac:	add	r5, pc, r5
   151b0:	mov	r6, r5
   151b4:	ldr	r4, [r6, r0, lsl #3]!
   151b8:	cmp	r4, #11
   151bc:	bhi	15214 <sf_gen_loadi+0x84>
   151c0:	ldr	r1, [pc, #488]	; 153b0 <sf_gen_loadi+0x220>
   151c4:	add	sl, r0, #1
   151c8:	cmp	r0, #15
   151cc:	add	r1, pc, r1
   151d0:	str	sl, [r1]
   151d4:	bge	1539c <sf_gen_loadi+0x20c>
   151d8:	mov	r0, #1024	; 0x400
   151dc:	lsl	r4, r0, sl
   151e0:	mov	r0, r4
   151e4:	bl	ed4 <malloc@plt>
   151e8:	cmp	r0, #0
   151ec:	str	r0, [r6, #12]
   151f0:	beq	1539c <sf_gen_loadi+0x20c>
   151f4:	mov	r1, #0
   151f8:	mov	r2, r4
   151fc:	add	r6, r6, #8
   15200:	bl	f40 <memset@plt>
   15204:	cmp	r4, #11
   15208:	str	r4, [r6]
   1520c:	bhi	15218 <sf_gen_loadi+0x88>
   15210:	b	1539c <sf_gen_loadi+0x20c>
   15214:	mov	sl, r0
   15218:	sub	r0, r4, #12
   1521c:	str	r0, [r6]
   15220:	ldr	r1, [r6, #4]
   15224:	ldr	r7, [pc, #392]	; 153b4 <sf_gen_loadi+0x224>
   15228:	add	r9, r1, r0
   1522c:	ldr	r7, [pc, r7]
   15230:	ldr	r0, [pc, #384]	; 153b8 <sf_gen_loadi+0x228>
   15234:	ldr	r2, [pc, #384]	; 153bc <sf_gen_loadi+0x22c>
   15238:	mvn	r1, #15
   1523c:	add	r0, pc, r0
   15240:	add	r2, pc, r2
   15244:	ldr	r3, [r0, r7, lsl #2]
   15248:	cmp	r3, #0
   1524c:	beq	1527c <sf_gen_loadi+0xec>
   15250:	add	r3, r7, #1
   15254:	adds	r1, r1, #1
   15258:	asr	r7, r3, #31
   1525c:	add	r7, r3, r7, lsr #28
   15260:	bic	r7, r7, #15
   15264:	sub	r7, r3, r7
   15268:	str	r7, [r2]
   1526c:	bne	15244 <sf_gen_loadi+0xb4>
   15270:	ldr	r0, [pc, #328]	; 153c0 <sf_gen_loadi+0x230>
   15274:	add	r0, pc, r0
   15278:	bl	2124 <sf_bpf_error>
   1527c:	mov	r4, r5
   15280:	mov	r1, #1
   15284:	str	r8, [sp]
   15288:	ldr	r6, [r4, sl, lsl #3]!
   1528c:	str	r1, [r0, r7, lsl #2]
   15290:	cmp	r6, #19
   15294:	bhi	152f0 <sf_gen_loadi+0x160>
   15298:	ldr	r0, [pc, #292]	; 153c4 <sf_gen_loadi+0x234>
   1529c:	add	r8, sl, #1
   152a0:	cmp	sl, #15
   152a4:	add	r0, pc, r0
   152a8:	str	r8, [r0]
   152ac:	bge	1539c <sf_gen_loadi+0x20c>
   152b0:	mov	r0, #1024	; 0x400
   152b4:	lsl	r6, r0, r8
   152b8:	mov	r0, r6
   152bc:	bl	ed4 <malloc@plt>
   152c0:	cmp	r0, #0
   152c4:	str	r0, [r4, #12]
   152c8:	beq	1539c <sf_gen_loadi+0x20c>
   152cc:	mov	r1, #0
   152d0:	mov	r2, r6
   152d4:	add	sl, r4, #8
   152d8:	bl	f40 <memset@plt>
   152dc:	cmp	r6, #20
   152e0:	str	r6, [sl]
   152e4:	bcc	1539c <sf_gen_loadi+0x20c>
   152e8:	add	r4, r5, r8, lsl #3
   152ec:	b	152f8 <sf_gen_loadi+0x168>
   152f0:	mov	r8, sl
   152f4:	mov	sl, r4
   152f8:	sub	r0, r6, #20
   152fc:	mov	r1, #0
   15300:	str	r0, [sl]
   15304:	ldr	r6, [sl, #4]
   15308:	str	r1, [r6, r0]!
   1530c:	ldr	r0, [sp]
   15310:	str	r0, [r6, #12]
   15314:	ldr	r5, [r5, r8, lsl #3]
   15318:	cmp	r5, #19
   1531c:	bhi	15370 <sf_gen_loadi+0x1e0>
   15320:	ldr	r1, [pc, #160]	; 153c8 <sf_gen_loadi+0x238>
   15324:	add	r0, r8, #1
   15328:	cmp	r8, #15
   1532c:	add	r1, pc, r1
   15330:	str	r0, [r1]
   15334:	bge	1539c <sf_gen_loadi+0x20c>
   15338:	mov	r1, #1024	; 0x400
   1533c:	lsl	r5, r1, r0
   15340:	mov	r0, r5
   15344:	bl	ed4 <malloc@plt>
   15348:	cmp	r0, #0
   1534c:	str	r0, [r4, #12]
   15350:	beq	1539c <sf_gen_loadi+0x20c>
   15354:	mov	r1, #0
   15358:	mov	r2, r5
   1535c:	add	r4, r4, #8
   15360:	bl	f40 <memset@plt>
   15364:	cmp	r5, #19
   15368:	str	r5, [r4]
   1536c:	bls	1539c <sf_gen_loadi+0x20c>
   15370:	sub	r0, r5, #20
   15374:	mov	r2, #2
   15378:	str	r0, [r4]
   1537c:	ldr	r1, [r4, #4]
   15380:	str	r2, [r1, r0]!
   15384:	mov	r0, r9
   15388:	str	r1, [r6, #16]
   1538c:	str	r7, [r1, #12]
   15390:	stmib	r9, {r6, r7}
   15394:	sub	sp, fp, #28
   15398:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1539c:	ldr	r0, [pc, #40]	; 153cc <sf_gen_loadi+0x23c>
   153a0:	add	r0, pc, r0
   153a4:	bl	2124 <sf_bpf_error>
   153a8:	.word	0x00032358
   153ac:	.word	0x000322d0
   153b0:	.word	0x00032330
   153b4:	.word	0x000322e0
   153b8:	.word	0x000322d4
   153bc:	.word	0x000322cc
   153c0:	.word	0x000157e1
   153c4:	.word	0x00032258
   153c8:	.word	0x000321d0
   153cc:	.word	0x00014c64

000153d0 <sf_gen_neg>:
   153d0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   153d4:	add	fp, sp, #24
   153d8:	mov	r8, r0
   153dc:	ldr	r0, [pc, #484]	; 155c8 <sf_gen_neg+0x1f8>
   153e0:	ldr	r0, [pc, r0]
   153e4:	ldr	r9, [pc, #480]	; 155cc <sf_gen_neg+0x1fc>
   153e8:	add	r9, pc, r9
   153ec:	mov	r4, r9
   153f0:	ldr	r5, [r4, r0, lsl #3]!
   153f4:	cmp	r5, #19
   153f8:	bhi	15450 <sf_gen_neg+0x80>
   153fc:	ldr	r1, [pc, #460]	; 155d0 <sf_gen_neg+0x200>
   15400:	add	r7, r0, #1
   15404:	cmp	r0, #15
   15408:	add	r1, pc, r1
   1540c:	str	r7, [r1]
   15410:	bge	155bc <sf_gen_neg+0x1ec>
   15414:	mov	r0, #1024	; 0x400
   15418:	lsl	r5, r0, r7
   1541c:	mov	r0, r5
   15420:	bl	ed4 <malloc@plt>
   15424:	cmp	r0, #0
   15428:	str	r0, [r4, #12]
   1542c:	beq	155bc <sf_gen_neg+0x1ec>
   15430:	mov	r1, #0
   15434:	mov	r2, r5
   15438:	add	r4, r4, #8
   1543c:	bl	f40 <memset@plt>
   15440:	cmp	r5, #19
   15444:	str	r5, [r4]
   15448:	bhi	15454 <sf_gen_neg+0x84>
   1544c:	b	155bc <sf_gen_neg+0x1ec>
   15450:	mov	r7, r0
   15454:	sub	r1, r5, #20
   15458:	mov	r2, #96	; 0x60
   1545c:	str	r1, [r4]
   15460:	ldr	r0, [r4, #4]
   15464:	str	r2, [r0, r1]!
   15468:	ldr	r1, [r8, #8]
   1546c:	str	r1, [r0, #12]
   15470:	ldr	r1, [r8, #4]
   15474:	mov	r2, r1
   15478:	ldr	r1, [r1, #16]
   1547c:	cmp	r1, #0
   15480:	bne	15474 <sf_gen_neg+0xa4>
   15484:	str	r0, [r2, #16]
   15488:	mov	r6, r9
   1548c:	ldr	r5, [r6, r7, lsl #3]!
   15490:	cmp	r5, #19
   15494:	bhi	154ec <sf_gen_neg+0x11c>
   15498:	ldr	r0, [pc, #308]	; 155d4 <sf_gen_neg+0x204>
   1549c:	add	r4, r7, #1
   154a0:	cmp	r7, #15
   154a4:	add	r0, pc, r0
   154a8:	str	r4, [r0]
   154ac:	bge	155bc <sf_gen_neg+0x1ec>
   154b0:	mov	r0, #1024	; 0x400
   154b4:	lsl	r5, r0, r4
   154b8:	mov	r0, r5
   154bc:	bl	ed4 <malloc@plt>
   154c0:	cmp	r0, #0
   154c4:	str	r0, [r6, #12]
   154c8:	beq	155bc <sf_gen_neg+0x1ec>
   154cc:	mov	r1, #0
   154d0:	mov	r2, r5
   154d4:	add	r6, r6, #8
   154d8:	bl	f40 <memset@plt>
   154dc:	cmp	r5, #19
   154e0:	str	r5, [r6]
   154e4:	bhi	154f0 <sf_gen_neg+0x120>
   154e8:	b	155bc <sf_gen_neg+0x1ec>
   154ec:	mov	r4, r7
   154f0:	sub	r1, r5, #20
   154f4:	mov	r2, #132	; 0x84
   154f8:	str	r1, [r6]
   154fc:	ldr	r0, [r6, #4]
   15500:	str	r2, [r0, r1]!
   15504:	mov	r1, #0
   15508:	str	r1, [r0, #12]
   1550c:	ldr	r1, [r8, #4]
   15510:	mov	r2, r1
   15514:	ldr	r1, [r1, #16]
   15518:	cmp	r1, #0
   1551c:	bne	15510 <sf_gen_neg+0x140>
   15520:	str	r0, [r2, #16]
   15524:	ldr	r5, [r9, r4, lsl #3]!
   15528:	cmp	r5, #19
   1552c:	bhi	15580 <sf_gen_neg+0x1b0>
   15530:	ldr	r1, [pc, #160]	; 155d8 <sf_gen_neg+0x208>
   15534:	add	r0, r4, #1
   15538:	cmp	r4, #15
   1553c:	add	r1, pc, r1
   15540:	str	r0, [r1]
   15544:	bge	155bc <sf_gen_neg+0x1ec>
   15548:	mov	r1, #1024	; 0x400
   1554c:	lsl	r5, r1, r0
   15550:	mov	r0, r5
   15554:	bl	ed4 <malloc@plt>
   15558:	cmp	r0, #0
   1555c:	str	r0, [r9, #12]
   15560:	beq	155bc <sf_gen_neg+0x1ec>
   15564:	mov	r1, #0
   15568:	mov	r2, r5
   1556c:	add	r9, r9, #8
   15570:	bl	f40 <memset@plt>
   15574:	cmp	r5, #19
   15578:	str	r5, [r9]
   1557c:	bls	155bc <sf_gen_neg+0x1ec>
   15580:	sub	r1, r5, #20
   15584:	mov	r2, #2
   15588:	str	r1, [r9]
   1558c:	ldr	r0, [r9, #4]
   15590:	str	r2, [r0, r1]!
   15594:	ldr	r1, [r8, #8]
   15598:	str	r1, [r0, #12]
   1559c:	ldr	r1, [r8, #4]
   155a0:	mov	r2, r1
   155a4:	ldr	r1, [r1, #16]
   155a8:	cmp	r1, #0
   155ac:	bne	155a0 <sf_gen_neg+0x1d0>
   155b0:	str	r0, [r2, #16]
   155b4:	mov	r0, r8
   155b8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   155bc:	ldr	r0, [pc, #24]	; 155dc <sf_gen_neg+0x20c>
   155c0:	add	r0, pc, r0
   155c4:	bl	2124 <sf_bpf_error>
   155c8:	.word	0x0003211c
   155cc:	.word	0x00032094
   155d0:	.word	0x000320f4
   155d4:	.word	0x00032058
   155d8:	.word	0x00031fc0
   155dc:	.word	0x00014a44

000155e0 <sf_gen_arth>:
   155e0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   155e4:	add	fp, sp, #28
   155e8:	sub	sp, sp, #12
   155ec:	mov	sl, r2
   155f0:	ldr	r2, [pc, #824]	; 15930 <sf_gen_arth+0x350>
   155f4:	ldr	r2, [pc, r2]
   155f8:	ldr	r9, [pc, #820]	; 15934 <sf_gen_arth+0x354>
   155fc:	str	r1, [sp, #8]
   15600:	str	r0, [sp]
   15604:	add	r9, pc, r9
   15608:	mov	r6, r9
   1560c:	ldr	r7, [r6, r2, lsl #3]!
   15610:	cmp	r7, #19
   15614:	bhi	15674 <sf_gen_arth+0x94>
   15618:	ldr	r1, [pc, #792]	; 15938 <sf_gen_arth+0x358>
   1561c:	add	r4, r2, #1
   15620:	cmp	r2, #15
   15624:	add	r1, pc, r1
   15628:	str	r4, [r1]
   1562c:	bge	15924 <sf_gen_arth+0x344>
   15630:	mov	r0, #1024	; 0x400
   15634:	lsl	r7, r0, r4
   15638:	mov	r0, r7
   1563c:	bl	ed4 <malloc@plt>
   15640:	cmp	r0, #0
   15644:	str	r0, [r6, #12]
   15648:	beq	15924 <sf_gen_arth+0x344>
   1564c:	mov	r1, #0
   15650:	mov	r2, r7
   15654:	add	r5, r6, #8
   15658:	bl	f40 <memset@plt>
   1565c:	cmp	r7, #20
   15660:	str	r7, [r5]
   15664:	bcc	15924 <sf_gen_arth+0x344>
   15668:	ldr	ip, [sp, #8]
   1566c:	add	r6, r9, r4, lsl #3
   15670:	b	15680 <sf_gen_arth+0xa0>
   15674:	mov	ip, r1
   15678:	mov	r4, r2
   1567c:	mov	r5, r6
   15680:	sub	r0, r7, #20
   15684:	mov	r1, #97	; 0x61
   15688:	str	r0, [r5]
   1568c:	ldr	r5, [r5, #4]
   15690:	str	r1, [r5, r0]!
   15694:	str	sl, [sp, #4]
   15698:	ldr	r0, [sl, #8]
   1569c:	str	r0, [r5, #12]
   156a0:	ldr	r7, [r9, r4, lsl #3]
   156a4:	cmp	r7, #19
   156a8:	bhi	15708 <sf_gen_arth+0x128>
   156ac:	ldr	r0, [pc, #648]	; 1593c <sf_gen_arth+0x35c>
   156b0:	add	r8, r4, #1
   156b4:	cmp	r4, #15
   156b8:	add	r0, pc, r0
   156bc:	str	r8, [r0]
   156c0:	bge	15924 <sf_gen_arth+0x344>
   156c4:	mov	r0, #1024	; 0x400
   156c8:	lsl	r7, r0, r8
   156cc:	mov	r0, r7
   156d0:	bl	ed4 <malloc@plt>
   156d4:	cmp	r0, #0
   156d8:	str	r0, [r6, #12]
   156dc:	beq	15924 <sf_gen_arth+0x344>
   156e0:	mov	r1, #0
   156e4:	mov	r2, r7
   156e8:	add	r4, r6, #8
   156ec:	bl	f40 <memset@plt>
   156f0:	cmp	r7, #20
   156f4:	str	r7, [r4]
   156f8:	bcc	15924 <sf_gen_arth+0x344>
   156fc:	ldr	ip, [sp, #8]
   15700:	add	r6, r9, r8, lsl #3
   15704:	b	15710 <sf_gen_arth+0x130>
   15708:	mov	r8, r4
   1570c:	mov	r4, r6
   15710:	sub	r0, r7, #20
   15714:	mov	r1, #96	; 0x60
   15718:	str	r0, [r4]
   1571c:	ldr	sl, [r4, #4]
   15720:	str	r1, [sl, r0]!
   15724:	ldr	r0, [ip, #8]
   15728:	str	r0, [sl, #12]
   1572c:	ldr	r7, [r6]
   15730:	cmp	r7, #19
   15734:	bhi	15790 <sf_gen_arth+0x1b0>
   15738:	ldr	r0, [pc, #512]	; 15940 <sf_gen_arth+0x360>
   1573c:	add	r4, r8, #1
   15740:	cmp	r8, #15
   15744:	add	r0, pc, r0
   15748:	str	r4, [r0]
   1574c:	bge	15924 <sf_gen_arth+0x344>
   15750:	mov	r0, #1024	; 0x400
   15754:	lsl	r7, r0, r4
   15758:	mov	r0, r7
   1575c:	bl	ed4 <malloc@plt>
   15760:	cmp	r0, #0
   15764:	str	r0, [r6, #12]
   15768:	beq	15924 <sf_gen_arth+0x344>
   1576c:	mov	r1, #0
   15770:	mov	r2, r7
   15774:	add	r6, r6, #8
   15778:	bl	f40 <memset@plt>
   1577c:	ldr	ip, [sp, #8]
   15780:	cmp	r7, #19
   15784:	str	r7, [r6]
   15788:	bhi	15794 <sf_gen_arth+0x1b4>
   1578c:	b	15924 <sf_gen_arth+0x344>
   15790:	mov	r4, r8
   15794:	ldr	r0, [sp]
   15798:	sub	r2, r7, #20
   1579c:	str	r2, [r6]
   157a0:	orr	r1, r0, #12
   157a4:	ldr	r0, [r6, #4]
   157a8:	str	r1, [r0, r2]!
   157ac:	mov	r2, sl
   157b0:	mov	r1, r2
   157b4:	ldr	r2, [r2, #16]
   157b8:	cmp	r2, #0
   157bc:	bne	157b0 <sf_gen_arth+0x1d0>
   157c0:	str	r0, [r1, #16]
   157c4:	mov	r1, r5
   157c8:	mov	r0, r1
   157cc:	ldr	r1, [r1, #16]
   157d0:	cmp	r1, #0
   157d4:	bne	157c8 <sf_gen_arth+0x1e8>
   157d8:	ldr	r3, [sp, #4]
   157dc:	str	sl, [r0, #16]
   157e0:	ldr	r0, [r3, #4]
   157e4:	mov	r1, r0
   157e8:	ldr	r0, [r0, #16]
   157ec:	cmp	r0, #0
   157f0:	bne	157e4 <sf_gen_arth+0x204>
   157f4:	str	r5, [r1, #16]
   157f8:	ldr	r0, [r3, #4]
   157fc:	ldr	r1, [ip, #4]
   15800:	mov	r2, r1
   15804:	ldr	r1, [r1, #16]
   15808:	cmp	r1, #0
   1580c:	bne	15800 <sf_gen_arth+0x220>
   15810:	str	r0, [r2, #16]
   15814:	mov	r1, #0
   15818:	ldr	r0, [ip, #8]
   1581c:	ldr	r6, [pc, #288]	; 15944 <sf_gen_arth+0x364>
   15820:	ldr	r5, [r9, r4, lsl #3]!
   15824:	add	r6, pc, r6
   15828:	cmp	r5, #19
   1582c:	str	r1, [r6, r0, lsl #2]
   15830:	ldr	r0, [r3, #8]
   15834:	str	r1, [r6, r0, lsl #2]
   15838:	bhi	15890 <sf_gen_arth+0x2b0>
   1583c:	ldr	r1, [pc, #260]	; 15948 <sf_gen_arth+0x368>
   15840:	add	r0, r4, #1
   15844:	cmp	r4, #15
   15848:	add	r1, pc, r1
   1584c:	str	r0, [r1]
   15850:	bge	15924 <sf_gen_arth+0x344>
   15854:	mov	r1, #1024	; 0x400
   15858:	lsl	r5, r1, r0
   1585c:	mov	r0, r5
   15860:	bl	ed4 <malloc@plt>
   15864:	cmp	r0, #0
   15868:	str	r0, [r9, #12]
   1586c:	beq	15924 <sf_gen_arth+0x344>
   15870:	mov	r1, #0
   15874:	mov	r2, r5
   15878:	add	r9, r9, #8
   1587c:	bl	f40 <memset@plt>
   15880:	ldr	ip, [sp, #8]
   15884:	cmp	r5, #19
   15888:	str	r5, [r9]
   1588c:	bls	15924 <sf_gen_arth+0x344>
   15890:	sub	r1, r5, #20
   15894:	mov	r2, #2
   15898:	str	r1, [r9]
   1589c:	ldr	r0, [r9, #4]
   158a0:	str	r2, [r0, r1]!
   158a4:	mvn	r1, #15
   158a8:	ldr	r2, [pc, #156]	; 1594c <sf_gen_arth+0x36c>
   158ac:	ldr	r2, [pc, r2]
   158b0:	ldr	r3, [pc, #152]	; 15950 <sf_gen_arth+0x370>
   158b4:	add	r3, pc, r3
   158b8:	ldr	r7, [r6, r2, lsl #2]
   158bc:	cmp	r7, #0
   158c0:	beq	158f0 <sf_gen_arth+0x310>
   158c4:	add	r2, r2, #1
   158c8:	adds	r1, r1, #1
   158cc:	asr	r7, r2, #31
   158d0:	add	r7, r2, r7, lsr #28
   158d4:	bic	r7, r7, #15
   158d8:	sub	r2, r2, r7
   158dc:	str	r2, [r3]
   158e0:	bne	158b8 <sf_gen_arth+0x2d8>
   158e4:	ldr	r0, [pc, #104]	; 15954 <sf_gen_arth+0x374>
   158e8:	add	r0, pc, r0
   158ec:	bl	2124 <sf_bpf_error>
   158f0:	mov	r1, #1
   158f4:	str	r1, [r6, r2, lsl #2]
   158f8:	str	r2, [r0, #12]
   158fc:	str	r2, [ip, #8]
   15900:	ldr	r1, [ip, #4]
   15904:	mov	r2, r1
   15908:	ldr	r1, [r1, #16]
   1590c:	cmp	r1, #0
   15910:	bne	15904 <sf_gen_arth+0x324>
   15914:	str	r0, [r2, #16]
   15918:	mov	r0, ip
   1591c:	sub	sp, fp, #28
   15920:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15924:	ldr	r0, [pc, #44]	; 15958 <sf_gen_arth+0x378>
   15928:	add	r0, pc, r0
   1592c:	bl	2124 <sf_bpf_error>
   15930:	.word	0x00031f08
   15934:	.word	0x00031e78
   15938:	.word	0x00031ed8
   1593c:	.word	0x00031e44
   15940:	.word	0x00031db8
   15944:	.word	0x00031cec
   15948:	.word	0x00031cb4
   1594c:	.word	0x00031c60
   15950:	.word	0x00031c58
   15954:	.word	0x0001516d
   15958:	.word	0x000146dc

0001595c <sf_gen_greater>:
   1595c:	mov	r1, r0
   15960:	mov	r0, #48	; 0x30
   15964:	b	15968 <gen_len>

00015968 <gen_len>:
   15968:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1596c:	add	fp, sp, #28
   15970:	sub	sp, sp, #4
   15974:	mov	r9, r0
   15978:	ldr	r0, [pc, #292]	; 15aa4 <gen_len+0x13c>
   1597c:	mov	r8, r1
   15980:	ldr	r0, [pc, r0]
   15984:	ldr	sl, [pc, #284]	; 15aa8 <gen_len+0x140>
   15988:	add	sl, pc, sl
   1598c:	mov	r7, sl
   15990:	ldr	r6, [r7, r0, lsl #3]!
   15994:	cmp	r6, #19
   15998:	bhi	159f4 <gen_len+0x8c>
   1599c:	ldr	r1, [pc, #264]	; 15aac <gen_len+0x144>
   159a0:	add	r5, r0, #1
   159a4:	cmp	r0, #15
   159a8:	add	r1, pc, r1
   159ac:	str	r5, [r1]
   159b0:	bge	15a98 <gen_len+0x130>
   159b4:	mov	r0, #1024	; 0x400
   159b8:	lsl	r6, r0, r5
   159bc:	mov	r0, r6
   159c0:	bl	ed4 <malloc@plt>
   159c4:	cmp	r0, #0
   159c8:	str	r0, [r7, #12]
   159cc:	beq	15a98 <gen_len+0x130>
   159d0:	mov	r1, #0
   159d4:	mov	r2, r6
   159d8:	add	r4, r7, #8
   159dc:	bl	f40 <memset@plt>
   159e0:	cmp	r6, #20
   159e4:	str	r6, [r4]
   159e8:	bcc	15a98 <gen_len+0x130>
   159ec:	add	r7, sl, r5, lsl #3
   159f0:	b	159fc <gen_len+0x94>
   159f4:	mov	r5, r0
   159f8:	mov	r4, r7
   159fc:	sub	r0, r6, #20
   15a00:	mov	r1, #128	; 0x80
   15a04:	str	r0, [r4]
   15a08:	ldr	r4, [r4, #4]
   15a0c:	str	r1, [r4, r0]!
   15a10:	ldr	r6, [sl, r5, lsl #3]
   15a14:	cmp	r6, #207	; 0xcf
   15a18:	bhi	15a6c <gen_len+0x104>
   15a1c:	ldr	r1, [pc, #140]	; 15ab0 <gen_len+0x148>
   15a20:	add	r0, r5, #1
   15a24:	cmp	r5, #15
   15a28:	add	r1, pc, r1
   15a2c:	str	r0, [r1]
   15a30:	bge	15a98 <gen_len+0x130>
   15a34:	mov	r1, #1024	; 0x400
   15a38:	lsl	r6, r1, r0
   15a3c:	mov	r0, r6
   15a40:	bl	ed4 <malloc@plt>
   15a44:	cmp	r0, #0
   15a48:	str	r0, [r7, #12]
   15a4c:	beq	15a98 <gen_len+0x130>
   15a50:	mov	r1, #0
   15a54:	mov	r2, r6
   15a58:	add	r7, r7, #8
   15a5c:	bl	f40 <memset@plt>
   15a60:	cmp	r6, #207	; 0xcf
   15a64:	str	r6, [r7]
   15a68:	bls	15a98 <gen_len+0x130>
   15a6c:	sub	r0, r6, #208	; 0xd0
   15a70:	orr	r1, r9, #5
   15a74:	str	r0, [r7]
   15a78:	ldr	r2, [r7, #4]
   15a7c:	add	r0, r2, r0
   15a80:	str	r4, [r0, #4]
   15a84:	str	r1, [r0, #8]
   15a88:	str	r8, [r0, #20]
   15a8c:	str	r0, [r0, #96]	; 0x60
   15a90:	sub	sp, fp, #28
   15a94:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15a98:	ldr	r0, [pc, #20]	; 15ab4 <gen_len+0x14c>
   15a9c:	add	r0, pc, r0
   15aa0:	bl	2124 <sf_bpf_error>
   15aa4:	.word	0x00031b7c
   15aa8:	.word	0x00031af4
   15aac:	.word	0x00031b54
   15ab0:	.word	0x00031ad4
   15ab4:	.word	0x00014568

00015ab8 <sf_gen_less>:
   15ab8:	push	{fp, lr}
   15abc:	mov	fp, sp
   15ac0:	mov	r1, r0
   15ac4:	mov	r0, #32
   15ac8:	bl	15968 <gen_len>
   15acc:	ldr	r1, [r0, #44]	; 0x2c
   15ad0:	clz	r1, r1
   15ad4:	lsr	r1, r1, #5
   15ad8:	str	r1, [r0, #44]	; 0x2c
   15adc:	pop	{fp, pc}

00015ae0 <sf_gen_byteop>:
   15ae0:	push	{r4, r5, r6, r7, fp, lr}
   15ae4:	add	fp, sp, #16
   15ae8:	mov	r4, r2
   15aec:	sub	r2, r0, #38	; 0x26
   15af0:	cmp	r2, #24
   15af4:	bhi	15bd8 <sf_gen_byteop+0xf8>
   15af8:	add	r0, pc, #4
   15afc:	ldr	r2, [r0, r2, lsl #2]
   15b00:	add	pc, r0, r2
   15b04:	.word	0x00000064
   15b08:	.word	0x000002d8
   15b0c:	.word	0x000002d8
   15b10:	.word	0x000002d8
   15b14:	.word	0x000002d8
   15b18:	.word	0x000002d8
   15b1c:	.word	0x000002d8
   15b20:	.word	0x000002d8
   15b24:	.word	0x000002d8
   15b28:	.word	0x000002d8
   15b2c:	.word	0x000002d8
   15b30:	.word	0x000002d8
   15b34:	.word	0x000002d8
   15b38:	.word	0x000002d8
   15b3c:	.word	0x000002d8
   15b40:	.word	0x000002d8
   15b44:	.word	0x000002d8
   15b48:	.word	0x000002d8
   15b4c:	.word	0x000002d8
   15b50:	.word	0x000002d8
   15b54:	.word	0x000002d8
   15b58:	.word	0x000002d8
   15b5c:	.word	0x00000160
   15b60:	.word	0x00000200
   15b64:	.word	0x0000014c
   15b68:	ldr	r0, [pc, #660]	; 15e04 <sf_gen_byteop+0x324>
   15b6c:	ldr	r0, [pc, r0]
   15b70:	ldr	r6, [pc, #656]	; 15e08 <sf_gen_byteop+0x328>
   15b74:	add	r6, pc, r6
   15b78:	ldr	r5, [r6, r0, lsl #3]!
   15b7c:	cmp	r5, #19
   15b80:	bhi	15d18 <sf_gen_byteop+0x238>
   15b84:	ldr	r1, [pc, #640]	; 15e0c <sf_gen_byteop+0x32c>
   15b88:	add	r7, r0, #1
   15b8c:	cmp	r0, #15
   15b90:	add	r1, pc, r1
   15b94:	str	r7, [r1]
   15b98:	bge	15de0 <sf_gen_byteop+0x300>
   15b9c:	mov	r0, #1024	; 0x400
   15ba0:	lsl	r5, r0, r7
   15ba4:	mov	r0, r5
   15ba8:	bl	ed4 <malloc@plt>
   15bac:	cmp	r0, #0
   15bb0:	str	r0, [r6, #12]
   15bb4:	beq	15de0 <sf_gen_byteop+0x300>
   15bb8:	mov	r1, #0
   15bbc:	mov	r2, r5
   15bc0:	add	r6, r6, #8
   15bc4:	bl	f40 <memset@plt>
   15bc8:	cmp	r5, #19
   15bcc:	str	r5, [r6]
   15bd0:	bhi	15d1c <sf_gen_byteop+0x23c>
   15bd4:	b	15de0 <sf_gen_byteop+0x300>
   15bd8:	cmp	r0, #124	; 0x7c
   15bdc:	bne	15ddc <sf_gen_byteop+0x2fc>
   15be0:	ldr	r0, [pc, #528]	; 15df8 <sf_gen_byteop+0x318>
   15be4:	ldr	r0, [pc, r0]
   15be8:	ldr	r6, [pc, #524]	; 15dfc <sf_gen_byteop+0x31c>
   15bec:	add	r6, pc, r6
   15bf0:	ldr	r5, [r6, r0, lsl #3]!
   15bf4:	cmp	r5, #19
   15bf8:	bhi	15d28 <sf_gen_byteop+0x248>
   15bfc:	ldr	r1, [pc, #508]	; 15e00 <sf_gen_byteop+0x320>
   15c00:	add	r7, r0, #1
   15c04:	cmp	r0, #15
   15c08:	add	r1, pc, r1
   15c0c:	str	r7, [r1]
   15c10:	bge	15de0 <sf_gen_byteop+0x300>
   15c14:	mov	r0, #1024	; 0x400
   15c18:	lsl	r5, r0, r7
   15c1c:	mov	r0, r5
   15c20:	bl	ed4 <malloc@plt>
   15c24:	cmp	r0, #0
   15c28:	str	r0, [r6, #12]
   15c2c:	beq	15de0 <sf_gen_byteop+0x300>
   15c30:	mov	r1, #0
   15c34:	mov	r2, r5
   15c38:	add	r6, r6, #8
   15c3c:	bl	f40 <memset@plt>
   15c40:	cmp	r5, #19
   15c44:	str	r5, [r6]
   15c48:	bhi	15d2c <sf_gen_byteop+0x24c>
   15c4c:	b	15de0 <sf_gen_byteop+0x300>
   15c50:	mov	r0, #1
   15c54:	mov	r2, #16
   15c58:	mov	r3, r4
   15c5c:	pop	{r4, r5, r6, r7, fp, lr}
   15c60:	b	15e1c <gen_cmp_gt>
   15c64:	mov	r0, #1
   15c68:	mov	r2, #16
   15c6c:	bl	17a3c <gen_load_a>
   15c70:	mov	r5, r0
   15c74:	ldr	r0, [pc, #368]	; 15dec <sf_gen_byteop+0x30c>
   15c78:	ldr	r0, [pc, r0]
   15c7c:	ldr	r7, [pc, #364]	; 15df0 <sf_gen_byteop+0x310>
   15c80:	add	r7, pc, r7
   15c84:	ldr	r6, [r7, r0, lsl #3]!
   15c88:	cmp	r6, #207	; 0xcf
   15c8c:	bhi	15ce0 <sf_gen_byteop+0x200>
   15c90:	ldr	r2, [pc, #348]	; 15df4 <sf_gen_byteop+0x314>
   15c94:	add	r1, r0, #1
   15c98:	cmp	r0, #15
   15c9c:	add	r2, pc, r2
   15ca0:	str	r1, [r2]
   15ca4:	bge	15de0 <sf_gen_byteop+0x300>
   15ca8:	mov	r0, #1024	; 0x400
   15cac:	lsl	r6, r0, r1
   15cb0:	mov	r0, r6
   15cb4:	bl	ed4 <malloc@plt>
   15cb8:	cmp	r0, #0
   15cbc:	str	r0, [r7, #12]
   15cc0:	beq	15de0 <sf_gen_byteop+0x300>
   15cc4:	mov	r1, #0
   15cc8:	mov	r2, r6
   15ccc:	add	r7, r7, #8
   15cd0:	bl	f40 <memset@plt>
   15cd4:	cmp	r6, #207	; 0xcf
   15cd8:	str	r6, [r7]
   15cdc:	bls	15de0 <sf_gen_byteop+0x300>
   15ce0:	sub	r0, r6, #208	; 0xd0
   15ce4:	str	r0, [r7]
   15ce8:	ldr	r1, [r7, #4]
   15cec:	add	r0, r1, r0
   15cf0:	mov	r1, #53	; 0x35
   15cf4:	str	r5, [r0, #4]
   15cf8:	str	r1, [r0, #8]
   15cfc:	str	r4, [r0, #20]
   15d00:	b	15dc4 <sf_gen_byteop+0x2e4>
   15d04:	mov	r0, #1
   15d08:	mov	r2, #16
   15d0c:	mov	r3, r4
   15d10:	pop	{r4, r5, r6, r7, fp, lr}
   15d14:	b	a9f8 <gen_cmp>
   15d18:	mov	r7, r0
   15d1c:	sub	r0, r5, #20
   15d20:	mov	r1, #84	; 0x54
   15d24:	b	15d34 <sf_gen_byteop+0x254>
   15d28:	mov	r7, r0
   15d2c:	sub	r0, r5, #20
   15d30:	mov	r1, #68	; 0x44
   15d34:	str	r0, [r6]
   15d38:	ldr	r5, [r6, #4]
   15d3c:	str	r1, [r5, r0]!
   15d40:	str	r4, [r5, #12]
   15d44:	ldr	r6, [pc, #196]	; 15e10 <sf_gen_byteop+0x330>
   15d48:	add	r6, pc, r6
   15d4c:	ldr	r4, [r6, r7, lsl #3]!
   15d50:	cmp	r4, #207	; 0xcf
   15d54:	bhi	15da8 <sf_gen_byteop+0x2c8>
   15d58:	ldr	r1, [pc, #180]	; 15e14 <sf_gen_byteop+0x334>
   15d5c:	add	r0, r7, #1
   15d60:	cmp	r7, #15
   15d64:	add	r1, pc, r1
   15d68:	str	r0, [r1]
   15d6c:	bge	15de0 <sf_gen_byteop+0x300>
   15d70:	mov	r1, #1024	; 0x400
   15d74:	lsl	r4, r1, r0
   15d78:	mov	r0, r4
   15d7c:	bl	ed4 <malloc@plt>
   15d80:	cmp	r0, #0
   15d84:	str	r0, [r6, #12]
   15d88:	beq	15de0 <sf_gen_byteop+0x300>
   15d8c:	mov	r1, #0
   15d90:	mov	r2, r4
   15d94:	add	r6, r6, #8
   15d98:	bl	f40 <memset@plt>
   15d9c:	cmp	r4, #207	; 0xcf
   15da0:	str	r4, [r6]
   15da4:	bls	15de0 <sf_gen_byteop+0x300>
   15da8:	sub	r0, r4, #208	; 0xd0
   15dac:	str	r0, [r6]
   15db0:	ldr	r1, [r6, #4]
   15db4:	add	r0, r1, r0
   15db8:	mov	r1, #21
   15dbc:	str	r5, [r0, #4]
   15dc0:	str	r1, [r0, #8]
   15dc4:	ldr	r1, [r0, #44]	; 0x2c
   15dc8:	clz	r1, r1
   15dcc:	lsr	r1, r1, #5
   15dd0:	str	r1, [r0, #44]	; 0x2c
   15dd4:	str	r0, [r0, #96]	; 0x60
   15dd8:	pop	{r4, r5, r6, r7, fp, pc}
   15ddc:	bl	fc4 <abort@plt>
   15de0:	ldr	r0, [pc, #48]	; 15e18 <sf_gen_byteop+0x338>
   15de4:	add	r0, pc, r0
   15de8:	bl	2124 <sf_bpf_error>
   15dec:	.word	0x00031884
   15df0:	.word	0x000317fc
   15df4:	.word	0x00031860
   15df8:	.word	0x00031918
   15dfc:	.word	0x00031890
   15e00:	.word	0x000318f4
   15e04:	.word	0x00031990
   15e08:	.word	0x00031908
   15e0c:	.word	0x0003196c
   15e10:	.word	0x00031734
   15e14:	.word	0x00031798
   15e18:	.word	0x00014220

00015e1c <gen_cmp_gt>:
   15e1c:	push	{r4, r5, r6, r7, fp, lr}
   15e20:	add	fp, sp, #16
   15e24:	mov	r4, r3
   15e28:	bl	17a3c <gen_load_a>
   15e2c:	mov	r5, r0
   15e30:	ldr	r0, [pc, #152]	; 15ed0 <gen_cmp_gt+0xb4>
   15e34:	ldr	r0, [pc, r0]
   15e38:	ldr	r7, [pc, #148]	; 15ed4 <gen_cmp_gt+0xb8>
   15e3c:	add	r7, pc, r7
   15e40:	ldr	r6, [r7, r0, lsl #3]!
   15e44:	cmp	r6, #207	; 0xcf
   15e48:	bhi	15e9c <gen_cmp_gt+0x80>
   15e4c:	ldr	r2, [pc, #132]	; 15ed8 <gen_cmp_gt+0xbc>
   15e50:	add	r1, r0, #1
   15e54:	cmp	r0, #15
   15e58:	add	r2, pc, r2
   15e5c:	str	r1, [r2]
   15e60:	bge	15ec4 <gen_cmp_gt+0xa8>
   15e64:	mov	r0, #1024	; 0x400
   15e68:	lsl	r6, r0, r1
   15e6c:	mov	r0, r6
   15e70:	bl	ed4 <malloc@plt>
   15e74:	cmp	r0, #0
   15e78:	str	r0, [r7, #12]
   15e7c:	beq	15ec4 <gen_cmp_gt+0xa8>
   15e80:	mov	r1, #0
   15e84:	mov	r2, r6
   15e88:	add	r7, r7, #8
   15e8c:	bl	f40 <memset@plt>
   15e90:	cmp	r6, #207	; 0xcf
   15e94:	str	r6, [r7]
   15e98:	bls	15ec4 <gen_cmp_gt+0xa8>
   15e9c:	sub	r0, r6, #208	; 0xd0
   15ea0:	str	r0, [r7]
   15ea4:	ldr	r1, [r7, #4]
   15ea8:	add	r0, r1, r0
   15eac:	mov	r1, #37	; 0x25
   15eb0:	str	r5, [r0, #4]
   15eb4:	str	r1, [r0, #8]
   15eb8:	str	r4, [r0, #20]
   15ebc:	str	r0, [r0, #96]	; 0x60
   15ec0:	pop	{r4, r5, r6, r7, fp, pc}
   15ec4:	ldr	r0, [pc, #16]	; 15edc <gen_cmp_gt+0xc0>
   15ec8:	add	r0, pc, r0
   15ecc:	bl	2124 <sf_bpf_error>
   15ed0:	.word	0x000316c8
   15ed4:	.word	0x00031640
   15ed8:	.word	0x000316a4
   15edc:	.word	0x0001413c

00015ee0 <sf_gen_broadcast>:
   15ee0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15ee4:	add	fp, sp, #28
   15ee8:	sub	sp, sp, #28
   15eec:	cmp	r0, #2
   15ef0:	bcs	16018 <sf_gen_broadcast+0x138>
   15ef4:	ldr	r0, [pc, #3092]	; 16b10 <sf_gen_broadcast+0xc30>
   15ef8:	ldr	r0, [pc, r0]
   15efc:	sub	r1, r0, #105	; 0x69
   15f00:	cmp	r1, #58	; 0x3a
   15f04:	bhi	160c0 <sf_gen_broadcast+0x1e0>
   15f08:	add	r0, pc, #4
   15f0c:	ldr	r1, [r0, r1, lsl #2]
   15f10:	add	pc, r0, r1
   15f14:	.word	0x000000ec
   15f18:	.word	0x000003ec
   15f1c:	.word	0x000003ec
   15f20:	.word	0x000003ec
   15f24:	.word	0x000003ec
   15f28:	.word	0x000003ec
   15f2c:	.word	0x000003ec
   15f30:	.word	0x000003ec
   15f34:	.word	0x000003ec
   15f38:	.word	0x000003ec
   15f3c:	.word	0x000003ec
   15f40:	.word	0x000003ec
   15f44:	.word	0x000003ec
   15f48:	.word	0x000003ec
   15f4c:	.word	0x000000ec
   15f50:	.word	0x000003ec
   15f54:	.word	0x000003ec
   15f58:	.word	0x00000210
   15f5c:	.word	0x00000418
   15f60:	.word	0x000003ec
   15f64:	.word	0x000003ec
   15f68:	.word	0x000003ec
   15f6c:	.word	0x000000ec
   15f70:	.word	0x000003ec
   15f74:	.word	0x00000224
   15f78:	.word	0x000003ec
   15f7c:	.word	0x000003ec
   15f80:	.word	0x000003ec
   15f84:	.word	0x000003ec
   15f88:	.word	0x000003ec
   15f8c:	.word	0x000003ec
   15f90:	.word	0x000003ec
   15f94:	.word	0x000003ec
   15f98:	.word	0x000003ec
   15f9c:	.word	0x000003ec
   15fa0:	.word	0x000003ec
   15fa4:	.word	0x000003ec
   15fa8:	.word	0x000003ec
   15fac:	.word	0x000003ec
   15fb0:	.word	0x000003ec
   15fb4:	.word	0x000003ec
   15fb8:	.word	0x000003ec
   15fbc:	.word	0x000003ec
   15fc0:	.word	0x000003ec
   15fc4:	.word	0x000003ec
   15fc8:	.word	0x000003ec
   15fcc:	.word	0x000003ec
   15fd0:	.word	0x000003ec
   15fd4:	.word	0x000003ec
   15fd8:	.word	0x000003ec
   15fdc:	.word	0x000003ec
   15fe0:	.word	0x000003ec
   15fe4:	.word	0x000003ec
   15fe8:	.word	0x000003ec
   15fec:	.word	0x000003ec
   15ff0:	.word	0x000003ec
   15ff4:	.word	0x000003ec
   15ff8:	.word	0x000003ec
   15ffc:	.word	0x000000ec
   16000:	ldr	r0, [pc, #2828]	; 16b14 <sf_gen_broadcast+0xc34>
   16004:	mov	r1, #2
   16008:	add	r0, pc, r0
   1600c:	sub	sp, fp, #28
   16010:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16014:	b	d11c <gen_wlanhostop>
   16018:	bne	16af4 <sf_gen_broadcast+0xc14>
   1601c:	ldr	r0, [pc, #2840]	; 16b3c <sf_gen_broadcast+0xc5c>
   16020:	ldr	r0, [pc, r0]
   16024:	cmn	r0, #1
   16028:	beq	16b00 <sf_gen_broadcast+0xc20>
   1602c:	mov	r0, #2048	; 0x800
   16030:	bl	7320 <gen_linktype>
   16034:	ldr	r1, [pc, #2820]	; 16b40 <sf_gen_broadcast+0xc60>
   16038:	add	r1, pc, r1
   1603c:	ldrb	r8, [r1]
   16040:	ldr	r1, [pc, #2812]	; 16b44 <sf_gen_broadcast+0xc64>
   16044:	ldr	r1, [pc, r1]
   16048:	cmp	r8, #0
   1604c:	add	r1, r1, #16
   16050:	str	r1, [sp, #8]
   16054:	ldr	sl, [pc, #2796]	; 16b48 <sf_gen_broadcast+0xc68>
   16058:	ldr	sl, [pc, sl]
   1605c:	stm	sp, {r0, sl}
   16060:	beq	16118 <sf_gen_broadcast+0x238>
   16064:	ldr	r4, [pc, #2792]	; 16b54 <sf_gen_broadcast+0xc74>
   16068:	ldr	r4, [pc, r4]
   1606c:	cmn	r4, #1
   16070:	bne	16164 <sf_gen_broadcast+0x284>
   16074:	ldr	r4, [pc, #2780]	; 16b58 <sf_gen_broadcast+0xc78>
   16078:	mvn	r1, #15
   1607c:	ldr	r4, [pc, r4]
   16080:	ldr	r6, [pc, #2772]	; 16b5c <sf_gen_broadcast+0xc7c>
   16084:	ldr	r2, [pc, #2772]	; 16b60 <sf_gen_broadcast+0xc80>
   16088:	add	r6, pc, r6
   1608c:	add	r2, pc, r2
   16090:	ldr	r3, [r6, r4, lsl #2]
   16094:	cmp	r3, #0
   16098:	beq	16150 <sf_gen_broadcast+0x270>
   1609c:	add	r3, r4, #1
   160a0:	adds	r1, r1, #1
   160a4:	asr	r7, r3, #31
   160a8:	add	r7, r3, r7, lsr #28
   160ac:	bic	r7, r7, #15
   160b0:	sub	r4, r3, r7
   160b4:	str	r4, [r2]
   160b8:	bne	16090 <sf_gen_broadcast+0x1b0>
   160bc:	b	16620 <sf_gen_broadcast+0x740>
   160c0:	sub	r1, r0, #1
   160c4:	cmp	r1, #9
   160c8:	bhi	162f8 <sf_gen_broadcast+0x418>
   160cc:	add	r0, pc, #4
   160d0:	ldr	r1, [r0, r1, lsl #2]
   160d4:	add	pc, r0, r1
   160d8:	.word	0x00000028
   160dc:	.word	0x00000228
   160e0:	.word	0x00000228
   160e4:	.word	0x00000228
   160e8:	.word	0x00000228
   160ec:	.word	0x0000004c
   160f0:	.word	0x00000060
   160f4:	.word	0x00000228
   160f8:	.word	0x00000228
   160fc:	.word	0x00000234
   16100:	ldr	r1, [pc, #2580]	; 16b1c <sf_gen_broadcast+0xc3c>
   16104:	mov	r0, #1
   16108:	ldr	r1, [pc, r1]
   1610c:	ldr	r3, [pc, #2572]	; 16b20 <sf_gen_broadcast+0xc40>
   16110:	add	r3, pc, r3
   16114:	b	1631c <sf_gen_broadcast+0x43c>
   16118:	ldr	r7, [pc, #2604]	; 16b4c <sf_gen_broadcast+0xc6c>
   1611c:	ldr	r7, [pc, r7]
   16120:	b	16260 <sf_gen_broadcast+0x380>
   16124:	ldr	r3, [pc, #2556]	; 16b28 <sf_gen_broadcast+0xc48>
   16128:	mov	r0, #1
   1612c:	mov	r1, #2
   16130:	add	r3, pc, r3
   16134:	b	1631c <sf_gen_broadcast+0x43c>
   16138:	ldr	r3, [pc, #2520]	; 16b18 <sf_gen_broadcast+0xc38>
   1613c:	mov	r0, #1
   16140:	mov	r1, #1
   16144:	mov	r2, #1
   16148:	add	r3, pc, r3
   1614c:	b	16320 <sf_gen_broadcast+0x440>
   16150:	mov	r1, #1
   16154:	str	r1, [r6, r4, lsl #2]
   16158:	ldr	r1, [pc, #2568]	; 16b68 <sf_gen_broadcast+0xc88>
   1615c:	add	r1, pc, r1
   16160:	str	r4, [r1]
   16164:	ldr	r0, [pc, #2560]	; 16b6c <sf_gen_broadcast+0xc8c>
   16168:	ldr	r0, [pc, r0]
   1616c:	ldr	sl, [pc, #2556]	; 16b70 <sf_gen_broadcast+0xc90>
   16170:	add	sl, pc, sl
   16174:	mov	r6, sl
   16178:	ldr	r5, [r6, r0, lsl #3]!
   1617c:	cmp	r5, #19
   16180:	bhi	161d8 <sf_gen_broadcast+0x2f8>
   16184:	ldr	r1, [pc, #2536]	; 16b74 <sf_gen_broadcast+0xc94>
   16188:	add	r7, r0, #1
   1618c:	cmp	r0, #15
   16190:	add	r1, pc, r1
   16194:	str	r7, [r1]
   16198:	bge	16ae8 <sf_gen_broadcast+0xc08>
   1619c:	mov	r0, #1024	; 0x400
   161a0:	lsl	r5, r0, r7
   161a4:	mov	r0, r5
   161a8:	bl	ed4 <malloc@plt>
   161ac:	cmp	r0, #0
   161b0:	str	r0, [r6, #12]
   161b4:	beq	16ae8 <sf_gen_broadcast+0xc08>
   161b8:	mov	r1, #0
   161bc:	mov	r2, r5
   161c0:	add	r6, r6, #8
   161c4:	bl	f40 <memset@plt>
   161c8:	cmp	r5, #19
   161cc:	str	r5, [r6]
   161d0:	bhi	161dc <sf_gen_broadcast+0x2fc>
   161d4:	b	16ae8 <sf_gen_broadcast+0xc08>
   161d8:	mov	r7, r0
   161dc:	sub	r0, r5, #20
   161e0:	mov	r1, #97	; 0x61
   161e4:	str	r0, [r6]
   161e8:	ldr	r9, [r6, #4]
   161ec:	str	r1, [r9, r0]!
   161f0:	cmp	r9, #0
   161f4:	str	r4, [r9, #12]
   161f8:	beq	1625c <sf_gen_broadcast+0x37c>
   161fc:	ldr	r5, [sl, r7, lsl #3]!
   16200:	cmp	r5, #19
   16204:	bhi	16430 <sf_gen_broadcast+0x550>
   16208:	ldr	r0, [pc, #2408]	; 16b78 <sf_gen_broadcast+0xc98>
   1620c:	add	r4, r7, #1
   16210:	cmp	r7, #15
   16214:	add	r0, pc, r0
   16218:	str	r4, [r0]
   1621c:	bge	16ae8 <sf_gen_broadcast+0xc08>
   16220:	mov	r0, #1024	; 0x400
   16224:	lsl	r5, r0, r4
   16228:	mov	r0, r5
   1622c:	bl	ed4 <malloc@plt>
   16230:	cmp	r0, #0
   16234:	str	r0, [sl, #12]
   16238:	beq	16ae8 <sf_gen_broadcast+0xc08>
   1623c:	mov	r1, #0
   16240:	mov	r2, r5
   16244:	add	sl, sl, #8
   16248:	bl	f40 <memset@plt>
   1624c:	cmp	r5, #19
   16250:	str	r5, [sl]
   16254:	bhi	16434 <sf_gen_broadcast+0x554>
   16258:	b	16ae8 <sf_gen_broadcast+0xc08>
   1625c:	ldr	sl, [sp, #4]
   16260:	ldr	r6, [pc, #2280]	; 16b50 <sf_gen_broadcast+0xc70>
   16264:	add	r6, pc, r6
   16268:	ldr	r5, [r6, r7, lsl #3]!
   1626c:	cmp	r5, #19
   16270:	bhi	162c8 <sf_gen_broadcast+0x3e8>
   16274:	ldr	r0, [pc, #2304]	; 16b7c <sf_gen_broadcast+0xc9c>
   16278:	add	r4, r7, #1
   1627c:	cmp	r7, #15
   16280:	add	r0, pc, r0
   16284:	str	r4, [r0]
   16288:	bge	16ae8 <sf_gen_broadcast+0xc08>
   1628c:	mov	r0, #1024	; 0x400
   16290:	lsl	r5, r0, r4
   16294:	mov	r0, r5
   16298:	bl	ed4 <malloc@plt>
   1629c:	cmp	r0, #0
   162a0:	str	r0, [r6, #12]
   162a4:	beq	16ae8 <sf_gen_broadcast+0xc08>
   162a8:	mov	r1, #0
   162ac:	mov	r2, r5
   162b0:	add	r6, r6, #8
   162b4:	bl	f40 <memset@plt>
   162b8:	cmp	r5, #19
   162bc:	str	r5, [r6]
   162c0:	bhi	162cc <sf_gen_broadcast+0x3ec>
   162c4:	b	16ae8 <sf_gen_broadcast+0xc08>
   162c8:	mov	r4, r7
   162cc:	sub	r0, r5, #20
   162d0:	mov	r1, #32
   162d4:	str	r0, [r6]
   162d8:	ldr	r9, [r6, #4]
   162dc:	str	r1, [r9, r0]!
   162e0:	ldr	r0, [pc, #2200]	; 16b80 <sf_gen_broadcast+0xca0>
   162e4:	ldr	r0, [pc, r0]
   162e8:	ldr	r1, [sp, #8]
   162ec:	add	r0, r0, r1
   162f0:	str	r0, [r9, #12]
   162f4:	b	1646c <sf_gen_broadcast+0x58c>
   162f8:	cmp	r0, #192	; 0xc0
   162fc:	beq	16000 <sf_gen_broadcast+0x120>
   16300:	ldr	r0, [pc, #2096]	; 16b38 <sf_gen_broadcast+0xc58>
   16304:	add	r0, pc, r0
   16308:	bl	2124 <sf_bpf_error>
   1630c:	ldr	r3, [pc, #2064]	; 16b24 <sf_gen_broadcast+0xc44>
   16310:	mov	r0, #1
   16314:	mov	r1, #1
   16318:	add	r3, pc, r3
   1631c:	mov	r2, #6
   16320:	sub	sp, fp, #28
   16324:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16328:	b	1c3c0 <gen_bcmp>
   1632c:	ldr	r0, [pc, #2040]	; 16b2c <sf_gen_broadcast+0xc4c>
   16330:	add	r0, pc, r0
   16334:	ldrb	r0, [r0]
   16338:	cmp	r0, #1
   1633c:	bne	16af4 <sf_gen_broadcast+0xc14>
   16340:	mov	r0, #1
   16344:	mov	r1, #4
   16348:	mov	r2, #8
   1634c:	mov	r3, #65280	; 0xff00
   16350:	bl	a9f8 <gen_cmp>
   16354:	mov	r4, r0
   16358:	ldr	r0, [r0, #44]	; 0x2c
   1635c:	mov	r2, #6
   16360:	clz	r0, r0
   16364:	lsr	r0, r0, #5
   16368:	str	r0, [r4, #44]	; 0x2c
   1636c:	mov	r0, #1
   16370:	ldr	r1, [pc, #1976]	; 16b30 <sf_gen_broadcast+0xc50>
   16374:	ldr	r1, [pc, r1]
   16378:	ldr	r3, [pc, #1972]	; 16b34 <sf_gen_broadcast+0xc54>
   1637c:	add	r3, pc, r3
   16380:	bl	1c3c0 <gen_bcmp>
   16384:	cmp	r4, #0
   16388:	beq	163bc <sf_gen_broadcast+0x4dc>
   1638c:	ldr	r1, [r0, #96]	; 0x60
   16390:	mov	r2, r4
   16394:	ldr	r3, [r2, #44]	; 0x2c
   16398:	add	r7, r2, #84	; 0x54
   1639c:	cmp	r3, #0
   163a0:	mov	r3, #84	; 0x54
   163a4:	movweq	r3, #60	; 0x3c
   163a8:	addeq	r7, r2, #60	; 0x3c
   163ac:	ldr	r2, [r2, r3]
   163b0:	str	r1, [r7]
   163b4:	cmp	r2, #0
   163b8:	bne	16394 <sf_gen_broadcast+0x4b4>
   163bc:	ldr	r1, [r4, #44]	; 0x2c
   163c0:	cmp	r0, #0
   163c4:	clz	r1, r1
   163c8:	lsr	r1, r1, #5
   163cc:	str	r1, [r4, #44]	; 0x2c
   163d0:	ldr	r2, [r0, #44]	; 0x2c
   163d4:	clz	r1, r2
   163d8:	lsr	r1, r1, #5
   163dc:	str	r1, [r0, #44]	; 0x2c
   163e0:	str	r0, [sp, #16]
   163e4:	beq	16ac8 <sf_gen_broadcast+0xbe8>
   163e8:	cmp	r2, #0
   163ec:	mov	r2, #60	; 0x3c
   163f0:	add	r1, r0, #60	; 0x3c
   163f4:	movweq	r2, #84	; 0x54
   163f8:	addeq	r1, r0, #84	; 0x54
   163fc:	ldr	r2, [r0, r2]
   16400:	cmp	r2, #0
   16404:	beq	16acc <sf_gen_broadcast+0xbec>
   16408:	ldr	r3, [r2, #44]	; 0x2c
   1640c:	add	r1, r2, #84	; 0x54
   16410:	cmp	r3, #0
   16414:	mov	r3, #84	; 0x54
   16418:	movweq	r3, #60	; 0x3c
   1641c:	addeq	r1, r2, #60	; 0x3c
   16420:	ldr	r2, [r2, r3]
   16424:	cmp	r2, #0
   16428:	bne	16408 <sf_gen_broadcast+0x528>
   1642c:	b	16acc <sf_gen_broadcast+0xbec>
   16430:	mov	r4, r7
   16434:	sub	r1, r5, #20
   16438:	mov	r2, #64	; 0x40
   1643c:	str	r1, [sl]
   16440:	ldr	r0, [sl, #4]
   16444:	str	r2, [r0, r1]!
   16448:	mov	r2, r9
   1644c:	ldr	r1, [sp, #8]
   16450:	str	r1, [r0, #12]
   16454:	mov	r1, r2
   16458:	ldr	r2, [r2, #16]
   1645c:	cmp	r2, #0
   16460:	bne	16454 <sf_gen_broadcast+0x574>
   16464:	ldr	sl, [sp, #4]
   16468:	str	r0, [r1, #16]
   1646c:	mvn	r0, sl
   16470:	cmp	sl, #0
   16474:	str	r0, [sp, #12]
   16478:	beq	164e4 <sf_gen_broadcast+0x604>
   1647c:	ldr	r7, [pc, #1792]	; 16b84 <sf_gen_broadcast+0xca4>
   16480:	add	r7, pc, r7
   16484:	ldr	r5, [r7, r4, lsl #3]!
   16488:	cmp	r5, #19
   1648c:	bhi	164ec <sf_gen_broadcast+0x60c>
   16490:	ldr	r0, [pc, #1776]	; 16b88 <sf_gen_broadcast+0xca8>
   16494:	add	r6, r4, #1
   16498:	cmp	r4, #15
   1649c:	add	r0, pc, r0
   164a0:	str	r6, [r0]
   164a4:	bge	16ae8 <sf_gen_broadcast+0xc08>
   164a8:	mov	r0, #1024	; 0x400
   164ac:	lsl	r5, r0, r6
   164b0:	mov	r0, r5
   164b4:	bl	ed4 <malloc@plt>
   164b8:	cmp	r0, #0
   164bc:	str	r0, [r7, #12]
   164c0:	beq	16ae8 <sf_gen_broadcast+0xc08>
   164c4:	mov	r1, #0
   164c8:	mov	r2, r5
   164cc:	add	r7, r7, #8
   164d0:	bl	f40 <memset@plt>
   164d4:	cmp	r5, #19
   164d8:	str	r5, [r7]
   164dc:	bhi	164f0 <sf_gen_broadcast+0x610>
   164e0:	b	16ae8 <sf_gen_broadcast+0xc08>
   164e4:	mov	r6, r4
   164e8:	b	16524 <sf_gen_broadcast+0x644>
   164ec:	mov	r6, r4
   164f0:	sub	r1, r5, #20
   164f4:	mov	r2, #84	; 0x54
   164f8:	str	r1, [r7]
   164fc:	ldr	r0, [r7, #4]
   16500:	str	r2, [r0, r1]!
   16504:	mov	r2, r9
   16508:	ldr	r1, [sp, #12]
   1650c:	str	r1, [r0, #12]
   16510:	mov	r1, r2
   16514:	ldr	r2, [r2, #16]
   16518:	cmp	r2, #0
   1651c:	bne	16510 <sf_gen_broadcast+0x630>
   16520:	str	r0, [r1, #16]
   16524:	ldr	r7, [pc, #1632]	; 16b8c <sf_gen_broadcast+0xcac>
   16528:	add	r7, pc, r7
   1652c:	ldr	r5, [r7, r6, lsl #3]!
   16530:	cmp	r5, #207	; 0xcf
   16534:	bhi	1658c <sf_gen_broadcast+0x6ac>
   16538:	ldr	r0, [pc, #1616]	; 16b90 <sf_gen_broadcast+0xcb0>
   1653c:	add	r4, r6, #1
   16540:	cmp	r6, #15
   16544:	add	r0, pc, r0
   16548:	str	r4, [r0]
   1654c:	bge	16ae8 <sf_gen_broadcast+0xc08>
   16550:	mov	r0, #1024	; 0x400
   16554:	lsl	r5, r0, r4
   16558:	mov	r0, r5
   1655c:	bl	ed4 <malloc@plt>
   16560:	cmp	r0, #0
   16564:	str	r0, [r7, #12]
   16568:	beq	16ae8 <sf_gen_broadcast+0xc08>
   1656c:	mov	r1, #0
   16570:	mov	r2, r5
   16574:	add	r7, r7, #8
   16578:	bl	f40 <memset@plt>
   1657c:	cmp	r5, #207	; 0xcf
   16580:	str	r5, [r7]
   16584:	bhi	16590 <sf_gen_broadcast+0x6b0>
   16588:	b	16ae8 <sf_gen_broadcast+0xc08>
   1658c:	mov	r4, r6
   16590:	sub	r0, r5, #208	; 0xd0
   16594:	cmp	r8, #0
   16598:	str	r0, [r7]
   1659c:	ldr	r1, [r7, #4]
   165a0:	add	sl, r1, r0
   165a4:	mov	r0, #21
   165a8:	str	r9, [sl, #4]
   165ac:	str	r0, [sl, #8]
   165b0:	mov	r0, #0
   165b4:	str	r0, [sl, #20]
   165b8:	str	sl, [sl, #96]	; 0x60
   165bc:	beq	1673c <sf_gen_broadcast+0x85c>
   165c0:	ldr	r6, [pc, #1488]	; 16b98 <sf_gen_broadcast+0xcb8>
   165c4:	ldr	r6, [pc, r6]
   165c8:	ldr	r5, [pc, #1484]	; 16b9c <sf_gen_broadcast+0xcbc>
   165cc:	cmn	r6, #1
   165d0:	add	r5, pc, r5
   165d4:	bne	16640 <sf_gen_broadcast+0x760>
   165d8:	ldr	r6, [pc, #1472]	; 16ba0 <sf_gen_broadcast+0xcc0>
   165dc:	mvn	r1, #15
   165e0:	ldr	r6, [pc, r6]
   165e4:	ldr	r0, [pc, #1464]	; 16ba4 <sf_gen_broadcast+0xcc4>
   165e8:	ldr	r2, [pc, #1464]	; 16ba8 <sf_gen_broadcast+0xcc8>
   165ec:	add	r0, pc, r0
   165f0:	add	r2, pc, r2
   165f4:	ldr	r3, [r0, r6, lsl #2]
   165f8:	cmp	r3, #0
   165fc:	beq	1662c <sf_gen_broadcast+0x74c>
   16600:	add	r3, r6, #1
   16604:	adds	r1, r1, #1
   16608:	asr	r7, r3, #31
   1660c:	add	r7, r3, r7, lsr #28
   16610:	bic	r7, r7, #15
   16614:	sub	r6, r3, r7
   16618:	str	r6, [r2]
   1661c:	bne	165f4 <sf_gen_broadcast+0x714>
   16620:	ldr	r0, [pc, #1340]	; 16b64 <sf_gen_broadcast+0xc84>
   16624:	add	r0, pc, r0
   16628:	bl	2124 <sf_bpf_error>
   1662c:	mov	r1, #1
   16630:	str	r1, [r0, r6, lsl #2]
   16634:	ldr	r0, [pc, #1392]	; 16bac <sf_gen_broadcast+0xccc>
   16638:	add	r0, pc, r0
   1663c:	str	r6, [r0]
   16640:	mov	r7, r5
   16644:	ldr	r5, [r7, r4, lsl #3]!
   16648:	cmp	r5, #19
   1664c:	bhi	166a4 <sf_gen_broadcast+0x7c4>
   16650:	ldr	r0, [pc, #1368]	; 16bb0 <sf_gen_broadcast+0xcd0>
   16654:	add	r9, r4, #1
   16658:	cmp	r4, #15
   1665c:	add	r0, pc, r0
   16660:	str	r9, [r0]
   16664:	bge	16ae8 <sf_gen_broadcast+0xc08>
   16668:	mov	r0, #1024	; 0x400
   1666c:	lsl	r5, r0, r9
   16670:	mov	r0, r5
   16674:	bl	ed4 <malloc@plt>
   16678:	cmp	r0, #0
   1667c:	str	r0, [r7, #12]
   16680:	beq	16ae8 <sf_gen_broadcast+0xc08>
   16684:	mov	r1, #0
   16688:	mov	r2, r5
   1668c:	add	r7, r7, #8
   16690:	bl	f40 <memset@plt>
   16694:	cmp	r5, #19
   16698:	str	r5, [r7]
   1669c:	bhi	166a8 <sf_gen_broadcast+0x7c8>
   166a0:	b	16ae8 <sf_gen_broadcast+0xc08>
   166a4:	mov	r9, r4
   166a8:	sub	r0, r5, #20
   166ac:	mov	r1, #97	; 0x61
   166b0:	str	r0, [r7]
   166b4:	ldr	r4, [r7, #4]
   166b8:	str	r1, [r4, r0]!
   166bc:	cmp	r4, #0
   166c0:	str	r6, [r4, #12]
   166c4:	beq	16738 <sf_gen_broadcast+0x858>
   166c8:	ldr	r6, [pc, #1252]	; 16bb4 <sf_gen_broadcast+0xcd4>
   166cc:	add	r6, pc, r6
   166d0:	ldr	r5, [r6, r9, lsl #3]!
   166d4:	cmp	r5, #19
   166d8:	bhi	167d8 <sf_gen_broadcast+0x8f8>
   166dc:	ldr	r0, [pc, #1240]	; 16bbc <sf_gen_broadcast+0xcdc>
   166e0:	add	r8, r9, #1
   166e4:	cmp	r9, #15
   166e8:	add	r0, pc, r0
   166ec:	str	r8, [r0]
   166f0:	bge	16ae8 <sf_gen_broadcast+0xc08>
   166f4:	mov	r0, #1024	; 0x400
   166f8:	lsl	r5, r0, r8
   166fc:	mov	r0, r5
   16700:	bl	ed4 <malloc@plt>
   16704:	str	r0, [r6, #12]
   16708:	cmp	r0, #0
   1670c:	ldr	r9, [pc, #1196]	; 16bc0 <sf_gen_broadcast+0xce0>
   16710:	add	r9, pc, r9
   16714:	beq	16ae8 <sf_gen_broadcast+0xc08>
   16718:	mov	r1, #0
   1671c:	mov	r2, r5
   16720:	add	r6, r6, #8
   16724:	bl	f40 <memset@plt>
   16728:	cmp	r5, #19
   1672c:	str	r5, [r6]
   16730:	bhi	167e4 <sf_gen_broadcast+0x904>
   16734:	b	16ae8 <sf_gen_broadcast+0xc08>
   16738:	mov	r4, r9
   1673c:	ldr	r9, [pc, #1104]	; 16b94 <sf_gen_broadcast+0xcb4>
   16740:	add	r9, pc, r9
   16744:	mov	r6, r9
   16748:	ldr	r5, [r6, r4, lsl #3]!
   1674c:	cmp	r5, #19
   16750:	bhi	167a8 <sf_gen_broadcast+0x8c8>
   16754:	ldr	r0, [pc, #1128]	; 16bc4 <sf_gen_broadcast+0xce4>
   16758:	add	r8, r4, #1
   1675c:	cmp	r4, #15
   16760:	add	r0, pc, r0
   16764:	str	r8, [r0]
   16768:	bge	16ae8 <sf_gen_broadcast+0xc08>
   1676c:	mov	r0, #1024	; 0x400
   16770:	lsl	r5, r0, r8
   16774:	mov	r0, r5
   16778:	bl	ed4 <malloc@plt>
   1677c:	cmp	r0, #0
   16780:	str	r0, [r6, #12]
   16784:	beq	16ae8 <sf_gen_broadcast+0xc08>
   16788:	mov	r1, #0
   1678c:	mov	r2, r5
   16790:	add	r6, r6, #8
   16794:	bl	f40 <memset@plt>
   16798:	cmp	r5, #19
   1679c:	str	r5, [r6]
   167a0:	bhi	167ac <sf_gen_broadcast+0x8cc>
   167a4:	b	16ae8 <sf_gen_broadcast+0xc08>
   167a8:	mov	r8, r4
   167ac:	sub	r0, r5, #20
   167b0:	mov	r1, #32
   167b4:	str	r0, [r6]
   167b8:	ldr	r4, [r6, #4]
   167bc:	str	r1, [r4, r0]!
   167c0:	ldr	r0, [pc, #1024]	; 16bc8 <sf_gen_broadcast+0xce8>
   167c4:	ldr	r0, [pc, r0]
   167c8:	ldr	r1, [sp, #8]
   167cc:	add	r0, r0, r1
   167d0:	str	r0, [r4, #12]
   167d4:	b	16818 <sf_gen_broadcast+0x938>
   167d8:	mov	r8, r9
   167dc:	ldr	r9, [pc, #980]	; 16bb8 <sf_gen_broadcast+0xcd8>
   167e0:	add	r9, pc, r9
   167e4:	sub	r1, r5, #20
   167e8:	mov	r2, #64	; 0x40
   167ec:	str	r1, [r6]
   167f0:	ldr	r0, [r6, #4]
   167f4:	str	r2, [r0, r1]!
   167f8:	mov	r2, r4
   167fc:	ldr	r1, [sp, #8]
   16800:	str	r1, [r0, #12]
   16804:	mov	r1, r2
   16808:	ldr	r2, [r2, #16]
   1680c:	cmp	r2, #0
   16810:	bne	16804 <sf_gen_broadcast+0x924>
   16814:	str	r0, [r1, #16]
   16818:	ldr	r0, [sp, #4]
   1681c:	cmp	r0, #0
   16820:	beq	16888 <sf_gen_broadcast+0x9a8>
   16824:	mov	r7, r9
   16828:	ldr	r5, [r7, r8, lsl #3]!
   1682c:	cmp	r5, #19
   16830:	bhi	16890 <sf_gen_broadcast+0x9b0>
   16834:	ldr	r0, [pc, #912]	; 16bcc <sf_gen_broadcast+0xcec>
   16838:	add	r6, r8, #1
   1683c:	cmp	r8, #15
   16840:	add	r0, pc, r0
   16844:	str	r6, [r0]
   16848:	bge	16ae8 <sf_gen_broadcast+0xc08>
   1684c:	mov	r0, #1024	; 0x400
   16850:	lsl	r5, r0, r6
   16854:	mov	r0, r5
   16858:	bl	ed4 <malloc@plt>
   1685c:	cmp	r0, #0
   16860:	str	r0, [r7, #12]
   16864:	beq	16ae8 <sf_gen_broadcast+0xc08>
   16868:	mov	r1, #0
   1686c:	mov	r2, r5
   16870:	add	r7, r7, #8
   16874:	bl	f40 <memset@plt>
   16878:	cmp	r5, #19
   1687c:	str	r5, [r7]
   16880:	bhi	16894 <sf_gen_broadcast+0x9b4>
   16884:	b	16ae8 <sf_gen_broadcast+0xc08>
   16888:	mov	r6, r8
   1688c:	b	168c8 <sf_gen_broadcast+0x9e8>
   16890:	mov	r6, r8
   16894:	sub	r1, r5, #20
   16898:	mov	r2, #84	; 0x54
   1689c:	str	r1, [r7]
   168a0:	ldr	r0, [r7, #4]
   168a4:	str	r2, [r0, r1]!
   168a8:	mov	r2, r4
   168ac:	ldr	r1, [sp, #12]
   168b0:	str	r1, [r0, #12]
   168b4:	mov	r1, r2
   168b8:	ldr	r2, [r2, #16]
   168bc:	cmp	r2, #0
   168c0:	bne	168b4 <sf_gen_broadcast+0x9d4>
   168c4:	str	r0, [r1, #16]
   168c8:	ldr	r5, [r9, r6, lsl #3]!
   168cc:	cmp	r5, #207	; 0xcf
   168d0:	bhi	16924 <sf_gen_broadcast+0xa44>
   168d4:	ldr	r1, [pc, #756]	; 16bd0 <sf_gen_broadcast+0xcf0>
   168d8:	add	r0, r6, #1
   168dc:	cmp	r6, #15
   168e0:	add	r1, pc, r1
   168e4:	str	r0, [r1]
   168e8:	bge	16ae8 <sf_gen_broadcast+0xc08>
   168ec:	mov	r1, #1024	; 0x400
   168f0:	lsl	r5, r1, r0
   168f4:	mov	r0, r5
   168f8:	bl	ed4 <malloc@plt>
   168fc:	cmp	r0, #0
   16900:	str	r0, [r9, #12]
   16904:	beq	16ae8 <sf_gen_broadcast+0xc08>
   16908:	mov	r1, #0
   1690c:	mov	r2, r5
   16910:	add	r9, r9, #8
   16914:	bl	f40 <memset@plt>
   16918:	cmp	r5, #207	; 0xcf
   1691c:	str	r5, [r9]
   16920:	bls	16ae8 <sf_gen_broadcast+0xc08>
   16924:	sub	r0, r5, #208	; 0xd0
   16928:	cmp	sl, #0
   1692c:	str	r0, [r9]
   16930:	ldr	r1, [r9, #4]
   16934:	add	r0, r1, r0
   16938:	mov	r1, #21
   1693c:	str	r4, [r0, #4]
   16940:	str	r1, [r0, #8]
   16944:	ldr	r1, [sp, #12]
   16948:	str	r1, [r0, #20]
   1694c:	str	r0, [r0, #96]	; 0x60
   16950:	ldr	r1, [sl, #44]	; 0x2c
   16954:	clz	r1, r1
   16958:	lsr	r1, r1, #5
   1695c:	str	r1, [sl, #44]	; 0x2c
   16960:	beq	169a4 <sf_gen_broadcast+0xac4>
   16964:	ldr	r2, [r0, #96]	; 0x60
   16968:	ldr	r6, [sp]
   1696c:	mov	r3, sl
   16970:	b	16978 <sf_gen_broadcast+0xa98>
   16974:	ldr	r1, [r3, #44]	; 0x2c
   16978:	cmp	r1, #0
   1697c:	mov	r1, #84	; 0x54
   16980:	add	r7, r3, #84	; 0x54
   16984:	movweq	r1, #60	; 0x3c
   16988:	addeq	r7, r3, #60	; 0x3c
   1698c:	ldr	r3, [r3, r1]
   16990:	str	r2, [r7]
   16994:	cmp	r3, #0
   16998:	bne	16974 <sf_gen_broadcast+0xa94>
   1699c:	ldr	r1, [sl, #44]	; 0x2c
   169a0:	b	169a8 <sf_gen_broadcast+0xac8>
   169a4:	ldr	r6, [sp]
   169a8:	clz	r1, r1
   169ac:	cmp	r0, #0
   169b0:	lsr	r1, r1, #5
   169b4:	str	r1, [sl, #44]	; 0x2c
   169b8:	str	r0, [sp, #24]
   169bc:	beq	169ec <sf_gen_broadcast+0xb0c>
   169c0:	mov	r2, r0
   169c4:	ldr	r3, [r2, #44]	; 0x2c
   169c8:	add	r1, r2, #84	; 0x54
   169cc:	cmp	r3, #0
   169d0:	mov	r3, #84	; 0x54
   169d4:	movweq	r3, #60	; 0x3c
   169d8:	addeq	r1, r2, #60	; 0x3c
   169dc:	ldr	r2, [r2, r3]
   169e0:	cmp	r2, #0
   169e4:	bne	169c4 <sf_gen_broadcast+0xae4>
   169e8:	b	169f0 <sf_gen_broadcast+0xb10>
   169ec:	add	r1, sp, #24
   169f0:	str	sl, [r1]
   169f4:	cmp	r6, #0
   169f8:	ldr	r1, [sl, #96]	; 0x60
   169fc:	str	r1, [r0, #96]	; 0x60
   16a00:	beq	16a30 <sf_gen_broadcast+0xb50>
   16a04:	mov	r2, r6
   16a08:	ldr	r3, [r2, #44]	; 0x2c
   16a0c:	add	r7, r2, #84	; 0x54
   16a10:	cmp	r3, #0
   16a14:	mov	r3, #84	; 0x54
   16a18:	movweq	r3, #60	; 0x3c
   16a1c:	addeq	r7, r2, #60	; 0x3c
   16a20:	ldr	r2, [r2, r3]
   16a24:	str	r1, [r7]
   16a28:	cmp	r2, #0
   16a2c:	bne	16a08 <sf_gen_broadcast+0xb28>
   16a30:	ldr	r1, [r6, #44]	; 0x2c
   16a34:	cmp	r0, #0
   16a38:	clz	r1, r1
   16a3c:	lsr	r1, r1, #5
   16a40:	str	r1, [r6, #44]	; 0x2c
   16a44:	ldr	r1, [r0, #44]	; 0x2c
   16a48:	clz	r2, r1
   16a4c:	lsr	r2, r2, #5
   16a50:	str	r2, [r0, #44]	; 0x2c
   16a54:	str	r0, [sp, #20]
   16a58:	beq	16aa0 <sf_gen_broadcast+0xbc0>
   16a5c:	mov	r3, #60	; 0x3c
   16a60:	cmp	r1, #0
   16a64:	mov	r2, r0
   16a68:	movweq	r3, #84	; 0x54
   16a6c:	ldr	r1, [r2, r3]!
   16a70:	cmp	r1, #0
   16a74:	beq	16aa4 <sf_gen_broadcast+0xbc4>
   16a78:	ldr	r3, [r1, #44]	; 0x2c
   16a7c:	add	r2, r1, #84	; 0x54
   16a80:	cmp	r3, #0
   16a84:	mov	r3, #84	; 0x54
   16a88:	movweq	r3, #60	; 0x3c
   16a8c:	addeq	r2, r1, #60	; 0x3c
   16a90:	ldr	r1, [r1, r3]
   16a94:	cmp	r1, #0
   16a98:	bne	16a78 <sf_gen_broadcast+0xb98>
   16a9c:	b	16aa4 <sf_gen_broadcast+0xbc4>
   16aa0:	add	r2, sp, #20
   16aa4:	str	r6, [r2]
   16aa8:	ldr	r1, [r0, #44]	; 0x2c
   16aac:	clz	r1, r1
   16ab0:	lsr	r1, r1, #5
   16ab4:	str	r1, [r0, #44]	; 0x2c
   16ab8:	ldr	r1, [r6, #96]	; 0x60
   16abc:	str	r1, [r0, #96]	; 0x60
   16ac0:	sub	sp, fp, #28
   16ac4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16ac8:	add	r1, sp, #16
   16acc:	str	r4, [r1]
   16ad0:	ldr	r1, [r0, #44]	; 0x2c
   16ad4:	clz	r1, r1
   16ad8:	lsr	r1, r1, #5
   16adc:	str	r1, [r0, #44]	; 0x2c
   16ae0:	ldr	r1, [r4, #96]	; 0x60
   16ae4:	b	16abc <sf_gen_broadcast+0xbdc>
   16ae8:	ldr	r0, [pc, #232]	; 16bd8 <sf_gen_broadcast+0xcf8>
   16aec:	add	r0, pc, r0
   16af0:	bl	2124 <sf_bpf_error>
   16af4:	ldr	r0, [pc, #16]	; 16b0c <sf_gen_broadcast+0xc2c>
   16af8:	add	r0, pc, r0
   16afc:	bl	2124 <sf_bpf_error>
   16b00:	ldr	r0, [pc, #204]	; 16bd4 <sf_gen_broadcast+0xcf4>
   16b04:	add	r0, pc, r0
   16b08:	bl	2124 <sf_bpf_error>
   16b0c:	.word	0x00012f72
   16b10:	.word	0x00031538
   16b14:	.word	0x000310c4
   16b18:	.word	0x000312fc
   16b1c:	.word	0x00031340
   16b20:	.word	0x00030fbc
   16b24:	.word	0x00030db4
   16b28:	.word	0x00030f9c
   16b2c:	.word	0x00031104
   16b30:	.word	0x000310d4
   16b34:	.word	0x00030d50
   16b38:	.word	0x0001371e
   16b3c:	.word	0x00031408
   16b40:	.word	0x000314c8
   16b44:	.word	0x000313fc
   16b48:	.word	0x000313d0
   16b4c:	.word	0x000313e0
   16b50:	.word	0x00031218
   16b54:	.word	0x000314a0
   16b58:	.word	0x00031490
   16b5c:	.word	0x00031488
   16b60:	.word	0x00031480
   16b64:	.word	0x00014431
   16b68:	.word	0x000313ac
   16b6c:	.word	0x00031394
   16b70:	.word	0x0003130c
   16b74:	.word	0x0003136c
   16b78:	.word	0x000312e8
   16b7c:	.word	0x0003127c
   16b80:	.word	0x00031158
   16b84:	.word	0x00030ffc
   16b88:	.word	0x00031060
   16b8c:	.word	0x00030f54
   16b90:	.word	0x00030fb8
   16b94:	.word	0x00030d3c
   16b98:	.word	0x00030f44
   16b9c:	.word	0x00030eac
   16ba0:	.word	0x00030f2c
   16ba4:	.word	0x00030f24
   16ba8:	.word	0x00030f1c
   16bac:	.word	0x00030ed0
   16bb0:	.word	0x00030ea0
   16bb4:	.word	0x00030db0
   16bb8:	.word	0x00030c9c
   16bbc:	.word	0x00030e14
   16bc0:	.word	0x00030d6c
   16bc4:	.word	0x00030d9c
   16bc8:	.word	0x00030c78
   16bcc:	.word	0x00030cbc
   16bd0:	.word	0x00030c1c
   16bd4:	.word	0x00012f33
   16bd8:	.word	0x00013518

00016bdc <sf_gen_multicast>:
   16bdc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   16be0:	add	fp, sp, #24
   16be4:	sub	sp, sp, #8
   16be8:	cmp	r0, #2
   16bec:	bcc	16ccc <sf_gen_multicast+0xf0>
   16bf0:	beq	16f3c <sf_gen_multicast+0x360>
   16bf4:	cmp	r0, #17
   16bf8:	bne	17910 <sf_gen_multicast+0xd34>
   16bfc:	movw	r0, #34525	; 0x86dd
   16c00:	bl	7320 <gen_linktype>
   16c04:	mov	r5, r0
   16c08:	mov	r0, #3
   16c0c:	mov	r1, #24
   16c10:	mov	r2, #16
   16c14:	mov	r3, #255	; 0xff
   16c18:	bl	a9f8 <gen_cmp>
   16c1c:	mov	r4, r0
   16c20:	cmp	r5, #0
   16c24:	beq	16c58 <sf_gen_multicast+0x7c>
   16c28:	ldr	r0, [r4, #96]	; 0x60
   16c2c:	mov	r1, r5
   16c30:	ldr	r2, [r1, #44]	; 0x2c
   16c34:	add	r3, r1, #84	; 0x54
   16c38:	cmp	r2, #0
   16c3c:	mov	r2, #84	; 0x54
   16c40:	movweq	r2, #60	; 0x3c
   16c44:	addeq	r3, r1, #60	; 0x3c
   16c48:	ldr	r1, [r1, r2]
   16c4c:	str	r0, [r3]
   16c50:	cmp	r1, #0
   16c54:	bne	16c30 <sf_gen_multicast+0x54>
   16c58:	ldr	r0, [r5, #44]	; 0x2c
   16c5c:	cmp	r4, #0
   16c60:	clz	r0, r0
   16c64:	lsr	r0, r0, #5
   16c68:	str	r0, [r5, #44]	; 0x2c
   16c6c:	ldr	r1, [r4, #44]	; 0x2c
   16c70:	clz	r0, r1
   16c74:	lsr	r0, r0, #5
   16c78:	str	r0, [r4, #44]	; 0x2c
   16c7c:	str	r4, [sp, #4]
   16c80:	beq	178d4 <sf_gen_multicast+0xcf8>
   16c84:	cmp	r1, #0
   16c88:	mov	r1, #60	; 0x3c
   16c8c:	add	r0, r4, #60	; 0x3c
   16c90:	movweq	r1, #84	; 0x54
   16c94:	addeq	r0, r4, #84	; 0x54
   16c98:	ldr	r1, [r4, r1]
   16c9c:	cmp	r1, #0
   16ca0:	beq	178d8 <sf_gen_multicast+0xcfc>
   16ca4:	ldr	r2, [r1, #44]	; 0x2c
   16ca8:	add	r0, r1, #84	; 0x54
   16cac:	cmp	r2, #0
   16cb0:	mov	r2, #84	; 0x54
   16cb4:	movweq	r2, #60	; 0x3c
   16cb8:	addeq	r0, r1, #60	; 0x3c
   16cbc:	ldr	r1, [r1, r2]
   16cc0:	cmp	r1, #0
   16cc4:	bne	16ca4 <sf_gen_multicast+0xc8>
   16cc8:	b	178d8 <sf_gen_multicast+0xcfc>
   16ccc:	ldr	r0, [pc, #3156]	; 17928 <sf_gen_multicast+0xd4c>
   16cd0:	ldr	r0, [pc, r0]
   16cd4:	sub	r1, r0, #105	; 0x69
   16cd8:	cmp	r1, #58	; 0x3a
   16cdc:	bhi	1700c <sf_gen_multicast+0x430>
   16ce0:	add	r0, pc, #4
   16ce4:	ldr	r1, [r0, r1, lsl #2]
   16ce8:	add	pc, r0, r1
   16cec:	.word	0x000000ec
   16cf0:	.word	0x00000c24
   16cf4:	.word	0x00000c24
   16cf8:	.word	0x00000c24
   16cfc:	.word	0x00000c24
   16d00:	.word	0x00000c24
   16d04:	.word	0x00000c24
   16d08:	.word	0x00000c24
   16d0c:	.word	0x00000c24
   16d10:	.word	0x00000c24
   16d14:	.word	0x00000c24
   16d18:	.word	0x00000c24
   16d1c:	.word	0x00000c24
   16d20:	.word	0x00000c24
   16d24:	.word	0x000000ec
   16d28:	.word	0x00000c24
   16d2c:	.word	0x00000c24
   16d30:	.word	0x00000368
   16d34:	.word	0x00000af0
   16d38:	.word	0x00000c24
   16d3c:	.word	0x00000c24
   16d40:	.word	0x00000c24
   16d44:	.word	0x000000ec
   16d48:	.word	0x00000c24
   16d4c:	.word	0x00000370
   16d50:	.word	0x00000c24
   16d54:	.word	0x00000c24
   16d58:	.word	0x00000c24
   16d5c:	.word	0x00000c24
   16d60:	.word	0x00000c24
   16d64:	.word	0x00000c24
   16d68:	.word	0x00000c24
   16d6c:	.word	0x00000c24
   16d70:	.word	0x00000c24
   16d74:	.word	0x00000c24
   16d78:	.word	0x00000c24
   16d7c:	.word	0x00000c24
   16d80:	.word	0x00000c24
   16d84:	.word	0x00000c24
   16d88:	.word	0x00000c24
   16d8c:	.word	0x00000c24
   16d90:	.word	0x00000c24
   16d94:	.word	0x00000c24
   16d98:	.word	0x00000c24
   16d9c:	.word	0x00000c24
   16da0:	.word	0x00000c24
   16da4:	.word	0x00000c24
   16da8:	.word	0x00000c24
   16dac:	.word	0x00000c24
   16db0:	.word	0x00000c24
   16db4:	.word	0x00000c24
   16db8:	.word	0x00000c24
   16dbc:	.word	0x00000c24
   16dc0:	.word	0x00000c24
   16dc4:	.word	0x00000c24
   16dc8:	.word	0x00000c24
   16dcc:	.word	0x00000c24
   16dd0:	.word	0x00000c24
   16dd4:	.word	0x000000ec
   16dd8:	mov	r0, #1
   16ddc:	mov	r1, #1
   16de0:	mov	r2, #16
   16de4:	mov	r6, #1
   16de8:	bl	17a3c <gen_load_a>
   16dec:	mov	r4, r0
   16df0:	ldr	r0, [pc, #2868]	; 1792c <sf_gen_multicast+0xd50>
   16df4:	ldr	r0, [pc, r0]
   16df8:	ldr	r9, [pc, #2864]	; 17930 <sf_gen_multicast+0xd54>
   16dfc:	add	r9, pc, r9
   16e00:	mov	r7, r9
   16e04:	ldr	r5, [r7, r0, lsl #3]!
   16e08:	cmp	r5, #207	; 0xcf
   16e0c:	bhi	16e60 <sf_gen_multicast+0x284>
   16e10:	ldr	r2, [pc, #2844]	; 17934 <sf_gen_multicast+0xd58>
   16e14:	add	r1, r0, #1
   16e18:	cmp	r0, #15
   16e1c:	add	r2, pc, r2
   16e20:	str	r1, [r2]
   16e24:	bge	1791c <sf_gen_multicast+0xd40>
   16e28:	mov	r0, #1024	; 0x400
   16e2c:	lsl	r5, r0, r1
   16e30:	mov	r0, r5
   16e34:	bl	ed4 <malloc@plt>
   16e38:	cmp	r0, #0
   16e3c:	str	r0, [r7, #12]
   16e40:	beq	1791c <sf_gen_multicast+0xd40>
   16e44:	mov	r1, #0
   16e48:	mov	r2, r5
   16e4c:	add	r7, r7, #8
   16e50:	bl	f40 <memset@plt>
   16e54:	cmp	r5, #207	; 0xcf
   16e58:	str	r5, [r7]
   16e5c:	bls	1791c <sf_gen_multicast+0xd40>
   16e60:	sub	r0, r5, #208	; 0xd0
   16e64:	str	r0, [r7]
   16e68:	ldr	r1, [r7, #4]
   16e6c:	add	r5, r1, r0
   16e70:	mov	r0, #69	; 0x45
   16e74:	str	r6, [r5, #20]
   16e78:	str	r4, [r5, #4]
   16e7c:	str	r0, [r5, #8]
   16e80:	mov	r0, #16
   16e84:	str	r5, [r5, #96]	; 0x60
   16e88:	bl	1796c <gen_mac_multicast>
   16e8c:	mov	r4, r0
   16e90:	cmp	r5, #0
   16e94:	beq	16ec8 <sf_gen_multicast+0x2ec>
   16e98:	ldr	r0, [r4, #96]	; 0x60
   16e9c:	mov	r1, r5
   16ea0:	ldr	r2, [r1, #44]	; 0x2c
   16ea4:	add	r3, r1, #84	; 0x54
   16ea8:	cmp	r2, #0
   16eac:	mov	r2, #84	; 0x54
   16eb0:	movweq	r2, #60	; 0x3c
   16eb4:	addeq	r3, r1, #60	; 0x3c
   16eb8:	ldr	r1, [r1, r2]
   16ebc:	str	r0, [r3]
   16ec0:	cmp	r1, #0
   16ec4:	bne	16ea0 <sf_gen_multicast+0x2c4>
   16ec8:	ldr	r0, [r5, #44]	; 0x2c
   16ecc:	cmp	r4, #0
   16ed0:	clz	r0, r0
   16ed4:	lsr	r0, r0, #5
   16ed8:	str	r0, [r5, #44]	; 0x2c
   16edc:	ldr	r1, [r4, #44]	; 0x2c
   16ee0:	clz	r0, r1
   16ee4:	lsr	r0, r0, #5
   16ee8:	str	r0, [r4, #44]	; 0x2c
   16eec:	str	r4, [sp, #4]
   16ef0:	beq	1707c <sf_gen_multicast+0x4a0>
   16ef4:	cmp	r1, #0
   16ef8:	mov	r1, #60	; 0x3c
   16efc:	add	r0, r4, #60	; 0x3c
   16f00:	movweq	r1, #84	; 0x54
   16f04:	addeq	r0, r4, #84	; 0x54
   16f08:	ldr	r1, [r4, r1]
   16f0c:	cmp	r1, #0
   16f10:	beq	17080 <sf_gen_multicast+0x4a4>
   16f14:	ldr	r2, [r1, #44]	; 0x2c
   16f18:	add	r0, r1, #84	; 0x54
   16f1c:	cmp	r2, #0
   16f20:	mov	r2, #84	; 0x54
   16f24:	movweq	r2, #60	; 0x3c
   16f28:	addeq	r0, r1, #60	; 0x3c
   16f2c:	ldr	r1, [r1, r2]
   16f30:	cmp	r1, #0
   16f34:	bne	16f14 <sf_gen_multicast+0x338>
   16f38:	b	17080 <sf_gen_multicast+0x4a4>
   16f3c:	mov	r0, #2048	; 0x800
   16f40:	bl	7320 <gen_linktype>
   16f44:	mov	r5, r0
   16f48:	mov	r0, #3
   16f4c:	mov	r1, #16
   16f50:	mov	r2, #16
   16f54:	mov	r3, #224	; 0xe0
   16f58:	bl	17da8 <gen_cmp_ge>
   16f5c:	mov	r4, r0
   16f60:	cmp	r5, #0
   16f64:	beq	16f98 <sf_gen_multicast+0x3bc>
   16f68:	ldr	r0, [r4, #96]	; 0x60
   16f6c:	mov	r1, r5
   16f70:	ldr	r2, [r1, #44]	; 0x2c
   16f74:	add	r3, r1, #84	; 0x54
   16f78:	cmp	r2, #0
   16f7c:	mov	r2, #84	; 0x54
   16f80:	movweq	r2, #60	; 0x3c
   16f84:	addeq	r3, r1, #60	; 0x3c
   16f88:	ldr	r1, [r1, r2]
   16f8c:	str	r0, [r3]
   16f90:	cmp	r1, #0
   16f94:	bne	16f70 <sf_gen_multicast+0x394>
   16f98:	ldr	r0, [r5, #44]	; 0x2c
   16f9c:	cmp	r4, #0
   16fa0:	clz	r0, r0
   16fa4:	lsr	r0, r0, #5
   16fa8:	str	r0, [r5, #44]	; 0x2c
   16fac:	ldr	r1, [r4, #44]	; 0x2c
   16fb0:	clz	r0, r1
   16fb4:	lsr	r0, r0, #5
   16fb8:	str	r0, [r4, #44]	; 0x2c
   16fbc:	str	r4, [sp, #4]
   16fc0:	beq	178d4 <sf_gen_multicast+0xcf8>
   16fc4:	cmp	r1, #0
   16fc8:	mov	r1, #60	; 0x3c
   16fcc:	add	r0, r4, #60	; 0x3c
   16fd0:	movweq	r1, #84	; 0x54
   16fd4:	addeq	r0, r4, #84	; 0x54
   16fd8:	ldr	r1, [r4, r1]
   16fdc:	cmp	r1, #0
   16fe0:	beq	178d8 <sf_gen_multicast+0xcfc>
   16fe4:	ldr	r2, [r1, #44]	; 0x2c
   16fe8:	add	r0, r1, #84	; 0x54
   16fec:	cmp	r2, #0
   16ff0:	mov	r2, #84	; 0x54
   16ff4:	movweq	r2, #60	; 0x3c
   16ff8:	addeq	r0, r1, #60	; 0x3c
   16ffc:	ldr	r1, [r1, r2]
   17000:	cmp	r1, #0
   17004:	bne	16fe4 <sf_gen_multicast+0x408>
   17008:	b	178d8 <sf_gen_multicast+0xcfc>
   1700c:	sub	r1, r0, #1
   17010:	cmp	r1, #9
   17014:	bhi	177d0 <sf_gen_multicast+0xbf4>
   17018:	add	r0, pc, #4
   1701c:	ldr	r1, [r0, r1, lsl #2]
   17020:	add	pc, r0, r1
   17024:	.word	0x00000028
   17028:	.word	0x000008ec
   1702c:	.word	0x000008ec
   17030:	.word	0x000008ec
   17034:	.word	0x000008ec
   17038:	.word	0x00000030
   1703c:	.word	0x00000038
   17040:	.word	0x000008ec
   17044:	.word	0x000008ec
   17048:	.word	0x000008dc
   1704c:	mov	r0, #0
   17050:	b	17904 <sf_gen_multicast+0xd28>
   17054:	mov	r0, #2
   17058:	b	17904 <sf_gen_multicast+0xd28>
   1705c:	ldr	r3, [pc, #2264]	; 1793c <sf_gen_multicast+0xd60>
   17060:	mov	r0, #1
   17064:	mov	r1, #1
   17068:	mov	r2, #1
   1706c:	add	r3, pc, r3
   17070:	sub	sp, fp, #24
   17074:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   17078:	b	1c3c0 <gen_bcmp>
   1707c:	add	r0, sp, #4
   17080:	str	r5, [r0]
   17084:	mov	r1, #1
   17088:	mov	r2, #16
   1708c:	mov	r8, #1
   17090:	ldr	r0, [r4, #44]	; 0x2c
   17094:	clz	r0, r0
   17098:	lsr	r0, r0, #5
   1709c:	str	r0, [r4, #44]	; 0x2c
   170a0:	ldr	r0, [r5, #96]	; 0x60
   170a4:	str	r0, [r4, #96]	; 0x60
   170a8:	mov	r0, #1
   170ac:	bl	17a3c <gen_load_a>
   170b0:	mov	r5, r0
   170b4:	ldr	r0, [pc, #2180]	; 17940 <sf_gen_multicast+0xd64>
   170b8:	mov	r7, r9
   170bc:	ldr	r0, [pc, r0]
   170c0:	ldr	r6, [r7, r0, lsl #3]!
   170c4:	cmp	r6, #207	; 0xcf
   170c8:	bhi	1711c <sf_gen_multicast+0x540>
   170cc:	ldr	r2, [pc, #2160]	; 17944 <sf_gen_multicast+0xd68>
   170d0:	add	r1, r0, #1
   170d4:	cmp	r0, #15
   170d8:	add	r2, pc, r2
   170dc:	str	r1, [r2]
   170e0:	bge	1791c <sf_gen_multicast+0xd40>
   170e4:	mov	r0, #1024	; 0x400
   170e8:	lsl	r6, r0, r1
   170ec:	mov	r0, r6
   170f0:	bl	ed4 <malloc@plt>
   170f4:	cmp	r0, #0
   170f8:	str	r0, [r7, #12]
   170fc:	beq	1791c <sf_gen_multicast+0xd40>
   17100:	mov	r1, #0
   17104:	mov	r2, r6
   17108:	add	r7, r7, #8
   1710c:	bl	f40 <memset@plt>
   17110:	cmp	r6, #207	; 0xcf
   17114:	str	r6, [r7]
   17118:	bls	1791c <sf_gen_multicast+0xd40>
   1711c:	sub	r0, r6, #208	; 0xd0
   17120:	str	r0, [r7]
   17124:	ldr	r1, [r7, #4]
   17128:	add	r6, r1, r0
   1712c:	mov	r0, #69	; 0x45
   17130:	str	r8, [r6, #20]
   17134:	str	r5, [r6, #4]
   17138:	str	r0, [r6, #8]
   1713c:	ldr	r0, [r6, #44]	; 0x2c
   17140:	clz	r0, r0
   17144:	lsr	r0, r0, #5
   17148:	str	r0, [r6, #44]	; 0x2c
   1714c:	mov	r0, #4
   17150:	str	r6, [r6, #96]	; 0x60
   17154:	bl	1796c <gen_mac_multicast>
   17158:	cmp	r6, #0
   1715c:	beq	17190 <sf_gen_multicast+0x5b4>
   17160:	ldr	r1, [r0, #96]	; 0x60
   17164:	mov	r2, r6
   17168:	ldr	r3, [r2, #44]	; 0x2c
   1716c:	add	r7, r2, #84	; 0x54
   17170:	cmp	r3, #0
   17174:	mov	r3, #84	; 0x54
   17178:	movweq	r3, #60	; 0x3c
   1717c:	addeq	r7, r2, #60	; 0x3c
   17180:	ldr	r2, [r2, r3]
   17184:	str	r1, [r7]
   17188:	cmp	r2, #0
   1718c:	bne	17168 <sf_gen_multicast+0x58c>
   17190:	ldr	r1, [r6, #44]	; 0x2c
   17194:	cmp	r0, #0
   17198:	clz	r1, r1
   1719c:	lsr	r1, r1, #5
   171a0:	str	r1, [r6, #44]	; 0x2c
   171a4:	ldr	r2, [r0, #44]	; 0x2c
   171a8:	clz	r1, r2
   171ac:	lsr	r1, r1, #5
   171b0:	str	r1, [r0, #44]	; 0x2c
   171b4:	str	r0, [sp, #4]
   171b8:	beq	17204 <sf_gen_multicast+0x628>
   171bc:	cmp	r2, #0
   171c0:	mov	r2, #60	; 0x3c
   171c4:	add	r1, r0, #60	; 0x3c
   171c8:	movweq	r2, #84	; 0x54
   171cc:	addeq	r1, r0, #84	; 0x54
   171d0:	ldr	r2, [r0, r2]
   171d4:	cmp	r2, #0
   171d8:	beq	17208 <sf_gen_multicast+0x62c>
   171dc:	ldr	r3, [r2, #44]	; 0x2c
   171e0:	add	r1, r2, #84	; 0x54
   171e4:	cmp	r3, #0
   171e8:	mov	r3, #84	; 0x54
   171ec:	movweq	r3, #60	; 0x3c
   171f0:	addeq	r1, r2, #60	; 0x3c
   171f4:	ldr	r2, [r2, r3]
   171f8:	cmp	r2, #0
   171fc:	bne	171dc <sf_gen_multicast+0x600>
   17200:	b	17208 <sf_gen_multicast+0x62c>
   17204:	add	r1, sp, #4
   17208:	str	r6, [r1]
   1720c:	ldr	r1, [r0, #44]	; 0x2c
   17210:	clz	r2, r1
   17214:	cmp	r1, #0
   17218:	lsr	r2, r2, #5
   1721c:	movwne	r1, #1
   17220:	cmp	r0, #0
   17224:	str	r2, [r0, #44]	; 0x2c
   17228:	ldr	r2, [r6, #96]	; 0x60
   1722c:	str	r1, [r0, #44]	; 0x2c
   17230:	str	r2, [r0, #96]	; 0x60
   17234:	beq	17270 <sf_gen_multicast+0x694>
   17238:	ldr	r2, [r4, #96]	; 0x60
   1723c:	mov	r3, r0
   17240:	b	17248 <sf_gen_multicast+0x66c>
   17244:	ldr	r1, [r3, #44]	; 0x2c
   17248:	cmp	r1, #0
   1724c:	mov	r1, #84	; 0x54
   17250:	add	r7, r3, #84	; 0x54
   17254:	movweq	r1, #60	; 0x3c
   17258:	addeq	r7, r3, #60	; 0x3c
   1725c:	ldr	r3, [r3, r1]
   17260:	str	r2, [r7]
   17264:	cmp	r3, #0
   17268:	bne	17244 <sf_gen_multicast+0x668>
   1726c:	ldr	r1, [r0, #44]	; 0x2c
   17270:	clz	r1, r1
   17274:	cmp	r4, #0
   17278:	lsr	r1, r1, #5
   1727c:	str	r1, [r0, #44]	; 0x2c
   17280:	str	r4, [sp, #4]
   17284:	beq	172b4 <sf_gen_multicast+0x6d8>
   17288:	mov	r2, r4
   1728c:	ldr	r3, [r2, #44]	; 0x2c
   17290:	add	r1, r2, #84	; 0x54
   17294:	cmp	r3, #0
   17298:	mov	r3, #84	; 0x54
   1729c:	movweq	r3, #60	; 0x3c
   172a0:	addeq	r1, r2, #60	; 0x3c
   172a4:	ldr	r2, [r2, r3]
   172a8:	cmp	r2, #0
   172ac:	bne	1728c <sf_gen_multicast+0x6b0>
   172b0:	b	172b8 <sf_gen_multicast+0x6dc>
   172b4:	add	r1, sp, #4
   172b8:	str	r0, [r1]
   172bc:	mov	r1, #0
   172c0:	mov	r2, #16
   172c4:	ldr	r0, [r0, #96]	; 0x60
   172c8:	str	r0, [r4, #96]	; 0x60
   172cc:	mov	r0, #1
   172d0:	bl	17a3c <gen_load_a>
   172d4:	mov	r5, r0
   172d8:	ldr	r0, [pc, #1640]	; 17948 <sf_gen_multicast+0xd6c>
   172dc:	mov	r7, r9
   172e0:	ldr	r0, [pc, r0]
   172e4:	ldr	r6, [r7, r0, lsl #3]!
   172e8:	cmp	r6, #207	; 0xcf
   172ec:	bhi	17340 <sf_gen_multicast+0x764>
   172f0:	ldr	r2, [pc, #1620]	; 1794c <sf_gen_multicast+0xd70>
   172f4:	add	r1, r0, #1
   172f8:	cmp	r0, #15
   172fc:	add	r2, pc, r2
   17300:	str	r1, [r2]
   17304:	bge	1791c <sf_gen_multicast+0xd40>
   17308:	mov	r0, #1024	; 0x400
   1730c:	lsl	r6, r0, r1
   17310:	mov	r0, r6
   17314:	bl	ed4 <malloc@plt>
   17318:	cmp	r0, #0
   1731c:	str	r0, [r7, #12]
   17320:	beq	1791c <sf_gen_multicast+0xd40>
   17324:	mov	r1, #0
   17328:	mov	r2, r6
   1732c:	add	r7, r7, #8
   17330:	bl	f40 <memset@plt>
   17334:	cmp	r6, #207	; 0xcf
   17338:	str	r6, [r7]
   1733c:	bls	1791c <sf_gen_multicast+0xd40>
   17340:	sub	r0, r6, #208	; 0xd0
   17344:	mov	r2, #8
   17348:	str	r0, [r7]
   1734c:	ldr	r1, [r7, #4]
   17350:	adds	r0, r1, r0
   17354:	mov	r1, #69	; 0x45
   17358:	str	r2, [r0, #20]
   1735c:	str	r5, [r0, #4]
   17360:	str	r1, [r0, #8]
   17364:	str	r0, [r0, #96]	; 0x60
   17368:	beq	1739c <sf_gen_multicast+0x7c0>
   1736c:	ldr	r1, [r4, #96]	; 0x60
   17370:	mov	r2, r0
   17374:	ldr	r3, [r2, #44]	; 0x2c
   17378:	add	r7, r2, #84	; 0x54
   1737c:	cmp	r3, #0
   17380:	mov	r3, #84	; 0x54
   17384:	movweq	r3, #60	; 0x3c
   17388:	addeq	r7, r2, #60	; 0x3c
   1738c:	ldr	r2, [r2, r3]
   17390:	str	r1, [r7]
   17394:	cmp	r2, #0
   17398:	bne	17374 <sf_gen_multicast+0x798>
   1739c:	ldr	r1, [r0, #44]	; 0x2c
   173a0:	cmp	r4, #0
   173a4:	clz	r1, r1
   173a8:	lsr	r1, r1, #5
   173ac:	str	r1, [r0, #44]	; 0x2c
   173b0:	ldr	r2, [r4, #44]	; 0x2c
   173b4:	clz	r1, r2
   173b8:	lsr	r1, r1, #5
   173bc:	str	r1, [r4, #44]	; 0x2c
   173c0:	str	r4, [sp, #4]
   173c4:	beq	17410 <sf_gen_multicast+0x834>
   173c8:	cmp	r2, #0
   173cc:	mov	r2, #60	; 0x3c
   173d0:	add	r1, r4, #60	; 0x3c
   173d4:	movweq	r2, #84	; 0x54
   173d8:	addeq	r1, r4, #84	; 0x54
   173dc:	ldr	r2, [r4, r2]
   173e0:	cmp	r2, #0
   173e4:	beq	17414 <sf_gen_multicast+0x838>
   173e8:	ldr	r3, [r2, #44]	; 0x2c
   173ec:	add	r1, r2, #84	; 0x54
   173f0:	cmp	r3, #0
   173f4:	mov	r3, #84	; 0x54
   173f8:	movweq	r3, #60	; 0x3c
   173fc:	addeq	r1, r2, #60	; 0x3c
   17400:	ldr	r2, [r2, r3]
   17404:	cmp	r2, #0
   17408:	bne	173e8 <sf_gen_multicast+0x80c>
   1740c:	b	17414 <sf_gen_multicast+0x838>
   17410:	add	r1, sp, #4
   17414:	str	r0, [r1]
   17418:	mov	r2, #16
   1741c:	ldr	r1, [r4, #44]	; 0x2c
   17420:	clz	r1, r1
   17424:	lsr	r1, r1, #5
   17428:	str	r1, [r4, #44]	; 0x2c
   1742c:	mov	r1, #0
   17430:	ldr	r0, [r0, #96]	; 0x60
   17434:	str	r0, [r4, #96]	; 0x60
   17438:	mov	r0, #1
   1743c:	bl	17a3c <gen_load_a>
   17440:	mov	r5, r0
   17444:	ldr	r0, [pc, #1284]	; 17950 <sf_gen_multicast+0xd74>
   17448:	mov	r7, r9
   1744c:	ldr	r0, [pc, r0]
   17450:	ldr	r6, [r7, r0, lsl #3]!
   17454:	cmp	r6, #207	; 0xcf
   17458:	bhi	174ac <sf_gen_multicast+0x8d0>
   1745c:	ldr	r2, [pc, #1264]	; 17954 <sf_gen_multicast+0xd78>
   17460:	add	r1, r0, #1
   17464:	cmp	r0, #15
   17468:	add	r2, pc, r2
   1746c:	str	r1, [r2]
   17470:	bge	1791c <sf_gen_multicast+0xd40>
   17474:	mov	r0, #1024	; 0x400
   17478:	lsl	r6, r0, r1
   1747c:	mov	r0, r6
   17480:	bl	ed4 <malloc@plt>
   17484:	cmp	r0, #0
   17488:	str	r0, [r7, #12]
   1748c:	beq	1791c <sf_gen_multicast+0xd40>
   17490:	mov	r1, #0
   17494:	mov	r2, r6
   17498:	add	r7, r7, #8
   1749c:	bl	f40 <memset@plt>
   174a0:	cmp	r6, #207	; 0xcf
   174a4:	str	r6, [r7]
   174a8:	bls	1791c <sf_gen_multicast+0xd40>
   174ac:	sub	r0, r6, #208	; 0xd0
   174b0:	str	r0, [r7]
   174b4:	ldr	r1, [r7, #4]
   174b8:	add	r6, r1, r0
   174bc:	mov	r1, #8
   174c0:	mov	r0, #69	; 0x45
   174c4:	str	r1, [r6, #20]
   174c8:	str	r5, [r6, #4]
   174cc:	str	r0, [r6, #8]
   174d0:	ldr	r0, [r6, #44]	; 0x2c
   174d4:	clz	r0, r0
   174d8:	lsr	r0, r0, #5
   174dc:	str	r0, [r6, #44]	; 0x2c
   174e0:	mov	r0, #4
   174e4:	str	r6, [r6, #96]	; 0x60
   174e8:	bl	1796c <gen_mac_multicast>
   174ec:	cmp	r6, #0
   174f0:	beq	17524 <sf_gen_multicast+0x948>
   174f4:	ldr	r1, [r0, #96]	; 0x60
   174f8:	mov	r2, r6
   174fc:	ldr	r3, [r2, #44]	; 0x2c
   17500:	add	r7, r2, #84	; 0x54
   17504:	cmp	r3, #0
   17508:	mov	r3, #84	; 0x54
   1750c:	movweq	r3, #60	; 0x3c
   17510:	addeq	r7, r2, #60	; 0x3c
   17514:	ldr	r2, [r2, r3]
   17518:	str	r1, [r7]
   1751c:	cmp	r2, #0
   17520:	bne	174fc <sf_gen_multicast+0x920>
   17524:	ldr	r1, [r6, #44]	; 0x2c
   17528:	cmp	r0, #0
   1752c:	clz	r1, r1
   17530:	lsr	r1, r1, #5
   17534:	str	r1, [r6, #44]	; 0x2c
   17538:	ldr	r2, [r0, #44]	; 0x2c
   1753c:	clz	r1, r2
   17540:	lsr	r1, r1, #5
   17544:	str	r1, [r0, #44]	; 0x2c
   17548:	str	r0, [sp, #4]
   1754c:	beq	17598 <sf_gen_multicast+0x9bc>
   17550:	cmp	r2, #0
   17554:	mov	r2, #60	; 0x3c
   17558:	add	r1, r0, #60	; 0x3c
   1755c:	movweq	r2, #84	; 0x54
   17560:	addeq	r1, r0, #84	; 0x54
   17564:	ldr	r2, [r0, r2]
   17568:	cmp	r2, #0
   1756c:	beq	1759c <sf_gen_multicast+0x9c0>
   17570:	ldr	r3, [r2, #44]	; 0x2c
   17574:	add	r1, r2, #84	; 0x54
   17578:	cmp	r3, #0
   1757c:	mov	r3, #84	; 0x54
   17580:	movweq	r3, #60	; 0x3c
   17584:	addeq	r1, r2, #60	; 0x3c
   17588:	ldr	r2, [r2, r3]
   1758c:	cmp	r2, #0
   17590:	bne	17570 <sf_gen_multicast+0x994>
   17594:	b	1759c <sf_gen_multicast+0x9c0>
   17598:	add	r1, sp, #4
   1759c:	str	r6, [r1]
   175a0:	ldr	r1, [r0, #44]	; 0x2c
   175a4:	clz	r2, r1
   175a8:	cmp	r1, #0
   175ac:	lsr	r2, r2, #5
   175b0:	movwne	r1, #1
   175b4:	cmp	r0, #0
   175b8:	str	r2, [r0, #44]	; 0x2c
   175bc:	ldr	r2, [r6, #96]	; 0x60
   175c0:	str	r1, [r0, #44]	; 0x2c
   175c4:	str	r2, [r0, #96]	; 0x60
   175c8:	beq	17604 <sf_gen_multicast+0xa28>
   175cc:	ldr	r2, [r4, #96]	; 0x60
   175d0:	mov	r3, r0
   175d4:	b	175dc <sf_gen_multicast+0xa00>
   175d8:	ldr	r1, [r3, #44]	; 0x2c
   175dc:	cmp	r1, #0
   175e0:	mov	r1, #84	; 0x54
   175e4:	add	r7, r3, #84	; 0x54
   175e8:	movweq	r1, #60	; 0x3c
   175ec:	addeq	r7, r3, #60	; 0x3c
   175f0:	ldr	r3, [r3, r1]
   175f4:	str	r2, [r7]
   175f8:	cmp	r3, #0
   175fc:	bne	175d8 <sf_gen_multicast+0x9fc>
   17600:	ldr	r1, [r0, #44]	; 0x2c
   17604:	clz	r1, r1
   17608:	cmp	r4, #0
   1760c:	lsr	r1, r1, #5
   17610:	str	r1, [r0, #44]	; 0x2c
   17614:	str	r4, [sp, #4]
   17618:	beq	17648 <sf_gen_multicast+0xa6c>
   1761c:	mov	r2, r4
   17620:	ldr	r3, [r2, #44]	; 0x2c
   17624:	add	r1, r2, #84	; 0x54
   17628:	cmp	r3, #0
   1762c:	mov	r3, #84	; 0x54
   17630:	movweq	r3, #60	; 0x3c
   17634:	addeq	r1, r2, #60	; 0x3c
   17638:	ldr	r2, [r2, r3]
   1763c:	cmp	r2, #0
   17640:	bne	17620 <sf_gen_multicast+0xa44>
   17644:	b	1764c <sf_gen_multicast+0xa70>
   17648:	add	r1, sp, #4
   1764c:	str	r0, [r1]
   17650:	mov	r1, #0
   17654:	mov	r2, #16
   17658:	ldr	r0, [r0, #96]	; 0x60
   1765c:	str	r0, [r4, #96]	; 0x60
   17660:	mov	r0, #1
   17664:	bl	17a3c <gen_load_a>
   17668:	mov	r5, r0
   1766c:	ldr	r0, [pc, #740]	; 17958 <sf_gen_multicast+0xd7c>
   17670:	ldr	r0, [pc, r0]
   17674:	ldr	r6, [r9, r0, lsl #3]!
   17678:	cmp	r6, #207	; 0xcf
   1767c:	bhi	176d0 <sf_gen_multicast+0xaf4>
   17680:	ldr	r2, [pc, #724]	; 1795c <sf_gen_multicast+0xd80>
   17684:	add	r1, r0, #1
   17688:	cmp	r0, #15
   1768c:	add	r2, pc, r2
   17690:	str	r1, [r2]
   17694:	bge	1791c <sf_gen_multicast+0xd40>
   17698:	mov	r0, #1024	; 0x400
   1769c:	lsl	r6, r0, r1
   176a0:	mov	r0, r6
   176a4:	bl	ed4 <malloc@plt>
   176a8:	cmp	r0, #0
   176ac:	str	r0, [r9, #12]
   176b0:	beq	1791c <sf_gen_multicast+0xd40>
   176b4:	mov	r1, #0
   176b8:	mov	r2, r6
   176bc:	add	r9, r9, #8
   176c0:	bl	f40 <memset@plt>
   176c4:	cmp	r6, #207	; 0xcf
   176c8:	str	r6, [r9]
   176cc:	bls	1791c <sf_gen_multicast+0xd40>
   176d0:	sub	r0, r6, #208	; 0xd0
   176d4:	mov	r2, #4
   176d8:	str	r0, [r9]
   176dc:	ldr	r1, [r9, #4]
   176e0:	adds	r0, r1, r0
   176e4:	mov	r1, #69	; 0x45
   176e8:	str	r2, [r0, #20]
   176ec:	str	r5, [r0, #4]
   176f0:	str	r1, [r0, #8]
   176f4:	ldr	r1, [r0, #44]	; 0x2c
   176f8:	clz	r1, r1
   176fc:	lsr	r1, r1, #5
   17700:	str	r1, [r0, #44]	; 0x2c
   17704:	str	r0, [r0, #96]	; 0x60
   17708:	beq	17740 <sf_gen_multicast+0xb64>
   1770c:	ldr	r1, [r4, #96]	; 0x60
   17710:	mov	r2, r0
   17714:	ldr	r3, [r2, #44]	; 0x2c
   17718:	add	r7, r2, #84	; 0x54
   1771c:	cmp	r3, #0
   17720:	mov	r3, #84	; 0x54
   17724:	movweq	r3, #60	; 0x3c
   17728:	addeq	r7, r2, #60	; 0x3c
   1772c:	ldr	r2, [r2, r3]
   17730:	str	r1, [r7]
   17734:	cmp	r2, #0
   17738:	bne	17714 <sf_gen_multicast+0xb38>
   1773c:	ldr	r1, [r0, #44]	; 0x2c
   17740:	clz	r1, r1
   17744:	cmp	r4, #0
   17748:	lsr	r1, r1, #5
   1774c:	str	r1, [r0, #44]	; 0x2c
   17750:	ldr	r2, [r4, #44]	; 0x2c
   17754:	clz	r1, r2
   17758:	lsr	r1, r1, #5
   1775c:	str	r1, [r4, #44]	; 0x2c
   17760:	str	r4, [sp, #4]
   17764:	beq	177b0 <sf_gen_multicast+0xbd4>
   17768:	cmp	r2, #0
   1776c:	mov	r2, #60	; 0x3c
   17770:	add	r1, r4, #60	; 0x3c
   17774:	movweq	r2, #84	; 0x54
   17778:	addeq	r1, r4, #84	; 0x54
   1777c:	ldr	r2, [r4, r2]
   17780:	cmp	r2, #0
   17784:	beq	177b4 <sf_gen_multicast+0xbd8>
   17788:	ldr	r3, [r2, #44]	; 0x2c
   1778c:	add	r1, r2, #84	; 0x54
   17790:	cmp	r3, #0
   17794:	mov	r3, #84	; 0x54
   17798:	movweq	r3, #60	; 0x3c
   1779c:	addeq	r1, r2, #60	; 0x3c
   177a0:	ldr	r2, [r2, r3]
   177a4:	cmp	r2, #0
   177a8:	bne	17788 <sf_gen_multicast+0xbac>
   177ac:	b	177b4 <sf_gen_multicast+0xbd8>
   177b0:	add	r1, sp, #4
   177b4:	str	r0, [r1]
   177b8:	ldr	r1, [r4, #44]	; 0x2c
   177bc:	clz	r1, r1
   177c0:	lsr	r1, r1, #5
   177c4:	str	r1, [r4, #44]	; 0x2c
   177c8:	ldr	r0, [r0, #96]	; 0x60
   177cc:	b	178f0 <sf_gen_multicast+0xd14>
   177d0:	cmp	r0, #192	; 0xc0
   177d4:	beq	16dd8 <sf_gen_multicast+0x1fc>
   177d8:	b	17910 <sf_gen_multicast+0xd34>
   177dc:	ldr	r0, [pc, #380]	; 17960 <sf_gen_multicast+0xd84>
   177e0:	add	r0, pc, r0
   177e4:	ldrb	r0, [r0]
   177e8:	cmp	r0, #1
   177ec:	bne	17910 <sf_gen_multicast+0xd34>
   177f0:	mov	r0, #1
   177f4:	mov	r1, #4
   177f8:	mov	r2, #8
   177fc:	mov	r3, #65280	; 0xff00
   17800:	bl	a9f8 <gen_cmp>
   17804:	mov	r5, r0
   17808:	ldr	r0, [r0, #44]	; 0x2c
   1780c:	clz	r0, r0
   17810:	lsr	r0, r0, #5
   17814:	str	r0, [r5, #44]	; 0x2c
   17818:	ldr	r0, [pc, #324]	; 17964 <sf_gen_multicast+0xd88>
   1781c:	ldr	r0, [pc, r0]
   17820:	bl	1796c <gen_mac_multicast>
   17824:	mov	r4, r0
   17828:	cmp	r5, #0
   1782c:	beq	17860 <sf_gen_multicast+0xc84>
   17830:	ldr	r0, [r4, #96]	; 0x60
   17834:	mov	r1, r5
   17838:	ldr	r2, [r1, #44]	; 0x2c
   1783c:	add	r3, r1, #84	; 0x54
   17840:	cmp	r2, #0
   17844:	mov	r2, #84	; 0x54
   17848:	movweq	r2, #60	; 0x3c
   1784c:	addeq	r3, r1, #60	; 0x3c
   17850:	ldr	r1, [r1, r2]
   17854:	str	r0, [r3]
   17858:	cmp	r1, #0
   1785c:	bne	17838 <sf_gen_multicast+0xc5c>
   17860:	ldr	r0, [r5, #44]	; 0x2c
   17864:	cmp	r4, #0
   17868:	clz	r0, r0
   1786c:	lsr	r0, r0, #5
   17870:	str	r0, [r5, #44]	; 0x2c
   17874:	ldr	r1, [r4, #44]	; 0x2c
   17878:	clz	r0, r1
   1787c:	lsr	r0, r0, #5
   17880:	str	r0, [r4, #44]	; 0x2c
   17884:	str	r4, [sp, #4]
   17888:	beq	178d4 <sf_gen_multicast+0xcf8>
   1788c:	cmp	r1, #0
   17890:	mov	r1, #60	; 0x3c
   17894:	add	r0, r4, #60	; 0x3c
   17898:	movweq	r1, #84	; 0x54
   1789c:	addeq	r0, r4, #84	; 0x54
   178a0:	ldr	r1, [r4, r1]
   178a4:	cmp	r1, #0
   178a8:	beq	178d8 <sf_gen_multicast+0xcfc>
   178ac:	ldr	r2, [r1, #44]	; 0x2c
   178b0:	add	r0, r1, #84	; 0x54
   178b4:	cmp	r2, #0
   178b8:	mov	r2, #84	; 0x54
   178bc:	movweq	r2, #60	; 0x3c
   178c0:	addeq	r0, r1, #60	; 0x3c
   178c4:	ldr	r1, [r1, r2]
   178c8:	cmp	r1, #0
   178cc:	bne	178ac <sf_gen_multicast+0xcd0>
   178d0:	b	178d8 <sf_gen_multicast+0xcfc>
   178d4:	add	r0, sp, #4
   178d8:	str	r5, [r0]
   178dc:	ldr	r0, [r4, #44]	; 0x2c
   178e0:	clz	r0, r0
   178e4:	lsr	r0, r0, #5
   178e8:	str	r0, [r4, #44]	; 0x2c
   178ec:	ldr	r0, [r5, #96]	; 0x60
   178f0:	str	r0, [r4, #96]	; 0x60
   178f4:	mov	r0, r4
   178f8:	sub	sp, fp, #24
   178fc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   17900:	mov	r0, #1
   17904:	sub	sp, fp, #24
   17908:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   1790c:	b	1796c <gen_mac_multicast>
   17910:	ldr	r0, [pc, #80]	; 17968 <sf_gen_multicast+0xd8c>
   17914:	add	r0, pc, r0
   17918:	bl	2124 <sf_bpf_error>
   1791c:	ldr	r0, [pc, #20]	; 17938 <sf_gen_multicast+0xd5c>
   17920:	add	r0, pc, r0
   17924:	bl	2124 <sf_bpf_error>
   17928:	.word	0x00030760
   1792c:	.word	0x00030708
   17930:	.word	0x00030680
   17934:	.word	0x000306e0
   17938:	.word	0x000126e4
   1793c:	.word	0x000303d8
   17940:	.word	0x00030440
   17944:	.word	0x00030424
   17948:	.word	0x0003021c
   1794c:	.word	0x00030200
   17950:	.word	0x000300b0
   17954:	.word	0x00030094
   17958:	.word	0x0002fe8c
   1795c:	.word	0x0002fe70
   17960:	.word	0x0002fc54
   17964:	.word	0x0002fc2c
   17968:	.word	0x00012185

0001796c <gen_mac_multicast>:
   1796c:	push	{r4, r5, r6, r7, fp, lr}
   17970:	add	fp, sp, #16
   17974:	mov	r1, r0
   17978:	mov	r0, #1
   1797c:	mov	r2, #16
   17980:	mov	r6, #1
   17984:	bl	17a3c <gen_load_a>
   17988:	mov	r4, r0
   1798c:	ldr	r0, [pc, #152]	; 17a2c <gen_mac_multicast+0xc0>
   17990:	ldr	r0, [pc, r0]
   17994:	ldr	r7, [pc, #148]	; 17a30 <gen_mac_multicast+0xc4>
   17998:	add	r7, pc, r7
   1799c:	ldr	r5, [r7, r0, lsl #3]!
   179a0:	cmp	r5, #207	; 0xcf
   179a4:	bhi	179f8 <gen_mac_multicast+0x8c>
   179a8:	ldr	r2, [pc, #132]	; 17a34 <gen_mac_multicast+0xc8>
   179ac:	add	r1, r0, #1
   179b0:	cmp	r0, #15
   179b4:	add	r2, pc, r2
   179b8:	str	r1, [r2]
   179bc:	bge	17a20 <gen_mac_multicast+0xb4>
   179c0:	mov	r0, #1024	; 0x400
   179c4:	lsl	r5, r0, r1
   179c8:	mov	r0, r5
   179cc:	bl	ed4 <malloc@plt>
   179d0:	cmp	r0, #0
   179d4:	str	r0, [r7, #12]
   179d8:	beq	17a20 <gen_mac_multicast+0xb4>
   179dc:	mov	r1, #0
   179e0:	mov	r2, r5
   179e4:	add	r7, r7, #8
   179e8:	bl	f40 <memset@plt>
   179ec:	cmp	r5, #207	; 0xcf
   179f0:	str	r5, [r7]
   179f4:	bls	17a20 <gen_mac_multicast+0xb4>
   179f8:	sub	r0, r5, #208	; 0xd0
   179fc:	str	r0, [r7]
   17a00:	ldr	r1, [r7, #4]
   17a04:	add	r0, r1, r0
   17a08:	mov	r1, #69	; 0x45
   17a0c:	str	r6, [r0, #20]
   17a10:	str	r4, [r0, #4]
   17a14:	str	r1, [r0, #8]
   17a18:	str	r0, [r0, #96]	; 0x60
   17a1c:	pop	{r4, r5, r6, r7, fp, pc}
   17a20:	ldr	r0, [pc, #16]	; 17a38 <gen_mac_multicast+0xcc>
   17a24:	add	r0, pc, r0
   17a28:	bl	2124 <sf_bpf_error>
   17a2c:	.word	0x0002fb6c
   17a30:	.word	0x0002fae4
   17a34:	.word	0x0002fb48
   17a38:	.word	0x000125e0

00017a3c <gen_load_a>:
   17a3c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   17a40:	add	fp, sp, #24
   17a44:	cmp	r0, #6
   17a48:	bhi	17d54 <gen_load_a+0x318>
   17a4c:	mov	r8, r1
   17a50:	add	r1, pc, #8
   17a54:	mov	r5, r2
   17a58:	ldr	r0, [r1, r0, lsl #2]
   17a5c:	add	pc, r1, r0
   17a60:	.word	0x000000c8
   17a64:	.word	0x0000001c
   17a68:	.word	0x00000164
   17a6c:	.word	0x00000198
   17a70:	.word	0x00000154
   17a74:	.word	0x000001d8
   17a78:	.word	0x00000224
   17a7c:	bl	14138 <gen_llprefixlen>
   17a80:	cmp	r0, #0
   17a84:	beq	17b28 <gen_load_a+0xec>
   17a88:	mov	r6, r0
   17a8c:	ldr	r0, [pc, #732]	; 17d70 <gen_load_a+0x334>
   17a90:	ldr	r0, [pc, r0]
   17a94:	ldr	r4, [pc, #728]	; 17d74 <gen_load_a+0x338>
   17a98:	add	r4, pc, r4
   17a9c:	ldr	r7, [r4, r0, lsl #3]!
   17aa0:	cmp	r7, #19
   17aa4:	bhi	17af8 <gen_load_a+0xbc>
   17aa8:	ldr	r2, [pc, #712]	; 17d78 <gen_load_a+0x33c>
   17aac:	add	r1, r0, #1
   17ab0:	cmp	r0, #15
   17ab4:	add	r2, pc, r2
   17ab8:	str	r1, [r2]
   17abc:	bge	17d58 <gen_load_a+0x31c>
   17ac0:	mov	r0, #1024	; 0x400
   17ac4:	lsl	r7, r0, r1
   17ac8:	mov	r0, r7
   17acc:	bl	ed4 <malloc@plt>
   17ad0:	cmp	r0, #0
   17ad4:	str	r0, [r4, #12]
   17ad8:	beq	17d58 <gen_load_a+0x31c>
   17adc:	mov	r1, #0
   17ae0:	mov	r2, r7
   17ae4:	add	r4, r4, #8
   17ae8:	bl	f40 <memset@plt>
   17aec:	cmp	r7, #19
   17af0:	str	r7, [r4]
   17af4:	bls	17d58 <gen_load_a+0x31c>
   17af8:	sub	r2, r7, #20
   17afc:	orr	r1, r5, #64	; 0x40
   17b00:	str	r2, [r4]
   17b04:	ldr	r0, [r4, #4]
   17b08:	str	r1, [r0, r2]!
   17b0c:	mov	r2, r6
   17b10:	str	r8, [r0, #12]
   17b14:	mov	r1, r2
   17b18:	ldr	r2, [r2, #16]
   17b1c:	cmp	r2, #0
   17b20:	bne	17b14 <gen_load_a+0xd8>
   17b24:	b	17c78 <gen_load_a+0x23c>
   17b28:	ldr	r0, [pc, #564]	; 17d64 <gen_load_a+0x328>
   17b2c:	ldr	r0, [pc, r0]
   17b30:	ldr	r4, [pc, #560]	; 17d68 <gen_load_a+0x32c>
   17b34:	add	r4, pc, r4
   17b38:	ldr	r6, [r4, r0, lsl #3]!
   17b3c:	cmp	r6, #19
   17b40:	bhi	17b94 <gen_load_a+0x158>
   17b44:	ldr	r2, [pc, #544]	; 17d6c <gen_load_a+0x330>
   17b48:	add	r1, r0, #1
   17b4c:	cmp	r0, #15
   17b50:	add	r2, pc, r2
   17b54:	str	r1, [r2]
   17b58:	bge	17d58 <gen_load_a+0x31c>
   17b5c:	mov	r0, #1024	; 0x400
   17b60:	lsl	r6, r0, r1
   17b64:	mov	r0, r6
   17b68:	bl	ed4 <malloc@plt>
   17b6c:	cmp	r0, #0
   17b70:	str	r0, [r4, #12]
   17b74:	beq	17d58 <gen_load_a+0x31c>
   17b78:	mov	r1, #0
   17b7c:	mov	r2, r6
   17b80:	add	r4, r4, #8
   17b84:	bl	f40 <memset@plt>
   17b88:	cmp	r6, #19
   17b8c:	str	r6, [r4]
   17b90:	bls	17d58 <gen_load_a+0x31c>
   17b94:	sub	r1, r6, #20
   17b98:	orr	r0, r5, #32
   17b9c:	str	r1, [r4]
   17ba0:	ldr	r6, [r4, #4]
   17ba4:	str	r0, [r6, r1]!
   17ba8:	mov	r0, r6
   17bac:	str	r8, [r6, #12]
   17bb0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   17bb4:	ldr	r0, [pc, #472]	; 17d94 <gen_load_a+0x358>
   17bb8:	ldr	r0, [pc, r0]
   17bbc:	add	r0, r0, r8
   17bc0:	b	17c94 <gen_load_a+0x258>
   17bc4:	bl	143f0 <gen_off_macpl>
   17bc8:	cmp	r0, #0
   17bcc:	beq	17ca0 <gen_load_a+0x264>
   17bd0:	mov	r6, r0
   17bd4:	orr	r0, r5, #64	; 0x40
   17bd8:	bl	14090 <new_stmt>
   17bdc:	mov	r2, r6
   17be0:	str	r8, [r0, #12]
   17be4:	mov	r1, r2
   17be8:	ldr	r2, [r2, #16]
   17bec:	cmp	r2, #0
   17bf0:	bne	17be4 <gen_load_a+0x1a8>
   17bf4:	b	17c78 <gen_load_a+0x23c>
   17bf8:	ldr	r0, [pc, #400]	; 17d90 <gen_load_a+0x354>
   17bfc:	ldr	r0, [pc, r0]
   17c00:	add	r4, r0, r8
   17c04:	bl	143f0 <gen_off_macpl>
   17c08:	cmp	r0, #0
   17c0c:	beq	17d30 <gen_load_a+0x2f4>
   17c10:	mov	r6, r0
   17c14:	orr	r0, r5, #64	; 0x40
   17c18:	bl	14090 <new_stmt>
   17c1c:	mov	r2, r6
   17c20:	str	r4, [r0, #12]
   17c24:	mov	r1, r2
   17c28:	ldr	r2, [r2, #16]
   17c2c:	cmp	r2, #0
   17c30:	bne	17c24 <gen_load_a+0x1e8>
   17c34:	b	17c78 <gen_load_a+0x23c>
   17c38:	bl	144c0 <gen_loadx_iphdrlen>
   17c3c:	mov	r6, r0
   17c40:	orr	r0, r5, #64	; 0x40
   17c44:	bl	14090 <new_stmt>
   17c48:	ldr	r1, [pc, #328]	; 17d98 <gen_load_a+0x35c>
   17c4c:	ldr	r1, [pc, r1]
   17c50:	ldr	r2, [pc, #324]	; 17d9c <gen_load_a+0x360>
   17c54:	ldr	r2, [pc, r2]
   17c58:	add	r1, r1, r8
   17c5c:	add	r1, r1, r2
   17c60:	mov	r2, r6
   17c64:	str	r1, [r0, #12]
   17c68:	mov	r1, r2
   17c6c:	ldr	r2, [r2, #16]
   17c70:	cmp	r2, #0
   17c74:	bne	17c68 <gen_load_a+0x22c>
   17c78:	str	r0, [r1, #16]
   17c7c:	mov	r0, r6
   17c80:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   17c84:	ldr	r0, [pc, #276]	; 17da0 <gen_load_a+0x364>
   17c88:	ldr	r0, [pc, r0]
   17c8c:	add	r0, r8, r0
   17c90:	add	r0, r0, #40	; 0x28
   17c94:	mov	r1, r5
   17c98:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   17c9c:	b	20408 <gen_load_macplrel>
   17ca0:	ldr	r0, [pc, #216]	; 17d80 <gen_load_a+0x344>
   17ca4:	ldr	r0, [pc, r0]
   17ca8:	ldr	r4, [pc, #212]	; 17d84 <gen_load_a+0x348>
   17cac:	add	r4, pc, r4
   17cb0:	ldr	r6, [r4, r0, lsl #3]!
   17cb4:	cmp	r6, #19
   17cb8:	bhi	17d0c <gen_load_a+0x2d0>
   17cbc:	ldr	r2, [pc, #196]	; 17d88 <gen_load_a+0x34c>
   17cc0:	add	r1, r0, #1
   17cc4:	cmp	r0, #15
   17cc8:	add	r2, pc, r2
   17ccc:	str	r1, [r2]
   17cd0:	bge	17d58 <gen_load_a+0x31c>
   17cd4:	mov	r0, #1024	; 0x400
   17cd8:	lsl	r6, r0, r1
   17cdc:	mov	r0, r6
   17ce0:	bl	ed4 <malloc@plt>
   17ce4:	cmp	r0, #0
   17ce8:	str	r0, [r4, #12]
   17cec:	beq	17d58 <gen_load_a+0x31c>
   17cf0:	mov	r1, #0
   17cf4:	mov	r2, r6
   17cf8:	add	r4, r4, #8
   17cfc:	bl	f40 <memset@plt>
   17d00:	cmp	r6, #19
   17d04:	str	r6, [r4]
   17d08:	bls	17d58 <gen_load_a+0x31c>
   17d0c:	sub	r1, r6, #20
   17d10:	orr	r0, r5, #32
   17d14:	str	r1, [r4]
   17d18:	ldr	r6, [r4, #4]
   17d1c:	str	r0, [r6, r1]!
   17d20:	ldr	r0, [pc, #100]	; 17d8c <gen_load_a+0x350>
   17d24:	ldr	r0, [pc, r0]
   17d28:	add	r0, r0, r8
   17d2c:	b	17d48 <gen_load_a+0x30c>
   17d30:	orr	r0, r5, #32
   17d34:	bl	14090 <new_stmt>
   17d38:	mov	r6, r0
   17d3c:	ldr	r0, [pc, #96]	; 17da4 <gen_load_a+0x368>
   17d40:	ldr	r0, [pc, r0]
   17d44:	add	r0, r0, r4
   17d48:	str	r0, [r6, #12]
   17d4c:	mov	r0, r6
   17d50:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   17d54:	bl	fc4 <abort@plt>
   17d58:	ldr	r0, [pc, #28]	; 17d7c <gen_load_a+0x340>
   17d5c:	add	r0, pc, r0
   17d60:	bl	2124 <sf_bpf_error>
   17d64:	.word	0x0002f9d0
   17d68:	.word	0x0002f948
   17d6c:	.word	0x0002f9ac
   17d70:	.word	0x0002fa6c
   17d74:	.word	0x0002f9e4
   17d78:	.word	0x0002fa48
   17d7c:	.word	0x000122a8
   17d80:	.word	0x0002f858
   17d84:	.word	0x0002f7d0
   17d88:	.word	0x0002f834
   17d8c:	.word	0x0002f718
   17d90:	.word	0x0002f844
   17d94:	.word	0x0002f894
   17d98:	.word	0x0002f7f0
   17d9c:	.word	0x0002f7ec
   17da0:	.word	0x0002f7b8
   17da4:	.word	0x0002f6fc

00017da8 <gen_cmp_ge>:
   17da8:	push	{r4, r5, r6, r7, fp, lr}
   17dac:	add	fp, sp, #16
   17db0:	mov	r4, r3
   17db4:	bl	17a3c <gen_load_a>
   17db8:	mov	r5, r0
   17dbc:	ldr	r0, [pc, #152]	; 17e5c <gen_cmp_ge+0xb4>
   17dc0:	ldr	r0, [pc, r0]
   17dc4:	ldr	r7, [pc, #148]	; 17e60 <gen_cmp_ge+0xb8>
   17dc8:	add	r7, pc, r7
   17dcc:	ldr	r6, [r7, r0, lsl #3]!
   17dd0:	cmp	r6, #207	; 0xcf
   17dd4:	bhi	17e28 <gen_cmp_ge+0x80>
   17dd8:	ldr	r2, [pc, #132]	; 17e64 <gen_cmp_ge+0xbc>
   17ddc:	add	r1, r0, #1
   17de0:	cmp	r0, #15
   17de4:	add	r2, pc, r2
   17de8:	str	r1, [r2]
   17dec:	bge	17e50 <gen_cmp_ge+0xa8>
   17df0:	mov	r0, #1024	; 0x400
   17df4:	lsl	r6, r0, r1
   17df8:	mov	r0, r6
   17dfc:	bl	ed4 <malloc@plt>
   17e00:	cmp	r0, #0
   17e04:	str	r0, [r7, #12]
   17e08:	beq	17e50 <gen_cmp_ge+0xa8>
   17e0c:	mov	r1, #0
   17e10:	mov	r2, r6
   17e14:	add	r7, r7, #8
   17e18:	bl	f40 <memset@plt>
   17e1c:	cmp	r6, #207	; 0xcf
   17e20:	str	r6, [r7]
   17e24:	bls	17e50 <gen_cmp_ge+0xa8>
   17e28:	sub	r0, r6, #208	; 0xd0
   17e2c:	str	r0, [r7]
   17e30:	ldr	r1, [r7, #4]
   17e34:	add	r0, r1, r0
   17e38:	mov	r1, #53	; 0x35
   17e3c:	str	r5, [r0, #4]
   17e40:	str	r1, [r0, #8]
   17e44:	str	r4, [r0, #20]
   17e48:	str	r0, [r0, #96]	; 0x60
   17e4c:	pop	{r4, r5, r6, r7, fp, pc}
   17e50:	ldr	r0, [pc, #16]	; 17e68 <gen_cmp_ge+0xc0>
   17e54:	add	r0, pc, r0
   17e58:	bl	2124 <sf_bpf_error>
   17e5c:	.word	0x0002f73c
   17e60:	.word	0x0002f6b4
   17e64:	.word	0x0002f718
   17e68:	.word	0x000121b0

00017e6c <sf_gen_inbound>:
   17e6c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   17e70:	add	fp, sp, #24
   17e74:	ldr	r1, [pc, #1708]	; 18528 <sf_gen_inbound+0x6bc>
   17e78:	mov	r6, r0
   17e7c:	ldr	r1, [pc, r1]
   17e80:	sub	r0, r1, #8
   17e84:	cmp	r0, #218	; 0xda
   17e88:	bhi	1851c <sf_gen_inbound+0x6b0>
   17e8c:	add	r2, pc, #4
   17e90:	ldr	r0, [r2, r0, lsl #2]
   17e94:	add	pc, r2, r0
   17e98:	.word	0x000005d0
   17e9c:	.word	0x00000684
   17ea0:	.word	0x00000684
   17ea4:	.word	0x00000684
   17ea8:	.word	0x00000684
   17eac:	.word	0x00000684
   17eb0:	.word	0x00000684
   17eb4:	.word	0x00000684
   17eb8:	.word	0x00000684
   17ebc:	.word	0x00000684
   17ec0:	.word	0x00000684
   17ec4:	.word	0x00000684
   17ec8:	.word	0x00000684
   17ecc:	.word	0x00000684
   17ed0:	.word	0x00000684
   17ed4:	.word	0x00000684
   17ed8:	.word	0x00000684
   17edc:	.word	0x00000684
   17ee0:	.word	0x00000684
   17ee4:	.word	0x00000684
   17ee8:	.word	0x00000684
   17eec:	.word	0x00000684
   17ef0:	.word	0x00000684
   17ef4:	.word	0x00000684
   17ef8:	.word	0x00000684
   17efc:	.word	0x00000684
   17f00:	.word	0x00000684
   17f04:	.word	0x00000684
   17f08:	.word	0x00000684
   17f0c:	.word	0x00000684
   17f10:	.word	0x00000684
   17f14:	.word	0x00000684
   17f18:	.word	0x00000684
   17f1c:	.word	0x00000684
   17f20:	.word	0x00000684
   17f24:	.word	0x00000684
   17f28:	.word	0x00000684
   17f2c:	.word	0x00000684
   17f30:	.word	0x00000684
   17f34:	.word	0x00000684
   17f38:	.word	0x00000684
   17f3c:	.word	0x00000684
   17f40:	.word	0x00000684
   17f44:	.word	0x00000684
   17f48:	.word	0x00000684
   17f4c:	.word	0x00000684
   17f50:	.word	0x00000684
   17f54:	.word	0x00000684
   17f58:	.word	0x00000684
   17f5c:	.word	0x00000684
   17f60:	.word	0x00000684
   17f64:	.word	0x00000684
   17f68:	.word	0x00000684
   17f6c:	.word	0x00000684
   17f70:	.word	0x00000684
   17f74:	.word	0x00000684
   17f78:	.word	0x00000684
   17f7c:	.word	0x00000684
   17f80:	.word	0x00000684
   17f84:	.word	0x00000684
   17f88:	.word	0x00000684
   17f8c:	.word	0x00000684
   17f90:	.word	0x00000684
   17f94:	.word	0x00000684
   17f98:	.word	0x00000684
   17f9c:	.word	0x00000684
   17fa0:	.word	0x00000684
   17fa4:	.word	0x00000684
   17fa8:	.word	0x00000684
   17fac:	.word	0x00000684
   17fb0:	.word	0x00000684
   17fb4:	.word	0x00000684
   17fb8:	.word	0x00000684
   17fbc:	.word	0x00000684
   17fc0:	.word	0x00000684
   17fc4:	.word	0x00000684
   17fc8:	.word	0x00000684
   17fcc:	.word	0x00000684
   17fd0:	.word	0x00000684
   17fd4:	.word	0x00000684
   17fd8:	.word	0x00000684
   17fdc:	.word	0x00000684
   17fe0:	.word	0x00000684
   17fe4:	.word	0x00000684
   17fe8:	.word	0x00000684
   17fec:	.word	0x00000684
   17ff0:	.word	0x00000684
   17ff4:	.word	0x00000684
   17ff8:	.word	0x00000684
   17ffc:	.word	0x00000684
   18000:	.word	0x00000684
   18004:	.word	0x00000684
   18008:	.word	0x00000684
   1800c:	.word	0x00000684
   18010:	.word	0x00000684
   18014:	.word	0x00000684
   18018:	.word	0x00000684
   1801c:	.word	0x00000684
   18020:	.word	0x00000684
   18024:	.word	0x00000684
   18028:	.word	0x00000684
   1802c:	.word	0x00000684
   18030:	.word	0x00000684
   18034:	.word	0x00000684
   18038:	.word	0x00000684
   1803c:	.word	0x0000060c
   18040:	.word	0x00000684
   18044:	.word	0x00000684
   18048:	.word	0x00000684
   1804c:	.word	0x00000684
   18050:	.word	0x00000684
   18054:	.word	0x00000684
   18058:	.word	0x00000684
   1805c:	.word	0x00000684
   18060:	.word	0x00000684
   18064:	.word	0x00000684
   18068:	.word	0x00000684
   1806c:	.word	0x00000684
   18070:	.word	0x00000684
   18074:	.word	0x00000684
   18078:	.word	0x00000684
   1807c:	.word	0x00000684
   18080:	.word	0x0000036c
   18084:	.word	0x0000036c
   18088:	.word	0x0000036c
   1808c:	.word	0x0000036c
   18090:	.word	0x0000036c
   18094:	.word	0x0000036c
   18098:	.word	0x0000036c
   1809c:	.word	0x0000036c
   180a0:	.word	0x00000684
   180a4:	.word	0x00000684
   180a8:	.word	0x00000684
   180ac:	.word	0x00000684
   180b0:	.word	0x00000684
   180b4:	.word	0x00000684
   180b8:	.word	0x00000684
   180bc:	.word	0x00000684
   180c0:	.word	0x00000684
   180c4:	.word	0x00000684
   180c8:	.word	0x00000684
   180cc:	.word	0x00000684
   180d0:	.word	0x00000684
   180d4:	.word	0x00000684
   180d8:	.word	0x00000684
   180dc:	.word	0x00000684
   180e0:	.word	0x00000684
   180e4:	.word	0x00000684
   180e8:	.word	0x00000684
   180ec:	.word	0x00000684
   180f0:	.word	0x00000684
   180f4:	.word	0x00000684
   180f8:	.word	0x00000684
   180fc:	.word	0x00000684
   18100:	.word	0x00000684
   18104:	.word	0x00000684
   18108:	.word	0x0000036c
   1810c:	.word	0x00000684
   18110:	.word	0x0000062c
   18114:	.word	0x0000036c
   18118:	.word	0x0000036c
   1811c:	.word	0x00000684
   18120:	.word	0x00000684
   18124:	.word	0x00000684
   18128:	.word	0x00000684
   1812c:	.word	0x00000684
   18130:	.word	0x00000684
   18134:	.word	0x00000684
   18138:	.word	0x00000684
   1813c:	.word	0x00000684
   18140:	.word	0x0000036c
   18144:	.word	0x0000036c
   18148:	.word	0x0000036c
   1814c:	.word	0x0000036c
   18150:	.word	0x00000684
   18154:	.word	0x0000036c
   18158:	.word	0x00000684
   1815c:	.word	0x00000684
   18160:	.word	0x00000684
   18164:	.word	0x00000684
   18168:	.word	0x00000684
   1816c:	.word	0x00000684
   18170:	.word	0x00000684
   18174:	.word	0x00000684
   18178:	.word	0x00000684
   1817c:	.word	0x00000684
   18180:	.word	0x0000036c
   18184:	.word	0x00000684
   18188:	.word	0x00000684
   1818c:	.word	0x00000684
   18190:	.word	0x00000684
   18194:	.word	0x00000684
   18198:	.word	0x0000036c
   1819c:	.word	0x00000684
   181a0:	.word	0x00000684
   181a4:	.word	0x00000684
   181a8:	.word	0x00000684
   181ac:	.word	0x00000684
   181b0:	.word	0x00000684
   181b4:	.word	0x00000684
   181b8:	.word	0x00000684
   181bc:	.word	0x00000684
   181c0:	.word	0x00000684
   181c4:	.word	0x00000684
   181c8:	.word	0x00000684
   181cc:	.word	0x00000684
   181d0:	.word	0x00000684
   181d4:	.word	0x00000684
   181d8:	.word	0x00000684
   181dc:	.word	0x00000684
   181e0:	.word	0x00000684
   181e4:	.word	0x00000684
   181e8:	.word	0x00000684
   181ec:	.word	0x00000684
   181f0:	.word	0x00000684
   181f4:	.word	0x00000684
   181f8:	.word	0x00000684
   181fc:	.word	0x00000684
   18200:	.word	0x0000064c
   18204:	mov	r0, #1
   18208:	mov	r1, #3
   1820c:	mov	r2, #16
   18210:	bl	17a3c <gen_load_a>
   18214:	mov	r8, r0
   18218:	ldr	r0, [pc, #780]	; 1852c <sf_gen_inbound+0x6c0>
   1821c:	cmp	r6, #0
   18220:	ldr	r0, [pc, r0]
   18224:	ldr	r4, [pc, #772]	; 18530 <sf_gen_inbound+0x6c4>
   18228:	add	r4, pc, r4
   1822c:	mov	r7, r4
   18230:	ldr	r5, [r7, r0, lsl #3]!
   18234:	beq	18294 <sf_gen_inbound+0x428>
   18238:	cmp	r5, #19
   1823c:	bhi	182f0 <sf_gen_inbound+0x484>
   18240:	ldr	r1, [pc, #748]	; 18534 <sf_gen_inbound+0x6c8>
   18244:	add	r6, r0, #1
   18248:	cmp	r0, #15
   1824c:	add	r1, pc, r1
   18250:	str	r6, [r1]
   18254:	bge	18510 <sf_gen_inbound+0x6a4>
   18258:	mov	r0, #1024	; 0x400
   1825c:	lsl	r5, r0, r6
   18260:	mov	r0, r5
   18264:	bl	ed4 <malloc@plt>
   18268:	cmp	r0, #0
   1826c:	str	r0, [r7, #12]
   18270:	beq	18510 <sf_gen_inbound+0x6a4>
   18274:	mov	r1, #0
   18278:	mov	r2, r5
   1827c:	add	r7, r7, #8
   18280:	bl	f40 <memset@plt>
   18284:	cmp	r5, #19
   18288:	str	r5, [r7]
   1828c:	bhi	182f4 <sf_gen_inbound+0x488>
   18290:	b	18510 <sf_gen_inbound+0x6a4>
   18294:	cmp	r5, #19
   18298:	bhi	183a8 <sf_gen_inbound+0x53c>
   1829c:	ldr	r1, [pc, #664]	; 1853c <sf_gen_inbound+0x6d0>
   182a0:	add	r6, r0, #1
   182a4:	cmp	r0, #15
   182a8:	add	r1, pc, r1
   182ac:	str	r6, [r1]
   182b0:	bge	18510 <sf_gen_inbound+0x6a4>
   182b4:	mov	r0, #1024	; 0x400
   182b8:	lsl	r5, r0, r6
   182bc:	mov	r0, r5
   182c0:	bl	ed4 <malloc@plt>
   182c4:	cmp	r0, #0
   182c8:	str	r0, [r7, #12]
   182cc:	beq	18510 <sf_gen_inbound+0x6a4>
   182d0:	mov	r1, #0
   182d4:	mov	r2, r5
   182d8:	add	r7, r7, #8
   182dc:	bl	f40 <memset@plt>
   182e0:	cmp	r5, #19
   182e4:	str	r5, [r7]
   182e8:	bhi	183ac <sf_gen_inbound+0x540>
   182ec:	b	18510 <sf_gen_inbound+0x6a4>
   182f0:	mov	r6, r0
   182f4:	sub	r1, r5, #20
   182f8:	mov	r2, #84	; 0x54
   182fc:	str	r1, [r7]
   18300:	ldr	r0, [r7, #4]
   18304:	str	r2, [r0, r1]!
   18308:	mov	r1, #1
   1830c:	mov	r2, r8
   18310:	str	r1, [r0, #12]
   18314:	mov	r1, r2
   18318:	ldr	r2, [r2, #16]
   1831c:	cmp	r2, #0
   18320:	bne	18314 <sf_gen_inbound+0x4a8>
   18324:	str	r0, [r1, #16]
   18328:	ldr	r5, [r4, r6, lsl #3]!
   1832c:	cmp	r5, #207	; 0xcf
   18330:	bhi	18384 <sf_gen_inbound+0x518>
   18334:	ldr	r1, [pc, #508]	; 18538 <sf_gen_inbound+0x6cc>
   18338:	add	r0, r6, #1
   1833c:	cmp	r6, #15
   18340:	add	r1, pc, r1
   18344:	str	r0, [r1]
   18348:	bge	18510 <sf_gen_inbound+0x6a4>
   1834c:	mov	r1, #1024	; 0x400
   18350:	lsl	r5, r1, r0
   18354:	mov	r0, r5
   18358:	bl	ed4 <malloc@plt>
   1835c:	cmp	r0, #0
   18360:	str	r0, [r4, #12]
   18364:	beq	18510 <sf_gen_inbound+0x6a4>
   18368:	mov	r1, #0
   1836c:	mov	r2, r5
   18370:	add	r4, r4, #8
   18374:	bl	f40 <memset@plt>
   18378:	cmp	r5, #207	; 0xcf
   1837c:	str	r5, [r4]
   18380:	bls	18510 <sf_gen_inbound+0x6a4>
   18384:	sub	r0, r5, #208	; 0xd0
   18388:	str	r0, [r4]
   1838c:	ldr	r1, [r4, #4]
   18390:	add	r0, r1, r0
   18394:	mov	r1, #21
   18398:	str	r8, [r0, #4]
   1839c:	str	r1, [r0, #8]
   183a0:	mov	r1, #0
   183a4:	b	1845c <sf_gen_inbound+0x5f0>
   183a8:	mov	r6, r0
   183ac:	sub	r1, r5, #20
   183b0:	mov	r2, #84	; 0x54
   183b4:	str	r1, [r7]
   183b8:	ldr	r0, [r7, #4]
   183bc:	str	r2, [r0, r1]!
   183c0:	mov	r1, #1
   183c4:	mov	r2, r8
   183c8:	str	r1, [r0, #12]
   183cc:	mov	r1, r2
   183d0:	ldr	r2, [r2, #16]
   183d4:	cmp	r2, #0
   183d8:	bne	183cc <sf_gen_inbound+0x560>
   183dc:	str	r0, [r1, #16]
   183e0:	ldr	r5, [r4, r6, lsl #3]!
   183e4:	cmp	r5, #207	; 0xcf
   183e8:	bhi	1843c <sf_gen_inbound+0x5d0>
   183ec:	ldr	r1, [pc, #332]	; 18540 <sf_gen_inbound+0x6d4>
   183f0:	add	r0, r6, #1
   183f4:	cmp	r6, #15
   183f8:	add	r1, pc, r1
   183fc:	str	r0, [r1]
   18400:	bge	18510 <sf_gen_inbound+0x6a4>
   18404:	mov	r1, #1024	; 0x400
   18408:	lsl	r5, r1, r0
   1840c:	mov	r0, r5
   18410:	bl	ed4 <malloc@plt>
   18414:	cmp	r0, #0
   18418:	str	r0, [r4, #12]
   1841c:	beq	18510 <sf_gen_inbound+0x6a4>
   18420:	mov	r1, #0
   18424:	mov	r2, r5
   18428:	add	r4, r4, #8
   1842c:	bl	f40 <memset@plt>
   18430:	cmp	r5, #207	; 0xcf
   18434:	str	r5, [r4]
   18438:	bls	18510 <sf_gen_inbound+0x6a4>
   1843c:	sub	r0, r5, #208	; 0xd0
   18440:	str	r0, [r4]
   18444:	ldr	r1, [r4, #4]
   18448:	add	r0, r1, r0
   1844c:	mov	r1, #21
   18450:	str	r8, [r0, #4]
   18454:	str	r1, [r0, #8]
   18458:	mov	r1, #1
   1845c:	str	r1, [r0, #20]
   18460:	str	r0, [r0, #96]	; 0x60
   18464:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   18468:	mov	r0, #0
   1846c:	bl	15190 <sf_gen_loadi>
   18470:	mov	r1, r0
   18474:	mov	r0, #1
   18478:	mov	r2, #1
   1847c:	bl	12b40 <sf_gen_load>
   18480:	mov	r4, r0
   18484:	mov	r0, #0
   18488:	bl	15190 <sf_gen_loadi>
   1848c:	mov	r2, r0
   18490:	mov	r0, #16
   18494:	mov	r1, r4
   18498:	mov	r3, r6
   1849c:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   184a0:	b	149f0 <sf_gen_relation>
   184a4:	mov	r0, #1
   184a8:	mov	r1, #0
   184ac:	mov	r2, #8
   184b0:	cmp	r6, #0
   184b4:	beq	184d8 <sf_gen_inbound+0x66c>
   184b8:	mov	r3, #4
   184bc:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   184c0:	b	a9f8 <gen_cmp>
   184c4:	mov	r0, #1
   184c8:	mov	r1, #0
   184cc:	mov	r2, #16
   184d0:	cmp	r6, #0
   184d4:	bne	184f8 <sf_gen_inbound+0x68c>
   184d8:	mov	r3, #0
   184dc:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   184e0:	b	a9f8 <gen_cmp>
   184e4:	mov	r0, #1
   184e8:	mov	r1, #2
   184ec:	mov	r2, #8
   184f0:	cmp	r6, #0
   184f4:	beq	18504 <sf_gen_inbound+0x698>
   184f8:	mov	r3, #1
   184fc:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   18500:	b	a9f8 <gen_cmp>
   18504:	mov	r3, #2
   18508:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   1850c:	b	a9f8 <gen_cmp>
   18510:	ldr	r0, [pc, #48]	; 18548 <sf_gen_inbound+0x6dc>
   18514:	add	r0, pc, r0
   18518:	bl	2124 <sf_bpf_error>
   1851c:	ldr	r0, [pc, #32]	; 18544 <sf_gen_inbound+0x6d8>
   18520:	add	r0, pc, r0
   18524:	bl	2124 <sf_bpf_error>
   18528:	.word	0x0002f5b4
   1852c:	.word	0x0002f2dc
   18530:	.word	0x0002f254
   18534:	.word	0x0002f2b0
   18538:	.word	0x0002f1bc
   1853c:	.word	0x0002f254
   18540:	.word	0x0002f104
   18544:	.word	0x000115e6
   18548:	.word	0x00011af0

0001854c <sf_gen_pf_ifname>:
   1854c:	push	{fp, lr}
   18550:	mov	fp, sp
   18554:	ldr	r0, [pc, #4]	; 18560 <sf_gen_pf_ifname+0x14>
   18558:	add	r0, pc, r0
   1855c:	bl	2124 <sf_bpf_error>
   18560:	.word	0x000115dc

00018564 <sf_gen_pf_ruleset>:
   18564:	push	{fp, lr}
   18568:	mov	fp, sp
   1856c:	ldr	r0, [pc, #4]	; 18578 <sf_gen_pf_ruleset+0x14>
   18570:	add	r0, pc, r0
   18574:	bl	2124 <sf_bpf_error>
   18578:	.word	0x000115ec

0001857c <sf_gen_pf_rnr>:
   1857c:	push	{fp, lr}
   18580:	mov	fp, sp
   18584:	ldr	r0, [pc, #4]	; 18590 <sf_gen_pf_rnr+0x14>
   18588:	add	r0, pc, r0
   1858c:	bl	2124 <sf_bpf_error>
   18590:	.word	0x000115d4

00018594 <sf_gen_pf_srnr>:
   18594:	push	{fp, lr}
   18598:	mov	fp, sp
   1859c:	ldr	r0, [pc, #4]	; 185a8 <sf_gen_pf_srnr+0x14>
   185a0:	add	r0, pc, r0
   185a4:	bl	2124 <sf_bpf_error>
   185a8:	.word	0x000115bc

000185ac <sf_gen_pf_reason>:
   185ac:	push	{fp, lr}
   185b0:	mov	fp, sp
   185b4:	ldr	r0, [pc, #4]	; 185c0 <sf_gen_pf_reason+0x14>
   185b8:	add	r0, pc, r0
   185bc:	bl	2124 <sf_bpf_error>
   185c0:	.word	0x000115a4

000185c4 <sf_gen_pf_action>:
   185c4:	push	{fp, lr}
   185c8:	mov	fp, sp
   185cc:	ldr	r0, [pc, #4]	; 185d8 <sf_gen_pf_action+0x14>
   185d0:	add	r0, pc, r0
   185d4:	bl	2124 <sf_bpf_error>
   185d8:	.word	0x0001158c

000185dc <sf_gen_p80211_type>:
   185dc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   185e0:	add	fp, sp, #24
   185e4:	mov	r8, r0
   185e8:	ldr	r0, [pc, #408]	; 18788 <sf_gen_p80211_type+0x1ac>
   185ec:	mov	r6, r1
   185f0:	ldr	r0, [pc, r0]
   185f4:	sub	r1, r0, #105	; 0x69
   185f8:	cmp	r1, #22
   185fc:	bhi	18614 <sf_gen_p80211_type+0x38>
   18600:	movw	r3, #16385	; 0x4001
   18604:	mov	r2, #1
   18608:	movt	r3, #64	; 0x40
   1860c:	tst	r3, r2, lsl r1
   18610:	bne	1861c <sf_gen_p80211_type+0x40>
   18614:	cmp	r0, #163	; 0xa3
   18618:	bne	1877c <sf_gen_p80211_type+0x1a0>
   1861c:	mov	r0, #1
   18620:	mov	r1, #0
   18624:	mov	r2, #16
   18628:	bl	17a3c <gen_load_a>
   1862c:	mov	r9, r0
   18630:	ldr	r0, [pc, #344]	; 18790 <sf_gen_p80211_type+0x1b4>
   18634:	cmn	r6, #1
   18638:	ldr	r0, [pc, r0]
   1863c:	beq	186a8 <sf_gen_p80211_type+0xcc>
   18640:	ldr	r5, [pc, #332]	; 18794 <sf_gen_p80211_type+0x1b8>
   18644:	add	r5, pc, r5
   18648:	ldr	r7, [r5, r0, lsl #3]!
   1864c:	cmp	r7, #19
   18650:	bhi	186b0 <sf_gen_p80211_type+0xd4>
   18654:	ldr	r1, [pc, #316]	; 18798 <sf_gen_p80211_type+0x1bc>
   18658:	add	r4, r0, #1
   1865c:	cmp	r0, #15
   18660:	add	r1, pc, r1
   18664:	str	r4, [r1]
   18668:	bge	18770 <sf_gen_p80211_type+0x194>
   1866c:	mov	r0, #1024	; 0x400
   18670:	lsl	r7, r0, r4
   18674:	mov	r0, r7
   18678:	bl	ed4 <malloc@plt>
   1867c:	cmp	r0, #0
   18680:	str	r0, [r5, #12]
   18684:	beq	18770 <sf_gen_p80211_type+0x194>
   18688:	mov	r1, #0
   1868c:	mov	r2, r7
   18690:	add	r5, r5, #8
   18694:	bl	f40 <memset@plt>
   18698:	cmp	r7, #19
   1869c:	str	r7, [r5]
   186a0:	bhi	186b4 <sf_gen_p80211_type+0xd8>
   186a4:	b	18770 <sf_gen_p80211_type+0x194>
   186a8:	mov	r4, r0
   186ac:	b	186e4 <sf_gen_p80211_type+0x108>
   186b0:	mov	r4, r0
   186b4:	sub	r1, r7, #20
   186b8:	mov	r2, #84	; 0x54
   186bc:	str	r1, [r5]
   186c0:	ldr	r0, [r5, #4]
   186c4:	str	r2, [r0, r1]!
   186c8:	mov	r2, r9
   186cc:	str	r6, [r0, #12]
   186d0:	mov	r1, r2
   186d4:	ldr	r2, [r2, #16]
   186d8:	cmp	r2, #0
   186dc:	bne	186d0 <sf_gen_p80211_type+0xf4>
   186e0:	str	r0, [r1, #16]
   186e4:	ldr	r5, [pc, #176]	; 1879c <sf_gen_p80211_type+0x1c0>
   186e8:	add	r5, pc, r5
   186ec:	ldr	r6, [r5, r4, lsl #3]!
   186f0:	cmp	r6, #207	; 0xcf
   186f4:	bhi	18748 <sf_gen_p80211_type+0x16c>
   186f8:	ldr	r1, [pc, #160]	; 187a0 <sf_gen_p80211_type+0x1c4>
   186fc:	add	r0, r4, #1
   18700:	cmp	r4, #15
   18704:	add	r1, pc, r1
   18708:	str	r0, [r1]
   1870c:	bge	18770 <sf_gen_p80211_type+0x194>
   18710:	mov	r1, #1024	; 0x400
   18714:	lsl	r6, r1, r0
   18718:	mov	r0, r6
   1871c:	bl	ed4 <malloc@plt>
   18720:	cmp	r0, #0
   18724:	str	r0, [r5, #12]
   18728:	beq	18770 <sf_gen_p80211_type+0x194>
   1872c:	mov	r1, #0
   18730:	mov	r2, r6
   18734:	add	r5, r5, #8
   18738:	bl	f40 <memset@plt>
   1873c:	cmp	r6, #207	; 0xcf
   18740:	str	r6, [r5]
   18744:	bls	18770 <sf_gen_p80211_type+0x194>
   18748:	sub	r0, r6, #208	; 0xd0
   1874c:	str	r0, [r5]
   18750:	ldr	r1, [r5, #4]
   18754:	add	r0, r1, r0
   18758:	mov	r1, #21
   1875c:	str	r9, [r0, #4]
   18760:	str	r1, [r0, #8]
   18764:	str	r8, [r0, #20]
   18768:	str	r0, [r0, #96]	; 0x60
   1876c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   18770:	ldr	r0, [pc, #44]	; 187a4 <sf_gen_p80211_type+0x1c8>
   18774:	add	r0, pc, r0
   18778:	bl	2124 <sf_bpf_error>
   1877c:	ldr	r0, [pc, #8]	; 1878c <sf_gen_p80211_type+0x1b0>
   18780:	add	r0, pc, r0
   18784:	bl	2124 <sf_bpf_error>
   18788:	.word	0x0002ee40
   1878c:	.word	0x00011411
   18790:	.word	0x0002eec4
   18794:	.word	0x0002ee38
   18798:	.word	0x0002ee9c
   1879c:	.word	0x0002ed94
   187a0:	.word	0x0002edf8
   187a4:	.word	0x00011890

000187a8 <sf_gen_p80211_fcdir>:
   187a8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   187ac:	add	fp, sp, #24
   187b0:	mov	r8, r0
   187b4:	ldr	r0, [pc, #388]	; 18940 <sf_gen_p80211_fcdir+0x198>
   187b8:	ldr	r0, [pc, r0]
   187bc:	sub	r1, r0, #105	; 0x69
   187c0:	cmp	r1, #22
   187c4:	bhi	187dc <sf_gen_p80211_fcdir+0x34>
   187c8:	movw	r3, #16385	; 0x4001
   187cc:	mov	r2, #1
   187d0:	movt	r3, #64	; 0x40
   187d4:	tst	r3, r2, lsl r1
   187d8:	bne	187e4 <sf_gen_p80211_fcdir+0x3c>
   187dc:	cmp	r0, #163	; 0xa3
   187e0:	bne	18934 <sf_gen_p80211_fcdir+0x18c>
   187e4:	mov	r0, #1
   187e8:	mov	r1, #1
   187ec:	mov	r2, #16
   187f0:	bl	17a3c <gen_load_a>
   187f4:	mov	r9, r0
   187f8:	ldr	r0, [pc, #328]	; 18948 <sf_gen_p80211_fcdir+0x1a0>
   187fc:	ldr	r0, [pc, r0]
   18800:	ldr	r5, [pc, #324]	; 1894c <sf_gen_p80211_fcdir+0x1a4>
   18804:	add	r5, pc, r5
   18808:	mov	r7, r5
   1880c:	ldr	r6, [r7, r0, lsl #3]!
   18810:	cmp	r6, #19
   18814:	bhi	1886c <sf_gen_p80211_fcdir+0xc4>
   18818:	ldr	r1, [pc, #304]	; 18950 <sf_gen_p80211_fcdir+0x1a8>
   1881c:	add	r4, r0, #1
   18820:	cmp	r0, #15
   18824:	add	r1, pc, r1
   18828:	str	r4, [r1]
   1882c:	bge	18928 <sf_gen_p80211_fcdir+0x180>
   18830:	mov	r0, #1024	; 0x400
   18834:	lsl	r6, r0, r4
   18838:	mov	r0, r6
   1883c:	bl	ed4 <malloc@plt>
   18840:	cmp	r0, #0
   18844:	str	r0, [r7, #12]
   18848:	beq	18928 <sf_gen_p80211_fcdir+0x180>
   1884c:	mov	r1, #0
   18850:	mov	r2, r6
   18854:	add	r7, r7, #8
   18858:	bl	f40 <memset@plt>
   1885c:	cmp	r6, #19
   18860:	str	r6, [r7]
   18864:	bhi	18870 <sf_gen_p80211_fcdir+0xc8>
   18868:	b	18928 <sf_gen_p80211_fcdir+0x180>
   1886c:	mov	r4, r0
   18870:	sub	r1, r6, #20
   18874:	mov	r2, #84	; 0x54
   18878:	str	r1, [r7]
   1887c:	ldr	r0, [r7, #4]
   18880:	str	r2, [r0, r1]!
   18884:	mov	r1, #3
   18888:	mov	r2, r9
   1888c:	str	r1, [r0, #12]
   18890:	mov	r1, r2
   18894:	ldr	r2, [r2, #16]
   18898:	cmp	r2, #0
   1889c:	bne	18890 <sf_gen_p80211_fcdir+0xe8>
   188a0:	str	r0, [r1, #16]
   188a4:	ldr	r6, [r5, r4, lsl #3]!
   188a8:	cmp	r6, #207	; 0xcf
   188ac:	bhi	18900 <sf_gen_p80211_fcdir+0x158>
   188b0:	ldr	r1, [pc, #156]	; 18954 <sf_gen_p80211_fcdir+0x1ac>
   188b4:	add	r0, r4, #1
   188b8:	cmp	r4, #15
   188bc:	add	r1, pc, r1
   188c0:	str	r0, [r1]
   188c4:	bge	18928 <sf_gen_p80211_fcdir+0x180>
   188c8:	mov	r1, #1024	; 0x400
   188cc:	lsl	r6, r1, r0
   188d0:	mov	r0, r6
   188d4:	bl	ed4 <malloc@plt>
   188d8:	cmp	r0, #0
   188dc:	str	r0, [r5, #12]
   188e0:	beq	18928 <sf_gen_p80211_fcdir+0x180>
   188e4:	mov	r1, #0
   188e8:	mov	r2, r6
   188ec:	add	r5, r5, #8
   188f0:	bl	f40 <memset@plt>
   188f4:	cmp	r6, #207	; 0xcf
   188f8:	str	r6, [r5]
   188fc:	bls	18928 <sf_gen_p80211_fcdir+0x180>
   18900:	sub	r0, r6, #208	; 0xd0
   18904:	str	r0, [r5]
   18908:	ldr	r1, [r5, #4]
   1890c:	add	r0, r1, r0
   18910:	mov	r1, #21
   18914:	str	r9, [r0, #4]
   18918:	str	r1, [r0, #8]
   1891c:	str	r8, [r0, #20]
   18920:	str	r0, [r0, #96]	; 0x60
   18924:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   18928:	ldr	r0, [pc, #40]	; 18958 <sf_gen_p80211_fcdir+0x1b0>
   1892c:	add	r0, pc, r0
   18930:	bl	2124 <sf_bpf_error>
   18934:	ldr	r0, [pc, #8]	; 18944 <sf_gen_p80211_fcdir+0x19c>
   18938:	add	r0, pc, r0
   1893c:	bl	2124 <sf_bpf_error>
   18940:	.word	0x0002ec78
   18944:	.word	0x0001128a
   18948:	.word	0x0002ed00
   1894c:	.word	0x0002ec78
   18950:	.word	0x0002ecd8
   18954:	.word	0x0002ec40
   18958:	.word	0x000116d8

0001895c <sf_gen_acode>:
   1895c:	push	{r4, r5, fp, lr}
   18960:	add	fp, sp, #8
   18964:	sub	sp, sp, #8
   18968:	mov	r5, r0
   1896c:	ldr	r0, [pc, #604]	; 18bd0 <sf_gen_acode+0x274>
   18970:	ldr	r0, [pc, r0]
   18974:	cmp	r0, #129	; 0x81
   18978:	cmpne	r0, #7
   1897c:	bne	18bb4 <sf_gen_acode+0x258>
   18980:	movw	r0, #65534	; 0xfffe
   18984:	and	r0, r1, r0
   18988:	cmp	r0, #256	; 0x100
   1898c:	bne	18bc0 <sf_gen_acode+0x264>
   18990:	lsr	r0, r1, #16
   18994:	uxtb	r0, r0
   18998:	cmp	r0, #4
   1899c:	bhi	18bcc <sf_gen_acode+0x270>
   189a0:	add	r1, pc, #4
   189a4:	ldr	r0, [r1, r0, lsl #2]
   189a8:	add	pc, r1, r0
   189ac:	.word	0x00000014
   189b0:	.word	0x000001ac
   189b4:	.word	0x000001b8
   189b8:	.word	0x00000014
   189bc:	.word	0x000000d4
   189c0:	mov	r0, #1
   189c4:	mov	r1, #0
   189c8:	mov	r2, #1
   189cc:	mov	r3, r5
   189d0:	bl	1c3c0 <gen_bcmp>
   189d4:	mov	r4, r0
   189d8:	mov	r0, #1
   189dc:	mov	r1, #1
   189e0:	mov	r2, #1
   189e4:	mov	r3, r5
   189e8:	bl	1c3c0 <gen_bcmp>
   189ec:	ldr	r1, [r4, #44]	; 0x2c
   189f0:	cmp	r4, #0
   189f4:	clz	r1, r1
   189f8:	lsr	r1, r1, #5
   189fc:	str	r1, [r4, #44]	; 0x2c
   18a00:	beq	18a3c <sf_gen_acode+0xe0>
   18a04:	ldr	r2, [r0, #96]	; 0x60
   18a08:	mov	r3, r4
   18a0c:	b	18a14 <sf_gen_acode+0xb8>
   18a10:	ldr	r1, [r3, #44]	; 0x2c
   18a14:	cmp	r1, #0
   18a18:	mov	r1, #84	; 0x54
   18a1c:	add	r5, r3, #84	; 0x54
   18a20:	movweq	r1, #60	; 0x3c
   18a24:	addeq	r5, r3, #60	; 0x3c
   18a28:	ldr	r3, [r3, r1]
   18a2c:	str	r2, [r5]
   18a30:	cmp	r3, #0
   18a34:	bne	18a10 <sf_gen_acode+0xb4>
   18a38:	ldr	r1, [r4, #44]	; 0x2c
   18a3c:	clz	r1, r1
   18a40:	cmp	r0, #0
   18a44:	lsr	r1, r1, #5
   18a48:	str	r1, [r4, #44]	; 0x2c
   18a4c:	str	r0, [sp]
   18a50:	beq	18b80 <sf_gen_acode+0x224>
   18a54:	mov	r2, r0
   18a58:	ldr	r3, [r2, #44]	; 0x2c
   18a5c:	add	r1, r2, #84	; 0x54
   18a60:	cmp	r3, #0
   18a64:	mov	r3, #84	; 0x54
   18a68:	movweq	r3, #60	; 0x3c
   18a6c:	addeq	r1, r2, #60	; 0x3c
   18a70:	ldr	r2, [r2, r3]
   18a74:	cmp	r2, #0
   18a78:	bne	18a58 <sf_gen_acode+0xfc>
   18a7c:	b	18b84 <sf_gen_acode+0x228>
   18a80:	mov	r0, #1
   18a84:	mov	r1, #0
   18a88:	mov	r2, #1
   18a8c:	mov	r3, r5
   18a90:	bl	1c3c0 <gen_bcmp>
   18a94:	mov	r4, r0
   18a98:	mov	r0, #1
   18a9c:	mov	r1, #1
   18aa0:	mov	r2, #1
   18aa4:	mov	r3, r5
   18aa8:	bl	1c3c0 <gen_bcmp>
   18aac:	cmp	r4, #0
   18ab0:	beq	18ae4 <sf_gen_acode+0x188>
   18ab4:	ldr	r1, [r0, #96]	; 0x60
   18ab8:	mov	r2, r4
   18abc:	ldr	r3, [r2, #44]	; 0x2c
   18ac0:	add	r5, r2, #84	; 0x54
   18ac4:	cmp	r3, #0
   18ac8:	mov	r3, #84	; 0x54
   18acc:	movweq	r3, #60	; 0x3c
   18ad0:	addeq	r5, r2, #60	; 0x3c
   18ad4:	ldr	r2, [r2, r3]
   18ad8:	str	r1, [r5]
   18adc:	cmp	r2, #0
   18ae0:	bne	18abc <sf_gen_acode+0x160>
   18ae4:	ldr	r1, [r4, #44]	; 0x2c
   18ae8:	cmp	r0, #0
   18aec:	clz	r1, r1
   18af0:	lsr	r1, r1, #5
   18af4:	str	r1, [r4, #44]	; 0x2c
   18af8:	ldr	r2, [r0, #44]	; 0x2c
   18afc:	clz	r1, r2
   18b00:	lsr	r1, r1, #5
   18b04:	str	r1, [r0, #44]	; 0x2c
   18b08:	str	r0, [sp, #4]
   18b0c:	beq	18b8c <sf_gen_acode+0x230>
   18b10:	cmp	r2, #0
   18b14:	mov	r2, #60	; 0x3c
   18b18:	add	r1, r0, #60	; 0x3c
   18b1c:	movweq	r2, #84	; 0x54
   18b20:	addeq	r1, r0, #84	; 0x54
   18b24:	ldr	r2, [r0, r2]
   18b28:	cmp	r2, #0
   18b2c:	beq	18b90 <sf_gen_acode+0x234>
   18b30:	ldr	r3, [r2, #44]	; 0x2c
   18b34:	add	r1, r2, #84	; 0x54
   18b38:	cmp	r3, #0
   18b3c:	mov	r3, #84	; 0x54
   18b40:	movweq	r3, #60	; 0x3c
   18b44:	addeq	r1, r2, #60	; 0x3c
   18b48:	ldr	r2, [r2, r3]
   18b4c:	cmp	r2, #0
   18b50:	bne	18b30 <sf_gen_acode+0x1d4>
   18b54:	b	18b90 <sf_gen_acode+0x234>
   18b58:	mov	r0, #1
   18b5c:	mov	r1, #0
   18b60:	b	18b6c <sf_gen_acode+0x210>
   18b64:	mov	r0, #1
   18b68:	mov	r1, #1
   18b6c:	mov	r2, #1
   18b70:	mov	r3, r5
   18b74:	sub	sp, fp, #8
   18b78:	pop	{r4, r5, fp, lr}
   18b7c:	b	1c3c0 <gen_bcmp>
   18b80:	mov	r1, sp
   18b84:	str	r4, [r1]
   18b88:	b	18ba4 <sf_gen_acode+0x248>
   18b8c:	add	r1, sp, #4
   18b90:	str	r4, [r1]
   18b94:	ldr	r1, [r0, #44]	; 0x2c
   18b98:	clz	r1, r1
   18b9c:	lsr	r1, r1, #5
   18ba0:	str	r1, [r0, #44]	; 0x2c
   18ba4:	ldr	r1, [r4, #96]	; 0x60
   18ba8:	str	r1, [r0, #96]	; 0x60
   18bac:	sub	sp, fp, #8
   18bb0:	pop	{r4, r5, fp, pc}
   18bb4:	ldr	r0, [pc, #28]	; 18bd8 <sf_gen_acode+0x27c>
   18bb8:	add	r0, pc, r0
   18bbc:	bl	2124 <sf_bpf_error>
   18bc0:	ldr	r0, [pc, #12]	; 18bd4 <sf_gen_acode+0x278>
   18bc4:	add	r0, pc, r0
   18bc8:	bl	2124 <sf_bpf_error>
   18bcc:	bl	fc4 <abort@plt>
   18bd0:	.word	0x0002eac0
   18bd4:	.word	0x00011031
   18bd8:	.word	0x00011067

00018bdc <sf_gen_vlan>:
   18bdc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18be0:	add	fp, sp, #28
   18be4:	sub	sp, sp, #4
   18be8:	mov	r9, r0
   18bec:	ldr	r0, [pc, #696]	; 18eac <sf_gen_vlan+0x2d0>
   18bf0:	ldr	r0, [pc, r0]
   18bf4:	cmp	r0, #0
   18bf8:	bne	18e94 <sf_gen_vlan+0x2b8>
   18bfc:	ldr	r0, [pc, #684]	; 18eb0 <sf_gen_vlan+0x2d4>
   18c00:	ldr	r0, [pc, r0]
   18c04:	ldr	r1, [pc, #680]	; 18eb4 <sf_gen_vlan+0x2d8>
   18c08:	add	r1, pc, r1
   18c0c:	str	r0, [r1]
   18c10:	ldr	r1, [pc, #672]	; 18eb8 <sf_gen_vlan+0x2dc>
   18c14:	ldr	r1, [pc, r1]
   18c18:	cmp	r1, #1
   18c1c:	bne	18ea0 <sf_gen_vlan+0x2c4>
   18c20:	ldr	r1, [pc, #660]	; 18ebc <sf_gen_vlan+0x2e0>
   18c24:	mov	r0, #1
   18c28:	mov	r2, #8
   18c2c:	mov	r3, #33024	; 0x8100
   18c30:	ldr	r1, [pc, r1]
   18c34:	bl	a9f8 <gen_cmp>
   18c38:	mov	sl, r0
   18c3c:	cmp	r9, #0
   18c40:	blt	18ccc <sf_gen_vlan+0xf0>
   18c44:	mov	r0, #2
   18c48:	mov	r1, #0
   18c4c:	mov	r2, #8
   18c50:	bl	17a3c <gen_load_a>
   18c54:	mov	r8, r0
   18c58:	ldr	r0, [pc, #608]	; 18ec0 <sf_gen_vlan+0x2e4>
   18c5c:	ldr	r0, [pc, r0]
   18c60:	ldr	r4, [pc, #604]	; 18ec4 <sf_gen_vlan+0x2e8>
   18c64:	add	r4, pc, r4
   18c68:	mov	r6, r4
   18c6c:	ldr	r7, [r6, r0, lsl #3]!
   18c70:	cmp	r7, #19
   18c74:	bhi	18cd4 <sf_gen_vlan+0xf8>
   18c78:	ldr	r1, [pc, #584]	; 18ec8 <sf_gen_vlan+0x2ec>
   18c7c:	add	r5, r0, #1
   18c80:	cmp	r0, #15
   18c84:	add	r1, pc, r1
   18c88:	str	r5, [r1]
   18c8c:	bge	18e88 <sf_gen_vlan+0x2ac>
   18c90:	mov	r0, #1024	; 0x400
   18c94:	lsl	r7, r0, r5
   18c98:	mov	r0, r7
   18c9c:	bl	ed4 <malloc@plt>
   18ca0:	cmp	r0, #0
   18ca4:	str	r0, [r6, #12]
   18ca8:	beq	18e88 <sf_gen_vlan+0x2ac>
   18cac:	mov	r1, #0
   18cb0:	mov	r2, r7
   18cb4:	add	r6, r6, #8
   18cb8:	bl	f40 <memset@plt>
   18cbc:	cmp	r7, #19
   18cc0:	str	r7, [r6]
   18cc4:	bhi	18cd8 <sf_gen_vlan+0xfc>
   18cc8:	b	18e88 <sf_gen_vlan+0x2ac>
   18ccc:	mov	r0, sl
   18cd0:	b	18e50 <sf_gen_vlan+0x274>
   18cd4:	mov	r5, r0
   18cd8:	sub	r1, r7, #20
   18cdc:	mov	r2, #84	; 0x54
   18ce0:	str	r1, [r6]
   18ce4:	ldr	r0, [r6, #4]
   18ce8:	str	r2, [r0, r1]!
   18cec:	movw	r1, #4095	; 0xfff
   18cf0:	mov	r2, r8
   18cf4:	str	r1, [r0, #12]
   18cf8:	mov	r1, r2
   18cfc:	ldr	r2, [r2, #16]
   18d00:	cmp	r2, #0
   18d04:	bne	18cf8 <sf_gen_vlan+0x11c>
   18d08:	str	r0, [r1, #16]
   18d0c:	ldr	r7, [r4, r5, lsl #3]!
   18d10:	cmp	r7, #207	; 0xcf
   18d14:	bhi	18d68 <sf_gen_vlan+0x18c>
   18d18:	ldr	r1, [pc, #428]	; 18ecc <sf_gen_vlan+0x2f0>
   18d1c:	add	r0, r5, #1
   18d20:	cmp	r5, #15
   18d24:	add	r1, pc, r1
   18d28:	str	r0, [r1]
   18d2c:	bge	18e88 <sf_gen_vlan+0x2ac>
   18d30:	mov	r1, #1024	; 0x400
   18d34:	lsl	r7, r1, r0
   18d38:	mov	r0, r7
   18d3c:	bl	ed4 <malloc@plt>
   18d40:	cmp	r0, #0
   18d44:	str	r0, [r4, #12]
   18d48:	beq	18e88 <sf_gen_vlan+0x2ac>
   18d4c:	mov	r1, #0
   18d50:	mov	r2, r7
   18d54:	add	r4, r4, #8
   18d58:	bl	f40 <memset@plt>
   18d5c:	cmp	r7, #207	; 0xcf
   18d60:	str	r7, [r4]
   18d64:	bls	18e88 <sf_gen_vlan+0x2ac>
   18d68:	sub	r0, r7, #208	; 0xd0
   18d6c:	cmp	sl, #0
   18d70:	str	r0, [r4]
   18d74:	ldr	r1, [r4, #4]
   18d78:	add	r0, r1, r0
   18d7c:	mov	r1, #21
   18d80:	str	r8, [r0, #4]
   18d84:	str	r1, [r0, #8]
   18d88:	str	r9, [r0, #20]
   18d8c:	str	r0, [r0, #96]	; 0x60
   18d90:	beq	18dc0 <sf_gen_vlan+0x1e4>
   18d94:	mov	r1, sl
   18d98:	ldr	r2, [r1, #44]	; 0x2c
   18d9c:	add	r3, r1, #84	; 0x54
   18da0:	cmp	r2, #0
   18da4:	mov	r2, #84	; 0x54
   18da8:	movweq	r2, #60	; 0x3c
   18dac:	addeq	r3, r1, #60	; 0x3c
   18db0:	ldr	r1, [r1, r2]
   18db4:	str	r0, [r3]
   18db8:	cmp	r1, #0
   18dbc:	bne	18d98 <sf_gen_vlan+0x1bc>
   18dc0:	ldr	r1, [sl, #44]	; 0x2c
   18dc4:	cmp	r0, #0
   18dc8:	clz	r1, r1
   18dcc:	lsr	r1, r1, #5
   18dd0:	str	r1, [sl, #44]	; 0x2c
   18dd4:	ldr	r1, [r0, #44]	; 0x2c
   18dd8:	clz	r2, r1
   18ddc:	lsr	r2, r2, #5
   18de0:	str	r2, [r0, #44]	; 0x2c
   18de4:	str	r0, [sp]
   18de8:	beq	18e30 <sf_gen_vlan+0x254>
   18dec:	mov	r3, #60	; 0x3c
   18df0:	cmp	r1, #0
   18df4:	mov	r2, r0
   18df8:	movweq	r3, #84	; 0x54
   18dfc:	ldr	r1, [r2, r3]!
   18e00:	cmp	r1, #0
   18e04:	beq	18e34 <sf_gen_vlan+0x258>
   18e08:	ldr	r3, [r1, #44]	; 0x2c
   18e0c:	add	r2, r1, #84	; 0x54
   18e10:	cmp	r3, #0
   18e14:	mov	r3, #84	; 0x54
   18e18:	movweq	r3, #60	; 0x3c
   18e1c:	addeq	r2, r1, #60	; 0x3c
   18e20:	ldr	r1, [r1, r3]
   18e24:	cmp	r1, #0
   18e28:	bne	18e08 <sf_gen_vlan+0x22c>
   18e2c:	b	18e34 <sf_gen_vlan+0x258>
   18e30:	mov	r2, sp
   18e34:	str	sl, [r2]
   18e38:	ldr	r1, [r0, #44]	; 0x2c
   18e3c:	clz	r1, r1
   18e40:	lsr	r1, r1, #5
   18e44:	str	r1, [r0, #44]	; 0x2c
   18e48:	ldr	r1, [sl, #96]	; 0x60
   18e4c:	str	r1, [r0, #96]	; 0x60
   18e50:	ldr	r1, [pc, #120]	; 18ed0 <sf_gen_vlan+0x2f4>
   18e54:	ldr	r1, [pc, r1]
   18e58:	ldr	r2, [pc, #116]	; 18ed4 <sf_gen_vlan+0x2f8>
   18e5c:	add	r1, r1, #4
   18e60:	add	r2, pc, r2
   18e64:	str	r1, [r2]
   18e68:	ldr	r1, [pc, #104]	; 18ed8 <sf_gen_vlan+0x2fc>
   18e6c:	ldr	r1, [pc, r1]
   18e70:	ldr	r2, [pc, #100]	; 18edc <sf_gen_vlan+0x300>
   18e74:	add	r1, r1, #4
   18e78:	add	r2, pc, r2
   18e7c:	str	r1, [r2]
   18e80:	sub	sp, fp, #28
   18e84:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   18e88:	ldr	r0, [pc, #88]	; 18ee8 <sf_gen_vlan+0x30c>
   18e8c:	add	r0, pc, r0
   18e90:	bl	2124 <sf_bpf_error>
   18e94:	ldr	r0, [pc, #72]	; 18ee4 <sf_gen_vlan+0x308>
   18e98:	add	r0, pc, r0
   18e9c:	bl	2124 <sf_bpf_error>
   18ea0:	ldr	r0, [pc, #56]	; 18ee0 <sf_gen_vlan+0x304>
   18ea4:	add	r0, pc, r0
   18ea8:	bl	2124 <sf_bpf_error>
   18eac:	.word	0x0002e4e4
   18eb0:	.word	0x0002e840
   18eb4:	.word	0x0002e4d0
   18eb8:	.word	0x0002e81c
   18ebc:	.word	0x0002e808
   18ec0:	.word	0x0002e8a0
   18ec4:	.word	0x0002e818
   18ec8:	.word	0x0002e878
   18ecc:	.word	0x0002e7d8
   18ed0:	.word	0x0002e5e8
   18ed4:	.word	0x0002e5dc
   18ed8:	.word	0x0002e5cc
   18edc:	.word	0x0002e5c0
   18ee0:	.word	0x00010db1
   18ee4:	.word	0x00010da4
   18ee8:	.word	0x00011178

00018eec <sf_gen_mpls>:
   18eec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18ef0:	add	fp, sp, #28
   18ef4:	sub	sp, sp, #4
   18ef8:	mov	r9, r0
   18efc:	ldr	r0, [pc, #1060]	; 19328 <sf_gen_mpls+0x43c>
   18f00:	ldr	r0, [pc, r0]
   18f04:	ldr	r1, [pc, #1056]	; 1932c <sf_gen_mpls+0x440>
   18f08:	add	r1, pc, r1
   18f0c:	str	r0, [r1]
   18f10:	ldr	r1, [pc, #1048]	; 19330 <sf_gen_mpls+0x444>
   18f14:	ldr	r1, [pc, r1]
   18f18:	cmp	r1, #0
   18f1c:	beq	18fa8 <sf_gen_mpls+0xbc>
   18f20:	sub	r1, r0, #2
   18f24:	mov	r0, #2
   18f28:	mov	r2, #16
   18f2c:	bl	17a3c <gen_load_a>
   18f30:	mov	r8, r0
   18f34:	ldr	r0, [pc, #1016]	; 19334 <sf_gen_mpls+0x448>
   18f38:	ldr	r0, [pc, r0]
   18f3c:	ldr	r6, [pc, #1012]	; 19338 <sf_gen_mpls+0x44c>
   18f40:	add	r6, pc, r6
   18f44:	mov	r7, r6
   18f48:	ldr	r5, [r7, r0, lsl #3]!
   18f4c:	cmp	r5, #19
   18f50:	bhi	18fd0 <sf_gen_mpls+0xe4>
   18f54:	ldr	r1, [pc, #992]	; 1933c <sf_gen_mpls+0x450>
   18f58:	add	r4, r0, #1
   18f5c:	cmp	r0, #15
   18f60:	add	r1, pc, r1
   18f64:	str	r4, [r1]
   18f68:	bge	19310 <sf_gen_mpls+0x424>
   18f6c:	mov	r0, #1024	; 0x400
   18f70:	lsl	r5, r0, r4
   18f74:	mov	r0, r5
   18f78:	bl	ed4 <malloc@plt>
   18f7c:	cmp	r0, #0
   18f80:	str	r0, [r7, #12]
   18f84:	beq	19310 <sf_gen_mpls+0x424>
   18f88:	mov	r1, #0
   18f8c:	mov	r2, r5
   18f90:	add	r7, r7, #8
   18f94:	bl	f40 <memset@plt>
   18f98:	cmp	r5, #19
   18f9c:	str	r5, [r7]
   18fa0:	bhi	18fd4 <sf_gen_mpls+0xe8>
   18fa4:	b	19310 <sf_gen_mpls+0x424>
   18fa8:	ldr	r1, [pc, #916]	; 19344 <sf_gen_mpls+0x458>
   18fac:	ldr	r1, [pc, r1]
   18fb0:	cmp	r1, #104	; 0x68
   18fb4:	beq	18fc8 <sf_gen_mpls+0xdc>
   18fb8:	cmp	r1, #9
   18fbc:	beq	192a8 <sf_gen_mpls+0x3bc>
   18fc0:	cmp	r1, #1
   18fc4:	bne	1931c <sf_gen_mpls+0x430>
   18fc8:	movw	r0, #34887	; 0x8847
   18fcc:	b	192ac <sf_gen_mpls+0x3c0>
   18fd0:	mov	r4, r0
   18fd4:	sub	r1, r5, #20
   18fd8:	mov	r2, #84	; 0x54
   18fdc:	str	r1, [r7]
   18fe0:	ldr	r0, [r7, #4]
   18fe4:	str	r2, [r0, r1]!
   18fe8:	mov	r1, #1
   18fec:	mov	r2, r8
   18ff0:	str	r1, [r0, #12]
   18ff4:	mov	r1, r2
   18ff8:	ldr	r2, [r2, #16]
   18ffc:	cmp	r2, #0
   19000:	bne	18ff4 <sf_gen_mpls+0x108>
   19004:	str	r0, [r1, #16]
   19008:	ldr	r5, [r6, r4, lsl #3]!
   1900c:	cmp	r5, #207	; 0xcf
   19010:	bhi	19064 <sf_gen_mpls+0x178>
   19014:	ldr	r1, [pc, #804]	; 19340 <sf_gen_mpls+0x454>
   19018:	add	r0, r4, #1
   1901c:	cmp	r4, #15
   19020:	add	r1, pc, r1
   19024:	str	r0, [r1]
   19028:	bge	19310 <sf_gen_mpls+0x424>
   1902c:	mov	r1, #1024	; 0x400
   19030:	lsl	r5, r1, r0
   19034:	mov	r0, r5
   19038:	bl	ed4 <malloc@plt>
   1903c:	cmp	r0, #0
   19040:	str	r0, [r6, #12]
   19044:	beq	19310 <sf_gen_mpls+0x424>
   19048:	mov	r1, #0
   1904c:	mov	r2, r5
   19050:	add	r6, r6, #8
   19054:	bl	f40 <memset@plt>
   19058:	cmp	r5, #207	; 0xcf
   1905c:	str	r5, [r6]
   19060:	bls	19310 <sf_gen_mpls+0x424>
   19064:	sub	r0, r5, #208	; 0xd0
   19068:	str	r0, [r6]
   1906c:	ldr	r1, [r6, #4]
   19070:	add	r5, r1, r0
   19074:	mov	r0, #21
   19078:	str	r8, [r5, #4]
   1907c:	str	r0, [r5, #8]
   19080:	mov	r0, #0
   19084:	str	r0, [r5, #20]
   19088:	str	r5, [r5, #96]	; 0x60
   1908c:	cmp	r9, #0
   19090:	blt	192bc <sf_gen_mpls+0x3d0>
   19094:	ldr	r1, [pc, #688]	; 1934c <sf_gen_mpls+0x460>
   19098:	mov	r0, #2
   1909c:	mov	r2, #0
   190a0:	ldr	r1, [pc, r1]
   190a4:	bl	17a3c <gen_load_a>
   190a8:	mov	r8, r0
   190ac:	ldr	r0, [pc, #668]	; 19350 <sf_gen_mpls+0x464>
   190b0:	ldr	r0, [pc, r0]
   190b4:	ldr	r6, [pc, #664]	; 19354 <sf_gen_mpls+0x468>
   190b8:	add	r6, pc, r6
   190bc:	mov	r4, r6
   190c0:	ldr	r7, [r4, r0, lsl #3]!
   190c4:	cmp	r7, #19
   190c8:	bhi	19120 <sf_gen_mpls+0x234>
   190cc:	ldr	r1, [pc, #644]	; 19358 <sf_gen_mpls+0x46c>
   190d0:	add	sl, r0, #1
   190d4:	cmp	r0, #15
   190d8:	add	r1, pc, r1
   190dc:	str	sl, [r1]
   190e0:	bge	19310 <sf_gen_mpls+0x424>
   190e4:	mov	r0, #1024	; 0x400
   190e8:	lsl	r7, r0, sl
   190ec:	mov	r0, r7
   190f0:	bl	ed4 <malloc@plt>
   190f4:	cmp	r0, #0
   190f8:	str	r0, [r4, #12]
   190fc:	beq	19310 <sf_gen_mpls+0x424>
   19100:	mov	r1, #0
   19104:	mov	r2, r7
   19108:	add	r4, r4, #8
   1910c:	bl	f40 <memset@plt>
   19110:	cmp	r7, #19
   19114:	str	r7, [r4]
   19118:	bhi	19124 <sf_gen_mpls+0x238>
   1911c:	b	19310 <sf_gen_mpls+0x424>
   19120:	mov	sl, r0
   19124:	sub	r1, r7, #20
   19128:	mov	r2, #84	; 0x54
   1912c:	lsl	r9, r9, #12
   19130:	str	r1, [r4]
   19134:	ldr	r0, [r4, #4]
   19138:	str	r2, [r0, r1]!
   1913c:	movw	r1, #61440	; 0xf000
   19140:	mov	r2, r8
   19144:	movt	r1, #65535	; 0xffff
   19148:	str	r1, [r0, #12]
   1914c:	mov	r1, r2
   19150:	ldr	r2, [r2, #16]
   19154:	cmp	r2, #0
   19158:	bne	1914c <sf_gen_mpls+0x260>
   1915c:	str	r0, [r1, #16]
   19160:	ldr	r4, [r6, sl, lsl #3]!
   19164:	cmp	r4, #207	; 0xcf
   19168:	bhi	191bc <sf_gen_mpls+0x2d0>
   1916c:	ldr	r1, [pc, #488]	; 1935c <sf_gen_mpls+0x470>
   19170:	add	r0, sl, #1
   19174:	cmp	sl, #15
   19178:	add	r1, pc, r1
   1917c:	str	r0, [r1]
   19180:	bge	19310 <sf_gen_mpls+0x424>
   19184:	mov	r1, #1024	; 0x400
   19188:	lsl	r4, r1, r0
   1918c:	mov	r0, r4
   19190:	bl	ed4 <malloc@plt>
   19194:	cmp	r0, #0
   19198:	str	r0, [r6, #12]
   1919c:	beq	19310 <sf_gen_mpls+0x424>
   191a0:	mov	r1, #0
   191a4:	mov	r2, r4
   191a8:	add	r6, r6, #8
   191ac:	bl	f40 <memset@plt>
   191b0:	cmp	r4, #207	; 0xcf
   191b4:	str	r4, [r6]
   191b8:	bls	19310 <sf_gen_mpls+0x424>
   191bc:	sub	r0, r4, #208	; 0xd0
   191c0:	cmp	r5, #0
   191c4:	str	r0, [r6]
   191c8:	ldr	r1, [r6, #4]
   191cc:	add	r0, r1, r0
   191d0:	mov	r1, #21
   191d4:	str	r8, [r0, #4]
   191d8:	str	r1, [r0, #8]
   191dc:	str	r9, [r0, #20]
   191e0:	str	r0, [r0, #96]	; 0x60
   191e4:	beq	19214 <sf_gen_mpls+0x328>
   191e8:	mov	r1, r5
   191ec:	ldr	r2, [r1, #44]	; 0x2c
   191f0:	add	r3, r1, #84	; 0x54
   191f4:	cmp	r2, #0
   191f8:	mov	r2, #84	; 0x54
   191fc:	movweq	r2, #60	; 0x3c
   19200:	addeq	r3, r1, #60	; 0x3c
   19204:	ldr	r1, [r1, r2]
   19208:	str	r0, [r3]
   1920c:	cmp	r1, #0
   19210:	bne	191ec <sf_gen_mpls+0x300>
   19214:	ldr	r1, [r5, #44]	; 0x2c
   19218:	cmp	r0, #0
   1921c:	clz	r1, r1
   19220:	lsr	r1, r1, #5
   19224:	str	r1, [r5, #44]	; 0x2c
   19228:	ldr	r1, [r0, #44]	; 0x2c
   1922c:	clz	r2, r1
   19230:	lsr	r2, r2, #5
   19234:	str	r2, [r0, #44]	; 0x2c
   19238:	str	r0, [sp]
   1923c:	beq	19284 <sf_gen_mpls+0x398>
   19240:	mov	r3, #60	; 0x3c
   19244:	cmp	r1, #0
   19248:	mov	r2, r0
   1924c:	movweq	r3, #84	; 0x54
   19250:	ldr	r1, [r2, r3]!
   19254:	cmp	r1, #0
   19258:	beq	19288 <sf_gen_mpls+0x39c>
   1925c:	ldr	r3, [r1, #44]	; 0x2c
   19260:	add	r2, r1, #84	; 0x54
   19264:	cmp	r3, #0
   19268:	mov	r3, #84	; 0x54
   1926c:	movweq	r3, #60	; 0x3c
   19270:	addeq	r2, r1, #60	; 0x3c
   19274:	ldr	r1, [r1, r3]
   19278:	cmp	r1, #0
   1927c:	bne	1925c <sf_gen_mpls+0x370>
   19280:	b	19288 <sf_gen_mpls+0x39c>
   19284:	mov	r2, sp
   19288:	str	r5, [r2]
   1928c:	ldr	r1, [r0, #44]	; 0x2c
   19290:	clz	r1, r1
   19294:	lsr	r1, r1, #5
   19298:	str	r1, [r0, #44]	; 0x2c
   1929c:	ldr	r1, [r5, #96]	; 0x60
   192a0:	str	r1, [r0, #96]	; 0x60
   192a4:	b	192c0 <sf_gen_mpls+0x3d4>
   192a8:	movw	r0, #641	; 0x281
   192ac:	bl	7320 <gen_linktype>
   192b0:	mov	r5, r0
   192b4:	cmp	r9, #0
   192b8:	bge	19094 <sf_gen_mpls+0x1a8>
   192bc:	mov	r0, r5
   192c0:	ldr	r1, [pc, #152]	; 19360 <sf_gen_mpls+0x474>
   192c4:	ldr	r1, [pc, r1]
   192c8:	ldr	r2, [pc, #148]	; 19364 <sf_gen_mpls+0x478>
   192cc:	add	r1, r1, #4
   192d0:	add	r2, pc, r2
   192d4:	str	r1, [r2]
   192d8:	ldr	r1, [pc, #136]	; 19368 <sf_gen_mpls+0x47c>
   192dc:	ldr	r1, [pc, r1]
   192e0:	ldr	r2, [pc, #132]	; 1936c <sf_gen_mpls+0x480>
   192e4:	add	r1, r1, #4
   192e8:	add	r2, pc, r2
   192ec:	str	r1, [r2]
   192f0:	ldr	r1, [pc, #120]	; 19370 <sf_gen_mpls+0x484>
   192f4:	ldr	r1, [pc, r1]
   192f8:	ldr	r2, [pc, #116]	; 19374 <sf_gen_mpls+0x488>
   192fc:	add	r1, r1, #1
   19300:	add	r2, pc, r2
   19304:	str	r1, [r2]
   19308:	sub	sp, fp, #28
   1930c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19310:	ldr	r0, [pc, #96]	; 19378 <sf_gen_mpls+0x48c>
   19314:	add	r0, pc, r0
   19318:	bl	2124 <sf_bpf_error>
   1931c:	ldr	r0, [pc, #36]	; 19348 <sf_gen_mpls+0x45c>
   19320:	add	r0, pc, r0
   19324:	bl	2124 <sf_bpf_error>
   19328:	.word	0x0002e540
   1932c:	.word	0x0002e1d0
   19330:	.word	0x0002e1c0
   19334:	.word	0x0002e5c4
   19338:	.word	0x0002e53c
   1933c:	.word	0x0002e59c
   19340:	.word	0x0002e4dc
   19344:	.word	0x0002e484
   19348:	.word	0x0001095b
   1934c:	.word	0x0002e038
   19350:	.word	0x0002e44c
   19354:	.word	0x0002e3c4
   19358:	.word	0x0002e424
   1935c:	.word	0x0002e384
   19360:	.word	0x0002e188
   19364:	.word	0x0002e17c
   19368:	.word	0x0002e164
   1936c:	.word	0x0002e158
   19370:	.word	0x0002dde0
   19374:	.word	0x0002ddd4
   19378:	.word	0x00010cf0

0001937c <sf_gen_pppoed>:
   1937c:	movw	r0, #34915	; 0x8863
   19380:	b	7320 <gen_linktype>

00019384 <sf_gen_pppoes>:
   19384:	push	{fp, lr}
   19388:	mov	fp, sp
   1938c:	movw	r0, #34916	; 0x8864
   19390:	bl	7320 <gen_linktype>
   19394:	ldr	r1, [pc, #76]	; 193e8 <sf_gen_pppoes+0x64>
   19398:	mov	r2, #1
   1939c:	add	r1, pc, r1
   193a0:	strb	r2, [r1]
   193a4:	mov	r2, #8
   193a8:	ldr	r1, [pc, #60]	; 193ec <sf_gen_pppoes+0x68>
   193ac:	add	r1, pc, r1
   193b0:	str	r2, [r1]
   193b4:	ldr	r1, [pc, #52]	; 193f0 <sf_gen_pppoes+0x6c>
   193b8:	ldr	r1, [pc, r1]
   193bc:	ldr	r3, [pc, #48]	; 193f4 <sf_gen_pppoes+0x70>
   193c0:	add	r3, pc, r3
   193c4:	str	r2, [r3]
   193c8:	ldr	r2, [pc, #40]	; 193f8 <sf_gen_pppoes+0x74>
   193cc:	add	r2, pc, r2
   193d0:	str	r1, [r2]
   193d4:	add	r1, r1, #6
   193d8:	ldr	r2, [pc, #28]	; 193fc <sf_gen_pppoes+0x78>
   193dc:	add	r2, pc, r2
   193e0:	str	r1, [r2]
   193e4:	pop	{fp, pc}
   193e8:	.word	0x0002e0b4
   193ec:	.word	0x0002e0a0
   193f0:	.word	0x0002e088
   193f4:	.word	0x0002e080
   193f8:	.word	0x0002dd0c
   193fc:	.word	0x0002e05c

00019400 <sf_gen_atmfield_code>:
   19400:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19404:	add	fp, sp, #28
   19408:	sub	sp, sp, #4
   1940c:	sub	r0, r0, #51	; 0x33
   19410:	cmp	r0, #4
   19414:	bhi	19708 <sf_gen_atmfield_code+0x308>
   19418:	mov	sl, r1
   1941c:	add	r1, pc, #12
   19420:	mov	r9, r3
   19424:	mov	r4, r2
   19428:	ldr	r0, [r1, r0, lsl #2]
   1942c:	add	pc, r1, r0
   19430:	.word	0x00000014
   19434:	.word	0x00000134
   19438:	.word	0x00000070
   1943c:	.word	0x00000114
   19440:	.word	0x0000003c
   19444:	ldr	r0, [pc, #752]	; 1973c <sf_gen_atmfield_code+0x33c>
   19448:	add	r0, pc, r0
   1944c:	ldrb	r0, [r0]
   19450:	cmp	r0, #0
   19454:	beq	19718 <sf_gen_atmfield_code+0x318>
   19458:	ldr	r1, [pc, #736]	; 19740 <sf_gen_atmfield_code+0x340>
   1945c:	ldr	r1, [pc, r1]
   19460:	cmn	r1, #1
   19464:	bne	19558 <sf_gen_atmfield_code+0x158>
   19468:	b	19708 <sf_gen_atmfield_code+0x308>
   1946c:	ldr	r0, [pc, #768]	; 19774 <sf_gen_atmfield_code+0x374>
   19470:	add	r0, pc, r0
   19474:	ldrb	r0, [r0]
   19478:	cmp	r0, #0
   1947c:	beq	19724 <sf_gen_atmfield_code+0x324>
   19480:	ldr	r0, [pc, #752]	; 19778 <sf_gen_atmfield_code+0x378>
   19484:	add	r0, pc, r0
   19488:	ldrb	r0, [r0]
   1948c:	cmp	r0, #1
   19490:	beq	19708 <sf_gen_atmfield_code+0x308>
   19494:	mov	r0, #1
   19498:	mov	r1, #0
   1949c:	b	1955c <sf_gen_atmfield_code+0x15c>
   194a0:	ldr	r0, [pc, #692]	; 1975c <sf_gen_atmfield_code+0x35c>
   194a4:	add	r0, pc, r0
   194a8:	ldrb	r0, [r0]
   194ac:	cmp	r0, #1
   194b0:	beq	19708 <sf_gen_atmfield_code+0x308>
   194b4:	mov	r0, #1
   194b8:	mov	r1, #0
   194bc:	mov	r2, #16
   194c0:	bl	17a3c <gen_load_a>
   194c4:	mov	r3, r0
   194c8:	ldr	r0, [pc, #656]	; 19760 <sf_gen_atmfield_code+0x360>
   194cc:	ldr	r0, [pc, r0]
   194d0:	ldr	r6, [pc, #652]	; 19764 <sf_gen_atmfield_code+0x364>
   194d4:	add	r6, pc, r6
   194d8:	mov	r5, r6
   194dc:	ldr	r7, [r5, r0, lsl #3]!
   194e0:	cmp	r7, #19
   194e4:	bhi	19650 <sf_gen_atmfield_code+0x250>
   194e8:	str	r3, [sp]
   194ec:	add	r8, r0, #1
   194f0:	cmp	r0, #15
   194f4:	ldr	r1, [pc, #620]	; 19768 <sf_gen_atmfield_code+0x368>
   194f8:	add	r1, pc, r1
   194fc:	str	r8, [r1]
   19500:	bge	1970c <sf_gen_atmfield_code+0x30c>
   19504:	mov	r0, #1024	; 0x400
   19508:	lsl	r7, r0, r8
   1950c:	mov	r0, r7
   19510:	bl	ed4 <malloc@plt>
   19514:	cmp	r0, #0
   19518:	str	r0, [r5, #12]
   1951c:	beq	1970c <sf_gen_atmfield_code+0x30c>
   19520:	mov	r1, #0
   19524:	mov	r2, r7
   19528:	add	r5, r5, #8
   1952c:	bl	f40 <memset@plt>
   19530:	ldr	r3, [sp]
   19534:	cmp	r7, #19
   19538:	str	r7, [r5]
   1953c:	bhi	19654 <sf_gen_atmfield_code+0x254>
   19540:	b	1970c <sf_gen_atmfield_code+0x30c>
   19544:	ldr	r0, [pc, #548]	; 19770 <sf_gen_atmfield_code+0x370>
   19548:	ldr	r0, [pc, r0]
   1954c:	cmn	r0, #1
   19550:	beq	19708 <sf_gen_atmfield_code+0x308>
   19554:	add	r1, r0, #5
   19558:	mov	r0, #1
   1955c:	mov	r2, #16
   19560:	b	19590 <sf_gen_atmfield_code+0x190>
   19564:	ldr	r0, [pc, #484]	; 19750 <sf_gen_atmfield_code+0x350>
   19568:	add	r0, pc, r0
   1956c:	ldrb	r0, [r0]
   19570:	cmp	r0, #0
   19574:	beq	19730 <sf_gen_atmfield_code+0x330>
   19578:	ldr	r1, [pc, #468]	; 19754 <sf_gen_atmfield_code+0x354>
   1957c:	ldr	r1, [pc, r1]
   19580:	cmn	r1, #1
   19584:	beq	19708 <sf_gen_atmfield_code+0x308>
   19588:	mov	r0, #1
   1958c:	mov	r2, #8
   19590:	bl	17a3c <gen_load_a>
   19594:	mov	r7, r0
   19598:	ldr	r0, [pc, #420]	; 19744 <sf_gen_atmfield_code+0x344>
   1959c:	ldr	r0, [pc, r0]
   195a0:	ldr	r6, [pc, #416]	; 19748 <sf_gen_atmfield_code+0x348>
   195a4:	add	r6, pc, r6
   195a8:	ldr	r5, [r6, r0, lsl #3]!
   195ac:	cmp	r5, #207	; 0xcf
   195b0:	bhi	19604 <sf_gen_atmfield_code+0x204>
   195b4:	ldr	r2, [pc, #400]	; 1974c <sf_gen_atmfield_code+0x34c>
   195b8:	add	r1, r0, #1
   195bc:	cmp	r0, #15
   195c0:	add	r2, pc, r2
   195c4:	str	r1, [r2]
   195c8:	bge	1970c <sf_gen_atmfield_code+0x30c>
   195cc:	mov	r0, #1024	; 0x400
   195d0:	lsl	r5, r0, r1
   195d4:	mov	r0, r5
   195d8:	bl	ed4 <malloc@plt>
   195dc:	cmp	r0, #0
   195e0:	str	r0, [r6, #12]
   195e4:	beq	1970c <sf_gen_atmfield_code+0x30c>
   195e8:	mov	r1, #0
   195ec:	mov	r2, r5
   195f0:	add	r6, r6, #8
   195f4:	bl	f40 <memset@plt>
   195f8:	cmp	r5, #207	; 0xcf
   195fc:	str	r5, [r6]
   19600:	bls	1970c <sf_gen_atmfield_code+0x30c>
   19604:	sub	r0, r5, #208	; 0xd0
   19608:	orr	r1, r4, #5
   1960c:	str	r0, [r6]
   19610:	ldr	r2, [r6, #4]
   19614:	add	r0, r2, r0
   19618:	str	r7, [r0, #4]
   1961c:	cmp	r9, #0
   19620:	str	r1, [r0, #8]
   19624:	str	sl, [r0, #20]
   19628:	str	r0, [r0, #96]	; 0x60
   1962c:	beq	19648 <sf_gen_atmfield_code+0x248>
   19630:	orr	r1, r4, #16
   19634:	cmp	r1, #48	; 0x30
   19638:	ldreq	r1, [r0, #44]	; 0x2c
   1963c:	clzeq	r1, r1
   19640:	lsreq	r1, r1, #5
   19644:	streq	r1, [r0, #44]	; 0x2c
   19648:	sub	sp, fp, #28
   1964c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19650:	mov	r8, r0
   19654:	sub	r1, r7, #20
   19658:	mov	r2, #84	; 0x54
   1965c:	str	r1, [r5]
   19660:	ldr	r0, [r5, #4]
   19664:	str	r2, [r0, r1]!
   19668:	mov	r1, #15
   1966c:	mov	r2, r3
   19670:	str	r1, [r0, #12]
   19674:	mov	r1, r2
   19678:	ldr	r2, [r2, #16]
   1967c:	cmp	r2, #0
   19680:	bne	19674 <sf_gen_atmfield_code+0x274>
   19684:	str	r0, [r1, #16]
   19688:	ldr	r5, [r6, r8, lsl #3]!
   1968c:	cmp	r5, #207	; 0xcf
   19690:	bhi	196ec <sf_gen_atmfield_code+0x2ec>
   19694:	ldr	r1, [pc, #208]	; 1976c <sf_gen_atmfield_code+0x36c>
   19698:	add	r0, r8, #1
   1969c:	cmp	r8, #15
   196a0:	add	r1, pc, r1
   196a4:	str	r0, [r1]
   196a8:	bge	1970c <sf_gen_atmfield_code+0x30c>
   196ac:	mov	r1, #1024	; 0x400
   196b0:	mov	r7, r3
   196b4:	lsl	r5, r1, r0
   196b8:	mov	r0, r5
   196bc:	bl	ed4 <malloc@plt>
   196c0:	cmp	r0, #0
   196c4:	str	r0, [r6, #12]
   196c8:	beq	1970c <sf_gen_atmfield_code+0x30c>
   196cc:	mov	r1, #0
   196d0:	mov	r2, r5
   196d4:	add	r6, r6, #8
   196d8:	bl	f40 <memset@plt>
   196dc:	cmp	r5, #207	; 0xcf
   196e0:	mov	r3, r7
   196e4:	str	r5, [r6]
   196e8:	bls	1970c <sf_gen_atmfield_code+0x30c>
   196ec:	sub	r0, r5, #208	; 0xd0
   196f0:	orr	r1, r4, #5
   196f4:	str	r0, [r6]
   196f8:	ldr	r2, [r6, #4]
   196fc:	add	r0, r2, r0
   19700:	str	r3, [r0, #4]
   19704:	b	1961c <sf_gen_atmfield_code+0x21c>
   19708:	bl	fc4 <abort@plt>
   1970c:	ldr	r0, [pc, #68]	; 19758 <sf_gen_atmfield_code+0x358>
   19710:	add	r0, pc, r0
   19714:	bl	2124 <sf_bpf_error>
   19718:	ldr	r0, [pc, #92]	; 1977c <sf_gen_atmfield_code+0x37c>
   1971c:	add	r0, pc, r0
   19720:	bl	2124 <sf_bpf_error>
   19724:	ldr	r0, [pc, #88]	; 19784 <sf_gen_atmfield_code+0x384>
   19728:	add	r0, pc, r0
   1972c:	bl	2124 <sf_bpf_error>
   19730:	ldr	r0, [pc, #72]	; 19780 <sf_gen_atmfield_code+0x380>
   19734:	add	r0, pc, r0
   19738:	bl	2124 <sf_bpf_error>
   1973c:	.word	0x0002e00c
   19740:	.word	0x0002dffc
   19744:	.word	0x0002df60
   19748:	.word	0x0002ded8
   1974c:	.word	0x0002df3c
   19750:	.word	0x0002deec
   19754:	.word	0x0002dee0
   19758:	.word	0x000108f4
   1975c:	.word	0x0002dfbc
   19760:	.word	0x0002e030
   19764:	.word	0x0002dfa8
   19768:	.word	0x0002e004
   1976c:	.word	0x0002de5c
   19770:	.word	0x0002df1c
   19774:	.word	0x0002dfe4
   19778:	.word	0x0002dfdc
   1977c:	.word	0x00010585
   19780:	.word	0x0001058d
   19784:	.word	0x000105b9

00019788 <sf_gen_atmtype_abbrev>:
   19788:	push	{r4, r5, fp, lr}
   1978c:	add	fp, sp, #8
   19790:	sub	sp, sp, #8
   19794:	sub	r0, r0, #22
   19798:	cmp	r0, #9
   1979c:	bhi	19e7c <sf_gen_atmtype_abbrev+0x6f4>
   197a0:	add	r1, pc, #4
   197a4:	ldr	r0, [r1, r0, lsl #2]
   197a8:	add	pc, r1, r0
   197ac:	.word	0x00000028
   197b0:	.word	0x0000032c
   197b4:	.word	0x00000240
   197b8:	.word	0x00000114
   197bc:	.word	0x0000059c
   197c0:	.word	0x00000418
   197c4:	.word	0x000006d0
   197c8:	.word	0x000006d0
   197cc:	.word	0x00000504
   197d0:	.word	0x00000200
   197d4:	ldr	r0, [pc, #1796]	; 19ee0 <sf_gen_atmtype_abbrev+0x758>
   197d8:	add	r0, pc, r0
   197dc:	ldrb	r0, [r0]
   197e0:	cmp	r0, #0
   197e4:	beq	19e80 <sf_gen_atmtype_abbrev+0x6f8>
   197e8:	mov	r0, #51	; 0x33
   197ec:	mov	r1, #0
   197f0:	mov	r2, #16
   197f4:	mov	r3, #0
   197f8:	bl	19400 <sf_gen_atmfield_code>
   197fc:	mov	r5, r0
   19800:	mov	r0, #52	; 0x34
   19804:	mov	r1, #1
   19808:	mov	r2, #16
   1980c:	mov	r3, #0
   19810:	bl	19400 <sf_gen_atmfield_code>
   19814:	cmp	r5, #0
   19818:	beq	1984c <sf_gen_atmtype_abbrev+0xc4>
   1981c:	ldr	r1, [r0, #96]	; 0x60
   19820:	mov	r2, r5
   19824:	ldr	r3, [r2, #44]	; 0x2c
   19828:	add	r4, r2, #84	; 0x54
   1982c:	cmp	r3, #0
   19830:	mov	r3, #84	; 0x54
   19834:	movweq	r3, #60	; 0x3c
   19838:	addeq	r4, r2, #60	; 0x3c
   1983c:	ldr	r2, [r2, r3]
   19840:	str	r1, [r4]
   19844:	cmp	r2, #0
   19848:	bne	19824 <sf_gen_atmtype_abbrev+0x9c>
   1984c:	ldr	r1, [r5, #44]	; 0x2c
   19850:	cmp	r0, #0
   19854:	clz	r1, r1
   19858:	lsr	r1, r1, #5
   1985c:	str	r1, [r5, #44]	; 0x2c
   19860:	ldr	r2, [r0, #44]	; 0x2c
   19864:	clz	r1, r2
   19868:	lsr	r1, r1, #5
   1986c:	str	r1, [r0, #44]	; 0x2c
   19870:	str	r0, [sp, #4]
   19874:	beq	19e5c <sf_gen_atmtype_abbrev+0x6d4>
   19878:	cmp	r2, #0
   1987c:	mov	r2, #60	; 0x3c
   19880:	add	r1, r0, #60	; 0x3c
   19884:	movweq	r2, #84	; 0x54
   19888:	addeq	r1, r0, #84	; 0x54
   1988c:	ldr	r2, [r0, r2]
   19890:	cmp	r2, #0
   19894:	beq	19e60 <sf_gen_atmtype_abbrev+0x6d8>
   19898:	ldr	r3, [r2, #44]	; 0x2c
   1989c:	add	r1, r2, #84	; 0x54
   198a0:	cmp	r3, #0
   198a4:	mov	r3, #84	; 0x54
   198a8:	movweq	r3, #60	; 0x3c
   198ac:	addeq	r1, r2, #60	; 0x3c
   198b0:	ldr	r2, [r2, r3]
   198b4:	cmp	r2, #0
   198b8:	bne	19898 <sf_gen_atmtype_abbrev+0x110>
   198bc:	b	19e60 <sf_gen_atmtype_abbrev+0x6d8>
   198c0:	ldr	r0, [pc, #1572]	; 19eec <sf_gen_atmtype_abbrev+0x764>
   198c4:	add	r0, pc, r0
   198c8:	ldrb	r0, [r0]
   198cc:	cmp	r0, #0
   198d0:	beq	19e8c <sf_gen_atmtype_abbrev+0x704>
   198d4:	mov	r0, #51	; 0x33
   198d8:	mov	r1, #0
   198dc:	mov	r2, #16
   198e0:	mov	r3, #0
   198e4:	bl	19400 <sf_gen_atmfield_code>
   198e8:	mov	r4, r0
   198ec:	mov	r0, #52	; 0x34
   198f0:	mov	r1, #4
   198f4:	mov	r2, #16
   198f8:	mov	r3, #0
   198fc:	bl	19400 <sf_gen_atmfield_code>
   19900:	cmp	r4, #0
   19904:	beq	19938 <sf_gen_atmtype_abbrev+0x1b0>
   19908:	ldr	r1, [r0, #96]	; 0x60
   1990c:	mov	r2, r4
   19910:	ldr	r3, [r2, #44]	; 0x2c
   19914:	add	r5, r2, #84	; 0x54
   19918:	cmp	r3, #0
   1991c:	mov	r3, #84	; 0x54
   19920:	movweq	r3, #60	; 0x3c
   19924:	addeq	r5, r2, #60	; 0x3c
   19928:	ldr	r2, [r2, r3]
   1992c:	str	r1, [r5]
   19930:	cmp	r2, #0
   19934:	bne	19910 <sf_gen_atmtype_abbrev+0x188>
   19938:	ldr	r1, [r4, #44]	; 0x2c
   1993c:	cmp	r0, #0
   19940:	clz	r1, r1
   19944:	lsr	r1, r1, #5
   19948:	str	r1, [r4, #44]	; 0x2c
   1994c:	ldr	r2, [r0, #44]	; 0x2c
   19950:	clz	r1, r2
   19954:	lsr	r1, r1, #5
   19958:	str	r1, [r0, #44]	; 0x2c
   1995c:	str	r0, [sp, #4]
   19960:	beq	19e34 <sf_gen_atmtype_abbrev+0x6ac>
   19964:	cmp	r2, #0
   19968:	mov	r2, #60	; 0x3c
   1996c:	add	r1, r0, #60	; 0x3c
   19970:	movweq	r2, #84	; 0x54
   19974:	addeq	r1, r0, #84	; 0x54
   19978:	ldr	r2, [r0, r2]
   1997c:	cmp	r2, #0
   19980:	beq	19e38 <sf_gen_atmtype_abbrev+0x6b0>
   19984:	ldr	r3, [r2, #44]	; 0x2c
   19988:	add	r1, r2, #84	; 0x54
   1998c:	cmp	r3, #0
   19990:	mov	r3, #84	; 0x54
   19994:	movweq	r3, #60	; 0x3c
   19998:	addeq	r1, r2, #60	; 0x3c
   1999c:	ldr	r2, [r2, r3]
   199a0:	cmp	r2, #0
   199a4:	bne	19984 <sf_gen_atmtype_abbrev+0x1fc>
   199a8:	b	19e38 <sf_gen_atmtype_abbrev+0x6b0>
   199ac:	ldr	r0, [pc, #1380]	; 19f18 <sf_gen_atmtype_abbrev+0x790>
   199b0:	add	r0, pc, r0
   199b4:	ldrb	r0, [r0]
   199b8:	cmp	r0, #0
   199bc:	beq	19e98 <sf_gen_atmtype_abbrev+0x710>
   199c0:	mov	r0, #53	; 0x35
   199c4:	mov	r1, #2
   199c8:	mov	r2, #16
   199cc:	mov	r3, #0
   199d0:	mov	r4, #0
   199d4:	bl	19400 <sf_gen_atmfield_code>
   199d8:	ldr	r1, [pc, #1340]	; 19f1c <sf_gen_atmtype_abbrev+0x794>
   199dc:	add	r1, pc, r1
   199e0:	strb	r4, [r1]
   199e4:	sub	sp, fp, #8
   199e8:	pop	{r4, r5, fp, pc}
   199ec:	ldr	r0, [pc, #1268]	; 19ee8 <sf_gen_atmtype_abbrev+0x760>
   199f0:	add	r0, pc, r0
   199f4:	ldrb	r0, [r0]
   199f8:	cmp	r0, #0
   199fc:	beq	19ea4 <sf_gen_atmtype_abbrev+0x71c>
   19a00:	mov	r0, #51	; 0x33
   19a04:	mov	r1, #0
   19a08:	mov	r2, #16
   19a0c:	mov	r3, #0
   19a10:	bl	19400 <sf_gen_atmfield_code>
   19a14:	mov	r4, r0
   19a18:	mov	r0, #52	; 0x34
   19a1c:	mov	r1, #3
   19a20:	mov	r2, #16
   19a24:	mov	r3, #0
   19a28:	bl	19400 <sf_gen_atmfield_code>
   19a2c:	cmp	r4, #0
   19a30:	beq	19a64 <sf_gen_atmtype_abbrev+0x2dc>
   19a34:	ldr	r1, [r0, #96]	; 0x60
   19a38:	mov	r2, r4
   19a3c:	ldr	r3, [r2, #44]	; 0x2c
   19a40:	add	r5, r2, #84	; 0x54
   19a44:	cmp	r3, #0
   19a48:	mov	r3, #84	; 0x54
   19a4c:	movweq	r3, #60	; 0x3c
   19a50:	addeq	r5, r2, #60	; 0x3c
   19a54:	ldr	r2, [r2, r3]
   19a58:	str	r1, [r5]
   19a5c:	cmp	r2, #0
   19a60:	bne	19a3c <sf_gen_atmtype_abbrev+0x2b4>
   19a64:	ldr	r1, [r4, #44]	; 0x2c
   19a68:	cmp	r0, #0
   19a6c:	clz	r1, r1
   19a70:	lsr	r1, r1, #5
   19a74:	str	r1, [r4, #44]	; 0x2c
   19a78:	ldr	r2, [r0, #44]	; 0x2c
   19a7c:	clz	r1, r2
   19a80:	lsr	r1, r1, #5
   19a84:	str	r1, [r0, #44]	; 0x2c
   19a88:	str	r0, [sp, #4]
   19a8c:	beq	19e34 <sf_gen_atmtype_abbrev+0x6ac>
   19a90:	cmp	r2, #0
   19a94:	mov	r2, #60	; 0x3c
   19a98:	add	r1, r0, #60	; 0x3c
   19a9c:	movweq	r2, #84	; 0x54
   19aa0:	addeq	r1, r0, #84	; 0x54
   19aa4:	ldr	r2, [r0, r2]
   19aa8:	cmp	r2, #0
   19aac:	beq	19e38 <sf_gen_atmtype_abbrev+0x6b0>
   19ab0:	ldr	r3, [r2, #44]	; 0x2c
   19ab4:	add	r1, r2, #84	; 0x54
   19ab8:	cmp	r3, #0
   19abc:	mov	r3, #84	; 0x54
   19ac0:	movweq	r3, #60	; 0x3c
   19ac4:	addeq	r1, r2, #60	; 0x3c
   19ac8:	ldr	r2, [r2, r3]
   19acc:	cmp	r2, #0
   19ad0:	bne	19ab0 <sf_gen_atmtype_abbrev+0x328>
   19ad4:	b	19e38 <sf_gen_atmtype_abbrev+0x6b0>
   19ad8:	ldr	r0, [pc, #1028]	; 19ee4 <sf_gen_atmtype_abbrev+0x75c>
   19adc:	add	r0, pc, r0
   19ae0:	ldrb	r0, [r0]
   19ae4:	cmp	r0, #0
   19ae8:	beq	19eb0 <sf_gen_atmtype_abbrev+0x728>
   19aec:	mov	r0, #51	; 0x33
   19af0:	mov	r1, #0
   19af4:	mov	r2, #16
   19af8:	mov	r3, #0
   19afc:	bl	19400 <sf_gen_atmfield_code>
   19b00:	mov	r4, r0
   19b04:	mov	r0, #52	; 0x34
   19b08:	mov	r1, #2
   19b0c:	mov	r2, #16
   19b10:	mov	r3, #0
   19b14:	bl	19400 <sf_gen_atmfield_code>
   19b18:	cmp	r4, #0
   19b1c:	beq	19b50 <sf_gen_atmtype_abbrev+0x3c8>
   19b20:	ldr	r1, [r0, #96]	; 0x60
   19b24:	mov	r2, r4
   19b28:	ldr	r3, [r2, #44]	; 0x2c
   19b2c:	add	r5, r2, #84	; 0x54
   19b30:	cmp	r3, #0
   19b34:	mov	r3, #84	; 0x54
   19b38:	movweq	r3, #60	; 0x3c
   19b3c:	addeq	r5, r2, #60	; 0x3c
   19b40:	ldr	r2, [r2, r3]
   19b44:	str	r1, [r5]
   19b48:	cmp	r2, #0
   19b4c:	bne	19b28 <sf_gen_atmtype_abbrev+0x3a0>
   19b50:	ldr	r1, [r4, #44]	; 0x2c
   19b54:	cmp	r0, #0
   19b58:	clz	r1, r1
   19b5c:	lsr	r1, r1, #5
   19b60:	str	r1, [r4, #44]	; 0x2c
   19b64:	ldr	r2, [r0, #44]	; 0x2c
   19b68:	clz	r1, r2
   19b6c:	lsr	r1, r1, #5
   19b70:	str	r1, [r0, #44]	; 0x2c
   19b74:	str	r0, [sp, #4]
   19b78:	beq	19e34 <sf_gen_atmtype_abbrev+0x6ac>
   19b7c:	cmp	r2, #0
   19b80:	mov	r2, #60	; 0x3c
   19b84:	add	r1, r0, #60	; 0x3c
   19b88:	movweq	r2, #84	; 0x54
   19b8c:	addeq	r1, r0, #84	; 0x54
   19b90:	ldr	r2, [r0, r2]
   19b94:	cmp	r2, #0
   19b98:	beq	19e38 <sf_gen_atmtype_abbrev+0x6b0>
   19b9c:	ldr	r3, [r2, #44]	; 0x2c
   19ba0:	add	r1, r2, #84	; 0x54
   19ba4:	cmp	r3, #0
   19ba8:	mov	r3, #84	; 0x54
   19bac:	movweq	r3, #60	; 0x3c
   19bb0:	addeq	r1, r2, #60	; 0x3c
   19bb4:	ldr	r2, [r2, r3]
   19bb8:	cmp	r2, #0
   19bbc:	bne	19b9c <sf_gen_atmtype_abbrev+0x414>
   19bc0:	b	19e38 <sf_gen_atmtype_abbrev+0x6b0>
   19bc4:	ldr	r0, [pc, #808]	; 19ef4 <sf_gen_atmtype_abbrev+0x76c>
   19bc8:	add	r0, pc, r0
   19bcc:	ldrb	r0, [r0]
   19bd0:	cmp	r0, #0
   19bd4:	beq	19ebc <sf_gen_atmtype_abbrev+0x734>
   19bd8:	mov	r0, #51	; 0x33
   19bdc:	mov	r1, #0
   19be0:	mov	r2, #16
   19be4:	mov	r3, #0
   19be8:	bl	19400 <sf_gen_atmfield_code>
   19bec:	mov	r4, r0
   19bf0:	mov	r0, #52	; 0x34
   19bf4:	mov	r1, #16
   19bf8:	mov	r2, #16
   19bfc:	mov	r3, #0
   19c00:	bl	19400 <sf_gen_atmfield_code>
   19c04:	cmp	r4, #0
   19c08:	beq	19c3c <sf_gen_atmtype_abbrev+0x4b4>
   19c0c:	ldr	r1, [r0, #96]	; 0x60
   19c10:	mov	r2, r4
   19c14:	ldr	r3, [r2, #44]	; 0x2c
   19c18:	add	r5, r2, #84	; 0x54
   19c1c:	cmp	r3, #0
   19c20:	mov	r3, #84	; 0x54
   19c24:	movweq	r3, #60	; 0x3c
   19c28:	addeq	r5, r2, #60	; 0x3c
   19c2c:	ldr	r2, [r2, r3]
   19c30:	str	r1, [r5]
   19c34:	cmp	r2, #0
   19c38:	bne	19c14 <sf_gen_atmtype_abbrev+0x48c>
   19c3c:	ldr	r1, [r4, #44]	; 0x2c
   19c40:	cmp	r0, #0
   19c44:	clz	r1, r1
   19c48:	lsr	r1, r1, #5
   19c4c:	str	r1, [r4, #44]	; 0x2c
   19c50:	ldr	r2, [r0, #44]	; 0x2c
   19c54:	clz	r1, r2
   19c58:	lsr	r1, r1, #5
   19c5c:	str	r1, [r0, #44]	; 0x2c
   19c60:	str	r0, [sp, #4]
   19c64:	beq	19e34 <sf_gen_atmtype_abbrev+0x6ac>
   19c68:	cmp	r2, #0
   19c6c:	mov	r2, #60	; 0x3c
   19c70:	add	r1, r0, #60	; 0x3c
   19c74:	movweq	r2, #84	; 0x54
   19c78:	addeq	r1, r0, #84	; 0x54
   19c7c:	ldr	r2, [r0, r2]
   19c80:	cmp	r2, #0
   19c84:	beq	19e38 <sf_gen_atmtype_abbrev+0x6b0>
   19c88:	ldr	r3, [r2, #44]	; 0x2c
   19c8c:	add	r1, r2, #84	; 0x54
   19c90:	cmp	r3, #0
   19c94:	mov	r3, #84	; 0x54
   19c98:	movweq	r3, #60	; 0x3c
   19c9c:	addeq	r1, r2, #60	; 0x3c
   19ca0:	ldr	r2, [r2, r3]
   19ca4:	cmp	r2, #0
   19ca8:	bne	19c88 <sf_gen_atmtype_abbrev+0x500>
   19cac:	b	19e38 <sf_gen_atmtype_abbrev+0x6b0>
   19cb0:	ldr	r0, [pc, #576]	; 19ef8 <sf_gen_atmtype_abbrev+0x770>
   19cb4:	add	r0, pc, r0
   19cb8:	ldrb	r0, [r0]
   19cbc:	cmp	r0, #0
   19cc0:	beq	19ec8 <sf_gen_atmtype_abbrev+0x740>
   19cc4:	mov	r0, #53	; 0x35
   19cc8:	mov	r1, #1
   19ccc:	mov	r2, #16
   19cd0:	mov	r3, #0
   19cd4:	mov	r4, #1
   19cd8:	mov	r5, #0
   19cdc:	bl	19400 <sf_gen_atmfield_code>
   19ce0:	ldr	r1, [pc, #532]	; 19efc <sf_gen_atmtype_abbrev+0x774>
   19ce4:	mov	r2, #3
   19ce8:	add	r1, pc, r1
   19cec:	strb	r4, [r1]
   19cf0:	ldr	r1, [pc, #520]	; 19f00 <sf_gen_atmtype_abbrev+0x778>
   19cf4:	add	r1, pc, r1
   19cf8:	str	r5, [r1]
   19cfc:	ldr	r1, [pc, #512]	; 19f04 <sf_gen_atmtype_abbrev+0x77c>
   19d00:	add	r1, pc, r1
   19d04:	str	r2, [r1]
   19d08:	ldr	r1, [pc, #504]	; 19f08 <sf_gen_atmtype_abbrev+0x780>
   19d0c:	ldr	r1, [pc, r1]
   19d10:	ldr	r3, [pc, #500]	; 19f0c <sf_gen_atmtype_abbrev+0x784>
   19d14:	add	r2, r1, #2
   19d18:	add	r3, pc, r3
   19d1c:	str	r2, [r3]
   19d20:	add	r2, r1, #14
   19d24:	add	r1, r1, #16
   19d28:	ldr	r3, [pc, #480]	; 19f10 <sf_gen_atmtype_abbrev+0x788>
   19d2c:	add	r3, pc, r3
   19d30:	str	r2, [r3]
   19d34:	ldr	r2, [pc, #472]	; 19f14 <sf_gen_atmtype_abbrev+0x78c>
   19d38:	add	r2, pc, r2
   19d3c:	str	r1, [r2]
   19d40:	sub	sp, fp, #8
   19d44:	pop	{r4, r5, fp, pc}
   19d48:	ldr	r0, [pc, #416]	; 19ef0 <sf_gen_atmtype_abbrev+0x768>
   19d4c:	add	r0, pc, r0
   19d50:	ldrb	r0, [r0]
   19d54:	cmp	r0, #0
   19d58:	beq	19ed4 <sf_gen_atmtype_abbrev+0x74c>
   19d5c:	mov	r0, #51	; 0x33
   19d60:	mov	r1, #0
   19d64:	mov	r2, #16
   19d68:	mov	r3, #0
   19d6c:	bl	19400 <sf_gen_atmfield_code>
   19d70:	mov	r4, r0
   19d74:	mov	r0, #52	; 0x34
   19d78:	mov	r1, #5
   19d7c:	mov	r2, #16
   19d80:	mov	r3, #0
   19d84:	bl	19400 <sf_gen_atmfield_code>
   19d88:	cmp	r4, #0
   19d8c:	beq	19dc0 <sf_gen_atmtype_abbrev+0x638>
   19d90:	ldr	r1, [r0, #96]	; 0x60
   19d94:	mov	r2, r4
   19d98:	ldr	r3, [r2, #44]	; 0x2c
   19d9c:	add	r5, r2, #84	; 0x54
   19da0:	cmp	r3, #0
   19da4:	mov	r3, #84	; 0x54
   19da8:	movweq	r3, #60	; 0x3c
   19dac:	addeq	r5, r2, #60	; 0x3c
   19db0:	ldr	r2, [r2, r3]
   19db4:	str	r1, [r5]
   19db8:	cmp	r2, #0
   19dbc:	bne	19d98 <sf_gen_atmtype_abbrev+0x610>
   19dc0:	ldr	r1, [r4, #44]	; 0x2c
   19dc4:	cmp	r0, #0
   19dc8:	clz	r1, r1
   19dcc:	lsr	r1, r1, #5
   19dd0:	str	r1, [r4, #44]	; 0x2c
   19dd4:	ldr	r2, [r0, #44]	; 0x2c
   19dd8:	clz	r1, r2
   19ddc:	lsr	r1, r1, #5
   19de0:	str	r1, [r0, #44]	; 0x2c
   19de4:	str	r0, [sp, #4]
   19de8:	beq	19e34 <sf_gen_atmtype_abbrev+0x6ac>
   19dec:	cmp	r2, #0
   19df0:	mov	r2, #60	; 0x3c
   19df4:	add	r1, r0, #60	; 0x3c
   19df8:	movweq	r2, #84	; 0x54
   19dfc:	addeq	r1, r0, #84	; 0x54
   19e00:	ldr	r2, [r0, r2]
   19e04:	cmp	r2, #0
   19e08:	beq	19e38 <sf_gen_atmtype_abbrev+0x6b0>
   19e0c:	ldr	r3, [r2, #44]	; 0x2c
   19e10:	add	r1, r2, #84	; 0x54
   19e14:	cmp	r3, #0
   19e18:	mov	r3, #84	; 0x54
   19e1c:	movweq	r3, #60	; 0x3c
   19e20:	addeq	r1, r2, #60	; 0x3c
   19e24:	ldr	r2, [r2, r3]
   19e28:	cmp	r2, #0
   19e2c:	bne	19e0c <sf_gen_atmtype_abbrev+0x684>
   19e30:	b	19e38 <sf_gen_atmtype_abbrev+0x6b0>
   19e34:	add	r1, sp, #4
   19e38:	str	r4, [r1]
   19e3c:	ldr	r1, [r0, #44]	; 0x2c
   19e40:	clz	r1, r1
   19e44:	lsr	r1, r1, #5
   19e48:	str	r1, [r0, #44]	; 0x2c
   19e4c:	ldr	r1, [r4, #96]	; 0x60
   19e50:	str	r1, [r0, #96]	; 0x60
   19e54:	sub	sp, fp, #8
   19e58:	pop	{r4, r5, fp, pc}
   19e5c:	add	r1, sp, #4
   19e60:	str	r5, [r1]
   19e64:	ldr	r1, [r0, #44]	; 0x2c
   19e68:	clz	r1, r1
   19e6c:	lsr	r1, r1, #5
   19e70:	str	r1, [r0, #44]	; 0x2c
   19e74:	ldr	r1, [r5, #96]	; 0x60
   19e78:	b	19e50 <sf_gen_atmtype_abbrev+0x6c8>
   19e7c:	bl	fc4 <abort@plt>
   19e80:	ldr	r0, [pc, #152]	; 19f20 <sf_gen_atmtype_abbrev+0x798>
   19e84:	add	r0, pc, r0
   19e88:	bl	2124 <sf_bpf_error>
   19e8c:	ldr	r0, [pc, #152]	; 19f2c <sf_gen_atmtype_abbrev+0x7a4>
   19e90:	add	r0, pc, r0
   19e94:	bl	2124 <sf_bpf_error>
   19e98:	ldr	r0, [pc, #156]	; 19f3c <sf_gen_atmtype_abbrev+0x7b4>
   19e9c:	add	r0, pc, r0
   19ea0:	bl	2124 <sf_bpf_error>
   19ea4:	ldr	r0, [pc, #124]	; 19f28 <sf_gen_atmtype_abbrev+0x7a0>
   19ea8:	add	r0, pc, r0
   19eac:	bl	2124 <sf_bpf_error>
   19eb0:	ldr	r0, [pc, #108]	; 19f24 <sf_gen_atmtype_abbrev+0x79c>
   19eb4:	add	r0, pc, r0
   19eb8:	bl	2124 <sf_bpf_error>
   19ebc:	ldr	r0, [pc, #112]	; 19f34 <sf_gen_atmtype_abbrev+0x7ac>
   19ec0:	add	r0, pc, r0
   19ec4:	bl	2124 <sf_bpf_error>
   19ec8:	ldr	r0, [pc, #104]	; 19f38 <sf_gen_atmtype_abbrev+0x7b0>
   19ecc:	add	r0, pc, r0
   19ed0:	bl	2124 <sf_bpf_error>
   19ed4:	ldr	r0, [pc, #84]	; 19f30 <sf_gen_atmtype_abbrev+0x7a8>
   19ed8:	add	r0, pc, r0
   19edc:	bl	2124 <sf_bpf_error>
   19ee0:	.word	0x0002dc7c
   19ee4:	.word	0x0002d978
   19ee8:	.word	0x0002da64
   19eec:	.word	0x0002db90
   19ef0:	.word	0x0002d708
   19ef4:	.word	0x0002d88c
   19ef8:	.word	0x0002d7a0
   19efc:	.word	0x0002d74c
   19f00:	.word	0x0002d74c
   19f04:	.word	0x0002d74c
   19f08:	.word	0x0002d758
   19f0c:	.word	0x0002d730
   19f10:	.word	0x0002d70c
   19f14:	.word	0x0002d704
   19f18:	.word	0x0002daa4
   19f1c:	.word	0x0002da58
   19f20:	.word	0x0000fe81
   19f24:	.word	0x0000fe73
   19f28:	.word	0x0000fe9f
   19f2c:	.word	0x0000feda
   19f30:	.word	0x0000feb5
   19f34:	.word	0x0000feec
   19f38:	.word	0x0000ff02
   19f3c:	.word	0x0000ff53

00019f40 <sf_gen_mtp2type_abbrev>:
   19f40:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   19f44:	add	fp, sp, #28
   19f48:	sub	sp, sp, #12
   19f4c:	cmp	r0, #24
   19f50:	beq	1a09c <sf_gen_mtp2type_abbrev+0x15c>
   19f54:	cmp	r0, #23
   19f58:	beq	1a000 <sf_gen_mtp2type_abbrev+0xc0>
   19f5c:	cmp	r0, #22
   19f60:	bne	1a794 <sf_gen_mtp2type_abbrev+0x854>
   19f64:	ldr	r0, [pc, #2128]	; 1a7bc <sf_gen_mtp2type_abbrev+0x87c>
   19f68:	ldr	r0, [pc, r0]
   19f6c:	sub	r1, r0, #139	; 0x8b
   19f70:	cmp	r1, #2
   19f74:	bcc	19f80 <sf_gen_mtp2type_abbrev+0x40>
   19f78:	cmp	r0, #197	; 0xc5
   19f7c:	bne	1a798 <sf_gen_mtp2type_abbrev+0x858>
   19f80:	ldr	r0, [pc, #2104]	; 1a7c0 <sf_gen_mtp2type_abbrev+0x880>
   19f84:	ldr	r0, [pc, r0]
   19f88:	ldr	sl, [pc, #2100]	; 1a7c4 <sf_gen_mtp2type_abbrev+0x884>
   19f8c:	add	sl, pc, sl
   19f90:	mov	r7, sl
   19f94:	ldr	r4, [r7, r0, lsl #3]!
   19f98:	ldr	r9, [pc, #2088]	; 1a7c8 <sf_gen_mtp2type_abbrev+0x888>
   19f9c:	ldr	r9, [pc, r9]
   19fa0:	cmp	r4, #19
   19fa4:	bhi	1a138 <sf_gen_mtp2type_abbrev+0x1f8>
   19fa8:	ldr	r1, [pc, #2076]	; 1a7cc <sf_gen_mtp2type_abbrev+0x88c>
   19fac:	add	r6, r0, #1
   19fb0:	cmp	r0, #15
   19fb4:	add	r1, pc, r1
   19fb8:	str	r6, [r1]
   19fbc:	bge	1a788 <sf_gen_mtp2type_abbrev+0x848>
   19fc0:	mov	r0, #1024	; 0x400
   19fc4:	lsl	r4, r0, r6
   19fc8:	mov	r0, r4
   19fcc:	bl	ed4 <malloc@plt>
   19fd0:	cmp	r0, #0
   19fd4:	str	r0, [r7, #12]
   19fd8:	beq	1a788 <sf_gen_mtp2type_abbrev+0x848>
   19fdc:	mov	r1, #0
   19fe0:	mov	r2, r4
   19fe4:	add	r5, r7, #8
   19fe8:	bl	f40 <memset@plt>
   19fec:	cmp	r4, #20
   19ff0:	str	r4, [r5]
   19ff4:	bcc	1a788 <sf_gen_mtp2type_abbrev+0x848>
   19ff8:	add	r7, sl, r6, lsl #3
   19ffc:	b	1a140 <sf_gen_mtp2type_abbrev+0x200>
   1a000:	ldr	r0, [pc, #2000]	; 1a7d8 <sf_gen_mtp2type_abbrev+0x898>
   1a004:	ldr	r0, [pc, r0]
   1a008:	sub	r1, r0, #139	; 0x8b
   1a00c:	cmp	r1, #2
   1a010:	bcc	1a01c <sf_gen_mtp2type_abbrev+0xdc>
   1a014:	cmp	r0, #197	; 0xc5
   1a018:	bne	1a7a4 <sf_gen_mtp2type_abbrev+0x864>
   1a01c:	ldr	r0, [pc, #1976]	; 1a7dc <sf_gen_mtp2type_abbrev+0x89c>
   1a020:	ldr	r0, [pc, r0]
   1a024:	ldr	r9, [pc, #1972]	; 1a7e0 <sf_gen_mtp2type_abbrev+0x8a0>
   1a028:	add	r9, pc, r9
   1a02c:	mov	r6, r9
   1a030:	ldr	r4, [r6, r0, lsl #3]!
   1a034:	ldr	r8, [pc, #1960]	; 1a7e4 <sf_gen_mtp2type_abbrev+0x8a4>
   1a038:	ldr	r8, [pc, r8]
   1a03c:	cmp	r4, #19
   1a040:	bhi	1a1b8 <sf_gen_mtp2type_abbrev+0x278>
   1a044:	ldr	r1, [pc, #1948]	; 1a7e8 <sf_gen_mtp2type_abbrev+0x8a8>
   1a048:	add	r7, r0, #1
   1a04c:	cmp	r0, #15
   1a050:	add	r1, pc, r1
   1a054:	str	r7, [r1]
   1a058:	bge	1a788 <sf_gen_mtp2type_abbrev+0x848>
   1a05c:	mov	r0, #1024	; 0x400
   1a060:	lsl	r4, r0, r7
   1a064:	mov	r0, r4
   1a068:	bl	ed4 <malloc@plt>
   1a06c:	cmp	r0, #0
   1a070:	str	r0, [r6, #12]
   1a074:	beq	1a788 <sf_gen_mtp2type_abbrev+0x848>
   1a078:	mov	r1, #0
   1a07c:	mov	r2, r4
   1a080:	add	r5, r6, #8
   1a084:	bl	f40 <memset@plt>
   1a088:	cmp	r4, #20
   1a08c:	str	r4, [r5]
   1a090:	bcc	1a788 <sf_gen_mtp2type_abbrev+0x848>
   1a094:	add	r6, r9, r7, lsl #3
   1a098:	b	1a1c0 <sf_gen_mtp2type_abbrev+0x280>
   1a09c:	ldr	r0, [pc, #1884]	; 1a800 <sf_gen_mtp2type_abbrev+0x8c0>
   1a0a0:	ldr	r0, [pc, r0]
   1a0a4:	sub	r1, r0, #139	; 0x8b
   1a0a8:	cmp	r1, #2
   1a0ac:	bcc	1a0b8 <sf_gen_mtp2type_abbrev+0x178>
   1a0b0:	cmp	r0, #197	; 0xc5
   1a0b4:	bne	1a7b0 <sf_gen_mtp2type_abbrev+0x870>
   1a0b8:	ldr	r0, [pc, #1860]	; 1a804 <sf_gen_mtp2type_abbrev+0x8c4>
   1a0bc:	ldr	r0, [pc, r0]
   1a0c0:	ldr	sl, [pc, #1856]	; 1a808 <sf_gen_mtp2type_abbrev+0x8c8>
   1a0c4:	add	sl, pc, sl
   1a0c8:	mov	r7, sl
   1a0cc:	ldr	r4, [r7, r0, lsl #3]!
   1a0d0:	ldr	r9, [pc, #1844]	; 1a80c <sf_gen_mtp2type_abbrev+0x8cc>
   1a0d4:	ldr	r9, [pc, r9]
   1a0d8:	cmp	r4, #19
   1a0dc:	bhi	1a2f0 <sf_gen_mtp2type_abbrev+0x3b0>
   1a0e0:	ldr	r1, [pc, #1832]	; 1a810 <sf_gen_mtp2type_abbrev+0x8d0>
   1a0e4:	add	r6, r0, #1
   1a0e8:	cmp	r0, #15
   1a0ec:	add	r1, pc, r1
   1a0f0:	str	r6, [r1]
   1a0f4:	bge	1a788 <sf_gen_mtp2type_abbrev+0x848>
   1a0f8:	mov	r0, #1024	; 0x400
   1a0fc:	lsl	r4, r0, r6
   1a100:	mov	r0, r4
   1a104:	bl	ed4 <malloc@plt>
   1a108:	cmp	r0, #0
   1a10c:	str	r0, [r7, #12]
   1a110:	beq	1a788 <sf_gen_mtp2type_abbrev+0x848>
   1a114:	mov	r1, #0
   1a118:	mov	r2, r4
   1a11c:	add	r5, r7, #8
   1a120:	bl	f40 <memset@plt>
   1a124:	cmp	r4, #20
   1a128:	str	r4, [r5]
   1a12c:	bcc	1a788 <sf_gen_mtp2type_abbrev+0x848>
   1a130:	add	r7, sl, r6, lsl #3
   1a134:	b	1a2f8 <sf_gen_mtp2type_abbrev+0x3b8>
   1a138:	mov	r6, r0
   1a13c:	mov	r5, r7
   1a140:	sub	r0, r4, #20
   1a144:	mov	r1, #48	; 0x30
   1a148:	str	r0, [r5]
   1a14c:	ldr	r8, [r5, #4]
   1a150:	str	r1, [r8, r0]!
   1a154:	str	r9, [r8, #12]
   1a158:	ldr	r4, [sl, r6, lsl #3]
   1a15c:	cmp	r4, #19
   1a160:	bhi	1a238 <sf_gen_mtp2type_abbrev+0x2f8>
   1a164:	ldr	r0, [pc, #1636]	; 1a7d0 <sf_gen_mtp2type_abbrev+0x890>
   1a168:	add	r9, r6, #1
   1a16c:	cmp	r6, #15
   1a170:	add	r0, pc, r0
   1a174:	str	r9, [r0]
   1a178:	bge	1a788 <sf_gen_mtp2type_abbrev+0x848>
   1a17c:	mov	r0, #1024	; 0x400
   1a180:	lsl	r4, r0, r9
   1a184:	mov	r0, r4
   1a188:	bl	ed4 <malloc@plt>
   1a18c:	cmp	r0, #0
   1a190:	str	r0, [r7, #12]
   1a194:	beq	1a788 <sf_gen_mtp2type_abbrev+0x848>
   1a198:	mov	r1, #0
   1a19c:	mov	r2, r4
   1a1a0:	add	r7, r7, #8
   1a1a4:	bl	f40 <memset@plt>
   1a1a8:	cmp	r4, #19
   1a1ac:	str	r4, [r7]
   1a1b0:	bhi	1a23c <sf_gen_mtp2type_abbrev+0x2fc>
   1a1b4:	b	1a788 <sf_gen_mtp2type_abbrev+0x848>
   1a1b8:	mov	r7, r0
   1a1bc:	mov	r5, r6
   1a1c0:	sub	r0, r4, #20
   1a1c4:	mov	r1, #48	; 0x30
   1a1c8:	str	r0, [r5]
   1a1cc:	ldr	sl, [r5, #4]
   1a1d0:	str	r1, [sl, r0]!
   1a1d4:	str	r8, [sl, #12]
   1a1d8:	ldr	r4, [r9, r7, lsl #3]
   1a1dc:	cmp	r4, #19
   1a1e0:	bhi	1a370 <sf_gen_mtp2type_abbrev+0x430>
   1a1e4:	ldr	r0, [pc, #1536]	; 1a7ec <sf_gen_mtp2type_abbrev+0x8ac>
   1a1e8:	add	r5, r7, #1
   1a1ec:	cmp	r7, #15
   1a1f0:	add	r0, pc, r0
   1a1f4:	str	r5, [r0]
   1a1f8:	bge	1a788 <sf_gen_mtp2type_abbrev+0x848>
   1a1fc:	mov	r0, #1024	; 0x400
   1a200:	lsl	r4, r0, r5
   1a204:	mov	r0, r4
   1a208:	bl	ed4 <malloc@plt>
   1a20c:	cmp	r0, #0
   1a210:	str	r0, [r6, #12]
   1a214:	beq	1a788 <sf_gen_mtp2type_abbrev+0x848>
   1a218:	mov	r1, #0
   1a21c:	mov	r2, r4
   1a220:	add	r6, r6, #8
   1a224:	bl	f40 <memset@plt>
   1a228:	cmp	r4, #19
   1a22c:	str	r4, [r6]
   1a230:	bhi	1a374 <sf_gen_mtp2type_abbrev+0x434>
   1a234:	b	1a788 <sf_gen_mtp2type_abbrev+0x848>
   1a238:	mov	r9, r6
   1a23c:	sub	r1, r4, #20
   1a240:	mov	r2, #84	; 0x54
   1a244:	str	r1, [r7]
   1a248:	ldr	r0, [r7, #4]
   1a24c:	str	r2, [r0, r1]!
   1a250:	mov	r1, #63	; 0x3f
   1a254:	mov	r2, r8
   1a258:	str	r1, [r0, #12]
   1a25c:	mov	r1, r2
   1a260:	ldr	r2, [r2, #16]
   1a264:	cmp	r2, #0
   1a268:	bne	1a25c <sf_gen_mtp2type_abbrev+0x31c>
   1a26c:	str	r0, [r1, #16]
   1a270:	ldr	r4, [sl, r9, lsl #3]!
   1a274:	cmp	r4, #207	; 0xcf
   1a278:	bhi	1a2cc <sf_gen_mtp2type_abbrev+0x38c>
   1a27c:	ldr	r1, [pc, #1360]	; 1a7d4 <sf_gen_mtp2type_abbrev+0x894>
   1a280:	add	r0, r9, #1
   1a284:	cmp	r9, #15
   1a288:	add	r1, pc, r1
   1a28c:	str	r0, [r1]
   1a290:	bge	1a788 <sf_gen_mtp2type_abbrev+0x848>
   1a294:	mov	r1, #1024	; 0x400
   1a298:	lsl	r4, r1, r0
   1a29c:	mov	r0, r4
   1a2a0:	bl	ed4 <malloc@plt>
   1a2a4:	cmp	r0, #0
   1a2a8:	str	r0, [sl, #12]
   1a2ac:	beq	1a788 <sf_gen_mtp2type_abbrev+0x848>
   1a2b0:	mov	r1, #0
   1a2b4:	mov	r2, r4
   1a2b8:	add	sl, sl, #8
   1a2bc:	bl	f40 <memset@plt>
   1a2c0:	cmp	r4, #207	; 0xcf
   1a2c4:	str	r4, [sl]
   1a2c8:	bls	1a788 <sf_gen_mtp2type_abbrev+0x848>
   1a2cc:	sub	r0, r4, #208	; 0xd0
   1a2d0:	str	r0, [sl]
   1a2d4:	ldr	r1, [sl, #4]
   1a2d8:	add	r4, r1, r0
   1a2dc:	mov	r0, #21
   1a2e0:	str	r8, [r4, #4]
   1a2e4:	str	r0, [r4, #8]
   1a2e8:	mov	r0, #0
   1a2ec:	b	1a4c4 <sf_gen_mtp2type_abbrev+0x584>
   1a2f0:	mov	r6, r0
   1a2f4:	mov	r5, r7
   1a2f8:	sub	r0, r4, #20
   1a2fc:	mov	r1, #48	; 0x30
   1a300:	str	r0, [r5]
   1a304:	ldr	r8, [r5, #4]
   1a308:	str	r1, [r8, r0]!
   1a30c:	str	r9, [r8, #12]
   1a310:	ldr	r4, [sl, r6, lsl #3]
   1a314:	cmp	r4, #19
   1a318:	bhi	1a410 <sf_gen_mtp2type_abbrev+0x4d0>
   1a31c:	ldr	r0, [pc, #1264]	; 1a814 <sf_gen_mtp2type_abbrev+0x8d4>
   1a320:	add	r9, r6, #1
   1a324:	cmp	r6, #15
   1a328:	add	r0, pc, r0
   1a32c:	str	r9, [r0]
   1a330:	bge	1a788 <sf_gen_mtp2type_abbrev+0x848>
   1a334:	mov	r0, #1024	; 0x400
   1a338:	lsl	r4, r0, r9
   1a33c:	mov	r0, r4
   1a340:	bl	ed4 <malloc@plt>
   1a344:	cmp	r0, #0
   1a348:	str	r0, [r7, #12]
   1a34c:	beq	1a788 <sf_gen_mtp2type_abbrev+0x848>
   1a350:	mov	r1, #0
   1a354:	mov	r2, r4
   1a358:	add	r7, r7, #8
   1a35c:	bl	f40 <memset@plt>
   1a360:	cmp	r4, #19
   1a364:	str	r4, [r7]
   1a368:	bhi	1a414 <sf_gen_mtp2type_abbrev+0x4d4>
   1a36c:	b	1a788 <sf_gen_mtp2type_abbrev+0x848>
   1a370:	mov	r5, r7
   1a374:	sub	r1, r4, #20
   1a378:	mov	r2, #84	; 0x54
   1a37c:	str	r1, [r6]
   1a380:	ldr	r0, [r6, #4]
   1a384:	str	r2, [r0, r1]!
   1a388:	mov	r1, #63	; 0x3f
   1a38c:	mov	r2, sl
   1a390:	str	r1, [r0, #12]
   1a394:	mov	r1, r2
   1a398:	ldr	r2, [r2, #16]
   1a39c:	cmp	r2, #0
   1a3a0:	bne	1a394 <sf_gen_mtp2type_abbrev+0x454>
   1a3a4:	str	r0, [r1, #16]
   1a3a8:	mov	r6, r9
   1a3ac:	ldr	r4, [r6, r5, lsl #3]!
   1a3b0:	cmp	r4, #207	; 0xcf
   1a3b4:	bhi	1a4d0 <sf_gen_mtp2type_abbrev+0x590>
   1a3b8:	ldr	r0, [pc, #1072]	; 1a7f0 <sf_gen_mtp2type_abbrev+0x8b0>
   1a3bc:	add	r7, r5, #1
   1a3c0:	cmp	r5, #15
   1a3c4:	add	r0, pc, r0
   1a3c8:	str	r7, [r0]
   1a3cc:	bge	1a788 <sf_gen_mtp2type_abbrev+0x848>
   1a3d0:	mov	r0, #1024	; 0x400
   1a3d4:	lsl	r4, r0, r7
   1a3d8:	mov	r0, r4
   1a3dc:	bl	ed4 <malloc@plt>
   1a3e0:	cmp	r0, #0
   1a3e4:	str	r0, [r6, #12]
   1a3e8:	beq	1a788 <sf_gen_mtp2type_abbrev+0x848>
   1a3ec:	mov	r1, #0
   1a3f0:	mov	r2, r4
   1a3f4:	add	r5, r6, #8
   1a3f8:	bl	f40 <memset@plt>
   1a3fc:	cmp	r4, #208	; 0xd0
   1a400:	str	r4, [r5]
   1a404:	bcc	1a788 <sf_gen_mtp2type_abbrev+0x848>
   1a408:	add	r6, r9, r7, lsl #3
   1a40c:	b	1a4d8 <sf_gen_mtp2type_abbrev+0x598>
   1a410:	mov	r9, r6
   1a414:	sub	r1, r4, #20
   1a418:	mov	r2, #84	; 0x54
   1a41c:	str	r1, [r7]
   1a420:	ldr	r0, [r7, #4]
   1a424:	str	r2, [r0, r1]!
   1a428:	mov	r1, #63	; 0x3f
   1a42c:	mov	r2, r8
   1a430:	str	r1, [r0, #12]
   1a434:	mov	r1, r2
   1a438:	ldr	r2, [r2, #16]
   1a43c:	cmp	r2, #0
   1a440:	bne	1a434 <sf_gen_mtp2type_abbrev+0x4f4>
   1a444:	str	r0, [r1, #16]
   1a448:	ldr	r4, [sl, r9, lsl #3]!
   1a44c:	cmp	r4, #207	; 0xcf
   1a450:	bhi	1a4a4 <sf_gen_mtp2type_abbrev+0x564>
   1a454:	ldr	r1, [pc, #956]	; 1a818 <sf_gen_mtp2type_abbrev+0x8d8>
   1a458:	add	r0, r9, #1
   1a45c:	cmp	r9, #15
   1a460:	add	r1, pc, r1
   1a464:	str	r0, [r1]
   1a468:	bge	1a788 <sf_gen_mtp2type_abbrev+0x848>
   1a46c:	mov	r1, #1024	; 0x400
   1a470:	lsl	r4, r1, r0
   1a474:	mov	r0, r4
   1a478:	bl	ed4 <malloc@plt>
   1a47c:	cmp	r0, #0
   1a480:	str	r0, [sl, #12]
   1a484:	beq	1a788 <sf_gen_mtp2type_abbrev+0x848>
   1a488:	mov	r1, #0
   1a48c:	mov	r2, r4
   1a490:	add	sl, sl, #8
   1a494:	bl	f40 <memset@plt>
   1a498:	cmp	r4, #207	; 0xcf
   1a49c:	str	r4, [sl]
   1a4a0:	bls	1a788 <sf_gen_mtp2type_abbrev+0x848>
   1a4a4:	sub	r0, r4, #208	; 0xd0
   1a4a8:	str	r0, [sl]
   1a4ac:	ldr	r1, [sl, #4]
   1a4b0:	add	r4, r1, r0
   1a4b4:	mov	r0, #37	; 0x25
   1a4b8:	str	r8, [r4, #4]
   1a4bc:	str	r0, [r4, #8]
   1a4c0:	mov	r0, #2
   1a4c4:	str	r0, [r4, #20]
   1a4c8:	str	r4, [r4, #96]	; 0x60
   1a4cc:	b	1a77c <sf_gen_mtp2type_abbrev+0x83c>
   1a4d0:	mov	r7, r5
   1a4d4:	mov	r5, r6
   1a4d8:	sub	r0, r4, #208	; 0xd0
   1a4dc:	str	r8, [sp, #4]
   1a4e0:	str	r0, [r5]
   1a4e4:	ldr	r1, [r5, #4]
   1a4e8:	add	r4, r1, r0
   1a4ec:	mov	r0, #37	; 0x25
   1a4f0:	str	sl, [r4, #4]
   1a4f4:	str	r0, [r4, #8]
   1a4f8:	mov	r0, #2
   1a4fc:	str	r0, [r4, #20]
   1a500:	ldr	r0, [r4, #44]	; 0x2c
   1a504:	clz	r0, r0
   1a508:	lsr	r0, r0, #5
   1a50c:	str	r0, [r4, #44]	; 0x2c
   1a510:	str	r4, [r4, #96]	; 0x60
   1a514:	ldr	r5, [r9, r7, lsl #3]
   1a518:	cmp	r5, #19
   1a51c:	bhi	1a578 <sf_gen_mtp2type_abbrev+0x638>
   1a520:	ldr	r0, [pc, #716]	; 1a7f4 <sf_gen_mtp2type_abbrev+0x8b4>
   1a524:	add	r8, r7, #1
   1a528:	cmp	r7, #15
   1a52c:	add	r0, pc, r0
   1a530:	str	r8, [r0]
   1a534:	bge	1a788 <sf_gen_mtp2type_abbrev+0x848>
   1a538:	mov	r0, #1024	; 0x400
   1a53c:	lsl	r5, r0, r8
   1a540:	mov	r0, r5
   1a544:	bl	ed4 <malloc@plt>
   1a548:	cmp	r0, #0
   1a54c:	str	r0, [r6, #12]
   1a550:	beq	1a788 <sf_gen_mtp2type_abbrev+0x848>
   1a554:	mov	r1, #0
   1a558:	mov	r2, r5
   1a55c:	add	r7, r6, #8
   1a560:	bl	f40 <memset@plt>
   1a564:	cmp	r5, #20
   1a568:	str	r5, [r7]
   1a56c:	bcc	1a788 <sf_gen_mtp2type_abbrev+0x848>
   1a570:	add	r6, r9, r8, lsl #3
   1a574:	b	1a580 <sf_gen_mtp2type_abbrev+0x640>
   1a578:	mov	r8, r7
   1a57c:	mov	r7, r6
   1a580:	sub	r0, r5, #20
   1a584:	mov	r1, #48	; 0x30
   1a588:	str	r0, [r7]
   1a58c:	ldr	sl, [r7, #4]
   1a590:	str	r1, [sl, r0]!
   1a594:	ldr	r0, [sp, #4]
   1a598:	str	r0, [sl, #12]
   1a59c:	ldr	r5, [r6]
   1a5a0:	cmp	r5, #19
   1a5a4:	bhi	1a5fc <sf_gen_mtp2type_abbrev+0x6bc>
   1a5a8:	ldr	r0, [pc, #584]	; 1a7f8 <sf_gen_mtp2type_abbrev+0x8b8>
   1a5ac:	add	r7, r8, #1
   1a5b0:	cmp	r8, #15
   1a5b4:	add	r0, pc, r0
   1a5b8:	str	r7, [r0]
   1a5bc:	bge	1a788 <sf_gen_mtp2type_abbrev+0x848>
   1a5c0:	mov	r0, #1024	; 0x400
   1a5c4:	lsl	r5, r0, r7
   1a5c8:	mov	r0, r5
   1a5cc:	bl	ed4 <malloc@plt>
   1a5d0:	cmp	r0, #0
   1a5d4:	str	r0, [r6, #12]
   1a5d8:	beq	1a788 <sf_gen_mtp2type_abbrev+0x848>
   1a5dc:	mov	r1, #0
   1a5e0:	mov	r2, r5
   1a5e4:	add	r6, r6, #8
   1a5e8:	bl	f40 <memset@plt>
   1a5ec:	cmp	r5, #19
   1a5f0:	str	r5, [r6]
   1a5f4:	bhi	1a600 <sf_gen_mtp2type_abbrev+0x6c0>
   1a5f8:	b	1a788 <sf_gen_mtp2type_abbrev+0x848>
   1a5fc:	mov	r7, r8
   1a600:	sub	r1, r5, #20
   1a604:	mov	r2, #84	; 0x54
   1a608:	str	r1, [r6]
   1a60c:	ldr	r0, [r6, #4]
   1a610:	str	r2, [r0, r1]!
   1a614:	mov	r1, #63	; 0x3f
   1a618:	mov	r2, sl
   1a61c:	str	r1, [r0, #12]
   1a620:	mov	r1, r2
   1a624:	ldr	r2, [r2, #16]
   1a628:	cmp	r2, #0
   1a62c:	bne	1a620 <sf_gen_mtp2type_abbrev+0x6e0>
   1a630:	str	r0, [r1, #16]
   1a634:	ldr	r5, [r9, r7, lsl #3]!
   1a638:	cmp	r5, #207	; 0xcf
   1a63c:	bhi	1a690 <sf_gen_mtp2type_abbrev+0x750>
   1a640:	ldr	r1, [pc, #436]	; 1a7fc <sf_gen_mtp2type_abbrev+0x8bc>
   1a644:	add	r0, r7, #1
   1a648:	cmp	r7, #15
   1a64c:	add	r1, pc, r1
   1a650:	str	r0, [r1]
   1a654:	bge	1a788 <sf_gen_mtp2type_abbrev+0x848>
   1a658:	mov	r1, #1024	; 0x400
   1a65c:	lsl	r5, r1, r0
   1a660:	mov	r0, r5
   1a664:	bl	ed4 <malloc@plt>
   1a668:	cmp	r0, #0
   1a66c:	str	r0, [r9, #12]
   1a670:	beq	1a788 <sf_gen_mtp2type_abbrev+0x848>
   1a674:	mov	r1, #0
   1a678:	mov	r2, r5
   1a67c:	add	r9, r9, #8
   1a680:	bl	f40 <memset@plt>
   1a684:	cmp	r5, #207	; 0xcf
   1a688:	str	r5, [r9]
   1a68c:	bls	1a788 <sf_gen_mtp2type_abbrev+0x848>
   1a690:	sub	r0, r5, #208	; 0xd0
   1a694:	str	r0, [r9]
   1a698:	ldr	r1, [r9, #4]
   1a69c:	adds	r0, r1, r0
   1a6a0:	mov	r1, #37	; 0x25
   1a6a4:	str	sl, [r0, #4]
   1a6a8:	str	r1, [r0, #8]
   1a6ac:	mov	r1, #0
   1a6b0:	str	r1, [r0, #20]
   1a6b4:	str	r0, [r0, #96]	; 0x60
   1a6b8:	beq	1a6ec <sf_gen_mtp2type_abbrev+0x7ac>
   1a6bc:	ldr	r1, [r4, #96]	; 0x60
   1a6c0:	mov	r2, r0
   1a6c4:	ldr	r3, [r2, #44]	; 0x2c
   1a6c8:	add	r7, r2, #84	; 0x54
   1a6cc:	cmp	r3, #0
   1a6d0:	mov	r3, #84	; 0x54
   1a6d4:	movweq	r3, #60	; 0x3c
   1a6d8:	addeq	r7, r2, #60	; 0x3c
   1a6dc:	ldr	r2, [r2, r3]
   1a6e0:	str	r1, [r7]
   1a6e4:	cmp	r2, #0
   1a6e8:	bne	1a6c4 <sf_gen_mtp2type_abbrev+0x784>
   1a6ec:	ldr	r1, [r0, #44]	; 0x2c
   1a6f0:	cmp	r4, #0
   1a6f4:	clz	r1, r1
   1a6f8:	lsr	r1, r1, #5
   1a6fc:	str	r1, [r0, #44]	; 0x2c
   1a700:	ldr	r1, [r4, #44]	; 0x2c
   1a704:	clz	r2, r1
   1a708:	lsr	r2, r2, #5
   1a70c:	str	r2, [r4, #44]	; 0x2c
   1a710:	str	r4, [sp, #8]
   1a714:	beq	1a75c <sf_gen_mtp2type_abbrev+0x81c>
   1a718:	mov	r3, #60	; 0x3c
   1a71c:	cmp	r1, #0
   1a720:	mov	r2, r4
   1a724:	movweq	r3, #84	; 0x54
   1a728:	ldr	r1, [r2, r3]!
   1a72c:	cmp	r1, #0
   1a730:	beq	1a760 <sf_gen_mtp2type_abbrev+0x820>
   1a734:	ldr	r3, [r1, #44]	; 0x2c
   1a738:	add	r2, r1, #84	; 0x54
   1a73c:	cmp	r3, #0
   1a740:	mov	r3, #84	; 0x54
   1a744:	movweq	r3, #60	; 0x3c
   1a748:	addeq	r2, r1, #60	; 0x3c
   1a74c:	ldr	r1, [r1, r3]
   1a750:	cmp	r1, #0
   1a754:	bne	1a734 <sf_gen_mtp2type_abbrev+0x7f4>
   1a758:	b	1a760 <sf_gen_mtp2type_abbrev+0x820>
   1a75c:	add	r2, sp, #8
   1a760:	str	r0, [r2]
   1a764:	ldr	r1, [r4, #44]	; 0x2c
   1a768:	clz	r1, r1
   1a76c:	lsr	r1, r1, #5
   1a770:	str	r1, [r4, #44]	; 0x2c
   1a774:	ldr	r0, [r0, #96]	; 0x60
   1a778:	str	r0, [r4, #96]	; 0x60
   1a77c:	mov	r0, r4
   1a780:	sub	sp, fp, #28
   1a784:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1a788:	ldr	r0, [pc, #144]	; 1a820 <sf_gen_mtp2type_abbrev+0x8e0>
   1a78c:	add	r0, pc, r0
   1a790:	bl	2124 <sf_bpf_error>
   1a794:	bl	fc4 <abort@plt>
   1a798:	ldr	r0, [pc, #124]	; 1a81c <sf_gen_mtp2type_abbrev+0x8dc>
   1a79c:	add	r0, pc, r0
   1a7a0:	bl	2124 <sf_bpf_error>
   1a7a4:	ldr	r0, [pc, #120]	; 1a824 <sf_gen_mtp2type_abbrev+0x8e4>
   1a7a8:	add	r0, pc, r0
   1a7ac:	bl	2124 <sf_bpf_error>
   1a7b0:	ldr	r0, [pc, #112]	; 1a828 <sf_gen_mtp2type_abbrev+0x8e8>
   1a7b4:	add	r0, pc, r0
   1a7b8:	bl	2124 <sf_bpf_error>
   1a7bc:	.word	0x0002d4c8
   1a7c0:	.word	0x0002d578
   1a7c4:	.word	0x0002d4f0
   1a7c8:	.word	0x0002d4cc
   1a7cc:	.word	0x0002d548
   1a7d0:	.word	0x0002d38c
   1a7d4:	.word	0x0002d274
   1a7d8:	.word	0x0002d42c
   1a7dc:	.word	0x0002d4dc
   1a7e0:	.word	0x0002d454
   1a7e4:	.word	0x0002d430
   1a7e8:	.word	0x0002d4ac
   1a7ec:	.word	0x0002d30c
   1a7f0:	.word	0x0002d138
   1a7f4:	.word	0x0002cfd0
   1a7f8:	.word	0x0002cf48
   1a7fc:	.word	0x0002ceb0
   1a800:	.word	0x0002d390
   1a804:	.word	0x0002d440
   1a808:	.word	0x0002d3b8
   1a80c:	.word	0x0002d394
   1a810:	.word	0x0002d410
   1a814:	.word	0x0002d1d4
   1a818:	.word	0x0002d09c
   1a81c:	.word	0x0000f673
   1a820:	.word	0x0000f878
   1a824:	.word	0x0000f685
   1a828:	.word	0x0000f697

0001a82c <sf_gen_mtp3field_code>:
   1a82c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1a830:	add	fp, sp, #28
   1a834:	sub	sp, sp, #12
   1a838:	sub	r0, r0, #1
   1a83c:	cmp	r0, #3
   1a840:	bhi	1af6c <sf_gen_mtp3field_code+0x740>
   1a844:	mov	r6, r2
   1a848:	add	r2, pc, #8
   1a84c:	str	r3, [sp, #8]
   1a850:	ldr	r0, [r2, r0, lsl #2]
   1a854:	add	pc, r2, r0
   1a858:	.word	0x00000010
   1a85c:	.word	0x000001e0
   1a860:	.word	0x000000a8
   1a864:	.word	0x00000144
   1a868:	ldr	r9, [pc, #1888]	; 1afd0 <sf_gen_mtp3field_code+0x7a4>
   1a86c:	ldr	r9, [pc, r9]
   1a870:	cmn	r9, #1
   1a874:	beq	1af70 <sf_gen_mtp3field_code+0x744>
   1a878:	cmp	r1, #256	; 0x100
   1a87c:	bcs	1af7c <sf_gen_mtp3field_code+0x750>
   1a880:	ldr	r0, [pc, #1868]	; 1afd4 <sf_gen_mtp3field_code+0x7a8>
   1a884:	ldr	r0, [pc, r0]
   1a888:	ldr	r8, [pc, #1864]	; 1afd8 <sf_gen_mtp3field_code+0x7ac>
   1a88c:	add	r8, pc, r8
   1a890:	mov	r4, r8
   1a894:	ldr	r7, [r4, r0, lsl #3]!
   1a898:	cmp	r7, #19
   1a89c:	bhi	1abf0 <sf_gen_mtp3field_code+0x3c4>
   1a8a0:	str	r1, [sp, #4]
   1a8a4:	add	sl, r0, #1
   1a8a8:	cmp	r0, #15
   1a8ac:	ldr	r1, [pc, #1832]	; 1afdc <sf_gen_mtp3field_code+0x7b0>
   1a8b0:	add	r1, pc, r1
   1a8b4:	str	sl, [r1]
   1a8b8:	bge	1af0c <sf_gen_mtp3field_code+0x6e0>
   1a8bc:	mov	r0, #1024	; 0x400
   1a8c0:	lsl	r7, r0, sl
   1a8c4:	mov	r0, r7
   1a8c8:	bl	ed4 <malloc@plt>
   1a8cc:	cmp	r0, #0
   1a8d0:	str	r0, [r4, #12]
   1a8d4:	beq	1af0c <sf_gen_mtp3field_code+0x6e0>
   1a8d8:	mov	r1, #0
   1a8dc:	mov	r2, r7
   1a8e0:	add	r5, r4, #8
   1a8e4:	bl	f40 <memset@plt>
   1a8e8:	cmp	r7, #20
   1a8ec:	str	r7, [r5]
   1a8f0:	bcc	1af0c <sf_gen_mtp3field_code+0x6e0>
   1a8f4:	ldr	r1, [sp, #4]
   1a8f8:	add	r4, r8, sl, lsl #3
   1a8fc:	b	1abf8 <sf_gen_mtp3field_code+0x3cc>
   1a900:	str	r6, [sp, #4]
   1a904:	ldr	sl, [pc, #1776]	; 1affc <sf_gen_mtp3field_code+0x7d0>
   1a908:	ldr	sl, [pc, sl]
   1a90c:	cmn	sl, #1
   1a910:	beq	1af88 <sf_gen_mtp3field_code+0x75c>
   1a914:	cmp	r1, #16384	; 0x4000
   1a918:	bcs	1af94 <sf_gen_mtp3field_code+0x768>
   1a91c:	ldr	r0, [pc, #1756]	; 1b000 <sf_gen_mtp3field_code+0x7d4>
   1a920:	ldr	r0, [pc, r0]
   1a924:	ldr	r9, [pc, #1752]	; 1b004 <sf_gen_mtp3field_code+0x7d8>
   1a928:	add	r9, pc, r9
   1a92c:	mov	r5, r9
   1a930:	ldr	r7, [r5, r0, lsl #3]!
   1a934:	cmp	r7, #19
   1a938:	bhi	1aae0 <sf_gen_mtp3field_code+0x2b4>
   1a93c:	mov	r8, r1
   1a940:	ldr	r1, [pc, #1728]	; 1b008 <sf_gen_mtp3field_code+0x7dc>
   1a944:	add	r6, r0, #1
   1a948:	cmp	r0, #15
   1a94c:	add	r1, pc, r1
   1a950:	str	r6, [r1]
   1a954:	bge	1af0c <sf_gen_mtp3field_code+0x6e0>
   1a958:	mov	r0, #1024	; 0x400
   1a95c:	lsl	r7, r0, r6
   1a960:	mov	r0, r7
   1a964:	bl	ed4 <malloc@plt>
   1a968:	cmp	r0, #0
   1a96c:	str	r0, [r5, #12]
   1a970:	beq	1af0c <sf_gen_mtp3field_code+0x6e0>
   1a974:	mov	r1, #0
   1a978:	mov	r2, r7
   1a97c:	add	r4, r5, #8
   1a980:	bl	f40 <memset@plt>
   1a984:	cmp	r7, #20
   1a988:	str	r7, [r4]
   1a98c:	bcc	1af0c <sf_gen_mtp3field_code+0x6e0>
   1a990:	add	r5, r9, r6, lsl #3
   1a994:	mov	r1, r8
   1a998:	b	1aae8 <sf_gen_mtp3field_code+0x2bc>
   1a99c:	str	r6, [sp, #4]
   1a9a0:	ldr	sl, [pc, #1644]	; 1b014 <sf_gen_mtp3field_code+0x7e8>
   1a9a4:	ldr	sl, [pc, sl]
   1a9a8:	cmn	sl, #1
   1a9ac:	beq	1afa0 <sf_gen_mtp3field_code+0x774>
   1a9b0:	cmp	r1, #16
   1a9b4:	bcs	1afac <sf_gen_mtp3field_code+0x780>
   1a9b8:	ldr	r0, [pc, #1624]	; 1b018 <sf_gen_mtp3field_code+0x7ec>
   1a9bc:	ldr	r0, [pc, r0]
   1a9c0:	ldr	r9, [pc, #1620]	; 1b01c <sf_gen_mtp3field_code+0x7f0>
   1a9c4:	add	r9, pc, r9
   1a9c8:	mov	r5, r9
   1a9cc:	ldr	r7, [r5, r0, lsl #3]!
   1a9d0:	cmp	r7, #19
   1a9d4:	bhi	1ab68 <sf_gen_mtp3field_code+0x33c>
   1a9d8:	mov	r8, r1
   1a9dc:	ldr	r1, [pc, #1596]	; 1b020 <sf_gen_mtp3field_code+0x7f4>
   1a9e0:	add	r6, r0, #1
   1a9e4:	cmp	r0, #15
   1a9e8:	add	r1, pc, r1
   1a9ec:	str	r6, [r1]
   1a9f0:	bge	1af0c <sf_gen_mtp3field_code+0x6e0>
   1a9f4:	mov	r0, #1024	; 0x400
   1a9f8:	lsl	r7, r0, r6
   1a9fc:	mov	r0, r7
   1aa00:	bl	ed4 <malloc@plt>
   1aa04:	cmp	r0, #0
   1aa08:	str	r0, [r5, #12]
   1aa0c:	beq	1af0c <sf_gen_mtp3field_code+0x6e0>
   1aa10:	mov	r1, #0
   1aa14:	mov	r2, r7
   1aa18:	add	r4, r5, #8
   1aa1c:	bl	f40 <memset@plt>
   1aa20:	cmp	r7, #20
   1aa24:	str	r7, [r4]
   1aa28:	bcc	1af0c <sf_gen_mtp3field_code+0x6e0>
   1aa2c:	add	r5, r9, r6, lsl #3
   1aa30:	mov	r1, r8
   1aa34:	b	1ab70 <sf_gen_mtp3field_code+0x344>
   1aa38:	str	r6, [sp, #4]
   1aa3c:	ldr	r4, [pc, #1440]	; 1afe4 <sf_gen_mtp3field_code+0x7b8>
   1aa40:	ldr	r4, [pc, r4]
   1aa44:	cmn	r4, #1
   1aa48:	beq	1afb8 <sf_gen_mtp3field_code+0x78c>
   1aa4c:	cmp	r1, #16384	; 0x4000
   1aa50:	bcs	1afc4 <sf_gen_mtp3field_code+0x798>
   1aa54:	ubfx	r6, r1, #10, #4
   1aa58:	ldr	r0, [pc, #1416]	; 1afe8 <sf_gen_mtp3field_code+0x7bc>
   1aa5c:	ldr	r0, [pc, r0]
   1aa60:	ldr	r8, [pc, #1412]	; 1afec <sf_gen_mtp3field_code+0x7c0>
   1aa64:	add	r8, pc, r8
   1aa68:	mov	r5, r8
   1aa6c:	ldr	r7, [r5, r0, lsl #3]!
   1aa70:	cmp	r7, #19
   1aa74:	bhi	1acac <sf_gen_mtp3field_code+0x480>
   1aa78:	str	r4, [sp]
   1aa7c:	mov	r4, r1
   1aa80:	add	sl, r0, #1
   1aa84:	cmp	r0, #15
   1aa88:	ldr	r1, [pc, #1376]	; 1aff0 <sf_gen_mtp3field_code+0x7c4>
   1aa8c:	add	r1, pc, r1
   1aa90:	str	sl, [r1]
   1aa94:	bge	1af0c <sf_gen_mtp3field_code+0x6e0>
   1aa98:	mov	r0, #1024	; 0x400
   1aa9c:	lsl	r7, r0, sl
   1aaa0:	mov	r0, r7
   1aaa4:	bl	ed4 <malloc@plt>
   1aaa8:	cmp	r0, #0
   1aaac:	str	r0, [r5, #12]
   1aab0:	beq	1af0c <sf_gen_mtp3field_code+0x6e0>
   1aab4:	mov	r1, #0
   1aab8:	mov	r2, r7
   1aabc:	add	r9, r5, #8
   1aac0:	bl	f40 <memset@plt>
   1aac4:	cmp	r7, #20
   1aac8:	str	r7, [r9]
   1aacc:	bcc	1af0c <sf_gen_mtp3field_code+0x6e0>
   1aad0:	mov	r1, r4
   1aad4:	ldr	r4, [sp]
   1aad8:	add	r5, r8, sl, lsl #3
   1aadc:	b	1acb4 <sf_gen_mtp3field_code+0x488>
   1aae0:	mov	r6, r0
   1aae4:	mov	r4, r5
   1aae8:	sub	r0, r7, #20
   1aaec:	mov	r2, #32
   1aaf0:	str	r0, [r4]
   1aaf4:	ldr	r8, [r4, #4]
   1aaf8:	str	r2, [r8, r0]!
   1aafc:	str	sl, [r8, #12]
   1ab00:	ldr	r7, [r9, r6, lsl #3]
   1ab04:	cmp	r7, #19
   1ab08:	bhi	1ad3c <sf_gen_mtp3field_code+0x510>
   1ab0c:	ldr	r0, [pc, #1272]	; 1b00c <sf_gen_mtp3field_code+0x7e0>
   1ab10:	add	sl, r6, #1
   1ab14:	cmp	r6, #15
   1ab18:	add	r0, pc, r0
   1ab1c:	str	sl, [r0]
   1ab20:	bge	1af0c <sf_gen_mtp3field_code+0x6e0>
   1ab24:	mov	r0, #1024	; 0x400
   1ab28:	mov	r4, r1
   1ab2c:	lsl	r7, r0, sl
   1ab30:	mov	r0, r7
   1ab34:	bl	ed4 <malloc@plt>
   1ab38:	cmp	r0, #0
   1ab3c:	str	r0, [r5, #12]
   1ab40:	beq	1af0c <sf_gen_mtp3field_code+0x6e0>
   1ab44:	mov	r1, #0
   1ab48:	mov	r2, r7
   1ab4c:	add	r5, r5, #8
   1ab50:	bl	f40 <memset@plt>
   1ab54:	cmp	r7, #19
   1ab58:	mov	r1, r4
   1ab5c:	str	r7, [r5]
   1ab60:	bhi	1ad40 <sf_gen_mtp3field_code+0x514>
   1ab64:	b	1af0c <sf_gen_mtp3field_code+0x6e0>
   1ab68:	mov	r6, r0
   1ab6c:	mov	r4, r5
   1ab70:	sub	r0, r7, #20
   1ab74:	mov	r2, #48	; 0x30
   1ab78:	str	r0, [r4]
   1ab7c:	ldr	r8, [r4, #4]
   1ab80:	str	r2, [r8, r0]!
   1ab84:	str	sl, [r8, #12]
   1ab88:	ldr	r7, [r9, r6, lsl #3]
   1ab8c:	cmp	r7, #19
   1ab90:	bhi	1ad84 <sf_gen_mtp3field_code+0x558>
   1ab94:	ldr	r0, [pc, #1160]	; 1b024 <sf_gen_mtp3field_code+0x7f8>
   1ab98:	add	sl, r6, #1
   1ab9c:	cmp	r6, #15
   1aba0:	add	r0, pc, r0
   1aba4:	str	sl, [r0]
   1aba8:	bge	1af0c <sf_gen_mtp3field_code+0x6e0>
   1abac:	mov	r0, #1024	; 0x400
   1abb0:	mov	r4, r1
   1abb4:	lsl	r7, r0, sl
   1abb8:	mov	r0, r7
   1abbc:	bl	ed4 <malloc@plt>
   1abc0:	cmp	r0, #0
   1abc4:	str	r0, [r5, #12]
   1abc8:	beq	1af0c <sf_gen_mtp3field_code+0x6e0>
   1abcc:	mov	r1, #0
   1abd0:	mov	r2, r7
   1abd4:	add	r5, r5, #8
   1abd8:	bl	f40 <memset@plt>
   1abdc:	cmp	r7, #19
   1abe0:	mov	r1, r4
   1abe4:	str	r7, [r5]
   1abe8:	bhi	1ad88 <sf_gen_mtp3field_code+0x55c>
   1abec:	b	1af0c <sf_gen_mtp3field_code+0x6e0>
   1abf0:	mov	sl, r0
   1abf4:	mov	r5, r4
   1abf8:	sub	r0, r7, #20
   1abfc:	mov	r2, #48	; 0x30
   1ac00:	str	r0, [r5]
   1ac04:	ldr	r5, [r5, #4]
   1ac08:	str	r2, [r5, r0]!
   1ac0c:	str	r9, [r5, #12]
   1ac10:	ldr	r7, [r8, sl, lsl #3]
   1ac14:	cmp	r7, #207	; 0xcf
   1ac18:	bhi	1ac74 <sf_gen_mtp3field_code+0x448>
   1ac1c:	mov	r8, r1
   1ac20:	ldr	r1, [pc, #952]	; 1afe0 <sf_gen_mtp3field_code+0x7b4>
   1ac24:	add	r0, sl, #1
   1ac28:	cmp	sl, #15
   1ac2c:	add	r1, pc, r1
   1ac30:	str	r0, [r1]
   1ac34:	bge	1af0c <sf_gen_mtp3field_code+0x6e0>
   1ac38:	mov	r1, #1024	; 0x400
   1ac3c:	lsl	r7, r1, r0
   1ac40:	mov	r0, r7
   1ac44:	bl	ed4 <malloc@plt>
   1ac48:	cmp	r0, #0
   1ac4c:	str	r0, [r4, #12]
   1ac50:	beq	1af0c <sf_gen_mtp3field_code+0x6e0>
   1ac54:	mov	r1, #0
   1ac58:	mov	r2, r7
   1ac5c:	add	r4, r4, #8
   1ac60:	bl	f40 <memset@plt>
   1ac64:	cmp	r7, #207	; 0xcf
   1ac68:	mov	r1, r8
   1ac6c:	str	r7, [r4]
   1ac70:	bls	1af0c <sf_gen_mtp3field_code+0x6e0>
   1ac74:	sub	r0, r7, #208	; 0xd0
   1ac78:	orr	r3, r6, #5
   1ac7c:	str	r0, [r4]
   1ac80:	ldr	r2, [r4, #4]
   1ac84:	add	r0, r2, r0
   1ac88:	str	r5, [r0, #4]
   1ac8c:	str	r3, [r0, #8]
   1ac90:	str	r1, [r0, #20]
   1ac94:	ldr	r1, [sp, #8]
   1ac98:	str	r0, [r0, #96]	; 0x60
   1ac9c:	cmp	r1, #0
   1aca0:	beq	1af64 <sf_gen_mtp3field_code+0x738>
   1aca4:	orr	r1, r6, #16
   1aca8:	b	1af50 <sf_gen_mtp3field_code+0x724>
   1acac:	mov	sl, r0
   1acb0:	mov	r9, r5
   1acb4:	sub	r0, r7, #20
   1acb8:	mov	r2, #32
   1acbc:	str	r0, [r9]
   1acc0:	ldr	r9, [r9, #4]
   1acc4:	str	r2, [r9, r0]!
   1acc8:	str	r4, [r9, #12]
   1accc:	ldr	r7, [r8, sl, lsl #3]
   1acd0:	cmp	r7, #19
   1acd4:	bhi	1ae60 <sf_gen_mtp3field_code+0x634>
   1acd8:	str	r6, [sp]
   1acdc:	add	r4, sl, #1
   1ace0:	cmp	sl, #15
   1ace4:	ldr	r0, [pc, #776]	; 1aff4 <sf_gen_mtp3field_code+0x7c8>
   1ace8:	add	r0, pc, r0
   1acec:	str	r4, [r0]
   1acf0:	bge	1af0c <sf_gen_mtp3field_code+0x6e0>
   1acf4:	mov	r0, #1024	; 0x400
   1acf8:	mov	r6, r1
   1acfc:	lsl	r7, r0, r4
   1ad00:	mov	r0, r7
   1ad04:	bl	ed4 <malloc@plt>
   1ad08:	cmp	r0, #0
   1ad0c:	str	r0, [r5, #12]
   1ad10:	beq	1af0c <sf_gen_mtp3field_code+0x6e0>
   1ad14:	mov	r1, #0
   1ad18:	mov	r2, r7
   1ad1c:	add	r5, r5, #8
   1ad20:	bl	f40 <memset@plt>
   1ad24:	mov	r1, r6
   1ad28:	ldr	r6, [sp]
   1ad2c:	cmp	r7, #19
   1ad30:	str	r7, [r5]
   1ad34:	bhi	1ae64 <sf_gen_mtp3field_code+0x638>
   1ad38:	b	1af0c <sf_gen_mtp3field_code+0x6e0>
   1ad3c:	mov	sl, r6
   1ad40:	mov	r0, #4128768	; 0x3f0000
   1ad44:	mov	r2, #84	; 0x54
   1ad48:	and	r0, r0, r1, lsl #8
   1ad4c:	orr	r4, r0, r1, lsl #24
   1ad50:	sub	r1, r7, #20
   1ad54:	str	r1, [r5]
   1ad58:	ldr	r0, [r5, #4]
   1ad5c:	str	r2, [r0, r1]!
   1ad60:	movw	r1, #0
   1ad64:	mov	r2, r8
   1ad68:	movt	r1, #65343	; 0xff3f
   1ad6c:	str	r1, [r0, #12]
   1ad70:	mov	r1, r2
   1ad74:	ldr	r2, [r2, #16]
   1ad78:	cmp	r2, #0
   1ad7c:	bne	1ad70 <sf_gen_mtp3field_code+0x544>
   1ad80:	b	1adbc <sf_gen_mtp3field_code+0x590>
   1ad84:	mov	sl, r6
   1ad88:	lsl	r4, r1, #4
   1ad8c:	sub	r1, r7, #20
   1ad90:	mov	r2, #84	; 0x54
   1ad94:	str	r1, [r5]
   1ad98:	ldr	r0, [r5, #4]
   1ad9c:	str	r2, [r0, r1]!
   1ada0:	mov	r1, #240	; 0xf0
   1ada4:	mov	r2, r8
   1ada8:	str	r1, [r0, #12]
   1adac:	mov	r1, r2
   1adb0:	ldr	r2, [r2, #16]
   1adb4:	cmp	r2, #0
   1adb8:	bne	1adac <sf_gen_mtp3field_code+0x580>
   1adbc:	str	r0, [r1, #16]
   1adc0:	ldr	r6, [r9, sl, lsl #3]!
   1adc4:	cmp	r6, #207	; 0xcf
   1adc8:	bhi	1ae24 <sf_gen_mtp3field_code+0x5f8>
   1adcc:	ldr	r1, [pc, #572]	; 1b010 <sf_gen_mtp3field_code+0x7e4>
   1add0:	add	r0, sl, #1
   1add4:	cmp	sl, #15
   1add8:	add	r1, pc, r1
   1addc:	str	r0, [r1]
   1ade0:	bge	1af0c <sf_gen_mtp3field_code+0x6e0>
   1ade4:	mov	r1, #1024	; 0x400
   1ade8:	lsl	r6, r1, r0
   1adec:	mov	r0, r6
   1adf0:	bl	ed4 <malloc@plt>
   1adf4:	ldr	r5, [sp, #4]
   1adf8:	cmp	r0, #0
   1adfc:	str	r0, [r9, #12]
   1ae00:	beq	1af0c <sf_gen_mtp3field_code+0x6e0>
   1ae04:	mov	r1, #0
   1ae08:	mov	r2, r6
   1ae0c:	add	r9, r9, #8
   1ae10:	bl	f40 <memset@plt>
   1ae14:	cmp	r6, #207	; 0xcf
   1ae18:	str	r6, [r9]
   1ae1c:	bhi	1ae28 <sf_gen_mtp3field_code+0x5fc>
   1ae20:	b	1af0c <sf_gen_mtp3field_code+0x6e0>
   1ae24:	ldr	r5, [sp, #4]
   1ae28:	sub	r0, r6, #208	; 0xd0
   1ae2c:	orr	r1, r5, #5
   1ae30:	str	r0, [r9]
   1ae34:	ldr	r2, [r9, #4]
   1ae38:	add	r0, r2, r0
   1ae3c:	str	r8, [r0, #4]
   1ae40:	str	r1, [r0, #8]
   1ae44:	str	r4, [r0, #20]
   1ae48:	str	r0, [r0, #96]	; 0x60
   1ae4c:	ldr	r1, [sp, #8]
   1ae50:	cmp	r1, #0
   1ae54:	beq	1af64 <sf_gen_mtp3field_code+0x738>
   1ae58:	orr	r1, r5, #16
   1ae5c:	b	1af50 <sf_gen_mtp3field_code+0x724>
   1ae60:	mov	r4, sl
   1ae64:	and	r0, r1, #1020	; 0x3fc
   1ae68:	and	r1, r1, #3
   1ae6c:	mov	r2, #84	; 0x54
   1ae70:	orr	r0, r6, r0, lsl #6
   1ae74:	orr	sl, r0, r1, lsl #22
   1ae78:	sub	r1, r7, #20
   1ae7c:	str	r1, [r5]
   1ae80:	ldr	r0, [r5, #4]
   1ae84:	str	r2, [r0, r1]!
   1ae88:	movw	r1, #65295	; 0xff0f
   1ae8c:	mov	r2, r9
   1ae90:	movt	r1, #192	; 0xc0
   1ae94:	str	r1, [r0, #12]
   1ae98:	mov	r1, r2
   1ae9c:	ldr	r2, [r2, #16]
   1aea0:	cmp	r2, #0
   1aea4:	bne	1ae98 <sf_gen_mtp3field_code+0x66c>
   1aea8:	str	r0, [r1, #16]
   1aeac:	ldr	r6, [r8, r4, lsl #3]!
   1aeb0:	cmp	r6, #207	; 0xcf
   1aeb4:	bhi	1af18 <sf_gen_mtp3field_code+0x6ec>
   1aeb8:	ldr	r1, [pc, #312]	; 1aff8 <sf_gen_mtp3field_code+0x7cc>
   1aebc:	add	r0, r4, #1
   1aec0:	cmp	r4, #15
   1aec4:	add	r1, pc, r1
   1aec8:	str	r0, [r1]
   1aecc:	bge	1af0c <sf_gen_mtp3field_code+0x6e0>
   1aed0:	mov	r1, #1024	; 0x400
   1aed4:	lsl	r6, r1, r0
   1aed8:	mov	r0, r6
   1aedc:	bl	ed4 <malloc@plt>
   1aee0:	ldr	r4, [sp, #8]
   1aee4:	cmp	r0, #0
   1aee8:	str	r0, [r8, #12]
   1aeec:	beq	1af0c <sf_gen_mtp3field_code+0x6e0>
   1aef0:	mov	r1, #0
   1aef4:	mov	r2, r6
   1aef8:	add	r8, r8, #8
   1aefc:	bl	f40 <memset@plt>
   1af00:	cmp	r6, #207	; 0xcf
   1af04:	str	r6, [r8]
   1af08:	bhi	1af1c <sf_gen_mtp3field_code+0x6f0>
   1af0c:	ldr	r0, [pc, #276]	; 1b028 <sf_gen_mtp3field_code+0x7fc>
   1af10:	add	r0, pc, r0
   1af14:	bl	2124 <sf_bpf_error>
   1af18:	ldr	r4, [sp, #8]
   1af1c:	sub	r0, r6, #208	; 0xd0
   1af20:	ldr	r3, [sp, #4]
   1af24:	cmp	r4, #0
   1af28:	str	r0, [r8]
   1af2c:	ldr	r2, [r8, #4]
   1af30:	orr	r1, r3, #5
   1af34:	add	r0, r2, r0
   1af38:	str	r9, [r0, #4]
   1af3c:	str	r1, [r0, #8]
   1af40:	str	sl, [r0, #20]
   1af44:	str	r0, [r0, #96]	; 0x60
   1af48:	beq	1af64 <sf_gen_mtp3field_code+0x738>
   1af4c:	orr	r1, r3, #16
   1af50:	cmp	r1, #48	; 0x30
   1af54:	ldreq	r1, [r0, #44]	; 0x2c
   1af58:	clzeq	r1, r1
   1af5c:	lsreq	r1, r1, #5
   1af60:	streq	r1, [r0, #44]	; 0x2c
   1af64:	sub	sp, fp, #28
   1af68:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1af6c:	bl	fc4 <abort@plt>
   1af70:	ldr	r0, [pc, #180]	; 1b02c <sf_gen_mtp3field_code+0x800>
   1af74:	add	r0, pc, r0
   1af78:	bl	2124 <sf_bpf_error>
   1af7c:	ldr	r0, [pc, #172]	; 1b030 <sf_gen_mtp3field_code+0x804>
   1af80:	add	r0, pc, r0
   1af84:	bl	2124 <sf_bpf_error>
   1af88:	ldr	r0, [pc, #172]	; 1b03c <sf_gen_mtp3field_code+0x810>
   1af8c:	add	r0, pc, r0
   1af90:	bl	2124 <sf_bpf_error>
   1af94:	ldr	r0, [pc, #164]	; 1b040 <sf_gen_mtp3field_code+0x814>
   1af98:	add	r0, pc, r0
   1af9c:	bl	2124 <sf_bpf_error>
   1afa0:	ldr	r0, [pc, #156]	; 1b044 <sf_gen_mtp3field_code+0x818>
   1afa4:	add	r0, pc, r0
   1afa8:	bl	2124 <sf_bpf_error>
   1afac:	ldr	r0, [pc, #148]	; 1b048 <sf_gen_mtp3field_code+0x81c>
   1afb0:	add	r0, pc, r0
   1afb4:	bl	2124 <sf_bpf_error>
   1afb8:	ldr	r0, [pc, #116]	; 1b034 <sf_gen_mtp3field_code+0x808>
   1afbc:	add	r0, pc, r0
   1afc0:	bl	2124 <sf_bpf_error>
   1afc4:	ldr	r0, [pc, #108]	; 1b038 <sf_gen_mtp3field_code+0x80c>
   1afc8:	add	r0, pc, r0
   1afcc:	bl	2124 <sf_bpf_error>
   1afd0:	.word	0x0002cc00
   1afd4:	.word	0x0002cc78
   1afd8:	.word	0x0002cbf0
   1afdc:	.word	0x0002cc4c
   1afe0:	.word	0x0002c8d0
   1afe4:	.word	0x0002ca30
   1afe8:	.word	0x0002caa0
   1afec:	.word	0x0002ca18
   1aff0:	.word	0x0002ca70
   1aff4:	.word	0x0002c814
   1aff8:	.word	0x0002c638
   1affc:	.word	0x0002cb6c
   1b000:	.word	0x0002cbdc
   1b004:	.word	0x0002cb54
   1b008:	.word	0x0002cbb0
   1b00c:	.word	0x0002c9e4
   1b010:	.word	0x0002c724
   1b014:	.word	0x0002cad4
   1b018:	.word	0x0002cb40
   1b01c:	.word	0x0002cab8
   1b020:	.word	0x0002cb14
   1b024:	.word	0x0002c95c
   1b028:	.word	0x0000f0f4
   1b02c:	.word	0x0000eef4
   1b030:	.word	0x0000ef04
   1b034:	.word	0x0000eeee
   1b038:	.word	0x0000eefe
   1b03c:	.word	0x0000ef62
   1b040:	.word	0x0000ef72
   1b044:	.word	0x0000ef8e
   1b048:	.word	0x0000ef9e

0001b04c <sf_gen_atmmulti_abbrev>:
   1b04c:	push	{r4, r5, fp, lr}
   1b050:	add	fp, sp, #8
   1b054:	sub	sp, sp, #8
   1b058:	cmp	r0, #69	; 0x45
   1b05c:	bgt	1b08c <sf_gen_atmmulti_abbrev+0x40>
   1b060:	cmp	r0, #28
   1b064:	bne	1b16c <sf_gen_atmmulti_abbrev+0x120>
   1b068:	ldr	r0, [pc, #2688]	; 1baf0 <sf_gen_atmmulti_abbrev+0xaa4>
   1b06c:	add	r0, pc, r0
   1b070:	ldrb	r0, [r0]
   1b074:	cmp	r0, #0
   1b078:	beq	1babc <sf_gen_atmmulti_abbrev+0xa70>
   1b07c:	mov	r0, #29
   1b080:	sub	sp, fp, #8
   1b084:	pop	{r4, r5, fp, lr}
   1b088:	b	1b04c <sf_gen_atmmulti_abbrev>
   1b08c:	cmp	r0, #70	; 0x46
   1b090:	bne	1b24c <sf_gen_atmmulti_abbrev+0x200>
   1b094:	ldr	r0, [pc, #2648]	; 1baf4 <sf_gen_atmmulti_abbrev+0xaa8>
   1b098:	add	r0, pc, r0
   1b09c:	ldrb	r0, [r0]
   1b0a0:	cmp	r0, #0
   1b0a4:	beq	1bac8 <sf_gen_atmmulti_abbrev+0xa7c>
   1b0a8:	mov	r0, #54	; 0x36
   1b0ac:	mov	r1, #5
   1b0b0:	mov	r2, #16
   1b0b4:	mov	r3, #0
   1b0b8:	bl	19400 <sf_gen_atmfield_code>
   1b0bc:	mov	r5, r0
   1b0c0:	mov	r0, #54	; 0x36
   1b0c4:	mov	r1, #2
   1b0c8:	mov	r2, #16
   1b0cc:	mov	r3, #0
   1b0d0:	bl	19400 <sf_gen_atmfield_code>
   1b0d4:	mov	r4, r0
   1b0d8:	ldr	r0, [r5, #44]	; 0x2c
   1b0dc:	cmp	r5, #0
   1b0e0:	clz	r0, r0
   1b0e4:	lsr	r0, r0, #5
   1b0e8:	str	r0, [r5, #44]	; 0x2c
   1b0ec:	beq	1b128 <sf_gen_atmmulti_abbrev+0xdc>
   1b0f0:	ldr	r1, [r4, #96]	; 0x60
   1b0f4:	mov	r2, r5
   1b0f8:	b	1b100 <sf_gen_atmmulti_abbrev+0xb4>
   1b0fc:	ldr	r0, [r2, #44]	; 0x2c
   1b100:	cmp	r0, #0
   1b104:	mov	r0, #84	; 0x54
   1b108:	add	r3, r2, #84	; 0x54
   1b10c:	movweq	r0, #60	; 0x3c
   1b110:	addeq	r3, r2, #60	; 0x3c
   1b114:	ldr	r2, [r2, r0]
   1b118:	str	r1, [r3]
   1b11c:	cmp	r2, #0
   1b120:	bne	1b0fc <sf_gen_atmmulti_abbrev+0xb0>
   1b124:	ldr	r0, [r5, #44]	; 0x2c
   1b128:	clz	r0, r0
   1b12c:	cmp	r4, #0
   1b130:	lsr	r0, r0, #5
   1b134:	str	r0, [r5, #44]	; 0x2c
   1b138:	str	r4, [sp, #4]
   1b13c:	beq	1b32c <sf_gen_atmmulti_abbrev+0x2e0>
   1b140:	mov	r1, r4
   1b144:	ldr	r2, [r1, #44]	; 0x2c
   1b148:	add	r0, r1, #84	; 0x54
   1b14c:	cmp	r2, #0
   1b150:	mov	r2, #84	; 0x54
   1b154:	movweq	r2, #60	; 0x3c
   1b158:	addeq	r0, r1, #60	; 0x3c
   1b15c:	ldr	r1, [r1, r2]
   1b160:	cmp	r1, #0
   1b164:	bne	1b144 <sf_gen_atmmulti_abbrev+0xf8>
   1b168:	b	1b330 <sf_gen_atmmulti_abbrev+0x2e4>
   1b16c:	cmp	r0, #29
   1b170:	bne	1bab8 <sf_gen_atmmulti_abbrev+0xa6c>
   1b174:	ldr	r0, [pc, #2416]	; 1baec <sf_gen_atmmulti_abbrev+0xaa0>
   1b178:	add	r0, pc, r0
   1b17c:	ldrb	r0, [r0]
   1b180:	cmp	r0, #0
   1b184:	beq	1bad4 <sf_gen_atmmulti_abbrev+0xa88>
   1b188:	mov	r0, #52	; 0x34
   1b18c:	mov	r1, #3
   1b190:	mov	r2, #16
   1b194:	mov	r3, #0
   1b198:	bl	19400 <sf_gen_atmfield_code>
   1b19c:	mov	r5, r0
   1b1a0:	mov	r0, #52	; 0x34
   1b1a4:	mov	r1, #4
   1b1a8:	mov	r2, #16
   1b1ac:	mov	r3, #0
   1b1b0:	bl	19400 <sf_gen_atmfield_code>
   1b1b4:	mov	r4, r0
   1b1b8:	ldr	r0, [r5, #44]	; 0x2c
   1b1bc:	cmp	r5, #0
   1b1c0:	clz	r0, r0
   1b1c4:	lsr	r0, r0, #5
   1b1c8:	str	r0, [r5, #44]	; 0x2c
   1b1cc:	beq	1b208 <sf_gen_atmmulti_abbrev+0x1bc>
   1b1d0:	ldr	r1, [r4, #96]	; 0x60
   1b1d4:	mov	r2, r5
   1b1d8:	b	1b1e0 <sf_gen_atmmulti_abbrev+0x194>
   1b1dc:	ldr	r0, [r2, #44]	; 0x2c
   1b1e0:	cmp	r0, #0
   1b1e4:	mov	r0, #84	; 0x54
   1b1e8:	add	r3, r2, #84	; 0x54
   1b1ec:	movweq	r0, #60	; 0x3c
   1b1f0:	addeq	r3, r2, #60	; 0x3c
   1b1f4:	ldr	r2, [r2, r0]
   1b1f8:	str	r1, [r3]
   1b1fc:	cmp	r2, #0
   1b200:	bne	1b1dc <sf_gen_atmmulti_abbrev+0x190>
   1b204:	ldr	r0, [r5, #44]	; 0x2c
   1b208:	clz	r0, r0
   1b20c:	cmp	r4, #0
   1b210:	lsr	r0, r0, #5
   1b214:	str	r0, [r5, #44]	; 0x2c
   1b218:	str	r4, [sp, #4]
   1b21c:	beq	1b6d0 <sf_gen_atmmulti_abbrev+0x684>
   1b220:	mov	r1, r4
   1b224:	ldr	r2, [r1, #44]	; 0x2c
   1b228:	add	r0, r1, #84	; 0x54
   1b22c:	cmp	r2, #0
   1b230:	mov	r2, #84	; 0x54
   1b234:	movweq	r2, #60	; 0x3c
   1b238:	addeq	r0, r1, #60	; 0x3c
   1b23c:	ldr	r1, [r1, r2]
   1b240:	cmp	r1, #0
   1b244:	bne	1b224 <sf_gen_atmmulti_abbrev+0x1d8>
   1b248:	b	1b6d4 <sf_gen_atmmulti_abbrev+0x688>
   1b24c:	cmp	r0, #71	; 0x47
   1b250:	bne	1bab8 <sf_gen_atmmulti_abbrev+0xa6c>
   1b254:	ldr	r0, [pc, #2204]	; 1baf8 <sf_gen_atmmulti_abbrev+0xaac>
   1b258:	add	r0, pc, r0
   1b25c:	ldrb	r0, [r0]
   1b260:	cmp	r0, #0
   1b264:	beq	1bae0 <sf_gen_atmmulti_abbrev+0xa94>
   1b268:	mov	r0, #54	; 0x36
   1b26c:	mov	r1, #5
   1b270:	mov	r2, #16
   1b274:	mov	r3, #0
   1b278:	bl	19400 <sf_gen_atmfield_code>
   1b27c:	mov	r5, r0
   1b280:	mov	r0, #54	; 0x36
   1b284:	mov	r1, #2
   1b288:	mov	r2, #16
   1b28c:	mov	r3, #0
   1b290:	bl	19400 <sf_gen_atmfield_code>
   1b294:	mov	r4, r0
   1b298:	ldr	r0, [r5, #44]	; 0x2c
   1b29c:	cmp	r5, #0
   1b2a0:	clz	r0, r0
   1b2a4:	lsr	r0, r0, #5
   1b2a8:	str	r0, [r5, #44]	; 0x2c
   1b2ac:	beq	1b2e8 <sf_gen_atmmulti_abbrev+0x29c>
   1b2b0:	ldr	r1, [r4, #96]	; 0x60
   1b2b4:	mov	r2, r5
   1b2b8:	b	1b2c0 <sf_gen_atmmulti_abbrev+0x274>
   1b2bc:	ldr	r0, [r2, #44]	; 0x2c
   1b2c0:	cmp	r0, #0
   1b2c4:	mov	r0, #84	; 0x54
   1b2c8:	add	r3, r2, #84	; 0x54
   1b2cc:	movweq	r0, #60	; 0x3c
   1b2d0:	addeq	r3, r2, #60	; 0x3c
   1b2d4:	ldr	r2, [r2, r0]
   1b2d8:	str	r1, [r3]
   1b2dc:	cmp	r2, #0
   1b2e0:	bne	1b2bc <sf_gen_atmmulti_abbrev+0x270>
   1b2e4:	ldr	r0, [r5, #44]	; 0x2c
   1b2e8:	clz	r0, r0
   1b2ec:	cmp	r4, #0
   1b2f0:	lsr	r0, r0, #5
   1b2f4:	str	r0, [r5, #44]	; 0x2c
   1b2f8:	str	r4, [sp, #4]
   1b2fc:	beq	1b7a0 <sf_gen_atmmulti_abbrev+0x754>
   1b300:	mov	r1, r4
   1b304:	ldr	r2, [r1, #44]	; 0x2c
   1b308:	add	r0, r1, #84	; 0x54
   1b30c:	cmp	r2, #0
   1b310:	mov	r2, #84	; 0x54
   1b314:	movweq	r2, #60	; 0x3c
   1b318:	addeq	r0, r1, #60	; 0x3c
   1b31c:	ldr	r1, [r1, r2]
   1b320:	cmp	r1, #0
   1b324:	bne	1b304 <sf_gen_atmmulti_abbrev+0x2b8>
   1b328:	b	1b7a4 <sf_gen_atmmulti_abbrev+0x758>
   1b32c:	add	r0, sp, #4
   1b330:	str	r5, [r0]
   1b334:	mov	r1, #7
   1b338:	mov	r2, #16
   1b33c:	mov	r3, #0
   1b340:	ldr	r0, [r5, #96]	; 0x60
   1b344:	str	r0, [r4, #96]	; 0x60
   1b348:	mov	r0, #54	; 0x36
   1b34c:	bl	19400 <sf_gen_atmfield_code>
   1b350:	ldr	r1, [r0, #44]	; 0x2c
   1b354:	cmp	r0, #0
   1b358:	clz	r1, r1
   1b35c:	lsr	r1, r1, #5
   1b360:	str	r1, [r0, #44]	; 0x2c
   1b364:	beq	1b3a0 <sf_gen_atmmulti_abbrev+0x354>
   1b368:	ldr	r2, [r4, #96]	; 0x60
   1b36c:	mov	r3, r0
   1b370:	b	1b378 <sf_gen_atmmulti_abbrev+0x32c>
   1b374:	ldr	r1, [r3, #44]	; 0x2c
   1b378:	cmp	r1, #0
   1b37c:	mov	r1, #84	; 0x54
   1b380:	add	r5, r3, #84	; 0x54
   1b384:	movweq	r1, #60	; 0x3c
   1b388:	addeq	r5, r3, #60	; 0x3c
   1b38c:	ldr	r3, [r3, r1]
   1b390:	str	r2, [r5]
   1b394:	cmp	r3, #0
   1b398:	bne	1b374 <sf_gen_atmmulti_abbrev+0x328>
   1b39c:	ldr	r1, [r0, #44]	; 0x2c
   1b3a0:	clz	r1, r1
   1b3a4:	cmp	r4, #0
   1b3a8:	lsr	r1, r1, #5
   1b3ac:	str	r1, [r0, #44]	; 0x2c
   1b3b0:	str	r4, [sp, #4]
   1b3b4:	beq	1b3e4 <sf_gen_atmmulti_abbrev+0x398>
   1b3b8:	mov	r2, r4
   1b3bc:	ldr	r3, [r2, #44]	; 0x2c
   1b3c0:	add	r1, r2, #84	; 0x54
   1b3c4:	cmp	r3, #0
   1b3c8:	mov	r3, #84	; 0x54
   1b3cc:	movweq	r3, #60	; 0x3c
   1b3d0:	addeq	r1, r2, #60	; 0x3c
   1b3d4:	ldr	r2, [r2, r3]
   1b3d8:	cmp	r2, #0
   1b3dc:	bne	1b3bc <sf_gen_atmmulti_abbrev+0x370>
   1b3e0:	b	1b3e8 <sf_gen_atmmulti_abbrev+0x39c>
   1b3e4:	add	r1, sp, #4
   1b3e8:	str	r0, [r1]
   1b3ec:	mov	r1, #15
   1b3f0:	mov	r2, #16
   1b3f4:	mov	r3, #0
   1b3f8:	ldr	r0, [r0, #96]	; 0x60
   1b3fc:	str	r0, [r4, #96]	; 0x60
   1b400:	mov	r0, #54	; 0x36
   1b404:	bl	19400 <sf_gen_atmfield_code>
   1b408:	ldr	r1, [r0, #44]	; 0x2c
   1b40c:	cmp	r0, #0
   1b410:	clz	r1, r1
   1b414:	lsr	r1, r1, #5
   1b418:	str	r1, [r0, #44]	; 0x2c
   1b41c:	beq	1b458 <sf_gen_atmmulti_abbrev+0x40c>
   1b420:	ldr	r2, [r4, #96]	; 0x60
   1b424:	mov	r3, r0
   1b428:	b	1b430 <sf_gen_atmmulti_abbrev+0x3e4>
   1b42c:	ldr	r1, [r3, #44]	; 0x2c
   1b430:	cmp	r1, #0
   1b434:	mov	r1, #84	; 0x54
   1b438:	add	r5, r3, #84	; 0x54
   1b43c:	movweq	r1, #60	; 0x3c
   1b440:	addeq	r5, r3, #60	; 0x3c
   1b444:	ldr	r3, [r3, r1]
   1b448:	str	r2, [r5]
   1b44c:	cmp	r3, #0
   1b450:	bne	1b42c <sf_gen_atmmulti_abbrev+0x3e0>
   1b454:	ldr	r1, [r0, #44]	; 0x2c
   1b458:	clz	r1, r1
   1b45c:	cmp	r4, #0
   1b460:	lsr	r1, r1, #5
   1b464:	str	r1, [r0, #44]	; 0x2c
   1b468:	str	r4, [sp, #4]
   1b46c:	beq	1b49c <sf_gen_atmmulti_abbrev+0x450>
   1b470:	mov	r2, r4
   1b474:	ldr	r3, [r2, #44]	; 0x2c
   1b478:	add	r1, r2, #84	; 0x54
   1b47c:	cmp	r3, #0
   1b480:	mov	r3, #84	; 0x54
   1b484:	movweq	r3, #60	; 0x3c
   1b488:	addeq	r1, r2, #60	; 0x3c
   1b48c:	ldr	r2, [r2, r3]
   1b490:	cmp	r2, #0
   1b494:	bne	1b474 <sf_gen_atmmulti_abbrev+0x428>
   1b498:	b	1b4a0 <sf_gen_atmmulti_abbrev+0x454>
   1b49c:	add	r1, sp, #4
   1b4a0:	str	r0, [r1]
   1b4a4:	mov	r1, #77	; 0x4d
   1b4a8:	mov	r2, #16
   1b4ac:	mov	r3, #0
   1b4b0:	ldr	r0, [r0, #96]	; 0x60
   1b4b4:	str	r0, [r4, #96]	; 0x60
   1b4b8:	mov	r0, #54	; 0x36
   1b4bc:	bl	19400 <sf_gen_atmfield_code>
   1b4c0:	ldr	r1, [r0, #44]	; 0x2c
   1b4c4:	cmp	r0, #0
   1b4c8:	clz	r1, r1
   1b4cc:	lsr	r1, r1, #5
   1b4d0:	str	r1, [r0, #44]	; 0x2c
   1b4d4:	beq	1b510 <sf_gen_atmmulti_abbrev+0x4c4>
   1b4d8:	ldr	r2, [r4, #96]	; 0x60
   1b4dc:	mov	r3, r0
   1b4e0:	b	1b4e8 <sf_gen_atmmulti_abbrev+0x49c>
   1b4e4:	ldr	r1, [r3, #44]	; 0x2c
   1b4e8:	cmp	r1, #0
   1b4ec:	mov	r1, #84	; 0x54
   1b4f0:	add	r5, r3, #84	; 0x54
   1b4f4:	movweq	r1, #60	; 0x3c
   1b4f8:	addeq	r5, r3, #60	; 0x3c
   1b4fc:	ldr	r3, [r3, r1]
   1b500:	str	r2, [r5]
   1b504:	cmp	r3, #0
   1b508:	bne	1b4e4 <sf_gen_atmmulti_abbrev+0x498>
   1b50c:	ldr	r1, [r0, #44]	; 0x2c
   1b510:	clz	r1, r1
   1b514:	cmp	r4, #0
   1b518:	lsr	r1, r1, #5
   1b51c:	str	r1, [r0, #44]	; 0x2c
   1b520:	str	r4, [sp, #4]
   1b524:	beq	1b554 <sf_gen_atmmulti_abbrev+0x508>
   1b528:	mov	r2, r4
   1b52c:	ldr	r3, [r2, #44]	; 0x2c
   1b530:	add	r1, r2, #84	; 0x54
   1b534:	cmp	r3, #0
   1b538:	mov	r3, #84	; 0x54
   1b53c:	movweq	r3, #60	; 0x3c
   1b540:	addeq	r1, r2, #60	; 0x3c
   1b544:	ldr	r2, [r2, r3]
   1b548:	cmp	r2, #0
   1b54c:	bne	1b52c <sf_gen_atmmulti_abbrev+0x4e0>
   1b550:	b	1b558 <sf_gen_atmmulti_abbrev+0x50c>
   1b554:	add	r1, sp, #4
   1b558:	str	r0, [r1]
   1b55c:	mov	r1, #90	; 0x5a
   1b560:	mov	r2, #16
   1b564:	mov	r3, #0
   1b568:	ldr	r0, [r0, #96]	; 0x60
   1b56c:	str	r0, [r4, #96]	; 0x60
   1b570:	mov	r0, #54	; 0x36
   1b574:	bl	19400 <sf_gen_atmfield_code>
   1b578:	ldr	r1, [r0, #44]	; 0x2c
   1b57c:	cmp	r0, #0
   1b580:	clz	r1, r1
   1b584:	lsr	r1, r1, #5
   1b588:	str	r1, [r0, #44]	; 0x2c
   1b58c:	beq	1b5c8 <sf_gen_atmmulti_abbrev+0x57c>
   1b590:	ldr	r2, [r4, #96]	; 0x60
   1b594:	mov	r3, r0
   1b598:	b	1b5a0 <sf_gen_atmmulti_abbrev+0x554>
   1b59c:	ldr	r1, [r3, #44]	; 0x2c
   1b5a0:	cmp	r1, #0
   1b5a4:	mov	r1, #84	; 0x54
   1b5a8:	add	r5, r3, #84	; 0x54
   1b5ac:	movweq	r1, #60	; 0x3c
   1b5b0:	addeq	r5, r3, #60	; 0x3c
   1b5b4:	ldr	r3, [r3, r1]
   1b5b8:	str	r2, [r5]
   1b5bc:	cmp	r3, #0
   1b5c0:	bne	1b59c <sf_gen_atmmulti_abbrev+0x550>
   1b5c4:	ldr	r1, [r0, #44]	; 0x2c
   1b5c8:	clz	r1, r1
   1b5cc:	cmp	r4, #0
   1b5d0:	lsr	r1, r1, #5
   1b5d4:	str	r1, [r0, #44]	; 0x2c
   1b5d8:	str	r4, [sp, #4]
   1b5dc:	beq	1b60c <sf_gen_atmmulti_abbrev+0x5c0>
   1b5e0:	mov	r2, r4
   1b5e4:	ldr	r3, [r2, #44]	; 0x2c
   1b5e8:	add	r1, r2, #84	; 0x54
   1b5ec:	cmp	r3, #0
   1b5f0:	mov	r3, #84	; 0x54
   1b5f4:	movweq	r3, #60	; 0x3c
   1b5f8:	addeq	r1, r2, #60	; 0x3c
   1b5fc:	ldr	r2, [r2, r3]
   1b600:	cmp	r2, #0
   1b604:	bne	1b5e4 <sf_gen_atmmulti_abbrev+0x598>
   1b608:	b	1b610 <sf_gen_atmmulti_abbrev+0x5c4>
   1b60c:	add	r1, sp, #4
   1b610:	str	r0, [r1]
   1b614:	ldr	r0, [r0, #96]	; 0x60
   1b618:	str	r0, [r4, #96]	; 0x60
   1b61c:	mov	r0, #26
   1b620:	bl	19788 <sf_gen_atmtype_abbrev>
   1b624:	cmp	r0, #0
   1b628:	beq	1b65c <sf_gen_atmmulti_abbrev+0x610>
   1b62c:	ldr	r1, [r4, #96]	; 0x60
   1b630:	mov	r2, r0
   1b634:	ldr	r3, [r2, #44]	; 0x2c
   1b638:	add	r5, r2, #84	; 0x54
   1b63c:	cmp	r3, #0
   1b640:	mov	r3, #84	; 0x54
   1b644:	movweq	r3, #60	; 0x3c
   1b648:	addeq	r5, r2, #60	; 0x3c
   1b64c:	ldr	r2, [r2, r3]
   1b650:	str	r1, [r5]
   1b654:	cmp	r2, #0
   1b658:	bne	1b634 <sf_gen_atmmulti_abbrev+0x5e8>
   1b65c:	ldr	r1, [r0, #44]	; 0x2c
   1b660:	cmp	r4, #0
   1b664:	clz	r1, r1
   1b668:	lsr	r1, r1, #5
   1b66c:	str	r1, [r0, #44]	; 0x2c
   1b670:	ldr	r2, [r4, #44]	; 0x2c
   1b674:	clz	r1, r2
   1b678:	lsr	r1, r1, #5
   1b67c:	str	r1, [r4, #44]	; 0x2c
   1b680:	str	r4, [sp, #4]
   1b684:	beq	1ba8c <sf_gen_atmmulti_abbrev+0xa40>
   1b688:	cmp	r2, #0
   1b68c:	mov	r2, #60	; 0x3c
   1b690:	add	r1, r4, #60	; 0x3c
   1b694:	movweq	r2, #84	; 0x54
   1b698:	addeq	r1, r4, #84	; 0x54
   1b69c:	ldr	r2, [r4, r2]
   1b6a0:	cmp	r2, #0
   1b6a4:	beq	1ba90 <sf_gen_atmmulti_abbrev+0xa44>
   1b6a8:	ldr	r3, [r2, #44]	; 0x2c
   1b6ac:	add	r1, r2, #84	; 0x54
   1b6b0:	cmp	r3, #0
   1b6b4:	mov	r3, #84	; 0x54
   1b6b8:	movweq	r3, #60	; 0x3c
   1b6bc:	addeq	r1, r2, #60	; 0x3c
   1b6c0:	ldr	r2, [r2, r3]
   1b6c4:	cmp	r2, #0
   1b6c8:	bne	1b6a8 <sf_gen_atmmulti_abbrev+0x65c>
   1b6cc:	b	1ba90 <sf_gen_atmmulti_abbrev+0xa44>
   1b6d0:	add	r0, sp, #4
   1b6d4:	str	r5, [r0]
   1b6d8:	mov	r1, #0
   1b6dc:	mov	r2, #16
   1b6e0:	mov	r3, #0
   1b6e4:	ldr	r0, [r5, #96]	; 0x60
   1b6e8:	str	r0, [r4, #96]	; 0x60
   1b6ec:	mov	r0, #51	; 0x33
   1b6f0:	bl	19400 <sf_gen_atmfield_code>
   1b6f4:	cmp	r0, #0
   1b6f8:	beq	1b72c <sf_gen_atmmulti_abbrev+0x6e0>
   1b6fc:	ldr	r1, [r4, #96]	; 0x60
   1b700:	mov	r2, r0
   1b704:	ldr	r3, [r2, #44]	; 0x2c
   1b708:	add	r5, r2, #84	; 0x54
   1b70c:	cmp	r3, #0
   1b710:	mov	r3, #84	; 0x54
   1b714:	movweq	r3, #60	; 0x3c
   1b718:	addeq	r5, r2, #60	; 0x3c
   1b71c:	ldr	r2, [r2, r3]
   1b720:	str	r1, [r5]
   1b724:	cmp	r2, #0
   1b728:	bne	1b704 <sf_gen_atmmulti_abbrev+0x6b8>
   1b72c:	ldr	r1, [r0, #44]	; 0x2c
   1b730:	cmp	r4, #0
   1b734:	clz	r1, r1
   1b738:	lsr	r1, r1, #5
   1b73c:	str	r1, [r0, #44]	; 0x2c
   1b740:	ldr	r2, [r4, #44]	; 0x2c
   1b744:	clz	r1, r2
   1b748:	lsr	r1, r1, #5
   1b74c:	str	r1, [r4, #44]	; 0x2c
   1b750:	str	r4, [sp, #4]
   1b754:	beq	1ba8c <sf_gen_atmmulti_abbrev+0xa40>
   1b758:	cmp	r2, #0
   1b75c:	mov	r2, #60	; 0x3c
   1b760:	add	r1, r4, #60	; 0x3c
   1b764:	movweq	r2, #84	; 0x54
   1b768:	addeq	r1, r4, #84	; 0x54
   1b76c:	ldr	r2, [r4, r2]
   1b770:	cmp	r2, #0
   1b774:	beq	1ba90 <sf_gen_atmmulti_abbrev+0xa44>
   1b778:	ldr	r3, [r2, #44]	; 0x2c
   1b77c:	add	r1, r2, #84	; 0x54
   1b780:	cmp	r3, #0
   1b784:	mov	r3, #84	; 0x54
   1b788:	movweq	r3, #60	; 0x3c
   1b78c:	addeq	r1, r2, #60	; 0x3c
   1b790:	ldr	r2, [r2, r3]
   1b794:	cmp	r2, #0
   1b798:	bne	1b778 <sf_gen_atmmulti_abbrev+0x72c>
   1b79c:	b	1ba90 <sf_gen_atmmulti_abbrev+0xa44>
   1b7a0:	add	r0, sp, #4
   1b7a4:	str	r5, [r0]
   1b7a8:	mov	r1, #7
   1b7ac:	mov	r2, #16
   1b7b0:	mov	r3, #0
   1b7b4:	ldr	r0, [r5, #96]	; 0x60
   1b7b8:	str	r0, [r4, #96]	; 0x60
   1b7bc:	mov	r0, #54	; 0x36
   1b7c0:	bl	19400 <sf_gen_atmfield_code>
   1b7c4:	ldr	r1, [r0, #44]	; 0x2c
   1b7c8:	cmp	r0, #0
   1b7cc:	clz	r1, r1
   1b7d0:	lsr	r1, r1, #5
   1b7d4:	str	r1, [r0, #44]	; 0x2c
   1b7d8:	beq	1b814 <sf_gen_atmmulti_abbrev+0x7c8>
   1b7dc:	ldr	r2, [r4, #96]	; 0x60
   1b7e0:	mov	r3, r0
   1b7e4:	b	1b7ec <sf_gen_atmmulti_abbrev+0x7a0>
   1b7e8:	ldr	r1, [r3, #44]	; 0x2c
   1b7ec:	cmp	r1, #0
   1b7f0:	mov	r1, #84	; 0x54
   1b7f4:	add	r5, r3, #84	; 0x54
   1b7f8:	movweq	r1, #60	; 0x3c
   1b7fc:	addeq	r5, r3, #60	; 0x3c
   1b800:	ldr	r3, [r3, r1]
   1b804:	str	r2, [r5]
   1b808:	cmp	r3, #0
   1b80c:	bne	1b7e8 <sf_gen_atmmulti_abbrev+0x79c>
   1b810:	ldr	r1, [r0, #44]	; 0x2c
   1b814:	clz	r1, r1
   1b818:	cmp	r4, #0
   1b81c:	lsr	r1, r1, #5
   1b820:	str	r1, [r0, #44]	; 0x2c
   1b824:	str	r4, [sp, #4]
   1b828:	beq	1b858 <sf_gen_atmmulti_abbrev+0x80c>
   1b82c:	mov	r2, r4
   1b830:	ldr	r3, [r2, #44]	; 0x2c
   1b834:	add	r1, r2, #84	; 0x54
   1b838:	cmp	r3, #0
   1b83c:	mov	r3, #84	; 0x54
   1b840:	movweq	r3, #60	; 0x3c
   1b844:	addeq	r1, r2, #60	; 0x3c
   1b848:	ldr	r2, [r2, r3]
   1b84c:	cmp	r2, #0
   1b850:	bne	1b830 <sf_gen_atmmulti_abbrev+0x7e4>
   1b854:	b	1b85c <sf_gen_atmmulti_abbrev+0x810>
   1b858:	add	r1, sp, #4
   1b85c:	str	r0, [r1]
   1b860:	mov	r1, #77	; 0x4d
   1b864:	mov	r2, #16
   1b868:	mov	r3, #0
   1b86c:	ldr	r0, [r0, #96]	; 0x60
   1b870:	str	r0, [r4, #96]	; 0x60
   1b874:	mov	r0, #54	; 0x36
   1b878:	bl	19400 <sf_gen_atmfield_code>
   1b87c:	ldr	r1, [r0, #44]	; 0x2c
   1b880:	cmp	r0, #0
   1b884:	clz	r1, r1
   1b888:	lsr	r1, r1, #5
   1b88c:	str	r1, [r0, #44]	; 0x2c
   1b890:	beq	1b8cc <sf_gen_atmmulti_abbrev+0x880>
   1b894:	ldr	r2, [r4, #96]	; 0x60
   1b898:	mov	r3, r0
   1b89c:	b	1b8a4 <sf_gen_atmmulti_abbrev+0x858>
   1b8a0:	ldr	r1, [r3, #44]	; 0x2c
   1b8a4:	cmp	r1, #0
   1b8a8:	mov	r1, #84	; 0x54
   1b8ac:	add	r5, r3, #84	; 0x54
   1b8b0:	movweq	r1, #60	; 0x3c
   1b8b4:	addeq	r5, r3, #60	; 0x3c
   1b8b8:	ldr	r3, [r3, r1]
   1b8bc:	str	r2, [r5]
   1b8c0:	cmp	r3, #0
   1b8c4:	bne	1b8a0 <sf_gen_atmmulti_abbrev+0x854>
   1b8c8:	ldr	r1, [r0, #44]	; 0x2c
   1b8cc:	clz	r1, r1
   1b8d0:	cmp	r4, #0
   1b8d4:	lsr	r1, r1, #5
   1b8d8:	str	r1, [r0, #44]	; 0x2c
   1b8dc:	str	r4, [sp, #4]
   1b8e0:	beq	1b910 <sf_gen_atmmulti_abbrev+0x8c4>
   1b8e4:	mov	r2, r4
   1b8e8:	ldr	r3, [r2, #44]	; 0x2c
   1b8ec:	add	r1, r2, #84	; 0x54
   1b8f0:	cmp	r3, #0
   1b8f4:	mov	r3, #84	; 0x54
   1b8f8:	movweq	r3, #60	; 0x3c
   1b8fc:	addeq	r1, r2, #60	; 0x3c
   1b900:	ldr	r2, [r2, r3]
   1b904:	cmp	r2, #0
   1b908:	bne	1b8e8 <sf_gen_atmmulti_abbrev+0x89c>
   1b90c:	b	1b914 <sf_gen_atmmulti_abbrev+0x8c8>
   1b910:	add	r1, sp, #4
   1b914:	str	r0, [r1]
   1b918:	mov	r1, #90	; 0x5a
   1b91c:	mov	r2, #16
   1b920:	mov	r3, #0
   1b924:	ldr	r0, [r0, #96]	; 0x60
   1b928:	str	r0, [r4, #96]	; 0x60
   1b92c:	mov	r0, #54	; 0x36
   1b930:	bl	19400 <sf_gen_atmfield_code>
   1b934:	ldr	r1, [r0, #44]	; 0x2c
   1b938:	cmp	r0, #0
   1b93c:	clz	r1, r1
   1b940:	lsr	r1, r1, #5
   1b944:	str	r1, [r0, #44]	; 0x2c
   1b948:	beq	1b984 <sf_gen_atmmulti_abbrev+0x938>
   1b94c:	ldr	r2, [r4, #96]	; 0x60
   1b950:	mov	r3, r0
   1b954:	b	1b95c <sf_gen_atmmulti_abbrev+0x910>
   1b958:	ldr	r1, [r3, #44]	; 0x2c
   1b95c:	cmp	r1, #0
   1b960:	mov	r1, #84	; 0x54
   1b964:	add	r5, r3, #84	; 0x54
   1b968:	movweq	r1, #60	; 0x3c
   1b96c:	addeq	r5, r3, #60	; 0x3c
   1b970:	ldr	r3, [r3, r1]
   1b974:	str	r2, [r5]
   1b978:	cmp	r3, #0
   1b97c:	bne	1b958 <sf_gen_atmmulti_abbrev+0x90c>
   1b980:	ldr	r1, [r0, #44]	; 0x2c
   1b984:	clz	r1, r1
   1b988:	cmp	r4, #0
   1b98c:	lsr	r1, r1, #5
   1b990:	str	r1, [r0, #44]	; 0x2c
   1b994:	str	r4, [sp, #4]
   1b998:	beq	1b9c8 <sf_gen_atmmulti_abbrev+0x97c>
   1b99c:	mov	r2, r4
   1b9a0:	ldr	r3, [r2, #44]	; 0x2c
   1b9a4:	add	r1, r2, #84	; 0x54
   1b9a8:	cmp	r3, #0
   1b9ac:	mov	r3, #84	; 0x54
   1b9b0:	movweq	r3, #60	; 0x3c
   1b9b4:	addeq	r1, r2, #60	; 0x3c
   1b9b8:	ldr	r2, [r2, r3]
   1b9bc:	cmp	r2, #0
   1b9c0:	bne	1b9a0 <sf_gen_atmmulti_abbrev+0x954>
   1b9c4:	b	1b9cc <sf_gen_atmmulti_abbrev+0x980>
   1b9c8:	add	r1, sp, #4
   1b9cc:	str	r0, [r1]
   1b9d0:	ldr	r0, [r0, #96]	; 0x60
   1b9d4:	str	r0, [r4, #96]	; 0x60
   1b9d8:	mov	r0, #22
   1b9dc:	bl	19788 <sf_gen_atmtype_abbrev>
   1b9e0:	cmp	r0, #0
   1b9e4:	beq	1ba18 <sf_gen_atmmulti_abbrev+0x9cc>
   1b9e8:	ldr	r1, [r4, #96]	; 0x60
   1b9ec:	mov	r2, r0
   1b9f0:	ldr	r3, [r2, #44]	; 0x2c
   1b9f4:	add	r5, r2, #84	; 0x54
   1b9f8:	cmp	r3, #0
   1b9fc:	mov	r3, #84	; 0x54
   1ba00:	movweq	r3, #60	; 0x3c
   1ba04:	addeq	r5, r2, #60	; 0x3c
   1ba08:	ldr	r2, [r2, r3]
   1ba0c:	str	r1, [r5]
   1ba10:	cmp	r2, #0
   1ba14:	bne	1b9f0 <sf_gen_atmmulti_abbrev+0x9a4>
   1ba18:	ldr	r1, [r0, #44]	; 0x2c
   1ba1c:	cmp	r4, #0
   1ba20:	clz	r1, r1
   1ba24:	lsr	r1, r1, #5
   1ba28:	str	r1, [r0, #44]	; 0x2c
   1ba2c:	ldr	r2, [r4, #44]	; 0x2c
   1ba30:	clz	r1, r2
   1ba34:	lsr	r1, r1, #5
   1ba38:	str	r1, [r4, #44]	; 0x2c
   1ba3c:	str	r4, [sp, #4]
   1ba40:	beq	1ba8c <sf_gen_atmmulti_abbrev+0xa40>
   1ba44:	cmp	r2, #0
   1ba48:	mov	r2, #60	; 0x3c
   1ba4c:	add	r1, r4, #60	; 0x3c
   1ba50:	movweq	r2, #84	; 0x54
   1ba54:	addeq	r1, r4, #84	; 0x54
   1ba58:	ldr	r2, [r4, r2]
   1ba5c:	cmp	r2, #0
   1ba60:	beq	1ba90 <sf_gen_atmmulti_abbrev+0xa44>
   1ba64:	ldr	r3, [r2, #44]	; 0x2c
   1ba68:	add	r1, r2, #84	; 0x54
   1ba6c:	cmp	r3, #0
   1ba70:	mov	r3, #84	; 0x54
   1ba74:	movweq	r3, #60	; 0x3c
   1ba78:	addeq	r1, r2, #60	; 0x3c
   1ba7c:	ldr	r2, [r2, r3]
   1ba80:	cmp	r2, #0
   1ba84:	bne	1ba64 <sf_gen_atmmulti_abbrev+0xa18>
   1ba88:	b	1ba90 <sf_gen_atmmulti_abbrev+0xa44>
   1ba8c:	add	r1, sp, #4
   1ba90:	str	r0, [r1]
   1ba94:	ldr	r1, [r4, #44]	; 0x2c
   1ba98:	clz	r1, r1
   1ba9c:	lsr	r1, r1, #5
   1baa0:	str	r1, [r4, #44]	; 0x2c
   1baa4:	ldr	r0, [r0, #96]	; 0x60
   1baa8:	str	r0, [r4, #96]	; 0x60
   1baac:	mov	r0, r4
   1bab0:	sub	sp, fp, #8
   1bab4:	pop	{r4, r5, fp, pc}
   1bab8:	bl	fc4 <abort@plt>
   1babc:	ldr	r0, [pc, #56]	; 1bafc <sf_gen_atmmulti_abbrev+0xab0>
   1bac0:	add	r0, pc, r0
   1bac4:	bl	2124 <sf_bpf_error>
   1bac8:	ldr	r0, [pc, #52]	; 1bb04 <sf_gen_atmmulti_abbrev+0xab8>
   1bacc:	add	r0, pc, r0
   1bad0:	bl	2124 <sf_bpf_error>
   1bad4:	ldr	r0, [pc, #36]	; 1bb00 <sf_gen_atmmulti_abbrev+0xab4>
   1bad8:	add	r0, pc, r0
   1badc:	bl	2124 <sf_bpf_error>
   1bae0:	ldr	r0, [pc, #32]	; 1bb08 <sf_gen_atmmulti_abbrev+0xabc>
   1bae4:	add	r0, pc, r0
   1bae8:	bl	2124 <sf_bpf_error>
   1baec:	.word	0x0002c2dc
   1baf0:	.word	0x0002c3e8
   1baf4:	.word	0x0002c3bc
   1baf8:	.word	0x0002c1fc
   1bafc:	.word	0x0000e4b3
   1bb00:	.word	0x0000e4bb
   1bb04:	.word	0x0000e4e9
   1bb08:	.word	0x0000e4f8

0001bb0c <gen_ether_linktype>:
   1bb0c:	push	{r4, r5, r6, sl, fp, lr}
   1bb10:	add	fp, sp, #16
   1bb14:	sub	sp, sp, #8
   1bb18:	mov	r5, r0
   1bb1c:	cmp	r0, #253	; 0xfd
   1bb20:	bgt	1bc2c <gen_ether_linktype+0x120>
   1bb24:	cmp	r5, #6
   1bb28:	beq	1bb3c <gen_ether_linktype+0x30>
   1bb2c:	cmp	r5, #224	; 0xe0
   1bb30:	beq	1be9c <gen_ether_linktype+0x390>
   1bb34:	cmp	r5, #240	; 0xf0
   1bb38:	bne	1bd78 <gen_ether_linktype+0x26c>
   1bb3c:	ldr	r1, [pc, #1956]	; 1c2e8 <gen_ether_linktype+0x7dc>
   1bb40:	mov	r0, #1
   1bb44:	mov	r2, #8
   1bb48:	movw	r3, #1500	; 0x5dc
   1bb4c:	ldr	r1, [pc, r1]
   1bb50:	bl	15e1c <gen_cmp_gt>
   1bb54:	mov	r6, r0
   1bb58:	ldr	r0, [r0, #44]	; 0x2c
   1bb5c:	orr	r3, r5, r5, lsl #8
   1bb60:	mov	r1, #0
   1bb64:	mov	r2, #8
   1bb68:	clz	r0, r0
   1bb6c:	lsr	r0, r0, #5
   1bb70:	str	r0, [r6, #44]	; 0x2c
   1bb74:	mov	r0, #2
   1bb78:	bl	a9f8 <gen_cmp>
   1bb7c:	mov	r4, r0
   1bb80:	cmp	r6, #0
   1bb84:	beq	1bbb8 <gen_ether_linktype+0xac>
   1bb88:	ldr	r0, [r4, #96]	; 0x60
   1bb8c:	mov	r1, r6
   1bb90:	ldr	r2, [r1, #44]	; 0x2c
   1bb94:	add	r3, r1, #84	; 0x54
   1bb98:	cmp	r2, #0
   1bb9c:	mov	r2, #84	; 0x54
   1bba0:	movweq	r2, #60	; 0x3c
   1bba4:	addeq	r3, r1, #60	; 0x3c
   1bba8:	ldr	r1, [r1, r2]
   1bbac:	str	r0, [r3]
   1bbb0:	cmp	r1, #0
   1bbb4:	bne	1bb90 <gen_ether_linktype+0x84>
   1bbb8:	ldr	r0, [r6, #44]	; 0x2c
   1bbbc:	cmp	r4, #0
   1bbc0:	clz	r0, r0
   1bbc4:	lsr	r0, r0, #5
   1bbc8:	str	r0, [r6, #44]	; 0x2c
   1bbcc:	ldr	r1, [r4, #44]	; 0x2c
   1bbd0:	clz	r0, r1
   1bbd4:	lsr	r0, r0, #5
   1bbd8:	str	r0, [r4, #44]	; 0x2c
   1bbdc:	str	r4, [sp]
   1bbe0:	beq	1be7c <gen_ether_linktype+0x370>
   1bbe4:	cmp	r1, #0
   1bbe8:	mov	r1, #60	; 0x3c
   1bbec:	add	r0, r4, #60	; 0x3c
   1bbf0:	movweq	r1, #84	; 0x54
   1bbf4:	addeq	r0, r4, #84	; 0x54
   1bbf8:	ldr	r1, [r4, r1]
   1bbfc:	cmp	r1, #0
   1bc00:	beq	1be80 <gen_ether_linktype+0x374>
   1bc04:	ldr	r2, [r1, #44]	; 0x2c
   1bc08:	add	r0, r1, #84	; 0x54
   1bc0c:	cmp	r2, #0
   1bc10:	mov	r2, #84	; 0x54
   1bc14:	movweq	r2, #60	; 0x3c
   1bc18:	addeq	r0, r1, #60	; 0x3c
   1bc1c:	ldr	r1, [r1, r2]
   1bc20:	cmp	r1, #0
   1bc24:	bne	1bc04 <gen_ether_linktype+0xf8>
   1bc28:	b	1be80 <gen_ether_linktype+0x374>
   1bc2c:	movw	r0, #33011	; 0x80f3
   1bc30:	cmp	r5, r0
   1bc34:	movwne	r0, #32923	; 0x809b
   1bc38:	cmpne	r5, r0
   1bc3c:	bne	1bd70 <gen_ether_linktype+0x264>
   1bc40:	ldr	r1, [pc, #1708]	; 1c2f4 <gen_ether_linktype+0x7e8>
   1bc44:	mov	r0, #1
   1bc48:	mov	r2, #8
   1bc4c:	movw	r3, #1500	; 0x5dc
   1bc50:	ldr	r1, [pc, r1]
   1bc54:	bl	15e1c <gen_cmp_gt>
   1bc58:	mov	r6, r0
   1bc5c:	ldr	r0, [r0, #44]	; 0x2c
   1bc60:	clz	r0, r0
   1bc64:	lsr	r0, r0, #5
   1bc68:	str	r0, [r6, #44]	; 0x2c
   1bc6c:	mov	r0, #3
   1bc70:	strb	r0, [sp, #2]
   1bc74:	movw	r0, #43690	; 0xaaaa
   1bc78:	strh	r0, [sp]
   1bc7c:	movw	r0, #32923	; 0x809b
   1bc80:	cmp	r5, r0
   1bc84:	bne	1bc9c <gen_ether_linktype+0x190>
   1bc88:	mov	r0, #155	; 0x9b
   1bc8c:	strb	r0, [sp, #7]
   1bc90:	movw	r0, #8
   1bc94:	movt	r0, #32775	; 0x8007
   1bc98:	b	1bca8 <gen_ether_linktype+0x19c>
   1bc9c:	mov	r0, #243	; 0xf3
   1bca0:	strb	r0, [sp, #7]
   1bca4:	mov	r0, #-2147483648	; 0x80000000
   1bca8:	str	r0, [sp, #3]
   1bcac:	mov	r3, sp
   1bcb0:	mov	r0, #2
   1bcb4:	mov	r1, #0
   1bcb8:	mov	r2, #8
   1bcbc:	bl	1c3c0 <gen_bcmp>
   1bcc0:	mov	r4, r0
   1bcc4:	cmp	r6, #0
   1bcc8:	beq	1bcfc <gen_ether_linktype+0x1f0>
   1bccc:	ldr	r0, [r4, #96]	; 0x60
   1bcd0:	mov	r1, r6
   1bcd4:	ldr	r2, [r1, #44]	; 0x2c
   1bcd8:	add	r3, r1, #84	; 0x54
   1bcdc:	cmp	r2, #0
   1bce0:	mov	r2, #84	; 0x54
   1bce4:	movweq	r2, #60	; 0x3c
   1bce8:	addeq	r3, r1, #60	; 0x3c
   1bcec:	ldr	r1, [r1, r2]
   1bcf0:	str	r0, [r3]
   1bcf4:	cmp	r1, #0
   1bcf8:	bne	1bcd4 <gen_ether_linktype+0x1c8>
   1bcfc:	ldr	r0, [r6, #44]	; 0x2c
   1bd00:	cmp	r4, #0
   1bd04:	clz	r0, r0
   1bd08:	lsr	r0, r0, #5
   1bd0c:	str	r0, [r6, #44]	; 0x2c
   1bd10:	ldr	r1, [r4, #44]	; 0x2c
   1bd14:	clz	r0, r1
   1bd18:	lsr	r0, r0, #5
   1bd1c:	str	r0, [r4, #44]	; 0x2c
   1bd20:	str	r4, [sp]
   1bd24:	beq	1bf60 <gen_ether_linktype+0x454>
   1bd28:	cmp	r1, #0
   1bd2c:	mov	r1, #60	; 0x3c
   1bd30:	add	r0, r4, #60	; 0x3c
   1bd34:	movweq	r1, #84	; 0x54
   1bd38:	addeq	r0, r4, #84	; 0x54
   1bd3c:	ldr	r1, [r4, r1]
   1bd40:	cmp	r1, #0
   1bd44:	beq	1bf64 <gen_ether_linktype+0x458>
   1bd48:	ldr	r2, [r1, #44]	; 0x2c
   1bd4c:	add	r0, r1, #84	; 0x54
   1bd50:	cmp	r2, #0
   1bd54:	mov	r2, #84	; 0x54
   1bd58:	movweq	r2, #60	; 0x3c
   1bd5c:	addeq	r0, r1, #60	; 0x3c
   1bd60:	ldr	r1, [r1, r2]
   1bd64:	cmp	r1, #0
   1bd68:	bne	1bd48 <gen_ether_linktype+0x23c>
   1bd6c:	b	1bf64 <gen_ether_linktype+0x458>
   1bd70:	cmp	r5, #254	; 0xfe
   1bd74:	beq	1bb3c <gen_ether_linktype+0x30>
   1bd78:	ldr	r1, [pc, #1376]	; 1c2e0 <gen_ether_linktype+0x7d4>
   1bd7c:	movw	r0, #1500	; 0x5dc
   1bd80:	cmp	r5, r0
   1bd84:	ldr	r1, [pc, r1]
   1bd88:	bgt	1c02c <gen_ether_linktype+0x520>
   1bd8c:	mov	r0, #1
   1bd90:	mov	r2, #8
   1bd94:	movw	r3, #1500	; 0x5dc
   1bd98:	bl	15e1c <gen_cmp_gt>
   1bd9c:	mov	r6, r0
   1bda0:	ldr	r0, [r0, #44]	; 0x2c
   1bda4:	mov	r2, #16
   1bda8:	mov	r3, r5
   1bdac:	clz	r0, r0
   1bdb0:	lsr	r0, r0, #5
   1bdb4:	str	r0, [r6, #44]	; 0x2c
   1bdb8:	ldr	r0, [pc, #1316]	; 1c2e4 <gen_ether_linktype+0x7d8>
   1bdbc:	ldr	r0, [pc, r0]
   1bdc0:	add	r1, r0, #2
   1bdc4:	mov	r0, #1
   1bdc8:	bl	a9f8 <gen_cmp>
   1bdcc:	mov	r4, r0
   1bdd0:	cmp	r6, #0
   1bdd4:	beq	1be08 <gen_ether_linktype+0x2fc>
   1bdd8:	ldr	r0, [r4, #96]	; 0x60
   1bddc:	mov	r1, r6
   1bde0:	ldr	r2, [r1, #44]	; 0x2c
   1bde4:	add	r3, r1, #84	; 0x54
   1bde8:	cmp	r2, #0
   1bdec:	mov	r2, #84	; 0x54
   1bdf0:	movweq	r2, #60	; 0x3c
   1bdf4:	addeq	r3, r1, #60	; 0x3c
   1bdf8:	ldr	r1, [r1, r2]
   1bdfc:	str	r0, [r3]
   1be00:	cmp	r1, #0
   1be04:	bne	1bde0 <gen_ether_linktype+0x2d4>
   1be08:	ldr	r0, [r6, #44]	; 0x2c
   1be0c:	cmp	r4, #0
   1be10:	clz	r0, r0
   1be14:	lsr	r0, r0, #5
   1be18:	str	r0, [r6, #44]	; 0x2c
   1be1c:	ldr	r1, [r4, #44]	; 0x2c
   1be20:	clz	r0, r1
   1be24:	lsr	r0, r0, #5
   1be28:	str	r0, [r4, #44]	; 0x2c
   1be2c:	str	r4, [sp]
   1be30:	beq	1be7c <gen_ether_linktype+0x370>
   1be34:	cmp	r1, #0
   1be38:	mov	r1, #60	; 0x3c
   1be3c:	add	r0, r4, #60	; 0x3c
   1be40:	movweq	r1, #84	; 0x54
   1be44:	addeq	r0, r4, #84	; 0x54
   1be48:	ldr	r1, [r4, r1]
   1be4c:	cmp	r1, #0
   1be50:	beq	1be80 <gen_ether_linktype+0x374>
   1be54:	ldr	r2, [r1, #44]	; 0x2c
   1be58:	add	r0, r1, #84	; 0x54
   1be5c:	cmp	r2, #0
   1be60:	mov	r2, #84	; 0x54
   1be64:	movweq	r2, #60	; 0x3c
   1be68:	addeq	r0, r1, #60	; 0x3c
   1be6c:	ldr	r1, [r1, r2]
   1be70:	cmp	r1, #0
   1be74:	bne	1be54 <gen_ether_linktype+0x348>
   1be78:	b	1be80 <gen_ether_linktype+0x374>
   1be7c:	mov	r0, sp
   1be80:	str	r6, [r0]
   1be84:	ldr	r0, [r4, #44]	; 0x2c
   1be88:	clz	r0, r0
   1be8c:	lsr	r0, r0, #5
   1be90:	str	r0, [r4, #44]	; 0x2c
   1be94:	ldr	r0, [r6, #96]	; 0x60
   1be98:	b	1c2d0 <gen_ether_linktype+0x7c4>
   1be9c:	mov	r0, #2
   1bea0:	mov	r1, #0
   1bea4:	mov	r2, #16
   1bea8:	mov	r3, #224	; 0xe0
   1beac:	bl	a9f8 <gen_cmp>
   1beb0:	mov	r5, r0
   1beb4:	mov	r0, #2
   1beb8:	mov	r1, #0
   1bebc:	mov	r2, #8
   1bec0:	movw	r3, #65535	; 0xffff
   1bec4:	bl	a9f8 <gen_cmp>
   1bec8:	mov	r4, r0
   1becc:	ldr	r0, [r5, #44]	; 0x2c
   1bed0:	cmp	r5, #0
   1bed4:	clz	r0, r0
   1bed8:	lsr	r0, r0, #5
   1bedc:	str	r0, [r5, #44]	; 0x2c
   1bee0:	beq	1bf1c <gen_ether_linktype+0x410>
   1bee4:	ldr	r1, [r4, #96]	; 0x60
   1bee8:	mov	r2, r5
   1beec:	b	1bef4 <gen_ether_linktype+0x3e8>
   1bef0:	ldr	r0, [r2, #44]	; 0x2c
   1bef4:	cmp	r0, #0
   1bef8:	mov	r0, #84	; 0x54
   1befc:	add	r3, r2, #84	; 0x54
   1bf00:	movweq	r0, #60	; 0x3c
   1bf04:	addeq	r3, r2, #60	; 0x3c
   1bf08:	ldr	r2, [r2, r0]
   1bf0c:	str	r1, [r3]
   1bf10:	cmp	r2, #0
   1bf14:	bne	1bef0 <gen_ether_linktype+0x3e4>
   1bf18:	ldr	r0, [r5, #44]	; 0x2c
   1bf1c:	clz	r0, r0
   1bf20:	cmp	r4, #0
   1bf24:	lsr	r0, r0, #5
   1bf28:	str	r0, [r5, #44]	; 0x2c
   1bf2c:	str	r4, [sp]
   1bf30:	beq	1c044 <gen_ether_linktype+0x538>
   1bf34:	mov	r1, r4
   1bf38:	ldr	r2, [r1, #44]	; 0x2c
   1bf3c:	add	r0, r1, #84	; 0x54
   1bf40:	cmp	r2, #0
   1bf44:	mov	r2, #84	; 0x54
   1bf48:	movweq	r2, #60	; 0x3c
   1bf4c:	addeq	r0, r1, #60	; 0x3c
   1bf50:	ldr	r1, [r1, r2]
   1bf54:	cmp	r1, #0
   1bf58:	bne	1bf38 <gen_ether_linktype+0x42c>
   1bf5c:	b	1c048 <gen_ether_linktype+0x53c>
   1bf60:	mov	r0, sp
   1bf64:	str	r6, [r0]
   1bf68:	mov	r2, #8
   1bf6c:	mov	r3, r5
   1bf70:	ldr	r0, [r4, #44]	; 0x2c
   1bf74:	clz	r0, r0
   1bf78:	lsr	r0, r0, #5
   1bf7c:	str	r0, [r4, #44]	; 0x2c
   1bf80:	ldr	r0, [r6, #96]	; 0x60
   1bf84:	str	r0, [r4, #96]	; 0x60
   1bf88:	mov	r0, #1
   1bf8c:	ldr	r1, [pc, #868]	; 1c2f8 <gen_ether_linktype+0x7ec>
   1bf90:	ldr	r1, [pc, r1]
   1bf94:	bl	a9f8 <gen_cmp>
   1bf98:	ldr	r1, [r0, #44]	; 0x2c
   1bf9c:	cmp	r0, #0
   1bfa0:	clz	r1, r1
   1bfa4:	lsr	r1, r1, #5
   1bfa8:	str	r1, [r0, #44]	; 0x2c
   1bfac:	beq	1bfe8 <gen_ether_linktype+0x4dc>
   1bfb0:	ldr	r2, [r4, #96]	; 0x60
   1bfb4:	mov	r3, r0
   1bfb8:	b	1bfc0 <gen_ether_linktype+0x4b4>
   1bfbc:	ldr	r1, [r3, #44]	; 0x2c
   1bfc0:	cmp	r1, #0
   1bfc4:	mov	r1, #84	; 0x54
   1bfc8:	add	r6, r3, #84	; 0x54
   1bfcc:	movweq	r1, #60	; 0x3c
   1bfd0:	addeq	r6, r3, #60	; 0x3c
   1bfd4:	ldr	r3, [r3, r1]
   1bfd8:	str	r2, [r6]
   1bfdc:	cmp	r3, #0
   1bfe0:	bne	1bfbc <gen_ether_linktype+0x4b0>
   1bfe4:	ldr	r1, [r0, #44]	; 0x2c
   1bfe8:	clz	r1, r1
   1bfec:	cmp	r4, #0
   1bff0:	lsr	r1, r1, #5
   1bff4:	str	r1, [r0, #44]	; 0x2c
   1bff8:	str	r4, [sp]
   1bffc:	beq	1c2c4 <gen_ether_linktype+0x7b8>
   1c000:	mov	r2, r4
   1c004:	ldr	r3, [r2, #44]	; 0x2c
   1c008:	add	r1, r2, #84	; 0x54
   1c00c:	cmp	r3, #0
   1c010:	mov	r3, #84	; 0x54
   1c014:	movweq	r3, #60	; 0x3c
   1c018:	addeq	r1, r2, #60	; 0x3c
   1c01c:	ldr	r2, [r2, r3]
   1c020:	cmp	r2, #0
   1c024:	bne	1c004 <gen_ether_linktype+0x4f8>
   1c028:	b	1c2c8 <gen_ether_linktype+0x7bc>
   1c02c:	mov	r0, #1
   1c030:	mov	r2, #8
   1c034:	mov	r3, r5
   1c038:	sub	sp, fp, #16
   1c03c:	pop	{r4, r5, r6, sl, fp, lr}
   1c040:	b	a9f8 <gen_cmp>
   1c044:	mov	r0, sp
   1c048:	str	r5, [r0]
   1c04c:	mov	r1, #0
   1c050:	mov	r2, #8
   1c054:	ldr	r0, [r5, #96]	; 0x60
   1c058:	mov	r5, sp
   1c05c:	mov	r3, r5
   1c060:	str	r0, [r4, #96]	; 0x60
   1c064:	movw	r0, #43690	; 0xaaaa
   1c068:	movt	r0, #3
   1c06c:	str	r0, [sp]
   1c070:	movw	r0, #0
   1c074:	movt	r0, #14209	; 0x3781
   1c078:	str	r0, [sp, #4]
   1c07c:	mov	r0, #2
   1c080:	bl	1c3c0 <gen_bcmp>
   1c084:	ldr	r1, [r0, #44]	; 0x2c
   1c088:	cmp	r0, #0
   1c08c:	clz	r1, r1
   1c090:	lsr	r1, r1, #5
   1c094:	str	r1, [r0, #44]	; 0x2c
   1c098:	beq	1c0d4 <gen_ether_linktype+0x5c8>
   1c09c:	ldr	r2, [r4, #96]	; 0x60
   1c0a0:	mov	r3, r0
   1c0a4:	b	1c0ac <gen_ether_linktype+0x5a0>
   1c0a8:	ldr	r1, [r3, #44]	; 0x2c
   1c0ac:	cmp	r1, #0
   1c0b0:	mov	r1, #84	; 0x54
   1c0b4:	add	r6, r3, #84	; 0x54
   1c0b8:	movweq	r1, #60	; 0x3c
   1c0bc:	addeq	r6, r3, #60	; 0x3c
   1c0c0:	ldr	r3, [r3, r1]
   1c0c4:	str	r2, [r6]
   1c0c8:	cmp	r3, #0
   1c0cc:	bne	1c0a8 <gen_ether_linktype+0x59c>
   1c0d0:	ldr	r1, [r0, #44]	; 0x2c
   1c0d4:	clz	r1, r1
   1c0d8:	cmp	r4, #0
   1c0dc:	lsr	r1, r1, #5
   1c0e0:	str	r1, [r0, #44]	; 0x2c
   1c0e4:	str	r4, [sp]
   1c0e8:	beq	1c114 <gen_ether_linktype+0x608>
   1c0ec:	mov	r1, r4
   1c0f0:	ldr	r2, [r1, #44]	; 0x2c
   1c0f4:	add	r5, r1, #84	; 0x54
   1c0f8:	cmp	r2, #0
   1c0fc:	mov	r2, #84	; 0x54
   1c100:	movweq	r2, #60	; 0x3c
   1c104:	addeq	r5, r1, #60	; 0x3c
   1c108:	ldr	r1, [r1, r2]
   1c10c:	cmp	r1, #0
   1c110:	bne	1c0f0 <gen_ether_linktype+0x5e4>
   1c114:	str	r0, [r5]
   1c118:	mov	r2, #8
   1c11c:	movw	r3, #1500	; 0x5dc
   1c120:	ldr	r0, [r0, #96]	; 0x60
   1c124:	str	r0, [r4, #96]	; 0x60
   1c128:	mov	r0, #1
   1c12c:	ldr	r1, [pc, #440]	; 1c2ec <gen_ether_linktype+0x7e0>
   1c130:	ldr	r1, [pc, r1]
   1c134:	bl	15e1c <gen_cmp_gt>
   1c138:	ldr	r1, [r0, #44]	; 0x2c
   1c13c:	cmp	r0, #0
   1c140:	clz	r1, r1
   1c144:	lsr	r1, r1, #5
   1c148:	str	r1, [r0, #44]	; 0x2c
   1c14c:	beq	1c188 <gen_ether_linktype+0x67c>
   1c150:	ldr	r2, [r4, #96]	; 0x60
   1c154:	mov	r3, r0
   1c158:	b	1c160 <gen_ether_linktype+0x654>
   1c15c:	ldr	r1, [r3, #44]	; 0x2c
   1c160:	cmp	r1, #0
   1c164:	mov	r1, #84	; 0x54
   1c168:	add	r6, r3, #84	; 0x54
   1c16c:	movweq	r1, #60	; 0x3c
   1c170:	addeq	r6, r3, #60	; 0x3c
   1c174:	ldr	r3, [r3, r1]
   1c178:	str	r2, [r6]
   1c17c:	cmp	r3, #0
   1c180:	bne	1c15c <gen_ether_linktype+0x650>
   1c184:	ldr	r1, [r0, #44]	; 0x2c
   1c188:	clz	r1, r1
   1c18c:	cmp	r4, #0
   1c190:	lsr	r1, r1, #5
   1c194:	str	r1, [r0, #44]	; 0x2c
   1c198:	ldr	r2, [r4, #44]	; 0x2c
   1c19c:	clz	r1, r2
   1c1a0:	lsr	r1, r1, #5
   1c1a4:	str	r1, [r4, #44]	; 0x2c
   1c1a8:	str	r4, [sp]
   1c1ac:	beq	1c1f8 <gen_ether_linktype+0x6ec>
   1c1b0:	cmp	r2, #0
   1c1b4:	mov	r2, #60	; 0x3c
   1c1b8:	add	r1, r4, #60	; 0x3c
   1c1bc:	movweq	r2, #84	; 0x54
   1c1c0:	addeq	r1, r4, #84	; 0x54
   1c1c4:	ldr	r2, [r4, r2]
   1c1c8:	cmp	r2, #0
   1c1cc:	beq	1c1fc <gen_ether_linktype+0x6f0>
   1c1d0:	ldr	r3, [r2, #44]	; 0x2c
   1c1d4:	add	r1, r2, #84	; 0x54
   1c1d8:	cmp	r3, #0
   1c1dc:	mov	r3, #84	; 0x54
   1c1e0:	movweq	r3, #60	; 0x3c
   1c1e4:	addeq	r1, r2, #60	; 0x3c
   1c1e8:	ldr	r2, [r2, r3]
   1c1ec:	cmp	r2, #0
   1c1f0:	bne	1c1d0 <gen_ether_linktype+0x6c4>
   1c1f4:	b	1c1fc <gen_ether_linktype+0x6f0>
   1c1f8:	mov	r1, sp
   1c1fc:	str	r0, [r1]
   1c200:	mov	r2, #8
   1c204:	movw	r3, #33079	; 0x8137
   1c208:	ldr	r1, [r4, #44]	; 0x2c
   1c20c:	clz	r1, r1
   1c210:	lsr	r1, r1, #5
   1c214:	str	r1, [r4, #44]	; 0x2c
   1c218:	ldr	r0, [r0, #96]	; 0x60
   1c21c:	str	r0, [r4, #96]	; 0x60
   1c220:	mov	r0, #1
   1c224:	ldr	r1, [pc, #196]	; 1c2f0 <gen_ether_linktype+0x7e4>
   1c228:	ldr	r1, [pc, r1]
   1c22c:	bl	a9f8 <gen_cmp>
   1c230:	ldr	r1, [r0, #44]	; 0x2c
   1c234:	cmp	r0, #0
   1c238:	clz	r1, r1
   1c23c:	lsr	r1, r1, #5
   1c240:	str	r1, [r0, #44]	; 0x2c
   1c244:	beq	1c280 <gen_ether_linktype+0x774>
   1c248:	ldr	r2, [r4, #96]	; 0x60
   1c24c:	mov	r3, r0
   1c250:	b	1c258 <gen_ether_linktype+0x74c>
   1c254:	ldr	r1, [r3, #44]	; 0x2c
   1c258:	cmp	r1, #0
   1c25c:	mov	r1, #84	; 0x54
   1c260:	add	r6, r3, #84	; 0x54
   1c264:	movweq	r1, #60	; 0x3c
   1c268:	addeq	r6, r3, #60	; 0x3c
   1c26c:	ldr	r3, [r3, r1]
   1c270:	str	r2, [r6]
   1c274:	cmp	r3, #0
   1c278:	bne	1c254 <gen_ether_linktype+0x748>
   1c27c:	ldr	r1, [r0, #44]	; 0x2c
   1c280:	clz	r1, r1
   1c284:	cmp	r4, #0
   1c288:	lsr	r1, r1, #5
   1c28c:	str	r1, [r0, #44]	; 0x2c
   1c290:	str	r4, [sp]
   1c294:	beq	1c2c4 <gen_ether_linktype+0x7b8>
   1c298:	mov	r2, r4
   1c29c:	ldr	r3, [r2, #44]	; 0x2c
   1c2a0:	add	r1, r2, #84	; 0x54
   1c2a4:	cmp	r3, #0
   1c2a8:	mov	r3, #84	; 0x54
   1c2ac:	movweq	r3, #60	; 0x3c
   1c2b0:	addeq	r1, r2, #60	; 0x3c
   1c2b4:	ldr	r2, [r2, r3]
   1c2b8:	cmp	r2, #0
   1c2bc:	bne	1c29c <gen_ether_linktype+0x790>
   1c2c0:	b	1c2c8 <gen_ether_linktype+0x7bc>
   1c2c4:	mov	r1, sp
   1c2c8:	str	r0, [r1]
   1c2cc:	ldr	r0, [r0, #96]	; 0x60
   1c2d0:	str	r0, [r4, #96]	; 0x60
   1c2d4:	mov	r0, r4
   1c2d8:	sub	sp, fp, #16
   1c2dc:	pop	{r4, r5, r6, sl, fp, pc}
   1c2e0:	.word	0x0002b6b4
   1c2e4:	.word	0x0002b67c
   1c2e8:	.word	0x0002b8ec
   1c2ec:	.word	0x0002b308
   1c2f0:	.word	0x0002b210
   1c2f4:	.word	0x0002b7e8
   1c2f8:	.word	0x0002b4a8

0001c2fc <gen_llc_linktype>:
   1c2fc:	mov	r3, r0
   1c300:	cmp	r0, #239	; 0xef
   1c304:	ble	1c328 <gen_llc_linktype+0x2c>
   1c308:	cmp	r3, #240	; 0xf0
   1c30c:	beq	1c34c <gen_llc_linktype+0x50>
   1c310:	movw	r0, #32923	; 0x809b
   1c314:	cmp	r3, r0
   1c318:	beq	1c360 <gen_llc_linktype+0x64>
   1c31c:	cmp	r3, #254	; 0xfe
   1c320:	beq	1c34c <gen_llc_linktype+0x50>
   1c324:	b	1c3a0 <gen_llc_linktype+0xa4>
   1c328:	cmp	r3, #6
   1c32c:	beq	1c34c <gen_llc_linktype+0x50>
   1c330:	cmp	r3, #224	; 0xe0
   1c334:	bne	1c3a0 <gen_llc_linktype+0xa4>
   1c338:	mov	r0, #2
   1c33c:	mov	r1, #0
   1c340:	mov	r2, #16
   1c344:	mov	r3, #224	; 0xe0
   1c348:	b	a9f8 <gen_cmp>
   1c34c:	orr	r3, r3, r3, lsl #8
   1c350:	mov	r0, #2
   1c354:	mov	r1, #0
   1c358:	mov	r2, #8
   1c35c:	b	a9f8 <gen_cmp>
   1c360:	push	{fp, lr}
   1c364:	mov	fp, sp
   1c368:	sub	sp, sp, #8
   1c36c:	movw	r0, #43690	; 0xaaaa
   1c370:	mov	r3, sp
   1c374:	mov	r1, #0
   1c378:	mov	r2, #8
   1c37c:	movt	r0, #2051	; 0x803
   1c380:	str	r0, [sp]
   1c384:	movw	r0, #1792	; 0x700
   1c388:	movt	r0, #39808	; 0x9b80
   1c38c:	str	r0, [sp, #4]
   1c390:	mov	r0, #2
   1c394:	bl	1c3c0 <gen_bcmp>
   1c398:	mov	sp, fp
   1c39c:	pop	{fp, pc}
   1c3a0:	movw	r0, #1500	; 0x5dc
   1c3a4:	cmp	r3, r0
   1c3a8:	mov	r0, #2
   1c3ac:	movgt	r1, #6
   1c3b0:	movgt	r2, #8
   1c3b4:	movle	r1, #0
   1c3b8:	movle	r2, #16
   1c3bc:	b	a9f8 <gen_cmp>

0001c3c0 <gen_bcmp>:
   1c3c0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c3c4:	add	fp, sp, #28
   1c3c8:	sub	sp, sp, #20
   1c3cc:	mov	r6, r3
   1c3d0:	mov	r9, r1
   1c3d4:	mov	sl, r0
   1c3d8:	mov	r7, #0
   1c3dc:	cmp	r2, #4
   1c3e0:	bcs	1c500 <gen_bcmp+0x140>
   1c3e4:	cmp	r2, #2
   1c3e8:	bcc	1c614 <gen_bcmp+0x254>
   1c3ec:	add	r5, sp, #16
   1c3f0:	mov	r8, r2
   1c3f4:	str	r2, [sp, #4]
   1c3f8:	sub	r8, r8, #2
   1c3fc:	mov	r0, r6
   1c400:	mov	r2, #8
   1c404:	ldrb	r1, [r0, r8]!
   1c408:	ldrb	r0, [r0, #1]
   1c40c:	orr	r3, r0, r1, lsl #8
   1c410:	add	r1, r8, r9
   1c414:	mov	r0, sl
   1c418:	bl	a9f8 <gen_cmp>
   1c41c:	mov	r4, r0
   1c420:	cmp	r7, #0
   1c424:	beq	1c4e8 <gen_bcmp+0x128>
   1c428:	ldr	r0, [r4, #96]	; 0x60
   1c42c:	mov	r1, r7
   1c430:	ldr	r2, [r1, #44]	; 0x2c
   1c434:	add	r3, r1, #84	; 0x54
   1c438:	cmp	r2, #0
   1c43c:	mov	r2, #84	; 0x54
   1c440:	movweq	r2, #60	; 0x3c
   1c444:	addeq	r3, r1, #60	; 0x3c
   1c448:	ldr	r1, [r1, r2]
   1c44c:	str	r0, [r3]
   1c450:	cmp	r1, #0
   1c454:	bne	1c430 <gen_bcmp+0x70>
   1c458:	ldr	r0, [r7, #44]	; 0x2c
   1c45c:	cmp	r4, #0
   1c460:	clz	r0, r0
   1c464:	lsr	r0, r0, #5
   1c468:	str	r0, [r7, #44]	; 0x2c
   1c46c:	ldr	r1, [r4, #44]	; 0x2c
   1c470:	clz	r0, r1
   1c474:	lsr	r0, r0, #5
   1c478:	str	r0, [r4, #44]	; 0x2c
   1c47c:	mov	r0, r5
   1c480:	str	r4, [sp, #16]
   1c484:	beq	1c4cc <gen_bcmp+0x10c>
   1c488:	cmp	r1, #0
   1c48c:	mov	r1, #60	; 0x3c
   1c490:	add	r0, r4, #60	; 0x3c
   1c494:	movweq	r1, #84	; 0x54
   1c498:	addeq	r0, r4, #84	; 0x54
   1c49c:	ldr	r1, [r4, r1]
   1c4a0:	cmp	r1, #0
   1c4a4:	beq	1c4cc <gen_bcmp+0x10c>
   1c4a8:	ldr	r2, [r1, #44]	; 0x2c
   1c4ac:	add	r0, r1, #84	; 0x54
   1c4b0:	cmp	r2, #0
   1c4b4:	mov	r2, #84	; 0x54
   1c4b8:	movweq	r2, #60	; 0x3c
   1c4bc:	addeq	r0, r1, #60	; 0x3c
   1c4c0:	ldr	r1, [r1, r2]
   1c4c4:	cmp	r1, #0
   1c4c8:	bne	1c4a8 <gen_bcmp+0xe8>
   1c4cc:	str	r7, [r0]
   1c4d0:	ldr	r0, [r4, #44]	; 0x2c
   1c4d4:	clz	r0, r0
   1c4d8:	lsr	r0, r0, #5
   1c4dc:	str	r0, [r4, #44]	; 0x2c
   1c4e0:	ldr	r0, [r7, #96]	; 0x60
   1c4e4:	str	r0, [r4, #96]	; 0x60
   1c4e8:	cmp	r8, #1
   1c4ec:	mov	r7, r4
   1c4f0:	bhi	1c3f8 <gen_bcmp+0x38>
   1c4f4:	ldr	r2, [sp, #4]
   1c4f8:	and	r2, r2, #1
   1c4fc:	b	1c618 <gen_bcmp+0x258>
   1c500:	mov	r5, #0
   1c504:	add	r8, sp, #8
   1c508:	mov	r4, r2
   1c50c:	str	r2, [sp, #4]
   1c510:	sub	r4, r4, #4
   1c514:	mov	r2, #0
   1c518:	ldr	r0, [r6, r4]
   1c51c:	add	r1, r4, r9
   1c520:	rev	r3, r0
   1c524:	mov	r0, sl
   1c528:	bl	a9f8 <gen_cmp>
   1c52c:	mov	r7, r0
   1c530:	cmp	r5, #0
   1c534:	beq	1c5f8 <gen_bcmp+0x238>
   1c538:	ldr	r0, [r7, #96]	; 0x60
   1c53c:	mov	r1, r5
   1c540:	ldr	r2, [r1, #44]	; 0x2c
   1c544:	add	r3, r1, #84	; 0x54
   1c548:	cmp	r2, #0
   1c54c:	mov	r2, #84	; 0x54
   1c550:	movweq	r2, #60	; 0x3c
   1c554:	addeq	r3, r1, #60	; 0x3c
   1c558:	ldr	r1, [r1, r2]
   1c55c:	str	r0, [r3]
   1c560:	cmp	r1, #0
   1c564:	bne	1c540 <gen_bcmp+0x180>
   1c568:	ldr	r0, [r5, #44]	; 0x2c
   1c56c:	cmp	r7, #0
   1c570:	clz	r0, r0
   1c574:	lsr	r0, r0, #5
   1c578:	str	r0, [r5, #44]	; 0x2c
   1c57c:	ldr	r1, [r7, #44]	; 0x2c
   1c580:	clz	r0, r1
   1c584:	lsr	r0, r0, #5
   1c588:	str	r0, [r7, #44]	; 0x2c
   1c58c:	mov	r0, r8
   1c590:	str	r7, [sp, #8]
   1c594:	beq	1c5dc <gen_bcmp+0x21c>
   1c598:	cmp	r1, #0
   1c59c:	mov	r1, #60	; 0x3c
   1c5a0:	add	r0, r7, #60	; 0x3c
   1c5a4:	movweq	r1, #84	; 0x54
   1c5a8:	addeq	r0, r7, #84	; 0x54
   1c5ac:	ldr	r1, [r7, r1]
   1c5b0:	cmp	r1, #0
   1c5b4:	beq	1c5dc <gen_bcmp+0x21c>
   1c5b8:	ldr	r2, [r1, #44]	; 0x2c
   1c5bc:	add	r0, r1, #84	; 0x54
   1c5c0:	cmp	r2, #0
   1c5c4:	mov	r2, #84	; 0x54
   1c5c8:	movweq	r2, #60	; 0x3c
   1c5cc:	addeq	r0, r1, #60	; 0x3c
   1c5d0:	ldr	r1, [r1, r2]
   1c5d4:	cmp	r1, #0
   1c5d8:	bne	1c5b8 <gen_bcmp+0x1f8>
   1c5dc:	str	r5, [r0]
   1c5e0:	ldr	r0, [r7, #44]	; 0x2c
   1c5e4:	clz	r0, r0
   1c5e8:	lsr	r0, r0, #5
   1c5ec:	str	r0, [r7, #44]	; 0x2c
   1c5f0:	ldr	r0, [r5, #96]	; 0x60
   1c5f4:	str	r0, [r7, #96]	; 0x60
   1c5f8:	cmp	r4, #3
   1c5fc:	mov	r5, r7
   1c600:	bhi	1c510 <gen_bcmp+0x150>
   1c604:	ldr	r2, [sp, #4]
   1c608:	and	r2, r2, #3
   1c60c:	cmp	r2, #2
   1c610:	bcs	1c3ec <gen_bcmp+0x2c>
   1c614:	mov	r4, r7
   1c618:	cmp	r2, #1
   1c61c:	movne	r0, r4
   1c620:	subne	sp, fp, #28
   1c624:	popne	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1c628:	ldrb	r3, [r6]
   1c62c:	mov	r0, sl
   1c630:	mov	r1, r9
   1c634:	mov	r2, #16
   1c638:	bl	a9f8 <gen_cmp>
   1c63c:	cmp	r4, #0
   1c640:	beq	1c708 <gen_bcmp+0x348>
   1c644:	ldr	r1, [r0, #96]	; 0x60
   1c648:	mov	r2, r4
   1c64c:	ldr	r3, [r2, #44]	; 0x2c
   1c650:	add	r7, r2, #84	; 0x54
   1c654:	cmp	r3, #0
   1c658:	mov	r3, #84	; 0x54
   1c65c:	movweq	r3, #60	; 0x3c
   1c660:	addeq	r7, r2, #60	; 0x3c
   1c664:	ldr	r2, [r2, r3]
   1c668:	str	r1, [r7]
   1c66c:	cmp	r2, #0
   1c670:	bne	1c64c <gen_bcmp+0x28c>
   1c674:	ldr	r1, [r4, #44]	; 0x2c
   1c678:	cmp	r0, #0
   1c67c:	clz	r1, r1
   1c680:	lsr	r1, r1, #5
   1c684:	str	r1, [r4, #44]	; 0x2c
   1c688:	ldr	r2, [r0, #44]	; 0x2c
   1c68c:	clz	r1, r2
   1c690:	lsr	r1, r1, #5
   1c694:	str	r1, [r0, #44]	; 0x2c
   1c698:	str	r0, [sp, #12]
   1c69c:	beq	1c6e8 <gen_bcmp+0x328>
   1c6a0:	cmp	r2, #0
   1c6a4:	mov	r2, #60	; 0x3c
   1c6a8:	add	r1, r0, #60	; 0x3c
   1c6ac:	movweq	r2, #84	; 0x54
   1c6b0:	addeq	r1, r0, #84	; 0x54
   1c6b4:	ldr	r2, [r0, r2]
   1c6b8:	cmp	r2, #0
   1c6bc:	beq	1c6ec <gen_bcmp+0x32c>
   1c6c0:	ldr	r3, [r2, #44]	; 0x2c
   1c6c4:	add	r1, r2, #84	; 0x54
   1c6c8:	cmp	r3, #0
   1c6cc:	mov	r3, #84	; 0x54
   1c6d0:	movweq	r3, #60	; 0x3c
   1c6d4:	addeq	r1, r2, #60	; 0x3c
   1c6d8:	ldr	r2, [r2, r3]
   1c6dc:	cmp	r2, #0
   1c6e0:	bne	1c6c0 <gen_bcmp+0x300>
   1c6e4:	b	1c6ec <gen_bcmp+0x32c>
   1c6e8:	add	r1, sp, #12
   1c6ec:	str	r4, [r1]
   1c6f0:	ldr	r1, [r0, #44]	; 0x2c
   1c6f4:	clz	r1, r1
   1c6f8:	lsr	r1, r1, #5
   1c6fc:	str	r1, [r0, #44]	; 0x2c
   1c700:	ldr	r1, [r4, #96]	; 0x60
   1c704:	str	r1, [r0, #96]	; 0x60
   1c708:	sub	sp, fp, #28
   1c70c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0001c710 <gen_uncond>:
   1c710:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1c714:	add	fp, sp, #24
   1c718:	mov	r9, r0
   1c71c:	ldr	r0, [pc, #292]	; 1c848 <gen_uncond+0x138>
   1c720:	ldr	r0, [pc, r0]
   1c724:	ldr	r8, [pc, #288]	; 1c84c <gen_uncond+0x13c>
   1c728:	add	r8, pc, r8
   1c72c:	mov	r6, r8
   1c730:	ldr	r5, [r6, r0, lsl #3]!
   1c734:	cmp	r5, #19
   1c738:	bhi	1c794 <gen_uncond+0x84>
   1c73c:	ldr	r1, [pc, #268]	; 1c850 <gen_uncond+0x140>
   1c740:	add	r7, r0, #1
   1c744:	cmp	r0, #15
   1c748:	add	r1, pc, r1
   1c74c:	str	r7, [r1]
   1c750:	bge	1c83c <gen_uncond+0x12c>
   1c754:	mov	r0, #1024	; 0x400
   1c758:	lsl	r5, r0, r7
   1c75c:	mov	r0, r5
   1c760:	bl	ed4 <malloc@plt>
   1c764:	cmp	r0, #0
   1c768:	str	r0, [r6, #12]
   1c76c:	beq	1c83c <gen_uncond+0x12c>
   1c770:	mov	r1, #0
   1c774:	mov	r2, r5
   1c778:	add	r4, r6, #8
   1c77c:	bl	f40 <memset@plt>
   1c780:	cmp	r5, #20
   1c784:	str	r5, [r4]
   1c788:	bcc	1c83c <gen_uncond+0x12c>
   1c78c:	add	r6, r8, r7, lsl #3
   1c790:	b	1c79c <gen_uncond+0x8c>
   1c794:	mov	r7, r0
   1c798:	mov	r4, r6
   1c79c:	sub	r0, r5, #20
   1c7a0:	mov	r1, #0
   1c7a4:	str	r0, [r4]
   1c7a8:	ldr	r5, [r4, #4]
   1c7ac:	str	r1, [r5, r0]!
   1c7b0:	clz	r0, r9
   1c7b4:	lsr	r0, r0, #5
   1c7b8:	str	r0, [r5, #12]
   1c7bc:	ldr	r4, [r8, r7, lsl #3]
   1c7c0:	cmp	r4, #207	; 0xcf
   1c7c4:	bhi	1c818 <gen_uncond+0x108>
   1c7c8:	ldr	r1, [pc, #132]	; 1c854 <gen_uncond+0x144>
   1c7cc:	add	r0, r7, #1
   1c7d0:	cmp	r7, #15
   1c7d4:	add	r1, pc, r1
   1c7d8:	str	r0, [r1]
   1c7dc:	bge	1c83c <gen_uncond+0x12c>
   1c7e0:	mov	r1, #1024	; 0x400
   1c7e4:	lsl	r4, r1, r0
   1c7e8:	mov	r0, r4
   1c7ec:	bl	ed4 <malloc@plt>
   1c7f0:	cmp	r0, #0
   1c7f4:	str	r0, [r6, #12]
   1c7f8:	beq	1c83c <gen_uncond+0x12c>
   1c7fc:	mov	r1, #0
   1c800:	mov	r2, r4
   1c804:	add	r6, r6, #8
   1c808:	bl	f40 <memset@plt>
   1c80c:	cmp	r4, #207	; 0xcf
   1c810:	str	r4, [r6]
   1c814:	bls	1c83c <gen_uncond+0x12c>
   1c818:	sub	r0, r4, #208	; 0xd0
   1c81c:	str	r0, [r6]
   1c820:	ldr	r1, [r6, #4]
   1c824:	add	r0, r1, r0
   1c828:	mov	r1, #21
   1c82c:	str	r5, [r0, #4]
   1c830:	str	r1, [r0, #8]
   1c834:	str	r0, [r0, #96]	; 0x60
   1c838:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1c83c:	ldr	r0, [pc, #20]	; 1c858 <gen_uncond+0x148>
   1c840:	add	r0, pc, r0
   1c844:	bl	2124 <sf_bpf_error>
   1c848:	.word	0x0002addc
   1c84c:	.word	0x0002ad54
   1c850:	.word	0x0002adb4
   1c854:	.word	0x0002ad28
   1c858:	.word	0x0000d7c4

0001c85c <gen_cmp_le>:
   1c85c:	push	{r4, r5, r6, r7, fp, lr}
   1c860:	add	fp, sp, #16
   1c864:	mov	r4, r3
   1c868:	bl	17a3c <gen_load_a>
   1c86c:	mov	r5, r0
   1c870:	ldr	r0, [pc, #168]	; 1c920 <gen_cmp_le+0xc4>
   1c874:	ldr	r0, [pc, r0]
   1c878:	ldr	r7, [pc, #164]	; 1c924 <gen_cmp_le+0xc8>
   1c87c:	add	r7, pc, r7
   1c880:	ldr	r6, [r7, r0, lsl #3]!
   1c884:	cmp	r6, #207	; 0xcf
   1c888:	bhi	1c8dc <gen_cmp_le+0x80>
   1c88c:	ldr	r2, [pc, #148]	; 1c928 <gen_cmp_le+0xcc>
   1c890:	add	r1, r0, #1
   1c894:	cmp	r0, #15
   1c898:	add	r2, pc, r2
   1c89c:	str	r1, [r2]
   1c8a0:	bge	1c914 <gen_cmp_le+0xb8>
   1c8a4:	mov	r0, #1024	; 0x400
   1c8a8:	lsl	r6, r0, r1
   1c8ac:	mov	r0, r6
   1c8b0:	bl	ed4 <malloc@plt>
   1c8b4:	cmp	r0, #0
   1c8b8:	str	r0, [r7, #12]
   1c8bc:	beq	1c914 <gen_cmp_le+0xb8>
   1c8c0:	mov	r1, #0
   1c8c4:	mov	r2, r6
   1c8c8:	add	r7, r7, #8
   1c8cc:	bl	f40 <memset@plt>
   1c8d0:	cmp	r6, #207	; 0xcf
   1c8d4:	str	r6, [r7]
   1c8d8:	bls	1c914 <gen_cmp_le+0xb8>
   1c8dc:	sub	r0, r6, #208	; 0xd0
   1c8e0:	str	r0, [r7]
   1c8e4:	ldr	r1, [r7, #4]
   1c8e8:	add	r0, r1, r0
   1c8ec:	mov	r1, #37	; 0x25
   1c8f0:	str	r5, [r0, #4]
   1c8f4:	str	r1, [r0, #8]
   1c8f8:	str	r4, [r0, #20]
   1c8fc:	ldr	r1, [r0, #44]	; 0x2c
   1c900:	clz	r1, r1
   1c904:	lsr	r1, r1, #5
   1c908:	str	r1, [r0, #44]	; 0x2c
   1c90c:	str	r0, [r0, #96]	; 0x60
   1c910:	pop	{r4, r5, r6, r7, fp, pc}
   1c914:	ldr	r0, [pc, #16]	; 1c92c <gen_cmp_le+0xd0>
   1c918:	add	r0, pc, r0
   1c91c:	bl	2124 <sf_bpf_error>
   1c920:	.word	0x0002ac88
   1c924:	.word	0x0002ac00
   1c928:	.word	0x0002ac64
   1c92c:	.word	0x0000d6ec

0001c930 <gen_hostop>:
   1c930:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1c934:	add	fp, sp, #28
   1c938:	sub	sp, sp, #36	; 0x24
   1c93c:	cmp	r2, #4
   1c940:	bhi	1d4b4 <gen_hostop+0xb84>
   1c944:	mov	r9, r0
   1c948:	add	r0, pc, #20
   1c94c:	mov	sl, r1
   1c950:	ldr	r6, [fp, #12]
   1c954:	ldr	r7, [fp, #8]
   1c958:	mov	r4, r3
   1c95c:	ldr	r1, [r0, r2, lsl #2]
   1c960:	add	pc, r0, r1
   1c964:	.word	0x00000014
   1c968:	.word	0x0000017c
   1c96c:	.word	0x00000178
   1c970:	.word	0x00000014
   1c974:	.word	0x000000e8
   1c978:	mov	r0, r9
   1c97c:	mov	r1, sl
   1c980:	mov	r2, #1
   1c984:	mov	r3, r4
   1c988:	str	r7, [sp]
   1c98c:	str	r6, [sp, #4]
   1c990:	bl	1c930 <gen_hostop>
   1c994:	mov	r5, r0
   1c998:	mov	r0, r9
   1c99c:	mov	r1, sl
   1c9a0:	mov	r2, #2
   1c9a4:	mov	r3, r4
   1c9a8:	str	r7, [sp]
   1c9ac:	str	r6, [sp, #4]
   1c9b0:	bl	1c930 <gen_hostop>
   1c9b4:	ldr	r1, [r5, #44]	; 0x2c
   1c9b8:	cmp	r5, #0
   1c9bc:	clz	r1, r1
   1c9c0:	lsr	r3, r1, #5
   1c9c4:	mov	r1, r0
   1c9c8:	str	r3, [r5, #44]	; 0x2c
   1c9cc:	ldr	r2, [r1, #96]!	; 0x60
   1c9d0:	beq	1ca08 <gen_hostop+0xd8>
   1c9d4:	mov	r7, r5
   1c9d8:	b	1c9e0 <gen_hostop+0xb0>
   1c9dc:	ldr	r3, [r7, #44]	; 0x2c
   1c9e0:	cmp	r3, #0
   1c9e4:	mov	r3, #84	; 0x54
   1c9e8:	add	r6, r7, #84	; 0x54
   1c9ec:	movweq	r3, #60	; 0x3c
   1c9f0:	addeq	r6, r7, #60	; 0x3c
   1c9f4:	ldr	r7, [r7, r3]
   1c9f8:	str	r2, [r6]
   1c9fc:	cmp	r7, #0
   1ca00:	bne	1c9dc <gen_hostop+0xac>
   1ca04:	ldr	r3, [r5, #44]	; 0x2c
   1ca08:	clz	r2, r3
   1ca0c:	cmp	r0, #0
   1ca10:	lsr	r2, r2, #5
   1ca14:	str	r2, [r5, #44]	; 0x2c
   1ca18:	str	r0, [sp, #32]
   1ca1c:	beq	1cb80 <gen_hostop+0x250>
   1ca20:	mov	r3, r0
   1ca24:	ldr	r7, [r3, #44]	; 0x2c
   1ca28:	add	r2, r3, #84	; 0x54
   1ca2c:	cmp	r7, #0
   1ca30:	mov	r7, #84	; 0x54
   1ca34:	movweq	r7, #60	; 0x3c
   1ca38:	addeq	r2, r3, #60	; 0x3c
   1ca3c:	ldr	r3, [r3, r7]
   1ca40:	cmp	r3, #0
   1ca44:	bne	1ca24 <gen_hostop+0xf4>
   1ca48:	b	1cb84 <gen_hostop+0x254>
   1ca4c:	mov	r0, r4
   1ca50:	bl	7320 <gen_linktype>
   1ca54:	str	r0, [sp, #16]
   1ca58:	ldr	r0, [pc, #2648]	; 1d4b8 <gen_hostop+0xb88>
   1ca5c:	ldr	r0, [pc, r0]
   1ca60:	add	r6, r0, r7
   1ca64:	ldr	r0, [pc, #2640]	; 1d4bc <gen_hostop+0xb8c>
   1ca68:	add	r0, pc, r0
   1ca6c:	ldrb	r0, [r0]
   1ca70:	cmp	r0, #0
   1ca74:	add	r0, sp, #20
   1ca78:	stm	r0, {r4, r9, sl}
   1ca7c:	beq	1cb90 <gen_hostop+0x260>
   1ca80:	ldr	r5, [pc, #2624]	; 1d4c8 <gen_hostop+0xb98>
   1ca84:	ldr	r5, [pc, r5]
   1ca88:	cmn	r5, #1
   1ca8c:	bne	1cfc0 <gen_hostop+0x690>
   1ca90:	ldr	r5, [pc, #2612]	; 1d4cc <gen_hostop+0xb9c>
   1ca94:	mvn	r1, #15
   1ca98:	ldr	r5, [pc, r5]
   1ca9c:	ldr	r0, [pc, #2604]	; 1d4d0 <gen_hostop+0xba0>
   1caa0:	ldr	r2, [pc, #2604]	; 1d4d4 <gen_hostop+0xba4>
   1caa4:	add	r0, pc, r0
   1caa8:	add	r2, pc, r2
   1caac:	ldr	r3, [r0, r5, lsl #2]
   1cab0:	cmp	r3, #0
   1cab4:	beq	1cfac <gen_hostop+0x67c>
   1cab8:	add	r3, r5, #1
   1cabc:	adds	r1, r1, #1
   1cac0:	asr	r7, r3, #31
   1cac4:	add	r7, r3, r7, lsr #28
   1cac8:	bic	r7, r7, #15
   1cacc:	sub	r5, r3, r7
   1cad0:	str	r5, [r2]
   1cad4:	bne	1caac <gen_hostop+0x17c>
   1cad8:	b	1cb68 <gen_hostop+0x238>
   1cadc:	mov	r7, r6
   1cae0:	mov	r0, r4
   1cae4:	bl	7320 <gen_linktype>
   1cae8:	ldr	r1, [pc, #2584]	; 1d508 <gen_hostop+0xbd8>
   1caec:	ldr	r1, [pc, r1]
   1caf0:	add	ip, r1, r7
   1caf4:	ldr	r1, [pc, #2576]	; 1d50c <gen_hostop+0xbdc>
   1caf8:	str	sl, [sp, #28]
   1cafc:	str	r0, [sp, #20]
   1cb00:	add	r1, pc, r1
   1cb04:	ldrb	r1, [r1]
   1cb08:	cmp	r1, #0
   1cb0c:	beq	1cb74 <gen_hostop+0x244>
   1cb10:	ldr	r5, [pc, #2560]	; 1d518 <gen_hostop+0xbe8>
   1cb14:	ldr	r5, [pc, r5]
   1cb18:	cmn	r5, #1
   1cb1c:	bne	1cbb0 <gen_hostop+0x280>
   1cb20:	ldr	r5, [pc, #2548]	; 1d51c <gen_hostop+0xbec>
   1cb24:	mvn	r1, #15
   1cb28:	ldr	r5, [pc, r5]
   1cb2c:	ldr	r6, [pc, #2540]	; 1d520 <gen_hostop+0xbf0>
   1cb30:	ldr	r2, [pc, #2540]	; 1d524 <gen_hostop+0xbf4>
   1cb34:	add	r6, pc, r6
   1cb38:	add	r2, pc, r2
   1cb3c:	ldr	r3, [r6, r5, lsl #2]
   1cb40:	cmp	r3, #0
   1cb44:	beq	1cb9c <gen_hostop+0x26c>
   1cb48:	add	r3, r5, #1
   1cb4c:	adds	r1, r1, #1
   1cb50:	asr	r7, r3, #31
   1cb54:	add	r7, r3, r7, lsr #28
   1cb58:	bic	r7, r7, #15
   1cb5c:	sub	r5, r3, r7
   1cb60:	str	r5, [r2]
   1cb64:	bne	1cb3c <gen_hostop+0x20c>
   1cb68:	ldr	r0, [pc, #2408]	; 1d4d8 <gen_hostop+0xba8>
   1cb6c:	add	r0, pc, r0
   1cb70:	bl	2124 <sf_bpf_error>
   1cb74:	ldr	r6, [pc, #2452]	; 1d510 <gen_hostop+0xbe0>
   1cb78:	ldr	r6, [pc, r6]
   1cb7c:	b	1ccc4 <gen_hostop+0x394>
   1cb80:	add	r2, sp, #32
   1cb84:	str	r5, [r2]
   1cb88:	add	r2, r5, #96	; 0x60
   1cb8c:	b	1d498 <gen_hostop+0xb68>
   1cb90:	ldr	r8, [pc, #2344]	; 1d4c0 <gen_hostop+0xb90>
   1cb94:	ldr	r8, [pc, r8]
   1cb98:	b	1d0d0 <gen_hostop+0x7a0>
   1cb9c:	mov	r1, #1
   1cba0:	str	r1, [r6, r5, lsl #2]
   1cba4:	ldr	r1, [pc, #2428]	; 1d528 <gen_hostop+0xbf8>
   1cba8:	add	r1, pc, r1
   1cbac:	str	r5, [r1]
   1cbb0:	str	r9, [sp, #24]
   1cbb4:	ldr	r0, [pc, #2416]	; 1d52c <gen_hostop+0xbfc>
   1cbb8:	ldr	r0, [pc, r0]
   1cbbc:	ldr	r9, [pc, #2412]	; 1d530 <gen_hostop+0xc00>
   1cbc0:	add	r9, pc, r9
   1cbc4:	mov	r4, r9
   1cbc8:	ldr	r7, [r4, r0, lsl #3]!
   1cbcc:	cmp	r7, #19
   1cbd0:	bhi	1cc30 <gen_hostop+0x300>
   1cbd4:	ldr	r1, [pc, #2392]	; 1d534 <gen_hostop+0xc04>
   1cbd8:	add	r6, r0, #1
   1cbdc:	cmp	r0, #15
   1cbe0:	add	r1, pc, r1
   1cbe4:	str	r6, [r1]
   1cbe8:	bge	1d4a8 <gen_hostop+0xb78>
   1cbec:	mov	r0, #1024	; 0x400
   1cbf0:	mov	r8, ip
   1cbf4:	lsl	r7, r0, r6
   1cbf8:	mov	r0, r7
   1cbfc:	bl	ed4 <malloc@plt>
   1cc00:	cmp	r0, #0
   1cc04:	str	r0, [r4, #12]
   1cc08:	beq	1d4a8 <gen_hostop+0xb78>
   1cc0c:	mov	r1, #0
   1cc10:	mov	r2, r7
   1cc14:	add	r4, r4, #8
   1cc18:	bl	f40 <memset@plt>
   1cc1c:	cmp	r7, #19
   1cc20:	mov	ip, r8
   1cc24:	str	r7, [r4]
   1cc28:	bhi	1cc34 <gen_hostop+0x304>
   1cc2c:	b	1d4a8 <gen_hostop+0xb78>
   1cc30:	mov	r6, r0
   1cc34:	sub	r0, r7, #20
   1cc38:	mov	r1, #97	; 0x61
   1cc3c:	str	r0, [r4]
   1cc40:	ldr	r4, [r4, #4]
   1cc44:	str	r1, [r4, r0]!
   1cc48:	cmp	r4, #0
   1cc4c:	str	r5, [r4, #12]
   1cc50:	beq	1ccc0 <gen_hostop+0x390>
   1cc54:	ldr	r7, [r9, r6, lsl #3]!
   1cc58:	cmp	r7, #19
   1cc5c:	bhi	1ce10 <gen_hostop+0x4e0>
   1cc60:	ldr	r0, [pc, #2256]	; 1d538 <gen_hostop+0xc08>
   1cc64:	add	r8, r6, #1
   1cc68:	cmp	r6, #15
   1cc6c:	add	r0, pc, r0
   1cc70:	str	r8, [r0]
   1cc74:	bge	1d4a8 <gen_hostop+0xb78>
   1cc78:	mov	r0, #1024	; 0x400
   1cc7c:	mov	sl, ip
   1cc80:	lsl	r7, r0, r8
   1cc84:	mov	r0, r7
   1cc88:	bl	ed4 <malloc@plt>
   1cc8c:	ldr	r5, [sp, #28]
   1cc90:	cmp	r0, #0
   1cc94:	str	r0, [r9, #12]
   1cc98:	beq	1d4a8 <gen_hostop+0xb78>
   1cc9c:	mov	r1, #0
   1cca0:	mov	r2, r7
   1cca4:	add	r9, r9, #8
   1cca8:	bl	f40 <memset@plt>
   1ccac:	cmp	r7, #19
   1ccb0:	mov	ip, sl
   1ccb4:	str	r7, [r9]
   1ccb8:	bhi	1ce18 <gen_hostop+0x4e8>
   1ccbc:	b	1d4a8 <gen_hostop+0xb78>
   1ccc0:	ldr	r9, [sp, #24]
   1ccc4:	ldr	r4, [pc, #2120]	; 1d514 <gen_hostop+0xbe4>
   1ccc8:	add	r4, pc, r4
   1cccc:	ldr	r7, [r4, r6, lsl #3]!
   1ccd0:	cmp	r7, #19
   1ccd4:	bhi	1cd38 <gen_hostop+0x408>
   1ccd8:	ldr	r0, [pc, #2140]	; 1d53c <gen_hostop+0xc0c>
   1ccdc:	add	r8, r6, #1
   1cce0:	cmp	r6, #15
   1cce4:	add	r0, pc, r0
   1cce8:	str	r8, [r0]
   1ccec:	bge	1d4a8 <gen_hostop+0xb78>
   1ccf0:	mov	r0, #1024	; 0x400
   1ccf4:	mov	sl, ip
   1ccf8:	lsl	r7, r0, r8
   1ccfc:	mov	r0, r7
   1cd00:	bl	ed4 <malloc@plt>
   1cd04:	ldr	r5, [sp, #28]
   1cd08:	cmp	r0, #0
   1cd0c:	str	r0, [r4, #12]
   1cd10:	beq	1d4a8 <gen_hostop+0xb78>
   1cd14:	mov	r1, #0
   1cd18:	mov	r2, r7
   1cd1c:	add	r4, r4, #8
   1cd20:	bl	f40 <memset@plt>
   1cd24:	cmp	r7, #19
   1cd28:	mov	ip, sl
   1cd2c:	str	r7, [r4]
   1cd30:	bhi	1cd40 <gen_hostop+0x410>
   1cd34:	b	1d4a8 <gen_hostop+0xb78>
   1cd38:	ldr	r5, [sp, #28]
   1cd3c:	mov	r8, r6
   1cd40:	sub	r0, r7, #20
   1cd44:	mov	r1, #32
   1cd48:	str	r0, [r4]
   1cd4c:	ldr	r4, [r4, #4]
   1cd50:	str	r1, [r4, r0]!
   1cd54:	ldr	r0, [pc, #2020]	; 1d540 <gen_hostop+0xc10>
   1cd58:	ldr	r0, [pc, r0]
   1cd5c:	add	r0, r0, ip
   1cd60:	str	r0, [r4, #12]
   1cd64:	cmn	r5, #1
   1cd68:	beq	1ce54 <gen_hostop+0x524>
   1cd6c:	mov	sl, r5
   1cd70:	ldr	r5, [pc, #1996]	; 1d544 <gen_hostop+0xc14>
   1cd74:	add	r5, pc, r5
   1cd78:	ldr	r7, [r5, r8, lsl #3]!
   1cd7c:	cmp	r7, #19
   1cd80:	bhi	1cdd8 <gen_hostop+0x4a8>
   1cd84:	ldr	r0, [pc, #1980]	; 1d548 <gen_hostop+0xc18>
   1cd88:	add	r6, r8, #1
   1cd8c:	cmp	r8, #15
   1cd90:	add	r0, pc, r0
   1cd94:	str	r6, [r0]
   1cd98:	bge	1d4a8 <gen_hostop+0xb78>
   1cd9c:	mov	r0, #1024	; 0x400
   1cda0:	lsl	r7, r0, r6
   1cda4:	mov	r0, r7
   1cda8:	bl	ed4 <malloc@plt>
   1cdac:	cmp	r0, #0
   1cdb0:	str	r0, [r5, #12]
   1cdb4:	beq	1d4a8 <gen_hostop+0xb78>
   1cdb8:	mov	r1, #0
   1cdbc:	mov	r2, r7
   1cdc0:	add	r5, r5, #8
   1cdc4:	bl	f40 <memset@plt>
   1cdc8:	cmp	r7, #19
   1cdcc:	str	r7, [r5]
   1cdd0:	bhi	1cddc <gen_hostop+0x4ac>
   1cdd4:	b	1d4a8 <gen_hostop+0xb78>
   1cdd8:	mov	r6, r8
   1cddc:	sub	r1, r7, #20
   1cde0:	mov	r2, #84	; 0x54
   1cde4:	str	r1, [r5]
   1cde8:	ldr	r0, [r5, #4]
   1cdec:	str	r2, [r0, r1]!
   1cdf0:	mov	r2, r4
   1cdf4:	str	sl, [r0, #12]
   1cdf8:	mov	r1, r2
   1cdfc:	ldr	r2, [r2, #16]
   1ce00:	cmp	r2, #0
   1ce04:	bne	1cdf8 <gen_hostop+0x4c8>
   1ce08:	str	r0, [r1, #16]
   1ce0c:	b	1ce58 <gen_hostop+0x528>
   1ce10:	ldr	r5, [sp, #28]
   1ce14:	mov	r8, r6
   1ce18:	sub	r1, r7, #20
   1ce1c:	mov	r2, #64	; 0x40
   1ce20:	str	r1, [r9]
   1ce24:	ldr	r0, [r9, #4]
   1ce28:	str	r2, [r0, r1]!
   1ce2c:	mov	r2, r4
   1ce30:	str	ip, [r0, #12]
   1ce34:	mov	r1, r2
   1ce38:	ldr	r2, [r2, #16]
   1ce3c:	cmp	r2, #0
   1ce40:	bne	1ce34 <gen_hostop+0x504>
   1ce44:	ldr	r9, [sp, #24]
   1ce48:	str	r0, [r1, #16]
   1ce4c:	cmn	r5, #1
   1ce50:	bne	1cd6c <gen_hostop+0x43c>
   1ce54:	mov	r6, r8
   1ce58:	ldr	r7, [pc, #1772]	; 1d54c <gen_hostop+0xc1c>
   1ce5c:	add	r7, pc, r7
   1ce60:	ldr	r5, [r7, r6, lsl #3]!
   1ce64:	cmp	r5, #207	; 0xcf
   1ce68:	bhi	1cebc <gen_hostop+0x58c>
   1ce6c:	ldr	r1, [pc, #1756]	; 1d550 <gen_hostop+0xc20>
   1ce70:	add	r0, r6, #1
   1ce74:	cmp	r6, #15
   1ce78:	add	r1, pc, r1
   1ce7c:	str	r0, [r1]
   1ce80:	bge	1d4a8 <gen_hostop+0xb78>
   1ce84:	mov	r1, #1024	; 0x400
   1ce88:	lsl	r5, r1, r0
   1ce8c:	mov	r0, r5
   1ce90:	bl	ed4 <malloc@plt>
   1ce94:	cmp	r0, #0
   1ce98:	str	r0, [r7, #12]
   1ce9c:	beq	1d4a8 <gen_hostop+0xb78>
   1cea0:	mov	r1, #0
   1cea4:	mov	r2, r5
   1cea8:	add	r7, r7, #8
   1ceac:	bl	f40 <memset@plt>
   1ceb0:	cmp	r5, #207	; 0xcf
   1ceb4:	str	r5, [r7]
   1ceb8:	bls	1d4a8 <gen_hostop+0xb78>
   1cebc:	sub	r0, r5, #208	; 0xd0
   1cec0:	ldr	r6, [sp, #20]
   1cec4:	str	r0, [r7]
   1cec8:	ldr	r1, [r7, #4]
   1cecc:	cmp	r6, #0
   1ced0:	add	r0, r1, r0
   1ced4:	mov	r1, #21
   1ced8:	str	r4, [r0, #4]
   1cedc:	str	r1, [r0, #8]
   1cee0:	str	r9, [r0, #20]
   1cee4:	str	r0, [r0, #96]	; 0x60
   1cee8:	beq	1cf18 <gen_hostop+0x5e8>
   1ceec:	mov	r1, r6
   1cef0:	ldr	r2, [r1, #44]	; 0x2c
   1cef4:	add	r3, r1, #84	; 0x54
   1cef8:	cmp	r2, #0
   1cefc:	mov	r2, #84	; 0x54
   1cf00:	movweq	r2, #60	; 0x3c
   1cf04:	addeq	r3, r1, #60	; 0x3c
   1cf08:	ldr	r1, [r1, r2]
   1cf0c:	str	r0, [r3]
   1cf10:	cmp	r1, #0
   1cf14:	bne	1cef0 <gen_hostop+0x5c0>
   1cf18:	ldr	r2, [r6, #44]	; 0x2c
   1cf1c:	add	r1, r0, #96	; 0x60
   1cf20:	cmp	r0, #0
   1cf24:	clz	r2, r2
   1cf28:	lsr	r2, r2, #5
   1cf2c:	str	r2, [r6, #44]	; 0x2c
   1cf30:	ldr	r2, [r0, #44]	; 0x2c
   1cf34:	clz	r3, r2
   1cf38:	lsr	r3, r3, #5
   1cf3c:	str	r3, [r0, #44]	; 0x2c
   1cf40:	str	r0, [sp, #32]
   1cf44:	beq	1cf8c <gen_hostop+0x65c>
   1cf48:	mov	r7, #60	; 0x3c
   1cf4c:	cmp	r2, #0
   1cf50:	mov	r3, r0
   1cf54:	movweq	r7, #84	; 0x54
   1cf58:	ldr	r2, [r3, r7]!
   1cf5c:	cmp	r2, #0
   1cf60:	beq	1cf90 <gen_hostop+0x660>
   1cf64:	ldr	r7, [r2, #44]	; 0x2c
   1cf68:	add	r3, r2, #84	; 0x54
   1cf6c:	cmp	r7, #0
   1cf70:	mov	r7, #84	; 0x54
   1cf74:	movweq	r7, #60	; 0x3c
   1cf78:	addeq	r3, r2, #60	; 0x3c
   1cf7c:	ldr	r2, [r2, r7]
   1cf80:	cmp	r2, #0
   1cf84:	bne	1cf64 <gen_hostop+0x634>
   1cf88:	b	1cf90 <gen_hostop+0x660>
   1cf8c:	add	r3, sp, #32
   1cf90:	str	r6, [r3]
   1cf94:	ldr	r2, [r0, #44]	; 0x2c
   1cf98:	clz	r2, r2
   1cf9c:	lsr	r2, r2, #5
   1cfa0:	str	r2, [r0, #44]	; 0x2c
   1cfa4:	add	r2, r6, #96	; 0x60
   1cfa8:	b	1d498 <gen_hostop+0xb68>
   1cfac:	mov	r1, #1
   1cfb0:	str	r1, [r0, r5, lsl #2]
   1cfb4:	ldr	r0, [pc, #1312]	; 1d4dc <gen_hostop+0xbac>
   1cfb8:	add	r0, pc, r0
   1cfbc:	str	r5, [r0]
   1cfc0:	str	r6, [sp, #12]
   1cfc4:	ldr	r0, [pc, #1300]	; 1d4e0 <gen_hostop+0xbb0>
   1cfc8:	ldr	r0, [pc, r0]
   1cfcc:	ldr	r6, [pc, #1296]	; 1d4e4 <gen_hostop+0xbb4>
   1cfd0:	add	r6, pc, r6
   1cfd4:	mov	sl, r6
   1cfd8:	ldr	r7, [r6, r0, lsl #3]!
   1cfdc:	cmp	r7, #19
   1cfe0:	bhi	1d038 <gen_hostop+0x708>
   1cfe4:	ldr	r1, [pc, #1276]	; 1d4e8 <gen_hostop+0xbb8>
   1cfe8:	add	r8, r0, #1
   1cfec:	cmp	r0, #15
   1cff0:	add	r1, pc, r1
   1cff4:	str	r8, [r1]
   1cff8:	bge	1d4a8 <gen_hostop+0xb78>
   1cffc:	mov	r0, #1024	; 0x400
   1d000:	lsl	r7, r0, r8
   1d004:	mov	r0, r7
   1d008:	bl	ed4 <malloc@plt>
   1d00c:	cmp	r0, #0
   1d010:	str	r0, [r6, #12]
   1d014:	beq	1d4a8 <gen_hostop+0xb78>
   1d018:	mov	r1, #0
   1d01c:	mov	r2, r7
   1d020:	add	r6, r6, #8
   1d024:	bl	f40 <memset@plt>
   1d028:	cmp	r7, #19
   1d02c:	str	r7, [r6]
   1d030:	bhi	1d03c <gen_hostop+0x70c>
   1d034:	b	1d4a8 <gen_hostop+0xb78>
   1d038:	mov	r8, r0
   1d03c:	sub	r0, r7, #20
   1d040:	mov	r1, #97	; 0x61
   1d044:	str	r0, [r6]
   1d048:	ldr	r4, [r6, #4]
   1d04c:	str	r1, [r4, r0]!
   1d050:	cmp	r4, #0
   1d054:	str	r5, [r4, #12]
   1d058:	beq	1d0c8 <gen_hostop+0x798>
   1d05c:	mov	r6, sl
   1d060:	ldr	sl, [sp, #28]
   1d064:	ldr	r5, [sp, #12]
   1d068:	ldr	r7, [r6, r8, lsl #3]!
   1d06c:	cmp	r7, #19
   1d070:	bhi	1d214 <gen_hostop+0x8e4>
   1d074:	ldr	r0, [pc, #1136]	; 1d4ec <gen_hostop+0xbbc>
   1d078:	add	r9, r8, #1
   1d07c:	cmp	r8, #15
   1d080:	add	r0, pc, r0
   1d084:	str	r9, [r0]
   1d088:	bge	1d4a8 <gen_hostop+0xb78>
   1d08c:	mov	r0, #1024	; 0x400
   1d090:	lsl	r7, r0, r9
   1d094:	mov	r0, r7
   1d098:	bl	ed4 <malloc@plt>
   1d09c:	cmp	r0, #0
   1d0a0:	str	r0, [r6, #12]
   1d0a4:	beq	1d4a8 <gen_hostop+0xb78>
   1d0a8:	mov	r1, #0
   1d0ac:	mov	r2, r7
   1d0b0:	add	r6, r6, #8
   1d0b4:	bl	f40 <memset@plt>
   1d0b8:	cmp	r7, #19
   1d0bc:	str	r7, [r6]
   1d0c0:	bhi	1d218 <gen_hostop+0x8e8>
   1d0c4:	b	1d4a8 <gen_hostop+0xb78>
   1d0c8:	ldr	sl, [sp, #28]
   1d0cc:	ldr	r6, [sp, #12]
   1d0d0:	ldr	r5, [pc, #1004]	; 1d4c4 <gen_hostop+0xb94>
   1d0d4:	add	r5, pc, r5
   1d0d8:	ldr	r7, [r5, r8, lsl #3]!
   1d0dc:	cmp	r7, #19
   1d0e0:	bhi	1d138 <gen_hostop+0x808>
   1d0e4:	ldr	r0, [pc, #1028]	; 1d4f0 <gen_hostop+0xbc0>
   1d0e8:	add	r9, r8, #1
   1d0ec:	cmp	r8, #15
   1d0f0:	add	r0, pc, r0
   1d0f4:	str	r9, [r0]
   1d0f8:	bge	1d4a8 <gen_hostop+0xb78>
   1d0fc:	mov	r0, #1024	; 0x400
   1d100:	lsl	r7, r0, r9
   1d104:	mov	r0, r7
   1d108:	bl	ed4 <malloc@plt>
   1d10c:	cmp	r0, #0
   1d110:	str	r0, [r5, #12]
   1d114:	beq	1d4a8 <gen_hostop+0xb78>
   1d118:	mov	r1, #0
   1d11c:	mov	r2, r7
   1d120:	add	r5, r5, #8
   1d124:	bl	f40 <memset@plt>
   1d128:	cmp	r7, #19
   1d12c:	str	r7, [r5]
   1d130:	bhi	1d13c <gen_hostop+0x80c>
   1d134:	b	1d4a8 <gen_hostop+0xb78>
   1d138:	mov	r9, r8
   1d13c:	sub	r0, r7, #20
   1d140:	mov	r1, #32
   1d144:	str	r0, [r5]
   1d148:	ldr	r4, [r5, #4]
   1d14c:	str	r1, [r4, r0]!
   1d150:	ldr	r0, [pc, #924]	; 1d4f4 <gen_hostop+0xbc4>
   1d154:	ldr	r0, [pc, r0]
   1d158:	add	r0, r0, r6
   1d15c:	str	r0, [r4, #12]
   1d160:	cmn	sl, #1
   1d164:	beq	1d250 <gen_hostop+0x920>
   1d168:	ldr	r6, [pc, #904]	; 1d4f8 <gen_hostop+0xbc8>
   1d16c:	add	r6, pc, r6
   1d170:	ldr	r7, [r6, r9, lsl #3]!
   1d174:	cmp	r7, #19
   1d178:	bhi	1d1d4 <gen_hostop+0x8a4>
   1d17c:	ldr	r0, [pc, #888]	; 1d4fc <gen_hostop+0xbcc>
   1d180:	add	r5, r9, #1
   1d184:	cmp	r9, #15
   1d188:	add	r0, pc, r0
   1d18c:	str	r5, [r0]
   1d190:	bge	1d4a8 <gen_hostop+0xb78>
   1d194:	mov	r0, #1024	; 0x400
   1d198:	lsl	r7, r0, r5
   1d19c:	mov	r0, r7
   1d1a0:	bl	ed4 <malloc@plt>
   1d1a4:	ldr	r8, [sp, #24]
   1d1a8:	cmp	r0, #0
   1d1ac:	str	r0, [r6, #12]
   1d1b0:	beq	1d4a8 <gen_hostop+0xb78>
   1d1b4:	mov	r1, #0
   1d1b8:	mov	r2, r7
   1d1bc:	add	r6, r6, #8
   1d1c0:	bl	f40 <memset@plt>
   1d1c4:	cmp	r7, #19
   1d1c8:	str	r7, [r6]
   1d1cc:	bhi	1d1dc <gen_hostop+0x8ac>
   1d1d0:	b	1d4a8 <gen_hostop+0xb78>
   1d1d4:	ldr	r8, [sp, #24]
   1d1d8:	mov	r5, r9
   1d1dc:	sub	r1, r7, #20
   1d1e0:	mov	r2, #84	; 0x54
   1d1e4:	str	r1, [r6]
   1d1e8:	ldr	r0, [r6, #4]
   1d1ec:	str	r2, [r0, r1]!
   1d1f0:	mov	r2, r4
   1d1f4:	ldr	r1, [sp, #28]
   1d1f8:	str	r1, [r0, #12]
   1d1fc:	mov	r1, r2
   1d200:	ldr	r2, [r2, #16]
   1d204:	cmp	r2, #0
   1d208:	bne	1d1fc <gen_hostop+0x8cc>
   1d20c:	str	r0, [r1, #16]
   1d210:	b	1d258 <gen_hostop+0x928>
   1d214:	mov	r9, r8
   1d218:	sub	r1, r7, #20
   1d21c:	mov	r2, #64	; 0x40
   1d220:	str	r1, [r6]
   1d224:	ldr	r0, [r6, #4]
   1d228:	str	r2, [r0, r1]!
   1d22c:	mov	r2, r4
   1d230:	str	r5, [r0, #12]
   1d234:	mov	r1, r2
   1d238:	ldr	r2, [r2, #16]
   1d23c:	cmp	r2, #0
   1d240:	bne	1d234 <gen_hostop+0x904>
   1d244:	str	r0, [r1, #16]
   1d248:	cmn	sl, #1
   1d24c:	bne	1d168 <gen_hostop+0x838>
   1d250:	ldr	r8, [sp, #24]
   1d254:	mov	r5, r9
   1d258:	ldr	r6, [pc, #672]	; 1d500 <gen_hostop+0xbd0>
   1d25c:	add	r6, pc, r6
   1d260:	ldr	r7, [r6, r5, lsl #3]!
   1d264:	cmp	r7, #207	; 0xcf
   1d268:	bhi	1d2bc <gen_hostop+0x98c>
   1d26c:	ldr	r1, [pc, #656]	; 1d504 <gen_hostop+0xbd4>
   1d270:	add	r0, r5, #1
   1d274:	cmp	r5, #15
   1d278:	add	r1, pc, r1
   1d27c:	str	r0, [r1]
   1d280:	bge	1d4a8 <gen_hostop+0xb78>
   1d284:	mov	r1, #1024	; 0x400
   1d288:	lsl	r7, r1, r0
   1d28c:	mov	r0, r7
   1d290:	bl	ed4 <malloc@plt>
   1d294:	cmp	r0, #0
   1d298:	str	r0, [r6, #12]
   1d29c:	beq	1d4a8 <gen_hostop+0xb78>
   1d2a0:	mov	r1, #0
   1d2a4:	mov	r2, r7
   1d2a8:	add	r6, r6, #8
   1d2ac:	bl	f40 <memset@plt>
   1d2b0:	cmp	r7, #207	; 0xcf
   1d2b4:	str	r7, [r6]
   1d2b8:	bls	1d4a8 <gen_hostop+0xb78>
   1d2bc:	sub	r0, r7, #208	; 0xd0
   1d2c0:	str	r0, [r6]
   1d2c4:	ldr	r1, [r6, #4]
   1d2c8:	ldr	r6, [sp, #16]
   1d2cc:	add	r7, r1, r0
   1d2d0:	cmp	r6, #0
   1d2d4:	mov	r0, #21
   1d2d8:	str	r4, [r7, #4]
   1d2dc:	str	r0, [r7, #8]
   1d2e0:	str	r8, [r7, #20]
   1d2e4:	str	r7, [r7, #96]	; 0x60
   1d2e8:	beq	1d318 <gen_hostop+0x9e8>
   1d2ec:	mov	r0, r6
   1d2f0:	ldr	r1, [r0, #44]	; 0x2c
   1d2f4:	add	r2, r0, #84	; 0x54
   1d2f8:	cmp	r1, #0
   1d2fc:	mov	r1, #84	; 0x54
   1d300:	movweq	r1, #60	; 0x3c
   1d304:	addeq	r2, r0, #60	; 0x3c
   1d308:	ldr	r0, [r0, r1]
   1d30c:	str	r7, [r2]
   1d310:	cmp	r0, #0
   1d314:	bne	1d2f0 <gen_hostop+0x9c0>
   1d318:	ldr	r0, [r6, #44]	; 0x2c
   1d31c:	cmp	r7, #0
   1d320:	clz	r0, r0
   1d324:	lsr	r0, r0, #5
   1d328:	str	r0, [r6, #44]	; 0x2c
   1d32c:	ldr	r0, [r7, #44]	; 0x2c
   1d330:	clz	r1, r0
   1d334:	lsr	r1, r1, #5
   1d338:	str	r1, [r7, #44]	; 0x2c
   1d33c:	ldr	r1, [sp, #28]
   1d340:	str	r7, [sp, #32]
   1d344:	beq	1d38c <gen_hostop+0xa5c>
   1d348:	mov	r2, #60	; 0x3c
   1d34c:	cmp	r0, #0
   1d350:	mov	r3, r7
   1d354:	movweq	r2, #84	; 0x54
   1d358:	ldr	r0, [r3, r2]!
   1d35c:	cmp	r0, #0
   1d360:	beq	1d390 <gen_hostop+0xa60>
   1d364:	ldr	r2, [r0, #44]	; 0x2c
   1d368:	add	r3, r0, #84	; 0x54
   1d36c:	cmp	r2, #0
   1d370:	mov	r2, #84	; 0x54
   1d374:	movweq	r2, #60	; 0x3c
   1d378:	addeq	r3, r0, #60	; 0x3c
   1d37c:	ldr	r0, [r0, r2]
   1d380:	cmp	r0, #0
   1d384:	bne	1d364 <gen_hostop+0xa34>
   1d388:	b	1d390 <gen_hostop+0xa60>
   1d38c:	add	r3, sp, #32
   1d390:	str	r6, [r3]
   1d394:	ldr	r3, [sp, #20]
   1d398:	mov	r2, #2
   1d39c:	ldr	r0, [r7, #44]	; 0x2c
   1d3a0:	clz	r0, r0
   1d3a4:	lsr	r0, r0, #5
   1d3a8:	str	r0, [r7, #44]	; 0x2c
   1d3ac:	ldr	r0, [r6, #96]	; 0x60
   1d3b0:	str	r0, [r7, #96]	; 0x60
   1d3b4:	ldr	r0, [fp, #8]
   1d3b8:	str	r0, [sp]
   1d3bc:	ldr	r0, [fp, #12]
   1d3c0:	str	r0, [sp, #4]
   1d3c4:	mov	r0, r8
   1d3c8:	bl	1c930 <gen_hostop>
   1d3cc:	mov	r1, r0
   1d3d0:	cmp	r7, #0
   1d3d4:	ldr	r2, [r1, #96]!	; 0x60
   1d3d8:	beq	1d408 <gen_hostop+0xad8>
   1d3dc:	mov	r3, r7
   1d3e0:	ldr	r6, [r3, #44]	; 0x2c
   1d3e4:	add	r5, r3, #84	; 0x54
   1d3e8:	cmp	r6, #0
   1d3ec:	mov	r6, #84	; 0x54
   1d3f0:	movweq	r6, #60	; 0x3c
   1d3f4:	addeq	r5, r3, #60	; 0x3c
   1d3f8:	ldr	r3, [r3, r6]
   1d3fc:	str	r2, [r5]
   1d400:	cmp	r3, #0
   1d404:	bne	1d3e0 <gen_hostop+0xab0>
   1d408:	ldr	r3, [r7, #44]	; 0x2c
   1d40c:	add	r2, r7, #96	; 0x60
   1d410:	cmp	r0, #0
   1d414:	clz	r3, r3
   1d418:	lsr	r3, r3, #5
   1d41c:	str	r3, [r7, #44]	; 0x2c
   1d420:	ldr	r6, [r0, #44]	; 0x2c
   1d424:	clz	r3, r6
   1d428:	lsr	r3, r3, #5
   1d42c:	str	r3, [r0, #44]	; 0x2c
   1d430:	str	r0, [sp, #32]
   1d434:	beq	1d480 <gen_hostop+0xb50>
   1d438:	cmp	r6, #0
   1d43c:	mov	r6, #60	; 0x3c
   1d440:	add	r3, r0, #60	; 0x3c
   1d444:	movweq	r6, #84	; 0x54
   1d448:	addeq	r3, r0, #84	; 0x54
   1d44c:	ldr	r6, [r0, r6]
   1d450:	cmp	r6, #0
   1d454:	beq	1d484 <gen_hostop+0xb54>
   1d458:	ldr	r5, [r6, #44]	; 0x2c
   1d45c:	add	r3, r6, #84	; 0x54
   1d460:	cmp	r5, #0
   1d464:	mov	r5, #84	; 0x54
   1d468:	movweq	r5, #60	; 0x3c
   1d46c:	addeq	r3, r6, #60	; 0x3c
   1d470:	ldr	r6, [r6, r5]
   1d474:	cmp	r6, #0
   1d478:	bne	1d458 <gen_hostop+0xb28>
   1d47c:	b	1d484 <gen_hostop+0xb54>
   1d480:	add	r3, sp, #32
   1d484:	str	r7, [r3]
   1d488:	ldr	r3, [r0, #44]	; 0x2c
   1d48c:	clz	r3, r3
   1d490:	lsr	r3, r3, #5
   1d494:	str	r3, [r0, #44]	; 0x2c
   1d498:	ldr	r2, [r2]
   1d49c:	str	r2, [r1]
   1d4a0:	sub	sp, fp, #28
   1d4a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1d4a8:	ldr	r0, [pc, #164]	; 1d554 <gen_hostop+0xc24>
   1d4ac:	add	r0, pc, r0
   1d4b0:	bl	2124 <sf_bpf_error>
   1d4b4:	bl	fc4 <abort@plt>
   1d4b8:	.word	0x0002a9e4
   1d4bc:	.word	0x0002aa98
   1d4c0:	.word	0x0002a968
   1d4c4:	.word	0x0002a3a8
   1d4c8:	.word	0x0002aa84
   1d4cc:	.word	0x0002aa74
   1d4d0:	.word	0x0002aa6c
   1d4d4:	.word	0x0002aa64
   1d4d8:	.word	0x0000dee9
   1d4dc:	.word	0x0002a550
   1d4e0:	.word	0x0002a534
   1d4e4:	.word	0x0002a4ac
   1d4e8:	.word	0x0002a50c
   1d4ec:	.word	0x0002a47c
   1d4f0:	.word	0x0002a40c
   1d4f4:	.word	0x0002a2e8
   1d4f8:	.word	0x0002a310
   1d4fc:	.word	0x0002a374
   1d500:	.word	0x0002a220
   1d504:	.word	0x0002a284
   1d508:	.word	0x0002a954
   1d50c:	.word	0x0002aa00
   1d510:	.word	0x0002a984
   1d514:	.word	0x0002a7b4
   1d518:	.word	0x0002a9f4
   1d51c:	.word	0x0002a9e4
   1d520:	.word	0x0002a9dc
   1d524:	.word	0x0002a9d4
   1d528:	.word	0x0002a960
   1d52c:	.word	0x0002a944
   1d530:	.word	0x0002a8bc
   1d534:	.word	0x0002a91c
   1d538:	.word	0x0002a890
   1d53c:	.word	0x0002a818
   1d540:	.word	0x0002a6e4
   1d544:	.word	0x0002a708
   1d548:	.word	0x0002a76c
   1d54c:	.word	0x0002a620
   1d550:	.word	0x0002a684
   1d554:	.word	0x0000cb58

0001d558 <gen_dnhostop>:
   1d558:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1d55c:	add	fp, sp, #28
   1d560:	sub	sp, sp, #28
   1d564:	cmp	r1, #24
   1d568:	bhi	1ecd0 <gen_dnhostop+0x1778>
   1d56c:	mov	r8, r0
   1d570:	add	r0, pc, #12
   1d574:	mov	r2, #1
   1d578:	mov	r3, #7
   1d57c:	ldr	r1, [r0, r1, lsl #2]
   1d580:	add	pc, r0, r1
   1d584:	.word	0x00000064
   1d588:	.word	0x0000011c
   1d58c:	.word	0x00000124
   1d590:	.word	0x00000064
   1d594:	.word	0x000001c4
   1d598:	.word	0x0000174c
   1d59c:	.word	0x0000174c
   1d5a0:	.word	0x0000174c
   1d5a4:	.word	0x0000174c
   1d5a8:	.word	0x0000174c
   1d5ac:	.word	0x0000174c
   1d5b0:	.word	0x0000174c
   1d5b4:	.word	0x0000174c
   1d5b8:	.word	0x0000174c
   1d5bc:	.word	0x0000174c
   1d5c0:	.word	0x0000174c
   1d5c4:	.word	0x0000174c
   1d5c8:	.word	0x0000174c
   1d5cc:	.word	0x0000174c
   1d5d0:	.word	0x0000174c
   1d5d4:	.word	0x0000174c
   1d5d8:	.word	0x0000174c
   1d5dc:	.word	0x0000174c
   1d5e0:	.word	0x0000174c
   1d5e4:	.word	0x00001754
   1d5e8:	mov	r0, r8
   1d5ec:	mov	r1, #1
   1d5f0:	bl	1d558 <gen_dnhostop>
   1d5f4:	mov	r5, r0
   1d5f8:	mov	r0, r8
   1d5fc:	mov	r1, #2
   1d600:	bl	1d558 <gen_dnhostop>
   1d604:	mov	r8, r0
   1d608:	ldr	r0, [r5, #44]	; 0x2c
   1d60c:	cmp	r5, #0
   1d610:	clz	r0, r0
   1d614:	lsr	r0, r0, #5
   1d618:	str	r0, [r5, #44]	; 0x2c
   1d61c:	beq	1d658 <gen_dnhostop+0x100>
   1d620:	ldr	r1, [r8, #96]	; 0x60
   1d624:	mov	r2, r5
   1d628:	b	1d630 <gen_dnhostop+0xd8>
   1d62c:	ldr	r0, [r2, #44]	; 0x2c
   1d630:	cmp	r0, #0
   1d634:	mov	r0, #84	; 0x54
   1d638:	add	r3, r2, #84	; 0x54
   1d63c:	movweq	r0, #60	; 0x3c
   1d640:	addeq	r3, r2, #60	; 0x3c
   1d644:	ldr	r2, [r2, r0]
   1d648:	str	r1, [r3]
   1d64c:	cmp	r2, #0
   1d650:	bne	1d62c <gen_dnhostop+0xd4>
   1d654:	ldr	r0, [r5, #44]	; 0x2c
   1d658:	clz	r0, r0
   1d65c:	cmp	r8, #0
   1d660:	lsr	r0, r0, #5
   1d664:	str	r0, [r5, #44]	; 0x2c
   1d668:	str	r8, [sp, #24]
   1d66c:	beq	1d814 <gen_dnhostop+0x2bc>
   1d670:	mov	r1, r8
   1d674:	ldr	r2, [r1, #44]	; 0x2c
   1d678:	add	r0, r1, #84	; 0x54
   1d67c:	cmp	r2, #0
   1d680:	mov	r2, #84	; 0x54
   1d684:	movweq	r2, #60	; 0x3c
   1d688:	addeq	r0, r1, #60	; 0x3c
   1d68c:	ldr	r1, [r1, r2]
   1d690:	cmp	r1, #0
   1d694:	bne	1d674 <gen_dnhostop+0x11c>
   1d698:	str	r5, [r0]
   1d69c:	b	1ecbc <gen_dnhostop+0x1764>
   1d6a0:	mov	r2, #3
   1d6a4:	mov	r3, #15
   1d6a8:	movw	r0, #24579	; 0x6003
   1d6ac:	str	r3, [sp, #8]
   1d6b0:	str	r2, [sp, #16]
   1d6b4:	bl	7320 <gen_linktype>
   1d6b8:	ldr	r1, [pc, #3972]	; 1e644 <gen_dnhostop+0x10ec>
   1d6bc:	add	r1, pc, r1
   1d6c0:	ldrb	r2, [r1]
   1d6c4:	ldr	r1, [pc, #3964]	; 1e648 <gen_dnhostop+0x10f0>
   1d6c8:	ldr	r1, [pc, r1]
   1d6cc:	cmp	r2, #0
   1d6d0:	str	r0, [sp, #4]
   1d6d4:	add	r4, r1, #2
   1d6d8:	beq	1d73c <gen_dnhostop+0x1e4>
   1d6dc:	mov	r9, r4
   1d6e0:	ldr	r4, [pc, #4092]	; 1e6e4 <gen_dnhostop+0x118c>
   1d6e4:	ldr	r4, [pc, r4]
   1d6e8:	cmn	r4, #1
   1d6ec:	bne	1d834 <gen_dnhostop+0x2dc>
   1d6f0:	ldr	r4, [pc, #4092]	; 1e6f4 <gen_dnhostop+0x119c>
   1d6f4:	mvn	r1, #15
   1d6f8:	ldr	r4, [pc, r4]
   1d6fc:	ldr	r6, [pc, #4084]	; 1e6f8 <gen_dnhostop+0x11a0>
   1d700:	ldr	r2, [pc, #4084]	; 1e6fc <gen_dnhostop+0x11a4>
   1d704:	add	r6, pc, r6
   1d708:	add	r2, pc, r2
   1d70c:	ldr	r3, [r6, r4, lsl #2]
   1d710:	cmp	r3, #0
   1d714:	beq	1d820 <gen_dnhostop+0x2c8>
   1d718:	add	r3, r4, #1
   1d71c:	adds	r1, r1, #1
   1d720:	asr	r7, r3, #31
   1d724:	add	r7, r3, r7, lsr #28
   1d728:	bic	r7, r7, #15
   1d72c:	sub	r4, r3, r7
   1d730:	str	r4, [r2]
   1d734:	bne	1d70c <gen_dnhostop+0x1b4>
   1d738:	b	1e6d8 <gen_dnhostop+0x1180>
   1d73c:	ldr	sl, [pc, #4028]	; 1e700 <gen_dnhostop+0x11a8>
   1d740:	ldr	sl, [pc, sl]
   1d744:	b	1d934 <gen_dnhostop+0x3dc>
   1d748:	mov	r0, r8
   1d74c:	mov	r1, #1
   1d750:	bl	1d558 <gen_dnhostop>
   1d754:	mov	r5, r0
   1d758:	mov	r0, r8
   1d75c:	mov	r1, #2
   1d760:	bl	1d558 <gen_dnhostop>
   1d764:	mov	r8, r0
   1d768:	cmp	r5, #0
   1d76c:	beq	1d7a0 <gen_dnhostop+0x248>
   1d770:	ldr	r0, [r8, #96]	; 0x60
   1d774:	mov	r1, r5
   1d778:	ldr	r2, [r1, #44]	; 0x2c
   1d77c:	add	r3, r1, #84	; 0x54
   1d780:	cmp	r2, #0
   1d784:	mov	r2, #84	; 0x54
   1d788:	movweq	r2, #60	; 0x3c
   1d78c:	addeq	r3, r1, #60	; 0x3c
   1d790:	ldr	r1, [r1, r2]
   1d794:	str	r0, [r3]
   1d798:	cmp	r1, #0
   1d79c:	bne	1d778 <gen_dnhostop+0x220>
   1d7a0:	ldr	r0, [r5, #44]	; 0x2c
   1d7a4:	cmp	r8, #0
   1d7a8:	clz	r0, r0
   1d7ac:	lsr	r0, r0, #5
   1d7b0:	str	r0, [r5, #44]	; 0x2c
   1d7b4:	ldr	r1, [r8, #44]	; 0x2c
   1d7b8:	clz	r0, r1
   1d7bc:	lsr	r0, r0, #5
   1d7c0:	str	r0, [r8, #44]	; 0x2c
   1d7c4:	str	r8, [sp, #24]
   1d7c8:	beq	1eca4 <gen_dnhostop+0x174c>
   1d7cc:	cmp	r1, #0
   1d7d0:	mov	r1, #60	; 0x3c
   1d7d4:	add	r0, r8, #60	; 0x3c
   1d7d8:	movweq	r1, #84	; 0x54
   1d7dc:	addeq	r0, r8, #84	; 0x54
   1d7e0:	ldr	r1, [r8, r1]
   1d7e4:	cmp	r1, #0
   1d7e8:	beq	1eca8 <gen_dnhostop+0x1750>
   1d7ec:	ldr	r2, [r1, #44]	; 0x2c
   1d7f0:	add	r0, r1, #84	; 0x54
   1d7f4:	cmp	r2, #0
   1d7f8:	mov	r2, #84	; 0x54
   1d7fc:	movweq	r2, #60	; 0x3c
   1d800:	addeq	r0, r1, #60	; 0x3c
   1d804:	ldr	r1, [r1, r2]
   1d808:	cmp	r1, #0
   1d80c:	bne	1d7ec <gen_dnhostop+0x294>
   1d810:	b	1eca8 <gen_dnhostop+0x1750>
   1d814:	add	r0, sp, #24
   1d818:	str	r5, [r0]
   1d81c:	b	1ecbc <gen_dnhostop+0x1764>
   1d820:	mov	r1, #1
   1d824:	str	r1, [r6, r4, lsl #2]
   1d828:	ldr	r1, [pc, #4064]	; 1e810 <gen_dnhostop+0x12b8>
   1d82c:	add	r1, pc, r1
   1d830:	str	r4, [r1]
   1d834:	ldr	r0, [pc, #4056]	; 1e814 <gen_dnhostop+0x12bc>
   1d838:	ldr	r0, [pc, r0]
   1d83c:	ldr	r5, [pc, #4052]	; 1e818 <gen_dnhostop+0x12c0>
   1d840:	add	r5, pc, r5
   1d844:	mov	r7, r5
   1d848:	ldr	r6, [r7, r0, lsl #3]!
   1d84c:	cmp	r6, #19
   1d850:	bhi	1d8a8 <gen_dnhostop+0x350>
   1d854:	ldr	r1, [pc, #4032]	; 1e81c <gen_dnhostop+0x12c4>
   1d858:	add	sl, r0, #1
   1d85c:	cmp	r0, #15
   1d860:	add	r1, pc, r1
   1d864:	str	sl, [r1]
   1d868:	bge	1ea18 <gen_dnhostop+0x14c0>
   1d86c:	mov	r0, #1024	; 0x400
   1d870:	lsl	r6, r0, sl
   1d874:	mov	r0, r6
   1d878:	bl	ed4 <malloc@plt>
   1d87c:	cmp	r0, #0
   1d880:	str	r0, [r7, #12]
   1d884:	beq	1ea18 <gen_dnhostop+0x14c0>
   1d888:	mov	r1, #0
   1d88c:	mov	r2, r6
   1d890:	add	r7, r7, #8
   1d894:	bl	f40 <memset@plt>
   1d898:	cmp	r6, #19
   1d89c:	str	r6, [r7]
   1d8a0:	bhi	1d8ac <gen_dnhostop+0x354>
   1d8a4:	b	1ea18 <gen_dnhostop+0x14c0>
   1d8a8:	mov	sl, r0
   1d8ac:	sub	r0, r6, #20
   1d8b0:	mov	r1, #97	; 0x61
   1d8b4:	str	r0, [r7]
   1d8b8:	ldr	r7, [r7, #4]
   1d8bc:	str	r1, [r7, r0]!
   1d8c0:	cmp	r7, #0
   1d8c4:	str	r4, [r7, #12]
   1d8c8:	beq	1d930 <gen_dnhostop+0x3d8>
   1d8cc:	ldr	r6, [r5, sl, lsl #3]!
   1d8d0:	mov	r4, r9
   1d8d4:	cmp	r6, #19
   1d8d8:	bhi	1d9c8 <gen_dnhostop+0x470>
   1d8dc:	ldr	r0, [pc, #4052]	; 1e8b8 <gen_dnhostop+0x1360>
   1d8e0:	add	r9, sl, #1
   1d8e4:	cmp	sl, #15
   1d8e8:	add	r0, pc, r0
   1d8ec:	str	r9, [r0]
   1d8f0:	bge	1ea18 <gen_dnhostop+0x14c0>
   1d8f4:	mov	r0, #1024	; 0x400
   1d8f8:	lsl	r6, r0, r9
   1d8fc:	mov	r0, r6
   1d900:	bl	ed4 <malloc@plt>
   1d904:	cmp	r0, #0
   1d908:	str	r0, [r5, #12]
   1d90c:	beq	1ea18 <gen_dnhostop+0x14c0>
   1d910:	mov	r1, #0
   1d914:	mov	r2, r6
   1d918:	add	r5, r5, #8
   1d91c:	bl	f40 <memset@plt>
   1d920:	cmp	r6, #19
   1d924:	str	r6, [r5]
   1d928:	bhi	1d9cc <gen_dnhostop+0x474>
   1d92c:	b	1ea18 <gen_dnhostop+0x14c0>
   1d930:	mov	r4, r9
   1d934:	ldr	r5, [pc, #3968]	; 1e8bc <gen_dnhostop+0x1364>
   1d938:	add	r5, pc, r5
   1d93c:	ldr	r6, [r5, sl, lsl #3]!
   1d940:	cmp	r6, #19
   1d944:	bhi	1d99c <gen_dnhostop+0x444>
   1d948:	ldr	r0, [pc, #3952]	; 1e8c0 <gen_dnhostop+0x1368>
   1d94c:	add	r9, sl, #1
   1d950:	cmp	sl, #15
   1d954:	add	r0, pc, r0
   1d958:	str	r9, [r0]
   1d95c:	bge	1ea18 <gen_dnhostop+0x14c0>
   1d960:	mov	r0, #1024	; 0x400
   1d964:	lsl	r6, r0, r9
   1d968:	mov	r0, r6
   1d96c:	bl	ed4 <malloc@plt>
   1d970:	cmp	r0, #0
   1d974:	str	r0, [r5, #12]
   1d978:	beq	1ea18 <gen_dnhostop+0x14c0>
   1d97c:	mov	r1, #0
   1d980:	mov	r2, r6
   1d984:	add	r5, r5, #8
   1d988:	bl	f40 <memset@plt>
   1d98c:	cmp	r6, #19
   1d990:	str	r6, [r5]
   1d994:	bhi	1d9a0 <gen_dnhostop+0x448>
   1d998:	b	1ea18 <gen_dnhostop+0x14c0>
   1d99c:	mov	r9, sl
   1d9a0:	sub	r0, r6, #20
   1d9a4:	mov	r1, #40	; 0x28
   1d9a8:	str	r0, [r5]
   1d9ac:	ldr	r7, [r5, #4]
   1d9b0:	str	r1, [r7, r0]!
   1d9b4:	ldr	r0, [pc, #4016]	; 1e96c <gen_dnhostop+0x1414>
   1d9b8:	ldr	r0, [pc, r0]
   1d9bc:	add	r0, r0, r4
   1d9c0:	str	r0, [r7, #12]
   1d9c4:	b	1d9fc <gen_dnhostop+0x4a4>
   1d9c8:	mov	r9, sl
   1d9cc:	sub	r1, r6, #20
   1d9d0:	mov	r2, #72	; 0x48
   1d9d4:	str	r1, [r5]
   1d9d8:	ldr	r0, [r5, #4]
   1d9dc:	str	r2, [r0, r1]!
   1d9e0:	mov	r2, r7
   1d9e4:	str	r4, [r0, #12]
   1d9e8:	mov	r1, r2
   1d9ec:	ldr	r2, [r2, #16]
   1d9f0:	cmp	r2, #0
   1d9f4:	bne	1d9e8 <gen_dnhostop+0x490>
   1d9f8:	str	r0, [r1, #16]
   1d9fc:	ldr	sl, [pc, #3948]	; 1e970 <gen_dnhostop+0x1418>
   1da00:	add	sl, pc, sl
   1da04:	mov	r4, sl
   1da08:	ldr	r6, [r4, r9, lsl #3]!
   1da0c:	cmp	r6, #19
   1da10:	bhi	1da6c <gen_dnhostop+0x514>
   1da14:	ldr	r0, [pc, #3928]	; 1e974 <gen_dnhostop+0x141c>
   1da18:	add	r5, r9, #1
   1da1c:	cmp	r9, #15
   1da20:	add	r0, pc, r0
   1da24:	str	r5, [r0]
   1da28:	bge	1ea18 <gen_dnhostop+0x14c0>
   1da2c:	mov	r0, #1024	; 0x400
   1da30:	lsl	r6, r0, r5
   1da34:	mov	r0, r6
   1da38:	bl	ed4 <malloc@plt>
   1da3c:	ldr	r9, [sp, #8]
   1da40:	cmp	r0, #0
   1da44:	str	r0, [r4, #12]
   1da48:	beq	1ea18 <gen_dnhostop+0x14c0>
   1da4c:	mov	r1, #0
   1da50:	mov	r2, r6
   1da54:	add	r4, r4, #8
   1da58:	bl	f40 <memset@plt>
   1da5c:	cmp	r6, #19
   1da60:	str	r6, [r4]
   1da64:	bhi	1da74 <gen_dnhostop+0x51c>
   1da68:	b	1ea18 <gen_dnhostop+0x14c0>
   1da6c:	mov	r5, r9
   1da70:	ldr	r9, [sp, #8]
   1da74:	sub	r1, r6, #20
   1da78:	mov	r2, #84	; 0x54
   1da7c:	str	r1, [r4]
   1da80:	ldr	r0, [r4, #4]
   1da84:	str	r2, [r0, r1]!
   1da88:	movw	r1, #65287	; 0xff07
   1da8c:	mov	r2, r7
   1da90:	str	r1, [r0, #12]
   1da94:	mov	r1, r2
   1da98:	ldr	r2, [r2, #16]
   1da9c:	cmp	r2, #0
   1daa0:	bne	1da94 <gen_dnhostop+0x53c>
   1daa4:	str	r0, [r1, #16]
   1daa8:	mov	r4, sl
   1daac:	ldr	r6, [r4, r5, lsl #3]!
   1dab0:	cmp	r6, #207	; 0xcf
   1dab4:	bhi	1db08 <gen_dnhostop+0x5b0>
   1dab8:	ldr	r1, [pc, #3940]	; 1ea24 <gen_dnhostop+0x14cc>
   1dabc:	add	r0, r5, #1
   1dac0:	cmp	r5, #15
   1dac4:	add	r1, pc, r1
   1dac8:	str	r0, [r1]
   1dacc:	bge	1ea18 <gen_dnhostop+0x14c0>
   1dad0:	mov	r1, #1024	; 0x400
   1dad4:	lsl	r6, r1, r0
   1dad8:	mov	r0, r6
   1dadc:	bl	ed4 <malloc@plt>
   1dae0:	cmp	r0, #0
   1dae4:	str	r0, [r4, #12]
   1dae8:	beq	1ea18 <gen_dnhostop+0x14c0>
   1daec:	mov	r1, #0
   1daf0:	mov	r2, r6
   1daf4:	add	r4, r4, #8
   1daf8:	bl	f40 <memset@plt>
   1dafc:	cmp	r6, #207	; 0xcf
   1db00:	str	r6, [r4]
   1db04:	bls	1ea18 <gen_dnhostop+0x14c0>
   1db08:	sub	r0, r6, #208	; 0xd0
   1db0c:	mov	r2, #8
   1db10:	str	r0, [r4]
   1db14:	ldr	r1, [r4, #4]
   1db18:	add	r4, r1, r0
   1db1c:	mov	r0, #21
   1db20:	add	r1, r9, #3
   1db24:	str	r7, [r4, #4]
   1db28:	str	r0, [r4, #8]
   1db2c:	movw	r0, #33030	; 0x8106
   1db30:	str	r0, [r4, #20]
   1db34:	rev	r0, r8
   1db38:	str	r4, [r4, #96]	; 0x60
   1db3c:	lsr	r3, r0, #16
   1db40:	mov	r0, #3
   1db44:	str	r3, [sp, #20]
   1db48:	bl	a9f8 <gen_cmp>
   1db4c:	mov	r7, r0
   1db50:	cmp	r4, #0
   1db54:	beq	1db88 <gen_dnhostop+0x630>
   1db58:	ldr	r0, [r7, #96]	; 0x60
   1db5c:	mov	r1, r4
   1db60:	ldr	r2, [r1, #44]	; 0x2c
   1db64:	add	r3, r1, #84	; 0x54
   1db68:	cmp	r2, #0
   1db6c:	mov	r2, #84	; 0x54
   1db70:	movweq	r2, #60	; 0x3c
   1db74:	addeq	r3, r1, #60	; 0x3c
   1db78:	ldr	r1, [r1, r2]
   1db7c:	str	r0, [r3]
   1db80:	cmp	r1, #0
   1db84:	bne	1db60 <gen_dnhostop+0x608>
   1db88:	ldr	r0, [r4, #44]	; 0x2c
   1db8c:	cmp	r7, #0
   1db90:	clz	r0, r0
   1db94:	lsr	r0, r0, #5
   1db98:	str	r0, [r4, #44]	; 0x2c
   1db9c:	ldr	r1, [r7, #44]	; 0x2c
   1dba0:	clz	r0, r1
   1dba4:	lsr	r0, r0, #5
   1dba8:	str	r0, [r7, #44]	; 0x2c
   1dbac:	str	r7, [sp, #24]
   1dbb0:	beq	1dbfc <gen_dnhostop+0x6a4>
   1dbb4:	cmp	r1, #0
   1dbb8:	mov	r1, #60	; 0x3c
   1dbbc:	add	r0, r7, #60	; 0x3c
   1dbc0:	movweq	r1, #84	; 0x54
   1dbc4:	addeq	r0, r7, #84	; 0x54
   1dbc8:	ldr	r1, [r7, r1]
   1dbcc:	cmp	r1, #0
   1dbd0:	beq	1dc00 <gen_dnhostop+0x6a8>
   1dbd4:	ldr	r2, [r1, #44]	; 0x2c
   1dbd8:	add	r0, r1, #84	; 0x54
   1dbdc:	cmp	r2, #0
   1dbe0:	mov	r2, #84	; 0x54
   1dbe4:	movweq	r2, #60	; 0x3c
   1dbe8:	addeq	r0, r1, #60	; 0x3c
   1dbec:	ldr	r1, [r1, r2]
   1dbf0:	cmp	r1, #0
   1dbf4:	bne	1dbd4 <gen_dnhostop+0x67c>
   1dbf8:	b	1dc00 <gen_dnhostop+0x6a8>
   1dbfc:	add	r0, sp, #24
   1dc00:	str	r4, [r0]
   1dc04:	ldr	r0, [r7, #44]	; 0x2c
   1dc08:	clz	r0, r0
   1dc0c:	lsr	r0, r0, #5
   1dc10:	str	r0, [r7, #44]	; 0x2c
   1dc14:	ldr	r0, [r4, #96]	; 0x60
   1dc18:	str	r0, [r7, #96]	; 0x60
   1dc1c:	ldr	r0, [pc, #4004]	; 1ebc8 <gen_dnhostop+0x1670>
   1dc20:	add	r0, pc, r0
   1dc24:	ldrb	r0, [r0]
   1dc28:	ldr	r1, [pc, #3996]	; 1ebcc <gen_dnhostop+0x1674>
   1dc2c:	ldr	r1, [pc, r1]
   1dc30:	cmp	r0, #0
   1dc34:	str	r7, [sp, #12]
   1dc38:	add	r5, r1, #2
   1dc3c:	beq	1dc9c <gen_dnhostop+0x744>
   1dc40:	ldr	r4, [pc, #3976]	; 1ebd0 <gen_dnhostop+0x1678>
   1dc44:	ldr	r4, [pc, r4]
   1dc48:	cmn	r4, #1
   1dc4c:	bne	1dcbc <gen_dnhostop+0x764>
   1dc50:	ldr	r4, [pc, #3964]	; 1ebd4 <gen_dnhostop+0x167c>
   1dc54:	mvn	r1, #15
   1dc58:	ldr	r4, [pc, r4]
   1dc5c:	ldr	r0, [pc, #3956]	; 1ebd8 <gen_dnhostop+0x1680>
   1dc60:	ldr	r2, [pc, #3956]	; 1ebdc <gen_dnhostop+0x1684>
   1dc64:	add	r0, pc, r0
   1dc68:	add	r2, pc, r2
   1dc6c:	ldr	r3, [r0, r4, lsl #2]
   1dc70:	cmp	r3, #0
   1dc74:	beq	1dca8 <gen_dnhostop+0x750>
   1dc78:	add	r3, r4, #1
   1dc7c:	adds	r1, r1, #1
   1dc80:	asr	r7, r3, #31
   1dc84:	add	r7, r3, r7, lsr #28
   1dc88:	bic	r7, r7, #15
   1dc8c:	sub	r4, r3, r7
   1dc90:	str	r4, [r2]
   1dc94:	bne	1dc6c <gen_dnhostop+0x714>
   1dc98:	b	1e6d8 <gen_dnhostop+0x1180>
   1dc9c:	ldr	r9, [pc, #4084]	; 1ec98 <gen_dnhostop+0x1740>
   1dca0:	ldr	r9, [pc, r9]
   1dca4:	b	1ddb0 <gen_dnhostop+0x858>
   1dca8:	mov	r1, #1
   1dcac:	str	r1, [r0, r4, lsl #2]
   1dcb0:	ldr	r0, [pc, #4068]	; 1ec9c <gen_dnhostop+0x1744>
   1dcb4:	add	r0, pc, r0
   1dcb8:	str	r4, [r0]
   1dcbc:	ldr	r0, [pc, #4060]	; 1eca0 <gen_dnhostop+0x1748>
   1dcc0:	mov	r6, sl
   1dcc4:	ldr	r0, [pc, r0]
   1dcc8:	ldr	r7, [r6, r0, lsl #3]!
   1dccc:	cmp	r7, #19
   1dcd0:	bhi	1dd28 <gen_dnhostop+0x7d0>
   1dcd4:	ldr	r1, [pc, #4088]	; 1ecd4 <gen_dnhostop+0x177c>
   1dcd8:	add	r9, r0, #1
   1dcdc:	cmp	r0, #15
   1dce0:	add	r1, pc, r1
   1dce4:	str	r9, [r1]
   1dce8:	bge	1ea18 <gen_dnhostop+0x14c0>
   1dcec:	mov	r0, #1024	; 0x400
   1dcf0:	lsl	r7, r0, r9
   1dcf4:	mov	r0, r7
   1dcf8:	bl	ed4 <malloc@plt>
   1dcfc:	cmp	r0, #0
   1dd00:	str	r0, [r6, #12]
   1dd04:	beq	1ea18 <gen_dnhostop+0x14c0>
   1dd08:	mov	r1, #0
   1dd0c:	mov	r2, r7
   1dd10:	add	r6, r6, #8
   1dd14:	bl	f40 <memset@plt>
   1dd18:	cmp	r7, #19
   1dd1c:	str	r7, [r6]
   1dd20:	bhi	1dd2c <gen_dnhostop+0x7d4>
   1dd24:	b	1ea18 <gen_dnhostop+0x14c0>
   1dd28:	mov	r9, r0
   1dd2c:	sub	r0, r7, #20
   1dd30:	mov	r1, #97	; 0x61
   1dd34:	str	r0, [r6]
   1dd38:	ldr	r6, [r6, #4]
   1dd3c:	str	r1, [r6, r0]!
   1dd40:	cmp	r6, #0
   1dd44:	str	r4, [r6, #12]
   1dd48:	beq	1ddb0 <gen_dnhostop+0x858>
   1dd4c:	ldr	r7, [sl, r9, lsl #3]!
   1dd50:	cmp	r7, #19
   1dd54:	bhi	1de48 <gen_dnhostop+0x8f0>
   1dd58:	ldr	r0, [pc, #3980]	; 1ecec <gen_dnhostop+0x1794>
   1dd5c:	add	r8, r9, #1
   1dd60:	cmp	r9, #15
   1dd64:	add	r0, pc, r0
   1dd68:	str	r8, [r0]
   1dd6c:	bge	1ea18 <gen_dnhostop+0x14c0>
   1dd70:	mov	r0, #1024	; 0x400
   1dd74:	lsl	r7, r0, r8
   1dd78:	mov	r0, r7
   1dd7c:	bl	ed4 <malloc@plt>
   1dd80:	ldr	r9, [sp, #8]
   1dd84:	cmp	r0, #0
   1dd88:	str	r0, [sl, #12]
   1dd8c:	beq	1ea18 <gen_dnhostop+0x14c0>
   1dd90:	mov	r1, #0
   1dd94:	mov	r2, r7
   1dd98:	add	sl, sl, #8
   1dd9c:	bl	f40 <memset@plt>
   1dda0:	cmp	r7, #19
   1dda4:	str	r7, [sl]
   1dda8:	bhi	1de50 <gen_dnhostop+0x8f8>
   1ddac:	b	1ea18 <gen_dnhostop+0x14c0>
   1ddb0:	mov	r6, sl
   1ddb4:	ldr	r7, [r6, r9, lsl #3]!
   1ddb8:	cmp	r7, #19
   1ddbc:	bhi	1de18 <gen_dnhostop+0x8c0>
   1ddc0:	ldr	r0, [pc, #3884]	; 1ecf4 <gen_dnhostop+0x179c>
   1ddc4:	add	r8, r9, #1
   1ddc8:	cmp	r9, #15
   1ddcc:	add	r0, pc, r0
   1ddd0:	str	r8, [r0]
   1ddd4:	bge	1ea18 <gen_dnhostop+0x14c0>
   1ddd8:	mov	r0, #1024	; 0x400
   1dddc:	lsl	r7, r0, r8
   1dde0:	mov	r0, r7
   1dde4:	bl	ed4 <malloc@plt>
   1dde8:	ldr	r9, [sp, #8]
   1ddec:	cmp	r0, #0
   1ddf0:	str	r0, [r6, #12]
   1ddf4:	beq	1ea18 <gen_dnhostop+0x14c0>
   1ddf8:	mov	r1, #0
   1ddfc:	mov	r2, r7
   1de00:	add	r6, r6, #8
   1de04:	bl	f40 <memset@plt>
   1de08:	cmp	r7, #19
   1de0c:	str	r7, [r6]
   1de10:	bhi	1de20 <gen_dnhostop+0x8c8>
   1de14:	b	1ea18 <gen_dnhostop+0x14c0>
   1de18:	mov	r8, r9
   1de1c:	ldr	r9, [sp, #8]
   1de20:	sub	r0, r7, #20
   1de24:	mov	r1, #48	; 0x30
   1de28:	str	r0, [r6]
   1de2c:	ldr	r6, [r6, #4]
   1de30:	str	r1, [r6, r0]!
   1de34:	ldr	r0, [pc, #3772]	; 1ecf8 <gen_dnhostop+0x17a0>
   1de38:	ldr	r0, [pc, r0]
   1de3c:	add	r0, r0, r5
   1de40:	str	r0, [r6, #12]
   1de44:	b	1de88 <gen_dnhostop+0x930>
   1de48:	mov	r8, r9
   1de4c:	ldr	r9, [sp, #8]
   1de50:	sub	r1, r7, #20
   1de54:	mov	r2, #80	; 0x50
   1de58:	str	r1, [sl]
   1de5c:	ldr	r0, [sl, #4]
   1de60:	str	r2, [r0, r1]!
   1de64:	mov	r2, r6
   1de68:	str	r5, [r0, #12]
   1de6c:	mov	r1, r2
   1de70:	ldr	r2, [r2, #16]
   1de74:	cmp	r2, #0
   1de78:	bne	1de6c <gen_dnhostop+0x914>
   1de7c:	str	r0, [r1, #16]
   1de80:	ldr	sl, [pc, #3688]	; 1ecf0 <gen_dnhostop+0x1798>
   1de84:	add	sl, pc, sl
   1de88:	mov	r4, sl
   1de8c:	ldr	r7, [r4, r8, lsl #3]!
   1de90:	cmp	r7, #19
   1de94:	bhi	1def0 <gen_dnhostop+0x998>
   1de98:	ldr	r0, [pc, #3676]	; 1ecfc <gen_dnhostop+0x17a4>
   1de9c:	add	r5, r8, #1
   1dea0:	cmp	r8, #15
   1dea4:	add	r0, pc, r0
   1dea8:	str	r5, [r0]
   1deac:	bge	1ea18 <gen_dnhostop+0x14c0>
   1deb0:	mov	r0, #1024	; 0x400
   1deb4:	lsl	r7, r0, r5
   1deb8:	mov	r0, r7
   1debc:	bl	ed4 <malloc@plt>
   1dec0:	ldr	r8, [sp, #12]
   1dec4:	cmp	r0, #0
   1dec8:	str	r0, [r4, #12]
   1decc:	beq	1ea18 <gen_dnhostop+0x14c0>
   1ded0:	mov	r1, #0
   1ded4:	mov	r2, r7
   1ded8:	add	r4, r4, #8
   1dedc:	bl	f40 <memset@plt>
   1dee0:	cmp	r7, #19
   1dee4:	str	r7, [r4]
   1dee8:	bhi	1def8 <gen_dnhostop+0x9a0>
   1deec:	b	1ea18 <gen_dnhostop+0x14c0>
   1def0:	mov	r5, r8
   1def4:	ldr	r8, [sp, #12]
   1def8:	sub	r1, r7, #20
   1defc:	mov	r2, #84	; 0x54
   1df00:	str	r1, [r4]
   1df04:	ldr	r0, [r4, #4]
   1df08:	str	r2, [r0, r1]!
   1df0c:	mov	r1, #7
   1df10:	mov	r2, r6
   1df14:	str	r1, [r0, #12]
   1df18:	mov	r1, r2
   1df1c:	ldr	r2, [r2, #16]
   1df20:	cmp	r2, #0
   1df24:	bne	1df18 <gen_dnhostop+0x9c0>
   1df28:	str	r0, [r1, #16]
   1df2c:	mov	r4, sl
   1df30:	ldr	r7, [r4, r5, lsl #3]!
   1df34:	cmp	r7, #207	; 0xcf
   1df38:	bhi	1df8c <gen_dnhostop+0xa34>
   1df3c:	ldr	r1, [pc, #3516]	; 1ed00 <gen_dnhostop+0x17a8>
   1df40:	add	r0, r5, #1
   1df44:	cmp	r5, #15
   1df48:	add	r1, pc, r1
   1df4c:	str	r0, [r1]
   1df50:	bge	1ea18 <gen_dnhostop+0x14c0>
   1df54:	mov	r1, #1024	; 0x400
   1df58:	lsl	r7, r1, r0
   1df5c:	mov	r0, r7
   1df60:	bl	ed4 <malloc@plt>
   1df64:	cmp	r0, #0
   1df68:	str	r0, [r4, #12]
   1df6c:	beq	1ea18 <gen_dnhostop+0x14c0>
   1df70:	mov	r1, #0
   1df74:	mov	r2, r7
   1df78:	add	r4, r4, #8
   1df7c:	bl	f40 <memset@plt>
   1df80:	cmp	r7, #207	; 0xcf
   1df84:	str	r7, [r4]
   1df88:	bls	1ea18 <gen_dnhostop+0x14c0>
   1df8c:	sub	r0, r7, #208	; 0xd0
   1df90:	ldr	r3, [sp, #20]
   1df94:	mov	r2, #8
   1df98:	str	r0, [r4]
   1df9c:	ldr	r1, [r4, #4]
   1dfa0:	add	r4, r1, r0
   1dfa4:	mov	r0, #21
   1dfa8:	add	r1, r9, #2
   1dfac:	str	r6, [r4, #4]
   1dfb0:	str	r0, [r4, #8]
   1dfb4:	mov	r0, #6
   1dfb8:	str	r0, [r4, #20]
   1dfbc:	mov	r0, #3
   1dfc0:	str	r4, [r4, #96]	; 0x60
   1dfc4:	bl	a9f8 <gen_cmp>
   1dfc8:	cmp	r4, #0
   1dfcc:	beq	1e000 <gen_dnhostop+0xaa8>
   1dfd0:	ldr	r1, [r0, #96]	; 0x60
   1dfd4:	mov	r2, r4
   1dfd8:	ldr	r3, [r2, #44]	; 0x2c
   1dfdc:	add	r7, r2, #84	; 0x54
   1dfe0:	cmp	r3, #0
   1dfe4:	mov	r3, #84	; 0x54
   1dfe8:	movweq	r3, #60	; 0x3c
   1dfec:	addeq	r7, r2, #60	; 0x3c
   1dff0:	ldr	r2, [r2, r3]
   1dff4:	str	r1, [r7]
   1dff8:	cmp	r2, #0
   1dffc:	bne	1dfd8 <gen_dnhostop+0xa80>
   1e000:	ldr	r1, [r4, #44]	; 0x2c
   1e004:	cmp	r0, #0
   1e008:	clz	r1, r1
   1e00c:	lsr	r1, r1, #5
   1e010:	str	r1, [r4, #44]	; 0x2c
   1e014:	ldr	r2, [r0, #44]	; 0x2c
   1e018:	clz	r1, r2
   1e01c:	lsr	r1, r1, #5
   1e020:	str	r1, [r0, #44]	; 0x2c
   1e024:	str	r0, [sp, #24]
   1e028:	beq	1e074 <gen_dnhostop+0xb1c>
   1e02c:	cmp	r2, #0
   1e030:	mov	r2, #60	; 0x3c
   1e034:	add	r1, r0, #60	; 0x3c
   1e038:	movweq	r2, #84	; 0x54
   1e03c:	addeq	r1, r0, #84	; 0x54
   1e040:	ldr	r2, [r0, r2]
   1e044:	cmp	r2, #0
   1e048:	beq	1e078 <gen_dnhostop+0xb20>
   1e04c:	ldr	r3, [r2, #44]	; 0x2c
   1e050:	add	r1, r2, #84	; 0x54
   1e054:	cmp	r3, #0
   1e058:	mov	r3, #84	; 0x54
   1e05c:	movweq	r3, #60	; 0x3c
   1e060:	addeq	r1, r2, #60	; 0x3c
   1e064:	ldr	r2, [r2, r3]
   1e068:	cmp	r2, #0
   1e06c:	bne	1e04c <gen_dnhostop+0xaf4>
   1e070:	b	1e078 <gen_dnhostop+0xb20>
   1e074:	add	r1, sp, #24
   1e078:	str	r4, [r1]
   1e07c:	ldr	r1, [r0, #44]	; 0x2c
   1e080:	clz	r2, r1
   1e084:	cmp	r1, #0
   1e088:	lsr	r2, r2, #5
   1e08c:	movwne	r1, #1
   1e090:	cmp	r0, #0
   1e094:	str	r2, [r0, #44]	; 0x2c
   1e098:	ldr	r2, [r4, #96]	; 0x60
   1e09c:	str	r1, [r0, #44]	; 0x2c
   1e0a0:	str	r2, [r0, #96]	; 0x60
   1e0a4:	beq	1e0e0 <gen_dnhostop+0xb88>
   1e0a8:	ldr	r2, [r8, #96]	; 0x60
   1e0ac:	mov	r3, r0
   1e0b0:	b	1e0b8 <gen_dnhostop+0xb60>
   1e0b4:	ldr	r1, [r3, #44]	; 0x2c
   1e0b8:	cmp	r1, #0
   1e0bc:	mov	r1, #84	; 0x54
   1e0c0:	add	r7, r3, #84	; 0x54
   1e0c4:	movweq	r1, #60	; 0x3c
   1e0c8:	addeq	r7, r3, #60	; 0x3c
   1e0cc:	ldr	r3, [r3, r1]
   1e0d0:	str	r2, [r7]
   1e0d4:	cmp	r3, #0
   1e0d8:	bne	1e0b4 <gen_dnhostop+0xb5c>
   1e0dc:	ldr	r1, [r0, #44]	; 0x2c
   1e0e0:	clz	r1, r1
   1e0e4:	cmp	r8, #0
   1e0e8:	lsr	r1, r1, #5
   1e0ec:	str	r1, [r0, #44]	; 0x2c
   1e0f0:	str	r8, [sp, #24]
   1e0f4:	beq	1e124 <gen_dnhostop+0xbcc>
   1e0f8:	mov	r2, r8
   1e0fc:	ldr	r3, [r2, #44]	; 0x2c
   1e100:	add	r1, r2, #84	; 0x54
   1e104:	cmp	r3, #0
   1e108:	mov	r3, #84	; 0x54
   1e10c:	movweq	r3, #60	; 0x3c
   1e110:	addeq	r1, r2, #60	; 0x3c
   1e114:	ldr	r2, [r2, r3]
   1e118:	cmp	r2, #0
   1e11c:	bne	1e0fc <gen_dnhostop+0xba4>
   1e120:	b	1e128 <gen_dnhostop+0xbd0>
   1e124:	add	r1, sp, #24
   1e128:	str	r0, [r1]
   1e12c:	ldr	r0, [r0, #96]	; 0x60
   1e130:	str	r0, [r8, #96]	; 0x60
   1e134:	ldr	r0, [pc, #3016]	; 1ed04 <gen_dnhostop+0x17ac>
   1e138:	add	r0, pc, r0
   1e13c:	ldrb	r0, [r0]
   1e140:	ldr	r1, [pc, #3008]	; 1ed08 <gen_dnhostop+0x17b0>
   1e144:	ldr	r1, [pc, r1]
   1e148:	cmp	r0, #0
   1e14c:	add	r9, r1, #2
   1e150:	beq	1e1b0 <gen_dnhostop+0xc58>
   1e154:	ldr	r4, [pc, #2996]	; 1ed10 <gen_dnhostop+0x17b8>
   1e158:	ldr	r4, [pc, r4]
   1e15c:	cmn	r4, #1
   1e160:	bne	1e1d0 <gen_dnhostop+0xc78>
   1e164:	ldr	r4, [pc, #2984]	; 1ed14 <gen_dnhostop+0x17bc>
   1e168:	mvn	r1, #15
   1e16c:	ldr	r4, [pc, r4]
   1e170:	ldr	r0, [pc, #2976]	; 1ed18 <gen_dnhostop+0x17c0>
   1e174:	ldr	r2, [pc, #2976]	; 1ed1c <gen_dnhostop+0x17c4>
   1e178:	add	r0, pc, r0
   1e17c:	add	r2, pc, r2
   1e180:	ldr	r3, [r0, r4, lsl #2]
   1e184:	cmp	r3, #0
   1e188:	beq	1e1bc <gen_dnhostop+0xc64>
   1e18c:	add	r3, r4, #1
   1e190:	adds	r1, r1, #1
   1e194:	asr	r7, r3, #31
   1e198:	add	r7, r3, r7, lsr #28
   1e19c:	bic	r7, r7, #15
   1e1a0:	sub	r4, r3, r7
   1e1a4:	str	r4, [r2]
   1e1a8:	bne	1e180 <gen_dnhostop+0xc28>
   1e1ac:	b	1e6d8 <gen_dnhostop+0x1180>
   1e1b0:	ldr	r5, [pc, #2900]	; 1ed0c <gen_dnhostop+0x17b4>
   1e1b4:	ldr	r5, [pc, r5]
   1e1b8:	b	1e2c8 <gen_dnhostop+0xd70>
   1e1bc:	mov	r1, #1
   1e1c0:	str	r1, [r0, r4, lsl #2]
   1e1c4:	ldr	r0, [pc, #2900]	; 1ed20 <gen_dnhostop+0x17c8>
   1e1c8:	add	r0, pc, r0
   1e1cc:	str	r4, [r0]
   1e1d0:	ldr	r0, [pc, #2892]	; 1ed24 <gen_dnhostop+0x17cc>
   1e1d4:	mov	r6, sl
   1e1d8:	ldr	r0, [pc, r0]
   1e1dc:	ldr	r7, [r6, r0, lsl #3]!
   1e1e0:	cmp	r7, #19
   1e1e4:	bhi	1e23c <gen_dnhostop+0xce4>
   1e1e8:	ldr	r1, [pc, #2872]	; 1ed28 <gen_dnhostop+0x17d0>
   1e1ec:	add	r5, r0, #1
   1e1f0:	cmp	r0, #15
   1e1f4:	add	r1, pc, r1
   1e1f8:	str	r5, [r1]
   1e1fc:	bge	1ea18 <gen_dnhostop+0x14c0>
   1e200:	mov	r0, #1024	; 0x400
   1e204:	lsl	r7, r0, r5
   1e208:	mov	r0, r7
   1e20c:	bl	ed4 <malloc@plt>
   1e210:	cmp	r0, #0
   1e214:	str	r0, [r6, #12]
   1e218:	beq	1ea18 <gen_dnhostop+0x14c0>
   1e21c:	mov	r1, #0
   1e220:	mov	r2, r7
   1e224:	add	r6, r6, #8
   1e228:	bl	f40 <memset@plt>
   1e22c:	cmp	r7, #19
   1e230:	str	r7, [r6]
   1e234:	bhi	1e240 <gen_dnhostop+0xce8>
   1e238:	b	1ea18 <gen_dnhostop+0x14c0>
   1e23c:	mov	r5, r0
   1e240:	sub	r0, r7, #20
   1e244:	mov	r1, #97	; 0x61
   1e248:	str	r0, [r6]
   1e24c:	ldr	r6, [r6, #4]
   1e250:	str	r1, [r6, r0]!
   1e254:	cmp	r6, #0
   1e258:	str	r4, [r6, #12]
   1e25c:	beq	1e2c4 <gen_dnhostop+0xd6c>
   1e260:	mov	r7, sl
   1e264:	ldr	r8, [r7, r5, lsl #3]!
   1e268:	cmp	r8, #19
   1e26c:	bhi	1e358 <gen_dnhostop+0xe00>
   1e270:	ldr	r0, [pc, #2740]	; 1ed2c <gen_dnhostop+0x17d4>
   1e274:	add	sl, r5, #1
   1e278:	cmp	r5, #15
   1e27c:	add	r0, pc, r0
   1e280:	str	sl, [r0]
   1e284:	bge	1ea18 <gen_dnhostop+0x14c0>
   1e288:	mov	r0, #1024	; 0x400
   1e28c:	lsl	r8, r0, sl
   1e290:	mov	r0, r8
   1e294:	bl	ed4 <malloc@plt>
   1e298:	cmp	r0, #0
   1e29c:	str	r0, [r7, #12]
   1e2a0:	beq	1ea18 <gen_dnhostop+0x14c0>
   1e2a4:	mov	r1, #0
   1e2a8:	mov	r2, r8
   1e2ac:	add	r7, r7, #8
   1e2b0:	bl	f40 <memset@plt>
   1e2b4:	cmp	r8, #19
   1e2b8:	str	r8, [r7]
   1e2bc:	bhi	1e35c <gen_dnhostop+0xe04>
   1e2c0:	b	1ea18 <gen_dnhostop+0x14c0>
   1e2c4:	ldr	r8, [sp, #12]
   1e2c8:	mov	r6, sl
   1e2cc:	ldr	r7, [r6, r5, lsl #3]!
   1e2d0:	cmp	r7, #19
   1e2d4:	bhi	1e32c <gen_dnhostop+0xdd4>
   1e2d8:	ldr	r0, [pc, #2640]	; 1ed30 <gen_dnhostop+0x17d8>
   1e2dc:	add	sl, r5, #1
   1e2e0:	cmp	r5, #15
   1e2e4:	add	r0, pc, r0
   1e2e8:	str	sl, [r0]
   1e2ec:	bge	1ea18 <gen_dnhostop+0x14c0>
   1e2f0:	mov	r0, #1024	; 0x400
   1e2f4:	lsl	r7, r0, sl
   1e2f8:	mov	r0, r7
   1e2fc:	bl	ed4 <malloc@plt>
   1e300:	cmp	r0, #0
   1e304:	str	r0, [r6, #12]
   1e308:	beq	1ea18 <gen_dnhostop+0x14c0>
   1e30c:	mov	r1, #0
   1e310:	mov	r2, r7
   1e314:	add	r6, r6, #8
   1e318:	bl	f40 <memset@plt>
   1e31c:	cmp	r7, #19
   1e320:	str	r7, [r6]
   1e324:	bhi	1e330 <gen_dnhostop+0xdd8>
   1e328:	b	1ea18 <gen_dnhostop+0x14c0>
   1e32c:	mov	sl, r5
   1e330:	sub	r0, r7, #20
   1e334:	mov	r1, #40	; 0x28
   1e338:	str	r0, [r6]
   1e33c:	ldr	r6, [r6, #4]
   1e340:	str	r1, [r6, r0]!
   1e344:	ldr	r0, [pc, #2536]	; 1ed34 <gen_dnhostop+0x17dc>
   1e348:	ldr	r0, [pc, r0]
   1e34c:	add	r0, r0, r9
   1e350:	str	r0, [r6, #12]
   1e354:	b	1e390 <gen_dnhostop+0xe38>
   1e358:	mov	sl, r5
   1e35c:	sub	r1, r8, #20
   1e360:	mov	r2, #72	; 0x48
   1e364:	str	r1, [r7]
   1e368:	ldr	r0, [r7, #4]
   1e36c:	str	r2, [r0, r1]!
   1e370:	mov	r2, r6
   1e374:	str	r9, [r0, #12]
   1e378:	mov	r1, r2
   1e37c:	ldr	r2, [r2, #16]
   1e380:	cmp	r2, #0
   1e384:	bne	1e378 <gen_dnhostop+0xe20>
   1e388:	ldr	r8, [sp, #12]
   1e38c:	str	r0, [r1, #16]
   1e390:	ldr	r4, [pc, #2464]	; 1ed38 <gen_dnhostop+0x17e0>
   1e394:	add	r4, pc, r4
   1e398:	ldr	r7, [r4, sl, lsl #3]!
   1e39c:	cmp	r7, #19
   1e3a0:	bhi	1e400 <gen_dnhostop+0xea8>
   1e3a4:	ldr	r0, [pc, #2452]	; 1ed40 <gen_dnhostop+0x17e8>
   1e3a8:	add	r5, sl, #1
   1e3ac:	cmp	sl, #15
   1e3b0:	add	r0, pc, r0
   1e3b4:	str	r5, [r0]
   1e3b8:	bge	1ea18 <gen_dnhostop+0x14c0>
   1e3bc:	mov	r0, #1024	; 0x400
   1e3c0:	lsl	r7, r0, r5
   1e3c4:	mov	r0, r7
   1e3c8:	bl	ed4 <malloc@plt>
   1e3cc:	str	r0, [r4, #12]
   1e3d0:	cmp	r0, #0
   1e3d4:	ldr	sl, [pc, #2408]	; 1ed44 <gen_dnhostop+0x17ec>
   1e3d8:	add	sl, pc, sl
   1e3dc:	beq	1ea18 <gen_dnhostop+0x14c0>
   1e3e0:	mov	r1, #0
   1e3e4:	mov	r2, r7
   1e3e8:	add	r4, r4, #8
   1e3ec:	bl	f40 <memset@plt>
   1e3f0:	cmp	r7, #19
   1e3f4:	str	r7, [r4]
   1e3f8:	bhi	1e40c <gen_dnhostop+0xeb4>
   1e3fc:	b	1ea18 <gen_dnhostop+0x14c0>
   1e400:	mov	r5, sl
   1e404:	ldr	sl, [pc, #2352]	; 1ed3c <gen_dnhostop+0x17e4>
   1e408:	add	sl, pc, sl
   1e40c:	sub	r1, r7, #20
   1e410:	mov	r2, #84	; 0x54
   1e414:	str	r1, [r4]
   1e418:	ldr	r0, [r4, #4]
   1e41c:	str	r2, [r0, r1]!
   1e420:	movw	r1, #65287	; 0xff07
   1e424:	mov	r2, r6
   1e428:	str	r1, [r0, #12]
   1e42c:	mov	r1, r2
   1e430:	ldr	r2, [r2, #16]
   1e434:	cmp	r2, #0
   1e438:	bne	1e42c <gen_dnhostop+0xed4>
   1e43c:	str	r0, [r1, #16]
   1e440:	mov	r4, sl
   1e444:	ldr	r7, [r4, r5, lsl #3]!
   1e448:	cmp	r7, #207	; 0xcf
   1e44c:	bhi	1e4a8 <gen_dnhostop+0xf50>
   1e450:	ldr	r1, [pc, #2288]	; 1ed48 <gen_dnhostop+0x17f0>
   1e454:	add	r0, r5, #1
   1e458:	cmp	r5, #15
   1e45c:	add	r1, pc, r1
   1e460:	str	r0, [r1]
   1e464:	bge	1ea18 <gen_dnhostop+0x14c0>
   1e468:	mov	r1, #1024	; 0x400
   1e46c:	lsl	r7, r1, r0
   1e470:	mov	r0, r7
   1e474:	bl	ed4 <malloc@plt>
   1e478:	ldr	r5, [sp, #16]
   1e47c:	cmp	r0, #0
   1e480:	str	r0, [r4, #12]
   1e484:	beq	1ea18 <gen_dnhostop+0x14c0>
   1e488:	mov	r1, #0
   1e48c:	mov	r2, r7
   1e490:	add	r4, r4, #8
   1e494:	bl	f40 <memset@plt>
   1e498:	cmp	r7, #207	; 0xcf
   1e49c:	str	r7, [r4]
   1e4a0:	bhi	1e4ac <gen_dnhostop+0xf54>
   1e4a4:	b	1ea18 <gen_dnhostop+0x14c0>
   1e4a8:	ldr	r5, [sp, #16]
   1e4ac:	sub	r0, r7, #208	; 0xd0
   1e4b0:	ldr	r3, [sp, #20]
   1e4b4:	mov	r2, #8
   1e4b8:	str	r0, [r4]
   1e4bc:	ldr	r1, [r4, #4]
   1e4c0:	add	r4, r1, r0
   1e4c4:	mov	r0, #21
   1e4c8:	add	r1, r5, #3
   1e4cc:	str	r6, [r4, #4]
   1e4d0:	str	r0, [r4, #8]
   1e4d4:	movw	r0, #33026	; 0x8102
   1e4d8:	str	r0, [r4, #20]
   1e4dc:	mov	r0, #3
   1e4e0:	str	r4, [r4, #96]	; 0x60
   1e4e4:	bl	a9f8 <gen_cmp>
   1e4e8:	cmp	r4, #0
   1e4ec:	beq	1e520 <gen_dnhostop+0xfc8>
   1e4f0:	ldr	r1, [r0, #96]	; 0x60
   1e4f4:	mov	r2, r4
   1e4f8:	ldr	r3, [r2, #44]	; 0x2c
   1e4fc:	add	r7, r2, #84	; 0x54
   1e500:	cmp	r3, #0
   1e504:	mov	r3, #84	; 0x54
   1e508:	movweq	r3, #60	; 0x3c
   1e50c:	addeq	r7, r2, #60	; 0x3c
   1e510:	ldr	r2, [r2, r3]
   1e514:	str	r1, [r7]
   1e518:	cmp	r2, #0
   1e51c:	bne	1e4f8 <gen_dnhostop+0xfa0>
   1e520:	ldr	r1, [r4, #44]	; 0x2c
   1e524:	cmp	r0, #0
   1e528:	clz	r1, r1
   1e52c:	lsr	r1, r1, #5
   1e530:	str	r1, [r4, #44]	; 0x2c
   1e534:	ldr	r2, [r0, #44]	; 0x2c
   1e538:	clz	r1, r2
   1e53c:	lsr	r1, r1, #5
   1e540:	str	r1, [r0, #44]	; 0x2c
   1e544:	str	r0, [sp, #24]
   1e548:	beq	1e594 <gen_dnhostop+0x103c>
   1e54c:	cmp	r2, #0
   1e550:	mov	r2, #60	; 0x3c
   1e554:	add	r1, r0, #60	; 0x3c
   1e558:	movweq	r2, #84	; 0x54
   1e55c:	addeq	r1, r0, #84	; 0x54
   1e560:	ldr	r2, [r0, r2]
   1e564:	cmp	r2, #0
   1e568:	beq	1e598 <gen_dnhostop+0x1040>
   1e56c:	ldr	r3, [r2, #44]	; 0x2c
   1e570:	add	r1, r2, #84	; 0x54
   1e574:	cmp	r3, #0
   1e578:	mov	r3, #84	; 0x54
   1e57c:	movweq	r3, #60	; 0x3c
   1e580:	addeq	r1, r2, #60	; 0x3c
   1e584:	ldr	r2, [r2, r3]
   1e588:	cmp	r2, #0
   1e58c:	bne	1e56c <gen_dnhostop+0x1014>
   1e590:	b	1e598 <gen_dnhostop+0x1040>
   1e594:	add	r1, sp, #24
   1e598:	str	r4, [r1]
   1e59c:	ldr	r1, [r0, #44]	; 0x2c
   1e5a0:	clz	r2, r1
   1e5a4:	cmp	r1, #0
   1e5a8:	lsr	r2, r2, #5
   1e5ac:	movwne	r1, #1
   1e5b0:	cmp	r0, #0
   1e5b4:	str	r2, [r0, #44]	; 0x2c
   1e5b8:	ldr	r2, [r4, #96]	; 0x60
   1e5bc:	str	r1, [r0, #44]	; 0x2c
   1e5c0:	str	r2, [r0, #96]	; 0x60
   1e5c4:	beq	1e600 <gen_dnhostop+0x10a8>
   1e5c8:	ldr	r2, [r8, #96]	; 0x60
   1e5cc:	mov	r3, r0
   1e5d0:	b	1e5d8 <gen_dnhostop+0x1080>
   1e5d4:	ldr	r1, [r3, #44]	; 0x2c
   1e5d8:	cmp	r1, #0
   1e5dc:	mov	r1, #84	; 0x54
   1e5e0:	add	r7, r3, #84	; 0x54
   1e5e4:	movweq	r1, #60	; 0x3c
   1e5e8:	addeq	r7, r3, #60	; 0x3c
   1e5ec:	ldr	r3, [r3, r1]
   1e5f0:	str	r2, [r7]
   1e5f4:	cmp	r3, #0
   1e5f8:	bne	1e5d4 <gen_dnhostop+0x107c>
   1e5fc:	ldr	r1, [r0, #44]	; 0x2c
   1e600:	clz	r1, r1
   1e604:	cmp	r8, #0
   1e608:	lsr	r1, r1, #5
   1e60c:	str	r1, [r0, #44]	; 0x2c
   1e610:	str	r8, [sp, #24]
   1e614:	beq	1e64c <gen_dnhostop+0x10f4>
   1e618:	mov	r2, r8
   1e61c:	ldr	r3, [r2, #44]	; 0x2c
   1e620:	add	r1, r2, #84	; 0x54
   1e624:	cmp	r3, #0
   1e628:	mov	r3, #84	; 0x54
   1e62c:	movweq	r3, #60	; 0x3c
   1e630:	addeq	r1, r2, #60	; 0x3c
   1e634:	ldr	r2, [r2, r3]
   1e638:	cmp	r2, #0
   1e63c:	bne	1e61c <gen_dnhostop+0x10c4>
   1e640:	b	1e650 <gen_dnhostop+0x10f8>
   1e644:	.word	0x00029e44
   1e648:	.word	0x00029d78
   1e64c:	add	r1, sp, #24
   1e650:	str	r0, [r1]
   1e654:	ldr	r0, [r0, #96]	; 0x60
   1e658:	str	r0, [r8, #96]	; 0x60
   1e65c:	ldr	r0, [pc, #1768]	; 1ed4c <gen_dnhostop+0x17f4>
   1e660:	add	r0, pc, r0
   1e664:	ldrb	r0, [r0]
   1e668:	ldr	r1, [pc, #1760]	; 1ed50 <gen_dnhostop+0x17f8>
   1e66c:	ldr	r1, [pc, r1]
   1e670:	cmp	r0, #0
   1e674:	add	r4, r1, #2
   1e678:	beq	1e6e8 <gen_dnhostop+0x1190>
   1e67c:	str	r4, [sp, #8]
   1e680:	ldr	r4, [pc, #1744]	; 1ed58 <gen_dnhostop+0x1800>
   1e684:	ldr	r4, [pc, r4]
   1e688:	cmn	r4, #1
   1e68c:	bne	1e718 <gen_dnhostop+0x11c0>
   1e690:	ldr	r4, [pc, #1732]	; 1ed5c <gen_dnhostop+0x1804>
   1e694:	mvn	r1, #15
   1e698:	ldr	r4, [pc, r4]
   1e69c:	ldr	r0, [pc, #1724]	; 1ed60 <gen_dnhostop+0x1808>
   1e6a0:	ldr	r2, [pc, #1724]	; 1ed64 <gen_dnhostop+0x180c>
   1e6a4:	add	r0, pc, r0
   1e6a8:	add	r2, pc, r2
   1e6ac:	ldr	r3, [r0, r4, lsl #2]
   1e6b0:	cmp	r3, #0
   1e6b4:	beq	1e704 <gen_dnhostop+0x11ac>
   1e6b8:	add	r3, r4, #1
   1e6bc:	adds	r1, r1, #1
   1e6c0:	asr	r7, r3, #31
   1e6c4:	add	r7, r3, r7, lsr #28
   1e6c8:	bic	r7, r7, #15
   1e6cc:	sub	r4, r3, r7
   1e6d0:	str	r4, [r2]
   1e6d4:	bne	1e6ac <gen_dnhostop+0x1154>
   1e6d8:	ldr	r0, [pc, #1544]	; 1ece8 <gen_dnhostop+0x1790>
   1e6dc:	add	r0, pc, r0
   1e6e0:	bl	2124 <sf_bpf_error>
   1e6e4:	.word	0x00029e24
   1e6e8:	ldr	r5, [pc, #1636]	; 1ed54 <gen_dnhostop+0x17fc>
   1e6ec:	ldr	r5, [pc, r5]
   1e6f0:	b	1e828 <gen_dnhostop+0x12d0>
   1e6f4:	.word	0x00029e14
   1e6f8:	.word	0x00029e0c
   1e6fc:	.word	0x00029e04
   1e700:	.word	0x00029dbc
   1e704:	mov	r1, #1
   1e708:	str	r1, [r0, r4, lsl #2]
   1e70c:	ldr	r0, [pc, #1620]	; 1ed68 <gen_dnhostop+0x1810>
   1e710:	add	r0, pc, r0
   1e714:	str	r4, [r0]
   1e718:	ldr	r0, [pc, #1612]	; 1ed6c <gen_dnhostop+0x1814>
   1e71c:	mov	r6, sl
   1e720:	ldr	r0, [pc, r0]
   1e724:	ldr	r7, [r6, r0, lsl #3]!
   1e728:	cmp	r7, #19
   1e72c:	bhi	1e784 <gen_dnhostop+0x122c>
   1e730:	ldr	r1, [pc, #1592]	; 1ed70 <gen_dnhostop+0x1818>
   1e734:	add	r5, r0, #1
   1e738:	cmp	r0, #15
   1e73c:	add	r1, pc, r1
   1e740:	str	r5, [r1]
   1e744:	bge	1ea18 <gen_dnhostop+0x14c0>
   1e748:	mov	r0, #1024	; 0x400
   1e74c:	lsl	r7, r0, r5
   1e750:	mov	r0, r7
   1e754:	bl	ed4 <malloc@plt>
   1e758:	cmp	r0, #0
   1e75c:	str	r0, [r6, #12]
   1e760:	beq	1ea18 <gen_dnhostop+0x14c0>
   1e764:	mov	r1, #0
   1e768:	mov	r2, r7
   1e76c:	add	r6, r6, #8
   1e770:	bl	f40 <memset@plt>
   1e774:	cmp	r7, #19
   1e778:	str	r7, [r6]
   1e77c:	bhi	1e788 <gen_dnhostop+0x1230>
   1e780:	b	1ea18 <gen_dnhostop+0x14c0>
   1e784:	mov	r5, r0
   1e788:	sub	r0, r7, #20
   1e78c:	mov	r1, #97	; 0x61
   1e790:	str	r0, [r6]
   1e794:	ldr	r9, [r6, #4]
   1e798:	str	r1, [r9, r0]!
   1e79c:	cmp	r9, #0
   1e7a0:	str	r4, [r9, #12]
   1e7a4:	beq	1e820 <gen_dnhostop+0x12c8>
   1e7a8:	mov	r7, sl
   1e7ac:	ldr	r4, [sp, #8]
   1e7b0:	ldr	r8, [r7, r5, lsl #3]!
   1e7b4:	cmp	r8, #19
   1e7b8:	bhi	1e8c4 <gen_dnhostop+0x136c>
   1e7bc:	ldr	r0, [pc, #1456]	; 1ed74 <gen_dnhostop+0x181c>
   1e7c0:	add	sl, r5, #1
   1e7c4:	cmp	r5, #15
   1e7c8:	add	r0, pc, r0
   1e7cc:	str	sl, [r0]
   1e7d0:	bge	1ea18 <gen_dnhostop+0x14c0>
   1e7d4:	mov	r0, #1024	; 0x400
   1e7d8:	lsl	r8, r0, sl
   1e7dc:	mov	r0, r8
   1e7e0:	bl	ed4 <malloc@plt>
   1e7e4:	cmp	r0, #0
   1e7e8:	str	r0, [r7, #12]
   1e7ec:	beq	1ea18 <gen_dnhostop+0x14c0>
   1e7f0:	mov	r1, #0
   1e7f4:	mov	r2, r8
   1e7f8:	add	r7, r7, #8
   1e7fc:	bl	f40 <memset@plt>
   1e800:	cmp	r8, #19
   1e804:	str	r8, [r7]
   1e808:	bhi	1e8c8 <gen_dnhostop+0x1370>
   1e80c:	b	1ea18 <gen_dnhostop+0x14c0>
   1e810:	.word	0x00029cdc
   1e814:	.word	0x00029cc4
   1e818:	.word	0x00029c3c
   1e81c:	.word	0x00029c9c
   1e820:	ldr	r8, [sp, #12]
   1e824:	ldr	r4, [sp, #8]
   1e828:	mov	r6, sl
   1e82c:	ldr	r7, [r6, r5, lsl #3]!
   1e830:	cmp	r7, #19
   1e834:	bhi	1e88c <gen_dnhostop+0x1334>
   1e838:	ldr	r0, [pc, #1336]	; 1ed78 <gen_dnhostop+0x1820>
   1e83c:	add	sl, r5, #1
   1e840:	cmp	r5, #15
   1e844:	add	r0, pc, r0
   1e848:	str	sl, [r0]
   1e84c:	bge	1ea18 <gen_dnhostop+0x14c0>
   1e850:	mov	r0, #1024	; 0x400
   1e854:	lsl	r7, r0, sl
   1e858:	mov	r0, r7
   1e85c:	bl	ed4 <malloc@plt>
   1e860:	cmp	r0, #0
   1e864:	str	r0, [r6, #12]
   1e868:	beq	1ea18 <gen_dnhostop+0x14c0>
   1e86c:	mov	r1, #0
   1e870:	mov	r2, r7
   1e874:	add	r6, r6, #8
   1e878:	bl	f40 <memset@plt>
   1e87c:	cmp	r7, #19
   1e880:	str	r7, [r6]
   1e884:	bhi	1e890 <gen_dnhostop+0x1338>
   1e888:	b	1ea18 <gen_dnhostop+0x14c0>
   1e88c:	mov	sl, r5
   1e890:	sub	r0, r7, #20
   1e894:	mov	r1, #48	; 0x30
   1e898:	str	r0, [r6]
   1e89c:	ldr	r9, [r6, #4]
   1e8a0:	str	r1, [r9, r0]!
   1e8a4:	ldr	r0, [pc, #1232]	; 1ed7c <gen_dnhostop+0x1824>
   1e8a8:	ldr	r0, [pc, r0]
   1e8ac:	add	r0, r0, r4
   1e8b0:	str	r0, [r9, #12]
   1e8b4:	b	1e8fc <gen_dnhostop+0x13a4>
   1e8b8:	.word	0x00029c14
   1e8bc:	.word	0x00029b44
   1e8c0:	.word	0x00029ba8
   1e8c4:	mov	sl, r5
   1e8c8:	sub	r1, r8, #20
   1e8cc:	mov	r2, #80	; 0x50
   1e8d0:	str	r1, [r7]
   1e8d4:	ldr	r0, [r7, #4]
   1e8d8:	str	r2, [r0, r1]!
   1e8dc:	mov	r2, r9
   1e8e0:	str	r4, [r0, #12]
   1e8e4:	mov	r1, r2
   1e8e8:	ldr	r2, [r2, #16]
   1e8ec:	cmp	r2, #0
   1e8f0:	bne	1e8e4 <gen_dnhostop+0x138c>
   1e8f4:	ldr	r8, [sp, #12]
   1e8f8:	str	r0, [r1, #16]
   1e8fc:	ldr	r4, [pc, #1148]	; 1ed80 <gen_dnhostop+0x1828>
   1e900:	add	r4, pc, r4
   1e904:	ldr	r7, [r4, sl, lsl #3]!
   1e908:	cmp	r7, #19
   1e90c:	bhi	1e978 <gen_dnhostop+0x1420>
   1e910:	ldr	r0, [pc, #1136]	; 1ed88 <gen_dnhostop+0x1830>
   1e914:	add	r5, sl, #1
   1e918:	cmp	sl, #15
   1e91c:	add	r0, pc, r0
   1e920:	str	r5, [r0]
   1e924:	bge	1ea18 <gen_dnhostop+0x14c0>
   1e928:	mov	r0, #1024	; 0x400
   1e92c:	lsl	r7, r0, r5
   1e930:	mov	r0, r7
   1e934:	bl	ed4 <malloc@plt>
   1e938:	str	r0, [r4, #12]
   1e93c:	cmp	r0, #0
   1e940:	ldr	r6, [pc, #1092]	; 1ed8c <gen_dnhostop+0x1834>
   1e944:	add	r6, pc, r6
   1e948:	beq	1ea18 <gen_dnhostop+0x14c0>
   1e94c:	mov	r1, #0
   1e950:	mov	r2, r7
   1e954:	add	r4, r4, #8
   1e958:	bl	f40 <memset@plt>
   1e95c:	cmp	r7, #19
   1e960:	str	r7, [r4]
   1e964:	bhi	1e984 <gen_dnhostop+0x142c>
   1e968:	b	1ea18 <gen_dnhostop+0x14c0>
   1e96c:	.word	0x00029a84
   1e970:	.word	0x00029a7c
   1e974:	.word	0x00029adc
   1e978:	ldr	r6, [pc, #1028]	; 1ed84 <gen_dnhostop+0x182c>
   1e97c:	mov	r5, sl
   1e980:	add	r6, pc, r6
   1e984:	sub	r1, r7, #20
   1e988:	mov	r2, #84	; 0x54
   1e98c:	str	r1, [r4]
   1e990:	ldr	r0, [r4, #4]
   1e994:	str	r2, [r0, r1]!
   1e998:	mov	r1, #7
   1e99c:	mov	r2, r9
   1e9a0:	str	r1, [r0, #12]
   1e9a4:	mov	r1, r2
   1e9a8:	ldr	r2, [r2, #16]
   1e9ac:	cmp	r2, #0
   1e9b0:	bne	1e9a4 <gen_dnhostop+0x144c>
   1e9b4:	str	r0, [r1, #16]
   1e9b8:	ldr	r7, [r6, r5, lsl #3]!
   1e9bc:	cmp	r7, #207	; 0xcf
   1e9c0:	bhi	1ea28 <gen_dnhostop+0x14d0>
   1e9c4:	ldr	r1, [pc, #964]	; 1ed90 <gen_dnhostop+0x1838>
   1e9c8:	add	r0, r5, #1
   1e9cc:	cmp	r5, #15
   1e9d0:	add	r1, pc, r1
   1e9d4:	str	r0, [r1]
   1e9d8:	bge	1ea18 <gen_dnhostop+0x14c0>
   1e9dc:	mov	r1, #1024	; 0x400
   1e9e0:	lsl	r7, r1, r0
   1e9e4:	mov	r0, r7
   1e9e8:	bl	ed4 <malloc@plt>
   1e9ec:	ldr	r5, [sp, #16]
   1e9f0:	cmp	r0, #0
   1e9f4:	str	r0, [r6, #12]
   1e9f8:	beq	1ea18 <gen_dnhostop+0x14c0>
   1e9fc:	mov	r1, #0
   1ea00:	mov	r2, r7
   1ea04:	add	r6, r6, #8
   1ea08:	bl	f40 <memset@plt>
   1ea0c:	cmp	r7, #207	; 0xcf
   1ea10:	str	r7, [r6]
   1ea14:	bhi	1ea2c <gen_dnhostop+0x14d4>
   1ea18:	ldr	r0, [pc, #884]	; 1ed94 <gen_dnhostop+0x183c>
   1ea1c:	add	r0, pc, r0
   1ea20:	bl	2124 <sf_bpf_error>
   1ea24:	.word	0x00029a38
   1ea28:	ldr	r5, [sp, #16]
   1ea2c:	sub	r0, r7, #208	; 0xd0
   1ea30:	ldr	r3, [sp, #20]
   1ea34:	mov	r2, #8
   1ea38:	str	r0, [r6]
   1ea3c:	ldr	r1, [r6, #4]
   1ea40:	add	r4, r1, r0
   1ea44:	mov	r0, #21
   1ea48:	add	r1, r5, #2
   1ea4c:	str	r9, [r4, #4]
   1ea50:	str	r0, [r4, #8]
   1ea54:	mov	r0, #2
   1ea58:	str	r0, [r4, #20]
   1ea5c:	mov	r0, #3
   1ea60:	str	r4, [r4, #96]	; 0x60
   1ea64:	bl	a9f8 <gen_cmp>
   1ea68:	cmp	r4, #0
   1ea6c:	beq	1eaa0 <gen_dnhostop+0x1548>
   1ea70:	ldr	r1, [r0, #96]	; 0x60
   1ea74:	mov	r2, r4
   1ea78:	ldr	r3, [r2, #44]	; 0x2c
   1ea7c:	add	r7, r2, #84	; 0x54
   1ea80:	cmp	r3, #0
   1ea84:	mov	r3, #84	; 0x54
   1ea88:	movweq	r3, #60	; 0x3c
   1ea8c:	addeq	r7, r2, #60	; 0x3c
   1ea90:	ldr	r2, [r2, r3]
   1ea94:	str	r1, [r7]
   1ea98:	cmp	r2, #0
   1ea9c:	bne	1ea78 <gen_dnhostop+0x1520>
   1eaa0:	ldr	r1, [r4, #44]	; 0x2c
   1eaa4:	ldr	r5, [sp, #4]
   1eaa8:	cmp	r0, #0
   1eaac:	clz	r1, r1
   1eab0:	lsr	r1, r1, #5
   1eab4:	str	r1, [r4, #44]	; 0x2c
   1eab8:	ldr	r2, [r0, #44]	; 0x2c
   1eabc:	clz	r1, r2
   1eac0:	lsr	r1, r1, #5
   1eac4:	str	r1, [r0, #44]	; 0x2c
   1eac8:	str	r0, [sp, #24]
   1eacc:	beq	1eb18 <gen_dnhostop+0x15c0>
   1ead0:	cmp	r2, #0
   1ead4:	mov	r2, #60	; 0x3c
   1ead8:	add	r1, r0, #60	; 0x3c
   1eadc:	movweq	r2, #84	; 0x54
   1eae0:	addeq	r1, r0, #84	; 0x54
   1eae4:	ldr	r2, [r0, r2]
   1eae8:	cmp	r2, #0
   1eaec:	beq	1eb1c <gen_dnhostop+0x15c4>
   1eaf0:	ldr	r3, [r2, #44]	; 0x2c
   1eaf4:	add	r1, r2, #84	; 0x54
   1eaf8:	cmp	r3, #0
   1eafc:	mov	r3, #84	; 0x54
   1eb00:	movweq	r3, #60	; 0x3c
   1eb04:	addeq	r1, r2, #60	; 0x3c
   1eb08:	ldr	r2, [r2, r3]
   1eb0c:	cmp	r2, #0
   1eb10:	bne	1eaf0 <gen_dnhostop+0x1598>
   1eb14:	b	1eb1c <gen_dnhostop+0x15c4>
   1eb18:	add	r1, sp, #24
   1eb1c:	str	r4, [r1]
   1eb20:	ldr	r1, [r0, #44]	; 0x2c
   1eb24:	clz	r2, r1
   1eb28:	cmp	r1, #0
   1eb2c:	lsr	r2, r2, #5
   1eb30:	movwne	r1, #1
   1eb34:	cmp	r0, #0
   1eb38:	str	r2, [r0, #44]	; 0x2c
   1eb3c:	ldr	r2, [r4, #96]	; 0x60
   1eb40:	str	r1, [r0, #44]	; 0x2c
   1eb44:	str	r2, [r0, #96]	; 0x60
   1eb48:	beq	1eb84 <gen_dnhostop+0x162c>
   1eb4c:	ldr	r2, [r8, #96]	; 0x60
   1eb50:	mov	r3, r0
   1eb54:	b	1eb5c <gen_dnhostop+0x1604>
   1eb58:	ldr	r1, [r3, #44]	; 0x2c
   1eb5c:	cmp	r1, #0
   1eb60:	mov	r1, #84	; 0x54
   1eb64:	add	r7, r3, #84	; 0x54
   1eb68:	movweq	r1, #60	; 0x3c
   1eb6c:	addeq	r7, r3, #60	; 0x3c
   1eb70:	ldr	r3, [r3, r1]
   1eb74:	str	r2, [r7]
   1eb78:	cmp	r3, #0
   1eb7c:	bne	1eb58 <gen_dnhostop+0x1600>
   1eb80:	ldr	r1, [r0, #44]	; 0x2c
   1eb84:	clz	r1, r1
   1eb88:	cmp	r8, #0
   1eb8c:	lsr	r1, r1, #5
   1eb90:	str	r1, [r0, #44]	; 0x2c
   1eb94:	str	r8, [sp, #24]
   1eb98:	beq	1ebe0 <gen_dnhostop+0x1688>
   1eb9c:	mov	r2, r8
   1eba0:	ldr	r3, [r2, #44]	; 0x2c
   1eba4:	add	r1, r2, #84	; 0x54
   1eba8:	cmp	r3, #0
   1ebac:	mov	r3, #84	; 0x54
   1ebb0:	movweq	r3, #60	; 0x3c
   1ebb4:	addeq	r1, r2, #60	; 0x3c
   1ebb8:	ldr	r2, [r2, r3]
   1ebbc:	cmp	r2, #0
   1ebc0:	bne	1eba0 <gen_dnhostop+0x1648>
   1ebc4:	b	1ebe4 <gen_dnhostop+0x168c>
   1ebc8:	.word	0x000298e0
   1ebcc:	.word	0x00029814
   1ebd0:	.word	0x000298c4
   1ebd4:	.word	0x000298b4
   1ebd8:	.word	0x000298ac
   1ebdc:	.word	0x000298a4
   1ebe0:	add	r1, sp, #24
   1ebe4:	str	r0, [r1]
   1ebe8:	cmp	r5, #0
   1ebec:	ldr	r0, [r0, #96]	; 0x60
   1ebf0:	str	r0, [r8, #96]	; 0x60
   1ebf4:	beq	1ec24 <gen_dnhostop+0x16cc>
   1ebf8:	mov	r1, r5
   1ebfc:	ldr	r2, [r1, #44]	; 0x2c
   1ec00:	add	r3, r1, #84	; 0x54
   1ec04:	cmp	r2, #0
   1ec08:	mov	r2, #84	; 0x54
   1ec0c:	movweq	r2, #60	; 0x3c
   1ec10:	addeq	r3, r1, #60	; 0x3c
   1ec14:	ldr	r1, [r1, r2]
   1ec18:	str	r0, [r3]
   1ec1c:	cmp	r1, #0
   1ec20:	bne	1ebfc <gen_dnhostop+0x16a4>
   1ec24:	ldr	r0, [r5, #44]	; 0x2c
   1ec28:	cmp	r8, #0
   1ec2c:	clz	r0, r0
   1ec30:	lsr	r0, r0, #5
   1ec34:	str	r0, [r5, #44]	; 0x2c
   1ec38:	ldr	r1, [r8, #44]	; 0x2c
   1ec3c:	clz	r0, r1
   1ec40:	lsr	r0, r0, #5
   1ec44:	str	r0, [r8, #44]	; 0x2c
   1ec48:	str	r8, [sp, #24]
   1ec4c:	beq	1eca4 <gen_dnhostop+0x174c>
   1ec50:	cmp	r1, #0
   1ec54:	mov	r1, #60	; 0x3c
   1ec58:	add	r0, r8, #60	; 0x3c
   1ec5c:	movweq	r1, #84	; 0x54
   1ec60:	addeq	r0, r8, #84	; 0x54
   1ec64:	ldr	r1, [r8, r1]
   1ec68:	cmp	r1, #0
   1ec6c:	beq	1eca8 <gen_dnhostop+0x1750>
   1ec70:	ldr	r2, [r1, #44]	; 0x2c
   1ec74:	add	r0, r1, #84	; 0x54
   1ec78:	cmp	r2, #0
   1ec7c:	mov	r2, #84	; 0x54
   1ec80:	movweq	r2, #60	; 0x3c
   1ec84:	addeq	r0, r1, #60	; 0x3c
   1ec88:	ldr	r1, [r1, r2]
   1ec8c:	cmp	r1, #0
   1ec90:	bne	1ec70 <gen_dnhostop+0x1718>
   1ec94:	b	1eca8 <gen_dnhostop+0x1750>
   1ec98:	.word	0x0002985c
   1ec9c:	.word	0x00029854
   1eca0:	.word	0x00029838
   1eca4:	add	r0, sp, #24
   1eca8:	str	r5, [r0]
   1ecac:	ldr	r0, [r8, #44]	; 0x2c
   1ecb0:	clz	r0, r0
   1ecb4:	lsr	r0, r0, #5
   1ecb8:	str	r0, [r8, #44]	; 0x2c
   1ecbc:	ldr	r0, [r5, #96]	; 0x60
   1ecc0:	str	r0, [r8, #96]	; 0x60
   1ecc4:	mov	r0, r8
   1ecc8:	sub	sp, fp, #28
   1eccc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1ecd0:	bl	fc4 <abort@plt>
   1ecd4:	.word	0x0002981c
   1ecd8:	ldr	r0, [pc, #4]	; 1ece4 <gen_dnhostop+0x178c>
   1ecdc:	add	r0, pc, r0
   1ece0:	bl	2124 <sf_bpf_error>
   1ece4:	.word	0x0000bb2f
   1ece8:	.word	0x0000c379
   1ecec:	.word	0x00029798
   1ecf0:	.word	0x000295f8
   1ecf4:	.word	0x00029730
   1ecf8:	.word	0x00029604
   1ecfc:	.word	0x00029658
   1ed00:	.word	0x000295b4
   1ed04:	.word	0x000293c8
   1ed08:	.word	0x000292fc
   1ed0c:	.word	0x00029348
   1ed10:	.word	0x000293b0
   1ed14:	.word	0x000293a0
   1ed18:	.word	0x00029398
   1ed1c:	.word	0x00029390
   1ed20:	.word	0x00029340
   1ed24:	.word	0x00029324
   1ed28:	.word	0x00029308
   1ed2c:	.word	0x00029280
   1ed30:	.word	0x00029218
   1ed34:	.word	0x000290f4
   1ed38:	.word	0x000290e8
   1ed3c:	.word	0x00029074
   1ed40:	.word	0x0002914c
   1ed44:	.word	0x000290a4
   1ed48:	.word	0x000290a0
   1ed4c:	.word	0x00028ea0
   1ed50:	.word	0x00028dd4
   1ed54:	.word	0x00028e10
   1ed58:	.word	0x00028e84
   1ed5c:	.word	0x00028e74
   1ed60:	.word	0x00028e6c
   1ed64:	.word	0x00028e64
   1ed68:	.word	0x00028df8
   1ed6c:	.word	0x00028ddc
   1ed70:	.word	0x00028dc0
   1ed74:	.word	0x00028d34
   1ed78:	.word	0x00028cb8
   1ed7c:	.word	0x00028b94
   1ed80:	.word	0x00028b7c
   1ed84:	.word	0x00028afc
   1ed88:	.word	0x00028be0
   1ed8c:	.word	0x00028b38
   1ed90:	.word	0x00028b2c
   1ed94:	.word	0x0000b5e8

0001ed98 <gen_hostop6>:
   1ed98:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ed9c:	add	fp, sp, #28
   1eda0:	sub	sp, sp, #44	; 0x2c
   1eda4:	cmp	r2, #4
   1eda8:	bhi	20334 <gen_hostop6+0x159c>
   1edac:	mov	r6, r0
   1edb0:	add	r0, pc, #20
   1edb4:	mov	r7, r1
   1edb8:	ldr	r8, [fp, #12]
   1edbc:	ldr	r5, [fp, #8]
   1edc0:	mov	r9, r3
   1edc4:	ldr	r1, [r0, r2, lsl #2]
   1edc8:	add	pc, r0, r1
   1edcc:	.word	0x00000014
   1edd0:	.word	0x000001d8
   1edd4:	.word	0x000001d4
   1edd8:	.word	0x00000014
   1eddc:	.word	0x000000e8
   1ede0:	mov	r0, r6
   1ede4:	mov	r1, r7
   1ede8:	mov	r2, #1
   1edec:	mov	r3, r9
   1edf0:	stm	sp, {r5, r8}
   1edf4:	bl	1ed98 <gen_hostop6>
   1edf8:	mov	r4, r0
   1edfc:	mov	r0, r6
   1ee00:	mov	r1, r7
   1ee04:	mov	r2, #2
   1ee08:	mov	r3, r9
   1ee0c:	stm	sp, {r5, r8}
   1ee10:	bl	1ed98 <gen_hostop6>
   1ee14:	mov	sl, r0
   1ee18:	ldr	r0, [r4, #44]	; 0x2c
   1ee1c:	cmp	r4, #0
   1ee20:	mov	r5, sl
   1ee24:	clz	r0, r0
   1ee28:	lsr	r1, r0, #5
   1ee2c:	str	r1, [r4, #44]	; 0x2c
   1ee30:	ldr	r0, [r5, #96]!	; 0x60
   1ee34:	beq	1ee6c <gen_hostop6+0xd4>
   1ee38:	mov	r2, r4
   1ee3c:	b	1ee44 <gen_hostop6+0xac>
   1ee40:	ldr	r1, [r2, #44]	; 0x2c
   1ee44:	cmp	r1, #0
   1ee48:	mov	r1, #84	; 0x54
   1ee4c:	add	r3, r2, #84	; 0x54
   1ee50:	movweq	r1, #60	; 0x3c
   1ee54:	addeq	r3, r2, #60	; 0x3c
   1ee58:	ldr	r2, [r2, r1]
   1ee5c:	str	r0, [r3]
   1ee60:	cmp	r2, #0
   1ee64:	bne	1ee40 <gen_hostop6+0xa8>
   1ee68:	ldr	r1, [r4, #44]	; 0x2c
   1ee6c:	clz	r0, r1
   1ee70:	cmp	sl, #0
   1ee74:	lsr	r0, r0, #5
   1ee78:	str	r0, [r4, #44]	; 0x2c
   1ee7c:	str	sl, [fp, #-32]	; 0xffffffe0
   1ee80:	beq	1f04c <gen_hostop6+0x2b4>
   1ee84:	mov	r1, sl
   1ee88:	ldr	r2, [r1, #44]	; 0x2c
   1ee8c:	add	r0, r1, #84	; 0x54
   1ee90:	cmp	r2, #0
   1ee94:	mov	r2, #84	; 0x54
   1ee98:	movweq	r2, #60	; 0x3c
   1ee9c:	addeq	r0, r1, #60	; 0x3c
   1eea0:	ldr	r1, [r1, r2]
   1eea4:	cmp	r1, #0
   1eea8:	bne	1ee88 <gen_hostop6+0xf0>
   1eeac:	str	r4, [r0]
   1eeb0:	b	20314 <gen_hostop6+0x157c>
   1eeb4:	mov	r0, r6
   1eeb8:	mov	r1, r7
   1eebc:	mov	r2, #1
   1eec0:	mov	r3, r9
   1eec4:	stm	sp, {r5, r8}
   1eec8:	bl	1ed98 <gen_hostop6>
   1eecc:	mov	r4, r0
   1eed0:	mov	r0, r6
   1eed4:	mov	r1, r7
   1eed8:	mov	r2, #2
   1eedc:	mov	r3, r9
   1eee0:	stm	sp, {r5, r8}
   1eee4:	bl	1ed98 <gen_hostop6>
   1eee8:	mov	r5, r0
   1eeec:	mov	sl, r0
   1eef0:	cmp	r4, #0
   1eef4:	ldr	r0, [r5, #96]!	; 0x60
   1eef8:	beq	1ef28 <gen_hostop6+0x190>
   1eefc:	mov	r1, r4
   1ef00:	ldr	r2, [r1, #44]	; 0x2c
   1ef04:	add	r3, r1, #84	; 0x54
   1ef08:	cmp	r2, #0
   1ef0c:	mov	r2, #84	; 0x54
   1ef10:	movweq	r2, #60	; 0x3c
   1ef14:	addeq	r3, r1, #60	; 0x3c
   1ef18:	ldr	r1, [r1, r2]
   1ef1c:	str	r0, [r3]
   1ef20:	cmp	r1, #0
   1ef24:	bne	1ef00 <gen_hostop6+0x168>
   1ef28:	ldr	r0, [r4, #44]	; 0x2c
   1ef2c:	cmp	sl, #0
   1ef30:	clz	r0, r0
   1ef34:	lsr	r0, r0, #5
   1ef38:	str	r0, [r4, #44]	; 0x2c
   1ef3c:	ldr	r1, [sl, #44]	; 0x2c
   1ef40:	clz	r0, r1
   1ef44:	lsr	r0, r0, #5
   1ef48:	str	r0, [sl, #44]	; 0x2c
   1ef4c:	str	sl, [fp, #-32]	; 0xffffffe0
   1ef50:	beq	1f058 <gen_hostop6+0x2c0>
   1ef54:	cmp	r1, #0
   1ef58:	mov	r1, #60	; 0x3c
   1ef5c:	add	r0, sl, #60	; 0x3c
   1ef60:	movweq	r1, #84	; 0x54
   1ef64:	addeq	r0, sl, #84	; 0x54
   1ef68:	ldr	r1, [sl, r1]
   1ef6c:	cmp	r1, #0
   1ef70:	beq	1ef98 <gen_hostop6+0x200>
   1ef74:	ldr	r2, [r1, #44]	; 0x2c
   1ef78:	add	r0, r1, #84	; 0x54
   1ef7c:	cmp	r2, #0
   1ef80:	mov	r2, #84	; 0x54
   1ef84:	movweq	r2, #60	; 0x3c
   1ef88:	addeq	r0, r1, #60	; 0x3c
   1ef8c:	ldr	r1, [r1, r2]
   1ef90:	cmp	r1, #0
   1ef94:	bne	1ef74 <gen_hostop6+0x1dc>
   1ef98:	str	r4, [r0]
   1ef9c:	b	20304 <gen_hostop6+0x156c>
   1efa0:	mov	r5, r8
   1efa4:	ldr	r0, [pc, #4036]	; 1ff70 <gen_hostop6+0x11d8>
   1efa8:	ldr	r0, [pc, r0]
   1efac:	add	r0, r0, r5
   1efb0:	str	r0, [sp, #32]
   1efb4:	add	lr, r0, #12
   1efb8:	ldr	r0, [pc, #4020]	; 1ff74 <gen_hostop6+0x11dc>
   1efbc:	ldr	ip, [r7, #12]
   1efc0:	ldr	sl, [r6, #12]
   1efc4:	str	r7, [sp, #36]	; 0x24
   1efc8:	str	r6, [sp, #28]
   1efcc:	str	r9, [sp, #16]
   1efd0:	add	r0, pc, r0
   1efd4:	ldrb	r0, [r0]
   1efd8:	cmp	r0, #0
   1efdc:	str	r0, [sp, #24]
   1efe0:	beq	1f040 <gen_hostop6+0x2a8>
   1efe4:	ldr	r5, [pc, #3980]	; 1ff78 <gen_hostop6+0x11e0>
   1efe8:	ldr	r5, [pc, r5]
   1efec:	cmn	r5, #1
   1eff0:	bne	1f078 <gen_hostop6+0x2e0>
   1eff4:	ldr	r5, [pc, #3968]	; 1ff7c <gen_hostop6+0x11e4>
   1eff8:	mvn	r1, #15
   1effc:	ldr	r5, [pc, r5]
   1f000:	ldr	r0, [pc, #3960]	; 1ff80 <gen_hostop6+0x11e8>
   1f004:	ldr	r2, [pc, #3960]	; 1ff84 <gen_hostop6+0x11ec>
   1f008:	add	r0, pc, r0
   1f00c:	add	r2, pc, r2
   1f010:	ldr	r3, [r0, r5, lsl #2]
   1f014:	cmp	r3, #0
   1f018:	beq	1f064 <gen_hostop6+0x2cc>
   1f01c:	add	r3, r5, #1
   1f020:	adds	r1, r1, #1
   1f024:	asr	r7, r3, #31
   1f028:	add	r7, r3, r7, lsr #28
   1f02c:	bic	r7, r7, #15
   1f030:	sub	r5, r3, r7
   1f034:	str	r5, [r2]
   1f038:	bne	1f010 <gen_hostop6+0x278>
   1f03c:	b	1fdcc <gen_hostop6+0x1034>
   1f040:	ldr	r9, [pc, #4080]	; 20038 <gen_hostop6+0x12a0>
   1f044:	ldr	r9, [pc, r9]
   1f048:	b	1f19c <gen_hostop6+0x404>
   1f04c:	sub	r0, fp, #32
   1f050:	str	r4, [r0]
   1f054:	b	20314 <gen_hostop6+0x157c>
   1f058:	sub	r0, fp, #32
   1f05c:	str	r4, [r0]
   1f060:	b	20304 <gen_hostop6+0x156c>
   1f064:	mov	r1, #1
   1f068:	str	r1, [r0, r5, lsl #2]
   1f06c:	ldr	r0, [pc, #4040]	; 2003c <gen_hostop6+0x12a4>
   1f070:	add	r0, pc, r0
   1f074:	str	r5, [r0]
   1f078:	str	sl, [sp, #20]
   1f07c:	ldr	r0, [pc, #4028]	; 20040 <gen_hostop6+0x12a8>
   1f080:	ldr	r0, [pc, r0]
   1f084:	ldr	sl, [pc, #4092]	; 20088 <gen_hostop6+0x12f0>
   1f088:	add	sl, pc, sl
   1f08c:	mov	r6, sl
   1f090:	ldr	r4, [r6, r0, lsl #3]!
   1f094:	cmp	r4, #19
   1f098:	bhi	1f100 <gen_hostop6+0x368>
   1f09c:	ldr	r1, [pc, #4072]	; 2008c <gen_hostop6+0x12f4>
   1f0a0:	add	r9, r0, #1
   1f0a4:	cmp	r0, #15
   1f0a8:	add	r1, pc, r1
   1f0ac:	str	r9, [r1]
   1f0b0:	bge	20328 <gen_hostop6+0x1590>
   1f0b4:	mov	r0, #1024	; 0x400
   1f0b8:	mov	r8, lr
   1f0bc:	mov	r7, ip
   1f0c0:	lsl	r4, r0, r9
   1f0c4:	mov	r0, r4
   1f0c8:	bl	ed4 <malloc@plt>
   1f0cc:	cmp	r0, #0
   1f0d0:	str	r0, [r6, #12]
   1f0d4:	beq	20328 <gen_hostop6+0x1590>
   1f0d8:	mov	r1, #0
   1f0dc:	mov	r2, r4
   1f0e0:	add	r6, r6, #8
   1f0e4:	bl	f40 <memset@plt>
   1f0e8:	cmp	r4, #19
   1f0ec:	mov	ip, r7
   1f0f0:	mov	lr, r8
   1f0f4:	str	r4, [r6]
   1f0f8:	bhi	1f104 <gen_hostop6+0x36c>
   1f0fc:	b	20328 <gen_hostop6+0x1590>
   1f100:	mov	r9, r0
   1f104:	sub	r0, r4, #20
   1f108:	mov	r1, #97	; 0x61
   1f10c:	str	r0, [r6]
   1f110:	ldr	r8, [r6, #4]
   1f114:	str	r1, [r8, r0]!
   1f118:	cmp	r8, #0
   1f11c:	str	r5, [r8, #12]
   1f120:	beq	1f198 <gen_hostop6+0x400>
   1f124:	ldr	r4, [sl, r9, lsl #3]!
   1f128:	cmp	r4, #19
   1f12c:	bhi	1f2fc <gen_hostop6+0x564>
   1f130:	ldr	r0, [pc, #3928]	; 20090 <gen_hostop6+0x12f8>
   1f134:	add	r7, r9, #1
   1f138:	cmp	r9, #15
   1f13c:	add	r0, pc, r0
   1f140:	str	r7, [r0]
   1f144:	bge	20328 <gen_hostop6+0x1590>
   1f148:	mov	r0, #1024	; 0x400
   1f14c:	mov	r6, lr
   1f150:	mov	r5, ip
   1f154:	lsl	r4, r0, r7
   1f158:	mov	r0, r4
   1f15c:	bl	ed4 <malloc@plt>
   1f160:	ldr	r9, [sp, #36]	; 0x24
   1f164:	cmp	r0, #0
   1f168:	str	r0, [sl, #12]
   1f16c:	beq	20328 <gen_hostop6+0x1590>
   1f170:	mov	r1, #0
   1f174:	mov	r2, r4
   1f178:	add	sl, sl, #8
   1f17c:	bl	f40 <memset@plt>
   1f180:	cmp	r4, #19
   1f184:	mov	ip, r5
   1f188:	mov	lr, r6
   1f18c:	str	r4, [sl]
   1f190:	bhi	1f304 <gen_hostop6+0x56c>
   1f194:	b	20328 <gen_hostop6+0x1590>
   1f198:	ldr	sl, [sp, #20]
   1f19c:	ldr	r5, [pc, #3824]	; 20094 <gen_hostop6+0x12fc>
   1f1a0:	add	r5, pc, r5
   1f1a4:	ldr	r4, [r5, r9, lsl #3]!
   1f1a8:	cmp	r4, #19
   1f1ac:	bhi	1f218 <gen_hostop6+0x480>
   1f1b0:	ldr	r0, [pc, #3808]	; 20098 <gen_hostop6+0x1300>
   1f1b4:	add	r7, r9, #1
   1f1b8:	cmp	r9, #15
   1f1bc:	add	r0, pc, r0
   1f1c0:	str	r7, [r0]
   1f1c4:	bge	20328 <gen_hostop6+0x1590>
   1f1c8:	mov	r0, #1024	; 0x400
   1f1cc:	mov	r8, lr
   1f1d0:	mov	r6, ip
   1f1d4:	lsl	r4, r0, r7
   1f1d8:	mov	r0, r4
   1f1dc:	bl	ed4 <malloc@plt>
   1f1e0:	ldr	r9, [sp, #36]	; 0x24
   1f1e4:	cmp	r0, #0
   1f1e8:	str	r0, [r5, #12]
   1f1ec:	beq	20328 <gen_hostop6+0x1590>
   1f1f0:	mov	r1, #0
   1f1f4:	mov	r2, r4
   1f1f8:	add	r5, r5, #8
   1f1fc:	bl	f40 <memset@plt>
   1f200:	cmp	r4, #19
   1f204:	mov	ip, r6
   1f208:	mov	lr, r8
   1f20c:	str	r4, [r5]
   1f210:	bhi	1f220 <gen_hostop6+0x488>
   1f214:	b	20328 <gen_hostop6+0x1590>
   1f218:	mov	r7, r9
   1f21c:	ldr	r9, [sp, #36]	; 0x24
   1f220:	sub	r0, r4, #20
   1f224:	mov	r1, #32
   1f228:	str	r0, [r5]
   1f22c:	ldr	r8, [r5, #4]
   1f230:	str	r1, [r8, r0]!
   1f234:	ldr	r0, [pc, #4064]	; 2021c <gen_hostop6+0x1484>
   1f238:	ldr	r0, [pc, r0]
   1f23c:	add	r0, r0, lr
   1f240:	str	r0, [r8, #12]
   1f244:	cmn	ip, #1
   1f248:	beq	1f340 <gen_hostop6+0x5a8>
   1f24c:	ldr	r6, [pc, #4044]	; 20220 <gen_hostop6+0x1488>
   1f250:	add	r6, pc, r6
   1f254:	ldr	r4, [r6, r7, lsl #3]!
   1f258:	cmp	r4, #19
   1f25c:	bhi	1f2c0 <gen_hostop6+0x528>
   1f260:	ldr	r0, [pc, #4028]	; 20224 <gen_hostop6+0x148c>
   1f264:	add	r5, r7, #1
   1f268:	cmp	r7, #15
   1f26c:	add	r0, pc, r0
   1f270:	str	r5, [r0]
   1f274:	bge	20328 <gen_hostop6+0x1590>
   1f278:	mov	r0, #1024	; 0x400
   1f27c:	mov	r9, ip
   1f280:	lsl	r4, r0, r5
   1f284:	mov	r0, r4
   1f288:	bl	ed4 <malloc@plt>
   1f28c:	cmp	r0, #0
   1f290:	str	r0, [r6, #12]
   1f294:	beq	20328 <gen_hostop6+0x1590>
   1f298:	mov	r1, #0
   1f29c:	mov	r2, r4
   1f2a0:	add	r6, r6, #8
   1f2a4:	bl	f40 <memset@plt>
   1f2a8:	mov	ip, r9
   1f2ac:	ldr	r9, [sp, #36]	; 0x24
   1f2b0:	cmp	r4, #19
   1f2b4:	str	r4, [r6]
   1f2b8:	bhi	1f2c4 <gen_hostop6+0x52c>
   1f2bc:	b	20328 <gen_hostop6+0x1590>
   1f2c0:	mov	r5, r7
   1f2c4:	sub	r2, r4, #20
   1f2c8:	mov	r3, #84	; 0x54
   1f2cc:	rev	r1, ip
   1f2d0:	str	r2, [r6]
   1f2d4:	ldr	r0, [r6, #4]
   1f2d8:	str	r3, [r0, r2]!
   1f2dc:	mov	r2, r8
   1f2e0:	str	r1, [r0, #12]
   1f2e4:	mov	r1, r2
   1f2e8:	ldr	r2, [r2, #16]
   1f2ec:	cmp	r2, #0
   1f2f0:	bne	1f2e4 <gen_hostop6+0x54c>
   1f2f4:	str	r0, [r1, #16]
   1f2f8:	b	1f344 <gen_hostop6+0x5ac>
   1f2fc:	mov	r7, r9
   1f300:	ldr	r9, [sp, #36]	; 0x24
   1f304:	sub	r1, r4, #20
   1f308:	mov	r2, #64	; 0x40
   1f30c:	str	r1, [sl]
   1f310:	ldr	r0, [sl, #4]
   1f314:	str	r2, [r0, r1]!
   1f318:	mov	r2, r8
   1f31c:	str	lr, [r0, #12]
   1f320:	mov	r1, r2
   1f324:	ldr	r2, [r2, #16]
   1f328:	cmp	r2, #0
   1f32c:	bne	1f320 <gen_hostop6+0x588>
   1f330:	ldr	sl, [sp, #20]
   1f334:	str	r0, [r1, #16]
   1f338:	cmn	ip, #1
   1f33c:	bne	1f24c <gen_hostop6+0x4b4>
   1f340:	mov	r5, r7
   1f344:	ldr	ip, [pc, #4080]	; 2033c <gen_hostop6+0x15a4>
   1f348:	add	ip, pc, ip
   1f34c:	mov	r7, ip
   1f350:	ldr	r4, [r7, r5, lsl #3]!
   1f354:	cmp	r4, #207	; 0xcf
   1f358:	bhi	1f3b8 <gen_hostop6+0x620>
   1f35c:	ldr	r0, [pc, #4060]	; 20340 <gen_hostop6+0x15a8>
   1f360:	add	r6, r5, #1
   1f364:	cmp	r5, #15
   1f368:	add	r0, pc, r0
   1f36c:	str	r6, [r0]
   1f370:	bge	20328 <gen_hostop6+0x1590>
   1f374:	mov	r0, #1024	; 0x400
   1f378:	lsl	r4, r0, r6
   1f37c:	mov	r0, r4
   1f380:	bl	ed4 <malloc@plt>
   1f384:	cmp	r0, #0
   1f388:	str	r0, [r7, #12]
   1f38c:	beq	20328 <gen_hostop6+0x1590>
   1f390:	mov	r1, #0
   1f394:	mov	r2, r4
   1f398:	add	r7, r7, #8
   1f39c:	bl	f40 <memset@plt>
   1f3a0:	str	r4, [r7]
   1f3a4:	cmp	r4, #207	; 0xcf
   1f3a8:	ldr	ip, [pc, #3988]	; 20344 <gen_hostop6+0x15ac>
   1f3ac:	add	ip, pc, ip
   1f3b0:	bhi	1f3bc <gen_hostop6+0x624>
   1f3b4:	b	20328 <gen_hostop6+0x1590>
   1f3b8:	mov	r6, r5
   1f3bc:	sub	r1, r4, #208	; 0xd0
   1f3c0:	rev	r0, sl
   1f3c4:	str	r1, [r7]
   1f3c8:	ldr	r2, [r7, #4]
   1f3cc:	add	sl, r2, r1
   1f3d0:	mov	r1, #21
   1f3d4:	str	r8, [sl, #4]
   1f3d8:	str	r1, [sl, #8]
   1f3dc:	str	r0, [sl, #20]
   1f3e0:	ldr	r0, [sp, #32]
   1f3e4:	str	sl, [sl, #96]	; 0x60
   1f3e8:	ldr	r5, [r9, #8]
   1f3ec:	add	r7, r0, #8
   1f3f0:	ldr	r0, [sp, #28]
   1f3f4:	str	r5, [sp, #20]
   1f3f8:	ldr	r9, [r0, #8]
   1f3fc:	ldr	r0, [sp, #24]
   1f400:	cmp	r0, #0
   1f404:	str	r9, [sp, #12]
   1f408:	beq	1f590 <gen_hostop6+0x7f8>
   1f40c:	str	r7, [sp, #8]
   1f410:	ldr	r7, [pc, #3888]	; 20348 <gen_hostop6+0x15b0>
   1f414:	ldr	r7, [pc, r7]
   1f418:	cmn	r7, #1
   1f41c:	bne	1f480 <gen_hostop6+0x6e8>
   1f420:	ldr	r7, [pc, #3876]	; 2034c <gen_hostop6+0x15b4>
   1f424:	mvn	r1, #15
   1f428:	ldr	r7, [pc, r7]
   1f42c:	ldr	r0, [pc, #3868]	; 20350 <gen_hostop6+0x15b8>
   1f430:	ldr	r2, [pc, #3868]	; 20354 <gen_hostop6+0x15bc>
   1f434:	add	r0, pc, r0
   1f438:	add	r2, pc, r2
   1f43c:	ldr	r3, [r0, r7, lsl #2]
   1f440:	cmp	r3, #0
   1f444:	beq	1f46c <gen_hostop6+0x6d4>
   1f448:	add	r3, r7, #1
   1f44c:	adds	r1, r1, #1
   1f450:	asr	r7, r3, #31
   1f454:	add	r7, r3, r7, lsr #28
   1f458:	bic	r7, r7, #15
   1f45c:	sub	r7, r3, r7
   1f460:	str	r7, [r2]
   1f464:	bne	1f43c <gen_hostop6+0x6a4>
   1f468:	b	1fdcc <gen_hostop6+0x1034>
   1f46c:	mov	r1, #1
   1f470:	str	r1, [r0, r7, lsl #2]
   1f474:	ldr	r0, [pc, #3804]	; 20358 <gen_hostop6+0x15c0>
   1f478:	add	r0, pc, r0
   1f47c:	str	r7, [r0]
   1f480:	mov	r5, ip
   1f484:	ldr	r4, [r5, r6, lsl #3]!
   1f488:	cmp	r4, #19
   1f48c:	bhi	1f4f4 <gen_hostop6+0x75c>
   1f490:	ldr	r0, [pc, #3780]	; 2035c <gen_hostop6+0x15c4>
   1f494:	add	r1, r6, #1
   1f498:	cmp	r6, #15
   1f49c:	add	r0, pc, r0
   1f4a0:	str	r1, [r0]
   1f4a4:	bge	20328 <gen_hostop6+0x1590>
   1f4a8:	mov	r0, #1024	; 0x400
   1f4ac:	mov	r6, r1
   1f4b0:	lsl	r4, r0, r1
   1f4b4:	mov	r0, r4
   1f4b8:	bl	ed4 <malloc@plt>
   1f4bc:	cmp	r0, #0
   1f4c0:	str	r0, [r5, #12]
   1f4c4:	beq	20328 <gen_hostop6+0x1590>
   1f4c8:	mov	r1, #0
   1f4cc:	mov	r2, r4
   1f4d0:	add	r5, r5, #8
   1f4d4:	bl	f40 <memset@plt>
   1f4d8:	str	r4, [r5]
   1f4dc:	cmp	r4, #19
   1f4e0:	mov	r2, r6
   1f4e4:	ldr	ip, [pc, #3700]	; 20360 <gen_hostop6+0x15c8>
   1f4e8:	add	ip, pc, ip
   1f4ec:	bhi	1f4f8 <gen_hostop6+0x760>
   1f4f0:	b	20328 <gen_hostop6+0x1590>
   1f4f4:	mov	r2, r6
   1f4f8:	sub	r0, r4, #20
   1f4fc:	mov	r1, #97	; 0x61
   1f500:	str	r0, [r5]
   1f504:	ldr	r8, [r5, #4]
   1f508:	str	r1, [r8, r0]!
   1f50c:	cmp	r8, #0
   1f510:	str	r7, [r8, #12]
   1f514:	beq	1f588 <gen_hostop6+0x7f0>
   1f518:	mov	r5, ip
   1f51c:	ldr	r6, [sp, #8]
   1f520:	ldr	r4, [r5, r2, lsl #3]!
   1f524:	cmp	r4, #19
   1f528:	bhi	1f628 <gen_hostop6+0x890>
   1f52c:	ldr	r0, [pc, #3632]	; 20364 <gen_hostop6+0x15cc>
   1f530:	add	r9, r2, #1
   1f534:	cmp	r2, #15
   1f538:	add	r0, pc, r0
   1f53c:	str	r9, [r0]
   1f540:	bge	20328 <gen_hostop6+0x1590>
   1f544:	mov	r0, #1024	; 0x400
   1f548:	lsl	r4, r0, r9
   1f54c:	mov	r0, r4
   1f550:	bl	ed4 <malloc@plt>
   1f554:	cmp	r0, #0
   1f558:	str	r0, [r5, #12]
   1f55c:	beq	20328 <gen_hostop6+0x1590>
   1f560:	mov	r1, #0
   1f564:	mov	r2, r4
   1f568:	add	r5, r5, #8
   1f56c:	bl	f40 <memset@plt>
   1f570:	str	r4, [r5]
   1f574:	cmp	r4, #19
   1f578:	ldr	ip, [pc, #3560]	; 20368 <gen_hostop6+0x15d0>
   1f57c:	add	ip, pc, ip
   1f580:	bhi	1f62c <gen_hostop6+0x894>
   1f584:	b	20328 <gen_hostop6+0x1590>
   1f588:	ldr	r7, [sp, #8]
   1f58c:	mov	r6, r2
   1f590:	mov	r5, ip
   1f594:	ldr	r4, [r5, r6, lsl #3]!
   1f598:	cmp	r4, #19
   1f59c:	bhi	1f5fc <gen_hostop6+0x864>
   1f5a0:	ldr	r0, [pc, #3524]	; 2036c <gen_hostop6+0x15d4>
   1f5a4:	add	r9, r6, #1
   1f5a8:	cmp	r6, #15
   1f5ac:	add	r0, pc, r0
   1f5b0:	str	r9, [r0]
   1f5b4:	bge	20328 <gen_hostop6+0x1590>
   1f5b8:	mov	r0, #1024	; 0x400
   1f5bc:	lsl	r4, r0, r9
   1f5c0:	mov	r0, r4
   1f5c4:	bl	ed4 <malloc@plt>
   1f5c8:	cmp	r0, #0
   1f5cc:	str	r0, [r5, #12]
   1f5d0:	beq	20328 <gen_hostop6+0x1590>
   1f5d4:	mov	r1, #0
   1f5d8:	mov	r2, r4
   1f5dc:	add	r5, r5, #8
   1f5e0:	bl	f40 <memset@plt>
   1f5e4:	str	r4, [r5]
   1f5e8:	cmp	r4, #19
   1f5ec:	ldr	ip, [pc, #3452]	; 20370 <gen_hostop6+0x15d8>
   1f5f0:	add	ip, pc, ip
   1f5f4:	bhi	1f600 <gen_hostop6+0x868>
   1f5f8:	b	20328 <gen_hostop6+0x1590>
   1f5fc:	mov	r9, r6
   1f600:	sub	r0, r4, #20
   1f604:	mov	r1, #32
   1f608:	str	r0, [r5]
   1f60c:	ldr	r8, [r5, #4]
   1f610:	str	r1, [r8, r0]!
   1f614:	ldr	r0, [pc, #3416]	; 20374 <gen_hostop6+0x15dc>
   1f618:	ldr	r0, [pc, r0]
   1f61c:	add	r0, r0, r7
   1f620:	str	r0, [r8, #12]
   1f624:	b	1f65c <gen_hostop6+0x8c4>
   1f628:	mov	r9, r2
   1f62c:	sub	r1, r4, #20
   1f630:	mov	r2, #64	; 0x40
   1f634:	str	r1, [r5]
   1f638:	ldr	r0, [r5, #4]
   1f63c:	str	r2, [r0, r1]!
   1f640:	mov	r2, r8
   1f644:	str	r6, [r0, #12]
   1f648:	mov	r1, r2
   1f64c:	ldr	r2, [r2, #16]
   1f650:	cmp	r2, #0
   1f654:	bne	1f648 <gen_hostop6+0x8b0>
   1f658:	str	r0, [r1, #16]
   1f65c:	ldr	r5, [sp, #20]
   1f660:	cmn	r5, #1
   1f664:	beq	1f6d4 <gen_hostop6+0x93c>
   1f668:	mov	r6, ip
   1f66c:	ldr	r4, [r6, r9, lsl #3]!
   1f670:	cmp	r4, #19
   1f674:	bhi	1f6dc <gen_hostop6+0x944>
   1f678:	ldr	r0, [pc, #3320]	; 20378 <gen_hostop6+0x15e0>
   1f67c:	add	r7, r9, #1
   1f680:	cmp	r9, #15
   1f684:	add	r0, pc, r0
   1f688:	str	r7, [r0]
   1f68c:	bge	20328 <gen_hostop6+0x1590>
   1f690:	mov	r0, #1024	; 0x400
   1f694:	lsl	r4, r0, r7
   1f698:	mov	r0, r4
   1f69c:	bl	ed4 <malloc@plt>
   1f6a0:	cmp	r0, #0
   1f6a4:	str	r0, [r6, #12]
   1f6a8:	beq	20328 <gen_hostop6+0x1590>
   1f6ac:	mov	r1, #0
   1f6b0:	mov	r2, r4
   1f6b4:	add	r6, r6, #8
   1f6b8:	bl	f40 <memset@plt>
   1f6bc:	str	r4, [r6]
   1f6c0:	cmp	r4, #19
   1f6c4:	ldr	ip, [pc, #3248]	; 2037c <gen_hostop6+0x15e4>
   1f6c8:	add	ip, pc, ip
   1f6cc:	bhi	1f6e0 <gen_hostop6+0x948>
   1f6d0:	b	20328 <gen_hostop6+0x1590>
   1f6d4:	mov	r7, r9
   1f6d8:	b	1f714 <gen_hostop6+0x97c>
   1f6dc:	mov	r7, r9
   1f6e0:	sub	r2, r4, #20
   1f6e4:	mov	r3, #84	; 0x54
   1f6e8:	rev	r1, r5
   1f6ec:	str	r2, [r6]
   1f6f0:	ldr	r0, [r6, #4]
   1f6f4:	str	r3, [r0, r2]!
   1f6f8:	mov	r2, r8
   1f6fc:	str	r1, [r0, #12]
   1f700:	mov	r1, r2
   1f704:	ldr	r2, [r2, #16]
   1f708:	cmp	r2, #0
   1f70c:	bne	1f700 <gen_hostop6+0x968>
   1f710:	str	r0, [r1, #16]
   1f714:	mov	r6, ip
   1f718:	ldr	r4, [r6, r7, lsl #3]!
   1f71c:	cmp	r4, #207	; 0xcf
   1f720:	bhi	1f780 <gen_hostop6+0x9e8>
   1f724:	ldr	r0, [pc, #3156]	; 20380 <gen_hostop6+0x15e8>
   1f728:	add	r9, r7, #1
   1f72c:	cmp	r7, #15
   1f730:	add	r0, pc, r0
   1f734:	str	r9, [r0]
   1f738:	bge	20328 <gen_hostop6+0x1590>
   1f73c:	mov	r0, #1024	; 0x400
   1f740:	lsl	r4, r0, r9
   1f744:	mov	r0, r4
   1f748:	bl	ed4 <malloc@plt>
   1f74c:	cmp	r0, #0
   1f750:	str	r0, [r6, #12]
   1f754:	beq	20328 <gen_hostop6+0x1590>
   1f758:	mov	r1, #0
   1f75c:	mov	r2, r4
   1f760:	add	r6, r6, #8
   1f764:	bl	f40 <memset@plt>
   1f768:	str	r4, [r6]
   1f76c:	cmp	r4, #207	; 0xcf
   1f770:	ldr	ip, [pc, #3084]	; 20384 <gen_hostop6+0x15ec>
   1f774:	add	ip, pc, ip
   1f778:	bhi	1f784 <gen_hostop6+0x9ec>
   1f77c:	b	20328 <gen_hostop6+0x1590>
   1f780:	mov	r9, r7
   1f784:	add	r0, sl, #96	; 0x60
   1f788:	str	r0, [sp, #20]
   1f78c:	ldr	r0, [sp, #12]
   1f790:	rev	r1, r0
   1f794:	sub	r0, r4, #208	; 0xd0
   1f798:	str	r0, [r6]
   1f79c:	ldr	r2, [r6, #4]
   1f7a0:	adds	r0, r2, r0
   1f7a4:	mov	r2, #21
   1f7a8:	str	r8, [r0, #4]
   1f7ac:	str	r2, [r0, #8]
   1f7b0:	str	r1, [r0, #20]
   1f7b4:	str	r0, [r0, #96]	; 0x60
   1f7b8:	beq	1f7f0 <gen_hostop6+0xa58>
   1f7bc:	ldr	r1, [sp, #20]
   1f7c0:	mov	r2, r0
   1f7c4:	ldr	r1, [r1]
   1f7c8:	ldr	r3, [r2, #44]	; 0x2c
   1f7cc:	add	r7, r2, #84	; 0x54
   1f7d0:	cmp	r3, #0
   1f7d4:	mov	r3, #84	; 0x54
   1f7d8:	movweq	r3, #60	; 0x3c
   1f7dc:	addeq	r7, r2, #60	; 0x3c
   1f7e0:	ldr	r2, [r2, r3]
   1f7e4:	str	r1, [r7]
   1f7e8:	cmp	r2, #0
   1f7ec:	bne	1f7c8 <gen_hostop6+0xa30>
   1f7f0:	ldr	r1, [r0, #44]	; 0x2c
   1f7f4:	cmp	sl, #0
   1f7f8:	clz	r1, r1
   1f7fc:	lsr	r1, r1, #5
   1f800:	str	r1, [r0, #44]	; 0x2c
   1f804:	ldr	r1, [sl, #44]	; 0x2c
   1f808:	clz	r2, r1
   1f80c:	lsr	r2, r2, #5
   1f810:	str	r2, [sl, #44]	; 0x2c
   1f814:	str	sl, [fp, #-32]	; 0xffffffe0
   1f818:	beq	1f860 <gen_hostop6+0xac8>
   1f81c:	mov	r3, #60	; 0x3c
   1f820:	cmp	r1, #0
   1f824:	mov	r2, sl
   1f828:	movweq	r3, #84	; 0x54
   1f82c:	ldr	r1, [r2, r3]!
   1f830:	cmp	r1, #0
   1f834:	beq	1f864 <gen_hostop6+0xacc>
   1f838:	ldr	r3, [r1, #44]	; 0x2c
   1f83c:	add	r2, r1, #84	; 0x54
   1f840:	cmp	r3, #0
   1f844:	mov	r3, #84	; 0x54
   1f848:	movweq	r3, #60	; 0x3c
   1f84c:	addeq	r2, r1, #60	; 0x3c
   1f850:	ldr	r1, [r1, r3]
   1f854:	cmp	r1, #0
   1f858:	bne	1f838 <gen_hostop6+0xaa0>
   1f85c:	b	1f864 <gen_hostop6+0xacc>
   1f860:	sub	r2, fp, #32
   1f864:	str	r0, [r2]
   1f868:	ldr	r1, [sl, #44]	; 0x2c
   1f86c:	clz	r1, r1
   1f870:	lsr	r1, r1, #5
   1f874:	str	r1, [sl, #44]	; 0x2c
   1f878:	ldr	r0, [r0, #96]	; 0x60
   1f87c:	str	r0, [sl, #96]	; 0x60
   1f880:	ldr	r0, [sp, #32]
   1f884:	add	r3, r0, #4
   1f888:	ldr	r0, [sp, #36]	; 0x24
   1f88c:	ldr	lr, [r0, #4]
   1f890:	ldr	r0, [sp, #28]
   1f894:	ldr	r8, [r0, #4]
   1f898:	ldr	r0, [sp, #24]
   1f89c:	cmp	r0, #0
   1f8a0:	beq	1fa4c <gen_hostop6+0xcb4>
   1f8a4:	ldr	r6, [pc, #2780]	; 20388 <gen_hostop6+0x15f0>
   1f8a8:	ldr	r6, [pc, r6]
   1f8ac:	cmn	r6, #1
   1f8b0:	bne	1f91c <gen_hostop6+0xb84>
   1f8b4:	ldr	r6, [pc, #2768]	; 2038c <gen_hostop6+0x15f4>
   1f8b8:	mov	r4, r3
   1f8bc:	mvn	r1, #15
   1f8c0:	ldr	r6, [pc, r6]
   1f8c4:	ldr	r0, [pc, #2756]	; 20390 <gen_hostop6+0x15f8>
   1f8c8:	ldr	r2, [pc, #2756]	; 20394 <gen_hostop6+0x15fc>
   1f8cc:	add	r0, pc, r0
   1f8d0:	add	r2, pc, r2
   1f8d4:	ldr	r3, [r0, r6, lsl #2]
   1f8d8:	cmp	r3, #0
   1f8dc:	beq	1f904 <gen_hostop6+0xb6c>
   1f8e0:	add	r3, r6, #1
   1f8e4:	adds	r1, r1, #1
   1f8e8:	asr	r7, r3, #31
   1f8ec:	add	r7, r3, r7, lsr #28
   1f8f0:	bic	r7, r7, #15
   1f8f4:	sub	r6, r3, r7
   1f8f8:	str	r6, [r2]
   1f8fc:	bne	1f8d4 <gen_hostop6+0xb3c>
   1f900:	b	1fdcc <gen_hostop6+0x1034>
   1f904:	mov	r1, #1
   1f908:	mov	r3, r4
   1f90c:	str	r1, [r0, r6, lsl #2]
   1f910:	ldr	r0, [pc, #2688]	; 20398 <gen_hostop6+0x1600>
   1f914:	add	r0, pc, r0
   1f918:	str	r6, [r0]
   1f91c:	mov	r5, ip
   1f920:	ldr	r4, [r5, r9, lsl #3]!
   1f924:	cmp	r4, #19
   1f928:	bhi	1f9a0 <gen_hostop6+0xc08>
   1f92c:	str	r3, [sp, #12]
   1f930:	str	r8, [sp, #8]
   1f934:	add	r7, r9, #1
   1f938:	cmp	r9, #15
   1f93c:	ldr	r0, [pc, #2648]	; 2039c <gen_hostop6+0x1604>
   1f940:	add	r0, pc, r0
   1f944:	str	r7, [r0]
   1f948:	bge	20328 <gen_hostop6+0x1590>
   1f94c:	mov	r0, #1024	; 0x400
   1f950:	mov	r8, lr
   1f954:	lsl	r4, r0, r7
   1f958:	mov	r0, r4
   1f95c:	bl	ed4 <malloc@plt>
   1f960:	cmp	r0, #0
   1f964:	str	r0, [r5, #12]
   1f968:	beq	20328 <gen_hostop6+0x1590>
   1f96c:	mov	r1, #0
   1f970:	mov	r2, r4
   1f974:	add	r5, r5, #8
   1f978:	bl	f40 <memset@plt>
   1f97c:	str	r4, [r5]
   1f980:	mov	lr, r8
   1f984:	cmp	r4, #19
   1f988:	ldr	ip, [pc, #2576]	; 203a0 <gen_hostop6+0x1608>
   1f98c:	ldr	r8, [sp, #8]
   1f990:	ldr	r3, [sp, #12]
   1f994:	add	ip, pc, ip
   1f998:	bhi	1f9a4 <gen_hostop6+0xc0c>
   1f99c:	b	20328 <gen_hostop6+0x1590>
   1f9a0:	mov	r7, r9
   1f9a4:	sub	r0, r4, #20
   1f9a8:	mov	r1, #97	; 0x61
   1f9ac:	str	r0, [r5]
   1f9b0:	ldr	r9, [r5, #4]
   1f9b4:	str	r1, [r9, r0]!
   1f9b8:	cmp	r9, #0
   1f9bc:	str	r6, [r9, #12]
   1f9c0:	beq	1fa48 <gen_hostop6+0xcb0>
   1f9c4:	mov	r6, ip
   1f9c8:	ldr	r4, [r6, r7, lsl #3]!
   1f9cc:	cmp	r4, #19
   1f9d0:	bhi	1fbb0 <gen_hostop6+0xe18>
   1f9d4:	str	r3, [sp, #12]
   1f9d8:	str	r8, [sp, #8]
   1f9dc:	add	r5, r7, #1
   1f9e0:	cmp	r7, #15
   1f9e4:	ldr	r0, [pc, #2488]	; 203a4 <gen_hostop6+0x160c>
   1f9e8:	add	r0, pc, r0
   1f9ec:	str	r5, [r0]
   1f9f0:	bge	20328 <gen_hostop6+0x1590>
   1f9f4:	mov	r0, #1024	; 0x400
   1f9f8:	mov	r8, lr
   1f9fc:	lsl	r4, r0, r5
   1fa00:	mov	r0, r4
   1fa04:	bl	ed4 <malloc@plt>
   1fa08:	cmp	r0, #0
   1fa0c:	str	r0, [r6, #12]
   1fa10:	beq	20328 <gen_hostop6+0x1590>
   1fa14:	mov	r1, #0
   1fa18:	mov	r2, r4
   1fa1c:	add	r6, r6, #8
   1fa20:	bl	f40 <memset@plt>
   1fa24:	str	r4, [r6]
   1fa28:	mov	lr, r8
   1fa2c:	cmp	r4, #19
   1fa30:	ldr	ip, [pc, #2416]	; 203a8 <gen_hostop6+0x1610>
   1fa34:	ldr	r8, [sp, #8]
   1fa38:	ldr	r3, [sp, #12]
   1fa3c:	add	ip, pc, ip
   1fa40:	bhi	1fbb4 <gen_hostop6+0xe1c>
   1fa44:	b	20328 <gen_hostop6+0x1590>
   1fa48:	mov	r9, r7
   1fa4c:	mov	r6, ip
   1fa50:	ldr	r4, [r6, r9, lsl #3]!
   1fa54:	cmp	r4, #19
   1fa58:	bhi	1fac8 <gen_hostop6+0xd30>
   1fa5c:	str	r3, [sp, #12]
   1fa60:	add	r5, r9, #1
   1fa64:	cmp	r9, #15
   1fa68:	ldr	r0, [pc, #2364]	; 203ac <gen_hostop6+0x1614>
   1fa6c:	add	r0, pc, r0
   1fa70:	str	r5, [r0]
   1fa74:	bge	20328 <gen_hostop6+0x1590>
   1fa78:	mov	r0, #1024	; 0x400
   1fa7c:	mov	r7, lr
   1fa80:	lsl	r4, r0, r5
   1fa84:	mov	r0, r4
   1fa88:	bl	ed4 <malloc@plt>
   1fa8c:	cmp	r0, #0
   1fa90:	str	r0, [r6, #12]
   1fa94:	beq	20328 <gen_hostop6+0x1590>
   1fa98:	mov	r1, #0
   1fa9c:	mov	r2, r4
   1faa0:	add	r6, r6, #8
   1faa4:	bl	f40 <memset@plt>
   1faa8:	str	r4, [r6]
   1faac:	cmp	r4, #19
   1fab0:	mov	lr, r7
   1fab4:	ldr	ip, [pc, #2292]	; 203b0 <gen_hostop6+0x1618>
   1fab8:	ldr	r3, [sp, #12]
   1fabc:	add	ip, pc, ip
   1fac0:	bhi	1facc <gen_hostop6+0xd34>
   1fac4:	b	20328 <gen_hostop6+0x1590>
   1fac8:	mov	r5, r9
   1facc:	sub	r0, r4, #20
   1fad0:	mov	r1, #32
   1fad4:	str	r0, [r6]
   1fad8:	ldr	r9, [r6, #4]
   1fadc:	str	r1, [r9, r0]!
   1fae0:	ldr	r0, [pc, #2252]	; 203b4 <gen_hostop6+0x161c>
   1fae4:	ldr	r0, [pc, r0]
   1fae8:	add	r0, r0, r3
   1faec:	str	r0, [r9, #12]
   1faf0:	cmn	lr, #1
   1faf4:	beq	1fbec <gen_hostop6+0xe54>
   1faf8:	mov	r7, ip
   1fafc:	ldr	r4, [r7, r5, lsl #3]!
   1fb00:	cmp	r4, #19
   1fb04:	bhi	1fb74 <gen_hostop6+0xddc>
   1fb08:	str	r8, [sp, #8]
   1fb0c:	add	r6, r5, #1
   1fb10:	cmp	r5, #15
   1fb14:	ldr	r0, [pc, #2204]	; 203b8 <gen_hostop6+0x1620>
   1fb18:	add	r0, pc, r0
   1fb1c:	str	r6, [r0]
   1fb20:	bge	20328 <gen_hostop6+0x1590>
   1fb24:	mov	r0, #1024	; 0x400
   1fb28:	mov	r8, lr
   1fb2c:	lsl	r4, r0, r6
   1fb30:	mov	r0, r4
   1fb34:	bl	ed4 <malloc@plt>
   1fb38:	cmp	r0, #0
   1fb3c:	str	r0, [r7, #12]
   1fb40:	beq	20328 <gen_hostop6+0x1590>
   1fb44:	mov	r1, #0
   1fb48:	mov	r2, r4
   1fb4c:	add	r7, r7, #8
   1fb50:	bl	f40 <memset@plt>
   1fb54:	str	r4, [r7]
   1fb58:	mov	lr, r8
   1fb5c:	cmp	r4, #19
   1fb60:	ldr	ip, [pc, #2132]	; 203bc <gen_hostop6+0x1624>
   1fb64:	ldr	r8, [sp, #8]
   1fb68:	add	ip, pc, ip
   1fb6c:	bhi	1fb78 <gen_hostop6+0xde0>
   1fb70:	b	20328 <gen_hostop6+0x1590>
   1fb74:	mov	r6, r5
   1fb78:	sub	r2, r4, #20
   1fb7c:	mov	r3, #84	; 0x54
   1fb80:	rev	r1, lr
   1fb84:	str	r2, [r7]
   1fb88:	ldr	r0, [r7, #4]
   1fb8c:	str	r3, [r0, r2]!
   1fb90:	mov	r2, r9
   1fb94:	str	r1, [r0, #12]
   1fb98:	mov	r1, r2
   1fb9c:	ldr	r2, [r2, #16]
   1fba0:	cmp	r2, #0
   1fba4:	bne	1fb98 <gen_hostop6+0xe00>
   1fba8:	str	r0, [r1, #16]
   1fbac:	b	1fbf0 <gen_hostop6+0xe58>
   1fbb0:	mov	r5, r7
   1fbb4:	sub	r1, r4, #20
   1fbb8:	mov	r2, #64	; 0x40
   1fbbc:	str	r1, [r6]
   1fbc0:	ldr	r0, [r6, #4]
   1fbc4:	str	r2, [r0, r1]!
   1fbc8:	mov	r2, r9
   1fbcc:	str	r3, [r0, #12]
   1fbd0:	mov	r1, r2
   1fbd4:	ldr	r2, [r2, #16]
   1fbd8:	cmp	r2, #0
   1fbdc:	bne	1fbd0 <gen_hostop6+0xe38>
   1fbe0:	str	r0, [r1, #16]
   1fbe4:	cmn	lr, #1
   1fbe8:	bne	1faf8 <gen_hostop6+0xd60>
   1fbec:	mov	r6, r5
   1fbf0:	mov	r7, ip
   1fbf4:	mov	r5, r8
   1fbf8:	ldr	r4, [r7, r6, lsl #3]!
   1fbfc:	cmp	r4, #207	; 0xcf
   1fc00:	bhi	1fc60 <gen_hostop6+0xec8>
   1fc04:	ldr	r0, [pc, #1972]	; 203c0 <gen_hostop6+0x1628>
   1fc08:	add	r8, r6, #1
   1fc0c:	cmp	r6, #15
   1fc10:	add	r0, pc, r0
   1fc14:	str	r8, [r0]
   1fc18:	bge	20328 <gen_hostop6+0x1590>
   1fc1c:	mov	r0, #1024	; 0x400
   1fc20:	lsl	r4, r0, r8
   1fc24:	mov	r0, r4
   1fc28:	bl	ed4 <malloc@plt>
   1fc2c:	cmp	r0, #0
   1fc30:	str	r0, [r7, #12]
   1fc34:	beq	20328 <gen_hostop6+0x1590>
   1fc38:	mov	r1, #0
   1fc3c:	mov	r2, r4
   1fc40:	add	r7, r7, #8
   1fc44:	bl	f40 <memset@plt>
   1fc48:	str	r4, [r7]
   1fc4c:	cmp	r4, #207	; 0xcf
   1fc50:	ldr	ip, [pc, #1900]	; 203c4 <gen_hostop6+0x162c>
   1fc54:	add	ip, pc, ip
   1fc58:	bhi	1fc64 <gen_hostop6+0xecc>
   1fc5c:	b	20328 <gen_hostop6+0x1590>
   1fc60:	mov	r8, r6
   1fc64:	sub	r0, r4, #208	; 0xd0
   1fc68:	rev	r1, r5
   1fc6c:	str	r0, [r7]
   1fc70:	ldr	r2, [r7, #4]
   1fc74:	adds	r0, r2, r0
   1fc78:	mov	r2, #21
   1fc7c:	str	r9, [r0, #4]
   1fc80:	str	r2, [r0, #8]
   1fc84:	str	r1, [r0, #20]
   1fc88:	ldr	r1, [sp, #20]
   1fc8c:	str	r0, [r0, #96]	; 0x60
   1fc90:	beq	1fcc4 <gen_hostop6+0xf2c>
   1fc94:	ldr	r1, [r1]
   1fc98:	mov	r2, r0
   1fc9c:	ldr	r3, [r2, #44]	; 0x2c
   1fca0:	add	r7, r2, #84	; 0x54
   1fca4:	cmp	r3, #0
   1fca8:	mov	r3, #84	; 0x54
   1fcac:	movweq	r3, #60	; 0x3c
   1fcb0:	addeq	r7, r2, #60	; 0x3c
   1fcb4:	ldr	r2, [r2, r3]
   1fcb8:	str	r1, [r7]
   1fcbc:	cmp	r2, #0
   1fcc0:	bne	1fc9c <gen_hostop6+0xf04>
   1fcc4:	ldr	r1, [r0, #44]	; 0x2c
   1fcc8:	ldr	r7, [sp, #36]	; 0x24
   1fccc:	ldr	r6, [sp, #28]
   1fcd0:	cmp	sl, #0
   1fcd4:	clz	r1, r1
   1fcd8:	lsr	r1, r1, #5
   1fcdc:	str	r1, [r0, #44]	; 0x2c
   1fce0:	ldr	r1, [sl, #44]	; 0x2c
   1fce4:	clz	r2, r1
   1fce8:	lsr	r2, r2, #5
   1fcec:	str	r2, [sl, #44]	; 0x2c
   1fcf0:	str	sl, [fp, #-32]	; 0xffffffe0
   1fcf4:	beq	1fd3c <gen_hostop6+0xfa4>
   1fcf8:	mov	r3, #60	; 0x3c
   1fcfc:	cmp	r1, #0
   1fd00:	mov	r2, sl
   1fd04:	movweq	r3, #84	; 0x54
   1fd08:	ldr	r1, [r2, r3]!
   1fd0c:	cmp	r1, #0
   1fd10:	beq	1fd40 <gen_hostop6+0xfa8>
   1fd14:	ldr	r3, [r1, #44]	; 0x2c
   1fd18:	add	r2, r1, #84	; 0x54
   1fd1c:	cmp	r3, #0
   1fd20:	mov	r3, #84	; 0x54
   1fd24:	movweq	r3, #60	; 0x3c
   1fd28:	addeq	r2, r1, #60	; 0x3c
   1fd2c:	ldr	r1, [r1, r3]
   1fd30:	cmp	r1, #0
   1fd34:	bne	1fd14 <gen_hostop6+0xf7c>
   1fd38:	b	1fd40 <gen_hostop6+0xfa8>
   1fd3c:	sub	r2, fp, #32
   1fd40:	str	r0, [r2]
   1fd44:	ldr	r1, [sl, #44]	; 0x2c
   1fd48:	clz	r1, r1
   1fd4c:	lsr	r1, r1, #5
   1fd50:	str	r1, [sl, #44]	; 0x2c
   1fd54:	ldr	r0, [r0, #96]	; 0x60
   1fd58:	str	r0, [sl, #96]	; 0x60
   1fd5c:	ldr	r0, [sp, #24]
   1fd60:	ldr	r9, [r6]
   1fd64:	ldr	lr, [r7]
   1fd68:	cmp	r0, #0
   1fd6c:	str	r9, [sp, #36]	; 0x24
   1fd70:	beq	1fefc <gen_hostop6+0x1164>
   1fd74:	ldr	r6, [pc, #1612]	; 203c8 <gen_hostop6+0x1630>
   1fd78:	ldr	r6, [pc, r6]
   1fd7c:	cmn	r6, #1
   1fd80:	bne	1fdec <gen_hostop6+0x1054>
   1fd84:	ldr	r6, [pc, #1600]	; 203cc <gen_hostop6+0x1634>
   1fd88:	mvn	r1, #15
   1fd8c:	ldr	r6, [pc, r6]
   1fd90:	ldr	r0, [pc, #1592]	; 203d0 <gen_hostop6+0x1638>
   1fd94:	ldr	r2, [pc, #1592]	; 203d4 <gen_hostop6+0x163c>
   1fd98:	add	r0, pc, r0
   1fd9c:	add	r2, pc, r2
   1fda0:	ldr	r3, [r0, r6, lsl #2]
   1fda4:	cmp	r3, #0
   1fda8:	beq	1fdd8 <gen_hostop6+0x1040>
   1fdac:	add	r3, r6, #1
   1fdb0:	adds	r1, r1, #1
   1fdb4:	asr	r7, r3, #31
   1fdb8:	add	r7, r3, r7, lsr #28
   1fdbc:	bic	r7, r7, #15
   1fdc0:	sub	r6, r3, r7
   1fdc4:	str	r6, [r2]
   1fdc8:	bne	1fda0 <gen_hostop6+0x1008>
   1fdcc:	ldr	r0, [pc, #1380]	; 20338 <gen_hostop6+0x15a0>
   1fdd0:	add	r0, pc, r0
   1fdd4:	bl	2124 <sf_bpf_error>
   1fdd8:	mov	r1, #1
   1fddc:	str	r1, [r0, r6, lsl #2]
   1fde0:	ldr	r0, [pc, #1520]	; 203d8 <gen_hostop6+0x1640>
   1fde4:	add	r0, pc, r0
   1fde8:	str	r6, [r0]
   1fdec:	mov	r7, ip
   1fdf0:	ldr	r4, [r7, r8, lsl #3]!
   1fdf4:	cmp	r4, #19
   1fdf8:	bhi	1fe60 <gen_hostop6+0x10c8>
   1fdfc:	str	lr, [sp, #28]
   1fe00:	add	r5, r8, #1
   1fe04:	cmp	r8, #15
   1fe08:	ldr	r0, [pc, #1484]	; 203dc <gen_hostop6+0x1644>
   1fe0c:	add	r0, pc, r0
   1fe10:	str	r5, [r0]
   1fe14:	bge	20328 <gen_hostop6+0x1590>
   1fe18:	mov	r0, #1024	; 0x400
   1fe1c:	lsl	r4, r0, r5
   1fe20:	mov	r0, r4
   1fe24:	bl	ed4 <malloc@plt>
   1fe28:	cmp	r0, #0
   1fe2c:	str	r0, [r7, #12]
   1fe30:	beq	20328 <gen_hostop6+0x1590>
   1fe34:	mov	r1, #0
   1fe38:	mov	r2, r4
   1fe3c:	add	r7, r7, #8
   1fe40:	bl	f40 <memset@plt>
   1fe44:	str	r4, [r7]
   1fe48:	cmp	r4, #19
   1fe4c:	ldr	ip, [pc, #1420]	; 203e0 <gen_hostop6+0x1648>
   1fe50:	ldr	lr, [sp, #28]
   1fe54:	add	ip, pc, ip
   1fe58:	bhi	1fe64 <gen_hostop6+0x10cc>
   1fe5c:	b	20328 <gen_hostop6+0x1590>
   1fe60:	mov	r5, r8
   1fe64:	sub	r0, r4, #20
   1fe68:	mov	r1, #97	; 0x61
   1fe6c:	str	r0, [r7]
   1fe70:	ldr	r8, [r7, #4]
   1fe74:	str	r1, [r8, r0]!
   1fe78:	cmp	r8, #0
   1fe7c:	str	r6, [r8, #12]
   1fe80:	beq	1fef8 <gen_hostop6+0x1160>
   1fe84:	mov	r6, ip
   1fe88:	ldr	r4, [r6, r5, lsl #3]!
   1fe8c:	cmp	r4, #19
   1fe90:	bhi	2009c <gen_hostop6+0x1304>
   1fe94:	ldr	r0, [pc, #1352]	; 203e4 <gen_hostop6+0x164c>
   1fe98:	add	r9, r5, #1
   1fe9c:	cmp	r5, #15
   1fea0:	add	r0, pc, r0
   1fea4:	str	r9, [r0]
   1fea8:	bge	20328 <gen_hostop6+0x1590>
   1feac:	mov	r0, #1024	; 0x400
   1feb0:	mov	r7, lr
   1feb4:	lsl	r4, r0, r9
   1feb8:	mov	r0, r4
   1febc:	bl	ed4 <malloc@plt>
   1fec0:	cmp	r0, #0
   1fec4:	str	r0, [r6, #12]
   1fec8:	beq	20328 <gen_hostop6+0x1590>
   1fecc:	mov	r1, #0
   1fed0:	mov	r2, r4
   1fed4:	add	r6, r6, #8
   1fed8:	bl	f40 <memset@plt>
   1fedc:	str	r4, [r6]
   1fee0:	cmp	r4, #19
   1fee4:	mov	lr, r7
   1fee8:	ldr	ip, [pc, #1272]	; 203e8 <gen_hostop6+0x1650>
   1feec:	add	ip, pc, ip
   1fef0:	bhi	200a0 <gen_hostop6+0x1308>
   1fef4:	b	20328 <gen_hostop6+0x1590>
   1fef8:	mov	r8, r5
   1fefc:	mov	r5, ip
   1ff00:	ldr	r4, [r5, r8, lsl #3]!
   1ff04:	cmp	r4, #19
   1ff08:	bhi	1ff88 <gen_hostop6+0x11f0>
   1ff0c:	ldr	r0, [pc, #1240]	; 203ec <gen_hostop6+0x1654>
   1ff10:	add	r9, r8, #1
   1ff14:	cmp	r8, #15
   1ff18:	add	r0, pc, r0
   1ff1c:	str	r9, [r0]
   1ff20:	bge	20328 <gen_hostop6+0x1590>
   1ff24:	mov	r0, #1024	; 0x400
   1ff28:	mov	r6, lr
   1ff2c:	lsl	r4, r0, r9
   1ff30:	mov	r0, r4
   1ff34:	bl	ed4 <malloc@plt>
   1ff38:	cmp	r0, #0
   1ff3c:	str	r0, [r5, #12]
   1ff40:	beq	20328 <gen_hostop6+0x1590>
   1ff44:	mov	r1, #0
   1ff48:	mov	r2, r4
   1ff4c:	add	r5, r5, #8
   1ff50:	bl	f40 <memset@plt>
   1ff54:	str	r4, [r5]
   1ff58:	cmp	r4, #19
   1ff5c:	mov	lr, r6
   1ff60:	ldr	ip, [pc, #1160]	; 203f0 <gen_hostop6+0x1658>
   1ff64:	add	ip, pc, ip
   1ff68:	bhi	1ff8c <gen_hostop6+0x11f4>
   1ff6c:	b	20328 <gen_hostop6+0x1590>
   1ff70:	.word	0x00028498
   1ff74:	.word	0x00028530
   1ff78:	.word	0x00028520
   1ff7c:	.word	0x00028510
   1ff80:	.word	0x00028508
   1ff84:	.word	0x00028500
   1ff88:	mov	r9, r8
   1ff8c:	sub	r0, r4, #20
   1ff90:	mov	r1, #32
   1ff94:	str	r0, [r5]
   1ff98:	ldr	r8, [r5, #4]
   1ff9c:	str	r1, [r8, r0]!
   1ffa0:	ldr	r0, [pc, #1100]	; 203f4 <gen_hostop6+0x165c>
   1ffa4:	ldr	r0, [pc, r0]
   1ffa8:	ldr	r1, [sp, #32]
   1ffac:	add	r0, r0, r1
   1ffb0:	str	r0, [r8, #12]
   1ffb4:	cmn	lr, #1
   1ffb8:	beq	200dc <gen_hostop6+0x1344>
   1ffbc:	mov	r7, ip
   1ffc0:	ldr	r4, [r7, r9, lsl #3]!
   1ffc4:	cmp	r4, #19
   1ffc8:	bhi	20044 <gen_hostop6+0x12ac>
   1ffcc:	str	lr, [sp, #28]
   1ffd0:	add	r6, r9, #1
   1ffd4:	cmp	r9, #15
   1ffd8:	ldr	r0, [pc, #1048]	; 203f8 <gen_hostop6+0x1660>
   1ffdc:	add	r0, pc, r0
   1ffe0:	str	r6, [r0]
   1ffe4:	bge	20328 <gen_hostop6+0x1590>
   1ffe8:	mov	r0, #1024	; 0x400
   1ffec:	lsl	r4, r0, r6
   1fff0:	mov	r0, r4
   1fff4:	bl	ed4 <malloc@plt>
   1fff8:	ldr	r9, [sp, #16]
   1fffc:	ldr	r5, [sp, #20]
   20000:	cmp	r0, #0
   20004:	str	r0, [r7, #12]
   20008:	beq	20328 <gen_hostop6+0x1590>
   2000c:	mov	r1, #0
   20010:	mov	r2, r4
   20014:	add	r7, r7, #8
   20018:	bl	f40 <memset@plt>
   2001c:	str	r4, [r7]
   20020:	cmp	r4, #19
   20024:	ldr	ip, [pc, #976]	; 203fc <gen_hostop6+0x1664>
   20028:	ldr	lr, [sp, #28]
   2002c:	add	ip, pc, ip
   20030:	bhi	20050 <gen_hostop6+0x12b8>
   20034:	b	20328 <gen_hostop6+0x1590>
   20038:	.word	0x000284b8
   2003c:	.word	0x00028498
   20040:	.word	0x0002847c
   20044:	mov	r6, r9
   20048:	ldr	r9, [sp, #16]
   2004c:	ldr	r5, [sp, #20]
   20050:	sub	r2, r4, #20
   20054:	mov	r3, #84	; 0x54
   20058:	rev	r1, lr
   2005c:	str	r2, [r7]
   20060:	ldr	r0, [r7, #4]
   20064:	str	r3, [r0, r2]!
   20068:	mov	r2, r8
   2006c:	str	r1, [r0, #12]
   20070:	mov	r1, r2
   20074:	ldr	r2, [r2, #16]
   20078:	cmp	r2, #0
   2007c:	bne	20070 <gen_hostop6+0x12d8>
   20080:	str	r0, [r1, #16]
   20084:	b	200e8 <gen_hostop6+0x1350>
   20088:	.word	0x000283f4
   2008c:	.word	0x00028454
   20090:	.word	0x000283c0
   20094:	.word	0x000282dc
   20098:	.word	0x00028340
   2009c:	mov	r9, r5
   200a0:	sub	r1, r4, #20
   200a4:	mov	r2, #64	; 0x40
   200a8:	str	r1, [r6]
   200ac:	ldr	r0, [r6, #4]
   200b0:	str	r2, [r0, r1]!
   200b4:	mov	r2, r8
   200b8:	ldr	r1, [sp, #32]
   200bc:	str	r1, [r0, #12]
   200c0:	mov	r1, r2
   200c4:	ldr	r2, [r2, #16]
   200c8:	cmp	r2, #0
   200cc:	bne	200c0 <gen_hostop6+0x1328>
   200d0:	str	r0, [r1, #16]
   200d4:	cmn	lr, #1
   200d8:	bne	1ffbc <gen_hostop6+0x1224>
   200dc:	mov	r6, r9
   200e0:	ldr	r9, [sp, #16]
   200e4:	ldr	r5, [sp, #20]
   200e8:	ldr	r4, [ip, r6, lsl #3]!
   200ec:	cmp	r4, #207	; 0xcf
   200f0:	bhi	2014c <gen_hostop6+0x13b4>
   200f4:	ldr	r1, [pc, #772]	; 20400 <gen_hostop6+0x1668>
   200f8:	add	r0, r6, #1
   200fc:	cmp	r6, #15
   20100:	add	r1, pc, r1
   20104:	str	r0, [r1]
   20108:	bge	20328 <gen_hostop6+0x1590>
   2010c:	mov	r1, #1024	; 0x400
   20110:	mov	r7, ip
   20114:	lsl	r4, r1, r0
   20118:	mov	r0, r4
   2011c:	bl	ed4 <malloc@plt>
   20120:	cmp	r0, #0
   20124:	str	r0, [r7, #12]
   20128:	beq	20328 <gen_hostop6+0x1590>
   2012c:	mov	r1, #0
   20130:	mov	r2, r4
   20134:	add	r7, r7, #8
   20138:	bl	f40 <memset@plt>
   2013c:	mov	ip, r7
   20140:	cmp	r4, #207	; 0xcf
   20144:	str	r4, [r7]
   20148:	bls	20328 <gen_hostop6+0x1590>
   2014c:	ldr	r0, [sp, #36]	; 0x24
   20150:	rev	r1, r0
   20154:	sub	r0, r4, #208	; 0xd0
   20158:	str	r0, [ip]
   2015c:	ldr	r2, [ip, #4]
   20160:	adds	r0, r2, r0
   20164:	mov	r2, #21
   20168:	str	r8, [r0, #4]
   2016c:	str	r2, [r0, #8]
   20170:	str	r1, [r0, #20]
   20174:	str	r0, [r0, #96]	; 0x60
   20178:	beq	201ac <gen_hostop6+0x1414>
   2017c:	ldr	r1, [r5]
   20180:	mov	r2, r0
   20184:	ldr	r3, [r2, #44]	; 0x2c
   20188:	add	r7, r2, #84	; 0x54
   2018c:	cmp	r3, #0
   20190:	mov	r3, #84	; 0x54
   20194:	movweq	r3, #60	; 0x3c
   20198:	addeq	r7, r2, #60	; 0x3c
   2019c:	ldr	r2, [r2, r3]
   201a0:	str	r1, [r7]
   201a4:	cmp	r2, #0
   201a8:	bne	20184 <gen_hostop6+0x13ec>
   201ac:	ldr	r1, [r0, #44]	; 0x2c
   201b0:	cmp	sl, #0
   201b4:	clz	r1, r1
   201b8:	lsr	r1, r1, #5
   201bc:	str	r1, [r0, #44]	; 0x2c
   201c0:	ldr	r1, [sl, #44]	; 0x2c
   201c4:	clz	r2, r1
   201c8:	lsr	r2, r2, #5
   201cc:	str	r2, [sl, #44]	; 0x2c
   201d0:	str	sl, [fp, #-32]	; 0xffffffe0
   201d4:	beq	20228 <gen_hostop6+0x1490>
   201d8:	mov	r3, #60	; 0x3c
   201dc:	cmp	r1, #0
   201e0:	mov	r2, sl
   201e4:	movweq	r3, #84	; 0x54
   201e8:	ldr	r1, [r2, r3]!
   201ec:	cmp	r1, #0
   201f0:	beq	2022c <gen_hostop6+0x1494>
   201f4:	ldr	r3, [r1, #44]	; 0x2c
   201f8:	add	r2, r1, #84	; 0x54
   201fc:	cmp	r3, #0
   20200:	mov	r3, #84	; 0x54
   20204:	movweq	r3, #60	; 0x3c
   20208:	addeq	r2, r1, #60	; 0x3c
   2020c:	ldr	r1, [r1, r3]
   20210:	cmp	r1, #0
   20214:	bne	201f4 <gen_hostop6+0x145c>
   20218:	b	2022c <gen_hostop6+0x1494>
   2021c:	.word	0x00028204
   20220:	.word	0x0002822c
   20224:	.word	0x00028290
   20228:	sub	r2, fp, #32
   2022c:	str	r0, [r2]
   20230:	ldr	r1, [sl, #44]	; 0x2c
   20234:	clz	r1, r1
   20238:	lsr	r1, r1, #5
   2023c:	str	r1, [sl, #44]	; 0x2c
   20240:	ldr	r0, [r0, #96]	; 0x60
   20244:	str	r0, [sl, #96]	; 0x60
   20248:	mov	r0, r9
   2024c:	bl	7320 <gen_linktype>
   20250:	mov	r4, r0
   20254:	cmp	r0, #0
   20258:	beq	2028c <gen_hostop6+0x14f4>
   2025c:	ldr	r0, [sl, #96]	; 0x60
   20260:	mov	r1, r4
   20264:	ldr	r2, [r1, #44]	; 0x2c
   20268:	add	r3, r1, #84	; 0x54
   2026c:	cmp	r2, #0
   20270:	mov	r2, #84	; 0x54
   20274:	movweq	r2, #60	; 0x3c
   20278:	addeq	r3, r1, #60	; 0x3c
   2027c:	ldr	r1, [r1, r2]
   20280:	str	r0, [r3]
   20284:	cmp	r1, #0
   20288:	bne	20264 <gen_hostop6+0x14cc>
   2028c:	ldr	r0, [r4, #44]	; 0x2c
   20290:	cmp	sl, #0
   20294:	clz	r0, r0
   20298:	lsr	r0, r0, #5
   2029c:	str	r0, [r4, #44]	; 0x2c
   202a0:	ldr	r0, [sl, #44]	; 0x2c
   202a4:	clz	r1, r0
   202a8:	lsr	r1, r1, #5
   202ac:	str	r1, [sl, #44]	; 0x2c
   202b0:	str	sl, [fp, #-32]	; 0xffffffe0
   202b4:	beq	202fc <gen_hostop6+0x1564>
   202b8:	mov	r2, #60	; 0x3c
   202bc:	cmp	r0, #0
   202c0:	mov	r1, sl
   202c4:	movweq	r2, #84	; 0x54
   202c8:	ldr	r0, [r1, r2]!
   202cc:	cmp	r0, #0
   202d0:	beq	20300 <gen_hostop6+0x1568>
   202d4:	ldr	r2, [r0, #44]	; 0x2c
   202d8:	add	r1, r0, #84	; 0x54
   202dc:	cmp	r2, #0
   202e0:	mov	r2, #84	; 0x54
   202e4:	movweq	r2, #60	; 0x3c
   202e8:	addeq	r1, r0, #60	; 0x3c
   202ec:	ldr	r0, [r0, r2]
   202f0:	cmp	r0, #0
   202f4:	bne	202d4 <gen_hostop6+0x153c>
   202f8:	b	20300 <gen_hostop6+0x1568>
   202fc:	sub	r1, fp, #32
   20300:	str	r4, [r1]
   20304:	ldr	r0, [sl, #44]	; 0x2c
   20308:	clz	r0, r0
   2030c:	lsr	r0, r0, #5
   20310:	str	r0, [sl, #44]	; 0x2c
   20314:	ldr	r0, [r4, #96]	; 0x60
   20318:	str	r0, [r5]
   2031c:	mov	r0, sl
   20320:	sub	sp, fp, #28
   20324:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20328:	ldr	r0, [pc, #212]	; 20404 <gen_hostop6+0x166c>
   2032c:	add	r0, pc, r0
   20330:	bl	2124 <sf_bpf_error>
   20334:	bl	fc4 <abort@plt>
   20338:	.word	0x0000ac85
   2033c:	.word	0x00028134
   20340:	.word	0x00028194
   20344:	.word	0x000280d0
   20348:	.word	0x000280f4
   2034c:	.word	0x000280e4
   20350:	.word	0x000280dc
   20354:	.word	0x000280d4
   20358:	.word	0x00028090
   2035c:	.word	0x00028060
   20360:	.word	0x00027f94
   20364:	.word	0x00027fc4
   20368:	.word	0x00027f00
   2036c:	.word	0x00027f50
   20370:	.word	0x00027e8c
   20374:	.word	0x00027e24
   20378:	.word	0x00027e78
   2037c:	.word	0x00027db4
   20380:	.word	0x00027dcc
   20384:	.word	0x00027d08
   20388:	.word	0x00027c60
   2038c:	.word	0x00027c4c
   20390:	.word	0x00027c44
   20394:	.word	0x00027c3c
   20398:	.word	0x00027bf4
   2039c:	.word	0x00027bbc
   203a0:	.word	0x00027ae8
   203a4:	.word	0x00027b14
   203a8:	.word	0x00027a40
   203ac:	.word	0x00027a90
   203b0:	.word	0x000279c0
   203b4:	.word	0x00027958
   203b8:	.word	0x000279e4
   203bc:	.word	0x00027914
   203c0:	.word	0x000278ec
   203c4:	.word	0x00027828
   203c8:	.word	0x00027790
   203cc:	.word	0x00027780
   203d0:	.word	0x00027778
   203d4:	.word	0x00027770
   203d8:	.word	0x00027724
   203dc:	.word	0x000276f0
   203e0:	.word	0x00027628
   203e4:	.word	0x0002765c
   203e8:	.word	0x00027590
   203ec:	.word	0x000275e4
   203f0:	.word	0x00027518
   203f4:	.word	0x00027498
   203f8:	.word	0x00027520
   203fc:	.word	0x00027450
   20400:	.word	0x000273fc
   20404:	.word	0x00009cd8

00020408 <gen_load_macplrel>:
   20408:	push	{r4, r5, r6, sl, fp, lr}
   2040c:	add	fp, sp, #16
   20410:	mov	r6, r1
   20414:	mov	r5, r0
   20418:	bl	143f0 <gen_off_macpl>
   2041c:	cmp	r0, #0
   20420:	beq	20454 <gen_load_macplrel+0x4c>
   20424:	mov	r4, r0
   20428:	orr	r0, r6, #64	; 0x40
   2042c:	bl	14090 <new_stmt>
   20430:	mov	r2, r4
   20434:	str	r5, [r0, #12]
   20438:	mov	r1, r2
   2043c:	ldr	r2, [r2, #16]
   20440:	cmp	r2, #0
   20444:	bne	20438 <gen_load_macplrel+0x30>
   20448:	str	r0, [r1, #16]
   2044c:	mov	r0, r4
   20450:	pop	{r4, r5, r6, sl, fp, pc}
   20454:	orr	r0, r6, #32
   20458:	bl	14090 <new_stmt>
   2045c:	mov	r4, r0
   20460:	ldr	r0, [pc, #16]	; 20478 <gen_load_macplrel+0x70>
   20464:	ldr	r0, [pc, r0]
   20468:	add	r0, r0, r5
   2046c:	str	r0, [r4, #12]
   20470:	mov	r0, r4
   20474:	pop	{r4, r5, r6, sl, fp, pc}
   20478:	.word	0x00026fd8

0002047c <pcap_nametoaddr>:
   2047c:	push	{fp, lr}
   20480:	mov	fp, sp
   20484:	bl	fac <gethostbyname@plt>
   20488:	cmp	r0, #0
   2048c:	moveq	r1, #0
   20490:	moveq	r0, r1
   20494:	popeq	{fp, pc}
   20498:	ldr	r1, [r0, #16]
   2049c:	ldr	r2, [r1]
   204a0:	cmp	r2, #0
   204a4:	beq	204c8 <pcap_nametoaddr+0x4c>
   204a8:	add	r1, r1, #4
   204ac:	ldr	r3, [r2]
   204b0:	rev	r3, r3
   204b4:	str	r3, [r2]
   204b8:	ldr	r2, [r1], #4
   204bc:	cmp	r2, #0
   204c0:	bne	204ac <pcap_nametoaddr+0x30>
   204c4:	ldr	r1, [r0, #16]
   204c8:	mov	r0, r1
   204cc:	pop	{fp, pc}

000204d0 <pcap_nametoaddrinfo>:
   204d0:	push	{r4, sl, fp, lr}
   204d4:	add	fp, sp, #8
   204d8:	sub	sp, sp, #40	; 0x28
   204dc:	add	r2, sp, #8
   204e0:	vmov.i32	q8, #0	; 0x00000000
   204e4:	mov	r4, #0
   204e8:	add	r1, r2, #16
   204ec:	mov	r3, r2
   204f0:	vst1.64	{d16-d17}, [r1]
   204f4:	mov	r1, #12
   204f8:	vst1.64	{d16-d17}, [r3], r1
   204fc:	mov	r1, #6
   20500:	str	r1, [r3]
   20504:	mov	r1, #1
   20508:	add	r3, sp, #4
   2050c:	str	r1, [sp, #16]
   20510:	mov	r1, #0
   20514:	bl	fa0 <getaddrinfo@plt>
   20518:	ldr	r1, [sp, #4]
   2051c:	cmp	r0, #0
   20520:	movne	r1, r4
   20524:	mov	r0, r1
   20528:	sub	sp, fp, #8
   2052c:	pop	{r4, sl, fp, pc}

00020530 <pcap_nametonetaddr>:
   20530:	push	{fp, lr}
   20534:	mov	fp, sp
   20538:	bl	e68 <getnetbyname@plt>
   2053c:	cmp	r0, #0
   20540:	ldrne	r0, [r0, #12]
   20544:	moveq	r0, #0
   20548:	pop	{fp, pc}

0002054c <pcap_nametoport>:
   2054c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   20550:	add	fp, sp, #24
   20554:	mov	r5, r1
   20558:	ldr	r1, [pc, #140]	; 205ec <pcap_nametoport+0xa0>
   2055c:	mov	r8, r2
   20560:	mov	r6, r0
   20564:	add	r1, pc, r1
   20568:	bl	f34 <getservbyname@plt>
   2056c:	cmp	r0, #0
   20570:	mvn	r4, #0
   20574:	mvn	r7, #0
   20578:	ldrhne	r0, [r0, #8]
   2057c:	ldr	r1, [pc, #108]	; 205f0 <pcap_nametoport+0xa4>
   20580:	rev16ne	r4, r0
   20584:	add	r1, pc, r1
   20588:	mov	r0, r6
   2058c:	bl	f34 <getservbyname@plt>
   20590:	cmp	r0, #0
   20594:	ldrhne	r0, [r0, #8]
   20598:	rev16ne	r7, r0
   2059c:	cmp	r4, #0
   205a0:	blt	205cc <pcap_nametoport+0x80>
   205a4:	cmp	r7, r4
   205a8:	mov	r1, #6
   205ac:	mov	r0, #6
   205b0:	str	r4, [r5]
   205b4:	mvneq	r1, #0
   205b8:	cmn	r7, #1
   205bc:	movle	r1, r0
   205c0:	mov	r0, #1
   205c4:	str	r1, [r8]
   205c8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   205cc:	cmp	r7, #0
   205d0:	movlt	r0, #0
   205d4:	poplt	{r4, r5, r6, r7, r8, sl, fp, pc}
   205d8:	mov	r0, #17
   205dc:	str	r7, [r5]
   205e0:	str	r0, [r8]
   205e4:	mov	r0, #1
   205e8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   205ec:	.word	0x000091e0
   205f0:	.word	0x000091f5

000205f4 <pcap_nametoportrange>:
   205f4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   205f8:	add	fp, sp, #28
   205fc:	sub	sp, sp, #12
   20600:	mov	r7, r1
   20604:	ldr	r1, [pc, #412]	; 207a8 <pcap_nametoportrange+0x1b4>
   20608:	mov	r8, r3
   2060c:	mov	r9, r2
   20610:	add	r2, sp, #8
   20614:	add	r3, sp, #4
   20618:	mov	r4, r0
   2061c:	add	r1, pc, r1
   20620:	bl	f70 <sscanf@plt>
   20624:	cmp	r0, #2
   20628:	bne	20644 <pcap_nametoportrange+0x50>
   2062c:	ldr	r0, [sp, #8]
   20630:	str	r0, [r7]
   20634:	ldr	r0, [sp, #4]
   20638:	str	r0, [r9]
   2063c:	mvn	r0, #0
   20640:	b	20784 <pcap_nametoportrange+0x190>
   20644:	mov	r0, r4
   20648:	bl	e8c <strdup@plt>
   2064c:	mov	r5, #0
   20650:	cmp	r0, #0
   20654:	beq	2078c <pcap_nametoportrange+0x198>
   20658:	mov	r1, #45	; 0x2d
   2065c:	mov	r6, r0
   20660:	bl	f10 <strchr@plt>
   20664:	cmp	r0, #0
   20668:	beq	206e0 <pcap_nametoportrange+0xec>
   2066c:	mov	r4, r0
   20670:	mov	r0, #0
   20674:	strb	r0, [r4]
   20678:	mov	r0, r6
   2067c:	ldr	r1, [pc, #296]	; 207ac <pcap_nametoportrange+0x1b8>
   20680:	add	r1, pc, r1
   20684:	bl	f34 <getservbyname@plt>
   20688:	cmp	r0, #0
   2068c:	mvn	r5, #0
   20690:	mvn	sl, #0
   20694:	ldrhne	r0, [r0, #8]
   20698:	ldr	r1, [pc, #272]	; 207b0 <pcap_nametoportrange+0x1bc>
   2069c:	rev16ne	r5, r0
   206a0:	add	r1, pc, r1
   206a4:	mov	r0, r6
   206a8:	bl	f34 <getservbyname@plt>
   206ac:	cmp	r0, #0
   206b0:	ldrhne	r0, [r0, #8]
   206b4:	rev16ne	sl, r0
   206b8:	cmp	r5, #0
   206bc:	blt	206ec <pcap_nametoportrange+0xf8>
   206c0:	str	r5, [r7]
   206c4:	cmp	sl, r5
   206c8:	mov	r7, #6
   206cc:	mov	r0, #6
   206d0:	mvneq	r7, #0
   206d4:	cmn	sl, #1
   206d8:	movle	r7, r0
   206dc:	b	206fc <pcap_nametoportrange+0x108>
   206e0:	mov	r0, r6
   206e4:	bl	e5c <free@plt>
   206e8:	b	2078c <pcap_nametoportrange+0x198>
   206ec:	cmp	sl, #0
   206f0:	blt	20798 <pcap_nametoportrange+0x1a4>
   206f4:	str	sl, [r7]
   206f8:	mov	r7, #17
   206fc:	str	r7, [r8]
   20700:	add	r4, r4, #1
   20704:	ldr	r1, [pc, #168]	; 207b4 <pcap_nametoportrange+0x1c0>
   20708:	mov	r0, r4
   2070c:	add	r1, pc, r1
   20710:	bl	f34 <getservbyname@plt>
   20714:	cmp	r0, #0
   20718:	mvn	r5, #0
   2071c:	mvn	sl, #0
   20720:	ldrhne	r0, [r0, #8]
   20724:	ldr	r1, [pc, #140]	; 207b8 <pcap_nametoportrange+0x1c4>
   20728:	rev16ne	r5, r0
   2072c:	add	r1, pc, r1
   20730:	mov	r0, r4
   20734:	bl	f34 <getservbyname@plt>
   20738:	cmp	r0, #0
   2073c:	ldrhne	r0, [r0, #8]
   20740:	rev16ne	sl, r0
   20744:	cmp	r5, #0
   20748:	blt	2076c <pcap_nametoportrange+0x178>
   2074c:	cmp	sl, r5
   20750:	mov	r0, #6
   20754:	mov	r1, #6
   20758:	str	r5, [r9]
   2075c:	mvneq	r0, #0
   20760:	cmn	sl, #1
   20764:	movle	r0, r1
   20768:	b	2077c <pcap_nametoportrange+0x188>
   2076c:	cmp	sl, #0
   20770:	blt	20798 <pcap_nametoportrange+0x1a4>
   20774:	mov	r0, #17
   20778:	str	sl, [r9]
   2077c:	cmp	r0, r7
   20780:	mvnne	r0, #0
   20784:	mov	r5, #1
   20788:	str	r0, [r8]
   2078c:	mov	r0, r5
   20790:	sub	sp, fp, #28
   20794:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   20798:	mov	r0, r6
   2079c:	bl	e5c <free@plt>
   207a0:	mov	r5, #0
   207a4:	b	2078c <pcap_nametoportrange+0x198>
   207a8:	.word	0x0000a48c
   207ac:	.word	0x000090c4
   207b0:	.word	0x000090d9
   207b4:	.word	0x00009038
   207b8:	.word	0x0000904d

000207bc <pcap_nametoproto>:
   207bc:	push	{fp, lr}
   207c0:	mov	fp, sp
   207c4:	bl	e38 <getprotobyname@plt>
   207c8:	cmp	r0, #0
   207cc:	ldrne	r0, [r0, #8]
   207d0:	mvneq	r0, #0
   207d4:	pop	{fp, pc}

000207d8 <pcap_nametoeproto>:
   207d8:	push	{r4, r5, r6, sl, fp, lr}
   207dc:	add	fp, sp, #16
   207e0:	mov	r5, r0
   207e4:	ldr	r0, [pc, #80]	; 2083c <pcap_nametoeproto+0x64>
   207e8:	mvn	r4, #0
   207ec:	ldr	r0, [pc, r0]
   207f0:	cmp	r0, #0
   207f4:	beq	20828 <pcap_nametoeproto+0x50>
   207f8:	ldr	r1, [pc, #64]	; 20840 <pcap_nametoeproto+0x68>
   207fc:	add	r1, pc, r1
   20800:	add	r6, r1, #4
   20804:	mov	r1, r5
   20808:	bl	e08 <strcmp@plt>
   2080c:	cmp	r0, #0
   20810:	beq	20830 <pcap_nametoeproto+0x58>
   20814:	ldr	r0, [r6, #4]
   20818:	add	r1, r6, #8
   2081c:	mov	r6, r1
   20820:	cmp	r0, #0
   20824:	bne	20804 <pcap_nametoeproto+0x2c>
   20828:	mov	r0, r4
   2082c:	pop	{r4, r5, r6, sl, fp, pc}
   20830:	ldrh	r4, [r6]
   20834:	mov	r0, r4
   20838:	pop	{r4, r5, r6, sl, fp, pc}
   2083c:	.word	0x000268f0
   20840:	.word	0x000268e0

00020844 <pcap_nametollc>:
   20844:	push	{r4, r5, fp, lr}
   20848:	add	fp, sp, #8
   2084c:	mov	r4, r0
   20850:	ldr	r0, [pc, #156]	; 208f4 <pcap_nametollc+0xb0>
   20854:	mov	r1, r4
   20858:	add	r0, pc, r0
   2085c:	bl	e08 <strcmp@plt>
   20860:	cmp	r0, #0
   20864:	beq	208cc <pcap_nametollc+0x88>
   20868:	ldr	r0, [pc, #140]	; 208fc <pcap_nametollc+0xb8>
   2086c:	mov	r1, r4
   20870:	add	r0, pc, r0
   20874:	bl	e08 <strcmp@plt>
   20878:	ldr	r5, [pc, #128]	; 20900 <pcap_nametollc+0xbc>
   2087c:	cmp	r0, #0
   20880:	add	r5, pc, r5
   20884:	beq	208dc <pcap_nametollc+0x98>
   20888:	ldr	r0, [pc, #116]	; 20904 <pcap_nametollc+0xc0>
   2088c:	mov	r1, r4
   20890:	add	r0, pc, r0
   20894:	bl	e08 <strcmp@plt>
   20898:	cmp	r0, #0
   2089c:	beq	208e8 <pcap_nametollc+0xa4>
   208a0:	ldr	r0, [pc, #96]	; 20908 <pcap_nametollc+0xc4>
   208a4:	mov	r1, r4
   208a8:	add	r0, pc, r0
   208ac:	bl	e08 <strcmp@plt>
   208b0:	mov	r1, r0
   208b4:	mvn	r0, #0
   208b8:	cmp	r1, #0
   208bc:	popne	{r4, r5, fp, pc}
   208c0:	add	r0, r5, #24
   208c4:	ldrh	r0, [r0, #4]
   208c8:	pop	{r4, r5, fp, pc}
   208cc:	ldr	r0, [pc, #36]	; 208f8 <pcap_nametollc+0xb4>
   208d0:	add	r0, pc, r0
   208d4:	ldrh	r0, [r0, #4]
   208d8:	pop	{r4, r5, fp, pc}
   208dc:	add	r0, r5, #8
   208e0:	ldrh	r0, [r0, #4]
   208e4:	pop	{r4, r5, fp, pc}
   208e8:	add	r0, r5, #16
   208ec:	ldrh	r0, [r0, #4]
   208f0:	pop	{r4, r5, fp, pc}
   208f4:	.word	0x0000a334
   208f8:	.word	0x00026460
   208fc:	.word	0x0000a320
   20900:	.word	0x000264b0
   20904:	.word	0x0000a304
   20908:	.word	0x0000a2f0

0002090c <__pcap_atoin>:
   2090c:	push	{fp, lr}
   20910:	mov	fp, sp
   20914:	mov	lr, #0
   20918:	mov	ip, #0
   2091c:	str	lr, [r1]
   20920:	b	20944 <__pcap_atoin+0x38>
   20924:	uxtb	r2, r2
   20928:	add	ip, ip, #8
   2092c:	orr	lr, r2, lr, lsl #8
   20930:	str	lr, [r1]
   20934:	ldrb	r2, [r0, #-1]
   20938:	cmp	r2, #0
   2093c:	moveq	r0, ip
   20940:	popeq	{fp, pc}
   20944:	add	r0, r0, #1
   20948:	mov	r2, #0
   2094c:	b	20960 <__pcap_atoin+0x54>
   20950:	add	r2, r2, r2, lsl #2
   20954:	add	r0, r0, #1
   20958:	add	r2, r3, r2, lsl #1
   2095c:	sub	r2, r2, #48	; 0x30
   20960:	ldrb	r3, [r0, #-1]
   20964:	cmp	r3, #0
   20968:	cmpne	r3, #46	; 0x2e
   2096c:	beq	20924 <__pcap_atoin+0x18>
   20970:	b	20950 <__pcap_atoin+0x44>

00020974 <__pcap_atodn>:
   20974:	push	{r4, r5, fp, lr}
   20978:	add	fp, sp, #8
   2097c:	sub	sp, sp, #8
   20980:	mov	r4, r1
   20984:	ldr	r1, [pc, #72]	; 209d4 <__pcap_atodn+0x60>
   20988:	mov	r2, sp
   2098c:	add	r3, sp, #4
   20990:	mov	r5, r0
   20994:	add	r1, pc, r1
   20998:	bl	f70 <sscanf@plt>
   2099c:	cmp	r0, #2
   209a0:	ldreq	r0, [sp]
   209a4:	ldreq	r1, [sp, #4]
   209a8:	andeq	r0, r0, #63	; 0x3f
   209ac:	bfceq	r1, #10, #22
   209b0:	orreq	r0, r1, r0, lsl #10
   209b4:	streq	r0, [r4]
   209b8:	moveq	r0, #32
   209bc:	subeq	sp, fp, #8
   209c0:	popeq	{r4, r5, fp, pc}
   209c4:	ldr	r0, [pc, #12]	; 209d8 <__pcap_atodn+0x64>
   209c8:	mov	r1, r5
   209cc:	add	r0, pc, r0
   209d0:	bl	2124 <sf_bpf_error>
   209d4:	.word	0x0000a18b
   209d8:	.word	0x0000a159

000209dc <pcap_ether_aton>:
   209dc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   209e0:	add	fp, sp, #24
   209e4:	mov	r4, r0
   209e8:	mov	r0, #6
   209ec:	bl	ed4 <malloc@plt>
   209f0:	mov	r8, r0
   209f4:	cmp	r0, #0
   209f8:	beq	20ab0 <pcap_ether_aton+0xd4>
   209fc:	mov	r9, #1
   20a00:	movw	r7, #8195	; 0x2003
   20a04:	mov	r5, r8
   20a08:	b	20a14 <pcap_ether_aton+0x38>
   20a0c:	mov	r4, r0
   20a10:	strb	r3, [r5], #1
   20a14:	ldrb	r6, [r4]
   20a18:	sub	r0, r6, #45	; 0x2d
   20a1c:	cmp	r0, #13
   20a20:	bhi	20a34 <pcap_ether_aton+0x58>
   20a24:	tst	r7, r9, lsl r0
   20a28:	beq	20a34 <pcap_ether_aton+0x58>
   20a2c:	ldrb	r6, [r4, #1]!
   20a30:	b	20a3c <pcap_ether_aton+0x60>
   20a34:	cmp	r6, #0
   20a38:	beq	20ab0 <pcap_ether_aton+0xd4>
   20a3c:	bl	eec <__ctype_b_loc@plt>
   20a40:	ldr	r2, [r0]
   20a44:	mvn	r1, #47	; 0x2f
   20a48:	add	r0, r2, r6, lsl #1
   20a4c:	ldrh	r3, [r0]
   20a50:	add	r0, r4, #1
   20a54:	tst	r3, #2048	; 0x800
   20a58:	bne	20a68 <pcap_ether_aton+0x8c>
   20a5c:	tst	r3, #512	; 0x200
   20a60:	mvn	r1, #86	; 0x56
   20a64:	mvneq	r1, #54	; 0x36
   20a68:	add	r3, r1, r6
   20a6c:	ldrb	r1, [r0]
   20a70:	add	r2, r2, r1, lsl #1
   20a74:	ldrh	r2, [r2]
   20a78:	tst	r2, #4096	; 0x1000
   20a7c:	beq	20a0c <pcap_ether_aton+0x30>
   20a80:	lsl	r0, r3, #4
   20a84:	mvn	r3, #47	; 0x2f
   20a88:	tst	r2, #2048	; 0x800
   20a8c:	bne	20a9c <pcap_ether_aton+0xc0>
   20a90:	tst	r2, #512	; 0x200
   20a94:	mvn	r3, #86	; 0x56
   20a98:	mvneq	r3, #54	; 0x36
   20a9c:	add	r1, r3, r1
   20aa0:	add	r4, r4, #2
   20aa4:	orr	r3, r1, r0
   20aa8:	strb	r3, [r5], #1
   20aac:	b	20a14 <pcap_ether_aton+0x38>
   20ab0:	mov	r0, r8
   20ab4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00020ab8 <pcap_ether_hostton>:
   20ab8:	push	{r4, r5, r6, sl, fp, lr}
   20abc:	add	fp, sp, #16
   20ac0:	mov	r4, r0
   20ac4:	ldr	r0, [pc, #196]	; 20b90 <pcap_ether_hostton+0xd8>
   20ac8:	ldr	r0, [pc, r0]
   20acc:	cmp	r0, #0
   20ad0:	beq	20aec <pcap_ether_hostton+0x34>
   20ad4:	ldr	r0, [pc, #204]	; 20ba8 <pcap_ether_hostton+0xf0>
   20ad8:	ldr	r0, [pc, r0]
   20adc:	cmp	r0, #0
   20ae0:	beq	20b84 <pcap_ether_hostton+0xcc>
   20ae4:	bl	e98 <rewind@plt>
   20ae8:	b	20b2c <pcap_ether_hostton+0x74>
   20aec:	ldr	r0, [pc, #160]	; 20b94 <pcap_ether_hostton+0xdc>
   20af0:	ldr	r1, [pc, #160]	; 20b98 <pcap_ether_hostton+0xe0>
   20af4:	add	r0, pc, r0
   20af8:	add	r1, pc, r1
   20afc:	bl	e2c <fopen@plt>
   20b00:	ldr	r1, [pc, #148]	; 20b9c <pcap_ether_hostton+0xe4>
   20b04:	cmp	r0, #0
   20b08:	add	r1, pc, r1
   20b0c:	str	r0, [r1]
   20b10:	ldr	r1, [pc, #136]	; 20ba0 <pcap_ether_hostton+0xe8>
   20b14:	ldr	r1, [pc, r1]
   20b18:	ldr	r2, [pc, #132]	; 20ba4 <pcap_ether_hostton+0xec>
   20b1c:	add	r1, r1, #1
   20b20:	add	r2, pc, r2
   20b24:	str	r1, [r2]
   20b28:	beq	20b84 <pcap_ether_hostton+0xcc>
   20b2c:	mov	r5, #0
   20b30:	ldr	r0, [pc, #116]	; 20bac <pcap_ether_hostton+0xf4>
   20b34:	ldr	r0, [pc, r0]
   20b38:	bl	24e90 <pcap_next_etherent>
   20b3c:	cmp	r0, #0
   20b40:	beq	20b7c <pcap_ether_hostton+0xc4>
   20b44:	mov	r6, r0
   20b48:	add	r0, r0, #6
   20b4c:	mov	r1, r4
   20b50:	bl	e08 <strcmp@plt>
   20b54:	cmp	r0, #0
   20b58:	bne	20b30 <pcap_ether_hostton+0x78>
   20b5c:	mov	r0, #6
   20b60:	bl	ed4 <malloc@plt>
   20b64:	cmp	r0, #0
   20b68:	ldrhne	r1, [r6, #4]
   20b6c:	movne	r5, r0
   20b70:	strhne	r1, [r0, #4]
   20b74:	ldrne	r1, [r6]
   20b78:	strne	r1, [r0]
   20b7c:	mov	r0, r5
   20b80:	pop	{r4, r5, r6, sl, fp, pc}
   20b84:	mov	r5, #0
   20b88:	mov	r0, r5
   20b8c:	pop	{r4, r5, r6, sl, fp, pc}
   20b90:	.word	0x00026a8c
   20b94:	.word	0x0000a04f
   20b98:	.word	0x0000b4b4
   20b9c:	.word	0x00026a48
   20ba0:	.word	0x00026a40
   20ba4:	.word	0x00026a34
   20ba8:	.word	0x00026a78
   20bac:	.word	0x00026a1c

00020bb0 <__pcap_nametodnaddr>:
   20bb0:	push	{fp, lr}
   20bb4:	mov	fp, sp
   20bb8:	mov	r1, r0
   20bbc:	ldr	r0, [pc, #4]	; 20bc8 <__pcap_nametodnaddr+0x18>
   20bc0:	add	r0, pc, r0
   20bc4:	bl	2124 <sf_bpf_error>
   20bc8:	.word	0x00009f8f

00020bcc <sf_bpf_optimize>:
   20bcc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   20bd0:	add	fp, sp, #28
   20bd4:	sub	sp, sp, #20
   20bd8:	str	r0, [sp]
   20bdc:	ldr	r5, [r0]
   20be0:	ldr	r4, [pc, #1704]	; 21290 <sf_bpf_optimize+0x6c4>
   20be4:	ldr	r4, [pc, r4]
   20be8:	ldr	r7, [pc, #1700]	; 21294 <sf_bpf_optimize+0x6c8>
   20bec:	add	r0, r4, #1
   20bf0:	add	r7, pc, r7
   20bf4:	str	r0, [r7]
   20bf8:	mov	r0, r5
   20bfc:	bl	24d74 <count_blocks>
   20c00:	mov	r1, #4
   20c04:	mov	r6, r0
   20c08:	bl	dfc <calloc@plt>
   20c0c:	ldr	r1, [pc, #1668]	; 21298 <sf_bpf_optimize+0x6cc>
   20c10:	cmp	r0, #0
   20c14:	add	r1, pc, r1
   20c18:	str	r0, [r1]
   20c1c:	beq	20f40 <sf_bpf_optimize+0x374>
   20c20:	ldr	r0, [pc, #1652]	; 2129c <sf_bpf_optimize+0x6d0>
   20c24:	mov	r1, #0
   20c28:	add	r0, pc, r0
   20c2c:	str	r1, [r0]
   20c30:	add	r0, r4, #2
   20c34:	str	r0, [r7]
   20c38:	mov	r0, r5
   20c3c:	bl	24dcc <number_blks_r>
   20c40:	ldr	r8, [pc, #1624]	; 212a0 <sf_bpf_optimize+0x6d4>
   20c44:	ldr	r8, [pc, r8]
   20c48:	ldr	r1, [pc, #1620]	; 212a4 <sf_bpf_optimize+0x6d8>
   20c4c:	lsl	r0, r8, #1
   20c50:	add	r1, pc, r1
   20c54:	str	r0, [r1]
   20c58:	mov	r1, #4
   20c5c:	bl	dfc <calloc@plt>
   20c60:	mov	r9, r0
   20c64:	ldr	r0, [pc, #1596]	; 212a8 <sf_bpf_optimize+0x6dc>
   20c68:	cmp	r9, #0
   20c6c:	add	r0, pc, r0
   20c70:	str	r9, [r0]
   20c74:	beq	20f40 <sf_bpf_optimize+0x374>
   20c78:	mov	r0, r8
   20c7c:	mov	r1, #4
   20c80:	str	r5, [sp, #12]
   20c84:	bl	dfc <calloc@plt>
   20c88:	ldr	r1, [pc, #1564]	; 212ac <sf_bpf_optimize+0x6e0>
   20c8c:	cmp	r0, #0
   20c90:	add	r1, pc, r1
   20c94:	str	r0, [r1]
   20c98:	beq	20f40 <sf_bpf_optimize+0x374>
   20c9c:	mov	r0, #1
   20ca0:	add	r4, r0, r8, lsr #5
   20ca4:	ldr	r0, [pc, #1540]	; 212b0 <sf_bpf_optimize+0x6e4>
   20ca8:	add	r0, pc, r0
   20cac:	str	r4, [r0]
   20cb0:	ubfx	r7, r8, #4, #27
   20cb4:	ldr	r0, [pc, #1528]	; 212b4 <sf_bpf_optimize+0x6e8>
   20cb8:	add	r5, r7, #1
   20cbc:	add	r0, pc, r0
   20cc0:	str	r5, [r0]
   20cc4:	add	r0, r5, r4
   20cc8:	mul	r0, r8, r0
   20ccc:	lsl	r0, r0, #3
   20cd0:	bl	ed4 <malloc@plt>
   20cd4:	mov	ip, r0
   20cd8:	ldr	r0, [pc, #1496]	; 212b8 <sf_bpf_optimize+0x6ec>
   20cdc:	cmp	ip, #0
   20ce0:	add	r0, pc, r0
   20ce4:	str	ip, [r0]
   20ce8:	beq	20f40 <sf_bpf_optimize+0x374>
   20cec:	ldr	r0, [pc, #1480]	; 212bc <sf_bpf_optimize+0x6f0>
   20cf0:	cmp	r6, #1
   20cf4:	add	r0, pc, r0
   20cf8:	str	ip, [r0]
   20cfc:	blt	20ed4 <sf_bpf_optimize+0x308>
   20d00:	lsr	r0, r8, #5
   20d04:	mov	r1, #4
   20d08:	sub	r2, r6, #1
   20d0c:	add	r1, r1, r0, lsl #2
   20d10:	lsl	r0, r0, #2
   20d14:	mul	r2, r1, r2
   20d18:	mul	sl, r1, r6
   20d1c:	str	r2, [sp, #16]
   20d20:	str	r0, [sp, #8]
   20d24:	mov	r2, #0
   20d28:	mov	r0, ip
   20d2c:	ldr	r3, [pc, #1420]	; 212c0 <sf_bpf_optimize+0x6f4>
   20d30:	ldr	r3, [pc, r3]
   20d34:	ldr	lr, [r3, r2, lsl #2]
   20d38:	add	r2, r2, #1
   20d3c:	cmp	r6, r2
   20d40:	str	r0, [lr, #104]	; 0x68
   20d44:	add	r0, r0, r1
   20d48:	bne	20d34 <sf_bpf_optimize+0x168>
   20d4c:	ldr	r0, [pc, #1392]	; 212c4 <sf_bpf_optimize+0x6f8>
   20d50:	add	r2, ip, sl
   20d54:	add	sl, r2, r4, lsl #2
   20d58:	mov	r4, #0
   20d5c:	add	r0, pc, r0
   20d60:	str	r2, [r0]
   20d64:	ldr	r0, [r3, r4, lsl #2]
   20d68:	add	r4, r4, #1
   20d6c:	cmp	r6, r4
   20d70:	str	r2, [r0, #108]	; 0x6c
   20d74:	add	r2, r2, r1
   20d78:	bne	20d64 <sf_bpf_optimize+0x198>
   20d7c:	ldr	r0, [sp, #16]
   20d80:	ldr	r2, [pc, #1344]	; 212c8 <sf_bpf_optimize+0x6fc>
   20d84:	cmp	r6, #1
   20d88:	add	r0, sl, r0
   20d8c:	add	r2, pc, r2
   20d90:	str	r0, [r2]
   20d94:	add	r2, r0, r5, lsl #2
   20d98:	ldr	r5, [r3]
   20d9c:	mov	r3, #0
   20da0:	str	r2, [r5, #80]	; 0x50
   20da4:	str	r0, [r5, #56]	; 0x38
   20da8:	mov	r0, r5
   20dac:	str	r3, [r0, #48]!	; 0x30
   20db0:	str	r0, [r9]
   20db4:	mov	r0, r5
   20db8:	str	r8, [r0, #72]!	; 0x48
   20dbc:	ldr	r2, [pc, #1288]	; 212cc <sf_bpf_optimize+0x700>
   20dc0:	ldr	r2, [pc, r2]
   20dc4:	str	r0, [r2, r8, lsl #2]
   20dc8:	str	r5, [r5, #88]	; 0x58
   20dcc:	str	r5, [r5, #64]	; 0x40
   20dd0:	beq	20e78 <sf_bpf_optimize+0x2ac>
   20dd4:	ldr	r4, [sp, #8]
   20dd8:	mvn	r2, #0
   20ddc:	add	r2, r2, r6, lsl #1
   20de0:	add	r0, r4, r7, lsl #3
   20de4:	mla	r0, r1, r2, r0
   20de8:	add	r0, ip, r0
   20dec:	add	lr, r0, #12
   20df0:	add	r0, r7, r7, lsl #1
   20df4:	add	r0, r4, r0, lsl #2
   20df8:	mov	r4, #1
   20dfc:	mla	r0, r1, r2, r0
   20e00:	mov	r1, #8
   20e04:	lsl	r2, r8, #2
   20e08:	add	r0, ip, r0
   20e0c:	add	r1, r1, r7, lsl #3
   20e10:	add	ip, r0, #16
   20e14:	ldr	r7, [pc, #1204]	; 212d0 <sf_bpf_optimize+0x704>
   20e18:	add	r5, ip, r3
   20e1c:	ldr	r7, [pc, r7]
   20e20:	ldr	r7, [r7, r4, lsl #2]
   20e24:	ldr	r0, [pc, #1192]	; 212d4 <sf_bpf_optimize+0x708>
   20e28:	ldr	r0, [pc, r0]
   20e2c:	str	r5, [r7, #80]	; 0x50
   20e30:	add	r5, lr, r3
   20e34:	add	r3, r3, r1
   20e38:	str	r5, [r7, #56]	; 0x38
   20e3c:	mov	r5, r7
   20e40:	str	r4, [r5, #48]!	; 0x30
   20e44:	str	r5, [r0, r4, lsl #2]
   20e48:	add	r0, r8, r4
   20e4c:	mov	r5, r7
   20e50:	str	r0, [r5, #72]!	; 0x48
   20e54:	ldr	r0, [pc, #1148]	; 212d8 <sf_bpf_optimize+0x70c>
   20e58:	ldr	r0, [pc, r0]
   20e5c:	add	r0, r0, r2
   20e60:	str	r5, [r0, r4, lsl #2]
   20e64:	add	r4, r4, #1
   20e68:	str	r7, [r7, #88]	; 0x58
   20e6c:	str	r7, [r7, #64]	; 0x40
   20e70:	cmp	r6, r4
   20e74:	bne	20e14 <sf_bpf_optimize+0x248>
   20e78:	ldr	r1, [pc, #1116]	; 212dc <sf_bpf_optimize+0x710>
   20e7c:	mov	r0, #0
   20e80:	mov	r2, #0
   20e84:	ldr	r1, [pc, r1]
   20e88:	ldr	r3, [r1, r2, lsl #2]
   20e8c:	mov	r7, #0
   20e90:	ldr	r3, [r3, #4]
   20e94:	cmp	r3, #0
   20e98:	beq	20eb8 <sf_bpf_optimize+0x2ec>
   20e9c:	mov	r7, #0
   20ea0:	ldr	r5, [r3]
   20ea4:	ldr	r3, [r3, #16]
   20ea8:	cmn	r5, #1
   20eac:	addne	r7, r7, #1
   20eb0:	cmp	r3, #0
   20eb4:	bne	20ea0 <sf_bpf_optimize+0x2d4>
   20eb8:	add	r0, r0, r7
   20ebc:	add	r2, r2, #1
   20ec0:	add	r0, r0, #1
   20ec4:	cmp	r2, r6
   20ec8:	bne	20e88 <sf_bpf_optimize+0x2bc>
   20ecc:	add	r4, r0, r0, lsl #1
   20ed0:	b	20ef0 <sf_bpf_optimize+0x324>
   20ed4:	ldr	r0, [pc, #1092]	; 21320 <sf_bpf_optimize+0x754>
   20ed8:	mov	r4, #0
   20edc:	add	r0, pc, r0
   20ee0:	str	ip, [r0]
   20ee4:	ldr	r0, [pc, #1080]	; 21324 <sf_bpf_optimize+0x758>
   20ee8:	add	r0, pc, r0
   20eec:	str	ip, [r0]
   20ef0:	ldr	r0, [pc, #1000]	; 212e0 <sf_bpf_optimize+0x714>
   20ef4:	mov	r1, #8
   20ef8:	add	r0, pc, r0
   20efc:	str	r4, [r0]
   20f00:	mov	r0, r4
   20f04:	bl	dfc <calloc@plt>
   20f08:	mov	r6, r0
   20f0c:	ldr	r0, [pc, #976]	; 212e4 <sf_bpf_optimize+0x718>
   20f10:	mov	r1, #20
   20f14:	add	r0, pc, r0
   20f18:	str	r6, [r0]
   20f1c:	mov	r0, r4
   20f20:	bl	dfc <calloc@plt>
   20f24:	ldr	r1, [pc, #956]	; 212e8 <sf_bpf_optimize+0x71c>
   20f28:	ldr	r4, [sp, #12]
   20f2c:	cmp	r6, #0
   20f30:	cmpne	r0, #0
   20f34:	add	r1, pc, r1
   20f38:	str	r0, [r1]
   20f3c:	bne	20f4c <sf_bpf_optimize+0x380>
   20f40:	ldr	r0, [pc, #980]	; 2131c <sf_bpf_optimize+0x750>
   20f44:	add	r0, pc, r0
   20f48:	bl	2124 <sf_bpf_error>
   20f4c:	mov	r0, r4
   20f50:	mov	r1, #0
   20f54:	mov	r5, #0
   20f58:	bl	21328 <opt_loop>
   20f5c:	mov	r0, r4
   20f60:	mov	r1, #1
   20f64:	bl	21328 <opt_loop>
   20f68:	ldr	r6, [pc, #892]	; 212ec <sf_bpf_optimize+0x720>
   20f6c:	ldr	r6, [pc, r6]
   20f70:	sub	r0, r6, #1
   20f74:	str	r0, [sp, #8]
   20f78:	sub	r0, r6, #2
   20f7c:	str	r0, [sp, #4]
   20f80:	cmp	r6, #1
   20f84:	blt	20fa4 <sf_bpf_optimize+0x3d8>
   20f88:	ldr	r0, [pc, #864]	; 212f0 <sf_bpf_optimize+0x724>
   20f8c:	mov	r1, r6
   20f90:	ldr	r0, [pc, r0]
   20f94:	ldr	r2, [r0], #4
   20f98:	subs	r1, r1, #1
   20f9c:	str	r5, [r2, #100]	; 0x64
   20fa0:	bne	20f94 <sf_bpf_optimize+0x3c8>
   20fa4:	ldr	r0, [pc, #840]	; 212f4 <sf_bpf_optimize+0x728>
   20fa8:	ldr	r0, [pc, r0]
   20fac:	add	r9, r0, #1
   20fb0:	ldr	r0, [pc, #832]	; 212f8 <sf_bpf_optimize+0x72c>
   20fb4:	add	r0, pc, r0
   20fb8:	str	r9, [r0]
   20fbc:	mov	r0, r4
   20fc0:	bl	24d28 <make_marks>
   20fc4:	cmp	r6, #2
   20fc8:	blt	21150 <sf_bpf_optimize+0x584>
   20fcc:	ldr	r0, [pc, #808]	; 212fc <sf_bpf_optimize+0x730>
   20fd0:	ldr	r0, [pc, r0]
   20fd4:	ldmib	sp, {r1, lr}
   20fd8:	b	20ff0 <sf_bpf_optimize+0x424>
   20fdc:	ldr	r1, [r5, #100]	; 0x64
   20fe0:	cmp	r1, #0
   20fe4:	moveq	r1, r5
   20fe8:	str	r1, [r3, #100]	; 0x64
   20fec:	b	21144 <sf_bpf_optimize+0x578>
   20ff0:	mov	r2, lr
   20ff4:	mov	lr, r1
   20ff8:	cmp	r2, r6
   20ffc:	bge	21144 <sf_bpf_optimize+0x578>
   21000:	ldr	r3, [r0, lr, lsl #2]
   21004:	ldr	r1, [r3, #24]
   21008:	cmp	r1, r9
   2100c:	bne	21144 <sf_bpf_optimize+0x578>
   21010:	add	r1, r3, #4
   21014:	str	r1, [sp, #16]
   21018:	ldr	r5, [r0, r2, lsl #2]
   2101c:	ldr	r1, [r5, #24]
   21020:	cmp	r1, r9
   21024:	bne	21138 <sf_bpf_optimize+0x56c>
   21028:	ldr	r1, [r5, #8]
   2102c:	ldr	r4, [r3, #8]
   21030:	cmp	r4, r1
   21034:	bne	21138 <sf_bpf_optimize+0x56c>
   21038:	ldr	r1, [r5, #20]
   2103c:	ldr	r4, [r3, #20]
   21040:	cmp	r4, r1
   21044:	bne	21138 <sf_bpf_optimize+0x56c>
   21048:	ldr	r1, [r5, #60]	; 0x3c
   2104c:	ldr	r4, [r3, #60]	; 0x3c
   21050:	cmp	r4, r1
   21054:	bne	21138 <sf_bpf_optimize+0x56c>
   21058:	ldr	r1, [r5, #84]	; 0x54
   2105c:	ldr	r4, [r3, #84]	; 0x54
   21060:	cmp	r4, r1
   21064:	bne	21138 <sf_bpf_optimize+0x56c>
   21068:	ldr	r1, [sp, #16]
   2106c:	add	r4, r5, #4
   21070:	b	2107c <sf_bpf_optimize+0x4b0>
   21074:	add	r4, r4, #16
   21078:	add	r1, r8, #16
   2107c:	ldr	r1, [r1]
   21080:	ldr	r4, [r4]
   21084:	mov	ip, #1
   21088:	mov	r8, #0
   2108c:	mov	sl, #1
   21090:	cmp	r1, #0
   21094:	beq	210dc <sf_bpf_optimize+0x510>
   21098:	ldr	r7, [r1]
   2109c:	cmn	r7, #1
   210a0:	bne	210c4 <sf_bpf_optimize+0x4f8>
   210a4:	ldr	r1, [r1, #16]
   210a8:	cmp	r1, #0
   210ac:	bne	21098 <sf_bpf_optimize+0x4cc>
   210b0:	mov	r8, #0
   210b4:	mov	sl, #1
   210b8:	cmp	r4, #0
   210bc:	bne	210e4 <sf_bpf_optimize+0x518>
   210c0:	b	21124 <sf_bpf_optimize+0x558>
   210c4:	mov	sl, #0
   210c8:	mov	r8, r1
   210cc:	cmp	r4, #0
   210d0:	bne	210e4 <sf_bpf_optimize+0x518>
   210d4:	b	21124 <sf_bpf_optimize+0x558>
   210d8:	ldr	r4, [r4, #16]
   210dc:	cmp	r4, #0
   210e0:	beq	21124 <sf_bpf_optimize+0x558>
   210e4:	ldr	r1, [r4]
   210e8:	cmn	r1, #1
   210ec:	beq	210d8 <sf_bpf_optimize+0x50c>
   210f0:	mov	ip, #0
   210f4:	cmp	sl, #0
   210f8:	bne	21130 <sf_bpf_optimize+0x564>
   210fc:	cmp	ip, #0
   21100:	bne	21138 <sf_bpf_optimize+0x56c>
   21104:	ldr	r1, [r4]
   21108:	ldr	r7, [r8]
   2110c:	cmp	r7, r1
   21110:	ldreq	r1, [r4, #12]
   21114:	ldreq	r7, [r8, #12]
   21118:	cmpeq	r7, r1
   2111c:	bne	21138 <sf_bpf_optimize+0x56c>
   21120:	b	21074 <sf_bpf_optimize+0x4a8>
   21124:	mov	r4, #0
   21128:	cmp	sl, #0
   2112c:	beq	210fc <sf_bpf_optimize+0x530>
   21130:	cmp	ip, #0
   21134:	bne	20fdc <sf_bpf_optimize+0x410>
   21138:	add	r2, r2, #1
   2113c:	cmp	r2, r6
   21140:	blt	21018 <sf_bpf_optimize+0x44c>
   21144:	sub	r1, lr, #1
   21148:	cmp	lr, #0
   2114c:	bgt	20ff0 <sf_bpf_optimize+0x424>
   21150:	ldr	r4, [sp, #12]
   21154:	cmp	r6, #1
   21158:	mov	r5, #0
   2115c:	blt	211b8 <sf_bpf_optimize+0x5ec>
   21160:	ldr	r0, [pc, #408]	; 21300 <sf_bpf_optimize+0x734>
   21164:	mov	r2, #1
   21168:	mov	r1, r6
   2116c:	ldr	r0, [pc, r0]
   21170:	ldr	r3, [r0]
   21174:	ldr	r7, [r3, #60]	; 0x3c
   21178:	cmp	r7, #0
   2117c:	beq	211a4 <sf_bpf_optimize+0x5d8>
   21180:	ldr	r7, [r7, #100]	; 0x64
   21184:	cmp	r7, #0
   21188:	strne	r7, [r3, #60]	; 0x3c
   2118c:	movne	r2, #0
   21190:	ldr	r7, [r3, #84]	; 0x54
   21194:	ldr	r7, [r7, #100]	; 0x64
   21198:	cmp	r7, #0
   2119c:	movne	r2, #0
   211a0:	strne	r7, [r3, #84]	; 0x54
   211a4:	add	r0, r0, #4
   211a8:	subs	r1, r1, #1
   211ac:	bne	21170 <sf_bpf_optimize+0x5a4>
   211b0:	cmp	r2, #0
   211b4:	beq	20f80 <sf_bpf_optimize+0x3b4>
   211b8:	ldr	r5, [sp]
   211bc:	mov	r1, #0
   211c0:	ldr	r0, [r5]
   211c4:	ldr	r4, [r0, #4]
   211c8:	str	r1, [r0, #4]
   211cc:	ldr	r0, [r5]
   211d0:	ldr	r1, [r0, #8]
   211d4:	and	r1, r1, #7
   211d8:	cmp	r1, #5
   211dc:	bne	21208 <sf_bpf_optimize+0x63c>
   211e0:	ldr	r1, [r0, #60]	; 0x3c
   211e4:	ldr	r2, [r0, #84]	; 0x54
   211e8:	cmp	r1, r2
   211ec:	bne	21208 <sf_bpf_optimize+0x63c>
   211f0:	str	r1, [r5]
   211f4:	ldr	r0, [r1, #8]
   211f8:	and	r0, r0, #7
   211fc:	cmp	r0, #5
   21200:	mov	r0, r1
   21204:	beq	211e0 <sf_bpf_optimize+0x614>
   21208:	ldr	r1, [r0, #4]!
   2120c:	cmp	r1, #0
   21210:	beq	21224 <sf_bpf_optimize+0x658>
   21214:	mov	r0, r4
   21218:	bl	12b28 <sf_append>
   2121c:	ldr	r0, [r5]
   21220:	add	r0, r0, #4
   21224:	str	r4, [r0]
   21228:	ldr	r0, [r5]
   2122c:	ldr	r1, [r0, #8]
   21230:	and	r1, r1, #7
   21234:	cmp	r1, #6
   21238:	moveq	r1, #0
   2123c:	streq	r1, [r0, #4]
   21240:	ldr	r0, [pc, #188]	; 21304 <sf_bpf_optimize+0x738>
   21244:	ldr	r0, [pc, r0]
   21248:	bl	e5c <free@plt>
   2124c:	ldr	r0, [pc, #180]	; 21308 <sf_bpf_optimize+0x73c>
   21250:	ldr	r0, [pc, r0]
   21254:	bl	e5c <free@plt>
   21258:	ldr	r0, [pc, #172]	; 2130c <sf_bpf_optimize+0x740>
   2125c:	ldr	r0, [pc, r0]
   21260:	bl	e5c <free@plt>
   21264:	ldr	r0, [pc, #164]	; 21310 <sf_bpf_optimize+0x744>
   21268:	ldr	r0, [pc, r0]
   2126c:	bl	e5c <free@plt>
   21270:	ldr	r0, [pc, #156]	; 21314 <sf_bpf_optimize+0x748>
   21274:	ldr	r0, [pc, r0]
   21278:	bl	e5c <free@plt>
   2127c:	ldr	r0, [pc, #148]	; 21318 <sf_bpf_optimize+0x74c>
   21280:	ldr	r0, [pc, r0]
   21284:	sub	sp, fp, #28
   21288:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2128c:	b	e5c <free@plt>
   21290:	.word	0x00026974
   21294:	.word	0x00026968
   21298:	.word	0x00026d9c
   2129c:	.word	0x00026940
   212a0:	.word	0x00026924
   212a4:	.word	0x0002692c
   212a8:	.word	0x00026d48
   212ac:	.word	0x00026d1c
   212b0:	.word	0x000268c8
   212b4:	.word	0x000268c4
   212b8:	.word	0x00026cc8
   212bc:	.word	0x00026878
   212c0:	.word	0x00026c80
   212c4:	.word	0x00026818
   212c8:	.word	0x000267ec
   212cc:	.word	0x00026bf4
   212d0:	.word	0x00026b94
   212d4:	.word	0x00026b8c
   212d8:	.word	0x00026b5c
   212dc:	.word	0x00026b2c
   212e0:	.word	0x00026690
   212e4:	.word	0x00026aac
   212e8:	.word	0x00026a88
   212ec:	.word	0x000265fc
   212f0:	.word	0x00026a20
   212f4:	.word	0x000265b0
   212f8:	.word	0x000265a4
   212fc:	.word	0x000269e0
   21300:	.word	0x00026844
   21304:	.word	0x00026778
   21308:	.word	0x00026770
   2130c:	.word	0x00026758
   21310:	.word	0x00026740
   21314:	.word	0x00026738
   21318:	.word	0x00026730
   2131c:	.word	0x00009c5c
   21320:	.word	0x0002669c
   21324:	.word	0x0002668c

00021328 <opt_loop>:
   21328:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2132c:	add	fp, sp, #28
   21330:	sub	sp, sp, #4
   21334:	vpush	{d8-d9}
   21338:	sub	sp, sp, #104	; 0x68
   2133c:	str	r0, [sp, #4]
   21340:	str	r1, [sp, #24]
   21344:	mov	r0, #1
   21348:	mov	r8, #0
   2134c:	mvn	r9, #1
   21350:	vmov.i32	q4, #0	; 0x00000000
   21354:	ldr	r1, [pc, #3772]	; 22218 <opt_loop+0xef0>
   21358:	add	r1, pc, r1
   2135c:	strb	r0, [r1]
   21360:	mov	r1, #0
   21364:	ldr	r0, [pc, #3760]	; 2221c <opt_loop+0xef4>
   21368:	ldr	r0, [pc, r0]
   2136c:	ldr	r6, [pc, #3756]	; 22220 <opt_loop+0xef8>
   21370:	ldr	r6, [pc, r6]
   21374:	lsl	r5, r6, #2
   21378:	mov	r2, r5
   2137c:	bl	f40 <memset@plt>
   21380:	ldr	r0, [pc, #3740]	; 22224 <opt_loop+0xefc>
   21384:	ldr	r0, [pc, r0]
   21388:	ldr	r1, [pc, #3736]	; 22228 <opt_loop+0xf00>
   2138c:	add	r0, r0, #1
   21390:	add	r1, pc, r1
   21394:	str	r0, [r1]
   21398:	ldr	r0, [sp, #4]
   2139c:	bl	2481c <find_levels_r>
   213a0:	ldr	r4, [pc, #3716]	; 2222c <opt_loop+0xf04>
   213a4:	ldr	r4, [pc, r4]
   213a8:	mul	r0, r4, r6
   213ac:	cmp	r0, #1
   213b0:	blt	213dc <opt_loop+0xb4>
   213b4:	mvn	r1, r0
   213b8:	cmn	r1, #2
   213bc:	movle	r1, r9
   213c0:	add	r0, r1, r0
   213c4:	mov	r1, #8
   213c8:	add	r2, r1, r0, lsl #2
   213cc:	ldr	r0, [pc, #3676]	; 22230 <opt_loop+0xf08>
   213d0:	mov	r1, #255	; 0xff
   213d4:	ldr	r0, [pc, r0]
   213d8:	bl	f40 <memset@plt>
   213dc:	ldr	r2, [sp, #4]
   213e0:	cmp	r4, #1
   213e4:	blt	21408 <opt_loop+0xe0>
   213e8:	sub	r0, r4, #1
   213ec:	ldr	r1, [r2, #104]	; 0x68
   213f0:	str	r8, [r1, r0, lsl #2]
   213f4:	sub	r1, r0, #1
   213f8:	add	r0, r0, #1
   213fc:	cmp	r0, #1
   21400:	mov	r0, r1
   21404:	bgt	213ec <opt_loop+0xc4>
   21408:	ldr	ip, [r2, #36]	; 0x24
   2140c:	cmp	ip, #0
   21410:	blt	21614 <opt_loop+0x2ec>
   21414:	mov	r5, #1
   21418:	ldr	r0, [pc, #3604]	; 22234 <opt_loop+0xf0c>
   2141c:	ldr	r0, [pc, r0]
   21420:	ldr	r1, [r0, ip, lsl #2]
   21424:	cmp	r1, #0
   21428:	beq	215f0 <opt_loop+0x2c8>
   2142c:	ldr	r0, [r1]
   21430:	ldr	r2, [r1, #104]	; 0x68
   21434:	lsr	r3, r0, #5
   21438:	and	r0, r0, #31
   2143c:	ldr	r7, [r2, r3, lsl #2]
   21440:	orr	r0, r7, r5, lsl r0
   21444:	str	r0, [r2, r3, lsl #2]
   21448:	ldr	r3, [r1, #60]	; 0x3c
   2144c:	cmp	r3, #0
   21450:	beq	215e4 <opt_loop+0x2bc>
   21454:	ldr	r2, [pc, #3548]	; 22238 <opt_loop+0xf10>
   21458:	ldr	r2, [pc, r2]
   2145c:	cmp	r2, #1
   21460:	blt	215e4 <opt_loop+0x2bc>
   21464:	mvn	r7, r2
   21468:	mvn	r0, #1
   2146c:	ldr	r5, [r3, #104]	; 0x68
   21470:	ldr	r4, [r1, #104]	; 0x68
   21474:	cmn	r7, #2
   21478:	movgt	r0, r7
   2147c:	add	r0, r2, r0
   21480:	add	r0, r0, #2
   21484:	cmp	r0, #4
   21488:	bcc	214ec <opt_loop+0x1c4>
   2148c:	cmn	r7, #2
   21490:	movle	r7, r9
   21494:	add	r3, r2, r7
   21498:	add	r7, r4, r3, lsl #2
   2149c:	add	r7, r7, #8
   214a0:	cmp	r5, r7
   214a4:	addcc	r3, r5, r3, lsl #2
   214a8:	addcc	r3, r3, #8
   214ac:	cmpcc	r4, r3
   214b0:	bcc	214ec <opt_loop+0x1c4>
   214b4:	bic	lr, r0, #3
   214b8:	add	r6, r5, lr, lsl #2
   214bc:	add	r3, r4, lr, lsl #2
   214c0:	sub	r2, r2, lr
   214c4:	mov	r7, lr
   214c8:	vld1.32	{d16-d17}, [r4]!
   214cc:	vld1.32	{d18-d19}, [r5]
   214d0:	subs	r7, r7, #4
   214d4:	vand	q8, q9, q8
   214d8:	vst1.32	{d16-d17}, [r5]!
   214dc:	bne	214c8 <opt_loop+0x1a0>
   214e0:	cmp	r0, lr
   214e4:	bne	214f4 <opt_loop+0x1cc>
   214e8:	b	21514 <opt_loop+0x1ec>
   214ec:	mov	r3, r4
   214f0:	mov	r6, r5
   214f4:	add	r0, r2, #1
   214f8:	ldr	r2, [r3], #4
   214fc:	ldr	r7, [r6]
   21500:	sub	r0, r0, #1
   21504:	cmp	r0, #1
   21508:	and	r2, r7, r2
   2150c:	str	r2, [r6], #4
   21510:	bgt	214f8 <opt_loop+0x1d0>
   21514:	ldr	r2, [pc, #4072]	; 22504 <opt_loop+0x11dc>
   21518:	mov	r5, #1
   2151c:	ldr	r2, [pc, r2]
   21520:	cmp	r2, #1
   21524:	blt	215e4 <opt_loop+0x2bc>
   21528:	ldr	r7, [r1, #84]	; 0x54
   2152c:	mvn	r3, r2
   21530:	mvn	r0, #1
   21534:	ldr	r4, [r1, #104]	; 0x68
   21538:	cmn	r3, #2
   2153c:	movgt	r0, r3
   21540:	add	r0, r2, r0
   21544:	ldr	r5, [r7, #104]	; 0x68
   21548:	add	r0, r0, #2
   2154c:	cmp	r0, #4
   21550:	bcc	215b8 <opt_loop+0x290>
   21554:	cmn	r3, #2
   21558:	movle	r3, r9
   2155c:	add	r3, r2, r3
   21560:	add	r7, r4, r3, lsl #2
   21564:	add	r7, r7, #8
   21568:	cmp	r5, r7
   2156c:	addcc	r3, r5, r3, lsl #2
   21570:	addcc	r3, r3, #8
   21574:	cmpcc	r4, r3
   21578:	bcc	215b8 <opt_loop+0x290>
   2157c:	bic	lr, r0, #3
   21580:	add	r6, r5, lr, lsl #2
   21584:	add	r3, r4, lr, lsl #2
   21588:	sub	r2, r2, lr
   2158c:	mov	r7, lr
   21590:	vld1.32	{d16-d17}, [r4]!
   21594:	vld1.32	{d18-d19}, [r5]
   21598:	subs	r7, r7, #4
   2159c:	vand	q8, q9, q8
   215a0:	vst1.32	{d16-d17}, [r5]!
   215a4:	bne	21590 <opt_loop+0x268>
   215a8:	cmp	r0, lr
   215ac:	mov	r5, #1
   215b0:	beq	215e4 <opt_loop+0x2bc>
   215b4:	b	215c4 <opt_loop+0x29c>
   215b8:	mov	r6, r5
   215bc:	mov	r3, r4
   215c0:	mov	r5, #1
   215c4:	add	r0, r2, #1
   215c8:	ldr	r2, [r3], #4
   215cc:	ldr	r7, [r6]
   215d0:	sub	r0, r0, #1
   215d4:	cmp	r0, #1
   215d8:	and	r2, r7, r2
   215dc:	str	r2, [r6], #4
   215e0:	bgt	215c8 <opt_loop+0x2a0>
   215e4:	ldr	r1, [r1, #100]	; 0x64
   215e8:	cmp	r1, #0
   215ec:	bne	2142c <opt_loop+0x104>
   215f0:	sub	r0, ip, #1
   215f4:	cmp	ip, #0
   215f8:	mov	ip, r0
   215fc:	bgt	21418 <opt_loop+0xf0>
   21600:	ldr	r0, [pc, #3840]	; 22508 <opt_loop+0x11e0>
   21604:	ldr	r0, [pc, r0]
   21608:	ldr	r4, [pc, #3836]	; 2250c <opt_loop+0x11e4>
   2160c:	ldr	r4, [pc, r4]
   21610:	lsl	r5, r0, #2
   21614:	ldr	r0, [pc, #3828]	; 22510 <opt_loop+0x11e8>
   21618:	mul	r2, r5, r4
   2161c:	mov	r1, #0
   21620:	ldr	r0, [pc, r0]
   21624:	bl	f40 <memset@plt>
   21628:	ldr	r0, [sp, #4]
   2162c:	mov	r5, #1
   21630:	ldr	ip, [r0, #36]	; 0x24
   21634:	cmp	ip, #0
   21638:	blt	21b7c <opt_loop+0x854>
   2163c:	ldr	r0, [pc, #3792]	; 22514 <opt_loop+0x11ec>
   21640:	ldr	r0, [pc, r0]
   21644:	ldr	r1, [r0, ip, lsl #2]
   21648:	cmp	r1, #0
   2164c:	beq	21814 <opt_loop+0x4ec>
   21650:	ldr	r0, [r1]
   21654:	ldr	r2, [r1, #108]	; 0x6c
   21658:	lsr	r3, r0, #5
   2165c:	and	r0, r0, #31
   21660:	ldr	r7, [r2, r3, lsl #2]
   21664:	orr	r0, r7, r5, lsl r0
   21668:	str	r0, [r2, r3, lsl #2]
   2166c:	ldr	r3, [r1, #60]	; 0x3c
   21670:	cmp	r3, #0
   21674:	beq	21808 <opt_loop+0x4e0>
   21678:	ldr	r2, [pc, #3736]	; 22518 <opt_loop+0x11f0>
   2167c:	ldr	r2, [pc, r2]
   21680:	cmp	r2, #1
   21684:	blt	21808 <opt_loop+0x4e0>
   21688:	mvn	r7, r2
   2168c:	mvn	r0, #1
   21690:	ldr	r5, [r3, #108]	; 0x6c
   21694:	ldr	r4, [r1, #108]	; 0x6c
   21698:	cmn	r7, #2
   2169c:	movgt	r0, r7
   216a0:	add	r0, r2, r0
   216a4:	add	r0, r0, #2
   216a8:	cmp	r0, #4
   216ac:	bcc	21710 <opt_loop+0x3e8>
   216b0:	cmn	r7, #2
   216b4:	movle	r7, r9
   216b8:	add	r3, r2, r7
   216bc:	add	r7, r4, r3, lsl #2
   216c0:	add	r7, r7, #8
   216c4:	cmp	r5, r7
   216c8:	addcc	r3, r5, r3, lsl #2
   216cc:	addcc	r3, r3, #8
   216d0:	cmpcc	r4, r3
   216d4:	bcc	21710 <opt_loop+0x3e8>
   216d8:	bic	lr, r0, #3
   216dc:	add	r6, r5, lr, lsl #2
   216e0:	add	r3, r4, lr, lsl #2
   216e4:	sub	r2, r2, lr
   216e8:	mov	r7, lr
   216ec:	vld1.32	{d16-d17}, [r4]!
   216f0:	vld1.32	{d18-d19}, [r5]
   216f4:	subs	r7, r7, #4
   216f8:	vorr	q8, q9, q8
   216fc:	vst1.32	{d16-d17}, [r5]!
   21700:	bne	216ec <opt_loop+0x3c4>
   21704:	cmp	r0, lr
   21708:	bne	21718 <opt_loop+0x3f0>
   2170c:	b	21738 <opt_loop+0x410>
   21710:	mov	r3, r4
   21714:	mov	r6, r5
   21718:	add	r0, r2, #1
   2171c:	ldr	r2, [r3], #4
   21720:	ldr	r7, [r6]
   21724:	sub	r0, r0, #1
   21728:	cmp	r0, #1
   2172c:	orr	r2, r7, r2
   21730:	str	r2, [r6], #4
   21734:	bgt	2171c <opt_loop+0x3f4>
   21738:	ldr	r2, [pc, #3992]	; 226d8 <opt_loop+0x13b0>
   2173c:	mov	r5, #1
   21740:	ldr	r2, [pc, r2]
   21744:	cmp	r2, #1
   21748:	blt	21808 <opt_loop+0x4e0>
   2174c:	ldr	r7, [r1, #84]	; 0x54
   21750:	mvn	r3, r2
   21754:	mvn	r0, #1
   21758:	ldr	r4, [r1, #108]	; 0x6c
   2175c:	cmn	r3, #2
   21760:	movgt	r0, r3
   21764:	add	r0, r2, r0
   21768:	ldr	r5, [r7, #108]	; 0x6c
   2176c:	add	r0, r0, #2
   21770:	cmp	r0, #4
   21774:	bcc	217dc <opt_loop+0x4b4>
   21778:	cmn	r3, #2
   2177c:	movle	r3, r9
   21780:	add	r3, r2, r3
   21784:	add	r7, r4, r3, lsl #2
   21788:	add	r7, r7, #8
   2178c:	cmp	r5, r7
   21790:	addcc	r3, r5, r3, lsl #2
   21794:	addcc	r3, r3, #8
   21798:	cmpcc	r4, r3
   2179c:	bcc	217dc <opt_loop+0x4b4>
   217a0:	bic	lr, r0, #3
   217a4:	add	r6, r5, lr, lsl #2
   217a8:	add	r3, r4, lr, lsl #2
   217ac:	sub	r2, r2, lr
   217b0:	mov	r7, lr
   217b4:	vld1.32	{d16-d17}, [r4]!
   217b8:	vld1.32	{d18-d19}, [r5]
   217bc:	subs	r7, r7, #4
   217c0:	vorr	q8, q9, q8
   217c4:	vst1.32	{d16-d17}, [r5]!
   217c8:	bne	217b4 <opt_loop+0x48c>
   217cc:	cmp	r0, lr
   217d0:	mov	r5, #1
   217d4:	beq	21808 <opt_loop+0x4e0>
   217d8:	b	217e8 <opt_loop+0x4c0>
   217dc:	mov	r6, r5
   217e0:	mov	r3, r4
   217e4:	mov	r5, #1
   217e8:	add	r0, r2, #1
   217ec:	ldr	r2, [r3], #4
   217f0:	ldr	r7, [r6]
   217f4:	sub	r0, r0, #1
   217f8:	cmp	r0, #1
   217fc:	orr	r2, r7, r2
   21800:	str	r2, [r6], #4
   21804:	bgt	217ec <opt_loop+0x4c4>
   21808:	ldr	r1, [r1, #100]	; 0x64
   2180c:	cmp	r1, #0
   21810:	bne	21650 <opt_loop+0x328>
   21814:	sub	r0, ip, #1
   21818:	cmp	ip, #0
   2181c:	mov	ip, r0
   21820:	bgt	2163c <opt_loop+0x314>
   21824:	ldr	r0, [sp, #4]
   21828:	ldr	r0, [r0, #36]	; 0x24
   2182c:	cmp	r0, #0
   21830:	blt	21b7c <opt_loop+0x854>
   21834:	ldr	r1, [pc, #4032]	; 227fc <opt_loop+0x14d4>
   21838:	mov	r9, r0
   2183c:	ldr	r1, [pc, r1]
   21840:	str	r0, [sp, #20]
   21844:	str	r1, [sp, #28]
   21848:	ldr	r0, [sp, #28]
   2184c:	ldr	sl, [r0, r9, lsl #2]
   21850:	cmp	sl, #0
   21854:	beq	21af4 <opt_loop+0x7cc>
   21858:	ldr	r1, [sl, #4]
   2185c:	cmp	r1, #0
   21860:	beq	219dc <opt_loop+0x6b4>
   21864:	mov	lr, #0
   21868:	mov	r0, #0
   2186c:	mov	r4, #0
   21870:	ldr	r2, [r1]
   21874:	cmn	r2, #1
   21878:	beq	219cc <opt_loop+0x6a4>
   2187c:	and	r6, r2, #7
   21880:	sub	r3, r6, #2
   21884:	cmp	r3, #5
   21888:	bhi	218c0 <opt_loop+0x598>
   2188c:	add	ip, pc, #8
   21890:	mov	r7, #16
   21894:	ldr	r3, [ip, r3, lsl #2]
   21898:	add	pc, ip, r3
   2189c:	.word	0x000000c0
   218a0:	.word	0x00000070
   218a4:	.word	0x00000018
   218a8:	.word	0x00000018
   218ac:	.word	0x0000008c
   218b0:	.word	0x00000078
   218b4:	tst	r2, #8
   218b8:	bne	218e8 <opt_loop+0x5c0>
   218bc:	b	2195c <opt_loop+0x634>
   218c0:	and	r3, r2, #224	; 0xe0
   218c4:	cmp	r3, #64	; 0x40
   218c8:	beq	2190c <opt_loop+0x5e4>
   218cc:	cmp	r3, #96	; 0x60
   218d0:	bne	21964 <opt_loop+0x63c>
   218d4:	ldr	r3, [r1, #12]
   218d8:	cmp	r3, #0
   218dc:	blt	21964 <opt_loop+0x63c>
   218e0:	cmp	r3, #18
   218e4:	bne	21950 <opt_loop+0x628>
   218e8:	mov	r7, #131072	; 0x20000
   218ec:	mov	r3, #65536	; 0x10000
   218f0:	bic	r7, r7, r4
   218f4:	bic	r3, r3, r4
   218f8:	orr	r0, r7, r0
   218fc:	orr	r0, r0, r3
   21900:	cmp	r6, #7
   21904:	bls	2196c <opt_loop+0x644>
   21908:	b	219cc <opt_loop+0x6a4>
   2190c:	mov	r7, #17
   21910:	b	2195c <opt_loop+0x634>
   21914:	and	r3, r2, #248	; 0xf8
   21918:	mov	r7, #16
   2191c:	cmp	r3, #128	; 0x80
   21920:	movweq	r7, #17
   21924:	b	2195c <opt_loop+0x634>
   21928:	and	r5, r2, #24
   2192c:	mvn	r3, #0
   21930:	cmp	r5, #8
   21934:	movweq	r3, #17
   21938:	cmp	r5, #16
   2193c:	mov	r5, #1
   21940:	beq	2195c <opt_loop+0x634>
   21944:	cmp	r3, #0
   21948:	bge	218e0 <opt_loop+0x5b8>
   2194c:	b	21964 <opt_loop+0x63c>
   21950:	cmp	r3, #17
   21954:	mov	r7, r3
   21958:	bgt	24234 <opt_loop+0x2f0c>
   2195c:	tst	r4, r5, lsl r7
   21960:	orreq	r0, r0, r5, lsl r7
   21964:	cmp	r6, #7
   21968:	bhi	219cc <opt_loop+0x6a4>
   2196c:	add	r3, pc, #8
   21970:	mov	r7, #16
   21974:	ldr	r6, [r3, r6, lsl #2]
   21978:	add	pc, r3, r6
   2197c:	.word	0x00000044
   21980:	.word	0x00000040
   21984:	.word	0x00000020
   21988:	.word	0x00000020
   2198c:	.word	0x00000044
   21990:	.word	0x00000050
   21994:	.word	0x00000050
   21998:	.word	0x00000030
   2199c:	ldr	r7, [r1, #12]
   219a0:	cmp	r7, #0
   219a4:	bge	219c0 <opt_loop+0x698>
   219a8:	b	219cc <opt_loop+0x6a4>
   219ac:	tst	r2, #248	; 0xf8
   219b0:	mov	r7, #16
   219b4:	movweq	r7, #17
   219b8:	b	219c0 <opt_loop+0x698>
   219bc:	mov	r7, #17
   219c0:	tst	r0, r5, lsl r7
   219c4:	orr	r4, r4, r5, lsl r7
   219c8:	orreq	lr, lr, r5, lsl r7
   219cc:	ldr	r1, [r1, #16]
   219d0:	cmp	r1, #0
   219d4:	bne	21870 <opt_loop+0x548>
   219d8:	b	219e8 <opt_loop+0x6c0>
   219dc:	mov	r4, #0
   219e0:	mov	r0, #0
   219e4:	mov	lr, #0
   219e8:	ldr	r2, [sl, #8]
   219ec:	cmn	r2, #1
   219f0:	beq	21ad8 <opt_loop+0x7b0>
   219f4:	and	r1, r2, #7
   219f8:	cmp	r1, #5
   219fc:	bne	21ad8 <opt_loop+0x7b0>
   21a00:	sub	r3, r1, #2
   21a04:	cmp	r3, #5
   21a08:	bhi	21a40 <opt_loop+0x718>
   21a0c:	add	r7, pc, #8
   21a10:	mov	r1, #16
   21a14:	ldr	r3, [r7, r3, lsl #2]
   21a18:	add	pc, r7, r3
   21a1c:	.word	0x000000b4
   21a20:	.word	0x00000068
   21a24:	.word	0x00000018
   21a28:	.word	0x00000018
   21a2c:	.word	0x00000070
   21a30:	.word	0x00000094
   21a34:	tst	r2, #8
   21a38:	bne	21a68 <opt_loop+0x740>
   21a3c:	b	21ad0 <opt_loop+0x7a8>
   21a40:	and	r1, r2, #224	; 0xe0
   21a44:	cmp	r1, #64	; 0x40
   21a48:	beq	21a84 <opt_loop+0x75c>
   21a4c:	cmp	r1, #96	; 0x60
   21a50:	bne	21ad8 <opt_loop+0x7b0>
   21a54:	ldr	r2, [sl, #20]
   21a58:	cmp	r2, #0
   21a5c:	blt	21ad8 <opt_loop+0x7b0>
   21a60:	cmp	r2, #18
   21a64:	bne	21ac4 <opt_loop+0x79c>
   21a68:	mov	r2, #131072	; 0x20000
   21a6c:	mov	r1, #65536	; 0x10000
   21a70:	bic	r2, r2, r4
   21a74:	bic	r1, r1, r4
   21a78:	orr	r0, r2, r0
   21a7c:	orr	r0, r0, r1
   21a80:	b	21ad8 <opt_loop+0x7b0>
   21a84:	mov	r1, #17
   21a88:	b	21ad0 <opt_loop+0x7a8>
   21a8c:	and	r3, r2, #24
   21a90:	mvn	r2, #0
   21a94:	cmp	r3, #8
   21a98:	movweq	r2, #17
   21a9c:	cmp	r3, #16
   21aa0:	beq	21ad0 <opt_loop+0x7a8>
   21aa4:	cmp	r2, #0
   21aa8:	bge	21a60 <opt_loop+0x738>
   21aac:	b	21ad8 <opt_loop+0x7b0>
   21ab0:	and	r1, r2, #248	; 0xf8
   21ab4:	cmp	r1, #128	; 0x80
   21ab8:	mov	r1, #16
   21abc:	movweq	r1, #17
   21ac0:	b	21ad0 <opt_loop+0x7a8>
   21ac4:	cmp	r2, #17
   21ac8:	mov	r1, r2
   21acc:	bgt	24234 <opt_loop+0x2f0c>
   21ad0:	tst	r4, r5, lsl r1
   21ad4:	orreq	r0, r0, r5, lsl r1
   21ad8:	str	r4, [sl, #116]	; 0x74
   21adc:	str	lr, [sl, #120]	; 0x78
   21ae0:	str	r0, [sl, #124]	; 0x7c
   21ae4:	str	r8, [sl, #128]	; 0x80
   21ae8:	ldr	sl, [sl, #100]	; 0x64
   21aec:	cmp	sl, #0
   21af0:	bne	21858 <opt_loop+0x530>
   21af4:	sub	r0, r9, #1
   21af8:	cmp	r9, #0
   21afc:	mov	r9, r0
   21b00:	bgt	21848 <opt_loop+0x520>
   21b04:	ldr	r5, [sp, #20]
   21b08:	mvn	r9, #1
   21b0c:	cmp	r5, #1
   21b10:	blt	21b7c <opt_loop+0x854>
   21b14:	mov	r0, #1
   21b18:	ldr	r1, [sp, #28]
   21b1c:	ldr	r1, [r1, r0, lsl #2]
   21b20:	cmp	r1, #0
   21b24:	beq	21b6c <opt_loop+0x844>
   21b28:	ldr	r2, [r1, #60]	; 0x3c
   21b2c:	ldr	r3, [r1, #84]	; 0x54
   21b30:	ldr	r7, [r1, #100]	; 0x64
   21b34:	ldr	r6, [r1, #120]	; 0x78
   21b38:	ldr	r2, [r2, #124]	; 0x7c
   21b3c:	ldr	r3, [r3, #124]	; 0x7c
   21b40:	cmp	r7, #0
   21b44:	orr	r2, r3, r2
   21b48:	ldr	r3, [r1, #128]	; 0x80
   21b4c:	orr	r2, r2, r3
   21b50:	str	r2, [r1, #128]	; 0x80
   21b54:	bic	r2, r2, r6
   21b58:	ldr	r3, [r1, #124]	; 0x7c
   21b5c:	orr	r2, r3, r2
   21b60:	str	r2, [r1, #124]	; 0x7c
   21b64:	mov	r1, r7
   21b68:	bne	21b28 <opt_loop+0x800>
   21b6c:	add	r1, r0, #1
   21b70:	cmp	r0, r5
   21b74:	mov	r0, r1
   21b78:	bne	21b18 <opt_loop+0x7f0>
   21b7c:	ldr	r0, [pc, #3780]	; 22a48 <opt_loop+0x1720>
   21b80:	ldr	r0, [pc, r0]
   21b84:	ldr	r4, [pc, #3776]	; 22a4c <opt_loop+0x1724>
   21b88:	ldr	r4, [pc, r4]
   21b8c:	mul	r1, r4, r0
   21b90:	cmp	r1, #1
   21b94:	blt	21bc8 <opt_loop+0x8a0>
   21b98:	ldr	r3, [pc, #3760]	; 22a50 <opt_loop+0x1728>
   21b9c:	mvn	r2, r1
   21ba0:	cmn	r2, #2
   21ba4:	movle	r2, r9
   21ba8:	sub	r0, r9, r2
   21bac:	add	r1, r2, r1
   21bb0:	mov	r2, #8
   21bb4:	ldr	r3, [pc, r3]
   21bb8:	add	r2, r2, r1, lsl #2
   21bbc:	mov	r1, #255	; 0xff
   21bc0:	add	r0, r3, r0, lsl #2
   21bc4:	bl	f40 <memset@plt>
   21bc8:	ldr	r6, [sp, #4]
   21bcc:	lsl	r5, r4, #2
   21bd0:	mov	r1, #0
   21bd4:	mov	r2, r5
   21bd8:	ldr	r0, [r6, #56]	; 0x38
   21bdc:	bl	f40 <memset@plt>
   21be0:	ldr	r0, [r6, #80]	; 0x50
   21be4:	mov	r1, #0
   21be8:	mov	r2, r5
   21bec:	bl	f40 <memset@plt>
   21bf0:	ldr	ip, [r6, #36]	; 0x24
   21bf4:	mov	r5, #1
   21bf8:	cmp	ip, #0
   21bfc:	blt	21f88 <opt_loop+0xc60>
   21c00:	ldr	r0, [pc, #4084]	; 22bfc <opt_loop+0x18d4>
   21c04:	ldr	r0, [pc, r0]
   21c08:	ldr	r1, [r0, ip, lsl #2]
   21c0c:	cmp	r1, #0
   21c10:	beq	21f78 <opt_loop+0xc50>
   21c14:	ldr	r0, [r1, #48]	; 0x30
   21c18:	ldr	r2, [r1, #56]	; 0x38
   21c1c:	lsr	r3, r0, #5
   21c20:	and	r0, r0, #31
   21c24:	ldr	r7, [r2, r3, lsl #2]
   21c28:	orr	r0, r7, r5, lsl r0
   21c2c:	str	r0, [r2, r3, lsl #2]
   21c30:	ldr	r0, [r1, #60]	; 0x3c
   21c34:	cmp	r0, #0
   21c38:	beq	21dc0 <opt_loop+0xa98>
   21c3c:	ldr	r2, [pc, #4092]	; 22c40 <opt_loop+0x1918>
   21c40:	ldr	r2, [pc, r2]
   21c44:	cmp	r2, #1
   21c48:	blt	21dc0 <opt_loop+0xa98>
   21c4c:	mvn	r3, r2
   21c50:	mvn	r7, #1
   21c54:	ldr	r4, [r0, #56]	; 0x38
   21c58:	ldr	r0, [r1, #56]	; 0x38
   21c5c:	cmn	r3, #2
   21c60:	movgt	r7, r3
   21c64:	add	r7, r2, r7
   21c68:	add	sl, r7, #2
   21c6c:	cmp	sl, #4
   21c70:	bcc	21cdc <opt_loop+0x9b4>
   21c74:	cmn	r3, #2
   21c78:	mvn	r7, #1
   21c7c:	movgt	r7, r3
   21c80:	add	r7, r2, r7
   21c84:	add	r6, r0, r7, lsl #2
   21c88:	add	r6, r6, #8
   21c8c:	cmp	r4, r6
   21c90:	addcc	r7, r4, r7, lsl #2
   21c94:	addcc	r7, r7, #8
   21c98:	cmpcc	r0, r7
   21c9c:	bcc	21cdc <opt_loop+0x9b4>
   21ca0:	bic	r9, sl, #3
   21ca4:	add	r5, r4, r9, lsl #2
   21ca8:	add	r6, r0, r9, lsl #2
   21cac:	sub	lr, r2, r9
   21cb0:	mov	r7, r9
   21cb4:	vld1.32	{d16-d17}, [r0]!
   21cb8:	vld1.32	{d18-d19}, [r4]
   21cbc:	subs	r7, r7, #4
   21cc0:	vand	q8, q9, q8
   21cc4:	vst1.32	{d16-d17}, [r4]!
   21cc8:	bne	21cb4 <opt_loop+0x98c>
   21ccc:	cmp	sl, r9
   21cd0:	mvn	r9, #1
   21cd4:	bne	21ce8 <opt_loop+0x9c0>
   21cd8:	b	21d08 <opt_loop+0x9e0>
   21cdc:	mov	lr, r2
   21ce0:	mov	r6, r0
   21ce4:	mov	r5, r4
   21ce8:	add	r0, lr, #1
   21cec:	ldr	r7, [r6], #4
   21cf0:	ldr	r4, [r5]
   21cf4:	sub	r0, r0, #1
   21cf8:	cmp	r0, #1
   21cfc:	and	r7, r4, r7
   21d00:	str	r7, [r5], #4
   21d04:	bgt	21cec <opt_loop+0x9c4>
   21d08:	ldr	r7, [r1, #60]	; 0x3c
   21d0c:	cmn	r3, #2
   21d10:	mvn	r0, #1
   21d14:	ldr	r5, [r1, #56]	; 0x38
   21d18:	movgt	r0, r3
   21d1c:	add	r0, r2, r0
   21d20:	add	r0, r0, #2
   21d24:	ldr	r4, [r7, #80]	; 0x50
   21d28:	cmp	r0, #4
   21d2c:	bcc	21d94 <opt_loop+0xa6c>
   21d30:	cmn	r3, #2
   21d34:	movle	r3, r9
   21d38:	add	r3, r2, r3
   21d3c:	add	r7, r5, r3, lsl #2
   21d40:	add	r7, r7, #8
   21d44:	cmp	r4, r7
   21d48:	addcc	r3, r4, r3, lsl #2
   21d4c:	addcc	r3, r3, #8
   21d50:	cmpcc	r5, r3
   21d54:	bcc	21d94 <opt_loop+0xa6c>
   21d58:	bic	lr, r0, #3
   21d5c:	add	r6, r4, lr, lsl #2
   21d60:	add	r3, r5, lr, lsl #2
   21d64:	sub	r2, r2, lr
   21d68:	mov	r7, lr
   21d6c:	vld1.32	{d16-d17}, [r5]!
   21d70:	vld1.32	{d18-d19}, [r4]
   21d74:	subs	r7, r7, #4
   21d78:	vand	q8, q9, q8
   21d7c:	vst1.32	{d16-d17}, [r4]!
   21d80:	bne	21d6c <opt_loop+0xa44>
   21d84:	cmp	r0, lr
   21d88:	mov	r5, #1
   21d8c:	bne	21da0 <opt_loop+0xa78>
   21d90:	b	21dc0 <opt_loop+0xa98>
   21d94:	mov	r3, r5
   21d98:	mov	r6, r4
   21d9c:	mov	r5, #1
   21da0:	add	r0, r2, #1
   21da4:	ldr	r2, [r3], #4
   21da8:	ldr	r7, [r6]
   21dac:	sub	r0, r0, #1
   21db0:	cmp	r0, #1
   21db4:	and	r2, r7, r2
   21db8:	str	r2, [r6], #4
   21dbc:	bgt	21da4 <opt_loop+0xa7c>
   21dc0:	ldr	r0, [r1, #72]	; 0x48
   21dc4:	ldr	r2, [r1, #80]	; 0x50
   21dc8:	lsr	r3, r0, #5
   21dcc:	and	r0, r0, #31
   21dd0:	ldr	r7, [r2, r3, lsl #2]
   21dd4:	orr	r0, r7, r5, lsl r0
   21dd8:	str	r0, [r2, r3, lsl #2]
   21ddc:	ldr	r0, [r1, #84]	; 0x54
   21de0:	cmp	r0, #0
   21de4:	beq	21f6c <opt_loop+0xc44>
   21de8:	ldr	r2, [pc, #3908]	; 22d34 <opt_loop+0x1a0c>
   21dec:	ldr	r2, [pc, r2]
   21df0:	cmp	r2, #1
   21df4:	blt	21f6c <opt_loop+0xc44>
   21df8:	mvn	r3, r2
   21dfc:	mvn	r7, #1
   21e00:	ldr	r4, [r0, #56]	; 0x38
   21e04:	ldr	r0, [r1, #80]	; 0x50
   21e08:	cmn	r3, #2
   21e0c:	movgt	r7, r3
   21e10:	add	r7, r2, r7
   21e14:	add	sl, r7, #2
   21e18:	cmp	sl, #4
   21e1c:	bcc	21e88 <opt_loop+0xb60>
   21e20:	cmn	r3, #2
   21e24:	mvn	r7, #1
   21e28:	movgt	r7, r3
   21e2c:	add	r7, r2, r7
   21e30:	add	r6, r0, r7, lsl #2
   21e34:	add	r6, r6, #8
   21e38:	cmp	r4, r6
   21e3c:	addcc	r7, r4, r7, lsl #2
   21e40:	addcc	r7, r7, #8
   21e44:	cmpcc	r0, r7
   21e48:	bcc	21e88 <opt_loop+0xb60>
   21e4c:	bic	r9, sl, #3
   21e50:	add	r5, r4, r9, lsl #2
   21e54:	add	r6, r0, r9, lsl #2
   21e58:	sub	lr, r2, r9
   21e5c:	mov	r7, r9
   21e60:	vld1.32	{d16-d17}, [r0]!
   21e64:	vld1.32	{d18-d19}, [r4]
   21e68:	subs	r7, r7, #4
   21e6c:	vand	q8, q9, q8
   21e70:	vst1.32	{d16-d17}, [r4]!
   21e74:	bne	21e60 <opt_loop+0xb38>
   21e78:	cmp	sl, r9
   21e7c:	mvn	r9, #1
   21e80:	bne	21e94 <opt_loop+0xb6c>
   21e84:	b	21eb4 <opt_loop+0xb8c>
   21e88:	mov	lr, r2
   21e8c:	mov	r6, r0
   21e90:	mov	r5, r4
   21e94:	add	r0, lr, #1
   21e98:	ldr	r7, [r6], #4
   21e9c:	ldr	r4, [r5]
   21ea0:	sub	r0, r0, #1
   21ea4:	cmp	r0, #1
   21ea8:	and	r7, r4, r7
   21eac:	str	r7, [r5], #4
   21eb0:	bgt	21e98 <opt_loop+0xb70>
   21eb4:	ldr	r7, [r1, #84]	; 0x54
   21eb8:	cmn	r3, #2
   21ebc:	mvn	r0, #1
   21ec0:	ldr	r5, [r1, #80]	; 0x50
   21ec4:	movgt	r0, r3
   21ec8:	add	r0, r2, r0
   21ecc:	add	r0, r0, #2
   21ed0:	ldr	r4, [r7, #80]	; 0x50
   21ed4:	cmp	r0, #4
   21ed8:	bcc	21f40 <opt_loop+0xc18>
   21edc:	cmn	r3, #2
   21ee0:	movle	r3, r9
   21ee4:	add	r3, r2, r3
   21ee8:	add	r7, r5, r3, lsl #2
   21eec:	add	r7, r7, #8
   21ef0:	cmp	r4, r7
   21ef4:	addcc	r3, r4, r3, lsl #2
   21ef8:	addcc	r3, r3, #8
   21efc:	cmpcc	r5, r3
   21f00:	bcc	21f40 <opt_loop+0xc18>
   21f04:	bic	lr, r0, #3
   21f08:	add	r6, r4, lr, lsl #2
   21f0c:	add	r3, r5, lr, lsl #2
   21f10:	sub	r2, r2, lr
   21f14:	mov	r7, lr
   21f18:	vld1.32	{d16-d17}, [r5]!
   21f1c:	vld1.32	{d18-d19}, [r4]
   21f20:	subs	r7, r7, #4
   21f24:	vand	q8, q9, q8
   21f28:	vst1.32	{d16-d17}, [r4]!
   21f2c:	bne	21f18 <opt_loop+0xbf0>
   21f30:	cmp	r0, lr
   21f34:	mov	r5, #1
   21f38:	beq	21f6c <opt_loop+0xc44>
   21f3c:	b	21f4c <opt_loop+0xc24>
   21f40:	mov	r3, r5
   21f44:	mov	r6, r4
   21f48:	mov	r5, #1
   21f4c:	add	r0, r2, #1
   21f50:	ldr	r2, [r3], #4
   21f54:	ldr	r7, [r6]
   21f58:	sub	r0, r0, #1
   21f5c:	cmp	r0, #1
   21f60:	and	r2, r7, r2
   21f64:	str	r2, [r6], #4
   21f68:	bgt	21f50 <opt_loop+0xc28>
   21f6c:	ldr	r1, [r1, #100]	; 0x64
   21f70:	cmp	r1, #0
   21f74:	bne	21c14 <opt_loop+0x8ec>
   21f78:	sub	r0, ip, #1
   21f7c:	cmp	ip, #0
   21f80:	mov	ip, r0
   21f84:	bgt	21c00 <opt_loop+0x8d8>
   21f88:	ldr	r0, [pc, #4056]	; 22f68 <opt_loop+0x1c40>
   21f8c:	add	r0, pc, r0
   21f90:	str	r8, [r0]
   21f94:	ldr	r0, [pc, #4048]	; 22f6c <opt_loop+0x1c44>
   21f98:	ldr	r0, [pc, r0]
   21f9c:	ldr	r1, [pc, #4044]	; 22f70 <opt_loop+0x1c48>
   21fa0:	add	r1, pc, r1
   21fa4:	str	r0, [r1]
   21fa8:	ldr	r0, [pc, #4036]	; 22f74 <opt_loop+0x1c4c>
   21fac:	ldr	r0, [pc, r0]
   21fb0:	ldr	r1, [pc, #4032]	; 22f78 <opt_loop+0x1c50>
   21fb4:	ldr	r1, [pc, r1]
   21fb8:	lsl	r2, r1, #3
   21fbc:	mov	r1, #0
   21fc0:	bl	f40 <memset@plt>
   21fc4:	ldr	r0, [pc, #4092]	; 22fc8 <opt_loop+0x1ca0>
   21fc8:	mov	r1, #0
   21fcc:	mov	r2, #852	; 0x354
   21fd0:	add	r0, pc, r0
   21fd4:	bl	f40 <memset@plt>
   21fd8:	ldr	r0, [sp, #4]
   21fdc:	ldr	r4, [r0, #36]	; 0x24
   21fe0:	ldr	r1, [pc, #4068]	; 22fcc <opt_loop+0x1ca4>
   21fe4:	ldr	r1, [pc, r1]
   21fe8:	ldr	ip, [sp, #24]
   21fec:	mov	r0, r4
   21ff0:	cmp	r1, #1
   21ff4:	blt	22018 <opt_loop+0xcf0>
   21ff8:	ldr	r0, [pc, #4048]	; 22fd0 <opt_loop+0x1ca8>
   21ffc:	ldr	r0, [pc, r0]
   22000:	ldr	r2, [r0], #4
   22004:	subs	r1, r1, #1
   22008:	str	r8, [r2, #112]	; 0x70
   2200c:	bne	22000 <opt_loop+0xcd8>
   22010:	ldr	r0, [sp, #4]
   22014:	ldr	r0, [r0, #36]	; 0x24
   22018:	ldr	lr, [pc, #4020]	; 22fd4 <opt_loop+0x1cac>
   2201c:	cmp	r0, #1
   22020:	add	lr, pc, lr
   22024:	blt	22078 <opt_loop+0xd50>
   22028:	ldr	r1, [pc, #4008]	; 22fd8 <opt_loop+0x1cb0>
   2202c:	ldr	r1, [pc, r1]
   22030:	ldr	r2, [r1, r0, lsl #2]
   22034:	cmp	r2, #0
   22038:	beq	22070 <opt_loop+0xd48>
   2203c:	ldr	r3, [r2, #60]	; 0x3c
   22040:	ldr	r7, [r3, #112]	; 0x70
   22044:	str	r7, [r2, #68]	; 0x44
   22048:	add	r7, r2, #48	; 0x30
   2204c:	str	r7, [r3, #112]	; 0x70
   22050:	ldr	r3, [r2, #84]	; 0x54
   22054:	ldr	r7, [r3, #112]	; 0x70
   22058:	str	r7, [r2, #92]	; 0x5c
   2205c:	add	r7, r2, #72	; 0x48
   22060:	str	r7, [r3, #112]	; 0x70
   22064:	ldr	r2, [r2, #100]	; 0x64
   22068:	cmp	r2, #0
   2206c:	bne	2203c <opt_loop+0xd14>
   22070:	subs	r0, r0, #1
   22074:	bgt	22030 <opt_loop+0xd08>
   22078:	cmp	r4, #0
   2207c:	str	r4, [sp, #8]
   22080:	blt	23e1c <opt_loop+0x2af4>
   22084:	ldr	r1, [sp, #8]
   22088:	ldr	r0, [pc, #3916]	; 22fdc <opt_loop+0x1cb4>
   2208c:	ldr	r0, [pc, r0]
   22090:	str	r1, [sp, #12]
   22094:	ldr	r9, [r0, r1, lsl #2]
   22098:	cmp	r9, #0
   2209c:	bne	220cc <opt_loop+0xda4>
   220a0:	b	23e08 <opt_loop+0x2ae0>
   220a4:	ldr	r3, [r3, #12]
   220a8:	b	23dec <opt_loop+0x2ac4>
   220ac:	mvn	r0, #0
   220b0:	str	r0, [r2]
   220b4:	mov	r0, #29
   220b8:	str	r0, [r9, #8]
   220bc:	ldr	r1, [pc, #3868]	; 22fe0 <opt_loop+0x1cb8>
   220c0:	add	r1, pc, r1
   220c4:	strb	r8, [r1]
   220c8:	b	23b10 <opt_loop+0x27e8>
   220cc:	ldr	r4, [r9, #112]	; 0x70
   220d0:	add	r0, r9, #136	; 0x88
   220d4:	cmp	r4, #0
   220d8:	beq	22138 <opt_loop+0xe10>
   220dc:	ldr	r1, [r4, #16]
   220e0:	mov	r2, #72	; 0x48
   220e4:	add	r1, r1, #136	; 0x88
   220e8:	bl	e80 <memcpy@plt>
   220ec:	ldr	lr, [pc, #4080]	; 230e4 <opt_loop+0x1dbc>
   220f0:	ldr	ip, [sp, #24]
   220f4:	ldr	r0, [r4, #20]
   220f8:	add	lr, pc, lr
   220fc:	cmp	r0, #0
   22100:	beq	22164 <opt_loop+0xe3c>
   22104:	mov	r1, #34	; 0x22
   22108:	ldr	r3, [r0, #16]
   2210c:	ldr	r2, [r9, r1, lsl #2]
   22110:	ldr	r3, [r3, r1, lsl #2]
   22114:	cmp	r2, r3
   22118:	strne	r8, [r9, r1, lsl #2]
   2211c:	add	r1, r1, #1
   22120:	cmp	r1, #52	; 0x34
   22124:	bne	22108 <opt_loop+0xde0>
   22128:	ldr	r0, [r0, #20]
   2212c:	cmp	r0, #0
   22130:	bne	22104 <opt_loop+0xddc>
   22134:	b	22164 <opt_loop+0xe3c>
   22138:	mov	r1, r0
   2213c:	mov	r2, #68	; 0x44
   22140:	str	r8, [r0, #64]	; 0x40
   22144:	vst1.32	{d8-d9}, [r1], r2
   22148:	str	r8, [r1]
   2214c:	add	r1, r0, #48	; 0x30
   22150:	vst1.32	{d8-d9}, [r1]
   22154:	add	r1, r0, #32
   22158:	add	r0, r0, #16
   2215c:	vst1.32	{d8-d9}, [r1]
   22160:	vst1.32	{d8-d9}, [r0]
   22164:	mov	r5, r9
   22168:	ldr	r0, [r5, #200]!	; 0xc8
   2216c:	ldr	sl, [r5, #-196]	; 0xffffff3c
   22170:	str	r0, [sp, #20]
   22174:	ldr	r0, [r5, #4]
   22178:	str	r5, [sp, #28]
   2217c:	cmp	sl, #0
   22180:	str	r0, [sp, #16]
   22184:	bne	22200 <opt_loop+0xed8>
   22188:	b	23728 <opt_loop+0x2400>
   2218c:	ldr	r0, [r2, #12]
   22190:	b	221a4 <opt_loop+0xe7c>
   22194:	ldr	r2, [r2, #12]
   22198:	b	22604 <opt_loop+0x12dc>
   2219c:	ldr	r0, [r2, #12]
   221a0:	ldr	r5, [sp, #28]
   221a4:	str	r0, [r5]
   221a8:	ldr	lr, [pc, #4076]	; 2319c <opt_loop+0x1e74>
   221ac:	add	lr, pc, lr
   221b0:	b	2371c <opt_loop+0x23f4>
   221b4:	ldr	r2, [r2, #12]
   221b8:	b	229c8 <opt_loop+0x16a0>
   221bc:	ldr	r2, [r2, #12]
   221c0:	b	22efc <opt_loop+0x1bd4>
   221c4:	ldr	r0, [r2, #12]
   221c8:	str	r0, [r5]
   221cc:	b	2371c <opt_loop+0x23f4>
   221d0:	ldr	r5, [sp, #28]
   221d4:	cmp	r3, #6
   221d8:	beq	236fc <opt_loop+0x23d4>
   221dc:	b	229e8 <opt_loop+0x16c0>
   221e0:	ldr	r0, [r3, #12]
   221e4:	str	r0, [r5]
   221e8:	b	2371c <opt_loop+0x23f4>
   221ec:	ldr	r0, [r0, #12]
   221f0:	str	r0, [r5]
   221f4:	b	2371c <opt_loop+0x23f4>
   221f8:	ldr	r0, [r0, #12]
   221fc:	b	236f0 <opt_loop+0x23c8>
   22200:	ldr	r0, [sl]
   22204:	cmp	r0, #177	; 0xb1
   22208:	bhi	2371c <opt_loop+0x23f4>
   2220c:	add	r1, pc, #40	; 0x28
   22210:	ldr	r2, [r1, r0, lsl #2]
   22214:	add	pc, r1, r2
   22218:	.word	0x0002620c
   2221c:	.word	0x00026644
   22220:	.word	0x000261f8
   22224:	.word	0x000261d4
   22228:	.word	0x000261c8
   2222c:	.word	0x000261cc
   22230:	.word	0x00026198
   22234:	.word	0x00026590
   22238:	.word	0x00026118
   2223c:	.word	0x00000fb4
   22240:	.word	0x00001084
   22244:	.word	0x00000f54
   22248:	.word	0x00001164
   2224c:	.word	0x000002e0
   22250:	.word	0x000014e0
   22254:	.word	0x000014e0
   22258:	.word	0x00000eac
   2225c:	.word	0x000014e0
   22260:	.word	0x000014e0
   22264:	.word	0x000014e0
   22268:	.word	0x000014e0
   2226c:	.word	0x000004a0
   22270:	.word	0x000014e0
   22274:	.word	0x000014e0
   22278:	.word	0x000014e0
   2227c:	.word	0x000014e0
   22280:	.word	0x000014e0
   22284:	.word	0x000014e0
   22288:	.word	0x000014e0
   2228c:	.word	0x000002e0
   22290:	.word	0x000014e0
   22294:	.word	0x000014e0
   22298:	.word	0x000014e0
   2229c:	.word	0x000014e0
   222a0:	.word	0x000014e0
   222a4:	.word	0x000014e0
   222a8:	.word	0x000014e0
   222ac:	.word	0x000004a0
   222b0:	.word	0x000014e0
   222b4:	.word	0x000014e0
   222b8:	.word	0x000014e0
   222bc:	.word	0x000005c4
   222c0:	.word	0x000014e0
   222c4:	.word	0x000014e0
   222c8:	.word	0x000014e0
   222cc:	.word	0x000002e0
   222d0:	.word	0x000014e0
   222d4:	.word	0x000014e0
   222d8:	.word	0x000014e0
   222dc:	.word	0x000005c4
   222e0:	.word	0x000014e0
   222e4:	.word	0x000014e0
   222e8:	.word	0x000014e0
   222ec:	.word	0x000004a0
   222f0:	.word	0x000014e0
   222f4:	.word	0x000014e0
   222f8:	.word	0x000014e0
   222fc:	.word	0x000005c4
   22300:	.word	0x000014e0
   22304:	.word	0x000014e0
   22308:	.word	0x000014e0
   2230c:	.word	0x000002e0
   22310:	.word	0x000014e0
   22314:	.word	0x000014e0
   22318:	.word	0x000014e0
   2231c:	.word	0x000014e0
   22320:	.word	0x000014e0
   22324:	.word	0x000014e0
   22328:	.word	0x000014e0
   2232c:	.word	0x000004a0
   22330:	.word	0x000014e0
   22334:	.word	0x000014e0
   22338:	.word	0x000014e0
   2233c:	.word	0x000006a8
   22340:	.word	0x000014e0
   22344:	.word	0x000014e0
   22348:	.word	0x000014e0
   2234c:	.word	0x000002e0
   22350:	.word	0x000014e0
   22354:	.word	0x000014e0
   22358:	.word	0x000014e0
   2235c:	.word	0x000006a8
   22360:	.word	0x000014e0
   22364:	.word	0x000014e0
   22368:	.word	0x000014e0
   2236c:	.word	0x000004a0
   22370:	.word	0x000014e0
   22374:	.word	0x000014e0
   22378:	.word	0x000014e0
   2237c:	.word	0x000006a8
   22380:	.word	0x000014e0
   22384:	.word	0x000014e0
   22388:	.word	0x000014e0
   2238c:	.word	0x000002e0
   22390:	.word	0x000014e0
   22394:	.word	0x000014e0
   22398:	.word	0x000014e0
   2239c:	.word	0x000014e0
   223a0:	.word	0x000014e0
   223a4:	.word	0x000014e0
   223a8:	.word	0x000014e0
   223ac:	.word	0x000004a0
   223b0:	.word	0x000014e0
   223b4:	.word	0x000014e0
   223b8:	.word	0x000014e0
   223bc:	.word	0x00000f64
   223c0:	.word	0x00001190
   223c4:	.word	0x000014e0
   223c8:	.word	0x000014e0
   223cc:	.word	0x000002e0
   223d0:	.word	0x000014e0
   223d4:	.word	0x000014e0
   223d8:	.word	0x000014e0
   223dc:	.word	0x000014e0
   223e0:	.word	0x000014e0
   223e4:	.word	0x000014e0
   223e8:	.word	0x000014e0
   223ec:	.word	0x000004a0
   223f0:	.word	0x000014e0
   223f4:	.word	0x000014e0
   223f8:	.word	0x000014e0
   223fc:	.word	0x000014e0
   22400:	.word	0x000014e0
   22404:	.word	0x000014e0
   22408:	.word	0x000014e0
   2240c:	.word	0x000002e0
   22410:	.word	0x000014e0
   22414:	.word	0x000014e0
   22418:	.word	0x000014e0
   2241c:	.word	0x000014e0
   22420:	.word	0x000014e0
   22424:	.word	0x000014e0
   22428:	.word	0x000014e0
   2242c:	.word	0x000004a0
   22430:	.word	0x000014e0
   22434:	.word	0x000014e0
   22438:	.word	0x000014e0
   2243c:	.word	0x00001204
   22440:	.word	0x000014e0
   22444:	.word	0x000014e0
   22448:	.word	0x000014e0
   2244c:	.word	0x00000da8
   22450:	.word	0x000014e0
   22454:	.word	0x000014e0
   22458:	.word	0x000011f4
   2245c:	.word	0x000014e0
   22460:	.word	0x000014e0
   22464:	.word	0x000014e0
   22468:	.word	0x000014e0
   2246c:	.word	0x000014e0
   22470:	.word	0x000014e0
   22474:	.word	0x000014e0
   22478:	.word	0x000014e0
   2247c:	.word	0x000014e0
   22480:	.word	0x000014e0
   22484:	.word	0x000014e0
   22488:	.word	0x000014e0
   2248c:	.word	0x000014e0
   22490:	.word	0x000014e0
   22494:	.word	0x000014e0
   22498:	.word	0x000014e0
   2249c:	.word	0x000014e0
   224a0:	.word	0x000014e0
   224a4:	.word	0x000014e0
   224a8:	.word	0x000014e0
   224ac:	.word	0x000014e0
   224b0:	.word	0x000014e0
   224b4:	.word	0x000014e0
   224b8:	.word	0x000014e0
   224bc:	.word	0x000014e0
   224c0:	.word	0x000014e0
   224c4:	.word	0x000014e0
   224c8:	.word	0x000014e0
   224cc:	.word	0x000014e0
   224d0:	.word	0x000014e0
   224d4:	.word	0x000014e0
   224d8:	.word	0x000014e0
   224dc:	.word	0x000014e0
   224e0:	.word	0x000014e0
   224e4:	.word	0x000014e0
   224e8:	.word	0x000014e0
   224ec:	.word	0x000014e0
   224f0:	.word	0x000014e0
   224f4:	.word	0x000014e0
   224f8:	.word	0x000014e0
   224fc:	.word	0x000014e0
   22500:	.word	0x00000ebc
   22504:	.word	0x00026054
   22508:	.word	0x00025f64
   2250c:	.word	0x00025f64
   22510:	.word	0x00025f54
   22514:	.word	0x0002636c
   22518:	.word	0x00025ef4
   2251c:	cmp	ip, #0
   22520:	beq	22a54 <opt_loop+0x172c>
   22524:	ldr	r3, [sl, #12]
   22528:	cmp	r3, #0
   2252c:	beq	22c44 <opt_loop+0x191c>
   22530:	ldr	r1, [r5]
   22534:	ldr	r7, [pc, #4016]	; 234ec <opt_loop+0x21c4>
   22538:	ldr	r7, [pc, r7]
   2253c:	ldr	r2, [r7, r1, lsl #3]
   22540:	cmp	r2, #0
   22544:	beq	22a5c <opt_loop+0x1734>
   22548:	movw	r2, #8923	; 0x22db
   2254c:	lsl	r0, r3, #4
   22550:	movt	r2, #39383	; 0x99d7
   22554:	umull	r0, r2, r0, r2
   22558:	lsr	r0, r2, #7
   2255c:	mov	r2, #213	; 0xd5
   22560:	mul	r0, r0, r2
   22564:	rsb	r0, r0, r3, lsl #4
   22568:	ldr	r2, [lr, r0, lsl #2]
   2256c:	cmp	r2, #0
   22570:	beq	225a0 <opt_loop+0x1278>
   22574:	ldr	r6, [r2]
   22578:	cmp	r6, #0
   2257c:	bne	22594 <opt_loop+0x126c>
   22580:	ldr	r6, [r2, #4]
   22584:	cmp	r6, r3
   22588:	ldreq	r6, [r2, #8]
   2258c:	cmpeq	r6, #0
   22590:	beq	22194 <opt_loop+0xe6c>
   22594:	ldr	r2, [r2, #16]
   22598:	cmp	r2, #0
   2259c:	bne	22574 <opt_loop+0x124c>
   225a0:	ldr	r2, [pc, #4088]	; 235a0 <opt_loop+0x2278>
   225a4:	ldr	r2, [pc, r2]
   225a8:	ldr	r6, [pc, #4084]	; 235a4 <opt_loop+0x227c>
   225ac:	add	r2, r2, #1
   225b0:	add	r6, pc, r6
   225b4:	add	r7, r7, r2, lsl #3
   225b8:	str	r2, [r6]
   225bc:	mov	r6, #1
   225c0:	str	r3, [r7, #4]
   225c4:	ldr	r7, [pc, #4076]	; 235b8 <opt_loop+0x2290>
   225c8:	ldr	r7, [pc, r7]
   225cc:	str	r6, [r7, r2, lsl #3]
   225d0:	ldr	r7, [pc, #4068]	; 235bc <opt_loop+0x2294>
   225d4:	ldr	r7, [pc, r7]
   225d8:	ldr	r5, [pc, #4064]	; 235c0 <opt_loop+0x2298>
   225dc:	add	r6, r7, #20
   225e0:	add	r5, pc, r5
   225e4:	str	r6, [r5]
   225e8:	ldr	r5, [sp, #28]
   225ec:	str	r8, [r7]
   225f0:	str	r2, [r7, #12]
   225f4:	stmib	r7, {r3, r8}
   225f8:	ldr	r3, [lr, r0, lsl #2]
   225fc:	str	r3, [r7, #16]
   22600:	str	r7, [lr, r0, lsl #2]
   22604:	mov	r0, sl
   22608:	mov	r4, lr
   2260c:	bl	24ad0 <fold_op>
   22610:	ldr	r0, [sl, #12]
   22614:	movw	r2, #8923	; 0x22db
   22618:	ldr	ip, [sp, #24]
   2261c:	movt	r2, #39383	; 0x99d7
   22620:	lsl	r1, r0, #4
   22624:	umull	r1, r2, r1, r2
   22628:	lsr	r1, r2, #7
   2262c:	mov	r2, #213	; 0xd5
   22630:	mul	r1, r1, r2
   22634:	rsb	r1, r1, r0, lsl #4
   22638:	ldr	r2, [r4, r1, lsl #2]
   2263c:	cmp	r2, #0
   22640:	beq	22670 <opt_loop+0x1348>
   22644:	ldr	r3, [r2]
   22648:	cmp	r3, #0
   2264c:	bne	22664 <opt_loop+0x133c>
   22650:	ldr	r3, [r2, #4]
   22654:	cmp	r3, r0
   22658:	ldreq	r3, [r2, #8]
   2265c:	cmpeq	r3, #0
   22660:	beq	2218c <opt_loop+0xe64>
   22664:	ldr	r2, [r2, #16]
   22668:	cmp	r2, #0
   2266c:	bne	22644 <opt_loop+0x131c>
   22670:	ldr	r2, [pc, #3964]	; 235f4 <opt_loop+0x22cc>
   22674:	mov	r4, #1
   22678:	ldr	r2, [pc, r2]
   2267c:	ldr	r3, [pc, #3956]	; 235f8 <opt_loop+0x22d0>
   22680:	add	r2, r2, #1
   22684:	add	r3, pc, r3
   22688:	str	r2, [r3]
   2268c:	ldr	r3, [pc, #3944]	; 235fc <opt_loop+0x22d4>
   22690:	ldr	r3, [pc, r3]
   22694:	add	r3, r3, r2, lsl #3
   22698:	str	r0, [r3, #4]
   2269c:	ldr	r3, [pc, #3932]	; 23600 <opt_loop+0x22d8>
   226a0:	ldr	r3, [pc, r3]
   226a4:	str	r4, [r3, r2, lsl #3]
   226a8:	ldr	r3, [pc, #3924]	; 23604 <opt_loop+0x22dc>
   226ac:	ldr	r3, [pc, r3]
   226b0:	ldr	r6, [pc, #3920]	; 23608 <opt_loop+0x22e0>
   226b4:	add	r7, r3, #20
   226b8:	add	r6, pc, r6
   226bc:	str	r7, [r6]
   226c0:	str	r8, [r3]
   226c4:	str	r2, [r3, #12]
   226c8:	stmib	r3, {r0, r8}
   226cc:	ldr	lr, [pc, #3896]	; 2360c <opt_loop+0x22e4>
   226d0:	add	lr, pc, lr
   226d4:	b	2358c <opt_loop+0x2264>
   226d8:	.word	0x00025e30
   226dc:	cmp	ip, #0
   226e0:	beq	229e0 <opt_loop+0x16b8>
   226e4:	ldr	r1, [r9, #200]	; 0xc8
   226e8:	ldr	r2, [r9, #204]	; 0xcc
   226ec:	ldr	r7, [pc, #3868]	; 23610 <opt_loop+0x22e8>
   226f0:	and	r3, r0, #240	; 0xf0
   226f4:	ldr	r7, [pc, r7]
   226f8:	ldr	r4, [r7, r2, lsl #3]
   226fc:	ldr	r6, [r7, r1, lsl #3]
   22700:	cmp	r4, #0
   22704:	beq	22c00 <opt_loop+0x18d8>
   22708:	cmp	r6, #0
   2270c:	beq	22e14 <opt_loop+0x1aec>
   22710:	mov	r0, sl
   22714:	bl	24ad0 <fold_op>
   22718:	ldr	r5, [pc, #4072]	; 23708 <opt_loop+0x23e0>
   2271c:	ldr	r0, [sl, #12]
   22720:	movw	r2, #8923	; 0x22db
   22724:	ldr	ip, [sp, #24]
   22728:	movt	r2, #39383	; 0x99d7
   2272c:	lsl	r1, r0, #4
   22730:	add	r5, pc, r5
   22734:	umull	r1, r2, r1, r2
   22738:	lsr	r1, r2, #7
   2273c:	mov	r2, #213	; 0xd5
   22740:	mul	r1, r1, r2
   22744:	rsb	r1, r1, r0, lsl #4
   22748:	ldr	r2, [r5, r1, lsl #2]
   2274c:	cmp	r2, #0
   22750:	beq	22780 <opt_loop+0x1458>
   22754:	ldr	r3, [r2]
   22758:	cmp	r3, #0
   2275c:	bne	22774 <opt_loop+0x144c>
   22760:	ldr	r3, [r2, #4]
   22764:	cmp	r3, r0
   22768:	ldreq	r3, [r2, #8]
   2276c:	cmpeq	r3, #0
   22770:	beq	2219c <opt_loop+0xe74>
   22774:	ldr	r2, [r2, #16]
   22778:	cmp	r2, #0
   2277c:	bne	22754 <opt_loop+0x142c>
   22780:	ldr	r2, [pc, #3972]	; 2370c <opt_loop+0x23e4>
   22784:	mov	r7, #1
   22788:	ldr	r2, [pc, r2]
   2278c:	ldr	r3, [pc, #3964]	; 23710 <opt_loop+0x23e8>
   22790:	add	r2, r2, #1
   22794:	add	r3, pc, r3
   22798:	str	r2, [r3]
   2279c:	ldr	r3, [pc, #3952]	; 23714 <opt_loop+0x23ec>
   227a0:	ldr	r3, [pc, r3]
   227a4:	add	r3, r3, r2, lsl #3
   227a8:	str	r0, [r3, #4]
   227ac:	ldr	r3, [pc, #4084]	; 237a8 <opt_loop+0x2480>
   227b0:	ldr	r3, [pc, r3]
   227b4:	str	r7, [r3, r2, lsl #3]
   227b8:	ldr	r3, [pc, #4076]	; 237ac <opt_loop+0x2484>
   227bc:	ldr	r3, [pc, r3]
   227c0:	ldr	r6, [pc, #4072]	; 237b0 <opt_loop+0x2488>
   227c4:	add	r7, r3, #20
   227c8:	add	r6, pc, r6
   227cc:	str	r7, [r6]
   227d0:	str	r8, [r3]
   227d4:	str	r2, [r3, #12]
   227d8:	stmib	r3, {r0, r8}
   227dc:	ldr	r0, [r5, r1, lsl #2]
   227e0:	str	r0, [r3, #16]
   227e4:	str	r3, [r5, r1, lsl #2]
   227e8:	ldr	r5, [sp, #28]
   227ec:	str	r2, [r5]
   227f0:	ldr	lr, [pc, #4088]	; 237f0 <opt_loop+0x24c8>
   227f4:	add	lr, pc, lr
   227f8:	b	2371c <opt_loop+0x23f4>
   227fc:	.word	0x00026170
   22800:	ldr	r1, [sl, #12]
   22804:	movw	r3, #8923	; 0x22db
   22808:	mov	r4, #213	; 0xd5
   2280c:	movt	r3, #39383	; 0x99d7
   22810:	eor	r2, r0, r1, lsl #4
   22814:	umull	r3, r7, r2, r3
   22818:	lsr	r3, r7, #7
   2281c:	mls	r2, r3, r4, r2
   22820:	ldr	r3, [lr, r2, lsl #2]
   22824:	cmp	r3, #0
   22828:	beq	22858 <opt_loop+0x1530>
   2282c:	ldr	r7, [r3]
   22830:	cmp	r7, r0
   22834:	bne	2284c <opt_loop+0x1524>
   22838:	ldr	r7, [r3, #4]
   2283c:	cmp	r7, r1
   22840:	ldreq	r7, [r3, #8]
   22844:	cmpeq	r7, #0
   22848:	beq	235a8 <opt_loop+0x2280>
   2284c:	ldr	r3, [r3, #16]
   22850:	cmp	r3, #0
   22854:	bne	2282c <opt_loop+0x1504>
   22858:	ldr	r3, [pc, #4088]	; 23858 <opt_loop+0x2530>
   2285c:	tst	r0, #230	; 0xe6
   22860:	ldr	r3, [pc, r3]
   22864:	ldr	r4, [pc, #4080]	; 2385c <opt_loop+0x2534>
   22868:	add	r3, r3, #1
   2286c:	add	r4, pc, r4
   22870:	str	r3, [r4]
   22874:	bne	22898 <opt_loop+0x1570>
   22878:	ldr	r7, [pc, #4064]	; 23860 <opt_loop+0x2538>
   2287c:	mov	r4, #1
   22880:	ldr	r7, [pc, r7]
   22884:	add	r7, r7, r3, lsl #3
   22888:	str	r1, [r7, #4]
   2288c:	ldr	r7, [pc, #4048]	; 23864 <opt_loop+0x253c>
   22890:	ldr	r7, [pc, r7]
   22894:	str	r4, [r7, r3, lsl #3]
   22898:	ldr	r7, [pc, #4040]	; 23868 <opt_loop+0x2540>
   2289c:	ldr	r7, [pc, r7]
   228a0:	ldr	r5, [pc, #4036]	; 2386c <opt_loop+0x2544>
   228a4:	add	r6, r7, #20
   228a8:	add	r5, pc, r5
   228ac:	str	r6, [r5]
   228b0:	str	r3, [r7, #12]
   228b4:	stm	r7, {r0, r1, r8}
   228b8:	ldr	r0, [lr, r2, lsl #2]
   228bc:	ldr	r5, [sp, #28]
   228c0:	str	r0, [r7, #16]
   228c4:	str	r7, [lr, r2, lsl #2]
   228c8:	cmp	ip, #0
   228cc:	beq	228dc <opt_loop+0x15b4>
   228d0:	ldr	r0, [r5]
   228d4:	cmp	r0, r3
   228d8:	beq	236fc <opt_loop+0x23d4>
   228dc:	str	r3, [r5]
   228e0:	b	2371c <opt_loop+0x23f4>
   228e4:	ldr	r1, [r9, #204]	; 0xcc
   228e8:	cmp	ip, #0
   228ec:	beq	22d38 <opt_loop+0x1a10>
   228f0:	ldr	r2, [pc, #4072]	; 238e0 <opt_loop+0x25b8>
   228f4:	ldr	r2, [pc, r2]
   228f8:	ldr	r2, [r2, r1, lsl #3]
   228fc:	cmp	r2, #0
   22900:	beq	22d38 <opt_loop+0x1a10>
   22904:	and	r0, r0, #24
   22908:	movw	r3, #8923	; 0x22db
   2290c:	mov	r4, #213	; 0xd5
   22910:	orr	r0, r0, #32
   22914:	movt	r3, #39383	; 0x99d7
   22918:	str	r0, [sl]
   2291c:	ldr	r2, [pc, #4080]	; 23914 <opt_loop+0x25ec>
   22920:	ldr	r2, [pc, r2]
   22924:	add	r1, r2, r1, lsl #3
   22928:	ldr	r2, [sl, #12]
   2292c:	ldr	r1, [r1, #4]
   22930:	add	r1, r2, r1
   22934:	eor	r2, r0, r1, lsl #4
   22938:	str	r1, [sl, #12]
   2293c:	umull	r3, r7, r2, r3
   22940:	lsr	r3, r7, #7
   22944:	mls	r3, r3, r4, r2
   22948:	ldr	r2, [lr, r3, lsl #2]
   2294c:	cmp	r2, #0
   22950:	beq	22980 <opt_loop+0x1658>
   22954:	ldr	r7, [r2]
   22958:	cmp	r7, r0
   2295c:	bne	22974 <opt_loop+0x164c>
   22960:	ldr	r7, [r2, #4]
   22964:	cmp	r7, r1
   22968:	ldreq	r7, [r2, #8]
   2296c:	cmpeq	r7, #0
   22970:	beq	221b4 <opt_loop+0xe8c>
   22974:	ldr	r2, [r2, #16]
   22978:	cmp	r2, #0
   2297c:	bne	22954 <opt_loop+0x162c>
   22980:	ldr	r2, [pc, #4032]	; 23948 <opt_loop+0x2620>
   22984:	ldr	r2, [pc, r2]
   22988:	ldr	r4, [pc, #4028]	; 2394c <opt_loop+0x2624>
   2298c:	add	r2, r2, #1
   22990:	add	r4, pc, r4
   22994:	str	r2, [r4]
   22998:	ldr	r7, [pc, #4016]	; 23950 <opt_loop+0x2628>
   2299c:	ldr	r7, [pc, r7]
   229a0:	ldr	r5, [pc, #4012]	; 23954 <opt_loop+0x262c>
   229a4:	add	r6, r7, #20
   229a8:	add	r5, pc, r5
   229ac:	str	r6, [r5]
   229b0:	ldr	r5, [sp, #28]
   229b4:	str	r2, [r7, #12]
   229b8:	stm	r7, {r0, r1, r8}
   229bc:	ldr	r0, [lr, r3, lsl #2]
   229c0:	str	r0, [r7, #16]
   229c4:	str	r7, [lr, r3, lsl #2]
   229c8:	ldr	r0, [pc, #3976]	; 23958 <opt_loop+0x2630>
   229cc:	add	r0, pc, r0
   229d0:	strb	r8, [r0]
   229d4:	cmp	ip, #0
   229d8:	bne	235d0 <opt_loop+0x22a8>
   229dc:	b	235dc <opt_loop+0x22b4>
   229e0:	ldr	r1, [r9, #200]	; 0xc8
   229e4:	ldr	r2, [r9, #204]	; 0xcc
   229e8:	eor	r3, r0, r2, lsl #8
   229ec:	movw	r4, #8923	; 0x22db
   229f0:	eor	r3, r3, r1, lsl #4
   229f4:	movt	r4, #39383	; 0x99d7
   229f8:	umull	r7, r6, r3, r4
   229fc:	mov	r4, #213	; 0xd5
   22a00:	lsr	r7, r6, #7
   22a04:	mls	r3, r7, r4, r3
   22a08:	ldr	r7, [lr, r3, lsl #2]
   22a0c:	cmp	r7, #0
   22a10:	beq	22b7c <opt_loop+0x1854>
   22a14:	ldr	r6, [r7]
   22a18:	cmp	r6, r0
   22a1c:	ldreq	r6, [r7, #4]
   22a20:	cmpeq	r6, r1
   22a24:	beq	22a38 <opt_loop+0x1710>
   22a28:	ldr	r7, [r7, #16]
   22a2c:	cmp	r7, #0
   22a30:	bne	22a14 <opt_loop+0x16ec>
   22a34:	b	22b7c <opt_loop+0x1854>
   22a38:	ldr	r6, [r7, #8]
   22a3c:	cmp	r6, r2
   22a40:	bne	22a28 <opt_loop+0x1700>
   22a44:	b	22f5c <opt_loop+0x1c34>
   22a48:	.word	0x000259fc
   22a4c:	.word	0x000259f8
   22a50:	.word	0x000259c4
   22a54:	ldr	r3, [sl, #12]
   22a58:	ldr	r1, [r5]
   22a5c:	movw	r4, #8923	; 0x22db
   22a60:	lsl	r2, r3, #4
   22a64:	movt	r4, #39383	; 0x99d7
   22a68:	umull	r2, r7, r2, r4
   22a6c:	mov	r4, #213	; 0xd5
   22a70:	lsr	r2, r7, #7
   22a74:	mul	r2, r2, r4
   22a78:	rsb	r6, r2, r3, lsl #4
   22a7c:	ldr	r2, [lr, r6, lsl #2]
   22a80:	cmp	r2, #0
   22a84:	beq	22ab4 <opt_loop+0x178c>
   22a88:	ldr	r7, [r2]
   22a8c:	cmp	r7, #0
   22a90:	bne	22aa8 <opt_loop+0x1780>
   22a94:	ldr	r7, [r2, #4]
   22a98:	cmp	r7, r3
   22a9c:	ldreq	r7, [r2, #8]
   22aa0:	cmpeq	r7, #0
   22aa4:	beq	234e4 <opt_loop+0x21bc>
   22aa8:	ldr	r2, [r2, #16]
   22aac:	cmp	r2, #0
   22ab0:	bne	22a88 <opt_loop+0x1760>
   22ab4:	ldr	r2, [pc, #4088]	; 23ab4 <opt_loop+0x278c>
   22ab8:	ldr	r2, [pc, r2]
   22abc:	ldr	r4, [pc, #4084]	; 23ab8 <opt_loop+0x2790>
   22ac0:	add	r2, r2, #1
   22ac4:	add	r4, pc, r4
   22ac8:	str	r2, [r4]
   22acc:	mov	r4, #1
   22ad0:	ldr	r7, [pc, #4068]	; 23abc <opt_loop+0x2794>
   22ad4:	ldr	r7, [pc, r7]
   22ad8:	add	r7, r7, r2, lsl #3
   22adc:	str	r3, [r7, #4]
   22ae0:	ldr	r7, [pc, #4056]	; 23ac0 <opt_loop+0x2798>
   22ae4:	ldr	r7, [pc, r7]
   22ae8:	str	r4, [r7, r2, lsl #3]
   22aec:	ldr	r7, [pc, #4048]	; 23ac4 <opt_loop+0x279c>
   22af0:	ldr	r7, [pc, r7]
   22af4:	ldr	lr, [pc, #4044]	; 23ac8 <opt_loop+0x27a0>
   22af8:	add	r4, r7, #20
   22afc:	add	lr, pc, lr
   22b00:	str	r4, [lr]
   22b04:	ldr	lr, [pc, #4088]	; 23b04 <opt_loop+0x27dc>
   22b08:	str	r8, [r7]
   22b0c:	str	r2, [r7, #12]
   22b10:	stmib	r7, {r3, r8}
   22b14:	add	lr, pc, lr
   22b18:	ldr	r3, [lr, r6, lsl #2]
   22b1c:	str	r3, [r7, #16]
   22b20:	str	r7, [lr, r6, lsl #2]
   22b24:	eor	r3, r0, r1, lsl #4
   22b28:	movw	r4, #8923	; 0x22db
   22b2c:	eor	r3, r3, r2, lsl #8
   22b30:	movt	r4, #39383	; 0x99d7
   22b34:	umull	r7, r6, r3, r4
   22b38:	mov	r4, #213	; 0xd5
   22b3c:	lsr	r7, r6, #7
   22b40:	mls	r3, r7, r4, r3
   22b44:	ldr	r7, [lr, r3, lsl #2]
   22b48:	cmp	r7, #0
   22b4c:	beq	22b7c <opt_loop+0x1854>
   22b50:	ldr	r6, [r7]
   22b54:	cmp	r6, r0
   22b58:	bne	22b70 <opt_loop+0x1848>
   22b5c:	ldr	r6, [r7, #4]
   22b60:	cmp	r6, r1
   22b64:	ldreq	r6, [r7, #8]
   22b68:	cmpeq	r6, r2
   22b6c:	beq	22f5c <opt_loop+0x1c34>
   22b70:	ldr	r7, [r7, #16]
   22b74:	cmp	r7, #0
   22b78:	bne	22b50 <opt_loop+0x1828>
   22b7c:	ldr	r7, [pc, #4088]	; 23b7c <opt_loop+0x2854>
   22b80:	tst	r0, #230	; 0xe6
   22b84:	ldr	r7, [pc, r7]
   22b88:	ldr	r4, [pc, #4080]	; 23b80 <opt_loop+0x2858>
   22b8c:	add	r7, r7, #1
   22b90:	add	r4, pc, r4
   22b94:	str	r7, [r4]
   22b98:	bne	22bbc <opt_loop+0x1894>
   22b9c:	ldr	r6, [pc, #4080]	; 23b94 <opt_loop+0x286c>
   22ba0:	mov	r4, #1
   22ba4:	ldr	r6, [pc, r6]
   22ba8:	add	r6, r6, r7, lsl #3
   22bac:	str	r1, [r6, #4]
   22bb0:	ldr	r6, [pc, #4084]	; 23bac <opt_loop+0x2884>
   22bb4:	ldr	r6, [pc, r6]
   22bb8:	str	r4, [r6, r7, lsl #3]
   22bbc:	ldr	r6, [pc, #4076]	; 23bb0 <opt_loop+0x2888>
   22bc0:	ldr	r6, [pc, r6]
   22bc4:	ldr	r5, [pc, #4092]	; 23bc8 <opt_loop+0x28a0>
   22bc8:	add	r4, r6, #20
   22bcc:	add	r5, pc, r5
   22bd0:	str	r4, [r5]
   22bd4:	str	r0, [r6]
   22bd8:	str	r7, [r6, #12]
   22bdc:	str	r1, [r6, #4]
   22be0:	str	r2, [r6, #8]
   22be4:	ldr	r0, [lr, r3, lsl #2]
   22be8:	str	r0, [r6, #16]
   22bec:	str	r6, [lr, r3, lsl #2]
   22bf0:	ldr	r5, [sp, #28]
   22bf4:	str	r7, [r5]
   22bf8:	b	2371c <opt_loop+0x23f4>
   22bfc:	.word	0x00025da8
   22c00:	cmp	r6, #0
   22c04:	beq	229e8 <opt_loop+0x16c0>
   22c08:	add	r7, r7, r1, lsl #3
   22c0c:	ldr	r7, [r7, #4]
   22c10:	cmp	r7, #0
   22c14:	bne	229e8 <opt_loop+0x16c0>
   22c18:	orr	r7, r3, #64	; 0x40
   22c1c:	cmp	r7, #64	; 0x40
   22c20:	bne	23614 <opt_loop+0x22ec>
   22c24:	mov	r0, #135	; 0x87
   22c28:	str	r0, [sl]
   22c2c:	ldr	r1, [r9, #200]	; 0xc8
   22c30:	ldr	r0, [r9, #204]	; 0xcc
   22c34:	cmp	r1, r0
   22c38:	bne	23718 <opt_loop+0x23f0>
   22c3c:	b	236fc <opt_loop+0x23d4>
   22c40:	.word	0x00025940
   22c44:	and	r1, r0, #240	; 0xf0
   22c48:	sbfx	r2, r1, #4, #4
   22c4c:	cmp	r2, #0
   22c50:	blt	22c6c <opt_loop+0x1944>
   22c54:	lsr	r2, r1, #4
   22c58:	mov	r4, #1
   22c5c:	mov	r5, #209	; 0xd1
   22c60:	tst	r5, r4, lsl r2
   22c64:	ldr	r5, [sp, #28]
   22c68:	bne	236fc <opt_loop+0x23d4>
   22c6c:	cmp	r1, #80	; 0x50
   22c70:	cmpne	r1, #32
   22c74:	bne	22530 <opt_loop+0x1208>
   22c78:	str	r8, [sl]
   22c7c:	ldr	r0, [pc, #3932]	; 23be0 <opt_loop+0x28b8>
   22c80:	ldr	r0, [pc, r0]
   22c84:	cmp	r0, #0
   22c88:	beq	22cbc <opt_loop+0x1994>
   22c8c:	ldr	r1, [r0]
   22c90:	cmp	r1, #0
   22c94:	bne	22cb0 <opt_loop+0x1988>
   22c98:	ldr	r1, [r0, #4]
   22c9c:	cmp	r1, #0
   22ca0:	bne	22cb0 <opt_loop+0x1988>
   22ca4:	ldr	r1, [r0, #8]
   22ca8:	cmp	r1, #0
   22cac:	beq	221ec <opt_loop+0xec4>
   22cb0:	ldr	r0, [r0, #16]
   22cb4:	cmp	r0, #0
   22cb8:	bne	22c8c <opt_loop+0x1964>
   22cbc:	ldr	r0, [pc, #3872]	; 23be4 <opt_loop+0x28bc>
   22cc0:	mov	r2, #1
   22cc4:	ldr	r0, [pc, r0]
   22cc8:	ldr	r1, [pc, #3864]	; 23be8 <opt_loop+0x28c0>
   22ccc:	add	r0, r0, #1
   22cd0:	add	r1, pc, r1
   22cd4:	str	r0, [r1]
   22cd8:	ldr	r1, [pc, #3852]	; 23bec <opt_loop+0x28c4>
   22cdc:	ldr	r1, [pc, r1]
   22ce0:	add	r1, r1, r0, lsl #3
   22ce4:	str	r8, [r1, #4]
   22ce8:	ldr	r1, [pc, #3840]	; 23bf0 <opt_loop+0x28c8>
   22cec:	ldr	r1, [pc, r1]
   22cf0:	str	r2, [r1, r0, lsl #3]
   22cf4:	ldr	r1, [pc, #3832]	; 23bf4 <opt_loop+0x28cc>
   22cf8:	ldr	r1, [pc, r1]
   22cfc:	ldr	r3, [pc, #3828]	; 23bf8 <opt_loop+0x28d0>
   22d00:	add	r2, r1, #20
   22d04:	add	r3, pc, r3
   22d08:	str	r2, [r3]
   22d0c:	str	r8, [r1]
   22d10:	str	r0, [r1, #12]
   22d14:	str	r8, [r1, #4]
   22d18:	str	r8, [r1, #8]
   22d1c:	ldr	r2, [pc, #3800]	; 23bfc <opt_loop+0x28d4>
   22d20:	ldr	r2, [pc, r2]
   22d24:	str	r2, [r1, #16]
   22d28:	str	r1, [lr]
   22d2c:	str	r0, [r5]
   22d30:	b	2371c <opt_loop+0x23f4>
   22d34:	.word	0x00025794
   22d38:	ldr	r3, [sl, #12]
   22d3c:	eor	r2, r0, r1, lsl #8
   22d40:	movw	r4, #8923	; 0x22db
   22d44:	movt	r4, #39383	; 0x99d7
   22d48:	eor	r2, r2, r3, lsl #4
   22d4c:	umull	r7, r6, r2, r4
   22d50:	mov	r4, #213	; 0xd5
   22d54:	lsr	r7, r6, #7
   22d58:	mls	r6, r7, r4, r2
   22d5c:	ldr	r2, [lr, r6, lsl #2]
   22d60:	cmp	r2, #0
   22d64:	beq	22d94 <opt_loop+0x1a6c>
   22d68:	ldr	r7, [r2]
   22d6c:	cmp	r7, r0
   22d70:	bne	22d88 <opt_loop+0x1a60>
   22d74:	ldr	r7, [r2, #4]
   22d78:	cmp	r7, r3
   22d7c:	ldreq	r7, [r2, #8]
   22d80:	cmpeq	r7, r1
   22d84:	beq	235c4 <opt_loop+0x229c>
   22d88:	ldr	r2, [r2, #16]
   22d8c:	cmp	r2, #0
   22d90:	bne	22d68 <opt_loop+0x1a40>
   22d94:	ldr	r2, [pc, #3684]	; 23c00 <opt_loop+0x28d8>
   22d98:	tst	r0, #230	; 0xe6
   22d9c:	ldr	r2, [pc, r2]
   22da0:	ldr	r4, [pc, #3676]	; 23c04 <opt_loop+0x28dc>
   22da4:	add	r2, r2, #1
   22da8:	add	r4, pc, r4
   22dac:	str	r2, [r4]
   22db0:	bne	22dd4 <opt_loop+0x1aac>
   22db4:	ldr	r7, [pc, #3660]	; 23c08 <opt_loop+0x28e0>
   22db8:	mov	r4, #1
   22dbc:	ldr	r7, [pc, r7]
   22dc0:	add	r7, r7, r2, lsl #3
   22dc4:	str	r3, [r7, #4]
   22dc8:	ldr	r7, [pc, #4080]	; 23dc0 <opt_loop+0x2a98>
   22dcc:	ldr	r7, [pc, r7]
   22dd0:	str	r4, [r7, r2, lsl #3]
   22dd4:	ldr	r7, [pc, #4072]	; 23dc4 <opt_loop+0x2a9c>
   22dd8:	ldr	r7, [pc, r7]
   22ddc:	ldr	r5, [pc, #4068]	; 23dc8 <opt_loop+0x2aa0>
   22de0:	add	r4, r7, #20
   22de4:	add	r5, pc, r5
   22de8:	str	r4, [r5]
   22dec:	str	r2, [r7, #12]
   22df0:	stm	r7, {r0, r3}
   22df4:	str	r1, [r7, #8]
   22df8:	ldr	r0, [lr, r6, lsl #2]
   22dfc:	ldr	r5, [sp, #28]
   22e00:	str	r0, [r7, #16]
   22e04:	str	r7, [lr, r6, lsl #2]
   22e08:	cmp	ip, #0
   22e0c:	bne	235d0 <opt_loop+0x22a8>
   22e10:	b	235dc <opt_loop+0x22b4>
   22e14:	orr	r0, r3, #4
   22e18:	movw	r2, #8923	; 0x22db
   22e1c:	str	r0, [sl]
   22e20:	movt	r2, #39383	; 0x99d7
   22e24:	ldr	r1, [r9, #204]	; 0xcc
   22e28:	ldr	r7, [pc, #3996]	; 23dcc <opt_loop+0x2aa4>
   22e2c:	ldr	r7, [pc, r7]
   22e30:	add	r1, r7, r1, lsl #3
   22e34:	ldr	r3, [r1, #4]
   22e38:	str	r3, [sl, #12]
   22e3c:	ldr	r1, [pc, #3980]	; 23dd0 <opt_loop+0x2aa8>
   22e40:	add	r1, pc, r1
   22e44:	strb	r8, [r1]
   22e48:	lsl	r1, r3, #4
   22e4c:	umull	r1, r2, r1, r2
   22e50:	lsr	r1, r2, #7
   22e54:	mov	r2, #213	; 0xd5
   22e58:	mul	r1, r1, r2
   22e5c:	rsb	r6, r1, r3, lsl #4
   22e60:	ldr	r1, [r9, #200]	; 0xc8
   22e64:	ldr	r2, [lr, r6, lsl #2]
   22e68:	cmp	r2, #0
   22e6c:	beq	22e9c <opt_loop+0x1b74>
   22e70:	ldr	r4, [r2]
   22e74:	cmp	r4, #0
   22e78:	bne	22e90 <opt_loop+0x1b68>
   22e7c:	ldr	r4, [r2, #4]
   22e80:	cmp	r4, r3
   22e84:	ldreq	r4, [r2, #8]
   22e88:	cmpeq	r4, #0
   22e8c:	beq	221bc <opt_loop+0xe94>
   22e90:	ldr	r2, [r2, #16]
   22e94:	cmp	r2, #0
   22e98:	bne	22e70 <opt_loop+0x1b48>
   22e9c:	ldr	r2, [pc, #3888]	; 23dd4 <opt_loop+0x2aac>
   22ea0:	ldr	r2, [pc, r2]
   22ea4:	ldr	r4, [pc, #3884]	; 23dd8 <opt_loop+0x2ab0>
   22ea8:	add	r2, r2, #1
   22eac:	add	r4, pc, r4
   22eb0:	add	r7, r7, r2, lsl #3
   22eb4:	str	r2, [r4]
   22eb8:	mov	r4, #1
   22ebc:	str	r3, [r7, #4]
   22ec0:	ldr	r7, [pc, #3860]	; 23ddc <opt_loop+0x2ab4>
   22ec4:	ldr	r7, [pc, r7]
   22ec8:	str	r4, [r7, r2, lsl #3]
   22ecc:	ldr	r7, [pc, #3852]	; 23de0 <opt_loop+0x2ab8>
   22ed0:	ldr	r7, [pc, r7]
   22ed4:	ldr	r5, [pc, #3848]	; 23de4 <opt_loop+0x2abc>
   22ed8:	add	r4, r7, #20
   22edc:	add	r5, pc, r5
   22ee0:	str	r4, [r5]
   22ee4:	str	r8, [r7]
   22ee8:	str	r2, [r7, #12]
   22eec:	stmib	r7, {r3, r8}
   22ef0:	ldr	r3, [lr, r6, lsl #2]
   22ef4:	str	r3, [r7, #16]
   22ef8:	str	r7, [lr, r6, lsl #2]
   22efc:	eor	r3, r0, r1, lsl #4
   22f00:	movw	r4, #8923	; 0x22db
   22f04:	ldr	r5, [sp, #28]
   22f08:	eor	r3, r3, r2, lsl #8
   22f0c:	movt	r4, #39383	; 0x99d7
   22f10:	umull	r7, r6, r3, r4
   22f14:	mov	r4, #213	; 0xd5
   22f18:	lsr	r7, r6, #7
   22f1c:	mls	r3, r7, r4, r3
   22f20:	ldr	r7, [lr, r3, lsl #2]
   22f24:	cmp	r7, #0
   22f28:	beq	22f7c <opt_loop+0x1c54>
   22f2c:	ldr	r6, [r7]
   22f30:	cmp	r6, r0
   22f34:	ldreq	r6, [r7, #4]
   22f38:	cmpeq	r6, r1
   22f3c:	beq	22f50 <opt_loop+0x1c28>
   22f40:	ldr	r7, [r7, #16]
   22f44:	cmp	r7, #0
   22f48:	bne	22f2c <opt_loop+0x1c04>
   22f4c:	b	22f7c <opt_loop+0x1c54>
   22f50:	ldr	r6, [r7, #8]
   22f54:	cmp	r6, r2
   22f58:	bne	22f40 <opt_loop+0x1c18>
   22f5c:	ldr	r0, [r7, #12]
   22f60:	str	r0, [r5]
   22f64:	b	2371c <opt_loop+0x23f4>
   22f68:	.word	0x000255f8
   22f6c:	.word	0x00025a24
   22f70:	.word	0x00025a18
   22f74:	.word	0x00025a14
   22f78:	.word	0x000255d4
   22f7c:	ldr	r7, [pc, #4052]	; 23f58 <opt_loop+0x2c30>
   22f80:	ldr	r7, [pc, r7]
   22f84:	ldr	r4, [pc, #4048]	; 23f5c <opt_loop+0x2c34>
   22f88:	add	r7, r7, #1
   22f8c:	add	r4, pc, r4
   22f90:	str	r7, [r4]
   22f94:	ldr	r6, [pc, #4036]	; 23f60 <opt_loop+0x2c38>
   22f98:	ldr	r6, [pc, r6]
   22f9c:	ldr	r5, [pc, #4032]	; 23f64 <opt_loop+0x2c3c>
   22fa0:	add	r4, r6, #20
   22fa4:	add	r5, pc, r5
   22fa8:	str	r4, [r5]
   22fac:	ldr	r5, [sp, #28]
   22fb0:	stm	r6, {r0, r1, r2, r7}
   22fb4:	ldr	r0, [lr, r3, lsl #2]
   22fb8:	str	r0, [r6, #16]
   22fbc:	str	r6, [lr, r3, lsl #2]
   22fc0:	str	r7, [r5]
   22fc4:	b	2371c <opt_loop+0x23f4>
   22fc8:	.word	0x000255c0
   22fcc:	.word	0x00025584
   22fd0:	.word	0x000259b4
   22fd4:	.word	0x00025570
   22fd8:	.word	0x00025980
   22fdc:	.word	0x00025920
   22fe0:	.word	0x000254a4
   22fe4:	cmp	ip, #0
   22fe8:	beq	234f0 <opt_loop+0x21c8>
   22fec:	ldr	r0, [r5]
   22ff0:	ldr	r1, [pc, #3952]	; 23f68 <opt_loop+0x2c40>
   22ff4:	ldr	r1, [pc, r1]
   22ff8:	ldr	r1, [r1, r0, lsl #3]
   22ffc:	cmp	r1, #0
   23000:	beq	234f4 <opt_loop+0x21cc>
   23004:	str	r8, [sl]
   23008:	movw	r3, #8923	; 0x22db
   2300c:	ldr	r0, [r5]
   23010:	ldr	r2, [pc, #3924]	; 23f6c <opt_loop+0x2c44>
   23014:	movt	r3, #39383	; 0x99d7
   23018:	ldr	r2, [pc, r2]
   2301c:	add	r0, r2, r0, lsl #3
   23020:	ldr	r0, [r0, #4]
   23024:	rsb	r0, r0, #0
   23028:	lsl	r1, r0, #4
   2302c:	str	r0, [sl, #12]
   23030:	umull	r1, r3, r1, r3
   23034:	lsr	r1, r3, #7
   23038:	mov	r3, #213	; 0xd5
   2303c:	mul	r1, r1, r3
   23040:	rsb	r1, r1, r0, lsl #4
   23044:	ldr	r3, [lr, r1, lsl #2]
   23048:	cmp	r3, #0
   2304c:	beq	2307c <opt_loop+0x1d54>
   23050:	ldr	r7, [r3]
   23054:	cmp	r7, #0
   23058:	bne	23070 <opt_loop+0x1d48>
   2305c:	ldr	r7, [r3, #4]
   23060:	cmp	r7, r0
   23064:	ldreq	r7, [r3, #8]
   23068:	cmpeq	r7, #0
   2306c:	beq	221e0 <opt_loop+0xeb8>
   23070:	ldr	r3, [r3, #16]
   23074:	cmp	r3, #0
   23078:	bne	23050 <opt_loop+0x1d28>
   2307c:	ldr	r3, [pc, #4068]	; 24068 <opt_loop+0x2d40>
   23080:	ldr	r3, [pc, r3]
   23084:	ldr	r4, [pc, #4064]	; 2406c <opt_loop+0x2d44>
   23088:	add	r3, r3, #1
   2308c:	add	r4, pc, r4
   23090:	add	r2, r2, r3, lsl #3
   23094:	str	r3, [r4]
   23098:	mov	r4, #1
   2309c:	str	r0, [r2, #4]
   230a0:	ldr	r2, [pc, #4040]	; 24070 <opt_loop+0x2d48>
   230a4:	ldr	r2, [pc, r2]
   230a8:	str	r4, [r2, r3, lsl #3]
   230ac:	ldr	r2, [pc, #4032]	; 24074 <opt_loop+0x2d4c>
   230b0:	ldr	r2, [pc, r2]
   230b4:	ldr	r6, [pc, #4028]	; 24078 <opt_loop+0x2d50>
   230b8:	add	r7, r2, #20
   230bc:	add	r6, pc, r6
   230c0:	str	r7, [r6]
   230c4:	str	r8, [r2]
   230c8:	str	r3, [r2, #12]
   230cc:	stmib	r2, {r0, r8}
   230d0:	ldr	r0, [lr, r1, lsl #2]
   230d4:	str	r0, [r2, #16]
   230d8:	str	r2, [lr, r1, lsl #2]
   230dc:	str	r3, [r5]
   230e0:	b	2371c <opt_loop+0x23f4>
   230e4:	.word	0x00025498
   230e8:	ldr	r0, [r5]
   230ec:	cmp	ip, #0
   230f0:	bne	2341c <opt_loop+0x20f4>
   230f4:	b	23428 <opt_loop+0x2100>
   230f8:	ldr	r0, [sl, #12]
   230fc:	mov	r1, #177	; 0xb1
   23100:	movw	r2, #8923	; 0x22db
   23104:	movt	r2, #39383	; 0x99d7
   23108:	eor	r1, r1, r0, lsl #4
   2310c:	umull	r2, r3, r1, r2
   23110:	lsr	r2, r3, #7
   23114:	mov	r3, #213	; 0xd5
   23118:	mls	r1, r2, r3, r1
   2311c:	ldr	r2, [lr, r1, lsl #2]
   23120:	cmp	r2, #0
   23124:	beq	23154 <opt_loop+0x1e2c>
   23128:	ldr	r3, [r2]
   2312c:	cmp	r3, #177	; 0xb1
   23130:	bne	23148 <opt_loop+0x1e20>
   23134:	ldr	r3, [r2, #4]
   23138:	cmp	r3, r0
   2313c:	ldreq	r3, [r2, #8]
   23140:	cmpeq	r3, #0
   23144:	beq	235e4 <opt_loop+0x22bc>
   23148:	ldr	r2, [r2, #16]
   2314c:	cmp	r2, #0
   23150:	bne	23128 <opt_loop+0x1e00>
   23154:	ldr	r2, [pc, #3940]	; 240c0 <opt_loop+0x2d98>
   23158:	mov	r4, #177	; 0xb1
   2315c:	ldr	r2, [pc, r2]
   23160:	ldr	r3, [pc, #3932]	; 240c4 <opt_loop+0x2d9c>
   23164:	add	r2, r2, #1
   23168:	add	r3, pc, r3
   2316c:	str	r2, [r3]
   23170:	ldr	r3, [pc, #3920]	; 240c8 <opt_loop+0x2da0>
   23174:	ldr	r3, [pc, r3]
   23178:	ldr	r6, [pc, #3916]	; 240cc <opt_loop+0x2da4>
   2317c:	add	r7, r3, #20
   23180:	add	r6, pc, r6
   23184:	str	r7, [r6]
   23188:	str	r4, [r3]
   2318c:	b	23370 <opt_loop+0x2048>
   23190:	ldr	r0, [sl, #12]
   23194:	ldr	r1, [r9, #200]	; 0xc8
   23198:	b	233a8 <opt_loop+0x2080>
   2319c:	.word	0x000253e4
   231a0:	ldr	r0, [sl, #12]
   231a4:	cmp	ip, #0
   231a8:	add	r0, r9, r0, lsl #2
   231ac:	ldr	r0, [r0, #136]	; 0x88
   231b0:	beq	23718 <opt_loop+0x23f0>
   231b4:	ldr	r1, [pc, #3860]	; 240d0 <opt_loop+0x2da8>
   231b8:	ldr	r1, [pc, r1]
   231bc:	ldr	r1, [r1, r0, lsl #3]
   231c0:	cmp	r1, #0
   231c4:	beq	236f0 <opt_loop+0x23c8>
   231c8:	str	r8, [sl]
   231cc:	ldr	r1, [pc, #4088]	; 241cc <opt_loop+0x2ea4>
   231d0:	ldr	r1, [pc, r1]
   231d4:	add	r1, r1, r0, lsl #3
   231d8:	ldr	r1, [r1, #4]
   231dc:	str	r1, [sl, #12]
   231e0:	ldr	r1, [pc, #4072]	; 241d0 <opt_loop+0x2ea8>
   231e4:	add	r1, pc, r1
   231e8:	strb	r8, [r1]
   231ec:	b	236f0 <opt_loop+0x23c8>
   231f0:	ldr	r0, [sl, #12]
   231f4:	movw	r2, #8923	; 0x22db
   231f8:	movt	r2, #39383	; 0x99d7
   231fc:	lsl	r1, r0, #4
   23200:	umull	r1, r2, r1, r2
   23204:	lsr	r1, r2, #7
   23208:	mov	r2, #213	; 0xd5
   2320c:	mul	r1, r1, r2
   23210:	rsb	r1, r1, r0, lsl #4
   23214:	ldr	r2, [lr, r1, lsl #2]
   23218:	cmp	r2, #0
   2321c:	beq	2324c <opt_loop+0x1f24>
   23220:	ldr	r3, [r2]
   23224:	cmp	r3, #0
   23228:	bne	23240 <opt_loop+0x1f18>
   2322c:	ldr	r3, [r2, #4]
   23230:	cmp	r3, r0
   23234:	ldreq	r3, [r2, #8]
   23238:	cmpeq	r3, #0
   2323c:	beq	235c4 <opt_loop+0x229c>
   23240:	ldr	r2, [r2, #16]
   23244:	cmp	r2, #0
   23248:	bne	23220 <opt_loop+0x1ef8>
   2324c:	ldr	r2, [pc, #4084]	; 24248 <opt_loop+0x2f20>
   23250:	mov	r4, #1
   23254:	ldr	r2, [pc, r2]
   23258:	ldr	r3, [pc, #4076]	; 2424c <opt_loop+0x2f24>
   2325c:	add	r2, r2, #1
   23260:	add	r3, pc, r3
   23264:	str	r2, [r3]
   23268:	ldr	r3, [pc, #4064]	; 24250 <opt_loop+0x2f28>
   2326c:	ldr	r3, [pc, r3]
   23270:	add	r3, r3, r2, lsl #3
   23274:	str	r0, [r3, #4]
   23278:	ldr	r3, [pc, #4052]	; 24254 <opt_loop+0x2f2c>
   2327c:	ldr	r3, [pc, r3]
   23280:	str	r4, [r3, r2, lsl #3]
   23284:	ldr	r3, [pc, #4044]	; 24258 <opt_loop+0x2f30>
   23288:	ldr	r3, [pc, r3]
   2328c:	ldr	r4, [pc, #4040]	; 2425c <opt_loop+0x2f34>
   23290:	add	r7, r3, #20
   23294:	add	r4, pc, r4
   23298:	str	r7, [r4]
   2329c:	str	r8, [r3]
   232a0:	str	r2, [r3, #12]
   232a4:	stmib	r3, {r0, r8}
   232a8:	ldr	r0, [lr, r1, lsl #2]
   232ac:	str	r0, [r3, #16]
   232b0:	str	r3, [lr, r1, lsl #2]
   232b4:	cmp	ip, #0
   232b8:	bne	235d0 <opt_loop+0x22a8>
   232bc:	b	235dc <opt_loop+0x22b4>
   232c0:	ldr	r0, [sl, #12]
   232c4:	movw	r2, #8923	; 0x22db
   232c8:	movt	r2, #39383	; 0x99d7
   232cc:	lsl	r1, r0, #4
   232d0:	umull	r1, r2, r1, r2
   232d4:	lsr	r1, r2, #7
   232d8:	mov	r2, #213	; 0xd5
   232dc:	mul	r1, r1, r2
   232e0:	rsb	r1, r1, r0, lsl #4
   232e4:	ldr	r2, [lr, r1, lsl #2]
   232e8:	cmp	r2, #0
   232ec:	beq	2331c <opt_loop+0x1ff4>
   232f0:	ldr	r3, [r2]
   232f4:	cmp	r3, #0
   232f8:	bne	23310 <opt_loop+0x1fe8>
   232fc:	ldr	r3, [r2, #4]
   23300:	cmp	r3, r0
   23304:	ldreq	r3, [r2, #8]
   23308:	cmpeq	r3, #0
   2330c:	beq	235e4 <opt_loop+0x22bc>
   23310:	ldr	r2, [r2, #16]
   23314:	cmp	r2, #0
   23318:	bne	232f0 <opt_loop+0x1fc8>
   2331c:	ldr	r2, [pc, #3900]	; 24260 <opt_loop+0x2f38>
   23320:	mov	r4, #1
   23324:	ldr	r2, [pc, r2]
   23328:	ldr	r3, [pc, #3892]	; 24264 <opt_loop+0x2f3c>
   2332c:	add	r2, r2, #1
   23330:	add	r3, pc, r3
   23334:	str	r2, [r3]
   23338:	ldr	r3, [pc, #3880]	; 24268 <opt_loop+0x2f40>
   2333c:	ldr	r3, [pc, r3]
   23340:	add	r3, r3, r2, lsl #3
   23344:	str	r0, [r3, #4]
   23348:	ldr	r3, [pc, #3868]	; 2426c <opt_loop+0x2f44>
   2334c:	ldr	r3, [pc, r3]
   23350:	str	r4, [r3, r2, lsl #3]
   23354:	ldr	r3, [pc, #3860]	; 24270 <opt_loop+0x2f48>
   23358:	ldr	r3, [pc, r3]
   2335c:	ldr	r4, [pc, #3856]	; 24274 <opt_loop+0x2f4c>
   23360:	add	r7, r3, #20
   23364:	add	r4, pc, r4
   23368:	str	r7, [r4]
   2336c:	str	r8, [r3]
   23370:	str	r2, [r3, #12]
   23374:	stmib	r3, {r0, r8}
   23378:	ldr	r0, [lr, r1, lsl #2]
   2337c:	str	r0, [r3, #16]
   23380:	str	r3, [lr, r1, lsl #2]
   23384:	cmp	ip, #0
   23388:	beq	23398 <opt_loop+0x2070>
   2338c:	ldr	r0, [r9, #204]	; 0xcc
   23390:	cmp	r0, r2
   23394:	beq	236fc <opt_loop+0x23d4>
   23398:	str	r2, [r9, #204]	; 0xcc
   2339c:	b	2371c <opt_loop+0x23f4>
   233a0:	ldr	r0, [sl, #12]
   233a4:	ldr	r1, [r9, #204]	; 0xcc
   233a8:	add	r0, r9, r0, lsl #2
   233ac:	add	r0, r0, #136	; 0x88
   233b0:	cmp	ip, #0
   233b4:	beq	233c4 <opt_loop+0x209c>
   233b8:	ldr	r2, [r0]
   233bc:	cmp	r2, r1
   233c0:	beq	236fc <opt_loop+0x23d4>
   233c4:	str	r1, [r0]
   233c8:	b	2371c <opt_loop+0x23f4>
   233cc:	ldr	r0, [sl, #12]
   233d0:	cmp	ip, #0
   233d4:	add	r0, r9, r0, lsl #2
   233d8:	ldr	r0, [r0, #136]	; 0x88
   233dc:	beq	23428 <opt_loop+0x2100>
   233e0:	ldr	r1, [pc, #3776]	; 242a8 <opt_loop+0x2f80>
   233e4:	ldr	r1, [pc, r1]
   233e8:	ldr	r1, [r1, r0, lsl #3]
   233ec:	cmp	r1, #0
   233f0:	beq	2341c <opt_loop+0x20f4>
   233f4:	mov	r1, #1
   233f8:	str	r1, [sl]
   233fc:	ldr	r1, [pc, #3752]	; 242ac <opt_loop+0x2f84>
   23400:	ldr	r1, [pc, r1]
   23404:	add	r1, r1, r0, lsl #3
   23408:	ldr	r1, [r1, #4]
   2340c:	str	r1, [sl, #12]
   23410:	ldr	r1, [pc, #3736]	; 242b0 <opt_loop+0x2f88>
   23414:	add	r1, pc, r1
   23418:	strb	r8, [r1]
   2341c:	ldr	r1, [r9, #204]	; 0xcc
   23420:	cmp	r1, r0
   23424:	beq	236fc <opt_loop+0x23d4>
   23428:	str	r0, [r9, #204]	; 0xcc
   2342c:	b	2371c <opt_loop+0x23f4>
   23430:	ldr	r0, [r9, #204]	; 0xcc
   23434:	cmp	ip, #0
   23438:	bne	236f0 <opt_loop+0x23c8>
   2343c:	b	23718 <opt_loop+0x23f0>
   23440:	ldr	r0, [lr, #512]	; 0x200
   23444:	cmp	r0, #0
   23448:	beq	2348c <opt_loop+0x2164>
   2344c:	ldr	r1, [r0]
   23450:	cmp	r1, #128	; 0x80
   23454:	ldreq	r1, [r0, #4]
   23458:	cmpeq	r1, #0
   2345c:	beq	23470 <opt_loop+0x2148>
   23460:	ldr	r0, [r0, #16]
   23464:	cmp	r0, #0
   23468:	bne	2344c <opt_loop+0x2124>
   2346c:	b	2348c <opt_loop+0x2164>
   23470:	ldr	r1, [r0, #8]
   23474:	cmp	r1, #0
   23478:	bne	23460 <opt_loop+0x2138>
   2347c:	ldr	r0, [r0, #12]
   23480:	cmp	ip, #0
   23484:	bne	236f0 <opt_loop+0x23c8>
   23488:	b	23718 <opt_loop+0x23f0>
   2348c:	ldr	r0, [pc, #3492]	; 24238 <opt_loop+0x2f10>
   23490:	ldr	r0, [pc, r0]
   23494:	ldr	r1, [pc, #3488]	; 2423c <opt_loop+0x2f14>
   23498:	add	r0, r0, #1
   2349c:	add	r1, pc, r1
   234a0:	str	r0, [r1]
   234a4:	ldr	r1, [pc, #3476]	; 24240 <opt_loop+0x2f18>
   234a8:	ldr	r1, [pc, r1]
   234ac:	ldr	r3, [pc, #3472]	; 24244 <opt_loop+0x2f1c>
   234b0:	add	r2, r1, #20
   234b4:	add	r3, pc, r3
   234b8:	str	r2, [r3]
   234bc:	mov	r2, #128	; 0x80
   234c0:	str	r0, [r1, #12]
   234c4:	stm	r1, {r2, r8}
   234c8:	str	r8, [r1, #8]
   234cc:	ldr	r2, [lr, #512]	; 0x200
   234d0:	str	r2, [r1, #16]
   234d4:	str	r1, [lr, #512]	; 0x200
   234d8:	cmp	ip, #0
   234dc:	bne	236f0 <opt_loop+0x23c8>
   234e0:	b	23718 <opt_loop+0x23f0>
   234e4:	ldr	r2, [r2, #12]
   234e8:	b	22b24 <opt_loop+0x17fc>
   234ec:	.word	0x00025488
   234f0:	ldr	r0, [r5]
   234f4:	mov	r1, #132	; 0x84
   234f8:	movw	r2, #8923	; 0x22db
   234fc:	eor	r1, r1, r0, lsl #4
   23500:	movt	r2, #39383	; 0x99d7
   23504:	umull	r2, r3, r1, r2
   23508:	lsr	r2, r3, #7
   2350c:	mov	r3, #213	; 0xd5
   23510:	mls	r1, r2, r3, r1
   23514:	ldr	r2, [lr, r1, lsl #2]
   23518:	cmp	r2, #0
   2351c:	beq	2354c <opt_loop+0x2224>
   23520:	ldr	r3, [r2]
   23524:	cmp	r3, #132	; 0x84
   23528:	bne	23540 <opt_loop+0x2218>
   2352c:	ldr	r3, [r2, #4]
   23530:	cmp	r3, r0
   23534:	ldreq	r3, [r2, #8]
   23538:	cmpeq	r3, #0
   2353c:	beq	221c4 <opt_loop+0xe9c>
   23540:	ldr	r2, [r2, #16]
   23544:	cmp	r2, #0
   23548:	bne	23520 <opt_loop+0x21f8>
   2354c:	ldr	r2, [pc, #3364]	; 24278 <opt_loop+0x2f50>
   23550:	mov	r4, #132	; 0x84
   23554:	ldr	r2, [pc, r2]
   23558:	ldr	r3, [pc, #3356]	; 2427c <opt_loop+0x2f54>
   2355c:	add	r2, r2, #1
   23560:	add	r3, pc, r3
   23564:	str	r2, [r3]
   23568:	ldr	r3, [pc, #3344]	; 24280 <opt_loop+0x2f58>
   2356c:	ldr	r3, [pc, r3]
   23570:	ldr	r6, [pc, #3340]	; 24284 <opt_loop+0x2f5c>
   23574:	add	r7, r3, #20
   23578:	add	r6, pc, r6
   2357c:	str	r7, [r6]
   23580:	str	r4, [r3]
   23584:	str	r2, [r3, #12]
   23588:	stmib	r3, {r0, r8}
   2358c:	ldr	r0, [lr, r1, lsl #2]
   23590:	str	r0, [r3, #16]
   23594:	str	r3, [lr, r1, lsl #2]
   23598:	str	r2, [r5]
   2359c:	b	2371c <opt_loop+0x23f4>
   235a0:	.word	0x00024fe0
   235a4:	.word	0x00024fd4
   235a8:	ldr	r3, [r3, #12]
   235ac:	cmp	ip, #0
   235b0:	bne	228d0 <opt_loop+0x15a8>
   235b4:	b	228dc <opt_loop+0x15b4>
   235b8:	.word	0x000253f8
   235bc:	.word	0x000253e4
   235c0:	.word	0x000253d8
   235c4:	ldr	r2, [r2, #12]
   235c8:	cmp	ip, #0
   235cc:	beq	235dc <opt_loop+0x22b4>
   235d0:	ldr	r0, [r5]
   235d4:	cmp	r0, r2
   235d8:	beq	236fc <opt_loop+0x23d4>
   235dc:	str	r2, [r5]
   235e0:	b	2371c <opt_loop+0x23f4>
   235e4:	ldr	r2, [r2, #12]
   235e8:	cmp	ip, #0
   235ec:	bne	2338c <opt_loop+0x2064>
   235f0:	b	23398 <opt_loop+0x2070>
   235f4:	.word	0x00024f0c
   235f8:	.word	0x00024f00
   235fc:	.word	0x00025330
   23600:	.word	0x00025320
   23604:	.word	0x0002530c
   23608:	.word	0x00025300
   2360c:	.word	0x00024ec0
   23610:	.word	0x000252cc
   23614:	sub	r3, r3, #32
   23618:	lsr	r3, r3, #4
   2361c:	cmp	r3, #6
   23620:	bhi	229e8 <opt_loop+0x16c0>
   23624:	mov	r4, #1
   23628:	mov	r5, #59	; 0x3b
   2362c:	tst	r5, r4, lsl r3
   23630:	beq	221d0 <opt_loop+0xea8>
   23634:	str	r8, [sl, #12]
   23638:	str	r8, [sl]
   2363c:	ldr	r0, [pc, #3140]	; 24288 <opt_loop+0x2f60>
   23640:	ldr	r0, [pc, r0]
   23644:	ldr	r5, [sp, #28]
   23648:	cmp	r0, #0
   2364c:	beq	23680 <opt_loop+0x2358>
   23650:	ldr	r1, [r0]
   23654:	cmp	r1, #0
   23658:	bne	23674 <opt_loop+0x234c>
   2365c:	ldr	r1, [r0, #4]
   23660:	cmp	r1, #0
   23664:	bne	23674 <opt_loop+0x234c>
   23668:	ldr	r1, [r0, #8]
   2366c:	cmp	r1, #0
   23670:	beq	221f8 <opt_loop+0xed0>
   23674:	ldr	r0, [r0, #16]
   23678:	cmp	r0, #0
   2367c:	bne	23650 <opt_loop+0x2328>
   23680:	ldr	r0, [pc, #3076]	; 2428c <opt_loop+0x2f64>
   23684:	mov	r2, #1
   23688:	ldr	r0, [pc, r0]
   2368c:	ldr	r1, [pc, #3068]	; 24290 <opt_loop+0x2f68>
   23690:	add	r0, r0, #1
   23694:	add	r1, pc, r1
   23698:	str	r0, [r1]
   2369c:	ldr	r1, [pc, #3056]	; 24294 <opt_loop+0x2f6c>
   236a0:	ldr	r1, [pc, r1]
   236a4:	add	r1, r1, r0, lsl #3
   236a8:	str	r8, [r1, #4]
   236ac:	ldr	r1, [pc, #3044]	; 24298 <opt_loop+0x2f70>
   236b0:	ldr	r1, [pc, r1]
   236b4:	str	r2, [r1, r0, lsl #3]
   236b8:	ldr	r1, [pc, #3036]	; 2429c <opt_loop+0x2f74>
   236bc:	ldr	r1, [pc, r1]
   236c0:	ldr	r3, [pc, #3032]	; 242a0 <opt_loop+0x2f78>
   236c4:	add	r2, r1, #20
   236c8:	add	r3, pc, r3
   236cc:	str	r2, [r3]
   236d0:	str	r8, [r1]
   236d4:	str	r0, [r1, #12]
   236d8:	str	r8, [r1, #4]
   236dc:	str	r8, [r1, #8]
   236e0:	ldr	r2, [pc, #3004]	; 242a4 <opt_loop+0x2f7c>
   236e4:	ldr	r2, [pc, r2]
   236e8:	str	r2, [r1, #16]
   236ec:	str	r1, [lr]
   236f0:	ldr	r1, [r5]
   236f4:	cmp	r1, r0
   236f8:	bne	23718 <opt_loop+0x23f0>
   236fc:	mvn	r0, #0
   23700:	str	r0, [sl]
   23704:	b	2371c <opt_loop+0x23f4>
   23708:	.word	0x00024e60
   2370c:	.word	0x00024dfc
   23710:	.word	0x00024df0
   23714:	.word	0x00025220
   23718:	str	r0, [r5]
   2371c:	ldr	sl, [sl, #16]
   23720:	cmp	sl, #0
   23724:	bne	22200 <opt_loop+0xed8>
   23728:	cmp	ip, #0
   2372c:	mov	r5, #1
   23730:	beq	237b4 <opt_loop+0x248c>
   23734:	ldr	r0, [sp, #20]
   23738:	cmp	r0, #0
   2373c:	beq	2377c <opt_loop+0x2454>
   23740:	ldr	r0, [r9, #128]	; 0x80
   23744:	cmp	r0, #0
   23748:	bne	2377c <opt_loop+0x2454>
   2374c:	ldr	r0, [sp, #16]
   23750:	cmp	r0, #0
   23754:	beq	2377c <opt_loop+0x2454>
   23758:	ldr	r0, [sp, #28]
   2375c:	ldr	r1, [sp, #20]
   23760:	ldr	r0, [r0]
   23764:	cmp	r0, r1
   23768:	bne	2377c <opt_loop+0x2454>
   2376c:	ldr	r0, [r9, #204]	; 0xcc
   23770:	ldr	r1, [sp, #16]
   23774:	cmp	r0, r1
   23778:	beq	2378c <opt_loop+0x2464>
   2377c:	ldr	r0, [r9, #8]
   23780:	and	r0, r0, #7
   23784:	cmp	r0, #6
   23788:	bne	237b4 <opt_loop+0x248c>
   2378c:	ldr	r0, [r9, #4]
   23790:	cmp	r0, #0
   23794:	strne	r8, [r9, #4]
   23798:	ldrne	r0, [pc, #2836]	; 242b4 <opt_loop+0x2f8c>
   2379c:	addne	r0, pc, r0
   237a0:	strbne	r8, [r0]
   237a4:	b	23cec <opt_loop+0x29c4>
   237a8:	.word	0x00025210
   237ac:	.word	0x000251fc
   237b0:	.word	0x000251f0
   237b4:	ldr	r0, [r9, #4]
   237b8:	add	r4, sp, #32
   237bc:	cmp	r0, #0
   237c0:	beq	23a14 <opt_loop+0x26ec>
   237c4:	add	sl, r9, #128	; 0x80
   237c8:	mov	r2, r0
   237cc:	mov	r1, r0
   237d0:	ldr	r3, [r1]
   237d4:	ldr	r0, [r1, #16]
   237d8:	cmn	r3, #1
   237dc:	bne	237f8 <opt_loop+0x24d0>
   237e0:	cmp	r0, #0
   237e4:	mov	r1, r0
   237e8:	bne	237d0 <opt_loop+0x24a8>
   237ec:	b	239a4 <opt_loop+0x267c>
   237f0:	.word	0x00024d9c
   237f4:	ldr	r0, [r0, #16]
   237f8:	cmp	r0, #0
   237fc:	beq	239a4 <opt_loop+0x267c>
   23800:	ldr	r7, [r0]
   23804:	cmn	r7, #1
   23808:	beq	237f4 <opt_loop+0x24cc>
   2380c:	cmp	r3, #2
   23810:	bne	23844 <opt_loop+0x251c>
   23814:	cmp	r7, #97	; 0x61
   23818:	bne	2384c <opt_loop+0x2524>
   2381c:	ldr	r2, [r0, #12]
   23820:	ldr	r3, [r1, #12]
   23824:	cmp	r3, r2
   23828:	bne	2384c <opt_loop+0x2524>
   2382c:	ldr	r2, [pc, #2692]	; 242b8 <opt_loop+0x2f90>
   23830:	mov	r7, #7
   23834:	add	r2, pc, r2
   23838:	strb	r8, [r2]
   2383c:	str	r7, [r0]
   23840:	ldr	r3, [r1]
   23844:	cmp	r3, #0
   23848:	beq	23870 <opt_loop+0x2548>
   2384c:	cmp	r0, #0
   23850:	bne	237c8 <opt_loop+0x24a0>
   23854:	b	239a0 <opt_loop+0x2678>
   23858:	.word	0x00024d24
   2385c:	.word	0x00024d18
   23860:	.word	0x00025140
   23864:	.word	0x00025130
   23868:	.word	0x0002511c
   2386c:	.word	0x00025110
   23870:	cmp	r7, #7
   23874:	bne	2389c <opt_loop+0x2574>
   23878:	mov	r2, #135	; 0x87
   2387c:	str	r5, [r1]
   23880:	str	r2, [r0]
   23884:	ldr	r2, [pc, #2608]	; 242bc <opt_loop+0x2f94>
   23888:	add	r2, pc, r2
   2388c:	strb	r8, [r2]
   23890:	ldr	r2, [r1]
   23894:	cmp	r2, #0
   23898:	bne	2384c <opt_loop+0x2524>
   2389c:	ldrb	r2, [sl, #2]
   238a0:	tst	r2, #2
   238a4:	bne	2384c <opt_loop+0x2524>
   238a8:	ldr	r3, [r0]
   238ac:	mov	r2, r0
   238b0:	cmp	r3, #177	; 0xb1
   238b4:	bne	238e4 <opt_loop+0x25bc>
   238b8:	ldr	r2, [r0, #16]
   238bc:	cmp	r2, #0
   238c0:	beq	2384c <opt_loop+0x2524>
   238c4:	ldr	r3, [r2]
   238c8:	cmn	r3, #1
   238cc:	bne	238e4 <opt_loop+0x25bc>
   238d0:	ldr	r2, [r2, #16]
   238d4:	cmp	r2, #0
   238d8:	bne	238c4 <opt_loop+0x259c>
   238dc:	b	2384c <opt_loop+0x2524>
   238e0:	.word	0x000250cc
   238e4:	cmp	r3, #12
   238e8:	bne	2384c <opt_loop+0x2524>
   238ec:	ldr	r3, [r2, #16]
   238f0:	cmp	r3, #0
   238f4:	beq	2384c <opt_loop+0x2524>
   238f8:	ldr	r7, [r3]
   238fc:	cmn	r7, #1
   23900:	bne	23918 <opt_loop+0x25f0>
   23904:	ldr	r3, [r3, #16]
   23908:	cmp	r3, #0
   2390c:	bne	238f8 <opt_loop+0x25d0>
   23910:	b	2384c <opt_loop+0x2524>
   23914:	.word	0x000250a0
   23918:	cmp	r7, #7
   2391c:	bne	2384c <opt_loop+0x2524>
   23920:	ldr	r7, [r3, #16]
   23924:	cmp	r7, #0
   23928:	beq	2384c <opt_loop+0x2524>
   2392c:	ldr	r6, [r7]
   23930:	cmn	r6, #1
   23934:	bne	2395c <opt_loop+0x2634>
   23938:	ldr	r7, [r7, #16]
   2393c:	cmp	r7, #0
   23940:	bne	2392c <opt_loop+0x2604>
   23944:	b	2384c <opt_loop+0x2524>
   23948:	.word	0x00024c00
   2394c:	.word	0x00024bf4
   23950:	.word	0x0002501c
   23954:	.word	0x00025010
   23958:	.word	0x00024b98
   2395c:	and	r6, r6, #231	; 0xe7
   23960:	cmp	r6, #64	; 0x40
   23964:	bne	2384c <opt_loop+0x2524>
   23968:	ldr	r6, [r1, #12]
   2396c:	ldr	r5, [r7, #12]
   23970:	add	r6, r5, r6
   23974:	mov	r5, #1
   23978:	str	r6, [r7, #12]
   2397c:	mvn	r7, #0
   23980:	str	r7, [r1]
   23984:	str	r7, [r2]
   23988:	str	r7, [r3]
   2398c:	ldr	r1, [pc, #2348]	; 242c0 <opt_loop+0x2f98>
   23990:	add	r1, pc, r1
   23994:	strb	r8, [r1]
   23998:	cmp	r0, #0
   2399c:	bne	237c8 <opt_loop+0x24a0>
   239a0:	mov	r2, #0
   239a4:	ldr	r0, [r9, #8]
   239a8:	ldr	r7, [sp, #28]
   239ac:	cmp	r0, #21
   239b0:	bne	23adc <opt_loop+0x27b4>
   239b4:	ldrb	r0, [sl, #2]
   239b8:	tst	r0, #1
   239bc:	bne	23ad8 <opt_loop+0x27b0>
   239c0:	ldr	r0, [r2]
   239c4:	cmp	r0, #20
   239c8:	beq	23a48 <opt_loop+0x2720>
   239cc:	cmp	r0, #84	; 0x54
   239d0:	beq	23a70 <opt_loop+0x2748>
   239d4:	cmp	r0, #28
   239d8:	bne	23ad8 <opt_loop+0x27b0>
   239dc:	ldr	r0, [r9, #204]	; 0xcc
   239e0:	ldr	r1, [pc, #2268]	; 242c4 <opt_loop+0x2f9c>
   239e4:	ldr	r1, [pc, r1]
   239e8:	ldr	r3, [r1, r0, lsl #3]
   239ec:	cmp	r3, #0
   239f0:	beq	23acc <opt_loop+0x27a4>
   239f4:	add	r0, r1, r0, lsl #3
   239f8:	ldr	r1, [r9, #20]
   239fc:	ldr	r0, [r0, #4]
   23a00:	add	r0, r1, r0
   23a04:	str	r0, [r9, #20]
   23a08:	mvn	r0, #0
   23a0c:	str	r0, [r2]
   23a10:	b	23a60 <opt_loop+0x2738>
   23a14:	mov	r0, r4
   23a18:	mov	r1, #68	; 0x44
   23a1c:	str	r8, [sp, #96]	; 0x60
   23a20:	add	sl, r9, #128	; 0x80
   23a24:	vst1.64	{d8-d9}, [r0], r1
   23a28:	str	r8, [r0]
   23a2c:	add	r0, r4, #48	; 0x30
   23a30:	vst1.64	{d8-d9}, [r0]
   23a34:	add	r0, r4, #32
   23a38:	vst1.64	{d8-d9}, [r0]
   23a3c:	add	r0, r4, #16
   23a40:	vst1.64	{d8-d9}, [r0]
   23a44:	b	23c98 <opt_loop+0x2970>
   23a48:	mvn	r0, #0
   23a4c:	str	r0, [r2]
   23a50:	ldr	r0, [r2, #12]
   23a54:	ldr	r1, [r9, #20]
   23a58:	add	r0, r1, r0
   23a5c:	str	r0, [r9, #20]
   23a60:	ldr	r0, [pc, #2144]	; 242c8 <opt_loop+0x2fa0>
   23a64:	add	r0, pc, r0
   23a68:	strb	r8, [r0]
   23a6c:	b	23ad8 <opt_loop+0x27b0>
   23a70:	ldr	r0, [r9, #20]
   23a74:	cmp	r0, #0
   23a78:	bne	23ad8 <opt_loop+0x27b0>
   23a7c:	ldr	r0, [r2, #12]
   23a80:	mov	r1, #69	; 0x45
   23a84:	str	r1, [r9, #8]
   23a88:	str	r0, [r9, #20]
   23a8c:	mvn	r0, #0
   23a90:	str	r0, [r2]
   23a94:	ldr	r0, [pc, #2096]	; 242cc <opt_loop+0x2fa4>
   23a98:	add	r0, pc, r0
   23a9c:	strb	r8, [r0]
   23aa0:	ldr	r0, [r9, #60]	; 0x3c
   23aa4:	ldr	r1, [r9, #84]	; 0x54
   23aa8:	str	r1, [r9, #60]	; 0x3c
   23aac:	str	r0, [r9, #84]	; 0x54
   23ab0:	b	23ad8 <opt_loop+0x27b0>
   23ab4:	.word	0x00024acc
   23ab8:	.word	0x00024ac0
   23abc:	.word	0x00024eec
   23ac0:	.word	0x00024edc
   23ac4:	.word	0x00024ec8
   23ac8:	.word	0x00024ebc
   23acc:	ldr	r0, [r9, #20]
   23ad0:	cmp	r0, #0
   23ad4:	beq	220ac <opt_loop+0xd84>
   23ad8:	ldr	r0, [r9, #8]
   23adc:	cmp	r0, #69	; 0x45
   23ae0:	bne	23b10 <opt_loop+0x27e8>
   23ae4:	ldr	r1, [r9, #20]
   23ae8:	mov	r0, #69	; 0x45
   23aec:	cmn	r1, #1
   23af0:	beq	23b08 <opt_loop+0x27e0>
   23af4:	cmp	r1, #0
   23af8:	ldreq	r1, [r9, #84]	; 0x54
   23afc:	streq	r1, [r9, #60]	; 0x3c
   23b00:	b	23b10 <opt_loop+0x27e8>
   23b04:	.word	0x00024a7c
   23b08:	ldr	r1, [r9, #60]	; 0x3c
   23b0c:	str	r1, [r9, #84]	; 0x54
   23b10:	ldr	r1, [pc, #1976]	; 242d0 <opt_loop+0x2fa8>
   23b14:	tst	r0, #8
   23b18:	ldr	r1, [pc, r1]
   23b1c:	ldrne	r2, [r9, #204]	; 0xcc
   23b20:	ldrne	r3, [r1, r2, lsl #3]
   23b24:	cmpne	r3, #0
   23b28:	addne	r2, r1, r2, lsl #3
   23b2c:	bicne	r0, r0, #8
   23b30:	ldrne	r2, [r2, #4]
   23b34:	strne	r0, [r9, #8]
   23b38:	strne	r2, [r9, #20]
   23b3c:	tst	r0, #8
   23b40:	bne	23c44 <opt_loop+0x291c>
   23b44:	ldr	r2, [r7]
   23b48:	ldr	r3, [r1, r2, lsl #3]
   23b4c:	cmp	r3, #0
   23b50:	beq	23c44 <opt_loop+0x291c>
   23b54:	and	r0, r0, #240	; 0xf0
   23b58:	sub	r0, r0, #16
   23b5c:	lsr	r3, r0, #4
   23b60:	cmp	r3, #3
   23b64:	bhi	24234 <opt_loop+0x2f0c>
   23b68:	add	r0, r1, r2, lsl #3
   23b6c:	ldr	r0, [r0, #4]
   23b70:	add	r1, pc, #12
   23b74:	ldr	r2, [r1, r3, lsl #2]
   23b78:	add	pc, r1, r2
   23b7c:	.word	0x00024a00
   23b80:	.word	0x000249f4
   23b84:	.word	0x00000014
   23b88:	.word	0x00000048
   23b8c:	.word	0x00000030
   23b90:	.word	0x00000088
   23b94:	.word	0x00024e1c
   23b98:	ldr	r1, [r9, #20]
   23b9c:	sub	r0, r0, r1
   23ba0:	clz	r0, r0
   23ba4:	lsr	r0, r0, #5
   23ba8:	b	23c14 <opt_loop+0x28ec>
   23bac:	.word	0x00024e0c
   23bb0:	.word	0x00024df8
   23bb4:	ldr	r1, [r9, #20]
   23bb8:	cmp	r0, r1
   23bbc:	mov	r0, #0
   23bc0:	movwcs	r0, #1
   23bc4:	b	23c14 <opt_loop+0x28ec>
   23bc8:	.word	0x00024dec
   23bcc:	ldr	r1, [r9, #20]
   23bd0:	cmp	r0, r1
   23bd4:	mov	r0, #0
   23bd8:	movwhi	r0, #1
   23bdc:	b	23c14 <opt_loop+0x28ec>
   23be0:	.word	0x00024910
   23be4:	.word	0x000248c0
   23be8:	.word	0x000248b4
   23bec:	.word	0x00024ce4
   23bf0:	.word	0x00024cd4
   23bf4:	.word	0x00024cc0
   23bf8:	.word	0x00024cb4
   23bfc:	.word	0x00024870
   23c00:	.word	0x000247e8
   23c04:	.word	0x000247dc
   23c08:	.word	0x00024c04
   23c0c:	ldr	r1, [r9, #20]
   23c10:	and	r0, r1, r0
   23c14:	mov	r3, r9
   23c18:	ldr	r1, [r3, #60]!	; 0x3c
   23c1c:	mov	r2, r3
   23c20:	ldr	r7, [r2, #24]!
   23c24:	cmp	r7, r1
   23c28:	ldrne	r6, [pc, #1700]	; 242d4 <opt_loop+0x2fac>
   23c2c:	addne	r6, pc, r6
   23c30:	strbne	r8, [r6]
   23c34:	cmp	r0, #0
   23c38:	moveq	r2, r3
   23c3c:	moveq	r1, r7
   23c40:	str	r1, [r2]
   23c44:	add	r0, r4, #48	; 0x30
   23c48:	ldr	r5, [r9, #4]
   23c4c:	mov	r1, #68	; 0x44
   23c50:	str	r8, [sp, #96]	; 0x60
   23c54:	vst1.64	{d8-d9}, [r0]
   23c58:	add	r0, r4, #32
   23c5c:	vst1.64	{d8-d9}, [r0]
   23c60:	add	r0, r4, #16
   23c64:	vst1.64	{d8-d9}, [r0]
   23c68:	mov	r0, r4
   23c6c:	vst1.64	{d8-d9}, [r0], r1
   23c70:	str	r8, [r0]
   23c74:	cmp	r5, #0
   23c78:	beq	23c94 <opt_loop+0x296c>
   23c7c:	mov	r0, r5
   23c80:	mov	r1, r4
   23c84:	bl	24bb4 <deadstmt>
   23c88:	ldr	r5, [r5, #16]
   23c8c:	cmp	r5, #0
   23c90:	bne	23c7c <opt_loop+0x2954>
   23c94:	mov	r5, #1
   23c98:	add	r0, r9, #8
   23c9c:	mov	r1, r4
   23ca0:	bl	24bb4 <deadstmt>
   23ca4:	ldr	ip, [sp, #24]
   23ca8:	ldr	lr, [pc, #1576]	; 242d8 <opt_loop+0x2fb0>
   23cac:	mov	r0, #0
   23cb0:	add	lr, pc, lr
   23cb4:	ldr	r1, [r4, r0, lsl #2]
   23cb8:	cmp	r1, #0
   23cbc:	beq	23ce0 <opt_loop+0x29b8>
   23cc0:	ldr	r2, [sl]
   23cc4:	tst	r2, r5, lsl r0
   23cc8:	bne	23ce0 <opt_loop+0x29b8>
   23ccc:	mvn	r2, #0
   23cd0:	str	r2, [r1]
   23cd4:	ldr	r1, [pc, #1536]	; 242dc <opt_loop+0x2fb4>
   23cd8:	add	r1, pc, r1
   23cdc:	strb	r8, [r1]
   23ce0:	add	r0, r0, #1
   23ce4:	cmp	r0, #18
   23ce8:	bne	23cb4 <opt_loop+0x298c>
   23cec:	ldr	r0, [r9, #8]
   23cf0:	tst	r0, #8
   23cf4:	bne	23de8 <opt_loop+0x2ac0>
   23cf8:	ldr	r1, [r9, #20]
   23cfc:	movw	r3, #8923	; 0x22db
   23d00:	movt	r3, #39383	; 0x99d7
   23d04:	lsl	r2, r1, #4
   23d08:	umull	r2, r3, r2, r3
   23d0c:	lsr	r2, r3, #7
   23d10:	mov	r3, #213	; 0xd5
   23d14:	mul	r2, r2, r3
   23d18:	rsb	r2, r2, r1, lsl #4
   23d1c:	ldr	r3, [lr, r2, lsl #2]
   23d20:	cmp	r3, #0
   23d24:	beq	23d54 <opt_loop+0x2a2c>
   23d28:	ldr	r7, [r3]
   23d2c:	cmp	r7, #0
   23d30:	bne	23d48 <opt_loop+0x2a20>
   23d34:	ldr	r7, [r3, #4]
   23d38:	cmp	r7, r1
   23d3c:	ldreq	r7, [r3, #8]
   23d40:	cmpeq	r7, #0
   23d44:	beq	220a4 <opt_loop+0xd7c>
   23d48:	ldr	r3, [r3, #16]
   23d4c:	cmp	r3, #0
   23d50:	bne	23d28 <opt_loop+0x2a00>
   23d54:	ldr	r0, [pc, #1412]	; 242e0 <opt_loop+0x2fb8>
   23d58:	ldr	r0, [pc, r0]
   23d5c:	add	r3, r0, #1
   23d60:	ldr	r0, [pc, #1404]	; 242e4 <opt_loop+0x2fbc>
   23d64:	add	r0, pc, r0
   23d68:	str	r3, [r0]
   23d6c:	ldr	r0, [pc, #1396]	; 242e8 <opt_loop+0x2fc0>
   23d70:	ldr	r0, [pc, r0]
   23d74:	add	r0, r0, r3, lsl #3
   23d78:	str	r1, [r0, #4]
   23d7c:	ldr	r0, [pc, #1384]	; 242ec <opt_loop+0x2fc4>
   23d80:	ldr	r0, [pc, r0]
   23d84:	str	r5, [r0, r3, lsl #3]
   23d88:	ldr	r0, [pc, #1376]	; 242f0 <opt_loop+0x2fc8>
   23d8c:	ldr	r0, [pc, r0]
   23d90:	ldr	r4, [pc, #1372]	; 242f4 <opt_loop+0x2fcc>
   23d94:	add	r7, r0, #20
   23d98:	add	r4, pc, r4
   23d9c:	str	r7, [r4]
   23da0:	str	r8, [r0]
   23da4:	str	r3, [r0, #12]
   23da8:	stmib	r0, {r1, r8}
   23dac:	ldr	r1, [lr, r2, lsl #2]
   23db0:	str	r1, [r0, #16]
   23db4:	str	r0, [lr, r2, lsl #2]
   23db8:	ldr	r0, [r9, #8]
   23dbc:	b	23dec <opt_loop+0x2ac4>
   23dc0:	.word	0x00024bf4
   23dc4:	.word	0x00024be0
   23dc8:	.word	0x00024bd4
   23dcc:	.word	0x00024b94
   23dd0:	.word	0x00024724
   23dd4:	.word	0x000246e4
   23dd8:	.word	0x000246d8
   23ddc:	.word	0x00024afc
   23de0:	.word	0x00024ae8
   23de4:	.word	0x00024adc
   23de8:	ldr	r3, [r9, #204]	; 0xcc
   23dec:	str	r0, [r9, #52]	; 0x34
   23df0:	rsb	r0, r0, #0
   23df4:	str	r3, [r9, #132]	; 0x84
   23df8:	str	r0, [r9, #76]	; 0x4c
   23dfc:	ldr	r9, [r9, #100]	; 0x64
   23e00:	cmp	r9, #0
   23e04:	bne	220cc <opt_loop+0xda4>
   23e08:	ldr	r1, [sp, #12]
   23e0c:	sub	r0, r1, #1
   23e10:	cmp	r1, #0
   23e14:	mov	r1, r0
   23e18:	bgt	22088 <opt_loop+0xd60>
   23e1c:	cmp	ip, #0
   23e20:	bne	24208 <opt_loop+0x2ee0>
   23e24:	ldr	r6, [sp, #8]
   23e28:	cmp	r6, #1
   23e2c:	blt	23e74 <opt_loop+0x2b4c>
   23e30:	mov	r4, #1
   23e34:	ldr	r0, [pc, #1212]	; 242f8 <opt_loop+0x2fd0>
   23e38:	ldr	r0, [pc, r0]
   23e3c:	ldr	r5, [r0, r4, lsl #2]
   23e40:	cmp	r5, #0
   23e44:	beq	23e64 <opt_loop+0x2b3c>
   23e48:	add	r0, r5, #48	; 0x30
   23e4c:	bl	248a0 <opt_j>
   23e50:	add	r0, r5, #72	; 0x48
   23e54:	bl	248a0 <opt_j>
   23e58:	ldr	r5, [r5, #100]	; 0x64
   23e5c:	cmp	r5, #0
   23e60:	bne	23e48 <opt_loop+0x2b20>
   23e64:	add	r0, r4, #1
   23e68:	cmp	r4, r6
   23e6c:	mov	r4, r0
   23e70:	bne	23e34 <opt_loop+0x2b0c>
   23e74:	ldr	r0, [pc, #1152]	; 242fc <opt_loop+0x2fd4>
   23e78:	ldr	r0, [pc, r0]
   23e7c:	cmp	r0, #1
   23e80:	blt	23e9c <opt_loop+0x2b74>
   23e84:	ldr	r1, [pc, #1140]	; 24300 <opt_loop+0x2fd8>
   23e88:	ldr	r1, [pc, r1]
   23e8c:	ldr	r2, [r1], #4
   23e90:	subs	r0, r0, #1
   23e94:	str	r8, [r2, #112]	; 0x70
   23e98:	bne	23e8c <opt_loop+0x2b64>
   23e9c:	ldr	r0, [sp, #4]
   23ea0:	ldr	r0, [r0, #36]	; 0x24
   23ea4:	cmp	r0, #1
   23ea8:	blt	23efc <opt_loop+0x2bd4>
   23eac:	ldr	r1, [pc, #1104]	; 24304 <opt_loop+0x2fdc>
   23eb0:	ldr	r1, [pc, r1]
   23eb4:	ldr	r2, [r1, r0, lsl #2]
   23eb8:	cmp	r2, #0
   23ebc:	beq	23ef4 <opt_loop+0x2bcc>
   23ec0:	ldr	r3, [r2, #60]	; 0x3c
   23ec4:	ldr	r7, [r3, #112]	; 0x70
   23ec8:	str	r7, [r2, #68]	; 0x44
   23ecc:	add	r7, r2, #48	; 0x30
   23ed0:	str	r7, [r3, #112]	; 0x70
   23ed4:	ldr	r3, [r2, #84]	; 0x54
   23ed8:	ldr	r7, [r3, #112]	; 0x70
   23edc:	str	r7, [r2, #92]	; 0x5c
   23ee0:	add	r7, r2, #72	; 0x48
   23ee4:	str	r7, [r3, #112]	; 0x70
   23ee8:	ldr	r2, [r2, #100]	; 0x64
   23eec:	cmp	r2, #0
   23ef0:	bne	23ec0 <opt_loop+0x2b98>
   23ef4:	subs	r0, r0, #1
   23ef8:	bgt	23eb4 <opt_loop+0x2b8c>
   23efc:	cmp	r6, #1
   23f00:	blt	24208 <opt_loop+0x2ee0>
   23f04:	mov	r1, #1
   23f08:	ldr	r0, [pc, #1016]	; 24308 <opt_loop+0x2fe0>
   23f0c:	ldr	r0, [pc, r0]
   23f10:	str	r1, [sp, #28]
   23f14:	ldr	lr, [r0, r1, lsl #2]
   23f18:	cmp	lr, #0
   23f1c:	beq	241f0 <opt_loop+0x2ec8>
   23f20:	ldr	r2, [lr, #112]	; 0x70
   23f24:	cmp	r2, #0
   23f28:	beq	241e4 <opt_loop+0x2ebc>
   23f2c:	ldr	r0, [r2, #16]
   23f30:	mov	r1, r2
   23f34:	ldr	r3, [r0, #200]	; 0xc8
   23f38:	ldr	r1, [r1, #20]
   23f3c:	cmp	r1, #0
   23f40:	beq	23f70 <opt_loop+0x2c48>
   23f44:	ldr	r7, [r1, #16]
   23f48:	ldr	r7, [r7, #200]	; 0xc8
   23f4c:	cmp	r3, r7
   23f50:	beq	23f38 <opt_loop+0x2c10>
   23f54:	b	24090 <opt_loop+0x2d68>
   23f58:	.word	0x00024604
   23f5c:	.word	0x000245f8
   23f60:	.word	0x00024a20
   23f64:	.word	0x00024a14
   23f68:	.word	0x000249cc
   23f6c:	.word	0x000249a8
   23f70:	ldr	r1, [r0, #60]!	; 0x3c
   23f74:	mov	r4, #1
   23f78:	cmp	r1, lr
   23f7c:	addne	r0, r0, #24
   23f80:	mov	ip, r4
   23f84:	ldr	r4, [r0]
   23f88:	cmp	r4, #0
   23f8c:	beq	24090 <opt_loop+0x2d68>
   23f90:	mov	r9, r0
   23f94:	ldr	r7, [r4, #60]	; 0x3c
   23f98:	ldr	r0, [lr, #60]	; 0x3c
   23f9c:	cmp	r7, r0
   23fa0:	bne	24090 <opt_loop+0x2d68>
   23fa4:	ldr	r0, [lr]
   23fa8:	ldr	r6, [r4, #104]	; 0x68
   23fac:	lsr	r1, r0, #5
   23fb0:	and	r5, r0, #31
   23fb4:	ldr	r0, [r6, r1, lsl #2]
   23fb8:	mov	r6, #1
   23fbc:	tst	r0, r6, lsl r5
   23fc0:	beq	24090 <opt_loop+0x2d68>
   23fc4:	ldr	r6, [r4, #200]	; 0xc8
   23fc8:	add	r0, r4, #84	; 0x54
   23fcc:	mov	r4, #0
   23fd0:	cmp	r6, r3
   23fd4:	beq	23f80 <opt_loop+0x2c58>
   23fd8:	mov	r4, #1
   23fdc:	lsl	r5, r4, r5
   23fe0:	ldr	r4, [r0]
   23fe4:	cmp	r4, #0
   23fe8:	beq	24090 <opt_loop+0x2d68>
   23fec:	mov	sl, r0
   23ff0:	ldr	r0, [r4, #60]	; 0x3c
   23ff4:	cmp	r0, r7
   23ff8:	bne	24090 <opt_loop+0x2d68>
   23ffc:	ldr	r0, [r4, #104]	; 0x68
   24000:	ldr	r0, [r0, r1, lsl #2]
   24004:	tst	r0, r5
   24008:	beq	24090 <opt_loop+0x2d68>
   2400c:	ldr	r6, [r4, #200]	; 0xc8
   24010:	add	r0, r4, #84	; 0x54
   24014:	cmp	r6, r3
   24018:	bne	23fe0 <opt_loop+0x2cb8>
   2401c:	ldr	r1, [r0]
   24020:	cmp	ip, #0
   24024:	str	r1, [sl]
   24028:	ldr	r1, [r9]
   2402c:	str	r1, [r0]
   24030:	beq	2407c <opt_loop+0x2d54>
   24034:	ldr	r0, [lr, #112]	; 0x70
   24038:	cmp	r0, #0
   2403c:	beq	24080 <opt_loop+0x2d58>
   24040:	ldr	r1, [r0, #16]
   24044:	ldr	r2, [r1, #60]	; 0x3c
   24048:	cmp	r2, lr
   2404c:	mov	r2, #84	; 0x54
   24050:	movweq	r2, #60	; 0x3c
   24054:	str	r4, [r1, r2]
   24058:	ldr	r0, [r0, #20]
   2405c:	cmp	r0, #0
   24060:	bne	24040 <opt_loop+0x2d18>
   24064:	b	24080 <opt_loop+0x2d58>
   24068:	.word	0x00024504
   2406c:	.word	0x000244f8
   24070:	.word	0x0002491c
   24074:	.word	0x00024908
   24078:	.word	0x000248fc
   2407c:	str	r4, [r9]
   24080:	ldr	r0, [pc, #644]	; 2430c <opt_loop+0x2fe4>
   24084:	add	r0, pc, r0
   24088:	strb	r8, [r0]
   2408c:	ldr	r2, [lr, #112]	; 0x70
   24090:	cmp	r2, #0
   24094:	beq	241e4 <opt_loop+0x2ebc>
   24098:	ldr	r0, [r2, #16]
   2409c:	ldr	r3, [r0, #200]	; 0xc8
   240a0:	ldr	r2, [r2, #20]
   240a4:	cmp	r2, #0
   240a8:	beq	240d4 <opt_loop+0x2dac>
   240ac:	ldr	r1, [r2, #16]
   240b0:	ldr	r1, [r1, #200]	; 0xc8
   240b4:	cmp	r3, r1
   240b8:	beq	240a0 <opt_loop+0x2d78>
   240bc:	b	241e4 <opt_loop+0x2ebc>
   240c0:	.word	0x00024428
   240c4:	.word	0x0002441c
   240c8:	.word	0x00024844
   240cc:	.word	0x00024838
   240d0:	.word	0x00024808
   240d4:	ldr	r1, [r0, #60]!	; 0x3c
   240d8:	cmp	r1, lr
   240dc:	mov	r1, #1
   240e0:	addne	r0, r0, #24
   240e4:	mov	ip, r1
   240e8:	ldr	r1, [r0]
   240ec:	cmp	r1, #0
   240f0:	beq	241e4 <opt_loop+0x2ebc>
   240f4:	mov	r2, r0
   240f8:	ldr	r4, [r1, #84]	; 0x54
   240fc:	ldr	r0, [lr, #84]	; 0x54
   24100:	cmp	r4, r0
   24104:	bne	241e4 <opt_loop+0x2ebc>
   24108:	ldr	r0, [lr]
   2410c:	ldr	r6, [r1, #104]	; 0x68
   24110:	lsr	r7, r0, #5
   24114:	and	r5, r0, #31
   24118:	ldr	r0, [r6, r7, lsl #2]
   2411c:	mov	r6, #1
   24120:	tst	r0, r6, lsl r5
   24124:	beq	241e4 <opt_loop+0x2ebc>
   24128:	ldr	r6, [r1, #200]	; 0xc8
   2412c:	add	r0, r1, #60	; 0x3c
   24130:	mov	r1, #0
   24134:	cmp	r6, r3
   24138:	beq	240e4 <opt_loop+0x2dbc>
   2413c:	mov	r1, #1
   24140:	lsl	r9, r1, r5
   24144:	ldr	r5, [r0]
   24148:	cmp	r5, #0
   2414c:	beq	241e4 <opt_loop+0x2ebc>
   24150:	mov	r1, r0
   24154:	ldr	r0, [r5, #84]	; 0x54
   24158:	cmp	r0, r4
   2415c:	bne	241e4 <opt_loop+0x2ebc>
   24160:	ldr	r0, [r5, #104]	; 0x68
   24164:	ldr	r0, [r0, r7, lsl #2]
   24168:	tst	r0, r9
   2416c:	beq	241e4 <opt_loop+0x2ebc>
   24170:	ldr	r6, [r5, #200]	; 0xc8
   24174:	add	r0, r5, #60	; 0x3c
   24178:	cmp	r6, r3
   2417c:	bne	24144 <opt_loop+0x2e1c>
   24180:	ldr	r3, [r0]
   24184:	cmp	ip, #0
   24188:	str	r3, [r1]
   2418c:	ldr	r1, [r2]
   24190:	str	r1, [r0]
   24194:	beq	241d4 <opt_loop+0x2eac>
   24198:	ldr	r0, [lr, #112]	; 0x70
   2419c:	cmp	r0, #0
   241a0:	beq	241d8 <opt_loop+0x2eb0>
   241a4:	ldr	r1, [r0, #16]
   241a8:	ldr	r2, [r1, #60]	; 0x3c
   241ac:	cmp	r2, lr
   241b0:	mov	r2, #84	; 0x54
   241b4:	movweq	r2, #60	; 0x3c
   241b8:	str	r5, [r1, r2]
   241bc:	ldr	r0, [r0, #20]
   241c0:	cmp	r0, #0
   241c4:	bne	241a4 <opt_loop+0x2e7c>
   241c8:	b	241d8 <opt_loop+0x2eb0>
   241cc:	.word	0x000247f0
   241d0:	.word	0x00024380
   241d4:	str	r5, [r2]
   241d8:	ldr	r0, [pc, #304]	; 24310 <opt_loop+0x2fe8>
   241dc:	add	r0, pc, r0
   241e0:	strb	r8, [r0]
   241e4:	ldr	lr, [lr, #100]	; 0x64
   241e8:	cmp	lr, #0
   241ec:	bne	23f20 <opt_loop+0x2bf8>
   241f0:	ldr	r2, [sp, #28]
   241f4:	ldr	r1, [sp, #8]
   241f8:	add	r0, r2, #1
   241fc:	cmp	r2, r1
   24200:	mov	r1, r0
   24204:	bne	23f08 <opt_loop+0x2be0>
   24208:	ldr	r1, [pc, #260]	; 24314 <opt_loop+0x2fec>
   2420c:	mvn	r9, #1
   24210:	add	r1, pc, r1
   24214:	ldrb	r0, [r1]
   24218:	cmp	r0, #1
   2421c:	mov	r0, #1
   24220:	bne	2135c <opt_loop+0x34>
   24224:	sub	sp, fp, #48	; 0x30
   24228:	vpop	{d8-d9}
   2422c:	add	sp, sp, #4
   24230:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24234:	bl	fc4 <abort@plt>
   24238:	.word	0x000240f4
   2423c:	.word	0x000240e8
   24240:	.word	0x00024510
   24244:	.word	0x00024504
   24248:	.word	0x00024330
   2424c:	.word	0x00024324
   24250:	.word	0x00024754
   24254:	.word	0x00024744
   24258:	.word	0x00024730
   2425c:	.word	0x00024724
   24260:	.word	0x00024260
   24264:	.word	0x00024254
   24268:	.word	0x00024684
   2426c:	.word	0x00024674
   24270:	.word	0x00024660
   24274:	.word	0x00024654
   24278:	.word	0x00024030
   2427c:	.word	0x00024024
   24280:	.word	0x0002444c
   24284:	.word	0x00024440
   24288:	.word	0x00023f50
   2428c:	.word	0x00023efc
   24290:	.word	0x00023ef0
   24294:	.word	0x00024320
   24298:	.word	0x00024310
   2429c:	.word	0x000242fc
   242a0:	.word	0x000242f0
   242a4:	.word	0x00023eac
   242a8:	.word	0x000245dc
   242ac:	.word	0x000245c0
   242b0:	.word	0x00024150
   242b4:	.word	0x00023dc8
   242b8:	.word	0x00023d30
   242bc:	.word	0x00023cdc
   242c0:	.word	0x00023bd4
   242c4:	.word	0x00023fdc
   242c8:	.word	0x00023b00
   242cc:	.word	0x00023acc
   242d0:	.word	0x00023ea8
   242d4:	.word	0x00023938
   242d8:	.word	0x000238e0
   242dc:	.word	0x0002388c
   242e0:	.word	0x0002382c
   242e4:	.word	0x00023820
   242e8:	.word	0x00023c50
   242ec:	.word	0x00023c40
   242f0:	.word	0x00023c2c
   242f4:	.word	0x00023c20
   242f8:	.word	0x00023b74
   242fc:	.word	0x000236f0
   24300:	.word	0x00023b28
   24304:	.word	0x00023afc
   24308:	.word	0x00023aa0
   2430c:	.word	0x000234e0
   24310:	.word	0x00023388
   24314:	.word	0x00023354

00024318 <sf_icode_to_fcode>:
   24318:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2431c:	add	fp, sp, #28
   24320:	sub	sp, sp, #4
   24324:	ldr	r5, [pc, #220]	; 24408 <sf_icode_to_fcode+0xf0>
   24328:	mov	sl, r0
   2432c:	mov	r8, r1
   24330:	ldr	r5, [pc, r5]
   24334:	ldr	r9, [pc, #208]	; 2440c <sf_icode_to_fcode+0xf4>
   24338:	add	r0, r5, #1
   2433c:	add	r9, pc, r9
   24340:	str	r0, [r9]
   24344:	mov	r0, sl
   24348:	bl	24420 <count_stmts>
   2434c:	lsl	r4, r0, #3
   24350:	mov	r7, r0
   24354:	str	r0, [r8]
   24358:	mov	r0, r4
   2435c:	bl	ed4 <malloc@plt>
   24360:	cmp	r0, #0
   24364:	beq	243f0 <sf_icode_to_fcode+0xd8>
   24368:	mov	r6, r0
   2436c:	mov	r0, r6
   24370:	mov	r1, #0
   24374:	mov	r2, r4
   24378:	bl	f40 <memset@plt>
   2437c:	ldr	r0, [pc, #140]	; 24410 <sf_icode_to_fcode+0xf8>
   24380:	add	r0, pc, r0
   24384:	str	r6, [r0]
   24388:	add	r0, r6, r7, lsl #3
   2438c:	ldr	r1, [pc, #128]	; 24414 <sf_icode_to_fcode+0xfc>
   24390:	add	r1, pc, r1
   24394:	str	r0, [r1]
   24398:	add	r0, r5, #2
   2439c:	str	r0, [r9]
   243a0:	mov	r0, sl
   243a4:	bl	244b0 <convert_code_r>
   243a8:	cmp	r0, #0
   243ac:	bne	243fc <sf_icode_to_fcode+0xe4>
   243b0:	mov	r0, r6
   243b4:	bl	e5c <free@plt>
   243b8:	ldr	r5, [pc, #88]	; 24418 <sf_icode_to_fcode+0x100>
   243bc:	ldr	r5, [pc, r5]
   243c0:	add	r0, r5, #1
   243c4:	str	r0, [r9]
   243c8:	mov	r0, sl
   243cc:	bl	24420 <count_stmts>
   243d0:	lsl	r4, r0, #3
   243d4:	mov	r7, r0
   243d8:	str	r0, [r8]
   243dc:	mov	r0, r4
   243e0:	bl	ed4 <malloc@plt>
   243e4:	mov	r6, r0
   243e8:	cmp	r0, #0
   243ec:	bne	2436c <sf_icode_to_fcode+0x54>
   243f0:	ldr	r0, [pc, #36]	; 2441c <sf_icode_to_fcode+0x104>
   243f4:	add	r0, pc, r0
   243f8:	bl	2124 <sf_bpf_error>
   243fc:	mov	r0, r6
   24400:	sub	sp, fp, #28
   24404:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24408:	.word	0x00023228
   2440c:	.word	0x0002321c
   24410:	.word	0x000231dc
   24414:	.word	0x000231d0
   24418:	.word	0x0002319c
   2441c:	.word	0x000067ac

00024420 <count_stmts>:
   24420:	push	{r4, r5, fp, lr}
   24424:	add	fp, sp, #8
   24428:	mov	r4, r0
   2442c:	mov	r0, #0
   24430:	cmp	r4, #0
   24434:	beq	244a8 <count_stmts+0x88>
   24438:	ldr	r2, [r4, #24]
   2443c:	ldr	r1, [pc, #104]	; 244ac <count_stmts+0x8c>
   24440:	ldr	r1, [pc, r1]
   24444:	cmp	r2, r1
   24448:	popeq	{r4, r5, fp, pc}
   2444c:	str	r1, [r4, #24]
   24450:	ldr	r0, [r4, #60]	; 0x3c
   24454:	bl	24420 <count_stmts>
   24458:	mov	r5, r0
   2445c:	ldr	r0, [r4, #84]	; 0x54
   24460:	bl	24420 <count_stmts>
   24464:	ldr	r2, [r4, #4]
   24468:	mov	r1, #0
   2446c:	cmp	r2, #0
   24470:	beq	2448c <count_stmts+0x6c>
   24474:	ldr	r3, [r2]
   24478:	ldr	r2, [r2, #16]
   2447c:	cmn	r3, #1
   24480:	addne	r1, r1, #1
   24484:	cmp	r2, #0
   24488:	bne	24474 <count_stmts+0x54>
   2448c:	add	r0, r5, r0
   24490:	ldr	r2, [r4, #32]
   24494:	add	r0, r0, r1
   24498:	ldr	r1, [r4, #28]
   2449c:	add	r0, r0, r1
   244a0:	add	r0, r0, r2
   244a4:	add	r0, r0, #1
   244a8:	pop	{r4, r5, fp, pc}
   244ac:	.word	0x00023118

000244b0 <convert_code_r>:
   244b0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   244b4:	add	fp, sp, #28
   244b8:	sub	sp, sp, #4
   244bc:	cmp	r0, #0
   244c0:	beq	244dc <convert_code_r+0x2c>
   244c4:	mov	r8, r0
   244c8:	ldr	r1, [r0, #24]
   244cc:	ldr	r0, [pc, #796]	; 247f0 <convert_code_r+0x340>
   244d0:	ldr	r0, [pc, r0]
   244d4:	cmp	r1, r0
   244d8:	bne	244ec <convert_code_r+0x3c>
   244dc:	mov	r5, #1
   244e0:	mov	r0, r5
   244e4:	sub	sp, fp, #28
   244e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   244ec:	str	r0, [r8, #24]
   244f0:	ldr	r0, [r8, #84]	; 0x54
   244f4:	bl	244b0 <convert_code_r>
   244f8:	mov	r5, #0
   244fc:	cmp	r0, #0
   24500:	beq	244e0 <convert_code_r+0x30>
   24504:	ldr	r0, [r8, #60]	; 0x3c
   24508:	bl	244b0 <convert_code_r>
   2450c:	cmp	r0, #0
   24510:	beq	244e0 <convert_code_r+0x30>
   24514:	ldr	r7, [r8, #4]
   24518:	mov	r0, #0
   2451c:	mov	sl, #0
   24520:	cmp	r7, #0
   24524:	beq	24548 <convert_code_r+0x98>
   24528:	mov	sl, #0
   2452c:	mov	r1, r7
   24530:	ldr	r2, [r1]
   24534:	ldr	r1, [r1, #16]
   24538:	cmn	r2, #1
   2453c:	addne	sl, sl, #1
   24540:	cmp	r1, #0
   24544:	bne	24530 <convert_code_r+0x80>
   24548:	ldr	r1, [r8, #28]
   2454c:	ldr	r2, [r8, #32]
   24550:	cmp	sl, #0
   24554:	add	r1, sl, r1
   24558:	add	r1, r1, r2
   2455c:	ldr	r2, [pc, #656]	; 247f4 <convert_code_r+0x344>
   24560:	add	r1, r1, #1
   24564:	ldr	r2, [pc, r2]
   24568:	sub	r9, r2, r1, lsl #3
   2456c:	ldr	r1, [pc, #644]	; 247f8 <convert_code_r+0x348>
   24570:	add	r1, pc, r1
   24574:	str	r9, [r1]
   24578:	ldr	r1, [pc, #636]	; 247fc <convert_code_r+0x34c>
   2457c:	ldr	r1, [pc, r1]
   24580:	sub	r1, r9, r1
   24584:	asr	r1, r1, #3
   24588:	str	r1, [r8, #40]	; 0x28
   2458c:	beq	245d0 <convert_code_r+0x120>
   24590:	mov	r0, sl
   24594:	mov	r1, #4
   24598:	bl	dfc <calloc@plt>
   2459c:	cmp	r0, #0
   245a0:	beq	247e4 <convert_code_r+0x334>
   245a4:	cmp	r7, #0
   245a8:	beq	245d0 <convert_code_r+0x120>
   245ac:	mov	r1, #0
   245b0:	mov	r2, r7
   245b4:	str	r2, [r0, r1, lsl #2]
   245b8:	add	r1, r1, #1
   245bc:	cmp	r1, sl
   245c0:	bcs	245d0 <convert_code_r+0x120>
   245c4:	ldr	r2, [r2, #16]
   245c8:	cmp	r2, #0
   245cc:	bne	245b4 <convert_code_r+0x104>
   245d0:	cmp	r7, #0
   245d4:	beq	246d0 <convert_code_r+0x220>
   245d8:	sub	ip, sl, #2
   245dc:	mov	r2, #0
   245e0:	ldr	r1, [r7]
   245e4:	cmn	r1, #1
   245e8:	beq	24610 <convert_code_r+0x160>
   245ec:	strh	r1, [r9]
   245f0:	cmp	r2, ip
   245f4:	ldr	r1, [r7, #12]
   245f8:	str	r1, [r9, #4]
   245fc:	ldrne	r1, [r7]
   24600:	cmpne	r1, #5
   24604:	bne	24620 <convert_code_r+0x170>
   24608:	add	r2, r2, #1
   2460c:	add	r9, r9, #8
   24610:	ldr	r7, [r7, #16]
   24614:	cmp	r7, #0
   24618:	bne	245e0 <convert_code_r+0x130>
   2461c:	b	246d0 <convert_code_r+0x220>
   24620:	and	r1, r1, #7
   24624:	cmp	r1, #5
   24628:	bne	24608 <convert_code_r+0x158>
   2462c:	ldr	r5, [r7, #4]
   24630:	cmp	r5, #0
   24634:	ldrne	r1, [r7, #8]
   24638:	cmpne	r1, #0
   2463c:	beq	24740 <convert_code_r+0x290>
   24640:	cmp	sl, #1
   24644:	blt	246bc <convert_code_r+0x20c>
   24648:	eor	lr, r2, #255	; 0xff
   2464c:	mov	r1, #0
   24650:	mov	r6, #0
   24654:	mov	r4, #0
   24658:	b	24660 <convert_code_r+0x1b0>
   2465c:	ldr	r5, [r7, #4]
   24660:	ldr	r3, [r0, r4, lsl #2]
   24664:	cmp	r3, r5
   24668:	bne	24684 <convert_code_r+0x1d4>
   2466c:	cmp	r6, #0
   24670:	bne	247d0 <convert_code_r+0x320>
   24674:	add	r3, lr, r4
   24678:	mov	r6, #1
   2467c:	strb	r3, [r9, #2]
   24680:	ldr	r3, [r0, r4, lsl #2]
   24684:	ldr	r5, [r7, #8]
   24688:	cmp	r3, r5
   2468c:	bne	246a4 <convert_code_r+0x1f4>
   24690:	cmp	r1, #0
   24694:	bne	247d0 <convert_code_r+0x320>
   24698:	add	r1, lr, r4
   2469c:	strb	r1, [r9, #3]
   246a0:	mov	r1, #1
   246a4:	add	r4, r4, #1
   246a8:	cmp	r4, sl
   246ac:	blt	2465c <convert_code_r+0x1ac>
   246b0:	cmp	r6, #0
   246b4:	cmpne	r1, #0
   246b8:	bne	24608 <convert_code_r+0x158>
   246bc:	ldr	r0, [pc, #336]	; 24814 <convert_code_r+0x364>
   246c0:	ldr	r1, [pc, #336]	; 24818 <convert_code_r+0x368>
   246c4:	add	r0, pc, r0
   246c8:	add	r1, pc, r1
   246cc:	bl	2124 <sf_bpf_error>
   246d0:	cmp	r0, #0
   246d4:	beq	246dc <convert_code_r+0x22c>
   246d8:	bl	e5c <free@plt>
   246dc:	ldr	r0, [r8, #8]
   246e0:	strh	r0, [r9]
   246e4:	ldr	r0, [r8, #20]
   246e8:	str	r0, [r9, #4]
   246ec:	ldr	r0, [r8, #60]	; 0x3c
   246f0:	cmp	r0, #0
   246f4:	beq	244dc <convert_code_r+0x2c>
   246f8:	ldr	r1, [r8, #40]	; 0x28
   246fc:	ldr	r0, [r0, #40]	; 0x28
   24700:	add	r1, r1, sl
   24704:	mvn	r1, r1
   24708:	add	r0, r0, r1
   2470c:	cmp	r0, #256	; 0x100
   24710:	bcc	24754 <convert_code_r+0x2a4>
   24714:	ldr	r1, [r8, #28]
   24718:	cmp	r1, #0
   2471c:	beq	247b0 <convert_code_r+0x300>
   24720:	mov	r1, #5
   24724:	sub	r0, r0, #1
   24728:	strh	r1, [r9, #8]
   2472c:	mov	r1, #0
   24730:	strb	r1, [r9, #2]
   24734:	str	r0, [r9, #12]
   24738:	mov	r0, #1
   2473c:	b	2475c <convert_code_r+0x2ac>
   24740:	ldr	r0, [pc, #192]	; 24808 <convert_code_r+0x358>
   24744:	ldr	r1, [pc, #192]	; 2480c <convert_code_r+0x35c>
   24748:	add	r0, pc, r0
   2474c:	add	r1, pc, r1
   24750:	bl	2124 <sf_bpf_error>
   24754:	strb	r0, [r9, #2]
   24758:	mov	r0, #0
   2475c:	ldr	r2, [r8, #84]	; 0x54
   24760:	ldr	r1, [r8, #40]	; 0x28
   24764:	ldr	r2, [r2, #40]	; 0x28
   24768:	add	r1, r1, sl
   2476c:	mvn	r1, r1
   24770:	add	r1, r2, r1
   24774:	cmp	r1, #256	; 0x100
   24778:	bcc	247a8 <convert_code_r+0x2f8>
   2477c:	ldr	r2, [r8, #32]
   24780:	cmp	r2, #0
   24784:	beq	247c0 <convert_code_r+0x310>
   24788:	strb	r0, [r9, #3]
   2478c:	add	r0, r0, #1
   24790:	mov	r3, #5
   24794:	lsl	r2, r0, #3
   24798:	sub	r0, r1, r0
   2479c:	strh	r3, [r9, r2]!
   247a0:	str	r0, [r9, #4]
   247a4:	b	244dc <convert_code_r+0x2c>
   247a8:	strb	r1, [r9, #3]
   247ac:	b	244dc <convert_code_r+0x2c>
   247b0:	mov	r0, #1
   247b4:	mov	r5, #0
   247b8:	str	r0, [r8, #28]
   247bc:	b	244e0 <convert_code_r+0x30>
   247c0:	mov	r0, #1
   247c4:	mov	r5, #0
   247c8:	str	r0, [r8, #32]
   247cc:	b	244e0 <convert_code_r+0x30>
   247d0:	ldr	r0, [pc, #40]	; 24800 <convert_code_r+0x350>
   247d4:	ldr	r1, [pc, #40]	; 24804 <convert_code_r+0x354>
   247d8:	add	r0, pc, r0
   247dc:	add	r1, pc, r1
   247e0:	bl	2124 <sf_bpf_error>
   247e4:	ldr	r0, [pc, #36]	; 24810 <convert_code_r+0x360>
   247e8:	add	r0, pc, r0
   247ec:	bl	2124 <sf_bpf_error>
   247f0:	.word	0x00023088
   247f4:	.word	0x00022ffc
   247f8:	.word	0x00022ff0
   247fc:	.word	0x00022fe0
   24800:	.word	0x000063f0
   24804:	.word	0x00006428
   24808:	.word	0x00006480
   2480c:	.word	0x000064a5
   24810:	.word	0x000063d0
   24814:	.word	0x00006504
   24818:	.word	0x0000654d

0002481c <find_levels_r>:
   2481c:	push	{r4, sl, fp, lr}
   24820:	add	fp, sp, #8
   24824:	mov	r4, r0
   24828:	ldr	r1, [r0, #24]
   2482c:	ldr	r0, [pc, #100]	; 24898 <find_levels_r+0x7c>
   24830:	ldr	r0, [pc, r0]
   24834:	cmp	r1, r0
   24838:	popeq	{r4, sl, fp, pc}
   2483c:	mov	r1, #0
   24840:	str	r1, [r4, #100]	; 0x64
   24844:	str	r0, [r4, #24]
   24848:	ldr	r0, [r4, #60]	; 0x3c
   2484c:	cmp	r0, #0
   24850:	beq	2487c <find_levels_r+0x60>
   24854:	bl	2481c <find_levels_r>
   24858:	ldr	r0, [r4, #84]	; 0x54
   2485c:	bl	2481c <find_levels_r>
   24860:	ldr	r0, [r4, #60]	; 0x3c
   24864:	ldr	r1, [r4, #84]	; 0x54
   24868:	ldr	r0, [r0, #36]	; 0x24
   2486c:	ldr	r1, [r1, #36]	; 0x24
   24870:	cmp	r0, r1
   24874:	movgt	r1, r0
   24878:	add	r1, r1, #1
   2487c:	str	r1, [r4, #36]	; 0x24
   24880:	ldr	r0, [pc, #20]	; 2489c <find_levels_r+0x80>
   24884:	ldr	r0, [pc, r0]
   24888:	ldr	r2, [r0, r1, lsl #2]
   2488c:	str	r2, [r4, #100]	; 0x64
   24890:	str	r4, [r0, r1, lsl #2]
   24894:	pop	{r4, sl, fp, pc}
   24898:	.word	0x00022d28
   2489c:	.word	0x00023128

000248a0 <opt_j>:
   248a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   248a4:	add	fp, sp, #28
   248a8:	sub	sp, sp, #24
   248ac:	ldr	r1, [r0, #12]
   248b0:	str	r0, [sp, #8]
   248b4:	ldr	r5, [r1, #60]	; 0x3c
   248b8:	cmp	r5, #0
   248bc:	beq	24ab8 <opt_j+0x218>
   248c0:	ldr	r0, [r1, #84]	; 0x54
   248c4:	cmp	r5, r0
   248c8:	beq	248d4 <opt_j+0x34>
   248cc:	mov	r5, r1
   248d0:	b	24934 <opt_j+0x94>
   248d4:	ldr	r2, [r5, #128]	; 0x80
   248d8:	cmp	r2, #0
   248dc:	beq	2491c <opt_j+0x7c>
   248e0:	ldr	r0, [sp, #8]
   248e4:	add	r3, r5, #136	; 0x88
   248e8:	mov	r7, #0
   248ec:	mov	ip, #1
   248f0:	ldr	r0, [r0, #16]
   248f4:	add	r0, r0, #136	; 0x88
   248f8:	tst	r2, ip, lsl r7
   248fc:	beq	24910 <opt_j+0x70>
   24900:	ldr	r6, [r3, r7, lsl #2]
   24904:	ldr	r4, [r0, r7, lsl #2]
   24908:	cmp	r4, r6
   2490c:	bne	248cc <opt_j+0x2c>
   24910:	add	r7, r7, #1
   24914:	cmp	r7, #18
   24918:	bcc	248f8 <opt_j+0x58>
   2491c:	ldr	r0, [pc, #412]	; 24ac0 <opt_j+0x220>
   24920:	mov	r1, #0
   24924:	add	r0, pc, r0
   24928:	strb	r1, [r0]
   2492c:	ldr	r0, [sp, #8]
   24930:	str	r5, [r0, #12]
   24934:	ldr	r0, [pc, #392]	; 24ac4 <opt_j+0x224>
   24938:	ldr	r0, [pc, r0]
   2493c:	cmp	r0, #1
   24940:	str	r0, [sp]
   24944:	blt	24ab8 <opt_j+0x218>
   24948:	ldr	r0, [sp, #8]
   2494c:	mov	r1, #1
   24950:	ldr	r0, [r0, #8]
   24954:	str	r0, [sp, #4]
   24958:	ldr	r0, [pc, #360]	; 24ac8 <opt_j+0x228>
   2495c:	ldr	r0, [pc, r0]
   24960:	str	r0, [sp, #20]
   24964:	add	r0, r5, #84	; 0x54
   24968:	mov	r2, #0
   2496c:	str	r0, [sp, #12]
   24970:	ldr	r0, [sp, #4]
   24974:	str	r2, [sp, #16]
   24978:	ldr	r2, [r0, r2, lsl #2]
   2497c:	cmp	r2, #0
   24980:	beq	24a78 <opt_j+0x1d8>
   24984:	ldr	r0, [sp, #16]
   24988:	ldr	lr, [r5, #8]
   2498c:	lsl	r6, r0, #5
   24990:	ldr	r3, [sp, #20]
   24994:	rbit	r0, r2
   24998:	mov	r4, #0
   2499c:	clz	r8, r0
   249a0:	orr	r0, r8, r6
   249a4:	ldr	r0, [r3, r0, lsl #2]
   249a8:	ldr	ip, [r0, #4]
   249ac:	cmn	ip, #1
   249b0:	mov	r3, ip
   249b4:	movwgt	r4, #1
   249b8:	cmp	ip, #0
   249bc:	rsbmi	r3, ip, #0
   249c0:	cmp	lr, r3
   249c4:	bne	24a6c <opt_j+0x1cc>
   249c8:	ldr	r0, [r0, #16]
   249cc:	ldr	r3, [r5, #200]	; 0xc8
   249d0:	ldr	r7, [r0, #200]	; 0xc8
   249d4:	cmp	r3, r7
   249d8:	bne	24a6c <opt_j+0x1cc>
   249dc:	ldr	r0, [r0, #132]	; 0x84
   249e0:	ldr	r3, [r5, #132]	; 0x84
   249e4:	cmp	r3, r0
   249e8:	bne	249fc <opt_j+0x15c>
   249ec:	ldr	r0, [sp, #12]
   249f0:	cmp	ip, #0
   249f4:	addge	r0, r5, #60	; 0x3c
   249f8:	b	24a14 <opt_j+0x174>
   249fc:	subs	r0, lr, #21
   24a00:	eor	r3, r4, #1
   24a04:	movwne	r0, #1
   24a08:	orrs	r0, r0, r3
   24a0c:	ldr	r0, [sp, #12]
   24a10:	bne	24a6c <opt_j+0x1cc>
   24a14:	ldr	r0, [r0]
   24a18:	cmp	r0, #0
   24a1c:	beq	24a6c <opt_j+0x1cc>
   24a20:	ldr	r3, [r0, #128]	; 0x80
   24a24:	mov	r9, r0
   24a28:	cmp	r3, #0
   24a2c:	beq	24a90 <opt_j+0x1f0>
   24a30:	ldr	r0, [sp, #8]
   24a34:	add	r4, r9, #136	; 0x88
   24a38:	mov	sl, #0
   24a3c:	ldr	r0, [r0, #16]
   24a40:	add	r0, r0, #136	; 0x88
   24a44:	tst	r3, r1, lsl sl
   24a48:	beq	24a5c <opt_j+0x1bc>
   24a4c:	ldr	r7, [r4, sl, lsl #2]
   24a50:	ldr	ip, [r0, sl, lsl #2]
   24a54:	cmp	ip, r7
   24a58:	bne	24a6c <opt_j+0x1cc>
   24a5c:	add	sl, sl, #1
   24a60:	cmp	sl, #18
   24a64:	bcc	24a44 <opt_j+0x1a4>
   24a68:	b	24a90 <opt_j+0x1f0>
   24a6c:	bic	r2, r2, r1, lsl r8
   24a70:	cmp	r2, #0
   24a74:	bne	24990 <opt_j+0xf0>
   24a78:	ldr	r2, [sp, #16]
   24a7c:	ldr	r0, [sp]
   24a80:	add	r2, r2, #1
   24a84:	cmp	r2, r0
   24a88:	blt	24970 <opt_j+0xd0>
   24a8c:	b	24ab8 <opt_j+0x218>
   24a90:	ldr	r2, [pc, #52]	; 24acc <opt_j+0x22c>
   24a94:	mov	r0, #0
   24a98:	mov	r5, r9
   24a9c:	add	r2, pc, r2
   24aa0:	strb	r0, [r2]
   24aa4:	ldr	r0, [sp, #8]
   24aa8:	str	r9, [r0, #12]
   24aac:	ldr	r0, [r9, #60]	; 0x3c
   24ab0:	cmp	r0, #0
   24ab4:	bne	24964 <opt_j+0xc4>
   24ab8:	sub	sp, fp, #28
   24abc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24ac0:	.word	0x00022c40
   24ac4:	.word	0x00022c48
   24ac8:	.word	0x00023058
   24acc:	.word	0x00022ac8

00024ad0 <fold_op>:
   24ad0:	push	{fp, lr}
   24ad4:	mov	fp, sp
   24ad8:	ldr	r3, [r0]
   24adc:	ubfx	ip, r3, #4, #4
   24ae0:	cmp	ip, #8
   24ae4:	bhi	24b98 <fold_op+0xc8>
   24ae8:	ldr	r3, [pc, #184]	; 24ba8 <fold_op+0xd8>
   24aec:	ldr	r3, [pc, r3]
   24af0:	add	r1, r3, r1, lsl #3
   24af4:	add	r2, r3, r2, lsl #3
   24af8:	ldr	lr, [r2, #4]
   24afc:	ldr	r1, [r1, #4]
   24b00:	add	r3, pc, #4
   24b04:	ldr	r2, [r3, ip, lsl #2]
   24b08:	add	pc, r3, r2
   24b0c:	.word	0x00000024
   24b10:	.word	0x00000054
   24b14:	.word	0x00000034
   24b18:	.word	0x0000003c
   24b1c:	.word	0x0000002c
   24b20:	.word	0x0000005c
   24b24:	.word	0x00000064
   24b28:	.word	0x0000004c
   24b2c:	.word	0x0000006c
   24b30:	add	r1, lr, r1
   24b34:	b	24b7c <fold_op+0xac>
   24b38:	orr	r1, lr, r1
   24b3c:	b	24b7c <fold_op+0xac>
   24b40:	mul	r1, lr, r1
   24b44:	b	24b7c <fold_op+0xac>
   24b48:	cmp	lr, #0
   24b4c:	beq	24b9c <fold_op+0xcc>
   24b50:	udiv	r1, r1, lr
   24b54:	b	24b7c <fold_op+0xac>
   24b58:	lsr	r1, r1, lr
   24b5c:	b	24b7c <fold_op+0xac>
   24b60:	sub	r1, r1, lr
   24b64:	b	24b7c <fold_op+0xac>
   24b68:	and	r1, lr, r1
   24b6c:	b	24b7c <fold_op+0xac>
   24b70:	lsl	r1, r1, lr
   24b74:	b	24b7c <fold_op+0xac>
   24b78:	rsb	r1, r1, #0
   24b7c:	mov	r2, #0
   24b80:	str	r2, [r0]
   24b84:	str	r1, [r0, #12]
   24b88:	ldr	r0, [pc, #28]	; 24bac <fold_op+0xdc>
   24b8c:	add	r0, pc, r0
   24b90:	strb	r2, [r0]
   24b94:	pop	{fp, pc}
   24b98:	bl	fc4 <abort@plt>
   24b9c:	ldr	r0, [pc, #12]	; 24bb0 <fold_op+0xe0>
   24ba0:	add	r0, pc, r0
   24ba4:	bl	2124 <sf_bpf_error>
   24ba8:	.word	0x00022ed4
   24bac:	.word	0x000229d8
   24bb0:	.word	0x00006007

00024bb4 <deadstmt>:
   24bb4:	push	{r4, sl, fp, lr}
   24bb8:	add	fp, sp, #8
   24bbc:	ldr	r3, [r0]
   24bc0:	cmn	r3, #1
   24bc4:	beq	24d20 <deadstmt+0x16c>
   24bc8:	and	r2, r3, #7
   24bcc:	sub	r2, r2, #2
   24bd0:	cmp	r2, #5
   24bd4:	bhi	24c0c <deadstmt+0x58>
   24bd8:	add	lr, pc, #8
   24bdc:	mov	ip, #16
   24be0:	ldr	r2, [lr, r2, lsl #2]
   24be4:	add	pc, lr, r2
   24be8:	.word	0x0000009c
   24bec:	.word	0x00000048
   24bf0:	.word	0x00000018
   24bf4:	.word	0x00000018
   24bf8:	.word	0x00000050
   24bfc:	.word	0x0000008c
   24c00:	tst	r3, #8
   24c04:	bne	24c64 <deadstmt+0xb0>
   24c08:	b	24c84 <deadstmt+0xd0>
   24c0c:	and	r2, r3, #224	; 0xe0
   24c10:	cmp	r2, #64	; 0x40
   24c14:	beq	24c30 <deadstmt+0x7c>
   24c18:	cmp	r2, #96	; 0x60
   24c1c:	bne	24c8c <deadstmt+0xd8>
   24c20:	ldr	r3, [r0, #12]
   24c24:	cmp	r3, #0
   24c28:	bge	24c58 <deadstmt+0xa4>
   24c2c:	b	24c8c <deadstmt+0xd8>
   24c30:	mov	ip, #17
   24c34:	b	24c84 <deadstmt+0xd0>
   24c38:	and	r2, r3, #24
   24c3c:	mvn	r3, #0
   24c40:	cmp	r2, #8
   24c44:	movweq	r3, #17
   24c48:	cmp	r2, #16
   24c4c:	beq	24c84 <deadstmt+0xd0>
   24c50:	cmp	r3, #0
   24c54:	blt	24c8c <deadstmt+0xd8>
   24c58:	cmp	r3, #18
   24c5c:	mov	ip, r3
   24c60:	bne	24c84 <deadstmt+0xd0>
   24c64:	mov	r2, #0
   24c68:	str	r2, [r1, #64]	; 0x40
   24c6c:	str	r2, [r1, #68]	; 0x44
   24c70:	b	24c8c <deadstmt+0xd8>
   24c74:	and	r2, r3, #248	; 0xf8
   24c78:	mov	ip, #16
   24c7c:	cmp	r2, #128	; 0x80
   24c80:	movweq	ip, #17
   24c84:	mov	r2, #0
   24c88:	str	r2, [r1, ip, lsl #2]
   24c8c:	ldr	r3, [r0]
   24c90:	cmn	r3, #1
   24c94:	beq	24d20 <deadstmt+0x16c>
   24c98:	and	lr, r3, #7
   24c9c:	cmp	lr, #7
   24ca0:	bhi	24d20 <deadstmt+0x16c>
   24ca4:	add	r4, pc, #8
   24ca8:	mov	ip, #16
   24cac:	ldr	r2, [r4, lr, lsl #2]
   24cb0:	add	pc, r4, r2
   24cb4:	.word	0x00000044
   24cb8:	.word	0x00000030
   24cbc:	.word	0x00000020
   24cc0:	.word	0x00000020
   24cc4:	.word	0x00000044
   24cc8:	.word	0x0000006c
   24ccc:	.word	0x0000006c
   24cd0:	.word	0x00000038
   24cd4:	ldr	ip, [r0, #12]
   24cd8:	cmp	ip, #0
   24cdc:	poplt	{r4, sl, fp, pc}
   24ce0:	b	24cf8 <deadstmt+0x144>
   24ce4:	mov	ip, #17
   24ce8:	b	24cf8 <deadstmt+0x144>
   24cec:	mov	ip, #16
   24cf0:	tst	r3, #248	; 0xf8
   24cf4:	movweq	ip, #17
   24cf8:	ldr	r3, [r1, ip, lsl #2]
   24cfc:	cmp	r3, #0
   24d00:	beq	24d1c <deadstmt+0x168>
   24d04:	ldr	r2, [pc, #24]	; 24d24 <deadstmt+0x170>
   24d08:	mov	r4, #0
   24d0c:	add	r2, pc, r2
   24d10:	strb	r4, [r2]
   24d14:	mvn	r2, #0
   24d18:	str	r2, [r3]
   24d1c:	str	r0, [r1, ip, lsl #2]
   24d20:	pop	{r4, sl, fp, pc}
   24d24:	.word	0x00022858

00024d28 <make_marks>:
   24d28:	push	{r4, r5, fp, lr}
   24d2c:	add	fp, sp, #8
   24d30:	mov	r4, r0
   24d34:	ldr	r0, [r0, #24]
   24d38:	ldr	r5, [pc, #48]	; 24d70 <make_marks+0x48>
   24d3c:	ldr	r5, [pc, r5]
   24d40:	b	24d54 <make_marks+0x2c>
   24d44:	ldr	r0, [r4, #60]	; 0x3c
   24d48:	bl	24d28 <make_marks>
   24d4c:	ldr	r4, [r4, #84]	; 0x54
   24d50:	ldr	r0, [r4, #24]
   24d54:	cmp	r0, r5
   24d58:	strne	r5, [r4, #24]
   24d5c:	ldrne	r0, [r4, #8]
   24d60:	andne	r0, r0, #7
   24d64:	cmpne	r0, #6
   24d68:	bne	24d44 <make_marks+0x1c>
   24d6c:	pop	{r4, r5, fp, pc}
   24d70:	.word	0x0002281c

00024d74 <count_blocks>:
   24d74:	push	{r4, r5, fp, lr}
   24d78:	add	fp, sp, #8
   24d7c:	cmp	r0, #0
   24d80:	beq	24d9c <count_blocks+0x28>
   24d84:	mov	r4, r0
   24d88:	ldr	r1, [r0, #24]
   24d8c:	ldr	r0, [pc, #52]	; 24dc8 <count_blocks+0x54>
   24d90:	ldr	r0, [pc, r0]
   24d94:	cmp	r1, r0
   24d98:	bne	24da4 <count_blocks+0x30>
   24d9c:	mov	r0, #0
   24da0:	pop	{r4, r5, fp, pc}
   24da4:	str	r0, [r4, #24]
   24da8:	ldr	r0, [r4, #60]	; 0x3c
   24dac:	bl	24d74 <count_blocks>
   24db0:	mov	r5, r0
   24db4:	ldr	r0, [r4, #84]	; 0x54
   24db8:	bl	24d74 <count_blocks>
   24dbc:	add	r0, r5, r0
   24dc0:	add	r0, r0, #1
   24dc4:	pop	{r4, r5, fp, pc}
   24dc8:	.word	0x000227c8

00024dcc <number_blks_r>:
   24dcc:	push	{r4, r5, r6, sl, fp, lr}
   24dd0:	add	fp, sp, #16
   24dd4:	cmp	r0, #0
   24dd8:	beq	24e34 <number_blks_r+0x68>
   24ddc:	ldr	r5, [pc, #84]	; 24e38 <number_blks_r+0x6c>
   24de0:	mov	r4, r0
   24de4:	ldr	r5, [pc, r5]
   24de8:	ldr	r6, [pc, #76]	; 24e3c <number_blks_r+0x70>
   24dec:	add	r6, pc, r6
   24df0:	ldr	r0, [r4, #24]
   24df4:	cmp	r0, r5
   24df8:	popeq	{r4, r5, r6, sl, fp, pc}
   24dfc:	str	r5, [r4, #24]
   24e00:	ldr	r0, [pc, #56]	; 24e40 <number_blks_r+0x74>
   24e04:	ldr	r0, [pc, r0]
   24e08:	add	r1, r0, #1
   24e0c:	str	r1, [r6]
   24e10:	str	r0, [r4]
   24e14:	ldr	r1, [pc, #40]	; 24e44 <number_blks_r+0x78>
   24e18:	ldr	r1, [pc, r1]
   24e1c:	str	r4, [r1, r0, lsl #2]
   24e20:	ldr	r0, [r4, #60]	; 0x3c
   24e24:	bl	24dcc <number_blks_r>
   24e28:	ldr	r4, [r4, #84]	; 0x54
   24e2c:	cmp	r4, #0
   24e30:	bne	24df0 <number_blks_r+0x24>
   24e34:	pop	{r4, r5, r6, sl, fp, pc}
   24e38:	.word	0x00022774
   24e3c:	.word	0x0002277c
   24e40:	.word	0x00022764
   24e44:	.word	0x00022b98

00024e48 <sfbpf_strcasecmp>:
   24e48:	push	{fp, lr}
   24e4c:	mov	fp, sp
   24e50:	ldr	ip, [pc, #52]	; 24e8c <sfbpf_strcasecmp+0x44>
   24e54:	add	ip, pc, ip
   24e58:	ldrb	r2, [r1]
   24e5c:	ldrb	r3, [r0]
   24e60:	ldrb	lr, [ip, r2]
   24e64:	ldrb	r2, [ip, r3]
   24e68:	cmp	r2, lr
   24e6c:	subne	r0, r2, lr
   24e70:	popne	{fp, pc}
   24e74:	add	r0, r0, #1
   24e78:	cmp	r3, #0
   24e7c:	add	r1, r1, #1
   24e80:	moveq	r0, #0
   24e84:	popeq	{fp, pc}
   24e88:	b	24e58 <sfbpf_strcasecmp+0x10>
   24e8c:	.word	0x00005dd6

00024e90 <pcap_next_etherent>:
   24e90:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   24e94:	add	fp, sp, #24
   24e98:	ldr	r8, [pc, #580]	; 250e4 <pcap_next_etherent+0x254>
   24e9c:	mov	r5, r0
   24ea0:	vmov.i32	q8, #0	; 0x00000000
   24ea4:	mov	r0, #112	; 0x70
   24ea8:	add	r8, pc, r8
   24eac:	mov	r1, r8
   24eb0:	vst1.64	{d16-d17}, [r1], r0
   24eb4:	add	r0, r8, #96	; 0x60
   24eb8:	vst1.64	{d16-d17}, [r0]
   24ebc:	add	r0, r8, #80	; 0x50
   24ec0:	vst1.64	{d16-d17}, [r1]
   24ec4:	vst1.64	{d16-d17}, [r0]
   24ec8:	add	r0, r8, #64	; 0x40
   24ecc:	vst1.64	{d16-d17}, [r0]
   24ed0:	add	r0, r8, #48	; 0x30
   24ed4:	vst1.64	{d16-d17}, [r0]
   24ed8:	add	r0, r8, #32
   24edc:	vst1.64	{d16-d17}, [r0]
   24ee0:	add	r0, r8, #16
   24ee4:	vst1.64	{d16-d17}, [r0]
   24ee8:	mov	r0, r5
   24eec:	bl	fd0 <getc@plt>
   24ef0:	mov	r7, r0
   24ef4:	bl	eec <__ctype_b_loc@plt>
   24ef8:	mov	r9, r0
   24efc:	ldr	r0, [r0]
   24f00:	cmp	r7, #10
   24f04:	add	r0, r0, r7, lsl #1
   24f08:	ldrh	r1, [r0]
   24f0c:	andsne	r0, r1, #8192	; 0x2000
   24f10:	bne	24ee8 <pcap_next_etherent+0x58>
   24f14:	mov	r0, #10
   24f18:	cmp	r7, #10
   24f1c:	beq	25068 <pcap_next_etherent+0x1d8>
   24f20:	tst	r1, #4096	; 0x1000
   24f24:	bne	24f44 <pcap_next_etherent+0xb4>
   24f28:	mov	r0, r5
   24f2c:	bl	fd0 <getc@plt>
   24f30:	cmn	r0, #1
   24f34:	beq	25068 <pcap_next_etherent+0x1d8>
   24f38:	cmp	r0, #10
   24f3c:	bne	24f28 <pcap_next_etherent+0x98>
   24f40:	b	25068 <pcap_next_etherent+0x1d8>
   24f44:	mov	r4, #0
   24f48:	b	24f58 <pcap_next_etherent+0xc8>
   24f4c:	ldr	r0, [r9]
   24f50:	add	r0, r0, r7, lsl #1
   24f54:	ldrh	r1, [r0]
   24f58:	mvn	r0, #47	; 0x2f
   24f5c:	tst	r1, #2048	; 0x800
   24f60:	bne	24f74 <pcap_next_etherent+0xe4>
   24f64:	uxth	r0, r1
   24f68:	tst	r0, #512	; 0x200
   24f6c:	mvn	r0, #86	; 0x56
   24f70:	mvneq	r0, #54	; 0x36
   24f74:	add	r6, r7, r0
   24f78:	mov	r0, r5
   24f7c:	bl	fd0 <getc@plt>
   24f80:	mov	r7, r0
   24f84:	ldr	r0, [r9]
   24f88:	add	r0, r0, r7, lsl #1
   24f8c:	ldrh	r1, [r0]
   24f90:	tst	r1, #4096	; 0x1000
   24f94:	beq	24fc8 <pcap_next_etherent+0x138>
   24f98:	lsl	r0, r6, #4
   24f9c:	mvn	r2, #47	; 0x2f
   24fa0:	tst	r1, #2048	; 0x800
   24fa4:	bne	24fb4 <pcap_next_etherent+0x124>
   24fa8:	tst	r1, #512	; 0x200
   24fac:	mvn	r2, #86	; 0x56
   24fb0:	mvneq	r2, #54	; 0x36
   24fb4:	add	r1, r7, r2
   24fb8:	orr	r6, r1, r0
   24fbc:	mov	r0, r5
   24fc0:	bl	fd0 <getc@plt>
   24fc4:	mov	r7, r0
   24fc8:	cmp	r7, #58	; 0x3a
   24fcc:	strb	r6, [r8, r4]
   24fd0:	bne	24fec <pcap_next_etherent+0x15c>
   24fd4:	mov	r0, r5
   24fd8:	bl	fd0 <getc@plt>
   24fdc:	add	r4, r4, #1
   24fe0:	mov	r7, r0
   24fe4:	cmp	r4, #5
   24fe8:	bls	24f4c <pcap_next_etherent+0xbc>
   24fec:	cmn	r7, #1
   24ff0:	beq	25070 <pcap_next_etherent+0x1e0>
   24ff4:	ldr	r0, [r9]
   24ff8:	add	r0, r0, r7, lsl #1
   24ffc:	ldrb	r0, [r0, #1]
   25000:	tst	r0, #32
   25004:	bne	25024 <pcap_next_etherent+0x194>
   25008:	mov	r0, r5
   2500c:	bl	fd0 <getc@plt>
   25010:	cmn	r0, #1
   25014:	beq	25068 <pcap_next_etherent+0x1d8>
   25018:	cmp	r0, #10
   2501c:	bne	25008 <pcap_next_etherent+0x178>
   25020:	b	25068 <pcap_next_etherent+0x1d8>
   25024:	mov	r0, r5
   25028:	bl	fd0 <getc@plt>
   2502c:	cmp	r0, #10
   25030:	ldrne	r1, [r9]
   25034:	addne	r1, r1, r0, lsl #1
   25038:	ldrhne	r1, [r1]
   2503c:	andsne	r1, r1, #8192	; 0x2000
   25040:	bne	25024 <pcap_next_etherent+0x194>
   25044:	cmp	r0, #10
   25048:	beq	25068 <pcap_next_etherent+0x1d8>
   2504c:	cmp	r0, #35	; 0x23
   25050:	bne	2507c <pcap_next_etherent+0x1ec>
   25054:	mov	r0, r5
   25058:	bl	fd0 <getc@plt>
   2505c:	cmn	r0, #1
   25060:	cmpne	r0, #10
   25064:	bne	25054 <pcap_next_etherent+0x1c4>
   25068:	cmn	r0, #1
   2506c:	bne	24ee8 <pcap_next_etherent+0x58>
   25070:	mov	r8, #0
   25074:	mov	r0, r8
   25078:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2507c:	mov	r4, #0
   25080:	sub	r6, r8, r4
   25084:	strb	r0, [r6, #6]
   25088:	mov	r0, r5
   2508c:	bl	fd0 <getc@plt>
   25090:	cmn	r0, #1
   25094:	beq	250c0 <pcap_next_etherent+0x230>
   25098:	ldr	r1, [r9]
   2509c:	add	r1, r1, r0, lsl #1
   250a0:	ldrh	r1, [r1]
   250a4:	ands	r1, r1, #8192	; 0x2000
   250a8:	bne	250c0 <pcap_next_etherent+0x230>
   250ac:	add	r2, r4, #121	; 0x79
   250b0:	sub	r1, r4, #1
   250b4:	cmp	r2, #1
   250b8:	mov	r4, r1
   250bc:	bhi	25080 <pcap_next_etherent+0x1f0>
   250c0:	mov	r1, #0
   250c4:	strb	r1, [r6, #7]
   250c8:	cmp	r0, #10
   250cc:	beq	25074 <pcap_next_etherent+0x1e4>
   250d0:	mov	r0, r5
   250d4:	bl	fd0 <getc@plt>
   250d8:	cmn	r0, #1
   250dc:	bne	250c8 <pcap_next_etherent+0x238>
   250e0:	b	25074 <pcap_next_etherent+0x1e4>
   250e4:	.word	0x00022a40

000250e8 <sfbpf_parse>:
   250e8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   250ec:	add	fp, sp, #28
   250f0:	sub	sp, sp, #564	; 0x234
   250f4:	sub	sp, sp, #3072	; 0xc00
   250f8:	ldr	r0, [pc, #4032]	; 260c0 <sfbpf_parse+0xfd8>
   250fc:	mvn	r1, #1
   25100:	sub	r4, fp, #432	; 0x1b0
   25104:	mov	sl, #0
   25108:	add	r9, sp, #32
   2510c:	mov	ip, #200	; 0xc8
   25110:	mov	r6, #15
   25114:	mov	r8, r4
   25118:	add	r0, pc, r0
   2511c:	str	r1, [r0]
   25120:	ldr	r0, [pc, #3996]	; 260c4 <sfbpf_parse+0xfdc>
   25124:	str	r9, [sp, #20]
   25128:	add	r0, pc, r0
   2512c:	str	sl, [r0]
   25130:	b	25138 <sfbpf_parse+0x50>
   25134:	add	r8, r8, #2
   25138:	add	r0, r4, ip, lsl #1
   2513c:	strh	sl, [r8]
   25140:	sub	r0, r0, #2
   25144:	cmp	r0, r8
   25148:	bhi	25200 <sfbpf_parse+0x118>
   2514c:	movw	r0, #9999	; 0x270f
   25150:	cmp	ip, r0
   25154:	bhi	26794 <sfbpf_parse+0x16ac>
   25158:	lsl	r0, ip, #1
   2515c:	movw	r1, #10000	; 0x2710
   25160:	movw	r7, #10000	; 0x2710
   25164:	cmp	r0, r1
   25168:	lslcc	r7, ip, #1
   2516c:	add	r0, r7, r7, lsl #3
   25170:	add	r0, r6, r0, lsl #1
   25174:	bl	ed4 <malloc@plt>
   25178:	cmp	r0, #0
   2517c:	beq	26794 <sfbpf_parse+0x16ac>
   25180:	mov	r5, r0
   25184:	sub	r0, r8, r4
   25188:	mov	r1, #1
   2518c:	mov	r8, r4
   25190:	add	r4, r1, r0, asr #1
   25194:	asr	r9, r0, #1
   25198:	mov	r0, r5
   2519c:	mov	r1, r8
   251a0:	lsl	r2, r4, #1
   251a4:	bl	e80 <memcpy@plt>
   251a8:	add	r0, r6, r7, lsl #1
   251ac:	ldr	r1, [sp, #20]
   251b0:	lsl	r2, r4, #4
   251b4:	bic	r0, r0, #15
   251b8:	add	r6, r5, r0
   251bc:	mov	r0, r6
   251c0:	bl	e80 <memcpy@plt>
   251c4:	sub	r0, fp, #432	; 0x1b0
   251c8:	cmp	r8, r0
   251cc:	beq	251d8 <sfbpf_parse+0xf0>
   251d0:	mov	r0, r8
   251d4:	bl	e5c <free@plt>
   251d8:	add	r0, r5, r7, lsl #1
   251dc:	add	r8, r5, r9, lsl #1
   251e0:	sub	r0, r0, #2
   251e4:	cmp	r0, r8
   251e8:	bls	26778 <sfbpf_parse+0x1690>
   251ec:	add	r9, r6, r9, lsl #4
   251f0:	str	r6, [sp, #20]
   251f4:	mov	ip, r7
   251f8:	mov	r4, r5
   251fc:	mov	r6, #15
   25200:	cmp	sl, #3
   25204:	beq	26764 <sfbpf_parse+0x167c>
   25208:	ldr	r0, [pc, #3768]	; 260c8 <sfbpf_parse+0xfe0>
   2520c:	str	r4, [sp, #24]
   25210:	add	r0, pc, r0
   25214:	add	r0, r0, sl, lsl #1
   25218:	ldrsh	r5, [r0]
   2521c:	cmn	r5, #198	; 0xc6
   25220:	beq	252e8 <sfbpf_parse+0x200>
   25224:	ldr	r0, [pc, #3744]	; 260cc <sfbpf_parse+0xfe4>
   25228:	ldr	r0, [pc, r0]
   2522c:	cmn	r0, #2
   25230:	bne	2524c <sfbpf_parse+0x164>
   25234:	mov	r7, ip
   25238:	bl	2697c <sfbpf_lex>
   2523c:	ldr	r1, [pc, #3724]	; 260d0 <sfbpf_parse+0xfe8>
   25240:	mov	ip, r7
   25244:	add	r1, pc, r1
   25248:	str	r0, [r1]
   2524c:	cmp	r0, #0
   25250:	ble	25270 <sfbpf_parse+0x188>
   25254:	lsr	r2, r0, #1
   25258:	mov	r1, #2
   2525c:	cmp	r2, #182	; 0xb6
   25260:	ldrls	r1, [pc, #3692]	; 260d4 <sfbpf_parse+0xfec>
   25264:	addls	r1, pc, r1
   25268:	ldrbls	r1, [r1, r0]
   2526c:	b	25280 <sfbpf_parse+0x198>
   25270:	ldr	r0, [pc, #3680]	; 260d8 <sfbpf_parse+0xff0>
   25274:	mov	r1, #0
   25278:	add	r0, pc, r0
   2527c:	str	r1, [r0]
   25280:	add	r0, r1, r5
   25284:	movw	r2, #669	; 0x29d
   25288:	cmp	r0, r2
   2528c:	bhi	252e8 <sfbpf_parse+0x200>
   25290:	ldr	r2, [pc, #3652]	; 260dc <sfbpf_parse+0xff4>
   25294:	add	r2, pc, r2
   25298:	add	r2, r2, r0, lsl #1
   2529c:	ldrsh	r2, [r2]
   252a0:	cmp	r1, r2
   252a4:	bne	252e8 <sfbpf_parse+0x200>
   252a8:	ldr	r1, [pc, #3632]	; 260e0 <sfbpf_parse+0xff8>
   252ac:	add	r1, pc, r1
   252b0:	add	r0, r1, r0, lsl #1
   252b4:	ldrsh	sl, [r0]
   252b8:	cmp	sl, #0
   252bc:	ble	25680 <sfbpf_parse+0x598>
   252c0:	ldr	r0, [pc, #3612]	; 260e4 <sfbpf_parse+0xffc>
   252c4:	add	r9, r9, #16
   252c8:	mvn	r1, #1
   252cc:	add	r0, pc, r0
   252d0:	vld1.32	{d16-d17}, [r0]
   252d4:	ldr	r0, [pc, #3596]	; 260e8 <sfbpf_parse+0x1000>
   252d8:	add	r0, pc, r0
   252dc:	vst1.32	{d16-d17}, [r9]
   252e0:	str	r1, [r0]
   252e4:	b	25134 <sfbpf_parse+0x4c>
   252e8:	ldr	r0, [pc, #3580]	; 260ec <sfbpf_parse+0x1004>
   252ec:	add	r0, pc, r0
   252f0:	ldrb	r7, [r0, sl]
   252f4:	cmp	r7, #0
   252f8:	beq	267a8 <sfbpf_parse+0x16c0>
   252fc:	ldr	r0, [pc, #3564]	; 260f0 <sfbpf_parse+0x1008>
   25300:	mov	r1, r9
   25304:	add	r0, pc, r0
   25308:	ldrb	r3, [r0, r7]
   2530c:	rsb	r0, r3, #1
   25310:	ldr	r6, [r1, r0, lsl #4]!
   25314:	sub	r0, r7, #2
   25318:	cmp	r0, #200	; 0xc8
   2531c:	ldr	lr, [r1, #4]
   25320:	ldr	r2, [r1, #8]
   25324:	ldr	r1, [r1, #12]
   25328:	lsr	r5, r6, #24
   2532c:	lsr	r4, r6, #16
   25330:	lsr	sl, r6, #8
   25334:	str	r1, [sp, #28]
   25338:	bhi	264b8 <sfbpf_parse+0x13d0>
   2533c:	add	r1, pc, #4
   25340:	ldr	r0, [r1, r0, lsl #2]
   25344:	add	pc, r1, r0
   25348:	.word	0x00001078
   2534c:	.word	0x00001170
   25350:	.word	0x00000c50
   25354:	.word	0x00001170
   25358:	.word	0x00000370
   2535c:	.word	0x00000370
   25360:	.word	0x00000340
   25364:	.word	0x00000340
   25368:	.word	0x00000324
   2536c:	.word	0x00000324
   25370:	.word	0x00001170
   25374:	.word	0x000003f0
   25378:	.word	0x00000324
   2537c:	.word	0x000006a8
   25380:	.word	0x00000544
   25384:	.word	0x000005fc
   25388:	.word	0x00000568
   2538c:	.word	0x00000508
   25390:	.word	0x00001128
   25394:	.word	0x00001104
   25398:	.word	0x0000121c
   2539c:	.word	0x00000424
   253a0:	.word	0x00000324
   253a4:	.word	0x00000324
   253a8:	.word	0x00001170
   253ac:	.word	0x00000370
   253b0:	.word	0x00000340
   253b4:	.word	0x000003f0
   253b8:	.word	0x00001170
   253bc:	.word	0x00001170
   253c0:	.word	0x00000424
   253c4:	.word	0x000005cc
   253c8:	.word	0x000005dc
   253cc:	.word	0x00000470
   253d0:	.word	0x000005ec
   253d4:	.word	0x00000628
   253d8:	.word	0x00000470
   253dc:	.word	0x0000043c
   253e0:	.word	0x00000aa8
   253e4:	.word	0x00000638
   253e8:	.word	0x00000714
   253ec:	.word	0x00000ab0
   253f0:	.word	0x00000520
   253f4:	.word	0x000007f0
   253f8:	.word	0x00000528
   253fc:	.word	0x00000450
   25400:	.word	0x00000c24
   25404:	.word	0x00000450
   25408:	.word	0x00001170
   2540c:	.word	0x00000730
   25410:	.word	0x000003e4
   25414:	.word	0x00000388
   25418:	.word	0x00000364
   2541c:	.word	0x00000364
   25420:	.word	0x00000358
   25424:	.word	0x00000358
   25428:	.word	0x000004d8
   2542c:	.word	0x000004cc
   25430:	.word	0x000003d8
   25434:	.word	0x00000480
   25438:	.word	0x000003e4
   2543c:	.word	0x00000388
   25440:	.word	0x00000364
   25444:	.word	0x000003d8
   25448:	.word	0x00000358
   2544c:	.word	0x000003e4
   25450:	.word	0x00000388
   25454:	.word	0x00000364
   25458:	.word	0x00000358
   2545c:	.word	0x000004d8
   25460:	.word	0x000004cc
   25464:	.word	0x000003d8
   25468:	.word	0x00000480
   2546c:	.word	0x00000bf0
   25470:	.word	0x00000c64
   25474:	.word	0x0000087c
   25478:	.word	0x000003c4
   2547c:	.word	0x000006d4
   25480:	.word	0x000003b8
   25484:	.word	0x0000055c
   25488:	.word	0x000006e0
   2548c:	.word	0x000006ec
   25490:	.word	0x00000394
   25494:	.word	0x00001044
   25498:	.word	0x00000680
   2549c:	.word	0x00001050
   254a0:	.word	0x0000109c
   254a4:	.word	0x000010f0
   254a8:	.word	0x000003a0
   254ac:	.word	0x00000464
   254b0:	.word	0x000004e4
   254b4:	.word	0x000004c0
   254b8:	.word	0x000003ac
   254bc:	.word	0x00000bd8
   254c0:	.word	0x00000be4
   254c4:	.word	0x000010e4
   254c8:	.word	0x00000498
   254cc:	.word	0x00000888
   254d0:	.word	0x000004fc
   254d4:	.word	0x00000458
   254d8:	.word	0x0000048c
   254dc:	.word	0x000004f0
   254e0:	.word	0x00000d10
   254e4:	.word	0x0000068c
   254e8:	.word	0x000010a8
   254ec:	.word	0x000006f8
   254f0:	.word	0x0000105c
   254f4:	.word	0x000007ac
   254f8:	.word	0x0000065c
   254fc:	.word	0x000008b8
   25500:	.word	0x00000848
   25504:	.word	0x00000894
   25508:	.word	0x000008d4
   2550c:	.word	0x000008dc
   25510:	.word	0x00000850
   25514:	.word	0x00000b98
   25518:	.word	0x000003d0
   2551c:	.word	0x000003d0
   25520:	.word	0x00000cc0
   25524:	.word	0x00000bfc
   25528:	.word	0x00000664
   2552c:	.word	0x00000d40
   25530:	.word	0x0000100c
   25534:	.word	0x00001028
   25538:	.word	0x0000080c
   2553c:	.word	0x000007d0
   25540:	.word	0x00000654
   25544:	.word	0x00000d5c
   25548:	.word	0x00001170
   2554c:	.word	0x00000924
   25550:	.word	0x00001170
   25554:	.word	0x00000778
   25558:	.word	0x00000dac
   2555c:	.word	0x00001170
   25560:	.word	0x000009e0
   25564:	.word	0x000003d0
   25568:	.word	0x00001458
   2556c:	.word	0x0000145c
   25570:	.word	0x000003ac
   25574:	.word	0x000004ac
   25578:	.word	0x00000394
   2557c:	.word	0x000003ac
   25580:	.word	0x000004ac
   25584:	.word	0x00000394
   25588:	.word	0x00000c70
   2558c:	.word	0x00001170
   25590:	.word	0x00000d1c
   25594:	.word	0x0000073c
   25598:	.word	0x00000750
   2559c:	.word	0x00000764
   255a0:	.word	0x000007dc
   255a4:	.word	0x00000868
   255a8:	.word	0x00000bb0
   255ac:	.word	0x00000ae8
   255b0:	.word	0x00000bc4
   255b4:	.word	0x00000cdc
   255b8:	.word	0x00000c8c
   255bc:	.word	0x000004b8
   255c0:	.word	0x000009b4
   255c4:	.word	0x00000498
   255c8:	.word	0x000009cc
   255cc:	.word	0x00000ca8
   255d0:	.word	0x00000c18
   255d4:	.word	0x00000afc
   255d8:	.word	0x00001170
   255dc:	.word	0x000004b8
   255e0:	.word	0x000004f0
   255e4:	.word	0x000004c0
   255e8:	.word	0x000003c4
   255ec:	.word	0x000003b8
   255f0:	.word	0x00000464
   255f4:	.word	0x000003a0
   255f8:	.word	0x000004e4
   255fc:	.word	0x000004fc
   25600:	.word	0x00000458
   25604:	.word	0x0000048c
   25608:	.word	0x00000b08
   2560c:	.word	0x00000cb4
   25610:	.word	0x00000b14
   25614:	.word	0x00000b1c
   25618:	.word	0x00001170
   2561c:	.word	0x00000834
   25620:	.word	0x00000a6c
   25624:	.word	0x000004a4
   25628:	.word	0x000008f8
   2562c:	.word	0x00001170
   25630:	.word	0x00000340
   25634:	.word	0x000003c4
   25638:	.word	0x000003b8
   2563c:	.word	0x000003a0
   25640:	.word	0x000008b0
   25644:	.word	0x00000b24
   25648:	.word	0x000009d8
   2564c:	.word	0x00000b2c
   25650:	.word	0x00001170
   25654:	.word	0x00000a94
   25658:	.word	0x00000b34
   2565c:	.word	0x000004a4
   25660:	.word	0x00000b50
   25664:	.word	0x00001170
   25668:	.word	0x00000340
   2566c:	ldr	r6, [r9, #-16]
   25670:	ldr	lr, [r9, #-12]
   25674:	ldr	r2, [r9, #-8]
   25678:	ldr	r0, [r9, #-4]
   2567c:	b	264a8 <sfbpf_parse+0x13c0>
   25680:	rsb	r7, sl, #0
   25684:	b	252fc <sfbpf_parse+0x214>
   25688:	ldr	r0, [r9, #-20]	; 0xffffffec
   2568c:	ldr	r1, [r9, #12]
   25690:	mov	r4, ip
   25694:	mov	r5, r3
   25698:	bl	5764 <sf_gen_or>
   2569c:	b	2577c <sfbpf_parse+0x694>
   256a0:	mov	sl, #0
   256a4:	mov	r6, #4
   256a8:	b	26440 <sfbpf_parse+0x1358>
   256ac:	mov	sl, #0
   256b0:	mov	r6, #3
   256b4:	b	26440 <sfbpf_parse+0x1358>
   256b8:	ldr	r0, [r9, #-20]	; 0xffffffec
   256bc:	ldr	r1, [r9, #12]
   256c0:	mov	r4, ip
   256c4:	mov	r5, r3
   256c8:	bl	5684 <sf_gen_and>
   256cc:	b	2577c <sfbpf_parse+0x694>
   256d0:	mov	sl, #0
   256d4:	mov	r6, #2
   256d8:	b	26440 <sfbpf_parse+0x1358>
   256dc:	mov	sl, #0
   256e0:	mov	r6, #16
   256e4:	b	26440 <sfbpf_parse+0x1358>
   256e8:	mov	sl, #0
   256ec:	mov	r6, #24
   256f0:	b	26440 <sfbpf_parse+0x1358>
   256f4:	mov	sl, #0
   256f8:	mov	r6, #32
   256fc:	b	26440 <sfbpf_parse+0x1358>
   25700:	mov	sl, #0
   25704:	mov	r6, #23
   25708:	b	26440 <sfbpf_parse+0x1358>
   2570c:	mov	sl, #0
   25710:	mov	r6, #22
   25714:	b	26440 <sfbpf_parse+0x1358>
   25718:	ldr	r6, [r9]
   2571c:	b	264ac <sfbpf_parse+0x13c4>
   25720:	mov	sl, #0
   25724:	mov	r6, #7
   25728:	b	26440 <sfbpf_parse+0x1358>
   2572c:	mov	sl, #0
   25730:	mov	r6, #1
   25734:	b	26440 <sfbpf_parse+0x1358>
   25738:	ldr	r6, [r9, #-16]
   2573c:	ldr	r1, [r9]
   25740:	str	r2, [sp, #16]
   25744:	mov	r0, #0
   25748:	mov	r4, ip
   2574c:	mov	r5, r3
   25750:	mov	sl, lr
   25754:	mov	r2, r6
   25758:	bl	122c8 <sf_gen_ncode>
   2575c:	ldr	r2, [sp, #16]
   25760:	mov	lr, sl
   25764:	mov	r3, r5
   25768:	b	264a4 <sfbpf_parse+0x13bc>
   2576c:	ldr	r0, [r9, #12]
   25770:	mov	r4, ip
   25774:	mov	r5, r3
   25778:	bl	581c <sf_gen_not>
   2577c:	mov	r3, r5
   25780:	mov	ip, r4
   25784:	ldr	r6, [r9]
   25788:	ldr	lr, [r9, #4]
   2578c:	ldr	r2, [r9, #8]
   25790:	ldr	r0, [r9, #12]
   25794:	b	264a8 <sfbpf_parse+0x13c0>
   25798:	ldr	r0, [r9, #12]
   2579c:	b	25f94 <sfbpf_parse+0xeac>
   257a0:	mov	sl, #0
   257a4:	mov	r6, #28
   257a8:	b	26440 <sfbpf_parse+0x1358>
   257ac:	mov	sl, #0
   257b0:	mov	r6, #25
   257b4:	b	26440 <sfbpf_parse+0x1358>
   257b8:	ldrb	r6, [r9]
   257bc:	ldr	sl, [r9, #-16]
   257c0:	mov	r4, #0
   257c4:	b	264b8 <sfbpf_parse+0x13d0>
   257c8:	mov	sl, #0
   257cc:	mov	r6, #8
   257d0:	b	26440 <sfbpf_parse+0x1358>
   257d4:	mov	sl, #0
   257d8:	mov	r6, #29
   257dc:	b	26440 <sfbpf_parse+0x1358>
   257e0:	mov	sl, #0
   257e4:	mov	r6, #38	; 0x26
   257e8:	b	26440 <sfbpf_parse+0x1358>
   257ec:	ldr	r0, [r9, #-4]
   257f0:	b	25f94 <sfbpf_parse+0xeac>
   257f4:	mov	sl, #0
   257f8:	mov	r6, #48	; 0x30
   257fc:	b	26440 <sfbpf_parse+0x1358>
   25800:	ldr	r6, [r9, #-16]
   25804:	b	264ac <sfbpf_parse+0x13c4>
   25808:	mov	sl, #0
   2580c:	mov	r6, #31
   25810:	b	26440 <sfbpf_parse+0x1358>
   25814:	mov	sl, #0
   25818:	mov	r6, #6
   2581c:	b	26440 <sfbpf_parse+0x1358>
   25820:	mov	sl, #0
   25824:	mov	r6, #5
   25828:	b	26440 <sfbpf_parse+0x1358>
   2582c:	mov	sl, #0
   25830:	mov	r6, #26
   25834:	b	26440 <sfbpf_parse+0x1358>
   25838:	mov	sl, #0
   2583c:	mov	r6, #30
   25840:	b	26440 <sfbpf_parse+0x1358>
   25844:	mov	sl, #0
   25848:	mov	r6, #27
   2584c:	b	26440 <sfbpf_parse+0x1358>
   25850:	str	r2, [sp, #16]
   25854:	ldr	r6, [r9, #-48]	; 0xffffffd0
   25858:	ldr	r0, [r9, #-32]	; 0xffffffe0
   2585c:	ldr	r2, [r9]
   25860:	mov	r1, #0
   25864:	b	26484 <sfbpf_parse+0x139c>
   25868:	ldr	r0, [r9]
   2586c:	b	25f94 <sfbpf_parse+0xeac>
   25870:	ldr	r0, [r9]
   25874:	mov	sl, ip
   25878:	mov	r5, r3
   2587c:	mov	r6, lr
   25880:	mov	r4, r2
   25884:	bl	1b04c <sf_gen_atmmulti_abbrev>
   25888:	b	25f84 <sfbpf_parse+0xe9c>
   2588c:	str	r2, [sp, #16]
   25890:	ldr	r6, [r9, #-48]	; 0xffffffd0
   25894:	ldr	r0, [r9, #-32]	; 0xffffffe0
   25898:	ldr	r2, [r9]
   2589c:	mov	r1, #0
   258a0:	b	25958 <sfbpf_parse+0x870>
   258a4:	mov	sl, #0
   258a8:	mov	r6, #12
   258ac:	b	26440 <sfbpf_parse+0x1358>
   258b0:	str	r2, [sp, #16]
   258b4:	stmib	sp, {r3, lr}
   258b8:	mvn	r0, #2
   258bc:	str	ip, [sp, #12]
   258c0:	ldr	r6, [r9, #-16]
   258c4:	uxtab	r0, r0, r6
   258c8:	cmp	r0, #4
   258cc:	bhi	258f0 <sfbpf_parse+0x808>
   258d0:	add	r1, pc, #4
   258d4:	ldr	r0, [r1, r0, lsl #2]
   258d8:	add	pc, r1, r0
   258dc:	.word	0x00000efc
   258e0:	.word	0x00000014
   258e4:	.word	0x00000f08
   258e8:	.word	0x00000f14
   258ec:	.word	0x00000f20
   258f0:	ldr	r0, [r9]
   258f4:	mov	r1, #0
   258f8:	mov	r2, r6
   258fc:	bl	122c8 <sf_gen_ncode>
   25900:	str	r0, [sp, #28]
   25904:	lsr	sl, r6, #8
   25908:	lsr	r4, r6, #16
   2590c:	lsr	r5, r6, #24
   25910:	b	26674 <sfbpf_parse+0x158c>
   25914:	ldrb	r6, [r9]
   25918:	ldr	sl, [r9, #-32]	; 0xffffffe0
   2591c:	ldr	r4, [r9, #-16]
   25920:	b	264b8 <sfbpf_parse+0x13d0>
   25924:	ldr	sl, [r9, #-16]
   25928:	ldr	r4, [r9]
   2592c:	mov	r6, #0
   25930:	b	264b8 <sfbpf_parse+0x13d0>
   25934:	ldr	sl, [r9, #-16]
   25938:	mov	r4, #0
   2593c:	mov	r6, #5
   25940:	b	264b8 <sfbpf_parse+0x13d0>
   25944:	ldr	r6, [r9, #-48]	; 0xffffffd0
   25948:	ldr	r0, [r9, #-32]	; 0xffffffe0
   2594c:	ldr	r1, [r9]
   25950:	str	r2, [sp, #16]
   25954:	mov	r2, #0
   25958:	mov	sl, r3
   2595c:	mov	r3, r6
   25960:	mov	r4, ip
   25964:	mov	r5, lr
   25968:	bl	121b4 <sf_gen_mcode>
   2596c:	b	26498 <sfbpf_parse+0x13b0>
   25970:	ldr	sl, [r9, #-16]
   25974:	mov	r4, #0
   25978:	mov	r6, #6
   2597c:	b	264b8 <sfbpf_parse+0x13d0>
   25980:	ldr	r0, [r9]
   25984:	mov	sl, ip
   25988:	mov	r5, r3
   2598c:	mov	r6, lr
   25990:	mov	r4, r2
   25994:	bl	5830 <sf_gen_proto_abbrev>
   25998:	b	25f84 <sfbpf_parse+0xe9c>
   2599c:	ldr	r0, [r9]
   259a0:	b	25b60 <sfbpf_parse+0xa78>
   259a4:	mov	r0, #0
   259a8:	b	25c04 <sfbpf_parse+0xb1c>
   259ac:	ldr	r0, [r9]
   259b0:	mov	sl, ip
   259b4:	mov	r5, r3
   259b8:	mov	r6, lr
   259bc:	mov	r4, r2
   259c0:	bl	1857c <sf_gen_pf_rnr>
   259c4:	b	26408 <sfbpf_parse+0x1320>
   259c8:	mov	sl, #0
   259cc:	mov	r6, #17
   259d0:	b	26440 <sfbpf_parse+0x1358>
   259d4:	ldr	r0, [r9, #-16]
   259d8:	mov	sl, ip
   259dc:	mov	r5, r3
   259e0:	mov	r6, lr
   259e4:	mov	r4, r2
   259e8:	bl	15ee0 <sf_gen_broadcast>
   259ec:	b	26408 <sfbpf_parse+0x1320>
   259f0:	ldr	r6, [r9, #-16]
   259f4:	ldr	r0, [r9]
   259f8:	str	ip, [sp, #12]
   259fc:	stmib	sp, {r3, lr}
   25a00:	str	r2, [sp, #16]
   25a04:	mov	r1, r6
   25a08:	lsr	r5, r6, #24
   25a0c:	lsr	r4, r6, #16
   25a10:	lsr	sl, r6, #8
   25a14:	bl	ba9c <sf_gen_scode>
   25a18:	b	25ecc <sfbpf_parse+0xde4>
   25a1c:	mov	sl, #0
   25a20:	mov	r6, #11
   25a24:	b	26440 <sfbpf_parse+0x1358>
   25a28:	mov	sl, #0
   25a2c:	mov	r6, #13
   25a30:	b	26440 <sfbpf_parse+0x1358>
   25a34:	mov	sl, #0
   25a38:	mov	r6, #14
   25a3c:	b	26440 <sfbpf_parse+0x1358>
   25a40:	ldr	r0, [r9]
   25a44:	mov	sl, ip
   25a48:	mov	r5, r3
   25a4c:	mov	r6, lr
   25a50:	mov	r4, r2
   25a54:	bl	15ab8 <sf_gen_less>
   25a58:	b	26408 <sfbpf_parse+0x1320>
   25a5c:	mov	sl, r2
   25a60:	ldr	r1, [r9, #-32]	; 0xffffffe0
   25a64:	ldr	r0, [r9, #-16]
   25a68:	ldr	r2, [r9]
   25a6c:	mov	r5, r3
   25a70:	mov	r3, #0
   25a74:	b	25e10 <sfbpf_parse+0xd28>
   25a78:	mov	r6, #0
   25a7c:	mov	sl, #0
   25a80:	b	26440 <sfbpf_parse+0x1358>
   25a84:	mov	sl, r2
   25a88:	ldr	r0, [r9, #-80]	; 0xffffffb0
   25a8c:	ldr	r1, [r9, #-48]	; 0xffffffd0
   25a90:	ldr	r2, [r9, #-16]
   25a94:	b	26074 <sfbpf_parse+0xf8c>
   25a98:	mov	sl, r2
   25a9c:	ldr	r1, [r9, #-32]	; 0xffffffe0
   25aa0:	ldr	r2, [r9]
   25aa4:	mov	r0, #0
   25aa8:	b	26034 <sfbpf_parse+0xf4c>
   25aac:	mov	sl, r2
   25ab0:	ldr	r1, [r9, #-32]	; 0xffffffe0
   25ab4:	ldr	r2, [r9]
   25ab8:	mov	r0, #16
   25abc:	b	26034 <sfbpf_parse+0xf4c>
   25ac0:	ldr	r0, [r9, #-32]	; 0xffffffe0
   25ac4:	str	ip, [sp, #12]
   25ac8:	stmib	sp, {r3, lr}
   25acc:	str	r2, [sp, #16]
   25ad0:	cmp	r0, #0
   25ad4:	beq	265c8 <sfbpf_parse+0x14e0>
   25ad8:	cmp	r0, #4
   25adc:	beq	265d4 <sfbpf_parse+0x14ec>
   25ae0:	cmp	r0, #8
   25ae4:	bne	26808 <sfbpf_parse+0x1720>
   25ae8:	ldr	r1, [pc, #3392]	; 26830 <sfbpf_parse+0x1748>
   25aec:	add	r1, pc, r1
   25af0:	b	265dc <sfbpf_parse+0x14f4>
   25af4:	mov	sl, r2
   25af8:	ldr	r1, [r9, #-32]	; 0xffffffe0
   25afc:	ldr	r0, [r9, #-16]
   25b00:	ldr	r2, [r9]
   25b04:	mov	r4, ip
   25b08:	mov	r5, r3
   25b0c:	mov	r6, lr
   25b10:	bl	15ae0 <sf_gen_byteop>
   25b14:	b	26044 <sfbpf_parse+0xf5c>
   25b18:	ldr	r0, [r9]
   25b1c:	mov	r1, #12
   25b20:	b	25b64 <sfbpf_parse+0xa7c>
   25b24:	mov	sl, r2
   25b28:	ldr	r1, [r9, #-32]	; 0xffffffe0
   25b2c:	ldr	r2, [r9]
   25b30:	mov	r0, #32
   25b34:	b	26034 <sfbpf_parse+0xf4c>
   25b38:	ldr	r0, [r9]
   25b3c:	mov	sl, ip
   25b40:	mov	r5, r3
   25b44:	mov	r6, lr
   25b48:	mov	r4, r2
   25b4c:	bl	19788 <sf_gen_atmtype_abbrev>
   25b50:	b	25f84 <sfbpf_parse+0xe9c>
   25b54:	ldr	r0, [r9, #-32]	; 0xffffffe0
   25b58:	ldr	r1, [r9]
   25b5c:	orr	r0, r1, r0
   25b60:	mov	r1, #252	; 0xfc
   25b64:	mov	sl, ip
   25b68:	mov	r5, r3
   25b6c:	mov	r6, lr
   25b70:	mov	r4, r2
   25b74:	bl	185dc <sf_gen_p80211_type>
   25b78:	b	26408 <sfbpf_parse+0x1320>
   25b7c:	str	r2, [sp, #16]
   25b80:	ldr	r0, [r9, #-28]	; 0xffffffe4
   25b84:	ldr	r2, [r9, #-16]
   25b88:	ldr	r1, [r9]
   25b8c:	b	25c60 <sfbpf_parse+0xb78>
   25b90:	ldr	r0, [r9]
   25b94:	b	25be0 <sfbpf_parse+0xaf8>
   25b98:	mov	sl, ip
   25b9c:	mov	r5, r3
   25ba0:	mov	r6, lr
   25ba4:	mov	r4, r2
   25ba8:	bl	1937c <sf_gen_pppoed>
   25bac:	b	26408 <sfbpf_parse+0x1320>
   25bb0:	mov	sl, r2
   25bb4:	ldr	r1, [r9, #-32]	; 0xffffffe0
   25bb8:	ldr	r2, [r9]
   25bbc:	mov	r0, #48	; 0x30
   25bc0:	b	26034 <sfbpf_parse+0xf4c>
   25bc4:	mov	sl, #0
   25bc8:	mov	r6, #21
   25bcc:	b	26440 <sfbpf_parse+0x1358>
   25bd0:	mov	sl, #0
   25bd4:	mov	r6, #37	; 0x25
   25bd8:	b	26440 <sfbpf_parse+0x1358>
   25bdc:	mvn	r0, #0
   25be0:	mov	sl, ip
   25be4:	mov	r5, r3
   25be8:	mov	r6, lr
   25bec:	mov	r4, r2
   25bf0:	bl	18bdc <sf_gen_vlan>
   25bf4:	b	26408 <sfbpf_parse+0x1320>
   25bf8:	mov	r2, #1
   25bfc:	b	264b8 <sfbpf_parse+0x13d0>
   25c00:	mov	r0, #1
   25c04:	mov	sl, ip
   25c08:	mov	r5, r3
   25c0c:	mov	r6, lr
   25c10:	mov	r4, r2
   25c14:	bl	17e6c <sf_gen_inbound>
   25c18:	b	26408 <sfbpf_parse+0x1320>
   25c1c:	ldr	r0, [r9]
   25c20:	b	25c28 <sfbpf_parse+0xb40>
   25c24:	mvn	r0, #0
   25c28:	mov	sl, ip
   25c2c:	mov	r5, r3
   25c30:	mov	r6, lr
   25c34:	mov	r4, r2
   25c38:	bl	18eec <sf_gen_mpls>
   25c3c:	b	26408 <sfbpf_parse+0x1320>
   25c40:	ldr	lr, [r9, #-12]
   25c44:	sub	r0, lr, #51	; 0x33
   25c48:	cmp	r0, #1
   25c4c:	bhi	264b8 <sfbpf_parse+0x13d0>
   25c50:	ldr	r1, [r9]
   25c54:	str	r2, [sp, #16]
   25c58:	mov	r0, lr
   25c5c:	mov	r2, #16
   25c60:	str	r3, [sp, #4]
   25c64:	mov	r3, #0
   25c68:	b	25dcc <sfbpf_parse+0xce4>
   25c6c:	str	r2, [sp, #16]
   25c70:	stmib	sp, {r3, lr}
   25c74:	str	ip, [sp, #12]
   25c78:	ldr	r6, [r9]
   25c7c:	ldr	r0, [pc, #3008]	; 26844 <sfbpf_parse+0x175c>
   25c80:	add	r0, pc, r0
   25c84:	mov	r1, r6
   25c88:	bl	24e48 <sfbpf_strcasecmp>
   25c8c:	cmp	r0, #0
   25c90:	beq	265b8 <sfbpf_parse+0x14d0>
   25c94:	ldr	r0, [pc, #2988]	; 26848 <sfbpf_parse+0x1760>
   25c98:	mov	r1, r6
   25c9c:	add	r0, pc, r0
   25ca0:	bl	24e48 <sfbpf_strcasecmp>
   25ca4:	cmp	r0, #0
   25ca8:	beq	26620 <sfbpf_parse+0x1538>
   25cac:	ldr	r0, [pc, #3076]	; 268b8 <sfbpf_parse+0x17d0>
   25cb0:	mov	r1, r6
   25cb4:	add	r0, pc, r0
   25cb8:	bl	24e48 <sfbpf_strcasecmp>
   25cbc:	cmp	r0, #0
   25cc0:	beq	26638 <sfbpf_parse+0x1550>
   25cc4:	ldr	r0, [pc, #3056]	; 268bc <sfbpf_parse+0x17d4>
   25cc8:	mov	r1, r6
   25ccc:	add	r0, pc, r0
   25cd0:	bl	24e48 <sfbpf_strcasecmp>
   25cd4:	cmp	r0, #0
   25cd8:	beq	26658 <sfbpf_parse+0x1570>
   25cdc:	ldr	r0, [pc, #3036]	; 268c0 <sfbpf_parse+0x17d8>
   25ce0:	mov	r1, r6
   25ce4:	add	r0, pc, r0
   25ce8:	bl	24e48 <sfbpf_strcasecmp>
   25cec:	mov	r1, #4
   25cf0:	cmp	r0, #0
   25cf4:	beq	2665c <sfbpf_parse+0x1574>
   25cf8:	b	26820 <sfbpf_parse+0x1738>
   25cfc:	mov	sl, ip
   25d00:	mov	r5, r3
   25d04:	mov	r6, lr
   25d08:	mov	r4, r2
   25d0c:	bl	14f40 <sf_gen_loadlen>
   25d10:	b	26408 <sfbpf_parse+0x1320>
   25d14:	mov	sl, #0
   25d18:	mov	r6, #124	; 0x7c
   25d1c:	b	26440 <sfbpf_parse+0x1358>
   25d20:	mov	r2, #3
   25d24:	b	264b8 <sfbpf_parse+0x13d0>
   25d28:	str	r2, [sp, #16]
   25d2c:	stmib	sp, {r3, lr}
   25d30:	str	ip, [sp, #12]
   25d34:	ldr	r0, [r9]
   25d38:	ldr	r1, [pc, #2860]	; 2686c <sfbpf_parse+0x1784>
   25d3c:	add	r1, pc, r1
   25d40:	bl	24e48 <sfbpf_strcasecmp>
   25d44:	mov	sl, #0
   25d48:	cmp	r0, #0
   25d4c:	beq	265c0 <sfbpf_parse+0x14d8>
   25d50:	ldr	r0, [r9]
   25d54:	ldr	r1, [pc, #2836]	; 26870 <sfbpf_parse+0x1788>
   25d58:	add	r1, pc, r1
   25d5c:	bl	24e48 <sfbpf_strcasecmp>
   25d60:	cmp	r0, #0
   25d64:	beq	26628 <sfbpf_parse+0x1540>
   25d68:	ldr	r0, [r9]
   25d6c:	ldr	r1, [pc, #2816]	; 26874 <sfbpf_parse+0x178c>
   25d70:	add	r1, pc, r1
   25d74:	bl	24e48 <sfbpf_strcasecmp>
   25d78:	cmp	r0, #0
   25d7c:	beq	26640 <sfbpf_parse+0x1558>
   25d80:	ldr	r0, [r9]
   25d84:	ldr	r1, [pc, #2796]	; 26878 <sfbpf_parse+0x1790>
   25d88:	add	r1, pc, r1
   25d8c:	bl	24e48 <sfbpf_strcasecmp>
   25d90:	ldr	ip, [sp, #12]
   25d94:	ldmib	sp, {r3, lr}
   25d98:	ldr	r2, [sp, #16]
   25d9c:	mov	r6, #3
   25da0:	cmp	r0, #0
   25da4:	mov	r4, #0
   25da8:	mov	r5, #0
   25dac:	beq	264b8 <sfbpf_parse+0x13d0>
   25db0:	b	26814 <sfbpf_parse+0x172c>
   25db4:	str	r2, [sp, #16]
   25db8:	ldr	r0, [r9, #-28]	; 0xffffffe4
   25dbc:	ldr	r2, [r9, #-16]
   25dc0:	ldr	r1, [r9]
   25dc4:	str	r3, [sp, #4]
   25dc8:	mov	r3, #1
   25dcc:	str	ip, [sp, #12]
   25dd0:	str	lr, [sp, #8]
   25dd4:	bl	19400 <sf_gen_atmfield_code>
   25dd8:	b	25ecc <sfbpf_parse+0xde4>
   25ddc:	str	r2, [sp, #16]
   25de0:	ldr	r0, [r9, #-24]	; 0xffffffe8
   25de4:	ldr	r2, [r9, #-16]
   25de8:	ldr	r1, [r9]
   25dec:	b	25eb8 <sfbpf_parse+0xdd0>
   25df0:	ldr	r6, [r9, #-32]	; 0xffffffe0
   25df4:	b	25678 <sfbpf_parse+0x590>
   25df8:	mov	sl, r2
   25dfc:	ldr	r1, [r9, #-32]	; 0xffffffe0
   25e00:	ldr	r0, [r9, #-16]
   25e04:	ldr	r2, [r9]
   25e08:	mov	r5, r3
   25e0c:	mov	r3, #1
   25e10:	mov	r4, ip
   25e14:	mov	r6, lr
   25e18:	bl	149f0 <sf_gen_relation>
   25e1c:	mov	r2, sl
   25e20:	mov	lr, r6
   25e24:	mov	r3, r5
   25e28:	mov	ip, r4
   25e2c:	b	25f94 <sfbpf_parse+0xeac>
   25e30:	mov	sl, r2
   25e34:	ldr	r1, [r9, #-32]	; 0xffffffe0
   25e38:	ldr	r2, [r9]
   25e3c:	mov	r0, #64	; 0x40
   25e40:	b	26034 <sfbpf_parse+0xf4c>
   25e44:	mov	sl, #0
   25e48:	mov	r6, #61	; 0x3d
   25e4c:	b	26440 <sfbpf_parse+0x1358>
   25e50:	mov	sl, #0
   25e54:	mov	r6, #70	; 0x46
   25e58:	b	26440 <sfbpf_parse+0x1358>
   25e5c:	mov	lr, #51	; 0x33
   25e60:	b	264b8 <sfbpf_parse+0x13d0>
   25e64:	mov	lr, #52	; 0x34
   25e68:	b	264b8 <sfbpf_parse+0x13d0>
   25e6c:	mov	r2, #2
   25e70:	b	264b8 <sfbpf_parse+0x13d0>
   25e74:	mov	r2, #4
   25e78:	b	264b8 <sfbpf_parse+0x13d0>
   25e7c:	str	r2, [sp, #16]
   25e80:	ldr	r0, [r9, #-24]	; 0xffffffe8
   25e84:	ldr	r2, [r9, #-16]
   25e88:	ldr	r1, [r9]
   25e8c:	str	r3, [sp, #4]
   25e90:	mov	r3, #1
   25e94:	b	25ec0 <sfbpf_parse+0xdd8>
   25e98:	ldr	r2, [r9, #-8]
   25e9c:	sub	r0, r2, #1
   25ea0:	cmp	r0, #3
   25ea4:	bhi	264b8 <sfbpf_parse+0x13d0>
   25ea8:	ldr	r1, [r9]
   25eac:	mov	r0, r2
   25eb0:	str	r2, [sp, #16]
   25eb4:	mov	r2, #16
   25eb8:	str	r3, [sp, #4]
   25ebc:	mov	r3, #0
   25ec0:	str	ip, [sp, #12]
   25ec4:	str	lr, [sp, #8]
   25ec8:	bl	1a82c <sf_gen_mtp3field_code>
   25ecc:	ldr	r2, [sp, #16]
   25ed0:	ldmib	sp, {r3, lr}
   25ed4:	ldr	ip, [sp, #12]
   25ed8:	str	r0, [sp, #28]
   25edc:	b	264b8 <sfbpf_parse+0x13d0>
   25ee0:	mov	sl, ip
   25ee4:	mov	r5, r3
   25ee8:	mov	r6, lr
   25eec:	mov	r4, r2
   25ef0:	bl	19384 <sf_gen_pppoes>
   25ef4:	b	26408 <sfbpf_parse+0x1320>
   25ef8:	mov	sl, r2
   25efc:	ldr	r1, [r9, #-32]	; 0xffffffe0
   25f00:	ldr	r2, [r9]
   25f04:	mov	r0, #80	; 0x50
   25f08:	b	26034 <sfbpf_parse+0xf4c>
   25f0c:	mov	sl, r2
   25f10:	ldr	r1, [r9, #-32]	; 0xffffffe0
   25f14:	ldr	r2, [r9]
   25f18:	mov	r0, #96	; 0x60
   25f1c:	b	26034 <sfbpf_parse+0xf4c>
   25f20:	mov	sl, #0
   25f24:	mov	r6, #33	; 0x21
   25f28:	b	26440 <sfbpf_parse+0x1358>
   25f2c:	mov	sl, #0
   25f30:	mov	r6, #39	; 0x27
   25f34:	b	26440 <sfbpf_parse+0x1358>
   25f38:	mov	sl, #0
   25f3c:	mov	r6, #9
   25f40:	b	26440 <sfbpf_parse+0x1358>
   25f44:	ldr	r0, [r9]
   25f48:	mov	sl, ip
   25f4c:	mov	r5, r3
   25f50:	mov	r6, lr
   25f54:	mov	r4, r2
   25f58:	bl	18564 <sf_gen_pf_ruleset>
   25f5c:	b	26408 <sfbpf_parse+0x1320>
   25f60:	mov	sl, #0
   25f64:	mov	r6, #62	; 0x3e
   25f68:	b	26440 <sfbpf_parse+0x1358>
   25f6c:	ldr	r0, [r9]
   25f70:	mov	sl, ip
   25f74:	mov	r5, r3
   25f78:	mov	r6, lr
   25f7c:	mov	r4, r2
   25f80:	bl	19f40 <sf_gen_mtp2type_abbrev>
   25f84:	mov	r2, r4
   25f88:	mov	lr, r6
   25f8c:	mov	r3, r5
   25f90:	mov	ip, sl
   25f94:	str	r0, [sp, #28]
   25f98:	mov	r6, #255	; 0xff
   25f9c:	mov	sl, #255	; 0xff
   25fa0:	mov	r4, #255	; 0xff
   25fa4:	mov	r5, #255	; 0xff
   25fa8:	b	264b8 <sfbpf_parse+0x13d0>
   25fac:	mov	sl, #0
   25fb0:	mov	r6, #10
   25fb4:	b	26440 <sfbpf_parse+0x1358>
   25fb8:	ldr	r0, [r9]
   25fbc:	mov	sl, ip
   25fc0:	mov	r5, r3
   25fc4:	mov	r6, lr
   25fc8:	mov	r4, r2
   25fcc:	bl	15190 <sf_gen_loadi>
   25fd0:	b	26408 <sfbpf_parse+0x1320>
   25fd4:	ldr	r0, [r9]
   25fd8:	mov	sl, ip
   25fdc:	mov	r5, r3
   25fe0:	mov	r6, lr
   25fe4:	mov	r4, r2
   25fe8:	bl	153d0 <sf_gen_neg>
   25fec:	b	26408 <sfbpf_parse+0x1320>
   25ff0:	mov	sl, #0
   25ff4:	mov	r6, #60	; 0x3c
   25ff8:	b	26440 <sfbpf_parse+0x1358>
   25ffc:	mov	sl, #0
   26000:	mov	r6, #71	; 0x47
   26004:	b	26440 <sfbpf_parse+0x1358>
   26008:	ldr	r0, [r9]
   2600c:	mov	sl, ip
   26010:	mov	r5, r3
   26014:	mov	r6, lr
   26018:	mov	r4, r2
   2601c:	bl	1854c <sf_gen_pf_ifname>
   26020:	b	26408 <sfbpf_parse+0x1320>
   26024:	mov	sl, r2
   26028:	ldr	r1, [r9, #-32]	; 0xffffffe0
   2602c:	ldr	r2, [r9]
   26030:	mov	r0, #112	; 0x70
   26034:	mov	r4, ip
   26038:	mov	r5, r3
   2603c:	mov	r6, lr
   26040:	bl	155e0 <sf_gen_arth>
   26044:	mov	r2, sl
   26048:	mov	lr, r6
   2604c:	mov	r3, r5
   26050:	mov	ip, r4
   26054:	b	26418 <sfbpf_parse+0x1330>
   26058:	mov	sl, #0
   2605c:	mov	r6, #40	; 0x28
   26060:	b	26440 <sfbpf_parse+0x1358>
   26064:	ldr	r0, [r9, #-48]	; 0xffffffd0
   26068:	ldr	r1, [r9, #-16]
   2606c:	mov	sl, r2
   26070:	mov	r2, #1
   26074:	mov	r4, ip
   26078:	mov	r5, r3
   2607c:	mov	r6, lr
   26080:	bl	12b40 <sf_gen_load>
   26084:	b	26044 <sfbpf_parse+0xf5c>
   26088:	ldr	r0, [r9]
   2608c:	mov	sl, ip
   26090:	mov	r5, r3
   26094:	mov	r6, lr
   26098:	mov	r4, r2
   2609c:	bl	18594 <sf_gen_pf_srnr>
   260a0:	b	26408 <sfbpf_parse+0x1320>
   260a4:	ldr	r0, [r9]
   260a8:	mov	sl, ip
   260ac:	mov	r5, r3
   260b0:	mov	r6, lr
   260b4:	mov	r4, r2
   260b8:	bl	187a8 <sf_gen_p80211_fcdir>
   260bc:	b	26408 <sfbpf_parse+0x1320>
   260c0:	.word	0x000228ac
   260c4:	.word	0x000228a0
   260c8:	.word	0x00005b1a
   260cc:	.word	0x0002279c
   260d0:	.word	0x00022780
   260d4:	.word	0x00005cea
   260d8:	.word	0x0002274c
   260dc:	.word	0x00005e28
   260e0:	.word	0x0000634c
   260e4:	.word	0x00022700
   260e8:	.word	0x000226ec
   260ec:	.word	0x00006848
   260f0:	.word	0x00006942
   260f4:	str	r2, [sp, #16]
   260f8:	str	lr, [sp, #8]
   260fc:	ldr	r6, [r9]
   26100:	mov	sl, r3
   26104:	mov	r5, ip
   26108:	mov	r4, #0
   2610c:	ldr	r0, [pc, #1860]	; 26858 <sfbpf_parse+0x1770>
   26110:	add	r0, pc, r0
   26114:	mov	r1, r6
   26118:	bl	24e48 <sfbpf_strcasecmp>
   2611c:	cmp	r0, #0
   26120:	beq	265a4 <sfbpf_parse+0x14bc>
   26124:	ldr	r0, [pc, #1840]	; 2685c <sfbpf_parse+0x1774>
   26128:	add	r0, pc, r0
   2612c:	sub	r0, r0, r4
   26130:	sub	r4, r4, #8
   26134:	ldr	r0, [r0, #12]
   26138:	cmn	r4, #160	; 0xa0
   2613c:	bne	26114 <sfbpf_parse+0x102c>
   26140:	ldr	r6, [r9]
   26144:	ldr	r0, [pc, #1812]	; 26860 <sfbpf_parse+0x1778>
   26148:	add	r0, pc, r0
   2614c:	mov	r1, r6
   26150:	bl	24e48 <sfbpf_strcasecmp>
   26154:	cmp	r0, #0
   26158:	beq	26630 <sfbpf_parse+0x1548>
   2615c:	ldr	r0, [pc, #1856]	; 268a4 <sfbpf_parse+0x17bc>
   26160:	mov	r1, r6
   26164:	add	r0, pc, r0
   26168:	bl	24e48 <sfbpf_strcasecmp>
   2616c:	cmp	r0, #0
   26170:	beq	26650 <sfbpf_parse+0x1568>
   26174:	ldr	r0, [pc, #1868]	; 268c8 <sfbpf_parse+0x17e0>
   26178:	mov	r1, r6
   2617c:	add	r0, pc, r0
   26180:	bl	24e48 <sfbpf_strcasecmp>
   26184:	cmp	r0, #0
   26188:	beq	26684 <sfbpf_parse+0x159c>
   2618c:	ldr	r0, [pc, #1848]	; 268cc <sfbpf_parse+0x17e4>
   26190:	mov	r1, r6
   26194:	add	r0, pc, r0
   26198:	bl	24e48 <sfbpf_strcasecmp>
   2619c:	cmp	r0, #0
   261a0:	beq	2668c <sfbpf_parse+0x15a4>
   261a4:	ldr	r0, [pc, #1828]	; 268d0 <sfbpf_parse+0x17e8>
   261a8:	mov	r1, r6
   261ac:	add	r0, pc, r0
   261b0:	bl	24e48 <sfbpf_strcasecmp>
   261b4:	cmp	r0, #0
   261b8:	beq	26694 <sfbpf_parse+0x15ac>
   261bc:	ldr	r0, [pc, #1808]	; 268d4 <sfbpf_parse+0x17ec>
   261c0:	mov	r1, r6
   261c4:	add	r0, pc, r0
   261c8:	bl	24e48 <sfbpf_strcasecmp>
   261cc:	cmp	r0, #0
   261d0:	beq	2669c <sfbpf_parse+0x15b4>
   261d4:	ldr	r6, [r9]
   261d8:	ldr	r0, [pc, #1784]	; 268d8 <sfbpf_parse+0x17f0>
   261dc:	add	r0, pc, r0
   261e0:	mov	r1, r6
   261e4:	bl	24e48 <sfbpf_strcasecmp>
   261e8:	cmp	r0, #0
   261ec:	beq	266d8 <sfbpf_parse+0x15f0>
   261f0:	ldr	r0, [pc, #1716]	; 268ac <sfbpf_parse+0x17c4>
   261f4:	mov	r1, r6
   261f8:	add	r0, pc, r0
   261fc:	bl	24e48 <sfbpf_strcasecmp>
   26200:	cmp	r0, #0
   26204:	beq	266e0 <sfbpf_parse+0x15f8>
   26208:	ldr	r0, [pc, #1740]	; 268dc <sfbpf_parse+0x17f4>
   2620c:	mov	r1, r6
   26210:	add	r0, pc, r0
   26214:	bl	24e48 <sfbpf_strcasecmp>
   26218:	cmp	r0, #0
   2621c:	beq	266e8 <sfbpf_parse+0x1600>
   26220:	ldr	r0, [pc, #1720]	; 268e0 <sfbpf_parse+0x17f8>
   26224:	mov	r1, r6
   26228:	add	r0, pc, r0
   2622c:	bl	24e48 <sfbpf_strcasecmp>
   26230:	cmp	r0, #0
   26234:	beq	266f0 <sfbpf_parse+0x1608>
   26238:	ldr	r0, [pc, #1700]	; 268e4 <sfbpf_parse+0x17fc>
   2623c:	mov	r1, r6
   26240:	add	r0, pc, r0
   26244:	bl	24e48 <sfbpf_strcasecmp>
   26248:	cmp	r0, #0
   2624c:	beq	266f8 <sfbpf_parse+0x1610>
   26250:	ldr	r0, [pc, #1680]	; 268e8 <sfbpf_parse+0x1800>
   26254:	mov	r1, r6
   26258:	add	r0, pc, r0
   2625c:	bl	24e48 <sfbpf_strcasecmp>
   26260:	cmp	r0, #0
   26264:	beq	26700 <sfbpf_parse+0x1618>
   26268:	ldr	r0, [pc, #1660]	; 268ec <sfbpf_parse+0x1804>
   2626c:	mov	r1, r6
   26270:	add	r0, pc, r0
   26274:	bl	24e48 <sfbpf_strcasecmp>
   26278:	cmp	r0, #0
   2627c:	beq	26708 <sfbpf_parse+0x1620>
   26280:	ldr	r0, [pc, #1640]	; 268f0 <sfbpf_parse+0x1808>
   26284:	mov	r1, r6
   26288:	add	r0, pc, r0
   2628c:	bl	24e48 <sfbpf_strcasecmp>
   26290:	cmp	r0, #0
   26294:	beq	26710 <sfbpf_parse+0x1628>
   26298:	ldr	r0, [pc, #1620]	; 268f4 <sfbpf_parse+0x180c>
   2629c:	mov	r1, r6
   262a0:	add	r0, pc, r0
   262a4:	bl	24e48 <sfbpf_strcasecmp>
   262a8:	cmp	r0, #0
   262ac:	beq	26718 <sfbpf_parse+0x1630>
   262b0:	ldr	r0, [pc, #1600]	; 268f8 <sfbpf_parse+0x1810>
   262b4:	mov	r1, r6
   262b8:	add	r0, pc, r0
   262bc:	bl	24e48 <sfbpf_strcasecmp>
   262c0:	cmp	r0, #0
   262c4:	beq	26720 <sfbpf_parse+0x1638>
   262c8:	ldr	r0, [pc, #1580]	; 268fc <sfbpf_parse+0x1814>
   262cc:	mov	r1, r6
   262d0:	add	r0, pc, r0
   262d4:	bl	24e48 <sfbpf_strcasecmp>
   262d8:	cmp	r0, #0
   262dc:	beq	26728 <sfbpf_parse+0x1640>
   262e0:	ldr	r0, [pc, #1560]	; 26900 <sfbpf_parse+0x1818>
   262e4:	mov	r1, r6
   262e8:	add	r0, pc, r0
   262ec:	bl	24e48 <sfbpf_strcasecmp>
   262f0:	cmp	r0, #0
   262f4:	beq	26730 <sfbpf_parse+0x1648>
   262f8:	ldr	r0, [pc, #1540]	; 26904 <sfbpf_parse+0x181c>
   262fc:	mov	r1, r6
   26300:	add	r0, pc, r0
   26304:	bl	24e48 <sfbpf_strcasecmp>
   26308:	cmp	r0, #0
   2630c:	beq	26738 <sfbpf_parse+0x1650>
   26310:	ldr	r0, [pc, #1520]	; 26908 <sfbpf_parse+0x1820>
   26314:	mov	r1, r6
   26318:	add	r0, pc, r0
   2631c:	bl	24e48 <sfbpf_strcasecmp>
   26320:	cmp	r0, #0
   26324:	beq	26740 <sfbpf_parse+0x1658>
   26328:	ldr	r0, [pc, #1500]	; 2690c <sfbpf_parse+0x1824>
   2632c:	mov	r1, r6
   26330:	add	r0, pc, r0
   26334:	bl	24e48 <sfbpf_strcasecmp>
   26338:	ldr	lr, [sp, #8]
   2633c:	mov	r1, #14
   26340:	cmp	r0, #0
   26344:	mov	ip, r5
   26348:	mov	r3, sl
   2634c:	beq	26750 <sfbpf_parse+0x1668>
   26350:	b	26820 <sfbpf_parse+0x1738>
   26354:	ldr	r0, [r9]
   26358:	mov	sl, ip
   2635c:	mov	r5, r3
   26360:	mov	r6, lr
   26364:	mov	r4, r2
   26368:	bl	185ac <sf_gen_pf_reason>
   2636c:	b	26408 <sfbpf_parse+0x1320>
   26370:	ldr	r0, [r9]
   26374:	mov	sl, ip
   26378:	mov	r5, r3
   2637c:	mov	r6, lr
   26380:	mov	r4, r2
   26384:	bl	185c4 <sf_gen_pf_action>
   26388:	b	26408 <sfbpf_parse+0x1320>
   2638c:	mov	sl, #0
   26390:	mov	r6, #15
   26394:	b	26440 <sfbpf_parse+0x1358>
   26398:	mov	sl, #0
   2639c:	mov	r6, #18
   263a0:	b	26440 <sfbpf_parse+0x1358>
   263a4:	ldr	r0, [r9]
   263a8:	mov	sl, ip
   263ac:	mov	r5, r3
   263b0:	mov	r6, lr
   263b4:	mov	r4, r2
   263b8:	bl	1595c <sf_gen_greater>
   263bc:	b	26408 <sfbpf_parse+0x1320>
   263c0:	ldr	r0, [r9, #12]
   263c4:	str	ip, [sp, #12]
   263c8:	stmib	sp, {r3, lr}
   263cc:	str	r2, [sp, #16]
   263d0:	bl	32d0 <sf_finish_parse>
   263d4:	ldr	r2, [sp, #16]
   263d8:	ldmib	sp, {r3, lr}
   263dc:	ldr	ip, [sp, #12]
   263e0:	b	264b8 <sfbpf_parse+0x13d0>
   263e4:	mov	sl, #0
   263e8:	mov	r6, #19
   263ec:	b	26440 <sfbpf_parse+0x1358>
   263f0:	ldr	r0, [r9, #-16]
   263f4:	mov	sl, ip
   263f8:	mov	r5, r3
   263fc:	mov	r6, lr
   26400:	mov	r4, r2
   26404:	bl	16bdc <sf_gen_multicast>
   26408:	mov	r2, r4
   2640c:	mov	lr, r6
   26410:	mov	r3, r5
   26414:	mov	ip, sl
   26418:	mov	r6, r0
   2641c:	lsr	r5, r0, #24
   26420:	lsr	r4, r0, #16
   26424:	lsr	sl, r0, #8
   26428:	b	264b8 <sfbpf_parse+0x13d0>
   2642c:	mov	sl, #0
   26430:	mov	r6, #36	; 0x24
   26434:	b	26440 <sfbpf_parse+0x1358>
   26438:	mov	sl, #0
   2643c:	mov	r6, #20
   26440:	mov	r4, #0
   26444:	mov	r5, #0
   26448:	b	264b8 <sfbpf_parse+0x13d0>
   2644c:	ldr	r6, [r9, #-16]
   26450:	ldr	r0, [r9]
   26454:	str	ip, [sp, #12]
   26458:	mov	r5, r3
   2645c:	mov	r4, lr
   26460:	mov	sl, r2
   26464:	mov	r1, r6
   26468:	bl	12824 <sf_gen_ecode>
   2646c:	b	26584 <sfbpf_parse+0x149c>
   26470:	ldr	r6, [r9, #-16]
   26474:	ldr	r0, [r9]
   26478:	str	r2, [sp, #16]
   2647c:	mov	r1, #0
   26480:	mov	r2, #128	; 0x80
   26484:	mov	sl, r3
   26488:	mov	r3, r6
   2648c:	mov	r4, ip
   26490:	mov	r5, lr
   26494:	bl	12660 <sf_gen_mcode6>
   26498:	ldr	r2, [sp, #16]
   2649c:	mov	lr, r5
   264a0:	mov	r3, sl
   264a4:	mov	ip, r4
   264a8:	str	r0, [sp, #28]
   264ac:	lsr	r5, r6, #24
   264b0:	lsr	r4, r6, #16
   264b4:	lsr	sl, r6, #8
   264b8:	uxtb	r0, r6
   264bc:	uxtb	r1, r4
   264c0:	sub	r9, r9, r3, lsl #4
   264c4:	bfi	r0, sl, #8, #8
   264c8:	orr	r0, r0, r1, lsl #16
   264cc:	orr	r0, r0, r5, lsl #24
   264d0:	str	r0, [r9, #16]!
   264d4:	ldr	r0, [sp, #28]
   264d8:	str	lr, [r9, #4]
   264dc:	str	r2, [r9, #8]
   264e0:	str	r0, [r9, #12]
   264e4:	lsl	r0, r3, #1
   264e8:	movw	r3, #669	; 0x29d
   264ec:	ldrsh	r2, [r8, -r0]!
   264f0:	ldr	r0, [pc, #904]	; 26880 <sfbpf_parse+0x1798>
   264f4:	ldr	r1, [pc, #904]	; 26884 <sfbpf_parse+0x179c>
   264f8:	add	r0, pc, r0
   264fc:	add	r1, pc, r1
   26500:	ldrb	r0, [r0, r7]
   26504:	sub	r0, r0, #126	; 0x7e
   26508:	add	r1, r1, r0, lsl #1
   2650c:	ldrsh	r1, [r1]
   26510:	add	r1, r2, r1
   26514:	cmp	r1, r3
   26518:	bhi	26548 <sfbpf_parse+0x1460>
   2651c:	ldr	r3, [pc, #868]	; 26888 <sfbpf_parse+0x17a0>
   26520:	uxth	r2, r2
   26524:	add	r3, pc, r3
   26528:	add	r3, r3, r1, lsl #1
   2652c:	ldrh	r3, [r3]
   26530:	cmp	r3, r2
   26534:	bne	26548 <sfbpf_parse+0x1460>
   26538:	ldr	r0, [pc, #844]	; 2688c <sfbpf_parse+0x17a4>
   2653c:	add	r0, pc, r0
   26540:	add	r0, r0, r1, lsl #1
   26544:	b	26554 <sfbpf_parse+0x146c>
   26548:	ldr	r1, [pc, #832]	; 26890 <sfbpf_parse+0x17a8>
   2654c:	add	r1, pc, r1
   26550:	add	r0, r1, r0, lsl #1
   26554:	ldrsh	sl, [r0]
   26558:	ldr	r4, [sp, #24]
   2655c:	mov	r6, #15
   26560:	b	25134 <sfbpf_parse+0x4c>
   26564:	ldr	r6, [r9, #-16]
   26568:	ldr	r0, [r9]
   2656c:	str	ip, [sp, #12]
   26570:	mov	r5, r3
   26574:	mov	r4, lr
   26578:	mov	sl, r2
   2657c:	mov	r1, r6
   26580:	bl	1895c <sf_gen_acode>
   26584:	str	r0, [sp, #28]
   26588:	ldr	r0, [r9]
   2658c:	bl	e5c <free@plt>
   26590:	ldr	ip, [sp, #12]
   26594:	mov	r2, sl
   26598:	mov	lr, r4
   2659c:	mov	r3, r5
   265a0:	b	264ac <sfbpf_parse+0x13c4>
   265a4:	ldr	r0, [pc, #696]	; 26864 <sfbpf_parse+0x177c>
   265a8:	mov	r1, #0
   265ac:	add	r0, pc, r0
   265b0:	sub	r0, r0, r4
   265b4:	b	266b0 <sfbpf_parse+0x15c8>
   265b8:	mov	r1, #0
   265bc:	b	2665c <sfbpf_parse+0x1574>
   265c0:	mov	r6, #0
   265c4:	b	26644 <sfbpf_parse+0x155c>
   265c8:	ldr	r1, [pc, #604]	; 2682c <sfbpf_parse+0x1744>
   265cc:	add	r1, pc, r1
   265d0:	b	265dc <sfbpf_parse+0x14f4>
   265d4:	ldr	r1, [pc, #628]	; 26850 <sfbpf_parse+0x1768>
   265d8:	add	r1, pc, r1
   265dc:	ldr	r0, [r1, #4]
   265e0:	cmp	r0, #0
   265e4:	beq	267cc <sfbpf_parse+0x16e4>
   265e8:	ldr	r6, [r9]
   265ec:	add	r4, r1, #12
   265f0:	mov	r1, r6
   265f4:	bl	24e48 <sfbpf_strcasecmp>
   265f8:	cmp	r0, #0
   265fc:	beq	26610 <sfbpf_parse+0x1528>
   26600:	ldr	r0, [r4], #8
   26604:	cmp	r0, #0
   26608:	bne	265f0 <sfbpf_parse+0x1508>
   2660c:	b	267cc <sfbpf_parse+0x16e4>
   26610:	ldr	r6, [r4, #-12]
   26614:	cmn	r6, #1
   26618:	bne	26668 <sfbpf_parse+0x1580>
   2661c:	b	267cc <sfbpf_parse+0x16e4>
   26620:	mov	r1, #1
   26624:	b	2665c <sfbpf_parse+0x1574>
   26628:	mov	r6, #1
   2662c:	b	26644 <sfbpf_parse+0x155c>
   26630:	mov	r0, #0
   26634:	b	266a0 <sfbpf_parse+0x15b8>
   26638:	mov	r1, #2
   2663c:	b	2665c <sfbpf_parse+0x1574>
   26640:	mov	r6, #2
   26644:	mov	r4, #0
   26648:	mov	r5, #0
   2664c:	b	26674 <sfbpf_parse+0x158c>
   26650:	mov	r0, #1
   26654:	b	266a0 <sfbpf_parse+0x15b8>
   26658:	mov	r1, #3
   2665c:	ldr	r0, [pc, #488]	; 2684c <sfbpf_parse+0x1764>
   26660:	add	r0, pc, r0
   26664:	ldr	r6, [r0, r1, lsl #3]
   26668:	lsr	r5, r6, #24
   2666c:	lsr	r4, r6, #16
   26670:	lsr	sl, r6, #8
   26674:	ldr	ip, [sp, #12]
   26678:	ldmib	sp, {r3, lr}
   2667c:	ldr	r2, [sp, #16]
   26680:	b	264b8 <sfbpf_parse+0x13d0>
   26684:	mov	r0, #2
   26688:	b	266a0 <sfbpf_parse+0x15b8>
   2668c:	mov	r0, #3
   26690:	b	266a0 <sfbpf_parse+0x15b8>
   26694:	mov	r0, #4
   26698:	b	266a0 <sfbpf_parse+0x15b8>
   2669c:	mov	r0, #5
   266a0:	ldr	r1, [pc, #512]	; 268a8 <sfbpf_parse+0x17c0>
   266a4:	add	r1, pc, r1
   266a8:	add	r0, r1, r0, lsl #3
   266ac:	mov	r1, #1
   266b0:	ldr	lr, [sp, #8]
   266b4:	mov	ip, r5
   266b8:	mov	r3, sl
   266bc:	ldr	r2, [pc, #420]	; 26868 <sfbpf_parse+0x1780>
   266c0:	ldr	r0, [r0]
   266c4:	add	r2, pc, r2
   266c8:	ldr	r1, [r2, r1, lsl #3]
   266cc:	ldr	r2, [sp, #16]
   266d0:	orr	r6, r1, r0
   266d4:	b	264ac <sfbpf_parse+0x13c4>
   266d8:	mov	r1, #0
   266dc:	b	26744 <sfbpf_parse+0x165c>
   266e0:	mov	r1, #1
   266e4:	b	26744 <sfbpf_parse+0x165c>
   266e8:	mov	r1, #2
   266ec:	b	26744 <sfbpf_parse+0x165c>
   266f0:	mov	r1, #3
   266f4:	b	26744 <sfbpf_parse+0x165c>
   266f8:	mov	r1, #4
   266fc:	b	26744 <sfbpf_parse+0x165c>
   26700:	mov	r1, #5
   26704:	b	26744 <sfbpf_parse+0x165c>
   26708:	mov	r1, #6
   2670c:	b	26744 <sfbpf_parse+0x165c>
   26710:	mov	r1, #7
   26714:	b	26744 <sfbpf_parse+0x165c>
   26718:	mov	r1, #8
   2671c:	b	26744 <sfbpf_parse+0x165c>
   26720:	mov	r1, #9
   26724:	b	26744 <sfbpf_parse+0x165c>
   26728:	mov	r1, #10
   2672c:	b	26744 <sfbpf_parse+0x165c>
   26730:	mov	r1, #11
   26734:	b	26744 <sfbpf_parse+0x165c>
   26738:	mov	r1, #12
   2673c:	b	26744 <sfbpf_parse+0x165c>
   26740:	mov	r1, #13
   26744:	ldr	lr, [sp, #8]
   26748:	mov	ip, r5
   2674c:	mov	r3, sl
   26750:	ldr	r0, [pc, #344]	; 268b0 <sfbpf_parse+0x17c8>
   26754:	add	r0, pc, r0
   26758:	add	r0, r0, r1, lsl #3
   2675c:	mov	r1, #2
   26760:	b	266bc <sfbpf_parse+0x15d4>
   26764:	sub	r0, fp, #432	; 0x1b0
   26768:	mov	r6, #0
   2676c:	cmp	r4, r0
   26770:	bne	26780 <sfbpf_parse+0x1698>
   26774:	b	26788 <sfbpf_parse+0x16a0>
   26778:	mov	r6, #1
   2677c:	mov	r4, r5
   26780:	mov	r0, r4
   26784:	bl	e5c <free@plt>
   26788:	mov	r0, r6
   2678c:	sub	sp, fp, #28
   26790:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   26794:	ldr	r0, [pc, #260]	; 268a0 <sfbpf_parse+0x17b8>
   26798:	add	r0, pc, r0
   2679c:	bl	26940 <sfbpf_error>
   267a0:	bl	26910 <pfreason_to_num>
   267a4:	bl	26928 <pfaction_to_num>
   267a8:	ldr	r0, [pc, #228]	; 26894 <sfbpf_parse+0x17ac>
   267ac:	ldr	r0, [pc, r0]
   267b0:	ldr	r1, [pc, #224]	; 26898 <sfbpf_parse+0x17b0>
   267b4:	add	r0, r0, #1
   267b8:	add	r1, pc, r1
   267bc:	str	r0, [r1]
   267c0:	ldr	r0, [pc, #212]	; 2689c <sfbpf_parse+0x17b4>
   267c4:	add	r0, pc, r0
   267c8:	bl	26940 <sfbpf_error>
   267cc:	ldr	r0, [pc, #128]	; 26854 <sfbpf_parse+0x176c>
   267d0:	add	r0, pc, r0
   267d4:	bl	2124 <sf_bpf_error>
   267d8:	ldr	r0, [pc, #84]	; 26834 <sfbpf_parse+0x174c>
   267dc:	add	r0, pc, r0
   267e0:	bl	2124 <sf_bpf_error>
   267e4:	ldr	r0, [pc, #80]	; 2683c <sfbpf_parse+0x1754>
   267e8:	add	r0, pc, r0
   267ec:	bl	2124 <sf_bpf_error>
   267f0:	ldr	r0, [pc, #72]	; 26840 <sfbpf_parse+0x1758>
   267f4:	add	r0, pc, r0
   267f8:	bl	2124 <sf_bpf_error>
   267fc:	ldr	r0, [pc, #52]	; 26838 <sfbpf_parse+0x1750>
   26800:	add	r0, pc, r0
   26804:	bl	2124 <sf_bpf_error>
   26808:	ldr	r0, [pc, #164]	; 268b4 <sfbpf_parse+0x17cc>
   2680c:	add	r0, pc, r0
   26810:	bl	2124 <sf_bpf_error>
   26814:	ldr	r0, [pc, #96]	; 2687c <sfbpf_parse+0x1794>
   26818:	add	r0, pc, r0
   2681c:	bl	2124 <sf_bpf_error>
   26820:	ldr	r0, [pc, #156]	; 268c4 <sfbpf_parse+0x17dc>
   26824:	add	r0, pc, r0
   26828:	bl	2124 <sf_bpf_error>
   2682c:	.word	0x000207dc
   26830:	.word	0x0002139c
   26834:	.word	0x000056b8
   26838:	.word	0x000056b7
   2683c:	.word	0x000056f7
   26840:	.word	0x0000570f
   26844:	.word	0x00006419
   26848:	.word	0x00006323
   2684c:	.word	0x000206f8
   26850:	.word	0x00020878
   26854:	.word	0x00005789
   26858:	.word	0x00005ecc
   2685c:	.word	0x00020c80
   26860:	.word	0x00005f26
   26864:	.word	0x000207fc
   26868:	.word	0x000206c4
   2686c:	.word	0x00006239
   26870:	.word	0x0000622b
   26874:	.word	0x0000620a
   26878:	.word	0x000061f9
   2687c:	.word	0x00005770
   26880:	.word	0x00005819
   26884:	.word	0x000058e0
   26888:	.word	0x00004b98
   2688c:	.word	0x000050bc
   26890:	.word	0x000058ec
   26894:	.word	0x0002121c
   26898:	.word	0x00021210
   2689c:	.word	0x000057dd
   268a0:	.word	0x00005816
   268a4:	.word	0x00005f12
   268a8:	.word	0x000207ac
   268ac:	.word	0x00005eaa
   268b0:	.word	0x00020734
   268b4:	.word	0x00005739
   268b8:	.word	0x0000630f
   268bc:	.word	0x00006302
   268c0:	.word	0x000062ee
   268c4:	.word	0x00005708
   268c8:	.word	0x00005efe
   268cc:	.word	0x00005ef8
   268d0:	.word	0x00005ed2
   268d4:	.word	0x00005ec1
   268d8:	.word	0x00005ebd
   268dc:	.word	0x00005ea2
   268e0:	.word	0x00005e9b
   268e4:	.word	0x00005e50
   268e8:	.word	0x00005e4f
   268ec:	.word	0x00005e47
   268f0:	.word	0x00005e40
   268f4:	.word	0x00005df5
   268f8:	.word	0x00005de6
   268fc:	.word	0x00005dde
   26900:	.word	0x00005dd7
   26904:	.word	0x00005dd4
   26908:	.word	0x00005dc0
   2690c:	.word	0x00005db4

00026910 <pfreason_to_num>:
   26910:	push	{fp, lr}
   26914:	mov	fp, sp
   26918:	ldr	r0, [pc, #4]	; 26924 <pfreason_to_num+0x14>
   2691c:	add	r0, pc, r0
   26920:	bl	2124 <sf_bpf_error>
   26924:	.word	0x00003240

00026928 <pfaction_to_num>:
   26928:	push	{fp, lr}
   2692c:	mov	fp, sp
   26930:	ldr	r0, [pc, #4]	; 2693c <pfaction_to_num+0x14>
   26934:	add	r0, pc, r0
   26938:	bl	2124 <sf_bpf_error>
   2693c:	.word	0x00003228

00026940 <sfbpf_error>:
   26940:	push	{fp, lr}
   26944:	mov	fp, sp
   26948:	mov	r1, r0
   2694c:	ldr	r0, [pc, #28]	; 26970 <sfbpf_error+0x30>
   26950:	ldr	r0, [pc, r0]
   26954:	ldr	r2, [pc, #24]	; 26974 <sfbpf_error+0x34>
   26958:	add	r0, r0, #1
   2695c:	add	r2, pc, r2
   26960:	str	r0, [r2]
   26964:	ldr	r0, [pc, #12]	; 26978 <sfbpf_error+0x38>
   26968:	add	r0, pc, r0
   2696c:	bl	2124 <sf_bpf_error>
   26970:	.word	0x00021018
   26974:	.word	0x0002100c
   26978:	.word	0x00003fbd

0002697c <sfbpf_lex>:
   2697c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   26980:	add	fp, sp, #28
   26984:	sub	sp, sp, #84	; 0x54
   26988:	ldr	r1, [pc, #4084]	; 27984 <sfbpf_lex+0x1008>
   2698c:	add	r1, pc, r1
   26990:	ldrb	r0, [r1]
   26994:	cmp	r0, #0
   26998:	bne	26aa4 <sfbpf_lex+0x128>
   2699c:	mov	r0, #1
   269a0:	strb	r0, [r1]
   269a4:	ldr	r1, [pc, #4092]	; 279a8 <sfbpf_lex+0x102c>
   269a8:	add	r1, pc, r1
   269ac:	ldrb	r2, [r1]
   269b0:	cmp	r2, #0
   269b4:	strbeq	r0, [r1]
   269b8:	ldr	r0, [pc, #4088]	; 279b8 <sfbpf_lex+0x103c>
   269bc:	ldr	r0, [pc, r0]
   269c0:	cmp	r0, #0
   269c4:	bne	269e0 <sfbpf_lex+0x64>
   269c8:	ldr	r0, [pc, #4088]	; 279c8 <sfbpf_lex+0x104c>
   269cc:	ldr	r0, [pc, r0]
   269d0:	ldr	r0, [r0]
   269d4:	ldr	r1, [pc, #4080]	; 279cc <sfbpf_lex+0x1050>
   269d8:	add	r1, pc, r1
   269dc:	str	r0, [r1]
   269e0:	ldr	r0, [pc, #4088]	; 279e0 <sfbpf_lex+0x1064>
   269e4:	ldr	r0, [pc, r0]
   269e8:	cmp	r0, #0
   269ec:	bne	26a08 <sfbpf_lex+0x8c>
   269f0:	ldr	r0, [pc, #4088]	; 279f0 <sfbpf_lex+0x1074>
   269f4:	ldr	r0, [pc, r0]
   269f8:	ldr	r0, [r0]
   269fc:	ldr	r1, [pc, #4092]	; 27a00 <sfbpf_lex+0x1084>
   26a00:	add	r1, pc, r1
   26a04:	str	r0, [r1]
   26a08:	ldr	r1, [pc, #4084]	; 27a04 <sfbpf_lex+0x1088>
   26a0c:	ldr	r1, [pc, r1]
   26a10:	cmp	r1, #0
   26a14:	beq	26a2c <sfbpf_lex+0xb0>
   26a18:	ldr	r0, [pc, #4084]	; 27a14 <sfbpf_lex+0x1098>
   26a1c:	ldr	r0, [pc, r0]
   26a20:	ldr	r0, [r1, r0, lsl #2]!
   26a24:	cmp	r0, #0
   26a28:	bne	26a54 <sfbpf_lex+0xd8>
   26a2c:	bl	2848c <sfbpf_ensure_buffer_stack>
   26a30:	ldr	r0, [pc, #4088]	; 27a30 <sfbpf_lex+0x10b4>
   26a34:	mov	r1, #16384	; 0x4000
   26a38:	ldr	r0, [pc, r0]
   26a3c:	bl	2857c <sfbpf__create_buffer>
   26a40:	ldr	r1, [pc, #4088]	; 27a40 <sfbpf_lex+0x10c4>
   26a44:	ldr	r1, [pc, r1]
   26a48:	ldr	r2, [pc, #4084]	; 27a44 <sfbpf_lex+0x10c8>
   26a4c:	ldr	r2, [pc, r2]
   26a50:	str	r0, [r1, r2, lsl #2]!
   26a54:	ldr	r2, [r0, #16]
   26a58:	ldr	r3, [pc, #4084]	; 27a54 <sfbpf_lex+0x10d8>
   26a5c:	add	r3, pc, r3
   26a60:	str	r2, [r3]
   26a64:	ldr	r0, [r0, #8]
   26a68:	ldr	r2, [pc, #4084]	; 27a64 <sfbpf_lex+0x10e8>
   26a6c:	add	r2, pc, r2
   26a70:	str	r0, [r2]
   26a74:	ldr	r2, [pc, #4088]	; 27a74 <sfbpf_lex+0x10f8>
   26a78:	add	r2, pc, r2
   26a7c:	str	r0, [r2]
   26a80:	ldr	r1, [r1]
   26a84:	ldr	r1, [r1]
   26a88:	ldr	r2, [pc, #4084]	; 27a84 <sfbpf_lex+0x1108>
   26a8c:	add	r2, pc, r2
   26a90:	str	r1, [r2]
   26a94:	ldrb	r0, [r0]
   26a98:	ldr	r1, [pc, #4088]	; 27a98 <sfbpf_lex+0x111c>
   26a9c:	add	r1, pc, r1
   26aa0:	strb	r0, [r1]
   26aa4:	ldr	r3, [pc, #4092]	; 27aa8 <sfbpf_lex+0x112c>
   26aa8:	ldr	ip, [pc, #4092]	; 27aac <sfbpf_lex+0x1130>
   26aac:	ldr	r4, [pc, #4092]	; 27ab0 <sfbpf_lex+0x1134>
   26ab0:	ldr	r6, [pc, #4092]	; 27ab4 <sfbpf_lex+0x1138>
   26ab4:	ldr	r8, [pc, #4092]	; 27ab8 <sfbpf_lex+0x113c>
   26ab8:	ldr	r9, [pc, #4092]	; 27abc <sfbpf_lex+0x1140>
   26abc:	ldr	sl, [pc, #4092]	; 27ac0 <sfbpf_lex+0x1144>
   26ac0:	movw	r5, #1434	; 0x59a
   26ac4:	add	r3, pc, r3
   26ac8:	add	ip, pc, ip
   26acc:	add	r4, pc, r4
   26ad0:	add	r6, pc, r6
   26ad4:	add	r8, pc, r8
   26ad8:	add	r9, pc, r9
   26adc:	add	sl, pc, sl
   26ae0:	b	26b24 <sfbpf_lex+0x1a8>
   26ae4:	mov	r4, r3
   26ae8:	ldr	r3, [pc, #4084]	; 27ae4 <sfbpf_lex+0x1168>
   26aec:	mov	r2, #1
   26af0:	mov	r6, ip
   26af4:	ldr	r3, [pc, r3]
   26af8:	ldr	r1, [pc, #4084]	; 27af4 <sfbpf_lex+0x1178>
   26afc:	ldr	r1, [pc, r1]
   26b00:	ldr	r0, [pc, #4092]	; 27b04 <sfbpf_lex+0x1188>
   26b04:	ldr	r0, [pc, r0]
   26b08:	bl	eb0 <fwrite@plt>
   26b0c:	mov	ip, r6
   26b10:	ldr	r6, [pc, #4080]	; 27b08 <sfbpf_lex+0x118c>
   26b14:	mov	r3, r4
   26b18:	ldr	r4, [pc, #4076]	; 27b0c <sfbpf_lex+0x1190>
   26b1c:	add	r6, pc, r6
   26b20:	add	r4, pc, r4
   26b24:	ldrb	r0, [r3]
   26b28:	ldr	r7, [pc, #4064]	; 27b10 <sfbpf_lex+0x1194>
   26b2c:	ldr	r7, [pc, r7]
   26b30:	strb	r0, [r7]
   26b34:	mov	lr, r7
   26b38:	ldrb	r0, [ip]
   26b3c:	b	26b48 <sfbpf_lex+0x1cc>
   26b40:	ldr	ip, [pc, #4044]	; 27b14 <sfbpf_lex+0x1198>
   26b44:	add	ip, pc, ip
   26b48:	ldrb	r1, [r7]
   26b4c:	add	r2, r6, r0, lsl #1
   26b50:	ldrh	r2, [r2]
   26b54:	ldrb	r1, [r4, r1]
   26b58:	cmp	r2, #0
   26b5c:	beq	26b78 <sfbpf_lex+0x1fc>
   26b60:	ldr	r2, [pc, #4016]	; 27b18 <sfbpf_lex+0x119c>
   26b64:	add	r2, pc, r2
   26b68:	str	r7, [r2]
   26b6c:	ldr	r2, [pc, #4008]	; 27b1c <sfbpf_lex+0x11a0>
   26b70:	add	r2, pc, r2
   26b74:	str	r0, [r2]
   26b78:	add	r2, r8, r0, lsl #1
   26b7c:	ldrsh	r2, [r2]
   26b80:	add	r3, r2, r1
   26b84:	add	r2, r9, r3, lsl #1
   26b88:	ldrsh	r2, [r2]
   26b8c:	cmp	r0, r2
   26b90:	beq	26be4 <sfbpf_lex+0x268>
   26b94:	mov	r2, r1
   26b98:	add	r0, sl, r0, lsl #1
   26b9c:	ldrsh	r0, [r0]
   26ba0:	cmp	r0, r5
   26ba4:	uxth	r4, r0
   26ba8:	ldrge	r2, [pc, #4084]	; 27ba4 <sfbpf_lex+0x1228>
   26bac:	addge	r2, pc, r2
   26bb0:	ldrbge	r2, [r2, r1]
   26bb4:	add	r1, r8, r0, lsl #1
   26bb8:	ldrsh	r1, [r1]
   26bbc:	uxtab	r3, r1, r2
   26bc0:	add	r1, r9, r3, lsl #1
   26bc4:	ldrh	r6, [r1]
   26bc8:	uxtb	r1, r2
   26bcc:	cmp	r4, r6
   26bd0:	bne	26b98 <sfbpf_lex+0x21c>
   26bd4:	ldr	r4, [pc, #4092]	; 27bd8 <sfbpf_lex+0x125c>
   26bd8:	ldr	r6, [pc, #4092]	; 27bdc <sfbpf_lex+0x1260>
   26bdc:	add	r4, pc, r4
   26be0:	add	r6, pc, r6
   26be4:	ldr	r0, [pc, #4084]	; 27be0 <sfbpf_lex+0x1264>
   26be8:	movw	r2, #7401	; 0x1ce9
   26bec:	add	r7, r7, #1
   26bf0:	add	r0, pc, r0
   26bf4:	add	r0, r0, r3, lsl #1
   26bf8:	ldrsh	r0, [r0]
   26bfc:	add	r1, r8, r0, lsl #1
   26c00:	ldrh	r1, [r1]
   26c04:	cmp	r1, r2
   26c08:	bne	26b48 <sfbpf_lex+0x1cc>
   26c0c:	str	lr, [sp, #40]	; 0x28
   26c10:	ldr	r3, [pc, #4084]	; 27c0c <sfbpf_lex+0x1290>
   26c14:	add	r3, pc, r3
   26c18:	b	26c34 <sfbpf_lex+0x2b8>
   26c1c:	ldrb	r0, [r3]
   26c20:	strb	r0, [r7]
   26c24:	ldr	r0, [pc, #4092]	; 27c28 <sfbpf_lex+0x12ac>
   26c28:	ldr	r0, [pc, r0]
   26c2c:	ldr	r7, [pc, #4088]	; 27c2c <sfbpf_lex+0x12b0>
   26c30:	ldr	r7, [pc, r7]
   26c34:	add	r0, r6, r0, lsl #1
   26c38:	ldrh	r0, [r0]
   26c3c:	cmp	r0, #0
   26c40:	bne	26c5c <sfbpf_lex+0x2e0>
   26c44:	ldr	r0, [pc, #4092]	; 27c48 <sfbpf_lex+0x12cc>
   26c48:	ldr	r0, [pc, r0]
   26c4c:	ldr	r7, [pc, #4088]	; 27c4c <sfbpf_lex+0x12d0>
   26c50:	add	r0, r6, r0, lsl #1
   26c54:	ldr	r7, [pc, r7]
   26c58:	ldrh	r0, [r0]
   26c5c:	ldr	r1, [pc, #4092]	; 27c60 <sfbpf_lex+0x12e4>
   26c60:	ldr	r2, [sp, #40]	; 0x28
   26c64:	sxth	r0, r0
   26c68:	add	r1, pc, r1
   26c6c:	str	r2, [r1]
   26c70:	sub	r1, r7, r2
   26c74:	ldr	r2, [pc, #4084]	; 27c70 <sfbpf_lex+0x12f4>
   26c78:	add	r2, pc, r2
   26c7c:	str	r1, [r2]
   26c80:	ldrb	r1, [r7]
   26c84:	strb	r1, [r3]
   26c88:	mov	r1, #0
   26c8c:	strb	r1, [r7]
   26c90:	ldr	r1, [pc, #4088]	; 27c90 <sfbpf_lex+0x1314>
   26c94:	add	r1, pc, r1
   26c98:	str	r7, [r1]
   26c9c:	cmp	r0, #146	; 0x92
   26ca0:	bls	26cc8 <sfbpf_lex+0x34c>
   26ca4:	b	28290 <sfbpf_lex+0x1914>
   26ca8:	ldr	r0, [pc, #4068]	; 27c94 <sfbpf_lex+0x1318>
   26cac:	add	r0, pc, r0
   26cb0:	str	lr, [r0]
   26cb4:	mov	r0, #146	; 0x92
   26cb8:	ldr	r3, [pc, #4092]	; 27cbc <sfbpf_lex+0x1340>
   26cbc:	add	r3, pc, r3
   26cc0:	cmp	r0, #146	; 0x92
   26cc4:	bhi	28290 <sfbpf_lex+0x1914>
   26cc8:	add	r1, pc, #4
   26ccc:	ldr	r0, [r1, r0, lsl #2]
   26cd0:	add	pc, r1, r0
   26cd4:	.word	0xffffff48
   26cd8:	.word	0x000010f0
   26cdc:	.word	0x00000f2c
   26ce0:	.word	0x00000c88
   26ce4:	.word	0x00000c88
   26ce8:	.word	0x00001388
   26cec:	.word	0x000013cc
   26cf0:	.word	0x0000144c
   26cf4:	.word	0x000011a4
   26cf8:	.word	0x00001174
   26cfc:	.word	0x00001370
   26d00:	.word	0x00001080
   26d04:	.word	0x00001400
   26d08:	.word	0x00001440
   26d0c:	.word	0x000010bc
   26d10:	.word	0x00001228
   26d14:	.word	0x0000137c
   26d18:	.word	0x00000d34
   26d1c:	.word	0x00000f10
   26d20:	.word	0x00001268
   26d24:	.word	0x00001320
   26d28:	.word	0x00001280
   26d2c:	.word	0x00000d74
   26d30:	.word	0x000012c0
   26d34:	.word	0x00000fb0
   26d38:	.word	0x0000101c
   26d3c:	.word	0x00001034
   26d40:	.word	0x00000ef8
   26d44:	.word	0x00000fec
   26d48:	.word	0x00000ca4
   26d4c:	.word	0x00000ca4
   26d50:	.word	0x00000cd8
   26d54:	.word	0x00000cd8
   26d58:	.word	0x000013b4
   26d5c:	.word	0x00000e04
   26d60:	.word	0x00001068
   26d64:	.word	0x000013f4
   26d68:	.word	0x00001114
   26d6c:	.word	0x00001210
   26d70:	.word	0x0000108c
   26d74:	.word	0x00000d50
   26d78:	.word	0x000011bc
   26d7c:	.word	0x000010d8
   26d80:	.word	0x00001240
   26d84:	.word	0x00001458
   26d88:	.word	0x00001464
   26d8c:	.word	0x00000d44
   26d90:	.word	0x00000f48
   26d94:	.word	0x00001434
   26d98:	.word	0x000013c0
   26d9c:	.word	0x00000d84
   26da0:	.word	0x00001290
   26da4:	.word	0x00000d20
   26da8:	.word	0x0000132c
   26dac:	.word	0x00000f90
   26db0:	.word	0x00001040
   26db4:	.word	0x00000f5c
   26db8:	.word	0x00000ee0
   26dbc:	.word	0x0000105c
   26dc0:	.word	0x00000eec
   26dc4:	.word	0x00000ff8
   26dc8:	.word	0x00000ed4
   26dcc:	.word	0x00001108
   26dd0:	.word	0x00001138
   26dd4:	.word	0x000010fc
   26dd8:	.word	0x0000118c
   26ddc:	.word	0x000011c8
   26de0:	.word	0x0000112c
   26de4:	.word	0x00001308
   26de8:	.word	0x000013d8
   26dec:	.word	0x00001180
   26df0:	.word	0x00001314
   26df4:	.word	0x00000d94
   26df8:	.word	0x000012e0
   26dfc:	.word	0x00001120
   26e00:	.word	0x00001150
   26e04:	.word	0x0000115c
   26e08:	.word	0x000012a0
   26e0c:	.word	0x000012d0
   26e10:	.word	0x00001234
   26e14:	.word	0x00000d10
   26e18:	.word	0x00001198
   26e1c:	.word	0x00000f3c
   26e20:	.word	0x00000f68
   26e24:	.word	0x00001010
   26e28:	.word	0x00001028
   26e2c:	.word	0x00001074
   26e30:	.word	0x000010e4
   26e34:	.word	0x00001394
   26e38:	.word	0x00000e14
   26e3c:	.word	0x00000dc8
   26e40:	.word	0x00001168
   26e44:	.word	0x00000e24
   26e48:	.word	0x00000da4
   26e4c:	.word	0x000011b0
   26e50:	.word	0x00000ce8
   26e54:	.word	0x00000ce8
   26e58:	.word	0x00000d60
   26e5c:	.word	0x00001338
   26e60:	.word	0x000012ec
   26e64:	.word	0x000013a8
   26e68:	.word	0x000014b0
   26e6c:	.word	0xfffffe50
   26e70:	.word	0x00000df0
   26e74:	.word	0x00001498
   26e78:	.word	0x00001144
   26e7c:	.word	0x00001354
   26e80:	.word	0x00001274
   26e84:	.word	0x000014a4
   26e88:	.word	0x0000121c
   26e8c:	.word	0x00001470
   26e90:	.word	0x00000fc4
   26e94:	.word	0x000011d4
   26e98:	.word	0x00001098
   26e9c:	.word	0x00000e4c
   26ea0:	.word	0x00001560
   26ea4:	.word	0x00000cfc
   26ea8:	.word	0x00000cb4
   26eac:	.word	0x00000cfc
   26eb0:	.word	0x0000104c
   26eb4:	.word	0x00000c68
   26eb8:	.word	0x000012b0
   26ebc:	.word	0x00000c78
   26ec0:	.word	0x00001250
   26ec4:	.word	0x000012f8
   26ec8:	.word	0x00001360
   26ecc:	.word	0x00000f7c
   26ed0:	.word	0x00000cc4
   26ed4:	.word	0x00000f1c
   26ed8:	.word	0x00000fa0
   26edc:	.word	0x00000c94
   26ee0:	.word	0x00000ec0
   26ee4:	.word	0x000010c8
   26ee8:	.word	0x00000cc4
   26eec:	.word	0x00000cb4
   26ef0:	.word	0x000013e4
   26ef4:	.word	0x00000c68
   26ef8:	.word	0x00000c78
   26efc:	.word	0x00000c94
   26f00:	.word	0x00001344
   26f04:	.word	0x00001410
   26f08:	.word	0x00000db4
   26f0c:	.word	0x000015c8
   26f10:	.word	0x000015a4
   26f14:	.word	0xfffffe10
   26f18:	.word	0x0000024c
   26f1c:	.word	0x00001004
   26f20:	ldrb	r0, [r3]
   26f24:	ldr	r1, [pc, #4084]	; 27f20 <sfbpf_lex+0x15a4>
   26f28:	ldr	r1, [pc, r1]
   26f2c:	strb	r0, [r7]
   26f30:	str	r1, [sp, #12]
   26f34:	ldr	r1, [pc, #4088]	; 27f34 <sfbpf_lex+0x15b8>
   26f38:	ldr	r1, [pc, r1]
   26f3c:	ldr	r0, [pc, #4084]	; 27f38 <sfbpf_lex+0x15bc>
   26f40:	ldr	r0, [pc, r0]
   26f44:	str	r1, [sp, #16]
   26f48:	mov	lr, r0
   26f4c:	str	r0, [sp, #20]
   26f50:	ldr	r2, [lr, r1, lsl #2]!
   26f54:	ldr	r0, [r2, #44]	; 0x2c
   26f58:	str	lr, [sp, #36]	; 0x24
   26f5c:	cmp	r0, #0
   26f60:	beq	26f70 <sfbpf_lex+0x5f4>
   26f64:	ldr	r0, [pc, #4084]	; 27f60 <sfbpf_lex+0x15e4>
   26f68:	ldr	r0, [pc, r0]
   26f6c:	b	26f9c <sfbpf_lex+0x620>
   26f70:	ldr	r0, [r2, #16]
   26f74:	ldr	r1, [pc, #4084]	; 27f70 <sfbpf_lex+0x15f4>
   26f78:	add	r1, pc, r1
   26f7c:	str	r0, [r1]
   26f80:	ldr	r1, [pc, #4088]	; 27f80 <sfbpf_lex+0x1604>
   26f84:	ldr	r1, [pc, r1]
   26f88:	str	r1, [r2]
   26f8c:	mov	r2, #1
   26f90:	ldr	r1, [lr]
   26f94:	str	r2, [r1, #44]	; 0x2c
   26f98:	ldr	r2, [lr]
   26f9c:	ldr	r1, [r2, #4]
   26fa0:	ldr	lr, [pc, #4088]	; 27fa0 <sfbpf_lex+0x1624>
   26fa4:	mov	r3, r2
   26fa8:	ldr	lr, [pc, lr]
   26fac:	ldr	r2, [pc, #4092]	; 27fb0 <sfbpf_lex+0x1634>
   26fb0:	add	r0, r1, r0
   26fb4:	ldr	r2, [pc, r2]
   26fb8:	cmp	r2, r0
   26fbc:	bls	27538 <sfbpf_lex+0xbbc>
   26fc0:	add	r0, r0, #1
   26fc4:	cmp	r2, r0
   26fc8:	bhi	28248 <sfbpf_lex+0x18cc>
   26fcc:	ldr	r0, [r3, #40]	; 0x28
   26fd0:	str	r2, [sp, #24]
   26fd4:	sub	r2, r2, lr
   26fd8:	cmp	r0, #0
   26fdc:	beq	27090 <sfbpf_lex+0x714>
   26fe0:	sub	r0, r2, #1
   26fe4:	cmp	r2, #2
   26fe8:	str	r2, [sp, #32]
   26fec:	str	r0, [sp, #28]
   26ff0:	blt	270d4 <sfbpf_lex+0x758>
   26ff4:	ldr	r2, [sp, #24]
   26ff8:	mvn	r0, lr
   26ffc:	str	lr, [sp, #8]
   27000:	add	r3, r0, r2
   27004:	mov	r0, #1
   27008:	mov	r2, #0
   2700c:	cmp	r3, #1
   27010:	movgt	r0, r3
   27014:	cmp	r0, #16
   27018:	str	r0, [sp, #4]
   2701c:	bcc	270a4 <sfbpf_lex+0x728>
   27020:	cmp	r3, #1
   27024:	mov	r0, #1
   27028:	movgt	r0, r3
   2702c:	add	r3, lr, r0
   27030:	cmp	r1, r3
   27034:	addcc	r0, r1, r0
   27038:	cmpcc	lr, r0
   2703c:	bcc	270a4 <sfbpf_lex+0x728>
   27040:	ldr	r4, [sp, #4]
   27044:	mov	r6, ip
   27048:	mov	ip, lr
   2704c:	bic	r2, r4, #-2147483633	; 0x8000000f
   27050:	add	r0, lr, r2
   27054:	add	r3, r1, r2
   27058:	mov	lr, r2
   2705c:	vld1.8	{d16-d17}, [ip]!
   27060:	subs	lr, lr, #16
   27064:	vst1.8	{d16-d17}, [r1]!
   27068:	bne	2705c <sfbpf_lex+0x6e0>
   2706c:	cmp	r4, r2
   27070:	ldr	r4, [pc, #4092]	; 28074 <sfbpf_lex+0x16f8>
   27074:	mov	ip, r6
   27078:	ldr	r6, [pc, #4088]	; 28078 <sfbpf_lex+0x16fc>
   2707c:	ldr	lr, [sp, #28]
   27080:	add	r4, pc, r4
   27084:	add	r6, pc, r6
   27088:	bne	270b0 <sfbpf_lex+0x734>
   2708c:	b	270c4 <sfbpf_lex+0x748>
   27090:	cmp	r2, #1
   27094:	movwne	r2, #2
   27098:	cmp	r2, #1
   2709c:	beq	26ca8 <sfbpf_lex+0x32c>
   270a0:	b	276e8 <sfbpf_lex+0xd6c>
   270a4:	mov	r0, lr
   270a8:	ldr	lr, [sp, #28]
   270ac:	mov	r3, r1
   270b0:	ldrb	r1, [r0], #1
   270b4:	add	r2, r2, #1
   270b8:	cmp	r2, lr
   270bc:	strb	r1, [r3], #1
   270c0:	blt	270b0 <sfbpf_lex+0x734>
   270c4:	ldr	r0, [sp, #36]	; 0x24
   270c8:	ldr	lr, [sp, #8]
   270cc:	ldr	r2, [sp, #32]
   270d0:	ldr	r3, [r0]
   270d4:	ldr	r0, [r3, #44]	; 0x2c
   270d8:	cmp	r0, #2
   270dc:	bne	2710c <sfbpf_lex+0x790>
   270e0:	ldr	r0, [pc, #4088]	; 280e0 <sfbpf_lex+0x1764>
   270e4:	mov	r1, #0
   270e8:	add	r0, pc, r0
   270ec:	str	r1, [r0]
   270f0:	str	r1, [r3, #16]
   270f4:	ldr	r0, [sp, #28]
   270f8:	ldr	r1, [sp, #20]
   270fc:	ldr	r3, [sp, #16]
   27100:	cmp	r0, #0
   27104:	bne	273e0 <sfbpf_lex+0xa64>
   27108:	b	27408 <sfbpf_lex+0xa8c>
   2710c:	mov	r0, lr
   27110:	ldr	lr, [r3, #12]
   27114:	mov	r4, r3
   27118:	sub	r1, lr, r2
   2711c:	cmp	r1, #0
   27120:	ble	27130 <sfbpf_lex+0x7b4>
   27124:	mov	r6, r1
   27128:	mov	r1, r0
   2712c:	b	271d0 <sfbpf_lex+0x854>
   27130:	ldr	ip, [sp, #24]
   27134:	str	r0, [sp, #8]
   27138:	ldr	r1, [r4, #20]
   2713c:	cmp	r1, #0
   27140:	beq	282b4 <sfbpf_lex+0x1938>
   27144:	ldr	r6, [r4, #4]
   27148:	cmp	lr, #0
   2714c:	str	ip, [sp, #36]	; 0x24
   27150:	ble	2715c <sfbpf_lex+0x7e0>
   27154:	lsl	r1, lr, #1
   27158:	b	27168 <sfbpf_lex+0x7ec>
   2715c:	asr	r1, lr, #31
   27160:	add	r1, lr, r1, lsr #29
   27164:	add	r1, lr, r1, asr #3
   27168:	str	r1, [r4, #12]
   2716c:	add	r1, r1, #2
   27170:	mov	r0, r6
   27174:	bl	ea4 <realloc@plt>
   27178:	cmp	r0, #0
   2717c:	str	r0, [r4, #4]
   27180:	beq	282bc <sfbpf_lex+0x1940>
   27184:	ldr	r1, [sp, #36]	; 0x24
   27188:	sub	r1, r1, r6
   2718c:	add	ip, r0, r1
   27190:	ldr	r0, [pc, #4088]	; 28190 <sfbpf_lex+0x1814>
   27194:	add	r0, pc, r0
   27198:	str	ip, [r0]
   2719c:	ldr	r1, [pc, #4080]	; 28194 <sfbpf_lex+0x1818>
   271a0:	ldr	r1, [pc, r1]
   271a4:	ldr	r2, [pc, #4092]	; 281a8 <sfbpf_lex+0x182c>
   271a8:	ldr	r2, [pc, r2]
   271ac:	ldr	r3, [sp, #32]
   271b0:	ldr	r4, [r2, r1, lsl #2]
   271b4:	ldr	lr, [r4, #12]
   271b8:	sub	r6, lr, r3
   271bc:	cmp	r6, #1
   271c0:	blt	27138 <sfbpf_lex+0x7bc>
   271c4:	add	r0, r2, r1, lsl #2
   271c8:	ldr	r1, [sp, #8]
   271cc:	str	r0, [sp, #36]	; 0x24
   271d0:	ldr	r0, [r4, #24]
   271d4:	cmp	r6, #8192	; 0x2000
   271d8:	movge	r6, #8192	; 0x2000
   271dc:	cmp	r0, #0
   271e0:	beq	27288 <sfbpf_lex+0x90c>
   271e4:	ldr	r0, [sp, #24]
   271e8:	mov	r4, #0
   271ec:	sub	r0, r0, #1
   271f0:	sub	r0, r0, r1
   271f4:	str	r0, [sp, #36]	; 0x24
   271f8:	ldr	r0, [pc, #4012]	; 281ac <sfbpf_lex+0x1830>
   271fc:	ldr	r0, [pc, r0]
   27200:	bl	fd0 <getc@plt>
   27204:	cmn	r0, #1
   27208:	cmpne	r0, #10
   2720c:	beq	27240 <sfbpf_lex+0x8c4>
   27210:	ldr	r1, [pc, #4088]	; 28210 <sfbpf_lex+0x1894>
   27214:	ldr	r1, [pc, r1]
   27218:	ldr	r2, [pc, #4084]	; 28214 <sfbpf_lex+0x1898>
   2721c:	ldr	r2, [pc, r2]
   27220:	ldr	r1, [r2, r1, lsl #2]
   27224:	ldr	r2, [sp, #36]	; 0x24
   27228:	ldr	r1, [r1, #4]
   2722c:	add	r1, r1, r2
   27230:	strb	r0, [r1, r4]
   27234:	add	r4, r4, #1
   27238:	cmp	r4, r6
   2723c:	blt	271f8 <sfbpf_lex+0x87c>
   27240:	cmn	r0, #1
   27244:	beq	2736c <sfbpf_lex+0x9f0>
   27248:	cmp	r0, #10
   2724c:	bne	2727c <sfbpf_lex+0x900>
   27250:	ldr	r0, [pc, #4092]	; 28254 <sfbpf_lex+0x18d8>
   27254:	ldr	r0, [pc, r0]
   27258:	ldr	r1, [pc, #4088]	; 28258 <sfbpf_lex+0x18dc>
   2725c:	ldr	r1, [pc, r1]
   27260:	ldr	r0, [r1, r0, lsl #2]
   27264:	ldr	r1, [sp, #28]
   27268:	ldr	r0, [r0, #4]
   2726c:	add	r0, r0, r1
   27270:	mov	r1, #10
   27274:	strb	r1, [r0, r4]
   27278:	add	r4, r4, #1
   2727c:	ldr	ip, [pc, #4080]	; 28274 <sfbpf_lex+0x18f8>
   27280:	add	ip, pc, ip
   27284:	b	27388 <sfbpf_lex+0xa0c>
   27288:	bl	f28 <__errno_location@plt>
   2728c:	mov	r1, #0
   27290:	str	r0, [sp, #24]
   27294:	mov	r2, r6
   27298:	str	r1, [r0]
   2729c:	ldr	r0, [sp, #36]	; 0x24
   272a0:	ldr	r1, [sp, #28]
   272a4:	ldr	r0, [r0]
   272a8:	ldr	r0, [r0, #4]
   272ac:	ldr	r3, [pc, #4092]	; 282b0 <sfbpf_lex+0x1934>
   272b0:	ldr	r3, [pc, r3]
   272b4:	add	r0, r0, r1
   272b8:	mov	r1, #1
   272bc:	bl	ebc <fread@plt>
   272c0:	mov	r4, r0
   272c4:	ldr	r0, [pc, #4092]	; 282c8 <sfbpf_lex+0x194c>
   272c8:	cmp	r4, #0
   272cc:	add	r0, pc, r0
   272d0:	str	r4, [r0]
   272d4:	ldr	ip, [pc, #4080]	; 282cc <sfbpf_lex+0x1950>
   272d8:	add	ip, pc, ip
   272dc:	bne	27394 <sfbpf_lex+0xa18>
   272e0:	str	r6, [sp, #36]	; 0x24
   272e4:	mov	r6, r0
   272e8:	ldr	r0, [pc, #4084]	; 282e4 <sfbpf_lex+0x1968>
   272ec:	ldr	r0, [pc, r0]
   272f0:	bl	e74 <ferror@plt>
   272f4:	cmp	r0, #0
   272f8:	beq	27528 <sfbpf_lex+0xbac>
   272fc:	ldr	r1, [sp, #24]
   27300:	ldr	r0, [r1]
   27304:	cmp	r0, #4
   27308:	bne	2825c <sfbpf_lex+0x18e0>
   2730c:	mov	r0, #0
   27310:	str	r0, [r1]
   27314:	ldr	r0, [pc, #4044]	; 282e8 <sfbpf_lex+0x196c>
   27318:	ldr	r0, [pc, r0]
   2731c:	bl	f7c <clearerr@plt>
   27320:	ldr	r0, [pc, #4036]	; 282ec <sfbpf_lex+0x1970>
   27324:	ldr	r0, [pc, r0]
   27328:	ldr	r1, [pc, #4032]	; 282f0 <sfbpf_lex+0x1974>
   2732c:	ldr	r1, [pc, r1]
   27330:	ldr	r0, [r1, r0, lsl #2]
   27334:	ldr	r1, [sp, #28]
   27338:	ldr	r0, [r0, #4]
   2733c:	ldr	r3, [pc, #4016]	; 282f4 <sfbpf_lex+0x1978>
   27340:	ldr	r3, [pc, r3]
   27344:	ldr	r2, [sp, #36]	; 0x24
   27348:	add	r0, r0, r1
   2734c:	mov	r1, #1
   27350:	bl	ebc <fread@plt>
   27354:	mov	r4, r0
   27358:	mov	r0, r6
   2735c:	cmp	r4, #0
   27360:	str	r4, [r6]
   27364:	beq	272e4 <sfbpf_lex+0x968>
   27368:	b	2752c <sfbpf_lex+0xbb0>
   2736c:	ldr	r0, [pc, #3972]	; 282f8 <sfbpf_lex+0x197c>
   27370:	ldr	r0, [pc, r0]
   27374:	bl	e74 <ferror@plt>
   27378:	ldr	ip, [pc, #3964]	; 282fc <sfbpf_lex+0x1980>
   2737c:	cmp	r0, #0
   27380:	add	ip, pc, ip
   27384:	bne	2825c <sfbpf_lex+0x18e0>
   27388:	ldr	r0, [pc, #3952]	; 28300 <sfbpf_lex+0x1984>
   2738c:	add	r0, pc, r0
   27390:	str	r4, [r0]
   27394:	ldr	r3, [pc, #3944]	; 28304 <sfbpf_lex+0x1988>
   27398:	cmp	r4, #0
   2739c:	mov	lr, r4
   273a0:	ldr	r3, [pc, r3]
   273a4:	ldr	r1, [pc, #3932]	; 28308 <sfbpf_lex+0x198c>
   273a8:	ldr	r1, [pc, r1]
   273ac:	mov	r2, r1
   273b0:	ldr	r0, [r2, r3, lsl #2]!
   273b4:	str	r4, [r0, #16]
   273b8:	mov	r0, #0
   273bc:	str	r0, [sp, #36]	; 0x24
   273c0:	ldr	r4, [pc, #3908]	; 2830c <sfbpf_lex+0x1990>
   273c4:	ldr	r6, [pc, #3908]	; 28310 <sfbpf_lex+0x1994>
   273c8:	ldr	r0, [sp, #28]
   273cc:	add	r4, pc, r4
   273d0:	add	r6, pc, r6
   273d4:	bne	27458 <sfbpf_lex+0xadc>
   273d8:	cmp	r0, #0
   273dc:	beq	27408 <sfbpf_lex+0xa8c>
   273e0:	mov	lr, r0
   273e4:	ldr	r0, [r1, r3, lsl #2]!
   273e8:	mov	r3, #2
   273ec:	mov	r2, #2
   273f0:	str	r2, [sp, #36]	; 0x24
   273f4:	str	r3, [r0, #44]	; 0x2c
   273f8:	mov	r0, lr
   273fc:	mov	lr, #0
   27400:	mov	r2, r1
   27404:	b	27458 <sfbpf_lex+0xadc>
   27408:	ldr	r0, [pc, #4068]	; 283f4 <sfbpf_lex+0x1a78>
   2740c:	mov	r6, ip
   27410:	ldr	r0, [pc, r0]
   27414:	bl	28714 <sfbpf_restart>
   27418:	ldr	r3, [sp, #28]
   2741c:	mov	ip, r6
   27420:	ldr	r6, [pc, #4048]	; 283f8 <sfbpf_lex+0x1a7c>
   27424:	ldr	r4, [pc, #4048]	; 283fc <sfbpf_lex+0x1a80>
   27428:	ldr	r0, [pc, #4048]	; 28400 <sfbpf_lex+0x1a84>
   2742c:	ldr	r0, [pc, r0]
   27430:	ldr	r1, [pc, #4044]	; 28404 <sfbpf_lex+0x1a88>
   27434:	add	r6, pc, r6
   27438:	add	r4, pc, r4
   2743c:	ldr	r1, [pc, r1]
   27440:	add	r2, r1, r0, lsl #2
   27444:	mov	r0, #1
   27448:	str	r0, [sp, #36]	; 0x24
   2744c:	mov	r0, r3
   27450:	ldr	lr, [pc, #4016]	; 28408 <sfbpf_lex+0x1a8c>
   27454:	ldr	lr, [pc, lr]
   27458:	ldr	r1, [r2]
   2745c:	add	r0, lr, r0
   27460:	ldr	r3, [r1, #12]
   27464:	cmp	r0, r3
   27468:	ble	274d8 <sfbpf_lex+0xb5c>
   2746c:	add	r4, r0, lr, asr #1
   27470:	ldr	r0, [r1, #4]
   27474:	mov	r6, ip
   27478:	mov	r1, r4
   2747c:	bl	ea4 <realloc@plt>
   27480:	ldr	r1, [pc, #3972]	; 2840c <sfbpf_lex+0x1a90>
   27484:	ldr	r1, [pc, r1]
   27488:	ldr	r2, [pc, #3968]	; 28410 <sfbpf_lex+0x1a94>
   2748c:	ldr	r2, [pc, r2]
   27490:	ldr	r1, [r2, r1, lsl #2]!
   27494:	str	r0, [r1, #4]
   27498:	ldr	r0, [r2]
   2749c:	ldr	r1, [r0, #4]
   274a0:	cmp	r1, #0
   274a4:	beq	28268 <sfbpf_lex+0x18ec>
   274a8:	sub	r1, r4, #2
   274ac:	mov	ip, r6
   274b0:	str	r1, [r0, #12]
   274b4:	ldr	lr, [pc, #3928]	; 28414 <sfbpf_lex+0x1a98>
   274b8:	ldr	lr, [pc, lr]
   274bc:	ldr	r0, [sp, #28]
   274c0:	ldr	r1, [r2]
   274c4:	ldr	r4, [pc, #3916]	; 28418 <sfbpf_lex+0x1a9c>
   274c8:	ldr	r6, [pc, #3916]	; 2841c <sfbpf_lex+0x1aa0>
   274cc:	add	r0, lr, r0
   274d0:	add	r4, pc, r4
   274d4:	add	r6, pc, r6
   274d8:	ldr	r3, [pc, #3904]	; 28420 <sfbpf_lex+0x1aa4>
   274dc:	add	r3, pc, r3
   274e0:	str	r0, [r3]
   274e4:	mov	r3, #0
   274e8:	ldr	r1, [r1, #4]
   274ec:	strb	r3, [r1, r0]
   274f0:	ldr	r0, [sp, #32]
   274f4:	ldr	r1, [r2]
   274f8:	add	r0, lr, r0
   274fc:	ldr	r1, [r1, #4]
   27500:	strb	r3, [r1, r0]
   27504:	ldr	r0, [r2]
   27508:	ldr	lr, [r0, #4]
   2750c:	ldr	r0, [pc, #3856]	; 28424 <sfbpf_lex+0x1aa8>
   27510:	ldr	r2, [sp, #36]	; 0x24
   27514:	add	r0, pc, r0
   27518:	str	lr, [r0]
   2751c:	cmp	r2, #1
   27520:	beq	26ca8 <sfbpf_lex+0x32c>
   27524:	b	276e8 <sfbpf_lex+0xd6c>
   27528:	mov	r4, #0
   2752c:	ldr	ip, [pc, #3772]	; 283f0 <sfbpf_lex+0x1a74>
   27530:	add	ip, pc, ip
   27534:	b	27394 <sfbpf_lex+0xa18>
   27538:	ldr	r0, [sp, #12]
   2753c:	mvn	r0, r0
   27540:	add	r1, r0, r7
   27544:	ldr	r0, [pc, #3684]	; 283b0 <sfbpf_lex+0x1a34>
   27548:	str	lr, [sp, #8]
   2754c:	add	r7, lr, r1
   27550:	cmp	r1, #1
   27554:	add	r0, pc, r0
   27558:	str	r7, [r0]
   2755c:	ldrb	r0, [ip]
   27560:	blt	27630 <sfbpf_lex+0xcb4>
   27564:	ldrb	r1, [lr]
   27568:	cmp	r1, #0
   2756c:	ldrbne	r2, [r4, r1]
   27570:	add	r1, r6, r0, lsl #1
   27574:	ldrh	r1, [r1]
   27578:	moveq	r2, #1
   2757c:	cmp	r1, #0
   27580:	beq	2759c <sfbpf_lex+0xc20>
   27584:	ldr	r1, [pc, #3624]	; 283b4 <sfbpf_lex+0x1a38>
   27588:	add	r1, pc, r1
   2758c:	str	lr, [r1]
   27590:	ldr	r1, [pc, #3616]	; 283b8 <sfbpf_lex+0x1a3c>
   27594:	add	r1, pc, r1
   27598:	str	r0, [r1]
   2759c:	add	r1, r8, r0, lsl #1
   275a0:	ldrsh	r1, [r1]
   275a4:	add	r1, r1, r2
   275a8:	add	r3, r9, r1, lsl #1
   275ac:	ldrsh	r3, [r3]
   275b0:	cmp	r0, r3
   275b4:	beq	2760c <sfbpf_lex+0xc90>
   275b8:	mov	r3, r2
   275bc:	add	r0, sl, r0, lsl #1
   275c0:	movw	r1, #1434	; 0x59a
   275c4:	ldrsh	r0, [r0]
   275c8:	cmp	r0, r1
   275cc:	uxth	r4, r0
   275d0:	ldrge	r1, [pc, #3556]	; 283bc <sfbpf_lex+0x1a40>
   275d4:	addge	r1, pc, r1
   275d8:	ldrbge	r3, [r1, r2]
   275dc:	add	r1, r8, r0, lsl #1
   275e0:	ldrsh	r1, [r1]
   275e4:	uxtab	r1, r1, r3
   275e8:	add	r2, r9, r1, lsl #1
   275ec:	ldrh	r6, [r2]
   275f0:	uxtb	r2, r3
   275f4:	cmp	r4, r6
   275f8:	bne	275bc <sfbpf_lex+0xc40>
   275fc:	ldr	r4, [pc, #3516]	; 283c0 <sfbpf_lex+0x1a44>
   27600:	ldr	r6, [pc, #3516]	; 283c4 <sfbpf_lex+0x1a48>
   27604:	add	r4, pc, r4
   27608:	add	r6, pc, r6
   2760c:	ldr	r0, [pc, #3508]	; 283c8 <sfbpf_lex+0x1a4c>
   27610:	add	lr, lr, #1
   27614:	cmp	lr, r7
   27618:	add	r0, pc, r0
   2761c:	add	r0, r0, r1, lsl #1
   27620:	ldrsh	r0, [r0]
   27624:	bcc	27564 <sfbpf_lex+0xbe8>
   27628:	ldr	ip, [pc, #3484]	; 283cc <sfbpf_lex+0x1a50>
   2762c:	add	ip, pc, ip
   27630:	add	r1, r6, r0, lsl #1
   27634:	ldrh	r1, [r1]
   27638:	cmp	r1, #0
   2763c:	beq	27658 <sfbpf_lex+0xcdc>
   27640:	ldr	r1, [pc, #3464]	; 283d0 <sfbpf_lex+0x1a54>
   27644:	add	r1, pc, r1
   27648:	str	r7, [r1]
   2764c:	ldr	r1, [pc, #3456]	; 283d4 <sfbpf_lex+0x1a58>
   27650:	add	r1, pc, r1
   27654:	str	r0, [r1]
   27658:	add	r1, r8, r0, lsl #1
   2765c:	ldrsh	r1, [r1]
   27660:	add	r1, r1, #1
   27664:	add	r2, r9, r1, lsl #1
   27668:	ldrsh	r2, [r2]
   2766c:	cmp	r0, r2
   27670:	beq	276a0 <sfbpf_lex+0xd24>
   27674:	mov	r2, r0
   27678:	add	r1, sl, r2, lsl #1
   2767c:	ldrh	r3, [r1]
   27680:	sxth	r2, r3
   27684:	add	r1, r8, r2, lsl #1
   27688:	ldrsh	r1, [r1]
   2768c:	add	r1, r1, #1
   27690:	add	r6, r9, r1, lsl #1
   27694:	ldrh	r6, [r6]
   27698:	cmp	r3, r6
   2769c:	bne	27678 <sfbpf_lex+0xcfc>
   276a0:	ldr	r2, [pc, #3376]	; 283d8 <sfbpf_lex+0x1a5c>
   276a4:	ldr	lr, [sp, #8]
   276a8:	add	r2, pc, r2
   276ac:	str	lr, [sp, #40]	; 0x28
   276b0:	add	r1, r2, r1, lsl #1
   276b4:	ldr	r6, [pc, #3360]	; 283dc <sfbpf_lex+0x1a60>
   276b8:	ldr	r3, [pc, #3360]	; 283e0 <sfbpf_lex+0x1a64>
   276bc:	ldrh	r1, [r1]
   276c0:	add	r6, pc, r6
   276c4:	add	r3, pc, r3
   276c8:	cmp	r1, #0
   276cc:	beq	26c34 <sfbpf_lex+0x2b8>
   276d0:	movw	r2, #1433	; 0x599
   276d4:	str	lr, [sp, #40]	; 0x28
   276d8:	cmp	r1, r2
   276dc:	mov	r2, lr
   276e0:	beq	26c34 <sfbpf_lex+0x2b8>
   276e4:	b	27924 <sfbpf_lex+0xfa8>
   276e8:	ldr	r3, [pc, #3384]	; 28428 <sfbpf_lex+0x1aac>
   276ec:	cmp	r2, #2
   276f0:	add	r3, pc, r3
   276f4:	bne	27828 <sfbpf_lex+0xeac>
   276f8:	ldr	r0, [pc, #3400]	; 28448 <sfbpf_lex+0x1acc>
   276fc:	ldr	r0, [pc, r0]
   27700:	ldr	r1, [pc, #3396]	; 2844c <sfbpf_lex+0x1ad0>
   27704:	ldr	r1, [pc, r1]
   27708:	ldr	r0, [r1, r0, lsl #2]
   2770c:	ldr	r0, [r0, #4]
   27710:	ldr	r1, [pc, #3384]	; 28450 <sfbpf_lex+0x1ad4>
   27714:	ldr	r1, [pc, r1]
   27718:	add	r7, r0, r1
   2771c:	ldr	r0, [pc, #3376]	; 28454 <sfbpf_lex+0x1ad8>
   27720:	str	lr, [sp, #40]	; 0x28
   27724:	cmp	lr, r7
   27728:	add	r0, pc, r0
   2772c:	str	r7, [r0]
   27730:	ldrb	r0, [ip]
   27734:	bcs	26c34 <sfbpf_lex+0x2b8>
   27738:	mov	r1, lr
   2773c:	mov	ip, lr
   27740:	str	r1, [sp, #8]
   27744:	ldrb	r1, [ip]
   27748:	cmp	r1, #0
   2774c:	ldrbne	r2, [r4, r1]
   27750:	add	r1, r6, r0, lsl #1
   27754:	ldrh	r1, [r1]
   27758:	moveq	r2, #1
   2775c:	cmp	r1, #0
   27760:	beq	2777c <sfbpf_lex+0xe00>
   27764:	ldr	r1, [pc, #3308]	; 28458 <sfbpf_lex+0x1adc>
   27768:	add	r1, pc, r1
   2776c:	str	ip, [r1]
   27770:	ldr	r1, [pc, #3300]	; 2845c <sfbpf_lex+0x1ae0>
   27774:	add	r1, pc, r1
   27778:	str	r0, [r1]
   2777c:	add	r1, r8, r0, lsl #1
   27780:	ldrsh	r1, [r1]
   27784:	add	r1, r1, r2
   27788:	add	r3, r9, r1, lsl #1
   2778c:	ldrsh	r3, [r3]
   27790:	cmp	r0, r3
   27794:	beq	277ec <sfbpf_lex+0xe70>
   27798:	mov	r3, r2
   2779c:	add	r0, sl, r0, lsl #1
   277a0:	movw	r1, #1434	; 0x59a
   277a4:	ldrsh	r0, [r0]
   277a8:	cmp	r0, r1
   277ac:	uxth	r4, r0
   277b0:	ldrge	r1, [pc, #3240]	; 28460 <sfbpf_lex+0x1ae4>
   277b4:	addge	r1, pc, r1
   277b8:	ldrbge	r3, [r1, r2]
   277bc:	add	r1, r8, r0, lsl #1
   277c0:	ldrsh	r1, [r1]
   277c4:	uxtab	r1, r1, r3
   277c8:	add	r2, r9, r1, lsl #1
   277cc:	ldrh	r6, [r2]
   277d0:	uxtb	r2, r3
   277d4:	cmp	r4, r6
   277d8:	bne	2779c <sfbpf_lex+0xe20>
   277dc:	ldr	r4, [pc, #3200]	; 28464 <sfbpf_lex+0x1ae8>
   277e0:	ldr	r6, [pc, #3200]	; 28468 <sfbpf_lex+0x1aec>
   277e4:	add	r4, pc, r4
   277e8:	add	r6, pc, r6
   277ec:	ldr	r0, [pc, #3192]	; 2846c <sfbpf_lex+0x1af0>
   277f0:	add	ip, ip, #1
   277f4:	cmp	ip, r7
   277f8:	add	r0, pc, r0
   277fc:	add	r0, r0, r1, lsl #1
   27800:	ldrsh	r0, [r0]
   27804:	bne	27744 <sfbpf_lex+0xdc8>
   27808:	ldr	r1, [sp, #8]
   2780c:	str	r1, [sp, #40]	; 0x28
   27810:	ldr	r1, [pc, #3160]	; 28470 <sfbpf_lex+0x1af4>
   27814:	ldr	ip, [pc, #3160]	; 28474 <sfbpf_lex+0x1af8>
   27818:	add	r1, pc, r1
   2781c:	add	ip, pc, ip
   27820:	mov	r3, r1
   27824:	b	26c34 <sfbpf_lex+0x2b8>
   27828:	cmp	r2, #0
   2782c:	bne	26b24 <sfbpf_lex+0x1a8>
   27830:	ldr	r0, [sp, #12]
   27834:	mvn	r0, r0
   27838:	add	r1, r0, r7
   2783c:	ldr	r0, [pc, #3048]	; 2842c <sfbpf_lex+0x1ab0>
   27840:	add	r7, lr, r1
   27844:	cmp	r1, #1
   27848:	add	r0, pc, r0
   2784c:	str	r7, [r0]
   27850:	ldrb	r0, [ip]
   27854:	blt	26b48 <sfbpf_lex+0x1cc>
   27858:	mov	ip, lr
   2785c:	ldrb	r1, [ip]
   27860:	cmp	r1, #0
   27864:	ldrbne	r2, [r4, r1]
   27868:	add	r1, r6, r0, lsl #1
   2786c:	ldrh	r1, [r1]
   27870:	moveq	r2, #1
   27874:	cmp	r1, #0
   27878:	beq	27894 <sfbpf_lex+0xf18>
   2787c:	ldr	r1, [pc, #2988]	; 28430 <sfbpf_lex+0x1ab4>
   27880:	add	r1, pc, r1
   27884:	str	ip, [r1]
   27888:	ldr	r1, [pc, #2980]	; 28434 <sfbpf_lex+0x1ab8>
   2788c:	add	r1, pc, r1
   27890:	str	r0, [r1]
   27894:	add	r1, r8, r0, lsl #1
   27898:	ldrsh	r1, [r1]
   2789c:	add	r1, r1, r2
   278a0:	add	r3, r9, r1, lsl #1
   278a4:	ldrsh	r3, [r3]
   278a8:	cmp	r0, r3
   278ac:	beq	27904 <sfbpf_lex+0xf88>
   278b0:	mov	r3, r2
   278b4:	add	r0, sl, r0, lsl #1
   278b8:	movw	r1, #1434	; 0x59a
   278bc:	ldrsh	r0, [r0]
   278c0:	cmp	r0, r1
   278c4:	uxth	r4, r0
   278c8:	ldrge	r1, [pc, #2920]	; 28438 <sfbpf_lex+0x1abc>
   278cc:	addge	r1, pc, r1
   278d0:	ldrbge	r3, [r1, r2]
   278d4:	add	r1, r8, r0, lsl #1
   278d8:	ldrsh	r1, [r1]
   278dc:	uxtab	r1, r1, r3
   278e0:	add	r2, r9, r1, lsl #1
   278e4:	ldrh	r6, [r2]
   278e8:	uxtb	r2, r3
   278ec:	cmp	r4, r6
   278f0:	bne	278b4 <sfbpf_lex+0xf38>
   278f4:	ldr	r4, [pc, #2880]	; 2843c <sfbpf_lex+0x1ac0>
   278f8:	ldr	r6, [pc, #2880]	; 28440 <sfbpf_lex+0x1ac4>
   278fc:	add	r4, pc, r4
   27900:	add	r6, pc, r6
   27904:	ldr	r0, [pc, #2872]	; 28444 <sfbpf_lex+0x1ac8>
   27908:	add	ip, ip, #1
   2790c:	cmp	ip, r7
   27910:	add	r0, pc, r0
   27914:	add	r0, r0, r1, lsl #1
   27918:	ldrsh	r0, [r0]
   2791c:	bcc	2785c <sfbpf_lex+0xee0>
   27920:	b	26b40 <sfbpf_lex+0x1c4>
   27924:	sxth	r0, r1
   27928:	ldr	r1, [pc, #2740]	; 283e4 <sfbpf_lex+0x1a68>
   2792c:	add	r7, r7, #1
   27930:	add	r1, pc, r1
   27934:	str	r7, [r1]
   27938:	b	26b48 <sfbpf_lex+0x1cc>
   2793c:	ldr	r0, [pc, #2624]	; 28384 <sfbpf_lex+0x1a08>
   27940:	mov	r1, #4
   27944:	ldr	r0, [pc, r0]
   27948:	b	28224 <sfbpf_lex+0x18a8>
   2794c:	ldr	r0, [pc, #2612]	; 28388 <sfbpf_lex+0x1a0c>
   27950:	mov	r1, #8
   27954:	ldr	r0, [pc, r0]
   27958:	b	28224 <sfbpf_lex+0x18a8>
   2795c:	movw	r0, #307	; 0x133
   27960:	sub	sp, fp, #28
   27964:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27968:	ldr	r0, [pc, #2588]	; 2838c <sfbpf_lex+0x1a10>
   2796c:	mov	r1, #16
   27970:	ldr	r0, [pc, r0]
   27974:	b	28224 <sfbpf_lex+0x18a8>
   27978:	mov	r0, #328	; 0x148
   2797c:	sub	sp, fp, #28
   27980:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27984:	.word	0x00020fec
   27988:	ldr	r0, [pc, #2540]	; 2837c <sfbpf_lex+0x1a00>
   2798c:	mov	r1, #1
   27990:	ldr	r0, [pc, r0]
   27994:	b	28224 <sfbpf_lex+0x18a8>
   27998:	ldr	r0, [pc, #2520]	; 28378 <sfbpf_lex+0x19fc>
   2799c:	mov	r1, #13
   279a0:	ldr	r0, [pc, r0]
   279a4:	b	28224 <sfbpf_lex+0x18a8>
   279a8:	.word	0x00020fd4
   279ac:	movw	r0, #330	; 0x14a
   279b0:	sub	sp, fp, #28
   279b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   279b8:	.word	0x00020fb0
   279bc:	movw	r0, #357	; 0x165
   279c0:	sub	sp, fp, #28
   279c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   279c8:	.word	0x000206ec
   279cc:	.word	0x00020f94
   279d0:	ldr	r0, [pc, #2420]	; 2834c <sfbpf_lex+0x19d0>
   279d4:	mov	r1, #0
   279d8:	ldr	r0, [pc, r0]
   279dc:	b	28224 <sfbpf_lex+0x18a8>
   279e0:	.word	0x00020f8c
   279e4:	movw	r0, #347	; 0x15b
   279e8:	sub	sp, fp, #28
   279ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   279f0:	.word	0x000206c8
   279f4:	mov	r0, #300	; 0x12c
   279f8:	sub	sp, fp, #28
   279fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27a00:	.word	0x00020f70
   27a04:	.word	0x00020f74
   27a08:	movw	r0, #319	; 0x13f
   27a0c:	sub	sp, fp, #28
   27a10:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27a14:	.word	0x00020f68
   27a18:	movw	r0, #263	; 0x107
   27a1c:	sub	sp, fp, #28
   27a20:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27a24:	movw	r0, #329	; 0x149
   27a28:	sub	sp, fp, #28
   27a2c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27a30:	.word	0x00020f34
   27a34:	movw	r0, #358	; 0x166
   27a38:	sub	sp, fp, #28
   27a3c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27a40:	.word	0x00020f3c
   27a44:	.word	0x00020f38
   27a48:	movw	r0, #283	; 0x11b
   27a4c:	sub	sp, fp, #28
   27a50:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27a54:	.word	0x00020f3c
   27a58:	movw	r0, #269	; 0x10d
   27a5c:	sub	sp, fp, #28
   27a60:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27a64:	.word	0x00020f74
   27a68:	movw	r0, #325	; 0x145
   27a6c:	sub	sp, fp, #28
   27a70:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27a74:	.word	0x00020f10
   27a78:	movw	r0, #299	; 0x12b
   27a7c:	sub	sp, fp, #28
   27a80:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27a84:	.word	0x00020ee0
   27a88:	ldr	r0, [pc, #2316]	; 2839c <sfbpf_lex+0x1a20>
   27a8c:	ldr	r0, [pc, r0]
   27a90:	add	r0, r0, #1
   27a94:	b	280ec <sfbpf_lex+0x1770>
   27a98:	.word	0x00020ef0
   27a9c:	mov	r0, #296	; 0x128
   27aa0:	sub	sp, fp, #28
   27aa4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27aa8:	.word	0x00020ec8
   27aac:	.word	0x00020eb4
   27ab0:	.word	0x00005628
   27ab4:	.word	0x00005724
   27ab8:	.word	0x00009c92
   27abc:	.word	0x00006250
   27ac0:	.word	0x0000ab56
   27ac4:	ldr	r0, [pc, #2120]	; 28314 <sfbpf_lex+0x1998>
   27ac8:	ldr	r0, [pc, r0]
   27acc:	ldrb	r0, [r0]
   27ad0:	sub	sp, fp, #28
   27ad4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27ad8:	mov	r0, #332	; 0x14c
   27adc:	sub	sp, fp, #28
   27ae0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27ae4:	.word	0x00020e7c
   27ae8:	movw	r0, #295	; 0x127
   27aec:	sub	sp, fp, #28
   27af0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27af4:	.word	0x00020ee0
   27af8:	movw	r0, #298	; 0x12a
   27afc:	sub	sp, fp, #28
   27b00:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27b04:	.word	0x00020edc
   27b08:	.word	0x000056d8
   27b0c:	.word	0x000055d4
   27b10:	.word	0x00020e5c
   27b14:	.word	0x00020e38
   27b18:	.word	0x00020e30
   27b1c:	.word	0x00020e20
   27b20:	add	r2, sp, #48	; 0x30
   27b24:	vmov.i32	q8, #0	; 0x00000000
   27b28:	add	r3, sp, #44	; 0x2c
   27b2c:	mov	r1, #0
   27b30:	add	r0, r2, #8
   27b34:	vst1.64	{d16-d17}, [r0]
   27b38:	mov	r0, #0
   27b3c:	str	r0, [sp, #76]	; 0x4c
   27b40:	str	r0, [sp, #72]	; 0x48
   27b44:	mov	r0, #10
   27b48:	str	r0, [sp, #52]	; 0x34
   27b4c:	mov	r0, #4
   27b50:	str	r0, [sp, #48]	; 0x30
   27b54:	ldr	r0, [pc, #2012]	; 28338 <sfbpf_lex+0x19bc>
   27b58:	ldr	r0, [pc, r0]
   27b5c:	bl	fa0 <getaddrinfo@plt>
   27b60:	cmp	r0, #0
   27b64:	bne	282d0 <sfbpf_lex+0x1954>
   27b68:	ldr	r0, [sp, #44]	; 0x2c
   27b6c:	bl	f94 <freeaddrinfo@plt>
   27b70:	ldr	r0, [pc, #1988]	; 2833c <sfbpf_lex+0x19c0>
   27b74:	ldr	r0, [pc, r0]
   27b78:	bl	2174 <sf_sdup>
   27b7c:	ldr	r1, [pc, #1980]	; 28340 <sfbpf_lex+0x19c4>
   27b80:	ldr	r1, [pc, r1]
   27b84:	str	r0, [r1]
   27b88:	movw	r0, #314	; 0x13a
   27b8c:	sub	sp, fp, #28
   27b90:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27b94:	ldr	r0, [pc, #2004]	; 28370 <sfbpf_lex+0x19f4>
   27b98:	mov	r1, #17
   27b9c:	ldr	r0, [pc, r0]
   27ba0:	b	28224 <sfbpf_lex+0x18a8>
   27ba4:	.word	0x0000b952
   27ba8:	movw	r0, #270	; 0x10e
   27bac:	sub	sp, fp, #28
   27bb0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27bb4:	movw	r0, #305	; 0x131
   27bb8:	sub	sp, fp, #28
   27bbc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27bc0:	movw	r0, #266	; 0x10a
   27bc4:	sub	sp, fp, #28
   27bc8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27bcc:	mov	r0, #288	; 0x120
   27bd0:	sub	sp, fp, #28
   27bd4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27bd8:	.word	0x00005518
   27bdc:	.word	0x00005614
   27be0:	.word	0x0000b944
   27be4:	mov	r0, #320	; 0x140
   27be8:	sub	sp, fp, #28
   27bec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27bf0:	ldr	r0, [pc, #1904]	; 28368 <sfbpf_lex+0x19ec>
   27bf4:	mov	r1, #14
   27bf8:	ldr	r0, [pc, r0]
   27bfc:	b	28224 <sfbpf_lex+0x18a8>
   27c00:	movw	r0, #259	; 0x103
   27c04:	sub	sp, fp, #28
   27c08:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27c0c:	.word	0x00020d78
   27c10:	movw	r0, #345	; 0x159
   27c14:	sub	sp, fp, #28
   27c18:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27c1c:	mov	r0, #264	; 0x108
   27c20:	sub	sp, fp, #28
   27c24:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27c28:	.word	0x00020d68
   27c2c:	.word	0x00020d64
   27c30:	mov	r0, #304	; 0x130
   27c34:	sub	sp, fp, #28
   27c38:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27c3c:	movw	r0, #346	; 0x15a
   27c40:	sub	sp, fp, #28
   27c44:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27c48:	.word	0x00020d48
   27c4c:	.word	0x00020d40
   27c50:	ldr	r0, [pc, #1804]	; 28364 <sfbpf_lex+0x19e8>
   27c54:	mov	r1, #12
   27c58:	ldr	r0, [pc, r0]
   27c5c:	b	28224 <sfbpf_lex+0x18a8>
   27c60:	.word	0x00020d78
   27c64:	movw	r0, #302	; 0x12e
   27c68:	sub	sp, fp, #28
   27c6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27c70:	.word	0x00020d64
   27c74:	ldr	r0, [pc, #1776]	; 2836c <sfbpf_lex+0x19f0>
   27c78:	mov	r1, #15
   27c7c:	ldr	r0, [pc, r0]
   27c80:	b	28224 <sfbpf_lex+0x18a8>
   27c84:	movw	r0, #285	; 0x11d
   27c88:	sub	sp, fp, #28
   27c8c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27c90:	.word	0x00020cf4
   27c94:	.word	0x00020cdc
   27c98:	ldr	r0, [pc, #1664]	; 28320 <sfbpf_lex+0x19a4>
   27c9c:	ldr	r0, [pc, r0]
   27ca0:	bl	209dc <pcap_ether_aton>
   27ca4:	ldr	r1, [pc, #1656]	; 28324 <sfbpf_lex+0x19a8>
   27ca8:	ldr	r1, [pc, r1]
   27cac:	str	r0, [r1]
   27cb0:	mov	r0, #312	; 0x138
   27cb4:	sub	sp, fp, #28
   27cb8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27cbc:	.word	0x00020cd0
   27cc0:	movw	r0, #327	; 0x147
   27cc4:	sub	sp, fp, #28
   27cc8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27ccc:	movw	r0, #267	; 0x10b
   27cd0:	sub	sp, fp, #28
   27cd4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27cd8:	mov	r0, #0
   27cdc:	sub	sp, fp, #28
   27ce0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27ce4:	movw	r0, #353	; 0x161
   27ce8:	sub	sp, fp, #28
   27cec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27cf0:	movw	r0, #286	; 0x11e
   27cf4:	sub	sp, fp, #28
   27cf8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27cfc:	movw	r0, #354	; 0x162
   27d00:	sub	sp, fp, #28
   27d04:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27d08:	movw	r0, #287	; 0x11f
   27d0c:	sub	sp, fp, #28
   27d10:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27d14:	movw	r0, #303	; 0x12f
   27d18:	sub	sp, fp, #28
   27d1c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27d20:	ldr	r0, [pc, #1576]	; 28350 <sfbpf_lex+0x19d4>
   27d24:	mov	r1, #3
   27d28:	ldr	r0, [pc, r0]
   27d2c:	b	28224 <sfbpf_lex+0x18a8>
   27d30:	movw	r0, #306	; 0x132
   27d34:	sub	sp, fp, #28
   27d38:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27d3c:	movw	r0, #333	; 0x14d
   27d40:	sub	sp, fp, #28
   27d44:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27d48:	movw	r0, #351	; 0x15f
   27d4c:	sub	sp, fp, #28
   27d50:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27d54:	movw	r0, #277	; 0x115
   27d58:	sub	sp, fp, #28
   27d5c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27d60:	movw	r0, #337	; 0x151
   27d64:	sub	sp, fp, #28
   27d68:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27d6c:	ldr	r0, [pc, #1468]	; 28330 <sfbpf_lex+0x19b4>
   27d70:	ldr	r0, [pc, r0]
   27d74:	bl	2174 <sf_sdup>
   27d78:	ldr	r1, [pc, #1460]	; 28334 <sfbpf_lex+0x19b8>
   27d7c:	ldr	r1, [pc, r1]
   27d80:	str	r0, [r1]
   27d84:	movw	r0, #313	; 0x139
   27d88:	sub	sp, fp, #28
   27d8c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27d90:	mov	r0, #280	; 0x118
   27d94:	sub	sp, fp, #28
   27d98:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27d9c:	ldr	r0, [pc, #1488]	; 28374 <sfbpf_lex+0x19f8>
   27da0:	mov	r1, #18
   27da4:	ldr	r0, [pc, r0]
   27da8:	b	28224 <sfbpf_lex+0x18a8>
   27dac:	movw	r0, #339	; 0x153
   27db0:	sub	sp, fp, #28
   27db4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27db8:	mov	r0, #352	; 0x160
   27dbc:	sub	sp, fp, #28
   27dc0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27dc4:	movw	r0, #258	; 0x102
   27dc8:	sub	sp, fp, #28
   27dcc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27dd0:	mov	r0, #364	; 0x16c
   27dd4:	sub	sp, fp, #28
   27dd8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27ddc:	movw	r0, #289	; 0x121
   27de0:	sub	sp, fp, #28
   27de4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27de8:	movw	r0, #335	; 0x14f
   27dec:	sub	sp, fp, #28
   27df0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27df4:	movw	r0, #341	; 0x155
   27df8:	sub	sp, fp, #28
   27dfc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27e00:	movw	r0, #318	; 0x13e
   27e04:	sub	sp, fp, #28
   27e08:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27e0c:	movw	r0, #290	; 0x122
   27e10:	sub	sp, fp, #28
   27e14:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27e18:	movw	r0, #309	; 0x135
   27e1c:	sub	sp, fp, #28
   27e20:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27e24:	movw	r0, #342	; 0x156
   27e28:	sub	sp, fp, #28
   27e2c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27e30:	movw	r0, #343	; 0x157
   27e34:	sub	sp, fp, #28
   27e38:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27e3c:	movw	r0, #297	; 0x129
   27e40:	sub	sp, fp, #28
   27e44:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27e48:	movw	r0, #275	; 0x113
   27e4c:	sub	sp, fp, #28
   27e50:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27e54:	movw	r0, #323	; 0x143
   27e58:	sub	sp, fp, #28
   27e5c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27e60:	movw	r0, #363	; 0x16b
   27e64:	sub	sp, fp, #28
   27e68:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27e6c:	mov	r0, #348	; 0x15c
   27e70:	sub	sp, fp, #28
   27e74:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27e78:	movw	r0, #274	; 0x112
   27e7c:	sub	sp, fp, #28
   27e80:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27e84:	mov	r0, #356	; 0x164
   27e88:	sub	sp, fp, #28
   27e8c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27e90:	movw	r0, #338	; 0x152
   27e94:	sub	sp, fp, #28
   27e98:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27e9c:	mov	r0, #33	; 0x21
   27ea0:	sub	sp, fp, #28
   27ea4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27ea8:	ldr	r0, [pc, #1144]	; 28328 <sfbpf_lex+0x19ac>
   27eac:	ldr	r0, [pc, r0]
   27eb0:	ldrb	r5, [r0]
   27eb4:	cmp	r5, #48	; 0x30
   27eb8:	bne	28198 <sfbpf_lex+0x181c>
   27ebc:	mov	r1, r0
   27ec0:	ldrb	r5, [r1, #1]!
   27ec4:	orr	r2, r5, #32
   27ec8:	cmp	r2, #120	; 0x78
   27ecc:	bne	281b0 <sfbpf_lex+0x1834>
   27ed0:	ldrb	r5, [r0, #2]!
   27ed4:	mov	r4, #16
   27ed8:	cmp	r5, #0
   27edc:	bne	281c0 <sfbpf_lex+0x1844>
   27ee0:	b	28218 <sfbpf_lex+0x189c>
   27ee4:	mov	r0, #336	; 0x150
   27ee8:	sub	sp, fp, #28
   27eec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27ef0:	movw	r0, #317	; 0x13d
   27ef4:	sub	sp, fp, #28
   27ef8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27efc:	movw	r0, #281	; 0x119
   27f00:	sub	sp, fp, #28
   27f04:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27f08:	movw	r0, #350	; 0x15e
   27f0c:	sub	sp, fp, #28
   27f10:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27f14:	mov	r0, #340	; 0x154
   27f18:	sub	sp, fp, #28
   27f1c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27f20:	.word	0x00020ab8
   27f24:	ldr	r0, [pc, #1068]	; 28358 <sfbpf_lex+0x19dc>
   27f28:	mov	r1, #9
   27f2c:	ldr	r0, [pc, r0]
   27f30:	b	28224 <sfbpf_lex+0x18a8>
   27f34:	.word	0x00020a4c
   27f38:	.word	0x00020a40
   27f3c:	movw	r0, #321	; 0x141
   27f40:	sub	sp, fp, #28
   27f44:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27f48:	mov	r0, #61	; 0x3d
   27f4c:	sub	sp, fp, #28
   27f50:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27f54:	movw	r0, #282	; 0x11a
   27f58:	sub	sp, fp, #28
   27f5c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27f60:	.word	0x00020a30
   27f64:	movw	r0, #261	; 0x105
   27f68:	sub	sp, fp, #28
   27f6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27f70:	.word	0x00020a20
   27f74:	mov	r0, #344	; 0x158
   27f78:	sub	sp, fp, #28
   27f7c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27f80:	.word	0x000209e8
   27f84:	ldr	r0, [pc, #968]	; 28354 <sfbpf_lex+0x19d8>
   27f88:	mov	r1, #5
   27f8c:	ldr	r0, [pc, r0]
   27f90:	b	28224 <sfbpf_lex+0x18a8>
   27f94:	mov	r0, #284	; 0x11c
   27f98:	sub	sp, fp, #28
   27f9c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27fa0:	.word	0x00020a38
   27fa4:	movw	r0, #349	; 0x15d
   27fa8:	sub	sp, fp, #28
   27fac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27fb0:	.word	0x000209d4
   27fb4:	movw	r0, #326	; 0x146
   27fb8:	sub	sp, fp, #28
   27fbc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27fc0:	mov	r0, #360	; 0x168
   27fc4:	sub	sp, fp, #28
   27fc8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27fcc:	ldr	r0, [pc, #904]	; 2835c <sfbpf_lex+0x19e0>
   27fd0:	mov	r1, #10
   27fd4:	ldr	r0, [pc, r0]
   27fd8:	b	28224 <sfbpf_lex+0x18a8>
   27fdc:	mov	r0, #292	; 0x124
   27fe0:	sub	sp, fp, #28
   27fe4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27fe8:	mov	r0, #324	; 0x144
   27fec:	sub	sp, fp, #28
   27ff0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27ff4:	movw	r0, #322	; 0x142
   27ff8:	sub	sp, fp, #28
   27ffc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28000:	movw	r0, #301	; 0x12d
   28004:	sub	sp, fp, #28
   28008:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2800c:	movw	r0, #359	; 0x167
   28010:	sub	sp, fp, #28
   28014:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28018:	ldr	r0, [pc, #880]	; 28390 <sfbpf_lex+0x1a14>
   2801c:	mov	r1, #32
   28020:	ldr	r0, [pc, r0]
   28024:	b	28224 <sfbpf_lex+0x18a8>
   28028:	movw	r0, #310	; 0x136
   2802c:	sub	sp, fp, #28
   28030:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28034:	ldr	r0, [pc, #804]	; 28360 <sfbpf_lex+0x19e4>
   28038:	mov	r1, #11
   2803c:	ldr	r0, [pc, r0]
   28040:	b	28224 <sfbpf_lex+0x18a8>
   28044:	mov	r0, #276	; 0x114
   28048:	sub	sp, fp, #28
   2804c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28050:	movw	r0, #355	; 0x163
   28054:	sub	sp, fp, #28
   28058:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2805c:	movw	r0, #271	; 0x10f
   28060:	sub	sp, fp, #28
   28064:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28068:	movw	r0, #294	; 0x126
   2806c:	sub	sp, fp, #28
   28070:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28074:	.word	0x00005074
   28078:	.word	0x00005170
   2807c:	movw	r0, #361	; 0x169
   28080:	sub	sp, fp, #28
   28084:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28088:	movw	r0, #331	; 0x14b
   2808c:	sub	sp, fp, #28
   28090:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28094:	mov	r0, #268	; 0x10c
   28098:	sub	sp, fp, #28
   2809c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   280a0:	mov	r0, #272	; 0x110
   280a4:	sub	sp, fp, #28
   280a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   280ac:	movw	r0, #293	; 0x125
   280b0:	sub	sp, fp, #28
   280b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   280b8:	ldr	r0, [pc, #704]	; 28380 <sfbpf_lex+0x1a04>
   280bc:	mov	r1, #2
   280c0:	ldr	r0, [pc, r0]
   280c4:	b	28224 <sfbpf_lex+0x18a8>
   280c8:	movw	r0, #334	; 0x14e
   280cc:	sub	sp, fp, #28
   280d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   280d4:	movw	r0, #278	; 0x116
   280d8:	sub	sp, fp, #28
   280dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   280e0:	.word	0x000208b0
   280e4:	ldr	r0, [pc, #680]	; 28394 <sfbpf_lex+0x1a18>
   280e8:	ldr	r0, [pc, r0]
   280ec:	bl	2174 <sf_sdup>
   280f0:	ldr	r1, [pc, #672]	; 28398 <sfbpf_lex+0x1a1c>
   280f4:	ldr	r1, [pc, r1]
   280f8:	str	r0, [r1]
   280fc:	movw	r0, #311	; 0x137
   28100:	sub	sp, fp, #28
   28104:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28108:	movw	r0, #265	; 0x109
   2810c:	sub	sp, fp, #28
   28110:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28114:	movw	r0, #279	; 0x117
   28118:	sub	sp, fp, #28
   2811c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28120:	movw	r0, #273	; 0x111
   28124:	sub	sp, fp, #28
   28128:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2812c:	mov	r0, #260	; 0x104
   28130:	sub	sp, fp, #28
   28134:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28138:	movw	r0, #262	; 0x106
   2813c:	sub	sp, fp, #28
   28140:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28144:	ldr	r0, [pc, #460]	; 28318 <sfbpf_lex+0x199c>
   28148:	ldr	r0, [pc, r0]
   2814c:	add	r0, r0, #1
   28150:	bl	209dc <pcap_ether_aton>
   28154:	ldr	r1, [pc, #448]	; 2831c <sfbpf_lex+0x19a0>
   28158:	ldr	r1, [pc, r1]
   2815c:	str	r0, [r1]
   28160:	movw	r0, #315	; 0x13b
   28164:	sub	sp, fp, #28
   28168:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2816c:	mov	r0, #308	; 0x134
   28170:	sub	sp, fp, #28
   28174:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28178:	mov	r0, #316	; 0x13c
   2817c:	sub	sp, fp, #28
   28180:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28184:	movw	r0, #362	; 0x16a
   28188:	sub	sp, fp, #28
   2818c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28190:	.word	0x000207f4
   28194:	.word	0x000207e4
   28198:	mov	r4, #10
   2819c:	cmp	r5, #0
   281a0:	bne	281c0 <sfbpf_lex+0x1844>
   281a4:	b	28218 <sfbpf_lex+0x189c>
   281a8:	.word	0x000207d8
   281ac:	.word	0x00020770
   281b0:	mov	r4, #8
   281b4:	mov	r0, r1
   281b8:	cmp	r5, #0
   281bc:	beq	28218 <sfbpf_lex+0x189c>
   281c0:	add	r6, r0, #1
   281c4:	bl	eec <__ctype_b_loc@plt>
   281c8:	ldr	r0, [r0]
   281cc:	mov	r1, #0
   281d0:	uxtb	r2, r5
   281d4:	mul	r1, r1, r4
   281d8:	add	r3, r0, r2, lsl #1
   281dc:	ldrh	r7, [r3]
   281e0:	mvn	r3, #47	; 0x2f
   281e4:	tst	r7, #2048	; 0x800
   281e8:	bne	281f8 <sfbpf_lex+0x187c>
   281ec:	tst	r7, #512	; 0x200
   281f0:	mvn	r3, #86	; 0x56
   281f4:	mvneq	r3, #54	; 0x36
   281f8:	ldrb	r5, [r6], #1
   281fc:	add	r2, r3, r2
   28200:	add	r1, r2, r1
   28204:	cmp	r5, #0
   28208:	bne	281d0 <sfbpf_lex+0x1854>
   2820c:	b	2821c <sfbpf_lex+0x18a0>
   28210:	.word	0x00020770
   28214:	.word	0x00020764
   28218:	mov	r1, #0
   2821c:	ldr	r0, [pc, #264]	; 2832c <sfbpf_lex+0x19b0>
   28220:	ldr	r0, [pc, r0]
   28224:	str	r1, [r0]
   28228:	movw	r0, #291	; 0x123
   2822c:	sub	sp, fp, #28
   28230:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   28234:	ldr	r1, [pc, #264]	; 28344 <sfbpf_lex+0x19c8>
   28238:	ldr	r1, [pc, r1]
   2823c:	ldr	r0, [pc, #260]	; 28348 <sfbpf_lex+0x19cc>
   28240:	add	r0, pc, r0
   28244:	bl	2124 <sf_bpf_error>
   28248:	ldr	r0, [pc, #564]	; 28484 <sfbpf_lex+0x1b08>
   2824c:	add	r0, pc, r0
   28250:	bl	28918 <yy_fatal_error>
   28254:	.word	0x00020730
   28258:	.word	0x00020724
   2825c:	ldr	r0, [pc, #392]	; 283ec <sfbpf_lex+0x1a70>
   28260:	add	r0, pc, r0
   28264:	bl	28918 <yy_fatal_error>
   28268:	ldr	r0, [pc, #536]	; 28488 <sfbpf_lex+0x1b0c>
   2826c:	add	r0, pc, r0
   28270:	bl	28918 <yy_fatal_error>
   28274:	.word	0x000206fc
   28278:	ldr	r0, [pc, #296]	; 283a8 <sfbpf_lex+0x1a2c>
   2827c:	ldr	r0, [pc, r0]
   28280:	ldrb	r1, [r0]
   28284:	ldr	r0, [pc, #288]	; 283ac <sfbpf_lex+0x1a30>
   28288:	add	r0, pc, r0
   2828c:	bl	2124 <sf_bpf_error>
   28290:	ldr	r0, [pc, #480]	; 28478 <sfbpf_lex+0x1afc>
   28294:	add	r0, pc, r0
   28298:	bl	28918 <yy_fatal_error>
   2829c:	ldr	r1, [pc, #252]	; 283a0 <sfbpf_lex+0x1a24>
   282a0:	ldr	r1, [pc, r1]
   282a4:	ldr	r0, [pc, #248]	; 283a4 <sfbpf_lex+0x1a28>
   282a8:	add	r0, pc, r0
   282ac:	bl	2124 <sf_bpf_error>
   282b0:	.word	0x000206bc
   282b4:	mov	r0, #0
   282b8:	str	r0, [r4, #4]
   282bc:	ldr	r0, [pc, #292]	; 283e8 <sfbpf_lex+0x1a6c>
   282c0:	add	r0, pc, r0
   282c4:	bl	28918 <yy_fatal_error>
   282c8:	.word	0x000206cc
   282cc:	.word	0x000206a4
   282d0:	ldr	r1, [pc, #420]	; 2847c <sfbpf_lex+0x1b00>
   282d4:	ldr	r1, [pc, r1]
   282d8:	ldr	r0, [pc, #416]	; 28480 <sfbpf_lex+0x1b04>
   282dc:	add	r0, pc, r0
   282e0:	bl	2124 <sf_bpf_error>
   282e4:	.word	0x00020680
   282e8:	.word	0x00020654
   282ec:	.word	0x00020660
   282f0:	.word	0x00020654
   282f4:	.word	0x0002062c
   282f8:	.word	0x000205fc
   282fc:	.word	0x000205fc
   28300:	.word	0x0002060c
   28304:	.word	0x000205e4
   28308:	.word	0x000205d8
   2830c:	.word	0x00004d28
   28310:	.word	0x00004e24
   28314:	.word	0x0001ff18
   28318:	.word	0x0001f898
   2831c:	.word	0x0001ef68
   28320:	.word	0x0001fd44
   28324:	.word	0x0001f418
   28328:	.word	0x0001fb34
   2832c:	.word	0x0001eea0
   28330:	.word	0x0001fc70
   28334:	.word	0x0001f344
   28338:	.word	0x0001fe88
   2833c:	.word	0x0001fe6c
   28340:	.word	0x0001f540
   28344:	.word	0x0001f7a8
   28348:	.word	0x0000dd48
   2834c:	.word	0x0001f6e8
   28350:	.word	0x0001f398
   28354:	.word	0x0001f134
   28358:	.word	0x0001f194
   2835c:	.word	0x0001f0ec
   28360:	.word	0x0001f084
   28364:	.word	0x0001f468
   28368:	.word	0x0001f4c8
   2836c:	.word	0x0001f444
   28370:	.word	0x0001f524
   28374:	.word	0x0001f31c
   28378:	.word	0x0001f720
   2837c:	.word	0x0001f730
   28380:	.word	0x0001f000
   28384:	.word	0x0001f77c
   28388:	.word	0x0001f76c
   2838c:	.word	0x0001f750
   28390:	.word	0x0001f0a0
   28394:	.word	0x0001f8f8
   28398:	.word	0x0001efcc
   2839c:	.word	0x0001ff54
   283a0:	.word	0x0001f740
   283a4:	.word	0x0000dcfa
   283a8:	.word	0x0001f764
   283ac:	.word	0x0000dd2c
   283b0:	.word	0x00020434
   283b4:	.word	0x0002040c
   283b8:	.word	0x000203fc
   283bc:	.word	0x0000af2a
   283c0:	.word	0x00004af0
   283c4:	.word	0x00004bec
   283c8:	.word	0x0000af1c
   283cc:	.word	0x00020350
   283d0:	.word	0x00020350
   283d4:	.word	0x00020340
   283d8:	.word	0x0000ae8c
   283dc:	.word	0x00004b34
   283e0:	.word	0x000202c8
   283e4:	.word	0x00020058
   283e8:	.word	0x0000de0e
   283ec:	.word	0x0000de9a
   283f0:	.word	0x0002044c
   283f4:	.word	0x0002055c
   283f8:	.word	0x00004dc0
   283fc:	.word	0x00004cbc
   28400:	.word	0x00020558
   28404:	.word	0x00020544
   28408:	.word	0x00020544
   2840c:	.word	0x00020500
   28410:	.word	0x000204f4
   28414:	.word	0x000204e0
   28418:	.word	0x00004c24
   2841c:	.word	0x00004d20
   28420:	.word	0x000204bc
   28424:	.word	0x000204cc
   28428:	.word	0x0002029c
   2842c:	.word	0x00020140
   28430:	.word	0x00020114
   28434:	.word	0x00020104
   28438:	.word	0x0000ac32
   2843c:	.word	0x000047f8
   28440:	.word	0x000048f4
   28444:	.word	0x0000ac24
   28448:	.word	0x00020288
   2844c:	.word	0x0002027c
   28450:	.word	0x00020284
   28454:	.word	0x00020260
   28458:	.word	0x0002022c
   2845c:	.word	0x0002021c
   28460:	.word	0x0000ad4a
   28464:	.word	0x00004910
   28468:	.word	0x00004a0c
   2846c:	.word	0x0000ad3c
   28470:	.word	0x00020174
   28474:	.word	0x00020160
   28478:	.word	0x0000dd32
   2847c:	.word	0x0001f70c
   28480:	.word	0x0000dc96
   28484:	.word	0x0000de4a
   28488:	.word	0x0000deab

0002848c <sfbpf_ensure_buffer_stack>:
   2848c:	push	{r4, sl, fp, lr}
   28490:	add	fp, sp, #8
   28494:	ldr	r0, [pc, #184]	; 28554 <sfbpf_ensure_buffer_stack+0xc8>
   28498:	ldr	r0, [pc, r0]
   2849c:	cmp	r0, #0
   284a0:	beq	28508 <sfbpf_ensure_buffer_stack+0x7c>
   284a4:	ldr	r1, [pc, #184]	; 28564 <sfbpf_ensure_buffer_stack+0xd8>
   284a8:	ldr	r1, [pc, r1]
   284ac:	ldr	r3, [pc, #180]	; 28568 <sfbpf_ensure_buffer_stack+0xdc>
   284b0:	ldr	r3, [pc, r3]
   284b4:	sub	r2, r1, #1
   284b8:	cmp	r3, r2
   284bc:	popcc	{r4, sl, fp, pc}
   284c0:	add	r4, r1, #8
   284c4:	lsl	r1, r4, #2
   284c8:	bl	ea4 <realloc@plt>
   284cc:	ldr	r1, [pc, #152]	; 2856c <sfbpf_ensure_buffer_stack+0xe0>
   284d0:	cmp	r0, #0
   284d4:	add	r1, pc, r1
   284d8:	str	r0, [r1]
   284dc:	beq	28548 <sfbpf_ensure_buffer_stack+0xbc>
   284e0:	ldr	r1, [pc, #136]	; 28570 <sfbpf_ensure_buffer_stack+0xe4>
   284e4:	vmov.i32	q8, #0	; 0x00000000
   284e8:	ldr	r1, [pc, r1]
   284ec:	add	r0, r0, r1, lsl #2
   284f0:	vst1.32	{d16-d17}, [r0]!
   284f4:	vst1.32	{d16-d17}, [r0]
   284f8:	ldr	r0, [pc, #116]	; 28574 <sfbpf_ensure_buffer_stack+0xe8>
   284fc:	add	r0, pc, r0
   28500:	str	r4, [r0]
   28504:	pop	{r4, sl, fp, pc}
   28508:	mov	r0, #4
   2850c:	bl	ed4 <malloc@plt>
   28510:	ldr	r1, [pc, #64]	; 28558 <sfbpf_ensure_buffer_stack+0xcc>
   28514:	cmp	r0, #0
   28518:	add	r1, pc, r1
   2851c:	str	r0, [r1]
   28520:	movne	r1, #0
   28524:	strne	r1, [r0]
   28528:	ldrne	r0, [pc, #44]	; 2855c <sfbpf_ensure_buffer_stack+0xd0>
   2852c:	addne	r0, pc, r0
   28530:	strne	r1, [r0]
   28534:	movne	r1, #1
   28538:	ldrne	r0, [pc, #32]	; 28560 <sfbpf_ensure_buffer_stack+0xd4>
   2853c:	addne	r0, pc, r0
   28540:	strne	r1, [r0]
   28544:	popne	{r4, sl, fp, pc}
   28548:	ldr	r0, [pc, #40]	; 28578 <sfbpf_ensure_buffer_stack+0xec>
   2854c:	add	r0, pc, r0
   28550:	bl	28918 <yy_fatal_error>
   28554:	.word	0x0001f4e8
   28558:	.word	0x0001f468
   2855c:	.word	0x0001f458
   28560:	.word	0x0001f464
   28564:	.word	0x0001f4f8
   28568:	.word	0x0001f4d4
   2856c:	.word	0x0001f4ac
   28570:	.word	0x0001f4b8
   28574:	.word	0x0001f4a4
   28578:	.word	0x0000dbf9

0002857c <sfbpf__create_buffer>:
   2857c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   28580:	add	fp, sp, #24
   28584:	mov	r5, r0
   28588:	mov	r0, #48	; 0x30
   2858c:	mov	r6, r1
   28590:	bl	ed4 <malloc@plt>
   28594:	cmp	r0, #0
   28598:	beq	286d8 <sfbpf__create_buffer+0x15c>
   2859c:	mov	r4, r0
   285a0:	str	r6, [r0, #12]
   285a4:	add	r0, r6, #2
   285a8:	bl	ed4 <malloc@plt>
   285ac:	cmp	r0, #0
   285b0:	str	r0, [r4, #4]
   285b4:	beq	286d8 <sfbpf__create_buffer+0x15c>
   285b8:	mov	r6, #1
   285bc:	mov	r7, r0
   285c0:	str	r6, [r4, #20]
   285c4:	bl	f28 <__errno_location@plt>
   285c8:	mov	r1, #0
   285cc:	ldr	r8, [r0]
   285d0:	mov	r9, r0
   285d4:	str	r1, [r4, #16]
   285d8:	str	r6, [r4, #28]
   285dc:	str	r7, [r4, #8]
   285e0:	strh	r1, [r7]
   285e4:	str	r1, [r4, #44]	; 0x2c
   285e8:	ldr	r0, [pc, #244]	; 286e4 <sfbpf__create_buffer+0x168>
   285ec:	ldr	r0, [pc, r0]
   285f0:	cmp	r0, #0
   285f4:	ldrne	r1, [pc, #236]	; 286e8 <sfbpf__create_buffer+0x16c>
   285f8:	ldrne	r1, [pc, r1]
   285fc:	ldrne	r1, [r0, r1, lsl #2]
   28600:	cmp	r1, r4
   28604:	bne	28664 <sfbpf__create_buffer+0xe8>
   28608:	ldr	r1, [pc, #220]	; 286ec <sfbpf__create_buffer+0x170>
   2860c:	ldr	r1, [pc, r1]
   28610:	ldr	r2, [r0, r1, lsl #2]
   28614:	ldr	r3, [r2, #16]
   28618:	ldr	r7, [pc, #208]	; 286f0 <sfbpf__create_buffer+0x174>
   2861c:	add	r7, pc, r7
   28620:	str	r3, [r7]
   28624:	ldr	r2, [r2, #8]
   28628:	ldr	r3, [pc, #196]	; 286f4 <sfbpf__create_buffer+0x178>
   2862c:	add	r3, pc, r3
   28630:	str	r2, [r3]
   28634:	ldr	r3, [pc, #188]	; 286f8 <sfbpf__create_buffer+0x17c>
   28638:	add	r3, pc, r3
   2863c:	str	r2, [r3]
   28640:	ldr	r1, [r0, r1, lsl #2]
   28644:	ldr	r1, [r1]
   28648:	ldr	r3, [pc, #172]	; 286fc <sfbpf__create_buffer+0x180>
   2864c:	add	r3, pc, r3
   28650:	str	r1, [r3]
   28654:	ldrb	r1, [r2]
   28658:	ldr	r2, [pc, #160]	; 28700 <sfbpf__create_buffer+0x184>
   2865c:	add	r2, pc, r2
   28660:	strb	r1, [r2]
   28664:	mov	r1, #1
   28668:	cmp	r0, #0
   2866c:	str	r1, [r4, #40]	; 0x28
   28670:	str	r5, [r4]
   28674:	beq	28688 <sfbpf__create_buffer+0x10c>
   28678:	ldr	r1, [pc, #132]	; 28704 <sfbpf__create_buffer+0x188>
   2867c:	ldr	r1, [pc, r1]
   28680:	ldr	r0, [r0, r1, lsl #2]
   28684:	b	2868c <sfbpf__create_buffer+0x110>
   28688:	mov	r0, #0
   2868c:	cmp	r0, r4
   28690:	movne	r1, #1
   28694:	movne	r0, #0
   28698:	strne	r1, [r4, #32]
   2869c:	strne	r0, [r4, #36]	; 0x24
   286a0:	cmp	r5, #0
   286a4:	beq	286c4 <sfbpf__create_buffer+0x148>
   286a8:	mov	r0, r5
   286ac:	bl	f64 <fileno@plt>
   286b0:	bl	fb8 <isatty@plt>
   286b4:	mov	r1, #0
   286b8:	cmp	r0, #0
   286bc:	movwgt	r1, #1
   286c0:	b	286c8 <sfbpf__create_buffer+0x14c>
   286c4:	mov	r1, #0
   286c8:	mov	r0, r4
   286cc:	str	r1, [r4, #24]
   286d0:	str	r8, [r9]
   286d4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   286d8:	ldr	r0, [pc, #40]	; 28708 <sfbpf__create_buffer+0x18c>
   286dc:	add	r0, pc, r0
   286e0:	bl	28918 <yy_fatal_error>
   286e4:	.word	0x0001f394
   286e8:	.word	0x0001f38c
   286ec:	.word	0x0001f378
   286f0:	.word	0x0001f37c
   286f4:	.word	0x0001f3b4
   286f8:	.word	0x0001f350
   286fc:	.word	0x0001f320
   28700:	.word	0x0001f330
   28704:	.word	0x0001f308
   28708:	.word	0x0000d91d

0002870c <sfbpf_wrap>:
   2870c:	mov	r0, #1
   28710:	bx	lr

00028714 <sfbpf_restart>:
   28714:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   28718:	add	fp, sp, #24
   2871c:	ldr	r7, [pc, #432]	; 288d4 <sfbpf_restart+0x1c0>
   28720:	mov	r5, r0
   28724:	ldr	r7, [pc, r7]
   28728:	cmp	r7, #0
   2872c:	beq	28744 <sfbpf_restart+0x30>
   28730:	ldr	r6, [pc, #416]	; 288d8 <sfbpf_restart+0x1c4>
   28734:	ldr	r6, [pc, r6]
   28738:	ldr	r4, [r7, r6, lsl #2]
   2873c:	cmp	r4, #0
   28740:	bne	28778 <sfbpf_restart+0x64>
   28744:	bl	2848c <sfbpf_ensure_buffer_stack>
   28748:	ldr	r0, [pc, #396]	; 288dc <sfbpf_restart+0x1c8>
   2874c:	mov	r1, #16384	; 0x4000
   28750:	ldr	r0, [pc, r0]
   28754:	bl	2857c <sfbpf__create_buffer>
   28758:	ldr	r7, [pc, #384]	; 288e0 <sfbpf_restart+0x1cc>
   2875c:	mov	r4, r0
   28760:	ldr	r7, [pc, r7]
   28764:	ldr	r6, [pc, #376]	; 288e4 <sfbpf_restart+0x1d0>
   28768:	ldr	r6, [pc, r6]
   2876c:	cmp	r7, #0
   28770:	str	r0, [r7, r6, lsl #2]
   28774:	beq	288d0 <sfbpf_restart+0x1bc>
   28778:	bl	f28 <__errno_location@plt>
   2877c:	ldr	r9, [r0]
   28780:	mov	r8, r0
   28784:	cmp	r4, #0
   28788:	beq	28818 <sfbpf_restart+0x104>
   2878c:	mov	r0, #0
   28790:	str	r0, [r4, #16]
   28794:	ldr	r1, [r4, #4]
   28798:	strb	r0, [r1]
   2879c:	ldr	r1, [r4, #4]
   287a0:	strb	r0, [r1, #1]
   287a4:	mov	r1, #1
   287a8:	str	r1, [r4, #28]
   287ac:	str	r0, [r4, #44]	; 0x2c
   287b0:	ldr	r0, [r4, #4]
   287b4:	str	r0, [r4, #8]
   287b8:	ldr	r0, [r7, r6, lsl #2]
   287bc:	cmp	r0, r4
   287c0:	bne	28818 <sfbpf_restart+0x104>
   287c4:	ldr	r0, [r7, r6, lsl #2]
   287c8:	ldr	r1, [r0, #16]
   287cc:	ldr	r2, [pc, #276]	; 288e8 <sfbpf_restart+0x1d4>
   287d0:	add	r2, pc, r2
   287d4:	str	r1, [r2]
   287d8:	ldr	r0, [r0, #8]
   287dc:	ldr	r1, [pc, #264]	; 288ec <sfbpf_restart+0x1d8>
   287e0:	add	r1, pc, r1
   287e4:	str	r0, [r1]
   287e8:	ldr	r1, [pc, #256]	; 288f0 <sfbpf_restart+0x1dc>
   287ec:	add	r1, pc, r1
   287f0:	str	r0, [r1]
   287f4:	ldr	r1, [r7, r6, lsl #2]
   287f8:	ldr	r1, [r1]
   287fc:	ldr	r2, [pc, #240]	; 288f4 <sfbpf_restart+0x1e0>
   28800:	add	r2, pc, r2
   28804:	str	r1, [r2]
   28808:	ldrb	r0, [r0]
   2880c:	ldr	r1, [pc, #228]	; 288f8 <sfbpf_restart+0x1e4>
   28810:	add	r1, pc, r1
   28814:	strb	r0, [r1]
   28818:	mov	r0, #1
   2881c:	str	r0, [r4, #40]	; 0x28
   28820:	str	r5, [r4]
   28824:	ldr	r1, [r7, r6, lsl #2]
   28828:	cmp	r1, r4
   2882c:	movne	r1, #0
   28830:	strne	r0, [r4, #32]
   28834:	strne	r1, [r4, #36]	; 0x24
   28838:	cmp	r5, #0
   2883c:	beq	2886c <sfbpf_restart+0x158>
   28840:	mov	r0, r5
   28844:	bl	f64 <fileno@plt>
   28848:	bl	fb8 <isatty@plt>
   2884c:	ldr	r6, [pc, #168]	; 288fc <sfbpf_restart+0x1e8>
   28850:	mov	r1, #0
   28854:	cmp	r0, #0
   28858:	movwgt	r1, #1
   2885c:	ldr	r6, [pc, r6]
   28860:	ldr	r7, [pc, #152]	; 28900 <sfbpf_restart+0x1ec>
   28864:	ldr	r7, [pc, r7]
   28868:	b	28870 <sfbpf_restart+0x15c>
   2886c:	mov	r1, #0
   28870:	str	r1, [r4, #24]
   28874:	str	r9, [r8]
   28878:	ldr	r0, [r7, r6, lsl #2]
   2887c:	ldr	r1, [r0, #16]
   28880:	ldr	r2, [pc, #124]	; 28904 <sfbpf_restart+0x1f0>
   28884:	add	r2, pc, r2
   28888:	str	r1, [r2]
   2888c:	ldr	r0, [r0, #8]
   28890:	ldr	r1, [pc, #112]	; 28908 <sfbpf_restart+0x1f4>
   28894:	add	r1, pc, r1
   28898:	str	r0, [r1]
   2889c:	ldr	r1, [pc, #104]	; 2890c <sfbpf_restart+0x1f8>
   288a0:	add	r1, pc, r1
   288a4:	str	r0, [r1]
   288a8:	ldr	r1, [r7, r6, lsl #2]
   288ac:	ldr	r1, [r1]
   288b0:	ldr	r2, [pc, #88]	; 28910 <sfbpf_restart+0x1fc>
   288b4:	add	r2, pc, r2
   288b8:	str	r1, [r2]
   288bc:	ldrb	r0, [r0]
   288c0:	ldr	r1, [pc, #76]	; 28914 <sfbpf_restart+0x200>
   288c4:	add	r1, pc, r1
   288c8:	strb	r0, [r1]
   288cc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   288d0:	udf	#65006	; 0xfdee
   288d4:	.word	0x0001f25c
   288d8:	.word	0x0001f250
   288dc:	.word	0x0001f21c
   288e0:	.word	0x0001f220
   288e4:	.word	0x0001f21c
   288e8:	.word	0x0001f1c8
   288ec:	.word	0x0001f200
   288f0:	.word	0x0001f19c
   288f4:	.word	0x0001f16c
   288f8:	.word	0x0001f17c
   288fc:	.word	0x0001f128
   28900:	.word	0x0001f11c
   28904:	.word	0x0001f114
   28908:	.word	0x0001f14c
   2890c:	.word	0x0001f0e8
   28910:	.word	0x0001f0b8
   28914:	.word	0x0001f0c8

00028918 <yy_fatal_error>:
   28918:	push	{fp, lr}
   2891c:	mov	fp, sp
   28920:	mov	r2, r0
   28924:	ldr	r0, [pc, #24]	; 28944 <yy_fatal_error+0x2c>
   28928:	ldr	r0, [pc, r0]
   2892c:	ldr	r0, [r0]
   28930:	ldr	r1, [pc, #16]	; 28948 <yy_fatal_error+0x30>
   28934:	add	r1, pc, r1
   28938:	bl	f1c <fprintf@plt>
   2893c:	mov	r0, #2
   28940:	bl	ef8 <exit@plt>
   28944:	.word	0x0001e784
   28948:	.word	0x000009e5

0002894c <sfbpf__switch_to_buffer>:
   2894c:	push	{r4, sl, fp, lr}
   28950:	add	fp, sp, #8
   28954:	mov	r4, r0
   28958:	bl	2848c <sfbpf_ensure_buffer_stack>
   2895c:	ldr	r0, [pc, #208]	; 28a34 <sfbpf__switch_to_buffer+0xe8>
   28960:	ldr	r0, [pc, r0]
   28964:	cmp	r0, #0
   28968:	beq	2897c <sfbpf__switch_to_buffer+0x30>
   2896c:	ldr	r1, [pc, #196]	; 28a38 <sfbpf__switch_to_buffer+0xec>
   28970:	ldr	r1, [pc, r1]
   28974:	ldr	r1, [r0, r1, lsl #2]
   28978:	b	28980 <sfbpf__switch_to_buffer+0x34>
   2897c:	mov	r1, #0
   28980:	cmp	r1, r4
   28984:	popeq	{r4, sl, fp, pc}
   28988:	ldr	r1, [pc, #172]	; 28a3c <sfbpf__switch_to_buffer+0xf0>
   2898c:	cmp	r0, #0
   28990:	ldr	r1, [pc, r1]
   28994:	beq	289d8 <sfbpf__switch_to_buffer+0x8c>
   28998:	ldr	r1, [r0, r1, lsl #2]!
   2899c:	cmp	r1, #0
   289a0:	beq	289dc <sfbpf__switch_to_buffer+0x90>
   289a4:	ldr	r1, [pc, #148]	; 28a40 <sfbpf__switch_to_buffer+0xf4>
   289a8:	add	r1, pc, r1
   289ac:	ldrb	r1, [r1]
   289b0:	ldr	r2, [pc, #140]	; 28a44 <sfbpf__switch_to_buffer+0xf8>
   289b4:	ldr	r2, [pc, r2]
   289b8:	strb	r1, [r2]
   289bc:	ldr	r1, [r0]
   289c0:	str	r2, [r1, #8]
   289c4:	ldr	r1, [r0]
   289c8:	ldr	r2, [pc, #120]	; 28a48 <sfbpf__switch_to_buffer+0xfc>
   289cc:	ldr	r2, [pc, r2]
   289d0:	str	r2, [r1, #16]
   289d4:	b	289dc <sfbpf__switch_to_buffer+0x90>
   289d8:	lsl	r0, r1, #2
   289dc:	str	r4, [r0]
   289e0:	ldr	r1, [r4, #16]
   289e4:	ldr	r2, [pc, #96]	; 28a4c <sfbpf__switch_to_buffer+0x100>
   289e8:	add	r2, pc, r2
   289ec:	str	r1, [r2]
   289f0:	ldr	r1, [r4, #8]
   289f4:	ldr	r2, [pc, #84]	; 28a50 <sfbpf__switch_to_buffer+0x104>
   289f8:	add	r2, pc, r2
   289fc:	str	r1, [r2]
   28a00:	ldr	r2, [pc, #76]	; 28a54 <sfbpf__switch_to_buffer+0x108>
   28a04:	add	r2, pc, r2
   28a08:	str	r1, [r2]
   28a0c:	ldr	r0, [r0]
   28a10:	ldr	r0, [r0]
   28a14:	ldr	r2, [pc, #60]	; 28a58 <sfbpf__switch_to_buffer+0x10c>
   28a18:	add	r2, pc, r2
   28a1c:	str	r0, [r2]
   28a20:	ldrb	r0, [r1]
   28a24:	ldr	r1, [pc, #48]	; 28a5c <sfbpf__switch_to_buffer+0x110>
   28a28:	add	r1, pc, r1
   28a2c:	strb	r0, [r1]
   28a30:	pop	{r4, sl, fp, pc}
   28a34:	.word	0x0001f020
   28a38:	.word	0x0001f014
   28a3c:	.word	0x0001eff4
   28a40:	.word	0x0001efe4
   28a44:	.word	0x0001efd4
   28a48:	.word	0x0001efcc
   28a4c:	.word	0x0001efb0
   28a50:	.word	0x0001efe8
   28a54:	.word	0x0001ef84
   28a58:	.word	0x0001ef54
   28a5c:	.word	0x0001ef64

00028a60 <sfbpf_alloc>:
   28a60:	b	ed4 <malloc@plt>

00028a64 <sfbpf__delete_buffer>:
   28a64:	cmp	r0, #0
   28a68:	bxeq	lr
   28a6c:	push	{r4, sl, fp, lr}
   28a70:	add	fp, sp, #8
   28a74:	mov	r4, r0
   28a78:	ldr	r0, [pc, #92]	; 28adc <sfbpf__delete_buffer+0x78>
   28a7c:	ldr	r0, [pc, r0]
   28a80:	cmp	r0, #0
   28a84:	beq	28acc <sfbpf__delete_buffer+0x68>
   28a88:	ldr	r1, [pc, #80]	; 28ae0 <sfbpf__delete_buffer+0x7c>
   28a8c:	ldr	r1, [pc, r1]
   28a90:	ldr	r1, [r0, r1, lsl #2]
   28a94:	cmp	r1, r4
   28a98:	bne	28aac <sfbpf__delete_buffer+0x48>
   28a9c:	ldr	r1, [pc, #64]	; 28ae4 <sfbpf__delete_buffer+0x80>
   28aa0:	mov	r2, #0
   28aa4:	ldr	r1, [pc, r1]
   28aa8:	str	r2, [r0, r1, lsl #2]
   28aac:	ldr	r0, [r4, #20]
   28ab0:	cmp	r0, #0
   28ab4:	beq	28ac0 <sfbpf__delete_buffer+0x5c>
   28ab8:	ldr	r0, [r4, #4]
   28abc:	bl	e5c <free@plt>
   28ac0:	mov	r0, r4
   28ac4:	pop	{r4, sl, fp, lr}
   28ac8:	b	e5c <free@plt>
   28acc:	mov	r1, #0
   28ad0:	cmp	r1, r4
   28ad4:	bne	28aac <sfbpf__delete_buffer+0x48>
   28ad8:	b	28a9c <sfbpf__delete_buffer+0x38>
   28adc:	.word	0x0001ef04
   28ae0:	.word	0x0001eef8
   28ae4:	.word	0x0001eee0

00028ae8 <sfbpf_free>:
   28ae8:	b	e5c <free@plt>

00028aec <sfbpf__flush_buffer>:
   28aec:	cmp	r0, #0
   28af0:	beq	28b9c <sfbpf__flush_buffer+0xb0>
   28af4:	mov	r2, #0
   28af8:	str	r2, [r0, #16]
   28afc:	ldr	r1, [r0, #4]
   28b00:	strb	r2, [r1]
   28b04:	ldr	r1, [r0, #4]
   28b08:	strb	r2, [r1, #1]
   28b0c:	mov	r1, #1
   28b10:	str	r1, [r0, #28]
   28b14:	str	r2, [r0, #44]	; 0x2c
   28b18:	ldr	r1, [r0, #4]
   28b1c:	str	r1, [r0, #8]
   28b20:	ldr	r1, [pc, #120]	; 28ba0 <sfbpf__flush_buffer+0xb4>
   28b24:	ldr	r1, [pc, r1]
   28b28:	cmp	r1, #0
   28b2c:	ldrne	r2, [pc, #112]	; 28ba4 <sfbpf__flush_buffer+0xb8>
   28b30:	ldrne	r2, [pc, r2]
   28b34:	ldrne	r2, [r1, r2, lsl #2]
   28b38:	cmp	r2, r0
   28b3c:	bxne	lr
   28b40:	ldr	r0, [pc, #96]	; 28ba8 <sfbpf__flush_buffer+0xbc>
   28b44:	ldr	r0, [pc, r0]
   28b48:	ldr	r2, [r1, r0, lsl #2]
   28b4c:	ldr	ip, [r2, #16]
   28b50:	ldr	r3, [pc, #84]	; 28bac <sfbpf__flush_buffer+0xc0>
   28b54:	add	r3, pc, r3
   28b58:	str	ip, [r3]
   28b5c:	ldr	r2, [r2, #8]
   28b60:	ldr	r3, [pc, #72]	; 28bb0 <sfbpf__flush_buffer+0xc4>
   28b64:	add	r3, pc, r3
   28b68:	str	r2, [r3]
   28b6c:	ldr	r3, [pc, #64]	; 28bb4 <sfbpf__flush_buffer+0xc8>
   28b70:	add	r3, pc, r3
   28b74:	str	r2, [r3]
   28b78:	ldr	r0, [r1, r0, lsl #2]
   28b7c:	ldr	r0, [r0]
   28b80:	ldr	r1, [pc, #48]	; 28bb8 <sfbpf__flush_buffer+0xcc>
   28b84:	add	r1, pc, r1
   28b88:	str	r0, [r1]
   28b8c:	ldrb	r0, [r2]
   28b90:	ldr	r1, [pc, #36]	; 28bbc <sfbpf__flush_buffer+0xd0>
   28b94:	add	r1, pc, r1
   28b98:	strb	r0, [r1]
   28b9c:	bx	lr
   28ba0:	.word	0x0001ee5c
   28ba4:	.word	0x0001ee54
   28ba8:	.word	0x0001ee40
   28bac:	.word	0x0001ee44
   28bb0:	.word	0x0001ee7c
   28bb4:	.word	0x0001ee18
   28bb8:	.word	0x0001ede8
   28bbc:	.word	0x0001edf8

00028bc0 <sfbpf_push_buffer_state>:
   28bc0:	cmp	r0, #0
   28bc4:	bxeq	lr
   28bc8:	push	{r4, sl, fp, lr}
   28bcc:	add	fp, sp, #8
   28bd0:	mov	r4, r0
   28bd4:	bl	2848c <sfbpf_ensure_buffer_stack>
   28bd8:	ldr	r0, [pc, #188]	; 28c9c <sfbpf_push_buffer_state+0xdc>
   28bdc:	ldr	r0, [pc, r0]
   28be0:	ldr	r1, [pc, #184]	; 28ca0 <sfbpf_push_buffer_state+0xe0>
   28be4:	ldr	r1, [pc, r1]
   28be8:	cmp	r1, #0
   28bec:	ldrne	r2, [r1, r0, lsl #2]
   28bf0:	cmpne	r2, #0
   28bf4:	beq	28c40 <sfbpf_push_buffer_state+0x80>
   28bf8:	ldr	r2, [pc, #164]	; 28ca4 <sfbpf_push_buffer_state+0xe4>
   28bfc:	add	r2, pc, r2
   28c00:	ldrb	r2, [r2]
   28c04:	ldr	r3, [pc, #156]	; 28ca8 <sfbpf_push_buffer_state+0xe8>
   28c08:	ldr	r3, [pc, r3]
   28c0c:	strb	r2, [r3]
   28c10:	ldr	r2, [r1, r0, lsl #2]
   28c14:	str	r3, [r2, #8]
   28c18:	ldr	r2, [r1, r0, lsl #2]
   28c1c:	ldr	r3, [pc, #136]	; 28cac <sfbpf_push_buffer_state+0xec>
   28c20:	ldr	r3, [pc, r3]
   28c24:	str	r3, [r2, #16]
   28c28:	ldr	r2, [r1, r0, lsl #2]
   28c2c:	cmp	r2, #0
   28c30:	ldrne	r2, [pc, #120]	; 28cb0 <sfbpf_push_buffer_state+0xf0>
   28c34:	addne	r0, r0, #1
   28c38:	addne	r2, pc, r2
   28c3c:	strne	r0, [r2]
   28c40:	str	r4, [r1, r0, lsl #2]
   28c44:	ldr	r2, [r4, #16]
   28c48:	ldr	r3, [pc, #100]	; 28cb4 <sfbpf_push_buffer_state+0xf4>
   28c4c:	add	r3, pc, r3
   28c50:	str	r2, [r3]
   28c54:	ldr	r2, [r4, #8]
   28c58:	ldr	r3, [pc, #88]	; 28cb8 <sfbpf_push_buffer_state+0xf8>
   28c5c:	add	r3, pc, r3
   28c60:	str	r2, [r3]
   28c64:	ldr	r3, [pc, #80]	; 28cbc <sfbpf_push_buffer_state+0xfc>
   28c68:	add	r3, pc, r3
   28c6c:	str	r2, [r3]
   28c70:	ldr	r0, [r1, r0, lsl #2]
   28c74:	ldr	r0, [r0]
   28c78:	ldr	r1, [pc, #64]	; 28cc0 <sfbpf_push_buffer_state+0x100>
   28c7c:	add	r1, pc, r1
   28c80:	str	r0, [r1]
   28c84:	ldrb	r0, [r2]
   28c88:	ldr	r1, [pc, #52]	; 28cc4 <sfbpf_push_buffer_state+0x104>
   28c8c:	add	r1, pc, r1
   28c90:	strb	r0, [r1]
   28c94:	pop	{r4, sl, fp, lr}
   28c98:	bx	lr
   28c9c:	.word	0x0001eda8
   28ca0:	.word	0x0001ed9c
   28ca4:	.word	0x0001ed90
   28ca8:	.word	0x0001ed80
   28cac:	.word	0x0001ed78
   28cb0:	.word	0x0001ed4c
   28cb4:	.word	0x0001ed4c
   28cb8:	.word	0x0001ed84
   28cbc:	.word	0x0001ed20
   28cc0:	.word	0x0001ecf0
   28cc4:	.word	0x0001ed00

00028cc8 <sfbpf_pop_buffer_state>:
   28cc8:	push	{r4, r5, fp, lr}
   28ccc:	add	fp, sp, #8
   28cd0:	ldr	r0, [pc, #208]	; 28da8 <sfbpf_pop_buffer_state+0xe0>
   28cd4:	ldr	r0, [pc, r0]
   28cd8:	cmp	r0, #0
   28cdc:	beq	28d50 <sfbpf_pop_buffer_state+0x88>
   28ce0:	ldr	r1, [pc, #196]	; 28dac <sfbpf_pop_buffer_state+0xe4>
   28ce4:	ldr	r1, [pc, r1]
   28ce8:	ldr	r4, [r0, r1, lsl #2]
   28cec:	cmp	r4, #0
   28cf0:	popeq	{r4, r5, fp, pc}
   28cf4:	mov	r5, #0
   28cf8:	str	r5, [r0, r1, lsl #2]
   28cfc:	ldr	r0, [r4, #20]
   28d00:	cmp	r0, #0
   28d04:	beq	28d10 <sfbpf_pop_buffer_state+0x48>
   28d08:	ldr	r0, [r4, #4]
   28d0c:	bl	e5c <free@plt>
   28d10:	mov	r0, r4
   28d14:	bl	e5c <free@plt>
   28d18:	ldr	r1, [pc, #144]	; 28db0 <sfbpf_pop_buffer_state+0xe8>
   28d1c:	ldr	r1, [pc, r1]
   28d20:	ldr	r0, [pc, #140]	; 28db4 <sfbpf_pop_buffer_state+0xec>
   28d24:	ldr	r0, [pc, r0]
   28d28:	cmp	r1, #0
   28d2c:	str	r5, [r0, r1, lsl #2]
   28d30:	subne	r5, r1, #1
   28d34:	ldrne	r1, [pc, #124]	; 28db8 <sfbpf_pop_buffer_state+0xf0>
   28d38:	addne	r1, pc, r1
   28d3c:	strne	r5, [r1]
   28d40:	cmp	r0, #0
   28d44:	ldrne	r1, [r0, r5, lsl #2]
   28d48:	cmpne	r1, #0
   28d4c:	bne	28d54 <sfbpf_pop_buffer_state+0x8c>
   28d50:	pop	{r4, r5, fp, pc}
   28d54:	ldr	r2, [r1, #16]
   28d58:	ldr	r3, [pc, #92]	; 28dbc <sfbpf_pop_buffer_state+0xf4>
   28d5c:	add	r3, pc, r3
   28d60:	str	r2, [r3]
   28d64:	ldr	r1, [r1, #8]
   28d68:	ldr	r2, [pc, #80]	; 28dc0 <sfbpf_pop_buffer_state+0xf8>
   28d6c:	add	r2, pc, r2
   28d70:	str	r1, [r2]
   28d74:	ldr	r2, [pc, #72]	; 28dc4 <sfbpf_pop_buffer_state+0xfc>
   28d78:	add	r2, pc, r2
   28d7c:	str	r1, [r2]
   28d80:	ldr	r0, [r0, r5, lsl #2]
   28d84:	ldr	r0, [r0]
   28d88:	ldr	r2, [pc, #56]	; 28dc8 <sfbpf_pop_buffer_state+0x100>
   28d8c:	add	r2, pc, r2
   28d90:	str	r0, [r2]
   28d94:	ldrb	r0, [r1]
   28d98:	ldr	r1, [pc, #44]	; 28dcc <sfbpf_pop_buffer_state+0x104>
   28d9c:	add	r1, pc, r1
   28da0:	strb	r0, [r1]
   28da4:	pop	{r4, r5, fp, pc}
   28da8:	.word	0x0001ecac
   28dac:	.word	0x0001eca0
   28db0:	.word	0x0001ec68
   28db4:	.word	0x0001ec5c
   28db8:	.word	0x0001ec4c
   28dbc:	.word	0x0001ec3c
   28dc0:	.word	0x0001ec74
   28dc4:	.word	0x0001ec10
   28dc8:	.word	0x0001ebe0
   28dcc:	.word	0x0001ebf0

00028dd0 <sfbpf__scan_buffer>:
   28dd0:	push	{r4, r5, r6, r7, fp, lr}
   28dd4:	add	fp, sp, #16
   28dd8:	mov	r4, #0
   28ddc:	cmp	r1, #2
   28de0:	bcc	28f18 <sfbpf__scan_buffer+0x148>
   28de4:	sub	r6, r1, #2
   28de8:	mov	r5, r0
   28dec:	ldrb	r0, [r0, r6]
   28df0:	cmp	r0, #0
   28df4:	bne	28f18 <sfbpf__scan_buffer+0x148>
   28df8:	add	r0, r5, r1
   28dfc:	ldrb	r0, [r0, #-1]
   28e00:	cmp	r0, #0
   28e04:	bne	28f18 <sfbpf__scan_buffer+0x148>
   28e08:	mov	r0, #48	; 0x30
   28e0c:	bl	ed4 <malloc@plt>
   28e10:	cmp	r0, #0
   28e14:	beq	28f20 <sfbpf__scan_buffer+0x150>
   28e18:	mov	r4, r0
   28e1c:	mov	r7, #0
   28e20:	mov	r0, #1
   28e24:	str	r7, [r4]
   28e28:	str	r5, [r4, #4]
   28e2c:	str	r5, [r4, #8]
   28e30:	str	r6, [r4, #12]
   28e34:	str	r6, [r4, #16]
   28e38:	str	r7, [r4, #20]
   28e3c:	str	r7, [r4, #24]
   28e40:	str	r0, [r4, #28]
   28e44:	str	r7, [r4, #40]	; 0x28
   28e48:	str	r7, [r4, #44]	; 0x2c
   28e4c:	bl	2848c <sfbpf_ensure_buffer_stack>
   28e50:	ldr	r0, [pc, #212]	; 28f2c <sfbpf__scan_buffer+0x15c>
   28e54:	ldr	r0, [pc, r0]
   28e58:	cmp	r0, #0
   28e5c:	ldrne	r1, [pc, #204]	; 28f30 <sfbpf__scan_buffer+0x160>
   28e60:	ldrne	r1, [pc, r1]
   28e64:	ldrne	r7, [r0, r1, lsl #2]
   28e68:	cmp	r7, r4
   28e6c:	beq	28f18 <sfbpf__scan_buffer+0x148>
   28e70:	ldr	r1, [pc, #188]	; 28f34 <sfbpf__scan_buffer+0x164>
   28e74:	cmp	r0, #0
   28e78:	ldr	r1, [pc, r1]
   28e7c:	beq	28ec0 <sfbpf__scan_buffer+0xf0>
   28e80:	ldr	r1, [r0, r1, lsl #2]!
   28e84:	cmp	r1, #0
   28e88:	beq	28ec4 <sfbpf__scan_buffer+0xf4>
   28e8c:	ldr	r1, [pc, #164]	; 28f38 <sfbpf__scan_buffer+0x168>
   28e90:	add	r1, pc, r1
   28e94:	ldrb	r1, [r1]
   28e98:	ldr	r2, [pc, #156]	; 28f3c <sfbpf__scan_buffer+0x16c>
   28e9c:	ldr	r2, [pc, r2]
   28ea0:	strb	r1, [r2]
   28ea4:	ldr	r1, [r0]
   28ea8:	str	r2, [r1, #8]
   28eac:	ldr	r1, [r0]
   28eb0:	ldr	r2, [pc, #136]	; 28f40 <sfbpf__scan_buffer+0x170>
   28eb4:	ldr	r2, [pc, r2]
   28eb8:	str	r2, [r1, #16]
   28ebc:	b	28ec4 <sfbpf__scan_buffer+0xf4>
   28ec0:	lsl	r0, r1, #2
   28ec4:	str	r4, [r0]
   28ec8:	ldr	r1, [r4, #16]
   28ecc:	ldr	r2, [pc, #112]	; 28f44 <sfbpf__scan_buffer+0x174>
   28ed0:	add	r2, pc, r2
   28ed4:	str	r1, [r2]
   28ed8:	ldr	r1, [r4, #8]
   28edc:	ldr	r2, [pc, #100]	; 28f48 <sfbpf__scan_buffer+0x178>
   28ee0:	add	r2, pc, r2
   28ee4:	str	r1, [r2]
   28ee8:	ldr	r2, [pc, #92]	; 28f4c <sfbpf__scan_buffer+0x17c>
   28eec:	add	r2, pc, r2
   28ef0:	str	r1, [r2]
   28ef4:	ldr	r0, [r0]
   28ef8:	ldr	r0, [r0]
   28efc:	ldr	r2, [pc, #76]	; 28f50 <sfbpf__scan_buffer+0x180>
   28f00:	add	r2, pc, r2
   28f04:	str	r0, [r2]
   28f08:	ldrb	r0, [r1]
   28f0c:	ldr	r1, [pc, #64]	; 28f54 <sfbpf__scan_buffer+0x184>
   28f10:	add	r1, pc, r1
   28f14:	strb	r0, [r1]
   28f18:	mov	r0, r4
   28f1c:	pop	{r4, r5, r6, r7, fp, pc}
   28f20:	ldr	r0, [pc, #48]	; 28f58 <sfbpf__scan_buffer+0x188>
   28f24:	add	r0, pc, r0
   28f28:	bl	28918 <yy_fatal_error>
   28f2c:	.word	0x0001eb2c
   28f30:	.word	0x0001eb24
   28f34:	.word	0x0001eb0c
   28f38:	.word	0x0001eafc
   28f3c:	.word	0x0001eaec
   28f40:	.word	0x0001eae4
   28f44:	.word	0x0001eac8
   28f48:	.word	0x0001eb00
   28f4c:	.word	0x0001ea9c
   28f50:	.word	0x0001ea6c
   28f54:	.word	0x0001ea7c
   28f58:	.word	0x0000d101

00028f5c <sfbpf__scan_string>:
   28f5c:	push	{r4, r5, r6, r7, fp, lr}
   28f60:	add	fp, sp, #16
   28f64:	mov	r6, r0
   28f68:	bl	f04 <strlen@plt>
   28f6c:	add	r4, r0, #2
   28f70:	mov	r5, r0
   28f74:	mov	r0, r4
   28f78:	bl	ed4 <malloc@plt>
   28f7c:	cmp	r0, #0
   28f80:	beq	28fd4 <sfbpf__scan_string+0x78>
   28f84:	mov	r7, r0
   28f88:	cmp	r5, #1
   28f8c:	blt	28fa0 <sfbpf__scan_string+0x44>
   28f90:	mov	r0, r7
   28f94:	mov	r1, r6
   28f98:	mov	r2, r5
   28f9c:	bl	e80 <memcpy@plt>
   28fa0:	add	r0, r7, r5
   28fa4:	mov	r1, #0
   28fa8:	strh	r1, [r0]
   28fac:	mov	r0, r7
   28fb0:	mov	r1, r4
   28fb4:	bl	28dd0 <sfbpf__scan_buffer>
   28fb8:	cmp	r0, #0
   28fbc:	movne	r1, #1
   28fc0:	strne	r1, [r0, #20]
   28fc4:	popne	{r4, r5, r6, r7, fp, pc}
   28fc8:	ldr	r0, [pc, #20]	; 28fe4 <sfbpf__scan_string+0x88>
   28fcc:	add	r0, pc, r0
   28fd0:	bl	28918 <yy_fatal_error>
   28fd4:	ldr	r0, [pc, #4]	; 28fe0 <sfbpf__scan_string+0x84>
   28fd8:	add	r0, pc, r0
   28fdc:	bl	28918 <yy_fatal_error>
   28fe0:	.word	0x0000d077
   28fe4:	.word	0x0000d0ac

00028fe8 <sfbpf__scan_bytes>:
   28fe8:	push	{r4, r5, r6, r7, fp, lr}
   28fec:	add	fp, sp, #16
   28ff0:	add	r4, r1, #2
   28ff4:	mov	r7, r0
   28ff8:	mov	r5, r1
   28ffc:	mov	r0, r4
   29000:	bl	ed4 <malloc@plt>
   29004:	cmp	r0, #0
   29008:	beq	2905c <sfbpf__scan_bytes+0x74>
   2900c:	mov	r6, r0
   29010:	cmp	r5, #1
   29014:	blt	29028 <sfbpf__scan_bytes+0x40>
   29018:	mov	r0, r6
   2901c:	mov	r1, r7
   29020:	mov	r2, r5
   29024:	bl	e80 <memcpy@plt>
   29028:	add	r0, r6, r5
   2902c:	mov	r1, #0
   29030:	strh	r1, [r0]
   29034:	mov	r0, r6
   29038:	mov	r1, r4
   2903c:	bl	28dd0 <sfbpf__scan_buffer>
   29040:	cmp	r0, #0
   29044:	movne	r1, #1
   29048:	strne	r1, [r0, #20]
   2904c:	popne	{r4, r5, r6, r7, fp, pc}
   29050:	ldr	r0, [pc, #20]	; 2906c <sfbpf__scan_bytes+0x84>
   29054:	add	r0, pc, r0
   29058:	bl	28918 <yy_fatal_error>
   2905c:	ldr	r0, [pc, #4]	; 29068 <sfbpf__scan_bytes+0x80>
   29060:	add	r0, pc, r0
   29064:	bl	28918 <yy_fatal_error>
   29068:	.word	0x0000cfef
   2906c:	.word	0x0000d024

00029070 <sfbpf_get_debug>:
   29070:	ldr	r0, [pc, #4]	; 2907c <sfbpf_get_debug+0xc>
   29074:	ldr	r0, [pc, r0]
   29078:	bx	lr
   2907c:	.word	0x0001e900

00029080 <sfbpf_set_debug>:
   29080:	ldr	r1, [pc, #8]	; 29090 <sfbpf_set_debug+0x10>
   29084:	add	r1, pc, r1
   29088:	str	r0, [r1]
   2908c:	bx	lr
   29090:	.word	0x0001e8f0

00029094 <sfbpf_lex_destroy>:
   29094:	push	{r4, r5, r6, sl, fp, lr}
   29098:	add	fp, sp, #16
   2909c:	ldr	r0, [pc, #224]	; 29184 <sfbpf_lex_destroy+0xf0>
   290a0:	mov	r5, #0
   290a4:	mov	r4, #0
   290a8:	ldr	r0, [pc, r0]
   290ac:	cmp	r0, #0
   290b0:	beq	29114 <sfbpf_lex_destroy+0x80>
   290b4:	ldr	r1, [pc, #204]	; 29188 <sfbpf_lex_destroy+0xf4>
   290b8:	mov	r6, #0
   290bc:	ldr	r1, [pc, r1]
   290c0:	ldr	r4, [r0, r1, lsl #2]
   290c4:	cmp	r4, #0
   290c8:	beq	29110 <sfbpf_lex_destroy+0x7c>
   290cc:	str	r6, [r0, r1, lsl #2]
   290d0:	ldr	r0, [r4, #20]
   290d4:	cmp	r0, #0
   290d8:	beq	290e4 <sfbpf_lex_destroy+0x50>
   290dc:	ldr	r0, [r4, #4]
   290e0:	bl	e5c <free@plt>
   290e4:	mov	r0, r4
   290e8:	bl	e5c <free@plt>
   290ec:	ldr	r1, [pc, #152]	; 2918c <sfbpf_lex_destroy+0xf8>
   290f0:	mov	r4, #0
   290f4:	ldr	r1, [pc, r1]
   290f8:	ldr	r0, [pc, #144]	; 29190 <sfbpf_lex_destroy+0xfc>
   290fc:	ldr	r0, [pc, r0]
   29100:	cmp	r0, #0
   29104:	str	r4, [r0, r1, lsl #2]
   29108:	bne	290c4 <sfbpf_lex_destroy+0x30>
   2910c:	b	29114 <sfbpf_lex_destroy+0x80>
   29110:	mov	r4, r0
   29114:	mov	r0, r4
   29118:	bl	e5c <free@plt>
   2911c:	ldr	r0, [pc, #112]	; 29194 <sfbpf_lex_destroy+0x100>
   29120:	add	r0, pc, r0
   29124:	str	r5, [r0]
   29128:	ldr	r0, [pc, #104]	; 29198 <sfbpf_lex_destroy+0x104>
   2912c:	add	r0, pc, r0
   29130:	str	r5, [r0]
   29134:	ldr	r0, [pc, #96]	; 2919c <sfbpf_lex_destroy+0x108>
   29138:	add	r0, pc, r0
   2913c:	str	r5, [r0]
   29140:	ldr	r0, [pc, #88]	; 291a0 <sfbpf_lex_destroy+0x10c>
   29144:	add	r0, pc, r0
   29148:	str	r5, [r0]
   2914c:	ldr	r0, [pc, #80]	; 291a4 <sfbpf_lex_destroy+0x110>
   29150:	add	r0, pc, r0
   29154:	strb	r5, [r0]
   29158:	ldr	r0, [pc, #72]	; 291a8 <sfbpf_lex_destroy+0x114>
   2915c:	add	r0, pc, r0
   29160:	strb	r5, [r0]
   29164:	ldr	r0, [pc, #64]	; 291ac <sfbpf_lex_destroy+0x118>
   29168:	add	r0, pc, r0
   2916c:	str	r5, [r0]
   29170:	ldr	r0, [pc, #56]	; 291b0 <sfbpf_lex_destroy+0x11c>
   29174:	add	r0, pc, r0
   29178:	str	r5, [r0]
   2917c:	mov	r0, #0
   29180:	pop	{r4, r5, r6, sl, fp, pc}
   29184:	.word	0x0001e8d8
   29188:	.word	0x0001e8c8
   2918c:	.word	0x0001e890
   29190:	.word	0x0001e884
   29194:	.word	0x0001e864
   29198:	.word	0x0001e854
   2919c:	.word	0x0001e868
   291a0:	.word	0x0001e844
   291a4:	.word	0x0001e828
   291a8:	.word	0x0001e820
   291ac:	.word	0x0001e804
   291b0:	.word	0x0001e7fc

000291b4 <sfbpf_realloc>:
   291b4:	b	ea4 <realloc@plt>

000291b8 <sf_lex_init>:
   291b8:	push	{r4, r5, r6, r7, fp, lr}
   291bc:	add	fp, sp, #16
   291c0:	mov	r6, r0
   291c4:	bl	f04 <strlen@plt>
   291c8:	add	r4, r0, #2
   291cc:	mov	r5, r0
   291d0:	mov	r0, r4
   291d4:	bl	ed4 <malloc@plt>
   291d8:	cmp	r0, #0
   291dc:	beq	2923c <sf_lex_init+0x84>
   291e0:	mov	r7, r0
   291e4:	cmp	r5, #1
   291e8:	blt	291fc <sf_lex_init+0x44>
   291ec:	mov	r0, r7
   291f0:	mov	r1, r6
   291f4:	mov	r2, r5
   291f8:	bl	e80 <memcpy@plt>
   291fc:	add	r0, r7, r5
   29200:	mov	r1, #0
   29204:	strh	r1, [r0]
   29208:	mov	r0, r7
   2920c:	mov	r1, r4
   29210:	bl	28dd0 <sfbpf__scan_buffer>
   29214:	cmp	r0, #0
   29218:	movne	r1, #1
   2921c:	strne	r1, [r0, #20]
   29220:	ldrne	r1, [pc, #32]	; 29248 <sf_lex_init+0x90>
   29224:	addne	r1, pc, r1
   29228:	strne	r0, [r1]
   2922c:	popne	{r4, r5, r6, r7, fp, pc}
   29230:	ldr	r0, [pc, #24]	; 29250 <sf_lex_init+0x98>
   29234:	add	r0, pc, r0
   29238:	bl	28918 <yy_fatal_error>
   2923c:	ldr	r0, [pc, #8]	; 2924c <sf_lex_init+0x94>
   29240:	add	r0, pc, r0
   29244:	bl	28918 <yy_fatal_error>
   29248:	.word	0x0001e778
   2924c:	.word	0x0000ce0f
   29250:	.word	0x0000ce44

00029254 <sf_lex_cleanup>:
   29254:	push	{r4, sl, fp, lr}
   29258:	add	fp, sp, #8
   2925c:	ldr	r4, [pc, #124]	; 292e0 <sf_lex_cleanup+0x8c>
   29260:	ldr	r4, [pc, r4]
   29264:	cmp	r4, #0
   29268:	beq	292bc <sf_lex_cleanup+0x68>
   2926c:	ldr	r0, [pc, #112]	; 292e4 <sf_lex_cleanup+0x90>
   29270:	ldr	r0, [pc, r0]
   29274:	cmp	r0, #0
   29278:	beq	292d0 <sf_lex_cleanup+0x7c>
   2927c:	ldr	r1, [pc, #100]	; 292e8 <sf_lex_cleanup+0x94>
   29280:	ldr	r1, [pc, r1]
   29284:	ldr	r1, [r0, r1, lsl #2]
   29288:	cmp	r1, r4
   2928c:	bne	292a0 <sf_lex_cleanup+0x4c>
   29290:	ldr	r1, [pc, #84]	; 292ec <sf_lex_cleanup+0x98>
   29294:	mov	r2, #0
   29298:	ldr	r1, [pc, r1]
   2929c:	str	r2, [r0, r1, lsl #2]
   292a0:	ldr	r0, [r4, #20]
   292a4:	cmp	r0, #0
   292a8:	beq	292b4 <sf_lex_cleanup+0x60>
   292ac:	ldr	r0, [r4, #4]
   292b0:	bl	e5c <free@plt>
   292b4:	mov	r0, r4
   292b8:	bl	e5c <free@plt>
   292bc:	ldr	r0, [pc, #44]	; 292f0 <sf_lex_cleanup+0x9c>
   292c0:	mov	r1, #0
   292c4:	add	r0, pc, r0
   292c8:	str	r1, [r0]
   292cc:	pop	{r4, sl, fp, pc}
   292d0:	mov	r1, #0
   292d4:	cmp	r1, r4
   292d8:	bne	292a0 <sf_lex_cleanup+0x4c>
   292dc:	b	29290 <sf_lex_cleanup+0x3c>
   292e0:	.word	0x0001e73c
   292e4:	.word	0x0001e710
   292e8:	.word	0x0001e704
   292ec:	.word	0x0001e6ec
   292f0:	.word	0x0001e6d8

Disassembly of section .fini:

000292f4 <_fini>:
   292f4:	push	{r3, lr}
   292f8:	pop	{r3, pc}
