
../repos/prog2/1.4:     file format elf32-littlearm


Disassembly of section .init:

00010664 <.init>:
   10664:	push	{r3, lr}
   10668:	bl	10744 <_start@@Base+0x3c>
   1066c:	pop	{r3, pc}

Disassembly of section .plt:

00010670 <printf@plt-0x14>:
   10670:	push	{lr}		; (str lr, [sp, #-4]!)
   10674:	ldr	lr, [pc, #4]	; 10680 <printf@plt-0x4>
   10678:	add	lr, pc, lr
   1067c:	ldr	pc, [lr, #8]!
   10680:	andeq	r1, r1, r0, lsl #19

00010684 <printf@plt>:
   10684:	add	ip, pc, #0, 12
   10688:	add	ip, ip, #69632	; 0x11000
   1068c:	ldr	pc, [ip, #2432]!	; 0x980

00010690 <fopen@plt>:
   10690:	add	ip, pc, #0, 12
   10694:	add	ip, ip, #69632	; 0x11000
   10698:	ldr	pc, [ip, #2424]!	; 0x978

0001069c <free@plt>:
   1069c:	add	ip, pc, #0, 12
   106a0:	add	ip, ip, #69632	; 0x11000
   106a4:	ldr	pc, [ip, #2416]!	; 0x970

000106a8 <malloc@plt>:
   106a8:	add	ip, pc, #0, 12
   106ac:	add	ip, ip, #69632	; 0x11000
   106b0:	ldr	pc, [ip, #2408]!	; 0x968

000106b4 <__libc_start_main@plt>:
   106b4:	add	ip, pc, #0, 12
   106b8:	add	ip, ip, #69632	; 0x11000
   106bc:	ldr	pc, [ip, #2400]!	; 0x960

000106c0 <__gmon_start__@plt>:
   106c0:	add	ip, pc, #0, 12
   106c4:	add	ip, ip, #69632	; 0x11000
   106c8:	ldr	pc, [ip, #2392]!	; 0x958

000106cc <exit@plt>:
   106cc:	add	ip, pc, #0, 12
   106d0:	add	ip, ip, #69632	; 0x11000
   106d4:	ldr	pc, [ip, #2384]!	; 0x950

000106d8 <fclose@plt>:
   106d8:	add	ip, pc, #0, 12
   106dc:	add	ip, ip, #69632	; 0x11000
   106e0:	ldr	pc, [ip, #2376]!	; 0x948

000106e4 <fseek@plt>:
   106e4:	add	ip, pc, #0, 12
   106e8:	add	ip, ip, #69632	; 0x11000
   106ec:	ldr	pc, [ip, #2368]!	; 0x940

000106f0 <abort@plt>:
   106f0:	add	ip, pc, #0, 12
   106f4:	add	ip, ip, #69632	; 0x11000
   106f8:	ldr	pc, [ip, #2360]!	; 0x938

000106fc <getc@plt>:
   106fc:	add	ip, pc, #0, 12
   10700:	add	ip, ip, #69632	; 0x11000
   10704:	ldr	pc, [ip, #2352]!	; 0x930

Disassembly of section .text:

00010708 <_start@@Base>:
   10708:	mov	fp, #0
   1070c:	mov	lr, #0
   10710:	pop	{r1}		; (ldr r1, [sp], #4)
   10714:	mov	r2, sp
   10718:	push	{r2}		; (str r2, [sp, #-4]!)
   1071c:	push	{r0}		; (str r0, [sp, #-4]!)
   10720:	ldr	ip, [pc, #16]	; 10738 <_start@@Base+0x30>
   10724:	push	{ip}		; (str ip, [sp, #-4]!)
   10728:	ldr	r0, [pc, #12]	; 1073c <_start@@Base+0x34>
   1072c:	ldr	r3, [pc, #12]	; 10740 <_start@@Base+0x38>
   10730:	bl	106b4 <__libc_start_main@plt>
   10734:	bl	106f0 <abort@plt>
   10738:	andeq	r0, r1, r8, asr #28
   1073c:	andeq	r0, r1, r4, lsl #18
   10740:	andeq	r0, r1, r8, ror #27
   10744:	ldr	r3, [pc, #20]	; 10760 <_start@@Base+0x58>
   10748:	ldr	r2, [pc, #20]	; 10764 <_start@@Base+0x5c>
   1074c:	add	r3, pc, r3
   10750:	ldr	r2, [r3, r2]
   10754:	cmp	r2, #0
   10758:	bxeq	lr
   1075c:	b	106c0 <__gmon_start__@plt>
   10760:	andeq	r1, r1, ip, lsr #17
   10764:	andeq	r0, r0, r8, lsr r0
   10768:	ldr	r3, [pc, #28]	; 1078c <_start@@Base+0x84>
   1076c:	ldr	r0, [pc, #28]	; 10790 <_start@@Base+0x88>
   10770:	sub	r3, r3, r0
   10774:	cmp	r3, #6
   10778:	bxls	lr
   1077c:	ldr	r3, [pc, #16]	; 10794 <_start@@Base+0x8c>
   10780:	cmp	r3, #0
   10784:	bxeq	lr
   10788:	bx	r3
   1078c:	andeq	r2, r2, r7, asr #32
   10790:	andeq	r2, r2, r4, asr #32
   10794:	andeq	r0, r0, r0
   10798:	ldr	r1, [pc, #36]	; 107c4 <_start@@Base+0xbc>
   1079c:	ldr	r0, [pc, #36]	; 107c8 <_start@@Base+0xc0>
   107a0:	sub	r1, r1, r0
   107a4:	asr	r1, r1, #2
   107a8:	add	r1, r1, r1, lsr #31
   107ac:	asrs	r1, r1, #1
   107b0:	bxeq	lr
   107b4:	ldr	r3, [pc, #16]	; 107cc <_start@@Base+0xc4>
   107b8:	cmp	r3, #0
   107bc:	bxeq	lr
   107c0:	bx	r3
   107c4:	andeq	r2, r2, r4, asr #32
   107c8:	andeq	r2, r2, r4, asr #32
   107cc:	andeq	r0, r0, r0
   107d0:	push	{r4, lr}
   107d4:	ldr	r4, [pc, #24]	; 107f4 <_start@@Base+0xec>
   107d8:	ldrb	r3, [r4]
   107dc:	cmp	r3, #0
   107e0:	popne	{r4, pc}
   107e4:	bl	10768 <_start@@Base+0x60>
   107e8:	mov	r3, #1
   107ec:	strb	r3, [r4]
   107f0:	pop	{r4, pc}
   107f4:	andeq	r2, r2, r4, asr #32
   107f8:	ldr	r0, [pc, #40]	; 10828 <_start@@Base+0x120>
   107fc:	ldr	r3, [r0]
   10800:	cmp	r3, #0
   10804:	bne	1080c <_start@@Base+0x104>
   10808:	b	10798 <_start@@Base+0x90>
   1080c:	ldr	r3, [pc, #24]	; 1082c <_start@@Base+0x124>
   10810:	cmp	r3, #0
   10814:	beq	10808 <_start@@Base+0x100>
   10818:	push	{r4, lr}
   1081c:	blx	r3
   10820:	pop	{r4, lr}
   10824:	b	10798 <_start@@Base+0x90>
   10828:	andeq	r1, r2, r4, lsl pc
   1082c:	andeq	r0, r0, r0

00010830 <print_pixelinfo@@Base>:
   10830:	push	{fp, lr}
   10834:	add	fp, sp, #4
   10838:	sub	sp, sp, #24
   1083c:	str	r0, [fp, #-8]
   10840:	str	r1, [fp, #-12]
   10844:	str	r2, [fp, #-16]
   10848:	ldr	r3, [fp, #-12]
   1084c:	lsl	r3, r3, #2
   10850:	ldr	r2, [fp, #-8]
   10854:	add	r3, r2, r3
   10858:	ldr	r1, [r3]
   1085c:	ldr	r2, [fp, #-16]
   10860:	mov	r3, r2
   10864:	lsl	r3, r3, #1
   10868:	add	r3, r3, r2
   1086c:	add	r3, r1, r3
   10870:	ldrb	r3, [r3]
   10874:	mov	ip, r3
   10878:	ldr	r3, [fp, #-12]
   1087c:	lsl	r3, r3, #2
   10880:	ldr	r2, [fp, #-8]
   10884:	add	r3, r2, r3
   10888:	ldr	r1, [r3]
   1088c:	ldr	r2, [fp, #-16]
   10890:	mov	r3, r2
   10894:	lsl	r3, r3, #1
   10898:	add	r3, r3, r2
   1089c:	add	r3, r1, r3
   108a0:	ldrb	r3, [r3, #1]
   108a4:	mov	r0, r3
   108a8:	ldr	r3, [fp, #-12]
   108ac:	lsl	r3, r3, #2
   108b0:	ldr	r2, [fp, #-8]
   108b4:	add	r3, r2, r3
   108b8:	ldr	r1, [r3]
   108bc:	ldr	r2, [fp, #-16]
   108c0:	mov	r3, r2
   108c4:	lsl	r3, r3, #1
   108c8:	add	r3, r3, r2
   108cc:	add	r3, r1, r3
   108d0:	ldrb	r3, [r3, #2]
   108d4:	str	r3, [sp, #4]
   108d8:	str	r0, [sp]
   108dc:	mov	r3, ip
   108e0:	ldr	r2, [fp, #-16]
   108e4:	ldr	r1, [fp, #-12]
   108e8:	ldr	r0, [pc, #16]	; 10900 <print_pixelinfo@@Base+0xd0>
   108ec:	add	r0, pc, r0
   108f0:	bl	10684 <printf@plt>
   108f4:	nop			; (mov r0, r0)
   108f8:	sub	sp, fp, #4
   108fc:	pop	{fp, pc}
   10900:	andeq	r0, r0, r4, ror #10

00010904 <main@@Base>:
   10904:	push	{r4, fp, lr}
   10908:	add	fp, sp, #8
   1090c:	sub	sp, sp, #44	; 0x2c
   10910:	ldr	r3, [pc, #1192]	; 10dc0 <main@@Base+0x4bc>
   10914:	add	r3, pc, r3
   10918:	mov	r1, r3
   1091c:	ldr	r3, [pc, #1184]	; 10dc4 <main@@Base+0x4c0>
   10920:	add	r3, pc, r3
   10924:	mov	r0, r3
   10928:	bl	10690 <fopen@plt>
   1092c:	str	r0, [fp, #-24]	; 0xffffffe8
   10930:	mov	r3, #0
   10934:	str	r3, [fp, #-16]
   10938:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1093c:	bl	106fc <getc@plt>
   10940:	mov	r3, r0
   10944:	cmp	r3, #66	; 0x42
   10948:	bne	10960 <main@@Base+0x5c>
   1094c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   10950:	bl	106fc <getc@plt>
   10954:	mov	r3, r0
   10958:	cmp	r3, #77	; 0x4d
   1095c:	beq	10978 <main@@Base+0x74>
   10960:	ldr	r3, [pc, #1120]	; 10dc8 <main@@Base+0x4c4>
   10964:	add	r3, pc, r3
   10968:	mov	r0, r3
   1096c:	bl	10684 <printf@plt>
   10970:	mov	r0, #1
   10974:	bl	106cc <exit@plt>
   10978:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1097c:	bl	106fc <getc@plt>
   10980:	mov	r4, r0
   10984:	ldr	r0, [fp, #-24]	; 0xffffffe8
   10988:	bl	106fc <getc@plt>
   1098c:	mov	r3, r0
   10990:	lsl	r3, r3, #8
   10994:	orr	r4, r4, r3
   10998:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1099c:	bl	106fc <getc@plt>
   109a0:	mov	r3, r0
   109a4:	lsl	r3, r3, #16
   109a8:	orr	r4, r4, r3
   109ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   109b0:	bl	106fc <getc@plt>
   109b4:	mov	r3, r0
   109b8:	lsl	r3, r3, #24
   109bc:	orr	r3, r4, r3
   109c0:	str	r3, [fp, #-28]	; 0xffffffe4
   109c4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   109c8:	ldr	r3, [pc, #1020]	; 10dcc <main@@Base+0x4c8>
   109cc:	add	r3, pc, r3
   109d0:	mov	r0, r3
   109d4:	bl	10684 <printf@plt>
   109d8:	mov	r2, #1
   109dc:	mov	r1, #4
   109e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   109e4:	bl	106e4 <fseek@plt>
   109e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   109ec:	bl	106fc <getc@plt>
   109f0:	mov	r4, r0
   109f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   109f8:	bl	106fc <getc@plt>
   109fc:	mov	r3, r0
   10a00:	lsl	r3, r3, #8
   10a04:	orr	r4, r4, r3
   10a08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   10a0c:	bl	106fc <getc@plt>
   10a10:	mov	r3, r0
   10a14:	lsl	r3, r3, #16
   10a18:	orr	r4, r4, r3
   10a1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   10a20:	bl	106fc <getc@plt>
   10a24:	mov	r3, r0
   10a28:	lsl	r3, r3, #24
   10a2c:	orr	r3, r4, r3
   10a30:	str	r3, [fp, #-32]	; 0xffffffe0
   10a34:	mov	r2, #1
   10a38:	mov	r1, #4
   10a3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   10a40:	bl	106e4 <fseek@plt>
   10a44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   10a48:	bl	106fc <getc@plt>
   10a4c:	mov	r4, r0
   10a50:	ldr	r0, [fp, #-24]	; 0xffffffe8
   10a54:	bl	106fc <getc@plt>
   10a58:	mov	r3, r0
   10a5c:	lsl	r3, r3, #8
   10a60:	orr	r4, r4, r3
   10a64:	ldr	r0, [fp, #-24]	; 0xffffffe8
   10a68:	bl	106fc <getc@plt>
   10a6c:	mov	r3, r0
   10a70:	lsl	r3, r3, #16
   10a74:	orr	r4, r4, r3
   10a78:	ldr	r0, [fp, #-24]	; 0xffffffe8
   10a7c:	bl	106fc <getc@plt>
   10a80:	mov	r3, r0
   10a84:	lsl	r3, r3, #24
   10a88:	orr	r3, r4, r3
   10a8c:	str	r3, [fp, #-36]	; 0xffffffdc
   10a90:	ldr	r1, [fp, #-36]	; 0xffffffdc
   10a94:	ldr	r3, [pc, #820]	; 10dd0 <main@@Base+0x4cc>
   10a98:	add	r3, pc, r3
   10a9c:	mov	r0, r3
   10aa0:	bl	10684 <printf@plt>
   10aa4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   10aa8:	bl	106fc <getc@plt>
   10aac:	mov	r4, r0
   10ab0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   10ab4:	bl	106fc <getc@plt>
   10ab8:	mov	r3, r0
   10abc:	lsl	r3, r3, #8
   10ac0:	orr	r4, r4, r3
   10ac4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   10ac8:	bl	106fc <getc@plt>
   10acc:	mov	r3, r0
   10ad0:	lsl	r3, r3, #16
   10ad4:	orr	r4, r4, r3
   10ad8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   10adc:	bl	106fc <getc@plt>
   10ae0:	mov	r3, r0
   10ae4:	lsl	r3, r3, #24
   10ae8:	orr	r3, r4, r3
   10aec:	str	r3, [fp, #-40]	; 0xffffffd8
   10af0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   10af4:	ldr	r3, [pc, #728]	; 10dd4 <main@@Base+0x4d0>
   10af8:	add	r3, pc, r3
   10afc:	mov	r0, r3
   10b00:	bl	10684 <printf@plt>
   10b04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   10b08:	bl	106fc <getc@plt>
   10b0c:	mov	r4, r0
   10b10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   10b14:	bl	106fc <getc@plt>
   10b18:	mov	r3, r0
   10b1c:	lsl	r3, r3, #8
   10b20:	orr	r3, r4, r3
   10b24:	str	r3, [fp, #-44]	; 0xffffffd4
   10b28:	ldr	r3, [fp, #-44]	; 0xffffffd4
   10b2c:	cmp	r3, #1
   10b30:	beq	10b4c <main@@Base+0x248>
   10b34:	ldr	r3, [pc, #668]	; 10dd8 <main@@Base+0x4d4>
   10b38:	add	r3, pc, r3
   10b3c:	mov	r0, r3
   10b40:	bl	10684 <printf@plt>
   10b44:	mov	r0, #2
   10b48:	bl	106cc <exit@plt>
   10b4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   10b50:	bl	106fc <getc@plt>
   10b54:	mov	r4, r0
   10b58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   10b5c:	bl	106fc <getc@plt>
   10b60:	mov	r3, r0
   10b64:	lsl	r3, r3, #8
   10b68:	orr	r3, r4, r3
   10b6c:	str	r3, [fp, #-48]	; 0xffffffd0
   10b70:	ldr	r1, [fp, #-48]	; 0xffffffd0
   10b74:	ldr	r3, [pc, #608]	; 10ddc <main@@Base+0x4d8>
   10b78:	add	r3, pc, r3
   10b7c:	mov	r0, r3
   10b80:	bl	10684 <printf@plt>
   10b84:	ldr	r3, [fp, #-48]	; 0xffffffd0
   10b88:	cmp	r3, #24
   10b8c:	beq	10ba8 <main@@Base+0x2a4>
   10b90:	ldr	r3, [pc, #584]	; 10de0 <main@@Base+0x4dc>
   10b94:	add	r3, pc, r3
   10b98:	mov	r0, r3
   10b9c:	bl	10684 <printf@plt>
   10ba0:	mov	r0, #3
   10ba4:	bl	106cc <exit@plt>
   10ba8:	mov	r2, #0
   10bac:	ldr	r1, [fp, #-32]	; 0xffffffe0
   10bb0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   10bb4:	bl	106e4 <fseek@plt>
   10bb8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   10bbc:	lsl	r3, r3, #2
   10bc0:	mov	r0, r3
   10bc4:	bl	106a8 <malloc@plt>
   10bc8:	mov	r3, r0
   10bcc:	str	r3, [fp, #-52]	; 0xffffffcc
   10bd0:	mov	r3, #0
   10bd4:	str	r3, [fp, #-16]
   10bd8:	b	10c18 <main@@Base+0x314>
   10bdc:	ldr	r3, [fp, #-16]
   10be0:	lsl	r3, r3, #2
   10be4:	ldr	r2, [fp, #-52]	; 0xffffffcc
   10be8:	add	r4, r2, r3
   10bec:	ldr	r2, [fp, #-36]	; 0xffffffdc
   10bf0:	mov	r3, r2
   10bf4:	lsl	r3, r3, #1
   10bf8:	add	r3, r3, r2
   10bfc:	mov	r0, r3
   10c00:	bl	106a8 <malloc@plt>
   10c04:	mov	r3, r0
   10c08:	str	r3, [r4]
   10c0c:	ldr	r3, [fp, #-16]
   10c10:	add	r3, r3, #1
   10c14:	str	r3, [fp, #-16]
   10c18:	ldr	r2, [fp, #-16]
   10c1c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   10c20:	cmp	r2, r3
   10c24:	blt	10bdc <main@@Base+0x2d8>
   10c28:	ldr	r3, [fp, #-40]	; 0xffffffd8
   10c2c:	sub	r3, r3, #1
   10c30:	str	r3, [fp, #-16]
   10c34:	b	10d20 <main@@Base+0x41c>
   10c38:	mov	r3, #0
   10c3c:	str	r3, [fp, #-20]	; 0xffffffec
   10c40:	b	10d04 <main@@Base+0x400>
   10c44:	ldr	r3, [fp, #-16]
   10c48:	lsl	r3, r3, #2
   10c4c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   10c50:	add	r3, r2, r3
   10c54:	ldr	r1, [r3]
   10c58:	ldr	r2, [fp, #-20]	; 0xffffffec
   10c5c:	mov	r3, r2
   10c60:	lsl	r3, r3, #1
   10c64:	add	r3, r3, r2
   10c68:	add	r4, r1, r3
   10c6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   10c70:	bl	106fc <getc@plt>
   10c74:	mov	r3, r0
   10c78:	uxtb	r3, r3
   10c7c:	strb	r3, [r4, #2]
   10c80:	ldr	r3, [fp, #-16]
   10c84:	lsl	r3, r3, #2
   10c88:	ldr	r2, [fp, #-52]	; 0xffffffcc
   10c8c:	add	r3, r2, r3
   10c90:	ldr	r1, [r3]
   10c94:	ldr	r2, [fp, #-20]	; 0xffffffec
   10c98:	mov	r3, r2
   10c9c:	lsl	r3, r3, #1
   10ca0:	add	r3, r3, r2
   10ca4:	add	r4, r1, r3
   10ca8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   10cac:	bl	106fc <getc@plt>
   10cb0:	mov	r3, r0
   10cb4:	uxtb	r3, r3
   10cb8:	strb	r3, [r4, #1]
   10cbc:	ldr	r3, [fp, #-16]
   10cc0:	lsl	r3, r3, #2
   10cc4:	ldr	r2, [fp, #-52]	; 0xffffffcc
   10cc8:	add	r3, r2, r3
   10ccc:	ldr	r1, [r3]
   10cd0:	ldr	r2, [fp, #-20]	; 0xffffffec
   10cd4:	mov	r3, r2
   10cd8:	lsl	r3, r3, #1
   10cdc:	add	r3, r3, r2
   10ce0:	add	r4, r1, r3
   10ce4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   10ce8:	bl	106fc <getc@plt>
   10cec:	mov	r3, r0
   10cf0:	uxtb	r3, r3
   10cf4:	strb	r3, [r4]
   10cf8:	ldr	r3, [fp, #-20]	; 0xffffffec
   10cfc:	add	r3, r3, #1
   10d00:	str	r3, [fp, #-20]	; 0xffffffec
   10d04:	ldr	r2, [fp, #-20]	; 0xffffffec
   10d08:	ldr	r3, [fp, #-36]	; 0xffffffdc
   10d0c:	cmp	r2, r3
   10d10:	blt	10c44 <main@@Base+0x340>
   10d14:	ldr	r3, [fp, #-16]
   10d18:	sub	r3, r3, #1
   10d1c:	str	r3, [fp, #-16]
   10d20:	ldr	r3, [fp, #-16]
   10d24:	cmp	r3, #0
   10d28:	bge	10c38 <main@@Base+0x334>
   10d2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   10d30:	bl	106d8 <fclose@plt>
   10d34:	mov	r2, #0
   10d38:	mov	r1, #0
   10d3c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   10d40:	bl	10830 <print_pixelinfo@@Base>
   10d44:	mov	r2, #0
   10d48:	mov	r1, #532	; 0x214
   10d4c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   10d50:	bl	10830 <print_pixelinfo@@Base>
   10d54:	ldr	r2, [pc, #136]	; 10de4 <main@@Base+0x4e0>
   10d58:	mov	r1, #408	; 0x198
   10d5c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   10d60:	bl	10830 <print_pixelinfo@@Base>
   10d64:	mov	r3, #0
   10d68:	str	r3, [fp, #-16]
   10d6c:	b	10d98 <main@@Base+0x494>
   10d70:	ldr	r3, [fp, #-16]
   10d74:	lsl	r3, r3, #2
   10d78:	ldr	r2, [fp, #-52]	; 0xffffffcc
   10d7c:	add	r3, r2, r3
   10d80:	ldr	r3, [r3]
   10d84:	mov	r0, r3
   10d88:	bl	1069c <free@plt>
   10d8c:	ldr	r3, [fp, #-16]
   10d90:	add	r3, r3, #1
   10d94:	str	r3, [fp, #-16]
   10d98:	ldr	r2, [fp, #-16]
   10d9c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   10da0:	cmp	r2, r3
   10da4:	blt	10d70 <main@@Base+0x46c>
   10da8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   10dac:	bl	1069c <free@plt>
   10db0:	mov	r3, #0
   10db4:	mov	r0, r3
   10db8:	sub	sp, fp, #8
   10dbc:	pop	{r4, fp, pc}
   10dc0:	andeq	r0, r0, r4, ror #10
   10dc4:	andeq	r0, r0, ip, asr r5
   10dc8:	andeq	r0, r0, r0, lsr r5
   10dcc:	andeq	r0, r0, r4, lsl #10
   10dd0:	andeq	r0, r0, ip, asr r4
   10dd4:	andeq	r0, r0, r4, lsl r4
   10dd8:	andeq	r0, r0, ip, ror #7
   10ddc:	andeq	r0, r0, ip, lsl #8
   10de0:	andeq	r0, r0, r4, lsl #8
   10de4:			; <UNDEFINED> instruction: 0x000001bb

00010de8 <__libc_csu_init@@Base>:
   10de8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10dec:	mov	r7, r0
   10df0:	ldr	r6, [pc, #72]	; 10e40 <__libc_csu_init@@Base+0x58>
   10df4:	ldr	r5, [pc, #72]	; 10e44 <__libc_csu_init@@Base+0x5c>
   10df8:	add	r6, pc, r6
   10dfc:	add	r5, pc, r5
   10e00:	sub	r6, r6, r5
   10e04:	mov	r8, r1
   10e08:	mov	r9, r2
   10e0c:	bl	10664 <printf@plt-0x20>
   10e10:	asrs	r6, r6, #2
   10e14:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10e18:	mov	r4, #0
   10e1c:	add	r4, r4, #1
   10e20:	ldr	r3, [r5], #4
   10e24:	mov	r2, r9
   10e28:	mov	r1, r8
   10e2c:	mov	r0, r7
   10e30:	blx	r3
   10e34:	cmp	r6, r4
   10e38:	bne	10e1c <__libc_csu_init@@Base+0x34>
   10e3c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10e40:	andeq	r1, r1, r0, lsl r1
   10e44:	andeq	r1, r1, r8, lsl #2

00010e48 <__libc_csu_fini@@Base>:
   10e48:	bx	lr

Disassembly of section .fini:

00010e4c <.fini>:
   10e4c:	push	{r3, lr}
   10e50:	pop	{r3, pc}
