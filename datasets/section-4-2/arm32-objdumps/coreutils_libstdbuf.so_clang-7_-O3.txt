
../repos/coreutils/src/libstdbuf.so:     file format elf32-littlearm


Disassembly of section .init:

00000498 <.init>:
 498:	push	{r3, lr}
 49c:	bl	530 <fileno@plt+0xc>
 4a0:	pop	{r3, pc}

Disassembly of section .plt:

000004a4 <__cxa_finalize@plt-0x14>:
 4a4:	push	{lr}		; (str lr, [sp, #-4]!)
 4a8:	ldr	lr, [pc, #4]	; 4b4 <__cxa_finalize@plt-0x4>
 4ac:	add	lr, pc, lr
 4b0:	ldr	pc, [lr, #8]!
 4b4:	andeq	r0, r1, ip, asr #22

000004b8 <__cxa_finalize@plt>:
 4b8:	add	ip, pc, #0, 12
 4bc:	add	ip, ip, #16, 20	; 0x10000
 4c0:	ldr	pc, [ip, #2892]!	; 0xb4c

000004c4 <free@plt>:
 4c4:	add	ip, pc, #0, 12
 4c8:	add	ip, ip, #16, 20	; 0x10000
 4cc:	ldr	pc, [ip, #2884]!	; 0xb44

000004d0 <__strtoull_internal@plt>:
 4d0:	add	ip, pc, #0, 12
 4d4:	add	ip, ip, #16, 20	; 0x10000
 4d8:	ldr	pc, [ip, #2876]!	; 0xb3c

000004dc <dcgettext@plt>:
 4dc:	add	ip, pc, #0, 12
 4e0:	add	ip, ip, #16, 20	; 0x10000
 4e4:	ldr	pc, [ip, #2868]!	; 0xb34

000004e8 <getenv@plt>:
 4e8:	add	ip, pc, #0, 12
 4ec:	add	ip, ip, #16, 20	; 0x10000
 4f0:	ldr	pc, [ip, #2860]!	; 0xb2c

000004f4 <malloc@plt>:
 4f4:	add	ip, pc, #0, 12
 4f8:	add	ip, ip, #16, 20	; 0x10000
 4fc:	ldr	pc, [ip, #2852]!	; 0xb24

00000500 <__gmon_start__@plt>:
 500:	add	ip, pc, #0, 12
 504:	add	ip, ip, #16, 20	; 0x10000
 508:	ldr	pc, [ip, #2844]!	; 0xb1c

0000050c <fprintf@plt>:
 50c:	add	ip, pc, #0, 12
 510:	add	ip, ip, #16, 20	; 0x10000
 514:	ldr	pc, [ip, #2836]!	; 0xb14

00000518 <setvbuf@plt>:
 518:	add	ip, pc, #0, 12
 51c:	add	ip, ip, #16, 20	; 0x10000
 520:	ldr	pc, [ip, #2828]!	; 0xb0c

00000524 <fileno@plt>:
 524:	add	ip, pc, #0, 12
 528:	add	ip, ip, #16, 20	; 0x10000
 52c:	ldr	pc, [ip, #2820]!	; 0xb04

Disassembly of section .text:

00000530 <.text>:
 530:	ldr	r3, [pc, #20]	; 54c <fileno@plt+0x28>
 534:	ldr	r2, [pc, #20]	; 550 <fileno@plt+0x2c>
 538:	add	r3, pc, r3
 53c:	ldr	r2, [r3, r2]
 540:	cmp	r2, #0
 544:	bxeq	lr
 548:	b	500 <__gmon_start__@plt>
 54c:	andeq	r0, r1, r0, asr #21
 550:	andeq	r0, r0, r0, asr #32
 554:	ldr	r0, [pc, #44]	; 588 <fileno@plt+0x64>
 558:	ldr	r3, [pc, #44]	; 58c <fileno@plt+0x68>
 55c:	add	r0, pc, r0
 560:	add	r3, pc, r3
 564:	cmp	r3, r0
 568:	ldr	r3, [pc, #32]	; 590 <fileno@plt+0x6c>
 56c:	add	r3, pc, r3
 570:	bxeq	lr
 574:	ldr	r2, [pc, #24]	; 594 <fileno@plt+0x70>
 578:	ldr	r3, [r3, r2]
 57c:	cmp	r3, #0
 580:	bxeq	lr
 584:	bx	r3
 588:	strdeq	r0, [r1], -r0	; <UNPREDICTABLE>
 58c:	andeq	r0, r1, ip, ror #21
 590:	andeq	r0, r1, ip, lsl #21
 594:	andeq	r0, r0, r8, lsr r0
 598:	ldr	r0, [pc, #56]	; 5d8 <fileno@plt+0xb4>
 59c:	ldr	r3, [pc, #56]	; 5dc <fileno@plt+0xb8>
 5a0:	add	r0, pc, r0
 5a4:	add	r3, pc, r3
 5a8:	sub	r1, r3, r0
 5ac:	ldr	r3, [pc, #44]	; 5e0 <fileno@plt+0xbc>
 5b0:	asr	r1, r1, #2
 5b4:	add	r3, pc, r3
 5b8:	add	r1, r1, r1, lsr #31
 5bc:	asrs	r1, r1, #1
 5c0:	bxeq	lr
 5c4:	ldr	r2, [pc, #24]	; 5e4 <fileno@plt+0xc0>
 5c8:	ldr	r3, [r3, r2]
 5cc:	cmp	r3, #0
 5d0:	bxeq	lr
 5d4:	bx	r3
 5d8:	andeq	r0, r1, ip, lsr #21
 5dc:	andeq	r0, r1, r8, lsr #21
 5e0:	andeq	r0, r1, r4, asr #20
 5e4:	andeq	r0, r0, ip, asr #32
 5e8:	ldr	r3, [pc, #76]	; 63c <fileno@plt+0x118>
 5ec:	ldr	r2, [pc, #76]	; 640 <fileno@plt+0x11c>
 5f0:	add	r3, pc, r3
 5f4:	add	r2, pc, r2
 5f8:	ldrb	r3, [r3]
 5fc:	cmp	r3, #0
 600:	bxne	lr
 604:	ldr	r3, [pc, #56]	; 644 <fileno@plt+0x120>
 608:	push	{r4, lr}
 60c:	ldr	r3, [r2, r3]
 610:	cmp	r3, #0
 614:	beq	624 <fileno@plt+0x100>
 618:	ldr	r3, [pc, #40]	; 648 <fileno@plt+0x124>
 61c:	ldr	r0, [pc, r3]
 620:	bl	4b8 <__cxa_finalize@plt>
 624:	bl	554 <fileno@plt+0x30>
 628:	ldr	r3, [pc, #28]	; 64c <fileno@plt+0x128>
 62c:	mov	r2, #1
 630:	add	r3, pc, r3
 634:	strb	r2, [r3]
 638:	pop	{r4, pc}
 63c:	andeq	r0, r1, ip, asr sl
 640:	andeq	r0, r1, r4, lsl #20
 644:	andeq	r0, r0, r4, lsr r0
 648:	andeq	r0, r1, ip, lsr #20
 64c:	andeq	r0, r1, ip, lsl sl
 650:	b	598 <fileno@plt+0x74>
 654:	push	{r4, r5, r6, sl, fp, lr}
 658:	add	fp, sp, #16
 65c:	ldr	r0, [pc, #128]	; 6e4 <fileno@plt+0x1c0>
 660:	add	r0, pc, r0
 664:	bl	4e8 <getenv@plt>
 668:	mov	r6, r0
 66c:	ldr	r0, [pc, #116]	; 6e8 <fileno@plt+0x1c4>
 670:	add	r0, pc, r0
 674:	bl	4e8 <getenv@plt>
 678:	mov	r5, r0
 67c:	ldr	r0, [pc, #104]	; 6ec <fileno@plt+0x1c8>
 680:	add	r0, pc, r0
 684:	bl	4e8 <getenv@plt>
 688:	mov	r4, r0
 68c:	cmp	r6, #0
 690:	beq	6a8 <fileno@plt+0x184>
 694:	ldr	r0, [pc, #84]	; 6f0 <fileno@plt+0x1cc>
 698:	mov	r1, r6
 69c:	ldr	r0, [pc, r0]
 6a0:	ldr	r0, [r0]
 6a4:	bl	6fc <fileno@plt+0x1d8>
 6a8:	cmp	r5, #0
 6ac:	beq	6c4 <fileno@plt+0x1a0>
 6b0:	ldr	r0, [pc, #60]	; 6f4 <fileno@plt+0x1d0>
 6b4:	mov	r1, r5
 6b8:	ldr	r0, [pc, r0]
 6bc:	ldr	r0, [r0]
 6c0:	bl	6fc <fileno@plt+0x1d8>
 6c4:	cmp	r4, #0
 6c8:	popeq	{r4, r5, r6, sl, fp, pc}
 6cc:	ldr	r0, [pc, #36]	; 6f8 <fileno@plt+0x1d4>
 6d0:	mov	r1, r4
 6d4:	ldr	r0, [pc, r0]
 6d8:	ldr	r0, [r0]
 6dc:	pop	{r4, r5, r6, sl, fp, lr}
 6e0:	b	6fc <fileno@plt+0x1d8>
 6e4:	andeq	r0, r0, ip, lsl #5
 6e8:	andeq	r0, r0, r6, lsl #5
 6ec:	andeq	r0, r0, r0, lsl #5
 6f0:	muleq	r1, r8, r9
 6f4:	andeq	r0, r1, r4, lsl #19
 6f8:	andeq	r0, r1, ip, ror #18
 6fc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
 700:	add	fp, sp, #24
 704:	sub	sp, sp, #8
 708:	mov	r5, r0
 70c:	ldrb	r0, [r1]
 710:	mov	r8, r1
 714:	cmp	r0, #48	; 0x30
 718:	beq	734 <fileno@plt+0x210>
 71c:	cmp	r0, #76	; 0x4c
 720:	bne	744 <fileno@plt+0x220>
 724:	mov	r6, #0
 728:	mov	r2, #1
 72c:	mov	r7, #0
 730:	b	798 <fileno@plt+0x274>
 734:	mov	r6, #0
 738:	mov	r2, #2
 73c:	mov	r7, #0
 740:	b	798 <fileno@plt+0x274>
 744:	add	r1, sp, #4
 748:	mov	r0, r8
 74c:	mov	r2, #10
 750:	mov	r3, #0
 754:	bl	4d0 <__strtoull_internal@plt>
 758:	mov	r7, r0
 75c:	orrs	r0, r0, r1
 760:	beq	7fc <fileno@plt+0x2d8>
 764:	ldr	r0, [sp, #4]
 768:	ldrb	r0, [r0]
 76c:	cmp	r0, #0
 770:	bne	7fc <fileno@plt+0x2d8>
 774:	mov	r4, r1
 778:	cmp	r1, #0
 77c:	bne	840 <fileno@plt+0x31c>
 780:	mov	r0, r7
 784:	bl	4f4 <malloc@plt>
 788:	cmp	r0, #0
 78c:	beq	840 <fileno@plt+0x31c>
 790:	mov	r6, r0
 794:	mov	r2, #0
 798:	mov	r0, r5
 79c:	mov	r1, r6
 7a0:	mov	r3, r7
 7a4:	bl	518 <setvbuf@plt>
 7a8:	cmp	r0, #0
 7ac:	bne	7b8 <fileno@plt+0x294>
 7b0:	sub	sp, fp, #24
 7b4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
 7b8:	ldr	r0, [pc, #284]	; 8dc <fileno@plt+0x3b8>
 7bc:	mov	r2, #5
 7c0:	ldr	r0, [pc, r0]
 7c4:	ldr	r4, [r0]
 7c8:	ldr	r1, [pc, #272]	; 8e0 <fileno@plt+0x3bc>
 7cc:	mov	r0, #0
 7d0:	add	r1, pc, r1
 7d4:	bl	4dc <dcgettext@plt>
 7d8:	mov	r7, r0
 7dc:	mov	r0, r5
 7e0:	bl	524 <fileno@plt>
 7e4:	cmp	r0, #2
 7e8:	bhi	87c <fileno@plt+0x358>
 7ec:	ldr	r1, [pc, #244]	; 8e8 <fileno@plt+0x3c4>
 7f0:	add	r1, pc, r1
 7f4:	ldr	r2, [r1, r0, lsl #2]
 7f8:	b	884 <fileno@plt+0x360>
 7fc:	ldr	r0, [pc, #192]	; 8c4 <fileno@plt+0x3a0>
 800:	mov	r2, #5
 804:	ldr	r0, [pc, r0]
 808:	ldr	r4, [r0]
 80c:	ldr	r1, [pc, #180]	; 8c8 <fileno@plt+0x3a4>
 810:	mov	r0, #0
 814:	add	r1, pc, r1
 818:	bl	4dc <dcgettext@plt>
 81c:	mov	r6, r0
 820:	mov	r0, r5
 824:	bl	524 <fileno@plt>
 828:	cmp	r0, #2
 82c:	bhi	8a4 <fileno@plt+0x380>
 830:	ldr	r1, [pc, #152]	; 8d0 <fileno@plt+0x3ac>
 834:	add	r1, pc, r1
 838:	ldr	r3, [r1, r0, lsl #2]
 83c:	b	8ac <fileno@plt+0x388>
 840:	ldr	r0, [pc, #140]	; 8d4 <fileno@plt+0x3b0>
 844:	mov	r2, #5
 848:	ldr	r0, [pc, r0]
 84c:	ldr	r5, [r0]
 850:	ldr	r1, [pc, #128]	; 8d8 <fileno@plt+0x3b4>
 854:	mov	r0, #0
 858:	add	r1, pc, r1
 85c:	bl	4dc <dcgettext@plt>
 860:	mov	r1, r0
 864:	mov	r0, r5
 868:	mov	r2, r7
 86c:	mov	r3, r4
 870:	bl	50c <fprintf@plt>
 874:	sub	sp, fp, #24
 878:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
 87c:	ldr	r2, [pc, #96]	; 8e4 <fileno@plt+0x3c0>
 880:	add	r2, pc, r2
 884:	mov	r0, r4
 888:	mov	r1, r7
 88c:	mov	r3, r8
 890:	bl	50c <fprintf@plt>
 894:	mov	r0, r6
 898:	bl	4c4 <free@plt>
 89c:	sub	sp, fp, #24
 8a0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
 8a4:	ldr	r3, [pc, #32]	; 8cc <fileno@plt+0x3a8>
 8a8:	add	r3, pc, r3
 8ac:	mov	r0, r4
 8b0:	mov	r1, r6
 8b4:	mov	r2, r8
 8b8:	bl	50c <fprintf@plt>
 8bc:	sub	sp, fp, #24
 8c0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
 8c4:	andeq	r0, r1, r0, lsr r8
 8c8:	strdeq	r0, [r0], -r6
 8cc:	andeq	r0, r0, pc, ror #1
 8d0:	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>
 8d4:	andeq	r0, r1, ip, ror #15
 8d8:	ldrdeq	r0, [r0], -r4
 8dc:	andeq	r0, r1, r4, ror r8
 8e0:	andeq	r0, r0, r9, lsl #3
 8e4:	andeq	r0, r0, r7, lsl r1
 8e8:	andeq	r0, r1, r4, lsl r7

Disassembly of section .fini:

000008ec <.fini>:
 8ec:	push	{r3, lr}
 8f0:	pop	{r3, pc}
