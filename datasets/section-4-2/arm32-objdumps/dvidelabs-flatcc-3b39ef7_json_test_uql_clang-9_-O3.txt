
../repos/dvidelabs-flatcc-3b39ef7/test/json_test/json_test_uql:     file format elf32-littlearm


Disassembly of section .init:

00014e0c <.init>:
   14e0c:	push	{r3, lr}
   14e10:	bl	14f8c <_start@@Base+0x3c>
   14e14:	pop	{r3, pc}

Disassembly of section .plt:

00014e18 <raise@plt-0x14>:
   14e18:	push	{lr}		; (str lr, [sp, #-4]!)
   14e1c:	ldr	lr, [pc, #4]	; 14e28 <raise@plt-0x4>
   14e20:	add	lr, pc, lr
   14e24:	ldr	pc, [lr, #8]!
   14e28:	ldrdeq	fp, [r4], -r8

00014e2c <raise@plt>:
   14e2c:	add	ip, pc, #0, 12
   14e30:	add	ip, ip, #307200	; 0x4b000
   14e34:	ldr	pc, [ip, #472]!	; 0x1d8

00014e38 <strcmp@plt>:
   14e38:	add	ip, pc, #0, 12
   14e3c:	add	ip, ip, #307200	; 0x4b000
   14e40:	ldr	pc, [ip, #464]!	; 0x1d0

00014e44 <memmove@plt>:
   14e44:	add	ip, pc, #0, 12
   14e48:	add	ip, ip, #307200	; 0x4b000
   14e4c:	ldr	pc, [ip, #456]!	; 0x1c8

00014e50 <free@plt>:
   14e50:	add	ip, pc, #0, 12
   14e54:	add	ip, ip, #307200	; 0x4b000
   14e58:	ldr	pc, [ip, #448]!	; 0x1c0

00014e5c <memcpy@plt>:
   14e5c:	add	ip, pc, #0, 12
   14e60:	add	ip, ip, #307200	; 0x4b000
   14e64:	ldr	pc, [ip, #440]!	; 0x1b8

00014e68 <__isinff@plt>:
   14e68:	add	ip, pc, #0, 12
   14e6c:	add	ip, ip, #307200	; 0x4b000
   14e70:	ldr	pc, [ip, #432]!	; 0x1b0

00014e74 <__isinf@plt>:
   14e74:	add	ip, pc, #0, 12
   14e78:	add	ip, ip, #307200	; 0x4b000
   14e7c:	ldr	pc, [ip, #424]!	; 0x1a8

00014e80 <realloc@plt>:
   14e80:	add	ip, pc, #0, 12
   14e84:	add	ip, ip, #307200	; 0x4b000
   14e88:	ldr	pc, [ip, #416]!	; 0x1a0

00014e8c <fwrite@plt>:
   14e8c:	add	ip, pc, #0, 12
   14e90:	add	ip, ip, #307200	; 0x4b000
   14e94:	ldr	pc, [ip, #408]!	; 0x198

00014e98 <malloc@plt>:
   14e98:	add	ip, pc, #0, 12
   14e9c:	add	ip, ip, #307200	; 0x4b000
   14ea0:	ldr	pc, [ip, #400]!	; 0x190

00014ea4 <__libc_start_main@plt>:
   14ea4:	add	ip, pc, #0, 12
   14ea8:	add	ip, ip, #307200	; 0x4b000
   14eac:	ldr	pc, [ip, #392]!	; 0x188

00014eb0 <__gmon_start__@plt>:
   14eb0:	add	ip, pc, #0, 12
   14eb4:	add	ip, ip, #307200	; 0x4b000
   14eb8:	ldr	pc, [ip, #384]!	; 0x180

00014ebc <bcmp@plt>:
   14ebc:	add	ip, pc, #0, 12
   14ec0:	add	ip, ip, #307200	; 0x4b000
   14ec4:	ldr	pc, [ip, #376]!	; 0x178

00014ec8 <strlen@plt>:
   14ec8:	add	ip, pc, #0, 12
   14ecc:	add	ip, ip, #307200	; 0x4b000
   14ed0:	ldr	pc, [ip, #368]!	; 0x170

00014ed4 <fprintf@plt>:
   14ed4:	add	ip, pc, #0, 12
   14ed8:	add	ip, ip, #307200	; 0x4b000
   14edc:	ldr	pc, [ip, #360]!	; 0x168

00014ee0 <posix_memalign@plt>:
   14ee0:	add	ip, pc, #0, 12
   14ee4:	add	ip, ip, #307200	; 0x4b000
   14ee8:	ldr	pc, [ip, #352]!	; 0x160

00014eec <memset@plt>:
   14eec:	add	ip, pc, #0, 12
   14ef0:	add	ip, ip, #307200	; 0x4b000
   14ef4:	ldr	pc, [ip, #344]!	; 0x158

00014ef8 <strncpy@plt>:
   14ef8:	add	ip, pc, #0, 12
   14efc:	add	ip, ip, #307200	; 0x4b000
   14f00:	ldr	pc, [ip, #336]!	; 0x150

00014f04 <strtod@plt>:
   14f04:	add	ip, pc, #0, 12
   14f08:	add	ip, ip, #307200	; 0x4b000
   14f0c:	ldr	pc, [ip, #328]!	; 0x148

00014f10 <memchr@plt>:
   14f10:	add	ip, pc, #0, 12
   14f14:	add	ip, ip, #307200	; 0x4b000
   14f18:	ldr	pc, [ip, #320]!	; 0x140

00014f1c <fputc@plt>:
   14f1c:	add	ip, pc, #0, 12
   14f20:	add	ip, ip, #307200	; 0x4b000
   14f24:	ldr	pc, [ip, #312]!	; 0x138

00014f28 <sprintf@plt>:
   14f28:	add	ip, pc, #0, 12
   14f2c:	add	ip, ip, #307200	; 0x4b000
   14f30:	ldr	pc, [ip, #304]!	; 0x130

00014f34 <abort@plt>:
   14f34:	add	ip, pc, #0, 12
   14f38:	add	ip, ip, #307200	; 0x4b000
   14f3c:	ldr	pc, [ip, #296]!	; 0x128

00014f40 <__assert_fail@plt>:
   14f40:	add	ip, pc, #0, 12
   14f44:	add	ip, ip, #307200	; 0x4b000
   14f48:	ldr	pc, [ip, #288]!	; 0x120

Disassembly of section .text:

00014f50 <_start@@Base>:
   14f50:	mov	fp, #0
   14f54:	mov	lr, #0
   14f58:	pop	{r1}		; (ldr r1, [sp], #4)
   14f5c:	mov	r2, sp
   14f60:	push	{r2}		; (str r2, [sp, #-4]!)
   14f64:	push	{r0}		; (str r0, [sp, #-4]!)
   14f68:	ldr	ip, [pc, #16]	; 14f80 <_start@@Base+0x30>
   14f6c:	push	{ip}		; (str ip, [sp, #-4]!)
   14f70:	ldr	r0, [pc, #12]	; 14f84 <_start@@Base+0x34>
   14f74:	ldr	r3, [pc, #12]	; 14f88 <_start@@Base+0x38>
   14f78:	bl	14ea4 <__libc_start_main@plt>
   14f7c:	bl	14f34 <abort@plt>
   14f80:	andeq	r8, r4, r0, asr #13
   14f84:	andeq	r6, r1, r4, lsr #1
   14f88:	andeq	r8, r4, r0, ror #12
   14f8c:	ldr	r3, [pc, #20]	; 14fa8 <_start@@Base+0x58>
   14f90:	ldr	r2, [pc, #20]	; 14fac <_start@@Base+0x5c>
   14f94:	add	r3, pc, r3
   14f98:	ldr	r2, [r3, r2]
   14f9c:	cmp	r2, #0
   14fa0:	bxeq	lr
   14fa4:	b	14eb0 <__gmon_start__@plt>
   14fa8:	andeq	fp, r4, r4, rrx
   14fac:	andeq	r0, r0, ip, rrx
   14fb0:	ldr	r0, [pc, #24]	; 14fd0 <_start@@Base+0x80>
   14fb4:	ldr	r3, [pc, #24]	; 14fd4 <_start@@Base+0x84>
   14fb8:	cmp	r3, r0
   14fbc:	bxeq	lr
   14fc0:	ldr	r3, [pc, #16]	; 14fd8 <_start@@Base+0x88>
   14fc4:	cmp	r3, #0
   14fc8:	bxeq	lr
   14fcc:	bx	r3
   14fd0:	andeq	r0, r6, r4, asr #6
   14fd4:	andeq	r0, r6, r4, asr #6
   14fd8:	andeq	r0, r0, r0
   14fdc:	ldr	r0, [pc, #36]	; 15008 <_start@@Base+0xb8>
   14fe0:	ldr	r1, [pc, #36]	; 1500c <_start@@Base+0xbc>
   14fe4:	sub	r1, r1, r0
   14fe8:	asr	r1, r1, #2
   14fec:	add	r1, r1, r1, lsr #31
   14ff0:	asrs	r1, r1, #1
   14ff4:	bxeq	lr
   14ff8:	ldr	r3, [pc, #16]	; 15010 <_start@@Base+0xc0>
   14ffc:	cmp	r3, #0
   15000:	bxeq	lr
   15004:	bx	r3
   15008:	andeq	r0, r6, r4, asr #6
   1500c:	andeq	r0, r6, r4, asr #6
   15010:	andeq	r0, r0, r0
   15014:	push	{r4, lr}
   15018:	ldr	r4, [pc, #24]	; 15038 <_start@@Base+0xe8>
   1501c:	ldrb	r3, [r4]
   15020:	cmp	r3, #0
   15024:	popne	{r4, pc}
   15028:	bl	14fb0 <_start@@Base+0x60>
   1502c:	mov	r3, #1
   15030:	strb	r3, [r4]
   15034:	pop	{r4, pc}
   15038:	andeq	r0, r6, r0, asr r3
   1503c:	b	14fdc <_start@@Base+0x8c>

00015040 <test_json@@Base>:
   15040:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15044:	add	fp, sp, #28
   15048:	sub	sp, sp, #372	; 0x174
   1504c:	mov	r6, r0
   15050:	add	r0, sp, #108	; 0x6c
   15054:	mov	r7, r3
   15058:	mov	r9, r2
   1505c:	mov	r4, r1
   15060:	bl	2fa94 <flatcc_builder_init@@Base>
   15064:	add	r0, sp, #16
   15068:	mov	r1, #0
   1506c:	bl	47b7c <flatcc_json_printer_init_dynamic_buffer@@Base>
   15070:	ldr	r0, [fp, #12]
   15074:	ldr	r5, [fp, #8]
   15078:	ldr	r8, [fp, #16]
   1507c:	uxtb	r1, r0
   15080:	tst	r0, #16
   15084:	ubfx	r2, r1, #3, #1
   15088:	strb	r2, [sp, #45]	; 0x2d
   1508c:	ubfx	r2, r1, #2, #1
   15090:	strb	r2, [sp, #44]	; 0x2c
   15094:	ubfx	r1, r1, #1, #1
   15098:	strb	r1, [sp, #43]	; 0x2b
   1509c:	and	r1, r0, #1
   150a0:	strb	r1, [sp, #42]	; 0x2a
   150a4:	movne	r1, #2
   150a8:	strbne	r1, [sp, #41]	; 0x29
   150ac:	tst	r0, #32
   150b0:	movne	r0, #0
   150b4:	strbne	r0, [sp, #43]	; 0x2b
   150b8:	movwne	r0, #258	; 0x102
   150bc:	strhne	r0, [sp, #41]	; 0x29
   150c0:	mov	r0, r4
   150c4:	bl	14ec8 <strlen@plt>
   150c8:	mov	r3, r0
   150cc:	ldm	r6, {r0, r1}
   150d0:	str	r5, [sp]
   150d4:	mov	r2, r4
   150d8:	stmib	sp, {r0, r1}
   150dc:	add	r0, sp, #108	; 0x6c
   150e0:	add	r1, sp, #64	; 0x40
   150e4:	bl	3adb0 <flatcc_json_parser_table_as_root@@Base>
   150e8:	cmp	r0, r7
   150ec:	bne	1519c <test_json@@Base+0x15c>
   150f0:	mov	r5, #0
   150f4:	cmp	r7, #0
   150f8:	beq	15104 <test_json@@Base+0xc4>
   150fc:	mov	r4, #0
   15100:	b	15178 <test_json@@Base+0x138>
   15104:	add	r0, sp, #108	; 0x6c
   15108:	sub	r1, fp, #56	; 0x38
   1510c:	bl	34534 <flatcc_builder_finalize_aligned_buffer@@Base>
   15110:	ldr	r2, [r6]
   15114:	ldr	r3, [r6, #12]
   15118:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1511c:	mov	r4, r0
   15120:	bl	35870 <flatcc_verify_table_as_root@@Base>
   15124:	cmp	r0, #0
   15128:	bne	15260 <test_json@@Base+0x220>
   1512c:	ldr	r0, [r6, #8]
   15130:	ldr	r3, [r6]
   15134:	ldr	r2, [fp, #-56]	; 0xffffffc8
   15138:	add	r6, sp, #16
   1513c:	mov	r1, r4
   15140:	str	r0, [sp]
   15144:	mov	r0, r6
   15148:	bl	47218 <flatcc_json_printer_table_as_root@@Base>
   1514c:	sub	r1, fp, #60	; 0x3c
   15150:	mov	r0, r6
   15154:	bl	47ca8 <flatcc_json_printer_get_buffer@@Base>
   15158:	mov	r6, r0
   1515c:	cmp	r0, #0
   15160:	beq	151d0 <test_json@@Base+0x190>
   15164:	mov	r0, r9
   15168:	mov	r1, r6
   1516c:	bl	14e38 <strcmp@plt>
   15170:	cmp	r0, #0
   15174:	bne	151d0 <test_json@@Base+0x190>
   15178:	mov	r0, r4
   1517c:	bl	34674 <flatcc_builder_aligned_free@@Base>
   15180:	add	r0, sp, #108	; 0x6c
   15184:	bl	3003c <flatcc_builder_clear@@Base>
   15188:	add	r0, sp, #16
   1518c:	bl	47d40 <flatcc_json_printer_clear@@Base>
   15190:	mov	r0, r5
   15194:	sub	sp, fp, #28
   15198:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1519c:	movw	r6, #840	; 0x348
   151a0:	cmp	r7, #0
   151a4:	movt	r6, #6
   151a8:	beq	1523c <test_json@@Base+0x1fc>
   151ac:	ldr	r5, [r6]
   151b0:	cmp	r0, #0
   151b4:	bne	152e0 <test_json@@Base+0x2a0>
   151b8:	mov	r0, r7
   151bc:	bl	36a7c <flatcc_json_parser_error_string@@Base>
   151c0:	movw	r1, #34554	; 0x86fa
   151c4:	mov	r3, r0
   151c8:	movt	r1, #4
   151cc:	b	15250 <test_json@@Base+0x210>
   151d0:	movw	r7, #840	; 0x348
   151d4:	movw	r1, #34768	; 0x87d0
   151d8:	mov	r2, r8
   151dc:	movt	r7, #6
   151e0:	movt	r1, #4
   151e4:	ldr	r0, [r7]
   151e8:	bl	14ed4 <fprintf@plt>
   151ec:	movw	r5, #48823	; 0xbeb7
   151f0:	ldr	r0, [r7]
   151f4:	mov	r2, r6
   151f8:	movt	r5, #4
   151fc:	mov	r1, r5
   15200:	bl	14ed4 <fprintf@plt>
   15204:	ldr	r3, [r7]
   15208:	movw	r0, #34821	; 0x8805
   1520c:	mov	r1, #10
   15210:	mov	r2, #1
   15214:	movt	r0, #4
   15218:	bl	14e8c <fwrite@plt>
   1521c:	ldr	r0, [r7]
   15220:	mov	r1, r5
   15224:	mov	r2, r9
   15228:	bl	14ed4 <fprintf@plt>
   1522c:	mvn	r5, #0
   15230:	cmp	r4, #0
   15234:	beq	150fc <test_json@@Base+0xbc>
   15238:	b	1529c <test_json@@Base+0x25c>
   1523c:	ldr	r5, [r6]
   15240:	bl	36a7c <flatcc_json_parser_error_string@@Base>
   15244:	movw	r1, #34618	; 0x873a
   15248:	mov	r3, r0
   1524c:	movt	r1, #4
   15250:	mov	r0, r5
   15254:	mov	r2, r8
   15258:	bl	14ed4 <fprintf@plt>
   1525c:	b	1531c <test_json@@Base+0x2dc>
   15260:	movw	r1, #840	; 0x348
   15264:	movt	r1, #6
   15268:	ldr	r5, [r1]
   1526c:	bl	34c2c <flatcc_verify_error_string@@Base>
   15270:	movw	r1, #34654	; 0x875e
   15274:	movw	r2, #34693	; 0x8785
   15278:	str	r0, [sp]
   1527c:	mov	r0, r5
   15280:	mov	r3, r8
   15284:	movt	r1, #4
   15288:	movt	r2, #4
   1528c:	bl	14ed4 <fprintf@plt>
   15290:	mvn	r5, #0
   15294:	cmp	r4, #0
   15298:	beq	150fc <test_json@@Base+0xbc>
   1529c:	movw	r0, #840	; 0x348
   152a0:	movw	r1, #48816	; 0xbeb0
   152a4:	movw	r2, #34832	; 0x8810
   152a8:	ldr	r9, [fp, #-56]	; 0xffffffc8
   152ac:	movt	r0, #6
   152b0:	movt	r1, #4
   152b4:	movt	r2, #4
   152b8:	ldr	r6, [r0]
   152bc:	mov	r0, r6
   152c0:	bl	14ed4 <fprintf@plt>
   152c4:	cmp	r9, #0
   152c8:	beq	15454 <test_json@@Base+0x414>
   152cc:	sub	r7, fp, #49	; 0x31
   152d0:	mov	r8, #0
   152d4:	ands	sl, r8, #15
   152d8:	bne	15404 <test_json@@Base+0x3c4>
   152dc:	b	153e4 <test_json@@Base+0x3a4>
   152e0:	bl	36a7c <flatcc_json_parser_error_string@@Base>
   152e4:	movw	r1, #34516	; 0x86d4
   152e8:	mov	r3, r0
   152ec:	mov	r0, r5
   152f0:	mov	r2, r8
   152f4:	movt	r1, #4
   152f8:	bl	14ed4 <fprintf@plt>
   152fc:	ldr	r5, [r6]
   15300:	mov	r0, r7
   15304:	bl	36a7c <flatcc_json_parser_error_string@@Base>
   15308:	movw	r1, #34587	; 0x871b
   1530c:	mov	r2, r0
   15310:	mov	r0, r5
   15314:	movt	r1, #4
   15318:	bl	14ed4 <fprintf@plt>
   1531c:	ldr	r0, [r6]
   15320:	movw	r1, #48823	; 0xbeb7
   15324:	mov	r2, r4
   15328:	movt	r1, #4
   1532c:	bl	14ed4 <fprintf@plt>
   15330:	ldr	r0, [sp, #84]	; 0x54
   15334:	ldr	r3, [r6]
   15338:	cmp	r0, #2
   1533c:	blt	15368 <test_json@@Base+0x328>
   15340:	mov	r4, #0
   15344:	mov	r0, #32
   15348:	mov	r1, r3
   1534c:	bl	14f1c <fputc@plt>
   15350:	ldr	r0, [sp, #84]	; 0x54
   15354:	ldr	r3, [r6]
   15358:	add	r4, r4, #1
   1535c:	sub	r0, r0, #1
   15360:	cmp	r4, r0
   15364:	blt	15344 <test_json@@Base+0x304>
   15368:	movw	r0, #34651	; 0x875b
   1536c:	mov	r1, #2
   15370:	mov	r2, #1
   15374:	movt	r0, #4
   15378:	bl	14e8c <fwrite@plt>
   1537c:	mvn	r5, #0
   15380:	b	150fc <test_json@@Base+0xbc>
   15384:	movw	r1, #48827	; 0xbebb
   15388:	mov	r0, r6
   1538c:	mov	r2, r8
   15390:	movt	r1, #4
   15394:	bl	14ed4 <fprintf@plt>
   15398:	ldrb	r2, [r4, r8]
   1539c:	movw	r1, #48835	; 0xbec3
   153a0:	mov	r0, r6
   153a4:	movt	r1, #4
   153a8:	bl	14ed4 <fprintf@plt>
   153ac:	ldrb	r0, [r4, r8]
   153b0:	add	r8, r8, #1
   153b4:	sub	r1, r0, #32
   153b8:	uxtb	r1, r1
   153bc:	cmp	r1, #94	; 0x5e
   153c0:	mov	r1, #0
   153c4:	movwhi	r0, #46	; 0x2e
   153c8:	cmp	r9, r8
   153cc:	strb	r0, [r7, sl]
   153d0:	add	r0, r7, sl
   153d4:	strb	r1, [r0, #1]
   153d8:	beq	1541c <test_json@@Base+0x3dc>
   153dc:	ands	sl, r8, #15
   153e0:	bne	15404 <test_json@@Base+0x3c4>
   153e4:	cmp	r8, #0
   153e8:	beq	15384 <test_json@@Base+0x344>
   153ec:	movw	r1, #48821	; 0xbeb5
   153f0:	mov	r0, r6
   153f4:	mov	r2, r7
   153f8:	movt	r1, #4
   153fc:	bl	14ed4 <fprintf@plt>
   15400:	b	15384 <test_json@@Base+0x344>
   15404:	tst	r8, #7
   15408:	bne	15398 <test_json@@Base+0x358>
   1540c:	mov	r0, #32
   15410:	mov	r1, r6
   15414:	bl	14f1c <fputc@plt>
   15418:	b	15398 <test_json@@Base+0x358>
   1541c:	tst	r9, #15
   15420:	beq	15454 <test_json@@Base+0x414>
   15424:	movw	r8, #48841	; 0xbec9
   15428:	add	r7, r9, #1
   1542c:	movt	r8, #4
   15430:	mov	r0, r8
   15434:	mov	r1, #3
   15438:	mov	r2, #1
   1543c:	mov	r3, r6
   15440:	bl	14e8c <fwrite@plt>
   15444:	add	r0, r7, #1
   15448:	tst	r7, #15
   1544c:	mov	r7, r0
   15450:	bne	15430 <test_json@@Base+0x3f0>
   15454:	movw	r1, #48821	; 0xbeb5
   15458:	sub	r2, fp, #49	; 0x31
   1545c:	mov	r0, r6
   15460:	movt	r1, #4
   15464:	bl	14ed4 <fprintf@plt>
   15468:	b	15178 <test_json@@Base+0x138>

0001546c <edge_case_tests@@Base>:
   1546c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15470:	add	fp, sp, #28
   15474:	sub	sp, sp, #60	; 0x3c
   15478:	movw	r4, #49772	; 0xc26c
   1547c:	movw	r1, #34846	; 0x881e
   15480:	movw	r2, #34895	; 0x884f
   15484:	mov	r0, #155	; 0x9b
   15488:	mov	sl, #0
   1548c:	mov	r3, #0
   15490:	movt	r4, #4
   15494:	movt	r1, #4
   15498:	movt	r2, #4
   1549c:	str	r0, [sp, #8]
   154a0:	str	sl, [sp]
   154a4:	str	sl, [sp, #4]
   154a8:	mov	r0, r4
   154ac:	bl	15040 <test_json@@Base>
   154b0:	movw	r5, #34925	; 0x886d
   154b4:	movw	r8, #34958	; 0x888e
   154b8:	str	r0, [fp, #-32]	; 0xffffffe0
   154bc:	mov	r9, #2
   154c0:	mov	r0, #168	; 0xa8
   154c4:	mov	r3, #0
   154c8:	movt	r5, #4
   154cc:	movt	r8, #4
   154d0:	stm	sp, {r9, sl}
   154d4:	str	r0, [sp, #8]
   154d8:	mov	r0, r4
   154dc:	mov	r1, r5
   154e0:	mov	r2, r8
   154e4:	bl	15040 <test_json@@Base>
   154e8:	movw	r1, #34992	; 0x88b0
   154ec:	movw	r2, #35031	; 0x88d7
   154f0:	str	r0, [fp, #-36]	; 0xffffffdc
   154f4:	mov	r0, #172	; 0xac
   154f8:	mov	r3, #0
   154fc:	str	sl, [sp]
   15500:	str	r9, [sp, #4]
   15504:	movt	r1, #4
   15508:	movt	r2, #4
   1550c:	str	r0, [sp, #8]
   15510:	mov	r0, r4
   15514:	bl	15040 <test_json@@Base>
   15518:	movw	r2, #35060	; 0x88f4
   1551c:	str	r0, [fp, #-40]	; 0xffffffd8
   15520:	mov	r0, #176	; 0xb0
   15524:	mov	r1, #4
   15528:	mov	r3, #0
   1552c:	str	r9, [sp]
   15530:	movt	r2, #4
   15534:	str	r1, [sp, #4]
   15538:	str	r0, [sp, #8]
   1553c:	mov	r0, r4
   15540:	mov	r1, r5
   15544:	bl	15040 <test_json@@Base>
   15548:	mov	r1, #8
   1554c:	movw	r2, #35113	; 0x8929
   15550:	str	r0, [sp, #44]	; 0x2c
   15554:	mov	r0, #180	; 0xb4
   15558:	mov	r3, #0
   1555c:	str	sl, [sp]
   15560:	str	r1, [sp, #4]
   15564:	movw	r1, #35079	; 0x8907
   15568:	movt	r2, #4
   1556c:	str	r0, [sp, #8]
   15570:	mov	r0, r4
   15574:	movt	r1, #4
   15578:	bl	15040 <test_json@@Base>
   1557c:	movw	r1, #35387	; 0x8a3b
   15580:	str	r0, [sp, #40]	; 0x28
   15584:	mov	r0, #195	; 0xc3
   15588:	stm	sp, {r9, sl}
   1558c:	mov	r2, r8
   15590:	mov	r3, #0
   15594:	movt	r1, #4
   15598:	str	r0, [sp, #8]
   1559c:	mov	r0, r4
   155a0:	bl	15040 <test_json@@Base>
   155a4:	movw	r5, #35425	; 0x8a61
   155a8:	movw	r7, #35475	; 0x8a93
   155ac:	str	r0, [sp, #36]	; 0x24
   155b0:	mov	r6, #1
   155b4:	mov	r0, #199	; 0xc7
   155b8:	mov	r3, #0
   155bc:	movt	r5, #4
   155c0:	movt	r7, #4
   155c4:	stm	sp, {r6, sl}
   155c8:	str	r0, [sp, #8]
   155cc:	mov	r0, r4
   155d0:	mov	r1, r5
   155d4:	mov	r2, r7
   155d8:	bl	15040 <test_json@@Base>
   155dc:	movw	r2, #35502	; 0x8aae
   155e0:	str	r0, [sp, #32]
   155e4:	mov	r0, #203	; 0xcb
   155e8:	mov	r1, r5
   155ec:	mov	r3, #0
   155f0:	str	r6, [sp]
   155f4:	str	r6, [sp, #4]
   155f8:	movt	r2, #4
   155fc:	str	r0, [sp, #8]
   15600:	mov	r0, r4
   15604:	bl	15040 <test_json@@Base>
   15608:	movw	r1, #35525	; 0x8ac5
   1560c:	str	r0, [sp, #28]
   15610:	mov	r0, #209	; 0xd1
   15614:	stm	sp, {r6, sl}
   15618:	mov	r2, r7
   1561c:	mov	r3, #0
   15620:	movt	r1, #4
   15624:	str	r0, [sp, #8]
   15628:	mov	r0, r4
   1562c:	bl	15040 <test_json@@Base>
   15630:	movw	r5, #35638	; 0x8b36
   15634:	str	r0, [sp, #24]
   15638:	mov	r0, #217	; 0xd9
   1563c:	stm	sp, {r9, sl}
   15640:	mov	r2, r8
   15644:	mov	r3, #0
   15648:	movt	r5, #4
   1564c:	str	r0, [sp, #8]
   15650:	mov	r0, r4
   15654:	mov	r1, r5
   15658:	bl	15040 <test_json@@Base>
   1565c:	movw	r1, #35667	; 0x8b53
   15660:	movw	r2, #35031	; 0x88d7
   15664:	str	r0, [sp, #20]
   15668:	mov	r0, #221	; 0xdd
   1566c:	mov	r3, #0
   15670:	str	sl, [sp]
   15674:	str	r9, [sp, #4]
   15678:	movt	r1, #4
   1567c:	movt	r2, #4
   15680:	str	r0, [sp, #8]
   15684:	mov	r0, r4
   15688:	bl	15040 <test_json@@Base>
   1568c:	movw	r2, #35060	; 0x88f4
   15690:	str	r0, [sp, #16]
   15694:	mov	r0, #225	; 0xe1
   15698:	mov	r1, #4
   1569c:	mov	r3, #0
   156a0:	str	r9, [sp]
   156a4:	movt	r2, #4
   156a8:	str	r1, [sp, #4]
   156ac:	str	r0, [sp, #8]
   156b0:	mov	r0, r4
   156b4:	mov	r1, r5
   156b8:	bl	15040 <test_json@@Base>
   156bc:	mov	r1, #8
   156c0:	movw	r2, #35719	; 0x8b87
   156c4:	str	r0, [sp, #12]
   156c8:	mov	r0, #229	; 0xe5
   156cc:	mov	r3, #0
   156d0:	str	sl, [sp]
   156d4:	str	r1, [sp, #4]
   156d8:	movw	r1, #35700	; 0x8b74
   156dc:	movt	r2, #4
   156e0:	str	r0, [sp, #8]
   156e4:	mov	r0, r4
   156e8:	movt	r1, #4
   156ec:	bl	15040 <test_json@@Base>
   156f0:	movw	r1, #35998	; 0x8c9e
   156f4:	mov	r5, r0
   156f8:	mov	r0, #233	; 0xe9
   156fc:	stm	sp, {r9, sl}
   15700:	mov	r2, r8
   15704:	mov	r3, #0
   15708:	movt	r1, #4
   1570c:	str	r0, [sp, #8]
   15710:	mov	r0, r4
   15714:	bl	15040 <test_json@@Base>
   15718:	movw	r9, #36030	; 0x8cbe
   1571c:	movw	r2, #35475	; 0x8a93
   15720:	mov	r8, r0
   15724:	mov	r0, #237	; 0xed
   15728:	stm	sp, {r6, sl}
   1572c:	mov	r3, #0
   15730:	movt	r9, #4
   15734:	movt	r2, #4
   15738:	str	r0, [sp, #8]
   1573c:	mov	r0, r4
   15740:	mov	r1, r9
   15744:	bl	15040 <test_json@@Base>
   15748:	movw	r2, #35502	; 0x8aae
   1574c:	mov	r7, r0
   15750:	mov	r0, #241	; 0xf1
   15754:	mov	r1, r9
   15758:	mov	r3, #0
   1575c:	str	r6, [sp]
   15760:	str	r6, [sp, #4]
   15764:	movt	r2, #4
   15768:	str	r0, [sp, #8]
   1576c:	mov	r0, r4
   15770:	bl	15040 <test_json@@Base>
   15774:	mov	r1, #247	; 0xf7
   15778:	stm	sp, {r6, sl}
   1577c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   15780:	mov	r3, #0
   15784:	str	r1, [sp, #8]
   15788:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1578c:	orr	r1, r2, r1
   15790:	ldr	r2, [fp, #-40]	; 0xffffffd8
   15794:	orr	r1, r1, r2
   15798:	ldr	r2, [sp, #44]	; 0x2c
   1579c:	orr	r1, r1, r2
   157a0:	ldr	r2, [sp, #40]	; 0x28
   157a4:	orr	r1, r1, r2
   157a8:	ldr	r2, [sp, #36]	; 0x24
   157ac:	orr	r1, r1, r2
   157b0:	ldr	r2, [sp, #32]
   157b4:	orr	r1, r1, r2
   157b8:	ldr	r2, [sp, #28]
   157bc:	orr	r1, r1, r2
   157c0:	ldr	r2, [sp, #24]
   157c4:	orr	r1, r1, r2
   157c8:	ldr	r2, [sp, #20]
   157cc:	orr	r1, r1, r2
   157d0:	ldr	r2, [sp, #16]
   157d4:	orr	r1, r1, r2
   157d8:	ldr	r2, [sp, #12]
   157dc:	orr	r1, r1, r2
   157e0:	movw	r2, #35475	; 0x8a93
   157e4:	orr	r1, r1, r5
   157e8:	movt	r2, #4
   157ec:	orr	r1, r1, r8
   157f0:	orr	r1, r1, r7
   157f4:	orr	r5, r1, r0
   157f8:	movw	r1, #36072	; 0x8ce8
   157fc:	mov	r0, r4
   15800:	movt	r1, #4
   15804:	bl	15040 <test_json@@Base>
   15808:	orr	r0, r5, r0
   1580c:	sub	sp, fp, #28
   15810:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00015814 <error_case_tests@@Base>:
   15814:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15818:	add	fp, sp, #28
   1581c:	sub	sp, sp, #60	; 0x3c
   15820:	movw	r4, #49772	; 0xc26c
   15824:	movw	r1, #36167	; 0x8d47
   15828:	movw	r0, #285	; 0x11d
   1582c:	mov	r6, #0
   15830:	mov	r2, #0
   15834:	mov	r3, #13
   15838:	movt	r4, #4
   1583c:	movt	r1, #4
   15840:	str	r0, [sp, #8]
   15844:	str	r6, [sp]
   15848:	str	r6, [sp, #4]
   1584c:	mov	r0, r4
   15850:	bl	15040 <test_json@@Base>
   15854:	movw	r1, #36193	; 0x8d61
   15858:	str	r0, [fp, #-32]	; 0xffffffe0
   1585c:	movw	r0, #287	; 0x11f
   15860:	mov	r2, #0
   15864:	mov	r3, #13
   15868:	str	r6, [sp]
   1586c:	str	r6, [sp, #4]
   15870:	movt	r1, #4
   15874:	str	r0, [sp, #8]
   15878:	mov	r0, r4
   1587c:	bl	15040 <test_json@@Base>
   15880:	movw	r1, #36290	; 0x8dc2
   15884:	str	r0, [fp, #-36]	; 0xffffffdc
   15888:	movw	r0, #289	; 0x121
   1588c:	mov	r2, #0
   15890:	mov	r3, #13
   15894:	str	r6, [sp]
   15898:	str	r6, [sp, #4]
   1589c:	movt	r1, #4
   158a0:	str	r0, [sp, #8]
   158a4:	mov	r0, r4
   158a8:	bl	15040 <test_json@@Base>
   158ac:	movw	r1, #36384	; 0x8e20
   158b0:	str	r0, [fp, #-40]	; 0xffffffd8
   158b4:	movw	r0, #291	; 0x123
   158b8:	mov	r2, #0
   158bc:	mov	r3, #13
   158c0:	str	r6, [sp]
   158c4:	str	r6, [sp, #4]
   158c8:	movt	r1, #4
   158cc:	str	r0, [sp, #8]
   158d0:	mov	r0, r4
   158d4:	bl	15040 <test_json@@Base>
   158d8:	movw	r1, #36472	; 0x8e78
   158dc:	str	r0, [sp, #44]	; 0x2c
   158e0:	movw	r0, #293	; 0x125
   158e4:	mov	r2, #0
   158e8:	mov	r3, #13
   158ec:	str	r6, [sp]
   158f0:	str	r6, [sp, #4]
   158f4:	movt	r1, #4
   158f8:	str	r0, [sp, #8]
   158fc:	mov	r0, r4
   15900:	bl	15040 <test_json@@Base>
   15904:	movw	r1, #36557	; 0x8ecd
   15908:	str	r0, [sp, #40]	; 0x28
   1590c:	mov	r0, #296	; 0x128
   15910:	mov	r2, #0
   15914:	mov	r3, #13
   15918:	str	r6, [sp]
   1591c:	str	r6, [sp, #4]
   15920:	movt	r1, #4
   15924:	str	r0, [sp, #8]
   15928:	mov	r0, r4
   1592c:	bl	15040 <test_json@@Base>
   15930:	movw	r1, #36715	; 0x8f6b
   15934:	str	r0, [sp, #36]	; 0x24
   15938:	movw	r0, #299	; 0x12b
   1593c:	mov	r2, #0
   15940:	mov	r3, #13
   15944:	str	r6, [sp]
   15948:	str	r6, [sp, #4]
   1594c:	movt	r1, #4
   15950:	str	r0, [sp, #8]
   15954:	mov	r0, r4
   15958:	bl	15040 <test_json@@Base>
   1595c:	movw	r1, #36870	; 0x9006
   15960:	str	r0, [sp, #32]
   15964:	movw	r0, #303	; 0x12f
   15968:	mov	r2, #0
   1596c:	mov	r3, #13
   15970:	str	r6, [sp]
   15974:	str	r6, [sp, #4]
   15978:	movt	r1, #4
   1597c:	str	r0, [sp, #8]
   15980:	mov	r0, r4
   15984:	bl	15040 <test_json@@Base>
   15988:	movw	r1, #37069	; 0x90cd
   1598c:	str	r0, [sp, #28]
   15990:	movw	r0, #307	; 0x133
   15994:	mov	r2, #0
   15998:	mov	r3, #13
   1599c:	str	r6, [sp]
   159a0:	str	r6, [sp, #4]
   159a4:	movt	r1, #4
   159a8:	str	r0, [sp, #8]
   159ac:	mov	r0, r4
   159b0:	bl	15040 <test_json@@Base>
   159b4:	movw	r1, #37268	; 0x9194
   159b8:	str	r0, [sp, #24]
   159bc:	movw	r0, #322	; 0x142
   159c0:	mov	r2, #0
   159c4:	mov	r3, #13
   159c8:	str	r6, [sp]
   159cc:	str	r6, [sp, #4]
   159d0:	movt	r1, #4
   159d4:	str	r0, [sp, #8]
   159d8:	mov	r0, r4
   159dc:	bl	15040 <test_json@@Base>
   159e0:	movw	r1, #37292	; 0x91ac
   159e4:	str	r0, [sp, #20]
   159e8:	mov	r0, #324	; 0x144
   159ec:	mov	r2, #0
   159f0:	mov	r3, #13
   159f4:	str	r6, [sp]
   159f8:	str	r6, [sp, #4]
   159fc:	movt	r1, #4
   15a00:	str	r0, [sp, #8]
   15a04:	mov	r0, r4
   15a08:	bl	15040 <test_json@@Base>
   15a0c:	movw	r1, #37377	; 0x9201
   15a10:	str	r0, [sp, #16]
   15a14:	movw	r0, #326	; 0x146
   15a18:	mov	r2, #0
   15a1c:	mov	r3, #13
   15a20:	str	r6, [sp]
   15a24:	str	r6, [sp, #4]
   15a28:	movt	r1, #4
   15a2c:	str	r0, [sp, #8]
   15a30:	mov	r0, r4
   15a34:	bl	15040 <test_json@@Base>
   15a38:	movw	r1, #37459	; 0x9253
   15a3c:	mov	r7, r0
   15a40:	mov	r0, #328	; 0x148
   15a44:	mov	r2, #0
   15a48:	mov	r3, #13
   15a4c:	str	r6, [sp]
   15a50:	str	r6, [sp, #4]
   15a54:	movt	r1, #4
   15a58:	str	r0, [sp, #8]
   15a5c:	mov	r0, r4
   15a60:	bl	15040 <test_json@@Base>
   15a64:	movw	r1, #37539	; 0x92a3
   15a68:	mov	r8, r0
   15a6c:	movw	r0, #330	; 0x14a
   15a70:	mov	r2, #0
   15a74:	mov	r3, #13
   15a78:	str	r6, [sp]
   15a7c:	str	r6, [sp, #4]
   15a80:	movt	r1, #4
   15a84:	str	r0, [sp, #8]
   15a88:	mov	r0, r4
   15a8c:	bl	15040 <test_json@@Base>
   15a90:	movw	r1, #37616	; 0x92f0
   15a94:	mov	r9, r0
   15a98:	movw	r0, #333	; 0x14d
   15a9c:	mov	r2, #0
   15aa0:	mov	r3, #13
   15aa4:	str	r6, [sp]
   15aa8:	str	r6, [sp, #4]
   15aac:	movt	r1, #4
   15ab0:	str	r0, [sp, #8]
   15ab4:	mov	r0, r4
   15ab8:	bl	15040 <test_json@@Base>
   15abc:	movw	r1, #37756	; 0x937c
   15ac0:	mov	sl, r0
   15ac4:	mov	r0, #336	; 0x150
   15ac8:	mov	r2, #0
   15acc:	mov	r3, #13
   15ad0:	str	r6, [sp]
   15ad4:	str	r6, [sp, #4]
   15ad8:	movt	r1, #4
   15adc:	str	r0, [sp, #8]
   15ae0:	mov	r0, r4
   15ae4:	bl	15040 <test_json@@Base>
   15ae8:	movw	r1, #37893	; 0x9405
   15aec:	mov	r5, r0
   15af0:	mov	r0, #340	; 0x154
   15af4:	mov	r2, #0
   15af8:	mov	r3, #13
   15afc:	str	r6, [sp]
   15b00:	str	r6, [sp, #4]
   15b04:	movt	r1, #4
   15b08:	str	r0, [sp, #8]
   15b0c:	mov	r0, r4
   15b10:	bl	15040 <test_json@@Base>
   15b14:	mov	r1, #344	; 0x158
   15b18:	ldr	r2, [fp, #-36]	; 0xffffffdc
   15b1c:	mov	r3, #13
   15b20:	str	r6, [sp]
   15b24:	str	r6, [sp, #4]
   15b28:	str	r1, [sp, #8]
   15b2c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   15b30:	orr	r1, r2, r1
   15b34:	ldr	r2, [fp, #-40]	; 0xffffffd8
   15b38:	orr	r1, r1, r2
   15b3c:	ldr	r2, [sp, #44]	; 0x2c
   15b40:	orr	r1, r1, r2
   15b44:	ldr	r2, [sp, #40]	; 0x28
   15b48:	orr	r1, r1, r2
   15b4c:	ldr	r2, [sp, #36]	; 0x24
   15b50:	orr	r1, r1, r2
   15b54:	ldr	r2, [sp, #32]
   15b58:	orr	r1, r1, r2
   15b5c:	ldr	r2, [sp, #28]
   15b60:	orr	r1, r1, r2
   15b64:	ldr	r2, [sp, #24]
   15b68:	orr	r1, r1, r2
   15b6c:	ldr	r2, [sp, #20]
   15b70:	orr	r1, r1, r2
   15b74:	ldr	r2, [sp, #16]
   15b78:	orr	r1, r1, r2
   15b7c:	mov	r2, #0
   15b80:	orr	r1, r1, r7
   15b84:	orr	r1, r1, r8
   15b88:	orr	r1, r1, r9
   15b8c:	orr	r1, r1, sl
   15b90:	orr	r1, r1, r5
   15b94:	orr	r5, r1, r0
   15b98:	movw	r1, #38068	; 0x94b4
   15b9c:	mov	r0, r4
   15ba0:	movt	r1, #4
   15ba4:	bl	15040 <test_json@@Base>
   15ba8:	orr	r0, r5, r0
   15bac:	sub	sp, fp, #28
   15bb0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00015bb4 <base64_tests@@Base>:
   15bb4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15bb8:	add	fp, sp, #28
   15bbc:	sub	sp, sp, #28
   15bc0:	movw	r4, #49772	; 0xc26c
   15bc4:	movw	r1, #38243	; 0x9563
   15bc8:	movw	r2, #35060	; 0x88f4
   15bcc:	movw	r0, #369	; 0x171
   15bd0:	mov	r5, #0
   15bd4:	mov	r3, #0
   15bd8:	movt	r4, #4
   15bdc:	movt	r1, #4
   15be0:	movt	r2, #4
   15be4:	str	r0, [sp, #8]
   15be8:	str	r5, [sp]
   15bec:	str	r5, [sp, #4]
   15bf0:	mov	r0, r4
   15bf4:	bl	15040 <test_json@@Base>
   15bf8:	movw	r1, #38265	; 0x9579
   15bfc:	movw	r2, #38304	; 0x95a0
   15c00:	str	r0, [sp, #24]
   15c04:	mov	r0, #372	; 0x174
   15c08:	mov	r3, #0
   15c0c:	str	r5, [sp]
   15c10:	str	r5, [sp, #4]
   15c14:	movt	r1, #4
   15c18:	movt	r2, #4
   15c1c:	str	r0, [sp, #8]
   15c20:	mov	r0, r4
   15c24:	bl	15040 <test_json@@Base>
   15c28:	movw	r6, #38524	; 0x967c
   15c2c:	movw	r1, #38339	; 0x95c3
   15c30:	str	r0, [sp, #20]
   15c34:	mov	r0, #376	; 0x178
   15c38:	mov	r3, #0
   15c3c:	str	r5, [sp]
   15c40:	str	r5, [sp, #4]
   15c44:	movt	r6, #4
   15c48:	movt	r1, #4
   15c4c:	str	r0, [sp, #8]
   15c50:	mov	r0, r4
   15c54:	mov	r2, r6
   15c58:	bl	15040 <test_json@@Base>
   15c5c:	movw	r7, #38892	; 0x97ec
   15c60:	movw	r1, #38704	; 0x9730
   15c64:	str	r0, [sp, #16]
   15c68:	movw	r0, #379	; 0x17b
   15c6c:	mov	r3, #0
   15c70:	str	r5, [sp]
   15c74:	str	r5, [sp, #4]
   15c78:	movt	r7, #4
   15c7c:	movt	r1, #4
   15c80:	str	r0, [sp, #8]
   15c84:	mov	r0, r4
   15c88:	mov	r2, r7
   15c8c:	bl	15040 <test_json@@Base>
   15c90:	movw	r1, #39075	; 0x98a3
   15c94:	str	r0, [sp, #12]
   15c98:	movw	r0, #382	; 0x17e
   15c9c:	mov	r2, r6
   15ca0:	mov	r3, #0
   15ca4:	str	r5, [sp]
   15ca8:	str	r5, [sp, #4]
   15cac:	movt	r1, #4
   15cb0:	str	r0, [sp, #8]
   15cb4:	mov	r0, r4
   15cb8:	bl	15040 <test_json@@Base>
   15cbc:	movw	r1, #39258	; 0x995a
   15cc0:	mov	r6, r0
   15cc4:	movw	r0, #385	; 0x181
   15cc8:	mov	r2, r7
   15ccc:	mov	r3, #0
   15cd0:	str	r5, [sp]
   15cd4:	str	r5, [sp, #4]
   15cd8:	movt	r1, #4
   15cdc:	str	r0, [sp, #8]
   15ce0:	mov	r0, r4
   15ce4:	bl	15040 <test_json@@Base>
   15ce8:	movw	r1, #39444	; 0x9a14
   15cec:	mov	r7, r0
   15cf0:	mov	r0, #388	; 0x184
   15cf4:	mov	r2, #0
   15cf8:	mov	r3, #31
   15cfc:	str	r5, [sp]
   15d00:	str	r5, [sp, #4]
   15d04:	movt	r1, #4
   15d08:	str	r0, [sp, #8]
   15d0c:	mov	r0, r4
   15d10:	bl	15040 <test_json@@Base>
   15d14:	movw	r1, #39629	; 0x9acd
   15d18:	mov	r8, r0
   15d1c:	movw	r0, #391	; 0x187
   15d20:	mov	r2, #0
   15d24:	mov	r3, #32
   15d28:	str	r5, [sp]
   15d2c:	str	r5, [sp, #4]
   15d30:	movt	r1, #4
   15d34:	str	r0, [sp, #8]
   15d38:	mov	r0, r4
   15d3c:	bl	15040 <test_json@@Base>
   15d40:	movw	sl, #40025	; 0x9c59
   15d44:	movw	r1, #39817	; 0x9b89
   15d48:	mov	r9, r0
   15d4c:	movw	r0, #406	; 0x196
   15d50:	mov	r3, #0
   15d54:	str	r5, [sp]
   15d58:	str	r5, [sp, #4]
   15d5c:	movt	sl, #4
   15d60:	movt	r1, #4
   15d64:	str	r0, [sp, #8]
   15d68:	mov	r0, r4
   15d6c:	mov	r2, sl
   15d70:	bl	15040 <test_json@@Base>
   15d74:	movw	r1, #419	; 0x1a3
   15d78:	ldr	r2, [sp, #20]
   15d7c:	str	r5, [sp]
   15d80:	str	r5, [sp, #4]
   15d84:	mov	r3, #0
   15d88:	str	r1, [sp, #8]
   15d8c:	ldr	r1, [sp, #24]
   15d90:	orr	r1, r2, r1
   15d94:	ldr	r2, [sp, #16]
   15d98:	orr	r1, r1, r2
   15d9c:	ldr	r2, [sp, #12]
   15da0:	orr	r1, r1, r2
   15da4:	mov	r2, sl
   15da8:	orr	r1, r1, r6
   15dac:	orr	r1, r1, r7
   15db0:	orr	r1, r1, r8
   15db4:	orr	r1, r1, r9
   15db8:	orr	r5, r1, r0
   15dbc:	movw	r1, #40238	; 0x9d2e
   15dc0:	mov	r0, r4
   15dc4:	movt	r1, #4
   15dc8:	bl	15040 <test_json@@Base>
   15dcc:	orr	r0, r5, r0
   15dd0:	sub	sp, fp, #28
   15dd4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00015dd8 <mixed_type_union_tests@@Base>:
   15dd8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15ddc:	add	fp, sp, #28
   15de0:	sub	sp, sp, #20
   15de4:	movw	r4, #49788	; 0xc27c
   15de8:	movw	r1, #40442	; 0x9dfa
   15dec:	movw	r2, #40521	; 0x9e49
   15df0:	mov	r0, #432	; 0x1b0
   15df4:	mov	r8, #0
   15df8:	mov	r3, #0
   15dfc:	movt	r4, #4
   15e00:	movt	r1, #4
   15e04:	movt	r2, #4
   15e08:	str	r0, [sp, #8]
   15e0c:	str	r8, [sp]
   15e10:	str	r8, [sp, #4]
   15e14:	mov	r0, r4
   15e18:	bl	15040 <test_json@@Base>
   15e1c:	movw	r9, #40723	; 0x9f13
   15e20:	movw	r1, #40592	; 0x9e90
   15e24:	str	r0, [sp, #16]
   15e28:	movw	r0, #437	; 0x1b5
   15e2c:	mov	r3, #0
   15e30:	str	r8, [sp]
   15e34:	str	r8, [sp, #4]
   15e38:	movt	r9, #4
   15e3c:	movt	r1, #4
   15e40:	str	r0, [sp, #8]
   15e44:	mov	r0, r4
   15e48:	mov	r2, r9
   15e4c:	bl	15040 <test_json@@Base>
   15e50:	movw	r1, #40842	; 0x9f8a
   15e54:	mov	sl, r0
   15e58:	movw	r0, #442	; 0x1ba
   15e5c:	mov	r2, r9
   15e60:	mov	r3, #0
   15e64:	str	r8, [sp]
   15e68:	str	r8, [sp, #4]
   15e6c:	movt	r1, #4
   15e70:	str	r0, [sp, #8]
   15e74:	mov	r0, r4
   15e78:	bl	15040 <test_json@@Base>
   15e7c:	movw	r1, #40992	; 0xa020
   15e80:	movw	r2, #41213	; 0xa0fd
   15e84:	mov	r5, r0
   15e88:	movw	r0, #449	; 0x1c1
   15e8c:	mov	r3, #0
   15e90:	str	r8, [sp]
   15e94:	str	r8, [sp, #4]
   15e98:	movt	r1, #4
   15e9c:	movt	r2, #4
   15ea0:	str	r0, [sp, #8]
   15ea4:	mov	r0, r4
   15ea8:	bl	15040 <test_json@@Base>
   15eac:	movw	r1, #41398	; 0xa1b6
   15eb0:	movw	r2, #41660	; 0xa2bc
   15eb4:	mov	r6, r0
   15eb8:	movw	r0, #458	; 0x1ca
   15ebc:	mov	r3, #0
   15ec0:	str	r8, [sp]
   15ec4:	str	r8, [sp, #4]
   15ec8:	movt	r1, #4
   15ecc:	movt	r2, #4
   15ed0:	str	r0, [sp, #8]
   15ed4:	mov	r0, r4
   15ed8:	bl	15040 <test_json@@Base>
   15edc:	movw	r1, #41882	; 0xa39a
   15ee0:	movw	r2, #42267	; 0xa51b
   15ee4:	mov	r7, r0
   15ee8:	movw	r0, #469	; 0x1d5
   15eec:	mov	r3, #0
   15ef0:	str	r8, [sp]
   15ef4:	str	r8, [sp, #4]
   15ef8:	movt	r1, #4
   15efc:	movt	r2, #4
   15f00:	str	r0, [sp, #8]
   15f04:	mov	r0, r4
   15f08:	bl	15040 <test_json@@Base>
   15f0c:	movw	r1, #474	; 0x1da
   15f10:	mov	r2, r9
   15f14:	mov	r3, #0
   15f18:	str	r8, [sp]
   15f1c:	str	r8, [sp, #4]
   15f20:	str	r1, [sp, #8]
   15f24:	ldr	r1, [sp, #16]
   15f28:	orr	r1, sl, r1
   15f2c:	orr	r1, r1, r5
   15f30:	orr	r1, r1, r6
   15f34:	orr	r1, r1, r7
   15f38:	orr	r5, r1, r0
   15f3c:	movw	r1, #42593	; 0xa661
   15f40:	mov	r0, r4
   15f44:	movt	r1, #4
   15f48:	bl	15040 <test_json@@Base>
   15f4c:	orr	r0, r5, r0
   15f50:	sub	sp, fp, #28
   15f54:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00015f58 <union_vector_tests@@Base>:
   15f58:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   15f5c:	add	fp, sp, #28
   15f60:	sub	sp, sp, #12
   15f64:	movw	r4, #49804	; 0xc28c
   15f68:	movw	r8, #42798	; 0xa72e
   15f6c:	movw	r1, #42734	; 0xa6ee
   15f70:	movw	r0, #485	; 0x1e5
   15f74:	mov	r7, #0
   15f78:	mov	r3, #0
   15f7c:	movt	r8, #4
   15f80:	movt	r4, #4
   15f84:	movt	r1, #4
   15f88:	str	r0, [sp, #8]
   15f8c:	str	r7, [sp]
   15f90:	str	r7, [sp, #4]
   15f94:	mov	r0, r4
   15f98:	mov	r2, r8
   15f9c:	bl	15040 <test_json@@Base>
   15fa0:	movw	r1, #42854	; 0xa766
   15fa4:	movw	r2, #42905	; 0xa799
   15fa8:	mov	r9, r0
   15fac:	mov	r0, #488	; 0x1e8
   15fb0:	mov	r3, #0
   15fb4:	str	r7, [sp]
   15fb8:	str	r7, [sp, #4]
   15fbc:	movt	r1, #4
   15fc0:	movt	r2, #4
   15fc4:	str	r0, [sp, #8]
   15fc8:	mov	r0, r4
   15fcc:	bl	15040 <test_json@@Base>
   15fd0:	movw	r1, #42948	; 0xa7c4
   15fd4:	movw	r2, #43025	; 0xa811
   15fd8:	mov	sl, r0
   15fdc:	movw	r0, #491	; 0x1eb
   15fe0:	mov	r3, #0
   15fe4:	str	r7, [sp]
   15fe8:	str	r7, [sp, #4]
   15fec:	movt	r1, #4
   15ff0:	movt	r2, #4
   15ff4:	str	r0, [sp, #8]
   15ff8:	mov	r0, r4
   15ffc:	bl	15040 <test_json@@Base>
   16000:	movw	r1, #43093	; 0xa855
   16004:	movw	r2, #43218	; 0xa8d2
   16008:	mov	r6, r0
   1600c:	movw	r0, #494	; 0x1ee
   16010:	mov	r3, #0
   16014:	str	r7, [sp]
   16018:	str	r7, [sp, #4]
   1601c:	movt	r1, #4
   16020:	movt	r2, #4
   16024:	str	r0, [sp, #8]
   16028:	mov	r0, r4
   1602c:	bl	15040 <test_json@@Base>
   16030:	movw	r1, #43326	; 0xa93e
   16034:	mov	r5, r0
   16038:	movw	r0, #497	; 0x1f1
   1603c:	mov	r2, r8
   16040:	mov	r3, #0
   16044:	str	r7, [sp]
   16048:	str	r7, [sp, #4]
   1604c:	movt	r1, #4
   16050:	str	r0, [sp, #8]
   16054:	mov	r0, r4
   16058:	bl	15040 <test_json@@Base>
   1605c:	mov	r1, #500	; 0x1f4
   16060:	movw	r2, #43491	; 0xa9e3
   16064:	mov	r3, #0
   16068:	str	r7, [sp]
   1606c:	str	r7, [sp, #4]
   16070:	str	r1, [sp, #8]
   16074:	orr	r1, sl, r9
   16078:	movt	r2, #4
   1607c:	orr	r1, r1, r6
   16080:	orr	r1, r1, r5
   16084:	orr	r5, r1, r0
   16088:	movw	r1, #43389	; 0xa97d
   1608c:	mov	r0, r4
   16090:	movt	r1, #4
   16094:	bl	15040 <test_json@@Base>
   16098:	orr	r0, r5, r0
   1609c:	sub	sp, fp, #28
   160a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000160a4 <main@@Base>:
   160a4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   160a8:	add	fp, sp, #28
   160ac:	sub	sp, sp, #284	; 0x11c
   160b0:	bl	1546c <edge_case_tests@@Base>
   160b4:	str	r0, [fp, #-32]	; 0xffffffe0
   160b8:	bl	15814 <error_case_tests@@Base>
   160bc:	str	r0, [fp, #-36]	; 0xffffffdc
   160c0:	bl	15f58 <union_vector_tests@@Base>
   160c4:	str	r0, [fp, #-40]	; 0xffffffd8
   160c8:	bl	15bb4 <base64_tests@@Base>
   160cc:	str	r0, [fp, #-44]	; 0xffffffd4
   160d0:	bl	15dd8 <mixed_type_union_tests@@Base>
   160d4:	movw	r4, #49772	; 0xc26c
   160d8:	movw	sl, #35060	; 0x88f4
   160dc:	movw	r1, #43583	; 0xaa3f
   160e0:	str	r0, [fp, #-48]	; 0xffffffd0
   160e4:	movw	r0, #525	; 0x20d
   160e8:	mov	r8, #0
   160ec:	mov	r3, #0
   160f0:	movt	sl, #4
   160f4:	movt	r4, #4
   160f8:	movt	r1, #4
   160fc:	str	r0, [sp, #8]
   16100:	str	r8, [sp]
   16104:	str	r8, [sp, #4]
   16108:	mov	r0, r4
   1610c:	mov	r2, sl
   16110:	bl	15040 <test_json@@Base>
   16114:	movw	r7, #43645	; 0xaa7d
   16118:	movw	r1, #43606	; 0xaa56
   1611c:	str	r0, [fp, #-52]	; 0xffffffcc
   16120:	mov	r0, #528	; 0x210
   16124:	mov	r3, #0
   16128:	str	r8, [sp]
   1612c:	str	r8, [sp, #4]
   16130:	movt	r7, #4
   16134:	movt	r1, #4
   16138:	str	r0, [sp, #8]
   1613c:	mov	r0, r4
   16140:	mov	r2, r7
   16144:	bl	15040 <test_json@@Base>
   16148:	movw	r6, #43718	; 0xaac6
   1614c:	movw	r1, #43678	; 0xaa9e
   16150:	str	r0, [fp, #-56]	; 0xffffffc8
   16154:	movw	r0, #531	; 0x213
   16158:	mov	r3, #0
   1615c:	str	r8, [sp]
   16160:	str	r8, [sp, #4]
   16164:	movt	r6, #4
   16168:	movt	r1, #4
   1616c:	str	r0, [sp, #8]
   16170:	mov	r0, r4
   16174:	mov	r2, r6
   16178:	bl	15040 <test_json@@Base>
   1617c:	movw	r9, #43802	; 0xab1a
   16180:	movw	r1, #43753	; 0xaae9
   16184:	str	r0, [fp, #-60]	; 0xffffffc4
   16188:	movw	r0, #534	; 0x216
   1618c:	mov	r3, #0
   16190:	str	r8, [sp]
   16194:	str	r8, [sp, #4]
   16198:	movt	r9, #4
   1619c:	movt	r1, #4
   161a0:	str	r0, [sp, #8]
   161a4:	mov	r0, r4
   161a8:	mov	r2, r9
   161ac:	bl	15040 <test_json@@Base>
   161b0:	movw	r1, #43846	; 0xab46
   161b4:	str	r0, [fp, #-64]	; 0xffffffc0
   161b8:	movw	r0, #537	; 0x219
   161bc:	mov	r2, r9
   161c0:	mov	r3, #0
   161c4:	str	r8, [sp]
   161c8:	str	r8, [sp, #4]
   161cc:	movt	r1, #4
   161d0:	str	r0, [sp, #8]
   161d4:	mov	r0, r4
   161d8:	bl	15040 <test_json@@Base>
   161dc:	movw	r1, #43904	; 0xab80
   161e0:	str	r0, [fp, #-68]	; 0xffffffbc
   161e4:	mov	r0, #540	; 0x21c
   161e8:	mov	r2, r7
   161ec:	mov	r3, #0
   161f0:	str	r8, [sp]
   161f4:	str	r8, [sp, #4]
   161f8:	movt	r1, #4
   161fc:	str	r0, [sp, #8]
   16200:	mov	r0, r4
   16204:	bl	15040 <test_json@@Base>
   16208:	movw	r1, #43942	; 0xaba6
   1620c:	str	r0, [fp, #-72]	; 0xffffffb8
   16210:	movw	r0, #543	; 0x21f
   16214:	mov	r2, r6
   16218:	mov	r3, #0
   1621c:	str	r8, [sp]
   16220:	str	r8, [sp, #4]
   16224:	movt	r1, #4
   16228:	str	r0, [sp, #8]
   1622c:	mov	r0, r4
   16230:	bl	15040 <test_json@@Base>
   16234:	movw	r1, #43983	; 0xabcf
   16238:	str	r0, [fp, #-76]	; 0xffffffb4
   1623c:	movw	r0, #547	; 0x223
   16240:	mov	r2, sl
   16244:	mov	r3, #0
   16248:	str	r8, [sp]
   1624c:	str	r8, [sp, #4]
   16250:	movt	r1, #4
   16254:	str	r0, [sp, #8]
   16258:	mov	r0, r4
   1625c:	bl	15040 <test_json@@Base>
   16260:	movw	r1, #34925	; 0x886d
   16264:	str	r0, [fp, #-80]	; 0xffffffb0
   16268:	movw	r0, #551	; 0x227
   1626c:	mov	r2, sl
   16270:	mov	r3, #0
   16274:	str	r8, [sp]
   16278:	str	r8, [sp, #4]
   1627c:	movt	r1, #4
   16280:	str	r0, [sp, #8]
   16284:	mov	r0, r4
   16288:	bl	15040 <test_json@@Base>
   1628c:	movw	r1, #44022	; 0xabf6
   16290:	str	r0, [fp, #-84]	; 0xffffffac
   16294:	movw	r0, #555	; 0x22b
   16298:	mov	r2, sl
   1629c:	mov	r3, #0
   162a0:	str	r8, [sp]
   162a4:	str	r8, [sp, #4]
   162a8:	movt	r1, #4
   162ac:	str	r0, [sp, #8]
   162b0:	mov	r0, r4
   162b4:	bl	15040 <test_json@@Base>
   162b8:	movw	r1, #44043	; 0xac0b
   162bc:	str	r0, [fp, #-88]	; 0xffffffa8
   162c0:	movw	r0, #558	; 0x22e
   162c4:	mov	r2, r7
   162c8:	mov	r3, #0
   162cc:	str	r8, [sp]
   162d0:	str	r8, [sp, #4]
   162d4:	movt	r1, #4
   162d8:	str	r0, [sp, #8]
   162dc:	mov	r0, r4
   162e0:	bl	15040 <test_json@@Base>
   162e4:	movw	r1, #44078	; 0xac2e
   162e8:	str	r0, [fp, #-92]	; 0xffffffa4
   162ec:	movw	r0, #561	; 0x231
   162f0:	mov	r2, r6
   162f4:	mov	r3, #0
   162f8:	str	r8, [sp]
   162fc:	str	r8, [sp, #4]
   16300:	movt	r1, #4
   16304:	str	r0, [sp, #8]
   16308:	mov	r0, r4
   1630c:	bl	15040 <test_json@@Base>
   16310:	movw	r1, #44114	; 0xac52
   16314:	str	r0, [fp, #-96]	; 0xffffffa0
   16318:	mov	r0, #564	; 0x234
   1631c:	mov	r2, r9
   16320:	mov	r3, #0
   16324:	str	r8, [sp]
   16328:	str	r8, [sp, #4]
   1632c:	movt	r1, #4
   16330:	str	r0, [sp, #8]
   16334:	mov	r0, r4
   16338:	bl	15040 <test_json@@Base>
   1633c:	movw	r1, #44159	; 0xac7f
   16340:	str	r0, [fp, #-100]	; 0xffffff9c
   16344:	movw	r0, #567	; 0x237
   16348:	mov	r2, r9
   1634c:	mov	r3, #0
   16350:	str	r8, [sp]
   16354:	str	r8, [sp, #4]
   16358:	movt	r1, #4
   1635c:	str	r0, [sp, #8]
   16360:	mov	r0, r4
   16364:	bl	15040 <test_json@@Base>
   16368:	movw	r1, #44213	; 0xacb5
   1636c:	str	r0, [fp, #-104]	; 0xffffff98
   16370:	movw	r0, #570	; 0x23a
   16374:	mov	r2, r7
   16378:	mov	r3, #0
   1637c:	str	r8, [sp]
   16380:	str	r8, [sp, #4]
   16384:	movt	r1, #4
   16388:	str	r0, [sp, #8]
   1638c:	mov	r0, r4
   16390:	bl	15040 <test_json@@Base>
   16394:	movw	r1, #44245	; 0xacd5
   16398:	str	r0, [fp, #-108]	; 0xffffff94
   1639c:	movw	r0, #573	; 0x23d
   163a0:	mov	r2, r6
   163a4:	mov	r3, #0
   163a8:	str	r8, [sp]
   163ac:	str	r8, [sp, #4]
   163b0:	movt	r1, #4
   163b4:	str	r0, [sp, #8]
   163b8:	mov	r0, r4
   163bc:	bl	15040 <test_json@@Base>
   163c0:	movw	r1, #44279	; 0xacf7
   163c4:	str	r0, [fp, #-112]	; 0xffffff90
   163c8:	movw	r0, #577	; 0x241
   163cc:	mov	r2, sl
   163d0:	mov	r3, #0
   163d4:	str	r8, [sp]
   163d8:	str	r8, [sp, #4]
   163dc:	movt	r1, #4
   163e0:	str	r0, [sp, #8]
   163e4:	mov	r0, r4
   163e8:	bl	15040 <test_json@@Base>
   163ec:	movw	r1, #35638	; 0x8b36
   163f0:	str	r0, [fp, #-116]	; 0xffffff8c
   163f4:	movw	r0, #581	; 0x245
   163f8:	mov	r2, sl
   163fc:	mov	r3, #0
   16400:	str	r8, [sp]
   16404:	str	r8, [sp, #4]
   16408:	movt	r1, #4
   1640c:	str	r0, [sp, #8]
   16410:	mov	r0, r4
   16414:	bl	15040 <test_json@@Base>
   16418:	movw	r5, #44350	; 0xad3e
   1641c:	movw	r1, #44312	; 0xad18
   16420:	str	r0, [fp, #-120]	; 0xffffff88
   16424:	movw	r0, #585	; 0x249
   16428:	mov	r3, #0
   1642c:	str	r8, [sp]
   16430:	str	r8, [sp, #4]
   16434:	movt	r5, #4
   16438:	movt	r1, #4
   1643c:	str	r0, [sp, #8]
   16440:	mov	r0, r4
   16444:	mov	r2, r5
   16448:	bl	15040 <test_json@@Base>
   1644c:	movw	r1, #44389	; 0xad65
   16450:	str	r0, [fp, #-124]	; 0xffffff84
   16454:	movw	r0, #591	; 0x24f
   16458:	mov	r2, r5
   1645c:	mov	r3, #0
   16460:	str	r8, [sp]
   16464:	str	r8, [sp, #4]
   16468:	movt	r1, #4
   1646c:	str	r0, [sp, #8]
   16470:	mov	r0, r4
   16474:	bl	15040 <test_json@@Base>
   16478:	movw	r1, #44426	; 0xad8a
   1647c:	str	r0, [fp, #-128]	; 0xffffff80
   16480:	movw	r0, #594	; 0x252
   16484:	mov	r2, r5
   16488:	mov	r3, #0
   1648c:	str	r8, [sp]
   16490:	str	r8, [sp, #4]
   16494:	movt	r1, #4
   16498:	str	r0, [sp, #8]
   1649c:	mov	r0, r4
   164a0:	bl	15040 <test_json@@Base>
   164a4:	movw	r1, #44463	; 0xadaf
   164a8:	str	r0, [fp, #-132]	; 0xffffff7c
   164ac:	movw	r0, #597	; 0x255
   164b0:	mov	r2, r9
   164b4:	mov	r3, #0
   164b8:	str	r8, [sp]
   164bc:	str	r8, [sp, #4]
   164c0:	movt	r1, #4
   164c4:	str	r0, [sp, #8]
   164c8:	mov	r0, r4
   164cc:	bl	15040 <test_json@@Base>
   164d0:	movw	r1, #44509	; 0xaddd
   164d4:	str	r0, [fp, #-136]	; 0xffffff78
   164d8:	movw	r0, #601	; 0x259
   164dc:	mov	r2, r7
   164e0:	mov	r3, #0
   164e4:	str	r8, [sp]
   164e8:	str	r8, [sp, #4]
   164ec:	movt	r1, #4
   164f0:	str	r0, [sp, #8]
   164f4:	mov	r0, r4
   164f8:	bl	15040 <test_json@@Base>
   164fc:	movw	r1, #44542	; 0xadfe
   16500:	str	r0, [fp, #-140]	; 0xffffff74
   16504:	mov	r0, #604	; 0x25c
   16508:	mov	r2, r6
   1650c:	mov	r3, #0
   16510:	str	r8, [sp]
   16514:	str	r8, [sp, #4]
   16518:	movt	r1, #4
   1651c:	str	r0, [sp, #8]
   16520:	mov	r0, r4
   16524:	bl	15040 <test_json@@Base>
   16528:	movw	r1, #44575	; 0xae1f
   1652c:	movw	r2, #44608	; 0xae40
   16530:	str	r0, [fp, #-144]	; 0xffffff70
   16534:	movw	r0, #607	; 0x25f
   16538:	mov	r3, #0
   1653c:	str	r8, [sp]
   16540:	str	r8, [sp, #4]
   16544:	movt	r1, #4
   16548:	movt	r2, #4
   1654c:	str	r0, [sp, #8]
   16550:	mov	r0, r4
   16554:	bl	15040 <test_json@@Base>
   16558:	movw	r1, #44646	; 0xae66
   1655c:	str	r0, [fp, #-148]	; 0xffffff6c
   16560:	movw	r0, #610	; 0x262
   16564:	mov	r2, r9
   16568:	mov	r3, #0
   1656c:	str	r8, [sp]
   16570:	str	r8, [sp, #4]
   16574:	movt	r1, #4
   16578:	str	r0, [sp, #8]
   1657c:	mov	r0, r4
   16580:	bl	15040 <test_json@@Base>
   16584:	movw	r1, #44680	; 0xae88
   16588:	movw	r2, #44714	; 0xaeaa
   1658c:	str	r0, [fp, #-152]	; 0xffffff68
   16590:	movw	r0, #613	; 0x265
   16594:	mov	r3, #0
   16598:	str	r8, [sp]
   1659c:	str	r8, [sp, #4]
   165a0:	movt	r1, #4
   165a4:	movt	r2, #4
   165a8:	str	r0, [sp, #8]
   165ac:	mov	r0, r4
   165b0:	bl	15040 <test_json@@Base>
   165b4:	movw	r1, #44744	; 0xaec8
   165b8:	movw	r2, #44778	; 0xaeea
   165bc:	str	r0, [sp, #156]	; 0x9c
   165c0:	mov	r0, #616	; 0x268
   165c4:	mov	r3, #0
   165c8:	str	r8, [sp]
   165cc:	str	r8, [sp, #4]
   165d0:	movt	r1, #4
   165d4:	movt	r2, #4
   165d8:	str	r0, [sp, #8]
   165dc:	mov	r0, r4
   165e0:	bl	15040 <test_json@@Base>
   165e4:	movw	r1, #44808	; 0xaf08
   165e8:	movw	r2, #44841	; 0xaf29
   165ec:	str	r0, [sp, #152]	; 0x98
   165f0:	movw	r0, #619	; 0x26b
   165f4:	mov	r3, #0
   165f8:	str	r8, [sp]
   165fc:	str	r8, [sp, #4]
   16600:	movt	r1, #4
   16604:	movt	r2, #4
   16608:	str	r0, [sp, #8]
   1660c:	mov	r0, r4
   16610:	bl	15040 <test_json@@Base>
   16614:	movw	r1, #44870	; 0xaf46
   16618:	str	r0, [sp, #148]	; 0x94
   1661c:	movw	r0, #622	; 0x26e
   16620:	mov	r2, r7
   16624:	mov	r3, #0
   16628:	str	r8, [sp]
   1662c:	str	r8, [sp, #4]
   16630:	movt	r1, #4
   16634:	str	r0, [sp, #8]
   16638:	mov	r0, r4
   1663c:	bl	15040 <test_json@@Base>
   16640:	movw	r1, #44913	; 0xaf71
   16644:	str	r0, [sp, #144]	; 0x90
   16648:	movw	r0, #625	; 0x271
   1664c:	mov	r2, r7
   16650:	mov	r3, #0
   16654:	str	r8, [sp]
   16658:	str	r8, [sp, #4]
   1665c:	movt	r1, #4
   16660:	str	r0, [sp, #8]
   16664:	mov	r0, r4
   16668:	bl	15040 <test_json@@Base>
   1666c:	movw	r6, #44971	; 0xafab
   16670:	movw	r5, #45013	; 0xafd5
   16674:	str	r0, [sp, #140]	; 0x8c
   16678:	mov	r0, #628	; 0x274
   1667c:	mov	r3, #0
   16680:	str	r8, [sp]
   16684:	str	r8, [sp, #4]
   16688:	movt	r6, #4
   1668c:	movt	r5, #4
   16690:	str	r0, [sp, #8]
   16694:	mov	r0, r4
   16698:	mov	r1, r6
   1669c:	mov	r2, r5
   166a0:	bl	15040 <test_json@@Base>
   166a4:	str	r0, [sp, #136]	; 0x88
   166a8:	movw	r0, #631	; 0x277
   166ac:	mov	r1, r6
   166b0:	mov	r2, r5
   166b4:	mov	r3, #0
   166b8:	str	r8, [sp]
   166bc:	str	r8, [sp, #4]
   166c0:	str	r0, [sp, #8]
   166c4:	mov	r0, r4
   166c8:	bl	15040 <test_json@@Base>
   166cc:	movw	r1, #45039	; 0xafef
   166d0:	movw	r2, #45120	; 0xb040
   166d4:	str	r0, [sp, #132]	; 0x84
   166d8:	movw	r0, #634	; 0x27a
   166dc:	mov	r3, #0
   166e0:	str	r8, [sp]
   166e4:	str	r8, [sp, #4]
   166e8:	movt	r1, #4
   166ec:	movt	r2, #4
   166f0:	str	r0, [sp, #8]
   166f4:	mov	r0, r4
   166f8:	bl	15040 <test_json@@Base>
   166fc:	movw	r1, #45191	; 0xb087
   16700:	movw	r2, #45276	; 0xb0dc
   16704:	str	r0, [sp, #128]	; 0x80
   16708:	movw	r0, #638	; 0x27e
   1670c:	mov	r3, #0
   16710:	str	r8, [sp]
   16714:	str	r8, [sp, #4]
   16718:	movt	r1, #4
   1671c:	movt	r2, #4
   16720:	str	r0, [sp, #8]
   16724:	mov	r0, r4
   16728:	bl	15040 <test_json@@Base>
   1672c:	movw	r1, #45350	; 0xb126
   16730:	movw	r2, #45461	; 0xb195
   16734:	str	r0, [sp, #124]	; 0x7c
   16738:	movw	r0, #642	; 0x282
   1673c:	mov	r3, #0
   16740:	str	r8, [sp]
   16744:	str	r8, [sp, #4]
   16748:	movt	r1, #4
   1674c:	movt	r2, #4
   16750:	str	r0, [sp, #8]
   16754:	mov	r0, r4
   16758:	bl	15040 <test_json@@Base>
   1675c:	movw	r1, #45559	; 0xb1f7
   16760:	str	r0, [sp, #120]	; 0x78
   16764:	movw	r0, #646	; 0x286
   16768:	mov	r2, sl
   1676c:	mov	r3, #0
   16770:	str	r8, [sp]
   16774:	str	r8, [sp, #4]
   16778:	movt	r1, #4
   1677c:	str	r0, [sp, #8]
   16780:	mov	r0, r4
   16784:	bl	15040 <test_json@@Base>
   16788:	movw	r1, #45602	; 0xb222
   1678c:	str	r0, [sp, #116]	; 0x74
   16790:	movw	r0, #649	; 0x289
   16794:	mov	r2, sl
   16798:	mov	r3, #0
   1679c:	str	r8, [sp]
   167a0:	str	r8, [sp, #4]
   167a4:	movt	r1, #4
   167a8:	str	r0, [sp, #8]
   167ac:	mov	r0, r4
   167b0:	bl	15040 <test_json@@Base>
   167b4:	movw	r1, #45640	; 0xb248
   167b8:	str	r0, [sp, #112]	; 0x70
   167bc:	movw	r0, #653	; 0x28d
   167c0:	mov	r2, r7
   167c4:	mov	r3, #0
   167c8:	str	r8, [sp]
   167cc:	str	r8, [sp, #4]
   167d0:	movt	r1, #4
   167d4:	str	r0, [sp, #8]
   167d8:	mov	r0, r4
   167dc:	bl	15040 <test_json@@Base>
   167e0:	movw	r1, #45669	; 0xb265
   167e4:	movw	r2, #43718	; 0xaac6
   167e8:	str	r0, [sp, #108]	; 0x6c
   167ec:	mov	r0, #656	; 0x290
   167f0:	mov	r3, #0
   167f4:	str	r8, [sp]
   167f8:	str	r8, [sp, #4]
   167fc:	movt	r1, #4
   16800:	movt	r2, #4
   16804:	str	r0, [sp, #8]
   16808:	mov	r0, r4
   1680c:	bl	15040 <test_json@@Base>
   16810:	movw	r1, #45698	; 0xb282
   16814:	movw	r2, #44608	; 0xae40
   16818:	str	r0, [sp, #104]	; 0x68
   1681c:	movw	r0, #659	; 0x293
   16820:	mov	r3, #0
   16824:	str	r8, [sp]
   16828:	str	r8, [sp, #4]
   1682c:	movt	r1, #4
   16830:	movt	r2, #4
   16834:	str	r0, [sp, #8]
   16838:	mov	r0, r4
   1683c:	bl	15040 <test_json@@Base>
   16840:	movw	r1, #45727	; 0xb29f
   16844:	str	r0, [sp, #100]	; 0x64
   16848:	movw	r0, #662	; 0x296
   1684c:	mov	r2, r9
   16850:	mov	r3, #0
   16854:	str	r8, [sp]
   16858:	str	r8, [sp, #4]
   1685c:	movt	r1, #4
   16860:	str	r0, [sp, #8]
   16864:	mov	r0, r4
   16868:	bl	15040 <test_json@@Base>
   1686c:	movw	r1, #45757	; 0xb2bd
   16870:	movw	r2, #44714	; 0xaeaa
   16874:	str	r0, [sp, #96]	; 0x60
   16878:	movw	r0, #665	; 0x299
   1687c:	mov	r3, #0
   16880:	str	r8, [sp]
   16884:	str	r8, [sp, #4]
   16888:	movt	r1, #4
   1688c:	movt	r2, #4
   16890:	str	r0, [sp, #8]
   16894:	mov	r0, r4
   16898:	bl	15040 <test_json@@Base>
   1689c:	movw	r1, #45787	; 0xb2db
   168a0:	movw	r2, #44778	; 0xaeea
   168a4:	str	r0, [sp, #92]	; 0x5c
   168a8:	mov	r0, #668	; 0x29c
   168ac:	mov	r3, #0
   168b0:	str	r8, [sp]
   168b4:	str	r8, [sp, #4]
   168b8:	movt	r1, #4
   168bc:	movt	r2, #4
   168c0:	str	r0, [sp, #8]
   168c4:	mov	r0, r4
   168c8:	bl	15040 <test_json@@Base>
   168cc:	movw	r1, #45817	; 0xb2f9
   168d0:	movw	r2, #44841	; 0xaf29
   168d4:	str	r0, [sp, #88]	; 0x58
   168d8:	movw	r0, #671	; 0x29f
   168dc:	mov	r3, #0
   168e0:	str	r8, [sp]
   168e4:	str	r8, [sp, #4]
   168e8:	movt	r1, #4
   168ec:	movt	r2, #4
   168f0:	str	r0, [sp, #8]
   168f4:	mov	r0, r4
   168f8:	bl	15040 <test_json@@Base>
   168fc:	movw	r1, #45846	; 0xb316
   16900:	str	r0, [sp, #84]	; 0x54
   16904:	movw	r0, #674	; 0x2a2
   16908:	mov	r2, r7
   1690c:	mov	r3, #0
   16910:	str	r8, [sp]
   16914:	str	r8, [sp, #4]
   16918:	movt	r1, #4
   1691c:	str	r0, [sp, #8]
   16920:	mov	r0, r4
   16924:	bl	15040 <test_json@@Base>
   16928:	movw	r1, #45883	; 0xb33b
   1692c:	str	r0, [sp, #80]	; 0x50
   16930:	movw	r0, #677	; 0x2a5
   16934:	mov	r2, r7
   16938:	mov	r3, #0
   1693c:	str	r8, [sp]
   16940:	str	r8, [sp, #4]
   16944:	movt	r1, #4
   16948:	str	r0, [sp, #8]
   1694c:	mov	r0, r4
   16950:	bl	15040 <test_json@@Base>
   16954:	movw	r6, #45935	; 0xb36f
   16958:	str	r0, [sp, #76]	; 0x4c
   1695c:	mov	r0, #680	; 0x2a8
   16960:	mov	r2, r5
   16964:	mov	r3, #0
   16968:	str	r8, [sp]
   1696c:	str	r8, [sp, #4]
   16970:	movt	r6, #4
   16974:	str	r0, [sp, #8]
   16978:	mov	r0, r4
   1697c:	mov	r1, r6
   16980:	bl	15040 <test_json@@Base>
   16984:	str	r0, [sp, #72]	; 0x48
   16988:	movw	r0, #683	; 0x2ab
   1698c:	mov	r1, r6
   16990:	mov	r2, r5
   16994:	mov	r3, #0
   16998:	str	r8, [sp]
   1699c:	str	r8, [sp, #4]
   169a0:	str	r0, [sp, #8]
   169a4:	mov	r0, r4
   169a8:	bl	15040 <test_json@@Base>
   169ac:	movw	r1, #45971	; 0xb393
   169b0:	movw	r2, #45120	; 0xb040
   169b4:	str	r0, [sp, #68]	; 0x44
   169b8:	movw	r0, #686	; 0x2ae
   169bc:	mov	r3, #0
   169c0:	str	r8, [sp]
   169c4:	str	r8, [sp, #4]
   169c8:	movt	r1, #4
   169cc:	movt	r2, #4
   169d0:	str	r0, [sp, #8]
   169d4:	mov	r0, r4
   169d8:	bl	15040 <test_json@@Base>
   169dc:	movw	r1, #46042	; 0xb3da
   169e0:	movw	r2, #45276	; 0xb0dc
   169e4:	str	r0, [sp, #64]	; 0x40
   169e8:	movw	r0, #690	; 0x2b2
   169ec:	mov	r3, #0
   169f0:	str	r8, [sp]
   169f4:	str	r8, [sp, #4]
   169f8:	movt	r1, #4
   169fc:	movt	r2, #4
   16a00:	str	r0, [sp, #8]
   16a04:	mov	r0, r4
   16a08:	bl	15040 <test_json@@Base>
   16a0c:	movw	r1, #46117	; 0xb425
   16a10:	movw	r2, #45461	; 0xb195
   16a14:	str	r0, [sp, #60]	; 0x3c
   16a18:	movw	r0, #694	; 0x2b6
   16a1c:	mov	r3, #0
   16a20:	str	r8, [sp]
   16a24:	str	r8, [sp, #4]
   16a28:	movt	r1, #4
   16a2c:	movt	r2, #4
   16a30:	str	r0, [sp, #8]
   16a34:	mov	r0, r4
   16a38:	bl	15040 <test_json@@Base>
   16a3c:	movw	r1, #46212	; 0xb484
   16a40:	str	r0, [sp, #56]	; 0x38
   16a44:	movw	r0, #698	; 0x2ba
   16a48:	mov	r2, sl
   16a4c:	mov	r3, #0
   16a50:	str	r8, [sp]
   16a54:	str	r8, [sp, #4]
   16a58:	movt	r1, #4
   16a5c:	str	r0, [sp, #8]
   16a60:	mov	r0, r4
   16a64:	bl	15040 <test_json@@Base>
   16a68:	movw	r1, #46249	; 0xb4a9
   16a6c:	str	r0, [sp, #52]	; 0x34
   16a70:	movw	r0, #701	; 0x2bd
   16a74:	mov	r2, sl
   16a78:	mov	r3, #0
   16a7c:	str	r8, [sp]
   16a80:	str	r8, [sp, #4]
   16a84:	movt	r1, #4
   16a88:	str	r0, [sp, #8]
   16a8c:	mov	r0, r4
   16a90:	bl	15040 <test_json@@Base>
   16a94:	movw	r5, #46376	; 0xb528
   16a98:	movw	r1, #46283	; 0xb4cb
   16a9c:	str	r0, [sp, #48]	; 0x30
   16aa0:	movw	r0, #711	; 0x2c7
   16aa4:	mov	r3, #0
   16aa8:	str	r8, [sp]
   16aac:	str	r8, [sp, #4]
   16ab0:	movt	r5, #4
   16ab4:	movt	r1, #4
   16ab8:	str	r0, [sp, #8]
   16abc:	mov	r0, r4
   16ac0:	mov	r2, r5
   16ac4:	bl	15040 <test_json@@Base>
   16ac8:	movw	r1, #46470	; 0xb586
   16acc:	str	r0, [sp, #44]	; 0x2c
   16ad0:	mov	r0, #716	; 0x2cc
   16ad4:	mov	r2, r5
   16ad8:	mov	r3, #0
   16adc:	str	r8, [sp]
   16ae0:	str	r8, [sp, #4]
   16ae4:	movt	r1, #4
   16ae8:	str	r0, [sp, #8]
   16aec:	mov	r0, r4
   16af0:	bl	15040 <test_json@@Base>
   16af4:	movw	r1, #46579	; 0xb5f3
   16af8:	movw	r2, #46640	; 0xb630
   16afc:	str	r0, [sp, #40]	; 0x28
   16b00:	movw	r0, #731	; 0x2db
   16b04:	mov	r3, #0
   16b08:	str	r8, [sp]
   16b0c:	str	r8, [sp, #4]
   16b10:	movt	r1, #4
   16b14:	movt	r2, #4
   16b18:	str	r0, [sp, #8]
   16b1c:	mov	r0, r4
   16b20:	bl	15040 <test_json@@Base>
   16b24:	movw	r1, #46688	; 0xb660
   16b28:	movw	r2, #46714	; 0xb67a
   16b2c:	str	r0, [sp, #36]	; 0x24
   16b30:	movw	r0, #734	; 0x2de
   16b34:	mov	r3, #0
   16b38:	str	r8, [sp]
   16b3c:	str	r8, [sp, #4]
   16b40:	movt	r1, #4
   16b44:	movt	r2, #4
   16b48:	str	r0, [sp, #8]
   16b4c:	mov	r0, r4
   16b50:	bl	15040 <test_json@@Base>
   16b54:	movw	r5, #46804	; 0xb6d4
   16b58:	movw	r1, #46732	; 0xb68c
   16b5c:	str	r0, [sp, #32]
   16b60:	movw	r0, #738	; 0x2e2
   16b64:	mov	r3, #0
   16b68:	str	r8, [sp]
   16b6c:	str	r8, [sp, #4]
   16b70:	movt	r5, #4
   16b74:	movt	r1, #4
   16b78:	str	r0, [sp, #8]
   16b7c:	mov	r0, r4
   16b80:	mov	r2, r5
   16b84:	bl	15040 <test_json@@Base>
   16b88:	movw	r1, #46869	; 0xb715
   16b8c:	str	r0, [sp, #28]
   16b90:	movw	r0, #750	; 0x2ee
   16b94:	mov	r2, r5
   16b98:	mov	r3, #0
   16b9c:	str	r8, [sp]
   16ba0:	str	r8, [sp, #4]
   16ba4:	movt	r1, #4
   16ba8:	str	r0, [sp, #8]
   16bac:	mov	r0, r4
   16bb0:	bl	15040 <test_json@@Base>
   16bb4:	movw	r1, #47026	; 0xb7b2
   16bb8:	movw	r2, #47065	; 0xb7d9
   16bbc:	str	r0, [sp, #24]
   16bc0:	movw	r0, #766	; 0x2fe
   16bc4:	mov	r3, #0
   16bc8:	str	r8, [sp]
   16bcc:	str	r8, [sp, #4]
   16bd0:	movt	r1, #4
   16bd4:	movt	r2, #4
   16bd8:	str	r0, [sp, #8]
   16bdc:	mov	r0, r4
   16be0:	bl	15040 <test_json@@Base>
   16be4:	movw	r1, #47099	; 0xb7fb
   16be8:	movw	r2, #47146	; 0xb82a
   16bec:	str	r0, [sp, #20]
   16bf0:	movw	r0, #770	; 0x302
   16bf4:	mov	r3, #0
   16bf8:	str	r8, [sp]
   16bfc:	str	r8, [sp, #4]
   16c00:	movt	r1, #4
   16c04:	movt	r2, #4
   16c08:	str	r0, [sp, #8]
   16c0c:	mov	r0, r4
   16c10:	bl	15040 <test_json@@Base>
   16c14:	movw	r1, #47188	; 0xb854
   16c18:	movw	r2, #47311	; 0xb8cf
   16c1c:	str	r0, [sp, #16]
   16c20:	mov	r0, #776	; 0x308
   16c24:	mov	r3, #0
   16c28:	str	r8, [sp]
   16c2c:	str	r8, [sp, #4]
   16c30:	movt	r1, #4
   16c34:	movt	r2, #4
   16c38:	str	r0, [sp, #8]
   16c3c:	mov	r0, r4
   16c40:	bl	15040 <test_json@@Base>
   16c44:	movw	r1, #47423	; 0xb93f
   16c48:	mov	r7, r0
   16c4c:	movw	r0, #781	; 0x30d
   16c50:	mov	r2, sl
   16c54:	mov	r3, #0
   16c58:	str	r8, [sp]
   16c5c:	str	r8, [sp, #4]
   16c60:	movt	r1, #4
   16c64:	str	r0, [sp, #8]
   16c68:	mov	r0, r4
   16c6c:	bl	15040 <test_json@@Base>
   16c70:	movw	r1, #47543	; 0xb9b7
   16c74:	movw	r2, #47665	; 0xba31
   16c78:	mov	r5, r0
   16c7c:	movw	r0, #786	; 0x312
   16c80:	mov	r3, #0
   16c84:	str	r8, [sp]
   16c88:	str	r8, [sp, #4]
   16c8c:	movt	r1, #4
   16c90:	movt	r2, #4
   16c94:	str	r0, [sp, #8]
   16c98:	mov	r0, r4
   16c9c:	bl	15040 <test_json@@Base>
   16ca0:	movw	r1, #47776	; 0xbaa0
   16ca4:	movw	r2, #47915	; 0xbb2b
   16ca8:	mov	r6, r0
   16cac:	movw	r0, #791	; 0x317
   16cb0:	mov	r3, #0
   16cb4:	str	r8, [sp]
   16cb8:	str	r8, [sp, #4]
   16cbc:	movt	r1, #4
   16cc0:	movt	r2, #4
   16cc4:	str	r0, [sp, #8]
   16cc8:	mov	r0, r4
   16ccc:	bl	15040 <test_json@@Base>
   16cd0:	movw	r1, #48041	; 0xbba9
   16cd4:	movw	r2, #48164	; 0xbc24
   16cd8:	mov	sl, r0
   16cdc:	mov	r0, #796	; 0x31c
   16ce0:	mov	r3, #0
   16ce4:	str	r8, [sp]
   16ce8:	str	r8, [sp, #4]
   16cec:	movt	r1, #4
   16cf0:	movt	r2, #4
   16cf4:	str	r0, [sp, #8]
   16cf8:	mov	r0, r4
   16cfc:	bl	15040 <test_json@@Base>
   16d00:	movw	r1, #48276	; 0xbc94
   16d04:	movw	r2, #48414	; 0xbd1e
   16d08:	mov	r9, r0
   16d0c:	movw	r0, #801	; 0x321
   16d10:	mov	r3, #0
   16d14:	str	r8, [sp]
   16d18:	str	r8, [sp, #4]
   16d1c:	movt	r1, #4
   16d20:	movt	r2, #4
   16d24:	str	r0, [sp, #8]
   16d28:	mov	r0, r4
   16d2c:	bl	15040 <test_json@@Base>
   16d30:	movw	r1, #806	; 0x326
   16d34:	ldr	r2, [fp, #-36]	; 0xffffffdc
   16d38:	mov	r3, #0
   16d3c:	str	r8, [sp]
   16d40:	str	r8, [sp, #4]
   16d44:	str	r1, [sp, #8]
   16d48:	ldr	r1, [fp, #-32]	; 0xffffffe0
   16d4c:	orr	r1, r2, r1
   16d50:	ldr	r2, [fp, #-40]	; 0xffffffd8
   16d54:	orr	r1, r1, r2
   16d58:	ldr	r2, [fp, #-44]	; 0xffffffd4
   16d5c:	orr	r1, r1, r2
   16d60:	ldr	r2, [fp, #-48]	; 0xffffffd0
   16d64:	orr	r1, r1, r2
   16d68:	ldr	r2, [fp, #-52]	; 0xffffffcc
   16d6c:	orr	r1, r1, r2
   16d70:	ldr	r2, [fp, #-56]	; 0xffffffc8
   16d74:	orr	r1, r1, r2
   16d78:	ldr	r2, [fp, #-60]	; 0xffffffc4
   16d7c:	orr	r1, r1, r2
   16d80:	ldr	r2, [fp, #-64]	; 0xffffffc0
   16d84:	orr	r1, r1, r2
   16d88:	ldr	r2, [fp, #-68]	; 0xffffffbc
   16d8c:	orr	r1, r1, r2
   16d90:	ldr	r2, [fp, #-72]	; 0xffffffb8
   16d94:	orr	r1, r1, r2
   16d98:	ldr	r2, [fp, #-76]	; 0xffffffb4
   16d9c:	orr	r1, r1, r2
   16da0:	ldr	r2, [fp, #-80]	; 0xffffffb0
   16da4:	orr	r1, r1, r2
   16da8:	ldr	r2, [fp, #-84]	; 0xffffffac
   16dac:	orr	r1, r1, r2
   16db0:	ldr	r2, [fp, #-88]	; 0xffffffa8
   16db4:	orr	r1, r1, r2
   16db8:	ldr	r2, [fp, #-92]	; 0xffffffa4
   16dbc:	orr	r1, r1, r2
   16dc0:	ldr	r2, [fp, #-96]	; 0xffffffa0
   16dc4:	orr	r1, r1, r2
   16dc8:	ldr	r2, [fp, #-100]	; 0xffffff9c
   16dcc:	orr	r1, r1, r2
   16dd0:	ldr	r2, [fp, #-104]	; 0xffffff98
   16dd4:	orr	r1, r1, r2
   16dd8:	ldr	r2, [fp, #-108]	; 0xffffff94
   16ddc:	orr	r1, r1, r2
   16de0:	ldr	r2, [fp, #-112]	; 0xffffff90
   16de4:	orr	r1, r1, r2
   16de8:	ldr	r2, [fp, #-116]	; 0xffffff8c
   16dec:	orr	r1, r1, r2
   16df0:	ldr	r2, [fp, #-120]	; 0xffffff88
   16df4:	orr	r1, r1, r2
   16df8:	ldr	r2, [fp, #-124]	; 0xffffff84
   16dfc:	orr	r1, r1, r2
   16e00:	ldr	r2, [fp, #-128]	; 0xffffff80
   16e04:	orr	r1, r1, r2
   16e08:	ldr	r2, [fp, #-132]	; 0xffffff7c
   16e0c:	orr	r1, r1, r2
   16e10:	ldr	r2, [fp, #-136]	; 0xffffff78
   16e14:	orr	r1, r1, r2
   16e18:	ldr	r2, [fp, #-140]	; 0xffffff74
   16e1c:	orr	r1, r1, r2
   16e20:	ldr	r2, [fp, #-144]	; 0xffffff70
   16e24:	orr	r1, r1, r2
   16e28:	ldr	r2, [fp, #-148]	; 0xffffff6c
   16e2c:	orr	r1, r1, r2
   16e30:	ldr	r2, [fp, #-152]	; 0xffffff68
   16e34:	orr	r1, r1, r2
   16e38:	ldr	r2, [sp, #156]	; 0x9c
   16e3c:	orr	r1, r1, r2
   16e40:	ldr	r2, [sp, #152]	; 0x98
   16e44:	orr	r1, r1, r2
   16e48:	ldr	r2, [sp, #148]	; 0x94
   16e4c:	orr	r1, r1, r2
   16e50:	ldr	r2, [sp, #144]	; 0x90
   16e54:	orr	r1, r1, r2
   16e58:	ldr	r2, [sp, #140]	; 0x8c
   16e5c:	orr	r1, r1, r2
   16e60:	ldr	r2, [sp, #136]	; 0x88
   16e64:	orr	r1, r1, r2
   16e68:	ldr	r2, [sp, #132]	; 0x84
   16e6c:	orr	r1, r1, r2
   16e70:	ldr	r2, [sp, #128]	; 0x80
   16e74:	orr	r1, r1, r2
   16e78:	ldr	r2, [sp, #124]	; 0x7c
   16e7c:	orr	r1, r1, r2
   16e80:	ldr	r2, [sp, #120]	; 0x78
   16e84:	orr	r1, r1, r2
   16e88:	ldr	r2, [sp, #116]	; 0x74
   16e8c:	orr	r1, r1, r2
   16e90:	ldr	r2, [sp, #112]	; 0x70
   16e94:	orr	r1, r1, r2
   16e98:	ldr	r2, [sp, #108]	; 0x6c
   16e9c:	orr	r1, r1, r2
   16ea0:	ldr	r2, [sp, #104]	; 0x68
   16ea4:	orr	r1, r1, r2
   16ea8:	ldr	r2, [sp, #100]	; 0x64
   16eac:	orr	r1, r1, r2
   16eb0:	ldr	r2, [sp, #96]	; 0x60
   16eb4:	orr	r1, r1, r2
   16eb8:	ldr	r2, [sp, #92]	; 0x5c
   16ebc:	orr	r1, r1, r2
   16ec0:	ldr	r2, [sp, #88]	; 0x58
   16ec4:	orr	r1, r1, r2
   16ec8:	ldr	r2, [sp, #84]	; 0x54
   16ecc:	orr	r1, r1, r2
   16ed0:	ldr	r2, [sp, #80]	; 0x50
   16ed4:	orr	r1, r1, r2
   16ed8:	ldr	r2, [sp, #76]	; 0x4c
   16edc:	orr	r1, r1, r2
   16ee0:	ldr	r2, [sp, #72]	; 0x48
   16ee4:	orr	r1, r1, r2
   16ee8:	ldr	r2, [sp, #68]	; 0x44
   16eec:	orr	r1, r1, r2
   16ef0:	ldr	r2, [sp, #64]	; 0x40
   16ef4:	orr	r1, r1, r2
   16ef8:	ldr	r2, [sp, #60]	; 0x3c
   16efc:	orr	r1, r1, r2
   16f00:	ldr	r2, [sp, #56]	; 0x38
   16f04:	orr	r1, r1, r2
   16f08:	ldr	r2, [sp, #52]	; 0x34
   16f0c:	orr	r1, r1, r2
   16f10:	ldr	r2, [sp, #48]	; 0x30
   16f14:	orr	r1, r1, r2
   16f18:	ldr	r2, [sp, #44]	; 0x2c
   16f1c:	orr	r1, r1, r2
   16f20:	ldr	r2, [sp, #40]	; 0x28
   16f24:	orr	r1, r1, r2
   16f28:	ldr	r2, [sp, #36]	; 0x24
   16f2c:	orr	r1, r1, r2
   16f30:	ldr	r2, [sp, #32]
   16f34:	orr	r1, r1, r2
   16f38:	ldr	r2, [sp, #28]
   16f3c:	orr	r1, r1, r2
   16f40:	ldr	r2, [sp, #24]
   16f44:	orr	r1, r1, r2
   16f48:	ldr	r2, [sp, #20]
   16f4c:	orr	r1, r1, r2
   16f50:	ldr	r2, [sp, #16]
   16f54:	orr	r1, r1, r2
   16f58:	movw	r2, #48684	; 0xbe2c
   16f5c:	orr	r1, r1, r7
   16f60:	movt	r2, #4
   16f64:	orr	r1, r1, r5
   16f68:	orr	r1, r1, r6
   16f6c:	orr	r1, r1, sl
   16f70:	orr	r1, r1, r9
   16f74:	orr	r5, r1, r0
   16f78:	movw	r1, #48541	; 0xbd9d
   16f7c:	mov	r0, r4
   16f80:	movt	r1, #4
   16f84:	bl	15040 <test_json@@Base>
   16f88:	orrs	r0, r5, r0
   16f8c:	mvnne	r0, #0
   16f90:	sub	sp, fp, #28
   16f94:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   16f98:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16f9c:	add	fp, sp, #28
   16fa0:	sub	sp, sp, #4
   16fa4:	vpush	{d8-d9}
   16fa8:	sub	sp, sp, #80	; 0x50
   16fac:	mov	sl, r0
   16fb0:	mov	r0, #0
   16fb4:	mov	r4, r1
   16fb8:	mov	r1, #36	; 0x24
   16fbc:	mov	r5, r3
   16fc0:	mov	r6, r2
   16fc4:	str	r0, [r3]
   16fc8:	ldr	r0, [sl]
   16fcc:	bl	31fa8 <flatcc_builder_start_table@@Base>
   16fd0:	cmp	r0, #0
   16fd4:	beq	17004 <main@@Base+0xf60>
   16fd8:	mov	r0, sl
   16fdc:	mov	r1, r4
   16fe0:	mov	r2, r6
   16fe4:	mov	r3, #33	; 0x21
   16fe8:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   16fec:	mov	r7, r0
   16ff0:	mov	r0, r7
   16ff4:	sub	sp, fp, #48	; 0x30
   16ff8:	vpop	{d8-d9}
   16ffc:	add	sp, sp, #4
   17000:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   17004:	add	r0, sp, #48	; 0x30
   17008:	mov	r1, r4
   1700c:	mov	r2, r6
   17010:	mov	r3, #1
   17014:	str	r0, [sp]
   17018:	mov	r0, sl
   1701c:	bl	398a0 <flatcc_json_parser_prepare_unions@@Base>
   17020:	cmp	r0, r6
   17024:	beq	16fd8 <main@@Base+0xf34>
   17028:	cmp	r4, r6
   1702c:	beq	1706c <main@@Base+0xfc8>
   17030:	ldrb	r0, [r4]
   17034:	cmp	r0, #123	; 0x7b
   17038:	bne	1706c <main@@Base+0xfc8>
   1703c:	add	r1, r4, #1
   17040:	sub	r0, r6, r1
   17044:	cmp	r0, #2
   17048:	blt	17104 <main@@Base+0x1060>
   1704c:	ldrb	r0, [r1]
   17050:	cmp	r0, #32
   17054:	bls	170f4 <main@@Base+0x1050>
   17058:	mov	r4, r1
   1705c:	cmp	r4, r6
   17060:	mov	r2, r6
   17064:	bne	17120 <main@@Base+0x107c>
   17068:	b	17160 <main@@Base+0x10bc>
   1706c:	mov	r0, sl
   17070:	mov	r1, r4
   17074:	mov	r2, r6
   17078:	mov	r3, #21
   1707c:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   17080:	mov	r4, r0
   17084:	ldr	r0, [sl, #24]
   17088:	cmp	r0, #0
   1708c:	bne	16fd8 <main@@Base+0xf34>
   17090:	ldr	r0, [sl]
   17094:	mov	r1, #3
   17098:	bl	327d4 <flatcc_builder_check_required_field@@Base>
   1709c:	cmp	r0, #0
   170a0:	beq	170d8 <main@@Base+0x1034>
   170a4:	ldr	r3, [sp, #48]	; 0x30
   170a8:	mov	r0, sl
   170ac:	mov	r1, r4
   170b0:	mov	r2, r6
   170b4:	bl	39930 <flatcc_json_parser_finalize_unions@@Base>
   170b8:	mov	r7, r0
   170bc:	ldr	r0, [sl]
   170c0:	bl	32950 <flatcc_builder_end_table@@Base>
   170c4:	cmp	r0, #0
   170c8:	mov	r4, r7
   170cc:	str	r0, [r5]
   170d0:	bne	16ff0 <main@@Base+0xf4c>
   170d4:	b	16fd8 <main@@Base+0xf34>
   170d8:	mov	r0, sl
   170dc:	mov	r1, r4
   170e0:	mov	r2, r6
   170e4:	mov	r3, #29
   170e8:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   170ec:	mov	r4, r0
   170f0:	b	16fd8 <main@@Base+0xf34>
   170f4:	bne	17104 <main@@Base+0x1060>
   170f8:	ldrb	r0, [r4, #2]!
   170fc:	cmp	r0, #32
   17100:	bhi	17114 <main@@Base+0x1070>
   17104:	mov	r0, sl
   17108:	mov	r2, r6
   1710c:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   17110:	mov	r4, r0
   17114:	cmp	r4, r6
   17118:	mov	r2, r6
   1711c:	beq	17160 <main@@Base+0x10bc>
   17120:	ldrb	r0, [r4]
   17124:	cmp	r0, #125	; 0x7d
   17128:	bne	1715c <main@@Base+0x10b8>
   1712c:	add	r1, r4, #1
   17130:	sub	r0, r6, r1
   17134:	cmp	r0, #2
   17138:	blt	21878 <main@@Base+0xb7d4>
   1713c:	ldrb	r0, [r1]
   17140:	cmp	r0, #32
   17144:	bhi	21830 <main@@Base+0xb78c>
   17148:	bne	21878 <main@@Base+0xb7d4>
   1714c:	ldrb	r0, [r4, #2]!
   17150:	cmp	r0, #32
   17154:	bhi	17084 <main@@Base+0xfe0>
   17158:	b	21878 <main@@Base+0xb7d4>
   1715c:	mov	r2, r4
   17160:	add	r0, sl, #12
   17164:	vldr	s18, [pc, #944]	; 1751c <main@@Base+0x1478>
   17168:	vmov.f32	s16, #8	; 0x40400000  3.0
   1716c:	str	r6, [sp, #44]	; 0x2c
   17170:	str	sl, [sp, #36]	; 0x24
   17174:	str	r5, [sp, #40]	; 0x28
   17178:	str	r0, [sp, #32]
   1717c:	movw	r0, #628	; 0x274
   17180:	movt	r0, #6
   17184:	add	r0, r0, #48	; 0x30
   17188:	str	r0, [sp, #24]
   1718c:	movw	r0, #13407	; 0x345f
   17190:	movt	r0, #29494	; 0x7336
   17194:	sub	r0, r0, #512	; 0x200
   17198:	sub	r0, r0, #196608	; 0x30000
   1719c:	str	r0, [sp, #28]
   171a0:	cmp	r2, r6
   171a4:	mov	r8, r6
   171a8:	beq	171fc <main@@Base+0x1158>
   171ac:	ldrb	r0, [r2]
   171b0:	cmp	r0, #46	; 0x2e
   171b4:	beq	171d0 <main@@Base+0x112c>
   171b8:	cmp	r0, #34	; 0x22
   171bc:	bne	171ec <main@@Base+0x1148>
   171c0:	ldr	r0, [sp, #32]
   171c4:	mov	r1, #0
   171c8:	add	r8, r2, #1
   171cc:	b	171f8 <main@@Base+0x1154>
   171d0:	mov	r1, r2
   171d4:	mov	r0, sl
   171d8:	mov	r2, r6
   171dc:	mov	r3, #5
   171e0:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   171e4:	mov	r8, r0
   171e8:	b	171fc <main@@Base+0x1158>
   171ec:	ldr	r0, [sp, #32]
   171f0:	mov	r1, #1
   171f4:	mov	r8, r2
   171f8:	str	r1, [r0]
   171fc:	sub	r9, r6, r8
   17200:	mov	r0, #8
   17204:	cmp	r9, #8
   17208:	movcc	r0, r9
   1720c:	sub	r2, r0, #1
   17210:	cmp	r2, #7
   17214:	bhi	1a480 <main@@Base+0x43dc>
   17218:	add	r0, pc, #32
   1721c:	mov	sl, #0
   17220:	mov	ip, #0
   17224:	mov	r4, #0
   17228:	mov	r1, #0
   1722c:	mov	r3, #0
   17230:	mov	r6, #0
   17234:	mov	r7, #0
   17238:	mov	r5, #0
   1723c:	ldr	pc, [r0, r2, lsl #2]
   17240:	andeq	r7, r1, r4, lsr #5
   17244:	muleq	r1, ip, r2
   17248:	muleq	r1, r4, r2
   1724c:	andeq	r7, r1, ip, lsl #5
   17250:	andeq	r7, r1, r0, lsl #5
   17254:	andeq	r7, r1, r4, ror r2
   17258:	andeq	r7, r1, r4, ror #4
   1725c:	andeq	r7, r1, r0, ror #4
   17260:	ldrb	ip, [r8, #7]
   17264:	ldrb	r0, [r8, #6]
   17268:	mov	r4, sl
   1726c:	orr	r0, ip, r0, lsl #8
   17270:	mov	sl, r0
   17274:	ldrb	r0, [r8, #5]
   17278:	mov	r1, r4
   1727c:	orr	sl, sl, r0, lsl #16
   17280:	ldrb	r0, [r8, #4]
   17284:	mov	r3, r1
   17288:	orr	sl, sl, r0, lsl #24
   1728c:	ldrb	r0, [r8, #3]
   17290:	orr	r6, r0, r3
   17294:	ldrb	r0, [r8, #2]
   17298:	orr	r7, r6, r0, lsl #8
   1729c:	ldrb	r0, [r8, #1]
   172a0:	orr	r5, r7, r0, lsl #16
   172a4:	ldrb	r0, [r8]
   172a8:	movw	r1, #29281	; 0x7261
   172ac:	movw	r7, #29556	; 0x7374
   172b0:	movt	r1, #24946	; 0x6172
   172b4:	movt	r7, #29797	; 0x7465
   172b8:	subs	r1, sl, r1
   172bc:	orr	r0, r5, r0, lsl #24
   172c0:	sbcs	r1, r0, r7
   172c4:	bcs	17390 <main@@Base+0x12ec>
   172c8:	movw	r1, #28004	; 0x6d64
   172cc:	movw	r3, #28530	; 0x6f72
   172d0:	movw	r2, #29285	; 0x7265
   172d4:	movw	r6, #24430	; 0x5f6e
   172d8:	movt	r1, #28257	; 0x6e61
   172dc:	movt	r3, #28276	; 0x6e74
   172e0:	movt	r2, #28769	; 0x7061
   172e4:	movt	r6, #28276	; 0x6e74
   172e8:	cmp	r0, r1
   172ec:	bhi	17520 <main@@Base+0x147c>
   172f0:	movw	r1, #25975	; 0x6577
   172f4:	ldr	r6, [sp, #44]	; 0x2c
   172f8:	movt	r1, #26220	; 0x666c
   172fc:	cmp	r0, r1
   17300:	bhi	17630 <main@@Base+0x158c>
   17304:	movw	r1, #27759	; 0x6c6f
   17308:	movt	r1, #25455	; 0x636f
   1730c:	eor	r2, r0, r1
   17310:	and	r1, sl, #-16777216	; 0xff000000
   17314:	eor	r3, r1, #1912602624	; 0x72000000
   17318:	orrs	r2, r3, r2
   1731c:	beq	17f38 <main@@Base+0x1e94>
   17320:	movw	r2, #25965	; 0x656d
   17324:	ldr	sl, [sp, #36]	; 0x24
   17328:	eor	r1, r1, #2030043136	; 0x79000000
   1732c:	movt	r2, #25966	; 0x656e
   17330:	eor	r0, r0, r2
   17334:	orrs	r0, r1, r0
   17338:	bne	1a480 <main@@Base+0x43dc>
   1733c:	cmp	r9, #6
   17340:	mov	r1, r8
   17344:	blt	19844 <main@@Base+0x37a0>
   17348:	ldr	r1, [sp, #32]
   1734c:	mov	r2, r8
   17350:	ldrb	r0, [r2, #5]!
   17354:	ldr	r1, [r1]
   17358:	cmp	r1, #0
   1735c:	beq	18718 <main@@Base+0x2674>
   17360:	cmp	r0, #33	; 0x21
   17364:	bcc	17374 <main@@Base+0x12d0>
   17368:	cmp	r0, #58	; 0x3a
   1736c:	mov	r1, r8
   17370:	bne	19844 <main@@Base+0x37a0>
   17374:	ldr	r0, [sp, #32]
   17378:	mov	r1, #0
   1737c:	str	r1, [r0]
   17380:	sub	r0, r6, r2
   17384:	cmp	r0, #2
   17388:	bge	18734 <main@@Base+0x2690>
   1738c:	b	18bbc <main@@Base+0x2b18>
   17390:	movw	r1, #0
   17394:	movw	r2, #29544	; 0x7368
   17398:	movt	r1, #26163	; 0x6633
   1739c:	movt	r2, #26721	; 0x6861
   173a0:	subs	r1, sl, r1
   173a4:	sbcs	r1, r0, r7
   173a8:	bcs	175ac <main@@Base+0x1508>
   173ac:	movw	r1, #29281	; 0x7261
   173b0:	ldr	r6, [sp, #44]	; 0x2c
   173b4:	movt	r1, #24946	; 0x6172
   173b8:	eor	r2, sl, r1
   173bc:	eor	r1, r0, r7
   173c0:	orrs	r2, r2, r1
   173c4:	bne	176b0 <main@@Base+0x160c>
   173c8:	add	r9, r8, #8
   173cc:	mov	r0, #8
   173d0:	mov	r5, r6
   173d4:	sub	ip, r6, r9
   173d8:	cmp	ip, #8
   173dc:	movcc	r0, ip
   173e0:	sub	r6, r0, #1
   173e4:	cmp	r6, #7
   173e8:	bhi	194f0 <main@@Base+0x344c>
   173ec:	add	r7, pc, #32
   173f0:	mov	r1, #0
   173f4:	mov	lr, #0
   173f8:	mov	sl, #0
   173fc:	mov	r4, #0
   17400:	mov	r3, #0
   17404:	mov	r5, #0
   17408:	mov	r0, #0
   1740c:	mov	r2, #0
   17410:	ldr	pc, [r7, r6, lsl #2]
   17414:	andeq	r7, r1, r8, ror r4
   17418:	andeq	r7, r1, r0, ror r4
   1741c:	andeq	r7, r1, r8, ror #8
   17420:	andeq	r7, r1, r0, ror #8
   17424:	andeq	r7, r1, r4, asr r4
   17428:	andeq	r7, r1, r8, asr #8
   1742c:	andeq	r7, r1, r8, lsr r4
   17430:	andeq	r7, r1, r4, lsr r4
   17434:	ldrb	lr, [r8, #15]
   17438:	ldrb	r0, [r8, #14]
   1743c:	mov	sl, r1
   17440:	orr	r0, lr, r0, lsl #8
   17444:	mov	r1, r0
   17448:	ldrb	r0, [r8, #13]
   1744c:	mov	r4, sl
   17450:	orr	r1, r1, r0, lsl #16
   17454:	ldrb	r0, [r8, #12]
   17458:	mov	r3, r4
   1745c:	orr	r1, r1, r0, lsl #24
   17460:	ldrb	r0, [r8, #11]
   17464:	orr	r5, r0, r3
   17468:	ldrb	r0, [r8, #10]
   1746c:	orr	r0, r5, r0, lsl #8
   17470:	ldrb	r2, [r8, #9]
   17474:	orr	r2, r0, r2, lsl #16
   17478:	ldrb	r0, [r9]
   1747c:	movw	r7, #26227	; 0x6673
   17480:	movt	r7, #31087	; 0x796f
   17484:	orr	r2, r2, r0, lsl #24
   17488:	movw	r0, #26989	; 0x696d
   1748c:	movt	r0, #29810	; 0x7472
   17490:	subs	r0, r0, r1
   17494:	sbcs	r0, r7, r2
   17498:	bcc	17e64 <main@@Base+0x1dc0>
   1749c:	movw	r0, #29797	; 0x7465
   174a0:	ldr	r6, [sp, #44]	; 0x2c
   174a4:	eor	r3, r2, r7
   174a8:	movt	r0, #28530	; 0x6f72
   174ac:	eor	r0, r1, r0
   174b0:	orrs	r0, r0, r3
   174b4:	beq	18370 <main@@Base+0x22cc>
   174b8:	movw	r0, #27763	; 0x6c73
   174bc:	mov	r5, r6
   174c0:	movt	r0, #28527	; 0x6f6f
   174c4:	eor	r0, r1, r0
   174c8:	movw	r1, #26210	; 0x6662
   174cc:	movt	r1, #31087	; 0x796f
   174d0:	eor	r1, r2, r1
   174d4:	orrs	r0, r0, r1
   174d8:	bne	194f0 <main@@Base+0x344c>
   174dc:	cmp	ip, #9
   174e0:	blt	194f0 <main@@Base+0x344c>
   174e4:	ldr	r2, [sp, #32]
   174e8:	mov	r1, r8
   174ec:	ldrb	r0, [r1, #16]!
   174f0:	ldr	r2, [r2]
   174f4:	cmp	r2, #0
   174f8:	beq	18a8c <main@@Base+0x29e8>
   174fc:	cmp	r0, #33	; 0x21
   17500:	bcc	1750c <main@@Base+0x1468>
   17504:	cmp	r0, #58	; 0x3a
   17508:	bne	194f0 <main@@Base+0x344c>
   1750c:	ldr	r0, [sp, #32]
   17510:	mov	r2, #0
   17514:	str	r2, [r0]
   17518:	b	18a98 <main@@Base+0x29f4>
   1751c:	ldmmi	r9, {r5, r6, r7, r8, sl, sp, lr}
   17520:	movw	r1, #29555	; 0x7373
   17524:	ldr	r5, [sp, #44]	; 0x2c
   17528:	movt	r1, #29797	; 0x7465
   1752c:	cmp	r0, r1
   17530:	bhi	17784 <main@@Base+0x16e0>
   17534:	subs	r1, sl, r6
   17538:	sbcs	r1, r0, r2
   1753c:	bcs	17938 <main@@Base+0x1894>
   17540:	movw	r1, #28005	; 0x6d65
   17544:	movt	r1, #28257	; 0x6e61
   17548:	teq	r0, r1
   1754c:	bne	17f90 <main@@Base+0x1eec>
   17550:	ldr	sl, [sp, #36]	; 0x24
   17554:	cmp	r9, #5
   17558:	mov	r1, r8
   1755c:	mov	r6, r5
   17560:	blt	19b14 <main@@Base+0x3a70>
   17564:	ldr	r1, [sp, #32]
   17568:	mov	r2, r8
   1756c:	ldrb	r0, [r2, #4]!
   17570:	ldr	r1, [r1]
   17574:	cmp	r1, #0
   17578:	beq	18808 <main@@Base+0x2764>
   1757c:	cmp	r0, #33	; 0x21
   17580:	bcc	17590 <main@@Base+0x14ec>
   17584:	cmp	r0, #58	; 0x3a
   17588:	mov	r1, r8
   1758c:	bne	19b14 <main@@Base+0x3a70>
   17590:	ldr	r0, [sp, #32]
   17594:	mov	r1, #0
   17598:	str	r1, [r0]
   1759c:	sub	r0, r6, r2
   175a0:	cmp	r0, #2
   175a4:	bge	18824 <main@@Base+0x2780>
   175a8:	b	18cb4 <main@@Base+0x2c10>
   175ac:	ldr	r6, [sp, #44]	; 0x2c
   175b0:	subs	r1, sl, r2
   175b4:	sbcs	r1, r0, r7
   175b8:	bcs	177f0 <main@@Base+0x174c>
   175bc:	movw	r1, #0
   175c0:	bfc	sl, #0, #16
   175c4:	eor	r0, r0, r7
   175c8:	movt	r1, #26163	; 0x6633
   175cc:	eor	r1, sl, r1
   175d0:	orrs	r0, r1, r0
   175d4:	bne	1a47c <main@@Base+0x43d8>
   175d8:	ldr	sl, [sp, #36]	; 0x24
   175dc:	cmp	r9, #7
   175e0:	mov	r7, r8
   175e4:	blt	19108 <main@@Base+0x3064>
   175e8:	ldr	r2, [sp, #32]
   175ec:	mov	r1, r8
   175f0:	ldrb	r0, [r1, #6]!
   175f4:	ldr	r2, [r2]
   175f8:	cmp	r2, #0
   175fc:	beq	18650 <main@@Base+0x25ac>
   17600:	cmp	r0, #33	; 0x21
   17604:	bcc	17614 <main@@Base+0x1570>
   17608:	cmp	r0, #58	; 0x3a
   1760c:	mov	r7, r8
   17610:	bne	19108 <main@@Base+0x3064>
   17614:	ldr	r0, [sp, #32]
   17618:	mov	r2, #0
   1761c:	str	r2, [r0]
   17620:	sub	r0, r6, r1
   17624:	cmp	r0, #2
   17628:	bge	1866c <main@@Base+0x25c8>
   1762c:	b	189a8 <main@@Base+0x2904>
   17630:	movw	r1, #65535	; 0xffff
   17634:	movw	r2, #30309	; 0x7665
   17638:	movt	r1, #26735	; 0x686f
   1763c:	movt	r2, #26990	; 0x696e
   17640:	cmp	r0, r1
   17644:	bhi	17b1c <main@@Base+0x1a78>
   17648:	movw	r1, #25976	; 0x6578
   1764c:	movt	r1, #26220	; 0x666c
   17650:	teq	r0, r1
   17654:	bne	1a47c <main@@Base+0x43d8>
   17658:	ldr	sl, [sp, #36]	; 0x24
   1765c:	cmp	r9, #5
   17660:	mov	r4, r8
   17664:	blt	19b7c <main@@Base+0x3ad8>
   17668:	ldr	r2, [sp, #32]
   1766c:	mov	r1, r8
   17670:	ldrb	r0, [r1, #4]!
   17674:	ldr	r2, [r2]
   17678:	cmp	r2, #0
   1767c:	beq	18840 <main@@Base+0x279c>
   17680:	cmp	r0, #33	; 0x21
   17684:	bcc	17694 <main@@Base+0x15f0>
   17688:	cmp	r0, #58	; 0x3a
   1768c:	mov	r4, r8
   17690:	bne	19b7c <main@@Base+0x3ad8>
   17694:	ldr	r0, [sp, #32]
   17698:	mov	r2, #0
   1769c:	str	r2, [r0]
   176a0:	sub	r0, r6, r1
   176a4:	cmp	r0, #2
   176a8:	bge	1885c <main@@Base+0x27b8>
   176ac:	b	18d30 <main@@Base+0x2c8c>
   176b0:	movw	r2, #28788	; 0x7074
   176b4:	movt	r2, #25965	; 0x656d
   176b8:	subs	r2, sl, r2
   176bc:	sbcs	r2, r0, r7
   176c0:	bcs	17b94 <main@@Base+0x1af0>
   176c4:	movw	r0, #28524	; 0x6f6c
   176c8:	movt	r0, #25199	; 0x626f
   176cc:	eor	r0, sl, r0
   176d0:	orrs	r0, r0, r1
   176d4:	beq	18310 <main@@Base+0x226c>
   176d8:	movw	r0, #29541	; 0x7365
   176dc:	movt	r0, #25185	; 0x6261
   176e0:	eor	r0, sl, r0
   176e4:	orrs	r0, r0, r1
   176e8:	bne	1a47c <main@@Base+0x43d8>
   176ec:	add	r7, r8, #8
   176f0:	ldr	sl, [sp, #36]	; 0x24
   176f4:	mov	r2, #8
   176f8:	sub	r0, r6, r7
   176fc:	cmp	r0, #8
   17700:	movcc	r2, r0
   17704:	sub	r1, r2, #2
   17708:	cmp	r1, #7
   1770c:	bcs	188e8 <main@@Base+0x2844>
   17710:	ldrb	r1, [r8, #9]
   17714:	lsl	r2, r1, #16
   17718:	mov	r1, #0
   1771c:	ldrb	r3, [r7]
   17720:	orr	r2, r2, r3, lsl #24
   17724:	movw	r3, #0
   17728:	movt	r3, #13876	; 0x3634
   1772c:	eor	r2, r2, r3
   17730:	orrs	r1, r1, r2
   17734:	bne	1fad0 <main@@Base+0x9a2c>
   17738:	cmp	r0, #3
   1773c:	blt	1fad0 <main@@Base+0x9a2c>
   17740:	ldr	r2, [sp, #32]
   17744:	mov	r1, r8
   17748:	ldrb	r0, [r1, #10]!
   1774c:	ldr	r2, [r2]
   17750:	cmp	r2, #0
   17754:	beq	18eb0 <main@@Base+0x2e0c>
   17758:	cmp	r0, #33	; 0x21
   1775c:	bcc	17768 <main@@Base+0x16c4>
   17760:	cmp	r0, #58	; 0x3a
   17764:	bne	1fad0 <main@@Base+0x9a2c>
   17768:	ldr	r0, [sp, #32]
   1776c:	mov	r2, #0
   17770:	str	r2, [r0]
   17774:	sub	r0, r6, r1
   17778:	cmp	r0, #2
   1777c:	bge	18ec8 <main@@Base+0x2e24>
   17780:	b	19fe4 <main@@Base+0x3f40>
   17784:	and	r6, sl, #-16777216	; 0xff000000
   17788:	eor	r4, r0, r7
   1778c:	eor	r1, r6, #872415232	; 0x34000000
   17790:	orrs	r1, r1, r4
   17794:	bne	17c34 <main@@Base+0x1b90>
   17798:	cmp	r9, #6
   1779c:	mov	r7, r8
   177a0:	mov	r6, r5
   177a4:	blt	191e0 <main@@Base+0x313c>
   177a8:	ldr	r2, [sp, #32]
   177ac:	mov	r1, r8
   177b0:	ldrb	r0, [r1, #5]!
   177b4:	ldr	r2, [r2]
   177b8:	cmp	r2, #0
   177bc:	beq	18688 <main@@Base+0x25e4>
   177c0:	cmp	r0, #33	; 0x21
   177c4:	bcc	177d4 <main@@Base+0x1730>
   177c8:	cmp	r0, #58	; 0x3a
   177cc:	mov	r7, r8
   177d0:	bne	191e0 <main@@Base+0x313c>
   177d4:	ldr	r0, [sp, #32]
   177d8:	mov	r2, #0
   177dc:	str	r2, [r0]
   177e0:	sub	r0, r6, r1
   177e4:	cmp	r0, #2
   177e8:	bge	186a4 <main@@Base+0x2600>
   177ec:	b	18a24 <main@@Base+0x2980>
   177f0:	eor	r2, sl, r2
   177f4:	eor	r1, r0, r7
   177f8:	orrs	r2, r2, r1
   177fc:	bne	17c94 <main@@Base+0x1bf0>
   17800:	add	r9, r8, #8
   17804:	mov	r0, #8
   17808:	sub	ip, r6, r9
   1780c:	cmp	ip, #8
   17810:	movcc	r0, ip
   17814:	sub	r7, r0, #1
   17818:	cmp	r7, #7
   1781c:	bhi	18368 <main@@Base+0x22c4>
   17820:	add	r4, pc, #32
   17824:	mov	r1, #0
   17828:	mov	lr, #0
   1782c:	mov	sl, #0
   17830:	mov	r6, #0
   17834:	mov	r3, #0
   17838:	mov	r5, #0
   1783c:	mov	r0, #0
   17840:	mov	r2, #0
   17844:	ldr	pc, [r4, r7, lsl #2]
   17848:	andeq	r7, r1, ip, lsr #17
   1784c:	andeq	r7, r1, r4, lsr #17
   17850:	muleq	r1, ip, r8
   17854:	muleq	r1, r4, r8
   17858:	andeq	r7, r1, r8, lsl #17
   1785c:	andeq	r7, r1, ip, ror r8
   17860:	andeq	r7, r1, ip, ror #16
   17864:	andeq	r7, r1, r8, ror #16
   17868:	ldrb	lr, [r8, #15]
   1786c:	ldrb	r0, [r8, #14]
   17870:	mov	sl, r1
   17874:	orr	r0, lr, r0, lsl #8
   17878:	mov	r1, r0
   1787c:	ldrb	r0, [r8, #13]
   17880:	mov	r6, sl
   17884:	orr	r1, r1, r0, lsl #16
   17888:	ldrb	r0, [r8, #12]
   1788c:	mov	r3, r6
   17890:	orr	r1, r1, r0, lsl #24
   17894:	ldrb	r0, [r8, #11]
   17898:	orr	r5, r0, r3
   1789c:	ldrb	r0, [r8, #10]
   178a0:	orr	r0, r5, r0, lsl #8
   178a4:	ldrb	r2, [r8, #9]
   178a8:	orr	r2, r0, r2, lsl #16
   178ac:	ldrb	r0, [r9]
   178b0:	movw	r3, #30257	; 0x7631
   178b4:	movt	r3, #26222	; 0x666e
   178b8:	orr	r2, r2, r0, lsl #24
   178bc:	subs	r0, r1, r3
   178c0:	movw	r0, #13407	; 0x345f
   178c4:	movt	r0, #29494	; 0x7336
   178c8:	sbcs	r0, r2, r0
   178cc:	bcs	18280 <main@@Base+0x21dc>
   178d0:	eor	r0, r1, r3
   178d4:	ldr	r1, [sp, #28]
   178d8:	ldr	r6, [sp, #44]	; 0x2c
   178dc:	eor	r1, r2, r1
   178e0:	orrs	r0, r0, r1
   178e4:	bne	18368 <main@@Base+0x22c4>
   178e8:	ldr	sl, [sp, #36]	; 0x24
   178ec:	cmp	ip, #9
   178f0:	blt	19790 <main@@Base+0x36ec>
   178f4:	ldr	r2, [sp, #32]
   178f8:	mov	r1, r8
   178fc:	ldrb	r0, [r1, #16]!
   17900:	ldr	r2, [r2]
   17904:	cmp	r2, #0
   17908:	beq	18b74 <main@@Base+0x2ad0>
   1790c:	cmp	r0, #33	; 0x21
   17910:	bcc	1791c <main@@Base+0x1878>
   17914:	cmp	r0, #58	; 0x3a
   17918:	bne	19790 <main@@Base+0x36ec>
   1791c:	ldr	r0, [sp, #32]
   17920:	mov	r2, #0
   17924:	str	r2, [r0]
   17928:	sub	r0, r6, r1
   1792c:	cmp	r0, #2
   17930:	bge	18b8c <main@@Base+0x2ae8>
   17934:	b	19744 <main@@Base+0x36a0>
   17938:	eor	r1, sl, r6
   1793c:	eor	r2, r0, r2
   17940:	orrs	r1, r1, r2
   17944:	bne	17f9c <main@@Base+0x1ef8>
   17948:	add	r1, r8, #8
   1794c:	mov	r2, #8
   17950:	ldr	sl, [sp, #36]	; 0x24
   17954:	mov	r6, r5
   17958:	sub	r0, r5, r1
   1795c:	cmp	r0, #8
   17960:	movcs	r0, r2
   17964:	sub	r7, r0, #1
   17968:	cmp	r7, #7
   1796c:	bhi	18308 <main@@Base+0x2264>
   17970:	add	r0, pc, #32
   17974:	mov	r9, #0
   17978:	mov	ip, #0
   1797c:	mov	lr, #0
   17980:	mov	r6, #0
   17984:	mov	r3, #0
   17988:	mov	r4, #0
   1798c:	mov	r2, #0
   17990:	mov	r5, #0
   17994:	ldr	pc, [r0, r7, lsl #2]
   17998:	strdeq	r7, [r1], -ip
   1799c:	strdeq	r7, [r1], -r4
   179a0:	andeq	r7, r1, ip, ror #19
   179a4:	andeq	r7, r1, r4, ror #19
   179a8:	ldrdeq	r7, [r1], -r8
   179ac:	andeq	r7, r1, ip, asr #19
   179b0:			; <UNDEFINED> instruction: 0x000179bc
   179b4:			; <UNDEFINED> instruction: 0x000179b8
   179b8:	ldrb	ip, [r8, #15]
   179bc:	ldrb	r0, [r8, #14]
   179c0:	mov	lr, r9
   179c4:	orr	r0, ip, r0, lsl #8
   179c8:	mov	r9, r0
   179cc:	ldrb	r0, [r8, #13]
   179d0:	mov	r6, lr
   179d4:	orr	r9, r9, r0, lsl #16
   179d8:	ldrb	r0, [r8, #12]
   179dc:	mov	r3, r6
   179e0:	orr	r9, r9, r0, lsl #24
   179e4:	ldrb	r0, [r8, #11]
   179e8:	orr	r4, r0, r3
   179ec:	ldrb	r0, [r8, #10]
   179f0:	orr	r2, r4, r0, lsl #8
   179f4:	ldrb	r0, [r8, #9]
   179f8:	orr	r5, r2, r0, lsl #16
   179fc:	ldrb	r2, [r1]
   17a00:	movw	r0, #25445	; 0x6365
   17a04:	movw	r3, #25971	; 0x6573
   17a08:	ldr	r6, [sp, #44]	; 0x2c
   17a0c:	movt	r0, #28769	; 0x7061
   17a10:	movt	r3, #24941	; 0x616d
   17a14:	eor	r0, r9, r0
   17a18:	orr	r2, r5, r2, lsl #24
   17a1c:	eor	r2, r2, r3
   17a20:	orrs	r0, r0, r2
   17a24:	bne	18308 <main@@Base+0x2264>
   17a28:	add	r9, r8, #16
   17a2c:	mov	r1, #8
   17a30:	sub	r0, r6, r9
   17a34:	cmp	r0, #8
   17a38:	movcc	r1, r0
   17a3c:	sub	r3, r1, #1
   17a40:	cmp	r3, #7
   17a44:	bhi	1e494 <main@@Base+0x83f0>
   17a48:	add	r7, pc, #20
   17a4c:	mov	r1, #0
   17a50:	mov	r2, #0
   17a54:	mov	r6, #0
   17a58:	mov	r5, #0
   17a5c:	mov	r4, #0
   17a60:	ldr	pc, [r7, r3, lsl #2]
   17a64:	andeq	r7, r1, r8, lsr #21
   17a68:	andeq	r7, r1, r0, lsr #21
   17a6c:	muleq	r1, r8, sl
   17a70:	andeq	r7, r1, ip, lsl #21
   17a74:	andeq	r7, r1, r4, lsl #21
   17a78:	andeq	r7, r1, r4, lsl #21
   17a7c:	andeq	r7, r1, r4, lsl #21
   17a80:	andeq	r7, r1, r4, lsl #21
   17a84:	ldrb	r2, [r8, #20]
   17a88:	lsl	r2, r2, #24
   17a8c:	ldrb	r3, [r8, #19]
   17a90:	orr	r6, r3, r1
   17a94:	mov	r1, r2
   17a98:	ldrb	r2, [r8, #18]
   17a9c:	orr	r5, r6, r2, lsl #8
   17aa0:	ldrb	r2, [r8, #17]
   17aa4:	orr	r4, r5, r2, lsl #16
   17aa8:	ldrb	r2, [r9]
   17aac:	movw	r3, #25971	; 0x6573
   17ab0:	ldr	r6, [sp, #44]	; 0x2c
   17ab4:	and	r1, r1, #-16777216	; 0xff000000
   17ab8:	movt	r3, #24436	; 0x5f74
   17abc:	eor	r1, r1, #1946157056	; 0x74000000
   17ac0:	orr	r2, r4, r2, lsl #24
   17ac4:	eor	r2, r2, r3
   17ac8:	orrs	r1, r1, r2
   17acc:	bne	1e494 <main@@Base+0x83f0>
   17ad0:	cmp	r0, #6
   17ad4:	blt	1e494 <main@@Base+0x83f0>
   17ad8:	ldr	r2, [sp, #32]
   17adc:	mov	r1, r8
   17ae0:	ldrb	r0, [r1, #21]!
   17ae4:	ldr	r2, [r2]
   17ae8:	cmp	r2, #0
   17aec:	beq	19458 <main@@Base+0x33b4>
   17af0:	cmp	r0, #33	; 0x21
   17af4:	bcc	17b00 <main@@Base+0x1a5c>
   17af8:	cmp	r0, #58	; 0x3a
   17afc:	bne	1e494 <main@@Base+0x83f0>
   17b00:	ldr	r0, [sp, #32]
   17b04:	mov	r2, #0
   17b08:	str	r2, [r0]
   17b0c:	sub	r0, r6, r1
   17b10:	cmp	r0, #2
   17b14:	bge	19470 <main@@Base+0x33cc>
   17b18:	b	1aa54 <main@@Base+0x49b0>
   17b1c:	subs	r1, sl, r3
   17b20:	sbcs	r1, r0, r2
   17b24:	bcs	1800c <main@@Base+0x1f68>
   17b28:	movw	r1, #0
   17b2c:	bfc	r0, #0, #16
   17b30:	movt	r1, #26736	; 0x6870
   17b34:	teq	r0, r1
   17b38:	bne	1a47c <main@@Base+0x43d8>
   17b3c:	ldr	sl, [sp, #36]	; 0x24
   17b40:	cmp	r9, #3
   17b44:	mov	r7, r8
   17b48:	blt	1abfc <main@@Base+0x4b58>
   17b4c:	ldr	r2, [sp, #32]
   17b50:	mov	r1, r8
   17b54:	ldrb	r0, [r1, #2]!
   17b58:	ldr	r2, [r2]
   17b5c:	cmp	r2, #0
   17b60:	beq	18acc <main@@Base+0x2a28>
   17b64:	cmp	r0, #33	; 0x21
   17b68:	bcc	17b78 <main@@Base+0x1ad4>
   17b6c:	cmp	r0, #58	; 0x3a
   17b70:	mov	r7, r8
   17b74:	bne	1abfc <main@@Base+0x4b58>
   17b78:	ldr	r0, [sp, #32]
   17b7c:	mov	r2, #0
   17b80:	str	r2, [r0]
   17b84:	sub	r0, r6, r1
   17b88:	cmp	r0, #2
   17b8c:	bge	18ae8 <main@@Base+0x2a44>
   17b90:	b	19534 <main@@Base+0x3490>
   17b94:	mvn	r2, #-1711276032	; 0x9a000000
   17b98:	subs	r2, r2, sl
   17b9c:	sbcs	r2, r7, r0
   17ba0:	bcc	18098 <main@@Base+0x1ff4>
   17ba4:	movw	r0, #28788	; 0x7074
   17ba8:	movt	r0, #25965	; 0x656d
   17bac:	eor	r0, sl, r0
   17bb0:	orrs	r0, r0, r1
   17bb4:	bne	1a47c <main@@Base+0x43d8>
   17bb8:	add	r7, r8, #8
   17bbc:	ldr	sl, [sp, #36]	; 0x24
   17bc0:	mov	r1, #8
   17bc4:	sub	r0, r6, r7
   17bc8:	cmp	r0, #8
   17bcc:	movcc	r1, r0
   17bd0:	sub	r1, r1, #1
   17bd4:	cmp	r1, #7
   17bd8:	bhi	1fad0 <main@@Base+0x9a2c>
   17bdc:	ldrb	r1, [r7]
   17be0:	cmp	r1, #121	; 0x79
   17be4:	bne	1fad0 <main@@Base+0x9a2c>
   17be8:	cmp	r0, #2
   17bec:	blt	1fad0 <main@@Base+0x9a2c>
   17bf0:	ldr	r2, [sp, #32]
   17bf4:	mov	r1, r8
   17bf8:	ldrb	r0, [r1, #9]!
   17bfc:	ldr	r2, [r2]
   17c00:	cmp	r2, #0
   17c04:	beq	19a54 <main@@Base+0x39b0>
   17c08:	cmp	r0, #33	; 0x21
   17c0c:	bcc	17c18 <main@@Base+0x1b74>
   17c10:	cmp	r0, #58	; 0x3a
   17c14:	bne	1fad0 <main@@Base+0x9a2c>
   17c18:	ldr	r0, [sp, #32]
   17c1c:	mov	r2, #0
   17c20:	str	r2, [r0]
   17c24:	sub	r0, r6, r1
   17c28:	cmp	r0, #2
   17c2c:	bge	19a6c <main@@Base+0x39c8>
   17c30:	b	1c214 <main@@Base+0x6170>
   17c34:	teq	r0, r7
   17c38:	bne	18e00 <main@@Base+0x2d5c>
   17c3c:	cmp	r9, #5
   17c40:	mov	r1, r8
   17c44:	blt	19f38 <main@@Base+0x3e94>
   17c48:	ldr	r1, [sp, #32]
   17c4c:	mov	r2, r8
   17c50:	ldrb	r0, [r2, #4]!
   17c54:	ldr	r1, [r1]
   17c58:	cmp	r1, #0
   17c5c:	beq	18878 <main@@Base+0x27d4>
   17c60:	cmp	r0, #33	; 0x21
   17c64:	bcc	17c74 <main@@Base+0x1bd0>
   17c68:	cmp	r0, #58	; 0x3a
   17c6c:	mov	r1, r8
   17c70:	bne	19f38 <main@@Base+0x3e94>
   17c74:	ldr	r0, [sp, #32]
   17c78:	mov	r1, #0
   17c7c:	str	r1, [r0]
   17c80:	sub	r0, r5, r2
   17c84:	mov	r7, r5
   17c88:	cmp	r0, #2
   17c8c:	bge	18898 <main@@Base+0x27f4>
   17c90:	b	18db0 <main@@Base+0x2d0c>
   17c94:	movw	r7, #24431	; 0x5f6f
   17c98:	movw	r3, #25460	; 0x6374
   17c9c:	movt	r7, #28530	; 0x6f72
   17ca0:	movt	r3, #30309	; 0x7665
   17ca4:	subs	r2, sl, r7
   17ca8:	sbcs	r2, r0, r3
   17cac:	bcs	18118 <main@@Base+0x2074>
   17cb0:	movw	r0, #29556	; 0x7374
   17cb4:	movt	r0, #28261	; 0x6e65
   17cb8:	eor	r0, sl, r0
   17cbc:	orrs	r0, r0, r1
   17cc0:	bne	1a47c <main@@Base+0x43d8>
   17cc4:	add	r1, r8, #8
   17cc8:	mov	r2, #8
   17ccc:	ldr	sl, [sp, #36]	; 0x24
   17cd0:	sub	r0, r6, r1
   17cd4:	cmp	r0, #8
   17cd8:	movcs	r0, r2
   17cdc:	sub	r7, r0, #1
   17ce0:	cmp	r7, #7
   17ce4:	bhi	18308 <main@@Base+0x2264>
   17ce8:	add	r0, pc, #32
   17cec:	mov	r9, #0
   17cf0:	mov	ip, #0
   17cf4:	mov	lr, #0
   17cf8:	mov	r6, #0
   17cfc:	mov	r3, #0
   17d00:	mov	r5, #0
   17d04:	mov	r2, #0
   17d08:	mov	r4, #0
   17d0c:	ldr	pc, [r0, r7, lsl #2]
   17d10:	andeq	r7, r1, r4, ror sp
   17d14:	andeq	r7, r1, ip, ror #26
   17d18:	andeq	r7, r1, r4, ror #26
   17d1c:	andeq	r7, r1, ip, asr sp
   17d20:	andeq	r7, r1, r0, asr sp
   17d24:	andeq	r7, r1, r4, asr #26
   17d28:	andeq	r7, r1, r4, lsr sp
   17d2c:	andeq	r7, r1, r0, lsr sp
   17d30:	ldrb	ip, [r8, #15]
   17d34:	ldrb	r0, [r8, #14]
   17d38:	mov	lr, r9
   17d3c:	orr	r0, ip, r0, lsl #8
   17d40:	mov	r9, r0
   17d44:	ldrb	r0, [r8, #13]
   17d48:	mov	r6, lr
   17d4c:	orr	r9, r9, r0, lsl #16
   17d50:	ldrb	r0, [r8, #12]
   17d54:	mov	r3, r6
   17d58:	orr	r9, r9, r0, lsl #24
   17d5c:	ldrb	r0, [r8, #11]
   17d60:	orr	r5, r0, r3
   17d64:	ldrb	r0, [r8, #10]
   17d68:	orr	r2, r5, r0, lsl #8
   17d6c:	ldrb	r0, [r8, #9]
   17d70:	orr	r4, r2, r0, lsl #16
   17d74:	ldrb	r2, [r1]
   17d78:	movw	r0, #25205	; 0x6275
   17d7c:	movw	r3, #26220	; 0x666c
   17d80:	ldr	r6, [sp, #44]	; 0x2c
   17d84:	movt	r0, #24948	; 0x6174
   17d88:	movt	r3, #25956	; 0x6564
   17d8c:	eor	r0, r9, r0
   17d90:	orr	r2, r4, r2, lsl #24
   17d94:	eor	r2, r2, r3
   17d98:	orrs	r0, r0, r2
   17d9c:	bne	18308 <main@@Base+0x2264>
   17da0:	add	r7, r8, #16
   17da4:	mov	r1, #8
   17da8:	sub	r0, r6, r7
   17dac:	cmp	r0, #8
   17db0:	movcc	r1, r0
   17db4:	sub	r2, r1, #1
   17db8:	cmp	r2, #7
   17dbc:	bhi	1fad0 <main@@Base+0x9a2c>
   17dc0:	add	r3, pc, #4
   17dc4:	mov	r1, #0
   17dc8:	ldr	pc, [r3, r2, lsl #2]
   17dcc:	andeq	r7, r1, r0, lsl #28
   17dd0:	strdeq	r7, [r1], -r8
   17dd4:	strdeq	r7, [r1], -r0
   17dd8:	andeq	r7, r1, ip, ror #27
   17ddc:	andeq	r7, r1, ip, ror #27
   17de0:	andeq	r7, r1, ip, ror #27
   17de4:	andeq	r7, r1, ip, ror #27
   17de8:	andeq	r7, r1, ip, ror #27
   17dec:	ldrb	r1, [r8, #19]
   17df0:	ldrb	r2, [r8, #18]
   17df4:	orr	r1, r1, r2, lsl #8
   17df8:	ldrb	r2, [r8, #17]
   17dfc:	orr	r1, r1, r2, lsl #16
   17e00:	ldrb	r2, [r7]
   17e04:	orr	r1, r1, r2, lsl #24
   17e08:	movw	r2, #25970	; 0x6572
   17e0c:	movt	r2, #26214	; 0x6666
   17e10:	teq	r1, r2
   17e14:	bne	1fad0 <main@@Base+0x9a2c>
   17e18:	cmp	r0, #5
   17e1c:	blt	1fad0 <main@@Base+0x9a2c>
   17e20:	ldr	r2, [sp, #32]
   17e24:	mov	r1, r8
   17e28:	ldrb	r0, [r1, #20]!
   17e2c:	ldr	r2, [r2]
   17e30:	cmp	r2, #0
   17e34:	beq	19f9c <main@@Base+0x3ef8>
   17e38:	cmp	r0, #33	; 0x21
   17e3c:	bcc	17e48 <main@@Base+0x1da4>
   17e40:	cmp	r0, #58	; 0x3a
   17e44:	bne	1fad0 <main@@Base+0x9a2c>
   17e48:	ldr	r0, [sp, #32]
   17e4c:	mov	r2, #0
   17e50:	str	r2, [r0]
   17e54:	sub	r0, r6, r1
   17e58:	cmp	r0, #2
   17e5c:	bge	19fb4 <main@@Base+0x3f10>
   17e60:	b	1c67c <main@@Base+0x65d8>
   17e64:	movw	r0, #27749	; 0x6c65
   17e68:	movw	r3, #26228	; 0x6674
   17e6c:	ldr	r6, [sp, #44]	; 0x2c
   17e70:	ldr	sl, [sp, #36]	; 0x24
   17e74:	movt	r0, #24930	; 0x6162
   17e78:	movt	r3, #31087	; 0x796f
   17e7c:	eor	r0, r1, r0
   17e80:	eor	r3, r2, r3
   17e84:	orrs	r0, r0, r3
   17e88:	beq	18490 <main@@Base+0x23ec>
   17e8c:	movw	r0, #26990	; 0x696e
   17e90:	movt	r0, #29810	; 0x7472
   17e94:	eor	r0, r1, r0
   17e98:	eor	r1, r2, r7
   17e9c:	orrs	r0, r0, r1
   17ea0:	bne	1e494 <main@@Base+0x83f0>
   17ea4:	add	r7, r8, #16
   17ea8:	mov	r2, #8
   17eac:	sub	r0, r6, r7
   17eb0:	cmp	r0, #8
   17eb4:	movcc	r2, r0
   17eb8:	sub	r1, r2, #2
   17ebc:	cmp	r1, #7
   17ec0:	bcs	18948 <main@@Base+0x28a4>
   17ec4:	ldrb	r1, [r8, #17]
   17ec8:	lsl	r2, r1, #16
   17ecc:	mov	r1, #0
   17ed0:	ldrb	r3, [r7]
   17ed4:	orr	r2, r2, r3, lsl #24
   17ed8:	movw	r3, #0
   17edc:	movt	r3, #26418	; 0x6732
   17ee0:	eor	r3, r2, r3
   17ee4:	orrs	r1, r1, r3
   17ee8:	bne	186c0 <main@@Base+0x261c>
   17eec:	cmp	r0, #3
   17ef0:	blt	1fad0 <main@@Base+0x9a2c>
   17ef4:	ldr	r2, [sp, #32]
   17ef8:	mov	r1, r8
   17efc:	ldrb	r0, [r1, #18]!
   17f00:	ldr	r2, [r2]
   17f04:	cmp	r2, #0
   17f08:	beq	18ee4 <main@@Base+0x2e40>
   17f0c:	cmp	r0, #33	; 0x21
   17f10:	bcc	17f1c <main@@Base+0x1e78>
   17f14:	cmp	r0, #58	; 0x3a
   17f18:	bne	1fad0 <main@@Base+0x9a2c>
   17f1c:	ldr	r0, [sp, #32]
   17f20:	mov	r2, #0
   17f24:	str	r2, [r0]
   17f28:	sub	r0, r6, r1
   17f2c:	cmp	r0, #2
   17f30:	bge	18efc <main@@Base+0x2e58>
   17f34:	b	1a094 <main@@Base+0x3ff0>
   17f38:	ldr	sl, [sp, #36]	; 0x24
   17f3c:	cmp	r9, #6
   17f40:	mov	r7, r8
   17f44:	blt	198a4 <main@@Base+0x3800>
   17f48:	ldr	r2, [sp, #32]
   17f4c:	mov	r1, r8
   17f50:	ldrb	r0, [r1, #5]!
   17f54:	ldr	r2, [r2]
   17f58:	cmp	r2, #0
   17f5c:	beq	18750 <main@@Base+0x26ac>
   17f60:	cmp	r0, #33	; 0x21
   17f64:	bcc	17f74 <main@@Base+0x1ed0>
   17f68:	cmp	r0, #58	; 0x3a
   17f6c:	mov	r7, r8
   17f70:	bne	198a4 <main@@Base+0x3800>
   17f74:	ldr	r0, [sp, #32]
   17f78:	mov	r2, #0
   17f7c:	str	r2, [r0]
   17f80:	sub	r0, r6, r1
   17f84:	cmp	r0, #2
   17f88:	bge	1876c <main@@Base+0x26c8>
   17f8c:	b	18c38 <main@@Base+0x2b94>
   17f90:	ldr	sl, [sp, #36]	; 0x24
   17f94:	mov	r1, r8
   17f98:	b	194f8 <main@@Base+0x3454>
   17f9c:	movw	r1, #29440	; 0x7300
   17fa0:	ldr	sl, [sp, #36]	; 0x24
   17fa4:	bic	r0, r0, #255	; 0xff
   17fa8:	mov	r6, r5
   17fac:	movt	r1, #28783	; 0x706f
   17fb0:	teq	r0, r1
   17fb4:	bne	1a480 <main@@Base+0x43dc>
   17fb8:	cmp	r9, #4
   17fbc:	mov	r4, r8
   17fc0:	blt	1ada0 <main@@Base+0x4cfc>
   17fc4:	ldr	r2, [sp, #32]
   17fc8:	mov	r1, r8
   17fcc:	ldrb	r0, [r1, #3]!
   17fd0:	ldr	r2, [r2]
   17fd4:	cmp	r2, #0
   17fd8:	beq	18b04 <main@@Base+0x2a60>
   17fdc:	cmp	r0, #33	; 0x21
   17fe0:	bcc	17ff0 <main@@Base+0x1f4c>
   17fe4:	cmp	r0, #58	; 0x3a
   17fe8:	mov	r4, r8
   17fec:	bne	1ada0 <main@@Base+0x4cfc>
   17ff0:	ldr	r0, [sp, #32]
   17ff4:	mov	r2, #0
   17ff8:	str	r2, [r0]
   17ffc:	sub	r0, r6, r1
   18000:	cmp	r0, #2
   18004:	bge	18b20 <main@@Base+0x2a7c>
   18008:	b	195b0 <main@@Base+0x350c>
   1800c:	eor	r1, sl, r3
   18010:	eor	r2, r0, r2
   18014:	orrs	r1, r1, r2
   18018:	bne	18508 <main@@Base+0x2464>
   1801c:	add	r7, r8, #8
   18020:	ldr	sl, [sp, #36]	; 0x24
   18024:	mov	r1, #8
   18028:	sub	r0, r6, r7
   1802c:	cmp	r0, #8
   18030:	movcc	r1, r0
   18034:	sub	r1, r1, #1
   18038:	cmp	r1, #7
   1803c:	bhi	1fad0 <main@@Base+0x9a2c>
   18040:	ldrb	r1, [r7]
   18044:	cmp	r1, #121	; 0x79
   18048:	bne	1fad0 <main@@Base+0x9a2c>
   1804c:	cmp	r0, #2
   18050:	blt	1fad0 <main@@Base+0x9a2c>
   18054:	ldr	r2, [sp, #32]
   18058:	mov	r1, r8
   1805c:	ldrb	r0, [r1, #9]!
   18060:	ldr	r2, [r2]
   18064:	cmp	r2, #0
   18068:	beq	19a88 <main@@Base+0x39e4>
   1806c:	cmp	r0, #33	; 0x21
   18070:	bcc	1807c <main@@Base+0x1fd8>
   18074:	cmp	r0, #58	; 0x3a
   18078:	bne	1fad0 <main@@Base+0x9a2c>
   1807c:	ldr	r0, [sp, #32]
   18080:	mov	r2, #0
   18084:	str	r2, [r0]
   18088:	sub	r0, r6, r1
   1808c:	cmp	r0, #2
   18090:	bge	19aa0 <main@@Base+0x39fc>
   18094:	b	1c298 <main@@Base+0x61f4>
   18098:	movw	r3, #0
   1809c:	mov	r2, sl
   180a0:	movt	r3, #26163	; 0x6633
   180a4:	bfc	r2, #0, #16
   180a8:	subs	r3, r3, #65536	; 0x10000
   180ac:	eor	r2, r2, r3
   180b0:	sbc	r3, r7, #0
   180b4:	eor	r0, r0, r3
   180b8:	orrs	r0, r2, r0
   180bc:	bne	18570 <main@@Base+0x24cc>
   180c0:	ldr	sl, [sp, #36]	; 0x24
   180c4:	cmp	r9, #7
   180c8:	mov	r7, r8
   180cc:	blt	1bd18 <main@@Base+0x5c74>
   180d0:	ldr	r2, [sp, #32]
   180d4:	mov	r1, r8
   180d8:	ldrb	r0, [r1, #6]!
   180dc:	ldr	r2, [r2]
   180e0:	cmp	r2, #0
   180e4:	beq	18b3c <main@@Base+0x2a98>
   180e8:	cmp	r0, #33	; 0x21
   180ec:	bcc	180fc <main@@Base+0x2058>
   180f0:	cmp	r0, #58	; 0x3a
   180f4:	mov	r7, r8
   180f8:	bne	1bd18 <main@@Base+0x5c74>
   180fc:	ldr	r0, [sp, #32]
   18100:	mov	r2, #0
   18104:	str	r2, [r0]
   18108:	sub	r0, r6, r1
   1810c:	cmp	r0, #2
   18110:	bge	18b58 <main@@Base+0x2ab4>
   18114:	b	1962c <main@@Base+0x3588>
   18118:	eor	r1, sl, r7
   1811c:	eor	r0, r0, r3
   18120:	orrs	r0, r1, r0
   18124:	bne	1a47c <main@@Base+0x43d8>
   18128:	add	r9, r8, #8
   1812c:	mov	r0, #8
   18130:	mov	r7, r6
   18134:	sub	lr, r6, r9
   18138:	cmp	lr, #8
   1813c:	movcc	r0, lr
   18140:	sub	r6, r0, #1
   18144:	cmp	r6, #7
   18148:	bhi	188b8 <main@@Base+0x2814>
   1814c:	add	r7, pc, #32
   18150:	mov	r1, #0
   18154:	mov	ip, #0
   18158:	mov	sl, #0
   1815c:	mov	r4, #0
   18160:	mov	r3, #0
   18164:	mov	r5, #0
   18168:	mov	r2, #0
   1816c:	mov	r0, #0
   18170:	ldr	pc, [r7, r6, lsl #2]
   18174:	ldrdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   18178:	ldrdeq	r8, [r1], -r0
   1817c:	andeq	r8, r1, r8, asr #3
   18180:	andeq	r8, r1, r0, asr #3
   18184:			; <UNDEFINED> instruction: 0x000181b4
   18188:	andeq	r8, r1, r8, lsr #3
   1818c:	muleq	r1, r8, r1
   18190:	muleq	r1, r4, r1
   18194:	ldrb	ip, [r8, #15]
   18198:	ldrb	r0, [r8, #14]
   1819c:	mov	sl, r1
   181a0:	orr	r0, ip, r0, lsl #8
   181a4:	mov	r1, r0
   181a8:	ldrb	r0, [r8, #13]
   181ac:	mov	r4, sl
   181b0:	orr	r1, r1, r0, lsl #16
   181b4:	ldrb	r0, [r8, #12]
   181b8:	mov	r3, r4
   181bc:	orr	r1, r1, r0, lsl #24
   181c0:	ldrb	r0, [r8, #11]
   181c4:	orr	r5, r0, r3
   181c8:	ldrb	r0, [r8, #10]
   181cc:	orr	r2, r5, r0, lsl #8
   181d0:	ldrb	r0, [r8, #9]
   181d4:	orr	r0, r2, r0, lsl #16
   181d8:	ldrb	r3, [r9]
   181dc:	movw	r2, #27749	; 0x6c65
   181e0:	movt	r2, #30050	; 0x7562
   181e4:	eor	r2, r1, r2
   181e8:	orr	r0, r0, r3, lsl #24
   181ec:	movw	r3, #25711	; 0x646f
   181f0:	movt	r3, #26207	; 0x665f
   181f4:	eor	r3, r0, r3
   181f8:	orrs	r2, r2, r3
   181fc:	bne	18788 <main@@Base+0x26e4>
   18200:	ldr	r6, [sp, #44]	; 0x2c
   18204:	add	r7, r8, #16
   18208:	ldr	sl, [sp, #36]	; 0x24
   1820c:	mov	r1, #8
   18210:	sub	r0, r6, r7
   18214:	cmp	r0, #8
   18218:	movcc	r1, r0
   1821c:	sub	r1, r1, #1
   18220:	cmp	r1, #7
   18224:	bhi	1fad0 <main@@Base+0x9a2c>
   18228:	ldrb	r1, [r7]
   1822c:	cmp	r1, #115	; 0x73
   18230:	bne	1fad0 <main@@Base+0x9a2c>
   18234:	cmp	r0, #2
   18238:	blt	1fad0 <main@@Base+0x9a2c>
   1823c:	ldr	r2, [sp, #32]
   18240:	mov	r1, r8
   18244:	ldrb	r0, [r1, #17]!
   18248:	ldr	r2, [r2]
   1824c:	cmp	r2, #0
   18250:	beq	1aba8 <main@@Base+0x4b04>
   18254:	cmp	r0, #33	; 0x21
   18258:	bcc	18264 <main@@Base+0x21c0>
   1825c:	cmp	r0, #58	; 0x3a
   18260:	bne	1fad0 <main@@Base+0x9a2c>
   18264:	ldr	r0, [sp, #32]
   18268:	mov	r2, #0
   1826c:	str	r2, [r0]
   18270:	sub	r0, r6, r1
   18274:	cmp	r0, #2
   18278:	bge	1abc0 <main@@Base+0x4b1c>
   1827c:	b	1d0ac <main@@Base+0x7008>
   18280:	movw	r0, #30256	; 0x7630
   18284:	ldr	r6, [sp, #44]	; 0x2c
   18288:	movt	r0, #26222	; 0x666e
   1828c:	subs	r0, r0, r1
   18290:	movw	r0, #12895	; 0x325f
   18294:	movt	r0, #30003	; 0x7533
   18298:	sbcs	r0, r0, r2
   1829c:	eor	r0, r1, r3
   182a0:	bcc	185d8 <main@@Base+0x2534>
   182a4:	movw	r1, #13407	; 0x345f
   182a8:	ldr	sl, [sp, #36]	; 0x24
   182ac:	movt	r1, #29494	; 0x7336
   182b0:	eor	r1, r2, r1
   182b4:	orrs	r0, r0, r1
   182b8:	bne	1e494 <main@@Base+0x83f0>
   182bc:	cmp	ip, #9
   182c0:	blt	1a2d0 <main@@Base+0x422c>
   182c4:	ldr	r2, [sp, #32]
   182c8:	mov	r1, r8
   182cc:	ldrb	r0, [r1, #16]!
   182d0:	ldr	r2, [r2]
   182d4:	cmp	r2, #0
   182d8:	beq	19038 <main@@Base+0x2f94>
   182dc:	cmp	r0, #33	; 0x21
   182e0:	bcc	182ec <main@@Base+0x2248>
   182e4:	cmp	r0, #58	; 0x3a
   182e8:	bne	1a2d0 <main@@Base+0x422c>
   182ec:	ldr	r0, [sp, #32]
   182f0:	mov	r2, #0
   182f4:	str	r2, [r0]
   182f8:	sub	r0, r6, r1
   182fc:	cmp	r0, #2
   18300:	bge	19050 <main@@Base+0x2fac>
   18304:	b	1a284 <main@@Base+0x41e0>
   18308:	mov	r0, sl
   1830c:	b	1a488 <main@@Base+0x43e4>
   18310:	ldr	sl, [sp, #36]	; 0x24
   18314:	cmp	r9, #9
   18318:	mov	r7, r8
   1831c:	blt	1a85c <main@@Base+0x47b8>
   18320:	ldr	r2, [sp, #32]
   18324:	mov	r1, r8
   18328:	ldrb	r0, [r1, #8]!
   1832c:	ldr	r2, [r2]
   18330:	cmp	r2, #0
   18334:	beq	1895c <main@@Base+0x28b8>
   18338:	cmp	r0, #33	; 0x21
   1833c:	bcc	1834c <main@@Base+0x22a8>
   18340:	cmp	r0, #58	; 0x3a
   18344:	mov	r7, r8
   18348:	bne	1a85c <main@@Base+0x47b8>
   1834c:	ldr	r0, [sp, #32]
   18350:	mov	r2, #0
   18354:	str	r2, [r0]
   18358:	sub	r0, r6, r1
   1835c:	cmp	r0, #2
   18360:	bge	18978 <main@@Base+0x28d4>
   18364:	b	19080 <main@@Base+0x2fdc>
   18368:	ldr	sl, [sp, #36]	; 0x24
   1836c:	b	1e494 <main@@Base+0x83f0>
   18370:	add	r9, r8, #16
   18374:	ldr	sl, [sp, #36]	; 0x24
   18378:	mov	r1, #8
   1837c:	sub	lr, r6, r9
   18380:	cmp	lr, #8
   18384:	movcc	r1, lr
   18388:	sub	r7, r1, #1
   1838c:	cmp	r7, #7
   18390:	bhi	1e494 <main@@Base+0x83f0>
   18394:	add	r0, pc, #28
   18398:	mov	r1, #0
   1839c:	mov	ip, #0
   183a0:	mov	r5, #0
   183a4:	mov	r3, #0
   183a8:	mov	r6, #0
   183ac:	mov	r4, #0
   183b0:	mov	r2, #0
   183b4:	ldr	pc, [r0, r7, lsl #2]
   183b8:	andeq	r8, r1, r4, lsl r4
   183bc:	andeq	r8, r1, ip, lsl #8
   183c0:	andeq	r8, r1, r4, lsl #8
   183c4:	strdeq	r8, [r1], -ip
   183c8:	strdeq	r8, [r1], -r0
   183cc:	andeq	r8, r1, r0, ror #7
   183d0:	ldrdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   183d4:	ldrdeq	r8, [r1], -r8	; <UNPREDICTABLE>
   183d8:	ldrb	r0, [r8, #22]
   183dc:	lsl	ip, r0, #8
   183e0:	ldrb	r0, [r8, #21]
   183e4:	mov	r5, r1
   183e8:	orr	r0, ip, r0, lsl #16
   183ec:	mov	r1, r0
   183f0:	ldrb	r0, [r8, #20]
   183f4:	mov	r3, r5
   183f8:	orr	r1, r1, r0, lsl #24
   183fc:	ldrb	r0, [r8, #19]
   18400:	orr	r6, r0, r3
   18404:	ldrb	r0, [r8, #18]
   18408:	orr	r4, r6, r0, lsl #8
   1840c:	ldrb	r0, [r8, #17]
   18410:	orr	r2, r4, r0, lsl #16
   18414:	bic	r0, r1, #255	; 0xff
   18418:	movw	r1, #29696	; 0x7400
   1841c:	ldr	r6, [sp, #44]	; 0x2c
   18420:	movt	r1, #30051	; 0x7563
   18424:	eor	r0, r0, r1
   18428:	ldrb	r1, [r9]
   1842c:	orr	r1, r2, r1, lsl #24
   18430:	movw	r2, #29810	; 0x7472
   18434:	movt	r2, #25715	; 0x6473
   18438:	eor	r1, r1, r2
   1843c:	orrs	r0, r0, r1
   18440:	bne	1e494 <main@@Base+0x83f0>
   18444:	cmp	lr, #8
   18448:	blt	1e494 <main@@Base+0x83f0>
   1844c:	ldr	r2, [sp, #32]
   18450:	mov	r1, r8
   18454:	ldrb	r0, [r1, #23]!
   18458:	ldr	r2, [r2]
   1845c:	cmp	r2, #0
   18460:	beq	18f18 <main@@Base+0x2e74>
   18464:	cmp	r0, #33	; 0x21
   18468:	bcc	18474 <main@@Base+0x23d0>
   1846c:	cmp	r0, #58	; 0x3a
   18470:	bne	1e494 <main@@Base+0x83f0>
   18474:	ldr	r0, [sp, #32]
   18478:	mov	r2, #0
   1847c:	str	r2, [r0]
   18480:	sub	r0, r6, r1
   18484:	cmp	r0, #2
   18488:	bge	18f30 <main@@Base+0x2e8c>
   1848c:	b	1a110 <main@@Base+0x406c>
   18490:	add	r7, r8, #16
   18494:	mov	r1, #8
   18498:	sub	r0, r6, r7
   1849c:	cmp	r0, #8
   184a0:	movcc	r1, r0
   184a4:	sub	r1, r1, #1
   184a8:	cmp	r1, #7
   184ac:	bhi	1fad0 <main@@Base+0x9a2c>
   184b0:	ldrb	r1, [r7]
   184b4:	cmp	r1, #115	; 0x73
   184b8:	bne	1fad0 <main@@Base+0x9a2c>
   184bc:	cmp	r0, #2
   184c0:	blt	1fad0 <main@@Base+0x9a2c>
   184c4:	ldr	r2, [sp, #32]
   184c8:	mov	r1, r8
   184cc:	ldrb	r0, [r1, #17]!
   184d0:	ldr	r2, [r2]
   184d4:	cmp	r2, #0
   184d8:	beq	19694 <main@@Base+0x35f0>
   184dc:	cmp	r0, #33	; 0x21
   184e0:	bcc	184ec <main@@Base+0x2448>
   184e4:	cmp	r0, #58	; 0x3a
   184e8:	bne	1fad0 <main@@Base+0x9a2c>
   184ec:	ldr	r0, [sp, #32]
   184f0:	mov	r2, #0
   184f4:	str	r2, [r0]
   184f8:	sub	r0, r6, r1
   184fc:	cmp	r0, #2
   18500:	bge	196ac <main@@Base+0x3608>
   18504:	b	1bdbc <main@@Base+0x5d18>
   18508:	movw	r1, #28257	; 0x6e61
   1850c:	ldr	sl, [sp, #36]	; 0x24
   18510:	movt	r1, #28001	; 0x6d61
   18514:	teq	r0, r1
   18518:	bne	1a480 <main@@Base+0x43dc>
   1851c:	cmp	r9, #5
   18520:	mov	r7, r8
   18524:	blt	1cb04 <main@@Base+0x6a60>
   18528:	ldr	r2, [sp, #32]
   1852c:	mov	r1, r8
   18530:	ldrb	r0, [r1, #4]!
   18534:	ldr	r2, [r2]
   18538:	cmp	r2, #0
   1853c:	beq	18f4c <main@@Base+0x2ea8>
   18540:	cmp	r0, #33	; 0x21
   18544:	bcc	18554 <main@@Base+0x24b0>
   18548:	cmp	r0, #58	; 0x3a
   1854c:	mov	r7, r8
   18550:	bne	1cb04 <main@@Base+0x6a60>
   18554:	ldr	r0, [sp, #32]
   18558:	mov	r2, #0
   1855c:	str	r2, [r0]
   18560:	sub	r0, r6, r1
   18564:	cmp	r0, #2
   18568:	bge	18f68 <main@@Base+0x2ec4>
   1856c:	b	1a18c <main@@Base+0x40e8>
   18570:	and	r0, sl, #-16777216	; 0xff000000
   18574:	eor	r0, r0, #1711276032	; 0x66000000
   18578:	orrs	r0, r0, r1
   1857c:	bne	1a47c <main@@Base+0x43d8>
   18580:	ldr	sl, [sp, #36]	; 0x24
   18584:	cmp	r9, #6
   18588:	mov	r7, r8
   1858c:	blt	1ccd4 <main@@Base+0x6c30>
   18590:	ldr	r2, [sp, #32]
   18594:	mov	r1, r8
   18598:	ldrb	r0, [r1, #5]!
   1859c:	ldr	r2, [r2]
   185a0:	cmp	r2, #0
   185a4:	beq	18f84 <main@@Base+0x2ee0>
   185a8:	cmp	r0, #33	; 0x21
   185ac:	bcc	185bc <main@@Base+0x2518>
   185b0:	cmp	r0, #58	; 0x3a
   185b4:	mov	r7, r8
   185b8:	bne	1ccd4 <main@@Base+0x6c30>
   185bc:	ldr	r0, [sp, #32]
   185c0:	mov	r2, #0
   185c4:	str	r2, [r0]
   185c8:	sub	r0, r6, r1
   185cc:	cmp	r0, #2
   185d0:	bge	18fa0 <main@@Base+0x2efc>
   185d4:	b	1a208 <main@@Base+0x4164>
   185d8:	movw	r1, #13407	; 0x345f
   185dc:	ldr	sl, [sp, #36]	; 0x24
   185e0:	movt	r1, #30006	; 0x7536
   185e4:	eor	r1, r2, r1
   185e8:	orrs	r1, r0, r1
   185ec:	beq	188fc <main@@Base+0x2858>
   185f0:	movw	r1, #12895	; 0x325f
   185f4:	movt	r1, #30003	; 0x7533
   185f8:	eor	r1, r2, r1
   185fc:	orrs	r0, r0, r1
   18600:	bne	1e494 <main@@Base+0x83f0>
   18604:	cmp	ip, #9
   18608:	blt	1be94 <main@@Base+0x5df0>
   1860c:	ldr	r2, [sp, #32]
   18610:	mov	r1, r8
   18614:	ldrb	r0, [r1, #16]!
   18618:	ldr	r2, [r2]
   1861c:	cmp	r2, #0
   18620:	beq	196c8 <main@@Base+0x3624>
   18624:	cmp	r0, #33	; 0x21
   18628:	bcc	18634 <main@@Base+0x2590>
   1862c:	cmp	r0, #58	; 0x3a
   18630:	bne	1be94 <main@@Base+0x5df0>
   18634:	ldr	r0, [sp, #32]
   18638:	mov	r2, #0
   1863c:	str	r2, [r0]
   18640:	sub	r0, r6, r1
   18644:	cmp	r0, #2
   18648:	bge	196e0 <main@@Base+0x363c>
   1864c:	b	1be40 <main@@Base+0x5d9c>
   18650:	cmp	r0, #34	; 0x22
   18654:	mov	r7, r8
   18658:	bne	19108 <main@@Base+0x3064>
   1865c:	add	r1, r8, #7
   18660:	sub	r0, r6, r1
   18664:	cmp	r0, #2
   18668:	blt	189a8 <main@@Base+0x2904>
   1866c:	ldrb	r0, [r1]
   18670:	cmp	r0, #32
   18674:	bls	18994 <main@@Base+0x28f0>
   18678:	mov	r7, r1
   1867c:	cmp	r7, r6
   18680:	bne	189c0 <main@@Base+0x291c>
   18684:	b	189f8 <main@@Base+0x2954>
   18688:	cmp	r0, #34	; 0x22
   1868c:	mov	r7, r8
   18690:	bne	191e0 <main@@Base+0x313c>
   18694:	add	r1, r8, #6
   18698:	sub	r0, r6, r1
   1869c:	cmp	r0, #2
   186a0:	blt	18a24 <main@@Base+0x2980>
   186a4:	ldrb	r0, [r1]
   186a8:	cmp	r0, #32
   186ac:	bls	18a10 <main@@Base+0x296c>
   186b0:	mov	r7, r1
   186b4:	cmp	r7, r6
   186b8:	bne	18a3c <main@@Base+0x2998>
   186bc:	b	18a74 <main@@Base+0x29d0>
   186c0:	and	r1, r2, #-16777216	; 0xff000000
   186c4:	teq	r1, #1728053248	; 0x67000000
   186c8:	bne	1fad0 <main@@Base+0x9a2c>
   186cc:	cmp	r0, #2
   186d0:	blt	1fad0 <main@@Base+0x9a2c>
   186d4:	ldr	r2, [sp, #32]
   186d8:	mov	r1, r8
   186dc:	ldrb	r0, [r1, #17]!
   186e0:	ldr	r2, [r2]
   186e4:	cmp	r2, #0
   186e8:	beq	19a20 <main@@Base+0x397c>
   186ec:	cmp	r0, #33	; 0x21
   186f0:	bcc	186fc <main@@Base+0x2658>
   186f4:	cmp	r0, #58	; 0x3a
   186f8:	bne	1fad0 <main@@Base+0x9a2c>
   186fc:	ldr	r0, [sp, #32]
   18700:	mov	r2, #0
   18704:	str	r2, [r0]
   18708:	sub	r0, r6, r1
   1870c:	cmp	r0, #2
   18710:	bge	19a38 <main@@Base+0x3994>
   18714:	b	1c190 <main@@Base+0x60ec>
   18718:	cmp	r0, #34	; 0x22
   1871c:	mov	r1, r8
   18720:	bne	19844 <main@@Base+0x37a0>
   18724:	add	r2, r8, #6
   18728:	sub	r0, r6, r2
   1872c:	cmp	r0, #2
   18730:	blt	18bbc <main@@Base+0x2b18>
   18734:	ldrb	r0, [r2]
   18738:	cmp	r0, #32
   1873c:	bls	18ba8 <main@@Base+0x2b04>
   18740:	mov	r1, r2
   18744:	cmp	r1, r6
   18748:	bne	18bd8 <main@@Base+0x2b34>
   1874c:	b	18c10 <main@@Base+0x2b6c>
   18750:	cmp	r0, #34	; 0x22
   18754:	mov	r7, r8
   18758:	bne	198a4 <main@@Base+0x3800>
   1875c:	add	r1, r8, #6
   18760:	sub	r0, r6, r1
   18764:	cmp	r0, #2
   18768:	blt	18c38 <main@@Base+0x2b94>
   1876c:	ldrb	r0, [r1]
   18770:	cmp	r0, #32
   18774:	bls	18c24 <main@@Base+0x2b80>
   18778:	mov	r7, r1
   1877c:	cmp	r7, r6
   18780:	bne	18c50 <main@@Base+0x2bac>
   18784:	b	18c88 <main@@Base+0x2be4>
   18788:	movw	r2, #24428	; 0x5f6c
   1878c:	lsr	r1, r1, #8
   18790:	ldr	r7, [sp, #44]	; 0x2c
   18794:	movt	r2, #102	; 0x66
   18798:	eor	r2, r2, r0, lsr #8
   1879c:	orr	r0, r1, r0, lsl #24
   187a0:	movw	r1, #26483	; 0x6773
   187a4:	movt	r1, #28526	; 0x6f6e
   187a8:	eor	r0, r0, r1
   187ac:	orrs	r0, r0, r2
   187b0:	bne	188b8 <main@@Base+0x2814>
   187b4:	ldr	sl, [sp, #36]	; 0x24
   187b8:	cmp	lr, #8
   187bc:	mov	r6, r7
   187c0:	blt	1e494 <main@@Base+0x83f0>
   187c4:	ldr	r2, [sp, #32]
   187c8:	mov	r1, r8
   187cc:	ldrb	r0, [r1, #15]!
   187d0:	ldr	r2, [r2]
   187d4:	cmp	r2, #0
   187d8:	beq	19abc <main@@Base+0x3a18>
   187dc:	cmp	r0, #33	; 0x21
   187e0:	bcc	187ec <main@@Base+0x2748>
   187e4:	cmp	r0, #58	; 0x3a
   187e8:	bne	1e494 <main@@Base+0x83f0>
   187ec:	ldr	r0, [sp, #32]
   187f0:	mov	r2, #0
   187f4:	str	r2, [r0]
   187f8:	sub	r0, r6, r1
   187fc:	cmp	r0, #2
   18800:	bge	19ad4 <main@@Base+0x3a30>
   18804:	b	1c5f8 <main@@Base+0x6554>
   18808:	cmp	r0, #34	; 0x22
   1880c:	mov	r1, r8
   18810:	bne	19b14 <main@@Base+0x3a70>
   18814:	add	r2, r8, #5
   18818:	sub	r0, r6, r2
   1881c:	cmp	r0, #2
   18820:	blt	18cb4 <main@@Base+0x2c10>
   18824:	ldrb	r0, [r2]
   18828:	cmp	r0, #32
   1882c:	bls	18ca0 <main@@Base+0x2bfc>
   18830:	mov	r1, r2
   18834:	cmp	r1, r6
   18838:	bne	18cd0 <main@@Base+0x2c2c>
   1883c:	b	18d08 <main@@Base+0x2c64>
   18840:	cmp	r0, #34	; 0x22
   18844:	mov	r4, r8
   18848:	bne	19b7c <main@@Base+0x3ad8>
   1884c:	add	r1, r8, #5
   18850:	sub	r0, r6, r1
   18854:	cmp	r0, #2
   18858:	blt	18d30 <main@@Base+0x2c8c>
   1885c:	ldrb	r0, [r1]
   18860:	cmp	r0, #32
   18864:	bls	18d1c <main@@Base+0x2c78>
   18868:	mov	r4, r1
   1886c:	cmp	r4, r6
   18870:	bne	18d48 <main@@Base+0x2ca4>
   18874:	b	18d80 <main@@Base+0x2cdc>
   18878:	cmp	r0, #34	; 0x22
   1887c:	mov	r1, r8
   18880:	bne	19f38 <main@@Base+0x3e94>
   18884:	add	r2, r8, #5
   18888:	sub	r0, r5, r2
   1888c:	mov	r7, r5
   18890:	cmp	r0, #2
   18894:	blt	18db0 <main@@Base+0x2d0c>
   18898:	ldrb	r0, [r2]
   1889c:	cmp	r0, #32
   188a0:	bls	18d98 <main@@Base+0x2cf4>
   188a4:	mov	r1, r2
   188a8:	mov	r7, r5
   188ac:	cmp	r1, r7
   188b0:	bne	18dcc <main@@Base+0x2d28>
   188b4:	b	18e64 <main@@Base+0x2dc0>
   188b8:	ldr	sl, [sp, #36]	; 0x24
   188bc:	mov	r1, r9
   188c0:	mov	r2, r7
   188c4:	mov	r0, sl
   188c8:	bl	373bc <flatcc_json_parser_unmatched_symbol@@Base>
   188cc:	ldr	r5, [sp, #40]	; 0x28
   188d0:	mov	r4, r0
   188d4:	mov	r6, r7
   188d8:	sub	r0, r6, r4
   188dc:	cmp	r0, #2
   188e0:	bge	1a4a4 <main@@Base+0x4400>
   188e4:	b	1cc94 <main@@Base+0x6bf0>
   188e8:	cmp	r2, #1
   188ec:	mov	r1, #0
   188f0:	mov	r2, #0
   188f4:	beq	1771c <main@@Base+0x1678>
   188f8:	b	1fad0 <main@@Base+0x9a2c>
   188fc:	cmp	ip, #9
   18900:	blt	1bf8c <main@@Base+0x5ee8>
   18904:	ldr	r2, [sp, #32]
   18908:	mov	r1, r8
   1890c:	ldrb	r0, [r1, #16]!
   18910:	ldr	r2, [r2]
   18914:	cmp	r2, #0
   18918:	beq	196fc <main@@Base+0x3658>
   1891c:	cmp	r0, #33	; 0x21
   18920:	bcc	1892c <main@@Base+0x2888>
   18924:	cmp	r0, #58	; 0x3a
   18928:	bne	1bf8c <main@@Base+0x5ee8>
   1892c:	ldr	r0, [sp, #32]
   18930:	mov	r2, #0
   18934:	str	r2, [r0]
   18938:	sub	r0, r6, r1
   1893c:	cmp	r0, #2
   18940:	bge	19714 <main@@Base+0x3670>
   18944:	b	1bf38 <main@@Base+0x5e94>
   18948:	cmp	r2, #1
   1894c:	mov	r1, #0
   18950:	mov	r2, #0
   18954:	beq	17ed0 <main@@Base+0x1e2c>
   18958:	b	1fad0 <main@@Base+0x9a2c>
   1895c:	cmp	r0, #34	; 0x22
   18960:	mov	r7, r8
   18964:	bne	1a85c <main@@Base+0x47b8>
   18968:	add	r1, r8, #9
   1896c:	sub	r0, r6, r1
   18970:	cmp	r0, #2
   18974:	blt	19080 <main@@Base+0x2fdc>
   18978:	ldrb	r0, [r1]
   1897c:	cmp	r0, #32
   18980:	bls	1906c <main@@Base+0x2fc8>
   18984:	mov	r7, r1
   18988:	cmp	r7, r6
   1898c:	bne	19098 <main@@Base+0x2ff4>
   18990:	b	190d0 <main@@Base+0x302c>
   18994:	bne	189a8 <main@@Base+0x2904>
   18998:	mov	r7, r1
   1899c:	ldrb	r0, [r7, #1]!
   189a0:	cmp	r0, #32
   189a4:	bhi	189b8 <main@@Base+0x2914>
   189a8:	mov	r0, sl
   189ac:	mov	r2, r6
   189b0:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   189b4:	mov	r7, r0
   189b8:	cmp	r7, r6
   189bc:	beq	189f8 <main@@Base+0x2954>
   189c0:	ldrb	r0, [r7]
   189c4:	cmp	r0, #58	; 0x3a
   189c8:	bne	189f8 <main@@Base+0x2954>
   189cc:	add	r1, r7, #1
   189d0:	sub	r0, r6, r1
   189d4:	cmp	r0, #2
   189d8:	blt	190f8 <main@@Base+0x3054>
   189dc:	ldrb	r0, [r1]
   189e0:	cmp	r0, #32
   189e4:	bls	190e8 <main@@Base+0x3044>
   189e8:	mov	r7, r1
   189ec:	cmp	r8, r7
   189f0:	bne	19110 <main@@Base+0x306c>
   189f4:	b	1a480 <main@@Base+0x43dc>
   189f8:	mov	r0, sl
   189fc:	mov	r1, r7
   18a00:	mov	r2, r6
   18a04:	mov	r3, #4
   18a08:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   18a0c:	b	19104 <main@@Base+0x3060>
   18a10:	bne	18a24 <main@@Base+0x2980>
   18a14:	mov	r7, r1
   18a18:	ldrb	r0, [r7, #1]!
   18a1c:	cmp	r0, #32
   18a20:	bhi	18a34 <main@@Base+0x2990>
   18a24:	ldr	r0, [sp, #36]	; 0x24
   18a28:	mov	r2, r6
   18a2c:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   18a30:	mov	r7, r0
   18a34:	cmp	r7, r6
   18a38:	beq	18a74 <main@@Base+0x29d0>
   18a3c:	ldrb	r0, [r7]
   18a40:	cmp	r0, #58	; 0x3a
   18a44:	bne	18a74 <main@@Base+0x29d0>
   18a48:	add	r1, r7, #1
   18a4c:	sub	r0, r6, r1
   18a50:	cmp	r0, #2
   18a54:	blt	191d0 <main@@Base+0x312c>
   18a58:	ldrb	r0, [r1]
   18a5c:	cmp	r0, #32
   18a60:	bls	191c0 <main@@Base+0x311c>
   18a64:	mov	r7, r1
   18a68:	cmp	r8, r7
   18a6c:	bne	191e8 <main@@Base+0x3144>
   18a70:	b	1a3ec <main@@Base+0x4348>
   18a74:	ldr	r0, [sp, #36]	; 0x24
   18a78:	mov	r1, r7
   18a7c:	mov	r2, r6
   18a80:	mov	r3, #4
   18a84:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   18a88:	b	191dc <main@@Base+0x3138>
   18a8c:	cmp	r0, #34	; 0x22
   18a90:	bne	194f0 <main@@Base+0x344c>
   18a94:	add	r1, r8, #17
   18a98:	ldr	r6, [sp, #36]	; 0x24
   18a9c:	sub	r0, r5, r1
   18aa0:	mov	r7, r5
   18aa4:	cmp	r0, #2
   18aa8:	blt	194a4 <main@@Base+0x3400>
   18aac:	ldrb	r0, [r1]
   18ab0:	cmp	r0, #32
   18ab4:	bls	1948c <main@@Base+0x33e8>
   18ab8:	mov	r4, r1
   18abc:	mov	r7, r5
   18ac0:	cmp	r4, r7
   18ac4:	bne	194bc <main@@Base+0x3418>
   18ac8:	b	19508 <main@@Base+0x3464>
   18acc:	cmp	r0, #34	; 0x22
   18ad0:	mov	r7, r8
   18ad4:	bne	1abfc <main@@Base+0x4b58>
   18ad8:	add	r1, r8, #3
   18adc:	sub	r0, r6, r1
   18ae0:	cmp	r0, #2
   18ae4:	blt	19534 <main@@Base+0x3490>
   18ae8:	ldrb	r0, [r1]
   18aec:	cmp	r0, #32
   18af0:	bls	19520 <main@@Base+0x347c>
   18af4:	mov	r7, r1
   18af8:	cmp	r7, r6
   18afc:	bne	1954c <main@@Base+0x34a8>
   18b00:	b	19584 <main@@Base+0x34e0>
   18b04:	cmp	r0, #34	; 0x22
   18b08:	mov	r4, r8
   18b0c:	bne	1ada0 <main@@Base+0x4cfc>
   18b10:	add	r1, r8, #4
   18b14:	sub	r0, r6, r1
   18b18:	cmp	r0, #2
   18b1c:	blt	195b0 <main@@Base+0x350c>
   18b20:	ldrb	r0, [r1]
   18b24:	cmp	r0, #32
   18b28:	bls	1959c <main@@Base+0x34f8>
   18b2c:	mov	r4, r1
   18b30:	cmp	r4, r6
   18b34:	bne	195c8 <main@@Base+0x3524>
   18b38:	b	19600 <main@@Base+0x355c>
   18b3c:	cmp	r0, #34	; 0x22
   18b40:	mov	r7, r8
   18b44:	bne	1bd18 <main@@Base+0x5c74>
   18b48:	add	r1, r8, #7
   18b4c:	sub	r0, r6, r1
   18b50:	cmp	r0, #2
   18b54:	blt	1962c <main@@Base+0x3588>
   18b58:	ldrb	r0, [r1]
   18b5c:	cmp	r0, #32
   18b60:	bls	19618 <main@@Base+0x3574>
   18b64:	mov	r7, r1
   18b68:	cmp	r7, r6
   18b6c:	bne	19644 <main@@Base+0x35a0>
   18b70:	b	1967c <main@@Base+0x35d8>
   18b74:	cmp	r0, #34	; 0x22
   18b78:	bne	19790 <main@@Base+0x36ec>
   18b7c:	add	r1, r8, #17
   18b80:	sub	r0, r6, r1
   18b84:	cmp	r0, #2
   18b88:	blt	19744 <main@@Base+0x36a0>
   18b8c:	ldrb	r0, [r1]
   18b90:	cmp	r0, #32
   18b94:	bls	19730 <main@@Base+0x368c>
   18b98:	mov	r7, r1
   18b9c:	cmp	r7, r6
   18ba0:	bne	1975c <main@@Base+0x36b8>
   18ba4:	b	19808 <main@@Base+0x3764>
   18ba8:	bne	18bbc <main@@Base+0x2b18>
   18bac:	mov	r1, r2
   18bb0:	ldrb	r0, [r1, #1]!
   18bb4:	cmp	r0, #32
   18bb8:	bhi	18bd0 <main@@Base+0x2b2c>
   18bbc:	mov	r1, r2
   18bc0:	mov	r0, sl
   18bc4:	mov	r2, r6
   18bc8:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   18bcc:	mov	r1, r0
   18bd0:	cmp	r1, r6
   18bd4:	beq	18c10 <main@@Base+0x2b6c>
   18bd8:	ldrb	r0, [r1]
   18bdc:	cmp	r0, #58	; 0x3a
   18be0:	bne	18c10 <main@@Base+0x2b6c>
   18be4:	add	r2, r1, #1
   18be8:	sub	r0, r6, r2
   18bec:	cmp	r0, #2
   18bf0:	blt	19830 <main@@Base+0x378c>
   18bf4:	ldrb	r0, [r2]
   18bf8:	cmp	r0, #32
   18bfc:	bls	19820 <main@@Base+0x377c>
   18c00:	mov	r1, r2
   18c04:	cmp	r8, r1
   18c08:	bne	1984c <main@@Base+0x37a8>
   18c0c:	b	1a480 <main@@Base+0x43dc>
   18c10:	mov	r0, sl
   18c14:	mov	r2, r6
   18c18:	mov	r3, #4
   18c1c:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   18c20:	b	19840 <main@@Base+0x379c>
   18c24:	bne	18c38 <main@@Base+0x2b94>
   18c28:	mov	r7, r1
   18c2c:	ldrb	r0, [r7, #1]!
   18c30:	cmp	r0, #32
   18c34:	bhi	18c48 <main@@Base+0x2ba4>
   18c38:	mov	r0, sl
   18c3c:	mov	r2, r6
   18c40:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   18c44:	mov	r7, r0
   18c48:	cmp	r7, r6
   18c4c:	beq	18c88 <main@@Base+0x2be4>
   18c50:	ldrb	r0, [r7]
   18c54:	cmp	r0, #58	; 0x3a
   18c58:	bne	18c88 <main@@Base+0x2be4>
   18c5c:	add	r1, r7, #1
   18c60:	sub	r0, r6, r1
   18c64:	cmp	r0, #2
   18c68:	blt	19894 <main@@Base+0x37f0>
   18c6c:	ldrb	r0, [r1]
   18c70:	cmp	r0, #32
   18c74:	bls	19884 <main@@Base+0x37e0>
   18c78:	mov	r7, r1
   18c7c:	cmp	r8, r7
   18c80:	bne	198ac <main@@Base+0x3808>
   18c84:	b	1a480 <main@@Base+0x43dc>
   18c88:	mov	r0, sl
   18c8c:	mov	r1, r7
   18c90:	mov	r2, r6
   18c94:	mov	r3, #4
   18c98:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   18c9c:	b	198a0 <main@@Base+0x37fc>
   18ca0:	bne	18cb4 <main@@Base+0x2c10>
   18ca4:	mov	r1, r2
   18ca8:	ldrb	r0, [r1, #1]!
   18cac:	cmp	r0, #32
   18cb0:	bhi	18cc8 <main@@Base+0x2c24>
   18cb4:	mov	r1, r2
   18cb8:	mov	r0, sl
   18cbc:	mov	r2, r6
   18cc0:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   18cc4:	mov	r1, r0
   18cc8:	cmp	r1, r6
   18ccc:	beq	18d08 <main@@Base+0x2c64>
   18cd0:	ldrb	r0, [r1]
   18cd4:	cmp	r0, #58	; 0x3a
   18cd8:	bne	18d08 <main@@Base+0x2c64>
   18cdc:	add	r2, r1, #1
   18ce0:	sub	r0, r6, r2
   18ce4:	cmp	r0, #2
   18ce8:	blt	19b00 <main@@Base+0x3a5c>
   18cec:	ldrb	r0, [r2]
   18cf0:	cmp	r0, #32
   18cf4:	bls	19af0 <main@@Base+0x3a4c>
   18cf8:	mov	r1, r2
   18cfc:	cmp	r8, r1
   18d00:	bne	19b1c <main@@Base+0x3a78>
   18d04:	b	1a480 <main@@Base+0x43dc>
   18d08:	mov	r0, sl
   18d0c:	mov	r2, r6
   18d10:	mov	r3, #4
   18d14:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   18d18:	b	19b10 <main@@Base+0x3a6c>
   18d1c:	bne	18d30 <main@@Base+0x2c8c>
   18d20:	mov	r4, r1
   18d24:	ldrb	r0, [r4, #1]!
   18d28:	cmp	r0, #32
   18d2c:	bhi	18d40 <main@@Base+0x2c9c>
   18d30:	mov	r0, sl
   18d34:	mov	r2, r6
   18d38:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   18d3c:	mov	r4, r0
   18d40:	cmp	r4, r6
   18d44:	beq	18d80 <main@@Base+0x2cdc>
   18d48:	ldrb	r0, [r4]
   18d4c:	cmp	r0, #58	; 0x3a
   18d50:	bne	18d80 <main@@Base+0x2cdc>
   18d54:	add	r1, r4, #1
   18d58:	sub	r0, r6, r1
   18d5c:	cmp	r0, #2
   18d60:	blt	19b6c <main@@Base+0x3ac8>
   18d64:	ldrb	r0, [r1]
   18d68:	cmp	r0, #32
   18d6c:	bls	19b5c <main@@Base+0x3ab8>
   18d70:	mov	r4, r1
   18d74:	cmp	r8, r4
   18d78:	bne	19b84 <main@@Base+0x3ae0>
   18d7c:	b	1a480 <main@@Base+0x43dc>
   18d80:	mov	r0, sl
   18d84:	mov	r1, r4
   18d88:	mov	r2, r6
   18d8c:	mov	r3, #4
   18d90:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   18d94:	b	19b78 <main@@Base+0x3ad4>
   18d98:	mov	r7, r5
   18d9c:	bne	18db0 <main@@Base+0x2d0c>
   18da0:	mov	r1, r2
   18da4:	ldrb	r0, [r1, #1]!
   18da8:	cmp	r0, #32
   18dac:	bhi	18dc4 <main@@Base+0x2d20>
   18db0:	ldr	r0, [sp, #36]	; 0x24
   18db4:	mov	r1, r2
   18db8:	mov	r2, r7
   18dbc:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   18dc0:	mov	r1, r0
   18dc4:	cmp	r1, r7
   18dc8:	beq	18e64 <main@@Base+0x2dc0>
   18dcc:	ldrb	r0, [r1]
   18dd0:	cmp	r0, #58	; 0x3a
   18dd4:	bne	18e64 <main@@Base+0x2dc0>
   18dd8:	add	r2, r1, #1
   18ddc:	sub	r0, r5, r2
   18de0:	cmp	r0, #2
   18de4:	blt	19f24 <main@@Base+0x3e80>
   18de8:	ldrb	r0, [r2]
   18dec:	cmp	r0, #32
   18df0:	bls	19f14 <main@@Base+0x3e70>
   18df4:	mov	r1, r2
   18df8:	cmp	r8, r1
   18dfc:	bne	19f40 <main@@Base+0x3e9c>
   18e00:	eor	r0, r6, #889192448	; 0x35000000
   18e04:	mov	r6, r5
   18e08:	orrs	r0, r0, r4
   18e0c:	bne	1a3ec <main@@Base+0x4348>
   18e10:	cmp	r9, #6
   18e14:	mov	r7, r8
   18e18:	blt	1a380 <main@@Base+0x42dc>
   18e1c:	ldr	r2, [sp, #32]
   18e20:	mov	r1, r8
   18e24:	ldrb	r0, [r1, #5]!
   18e28:	ldr	r2, [r2]
   18e2c:	cmp	r2, #0
   18e30:	beq	18e78 <main@@Base+0x2dd4>
   18e34:	cmp	r0, #33	; 0x21
   18e38:	bcc	18e48 <main@@Base+0x2da4>
   18e3c:	cmp	r0, #58	; 0x3a
   18e40:	mov	r7, r8
   18e44:	bne	1a380 <main@@Base+0x42dc>
   18e48:	ldr	r0, [sp, #32]
   18e4c:	mov	r2, #0
   18e50:	str	r2, [r0]
   18e54:	sub	r0, r6, r1
   18e58:	cmp	r0, #2
   18e5c:	bge	18e94 <main@@Base+0x2df0>
   18e60:	b	18fd0 <main@@Base+0x2f2c>
   18e64:	ldr	r0, [sp, #36]	; 0x24
   18e68:	mov	r2, r5
   18e6c:	mov	r3, #4
   18e70:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   18e74:	b	19f34 <main@@Base+0x3e90>
   18e78:	cmp	r0, #34	; 0x22
   18e7c:	mov	r7, r8
   18e80:	bne	1a380 <main@@Base+0x42dc>
   18e84:	add	r1, r8, #6
   18e88:	sub	r0, r6, r1
   18e8c:	cmp	r0, #2
   18e90:	blt	18fd0 <main@@Base+0x2f2c>
   18e94:	ldrb	r0, [r1]
   18e98:	cmp	r0, #32
   18e9c:	bls	18fbc <main@@Base+0x2f18>
   18ea0:	mov	r7, r1
   18ea4:	cmp	r7, r6
   18ea8:	bne	18fe8 <main@@Base+0x2f44>
   18eac:	b	19020 <main@@Base+0x2f7c>
   18eb0:	cmp	r0, #34	; 0x22
   18eb4:	bne	1fad0 <main@@Base+0x9a2c>
   18eb8:	add	r1, r8, #11
   18ebc:	sub	r0, r6, r1
   18ec0:	cmp	r0, #2
   18ec4:	blt	19fe4 <main@@Base+0x3f40>
   18ec8:	ldrb	r0, [r1]
   18ecc:	cmp	r0, #32
   18ed0:	bls	19fd0 <main@@Base+0x3f2c>
   18ed4:	mov	r4, r1
   18ed8:	cmp	r4, r6
   18edc:	bne	19ffc <main@@Base+0x3f58>
   18ee0:	b	1a034 <main@@Base+0x3f90>
   18ee4:	cmp	r0, #34	; 0x22
   18ee8:	bne	1fad0 <main@@Base+0x9a2c>
   18eec:	add	r1, r8, #19
   18ef0:	sub	r0, r6, r1
   18ef4:	cmp	r0, #2
   18ef8:	blt	1a094 <main@@Base+0x3ff0>
   18efc:	ldrb	r0, [r1]
   18f00:	cmp	r0, #32
   18f04:	bls	1a080 <main@@Base+0x3fdc>
   18f08:	mov	r4, r1
   18f0c:	cmp	r4, r6
   18f10:	bne	1a0ac <main@@Base+0x4008>
   18f14:	b	1a0e4 <main@@Base+0x4040>
   18f18:	cmp	r0, #34	; 0x22
   18f1c:	bne	1e494 <main@@Base+0x83f0>
   18f20:	add	r1, r8, #24
   18f24:	sub	r0, r6, r1
   18f28:	cmp	r0, #2
   18f2c:	blt	1a110 <main@@Base+0x406c>
   18f30:	ldrb	r0, [r1]
   18f34:	cmp	r0, #32
   18f38:	bls	1a0fc <main@@Base+0x4058>
   18f3c:	mov	r7, r1
   18f40:	cmp	r7, r6
   18f44:	bne	1a128 <main@@Base+0x4084>
   18f48:	b	1a160 <main@@Base+0x40bc>
   18f4c:	cmp	r0, #34	; 0x22
   18f50:	mov	r7, r8
   18f54:	bne	1cb04 <main@@Base+0x6a60>
   18f58:	add	r1, r8, #5
   18f5c:	sub	r0, r6, r1
   18f60:	cmp	r0, #2
   18f64:	blt	1a18c <main@@Base+0x40e8>
   18f68:	ldrb	r0, [r1]
   18f6c:	cmp	r0, #32
   18f70:	bls	1a178 <main@@Base+0x40d4>
   18f74:	mov	r7, r1
   18f78:	cmp	r7, r6
   18f7c:	bne	1a1a4 <main@@Base+0x4100>
   18f80:	b	1a1dc <main@@Base+0x4138>
   18f84:	cmp	r0, #34	; 0x22
   18f88:	mov	r7, r8
   18f8c:	bne	1ccd4 <main@@Base+0x6c30>
   18f90:	add	r1, r8, #6
   18f94:	sub	r0, r6, r1
   18f98:	cmp	r0, #2
   18f9c:	blt	1a208 <main@@Base+0x4164>
   18fa0:	ldrb	r0, [r1]
   18fa4:	cmp	r0, #32
   18fa8:	bls	1a1f4 <main@@Base+0x4150>
   18fac:	mov	r7, r1
   18fb0:	cmp	r7, r6
   18fb4:	bne	1a220 <main@@Base+0x417c>
   18fb8:	b	1a258 <main@@Base+0x41b4>
   18fbc:	bne	18fd0 <main@@Base+0x2f2c>
   18fc0:	mov	r7, r1
   18fc4:	ldrb	r0, [r7, #1]!
   18fc8:	cmp	r0, #32
   18fcc:	bhi	18fe0 <main@@Base+0x2f3c>
   18fd0:	ldr	r0, [sp, #36]	; 0x24
   18fd4:	mov	r2, r6
   18fd8:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   18fdc:	mov	r7, r0
   18fe0:	cmp	r7, r6
   18fe4:	beq	19020 <main@@Base+0x2f7c>
   18fe8:	ldrb	r0, [r7]
   18fec:	cmp	r0, #58	; 0x3a
   18ff0:	bne	19020 <main@@Base+0x2f7c>
   18ff4:	add	r1, r7, #1
   18ff8:	sub	r0, r6, r1
   18ffc:	cmp	r0, #2
   19000:	blt	1a370 <main@@Base+0x42cc>
   19004:	ldrb	r0, [r1]
   19008:	cmp	r0, #32
   1900c:	bls	1a360 <main@@Base+0x42bc>
   19010:	mov	r7, r1
   19014:	cmp	r8, r7
   19018:	bne	1a388 <main@@Base+0x42e4>
   1901c:	b	1a3ec <main@@Base+0x4348>
   19020:	ldr	r0, [sp, #36]	; 0x24
   19024:	mov	r1, r7
   19028:	mov	r2, r6
   1902c:	mov	r3, #4
   19030:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   19034:	b	1a37c <main@@Base+0x42d8>
   19038:	cmp	r0, #34	; 0x22
   1903c:	bne	1a2d0 <main@@Base+0x422c>
   19040:	add	r1, r8, #17
   19044:	sub	r0, r6, r1
   19048:	cmp	r0, #2
   1904c:	blt	1a284 <main@@Base+0x41e0>
   19050:	ldrb	r0, [r1]
   19054:	cmp	r0, #32
   19058:	bls	1a270 <main@@Base+0x41cc>
   1905c:	mov	r7, r1
   19060:	cmp	r7, r6
   19064:	bne	1a29c <main@@Base+0x41f8>
   19068:	b	1a348 <main@@Base+0x42a4>
   1906c:	bne	19080 <main@@Base+0x2fdc>
   19070:	mov	r7, r1
   19074:	ldrb	r0, [r7, #1]!
   19078:	cmp	r0, #32
   1907c:	bhi	19090 <main@@Base+0x2fec>
   19080:	mov	r0, sl
   19084:	mov	r2, r6
   19088:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   1908c:	mov	r7, r0
   19090:	cmp	r7, r6
   19094:	beq	190d0 <main@@Base+0x302c>
   19098:	ldrb	r0, [r7]
   1909c:	cmp	r0, #58	; 0x3a
   190a0:	bne	190d0 <main@@Base+0x302c>
   190a4:	add	r1, r7, #1
   190a8:	sub	r0, r6, r1
   190ac:	cmp	r0, #2
   190b0:	blt	1a84c <main@@Base+0x47a8>
   190b4:	ldrb	r0, [r1]
   190b8:	cmp	r0, #32
   190bc:	bls	1a83c <main@@Base+0x4798>
   190c0:	mov	r7, r1
   190c4:	cmp	r8, r7
   190c8:	bne	1a864 <main@@Base+0x47c0>
   190cc:	b	1a480 <main@@Base+0x43dc>
   190d0:	mov	r0, sl
   190d4:	mov	r1, r7
   190d8:	mov	r2, r6
   190dc:	mov	r3, #4
   190e0:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   190e4:	b	1a858 <main@@Base+0x47b4>
   190e8:	bne	190f8 <main@@Base+0x3054>
   190ec:	ldrb	r0, [r7, #2]!
   190f0:	cmp	r0, #32
   190f4:	bhi	19108 <main@@Base+0x3064>
   190f8:	mov	r0, sl
   190fc:	mov	r2, r6
   19100:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   19104:	mov	r7, r0
   19108:	cmp	r8, r7
   1910c:	beq	1a480 <main@@Base+0x43dc>
   19110:	mov	r0, #0
   19114:	mov	r1, r7
   19118:	mov	r2, r6
   1911c:	sub	r3, fp, #56	; 0x38
   19120:	str	r0, [fp, #-56]	; 0xffffffc8
   19124:	mov	r0, sl
   19128:	bl	38e58 <flatcc_json_parser_float@@Base>
   1912c:	ldr	r5, [sp, #40]	; 0x28
   19130:	mov	r4, r0
   19134:	cmp	r7, r0
   19138:	bne	19170 <main@@Base+0x30cc>
   1913c:	sub	r0, fp, #56	; 0x38
   19140:	mov	r1, r7
   19144:	mov	r2, r6
   19148:	str	r0, [sp]
   1914c:	movw	r0, #148	; 0x94
   19150:	movt	r0, #6
   19154:	add	r3, r0, #96	; 0x60
   19158:	mov	r0, sl
   1915c:	bl	25e3c <main@@Base+0xfd98>
   19160:	mov	r4, r0
   19164:	cmp	r0, r7
   19168:	cmpne	r4, r6
   1916c:	beq	16fd8 <main@@Base+0xf34>
   19170:	vldr	s0, [fp, #-56]	; 0xffffffc8
   19174:	vcmp.f32	s0, #0.0
   19178:	vmrs	APSR_nzcv, fpscr
   1917c:	bne	1918c <main@@Base+0x30e8>
   19180:	ldrb	r0, [sl, #8]
   19184:	tst	r0, #2
   19188:	beq	1a498 <main@@Base+0x43f4>
   1918c:	ldr	r0, [sl]
   19190:	mov	r1, #27
   19194:	mov	r2, #4
   19198:	mov	r3, #4
   1919c:	bl	332fc <flatcc_builder_table_add@@Base>
   191a0:	cmp	r0, #0
   191a4:	beq	16fd8 <main@@Base+0xf34>
   191a8:	ldr	r1, [fp, #-56]	; 0xffffffc8
   191ac:	str	r1, [r0]
   191b0:	sub	r0, r6, r4
   191b4:	cmp	r0, #2
   191b8:	bge	1a4a4 <main@@Base+0x4400>
   191bc:	b	1cc94 <main@@Base+0x6bf0>
   191c0:	bne	191d0 <main@@Base+0x312c>
   191c4:	ldrb	r0, [r7, #2]!
   191c8:	cmp	r0, #32
   191cc:	bhi	191e0 <main@@Base+0x313c>
   191d0:	ldr	r0, [sp, #36]	; 0x24
   191d4:	mov	r2, r6
   191d8:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   191dc:	mov	r7, r0
   191e0:	cmp	r8, r7
   191e4:	beq	1a3ec <main@@Base+0x4348>
   191e8:	ldr	sl, [sp, #36]	; 0x24
   191ec:	mov	r1, #4
   191f0:	mov	r2, #2
   191f4:	mvn	r3, #-1073741824	; 0xc0000000
   191f8:	ldr	r0, [sl]
   191fc:	bl	319ec <flatcc_builder_start_vector@@Base>
   19200:	cmp	r0, #0
   19204:	bne	21888 <main@@Base+0xb7e4>
   19208:	cmp	r7, r6
   1920c:	beq	1924c <main@@Base+0x31a8>
   19210:	ldrb	r0, [r7]
   19214:	cmp	r0, #91	; 0x5b
   19218:	bne	1924c <main@@Base+0x31a8>
   1921c:	add	r1, r7, #1
   19220:	sub	r0, r6, r1
   19224:	cmp	r0, #2
   19228:	blt	192a4 <main@@Base+0x3200>
   1922c:	ldrb	r0, [r1]
   19230:	cmp	r0, #32
   19234:	bls	19294 <main@@Base+0x31f0>
   19238:	mov	r7, r1
   1923c:	cmp	r7, r6
   19240:	mov	r4, r6
   19244:	bne	192c0 <main@@Base+0x321c>
   19248:	b	19304 <main@@Base+0x3260>
   1924c:	mov	r0, sl
   19250:	mov	r1, r7
   19254:	mov	r2, r6
   19258:	mov	r3, #22
   1925c:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   19260:	ldr	r5, [sp, #40]	; 0x28
   19264:	mov	r7, r0
   19268:	ldr	r0, [sl]
   1926c:	bl	32c64 <flatcc_builder_end_vector@@Base>
   19270:	cmp	r0, #0
   19274:	str	r0, [sp, #52]	; 0x34
   19278:	beq	21888 <main@@Base+0xb7e4>
   1927c:	ldr	r0, [sl]
   19280:	mov	r1, #9
   19284:	bl	3316c <flatcc_builder_table_add_offset@@Base>
   19288:	cmp	r0, #0
   1928c:	bne	1a590 <main@@Base+0x44ec>
   19290:	b	21888 <main@@Base+0xb7e4>
   19294:	bne	192a4 <main@@Base+0x3200>
   19298:	ldrb	r0, [r7, #2]!
   1929c:	cmp	r0, #32
   192a0:	bhi	192b4 <main@@Base+0x3210>
   192a4:	mov	r0, sl
   192a8:	mov	r2, r6
   192ac:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   192b0:	mov	r7, r0
   192b4:	cmp	r7, r6
   192b8:	mov	r4, r6
   192bc:	beq	19304 <main@@Base+0x3260>
   192c0:	ldrb	r0, [r7]
   192c4:	cmp	r0, #93	; 0x5d
   192c8:	bne	19300 <main@@Base+0x325c>
   192cc:	ldr	r5, [sp, #40]	; 0x28
   192d0:	add	r1, r7, #1
   192d4:	sub	r0, r6, r1
   192d8:	cmp	r0, #2
   192dc:	blt	19f8c <main@@Base+0x3ee8>
   192e0:	ldrb	r0, [r1]
   192e4:	cmp	r0, #32
   192e8:	bhi	1943c <main@@Base+0x3398>
   192ec:	bne	19f8c <main@@Base+0x3ee8>
   192f0:	ldrb	r0, [r7, #2]!
   192f4:	cmp	r0, #32
   192f8:	bhi	19268 <main@@Base+0x31c4>
   192fc:	b	19f8c <main@@Base+0x3ee8>
   19300:	mov	r4, r7
   19304:	ldr	r0, [sl]
   19308:	mov	r1, #1
   1930c:	bl	30e98 <flatcc_builder_extend_vector@@Base>
   19310:	mov	r3, r0
   19314:	cmp	r0, #0
   19318:	beq	16fd8 <main@@Base+0xf34>
   1931c:	mov	r0, sl
   19320:	mov	r1, r4
   19324:	mov	r2, r6
   19328:	bl	23e2c <main@@Base+0xdd88>
   1932c:	mov	r1, r0
   19330:	sub	r0, r6, r0
   19334:	cmp	r0, #2
   19338:	blt	1936c <main@@Base+0x32c8>
   1933c:	ldrb	r0, [r1]
   19340:	cmp	r0, #32
   19344:	bls	19358 <main@@Base+0x32b4>
   19348:	mov	r4, r1
   1934c:	cmp	r4, r6
   19350:	bne	19384 <main@@Base+0x32e0>
   19354:	b	19408 <main@@Base+0x3364>
   19358:	bne	1936c <main@@Base+0x32c8>
   1935c:	mov	r4, r1
   19360:	ldrb	r0, [r4, #1]!
   19364:	cmp	r0, #32
   19368:	bhi	1937c <main@@Base+0x32d8>
   1936c:	mov	r0, sl
   19370:	mov	r2, r6
   19374:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   19378:	mov	r4, r0
   1937c:	cmp	r4, r6
   19380:	beq	19408 <main@@Base+0x3364>
   19384:	ldrb	r0, [r4]
   19388:	cmp	r0, #44	; 0x2c
   1938c:	bne	19414 <main@@Base+0x3370>
   19390:	add	r1, r4, #1
   19394:	sub	r0, r6, r1
   19398:	cmp	r0, #2
   1939c:	blt	193cc <main@@Base+0x3328>
   193a0:	ldrb	r0, [r1]
   193a4:	cmp	r0, #32
   193a8:	bls	193bc <main@@Base+0x3318>
   193ac:	mov	r4, r1
   193b0:	cmp	r4, r6
   193b4:	bne	193e4 <main@@Base+0x3340>
   193b8:	b	19444 <main@@Base+0x33a0>
   193bc:	bne	193cc <main@@Base+0x3328>
   193c0:	ldrb	r0, [r4, #2]!
   193c4:	cmp	r0, #32
   193c8:	bhi	193dc <main@@Base+0x3338>
   193cc:	mov	r0, sl
   193d0:	mov	r2, r6
   193d4:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   193d8:	mov	r4, r0
   193dc:	cmp	r4, r6
   193e0:	beq	19444 <main@@Base+0x33a0>
   193e4:	ldrb	r0, [r4]
   193e8:	cmp	r0, #93	; 0x5d
   193ec:	bne	19304 <main@@Base+0x3260>
   193f0:	ldr	r5, [sp, #40]	; 0x28
   193f4:	add	r1, r4, #1
   193f8:	sub	r0, r6, r1
   193fc:	cmp	r0, #2
   19400:	blt	19f8c <main@@Base+0x3ee8>
   19404:	b	19430 <main@@Base+0x338c>
   19408:	ldr	r5, [sp, #40]	; 0x28
   1940c:	mov	r7, r6
   19410:	b	19268 <main@@Base+0x31c4>
   19414:	ldr	r5, [sp, #40]	; 0x28
   19418:	cmp	r0, #93	; 0x5d
   1941c:	bne	19a08 <main@@Base+0x3964>
   19420:	add	r1, r4, #1
   19424:	sub	r0, r6, r1
   19428:	cmp	r0, #2
   1942c:	blt	19f8c <main@@Base+0x3ee8>
   19430:	ldrb	r0, [r1]
   19434:	cmp	r0, #32
   19438:	bls	19f78 <main@@Base+0x3ed4>
   1943c:	mov	r7, r1
   19440:	b	19268 <main@@Base+0x31c4>
   19444:	mov	r0, sl
   19448:	mov	r1, r6
   1944c:	mov	r2, r6
   19450:	mov	r3, #9
   19454:	b	1925c <main@@Base+0x31b8>
   19458:	cmp	r0, #34	; 0x22
   1945c:	bne	1e494 <main@@Base+0x83f0>
   19460:	add	r1, r8, #22
   19464:	sub	r0, r6, r1
   19468:	cmp	r0, #2
   1946c:	blt	1aa54 <main@@Base+0x49b0>
   19470:	ldrb	r0, [r1]
   19474:	cmp	r0, #32
   19478:	bls	1aa40 <main@@Base+0x499c>
   1947c:	mov	r4, r1
   19480:	cmp	r4, r6
   19484:	bne	1aa6c <main@@Base+0x49c8>
   19488:	b	1aaa4 <main@@Base+0x4a00>
   1948c:	mov	r7, r5
   19490:	bne	194a4 <main@@Base+0x3400>
   19494:	mov	r4, r1
   19498:	ldrb	r0, [r4, #1]!
   1949c:	cmp	r0, #32
   194a0:	bhi	194b4 <main@@Base+0x3410>
   194a4:	mov	r0, r6
   194a8:	mov	r2, r7
   194ac:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   194b0:	mov	r4, r0
   194b4:	cmp	r4, r7
   194b8:	beq	19508 <main@@Base+0x3464>
   194bc:	ldrb	r0, [r4]
   194c0:	cmp	r0, #58	; 0x3a
   194c4:	bne	19508 <main@@Base+0x3464>
   194c8:	add	r1, r4, #1
   194cc:	sub	r0, r5, r1
   194d0:	cmp	r0, #2
   194d4:	blt	1aae4 <main@@Base+0x4a40>
   194d8:	ldrb	r0, [r1]
   194dc:	cmp	r0, #32
   194e0:	bls	1aad4 <main@@Base+0x4a30>
   194e4:	mov	r4, r1
   194e8:	cmp	r9, r4
   194ec:	bne	1aafc <main@@Base+0x4a58>
   194f0:	ldr	sl, [sp, #36]	; 0x24
   194f4:	mov	r1, r9
   194f8:	mov	r0, sl
   194fc:	mov	r6, r5
   19500:	mov	r2, r5
   19504:	b	1a48c <main@@Base+0x43e8>
   19508:	mov	r0, r6
   1950c:	mov	r1, r4
   19510:	mov	r2, r5
   19514:	mov	r3, #4
   19518:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   1951c:	b	1aaf0 <main@@Base+0x4a4c>
   19520:	bne	19534 <main@@Base+0x3490>
   19524:	mov	r7, r1
   19528:	ldrb	r0, [r7, #1]!
   1952c:	cmp	r0, #32
   19530:	bhi	19544 <main@@Base+0x34a0>
   19534:	mov	r0, sl
   19538:	mov	r2, r6
   1953c:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   19540:	mov	r7, r0
   19544:	cmp	r7, r6
   19548:	beq	19584 <main@@Base+0x34e0>
   1954c:	ldrb	r0, [r7]
   19550:	cmp	r0, #58	; 0x3a
   19554:	bne	19584 <main@@Base+0x34e0>
   19558:	add	r1, r7, #1
   1955c:	sub	r0, r6, r1
   19560:	cmp	r0, #2
   19564:	blt	1abec <main@@Base+0x4b48>
   19568:	ldrb	r0, [r1]
   1956c:	cmp	r0, #32
   19570:	bls	1abdc <main@@Base+0x4b38>
   19574:	mov	r7, r1
   19578:	cmp	r8, r7
   1957c:	bne	1ac04 <main@@Base+0x4b60>
   19580:	b	1a480 <main@@Base+0x43dc>
   19584:	mov	r0, sl
   19588:	mov	r1, r7
   1958c:	mov	r2, r6
   19590:	mov	r3, #4
   19594:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   19598:	b	1abf8 <main@@Base+0x4b54>
   1959c:	bne	195b0 <main@@Base+0x350c>
   195a0:	mov	r4, r1
   195a4:	ldrb	r0, [r4, #1]!
   195a8:	cmp	r0, #32
   195ac:	bhi	195c0 <main@@Base+0x351c>
   195b0:	mov	r0, sl
   195b4:	mov	r2, r6
   195b8:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   195bc:	mov	r4, r0
   195c0:	cmp	r4, r6
   195c4:	beq	19600 <main@@Base+0x355c>
   195c8:	ldrb	r0, [r4]
   195cc:	cmp	r0, #58	; 0x3a
   195d0:	bne	19600 <main@@Base+0x355c>
   195d4:	add	r1, r4, #1
   195d8:	sub	r0, r6, r1
   195dc:	cmp	r0, #2
   195e0:	blt	1ad90 <main@@Base+0x4cec>
   195e4:	ldrb	r0, [r1]
   195e8:	cmp	r0, #32
   195ec:	bls	1ad80 <main@@Base+0x4cdc>
   195f0:	mov	r4, r1
   195f4:	cmp	r8, r4
   195f8:	bne	1ada8 <main@@Base+0x4d04>
   195fc:	b	1a480 <main@@Base+0x43dc>
   19600:	mov	r0, sl
   19604:	mov	r1, r4
   19608:	mov	r2, r6
   1960c:	mov	r3, #4
   19610:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   19614:	b	1ad9c <main@@Base+0x4cf8>
   19618:	bne	1962c <main@@Base+0x3588>
   1961c:	mov	r7, r1
   19620:	ldrb	r0, [r7, #1]!
   19624:	cmp	r0, #32
   19628:	bhi	1963c <main@@Base+0x3598>
   1962c:	mov	r0, sl
   19630:	mov	r2, r6
   19634:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   19638:	mov	r7, r0
   1963c:	cmp	r7, r6
   19640:	beq	1967c <main@@Base+0x35d8>
   19644:	ldrb	r0, [r7]
   19648:	cmp	r0, #58	; 0x3a
   1964c:	bne	1967c <main@@Base+0x35d8>
   19650:	add	r1, r7, #1
   19654:	sub	r0, r6, r1
   19658:	cmp	r0, #2
   1965c:	blt	1bd08 <main@@Base+0x5c64>
   19660:	ldrb	r0, [r1]
   19664:	cmp	r0, #32
   19668:	bls	1bcf8 <main@@Base+0x5c54>
   1966c:	mov	r7, r1
   19670:	cmp	r8, r7
   19674:	bne	1bd20 <main@@Base+0x5c7c>
   19678:	b	1a480 <main@@Base+0x43dc>
   1967c:	mov	r0, sl
   19680:	mov	r1, r7
   19684:	mov	r2, r6
   19688:	mov	r3, #4
   1968c:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   19690:	b	1bd14 <main@@Base+0x5c70>
   19694:	cmp	r0, #34	; 0x22
   19698:	bne	1fad0 <main@@Base+0x9a2c>
   1969c:	add	r1, r8, #18
   196a0:	sub	r0, r6, r1
   196a4:	cmp	r0, #2
   196a8:	blt	1bdbc <main@@Base+0x5d18>
   196ac:	ldrb	r0, [r1]
   196b0:	cmp	r0, #32
   196b4:	bls	1bda8 <main@@Base+0x5d04>
   196b8:	mov	r4, r1
   196bc:	cmp	r4, r6
   196c0:	bne	1bdd4 <main@@Base+0x5d30>
   196c4:	b	1be14 <main@@Base+0x5d70>
   196c8:	cmp	r0, #34	; 0x22
   196cc:	bne	1be94 <main@@Base+0x5df0>
   196d0:	add	r1, r8, #17
   196d4:	sub	r0, r6, r1
   196d8:	cmp	r0, #2
   196dc:	blt	1be40 <main@@Base+0x5d9c>
   196e0:	ldrb	r0, [r1]
   196e4:	cmp	r0, #32
   196e8:	bls	1be2c <main@@Base+0x5d88>
   196ec:	mov	r7, r1
   196f0:	cmp	r7, r6
   196f4:	bne	1be58 <main@@Base+0x5db4>
   196f8:	b	1bf0c <main@@Base+0x5e68>
   196fc:	cmp	r0, #34	; 0x22
   19700:	bne	1bf8c <main@@Base+0x5ee8>
   19704:	add	r1, r8, #17
   19708:	sub	r0, r6, r1
   1970c:	cmp	r0, #2
   19710:	blt	1bf38 <main@@Base+0x5e94>
   19714:	ldrb	r0, [r1]
   19718:	cmp	r0, #32
   1971c:	bls	1bf24 <main@@Base+0x5e80>
   19720:	mov	r7, r1
   19724:	cmp	r7, r6
   19728:	bne	1bf50 <main@@Base+0x5eac>
   1972c:	b	1c004 <main@@Base+0x5f60>
   19730:	bne	19744 <main@@Base+0x36a0>
   19734:	mov	r7, r1
   19738:	ldrb	r0, [r7, #1]!
   1973c:	cmp	r0, #32
   19740:	bhi	19754 <main@@Base+0x36b0>
   19744:	mov	r0, sl
   19748:	mov	r2, r6
   1974c:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   19750:	mov	r7, r0
   19754:	cmp	r7, r6
   19758:	beq	19808 <main@@Base+0x3764>
   1975c:	ldrb	r0, [r7]
   19760:	cmp	r0, #58	; 0x3a
   19764:	bne	19808 <main@@Base+0x3764>
   19768:	add	r1, r7, #1
   1976c:	sub	r0, r6, r1
   19770:	cmp	r0, #2
   19774:	blt	1c078 <main@@Base+0x5fd4>
   19778:	ldrb	r0, [r1]
   1977c:	cmp	r0, #32
   19780:	bls	1c068 <main@@Base+0x5fc4>
   19784:	mov	r7, r1
   19788:	cmp	r9, r7
   1978c:	bne	1c090 <main@@Base+0x5fec>
   19790:	add	r4, r8, #16
   19794:	mov	r1, #8
   19798:	sub	r0, r6, r4
   1979c:	cmp	r0, #8
   197a0:	movcc	r1, r0
   197a4:	sub	r1, r1, #1
   197a8:	cmp	r1, #7
   197ac:	bhi	2057c <main@@Base+0xa4d8>
   197b0:	ldrb	r1, [r4]
   197b4:	cmp	r1, #97	; 0x61
   197b8:	bne	2057c <main@@Base+0xa4d8>
   197bc:	cmp	r0, #2
   197c0:	blt	2057c <main@@Base+0xa4d8>
   197c4:	ldr	r2, [sp, #32]
   197c8:	mov	r1, r8
   197cc:	ldrb	r0, [r1, #17]!
   197d0:	ldr	r2, [r2]
   197d4:	cmp	r2, #0
   197d8:	beq	1a04c <main@@Base+0x3fa8>
   197dc:	cmp	r0, #33	; 0x21
   197e0:	bcc	197ec <main@@Base+0x3748>
   197e4:	cmp	r0, #58	; 0x3a
   197e8:	bne	2057c <main@@Base+0xa4d8>
   197ec:	ldr	r0, [sp, #32]
   197f0:	mov	r2, #0
   197f4:	str	r2, [r0]
   197f8:	sub	r0, r6, r1
   197fc:	cmp	r0, #2
   19800:	bge	1a064 <main@@Base+0x3fc0>
   19804:	b	1c700 <main@@Base+0x665c>
   19808:	mov	r0, sl
   1980c:	mov	r1, r7
   19810:	mov	r2, r6
   19814:	mov	r3, #4
   19818:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   1981c:	b	1c084 <main@@Base+0x5fe0>
   19820:	bne	19830 <main@@Base+0x378c>
   19824:	ldrb	r0, [r1, #2]!
   19828:	cmp	r0, #32
   1982c:	bhi	19844 <main@@Base+0x37a0>
   19830:	mov	r1, r2
   19834:	mov	r0, sl
   19838:	mov	r2, r6
   1983c:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   19840:	mov	r1, r0
   19844:	cmp	r8, r1
   19848:	beq	1a480 <main@@Base+0x43dc>
   1984c:	mov	r0, sl
   19850:	mov	r2, r6
   19854:	add	r3, sp, #52	; 0x34
   19858:	bl	16f98 <main@@Base+0xef4>
   1985c:	mov	r4, r0
   19860:	ldr	r0, [sp, #52]	; 0x34
   19864:	cmp	r0, #0
   19868:	beq	16fd8 <main@@Base+0xf34>
   1986c:	ldr	r0, [sl]
   19870:	mov	r1, #12
   19874:	bl	3316c <flatcc_builder_table_add_offset@@Base>
   19878:	cmp	r0, #0
   1987c:	bne	19b50 <main@@Base+0x3aac>
   19880:	b	16fd8 <main@@Base+0xf34>
   19884:	bne	19894 <main@@Base+0x37f0>
   19888:	ldrb	r0, [r7, #2]!
   1988c:	cmp	r0, #32
   19890:	bhi	198a4 <main@@Base+0x3800>
   19894:	mov	r0, sl
   19898:	mov	r2, r6
   1989c:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   198a0:	mov	r7, r0
   198a4:	cmp	r8, r7
   198a8:	beq	1a480 <main@@Base+0x43dc>
   198ac:	mov	r2, r6
   198b0:	mov	r6, #0
   198b4:	cmp	r7, r2
   198b8:	str	r6, [fp, #-52]	; 0xffffffcc
   198bc:	str	r6, [fp, #-56]	; 0xffffffc8
   198c0:	strb	r6, [fp, #-60]	; 0xffffffc4
   198c4:	str	r6, [sp, #56]	; 0x38
   198c8:	beq	1992c <main@@Base+0x3888>
   198cc:	sub	r0, fp, #56	; 0x38
   198d0:	mov	r1, r7
   198d4:	add	r3, sp, #56	; 0x38
   198d8:	mov	r8, r2
   198dc:	str	r0, [sp]
   198e0:	mov	r0, sl
   198e4:	bl	38fa8 <flatcc_json_parser_integer@@Base>
   198e8:	ldr	r5, [sp, #40]	; 0x28
   198ec:	cmp	r0, r7
   198f0:	beq	19944 <main@@Base+0x38a0>
   198f4:	ldr	r2, [sp, #56]	; 0x38
   198f8:	mov	r4, r0
   198fc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   19900:	ldr	r1, [fp, #-52]	; 0xffffffcc
   19904:	cmp	r2, #0
   19908:	beq	19954 <main@@Base+0x38b0>
   1990c:	subs	r2, r0, #129	; 0x81
   19910:	sbcs	r1, r1, #0
   19914:	bcc	19984 <main@@Base+0x38e0>
   19918:	mov	r0, sl
   1991c:	mov	r1, r4
   19920:	mov	r2, r8
   19924:	mov	r3, #8
   19928:	b	19970 <main@@Base+0x38cc>
   1992c:	ldr	r5, [sp, #40]	; 0x28
   19930:	mov	r8, r2
   19934:	mov	r4, r2
   19938:	cmp	r7, r4
   1993c:	bne	199e4 <main@@Base+0x3940>
   19940:	b	199a8 <main@@Base+0x3904>
   19944:	mov	r4, r7
   19948:	cmp	r7, r4
   1994c:	bne	199e4 <main@@Base+0x3940>
   19950:	b	199a8 <main@@Base+0x3904>
   19954:	subs	r2, r0, #128	; 0x80
   19958:	sbcs	r1, r1, #0
   1995c:	bcc	19998 <main@@Base+0x38f4>
   19960:	mov	r0, sl
   19964:	mov	r1, r4
   19968:	mov	r2, r8
   1996c:	mov	r3, #7
   19970:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   19974:	mov	r4, r0
   19978:	cmp	r7, r4
   1997c:	bne	199e4 <main@@Base+0x3940>
   19980:	b	199a8 <main@@Base+0x3904>
   19984:	rsb	r6, r0, #0
   19988:	strb	r6, [fp, #-60]	; 0xffffffc4
   1998c:	cmp	r7, r4
   19990:	bne	199e4 <main@@Base+0x3940>
   19994:	b	199a8 <main@@Base+0x3904>
   19998:	mov	r6, r0
   1999c:	strb	r6, [fp, #-60]	; 0xffffffc4
   199a0:	cmp	r7, r4
   199a4:	bne	199e4 <main@@Base+0x3940>
   199a8:	ldr	r3, [sp, #24]
   199ac:	sub	r0, fp, #60	; 0x3c
   199b0:	mov	r1, r7
   199b4:	mov	r2, r8
   199b8:	mov	r6, r8
   199bc:	str	r0, [sp]
   199c0:	mov	r0, sl
   199c4:	bl	23764 <main@@Base+0xd6c0>
   199c8:	mov	r4, r0
   199cc:	cmp	r0, r7
   199d0:	beq	16fd8 <main@@Base+0xf34>
   199d4:	mov	r8, r6
   199d8:	cmp	r4, r6
   199dc:	beq	21890 <main@@Base+0xb7ec>
   199e0:	ldrb	r6, [fp, #-60]	; 0xffffffc4
   199e4:	uxtb	r0, r6
   199e8:	cmp	r0, #8
   199ec:	bne	199fc <main@@Base+0x3958>
   199f0:	ldrb	r0, [sl, #8]
   199f4:	tst	r0, #2
   199f8:	beq	1cc84 <main@@Base+0x6be0>
   199fc:	ldr	r0, [sl]
   19a00:	mov	r1, #6
   19a04:	b	1a9f8 <main@@Base+0x4954>
   19a08:	mov	r0, sl
   19a0c:	mov	r1, r4
   19a10:	mov	r2, r6
   19a14:	mov	r3, #9
   19a18:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   19a1c:	b	19264 <main@@Base+0x31c0>
   19a20:	cmp	r0, #34	; 0x22
   19a24:	bne	1fad0 <main@@Base+0x9a2c>
   19a28:	add	r1, r8, #18
   19a2c:	sub	r0, r6, r1
   19a30:	cmp	r0, #2
   19a34:	blt	1c190 <main@@Base+0x60ec>
   19a38:	ldrb	r0, [r1]
   19a3c:	cmp	r0, #32
   19a40:	bls	1c17c <main@@Base+0x60d8>
   19a44:	mov	r4, r1
   19a48:	cmp	r4, r6
   19a4c:	bne	1c1a8 <main@@Base+0x6104>
   19a50:	b	1c1e8 <main@@Base+0x6144>
   19a54:	cmp	r0, #34	; 0x22
   19a58:	bne	1fad0 <main@@Base+0x9a2c>
   19a5c:	add	r1, r8, #10
   19a60:	sub	r0, r6, r1
   19a64:	cmp	r0, #2
   19a68:	blt	1c214 <main@@Base+0x6170>
   19a6c:	ldrb	r0, [r1]
   19a70:	cmp	r0, #32
   19a74:	bls	1c200 <main@@Base+0x615c>
   19a78:	mov	r4, r1
   19a7c:	cmp	r4, r6
   19a80:	bne	1c22c <main@@Base+0x6188>
   19a84:	b	1c26c <main@@Base+0x61c8>
   19a88:	cmp	r0, #34	; 0x22
   19a8c:	bne	1fad0 <main@@Base+0x9a2c>
   19a90:	add	r1, r8, #10
   19a94:	sub	r0, r6, r1
   19a98:	cmp	r0, #2
   19a9c:	blt	1c298 <main@@Base+0x61f4>
   19aa0:	ldrb	r0, [r1]
   19aa4:	cmp	r0, #32
   19aa8:	bls	1c284 <main@@Base+0x61e0>
   19aac:	mov	r4, r1
   19ab0:	cmp	r4, r6
   19ab4:	bne	1c2b0 <main@@Base+0x620c>
   19ab8:	b	1c2f0 <main@@Base+0x624c>
   19abc:	cmp	r0, #34	; 0x22
   19ac0:	bne	1e494 <main@@Base+0x83f0>
   19ac4:	add	r1, r8, #16
   19ac8:	sub	r0, r6, r1
   19acc:	cmp	r0, #2
   19ad0:	blt	1c5f8 <main@@Base+0x6554>
   19ad4:	ldrb	r0, [r1]
   19ad8:	cmp	r0, #32
   19adc:	bls	1c5e4 <main@@Base+0x6540>
   19ae0:	mov	r4, r1
   19ae4:	cmp	r4, r6
   19ae8:	bne	1c610 <main@@Base+0x656c>
   19aec:	b	1c650 <main@@Base+0x65ac>
   19af0:	bne	19b00 <main@@Base+0x3a5c>
   19af4:	ldrb	r0, [r1, #2]!
   19af8:	cmp	r0, #32
   19afc:	bhi	19b14 <main@@Base+0x3a70>
   19b00:	mov	r1, r2
   19b04:	mov	r0, sl
   19b08:	mov	r2, r6
   19b0c:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   19b10:	mov	r1, r0
   19b14:	cmp	r8, r1
   19b18:	beq	1a480 <main@@Base+0x43dc>
   19b1c:	mov	r0, sl
   19b20:	mov	r2, r6
   19b24:	add	r3, sp, #52	; 0x34
   19b28:	bl	39580 <flatcc_json_parser_build_string@@Base>
   19b2c:	mov	r4, r0
   19b30:	ldr	r0, [sp, #52]	; 0x34
   19b34:	cmp	r0, #0
   19b38:	beq	16fd8 <main@@Base+0xf34>
   19b3c:	ldr	r0, [sl]
   19b40:	mov	r1, #3
   19b44:	bl	3316c <flatcc_builder_table_add_offset@@Base>
   19b48:	cmp	r0, #0
   19b4c:	beq	16fd8 <main@@Base+0xf34>
   19b50:	ldr	r1, [sp, #52]	; 0x34
   19b54:	str	r1, [r0]
   19b58:	b	1a494 <main@@Base+0x43f0>
   19b5c:	bne	19b6c <main@@Base+0x3ac8>
   19b60:	ldrb	r0, [r4, #2]!
   19b64:	cmp	r0, #32
   19b68:	bhi	19b7c <main@@Base+0x3ad8>
   19b6c:	mov	r0, sl
   19b70:	mov	r2, r6
   19b74:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   19b78:	mov	r4, r0
   19b7c:	cmp	r8, r4
   19b80:	beq	1a480 <main@@Base+0x43dc>
   19b84:	ldr	r0, [sl]
   19b88:	mov	r1, #1
   19b8c:	mov	r2, #1
   19b90:	mvn	r3, #0
   19b94:	bl	319ec <flatcc_builder_start_vector@@Base>
   19b98:	cmp	r0, #0
   19b9c:	bne	16fd8 <main@@Base+0xf34>
   19ba0:	cmp	r4, r6
   19ba4:	beq	19be8 <main@@Base+0x3b44>
   19ba8:	ldrb	r0, [r4]
   19bac:	cmp	r0, #91	; 0x5b
   19bb0:	bne	19be8 <main@@Base+0x3b44>
   19bb4:	ldr	r5, [sp, #40]	; 0x28
   19bb8:	add	r1, r4, #1
   19bbc:	sub	r0, r6, r1
   19bc0:	cmp	r0, #2
   19bc4:	blt	19c54 <main@@Base+0x3bb0>
   19bc8:	ldrb	r0, [r1]
   19bcc:	cmp	r0, #32
   19bd0:	bls	19c44 <main@@Base+0x3ba0>
   19bd4:	mov	r4, r1
   19bd8:	cmp	r4, r6
   19bdc:	mov	r8, r6
   19be0:	bne	19c70 <main@@Base+0x3bcc>
   19be4:	b	19c98 <main@@Base+0x3bf4>
   19be8:	mov	r0, sl
   19bec:	mov	r1, r4
   19bf0:	mov	r2, r6
   19bf4:	mov	r3, #22
   19bf8:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   19bfc:	ldr	r5, [sp, #40]	; 0x28
   19c00:	mov	r4, r0
   19c04:	ldr	r0, [sl]
   19c08:	bl	32c64 <flatcc_builder_end_vector@@Base>
   19c0c:	cmp	r0, #0
   19c10:	str	r0, [sp, #52]	; 0x34
   19c14:	beq	16fd8 <main@@Base+0xf34>
   19c18:	ldr	r0, [sl]
   19c1c:	mov	r1, #30
   19c20:	bl	3316c <flatcc_builder_table_add_offset@@Base>
   19c24:	cmp	r0, #0
   19c28:	beq	16fd8 <main@@Base+0xf34>
   19c2c:	ldr	r1, [sp, #52]	; 0x34
   19c30:	str	r1, [r0]
   19c34:	sub	r0, r6, r4
   19c38:	cmp	r0, #2
   19c3c:	bge	1a4a4 <main@@Base+0x4400>
   19c40:	b	1cc94 <main@@Base+0x6bf0>
   19c44:	bne	19c54 <main@@Base+0x3bb0>
   19c48:	ldrb	r0, [r4, #2]!
   19c4c:	cmp	r0, #32
   19c50:	bhi	19c64 <main@@Base+0x3bc0>
   19c54:	mov	r0, sl
   19c58:	mov	r2, r6
   19c5c:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   19c60:	mov	r4, r0
   19c64:	cmp	r4, r6
   19c68:	mov	r8, r6
   19c6c:	beq	19c98 <main@@Base+0x3bf4>
   19c70:	ldrb	r0, [r4]
   19c74:	cmp	r0, #93	; 0x5d
   19c78:	bne	19c94 <main@@Base+0x3bf0>
   19c7c:	add	r1, r4, #1
   19c80:	mov	r6, r8
   19c84:	sub	r0, r8, r1
   19c88:	cmp	r0, #2
   19c8c:	blt	19ef8 <main@@Base+0x3e54>
   19c90:	b	19ed4 <main@@Base+0x3e30>
   19c94:	mov	r6, r4
   19c98:	mov	r0, #0
   19c9c:	mov	r1, #1
   19ca0:	strb	r0, [fp, #-60]	; 0xffffffc4
   19ca4:	ldr	r0, [sl]
   19ca8:	bl	30e98 <flatcc_builder_extend_vector@@Base>
   19cac:	cmp	r0, #0
   19cb0:	beq	218a4 <main@@Base+0xb800>
   19cb4:	mov	r7, r0
   19cb8:	mov	r4, r6
   19cbc:	mov	r6, #0
   19cc0:	mov	r2, r8
   19cc4:	cmp	r4, r8
   19cc8:	str	r6, [fp, #-52]	; 0xffffffcc
   19ccc:	str	r6, [fp, #-56]	; 0xffffffc8
   19cd0:	strb	r6, [fp, #-60]	; 0xffffffc4
   19cd4:	str	r6, [sp, #56]	; 0x38
   19cd8:	beq	19d2c <main@@Base+0x3c88>
   19cdc:	sub	r0, fp, #56	; 0x38
   19ce0:	mov	r1, r4
   19ce4:	add	r3, sp, #56	; 0x38
   19ce8:	str	r0, [sp]
   19cec:	mov	r0, sl
   19cf0:	bl	38fa8 <flatcc_json_parser_integer@@Base>
   19cf4:	cmp	r0, r4
   19cf8:	beq	19d3c <main@@Base+0x3c98>
   19cfc:	mov	r1, r0
   19d00:	ldr	r0, [sp, #56]	; 0x38
   19d04:	cmp	r0, #0
   19d08:	beq	19d4c <main@@Base+0x3ca8>
   19d0c:	mov	r0, sl
   19d10:	mov	r2, r8
   19d14:	mov	r3, #8
   19d18:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   19d1c:	mov	r1, r0
   19d20:	cmp	r4, r1
   19d24:	bne	19dc8 <main@@Base+0x3d24>
   19d28:	b	19d90 <main@@Base+0x3cec>
   19d2c:	mov	r1, r2
   19d30:	cmp	r4, r1
   19d34:	bne	19dc8 <main@@Base+0x3d24>
   19d38:	b	19d90 <main@@Base+0x3cec>
   19d3c:	mov	r1, r4
   19d40:	cmp	r4, r1
   19d44:	bne	19dc8 <main@@Base+0x3d24>
   19d48:	b	19d90 <main@@Base+0x3cec>
   19d4c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   19d50:	ldr	r2, [fp, #-52]	; 0xffffffcc
   19d54:	subs	r3, r0, #256	; 0x100
   19d58:	sbcs	r2, r2, #0
   19d5c:	bcc	19d80 <main@@Base+0x3cdc>
   19d60:	mov	r0, sl
   19d64:	mov	r2, r8
   19d68:	mov	r3, #7
   19d6c:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   19d70:	mov	r1, r0
   19d74:	cmp	r4, r1
   19d78:	bne	19dc8 <main@@Base+0x3d24>
   19d7c:	b	19d90 <main@@Base+0x3cec>
   19d80:	mov	r6, r0
   19d84:	strb	r0, [fp, #-60]	; 0xffffffc4
   19d88:	cmp	r4, r1
   19d8c:	bne	19dc8 <main@@Base+0x3d24>
   19d90:	movw	r3, #148	; 0x94
   19d94:	sub	r0, fp, #60	; 0x3c
   19d98:	mov	r1, r4
   19d9c:	mov	r2, r8
   19da0:	mov	r6, r8
   19da4:	movt	r3, #6
   19da8:	str	r0, [sp]
   19dac:	mov	r0, sl
   19db0:	bl	239ac <main@@Base+0xd908>
   19db4:	mov	r1, r0
   19db8:	cmp	r0, r4
   19dbc:	cmpne	r1, r6
   19dc0:	beq	21898 <main@@Base+0xb7f4>
   19dc4:	ldrb	r6, [fp, #-60]	; 0xffffffc4
   19dc8:	sub	r0, r8, r1
   19dcc:	strb	r6, [r7]
   19dd0:	mov	r6, r8
   19dd4:	cmp	r0, #2
   19dd8:	blt	19e0c <main@@Base+0x3d68>
   19ddc:	ldrb	r0, [r1]
   19de0:	cmp	r0, #32
   19de4:	bls	19df8 <main@@Base+0x3d54>
   19de8:	mov	r4, r1
   19dec:	cmp	r4, r6
   19df0:	bne	19e24 <main@@Base+0x3d80>
   19df4:	b	19eb4 <main@@Base+0x3e10>
   19df8:	bne	19e0c <main@@Base+0x3d68>
   19dfc:	mov	r4, r1
   19e00:	ldrb	r0, [r4, #1]!
   19e04:	cmp	r0, #32
   19e08:	bhi	19e1c <main@@Base+0x3d78>
   19e0c:	mov	r0, sl
   19e10:	mov	r2, r6
   19e14:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   19e18:	mov	r4, r0
   19e1c:	cmp	r4, r6
   19e20:	beq	19eb4 <main@@Base+0x3e10>
   19e24:	ldrb	r0, [r4]
   19e28:	cmp	r0, #44	; 0x2c
   19e2c:	bne	19ebc <main@@Base+0x3e18>
   19e30:	add	r1, r4, #1
   19e34:	sub	r0, r6, r1
   19e38:	cmp	r0, #2
   19e3c:	blt	19e6c <main@@Base+0x3dc8>
   19e40:	ldrb	r0, [r1]
   19e44:	cmp	r0, #32
   19e48:	bls	19e5c <main@@Base+0x3db8>
   19e4c:	mov	r4, r1
   19e50:	cmp	r4, r6
   19e54:	bne	19e84 <main@@Base+0x3de0>
   19e58:	b	19f08 <main@@Base+0x3e64>
   19e5c:	bne	19e6c <main@@Base+0x3dc8>
   19e60:	ldrb	r0, [r4, #2]!
   19e64:	cmp	r0, #32
   19e68:	bhi	19e7c <main@@Base+0x3dd8>
   19e6c:	mov	r0, sl
   19e70:	mov	r2, r6
   19e74:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   19e78:	mov	r4, r0
   19e7c:	cmp	r4, r6
   19e80:	beq	19f08 <main@@Base+0x3e64>
   19e84:	ldrb	r0, [r4]
   19e88:	cmp	r0, #93	; 0x5d
   19e8c:	beq	19ec4 <main@@Base+0x3e20>
   19e90:	mov	r0, #0
   19e94:	mov	r1, #1
   19e98:	strb	r0, [fp, #-60]	; 0xffffffc4
   19e9c:	ldr	r0, [sl]
   19ea0:	bl	30e98 <flatcc_builder_extend_vector@@Base>
   19ea4:	mov	r7, r0
   19ea8:	cmp	r0, #0
   19eac:	bne	19cbc <main@@Base+0x3c18>
   19eb0:	b	21890 <main@@Base+0xb7ec>
   19eb4:	mov	r4, r6
   19eb8:	b	19c04 <main@@Base+0x3b60>
   19ebc:	cmp	r0, #93	; 0x5d
   19ec0:	bne	1aabc <main@@Base+0x4a18>
   19ec4:	add	r1, r4, #1
   19ec8:	sub	r0, r6, r1
   19ecc:	cmp	r0, #2
   19ed0:	blt	19ef8 <main@@Base+0x3e54>
   19ed4:	ldrb	r0, [r1]
   19ed8:	cmp	r0, #32
   19edc:	bls	19ee8 <main@@Base+0x3e44>
   19ee0:	mov	r4, r1
   19ee4:	b	19c04 <main@@Base+0x3b60>
   19ee8:	bne	19ef8 <main@@Base+0x3e54>
   19eec:	ldrb	r0, [r4, #2]!
   19ef0:	cmp	r0, #32
   19ef4:	bhi	19c04 <main@@Base+0x3b60>
   19ef8:	mov	r0, sl
   19efc:	mov	r2, r6
   19f00:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   19f04:	b	19c00 <main@@Base+0x3b5c>
   19f08:	mov	r0, sl
   19f0c:	mov	r1, r6
   19f10:	b	1aac4 <main@@Base+0x4a20>
   19f14:	bne	19f24 <main@@Base+0x3e80>
   19f18:	ldrb	r0, [r1, #2]!
   19f1c:	cmp	r0, #32
   19f20:	bhi	19f38 <main@@Base+0x3e94>
   19f24:	ldr	r0, [sp, #36]	; 0x24
   19f28:	mov	r1, r2
   19f2c:	mov	r2, r5
   19f30:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   19f34:	mov	r1, r0
   19f38:	cmp	r8, r1
   19f3c:	beq	18e00 <main@@Base+0x2d5c>
   19f40:	ldr	r0, [sp, #48]	; 0x30
   19f44:	ldr	sl, [sp, #36]	; 0x24
   19f48:	mov	r2, #8
   19f4c:	mov	r3, #0
   19f50:	mov	r6, r5
   19f54:	str	r2, [sp]
   19f58:	mov	r2, r5
   19f5c:	str	r0, [sp, #4]
   19f60:	movw	r0, #18032	; 0x4670
   19f64:	movt	r0, #2
   19f68:	str	r0, [sp, #8]
   19f6c:	mov	r0, sl
   19f70:	bl	399a4 <flatcc_json_parser_union@@Base>
   19f74:	b	1a490 <main@@Base+0x43ec>
   19f78:	bne	19f8c <main@@Base+0x3ee8>
   19f7c:	ldrb	r0, [r4, #2]!
   19f80:	mov	r7, r4
   19f84:	cmp	r0, #32
   19f88:	bhi	19268 <main@@Base+0x31c4>
   19f8c:	mov	r0, sl
   19f90:	mov	r2, r6
   19f94:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   19f98:	b	19264 <main@@Base+0x31c0>
   19f9c:	cmp	r0, #34	; 0x22
   19fa0:	bne	1fad0 <main@@Base+0x9a2c>
   19fa4:	add	r1, r8, #21
   19fa8:	sub	r0, r6, r1
   19fac:	cmp	r0, #2
   19fb0:	blt	1c67c <main@@Base+0x65d8>
   19fb4:	ldrb	r0, [r1]
   19fb8:	cmp	r0, #32
   19fbc:	bls	1c668 <main@@Base+0x65c4>
   19fc0:	mov	r4, r1
   19fc4:	cmp	r4, r6
   19fc8:	bne	1c694 <main@@Base+0x65f0>
   19fcc:	b	1c6d4 <main@@Base+0x6630>
   19fd0:	bne	19fe4 <main@@Base+0x3f40>
   19fd4:	mov	r4, r1
   19fd8:	ldrb	r0, [r4, #1]!
   19fdc:	cmp	r0, #32
   19fe0:	bhi	19ff4 <main@@Base+0x3f50>
   19fe4:	mov	r0, sl
   19fe8:	mov	r2, r6
   19fec:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   19ff0:	mov	r4, r0
   19ff4:	cmp	r4, r6
   19ff8:	beq	1a034 <main@@Base+0x3f90>
   19ffc:	ldrb	r0, [r4]
   1a000:	cmp	r0, #58	; 0x3a
   1a004:	bne	1a034 <main@@Base+0x3f90>
   1a008:	add	r1, r4, #1
   1a00c:	sub	r0, r6, r1
   1a010:	cmp	r0, #2
   1a014:	blt	1c7f0 <main@@Base+0x674c>
   1a018:	ldrb	r0, [r1]
   1a01c:	cmp	r0, #32
   1a020:	bls	1c7e0 <main@@Base+0x673c>
   1a024:	mov	r4, r1
   1a028:	cmp	r7, r4
   1a02c:	bne	1c808 <main@@Base+0x6764>
   1a030:	b	1fad0 <main@@Base+0x9a2c>
   1a034:	mov	r0, sl
   1a038:	mov	r1, r4
   1a03c:	mov	r2, r6
   1a040:	mov	r3, #4
   1a044:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   1a048:	b	1c7fc <main@@Base+0x6758>
   1a04c:	cmp	r0, #34	; 0x22
   1a050:	bne	2057c <main@@Base+0xa4d8>
   1a054:	add	r1, r8, #18
   1a058:	sub	r0, r6, r1
   1a05c:	cmp	r0, #2
   1a060:	blt	1c700 <main@@Base+0x665c>
   1a064:	ldrb	r0, [r1]
   1a068:	cmp	r0, #32
   1a06c:	bls	1c6ec <main@@Base+0x6648>
   1a070:	mov	r7, r1
   1a074:	cmp	r7, r6
   1a078:	bne	1c718 <main@@Base+0x6674>
   1a07c:	b	1c758 <main@@Base+0x66b4>
   1a080:	bne	1a094 <main@@Base+0x3ff0>
   1a084:	mov	r4, r1
   1a088:	ldrb	r0, [r4, #1]!
   1a08c:	cmp	r0, #32
   1a090:	bhi	1a0a4 <main@@Base+0x4000>
   1a094:	mov	r0, sl
   1a098:	mov	r2, r6
   1a09c:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   1a0a0:	mov	r4, r0
   1a0a4:	cmp	r4, r6
   1a0a8:	beq	1a0e4 <main@@Base+0x4040>
   1a0ac:	ldrb	r0, [r4]
   1a0b0:	cmp	r0, #58	; 0x3a
   1a0b4:	bne	1a0e4 <main@@Base+0x4040>
   1a0b8:	add	r1, r4, #1
   1a0bc:	sub	r0, r6, r1
   1a0c0:	cmp	r0, #2
   1a0c4:	blt	1c8f0 <main@@Base+0x684c>
   1a0c8:	ldrb	r0, [r1]
   1a0cc:	cmp	r0, #32
   1a0d0:	bls	1c8e0 <main@@Base+0x683c>
   1a0d4:	mov	r4, r1
   1a0d8:	cmp	r7, r4
   1a0dc:	bne	1c908 <main@@Base+0x6864>
   1a0e0:	b	1fad0 <main@@Base+0x9a2c>
   1a0e4:	mov	r0, sl
   1a0e8:	mov	r1, r4
   1a0ec:	mov	r2, r6
   1a0f0:	mov	r3, #4
   1a0f4:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   1a0f8:	b	1c8fc <main@@Base+0x6858>
   1a0fc:	bne	1a110 <main@@Base+0x406c>
   1a100:	mov	r7, r1
   1a104:	ldrb	r0, [r7, #1]!
   1a108:	cmp	r0, #32
   1a10c:	bhi	1a120 <main@@Base+0x407c>
   1a110:	mov	r0, sl
   1a114:	mov	r2, r6
   1a118:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   1a11c:	mov	r7, r0
   1a120:	cmp	r7, r6
   1a124:	beq	1a160 <main@@Base+0x40bc>
   1a128:	ldrb	r0, [r7]
   1a12c:	cmp	r0, #58	; 0x3a
   1a130:	bne	1a160 <main@@Base+0x40bc>
   1a134:	add	r1, r7, #1
   1a138:	sub	r0, r6, r1
   1a13c:	cmp	r0, #2
   1a140:	blt	1c9b4 <main@@Base+0x6910>
   1a144:	ldrb	r0, [r1]
   1a148:	cmp	r0, #32
   1a14c:	bls	1c9a4 <main@@Base+0x6900>
   1a150:	mov	r7, r1
   1a154:	cmp	r9, r7
   1a158:	bne	1c9cc <main@@Base+0x6928>
   1a15c:	b	1e494 <main@@Base+0x83f0>
   1a160:	mov	r0, sl
   1a164:	mov	r1, r7
   1a168:	mov	r2, r6
   1a16c:	mov	r3, #4
   1a170:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   1a174:	b	1c9c0 <main@@Base+0x691c>
   1a178:	bne	1a18c <main@@Base+0x40e8>
   1a17c:	mov	r7, r1
   1a180:	ldrb	r0, [r7, #1]!
   1a184:	cmp	r0, #32
   1a188:	bhi	1a19c <main@@Base+0x40f8>
   1a18c:	mov	r0, sl
   1a190:	mov	r2, r6
   1a194:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   1a198:	mov	r7, r0
   1a19c:	cmp	r7, r6
   1a1a0:	beq	1a1dc <main@@Base+0x4138>
   1a1a4:	ldrb	r0, [r7]
   1a1a8:	cmp	r0, #58	; 0x3a
   1a1ac:	bne	1a1dc <main@@Base+0x4138>
   1a1b0:	add	r1, r7, #1
   1a1b4:	sub	r0, r6, r1
   1a1b8:	cmp	r0, #2
   1a1bc:	blt	1caf4 <main@@Base+0x6a50>
   1a1c0:	ldrb	r0, [r1]
   1a1c4:	cmp	r0, #32
   1a1c8:	bls	1cae4 <main@@Base+0x6a40>
   1a1cc:	mov	r7, r1
   1a1d0:	cmp	r8, r7
   1a1d4:	bne	1cb0c <main@@Base+0x6a68>
   1a1d8:	b	1a480 <main@@Base+0x43dc>
   1a1dc:	mov	r0, sl
   1a1e0:	mov	r1, r7
   1a1e4:	mov	r2, r6
   1a1e8:	mov	r3, #4
   1a1ec:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   1a1f0:	b	1cb00 <main@@Base+0x6a5c>
   1a1f4:	bne	1a208 <main@@Base+0x4164>
   1a1f8:	mov	r7, r1
   1a1fc:	ldrb	r0, [r7, #1]!
   1a200:	cmp	r0, #32
   1a204:	bhi	1a218 <main@@Base+0x4174>
   1a208:	mov	r0, sl
   1a20c:	mov	r2, r6
   1a210:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   1a214:	mov	r7, r0
   1a218:	cmp	r7, r6
   1a21c:	beq	1a258 <main@@Base+0x41b4>
   1a220:	ldrb	r0, [r7]
   1a224:	cmp	r0, #58	; 0x3a
   1a228:	bne	1a258 <main@@Base+0x41b4>
   1a22c:	add	r1, r7, #1
   1a230:	sub	r0, r6, r1
   1a234:	cmp	r0, #2
   1a238:	blt	1ccc4 <main@@Base+0x6c20>
   1a23c:	ldrb	r0, [r1]
   1a240:	cmp	r0, #32
   1a244:	bls	1ccb4 <main@@Base+0x6c10>
   1a248:	mov	r7, r1
   1a24c:	cmp	r8, r7
   1a250:	bne	1ccdc <main@@Base+0x6c38>
   1a254:	b	1a480 <main@@Base+0x43dc>
   1a258:	mov	r0, sl
   1a25c:	mov	r1, r7
   1a260:	mov	r2, r6
   1a264:	mov	r3, #4
   1a268:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   1a26c:	b	1ccd0 <main@@Base+0x6c2c>
   1a270:	bne	1a284 <main@@Base+0x41e0>
   1a274:	mov	r7, r1
   1a278:	ldrb	r0, [r7, #1]!
   1a27c:	cmp	r0, #32
   1a280:	bhi	1a294 <main@@Base+0x41f0>
   1a284:	mov	r0, sl
   1a288:	mov	r2, r6
   1a28c:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   1a290:	mov	r7, r0
   1a294:	cmp	r7, r6
   1a298:	beq	1a348 <main@@Base+0x42a4>
   1a29c:	ldrb	r0, [r7]
   1a2a0:	cmp	r0, #58	; 0x3a
   1a2a4:	bne	1a348 <main@@Base+0x42a4>
   1a2a8:	add	r1, r7, #1
   1a2ac:	sub	r0, r6, r1
   1a2b0:	cmp	r0, #2
   1a2b4:	blt	1cd74 <main@@Base+0x6cd0>
   1a2b8:	ldrb	r0, [r1]
   1a2bc:	cmp	r0, #32
   1a2c0:	bls	1cd64 <main@@Base+0x6cc0>
   1a2c4:	mov	r7, r1
   1a2c8:	cmp	r9, r7
   1a2cc:	bne	1cd8c <main@@Base+0x6ce8>
   1a2d0:	add	r4, r8, #16
   1a2d4:	mov	r1, #8
   1a2d8:	sub	r0, r6, r4
   1a2dc:	cmp	r0, #8
   1a2e0:	movcc	r1, r0
   1a2e4:	sub	r1, r1, #1
   1a2e8:	cmp	r1, #7
   1a2ec:	bhi	2057c <main@@Base+0xa4d8>
   1a2f0:	ldrb	r1, [r4]
   1a2f4:	cmp	r1, #97	; 0x61
   1a2f8:	bne	2057c <main@@Base+0xa4d8>
   1a2fc:	cmp	r0, #2
   1a300:	blt	2057c <main@@Base+0xa4d8>
   1a304:	ldr	r2, [sp, #32]
   1a308:	mov	r1, r8
   1a30c:	ldrb	r0, [r1, #17]!
   1a310:	ldr	r2, [r2]
   1a314:	cmp	r2, #0
   1a318:	beq	1c034 <main@@Base+0x5f90>
   1a31c:	cmp	r0, #33	; 0x21
   1a320:	bcc	1a32c <main@@Base+0x4288>
   1a324:	cmp	r0, #58	; 0x3a
   1a328:	bne	2057c <main@@Base+0xa4d8>
   1a32c:	ldr	r0, [sp, #32]
   1a330:	mov	r2, #0
   1a334:	str	r2, [r0]
   1a338:	sub	r0, r6, r1
   1a33c:	cmp	r0, #2
   1a340:	bge	1c04c <main@@Base+0x5fa8>
   1a344:	b	1dd20 <main@@Base+0x7c7c>
   1a348:	mov	r0, sl
   1a34c:	mov	r1, r7
   1a350:	mov	r2, r6
   1a354:	mov	r3, #4
   1a358:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   1a35c:	b	1cd80 <main@@Base+0x6cdc>
   1a360:	bne	1a370 <main@@Base+0x42cc>
   1a364:	ldrb	r0, [r7, #2]!
   1a368:	cmp	r0, #32
   1a36c:	bhi	1a380 <main@@Base+0x42dc>
   1a370:	ldr	r0, [sp, #36]	; 0x24
   1a374:	mov	r2, r6
   1a378:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   1a37c:	mov	r7, r0
   1a380:	cmp	r8, r7
   1a384:	beq	1a3ec <main@@Base+0x4348>
   1a388:	ldr	sl, [sp, #36]	; 0x24
   1a38c:	mov	r1, #4
   1a390:	mov	r2, #2
   1a394:	mvn	r3, #-1073741824	; 0xc0000000
   1a398:	ldr	r0, [sl]
   1a39c:	bl	319ec <flatcc_builder_start_vector@@Base>
   1a3a0:	cmp	r0, #0
   1a3a4:	bne	21888 <main@@Base+0xb7e4>
   1a3a8:	cmp	r7, r6
   1a3ac:	beq	1a54c <main@@Base+0x44a8>
   1a3b0:	ldrb	r0, [r7]
   1a3b4:	cmp	r0, #91	; 0x5b
   1a3b8:	bne	1a54c <main@@Base+0x44a8>
   1a3bc:	add	r1, r7, #1
   1a3c0:	sub	r0, r6, r1
   1a3c4:	cmp	r0, #2
   1a3c8:	blt	1a5f0 <main@@Base+0x454c>
   1a3cc:	ldrb	r0, [r1]
   1a3d0:	cmp	r0, #32
   1a3d4:	bls	1a5e0 <main@@Base+0x453c>
   1a3d8:	mov	r7, r1
   1a3dc:	cmp	r7, r6
   1a3e0:	mov	r4, r6
   1a3e4:	bne	1a60c <main@@Base+0x4568>
   1a3e8:	b	1a650 <main@@Base+0x45ac>
   1a3ec:	movw	r0, #31088	; 0x7970
   1a3f0:	movt	r0, #24436	; 0x5f74
   1a3f4:	eor	r0, sl, r0
   1a3f8:	orrs	r0, r0, r4
   1a3fc:	bne	1a47c <main@@Base+0x43d8>
   1a400:	add	r4, r8, #8
   1a404:	ldr	sl, [sp, #36]	; 0x24
   1a408:	mov	r1, #8
   1a40c:	sub	r0, r6, r4
   1a410:	cmp	r0, #8
   1a414:	movcc	r1, r0
   1a418:	sub	r1, r1, #1
   1a41c:	cmp	r1, #7
   1a420:	bhi	2057c <main@@Base+0xa4d8>
   1a424:	ldrb	r1, [r4]
   1a428:	cmp	r1, #101	; 0x65
   1a42c:	bne	2057c <main@@Base+0xa4d8>
   1a430:	cmp	r0, #2
   1a434:	blt	2057c <main@@Base+0xa4d8>
   1a438:	ldr	r2, [sp, #32]
   1a43c:	mov	r1, r8
   1a440:	ldrb	r0, [r1, #9]!
   1a444:	ldr	r2, [r2]
   1a448:	cmp	r2, #0
   1a44c:	beq	1a5ac <main@@Base+0x4508>
   1a450:	cmp	r0, #33	; 0x21
   1a454:	bcc	1a460 <main@@Base+0x43bc>
   1a458:	cmp	r0, #58	; 0x3a
   1a45c:	bne	2057c <main@@Base+0xa4d8>
   1a460:	ldr	r0, [sp, #32]
   1a464:	mov	r2, #0
   1a468:	str	r2, [r0]
   1a46c:	sub	r0, r6, r1
   1a470:	cmp	r0, #2
   1a474:	bge	1a5c4 <main@@Base+0x4520>
   1a478:	b	1a7d4 <main@@Base+0x4730>
   1a47c:	ldr	sl, [sp, #36]	; 0x24
   1a480:	mov	r0, sl
   1a484:	mov	r1, r8
   1a488:	mov	r2, r6
   1a48c:	bl	373bc <flatcc_json_parser_unmatched_symbol@@Base>
   1a490:	mov	r4, r0
   1a494:	ldr	r5, [sp, #40]	; 0x28
   1a498:	sub	r0, r6, r4
   1a49c:	cmp	r0, #2
   1a4a0:	blt	1cc94 <main@@Base+0x6bf0>
   1a4a4:	ldrb	r0, [r4]
   1a4a8:	cmp	r0, #32
   1a4ac:	bls	1a500 <main@@Base+0x445c>
   1a4b0:	mov	r2, r4
   1a4b4:	cmp	r2, r6
   1a4b8:	beq	217f8 <main@@Base+0xb754>
   1a4bc:	ldrb	r0, [r2]
   1a4c0:	cmp	r0, #44	; 0x2c
   1a4c4:	bne	2180c <main@@Base+0xb768>
   1a4c8:	add	r1, r2, #1
   1a4cc:	sub	r0, r6, r1
   1a4d0:	cmp	r0, #2
   1a4d4:	blt	1a530 <main@@Base+0x448c>
   1a4d8:	ldrb	r0, [r1]
   1a4dc:	cmp	r0, #32
   1a4e0:	bls	1a520 <main@@Base+0x447c>
   1a4e4:	mov	r2, r1
   1a4e8:	cmp	r2, r6
   1a4ec:	beq	21844 <main@@Base+0xb7a0>
   1a4f0:	ldrb	r0, [r2]
   1a4f4:	cmp	r0, #125	; 0x7d
   1a4f8:	bne	171a0 <main@@Base+0x10fc>
   1a4fc:	b	21814 <main@@Base+0xb770>
   1a500:	bne	1cc94 <main@@Base+0x6bf0>
   1a504:	mov	r2, r4
   1a508:	ldrb	r0, [r2, #1]!
   1a50c:	cmp	r0, #32
   1a510:	bls	1cc94 <main@@Base+0x6bf0>
   1a514:	cmp	r2, r6
   1a518:	bne	1a4bc <main@@Base+0x4418>
   1a51c:	b	217f8 <main@@Base+0xb754>
   1a520:	bne	1a530 <main@@Base+0x448c>
   1a524:	ldrb	r0, [r2, #2]!
   1a528:	cmp	r0, #32
   1a52c:	bhi	1a540 <main@@Base+0x449c>
   1a530:	mov	r0, sl
   1a534:	mov	r2, r6
   1a538:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   1a53c:	mov	r2, r0
   1a540:	cmp	r2, r6
   1a544:	bne	1a4f0 <main@@Base+0x444c>
   1a548:	b	21844 <main@@Base+0xb7a0>
   1a54c:	mov	r0, sl
   1a550:	mov	r1, r7
   1a554:	mov	r2, r6
   1a558:	mov	r3, #22
   1a55c:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   1a560:	ldr	r5, [sp, #40]	; 0x28
   1a564:	mov	r7, r0
   1a568:	ldr	r0, [sl]
   1a56c:	bl	32c64 <flatcc_builder_end_vector@@Base>
   1a570:	cmp	r0, #0
   1a574:	str	r0, [sp, #52]	; 0x34
   1a578:	beq	21888 <main@@Base+0xb7e4>
   1a57c:	ldr	r0, [sl]
   1a580:	mov	r1, #31
   1a584:	bl	3316c <flatcc_builder_table_add_offset@@Base>
   1a588:	cmp	r0, #0
   1a58c:	beq	21888 <main@@Base+0xb7e4>
   1a590:	ldr	r1, [sp, #52]	; 0x34
   1a594:	mov	r4, r7
   1a598:	str	r1, [r0]
   1a59c:	sub	r0, r6, r4
   1a5a0:	cmp	r0, #2
   1a5a4:	bge	1a4a4 <main@@Base+0x4400>
   1a5a8:	b	1cc94 <main@@Base+0x6bf0>
   1a5ac:	cmp	r0, #34	; 0x22
   1a5b0:	bne	2057c <main@@Base+0xa4d8>
   1a5b4:	add	r1, r8, #10
   1a5b8:	sub	r0, r6, r1
   1a5bc:	cmp	r0, #2
   1a5c0:	blt	1a7d4 <main@@Base+0x4730>
   1a5c4:	ldrb	r0, [r1]
   1a5c8:	cmp	r0, #32
   1a5cc:	bls	1a7c0 <main@@Base+0x471c>
   1a5d0:	mov	r2, r1
   1a5d4:	cmp	r2, r6
   1a5d8:	bne	1a7ec <main@@Base+0x4748>
   1a5dc:	b	1a824 <main@@Base+0x4780>
   1a5e0:	bne	1a5f0 <main@@Base+0x454c>
   1a5e4:	ldrb	r0, [r7, #2]!
   1a5e8:	cmp	r0, #32
   1a5ec:	bhi	1a600 <main@@Base+0x455c>
   1a5f0:	mov	r0, sl
   1a5f4:	mov	r2, r6
   1a5f8:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   1a5fc:	mov	r7, r0
   1a600:	cmp	r7, r6
   1a604:	mov	r4, r6
   1a608:	beq	1a650 <main@@Base+0x45ac>
   1a60c:	ldrb	r0, [r7]
   1a610:	cmp	r0, #93	; 0x5d
   1a614:	bne	1a64c <main@@Base+0x45a8>
   1a618:	ldr	r5, [sp, #40]	; 0x28
   1a61c:	add	r1, r7, #1
   1a620:	sub	r0, r6, r1
   1a624:	cmp	r0, #2
   1a628:	blt	1e3f4 <main@@Base+0x8350>
   1a62c:	ldrb	r0, [r1]
   1a630:	cmp	r0, #32
   1a634:	bhi	1a75c <main@@Base+0x46b8>
   1a638:	bne	1e3f4 <main@@Base+0x8350>
   1a63c:	ldrb	r0, [r7, #2]!
   1a640:	cmp	r0, #32
   1a644:	bhi	1a568 <main@@Base+0x44c4>
   1a648:	b	1e3f4 <main@@Base+0x8350>
   1a64c:	mov	r4, r7
   1a650:	ldr	r0, [sl]
   1a654:	mov	r1, #1
   1a658:	bl	30e98 <flatcc_builder_extend_vector@@Base>
   1a65c:	mov	r3, r0
   1a660:	cmp	r0, #0
   1a664:	beq	16fd8 <main@@Base+0xf34>
   1a668:	mov	r0, sl
   1a66c:	mov	r1, r4
   1a670:	mov	r2, r6
   1a674:	bl	23e2c <main@@Base+0xdd88>
   1a678:	mov	r1, r0
   1a67c:	sub	r0, r6, r0
   1a680:	cmp	r0, #2
   1a684:	blt	1a6b8 <main@@Base+0x4614>
   1a688:	ldrb	r0, [r1]
   1a68c:	cmp	r0, #32
   1a690:	bls	1a6a4 <main@@Base+0x4600>
   1a694:	mov	r4, r1
   1a698:	cmp	r4, r6
   1a69c:	bne	1a6d0 <main@@Base+0x462c>
   1a6a0:	b	1a764 <main@@Base+0x46c0>
   1a6a4:	bne	1a6b8 <main@@Base+0x4614>
   1a6a8:	mov	r4, r1
   1a6ac:	ldrb	r0, [r4, #1]!
   1a6b0:	cmp	r0, #32
   1a6b4:	bhi	1a6c8 <main@@Base+0x4624>
   1a6b8:	mov	r0, sl
   1a6bc:	mov	r2, r6
   1a6c0:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   1a6c4:	mov	r4, r0
   1a6c8:	cmp	r4, r6
   1a6cc:	beq	1a764 <main@@Base+0x46c0>
   1a6d0:	ldrb	r0, [r4]
   1a6d4:	cmp	r0, #44	; 0x2c
   1a6d8:	bne	1a770 <main@@Base+0x46cc>
   1a6dc:	add	r1, r4, #1
   1a6e0:	sub	r0, r6, r1
   1a6e4:	cmp	r0, #2
   1a6e8:	blt	1a718 <main@@Base+0x4674>
   1a6ec:	ldrb	r0, [r1]
   1a6f0:	cmp	r0, #32
   1a6f4:	bls	1a708 <main@@Base+0x4664>
   1a6f8:	mov	r4, r1
   1a6fc:	cmp	r4, r6
   1a700:	bne	1a730 <main@@Base+0x468c>
   1a704:	b	1a7ac <main@@Base+0x4708>
   1a708:	bne	1a718 <main@@Base+0x4674>
   1a70c:	ldrb	r0, [r4, #2]!
   1a710:	cmp	r0, #32
   1a714:	bhi	1a728 <main@@Base+0x4684>
   1a718:	mov	r0, sl
   1a71c:	mov	r2, r6
   1a720:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   1a724:	mov	r4, r0
   1a728:	cmp	r4, r6
   1a72c:	beq	1a7ac <main@@Base+0x4708>
   1a730:	ldrb	r0, [r4]
   1a734:	cmp	r0, #93	; 0x5d
   1a738:	bne	1a650 <main@@Base+0x45ac>
   1a73c:	ldr	r5, [sp, #40]	; 0x28
   1a740:	add	r1, r4, #1
   1a744:	sub	r0, r6, r1
   1a748:	cmp	r0, #2
   1a74c:	blt	1e3f4 <main@@Base+0x8350>
   1a750:	ldrb	r0, [r1]
   1a754:	cmp	r0, #32
   1a758:	bls	1ceec <main@@Base+0x6e48>
   1a75c:	mov	r7, r1
   1a760:	b	1a568 <main@@Base+0x44c4>
   1a764:	ldr	r5, [sp, #40]	; 0x28
   1a768:	mov	r7, r6
   1a76c:	b	1a568 <main@@Base+0x44c4>
   1a770:	ldr	r5, [sp, #40]	; 0x28
   1a774:	cmp	r0, #93	; 0x5d
   1a778:	bne	1c01c <main@@Base+0x5f78>
   1a77c:	add	r1, r4, #1
   1a780:	sub	r0, r6, r1
   1a784:	cmp	r0, #2
   1a788:	blt	1e3f4 <main@@Base+0x8350>
   1a78c:	ldrb	r0, [r1]
   1a790:	cmp	r0, #32
   1a794:	bls	1e3d4 <main@@Base+0x8330>
   1a798:	ldr	r6, [sp, #44]	; 0x2c
   1a79c:	ldr	sl, [sp, #36]	; 0x24
   1a7a0:	ldr	r5, [sp, #40]	; 0x28
   1a7a4:	mov	r7, r1
   1a7a8:	b	1a568 <main@@Base+0x44c4>
   1a7ac:	mov	r0, sl
   1a7b0:	mov	r1, r6
   1a7b4:	mov	r2, r6
   1a7b8:	mov	r3, #9
   1a7bc:	b	1a55c <main@@Base+0x44b8>
   1a7c0:	bne	1a7d4 <main@@Base+0x4730>
   1a7c4:	mov	r2, r1
   1a7c8:	ldrb	r0, [r2, #1]!
   1a7cc:	cmp	r0, #32
   1a7d0:	bhi	1a7e4 <main@@Base+0x4740>
   1a7d4:	mov	r0, sl
   1a7d8:	mov	r2, r6
   1a7dc:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   1a7e0:	mov	r2, r0
   1a7e4:	cmp	r2, r6
   1a7e8:	beq	1a824 <main@@Base+0x4780>
   1a7ec:	ldrb	r0, [r2]
   1a7f0:	cmp	r0, #58	; 0x3a
   1a7f4:	bne	1a824 <main@@Base+0x4780>
   1a7f8:	add	r1, r2, #1
   1a7fc:	sub	r0, r6, r1
   1a800:	cmp	r0, #2
   1a804:	blt	1cf04 <main@@Base+0x6e60>
   1a808:	ldrb	r0, [r1]
   1a80c:	cmp	r0, #32
   1a810:	bls	1cef4 <main@@Base+0x6e50>
   1a814:	mov	r2, r1
   1a818:	cmp	r4, r2
   1a81c:	bne	1cf1c <main@@Base+0x6e78>
   1a820:	b	2057c <main@@Base+0xa4d8>
   1a824:	mov	r1, r2
   1a828:	mov	r0, sl
   1a82c:	mov	r2, r6
   1a830:	mov	r3, #4
   1a834:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   1a838:	b	1cf10 <main@@Base+0x6e6c>
   1a83c:	bne	1a84c <main@@Base+0x47a8>
   1a840:	ldrb	r0, [r7, #2]!
   1a844:	cmp	r0, #32
   1a848:	bhi	1a85c <main@@Base+0x47b8>
   1a84c:	mov	r0, sl
   1a850:	mov	r2, r6
   1a854:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   1a858:	mov	r7, r0
   1a85c:	cmp	r8, r7
   1a860:	beq	1a480 <main@@Base+0x43dc>
   1a864:	sub	r4, r6, r7
   1a868:	mov	r0, #0
   1a86c:	cmp	r4, #4
   1a870:	strb	r0, [fp, #-60]	; 0xffffffc4
   1a874:	blt	1a8b8 <main@@Base+0x4814>
   1a878:	movw	r1, #48850	; 0xbed2
   1a87c:	mov	r0, r7
   1a880:	mov	r2, #4
   1a884:	movt	r1, #4
   1a888:	bl	14ebc <bcmp@plt>
   1a88c:	cmp	r0, #0
   1a890:	beq	1a92c <main@@Base+0x4888>
   1a894:	cmp	r4, #5
   1a898:	blt	1a8b8 <main@@Base+0x4814>
   1a89c:	movw	r1, #48855	; 0xbed7
   1a8a0:	mov	r0, r7
   1a8a4:	mov	r2, #5
   1a8a8:	movt	r1, #4
   1a8ac:	bl	14ebc <bcmp@plt>
   1a8b0:	cmp	r0, #0
   1a8b4:	beq	1aa14 <main@@Base+0x4970>
   1a8b8:	mov	r2, r6
   1a8bc:	mov	r6, #0
   1a8c0:	cmp	r7, r2
   1a8c4:	str	r6, [fp, #-52]	; 0xffffffcc
   1a8c8:	str	r6, [fp, #-56]	; 0xffffffc8
   1a8cc:	str	r6, [sp, #56]	; 0x38
   1a8d0:	beq	1a91c <main@@Base+0x4878>
   1a8d4:	sub	r0, fp, #56	; 0x38
   1a8d8:	mov	r1, r7
   1a8dc:	add	r3, sp, #56	; 0x38
   1a8e0:	mov	r8, r2
   1a8e4:	str	r0, [sp]
   1a8e8:	mov	r0, sl
   1a8ec:	bl	38fa8 <flatcc_json_parser_integer@@Base>
   1a8f0:	cmp	r0, r7
   1a8f4:	beq	1a94c <main@@Base+0x48a8>
   1a8f8:	mov	r1, r0
   1a8fc:	ldr	r0, [sp, #56]	; 0x38
   1a900:	ldr	r5, [sp, #40]	; 0x28
   1a904:	cmp	r0, #0
   1a908:	beq	1a958 <main@@Base+0x48b4>
   1a90c:	mov	r0, sl
   1a910:	mov	r2, r8
   1a914:	mov	r3, #8
   1a918:	b	1a978 <main@@Base+0x48d4>
   1a91c:	ldr	r5, [sp, #40]	; 0x28
   1a920:	mov	r8, r2
   1a924:	mov	r4, r2
   1a928:	b	1a980 <main@@Base+0x48dc>
   1a92c:	ldr	r5, [sp, #40]	; 0x28
   1a930:	mov	r8, r6
   1a934:	mov	r6, #1
   1a938:	add	r4, r7, #4
   1a93c:	strb	r6, [fp, #-60]	; 0xffffffc4
   1a940:	cmp	r7, r4
   1a944:	bne	1a9dc <main@@Base+0x4938>
   1a948:	b	1a998 <main@@Base+0x48f4>
   1a94c:	ldr	r5, [sp, #40]	; 0x28
   1a950:	mov	r4, r7
   1a954:	b	1a980 <main@@Base+0x48dc>
   1a958:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1a95c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1a960:	subs	r3, r0, #256	; 0x100
   1a964:	sbcs	r2, r2, #0
   1a968:	bcc	1aa34 <main@@Base+0x4990>
   1a96c:	mov	r0, sl
   1a970:	mov	r2, r8
   1a974:	mov	r3, #7
   1a978:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   1a97c:	mov	r4, r0
   1a980:	uxtb	r6, r6
   1a984:	cmp	r6, #0
   1a988:	movwne	r6, #1
   1a98c:	strb	r6, [fp, #-60]	; 0xffffffc4
   1a990:	cmp	r7, r4
   1a994:	bne	1a9dc <main@@Base+0x4938>
   1a998:	sub	r0, fp, #60	; 0x3c
   1a99c:	mov	r1, r7
   1a9a0:	mov	r2, r8
   1a9a4:	mov	r6, r8
   1a9a8:	str	r0, [sp]
   1a9ac:	movw	r0, #148	; 0x94
   1a9b0:	movt	r0, #6
   1a9b4:	add	r3, r0, #60	; 0x3c
   1a9b8:	mov	r0, sl
   1a9bc:	bl	25c2c <main@@Base+0xfb88>
   1a9c0:	mov	r4, r0
   1a9c4:	cmp	r0, r7
   1a9c8:	beq	16fd8 <main@@Base+0xf34>
   1a9cc:	mov	r8, r6
   1a9d0:	cmp	r4, r6
   1a9d4:	beq	21890 <main@@Base+0xb7ec>
   1a9d8:	ldrb	r6, [fp, #-60]	; 0xffffffc4
   1a9dc:	cmp	r6, #1
   1a9e0:	bne	1a9f0 <main@@Base+0x494c>
   1a9e4:	ldrb	r0, [sl, #8]
   1a9e8:	tst	r0, #2
   1a9ec:	beq	1cc84 <main@@Base+0x6be0>
   1a9f0:	ldr	r0, [sl]
   1a9f4:	mov	r1, #15
   1a9f8:	mov	r2, #1
   1a9fc:	mov	r3, #1
   1aa00:	bl	332fc <flatcc_builder_table_add@@Base>
   1aa04:	cmp	r0, #0
   1aa08:	beq	21890 <main@@Base+0xb7ec>
   1aa0c:	strb	r6, [r0]
   1aa10:	b	1cc84 <main@@Base+0x6be0>
   1aa14:	ldr	r5, [sp, #40]	; 0x28
   1aa18:	mov	r8, r6
   1aa1c:	mov	r6, #0
   1aa20:	add	r4, r7, #5
   1aa24:	strb	r6, [fp, #-60]	; 0xffffffc4
   1aa28:	cmp	r7, r4
   1aa2c:	bne	1a9dc <main@@Base+0x4938>
   1aa30:	b	1a998 <main@@Base+0x48f4>
   1aa34:	mov	r6, r0
   1aa38:	mov	r4, r1
   1aa3c:	b	1a980 <main@@Base+0x48dc>
   1aa40:	bne	1aa54 <main@@Base+0x49b0>
   1aa44:	mov	r4, r1
   1aa48:	ldrb	r0, [r4, #1]!
   1aa4c:	cmp	r0, #32
   1aa50:	bhi	1aa64 <main@@Base+0x49c0>
   1aa54:	mov	r0, sl
   1aa58:	mov	r2, r6
   1aa5c:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   1aa60:	mov	r4, r0
   1aa64:	cmp	r4, r6
   1aa68:	beq	1aaa4 <main@@Base+0x4a00>
   1aa6c:	ldrb	r0, [r4]
   1aa70:	cmp	r0, #58	; 0x3a
   1aa74:	bne	1aaa4 <main@@Base+0x4a00>
   1aa78:	add	r1, r4, #1
   1aa7c:	sub	r0, r6, r1
   1aa80:	cmp	r0, #2
   1aa84:	blt	1cf6c <main@@Base+0x6ec8>
   1aa88:	ldrb	r0, [r1]
   1aa8c:	cmp	r0, #32
   1aa90:	bls	1cf5c <main@@Base+0x6eb8>
   1aa94:	mov	r4, r1
   1aa98:	cmp	r9, r4
   1aa9c:	bne	1cf84 <main@@Base+0x6ee0>
   1aaa0:	b	1e494 <main@@Base+0x83f0>
   1aaa4:	mov	r0, sl
   1aaa8:	mov	r1, r4
   1aaac:	mov	r2, r6
   1aab0:	mov	r3, #4
   1aab4:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   1aab8:	b	1cf78 <main@@Base+0x6ed4>
   1aabc:	mov	r0, sl
   1aac0:	mov	r1, r4
   1aac4:	mov	r2, r6
   1aac8:	mov	r3, #9
   1aacc:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   1aad0:	b	19c00 <main@@Base+0x3b5c>
   1aad4:	bne	1aae4 <main@@Base+0x4a40>
   1aad8:	ldrb	r0, [r4, #2]!
   1aadc:	cmp	r0, #32
   1aae0:	bhi	1aaf4 <main@@Base+0x4a50>
   1aae4:	mov	r0, r6
   1aae8:	mov	r2, r5
   1aaec:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   1aaf0:	mov	r4, r0
   1aaf4:	cmp	r9, r4
   1aaf8:	beq	194f0 <main@@Base+0x344c>
   1aafc:	ldr	sl, [sp, #36]	; 0x24
   1ab00:	mov	r1, #1
   1ab04:	mov	r2, #1
   1ab08:	mvn	r3, #0
   1ab0c:	ldr	r0, [sl]
   1ab10:	bl	319ec <flatcc_builder_start_vector@@Base>
   1ab14:	cmp	r0, #0
   1ab18:	bne	218b0 <main@@Base+0xb80c>
   1ab1c:	mov	r6, r5
   1ab20:	cmp	r4, r5
   1ab24:	beq	1ab60 <main@@Base+0x4abc>
   1ab28:	ldrb	r0, [r4]
   1ab2c:	cmp	r0, #91	; 0x5b
   1ab30:	bne	1ab60 <main@@Base+0x4abc>
   1ab34:	add	r1, r4, #1
   1ab38:	sub	r0, r6, r1
   1ab3c:	cmp	r0, #2
   1ab40:	blt	1c318 <main@@Base+0x6274>
   1ab44:	ldrb	r0, [r1]
   1ab48:	cmp	r0, #32
   1ab4c:	bls	1c308 <main@@Base+0x6264>
   1ab50:	mov	r4, r1
   1ab54:	cmp	r4, r6
   1ab58:	bne	1c330 <main@@Base+0x628c>
   1ab5c:	b	1c35c <main@@Base+0x62b8>
   1ab60:	mov	r0, sl
   1ab64:	mov	r1, r4
   1ab68:	mov	r2, r6
   1ab6c:	mov	r3, #22
   1ab70:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   1ab74:	ldr	r5, [sp, #40]	; 0x28
   1ab78:	mov	r4, r0
   1ab7c:	ldr	r0, [sl]
   1ab80:	bl	32c64 <flatcc_builder_end_vector@@Base>
   1ab84:	cmp	r0, #0
   1ab88:	str	r0, [sp, #52]	; 0x34
   1ab8c:	beq	16fd8 <main@@Base+0xf34>
   1ab90:	ldr	r0, [sl]
   1ab94:	mov	r1, #24
   1ab98:	bl	3316c <flatcc_builder_table_add_offset@@Base>
   1ab9c:	cmp	r0, #0
   1aba0:	bne	19c2c <main@@Base+0x3b88>
   1aba4:	b	16fd8 <main@@Base+0xf34>
   1aba8:	cmp	r0, #34	; 0x22
   1abac:	bne	1fad0 <main@@Base+0x9a2c>
   1abb0:	add	r1, r8, #18
   1abb4:	sub	r0, r6, r1
   1abb8:	cmp	r0, #2
   1abbc:	blt	1d0ac <main@@Base+0x7008>
   1abc0:	ldrb	r0, [r1]
   1abc4:	cmp	r0, #32
   1abc8:	bls	1d098 <main@@Base+0x6ff4>
   1abcc:	mov	r8, r1
   1abd0:	cmp	r8, r6
   1abd4:	bne	1d0c4 <main@@Base+0x7020>
   1abd8:	b	1d104 <main@@Base+0x7060>
   1abdc:	bne	1abec <main@@Base+0x4b48>
   1abe0:	ldrb	r0, [r7, #2]!
   1abe4:	cmp	r0, #32
   1abe8:	bhi	1abfc <main@@Base+0x4b58>
   1abec:	mov	r0, sl
   1abf0:	mov	r2, r6
   1abf4:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   1abf8:	mov	r7, r0
   1abfc:	cmp	r8, r7
   1ac00:	beq	1a480 <main@@Base+0x43dc>
   1ac04:	mov	r2, r6
   1ac08:	mov	r6, #0
   1ac0c:	cmp	r7, r2
   1ac10:	str	r6, [fp, #-52]	; 0xffffffcc
   1ac14:	str	r6, [fp, #-56]	; 0xffffffc8
   1ac18:	strh	r6, [fp, #-60]	; 0xffffffc4
   1ac1c:	str	r6, [sp, #56]	; 0x38
   1ac20:	beq	1ac88 <main@@Base+0x4be4>
   1ac24:	sub	r0, fp, #56	; 0x38
   1ac28:	mov	r1, r7
   1ac2c:	add	r3, sp, #56	; 0x38
   1ac30:	mov	r8, r2
   1ac34:	str	r0, [sp]
   1ac38:	mov	r0, sl
   1ac3c:	bl	38fa8 <flatcc_json_parser_integer@@Base>
   1ac40:	ldr	r5, [sp, #40]	; 0x28
   1ac44:	cmp	r0, r7
   1ac48:	beq	1aca0 <main@@Base+0x4bfc>
   1ac4c:	ldr	r2, [sp, #56]	; 0x38
   1ac50:	mov	r4, r0
   1ac54:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1ac58:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1ac5c:	cmp	r2, #0
   1ac60:	beq	1acb0 <main@@Base+0x4c0c>
   1ac64:	movw	r2, #32769	; 0x8001
   1ac68:	subs	r2, r0, r2
   1ac6c:	sbcs	r1, r1, #0
   1ac70:	bcc	1ace0 <main@@Base+0x4c3c>
   1ac74:	mov	r0, sl
   1ac78:	mov	r1, r4
   1ac7c:	mov	r2, r8
   1ac80:	mov	r3, #8
   1ac84:	b	1accc <main@@Base+0x4c28>
   1ac88:	ldr	r5, [sp, #40]	; 0x28
   1ac8c:	mov	r8, r2
   1ac90:	mov	r4, r2
   1ac94:	cmp	r7, r4
   1ac98:	bne	1ad48 <main@@Base+0x4ca4>
   1ac9c:	b	1ad04 <main@@Base+0x4c60>
   1aca0:	mov	r4, r7
   1aca4:	cmp	r7, r4
   1aca8:	bne	1ad48 <main@@Base+0x4ca4>
   1acac:	b	1ad04 <main@@Base+0x4c60>
   1acb0:	subs	r2, r0, #32768	; 0x8000
   1acb4:	sbcs	r1, r1, #0
   1acb8:	bcc	1acf4 <main@@Base+0x4c50>
   1acbc:	mov	r0, sl
   1acc0:	mov	r1, r4
   1acc4:	mov	r2, r8
   1acc8:	mov	r3, #7
   1accc:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   1acd0:	mov	r4, r0
   1acd4:	cmp	r7, r4
   1acd8:	bne	1ad48 <main@@Base+0x4ca4>
   1acdc:	b	1ad04 <main@@Base+0x4c60>
   1ace0:	rsb	r6, r0, #0
   1ace4:	strh	r6, [fp, #-60]	; 0xffffffc4
   1ace8:	cmp	r7, r4
   1acec:	bne	1ad48 <main@@Base+0x4ca4>
   1acf0:	b	1ad04 <main@@Base+0x4c60>
   1acf4:	mov	r6, r0
   1acf8:	strh	r6, [fp, #-60]	; 0xffffffc4
   1acfc:	cmp	r7, r4
   1ad00:	bne	1ad48 <main@@Base+0x4ca4>
   1ad04:	sub	r0, fp, #60	; 0x3c
   1ad08:	mov	r1, r7
   1ad0c:	mov	r2, r8
   1ad10:	mov	r6, r8
   1ad14:	str	r0, [sp]
   1ad18:	movw	r0, #148	; 0x94
   1ad1c:	movt	r0, #6
   1ad20:	add	r3, r0, #12
   1ad24:	mov	r0, sl
   1ad28:	bl	23be0 <main@@Base+0xdb3c>
   1ad2c:	mov	r4, r0
   1ad30:	cmp	r0, r7
   1ad34:	beq	16fd8 <main@@Base+0xf34>
   1ad38:	mov	r8, r6
   1ad3c:	cmp	r4, r6
   1ad40:	beq	21890 <main@@Base+0xb7ec>
   1ad44:	ldrh	r6, [fp, #-60]	; 0xffffffc4
   1ad48:	uxth	r0, r6
   1ad4c:	cmp	r0, #100	; 0x64
   1ad50:	bne	1ad60 <main@@Base+0x4cbc>
   1ad54:	ldrb	r0, [sl, #8]
   1ad58:	tst	r0, #2
   1ad5c:	beq	1cc84 <main@@Base+0x6be0>
   1ad60:	ldr	r0, [sl]
   1ad64:	mov	r1, #2
   1ad68:	mov	r2, #2
   1ad6c:	mov	r3, #2
   1ad70:	bl	332fc <flatcc_builder_table_add@@Base>
   1ad74:	cmp	r0, #0
   1ad78:	bne	1cc80 <main@@Base+0x6bdc>
   1ad7c:	b	21890 <main@@Base+0xb7ec>
   1ad80:	bne	1ad90 <main@@Base+0x4cec>
   1ad84:	ldrb	r0, [r4, #2]!
   1ad88:	cmp	r0, #32
   1ad8c:	bhi	1ada0 <main@@Base+0x4cfc>
   1ad90:	mov	r0, sl
   1ad94:	mov	r2, r6
   1ad98:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   1ad9c:	mov	r4, r0
   1ada0:	cmp	r8, r4
   1ada4:	beq	1a480 <main@@Base+0x43dc>
   1ada8:	ldr	r0, [sl]
   1adac:	mov	r1, #0
   1adb0:	mov	r2, #32
   1adb4:	mov	r3, #16
   1adb8:	bl	332fc <flatcc_builder_table_add@@Base>
   1adbc:	cmp	r0, #0
   1adc0:	str	r0, [sp, #20]
   1adc4:	beq	16fd8 <main@@Base+0xf34>
   1adc8:	ldr	r5, [sp, #40]	; 0x28
   1adcc:	cmp	r4, r6
   1add0:	beq	1ae10 <main@@Base+0x4d6c>
   1add4:	ldrb	r0, [r4]
   1add8:	cmp	r0, #123	; 0x7b
   1addc:	bne	1ae10 <main@@Base+0x4d6c>
   1ade0:	add	r1, r4, #1
   1ade4:	sub	r0, r6, r1
   1ade8:	cmp	r0, #2
   1adec:	blt	1ae48 <main@@Base+0x4da4>
   1adf0:	ldrb	r0, [r1]
   1adf4:	cmp	r0, #32
   1adf8:	bls	1ae38 <main@@Base+0x4d94>
   1adfc:	mov	r4, r1
   1ae00:	cmp	r4, r6
   1ae04:	mov	r2, r6
   1ae08:	bne	1ae64 <main@@Base+0x4dc0>
   1ae0c:	b	1aea4 <main@@Base+0x4e00>
   1ae10:	mov	r0, sl
   1ae14:	mov	r1, r4
   1ae18:	mov	r2, r6
   1ae1c:	mov	r3, #21
   1ae20:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   1ae24:	mov	r4, r0
   1ae28:	sub	r0, r6, r4
   1ae2c:	cmp	r0, #2
   1ae30:	bge	1a4a4 <main@@Base+0x4400>
   1ae34:	b	1cc94 <main@@Base+0x6bf0>
   1ae38:	bne	1ae48 <main@@Base+0x4da4>
   1ae3c:	ldrb	r0, [r4, #2]!
   1ae40:	cmp	r0, #32
   1ae44:	bhi	1ae58 <main@@Base+0x4db4>
   1ae48:	mov	r0, sl
   1ae4c:	mov	r2, r6
   1ae50:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   1ae54:	mov	r4, r0
   1ae58:	cmp	r4, r6
   1ae5c:	mov	r2, r6
   1ae60:	beq	1aea4 <main@@Base+0x4e00>
   1ae64:	ldrb	r0, [r4]
   1ae68:	cmp	r0, #125	; 0x7d
   1ae6c:	bne	1aea0 <main@@Base+0x4dfc>
   1ae70:	add	r1, r4, #1
   1ae74:	sub	r0, r6, r1
   1ae78:	cmp	r0, #2
   1ae7c:	blt	1ef18 <main@@Base+0x8e74>
   1ae80:	ldrb	r0, [r1]
   1ae84:	cmp	r0, #32
   1ae88:	bhi	1bc74 <main@@Base+0x5bd0>
   1ae8c:	bne	1ef18 <main@@Base+0x8e74>
   1ae90:	ldrb	r0, [r4, #2]!
   1ae94:	cmp	r0, #32
   1ae98:	bhi	1a498 <main@@Base+0x43f4>
   1ae9c:	b	1ef18 <main@@Base+0x8e74>
   1aea0:	mov	r2, r4
   1aea4:	ldr	r0, [sp, #20]
   1aea8:	add	r0, r0, #26
   1aeac:	str	r0, [sp, #16]
   1aeb0:	cmp	r2, r6
   1aeb4:	mov	r8, r6
   1aeb8:	beq	1af0c <main@@Base+0x4e68>
   1aebc:	ldrb	r0, [r2]
   1aec0:	cmp	r0, #46	; 0x2e
   1aec4:	beq	1aee0 <main@@Base+0x4e3c>
   1aec8:	cmp	r0, #34	; 0x22
   1aecc:	bne	1aefc <main@@Base+0x4e58>
   1aed0:	ldr	r0, [sp, #32]
   1aed4:	mov	r1, #0
   1aed8:	add	r8, r2, #1
   1aedc:	b	1af08 <main@@Base+0x4e64>
   1aee0:	mov	r1, r2
   1aee4:	mov	r0, sl
   1aee8:	mov	r2, r6
   1aeec:	mov	r3, #5
   1aef0:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   1aef4:	mov	r8, r0
   1aef8:	b	1af0c <main@@Base+0x4e68>
   1aefc:	ldr	r0, [sp, #32]
   1af00:	mov	r1, #1
   1af04:	mov	r8, r2
   1af08:	str	r1, [r0]
   1af0c:	sub	ip, r6, r8
   1af10:	mov	r0, #8
   1af14:	cmp	ip, #8
   1af18:	movcc	r0, ip
   1af1c:	sub	r7, r0, #1
   1af20:	cmp	r7, #7
   1af24:	bhi	1bb80 <main@@Base+0x5adc>
   1af28:	add	r5, pc, #32
   1af2c:	mov	r1, #0
   1af30:	mov	lr, #0
   1af34:	mov	r9, #0
   1af38:	mov	r6, #0
   1af3c:	mov	r3, #0
   1af40:	mov	r4, #0
   1af44:	mov	r0, #0
   1af48:	mov	r2, #0
   1af4c:	ldr	pc, [r5, r7, lsl #2]
   1af50:			; <UNDEFINED> instruction: 0x0001afb4
   1af54:	andeq	sl, r1, ip, lsr #31
   1af58:	andeq	sl, r1, r4, lsr #31
   1af5c:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   1af60:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   1af64:	andeq	sl, r1, r4, lsl #31
   1af68:	andeq	sl, r1, r4, ror pc
   1af6c:	andeq	sl, r1, r0, ror pc
   1af70:	ldrb	lr, [r8, #7]
   1af74:	ldrb	r0, [r8, #6]
   1af78:	mov	r9, r1
   1af7c:	orr	r0, lr, r0, lsl #8
   1af80:	mov	r1, r0
   1af84:	ldrb	r0, [r8, #5]
   1af88:	mov	r6, r9
   1af8c:	orr	r1, r1, r0, lsl #16
   1af90:	ldrb	r0, [r8, #4]
   1af94:	mov	r3, r6
   1af98:	orr	r1, r1, r0, lsl #24
   1af9c:	ldrb	r0, [r8, #3]
   1afa0:	orr	r4, r0, r3
   1afa4:	ldrb	r0, [r8, #2]
   1afa8:	orr	r0, r4, r0, lsl #8
   1afac:	ldrb	r2, [r8, #1]
   1afb0:	orr	r2, r0, r2, lsl #16
   1afb4:	ldrb	r0, [r8]
   1afb8:	movw	r3, #29556	; 0x7374
   1afbc:	movt	r3, #29797	; 0x7465
   1afc0:	orr	r2, r2, r0, lsl #24
   1afc4:	mvn	r0, #-855638016	; 0xcd000000
   1afc8:	subs	r0, r0, r1
   1afcc:	sbcs	r0, r3, r2
   1afd0:	bcc	1b050 <main@@Base+0x4fac>
   1afd4:	ldr	r6, [sp, #44]	; 0x2c
   1afd8:	and	r1, r1, #-16777216	; 0xff000000
   1afdc:	eor	r0, r2, r3
   1afe0:	eor	r2, r1, #822083584	; 0x31000000
   1afe4:	orrs	r2, r2, r0
   1afe8:	beq	1b130 <main@@Base+0x508c>
   1afec:	eor	r1, r1, #838860800	; 0x32000000
   1aff0:	orrs	r0, r1, r0
   1aff4:	bne	1bb80 <main@@Base+0x5adc>
   1aff8:	cmp	ip, #6
   1affc:	mov	r6, r8
   1b000:	blt	1b5f8 <main@@Base+0x5554>
   1b004:	ldr	r2, [sp, #32]
   1b008:	mov	r1, r8
   1b00c:	ldrb	r0, [r1, #5]!
   1b010:	ldr	r2, [r2]
   1b014:	cmp	r2, #0
   1b018:	beq	1b244 <main@@Base+0x51a0>
   1b01c:	cmp	r0, #33	; 0x21
   1b020:	bcc	1b030 <main@@Base+0x4f8c>
   1b024:	cmp	r0, #58	; 0x3a
   1b028:	mov	r6, r8
   1b02c:	bne	1b5f8 <main@@Base+0x5554>
   1b030:	ldr	r0, [sp, #32]
   1b034:	mov	r2, #0
   1b038:	str	r2, [r0]
   1b03c:	ldr	r4, [sp, #44]	; 0x2c
   1b040:	sub	r0, r4, r1
   1b044:	cmp	r0, #2
   1b048:	bge	1b264 <main@@Base+0x51c0>
   1b04c:	b	1b348 <main@@Base+0x52a4>
   1b050:	ldr	r6, [sp, #44]	; 0x2c
   1b054:	cmn	r2, #-2013265919	; 0x88000001
   1b058:	bhi	1b0c4 <main@@Base+0x5020>
   1b05c:	and	r1, r1, #-16777216	; 0xff000000
   1b060:	eor	r0, r2, r3
   1b064:	eor	r1, r1, #855638016	; 0x33000000
   1b068:	orrs	r0, r1, r0
   1b06c:	bne	1bb80 <main@@Base+0x5adc>
   1b070:	cmp	ip, #6
   1b074:	mov	r1, r8
   1b078:	blt	1b958 <main@@Base+0x58b4>
   1b07c:	ldr	r1, [sp, #32]
   1b080:	mov	r2, r8
   1b084:	ldrb	r0, [r2, #5]!
   1b088:	ldr	r1, [r1]
   1b08c:	cmp	r1, #0
   1b090:	beq	1b2bc <main@@Base+0x5218>
   1b094:	cmp	r0, #33	; 0x21
   1b098:	bcc	1b0a8 <main@@Base+0x5004>
   1b09c:	cmp	r0, #58	; 0x3a
   1b0a0:	mov	r1, r8
   1b0a4:	bne	1b958 <main@@Base+0x58b4>
   1b0a8:	ldr	r0, [sp, #32]
   1b0ac:	mov	r1, #0
   1b0b0:	str	r1, [r0]
   1b0b4:	sub	r0, r6, r2
   1b0b8:	cmp	r0, #2
   1b0bc:	bge	1b2d8 <main@@Base+0x5234>
   1b0c0:	b	1b4d4 <main@@Base+0x5430>
   1b0c4:	lsr	r1, r2, #24
   1b0c8:	and	r0, r2, #-16777216	; 0xff000000
   1b0cc:	cmp	r1, #120	; 0x78
   1b0d0:	bhi	1b184 <main@@Base+0x50e0>
   1b0d4:	teq	r0, #2013265920	; 0x78000000
   1b0d8:	bne	1bb80 <main@@Base+0x5adc>
   1b0dc:	cmp	ip, #2
   1b0e0:	mov	r7, r8
   1b0e4:	blt	1b99c <main@@Base+0x58f8>
   1b0e8:	ldr	r2, [sp, #32]
   1b0ec:	mov	r1, r8
   1b0f0:	ldrb	r0, [r1, #1]!
   1b0f4:	ldr	r2, [r2]
   1b0f8:	cmp	r2, #0
   1b0fc:	beq	1b2f4 <main@@Base+0x5250>
   1b100:	cmp	r0, #33	; 0x21
   1b104:	bcc	1b114 <main@@Base+0x5070>
   1b108:	cmp	r0, #58	; 0x3a
   1b10c:	mov	r7, r8
   1b110:	bne	1b99c <main@@Base+0x58f8>
   1b114:	ldr	r0, [sp, #32]
   1b118:	mov	r2, #0
   1b11c:	str	r2, [r0]
   1b120:	sub	r0, r6, r1
   1b124:	cmp	r0, #2
   1b128:	bge	1b310 <main@@Base+0x526c>
   1b12c:	b	1b55c <main@@Base+0x54b8>
   1b130:	cmp	ip, #6
   1b134:	mov	r7, r8
   1b138:	blt	1b778 <main@@Base+0x56d4>
   1b13c:	ldr	r2, [sp, #32]
   1b140:	mov	r1, r8
   1b144:	ldrb	r0, [r1, #5]!
   1b148:	ldr	r2, [r2]
   1b14c:	cmp	r2, #0
   1b150:	beq	1b284 <main@@Base+0x51e0>
   1b154:	cmp	r0, #33	; 0x21
   1b158:	bcc	1b168 <main@@Base+0x50c4>
   1b15c:	cmp	r0, #58	; 0x3a
   1b160:	mov	r7, r8
   1b164:	bne	1b778 <main@@Base+0x56d4>
   1b168:	ldr	r0, [sp, #32]
   1b16c:	mov	r2, #0
   1b170:	str	r2, [r0]
   1b174:	sub	r0, r6, r1
   1b178:	cmp	r0, #2
   1b17c:	bge	1b2a0 <main@@Base+0x51fc>
   1b180:	b	1b3d0 <main@@Base+0x532c>
   1b184:	teq	r0, #2030043136	; 0x79000000
   1b188:	beq	1b1ec <main@@Base+0x5148>
   1b18c:	teq	r0, #2046820352	; 0x7a000000
   1b190:	bne	1bb80 <main@@Base+0x5adc>
   1b194:	cmp	ip, #2
   1b198:	mov	r7, r8
   1b19c:	blt	1ba48 <main@@Base+0x59a4>
   1b1a0:	ldr	r2, [sp, #32]
   1b1a4:	mov	r1, r8
   1b1a8:	ldrb	r0, [r1, #1]!
   1b1ac:	ldr	r2, [r2]
   1b1b0:	cmp	r2, #0
   1b1b4:	beq	1b440 <main@@Base+0x539c>
   1b1b8:	cmp	r0, #33	; 0x21
   1b1bc:	bcc	1b1cc <main@@Base+0x5128>
   1b1c0:	cmp	r0, #58	; 0x3a
   1b1c4:	mov	r7, r8
   1b1c8:	bne	1ba48 <main@@Base+0x59a4>
   1b1cc:	ldr	r0, [sp, #32]
   1b1d0:	mov	r2, #0
   1b1d4:	str	r2, [r0]
   1b1d8:	ldr	r4, [sp, #44]	; 0x2c
   1b1dc:	sub	r0, r4, r1
   1b1e0:	cmp	r0, #2
   1b1e4:	bge	1b460 <main@@Base+0x53bc>
   1b1e8:	b	1b814 <main@@Base+0x5770>
   1b1ec:	cmp	ip, #2
   1b1f0:	mov	r7, r8
   1b1f4:	blt	1baf8 <main@@Base+0x5a54>
   1b1f8:	ldr	r2, [sp, #32]
   1b1fc:	mov	r1, r8
   1b200:	ldrb	r0, [r1, #1]!
   1b204:	ldr	r2, [r2]
   1b208:	cmp	r2, #0
   1b20c:	beq	1b480 <main@@Base+0x53dc>
   1b210:	cmp	r0, #33	; 0x21
   1b214:	bcc	1b224 <main@@Base+0x5180>
   1b218:	cmp	r0, #58	; 0x3a
   1b21c:	mov	r7, r8
   1b220:	bne	1baf8 <main@@Base+0x5a54>
   1b224:	ldr	r0, [sp, #32]
   1b228:	mov	r2, #0
   1b22c:	str	r2, [r0]
   1b230:	ldr	r4, [sp, #44]	; 0x2c
   1b234:	sub	r0, r4, r1
   1b238:	cmp	r0, #2
   1b23c:	bge	1b4a0 <main@@Base+0x53fc>
   1b240:	b	1b8ac <main@@Base+0x5808>
   1b244:	cmp	r0, #34	; 0x22
   1b248:	mov	r6, r8
   1b24c:	bne	1b5f8 <main@@Base+0x5554>
   1b250:	add	r1, r8, #6
   1b254:	ldr	r4, [sp, #44]	; 0x2c
   1b258:	sub	r0, r4, r1
   1b25c:	cmp	r0, #2
   1b260:	blt	1b348 <main@@Base+0x52a4>
   1b264:	ldrb	r0, [r1]
   1b268:	cmp	r0, #32
   1b26c:	bls	1b330 <main@@Base+0x528c>
   1b270:	ldr	r4, [sp, #44]	; 0x2c
   1b274:	mov	r6, r1
   1b278:	cmp	r6, r4
   1b27c:	bne	1b360 <main@@Base+0x52bc>
   1b280:	b	1b3a4 <main@@Base+0x5300>
   1b284:	cmp	r0, #34	; 0x22
   1b288:	mov	r7, r8
   1b28c:	bne	1b778 <main@@Base+0x56d4>
   1b290:	add	r1, r8, #6
   1b294:	sub	r0, r6, r1
   1b298:	cmp	r0, #2
   1b29c:	blt	1b3d0 <main@@Base+0x532c>
   1b2a0:	ldrb	r0, [r1]
   1b2a4:	cmp	r0, #32
   1b2a8:	bls	1b3bc <main@@Base+0x5318>
   1b2ac:	mov	r7, r1
   1b2b0:	cmp	r7, r6
   1b2b4:	bne	1b3e8 <main@@Base+0x5344>
   1b2b8:	b	1b428 <main@@Base+0x5384>
   1b2bc:	cmp	r0, #34	; 0x22
   1b2c0:	mov	r1, r8
   1b2c4:	bne	1b958 <main@@Base+0x58b4>
   1b2c8:	add	r2, r8, #6
   1b2cc:	sub	r0, r6, r2
   1b2d0:	cmp	r0, #2
   1b2d4:	blt	1b4d4 <main@@Base+0x5430>
   1b2d8:	ldrb	r0, [r2]
   1b2dc:	cmp	r0, #32
   1b2e0:	bls	1b4c0 <main@@Base+0x541c>
   1b2e4:	mov	r1, r2
   1b2e8:	cmp	r1, r6
   1b2ec:	bne	1b4f0 <main@@Base+0x544c>
   1b2f0:	b	1b530 <main@@Base+0x548c>
   1b2f4:	cmp	r0, #34	; 0x22
   1b2f8:	mov	r7, r8
   1b2fc:	bne	1b99c <main@@Base+0x58f8>
   1b300:	add	r1, r8, #2
   1b304:	sub	r0, r6, r1
   1b308:	cmp	r0, #2
   1b30c:	blt	1b55c <main@@Base+0x54b8>
   1b310:	ldrb	r0, [r1]
   1b314:	cmp	r0, #32
   1b318:	bls	1b544 <main@@Base+0x54a0>
   1b31c:	ldr	r6, [sp, #44]	; 0x2c
   1b320:	mov	r7, r1
   1b324:	cmp	r7, r6
   1b328:	bne	1b574 <main@@Base+0x54d0>
   1b32c:	b	1b5b8 <main@@Base+0x5514>
   1b330:	ldr	r4, [sp, #44]	; 0x2c
   1b334:	bne	1b348 <main@@Base+0x52a4>
   1b338:	mov	r6, r1
   1b33c:	ldrb	r0, [r6, #1]!
   1b340:	cmp	r0, #32
   1b344:	bhi	1b358 <main@@Base+0x52b4>
   1b348:	mov	r0, sl
   1b34c:	mov	r2, r4
   1b350:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   1b354:	mov	r6, r0
   1b358:	cmp	r6, r4
   1b35c:	beq	1b3a4 <main@@Base+0x5300>
   1b360:	ldrb	r0, [r6]
   1b364:	cmp	r0, #58	; 0x3a
   1b368:	bne	1b3a4 <main@@Base+0x5300>
   1b36c:	ldr	r0, [sp, #44]	; 0x2c
   1b370:	add	r1, r6, #1
   1b374:	sub	r0, r0, r1
   1b378:	cmp	r0, #2
   1b37c:	blt	1b5e8 <main@@Base+0x5544>
   1b380:	ldrb	r0, [r1]
   1b384:	cmp	r0, #32
   1b388:	bls	1b5d4 <main@@Base+0x5530>
   1b38c:	ldr	sl, [sp, #36]	; 0x24
   1b390:	mov	r6, r1
   1b394:	cmp	r8, r6
   1b398:	bne	1b600 <main@@Base+0x555c>
   1b39c:	ldr	r6, [sp, #44]	; 0x2c
   1b3a0:	b	1bb80 <main@@Base+0x5adc>
   1b3a4:	ldr	r2, [sp, #44]	; 0x2c
   1b3a8:	mov	r0, sl
   1b3ac:	mov	r1, r6
   1b3b0:	mov	r3, #4
   1b3b4:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   1b3b8:	b	1b5f4 <main@@Base+0x5550>
   1b3bc:	bne	1b3d0 <main@@Base+0x532c>
   1b3c0:	mov	r7, r1
   1b3c4:	ldrb	r0, [r7, #1]!
   1b3c8:	cmp	r0, #32
   1b3cc:	bhi	1b3e0 <main@@Base+0x533c>
   1b3d0:	mov	r0, sl
   1b3d4:	mov	r2, r6
   1b3d8:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   1b3dc:	mov	r7, r0
   1b3e0:	cmp	r7, r6
   1b3e4:	beq	1b428 <main@@Base+0x5384>
   1b3e8:	ldrb	r0, [r7]
   1b3ec:	cmp	r0, #58	; 0x3a
   1b3f0:	bne	1b428 <main@@Base+0x5384>
   1b3f4:	add	r1, r7, #1
   1b3f8:	sub	r0, r6, r1
   1b3fc:	cmp	r0, #2
   1b400:	blt	1b768 <main@@Base+0x56c4>
   1b404:	ldrb	r0, [r1]
   1b408:	cmp	r0, #32
   1b40c:	bls	1b750 <main@@Base+0x56ac>
   1b410:	ldr	r6, [sp, #44]	; 0x2c
   1b414:	ldr	sl, [sp, #36]	; 0x24
   1b418:	mov	r7, r1
   1b41c:	cmp	r8, r7
   1b420:	bne	1b780 <main@@Base+0x56dc>
   1b424:	b	1bb80 <main@@Base+0x5adc>
   1b428:	mov	r0, sl
   1b42c:	mov	r1, r7
   1b430:	mov	r2, r6
   1b434:	mov	r3, #4
   1b438:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   1b43c:	b	1b774 <main@@Base+0x56d0>
   1b440:	cmp	r0, #34	; 0x22
   1b444:	mov	r7, r8
   1b448:	bne	1ba48 <main@@Base+0x59a4>
   1b44c:	add	r1, r8, #2
   1b450:	ldr	r4, [sp, #44]	; 0x2c
   1b454:	sub	r0, r4, r1
   1b458:	cmp	r0, #2
   1b45c:	blt	1b814 <main@@Base+0x5770>
   1b460:	ldrb	r0, [r1]
   1b464:	cmp	r0, #32
   1b468:	bls	1b7fc <main@@Base+0x5758>
   1b46c:	ldr	r4, [sp, #44]	; 0x2c
   1b470:	mov	r7, r1
   1b474:	cmp	r7, r4
   1b478:	bne	1b82c <main@@Base+0x5788>
   1b47c:	b	1b874 <main@@Base+0x57d0>
   1b480:	cmp	r0, #34	; 0x22
   1b484:	mov	r7, r8
   1b488:	bne	1baf8 <main@@Base+0x5a54>
   1b48c:	add	r1, r8, #2
   1b490:	ldr	r4, [sp, #44]	; 0x2c
   1b494:	sub	r0, r4, r1
   1b498:	cmp	r0, #2
   1b49c:	blt	1b8ac <main@@Base+0x5808>
   1b4a0:	ldrb	r0, [r1]
   1b4a4:	cmp	r0, #32
   1b4a8:	bls	1b894 <main@@Base+0x57f0>
   1b4ac:	ldr	r4, [sp, #44]	; 0x2c
   1b4b0:	mov	r7, r1
   1b4b4:	cmp	r7, r4
   1b4b8:	bne	1b8c4 <main@@Base+0x5820>
   1b4bc:	b	1b90c <main@@Base+0x5868>
   1b4c0:	bne	1b4d4 <main@@Base+0x5430>
   1b4c4:	mov	r1, r2
   1b4c8:	ldrb	r0, [r1, #1]!
   1b4cc:	cmp	r0, #32
   1b4d0:	bhi	1b4e8 <main@@Base+0x5444>
   1b4d4:	mov	r1, r2
   1b4d8:	mov	r0, sl
   1b4dc:	mov	r2, r6
   1b4e0:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   1b4e4:	mov	r1, r0
   1b4e8:	cmp	r1, r6
   1b4ec:	beq	1b530 <main@@Base+0x548c>
   1b4f0:	ldrb	r0, [r1]
   1b4f4:	cmp	r0, #58	; 0x3a
   1b4f8:	bne	1b530 <main@@Base+0x548c>
   1b4fc:	add	r2, r1, #1
   1b500:	sub	r0, r6, r2
   1b504:	cmp	r0, #2
   1b508:	blt	1b944 <main@@Base+0x58a0>
   1b50c:	ldrb	r0, [r2]
   1b510:	cmp	r0, #32
   1b514:	bls	1b92c <main@@Base+0x5888>
   1b518:	ldr	r6, [sp, #44]	; 0x2c
   1b51c:	ldr	sl, [sp, #36]	; 0x24
   1b520:	mov	r1, r2
   1b524:	cmp	r8, r1
   1b528:	bne	1b960 <main@@Base+0x58bc>
   1b52c:	b	1bb80 <main@@Base+0x5adc>
   1b530:	mov	r0, sl
   1b534:	mov	r2, r6
   1b538:	mov	r3, #4
   1b53c:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   1b540:	b	1b954 <main@@Base+0x58b0>
   1b544:	ldr	r6, [sp, #44]	; 0x2c
   1b548:	bne	1b55c <main@@Base+0x54b8>
   1b54c:	mov	r7, r1
   1b550:	ldrb	r0, [r7, #1]!
   1b554:	cmp	r0, #32
   1b558:	bhi	1b56c <main@@Base+0x54c8>
   1b55c:	ldr	r0, [sp, #36]	; 0x24
   1b560:	mov	r2, r6
   1b564:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   1b568:	mov	r7, r0
   1b56c:	cmp	r7, r6
   1b570:	beq	1b5b8 <main@@Base+0x5514>
   1b574:	ldrb	r0, [r7]
   1b578:	cmp	r0, #58	; 0x3a
   1b57c:	bne	1b5b8 <main@@Base+0x5514>
   1b580:	ldr	sl, [sp, #36]	; 0x24
   1b584:	add	r1, r7, #1
   1b588:	sub	r0, r6, r1
   1b58c:	cmp	r0, #2
   1b590:	blt	1b98c <main@@Base+0x58e8>
   1b594:	ldrb	r0, [r1]
   1b598:	cmp	r0, #32
   1b59c:	bls	1b974 <main@@Base+0x58d0>
   1b5a0:	ldr	r6, [sp, #44]	; 0x2c
   1b5a4:	ldr	sl, [sp, #36]	; 0x24
   1b5a8:	mov	r7, r1
   1b5ac:	cmp	r8, r7
   1b5b0:	bne	1b9a4 <main@@Base+0x5900>
   1b5b4:	b	1bb80 <main@@Base+0x5adc>
   1b5b8:	ldr	sl, [sp, #36]	; 0x24
   1b5bc:	mov	r1, r7
   1b5c0:	mov	r2, r6
   1b5c4:	mov	r3, #4
   1b5c8:	mov	r0, sl
   1b5cc:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   1b5d0:	b	1b998 <main@@Base+0x58f4>
   1b5d4:	ldr	sl, [sp, #36]	; 0x24
   1b5d8:	bne	1b5e8 <main@@Base+0x5544>
   1b5dc:	ldrb	r0, [r6, #2]!
   1b5e0:	cmp	r0, #32
   1b5e4:	bhi	1b5f8 <main@@Base+0x5554>
   1b5e8:	ldr	r2, [sp, #44]	; 0x2c
   1b5ec:	mov	r0, sl
   1b5f0:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   1b5f4:	mov	r6, r0
   1b5f8:	cmp	r8, r6
   1b5fc:	beq	1b39c <main@@Base+0x52f8>
   1b600:	ldr	r2, [sp, #44]	; 0x2c
   1b604:	mov	r4, #0
   1b608:	str	r4, [fp, #-52]	; 0xffffffcc
   1b60c:	str	r4, [fp, #-56]	; 0xffffffc8
   1b610:	strb	r4, [fp, #-60]	; 0xffffffc4
   1b614:	str	r4, [sp, #56]	; 0x38
   1b618:	cmp	r6, r2
   1b61c:	beq	1b674 <main@@Base+0x55d0>
   1b620:	sub	r0, fp, #56	; 0x38
   1b624:	mov	r1, r6
   1b628:	add	r3, sp, #56	; 0x38
   1b62c:	str	r0, [sp]
   1b630:	mov	r0, sl
   1b634:	bl	38fa8 <flatcc_json_parser_integer@@Base>
   1b638:	cmp	r0, r6
   1b63c:	beq	1b688 <main@@Base+0x55e4>
   1b640:	ldr	r3, [sp, #56]	; 0x38
   1b644:	mov	r1, r0
   1b648:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1b64c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1b650:	cmp	r3, #0
   1b654:	beq	1b69c <main@@Base+0x55f8>
   1b658:	subs	r3, r0, #129	; 0x81
   1b65c:	sbcs	r2, r2, #0
   1b660:	bcc	1b6cc <main@@Base+0x5628>
   1b664:	ldr	r2, [sp, #44]	; 0x2c
   1b668:	mov	r0, sl
   1b66c:	mov	r3, #8
   1b670:	b	1b6b4 <main@@Base+0x5610>
   1b674:	mov	r1, r2
   1b678:	ldr	r5, [sp, #40]	; 0x28
   1b67c:	cmp	r6, r1
   1b680:	bne	1b734 <main@@Base+0x5690>
   1b684:	b	1b6f8 <main@@Base+0x5654>
   1b688:	mov	r1, r6
   1b68c:	ldr	r5, [sp, #40]	; 0x28
   1b690:	cmp	r6, r1
   1b694:	bne	1b734 <main@@Base+0x5690>
   1b698:	b	1b6f8 <main@@Base+0x5654>
   1b69c:	subs	r3, r0, #128	; 0x80
   1b6a0:	sbcs	r2, r2, #0
   1b6a4:	bcc	1b6e4 <main@@Base+0x5640>
   1b6a8:	ldr	r2, [sp, #44]	; 0x2c
   1b6ac:	mov	r0, sl
   1b6b0:	mov	r3, #7
   1b6b4:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   1b6b8:	mov	r1, r0
   1b6bc:	ldr	r5, [sp, #40]	; 0x28
   1b6c0:	cmp	r6, r1
   1b6c4:	bne	1b734 <main@@Base+0x5690>
   1b6c8:	b	1b6f8 <main@@Base+0x5654>
   1b6cc:	rsb	r4, r0, #0
   1b6d0:	strb	r4, [fp, #-60]	; 0xffffffc4
   1b6d4:	ldr	r5, [sp, #40]	; 0x28
   1b6d8:	cmp	r6, r1
   1b6dc:	bne	1b734 <main@@Base+0x5690>
   1b6e0:	b	1b6f8 <main@@Base+0x5654>
   1b6e4:	mov	r4, r0
   1b6e8:	strb	r4, [fp, #-60]	; 0xffffffc4
   1b6ec:	ldr	r5, [sp, #40]	; 0x28
   1b6f0:	cmp	r6, r1
   1b6f4:	bne	1b734 <main@@Base+0x5690>
   1b6f8:	sub	r0, fp, #60	; 0x3c
   1b6fc:	ldr	r4, [sp, #44]	; 0x2c
   1b700:	mov	r1, r6
   1b704:	str	r0, [sp]
   1b708:	movw	r0, #628	; 0x274
   1b70c:	movt	r0, #6
   1b710:	add	r3, r0, #80	; 0x50
   1b714:	mov	r0, sl
   1b718:	mov	r2, r4
   1b71c:	bl	23764 <main@@Base+0xd6c0>
   1b720:	mov	r1, r0
   1b724:	cmp	r0, r6
   1b728:	cmpne	r1, r4
   1b72c:	beq	1bc88 <main@@Base+0x5be4>
   1b730:	ldrb	r4, [fp, #-60]	; 0xffffffc4
   1b734:	ldr	r0, [sp, #20]
   1b738:	ldr	r6, [sp, #44]	; 0x2c
   1b73c:	strb	r4, [r0, #24]
   1b740:	sub	r0, r6, r1
   1b744:	cmp	r0, #2
   1b748:	bge	1bba4 <main@@Base+0x5b00>
   1b74c:	b	1bbd4 <main@@Base+0x5b30>
   1b750:	ldr	r6, [sp, #44]	; 0x2c
   1b754:	ldr	sl, [sp, #36]	; 0x24
   1b758:	bne	1b768 <main@@Base+0x56c4>
   1b75c:	ldrb	r0, [r7, #2]!
   1b760:	cmp	r0, #32
   1b764:	bhi	1b778 <main@@Base+0x56d4>
   1b768:	mov	r0, sl
   1b76c:	mov	r2, r6
   1b770:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   1b774:	mov	r7, r0
   1b778:	cmp	r8, r7
   1b77c:	beq	1bb80 <main@@Base+0x5adc>
   1b780:	mov	r0, #0
   1b784:	mov	r1, r7
   1b788:	mov	r2, r6
   1b78c:	sub	r3, fp, #56	; 0x38
   1b790:	str	r0, [fp, #-52]	; 0xffffffcc
   1b794:	str	r0, [fp, #-56]	; 0xffffffc8
   1b798:	mov	r0, sl
   1b79c:	bl	38438 <flatcc_json_parser_double@@Base>
   1b7a0:	ldr	r5, [sp, #40]	; 0x28
   1b7a4:	mov	r1, r0
   1b7a8:	cmp	r7, r0
   1b7ac:	bne	1b7e0 <main@@Base+0x573c>
   1b7b0:	movw	r3, #388	; 0x184
   1b7b4:	sub	r0, fp, #56	; 0x38
   1b7b8:	mov	r1, r7
   1b7bc:	mov	r2, r6
   1b7c0:	movt	r3, #6
   1b7c4:	str	r0, [sp]
   1b7c8:	mov	r0, sl
   1b7cc:	bl	268ec <main@@Base+0x10848>
   1b7d0:	mov	r1, r0
   1b7d4:	cmp	r0, r7
   1b7d8:	cmpne	r1, r6
   1b7dc:	beq	1bc88 <main@@Base+0x5be4>
   1b7e0:	vldr	d16, [fp, #-56]	; 0xffffffc8
   1b7e4:	ldr	r0, [sp, #20]
   1b7e8:	vstr	d16, [r0, #16]
   1b7ec:	sub	r0, r6, r1
   1b7f0:	cmp	r0, #2
   1b7f4:	bge	1bba4 <main@@Base+0x5b00>
   1b7f8:	b	1bbd4 <main@@Base+0x5b30>
   1b7fc:	ldr	r4, [sp, #44]	; 0x2c
   1b800:	bne	1b814 <main@@Base+0x5770>
   1b804:	mov	r7, r1
   1b808:	ldrb	r0, [r7, #1]!
   1b80c:	cmp	r0, #32
   1b810:	bhi	1b824 <main@@Base+0x5780>
   1b814:	ldr	r0, [sp, #36]	; 0x24
   1b818:	mov	r2, r4
   1b81c:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   1b820:	mov	r7, r0
   1b824:	cmp	r7, r4
   1b828:	beq	1b874 <main@@Base+0x57d0>
   1b82c:	ldrb	r0, [r7]
   1b830:	cmp	r0, #58	; 0x3a
   1b834:	bne	1b874 <main@@Base+0x57d0>
   1b838:	ldr	r6, [sp, #44]	; 0x2c
   1b83c:	ldr	sl, [sp, #36]	; 0x24
   1b840:	add	r1, r7, #1
   1b844:	sub	r0, r6, r1
   1b848:	cmp	r0, #2
   1b84c:	blt	1ba38 <main@@Base+0x5994>
   1b850:	ldrb	r0, [r1]
   1b854:	cmp	r0, #32
   1b858:	bls	1ba20 <main@@Base+0x597c>
   1b85c:	ldr	r6, [sp, #44]	; 0x2c
   1b860:	ldr	sl, [sp, #36]	; 0x24
   1b864:	mov	r7, r1
   1b868:	cmp	r8, r7
   1b86c:	bne	1ba50 <main@@Base+0x59ac>
   1b870:	b	1bb80 <main@@Base+0x5adc>
   1b874:	ldr	sl, [sp, #36]	; 0x24
   1b878:	ldr	r6, [sp, #44]	; 0x2c
   1b87c:	mov	r1, r7
   1b880:	mov	r3, #4
   1b884:	mov	r0, sl
   1b888:	mov	r2, r6
   1b88c:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   1b890:	b	1ba44 <main@@Base+0x59a0>
   1b894:	ldr	r4, [sp, #44]	; 0x2c
   1b898:	bne	1b8ac <main@@Base+0x5808>
   1b89c:	mov	r7, r1
   1b8a0:	ldrb	r0, [r7, #1]!
   1b8a4:	cmp	r0, #32
   1b8a8:	bhi	1b8bc <main@@Base+0x5818>
   1b8ac:	ldr	r0, [sp, #36]	; 0x24
   1b8b0:	mov	r2, r4
   1b8b4:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   1b8b8:	mov	r7, r0
   1b8bc:	cmp	r7, r4
   1b8c0:	beq	1b90c <main@@Base+0x5868>
   1b8c4:	ldrb	r0, [r7]
   1b8c8:	cmp	r0, #58	; 0x3a
   1b8cc:	bne	1b90c <main@@Base+0x5868>
   1b8d0:	ldr	r6, [sp, #44]	; 0x2c
   1b8d4:	ldr	sl, [sp, #36]	; 0x24
   1b8d8:	add	r1, r7, #1
   1b8dc:	sub	r0, r6, r1
   1b8e0:	cmp	r0, #2
   1b8e4:	blt	1bae8 <main@@Base+0x5a44>
   1b8e8:	ldrb	r0, [r1]
   1b8ec:	cmp	r0, #32
   1b8f0:	bls	1bad0 <main@@Base+0x5a2c>
   1b8f4:	ldr	r6, [sp, #44]	; 0x2c
   1b8f8:	ldr	sl, [sp, #36]	; 0x24
   1b8fc:	mov	r7, r1
   1b900:	cmp	r8, r7
   1b904:	bne	1bb00 <main@@Base+0x5a5c>
   1b908:	b	1bb80 <main@@Base+0x5adc>
   1b90c:	ldr	sl, [sp, #36]	; 0x24
   1b910:	ldr	r6, [sp, #44]	; 0x2c
   1b914:	mov	r1, r7
   1b918:	mov	r3, #4
   1b91c:	mov	r0, sl
   1b920:	mov	r2, r6
   1b924:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   1b928:	b	1baf4 <main@@Base+0x5a50>
   1b92c:	ldr	r6, [sp, #44]	; 0x2c
   1b930:	ldr	sl, [sp, #36]	; 0x24
   1b934:	bne	1b944 <main@@Base+0x58a0>
   1b938:	ldrb	r0, [r1, #2]!
   1b93c:	cmp	r0, #32
   1b940:	bhi	1b958 <main@@Base+0x58b4>
   1b944:	mov	r1, r2
   1b948:	mov	r0, sl
   1b94c:	mov	r2, r6
   1b950:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   1b954:	mov	r1, r0
   1b958:	cmp	r8, r1
   1b95c:	beq	1bb80 <main@@Base+0x5adc>
   1b960:	ldr	r3, [sp, #16]
   1b964:	mov	r0, sl
   1b968:	mov	r2, r6
   1b96c:	bl	23e2c <main@@Base+0xdd88>
   1b970:	b	1bb90 <main@@Base+0x5aec>
   1b974:	ldr	r6, [sp, #44]	; 0x2c
   1b978:	ldr	sl, [sp, #36]	; 0x24
   1b97c:	bne	1b98c <main@@Base+0x58e8>
   1b980:	ldrb	r0, [r7, #2]!
   1b984:	cmp	r0, #32
   1b988:	bhi	1b99c <main@@Base+0x58f8>
   1b98c:	mov	r0, sl
   1b990:	mov	r2, r6
   1b994:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   1b998:	mov	r7, r0
   1b99c:	cmp	r8, r7
   1b9a0:	beq	1bb80 <main@@Base+0x5adc>
   1b9a4:	mov	r0, #0
   1b9a8:	mov	r1, r7
   1b9ac:	mov	r2, r6
   1b9b0:	sub	r3, fp, #56	; 0x38
   1b9b4:	str	r0, [fp, #-56]	; 0xffffffc8
   1b9b8:	mov	r0, sl
   1b9bc:	bl	38e58 <flatcc_json_parser_float@@Base>
   1b9c0:	ldr	r5, [sp, #40]	; 0x28
   1b9c4:	mov	r1, r0
   1b9c8:	cmp	r7, r0
   1b9cc:	bne	1ba04 <main@@Base+0x5960>
   1b9d0:	sub	r0, fp, #56	; 0x38
   1b9d4:	mov	r1, r7
   1b9d8:	mov	r2, r6
   1b9dc:	str	r0, [sp]
   1b9e0:	movw	r0, #388	; 0x184
   1b9e4:	movt	r0, #6
   1b9e8:	add	r3, r0, #12
   1b9ec:	mov	r0, sl
   1b9f0:	bl	25e3c <main@@Base+0xfd98>
   1b9f4:	mov	r1, r0
   1b9f8:	cmp	r0, r7
   1b9fc:	cmpne	r1, r6
   1ba00:	beq	1bc88 <main@@Base+0x5be4>
   1ba04:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1ba08:	ldr	r2, [sp, #20]
   1ba0c:	str	r0, [r2]
   1ba10:	sub	r0, r6, r1
   1ba14:	cmp	r0, #2
   1ba18:	bge	1bba4 <main@@Base+0x5b00>
   1ba1c:	b	1bbd4 <main@@Base+0x5b30>
   1ba20:	ldr	r6, [sp, #44]	; 0x2c
   1ba24:	ldr	sl, [sp, #36]	; 0x24
   1ba28:	bne	1ba38 <main@@Base+0x5994>
   1ba2c:	ldrb	r0, [r7, #2]!
   1ba30:	cmp	r0, #32
   1ba34:	bhi	1ba48 <main@@Base+0x59a4>
   1ba38:	mov	r0, sl
   1ba3c:	mov	r2, r6
   1ba40:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   1ba44:	mov	r7, r0
   1ba48:	cmp	r8, r7
   1ba4c:	beq	1bb80 <main@@Base+0x5adc>
   1ba50:	mov	r0, #0
   1ba54:	mov	r1, r7
   1ba58:	mov	r2, r6
   1ba5c:	sub	r3, fp, #56	; 0x38
   1ba60:	str	r0, [fp, #-56]	; 0xffffffc8
   1ba64:	mov	r0, sl
   1ba68:	bl	38e58 <flatcc_json_parser_float@@Base>
   1ba6c:	mov	r1, r0
   1ba70:	cmp	r7, r0
   1ba74:	bne	1bab0 <main@@Base+0x5a0c>
   1ba78:	sub	r0, fp, #56	; 0x38
   1ba7c:	mov	r1, r7
   1ba80:	mov	r2, r6
   1ba84:	str	r0, [sp]
   1ba88:	movw	r0, #388	; 0x184
   1ba8c:	movt	r0, #6
   1ba90:	add	r3, r0, #24
   1ba94:	mov	r0, sl
   1ba98:	bl	25e3c <main@@Base+0xfd98>
   1ba9c:	mov	r1, r0
   1baa0:	cmp	r0, r7
   1baa4:	cmpne	r1, r6
   1baa8:	beq	1bc88 <main@@Base+0x5be4>
   1baac:	ldr	sl, [sp, #36]	; 0x24
   1bab0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1bab4:	ldr	r2, [sp, #20]
   1bab8:	str	r0, [r2, #8]
   1babc:	ldr	r5, [sp, #40]	; 0x28
   1bac0:	sub	r0, r6, r1
   1bac4:	cmp	r0, #2
   1bac8:	bge	1bba4 <main@@Base+0x5b00>
   1bacc:	b	1bbd4 <main@@Base+0x5b30>
   1bad0:	ldr	r6, [sp, #44]	; 0x2c
   1bad4:	ldr	sl, [sp, #36]	; 0x24
   1bad8:	bne	1bae8 <main@@Base+0x5a44>
   1badc:	ldrb	r0, [r7, #2]!
   1bae0:	cmp	r0, #32
   1bae4:	bhi	1baf8 <main@@Base+0x5a54>
   1bae8:	mov	r0, sl
   1baec:	mov	r2, r6
   1baf0:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   1baf4:	mov	r7, r0
   1baf8:	cmp	r8, r7
   1bafc:	beq	1bb80 <main@@Base+0x5adc>
   1bb00:	mov	r0, #0
   1bb04:	mov	r1, r7
   1bb08:	mov	r2, r6
   1bb0c:	sub	r3, fp, #56	; 0x38
   1bb10:	str	r0, [fp, #-56]	; 0xffffffc8
   1bb14:	mov	r0, sl
   1bb18:	bl	38e58 <flatcc_json_parser_float@@Base>
   1bb1c:	mov	r1, r0
   1bb20:	cmp	r7, r0
   1bb24:	bne	1bb60 <main@@Base+0x5abc>
   1bb28:	sub	r0, fp, #56	; 0x38
   1bb2c:	mov	r1, r7
   1bb30:	mov	r2, r6
   1bb34:	str	r0, [sp]
   1bb38:	movw	r0, #388	; 0x184
   1bb3c:	movt	r0, #6
   1bb40:	add	r3, r0, #36	; 0x24
   1bb44:	mov	r0, sl
   1bb48:	bl	25e3c <main@@Base+0xfd98>
   1bb4c:	mov	r1, r0
   1bb50:	cmp	r0, r7
   1bb54:	cmpne	r1, r6
   1bb58:	beq	1bc88 <main@@Base+0x5be4>
   1bb5c:	ldr	sl, [sp, #36]	; 0x24
   1bb60:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1bb64:	ldr	r2, [sp, #20]
   1bb68:	str	r0, [r2, #4]
   1bb6c:	ldr	r5, [sp, #40]	; 0x28
   1bb70:	sub	r0, r6, r1
   1bb74:	cmp	r0, #2
   1bb78:	blt	1bbd4 <main@@Base+0x5b30>
   1bb7c:	b	1bba4 <main@@Base+0x5b00>
   1bb80:	mov	r0, sl
   1bb84:	mov	r1, r8
   1bb88:	mov	r2, r6
   1bb8c:	bl	373bc <flatcc_json_parser_unmatched_symbol@@Base>
   1bb90:	mov	r1, r0
   1bb94:	ldr	r5, [sp, #40]	; 0x28
   1bb98:	sub	r0, r6, r1
   1bb9c:	cmp	r0, #2
   1bba0:	blt	1bbd4 <main@@Base+0x5b30>
   1bba4:	ldrb	r0, [r1]
   1bba8:	cmp	r0, #32
   1bbac:	bls	1bbc0 <main@@Base+0x5b1c>
   1bbb0:	mov	r2, r1
   1bbb4:	cmp	r2, r6
   1bbb8:	bne	1bbec <main@@Base+0x5b48>
   1bbbc:	b	1bca4 <main@@Base+0x5c00>
   1bbc0:	bne	1bbd4 <main@@Base+0x5b30>
   1bbc4:	mov	r2, r1
   1bbc8:	ldrb	r0, [r2, #1]!
   1bbcc:	cmp	r0, #32
   1bbd0:	bhi	1bbe4 <main@@Base+0x5b40>
   1bbd4:	mov	r0, sl
   1bbd8:	mov	r2, r6
   1bbdc:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   1bbe0:	mov	r2, r0
   1bbe4:	cmp	r2, r6
   1bbe8:	beq	1bca4 <main@@Base+0x5c00>
   1bbec:	ldrb	r0, [r2]
   1bbf0:	cmp	r0, #44	; 0x2c
   1bbf4:	bne	1bcb8 <main@@Base+0x5c14>
   1bbf8:	add	r1, r2, #1
   1bbfc:	sub	r0, r6, r1
   1bc00:	cmp	r0, #2
   1bc04:	blt	1bc34 <main@@Base+0x5b90>
   1bc08:	ldrb	r0, [r1]
   1bc0c:	cmp	r0, #32
   1bc10:	bls	1bc24 <main@@Base+0x5b80>
   1bc14:	mov	r2, r1
   1bc18:	cmp	r2, r6
   1bc1c:	bne	1bc4c <main@@Base+0x5ba8>
   1bc20:	b	1bcec <main@@Base+0x5c48>
   1bc24:	bne	1bc34 <main@@Base+0x5b90>
   1bc28:	ldrb	r0, [r2, #2]!
   1bc2c:	cmp	r0, #32
   1bc30:	bhi	1bc44 <main@@Base+0x5ba0>
   1bc34:	mov	r0, sl
   1bc38:	mov	r2, r6
   1bc3c:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   1bc40:	mov	r2, r0
   1bc44:	cmp	r2, r6
   1bc48:	beq	1bcec <main@@Base+0x5c48>
   1bc4c:	ldrb	r0, [r2]
   1bc50:	cmp	r0, #125	; 0x7d
   1bc54:	bne	1aeb0 <main@@Base+0x4e0c>
   1bc58:	add	r1, r2, #1
   1bc5c:	sub	r0, r6, r1
   1bc60:	cmp	r0, #2
   1bc64:	blt	1ef18 <main@@Base+0x8e74>
   1bc68:	ldrb	r0, [r1]
   1bc6c:	cmp	r0, #32
   1bc70:	bls	1e168 <main@@Base+0x80c4>
   1bc74:	mov	r4, r1
   1bc78:	sub	r0, r6, r4
   1bc7c:	cmp	r0, #2
   1bc80:	bge	1a4a4 <main@@Base+0x4400>
   1bc84:	b	1cc94 <main@@Base+0x6bf0>
   1bc88:	ldr	sl, [sp, #36]	; 0x24
   1bc8c:	ldr	r6, [sp, #44]	; 0x2c
   1bc90:	mov	r3, #33	; 0x21
   1bc94:	mov	r0, sl
   1bc98:	mov	r2, r6
   1bc9c:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   1bca0:	b	1a490 <main@@Base+0x43ec>
   1bca4:	mov	r4, r6
   1bca8:	sub	r0, r6, r4
   1bcac:	cmp	r0, #2
   1bcb0:	bge	1a4a4 <main@@Base+0x4400>
   1bcb4:	b	1cc94 <main@@Base+0x6bf0>
   1bcb8:	cmp	r0, #125	; 0x7d
   1bcbc:	bne	1c8cc <main@@Base+0x6828>
   1bcc0:	add	r1, r2, #1
   1bcc4:	sub	r0, r6, r1
   1bcc8:	cmp	r0, #2
   1bccc:	blt	1ef18 <main@@Base+0x8e74>
   1bcd0:	ldrb	r0, [r1]
   1bcd4:	cmp	r0, #32
   1bcd8:	bls	1eef8 <main@@Base+0x8e54>
   1bcdc:	ldr	r6, [sp, #44]	; 0x2c
   1bce0:	ldr	sl, [sp, #36]	; 0x24
   1bce4:	mov	r4, r1
   1bce8:	b	1a494 <main@@Base+0x43f0>
   1bcec:	mov	r0, sl
   1bcf0:	mov	r1, r6
   1bcf4:	b	1c8d4 <main@@Base+0x6830>
   1bcf8:	bne	1bd08 <main@@Base+0x5c64>
   1bcfc:	ldrb	r0, [r7, #2]!
   1bd00:	cmp	r0, #32
   1bd04:	bhi	1bd18 <main@@Base+0x5c74>
   1bd08:	mov	r0, sl
   1bd0c:	mov	r2, r6
   1bd10:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   1bd14:	mov	r7, r0
   1bd18:	cmp	r8, r7
   1bd1c:	beq	1a480 <main@@Base+0x43dc>
   1bd20:	mov	r0, #0
   1bd24:	mov	r1, r7
   1bd28:	mov	r2, r6
   1bd2c:	sub	r3, fp, #56	; 0x38
   1bd30:	str	r0, [fp, #-56]	; 0xffffffc8
   1bd34:	mov	r0, sl
   1bd38:	bl	38e58 <flatcc_json_parser_float@@Base>
   1bd3c:	ldr	r5, [sp, #40]	; 0x28
   1bd40:	mov	r4, r0
   1bd44:	cmp	r7, r0
   1bd48:	bne	1bd80 <main@@Base+0x5cdc>
   1bd4c:	sub	r0, fp, #56	; 0x38
   1bd50:	mov	r1, r7
   1bd54:	mov	r2, r6
   1bd58:	str	r0, [sp]
   1bd5c:	movw	r0, #148	; 0x94
   1bd60:	movt	r0, #6
   1bd64:	add	r3, r0, #72	; 0x48
   1bd68:	mov	r0, sl
   1bd6c:	bl	25e3c <main@@Base+0xfd98>
   1bd70:	mov	r4, r0
   1bd74:	cmp	r0, r7
   1bd78:	cmpne	r4, r6
   1bd7c:	beq	16fd8 <main@@Base+0xf34>
   1bd80:	vldr	s0, [fp, #-56]	; 0xffffffc8
   1bd84:	vcmp.f32	s0, s16
   1bd88:	vmrs	APSR_nzcv, fpscr
   1bd8c:	bne	1bd9c <main@@Base+0x5cf8>
   1bd90:	ldrb	r0, [sl, #8]
   1bd94:	tst	r0, #2
   1bd98:	beq	1a498 <main@@Base+0x43f4>
   1bd9c:	ldr	r0, [sl]
   1bda0:	mov	r1, #26
   1bda4:	b	19194 <main@@Base+0x30f0>
   1bda8:	bne	1bdbc <main@@Base+0x5d18>
   1bdac:	mov	r4, r1
   1bdb0:	ldrb	r0, [r4, #1]!
   1bdb4:	cmp	r0, #32
   1bdb8:	bhi	1bdcc <main@@Base+0x5d28>
   1bdbc:	mov	r0, sl
   1bdc0:	mov	r2, r6
   1bdc4:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   1bdc8:	mov	r4, r0
   1bdcc:	cmp	r4, r6
   1bdd0:	beq	1be14 <main@@Base+0x5d70>
   1bdd4:	ldrb	r0, [r4]
   1bdd8:	cmp	r0, #58	; 0x3a
   1bddc:	bne	1be14 <main@@Base+0x5d70>
   1bde0:	add	r1, r4, #1
   1bde4:	sub	r0, r6, r1
   1bde8:	cmp	r0, #2
   1bdec:	blt	1dda8 <main@@Base+0x7d04>
   1bdf0:	ldrb	r0, [r1]
   1bdf4:	cmp	r0, #32
   1bdf8:	bls	1dd90 <main@@Base+0x7cec>
   1bdfc:	ldr	r6, [sp, #44]	; 0x2c
   1be00:	ldr	sl, [sp, #36]	; 0x24
   1be04:	mov	r4, r1
   1be08:	cmp	r7, r4
   1be0c:	bne	1ddc0 <main@@Base+0x7d1c>
   1be10:	b	1fad0 <main@@Base+0x9a2c>
   1be14:	mov	r0, sl
   1be18:	mov	r1, r4
   1be1c:	mov	r2, r6
   1be20:	mov	r3, #4
   1be24:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   1be28:	b	1ddb4 <main@@Base+0x7d10>
   1be2c:	bne	1be40 <main@@Base+0x5d9c>
   1be30:	mov	r7, r1
   1be34:	ldrb	r0, [r7, #1]!
   1be38:	cmp	r0, #32
   1be3c:	bhi	1be50 <main@@Base+0x5dac>
   1be40:	mov	r0, sl
   1be44:	mov	r2, r6
   1be48:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   1be4c:	mov	r7, r0
   1be50:	cmp	r7, r6
   1be54:	beq	1bf0c <main@@Base+0x5e68>
   1be58:	ldrb	r0, [r7]
   1be5c:	cmp	r0, #58	; 0x3a
   1be60:	bne	1bf0c <main@@Base+0x5e68>
   1be64:	add	r1, r7, #1
   1be68:	sub	r0, r6, r1
   1be6c:	cmp	r0, #2
   1be70:	blt	1de7c <main@@Base+0x7dd8>
   1be74:	ldrb	r0, [r1]
   1be78:	cmp	r0, #32
   1be7c:	bls	1de64 <main@@Base+0x7dc0>
   1be80:	ldr	r6, [sp, #44]	; 0x2c
   1be84:	ldr	sl, [sp, #36]	; 0x24
   1be88:	mov	r7, r1
   1be8c:	cmp	r9, r7
   1be90:	bne	1de94 <main@@Base+0x7df0>
   1be94:	add	r4, r8, #16
   1be98:	mov	r1, #8
   1be9c:	sub	r0, r6, r4
   1bea0:	cmp	r0, #8
   1bea4:	movcc	r1, r0
   1bea8:	sub	r1, r1, #1
   1beac:	cmp	r1, #7
   1beb0:	bhi	2057c <main@@Base+0xa4d8>
   1beb4:	ldrb	r1, [r4]
   1beb8:	cmp	r1, #97	; 0x61
   1bebc:	bne	2057c <main@@Base+0xa4d8>
   1bec0:	cmp	r0, #2
   1bec4:	blt	2057c <main@@Base+0xa4d8>
   1bec8:	ldr	r2, [sp, #32]
   1becc:	mov	r1, r8
   1bed0:	ldrb	r0, [r1, #17]!
   1bed4:	ldr	r2, [r2]
   1bed8:	cmp	r2, #0
   1bedc:	beq	1c770 <main@@Base+0x66cc>
   1bee0:	cmp	r0, #33	; 0x21
   1bee4:	bcc	1bef0 <main@@Base+0x5e4c>
   1bee8:	cmp	r0, #58	; 0x3a
   1beec:	bne	2057c <main@@Base+0xa4d8>
   1bef0:	ldr	r0, [sp, #32]
   1bef4:	mov	r2, #0
   1bef8:	str	r2, [r0]
   1befc:	sub	r0, r6, r1
   1bf00:	cmp	r0, #2
   1bf04:	bge	1c788 <main@@Base+0x66e4>
   1bf08:	b	1e500 <main@@Base+0x845c>
   1bf0c:	mov	r0, sl
   1bf10:	mov	r1, r7
   1bf14:	mov	r2, r6
   1bf18:	mov	r3, #4
   1bf1c:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   1bf20:	b	1de88 <main@@Base+0x7de4>
   1bf24:	bne	1bf38 <main@@Base+0x5e94>
   1bf28:	mov	r7, r1
   1bf2c:	ldrb	r0, [r7, #1]!
   1bf30:	cmp	r0, #32
   1bf34:	bhi	1bf48 <main@@Base+0x5ea4>
   1bf38:	mov	r0, sl
   1bf3c:	mov	r2, r6
   1bf40:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   1bf44:	mov	r7, r0
   1bf48:	cmp	r7, r6
   1bf4c:	beq	1c004 <main@@Base+0x5f60>
   1bf50:	ldrb	r0, [r7]
   1bf54:	cmp	r0, #58	; 0x3a
   1bf58:	bne	1c004 <main@@Base+0x5f60>
   1bf5c:	add	r1, r7, #1
   1bf60:	sub	r0, r6, r1
   1bf64:	cmp	r0, #2
   1bf68:	blt	1dfec <main@@Base+0x7f48>
   1bf6c:	ldrb	r0, [r1]
   1bf70:	cmp	r0, #32
   1bf74:	bls	1dfd4 <main@@Base+0x7f30>
   1bf78:	ldr	r6, [sp, #44]	; 0x2c
   1bf7c:	ldr	sl, [sp, #36]	; 0x24
   1bf80:	mov	r7, r1
   1bf84:	cmp	r9, r7
   1bf88:	bne	1e004 <main@@Base+0x7f60>
   1bf8c:	add	r4, r8, #16
   1bf90:	mov	r1, #8
   1bf94:	sub	r0, r6, r4
   1bf98:	cmp	r0, #8
   1bf9c:	movcc	r1, r0
   1bfa0:	sub	r1, r1, #1
   1bfa4:	cmp	r1, #7
   1bfa8:	bhi	2057c <main@@Base+0xa4d8>
   1bfac:	ldrb	r1, [r4]
   1bfb0:	cmp	r1, #97	; 0x61
   1bfb4:	bne	2057c <main@@Base+0xa4d8>
   1bfb8:	cmp	r0, #2
   1bfbc:	blt	2057c <main@@Base+0xa4d8>
   1bfc0:	ldr	r2, [sp, #32]
   1bfc4:	mov	r1, r8
   1bfc8:	ldrb	r0, [r1, #17]!
   1bfcc:	ldr	r2, [r2]
   1bfd0:	cmp	r2, #0
   1bfd4:	beq	1c7a8 <main@@Base+0x6704>
   1bfd8:	cmp	r0, #33	; 0x21
   1bfdc:	bcc	1bfe8 <main@@Base+0x5f44>
   1bfe0:	cmp	r0, #58	; 0x3a
   1bfe4:	bne	2057c <main@@Base+0xa4d8>
   1bfe8:	ldr	r0, [sp, #32]
   1bfec:	mov	r2, #0
   1bff0:	str	r2, [r0]
   1bff4:	sub	r0, r6, r1
   1bff8:	cmp	r0, #2
   1bffc:	bge	1c7c0 <main@@Base+0x671c>
   1c000:	b	1e590 <main@@Base+0x84ec>
   1c004:	mov	r0, sl
   1c008:	mov	r1, r7
   1c00c:	mov	r2, r6
   1c010:	mov	r3, #4
   1c014:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   1c018:	b	1dff8 <main@@Base+0x7f54>
   1c01c:	mov	r0, sl
   1c020:	mov	r1, r4
   1c024:	mov	r2, r6
   1c028:	mov	r3, #9
   1c02c:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   1c030:	b	1a564 <main@@Base+0x44c0>
   1c034:	cmp	r0, #34	; 0x22
   1c038:	bne	2057c <main@@Base+0xa4d8>
   1c03c:	add	r1, r8, #18
   1c040:	sub	r0, r6, r1
   1c044:	cmp	r0, #2
   1c048:	blt	1dd20 <main@@Base+0x7c7c>
   1c04c:	ldrb	r0, [r1]
   1c050:	cmp	r0, #32
   1c054:	bls	1dd0c <main@@Base+0x7c68>
   1c058:	mov	r7, r1
   1c05c:	cmp	r7, r6
   1c060:	bne	1dd38 <main@@Base+0x7c94>
   1c064:	b	1dd78 <main@@Base+0x7cd4>
   1c068:	bne	1c078 <main@@Base+0x5fd4>
   1c06c:	ldrb	r0, [r7, #2]!
   1c070:	cmp	r0, #32
   1c074:	bhi	1c088 <main@@Base+0x5fe4>
   1c078:	mov	r0, sl
   1c07c:	mov	r2, r6
   1c080:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   1c084:	mov	r7, r0
   1c088:	cmp	r9, r7
   1c08c:	beq	19790 <main@@Base+0x36ec>
   1c090:	mov	r2, r6
   1c094:	mov	r6, #0
   1c098:	cmp	r7, r2
   1c09c:	str	r6, [fp, #-52]	; 0xffffffcc
   1c0a0:	str	r6, [fp, #-56]	; 0xffffffc8
   1c0a4:	str	r6, [fp, #-60]	; 0xffffffc4
   1c0a8:	str	r6, [sp, #56]	; 0x38
   1c0ac:	beq	1c110 <main@@Base+0x606c>
   1c0b0:	sub	r0, fp, #56	; 0x38
   1c0b4:	mov	r1, r7
   1c0b8:	add	r3, sp, #56	; 0x38
   1c0bc:	mov	r8, r2
   1c0c0:	str	r0, [sp]
   1c0c4:	mov	r0, sl
   1c0c8:	bl	38fa8 <flatcc_json_parser_integer@@Base>
   1c0cc:	ldr	r5, [sp, #40]	; 0x28
   1c0d0:	cmp	r0, r7
   1c0d4:	beq	1c128 <main@@Base+0x6084>
   1c0d8:	ldr	r2, [sp, #56]	; 0x38
   1c0dc:	mov	r4, r0
   1c0e0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1c0e4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1c0e8:	cmp	r2, #0
   1c0ec:	beq	1c138 <main@@Base+0x6094>
   1c0f0:	subs	r2, r0, #-2147483647	; 0x80000001
   1c0f4:	sbcs	r1, r1, #0
   1c0f8:	bcc	1c168 <main@@Base+0x60c4>
   1c0fc:	mov	r0, sl
   1c100:	mov	r1, r4
   1c104:	mov	r2, r8
   1c108:	mov	r3, #8
   1c10c:	b	1c154 <main@@Base+0x60b0>
   1c110:	ldr	r5, [sp, #40]	; 0x28
   1c114:	mov	r8, r2
   1c118:	mov	r4, r2
   1c11c:	cmp	r7, r4
   1c120:	bne	1cac4 <main@@Base+0x6a20>
   1c124:	b	1ca84 <main@@Base+0x69e0>
   1c128:	mov	r4, r7
   1c12c:	cmp	r7, r4
   1c130:	bne	1cac4 <main@@Base+0x6a20>
   1c134:	b	1ca84 <main@@Base+0x69e0>
   1c138:	subs	r2, r0, #-2147483648	; 0x80000000
   1c13c:	sbcs	r1, r1, #0
   1c140:	bcc	1ca74 <main@@Base+0x69d0>
   1c144:	mov	r0, sl
   1c148:	mov	r1, r4
   1c14c:	mov	r2, r8
   1c150:	mov	r3, #7
   1c154:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   1c158:	mov	r4, r0
   1c15c:	cmp	r7, r4
   1c160:	bne	1cac4 <main@@Base+0x6a20>
   1c164:	b	1ca84 <main@@Base+0x69e0>
   1c168:	rsb	r6, r0, #0
   1c16c:	str	r6, [fp, #-60]	; 0xffffffc4
   1c170:	cmp	r7, r4
   1c174:	bne	1cac4 <main@@Base+0x6a20>
   1c178:	b	1ca84 <main@@Base+0x69e0>
   1c17c:	bne	1c190 <main@@Base+0x60ec>
   1c180:	mov	r4, r1
   1c184:	ldrb	r0, [r4, #1]!
   1c188:	cmp	r0, #32
   1c18c:	bhi	1c1a0 <main@@Base+0x60fc>
   1c190:	mov	r0, sl
   1c194:	mov	r2, r6
   1c198:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   1c19c:	mov	r4, r0
   1c1a0:	cmp	r4, r6
   1c1a4:	beq	1c1e8 <main@@Base+0x6144>
   1c1a8:	ldrb	r0, [r4]
   1c1ac:	cmp	r0, #58	; 0x3a
   1c1b0:	bne	1c1e8 <main@@Base+0x6144>
   1c1b4:	add	r1, r4, #1
   1c1b8:	sub	r0, r6, r1
   1c1bc:	cmp	r0, #2
   1c1c0:	blt	1e188 <main@@Base+0x80e4>
   1c1c4:	ldrb	r0, [r1]
   1c1c8:	cmp	r0, #32
   1c1cc:	bls	1e170 <main@@Base+0x80cc>
   1c1d0:	ldr	r6, [sp, #44]	; 0x2c
   1c1d4:	ldr	sl, [sp, #36]	; 0x24
   1c1d8:	mov	r4, r1
   1c1dc:	cmp	r7, r4
   1c1e0:	bne	1e1a0 <main@@Base+0x80fc>
   1c1e4:	b	1fad0 <main@@Base+0x9a2c>
   1c1e8:	mov	r0, sl
   1c1ec:	mov	r1, r4
   1c1f0:	mov	r2, r6
   1c1f4:	mov	r3, #4
   1c1f8:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   1c1fc:	b	1e194 <main@@Base+0x80f0>
   1c200:	bne	1c214 <main@@Base+0x6170>
   1c204:	mov	r4, r1
   1c208:	ldrb	r0, [r4, #1]!
   1c20c:	cmp	r0, #32
   1c210:	bhi	1c224 <main@@Base+0x6180>
   1c214:	mov	r0, sl
   1c218:	mov	r2, r6
   1c21c:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   1c220:	mov	r4, r0
   1c224:	cmp	r4, r6
   1c228:	beq	1c26c <main@@Base+0x61c8>
   1c22c:	ldrb	r0, [r4]
   1c230:	cmp	r0, #58	; 0x3a
   1c234:	bne	1c26c <main@@Base+0x61c8>
   1c238:	add	r1, r4, #1
   1c23c:	sub	r0, r6, r1
   1c240:	cmp	r0, #2
   1c244:	blt	1e258 <main@@Base+0x81b4>
   1c248:	ldrb	r0, [r1]
   1c24c:	cmp	r0, #32
   1c250:	bls	1e240 <main@@Base+0x819c>
   1c254:	ldr	r6, [sp, #44]	; 0x2c
   1c258:	ldr	sl, [sp, #36]	; 0x24
   1c25c:	mov	r4, r1
   1c260:	cmp	r7, r4
   1c264:	bne	1e270 <main@@Base+0x81cc>
   1c268:	b	1fad0 <main@@Base+0x9a2c>
   1c26c:	mov	r0, sl
   1c270:	mov	r1, r4
   1c274:	mov	r2, r6
   1c278:	mov	r3, #4
   1c27c:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   1c280:	b	1e264 <main@@Base+0x81c0>
   1c284:	bne	1c298 <main@@Base+0x61f4>
   1c288:	mov	r4, r1
   1c28c:	ldrb	r0, [r4, #1]!
   1c290:	cmp	r0, #32
   1c294:	bhi	1c2a8 <main@@Base+0x6204>
   1c298:	mov	r0, sl
   1c29c:	mov	r2, r6
   1c2a0:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   1c2a4:	mov	r4, r0
   1c2a8:	cmp	r4, r6
   1c2ac:	beq	1c2f0 <main@@Base+0x624c>
   1c2b0:	ldrb	r0, [r4]
   1c2b4:	cmp	r0, #58	; 0x3a
   1c2b8:	bne	1c2f0 <main@@Base+0x624c>
   1c2bc:	add	r1, r4, #1
   1c2c0:	sub	r0, r6, r1
   1c2c4:	cmp	r0, #2
   1c2c8:	blt	1e314 <main@@Base+0x8270>
   1c2cc:	ldrb	r0, [r1]
   1c2d0:	cmp	r0, #32
   1c2d4:	bls	1e2fc <main@@Base+0x8258>
   1c2d8:	ldr	r6, [sp, #44]	; 0x2c
   1c2dc:	ldr	sl, [sp, #36]	; 0x24
   1c2e0:	mov	r4, r1
   1c2e4:	cmp	r7, r4
   1c2e8:	bne	1e32c <main@@Base+0x8288>
   1c2ec:	b	1fad0 <main@@Base+0x9a2c>
   1c2f0:	mov	r0, sl
   1c2f4:	mov	r1, r4
   1c2f8:	mov	r2, r6
   1c2fc:	mov	r3, #4
   1c300:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   1c304:	b	1e320 <main@@Base+0x827c>
   1c308:	bne	1c318 <main@@Base+0x6274>
   1c30c:	ldrb	r0, [r4, #2]!
   1c310:	cmp	r0, #32
   1c314:	bhi	1c328 <main@@Base+0x6284>
   1c318:	mov	r0, sl
   1c31c:	mov	r2, r6
   1c320:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   1c324:	mov	r4, r0
   1c328:	cmp	r4, r6
   1c32c:	beq	1c35c <main@@Base+0x62b8>
   1c330:	ldrb	r0, [r4]
   1c334:	cmp	r0, #93	; 0x5d
   1c338:	bne	1c358 <main@@Base+0x62b4>
   1c33c:	add	r1, r4, #1
   1c340:	mov	r6, r5
   1c344:	sub	r0, r5, r1
   1c348:	cmp	r0, #2
   1c34c:	ldr	r5, [sp, #40]	; 0x28
   1c350:	blt	1d138 <main@@Base+0x7094>
   1c354:	b	1d078 <main@@Base+0x6fd4>
   1c358:	mov	r6, r4
   1c35c:	mov	r0, #0
   1c360:	mov	r1, #1
   1c364:	strb	r0, [fp, #-60]	; 0xffffffc4
   1c368:	ldr	r0, [sl]
   1c36c:	bl	30e98 <flatcc_builder_extend_vector@@Base>
   1c370:	cmp	r0, #0
   1c374:	beq	218d4 <main@@Base+0xb830>
   1c378:	mov	r4, r6
   1c37c:	mov	r7, r0
   1c380:	mov	r6, r5
   1c384:	sub	r6, r6, r4
   1c388:	cmp	r6, #4
   1c38c:	blt	1c3d0 <main@@Base+0x632c>
   1c390:	movw	r1, #48850	; 0xbed2
   1c394:	mov	r0, r4
   1c398:	mov	r2, #4
   1c39c:	movt	r1, #4
   1c3a0:	bl	14ebc <bcmp@plt>
   1c3a4:	cmp	r0, #0
   1c3a8:	beq	1c434 <main@@Base+0x6390>
   1c3ac:	cmp	r6, #5
   1c3b0:	blt	1c3d0 <main@@Base+0x632c>
   1c3b4:	movw	r1, #48855	; 0xbed7
   1c3b8:	mov	r0, r4
   1c3bc:	mov	r2, #5
   1c3c0:	movt	r1, #4
   1c3c4:	bl	14ebc <bcmp@plt>
   1c3c8:	cmp	r0, #0
   1c3cc:	beq	1c5c0 <main@@Base+0x651c>
   1c3d0:	mov	r6, #0
   1c3d4:	mov	r2, r5
   1c3d8:	cmp	r4, r5
   1c3dc:	str	r6, [fp, #-52]	; 0xffffffcc
   1c3e0:	str	r6, [fp, #-56]	; 0xffffffc8
   1c3e4:	str	r6, [sp, #56]	; 0x38
   1c3e8:	beq	1c42c <main@@Base+0x6388>
   1c3ec:	sub	r0, fp, #56	; 0x38
   1c3f0:	mov	r1, r4
   1c3f4:	add	r3, sp, #56	; 0x38
   1c3f8:	str	r0, [sp]
   1c3fc:	mov	r0, sl
   1c400:	bl	38fa8 <flatcc_json_parser_integer@@Base>
   1c404:	cmp	r0, r4
   1c408:	beq	1c450 <main@@Base+0x63ac>
   1c40c:	mov	r1, r0
   1c410:	ldr	r0, [sp, #56]	; 0x38
   1c414:	cmp	r0, #0
   1c418:	beq	1c458 <main@@Base+0x63b4>
   1c41c:	mov	r0, sl
   1c420:	mov	r2, r5
   1c424:	mov	r3, #8
   1c428:	b	1c478 <main@@Base+0x63d4>
   1c42c:	mov	r1, r2
   1c430:	b	1c480 <main@@Base+0x63dc>
   1c434:	mov	r0, #1
   1c438:	add	r1, r4, #4
   1c43c:	strb	r0, [fp, #-60]	; 0xffffffc4
   1c440:	cmp	r4, r1
   1c444:	mov	r6, r5
   1c448:	bne	1c4d8 <main@@Base+0x6434>
   1c44c:	b	1c49c <main@@Base+0x63f8>
   1c450:	mov	r1, r4
   1c454:	b	1c480 <main@@Base+0x63dc>
   1c458:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1c45c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1c460:	subs	r3, r0, #256	; 0x100
   1c464:	sbcs	r2, r2, #0
   1c468:	bcc	1c5dc <main@@Base+0x6538>
   1c46c:	mov	r0, sl
   1c470:	mov	r2, r5
   1c474:	mov	r3, #7
   1c478:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   1c47c:	mov	r1, r0
   1c480:	uxtb	r0, r6
   1c484:	cmp	r0, #0
   1c488:	movwne	r0, #1
   1c48c:	strb	r0, [fp, #-60]	; 0xffffffc4
   1c490:	cmp	r4, r1
   1c494:	mov	r6, r5
   1c498:	bne	1c4d8 <main@@Base+0x6434>
   1c49c:	sub	r0, fp, #60	; 0x3c
   1c4a0:	mov	r1, r4
   1c4a4:	mov	r2, r6
   1c4a8:	str	r0, [sp]
   1c4ac:	movw	r0, #148	; 0x94
   1c4b0:	movt	r0, #6
   1c4b4:	add	r3, r0, #48	; 0x30
   1c4b8:	mov	r0, sl
   1c4bc:	bl	25c2c <main@@Base+0xfb88>
   1c4c0:	mov	r1, r0
   1c4c4:	cmp	r0, r4
   1c4c8:	beq	218cc <main@@Base+0xb828>
   1c4cc:	cmp	r1, r6
   1c4d0:	beq	218cc <main@@Base+0xb828>
   1c4d4:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   1c4d8:	strb	r0, [r7]
   1c4dc:	sub	r0, r6, r1
   1c4e0:	cmp	r0, #2
   1c4e4:	blt	1c518 <main@@Base+0x6474>
   1c4e8:	ldrb	r0, [r1]
   1c4ec:	cmp	r0, #32
   1c4f0:	bls	1c504 <main@@Base+0x6460>
   1c4f4:	mov	r4, r1
   1c4f8:	cmp	r4, r6
   1c4fc:	bne	1c530 <main@@Base+0x648c>
   1c500:	b	1d048 <main@@Base+0x6fa4>
   1c504:	bne	1c518 <main@@Base+0x6474>
   1c508:	mov	r4, r1
   1c50c:	ldrb	r0, [r4, #1]!
   1c510:	cmp	r0, #32
   1c514:	bhi	1c528 <main@@Base+0x6484>
   1c518:	mov	r0, sl
   1c51c:	mov	r2, r6
   1c520:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   1c524:	mov	r4, r0
   1c528:	cmp	r4, r6
   1c52c:	beq	1d048 <main@@Base+0x6fa4>
   1c530:	ldrb	r0, [r4]
   1c534:	cmp	r0, #44	; 0x2c
   1c538:	bne	1d054 <main@@Base+0x6fb0>
   1c53c:	add	r1, r4, #1
   1c540:	sub	r0, r6, r1
   1c544:	cmp	r0, #2
   1c548:	blt	1c578 <main@@Base+0x64d4>
   1c54c:	ldrb	r0, [r1]
   1c550:	cmp	r0, #32
   1c554:	bls	1c568 <main@@Base+0x64c4>
   1c558:	mov	r4, r1
   1c55c:	cmp	r4, r6
   1c560:	bne	1c590 <main@@Base+0x64ec>
   1c564:	b	1d148 <main@@Base+0x70a4>
   1c568:	bne	1c578 <main@@Base+0x64d4>
   1c56c:	ldrb	r0, [r4, #2]!
   1c570:	cmp	r0, #32
   1c574:	bhi	1c588 <main@@Base+0x64e4>
   1c578:	mov	r0, sl
   1c57c:	mov	r2, r6
   1c580:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   1c584:	mov	r4, r0
   1c588:	cmp	r4, r6
   1c58c:	beq	1d148 <main@@Base+0x70a4>
   1c590:	ldrb	r0, [r4]
   1c594:	cmp	r0, #93	; 0x5d
   1c598:	beq	1d064 <main@@Base+0x6fc0>
   1c59c:	mov	r0, #0
   1c5a0:	mov	r1, #1
   1c5a4:	strb	r0, [fp, #-60]	; 0xffffffc4
   1c5a8:	ldr	r0, [sl]
   1c5ac:	bl	30e98 <flatcc_builder_extend_vector@@Base>
   1c5b0:	mov	r7, r0
   1c5b4:	cmp	r0, #0
   1c5b8:	bne	1c384 <main@@Base+0x62e0>
   1c5bc:	b	16fd8 <main@@Base+0xf34>
   1c5c0:	mov	r0, #0
   1c5c4:	add	r1, r4, #5
   1c5c8:	strb	r0, [fp, #-60]	; 0xffffffc4
   1c5cc:	cmp	r4, r1
   1c5d0:	mov	r6, r5
   1c5d4:	bne	1c4d8 <main@@Base+0x6434>
   1c5d8:	b	1c49c <main@@Base+0x63f8>
   1c5dc:	mov	r6, r0
   1c5e0:	b	1c480 <main@@Base+0x63dc>
   1c5e4:	bne	1c5f8 <main@@Base+0x6554>
   1c5e8:	mov	r4, r1
   1c5ec:	ldrb	r0, [r4, #1]!
   1c5f0:	cmp	r0, #32
   1c5f4:	bhi	1c608 <main@@Base+0x6564>
   1c5f8:	mov	r0, sl
   1c5fc:	mov	r2, r6
   1c600:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   1c604:	mov	r4, r0
   1c608:	cmp	r4, r6
   1c60c:	beq	1c650 <main@@Base+0x65ac>
   1c610:	ldrb	r0, [r4]
   1c614:	cmp	r0, #58	; 0x3a
   1c618:	bne	1c650 <main@@Base+0x65ac>
   1c61c:	add	r1, r4, #1
   1c620:	sub	r0, r6, r1
   1c624:	cmp	r0, #2
   1c628:	blt	1e41c <main@@Base+0x8378>
   1c62c:	ldrb	r0, [r1]
   1c630:	cmp	r0, #32
   1c634:	bls	1e404 <main@@Base+0x8360>
   1c638:	ldr	r6, [sp, #44]	; 0x2c
   1c63c:	ldr	sl, [sp, #36]	; 0x24
   1c640:	mov	r4, r1
   1c644:	cmp	r9, r4
   1c648:	bne	1e434 <main@@Base+0x8390>
   1c64c:	b	1e494 <main@@Base+0x83f0>
   1c650:	mov	r0, sl
   1c654:	mov	r1, r4
   1c658:	mov	r2, r6
   1c65c:	mov	r3, #4
   1c660:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   1c664:	b	1e428 <main@@Base+0x8384>
   1c668:	bne	1c67c <main@@Base+0x65d8>
   1c66c:	mov	r4, r1
   1c670:	ldrb	r0, [r4, #1]!
   1c674:	cmp	r0, #32
   1c678:	bhi	1c68c <main@@Base+0x65e8>
   1c67c:	mov	r0, sl
   1c680:	mov	r2, r6
   1c684:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   1c688:	mov	r4, r0
   1c68c:	cmp	r4, r6
   1c690:	beq	1c6d4 <main@@Base+0x6630>
   1c694:	ldrb	r0, [r4]
   1c698:	cmp	r0, #58	; 0x3a
   1c69c:	bne	1c6d4 <main@@Base+0x6630>
   1c6a0:	add	r1, r4, #1
   1c6a4:	sub	r0, r6, r1
   1c6a8:	cmp	r0, #2
   1c6ac:	blt	1e620 <main@@Base+0x857c>
   1c6b0:	ldrb	r0, [r1]
   1c6b4:	cmp	r0, #32
   1c6b8:	bls	1e608 <main@@Base+0x8564>
   1c6bc:	ldr	r6, [sp, #44]	; 0x2c
   1c6c0:	ldr	sl, [sp, #36]	; 0x24
   1c6c4:	mov	r4, r1
   1c6c8:	cmp	r7, r4
   1c6cc:	bne	1e638 <main@@Base+0x8594>
   1c6d0:	b	1fad0 <main@@Base+0x9a2c>
   1c6d4:	mov	r0, sl
   1c6d8:	mov	r1, r4
   1c6dc:	mov	r2, r6
   1c6e0:	mov	r3, #4
   1c6e4:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   1c6e8:	b	1e62c <main@@Base+0x8588>
   1c6ec:	bne	1c700 <main@@Base+0x665c>
   1c6f0:	mov	r7, r1
   1c6f4:	ldrb	r0, [r7, #1]!
   1c6f8:	cmp	r0, #32
   1c6fc:	bhi	1c710 <main@@Base+0x666c>
   1c700:	mov	r0, sl
   1c704:	mov	r2, r6
   1c708:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   1c70c:	mov	r7, r0
   1c710:	cmp	r7, r6
   1c714:	beq	1c758 <main@@Base+0x66b4>
   1c718:	ldrb	r0, [r7]
   1c71c:	cmp	r0, #58	; 0x3a
   1c720:	bne	1c758 <main@@Base+0x66b4>
   1c724:	add	r1, r7, #1
   1c728:	sub	r0, r6, r1
   1c72c:	cmp	r0, #2
   1c730:	blt	1e734 <main@@Base+0x8690>
   1c734:	ldrb	r0, [r1]
   1c738:	cmp	r0, #32
   1c73c:	bls	1e71c <main@@Base+0x8678>
   1c740:	ldr	r6, [sp, #44]	; 0x2c
   1c744:	ldr	sl, [sp, #36]	; 0x24
   1c748:	mov	r7, r1
   1c74c:	cmp	r4, r7
   1c750:	bne	1e74c <main@@Base+0x86a8>
   1c754:	b	2057c <main@@Base+0xa4d8>
   1c758:	mov	r0, sl
   1c75c:	mov	r1, r7
   1c760:	mov	r2, r6
   1c764:	mov	r3, #4
   1c768:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   1c76c:	b	1e740 <main@@Base+0x869c>
   1c770:	cmp	r0, #34	; 0x22
   1c774:	bne	2057c <main@@Base+0xa4d8>
   1c778:	add	r1, r8, #18
   1c77c:	sub	r0, r6, r1
   1c780:	cmp	r0, #2
   1c784:	blt	1e500 <main@@Base+0x845c>
   1c788:	ldrb	r0, [r1]
   1c78c:	cmp	r0, #32
   1c790:	bls	1e4e8 <main@@Base+0x8444>
   1c794:	ldr	r6, [sp, #44]	; 0x2c
   1c798:	mov	r7, r1
   1c79c:	cmp	r7, r6
   1c7a0:	bne	1e518 <main@@Base+0x8474>
   1c7a4:	b	1e55c <main@@Base+0x84b8>
   1c7a8:	cmp	r0, #34	; 0x22
   1c7ac:	bne	2057c <main@@Base+0xa4d8>
   1c7b0:	add	r1, r8, #18
   1c7b4:	sub	r0, r6, r1
   1c7b8:	cmp	r0, #2
   1c7bc:	blt	1e590 <main@@Base+0x84ec>
   1c7c0:	ldrb	r0, [r1]
   1c7c4:	cmp	r0, #32
   1c7c8:	bls	1e578 <main@@Base+0x84d4>
   1c7cc:	ldr	r6, [sp, #44]	; 0x2c
   1c7d0:	mov	r7, r1
   1c7d4:	cmp	r7, r6
   1c7d8:	bne	1e5a8 <main@@Base+0x8504>
   1c7dc:	b	1e5ec <main@@Base+0x8548>
   1c7e0:	bne	1c7f0 <main@@Base+0x674c>
   1c7e4:	ldrb	r0, [r4, #2]!
   1c7e8:	cmp	r0, #32
   1c7ec:	bhi	1c800 <main@@Base+0x675c>
   1c7f0:	mov	r0, sl
   1c7f4:	mov	r2, r6
   1c7f8:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   1c7fc:	mov	r4, r0
   1c800:	cmp	r7, r4
   1c804:	beq	1fad0 <main@@Base+0x9a2c>
   1c808:	mov	r0, #0
   1c80c:	mov	r1, #3
   1c810:	str	r0, [sp, #52]	; 0x34
   1c814:	ldr	r0, [sl]
   1c818:	bl	31fa8 <flatcc_builder_start_table@@Base>
   1c81c:	cmp	r0, #0
   1c820:	bne	1c890 <main@@Base+0x67ec>
   1c824:	cmp	r4, r6
   1c828:	beq	1c86c <main@@Base+0x67c8>
   1c82c:	ldrb	r0, [r4]
   1c830:	cmp	r0, #123	; 0x7b
   1c834:	bne	1c86c <main@@Base+0x67c8>
   1c838:	add	r1, r4, #1
   1c83c:	sub	r0, r6, r1
   1c840:	cmp	r0, #2
   1c844:	blt	1ef98 <main@@Base+0x8ef4>
   1c848:	ldrb	r0, [r1]
   1c84c:	cmp	r0, #32
   1c850:	bls	1ef80 <main@@Base+0x8edc>
   1c854:	ldr	r6, [sp, #44]	; 0x2c
   1c858:	mov	r4, r1
   1c85c:	cmp	r4, r6
   1c860:	mov	r2, r6
   1c864:	bne	1efb4 <main@@Base+0x8f10>
   1c868:	b	1f004 <main@@Base+0x8f60>
   1c86c:	mov	r0, sl
   1c870:	mov	r1, r4
   1c874:	mov	r2, r6
   1c878:	mov	r3, #21
   1c87c:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   1c880:	mov	r4, r0
   1c884:	ldr	r0, [sl, #24]
   1c888:	cmp	r0, #0
   1c88c:	beq	1ff9c <main@@Base+0x9ef8>
   1c890:	mov	r0, sl
   1c894:	mov	r1, r4
   1c898:	mov	r2, r6
   1c89c:	mov	r3, #33	; 0x21
   1c8a0:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   1c8a4:	mov	r4, r0
   1c8a8:	ldr	r0, [sp, #52]	; 0x34
   1c8ac:	cmp	r0, #0
   1c8b0:	beq	16fd8 <main@@Base+0xf34>
   1c8b4:	ldr	r0, [sl]
   1c8b8:	mov	r1, #35	; 0x23
   1c8bc:	bl	3316c <flatcc_builder_table_add_offset@@Base>
   1c8c0:	cmp	r0, #0
   1c8c4:	bne	19b50 <main@@Base+0x3aac>
   1c8c8:	b	16fd8 <main@@Base+0xf34>
   1c8cc:	mov	r0, sl
   1c8d0:	mov	r1, r2
   1c8d4:	mov	r2, r6
   1c8d8:	mov	r3, #10
   1c8dc:	b	1ae20 <main@@Base+0x4d7c>
   1c8e0:	bne	1c8f0 <main@@Base+0x684c>
   1c8e4:	ldrb	r0, [r4, #2]!
   1c8e8:	cmp	r0, #32
   1c8ec:	bhi	1c900 <main@@Base+0x685c>
   1c8f0:	mov	r0, sl
   1c8f4:	mov	r2, r6
   1c8f8:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   1c8fc:	mov	r4, r0
   1c900:	cmp	r7, r4
   1c904:	beq	1fad0 <main@@Base+0x9a2c>
   1c908:	ldr	r0, [sl]
   1c90c:	bl	31a78 <flatcc_builder_start_offset_vector@@Base>
   1c910:	cmp	r0, #0
   1c914:	bne	16fd8 <main@@Base+0xf34>
   1c918:	cmp	r4, r6
   1c91c:	beq	1c95c <main@@Base+0x68b8>
   1c920:	ldrb	r0, [r4]
   1c924:	cmp	r0, #91	; 0x5b
   1c928:	bne	1c95c <main@@Base+0x68b8>
   1c92c:	add	r1, r4, #1
   1c930:	sub	r0, r6, r1
   1c934:	cmp	r0, #2
   1c938:	blt	1d164 <main@@Base+0x70c0>
   1c93c:	ldrb	r0, [r1]
   1c940:	cmp	r0, #32
   1c944:	bls	1d154 <main@@Base+0x70b0>
   1c948:	mov	r4, r1
   1c94c:	cmp	r4, r6
   1c950:	mov	r2, r6
   1c954:	bne	1d180 <main@@Base+0x70dc>
   1c958:	b	1d1c8 <main@@Base+0x7124>
   1c95c:	mov	r0, sl
   1c960:	mov	r1, r4
   1c964:	mov	r2, r6
   1c968:	mov	r3, #22
   1c96c:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   1c970:	mov	r4, r0
   1c974:	ldr	r0, [sl]
   1c978:	bl	31d30 <flatcc_builder_end_offset_vector@@Base>
   1c97c:	ldr	r5, [sp, #40]	; 0x28
   1c980:	cmp	r0, #0
   1c984:	str	r0, [sp, #52]	; 0x34
   1c988:	beq	16fd8 <main@@Base+0xf34>
   1c98c:	ldr	r0, [sl]
   1c990:	mov	r1, #28
   1c994:	bl	3316c <flatcc_builder_table_add_offset@@Base>
   1c998:	cmp	r0, #0
   1c99c:	bne	19c2c <main@@Base+0x3b88>
   1c9a0:	b	16fd8 <main@@Base+0xf34>
   1c9a4:	bne	1c9b4 <main@@Base+0x6910>
   1c9a8:	ldrb	r0, [r7, #2]!
   1c9ac:	cmp	r0, #32
   1c9b0:	bhi	1c9c4 <main@@Base+0x6920>
   1c9b4:	mov	r0, sl
   1c9b8:	mov	r2, r6
   1c9bc:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   1c9c0:	mov	r7, r0
   1c9c4:	cmp	r9, r7
   1c9c8:	beq	1e494 <main@@Base+0x83f0>
   1c9cc:	ldr	r0, [sl]
   1c9d0:	mov	r1, #8
   1c9d4:	mov	r2, #4
   1c9d8:	mvn	r3, #-536870912	; 0xe0000000
   1c9dc:	bl	319ec <flatcc_builder_start_vector@@Base>
   1c9e0:	cmp	r0, #0
   1c9e4:	bne	21888 <main@@Base+0xb7e4>
   1c9e8:	cmp	r7, r6
   1c9ec:	beq	1ca2c <main@@Base+0x6988>
   1c9f0:	ldrb	r0, [r7]
   1c9f4:	cmp	r0, #91	; 0x5b
   1c9f8:	bne	1ca2c <main@@Base+0x6988>
   1c9fc:	add	r1, r7, #1
   1ca00:	sub	r0, r6, r1
   1ca04:	cmp	r0, #2
   1ca08:	blt	1d2f0 <main@@Base+0x724c>
   1ca0c:	ldrb	r0, [r1]
   1ca10:	cmp	r0, #32
   1ca14:	bls	1d2e0 <main@@Base+0x723c>
   1ca18:	mov	r7, r1
   1ca1c:	cmp	r7, r6
   1ca20:	mov	r4, r6
   1ca24:	bne	1d30c <main@@Base+0x7268>
   1ca28:	b	1d354 <main@@Base+0x72b0>
   1ca2c:	mov	r0, sl
   1ca30:	mov	r1, r7
   1ca34:	mov	r2, r6
   1ca38:	mov	r3, #22
   1ca3c:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   1ca40:	mov	r7, r0
   1ca44:	ldr	r0, [sl]
   1ca48:	bl	32c64 <flatcc_builder_end_vector@@Base>
   1ca4c:	ldr	r5, [sp, #40]	; 0x28
   1ca50:	cmp	r0, #0
   1ca54:	str	r0, [sp, #52]	; 0x34
   1ca58:	beq	21888 <main@@Base+0xb7e4>
   1ca5c:	ldr	r0, [sl]
   1ca60:	mov	r1, #29
   1ca64:	bl	3316c <flatcc_builder_table_add_offset@@Base>
   1ca68:	cmp	r0, #0
   1ca6c:	bne	1a590 <main@@Base+0x44ec>
   1ca70:	b	21888 <main@@Base+0xb7e4>
   1ca74:	mov	r6, r0
   1ca78:	str	r6, [fp, #-60]	; 0xffffffc4
   1ca7c:	cmp	r7, r4
   1ca80:	bne	1cac4 <main@@Base+0x6a20>
   1ca84:	sub	r0, fp, #60	; 0x3c
   1ca88:	mov	r1, r7
   1ca8c:	mov	r2, r8
   1ca90:	mov	r4, r8
   1ca94:	str	r0, [sp]
   1ca98:	movw	r0, #148	; 0x94
   1ca9c:	movt	r0, #6
   1caa0:	add	r3, r0, #108	; 0x6c
   1caa4:	mov	r0, sl
   1caa8:	bl	2600c <main@@Base+0xff68>
   1caac:	cmp	r0, r7
   1cab0:	cmpne	r0, r4
   1cab4:	beq	218bc <main@@Base+0xb818>
   1cab8:	ldr	r6, [fp, #-60]	; 0xffffffc4
   1cabc:	mov	r8, r4
   1cac0:	mov	r4, r0
   1cac4:	cmp	r6, #0
   1cac8:	bne	1cad8 <main@@Base+0x6a34>
   1cacc:	ldrb	r0, [sl, #8]
   1cad0:	tst	r0, #2
   1cad4:	beq	1cc84 <main@@Base+0x6be0>
   1cad8:	ldr	r0, [sl]
   1cadc:	mov	r1, #16
   1cae0:	b	1dfb8 <main@@Base+0x7f14>
   1cae4:	bne	1caf4 <main@@Base+0x6a50>
   1cae8:	ldrb	r0, [r7, #2]!
   1caec:	cmp	r0, #32
   1caf0:	bhi	1cb04 <main@@Base+0x6a60>
   1caf4:	mov	r0, sl
   1caf8:	mov	r2, r6
   1cafc:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   1cb00:	mov	r7, r0
   1cb04:	cmp	r8, r7
   1cb08:	beq	1a480 <main@@Base+0x43dc>
   1cb0c:	mov	r2, r6
   1cb10:	mov	r6, #0
   1cb14:	cmp	r7, r2
   1cb18:	str	r6, [fp, #-52]	; 0xffffffcc
   1cb1c:	str	r6, [fp, #-56]	; 0xffffffc8
   1cb20:	strh	r6, [fp, #-60]	; 0xffffffc4
   1cb24:	str	r6, [sp, #56]	; 0x38
   1cb28:	beq	1cb90 <main@@Base+0x6aec>
   1cb2c:	sub	r0, fp, #56	; 0x38
   1cb30:	mov	r1, r7
   1cb34:	add	r3, sp, #56	; 0x38
   1cb38:	mov	r8, r2
   1cb3c:	str	r0, [sp]
   1cb40:	mov	r0, sl
   1cb44:	bl	38fa8 <flatcc_json_parser_integer@@Base>
   1cb48:	ldr	r5, [sp, #40]	; 0x28
   1cb4c:	cmp	r0, r7
   1cb50:	beq	1cba8 <main@@Base+0x6b04>
   1cb54:	ldr	r2, [sp, #56]	; 0x38
   1cb58:	mov	r4, r0
   1cb5c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1cb60:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1cb64:	cmp	r2, #0
   1cb68:	beq	1cbb8 <main@@Base+0x6b14>
   1cb6c:	movw	r2, #32769	; 0x8001
   1cb70:	subs	r2, r0, r2
   1cb74:	sbcs	r1, r1, #0
   1cb78:	bcc	1cbe8 <main@@Base+0x6b44>
   1cb7c:	mov	r0, sl
   1cb80:	mov	r1, r4
   1cb84:	mov	r2, r8
   1cb88:	mov	r3, #8
   1cb8c:	b	1cbd4 <main@@Base+0x6b30>
   1cb90:	ldr	r5, [sp, #40]	; 0x28
   1cb94:	mov	r8, r2
   1cb98:	mov	r4, r2
   1cb9c:	cmp	r7, r4
   1cba0:	bne	1cc4c <main@@Base+0x6ba8>
   1cba4:	b	1cc0c <main@@Base+0x6b68>
   1cba8:	mov	r4, r7
   1cbac:	cmp	r7, r4
   1cbb0:	bne	1cc4c <main@@Base+0x6ba8>
   1cbb4:	b	1cc0c <main@@Base+0x6b68>
   1cbb8:	subs	r2, r0, #32768	; 0x8000
   1cbbc:	sbcs	r1, r1, #0
   1cbc0:	bcc	1cbfc <main@@Base+0x6b58>
   1cbc4:	mov	r0, sl
   1cbc8:	mov	r1, r4
   1cbcc:	mov	r2, r8
   1cbd0:	mov	r3, #7
   1cbd4:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   1cbd8:	mov	r4, r0
   1cbdc:	cmp	r7, r4
   1cbe0:	bne	1cc4c <main@@Base+0x6ba8>
   1cbe4:	b	1cc0c <main@@Base+0x6b68>
   1cbe8:	rsb	r6, r0, #0
   1cbec:	strh	r6, [fp, #-60]	; 0xffffffc4
   1cbf0:	cmp	r7, r4
   1cbf4:	bne	1cc4c <main@@Base+0x6ba8>
   1cbf8:	b	1cc0c <main@@Base+0x6b68>
   1cbfc:	mov	r6, r0
   1cc00:	strh	r6, [fp, #-60]	; 0xffffffc4
   1cc04:	cmp	r7, r4
   1cc08:	bne	1cc4c <main@@Base+0x6ba8>
   1cc0c:	sub	r0, fp, #60	; 0x3c
   1cc10:	mov	r1, r7
   1cc14:	mov	r2, r8
   1cc18:	mov	r6, r8
   1cc1c:	str	r0, [sp]
   1cc20:	movw	r0, #148	; 0x94
   1cc24:	movt	r0, #6
   1cc28:	add	r3, r0, #36	; 0x24
   1cc2c:	mov	r0, sl
   1cc30:	bl	23be0 <main@@Base+0xdb3c>
   1cc34:	mov	r4, r0
   1cc38:	cmp	r0, r7
   1cc3c:	cmpne	r4, r6
   1cc40:	beq	218c0 <main@@Base+0xb81c>
   1cc44:	mov	r8, r6
   1cc48:	ldrh	r6, [fp, #-60]	; 0xffffffc4
   1cc4c:	uxth	r0, r6
   1cc50:	cmp	r0, #150	; 0x96
   1cc54:	bne	1cc64 <main@@Base+0x6bc0>
   1cc58:	ldrb	r0, [sl, #8]
   1cc5c:	tst	r0, #2
   1cc60:	beq	1cc84 <main@@Base+0x6be0>
   1cc64:	ldr	r0, [sl]
   1cc68:	mov	r1, #1
   1cc6c:	mov	r2, #2
   1cc70:	mov	r3, #2
   1cc74:	bl	332fc <flatcc_builder_table_add@@Base>
   1cc78:	cmp	r0, #0
   1cc7c:	beq	218c0 <main@@Base+0xb81c>
   1cc80:	strh	r6, [r0]
   1cc84:	mov	r6, r8
   1cc88:	sub	r0, r6, r4
   1cc8c:	cmp	r0, #2
   1cc90:	bge	1a4a4 <main@@Base+0x4400>
   1cc94:	mov	r0, sl
   1cc98:	mov	r1, r4
   1cc9c:	mov	r2, r6
   1cca0:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   1cca4:	mov	r2, r0
   1cca8:	cmp	r2, r6
   1ccac:	bne	1a4bc <main@@Base+0x4418>
   1ccb0:	b	217f8 <main@@Base+0xb754>
   1ccb4:	bne	1ccc4 <main@@Base+0x6c20>
   1ccb8:	ldrb	r0, [r7, #2]!
   1ccbc:	cmp	r0, #32
   1ccc0:	bhi	1ccd4 <main@@Base+0x6c30>
   1ccc4:	mov	r0, sl
   1ccc8:	mov	r2, r6
   1cccc:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   1ccd0:	mov	r7, r0
   1ccd4:	cmp	r8, r7
   1ccd8:	beq	1a480 <main@@Base+0x43dc>
   1ccdc:	mov	r0, #0
   1cce0:	mov	r1, r7
   1cce4:	mov	r2, r6
   1cce8:	sub	r3, fp, #56	; 0x38
   1ccec:	str	r0, [fp, #-56]	; 0xffffffc8
   1ccf0:	mov	r0, sl
   1ccf4:	bl	38e58 <flatcc_json_parser_float@@Base>
   1ccf8:	ldr	r5, [sp, #40]	; 0x28
   1ccfc:	mov	r4, r0
   1cd00:	cmp	r7, r0
   1cd04:	bne	1cd3c <main@@Base+0x6c98>
   1cd08:	sub	r0, fp, #56	; 0x38
   1cd0c:	mov	r1, r7
   1cd10:	mov	r2, r6
   1cd14:	str	r0, [sp]
   1cd18:	movw	r0, #148	; 0x94
   1cd1c:	movt	r0, #6
   1cd20:	add	r3, r0, #84	; 0x54
   1cd24:	mov	r0, sl
   1cd28:	bl	25e3c <main@@Base+0xfd98>
   1cd2c:	mov	r4, r0
   1cd30:	cmp	r0, r7
   1cd34:	cmpne	r4, r6
   1cd38:	beq	16fd8 <main@@Base+0xf34>
   1cd3c:	vldr	s0, [fp, #-56]	; 0xffffffc8
   1cd40:	vcmp.f32	s0, s18
   1cd44:	vmrs	APSR_nzcv, fpscr
   1cd48:	bne	1cd58 <main@@Base+0x6cb4>
   1cd4c:	ldrb	r0, [sl, #8]
   1cd50:	tst	r0, #2
   1cd54:	beq	1a498 <main@@Base+0x43f4>
   1cd58:	ldr	r0, [sl]
   1cd5c:	mov	r1, #25
   1cd60:	b	19194 <main@@Base+0x30f0>
   1cd64:	bne	1cd74 <main@@Base+0x6cd0>
   1cd68:	ldrb	r0, [r7, #2]!
   1cd6c:	cmp	r0, #32
   1cd70:	bhi	1cd84 <main@@Base+0x6ce0>
   1cd74:	mov	r0, sl
   1cd78:	mov	r2, r6
   1cd7c:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   1cd80:	mov	r7, r0
   1cd84:	cmp	r9, r7
   1cd88:	beq	1a2d0 <main@@Base+0x422c>
   1cd8c:	mov	r2, r6
   1cd90:	mov	r6, #0
   1cd94:	cmp	r7, r2
   1cd98:	str	r6, [fp, #-52]	; 0xffffffcc
   1cd9c:	str	r6, [fp, #-56]	; 0xffffffc8
   1cda0:	str	r6, [sp, #60]	; 0x3c
   1cda4:	str	r6, [sp, #56]	; 0x38
   1cda8:	str	r6, [fp, #-60]	; 0xffffffc4
   1cdac:	beq	1ce04 <main@@Base+0x6d60>
   1cdb0:	sub	r0, fp, #56	; 0x38
   1cdb4:	mov	r1, r7
   1cdb8:	sub	r3, fp, #60	; 0x3c
   1cdbc:	str	r0, [sp]
   1cdc0:	mov	r0, sl
   1cdc4:	bl	38fa8 <flatcc_json_parser_integer@@Base>
   1cdc8:	cmp	r0, r7
   1cdcc:	beq	1ce1c <main@@Base+0x6d78>
   1cdd0:	sub	r9, fp, #60	; 0x3c
   1cdd4:	mov	r4, r0
   1cdd8:	ldm	r9, {r0, r6, r9}
   1cddc:	cmp	r0, #0
   1cde0:	beq	1ce38 <main@@Base+0x6d94>
   1cde4:	subs	r0, r6, #1
   1cde8:	sbcs	r0, r9, #-2147483648	; 0x80000000
   1cdec:	bcc	1ce70 <main@@Base+0x6dcc>
   1cdf0:	ldr	r2, [sp, #44]	; 0x2c
   1cdf4:	mov	r0, sl
   1cdf8:	mov	r1, r4
   1cdfc:	mov	r3, #8
   1ce00:	b	1ce50 <main@@Base+0x6dac>
   1ce04:	mov	r4, r2
   1ce08:	mov	r9, #0
   1ce0c:	ldr	r5, [sp, #40]	; 0x28
   1ce10:	cmp	r7, r4
   1ce14:	bne	1cecc <main@@Base+0x6e28>
   1ce18:	b	1ce8c <main@@Base+0x6de8>
   1ce1c:	mov	r6, #0
   1ce20:	mov	r9, #0
   1ce24:	mov	r4, r7
   1ce28:	ldr	r5, [sp, #40]	; 0x28
   1ce2c:	cmp	r7, r4
   1ce30:	bne	1cecc <main@@Base+0x6e28>
   1ce34:	b	1ce8c <main@@Base+0x6de8>
   1ce38:	cmn	r9, #1
   1ce3c:	bgt	1ce78 <main@@Base+0x6dd4>
   1ce40:	ldr	r2, [sp, #44]	; 0x2c
   1ce44:	mov	r0, sl
   1ce48:	mov	r1, r4
   1ce4c:	mov	r3, #7
   1ce50:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   1ce54:	mov	r4, r0
   1ce58:	mov	r6, #0
   1ce5c:	mov	r9, #0
   1ce60:	ldr	r5, [sp, #40]	; 0x28
   1ce64:	cmp	r7, r4
   1ce68:	bne	1cecc <main@@Base+0x6e28>
   1ce6c:	b	1ce8c <main@@Base+0x6de8>
   1ce70:	rsbs	r6, r6, #0
   1ce74:	rsc	r9, r9, #0
   1ce78:	str	r6, [sp, #56]	; 0x38
   1ce7c:	str	r9, [sp, #60]	; 0x3c
   1ce80:	ldr	r5, [sp, #40]	; 0x28
   1ce84:	cmp	r7, r4
   1ce88:	bne	1cecc <main@@Base+0x6e28>
   1ce8c:	add	r0, sp, #56	; 0x38
   1ce90:	ldr	r4, [sp, #44]	; 0x2c
   1ce94:	mov	r1, r7
   1ce98:	str	r0, [sp]
   1ce9c:	movw	r0, #268	; 0x10c
   1cea0:	movt	r0, #6
   1cea4:	add	r3, r0, #12
   1cea8:	mov	r0, sl
   1ceac:	mov	r2, r4
   1ceb0:	bl	26254 <main@@Base+0x101b0>
   1ceb4:	cmp	r0, r7
   1ceb8:	cmpne	r0, r4
   1cebc:	beq	218bc <main@@Base+0xb818>
   1cec0:	ldr	r6, [sp, #56]	; 0x38
   1cec4:	ldr	r9, [sp, #60]	; 0x3c
   1cec8:	mov	r4, r0
   1cecc:	orrs	r0, r6, r9
   1ced0:	bne	1cee0 <main@@Base+0x6e3c>
   1ced4:	ldrb	r0, [sl, #8]
   1ced8:	tst	r0, #2
   1cedc:	beq	1e154 <main@@Base+0x80b0>
   1cee0:	ldr	r0, [sl]
   1cee4:	mov	r1, #18
   1cee8:	b	1e13c <main@@Base+0x8098>
   1ceec:	beq	1e3e4 <main@@Base+0x8340>
   1cef0:	b	1e3f4 <main@@Base+0x8350>
   1cef4:	bne	1cf04 <main@@Base+0x6e60>
   1cef8:	ldrb	r0, [r2, #2]!
   1cefc:	cmp	r0, #32
   1cf00:	bhi	1cf14 <main@@Base+0x6e70>
   1cf04:	mov	r0, sl
   1cf08:	mov	r2, r6
   1cf0c:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   1cf10:	mov	r2, r0
   1cf14:	cmp	r4, r2
   1cf18:	beq	2057c <main@@Base+0xa4d8>
   1cf1c:	ldr	r0, [sp, #48]	; 0x30
   1cf20:	movw	r1, #628	; 0x274
   1cf24:	mov	r3, #8
   1cf28:	movt	r1, #6
   1cf2c:	str	r3, [sp]
   1cf30:	mov	r3, #0
   1cf34:	add	r1, r1, #64	; 0x40
   1cf38:	stmib	sp, {r0, r1}
   1cf3c:	movw	r0, #18032	; 0x4670
   1cf40:	mov	r1, r2
   1cf44:	mov	r2, r6
   1cf48:	movt	r0, #2
   1cf4c:	str	r0, [sp, #12]
   1cf50:	mov	r0, sl
   1cf54:	bl	39afc <flatcc_json_parser_union_type@@Base>
   1cf58:	b	1a490 <main@@Base+0x43ec>
   1cf5c:	bne	1cf6c <main@@Base+0x6ec8>
   1cf60:	ldrb	r0, [r4, #2]!
   1cf64:	cmp	r0, #32
   1cf68:	bhi	1cf7c <main@@Base+0x6ed8>
   1cf6c:	mov	r0, sl
   1cf70:	mov	r2, r6
   1cf74:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   1cf78:	mov	r4, r0
   1cf7c:	cmp	r9, r4
   1cf80:	beq	1e494 <main@@Base+0x83f0>
   1cf84:	mov	r0, #0
   1cf88:	mov	r1, #0
   1cf8c:	str	r0, [sp, #52]	; 0x34
   1cf90:	ldr	r0, [sl]
   1cf94:	bl	31fa8 <flatcc_builder_start_table@@Base>
   1cf98:	cmp	r0, #0
   1cf9c:	bne	1d00c <main@@Base+0x6f68>
   1cfa0:	cmp	r4, r6
   1cfa4:	beq	1cfe8 <main@@Base+0x6f44>
   1cfa8:	ldrb	r0, [r4]
   1cfac:	cmp	r0, #123	; 0x7b
   1cfb0:	bne	1cfe8 <main@@Base+0x6f44>
   1cfb4:	add	r1, r4, #1
   1cfb8:	sub	r0, r6, r1
   1cfbc:	cmp	r0, #2
   1cfc0:	blt	1fce8 <main@@Base+0x9c44>
   1cfc4:	ldrb	r0, [r1]
   1cfc8:	cmp	r0, #32
   1cfcc:	bls	1fcd4 <main@@Base+0x9c30>
   1cfd0:	ldr	r6, [sp, #44]	; 0x2c
   1cfd4:	mov	r4, r1
   1cfd8:	cmp	r4, r6
   1cfdc:	mov	r3, r6
   1cfe0:	bne	1fd04 <main@@Base+0x9c60>
   1cfe4:	b	1fd54 <main@@Base+0x9cb0>
   1cfe8:	mov	r0, sl
   1cfec:	mov	r1, r4
   1cff0:	mov	r2, r6
   1cff4:	mov	r3, #21
   1cff8:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   1cffc:	mov	r4, r0
   1d000:	ldr	r0, [sl, #24]
   1d004:	cmp	r0, #0
   1d008:	beq	20394 <main@@Base+0xa2f0>
   1d00c:	mov	r0, sl
   1d010:	mov	r1, r4
   1d014:	mov	r2, r6
   1d018:	mov	r3, #33	; 0x21
   1d01c:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   1d020:	mov	r4, r0
   1d024:	ldr	r0, [sp, #52]	; 0x34
   1d028:	cmp	r0, #0
   1d02c:	beq	16fd8 <main@@Base+0xf34>
   1d030:	ldr	r0, [sl]
   1d034:	mov	r1, #34	; 0x22
   1d038:	bl	3316c <flatcc_builder_table_add_offset@@Base>
   1d03c:	cmp	r0, #0
   1d040:	bne	19b50 <main@@Base+0x3aac>
   1d044:	b	16fd8 <main@@Base+0xf34>
   1d048:	ldr	r5, [sp, #40]	; 0x28
   1d04c:	mov	r4, r6
   1d050:	b	1ab7c <main@@Base+0x4ad8>
   1d054:	cmp	r0, #93	; 0x5d
   1d058:	bne	1e838 <main@@Base+0x8794>
   1d05c:	ldr	r6, [sp, #44]	; 0x2c
   1d060:	ldr	sl, [sp, #36]	; 0x24
   1d064:	add	r1, r4, #1
   1d068:	sub	r0, r6, r1
   1d06c:	cmp	r0, #2
   1d070:	ldr	r5, [sp, #40]	; 0x28
   1d074:	blt	1d138 <main@@Base+0x7094>
   1d078:	ldrb	r0, [r1]
   1d07c:	cmp	r0, #32
   1d080:	bls	1d11c <main@@Base+0x7078>
   1d084:	ldr	r6, [sp, #44]	; 0x2c
   1d088:	ldr	sl, [sp, #36]	; 0x24
   1d08c:	ldr	r5, [sp, #40]	; 0x28
   1d090:	mov	r4, r1
   1d094:	b	1ab7c <main@@Base+0x4ad8>
   1d098:	bne	1d0ac <main@@Base+0x7008>
   1d09c:	mov	r8, r1
   1d0a0:	ldrb	r0, [r8, #1]!
   1d0a4:	cmp	r0, #32
   1d0a8:	bhi	1d0bc <main@@Base+0x7018>
   1d0ac:	mov	r0, sl
   1d0b0:	mov	r2, r6
   1d0b4:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   1d0b8:	mov	r8, r0
   1d0bc:	cmp	r8, r6
   1d0c0:	beq	1d104 <main@@Base+0x7060>
   1d0c4:	ldrb	r0, [r8]
   1d0c8:	cmp	r0, #58	; 0x3a
   1d0cc:	bne	1d104 <main@@Base+0x7060>
   1d0d0:	add	r1, r8, #1
   1d0d4:	sub	r0, r6, r1
   1d0d8:	cmp	r0, #2
   1d0dc:	blt	1fa58 <main@@Base+0x99b4>
   1d0e0:	ldrb	r0, [r1]
   1d0e4:	cmp	r0, #32
   1d0e8:	bls	1fa40 <main@@Base+0x999c>
   1d0ec:	ldr	r6, [sp, #44]	; 0x2c
   1d0f0:	ldr	sl, [sp, #36]	; 0x24
   1d0f4:	mov	r8, r1
   1d0f8:	cmp	r7, r8
   1d0fc:	bne	1fa70 <main@@Base+0x99cc>
   1d100:	b	1fad0 <main@@Base+0x9a2c>
   1d104:	mov	r0, sl
   1d108:	mov	r1, r8
   1d10c:	mov	r2, r6
   1d110:	mov	r3, #4
   1d114:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   1d118:	b	1fa64 <main@@Base+0x99c0>
   1d11c:	ldr	r6, [sp, #44]	; 0x2c
   1d120:	ldr	sl, [sp, #36]	; 0x24
   1d124:	ldr	r5, [sp, #40]	; 0x28
   1d128:	bne	1d138 <main@@Base+0x7094>
   1d12c:	ldrb	r0, [r4, #2]!
   1d130:	cmp	r0, #32
   1d134:	bhi	1ab7c <main@@Base+0x4ad8>
   1d138:	mov	r0, sl
   1d13c:	mov	r2, r6
   1d140:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   1d144:	b	1ab78 <main@@Base+0x4ad4>
   1d148:	mov	r0, sl
   1d14c:	mov	r1, r6
   1d150:	b	1e848 <main@@Base+0x87a4>
   1d154:	bne	1d164 <main@@Base+0x70c0>
   1d158:	ldrb	r0, [r4, #2]!
   1d15c:	cmp	r0, #32
   1d160:	bhi	1d174 <main@@Base+0x70d0>
   1d164:	mov	r0, sl
   1d168:	mov	r2, r6
   1d16c:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   1d170:	mov	r4, r0
   1d174:	cmp	r4, r6
   1d178:	mov	r2, r6
   1d17c:	beq	1d1c8 <main@@Base+0x7124>
   1d180:	ldrb	r0, [r4]
   1d184:	cmp	r0, #93	; 0x5d
   1d188:	bne	1d1c4 <main@@Base+0x7120>
   1d18c:	add	r1, r4, #1
   1d190:	sub	r0, r6, r1
   1d194:	cmp	r0, #2
   1d198:	blt	212fc <main@@Base+0xb258>
   1d19c:	ldrb	r0, [r1]
   1d1a0:	cmp	r0, #32
   1d1a4:	bhi	1ef64 <main@@Base+0x8ec0>
   1d1a8:	ldr	r6, [sp, #44]	; 0x2c
   1d1ac:	ldr	sl, [sp, #36]	; 0x24
   1d1b0:	bne	212fc <main@@Base+0xb258>
   1d1b4:	ldrb	r0, [r4, #2]!
   1d1b8:	cmp	r0, #32
   1d1bc:	bhi	1c974 <main@@Base+0x68d0>
   1d1c0:	b	212fc <main@@Base+0xb258>
   1d1c4:	mov	r2, r4
   1d1c8:	mov	r1, r2
   1d1cc:	mov	r0, sl
   1d1d0:	mov	r2, r6
   1d1d4:	add	r3, sp, #52	; 0x34
   1d1d8:	bl	39580 <flatcc_json_parser_build_string@@Base>
   1d1dc:	mov	r4, r0
   1d1e0:	ldr	r0, [sp, #52]	; 0x34
   1d1e4:	cmp	r0, #0
   1d1e8:	beq	16fd8 <main@@Base+0xf34>
   1d1ec:	ldr	r0, [sl]
   1d1f0:	mov	r1, #1
   1d1f4:	bl	31234 <flatcc_builder_extend_offset_vector@@Base>
   1d1f8:	cmp	r0, #0
   1d1fc:	beq	16fd8 <main@@Base+0xf34>
   1d200:	ldr	r1, [sp, #52]	; 0x34
   1d204:	str	r1, [r0]
   1d208:	sub	r0, r6, r4
   1d20c:	cmp	r0, #2
   1d210:	blt	1d244 <main@@Base+0x71a0>
   1d214:	ldrb	r0, [r4]
   1d218:	cmp	r0, #32
   1d21c:	bls	1d230 <main@@Base+0x718c>
   1d220:	mov	r2, r4
   1d224:	cmp	r2, r6
   1d228:	bne	1d260 <main@@Base+0x71bc>
   1d22c:	b	1eef0 <main@@Base+0x8e4c>
   1d230:	bne	1d244 <main@@Base+0x71a0>
   1d234:	mov	r2, r4
   1d238:	ldrb	r0, [r2, #1]!
   1d23c:	cmp	r0, #32
   1d240:	bhi	1d258 <main@@Base+0x71b4>
   1d244:	mov	r0, sl
   1d248:	mov	r1, r4
   1d24c:	mov	r2, r6
   1d250:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   1d254:	mov	r2, r0
   1d258:	cmp	r2, r6
   1d25c:	beq	1eef0 <main@@Base+0x8e4c>
   1d260:	ldrb	r0, [r2]
   1d264:	cmp	r0, #44	; 0x2c
   1d268:	bne	1ef38 <main@@Base+0x8e94>
   1d26c:	add	r1, r2, #1
   1d270:	sub	r0, r6, r1
   1d274:	cmp	r0, #2
   1d278:	blt	1d2a8 <main@@Base+0x7204>
   1d27c:	ldrb	r0, [r1]
   1d280:	cmp	r0, #32
   1d284:	bls	1d298 <main@@Base+0x71f4>
   1d288:	mov	r2, r1
   1d28c:	cmp	r2, r6
   1d290:	bne	1d2c0 <main@@Base+0x721c>
   1d294:	b	1ef74 <main@@Base+0x8ed0>
   1d298:	bne	1d2a8 <main@@Base+0x7204>
   1d29c:	ldrb	r0, [r2, #2]!
   1d2a0:	cmp	r0, #32
   1d2a4:	bhi	1d2b8 <main@@Base+0x7214>
   1d2a8:	mov	r0, sl
   1d2ac:	mov	r2, r6
   1d2b0:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   1d2b4:	mov	r2, r0
   1d2b8:	cmp	r2, r6
   1d2bc:	beq	1ef74 <main@@Base+0x8ed0>
   1d2c0:	ldrb	r0, [r2]
   1d2c4:	cmp	r0, #93	; 0x5d
   1d2c8:	bne	1d1c8 <main@@Base+0x7124>
   1d2cc:	add	r1, r2, #1
   1d2d0:	sub	r0, r6, r1
   1d2d4:	cmp	r0, #2
   1d2d8:	bge	1ef58 <main@@Base+0x8eb4>
   1d2dc:	b	212fc <main@@Base+0xb258>
   1d2e0:	bne	1d2f0 <main@@Base+0x724c>
   1d2e4:	ldrb	r0, [r7, #2]!
   1d2e8:	cmp	r0, #32
   1d2ec:	bhi	1d300 <main@@Base+0x725c>
   1d2f0:	mov	r0, sl
   1d2f4:	mov	r2, r6
   1d2f8:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   1d2fc:	mov	r7, r0
   1d300:	cmp	r7, r6
   1d304:	mov	r4, r6
   1d308:	beq	1d354 <main@@Base+0x72b0>
   1d30c:	ldrb	r0, [r7]
   1d310:	cmp	r0, #93	; 0x5d
   1d314:	bne	1d350 <main@@Base+0x72ac>
   1d318:	add	r1, r7, #1
   1d31c:	sub	r0, r6, r1
   1d320:	cmp	r0, #2
   1d324:	blt	21328 <main@@Base+0xb284>
   1d328:	ldrb	r0, [r1]
   1d32c:	cmp	r0, #32
   1d330:	bhi	1ea70 <main@@Base+0x89cc>
   1d334:	ldr	r6, [sp, #44]	; 0x2c
   1d338:	ldr	sl, [sp, #36]	; 0x24
   1d33c:	bne	21328 <main@@Base+0xb284>
   1d340:	ldrb	r0, [r7, #2]!
   1d344:	cmp	r0, #32
   1d348:	bhi	1ca44 <main@@Base+0x69a0>
   1d34c:	b	21328 <main@@Base+0xb284>
   1d350:	mov	r4, r7
   1d354:	ldr	r0, [sl]
   1d358:	mov	r1, #1
   1d35c:	bl	30e98 <flatcc_builder_extend_vector@@Base>
   1d360:	mov	r8, r0
   1d364:	cmp	r0, #0
   1d368:	beq	16fd8 <main@@Base+0xf34>
   1d36c:	cmp	r4, r6
   1d370:	beq	1d3b0 <main@@Base+0x730c>
   1d374:	ldrb	r0, [r4]
   1d378:	cmp	r0, #123	; 0x7b
   1d37c:	bne	1d3b0 <main@@Base+0x730c>
   1d380:	add	r1, r4, #1
   1d384:	sub	r0, r6, r1
   1d388:	cmp	r0, #2
   1d38c:	blt	1d418 <main@@Base+0x7374>
   1d390:	ldrb	r0, [r1]
   1d394:	cmp	r0, #32
   1d398:	bls	1d408 <main@@Base+0x7364>
   1d39c:	mov	r4, r1
   1d3a0:	cmp	r4, r6
   1d3a4:	mov	r2, r6
   1d3a8:	bne	1d434 <main@@Base+0x7390>
   1d3ac:	b	1d47c <main@@Base+0x73d8>
   1d3b0:	mov	r0, sl
   1d3b4:	mov	r1, r4
   1d3b8:	mov	r2, r6
   1d3bc:	mov	r3, #21
   1d3c0:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   1d3c4:	mov	r4, r0
   1d3c8:	sub	r0, r6, r4
   1d3cc:	cmp	r0, #2
   1d3d0:	blt	1dc34 <main@@Base+0x7b90>
   1d3d4:	ldrb	r0, [r4]
   1d3d8:	cmp	r0, #32
   1d3dc:	bls	1d3f0 <main@@Base+0x734c>
   1d3e0:	mov	r7, r4
   1d3e4:	cmp	r7, r6
   1d3e8:	bne	1dc50 <main@@Base+0x7bac>
   1d3ec:	b	1e854 <main@@Base+0x87b0>
   1d3f0:	bne	1dc34 <main@@Base+0x7b90>
   1d3f4:	mov	r7, r4
   1d3f8:	ldrb	r0, [r7, #1]!
   1d3fc:	cmp	r0, #32
   1d400:	bls	1dc34 <main@@Base+0x7b90>
   1d404:	b	1dc48 <main@@Base+0x7ba4>
   1d408:	bne	1d418 <main@@Base+0x7374>
   1d40c:	ldrb	r0, [r4, #2]!
   1d410:	cmp	r0, #32
   1d414:	bhi	1d428 <main@@Base+0x7384>
   1d418:	mov	r0, sl
   1d41c:	mov	r2, r6
   1d420:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   1d424:	mov	r4, r0
   1d428:	cmp	r4, r6
   1d42c:	mov	r2, r6
   1d430:	beq	1d47c <main@@Base+0x73d8>
   1d434:	ldrb	r0, [r4]
   1d438:	cmp	r0, #125	; 0x7d
   1d43c:	bne	1d478 <main@@Base+0x73d4>
   1d440:	add	r1, r4, #1
   1d444:	sub	r0, r6, r1
   1d448:	cmp	r0, #2
   1d44c:	blt	1dcfc <main@@Base+0x7c58>
   1d450:	ldrb	r0, [r1]
   1d454:	cmp	r0, #32
   1d458:	bhi	1dc1c <main@@Base+0x7b78>
   1d45c:	ldr	r6, [sp, #44]	; 0x2c
   1d460:	ldr	sl, [sp, #36]	; 0x24
   1d464:	bne	1dcfc <main@@Base+0x7c58>
   1d468:	ldrb	r0, [r4, #2]!
   1d46c:	cmp	r0, #32
   1d470:	bhi	1d3c8 <main@@Base+0x7324>
   1d474:	b	1dcfc <main@@Base+0x7c58>
   1d478:	mov	r2, r4
   1d47c:	cmp	r2, r6
   1d480:	mov	r9, r6
   1d484:	beq	1d4d8 <main@@Base+0x7434>
   1d488:	ldrb	r0, [r2]
   1d48c:	cmp	r0, #46	; 0x2e
   1d490:	beq	1d4ac <main@@Base+0x7408>
   1d494:	cmp	r0, #34	; 0x22
   1d498:	bne	1d4c8 <main@@Base+0x7424>
   1d49c:	ldr	r0, [sp, #32]
   1d4a0:	mov	r1, #0
   1d4a4:	add	r9, r2, #1
   1d4a8:	b	1d4d4 <main@@Base+0x7430>
   1d4ac:	mov	r1, r2
   1d4b0:	mov	r0, sl
   1d4b4:	mov	r2, r6
   1d4b8:	mov	r3, #5
   1d4bc:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   1d4c0:	mov	r9, r0
   1d4c4:	b	1d4d8 <main@@Base+0x7434>
   1d4c8:	ldr	r0, [sp, #32]
   1d4cc:	mov	r1, #1
   1d4d0:	mov	r9, r2
   1d4d4:	str	r1, [r0]
   1d4d8:	sub	lr, r6, r9
   1d4dc:	mov	r0, #8
   1d4e0:	cmp	lr, #8
   1d4e4:	movcc	r0, lr
   1d4e8:	sub	r7, r0, #1
   1d4ec:	cmp	r7, #7
   1d4f0:	bhi	1da08 <main@@Base+0x7964>
   1d4f4:	add	r4, pc, #32
   1d4f8:	mov	r1, #0
   1d4fc:	mov	ip, #0
   1d500:	mov	sl, #0
   1d504:	mov	r6, #0
   1d508:	mov	r3, #0
   1d50c:	mov	r5, #0
   1d510:	mov	r2, #0
   1d514:	mov	r0, #0
   1d518:	ldr	pc, [r4, r7, lsl #2]
   1d51c:	andeq	sp, r1, r0, lsl #11
   1d520:	andeq	sp, r1, r8, ror r5
   1d524:	andeq	sp, r1, r0, ror r5
   1d528:	andeq	sp, r1, r8, ror #10
   1d52c:	andeq	sp, r1, ip, asr r5
   1d530:	andeq	sp, r1, r0, asr r5
   1d534:	andeq	sp, r1, r0, asr #10
   1d538:	andeq	sp, r1, ip, lsr r5
   1d53c:	ldrb	ip, [r9, #7]
   1d540:	ldrb	r0, [r9, #6]
   1d544:	mov	sl, r1
   1d548:	orr	r0, ip, r0, lsl #8
   1d54c:	mov	r1, r0
   1d550:	ldrb	r0, [r9, #5]
   1d554:	mov	r6, sl
   1d558:	orr	r1, r1, r0, lsl #16
   1d55c:	ldrb	r0, [r9, #4]
   1d560:	mov	r3, r6
   1d564:	orr	r1, r1, r0, lsl #24
   1d568:	ldrb	r0, [r9, #3]
   1d56c:	orr	r5, r0, r3
   1d570:	ldrb	r0, [r9, #2]
   1d574:	orr	r2, r5, r0, lsl #8
   1d578:	ldrb	r0, [r9, #1]
   1d57c:	orr	r0, r2, r0, lsl #16
   1d580:	ldrb	r2, [r9]
   1d584:	movw	r3, #0
   1d588:	movt	r3, #26980	; 0x6964
   1d58c:	orr	r0, r0, r2, lsl #24
   1d590:	mov	r2, r0
   1d594:	bfc	r2, #0, #16
   1d598:	teq	r2, r3
   1d59c:	bne	1d5fc <main@@Base+0x7558>
   1d5a0:	ldr	r6, [sp, #44]	; 0x2c
   1d5a4:	ldr	sl, [sp, #36]	; 0x24
   1d5a8:	cmp	lr, #3
   1d5ac:	mov	r7, r9
   1d5b0:	blt	1d848 <main@@Base+0x77a4>
   1d5b4:	ldr	r2, [sp, #32]
   1d5b8:	mov	r1, r9
   1d5bc:	ldrb	r0, [r1, #2]!
   1d5c0:	ldr	r2, [r2]
   1d5c4:	cmp	r2, #0
   1d5c8:	beq	1d67c <main@@Base+0x75d8>
   1d5cc:	cmp	r0, #33	; 0x21
   1d5d0:	bcc	1d5e0 <main@@Base+0x753c>
   1d5d4:	cmp	r0, #58	; 0x3a
   1d5d8:	mov	r7, r9
   1d5dc:	bne	1d848 <main@@Base+0x77a4>
   1d5e0:	ldr	r0, [sp, #32]
   1d5e4:	mov	r2, #0
   1d5e8:	str	r2, [r0]
   1d5ec:	sub	r0, r6, r1
   1d5f0:	cmp	r0, #2
   1d5f4:	bge	1d698 <main@@Base+0x75f4>
   1d5f8:	b	1d718 <main@@Base+0x7674>
   1d5fc:	movw	r2, #25445	; 0x6365
   1d600:	ldr	r6, [sp, #44]	; 0x2c
   1d604:	ldr	sl, [sp, #36]	; 0x24
   1d608:	movt	r2, #24942	; 0x616e
   1d60c:	eor	r1, r1, r2
   1d610:	movw	r2, #29556	; 0x7374
   1d614:	movt	r2, #25705	; 0x6469
   1d618:	eor	r0, r0, r2
   1d61c:	orrs	r0, r1, r0
   1d620:	bne	1da08 <main@@Base+0x7964>
   1d624:	cmp	lr, #9
   1d628:	mov	r7, r9
   1d62c:	blt	1d9a0 <main@@Base+0x78fc>
   1d630:	ldr	r2, [sp, #32]
   1d634:	mov	r1, r9
   1d638:	ldrb	r0, [r1, #8]!
   1d63c:	ldr	r2, [r2]
   1d640:	cmp	r2, #0
   1d644:	beq	1d6bc <main@@Base+0x7618>
   1d648:	cmp	r0, #33	; 0x21
   1d64c:	bcc	1d65c <main@@Base+0x75b8>
   1d650:	cmp	r0, #58	; 0x3a
   1d654:	mov	r7, r9
   1d658:	bne	1d9a0 <main@@Base+0x78fc>
   1d65c:	ldr	r0, [sp, #32]
   1d660:	mov	r2, #0
   1d664:	str	r2, [r0]
   1d668:	ldr	r4, [sp, #44]	; 0x2c
   1d66c:	sub	r0, r4, r1
   1d670:	cmp	r0, #2
   1d674:	bge	1d6dc <main@@Base+0x7638>
   1d678:	b	1d7a0 <main@@Base+0x76fc>
   1d67c:	cmp	r0, #34	; 0x22
   1d680:	mov	r7, r9
   1d684:	bne	1d848 <main@@Base+0x77a4>
   1d688:	add	r1, r9, #3
   1d68c:	sub	r0, r6, r1
   1d690:	cmp	r0, #2
   1d694:	blt	1d718 <main@@Base+0x7674>
   1d698:	ldrb	r0, [r1]
   1d69c:	cmp	r0, #32
   1d6a0:	bls	1d6fc <main@@Base+0x7658>
   1d6a4:	ldr	r6, [sp, #44]	; 0x2c
   1d6a8:	ldr	sl, [sp, #36]	; 0x24
   1d6ac:	mov	r7, r1
   1d6b0:	cmp	r7, r6
   1d6b4:	bne	1d730 <main@@Base+0x768c>
   1d6b8:	b	1d770 <main@@Base+0x76cc>
   1d6bc:	cmp	r0, #34	; 0x22
   1d6c0:	mov	r7, r9
   1d6c4:	bne	1d9a0 <main@@Base+0x78fc>
   1d6c8:	add	r1, r9, #9
   1d6cc:	ldr	r4, [sp, #44]	; 0x2c
   1d6d0:	sub	r0, r4, r1
   1d6d4:	cmp	r0, #2
   1d6d8:	blt	1d7a0 <main@@Base+0x76fc>
   1d6dc:	ldrb	r0, [r1]
   1d6e0:	cmp	r0, #32
   1d6e4:	bls	1d788 <main@@Base+0x76e4>
   1d6e8:	ldr	r4, [sp, #44]	; 0x2c
   1d6ec:	mov	r7, r1
   1d6f0:	cmp	r7, r4
   1d6f4:	bne	1d7b8 <main@@Base+0x7714>
   1d6f8:	b	1d800 <main@@Base+0x775c>
   1d6fc:	ldr	r6, [sp, #44]	; 0x2c
   1d700:	ldr	sl, [sp, #36]	; 0x24
   1d704:	bne	1d718 <main@@Base+0x7674>
   1d708:	mov	r7, r1
   1d70c:	ldrb	r0, [r7, #1]!
   1d710:	cmp	r0, #32
   1d714:	bhi	1d728 <main@@Base+0x7684>
   1d718:	mov	r0, sl
   1d71c:	mov	r2, r6
   1d720:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   1d724:	mov	r7, r0
   1d728:	cmp	r7, r6
   1d72c:	beq	1d770 <main@@Base+0x76cc>
   1d730:	ldrb	r0, [r7]
   1d734:	cmp	r0, #58	; 0x3a
   1d738:	bne	1d770 <main@@Base+0x76cc>
   1d73c:	add	r1, r7, #1
   1d740:	sub	r0, r6, r1
   1d744:	cmp	r0, #2
   1d748:	blt	1d838 <main@@Base+0x7794>
   1d74c:	ldrb	r0, [r1]
   1d750:	cmp	r0, #32
   1d754:	bls	1d820 <main@@Base+0x777c>
   1d758:	ldr	r6, [sp, #44]	; 0x2c
   1d75c:	ldr	sl, [sp, #36]	; 0x24
   1d760:	mov	r7, r1
   1d764:	cmp	r9, r7
   1d768:	bne	1d850 <main@@Base+0x77ac>
   1d76c:	b	1da08 <main@@Base+0x7964>
   1d770:	mov	r0, sl
   1d774:	mov	r1, r7
   1d778:	mov	r2, r6
   1d77c:	mov	r3, #4
   1d780:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   1d784:	b	1d844 <main@@Base+0x77a0>
   1d788:	ldr	r4, [sp, #44]	; 0x2c
   1d78c:	bne	1d7a0 <main@@Base+0x76fc>
   1d790:	mov	r7, r1
   1d794:	ldrb	r0, [r7, #1]!
   1d798:	cmp	r0, #32
   1d79c:	bhi	1d7b0 <main@@Base+0x770c>
   1d7a0:	ldr	r0, [sp, #36]	; 0x24
   1d7a4:	mov	r2, r4
   1d7a8:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   1d7ac:	mov	r7, r0
   1d7b0:	cmp	r7, r4
   1d7b4:	beq	1d800 <main@@Base+0x775c>
   1d7b8:	ldrb	r0, [r7]
   1d7bc:	cmp	r0, #58	; 0x3a
   1d7c0:	bne	1d800 <main@@Base+0x775c>
   1d7c4:	ldr	r6, [sp, #44]	; 0x2c
   1d7c8:	ldr	sl, [sp, #36]	; 0x24
   1d7cc:	add	r1, r7, #1
   1d7d0:	sub	r0, r6, r1
   1d7d4:	cmp	r0, #2
   1d7d8:	blt	1d990 <main@@Base+0x78ec>
   1d7dc:	ldrb	r0, [r1]
   1d7e0:	cmp	r0, #32
   1d7e4:	bls	1d978 <main@@Base+0x78d4>
   1d7e8:	ldr	r6, [sp, #44]	; 0x2c
   1d7ec:	ldr	sl, [sp, #36]	; 0x24
   1d7f0:	mov	r7, r1
   1d7f4:	cmp	r9, r7
   1d7f8:	bne	1d9a8 <main@@Base+0x7904>
   1d7fc:	b	1da08 <main@@Base+0x7964>
   1d800:	ldr	sl, [sp, #36]	; 0x24
   1d804:	ldr	r6, [sp, #44]	; 0x2c
   1d808:	mov	r1, r7
   1d80c:	mov	r3, #4
   1d810:	mov	r0, sl
   1d814:	mov	r2, r6
   1d818:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   1d81c:	b	1d99c <main@@Base+0x78f8>
   1d820:	ldr	r6, [sp, #44]	; 0x2c
   1d824:	ldr	sl, [sp, #36]	; 0x24
   1d828:	bne	1d838 <main@@Base+0x7794>
   1d82c:	ldrb	r0, [r7, #2]!
   1d830:	cmp	r0, #32
   1d834:	bhi	1d848 <main@@Base+0x77a4>
   1d838:	mov	r0, sl
   1d83c:	mov	r2, r6
   1d840:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   1d844:	mov	r7, r0
   1d848:	cmp	r9, r7
   1d84c:	beq	1da08 <main@@Base+0x7964>
   1d850:	mov	r4, #0
   1d854:	cmp	r7, r6
   1d858:	str	r4, [fp, #-52]	; 0xffffffcc
   1d85c:	str	r4, [fp, #-56]	; 0xffffffc8
   1d860:	str	r4, [fp, #-60]	; 0xffffffc4
   1d864:	str	r4, [sp, #56]	; 0x38
   1d868:	beq	1d8c0 <main@@Base+0x781c>
   1d86c:	sub	r0, fp, #56	; 0x38
   1d870:	mov	r1, r7
   1d874:	mov	r2, r6
   1d878:	add	r3, sp, #56	; 0x38
   1d87c:	str	r0, [sp]
   1d880:	mov	r0, sl
   1d884:	bl	38fa8 <flatcc_json_parser_integer@@Base>
   1d888:	cmp	r0, r7
   1d88c:	beq	1d8d0 <main@@Base+0x782c>
   1d890:	mov	r1, r0
   1d894:	ldr	r0, [sp, #56]	; 0x38
   1d898:	cmp	r0, #0
   1d89c:	beq	1d8e0 <main@@Base+0x783c>
   1d8a0:	mov	r0, sl
   1d8a4:	mov	r2, r6
   1d8a8:	mov	r3, #8
   1d8ac:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   1d8b0:	mov	r1, r0
   1d8b4:	cmp	r7, r1
   1d8b8:	bne	1d964 <main@@Base+0x78c0>
   1d8bc:	b	1d92c <main@@Base+0x7888>
   1d8c0:	mov	r1, r6
   1d8c4:	cmp	r7, r1
   1d8c8:	bne	1d964 <main@@Base+0x78c0>
   1d8cc:	b	1d92c <main@@Base+0x7888>
   1d8d0:	mov	r1, r7
   1d8d4:	cmp	r7, r1
   1d8d8:	bne	1d964 <main@@Base+0x78c0>
   1d8dc:	b	1d92c <main@@Base+0x7888>
   1d8e0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1d8e4:	cmp	r0, #0
   1d8e8:	beq	1d914 <main@@Base+0x7870>
   1d8ec:	ldr	sl, [sp, #36]	; 0x24
   1d8f0:	ldr	r6, [sp, #44]	; 0x2c
   1d8f4:	mov	r3, #7
   1d8f8:	mov	r0, sl
   1d8fc:	mov	r2, r6
   1d900:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   1d904:	mov	r1, r0
   1d908:	cmp	r7, r1
   1d90c:	bne	1d964 <main@@Base+0x78c0>
   1d910:	b	1d92c <main@@Base+0x7888>
   1d914:	ldr	r4, [fp, #-56]	; 0xffffffc8
   1d918:	ldr	r6, [sp, #44]	; 0x2c
   1d91c:	ldr	sl, [sp, #36]	; 0x24
   1d920:	str	r4, [fp, #-60]	; 0xffffffc4
   1d924:	cmp	r7, r1
   1d928:	bne	1d964 <main@@Base+0x78c0>
   1d92c:	movw	r3, #628	; 0x274
   1d930:	sub	r0, fp, #60	; 0x3c
   1d934:	mov	r1, r7
   1d938:	mov	r2, r6
   1d93c:	movt	r3, #6
   1d940:	str	r0, [sp]
   1d944:	mov	r0, sl
   1d948:	bl	2649c <main@@Base+0x103f8>
   1d94c:	mov	r1, r0
   1d950:	cmp	r0, r7
   1d954:	cmpne	r1, r6
   1d958:	beq	1dba4 <main@@Base+0x7b00>
   1d95c:	ldr	r4, [fp, #-60]	; 0xffffffc4
   1d960:	ldr	sl, [sp, #36]	; 0x24
   1d964:	str	r4, [r8]
   1d968:	sub	r0, r6, r1
   1d96c:	cmp	r0, #2
   1d970:	blt	1db00 <main@@Base+0x7a5c>
   1d974:	b	1da28 <main@@Base+0x7984>
   1d978:	ldr	r6, [sp, #44]	; 0x2c
   1d97c:	ldr	sl, [sp, #36]	; 0x24
   1d980:	bne	1d990 <main@@Base+0x78ec>
   1d984:	ldrb	r0, [r7, #2]!
   1d988:	cmp	r0, #32
   1d98c:	bhi	1d9a0 <main@@Base+0x78fc>
   1d990:	mov	r0, sl
   1d994:	mov	r2, r6
   1d998:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   1d99c:	mov	r7, r0
   1d9a0:	cmp	r9, r7
   1d9a4:	beq	1da08 <main@@Base+0x7964>
   1d9a8:	mov	r4, #0
   1d9ac:	cmp	r7, r6
   1d9b0:	str	r4, [fp, #-52]	; 0xffffffcc
   1d9b4:	str	r4, [fp, #-56]	; 0xffffffc8
   1d9b8:	str	r4, [fp, #-60]	; 0xffffffc4
   1d9bc:	str	r4, [sp, #56]	; 0x38
   1d9c0:	beq	1da5c <main@@Base+0x79b8>
   1d9c4:	sub	r0, fp, #56	; 0x38
   1d9c8:	mov	r1, r7
   1d9cc:	mov	r2, r6
   1d9d0:	add	r3, sp, #56	; 0x38
   1d9d4:	str	r0, [sp]
   1d9d8:	mov	r0, sl
   1d9dc:	bl	38fa8 <flatcc_json_parser_integer@@Base>
   1d9e0:	cmp	r0, r7
   1d9e4:	beq	1da6c <main@@Base+0x79c8>
   1d9e8:	mov	r1, r0
   1d9ec:	ldr	r0, [sp, #56]	; 0x38
   1d9f0:	cmp	r0, #0
   1d9f4:	beq	1da7c <main@@Base+0x79d8>
   1d9f8:	ldr	sl, [sp, #36]	; 0x24
   1d9fc:	ldr	r6, [sp, #44]	; 0x2c
   1da00:	mov	r3, #8
   1da04:	b	1da94 <main@@Base+0x79f0>
   1da08:	mov	r0, sl
   1da0c:	mov	r1, r9
   1da10:	mov	r2, r6
   1da14:	bl	373bc <flatcc_json_parser_unmatched_symbol@@Base>
   1da18:	mov	r1, r0
   1da1c:	sub	r0, r6, r1
   1da20:	cmp	r0, #2
   1da24:	blt	1db00 <main@@Base+0x7a5c>
   1da28:	ldrb	r0, [r1]
   1da2c:	cmp	r0, #32
   1da30:	bls	1da44 <main@@Base+0x79a0>
   1da34:	mov	r2, r1
   1da38:	cmp	r2, r6
   1da3c:	bne	1db18 <main@@Base+0x7a74>
   1da40:	b	1dbbc <main@@Base+0x7b18>
   1da44:	bne	1db00 <main@@Base+0x7a5c>
   1da48:	mov	r2, r1
   1da4c:	ldrb	r0, [r2, #1]!
   1da50:	cmp	r0, #32
   1da54:	bls	1db00 <main@@Base+0x7a5c>
   1da58:	b	1db10 <main@@Base+0x7a6c>
   1da5c:	mov	r1, r6
   1da60:	cmp	r7, r1
   1da64:	bne	1daf0 <main@@Base+0x7a4c>
   1da68:	b	1daac <main@@Base+0x7a08>
   1da6c:	mov	r1, r7
   1da70:	cmp	r7, r1
   1da74:	bne	1daf0 <main@@Base+0x7a4c>
   1da78:	b	1daac <main@@Base+0x7a08>
   1da7c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1da80:	cmp	r0, #0
   1da84:	beq	1db88 <main@@Base+0x7ae4>
   1da88:	ldr	sl, [sp, #36]	; 0x24
   1da8c:	ldr	r6, [sp, #44]	; 0x2c
   1da90:	mov	r3, #7
   1da94:	mov	r0, sl
   1da98:	mov	r2, r6
   1da9c:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   1daa0:	mov	r1, r0
   1daa4:	cmp	r7, r1
   1daa8:	bne	1daf0 <main@@Base+0x7a4c>
   1daac:	sub	r0, fp, #60	; 0x3c
   1dab0:	mov	r1, r7
   1dab4:	mov	r2, r6
   1dab8:	str	r0, [sp]
   1dabc:	movw	r0, #628	; 0x274
   1dac0:	movt	r0, #6
   1dac4:	add	r3, r0, #12
   1dac8:	mov	r0, sl
   1dacc:	bl	2649c <main@@Base+0x103f8>
   1dad0:	cmp	r0, r7
   1dad4:	mov	r1, r0
   1dad8:	ldrne	r0, [sp, #44]	; 0x2c
   1dadc:	cmpne	r1, r0
   1dae0:	beq	1dba4 <main@@Base+0x7b00>
   1dae4:	ldr	r4, [fp, #-60]	; 0xffffffc4
   1dae8:	ldr	r6, [sp, #44]	; 0x2c
   1daec:	ldr	sl, [sp, #36]	; 0x24
   1daf0:	str	r4, [r8, #4]
   1daf4:	sub	r0, r6, r1
   1daf8:	cmp	r0, #2
   1dafc:	bge	1da28 <main@@Base+0x7984>
   1db00:	mov	r0, sl
   1db04:	mov	r2, r6
   1db08:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   1db0c:	mov	r2, r0
   1db10:	cmp	r2, r6
   1db14:	beq	1dbbc <main@@Base+0x7b18>
   1db18:	ldrb	r0, [r2]
   1db1c:	cmp	r0, #44	; 0x2c
   1db20:	bne	1dbd0 <main@@Base+0x7b2c>
   1db24:	add	r1, r2, #1
   1db28:	sub	r0, r6, r1
   1db2c:	cmp	r0, #2
   1db30:	blt	1db60 <main@@Base+0x7abc>
   1db34:	ldrb	r0, [r1]
   1db38:	cmp	r0, #32
   1db3c:	bls	1db50 <main@@Base+0x7aac>
   1db40:	mov	r2, r1
   1db44:	cmp	r2, r6
   1db48:	bne	1db78 <main@@Base+0x7ad4>
   1db4c:	b	1dbf4 <main@@Base+0x7b50>
   1db50:	bne	1db60 <main@@Base+0x7abc>
   1db54:	ldrb	r0, [r2, #2]!
   1db58:	cmp	r0, #32
   1db5c:	bhi	1db70 <main@@Base+0x7acc>
   1db60:	mov	r0, sl
   1db64:	mov	r2, r6
   1db68:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   1db6c:	mov	r2, r0
   1db70:	cmp	r2, r6
   1db74:	beq	1dbf4 <main@@Base+0x7b50>
   1db78:	ldrb	r0, [r2]
   1db7c:	cmp	r0, #125	; 0x7d
   1db80:	bne	1d47c <main@@Base+0x73d8>
   1db84:	b	1dc00 <main@@Base+0x7b5c>
   1db88:	ldr	r4, [fp, #-56]	; 0xffffffc8
   1db8c:	ldr	r6, [sp, #44]	; 0x2c
   1db90:	ldr	sl, [sp, #36]	; 0x24
   1db94:	str	r4, [fp, #-60]	; 0xffffffc4
   1db98:	cmp	r7, r1
   1db9c:	bne	1daf0 <main@@Base+0x7a4c>
   1dba0:	b	1daac <main@@Base+0x7a08>
   1dba4:	ldr	sl, [sp, #36]	; 0x24
   1dba8:	ldr	r6, [sp, #44]	; 0x2c
   1dbac:	mov	r3, #33	; 0x21
   1dbb0:	mov	r0, sl
   1dbb4:	mov	r2, r6
   1dbb8:	b	1d3c0 <main@@Base+0x731c>
   1dbbc:	mov	r4, r6
   1dbc0:	sub	r0, r6, r4
   1dbc4:	cmp	r0, #2
   1dbc8:	bge	1d3d4 <main@@Base+0x7330>
   1dbcc:	b	1dc34 <main@@Base+0x7b90>
   1dbd0:	cmp	r0, #125	; 0x7d
   1dbd4:	bne	1dcc4 <main@@Base+0x7c20>
   1dbd8:	ldr	r6, [sp, #44]	; 0x2c
   1dbdc:	ldr	sl, [sp, #36]	; 0x24
   1dbe0:	add	r1, r2, #1
   1dbe4:	sub	r0, r6, r1
   1dbe8:	cmp	r0, #2
   1dbec:	blt	1dcfc <main@@Base+0x7c58>
   1dbf0:	b	1dc10 <main@@Base+0x7b6c>
   1dbf4:	mov	r0, sl
   1dbf8:	mov	r1, r6
   1dbfc:	b	1dcd4 <main@@Base+0x7c30>
   1dc00:	add	r1, r2, #1
   1dc04:	sub	r0, r6, r1
   1dc08:	cmp	r0, #2
   1dc0c:	blt	1dcfc <main@@Base+0x7c58>
   1dc10:	ldrb	r0, [r1]
   1dc14:	cmp	r0, #32
   1dc18:	bls	1dce0 <main@@Base+0x7c3c>
   1dc1c:	ldr	r6, [sp, #44]	; 0x2c
   1dc20:	ldr	sl, [sp, #36]	; 0x24
   1dc24:	mov	r4, r1
   1dc28:	sub	r0, r6, r4
   1dc2c:	cmp	r0, #2
   1dc30:	bge	1d3d4 <main@@Base+0x7330>
   1dc34:	mov	r0, sl
   1dc38:	mov	r1, r4
   1dc3c:	mov	r2, r6
   1dc40:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   1dc44:	mov	r7, r0
   1dc48:	cmp	r7, r6
   1dc4c:	beq	1e854 <main@@Base+0x87b0>
   1dc50:	ldrb	r0, [r7]
   1dc54:	cmp	r0, #44	; 0x2c
   1dc58:	bne	1ea00 <main@@Base+0x895c>
   1dc5c:	add	r1, r7, #1
   1dc60:	sub	r0, r6, r1
   1dc64:	cmp	r0, #2
   1dc68:	blt	1dc9c <main@@Base+0x7bf8>
   1dc6c:	ldrb	r0, [r1]
   1dc70:	cmp	r0, #32
   1dc74:	bls	1dc88 <main@@Base+0x7be4>
   1dc78:	mov	r4, r1
   1dc7c:	cmp	r4, r6
   1dc80:	bne	1dcb4 <main@@Base+0x7c10>
   1dc84:	b	1ea48 <main@@Base+0x89a4>
   1dc88:	bne	1dc9c <main@@Base+0x7bf8>
   1dc8c:	ldrb	r0, [r7, #2]!
   1dc90:	mov	r4, r7
   1dc94:	cmp	r0, #32
   1dc98:	bhi	1dcac <main@@Base+0x7c08>
   1dc9c:	mov	r0, sl
   1dca0:	mov	r2, r6
   1dca4:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   1dca8:	mov	r4, r0
   1dcac:	cmp	r4, r6
   1dcb0:	beq	1ea48 <main@@Base+0x89a4>
   1dcb4:	ldrb	r0, [r4]
   1dcb8:	cmp	r0, #93	; 0x5d
   1dcbc:	bne	1d354 <main@@Base+0x72b0>
   1dcc0:	b	1ea54 <main@@Base+0x89b0>
   1dcc4:	ldr	sl, [sp, #36]	; 0x24
   1dcc8:	ldr	r6, [sp, #44]	; 0x2c
   1dccc:	mov	r1, r2
   1dcd0:	mov	r0, sl
   1dcd4:	mov	r2, r6
   1dcd8:	mov	r3, #10
   1dcdc:	b	1d3c0 <main@@Base+0x731c>
   1dce0:	ldr	r6, [sp, #44]	; 0x2c
   1dce4:	ldr	sl, [sp, #36]	; 0x24
   1dce8:	bne	1dcfc <main@@Base+0x7c58>
   1dcec:	ldrb	r0, [r2, #2]!
   1dcf0:	mov	r4, r2
   1dcf4:	cmp	r0, #32
   1dcf8:	bhi	1d3c8 <main@@Base+0x7324>
   1dcfc:	mov	r0, sl
   1dd00:	mov	r2, r6
   1dd04:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   1dd08:	b	1d3c4 <main@@Base+0x7320>
   1dd0c:	bne	1dd20 <main@@Base+0x7c7c>
   1dd10:	mov	r7, r1
   1dd14:	ldrb	r0, [r7, #1]!
   1dd18:	cmp	r0, #32
   1dd1c:	bhi	1dd30 <main@@Base+0x7c8c>
   1dd20:	mov	r0, sl
   1dd24:	mov	r2, r6
   1dd28:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   1dd2c:	mov	r7, r0
   1dd30:	cmp	r7, r6
   1dd34:	beq	1dd78 <main@@Base+0x7cd4>
   1dd38:	ldrb	r0, [r7]
   1dd3c:	cmp	r0, #58	; 0x3a
   1dd40:	bne	1dd78 <main@@Base+0x7cd4>
   1dd44:	add	r1, r7, #1
   1dd48:	sub	r0, r6, r1
   1dd4c:	cmp	r0, #2
   1dd50:	blt	1fbe0 <main@@Base+0x9b3c>
   1dd54:	ldrb	r0, [r1]
   1dd58:	cmp	r0, #32
   1dd5c:	bls	1fbc8 <main@@Base+0x9b24>
   1dd60:	ldr	r6, [sp, #44]	; 0x2c
   1dd64:	ldr	sl, [sp, #36]	; 0x24
   1dd68:	mov	r7, r1
   1dd6c:	cmp	r4, r7
   1dd70:	bne	1fbf8 <main@@Base+0x9b54>
   1dd74:	b	2057c <main@@Base+0xa4d8>
   1dd78:	mov	r0, sl
   1dd7c:	mov	r1, r7
   1dd80:	mov	r2, r6
   1dd84:	mov	r3, #4
   1dd88:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   1dd8c:	b	1fbec <main@@Base+0x9b48>
   1dd90:	ldr	r6, [sp, #44]	; 0x2c
   1dd94:	ldr	sl, [sp, #36]	; 0x24
   1dd98:	bne	1dda8 <main@@Base+0x7d04>
   1dd9c:	ldrb	r0, [r4, #2]!
   1dda0:	cmp	r0, #32
   1dda4:	bhi	1ddb8 <main@@Base+0x7d14>
   1dda8:	mov	r0, sl
   1ddac:	mov	r2, r6
   1ddb0:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   1ddb4:	mov	r4, r0
   1ddb8:	cmp	r7, r4
   1ddbc:	beq	1fad0 <main@@Base+0x9a2c>
   1ddc0:	ldr	r0, [sl]
   1ddc4:	bl	31a78 <flatcc_builder_start_offset_vector@@Base>
   1ddc8:	cmp	r0, #0
   1ddcc:	bne	16fd8 <main@@Base+0xf34>
   1ddd0:	cmp	r4, r6
   1ddd4:	beq	1de1c <main@@Base+0x7d78>
   1ddd8:	ldrb	r0, [r4]
   1dddc:	cmp	r0, #91	; 0x5b
   1dde0:	bne	1de1c <main@@Base+0x7d78>
   1dde4:	add	r1, r4, #1
   1dde8:	sub	r0, r6, r1
   1ddec:	cmp	r0, #2
   1ddf0:	blt	1e874 <main@@Base+0x87d0>
   1ddf4:	ldrb	r0, [r1]
   1ddf8:	cmp	r0, #32
   1ddfc:	bls	1e85c <main@@Base+0x87b8>
   1de00:	ldr	r6, [sp, #44]	; 0x2c
   1de04:	ldr	sl, [sp, #36]	; 0x24
   1de08:	mov	r4, r1
   1de0c:	cmp	r4, r6
   1de10:	mov	r2, r6
   1de14:	bne	1e890 <main@@Base+0x87ec>
   1de18:	b	1e8e8 <main@@Base+0x8844>
   1de1c:	mov	r0, sl
   1de20:	mov	r1, r4
   1de24:	mov	r2, r6
   1de28:	mov	r3, #22
   1de2c:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   1de30:	mov	r4, r0
   1de34:	ldr	r0, [sl]
   1de38:	bl	31d30 <flatcc_builder_end_offset_vector@@Base>
   1de3c:	ldr	r5, [sp, #40]	; 0x28
   1de40:	cmp	r0, #0
   1de44:	str	r0, [sp, #52]	; 0x34
   1de48:	beq	16fd8 <main@@Base+0xf34>
   1de4c:	ldr	r0, [sl]
   1de50:	mov	r1, #11
   1de54:	bl	3316c <flatcc_builder_table_add_offset@@Base>
   1de58:	cmp	r0, #0
   1de5c:	bne	19c2c <main@@Base+0x3b88>
   1de60:	b	16fd8 <main@@Base+0xf34>
   1de64:	ldr	r6, [sp, #44]	; 0x2c
   1de68:	ldr	sl, [sp, #36]	; 0x24
   1de6c:	bne	1de7c <main@@Base+0x7dd8>
   1de70:	ldrb	r0, [r7, #2]!
   1de74:	cmp	r0, #32
   1de78:	bhi	1de8c <main@@Base+0x7de8>
   1de7c:	mov	r0, sl
   1de80:	mov	r2, r6
   1de84:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   1de88:	mov	r7, r0
   1de8c:	cmp	r9, r7
   1de90:	beq	1be94 <main@@Base+0x5df0>
   1de94:	mov	r2, r6
   1de98:	mov	r6, #0
   1de9c:	cmp	r7, r2
   1dea0:	str	r6, [fp, #-52]	; 0xffffffcc
   1dea4:	str	r6, [fp, #-56]	; 0xffffffc8
   1dea8:	str	r6, [fp, #-60]	; 0xffffffc4
   1deac:	str	r6, [sp, #56]	; 0x38
   1deb0:	beq	1def8 <main@@Base+0x7e54>
   1deb4:	sub	r0, fp, #56	; 0x38
   1deb8:	mov	r1, r7
   1debc:	add	r3, sp, #56	; 0x38
   1dec0:	mov	r8, r2
   1dec4:	str	r0, [sp]
   1dec8:	mov	r0, sl
   1decc:	bl	38fa8 <flatcc_json_parser_integer@@Base>
   1ded0:	cmp	r0, r7
   1ded4:	beq	1df10 <main@@Base+0x7e6c>
   1ded8:	mov	r1, r0
   1dedc:	ldr	r0, [sp, #56]	; 0x38
   1dee0:	cmp	r0, #0
   1dee4:	beq	1df24 <main@@Base+0x7e80>
   1dee8:	mov	r0, sl
   1deec:	mov	r2, r8
   1def0:	mov	r3, #8
   1def4:	b	1df44 <main@@Base+0x7ea0>
   1def8:	mov	r8, r2
   1defc:	mov	r4, r2
   1df00:	ldr	r5, [sp, #40]	; 0x28
   1df04:	cmp	r7, r4
   1df08:	bne	1df9c <main@@Base+0x7ef8>
   1df0c:	b	1df58 <main@@Base+0x7eb4>
   1df10:	mov	r4, r7
   1df14:	ldr	r5, [sp, #40]	; 0x28
   1df18:	cmp	r7, r4
   1df1c:	bne	1df9c <main@@Base+0x7ef8>
   1df20:	b	1df58 <main@@Base+0x7eb4>
   1df24:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1df28:	cmp	r0, #0
   1df2c:	beq	1ea24 <main@@Base+0x8980>
   1df30:	ldr	sl, [sp, #36]	; 0x24
   1df34:	ldr	r2, [sp, #44]	; 0x2c
   1df38:	mov	r3, #7
   1df3c:	mov	r0, sl
   1df40:	mov	r8, r2
   1df44:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   1df48:	mov	r4, r0
   1df4c:	ldr	r5, [sp, #40]	; 0x28
   1df50:	cmp	r7, r4
   1df54:	bne	1df9c <main@@Base+0x7ef8>
   1df58:	sub	r0, fp, #60	; 0x3c
   1df5c:	mov	r1, r7
   1df60:	mov	r2, r8
   1df64:	mov	r4, r8
   1df68:	str	r0, [sp]
   1df6c:	movw	r0, #268	; 0x10c
   1df70:	movt	r0, #6
   1df74:	add	r3, r0, #36	; 0x24
   1df78:	mov	r0, sl
   1df7c:	bl	2649c <main@@Base+0x103f8>
   1df80:	cmp	r0, r7
   1df84:	cmpne	r0, r4
   1df88:	beq	218bc <main@@Base+0xb818>
   1df8c:	ldr	r6, [fp, #-60]	; 0xffffffc4
   1df90:	ldr	sl, [sp, #36]	; 0x24
   1df94:	ldr	r5, [sp, #40]	; 0x28
   1df98:	mov	r4, r0
   1df9c:	cmp	r6, #0
   1dfa0:	bne	1dfb0 <main@@Base+0x7f0c>
   1dfa4:	ldrb	r0, [sl, #8]
   1dfa8:	tst	r0, #2
   1dfac:	beq	1cc84 <main@@Base+0x6be0>
   1dfb0:	ldr	r0, [sl]
   1dfb4:	mov	r1, #17
   1dfb8:	mov	r2, #4
   1dfbc:	mov	r3, #4
   1dfc0:	bl	332fc <flatcc_builder_table_add@@Base>
   1dfc4:	cmp	r0, #0
   1dfc8:	beq	218b8 <main@@Base+0xb814>
   1dfcc:	str	r6, [r0]
   1dfd0:	b	1cc84 <main@@Base+0x6be0>
   1dfd4:	ldr	r6, [sp, #44]	; 0x2c
   1dfd8:	ldr	sl, [sp, #36]	; 0x24
   1dfdc:	bne	1dfec <main@@Base+0x7f48>
   1dfe0:	ldrb	r0, [r7, #2]!
   1dfe4:	cmp	r0, #32
   1dfe8:	bhi	1dffc <main@@Base+0x7f58>
   1dfec:	mov	r0, sl
   1dff0:	mov	r2, r6
   1dff4:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   1dff8:	mov	r7, r0
   1dffc:	cmp	r9, r7
   1e000:	beq	1bf8c <main@@Base+0x5ee8>
   1e004:	mov	r2, r6
   1e008:	mov	r6, #0
   1e00c:	cmp	r7, r2
   1e010:	str	r6, [fp, #-52]	; 0xffffffcc
   1e014:	str	r6, [fp, #-56]	; 0xffffffc8
   1e018:	str	r6, [sp, #60]	; 0x3c
   1e01c:	str	r6, [sp, #56]	; 0x38
   1e020:	str	r6, [fp, #-60]	; 0xffffffc4
   1e024:	beq	1e084 <main@@Base+0x7fe0>
   1e028:	sub	r0, fp, #56	; 0x38
   1e02c:	mov	r1, r7
   1e030:	sub	r3, fp, #60	; 0x3c
   1e034:	str	r0, [sp]
   1e038:	mov	r0, sl
   1e03c:	bl	38fa8 <flatcc_json_parser_integer@@Base>
   1e040:	cmp	r0, r7
   1e044:	beq	1e09c <main@@Base+0x7ff8>
   1e048:	mov	r1, r0
   1e04c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1e050:	cmp	r0, #0
   1e054:	beq	1e0b8 <main@@Base+0x8014>
   1e058:	ldr	r2, [sp, #44]	; 0x2c
   1e05c:	mov	r0, sl
   1e060:	mov	r3, #8
   1e064:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   1e068:	mov	r4, r0
   1e06c:	mov	r6, #0
   1e070:	mov	r9, #0
   1e074:	ldr	r5, [sp, #40]	; 0x28
   1e078:	cmp	r7, r4
   1e07c:	bne	1e120 <main@@Base+0x807c>
   1e080:	b	1e0d8 <main@@Base+0x8034>
   1e084:	mov	r4, r2
   1e088:	mov	r9, #0
   1e08c:	ldr	r5, [sp, #40]	; 0x28
   1e090:	cmp	r7, r4
   1e094:	bne	1e120 <main@@Base+0x807c>
   1e098:	b	1e0d8 <main@@Base+0x8034>
   1e09c:	mov	r6, #0
   1e0a0:	mov	r9, #0
   1e0a4:	mov	r4, r7
   1e0a8:	ldr	r5, [sp, #40]	; 0x28
   1e0ac:	cmp	r7, r4
   1e0b0:	bne	1e120 <main@@Base+0x807c>
   1e0b4:	b	1e0d8 <main@@Base+0x8034>
   1e0b8:	ldr	r6, [fp, #-56]	; 0xffffffc8
   1e0bc:	ldr	r9, [fp, #-52]	; 0xffffffcc
   1e0c0:	mov	r4, r1
   1e0c4:	str	r9, [sp, #60]	; 0x3c
   1e0c8:	str	r6, [sp, #56]	; 0x38
   1e0cc:	ldr	r5, [sp, #40]	; 0x28
   1e0d0:	cmp	r7, r4
   1e0d4:	bne	1e120 <main@@Base+0x807c>
   1e0d8:	add	r0, sp, #56	; 0x38
   1e0dc:	ldr	r4, [sp, #44]	; 0x2c
   1e0e0:	mov	r1, r7
   1e0e4:	str	r0, [sp]
   1e0e8:	movw	r0, #268	; 0x10c
   1e0ec:	movt	r0, #6
   1e0f0:	add	r3, r0, #60	; 0x3c
   1e0f4:	mov	r0, sl
   1e0f8:	mov	r2, r4
   1e0fc:	bl	266cc <main@@Base+0x10628>
   1e100:	cmp	r0, r7
   1e104:	cmpne	r0, r4
   1e108:	beq	218bc <main@@Base+0xb818>
   1e10c:	ldr	r6, [sp, #56]	; 0x38
   1e110:	ldr	r9, [sp, #60]	; 0x3c
   1e114:	ldr	sl, [sp, #36]	; 0x24
   1e118:	ldr	r5, [sp, #40]	; 0x28
   1e11c:	mov	r4, r0
   1e120:	orrs	r0, r6, r9
   1e124:	bne	1e134 <main@@Base+0x8090>
   1e128:	ldrb	r0, [sl, #8]
   1e12c:	tst	r0, #2
   1e130:	beq	1e154 <main@@Base+0x80b0>
   1e134:	ldr	r0, [sl]
   1e138:	mov	r1, #19
   1e13c:	mov	r2, #8
   1e140:	mov	r3, #8
   1e144:	bl	332fc <flatcc_builder_table_add@@Base>
   1e148:	cmp	r0, #0
   1e14c:	beq	218b8 <main@@Base+0xb814>
   1e150:	stm	r0, {r6, r9}
   1e154:	ldr	r6, [sp, #44]	; 0x2c
   1e158:	sub	r0, r6, r4
   1e15c:	cmp	r0, #2
   1e160:	bge	1a4a4 <main@@Base+0x4400>
   1e164:	b	1cc94 <main@@Base+0x6bf0>
   1e168:	beq	1ef08 <main@@Base+0x8e64>
   1e16c:	b	1ef18 <main@@Base+0x8e74>
   1e170:	ldr	r6, [sp, #44]	; 0x2c
   1e174:	ldr	sl, [sp, #36]	; 0x24
   1e178:	bne	1e188 <main@@Base+0x80e4>
   1e17c:	ldrb	r0, [r4, #2]!
   1e180:	cmp	r0, #32
   1e184:	bhi	1e198 <main@@Base+0x80f4>
   1e188:	mov	r0, sl
   1e18c:	mov	r2, r6
   1e190:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   1e194:	mov	r4, r0
   1e198:	cmp	r7, r4
   1e19c:	beq	1fad0 <main@@Base+0x9a2c>
   1e1a0:	ldr	r0, [sl]
   1e1a4:	bl	31a78 <flatcc_builder_start_offset_vector@@Base>
   1e1a8:	cmp	r0, #0
   1e1ac:	bne	16fd8 <main@@Base+0xf34>
   1e1b0:	cmp	r4, r6
   1e1b4:	beq	1e1f8 <main@@Base+0x8154>
   1e1b8:	ldrb	r0, [r4]
   1e1bc:	cmp	r0, #91	; 0x5b
   1e1c0:	bne	1e1f8 <main@@Base+0x8154>
   1e1c4:	add	r1, r4, #1
   1e1c8:	sub	r0, r6, r1
   1e1cc:	cmp	r0, #2
   1e1d0:	blt	1ea98 <main@@Base+0x89f4>
   1e1d4:	ldrb	r0, [r1]
   1e1d8:	cmp	r0, #32
   1e1dc:	bls	1ea80 <main@@Base+0x89dc>
   1e1e0:	ldr	r6, [sp, #44]	; 0x2c
   1e1e4:	mov	r4, r1
   1e1e8:	cmp	r4, r6
   1e1ec:	mov	r2, r6
   1e1f0:	bne	1eab4 <main@@Base+0x8a10>
   1e1f4:	b	1eb04 <main@@Base+0x8a60>
   1e1f8:	mov	r0, sl
   1e1fc:	mov	r1, r4
   1e200:	mov	r2, r6
   1e204:	mov	r3, #22
   1e208:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   1e20c:	mov	r4, r0
   1e210:	ldr	r0, [sl]
   1e214:	bl	31d30 <flatcc_builder_end_offset_vector@@Base>
   1e218:	ldr	r5, [sp, #40]	; 0x28
   1e21c:	cmp	r0, #0
   1e220:	str	r0, [sp, #52]	; 0x34
   1e224:	beq	16fd8 <main@@Base+0xf34>
   1e228:	ldr	r0, [sl]
   1e22c:	mov	r1, #10
   1e230:	bl	3316c <flatcc_builder_table_add_offset@@Base>
   1e234:	cmp	r0, #0
   1e238:	bne	19c2c <main@@Base+0x3b88>
   1e23c:	b	16fd8 <main@@Base+0xf34>
   1e240:	ldr	r6, [sp, #44]	; 0x2c
   1e244:	ldr	sl, [sp, #36]	; 0x24
   1e248:	bne	1e258 <main@@Base+0x81b4>
   1e24c:	ldrb	r0, [r4, #2]!
   1e250:	cmp	r0, #32
   1e254:	bhi	1e268 <main@@Base+0x81c4>
   1e258:	mov	r0, sl
   1e25c:	mov	r2, r6
   1e260:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   1e264:	mov	r4, r0
   1e268:	cmp	r7, r4
   1e26c:	beq	1fad0 <main@@Base+0x9a2c>
   1e270:	mov	r0, #0
   1e274:	mov	r1, #3
   1e278:	str	r0, [sp, #52]	; 0x34
   1e27c:	ldr	r0, [sl]
   1e280:	bl	31fa8 <flatcc_builder_start_table@@Base>
   1e284:	cmp	r0, #0
   1e288:	bne	217bc <main@@Base+0xb718>
   1e28c:	cmp	r4, r6
   1e290:	beq	1e2d0 <main@@Base+0x822c>
   1e294:	ldrb	r0, [r4]
   1e298:	cmp	r0, #123	; 0x7b
   1e29c:	bne	1e2d0 <main@@Base+0x822c>
   1e2a0:	add	r1, r4, #1
   1e2a4:	sub	r0, r6, r1
   1e2a8:	cmp	r0, #2
   1e2ac:	blt	20904 <main@@Base+0xa860>
   1e2b0:	ldrb	r0, [r1]
   1e2b4:	cmp	r0, #32
   1e2b8:	bls	208f4 <main@@Base+0xa850>
   1e2bc:	mov	r4, r1
   1e2c0:	ldr	r2, [sp, #44]	; 0x2c
   1e2c4:	cmp	r4, r2
   1e2c8:	bne	20920 <main@@Base+0xa87c>
   1e2cc:	b	2096c <main@@Base+0xa8c8>
   1e2d0:	mov	r0, sl
   1e2d4:	mov	r1, r4
   1e2d8:	mov	r2, r6
   1e2dc:	mov	r3, #21
   1e2e0:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   1e2e4:	mov	r4, r0
   1e2e8:	ldr	r0, [sl, #24]
   1e2ec:	cmp	r0, #0
   1e2f0:	beq	21794 <main@@Base+0xb6f0>
   1e2f4:	ldr	r6, [sp, #44]	; 0x2c
   1e2f8:	b	217bc <main@@Base+0xb718>
   1e2fc:	ldr	r6, [sp, #44]	; 0x2c
   1e300:	ldr	sl, [sp, #36]	; 0x24
   1e304:	bne	1e314 <main@@Base+0x8270>
   1e308:	ldrb	r0, [r4, #2]!
   1e30c:	cmp	r0, #32
   1e310:	bhi	1e324 <main@@Base+0x8280>
   1e314:	mov	r0, sl
   1e318:	mov	r2, r6
   1e31c:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   1e320:	mov	r4, r0
   1e324:	cmp	r7, r4
   1e328:	beq	1fad0 <main@@Base+0x9a2c>
   1e32c:	ldr	r0, [sl]
   1e330:	mov	r1, #1
   1e334:	mov	r2, #1
   1e338:	mvn	r3, #0
   1e33c:	bl	319ec <flatcc_builder_start_vector@@Base>
   1e340:	cmp	r0, #0
   1e344:	bne	16fd8 <main@@Base+0xf34>
   1e348:	cmp	r4, r6
   1e34c:	beq	1e38c <main@@Base+0x82e8>
   1e350:	ldrb	r0, [r4]
   1e354:	cmp	r0, #91	; 0x5b
   1e358:	bne	1e38c <main@@Base+0x82e8>
   1e35c:	add	r1, r4, #1
   1e360:	sub	r0, r6, r1
   1e364:	cmp	r0, #2
   1e368:	blt	1ec3c <main@@Base+0x8b98>
   1e36c:	ldrb	r0, [r1]
   1e370:	cmp	r0, #32
   1e374:	bls	1ec24 <main@@Base+0x8b80>
   1e378:	ldr	r6, [sp, #44]	; 0x2c
   1e37c:	mov	r4, r1
   1e380:	cmp	r4, r6
   1e384:	bne	1ec54 <main@@Base+0x8bb0>
   1e388:	b	1ecb0 <main@@Base+0x8c0c>
   1e38c:	mov	r0, sl
   1e390:	mov	r1, r4
   1e394:	mov	r2, r6
   1e398:	mov	r3, #22
   1e39c:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   1e3a0:	mov	r4, r0
   1e3a4:	ldr	r0, [sl]
   1e3a8:	bl	32c64 <flatcc_builder_end_vector@@Base>
   1e3ac:	ldr	r5, [sp, #40]	; 0x28
   1e3b0:	cmp	r0, #0
   1e3b4:	str	r0, [sp, #52]	; 0x34
   1e3b8:	beq	16fd8 <main@@Base+0xf34>
   1e3bc:	ldr	r0, [sl]
   1e3c0:	mov	r1, #5
   1e3c4:	bl	3316c <flatcc_builder_table_add_offset@@Base>
   1e3c8:	cmp	r0, #0
   1e3cc:	bne	19c2c <main@@Base+0x3b88>
   1e3d0:	b	16fd8 <main@@Base+0xf34>
   1e3d4:	ldr	r6, [sp, #44]	; 0x2c
   1e3d8:	ldr	sl, [sp, #36]	; 0x24
   1e3dc:	ldr	r5, [sp, #40]	; 0x28
   1e3e0:	bne	1e3f4 <main@@Base+0x8350>
   1e3e4:	ldrb	r0, [r4, #2]!
   1e3e8:	mov	r7, r4
   1e3ec:	cmp	r0, #32
   1e3f0:	bhi	1a568 <main@@Base+0x44c4>
   1e3f4:	mov	r0, sl
   1e3f8:	mov	r2, r6
   1e3fc:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   1e400:	b	1a564 <main@@Base+0x44c0>
   1e404:	ldr	r6, [sp, #44]	; 0x2c
   1e408:	ldr	sl, [sp, #36]	; 0x24
   1e40c:	bne	1e41c <main@@Base+0x8378>
   1e410:	ldrb	r0, [r4, #2]!
   1e414:	cmp	r0, #32
   1e418:	bhi	1e42c <main@@Base+0x8388>
   1e41c:	mov	r0, sl
   1e420:	mov	r2, r6
   1e424:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   1e428:	mov	r4, r0
   1e42c:	cmp	r9, r4
   1e430:	beq	1e494 <main@@Base+0x83f0>
   1e434:	ldr	r0, [sl]
   1e438:	mov	r1, #8
   1e43c:	mov	r2, #8
   1e440:	mvn	r3, #-536870912	; 0xe0000000
   1e444:	bl	319ec <flatcc_builder_start_vector@@Base>
   1e448:	cmp	r0, #0
   1e44c:	bne	16fd8 <main@@Base+0xf34>
   1e450:	cmp	r4, r6
   1e454:	beq	1e4a0 <main@@Base+0x83fc>
   1e458:	ldrb	r0, [r4]
   1e45c:	cmp	r0, #91	; 0x5b
   1e460:	bne	1e4a0 <main@@Base+0x83fc>
   1e464:	add	r1, r4, #1
   1e468:	sub	r0, r6, r1
   1e46c:	cmp	r0, #2
   1e470:	blt	1f76c <main@@Base+0x96c8>
   1e474:	ldrb	r0, [r1]
   1e478:	cmp	r0, #32
   1e47c:	bls	1f754 <main@@Base+0x96b0>
   1e480:	ldr	r6, [sp, #44]	; 0x2c
   1e484:	mov	r4, r1
   1e488:	cmp	r4, r6
   1e48c:	bne	1f784 <main@@Base+0x96e0>
   1e490:	b	1f7e0 <main@@Base+0x973c>
   1e494:	mov	r0, sl
   1e498:	mov	r1, r9
   1e49c:	b	1a488 <main@@Base+0x43e4>
   1e4a0:	mov	r0, sl
   1e4a4:	mov	r1, r4
   1e4a8:	mov	r2, r6
   1e4ac:	mov	r3, #22
   1e4b0:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   1e4b4:	mov	r4, r0
   1e4b8:	ldr	r0, [sl]
   1e4bc:	bl	32c64 <flatcc_builder_end_vector@@Base>
   1e4c0:	ldr	r5, [sp, #40]	; 0x28
   1e4c4:	cmp	r0, #0
   1e4c8:	str	r0, [sp, #52]	; 0x34
   1e4cc:	beq	16fd8 <main@@Base+0xf34>
   1e4d0:	ldr	r0, [sl]
   1e4d4:	mov	r1, #32
   1e4d8:	bl	3316c <flatcc_builder_table_add_offset@@Base>
   1e4dc:	cmp	r0, #0
   1e4e0:	bne	19c2c <main@@Base+0x3b88>
   1e4e4:	b	16fd8 <main@@Base+0xf34>
   1e4e8:	ldr	r6, [sp, #44]	; 0x2c
   1e4ec:	bne	1e500 <main@@Base+0x845c>
   1e4f0:	mov	r7, r1
   1e4f4:	ldrb	r0, [r7, #1]!
   1e4f8:	cmp	r0, #32
   1e4fc:	bhi	1e510 <main@@Base+0x846c>
   1e500:	ldr	r0, [sp, #36]	; 0x24
   1e504:	mov	r2, r6
   1e508:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   1e50c:	mov	r7, r0
   1e510:	cmp	r7, r6
   1e514:	beq	1e55c <main@@Base+0x84b8>
   1e518:	ldrb	r0, [r7]
   1e51c:	cmp	r0, #58	; 0x3a
   1e520:	bne	1e55c <main@@Base+0x84b8>
   1e524:	ldr	sl, [sp, #36]	; 0x24
   1e528:	add	r1, r7, #1
   1e52c:	sub	r0, r6, r1
   1e530:	cmp	r0, #2
   1e534:	blt	203f4 <main@@Base+0xa350>
   1e538:	ldrb	r0, [r1]
   1e53c:	cmp	r0, #32
   1e540:	bls	203dc <main@@Base+0xa338>
   1e544:	ldr	r6, [sp, #44]	; 0x2c
   1e548:	ldr	sl, [sp, #36]	; 0x24
   1e54c:	mov	r7, r1
   1e550:	cmp	r4, r7
   1e554:	bne	2040c <main@@Base+0xa368>
   1e558:	b	2057c <main@@Base+0xa4d8>
   1e55c:	ldr	sl, [sp, #36]	; 0x24
   1e560:	mov	r1, r7
   1e564:	mov	r2, r6
   1e568:	mov	r3, #4
   1e56c:	mov	r0, sl
   1e570:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   1e574:	b	20400 <main@@Base+0xa35c>
   1e578:	ldr	r6, [sp, #44]	; 0x2c
   1e57c:	bne	1e590 <main@@Base+0x84ec>
   1e580:	mov	r7, r1
   1e584:	ldrb	r0, [r7, #1]!
   1e588:	cmp	r0, #32
   1e58c:	bhi	1e5a0 <main@@Base+0x84fc>
   1e590:	ldr	r0, [sp, #36]	; 0x24
   1e594:	mov	r2, r6
   1e598:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   1e59c:	mov	r7, r0
   1e5a0:	cmp	r7, r6
   1e5a4:	beq	1e5ec <main@@Base+0x8548>
   1e5a8:	ldrb	r0, [r7]
   1e5ac:	cmp	r0, #58	; 0x3a
   1e5b0:	bne	1e5ec <main@@Base+0x8548>
   1e5b4:	ldr	sl, [sp, #36]	; 0x24
   1e5b8:	add	r1, r7, #1
   1e5bc:	sub	r0, r6, r1
   1e5c0:	cmp	r0, #2
   1e5c4:	blt	204e4 <main@@Base+0xa440>
   1e5c8:	ldrb	r0, [r1]
   1e5cc:	cmp	r0, #32
   1e5d0:	bls	204cc <main@@Base+0xa428>
   1e5d4:	ldr	r6, [sp, #44]	; 0x2c
   1e5d8:	ldr	sl, [sp, #36]	; 0x24
   1e5dc:	mov	r7, r1
   1e5e0:	cmp	r4, r7
   1e5e4:	bne	204fc <main@@Base+0xa458>
   1e5e8:	b	2057c <main@@Base+0xa4d8>
   1e5ec:	ldr	sl, [sp, #36]	; 0x24
   1e5f0:	mov	r1, r7
   1e5f4:	mov	r2, r6
   1e5f8:	mov	r3, #4
   1e5fc:	mov	r0, sl
   1e600:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   1e604:	b	204f0 <main@@Base+0xa44c>
   1e608:	ldr	r6, [sp, #44]	; 0x2c
   1e60c:	ldr	sl, [sp, #36]	; 0x24
   1e610:	bne	1e620 <main@@Base+0x857c>
   1e614:	ldrb	r0, [r4, #2]!
   1e618:	cmp	r0, #32
   1e61c:	bhi	1e630 <main@@Base+0x858c>
   1e620:	mov	r0, sl
   1e624:	mov	r2, r6
   1e628:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   1e62c:	mov	r4, r0
   1e630:	cmp	r7, r4
   1e634:	beq	1fad0 <main@@Base+0x9a2c>
   1e638:	cmp	r4, r6
   1e63c:	beq	1e6a8 <main@@Base+0x8604>
   1e640:	ldrb	r0, [r4]
   1e644:	cmp	r0, #91	; 0x5b
   1e648:	bne	1e6a8 <main@@Base+0x8604>
   1e64c:	ldr	r0, [sl]
   1e650:	mov	r1, #1
   1e654:	mov	r2, #1
   1e658:	mvn	r3, #0
   1e65c:	bl	319ec <flatcc_builder_start_vector@@Base>
   1e660:	cmp	r0, #0
   1e664:	bne	218c0 <main@@Base+0xb81c>
   1e668:	ldrb	r0, [r4]
   1e66c:	cmp	r0, #91	; 0x5b
   1e670:	bne	1e704 <main@@Base+0x8660>
   1e674:	ldr	r0, [sp, #44]	; 0x2c
   1e678:	add	r1, r4, #1
   1e67c:	sub	r0, r0, r1
   1e680:	cmp	r0, #2
   1e684:	blt	20660 <main@@Base+0xa5bc>
   1e688:	ldrb	r0, [r1]
   1e68c:	cmp	r0, #32
   1e690:	bls	20650 <main@@Base+0xa5ac>
   1e694:	mov	r4, r1
   1e698:	ldr	r6, [sp, #44]	; 0x2c
   1e69c:	cmp	r4, r6
   1e6a0:	bne	2067c <main@@Base+0xa5d8>
   1e6a4:	b	2068c <main@@Base+0xa5e8>
   1e6a8:	ldr	r0, [sl]
   1e6ac:	mov	r1, #0
   1e6b0:	mov	r2, #0
   1e6b4:	mov	r3, #0
   1e6b8:	bl	309ac <flatcc_builder_start_buffer@@Base>
   1e6bc:	cmp	r0, #0
   1e6c0:	bne	16fd8 <main@@Base+0xf34>
   1e6c4:	mov	r0, sl
   1e6c8:	mov	r1, r4
   1e6cc:	mov	r2, r6
   1e6d0:	add	r3, sp, #52	; 0x34
   1e6d4:	bl	16f98 <main@@Base+0xef4>
   1e6d8:	ldr	r1, [sp, #52]	; 0x34
   1e6dc:	mov	r4, r0
   1e6e0:	cmp	r1, #0
   1e6e4:	beq	16fd8 <main@@Base+0xf34>
   1e6e8:	ldr	r0, [sl]
   1e6ec:	bl	30b9c <flatcc_builder_end_buffer@@Base>
   1e6f0:	ldr	r5, [sp, #40]	; 0x28
   1e6f4:	cmp	r0, #0
   1e6f8:	str	r0, [sp, #52]	; 0x34
   1e6fc:	bne	21730 <main@@Base+0xb68c>
   1e700:	b	16fd8 <main@@Base+0xf34>
   1e704:	ldr	r0, [sp, #36]	; 0x24
   1e708:	ldr	r2, [sp, #44]	; 0x2c
   1e70c:	mov	r1, r4
   1e710:	mov	r3, #22
   1e714:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   1e718:	b	2170c <main@@Base+0xb668>
   1e71c:	ldr	r6, [sp, #44]	; 0x2c
   1e720:	ldr	sl, [sp, #36]	; 0x24
   1e724:	bne	1e734 <main@@Base+0x8690>
   1e728:	ldrb	r0, [r7, #2]!
   1e72c:	cmp	r0, #32
   1e730:	bhi	1e744 <main@@Base+0x86a0>
   1e734:	mov	r0, sl
   1e738:	mov	r2, r6
   1e73c:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   1e740:	mov	r7, r0
   1e744:	cmp	r4, r7
   1e748:	beq	2057c <main@@Base+0xa4d8>
   1e74c:	mov	r2, r6
   1e750:	mov	r6, #0
   1e754:	cmp	r7, r2
   1e758:	str	r6, [fp, #-52]	; 0xffffffcc
   1e75c:	str	r6, [fp, #-56]	; 0xffffffc8
   1e760:	str	r6, [fp, #-60]	; 0xffffffc4
   1e764:	str	r6, [sp, #56]	; 0x38
   1e768:	beq	1e7c8 <main@@Base+0x8724>
   1e76c:	sub	r0, fp, #56	; 0x38
   1e770:	mov	r1, r7
   1e774:	add	r3, sp, #56	; 0x38
   1e778:	mov	r8, r2
   1e77c:	str	r0, [sp]
   1e780:	mov	r0, sl
   1e784:	bl	38fa8 <flatcc_json_parser_integer@@Base>
   1e788:	cmp	r0, r7
   1e78c:	beq	1e7e0 <main@@Base+0x873c>
   1e790:	ldr	r2, [sp, #56]	; 0x38
   1e794:	mov	r4, r0
   1e798:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1e79c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1e7a0:	cmp	r2, #0
   1e7a4:	beq	1e7f4 <main@@Base+0x8750>
   1e7a8:	subs	r2, r0, #-2147483647	; 0x80000001
   1e7ac:	sbcs	r1, r1, #0
   1e7b0:	bcc	1e830 <main@@Base+0x878c>
   1e7b4:	ldr	sl, [sp, #36]	; 0x24
   1e7b8:	ldr	r2, [sp, #44]	; 0x2c
   1e7bc:	mov	r1, r4
   1e7c0:	mov	r3, #8
   1e7c4:	b	1e810 <main@@Base+0x876c>
   1e7c8:	mov	r8, r2
   1e7cc:	mov	r4, r2
   1e7d0:	ldr	r5, [sp, #40]	; 0x28
   1e7d4:	cmp	r7, r4
   1e7d8:	bne	1fb94 <main@@Base+0x9af0>
   1e7dc:	b	1fb50 <main@@Base+0x9aac>
   1e7e0:	mov	r4, r7
   1e7e4:	ldr	r5, [sp, #40]	; 0x28
   1e7e8:	cmp	r7, r4
   1e7ec:	bne	1fb94 <main@@Base+0x9af0>
   1e7f0:	b	1fb50 <main@@Base+0x9aac>
   1e7f4:	subs	r2, r0, #-2147483648	; 0x80000000
   1e7f8:	sbcs	r1, r1, #0
   1e7fc:	bcc	1fb34 <main@@Base+0x9a90>
   1e800:	ldr	sl, [sp, #36]	; 0x24
   1e804:	ldr	r2, [sp, #44]	; 0x2c
   1e808:	mov	r1, r4
   1e80c:	mov	r3, #7
   1e810:	mov	r0, sl
   1e814:	mov	r8, r2
   1e818:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   1e81c:	mov	r4, r0
   1e820:	ldr	r5, [sp, #40]	; 0x28
   1e824:	cmp	r7, r4
   1e828:	bne	1fb94 <main@@Base+0x9af0>
   1e82c:	b	1fb50 <main@@Base+0x9aac>
   1e830:	rsb	r6, r0, #0
   1e834:	b	1fb38 <main@@Base+0x9a94>
   1e838:	ldr	sl, [sp, #36]	; 0x24
   1e83c:	ldr	r6, [sp, #44]	; 0x2c
   1e840:	mov	r1, r4
   1e844:	mov	r0, sl
   1e848:	mov	r2, r6
   1e84c:	mov	r3, #9
   1e850:	b	1ab70 <main@@Base+0x4acc>
   1e854:	mov	r7, r6
   1e858:	b	1ca44 <main@@Base+0x69a0>
   1e85c:	ldr	r6, [sp, #44]	; 0x2c
   1e860:	ldr	sl, [sp, #36]	; 0x24
   1e864:	bne	1e874 <main@@Base+0x87d0>
   1e868:	ldrb	r0, [r4, #2]!
   1e86c:	cmp	r0, #32
   1e870:	bhi	1e884 <main@@Base+0x87e0>
   1e874:	mov	r0, sl
   1e878:	mov	r2, r6
   1e87c:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   1e880:	mov	r4, r0
   1e884:	cmp	r4, r6
   1e888:	mov	r2, r6
   1e88c:	beq	1e8e8 <main@@Base+0x8844>
   1e890:	ldrb	r0, [r4]
   1e894:	cmp	r0, #93	; 0x5d
   1e898:	bne	1e8dc <main@@Base+0x8838>
   1e89c:	ldr	r6, [sp, #44]	; 0x2c
   1e8a0:	ldr	sl, [sp, #36]	; 0x24
   1e8a4:	add	r1, r4, #1
   1e8a8:	sub	r0, r6, r1
   1e8ac:	cmp	r0, #2
   1e8b0:	blt	215b0 <main@@Base+0xb50c>
   1e8b4:	ldrb	r0, [r1]
   1e8b8:	cmp	r0, #32
   1e8bc:	bhi	1ffe0 <main@@Base+0x9f3c>
   1e8c0:	ldr	r6, [sp, #44]	; 0x2c
   1e8c4:	ldr	sl, [sp, #36]	; 0x24
   1e8c8:	bne	215b0 <main@@Base+0xb50c>
   1e8cc:	ldrb	r0, [r4, #2]!
   1e8d0:	cmp	r0, #32
   1e8d4:	bhi	1de34 <main@@Base+0x7d90>
   1e8d8:	b	215b0 <main@@Base+0xb50c>
   1e8dc:	ldr	r6, [sp, #44]	; 0x2c
   1e8e0:	ldr	sl, [sp, #36]	; 0x24
   1e8e4:	mov	r2, r4
   1e8e8:	mov	r1, r2
   1e8ec:	mov	r0, sl
   1e8f0:	mov	r2, r6
   1e8f4:	add	r3, sp, #52	; 0x34
   1e8f8:	bl	16f98 <main@@Base+0xef4>
   1e8fc:	mov	r4, r0
   1e900:	ldr	r0, [sp, #52]	; 0x34
   1e904:	cmp	r0, #0
   1e908:	beq	16fd8 <main@@Base+0xf34>
   1e90c:	ldr	r0, [sl]
   1e910:	mov	r1, #1
   1e914:	bl	31234 <flatcc_builder_extend_offset_vector@@Base>
   1e918:	cmp	r0, #0
   1e91c:	beq	16fd8 <main@@Base+0xf34>
   1e920:	ldr	r1, [sp, #52]	; 0x34
   1e924:	str	r1, [r0]
   1e928:	sub	r0, r6, r4
   1e92c:	cmp	r0, #2
   1e930:	blt	1e964 <main@@Base+0x88c0>
   1e934:	ldrb	r0, [r4]
   1e938:	cmp	r0, #32
   1e93c:	bls	1e950 <main@@Base+0x88ac>
   1e940:	mov	r2, r4
   1e944:	cmp	r2, r6
   1e948:	bne	1e980 <main@@Base+0x88dc>
   1e94c:	b	1ff50 <main@@Base+0x9eac>
   1e950:	bne	1e964 <main@@Base+0x88c0>
   1e954:	mov	r2, r4
   1e958:	ldrb	r0, [r2, #1]!
   1e95c:	cmp	r0, #32
   1e960:	bhi	1e978 <main@@Base+0x88d4>
   1e964:	mov	r0, sl
   1e968:	mov	r1, r4
   1e96c:	mov	r2, r6
   1e970:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   1e974:	mov	r2, r0
   1e978:	cmp	r2, r6
   1e97c:	beq	1ff50 <main@@Base+0x9eac>
   1e980:	ldrb	r0, [r2]
   1e984:	cmp	r0, #44	; 0x2c
   1e988:	bne	1ffb4 <main@@Base+0x9f10>
   1e98c:	add	r1, r2, #1
   1e990:	sub	r0, r6, r1
   1e994:	cmp	r0, #2
   1e998:	blt	1e9c8 <main@@Base+0x8924>
   1e99c:	ldrb	r0, [r1]
   1e9a0:	cmp	r0, #32
   1e9a4:	bls	1e9b8 <main@@Base+0x8914>
   1e9a8:	mov	r2, r1
   1e9ac:	cmp	r2, r6
   1e9b0:	bne	1e9e0 <main@@Base+0x893c>
   1e9b4:	b	20004 <main@@Base+0x9f60>
   1e9b8:	bne	1e9c8 <main@@Base+0x8924>
   1e9bc:	ldrb	r0, [r2, #2]!
   1e9c0:	cmp	r0, #32
   1e9c4:	bhi	1e9d8 <main@@Base+0x8934>
   1e9c8:	mov	r0, sl
   1e9cc:	mov	r2, r6
   1e9d0:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   1e9d4:	mov	r2, r0
   1e9d8:	cmp	r2, r6
   1e9dc:	beq	20004 <main@@Base+0x9f60>
   1e9e0:	ldrb	r0, [r2]
   1e9e4:	cmp	r0, #93	; 0x5d
   1e9e8:	bne	1e8e8 <main@@Base+0x8844>
   1e9ec:	add	r1, r2, #1
   1e9f0:	sub	r0, r6, r1
   1e9f4:	cmp	r0, #2
   1e9f8:	bge	1ffd4 <main@@Base+0x9f30>
   1e9fc:	b	215b0 <main@@Base+0xb50c>
   1ea00:	cmp	r0, #93	; 0x5d
   1ea04:	bne	1ff20 <main@@Base+0x9e7c>
   1ea08:	ldr	r6, [sp, #44]	; 0x2c
   1ea0c:	ldr	sl, [sp, #36]	; 0x24
   1ea10:	add	r1, r7, #1
   1ea14:	sub	r0, r6, r1
   1ea18:	cmp	r0, #2
   1ea1c:	bge	1d328 <main@@Base+0x7284>
   1ea20:	b	21328 <main@@Base+0xb284>
   1ea24:	ldr	r6, [fp, #-56]	; 0xffffffc8
   1ea28:	ldr	r8, [sp, #44]	; 0x2c
   1ea2c:	ldr	sl, [sp, #36]	; 0x24
   1ea30:	mov	r4, r1
   1ea34:	str	r6, [fp, #-60]	; 0xffffffc4
   1ea38:	ldr	r5, [sp, #40]	; 0x28
   1ea3c:	cmp	r7, r4
   1ea40:	bne	1df9c <main@@Base+0x7ef8>
   1ea44:	b	1df58 <main@@Base+0x7eb4>
   1ea48:	mov	r0, sl
   1ea4c:	mov	r1, r6
   1ea50:	b	1ff30 <main@@Base+0x9e8c>
   1ea54:	add	r1, r4, #1
   1ea58:	sub	r0, r6, r1
   1ea5c:	cmp	r0, #2
   1ea60:	blt	21328 <main@@Base+0xb284>
   1ea64:	ldrb	r0, [r1]
   1ea68:	cmp	r0, #32
   1ea6c:	bls	2130c <main@@Base+0xb268>
   1ea70:	ldr	r6, [sp, #44]	; 0x2c
   1ea74:	ldr	sl, [sp, #36]	; 0x24
   1ea78:	mov	r7, r1
   1ea7c:	b	1ca44 <main@@Base+0x69a0>
   1ea80:	ldr	r6, [sp, #44]	; 0x2c
   1ea84:	ldr	sl, [sp, #36]	; 0x24
   1ea88:	bne	1ea98 <main@@Base+0x89f4>
   1ea8c:	ldrb	r0, [r4, #2]!
   1ea90:	cmp	r0, #32
   1ea94:	bhi	1eaa8 <main@@Base+0x8a04>
   1ea98:	mov	r0, sl
   1ea9c:	mov	r2, r6
   1eaa0:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   1eaa4:	mov	r4, r0
   1eaa8:	cmp	r4, r6
   1eaac:	mov	r2, r6
   1eab0:	beq	1eb04 <main@@Base+0x8a60>
   1eab4:	ldrb	r0, [r4]
   1eab8:	cmp	r0, #93	; 0x5d
   1eabc:	bne	1eb00 <main@@Base+0x8a5c>
   1eac0:	ldr	r6, [sp, #44]	; 0x2c
   1eac4:	ldr	sl, [sp, #36]	; 0x24
   1eac8:	add	r1, r4, #1
   1eacc:	sub	r0, r6, r1
   1ead0:	cmp	r0, #2
   1ead4:	blt	21660 <main@@Base+0xb5bc>
   1ead8:	ldrb	r0, [r1]
   1eadc:	cmp	r0, #32
   1eae0:	bhi	20098 <main@@Base+0x9ff4>
   1eae4:	ldr	r6, [sp, #44]	; 0x2c
   1eae8:	ldr	sl, [sp, #36]	; 0x24
   1eaec:	bne	21660 <main@@Base+0xb5bc>
   1eaf0:	ldrb	r0, [r4, #2]!
   1eaf4:	cmp	r0, #32
   1eaf8:	bhi	1e210 <main@@Base+0x816c>
   1eafc:	b	21660 <main@@Base+0xb5bc>
   1eb00:	mov	r2, r4
   1eb04:	ldr	r6, [sp, #44]	; 0x2c
   1eb08:	ldr	sl, [sp, #36]	; 0x24
   1eb0c:	mov	r1, r2
   1eb10:	mov	r0, sl
   1eb14:	mov	r2, r6
   1eb18:	add	r3, sp, #52	; 0x34
   1eb1c:	bl	39580 <flatcc_json_parser_build_string@@Base>
   1eb20:	mov	r4, r0
   1eb24:	ldr	r0, [sp, #52]	; 0x34
   1eb28:	cmp	r0, #0
   1eb2c:	beq	16fd8 <main@@Base+0xf34>
   1eb30:	ldr	r0, [sl]
   1eb34:	mov	r1, #1
   1eb38:	bl	31234 <flatcc_builder_extend_offset_vector@@Base>
   1eb3c:	cmp	r0, #0
   1eb40:	beq	16fd8 <main@@Base+0xf34>
   1eb44:	ldr	r1, [sp, #52]	; 0x34
   1eb48:	str	r1, [r0]
   1eb4c:	sub	r0, r6, r4
   1eb50:	cmp	r0, #2
   1eb54:	blt	1eb88 <main@@Base+0x8ae4>
   1eb58:	ldrb	r0, [r4]
   1eb5c:	cmp	r0, #32
   1eb60:	bls	1eb74 <main@@Base+0x8ad0>
   1eb64:	mov	r2, r4
   1eb68:	cmp	r2, r6
   1eb6c:	bne	1eba4 <main@@Base+0x8b00>
   1eb70:	b	20040 <main@@Base+0x9f9c>
   1eb74:	bne	1eb88 <main@@Base+0x8ae4>
   1eb78:	mov	r2, r4
   1eb7c:	ldrb	r0, [r2, #1]!
   1eb80:	cmp	r0, #32
   1eb84:	bhi	1eb9c <main@@Base+0x8af8>
   1eb88:	mov	r0, sl
   1eb8c:	mov	r1, r4
   1eb90:	mov	r2, r6
   1eb94:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   1eb98:	mov	r2, r0
   1eb9c:	cmp	r2, r6
   1eba0:	beq	20040 <main@@Base+0x9f9c>
   1eba4:	ldrb	r0, [r2]
   1eba8:	cmp	r0, #44	; 0x2c
   1ebac:	bne	2006c <main@@Base+0x9fc8>
   1ebb0:	add	r1, r2, #1
   1ebb4:	sub	r0, r6, r1
   1ebb8:	cmp	r0, #2
   1ebbc:	blt	1ebec <main@@Base+0x8b48>
   1ebc0:	ldrb	r0, [r1]
   1ebc4:	cmp	r0, #32
   1ebc8:	bls	1ebdc <main@@Base+0x8b38>
   1ebcc:	mov	r2, r1
   1ebd0:	cmp	r2, r6
   1ebd4:	bne	1ec04 <main@@Base+0x8b60>
   1ebd8:	b	200cc <main@@Base+0xa028>
   1ebdc:	bne	1ebec <main@@Base+0x8b48>
   1ebe0:	ldrb	r0, [r2, #2]!
   1ebe4:	cmp	r0, #32
   1ebe8:	bhi	1ebfc <main@@Base+0x8b58>
   1ebec:	mov	r0, sl
   1ebf0:	mov	r2, r6
   1ebf4:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   1ebf8:	mov	r2, r0
   1ebfc:	cmp	r2, r6
   1ec00:	beq	200cc <main@@Base+0xa028>
   1ec04:	ldrb	r0, [r2]
   1ec08:	cmp	r0, #93	; 0x5d
   1ec0c:	bne	1eb0c <main@@Base+0x8a68>
   1ec10:	add	r1, r2, #1
   1ec14:	sub	r0, r6, r1
   1ec18:	cmp	r0, #2
   1ec1c:	bge	2008c <main@@Base+0x9fe8>
   1ec20:	b	21660 <main@@Base+0xb5bc>
   1ec24:	ldr	r6, [sp, #44]	; 0x2c
   1ec28:	ldr	sl, [sp, #36]	; 0x24
   1ec2c:	bne	1ec3c <main@@Base+0x8b98>
   1ec30:	ldrb	r0, [r4, #2]!
   1ec34:	cmp	r0, #32
   1ec38:	bhi	1ec4c <main@@Base+0x8ba8>
   1ec3c:	mov	r0, sl
   1ec40:	mov	r2, r6
   1ec44:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   1ec48:	mov	r4, r0
   1ec4c:	cmp	r4, r6
   1ec50:	beq	1ecb0 <main@@Base+0x8c0c>
   1ec54:	ldrb	r0, [r4]
   1ec58:	cmp	r0, #93	; 0x5d
   1ec5c:	bne	1ecac <main@@Base+0x8c08>
   1ec60:	ldr	r6, [sp, #44]	; 0x2c
   1ec64:	ldr	sl, [sp, #36]	; 0x24
   1ec68:	add	r1, r4, #1
   1ec6c:	sub	r0, r6, r1
   1ec70:	cmp	r0, #2
   1ec74:	blt	1ec9c <main@@Base+0x8bf8>
   1ec78:	ldrb	r0, [r1]
   1ec7c:	cmp	r0, #32
   1ec80:	bhi	20064 <main@@Base+0x9fc0>
   1ec84:	ldr	r6, [sp, #44]	; 0x2c
   1ec88:	ldr	sl, [sp, #36]	; 0x24
   1ec8c:	bne	1ec9c <main@@Base+0x8bf8>
   1ec90:	ldrb	r0, [r4, #2]!
   1ec94:	cmp	r0, #32
   1ec98:	bhi	1e3a4 <main@@Base+0x8300>
   1ec9c:	mov	r0, sl
   1eca0:	mov	r2, r6
   1eca4:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   1eca8:	b	1e3a0 <main@@Base+0x82fc>
   1ecac:	mov	r6, r4
   1ecb0:	mov	r0, #0
   1ecb4:	mov	r1, #1
   1ecb8:	strb	r0, [fp, #-60]	; 0xffffffc4
   1ecbc:	ldr	r0, [sp, #36]	; 0x24
   1ecc0:	ldr	r0, [r0]
   1ecc4:	bl	30e98 <flatcc_builder_extend_vector@@Base>
   1ecc8:	cmp	r0, #0
   1eccc:	beq	21914 <main@@Base+0xb870>
   1ecd0:	ldr	r5, [sp, #44]	; 0x2c
   1ecd4:	ldr	sl, [sp, #36]	; 0x24
   1ecd8:	mov	r7, r0
   1ecdc:	mov	r4, r6
   1ece0:	mov	r6, #0
   1ece4:	mov	r2, r5
   1ece8:	cmp	r4, r5
   1ecec:	str	r6, [fp, #-52]	; 0xffffffcc
   1ecf0:	str	r6, [fp, #-56]	; 0xffffffc8
   1ecf4:	strb	r6, [fp, #-60]	; 0xffffffc4
   1ecf8:	str	r6, [sp, #56]	; 0x38
   1ecfc:	beq	1ed50 <main@@Base+0x8cac>
   1ed00:	sub	r0, fp, #56	; 0x38
   1ed04:	mov	r1, r4
   1ed08:	add	r3, sp, #56	; 0x38
   1ed0c:	str	r0, [sp]
   1ed10:	mov	r0, sl
   1ed14:	bl	38fa8 <flatcc_json_parser_integer@@Base>
   1ed18:	cmp	r0, r4
   1ed1c:	beq	1ed60 <main@@Base+0x8cbc>
   1ed20:	mov	r1, r0
   1ed24:	ldr	r0, [sp, #56]	; 0x38
   1ed28:	cmp	r0, #0
   1ed2c:	beq	1ed70 <main@@Base+0x8ccc>
   1ed30:	mov	r0, sl
   1ed34:	mov	r2, r5
   1ed38:	mov	r3, #8
   1ed3c:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   1ed40:	mov	r1, r0
   1ed44:	cmp	r4, r1
   1ed48:	bne	1ee04 <main@@Base+0x8d60>
   1ed4c:	b	1edc4 <main@@Base+0x8d20>
   1ed50:	mov	r1, r2
   1ed54:	cmp	r4, r1
   1ed58:	bne	1ee04 <main@@Base+0x8d60>
   1ed5c:	b	1edc4 <main@@Base+0x8d20>
   1ed60:	mov	r1, r4
   1ed64:	cmp	r4, r1
   1ed68:	bne	1ee04 <main@@Base+0x8d60>
   1ed6c:	b	1edc4 <main@@Base+0x8d20>
   1ed70:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1ed74:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1ed78:	subs	r3, r0, #256	; 0x100
   1ed7c:	sbcs	r2, r2, #0
   1ed80:	bcc	1edac <main@@Base+0x8d08>
   1ed84:	ldr	sl, [sp, #36]	; 0x24
   1ed88:	ldr	r2, [sp, #44]	; 0x2c
   1ed8c:	mov	r3, #7
   1ed90:	mov	r0, sl
   1ed94:	mov	r5, r2
   1ed98:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   1ed9c:	mov	r1, r0
   1eda0:	cmp	r4, r1
   1eda4:	bne	1ee04 <main@@Base+0x8d60>
   1eda8:	b	1edc4 <main@@Base+0x8d20>
   1edac:	ldr	r5, [sp, #44]	; 0x2c
   1edb0:	ldr	sl, [sp, #36]	; 0x24
   1edb4:	mov	r6, r0
   1edb8:	strb	r0, [fp, #-60]	; 0xffffffc4
   1edbc:	cmp	r4, r1
   1edc0:	bne	1ee04 <main@@Base+0x8d60>
   1edc4:	sub	r0, fp, #60	; 0x3c
   1edc8:	mov	r1, r4
   1edcc:	mov	r2, r5
   1edd0:	mov	r6, r5
   1edd4:	str	r0, [sp]
   1edd8:	movw	r0, #148	; 0x94
   1eddc:	movt	r0, #6
   1ede0:	add	r3, r0, #24
   1ede4:	mov	r0, sl
   1ede8:	bl	239ac <main@@Base+0xd908>
   1edec:	mov	r1, r0
   1edf0:	cmp	r0, r4
   1edf4:	cmpne	r1, r6
   1edf8:	beq	218ec <main@@Base+0xb848>
   1edfc:	ldrb	r6, [fp, #-60]	; 0xffffffc4
   1ee00:	ldr	sl, [sp, #36]	; 0x24
   1ee04:	sub	r0, r5, r1
   1ee08:	strb	r6, [r7]
   1ee0c:	mov	r6, r5
   1ee10:	cmp	r0, #2
   1ee14:	blt	1ee48 <main@@Base+0x8da4>
   1ee18:	ldrb	r0, [r1]
   1ee1c:	cmp	r0, #32
   1ee20:	bls	1ee34 <main@@Base+0x8d90>
   1ee24:	mov	r4, r1
   1ee28:	cmp	r4, r6
   1ee2c:	bne	1ee60 <main@@Base+0x8dbc>
   1ee30:	b	1fff0 <main@@Base+0x9f4c>
   1ee34:	bne	1ee48 <main@@Base+0x8da4>
   1ee38:	mov	r4, r1
   1ee3c:	ldrb	r0, [r4, #1]!
   1ee40:	cmp	r0, #32
   1ee44:	bhi	1ee58 <main@@Base+0x8db4>
   1ee48:	mov	r0, sl
   1ee4c:	mov	r2, r6
   1ee50:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   1ee54:	mov	r4, r0
   1ee58:	cmp	r4, r6
   1ee5c:	beq	1fff0 <main@@Base+0x9f4c>
   1ee60:	ldrb	r0, [r4]
   1ee64:	cmp	r0, #44	; 0x2c
   1ee68:	bne	20010 <main@@Base+0x9f6c>
   1ee6c:	add	r1, r4, #1
   1ee70:	sub	r0, r6, r1
   1ee74:	cmp	r0, #2
   1ee78:	blt	1eea8 <main@@Base+0x8e04>
   1ee7c:	ldrb	r0, [r1]
   1ee80:	cmp	r0, #32
   1ee84:	bls	1ee98 <main@@Base+0x8df4>
   1ee88:	mov	r4, r1
   1ee8c:	cmp	r4, r6
   1ee90:	bne	1eec0 <main@@Base+0x8e1c>
   1ee94:	b	20030 <main@@Base+0x9f8c>
   1ee98:	bne	1eea8 <main@@Base+0x8e04>
   1ee9c:	ldrb	r0, [r4, #2]!
   1eea0:	cmp	r0, #32
   1eea4:	bhi	1eeb8 <main@@Base+0x8e14>
   1eea8:	mov	r0, sl
   1eeac:	mov	r2, r6
   1eeb0:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   1eeb4:	mov	r4, r0
   1eeb8:	cmp	r4, r6
   1eebc:	beq	20030 <main@@Base+0x9f8c>
   1eec0:	ldrb	r0, [r4]
   1eec4:	cmp	r0, #93	; 0x5d
   1eec8:	beq	20048 <main@@Base+0x9fa4>
   1eecc:	mov	r0, #0
   1eed0:	mov	r1, #1
   1eed4:	strb	r0, [fp, #-60]	; 0xffffffc4
   1eed8:	ldr	r0, [sl]
   1eedc:	bl	30e98 <flatcc_builder_extend_vector@@Base>
   1eee0:	mov	r7, r0
   1eee4:	cmp	r0, #0
   1eee8:	bne	1ece0 <main@@Base+0x8c3c>
   1eeec:	b	218b0 <main@@Base+0xb80c>
   1eef0:	mov	r4, r6
   1eef4:	b	1c974 <main@@Base+0x68d0>
   1eef8:	ldr	r6, [sp, #44]	; 0x2c
   1eefc:	ldr	sl, [sp, #36]	; 0x24
   1ef00:	ldr	r5, [sp, #40]	; 0x28
   1ef04:	bne	1ef18 <main@@Base+0x8e74>
   1ef08:	ldrb	r0, [r2, #2]!
   1ef0c:	mov	r4, r2
   1ef10:	cmp	r0, #32
   1ef14:	bhi	1a498 <main@@Base+0x43f4>
   1ef18:	mov	r0, sl
   1ef1c:	mov	r2, r6
   1ef20:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   1ef24:	mov	r4, r0
   1ef28:	sub	r0, r6, r4
   1ef2c:	cmp	r0, #2
   1ef30:	bge	1a4a4 <main@@Base+0x4400>
   1ef34:	b	1cc94 <main@@Base+0x6bf0>
   1ef38:	cmp	r0, #93	; 0x5d
   1ef3c:	bne	200a8 <main@@Base+0xa004>
   1ef40:	ldr	r6, [sp, #44]	; 0x2c
   1ef44:	ldr	sl, [sp, #36]	; 0x24
   1ef48:	add	r1, r2, #1
   1ef4c:	sub	r0, r6, r1
   1ef50:	cmp	r0, #2
   1ef54:	blt	212fc <main@@Base+0xb258>
   1ef58:	ldrb	r0, [r1]
   1ef5c:	cmp	r0, #32
   1ef60:	bls	212e0 <main@@Base+0xb23c>
   1ef64:	ldr	r6, [sp, #44]	; 0x2c
   1ef68:	ldr	sl, [sp, #36]	; 0x24
   1ef6c:	mov	r4, r1
   1ef70:	b	1c974 <main@@Base+0x68d0>
   1ef74:	mov	r0, sl
   1ef78:	mov	r1, r6
   1ef7c:	b	200b8 <main@@Base+0xa014>
   1ef80:	ldr	r6, [sp, #44]	; 0x2c
   1ef84:	ldr	sl, [sp, #36]	; 0x24
   1ef88:	bne	1ef98 <main@@Base+0x8ef4>
   1ef8c:	ldrb	r0, [r4, #2]!
   1ef90:	cmp	r0, #32
   1ef94:	bhi	1efa8 <main@@Base+0x8f04>
   1ef98:	mov	r0, sl
   1ef9c:	mov	r2, r6
   1efa0:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   1efa4:	mov	r4, r0
   1efa8:	cmp	r4, r6
   1efac:	mov	r2, r6
   1efb0:	beq	1f004 <main@@Base+0x8f60>
   1efb4:	ldrb	r0, [r4]
   1efb8:	cmp	r0, #125	; 0x7d
   1efbc:	bne	1f000 <main@@Base+0x8f5c>
   1efc0:	ldr	r6, [sp, #44]	; 0x2c
   1efc4:	ldr	sl, [sp, #36]	; 0x24
   1efc8:	add	r1, r4, #1
   1efcc:	sub	r0, r6, r1
   1efd0:	cmp	r0, #2
   1efd4:	blt	21554 <main@@Base+0xb4b0>
   1efd8:	ldrb	r0, [r1]
   1efdc:	cmp	r0, #32
   1efe0:	bhi	1ff84 <main@@Base+0x9ee0>
   1efe4:	ldr	r6, [sp, #44]	; 0x2c
   1efe8:	ldr	sl, [sp, #36]	; 0x24
   1efec:	bne	21554 <main@@Base+0xb4b0>
   1eff0:	ldrb	r0, [r4, #2]!
   1eff4:	cmp	r0, #32
   1eff8:	bhi	1c884 <main@@Base+0x67e0>
   1effc:	b	21554 <main@@Base+0xb4b0>
   1f000:	mov	r2, r4
   1f004:	ldr	r6, [sp, #44]	; 0x2c
   1f008:	ldr	sl, [sp, #36]	; 0x24
   1f00c:	cmp	r2, r6
   1f010:	mov	r8, r6
   1f014:	beq	1f068 <main@@Base+0x8fc4>
   1f018:	ldrb	r0, [r2]
   1f01c:	cmp	r0, #46	; 0x2e
   1f020:	beq	1f03c <main@@Base+0x8f98>
   1f024:	cmp	r0, #34	; 0x22
   1f028:	bne	1f058 <main@@Base+0x8fb4>
   1f02c:	ldr	r0, [sp, #32]
   1f030:	mov	r1, #0
   1f034:	add	r8, r2, #1
   1f038:	b	1f064 <main@@Base+0x8fc0>
   1f03c:	mov	r1, r2
   1f040:	mov	r0, sl
   1f044:	mov	r2, r6
   1f048:	mov	r3, #5
   1f04c:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   1f050:	mov	r8, r0
   1f054:	b	1f068 <main@@Base+0x8fc4>
   1f058:	ldr	r0, [sp, #32]
   1f05c:	mov	r1, #1
   1f060:	mov	r8, r2
   1f064:	str	r1, [r0]
   1f068:	sub	lr, r6, r8
   1f06c:	mov	r0, #8
   1f070:	cmp	lr, #8
   1f074:	movcc	r0, lr
   1f078:	sub	r7, r0, #1
   1f07c:	cmp	r7, #7
   1f080:	bhi	1f220 <main@@Base+0x917c>
   1f084:	add	r4, pc, #32
   1f088:	mov	r1, #0
   1f08c:	mov	ip, #0
   1f090:	mov	r9, #0
   1f094:	mov	r6, #0
   1f098:	mov	r3, #0
   1f09c:	mov	r5, #0
   1f0a0:	mov	r2, #0
   1f0a4:	mov	r0, #0
   1f0a8:	ldr	pc, [r4, r7, lsl #2]
   1f0ac:	andeq	pc, r1, r0, lsl r1	; <UNPREDICTABLE>
   1f0b0:	andeq	pc, r1, r8, lsl #2
   1f0b4:	andeq	pc, r1, r0, lsl #2
   1f0b8:	strdeq	pc, [r1], -r8
   1f0bc:	andeq	pc, r1, ip, ror #1
   1f0c0:	andeq	pc, r1, r0, ror #1
   1f0c4:	ldrdeq	pc, [r1], -r0
   1f0c8:	andeq	pc, r1, ip, asr #1
   1f0cc:	ldrb	ip, [r8, #7]
   1f0d0:	ldrb	r0, [r8, #6]
   1f0d4:	mov	r9, r1
   1f0d8:	orr	r0, ip, r0, lsl #8
   1f0dc:	mov	r1, r0
   1f0e0:	ldrb	r0, [r8, #5]
   1f0e4:	mov	r6, r9
   1f0e8:	orr	r1, r1, r0, lsl #16
   1f0ec:	ldrb	r0, [r8, #4]
   1f0f0:	mov	r3, r6
   1f0f4:	orr	r1, r1, r0, lsl #24
   1f0f8:	ldrb	r0, [r8, #3]
   1f0fc:	orr	r5, r0, r3
   1f100:	ldrb	r0, [r8, #2]
   1f104:	orr	r2, r5, r0, lsl #8
   1f108:	ldrb	r0, [r8, #1]
   1f10c:	orr	r0, r2, r0, lsl #16
   1f110:	ldrb	r2, [r8]
   1f114:	orr	r2, r0, r2, lsl #24
   1f118:	movw	r0, #0
   1f11c:	movt	r0, #25956	; 0x6564
   1f120:	subs	r0, r1, r0
   1f124:	movw	r0, #29556	; 0x7374
   1f128:	movt	r0, #28261	; 0x6e65
   1f12c:	sbcs	r0, r2, r0
   1f130:	bcs	1f1a0 <main@@Base+0x90fc>
   1f134:	movw	r0, #29793	; 0x7461
   1f138:	ldr	r6, [sp, #44]	; 0x2c
   1f13c:	movt	r0, #25697	; 0x6461
   1f140:	teq	r2, r0
   1f144:	bne	1f220 <main@@Base+0x917c>
   1f148:	cmp	lr, #5
   1f14c:	mov	r1, r8
   1f150:	blt	1f518 <main@@Base+0x9474>
   1f154:	ldr	r1, [sp, #32]
   1f158:	mov	r2, r8
   1f15c:	ldrb	r0, [r2, #4]!
   1f160:	ldr	r1, [r1]
   1f164:	cmp	r1, #0
   1f168:	beq	1f2a8 <main@@Base+0x9204>
   1f16c:	cmp	r0, #33	; 0x21
   1f170:	bcc	1f180 <main@@Base+0x90dc>
   1f174:	cmp	r0, #58	; 0x3a
   1f178:	mov	r1, r8
   1f17c:	bne	1f518 <main@@Base+0x9474>
   1f180:	ldr	r0, [sp, #32]
   1f184:	mov	r1, #0
   1f188:	str	r1, [r0]
   1f18c:	ldr	r0, [sp, #44]	; 0x2c
   1f190:	sub	r0, r0, r2
   1f194:	cmp	r0, #2
   1f198:	bge	1f2c8 <main@@Base+0x9224>
   1f19c:	b	1f37c <main@@Base+0x92d8>
   1f1a0:	movw	r0, #29292	; 0x726c
   1f1a4:	lsr	r3, r1, #8
   1f1a8:	movw	r7, #29793	; 0x7461
   1f1ac:	movt	r0, #117	; 0x75
   1f1b0:	orr	r3, r3, r2, lsl #24
   1f1b4:	movt	r7, #25697	; 0x6461
   1f1b8:	eor	r0, r0, r2, lsr #8
   1f1bc:	eor	r3, r3, r7
   1f1c0:	orrs	r0, r3, r0
   1f1c4:	bne	1f22c <main@@Base+0x9188>
   1f1c8:	cmp	lr, #8
   1f1cc:	mov	r1, r8
   1f1d0:	blt	1f588 <main@@Base+0x94e4>
   1f1d4:	ldr	r1, [sp, #32]
   1f1d8:	mov	r2, r8
   1f1dc:	ldrb	r0, [r2, #7]!
   1f1e0:	ldr	r1, [r1]
   1f1e4:	cmp	r1, #0
   1f1e8:	beq	1f2e8 <main@@Base+0x9244>
   1f1ec:	cmp	r0, #33	; 0x21
   1f1f0:	bcc	1f200 <main@@Base+0x915c>
   1f1f4:	cmp	r0, #58	; 0x3a
   1f1f8:	mov	r1, r8
   1f1fc:	bne	1f588 <main@@Base+0x94e4>
   1f200:	ldr	r0, [sp, #32]
   1f204:	mov	r1, #0
   1f208:	str	r1, [r0]
   1f20c:	ldr	r0, [sp, #44]	; 0x2c
   1f210:	sub	r0, r0, r2
   1f214:	cmp	r0, #2
   1f218:	bge	1f308 <main@@Base+0x9264>
   1f21c:	b	1f400 <main@@Base+0x935c>
   1f220:	mov	r0, sl
   1f224:	mov	r1, r8
   1f228:	b	1f670 <main@@Base+0x95cc>
   1f22c:	movw	r0, #29556	; 0x7374
   1f230:	bfc	r1, #0, #16
   1f234:	movt	r0, #28261	; 0x6e65
   1f238:	eor	r0, r2, r0
   1f23c:	movw	r2, #0
   1f240:	movt	r2, #25956	; 0x6564
   1f244:	eor	r1, r1, r2
   1f248:	orrs	r0, r1, r0
   1f24c:	bne	1f660 <main@@Base+0x95bc>
   1f250:	cmp	lr, #7
   1f254:	mov	r1, r8
   1f258:	blt	1f5f8 <main@@Base+0x9554>
   1f25c:	ldr	r1, [sp, #32]
   1f260:	mov	r2, r8
   1f264:	ldrb	r0, [r2, #6]!
   1f268:	ldr	r1, [r1]
   1f26c:	cmp	r1, #0
   1f270:	beq	1f328 <main@@Base+0x9284>
   1f274:	cmp	r0, #33	; 0x21
   1f278:	bcc	1f288 <main@@Base+0x91e4>
   1f27c:	cmp	r0, #58	; 0x3a
   1f280:	mov	r1, r8
   1f284:	bne	1f5f8 <main@@Base+0x9554>
   1f288:	ldr	r0, [sp, #32]
   1f28c:	mov	r1, #0
   1f290:	str	r1, [r0]
   1f294:	ldr	r0, [sp, #44]	; 0x2c
   1f298:	sub	r0, r0, r2
   1f29c:	cmp	r0, #2
   1f2a0:	bge	1f348 <main@@Base+0x92a4>
   1f2a4:	b	1f484 <main@@Base+0x93e0>
   1f2a8:	cmp	r0, #34	; 0x22
   1f2ac:	mov	r1, r8
   1f2b0:	bne	1f518 <main@@Base+0x9474>
   1f2b4:	add	r2, r8, #5
   1f2b8:	ldr	r0, [sp, #44]	; 0x2c
   1f2bc:	sub	r0, r0, r2
   1f2c0:	cmp	r0, #2
   1f2c4:	blt	1f37c <main@@Base+0x92d8>
   1f2c8:	ldrb	r0, [r2]
   1f2cc:	cmp	r0, #32
   1f2d0:	bls	1f368 <main@@Base+0x92c4>
   1f2d4:	mov	r1, r2
   1f2d8:	ldr	r0, [sp, #44]	; 0x2c
   1f2dc:	cmp	r1, r0
   1f2e0:	bne	1f39c <main@@Base+0x92f8>
   1f2e4:	b	1f3d8 <main@@Base+0x9334>
   1f2e8:	cmp	r0, #34	; 0x22
   1f2ec:	mov	r1, r8
   1f2f0:	bne	1f588 <main@@Base+0x94e4>
   1f2f4:	add	r2, r8, #8
   1f2f8:	ldr	r0, [sp, #44]	; 0x2c
   1f2fc:	sub	r0, r0, r2
   1f300:	cmp	r0, #2
   1f304:	blt	1f400 <main@@Base+0x935c>
   1f308:	ldrb	r0, [r2]
   1f30c:	cmp	r0, #32
   1f310:	bls	1f3ec <main@@Base+0x9348>
   1f314:	mov	r1, r2
   1f318:	ldr	r0, [sp, #44]	; 0x2c
   1f31c:	cmp	r1, r0
   1f320:	bne	1f420 <main@@Base+0x937c>
   1f324:	b	1f45c <main@@Base+0x93b8>
   1f328:	cmp	r0, #34	; 0x22
   1f32c:	mov	r1, r8
   1f330:	bne	1f5f8 <main@@Base+0x9554>
   1f334:	add	r2, r8, #7
   1f338:	ldr	r0, [sp, #44]	; 0x2c
   1f33c:	sub	r0, r0, r2
   1f340:	cmp	r0, #2
   1f344:	blt	1f484 <main@@Base+0x93e0>
   1f348:	ldrb	r0, [r2]
   1f34c:	cmp	r0, #32
   1f350:	bls	1f470 <main@@Base+0x93cc>
   1f354:	mov	r1, r2
   1f358:	ldr	r0, [sp, #44]	; 0x2c
   1f35c:	cmp	r1, r0
   1f360:	bne	1f4a4 <main@@Base+0x9400>
   1f364:	b	1f4e0 <main@@Base+0x943c>
   1f368:	bne	1f37c <main@@Base+0x92d8>
   1f36c:	mov	r1, r2
   1f370:	ldrb	r0, [r1, #1]!
   1f374:	cmp	r0, #32
   1f378:	bhi	1f390 <main@@Base+0x92ec>
   1f37c:	mov	r1, r2
   1f380:	ldr	r0, [sp, #36]	; 0x24
   1f384:	ldr	r2, [sp, #44]	; 0x2c
   1f388:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   1f38c:	mov	r1, r0
   1f390:	ldr	r0, [sp, #44]	; 0x2c
   1f394:	cmp	r1, r0
   1f398:	beq	1f3d8 <main@@Base+0x9334>
   1f39c:	ldrb	r0, [r1]
   1f3a0:	cmp	r0, #58	; 0x3a
   1f3a4:	bne	1f3d8 <main@@Base+0x9334>
   1f3a8:	ldr	r0, [sp, #44]	; 0x2c
   1f3ac:	add	r2, r1, #1
   1f3b0:	sub	r0, r0, r2
   1f3b4:	cmp	r0, #2
   1f3b8:	blt	1f504 <main@@Base+0x9460>
   1f3bc:	ldrb	r0, [r2]
   1f3c0:	cmp	r0, #32
   1f3c4:	bls	1f4f4 <main@@Base+0x9450>
   1f3c8:	mov	r1, r2
   1f3cc:	cmp	r8, r1
   1f3d0:	bne	1f520 <main@@Base+0x947c>
   1f3d4:	b	1f660 <main@@Base+0x95bc>
   1f3d8:	ldr	r0, [sp, #36]	; 0x24
   1f3dc:	ldr	r2, [sp, #44]	; 0x2c
   1f3e0:	mov	r3, #4
   1f3e4:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   1f3e8:	b	1f514 <main@@Base+0x9470>
   1f3ec:	bne	1f400 <main@@Base+0x935c>
   1f3f0:	mov	r1, r2
   1f3f4:	ldrb	r0, [r1, #1]!
   1f3f8:	cmp	r0, #32
   1f3fc:	bhi	1f414 <main@@Base+0x9370>
   1f400:	mov	r1, r2
   1f404:	ldr	r0, [sp, #36]	; 0x24
   1f408:	ldr	r2, [sp, #44]	; 0x2c
   1f40c:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   1f410:	mov	r1, r0
   1f414:	ldr	r0, [sp, #44]	; 0x2c
   1f418:	cmp	r1, r0
   1f41c:	beq	1f45c <main@@Base+0x93b8>
   1f420:	ldrb	r0, [r1]
   1f424:	cmp	r0, #58	; 0x3a
   1f428:	bne	1f45c <main@@Base+0x93b8>
   1f42c:	ldr	r0, [sp, #44]	; 0x2c
   1f430:	add	r2, r1, #1
   1f434:	sub	r0, r0, r2
   1f438:	cmp	r0, #2
   1f43c:	blt	1f574 <main@@Base+0x94d0>
   1f440:	ldrb	r0, [r2]
   1f444:	cmp	r0, #32
   1f448:	bls	1f564 <main@@Base+0x94c0>
   1f44c:	mov	r1, r2
   1f450:	cmp	r8, r1
   1f454:	bne	1f590 <main@@Base+0x94ec>
   1f458:	b	1f660 <main@@Base+0x95bc>
   1f45c:	ldr	r0, [sp, #36]	; 0x24
   1f460:	ldr	r2, [sp, #44]	; 0x2c
   1f464:	mov	r3, #4
   1f468:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   1f46c:	b	1f584 <main@@Base+0x94e0>
   1f470:	bne	1f484 <main@@Base+0x93e0>
   1f474:	mov	r1, r2
   1f478:	ldrb	r0, [r1, #1]!
   1f47c:	cmp	r0, #32
   1f480:	bhi	1f498 <main@@Base+0x93f4>
   1f484:	mov	r1, r2
   1f488:	ldr	r0, [sp, #36]	; 0x24
   1f48c:	ldr	r2, [sp, #44]	; 0x2c
   1f490:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   1f494:	mov	r1, r0
   1f498:	ldr	r0, [sp, #44]	; 0x2c
   1f49c:	cmp	r1, r0
   1f4a0:	beq	1f4e0 <main@@Base+0x943c>
   1f4a4:	ldrb	r0, [r1]
   1f4a8:	cmp	r0, #58	; 0x3a
   1f4ac:	bne	1f4e0 <main@@Base+0x943c>
   1f4b0:	ldr	r0, [sp, #44]	; 0x2c
   1f4b4:	add	r2, r1, #1
   1f4b8:	sub	r0, r0, r2
   1f4bc:	cmp	r0, #2
   1f4c0:	blt	1f5e4 <main@@Base+0x9540>
   1f4c4:	ldrb	r0, [r2]
   1f4c8:	cmp	r0, #32
   1f4cc:	bls	1f5d4 <main@@Base+0x9530>
   1f4d0:	mov	r1, r2
   1f4d4:	cmp	r8, r1
   1f4d8:	bne	1f600 <main@@Base+0x955c>
   1f4dc:	b	1f660 <main@@Base+0x95bc>
   1f4e0:	ldr	r0, [sp, #36]	; 0x24
   1f4e4:	ldr	r2, [sp, #44]	; 0x2c
   1f4e8:	mov	r3, #4
   1f4ec:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   1f4f0:	b	1f5f4 <main@@Base+0x9550>
   1f4f4:	bne	1f504 <main@@Base+0x9460>
   1f4f8:	ldrb	r0, [r1, #2]!
   1f4fc:	cmp	r0, #32
   1f500:	bhi	1f518 <main@@Base+0x9474>
   1f504:	mov	r1, r2
   1f508:	ldr	r0, [sp, #36]	; 0x24
   1f50c:	ldr	r2, [sp, #44]	; 0x2c
   1f510:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   1f514:	mov	r1, r0
   1f518:	cmp	r8, r1
   1f51c:	beq	1f660 <main@@Base+0x95bc>
   1f520:	mov	r0, #0
   1f524:	ldr	r2, [sp, #44]	; 0x2c
   1f528:	sub	r3, fp, #56	; 0x38
   1f52c:	str	r0, [sp]
   1f530:	ldr	r0, [sp, #36]	; 0x24
   1f534:	bl	39118 <flatcc_json_parser_build_uint8_vector_base64@@Base>
   1f538:	mov	r4, r0
   1f53c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1f540:	cmp	r0, #0
   1f544:	beq	208e8 <main@@Base+0xa844>
   1f548:	ldr	r0, [sp, #36]	; 0x24
   1f54c:	mov	r1, #0
   1f550:	ldr	r0, [r0]
   1f554:	bl	3316c <flatcc_builder_table_add_offset@@Base>
   1f558:	cmp	r0, #0
   1f55c:	bne	1f640 <main@@Base+0x959c>
   1f560:	b	208e8 <main@@Base+0xa844>
   1f564:	bne	1f574 <main@@Base+0x94d0>
   1f568:	ldrb	r0, [r1, #2]!
   1f56c:	cmp	r0, #32
   1f570:	bhi	1f588 <main@@Base+0x94e4>
   1f574:	mov	r1, r2
   1f578:	ldr	r0, [sp, #36]	; 0x24
   1f57c:	ldr	r2, [sp, #44]	; 0x2c
   1f580:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   1f584:	mov	r1, r0
   1f588:	cmp	r8, r1
   1f58c:	beq	1f660 <main@@Base+0x95bc>
   1f590:	mov	r0, #1
   1f594:	ldr	r2, [sp, #44]	; 0x2c
   1f598:	sub	r3, fp, #56	; 0x38
   1f59c:	str	r0, [sp]
   1f5a0:	ldr	r0, [sp, #36]	; 0x24
   1f5a4:	bl	39118 <flatcc_json_parser_build_uint8_vector_base64@@Base>
   1f5a8:	mov	r4, r0
   1f5ac:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1f5b0:	cmp	r0, #0
   1f5b4:	beq	208e8 <main@@Base+0xa844>
   1f5b8:	ldr	r0, [sp, #36]	; 0x24
   1f5bc:	mov	r1, #1
   1f5c0:	ldr	r0, [r0]
   1f5c4:	bl	3316c <flatcc_builder_table_add_offset@@Base>
   1f5c8:	cmp	r0, #0
   1f5cc:	bne	1f640 <main@@Base+0x959c>
   1f5d0:	b	208e8 <main@@Base+0xa844>
   1f5d4:	bne	1f5e4 <main@@Base+0x9540>
   1f5d8:	ldrb	r0, [r1, #2]!
   1f5dc:	cmp	r0, #32
   1f5e0:	bhi	1f5f8 <main@@Base+0x9554>
   1f5e4:	mov	r1, r2
   1f5e8:	ldr	r0, [sp, #36]	; 0x24
   1f5ec:	ldr	r2, [sp, #44]	; 0x2c
   1f5f0:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   1f5f4:	mov	r1, r0
   1f5f8:	cmp	r8, r1
   1f5fc:	beq	1f660 <main@@Base+0x95bc>
   1f600:	mov	r0, #0
   1f604:	ldr	r2, [sp, #44]	; 0x2c
   1f608:	sub	r3, fp, #56	; 0x38
   1f60c:	str	r0, [sp]
   1f610:	ldr	r0, [sp, #36]	; 0x24
   1f614:	bl	39118 <flatcc_json_parser_build_uint8_vector_base64@@Base>
   1f618:	mov	r4, r0
   1f61c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1f620:	cmp	r0, #0
   1f624:	beq	208e8 <main@@Base+0xa844>
   1f628:	ldr	r0, [sp, #36]	; 0x24
   1f62c:	mov	r1, #2
   1f630:	ldr	r0, [r0]
   1f634:	bl	3316c <flatcc_builder_table_add_offset@@Base>
   1f638:	cmp	r0, #0
   1f63c:	beq	208e8 <main@@Base+0xa844>
   1f640:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1f644:	str	r1, [r0]
   1f648:	ldr	r6, [sp, #44]	; 0x2c
   1f64c:	ldr	sl, [sp, #36]	; 0x24
   1f650:	sub	r0, r6, r4
   1f654:	cmp	r0, #2
   1f658:	blt	1f6b8 <main@@Base+0x9614>
   1f65c:	b	1f688 <main@@Base+0x95e4>
   1f660:	ldr	sl, [sp, #36]	; 0x24
   1f664:	ldr	r6, [sp, #44]	; 0x2c
   1f668:	mov	r1, r8
   1f66c:	mov	r0, sl
   1f670:	mov	r2, r6
   1f674:	bl	373bc <flatcc_json_parser_unmatched_symbol@@Base>
   1f678:	mov	r4, r0
   1f67c:	sub	r0, r6, r4
   1f680:	cmp	r0, #2
   1f684:	blt	1f6b8 <main@@Base+0x9614>
   1f688:	ldrb	r0, [r4]
   1f68c:	cmp	r0, #32
   1f690:	bls	1f6a4 <main@@Base+0x9600>
   1f694:	mov	r2, r4
   1f698:	cmp	r2, r6
   1f69c:	bne	1f6d4 <main@@Base+0x9630>
   1f6a0:	b	1ff3c <main@@Base+0x9e98>
   1f6a4:	bne	1f6b8 <main@@Base+0x9614>
   1f6a8:	mov	r2, r4
   1f6ac:	ldrb	r0, [r2, #1]!
   1f6b0:	cmp	r0, #32
   1f6b4:	bhi	1f6cc <main@@Base+0x9628>
   1f6b8:	mov	r0, sl
   1f6bc:	mov	r1, r4
   1f6c0:	mov	r2, r6
   1f6c4:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   1f6c8:	mov	r2, r0
   1f6cc:	cmp	r2, r6
   1f6d0:	beq	1ff3c <main@@Base+0x9e98>
   1f6d4:	ldrb	r0, [r2]
   1f6d8:	cmp	r0, #44	; 0x2c
   1f6dc:	bne	1ff58 <main@@Base+0x9eb4>
   1f6e0:	add	r1, r2, #1
   1f6e4:	sub	r0, r6, r1
   1f6e8:	cmp	r0, #2
   1f6ec:	blt	1f71c <main@@Base+0x9678>
   1f6f0:	ldrb	r0, [r1]
   1f6f4:	cmp	r0, #32
   1f6f8:	bls	1f70c <main@@Base+0x9668>
   1f6fc:	mov	r2, r1
   1f700:	cmp	r2, r6
   1f704:	bne	1f734 <main@@Base+0x9690>
   1f708:	b	1fff8 <main@@Base+0x9f54>
   1f70c:	bne	1f71c <main@@Base+0x9678>
   1f710:	ldrb	r0, [r2, #2]!
   1f714:	cmp	r0, #32
   1f718:	bhi	1f72c <main@@Base+0x9688>
   1f71c:	mov	r0, sl
   1f720:	mov	r2, r6
   1f724:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   1f728:	mov	r2, r0
   1f72c:	cmp	r2, r6
   1f730:	beq	1fff8 <main@@Base+0x9f54>
   1f734:	ldrb	r0, [r2]
   1f738:	cmp	r0, #125	; 0x7d
   1f73c:	bne	1f00c <main@@Base+0x8f68>
   1f740:	add	r1, r2, #1
   1f744:	sub	r0, r6, r1
   1f748:	cmp	r0, #2
   1f74c:	bge	1ff78 <main@@Base+0x9ed4>
   1f750:	b	21554 <main@@Base+0xb4b0>
   1f754:	ldr	r6, [sp, #44]	; 0x2c
   1f758:	ldr	sl, [sp, #36]	; 0x24
   1f75c:	bne	1f76c <main@@Base+0x96c8>
   1f760:	ldrb	r0, [r4, #2]!
   1f764:	cmp	r0, #32
   1f768:	bhi	1f77c <main@@Base+0x96d8>
   1f76c:	mov	r0, sl
   1f770:	mov	r2, r6
   1f774:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   1f778:	mov	r4, r0
   1f77c:	cmp	r4, r6
   1f780:	beq	1f7e0 <main@@Base+0x973c>
   1f784:	ldrb	r0, [r4]
   1f788:	cmp	r0, #93	; 0x5d
   1f78c:	bne	1f7dc <main@@Base+0x9738>
   1f790:	ldr	r6, [sp, #44]	; 0x2c
   1f794:	ldr	sl, [sp, #36]	; 0x24
   1f798:	add	r1, r4, #1
   1f79c:	sub	r0, r6, r1
   1f7a0:	cmp	r0, #2
   1f7a4:	blt	1f7cc <main@@Base+0x9728>
   1f7a8:	ldrb	r0, [r1]
   1f7ac:	cmp	r0, #32
   1f7b0:	bhi	203c8 <main@@Base+0xa324>
   1f7b4:	ldr	r6, [sp, #44]	; 0x2c
   1f7b8:	ldr	sl, [sp, #36]	; 0x24
   1f7bc:	bne	1f7cc <main@@Base+0x9728>
   1f7c0:	ldrb	r0, [r4, #2]!
   1f7c4:	cmp	r0, #32
   1f7c8:	bhi	1e4b8 <main@@Base+0x8414>
   1f7cc:	mov	r0, sl
   1f7d0:	mov	r2, r6
   1f7d4:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   1f7d8:	b	1e4b4 <main@@Base+0x8410>
   1f7dc:	mov	r6, r4
   1f7e0:	mov	r0, #0
   1f7e4:	mov	r1, #1
   1f7e8:	str	r0, [sp, #60]	; 0x3c
   1f7ec:	str	r0, [sp, #56]	; 0x38
   1f7f0:	ldr	r0, [sp, #36]	; 0x24
   1f7f4:	ldr	r0, [r0]
   1f7f8:	bl	30e98 <flatcc_builder_extend_vector@@Base>
   1f7fc:	cmp	r0, #0
   1f800:	beq	2190c <main@@Base+0xb868>
   1f804:	mov	r4, r6
   1f808:	ldr	r6, [sp, #44]	; 0x2c
   1f80c:	ldr	sl, [sp, #36]	; 0x24
   1f810:	mov	r7, r0
   1f814:	mov	r0, #0
   1f818:	cmp	r4, r6
   1f81c:	str	r0, [fp, #-52]	; 0xffffffcc
   1f820:	str	r0, [fp, #-56]	; 0xffffffc8
   1f824:	str	r0, [sp, #60]	; 0x3c
   1f828:	str	r0, [sp, #56]	; 0x38
   1f82c:	str	r0, [fp, #-60]	; 0xffffffc4
   1f830:	beq	1f890 <main@@Base+0x97ec>
   1f834:	sub	r0, fp, #56	; 0x38
   1f838:	mov	r1, r4
   1f83c:	mov	r2, r6
   1f840:	sub	r3, fp, #60	; 0x3c
   1f844:	str	r0, [sp]
   1f848:	mov	r0, sl
   1f84c:	bl	38fa8 <flatcc_json_parser_integer@@Base>
   1f850:	cmp	r0, r4
   1f854:	beq	1f8a4 <main@@Base+0x9800>
   1f858:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1f85c:	mov	r1, r0
   1f860:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1f864:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1f868:	cmp	r2, #0
   1f86c:	beq	1f8bc <main@@Base+0x9818>
   1f870:	rsbs	r2, r0, #0
   1f874:	mov	r2, #-2147483648	; 0x80000000
   1f878:	sbcs	r2, r2, r3
   1f87c:	bcs	1f8f4 <main@@Base+0x9850>
   1f880:	ldr	sl, [sp, #36]	; 0x24
   1f884:	ldr	r6, [sp, #44]	; 0x2c
   1f888:	mov	r3, #8
   1f88c:	b	1f8d0 <main@@Base+0x982c>
   1f890:	mov	r3, #0
   1f894:	mov	r1, r6
   1f898:	cmp	r4, r1
   1f89c:	bne	1f954 <main@@Base+0x98b0>
   1f8a0:	b	1f914 <main@@Base+0x9870>
   1f8a4:	mov	r0, #0
   1f8a8:	mov	r3, #0
   1f8ac:	mov	r1, r4
   1f8b0:	cmp	r4, r1
   1f8b4:	bne	1f954 <main@@Base+0x98b0>
   1f8b8:	b	1f914 <main@@Base+0x9870>
   1f8bc:	cmn	r3, #1
   1f8c0:	bgt	1f8fc <main@@Base+0x9858>
   1f8c4:	ldr	sl, [sp, #36]	; 0x24
   1f8c8:	ldr	r6, [sp, #44]	; 0x2c
   1f8cc:	mov	r3, #7
   1f8d0:	mov	r0, sl
   1f8d4:	mov	r2, r6
   1f8d8:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   1f8dc:	mov	r1, r0
   1f8e0:	mov	r0, #0
   1f8e4:	mov	r3, #0
   1f8e8:	cmp	r4, r1
   1f8ec:	bne	1f954 <main@@Base+0x98b0>
   1f8f0:	b	1f914 <main@@Base+0x9870>
   1f8f4:	rsbs	r0, r0, #0
   1f8f8:	rsc	r3, r3, #0
   1f8fc:	ldr	r6, [sp, #44]	; 0x2c
   1f900:	ldr	sl, [sp, #36]	; 0x24
   1f904:	str	r0, [sp, #56]	; 0x38
   1f908:	str	r3, [sp, #60]	; 0x3c
   1f90c:	cmp	r4, r1
   1f910:	bne	1f954 <main@@Base+0x98b0>
   1f914:	add	r0, sp, #56	; 0x38
   1f918:	mov	r1, r4
   1f91c:	mov	r2, r6
   1f920:	str	r0, [sp]
   1f924:	movw	r0, #268	; 0x10c
   1f928:	movt	r0, #6
   1f92c:	add	r3, r0, #108	; 0x6c
   1f930:	mov	r0, sl
   1f934:	bl	26254 <main@@Base+0x101b0>
   1f938:	mov	r1, r0
   1f93c:	cmp	r0, r4
   1f940:	cmpne	r1, r6
   1f944:	beq	21900 <main@@Base+0xb85c>
   1f948:	ldr	r0, [sp, #56]	; 0x38
   1f94c:	ldr	r3, [sp, #60]	; 0x3c
   1f950:	ldr	sl, [sp, #36]	; 0x24
   1f954:	stm	r7, {r0, r3}
   1f958:	sub	r0, r6, r1
   1f95c:	cmp	r0, #2
   1f960:	blt	1f994 <main@@Base+0x98f0>
   1f964:	ldrb	r0, [r1]
   1f968:	cmp	r0, #32
   1f96c:	bls	1f980 <main@@Base+0x98dc>
   1f970:	mov	r4, r1
   1f974:	cmp	r4, r6
   1f978:	bne	1f9ac <main@@Base+0x9908>
   1f97c:	b	200c4 <main@@Base+0xa020>
   1f980:	bne	1f994 <main@@Base+0x98f0>
   1f984:	mov	r4, r1
   1f988:	ldrb	r0, [r4, #1]!
   1f98c:	cmp	r0, #32
   1f990:	bhi	1f9a4 <main@@Base+0x9900>
   1f994:	mov	r0, sl
   1f998:	mov	r2, r6
   1f99c:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   1f9a0:	mov	r4, r0
   1f9a4:	cmp	r4, r6
   1f9a8:	beq	200c4 <main@@Base+0xa020>
   1f9ac:	ldrb	r0, [r4]
   1f9b0:	cmp	r0, #44	; 0x2c
   1f9b4:	bne	200d8 <main@@Base+0xa034>
   1f9b8:	add	r1, r4, #1
   1f9bc:	sub	r0, r6, r1
   1f9c0:	cmp	r0, #2
   1f9c4:	blt	1f9f4 <main@@Base+0x9950>
   1f9c8:	ldrb	r0, [r1]
   1f9cc:	cmp	r0, #32
   1f9d0:	bls	1f9e4 <main@@Base+0x9940>
   1f9d4:	mov	r4, r1
   1f9d8:	cmp	r4, r6
   1f9dc:	bne	1fa0c <main@@Base+0x9968>
   1f9e0:	b	20340 <main@@Base+0xa29c>
   1f9e4:	bne	1f9f4 <main@@Base+0x9950>
   1f9e8:	ldrb	r0, [r4, #2]!
   1f9ec:	cmp	r0, #32
   1f9f0:	bhi	1fa04 <main@@Base+0x9960>
   1f9f4:	mov	r0, sl
   1f9f8:	mov	r2, r6
   1f9fc:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   1fa00:	mov	r4, r0
   1fa04:	cmp	r4, r6
   1fa08:	beq	20340 <main@@Base+0xa29c>
   1fa0c:	ldrb	r0, [r4]
   1fa10:	cmp	r0, #93	; 0x5d
   1fa14:	beq	203ac <main@@Base+0xa308>
   1fa18:	mov	r0, #0
   1fa1c:	mov	r1, #1
   1fa20:	str	r0, [sp, #60]	; 0x3c
   1fa24:	str	r0, [sp, #56]	; 0x38
   1fa28:	ldr	r0, [sl]
   1fa2c:	bl	30e98 <flatcc_builder_extend_vector@@Base>
   1fa30:	mov	r7, r0
   1fa34:	cmp	r0, #0
   1fa38:	bne	1f814 <main@@Base+0x9770>
   1fa3c:	b	16fd8 <main@@Base+0xf34>
   1fa40:	ldr	r6, [sp, #44]	; 0x2c
   1fa44:	ldr	sl, [sp, #36]	; 0x24
   1fa48:	bne	1fa58 <main@@Base+0x99b4>
   1fa4c:	ldrb	r0, [r8, #2]!
   1fa50:	cmp	r0, #32
   1fa54:	bhi	1fa68 <main@@Base+0x99c4>
   1fa58:	mov	r0, sl
   1fa5c:	mov	r2, r6
   1fa60:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   1fa64:	mov	r8, r0
   1fa68:	cmp	r7, r8
   1fa6c:	beq	1fad0 <main@@Base+0x9a2c>
   1fa70:	ldr	r0, [sl]
   1fa74:	mov	r1, #8
   1fa78:	mov	r2, #8
   1fa7c:	mvn	r3, #-536870912	; 0xe0000000
   1fa80:	bl	319ec <flatcc_builder_start_vector@@Base>
   1fa84:	cmp	r0, #0
   1fa88:	bne	218f4 <main@@Base+0xb850>
   1fa8c:	cmp	r8, r6
   1fa90:	beq	1fadc <main@@Base+0x9a38>
   1fa94:	ldrb	r0, [r8]
   1fa98:	cmp	r0, #91	; 0x5b
   1fa9c:	bne	1fadc <main@@Base+0x9a38>
   1faa0:	add	r1, r8, #1
   1faa4:	sub	r0, r6, r1
   1faa8:	cmp	r0, #2
   1faac:	blt	20108 <main@@Base+0xa064>
   1fab0:	ldrb	r0, [r1]
   1fab4:	cmp	r0, #32
   1fab8:	bls	200f8 <main@@Base+0xa054>
   1fabc:	mov	r8, r1
   1fac0:	ldr	r7, [sp, #44]	; 0x2c
   1fac4:	cmp	r8, r7
   1fac8:	bne	20124 <main@@Base+0xa080>
   1facc:	b	2017c <main@@Base+0xa0d8>
   1fad0:	mov	r0, sl
   1fad4:	mov	r1, r7
   1fad8:	b	1a488 <main@@Base+0x43e4>
   1fadc:	ldr	sl, [sp, #36]	; 0x24
   1fae0:	mov	r1, r8
   1fae4:	mov	r2, r6
   1fae8:	mov	r3, #22
   1faec:	mov	r0, sl
   1faf0:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   1faf4:	mov	r8, r0
   1faf8:	ldr	r0, [sl]
   1fafc:	bl	32c64 <flatcc_builder_end_vector@@Base>
   1fb00:	cmp	r0, #0
   1fb04:	str	r0, [sp, #52]	; 0x34
   1fb08:	beq	218e0 <main@@Base+0xb83c>
   1fb0c:	ldr	r0, [sl]
   1fb10:	mov	r1, #33	; 0x21
   1fb14:	bl	3316c <flatcc_builder_table_add_offset@@Base>
   1fb18:	cmp	r0, #0
   1fb1c:	beq	218e0 <main@@Base+0xb83c>
   1fb20:	ldr	r1, [sp, #52]	; 0x34
   1fb24:	ldr	r6, [sp, #44]	; 0x2c
   1fb28:	mov	r4, r8
   1fb2c:	str	r1, [r0]
   1fb30:	b	1a494 <main@@Base+0x43f0>
   1fb34:	mov	r6, r0
   1fb38:	ldr	r8, [sp, #44]	; 0x2c
   1fb3c:	ldr	sl, [sp, #36]	; 0x24
   1fb40:	str	r6, [fp, #-60]	; 0xffffffc4
   1fb44:	ldr	r5, [sp, #40]	; 0x28
   1fb48:	cmp	r7, r4
   1fb4c:	bne	1fb94 <main@@Base+0x9af0>
   1fb50:	movw	r3, #268	; 0x10c
   1fb54:	sub	r0, fp, #60	; 0x3c
   1fb58:	mov	r1, r7
   1fb5c:	mov	r2, r8
   1fb60:	movt	r3, #6
   1fb64:	str	r0, [sp]
   1fb68:	mov	r0, sl
   1fb6c:	bl	2600c <main@@Base+0xff68>
   1fb70:	cmp	r0, r7
   1fb74:	mov	r4, r0
   1fb78:	ldrne	r1, [sp, #44]	; 0x2c
   1fb7c:	cmpne	r4, r1
   1fb80:	beq	218c0 <main@@Base+0xb81c>
   1fb84:	ldr	r6, [fp, #-60]	; 0xffffffc4
   1fb88:	ldr	r8, [sp, #44]	; 0x2c
   1fb8c:	ldr	sl, [sp, #36]	; 0x24
   1fb90:	ldr	r5, [sp, #40]	; 0x28
   1fb94:	cmp	r6, #0
   1fb98:	bne	1fba8 <main@@Base+0x9b04>
   1fb9c:	ldrb	r0, [sl, #8]
   1fba0:	tst	r0, #2
   1fba4:	beq	1cc84 <main@@Base+0x6be0>
   1fba8:	ldr	r0, [sl]
   1fbac:	mov	r1, #20
   1fbb0:	mov	r2, #4
   1fbb4:	mov	r3, #4
   1fbb8:	bl	332fc <flatcc_builder_table_add@@Base>
   1fbbc:	cmp	r0, #0
   1fbc0:	bne	1dfcc <main@@Base+0x7f28>
   1fbc4:	b	218c0 <main@@Base+0xb81c>
   1fbc8:	ldr	r6, [sp, #44]	; 0x2c
   1fbcc:	ldr	sl, [sp, #36]	; 0x24
   1fbd0:	bne	1fbe0 <main@@Base+0x9b3c>
   1fbd4:	ldrb	r0, [r7, #2]!
   1fbd8:	cmp	r0, #32
   1fbdc:	bhi	1fbf0 <main@@Base+0x9b4c>
   1fbe0:	mov	r0, sl
   1fbe4:	mov	r2, r6
   1fbe8:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   1fbec:	mov	r7, r0
   1fbf0:	cmp	r4, r7
   1fbf4:	beq	2057c <main@@Base+0xa4d8>
   1fbf8:	mov	r2, r6
   1fbfc:	mov	r6, #0
   1fc00:	cmp	r7, r2
   1fc04:	str	r6, [fp, #-52]	; 0xffffffcc
   1fc08:	str	r6, [fp, #-56]	; 0xffffffc8
   1fc0c:	str	r6, [sp, #60]	; 0x3c
   1fc10:	str	r6, [sp, #56]	; 0x38
   1fc14:	str	r6, [fp, #-60]	; 0xffffffc4
   1fc18:	beq	1fc74 <main@@Base+0x9bd0>
   1fc1c:	sub	r0, fp, #56	; 0x38
   1fc20:	mov	r1, r7
   1fc24:	sub	r3, fp, #60	; 0x3c
   1fc28:	str	r0, [sp]
   1fc2c:	mov	r0, sl
   1fc30:	bl	38fa8 <flatcc_json_parser_integer@@Base>
   1fc34:	cmp	r0, r7
   1fc38:	beq	1fc88 <main@@Base+0x9be4>
   1fc3c:	mov	r4, r0
   1fc40:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1fc44:	ldr	r6, [fp, #-56]	; 0xffffffc8
   1fc48:	ldr	r5, [fp, #-52]	; 0xffffffcc
   1fc4c:	cmp	r0, #0
   1fc50:	beq	1fca0 <main@@Base+0x9bfc>
   1fc54:	subs	r0, r6, #1
   1fc58:	sbcs	r0, r5, #-2147483648	; 0x80000000
   1fc5c:	bcc	1fea4 <main@@Base+0x9e00>
   1fc60:	ldr	r0, [sp, #36]	; 0x24
   1fc64:	ldr	r2, [sp, #44]	; 0x2c
   1fc68:	mov	r1, r4
   1fc6c:	mov	r3, #8
   1fc70:	b	1fcb8 <main@@Base+0x9c14>
   1fc74:	mov	r5, #0
   1fc78:	mov	r4, r2
   1fc7c:	cmp	r7, r4
   1fc80:	bne	1fefc <main@@Base+0x9e58>
   1fc84:	b	1febc <main@@Base+0x9e18>
   1fc88:	mov	r6, #0
   1fc8c:	mov	r5, #0
   1fc90:	mov	r4, r7
   1fc94:	cmp	r7, r4
   1fc98:	bne	1fefc <main@@Base+0x9e58>
   1fc9c:	b	1febc <main@@Base+0x9e18>
   1fca0:	cmn	r5, #1
   1fca4:	bgt	1feac <main@@Base+0x9e08>
   1fca8:	ldr	r0, [sp, #36]	; 0x24
   1fcac:	ldr	r2, [sp, #44]	; 0x2c
   1fcb0:	mov	r1, r4
   1fcb4:	mov	r3, #7
   1fcb8:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   1fcbc:	mov	r4, r0
   1fcc0:	mov	r6, #0
   1fcc4:	mov	r5, #0
   1fcc8:	cmp	r7, r4
   1fccc:	bne	1fefc <main@@Base+0x9e58>
   1fcd0:	b	1febc <main@@Base+0x9e18>
   1fcd4:	ldr	r6, [sp, #44]	; 0x2c
   1fcd8:	bne	1fce8 <main@@Base+0x9c44>
   1fcdc:	ldrb	r0, [r4, #2]!
   1fce0:	cmp	r0, #32
   1fce4:	bhi	1fcf8 <main@@Base+0x9c54>
   1fce8:	ldr	r0, [sp, #36]	; 0x24
   1fcec:	mov	r2, r6
   1fcf0:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   1fcf4:	mov	r4, r0
   1fcf8:	cmp	r4, r6
   1fcfc:	mov	r3, r6
   1fd00:	beq	1fd54 <main@@Base+0x9cb0>
   1fd04:	ldrb	r0, [r4]
   1fd08:	cmp	r0, #125	; 0x7d
   1fd0c:	bne	1fd50 <main@@Base+0x9cac>
   1fd10:	ldr	r6, [sp, #44]	; 0x2c
   1fd14:	ldr	sl, [sp, #36]	; 0x24
   1fd18:	add	r1, r4, #1
   1fd1c:	sub	r0, r6, r1
   1fd20:	cmp	r0, #2
   1fd24:	blt	216c8 <main@@Base+0xb624>
   1fd28:	ldrb	r0, [r1]
   1fd2c:	cmp	r0, #32
   1fd30:	bhi	2037c <main@@Base+0xa2d8>
   1fd34:	ldr	r6, [sp, #44]	; 0x2c
   1fd38:	ldr	sl, [sp, #36]	; 0x24
   1fd3c:	bne	216c8 <main@@Base+0xb624>
   1fd40:	ldrb	r0, [r4, #2]!
   1fd44:	cmp	r0, #32
   1fd48:	bhi	1d000 <main@@Base+0x6f5c>
   1fd4c:	b	216c8 <main@@Base+0xb624>
   1fd50:	mov	r3, r4
   1fd54:	ldr	r6, [sp, #44]	; 0x2c
   1fd58:	ldr	sl, [sp, #36]	; 0x24
   1fd5c:	cmp	r3, r6
   1fd60:	mov	r1, r6
   1fd64:	beq	1fdbc <main@@Base+0x9d18>
   1fd68:	ldrb	r0, [r3]
   1fd6c:	cmp	r0, #46	; 0x2e
   1fd70:	beq	1fd90 <main@@Base+0x9cec>
   1fd74:	cmp	r0, #34	; 0x22
   1fd78:	bne	1fdac <main@@Base+0x9d08>
   1fd7c:	ldr	r0, [sp, #32]
   1fd80:	mov	r1, #0
   1fd84:	str	r1, [r0]
   1fd88:	add	r1, r3, #1
   1fd8c:	b	1fdbc <main@@Base+0x9d18>
   1fd90:	mov	r1, r3
   1fd94:	mov	r0, sl
   1fd98:	mov	r2, r6
   1fd9c:	mov	r3, #5
   1fda0:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   1fda4:	mov	r1, r0
   1fda8:	b	1fdbc <main@@Base+0x9d18>
   1fdac:	ldr	r0, [sp, #32]
   1fdb0:	mov	r1, #1
   1fdb4:	str	r1, [r0]
   1fdb8:	mov	r1, r3
   1fdbc:	mov	r0, sl
   1fdc0:	mov	r2, r6
   1fdc4:	bl	373bc <flatcc_json_parser_unmatched_symbol@@Base>
   1fdc8:	mov	r2, r0
   1fdcc:	sub	r0, r6, r0
   1fdd0:	cmp	r0, #2
   1fdd4:	blt	1fe08 <main@@Base+0x9d64>
   1fdd8:	ldrb	r0, [r2]
   1fddc:	cmp	r0, #32
   1fde0:	bls	1fdf4 <main@@Base+0x9d50>
   1fde4:	mov	r3, r2
   1fde8:	cmp	r3, r6
   1fdec:	bne	1fe24 <main@@Base+0x9d80>
   1fdf0:	b	2032c <main@@Base+0xa288>
   1fdf4:	bne	1fe08 <main@@Base+0x9d64>
   1fdf8:	mov	r3, r2
   1fdfc:	ldrb	r0, [r3, #1]!
   1fe00:	cmp	r0, #32
   1fe04:	bhi	1fe1c <main@@Base+0x9d78>
   1fe08:	mov	r1, r2
   1fe0c:	mov	r0, sl
   1fe10:	mov	r2, r6
   1fe14:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   1fe18:	mov	r3, r0
   1fe1c:	cmp	r3, r6
   1fe20:	beq	2032c <main@@Base+0xa288>
   1fe24:	ldrb	r0, [r3]
   1fe28:	cmp	r0, #44	; 0x2c
   1fe2c:	bne	20350 <main@@Base+0xa2ac>
   1fe30:	add	r1, r3, #1
   1fe34:	sub	r0, r6, r1
   1fe38:	cmp	r0, #2
   1fe3c:	blt	1fe6c <main@@Base+0x9dc8>
   1fe40:	ldrb	r0, [r1]
   1fe44:	cmp	r0, #32
   1fe48:	bls	1fe5c <main@@Base+0x9db8>
   1fe4c:	mov	r3, r1
   1fe50:	cmp	r3, r6
   1fe54:	bne	1fe84 <main@@Base+0x9de0>
   1fe58:	b	203d0 <main@@Base+0xa32c>
   1fe5c:	bne	1fe6c <main@@Base+0x9dc8>
   1fe60:	ldrb	r0, [r3, #2]!
   1fe64:	cmp	r0, #32
   1fe68:	bhi	1fe7c <main@@Base+0x9dd8>
   1fe6c:	mov	r0, sl
   1fe70:	mov	r2, r6
   1fe74:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   1fe78:	mov	r3, r0
   1fe7c:	cmp	r3, r6
   1fe80:	beq	203d0 <main@@Base+0xa32c>
   1fe84:	ldrb	r0, [r3]
   1fe88:	cmp	r0, #125	; 0x7d
   1fe8c:	bne	1fd5c <main@@Base+0x9cb8>
   1fe90:	add	r1, r3, #1
   1fe94:	sub	r0, r6, r1
   1fe98:	cmp	r0, #2
   1fe9c:	bge	20370 <main@@Base+0xa2cc>
   1fea0:	b	216c8 <main@@Base+0xb624>
   1fea4:	rsbs	r6, r6, #0
   1fea8:	rsc	r5, r5, #0
   1feac:	str	r6, [sp, #56]	; 0x38
   1feb0:	str	r5, [sp, #60]	; 0x3c
   1feb4:	cmp	r7, r4
   1feb8:	bne	1fefc <main@@Base+0x9e58>
   1febc:	add	r0, sp, #56	; 0x38
   1fec0:	ldr	r2, [sp, #44]	; 0x2c
   1fec4:	mov	r1, r7
   1fec8:	str	r0, [sp]
   1fecc:	movw	r0, #268	; 0x10c
   1fed0:	movt	r0, #6
   1fed4:	add	r3, r0, #24
   1fed8:	ldr	r0, [sp, #36]	; 0x24
   1fedc:	bl	26254 <main@@Base+0x101b0>
   1fee0:	cmp	r0, r7
   1fee4:	mov	r4, r0
   1fee8:	ldrne	r1, [sp, #44]	; 0x2c
   1feec:	cmpne	r4, r1
   1fef0:	beq	218c0 <main@@Base+0xb81c>
   1fef4:	ldr	r6, [sp, #56]	; 0x38
   1fef8:	ldr	r5, [sp, #60]	; 0x3c
   1fefc:	ldr	sl, [sp, #36]	; 0x24
   1ff00:	orrs	r0, r6, r5
   1ff04:	bne	1ff14 <main@@Base+0x9e70>
   1ff08:	ldrb	r0, [sl, #8]
   1ff0c:	tst	r0, #2
   1ff10:	beq	21414 <main@@Base+0xb370>
   1ff14:	ldr	r0, [sl]
   1ff18:	mov	r1, #22
   1ff1c:	b	20630 <main@@Base+0xa58c>
   1ff20:	ldr	sl, [sp, #36]	; 0x24
   1ff24:	ldr	r6, [sp, #44]	; 0x2c
   1ff28:	mov	r1, r7
   1ff2c:	mov	r0, sl
   1ff30:	mov	r2, r6
   1ff34:	mov	r3, #9
   1ff38:	b	1ca3c <main@@Base+0x6998>
   1ff3c:	mov	r4, r6
   1ff40:	ldr	r0, [sl, #24]
   1ff44:	cmp	r0, #0
   1ff48:	bne	1c890 <main@@Base+0x67ec>
   1ff4c:	b	1ff9c <main@@Base+0x9ef8>
   1ff50:	mov	r4, r6
   1ff54:	b	1de34 <main@@Base+0x7d90>
   1ff58:	cmp	r0, #125	; 0x7d
   1ff5c:	bne	21338 <main@@Base+0xb294>
   1ff60:	ldr	r6, [sp, #44]	; 0x2c
   1ff64:	ldr	sl, [sp, #36]	; 0x24
   1ff68:	add	r1, r2, #1
   1ff6c:	sub	r0, r6, r1
   1ff70:	cmp	r0, #2
   1ff74:	blt	21554 <main@@Base+0xb4b0>
   1ff78:	ldrb	r0, [r1]
   1ff7c:	cmp	r0, #32
   1ff80:	bls	21538 <main@@Base+0xb494>
   1ff84:	ldr	r6, [sp, #44]	; 0x2c
   1ff88:	ldr	sl, [sp, #36]	; 0x24
   1ff8c:	mov	r4, r1
   1ff90:	ldr	r0, [sl, #24]
   1ff94:	cmp	r0, #0
   1ff98:	bne	1c890 <main@@Base+0x67ec>
   1ff9c:	ldr	r0, [sl]
   1ffa0:	bl	32950 <flatcc_builder_end_table@@Base>
   1ffa4:	cmp	r0, #0
   1ffa8:	str	r0, [sp, #52]	; 0x34
   1ffac:	bne	1c8b4 <main@@Base+0x6810>
   1ffb0:	b	1c890 <main@@Base+0x67ec>
   1ffb4:	cmp	r0, #93	; 0x5d
   1ffb8:	bne	21354 <main@@Base+0xb2b0>
   1ffbc:	ldr	r6, [sp, #44]	; 0x2c
   1ffc0:	ldr	sl, [sp, #36]	; 0x24
   1ffc4:	add	r1, r2, #1
   1ffc8:	sub	r0, r6, r1
   1ffcc:	cmp	r0, #2
   1ffd0:	blt	215b0 <main@@Base+0xb50c>
   1ffd4:	ldrb	r0, [r1]
   1ffd8:	cmp	r0, #32
   1ffdc:	bls	21594 <main@@Base+0xb4f0>
   1ffe0:	ldr	r6, [sp, #44]	; 0x2c
   1ffe4:	ldr	sl, [sp, #36]	; 0x24
   1ffe8:	mov	r4, r1
   1ffec:	b	1de34 <main@@Base+0x7d90>
   1fff0:	mov	r4, r6
   1fff4:	b	215e0 <main@@Base+0xb53c>
   1fff8:	mov	r0, sl
   1fffc:	mov	r1, r6
   20000:	b	21348 <main@@Base+0xb2a4>
   20004:	mov	r0, sl
   20008:	mov	r1, r6
   2000c:	b	21364 <main@@Base+0xb2c0>
   20010:	cmp	r0, #93	; 0x5d
   20014:	bne	21370 <main@@Base+0xb2cc>
   20018:	ldr	r0, [sp, #44]	; 0x2c
   2001c:	add	r1, r4, #1
   20020:	sub	r0, r0, r1
   20024:	cmp	r0, #2
   20028:	blt	215d0 <main@@Base+0xb52c>
   2002c:	b	20058 <main@@Base+0x9fb4>
   20030:	mov	r0, sl
   20034:	mov	r1, r6
   20038:	mov	r2, r6
   2003c:	b	2137c <main@@Base+0xb2d8>
   20040:	mov	r4, r6
   20044:	b	1e210 <main@@Base+0x816c>
   20048:	add	r1, r4, #1
   2004c:	sub	r0, r6, r1
   20050:	cmp	r0, #2
   20054:	blt	215d0 <main@@Base+0xb52c>
   20058:	ldrb	r0, [r1]
   2005c:	cmp	r0, #32
   20060:	bls	215c0 <main@@Base+0xb51c>
   20064:	mov	r4, r1
   20068:	b	215e0 <main@@Base+0xb53c>
   2006c:	cmp	r0, #93	; 0x5d
   20070:	bne	2141c <main@@Base+0xb378>
   20074:	ldr	r6, [sp, #44]	; 0x2c
   20078:	ldr	sl, [sp, #36]	; 0x24
   2007c:	add	r1, r2, #1
   20080:	sub	r0, r6, r1
   20084:	cmp	r0, #2
   20088:	blt	21660 <main@@Base+0xb5bc>
   2008c:	ldrb	r0, [r1]
   20090:	cmp	r0, #32
   20094:	bls	21644 <main@@Base+0xb5a0>
   20098:	ldr	r6, [sp, #44]	; 0x2c
   2009c:	ldr	sl, [sp, #36]	; 0x24
   200a0:	mov	r4, r1
   200a4:	b	1e210 <main@@Base+0x816c>
   200a8:	ldr	sl, [sp, #36]	; 0x24
   200ac:	ldr	r6, [sp, #44]	; 0x2c
   200b0:	mov	r1, r2
   200b4:	mov	r0, sl
   200b8:	mov	r2, r6
   200bc:	mov	r3, #9
   200c0:	b	1c96c <main@@Base+0x68c8>
   200c4:	mov	r4, r6
   200c8:	b	216a0 <main@@Base+0xb5fc>
   200cc:	mov	r0, sl
   200d0:	mov	r1, r6
   200d4:	b	2142c <main@@Base+0xb388>
   200d8:	cmp	r0, #93	; 0x5d
   200dc:	bne	21444 <main@@Base+0xb3a0>
   200e0:	ldr	r0, [sp, #44]	; 0x2c
   200e4:	add	r1, r4, #1
   200e8:	sub	r0, r0, r1
   200ec:	cmp	r0, #2
   200f0:	blt	21690 <main@@Base+0xb5ec>
   200f4:	b	203bc <main@@Base+0xa318>
   200f8:	bne	20108 <main@@Base+0xa064>
   200fc:	ldrb	r0, [r8, #2]!
   20100:	cmp	r0, #32
   20104:	bhi	20118 <main@@Base+0xa074>
   20108:	ldr	r0, [sp, #36]	; 0x24
   2010c:	ldr	r2, [sp, #44]	; 0x2c
   20110:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   20114:	mov	r8, r0
   20118:	ldr	r7, [sp, #44]	; 0x2c
   2011c:	cmp	r8, r7
   20120:	beq	2017c <main@@Base+0xa0d8>
   20124:	ldrb	r0, [r8]
   20128:	cmp	r0, #93	; 0x5d
   2012c:	bne	20178 <main@@Base+0xa0d4>
   20130:	ldr	r0, [sp, #44]	; 0x2c
   20134:	ldr	sl, [sp, #36]	; 0x24
   20138:	add	r1, r8, #1
   2013c:	sub	r0, r0, r1
   20140:	cmp	r0, #2
   20144:	blt	20168 <main@@Base+0xa0c4>
   20148:	ldrb	r0, [r1]
   2014c:	cmp	r0, #32
   20150:	bhi	214e4 <main@@Base+0xb440>
   20154:	ldr	sl, [sp, #36]	; 0x24
   20158:	bne	20168 <main@@Base+0xa0c4>
   2015c:	ldrb	r0, [r8, #2]!
   20160:	cmp	r0, #32
   20164:	bhi	1faf8 <main@@Base+0x9a54>
   20168:	ldr	r2, [sp, #44]	; 0x2c
   2016c:	mov	r0, sl
   20170:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   20174:	b	1faf4 <main@@Base+0x9a50>
   20178:	mov	r7, r8
   2017c:	mov	r0, #0
   20180:	mov	r1, #1
   20184:	str	r0, [fp, #-52]	; 0xffffffcc
   20188:	str	r0, [fp, #-56]	; 0xffffffc8
   2018c:	ldr	r0, [sp, #36]	; 0x24
   20190:	ldr	r0, [r0]
   20194:	bl	30e98 <flatcc_builder_extend_vector@@Base>
   20198:	cmp	r0, #0
   2019c:	beq	21928 <main@@Base+0xb884>
   201a0:	ldr	r6, [sp, #44]	; 0x2c
   201a4:	ldr	sl, [sp, #36]	; 0x24
   201a8:	mov	r4, r0
   201ac:	mov	r8, r7
   201b0:	mov	r0, sl
   201b4:	mov	r1, r8
   201b8:	mov	r2, r6
   201bc:	sub	r3, fp, #56	; 0x38
   201c0:	bl	38438 <flatcc_json_parser_double@@Base>
   201c4:	mov	r7, r0
   201c8:	cmp	r8, r0
   201cc:	bne	20210 <main@@Base+0xa16c>
   201d0:	sub	r0, fp, #56	; 0x38
   201d4:	mov	r1, r8
   201d8:	mov	r2, r6
   201dc:	str	r0, [sp]
   201e0:	movw	r0, #268	; 0x10c
   201e4:	movt	r0, #6
   201e8:	add	r3, r0, #96	; 0x60
   201ec:	mov	r0, sl
   201f0:	bl	268ec <main@@Base+0x10848>
   201f4:	mov	r7, r0
   201f8:	cmp	r0, r8
   201fc:	beq	21928 <main@@Base+0xb884>
   20200:	ldr	r6, [sp, #44]	; 0x2c
   20204:	ldr	sl, [sp, #36]	; 0x24
   20208:	cmp	r7, r6
   2020c:	beq	21888 <main@@Base+0xb7e4>
   20210:	vldr	d16, [fp, #-56]	; 0xffffffc8
   20214:	sub	r0, r6, r7
   20218:	cmp	r0, #2
   2021c:	vstr	d16, [r4]
   20220:	blt	20260 <main@@Base+0xa1bc>
   20224:	ldrb	r0, [r7]
   20228:	cmp	r0, #32
   2022c:	bls	20244 <main@@Base+0xa1a0>
   20230:	ldr	r6, [sp, #44]	; 0x2c
   20234:	mov	r8, r7
   20238:	cmp	r8, r6
   2023c:	bne	2027c <main@@Base+0xa1d8>
   20240:	b	21438 <main@@Base+0xb394>
   20244:	ldr	r6, [sp, #44]	; 0x2c
   20248:	ldr	sl, [sp, #36]	; 0x24
   2024c:	bne	20260 <main@@Base+0xa1bc>
   20250:	mov	r8, r7
   20254:	ldrb	r0, [r8, #1]!
   20258:	cmp	r0, #32
   2025c:	bhi	20274 <main@@Base+0xa1d0>
   20260:	mov	r0, sl
   20264:	mov	r1, r7
   20268:	mov	r2, r6
   2026c:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   20270:	mov	r8, r0
   20274:	cmp	r8, r6
   20278:	beq	21438 <main@@Base+0xb394>
   2027c:	ldrb	r0, [r8]
   20280:	cmp	r0, #44	; 0x2c
   20284:	bne	2145c <main@@Base+0xb3b8>
   20288:	ldr	r4, [sp, #44]	; 0x2c
   2028c:	add	r1, r8, #1
   20290:	sub	r0, r4, r1
   20294:	cmp	r0, #2
   20298:	ldr	r0, [sp, #36]	; 0x24
   2029c:	blt	202d8 <main@@Base+0xa234>
   202a0:	ldrb	r0, [r1]
   202a4:	cmp	r0, #32
   202a8:	bls	202c0 <main@@Base+0xa21c>
   202ac:	ldr	r4, [sp, #44]	; 0x2c
   202b0:	mov	r8, r1
   202b4:	cmp	r8, r4
   202b8:	bne	202ec <main@@Base+0xa248>
   202bc:	b	21498 <main@@Base+0xb3f4>
   202c0:	ldr	r4, [sp, #44]	; 0x2c
   202c4:	ldr	r0, [sp, #36]	; 0x24
   202c8:	bne	202d8 <main@@Base+0xa234>
   202cc:	ldrb	r2, [r8, #2]!
   202d0:	cmp	r2, #32
   202d4:	bhi	202e4 <main@@Base+0xa240>
   202d8:	mov	r2, r4
   202dc:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   202e0:	mov	r8, r0
   202e4:	cmp	r8, r4
   202e8:	beq	21498 <main@@Base+0xb3f4>
   202ec:	ldrb	r0, [r8]
   202f0:	cmp	r0, #93	; 0x5d
   202f4:	beq	214c4 <main@@Base+0xb420>
   202f8:	ldr	sl, [sp, #36]	; 0x24
   202fc:	mov	r0, #0
   20300:	mov	r1, #1
   20304:	str	r0, [fp, #-52]	; 0xffffffcc
   20308:	str	r0, [fp, #-56]	; 0xffffffc8
   2030c:	ldr	r0, [sl]
   20310:	bl	30e98 <flatcc_builder_extend_vector@@Base>
   20314:	ldr	r6, [sp, #44]	; 0x2c
   20318:	mov	r4, r0
   2031c:	cmp	r0, #0
   20320:	mov	r7, r8
   20324:	bne	201b0 <main@@Base+0xa10c>
   20328:	b	21888 <main@@Base+0xb7e4>
   2032c:	mov	r4, r6
   20330:	ldr	r0, [sl, #24]
   20334:	cmp	r0, #0
   20338:	bne	1d00c <main@@Base+0x6f68>
   2033c:	b	20394 <main@@Base+0xa2f0>
   20340:	mov	r0, sl
   20344:	mov	r1, r6
   20348:	mov	r2, r6
   2034c:	b	21450 <main@@Base+0xb3ac>
   20350:	cmp	r0, #125	; 0x7d
   20354:	bne	214a8 <main@@Base+0xb404>
   20358:	ldr	r6, [sp, #44]	; 0x2c
   2035c:	ldr	sl, [sp, #36]	; 0x24
   20360:	add	r1, r3, #1
   20364:	sub	r0, r6, r1
   20368:	cmp	r0, #2
   2036c:	blt	216c8 <main@@Base+0xb624>
   20370:	ldrb	r0, [r1]
   20374:	cmp	r0, #32
   20378:	bls	216ac <main@@Base+0xb608>
   2037c:	ldr	r6, [sp, #44]	; 0x2c
   20380:	ldr	sl, [sp, #36]	; 0x24
   20384:	mov	r4, r1
   20388:	ldr	r0, [sl, #24]
   2038c:	cmp	r0, #0
   20390:	bne	1d00c <main@@Base+0x6f68>
   20394:	ldr	r0, [sl]
   20398:	bl	32950 <flatcc_builder_end_table@@Base>
   2039c:	cmp	r0, #0
   203a0:	str	r0, [sp, #52]	; 0x34
   203a4:	bne	1d030 <main@@Base+0x6f8c>
   203a8:	b	1d00c <main@@Base+0x6f68>
   203ac:	add	r1, r4, #1
   203b0:	sub	r0, r6, r1
   203b4:	cmp	r0, #2
   203b8:	blt	21690 <main@@Base+0xb5ec>
   203bc:	ldrb	r0, [r1]
   203c0:	cmp	r0, #32
   203c4:	bls	21680 <main@@Base+0xb5dc>
   203c8:	mov	r4, r1
   203cc:	b	216a0 <main@@Base+0xb5fc>
   203d0:	mov	r0, sl
   203d4:	mov	r1, r6
   203d8:	b	214b8 <main@@Base+0xb414>
   203dc:	ldr	r6, [sp, #44]	; 0x2c
   203e0:	ldr	sl, [sp, #36]	; 0x24
   203e4:	bne	203f4 <main@@Base+0xa350>
   203e8:	ldrb	r0, [r7, #2]!
   203ec:	cmp	r0, #32
   203f0:	bhi	20404 <main@@Base+0xa360>
   203f4:	mov	r0, sl
   203f8:	mov	r2, r6
   203fc:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   20400:	mov	r7, r0
   20404:	cmp	r4, r7
   20408:	beq	2057c <main@@Base+0xa4d8>
   2040c:	mov	r0, r6
   20410:	mov	r6, #0
   20414:	cmp	r7, r0
   20418:	str	r6, [fp, #-52]	; 0xffffffcc
   2041c:	str	r6, [fp, #-56]	; 0xffffffc8
   20420:	str	r6, [fp, #-60]	; 0xffffffc4
   20424:	str	r6, [sp, #56]	; 0x38
   20428:	beq	20480 <main@@Base+0xa3dc>
   2042c:	sub	r0, fp, #56	; 0x38
   20430:	ldr	r2, [sp, #44]	; 0x2c
   20434:	mov	r1, r7
   20438:	add	r3, sp, #56	; 0x38
   2043c:	str	r0, [sp]
   20440:	ldr	r0, [sp, #36]	; 0x24
   20444:	bl	38fa8 <flatcc_json_parser_integer@@Base>
   20448:	cmp	r0, r7
   2044c:	beq	20490 <main@@Base+0xa3ec>
   20450:	mov	r1, r0
   20454:	ldr	r0, [sp, #56]	; 0x38
   20458:	cmp	r0, #0
   2045c:	beq	204a0 <main@@Base+0xa3fc>
   20460:	ldr	r0, [sp, #36]	; 0x24
   20464:	ldr	r2, [sp, #44]	; 0x2c
   20468:	mov	r3, #8
   2046c:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   20470:	mov	r4, r0
   20474:	cmp	r7, r4
   20478:	bne	213d8 <main@@Base+0xb334>
   2047c:	b	2139c <main@@Base+0xb2f8>
   20480:	ldr	r4, [sp, #44]	; 0x2c
   20484:	cmp	r7, r4
   20488:	bne	213d8 <main@@Base+0xb334>
   2048c:	b	2139c <main@@Base+0xb2f8>
   20490:	mov	r4, r7
   20494:	cmp	r7, r4
   20498:	bne	213d8 <main@@Base+0xb334>
   2049c:	b	2139c <main@@Base+0xb2f8>
   204a0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   204a4:	cmp	r0, #0
   204a8:	beq	21388 <main@@Base+0xb2e4>
   204ac:	ldr	r0, [sp, #36]	; 0x24
   204b0:	ldr	r2, [sp, #44]	; 0x2c
   204b4:	mov	r3, #7
   204b8:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   204bc:	mov	r4, r0
   204c0:	cmp	r7, r4
   204c4:	bne	213d8 <main@@Base+0xb334>
   204c8:	b	2139c <main@@Base+0xb2f8>
   204cc:	ldr	r6, [sp, #44]	; 0x2c
   204d0:	ldr	sl, [sp, #36]	; 0x24
   204d4:	bne	204e4 <main@@Base+0xa440>
   204d8:	ldrb	r0, [r7, #2]!
   204dc:	cmp	r0, #32
   204e0:	bhi	204f4 <main@@Base+0xa450>
   204e4:	mov	r0, sl
   204e8:	mov	r2, r6
   204ec:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   204f0:	mov	r7, r0
   204f4:	cmp	r4, r7
   204f8:	beq	2057c <main@@Base+0xa4d8>
   204fc:	mov	r0, r6
   20500:	mov	r6, #0
   20504:	cmp	r7, r0
   20508:	str	r6, [fp, #-52]	; 0xffffffcc
   2050c:	str	r6, [fp, #-56]	; 0xffffffc8
   20510:	str	r6, [sp, #60]	; 0x3c
   20514:	str	r6, [sp, #56]	; 0x38
   20518:	str	r6, [fp, #-60]	; 0xffffffc4
   2051c:	beq	20588 <main@@Base+0xa4e4>
   20520:	sub	r0, fp, #56	; 0x38
   20524:	ldr	r2, [sp, #44]	; 0x2c
   20528:	mov	r1, r7
   2052c:	sub	r3, fp, #60	; 0x3c
   20530:	str	r0, [sp]
   20534:	ldr	r0, [sp, #36]	; 0x24
   20538:	bl	38fa8 <flatcc_json_parser_integer@@Base>
   2053c:	cmp	r0, r7
   20540:	beq	2059c <main@@Base+0xa4f8>
   20544:	mov	r1, r0
   20548:	ldr	r0, [fp, #-60]	; 0xffffffc4
   2054c:	cmp	r0, #0
   20550:	beq	205b4 <main@@Base+0xa510>
   20554:	ldr	r0, [sp, #36]	; 0x24
   20558:	ldr	r2, [sp, #44]	; 0x2c
   2055c:	mov	r3, #8
   20560:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   20564:	mov	r4, r0
   20568:	mov	r6, #0
   2056c:	mov	r5, #0
   20570:	cmp	r7, r4
   20574:	bne	20610 <main@@Base+0xa56c>
   20578:	b	205d0 <main@@Base+0xa52c>
   2057c:	mov	r0, sl
   20580:	mov	r1, r4
   20584:	b	1a488 <main@@Base+0x43e4>
   20588:	ldr	r4, [sp, #44]	; 0x2c
   2058c:	mov	r5, #0
   20590:	cmp	r7, r4
   20594:	bne	20610 <main@@Base+0xa56c>
   20598:	b	205d0 <main@@Base+0xa52c>
   2059c:	mov	r6, #0
   205a0:	mov	r5, #0
   205a4:	mov	r4, r7
   205a8:	cmp	r7, r4
   205ac:	bne	20610 <main@@Base+0xa56c>
   205b0:	b	205d0 <main@@Base+0xa52c>
   205b4:	ldr	r6, [fp, #-56]	; 0xffffffc8
   205b8:	ldr	r5, [fp, #-52]	; 0xffffffcc
   205bc:	mov	r4, r1
   205c0:	str	r5, [sp, #60]	; 0x3c
   205c4:	str	r6, [sp, #56]	; 0x38
   205c8:	cmp	r7, r4
   205cc:	bne	20610 <main@@Base+0xa56c>
   205d0:	add	r0, sp, #56	; 0x38
   205d4:	ldr	r2, [sp, #44]	; 0x2c
   205d8:	mov	r1, r7
   205dc:	str	r0, [sp]
   205e0:	movw	r0, #268	; 0x10c
   205e4:	movt	r0, #6
   205e8:	add	r3, r0, #72	; 0x48
   205ec:	ldr	r0, [sp, #36]	; 0x24
   205f0:	bl	266cc <main@@Base+0x10628>
   205f4:	cmp	r0, r7
   205f8:	mov	r4, r0
   205fc:	ldrne	r1, [sp, #44]	; 0x2c
   20600:	cmpne	r4, r1
   20604:	beq	218c0 <main@@Base+0xb81c>
   20608:	ldr	r6, [sp, #56]	; 0x38
   2060c:	ldr	r5, [sp, #60]	; 0x3c
   20610:	ldr	sl, [sp, #36]	; 0x24
   20614:	orrs	r0, r6, r5
   20618:	bne	20628 <main@@Base+0xa584>
   2061c:	ldrb	r0, [sl, #8]
   20620:	tst	r0, #2
   20624:	beq	21414 <main@@Base+0xb370>
   20628:	ldr	r0, [sl]
   2062c:	mov	r1, #23
   20630:	mov	r2, #8
   20634:	mov	r3, #8
   20638:	bl	332fc <flatcc_builder_table_add@@Base>
   2063c:	cmp	r0, #0
   20640:	beq	218c0 <main@@Base+0xb81c>
   20644:	str	r6, [r0]
   20648:	str	r5, [r0, #4]
   2064c:	b	21410 <main@@Base+0xb36c>
   20650:	bne	20660 <main@@Base+0xa5bc>
   20654:	ldrb	r0, [r4, #2]!
   20658:	cmp	r0, #32
   2065c:	bhi	20670 <main@@Base+0xa5cc>
   20660:	ldr	r0, [sp, #36]	; 0x24
   20664:	ldr	r2, [sp, #44]	; 0x2c
   20668:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   2066c:	mov	r4, r0
   20670:	ldr	r6, [sp, #44]	; 0x2c
   20674:	cmp	r4, r6
   20678:	beq	2068c <main@@Base+0xa5e8>
   2067c:	ldrb	r0, [r4]
   20680:	cmp	r0, #93	; 0x5d
   20684:	beq	21510 <main@@Base+0xb46c>
   20688:	mov	r6, r4
   2068c:	mov	r0, #0
   20690:	mov	r1, #1
   20694:	strb	r0, [fp, #-60]	; 0xffffffc4
   20698:	ldr	r0, [sp, #36]	; 0x24
   2069c:	ldr	r0, [r0]
   206a0:	bl	30e98 <flatcc_builder_extend_vector@@Base>
   206a4:	cmp	r0, #0
   206a8:	beq	2190c <main@@Base+0xb868>
   206ac:	mov	r8, r0
   206b0:	mov	r4, r6
   206b4:	ldr	r5, [sp, #44]	; 0x2c
   206b8:	mov	r6, #0
   206bc:	str	r6, [fp, #-52]	; 0xffffffcc
   206c0:	str	r6, [fp, #-56]	; 0xffffffc8
   206c4:	strb	r6, [fp, #-60]	; 0xffffffc4
   206c8:	str	r6, [sp, #56]	; 0x38
   206cc:	cmp	r4, r5
   206d0:	beq	20718 <main@@Base+0xa674>
   206d4:	sub	r0, fp, #56	; 0x38
   206d8:	mov	r1, r4
   206dc:	mov	r2, r5
   206e0:	add	r3, sp, #56	; 0x38
   206e4:	str	r0, [sp]
   206e8:	ldr	r0, [sp, #36]	; 0x24
   206ec:	bl	38fa8 <flatcc_json_parser_integer@@Base>
   206f0:	cmp	r0, r4
   206f4:	beq	2072c <main@@Base+0xa688>
   206f8:	mov	r1, r0
   206fc:	ldr	r0, [sp, #56]	; 0x38
   20700:	cmp	r0, #0
   20704:	beq	20744 <main@@Base+0xa6a0>
   20708:	ldr	r7, [sp, #36]	; 0x24
   2070c:	ldr	r5, [sp, #44]	; 0x2c
   20710:	mov	r3, #8
   20714:	b	20764 <main@@Base+0xa6c0>
   20718:	mov	r1, r5
   2071c:	ldr	r7, [sp, #36]	; 0x24
   20720:	cmp	r4, r1
   20724:	bne	207c4 <main@@Base+0xa720>
   20728:	b	2077c <main@@Base+0xa6d8>
   2072c:	mov	r1, r4
   20730:	ldr	r5, [sp, #44]	; 0x2c
   20734:	ldr	r7, [sp, #36]	; 0x24
   20738:	cmp	r4, r1
   2073c:	bne	207c4 <main@@Base+0xa720>
   20740:	b	2077c <main@@Base+0xa6d8>
   20744:	ldr	r0, [fp, #-56]	; 0xffffffc8
   20748:	ldr	r2, [fp, #-52]	; 0xffffffcc
   2074c:	subs	r3, r0, #256	; 0x100
   20750:	sbcs	r2, r2, #0
   20754:	bcc	208cc <main@@Base+0xa828>
   20758:	ldr	r7, [sp, #36]	; 0x24
   2075c:	ldr	r5, [sp, #44]	; 0x2c
   20760:	mov	r3, #7
   20764:	mov	r0, r7
   20768:	mov	r2, r5
   2076c:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   20770:	mov	r1, r0
   20774:	cmp	r4, r1
   20778:	bne	207c4 <main@@Base+0xa720>
   2077c:	sub	r0, fp, #60	; 0x3c
   20780:	mov	r1, r4
   20784:	mov	r2, r5
   20788:	str	r0, [sp]
   2078c:	movw	r0, #268	; 0x10c
   20790:	movt	r0, #6
   20794:	add	r3, r0, #84	; 0x54
   20798:	mov	r0, r7
   2079c:	bl	239ac <main@@Base+0xd908>
   207a0:	mov	r1, r0
   207a4:	cmp	r0, r4
   207a8:	beq	21938 <main@@Base+0xb894>
   207ac:	ldr	r0, [sp, #44]	; 0x2c
   207b0:	cmp	r1, r0
   207b4:	beq	21938 <main@@Base+0xb894>
   207b8:	ldrb	r6, [fp, #-60]	; 0xffffffc4
   207bc:	ldr	r5, [sp, #44]	; 0x2c
   207c0:	ldr	r7, [sp, #36]	; 0x24
   207c4:	sub	r0, r5, r1
   207c8:	strb	r6, [r8]
   207cc:	cmp	r0, #2
   207d0:	blt	20810 <main@@Base+0xa76c>
   207d4:	ldrb	r0, [r1]
   207d8:	cmp	r0, #32
   207dc:	bls	207f4 <main@@Base+0xa750>
   207e0:	ldr	r5, [sp, #44]	; 0x2c
   207e4:	mov	r4, r1
   207e8:	cmp	r4, r5
   207ec:	bne	20828 <main@@Base+0xa784>
   207f0:	b	21500 <main@@Base+0xb45c>
   207f4:	ldr	r5, [sp, #44]	; 0x2c
   207f8:	ldr	r7, [sp, #36]	; 0x24
   207fc:	bne	20810 <main@@Base+0xa76c>
   20800:	mov	r4, r1
   20804:	ldrb	r0, [r4, #1]!
   20808:	cmp	r0, #32
   2080c:	bhi	20820 <main@@Base+0xa77c>
   20810:	mov	r0, r7
   20814:	mov	r2, r5
   20818:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   2081c:	mov	r4, r0
   20820:	cmp	r4, r5
   20824:	beq	21500 <main@@Base+0xb45c>
   20828:	ldrb	r0, [r4]
   2082c:	cmp	r0, #44	; 0x2c
   20830:	bne	21508 <main@@Base+0xb464>
   20834:	ldr	r5, [sp, #44]	; 0x2c
   20838:	add	r1, r4, #1
   2083c:	sub	r0, r5, r1
   20840:	cmp	r0, #2
   20844:	ldr	r0, [sp, #36]	; 0x24
   20848:	blt	20884 <main@@Base+0xa7e0>
   2084c:	ldrb	r0, [r1]
   20850:	cmp	r0, #32
   20854:	bls	2086c <main@@Base+0xa7c8>
   20858:	ldr	r5, [sp, #44]	; 0x2c
   2085c:	mov	r4, r1
   20860:	cmp	r4, r5
   20864:	bne	20898 <main@@Base+0xa7f4>
   20868:	b	21564 <main@@Base+0xb4c0>
   2086c:	ldr	r5, [sp, #44]	; 0x2c
   20870:	ldr	r0, [sp, #36]	; 0x24
   20874:	bne	20884 <main@@Base+0xa7e0>
   20878:	ldrb	r2, [r4, #2]!
   2087c:	cmp	r2, #32
   20880:	bhi	20890 <main@@Base+0xa7ec>
   20884:	mov	r2, r5
   20888:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   2088c:	mov	r4, r0
   20890:	cmp	r4, r5
   20894:	beq	21564 <main@@Base+0xb4c0>
   20898:	ldrb	r0, [r4]
   2089c:	cmp	r0, #93	; 0x5d
   208a0:	beq	21510 <main@@Base+0xb46c>
   208a4:	mov	r0, #0
   208a8:	mov	r1, #1
   208ac:	strb	r0, [fp, #-60]	; 0xffffffc4
   208b0:	ldr	r0, [sp, #36]	; 0x24
   208b4:	ldr	r0, [r0]
   208b8:	bl	30e98 <flatcc_builder_extend_vector@@Base>
   208bc:	mov	r8, r0
   208c0:	cmp	r0, #0
   208c4:	bne	206b4 <main@@Base+0xa610>
   208c8:	b	218c0 <main@@Base+0xb81c>
   208cc:	mov	r6, r0
   208d0:	strb	r0, [fp, #-60]	; 0xffffffc4
   208d4:	ldr	r5, [sp, #44]	; 0x2c
   208d8:	ldr	r7, [sp, #36]	; 0x24
   208dc:	cmp	r4, r1
   208e0:	bne	207c4 <main@@Base+0xa720>
   208e4:	b	2077c <main@@Base+0xa6d8>
   208e8:	ldr	r6, [sp, #44]	; 0x2c
   208ec:	ldr	sl, [sp, #36]	; 0x24
   208f0:	b	1c890 <main@@Base+0x67ec>
   208f4:	bne	20904 <main@@Base+0xa860>
   208f8:	ldrb	r0, [r4, #2]!
   208fc:	cmp	r0, #32
   20900:	bhi	20914 <main@@Base+0xa870>
   20904:	ldr	r0, [sp, #36]	; 0x24
   20908:	ldr	r2, [sp, #44]	; 0x2c
   2090c:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   20910:	mov	r4, r0
   20914:	ldr	r2, [sp, #44]	; 0x2c
   20918:	cmp	r4, r2
   2091c:	beq	2096c <main@@Base+0xa8c8>
   20920:	ldrb	r0, [r4]
   20924:	cmp	r0, #125	; 0x7d
   20928:	bne	20968 <main@@Base+0xa8c4>
   2092c:	ldr	r0, [sp, #44]	; 0x2c
   20930:	ldr	sl, [sp, #36]	; 0x24
   20934:	add	r1, r4, #1
   20938:	sub	r0, r0, r1
   2093c:	cmp	r0, #2
   20940:	blt	21778 <main@@Base+0xb6d4>
   20944:	ldrb	r0, [r1]
   20948:	cmp	r0, #32
   2094c:	bhi	2162c <main@@Base+0xb588>
   20950:	ldr	sl, [sp, #36]	; 0x24
   20954:	bne	21778 <main@@Base+0xb6d4>
   20958:	ldrb	r0, [r4, #2]!
   2095c:	cmp	r0, #32
   20960:	bhi	1e2e8 <main@@Base+0x8244>
   20964:	b	21778 <main@@Base+0xb6d4>
   20968:	mov	r2, r4
   2096c:	ldr	r5, [sp, #44]	; 0x2c
   20970:	cmp	r2, r5
   20974:	mov	r8, r5
   20978:	beq	209d4 <main@@Base+0xa930>
   2097c:	ldrb	r0, [r2]
   20980:	cmp	r0, #46	; 0x2e
   20984:	beq	209a0 <main@@Base+0xa8fc>
   20988:	cmp	r0, #34	; 0x22
   2098c:	bne	209c0 <main@@Base+0xa91c>
   20990:	ldr	r0, [sp, #32]
   20994:	mov	r1, #0
   20998:	add	r8, r2, #1
   2099c:	b	209cc <main@@Base+0xa928>
   209a0:	ldr	r5, [sp, #44]	; 0x2c
   209a4:	ldr	r0, [sp, #36]	; 0x24
   209a8:	mov	r1, r2
   209ac:	mov	r3, #5
   209b0:	mov	r2, r5
   209b4:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   209b8:	mov	r8, r0
   209bc:	b	209d4 <main@@Base+0xa930>
   209c0:	ldr	r0, [sp, #32]
   209c4:	mov	r1, #1
   209c8:	mov	r8, r2
   209cc:	str	r1, [r0]
   209d0:	ldr	r5, [sp, #44]	; 0x2c
   209d4:	sub	lr, r5, r8
   209d8:	mov	r0, #8
   209dc:	cmp	lr, #8
   209e0:	movcc	r0, lr
   209e4:	sub	r7, r0, #1
   209e8:	cmp	r7, #7
   209ec:	bhi	211dc <main@@Base+0xb138>
   209f0:	add	r4, pc, #32
   209f4:	mov	r1, #0
   209f8:	mov	ip, #0
   209fc:	mov	r9, #0
   20a00:	mov	r6, #0
   20a04:	mov	r3, #0
   20a08:	mov	r5, #0
   20a0c:	mov	r2, #0
   20a10:	mov	r0, #0
   20a14:	ldr	pc, [r4, r7, lsl #2]
   20a18:	andeq	r0, r2, ip, ror sl
   20a1c:	andeq	r0, r2, r4, ror sl
   20a20:	andeq	r0, r2, ip, ror #20
   20a24:	andeq	r0, r2, r4, ror #20
   20a28:	andeq	r0, r2, r8, asr sl
   20a2c:	andeq	r0, r2, ip, asr #20
   20a30:	andeq	r0, r2, ip, lsr sl
   20a34:	andeq	r0, r2, r8, lsr sl
   20a38:	ldrb	ip, [r8, #7]
   20a3c:	ldrb	r0, [r8, #6]
   20a40:	mov	r9, r1
   20a44:	orr	r0, ip, r0, lsl #8
   20a48:	mov	r1, r0
   20a4c:	ldrb	r0, [r8, #5]
   20a50:	mov	r6, r9
   20a54:	orr	r1, r1, r0, lsl #16
   20a58:	ldrb	r0, [r8, #4]
   20a5c:	mov	r3, r6
   20a60:	orr	r1, r1, r0, lsl #24
   20a64:	ldrb	r0, [r8, #3]
   20a68:	orr	r5, r0, r3
   20a6c:	ldrb	r0, [r8, #2]
   20a70:	orr	r2, r5, r0, lsl #8
   20a74:	ldrb	r0, [r8, #1]
   20a78:	orr	r0, r2, r0, lsl #16
   20a7c:	ldrb	r2, [r8]
   20a80:	orr	r2, r0, r2, lsl #24
   20a84:	movw	r0, #65535	; 0xffff
   20a88:	movt	r0, #26979	; 0x6963
   20a8c:	cmp	r2, r0
   20a90:	bhi	20b08 <main@@Base+0xaa64>
   20a94:	movw	r0, #30062	; 0x756e
   20a98:	and	r1, r1, #-16777216	; 0xff000000
   20a9c:	movt	r0, #25455	; 0x636f
   20aa0:	eor	r1, r1, #1946157056	; 0x74000000
   20aa4:	eor	r0, r2, r0
   20aa8:	orrs	r0, r1, r0
   20aac:	bne	211dc <main@@Base+0xb138>
   20ab0:	cmp	lr, #6
   20ab4:	mov	r7, r8
   20ab8:	blt	20e4c <main@@Base+0xada8>
   20abc:	ldr	r2, [sp, #32]
   20ac0:	mov	r1, r8
   20ac4:	ldrb	r0, [r1, #5]!
   20ac8:	ldr	r2, [r2]
   20acc:	cmp	r2, #0
   20ad0:	beq	20be0 <main@@Base+0xab3c>
   20ad4:	cmp	r0, #33	; 0x21
   20ad8:	bcc	20ae8 <main@@Base+0xaa44>
   20adc:	cmp	r0, #58	; 0x3a
   20ae0:	mov	r7, r8
   20ae4:	bne	20e4c <main@@Base+0xada8>
   20ae8:	ldr	r0, [sp, #32]
   20aec:	mov	r2, #0
   20af0:	str	r2, [r0]
   20af4:	ldr	r0, [sp, #44]	; 0x2c
   20af8:	sub	r0, r0, r1
   20afc:	cmp	r0, #2
   20b00:	bge	20c00 <main@@Base+0xab5c>
   20b04:	b	20cb4 <main@@Base+0xac10>
   20b08:	movw	r1, #27648	; 0x6c00
   20b0c:	bic	r0, r2, #255	; 0xff
   20b10:	movt	r1, #30305	; 0x7661
   20b14:	teq	r0, r1
   20b18:	bne	20b74 <main@@Base+0xaad0>
   20b1c:	cmp	lr, #4
   20b20:	mov	r7, r8
   20b24:	blt	20fd4 <main@@Base+0xaf30>
   20b28:	ldr	r2, [sp, #32]
   20b2c:	mov	r1, r8
   20b30:	ldrb	r0, [r1, #3]!
   20b34:	ldr	r2, [r2]
   20b38:	cmp	r2, #0
   20b3c:	beq	20c20 <main@@Base+0xab7c>
   20b40:	cmp	r0, #33	; 0x21
   20b44:	bcc	20b54 <main@@Base+0xaab0>
   20b48:	cmp	r0, #58	; 0x3a
   20b4c:	mov	r7, r8
   20b50:	bne	20fd4 <main@@Base+0xaf30>
   20b54:	ldr	r0, [sp, #32]
   20b58:	mov	r2, #0
   20b5c:	str	r2, [r0]
   20b60:	ldr	r0, [sp, #44]	; 0x2c
   20b64:	sub	r0, r0, r1
   20b68:	cmp	r0, #2
   20b6c:	bge	20c40 <main@@Base+0xab9c>
   20b70:	b	20d38 <main@@Base+0xac94>
   20b74:	movw	r0, #0
   20b78:	bfc	r2, #0, #16
   20b7c:	movt	r0, #26980	; 0x6964
   20b80:	teq	r2, r0
   20b84:	bne	211dc <main@@Base+0xb138>
   20b88:	cmp	lr, #3
   20b8c:	mov	r1, r8
   20b90:	blt	2117c <main@@Base+0xb0d8>
   20b94:	ldr	r1, [sp, #32]
   20b98:	mov	r2, r8
   20b9c:	ldrb	r0, [r2, #2]!
   20ba0:	ldr	r1, [r1]
   20ba4:	cmp	r1, #0
   20ba8:	beq	20c60 <main@@Base+0xabbc>
   20bac:	cmp	r0, #33	; 0x21
   20bb0:	bcc	20bc0 <main@@Base+0xab1c>
   20bb4:	cmp	r0, #58	; 0x3a
   20bb8:	mov	r1, r8
   20bbc:	bne	2117c <main@@Base+0xb0d8>
   20bc0:	ldr	r0, [sp, #32]
   20bc4:	mov	r1, #0
   20bc8:	str	r1, [r0]
   20bcc:	ldr	r0, [sp, #44]	; 0x2c
   20bd0:	sub	r0, r0, r2
   20bd4:	cmp	r0, #2
   20bd8:	bge	20c80 <main@@Base+0xabdc>
   20bdc:	b	20dbc <main@@Base+0xad18>
   20be0:	cmp	r0, #34	; 0x22
   20be4:	mov	r7, r8
   20be8:	bne	20e4c <main@@Base+0xada8>
   20bec:	add	r1, r8, #6
   20bf0:	ldr	r0, [sp, #44]	; 0x2c
   20bf4:	sub	r0, r0, r1
   20bf8:	cmp	r0, #2
   20bfc:	blt	20cb4 <main@@Base+0xac10>
   20c00:	ldrb	r0, [r1]
   20c04:	cmp	r0, #32
   20c08:	bls	20ca0 <main@@Base+0xabfc>
   20c0c:	mov	r7, r1
   20c10:	ldr	r0, [sp, #44]	; 0x2c
   20c14:	cmp	r7, r0
   20c18:	bne	20cd0 <main@@Base+0xac2c>
   20c1c:	b	20d0c <main@@Base+0xac68>
   20c20:	cmp	r0, #34	; 0x22
   20c24:	mov	r7, r8
   20c28:	bne	20fd4 <main@@Base+0xaf30>
   20c2c:	add	r1, r8, #4
   20c30:	ldr	r0, [sp, #44]	; 0x2c
   20c34:	sub	r0, r0, r1
   20c38:	cmp	r0, #2
   20c3c:	blt	20d38 <main@@Base+0xac94>
   20c40:	ldrb	r0, [r1]
   20c44:	cmp	r0, #32
   20c48:	bls	20d24 <main@@Base+0xac80>
   20c4c:	mov	r7, r1
   20c50:	ldr	r0, [sp, #44]	; 0x2c
   20c54:	cmp	r7, r0
   20c58:	bne	20d54 <main@@Base+0xacb0>
   20c5c:	b	20d90 <main@@Base+0xacec>
   20c60:	cmp	r0, #34	; 0x22
   20c64:	mov	r1, r8
   20c68:	bne	2117c <main@@Base+0xb0d8>
   20c6c:	add	r2, r8, #3
   20c70:	ldr	r0, [sp, #44]	; 0x2c
   20c74:	sub	r0, r0, r2
   20c78:	cmp	r0, #2
   20c7c:	blt	20dbc <main@@Base+0xad18>
   20c80:	ldrb	r0, [r2]
   20c84:	cmp	r0, #32
   20c88:	bls	20da8 <main@@Base+0xad04>
   20c8c:	mov	r1, r2
   20c90:	ldr	r0, [sp, #44]	; 0x2c
   20c94:	cmp	r1, r0
   20c98:	bne	20ddc <main@@Base+0xad38>
   20c9c:	b	20e18 <main@@Base+0xad74>
   20ca0:	bne	20cb4 <main@@Base+0xac10>
   20ca4:	mov	r7, r1
   20ca8:	ldrb	r0, [r7, #1]!
   20cac:	cmp	r0, #32
   20cb0:	bhi	20cc4 <main@@Base+0xac20>
   20cb4:	ldr	r0, [sp, #36]	; 0x24
   20cb8:	ldr	r2, [sp, #44]	; 0x2c
   20cbc:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   20cc0:	mov	r7, r0
   20cc4:	ldr	r0, [sp, #44]	; 0x2c
   20cc8:	cmp	r7, r0
   20ccc:	beq	20d0c <main@@Base+0xac68>
   20cd0:	ldrb	r0, [r7]
   20cd4:	cmp	r0, #58	; 0x3a
   20cd8:	bne	20d0c <main@@Base+0xac68>
   20cdc:	ldr	r0, [sp, #44]	; 0x2c
   20ce0:	add	r1, r7, #1
   20ce4:	sub	r0, r0, r1
   20ce8:	cmp	r0, #2
   20cec:	blt	20e3c <main@@Base+0xad98>
   20cf0:	ldrb	r0, [r1]
   20cf4:	cmp	r0, #32
   20cf8:	bls	20e2c <main@@Base+0xad88>
   20cfc:	mov	r7, r1
   20d00:	cmp	r8, r7
   20d04:	bne	20e54 <main@@Base+0xadb0>
   20d08:	b	211dc <main@@Base+0xb138>
   20d0c:	ldr	r0, [sp, #36]	; 0x24
   20d10:	ldr	r2, [sp, #44]	; 0x2c
   20d14:	mov	r1, r7
   20d18:	mov	r3, #4
   20d1c:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   20d20:	b	20e48 <main@@Base+0xada4>
   20d24:	bne	20d38 <main@@Base+0xac94>
   20d28:	mov	r7, r1
   20d2c:	ldrb	r0, [r7, #1]!
   20d30:	cmp	r0, #32
   20d34:	bhi	20d48 <main@@Base+0xaca4>
   20d38:	ldr	r0, [sp, #36]	; 0x24
   20d3c:	ldr	r2, [sp, #44]	; 0x2c
   20d40:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   20d44:	mov	r7, r0
   20d48:	ldr	r0, [sp, #44]	; 0x2c
   20d4c:	cmp	r7, r0
   20d50:	beq	20d90 <main@@Base+0xacec>
   20d54:	ldrb	r0, [r7]
   20d58:	cmp	r0, #58	; 0x3a
   20d5c:	bne	20d90 <main@@Base+0xacec>
   20d60:	ldr	r0, [sp, #44]	; 0x2c
   20d64:	add	r1, r7, #1
   20d68:	sub	r0, r0, r1
   20d6c:	cmp	r0, #2
   20d70:	blt	20fc4 <main@@Base+0xaf20>
   20d74:	ldrb	r0, [r1]
   20d78:	cmp	r0, #32
   20d7c:	bls	20fb4 <main@@Base+0xaf10>
   20d80:	mov	r7, r1
   20d84:	cmp	r8, r7
   20d88:	bne	20fdc <main@@Base+0xaf38>
   20d8c:	b	211dc <main@@Base+0xb138>
   20d90:	ldr	r0, [sp, #36]	; 0x24
   20d94:	ldr	r2, [sp, #44]	; 0x2c
   20d98:	mov	r1, r7
   20d9c:	mov	r3, #4
   20da0:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   20da4:	b	20fd0 <main@@Base+0xaf2c>
   20da8:	bne	20dbc <main@@Base+0xad18>
   20dac:	mov	r1, r2
   20db0:	ldrb	r0, [r1, #1]!
   20db4:	cmp	r0, #32
   20db8:	bhi	20dd0 <main@@Base+0xad2c>
   20dbc:	mov	r1, r2
   20dc0:	ldr	r0, [sp, #36]	; 0x24
   20dc4:	ldr	r2, [sp, #44]	; 0x2c
   20dc8:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   20dcc:	mov	r1, r0
   20dd0:	ldr	r0, [sp, #44]	; 0x2c
   20dd4:	cmp	r1, r0
   20dd8:	beq	20e18 <main@@Base+0xad74>
   20ddc:	ldrb	r0, [r1]
   20de0:	cmp	r0, #58	; 0x3a
   20de4:	bne	20e18 <main@@Base+0xad74>
   20de8:	ldr	r0, [sp, #44]	; 0x2c
   20dec:	add	r2, r1, #1
   20df0:	sub	r0, r0, r2
   20df4:	cmp	r0, #2
   20df8:	blt	21168 <main@@Base+0xb0c4>
   20dfc:	ldrb	r0, [r2]
   20e00:	cmp	r0, #32
   20e04:	bls	21158 <main@@Base+0xb0b4>
   20e08:	mov	r1, r2
   20e0c:	cmp	r8, r1
   20e10:	bne	21184 <main@@Base+0xb0e0>
   20e14:	b	211dc <main@@Base+0xb138>
   20e18:	ldr	r0, [sp, #36]	; 0x24
   20e1c:	ldr	r2, [sp, #44]	; 0x2c
   20e20:	mov	r3, #4
   20e24:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   20e28:	b	21178 <main@@Base+0xb0d4>
   20e2c:	bne	20e3c <main@@Base+0xad98>
   20e30:	ldrb	r0, [r7, #2]!
   20e34:	cmp	r0, #32
   20e38:	bhi	20e4c <main@@Base+0xada8>
   20e3c:	ldr	r0, [sp, #36]	; 0x24
   20e40:	ldr	r2, [sp, #44]	; 0x2c
   20e44:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   20e48:	mov	r7, r0
   20e4c:	cmp	r8, r7
   20e50:	beq	211dc <main@@Base+0xb138>
   20e54:	ldr	r0, [sp, #44]	; 0x2c
   20e58:	mov	r6, #0
   20e5c:	str	r6, [fp, #-52]	; 0xffffffcc
   20e60:	str	r6, [fp, #-56]	; 0xffffffc8
   20e64:	strh	r6, [fp, #-60]	; 0xffffffc4
   20e68:	str	r6, [sp, #56]	; 0x38
   20e6c:	cmp	r7, r0
   20e70:	beq	20ecc <main@@Base+0xae28>
   20e74:	sub	r0, fp, #56	; 0x38
   20e78:	ldr	r2, [sp, #44]	; 0x2c
   20e7c:	mov	r1, r7
   20e80:	add	r3, sp, #56	; 0x38
   20e84:	str	r0, [sp]
   20e88:	ldr	r0, [sp, #36]	; 0x24
   20e8c:	bl	38fa8 <flatcc_json_parser_integer@@Base>
   20e90:	cmp	r0, r7
   20e94:	beq	20edc <main@@Base+0xae38>
   20e98:	mov	r4, r0
   20e9c:	ldr	r0, [sp, #56]	; 0x38
   20ea0:	cmp	r0, #0
   20ea4:	beq	20eec <main@@Base+0xae48>
   20ea8:	ldr	r0, [sp, #36]	; 0x24
   20eac:	ldr	r2, [sp, #44]	; 0x2c
   20eb0:	mov	r1, r4
   20eb4:	mov	r3, #8
   20eb8:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   20ebc:	mov	r4, r0
   20ec0:	cmp	r7, r4
   20ec4:	bne	20f70 <main@@Base+0xaecc>
   20ec8:	b	20f34 <main@@Base+0xae90>
   20ecc:	ldr	r4, [sp, #44]	; 0x2c
   20ed0:	cmp	r7, r4
   20ed4:	bne	20f70 <main@@Base+0xaecc>
   20ed8:	b	20f34 <main@@Base+0xae90>
   20edc:	mov	r4, r7
   20ee0:	cmp	r7, r4
   20ee4:	bne	20f70 <main@@Base+0xaecc>
   20ee8:	b	20f34 <main@@Base+0xae90>
   20eec:	ldr	r0, [fp, #-56]	; 0xffffffc8
   20ef0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   20ef4:	subs	r2, r0, #65536	; 0x10000
   20ef8:	sbcs	r1, r1, #0
   20efc:	bcc	20f24 <main@@Base+0xae80>
   20f00:	ldr	r0, [sp, #36]	; 0x24
   20f04:	ldr	r2, [sp, #44]	; 0x2c
   20f08:	mov	r1, r4
   20f0c:	mov	r3, #7
   20f10:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   20f14:	mov	r4, r0
   20f18:	cmp	r7, r4
   20f1c:	bne	20f70 <main@@Base+0xaecc>
   20f20:	b	20f34 <main@@Base+0xae90>
   20f24:	mov	r6, r0
   20f28:	strh	r0, [fp, #-60]	; 0xffffffc4
   20f2c:	cmp	r7, r4
   20f30:	bne	20f70 <main@@Base+0xaecc>
   20f34:	sub	r0, fp, #60	; 0x3c
   20f38:	ldr	r2, [sp, #44]	; 0x2c
   20f3c:	mov	r1, r7
   20f40:	str	r0, [sp]
   20f44:	movw	r0, #628	; 0x274
   20f48:	movt	r0, #6
   20f4c:	add	r3, r0, #24
   20f50:	ldr	r0, [sp, #36]	; 0x24
   20f54:	bl	2e690 <main@@Base+0x185ec>
   20f58:	cmp	r0, r7
   20f5c:	mov	r4, r0
   20f60:	ldrne	r0, [sp, #44]	; 0x2c
   20f64:	cmpne	r4, r0
   20f68:	beq	217b4 <main@@Base+0xb710>
   20f6c:	ldrh	r6, [fp, #-60]	; 0xffffffc4
   20f70:	movw	r0, #65535	; 0xffff
   20f74:	tst	r6, r0
   20f78:	bne	20f8c <main@@Base+0xaee8>
   20f7c:	ldr	r0, [sp, #36]	; 0x24
   20f80:	ldrb	r0, [r0, #8]
   20f84:	tst	r0, #2
   20f88:	beq	211c4 <main@@Base+0xb120>
   20f8c:	ldr	r0, [sp, #36]	; 0x24
   20f90:	mov	r1, #2
   20f94:	mov	r2, #2
   20f98:	mov	r3, #2
   20f9c:	ldr	r0, [r0]
   20fa0:	bl	332fc <flatcc_builder_table_add@@Base>
   20fa4:	cmp	r0, #0
   20fa8:	beq	217b4 <main@@Base+0xb710>
   20fac:	strh	r6, [r0]
   20fb0:	b	211c4 <main@@Base+0xb120>
   20fb4:	bne	20fc4 <main@@Base+0xaf20>
   20fb8:	ldrb	r0, [r7, #2]!
   20fbc:	cmp	r0, #32
   20fc0:	bhi	20fd4 <main@@Base+0xaf30>
   20fc4:	ldr	r0, [sp, #36]	; 0x24
   20fc8:	ldr	r2, [sp, #44]	; 0x2c
   20fcc:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   20fd0:	mov	r7, r0
   20fd4:	cmp	r8, r7
   20fd8:	beq	211dc <main@@Base+0xb138>
   20fdc:	ldr	r0, [sp, #44]	; 0x2c
   20fe0:	mov	r6, #0
   20fe4:	str	r6, [fp, #-52]	; 0xffffffcc
   20fe8:	str	r6, [fp, #-56]	; 0xffffffc8
   20fec:	str	r6, [sp, #60]	; 0x3c
   20ff0:	str	r6, [sp, #56]	; 0x38
   20ff4:	str	r6, [fp, #-60]	; 0xffffffc4
   20ff8:	cmp	r7, r0
   20ffc:	beq	2105c <main@@Base+0xafb8>
   21000:	sub	r0, fp, #56	; 0x38
   21004:	ldr	r2, [sp, #44]	; 0x2c
   21008:	mov	r1, r7
   2100c:	sub	r3, fp, #60	; 0x3c
   21010:	str	r0, [sp]
   21014:	ldr	r0, [sp, #36]	; 0x24
   21018:	bl	38fa8 <flatcc_json_parser_integer@@Base>
   2101c:	cmp	r0, r7
   21020:	beq	21070 <main@@Base+0xafcc>
   21024:	mov	r4, r0
   21028:	ldr	r0, [fp, #-60]	; 0xffffffc4
   2102c:	ldr	r6, [fp, #-56]	; 0xffffffc8
   21030:	ldr	r5, [fp, #-52]	; 0xffffffcc
   21034:	cmp	r0, #0
   21038:	beq	21088 <main@@Base+0xafe4>
   2103c:	subs	r0, r6, #1
   21040:	sbcs	r0, r5, #-2147483648	; 0x80000000
   21044:	bcc	210bc <main@@Base+0xb018>
   21048:	ldr	r0, [sp, #36]	; 0x24
   2104c:	ldr	r2, [sp, #44]	; 0x2c
   21050:	mov	r1, r4
   21054:	mov	r3, #8
   21058:	b	210a0 <main@@Base+0xaffc>
   2105c:	ldr	r4, [sp, #44]	; 0x2c
   21060:	mov	r5, #0
   21064:	cmp	r7, r4
   21068:	bne	21114 <main@@Base+0xb070>
   2106c:	b	210d4 <main@@Base+0xb030>
   21070:	mov	r6, #0
   21074:	mov	r5, #0
   21078:	mov	r4, r7
   2107c:	cmp	r7, r4
   21080:	bne	21114 <main@@Base+0xb070>
   21084:	b	210d4 <main@@Base+0xb030>
   21088:	cmn	r5, #1
   2108c:	bgt	210c4 <main@@Base+0xb020>
   21090:	ldr	r0, [sp, #36]	; 0x24
   21094:	ldr	r2, [sp, #44]	; 0x2c
   21098:	mov	r1, r4
   2109c:	mov	r3, #7
   210a0:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   210a4:	mov	r4, r0
   210a8:	mov	r6, #0
   210ac:	mov	r5, #0
   210b0:	cmp	r7, r4
   210b4:	bne	21114 <main@@Base+0xb070>
   210b8:	b	210d4 <main@@Base+0xb030>
   210bc:	rsbs	r6, r6, #0
   210c0:	rsc	r5, r5, #0
   210c4:	str	r6, [sp, #56]	; 0x38
   210c8:	str	r5, [sp, #60]	; 0x3c
   210cc:	cmp	r7, r4
   210d0:	bne	21114 <main@@Base+0xb070>
   210d4:	add	r0, sp, #56	; 0x38
   210d8:	ldr	r2, [sp, #44]	; 0x2c
   210dc:	mov	r1, r7
   210e0:	str	r0, [sp]
   210e4:	movw	r0, #628	; 0x274
   210e8:	movt	r0, #6
   210ec:	add	r3, r0, #36	; 0x24
   210f0:	ldr	r0, [sp, #36]	; 0x24
   210f4:	bl	26254 <main@@Base+0x101b0>
   210f8:	cmp	r0, r7
   210fc:	mov	r4, r0
   21100:	ldrne	r0, [sp, #44]	; 0x2c
   21104:	cmpne	r4, r0
   21108:	beq	217b4 <main@@Base+0xb710>
   2110c:	ldr	r6, [sp, #56]	; 0x38
   21110:	ldr	r5, [sp, #60]	; 0x3c
   21114:	orrs	r0, r6, r5
   21118:	bne	2112c <main@@Base+0xb088>
   2111c:	ldr	r0, [sp, #36]	; 0x24
   21120:	ldrb	r0, [r0, #8]
   21124:	tst	r0, #2
   21128:	beq	211c4 <main@@Base+0xb120>
   2112c:	ldr	r0, [sp, #36]	; 0x24
   21130:	mov	r1, #1
   21134:	mov	r2, #8
   21138:	mov	r3, #8
   2113c:	ldr	r0, [r0]
   21140:	bl	332fc <flatcc_builder_table_add@@Base>
   21144:	cmp	r0, #0
   21148:	beq	217b4 <main@@Base+0xb710>
   2114c:	str	r6, [r0]
   21150:	str	r5, [r0, #4]
   21154:	b	211c4 <main@@Base+0xb120>
   21158:	bne	21168 <main@@Base+0xb0c4>
   2115c:	ldrb	r0, [r1, #2]!
   21160:	cmp	r0, #32
   21164:	bhi	2117c <main@@Base+0xb0d8>
   21168:	mov	r1, r2
   2116c:	ldr	r0, [sp, #36]	; 0x24
   21170:	ldr	r2, [sp, #44]	; 0x2c
   21174:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   21178:	mov	r1, r0
   2117c:	cmp	r8, r1
   21180:	beq	211dc <main@@Base+0xb138>
   21184:	ldr	r0, [sp, #36]	; 0x24
   21188:	ldr	r2, [sp, #44]	; 0x2c
   2118c:	add	r3, sp, #64	; 0x40
   21190:	bl	39580 <flatcc_json_parser_build_string@@Base>
   21194:	mov	r4, r0
   21198:	ldr	r0, [sp, #64]	; 0x40
   2119c:	cmp	r0, #0
   211a0:	beq	217b4 <main@@Base+0xb710>
   211a4:	ldr	r0, [sp, #36]	; 0x24
   211a8:	mov	r1, #0
   211ac:	ldr	r0, [r0]
   211b0:	bl	3316c <flatcc_builder_table_add_offset@@Base>
   211b4:	cmp	r0, #0
   211b8:	beq	217b4 <main@@Base+0xb710>
   211bc:	ldr	r1, [sp, #64]	; 0x40
   211c0:	str	r1, [r0]
   211c4:	ldr	r5, [sp, #44]	; 0x2c
   211c8:	ldr	sl, [sp, #36]	; 0x24
   211cc:	sub	r0, r5, r4
   211d0:	cmp	r0, #2
   211d4:	blt	21234 <main@@Base+0xb190>
   211d8:	b	21204 <main@@Base+0xb160>
   211dc:	ldr	sl, [sp, #36]	; 0x24
   211e0:	ldr	r5, [sp, #44]	; 0x2c
   211e4:	mov	r1, r8
   211e8:	mov	r0, sl
   211ec:	mov	r2, r5
   211f0:	bl	373bc <flatcc_json_parser_unmatched_symbol@@Base>
   211f4:	mov	r4, r0
   211f8:	sub	r0, r5, r4
   211fc:	cmp	r0, #2
   21200:	blt	21234 <main@@Base+0xb190>
   21204:	ldrb	r0, [r4]
   21208:	cmp	r0, #32
   2120c:	bls	21220 <main@@Base+0xb17c>
   21210:	mov	r2, r4
   21214:	cmp	r2, r5
   21218:	bne	21250 <main@@Base+0xb1ac>
   2121c:	b	215ec <main@@Base+0xb548>
   21220:	bne	21234 <main@@Base+0xb190>
   21224:	mov	r2, r4
   21228:	ldrb	r0, [r2, #1]!
   2122c:	cmp	r0, #32
   21230:	bhi	21248 <main@@Base+0xb1a4>
   21234:	mov	r0, sl
   21238:	mov	r1, r4
   2123c:	mov	r2, r5
   21240:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   21244:	mov	r2, r0
   21248:	cmp	r2, r5
   2124c:	beq	215ec <main@@Base+0xb548>
   21250:	ldrb	r0, [r2]
   21254:	cmp	r0, #44	; 0x2c
   21258:	bne	21600 <main@@Base+0xb55c>
   2125c:	add	r1, r2, #1
   21260:	sub	r0, r5, r1
   21264:	cmp	r0, #2
   21268:	blt	212a4 <main@@Base+0xb200>
   2126c:	ldrb	r0, [r1]
   21270:	cmp	r0, #32
   21274:	bls	2128c <main@@Base+0xb1e8>
   21278:	ldr	r5, [sp, #44]	; 0x2c
   2127c:	mov	r2, r1
   21280:	cmp	r2, r5
   21284:	bne	212bc <main@@Base+0xb218>
   21288:	b	21670 <main@@Base+0xb5cc>
   2128c:	ldr	r5, [sp, #44]	; 0x2c
   21290:	ldr	sl, [sp, #36]	; 0x24
   21294:	bne	212a4 <main@@Base+0xb200>
   21298:	ldrb	r0, [r2, #2]!
   2129c:	cmp	r0, #32
   212a0:	bhi	212b4 <main@@Base+0xb210>
   212a4:	mov	r0, sl
   212a8:	mov	r2, r5
   212ac:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   212b0:	mov	r2, r0
   212b4:	cmp	r2, r5
   212b8:	beq	21670 <main@@Base+0xb5cc>
   212bc:	ldrb	r0, [r2]
   212c0:	cmp	r0, #125	; 0x7d
   212c4:	bne	20970 <main@@Base+0xa8cc>
   212c8:	add	r1, r2, #1
   212cc:	sub	r0, r5, r1
   212d0:	ldr	sl, [sp, #36]	; 0x24
   212d4:	cmp	r0, #2
   212d8:	bge	21620 <main@@Base+0xb57c>
   212dc:	b	21778 <main@@Base+0xb6d4>
   212e0:	ldr	r6, [sp, #44]	; 0x2c
   212e4:	ldr	sl, [sp, #36]	; 0x24
   212e8:	bne	212fc <main@@Base+0xb258>
   212ec:	ldrb	r0, [r2, #2]!
   212f0:	mov	r4, r2
   212f4:	cmp	r0, #32
   212f8:	bhi	1c974 <main@@Base+0x68d0>
   212fc:	mov	r0, sl
   21300:	mov	r2, r6
   21304:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   21308:	b	1c970 <main@@Base+0x68cc>
   2130c:	ldr	r6, [sp, #44]	; 0x2c
   21310:	ldr	sl, [sp, #36]	; 0x24
   21314:	bne	21328 <main@@Base+0xb284>
   21318:	ldrb	r0, [r4, #2]!
   2131c:	mov	r7, r4
   21320:	cmp	r0, #32
   21324:	bhi	1ca44 <main@@Base+0x69a0>
   21328:	mov	r0, sl
   2132c:	mov	r2, r6
   21330:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   21334:	b	1ca40 <main@@Base+0x699c>
   21338:	ldr	sl, [sp, #36]	; 0x24
   2133c:	ldr	r6, [sp, #44]	; 0x2c
   21340:	mov	r1, r2
   21344:	mov	r0, sl
   21348:	mov	r2, r6
   2134c:	mov	r3, #10
   21350:	b	1c87c <main@@Base+0x67d8>
   21354:	ldr	sl, [sp, #36]	; 0x24
   21358:	ldr	r6, [sp, #44]	; 0x2c
   2135c:	mov	r1, r2
   21360:	mov	r0, sl
   21364:	mov	r2, r6
   21368:	mov	r3, #9
   2136c:	b	1de2c <main@@Base+0x7d88>
   21370:	ldr	r0, [sp, #36]	; 0x24
   21374:	ldr	r2, [sp, #44]	; 0x2c
   21378:	mov	r1, r4
   2137c:	mov	r3, #9
   21380:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   21384:	b	215dc <main@@Base+0xb538>
   21388:	ldr	r6, [fp, #-56]	; 0xffffffc8
   2138c:	mov	r4, r1
   21390:	str	r6, [fp, #-60]	; 0xffffffc4
   21394:	cmp	r7, r4
   21398:	bne	213d8 <main@@Base+0xb334>
   2139c:	sub	r0, fp, #60	; 0x3c
   213a0:	ldr	r2, [sp, #44]	; 0x2c
   213a4:	mov	r1, r7
   213a8:	str	r0, [sp]
   213ac:	movw	r0, #268	; 0x10c
   213b0:	movt	r0, #6
   213b4:	add	r3, r0, #48	; 0x30
   213b8:	ldr	r0, [sp, #36]	; 0x24
   213bc:	bl	2649c <main@@Base+0x103f8>
   213c0:	cmp	r0, r7
   213c4:	mov	r4, r0
   213c8:	ldrne	r1, [sp, #44]	; 0x2c
   213cc:	cmpne	r4, r1
   213d0:	beq	218c0 <main@@Base+0xb81c>
   213d4:	ldr	r6, [fp, #-60]	; 0xffffffc4
   213d8:	ldr	sl, [sp, #36]	; 0x24
   213dc:	cmp	r6, #0
   213e0:	bne	213f0 <main@@Base+0xb34c>
   213e4:	ldrb	r0, [sl, #8]
   213e8:	tst	r0, #2
   213ec:	beq	21414 <main@@Base+0xb370>
   213f0:	ldr	r0, [sl]
   213f4:	mov	r1, #21
   213f8:	mov	r2, #4
   213fc:	mov	r3, #4
   21400:	bl	332fc <flatcc_builder_table_add@@Base>
   21404:	cmp	r0, #0
   21408:	beq	218c0 <main@@Base+0xb81c>
   2140c:	str	r6, [r0]
   21410:	ldr	sl, [sp, #36]	; 0x24
   21414:	ldr	r6, [sp, #44]	; 0x2c
   21418:	b	1a494 <main@@Base+0x43f0>
   2141c:	ldr	sl, [sp, #36]	; 0x24
   21420:	ldr	r6, [sp, #44]	; 0x2c
   21424:	mov	r1, r2
   21428:	mov	r0, sl
   2142c:	mov	r2, r6
   21430:	mov	r3, #9
   21434:	b	1e208 <main@@Base+0x8164>
   21438:	ldr	r8, [sp, #44]	; 0x2c
   2143c:	ldr	sl, [sp, #36]	; 0x24
   21440:	b	1faf8 <main@@Base+0x9a54>
   21444:	ldr	r0, [sp, #36]	; 0x24
   21448:	ldr	r2, [sp, #44]	; 0x2c
   2144c:	mov	r1, r4
   21450:	mov	r3, #9
   21454:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   21458:	b	2169c <main@@Base+0xb5f8>
   2145c:	cmp	r0, #93	; 0x5d
   21460:	bne	216d8 <main@@Base+0xb634>
   21464:	ldr	r0, [sp, #44]	; 0x2c
   21468:	add	r1, r8, #1
   2146c:	sub	r0, r0, r1
   21470:	cmp	r0, #2
   21474:	blt	214f0 <main@@Base+0xb44c>
   21478:	ldrb	r0, [r1]
   2147c:	cmp	r0, #32
   21480:	bhi	214e4 <main@@Base+0xb440>
   21484:	bne	214f0 <main@@Base+0xb44c>
   21488:	ldrb	r0, [r8, #2]!
   2148c:	cmp	r0, #32
   21490:	bhi	216f0 <main@@Base+0xb64c>
   21494:	b	214f0 <main@@Base+0xb44c>
   21498:	ldr	r1, [sp, #44]	; 0x2c
   2149c:	ldr	r0, [sp, #36]	; 0x24
   214a0:	mov	r2, r1
   214a4:	b	216e4 <main@@Base+0xb640>
   214a8:	ldr	sl, [sp, #36]	; 0x24
   214ac:	ldr	r6, [sp, #44]	; 0x2c
   214b0:	mov	r1, r3
   214b4:	mov	r0, sl
   214b8:	mov	r2, r6
   214bc:	mov	r3, #10
   214c0:	b	1cff8 <main@@Base+0x6f54>
   214c4:	ldr	r0, [sp, #44]	; 0x2c
   214c8:	add	r1, r8, #1
   214cc:	sub	r0, r0, r1
   214d0:	cmp	r0, #2
   214d4:	blt	214f0 <main@@Base+0xb44c>
   214d8:	ldrb	r0, [r1]
   214dc:	cmp	r0, #32
   214e0:	bls	21484 <main@@Base+0xb3e0>
   214e4:	ldr	sl, [sp, #36]	; 0x24
   214e8:	mov	r8, r1
   214ec:	b	1faf8 <main@@Base+0x9a54>
   214f0:	ldr	r0, [sp, #36]	; 0x24
   214f4:	ldr	r2, [sp, #44]	; 0x2c
   214f8:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   214fc:	b	216ec <main@@Base+0xb648>
   21500:	ldr	r4, [sp, #44]	; 0x2c
   21504:	b	21710 <main@@Base+0xb66c>
   21508:	cmp	r0, #93	; 0x5d
   2150c:	bne	216f8 <main@@Base+0xb654>
   21510:	ldr	r0, [sp, #44]	; 0x2c
   21514:	add	r1, r4, #1
   21518:	sub	r0, r0, r1
   2151c:	cmp	r0, #2
   21520:	blt	21584 <main@@Base+0xb4e0>
   21524:	ldrb	r0, [r1]
   21528:	cmp	r0, #32
   2152c:	bls	21574 <main@@Base+0xb4d0>
   21530:	mov	r4, r1
   21534:	b	21710 <main@@Base+0xb66c>
   21538:	ldr	r6, [sp, #44]	; 0x2c
   2153c:	ldr	sl, [sp, #36]	; 0x24
   21540:	bne	21554 <main@@Base+0xb4b0>
   21544:	ldrb	r0, [r2, #2]!
   21548:	mov	r4, r2
   2154c:	cmp	r0, #32
   21550:	bhi	1c884 <main@@Base+0x67e0>
   21554:	mov	r0, sl
   21558:	mov	r2, r6
   2155c:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   21560:	b	1c880 <main@@Base+0x67dc>
   21564:	ldr	r1, [sp, #44]	; 0x2c
   21568:	ldr	r0, [sp, #36]	; 0x24
   2156c:	mov	r2, r1
   21570:	b	21704 <main@@Base+0xb660>
   21574:	bne	21584 <main@@Base+0xb4e0>
   21578:	ldrb	r0, [r4, #2]!
   2157c:	cmp	r0, #32
   21580:	bhi	21710 <main@@Base+0xb66c>
   21584:	ldr	r0, [sp, #36]	; 0x24
   21588:	ldr	r2, [sp, #44]	; 0x2c
   2158c:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   21590:	b	2170c <main@@Base+0xb668>
   21594:	ldr	r6, [sp, #44]	; 0x2c
   21598:	ldr	sl, [sp, #36]	; 0x24
   2159c:	bne	215b0 <main@@Base+0xb50c>
   215a0:	ldrb	r0, [r2, #2]!
   215a4:	mov	r4, r2
   215a8:	cmp	r0, #32
   215ac:	bhi	1de34 <main@@Base+0x7d90>
   215b0:	mov	r0, sl
   215b4:	mov	r2, r6
   215b8:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   215bc:	b	1de30 <main@@Base+0x7d8c>
   215c0:	bne	215d0 <main@@Base+0xb52c>
   215c4:	ldrb	r0, [r4, #2]!
   215c8:	cmp	r0, #32
   215cc:	bhi	215e0 <main@@Base+0xb53c>
   215d0:	ldr	r0, [sp, #36]	; 0x24
   215d4:	ldr	r2, [sp, #44]	; 0x2c
   215d8:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   215dc:	mov	r4, r0
   215e0:	ldr	r6, [sp, #44]	; 0x2c
   215e4:	ldr	sl, [sp, #36]	; 0x24
   215e8:	b	1e3a4 <main@@Base+0x8300>
   215ec:	mov	r4, r5
   215f0:	ldr	r0, [sl, #24]
   215f4:	cmp	r0, #0
   215f8:	bne	1e2f4 <main@@Base+0x8250>
   215fc:	b	21794 <main@@Base+0xb6f0>
   21600:	cmp	r0, #125	; 0x7d
   21604:	bne	21748 <main@@Base+0xb6a4>
   21608:	ldr	r0, [sp, #44]	; 0x2c
   2160c:	add	r1, r2, #1
   21610:	sub	r0, r0, r1
   21614:	ldr	sl, [sp, #36]	; 0x24
   21618:	cmp	r0, #2
   2161c:	blt	21778 <main@@Base+0xb6d4>
   21620:	ldrb	r0, [r1]
   21624:	cmp	r0, #32
   21628:	bls	21760 <main@@Base+0xb6bc>
   2162c:	ldr	sl, [sp, #36]	; 0x24
   21630:	mov	r4, r1
   21634:	ldr	r0, [sl, #24]
   21638:	cmp	r0, #0
   2163c:	bne	1e2f4 <main@@Base+0x8250>
   21640:	b	21794 <main@@Base+0xb6f0>
   21644:	ldr	r6, [sp, #44]	; 0x2c
   21648:	ldr	sl, [sp, #36]	; 0x24
   2164c:	bne	21660 <main@@Base+0xb5bc>
   21650:	ldrb	r0, [r2, #2]!
   21654:	mov	r4, r2
   21658:	cmp	r0, #32
   2165c:	bhi	1e210 <main@@Base+0x816c>
   21660:	mov	r0, sl
   21664:	mov	r2, r6
   21668:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   2166c:	b	1e20c <main@@Base+0x8168>
   21670:	ldr	sl, [sp, #36]	; 0x24
   21674:	mov	r1, r5
   21678:	mov	r2, r5
   2167c:	b	21754 <main@@Base+0xb6b0>
   21680:	bne	21690 <main@@Base+0xb5ec>
   21684:	ldrb	r0, [r4, #2]!
   21688:	cmp	r0, #32
   2168c:	bhi	216a0 <main@@Base+0xb5fc>
   21690:	ldr	r0, [sp, #36]	; 0x24
   21694:	ldr	r2, [sp, #44]	; 0x2c
   21698:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   2169c:	mov	r4, r0
   216a0:	ldr	r6, [sp, #44]	; 0x2c
   216a4:	ldr	sl, [sp, #36]	; 0x24
   216a8:	b	1e4b8 <main@@Base+0x8414>
   216ac:	ldr	r6, [sp, #44]	; 0x2c
   216b0:	ldr	sl, [sp, #36]	; 0x24
   216b4:	bne	216c8 <main@@Base+0xb624>
   216b8:	ldrb	r0, [r3, #2]!
   216bc:	mov	r4, r3
   216c0:	cmp	r0, #32
   216c4:	bhi	1d000 <main@@Base+0x6f5c>
   216c8:	mov	r0, sl
   216cc:	mov	r2, r6
   216d0:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   216d4:	b	1cffc <main@@Base+0x6f58>
   216d8:	ldr	r0, [sp, #36]	; 0x24
   216dc:	ldr	r2, [sp, #44]	; 0x2c
   216e0:	mov	r1, r8
   216e4:	mov	r3, #9
   216e8:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   216ec:	mov	r8, r0
   216f0:	ldr	sl, [sp, #36]	; 0x24
   216f4:	b	1faf8 <main@@Base+0x9a54>
   216f8:	ldr	r0, [sp, #36]	; 0x24
   216fc:	ldr	r2, [sp, #44]	; 0x2c
   21700:	mov	r1, r4
   21704:	mov	r3, #9
   21708:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   2170c:	mov	r4, r0
   21710:	ldr	sl, [sp, #36]	; 0x24
   21714:	ldr	r0, [sl]
   21718:	bl	32c64 <flatcc_builder_end_vector@@Base>
   2171c:	ldr	r6, [sp, #44]	; 0x2c
   21720:	ldr	r5, [sp, #40]	; 0x28
   21724:	cmp	r0, #0
   21728:	str	r0, [sp, #52]	; 0x34
   2172c:	beq	16fd8 <main@@Base+0xf34>
   21730:	ldr	r0, [sl]
   21734:	mov	r1, #13
   21738:	bl	3316c <flatcc_builder_table_add_offset@@Base>
   2173c:	cmp	r0, #0
   21740:	bne	19c2c <main@@Base+0x3b88>
   21744:	b	16fd8 <main@@Base+0xf34>
   21748:	ldr	sl, [sp, #36]	; 0x24
   2174c:	mov	r1, r2
   21750:	ldr	r2, [sp, #44]	; 0x2c
   21754:	mov	r0, sl
   21758:	mov	r3, #10
   2175c:	b	1e2e0 <main@@Base+0x823c>
   21760:	ldr	sl, [sp, #36]	; 0x24
   21764:	bne	21778 <main@@Base+0xb6d4>
   21768:	ldrb	r0, [r2, #2]!
   2176c:	mov	r4, r2
   21770:	cmp	r0, #32
   21774:	bhi	1e2e8 <main@@Base+0x8244>
   21778:	ldr	r2, [sp, #44]	; 0x2c
   2177c:	mov	r0, sl
   21780:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   21784:	mov	r4, r0
   21788:	ldr	r0, [sl, #24]
   2178c:	cmp	r0, #0
   21790:	bne	1e2f4 <main@@Base+0x8250>
   21794:	ldr	r0, [sl]
   21798:	bl	32950 <flatcc_builder_end_table@@Base>
   2179c:	cmp	r0, #0
   217a0:	str	r0, [sp, #52]	; 0x34
   217a4:	beq	217b4 <main@@Base+0xb710>
   217a8:	ldr	r6, [sp, #44]	; 0x2c
   217ac:	ldr	sl, [sp, #36]	; 0x24
   217b0:	b	217e0 <main@@Base+0xb73c>
   217b4:	ldr	r6, [sp, #44]	; 0x2c
   217b8:	ldr	sl, [sp, #36]	; 0x24
   217bc:	mov	r0, sl
   217c0:	mov	r1, r4
   217c4:	mov	r2, r6
   217c8:	mov	r3, #33	; 0x21
   217cc:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   217d0:	mov	r4, r0
   217d4:	ldr	r0, [sp, #52]	; 0x34
   217d8:	cmp	r0, #0
   217dc:	beq	16fd8 <main@@Base+0xf34>
   217e0:	ldr	r0, [sl]
   217e4:	mov	r1, #14
   217e8:	bl	3316c <flatcc_builder_table_add_offset@@Base>
   217ec:	cmp	r0, #0
   217f0:	bne	19b50 <main@@Base+0x3aac>
   217f4:	b	16fd8 <main@@Base+0xf34>
   217f8:	mov	r4, r6
   217fc:	ldr	r0, [sl, #24]
   21800:	cmp	r0, #0
   21804:	bne	16fd8 <main@@Base+0xf34>
   21808:	b	17090 <main@@Base+0xfec>
   2180c:	cmp	r0, #125	; 0x7d
   21810:	bne	21850 <main@@Base+0xb7ac>
   21814:	add	r1, r2, #1
   21818:	sub	r0, r6, r1
   2181c:	cmp	r0, #2
   21820:	blt	21878 <main@@Base+0xb7d4>
   21824:	ldrb	r0, [r1]
   21828:	cmp	r0, #32
   2182c:	bls	21864 <main@@Base+0xb7c0>
   21830:	mov	r4, r1
   21834:	ldr	r0, [sl, #24]
   21838:	cmp	r0, #0
   2183c:	bne	16fd8 <main@@Base+0xf34>
   21840:	b	17090 <main@@Base+0xfec>
   21844:	mov	r0, sl
   21848:	mov	r1, r6
   2184c:	b	21858 <main@@Base+0xb7b4>
   21850:	mov	r0, sl
   21854:	mov	r1, r2
   21858:	mov	r2, r6
   2185c:	mov	r3, #10
   21860:	b	1707c <main@@Base+0xfd8>
   21864:	bne	21878 <main@@Base+0xb7d4>
   21868:	ldrb	r0, [r2, #2]!
   2186c:	mov	r4, r2
   21870:	cmp	r0, #32
   21874:	bhi	17084 <main@@Base+0xfe0>
   21878:	mov	r0, sl
   2187c:	mov	r2, r6
   21880:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   21884:	b	17080 <main@@Base+0xfdc>
   21888:	mov	r4, r7
   2188c:	b	16fd8 <main@@Base+0xf34>
   21890:	mov	r6, r8
   21894:	b	16fd8 <main@@Base+0xf34>
   21898:	mov	r4, r1
   2189c:	mov	r6, r8
   218a0:	b	16fd8 <main@@Base+0xf34>
   218a4:	mov	r4, r6
   218a8:	mov	r6, r8
   218ac:	b	16fd8 <main@@Base+0xf34>
   218b0:	mov	r6, r5
   218b4:	b	16fd8 <main@@Base+0xf34>
   218b8:	mov	r0, r4
   218bc:	mov	r4, r0
   218c0:	ldr	r6, [sp, #44]	; 0x2c
   218c4:	ldr	sl, [sp, #36]	; 0x24
   218c8:	b	16fd8 <main@@Base+0xf34>
   218cc:	mov	r4, r1
   218d0:	b	16fd8 <main@@Base+0xf34>
   218d4:	mov	r4, r6
   218d8:	mov	r6, r5
   218dc:	b	16fd8 <main@@Base+0xf34>
   218e0:	ldr	r6, [sp, #44]	; 0x2c
   218e4:	mov	r4, r8
   218e8:	b	16fd8 <main@@Base+0xf34>
   218ec:	mov	r4, r1
   218f0:	b	2191c <main@@Base+0xb878>
   218f4:	ldr	sl, [sp, #36]	; 0x24
   218f8:	mov	r4, r8
   218fc:	b	16fd8 <main@@Base+0xf34>
   21900:	ldr	sl, [sp, #36]	; 0x24
   21904:	mov	r4, r1
   21908:	b	16fd8 <main@@Base+0xf34>
   2190c:	mov	r4, r6
   21910:	b	218c0 <main@@Base+0xb81c>
   21914:	ldr	r5, [sp, #44]	; 0x2c
   21918:	mov	r4, r6
   2191c:	ldr	sl, [sp, #36]	; 0x24
   21920:	mov	r6, r5
   21924:	b	16fd8 <main@@Base+0xf34>
   21928:	ldr	r6, [sp, #44]	; 0x2c
   2192c:	ldr	sl, [sp, #36]	; 0x24
   21930:	mov	r4, r7
   21934:	b	16fd8 <main@@Base+0xf34>
   21938:	mov	r4, r1
   2193c:	b	218c0 <main@@Base+0xb81c>
   21940:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   21944:	add	fp, sp, #28
   21948:	sub	sp, sp, #20
   2194c:	mov	r5, r0
   21950:	movw	r0, #59588	; 0xe8c4
   21954:	movw	r3, #48861	; 0xbedd
   21958:	mov	r4, r1
   2195c:	mov	r1, #3
   21960:	mov	r2, #0
   21964:	mov	r8, #0
   21968:	movt	r0, #2
   2196c:	movt	r3, #4
   21970:	str	r1, [sp]
   21974:	mov	r1, r4
   21978:	str	r0, [sp, #4]
   2197c:	mov	r0, r5
   21980:	bl	46e58 <flatcc_json_printer_struct_field@@Base>
   21984:	movw	r3, #48865	; 0xbee1
   21988:	mov	r0, #150	; 0x96
   2198c:	mov	r1, #4
   21990:	mov	r2, #1
   21994:	mov	r6, #4
   21998:	movt	r3, #4
   2199c:	str	r1, [sp]
   219a0:	str	r0, [sp, #4]
   219a4:	mov	r0, r5
   219a8:	mov	r1, r4
   219ac:	bl	3dc90 <flatcc_json_printer_int16_field@@Base>
   219b0:	movw	r3, #48870	; 0xbee6
   219b4:	mov	r0, #100	; 0x64
   219b8:	mov	r1, #2
   219bc:	mov	r2, #2
   219c0:	movt	r3, #4
   219c4:	str	r1, [sp]
   219c8:	str	r0, [sp, #4]
   219cc:	mov	r0, r5
   219d0:	mov	r1, r4
   219d4:	bl	3dc90 <flatcc_json_printer_int16_field@@Base>
   219d8:	movw	r3, #48873	; 0xbee9
   219dc:	mov	r0, r5
   219e0:	mov	r1, r4
   219e4:	mov	r2, #3
   219e8:	str	r6, [sp]
   219ec:	movt	r3, #4
   219f0:	bl	3d2c4 <flatcc_json_printer_string_field@@Base>
   219f4:	movw	r3, #48878	; 0xbeee
   219f8:	mov	r0, #9
   219fc:	mov	r1, r4
   21a00:	mov	r2, #5
   21a04:	mov	r7, #5
   21a08:	movt	r3, #4
   21a0c:	str	r0, [sp]
   21a10:	mov	r0, r5
   21a14:	bl	3fe40 <flatcc_json_printer_uint8_vector_field@@Base>
   21a18:	movw	r0, #59840	; 0xe9c0
   21a1c:	movw	r3, #48888	; 0xbef8
   21a20:	mov	r1, #8
   21a24:	mov	r2, #6
   21a28:	str	r7, [sp]
   21a2c:	mov	r7, #5
   21a30:	movt	r0, #2
   21a34:	movt	r3, #4
   21a38:	str	r1, [sp, #4]
   21a3c:	mov	r1, r4
   21a40:	str	r0, [sp, #8]
   21a44:	mov	r0, r5
   21a48:	bl	3e650 <flatcc_json_printer_int8_enum_field@@Base>
   21a4c:	movw	r0, #60184	; 0xeb18
   21a50:	movw	r1, #60068	; 0xeaa4
   21a54:	movw	r3, #49264	; 0xc070
   21a58:	mov	r2, #8
   21a5c:	str	r6, [sp]
   21a60:	movt	r0, #2
   21a64:	movt	r1, #2
   21a68:	movt	r3, #4
   21a6c:	str	r1, [sp, #4]
   21a70:	str	r0, [sp, #8]
   21a74:	mov	r0, r5
   21a78:	mov	r1, r4
   21a7c:	bl	4655c <flatcc_json_printer_union_field@@Base>
   21a80:	movw	r0, #60224	; 0xeb40
   21a84:	movw	r3, #48894	; 0xbefe
   21a88:	mov	r1, r4
   21a8c:	mov	r2, #9
   21a90:	str	r7, [sp]
   21a94:	mov	sl, #5
   21a98:	str	r6, [sp, #4]
   21a9c:	movt	r0, #2
   21aa0:	movt	r3, #4
   21aa4:	str	r0, [sp, #8]
   21aa8:	mov	r0, r5
   21aac:	bl	45198 <flatcc_json_printer_struct_vector_field@@Base>
   21ab0:	movw	r3, #48900	; 0xbf04
   21ab4:	mov	r7, #17
   21ab8:	mov	r0, r5
   21abc:	mov	r1, r4
   21ac0:	mov	r2, #10
   21ac4:	movt	r3, #4
   21ac8:	str	r7, [sp]
   21acc:	bl	45740 <flatcc_json_printer_string_vector_field@@Base>
   21ad0:	movw	r3, #48918	; 0xbf16
   21ad4:	movw	r9, #6464	; 0x1940
   21ad8:	mov	r0, r5
   21adc:	mov	r1, r4
   21ae0:	mov	r2, #11
   21ae4:	movt	r3, #4
   21ae8:	movt	r9, #2
   21aec:	stm	sp, {r7, r9}
   21af0:	bl	45b04 <flatcc_json_printer_table_vector_field@@Base>
   21af4:	movw	r3, #48936	; 0xbf28
   21af8:	mov	r0, r5
   21afc:	mov	r1, r4
   21b00:	mov	r2, #12
   21b04:	str	sl, [sp]
   21b08:	mov	sl, #5
   21b0c:	str	r9, [sp, #4]
   21b10:	movt	r3, #4
   21b14:	bl	46370 <flatcc_json_printer_table_field@@Base>
   21b18:	movw	r3, #48942	; 0xbf2e
   21b1c:	mov	r0, #20
   21b20:	mov	r1, r4
   21b24:	mov	r2, #13
   21b28:	movt	r3, #4
   21b2c:	stm	sp, {r0, r8, r9}
   21b30:	mov	r0, r5
   21b34:	bl	476c8 <flatcc_json_printer_table_as_nested_root@@Base>
   21b38:	movw	r0, #60320	; 0xeba0
   21b3c:	movw	r3, #48963	; 0xbf43
   21b40:	mov	r1, #9
   21b44:	mov	r2, #14
   21b48:	movt	r0, #2
   21b4c:	movt	r3, #4
   21b50:	str	r1, [sp]
   21b54:	mov	r1, r4
   21b58:	str	r0, [sp, #4]
   21b5c:	mov	r0, r5
   21b60:	bl	46370 <flatcc_json_printer_table_field@@Base>
   21b64:	movw	r3, #48973	; 0xbf4d
   21b68:	mov	r0, #1
   21b6c:	mov	r9, #8
   21b70:	mov	r1, r4
   21b74:	mov	r2, #15
   21b78:	movt	r3, #4
   21b7c:	str	r0, [sp, #4]
   21b80:	mov	r0, r5
   21b84:	str	r9, [sp]
   21b88:	bl	3df50 <flatcc_json_printer_bool_field@@Base>
   21b8c:	movw	r3, #48982	; 0xbf56
   21b90:	mov	r6, #16
   21b94:	mov	r0, r5
   21b98:	mov	r1, r4
   21b9c:	mov	r2, #16
   21ba0:	movt	r3, #4
   21ba4:	stm	sp, {r6, r8}
   21ba8:	bl	3dd78 <flatcc_json_printer_int32_field@@Base>
   21bac:	movw	r3, #48999	; 0xbf67
   21bb0:	mov	r0, r5
   21bb4:	mov	r1, r4
   21bb8:	mov	r2, #17
   21bbc:	stm	sp, {r6, r8}
   21bc0:	movt	r3, #4
   21bc4:	bl	3d95c <flatcc_json_printer_uint32_field@@Base>
   21bc8:	movw	r3, #49016	; 0xbf78
   21bcc:	mov	r0, r5
   21bd0:	mov	r1, r4
   21bd4:	mov	r2, #18
   21bd8:	str	r8, [sp, #8]
   21bdc:	str	r8, [sp, #12]
   21be0:	str	r6, [sp]
   21be4:	movt	r3, #4
   21be8:	bl	3de54 <flatcc_json_printer_int64_field@@Base>
   21bec:	movw	r3, #49033	; 0xbf89
   21bf0:	mov	r0, r5
   21bf4:	mov	r1, r4
   21bf8:	mov	r2, #19
   21bfc:	str	r8, [sp, #8]
   21c00:	str	r8, [sp, #12]
   21c04:	str	r6, [sp]
   21c08:	movt	r3, #4
   21c0c:	bl	3da20 <flatcc_json_printer_uint64_field@@Base>
   21c10:	movw	r3, #49050	; 0xbf9a
   21c14:	mov	r0, r5
   21c18:	mov	r1, r4
   21c1c:	mov	r2, #20
   21c20:	stm	sp, {r7, r8}
   21c24:	movt	r3, #4
   21c28:	bl	3dd78 <flatcc_json_printer_int32_field@@Base>
   21c2c:	movw	r3, #49068	; 0xbfac
   21c30:	mov	r0, r5
   21c34:	mov	r1, r4
   21c38:	mov	r2, #21
   21c3c:	stm	sp, {r7, r8}
   21c40:	movt	r3, #4
   21c44:	bl	3d95c <flatcc_json_printer_uint32_field@@Base>
   21c48:	movw	r3, #49086	; 0xbfbe
   21c4c:	mov	r0, r5
   21c50:	mov	r1, r4
   21c54:	mov	r2, #22
   21c58:	str	r8, [sp, #8]
   21c5c:	str	r8, [sp, #12]
   21c60:	str	r7, [sp]
   21c64:	movt	r3, #4
   21c68:	bl	3de54 <flatcc_json_printer_int64_field@@Base>
   21c6c:	movw	r3, #49104	; 0xbfd0
   21c70:	mov	r0, r5
   21c74:	mov	r1, r4
   21c78:	mov	r2, #23
   21c7c:	str	r8, [sp, #8]
   21c80:	str	r8, [sp, #12]
   21c84:	str	r7, [sp]
   21c88:	mov	r8, #23
   21c8c:	movt	r3, #4
   21c90:	bl	3da20 <flatcc_json_printer_uint64_field@@Base>
   21c94:	movw	r3, #49122	; 0xbfe2
   21c98:	mov	r0, r5
   21c9c:	mov	r1, r4
   21ca0:	mov	r2, #24
   21ca4:	str	r6, [sp]
   21ca8:	movt	r3, #4
   21cac:	bl	41ff8 <flatcc_json_printer_bool_vector_field@@Base>
   21cb0:	vldr	s0, [pc, #396]	; 21e44 <main@@Base+0xbda0>
   21cb4:	movw	r3, #49139	; 0xbff3
   21cb8:	mov	r0, r5
   21cbc:	mov	r1, r4
   21cc0:	mov	r2, #25
   21cc4:	str	sl, [sp]
   21cc8:	movt	r3, #4
   21ccc:	bl	3e048 <flatcc_json_printer_float_field@@Base>
   21cd0:	movw	r3, #49145	; 0xbff9
   21cd4:	vmov.f32	s0, #8	; 0x40400000  3.0
   21cd8:	mov	r6, #6
   21cdc:	mov	r0, r5
   21ce0:	mov	r1, r4
   21ce4:	mov	r2, #26
   21ce8:	movt	r3, #4
   21cec:	str	r6, [sp]
   21cf0:	bl	3e048 <flatcc_json_printer_float_field@@Base>
   21cf4:	vldr	s0, [pc, #332]	; 21e48 <main@@Base+0xbda4>
   21cf8:	movw	r3, #49152	; 0xc000
   21cfc:	mov	r0, r5
   21d00:	mov	r1, r4
   21d04:	mov	r2, #27
   21d08:	str	r6, [sp]
   21d0c:	movt	r3, #4
   21d10:	bl	3e048 <flatcc_json_printer_float_field@@Base>
   21d14:	movw	r3, #49159	; 0xc007
   21d18:	mov	r0, #18
   21d1c:	mov	r1, r4
   21d20:	mov	r2, #28
   21d24:	movt	r3, #4
   21d28:	str	r0, [sp]
   21d2c:	mov	r0, r5
   21d30:	bl	45740 <flatcc_json_printer_string_vector_field@@Base>
   21d34:	movw	r0, #60452	; 0xec24
   21d38:	movw	r3, #49178	; 0xc01a
   21d3c:	stm	sp, {r8, r9}
   21d40:	mov	r1, r4
   21d44:	mov	r2, #29
   21d48:	movt	r0, #2
   21d4c:	movt	r3, #4
   21d50:	str	r0, [sp, #8]
   21d54:	mov	r0, r5
   21d58:	bl	45198 <flatcc_json_printer_struct_vector_field@@Base>
   21d5c:	movw	r3, #49202	; 0xc032
   21d60:	mov	r6, #4
   21d64:	mov	r0, r5
   21d68:	mov	r1, r4
   21d6c:	mov	r2, #30
   21d70:	movt	r3, #4
   21d74:	str	r6, [sp]
   21d78:	bl	3fe40 <flatcc_json_printer_uint8_vector_field@@Base>
   21d7c:	movw	r0, #60224	; 0xeb40
   21d80:	movw	r3, #49207	; 0xc037
   21d84:	mov	r1, r4
   21d88:	mov	r2, #31
   21d8c:	str	sl, [sp]
   21d90:	str	r6, [sp, #4]
   21d94:	movt	r0, #2
   21d98:	movt	r3, #4
   21d9c:	str	r0, [sp, #8]
   21da0:	mov	r0, r5
   21da4:	bl	45198 <flatcc_json_printer_struct_vector_field@@Base>
   21da8:	movw	r3, #49213	; 0xc03d
   21dac:	mov	r0, #15
   21db0:	mov	r1, r4
   21db4:	mov	r2, #32
   21db8:	movt	r3, #4
   21dbc:	str	r0, [sp]
   21dc0:	mov	r0, r5
   21dc4:	bl	41be4 <flatcc_json_printer_int64_vector_field@@Base>
   21dc8:	movw	r3, #49229	; 0xc04d
   21dcc:	mov	r0, r5
   21dd0:	mov	r1, r4
   21dd4:	mov	r2, #33	; 0x21
   21dd8:	str	r7, [sp]
   21ddc:	movt	r3, #4
   21de0:	bl	427fc <flatcc_json_printer_double_vector_field@@Base>
   21de4:	movw	r0, #60560	; 0xec90
   21de8:	movw	r3, #49247	; 0xc05f
   21dec:	mov	r1, #21
   21df0:	mov	r2, #34	; 0x22
   21df4:	movt	r0, #2
   21df8:	movt	r3, #4
   21dfc:	str	r1, [sp]
   21e00:	mov	r1, r4
   21e04:	str	r0, [sp, #4]
   21e08:	mov	r0, r5
   21e0c:	bl	46370 <flatcc_json_printer_table_field@@Base>
   21e10:	movw	r0, #60564	; 0xec94
   21e14:	movw	r3, #49269	; 0xc075
   21e18:	mov	r1, #10
   21e1c:	mov	r2, #35	; 0x23
   21e20:	movt	r0, #2
   21e24:	movt	r3, #4
   21e28:	str	r1, [sp]
   21e2c:	mov	r1, r4
   21e30:	str	r0, [sp, #4]
   21e34:	mov	r0, r5
   21e38:	bl	46370 <flatcc_json_printer_table_field@@Base>
   21e3c:	sub	sp, fp, #28
   21e40:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   21e44:	ldmmi	r9, {r5, r6, r7, r8, sl, sp, lr}
   21e48:	andeq	r0, r0, r0
   21e4c:	push	{r4, r5, r6, r7, fp, lr}
   21e50:	add	fp, sp, #16
   21e54:	sub	sp, sp, #8
   21e58:	mov	r1, #0
   21e5c:	mov	r2, #32
   21e60:	mov	r3, #16
   21e64:	mov	r4, r0
   21e68:	bl	34c4c <flatcc_verify_field@@Base>
   21e6c:	cmp	r0, #0
   21e70:	bne	22278 <main@@Base+0xc1d4>
   21e74:	mov	r0, r4
   21e78:	mov	r1, #2
   21e7c:	mov	r2, #2
   21e80:	mov	r3, #2
   21e84:	bl	34c4c <flatcc_verify_field@@Base>
   21e88:	cmp	r0, #0
   21e8c:	bne	22278 <main@@Base+0xc1d4>
   21e90:	mov	r0, r4
   21e94:	mov	r1, #1
   21e98:	mov	r2, #2
   21e9c:	mov	r3, #2
   21ea0:	bl	34c4c <flatcc_verify_field@@Base>
   21ea4:	cmp	r0, #0
   21ea8:	bne	22278 <main@@Base+0xc1d4>
   21eac:	mov	r0, r4
   21eb0:	mov	r1, #3
   21eb4:	mov	r2, #1
   21eb8:	bl	34cd0 <flatcc_verify_string_field@@Base>
   21ebc:	cmp	r0, #0
   21ec0:	bne	22278 <main@@Base+0xc1d4>
   21ec4:	mov	r0, r4
   21ec8:	mov	r1, #6
   21ecc:	mov	r2, #1
   21ed0:	mov	r3, #1
   21ed4:	mov	r5, #1
   21ed8:	bl	34c4c <flatcc_verify_field@@Base>
   21edc:	cmp	r0, #0
   21ee0:	bne	22278 <main@@Base+0xc1d4>
   21ee4:	mvn	r0, #0
   21ee8:	mov	r1, #5
   21eec:	mov	r2, #0
   21ef0:	mov	r3, #1
   21ef4:	str	r5, [sp]
   21ef8:	str	r0, [sp, #4]
   21efc:	mov	r0, r4
   21f00:	bl	34db0 <flatcc_verify_vector_field@@Base>
   21f04:	cmp	r0, #0
   21f08:	bne	22278 <main@@Base+0xc1d4>
   21f0c:	movw	r3, #7756	; 0x1e4c
   21f10:	mov	r0, r4
   21f14:	mov	r1, #11
   21f18:	mov	r2, #0
   21f1c:	movt	r3, #2
   21f20:	bl	35198 <flatcc_verify_table_vector_field@@Base>
   21f24:	cmp	r0, #0
   21f28:	bne	22278 <main@@Base+0xc1d4>
   21f2c:	mov	r0, r4
   21f30:	mov	r1, #10
   21f34:	mov	r2, #0
   21f38:	bl	34ea8 <flatcc_verify_string_vector_field@@Base>
   21f3c:	cmp	r0, #0
   21f40:	bne	22278 <main@@Base+0xc1d4>
   21f44:	mov	r0, r4
   21f48:	mov	r1, #28
   21f4c:	mov	r2, #0
   21f50:	bl	34ea8 <flatcc_verify_string_vector_field@@Base>
   21f54:	cmp	r0, #0
   21f58:	bne	22278 <main@@Base+0xc1d4>
   21f5c:	mvn	r0, #0
   21f60:	mov	r1, #1
   21f64:	mov	r2, #0
   21f68:	mov	r3, #1
   21f6c:	str	r1, [sp]
   21f70:	str	r0, [sp, #4]
   21f74:	mov	r0, r4
   21f78:	mov	r1, #24
   21f7c:	bl	34db0 <flatcc_verify_vector_field@@Base>
   21f80:	cmp	r0, #0
   21f84:	bne	22278 <main@@Base+0xc1d4>
   21f88:	mvn	r0, #-536870912	; 0xe0000000
   21f8c:	mov	r1, #4
   21f90:	mov	r2, #0
   21f94:	mov	r3, #8
   21f98:	str	r1, [sp]
   21f9c:	str	r0, [sp, #4]
   21fa0:	mov	r0, r4
   21fa4:	mov	r1, #29
   21fa8:	bl	34db0 <flatcc_verify_vector_field@@Base>
   21fac:	cmp	r0, #0
   21fb0:	bne	22278 <main@@Base+0xc1d4>
   21fb4:	movw	r5, #7756	; 0x1e4c
   21fb8:	mov	r0, r4
   21fbc:	mov	r1, #12
   21fc0:	mov	r2, #0
   21fc4:	movt	r5, #2
   21fc8:	mov	r3, r5
   21fcc:	bl	35030 <flatcc_verify_table_field@@Base>
   21fd0:	cmp	r0, #0
   21fd4:	bne	22278 <main@@Base+0xc1d4>
   21fd8:	movw	r3, #62404	; 0xf3c4
   21fdc:	mov	r0, r4
   21fe0:	mov	r1, #8
   21fe4:	mov	r2, #0
   21fe8:	movt	r3, #2
   21fec:	bl	360a0 <flatcc_verify_union_field@@Base>
   21ff0:	cmp	r0, #0
   21ff4:	bne	22278 <main@@Base+0xc1d4>
   21ff8:	mvn	r6, #-1073741824	; 0xc0000000
   21ffc:	mov	r7, #2
   22000:	mov	r0, r4
   22004:	mov	r1, #9
   22008:	mov	r2, #0
   2200c:	mov	r3, #4
   22010:	str	r7, [sp]
   22014:	str	r6, [sp, #4]
   22018:	bl	34db0 <flatcc_verify_vector_field@@Base>
   2201c:	cmp	r0, #0
   22020:	bne	22278 <main@@Base+0xc1d4>
   22024:	mov	r0, r4
   22028:	mov	r1, #31
   2202c:	mov	r2, #0
   22030:	mov	r3, #4
   22034:	str	r7, [sp]
   22038:	str	r6, [sp, #4]
   2203c:	bl	34db0 <flatcc_verify_vector_field@@Base>
   22040:	cmp	r0, #0
   22044:	bne	22278 <main@@Base+0xc1d4>
   22048:	mov	r0, #1
   2204c:	mov	r1, #13
   22050:	mov	r2, #0
   22054:	mov	r3, #0
   22058:	stm	sp, {r0, r5}
   2205c:	mov	r0, r4
   22060:	bl	35d80 <flatcc_verify_table_as_nested_root@@Base>
   22064:	cmp	r0, #0
   22068:	bne	22278 <main@@Base+0xc1d4>
   2206c:	movw	r3, #62448	; 0xf3f0
   22070:	mov	r0, r4
   22074:	mov	r1, #14
   22078:	mov	r2, #0
   2207c:	movt	r3, #2
   22080:	bl	35030 <flatcc_verify_table_field@@Base>
   22084:	cmp	r0, #0
   22088:	bne	22278 <main@@Base+0xc1d4>
   2208c:	mov	r0, r4
   22090:	mov	r1, #15
   22094:	mov	r2, #1
   22098:	mov	r3, #1
   2209c:	bl	34c4c <flatcc_verify_field@@Base>
   220a0:	cmp	r0, #0
   220a4:	bne	22278 <main@@Base+0xc1d4>
   220a8:	mov	r0, r4
   220ac:	mov	r1, #16
   220b0:	mov	r2, #4
   220b4:	mov	r3, #4
   220b8:	bl	34c4c <flatcc_verify_field@@Base>
   220bc:	cmp	r0, #0
   220c0:	bne	22278 <main@@Base+0xc1d4>
   220c4:	mov	r0, r4
   220c8:	mov	r1, #17
   220cc:	mov	r2, #4
   220d0:	mov	r3, #4
   220d4:	bl	34c4c <flatcc_verify_field@@Base>
   220d8:	cmp	r0, #0
   220dc:	bne	22278 <main@@Base+0xc1d4>
   220e0:	mov	r0, r4
   220e4:	mov	r1, #18
   220e8:	mov	r2, #8
   220ec:	mov	r3, #8
   220f0:	bl	34c4c <flatcc_verify_field@@Base>
   220f4:	cmp	r0, #0
   220f8:	bne	22278 <main@@Base+0xc1d4>
   220fc:	mov	r0, r4
   22100:	mov	r1, #19
   22104:	mov	r2, #8
   22108:	mov	r3, #8
   2210c:	bl	34c4c <flatcc_verify_field@@Base>
   22110:	cmp	r0, #0
   22114:	bne	22278 <main@@Base+0xc1d4>
   22118:	mov	r0, r4
   2211c:	mov	r1, #20
   22120:	mov	r2, #4
   22124:	mov	r3, #4
   22128:	bl	34c4c <flatcc_verify_field@@Base>
   2212c:	cmp	r0, #0
   22130:	bne	22278 <main@@Base+0xc1d4>
   22134:	mov	r0, r4
   22138:	mov	r1, #21
   2213c:	mov	r2, #4
   22140:	mov	r3, #4
   22144:	bl	34c4c <flatcc_verify_field@@Base>
   22148:	cmp	r0, #0
   2214c:	bne	22278 <main@@Base+0xc1d4>
   22150:	mov	r0, r4
   22154:	mov	r1, #22
   22158:	mov	r2, #8
   2215c:	mov	r3, #8
   22160:	bl	34c4c <flatcc_verify_field@@Base>
   22164:	cmp	r0, #0
   22168:	bne	22278 <main@@Base+0xc1d4>
   2216c:	mov	r0, r4
   22170:	mov	r1, #23
   22174:	mov	r2, #8
   22178:	mov	r3, #8
   2217c:	bl	34c4c <flatcc_verify_field@@Base>
   22180:	cmp	r0, #0
   22184:	bne	22278 <main@@Base+0xc1d4>
   22188:	mov	r0, r4
   2218c:	mov	r1, #25
   22190:	mov	r2, #4
   22194:	mov	r3, #4
   22198:	bl	34c4c <flatcc_verify_field@@Base>
   2219c:	cmp	r0, #0
   221a0:	bne	22278 <main@@Base+0xc1d4>
   221a4:	mov	r0, r4
   221a8:	mov	r1, #26
   221ac:	mov	r2, #4
   221b0:	mov	r3, #4
   221b4:	bl	34c4c <flatcc_verify_field@@Base>
   221b8:	cmp	r0, #0
   221bc:	bne	22278 <main@@Base+0xc1d4>
   221c0:	mov	r0, r4
   221c4:	mov	r1, #27
   221c8:	mov	r2, #4
   221cc:	mov	r3, #4
   221d0:	bl	34c4c <flatcc_verify_field@@Base>
   221d4:	cmp	r0, #0
   221d8:	bne	22278 <main@@Base+0xc1d4>
   221dc:	mvn	r0, #0
   221e0:	mov	r1, #1
   221e4:	mov	r2, #0
   221e8:	mov	r3, #1
   221ec:	str	r1, [sp]
   221f0:	str	r0, [sp, #4]
   221f4:	mov	r0, r4
   221f8:	mov	r1, #30
   221fc:	bl	34db0 <flatcc_verify_vector_field@@Base>
   22200:	cmp	r0, #0
   22204:	bne	22278 <main@@Base+0xc1d4>
   22208:	mvn	r5, #-536870912	; 0xe0000000
   2220c:	mov	r6, #8
   22210:	mov	r0, r4
   22214:	mov	r1, #32
   22218:	mov	r2, #0
   2221c:	mov	r3, #8
   22220:	str	r6, [sp]
   22224:	str	r5, [sp, #4]
   22228:	bl	34db0 <flatcc_verify_vector_field@@Base>
   2222c:	cmp	r0, #0
   22230:	bne	22278 <main@@Base+0xc1d4>
   22234:	mov	r0, r4
   22238:	mov	r1, #33	; 0x21
   2223c:	mov	r2, #0
   22240:	mov	r3, #8
   22244:	str	r6, [sp]
   22248:	str	r5, [sp, #4]
   2224c:	bl	34db0 <flatcc_verify_vector_field@@Base>
   22250:	cmp	r0, #0
   22254:	bne	22278 <main@@Base+0xc1d4>
   22258:	movw	r3, #62536	; 0xf448
   2225c:	mov	r0, r4
   22260:	mov	r1, #34	; 0x22
   22264:	mov	r2, #0
   22268:	movt	r3, #2
   2226c:	bl	35030 <flatcc_verify_table_field@@Base>
   22270:	cmp	r0, #0
   22274:	beq	22280 <main@@Base+0xc1dc>
   22278:	sub	sp, fp, #16
   2227c:	pop	{r4, r5, r6, r7, fp, pc}
   22280:	movw	r3, #62544	; 0xf450
   22284:	mov	r0, r4
   22288:	mov	r1, #35	; 0x23
   2228c:	mov	r2, #0
   22290:	movt	r3, #2
   22294:	sub	sp, fp, #16
   22298:	pop	{r4, r5, r6, r7, fp, lr}
   2229c:	b	35030 <flatcc_verify_table_field@@Base>
   222a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   222a4:	add	fp, sp, #28
   222a8:	sub	sp, sp, #12
   222ac:	mov	r5, r1
   222b0:	sub	r1, r2, r1
   222b4:	cmp	r1, #8
   222b8:	movcs	r1, #8
   222bc:	sub	r4, r1, #1
   222c0:	cmp	r4, #7
   222c4:	bhi	22434 <main@@Base+0xc390>
   222c8:	str	r3, [sp, #8]
   222cc:	add	r8, pc, #32
   222d0:	mov	r9, #0
   222d4:	mov	ip, #0
   222d8:	mov	lr, #0
   222dc:	mov	sl, #0
   222e0:	mov	r6, #0
   222e4:	mov	r3, #0
   222e8:	mov	r1, #0
   222ec:	mov	r7, #0
   222f0:	ldr	pc, [r8, r4, lsl #2]
   222f4:	andeq	r2, r2, r8, asr r3
   222f8:	andeq	r2, r2, r0, asr r3
   222fc:	andeq	r2, r2, r8, asr #6
   22300:	andeq	r2, r2, r0, asr #6
   22304:	andeq	r2, r2, r4, lsr r3
   22308:	andeq	r2, r2, r8, lsr #6
   2230c:	andeq	r2, r2, r8, lsl r3
   22310:	andeq	r2, r2, r4, lsl r3
   22314:	ldrb	ip, [r5, #7]
   22318:	ldrb	r1, [r5, #6]
   2231c:	mov	lr, r9
   22320:	orr	r1, ip, r1, lsl #8
   22324:	mov	r9, r1
   22328:	ldrb	r1, [r5, #5]
   2232c:	mov	sl, lr
   22330:	orr	r9, r9, r1, lsl #16
   22334:	ldrb	r1, [r5, #4]
   22338:	mov	r6, sl
   2233c:	orr	r9, r9, r1, lsl #24
   22340:	ldrb	r1, [r5, #3]
   22344:	orr	r3, r1, r6
   22348:	ldrb	r1, [r5, #2]
   2234c:	orr	r1, r3, r1, lsl #8
   22350:	ldrb	r3, [r5, #1]
   22354:	orr	r7, r1, r3, lsl #16
   22358:	ldrb	r1, [r5]
   2235c:	movw	r4, #25957	; 0x6565
   22360:	ldr	r3, [fp, #12]
   22364:	ldr	r8, [fp, #8]
   22368:	movt	r4, #18290	; 0x4772
   2236c:	orr	r7, r7, r1, lsl #24
   22370:	mvn	r1, #-1845493760	; 0x92000000
   22374:	subs	r1, r1, r9
   22378:	sbcs	r1, r4, r7
   2237c:	bcc	223b4 <main@@Base+0xc310>
   22380:	movw	r1, #30053	; 0x7565
   22384:	movt	r1, #17004	; 0x426c
   22388:	teq	r7, r1
   2238c:	bne	22434 <main@@Base+0xc390>
   22390:	str	r3, [sp]
   22394:	mov	r1, r5
   22398:	mov	r3, #4
   2239c:	bl	371c8 <flatcc_json_parser_match_constant@@Base>
   223a0:	cmp	r0, r5
   223a4:	beq	22434 <main@@Base+0xc390>
   223a8:	mov	r1, #0
   223ac:	mov	r2, #8
   223b0:	b	22420 <main@@Base+0xc37c>
   223b4:	movw	r6, #25600	; 0x6400
   223b8:	bic	r1, r7, #255	; 0xff
   223bc:	movt	r6, #21093	; 0x5265
   223c0:	teq	r1, r6
   223c4:	bne	223ec <main@@Base+0xc348>
   223c8:	str	r3, [sp]
   223cc:	mov	r1, r5
   223d0:	mov	r3, #3
   223d4:	bl	371c8 <flatcc_json_parser_match_constant@@Base>
   223d8:	cmp	r0, r5
   223dc:	beq	22434 <main@@Base+0xc390>
   223e0:	mov	r1, #0
   223e4:	mov	r2, #1
   223e8:	b	22420 <main@@Base+0xc37c>
   223ec:	eor	r1, r7, r4
   223f0:	and	r7, r9, #-16777216	; 0xff000000
   223f4:	eor	r7, r7, #1845493760	; 0x6e000000
   223f8:	orrs	r1, r7, r1
   223fc:	bne	22434 <main@@Base+0xc390>
   22400:	str	r3, [sp]
   22404:	mov	r1, r5
   22408:	mov	r3, #5
   2240c:	bl	371c8 <flatcc_json_parser_match_constant@@Base>
   22410:	cmp	r0, r5
   22414:	beq	22434 <main@@Base+0xc390>
   22418:	mov	r1, #0
   2241c:	mov	r2, #2
   22420:	str	r2, [r8]
   22424:	str	r1, [r8, #4]
   22428:	mov	r5, r0
   2242c:	ldr	r2, [sp, #8]
   22430:	str	r1, [r2]
   22434:	mov	r0, r5
   22438:	sub	sp, fp, #28
   2243c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22440:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22444:	add	fp, sp, #28
   22448:	sub	sp, sp, #20
   2244c:	sub	lr, r2, r1
   22450:	cmp	lr, #8
   22454:	mov	r7, lr
   22458:	movcs	r7, #8
   2245c:	sub	r7, r7, #1
   22460:	cmp	r7, #7
   22464:	bhi	22878 <main@@Base+0xc7d4>
   22468:	str	r0, [sp, #16]
   2246c:	str	r3, [sp, #12]
   22470:	mov	r4, #0
   22474:	mov	sl, #0
   22478:	mov	r8, #0
   2247c:	mov	r5, #0
   22480:	mov	r3, #0
   22484:	mov	r6, #0
   22488:	mov	r9, #0
   2248c:	mov	ip, #0
   22490:	ldr	r0, [fp, #12]
   22494:	str	r0, [sp, #8]
   22498:	ldr	r0, [fp, #8]
   2249c:	str	r0, [sp, #4]
   224a0:	add	r0, pc, #0
   224a4:	ldr	pc, [r0, r7, lsl #2]
   224a8:	andeq	r2, r2, ip, lsl #10
   224ac:	andeq	r2, r2, r4, lsl #10
   224b0:	strdeq	r2, [r2], -ip
   224b4:	strdeq	r2, [r2], -r4
   224b8:	andeq	r2, r2, r8, ror #9
   224bc:	ldrdeq	r2, [r2], -ip
   224c0:	andeq	r2, r2, ip, asr #9
   224c4:	andeq	r2, r2, r8, asr #9
   224c8:	ldrb	sl, [r1, #7]
   224cc:	ldrb	r0, [r1, #6]
   224d0:	mov	r8, r4
   224d4:	orr	r0, sl, r0, lsl #8
   224d8:	mov	r4, r0
   224dc:	ldrb	r0, [r1, #5]
   224e0:	mov	r5, r8
   224e4:	orr	r4, r4, r0, lsl #16
   224e8:	ldrb	r0, [r1, #4]
   224ec:	mov	r3, r5
   224f0:	orr	r4, r4, r0, lsl #24
   224f4:	ldrb	r0, [r1, #3]
   224f8:	orr	r6, r0, r3
   224fc:	ldrb	r0, [r1, #2]
   22500:	orr	r9, r6, r0, lsl #8
   22504:	ldrb	r0, [r1, #1]
   22508:	orr	ip, r9, r0, lsl #16
   2250c:	ldrb	r0, [r1]
   22510:	movw	r7, #30061	; 0x756d
   22514:	movw	r3, #30815	; 0x785f
   22518:	movt	r7, #25966	; 0x656e
   2251c:	movt	r3, #26725	; 0x6865
   22520:	orr	r6, ip, r0, lsl #24
   22524:	subs	r0, r4, r7
   22528:	sbcs	r0, r6, r3
   2252c:	bcs	22594 <main@@Base+0xc4f0>
   22530:	movw	r3, #27759	; 0x6c6f
   22534:	mvn	r0, #-1912602624	; 0x8e000000
   22538:	bic	r7, r6, #255	; 0xff
   2253c:	movt	r3, #17263	; 0x436f
   22540:	subs	r0, r0, r4
   22544:	sbcs	r0, r3, r6
   22548:	bcc	225f0 <main@@Base+0xc54c>
   2254c:	cmp	lr, #4
   22550:	blt	22878 <main@@Base+0xc7d4>
   22554:	movw	r0, #30976	; 0x7900
   22558:	movt	r0, #16750	; 0x416e
   2255c:	teq	r7, r0
   22560:	bne	22878 <main@@Base+0xc7d4>
   22564:	ldrb	r0, [r1, #3]
   22568:	mov	r3, r1
   2256c:	cmp	r0, #46	; 0x2e
   22570:	addeq	r3, r3, #4
   22574:	cmp	r3, r1
   22578:	beq	22878 <main@@Base+0xc7d4>
   2257c:	mov	r1, r3
   22580:	ldr	r0, [sp, #16]
   22584:	ldr	r3, [sp, #12]
   22588:	sub	sp, fp, #28
   2258c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22590:	b	257fc <main@@Base+0xf758>
   22594:	add	r0, r3, #64512	; 0xfc00
   22598:	add	r5, r0, #17301504	; 0x1080000
   2259c:	subs	r0, r4, r7
   225a0:	sbcs	r0, r6, r5
   225a4:	bcs	22638 <main@@Base+0xc594>
   225a8:	cmp	lr, #9
   225ac:	blt	22878 <main@@Base+0xc7d4>
   225b0:	eor	r0, r4, r7
   225b4:	eor	r3, r6, r3
   225b8:	orrs	r0, r0, r3
   225bc:	bne	22878 <main@@Base+0xc7d4>
   225c0:	ldrb	r0, [r1, #8]
   225c4:	mov	r3, r1
   225c8:	cmp	r0, #46	; 0x2e
   225cc:	addeq	r3, r3, #9
   225d0:	cmp	r3, r1
   225d4:	beq	22878 <main@@Base+0xc7d4>
   225d8:	mov	r1, r3
   225dc:	ldr	r0, [sp, #16]
   225e0:	ldr	r3, [sp, #12]
   225e4:	sub	sp, fp, #28
   225e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   225ec:	b	26d28 <main@@Base+0x10c84>
   225f0:	movw	r0, #28416	; 0x6f00
   225f4:	movt	r0, #18031	; 0x466f
   225f8:	teq	r7, r0
   225fc:	bne	22694 <main@@Base+0xc5f0>
   22600:	cmp	lr, #4
   22604:	blt	22878 <main@@Base+0xc7d4>
   22608:	ldrb	r0, [r1, #3]
   2260c:	mov	r3, r1
   22610:	cmp	r0, #46	; 0x2e
   22614:	addeq	r3, r3, #4
   22618:	cmp	r3, r1
   2261c:	beq	22878 <main@@Base+0xc7d4>
   22620:	mov	r1, r3
   22624:	ldr	r0, [sp, #16]
   22628:	ldr	r3, [sp, #12]
   2262c:	sub	sp, fp, #28
   22630:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22634:	b	26ac8 <main@@Base+0x10a24>
   22638:	sub	r0, r3, #4352	; 0x1100
   2263c:	subs	r3, r4, r7
   22640:	sub	r0, r0, #-100663296	; 0xfa000000
   22644:	sbcs	r0, r6, r0
   22648:	bcs	226e0 <main@@Base+0xc63c>
   2264c:	cmp	lr, #9
   22650:	blt	22878 <main@@Base+0xc7d4>
   22654:	eor	r0, r4, r7
   22658:	eor	r3, r6, r5
   2265c:	orrs	r0, r0, r3
   22660:	bne	22878 <main@@Base+0xc7d4>
   22664:	ldrb	r0, [r1, #8]
   22668:	mov	r3, r1
   2266c:	cmp	r0, #46	; 0x2e
   22670:	addeq	r3, r3, #9
   22674:	cmp	r3, r1
   22678:	beq	22878 <main@@Base+0xc7d4>
   2267c:	mov	r1, r3
   22680:	ldr	r0, [sp, #16]
   22684:	ldr	r3, [sp, #12]
   22688:	sub	sp, fp, #28
   2268c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22690:	b	26ed4 <main@@Base+0x10e30>
   22694:	cmp	lr, #6
   22698:	blt	22878 <main@@Base+0xc7d4>
   2269c:	and	r0, r4, #-16777216	; 0xff000000
   226a0:	eor	r3, r6, r3
   226a4:	eor	r0, r0, #1912602624	; 0x72000000
   226a8:	orrs	r0, r0, r3
   226ac:	bne	22878 <main@@Base+0xc7d4>
   226b0:	ldrb	r0, [r1, #5]
   226b4:	mov	r3, r1
   226b8:	cmp	r0, #46	; 0x2e
   226bc:	addeq	r3, r3, #6
   226c0:	cmp	r3, r1
   226c4:	beq	22878 <main@@Base+0xc7d4>
   226c8:	mov	r1, r3
   226cc:	ldr	r0, [sp, #16]
   226d0:	ldr	r3, [sp, #12]
   226d4:	sub	sp, fp, #28
   226d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   226dc:	b	222a0 <main@@Base+0xc1fc>
   226e0:	movw	r0, #29817	; 0x7479
   226e4:	movw	r3, #29797	; 0x7465
   226e8:	movt	r0, #28016	; 0x6d70
   226ec:	movt	r3, #28271	; 0x6e6f
   226f0:	eor	r0, r4, r0
   226f4:	eor	r3, r6, r3
   226f8:	orrs	r0, r0, r3
   226fc:	beq	22750 <main@@Base+0xc6ac>
   22700:	movw	r3, #26463	; 0x675f
   22704:	eor	r0, r4, r7
   22708:	movt	r3, #28261	; 0x6e65
   2270c:	eor	r3, r6, r3
   22710:	orrs	r0, r0, r3
   22714:	bne	22878 <main@@Base+0xc7d4>
   22718:	cmp	lr, #9
   2271c:	blt	22878 <main@@Base+0xc7d4>
   22720:	ldrb	r0, [r1, #8]
   22724:	mov	r3, r1
   22728:	cmp	r0, #46	; 0x2e
   2272c:	addeq	r3, r3, #9
   22730:	cmp	r3, r1
   22734:	beq	22878 <main@@Base+0xc7d4>
   22738:	mov	r1, r3
   2273c:	ldr	r0, [sp, #16]
   22740:	ldr	r3, [sp, #12]
   22744:	sub	sp, fp, #28
   22748:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2274c:	b	270c4 <main@@Base+0x11020>
   22750:	add	r8, r1, #8
   22754:	sub	r5, r2, r8
   22758:	cmp	r5, #8
   2275c:	mov	r0, r5
   22760:	movcs	r0, #8
   22764:	sub	r4, r0, #1
   22768:	cmp	r4, #7
   2276c:	bhi	22878 <main@@Base+0xc7d4>
   22770:	add	r0, pc, #16
   22774:	mov	lr, #0
   22778:	mov	r9, #0
   2277c:	mov	r3, #0
   22780:	mov	r6, #0
   22784:	ldr	pc, [r0, r4, lsl #2]
   22788:	andeq	r2, r2, r0, asr #15
   2278c:			; <UNDEFINED> instruction: 0x000227b8
   22790:			; <UNDEFINED> instruction: 0x000227b0
   22794:	andeq	r2, r2, r8, lsr #15
   22798:	andeq	r2, r2, r8, lsr #15
   2279c:	andeq	r2, r2, r8, lsr #15
   227a0:	andeq	r2, r2, r8, lsr #15
   227a4:	andeq	r2, r2, r8, lsr #15
   227a8:	ldrb	r9, [r1, #11]
   227ac:	mov	lr, #0
   227b0:	ldrb	r0, [r1, #10]
   227b4:	orr	r3, r9, r0, lsl #8
   227b8:	ldrb	r0, [r1, #9]
   227bc:	orr	r6, r3, r0, lsl #16
   227c0:	cmp	r5, #5
   227c4:	blt	22878 <main@@Base+0xc7d4>
   227c8:	ldrb	r0, [r8]
   227cc:	orr	r0, r6, r0, lsl #24
   227d0:	eor	r0, r0, r7
   227d4:	orrs	r0, lr, r0
   227d8:	bne	22878 <main@@Base+0xc7d4>
   227dc:	ldrb	r0, [r1, #12]
   227e0:	mov	r5, r8
   227e4:	cmp	r0, #46	; 0x2e
   227e8:	addeq	r5, r1, #13
   227ec:	cmp	r5, r8
   227f0:	beq	22878 <main@@Base+0xc7d4>
   227f4:	sub	r0, r2, r5
   227f8:	cmp	r0, #8
   227fc:	movcs	r0, #8
   22800:	sub	r0, r0, #1
   22804:	cmp	r0, #7
   22808:	bhi	22864 <main@@Base+0xc7c0>
   2280c:	ldrb	r0, [r5]
   22810:	cmp	r0, #120	; 0x78
   22814:	bne	22874 <main@@Base+0xc7d0>
   22818:	ldr	r0, [sp, #8]
   2281c:	mov	r1, r5
   22820:	mov	r3, #1
   22824:	str	r0, [sp]
   22828:	ldr	r0, [sp, #16]
   2282c:	bl	371c8 <flatcc_json_parser_match_constant@@Base>
   22830:	cmp	r0, r5
   22834:	mov	r1, r5
   22838:	beq	22878 <main@@Base+0xc7d4>
   2283c:	ldr	r2, [sp, #4]
   22840:	mov	r1, #0
   22844:	str	r1, [r2]
   22848:	str	r1, [r2, #4]
   2284c:	ldr	r2, [sp, #12]
   22850:	str	r1, [r2]
   22854:	mov	r1, r0
   22858:	mov	r0, r1
   2285c:	sub	sp, fp, #28
   22860:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22864:	mov	r1, r5
   22868:	mov	r0, r1
   2286c:	sub	sp, fp, #28
   22870:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22874:	mov	r1, r5
   22878:	mov	r0, r1
   2287c:	sub	sp, fp, #28
   22880:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   22884:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22888:	add	fp, sp, #28
   2288c:	sub	sp, sp, #28
   22890:	mov	r8, r2
   22894:	sub	r2, r2, r1
   22898:	cmp	r2, #8
   2289c:	movcs	r2, #8
   228a0:	sub	r2, r2, #1
   228a4:	cmp	r2, #7
   228a8:	bhi	23638 <main@@Base+0xd594>
   228ac:	str	r0, [sp, #24]
   228b0:	mov	sl, #0
   228b4:	mov	ip, #0
   228b8:	mov	lr, #0
   228bc:	mov	r9, #0
   228c0:	mov	r6, #0
   228c4:	mov	r4, #0
   228c8:	mov	r5, #0
   228cc:	ldr	r0, [fp, #12]
   228d0:	str	r0, [sp, #20]
   228d4:	ldr	r0, [fp, #8]
   228d8:	str	r0, [sp, #16]
   228dc:	add	r7, pc, #4
   228e0:	mov	r0, #0
   228e4:	ldr	pc, [r7, r2, lsl #2]
   228e8:	andeq	r2, r2, ip, asr #18
   228ec:	andeq	r2, r2, r4, asr #18
   228f0:	andeq	r2, r2, ip, lsr r9
   228f4:	andeq	r2, r2, r4, lsr r9
   228f8:	andeq	r2, r2, r8, lsr #18
   228fc:	andeq	r2, r2, ip, lsl r9
   22900:	andeq	r2, r2, ip, lsl #18
   22904:	andeq	r2, r2, r8, lsl #18
   22908:	ldrb	ip, [r1, #7]
   2290c:	ldrb	r2, [r1, #6]
   22910:	mov	lr, sl
   22914:	orr	r2, ip, r2, lsl #8
   22918:	mov	sl, r2
   2291c:	ldrb	r2, [r1, #5]
   22920:	mov	r9, lr
   22924:	orr	sl, sl, r2, lsl #16
   22928:	ldrb	r2, [r1, #4]
   2292c:	mov	r6, r9
   22930:	orr	sl, sl, r2, lsl #24
   22934:	ldrb	r2, [r1, #3]
   22938:	orr	r4, r2, r6
   2293c:	ldrb	r2, [r1, #2]
   22940:	orr	r0, r4, r2, lsl #8
   22944:	ldrb	r2, [r1, #1]
   22948:	orr	r5, r0, r2, lsl #16
   2294c:	ldrb	r2, [r1]
   22950:	movw	r7, #11844	; 0x2e44
   22954:	movw	r0, #18273	; 0x4761
   22958:	movt	r7, #28005	; 0x6d65
   2295c:	movt	r0, #19833	; 0x4d79
   22960:	subs	r7, r7, sl
   22964:	orr	r2, r5, r2, lsl #24
   22968:	sbcs	r7, r0, r2
   2296c:	bcc	22acc <main@@Base+0xca28>
   22970:	movw	r0, #31022	; 0x792e
   22974:	movw	r7, #28276	; 0x6e74
   22978:	movt	r0, #24947	; 0x6173
   2297c:	movt	r7, #18017	; 0x4661
   22980:	eor	r0, sl, r0
   22984:	eor	r2, r2, r7
   22988:	orrs	r0, r0, r2
   2298c:	bne	23638 <main@@Base+0xd594>
   22990:	add	lr, r1, #8
   22994:	sub	r0, r8, lr
   22998:	cmp	r0, #8
   2299c:	movcs	r0, #8
   229a0:	sub	r6, r0, #1
   229a4:	cmp	r6, #7
   229a8:	bhi	23638 <main@@Base+0xd594>
   229ac:	str	r3, [sp, #12]
   229b0:	add	r2, pc, #32
   229b4:	mov	sl, #0
   229b8:	mov	ip, #0
   229bc:	mov	r9, #0
   229c0:	mov	r4, #0
   229c4:	mov	r7, #0
   229c8:	mov	r5, #0
   229cc:	mov	r0, #0
   229d0:	mov	r3, #0
   229d4:	ldr	pc, [r2, r6, lsl #2]
   229d8:	andeq	r2, r2, ip, lsr sl
   229dc:	andeq	r2, r2, r4, lsr sl
   229e0:	andeq	r2, r2, ip, lsr #20
   229e4:	andeq	r2, r2, r4, lsr #20
   229e8:	andeq	r2, r2, r8, lsl sl
   229ec:	andeq	r2, r2, ip, lsl #20
   229f0:	strdeq	r2, [r2], -ip
   229f4:	strdeq	r2, [r2], -r8
   229f8:	ldrb	ip, [r1, #15]
   229fc:	ldrb	r0, [r1, #14]
   22a00:	mov	r9, sl
   22a04:	orr	r0, ip, r0, lsl #8
   22a08:	mov	sl, r0
   22a0c:	ldrb	r0, [r1, #13]
   22a10:	mov	r4, r9
   22a14:	orr	sl, sl, r0, lsl #16
   22a18:	ldrb	r0, [r1, #12]
   22a1c:	mov	r7, r4
   22a20:	orr	sl, sl, r0, lsl #24
   22a24:	ldrb	r0, [r1, #11]
   22a28:	orr	r5, r0, r7
   22a2c:	ldrb	r0, [r1, #10]
   22a30:	orr	r0, r5, r0, lsl #8
   22a34:	ldrb	r2, [r1, #9]
   22a38:	orr	r3, r0, r2, lsl #16
   22a3c:	ldrb	r2, [lr]
   22a40:	movw	r0, #29797	; 0x7465
   22a44:	movt	r0, #24931	; 0x6163
   22a48:	eor	r0, sl, r0
   22a4c:	orr	r2, r3, r2, lsl #24
   22a50:	movw	r3, #24946	; 0x6172
   22a54:	movt	r3, #17256	; 0x4368
   22a58:	eor	r2, r2, r3
   22a5c:	orrs	r0, r0, r2
   22a60:	bne	23638 <main@@Base+0xd594>
   22a64:	add	r0, r1, #16
   22a68:	sub	r2, r8, r0
   22a6c:	cmp	r2, #8
   22a70:	mov	r3, r2
   22a74:	movcs	r3, #8
   22a78:	sub	r3, r3, #1
   22a7c:	cmp	r3, #7
   22a80:	bhi	23638 <main@@Base+0xd594>
   22a84:	cmp	r2, #2
   22a88:	blt	23638 <main@@Base+0xd594>
   22a8c:	ldrb	r2, [r0]
   22a90:	cmp	r2, #114	; 0x72
   22a94:	bne	23638 <main@@Base+0xd594>
   22a98:	ldrb	r2, [r1, #17]
   22a9c:	ldr	r3, [sp, #12]
   22aa0:	cmp	r2, #46	; 0x2e
   22aa4:	mov	r2, r0
   22aa8:	addeq	r2, r1, #18
   22aac:	cmp	r2, r0
   22ab0:	beq	23638 <main@@Base+0xd594>
   22ab4:	ldr	r0, [sp, #24]
   22ab8:	mov	r1, r2
   22abc:	mov	r2, r8
   22ac0:	sub	sp, fp, #28
   22ac4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22ac8:	b	2720c <main@@Base+0x11168>
   22acc:	movw	r7, #11855	; 0x2e4f
   22ad0:	eor	r2, r2, r0
   22ad4:	movt	r7, #28005	; 0x6d65
   22ad8:	eor	r7, sl, r7
   22adc:	orrs	r0, r7, r2
   22ae0:	beq	22c78 <main@@Base+0xcbd4>
   22ae4:	movw	r0, #11845	; 0x2e45
   22ae8:	movt	r0, #28005	; 0x6d65
   22aec:	eor	r0, sl, r0
   22af0:	orrs	r0, r0, r2
   22af4:	bne	23638 <main@@Base+0xd594>
   22af8:	add	lr, r1, #8
   22afc:	sub	r0, r8, lr
   22b00:	cmp	r0, #8
   22b04:	movcs	r0, #8
   22b08:	sub	r7, r0, #1
   22b0c:	cmp	r7, #7
   22b10:	bhi	23638 <main@@Base+0xd594>
   22b14:	str	r3, [sp, #12]
   22b18:	add	sl, pc, #32
   22b1c:	mov	r0, #0
   22b20:	mov	ip, #0
   22b24:	mov	r9, #0
   22b28:	mov	r4, #0
   22b2c:	mov	r6, #0
   22b30:	mov	r5, #0
   22b34:	mov	r2, #0
   22b38:	mov	r3, #0
   22b3c:	ldr	pc, [sl, r7, lsl #2]
   22b40:	andeq	r2, r2, r4, lsr #23
   22b44:	muleq	r2, ip, fp
   22b48:	muleq	r2, r4, fp
   22b4c:	andeq	r2, r2, ip, lsl #23
   22b50:	andeq	r2, r2, r0, lsl #23
   22b54:	andeq	r2, r2, r4, ror fp
   22b58:	andeq	r2, r2, r4, ror #22
   22b5c:	andeq	r2, r2, r0, ror #22
   22b60:	ldrb	ip, [r1, #15]
   22b64:	ldrb	r2, [r1, #14]
   22b68:	mov	r9, r0
   22b6c:	orr	r2, ip, r2, lsl #8
   22b70:	mov	r0, r2
   22b74:	ldrb	r2, [r1, #13]
   22b78:	mov	r4, r9
   22b7c:	orr	r0, r0, r2, lsl #16
   22b80:	ldrb	r2, [r1, #12]
   22b84:	mov	r6, r4
   22b88:	orr	r0, r0, r2, lsl #24
   22b8c:	ldrb	r2, [r1, #11]
   22b90:	orr	r5, r2, r6
   22b94:	ldrb	r2, [r1, #10]
   22b98:	orr	r2, r5, r2, lsl #8
   22b9c:	ldrb	r3, [r1, #9]
   22ba0:	orr	r3, r2, r3, lsl #16
   22ba4:	ldrb	r2, [lr]
   22ba8:	movw	r6, #11880	; 0x2e68
   22bac:	movt	r6, #27749	; 0x6c65
   22bb0:	subs	r7, r0, r6
   22bb4:	orr	r2, r3, r2, lsl #24
   22bb8:	movw	r3, #28016	; 0x6d70
   22bbc:	movt	r3, #30817	; 0x7861
   22bc0:	sbcs	r7, r2, r3
   22bc4:	bcs	23034 <main@@Base+0xcf90>
   22bc8:	ldr	lr, [sp, #12]
   22bcc:	subs	r7, r6, #37	; 0x25
   22bd0:	sbc	r5, r3, #0
   22bd4:	subs	r7, r0, r7
   22bd8:	sbcs	r7, r2, r5
   22bdc:	bcs	2314c <main@@Base+0xd0a8>
   22be0:	subs	r7, r6, #39	; 0x27
   22be4:	sbc	r3, r3, #0
   22be8:	eor	r0, r0, r7
   22bec:	eor	r2, r2, r3
   22bf0:	orrs	r0, r0, r2
   22bf4:	bne	23638 <main@@Base+0xd594>
   22bf8:	add	r0, r1, #16
   22bfc:	sub	r6, r8, r0
   22c00:	cmp	r6, #8
   22c04:	mov	r2, r6
   22c08:	movcs	r2, #8
   22c0c:	sub	r3, r2, #2
   22c10:	cmp	r3, #7
   22c14:	bcs	23614 <main@@Base+0xd570>
   22c18:	ldrb	r2, [r1, #17]
   22c1c:	mov	r3, #0
   22c20:	lsl	r7, r2, #16
   22c24:	cmp	r6, #3
   22c28:	blt	23638 <main@@Base+0xd594>
   22c2c:	ldrb	r2, [r0]
   22c30:	orr	r2, r7, r2, lsl #24
   22c34:	eor	r2, r2, #7929856	; 0x790000
   22c38:	eor	r2, r2, #1845493760	; 0x6e000000
   22c3c:	orrs	r2, r3, r2
   22c40:	bne	23638 <main@@Base+0xd594>
   22c44:	ldrb	r2, [r1, #18]
   22c48:	cmp	r2, #46	; 0x2e
   22c4c:	mov	r2, r0
   22c50:	addeq	r2, r1, #19
   22c54:	cmp	r2, r0
   22c58:	beq	23638 <main@@Base+0xd594>
   22c5c:	ldr	r0, [sp, #24]
   22c60:	mov	r1, r2
   22c64:	mov	r2, r8
   22c68:	mov	r3, lr
   22c6c:	sub	sp, fp, #28
   22c70:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   22c74:	b	257fc <main@@Base+0xf758>
   22c78:	add	lr, r1, #8
   22c7c:	sub	r0, r8, lr
   22c80:	cmp	r0, #8
   22c84:	movcs	r0, #8
   22c88:	sub	r7, r0, #1
   22c8c:	cmp	r7, #7
   22c90:	bhi	23638 <main@@Base+0xd594>
   22c94:	str	r3, [sp, #12]
   22c98:	add	r3, pc, #32
   22c9c:	mov	r2, #0
   22ca0:	mov	ip, #0
   22ca4:	mov	sl, #0
   22ca8:	mov	r4, #0
   22cac:	mov	r6, #0
   22cb0:	mov	r5, #0
   22cb4:	mov	r0, #0
   22cb8:	mov	r9, #0
   22cbc:	ldr	pc, [r3, r7, lsl #2]
   22cc0:	andeq	r2, r2, r4, lsr #26
   22cc4:	andeq	r2, r2, ip, lsl sp
   22cc8:	andeq	r2, r2, r4, lsl sp
   22ccc:	andeq	r2, r2, ip, lsl #26
   22cd0:	andeq	r2, r2, r0, lsl #26
   22cd4:	strdeq	r2, [r2], -r4
   22cd8:	andeq	r2, r2, r4, ror #25
   22cdc:	andeq	r2, r2, r0, ror #25
   22ce0:	ldrb	ip, [r1, #15]
   22ce4:	ldrb	r0, [r1, #14]
   22ce8:	mov	sl, r2
   22cec:	orr	r0, ip, r0, lsl #8
   22cf0:	mov	r2, r0
   22cf4:	ldrb	r0, [r1, #13]
   22cf8:	mov	r4, sl
   22cfc:	orr	r2, r2, r0, lsl #16
   22d00:	ldrb	r0, [r1, #12]
   22d04:	mov	r6, r4
   22d08:	orr	r2, r2, r0, lsl #24
   22d0c:	ldrb	r0, [r1, #11]
   22d10:	orr	r5, r0, r6
   22d14:	ldrb	r0, [r1, #10]
   22d18:	orr	r0, r5, r0, lsl #8
   22d1c:	ldrb	r3, [r1, #9]
   22d20:	orr	r9, r0, r3, lsl #16
   22d24:	movw	r0, #28005	; 0x6d65
   22d28:	movw	r3, #25970	; 0x6572
   22d2c:	movt	r0, #20065	; 0x4e61
   22d30:	movt	r3, #29800	; 0x7468
   22d34:	eor	r0, r2, r0
   22d38:	ldrb	r2, [lr]
   22d3c:	orr	r2, r9, r2, lsl #24
   22d40:	eor	r2, r2, r3
   22d44:	orrs	r0, r0, r2
   22d48:	bne	23638 <main@@Base+0xd594>
   22d4c:	add	lr, r1, #16
   22d50:	sub	r0, r8, lr
   22d54:	cmp	r0, #8
   22d58:	movcs	r0, #8
   22d5c:	sub	r7, r0, #1
   22d60:	cmp	r7, #7
   22d64:	bhi	23638 <main@@Base+0xd594>
   22d68:	add	r2, pc, #32
   22d6c:	mov	sl, #0
   22d70:	mov	ip, #0
   22d74:	mov	r9, #0
   22d78:	mov	r4, #0
   22d7c:	mov	r6, #0
   22d80:	mov	r5, #0
   22d84:	mov	r0, #0
   22d88:	mov	r3, #0
   22d8c:	ldr	pc, [r2, r7, lsl #2]
   22d90:	strdeq	r2, [r2], -r4
   22d94:	andeq	r2, r2, ip, ror #27
   22d98:	andeq	r2, r2, r4, ror #27
   22d9c:	ldrdeq	r2, [r2], -ip
   22da0:	ldrdeq	r2, [r2], -r0
   22da4:	andeq	r2, r2, r4, asr #27
   22da8:			; <UNDEFINED> instruction: 0x00022db4
   22dac:			; <UNDEFINED> instruction: 0x00022db0
   22db0:	ldrb	ip, [r1, #23]
   22db4:	ldrb	r0, [r1, #22]
   22db8:	mov	r9, sl
   22dbc:	orr	r0, ip, r0, lsl #8
   22dc0:	mov	sl, r0
   22dc4:	ldrb	r0, [r1, #21]
   22dc8:	mov	r4, r9
   22dcc:	orr	sl, sl, r0, lsl #16
   22dd0:	ldrb	r0, [r1, #20]
   22dd4:	mov	r6, r4
   22dd8:	orr	sl, sl, r0, lsl #24
   22ddc:	ldrb	r0, [r1, #19]
   22de0:	orr	r5, r0, r6
   22de4:	ldrb	r0, [r1, #18]
   22de8:	orr	r0, r5, r0, lsl #8
   22dec:	ldrb	r2, [r1, #17]
   22df0:	orr	r3, r0, r2, lsl #16
   22df4:	ldrb	r2, [lr]
   22df8:	movw	r0, #18034	; 0x4672
   22dfc:	movt	r0, #25902	; 0x652e
   22e00:	eor	r0, sl, r0
   22e04:	orr	r2, r3, r2, lsl #24
   22e08:	movw	r3, #24931	; 0x6163
   22e0c:	movt	r3, #21360	; 0x5370
   22e10:	eor	r2, r2, r3
   22e14:	orrs	r0, r0, r2
   22e18:	bne	23638 <main@@Base+0xd594>
   22e1c:	add	lr, r1, #24
   22e20:	sub	r0, r8, lr
   22e24:	cmp	r0, #8
   22e28:	movcs	r0, #8
   22e2c:	sub	r7, r0, #1
   22e30:	cmp	r7, #7
   22e34:	bhi	23638 <main@@Base+0xd594>
   22e38:	add	r2, pc, #32
   22e3c:	mov	sl, #0
   22e40:	mov	ip, #0
   22e44:	mov	r9, #0
   22e48:	mov	r4, #0
   22e4c:	mov	r6, #0
   22e50:	mov	r5, #0
   22e54:	mov	r0, #0
   22e58:	mov	r3, #0
   22e5c:	ldr	pc, [r2, r7, lsl #2]
   22e60:	andeq	r2, r2, r4, asr #29
   22e64:			; <UNDEFINED> instruction: 0x00022ebc
   22e68:			; <UNDEFINED> instruction: 0x00022eb4
   22e6c:	andeq	r2, r2, ip, lsr #29
   22e70:	andeq	r2, r2, r0, lsr #29
   22e74:	muleq	r2, r4, lr
   22e78:	andeq	r2, r2, r4, lsl #29
   22e7c:	andeq	r2, r2, r0, lsl #29
   22e80:	ldrb	ip, [r1, #31]
   22e84:	ldrb	r0, [r1, #30]
   22e88:	mov	r9, sl
   22e8c:	orr	r0, ip, r0, lsl #8
   22e90:	mov	sl, r0
   22e94:	ldrb	r0, [r1, #29]
   22e98:	mov	r4, r9
   22e9c:	orr	sl, sl, r0, lsl #16
   22ea0:	ldrb	r0, [r1, #28]
   22ea4:	mov	r6, r4
   22ea8:	orr	sl, sl, r0, lsl #24
   22eac:	ldrb	r0, [r1, #27]
   22eb0:	orr	r5, r0, r6
   22eb4:	ldrb	r0, [r1, #26]
   22eb8:	orr	r0, r5, r0, lsl #8
   22ebc:	ldrb	r2, [r1, #25]
   22ec0:	orr	r3, r0, r2, lsl #16
   22ec4:	ldrb	r2, [lr]
   22ec8:	movw	r0, #30052	; 0x7564
   22ecc:	movt	r0, #25452	; 0x636c
   22ed0:	eor	r0, sl, r0
   22ed4:	orr	r2, r3, r2, lsl #24
   22ed8:	movw	r3, #18798	; 0x496e
   22edc:	movt	r3, #28525	; 0x6f6d
   22ee0:	eor	r2, r2, r3
   22ee4:	orrs	r0, r0, r2
   22ee8:	bne	23638 <main@@Base+0xd594>
   22eec:	add	r0, r1, #32
   22ef0:	sub	r2, r8, r0
   22ef4:	cmp	r2, #8
   22ef8:	mov	r3, r2
   22efc:	movcs	r3, #8
   22f00:	sub	r3, r3, #1
   22f04:	cmp	r3, #7
   22f08:	bhi	23638 <main@@Base+0xd594>
   22f0c:	cmp	r2, #2
   22f10:	blt	23638 <main@@Base+0xd594>
   22f14:	ldrb	r2, [r0]
   22f18:	cmp	r2, #101	; 0x65
   22f1c:	bne	23638 <main@@Base+0xd594>
   22f20:	ldrb	r2, [r1, #33]	; 0x21
   22f24:	ldr	r9, [sp, #12]
   22f28:	mov	r7, r0
   22f2c:	cmp	r2, #46	; 0x2e
   22f30:	addeq	r7, r1, #34	; 0x22
   22f34:	cmp	r7, r0
   22f38:	beq	23638 <main@@Base+0xd594>
   22f3c:	sub	r0, r8, r7
   22f40:	cmp	r0, #8
   22f44:	movcs	r0, #8
   22f48:	sub	r2, r0, #1
   22f4c:	cmp	r2, #7
   22f50:	bhi	236f4 <main@@Base+0xd650>
   22f54:	add	r5, pc, #32
   22f58:	mov	sl, #0
   22f5c:	mov	ip, #0
   22f60:	mov	lr, #0
   22f64:	mov	r1, #0
   22f68:	mov	r3, #0
   22f6c:	mov	r6, #0
   22f70:	mov	r4, #0
   22f74:	mov	r0, #0
   22f78:	ldr	pc, [r5, r2, lsl #2]
   22f7c:	andeq	r2, r2, r0, ror #31
   22f80:	ldrdeq	r2, [r2], -r8
   22f84:	ldrdeq	r2, [r2], -r0
   22f88:	andeq	r2, r2, r8, asr #31
   22f8c:			; <UNDEFINED> instruction: 0x00022fbc
   22f90:			; <UNDEFINED> instruction: 0x00022fb0
   22f94:	andeq	r2, r2, r0, lsr #31
   22f98:	muleq	r2, ip, pc	; <UNPREDICTABLE>
   22f9c:	ldrb	ip, [r7, #7]
   22fa0:	ldrb	r0, [r7, #6]
   22fa4:	mov	lr, sl
   22fa8:	orr	r0, ip, r0, lsl #8
   22fac:	mov	sl, r0
   22fb0:	ldrb	r0, [r7, #5]
   22fb4:	mov	r1, lr
   22fb8:	orr	sl, sl, r0, lsl #16
   22fbc:	ldrb	r0, [r7, #4]
   22fc0:	mov	r3, r1
   22fc4:	orr	sl, sl, r0, lsl #24
   22fc8:	ldrb	r0, [r7, #3]
   22fcc:	orr	r6, r0, r3
   22fd0:	ldrb	r0, [r7, #2]
   22fd4:	orr	r4, r6, r0, lsl #8
   22fd8:	ldrb	r0, [r7, #1]
   22fdc:	orr	r0, r4, r0, lsl #16
   22fe0:	ldrb	r1, [r7]
   22fe4:	ldr	r4, [sp, #24]
   22fe8:	orr	r6, r0, r1, lsl #24
   22fec:	movw	r1, #28416	; 0x6f00
   22ff0:	movt	r1, #18031	; 0x466f
   22ff4:	bic	r0, r6, #255	; 0xff
   22ff8:	teq	r0, r1
   22ffc:	bne	23644 <main@@Base+0xd5a0>
   23000:	ldr	r0, [sp, #20]
   23004:	mov	r1, r7
   23008:	mov	r2, r8
   2300c:	mov	r3, #3
   23010:	str	r0, [sp]
   23014:	mov	r0, r4
   23018:	bl	371c8 <flatcc_json_parser_match_constant@@Base>
   2301c:	cmp	r0, r7
   23020:	beq	23644 <main@@Base+0xd5a0>
   23024:	mov	r1, r0
   23028:	mov	r3, #0
   2302c:	mov	r2, #17
   23030:	b	236d8 <main@@Base+0xd634>
   23034:	eor	r5, r0, r6
   23038:	eor	r7, r2, r3
   2303c:	orrs	r5, r5, r7
   23040:	bne	23240 <main@@Base+0xd19c>
   23044:	add	ip, r1, #16
   23048:	sub	r2, r8, ip
   2304c:	cmp	r2, #8
   23050:	mov	r0, r2
   23054:	movcs	r0, #8
   23058:	sub	r4, r0, #1
   2305c:	cmp	r4, #7
   23060:	bhi	23638 <main@@Base+0xd594>
   23064:	add	r6, pc, #28
   23068:	mov	r9, #0
   2306c:	mov	lr, #0
   23070:	mov	sl, #0
   23074:	mov	r3, #0
   23078:	mov	r5, #0
   2307c:	mov	r0, #0
   23080:	mov	r7, #0
   23084:	ldr	pc, [r6, r4, lsl #2]
   23088:	andeq	r3, r2, r4, ror #1
   2308c:	ldrdeq	r3, [r2], -ip
   23090:	ldrdeq	r3, [r2], -r4
   23094:	andeq	r3, r2, ip, asr #1
   23098:	andeq	r3, r2, r0, asr #1
   2309c:	strheq	r3, [r2], -r0
   230a0:	andeq	r3, r2, r8, lsr #1
   230a4:	andeq	r3, r2, r8, lsr #1
   230a8:	ldrb	r0, [r1, #22]
   230ac:	lsl	lr, r0, #8
   230b0:	ldrb	r0, [r1, #21]
   230b4:	mov	sl, r9
   230b8:	orr	r0, lr, r0, lsl #16
   230bc:	mov	r9, r0
   230c0:	ldrb	r0, [r1, #20]
   230c4:	mov	r3, sl
   230c8:	orr	r9, r9, r0, lsl #24
   230cc:	ldrb	r0, [r1, #19]
   230d0:	orr	r5, r0, r3
   230d4:	ldrb	r0, [r1, #18]
   230d8:	orr	r0, r5, r0, lsl #8
   230dc:	ldrb	r3, [r1, #17]
   230e0:	orr	r7, r0, r3, lsl #16
   230e4:	cmp	r2, #8
   230e8:	blt	23638 <main@@Base+0xd594>
   230ec:	ldrb	r0, [ip]
   230f0:	movw	r2, #24421	; 0x5f65
   230f4:	movw	r3, #27904	; 0x6d00
   230f8:	movt	r2, #25959	; 0x6567
   230fc:	movt	r3, #28277	; 0x6e75
   23100:	add	r2, r2, #1114112	; 0x110000
   23104:	eor	r3, r9, r3
   23108:	orr	r0, r7, r0, lsl #24
   2310c:	eor	r0, r0, r2
   23110:	orrs	r0, r3, r0
   23114:	bne	23638 <main@@Base+0xd594>
   23118:	ldrb	r0, [r1, #23]
   2311c:	ldr	r3, [sp, #12]
   23120:	mov	r2, ip
   23124:	cmp	r0, #46	; 0x2e
   23128:	addeq	r2, r1, #24
   2312c:	cmp	r2, ip
   23130:	beq	23638 <main@@Base+0xd594>
   23134:	ldr	r0, [sp, #24]
   23138:	mov	r1, r2
   2313c:	mov	r2, r8
   23140:	sub	sp, fp, #28
   23144:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23148:	b	26d28 <main@@Base+0x10c84>
   2314c:	movw	r7, #11846	; 0x2e46
   23150:	eor	r2, r2, r3
   23154:	movt	r7, #27749	; 0x6c65
   23158:	eor	r7, r0, r7
   2315c:	orrs	r3, r7, r2
   23160:	beq	23498 <main@@Base+0xd3f4>
   23164:	movw	r3, #11843	; 0x2e43
   23168:	movt	r3, #27749	; 0x6c65
   2316c:	eor	r0, r0, r3
   23170:	orrs	r0, r0, r2
   23174:	bne	23638 <main@@Base+0xd594>
   23178:	add	r0, r1, #16
   2317c:	sub	r2, r8, r0
   23180:	cmp	r2, #8
   23184:	mov	r3, r2
   23188:	movcs	r3, #8
   2318c:	sub	r6, r3, #1
   23190:	cmp	r6, #7
   23194:	bhi	23638 <main@@Base+0xd594>
   23198:	add	r3, pc, #16
   2319c:	mov	ip, #0
   231a0:	mov	r7, #0
   231a4:	mov	r4, #0
   231a8:	mov	r5, #0
   231ac:	ldr	pc, [r3, r6, lsl #2]
   231b0:	andeq	r3, r2, r8, ror #3
   231b4:	andeq	r3, r2, r0, ror #3
   231b8:	ldrdeq	r3, [r2], -r8
   231bc:	ldrdeq	r3, [r2], -r0
   231c0:	ldrdeq	r3, [r2], -r0
   231c4:	ldrdeq	r3, [r2], -r0
   231c8:	ldrdeq	r3, [r2], -r0
   231cc:	ldrdeq	r3, [r2], -r0
   231d0:	ldrb	r7, [r1, #19]
   231d4:	mov	ip, #0
   231d8:	ldrb	r3, [r1, #18]
   231dc:	orr	r4, r7, r3, lsl #8
   231e0:	ldrb	r3, [r1, #17]
   231e4:	orr	r5, r4, r3, lsl #16
   231e8:	cmp	r2, #5
   231ec:	blt	23638 <main@@Base+0xd594>
   231f0:	ldrb	r2, [r0]
   231f4:	movw	r3, #28530	; 0x6f72
   231f8:	movt	r3, #28524	; 0x6f6c
   231fc:	orr	r2, r5, r2, lsl #24
   23200:	eor	r2, r2, r3
   23204:	orrs	r2, ip, r2
   23208:	bne	23638 <main@@Base+0xd594>
   2320c:	ldrb	r2, [r1, #20]
   23210:	cmp	r2, #46	; 0x2e
   23214:	mov	r2, r0
   23218:	addeq	r2, r1, #21
   2321c:	cmp	r2, r0
   23220:	beq	23638 <main@@Base+0xd594>
   23224:	ldr	r0, [sp, #24]
   23228:	mov	r1, r2
   2322c:	mov	r2, r8
   23230:	mov	r3, lr
   23234:	sub	sp, fp, #28
   23238:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2323c:	b	222a0 <main@@Base+0xc1fc>
   23240:	add	r5, r6, #6
   23244:	subs	r4, r0, r5
   23248:	sbcs	r2, r2, r3
   2324c:	bcs	2336c <main@@Base+0xd2c8>
   23250:	add	r2, r6, #1
   23254:	eor	r0, r0, r2
   23258:	orrs	r0, r0, r7
   2325c:	bne	23638 <main@@Base+0xd594>
   23260:	add	ip, r1, #16
   23264:	sub	r2, r8, ip
   23268:	cmp	r2, #8
   2326c:	mov	r0, r2
   23270:	movcs	r0, #8
   23274:	sub	r4, r0, #1
   23278:	cmp	r4, #7
   2327c:	bhi	23638 <main@@Base+0xd594>
   23280:	add	r6, pc, #28
   23284:	mov	r9, #0
   23288:	mov	lr, #0
   2328c:	mov	sl, #0
   23290:	mov	r3, #0
   23294:	mov	r5, #0
   23298:	mov	r7, #0
   2329c:	mov	r0, #0
   232a0:	ldr	pc, [r6, r4, lsl #2]
   232a4:	andeq	r3, r2, r0, lsl #6
   232a8:	strdeq	r3, [r2], -r8
   232ac:	strdeq	r3, [r2], -r0
   232b0:	andeq	r3, r2, r8, ror #5
   232b4:	ldrdeq	r3, [r2], -ip
   232b8:	andeq	r3, r2, ip, asr #5
   232bc:	andeq	r3, r2, r4, asr #5
   232c0:	andeq	r3, r2, r4, asr #5
   232c4:	ldrb	r0, [r1, #22]
   232c8:	lsl	lr, r0, #8
   232cc:	ldrb	r0, [r1, #21]
   232d0:	mov	sl, r9
   232d4:	orr	r0, lr, r0, lsl #16
   232d8:	mov	r9, r0
   232dc:	ldrb	r0, [r1, #20]
   232e0:	mov	r3, sl
   232e4:	orr	r9, r9, r0, lsl #24
   232e8:	ldrb	r0, [r1, #19]
   232ec:	orr	r5, r0, r3
   232f0:	ldrb	r0, [r1, #18]
   232f4:	orr	r7, r5, r0, lsl #8
   232f8:	ldrb	r0, [r1, #17]
   232fc:	orr	r0, r7, r0, lsl #16
   23300:	cmp	r2, #8
   23304:	blt	23638 <main@@Base+0xd594>
   23308:	ldrb	r3, [ip]
   2330c:	movw	r2, #24421	; 0x5f65
   23310:	movt	r2, #25959	; 0x6567
   23314:	add	r2, r2, #851968	; 0xd0000
   23318:	orr	r0, r0, r3, lsl #24
   2331c:	movw	r3, #27904	; 0x6d00
   23320:	add	r2, r2, #150994944	; 0x9000000
   23324:	movt	r3, #28277	; 0x6e75
   23328:	eor	r0, r0, r2
   2332c:	eor	r3, r9, r3
   23330:	orrs	r0, r3, r0
   23334:	bne	23638 <main@@Base+0xd594>
   23338:	ldrb	r0, [r1, #23]
   2333c:	ldr	r3, [sp, #12]
   23340:	mov	r2, ip
   23344:	cmp	r0, #46	; 0x2e
   23348:	addeq	r2, r1, #24
   2334c:	cmp	r2, ip
   23350:	beq	23638 <main@@Base+0xd594>
   23354:	ldr	r0, [sp, #24]
   23358:	mov	r1, r2
   2335c:	mov	r2, r8
   23360:	sub	sp, fp, #28
   23364:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23368:	b	26ed4 <main@@Base+0x10e30>
   2336c:	eor	r0, r0, r5
   23370:	orrs	r0, r0, r7
   23374:	bne	23638 <main@@Base+0xd594>
   23378:	add	lr, r1, #16
   2337c:	sub	r2, r8, lr
   23380:	cmp	r2, #8
   23384:	mov	r0, r2
   23388:	movcs	r0, #8
   2338c:	sub	r7, r0, #1
   23390:	cmp	r7, #7
   23394:	bhi	23638 <main@@Base+0xd594>
   23398:	add	r3, pc, #36	; 0x24
   2339c:	mov	r0, #0
   233a0:	mov	sl, #0
   233a4:	mov	r9, #0
   233a8:	mov	r4, #0
   233ac:	mov	r6, #0
   233b0:	mov	r5, #0
   233b4:	mov	ip, #0
   233b8:	str	r0, [sp, #8]
   233bc:	mov	r0, #0
   233c0:	ldr	pc, [r3, r7, lsl #2]
   233c4:	andeq	r3, r2, r0, lsr r4
   233c8:	andeq	r3, r2, r8, lsr #8
   233cc:	andeq	r3, r2, r0, lsr #8
   233d0:	andeq	r3, r2, r8, lsl r4
   233d4:	andeq	r3, r2, ip, lsl #8
   233d8:	andeq	r3, r2, r0, lsl #8
   233dc:	andeq	r3, r2, ip, ror #7
   233e0:	andeq	r3, r2, r4, ror #7
   233e4:	ldrb	r0, [r1, #23]
   233e8:	str	r0, [sp, #8]
   233ec:	ldrb	r0, [r1, #22]
   233f0:	ldr	r3, [sp, #8]
   233f4:	mov	r9, sl
   233f8:	orr	r0, r3, r0, lsl #8
   233fc:	mov	sl, r0
   23400:	ldrb	r0, [r1, #21]
   23404:	mov	r4, r9
   23408:	orr	sl, sl, r0, lsl #16
   2340c:	ldrb	r0, [r1, #20]
   23410:	mov	r6, r4
   23414:	orr	sl, sl, r0, lsl #24
   23418:	ldrb	r0, [r1, #19]
   2341c:	orr	r5, r0, r6
   23420:	ldrb	r0, [r1, #18]
   23424:	orr	ip, r5, r0, lsl #8
   23428:	ldrb	r0, [r1, #17]
   2342c:	orr	r0, ip, r0, lsl #16
   23430:	ldrb	r3, [lr]
   23434:	movw	ip, #27904	; 0x6d00
   23438:	cmp	r2, #8
   2343c:	movt	ip, #28277	; 0x6e75
   23440:	orr	r6, r0, r3, lsl #24
   23444:	blt	23518 <main@@Base+0xd474>
   23448:	movw	r2, #24421	; 0x5f65
   2344c:	bic	r0, sl, #255	; 0xff
   23450:	movt	r2, #25959	; 0x6567
   23454:	eor	r0, r0, ip
   23458:	eor	r2, r6, r2
   2345c:	orrs	r0, r0, r2
   23460:	bne	23518 <main@@Base+0xd474>
   23464:	ldrb	r0, [r1, #23]
   23468:	mov	r2, lr
   2346c:	cmp	r0, #46	; 0x2e
   23470:	addeq	r2, r1, #24
   23474:	cmp	r2, lr
   23478:	beq	23518 <main@@Base+0xd474>
   2347c:	ldr	r0, [sp, #24]
   23480:	ldr	r3, [sp, #12]
   23484:	mov	r1, r2
   23488:	mov	r2, r8
   2348c:	sub	sp, fp, #28
   23490:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23494:	b	270c4 <main@@Base+0x11020>
   23498:	add	r0, r1, #16
   2349c:	sub	r6, r8, r0
   234a0:	cmp	r6, #8
   234a4:	mov	r2, r6
   234a8:	movcs	r2, #8
   234ac:	sub	r3, r2, #2
   234b0:	cmp	r3, #7
   234b4:	bcs	23628 <main@@Base+0xd584>
   234b8:	ldrb	r2, [r1, #17]
   234bc:	mov	r3, #0
   234c0:	lsl	r7, r2, #16
   234c4:	cmp	r6, #3
   234c8:	blt	23638 <main@@Base+0xd594>
   234cc:	ldrb	r2, [r0]
   234d0:	orr	r2, r7, r2, lsl #24
   234d4:	eor	r2, r2, #7274496	; 0x6f0000
   234d8:	eor	r2, r2, #1862270976	; 0x6f000000
   234dc:	orrs	r2, r3, r2
   234e0:	bne	23638 <main@@Base+0xd594>
   234e4:	ldrb	r2, [r1, #18]
   234e8:	cmp	r2, #46	; 0x2e
   234ec:	mov	r2, r0
   234f0:	addeq	r2, r1, #19
   234f4:	cmp	r2, r0
   234f8:	beq	23638 <main@@Base+0xd594>
   234fc:	ldr	r0, [sp, #24]
   23500:	mov	r1, r2
   23504:	mov	r2, r8
   23508:	mov	r3, lr
   2350c:	sub	sp, fp, #28
   23510:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23514:	b	26ac8 <main@@Base+0x10a24>
   23518:	movw	r0, #31077	; 0x7965
   2351c:	movw	r2, #25965	; 0x656d
   23520:	movt	r0, #28788	; 0x7074
   23524:	movt	r2, #28532	; 0x6f74
   23528:	eor	r0, sl, r0
   2352c:	eor	r2, r6, r2
   23530:	orrs	r0, r0, r2
   23534:	bne	23638 <main@@Base+0xd594>
   23538:	add	r0, r1, #24
   2353c:	sub	r6, r8, r0
   23540:	cmp	r6, #8
   23544:	mov	r2, r6
   23548:	movcs	r2, #8
   2354c:	sub	r3, r2, #3
   23550:	cmp	r3, #6
   23554:	bcs	23704 <main@@Base+0xd660>
   23558:	ldrb	r2, [r1, #26]
   2355c:	ldr	r4, [sp, #12]
   23560:	mov	r3, #0
   23564:	lsl	r2, r2, #8
   23568:	ldrb	r7, [r1, #25]
   2356c:	orr	r7, r2, r7, lsl #16
   23570:	cmp	r6, #4
   23574:	blt	23638 <main@@Base+0xd594>
   23578:	ldrb	r2, [r0]
   2357c:	orr	r2, r7, r2, lsl #24
   23580:	eor	r2, r2, ip
   23584:	orrs	r2, r3, r2
   23588:	bne	23638 <main@@Base+0xd594>
   2358c:	ldrb	r2, [r1, #27]
   23590:	mov	r6, r0
   23594:	cmp	r2, #46	; 0x2e
   23598:	addeq	r6, r1, #28
   2359c:	cmp	r6, r0
   235a0:	beq	23638 <main@@Base+0xd594>
   235a4:	sub	r0, r8, r6
   235a8:	cmp	r0, #8
   235ac:	movcs	r0, #8
   235b0:	sub	r0, r0, #1
   235b4:	cmp	r0, #7
   235b8:	bhi	23724 <main@@Base+0xd680>
   235bc:	ldrb	r0, [r6]
   235c0:	cmp	r0, #120	; 0x78
   235c4:	bne	23724 <main@@Base+0xd680>
   235c8:	ldr	r0, [sp, #20]
   235cc:	mov	r1, r6
   235d0:	mov	r2, r8
   235d4:	mov	r3, #1
   235d8:	str	r0, [sp]
   235dc:	ldr	r0, [sp, #24]
   235e0:	bl	371c8 <flatcc_json_parser_match_constant@@Base>
   235e4:	cmp	r0, r6
   235e8:	mov	r1, r6
   235ec:	beq	23638 <main@@Base+0xd594>
   235f0:	ldr	r2, [sp, #16]
   235f4:	mov	r1, #0
   235f8:	str	r1, [r2]
   235fc:	str	r1, [r2, #4]
   23600:	str	r1, [r4]
   23604:	mov	r1, r0
   23608:	mov	r0, r1
   2360c:	sub	sp, fp, #28
   23610:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23614:	mov	r3, #0
   23618:	cmp	r2, #1
   2361c:	mov	r7, #0
   23620:	beq	22c24 <main@@Base+0xcb80>
   23624:	b	23638 <main@@Base+0xd594>
   23628:	mov	r3, #0
   2362c:	cmp	r2, #1
   23630:	mov	r7, #0
   23634:	beq	234c4 <main@@Base+0xd420>
   23638:	mov	r0, r1
   2363c:	sub	sp, fp, #28
   23640:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23644:	movw	r0, #25942	; 0x6556
   23648:	movw	r1, #25452	; 0x636c
   2364c:	movt	r0, #30052	; 0x7564
   23650:	movt	r1, #18798	; 0x496e
   23654:	eor	r0, sl, r0
   23658:	eor	r1, r6, r1
   2365c:	orrs	r0, r0, r1
   23660:	bne	236f4 <main@@Base+0xd650>
   23664:	add	r6, r7, #8
   23668:	sub	r1, r8, r6
   2366c:	cmp	r1, #8
   23670:	movcs	r1, #8
   23674:	sub	r0, r1, #2
   23678:	cmp	r0, #7
   2367c:	bcs	23744 <main@@Base+0xd6a0>
   23680:	ldrb	r0, [r7, #9]
   23684:	lsl	r1, r0, #16
   23688:	mov	r0, #0
   2368c:	ldrb	r2, [r6]
   23690:	orr	r1, r1, r2, lsl #24
   23694:	eor	r1, r1, #23855104	; 0x16c0000
   23698:	eor	r1, r1, #1610612736	; 0x60000000
   2369c:	orrs	r0, r0, r1
   236a0:	bne	236f4 <main@@Base+0xd650>
   236a4:	ldr	r0, [sp, #20]
   236a8:	mov	r1, r6
   236ac:	mov	r2, r8
   236b0:	mov	r3, #2
   236b4:	str	r0, [sp]
   236b8:	mov	r0, r4
   236bc:	bl	371c8 <flatcc_json_parser_match_constant@@Base>
   236c0:	cmp	r0, r6
   236c4:	mov	r1, r7
   236c8:	beq	23638 <main@@Base+0xd594>
   236cc:	mov	r2, #0
   236d0:	mov	r3, #0
   236d4:	mov	r1, r0
   236d8:	ldr	r0, [sp, #16]
   236dc:	strd	r2, [r0]
   236e0:	mov	r0, #0
   236e4:	str	r0, [r9]
   236e8:	mov	r0, r1
   236ec:	sub	sp, fp, #28
   236f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   236f4:	mov	r1, r7
   236f8:	mov	r0, r1
   236fc:	sub	sp, fp, #28
   23700:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23704:	ldr	r4, [sp, #12]
   23708:	mov	r3, #0
   2370c:	cmp	r2, #1
   23710:	beq	23734 <main@@Base+0xd690>
   23714:	cmp	r2, #2
   23718:	mov	r2, #0
   2371c:	beq	23568 <main@@Base+0xd4c4>
   23720:	b	23638 <main@@Base+0xd594>
   23724:	mov	r1, r6
   23728:	mov	r0, r1
   2372c:	sub	sp, fp, #28
   23730:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23734:	mov	r7, #0
   23738:	cmp	r6, #4
   2373c:	bge	23578 <main@@Base+0xd4d4>
   23740:	b	23638 <main@@Base+0xd594>
   23744:	cmp	r1, #1
   23748:	mov	r0, #0
   2374c:	mov	r1, #0
   23750:	beq	2368c <main@@Base+0xd5e8>
   23754:	mov	r1, r7
   23758:	mov	r0, r1
   2375c:	sub	sp, fp, #28
   23760:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23764:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23768:	add	fp, sp, #28
   2376c:	sub	sp, sp, #44	; 0x2c
   23770:	mov	r6, r2
   23774:	ldr	r2, [fp, #8]
   23778:	mov	r5, r0
   2377c:	mov	r0, #0
   23780:	mov	sl, r3
   23784:	cmp	r1, r6
   23788:	strb	r0, [r2]
   2378c:	beq	237b0 <main@@Base+0xd70c>
   23790:	ldrb	r0, [r1]
   23794:	cmp	r0, #46	; 0x2e
   23798:	beq	237d8 <main@@Base+0xd734>
   2379c:	cmp	r0, #34	; 0x22
   237a0:	bne	23994 <main@@Base+0xd8f0>
   237a4:	mov	r0, #0
   237a8:	add	r1, r1, #1
   237ac:	str	r0, [r5, #12]
   237b0:	ldr	r0, [r5, #12]
   237b4:	cmp	r0, #0
   237b8:	beq	237f8 <main@@Base+0xd754>
   237bc:	mov	r7, r1
   237c0:	cmp	r7, r6
   237c4:	bne	2383c <main@@Base+0xd798>
   237c8:	mov	r4, r6
   237cc:	mov	r0, r4
   237d0:	sub	sp, fp, #28
   237d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   237d8:	mov	r0, r5
   237dc:	mov	r2, r6
   237e0:	mov	r3, #5
   237e4:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   237e8:	mov	r1, r0
   237ec:	ldr	r0, [r5, #12]
   237f0:	cmp	r0, #0
   237f4:	bne	237bc <main@@Base+0xd718>
   237f8:	sub	r0, r6, r1
   237fc:	cmp	r0, #2
   23800:	blt	23824 <main@@Base+0xd780>
   23804:	ldrb	r0, [r1]
   23808:	cmp	r0, #32
   2380c:	bhi	237bc <main@@Base+0xd718>
   23810:	bne	23824 <main@@Base+0xd780>
   23814:	mov	r7, r1
   23818:	ldrb	r0, [r7, #1]!
   2381c:	cmp	r0, #32
   23820:	bhi	23834 <main@@Base+0xd790>
   23824:	mov	r0, r5
   23828:	mov	r2, r6
   2382c:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   23830:	mov	r7, r0
   23834:	cmp	r7, r6
   23838:	beq	237c8 <main@@Base+0xd724>
   2383c:	add	r0, sl, #4
   23840:	mov	r2, #0
   23844:	add	r8, sp, #32
   23848:	add	r9, sp, #28
   2384c:	str	sl, [sp, #16]
   23850:	str	r0, [sp, #12]
   23854:	ldr	r4, [sl]
   23858:	mov	sl, r0
   2385c:	str	r2, [sp, #20]
   23860:	add	r0, sp, #24
   23864:	mov	r1, r7
   23868:	mov	r2, r6
   2386c:	mov	r3, r9
   23870:	str	r8, [sp]
   23874:	str	r0, [sp, #4]
   23878:	mov	r0, r5
   2387c:	blx	r4
   23880:	cmp	r0, r6
   23884:	beq	23960 <main@@Base+0xd8bc>
   23888:	mov	r4, r0
   2388c:	cmp	r0, r7
   23890:	bne	238a4 <main@@Base+0xd800>
   23894:	ldr	r4, [sl], #4
   23898:	cmp	r4, #0
   2389c:	bne	23860 <main@@Base+0xd7bc>
   238a0:	b	23970 <main@@Base+0xd8cc>
   238a4:	ldr	r2, [sp, #28]
   238a8:	ldr	r0, [sp, #32]
   238ac:	ldr	r1, [sp, #36]	; 0x24
   238b0:	cmp	r2, #0
   238b4:	beq	238dc <main@@Base+0xd838>
   238b8:	ldr	sl, [sp, #16]
   238bc:	subs	r2, r0, #129	; 0x81
   238c0:	sbcs	r1, r1, #0
   238c4:	bcc	23910 <main@@Base+0xd86c>
   238c8:	mov	r0, r5
   238cc:	mov	r1, r4
   238d0:	mov	r2, r6
   238d4:	mov	r3, #8
   238d8:	b	238fc <main@@Base+0xd858>
   238dc:	ldr	sl, [sp, #16]
   238e0:	subs	r2, r0, #128	; 0x80
   238e4:	sbcs	r1, r1, #0
   238e8:	bcc	23924 <main@@Base+0xd880>
   238ec:	mov	r0, r5
   238f0:	mov	r1, r4
   238f4:	mov	r2, r6
   238f8:	mov	r3, #7
   238fc:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   23900:	ldr	r2, [sp, #20]
   23904:	cmp	r0, r6
   23908:	bne	23934 <main@@Base+0xd890>
   2390c:	b	23960 <main@@Base+0xd8bc>
   23910:	rsb	r2, r0, #0
   23914:	mov	r0, r4
   23918:	cmp	r0, r6
   2391c:	bne	23934 <main@@Base+0xd890>
   23920:	b	23960 <main@@Base+0xd8bc>
   23924:	mov	r2, r0
   23928:	mov	r0, r4
   2392c:	cmp	r0, r6
   23930:	beq	23960 <main@@Base+0xd8bc>
   23934:	ldr	r0, [fp, #8]
   23938:	mov	r7, r4
   2393c:	mov	r1, r0
   23940:	ldrb	r0, [r0]
   23944:	add	r0, r0, r2
   23948:	strb	r0, [r1]
   2394c:	ldr	r0, [sp, #24]
   23950:	cmp	r0, #0
   23954:	ldr	r0, [sp, #12]
   23958:	bne	23854 <main@@Base+0xd7b0>
   2395c:	b	237cc <main@@Base+0xd728>
   23960:	mov	r4, r6
   23964:	mov	r0, r4
   23968:	sub	sp, fp, #28
   2396c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23970:	mov	r0, r5
   23974:	mov	r1, r7
   23978:	mov	r2, r6
   2397c:	mov	r3, #23
   23980:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   23984:	mov	r4, r0
   23988:	mov	r0, r4
   2398c:	sub	sp, fp, #28
   23990:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23994:	mov	r0, #1
   23998:	str	r0, [r5, #12]
   2399c:	ldr	r0, [r5, #12]
   239a0:	cmp	r0, #0
   239a4:	bne	237bc <main@@Base+0xd718>
   239a8:	b	237f8 <main@@Base+0xd754>
   239ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   239b0:	add	fp, sp, #28
   239b4:	sub	sp, sp, #44	; 0x2c
   239b8:	mov	r6, r2
   239bc:	ldr	r2, [fp, #8]
   239c0:	mov	r5, r0
   239c4:	mov	r0, #0
   239c8:	mov	r8, r3
   239cc:	cmp	r1, r6
   239d0:	strb	r0, [r2]
   239d4:	beq	239f8 <main@@Base+0xd954>
   239d8:	ldrb	r0, [r1]
   239dc:	cmp	r0, #46	; 0x2e
   239e0:	beq	23a20 <main@@Base+0xd97c>
   239e4:	cmp	r0, #34	; 0x22
   239e8:	bne	23bc8 <main@@Base+0xdb24>
   239ec:	mov	r0, #0
   239f0:	add	r1, r1, #1
   239f4:	str	r0, [r5, #12]
   239f8:	ldr	r0, [r5, #12]
   239fc:	cmp	r0, #0
   23a00:	beq	23a40 <main@@Base+0xd99c>
   23a04:	mov	r7, r1
   23a08:	cmp	r7, r6
   23a0c:	bne	23a84 <main@@Base+0xd9e0>
   23a10:	mov	r4, r6
   23a14:	mov	r0, r4
   23a18:	sub	sp, fp, #28
   23a1c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23a20:	mov	r0, r5
   23a24:	mov	r2, r6
   23a28:	mov	r3, #5
   23a2c:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   23a30:	mov	r1, r0
   23a34:	ldr	r0, [r5, #12]
   23a38:	cmp	r0, #0
   23a3c:	bne	23a04 <main@@Base+0xd960>
   23a40:	sub	r0, r6, r1
   23a44:	cmp	r0, #2
   23a48:	blt	23a6c <main@@Base+0xd9c8>
   23a4c:	ldrb	r0, [r1]
   23a50:	cmp	r0, #32
   23a54:	bhi	23a04 <main@@Base+0xd960>
   23a58:	bne	23a6c <main@@Base+0xd9c8>
   23a5c:	mov	r7, r1
   23a60:	ldrb	r0, [r7, #1]!
   23a64:	cmp	r0, #32
   23a68:	bhi	23a7c <main@@Base+0xd9d8>
   23a6c:	mov	r0, r5
   23a70:	mov	r2, r6
   23a74:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   23a78:	mov	r7, r0
   23a7c:	cmp	r7, r6
   23a80:	beq	23a10 <main@@Base+0xd96c>
   23a84:	add	r0, r8, #4
   23a88:	mov	r1, #0
   23a8c:	add	sl, sp, #32
   23a90:	add	r9, sp, #28
   23a94:	str	r8, [sp, #16]
   23a98:	str	r1, [sp, #20]
   23a9c:	str	r0, [sp, #12]
   23aa0:	ldr	r4, [r8]
   23aa4:	mov	r8, r0
   23aa8:	add	r0, sp, #24
   23aac:	mov	r1, r7
   23ab0:	mov	r2, r6
   23ab4:	mov	r3, r9
   23ab8:	str	sl, [sp]
   23abc:	str	r0, [sp, #4]
   23ac0:	mov	r0, r5
   23ac4:	blx	r4
   23ac8:	cmp	r0, r6
   23acc:	beq	23b94 <main@@Base+0xdaf0>
   23ad0:	mov	r4, r0
   23ad4:	cmp	r0, r7
   23ad8:	bne	23aec <main@@Base+0xda48>
   23adc:	ldr	r4, [r8], #4
   23ae0:	cmp	r4, #0
   23ae4:	bne	23aa8 <main@@Base+0xda04>
   23ae8:	b	23ba4 <main@@Base+0xdb00>
   23aec:	ldr	r0, [sp, #28]
   23af0:	cmp	r0, #0
   23af4:	beq	23b1c <main@@Base+0xda78>
   23af8:	mov	r0, r5
   23afc:	mov	r1, r4
   23b00:	mov	r2, r6
   23b04:	mov	r3, #8
   23b08:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   23b0c:	ldr	r8, [sp, #16]
   23b10:	cmp	r0, r6
   23b14:	bne	23b64 <main@@Base+0xdac0>
   23b18:	b	23b94 <main@@Base+0xdaf0>
   23b1c:	ldr	r0, [sp, #32]
   23b20:	ldr	r1, [sp, #36]	; 0x24
   23b24:	ldr	r8, [sp, #16]
   23b28:	subs	r2, r0, #256	; 0x100
   23b2c:	sbcs	r1, r1, #0
   23b30:	bcc	23b54 <main@@Base+0xdab0>
   23b34:	mov	r0, r5
   23b38:	mov	r1, r4
   23b3c:	mov	r2, r6
   23b40:	mov	r3, #7
   23b44:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   23b48:	cmp	r0, r6
   23b4c:	bne	23b64 <main@@Base+0xdac0>
   23b50:	b	23b94 <main@@Base+0xdaf0>
   23b54:	str	r0, [sp, #20]
   23b58:	mov	r0, r4
   23b5c:	cmp	r0, r6
   23b60:	beq	23b94 <main@@Base+0xdaf0>
   23b64:	ldr	r0, [fp, #8]
   23b68:	ldr	r2, [sp, #20]
   23b6c:	mov	r7, r4
   23b70:	mov	r1, r0
   23b74:	ldrb	r0, [r0]
   23b78:	add	r0, r0, r2
   23b7c:	strb	r0, [r1]
   23b80:	ldr	r0, [sp, #24]
   23b84:	cmp	r0, #0
   23b88:	ldr	r0, [sp, #12]
   23b8c:	bne	23aa0 <main@@Base+0xd9fc>
   23b90:	b	23a14 <main@@Base+0xd970>
   23b94:	mov	r4, r6
   23b98:	mov	r0, r4
   23b9c:	sub	sp, fp, #28
   23ba0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23ba4:	mov	r0, r5
   23ba8:	mov	r1, r7
   23bac:	mov	r2, r6
   23bb0:	mov	r3, #23
   23bb4:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   23bb8:	mov	r4, r0
   23bbc:	mov	r0, r4
   23bc0:	sub	sp, fp, #28
   23bc4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23bc8:	mov	r0, #1
   23bcc:	str	r0, [r5, #12]
   23bd0:	ldr	r0, [r5, #12]
   23bd4:	cmp	r0, #0
   23bd8:	bne	23a04 <main@@Base+0xd960>
   23bdc:	b	23a40 <main@@Base+0xd99c>
   23be0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23be4:	add	fp, sp, #28
   23be8:	sub	sp, sp, #44	; 0x2c
   23bec:	mov	r6, r2
   23bf0:	ldr	r2, [fp, #8]
   23bf4:	mov	r5, r0
   23bf8:	mov	r0, #0
   23bfc:	mov	sl, r3
   23c00:	cmp	r1, r6
   23c04:	strh	r0, [r2]
   23c08:	beq	23c2c <main@@Base+0xdb88>
   23c0c:	ldrb	r0, [r1]
   23c10:	cmp	r0, #46	; 0x2e
   23c14:	beq	23c54 <main@@Base+0xdbb0>
   23c18:	cmp	r0, #34	; 0x22
   23c1c:	bne	23e14 <main@@Base+0xdd70>
   23c20:	mov	r0, #0
   23c24:	add	r1, r1, #1
   23c28:	str	r0, [r5, #12]
   23c2c:	ldr	r0, [r5, #12]
   23c30:	cmp	r0, #0
   23c34:	beq	23c74 <main@@Base+0xdbd0>
   23c38:	mov	r7, r1
   23c3c:	cmp	r7, r6
   23c40:	bne	23cb8 <main@@Base+0xdc14>
   23c44:	mov	r4, r6
   23c48:	mov	r0, r4
   23c4c:	sub	sp, fp, #28
   23c50:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23c54:	mov	r0, r5
   23c58:	mov	r2, r6
   23c5c:	mov	r3, #5
   23c60:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   23c64:	mov	r1, r0
   23c68:	ldr	r0, [r5, #12]
   23c6c:	cmp	r0, #0
   23c70:	bne	23c38 <main@@Base+0xdb94>
   23c74:	sub	r0, r6, r1
   23c78:	cmp	r0, #2
   23c7c:	blt	23ca0 <main@@Base+0xdbfc>
   23c80:	ldrb	r0, [r1]
   23c84:	cmp	r0, #32
   23c88:	bhi	23c38 <main@@Base+0xdb94>
   23c8c:	bne	23ca0 <main@@Base+0xdbfc>
   23c90:	mov	r7, r1
   23c94:	ldrb	r0, [r7, #1]!
   23c98:	cmp	r0, #32
   23c9c:	bhi	23cb0 <main@@Base+0xdc0c>
   23ca0:	mov	r0, r5
   23ca4:	mov	r2, r6
   23ca8:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   23cac:	mov	r7, r0
   23cb0:	cmp	r7, r6
   23cb4:	beq	23c44 <main@@Base+0xdba0>
   23cb8:	add	r0, sl, #4
   23cbc:	mov	r2, #0
   23cc0:	add	r8, sp, #32
   23cc4:	add	r9, sp, #28
   23cc8:	str	sl, [sp, #16]
   23ccc:	str	r0, [sp, #12]
   23cd0:	ldr	r4, [sl]
   23cd4:	mov	sl, r0
   23cd8:	str	r2, [sp, #20]
   23cdc:	add	r0, sp, #24
   23ce0:	mov	r1, r7
   23ce4:	mov	r2, r6
   23ce8:	mov	r3, r9
   23cec:	str	r8, [sp]
   23cf0:	str	r0, [sp, #4]
   23cf4:	mov	r0, r5
   23cf8:	blx	r4
   23cfc:	cmp	r0, r6
   23d00:	beq	23de0 <main@@Base+0xdd3c>
   23d04:	mov	r4, r0
   23d08:	cmp	r0, r7
   23d0c:	bne	23d20 <main@@Base+0xdc7c>
   23d10:	ldr	r4, [sl], #4
   23d14:	cmp	r4, #0
   23d18:	bne	23cdc <main@@Base+0xdc38>
   23d1c:	b	23df0 <main@@Base+0xdd4c>
   23d20:	ldr	r2, [sp, #28]
   23d24:	ldr	r0, [sp, #32]
   23d28:	ldr	r1, [sp, #36]	; 0x24
   23d2c:	cmp	r2, #0
   23d30:	beq	23d5c <main@@Base+0xdcb8>
   23d34:	ldr	sl, [sp, #16]
   23d38:	movw	r2, #32769	; 0x8001
   23d3c:	subs	r2, r0, r2
   23d40:	sbcs	r1, r1, #0
   23d44:	bcc	23d90 <main@@Base+0xdcec>
   23d48:	mov	r0, r5
   23d4c:	mov	r1, r4
   23d50:	mov	r2, r6
   23d54:	mov	r3, #8
   23d58:	b	23d7c <main@@Base+0xdcd8>
   23d5c:	ldr	sl, [sp, #16]
   23d60:	subs	r2, r0, #32768	; 0x8000
   23d64:	sbcs	r1, r1, #0
   23d68:	bcc	23da4 <main@@Base+0xdd00>
   23d6c:	mov	r0, r5
   23d70:	mov	r1, r4
   23d74:	mov	r2, r6
   23d78:	mov	r3, #7
   23d7c:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   23d80:	ldr	r2, [sp, #20]
   23d84:	cmp	r0, r6
   23d88:	bne	23db4 <main@@Base+0xdd10>
   23d8c:	b	23de0 <main@@Base+0xdd3c>
   23d90:	rsb	r2, r0, #0
   23d94:	mov	r0, r4
   23d98:	cmp	r0, r6
   23d9c:	bne	23db4 <main@@Base+0xdd10>
   23da0:	b	23de0 <main@@Base+0xdd3c>
   23da4:	mov	r2, r0
   23da8:	mov	r0, r4
   23dac:	cmp	r0, r6
   23db0:	beq	23de0 <main@@Base+0xdd3c>
   23db4:	ldr	r0, [fp, #8]
   23db8:	mov	r7, r4
   23dbc:	mov	r1, r0
   23dc0:	ldrh	r0, [r0]
   23dc4:	add	r0, r0, r2
   23dc8:	strh	r0, [r1]
   23dcc:	ldr	r0, [sp, #24]
   23dd0:	cmp	r0, #0
   23dd4:	ldr	r0, [sp, #12]
   23dd8:	bne	23cd0 <main@@Base+0xdc2c>
   23ddc:	b	23c48 <main@@Base+0xdba4>
   23de0:	mov	r4, r6
   23de4:	mov	r0, r4
   23de8:	sub	sp, fp, #28
   23dec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23df0:	mov	r0, r5
   23df4:	mov	r1, r7
   23df8:	mov	r2, r6
   23dfc:	mov	r3, #23
   23e00:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   23e04:	mov	r4, r0
   23e08:	mov	r0, r4
   23e0c:	sub	sp, fp, #28
   23e10:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23e14:	mov	r0, #1
   23e18:	str	r0, [r5, #12]
   23e1c:	ldr	r0, [r5, #12]
   23e20:	cmp	r0, #0
   23e24:	bne	23c38 <main@@Base+0xdb94>
   23e28:	b	23c74 <main@@Base+0xdbd0>
   23e2c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23e30:	add	fp, sp, #28
   23e34:	sub	sp, sp, #28
   23e38:	mov	r7, r2
   23e3c:	mov	r5, r0
   23e40:	cmp	r1, r2
   23e44:	beq	23ebc <main@@Base+0xde18>
   23e48:	ldrb	r0, [r1]
   23e4c:	cmp	r0, #123	; 0x7b
   23e50:	bne	23ebc <main@@Base+0xde18>
   23e54:	add	r2, r1, #1
   23e58:	mov	sl, r3
   23e5c:	sub	r0, r7, r2
   23e60:	cmp	r0, #2
   23e64:	blt	23eec <main@@Base+0xde48>
   23e68:	ldrb	r0, [r2]
   23e6c:	cmp	r0, #32
   23e70:	bls	23edc <main@@Base+0xde38>
   23e74:	mov	r1, r2
   23e78:	cmp	r1, r7
   23e7c:	mov	r2, r7
   23e80:	beq	23f0c <main@@Base+0xde68>
   23e84:	ldrb	r0, [r1]
   23e88:	cmp	r0, #125	; 0x7d
   23e8c:	bne	23ed4 <main@@Base+0xde30>
   23e90:	add	r2, r1, #1
   23e94:	sub	r0, r7, r2
   23e98:	cmp	r0, #2
   23e9c:	blt	2460c <main@@Base+0xe568>
   23ea0:	ldrb	r0, [r2]
   23ea4:	cmp	r0, #32
   23ea8:	bls	245fc <main@@Base+0xe558>
   23eac:	mov	r1, r2
   23eb0:	mov	r0, r1
   23eb4:	sub	sp, fp, #28
   23eb8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   23ebc:	mov	r0, r5
   23ec0:	mov	r2, r7
   23ec4:	mov	r3, #21
   23ec8:	sub	sp, fp, #28
   23ecc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   23ed0:	b	36a9c <flatcc_json_parser_set_error@@Base>
   23ed4:	mov	r2, r1
   23ed8:	b	23f0c <main@@Base+0xde68>
   23edc:	bne	23eec <main@@Base+0xde48>
   23ee0:	ldrb	r0, [r1, #2]!
   23ee4:	cmp	r0, #32
   23ee8:	bhi	23f00 <main@@Base+0xde5c>
   23eec:	mov	r1, r2
   23ef0:	mov	r0, r5
   23ef4:	mov	r2, r7
   23ef8:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   23efc:	mov	r1, r0
   23f00:	cmp	r1, r7
   23f04:	mov	r2, r7
   23f08:	bne	23e84 <main@@Base+0xdde0>
   23f0c:	movw	r0, #388	; 0x184
   23f10:	mov	r8, #1627389952	; 0x61000000
   23f14:	mov	r9, #0
   23f18:	movt	r0, #6
   23f1c:	add	r0, r0, #60	; 0x3c
   23f20:	str	r0, [sp, #4]
   23f24:	cmp	r2, r7
   23f28:	mov	r4, r7
   23f2c:	beq	23f78 <main@@Base+0xded4>
   23f30:	ldrb	r0, [r2]
   23f34:	cmp	r0, #46	; 0x2e
   23f38:	beq	23f50 <main@@Base+0xdeac>
   23f3c:	cmp	r0, #34	; 0x22
   23f40:	bne	23f6c <main@@Base+0xdec8>
   23f44:	str	r9, [r5, #12]
   23f48:	add	r4, r2, #1
   23f4c:	b	23f78 <main@@Base+0xded4>
   23f50:	mov	r1, r2
   23f54:	mov	r0, r5
   23f58:	mov	r2, r7
   23f5c:	mov	r3, #5
   23f60:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   23f64:	mov	r4, r0
   23f68:	b	23f78 <main@@Base+0xded4>
   23f6c:	mov	r0, #1
   23f70:	mov	r4, r2
   23f74:	str	r0, [r5, #12]
   23f78:	sub	r0, r7, r4
   23f7c:	mov	r1, #8
   23f80:	cmp	r0, #8
   23f84:	movcc	r1, r0
   23f88:	sub	r1, r1, #1
   23f8c:	cmp	r1, #7
   23f90:	bhi	24470 <main@@Base+0xe3cc>
   23f94:	ldrb	r1, [r4]
   23f98:	teq	r8, r1, lsl #24
   23f9c:	beq	23ff4 <main@@Base+0xdf50>
   23fa0:	lsl	r1, r1, #24
   23fa4:	teq	r1, #1644167168	; 0x62000000
   23fa8:	bne	24470 <main@@Base+0xe3cc>
   23fac:	cmp	r0, #2
   23fb0:	mov	r6, r4
   23fb4:	blt	241c4 <main@@Base+0xe120>
   23fb8:	mov	r1, r4
   23fbc:	ldr	r2, [r5, #12]
   23fc0:	ldrb	r0, [r1, #1]!
   23fc4:	cmp	r2, #0
   23fc8:	beq	2403c <main@@Base+0xdf98>
   23fcc:	cmp	r0, #33	; 0x21
   23fd0:	bcc	23fe0 <main@@Base+0xdf3c>
   23fd4:	cmp	r0, #58	; 0x3a
   23fd8:	mov	r6, r4
   23fdc:	bne	241c4 <main@@Base+0xe120>
   23fe0:	str	r9, [r5, #12]
   23fe4:	sub	r0, r7, r1
   23fe8:	cmp	r0, #2
   23fec:	bge	24058 <main@@Base+0xdfb4>
   23ff0:	b	240c0 <main@@Base+0xe01c>
   23ff4:	cmp	r0, #2
   23ff8:	mov	r6, r4
   23ffc:	blt	243e0 <main@@Base+0xe33c>
   24000:	mov	r1, r4
   24004:	ldr	r2, [r5, #12]
   24008:	ldrb	r0, [r1, #1]!
   2400c:	cmp	r2, #0
   24010:	beq	24074 <main@@Base+0xdfd0>
   24014:	cmp	r0, #33	; 0x21
   24018:	bcc	24028 <main@@Base+0xdf84>
   2401c:	cmp	r0, #58	; 0x3a
   24020:	mov	r6, r4
   24024:	bne	243e0 <main@@Base+0xe33c>
   24028:	str	r9, [r5, #12]
   2402c:	sub	r0, r7, r1
   24030:	cmp	r0, #2
   24034:	bge	24090 <main@@Base+0xdfec>
   24038:	b	2413c <main@@Base+0xe098>
   2403c:	cmp	r0, #34	; 0x22
   24040:	mov	r6, r4
   24044:	bne	241c4 <main@@Base+0xe120>
   24048:	add	r1, r4, #2
   2404c:	sub	r0, r7, r1
   24050:	cmp	r0, #2
   24054:	blt	240c0 <main@@Base+0xe01c>
   24058:	ldrb	r0, [r1]
   2405c:	cmp	r0, #32
   24060:	bls	240ac <main@@Base+0xe008>
   24064:	mov	r6, r1
   24068:	cmp	r6, r7
   2406c:	bne	240d8 <main@@Base+0xe034>
   24070:	b	24110 <main@@Base+0xe06c>
   24074:	cmp	r0, #34	; 0x22
   24078:	mov	r6, r4
   2407c:	bne	243e0 <main@@Base+0xe33c>
   24080:	add	r1, r4, #2
   24084:	sub	r0, r7, r1
   24088:	cmp	r0, #2
   2408c:	blt	2413c <main@@Base+0xe098>
   24090:	ldrb	r0, [r1]
   24094:	cmp	r0, #32
   24098:	bls	24128 <main@@Base+0xe084>
   2409c:	mov	r6, r1
   240a0:	cmp	r6, r7
   240a4:	bne	24154 <main@@Base+0xe0b0>
   240a8:	b	2418c <main@@Base+0xe0e8>
   240ac:	bne	240c0 <main@@Base+0xe01c>
   240b0:	mov	r6, r1
   240b4:	ldrb	r0, [r6, #1]!
   240b8:	cmp	r0, #32
   240bc:	bhi	240d0 <main@@Base+0xe02c>
   240c0:	mov	r0, r5
   240c4:	mov	r2, r7
   240c8:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   240cc:	mov	r6, r0
   240d0:	cmp	r6, r7
   240d4:	beq	24110 <main@@Base+0xe06c>
   240d8:	ldrb	r0, [r6]
   240dc:	cmp	r0, #58	; 0x3a
   240e0:	bne	24110 <main@@Base+0xe06c>
   240e4:	add	r1, r6, #1
   240e8:	sub	r0, r7, r1
   240ec:	cmp	r0, #2
   240f0:	blt	241b4 <main@@Base+0xe110>
   240f4:	ldrb	r0, [r1]
   240f8:	cmp	r0, #32
   240fc:	bls	241a4 <main@@Base+0xe100>
   24100:	mov	r6, r1
   24104:	cmp	r4, r6
   24108:	bne	241cc <main@@Base+0xe128>
   2410c:	b	24470 <main@@Base+0xe3cc>
   24110:	mov	r0, r5
   24114:	mov	r1, r6
   24118:	mov	r2, r7
   2411c:	mov	r3, #4
   24120:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   24124:	b	241c0 <main@@Base+0xe11c>
   24128:	bne	2413c <main@@Base+0xe098>
   2412c:	mov	r6, r1
   24130:	ldrb	r0, [r6, #1]!
   24134:	cmp	r0, #32
   24138:	bhi	2414c <main@@Base+0xe0a8>
   2413c:	mov	r0, r5
   24140:	mov	r2, r7
   24144:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   24148:	mov	r6, r0
   2414c:	cmp	r6, r7
   24150:	beq	2418c <main@@Base+0xe0e8>
   24154:	ldrb	r0, [r6]
   24158:	cmp	r0, #58	; 0x3a
   2415c:	bne	2418c <main@@Base+0xe0e8>
   24160:	add	r1, r6, #1
   24164:	sub	r0, r7, r1
   24168:	cmp	r0, #2
   2416c:	blt	243d0 <main@@Base+0xe32c>
   24170:	ldrb	r0, [r1]
   24174:	cmp	r0, #32
   24178:	bls	243c0 <main@@Base+0xe31c>
   2417c:	mov	r6, r1
   24180:	cmp	r4, r6
   24184:	bne	243e8 <main@@Base+0xe344>
   24188:	b	24470 <main@@Base+0xe3cc>
   2418c:	mov	r0, r5
   24190:	mov	r1, r6
   24194:	mov	r2, r7
   24198:	mov	r3, #4
   2419c:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   241a0:	b	243dc <main@@Base+0xe338>
   241a4:	bne	241b4 <main@@Base+0xe110>
   241a8:	ldrb	r0, [r6, #2]!
   241ac:	cmp	r0, #32
   241b0:	bhi	241c4 <main@@Base+0xe120>
   241b4:	mov	r0, r5
   241b8:	mov	r2, r7
   241bc:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   241c0:	mov	r6, r0
   241c4:	cmp	r4, r6
   241c8:	beq	24470 <main@@Base+0xe3cc>
   241cc:	mov	r4, #0
   241d0:	cmp	r6, r7
   241d4:	str	r4, [sp, #20]
   241d8:	str	r4, [sp, #16]
   241dc:	strb	r4, [sp, #10]
   241e0:	str	r4, [sp, #12]
   241e4:	beq	24250 <main@@Base+0xe1ac>
   241e8:	add	r0, sp, #16
   241ec:	mov	r1, r6
   241f0:	mov	r2, r7
   241f4:	add	r3, sp, #12
   241f8:	str	r0, [sp]
   241fc:	mov	r0, r5
   24200:	bl	38fa8 <flatcc_json_parser_integer@@Base>
   24204:	cmp	r0, r6
   24208:	beq	24314 <main@@Base+0xe270>
   2420c:	ldr	r3, [sp, #12]
   24210:	mov	r1, r0
   24214:	ldr	r0, [sp, #16]
   24218:	ldr	r2, [sp, #20]
   2421c:	cmp	r3, #0
   24220:	beq	24324 <main@@Base+0xe280>
   24224:	subs	r3, r0, #129	; 0x81
   24228:	sbcs	r2, r2, #0
   2422c:	bcc	24350 <main@@Base+0xe2ac>
   24230:	mov	r0, r5
   24234:	mov	r2, r7
   24238:	mov	r3, #8
   2423c:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   24240:	mov	r1, r0
   24244:	cmp	r6, r1
   24248:	bne	2425c <main@@Base+0xe1b8>
   2424c:	b	24374 <main@@Base+0xe2d0>
   24250:	mov	r1, r7
   24254:	cmp	r6, r1
   24258:	beq	24374 <main@@Base+0xe2d0>
   2425c:	strb	r4, [sl, #2]
   24260:	sub	r0, r7, r1
   24264:	cmp	r0, #2
   24268:	blt	24490 <main@@Base+0xe3ec>
   2426c:	ldrb	r0, [r1]
   24270:	cmp	r0, #32
   24274:	bls	242c8 <main@@Base+0xe224>
   24278:	mov	r2, r1
   2427c:	cmp	r2, r7
   24280:	beq	24580 <main@@Base+0xe4dc>
   24284:	ldrb	r0, [r2]
   24288:	cmp	r0, #44	; 0x2c
   2428c:	bne	24590 <main@@Base+0xe4ec>
   24290:	add	r1, r2, #1
   24294:	sub	r0, r7, r1
   24298:	cmp	r0, #2
   2429c:	blt	242f8 <main@@Base+0xe254>
   242a0:	ldrb	r0, [r1]
   242a4:	cmp	r0, #32
   242a8:	bls	242e8 <main@@Base+0xe244>
   242ac:	mov	r2, r1
   242b0:	cmp	r2, r7
   242b4:	beq	245c4 <main@@Base+0xe520>
   242b8:	ldrb	r0, [r2]
   242bc:	cmp	r0, #125	; 0x7d
   242c0:	bne	23f24 <main@@Base+0xde80>
   242c4:	b	245d0 <main@@Base+0xe52c>
   242c8:	bne	24490 <main@@Base+0xe3ec>
   242cc:	mov	r2, r1
   242d0:	ldrb	r0, [r2, #1]!
   242d4:	cmp	r0, #32
   242d8:	bls	24490 <main@@Base+0xe3ec>
   242dc:	cmp	r2, r7
   242e0:	bne	24284 <main@@Base+0xe1e0>
   242e4:	b	24580 <main@@Base+0xe4dc>
   242e8:	bne	242f8 <main@@Base+0xe254>
   242ec:	ldrb	r0, [r2, #2]!
   242f0:	cmp	r0, #32
   242f4:	bhi	24308 <main@@Base+0xe264>
   242f8:	mov	r0, r5
   242fc:	mov	r2, r7
   24300:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   24304:	mov	r2, r0
   24308:	cmp	r2, r7
   2430c:	bne	242b8 <main@@Base+0xe214>
   24310:	b	245c4 <main@@Base+0xe520>
   24314:	mov	r1, r6
   24318:	cmp	r6, r1
   2431c:	bne	2425c <main@@Base+0xe1b8>
   24320:	b	24374 <main@@Base+0xe2d0>
   24324:	subs	r3, r0, #128	; 0x80
   24328:	sbcs	r2, r2, #0
   2432c:	bcc	24364 <main@@Base+0xe2c0>
   24330:	mov	r0, r5
   24334:	mov	r2, r7
   24338:	mov	r3, #7
   2433c:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   24340:	mov	r1, r0
   24344:	cmp	r6, r1
   24348:	bne	2425c <main@@Base+0xe1b8>
   2434c:	b	24374 <main@@Base+0xe2d0>
   24350:	rsb	r4, r0, #0
   24354:	strb	r4, [sp, #10]
   24358:	cmp	r6, r1
   2435c:	bne	2425c <main@@Base+0xe1b8>
   24360:	b	24374 <main@@Base+0xe2d0>
   24364:	mov	r4, r0
   24368:	strb	r4, [sp, #10]
   2436c:	cmp	r6, r1
   24370:	bne	2425c <main@@Base+0xe1b8>
   24374:	add	r0, sp, #10
   24378:	mov	r1, r6
   2437c:	mov	r2, r7
   24380:	str	r0, [sp]
   24384:	movw	r0, #388	; 0x184
   24388:	movt	r0, #6
   2438c:	add	r3, r0, #48	; 0x30
   24390:	mov	r0, r5
   24394:	bl	23764 <main@@Base+0xd6c0>
   24398:	mov	r1, r0
   2439c:	cmp	r0, r6
   243a0:	cmpne	r1, r7
   243a4:	beq	24570 <main@@Base+0xe4cc>
   243a8:	ldrb	r4, [sp, #10]
   243ac:	strb	r4, [sl, #2]
   243b0:	sub	r0, r7, r1
   243b4:	cmp	r0, #2
   243b8:	blt	24490 <main@@Base+0xe3ec>
   243bc:	b	2426c <main@@Base+0xe1c8>
   243c0:	bne	243d0 <main@@Base+0xe32c>
   243c4:	ldrb	r0, [r6, #2]!
   243c8:	cmp	r0, #32
   243cc:	bhi	243e0 <main@@Base+0xe33c>
   243d0:	mov	r0, r5
   243d4:	mov	r2, r7
   243d8:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   243dc:	mov	r6, r0
   243e0:	cmp	r4, r6
   243e4:	beq	24470 <main@@Base+0xe3cc>
   243e8:	mov	r4, #0
   243ec:	cmp	r6, r7
   243f0:	str	r4, [sp, #20]
   243f4:	str	r4, [sp, #16]
   243f8:	strh	r4, [sp, #10]
   243fc:	str	r4, [sp, #12]
   24400:	beq	244ac <main@@Base+0xe408>
   24404:	add	r0, sp, #16
   24408:	mov	r1, r6
   2440c:	mov	r2, r7
   24410:	add	r3, sp, #12
   24414:	str	r0, [sp]
   24418:	mov	r0, r5
   2441c:	bl	38fa8 <flatcc_json_parser_integer@@Base>
   24420:	cmp	r0, r6
   24424:	beq	244cc <main@@Base+0xe428>
   24428:	ldr	r3, [sp, #12]
   2442c:	mov	r1, r0
   24430:	ldr	r0, [sp, #16]
   24434:	ldr	r2, [sp, #20]
   24438:	cmp	r3, #0
   2443c:	beq	2451c <main@@Base+0xe478>
   24440:	movw	r3, #32769	; 0x8001
   24444:	subs	r3, r0, r3
   24448:	sbcs	r2, r2, #0
   2444c:	bcc	24548 <main@@Base+0xe4a4>
   24450:	mov	r0, r5
   24454:	mov	r2, r7
   24458:	mov	r3, #8
   2445c:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   24460:	mov	r1, r0
   24464:	cmp	r6, r1
   24468:	bne	244b8 <main@@Base+0xe414>
   2446c:	b	244d8 <main@@Base+0xe434>
   24470:	mov	r0, r5
   24474:	mov	r1, r4
   24478:	mov	r2, r7
   2447c:	bl	373bc <flatcc_json_parser_unmatched_symbol@@Base>
   24480:	mov	r1, r0
   24484:	sub	r0, r7, r1
   24488:	cmp	r0, #2
   2448c:	bge	2426c <main@@Base+0xe1c8>
   24490:	mov	r0, r5
   24494:	mov	r2, r7
   24498:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   2449c:	mov	r2, r0
   244a0:	cmp	r2, r7
   244a4:	bne	24284 <main@@Base+0xe1e0>
   244a8:	b	24580 <main@@Base+0xe4dc>
   244ac:	mov	r1, r7
   244b0:	cmp	r6, r1
   244b4:	beq	244d8 <main@@Base+0xe434>
   244b8:	strh	r4, [sl]
   244bc:	sub	r0, r7, r1
   244c0:	cmp	r0, #2
   244c4:	bge	2426c <main@@Base+0xe1c8>
   244c8:	b	24490 <main@@Base+0xe3ec>
   244cc:	mov	r1, r6
   244d0:	cmp	r6, r1
   244d4:	bne	244b8 <main@@Base+0xe414>
   244d8:	add	r0, sp, #10
   244dc:	mov	r1, r6
   244e0:	mov	r2, r7
   244e4:	str	r0, [sp]
   244e8:	mov	r0, r5
   244ec:	ldr	r3, [sp, #4]
   244f0:	bl	23be0 <main@@Base+0xdb3c>
   244f4:	mov	r1, r0
   244f8:	cmp	r0, r6
   244fc:	cmpne	r1, r7
   24500:	beq	24570 <main@@Base+0xe4cc>
   24504:	ldrh	r4, [sp, #10]
   24508:	strh	r4, [sl]
   2450c:	sub	r0, r7, r1
   24510:	cmp	r0, #2
   24514:	bge	2426c <main@@Base+0xe1c8>
   24518:	b	24490 <main@@Base+0xe3ec>
   2451c:	subs	r3, r0, #32768	; 0x8000
   24520:	sbcs	r2, r2, #0
   24524:	bcc	2455c <main@@Base+0xe4b8>
   24528:	mov	r0, r5
   2452c:	mov	r2, r7
   24530:	mov	r3, #7
   24534:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   24538:	mov	r1, r0
   2453c:	cmp	r6, r1
   24540:	bne	244b8 <main@@Base+0xe414>
   24544:	b	244d8 <main@@Base+0xe434>
   24548:	rsb	r4, r0, #0
   2454c:	strh	r4, [sp, #10]
   24550:	cmp	r6, r1
   24554:	bne	244b8 <main@@Base+0xe414>
   24558:	b	244d8 <main@@Base+0xe434>
   2455c:	mov	r4, r0
   24560:	strh	r4, [sp, #10]
   24564:	cmp	r6, r1
   24568:	bne	244b8 <main@@Base+0xe414>
   2456c:	b	244d8 <main@@Base+0xe434>
   24570:	mov	r0, r5
   24574:	mov	r2, r7
   24578:	mov	r3, #33	; 0x21
   2457c:	b	24634 <main@@Base+0xe590>
   24580:	mov	r1, r7
   24584:	mov	r0, r1
   24588:	sub	sp, fp, #28
   2458c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24590:	cmp	r0, #125	; 0x7d
   24594:	bne	24624 <main@@Base+0xe580>
   24598:	add	r3, r2, #1
   2459c:	sub	r0, r7, r3
   245a0:	cmp	r0, #2
   245a4:	blt	24650 <main@@Base+0xe5ac>
   245a8:	ldrb	r0, [r3]
   245ac:	cmp	r0, #32
   245b0:	bls	2463c <main@@Base+0xe598>
   245b4:	mov	r1, r3
   245b8:	mov	r0, r1
   245bc:	sub	sp, fp, #28
   245c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   245c4:	mov	r0, r5
   245c8:	mov	r1, r7
   245cc:	b	2462c <main@@Base+0xe588>
   245d0:	add	r3, r2, #1
   245d4:	sub	r0, r7, r3
   245d8:	cmp	r0, #2
   245dc:	blt	24650 <main@@Base+0xe5ac>
   245e0:	ldrb	r0, [r3]
   245e4:	cmp	r0, #32
   245e8:	bls	2463c <main@@Base+0xe598>
   245ec:	mov	r1, r3
   245f0:	mov	r0, r1
   245f4:	sub	sp, fp, #28
   245f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   245fc:	bne	2460c <main@@Base+0xe568>
   24600:	ldrb	r0, [r1, #2]!
   24604:	cmp	r0, #32
   24608:	bhi	24664 <main@@Base+0xe5c0>
   2460c:	mov	r1, r2
   24610:	mov	r0, r5
   24614:	mov	r2, r7
   24618:	sub	sp, fp, #28
   2461c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24620:	b	36b4c <flatcc_json_parser_space_ext@@Base>
   24624:	mov	r0, r5
   24628:	mov	r1, r2
   2462c:	mov	r2, r7
   24630:	mov	r3, #10
   24634:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   24638:	b	24660 <main@@Base+0xe5bc>
   2463c:	bne	24650 <main@@Base+0xe5ac>
   24640:	ldrb	r0, [r2, #2]!
   24644:	mov	r1, r2
   24648:	cmp	r0, #32
   2464c:	bhi	24664 <main@@Base+0xe5c0>
   24650:	mov	r0, r5
   24654:	mov	r1, r3
   24658:	mov	r2, r7
   2465c:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   24660:	mov	r1, r0
   24664:	mov	r0, r1
   24668:	sub	sp, fp, #28
   2466c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24670:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24674:	add	fp, sp, #28
   24678:	sub	sp, sp, #36	; 0x24
   2467c:	ldr	r5, [fp, #8]
   24680:	mov	r8, r0
   24684:	mov	r0, #0
   24688:	mov	sl, r2
   2468c:	mov	r4, r1
   24690:	cmp	r3, #4
   24694:	str	r0, [r5]
   24698:	bhi	246fc <main@@Base+0xe658>
   2469c:	add	r0, pc, #0
   246a0:	ldr	pc, [r0, r3, lsl #2]
   246a4:			; <UNDEFINED> instruction: 0x000246b8
   246a8:	andeq	r4, r2, r4, lsr #14
   246ac:	andeq	r4, r2, ip, lsr r7
   246b0:	muleq	r2, ip, r7
   246b4:	strdeq	r4, [r2], -ip
   246b8:	sub	r0, sl, r4
   246bc:	cmp	r0, #4
   246c0:	blt	246e0 <main@@Base+0xe63c>
   246c4:	movw	r1, #59110	; 0xe6e6
   246c8:	mov	r0, r4
   246cc:	mov	r2, #4
   246d0:	movt	r1, #4
   246d4:	bl	14ebc <bcmp@plt>
   246d8:	cmp	r0, #0
   246dc:	beq	248b0 <main@@Base+0xe80c>
   246e0:	mov	r0, r8
   246e4:	mov	r1, r4
   246e8:	mov	r2, sl
   246ec:	mov	r3, #26
   246f0:	sub	sp, fp, #28
   246f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   246f8:	b	36a9c <flatcc_json_parser_set_error@@Base>
   246fc:	ldrb	r0, [r8, #8]
   24700:	tst	r0, #1
   24704:	bne	24898 <main@@Base+0xe7f4>
   24708:	mov	r0, r8
   2470c:	mov	r1, r4
   24710:	mov	r2, sl
   24714:	mov	r3, #15
   24718:	sub	sp, fp, #28
   2471c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   24720:	b	36a9c <flatcc_json_parser_set_error@@Base>
   24724:	mov	r0, r8
   24728:	mov	r1, r4
   2472c:	mov	r2, sl
   24730:	mov	r3, r5
   24734:	bl	16f98 <main@@Base+0xef4>
   24738:	b	2484c <main@@Base+0xe7a8>
   2473c:	mov	r0, #0
   24740:	mov	r1, #4
   24744:	str	r0, [r5]
   24748:	ldr	r0, [r8]
   2474c:	bl	31fa8 <flatcc_builder_start_table@@Base>
   24750:	cmp	r0, #0
   24754:	bne	24838 <main@@Base+0xe794>
   24758:	cmp	r4, sl
   2475c:	beq	24814 <main@@Base+0xe770>
   24760:	ldrb	r0, [r4]
   24764:	cmp	r0, #123	; 0x7b
   24768:	bne	24814 <main@@Base+0xe770>
   2476c:	add	r1, r4, #1
   24770:	sub	r0, sl, r1
   24774:	cmp	r0, #2
   24778:	blt	248d0 <main@@Base+0xe82c>
   2477c:	ldrb	r0, [r1]
   24780:	cmp	r0, #32
   24784:	bls	248c0 <main@@Base+0xe81c>
   24788:	mov	r4, r1
   2478c:	cmp	r4, sl
   24790:	mov	r2, sl
   24794:	bne	248ec <main@@Base+0xe848>
   24798:	b	2491c <main@@Base+0xe878>
   2479c:	mov	r0, #0
   247a0:	mov	r1, #0
   247a4:	str	r0, [r5]
   247a8:	ldr	r0, [r8]
   247ac:	bl	31fa8 <flatcc_builder_start_table@@Base>
   247b0:	cmp	r0, #0
   247b4:	bne	24838 <main@@Base+0xe794>
   247b8:	cmp	r4, sl
   247bc:	beq	24814 <main@@Base+0xe770>
   247c0:	ldrb	r0, [r4]
   247c4:	cmp	r0, #123	; 0x7b
   247c8:	bne	24814 <main@@Base+0xe770>
   247cc:	add	r1, r4, #1
   247d0:	sub	r0, sl, r1
   247d4:	cmp	r0, #2
   247d8:	blt	25590 <main@@Base+0xf4ec>
   247dc:	ldrb	r0, [r1]
   247e0:	cmp	r0, #32
   247e4:	bls	25580 <main@@Base+0xf4dc>
   247e8:	mov	r4, r1
   247ec:	cmp	r4, sl
   247f0:	mov	r3, sl
   247f4:	bne	255ac <main@@Base+0xf508>
   247f8:	b	255ec <main@@Base+0xf548>
   247fc:	mov	r0, r8
   24800:	mov	r1, r4
   24804:	mov	r2, sl
   24808:	mov	r3, r5
   2480c:	bl	274f8 <main@@Base+0x11454>
   24810:	b	2484c <main@@Base+0xe7a8>
   24814:	mov	r0, r8
   24818:	mov	r1, r4
   2481c:	mov	r2, sl
   24820:	mov	r3, #21
   24824:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   24828:	mov	r4, r0
   2482c:	ldr	r0, [r8, #24]
   24830:	cmp	r0, #0
   24834:	beq	257ac <main@@Base+0xf708>
   24838:	mov	r0, r8
   2483c:	mov	r1, r4
   24840:	mov	r2, sl
   24844:	mov	r3, #33	; 0x21
   24848:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   2484c:	mov	r4, r0
   24850:	ldr	r0, [r8, #24]
   24854:	cmp	r0, #0
   24858:	bne	24868 <main@@Base+0xe7c4>
   2485c:	ldr	r0, [r5]
   24860:	cmp	r0, #0
   24864:	beq	24874 <main@@Base+0xe7d0>
   24868:	mov	r0, r4
   2486c:	sub	sp, fp, #28
   24870:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24874:	mov	r0, r8
   24878:	mov	r1, r4
   2487c:	mov	r2, sl
   24880:	mov	r3, #33	; 0x21
   24884:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   24888:	mov	r4, r0
   2488c:	mov	r0, r4
   24890:	sub	sp, fp, #28
   24894:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   24898:	mov	r0, r8
   2489c:	mov	r1, r4
   248a0:	mov	r2, sl
   248a4:	sub	sp, fp, #28
   248a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   248ac:	b	37648 <flatcc_json_parser_generic_json@@Base>
   248b0:	add	r4, r4, #4
   248b4:	mov	r0, r4
   248b8:	sub	sp, fp, #28
   248bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   248c0:	bne	248d0 <main@@Base+0xe82c>
   248c4:	ldrb	r0, [r4, #2]!
   248c8:	cmp	r0, #32
   248cc:	bhi	248e0 <main@@Base+0xe83c>
   248d0:	mov	r0, r8
   248d4:	mov	r2, sl
   248d8:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   248dc:	mov	r4, r0
   248e0:	cmp	r4, sl
   248e4:	mov	r2, sl
   248e8:	beq	2491c <main@@Base+0xe878>
   248ec:	ldrb	r0, [r4]
   248f0:	cmp	r0, #125	; 0x7d
   248f4:	bne	24918 <main@@Base+0xe874>
   248f8:	add	r1, r4, #1
   248fc:	sub	r0, sl, r1
   24900:	cmp	r0, #2
   24904:	blt	257ec <main@@Base+0xf748>
   24908:	ldrb	r0, [r1]
   2490c:	cmp	r0, #32
   24910:	bls	255d4 <main@@Base+0xf530>
   24914:	b	2579c <main@@Base+0xf6f8>
   24918:	mov	r2, r4
   2491c:	movw	r0, #628	; 0x274
   24920:	movt	r0, #6
   24924:	add	r0, r0, #96	; 0x60
   24928:	str	r0, [sp, #12]
   2492c:	movw	r0, #388	; 0x184
   24930:	movt	r0, #6
   24934:	add	r0, r0, #72	; 0x48
   24938:	str	r0, [sp, #8]
   2493c:	cmp	r2, sl
   24940:	mov	r9, sl
   24944:	beq	24990 <main@@Base+0xe8ec>
   24948:	ldrb	r0, [r2]
   2494c:	cmp	r0, #46	; 0x2e
   24950:	beq	24968 <main@@Base+0xe8c4>
   24954:	cmp	r0, #34	; 0x22
   24958:	bne	24984 <main@@Base+0xe8e0>
   2495c:	mov	r0, #0
   24960:	add	r9, r2, #1
   24964:	b	2498c <main@@Base+0xe8e8>
   24968:	mov	r1, r2
   2496c:	mov	r0, r8
   24970:	mov	r2, sl
   24974:	mov	r3, #5
   24978:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   2497c:	mov	r9, r0
   24980:	b	24990 <main@@Base+0xe8ec>
   24984:	mov	r0, #1
   24988:	mov	r9, r2
   2498c:	str	r0, [r8, #12]
   24990:	sub	lr, sl, r9
   24994:	mov	r0, #8
   24998:	cmp	lr, #8
   2499c:	movcc	r0, lr
   249a0:	sub	r2, r0, #1
   249a4:	cmp	r2, #7
   249a8:	bhi	253ac <main@@Base+0xf308>
   249ac:	mov	ip, r5
   249b0:	add	r5, pc, #24
   249b4:	mov	r0, #0
   249b8:	mov	r1, #0
   249bc:	mov	r3, #0
   249c0:	mov	r7, #0
   249c4:	mov	r6, #0
   249c8:	mov	r4, #0
   249cc:	ldr	pc, [r5, r2, lsl #2]
   249d0:	andeq	r4, r2, r0, lsr #20
   249d4:	andeq	r4, r2, r8, lsl sl
   249d8:	andeq	r4, r2, r0, lsl sl
   249dc:	andeq	r4, r2, r8, lsl #20
   249e0:	strdeq	r4, [r2], -r8
   249e4:	strdeq	r4, [r2], -r0
   249e8:	strdeq	r4, [r2], -r0
   249ec:	strdeq	r4, [r2], -r0
   249f0:	ldrb	r1, [r9, #5]
   249f4:	lsl	r1, r1, #16
   249f8:	ldrb	r2, [r9, #4]
   249fc:	mov	r3, r0
   24a00:	orr	r1, r1, r2, lsl #24
   24a04:	mov	r0, r1
   24a08:	ldrb	r1, [r9, #3]
   24a0c:	orr	r7, r1, r3
   24a10:	ldrb	r1, [r9, #2]
   24a14:	orr	r6, r7, r1, lsl #8
   24a18:	ldrb	r1, [r9, #1]
   24a1c:	orr	r4, r6, r1, lsl #16
   24a20:	ldrb	r1, [r9]
   24a24:	movw	r3, #29234	; 0x7232
   24a28:	lsr	r2, r0, #16
   24a2c:	movt	r3, #27759	; 0x6c6f
   24a30:	orr	r7, r4, r1, lsl #24
   24a34:	movw	r1, #25455	; 0x636f
   24a38:	orr	r2, r2, r7, lsl #16
   24a3c:	eor	r1, r1, r7, lsr #16
   24a40:	eor	r2, r2, r3
   24a44:	orrs	r1, r2, r1
   24a48:	bne	24a9c <main@@Base+0xe9f8>
   24a4c:	cmp	lr, #7
   24a50:	mov	r6, r9
   24a54:	mov	r5, ip
   24a58:	blt	24cb0 <main@@Base+0xec0c>
   24a5c:	mov	r1, r9
   24a60:	ldr	r2, [r8, #12]
   24a64:	ldrb	r0, [r1, #6]!
   24a68:	cmp	r2, #0
   24a6c:	beq	24b08 <main@@Base+0xea64>
   24a70:	cmp	r0, #33	; 0x21
   24a74:	bcc	24a84 <main@@Base+0xe9e0>
   24a78:	cmp	r0, #58	; 0x3a
   24a7c:	mov	r6, r9
   24a80:	bne	24cb0 <main@@Base+0xec0c>
   24a84:	mov	r0, #0
   24a88:	str	r0, [r8, #12]
   24a8c:	sub	r0, sl, r1
   24a90:	cmp	r0, #2
   24a94:	bge	24b24 <main@@Base+0xea80>
   24a98:	b	24b8c <main@@Base+0xeae8>
   24a9c:	movw	r1, #27759	; 0x6c6f
   24aa0:	and	r0, r0, #-16777216	; 0xff000000
   24aa4:	mov	r5, ip
   24aa8:	movt	r1, #25455	; 0x636f
   24aac:	eor	r0, r0, #1912602624	; 0x72000000
   24ab0:	eor	r1, r7, r1
   24ab4:	orrs	r0, r0, r1
   24ab8:	bne	24ea0 <main@@Base+0xedfc>
   24abc:	cmp	lr, #6
   24ac0:	mov	r6, r9
   24ac4:	blt	24e20 <main@@Base+0xed7c>
   24ac8:	mov	r1, r9
   24acc:	ldr	r2, [r8, #12]
   24ad0:	ldrb	r0, [r1, #5]!
   24ad4:	cmp	r2, #0
   24ad8:	beq	24b40 <main@@Base+0xea9c>
   24adc:	cmp	r0, #33	; 0x21
   24ae0:	bcc	24af0 <main@@Base+0xea4c>
   24ae4:	cmp	r0, #58	; 0x3a
   24ae8:	mov	r6, r9
   24aec:	bne	24e20 <main@@Base+0xed7c>
   24af0:	mov	r0, #0
   24af4:	str	r0, [r8, #12]
   24af8:	sub	r0, sl, r1
   24afc:	cmp	r0, #2
   24b00:	bge	24b5c <main@@Base+0xeab8>
   24b04:	b	24c14 <main@@Base+0xeb70>
   24b08:	cmp	r0, #34	; 0x22
   24b0c:	mov	r6, r9
   24b10:	bne	24cb0 <main@@Base+0xec0c>
   24b14:	add	r1, r9, #7
   24b18:	sub	r0, sl, r1
   24b1c:	cmp	r0, #2
   24b20:	blt	24b8c <main@@Base+0xeae8>
   24b24:	ldrb	r0, [r1]
   24b28:	cmp	r0, #32
   24b2c:	bls	24b78 <main@@Base+0xead4>
   24b30:	mov	r6, r1
   24b34:	cmp	r6, sl
   24b38:	bne	24bac <main@@Base+0xeb08>
   24b3c:	b	24be4 <main@@Base+0xeb40>
   24b40:	cmp	r0, #34	; 0x22
   24b44:	mov	r6, r9
   24b48:	bne	24e20 <main@@Base+0xed7c>
   24b4c:	add	r1, r9, #6
   24b50:	sub	r0, sl, r1
   24b54:	cmp	r0, #2
   24b58:	blt	24c14 <main@@Base+0xeb70>
   24b5c:	ldrb	r0, [r1]
   24b60:	cmp	r0, #32
   24b64:	bls	24c00 <main@@Base+0xeb5c>
   24b68:	mov	r6, r1
   24b6c:	cmp	r6, sl
   24b70:	bne	24c34 <main@@Base+0xeb90>
   24b74:	b	24c6c <main@@Base+0xebc8>
   24b78:	bne	24b8c <main@@Base+0xeae8>
   24b7c:	mov	r6, r1
   24b80:	ldrb	r0, [r6, #1]!
   24b84:	cmp	r0, #32
   24b88:	bhi	24ba4 <main@@Base+0xeb00>
   24b8c:	mov	r0, r8
   24b90:	mov	r2, sl
   24b94:	mov	r4, lr
   24b98:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   24b9c:	mov	lr, r4
   24ba0:	mov	r6, r0
   24ba4:	cmp	r6, sl
   24ba8:	beq	24be4 <main@@Base+0xeb40>
   24bac:	ldrb	r0, [r6]
   24bb0:	cmp	r0, #58	; 0x3a
   24bb4:	bne	24be4 <main@@Base+0xeb40>
   24bb8:	add	r1, r6, #1
   24bbc:	sub	r0, sl, r1
   24bc0:	cmp	r0, #2
   24bc4:	blt	24c98 <main@@Base+0xebf4>
   24bc8:	ldrb	r0, [r1]
   24bcc:	cmp	r0, #32
   24bd0:	bls	24c88 <main@@Base+0xebe4>
   24bd4:	mov	r6, r1
   24bd8:	cmp	r9, r6
   24bdc:	bne	24cb8 <main@@Base+0xec14>
   24be0:	b	24ea0 <main@@Base+0xedfc>
   24be4:	mov	r0, r8
   24be8:	mov	r1, r6
   24bec:	mov	r2, sl
   24bf0:	mov	r3, #4
   24bf4:	mov	r4, lr
   24bf8:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   24bfc:	b	24ca8 <main@@Base+0xec04>
   24c00:	bne	24c14 <main@@Base+0xeb70>
   24c04:	mov	r6, r1
   24c08:	ldrb	r0, [r6, #1]!
   24c0c:	cmp	r0, #32
   24c10:	bhi	24c2c <main@@Base+0xeb88>
   24c14:	mov	r0, r8
   24c18:	mov	r2, sl
   24c1c:	mov	r4, lr
   24c20:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   24c24:	mov	lr, r4
   24c28:	mov	r6, r0
   24c2c:	cmp	r6, sl
   24c30:	beq	24c6c <main@@Base+0xebc8>
   24c34:	ldrb	r0, [r6]
   24c38:	cmp	r0, #58	; 0x3a
   24c3c:	bne	24c6c <main@@Base+0xebc8>
   24c40:	add	r1, r6, #1
   24c44:	sub	r0, sl, r1
   24c48:	cmp	r0, #2
   24c4c:	blt	24e08 <main@@Base+0xed64>
   24c50:	ldrb	r0, [r1]
   24c54:	cmp	r0, #32
   24c58:	bls	24df8 <main@@Base+0xed54>
   24c5c:	mov	r6, r1
   24c60:	cmp	r9, r6
   24c64:	bne	24e28 <main@@Base+0xed84>
   24c68:	b	24ea0 <main@@Base+0xedfc>
   24c6c:	mov	r0, r8
   24c70:	mov	r1, r6
   24c74:	mov	r2, sl
   24c78:	mov	r3, #4
   24c7c:	mov	r4, lr
   24c80:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   24c84:	b	24e18 <main@@Base+0xed74>
   24c88:	bne	24c98 <main@@Base+0xebf4>
   24c8c:	ldrb	r0, [r6, #2]!
   24c90:	cmp	r0, #32
   24c94:	bhi	24cb0 <main@@Base+0xec0c>
   24c98:	mov	r0, r8
   24c9c:	mov	r2, sl
   24ca0:	mov	r4, lr
   24ca4:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   24ca8:	mov	lr, r4
   24cac:	mov	r6, r0
   24cb0:	cmp	r9, r6
   24cb4:	beq	24ea0 <main@@Base+0xedfc>
   24cb8:	mov	r7, #0
   24cbc:	cmp	r6, sl
   24cc0:	str	r7, [sp, #28]
   24cc4:	str	r7, [sp, #24]
   24cc8:	strb	r7, [sp, #19]
   24ccc:	str	r7, [sp, #20]
   24cd0:	beq	24d30 <main@@Base+0xec8c>
   24cd4:	add	r0, sp, #24
   24cd8:	mov	r1, r6
   24cdc:	mov	r2, sl
   24ce0:	add	r3, sp, #20
   24ce4:	str	r0, [sp]
   24ce8:	mov	r0, r8
   24cec:	bl	38fa8 <flatcc_json_parser_integer@@Base>
   24cf0:	cmp	r0, r6
   24cf4:	beq	24d40 <main@@Base+0xec9c>
   24cf8:	ldr	r2, [sp, #20]
   24cfc:	mov	r4, r0
   24d00:	ldr	r0, [sp, #24]
   24d04:	ldr	r1, [sp, #28]
   24d08:	cmp	r2, #0
   24d0c:	beq	24d50 <main@@Base+0xecac>
   24d10:	subs	r2, r0, #129	; 0x81
   24d14:	sbcs	r1, r1, #0
   24d18:	bcc	24d80 <main@@Base+0xecdc>
   24d1c:	mov	r0, r8
   24d20:	mov	r1, r4
   24d24:	mov	r2, sl
   24d28:	mov	r3, #8
   24d2c:	b	24d6c <main@@Base+0xecc8>
   24d30:	mov	r4, sl
   24d34:	cmp	r6, r4
   24d38:	bne	24dd4 <main@@Base+0xed30>
   24d3c:	b	24da4 <main@@Base+0xed00>
   24d40:	mov	r4, r6
   24d44:	cmp	r6, r4
   24d48:	bne	24dd4 <main@@Base+0xed30>
   24d4c:	b	24da4 <main@@Base+0xed00>
   24d50:	subs	r2, r0, #128	; 0x80
   24d54:	sbcs	r1, r1, #0
   24d58:	bcc	24d94 <main@@Base+0xecf0>
   24d5c:	mov	r0, r8
   24d60:	mov	r1, r4
   24d64:	mov	r2, sl
   24d68:	mov	r3, #7
   24d6c:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   24d70:	mov	r4, r0
   24d74:	cmp	r6, r4
   24d78:	bne	24dd4 <main@@Base+0xed30>
   24d7c:	b	24da4 <main@@Base+0xed00>
   24d80:	rsb	r7, r0, #0
   24d84:	strb	r7, [sp, #19]
   24d88:	cmp	r6, r4
   24d8c:	bne	24dd4 <main@@Base+0xed30>
   24d90:	b	24da4 <main@@Base+0xed00>
   24d94:	mov	r7, r0
   24d98:	strb	r7, [sp, #19]
   24d9c:	cmp	r6, r4
   24da0:	bne	24dd4 <main@@Base+0xed30>
   24da4:	add	r0, sp, #19
   24da8:	mov	r1, r6
   24dac:	mov	r2, sl
   24db0:	str	r0, [sp]
   24db4:	mov	r0, r8
   24db8:	ldr	r3, [sp, #12]
   24dbc:	bl	23764 <main@@Base+0xd6c0>
   24dc0:	mov	r4, r0
   24dc4:	cmp	r0, r6
   24dc8:	cmpne	r4, sl
   24dcc:	beq	24838 <main@@Base+0xe794>
   24dd0:	ldrb	r7, [sp, #19]
   24dd4:	uxtb	r0, r7
   24dd8:	cmp	r0, #2
   24ddc:	bne	24dec <main@@Base+0xed48>
   24de0:	ldrb	r0, [r8, #8]
   24de4:	tst	r0, #2
   24de8:	beq	253c0 <main@@Base+0xf31c>
   24dec:	ldr	r0, [r8]
   24df0:	mov	r1, #1
   24df4:	b	25114 <main@@Base+0xf070>
   24df8:	bne	24e08 <main@@Base+0xed64>
   24dfc:	ldrb	r0, [r6, #2]!
   24e00:	cmp	r0, #32
   24e04:	bhi	24e20 <main@@Base+0xed7c>
   24e08:	mov	r0, r8
   24e0c:	mov	r2, sl
   24e10:	mov	r4, lr
   24e14:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   24e18:	mov	lr, r4
   24e1c:	mov	r6, r0
   24e20:	cmp	r9, r6
   24e24:	beq	24ea0 <main@@Base+0xedfc>
   24e28:	mov	r7, #0
   24e2c:	cmp	r6, sl
   24e30:	str	r7, [sp, #28]
   24e34:	str	r7, [sp, #24]
   24e38:	strb	r7, [sp, #19]
   24e3c:	str	r7, [sp, #20]
   24e40:	beq	24f60 <main@@Base+0xeebc>
   24e44:	add	r0, sp, #24
   24e48:	mov	r1, r6
   24e4c:	mov	r2, sl
   24e50:	add	r3, sp, #20
   24e54:	str	r0, [sp]
   24e58:	mov	r0, r8
   24e5c:	bl	38fa8 <flatcc_json_parser_integer@@Base>
   24e60:	cmp	r0, r6
   24e64:	beq	24fa8 <main@@Base+0xef04>
   24e68:	ldr	r2, [sp, #20]
   24e6c:	mov	r4, r0
   24e70:	ldr	r0, [sp, #24]
   24e74:	ldr	r1, [sp, #28]
   24e78:	cmp	r2, #0
   24e7c:	beq	24ff0 <main@@Base+0xef4c>
   24e80:	subs	r2, r0, #129	; 0x81
   24e84:	sbcs	r1, r1, #0
   24e88:	bcc	25020 <main@@Base+0xef7c>
   24e8c:	mov	r0, r8
   24e90:	mov	r1, r4
   24e94:	mov	r2, sl
   24e98:	mov	r3, #8
   24e9c:	b	2500c <main@@Base+0xef68>
   24ea0:	movw	r1, #12800	; 0x3200
   24ea4:	bic	r0, r7, #255	; 0xff
   24ea8:	movt	r1, #30051	; 0x7563
   24eac:	teq	r0, r1
   24eb0:	bne	24f00 <main@@Base+0xee5c>
   24eb4:	cmp	lr, #4
   24eb8:	mov	r7, r9
   24ebc:	blt	251d8 <main@@Base+0xf134>
   24ec0:	mov	r1, r9
   24ec4:	ldr	r2, [r8, #12]
   24ec8:	ldrb	r0, [r1, #3]!
   24ecc:	cmp	r2, #0
   24ed0:	beq	24f70 <main@@Base+0xeecc>
   24ed4:	cmp	r0, #33	; 0x21
   24ed8:	bcc	24ee8 <main@@Base+0xee44>
   24edc:	cmp	r0, #58	; 0x3a
   24ee0:	mov	r7, r9
   24ee4:	bne	251d8 <main@@Base+0xf134>
   24ee8:	mov	r0, #0
   24eec:	str	r0, [r8, #12]
   24ef0:	sub	r0, sl, r1
   24ef4:	cmp	r0, #2
   24ef8:	bge	24f8c <main@@Base+0xeee8>
   24efc:	b	25048 <main@@Base+0xefa4>
   24f00:	movw	r0, #0
   24f04:	bfc	r7, #0, #16
   24f08:	movt	r0, #30051	; 0x7563
   24f0c:	teq	r7, r0
   24f10:	bne	253ac <main@@Base+0xf308>
   24f14:	cmp	lr, #3
   24f18:	mov	r7, r9
   24f1c:	blt	25330 <main@@Base+0xf28c>
   24f20:	mov	r1, r9
   24f24:	ldr	r2, [r8, #12]
   24f28:	ldrb	r0, [r1, #2]!
   24f2c:	cmp	r2, #0
   24f30:	beq	24fb8 <main@@Base+0xef14>
   24f34:	cmp	r0, #33	; 0x21
   24f38:	bcc	24f48 <main@@Base+0xeea4>
   24f3c:	cmp	r0, #58	; 0x3a
   24f40:	mov	r7, r9
   24f44:	bne	25330 <main@@Base+0xf28c>
   24f48:	mov	r0, #0
   24f4c:	str	r0, [r8, #12]
   24f50:	sub	r0, sl, r1
   24f54:	cmp	r0, #2
   24f58:	bge	24fd4 <main@@Base+0xef30>
   24f5c:	b	25150 <main@@Base+0xf0ac>
   24f60:	mov	r4, sl
   24f64:	cmp	r6, r4
   24f68:	bne	250f4 <main@@Base+0xf050>
   24f6c:	b	250c0 <main@@Base+0xf01c>
   24f70:	cmp	r0, #34	; 0x22
   24f74:	mov	r7, r9
   24f78:	bne	251d8 <main@@Base+0xf134>
   24f7c:	add	r1, r9, #4
   24f80:	sub	r0, sl, r1
   24f84:	cmp	r0, #2
   24f88:	blt	25048 <main@@Base+0xefa4>
   24f8c:	ldrb	r0, [r1]
   24f90:	cmp	r0, #32
   24f94:	bls	25034 <main@@Base+0xef90>
   24f98:	mov	r7, r1
   24f9c:	cmp	r7, sl
   24fa0:	bne	25060 <main@@Base+0xefbc>
   24fa4:	b	25098 <main@@Base+0xeff4>
   24fa8:	mov	r4, r6
   24fac:	cmp	r6, r4
   24fb0:	bne	250f4 <main@@Base+0xf050>
   24fb4:	b	250c0 <main@@Base+0xf01c>
   24fb8:	cmp	r0, #34	; 0x22
   24fbc:	mov	r7, r9
   24fc0:	bne	25330 <main@@Base+0xf28c>
   24fc4:	add	r1, r9, #3
   24fc8:	sub	r0, sl, r1
   24fcc:	cmp	r0, #2
   24fd0:	blt	25150 <main@@Base+0xf0ac>
   24fd4:	ldrb	r0, [r1]
   24fd8:	cmp	r0, #32
   24fdc:	bls	2513c <main@@Base+0xf098>
   24fe0:	mov	r7, r1
   24fe4:	cmp	r7, sl
   24fe8:	bne	25168 <main@@Base+0xf0c4>
   24fec:	b	251a0 <main@@Base+0xf0fc>
   24ff0:	subs	r2, r0, #128	; 0x80
   24ff4:	sbcs	r1, r1, #0
   24ff8:	bcc	250b0 <main@@Base+0xf00c>
   24ffc:	mov	r0, r8
   25000:	mov	r1, r4
   25004:	mov	r2, sl
   25008:	mov	r3, #7
   2500c:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   25010:	mov	r4, r0
   25014:	cmp	r6, r4
   25018:	bne	250f4 <main@@Base+0xf050>
   2501c:	b	250c0 <main@@Base+0xf01c>
   25020:	rsb	r7, r0, #0
   25024:	strb	r7, [sp, #19]
   25028:	cmp	r6, r4
   2502c:	bne	250f4 <main@@Base+0xf050>
   25030:	b	250c0 <main@@Base+0xf01c>
   25034:	bne	25048 <main@@Base+0xefa4>
   25038:	mov	r7, r1
   2503c:	ldrb	r0, [r7, #1]!
   25040:	cmp	r0, #32
   25044:	bhi	25058 <main@@Base+0xefb4>
   25048:	mov	r0, r8
   2504c:	mov	r2, sl
   25050:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   25054:	mov	r7, r0
   25058:	cmp	r7, sl
   2505c:	beq	25098 <main@@Base+0xeff4>
   25060:	ldrb	r0, [r7]
   25064:	cmp	r0, #58	; 0x3a
   25068:	bne	25098 <main@@Base+0xeff4>
   2506c:	add	r1, r7, #1
   25070:	sub	r0, sl, r1
   25074:	cmp	r0, #2
   25078:	blt	251c8 <main@@Base+0xf124>
   2507c:	ldrb	r0, [r1]
   25080:	cmp	r0, #32
   25084:	bls	251b8 <main@@Base+0xf114>
   25088:	mov	r7, r1
   2508c:	cmp	r9, r7
   25090:	bne	251e0 <main@@Base+0xf13c>
   25094:	b	253ac <main@@Base+0xf308>
   25098:	mov	r0, r8
   2509c:	mov	r1, r7
   250a0:	mov	r2, sl
   250a4:	mov	r3, #4
   250a8:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   250ac:	b	251d4 <main@@Base+0xf130>
   250b0:	mov	r7, r0
   250b4:	strb	r7, [sp, #19]
   250b8:	cmp	r6, r4
   250bc:	bne	250f4 <main@@Base+0xf050>
   250c0:	movw	r3, #740	; 0x2e4
   250c4:	add	r0, sp, #19
   250c8:	mov	r1, r6
   250cc:	mov	r2, sl
   250d0:	movt	r3, #6
   250d4:	str	r0, [sp]
   250d8:	mov	r0, r8
   250dc:	bl	23764 <main@@Base+0xd6c0>
   250e0:	mov	r4, r0
   250e4:	cmp	r0, r6
   250e8:	cmpne	r4, sl
   250ec:	beq	24838 <main@@Base+0xe794>
   250f0:	ldrb	r7, [sp, #19]
   250f4:	uxtb	r0, r7
   250f8:	cmp	r0, #2
   250fc:	bne	2510c <main@@Base+0xf068>
   25100:	ldrb	r0, [r8, #8]
   25104:	tst	r0, #2
   25108:	beq	253c0 <main@@Base+0xf31c>
   2510c:	ldr	r0, [r8]
   25110:	mov	r1, #0
   25114:	mov	r2, #1
   25118:	mov	r3, #1
   2511c:	bl	332fc <flatcc_builder_table_add@@Base>
   25120:	cmp	r0, #0
   25124:	beq	24838 <main@@Base+0xe794>
   25128:	strb	r7, [r0]
   2512c:	sub	r0, sl, r4
   25130:	cmp	r0, #2
   25134:	bge	253cc <main@@Base+0xf328>
   25138:	b	254e4 <main@@Base+0xf440>
   2513c:	bne	25150 <main@@Base+0xf0ac>
   25140:	mov	r7, r1
   25144:	ldrb	r0, [r7, #1]!
   25148:	cmp	r0, #32
   2514c:	bhi	25160 <main@@Base+0xf0bc>
   25150:	mov	r0, r8
   25154:	mov	r2, sl
   25158:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   2515c:	mov	r7, r0
   25160:	cmp	r7, sl
   25164:	beq	251a0 <main@@Base+0xf0fc>
   25168:	ldrb	r0, [r7]
   2516c:	cmp	r0, #58	; 0x3a
   25170:	bne	251a0 <main@@Base+0xf0fc>
   25174:	add	r1, r7, #1
   25178:	sub	r0, sl, r1
   2517c:	cmp	r0, #2
   25180:	blt	25320 <main@@Base+0xf27c>
   25184:	ldrb	r0, [r1]
   25188:	cmp	r0, #32
   2518c:	bls	25310 <main@@Base+0xf26c>
   25190:	mov	r7, r1
   25194:	cmp	r9, r7
   25198:	bne	25338 <main@@Base+0xf294>
   2519c:	b	253ac <main@@Base+0xf308>
   251a0:	mov	r0, r8
   251a4:	mov	r1, r7
   251a8:	mov	r2, sl
   251ac:	mov	r3, #4
   251b0:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   251b4:	b	2532c <main@@Base+0xf288>
   251b8:	bne	251c8 <main@@Base+0xf124>
   251bc:	ldrb	r0, [r7, #2]!
   251c0:	cmp	r0, #32
   251c4:	bhi	251d8 <main@@Base+0xf134>
   251c8:	mov	r0, r8
   251cc:	mov	r2, sl
   251d0:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   251d4:	mov	r7, r0
   251d8:	cmp	r9, r7
   251dc:	beq	253ac <main@@Base+0xf308>
   251e0:	mov	r6, #0
   251e4:	cmp	r7, sl
   251e8:	str	r6, [sp, #28]
   251ec:	str	r6, [sp, #24]
   251f0:	strb	r6, [sp, #19]
   251f4:	str	r6, [sp, #20]
   251f8:	beq	25254 <main@@Base+0xf1b0>
   251fc:	add	r0, sp, #24
   25200:	mov	r1, r7
   25204:	mov	r2, sl
   25208:	add	r3, sp, #20
   2520c:	str	r0, [sp]
   25210:	mov	r0, r8
   25214:	bl	38fa8 <flatcc_json_parser_integer@@Base>
   25218:	cmp	r0, r7
   2521c:	beq	25264 <main@@Base+0xf1c0>
   25220:	mov	r4, r0
   25224:	ldr	r0, [sp, #20]
   25228:	cmp	r0, #0
   2522c:	beq	25274 <main@@Base+0xf1d0>
   25230:	mov	r0, r8
   25234:	mov	r1, r4
   25238:	mov	r2, sl
   2523c:	mov	r3, #8
   25240:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   25244:	mov	r4, r0
   25248:	cmp	r7, r4
   2524c:	bne	252ec <main@@Base+0xf248>
   25250:	b	252bc <main@@Base+0xf218>
   25254:	mov	r4, sl
   25258:	cmp	r7, r4
   2525c:	bne	252ec <main@@Base+0xf248>
   25260:	b	252bc <main@@Base+0xf218>
   25264:	mov	r4, r7
   25268:	cmp	r7, r4
   2526c:	bne	252ec <main@@Base+0xf248>
   25270:	b	252bc <main@@Base+0xf218>
   25274:	ldr	r0, [sp, #24]
   25278:	ldr	r1, [sp, #28]
   2527c:	subs	r2, r0, #256	; 0x100
   25280:	sbcs	r1, r1, #0
   25284:	bcc	252ac <main@@Base+0xf208>
   25288:	mov	r0, r8
   2528c:	mov	r1, r4
   25290:	mov	r2, sl
   25294:	mov	r3, #7
   25298:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   2529c:	mov	r4, r0
   252a0:	cmp	r7, r4
   252a4:	bne	252ec <main@@Base+0xf248>
   252a8:	b	252bc <main@@Base+0xf218>
   252ac:	mov	r6, r0
   252b0:	strb	r0, [sp, #19]
   252b4:	cmp	r7, r4
   252b8:	bne	252ec <main@@Base+0xf248>
   252bc:	add	r0, sp, #19
   252c0:	mov	r1, r7
   252c4:	mov	r2, sl
   252c8:	str	r0, [sp]
   252cc:	mov	r0, r8
   252d0:	ldr	r3, [sp, #8]
   252d4:	bl	239ac <main@@Base+0xd908>
   252d8:	mov	r4, r0
   252dc:	cmp	r0, r7
   252e0:	cmpne	r4, sl
   252e4:	beq	24838 <main@@Base+0xe794>
   252e8:	ldrb	r6, [sp, #19]
   252ec:	uxtb	r0, r6
   252f0:	cmp	r0, #2
   252f4:	bne	25304 <main@@Base+0xf260>
   252f8:	ldrb	r0, [r8, #8]
   252fc:	tst	r0, #2
   25300:	beq	253c0 <main@@Base+0xf31c>
   25304:	ldr	r0, [r8]
   25308:	mov	r1, #3
   2530c:	b	254c0 <main@@Base+0xf41c>
   25310:	bne	25320 <main@@Base+0xf27c>
   25314:	ldrb	r0, [r7, #2]!
   25318:	cmp	r0, #32
   2531c:	bhi	25330 <main@@Base+0xf28c>
   25320:	mov	r0, r8
   25324:	mov	r2, sl
   25328:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   2532c:	mov	r7, r0
   25330:	cmp	r9, r7
   25334:	beq	253ac <main@@Base+0xf308>
   25338:	mov	r6, #0
   2533c:	cmp	r7, sl
   25340:	str	r6, [sp, #28]
   25344:	str	r6, [sp, #24]
   25348:	strb	r6, [sp, #19]
   2534c:	str	r6, [sp, #20]
   25350:	beq	25400 <main@@Base+0xf35c>
   25354:	add	r0, sp, #24
   25358:	mov	r1, r7
   2535c:	mov	r2, sl
   25360:	add	r3, sp, #20
   25364:	str	r0, [sp]
   25368:	mov	r0, r8
   2536c:	bl	38fa8 <flatcc_json_parser_integer@@Base>
   25370:	cmp	r0, r7
   25374:	beq	25410 <main@@Base+0xf36c>
   25378:	mov	r4, r0
   2537c:	ldr	r0, [sp, #20]
   25380:	cmp	r0, #0
   25384:	beq	25420 <main@@Base+0xf37c>
   25388:	mov	r0, r8
   2538c:	mov	r1, r4
   25390:	mov	r2, sl
   25394:	mov	r3, #8
   25398:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   2539c:	mov	r4, r0
   253a0:	cmp	r7, r4
   253a4:	bne	254a0 <main@@Base+0xf3fc>
   253a8:	b	25468 <main@@Base+0xf3c4>
   253ac:	mov	r0, r8
   253b0:	mov	r1, r9
   253b4:	mov	r2, sl
   253b8:	bl	373bc <flatcc_json_parser_unmatched_symbol@@Base>
   253bc:	mov	r4, r0
   253c0:	sub	r0, sl, r4
   253c4:	cmp	r0, #2
   253c8:	blt	254e4 <main@@Base+0xf440>
   253cc:	ldrb	r0, [r4]
   253d0:	cmp	r0, #32
   253d4:	bls	253e8 <main@@Base+0xf344>
   253d8:	mov	r2, r4
   253dc:	cmp	r2, sl
   253e0:	bne	25500 <main@@Base+0xf45c>
   253e4:	b	2571c <main@@Base+0xf678>
   253e8:	bne	254e4 <main@@Base+0xf440>
   253ec:	mov	r2, r4
   253f0:	ldrb	r0, [r2, #1]!
   253f4:	cmp	r0, #32
   253f8:	bhi	254f8 <main@@Base+0xf454>
   253fc:	b	254e4 <main@@Base+0xf440>
   25400:	mov	r4, sl
   25404:	cmp	r7, r4
   25408:	bne	254a0 <main@@Base+0xf3fc>
   2540c:	b	25468 <main@@Base+0xf3c4>
   25410:	mov	r4, r7
   25414:	cmp	r7, r4
   25418:	bne	254a0 <main@@Base+0xf3fc>
   2541c:	b	25468 <main@@Base+0xf3c4>
   25420:	ldr	r0, [sp, #24]
   25424:	ldr	r1, [sp, #28]
   25428:	subs	r2, r0, #256	; 0x100
   2542c:	sbcs	r1, r1, #0
   25430:	bcc	25458 <main@@Base+0xf3b4>
   25434:	mov	r0, r8
   25438:	mov	r1, r4
   2543c:	mov	r2, sl
   25440:	mov	r3, #7
   25444:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   25448:	mov	r4, r0
   2544c:	cmp	r7, r4
   25450:	bne	254a0 <main@@Base+0xf3fc>
   25454:	b	25468 <main@@Base+0xf3c4>
   25458:	mov	r6, r0
   2545c:	strb	r0, [sp, #19]
   25460:	cmp	r7, r4
   25464:	bne	254a0 <main@@Base+0xf3fc>
   25468:	add	r0, sp, #19
   2546c:	mov	r1, r7
   25470:	mov	r2, sl
   25474:	str	r0, [sp]
   25478:	movw	r0, #388	; 0x184
   2547c:	movt	r0, #6
   25480:	add	r3, r0, #84	; 0x54
   25484:	mov	r0, r8
   25488:	bl	239ac <main@@Base+0xd908>
   2548c:	mov	r4, r0
   25490:	cmp	r0, r7
   25494:	cmpne	r4, sl
   25498:	beq	24838 <main@@Base+0xe794>
   2549c:	ldrb	r6, [sp, #19]
   254a0:	uxtb	r0, r6
   254a4:	cmp	r0, #2
   254a8:	bne	254b8 <main@@Base+0xf414>
   254ac:	ldrb	r0, [r8, #8]
   254b0:	tst	r0, #2
   254b4:	beq	253c0 <main@@Base+0xf31c>
   254b8:	ldr	r0, [r8]
   254bc:	mov	r1, #2
   254c0:	mov	r2, #1
   254c4:	mov	r3, #1
   254c8:	bl	332fc <flatcc_builder_table_add@@Base>
   254cc:	cmp	r0, #0
   254d0:	beq	24838 <main@@Base+0xe794>
   254d4:	strb	r6, [r0]
   254d8:	sub	r0, sl, r4
   254dc:	cmp	r0, #2
   254e0:	bge	253cc <main@@Base+0xf328>
   254e4:	mov	r0, r8
   254e8:	mov	r1, r4
   254ec:	mov	r2, sl
   254f0:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   254f4:	mov	r2, r0
   254f8:	cmp	r2, sl
   254fc:	beq	2571c <main@@Base+0xf678>
   25500:	ldrb	r0, [r2]
   25504:	cmp	r0, #44	; 0x2c
   25508:	bne	25778 <main@@Base+0xf6d4>
   2550c:	add	r1, r2, #1
   25510:	sub	r0, sl, r1
   25514:	cmp	r0, #2
   25518:	blt	25548 <main@@Base+0xf4a4>
   2551c:	ldrb	r0, [r1]
   25520:	cmp	r0, #32
   25524:	bls	25538 <main@@Base+0xf494>
   25528:	mov	r2, r1
   2552c:	cmp	r2, sl
   25530:	bne	25560 <main@@Base+0xf4bc>
   25534:	b	25710 <main@@Base+0xf66c>
   25538:	bne	25548 <main@@Base+0xf4a4>
   2553c:	ldrb	r0, [r2, #2]!
   25540:	cmp	r0, #32
   25544:	bhi	25558 <main@@Base+0xf4b4>
   25548:	mov	r0, r8
   2554c:	mov	r2, sl
   25550:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   25554:	mov	r2, r0
   25558:	cmp	r2, sl
   2555c:	beq	25710 <main@@Base+0xf66c>
   25560:	ldrb	r0, [r2]
   25564:	cmp	r0, #125	; 0x7d
   25568:	bne	2493c <main@@Base+0xe898>
   2556c:	add	r1, r2, #1
   25570:	sub	r0, sl, r1
   25574:	cmp	r0, #2
   25578:	blt	257ec <main@@Base+0xf748>
   2557c:	b	25790 <main@@Base+0xf6ec>
   25580:	bne	25590 <main@@Base+0xf4ec>
   25584:	ldrb	r0, [r4, #2]!
   25588:	cmp	r0, #32
   2558c:	bhi	255a0 <main@@Base+0xf4fc>
   25590:	mov	r0, r8
   25594:	mov	r2, sl
   25598:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   2559c:	mov	r4, r0
   255a0:	cmp	r4, sl
   255a4:	mov	r3, sl
   255a8:	beq	255ec <main@@Base+0xf548>
   255ac:	ldrb	r0, [r4]
   255b0:	cmp	r0, #125	; 0x7d
   255b4:	bne	255e8 <main@@Base+0xf544>
   255b8:	add	r1, r4, #1
   255bc:	sub	r0, sl, r1
   255c0:	cmp	r0, #2
   255c4:	blt	257ec <main@@Base+0xf748>
   255c8:	ldrb	r0, [r1]
   255cc:	cmp	r0, #32
   255d0:	bhi	2579c <main@@Base+0xf6f8>
   255d4:	bne	257ec <main@@Base+0xf748>
   255d8:	ldrb	r0, [r4, #2]!
   255dc:	cmp	r0, #32
   255e0:	bhi	2482c <main@@Base+0xe788>
   255e4:	b	257ec <main@@Base+0xf748>
   255e8:	mov	r3, r4
   255ec:	mov	r4, #0
   255f0:	mov	r7, #1
   255f4:	cmp	r3, sl
   255f8:	mov	r1, sl
   255fc:	beq	2563c <main@@Base+0xf598>
   25600:	ldrb	r0, [r3]
   25604:	cmp	r0, #46	; 0x2e
   25608:	beq	25624 <main@@Base+0xf580>
   2560c:	cmp	r0, #34	; 0x22
   25610:	movne	r1, r3
   25614:	strne	r7, [r8, #12]
   25618:	streq	r4, [r8, #12]
   2561c:	addeq	r1, r3, #1
   25620:	b	2563c <main@@Base+0xf598>
   25624:	mov	r1, r3
   25628:	mov	r0, r8
   2562c:	mov	r2, sl
   25630:	mov	r3, #5
   25634:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   25638:	mov	r1, r0
   2563c:	mov	r0, r8
   25640:	mov	r2, sl
   25644:	bl	373bc <flatcc_json_parser_unmatched_symbol@@Base>
   25648:	mov	r2, r0
   2564c:	sub	r0, sl, r0
   25650:	cmp	r0, #2
   25654:	blt	256c8 <main@@Base+0xf624>
   25658:	ldrb	r0, [r2]
   2565c:	cmp	r0, #32
   25660:	bls	256b4 <main@@Base+0xf610>
   25664:	mov	r3, r2
   25668:	cmp	r3, sl
   2566c:	beq	2571c <main@@Base+0xf678>
   25670:	ldrb	r0, [r3]
   25674:	cmp	r0, #44	; 0x2c
   25678:	bne	25730 <main@@Base+0xf68c>
   2567c:	add	r1, r3, #1
   25680:	sub	r0, sl, r1
   25684:	cmp	r0, #2
   25688:	blt	256f8 <main@@Base+0xf654>
   2568c:	ldrb	r0, [r1]
   25690:	cmp	r0, #32
   25694:	bls	256e8 <main@@Base+0xf644>
   25698:	mov	r3, r1
   2569c:	cmp	r3, sl
   256a0:	beq	25710 <main@@Base+0xf66c>
   256a4:	ldrb	r0, [r3]
   256a8:	cmp	r0, #125	; 0x7d
   256ac:	bne	255f4 <main@@Base+0xf550>
   256b0:	b	25738 <main@@Base+0xf694>
   256b4:	bne	256c8 <main@@Base+0xf624>
   256b8:	mov	r3, r2
   256bc:	ldrb	r0, [r3, #1]!
   256c0:	cmp	r0, #32
   256c4:	bhi	256dc <main@@Base+0xf638>
   256c8:	mov	r1, r2
   256cc:	mov	r0, r8
   256d0:	mov	r2, sl
   256d4:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   256d8:	mov	r3, r0
   256dc:	cmp	r3, sl
   256e0:	bne	25670 <main@@Base+0xf5cc>
   256e4:	b	2571c <main@@Base+0xf678>
   256e8:	bne	256f8 <main@@Base+0xf654>
   256ec:	ldrb	r0, [r3, #2]!
   256f0:	cmp	r0, #32
   256f4:	bhi	25708 <main@@Base+0xf664>
   256f8:	mov	r0, r8
   256fc:	mov	r2, sl
   25700:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   25704:	mov	r3, r0
   25708:	cmp	r3, sl
   2570c:	bne	256a4 <main@@Base+0xf600>
   25710:	mov	r0, r8
   25714:	mov	r1, sl
   25718:	b	257cc <main@@Base+0xf728>
   2571c:	mov	r4, sl
   25720:	ldr	r0, [r8, #24]
   25724:	cmp	r0, #0
   25728:	bne	24838 <main@@Base+0xe794>
   2572c:	b	257ac <main@@Base+0xf708>
   25730:	cmp	r0, #125	; 0x7d
   25734:	bne	2576c <main@@Base+0xf6c8>
   25738:	add	r1, r3, #1
   2573c:	sub	r0, sl, r1
   25740:	cmp	r0, #2
   25744:	blt	257ec <main@@Base+0xf748>
   25748:	ldrb	r0, [r1]
   2574c:	cmp	r0, #32
   25750:	bhi	2579c <main@@Base+0xf6f8>
   25754:	bne	257ec <main@@Base+0xf748>
   25758:	ldrb	r0, [r3, #2]!
   2575c:	mov	r4, r3
   25760:	cmp	r0, #32
   25764:	bhi	2482c <main@@Base+0xe788>
   25768:	b	257ec <main@@Base+0xf748>
   2576c:	mov	r0, r8
   25770:	mov	r1, r3
   25774:	b	257cc <main@@Base+0xf728>
   25778:	cmp	r0, #125	; 0x7d
   2577c:	bne	257c4 <main@@Base+0xf720>
   25780:	add	r1, r2, #1
   25784:	sub	r0, sl, r1
   25788:	cmp	r0, #2
   2578c:	blt	257ec <main@@Base+0xf748>
   25790:	ldrb	r0, [r1]
   25794:	cmp	r0, #32
   25798:	bls	257d8 <main@@Base+0xf734>
   2579c:	mov	r4, r1
   257a0:	ldr	r0, [r8, #24]
   257a4:	cmp	r0, #0
   257a8:	bne	24838 <main@@Base+0xe794>
   257ac:	ldr	r0, [r8]
   257b0:	bl	32950 <flatcc_builder_end_table@@Base>
   257b4:	cmp	r0, #0
   257b8:	str	r0, [r5]
   257bc:	bne	24850 <main@@Base+0xe7ac>
   257c0:	b	24838 <main@@Base+0xe794>
   257c4:	mov	r0, r8
   257c8:	mov	r1, r2
   257cc:	mov	r2, sl
   257d0:	mov	r3, #10
   257d4:	b	24824 <main@@Base+0xe780>
   257d8:	bne	257ec <main@@Base+0xf748>
   257dc:	ldrb	r0, [r2, #2]!
   257e0:	mov	r4, r2
   257e4:	cmp	r0, #32
   257e8:	bhi	2482c <main@@Base+0xe788>
   257ec:	mov	r0, r8
   257f0:	mov	r2, sl
   257f4:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   257f8:	b	24828 <main@@Base+0xe784>
   257fc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   25800:	add	fp, sp, #28
   25804:	sub	sp, sp, #20
   25808:	mov	sl, r1
   2580c:	sub	r1, r2, r1
   25810:	cmp	r1, #8
   25814:	movcs	r1, #8
   25818:	sub	r5, r1, #1
   2581c:	cmp	r5, #7
   25820:	bhi	25a24 <main@@Base+0xf980>
   25824:	str	r2, [sp, #16]
   25828:	str	r0, [sp, #12]
   2582c:	add	r0, pc, #36	; 0x24
   25830:	mov	lr, r3
   25834:	mov	r8, #0
   25838:	mov	ip, #0
   2583c:	mov	r2, #0
   25840:	mov	r1, #0
   25844:	mov	r3, #0
   25848:	mov	r7, #0
   2584c:	mov	r6, #0
   25850:	mov	r4, #0
   25854:	ldr	pc, [r0, r5, lsl #2]
   25858:			; <UNDEFINED> instruction: 0x000258bc
   2585c:			; <UNDEFINED> instruction: 0x000258b4
   25860:	andeq	r5, r2, ip, lsr #17
   25864:	andeq	r5, r2, r4, lsr #17
   25868:	muleq	r2, r8, r8
   2586c:	andeq	r5, r2, ip, lsl #17
   25870:	andeq	r5, r2, ip, ror r8
   25874:	andeq	r5, r2, r8, ror r8
   25878:	ldrb	ip, [sl, #7]
   2587c:	ldrb	r0, [sl, #6]
   25880:	mov	r2, r8
   25884:	orr	r0, ip, r0, lsl #8
   25888:	mov	r8, r0
   2588c:	ldrb	r0, [sl, #5]
   25890:	mov	r1, r2
   25894:	orr	r8, r8, r0, lsl #16
   25898:	ldrb	r0, [sl, #4]
   2589c:	mov	r3, r1
   258a0:	orr	r8, r8, r0, lsl #24
   258a4:	ldrb	r0, [sl, #3]
   258a8:	orr	r7, r0, r3
   258ac:	ldrb	r0, [sl, #2]
   258b0:	orr	r6, r7, r0, lsl #8
   258b4:	ldrb	r0, [sl, #1]
   258b8:	orr	r4, r6, r0, lsl #16
   258bc:	ldrb	r0, [sl]
   258c0:	movw	r1, #28275	; 0x6e73
   258c4:	ldr	r7, [fp, #12]
   258c8:	ldr	r5, [fp, #8]
   258cc:	movt	r1, #19823	; 0x4d6f
   258d0:	orr	r9, r4, r0, lsl #24
   258d4:	movw	r0, #29184	; 0x7200
   258d8:	movt	r0, #29797	; 0x7465
   258dc:	subs	r2, r8, r0
   258e0:	sbcs	r2, r9, r1
   258e4:	bcs	2592c <main@@Base+0xf888>
   258e8:	movw	r1, #29696	; 0x7400
   258ec:	bic	r0, r9, #255	; 0xff
   258f0:	movt	r1, #16748	; 0x416c
   258f4:	teq	r0, r1
   258f8:	bne	25a24 <main@@Base+0xf980>
   258fc:	ldr	r0, [sp, #12]
   25900:	ldr	r2, [sp, #16]
   25904:	mov	r1, sl
   25908:	mov	r3, #3
   2590c:	mov	r4, lr
   25910:	str	r7, [sp]
   25914:	bl	371c8 <flatcc_json_parser_match_constant@@Base>
   25918:	cmp	r0, sl
   2591c:	beq	25a24 <main@@Base+0xf980>
   25920:	mov	r1, #0
   25924:	mov	r2, #4
   25928:	b	2596c <main@@Base+0xf8c8>
   2592c:	add	r2, r0, #50	; 0x32
   25930:	eor	r1, r9, r1
   25934:	eor	r2, r8, r2
   25938:	orrs	r2, r2, r1
   2593c:	bne	2597c <main@@Base+0xf8d8>
   25940:	ldr	r0, [sp, #12]
   25944:	ldr	r2, [sp, #16]
   25948:	mov	r1, sl
   2594c:	mov	r3, #8
   25950:	mov	r4, lr
   25954:	str	r7, [sp]
   25958:	bl	371c8 <flatcc_json_parser_match_constant@@Base>
   2595c:	cmp	r0, sl
   25960:	beq	25a24 <main@@Base+0xf980>
   25964:	mov	r1, #0
   25968:	mov	r2, #3
   2596c:	str	r2, [r5]
   25970:	str	r1, [r5, #4]
   25974:	str	r1, [r4]
   25978:	b	25a20 <main@@Base+0xf97c>
   2597c:	ldr	r5, [sp, #16]
   25980:	ldr	r6, [sp, #12]
   25984:	bic	r2, r8, #255	; 0xff
   25988:	eor	r0, r2, r0
   2598c:	orrs	r0, r0, r1
   25990:	bne	259d4 <main@@Base+0xf930>
   25994:	mov	r0, r6
   25998:	mov	r1, sl
   2599c:	mov	r2, r5
   259a0:	mov	r3, #7
   259a4:	str	r7, [sp]
   259a8:	mov	r4, lr
   259ac:	bl	371c8 <flatcc_json_parser_match_constant@@Base>
   259b0:	mov	lr, r4
   259b4:	cmp	r0, sl
   259b8:	beq	259d4 <main@@Base+0xf930>
   259bc:	ldr	r3, [fp, #8]
   259c0:	mov	r2, #1
   259c4:	mov	r1, #0
   259c8:	str	r2, [r3]
   259cc:	str	r1, [r3, #4]
   259d0:	b	25a1c <main@@Base+0xf978>
   259d4:	movw	r0, #20037	; 0x4e45
   259d8:	movt	r0, #20047	; 0x4e4f
   259dc:	teq	r9, r0
   259e0:	bne	25a30 <main@@Base+0xf98c>
   259e4:	mov	r0, r6
   259e8:	mov	r1, sl
   259ec:	mov	r2, r5
   259f0:	mov	r3, #4
   259f4:	str	r7, [sp]
   259f8:	mov	r4, lr
   259fc:	bl	371c8 <flatcc_json_parser_match_constant@@Base>
   25a00:	mov	lr, r4
   25a04:	cmp	r0, sl
   25a08:	beq	25a30 <main@@Base+0xf98c>
   25a0c:	ldr	r2, [fp, #8]
   25a10:	mov	r1, #0
   25a14:	str	r1, [r2]
   25a18:	str	r1, [r2, #4]
   25a1c:	str	r1, [lr]
   25a20:	mov	sl, r0
   25a24:	mov	r0, sl
   25a28:	sub	sp, fp, #28
   25a2c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   25a30:	movw	r0, #28016	; 0x6d70
   25a34:	movw	r1, #29556	; 0x7374
   25a38:	movt	r0, #21353	; 0x5369
   25a3c:	movt	r1, #21605	; 0x5465
   25a40:	eor	r0, r8, r0
   25a44:	eor	r1, r9, r1
   25a48:	orrs	r0, r0, r1
   25a4c:	bne	25a24 <main@@Base+0xf980>
   25a50:	str	lr, [sp, #8]
   25a54:	add	lr, sl, #8
   25a58:	sub	r0, r5, lr
   25a5c:	cmp	r0, #8
   25a60:	movcs	r0, #8
   25a64:	sub	r5, r0, #1
   25a68:	cmp	r5, #7
   25a6c:	bhi	25a24 <main@@Base+0xf980>
   25a70:	add	r1, pc, #32
   25a74:	mov	r9, #0
   25a78:	mov	ip, #0
   25a7c:	mov	r8, #0
   25a80:	mov	r2, #0
   25a84:	mov	r3, #0
   25a88:	mov	r0, #0
   25a8c:	mov	r4, #0
   25a90:	mov	r6, #0
   25a94:	ldr	pc, [r1, r5, lsl #2]
   25a98:	strdeq	r5, [r2], -ip
   25a9c:	strdeq	r5, [r2], -r4
   25aa0:	andeq	r5, r2, ip, ror #21
   25aa4:	andeq	r5, r2, r4, ror #21
   25aa8:	ldrdeq	r5, [r2], -r8
   25aac:	andeq	r5, r2, ip, asr #21
   25ab0:			; <UNDEFINED> instruction: 0x00025abc
   25ab4:			; <UNDEFINED> instruction: 0x00025ab8
   25ab8:	ldrb	ip, [sl, #15]
   25abc:	ldrb	r0, [sl, #14]
   25ac0:	mov	r8, r9
   25ac4:	orr	r0, ip, r0, lsl #8
   25ac8:	mov	r9, r0
   25acc:	ldrb	r0, [sl, #13]
   25ad0:	mov	r2, r8
   25ad4:	orr	r9, r9, r0, lsl #16
   25ad8:	ldrb	r0, [sl, #12]
   25adc:	mov	r3, r2
   25ae0:	orr	r9, r9, r0, lsl #24
   25ae4:	ldrb	r0, [sl, #11]
   25ae8:	orr	r0, r0, r3
   25aec:	ldrb	r1, [sl, #10]
   25af0:	orr	r4, r0, r1, lsl #8
   25af4:	ldrb	r0, [sl, #9]
   25af8:	orr	r6, r4, r0, lsl #16
   25afc:	ldrb	r1, [lr]
   25b00:	movw	r0, #25943	; 0x6557
   25b04:	movw	r2, #21601	; 0x5461
   25b08:	movt	r0, #25196	; 0x626c
   25b0c:	movt	r2, #27749	; 0x6c65
   25b10:	eor	r0, r9, r0
   25b14:	orr	r1, r6, r1, lsl #24
   25b18:	eor	r1, r1, r2
   25b1c:	orrs	r0, r0, r1
   25b20:	bne	25a24 <main@@Base+0xf980>
   25b24:	ldr	r0, [sp, #16]
   25b28:	add	r8, sl, #16
   25b2c:	sub	r0, r0, r8
   25b30:	cmp	r0, #8
   25b34:	movcs	r0, #8
   25b38:	sub	r3, r0, #1
   25b3c:	cmp	r3, #7
   25b40:	bhi	25a24 <main@@Base+0xf980>
   25b44:	add	r5, pc, #28
   25b48:	mov	r0, #0
   25b4c:	mov	ip, #0
   25b50:	mov	lr, #0
   25b54:	mov	r2, #0
   25b58:	mov	r1, #0
   25b5c:	mov	r6, #0
   25b60:	mov	r4, #0
   25b64:	ldr	pc, [r5, r3, lsl #2]
   25b68:	andeq	r5, r2, r4, asr #23
   25b6c:			; <UNDEFINED> instruction: 0x00025bbc
   25b70:			; <UNDEFINED> instruction: 0x00025bb4
   25b74:	andeq	r5, r2, ip, lsr #23
   25b78:	andeq	r5, r2, r0, lsr #23
   25b7c:	muleq	r2, r0, fp
   25b80:	andeq	r5, r2, r8, lsl #23
   25b84:	andeq	r5, r2, r8, lsl #23
   25b88:	ldrb	r1, [sl, #22]
   25b8c:	lsl	ip, r1, #8
   25b90:	ldrb	r1, [sl, #21]
   25b94:	mov	lr, r0
   25b98:	orr	r1, ip, r1, lsl #16
   25b9c:	mov	r0, r1
   25ba0:	ldrb	r1, [sl, #20]
   25ba4:	mov	r2, lr
   25ba8:	orr	r0, r0, r1, lsl #24
   25bac:	ldrb	r1, [sl, #19]
   25bb0:	orr	r1, r1, r2
   25bb4:	ldrb	r2, [sl, #18]
   25bb8:	orr	r6, r1, r2, lsl #8
   25bbc:	ldrb	r1, [sl, #17]
   25bc0:	orr	r4, r6, r1, lsl #16
   25bc4:	movw	r1, #27904	; 0x6d00
   25bc8:	movw	r2, #26693	; 0x6845
   25bcc:	movt	r1, #28277	; 0x6e75
   25bd0:	movt	r2, #26996	; 0x6974
   25bd4:	eor	r0, r0, r1
   25bd8:	ldrb	r1, [r8]
   25bdc:	orr	r1, r4, r1, lsl #24
   25be0:	eor	r1, r1, r2
   25be4:	orrs	r0, r0, r1
   25be8:	bne	25a24 <main@@Base+0xf980>
   25bec:	ldr	r0, [sp, #12]
   25bf0:	ldr	r2, [sp, #16]
   25bf4:	mov	r1, r8
   25bf8:	mov	r3, #7
   25bfc:	str	r7, [sp]
   25c00:	bl	371c8 <flatcc_json_parser_match_constant@@Base>
   25c04:	ldr	r3, [fp, #8]
   25c08:	cmp	r0, r8
   25c0c:	beq	25a24 <main@@Base+0xf980>
   25c10:	mov	r2, #2
   25c14:	mov	r1, #0
   25c18:	str	r2, [r3]
   25c1c:	str	r1, [r3, #4]
   25c20:	ldr	r2, [sp, #8]
   25c24:	str	r1, [r2]
   25c28:	b	25a20 <main@@Base+0xf97c>
   25c2c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   25c30:	add	fp, sp, #28
   25c34:	sub	sp, sp, #44	; 0x2c
   25c38:	mov	r7, r2
   25c3c:	ldr	r2, [fp, #8]
   25c40:	mov	r5, r0
   25c44:	mov	r0, #0
   25c48:	mov	r8, r3
   25c4c:	cmp	r1, r7
   25c50:	strb	r0, [r2]
   25c54:	beq	25c78 <main@@Base+0xfbd4>
   25c58:	ldrb	r0, [r1]
   25c5c:	cmp	r0, #46	; 0x2e
   25c60:	beq	25ca0 <main@@Base+0xfbfc>
   25c64:	cmp	r0, #34	; 0x22
   25c68:	bne	25e24 <main@@Base+0xfd80>
   25c6c:	mov	r0, #0
   25c70:	add	r1, r1, #1
   25c74:	str	r0, [r5, #12]
   25c78:	ldr	r0, [r5, #12]
   25c7c:	cmp	r0, #0
   25c80:	beq	25cc0 <main@@Base+0xfc1c>
   25c84:	mov	r6, r1
   25c88:	cmp	r6, r7
   25c8c:	bne	25d04 <main@@Base+0xfc60>
   25c90:	mov	r4, r7
   25c94:	mov	r0, r4
   25c98:	sub	sp, fp, #28
   25c9c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   25ca0:	mov	r0, r5
   25ca4:	mov	r2, r7
   25ca8:	mov	r3, #5
   25cac:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   25cb0:	mov	r1, r0
   25cb4:	ldr	r0, [r5, #12]
   25cb8:	cmp	r0, #0
   25cbc:	bne	25c84 <main@@Base+0xfbe0>
   25cc0:	sub	r0, r7, r1
   25cc4:	cmp	r0, #2
   25cc8:	blt	25cec <main@@Base+0xfc48>
   25ccc:	ldrb	r0, [r1]
   25cd0:	cmp	r0, #32
   25cd4:	bhi	25c84 <main@@Base+0xfbe0>
   25cd8:	bne	25cec <main@@Base+0xfc48>
   25cdc:	mov	r6, r1
   25ce0:	ldrb	r0, [r6, #1]!
   25ce4:	cmp	r0, #32
   25ce8:	bhi	25cfc <main@@Base+0xfc58>
   25cec:	mov	r0, r5
   25cf0:	mov	r2, r7
   25cf4:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   25cf8:	mov	r6, r0
   25cfc:	cmp	r6, r7
   25d00:	beq	25c90 <main@@Base+0xfbec>
   25d04:	add	r0, r8, #4
   25d08:	mov	r1, #0
   25d0c:	add	sl, sp, #32
   25d10:	add	r9, sp, #28
   25d14:	str	r8, [sp, #16]
   25d18:	str	r1, [sp, #20]
   25d1c:	str	r0, [sp, #12]
   25d20:	ldr	r4, [r8]
   25d24:	mov	r8, r0
   25d28:	add	r0, sp, #24
   25d2c:	mov	r1, r6
   25d30:	mov	r2, r7
   25d34:	mov	r3, r9
   25d38:	str	sl, [sp]
   25d3c:	str	r0, [sp, #4]
   25d40:	mov	r0, r5
   25d44:	blx	r4
   25d48:	cmp	r0, r7
   25d4c:	beq	25df0 <main@@Base+0xfd4c>
   25d50:	mov	r4, r0
   25d54:	cmp	r0, r6
   25d58:	bne	25d6c <main@@Base+0xfcc8>
   25d5c:	ldr	r4, [r8], #4
   25d60:	cmp	r4, #0
   25d64:	bne	25d28 <main@@Base+0xfc84>
   25d68:	b	25e00 <main@@Base+0xfd5c>
   25d6c:	ldr	r0, [sp, #28]
   25d70:	cmp	r0, #0
   25d74:	beq	25d9c <main@@Base+0xfcf8>
   25d78:	mov	r0, r5
   25d7c:	mov	r1, r4
   25d80:	mov	r2, r7
   25d84:	mov	r3, #8
   25d88:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   25d8c:	ldr	r8, [sp, #16]
   25d90:	cmp	r0, r7
   25d94:	bne	25dc0 <main@@Base+0xfd1c>
   25d98:	b	25df0 <main@@Base+0xfd4c>
   25d9c:	ldr	r0, [sp, #32]
   25da0:	ldr	r1, [sp, #36]	; 0x24
   25da4:	orrs	r0, r0, r1
   25da8:	movwne	r0, #1
   25dac:	str	r0, [sp, #20]
   25db0:	mov	r0, r4
   25db4:	ldr	r8, [sp, #16]
   25db8:	cmp	r0, r7
   25dbc:	beq	25df0 <main@@Base+0xfd4c>
   25dc0:	ldr	r0, [fp, #8]
   25dc4:	ldr	r2, [sp, #20]
   25dc8:	mov	r6, r4
   25dcc:	mov	r1, r0
   25dd0:	ldrb	r0, [r0]
   25dd4:	add	r0, r0, r2
   25dd8:	strb	r0, [r1]
   25ddc:	ldr	r0, [sp, #24]
   25de0:	cmp	r0, #0
   25de4:	ldr	r0, [sp, #12]
   25de8:	bne	25d20 <main@@Base+0xfc7c>
   25dec:	b	25c94 <main@@Base+0xfbf0>
   25df0:	mov	r4, r7
   25df4:	mov	r0, r4
   25df8:	sub	sp, fp, #28
   25dfc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   25e00:	mov	r0, r5
   25e04:	mov	r1, r6
   25e08:	mov	r2, r7
   25e0c:	mov	r3, #23
   25e10:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   25e14:	mov	r4, r0
   25e18:	mov	r0, r4
   25e1c:	sub	sp, fp, #28
   25e20:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   25e24:	mov	r0, #1
   25e28:	str	r0, [r5, #12]
   25e2c:	ldr	r0, [r5, #12]
   25e30:	cmp	r0, #0
   25e34:	bne	25c84 <main@@Base+0xfbe0>
   25e38:	b	25cc0 <main@@Base+0xfc1c>
   25e3c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   25e40:	add	fp, sp, #28
   25e44:	sub	sp, sp, #36	; 0x24
   25e48:	mov	r6, r2
   25e4c:	ldr	r2, [fp, #8]
   25e50:	mov	r5, r0
   25e54:	mov	r0, #0
   25e58:	mov	r8, r3
   25e5c:	cmp	r1, r6
   25e60:	str	r0, [r2]
   25e64:	beq	25e88 <main@@Base+0xfde4>
   25e68:	ldrb	r0, [r1]
   25e6c:	cmp	r0, #46	; 0x2e
   25e70:	beq	25eb0 <main@@Base+0xfe0c>
   25e74:	cmp	r0, #34	; 0x22
   25e78:	bne	25ff4 <main@@Base+0xff50>
   25e7c:	mov	r0, #0
   25e80:	add	r1, r1, #1
   25e84:	str	r0, [r5, #12]
   25e88:	ldr	r0, [r5, #12]
   25e8c:	cmp	r0, #0
   25e90:	beq	25ed0 <main@@Base+0xfe2c>
   25e94:	mov	r7, r1
   25e98:	cmp	r7, r6
   25e9c:	bne	25f14 <main@@Base+0xfe70>
   25ea0:	mov	r4, r6
   25ea4:	mov	r0, r4
   25ea8:	sub	sp, fp, #28
   25eac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   25eb0:	mov	r0, r5
   25eb4:	mov	r2, r6
   25eb8:	mov	r3, #5
   25ebc:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   25ec0:	mov	r1, r0
   25ec4:	ldr	r0, [r5, #12]
   25ec8:	cmp	r0, #0
   25ecc:	bne	25e94 <main@@Base+0xfdf0>
   25ed0:	sub	r0, r6, r1
   25ed4:	cmp	r0, #2
   25ed8:	blt	25efc <main@@Base+0xfe58>
   25edc:	ldrb	r0, [r1]
   25ee0:	cmp	r0, #32
   25ee4:	bhi	25e94 <main@@Base+0xfdf0>
   25ee8:	bne	25efc <main@@Base+0xfe58>
   25eec:	mov	r7, r1
   25ef0:	ldrb	r0, [r7, #1]!
   25ef4:	cmp	r0, #32
   25ef8:	bhi	25f0c <main@@Base+0xfe68>
   25efc:	mov	r0, r5
   25f00:	mov	r2, r6
   25f04:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   25f08:	mov	r7, r0
   25f0c:	cmp	r7, r6
   25f10:	beq	25ea0 <main@@Base+0xfdfc>
   25f14:	add	r0, r8, #4
   25f18:	add	sl, sp, #24
   25f1c:	add	r9, sp, #20
   25f20:	str	r8, [sp, #12]
   25f24:	str	r0, [sp, #8]
   25f28:	ldr	r4, [r8]
   25f2c:	mov	r8, r0
   25f30:	add	r0, sp, #16
   25f34:	mov	r1, r7
   25f38:	mov	r2, r6
   25f3c:	mov	r3, r9
   25f40:	str	sl, [sp]
   25f44:	str	r0, [sp, #4]
   25f48:	mov	r0, r5
   25f4c:	blx	r4
   25f50:	cmp	r0, r6
   25f54:	beq	25fc0 <main@@Base+0xff1c>
   25f58:	mov	r4, r0
   25f5c:	cmp	r0, r7
   25f60:	bne	25f74 <main@@Base+0xfed0>
   25f64:	ldr	r4, [r8], #4
   25f68:	cmp	r4, #0
   25f6c:	bne	25f30 <main@@Base+0xfe8c>
   25f70:	b	25fd0 <main@@Base+0xff2c>
   25f74:	ldr	r0, [sp, #24]
   25f78:	ldr	r1, [sp, #28]
   25f7c:	bl	48460 <flatcc_json_printer_clear@@Base+0x720>
   25f80:	vmov	s2, r0
   25f84:	ldr	r2, [fp, #8]
   25f88:	ldr	r1, [sp, #20]
   25f8c:	ldr	r8, [sp, #12]
   25f90:	mov	r7, r4
   25f94:	vldr	s0, [r2]
   25f98:	cmp	r1, #0
   25f9c:	vneg.f32	s4, s2
   25fa0:	vseleq.f32	s2, s2, s4
   25fa4:	vadd.f32	s0, s0, s2
   25fa8:	vstr	s0, [r2]
   25fac:	ldr	r0, [sp, #16]
   25fb0:	cmp	r0, #0
   25fb4:	ldr	r0, [sp, #8]
   25fb8:	bne	25f28 <main@@Base+0xfe84>
   25fbc:	b	25ea4 <main@@Base+0xfe00>
   25fc0:	mov	r4, r6
   25fc4:	mov	r0, r4
   25fc8:	sub	sp, fp, #28
   25fcc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   25fd0:	mov	r0, r5
   25fd4:	mov	r1, r7
   25fd8:	mov	r2, r6
   25fdc:	mov	r3, #23
   25fe0:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   25fe4:	mov	r4, r0
   25fe8:	mov	r0, r4
   25fec:	sub	sp, fp, #28
   25ff0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   25ff4:	mov	r0, #1
   25ff8:	str	r0, [r5, #12]
   25ffc:	ldr	r0, [r5, #12]
   26000:	cmp	r0, #0
   26004:	bne	25e94 <main@@Base+0xfdf0>
   26008:	b	25ed0 <main@@Base+0xfe2c>
   2600c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   26010:	add	fp, sp, #28
   26014:	sub	sp, sp, #44	; 0x2c
   26018:	mov	r6, r2
   2601c:	ldr	r2, [fp, #8]
   26020:	mov	r5, r0
   26024:	mov	r0, #0
   26028:	mov	sl, r3
   2602c:	cmp	r1, r6
   26030:	str	r0, [r2]
   26034:	beq	26058 <main@@Base+0xffb4>
   26038:	ldrb	r0, [r1]
   2603c:	cmp	r0, #46	; 0x2e
   26040:	beq	26080 <main@@Base+0xffdc>
   26044:	cmp	r0, #34	; 0x22
   26048:	bne	2623c <main@@Base+0x10198>
   2604c:	mov	r0, #0
   26050:	add	r1, r1, #1
   26054:	str	r0, [r5, #12]
   26058:	ldr	r0, [r5, #12]
   2605c:	cmp	r0, #0
   26060:	beq	260a0 <main@@Base+0xfffc>
   26064:	mov	r7, r1
   26068:	cmp	r7, r6
   2606c:	bne	260e4 <main@@Base+0x10040>
   26070:	mov	r4, r6
   26074:	mov	r0, r4
   26078:	sub	sp, fp, #28
   2607c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   26080:	mov	r0, r5
   26084:	mov	r2, r6
   26088:	mov	r3, #5
   2608c:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   26090:	mov	r1, r0
   26094:	ldr	r0, [r5, #12]
   26098:	cmp	r0, #0
   2609c:	bne	26064 <main@@Base+0xffc0>
   260a0:	sub	r0, r6, r1
   260a4:	cmp	r0, #2
   260a8:	blt	260cc <main@@Base+0x10028>
   260ac:	ldrb	r0, [r1]
   260b0:	cmp	r0, #32
   260b4:	bhi	26064 <main@@Base+0xffc0>
   260b8:	bne	260cc <main@@Base+0x10028>
   260bc:	mov	r7, r1
   260c0:	ldrb	r0, [r7, #1]!
   260c4:	cmp	r0, #32
   260c8:	bhi	260dc <main@@Base+0x10038>
   260cc:	mov	r0, r5
   260d0:	mov	r2, r6
   260d4:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   260d8:	mov	r7, r0
   260dc:	cmp	r7, r6
   260e0:	beq	26070 <main@@Base+0xffcc>
   260e4:	add	r0, sl, #4
   260e8:	mov	r2, #0
   260ec:	add	r8, sp, #32
   260f0:	add	r9, sp, #28
   260f4:	str	sl, [sp, #16]
   260f8:	str	r0, [sp, #12]
   260fc:	ldr	r4, [sl]
   26100:	mov	sl, r0
   26104:	str	r2, [sp, #20]
   26108:	add	r0, sp, #24
   2610c:	mov	r1, r7
   26110:	mov	r2, r6
   26114:	mov	r3, r9
   26118:	str	r8, [sp]
   2611c:	str	r0, [sp, #4]
   26120:	mov	r0, r5
   26124:	blx	r4
   26128:	cmp	r0, r6
   2612c:	beq	26208 <main@@Base+0x10164>
   26130:	mov	r4, r0
   26134:	cmp	r0, r7
   26138:	bne	2614c <main@@Base+0x100a8>
   2613c:	ldr	r4, [sl], #4
   26140:	cmp	r4, #0
   26144:	bne	26108 <main@@Base+0x10064>
   26148:	b	26218 <main@@Base+0x10174>
   2614c:	ldr	r2, [sp, #28]
   26150:	ldr	r0, [sp, #32]
   26154:	ldr	r1, [sp, #36]	; 0x24
   26158:	cmp	r2, #0
   2615c:	beq	26184 <main@@Base+0x100e0>
   26160:	ldr	sl, [sp, #16]
   26164:	subs	r2, r0, #-2147483647	; 0x80000001
   26168:	sbcs	r1, r1, #0
   2616c:	bcc	261b8 <main@@Base+0x10114>
   26170:	mov	r0, r5
   26174:	mov	r1, r4
   26178:	mov	r2, r6
   2617c:	mov	r3, #8
   26180:	b	261a4 <main@@Base+0x10100>
   26184:	ldr	sl, [sp, #16]
   26188:	subs	r2, r0, #-2147483648	; 0x80000000
   2618c:	sbcs	r1, r1, #0
   26190:	bcc	261cc <main@@Base+0x10128>
   26194:	mov	r0, r5
   26198:	mov	r1, r4
   2619c:	mov	r2, r6
   261a0:	mov	r3, #7
   261a4:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   261a8:	ldr	r2, [sp, #20]
   261ac:	cmp	r0, r6
   261b0:	bne	261dc <main@@Base+0x10138>
   261b4:	b	26208 <main@@Base+0x10164>
   261b8:	rsb	r2, r0, #0
   261bc:	mov	r0, r4
   261c0:	cmp	r0, r6
   261c4:	bne	261dc <main@@Base+0x10138>
   261c8:	b	26208 <main@@Base+0x10164>
   261cc:	mov	r2, r0
   261d0:	mov	r0, r4
   261d4:	cmp	r0, r6
   261d8:	beq	26208 <main@@Base+0x10164>
   261dc:	ldr	r0, [fp, #8]
   261e0:	mov	r7, r4
   261e4:	mov	r1, r0
   261e8:	ldr	r0, [r0]
   261ec:	add	r0, r0, r2
   261f0:	str	r0, [r1]
   261f4:	ldr	r0, [sp, #24]
   261f8:	cmp	r0, #0
   261fc:	ldr	r0, [sp, #12]
   26200:	bne	260fc <main@@Base+0x10058>
   26204:	b	26074 <main@@Base+0xffd0>
   26208:	mov	r4, r6
   2620c:	mov	r0, r4
   26210:	sub	sp, fp, #28
   26214:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   26218:	mov	r0, r5
   2621c:	mov	r1, r7
   26220:	mov	r2, r6
   26224:	mov	r3, #23
   26228:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   2622c:	mov	r4, r0
   26230:	mov	r0, r4
   26234:	sub	sp, fp, #28
   26238:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2623c:	mov	r0, #1
   26240:	str	r0, [r5, #12]
   26244:	ldr	r0, [r5, #12]
   26248:	cmp	r0, #0
   2624c:	bne	26064 <main@@Base+0xffc0>
   26250:	b	260a0 <main@@Base+0xfffc>
   26254:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   26258:	add	fp, sp, #28
   2625c:	sub	sp, sp, #44	; 0x2c
   26260:	mov	r6, r2
   26264:	ldr	r2, [fp, #8]
   26268:	mov	r5, r0
   2626c:	mov	r0, #0
   26270:	mov	sl, r3
   26274:	cmp	r1, r6
   26278:	str	r0, [r2]
   2627c:	str	r0, [r2, #4]
   26280:	beq	262a4 <main@@Base+0x10200>
   26284:	ldrb	r0, [r1]
   26288:	cmp	r0, #46	; 0x2e
   2628c:	beq	262cc <main@@Base+0x10228>
   26290:	cmp	r0, #34	; 0x22
   26294:	bne	26484 <main@@Base+0x103e0>
   26298:	mov	r0, #0
   2629c:	add	r1, r1, #1
   262a0:	str	r0, [r5, #12]
   262a4:	ldr	r0, [r5, #12]
   262a8:	cmp	r0, #0
   262ac:	beq	262ec <main@@Base+0x10248>
   262b0:	mov	r7, r1
   262b4:	cmp	r7, r6
   262b8:	bne	26330 <main@@Base+0x1028c>
   262bc:	mov	r4, r6
   262c0:	mov	r0, r4
   262c4:	sub	sp, fp, #28
   262c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   262cc:	mov	r0, r5
   262d0:	mov	r2, r6
   262d4:	mov	r3, #5
   262d8:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   262dc:	mov	r1, r0
   262e0:	ldr	r0, [r5, #12]
   262e4:	cmp	r0, #0
   262e8:	bne	262b0 <main@@Base+0x1020c>
   262ec:	sub	r0, r6, r1
   262f0:	cmp	r0, #2
   262f4:	blt	26318 <main@@Base+0x10274>
   262f8:	ldrb	r0, [r1]
   262fc:	cmp	r0, #32
   26300:	bhi	262b0 <main@@Base+0x1020c>
   26304:	bne	26318 <main@@Base+0x10274>
   26308:	mov	r7, r1
   2630c:	ldrb	r0, [r7, #1]!
   26310:	cmp	r0, #32
   26314:	bhi	26328 <main@@Base+0x10284>
   26318:	mov	r0, r5
   2631c:	mov	r2, r6
   26320:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   26324:	mov	r7, r0
   26328:	cmp	r7, r6
   2632c:	beq	262bc <main@@Base+0x10218>
   26330:	add	r0, sl, #4
   26334:	mov	r1, #0
   26338:	add	r8, sp, #32
   2633c:	add	r9, sp, #28
   26340:	mov	r2, #0
   26344:	str	sl, [sp, #12]
   26348:	str	r0, [sp, #8]
   2634c:	ldr	r4, [sl]
   26350:	mov	sl, r0
   26354:	str	r2, [sp, #16]
   26358:	str	r1, [sp, #20]
   2635c:	add	r0, sp, #24
   26360:	mov	r1, r7
   26364:	mov	r2, r6
   26368:	mov	r3, r9
   2636c:	str	r8, [sp]
   26370:	str	r0, [sp, #4]
   26374:	mov	r0, r5
   26378:	blx	r4
   2637c:	cmp	r0, r6
   26380:	beq	26450 <main@@Base+0x103ac>
   26384:	mov	r4, r0
   26388:	cmp	r0, r7
   2638c:	bne	263a0 <main@@Base+0x102fc>
   26390:	ldr	r4, [sl], #4
   26394:	cmp	r4, #0
   26398:	bne	2635c <main@@Base+0x102b8>
   2639c:	b	26460 <main@@Base+0x103bc>
   263a0:	add	r2, sp, #28
   263a4:	ldm	r2, {r0, r1, r2}
   263a8:	cmp	r0, #0
   263ac:	beq	263d4 <main@@Base+0x10330>
   263b0:	ldr	sl, [sp, #12]
   263b4:	subs	r0, r1, #1
   263b8:	sbcs	r0, r2, #-2147483648	; 0x80000000
   263bc:	bcc	2640c <main@@Base+0x10368>
   263c0:	mov	r0, r5
   263c4:	mov	r1, r4
   263c8:	mov	r2, r6
   263cc:	mov	r3, #8
   263d0:	b	263f4 <main@@Base+0x10350>
   263d4:	ldr	sl, [sp, #12]
   263d8:	cmn	r2, #1
   263dc:	mov	r0, r4
   263e0:	bgt	26400 <main@@Base+0x1035c>
   263e4:	mov	r0, r5
   263e8:	mov	r1, r4
   263ec:	mov	r2, r6
   263f0:	mov	r3, #7
   263f4:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   263f8:	ldr	r1, [sp, #20]
   263fc:	ldr	r2, [sp, #16]
   26400:	cmp	r0, r6
   26404:	bne	26420 <main@@Base+0x1037c>
   26408:	b	26450 <main@@Base+0x103ac>
   2640c:	rsbs	r1, r1, #0
   26410:	mov	r0, r4
   26414:	rsc	r2, r2, #0
   26418:	cmp	r0, r6
   2641c:	beq	26450 <main@@Base+0x103ac>
   26420:	ldr	r0, [fp, #8]
   26424:	mov	r7, r0
   26428:	ldm	r0, {r0, r3}
   2642c:	adds	r0, r0, r1
   26430:	adc	r3, r3, r2
   26434:	stm	r7, {r0, r3}
   26438:	mov	r7, r4
   2643c:	ldr	r0, [sp, #24]
   26440:	cmp	r0, #0
   26444:	ldr	r0, [sp, #8]
   26448:	bne	2634c <main@@Base+0x102a8>
   2644c:	b	262c0 <main@@Base+0x1021c>
   26450:	mov	r4, r6
   26454:	mov	r0, r4
   26458:	sub	sp, fp, #28
   2645c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   26460:	mov	r0, r5
   26464:	mov	r1, r7
   26468:	mov	r2, r6
   2646c:	mov	r3, #23
   26470:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   26474:	mov	r4, r0
   26478:	mov	r0, r4
   2647c:	sub	sp, fp, #28
   26480:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   26484:	mov	r0, #1
   26488:	str	r0, [r5, #12]
   2648c:	ldr	r0, [r5, #12]
   26490:	cmp	r0, #0
   26494:	bne	262b0 <main@@Base+0x1020c>
   26498:	b	262ec <main@@Base+0x10248>
   2649c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   264a0:	add	fp, sp, #28
   264a4:	sub	sp, sp, #44	; 0x2c
   264a8:	mov	r6, r2
   264ac:	ldr	r2, [fp, #8]
   264b0:	mov	r5, r0
   264b4:	mov	r0, #0
   264b8:	mov	r8, r3
   264bc:	cmp	r1, r6
   264c0:	str	r0, [r2]
   264c4:	beq	264e8 <main@@Base+0x10444>
   264c8:	ldrb	r0, [r1]
   264cc:	cmp	r0, #46	; 0x2e
   264d0:	beq	26510 <main@@Base+0x1046c>
   264d4:	cmp	r0, #34	; 0x22
   264d8:	bne	266b4 <main@@Base+0x10610>
   264dc:	mov	r0, #0
   264e0:	add	r1, r1, #1
   264e4:	str	r0, [r5, #12]
   264e8:	ldr	r0, [r5, #12]
   264ec:	cmp	r0, #0
   264f0:	beq	26530 <main@@Base+0x1048c>
   264f4:	mov	r7, r1
   264f8:	cmp	r7, r6
   264fc:	bne	26574 <main@@Base+0x104d0>
   26500:	mov	r4, r6
   26504:	mov	r0, r4
   26508:	sub	sp, fp, #28
   2650c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   26510:	mov	r0, r5
   26514:	mov	r2, r6
   26518:	mov	r3, #5
   2651c:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   26520:	mov	r1, r0
   26524:	ldr	r0, [r5, #12]
   26528:	cmp	r0, #0
   2652c:	bne	264f4 <main@@Base+0x10450>
   26530:	sub	r0, r6, r1
   26534:	cmp	r0, #2
   26538:	blt	2655c <main@@Base+0x104b8>
   2653c:	ldrb	r0, [r1]
   26540:	cmp	r0, #32
   26544:	bhi	264f4 <main@@Base+0x10450>
   26548:	bne	2655c <main@@Base+0x104b8>
   2654c:	mov	r7, r1
   26550:	ldrb	r0, [r7, #1]!
   26554:	cmp	r0, #32
   26558:	bhi	2656c <main@@Base+0x104c8>
   2655c:	mov	r0, r5
   26560:	mov	r2, r6
   26564:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   26568:	mov	r7, r0
   2656c:	cmp	r7, r6
   26570:	beq	26500 <main@@Base+0x1045c>
   26574:	add	r0, r8, #4
   26578:	mov	r1, #0
   2657c:	add	sl, sp, #32
   26580:	add	r9, sp, #28
   26584:	str	r8, [sp, #16]
   26588:	str	r1, [sp, #20]
   2658c:	str	r0, [sp, #12]
   26590:	ldr	r4, [r8]
   26594:	mov	r8, r0
   26598:	add	r0, sp, #24
   2659c:	mov	r1, r7
   265a0:	mov	r2, r6
   265a4:	mov	r3, r9
   265a8:	str	sl, [sp]
   265ac:	str	r0, [sp, #4]
   265b0:	mov	r0, r5
   265b4:	blx	r4
   265b8:	cmp	r0, r6
   265bc:	beq	26680 <main@@Base+0x105dc>
   265c0:	mov	r4, r0
   265c4:	cmp	r0, r7
   265c8:	bne	265dc <main@@Base+0x10538>
   265cc:	ldr	r4, [r8], #4
   265d0:	cmp	r4, #0
   265d4:	bne	26598 <main@@Base+0x104f4>
   265d8:	b	26690 <main@@Base+0x105ec>
   265dc:	ldr	r0, [sp, #28]
   265e0:	cmp	r0, #0
   265e4:	beq	2660c <main@@Base+0x10568>
   265e8:	mov	r0, r5
   265ec:	mov	r1, r4
   265f0:	mov	r2, r6
   265f4:	mov	r3, #8
   265f8:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   265fc:	ldr	r8, [sp, #16]
   26600:	cmp	r0, r6
   26604:	bne	26650 <main@@Base+0x105ac>
   26608:	b	26680 <main@@Base+0x105dc>
   2660c:	ldr	r0, [sp, #36]	; 0x24
   26610:	ldr	r8, [sp, #16]
   26614:	cmp	r0, #0
   26618:	beq	2663c <main@@Base+0x10598>
   2661c:	mov	r0, r5
   26620:	mov	r1, r4
   26624:	mov	r2, r6
   26628:	mov	r3, #7
   2662c:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   26630:	cmp	r0, r6
   26634:	bne	26650 <main@@Base+0x105ac>
   26638:	b	26680 <main@@Base+0x105dc>
   2663c:	ldr	r0, [sp, #32]
   26640:	str	r0, [sp, #20]
   26644:	mov	r0, r4
   26648:	cmp	r0, r6
   2664c:	beq	26680 <main@@Base+0x105dc>
   26650:	ldr	r0, [fp, #8]
   26654:	ldr	r2, [sp, #20]
   26658:	mov	r7, r4
   2665c:	mov	r1, r0
   26660:	ldr	r0, [r0]
   26664:	add	r0, r0, r2
   26668:	str	r0, [r1]
   2666c:	ldr	r0, [sp, #24]
   26670:	cmp	r0, #0
   26674:	ldr	r0, [sp, #12]
   26678:	bne	26590 <main@@Base+0x104ec>
   2667c:	b	26504 <main@@Base+0x10460>
   26680:	mov	r4, r6
   26684:	mov	r0, r4
   26688:	sub	sp, fp, #28
   2668c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   26690:	mov	r0, r5
   26694:	mov	r1, r7
   26698:	mov	r2, r6
   2669c:	mov	r3, #23
   266a0:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   266a4:	mov	r4, r0
   266a8:	mov	r0, r4
   266ac:	sub	sp, fp, #28
   266b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   266b4:	mov	r0, #1
   266b8:	str	r0, [r5, #12]
   266bc:	ldr	r0, [r5, #12]
   266c0:	cmp	r0, #0
   266c4:	bne	264f4 <main@@Base+0x10450>
   266c8:	b	26530 <main@@Base+0x1048c>
   266cc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   266d0:	add	fp, sp, #28
   266d4:	sub	sp, sp, #44	; 0x2c
   266d8:	mov	r7, r2
   266dc:	ldr	r2, [fp, #8]
   266e0:	mov	r5, r0
   266e4:	mov	r0, #0
   266e8:	mov	r8, r3
   266ec:	cmp	r1, r7
   266f0:	str	r0, [r2]
   266f4:	str	r0, [r2, #4]
   266f8:	beq	2671c <main@@Base+0x10678>
   266fc:	ldrb	r0, [r1]
   26700:	cmp	r0, #46	; 0x2e
   26704:	beq	26744 <main@@Base+0x106a0>
   26708:	cmp	r0, #34	; 0x22
   2670c:	bne	268d4 <main@@Base+0x10830>
   26710:	mov	r0, #0
   26714:	add	r1, r1, #1
   26718:	str	r0, [r5, #12]
   2671c:	ldr	r0, [r5, #12]
   26720:	cmp	r0, #0
   26724:	beq	26764 <main@@Base+0x106c0>
   26728:	mov	r6, r1
   2672c:	cmp	r6, r7
   26730:	bne	267a8 <main@@Base+0x10704>
   26734:	mov	r4, r7
   26738:	mov	r0, r4
   2673c:	sub	sp, fp, #28
   26740:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   26744:	mov	r0, r5
   26748:	mov	r2, r7
   2674c:	mov	r3, #5
   26750:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   26754:	mov	r1, r0
   26758:	ldr	r0, [r5, #12]
   2675c:	cmp	r0, #0
   26760:	bne	26728 <main@@Base+0x10684>
   26764:	sub	r0, r7, r1
   26768:	cmp	r0, #2
   2676c:	blt	26790 <main@@Base+0x106ec>
   26770:	ldrb	r0, [r1]
   26774:	cmp	r0, #32
   26778:	bhi	26728 <main@@Base+0x10684>
   2677c:	bne	26790 <main@@Base+0x106ec>
   26780:	mov	r6, r1
   26784:	ldrb	r0, [r6, #1]!
   26788:	cmp	r0, #32
   2678c:	bhi	267a0 <main@@Base+0x106fc>
   26790:	mov	r0, r5
   26794:	mov	r2, r7
   26798:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   2679c:	mov	r6, r0
   267a0:	cmp	r6, r7
   267a4:	beq	26734 <main@@Base+0x10690>
   267a8:	mov	r1, #0
   267ac:	add	r0, r8, #4
   267b0:	add	sl, sp, #32
   267b4:	add	r9, sp, #28
   267b8:	str	r8, [sp, #12]
   267bc:	str	r1, [sp, #20]
   267c0:	mov	r1, #0
   267c4:	str	r0, [sp, #8]
   267c8:	str	r1, [sp, #16]
   267cc:	ldr	r4, [r8]
   267d0:	mov	r8, r0
   267d4:	add	r0, sp, #24
   267d8:	mov	r1, r6
   267dc:	mov	r2, r7
   267e0:	mov	r3, r9
   267e4:	str	sl, [sp]
   267e8:	str	r0, [sp, #4]
   267ec:	mov	r0, r5
   267f0:	blx	r4
   267f4:	cmp	r0, r7
   267f8:	beq	268a0 <main@@Base+0x107fc>
   267fc:	mov	r4, r0
   26800:	cmp	r0, r6
   26804:	bne	26818 <main@@Base+0x10774>
   26808:	ldr	r4, [r8], #4
   2680c:	cmp	r4, #0
   26810:	bne	267d4 <main@@Base+0x10730>
   26814:	b	268b0 <main@@Base+0x1080c>
   26818:	ldr	r0, [sp, #28]
   2681c:	cmp	r0, #0
   26820:	beq	26848 <main@@Base+0x107a4>
   26824:	mov	r0, r5
   26828:	mov	r1, r4
   2682c:	mov	r2, r7
   26830:	mov	r3, #8
   26834:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   26838:	ldr	r8, [sp, #12]
   2683c:	cmp	r0, r7
   26840:	bne	26868 <main@@Base+0x107c4>
   26844:	b	268a0 <main@@Base+0x107fc>
   26848:	ldr	r0, [sp, #32]
   2684c:	str	r0, [sp, #20]
   26850:	ldr	r0, [sp, #36]	; 0x24
   26854:	str	r0, [sp, #16]
   26858:	mov	r0, r4
   2685c:	ldr	r8, [sp, #12]
   26860:	cmp	r0, r7
   26864:	beq	268a0 <main@@Base+0x107fc>
   26868:	ldr	r0, [fp, #8]
   2686c:	ldr	r3, [sp, #20]
   26870:	mov	r6, r4
   26874:	mov	r2, r0
   26878:	ldrd	r0, [r0]
   2687c:	adds	r0, r0, r3
   26880:	ldr	r3, [sp, #16]
   26884:	adc	r1, r1, r3
   26888:	strd	r0, [r2]
   2688c:	ldr	r0, [sp, #24]
   26890:	cmp	r0, #0
   26894:	ldr	r0, [sp, #8]
   26898:	bne	267cc <main@@Base+0x10728>
   2689c:	b	26738 <main@@Base+0x10694>
   268a0:	mov	r4, r7
   268a4:	mov	r0, r4
   268a8:	sub	sp, fp, #28
   268ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   268b0:	mov	r0, r5
   268b4:	mov	r1, r6
   268b8:	mov	r2, r7
   268bc:	mov	r3, #23
   268c0:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   268c4:	mov	r4, r0
   268c8:	mov	r0, r4
   268cc:	sub	sp, fp, #28
   268d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   268d4:	mov	r0, #1
   268d8:	str	r0, [r5, #12]
   268dc:	ldr	r0, [r5, #12]
   268e0:	cmp	r0, #0
   268e4:	bne	26728 <main@@Base+0x10684>
   268e8:	b	26764 <main@@Base+0x106c0>
   268ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   268f0:	add	fp, sp, #28
   268f4:	sub	sp, sp, #36	; 0x24
   268f8:	mov	r6, r2
   268fc:	ldr	r2, [fp, #8]
   26900:	mov	r5, r0
   26904:	mov	r0, #0
   26908:	mov	r8, r3
   2690c:	cmp	r1, r6
   26910:	str	r0, [r2]
   26914:	str	r0, [r2, #4]
   26918:	beq	2693c <main@@Base+0x10898>
   2691c:	ldrb	r0, [r1]
   26920:	cmp	r0, #46	; 0x2e
   26924:	beq	26964 <main@@Base+0x108c0>
   26928:	cmp	r0, #34	; 0x22
   2692c:	bne	26ab0 <main@@Base+0x10a0c>
   26930:	mov	r0, #0
   26934:	add	r1, r1, #1
   26938:	str	r0, [r5, #12]
   2693c:	ldr	r0, [r5, #12]
   26940:	cmp	r0, #0
   26944:	beq	26984 <main@@Base+0x108e0>
   26948:	mov	r7, r1
   2694c:	cmp	r7, r6
   26950:	bne	269c8 <main@@Base+0x10924>
   26954:	mov	r4, r6
   26958:	mov	r0, r4
   2695c:	sub	sp, fp, #28
   26960:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   26964:	mov	r0, r5
   26968:	mov	r2, r6
   2696c:	mov	r3, #5
   26970:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   26974:	mov	r1, r0
   26978:	ldr	r0, [r5, #12]
   2697c:	cmp	r0, #0
   26980:	bne	26948 <main@@Base+0x108a4>
   26984:	sub	r0, r6, r1
   26988:	cmp	r0, #2
   2698c:	blt	269b0 <main@@Base+0x1090c>
   26990:	ldrb	r0, [r1]
   26994:	cmp	r0, #32
   26998:	bhi	26948 <main@@Base+0x108a4>
   2699c:	bne	269b0 <main@@Base+0x1090c>
   269a0:	mov	r7, r1
   269a4:	ldrb	r0, [r7, #1]!
   269a8:	cmp	r0, #32
   269ac:	bhi	269c0 <main@@Base+0x1091c>
   269b0:	mov	r0, r5
   269b4:	mov	r2, r6
   269b8:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   269bc:	mov	r7, r0
   269c0:	cmp	r7, r6
   269c4:	beq	26954 <main@@Base+0x108b0>
   269c8:	add	r0, r8, #4
   269cc:	add	sl, sp, #24
   269d0:	add	r9, sp, #20
   269d4:	str	r8, [sp, #12]
   269d8:	str	r0, [sp, #8]
   269dc:	ldr	r4, [r8]
   269e0:	mov	r8, r0
   269e4:	add	r0, sp, #16
   269e8:	mov	r1, r7
   269ec:	mov	r2, r6
   269f0:	mov	r3, r9
   269f4:	str	sl, [sp]
   269f8:	str	r0, [sp, #4]
   269fc:	mov	r0, r5
   26a00:	blx	r4
   26a04:	cmp	r0, r6
   26a08:	beq	26a7c <main@@Base+0x109d8>
   26a0c:	mov	r4, r0
   26a10:	cmp	r0, r7
   26a14:	bne	26a28 <main@@Base+0x10984>
   26a18:	ldr	r4, [r8], #4
   26a1c:	cmp	r4, #0
   26a20:	bne	269e4 <main@@Base+0x10940>
   26a24:	b	26a8c <main@@Base+0x109e8>
   26a28:	ldr	r0, [sp, #24]
   26a2c:	ldr	r1, [sp, #28]
   26a30:	bl	48228 <flatcc_json_printer_clear@@Base+0x4e8>
   26a34:	ldr	r2, [fp, #8]
   26a38:	vmov	d17, r0, r1
   26a3c:	ldr	r3, [sp, #20]
   26a40:	ldr	r8, [sp, #12]
   26a44:	mov	r7, r2
   26a48:	vldr	d16, [r2]
   26a4c:	eor	r2, r1, #-2147483648	; 0x80000000
   26a50:	cmp	r3, #0
   26a54:	vmov	d18, r0, r2
   26a58:	vseleq.f64	d17, d17, d18
   26a5c:	vadd.f64	d16, d16, d17
   26a60:	vstr	d16, [r7]
   26a64:	mov	r7, r4
   26a68:	ldr	r0, [sp, #16]
   26a6c:	cmp	r0, #0
   26a70:	ldr	r0, [sp, #8]
   26a74:	bne	269dc <main@@Base+0x10938>
   26a78:	b	26958 <main@@Base+0x108b4>
   26a7c:	mov	r4, r6
   26a80:	mov	r0, r4
   26a84:	sub	sp, fp, #28
   26a88:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   26a8c:	mov	r0, r5
   26a90:	mov	r1, r7
   26a94:	mov	r2, r6
   26a98:	mov	r3, #23
   26a9c:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   26aa0:	mov	r4, r0
   26aa4:	mov	r0, r4
   26aa8:	sub	sp, fp, #28
   26aac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   26ab0:	mov	r0, #1
   26ab4:	str	r0, [r5, #12]
   26ab8:	ldr	r0, [r5, #12]
   26abc:	cmp	r0, #0
   26ac0:	bne	26948 <main@@Base+0x108a4>
   26ac4:	b	26984 <main@@Base+0x108e0>
   26ac8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   26acc:	add	fp, sp, #28
   26ad0:	sub	sp, sp, #12
   26ad4:	mov	sl, r1
   26ad8:	sub	r1, r2, r1
   26adc:	cmp	r1, #8
   26ae0:	movcs	r1, #8
   26ae4:	sub	r5, r1, #1
   26ae8:	cmp	r5, #7
   26aec:	bhi	26d1c <main@@Base+0x10c78>
   26af0:	str	r3, [sp, #8]
   26af4:	add	r7, pc, #32
   26af8:	mov	r8, #0
   26afc:	mov	ip, #0
   26b00:	mov	lr, #0
   26b04:	mov	r9, #0
   26b08:	mov	r6, #0
   26b0c:	mov	r1, #0
   26b10:	mov	r3, #0
   26b14:	mov	r4, #0
   26b18:	ldr	pc, [r7, r5, lsl #2]
   26b1c:	andeq	r6, r2, r0, lsl #23
   26b20:	andeq	r6, r2, r8, ror fp
   26b24:	andeq	r6, r2, r0, ror fp
   26b28:	andeq	r6, r2, r8, ror #22
   26b2c:	andeq	r6, r2, ip, asr fp
   26b30:	andeq	r6, r2, r0, asr fp
   26b34:	andeq	r6, r2, r0, asr #22
   26b38:	andeq	r6, r2, ip, lsr fp
   26b3c:	ldrb	ip, [sl, #7]
   26b40:	ldrb	r1, [sl, #6]
   26b44:	mov	lr, r8
   26b48:	orr	r1, ip, r1, lsl #8
   26b4c:	mov	r8, r1
   26b50:	ldrb	r1, [sl, #5]
   26b54:	mov	r9, lr
   26b58:	orr	r8, r8, r1, lsl #16
   26b5c:	ldrb	r1, [sl, #4]
   26b60:	mov	r6, r9
   26b64:	orr	r8, r8, r1, lsl #24
   26b68:	ldrb	r1, [sl, #3]
   26b6c:	orr	r1, r1, r6
   26b70:	ldrb	r3, [sl, #2]
   26b74:	orr	r3, r1, r3, lsl #8
   26b78:	ldrb	r1, [sl, #1]
   26b7c:	orr	r4, r3, r1, lsl #16
   26b80:	movw	r1, #28276	; 0x6e74
   26b84:	movw	r7, #20577	; 0x5061
   26b88:	ldr	r6, [fp, #12]
   26b8c:	movt	r1, #29285	; 0x7265
   26b90:	movt	r7, #18798	; 0x496e
   26b94:	eor	r3, r8, r1
   26b98:	ldrb	r1, [sl]
   26b9c:	orr	r1, r4, r1, lsl #24
   26ba0:	eor	r7, r1, r7
   26ba4:	orrs	r3, r3, r7
   26ba8:	bne	26cd0 <main@@Base+0x10c2c>
   26bac:	add	r8, sl, #8
   26bb0:	sub	r1, r2, r8
   26bb4:	cmp	r1, #8
   26bb8:	movcs	r1, #8
   26bbc:	sub	r7, r1, #1
   26bc0:	cmp	r7, #7
   26bc4:	bhi	26d1c <main@@Base+0x10c78>
   26bc8:	str	r0, [sp, #4]
   26bcc:	add	lr, pc, #32
   26bd0:	mov	r6, #0
   26bd4:	mov	r0, #0
   26bd8:	mov	r1, #0
   26bdc:	mov	r5, #0
   26be0:	mov	r4, #0
   26be4:	mov	r3, #0
   26be8:	mov	ip, #0
   26bec:	mov	r9, #0
   26bf0:	ldr	pc, [lr, r7, lsl #2]
   26bf4:	andeq	r6, r2, r8, asr ip
   26bf8:	andeq	r6, r2, r0, asr ip
   26bfc:	andeq	r6, r2, r8, asr #24
   26c00:	andeq	r6, r2, r0, asr #24
   26c04:	andeq	r6, r2, r4, lsr ip
   26c08:	andeq	r6, r2, r8, lsr #24
   26c0c:	andeq	r6, r2, r8, lsl ip
   26c10:	andeq	r6, r2, r4, lsl ip
   26c14:	ldrb	r0, [sl, #15]
   26c18:	ldrb	r1, [sl, #14]
   26c1c:	orr	r0, r0, r1, lsl #8
   26c20:	mov	r1, r6
   26c24:	mov	r6, r0
   26c28:	ldrb	r0, [sl, #13]
   26c2c:	mov	r5, r1
   26c30:	orr	r6, r6, r0, lsl #16
   26c34:	ldrb	r0, [sl, #12]
   26c38:	mov	r4, r5
   26c3c:	orr	r6, r6, r0, lsl #24
   26c40:	ldrb	r0, [sl, #11]
   26c44:	orr	r3, r0, r4
   26c48:	ldrb	r0, [sl, #10]
   26c4c:	orr	ip, r3, r0, lsl #8
   26c50:	ldrb	r0, [sl, #9]
   26c54:	orr	r9, ip, r0, lsl #16
   26c58:	ldrb	r1, [r8]
   26c5c:	movw	r0, #24931	; 0x6163
   26c60:	movw	r3, #28005	; 0x6d65
   26c64:	movt	r0, #29552	; 0x7370
   26c68:	movt	r3, #20065	; 0x4e61
   26c6c:	eor	r0, r6, r0
   26c70:	orr	r1, r9, r1, lsl #24
   26c74:	eor	r1, r1, r3
   26c78:	orrs	r0, r0, r1
   26c7c:	bne	26d1c <main@@Base+0x10c78>
   26c80:	add	r6, sl, #16
   26c84:	sub	r0, r2, r6
   26c88:	cmp	r0, #8
   26c8c:	movcs	r0, #8
   26c90:	sub	r0, r0, #1
   26c94:	cmp	r0, #7
   26c98:	bhi	26d1c <main@@Base+0x10c78>
   26c9c:	ldrb	r0, [r6]
   26ca0:	cmp	r0, #101	; 0x65
   26ca4:	bne	26d1c <main@@Base+0x10c78>
   26ca8:	ldr	r0, [fp, #12]
   26cac:	mov	r1, r6
   26cb0:	mov	r3, #1
   26cb4:	mov	r8, #1
   26cb8:	str	r0, [sp]
   26cbc:	ldr	r0, [sp, #4]
   26cc0:	bl	371c8 <flatcc_json_parser_match_constant@@Base>
   26cc4:	cmp	r0, r6
   26cc8:	bne	26cfc <main@@Base+0x10c58>
   26ccc:	b	26d1c <main@@Base+0x10c78>
   26cd0:	movw	r3, #20037	; 0x4e45
   26cd4:	movt	r3, #20047	; 0x4e4f
   26cd8:	teq	r1, r3
   26cdc:	bne	26d1c <main@@Base+0x10c78>
   26ce0:	mov	r1, sl
   26ce4:	mov	r3, #4
   26ce8:	str	r6, [sp]
   26cec:	bl	371c8 <flatcc_json_parser_match_constant@@Base>
   26cf0:	cmp	r0, sl
   26cf4:	beq	26d1c <main@@Base+0x10c78>
   26cf8:	mov	r8, #0
   26cfc:	mov	sl, r0
   26d00:	ldr	r0, [fp, #8]
   26d04:	mov	r1, #0
   26d08:	str	r8, [r0]
   26d0c:	str	r1, [r0, #4]
   26d10:	mov	r0, #0
   26d14:	ldr	r1, [sp, #8]
   26d18:	str	r0, [r1]
   26d1c:	mov	r0, sl
   26d20:	sub	sp, fp, #28
   26d24:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   26d28:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   26d2c:	add	fp, sp, #28
   26d30:	sub	sp, sp, #12
   26d34:	mov	r5, r1
   26d38:	sub	r1, r2, r1
   26d3c:	cmp	r1, #8
   26d40:	movcs	r1, #8
   26d44:	sub	r7, r1, #1
   26d48:	cmp	r7, #7
   26d4c:	bhi	26ec8 <main@@Base+0x10e24>
   26d50:	str	r3, [sp, #8]
   26d54:	add	r8, pc, #32
   26d58:	mov	lr, #0
   26d5c:	mov	ip, #0
   26d60:	mov	r9, #0
   26d64:	mov	sl, #0
   26d68:	mov	r1, #0
   26d6c:	mov	r3, #0
   26d70:	mov	r4, #0
   26d74:	mov	r6, #0
   26d78:	ldr	pc, [r8, r7, lsl #2]
   26d7c:	andeq	r6, r2, r0, ror #27
   26d80:	ldrdeq	r6, [r2], -r8
   26d84:	ldrdeq	r6, [r2], -r0
   26d88:	andeq	r6, r2, r8, asr #27
   26d8c:			; <UNDEFINED> instruction: 0x00026dbc
   26d90:			; <UNDEFINED> instruction: 0x00026db0
   26d94:	andeq	r6, r2, r0, lsr #27
   26d98:	muleq	r2, ip, sp
   26d9c:	ldrb	ip, [r5, #7]
   26da0:	ldrb	r1, [r5, #6]
   26da4:	mov	r9, lr
   26da8:	orr	r1, ip, r1, lsl #8
   26dac:	mov	lr, r1
   26db0:	ldrb	r1, [r5, #5]
   26db4:	mov	sl, r9
   26db8:	orr	lr, lr, r1, lsl #16
   26dbc:	ldrb	r1, [r5, #4]
   26dc0:	orr	lr, lr, r1, lsl #24
   26dc4:	mov	r1, sl
   26dc8:	ldrb	r3, [r5, #3]
   26dcc:	orr	r3, r3, r1
   26dd0:	ldrb	r1, [r5, #2]
   26dd4:	orr	r4, r3, r1, lsl #8
   26dd8:	ldrb	r1, [r5, #1]
   26ddc:	orr	r6, r4, r1, lsl #16
   26de0:	ldrb	r1, [r5]
   26de4:	ldr	r3, [fp, #12]
   26de8:	ldr	r8, [fp, #8]
   26dec:	orr	r1, r6, r1, lsl #24
   26df0:	movw	r6, #30769	; 0x7831
   26df4:	movt	r6, #26725	; 0x6865
   26df8:	cmp	r1, r6
   26dfc:	bhi	26e2c <main@@Base+0x10d88>
   26e00:	teq	r1, r6
   26e04:	bne	26ec8 <main@@Base+0x10e24>
   26e08:	str	r3, [sp]
   26e0c:	mov	r1, r5
   26e10:	mov	r3, #4
   26e14:	bl	371c8 <flatcc_json_parser_match_constant@@Base>
   26e18:	cmp	r0, r5
   26e1c:	beq	26ec8 <main@@Base+0x10e24>
   26e20:	mov	r1, #0
   26e24:	mov	r2, #3
   26e28:	b	26eb4 <main@@Base+0x10e10>
   26e2c:	lsr	r4, lr, #16
   26e30:	movw	r7, #25959	; 0x6567
   26e34:	movw	r6, #26725	; 0x6865
   26e38:	orr	r4, r4, r1, lsl #16
   26e3c:	movt	r7, #30830	; 0x786e
   26e40:	eor	r6, r6, r1, lsr #16
   26e44:	eor	r7, r4, r7
   26e48:	orrs	r7, r7, r6
   26e4c:	bne	26e80 <main@@Base+0x10ddc>
   26e50:	str	r3, [sp]
   26e54:	mov	r1, r5
   26e58:	mov	r3, #6
   26e5c:	bl	371c8 <flatcc_json_parser_match_constant@@Base>
   26e60:	cmp	r0, r5
   26e64:	beq	26ec8 <main@@Base+0x10e24>
   26e68:	mvn	r2, #1
   26e6c:	mvn	r1, #0
   26e70:	str	r2, [r8]
   26e74:	str	r1, [r8, #4]
   26e78:	mov	r1, #1
   26e7c:	b	26ebc <main@@Base+0x10e18>
   26e80:	movw	r7, #30770	; 0x7832
   26e84:	movt	r7, #26725	; 0x6865
   26e88:	teq	r1, r7
   26e8c:	bne	26ec8 <main@@Base+0x10e24>
   26e90:	str	r3, [sp]
   26e94:	mov	r1, r5
   26e98:	mov	r3, #4
   26e9c:	bl	371c8 <flatcc_json_parser_match_constant@@Base>
   26ea0:	cmp	r0, r5
   26ea4:	beq	26ec8 <main@@Base+0x10e24>
   26ea8:	movw	r2, #48815	; 0xbeaf
   26eac:	mov	r1, #0
   26eb0:	movt	r2, #32431	; 0x7eaf
   26eb4:	str	r2, [r8]
   26eb8:	str	r1, [r8, #4]
   26ebc:	ldr	r2, [sp, #8]
   26ec0:	mov	r5, r0
   26ec4:	str	r1, [r2]
   26ec8:	mov	r0, r5
   26ecc:	sub	sp, fp, #28
   26ed0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   26ed4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   26ed8:	add	fp, sp, #28
   26edc:	sub	sp, sp, #12
   26ee0:	mov	sl, r1
   26ee4:	sub	r1, r2, r1
   26ee8:	cmp	r1, #8
   26eec:	movcs	r1, #8
   26ef0:	sub	r4, r1, #1
   26ef4:	cmp	r4, #7
   26ef8:	bhi	270b8 <main@@Base+0x11014>
   26efc:	str	r3, [sp, #8]
   26f00:	add	r8, pc, #32
   26f04:	mov	r9, #0
   26f08:	mov	ip, #0
   26f0c:	mov	lr, #0
   26f10:	mov	r7, #0
   26f14:	mov	r6, #0
   26f18:	mov	r3, #0
   26f1c:	mov	r1, #0
   26f20:	mov	r5, #0
   26f24:	ldr	pc, [r8, r4, lsl #2]
   26f28:	andeq	r6, r2, ip, lsl #31
   26f2c:	andeq	r6, r2, r4, lsl #31
   26f30:	andeq	r6, r2, ip, ror pc
   26f34:	andeq	r6, r2, r4, ror pc
   26f38:	andeq	r6, r2, r8, ror #30
   26f3c:	andeq	r6, r2, ip, asr pc
   26f40:	andeq	r6, r2, ip, asr #30
   26f44:	andeq	r6, r2, r8, asr #30
   26f48:	ldrb	ip, [sl, #7]
   26f4c:	ldrb	r1, [sl, #6]
   26f50:	mov	lr, r9
   26f54:	orr	r1, ip, r1, lsl #8
   26f58:	mov	r9, r1
   26f5c:	ldrb	r1, [sl, #5]
   26f60:	mov	r7, lr
   26f64:	orr	r9, r9, r1, lsl #16
   26f68:	ldrb	r1, [sl, #4]
   26f6c:	mov	r6, r7
   26f70:	orr	r9, r9, r1, lsl #24
   26f74:	ldrb	r1, [sl, #3]
   26f78:	orr	r3, r1, r6
   26f7c:	ldrb	r1, [sl, #2]
   26f80:	orr	r1, r3, r1, lsl #8
   26f84:	ldrb	r3, [sl, #1]
   26f88:	orr	r5, r1, r3, lsl #16
   26f8c:	ldrb	r1, [sl]
   26f90:	ldr	r3, [fp, #12]
   26f94:	ldr	r6, [fp, #8]
   26f98:	orr	r7, r5, r1, lsl #24
   26f9c:	movw	r1, #29745	; 0x7431
   26fa0:	movt	r1, #26990	; 0x696e
   26fa4:	cmp	r7, r1
   26fa8:	bhi	26fd8 <main@@Base+0x10f34>
   26fac:	teq	r7, r1
   26fb0:	bne	270b8 <main@@Base+0x11014>
   26fb4:	str	r3, [sp]
   26fb8:	mov	r1, sl
   26fbc:	mov	r3, #4
   26fc0:	bl	371c8 <flatcc_json_parser_match_constant@@Base>
   26fc4:	cmp	r0, sl
   26fc8:	beq	270b8 <main@@Base+0x11014>
   26fcc:	mov	r1, #0
   26fd0:	mov	r2, #2
   26fd4:	b	27024 <main@@Base+0x10f80>
   26fd8:	movw	r4, #0
   26fdc:	movw	r1, #29806	; 0x746e
   26fe0:	movt	r4, #25959	; 0x6567
   26fe4:	movt	r1, #26990	; 0x696e
   26fe8:	subs	r5, r9, r4
   26fec:	sbcs	r5, r7, r1
   26ff0:	bcs	27030 <main@@Base+0x10f8c>
   26ff4:	movw	r1, #29746	; 0x7432
   26ff8:	movt	r1, #26990	; 0x696e
   26ffc:	teq	r7, r1
   27000:	bne	270b8 <main@@Base+0x11014>
   27004:	str	r3, [sp]
   27008:	mov	r1, sl
   2700c:	mov	r3, #4
   27010:	bl	371c8 <flatcc_json_parser_match_constant@@Base>
   27014:	cmp	r0, sl
   27018:	beq	270b8 <main@@Base+0x11014>
   2701c:	mov	r1, #0
   27020:	mov	r2, #42	; 0x2a
   27024:	str	r2, [r6]
   27028:	str	r1, [r6, #4]
   2702c:	b	270ac <main@@Base+0x11008>
   27030:	eor	r1, r7, r1
   27034:	add	r7, r4, #12800	; 0x3200
   27038:	bic	r5, r9, #255	; 0xff
   2703c:	eor	r7, r5, r7
   27040:	orrs	r7, r7, r1
   27044:	bne	27070 <main@@Base+0x10fcc>
   27048:	str	r3, [sp]
   2704c:	mov	r1, sl
   27050:	mov	r3, #7
   27054:	bl	371c8 <flatcc_json_parser_match_constant@@Base>
   27058:	cmp	r0, sl
   2705c:	beq	270b8 <main@@Base+0x11014>
   27060:	mvn	r2, #1
   27064:	mvn	r1, #0
   27068:	orr	r2, r2, #1
   2706c:	b	270a0 <main@@Base+0x10ffc>
   27070:	bfc	r9, #0, #16
   27074:	eor	r7, r9, r4
   27078:	orrs	r1, r7, r1
   2707c:	bne	270b8 <main@@Base+0x11014>
   27080:	str	r3, [sp]
   27084:	mov	r1, sl
   27088:	mov	r3, #6
   2708c:	bl	371c8 <flatcc_json_parser_match_constant@@Base>
   27090:	cmp	r0, sl
   27094:	beq	270b8 <main@@Base+0x11014>
   27098:	mvn	r1, #0
   2709c:	mvn	r2, #1
   270a0:	str	r2, [r6]
   270a4:	str	r1, [r6, #4]
   270a8:	mov	r1, #1
   270ac:	ldr	r2, [sp, #8]
   270b0:	mov	sl, r0
   270b4:	str	r1, [r2]
   270b8:	mov	r0, sl
   270bc:	sub	sp, fp, #28
   270c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   270c4:	push	{r4, r5, r6, r7, fp, lr}
   270c8:	add	fp, sp, #16
   270cc:	sub	sp, sp, #8
   270d0:	mov	r5, r1
   270d4:	sub	r1, r2, r1
   270d8:	mov	r4, r3
   270dc:	cmp	r1, #8
   270e0:	movcs	r1, #8
   270e4:	sub	r3, r1, #1
   270e8:	cmp	r3, #7
   270ec:	bhi	27200 <main@@Base+0x1115c>
   270f0:	add	r7, pc, #4
   270f4:	mov	r1, #0
   270f8:	ldr	pc, [r7, r3, lsl #2]
   270fc:	andeq	r7, r2, r4, lsr r1
   27100:	andeq	r7, r2, ip, lsr #2
   27104:	andeq	r7, r2, r4, lsr #2
   27108:	andeq	r7, r2, ip, lsl r1
   2710c:	andeq	r7, r2, ip, lsl r1
   27110:	andeq	r7, r2, ip, lsl r1
   27114:	andeq	r7, r2, ip, lsl r1
   27118:	andeq	r7, r2, ip, lsl r1
   2711c:	ldrb	r3, [r5, #3]
   27120:	orr	r1, r3, r1
   27124:	ldrb	r3, [r5, #2]
   27128:	orr	r1, r1, r3, lsl #8
   2712c:	ldrb	r3, [r5, #1]
   27130:	orr	r1, r1, r3, lsl #16
   27134:	ldrb	r6, [r5]
   27138:	ldr	r3, [fp, #12]
   2713c:	ldr	r7, [fp, #8]
   27140:	orr	r1, r1, r6, lsl #24
   27144:	movw	r6, #26417	; 0x6731
   27148:	movt	r6, #28261	; 0x6e65
   2714c:	cmp	r1, r6
   27150:	bhi	27180 <main@@Base+0x110dc>
   27154:	teq	r1, r6
   27158:	bne	27200 <main@@Base+0x1115c>
   2715c:	str	r3, [sp]
   27160:	mov	r1, r5
   27164:	mov	r3, #4
   27168:	bl	371c8 <flatcc_json_parser_match_constant@@Base>
   2716c:	cmp	r0, r5
   27170:	beq	27200 <main@@Base+0x1115c>
   27174:	mvn	r1, #0
   27178:	mvn	r2, #11
   2717c:	b	271ec <main@@Base+0x11148>
   27180:	movw	r6, #26418	; 0x6732
   27184:	movt	r6, #28261	; 0x6e65
   27188:	teq	r1, r6
   2718c:	beq	271c8 <main@@Base+0x11124>
   27190:	movw	r6, #26419	; 0x6733
   27194:	movt	r6, #28261	; 0x6e65
   27198:	teq	r1, r6
   2719c:	bne	27200 <main@@Base+0x1115c>
   271a0:	str	r3, [sp]
   271a4:	mov	r1, r5
   271a8:	mov	r3, #4
   271ac:	bl	371c8 <flatcc_json_parser_match_constant@@Base>
   271b0:	cmp	r0, r5
   271b4:	beq	27200 <main@@Base+0x1115c>
   271b8:	mvn	r2, #11
   271bc:	mvn	r1, #0
   271c0:	orr	r2, r2, #2
   271c4:	b	271ec <main@@Base+0x11148>
   271c8:	str	r3, [sp]
   271cc:	mov	r1, r5
   271d0:	mov	r3, #4
   271d4:	bl	371c8 <flatcc_json_parser_match_constant@@Base>
   271d8:	cmp	r0, r5
   271dc:	beq	27200 <main@@Base+0x1115c>
   271e0:	mvn	r2, #11
   271e4:	mvn	r1, #0
   271e8:	orr	r2, r2, #1
   271ec:	str	r2, [r7]
   271f0:	str	r1, [r7, #4]
   271f4:	mov	r1, #1
   271f8:	mov	r5, r0
   271fc:	str	r1, [r4]
   27200:	mov	r0, r5
   27204:	sub	sp, fp, #16
   27208:	pop	{r4, r5, r6, r7, fp, pc}
   2720c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   27210:	add	fp, sp, #28
   27214:	sub	sp, sp, #12
   27218:	mov	sl, r1
   2721c:	sub	r1, r2, r1
   27220:	cmp	r1, #8
   27224:	movcs	r1, #8
   27228:	sub	r6, r1, #1
   2722c:	cmp	r6, #7
   27230:	bhi	274ac <main@@Base+0x11408>
   27234:	str	r3, [sp, #8]
   27238:	add	r9, pc, #32
   2723c:	mov	r1, #0
   27240:	mov	ip, #0
   27244:	mov	lr, #0
   27248:	mov	r4, #0
   2724c:	mov	r7, #0
   27250:	mov	r3, #0
   27254:	mov	r5, #0
   27258:	mov	r8, #0
   2725c:	ldr	pc, [r9, r6, lsl #2]
   27260:	andeq	r7, r2, r4, asr #5
   27264:			; <UNDEFINED> instruction: 0x000272bc
   27268:			; <UNDEFINED> instruction: 0x000272b4
   2726c:	andeq	r7, r2, ip, lsr #5
   27270:	andeq	r7, r2, r0, lsr #5
   27274:	muleq	r2, r4, r2
   27278:	andeq	r7, r2, r4, lsl #5
   2727c:	andeq	r7, r2, r0, lsl #5
   27280:	ldrb	ip, [sl, #7]
   27284:	ldrb	r3, [sl, #6]
   27288:	mov	lr, r1
   2728c:	orr	r3, ip, r3, lsl #8
   27290:	mov	r1, r3
   27294:	ldrb	r3, [sl, #5]
   27298:	mov	r4, lr
   2729c:	orr	r1, r1, r3, lsl #16
   272a0:	ldrb	r3, [sl, #4]
   272a4:	mov	r7, r4
   272a8:	orr	r1, r1, r3, lsl #24
   272ac:	ldrb	r3, [sl, #3]
   272b0:	orr	r3, r3, r7
   272b4:	ldrb	r7, [sl, #2]
   272b8:	orr	r5, r3, r7, lsl #8
   272bc:	ldrb	r3, [sl, #1]
   272c0:	orr	r8, r5, r3, lsl #16
   272c4:	ldrb	r3, [sl]
   272c8:	ldr	lr, [fp, #12]
   272cc:	ldr	r9, [fp, #8]
   272d0:	orr	r6, r8, r3, lsl #24
   272d4:	movw	r3, #20036	; 0x4e44
   272d8:	movt	r3, #20047	; 0x4e4f
   272dc:	cmp	r6, r3
   272e0:	bhi	27340 <main@@Base+0x1129c>
   272e4:	movw	r7, #28160	; 0x6e00
   272e8:	movw	r4, #28523	; 0x6f6b
   272ec:	and	r3, r1, #-16777216	; 0xff000000
   272f0:	movt	r7, #18017	; 0x4661
   272f4:	movt	r4, #17007	; 0x426f
   272f8:	subs	r5, r1, r7
   272fc:	sbcs	r5, r6, r4
   27300:	bcs	2738c <main@@Base+0x112e8>
   27304:	movw	r1, #27756	; 0x6c6c
   27308:	eor	r3, r3, #1694498816	; 0x65000000
   2730c:	movt	r1, #16997	; 0x4265
   27310:	eor	r1, r6, r1
   27314:	orrs	r1, r3, r1
   27318:	bne	274ac <main@@Base+0x11408>
   2731c:	mov	r1, sl
   27320:	mov	r3, #5
   27324:	str	lr, [sp]
   27328:	bl	371c8 <flatcc_json_parser_match_constant@@Base>
   2732c:	cmp	r0, sl
   27330:	beq	274ac <main@@Base+0x11408>
   27334:	mov	r1, #0
   27338:	mov	r2, #9
   2733c:	b	27498 <main@@Base+0x113f4>
   27340:	movw	r7, #26725	; 0x6865
   27344:	mvn	r3, #-1912602624	; 0x8e000000
   27348:	movt	r7, #20340	; 0x4f74
   2734c:	subs	r3, r3, r1
   27350:	sbcs	r3, r7, r6
   27354:	bcc	273c8 <main@@Base+0x11324>
   27358:	movw	r1, #20037	; 0x4e45
   2735c:	movt	r1, #20047	; 0x4e4f
   27360:	teq	r6, r1
   27364:	bne	274ac <main@@Base+0x11408>
   27368:	mov	r1, sl
   2736c:	mov	r3, #4
   27370:	str	lr, [sp]
   27374:	bl	371c8 <flatcc_json_parser_match_constant@@Base>
   27378:	cmp	r0, sl
   2737c:	beq	274ac <main@@Base+0x11408>
   27380:	mov	r1, #0
   27384:	str	r1, [r9]
   27388:	b	2749c <main@@Base+0x113f8>
   2738c:	movw	r5, #19553	; 0x4c61
   27390:	eor	r3, r3, #1845493760	; 0x6e000000
   27394:	movt	r5, #19829	; 0x4d75
   27398:	eor	r5, r6, r5
   2739c:	orrs	r3, r3, r5
   273a0:	bne	2741c <main@@Base+0x11378>
   273a4:	mov	r1, sl
   273a8:	mov	r3, #5
   273ac:	str	lr, [sp]
   273b0:	bl	371c8 <flatcc_json_parser_match_constant@@Base>
   273b4:	cmp	r0, sl
   273b8:	beq	274ac <main@@Base+0x11408>
   273bc:	mov	r1, #0
   273c0:	mov	r2, #2
   273c4:	b	27498 <main@@Base+0x113f4>
   273c8:	movw	r4, #25964	; 0x656c
   273cc:	movw	ip, #28789	; 0x7075
   273d0:	movt	r4, #28282	; 0x6e7a
   273d4:	movt	ip, #21089	; 0x5261
   273d8:	subs	r3, r1, r4
   273dc:	sbcs	r3, r6, ip
   273e0:	bcs	27454 <main@@Base+0x113b0>
   273e4:	and	r1, r1, #-16777216	; 0xff000000
   273e8:	eor	r3, r6, r7
   273ec:	eor	r1, r1, #1912602624	; 0x72000000
   273f0:	orrs	r1, r1, r3
   273f4:	bne	274ac <main@@Base+0x11408>
   273f8:	mov	r1, sl
   273fc:	mov	r3, #5
   27400:	str	lr, [sp]
   27404:	bl	371c8 <flatcc_json_parser_match_constant@@Base>
   27408:	cmp	r0, sl
   2740c:	beq	274ac <main@@Base+0x11408>
   27410:	mov	r1, #0
   27414:	mov	r2, #11
   27418:	b	27498 <main@@Base+0x113f4>
   2741c:	bic	r1, r1, #255	; 0xff
   27420:	eor	r3, r6, r4
   27424:	eor	r1, r1, r7
   27428:	orrs	r1, r1, r3
   2742c:	bne	274ac <main@@Base+0x11408>
   27430:	mov	r1, sl
   27434:	mov	r3, #7
   27438:	str	lr, [sp]
   2743c:	bl	371c8 <flatcc_json_parser_match_constant@@Base>
   27440:	cmp	r0, sl
   27444:	beq	274ac <main@@Base+0x11408>
   27448:	mov	r1, #0
   2744c:	mov	r2, #10
   27450:	b	27498 <main@@Base+0x113f4>
   27454:	lsr	r5, r1, #16
   27458:	movw	r7, #25956	; 0x6564
   2745c:	movw	r3, #21870	; 0x556e
   27460:	orr	r5, r5, r6, lsl #16
   27464:	movt	r7, #30067	; 0x7573
   27468:	eor	r3, r3, r6, lsr #16
   2746c:	eor	r5, r5, r7
   27470:	orrs	r3, r5, r3
   27474:	bne	274b8 <main@@Base+0x11414>
   27478:	mov	r1, sl
   2747c:	mov	r3, #6
   27480:	str	lr, [sp]
   27484:	bl	371c8 <flatcc_json_parser_match_constant@@Base>
   27488:	cmp	r0, sl
   2748c:	beq	274ac <main@@Base+0x11408>
   27490:	mov	r1, #0
   27494:	mov	r2, #255	; 0xff
   27498:	str	r2, [r9]
   2749c:	str	r1, [r9, #4]
   274a0:	ldr	r2, [sp, #8]
   274a4:	str	r1, [r2]
   274a8:	mov	sl, r0
   274ac:	mov	r0, sl
   274b0:	sub	sp, fp, #28
   274b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   274b8:	eor	r1, r1, r4
   274bc:	eor	r3, r6, ip
   274c0:	orrs	r1, r1, r3
   274c4:	bne	274ac <main@@Base+0x11408>
   274c8:	mov	r1, sl
   274cc:	mov	r3, #8
   274d0:	str	lr, [sp]
   274d4:	mov	r4, #8
   274d8:	bl	371c8 <flatcc_json_parser_match_constant@@Base>
   274dc:	cmp	r0, sl
   274e0:	beq	274ac <main@@Base+0x11408>
   274e4:	mov	r5, #0
   274e8:	strd	r4, [r9]
   274ec:	ldr	r1, [sp, #8]
   274f0:	str	r5, [r1]
   274f4:	b	274a8 <main@@Base+0x11404>
   274f8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   274fc:	add	fp, sp, #28
   27500:	sub	sp, sp, #36	; 0x24
   27504:	mov	r5, r0
   27508:	mov	r0, #0
   2750c:	mov	r4, r1
   27510:	mov	r1, #4
   27514:	mov	r7, r3
   27518:	mov	r8, r2
   2751c:	str	r0, [r3]
   27520:	ldr	r0, [r5]
   27524:	bl	31fa8 <flatcc_builder_start_table@@Base>
   27528:	cmp	r0, #0
   2752c:	beq	27554 <main@@Base+0x114b0>
   27530:	mov	r0, r5
   27534:	mov	r1, r4
   27538:	mov	r2, r8
   2753c:	mov	r3, #33	; 0x21
   27540:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   27544:	mov	r4, r0
   27548:	mov	r0, r4
   2754c:	sub	sp, fp, #28
   27550:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   27554:	add	r0, sp, #28
   27558:	mov	r1, r4
   2755c:	mov	r2, r8
   27560:	mov	r3, #1
   27564:	str	r0, [sp]
   27568:	mov	r0, r5
   2756c:	bl	398a0 <flatcc_json_parser_prepare_unions@@Base>
   27570:	cmp	r0, r8
   27574:	beq	27530 <main@@Base+0x1148c>
   27578:	cmp	r4, r8
   2757c:	beq	275bc <main@@Base+0x11518>
   27580:	ldrb	r0, [r4]
   27584:	cmp	r0, #123	; 0x7b
   27588:	bne	275bc <main@@Base+0x11518>
   2758c:	add	r1, r4, #1
   27590:	sub	r0, r8, r1
   27594:	cmp	r0, #2
   27598:	blt	27620 <main@@Base+0x1157c>
   2759c:	ldrb	r0, [r1]
   275a0:	cmp	r0, #32
   275a4:	bls	27610 <main@@Base+0x1156c>
   275a8:	mov	r4, r1
   275ac:	cmp	r4, r8
   275b0:	mov	r2, r8
   275b4:	bne	2763c <main@@Base+0x11598>
   275b8:	b	2767c <main@@Base+0x115d8>
   275bc:	mov	r0, r5
   275c0:	mov	r1, r4
   275c4:	mov	r2, r8
   275c8:	mov	r3, #21
   275cc:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   275d0:	mov	r4, r0
   275d4:	ldr	r0, [r5, #24]
   275d8:	cmp	r0, #0
   275dc:	bne	27530 <main@@Base+0x1148c>
   275e0:	ldr	r3, [sp, #28]
   275e4:	mov	r0, r5
   275e8:	mov	r1, r4
   275ec:	mov	r2, r8
   275f0:	bl	39930 <flatcc_json_parser_finalize_unions@@Base>
   275f4:	mov	r4, r0
   275f8:	ldr	r0, [r5]
   275fc:	bl	32950 <flatcc_builder_end_table@@Base>
   27600:	cmp	r0, #0
   27604:	str	r0, [r7]
   27608:	bne	27548 <main@@Base+0x114a4>
   2760c:	b	27530 <main@@Base+0x1148c>
   27610:	bne	27620 <main@@Base+0x1157c>
   27614:	ldrb	r0, [r4, #2]!
   27618:	cmp	r0, #32
   2761c:	bhi	27630 <main@@Base+0x1158c>
   27620:	mov	r0, r5
   27624:	mov	r2, r8
   27628:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   2762c:	mov	r4, r0
   27630:	cmp	r4, r8
   27634:	mov	r2, r8
   27638:	beq	2767c <main@@Base+0x115d8>
   2763c:	ldrb	r0, [r4]
   27640:	cmp	r0, #125	; 0x7d
   27644:	bne	27678 <main@@Base+0x115d4>
   27648:	add	r1, r4, #1
   2764c:	sub	r0, r8, r1
   27650:	cmp	r0, #2
   27654:	blt	27fb4 <main@@Base+0x11f10>
   27658:	ldrb	r0, [r1]
   2765c:	cmp	r0, #32
   27660:	bhi	27f6c <main@@Base+0x11ec8>
   27664:	bne	27fb4 <main@@Base+0x11f10>
   27668:	ldrb	r0, [r4, #2]!
   2766c:	cmp	r0, #32
   27670:	bhi	275d4 <main@@Base+0x11530>
   27674:	b	27fb4 <main@@Base+0x11f10>
   27678:	mov	r2, r4
   2767c:	str	r7, [sp, #20]
   27680:	cmp	r2, r8
   27684:	mov	r9, r8
   27688:	beq	276d4 <main@@Base+0x11630>
   2768c:	ldrb	r0, [r2]
   27690:	cmp	r0, #46	; 0x2e
   27694:	beq	276ac <main@@Base+0x11608>
   27698:	cmp	r0, #34	; 0x22
   2769c:	bne	276c8 <main@@Base+0x11624>
   276a0:	mov	r0, #0
   276a4:	add	r9, r2, #1
   276a8:	b	276d0 <main@@Base+0x1162c>
   276ac:	mov	r1, r2
   276b0:	mov	r0, r5
   276b4:	mov	r2, r8
   276b8:	mov	r3, #5
   276bc:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   276c0:	mov	r9, r0
   276c4:	b	276d4 <main@@Base+0x11630>
   276c8:	mov	r0, #1
   276cc:	mov	r9, r2
   276d0:	str	r0, [r5, #12]
   276d4:	sub	r1, r8, r9
   276d8:	mov	r0, #8
   276dc:	cmp	r1, #8
   276e0:	movcc	r0, r1
   276e4:	sub	r2, r0, #1
   276e8:	cmp	r2, #7
   276ec:	bhi	27ef8 <main@@Base+0x11e54>
   276f0:	str	r1, [sp, #24]
   276f4:	add	r0, pc, #36	; 0x24
   276f8:	mov	lr, r5
   276fc:	mov	sl, #0
   27700:	mov	ip, #0
   27704:	mov	r6, #0
   27708:	mov	r1, #0
   2770c:	mov	r3, #0
   27710:	mov	r5, #0
   27714:	mov	r7, #0
   27718:	mov	r4, #0
   2771c:	ldr	pc, [r0, r2, lsl #2]
   27720:	andeq	r7, r2, r4, lsl #15
   27724:	andeq	r7, r2, ip, ror r7
   27728:	andeq	r7, r2, r4, ror r7
   2772c:	andeq	r7, r2, ip, ror #14
   27730:	andeq	r7, r2, r0, ror #14
   27734:	andeq	r7, r2, r4, asr r7
   27738:	andeq	r7, r2, r4, asr #14
   2773c:	andeq	r7, r2, r0, asr #14
   27740:	ldrb	ip, [r9, #7]
   27744:	ldrb	r0, [r9, #6]
   27748:	mov	r6, sl
   2774c:	orr	r0, ip, r0, lsl #8
   27750:	mov	sl, r0
   27754:	ldrb	r0, [r9, #5]
   27758:	mov	r1, r6
   2775c:	orr	sl, sl, r0, lsl #16
   27760:	ldrb	r0, [r9, #4]
   27764:	mov	r3, r1
   27768:	orr	sl, sl, r0, lsl #24
   2776c:	ldrb	r0, [r9, #3]
   27770:	orr	r5, r0, r3
   27774:	ldrb	r0, [r9, #2]
   27778:	orr	r7, r5, r0, lsl #8
   2777c:	ldrb	r0, [r9, #1]
   27780:	orr	r4, r7, r0, lsl #16
   27784:	movw	r2, #30976	; 0x7900
   27788:	movt	r2, #24942	; 0x616e
   2778c:	add	r0, r2, #95	; 0x5f
   27790:	eor	r1, sl, r0
   27794:	ldrb	r0, [r9]
   27798:	orr	r4, r4, r0, lsl #24
   2779c:	movw	r0, #28281	; 0x6e79
   277a0:	movt	r0, #28001	; 0x6d61
   277a4:	eor	r0, r4, r0
   277a8:	orrs	r1, r1, r0
   277ac:	bne	27874 <main@@Base+0x117d0>
   277b0:	add	r6, r9, #8
   277b4:	ldr	r7, [sp, #20]
   277b8:	mov	r1, #8
   277bc:	mov	r5, lr
   277c0:	sub	r0, r8, r6
   277c4:	cmp	r0, #8
   277c8:	movcc	r1, r0
   277cc:	sub	r2, r1, #1
   277d0:	cmp	r2, #7
   277d4:	bhi	27b6c <main@@Base+0x11ac8>
   277d8:	add	r3, pc, #4
   277dc:	mov	r1, #0
   277e0:	ldr	pc, [r3, r2, lsl #2]
   277e4:	andeq	r7, r2, r8, lsl r8
   277e8:	andeq	r7, r2, r0, lsl r8
   277ec:	andeq	r7, r2, r8, lsl #16
   277f0:	andeq	r7, r2, r4, lsl #16
   277f4:	andeq	r7, r2, r4, lsl #16
   277f8:	andeq	r7, r2, r4, lsl #16
   277fc:	andeq	r7, r2, r4, lsl #16
   27800:	andeq	r7, r2, r4, lsl #16
   27804:	ldrb	r1, [r9, #11]
   27808:	ldrb	r2, [r9, #10]
   2780c:	orr	r1, r1, r2, lsl #8
   27810:	ldrb	r2, [r9, #9]
   27814:	orr	r1, r1, r2, lsl #16
   27818:	ldrb	r2, [r6]
   2781c:	orr	r1, r1, r2, lsl #24
   27820:	movw	r2, #28773	; 0x7065
   27824:	movt	r2, #29817	; 0x7479
   27828:	teq	r1, r2
   2782c:	bne	27b6c <main@@Base+0x11ac8>
   27830:	cmp	r0, #5
   27834:	blt	27b6c <main@@Base+0x11ac8>
   27838:	mov	r1, r9
   2783c:	ldr	r2, [r5, #12]
   27840:	ldrb	r0, [r1, #12]!
   27844:	cmp	r2, #0
   27848:	beq	27910 <main@@Base+0x1186c>
   2784c:	cmp	r0, #33	; 0x21
   27850:	bcc	2785c <main@@Base+0x117b8>
   27854:	cmp	r0, #58	; 0x3a
   27858:	bne	27b6c <main@@Base+0x11ac8>
   2785c:	mov	r0, #0
   27860:	str	r0, [r5, #12]
   27864:	sub	r0, r8, r1
   27868:	cmp	r0, #2
   2786c:	bge	27928 <main@@Base+0x11884>
   27870:	b	27b20 <main@@Base+0x11a7c>
   27874:	ldr	r6, [sp, #24]
   27878:	bic	r1, sl, #255	; 0xff
   2787c:	mov	r5, lr
   27880:	eor	r1, r1, r2
   27884:	orrs	r0, r1, r0
   27888:	bne	279a8 <main@@Base+0x11904>
   2788c:	cmp	r6, #8
   27890:	mov	r1, r9
   27894:	blt	27cac <main@@Base+0x11c08>
   27898:	mov	r2, r9
   2789c:	ldr	r1, [r5, #12]
   278a0:	ldrb	r0, [r2, #7]!
   278a4:	cmp	r1, #0
   278a8:	beq	278d8 <main@@Base+0x11834>
   278ac:	cmp	r0, #33	; 0x21
   278b0:	bcc	278c0 <main@@Base+0x1181c>
   278b4:	cmp	r0, #58	; 0x3a
   278b8:	mov	r1, r9
   278bc:	bne	27cac <main@@Base+0x11c08>
   278c0:	mov	r0, #0
   278c4:	str	r0, [r5, #12]
   278c8:	sub	r0, r8, r2
   278cc:	cmp	r0, #2
   278d0:	bge	278f4 <main@@Base+0x11850>
   278d4:	b	27958 <main@@Base+0x118b4>
   278d8:	cmp	r0, #34	; 0x22
   278dc:	mov	r1, r9
   278e0:	bne	27cac <main@@Base+0x11c08>
   278e4:	add	r2, r9, #8
   278e8:	sub	r0, r8, r2
   278ec:	cmp	r0, #2
   278f0:	blt	27958 <main@@Base+0x118b4>
   278f4:	ldrb	r0, [r2]
   278f8:	cmp	r0, #32
   278fc:	bls	27944 <main@@Base+0x118a0>
   27900:	mov	r1, r2
   27904:	cmp	r1, r8
   27908:	bne	27974 <main@@Base+0x118d0>
   2790c:	b	27a88 <main@@Base+0x119e4>
   27910:	cmp	r0, #34	; 0x22
   27914:	bne	27b6c <main@@Base+0x11ac8>
   27918:	add	r1, r9, #13
   2791c:	sub	r0, r8, r1
   27920:	cmp	r0, #2
   27924:	blt	27b20 <main@@Base+0x11a7c>
   27928:	ldrb	r0, [r1]
   2792c:	cmp	r0, #32
   27930:	bls	27b0c <main@@Base+0x11a68>
   27934:	mov	r2, r1
   27938:	cmp	r2, r8
   2793c:	bne	27b38 <main@@Base+0x11a94>
   27940:	b	27b78 <main@@Base+0x11ad4>
   27944:	bne	27958 <main@@Base+0x118b4>
   27948:	mov	r1, r2
   2794c:	ldrb	r0, [r1, #1]!
   27950:	cmp	r0, #32
   27954:	bhi	2796c <main@@Base+0x118c8>
   27958:	mov	r1, r2
   2795c:	mov	r0, r5
   27960:	mov	r2, r8
   27964:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   27968:	mov	r1, r0
   2796c:	cmp	r1, r8
   27970:	beq	27a88 <main@@Base+0x119e4>
   27974:	ldrb	r0, [r1]
   27978:	cmp	r0, #58	; 0x3a
   2797c:	bne	27a88 <main@@Base+0x119e4>
   27980:	add	r2, r1, #1
   27984:	sub	r0, r8, r2
   27988:	cmp	r0, #2
   2798c:	blt	27c98 <main@@Base+0x11bf4>
   27990:	ldrb	r0, [r2]
   27994:	cmp	r0, #32
   27998:	bls	27c88 <main@@Base+0x11be4>
   2799c:	mov	r1, r2
   279a0:	cmp	r9, r1
   279a4:	bne	27cb4 <main@@Base+0x11c10>
   279a8:	lsr	r1, sl, #16
   279ac:	movw	r2, #27000	; 0x6978
   279b0:	movw	r0, #28786	; 0x7072
   279b4:	orr	r1, r1, r4, lsl #16
   279b8:	movt	r2, #25958	; 0x6566
   279bc:	eor	r0, r0, r4, lsr #16
   279c0:	eor	r1, r1, r2
   279c4:	orrs	r0, r1, r0
   279c8:	bne	27a1c <main@@Base+0x11978>
   279cc:	ldr	r7, [sp, #20]
   279d0:	cmp	r6, #7
   279d4:	mov	r1, r9
   279d8:	blt	27e44 <main@@Base+0x11da0>
   279dc:	mov	r2, r9
   279e0:	ldr	r1, [r5, #12]
   279e4:	ldrb	r0, [r2, #6]!
   279e8:	cmp	r1, #0
   279ec:	beq	27a9c <main@@Base+0x119f8>
   279f0:	cmp	r0, #33	; 0x21
   279f4:	bcc	27a04 <main@@Base+0x11960>
   279f8:	cmp	r0, #58	; 0x3a
   279fc:	mov	r1, r9
   27a00:	bne	27e44 <main@@Base+0x11da0>
   27a04:	mov	r0, #0
   27a08:	str	r0, [r5, #12]
   27a0c:	sub	r0, r8, r2
   27a10:	cmp	r0, #2
   27a14:	bge	27ab8 <main@@Base+0x11a14>
   27a18:	b	27ba4 <main@@Base+0x11b00>
   27a1c:	movw	r0, #30313	; 0x7669
   27a20:	ldr	r7, [sp, #20]
   27a24:	and	r1, sl, #-16777216	; 0xff000000
   27a28:	movt	r0, #28015	; 0x6d6f
   27a2c:	eor	r1, r1, #1694498816	; 0x65000000
   27a30:	eor	r0, r4, r0
   27a34:	orrs	r0, r1, r0
   27a38:	bne	27ef8 <main@@Base+0x11e54>
   27a3c:	cmp	r6, #6
   27a40:	mov	r1, r9
   27a44:	blt	27ea8 <main@@Base+0x11e04>
   27a48:	mov	r2, r9
   27a4c:	ldr	r1, [r5, #12]
   27a50:	ldrb	r0, [r2, #5]!
   27a54:	cmp	r1, #0
   27a58:	beq	27ad4 <main@@Base+0x11a30>
   27a5c:	cmp	r0, #33	; 0x21
   27a60:	bcc	27a70 <main@@Base+0x119cc>
   27a64:	cmp	r0, #58	; 0x3a
   27a68:	mov	r1, r9
   27a6c:	bne	27ea8 <main@@Base+0x11e04>
   27a70:	mov	r0, #0
   27a74:	str	r0, [r5, #12]
   27a78:	sub	r0, r8, r2
   27a7c:	cmp	r0, #2
   27a80:	bge	27af0 <main@@Base+0x11a4c>
   27a84:	b	27c20 <main@@Base+0x11b7c>
   27a88:	mov	r0, r5
   27a8c:	mov	r2, r8
   27a90:	mov	r3, #4
   27a94:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   27a98:	b	27ca8 <main@@Base+0x11c04>
   27a9c:	cmp	r0, #34	; 0x22
   27aa0:	mov	r1, r9
   27aa4:	bne	27e44 <main@@Base+0x11da0>
   27aa8:	add	r2, r9, #7
   27aac:	sub	r0, r8, r2
   27ab0:	cmp	r0, #2
   27ab4:	blt	27ba4 <main@@Base+0x11b00>
   27ab8:	ldrb	r0, [r2]
   27abc:	cmp	r0, #32
   27ac0:	bls	27b90 <main@@Base+0x11aec>
   27ac4:	mov	r1, r2
   27ac8:	cmp	r1, r8
   27acc:	bne	27bc0 <main@@Base+0x11b1c>
   27ad0:	b	27bf8 <main@@Base+0x11b54>
   27ad4:	cmp	r0, #34	; 0x22
   27ad8:	mov	r1, r9
   27adc:	bne	27ea8 <main@@Base+0x11e04>
   27ae0:	add	r2, r9, #6
   27ae4:	sub	r0, r8, r2
   27ae8:	cmp	r0, #2
   27aec:	blt	27c20 <main@@Base+0x11b7c>
   27af0:	ldrb	r0, [r2]
   27af4:	cmp	r0, #32
   27af8:	bls	27c0c <main@@Base+0x11b68>
   27afc:	mov	r1, r2
   27b00:	cmp	r1, r8
   27b04:	bne	27c3c <main@@Base+0x11b98>
   27b08:	b	27c74 <main@@Base+0x11bd0>
   27b0c:	bne	27b20 <main@@Base+0x11a7c>
   27b10:	mov	r2, r1
   27b14:	ldrb	r0, [r2, #1]!
   27b18:	cmp	r0, #32
   27b1c:	bhi	27b30 <main@@Base+0x11a8c>
   27b20:	mov	r0, r5
   27b24:	mov	r2, r8
   27b28:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   27b2c:	mov	r2, r0
   27b30:	cmp	r2, r8
   27b34:	beq	27b78 <main@@Base+0x11ad4>
   27b38:	ldrb	r0, [r2]
   27b3c:	cmp	r0, #58	; 0x3a
   27b40:	bne	27b78 <main@@Base+0x11ad4>
   27b44:	add	r1, r2, #1
   27b48:	sub	r0, r8, r1
   27b4c:	cmp	r0, #2
   27b50:	blt	27dac <main@@Base+0x11d08>
   27b54:	ldrb	r0, [r1]
   27b58:	cmp	r0, #32
   27b5c:	bls	27d9c <main@@Base+0x11cf8>
   27b60:	mov	r2, r1
   27b64:	cmp	r6, r2
   27b68:	bne	27dc4 <main@@Base+0x11d20>
   27b6c:	mov	r0, r5
   27b70:	mov	r1, r6
   27b74:	b	27f00 <main@@Base+0x11e5c>
   27b78:	mov	r1, r2
   27b7c:	mov	r0, r5
   27b80:	mov	r2, r8
   27b84:	mov	r3, #4
   27b88:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   27b8c:	b	27db8 <main@@Base+0x11d14>
   27b90:	bne	27ba4 <main@@Base+0x11b00>
   27b94:	mov	r1, r2
   27b98:	ldrb	r0, [r1, #1]!
   27b9c:	cmp	r0, #32
   27ba0:	bhi	27bb8 <main@@Base+0x11b14>
   27ba4:	mov	r1, r2
   27ba8:	mov	r0, r5
   27bac:	mov	r2, r8
   27bb0:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   27bb4:	mov	r1, r0
   27bb8:	cmp	r1, r8
   27bbc:	beq	27bf8 <main@@Base+0x11b54>
   27bc0:	ldrb	r0, [r1]
   27bc4:	cmp	r0, #58	; 0x3a
   27bc8:	bne	27bf8 <main@@Base+0x11b54>
   27bcc:	add	r2, r1, #1
   27bd0:	sub	r0, r8, r2
   27bd4:	cmp	r0, #2
   27bd8:	blt	27e30 <main@@Base+0x11d8c>
   27bdc:	ldrb	r0, [r2]
   27be0:	cmp	r0, #32
   27be4:	bls	27e20 <main@@Base+0x11d7c>
   27be8:	mov	r1, r2
   27bec:	cmp	r9, r1
   27bf0:	bne	27e4c <main@@Base+0x11da8>
   27bf4:	b	27ef8 <main@@Base+0x11e54>
   27bf8:	mov	r0, r5
   27bfc:	mov	r2, r8
   27c00:	mov	r3, #4
   27c04:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   27c08:	b	27e40 <main@@Base+0x11d9c>
   27c0c:	bne	27c20 <main@@Base+0x11b7c>
   27c10:	mov	r1, r2
   27c14:	ldrb	r0, [r1, #1]!
   27c18:	cmp	r0, #32
   27c1c:	bhi	27c34 <main@@Base+0x11b90>
   27c20:	mov	r1, r2
   27c24:	mov	r0, r5
   27c28:	mov	r2, r8
   27c2c:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   27c30:	mov	r1, r0
   27c34:	cmp	r1, r8
   27c38:	beq	27c74 <main@@Base+0x11bd0>
   27c3c:	ldrb	r0, [r1]
   27c40:	cmp	r0, #58	; 0x3a
   27c44:	bne	27c74 <main@@Base+0x11bd0>
   27c48:	add	r2, r1, #1
   27c4c:	sub	r0, r8, r2
   27c50:	cmp	r0, #2
   27c54:	blt	27e94 <main@@Base+0x11df0>
   27c58:	ldrb	r0, [r2]
   27c5c:	cmp	r0, #32
   27c60:	bls	27e84 <main@@Base+0x11de0>
   27c64:	mov	r1, r2
   27c68:	cmp	r9, r1
   27c6c:	bne	27eb0 <main@@Base+0x11e0c>
   27c70:	b	27ef8 <main@@Base+0x11e54>
   27c74:	mov	r0, r5
   27c78:	mov	r2, r8
   27c7c:	mov	r3, #4
   27c80:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   27c84:	b	27ea4 <main@@Base+0x11e00>
   27c88:	bne	27c98 <main@@Base+0x11bf4>
   27c8c:	ldrb	r0, [r1, #2]!
   27c90:	cmp	r0, #32
   27c94:	bhi	27cac <main@@Base+0x11c08>
   27c98:	mov	r1, r2
   27c9c:	mov	r0, r5
   27ca0:	mov	r2, r8
   27ca4:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   27ca8:	mov	r1, r0
   27cac:	cmp	r9, r1
   27cb0:	beq	279a8 <main@@Base+0x11904>
   27cb4:	ldr	r0, [sp, #28]
   27cb8:	mov	r2, #3
   27cbc:	mov	r3, #0
   27cc0:	str	r2, [sp]
   27cc4:	mov	r2, r8
   27cc8:	str	r0, [sp, #4]
   27ccc:	movw	r0, #18032	; 0x4670
   27cd0:	movt	r0, #2
   27cd4:	str	r0, [sp, #8]
   27cd8:	mov	r0, r5
   27cdc:	bl	3a0c4 <flatcc_json_parser_union_vector@@Base>
   27ce0:	ldr	r7, [sp, #20]
   27ce4:	mov	r4, r0
   27ce8:	sub	r0, r8, r4
   27cec:	cmp	r0, #2
   27cf0:	blt	27f18 <main@@Base+0x11e74>
   27cf4:	ldrb	r0, [r4]
   27cf8:	cmp	r0, #32
   27cfc:	bls	27d50 <main@@Base+0x11cac>
   27d00:	mov	r2, r4
   27d04:	cmp	r2, r8
   27d08:	beq	27f34 <main@@Base+0x11e90>
   27d0c:	ldrb	r0, [r2]
   27d10:	cmp	r0, #44	; 0x2c
   27d14:	bne	27f48 <main@@Base+0x11ea4>
   27d18:	add	r1, r2, #1
   27d1c:	sub	r0, r8, r1
   27d20:	cmp	r0, #2
   27d24:	blt	27d80 <main@@Base+0x11cdc>
   27d28:	ldrb	r0, [r1]
   27d2c:	cmp	r0, #32
   27d30:	bls	27d70 <main@@Base+0x11ccc>
   27d34:	mov	r2, r1
   27d38:	cmp	r2, r8
   27d3c:	beq	27f80 <main@@Base+0x11edc>
   27d40:	ldrb	r0, [r2]
   27d44:	cmp	r0, #125	; 0x7d
   27d48:	bne	27680 <main@@Base+0x115dc>
   27d4c:	b	27f50 <main@@Base+0x11eac>
   27d50:	bne	27f18 <main@@Base+0x11e74>
   27d54:	mov	r2, r4
   27d58:	ldrb	r0, [r2, #1]!
   27d5c:	cmp	r0, #32
   27d60:	bls	27f18 <main@@Base+0x11e74>
   27d64:	cmp	r2, r8
   27d68:	bne	27d0c <main@@Base+0x11c68>
   27d6c:	b	27f34 <main@@Base+0x11e90>
   27d70:	bne	27d80 <main@@Base+0x11cdc>
   27d74:	ldrb	r0, [r2, #2]!
   27d78:	cmp	r0, #32
   27d7c:	bhi	27d90 <main@@Base+0x11cec>
   27d80:	mov	r0, r5
   27d84:	mov	r2, r8
   27d88:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   27d8c:	mov	r2, r0
   27d90:	cmp	r2, r8
   27d94:	bne	27d40 <main@@Base+0x11c9c>
   27d98:	b	27f80 <main@@Base+0x11edc>
   27d9c:	bne	27dac <main@@Base+0x11d08>
   27da0:	ldrb	r0, [r2, #2]!
   27da4:	cmp	r0, #32
   27da8:	bhi	27dbc <main@@Base+0x11d18>
   27dac:	mov	r0, r5
   27db0:	mov	r2, r8
   27db4:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   27db8:	mov	r2, r0
   27dbc:	cmp	r6, r2
   27dc0:	beq	27b6c <main@@Base+0x11ac8>
   27dc4:	ldr	r0, [sp, #28]
   27dc8:	mov	r1, #3
   27dcc:	mov	r3, #0
   27dd0:	str	r1, [sp]
   27dd4:	mov	r1, r2
   27dd8:	mov	r2, r8
   27ddc:	str	r0, [sp, #4]
   27de0:	movw	r0, #120	; 0x78
   27de4:	movt	r0, #6
   27de8:	str	r0, [sp, #8]
   27dec:	movw	r0, #18032	; 0x4670
   27df0:	movt	r0, #2
   27df4:	str	r0, [sp, #12]
   27df8:	movw	r0, #32708	; 0x7fc4
   27dfc:	movt	r0, #2
   27e00:	str	r0, [sp, #16]
   27e04:	mov	r0, r5
   27e08:	bl	3a640 <flatcc_json_parser_union_type_vector@@Base>
   27e0c:	mov	r4, r0
   27e10:	sub	r0, r8, r4
   27e14:	cmp	r0, #2
   27e18:	bge	27cf4 <main@@Base+0x11c50>
   27e1c:	b	27f18 <main@@Base+0x11e74>
   27e20:	bne	27e30 <main@@Base+0x11d8c>
   27e24:	ldrb	r0, [r1, #2]!
   27e28:	cmp	r0, #32
   27e2c:	bhi	27e44 <main@@Base+0x11da0>
   27e30:	mov	r1, r2
   27e34:	mov	r0, r5
   27e38:	mov	r2, r8
   27e3c:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   27e40:	mov	r1, r0
   27e44:	cmp	r9, r1
   27e48:	beq	27ef8 <main@@Base+0x11e54>
   27e4c:	mov	r0, r5
   27e50:	mov	r2, r8
   27e54:	add	r3, sp, #32
   27e58:	bl	27fd8 <main@@Base+0x11f34>
   27e5c:	ldr	r6, [sp, #32]
   27e60:	mov	r4, r0
   27e64:	cmp	r6, #0
   27e68:	beq	27530 <main@@Base+0x1148c>
   27e6c:	ldr	r0, [r5]
   27e70:	mov	r1, #0
   27e74:	bl	3316c <flatcc_builder_table_add_offset@@Base>
   27e78:	cmp	r0, #0
   27e7c:	bne	27ee4 <main@@Base+0x11e40>
   27e80:	b	27530 <main@@Base+0x1148c>
   27e84:	bne	27e94 <main@@Base+0x11df0>
   27e88:	ldrb	r0, [r1, #2]!
   27e8c:	cmp	r0, #32
   27e90:	bhi	27ea8 <main@@Base+0x11e04>
   27e94:	mov	r1, r2
   27e98:	mov	r0, r5
   27e9c:	mov	r2, r8
   27ea0:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   27ea4:	mov	r1, r0
   27ea8:	cmp	r9, r1
   27eac:	beq	27ef8 <main@@Base+0x11e54>
   27eb0:	mov	r0, r5
   27eb4:	mov	r2, r8
   27eb8:	add	r3, sp, #32
   27ebc:	bl	2b7e4 <main@@Base+0x15740>
   27ec0:	ldr	r6, [sp, #32]
   27ec4:	mov	r4, r0
   27ec8:	cmp	r6, #0
   27ecc:	beq	27530 <main@@Base+0x1148c>
   27ed0:	ldr	r0, [r5]
   27ed4:	mov	r1, #1
   27ed8:	bl	3316c <flatcc_builder_table_add_offset@@Base>
   27edc:	cmp	r0, #0
   27ee0:	beq	27530 <main@@Base+0x1148c>
   27ee4:	str	r6, [r0]
   27ee8:	sub	r0, r8, r4
   27eec:	cmp	r0, #2
   27ef0:	bge	27cf4 <main@@Base+0x11c50>
   27ef4:	b	27f18 <main@@Base+0x11e74>
   27ef8:	mov	r0, r5
   27efc:	mov	r1, r9
   27f00:	mov	r2, r8
   27f04:	bl	373bc <flatcc_json_parser_unmatched_symbol@@Base>
   27f08:	mov	r4, r0
   27f0c:	sub	r0, r8, r4
   27f10:	cmp	r0, #2
   27f14:	bge	27cf4 <main@@Base+0x11c50>
   27f18:	mov	r0, r5
   27f1c:	mov	r1, r4
   27f20:	mov	r2, r8
   27f24:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   27f28:	mov	r2, r0
   27f2c:	cmp	r2, r8
   27f30:	bne	27d0c <main@@Base+0x11c68>
   27f34:	mov	r4, r8
   27f38:	ldr	r0, [r5, #24]
   27f3c:	cmp	r0, #0
   27f40:	bne	27530 <main@@Base+0x1148c>
   27f44:	b	275e0 <main@@Base+0x1153c>
   27f48:	cmp	r0, #125	; 0x7d
   27f4c:	bne	27f8c <main@@Base+0x11ee8>
   27f50:	add	r1, r2, #1
   27f54:	sub	r0, r8, r1
   27f58:	cmp	r0, #2
   27f5c:	blt	27fb4 <main@@Base+0x11f10>
   27f60:	ldrb	r0, [r1]
   27f64:	cmp	r0, #32
   27f68:	bls	27fa0 <main@@Base+0x11efc>
   27f6c:	mov	r4, r1
   27f70:	ldr	r0, [r5, #24]
   27f74:	cmp	r0, #0
   27f78:	bne	27530 <main@@Base+0x1148c>
   27f7c:	b	275e0 <main@@Base+0x1153c>
   27f80:	mov	r0, r5
   27f84:	mov	r1, r8
   27f88:	b	27f94 <main@@Base+0x11ef0>
   27f8c:	mov	r0, r5
   27f90:	mov	r1, r2
   27f94:	mov	r2, r8
   27f98:	mov	r3, #10
   27f9c:	b	275cc <main@@Base+0x11528>
   27fa0:	bne	27fb4 <main@@Base+0x11f10>
   27fa4:	ldrb	r0, [r2, #2]!
   27fa8:	mov	r4, r2
   27fac:	cmp	r0, #32
   27fb0:	bhi	275d4 <main@@Base+0x11530>
   27fb4:	mov	r0, r5
   27fb8:	mov	r2, r8
   27fbc:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   27fc0:	b	275d0 <main@@Base+0x1152c>
   27fc4:	cmp	r0, #5
   27fc8:	mov	r1, #0
   27fcc:	movwcc	r1, #1
   27fd0:	mov	r0, r1
   27fd4:	bx	lr
   27fd8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   27fdc:	add	fp, sp, #28
   27fe0:	sub	sp, sp, #68	; 0x44
   27fe4:	mov	sl, r0
   27fe8:	mov	r0, #0
   27fec:	mov	r4, r1
   27ff0:	mov	r1, #3
   27ff4:	mov	r5, r3
   27ff8:	mov	r9, r2
   27ffc:	str	r0, [r3]
   28000:	ldr	r0, [sl]
   28004:	bl	31fa8 <flatcc_builder_start_table@@Base>
   28008:	cmp	r0, #0
   2800c:	bne	28078 <main@@Base+0x11fd4>
   28010:	cmp	r4, r9
   28014:	beq	28054 <main@@Base+0x11fb0>
   28018:	ldrb	r0, [r4]
   2801c:	cmp	r0, #123	; 0x7b
   28020:	bne	28054 <main@@Base+0x11fb0>
   28024:	add	r1, r4, #1
   28028:	sub	r0, r9, r1
   2802c:	cmp	r0, #2
   28030:	blt	280ac <main@@Base+0x12008>
   28034:	ldrb	r0, [r1]
   28038:	cmp	r0, #32
   2803c:	bls	2809c <main@@Base+0x11ff8>
   28040:	mov	r4, r1
   28044:	cmp	r4, r9
   28048:	mov	r2, r9
   2804c:	bne	280c8 <main@@Base+0x12024>
   28050:	b	28108 <main@@Base+0x12064>
   28054:	mov	r0, sl
   28058:	mov	r1, r4
   2805c:	mov	r2, r9
   28060:	mov	r3, #21
   28064:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   28068:	mov	r4, r0
   2806c:	ldr	r0, [sl, #24]
   28070:	cmp	r0, #0
   28074:	beq	2b768 <main@@Base+0x156c4>
   28078:	mov	r0, sl
   2807c:	mov	r1, r4
   28080:	mov	r2, r9
   28084:	mov	r3, #33	; 0x21
   28088:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   2808c:	mov	r4, r0
   28090:	mov	r0, r4
   28094:	sub	sp, fp, #28
   28098:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2809c:	bne	280ac <main@@Base+0x12008>
   280a0:	ldrb	r0, [r4, #2]!
   280a4:	cmp	r0, #32
   280a8:	bhi	280bc <main@@Base+0x12018>
   280ac:	mov	r0, sl
   280b0:	mov	r2, r9
   280b4:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   280b8:	mov	r4, r0
   280bc:	cmp	r4, r9
   280c0:	mov	r2, r9
   280c4:	beq	28108 <main@@Base+0x12064>
   280c8:	ldrb	r0, [r4]
   280cc:	cmp	r0, #125	; 0x7d
   280d0:	bne	28104 <main@@Base+0x12060>
   280d4:	add	r1, r4, #1
   280d8:	sub	r0, r9, r1
   280dc:	cmp	r0, #2
   280e0:	blt	2b7b4 <main@@Base+0x15710>
   280e4:	ldrb	r0, [r1]
   280e8:	cmp	r0, #32
   280ec:	bhi	2b758 <main@@Base+0x156b4>
   280f0:	bne	2b7b4 <main@@Base+0x15710>
   280f4:	ldrb	r0, [r4, #2]!
   280f8:	cmp	r0, #32
   280fc:	bhi	2806c <main@@Base+0x11fc8>
   28100:	b	2b7b4 <main@@Base+0x15710>
   28104:	mov	r2, r4
   28108:	add	r0, sl, #12
   2810c:	movw	r1, #25186	; 0x6262
   28110:	str	sl, [sp, #24]
   28114:	str	r5, [sp, #32]
   28118:	str	r0, [sp, #28]
   2811c:	movw	r0, #388	; 0x184
   28120:	movt	r1, #25186	; 0x6262
   28124:	movt	r0, #6
   28128:	add	r0, r0, #96	; 0x60
   2812c:	str	r0, [sp, #12]
   28130:	movw	r0, #257	; 0x101
   28134:	movt	r0, #257	; 0x101
   28138:	add	r0, r1, r0
   2813c:	str	r0, [sp, #20]
   28140:	movw	r0, #514	; 0x202
   28144:	movt	r0, #514	; 0x202
   28148:	add	r0, r1, r0
   2814c:	str	r0, [sp, #16]
   28150:	cmp	r2, r9
   28154:	mov	r8, r9
   28158:	beq	281ac <main@@Base+0x12108>
   2815c:	ldrb	r0, [r2]
   28160:	cmp	r0, #46	; 0x2e
   28164:	beq	28180 <main@@Base+0x120dc>
   28168:	cmp	r0, #34	; 0x22
   2816c:	bne	2819c <main@@Base+0x120f8>
   28170:	ldr	r0, [sp, #28]
   28174:	mov	r1, #0
   28178:	add	r8, r2, #1
   2817c:	b	281a8 <main@@Base+0x12104>
   28180:	mov	r1, r2
   28184:	mov	r0, sl
   28188:	mov	r2, r9
   2818c:	mov	r3, #5
   28190:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   28194:	mov	r8, r0
   28198:	b	281ac <main@@Base+0x12108>
   2819c:	ldr	r0, [sp, #28]
   281a0:	mov	r1, #1
   281a4:	mov	r8, r2
   281a8:	str	r1, [r0]
   281ac:	sub	r0, r9, r8
   281b0:	mov	r1, #8
   281b4:	cmp	r0, #8
   281b8:	movcs	r0, r1
   281bc:	sub	r3, r0, #1
   281c0:	cmp	r3, #7
   281c4:	bhi	28460 <main@@Base+0x123bc>
   281c8:	add	r5, pc, #32
   281cc:	mov	r0, #0
   281d0:	mov	ip, #0
   281d4:	mov	lr, #0
   281d8:	mov	r7, #0
   281dc:	mov	r2, #0
   281e0:	mov	r6, #0
   281e4:	mov	r4, #0
   281e8:	mov	r1, #0
   281ec:	ldr	pc, [r5, r3, lsl #2]
   281f0:	andeq	r8, r2, r4, asr r2
   281f4:	andeq	r8, r2, ip, asr #4
   281f8:	andeq	r8, r2, r4, asr #4
   281fc:	andeq	r8, r2, ip, lsr r2
   28200:	andeq	r8, r2, r0, lsr r2
   28204:	andeq	r8, r2, r4, lsr #4
   28208:	andeq	r8, r2, r4, lsl r2
   2820c:	andeq	r8, r2, r0, lsl r2
   28210:	ldrb	ip, [r8, #7]
   28214:	ldrb	r1, [r8, #6]
   28218:	mov	lr, r0
   2821c:	orr	r1, ip, r1, lsl #8
   28220:	mov	r0, r1
   28224:	ldrb	r1, [r8, #5]
   28228:	mov	r7, lr
   2822c:	orr	r0, r0, r1, lsl #16
   28230:	ldrb	r1, [r8, #4]
   28234:	mov	r2, r7
   28238:	orr	r0, r0, r1, lsl #24
   2823c:	ldrb	r1, [r8, #3]
   28240:	orr	r6, r1, r2
   28244:	ldrb	r1, [r8, #2]
   28248:	orr	r4, r6, r1, lsl #8
   2824c:	ldrb	r1, [r8, #1]
   28250:	orr	r1, r4, r1, lsl #16
   28254:	movw	r2, #28526	; 0x6f6e
   28258:	movt	r2, #27251	; 0x6a73
   2825c:	eor	r0, r0, r2
   28260:	ldrb	r2, [r8]
   28264:	orr	r1, r1, r2, lsl #24
   28268:	movw	r2, #29556	; 0x7374
   2826c:	movt	r2, #29797	; 0x7465
   28270:	eor	r1, r1, r2
   28274:	orrs	r0, r0, r1
   28278:	bne	28460 <main@@Base+0x123bc>
   2827c:	add	r1, r8, #8
   28280:	mov	r2, #8
   28284:	sub	r0, r9, r1
   28288:	cmp	r0, #8
   2828c:	movcs	r0, r2
   28290:	sub	r7, r0, #1
   28294:	cmp	r7, #7
   28298:	bhi	2846c <main@@Base+0x123c8>
   2829c:	add	r0, pc, #32
   282a0:	mov	sl, #0
   282a4:	mov	ip, #0
   282a8:	mov	lr, #0
   282ac:	mov	r6, #0
   282b0:	mov	r3, #0
   282b4:	mov	r5, #0
   282b8:	mov	r2, #0
   282bc:	mov	r4, #0
   282c0:	ldr	pc, [r0, r7, lsl #2]
   282c4:	andeq	r8, r2, r8, lsr #6
   282c8:	andeq	r8, r2, r0, lsr #6
   282cc:	andeq	r8, r2, r8, lsl r3
   282d0:	andeq	r8, r2, r0, lsl r3
   282d4:	andeq	r8, r2, r4, lsl #6
   282d8:	strdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   282dc:	andeq	r8, r2, r8, ror #5
   282e0:	andeq	r8, r2, r4, ror #5
   282e4:	ldrb	ip, [r8, #15]
   282e8:	ldrb	r0, [r8, #14]
   282ec:	mov	lr, sl
   282f0:	orr	r0, ip, r0, lsl #8
   282f4:	mov	sl, r0
   282f8:	ldrb	r0, [r8, #13]
   282fc:	mov	r6, lr
   28300:	orr	sl, sl, r0, lsl #16
   28304:	ldrb	r0, [r8, #12]
   28308:	mov	r3, r6
   2830c:	orr	sl, sl, r0, lsl #24
   28310:	ldrb	r0, [r8, #11]
   28314:	orr	r5, r0, r3
   28318:	ldrb	r0, [r8, #10]
   2831c:	orr	r2, r5, r0, lsl #8
   28320:	ldrb	r0, [r8, #9]
   28324:	orr	r4, r2, r0, lsl #16
   28328:	ldrb	r2, [r1]
   2832c:	movw	r0, #28769	; 0x7061
   28330:	movw	r3, #25958	; 0x6566
   28334:	movt	r0, #27000	; 0x6978
   28338:	movt	r3, #28786	; 0x7072
   2833c:	eor	r0, sl, r0
   28340:	orr	r2, r4, r2, lsl #24
   28344:	eor	r2, r2, r3
   28348:	orrs	r0, r0, r2
   2834c:	bne	2846c <main@@Base+0x123c8>
   28350:	add	ip, r8, #16
   28354:	mov	r0, #8
   28358:	sub	sl, r9, ip
   2835c:	cmp	sl, #8
   28360:	movcc	r0, sl
   28364:	sub	r2, r0, #1
   28368:	cmp	r2, #7
   2836c:	bhi	28820 <main@@Base+0x1277c>
   28370:	add	r7, pc, #24
   28374:	mov	r0, #0
   28378:	mov	r1, #0
   2837c:	mov	r3, #0
   28380:	mov	r6, #0
   28384:	mov	r4, #0
   28388:	mov	r5, #0
   2838c:	ldr	pc, [r7, r2, lsl #2]
   28390:	andeq	r8, r2, r0, ror #7
   28394:	ldrdeq	r8, [r2], -r8	; <UNPREDICTABLE>
   28398:	ldrdeq	r8, [r2], -r0
   2839c:	andeq	r8, r2, r8, asr #7
   283a0:			; <UNDEFINED> instruction: 0x000283b8
   283a4:			; <UNDEFINED> instruction: 0x000283b0
   283a8:			; <UNDEFINED> instruction: 0x000283b0
   283ac:			; <UNDEFINED> instruction: 0x000283b0
   283b0:	ldrb	r1, [r8, #21]
   283b4:	lsl	r1, r1, #16
   283b8:	ldrb	r2, [r8, #20]
   283bc:	mov	r3, r0
   283c0:	orr	r1, r1, r2, lsl #24
   283c4:	mov	r0, r1
   283c8:	ldrb	r1, [r8, #19]
   283cc:	orr	r6, r1, r3
   283d0:	ldrb	r1, [r8, #18]
   283d4:	orr	r4, r6, r1, lsl #8
   283d8:	ldrb	r1, [r8, #17]
   283dc:	orr	r5, r4, r1, lsl #16
   283e0:	mov	r6, r0
   283e4:	movw	r1, #0
   283e8:	movw	r3, #26990	; 0x696e
   283ec:	bfc	r6, #0, #16
   283f0:	movt	r1, #26418	; 0x6732
   283f4:	movt	r3, #29299	; 0x7273
   283f8:	eor	r2, r6, r1
   283fc:	ldrb	r1, [ip]
   28400:	orr	r1, r5, r1, lsl #24
   28404:	eor	r5, r1, r3
   28408:	orrs	r2, r2, r5
   2840c:	bne	28478 <main@@Base+0x123d4>
   28410:	cmp	sl, #7
   28414:	blt	28820 <main@@Base+0x1277c>
   28418:	ldr	r2, [sp, #28]
   2841c:	mov	r1, r8
   28420:	ldrb	r0, [r1, #22]!
   28424:	ldr	r2, [r2]
   28428:	cmp	r2, #0
   2842c:	beq	284e0 <main@@Base+0x1243c>
   28430:	cmp	r0, #33	; 0x21
   28434:	bcc	28440 <main@@Base+0x1239c>
   28438:	cmp	r0, #58	; 0x3a
   2843c:	bne	28820 <main@@Base+0x1277c>
   28440:	ldr	r0, [sp, #28]
   28444:	mov	r2, #0
   28448:	str	r2, [r0]
   2844c:	ldr	r5, [sp, #24]
   28450:	sub	r0, r9, r1
   28454:	cmp	r0, #2
   28458:	bge	284fc <main@@Base+0x12458>
   2845c:	b	28568 <main@@Base+0x124c4>
   28460:	mov	r0, sl
   28464:	mov	r1, r8
   28468:	b	2882c <main@@Base+0x12788>
   2846c:	ldr	sl, [sp, #24]
   28470:	mov	r0, sl
   28474:	b	2882c <main@@Base+0x12788>
   28478:	cmp	sl, #6
   2847c:	blt	28650 <main@@Base+0x125ac>
   28480:	movw	r2, #26990	; 0x696e
   28484:	and	r0, r0, #-16777216	; 0xff000000
   28488:	movt	r2, #29299	; 0x7273
   2848c:	eor	r0, r0, #1728053248	; 0x67000000
   28490:	eor	r1, r1, r2
   28494:	orrs	r0, r0, r1
   28498:	bne	28650 <main@@Base+0x125ac>
   2849c:	ldr	r2, [sp, #28]
   284a0:	mov	r1, r8
   284a4:	ldrb	r0, [r1, #21]!
   284a8:	ldr	r2, [r2]
   284ac:	cmp	r2, #0
   284b0:	beq	2851c <main@@Base+0x12478>
   284b4:	cmp	r0, #33	; 0x21
   284b8:	bcc	284c4 <main@@Base+0x12420>
   284bc:	cmp	r0, #58	; 0x3a
   284c0:	bne	28650 <main@@Base+0x125ac>
   284c4:	ldr	r0, [sp, #28]
   284c8:	mov	r2, #0
   284cc:	str	r2, [r0]
   284d0:	sub	r0, r9, r1
   284d4:	cmp	r0, #2
   284d8:	bge	28534 <main@@Base+0x12490>
   284dc:	b	285f4 <main@@Base+0x12550>
   284e0:	cmp	r0, #34	; 0x22
   284e4:	bne	28820 <main@@Base+0x1277c>
   284e8:	add	r1, r8, #23
   284ec:	ldr	r5, [sp, #24]
   284f0:	sub	r0, r9, r1
   284f4:	cmp	r0, #2
   284f8:	blt	28568 <main@@Base+0x124c4>
   284fc:	ldrb	r0, [r1]
   28500:	cmp	r0, #32
   28504:	bls	28554 <main@@Base+0x124b0>
   28508:	mov	r4, r1
   2850c:	mov	r6, ip
   28510:	cmp	r4, r9
   28514:	bne	2858c <main@@Base+0x124e8>
   28518:	b	285c8 <main@@Base+0x12524>
   2851c:	cmp	r0, #34	; 0x22
   28520:	bne	28650 <main@@Base+0x125ac>
   28524:	add	r1, r8, #22
   28528:	sub	r0, r9, r1
   2852c:	cmp	r0, #2
   28530:	blt	285f4 <main@@Base+0x12550>
   28534:	ldrb	r0, [r1]
   28538:	cmp	r0, #32
   2853c:	bls	285e0 <main@@Base+0x1253c>
   28540:	mov	r4, r1
   28544:	mov	r7, ip
   28548:	cmp	r4, r9
   2854c:	bne	28618 <main@@Base+0x12574>
   28550:	b	286b8 <main@@Base+0x12614>
   28554:	bne	28568 <main@@Base+0x124c4>
   28558:	mov	r4, r1
   2855c:	ldrb	r0, [r4, #1]!
   28560:	cmp	r0, #32
   28564:	bhi	28580 <main@@Base+0x124dc>
   28568:	mov	r0, r5
   2856c:	mov	r2, r9
   28570:	mov	r4, ip
   28574:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   28578:	mov	ip, r4
   2857c:	mov	r4, r0
   28580:	mov	r6, ip
   28584:	cmp	r4, r9
   28588:	beq	285c8 <main@@Base+0x12524>
   2858c:	ldrb	r0, [r4]
   28590:	cmp	r0, #58	; 0x3a
   28594:	bne	285c8 <main@@Base+0x12524>
   28598:	add	r1, r4, #1
   2859c:	sub	r0, r9, r1
   285a0:	cmp	r0, #2
   285a4:	blt	287a4 <main@@Base+0x12700>
   285a8:	ldrb	r0, [r1]
   285ac:	cmp	r0, #32
   285b0:	bls	28794 <main@@Base+0x126f0>
   285b4:	mov	r4, r1
   285b8:	mov	ip, r6
   285bc:	cmp	r6, r4
   285c0:	bne	287c0 <main@@Base+0x1271c>
   285c4:	b	28820 <main@@Base+0x1277c>
   285c8:	mov	r0, r5
   285cc:	mov	r1, r4
   285d0:	mov	r2, r9
   285d4:	mov	r3, #4
   285d8:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   285dc:	b	287b0 <main@@Base+0x1270c>
   285e0:	bne	285f4 <main@@Base+0x12550>
   285e4:	mov	r4, r1
   285e8:	ldrb	r0, [r4, #1]!
   285ec:	cmp	r0, #32
   285f0:	bhi	2860c <main@@Base+0x12568>
   285f4:	ldr	r0, [sp, #24]
   285f8:	mov	r2, r9
   285fc:	mov	r4, ip
   28600:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   28604:	mov	ip, r4
   28608:	mov	r4, r0
   2860c:	mov	r7, ip
   28610:	cmp	r4, r9
   28614:	beq	286b8 <main@@Base+0x12614>
   28618:	ldrb	r0, [r4]
   2861c:	cmp	r0, #58	; 0x3a
   28620:	bne	286b8 <main@@Base+0x12614>
   28624:	add	r1, r4, #1
   28628:	sub	r0, r9, r1
   2862c:	cmp	r0, #2
   28630:	blt	28940 <main@@Base+0x1289c>
   28634:	ldrb	r0, [r1]
   28638:	cmp	r0, #32
   2863c:	bls	28930 <main@@Base+0x1288c>
   28640:	mov	r4, r1
   28644:	mov	ip, r7
   28648:	cmp	r7, r4
   2864c:	bne	2895c <main@@Base+0x128b8>
   28650:	movw	r0, #0
   28654:	movt	r0, #26418	; 0x6732
   28658:	add	r0, r0, #65536	; 0x10000
   2865c:	eor	r0, r6, r0
   28660:	orrs	r0, r0, r5
   28664:	bne	28820 <main@@Base+0x1277c>
   28668:	cmp	sl, #7
   2866c:	ldr	sl, [sp, #24]
   28670:	blt	28824 <main@@Base+0x12780>
   28674:	ldr	r2, [sp, #28]
   28678:	mov	r1, r8
   2867c:	ldrb	r0, [r1, #22]!
   28680:	ldr	r2, [r2]
   28684:	cmp	r2, #0
   28688:	beq	286d0 <main@@Base+0x1262c>
   2868c:	cmp	r0, #33	; 0x21
   28690:	bcc	2869c <main@@Base+0x125f8>
   28694:	cmp	r0, #58	; 0x3a
   28698:	bne	28824 <main@@Base+0x12780>
   2869c:	ldr	r0, [sp, #28]
   286a0:	mov	r2, #0
   286a4:	str	r2, [r0]
   286a8:	sub	r0, r9, r1
   286ac:	cmp	r0, #2
   286b0:	bge	286e8 <main@@Base+0x12644>
   286b4:	b	2871c <main@@Base+0x12678>
   286b8:	ldr	r0, [sp, #24]
   286bc:	mov	r1, r4
   286c0:	mov	r2, r9
   286c4:	mov	r3, #4
   286c8:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   286cc:	b	2894c <main@@Base+0x128a8>
   286d0:	cmp	r0, #34	; 0x22
   286d4:	bne	28824 <main@@Base+0x12780>
   286d8:	add	r1, r8, #23
   286dc:	sub	r0, r9, r1
   286e0:	cmp	r0, #2
   286e4:	blt	2871c <main@@Base+0x12678>
   286e8:	ldrb	r0, [r1]
   286ec:	cmp	r0, #32
   286f0:	bls	28708 <main@@Base+0x12664>
   286f4:	mov	r4, r1
   286f8:	mov	r5, ip
   286fc:	cmp	r4, r9
   28700:	bne	28740 <main@@Base+0x1269c>
   28704:	b	2877c <main@@Base+0x126d8>
   28708:	bne	2871c <main@@Base+0x12678>
   2870c:	mov	r4, r1
   28710:	ldrb	r0, [r4, #1]!
   28714:	cmp	r0, #32
   28718:	bhi	28734 <main@@Base+0x12690>
   2871c:	mov	r0, sl
   28720:	mov	r2, r9
   28724:	mov	r4, ip
   28728:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   2872c:	mov	ip, r4
   28730:	mov	r4, r0
   28734:	mov	r5, ip
   28738:	cmp	r4, r9
   2873c:	beq	2877c <main@@Base+0x126d8>
   28740:	ldrb	r0, [r4]
   28744:	cmp	r0, #58	; 0x3a
   28748:	bne	2877c <main@@Base+0x126d8>
   2874c:	add	r1, r4, #1
   28750:	sub	r0, r9, r1
   28754:	cmp	r0, #2
   28758:	blt	2aa38 <main@@Base+0x14994>
   2875c:	ldrb	r0, [r1]
   28760:	cmp	r0, #32
   28764:	bls	2aa28 <main@@Base+0x14984>
   28768:	mov	r4, r1
   2876c:	mov	ip, r5
   28770:	cmp	r5, r4
   28774:	bne	2aa54 <main@@Base+0x149b0>
   28778:	b	28824 <main@@Base+0x12780>
   2877c:	mov	r0, sl
   28780:	mov	r1, r4
   28784:	mov	r2, r9
   28788:	mov	r3, #4
   2878c:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   28790:	b	2aa44 <main@@Base+0x149a0>
   28794:	bne	287a4 <main@@Base+0x12700>
   28798:	ldrb	r0, [r4, #2]!
   2879c:	cmp	r0, #32
   287a0:	bhi	287b4 <main@@Base+0x12710>
   287a4:	mov	r0, r5
   287a8:	mov	r2, r9
   287ac:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   287b0:	mov	r4, r0
   287b4:	mov	ip, r6
   287b8:	cmp	r6, r4
   287bc:	beq	28820 <main@@Base+0x1277c>
   287c0:	ldr	sl, [sp, #24]
   287c4:	mov	r1, #2
   287c8:	ldr	r0, [sl]
   287cc:	bl	31fa8 <flatcc_builder_start_table@@Base>
   287d0:	cmp	r0, #0
   287d4:	bne	2b7c8 <main@@Base+0x15724>
   287d8:	cmp	r4, r9
   287dc:	beq	28904 <main@@Base+0x12860>
   287e0:	ldrb	r0, [r4]
   287e4:	cmp	r0, #123	; 0x7b
   287e8:	bne	28904 <main@@Base+0x12860>
   287ec:	ldr	r5, [sp, #32]
   287f0:	add	r1, r4, #1
   287f4:	sub	r0, r9, r1
   287f8:	cmp	r0, #2
   287fc:	blt	28a20 <main@@Base+0x1297c>
   28800:	ldrb	r0, [r1]
   28804:	cmp	r0, #32
   28808:	bls	28a10 <main@@Base+0x1296c>
   2880c:	mov	r4, r1
   28810:	cmp	r4, r9
   28814:	mov	r2, r9
   28818:	bne	28a3c <main@@Base+0x12998>
   2881c:	b	28a7c <main@@Base+0x129d8>
   28820:	ldr	sl, [sp, #24]
   28824:	mov	r0, sl
   28828:	mov	r1, ip
   2882c:	mov	r2, r9
   28830:	bl	373bc <flatcc_json_parser_unmatched_symbol@@Base>
   28834:	ldr	r5, [sp, #32]
   28838:	mov	r4, r0
   2883c:	sub	r0, r9, r4
   28840:	cmp	r0, #2
   28844:	blt	288b8 <main@@Base+0x12814>
   28848:	ldrb	r0, [r4]
   2884c:	cmp	r0, #32
   28850:	bls	288a4 <main@@Base+0x12800>
   28854:	mov	r2, r4
   28858:	cmp	r2, r9
   2885c:	beq	2b720 <main@@Base+0x1567c>
   28860:	ldrb	r0, [r2]
   28864:	cmp	r0, #44	; 0x2c
   28868:	bne	2b734 <main@@Base+0x15690>
   2886c:	add	r1, r2, #1
   28870:	sub	r0, r9, r1
   28874:	cmp	r0, #2
   28878:	blt	288e8 <main@@Base+0x12844>
   2887c:	ldrb	r0, [r1]
   28880:	cmp	r0, #32
   28884:	bls	288d8 <main@@Base+0x12834>
   28888:	mov	r2, r1
   2888c:	cmp	r2, r9
   28890:	beq	2b780 <main@@Base+0x156dc>
   28894:	ldrb	r0, [r2]
   28898:	cmp	r0, #125	; 0x7d
   2889c:	bne	28150 <main@@Base+0x120ac>
   288a0:	b	2b73c <main@@Base+0x15698>
   288a4:	bne	288b8 <main@@Base+0x12814>
   288a8:	mov	r2, r4
   288ac:	ldrb	r0, [r2, #1]!
   288b0:	cmp	r0, #32
   288b4:	bhi	288cc <main@@Base+0x12828>
   288b8:	mov	r0, sl
   288bc:	mov	r1, r4
   288c0:	mov	r2, r9
   288c4:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   288c8:	mov	r2, r0
   288cc:	cmp	r2, r9
   288d0:	bne	28860 <main@@Base+0x127bc>
   288d4:	b	2b720 <main@@Base+0x1567c>
   288d8:	bne	288e8 <main@@Base+0x12844>
   288dc:	ldrb	r0, [r2, #2]!
   288e0:	cmp	r0, #32
   288e4:	bhi	288f8 <main@@Base+0x12854>
   288e8:	mov	r0, sl
   288ec:	mov	r2, r9
   288f0:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   288f4:	mov	r2, r0
   288f8:	cmp	r2, r9
   288fc:	bne	28894 <main@@Base+0x127f0>
   28900:	b	2b780 <main@@Base+0x156dc>
   28904:	mov	r0, sl
   28908:	mov	r1, r4
   2890c:	mov	r2, r9
   28910:	mov	r3, #21
   28914:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   28918:	ldr	r5, [sp, #32]
   2891c:	mov	r4, r0
   28920:	ldr	r0, [sl, #24]
   28924:	cmp	r0, #0
   28928:	beq	2b604 <main@@Base+0x15560>
   2892c:	b	2b7c8 <main@@Base+0x15724>
   28930:	bne	28940 <main@@Base+0x1289c>
   28934:	ldrb	r0, [r4, #2]!
   28938:	cmp	r0, #32
   2893c:	bhi	28950 <main@@Base+0x128ac>
   28940:	ldr	r0, [sp, #24]
   28944:	mov	r2, r9
   28948:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   2894c:	mov	r4, r0
   28950:	mov	ip, r7
   28954:	cmp	r7, r4
   28958:	beq	28650 <main@@Base+0x125ac>
   2895c:	ldr	sl, [sp, #24]
   28960:	mov	r1, #9
   28964:	ldr	r0, [sl]
   28968:	bl	31fa8 <flatcc_builder_start_table@@Base>
   2896c:	cmp	r0, #0
   28970:	bne	2b7c8 <main@@Base+0x15724>
   28974:	cmp	r4, r9
   28978:	beq	289bc <main@@Base+0x12918>
   2897c:	ldrb	r0, [r4]
   28980:	cmp	r0, #123	; 0x7b
   28984:	bne	289bc <main@@Base+0x12918>
   28988:	ldr	r5, [sp, #32]
   2898c:	add	r1, r4, #1
   28990:	sub	r0, r9, r1
   28994:	cmp	r0, #2
   28998:	blt	29304 <main@@Base+0x13260>
   2899c:	ldrb	r0, [r1]
   289a0:	cmp	r0, #32
   289a4:	bls	292f4 <main@@Base+0x13250>
   289a8:	mov	r4, r1
   289ac:	cmp	r4, r9
   289b0:	mov	r2, r9
   289b4:	bne	29320 <main@@Base+0x1327c>
   289b8:	b	29360 <main@@Base+0x132bc>
   289bc:	mov	r0, sl
   289c0:	mov	r1, r4
   289c4:	mov	r2, r9
   289c8:	mov	r3, #21
   289cc:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   289d0:	ldr	r5, [sp, #32]
   289d4:	mov	r4, r0
   289d8:	ldr	r0, [sl, #24]
   289dc:	cmp	r0, #0
   289e0:	bne	2b7c8 <main@@Base+0x15724>
   289e4:	ldr	r0, [sl]
   289e8:	bl	32950 <flatcc_builder_end_table@@Base>
   289ec:	cmp	r0, #0
   289f0:	beq	2b7c8 <main@@Base+0x15724>
   289f4:	mov	r7, r0
   289f8:	ldr	r0, [sl]
   289fc:	mov	r1, #0
   28a00:	bl	3316c <flatcc_builder_table_add_offset@@Base>
   28a04:	cmp	r0, #0
   28a08:	bne	2b70c <main@@Base+0x15668>
   28a0c:	b	28078 <main@@Base+0x11fd4>
   28a10:	bne	28a20 <main@@Base+0x1297c>
   28a14:	ldrb	r0, [r4, #2]!
   28a18:	cmp	r0, #32
   28a1c:	bhi	28a30 <main@@Base+0x1298c>
   28a20:	mov	r0, sl
   28a24:	mov	r2, r9
   28a28:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   28a2c:	mov	r4, r0
   28a30:	cmp	r4, r9
   28a34:	mov	r2, r9
   28a38:	beq	28a7c <main@@Base+0x129d8>
   28a3c:	ldrb	r0, [r4]
   28a40:	cmp	r0, #125	; 0x7d
   28a44:	bne	28a78 <main@@Base+0x129d4>
   28a48:	add	r1, r4, #1
   28a4c:	sub	r0, r9, r1
   28a50:	cmp	r0, #2
   28a54:	blt	2b5e8 <main@@Base+0x15544>
   28a58:	ldrb	r0, [r1]
   28a5c:	cmp	r0, #32
   28a60:	bhi	2ab14 <main@@Base+0x14a70>
   28a64:	bne	2b5e8 <main@@Base+0x15544>
   28a68:	ldrb	r0, [r4, #2]!
   28a6c:	cmp	r0, #32
   28a70:	bls	2b5e8 <main@@Base+0x15544>
   28a74:	b	2b5f8 <main@@Base+0x15554>
   28a78:	mov	r2, r4
   28a7c:	cmp	r2, r9
   28a80:	mov	r1, r9
   28a84:	beq	28adc <main@@Base+0x12a38>
   28a88:	ldrb	r0, [r2]
   28a8c:	cmp	r0, #46	; 0x2e
   28a90:	beq	28ab0 <main@@Base+0x12a0c>
   28a94:	cmp	r0, #34	; 0x22
   28a98:	bne	28acc <main@@Base+0x12a28>
   28a9c:	ldr	r0, [sp, #28]
   28aa0:	mov	r1, #0
   28aa4:	str	r1, [r0]
   28aa8:	add	r1, r2, #1
   28aac:	b	28adc <main@@Base+0x12a38>
   28ab0:	mov	r1, r2
   28ab4:	mov	r0, sl
   28ab8:	mov	r2, r9
   28abc:	mov	r3, #5
   28ac0:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   28ac4:	mov	r1, r0
   28ac8:	b	28adc <main@@Base+0x12a38>
   28acc:	ldr	r0, [sp, #28]
   28ad0:	mov	r1, #1
   28ad4:	str	r1, [r0]
   28ad8:	mov	r1, r2
   28adc:	sub	r0, r9, r1
   28ae0:	mov	r2, #8
   28ae4:	cmp	r0, #8
   28ae8:	movcs	r0, r2
   28aec:	sub	r7, r0, #1
   28af0:	cmp	r7, #7
   28af4:	bhi	28ce0 <main@@Base+0x12c3c>
   28af8:	add	r0, pc, #32
   28afc:	mov	r8, #0
   28b00:	mov	ip, #0
   28b04:	mov	lr, #0
   28b08:	mov	r6, #0
   28b0c:	mov	r3, #0
   28b10:	mov	r5, #0
   28b14:	mov	r2, #0
   28b18:	mov	r4, #0
   28b1c:	ldr	pc, [r0, r7, lsl #2]
   28b20:	andeq	r8, r2, r4, lsl #23
   28b24:	andeq	r8, r2, ip, ror fp
   28b28:	andeq	r8, r2, r4, ror fp
   28b2c:	andeq	r8, r2, ip, ror #22
   28b30:	andeq	r8, r2, r0, ror #22
   28b34:	andeq	r8, r2, r4, asr fp
   28b38:	andeq	r8, r2, r4, asr #22
   28b3c:	andeq	r8, r2, r0, asr #22
   28b40:	ldrb	ip, [r1, #7]
   28b44:	ldrb	r0, [r1, #6]
   28b48:	mov	lr, r8
   28b4c:	orr	r0, ip, r0, lsl #8
   28b50:	mov	r8, r0
   28b54:	ldrb	r0, [r1, #5]
   28b58:	mov	r6, lr
   28b5c:	orr	r8, r8, r0, lsl #16
   28b60:	ldrb	r0, [r1, #4]
   28b64:	mov	r3, r6
   28b68:	orr	r8, r8, r0, lsl #24
   28b6c:	ldrb	r0, [r1, #3]
   28b70:	orr	r5, r0, r3
   28b74:	ldrb	r0, [r1, #2]
   28b78:	orr	r2, r5, r0, lsl #8
   28b7c:	ldrb	r0, [r1, #1]
   28b80:	orr	r4, r2, r0, lsl #16
   28b84:	ldrb	r2, [r1]
   28b88:	movw	r0, #25186	; 0x6262
   28b8c:	movw	r3, #24929	; 0x6161
   28b90:	movt	r0, #24418	; 0x5f62
   28b94:	movt	r3, #24929	; 0x6161
   28b98:	eor	r0, r8, r0
   28b9c:	orr	r2, r4, r2, lsl #24
   28ba0:	eor	r2, r2, r3
   28ba4:	orrs	r0, r0, r2
   28ba8:	bne	28ce0 <main@@Base+0x12c3c>
   28bac:	add	r4, r1, #8
   28bb0:	mov	r0, #8
   28bb4:	sub	lr, r9, r4
   28bb8:	cmp	lr, #8
   28bbc:	movcc	r0, lr
   28bc0:	sub	r6, r0, #1
   28bc4:	cmp	r6, #7
   28bc8:	bhi	28d50 <main@@Base+0x12cac>
   28bcc:	str	r4, [sp, #8]
   28bd0:	add	r8, pc, #32
   28bd4:	mov	r2, #0
   28bd8:	mov	ip, #0
   28bdc:	mov	sl, #0
   28be0:	mov	r5, #0
   28be4:	mov	r7, #0
   28be8:	mov	r4, #0
   28bec:	mov	r0, #0
   28bf0:	mov	r3, #0
   28bf4:	ldr	pc, [r8, r6, lsl #2]
   28bf8:	andeq	r8, r2, ip, asr ip
   28bfc:	andeq	r8, r2, r4, asr ip
   28c00:	andeq	r8, r2, ip, asr #24
   28c04:	andeq	r8, r2, r4, asr #24
   28c08:	andeq	r8, r2, r8, lsr ip
   28c0c:	andeq	r8, r2, ip, lsr #24
   28c10:	andeq	r8, r2, ip, lsl ip
   28c14:	andeq	r8, r2, r8, lsl ip
   28c18:	ldrb	ip, [r1, #15]
   28c1c:	ldrb	r0, [r1, #14]
   28c20:	mov	sl, r2
   28c24:	orr	r0, ip, r0, lsl #8
   28c28:	mov	r2, r0
   28c2c:	ldrb	r0, [r1, #13]
   28c30:	mov	r5, sl
   28c34:	orr	r2, r2, r0, lsl #16
   28c38:	ldrb	r0, [r1, #12]
   28c3c:	mov	r7, r5
   28c40:	orr	r2, r2, r0, lsl #24
   28c44:	ldrb	r0, [r1, #11]
   28c48:	orr	r4, r0, r7
   28c4c:	ldrb	r0, [r1, #10]
   28c50:	orr	r0, r4, r0, lsl #8
   28c54:	ldrb	r3, [r1, #9]
   28c58:	orr	r3, r0, r3, lsl #16
   28c5c:	ldr	r4, [sp, #8]
   28c60:	movw	r7, #29440	; 0x7300
   28c64:	bic	r0, r2, #255	; 0xff
   28c68:	movt	r7, #25968	; 0x6570
   28c6c:	eor	r7, r0, r7
   28c70:	ldrb	r0, [r4]
   28c74:	orr	r0, r3, r0, lsl #24
   28c78:	movw	r3, #29556	; 0x7374
   28c7c:	movt	r3, #25183	; 0x625f
   28c80:	eor	r0, r0, r3
   28c84:	orrs	r3, r7, r0
   28c88:	bne	28ce8 <main@@Base+0x12c44>
   28c8c:	ldr	sl, [sp, #24]
   28c90:	ldr	r5, [sp, #32]
   28c94:	cmp	lr, #8
   28c98:	blt	29124 <main@@Base+0x13080>
   28c9c:	ldr	r3, [sp, #28]
   28ca0:	mov	r2, r1
   28ca4:	ldrb	r0, [r2, #15]!
   28ca8:	ldr	r3, [r3]
   28cac:	cmp	r3, #0
   28cb0:	beq	28d78 <main@@Base+0x12cd4>
   28cb4:	cmp	r0, #33	; 0x21
   28cb8:	bcc	28cc4 <main@@Base+0x12c20>
   28cbc:	cmp	r0, #58	; 0x3a
   28cc0:	bne	29124 <main@@Base+0x13080>
   28cc4:	ldr	r0, [sp, #28]
   28cc8:	mov	r1, #0
   28ccc:	str	r1, [r0]
   28cd0:	sub	r0, r9, r2
   28cd4:	cmp	r0, #2
   28cd8:	bge	28d90 <main@@Base+0x12cec>
   28cdc:	b	28df4 <main@@Base+0x12d50>
   28ce0:	mov	r0, sl
   28ce4:	b	28d58 <main@@Base+0x12cb4>
   28ce8:	movw	r3, #29791	; 0x745f
   28cec:	ldr	sl, [sp, #24]
   28cf0:	movt	r3, #24946	; 0x6172
   28cf4:	eor	r2, r2, r3
   28cf8:	orrs	r0, r2, r0
   28cfc:	bne	28d50 <main@@Base+0x12cac>
   28d00:	ldr	r5, [sp, #32]
   28d04:	cmp	lr, #9
   28d08:	blt	29124 <main@@Base+0x13080>
   28d0c:	ldr	r3, [sp, #28]
   28d10:	mov	r2, r1
   28d14:	ldrb	r0, [r2, #16]!
   28d18:	ldr	r3, [r3]
   28d1c:	cmp	r3, #0
   28d20:	beq	28dac <main@@Base+0x12d08>
   28d24:	cmp	r0, #33	; 0x21
   28d28:	bcc	28d34 <main@@Base+0x12c90>
   28d2c:	cmp	r0, #58	; 0x3a
   28d30:	bne	29124 <main@@Base+0x13080>
   28d34:	ldr	r0, [sp, #28]
   28d38:	mov	r1, #0
   28d3c:	str	r1, [r0]
   28d40:	sub	r0, r9, r2
   28d44:	cmp	r0, #2
   28d48:	bge	28dc4 <main@@Base+0x12d20>
   28d4c:	b	28e74 <main@@Base+0x12dd0>
   28d50:	mov	r0, sl
   28d54:	mov	r1, r4
   28d58:	mov	r2, r9
   28d5c:	bl	373bc <flatcc_json_parser_unmatched_symbol@@Base>
   28d60:	ldr	r5, [sp, #32]
   28d64:	mov	r4, r0
   28d68:	sub	r0, r9, r4
   28d6c:	cmp	r0, #2
   28d70:	bge	29144 <main@@Base+0x130a0>
   28d74:	b	29174 <main@@Base+0x130d0>
   28d78:	cmp	r0, #34	; 0x22
   28d7c:	bne	29124 <main@@Base+0x13080>
   28d80:	add	r2, r1, #16
   28d84:	sub	r0, r9, r2
   28d88:	cmp	r0, #2
   28d8c:	blt	28df4 <main@@Base+0x12d50>
   28d90:	ldrb	r0, [r2]
   28d94:	cmp	r0, #32
   28d98:	bls	28de0 <main@@Base+0x12d3c>
   28d9c:	mov	r7, r2
   28da0:	cmp	r7, r9
   28da4:	bne	28e10 <main@@Base+0x12d6c>
   28da8:	b	28e48 <main@@Base+0x12da4>
   28dac:	cmp	r0, #34	; 0x22
   28db0:	bne	29124 <main@@Base+0x13080>
   28db4:	add	r2, r1, #17
   28db8:	sub	r0, r9, r2
   28dbc:	cmp	r0, #2
   28dc0:	blt	28e74 <main@@Base+0x12dd0>
   28dc4:	ldrb	r0, [r2]
   28dc8:	cmp	r0, #32
   28dcc:	bls	28e60 <main@@Base+0x12dbc>
   28dd0:	mov	r7, r2
   28dd4:	cmp	r7, r9
   28dd8:	bne	28e90 <main@@Base+0x12dec>
   28ddc:	b	28ed4 <main@@Base+0x12e30>
   28de0:	bne	28df4 <main@@Base+0x12d50>
   28de4:	mov	r7, r2
   28de8:	ldrb	r0, [r7, #1]!
   28dec:	cmp	r0, #32
   28df0:	bhi	28e08 <main@@Base+0x12d64>
   28df4:	mov	r1, r2
   28df8:	mov	r0, sl
   28dfc:	mov	r2, r9
   28e00:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   28e04:	mov	r7, r0
   28e08:	cmp	r7, r9
   28e0c:	beq	28e48 <main@@Base+0x12da4>
   28e10:	ldrb	r0, [r7]
   28e14:	cmp	r0, #58	; 0x3a
   28e18:	bne	28e48 <main@@Base+0x12da4>
   28e1c:	add	r1, r7, #1
   28e20:	sub	r0, r9, r1
   28e24:	cmp	r0, #2
   28e28:	blt	28efc <main@@Base+0x12e58>
   28e2c:	ldrb	r0, [r1]
   28e30:	cmp	r0, #32
   28e34:	bls	28eec <main@@Base+0x12e48>
   28e38:	mov	r7, r1
   28e3c:	cmp	r4, r7
   28e40:	bne	28f14 <main@@Base+0x12e70>
   28e44:	b	29124 <main@@Base+0x13080>
   28e48:	mov	r0, sl
   28e4c:	mov	r1, r7
   28e50:	mov	r2, r9
   28e54:	mov	r3, #4
   28e58:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   28e5c:	b	28f08 <main@@Base+0x12e64>
   28e60:	bne	28e74 <main@@Base+0x12dd0>
   28e64:	mov	r7, r2
   28e68:	ldrb	r0, [r7, #1]!
   28e6c:	cmp	r0, #32
   28e70:	bhi	28e88 <main@@Base+0x12de4>
   28e74:	mov	r1, r2
   28e78:	mov	r0, sl
   28e7c:	mov	r2, r9
   28e80:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   28e84:	mov	r7, r0
   28e88:	cmp	r7, r9
   28e8c:	beq	28ed4 <main@@Base+0x12e30>
   28e90:	ldrb	r0, [r7]
   28e94:	cmp	r0, #58	; 0x3a
   28e98:	bne	28ed4 <main@@Base+0x12e30>
   28e9c:	add	r1, r7, #1
   28ea0:	sub	r0, r9, r1
   28ea4:	cmp	r0, #2
   28ea8:	blt	29098 <main@@Base+0x12ff4>
   28eac:	ldrb	r0, [r1]
   28eb0:	cmp	r0, #32
   28eb4:	bls	2907c <main@@Base+0x12fd8>
   28eb8:	ldr	sl, [sp, #24]
   28ebc:	ldr	r5, [sp, #32]
   28ec0:	ldr	r4, [sp, #8]
   28ec4:	mov	r7, r1
   28ec8:	cmp	r4, r7
   28ecc:	bne	290b0 <main@@Base+0x1300c>
   28ed0:	b	29124 <main@@Base+0x13080>
   28ed4:	mov	r0, sl
   28ed8:	mov	r1, r7
   28edc:	mov	r2, r9
   28ee0:	mov	r3, #4
   28ee4:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   28ee8:	b	290a4 <main@@Base+0x13000>
   28eec:	bne	28efc <main@@Base+0x12e58>
   28ef0:	ldrb	r0, [r7, #2]!
   28ef4:	cmp	r0, #32
   28ef8:	bhi	28f0c <main@@Base+0x12e68>
   28efc:	mov	r0, sl
   28f00:	mov	r2, r9
   28f04:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   28f08:	mov	r7, r0
   28f0c:	cmp	r4, r7
   28f10:	beq	29124 <main@@Base+0x13080>
   28f14:	mov	r6, #0
   28f18:	cmp	r7, r9
   28f1c:	str	r6, [fp, #-36]	; 0xffffffdc
   28f20:	str	r6, [fp, #-40]	; 0xffffffd8
   28f24:	str	r6, [sp, #44]	; 0x2c
   28f28:	str	r6, [sp, #40]	; 0x28
   28f2c:	str	r6, [fp, #-44]	; 0xffffffd4
   28f30:	beq	28f8c <main@@Base+0x12ee8>
   28f34:	sub	r0, fp, #40	; 0x28
   28f38:	mov	r1, r7
   28f3c:	mov	r2, r9
   28f40:	sub	r3, fp, #44	; 0x2c
   28f44:	str	r0, [sp]
   28f48:	mov	r0, sl
   28f4c:	bl	38fa8 <flatcc_json_parser_integer@@Base>
   28f50:	cmp	r0, r7
   28f54:	beq	28fa0 <main@@Base+0x12efc>
   28f58:	sub	r8, fp, #44	; 0x2c
   28f5c:	mov	r4, r0
   28f60:	ldm	r8, {r0, r6, r8}
   28f64:	cmp	r0, #0
   28f68:	beq	28fb8 <main@@Base+0x12f14>
   28f6c:	subs	r0, r6, #1
   28f70:	sbcs	r0, r8, #-2147483648	; 0x80000000
   28f74:	bcc	28fec <main@@Base+0x12f48>
   28f78:	mov	r0, sl
   28f7c:	mov	r1, r4
   28f80:	mov	r2, r9
   28f84:	mov	r3, #8
   28f88:	b	28fd0 <main@@Base+0x12f2c>
   28f8c:	mov	r8, #0
   28f90:	mov	r4, r9
   28f94:	cmp	r7, r4
   28f98:	bne	29038 <main@@Base+0x12f94>
   28f9c:	b	29004 <main@@Base+0x12f60>
   28fa0:	mov	r6, #0
   28fa4:	mov	r8, #0
   28fa8:	mov	r4, r7
   28fac:	cmp	r7, r4
   28fb0:	bne	29038 <main@@Base+0x12f94>
   28fb4:	b	29004 <main@@Base+0x12f60>
   28fb8:	cmn	r8, #1
   28fbc:	bgt	28ff4 <main@@Base+0x12f50>
   28fc0:	mov	r0, sl
   28fc4:	mov	r1, r4
   28fc8:	mov	r2, r9
   28fcc:	mov	r3, #7
   28fd0:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   28fd4:	mov	r4, r0
   28fd8:	mov	r6, #0
   28fdc:	mov	r8, #0
   28fe0:	cmp	r7, r4
   28fe4:	bne	29038 <main@@Base+0x12f94>
   28fe8:	b	29004 <main@@Base+0x12f60>
   28fec:	rsbs	r6, r6, #0
   28ff0:	rsc	r8, r8, #0
   28ff4:	str	r6, [sp, #40]	; 0x28
   28ff8:	str	r8, [sp, #44]	; 0x2c
   28ffc:	cmp	r7, r4
   29000:	bne	29038 <main@@Base+0x12f94>
   29004:	ldr	r3, [sp, #12]
   29008:	add	r0, sp, #40	; 0x28
   2900c:	mov	r1, r7
   29010:	mov	r2, r9
   29014:	str	r0, [sp]
   29018:	mov	r0, sl
   2901c:	bl	26254 <main@@Base+0x101b0>
   29020:	mov	r4, r0
   29024:	cmp	r0, r7
   29028:	cmpne	r4, r9
   2902c:	beq	2b7c4 <main@@Base+0x15720>
   29030:	ldr	r6, [sp, #40]	; 0x28
   29034:	ldr	r8, [sp, #44]	; 0x2c
   29038:	orrs	r0, r6, r8
   2903c:	bne	2904c <main@@Base+0x12fa8>
   29040:	ldrb	r0, [sl, #8]
   29044:	tst	r0, #2
   29048:	beq	29138 <main@@Base+0x13094>
   2904c:	ldr	r0, [sl]
   29050:	mov	r1, #0
   29054:	mov	r2, #8
   29058:	mov	r3, #8
   2905c:	bl	332fc <flatcc_builder_table_add@@Base>
   29060:	cmp	r0, #0
   29064:	beq	2b7c4 <main@@Base+0x15720>
   29068:	stm	r0, {r6, r8}
   2906c:	sub	r0, r9, r4
   29070:	cmp	r0, #2
   29074:	bge	29144 <main@@Base+0x130a0>
   29078:	b	29174 <main@@Base+0x130d0>
   2907c:	ldr	sl, [sp, #24]
   29080:	ldr	r5, [sp, #32]
   29084:	ldr	r4, [sp, #8]
   29088:	bne	29098 <main@@Base+0x12ff4>
   2908c:	ldrb	r0, [r7, #2]!
   29090:	cmp	r0, #32
   29094:	bhi	290a8 <main@@Base+0x13004>
   29098:	mov	r0, sl
   2909c:	mov	r2, r9
   290a0:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   290a4:	mov	r7, r0
   290a8:	cmp	r4, r7
   290ac:	beq	29124 <main@@Base+0x13080>
   290b0:	mov	r6, #0
   290b4:	cmp	r7, r9
   290b8:	str	r6, [fp, #-36]	; 0xffffffdc
   290bc:	str	r6, [fp, #-40]	; 0xffffffd8
   290c0:	str	r6, [fp, #-44]	; 0xffffffd4
   290c4:	str	r6, [sp, #40]	; 0x28
   290c8:	beq	29200 <main@@Base+0x1315c>
   290cc:	sub	r0, fp, #40	; 0x28
   290d0:	mov	r1, r7
   290d4:	mov	r2, r9
   290d8:	add	r3, sp, #40	; 0x28
   290dc:	str	r0, [sp]
   290e0:	mov	r0, sl
   290e4:	bl	38fa8 <flatcc_json_parser_integer@@Base>
   290e8:	cmp	r0, r7
   290ec:	beq	29210 <main@@Base+0x1316c>
   290f0:	mov	r4, r0
   290f4:	ldr	r0, [sp, #40]	; 0x28
   290f8:	cmp	r0, #0
   290fc:	beq	29220 <main@@Base+0x1317c>
   29100:	mov	r0, sl
   29104:	mov	r1, r4
   29108:	mov	r2, r9
   2910c:	mov	r3, #8
   29110:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   29114:	mov	r4, r0
   29118:	cmp	r7, r4
   2911c:	bne	292b0 <main@@Base+0x1320c>
   29120:	b	29270 <main@@Base+0x131cc>
   29124:	mov	r0, sl
   29128:	mov	r1, r4
   2912c:	mov	r2, r9
   29130:	bl	373bc <flatcc_json_parser_unmatched_symbol@@Base>
   29134:	mov	r4, r0
   29138:	sub	r0, r9, r4
   2913c:	cmp	r0, #2
   29140:	blt	29174 <main@@Base+0x130d0>
   29144:	ldrb	r0, [r4]
   29148:	cmp	r0, #32
   2914c:	bls	29160 <main@@Base+0x130bc>
   29150:	mov	r2, r4
   29154:	cmp	r2, r9
   29158:	bne	29190 <main@@Base+0x130ec>
   2915c:	b	2aadc <main@@Base+0x14a38>
   29160:	bne	29174 <main@@Base+0x130d0>
   29164:	mov	r2, r4
   29168:	ldrb	r0, [r2, #1]!
   2916c:	cmp	r0, #32
   29170:	bhi	29188 <main@@Base+0x130e4>
   29174:	mov	r0, sl
   29178:	mov	r1, r4
   2917c:	mov	r2, r9
   29180:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   29184:	mov	r2, r0
   29188:	cmp	r2, r9
   2918c:	beq	2aadc <main@@Base+0x14a38>
   29190:	ldrb	r0, [r2]
   29194:	cmp	r0, #44	; 0x2c
   29198:	bne	2aaf0 <main@@Base+0x14a4c>
   2919c:	add	r1, r2, #1
   291a0:	sub	r0, r9, r1
   291a4:	cmp	r0, #2
   291a8:	blt	291d8 <main@@Base+0x13134>
   291ac:	ldrb	r0, [r1]
   291b0:	cmp	r0, #32
   291b4:	bls	291c8 <main@@Base+0x13124>
   291b8:	mov	r2, r1
   291bc:	cmp	r2, r9
   291c0:	bne	291f0 <main@@Base+0x1314c>
   291c4:	b	2ab28 <main@@Base+0x14a84>
   291c8:	bne	291d8 <main@@Base+0x13134>
   291cc:	ldrb	r0, [r2, #2]!
   291d0:	cmp	r0, #32
   291d4:	bhi	291e8 <main@@Base+0x13144>
   291d8:	mov	r0, sl
   291dc:	mov	r2, r9
   291e0:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   291e4:	mov	r2, r0
   291e8:	cmp	r2, r9
   291ec:	beq	2ab28 <main@@Base+0x14a84>
   291f0:	ldrb	r0, [r2]
   291f4:	cmp	r0, #125	; 0x7d
   291f8:	bne	28a7c <main@@Base+0x129d8>
   291fc:	b	2aaf8 <main@@Base+0x14a54>
   29200:	mov	r4, r9
   29204:	cmp	r7, r4
   29208:	bne	292b0 <main@@Base+0x1320c>
   2920c:	b	29270 <main@@Base+0x131cc>
   29210:	mov	r4, r7
   29214:	cmp	r7, r4
   29218:	bne	292b0 <main@@Base+0x1320c>
   2921c:	b	29270 <main@@Base+0x131cc>
   29220:	ldr	r0, [fp, #-36]	; 0xffffffdc
   29224:	cmp	r0, #0
   29228:	beq	29258 <main@@Base+0x131b4>
   2922c:	ldr	sl, [sp, #24]
   29230:	mov	r1, r4
   29234:	mov	r2, r9
   29238:	mov	r3, #7
   2923c:	mov	r0, sl
   29240:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   29244:	mov	r4, r0
   29248:	ldr	r5, [sp, #32]
   2924c:	cmp	r7, r4
   29250:	bne	292b0 <main@@Base+0x1320c>
   29254:	b	29270 <main@@Base+0x131cc>
   29258:	ldr	r6, [fp, #-40]	; 0xffffffd8
   2925c:	ldr	sl, [sp, #24]
   29260:	str	r6, [fp, #-44]	; 0xffffffd4
   29264:	ldr	r5, [sp, #32]
   29268:	cmp	r7, r4
   2926c:	bne	292b0 <main@@Base+0x1320c>
   29270:	sub	r0, fp, #44	; 0x2c
   29274:	mov	r1, r7
   29278:	mov	r2, r9
   2927c:	str	r0, [sp]
   29280:	movw	r0, #388	; 0x184
   29284:	movt	r0, #6
   29288:	add	r3, r0, #108	; 0x6c
   2928c:	mov	r0, sl
   29290:	bl	2649c <main@@Base+0x103f8>
   29294:	mov	r4, r0
   29298:	cmp	r0, r7
   2929c:	cmpne	r4, r9
   292a0:	beq	2b7c4 <main@@Base+0x15720>
   292a4:	ldr	r6, [fp, #-44]	; 0xffffffd4
   292a8:	ldr	sl, [sp, #24]
   292ac:	ldr	r5, [sp, #32]
   292b0:	cmp	r6, #0
   292b4:	bne	292c4 <main@@Base+0x13220>
   292b8:	ldrb	r0, [sl, #8]
   292bc:	tst	r0, #2
   292c0:	beq	29138 <main@@Base+0x13094>
   292c4:	ldr	r0, [sl]
   292c8:	mov	r1, #1
   292cc:	mov	r2, #4
   292d0:	mov	r3, #4
   292d4:	bl	332fc <flatcc_builder_table_add@@Base>
   292d8:	cmp	r0, #0
   292dc:	beq	2b7c4 <main@@Base+0x15720>
   292e0:	str	r6, [r0]
   292e4:	sub	r0, r9, r4
   292e8:	cmp	r0, #2
   292ec:	bge	29144 <main@@Base+0x130a0>
   292f0:	b	29174 <main@@Base+0x130d0>
   292f4:	bne	29304 <main@@Base+0x13260>
   292f8:	ldrb	r0, [r4, #2]!
   292fc:	cmp	r0, #32
   29300:	bhi	29314 <main@@Base+0x13270>
   29304:	mov	r0, sl
   29308:	mov	r2, r9
   2930c:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   29310:	mov	r4, r0
   29314:	cmp	r4, r9
   29318:	mov	r2, r9
   2931c:	beq	29360 <main@@Base+0x132bc>
   29320:	ldrb	r0, [r4]
   29324:	cmp	r0, #125	; 0x7d
   29328:	bne	2935c <main@@Base+0x132b8>
   2932c:	add	r1, r4, #1
   29330:	sub	r0, r9, r1
   29334:	cmp	r0, #2
   29338:	blt	2b66c <main@@Base+0x155c8>
   2933c:	ldrb	r0, [r1]
   29340:	cmp	r0, #32
   29344:	bhi	2ab6c <main@@Base+0x14ac8>
   29348:	bne	2b66c <main@@Base+0x155c8>
   2934c:	ldrb	r0, [r4, #2]!
   29350:	cmp	r0, #32
   29354:	bhi	289d8 <main@@Base+0x12934>
   29358:	b	2b66c <main@@Base+0x155c8>
   2935c:	mov	r2, r4
   29360:	cmp	r2, r9
   29364:	mov	sl, r9
   29368:	beq	293bc <main@@Base+0x13318>
   2936c:	ldrb	r0, [r2]
   29370:	cmp	r0, #46	; 0x2e
   29374:	beq	29390 <main@@Base+0x132ec>
   29378:	cmp	r0, #34	; 0x22
   2937c:	bne	293ac <main@@Base+0x13308>
   29380:	ldr	r0, [sp, #28]
   29384:	mov	r1, #0
   29388:	add	sl, r2, #1
   2938c:	b	293b8 <main@@Base+0x13314>
   29390:	ldr	r0, [sp, #24]
   29394:	mov	r1, r2
   29398:	mov	r2, r9
   2939c:	mov	r3, #5
   293a0:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   293a4:	mov	sl, r0
   293a8:	b	293bc <main@@Base+0x13318>
   293ac:	ldr	r0, [sp, #28]
   293b0:	mov	r1, #1
   293b4:	mov	sl, r2
   293b8:	str	r1, [r0]
   293bc:	sub	r8, r9, sl
   293c0:	mov	r0, #8
   293c4:	cmp	r8, #8
   293c8:	movcc	r0, r8
   293cc:	sub	r3, r0, #1
   293d0:	cmp	r3, #7
   293d4:	bhi	29a98 <main@@Base+0x139f4>
   293d8:	add	r5, pc, #32
   293dc:	mov	r0, #0
   293e0:	mov	ip, #0
   293e4:	mov	lr, #0
   293e8:	mov	r7, #0
   293ec:	mov	r2, #0
   293f0:	mov	r6, #0
   293f4:	mov	r4, #0
   293f8:	mov	r1, #0
   293fc:	ldr	pc, [r5, r3, lsl #2]
   29400:	andeq	r9, r2, r4, ror #8
   29404:	andeq	r9, r2, ip, asr r4
   29408:	andeq	r9, r2, r4, asr r4
   2940c:	andeq	r9, r2, ip, asr #8
   29410:	andeq	r9, r2, r0, asr #8
   29414:	andeq	r9, r2, r4, lsr r4
   29418:	andeq	r9, r2, r4, lsr #8
   2941c:	andeq	r9, r2, r0, lsr #8
   29420:	ldrb	ip, [sl, #7]
   29424:	ldrb	r1, [sl, #6]
   29428:	mov	lr, r0
   2942c:	orr	r1, ip, r1, lsl #8
   29430:	mov	r0, r1
   29434:	ldrb	r1, [sl, #5]
   29438:	mov	r7, lr
   2943c:	orr	r0, r0, r1, lsl #16
   29440:	ldrb	r1, [sl, #4]
   29444:	mov	r2, r7
   29448:	orr	r0, r0, r1, lsl #24
   2944c:	ldrb	r1, [sl, #3]
   29450:	orr	r6, r1, r2
   29454:	ldrb	r1, [sl, #2]
   29458:	orr	r4, r6, r1, lsl #8
   2945c:	ldrb	r1, [sl, #1]
   29460:	orr	r1, r4, r1, lsl #16
   29464:	ldrb	r2, [sl]
   29468:	orr	r7, r1, r2, lsl #24
   2946c:	movw	r1, #25442	; 0x6362
   29470:	movt	r1, #25443	; 0x6363
   29474:	cmp	r7, r1
   29478:	bhi	29518 <main@@Base+0x13474>
   2947c:	movw	r1, #13108	; 0x3334
   29480:	movt	r1, #12594	; 0x3132
   29484:	eor	r5, r0, r1
   29488:	movw	r1, #24929	; 0x6161
   2948c:	movt	r1, #24929	; 0x6161
   29490:	eor	r0, r7, r1
   29494:	orrs	r0, r5, r0
   29498:	bne	2958c <main@@Base+0x134e8>
   2949c:	add	r7, sl, #8
   294a0:	mov	r1, #8
   294a4:	sub	r0, r9, r7
   294a8:	cmp	r0, #8
   294ac:	movcc	r1, r0
   294b0:	sub	r1, r1, #1
   294b4:	cmp	r1, #7
   294b8:	bhi	2a868 <main@@Base+0x147c4>
   294bc:	ldrb	r1, [r7]
   294c0:	cmp	r1, #53	; 0x35
   294c4:	bne	2a868 <main@@Base+0x147c4>
   294c8:	cmp	r0, #2
   294cc:	blt	2a868 <main@@Base+0x147c4>
   294d0:	ldr	r2, [sp, #28]
   294d4:	mov	r1, sl
   294d8:	ldrb	r0, [r1, #9]!
   294dc:	ldr	r2, [r2]
   294e0:	cmp	r2, #0
   294e4:	beq	297e4 <main@@Base+0x13740>
   294e8:	cmp	r0, #33	; 0x21
   294ec:	bcc	294f8 <main@@Base+0x13454>
   294f0:	cmp	r0, #58	; 0x3a
   294f4:	bne	2a868 <main@@Base+0x147c4>
   294f8:	ldr	r0, [sp, #28]
   294fc:	mov	r2, #0
   29500:	str	r2, [r0]
   29504:	ldr	r4, [sp, #24]
   29508:	sub	r0, r9, r1
   2950c:	cmp	r0, #2
   29510:	bge	29800 <main@@Base+0x1375c>
   29514:	b	29e50 <main@@Base+0x13dac>
   29518:	movw	r1, #13108	; 0x3334
   2951c:	movt	r1, #12594	; 0x3132
   29520:	eor	r5, r0, r1
   29524:	ldr	r0, [sp, #20]
   29528:	eor	r0, r7, r0
   2952c:	orrs	r0, r5, r0
   29530:	bne	295e8 <main@@Base+0x13544>
   29534:	ldr	r5, [sp, #32]
   29538:	cmp	r8, #9
   2953c:	mov	r7, sl
   29540:	blt	29c98 <main@@Base+0x13bf4>
   29544:	ldr	r2, [sp, #28]
   29548:	mov	r1, sl
   2954c:	ldrb	r0, [r1, #8]!
   29550:	ldr	r2, [r2]
   29554:	cmp	r2, #0
   29558:	beq	2964c <main@@Base+0x135a8>
   2955c:	cmp	r0, #33	; 0x21
   29560:	bcc	29570 <main@@Base+0x134cc>
   29564:	cmp	r0, #58	; 0x3a
   29568:	mov	r7, sl
   2956c:	bne	29c98 <main@@Base+0x13bf4>
   29570:	ldr	r0, [sp, #28]
   29574:	mov	r2, #0
   29578:	str	r2, [r0]
   2957c:	sub	r0, r9, r1
   29580:	cmp	r0, #2
   29584:	bge	29668 <main@@Base+0x135c4>
   29588:	b	29708 <main@@Base+0x13664>
   2958c:	teq	r7, r1
   29590:	bne	29880 <main@@Base+0x137dc>
   29594:	cmp	r8, #5
   29598:	mov	r1, sl
   2959c:	blt	29f5c <main@@Base+0x13eb8>
   295a0:	ldr	r1, [sp, #28]
   295a4:	mov	r2, sl
   295a8:	ldrb	r0, [r2, #4]!
   295ac:	ldr	r1, [r1]
   295b0:	cmp	r1, #0
   295b4:	beq	29684 <main@@Base+0x135e0>
   295b8:	cmp	r0, #33	; 0x21
   295bc:	bcc	295cc <main@@Base+0x13528>
   295c0:	cmp	r0, #58	; 0x3a
   295c4:	mov	r1, sl
   295c8:	bne	29f5c <main@@Base+0x13eb8>
   295cc:	ldr	r0, [sp, #28]
   295d0:	mov	r1, #0
   295d4:	str	r1, [r0]
   295d8:	sub	r0, r9, r2
   295dc:	cmp	r0, #2
   295e0:	bge	296a0 <main@@Base+0x135fc>
   295e4:	b	29830 <main@@Base+0x1378c>
   295e8:	movw	r0, #25443	; 0x6363
   295ec:	movt	r0, #25443	; 0x6363
   295f0:	teq	r7, r0
   295f4:	bne	29a34 <main@@Base+0x13990>
   295f8:	cmp	r8, #5
   295fc:	mov	r1, sl
   29600:	blt	29fc8 <main@@Base+0x13f24>
   29604:	ldr	r1, [sp, #28]
   29608:	mov	r2, sl
   2960c:	ldrb	r0, [r2, #4]!
   29610:	ldr	r1, [r1]
   29614:	cmp	r1, #0
   29618:	beq	296bc <main@@Base+0x13618>
   2961c:	cmp	r0, #33	; 0x21
   29620:	bcc	29630 <main@@Base+0x1358c>
   29624:	cmp	r0, #58	; 0x3a
   29628:	mov	r1, sl
   2962c:	bne	29fc8 <main@@Base+0x13f24>
   29630:	ldr	r0, [sp, #28]
   29634:	mov	r1, #0
   29638:	str	r1, [r0]
   2963c:	sub	r0, r9, r2
   29640:	cmp	r0, #2
   29644:	bge	296d8 <main@@Base+0x13634>
   29648:	b	299e4 <main@@Base+0x13940>
   2964c:	cmp	r0, #34	; 0x22
   29650:	mov	r7, sl
   29654:	bne	29c98 <main@@Base+0x13bf4>
   29658:	add	r1, sl, #9
   2965c:	sub	r0, r9, r1
   29660:	cmp	r0, #2
   29664:	blt	29708 <main@@Base+0x13664>
   29668:	ldrb	r0, [r1]
   2966c:	cmp	r0, #32
   29670:	bls	296f4 <main@@Base+0x13650>
   29674:	mov	r7, r1
   29678:	cmp	r7, r9
   2967c:	bne	29720 <main@@Base+0x1367c>
   29680:	b	297cc <main@@Base+0x13728>
   29684:	cmp	r0, #34	; 0x22
   29688:	mov	r1, sl
   2968c:	bne	29f5c <main@@Base+0x13eb8>
   29690:	add	r2, sl, #5
   29694:	sub	r0, r9, r2
   29698:	cmp	r0, #2
   2969c:	blt	29830 <main@@Base+0x1378c>
   296a0:	ldrb	r0, [r2]
   296a4:	cmp	r0, #32
   296a8:	bls	2981c <main@@Base+0x13778>
   296ac:	mov	r1, r2
   296b0:	cmp	r1, r9
   296b4:	bne	2984c <main@@Base+0x137a8>
   296b8:	b	2994c <main@@Base+0x138a8>
   296bc:	cmp	r0, #34	; 0x22
   296c0:	mov	r1, sl
   296c4:	bne	29fc8 <main@@Base+0x13f24>
   296c8:	add	r2, sl, #5
   296cc:	sub	r0, r9, r2
   296d0:	cmp	r0, #2
   296d4:	blt	299e4 <main@@Base+0x13940>
   296d8:	ldrb	r0, [r2]
   296dc:	cmp	r0, #32
   296e0:	bls	299d0 <main@@Base+0x1392c>
   296e4:	mov	r1, r2
   296e8:	cmp	r1, r9
   296ec:	bne	29a00 <main@@Base+0x1395c>
   296f0:	b	29aa8 <main@@Base+0x13a04>
   296f4:	bne	29708 <main@@Base+0x13664>
   296f8:	mov	r7, r1
   296fc:	ldrb	r0, [r7, #1]!
   29700:	cmp	r0, #32
   29704:	bhi	29718 <main@@Base+0x13674>
   29708:	ldr	r0, [sp, #24]
   2970c:	mov	r2, r9
   29710:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   29714:	mov	r7, r0
   29718:	cmp	r7, r9
   2971c:	beq	297cc <main@@Base+0x13728>
   29720:	ldrb	r0, [r7]
   29724:	cmp	r0, #58	; 0x3a
   29728:	bne	297cc <main@@Base+0x13728>
   2972c:	add	r1, r7, #1
   29730:	sub	r0, r9, r1
   29734:	cmp	r0, #2
   29738:	blt	29c88 <main@@Base+0x13be4>
   2973c:	ldrb	r0, [r1]
   29740:	cmp	r0, #32
   29744:	bls	29c78 <main@@Base+0x13bd4>
   29748:	mov	r7, r1
   2974c:	cmp	sl, r7
   29750:	bne	29ca0 <main@@Base+0x13bfc>
   29754:	add	r7, sl, #8
   29758:	mov	r1, #8
   2975c:	sub	r0, r9, r7
   29760:	cmp	r0, #8
   29764:	movcc	r1, r0
   29768:	sub	r1, r1, #1
   2976c:	cmp	r1, #7
   29770:	bhi	29c50 <main@@Base+0x13bac>
   29774:	ldrb	r1, [r7]
   29778:	cmp	r1, #53	; 0x35
   2977c:	bne	29c50 <main@@Base+0x13bac>
   29780:	cmp	r0, #2
   29784:	blt	2a868 <main@@Base+0x147c4>
   29788:	ldr	r2, [sp, #28]
   2978c:	mov	r1, sl
   29790:	ldrb	r0, [r1, #9]!
   29794:	ldr	r2, [r2]
   29798:	cmp	r2, #0
   2979c:	beq	29e08 <main@@Base+0x13d64>
   297a0:	cmp	r0, #33	; 0x21
   297a4:	bcc	297b0 <main@@Base+0x1370c>
   297a8:	cmp	r0, #58	; 0x3a
   297ac:	bne	2a868 <main@@Base+0x147c4>
   297b0:	ldr	r0, [sp, #28]
   297b4:	mov	r2, #0
   297b8:	str	r2, [r0]
   297bc:	sub	r0, r9, r1
   297c0:	cmp	r0, #2
   297c4:	bge	29e20 <main@@Base+0x13d7c>
   297c8:	b	2a37c <main@@Base+0x142d8>
   297cc:	ldr	r0, [sp, #24]
   297d0:	mov	r1, r7
   297d4:	mov	r2, r9
   297d8:	mov	r3, #4
   297dc:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   297e0:	b	29c94 <main@@Base+0x13bf0>
   297e4:	cmp	r0, #34	; 0x22
   297e8:	bne	2a868 <main@@Base+0x147c4>
   297ec:	add	r1, sl, #10
   297f0:	ldr	r4, [sp, #24]
   297f4:	sub	r0, r9, r1
   297f8:	cmp	r0, #2
   297fc:	blt	29e50 <main@@Base+0x13dac>
   29800:	ldrb	r0, [r1]
   29804:	cmp	r0, #32
   29808:	bls	29e3c <main@@Base+0x13d98>
   2980c:	mov	r8, r1
   29810:	cmp	r8, r9
   29814:	bne	29e68 <main@@Base+0x13dc4>
   29818:	b	29ea0 <main@@Base+0x13dfc>
   2981c:	bne	29830 <main@@Base+0x1378c>
   29820:	mov	r1, r2
   29824:	ldrb	r0, [r1, #1]!
   29828:	cmp	r0, #32
   2982c:	bhi	29844 <main@@Base+0x137a0>
   29830:	ldr	r0, [sp, #24]
   29834:	mov	r1, r2
   29838:	mov	r2, r9
   2983c:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   29840:	mov	r1, r0
   29844:	cmp	r1, r9
   29848:	beq	2994c <main@@Base+0x138a8>
   2984c:	ldrb	r0, [r1]
   29850:	cmp	r0, #58	; 0x3a
   29854:	bne	2994c <main@@Base+0x138a8>
   29858:	add	r2, r1, #1
   2985c:	sub	r0, r9, r2
   29860:	cmp	r0, #2
   29864:	blt	29f48 <main@@Base+0x13ea4>
   29868:	ldrb	r0, [r2]
   2986c:	cmp	r0, #32
   29870:	bls	29f38 <main@@Base+0x13e94>
   29874:	mov	r1, r2
   29878:	cmp	sl, r1
   2987c:	bne	29f64 <main@@Base+0x13ec0>
   29880:	movw	r1, #25186	; 0x6262
   29884:	movt	r1, #25186	; 0x6262
   29888:	eor	r0, r7, r1
   2988c:	orrs	r0, r5, r0
   29890:	bne	298ec <main@@Base+0x13848>
   29894:	ldr	r5, [sp, #32]
   29898:	cmp	r8, #9
   2989c:	mov	r7, sl
   298a0:	blt	2a034 <main@@Base+0x13f90>
   298a4:	ldr	r2, [sp, #28]
   298a8:	mov	r1, sl
   298ac:	ldrb	r0, [r1, #8]!
   298b0:	ldr	r2, [r2]
   298b4:	cmp	r2, #0
   298b8:	beq	29960 <main@@Base+0x138bc>
   298bc:	cmp	r0, #33	; 0x21
   298c0:	bcc	298d0 <main@@Base+0x1382c>
   298c4:	cmp	r0, #58	; 0x3a
   298c8:	mov	r7, sl
   298cc:	bne	2a034 <main@@Base+0x13f90>
   298d0:	ldr	r0, [sp, #28]
   298d4:	mov	r2, #0
   298d8:	str	r2, [r0]
   298dc:	sub	r0, r9, r1
   298e0:	cmp	r0, #2
   298e4:	bge	2997c <main@@Base+0x138d8>
   298e8:	b	29b08 <main@@Base+0x13a64>
   298ec:	teq	r7, r1
   298f0:	bne	29a98 <main@@Base+0x139f4>
   298f4:	ldr	r5, [sp, #32]
   298f8:	cmp	r8, #5
   298fc:	mov	r1, sl
   29900:	blt	2a560 <main@@Base+0x144bc>
   29904:	ldr	r1, [sp, #28]
   29908:	mov	r2, sl
   2990c:	ldrb	r0, [r2, #4]!
   29910:	ldr	r1, [r1]
   29914:	cmp	r1, #0
   29918:	beq	29998 <main@@Base+0x138f4>
   2991c:	cmp	r0, #33	; 0x21
   29920:	bcc	29930 <main@@Base+0x1388c>
   29924:	cmp	r0, #58	; 0x3a
   29928:	mov	r1, sl
   2992c:	bne	2a560 <main@@Base+0x144bc>
   29930:	ldr	r0, [sp, #28]
   29934:	mov	r1, #0
   29938:	str	r1, [r0]
   2993c:	sub	r0, r9, r2
   29940:	cmp	r0, #2
   29944:	bge	299b4 <main@@Base+0x13910>
   29948:	b	29ecc <main@@Base+0x13e28>
   2994c:	ldr	r0, [sp, #24]
   29950:	mov	r2, r9
   29954:	mov	r3, #4
   29958:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   2995c:	b	29f58 <main@@Base+0x13eb4>
   29960:	cmp	r0, #34	; 0x22
   29964:	mov	r7, sl
   29968:	bne	2a034 <main@@Base+0x13f90>
   2996c:	add	r1, sl, #9
   29970:	sub	r0, r9, r1
   29974:	cmp	r0, #2
   29978:	blt	29b08 <main@@Base+0x13a64>
   2997c:	ldrb	r0, [r1]
   29980:	cmp	r0, #32
   29984:	bls	29af4 <main@@Base+0x13a50>
   29988:	mov	r7, r1
   2998c:	cmp	r7, r9
   29990:	bne	29b20 <main@@Base+0x13a7c>
   29994:	b	29b5c <main@@Base+0x13ab8>
   29998:	cmp	r0, #34	; 0x22
   2999c:	mov	r1, sl
   299a0:	bne	2a560 <main@@Base+0x144bc>
   299a4:	add	r2, sl, #5
   299a8:	sub	r0, r9, r2
   299ac:	cmp	r0, #2
   299b0:	blt	29ecc <main@@Base+0x13e28>
   299b4:	ldrb	r0, [r2]
   299b8:	cmp	r0, #32
   299bc:	bls	29eb8 <main@@Base+0x13e14>
   299c0:	mov	r1, r2
   299c4:	cmp	r1, r9
   299c8:	bne	29ee8 <main@@Base+0x13e44>
   299cc:	b	29f24 <main@@Base+0x13e80>
   299d0:	bne	299e4 <main@@Base+0x13940>
   299d4:	mov	r1, r2
   299d8:	ldrb	r0, [r1, #1]!
   299dc:	cmp	r0, #32
   299e0:	bhi	299f8 <main@@Base+0x13954>
   299e4:	ldr	r0, [sp, #24]
   299e8:	mov	r1, r2
   299ec:	mov	r2, r9
   299f0:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   299f4:	mov	r1, r0
   299f8:	cmp	r1, r9
   299fc:	beq	29aa8 <main@@Base+0x13a04>
   29a00:	ldrb	r0, [r1]
   29a04:	cmp	r0, #58	; 0x3a
   29a08:	bne	29aa8 <main@@Base+0x13a04>
   29a0c:	add	r2, r1, #1
   29a10:	sub	r0, r9, r2
   29a14:	cmp	r0, #2
   29a18:	blt	29fb4 <main@@Base+0x13f10>
   29a1c:	ldrb	r0, [r2]
   29a20:	cmp	r0, #32
   29a24:	bls	29fa4 <main@@Base+0x13f00>
   29a28:	mov	r1, r2
   29a2c:	cmp	sl, r1
   29a30:	bne	29fd0 <main@@Base+0x13f2c>
   29a34:	ldr	r0, [sp, #16]
   29a38:	eor	r0, r7, r0
   29a3c:	orrs	r0, r5, r0
   29a40:	bne	29a98 <main@@Base+0x139f4>
   29a44:	cmp	r8, #9
   29a48:	mov	r7, sl
   29a4c:	blt	2a1b0 <main@@Base+0x1410c>
   29a50:	ldr	r2, [sp, #28]
   29a54:	mov	r1, sl
   29a58:	ldrb	r0, [r1, #8]!
   29a5c:	ldr	r2, [r2]
   29a60:	cmp	r2, #0
   29a64:	beq	29abc <main@@Base+0x13a18>
   29a68:	cmp	r0, #33	; 0x21
   29a6c:	bcc	29a7c <main@@Base+0x139d8>
   29a70:	cmp	r0, #58	; 0x3a
   29a74:	mov	r7, sl
   29a78:	bne	2a1b0 <main@@Base+0x1410c>
   29a7c:	ldr	r0, [sp, #28]
   29a80:	mov	r2, #0
   29a84:	str	r2, [r0]
   29a88:	sub	r0, r9, r1
   29a8c:	cmp	r0, #2
   29a90:	bge	29ad8 <main@@Base+0x13a34>
   29a94:	b	29b88 <main@@Base+0x13ae4>
   29a98:	ldr	r0, [sp, #24]
   29a9c:	mov	r1, sl
   29aa0:	mov	sl, r0
   29aa4:	b	2a874 <main@@Base+0x147d0>
   29aa8:	ldr	r0, [sp, #24]
   29aac:	mov	r2, r9
   29ab0:	mov	r3, #4
   29ab4:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   29ab8:	b	29fc4 <main@@Base+0x13f20>
   29abc:	cmp	r0, #34	; 0x22
   29ac0:	mov	r7, sl
   29ac4:	bne	2a1b0 <main@@Base+0x1410c>
   29ac8:	add	r1, sl, #9
   29acc:	sub	r0, r9, r1
   29ad0:	cmp	r0, #2
   29ad4:	blt	29b88 <main@@Base+0x13ae4>
   29ad8:	ldrb	r0, [r1]
   29adc:	cmp	r0, #32
   29ae0:	bls	29b74 <main@@Base+0x13ad0>
   29ae4:	mov	r7, r1
   29ae8:	cmp	r7, r9
   29aec:	bne	29ba0 <main@@Base+0x13afc>
   29af0:	b	29c60 <main@@Base+0x13bbc>
   29af4:	bne	29b08 <main@@Base+0x13a64>
   29af8:	mov	r7, r1
   29afc:	ldrb	r0, [r7, #1]!
   29b00:	cmp	r0, #32
   29b04:	bhi	29b18 <main@@Base+0x13a74>
   29b08:	ldr	r0, [sp, #24]
   29b0c:	mov	r2, r9
   29b10:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   29b14:	mov	r7, r0
   29b18:	cmp	r7, r9
   29b1c:	beq	29b5c <main@@Base+0x13ab8>
   29b20:	ldrb	r0, [r7]
   29b24:	cmp	r0, #58	; 0x3a
   29b28:	bne	29b5c <main@@Base+0x13ab8>
   29b2c:	add	r1, r7, #1
   29b30:	sub	r0, r9, r1
   29b34:	cmp	r0, #2
   29b38:	blt	2a024 <main@@Base+0x13f80>
   29b3c:	ldrb	r0, [r1]
   29b40:	cmp	r0, #32
   29b44:	bls	2a010 <main@@Base+0x13f6c>
   29b48:	ldr	r5, [sp, #32]
   29b4c:	mov	r7, r1
   29b50:	cmp	sl, r7
   29b54:	bne	2a03c <main@@Base+0x13f98>
   29b58:	b	2a5b8 <main@@Base+0x14514>
   29b5c:	ldr	r0, [sp, #24]
   29b60:	mov	r1, r7
   29b64:	mov	r2, r9
   29b68:	mov	r3, #4
   29b6c:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   29b70:	b	2a030 <main@@Base+0x13f8c>
   29b74:	bne	29b88 <main@@Base+0x13ae4>
   29b78:	mov	r7, r1
   29b7c:	ldrb	r0, [r7, #1]!
   29b80:	cmp	r0, #32
   29b84:	bhi	29b98 <main@@Base+0x13af4>
   29b88:	ldr	r0, [sp, #24]
   29b8c:	mov	r2, r9
   29b90:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   29b94:	mov	r7, r0
   29b98:	cmp	r7, r9
   29b9c:	beq	29c60 <main@@Base+0x13bbc>
   29ba0:	ldrb	r0, [r7]
   29ba4:	cmp	r0, #58	; 0x3a
   29ba8:	bne	29c60 <main@@Base+0x13bbc>
   29bac:	add	r1, r7, #1
   29bb0:	sub	r0, r9, r1
   29bb4:	cmp	r0, #2
   29bb8:	blt	2a1a0 <main@@Base+0x140fc>
   29bbc:	ldrb	r0, [r1]
   29bc0:	cmp	r0, #32
   29bc4:	bls	2a190 <main@@Base+0x140ec>
   29bc8:	mov	r7, r1
   29bcc:	cmp	sl, r7
   29bd0:	bne	2a1b8 <main@@Base+0x14114>
   29bd4:	add	r7, sl, #8
   29bd8:	ldr	r5, [sp, #32]
   29bdc:	mov	r1, #8
   29be0:	sub	r0, r9, r7
   29be4:	cmp	r0, #8
   29be8:	movcc	r1, r0
   29bec:	sub	r1, r1, #1
   29bf0:	cmp	r1, #7
   29bf4:	bhi	29c50 <main@@Base+0x13bac>
   29bf8:	ldrb	r1, [r7]
   29bfc:	cmp	r1, #53	; 0x35
   29c00:	bne	29c50 <main@@Base+0x13bac>
   29c04:	cmp	r0, #2
   29c08:	blt	2a868 <main@@Base+0x147c4>
   29c0c:	ldr	r2, [sp, #28]
   29c10:	mov	r1, sl
   29c14:	ldrb	r0, [r1, #9]!
   29c18:	ldr	r2, [r2]
   29c1c:	cmp	r2, #0
   29c20:	beq	2a334 <main@@Base+0x14290>
   29c24:	cmp	r0, #33	; 0x21
   29c28:	bcc	29c34 <main@@Base+0x13b90>
   29c2c:	cmp	r0, #58	; 0x3a
   29c30:	bne	2a868 <main@@Base+0x147c4>
   29c34:	ldr	r0, [sp, #28]
   29c38:	mov	r2, #0
   29c3c:	str	r2, [r0]
   29c40:	sub	r0, r9, r1
   29c44:	cmp	r0, #2
   29c48:	bge	2a34c <main@@Base+0x142a8>
   29c4c:	b	2a60c <main@@Base+0x14568>
   29c50:	ldr	sl, [sp, #24]
   29c54:	mov	r1, r7
   29c58:	mov	r0, sl
   29c5c:	b	2a5c4 <main@@Base+0x14520>
   29c60:	ldr	r0, [sp, #24]
   29c64:	mov	r1, r7
   29c68:	mov	r2, r9
   29c6c:	mov	r3, #4
   29c70:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   29c74:	b	2a1ac <main@@Base+0x14108>
   29c78:	bne	29c88 <main@@Base+0x13be4>
   29c7c:	ldrb	r0, [r7, #2]!
   29c80:	cmp	r0, #32
   29c84:	bhi	29c98 <main@@Base+0x13bf4>
   29c88:	ldr	r0, [sp, #24]
   29c8c:	mov	r2, r9
   29c90:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   29c94:	mov	r7, r0
   29c98:	cmp	sl, r7
   29c9c:	beq	29754 <main@@Base+0x136b0>
   29ca0:	mov	r6, #0
   29ca4:	cmp	r7, r9
   29ca8:	str	r6, [fp, #-36]	; 0xffffffdc
   29cac:	str	r6, [fp, #-40]	; 0xffffffd8
   29cb0:	str	r6, [sp, #44]	; 0x2c
   29cb4:	str	r6, [sp, #40]	; 0x28
   29cb8:	str	r6, [fp, #-44]	; 0xffffffd4
   29cbc:	beq	29d1c <main@@Base+0x13c78>
   29cc0:	ldr	sl, [sp, #24]
   29cc4:	sub	r0, fp, #40	; 0x28
   29cc8:	mov	r1, r7
   29ccc:	mov	r2, r9
   29cd0:	sub	r3, fp, #44	; 0x2c
   29cd4:	str	r0, [sp]
   29cd8:	mov	r0, sl
   29cdc:	bl	38fa8 <flatcc_json_parser_integer@@Base>
   29ce0:	cmp	r0, r7
   29ce4:	beq	29d34 <main@@Base+0x13c90>
   29ce8:	sub	r8, fp, #44	; 0x2c
   29cec:	mov	r4, r0
   29cf0:	ldm	r8, {r0, r6, r8}
   29cf4:	cmp	r0, #0
   29cf8:	beq	29d4c <main@@Base+0x13ca8>
   29cfc:	subs	r0, r6, #1
   29d00:	sbcs	r0, r8, #-2147483648	; 0x80000000
   29d04:	bcc	29d80 <main@@Base+0x13cdc>
   29d08:	mov	r0, sl
   29d0c:	mov	r1, r4
   29d10:	mov	r2, r9
   29d14:	mov	r3, #8
   29d18:	b	29d64 <main@@Base+0x13cc0>
   29d1c:	ldr	sl, [sp, #24]
   29d20:	mov	r8, #0
   29d24:	mov	r4, r9
   29d28:	cmp	r7, r4
   29d2c:	bne	29dd4 <main@@Base+0x13d30>
   29d30:	b	29d98 <main@@Base+0x13cf4>
   29d34:	mov	r6, #0
   29d38:	mov	r8, #0
   29d3c:	mov	r4, r7
   29d40:	cmp	r7, r4
   29d44:	bne	29dd4 <main@@Base+0x13d30>
   29d48:	b	29d98 <main@@Base+0x13cf4>
   29d4c:	cmn	r8, #1
   29d50:	bgt	29d88 <main@@Base+0x13ce4>
   29d54:	mov	r0, sl
   29d58:	mov	r1, r4
   29d5c:	mov	r2, r9
   29d60:	mov	r3, #7
   29d64:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   29d68:	mov	r4, r0
   29d6c:	mov	r6, #0
   29d70:	mov	r8, #0
   29d74:	cmp	r7, r4
   29d78:	bne	29dd4 <main@@Base+0x13d30>
   29d7c:	b	29d98 <main@@Base+0x13cf4>
   29d80:	rsbs	r6, r6, #0
   29d84:	rsc	r8, r8, #0
   29d88:	str	r6, [sp, #40]	; 0x28
   29d8c:	str	r8, [sp, #44]	; 0x2c
   29d90:	cmp	r7, r4
   29d94:	bne	29dd4 <main@@Base+0x13d30>
   29d98:	add	r0, sp, #40	; 0x28
   29d9c:	mov	r1, r7
   29da0:	mov	r2, r9
   29da4:	str	r0, [sp]
   29da8:	movw	r0, #508	; 0x1fc
   29dac:	movt	r0, #6
   29db0:	add	r3, r0, #24
   29db4:	mov	r0, sl
   29db8:	bl	26254 <main@@Base+0x101b0>
   29dbc:	mov	r4, r0
   29dc0:	cmp	r0, r7
   29dc4:	cmpne	r4, r9
   29dc8:	beq	2b7c8 <main@@Base+0x15724>
   29dcc:	ldr	r6, [sp, #40]	; 0x28
   29dd0:	ldr	r8, [sp, #44]	; 0x2c
   29dd4:	orrs	r0, r6, r8
   29dd8:	bne	29de8 <main@@Base+0x13d44>
   29ddc:	ldrb	r0, [sl, #8]
   29de0:	tst	r0, #2
   29de4:	beq	2a884 <main@@Base+0x147e0>
   29de8:	ldr	r0, [sl]
   29dec:	mov	r1, #5
   29df0:	mov	r2, #8
   29df4:	mov	r3, #8
   29df8:	bl	332fc <flatcc_builder_table_add@@Base>
   29dfc:	cmp	r0, #0
   29e00:	bne	2a320 <main@@Base+0x1427c>
   29e04:	b	2b7c8 <main@@Base+0x15724>
   29e08:	cmp	r0, #34	; 0x22
   29e0c:	bne	2a868 <main@@Base+0x147c4>
   29e10:	add	r1, sl, #10
   29e14:	sub	r0, r9, r1
   29e18:	cmp	r0, #2
   29e1c:	blt	2a37c <main@@Base+0x142d8>
   29e20:	ldrb	r0, [r1]
   29e24:	cmp	r0, #32
   29e28:	bls	2a368 <main@@Base+0x142c4>
   29e2c:	mov	r8, r1
   29e30:	cmp	r8, r9
   29e34:	bne	2a394 <main@@Base+0x142f0>
   29e38:	b	2a3cc <main@@Base+0x14328>
   29e3c:	bne	29e50 <main@@Base+0x13dac>
   29e40:	mov	r8, r1
   29e44:	ldrb	r0, [r8, #1]!
   29e48:	cmp	r0, #32
   29e4c:	bhi	29e60 <main@@Base+0x13dbc>
   29e50:	mov	r0, r4
   29e54:	mov	r2, r9
   29e58:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   29e5c:	mov	r8, r0
   29e60:	cmp	r8, r9
   29e64:	beq	29ea0 <main@@Base+0x13dfc>
   29e68:	ldrb	r0, [r8]
   29e6c:	cmp	r0, #58	; 0x3a
   29e70:	bne	29ea0 <main@@Base+0x13dfc>
   29e74:	add	r1, r8, #1
   29e78:	sub	r0, r9, r1
   29e7c:	cmp	r0, #2
   29e80:	blt	2a3f4 <main@@Base+0x14350>
   29e84:	ldrb	r0, [r1]
   29e88:	cmp	r0, #32
   29e8c:	bls	2a3e4 <main@@Base+0x14340>
   29e90:	mov	r8, r1
   29e94:	cmp	r7, r8
   29e98:	bne	2a40c <main@@Base+0x14368>
   29e9c:	b	2a868 <main@@Base+0x147c4>
   29ea0:	mov	r0, r4
   29ea4:	mov	r1, r8
   29ea8:	mov	r2, r9
   29eac:	mov	r3, #4
   29eb0:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   29eb4:	b	2a400 <main@@Base+0x1435c>
   29eb8:	bne	29ecc <main@@Base+0x13e28>
   29ebc:	mov	r1, r2
   29ec0:	ldrb	r0, [r1, #1]!
   29ec4:	cmp	r0, #32
   29ec8:	bhi	29ee0 <main@@Base+0x13e3c>
   29ecc:	ldr	r0, [sp, #24]
   29ed0:	mov	r1, r2
   29ed4:	mov	r2, r9
   29ed8:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   29edc:	mov	r1, r0
   29ee0:	cmp	r1, r9
   29ee4:	beq	29f24 <main@@Base+0x13e80>
   29ee8:	ldrb	r0, [r1]
   29eec:	cmp	r0, #58	; 0x3a
   29ef0:	bne	29f24 <main@@Base+0x13e80>
   29ef4:	add	r2, r1, #1
   29ef8:	sub	r0, r9, r2
   29efc:	cmp	r0, #2
   29f00:	blt	2a54c <main@@Base+0x144a8>
   29f04:	ldrb	r0, [r2]
   29f08:	cmp	r0, #32
   29f0c:	bls	2a538 <main@@Base+0x14494>
   29f10:	ldr	r5, [sp, #32]
   29f14:	mov	r1, r2
   29f18:	cmp	sl, r1
   29f1c:	bne	2a568 <main@@Base+0x144c4>
   29f20:	b	2a5b8 <main@@Base+0x14514>
   29f24:	ldr	r0, [sp, #24]
   29f28:	mov	r2, r9
   29f2c:	mov	r3, #4
   29f30:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   29f34:	b	2a55c <main@@Base+0x144b8>
   29f38:	bne	29f48 <main@@Base+0x13ea4>
   29f3c:	ldrb	r0, [r1, #2]!
   29f40:	cmp	r0, #32
   29f44:	bhi	29f5c <main@@Base+0x13eb8>
   29f48:	ldr	r0, [sp, #24]
   29f4c:	mov	r1, r2
   29f50:	mov	r2, r9
   29f54:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   29f58:	mov	r1, r0
   29f5c:	cmp	sl, r1
   29f60:	beq	29880 <main@@Base+0x137dc>
   29f64:	ldr	sl, [sp, #24]
   29f68:	mov	r2, r9
   29f6c:	add	r3, sp, #36	; 0x24
   29f70:	mov	r0, sl
   29f74:	bl	39580 <flatcc_json_parser_build_string@@Base>
   29f78:	mov	r4, r0
   29f7c:	ldr	r0, [sp, #36]	; 0x24
   29f80:	ldr	r5, [sp, #32]
   29f84:	cmp	r0, #0
   29f88:	beq	2b7c8 <main@@Base+0x15724>
   29f8c:	ldr	r0, [sl]
   29f90:	mov	r1, #0
   29f94:	bl	3316c <flatcc_builder_table_add_offset@@Base>
   29f98:	cmp	r0, #0
   29f9c:	bne	2a5a0 <main@@Base+0x144fc>
   29fa0:	b	2b7c8 <main@@Base+0x15724>
   29fa4:	bne	29fb4 <main@@Base+0x13f10>
   29fa8:	ldrb	r0, [r1, #2]!
   29fac:	cmp	r0, #32
   29fb0:	bhi	29fc8 <main@@Base+0x13f24>
   29fb4:	ldr	r0, [sp, #24]
   29fb8:	mov	r1, r2
   29fbc:	mov	r2, r9
   29fc0:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   29fc4:	mov	r1, r0
   29fc8:	cmp	sl, r1
   29fcc:	beq	29a34 <main@@Base+0x13990>
   29fd0:	ldr	sl, [sp, #24]
   29fd4:	mov	r2, r9
   29fd8:	add	r3, sp, #36	; 0x24
   29fdc:	mov	r0, sl
   29fe0:	bl	39580 <flatcc_json_parser_build_string@@Base>
   29fe4:	mov	r4, r0
   29fe8:	ldr	r0, [sp, #36]	; 0x24
   29fec:	cmp	r0, #0
   29ff0:	beq	2b7c8 <main@@Base+0x15724>
   29ff4:	ldr	r0, [sl]
   29ff8:	mov	r1, #4
   29ffc:	bl	3316c <flatcc_builder_table_add_offset@@Base>
   2a000:	ldr	r5, [sp, #32]
   2a004:	cmp	r0, #0
   2a008:	bne	2a5a0 <main@@Base+0x144fc>
   2a00c:	b	2b7c8 <main@@Base+0x15724>
   2a010:	ldr	r5, [sp, #32]
   2a014:	bne	2a024 <main@@Base+0x13f80>
   2a018:	ldrb	r0, [r7, #2]!
   2a01c:	cmp	r0, #32
   2a020:	bhi	2a034 <main@@Base+0x13f90>
   2a024:	ldr	r0, [sp, #24]
   2a028:	mov	r2, r9
   2a02c:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   2a030:	mov	r7, r0
   2a034:	cmp	sl, r7
   2a038:	beq	2a5b8 <main@@Base+0x14514>
   2a03c:	mov	r6, #0
   2a040:	cmp	r7, r9
   2a044:	str	r6, [fp, #-36]	; 0xffffffdc
   2a048:	str	r6, [fp, #-40]	; 0xffffffd8
   2a04c:	str	r6, [sp, #44]	; 0x2c
   2a050:	str	r6, [sp, #40]	; 0x28
   2a054:	str	r6, [fp, #-44]	; 0xffffffd4
   2a058:	beq	2a0b8 <main@@Base+0x14014>
   2a05c:	ldr	sl, [sp, #24]
   2a060:	sub	r0, fp, #40	; 0x28
   2a064:	mov	r1, r7
   2a068:	mov	r2, r9
   2a06c:	sub	r3, fp, #44	; 0x2c
   2a070:	str	r0, [sp]
   2a074:	mov	r0, sl
   2a078:	bl	38fa8 <flatcc_json_parser_integer@@Base>
   2a07c:	cmp	r0, r7
   2a080:	beq	2a0d0 <main@@Base+0x1402c>
   2a084:	sub	r8, fp, #44	; 0x2c
   2a088:	mov	r4, r0
   2a08c:	ldm	r8, {r0, r6, r8}
   2a090:	cmp	r0, #0
   2a094:	beq	2a0e8 <main@@Base+0x14044>
   2a098:	subs	r0, r6, #1
   2a09c:	sbcs	r0, r8, #-2147483648	; 0x80000000
   2a0a0:	bcc	2a11c <main@@Base+0x14078>
   2a0a4:	mov	r0, sl
   2a0a8:	mov	r1, r4
   2a0ac:	mov	r2, r9
   2a0b0:	mov	r3, #8
   2a0b4:	b	2a100 <main@@Base+0x1405c>
   2a0b8:	ldr	sl, [sp, #24]
   2a0bc:	mov	r8, #0
   2a0c0:	mov	r4, r9
   2a0c4:	cmp	r7, r4
   2a0c8:	bne	2a170 <main@@Base+0x140cc>
   2a0cc:	b	2a134 <main@@Base+0x14090>
   2a0d0:	mov	r6, #0
   2a0d4:	mov	r8, #0
   2a0d8:	mov	r4, r7
   2a0dc:	cmp	r7, r4
   2a0e0:	bne	2a170 <main@@Base+0x140cc>
   2a0e4:	b	2a134 <main@@Base+0x14090>
   2a0e8:	cmn	r8, #1
   2a0ec:	bgt	2a124 <main@@Base+0x14080>
   2a0f0:	mov	r0, sl
   2a0f4:	mov	r1, r4
   2a0f8:	mov	r2, r9
   2a0fc:	mov	r3, #7
   2a100:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   2a104:	mov	r4, r0
   2a108:	mov	r6, #0
   2a10c:	mov	r8, #0
   2a110:	cmp	r7, r4
   2a114:	bne	2a170 <main@@Base+0x140cc>
   2a118:	b	2a134 <main@@Base+0x14090>
   2a11c:	rsbs	r6, r6, #0
   2a120:	rsc	r8, r8, #0
   2a124:	str	r6, [sp, #40]	; 0x28
   2a128:	str	r8, [sp, #44]	; 0x2c
   2a12c:	cmp	r7, r4
   2a130:	bne	2a170 <main@@Base+0x140cc>
   2a134:	add	r0, sp, #40	; 0x28
   2a138:	mov	r1, r7
   2a13c:	mov	r2, r9
   2a140:	str	r0, [sp]
   2a144:	movw	r0, #508	; 0x1fc
   2a148:	movt	r0, #6
   2a14c:	add	r3, r0, #12
   2a150:	mov	r0, sl
   2a154:	bl	26254 <main@@Base+0x101b0>
   2a158:	mov	r4, r0
   2a15c:	cmp	r0, r7
   2a160:	cmpne	r4, r9
   2a164:	beq	2b7c4 <main@@Base+0x15720>
   2a168:	ldr	r6, [sp, #40]	; 0x28
   2a16c:	ldr	r8, [sp, #44]	; 0x2c
   2a170:	orrs	r0, r6, r8
   2a174:	bne	2a184 <main@@Base+0x140e0>
   2a178:	ldrb	r0, [sl, #8]
   2a17c:	tst	r0, #2
   2a180:	beq	2a884 <main@@Base+0x147e0>
   2a184:	ldr	r0, [sl]
   2a188:	mov	r1, #3
   2a18c:	b	2a30c <main@@Base+0x14268>
   2a190:	bne	2a1a0 <main@@Base+0x140fc>
   2a194:	ldrb	r0, [r7, #2]!
   2a198:	cmp	r0, #32
   2a19c:	bhi	2a1b0 <main@@Base+0x1410c>
   2a1a0:	ldr	r0, [sp, #24]
   2a1a4:	mov	r2, r9
   2a1a8:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   2a1ac:	mov	r7, r0
   2a1b0:	cmp	sl, r7
   2a1b4:	beq	29bd4 <main@@Base+0x13b30>
   2a1b8:	ldr	r5, [sp, #32]
   2a1bc:	mov	r6, #0
   2a1c0:	cmp	r7, r9
   2a1c4:	str	r6, [fp, #-36]	; 0xffffffdc
   2a1c8:	str	r6, [fp, #-40]	; 0xffffffd8
   2a1cc:	str	r6, [sp, #44]	; 0x2c
   2a1d0:	str	r6, [sp, #40]	; 0x28
   2a1d4:	str	r6, [fp, #-44]	; 0xffffffd4
   2a1d8:	beq	2a238 <main@@Base+0x14194>
   2a1dc:	ldr	sl, [sp, #24]
   2a1e0:	sub	r0, fp, #40	; 0x28
   2a1e4:	mov	r1, r7
   2a1e8:	mov	r2, r9
   2a1ec:	sub	r3, fp, #44	; 0x2c
   2a1f0:	str	r0, [sp]
   2a1f4:	mov	r0, sl
   2a1f8:	bl	38fa8 <flatcc_json_parser_integer@@Base>
   2a1fc:	cmp	r0, r7
   2a200:	beq	2a250 <main@@Base+0x141ac>
   2a204:	sub	r8, fp, #44	; 0x2c
   2a208:	mov	r4, r0
   2a20c:	ldm	r8, {r0, r6, r8}
   2a210:	cmp	r0, #0
   2a214:	beq	2a268 <main@@Base+0x141c4>
   2a218:	subs	r0, r6, #1
   2a21c:	sbcs	r0, r8, #-2147483648	; 0x80000000
   2a220:	bcc	2a29c <main@@Base+0x141f8>
   2a224:	mov	r0, sl
   2a228:	mov	r1, r4
   2a22c:	mov	r2, r9
   2a230:	mov	r3, #8
   2a234:	b	2a280 <main@@Base+0x141dc>
   2a238:	ldr	sl, [sp, #24]
   2a23c:	mov	r8, #0
   2a240:	mov	r4, r9
   2a244:	cmp	r7, r4
   2a248:	bne	2a2f0 <main@@Base+0x1424c>
   2a24c:	b	2a2b4 <main@@Base+0x14210>
   2a250:	mov	r6, #0
   2a254:	mov	r8, #0
   2a258:	mov	r4, r7
   2a25c:	cmp	r7, r4
   2a260:	bne	2a2f0 <main@@Base+0x1424c>
   2a264:	b	2a2b4 <main@@Base+0x14210>
   2a268:	cmn	r8, #1
   2a26c:	bgt	2a2a4 <main@@Base+0x14200>
   2a270:	mov	r0, sl
   2a274:	mov	r1, r4
   2a278:	mov	r2, r9
   2a27c:	mov	r3, #7
   2a280:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   2a284:	mov	r4, r0
   2a288:	mov	r6, #0
   2a28c:	mov	r8, #0
   2a290:	cmp	r7, r4
   2a294:	bne	2a2f0 <main@@Base+0x1424c>
   2a298:	b	2a2b4 <main@@Base+0x14210>
   2a29c:	rsbs	r6, r6, #0
   2a2a0:	rsc	r8, r8, #0
   2a2a4:	str	r6, [sp, #40]	; 0x28
   2a2a8:	str	r8, [sp, #44]	; 0x2c
   2a2ac:	cmp	r7, r4
   2a2b0:	bne	2a2f0 <main@@Base+0x1424c>
   2a2b4:	add	r0, sp, #40	; 0x28
   2a2b8:	mov	r1, r7
   2a2bc:	mov	r2, r9
   2a2c0:	str	r0, [sp]
   2a2c4:	movw	r0, #508	; 0x1fc
   2a2c8:	movt	r0, #6
   2a2cc:	add	r3, r0, #48	; 0x30
   2a2d0:	mov	r0, sl
   2a2d4:	bl	26254 <main@@Base+0x101b0>
   2a2d8:	mov	r4, r0
   2a2dc:	cmp	r0, r7
   2a2e0:	cmpne	r4, r9
   2a2e4:	beq	2b7c4 <main@@Base+0x15720>
   2a2e8:	ldr	r6, [sp, #40]	; 0x28
   2a2ec:	ldr	r8, [sp, #44]	; 0x2c
   2a2f0:	orrs	r0, r6, r8
   2a2f4:	bne	2a304 <main@@Base+0x14260>
   2a2f8:	ldrb	r0, [sl, #8]
   2a2fc:	tst	r0, #2
   2a300:	beq	2a884 <main@@Base+0x147e0>
   2a304:	ldr	r0, [sl]
   2a308:	mov	r1, #7
   2a30c:	mov	r2, #8
   2a310:	mov	r3, #8
   2a314:	bl	332fc <flatcc_builder_table_add@@Base>
   2a318:	cmp	r0, #0
   2a31c:	beq	2b7c4 <main@@Base+0x15720>
   2a320:	stm	r0, {r6, r8}
   2a324:	sub	r0, r9, r4
   2a328:	cmp	r0, #2
   2a32c:	bge	2a890 <main@@Base+0x147ec>
   2a330:	b	2a8c0 <main@@Base+0x1481c>
   2a334:	cmp	r0, #34	; 0x22
   2a338:	bne	2a868 <main@@Base+0x147c4>
   2a33c:	add	r1, sl, #10
   2a340:	sub	r0, r9, r1
   2a344:	cmp	r0, #2
   2a348:	blt	2a60c <main@@Base+0x14568>
   2a34c:	ldrb	r0, [r1]
   2a350:	cmp	r0, #32
   2a354:	bls	2a5f8 <main@@Base+0x14554>
   2a358:	mov	r8, r1
   2a35c:	cmp	r8, r9
   2a360:	bne	2a624 <main@@Base+0x14580>
   2a364:	b	2a65c <main@@Base+0x145b8>
   2a368:	bne	2a37c <main@@Base+0x142d8>
   2a36c:	mov	r8, r1
   2a370:	ldrb	r0, [r8, #1]!
   2a374:	cmp	r0, #32
   2a378:	bhi	2a38c <main@@Base+0x142e8>
   2a37c:	ldr	r0, [sp, #24]
   2a380:	mov	r2, r9
   2a384:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   2a388:	mov	r8, r0
   2a38c:	cmp	r8, r9
   2a390:	beq	2a3cc <main@@Base+0x14328>
   2a394:	ldrb	r0, [r8]
   2a398:	cmp	r0, #58	; 0x3a
   2a39c:	bne	2a3cc <main@@Base+0x14328>
   2a3a0:	add	r1, r8, #1
   2a3a4:	sub	r0, r9, r1
   2a3a8:	cmp	r0, #2
   2a3ac:	blt	2a684 <main@@Base+0x145e0>
   2a3b0:	ldrb	r0, [r1]
   2a3b4:	cmp	r0, #32
   2a3b8:	bls	2a674 <main@@Base+0x145d0>
   2a3bc:	mov	r8, r1
   2a3c0:	cmp	r7, r8
   2a3c4:	bne	2a69c <main@@Base+0x145f8>
   2a3c8:	b	2a868 <main@@Base+0x147c4>
   2a3cc:	ldr	r0, [sp, #24]
   2a3d0:	mov	r1, r8
   2a3d4:	mov	r2, r9
   2a3d8:	mov	r3, #4
   2a3dc:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   2a3e0:	b	2a690 <main@@Base+0x145ec>
   2a3e4:	bne	2a3f4 <main@@Base+0x14350>
   2a3e8:	ldrb	r0, [r8, #2]!
   2a3ec:	cmp	r0, #32
   2a3f0:	bhi	2a404 <main@@Base+0x14360>
   2a3f4:	ldr	r0, [sp, #24]
   2a3f8:	mov	r2, r9
   2a3fc:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   2a400:	mov	r8, r0
   2a404:	cmp	r7, r8
   2a408:	beq	2a868 <main@@Base+0x147c4>
   2a40c:	mov	r5, #0
   2a410:	cmp	r8, r9
   2a414:	str	r5, [fp, #-36]	; 0xffffffdc
   2a418:	str	r5, [fp, #-40]	; 0xffffffd8
   2a41c:	str	r5, [fp, #-44]	; 0xffffffd4
   2a420:	str	r5, [sp, #40]	; 0x28
   2a424:	beq	2a470 <main@@Base+0x143cc>
   2a428:	sub	r0, fp, #40	; 0x28
   2a42c:	mov	r1, r8
   2a430:	mov	r2, r9
   2a434:	add	r3, sp, #40	; 0x28
   2a438:	str	r0, [sp]
   2a43c:	ldr	r0, [sp, #24]
   2a440:	bl	38fa8 <flatcc_json_parser_integer@@Base>
   2a444:	cmp	r0, r8
   2a448:	beq	2a484 <main@@Base+0x143e0>
   2a44c:	mov	r4, r0
   2a450:	ldr	r0, [sp, #40]	; 0x28
   2a454:	cmp	r0, #0
   2a458:	beq	2a498 <main@@Base+0x143f4>
   2a45c:	ldr	sl, [sp, #24]
   2a460:	mov	r1, r4
   2a464:	mov	r2, r9
   2a468:	mov	r3, #8
   2a46c:	b	2a4b4 <main@@Base+0x14410>
   2a470:	mov	r4, r9
   2a474:	ldr	sl, [sp, #24]
   2a478:	cmp	r8, r4
   2a47c:	bne	2a500 <main@@Base+0x1445c>
   2a480:	b	2a4c8 <main@@Base+0x14424>
   2a484:	mov	r4, r8
   2a488:	ldr	sl, [sp, #24]
   2a48c:	cmp	r8, r4
   2a490:	bne	2a500 <main@@Base+0x1445c>
   2a494:	b	2a4c8 <main@@Base+0x14424>
   2a498:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2a49c:	cmp	r0, #0
   2a4a0:	beq	2a5e0 <main@@Base+0x1453c>
   2a4a4:	ldr	sl, [sp, #24]
   2a4a8:	mov	r1, r4
   2a4ac:	mov	r2, r9
   2a4b0:	mov	r3, #7
   2a4b4:	mov	r0, sl
   2a4b8:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   2a4bc:	mov	r4, r0
   2a4c0:	cmp	r8, r4
   2a4c4:	bne	2a500 <main@@Base+0x1445c>
   2a4c8:	movw	r3, #508	; 0x1fc
   2a4cc:	sub	r0, fp, #44	; 0x2c
   2a4d0:	mov	r1, r8
   2a4d4:	mov	r2, r9
   2a4d8:	movt	r3, #6
   2a4dc:	str	r0, [sp]
   2a4e0:	mov	r0, sl
   2a4e4:	bl	2649c <main@@Base+0x103f8>
   2a4e8:	mov	r4, r0
   2a4ec:	cmp	r0, r8
   2a4f0:	cmpne	r4, r9
   2a4f4:	beq	2b7c4 <main@@Base+0x15720>
   2a4f8:	ldr	r5, [fp, #-44]	; 0xffffffd4
   2a4fc:	ldr	sl, [sp, #24]
   2a500:	cmp	r5, #0
   2a504:	bne	2a514 <main@@Base+0x14470>
   2a508:	ldrb	r0, [sl, #8]
   2a50c:	tst	r0, #2
   2a510:	beq	2a880 <main@@Base+0x147dc>
   2a514:	ldr	r0, [sl]
   2a518:	mov	r1, #1
   2a51c:	mov	r2, #4
   2a520:	mov	r3, #4
   2a524:	bl	332fc <flatcc_builder_table_add@@Base>
   2a528:	cmp	r0, #0
   2a52c:	beq	2b7c4 <main@@Base+0x15720>
   2a530:	str	r5, [r0]
   2a534:	b	2a880 <main@@Base+0x147dc>
   2a538:	ldr	r5, [sp, #32]
   2a53c:	bne	2a54c <main@@Base+0x144a8>
   2a540:	ldrb	r0, [r1, #2]!
   2a544:	cmp	r0, #32
   2a548:	bhi	2a560 <main@@Base+0x144bc>
   2a54c:	ldr	r0, [sp, #24]
   2a550:	mov	r1, r2
   2a554:	mov	r2, r9
   2a558:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   2a55c:	mov	r1, r0
   2a560:	cmp	sl, r1
   2a564:	beq	2a5b8 <main@@Base+0x14514>
   2a568:	ldr	sl, [sp, #24]
   2a56c:	mov	r2, r9
   2a570:	add	r3, sp, #36	; 0x24
   2a574:	mov	r0, sl
   2a578:	bl	39580 <flatcc_json_parser_build_string@@Base>
   2a57c:	mov	r4, r0
   2a580:	ldr	r0, [sp, #36]	; 0x24
   2a584:	cmp	r0, #0
   2a588:	beq	2b7c8 <main@@Base+0x15724>
   2a58c:	ldr	r0, [sl]
   2a590:	mov	r1, #2
   2a594:	bl	3316c <flatcc_builder_table_add_offset@@Base>
   2a598:	cmp	r0, #0
   2a59c:	beq	2b7c8 <main@@Base+0x15724>
   2a5a0:	ldr	r1, [sp, #36]	; 0x24
   2a5a4:	str	r1, [r0]
   2a5a8:	sub	r0, r9, r4
   2a5ac:	cmp	r0, #2
   2a5b0:	bge	2a890 <main@@Base+0x147ec>
   2a5b4:	b	2a8c0 <main@@Base+0x1481c>
   2a5b8:	ldr	r0, [sp, #24]
   2a5bc:	mov	r1, sl
   2a5c0:	mov	sl, r0
   2a5c4:	mov	r2, r9
   2a5c8:	bl	373bc <flatcc_json_parser_unmatched_symbol@@Base>
   2a5cc:	mov	r4, r0
   2a5d0:	sub	r0, r9, r4
   2a5d4:	cmp	r0, #2
   2a5d8:	bge	2a890 <main@@Base+0x147ec>
   2a5dc:	b	2a8c0 <main@@Base+0x1481c>
   2a5e0:	ldr	r5, [fp, #-40]	; 0xffffffd8
   2a5e4:	str	r5, [fp, #-44]	; 0xffffffd4
   2a5e8:	ldr	sl, [sp, #24]
   2a5ec:	cmp	r8, r4
   2a5f0:	bne	2a500 <main@@Base+0x1445c>
   2a5f4:	b	2a4c8 <main@@Base+0x14424>
   2a5f8:	bne	2a60c <main@@Base+0x14568>
   2a5fc:	mov	r8, r1
   2a600:	ldrb	r0, [r8, #1]!
   2a604:	cmp	r0, #32
   2a608:	bhi	2a61c <main@@Base+0x14578>
   2a60c:	ldr	r0, [sp, #24]
   2a610:	mov	r2, r9
   2a614:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   2a618:	mov	r8, r0
   2a61c:	cmp	r8, r9
   2a620:	beq	2a65c <main@@Base+0x145b8>
   2a624:	ldrb	r0, [r8]
   2a628:	cmp	r0, #58	; 0x3a
   2a62c:	bne	2a65c <main@@Base+0x145b8>
   2a630:	add	r1, r8, #1
   2a634:	sub	r0, r9, r1
   2a638:	cmp	r0, #2
   2a63c:	blt	2a7dc <main@@Base+0x14738>
   2a640:	ldrb	r0, [r1]
   2a644:	cmp	r0, #32
   2a648:	bls	2a7cc <main@@Base+0x14728>
   2a64c:	mov	r8, r1
   2a650:	cmp	r7, r8
   2a654:	bne	2a7f4 <main@@Base+0x14750>
   2a658:	b	2a868 <main@@Base+0x147c4>
   2a65c:	ldr	r0, [sp, #24]
   2a660:	mov	r1, r8
   2a664:	mov	r2, r9
   2a668:	mov	r3, #4
   2a66c:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   2a670:	b	2a7e8 <main@@Base+0x14744>
   2a674:	bne	2a684 <main@@Base+0x145e0>
   2a678:	ldrb	r0, [r8, #2]!
   2a67c:	cmp	r0, #32
   2a680:	bhi	2a694 <main@@Base+0x145f0>
   2a684:	ldr	r0, [sp, #24]
   2a688:	mov	r2, r9
   2a68c:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   2a690:	mov	r8, r0
   2a694:	cmp	r7, r8
   2a698:	beq	2a868 <main@@Base+0x147c4>
   2a69c:	mov	r5, #0
   2a6a0:	cmp	r8, r9
   2a6a4:	str	r5, [fp, #-36]	; 0xffffffdc
   2a6a8:	str	r5, [fp, #-40]	; 0xffffffd8
   2a6ac:	str	r5, [fp, #-44]	; 0xffffffd4
   2a6b0:	str	r5, [sp, #40]	; 0x28
   2a6b4:	beq	2a710 <main@@Base+0x1466c>
   2a6b8:	sub	r0, fp, #40	; 0x28
   2a6bc:	mov	r1, r8
   2a6c0:	mov	r2, r9
   2a6c4:	add	r3, sp, #40	; 0x28
   2a6c8:	str	r0, [sp]
   2a6cc:	ldr	r0, [sp, #24]
   2a6d0:	bl	38fa8 <flatcc_json_parser_integer@@Base>
   2a6d4:	cmp	r0, r8
   2a6d8:	beq	2a720 <main@@Base+0x1467c>
   2a6dc:	mov	r4, r0
   2a6e0:	ldr	r0, [sp, #40]	; 0x28
   2a6e4:	cmp	r0, #0
   2a6e8:	beq	2a730 <main@@Base+0x1468c>
   2a6ec:	ldr	r0, [sp, #24]
   2a6f0:	mov	r1, r4
   2a6f4:	mov	r2, r9
   2a6f8:	mov	r3, #8
   2a6fc:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   2a700:	mov	r4, r0
   2a704:	cmp	r8, r4
   2a708:	bne	2a7a8 <main@@Base+0x14704>
   2a70c:	b	2a770 <main@@Base+0x146cc>
   2a710:	mov	r4, r9
   2a714:	cmp	r8, r4
   2a718:	bne	2a7a8 <main@@Base+0x14704>
   2a71c:	b	2a770 <main@@Base+0x146cc>
   2a720:	mov	r4, r8
   2a724:	cmp	r8, r4
   2a728:	bne	2a7a8 <main@@Base+0x14704>
   2a72c:	b	2a770 <main@@Base+0x146cc>
   2a730:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2a734:	cmp	r0, #0
   2a738:	beq	2a760 <main@@Base+0x146bc>
   2a73c:	ldr	r0, [sp, #24]
   2a740:	mov	r1, r4
   2a744:	mov	r2, r9
   2a748:	mov	r3, #7
   2a74c:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   2a750:	mov	r4, r0
   2a754:	cmp	r8, r4
   2a758:	bne	2a7a8 <main@@Base+0x14704>
   2a75c:	b	2a770 <main@@Base+0x146cc>
   2a760:	ldr	r5, [fp, #-40]	; 0xffffffd8
   2a764:	str	r5, [fp, #-44]	; 0xffffffd4
   2a768:	cmp	r8, r4
   2a76c:	bne	2a7a8 <main@@Base+0x14704>
   2a770:	sub	r0, fp, #44	; 0x2c
   2a774:	mov	r1, r8
   2a778:	mov	r2, r9
   2a77c:	str	r0, [sp]
   2a780:	movw	r0, #508	; 0x1fc
   2a784:	movt	r0, #6
   2a788:	add	r3, r0, #36	; 0x24
   2a78c:	ldr	r0, [sp, #24]
   2a790:	bl	2649c <main@@Base+0x103f8>
   2a794:	mov	r4, r0
   2a798:	cmp	r0, r8
   2a79c:	cmpne	r4, r9
   2a7a0:	beq	2b7c4 <main@@Base+0x15720>
   2a7a4:	ldr	r5, [fp, #-44]	; 0xffffffd4
   2a7a8:	cmp	r5, #0
   2a7ac:	bne	2a7c0 <main@@Base+0x1471c>
   2a7b0:	ldr	r0, [sp, #24]
   2a7b4:	ldrb	r0, [r0, #8]
   2a7b8:	tst	r0, #2
   2a7bc:	beq	2aa20 <main@@Base+0x1497c>
   2a7c0:	ldr	r0, [sp, #24]
   2a7c4:	mov	r1, #6
   2a7c8:	b	2aa04 <main@@Base+0x14960>
   2a7cc:	bne	2a7dc <main@@Base+0x14738>
   2a7d0:	ldrb	r0, [r8, #2]!
   2a7d4:	cmp	r0, #32
   2a7d8:	bhi	2a7ec <main@@Base+0x14748>
   2a7dc:	ldr	r0, [sp, #24]
   2a7e0:	mov	r2, r9
   2a7e4:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   2a7e8:	mov	r8, r0
   2a7ec:	cmp	r7, r8
   2a7f0:	beq	2a868 <main@@Base+0x147c4>
   2a7f4:	mov	r5, #0
   2a7f8:	cmp	r8, r9
   2a7fc:	str	r5, [fp, #-36]	; 0xffffffdc
   2a800:	str	r5, [fp, #-40]	; 0xffffffd8
   2a804:	str	r5, [fp, #-44]	; 0xffffffd4
   2a808:	str	r5, [sp, #40]	; 0x28
   2a80c:	beq	2a94c <main@@Base+0x148a8>
   2a810:	sub	r0, fp, #40	; 0x28
   2a814:	mov	r1, r8
   2a818:	mov	r2, r9
   2a81c:	add	r3, sp, #40	; 0x28
   2a820:	str	r0, [sp]
   2a824:	ldr	r0, [sp, #24]
   2a828:	bl	38fa8 <flatcc_json_parser_integer@@Base>
   2a82c:	cmp	r0, r8
   2a830:	beq	2a95c <main@@Base+0x148b8>
   2a834:	mov	r4, r0
   2a838:	ldr	r0, [sp, #40]	; 0x28
   2a83c:	cmp	r0, #0
   2a840:	beq	2a96c <main@@Base+0x148c8>
   2a844:	ldr	r0, [sp, #24]
   2a848:	mov	r1, r4
   2a84c:	mov	r2, r9
   2a850:	mov	r3, #8
   2a854:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   2a858:	mov	r4, r0
   2a85c:	cmp	r8, r4
   2a860:	bne	2a9e4 <main@@Base+0x14940>
   2a864:	b	2a9ac <main@@Base+0x14908>
   2a868:	ldr	sl, [sp, #24]
   2a86c:	mov	r1, r7
   2a870:	mov	r0, sl
   2a874:	mov	r2, r9
   2a878:	bl	373bc <flatcc_json_parser_unmatched_symbol@@Base>
   2a87c:	mov	r4, r0
   2a880:	ldr	r5, [sp, #32]
   2a884:	sub	r0, r9, r4
   2a888:	cmp	r0, #2
   2a88c:	blt	2a8c0 <main@@Base+0x1481c>
   2a890:	ldrb	r0, [r4]
   2a894:	cmp	r0, #32
   2a898:	bls	2a8ac <main@@Base+0x14808>
   2a89c:	mov	r2, r4
   2a8a0:	cmp	r2, r9
   2a8a4:	bne	2a8dc <main@@Base+0x14838>
   2a8a8:	b	2ab34 <main@@Base+0x14a90>
   2a8ac:	bne	2a8c0 <main@@Base+0x1481c>
   2a8b0:	mov	r2, r4
   2a8b4:	ldrb	r0, [r2, #1]!
   2a8b8:	cmp	r0, #32
   2a8bc:	bhi	2a8d4 <main@@Base+0x14830>
   2a8c0:	mov	r0, sl
   2a8c4:	mov	r1, r4
   2a8c8:	mov	r2, r9
   2a8cc:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   2a8d0:	mov	r2, r0
   2a8d4:	cmp	r2, r9
   2a8d8:	beq	2ab34 <main@@Base+0x14a90>
   2a8dc:	ldrb	r0, [r2]
   2a8e0:	cmp	r0, #44	; 0x2c
   2a8e4:	bne	2ab48 <main@@Base+0x14aa4>
   2a8e8:	add	r1, r2, #1
   2a8ec:	sub	r0, r9, r1
   2a8f0:	cmp	r0, #2
   2a8f4:	blt	2a924 <main@@Base+0x14880>
   2a8f8:	ldrb	r0, [r1]
   2a8fc:	cmp	r0, #32
   2a900:	bls	2a914 <main@@Base+0x14870>
   2a904:	mov	r2, r1
   2a908:	cmp	r2, r9
   2a90c:	bne	2a93c <main@@Base+0x14898>
   2a910:	b	2ab80 <main@@Base+0x14adc>
   2a914:	bne	2a924 <main@@Base+0x14880>
   2a918:	ldrb	r0, [r2, #2]!
   2a91c:	cmp	r0, #32
   2a920:	bhi	2a934 <main@@Base+0x14890>
   2a924:	mov	r0, sl
   2a928:	mov	r2, r9
   2a92c:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   2a930:	mov	r2, r0
   2a934:	cmp	r2, r9
   2a938:	beq	2ab80 <main@@Base+0x14adc>
   2a93c:	ldrb	r0, [r2]
   2a940:	cmp	r0, #125	; 0x7d
   2a944:	bne	29360 <main@@Base+0x132bc>
   2a948:	b	2ab50 <main@@Base+0x14aac>
   2a94c:	mov	r4, r9
   2a950:	cmp	r8, r4
   2a954:	bne	2a9e4 <main@@Base+0x14940>
   2a958:	b	2a9ac <main@@Base+0x14908>
   2a95c:	mov	r4, r8
   2a960:	cmp	r8, r4
   2a964:	bne	2a9e4 <main@@Base+0x14940>
   2a968:	b	2a9ac <main@@Base+0x14908>
   2a96c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2a970:	cmp	r0, #0
   2a974:	beq	2a99c <main@@Base+0x148f8>
   2a978:	ldr	r0, [sp, #24]
   2a97c:	mov	r1, r4
   2a980:	mov	r2, r9
   2a984:	mov	r3, #7
   2a988:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   2a98c:	mov	r4, r0
   2a990:	cmp	r8, r4
   2a994:	bne	2a9e4 <main@@Base+0x14940>
   2a998:	b	2a9ac <main@@Base+0x14908>
   2a99c:	ldr	r5, [fp, #-40]	; 0xffffffd8
   2a9a0:	str	r5, [fp, #-44]	; 0xffffffd4
   2a9a4:	cmp	r8, r4
   2a9a8:	bne	2a9e4 <main@@Base+0x14940>
   2a9ac:	sub	r0, fp, #44	; 0x2c
   2a9b0:	mov	r1, r8
   2a9b4:	mov	r2, r9
   2a9b8:	str	r0, [sp]
   2a9bc:	movw	r0, #508	; 0x1fc
   2a9c0:	movt	r0, #6
   2a9c4:	add	r3, r0, #60	; 0x3c
   2a9c8:	ldr	r0, [sp, #24]
   2a9cc:	bl	2649c <main@@Base+0x103f8>
   2a9d0:	mov	r4, r0
   2a9d4:	cmp	r0, r8
   2a9d8:	cmpne	r4, r9
   2a9dc:	beq	2b7c4 <main@@Base+0x15720>
   2a9e0:	ldr	r5, [fp, #-44]	; 0xffffffd4
   2a9e4:	cmp	r5, #0
   2a9e8:	bne	2a9fc <main@@Base+0x14958>
   2a9ec:	ldr	r0, [sp, #24]
   2a9f0:	ldrb	r0, [r0, #8]
   2a9f4:	tst	r0, #2
   2a9f8:	beq	2aa20 <main@@Base+0x1497c>
   2a9fc:	ldr	r0, [sp, #24]
   2aa00:	mov	r1, #8
   2aa04:	mov	r2, #4
   2aa08:	mov	r3, #4
   2aa0c:	ldr	r0, [r0]
   2aa10:	bl	332fc <flatcc_builder_table_add@@Base>
   2aa14:	cmp	r0, #0
   2aa18:	beq	2b7c4 <main@@Base+0x15720>
   2aa1c:	str	r5, [r0]
   2aa20:	ldr	sl, [sp, #24]
   2aa24:	b	2a880 <main@@Base+0x147dc>
   2aa28:	bne	2aa38 <main@@Base+0x14994>
   2aa2c:	ldrb	r0, [r4, #2]!
   2aa30:	cmp	r0, #32
   2aa34:	bhi	2aa48 <main@@Base+0x149a4>
   2aa38:	mov	r0, sl
   2aa3c:	mov	r2, r9
   2aa40:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   2aa44:	mov	r4, r0
   2aa48:	mov	ip, r5
   2aa4c:	cmp	r5, r4
   2aa50:	beq	28824 <main@@Base+0x12780>
   2aa54:	ldr	r0, [sl]
   2aa58:	mov	r1, #2
   2aa5c:	bl	31fa8 <flatcc_builder_start_table@@Base>
   2aa60:	cmp	r0, #0
   2aa64:	bne	2b7c8 <main@@Base+0x15724>
   2aa68:	cmp	r4, r9
   2aa6c:	beq	2aab0 <main@@Base+0x14a0c>
   2aa70:	ldrb	r0, [r4]
   2aa74:	cmp	r0, #123	; 0x7b
   2aa78:	bne	2aab0 <main@@Base+0x14a0c>
   2aa7c:	ldr	r5, [sp, #32]
   2aa80:	add	r1, r4, #1
   2aa84:	sub	r0, r9, r1
   2aa88:	cmp	r0, #2
   2aa8c:	blt	2ab9c <main@@Base+0x14af8>
   2aa90:	ldrb	r0, [r1]
   2aa94:	cmp	r0, #32
   2aa98:	bls	2ab8c <main@@Base+0x14ae8>
   2aa9c:	mov	r4, r1
   2aaa0:	cmp	r4, r9
   2aaa4:	mov	r2, r9
   2aaa8:	bne	2abb8 <main@@Base+0x14b14>
   2aaac:	b	2abf8 <main@@Base+0x14b54>
   2aab0:	mov	r0, sl
   2aab4:	mov	r1, r4
   2aab8:	mov	r2, r9
   2aabc:	mov	r3, #21
   2aac0:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   2aac4:	ldr	r5, [sp, #32]
   2aac8:	mov	r4, r0
   2aacc:	ldr	r0, [sl, #24]
   2aad0:	cmp	r0, #0
   2aad4:	beq	2b6e4 <main@@Base+0x15640>
   2aad8:	b	2b7c8 <main@@Base+0x15724>
   2aadc:	mov	r4, r9
   2aae0:	ldr	r0, [sl, #24]
   2aae4:	cmp	r0, #0
   2aae8:	beq	2b604 <main@@Base+0x15560>
   2aaec:	b	2b7c8 <main@@Base+0x15724>
   2aaf0:	cmp	r0, #125	; 0x7d
   2aaf4:	bne	2b52c <main@@Base+0x15488>
   2aaf8:	add	r1, r2, #1
   2aafc:	sub	r0, r9, r1
   2ab00:	cmp	r0, #2
   2ab04:	blt	2b5e8 <main@@Base+0x15544>
   2ab08:	ldrb	r0, [r1]
   2ab0c:	cmp	r0, #32
   2ab10:	bls	2b5d4 <main@@Base+0x15530>
   2ab14:	mov	r4, r1
   2ab18:	ldr	r0, [sl, #24]
   2ab1c:	cmp	r0, #0
   2ab20:	beq	2b604 <main@@Base+0x15560>
   2ab24:	b	2b7c8 <main@@Base+0x15724>
   2ab28:	mov	r0, sl
   2ab2c:	mov	r1, r9
   2ab30:	b	2b534 <main@@Base+0x15490>
   2ab34:	mov	r4, r9
   2ab38:	ldr	r0, [sl, #24]
   2ab3c:	cmp	r0, #0
   2ab40:	beq	289e4 <main@@Base+0x12940>
   2ab44:	b	2b7c8 <main@@Base+0x15724>
   2ab48:	cmp	r0, #125	; 0x7d
   2ab4c:	bne	2b630 <main@@Base+0x1558c>
   2ab50:	add	r1, r2, #1
   2ab54:	sub	r0, r9, r1
   2ab58:	cmp	r0, #2
   2ab5c:	blt	2b66c <main@@Base+0x155c8>
   2ab60:	ldrb	r0, [r1]
   2ab64:	cmp	r0, #32
   2ab68:	bls	2b658 <main@@Base+0x155b4>
   2ab6c:	mov	r4, r1
   2ab70:	ldr	r0, [sl, #24]
   2ab74:	cmp	r0, #0
   2ab78:	beq	289e4 <main@@Base+0x12940>
   2ab7c:	b	2b7c8 <main@@Base+0x15724>
   2ab80:	mov	r0, sl
   2ab84:	mov	r1, r9
   2ab88:	b	2b638 <main@@Base+0x15594>
   2ab8c:	bne	2ab9c <main@@Base+0x14af8>
   2ab90:	ldrb	r0, [r4, #2]!
   2ab94:	cmp	r0, #32
   2ab98:	bhi	2abac <main@@Base+0x14b08>
   2ab9c:	mov	r0, sl
   2aba0:	mov	r2, r9
   2aba4:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   2aba8:	mov	r4, r0
   2abac:	cmp	r4, r9
   2abb0:	mov	r2, r9
   2abb4:	beq	2abf8 <main@@Base+0x14b54>
   2abb8:	ldrb	r0, [r4]
   2abbc:	cmp	r0, #125	; 0x7d
   2abc0:	bne	2abf4 <main@@Base+0x14b50>
   2abc4:	add	r1, r4, #1
   2abc8:	sub	r0, r9, r1
   2abcc:	cmp	r0, #2
   2abd0:	blt	2b6c8 <main@@Base+0x15624>
   2abd4:	ldrb	r0, [r1]
   2abd8:	cmp	r0, #32
   2abdc:	bhi	2b5c0 <main@@Base+0x1551c>
   2abe0:	bne	2b6c8 <main@@Base+0x15624>
   2abe4:	ldrb	r0, [r4, #2]!
   2abe8:	cmp	r0, #32
   2abec:	bls	2b6c8 <main@@Base+0x15624>
   2abf0:	b	2b6d8 <main@@Base+0x15634>
   2abf4:	mov	r2, r4
   2abf8:	cmp	r2, r9
   2abfc:	mov	r1, r9
   2ac00:	beq	2ac58 <main@@Base+0x14bb4>
   2ac04:	ldrb	r0, [r2]
   2ac08:	cmp	r0, #46	; 0x2e
   2ac0c:	beq	2ac2c <main@@Base+0x14b88>
   2ac10:	cmp	r0, #34	; 0x22
   2ac14:	bne	2ac48 <main@@Base+0x14ba4>
   2ac18:	ldr	r0, [sp, #28]
   2ac1c:	mov	r1, #0
   2ac20:	str	r1, [r0]
   2ac24:	add	r1, r2, #1
   2ac28:	b	2ac58 <main@@Base+0x14bb4>
   2ac2c:	mov	r1, r2
   2ac30:	mov	r0, sl
   2ac34:	mov	r2, r9
   2ac38:	mov	r3, #5
   2ac3c:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   2ac40:	mov	r1, r0
   2ac44:	b	2ac58 <main@@Base+0x14bb4>
   2ac48:	ldr	r0, [sp, #28]
   2ac4c:	mov	r1, #1
   2ac50:	str	r1, [r0]
   2ac54:	mov	r1, r2
   2ac58:	sub	r0, r9, r1
   2ac5c:	mov	r2, #8
   2ac60:	cmp	r0, #8
   2ac64:	movcs	r0, r2
   2ac68:	sub	r7, r0, #1
   2ac6c:	cmp	r7, #7
   2ac70:	bhi	2aef8 <main@@Base+0x14e54>
   2ac74:	add	r0, pc, #32
   2ac78:	mov	r8, #0
   2ac7c:	mov	ip, #0
   2ac80:	mov	lr, #0
   2ac84:	mov	r6, #0
   2ac88:	mov	r3, #0
   2ac8c:	mov	r5, #0
   2ac90:	mov	r2, #0
   2ac94:	mov	r4, #0
   2ac98:	ldr	pc, [r0, r7, lsl #2]
   2ac9c:	andeq	sl, r2, r0, lsl #26
   2aca0:	strdeq	sl, [r2], -r8
   2aca4:	strdeq	sl, [r2], -r0
   2aca8:	andeq	sl, r2, r8, ror #25
   2acac:	ldrdeq	sl, [r2], -ip
   2acb0:	ldrdeq	sl, [r2], -r0
   2acb4:	andeq	sl, r2, r0, asr #25
   2acb8:			; <UNDEFINED> instruction: 0x0002acbc
   2acbc:	ldrb	ip, [r1, #7]
   2acc0:	ldrb	r0, [r1, #6]
   2acc4:	mov	lr, r8
   2acc8:	orr	r0, ip, r0, lsl #8
   2accc:	mov	r8, r0
   2acd0:	ldrb	r0, [r1, #5]
   2acd4:	mov	r6, lr
   2acd8:	orr	r8, r8, r0, lsl #16
   2acdc:	ldrb	r0, [r1, #4]
   2ace0:	mov	r3, r6
   2ace4:	orr	r8, r8, r0, lsl #24
   2ace8:	ldrb	r0, [r1, #3]
   2acec:	orr	r5, r0, r3
   2acf0:	ldrb	r0, [r1, #2]
   2acf4:	orr	r2, r5, r0, lsl #8
   2acf8:	ldrb	r0, [r1, #1]
   2acfc:	orr	r4, r2, r0, lsl #16
   2ad00:	ldrb	r2, [r1]
   2ad04:	movw	r0, #25186	; 0x6262
   2ad08:	movw	r3, #24929	; 0x6161
   2ad0c:	movt	r0, #24418	; 0x5f62
   2ad10:	movt	r3, #24929	; 0x6161
   2ad14:	eor	r0, r8, r0
   2ad18:	orr	r2, r4, r2, lsl #24
   2ad1c:	eor	r2, r2, r3
   2ad20:	orrs	r0, r0, r2
   2ad24:	bne	2aef8 <main@@Base+0x14e54>
   2ad28:	add	r4, r1, #8
   2ad2c:	mov	r0, #8
   2ad30:	sub	lr, r9, r4
   2ad34:	cmp	lr, #8
   2ad38:	movcc	r0, lr
   2ad3c:	sub	r6, r0, #1
   2ad40:	cmp	r6, #7
   2ad44:	bhi	2af6c <main@@Base+0x14ec8>
   2ad48:	str	r4, [sp, #8]
   2ad4c:	add	r8, pc, #32
   2ad50:	mov	r2, #0
   2ad54:	mov	ip, #0
   2ad58:	mov	sl, #0
   2ad5c:	mov	r5, #0
   2ad60:	mov	r7, #0
   2ad64:	mov	r4, #0
   2ad68:	mov	r0, #0
   2ad6c:	mov	r3, #0
   2ad70:	ldr	pc, [r8, r6, lsl #2]
   2ad74:	ldrdeq	sl, [r2], -r8
   2ad78:	ldrdeq	sl, [r2], -r0
   2ad7c:	andeq	sl, r2, r8, asr #27
   2ad80:	andeq	sl, r2, r0, asr #27
   2ad84:			; <UNDEFINED> instruction: 0x0002adb4
   2ad88:	andeq	sl, r2, r8, lsr #27
   2ad8c:	muleq	r2, r8, sp
   2ad90:	muleq	r2, r4, sp
   2ad94:	ldrb	ip, [r1, #15]
   2ad98:	ldrb	r0, [r1, #14]
   2ad9c:	mov	sl, r2
   2ada0:	orr	r0, ip, r0, lsl #8
   2ada4:	mov	r2, r0
   2ada8:	ldrb	r0, [r1, #13]
   2adac:	mov	r5, sl
   2adb0:	orr	r2, r2, r0, lsl #16
   2adb4:	ldrb	r0, [r1, #12]
   2adb8:	mov	r7, r5
   2adbc:	orr	r2, r2, r0, lsl #24
   2adc0:	ldrb	r0, [r1, #11]
   2adc4:	orr	r4, r0, r7
   2adc8:	ldrb	r0, [r1, #10]
   2adcc:	orr	r0, r4, r0, lsl #8
   2add0:	ldrb	r3, [r1, #9]
   2add4:	orr	r3, r0, r3, lsl #16
   2add8:	ldr	r4, [sp, #8]
   2addc:	movw	r0, #29791	; 0x745f
   2ade0:	movt	r0, #24946	; 0x6172
   2ade4:	eor	r7, r2, r0
   2ade8:	ldrb	r0, [r4]
   2adec:	orr	r0, r3, r0, lsl #24
   2adf0:	movw	r3, #29556	; 0x7374
   2adf4:	movt	r3, #25183	; 0x625f
   2adf8:	eor	r0, r0, r3
   2adfc:	orrs	r3, r7, r0
   2ae00:	bne	2af00 <main@@Base+0x14e5c>
   2ae04:	add	r8, r1, #16
   2ae08:	ldr	sl, [sp, #24]
   2ae0c:	mov	r2, #8
   2ae10:	sub	ip, r9, r8
   2ae14:	cmp	ip, #8
   2ae18:	movcc	r2, ip
   2ae1c:	sub	r7, r2, #1
   2ae20:	cmp	r7, #7
   2ae24:	bhi	2b0f4 <main@@Base+0x15050>
   2ae28:	add	r0, pc, #20
   2ae2c:	mov	r2, #0
   2ae30:	mov	r3, #0
   2ae34:	mov	r6, #0
   2ae38:	mov	r5, #0
   2ae3c:	mov	r4, #0
   2ae40:	ldr	pc, [r0, r7, lsl #2]
   2ae44:	andeq	sl, r2, r8, lsl #29
   2ae48:	andeq	sl, r2, r0, lsl #29
   2ae4c:	andeq	sl, r2, r8, ror lr
   2ae50:	andeq	sl, r2, ip, ror #28
   2ae54:	andeq	sl, r2, r4, ror #28
   2ae58:	andeq	sl, r2, r4, ror #28
   2ae5c:	andeq	sl, r2, r4, ror #28
   2ae60:	andeq	sl, r2, r4, ror #28
   2ae64:	ldrb	r0, [r1, #20]
   2ae68:	lsl	r3, r0, #24
   2ae6c:	ldrb	r0, [r1, #19]
   2ae70:	orr	r6, r0, r2
   2ae74:	mov	r2, r3
   2ae78:	ldrb	r0, [r1, #18]
   2ae7c:	orr	r5, r6, r0, lsl #8
   2ae80:	ldrb	r0, [r1, #17]
   2ae84:	orr	r4, r5, r0, lsl #16
   2ae88:	ldrb	r0, [r8]
   2ae8c:	movw	r3, #25968	; 0x6570
   2ae90:	and	r2, r2, #-16777216	; 0xff000000
   2ae94:	movt	r3, #29556	; 0x7374
   2ae98:	eor	r2, r2, #1929379840	; 0x73000000
   2ae9c:	orr	r0, r4, r0, lsl #24
   2aea0:	eor	r0, r0, r3
   2aea4:	orrs	r0, r2, r0
   2aea8:	bne	2b0f4 <main@@Base+0x15050>
   2aeac:	cmp	ip, #6
   2aeb0:	blt	2b0f4 <main@@Base+0x15050>
   2aeb4:	ldr	r3, [sp, #28]
   2aeb8:	mov	r2, r1
   2aebc:	ldrb	r0, [r2, #21]!
   2aec0:	ldr	r3, [r3]
   2aec4:	cmp	r3, #0
   2aec8:	beq	2afac <main@@Base+0x14f08>
   2aecc:	cmp	r0, #33	; 0x21
   2aed0:	bcc	2aedc <main@@Base+0x14e38>
   2aed4:	cmp	r0, #58	; 0x3a
   2aed8:	bne	2b0f4 <main@@Base+0x15050>
   2aedc:	ldr	r0, [sp, #28]
   2aee0:	mov	r1, #0
   2aee4:	str	r1, [r0]
   2aee8:	sub	r0, r9, r2
   2aeec:	cmp	r0, #2
   2aef0:	bge	2afc4 <main@@Base+0x14f20>
   2aef4:	b	2b0a0 <main@@Base+0x14ffc>
   2aef8:	mov	r0, sl
   2aefc:	b	2b0fc <main@@Base+0x15058>
   2af00:	movw	r3, #29440	; 0x7300
   2af04:	ldr	sl, [sp, #24]
   2af08:	bic	r2, r2, #255	; 0xff
   2af0c:	movt	r3, #25968	; 0x6570
   2af10:	eor	r2, r2, r3
   2af14:	orrs	r0, r2, r0
   2af18:	bne	2af6c <main@@Base+0x14ec8>
   2af1c:	ldr	r5, [sp, #32]
   2af20:	cmp	lr, #8
   2af24:	blt	2b050 <main@@Base+0x14fac>
   2af28:	ldr	r3, [sp, #28]
   2af2c:	mov	r2, r1
   2af30:	ldrb	r0, [r2, #15]!
   2af34:	ldr	r3, [r3]
   2af38:	cmp	r3, #0
   2af3c:	beq	2af78 <main@@Base+0x14ed4>
   2af40:	cmp	r0, #33	; 0x21
   2af44:	bcc	2af50 <main@@Base+0x14eac>
   2af48:	cmp	r0, #58	; 0x3a
   2af4c:	bne	2b050 <main@@Base+0x14fac>
   2af50:	ldr	r0, [sp, #28]
   2af54:	mov	r1, #0
   2af58:	str	r1, [r0]
   2af5c:	sub	r0, r9, r2
   2af60:	cmp	r0, #2
   2af64:	bge	2af90 <main@@Base+0x14eec>
   2af68:	b	2aff4 <main@@Base+0x14f50>
   2af6c:	mov	r0, sl
   2af70:	mov	r1, r4
   2af74:	b	2b0fc <main@@Base+0x15058>
   2af78:	cmp	r0, #34	; 0x22
   2af7c:	bne	2b050 <main@@Base+0x14fac>
   2af80:	add	r2, r1, #16
   2af84:	sub	r0, r9, r2
   2af88:	cmp	r0, #2
   2af8c:	blt	2aff4 <main@@Base+0x14f50>
   2af90:	ldrb	r0, [r2]
   2af94:	cmp	r0, #32
   2af98:	bls	2afe0 <main@@Base+0x14f3c>
   2af9c:	mov	r7, r2
   2afa0:	cmp	r7, r9
   2afa4:	bne	2b010 <main@@Base+0x14f6c>
   2afa8:	b	2b074 <main@@Base+0x14fd0>
   2afac:	cmp	r0, #34	; 0x22
   2afb0:	bne	2b0f4 <main@@Base+0x15050>
   2afb4:	add	r2, r1, #22
   2afb8:	sub	r0, r9, r2
   2afbc:	cmp	r0, #2
   2afc0:	blt	2b0a0 <main@@Base+0x14ffc>
   2afc4:	ldrb	r0, [r2]
   2afc8:	cmp	r0, #32
   2afcc:	bls	2b08c <main@@Base+0x14fe8>
   2afd0:	mov	r7, r2
   2afd4:	cmp	r7, r9
   2afd8:	bne	2b0bc <main@@Base+0x15018>
   2afdc:	b	2b1d4 <main@@Base+0x15130>
   2afe0:	bne	2aff4 <main@@Base+0x14f50>
   2afe4:	mov	r7, r2
   2afe8:	ldrb	r0, [r7, #1]!
   2afec:	cmp	r0, #32
   2aff0:	bhi	2b008 <main@@Base+0x14f64>
   2aff4:	mov	r1, r2
   2aff8:	mov	r0, sl
   2affc:	mov	r2, r9
   2b000:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   2b004:	mov	r7, r0
   2b008:	cmp	r7, r9
   2b00c:	beq	2b074 <main@@Base+0x14fd0>
   2b010:	ldrb	r0, [r7]
   2b014:	cmp	r0, #58	; 0x3a
   2b018:	bne	2b074 <main@@Base+0x14fd0>
   2b01c:	add	r1, r7, #1
   2b020:	sub	r0, r9, r1
   2b024:	cmp	r0, #2
   2b028:	blt	2b208 <main@@Base+0x15164>
   2b02c:	ldrb	r0, [r1]
   2b030:	cmp	r0, #32
   2b034:	bls	2b1ec <main@@Base+0x15148>
   2b038:	ldr	sl, [sp, #24]
   2b03c:	ldr	r5, [sp, #32]
   2b040:	ldr	r4, [sp, #8]
   2b044:	mov	r7, r1
   2b048:	cmp	r4, r7
   2b04c:	bne	2b220 <main@@Base+0x1517c>
   2b050:	mov	r0, sl
   2b054:	mov	r1, r4
   2b058:	mov	r2, r9
   2b05c:	bl	373bc <flatcc_json_parser_unmatched_symbol@@Base>
   2b060:	mov	r4, r0
   2b064:	sub	r0, r9, r4
   2b068:	cmp	r0, #2
   2b06c:	blt	2b148 <main@@Base+0x150a4>
   2b070:	b	2b118 <main@@Base+0x15074>
   2b074:	mov	r0, sl
   2b078:	mov	r1, r7
   2b07c:	mov	r2, r9
   2b080:	mov	r3, #4
   2b084:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   2b088:	b	2b214 <main@@Base+0x15170>
   2b08c:	bne	2b0a0 <main@@Base+0x14ffc>
   2b090:	mov	r7, r2
   2b094:	ldrb	r0, [r7, #1]!
   2b098:	cmp	r0, #32
   2b09c:	bhi	2b0b4 <main@@Base+0x15010>
   2b0a0:	mov	r1, r2
   2b0a4:	mov	r0, sl
   2b0a8:	mov	r2, r9
   2b0ac:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   2b0b0:	mov	r7, r0
   2b0b4:	cmp	r7, r9
   2b0b8:	beq	2b1d4 <main@@Base+0x15130>
   2b0bc:	ldrb	r0, [r7]
   2b0c0:	cmp	r0, #58	; 0x3a
   2b0c4:	bne	2b1d4 <main@@Base+0x15130>
   2b0c8:	add	r1, r7, #1
   2b0cc:	sub	r0, r9, r1
   2b0d0:	cmp	r0, #2
   2b0d4:	blt	2b3c0 <main@@Base+0x1531c>
   2b0d8:	ldrb	r0, [r1]
   2b0dc:	cmp	r0, #32
   2b0e0:	bls	2b3ac <main@@Base+0x15308>
   2b0e4:	ldr	sl, [sp, #24]
   2b0e8:	mov	r7, r1
   2b0ec:	cmp	r8, r7
   2b0f0:	bne	2b3d8 <main@@Base+0x15334>
   2b0f4:	mov	r0, sl
   2b0f8:	mov	r1, r8
   2b0fc:	mov	r2, r9
   2b100:	bl	373bc <flatcc_json_parser_unmatched_symbol@@Base>
   2b104:	mov	r4, r0
   2b108:	ldr	r5, [sp, #32]
   2b10c:	sub	r0, r9, r4
   2b110:	cmp	r0, #2
   2b114:	blt	2b148 <main@@Base+0x150a4>
   2b118:	ldrb	r0, [r4]
   2b11c:	cmp	r0, #32
   2b120:	bls	2b134 <main@@Base+0x15090>
   2b124:	mov	r2, r4
   2b128:	cmp	r2, r9
   2b12c:	bne	2b164 <main@@Base+0x150c0>
   2b130:	b	2b544 <main@@Base+0x154a0>
   2b134:	bne	2b148 <main@@Base+0x150a4>
   2b138:	mov	r2, r4
   2b13c:	ldrb	r0, [r2, #1]!
   2b140:	cmp	r0, #32
   2b144:	bhi	2b15c <main@@Base+0x150b8>
   2b148:	mov	r0, sl
   2b14c:	mov	r1, r4
   2b150:	mov	r2, r9
   2b154:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   2b158:	mov	r2, r0
   2b15c:	cmp	r2, r9
   2b160:	beq	2b544 <main@@Base+0x154a0>
   2b164:	ldrb	r0, [r2]
   2b168:	cmp	r0, #44	; 0x2c
   2b16c:	bne	2b558 <main@@Base+0x154b4>
   2b170:	add	r1, r2, #1
   2b174:	sub	r0, r9, r1
   2b178:	cmp	r0, #2
   2b17c:	blt	2b1ac <main@@Base+0x15108>
   2b180:	ldrb	r0, [r1]
   2b184:	cmp	r0, #32
   2b188:	bls	2b19c <main@@Base+0x150f8>
   2b18c:	mov	r2, r1
   2b190:	cmp	r2, r9
   2b194:	bne	2b1c4 <main@@Base+0x15120>
   2b198:	b	2b598 <main@@Base+0x154f4>
   2b19c:	bne	2b1ac <main@@Base+0x15108>
   2b1a0:	ldrb	r0, [r2, #2]!
   2b1a4:	cmp	r0, #32
   2b1a8:	bhi	2b1bc <main@@Base+0x15118>
   2b1ac:	mov	r0, sl
   2b1b0:	mov	r2, r9
   2b1b4:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   2b1b8:	mov	r2, r0
   2b1bc:	cmp	r2, r9
   2b1c0:	beq	2b598 <main@@Base+0x154f4>
   2b1c4:	ldrb	r0, [r2]
   2b1c8:	cmp	r0, #125	; 0x7d
   2b1cc:	bne	2abf8 <main@@Base+0x14b54>
   2b1d0:	b	2b5a4 <main@@Base+0x15500>
   2b1d4:	mov	r0, sl
   2b1d8:	mov	r1, r7
   2b1dc:	mov	r2, r9
   2b1e0:	mov	r3, #4
   2b1e4:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   2b1e8:	b	2b3cc <main@@Base+0x15328>
   2b1ec:	ldr	sl, [sp, #24]
   2b1f0:	ldr	r5, [sp, #32]
   2b1f4:	ldr	r4, [sp, #8]
   2b1f8:	bne	2b208 <main@@Base+0x15164>
   2b1fc:	ldrb	r0, [r7, #2]!
   2b200:	cmp	r0, #32
   2b204:	bhi	2b218 <main@@Base+0x15174>
   2b208:	mov	r0, sl
   2b20c:	mov	r2, r9
   2b210:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   2b214:	mov	r7, r0
   2b218:	cmp	r4, r7
   2b21c:	beq	2b050 <main@@Base+0x14fac>
   2b220:	mov	r6, #0
   2b224:	cmp	r7, r9
   2b228:	str	r6, [fp, #-36]	; 0xffffffdc
   2b22c:	str	r6, [fp, #-40]	; 0xffffffd8
   2b230:	str	r6, [sp, #44]	; 0x2c
   2b234:	str	r6, [sp, #40]	; 0x28
   2b238:	str	r6, [fp, #-44]	; 0xffffffd4
   2b23c:	beq	2b29c <main@@Base+0x151f8>
   2b240:	sub	r0, fp, #40	; 0x28
   2b244:	mov	r1, r7
   2b248:	mov	r2, r9
   2b24c:	sub	r3, fp, #44	; 0x2c
   2b250:	str	r0, [sp]
   2b254:	mov	r0, sl
   2b258:	bl	38fa8 <flatcc_json_parser_integer@@Base>
   2b25c:	cmp	r0, r7
   2b260:	beq	2b2b0 <main@@Base+0x1520c>
   2b264:	mov	r4, r0
   2b268:	ldr	r0, [fp, #-44]	; 0xffffffd4
   2b26c:	ldr	r6, [fp, #-40]	; 0xffffffd8
   2b270:	ldr	r5, [fp, #-36]	; 0xffffffdc
   2b274:	cmp	r0, #0
   2b278:	beq	2b2cc <main@@Base+0x15228>
   2b27c:	subs	r0, r6, #1
   2b280:	sbcs	r0, r5, #-2147483648	; 0x80000000
   2b284:	bcc	2b304 <main@@Base+0x15260>
   2b288:	ldr	sl, [sp, #24]
   2b28c:	mov	r1, r4
   2b290:	mov	r2, r9
   2b294:	mov	r3, #8
   2b298:	b	2b2e4 <main@@Base+0x15240>
   2b29c:	mov	r5, #0
   2b2a0:	mov	r4, r9
   2b2a4:	cmp	r7, r4
   2b2a8:	bne	2b360 <main@@Base+0x152bc>
   2b2ac:	b	2b320 <main@@Base+0x1527c>
   2b2b0:	mov	r6, #0
   2b2b4:	mov	r5, #0
   2b2b8:	mov	r4, r7
   2b2bc:	ldr	sl, [sp, #24]
   2b2c0:	cmp	r7, r4
   2b2c4:	bne	2b360 <main@@Base+0x152bc>
   2b2c8:	b	2b320 <main@@Base+0x1527c>
   2b2cc:	cmn	r5, #1
   2b2d0:	bgt	2b30c <main@@Base+0x15268>
   2b2d4:	ldr	sl, [sp, #24]
   2b2d8:	mov	r1, r4
   2b2dc:	mov	r2, r9
   2b2e0:	mov	r3, #7
   2b2e4:	mov	r0, sl
   2b2e8:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   2b2ec:	mov	r4, r0
   2b2f0:	mov	r6, #0
   2b2f4:	mov	r5, #0
   2b2f8:	cmp	r7, r4
   2b2fc:	bne	2b360 <main@@Base+0x152bc>
   2b300:	b	2b320 <main@@Base+0x1527c>
   2b304:	rsbs	r6, r6, #0
   2b308:	rsc	r5, r5, #0
   2b30c:	str	r6, [sp, #40]	; 0x28
   2b310:	str	r5, [sp, #44]	; 0x2c
   2b314:	ldr	sl, [sp, #24]
   2b318:	cmp	r7, r4
   2b31c:	bne	2b360 <main@@Base+0x152bc>
   2b320:	add	r0, sp, #40	; 0x28
   2b324:	mov	r1, r7
   2b328:	mov	r2, r9
   2b32c:	str	r0, [sp]
   2b330:	movw	r0, #508	; 0x1fc
   2b334:	movt	r0, #6
   2b338:	add	r3, r0, #84	; 0x54
   2b33c:	mov	r0, sl
   2b340:	bl	26254 <main@@Base+0x101b0>
   2b344:	mov	r4, r0
   2b348:	cmp	r0, r7
   2b34c:	cmpne	r4, r9
   2b350:	beq	2b7c4 <main@@Base+0x15720>
   2b354:	ldr	r6, [sp, #40]	; 0x28
   2b358:	ldr	r5, [sp, #44]	; 0x2c
   2b35c:	ldr	sl, [sp, #24]
   2b360:	orrs	r0, r6, r5
   2b364:	bne	2b374 <main@@Base+0x152d0>
   2b368:	ldrb	r0, [sl, #8]
   2b36c:	tst	r0, #2
   2b370:	beq	2b108 <main@@Base+0x15064>
   2b374:	ldr	r0, [sl]
   2b378:	mov	r1, #0
   2b37c:	mov	r2, #8
   2b380:	mov	r3, #8
   2b384:	bl	332fc <flatcc_builder_table_add@@Base>
   2b388:	cmp	r0, #0
   2b38c:	beq	2b7c4 <main@@Base+0x15720>
   2b390:	str	r6, [r0]
   2b394:	str	r5, [r0, #4]
   2b398:	ldr	r5, [sp, #32]
   2b39c:	sub	r0, r9, r4
   2b3a0:	cmp	r0, #2
   2b3a4:	bge	2b118 <main@@Base+0x15074>
   2b3a8:	b	2b148 <main@@Base+0x150a4>
   2b3ac:	ldr	sl, [sp, #24]
   2b3b0:	bne	2b3c0 <main@@Base+0x1531c>
   2b3b4:	ldrb	r0, [r7, #2]!
   2b3b8:	cmp	r0, #32
   2b3bc:	bhi	2b3d0 <main@@Base+0x1532c>
   2b3c0:	mov	r0, sl
   2b3c4:	mov	r2, r9
   2b3c8:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   2b3cc:	mov	r7, r0
   2b3d0:	cmp	r8, r7
   2b3d4:	beq	2b0f4 <main@@Base+0x15050>
   2b3d8:	mov	r5, #0
   2b3dc:	cmp	r7, r9
   2b3e0:	str	r5, [fp, #-36]	; 0xffffffdc
   2b3e4:	str	r5, [fp, #-40]	; 0xffffffd8
   2b3e8:	str	r5, [fp, #-44]	; 0xffffffd4
   2b3ec:	str	r5, [sp, #40]	; 0x28
   2b3f0:	beq	2b43c <main@@Base+0x15398>
   2b3f4:	sub	r0, fp, #40	; 0x28
   2b3f8:	mov	r1, r7
   2b3fc:	mov	r2, r9
   2b400:	add	r3, sp, #40	; 0x28
   2b404:	str	r0, [sp]
   2b408:	mov	r0, sl
   2b40c:	bl	38fa8 <flatcc_json_parser_integer@@Base>
   2b410:	cmp	r0, r7
   2b414:	beq	2b44c <main@@Base+0x153a8>
   2b418:	mov	r4, r0
   2b41c:	ldr	r0, [sp, #40]	; 0x28
   2b420:	cmp	r0, #0
   2b424:	beq	2b460 <main@@Base+0x153bc>
   2b428:	ldr	sl, [sp, #24]
   2b42c:	mov	r1, r4
   2b430:	mov	r2, r9
   2b434:	mov	r3, #8
   2b438:	b	2b47c <main@@Base+0x153d8>
   2b43c:	mov	r4, r9
   2b440:	cmp	r7, r4
   2b444:	bne	2b4cc <main@@Base+0x15428>
   2b448:	b	2b490 <main@@Base+0x153ec>
   2b44c:	mov	r4, r7
   2b450:	ldr	sl, [sp, #24]
   2b454:	cmp	r7, r4
   2b458:	bne	2b4cc <main@@Base+0x15428>
   2b45c:	b	2b490 <main@@Base+0x153ec>
   2b460:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2b464:	cmp	r0, #0
   2b468:	beq	2b514 <main@@Base+0x15470>
   2b46c:	ldr	sl, [sp, #24]
   2b470:	mov	r1, r4
   2b474:	mov	r2, r9
   2b478:	mov	r3, #7
   2b47c:	mov	r0, sl
   2b480:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   2b484:	mov	r4, r0
   2b488:	cmp	r7, r4
   2b48c:	bne	2b4cc <main@@Base+0x15428>
   2b490:	sub	r0, fp, #44	; 0x2c
   2b494:	mov	r1, r7
   2b498:	mov	r2, r9
   2b49c:	str	r0, [sp]
   2b4a0:	movw	r0, #508	; 0x1fc
   2b4a4:	movt	r0, #6
   2b4a8:	add	r3, r0, #72	; 0x48
   2b4ac:	mov	r0, sl
   2b4b0:	bl	2649c <main@@Base+0x103f8>
   2b4b4:	mov	r4, r0
   2b4b8:	cmp	r0, r7
   2b4bc:	cmpne	r4, r9
   2b4c0:	beq	2b7c4 <main@@Base+0x15720>
   2b4c4:	ldr	r5, [fp, #-44]	; 0xffffffd4
   2b4c8:	ldr	sl, [sp, #24]
   2b4cc:	cmp	r5, #0
   2b4d0:	bne	2b4e0 <main@@Base+0x1543c>
   2b4d4:	ldrb	r0, [sl, #8]
   2b4d8:	tst	r0, #2
   2b4dc:	beq	2b108 <main@@Base+0x15064>
   2b4e0:	ldr	r0, [sl]
   2b4e4:	mov	r1, #1
   2b4e8:	mov	r2, #4
   2b4ec:	mov	r3, #4
   2b4f0:	bl	332fc <flatcc_builder_table_add@@Base>
   2b4f4:	cmp	r0, #0
   2b4f8:	beq	2b7c4 <main@@Base+0x15720>
   2b4fc:	str	r5, [r0]
   2b500:	ldr	r5, [sp, #32]
   2b504:	sub	r0, r9, r4
   2b508:	cmp	r0, #2
   2b50c:	bge	2b118 <main@@Base+0x15074>
   2b510:	b	2b148 <main@@Base+0x150a4>
   2b514:	ldr	r5, [fp, #-40]	; 0xffffffd8
   2b518:	str	r5, [fp, #-44]	; 0xffffffd4
   2b51c:	ldr	sl, [sp, #24]
   2b520:	cmp	r7, r4
   2b524:	bne	2b4cc <main@@Base+0x15428>
   2b528:	b	2b490 <main@@Base+0x153ec>
   2b52c:	mov	r0, sl
   2b530:	mov	r1, r2
   2b534:	mov	r2, r9
   2b538:	mov	r3, #10
   2b53c:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   2b540:	b	2b5f4 <main@@Base+0x15550>
   2b544:	mov	r4, r9
   2b548:	ldr	r0, [sl, #24]
   2b54c:	cmp	r0, #0
   2b550:	beq	2b6e4 <main@@Base+0x15640>
   2b554:	b	2b7c8 <main@@Base+0x15724>
   2b558:	cmp	r0, #125	; 0x7d
   2b55c:	bne	2b68c <main@@Base+0x155e8>
   2b560:	add	r1, r2, #1
   2b564:	sub	r0, r9, r1
   2b568:	cmp	r0, #2
   2b56c:	blt	2b6c8 <main@@Base+0x15624>
   2b570:	ldrb	r0, [r1]
   2b574:	cmp	r0, #32
   2b578:	bls	2b6ac <main@@Base+0x15608>
   2b57c:	ldr	sl, [sp, #24]
   2b580:	ldr	r5, [sp, #32]
   2b584:	mov	r4, r1
   2b588:	ldr	r0, [sl, #24]
   2b58c:	cmp	r0, #0
   2b590:	beq	2b6e4 <main@@Base+0x15640>
   2b594:	b	2b7c8 <main@@Base+0x15724>
   2b598:	mov	r0, sl
   2b59c:	mov	r1, r9
   2b5a0:	b	2b694 <main@@Base+0x155f0>
   2b5a4:	add	r1, r2, #1
   2b5a8:	sub	r0, r9, r1
   2b5ac:	cmp	r0, #2
   2b5b0:	blt	2b6c8 <main@@Base+0x15624>
   2b5b4:	ldrb	r0, [r1]
   2b5b8:	cmp	r0, #32
   2b5bc:	bls	2b6a4 <main@@Base+0x15600>
   2b5c0:	mov	r4, r1
   2b5c4:	ldr	r0, [sl, #24]
   2b5c8:	cmp	r0, #0
   2b5cc:	beq	2b6e4 <main@@Base+0x15640>
   2b5d0:	b	2b7c8 <main@@Base+0x15724>
   2b5d4:	bne	2b5e8 <main@@Base+0x15544>
   2b5d8:	ldrb	r0, [r2, #2]!
   2b5dc:	mov	r4, r2
   2b5e0:	cmp	r0, #32
   2b5e4:	bhi	2b5f8 <main@@Base+0x15554>
   2b5e8:	mov	r0, sl
   2b5ec:	mov	r2, r9
   2b5f0:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   2b5f4:	mov	r4, r0
   2b5f8:	ldr	r0, [sl, #24]
   2b5fc:	cmp	r0, #0
   2b600:	bne	2b7c8 <main@@Base+0x15724>
   2b604:	ldr	r0, [sl]
   2b608:	bl	32950 <flatcc_builder_end_table@@Base>
   2b60c:	cmp	r0, #0
   2b610:	beq	2b7c8 <main@@Base+0x15724>
   2b614:	mov	r7, r0
   2b618:	ldr	r0, [sl]
   2b61c:	mov	r1, #1
   2b620:	bl	3316c <flatcc_builder_table_add_offset@@Base>
   2b624:	cmp	r0, #0
   2b628:	bne	2b70c <main@@Base+0x15668>
   2b62c:	b	28078 <main@@Base+0x11fd4>
   2b630:	mov	r0, sl
   2b634:	mov	r1, r2
   2b638:	mov	r2, r9
   2b63c:	mov	r3, #10
   2b640:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   2b644:	mov	r4, r0
   2b648:	ldr	r0, [sl, #24]
   2b64c:	cmp	r0, #0
   2b650:	beq	289e4 <main@@Base+0x12940>
   2b654:	b	2b7c8 <main@@Base+0x15724>
   2b658:	bne	2b66c <main@@Base+0x155c8>
   2b65c:	ldrb	r0, [r2, #2]!
   2b660:	mov	r4, r2
   2b664:	cmp	r0, #32
   2b668:	bhi	289d8 <main@@Base+0x12934>
   2b66c:	mov	r0, sl
   2b670:	mov	r2, r9
   2b674:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   2b678:	mov	r4, r0
   2b67c:	ldr	r0, [sl, #24]
   2b680:	cmp	r0, #0
   2b684:	beq	289e4 <main@@Base+0x12940>
   2b688:	b	2b7c8 <main@@Base+0x15724>
   2b68c:	mov	r0, sl
   2b690:	mov	r1, r2
   2b694:	mov	r2, r9
   2b698:	mov	r3, #10
   2b69c:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   2b6a0:	b	2b6d4 <main@@Base+0x15630>
   2b6a4:	beq	2b6b8 <main@@Base+0x15614>
   2b6a8:	b	2b6c8 <main@@Base+0x15624>
   2b6ac:	ldr	sl, [sp, #24]
   2b6b0:	ldr	r5, [sp, #32]
   2b6b4:	bne	2b6c8 <main@@Base+0x15624>
   2b6b8:	ldrb	r0, [r2, #2]!
   2b6bc:	mov	r4, r2
   2b6c0:	cmp	r0, #32
   2b6c4:	bhi	2b6d8 <main@@Base+0x15634>
   2b6c8:	mov	r0, sl
   2b6cc:	mov	r2, r9
   2b6d0:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   2b6d4:	mov	r4, r0
   2b6d8:	ldr	r0, [sl, #24]
   2b6dc:	cmp	r0, #0
   2b6e0:	bne	2b7c8 <main@@Base+0x15724>
   2b6e4:	ldr	r0, [sl]
   2b6e8:	bl	32950 <flatcc_builder_end_table@@Base>
   2b6ec:	cmp	r0, #0
   2b6f0:	beq	2b7c8 <main@@Base+0x15724>
   2b6f4:	mov	r7, r0
   2b6f8:	ldr	r0, [sl]
   2b6fc:	mov	r1, #2
   2b700:	bl	3316c <flatcc_builder_table_add_offset@@Base>
   2b704:	cmp	r0, #0
   2b708:	beq	28078 <main@@Base+0x11fd4>
   2b70c:	str	r7, [r0]
   2b710:	sub	r0, r9, r4
   2b714:	cmp	r0, #2
   2b718:	bge	28848 <main@@Base+0x127a4>
   2b71c:	b	288b8 <main@@Base+0x12814>
   2b720:	mov	r4, r9
   2b724:	ldr	r0, [sl, #24]
   2b728:	cmp	r0, #0
   2b72c:	bne	28078 <main@@Base+0x11fd4>
   2b730:	b	2b768 <main@@Base+0x156c4>
   2b734:	cmp	r0, #125	; 0x7d
   2b738:	bne	2b78c <main@@Base+0x156e8>
   2b73c:	add	r1, r2, #1
   2b740:	sub	r0, r9, r1
   2b744:	cmp	r0, #2
   2b748:	blt	2b7b4 <main@@Base+0x15710>
   2b74c:	ldrb	r0, [r1]
   2b750:	cmp	r0, #32
   2b754:	bls	2b7a0 <main@@Base+0x156fc>
   2b758:	mov	r4, r1
   2b75c:	ldr	r0, [sl, #24]
   2b760:	cmp	r0, #0
   2b764:	bne	28078 <main@@Base+0x11fd4>
   2b768:	ldr	r0, [sl]
   2b76c:	bl	32950 <flatcc_builder_end_table@@Base>
   2b770:	cmp	r0, #0
   2b774:	str	r0, [r5]
   2b778:	bne	28090 <main@@Base+0x11fec>
   2b77c:	b	28078 <main@@Base+0x11fd4>
   2b780:	mov	r0, sl
   2b784:	mov	r1, r9
   2b788:	b	2b794 <main@@Base+0x156f0>
   2b78c:	mov	r0, sl
   2b790:	mov	r1, r2
   2b794:	mov	r2, r9
   2b798:	mov	r3, #10
   2b79c:	b	28064 <main@@Base+0x11fc0>
   2b7a0:	bne	2b7b4 <main@@Base+0x15710>
   2b7a4:	ldrb	r0, [r2, #2]!
   2b7a8:	mov	r4, r2
   2b7ac:	cmp	r0, #32
   2b7b0:	bhi	2806c <main@@Base+0x11fc8>
   2b7b4:	mov	r0, sl
   2b7b8:	mov	r2, r9
   2b7bc:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   2b7c0:	b	28068 <main@@Base+0x11fc4>
   2b7c4:	ldr	sl, [sp, #24]
   2b7c8:	mov	r0, sl
   2b7cc:	mov	r1, r4
   2b7d0:	mov	r2, r9
   2b7d4:	mov	r3, #33	; 0x21
   2b7d8:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   2b7dc:	mov	r4, r0
   2b7e0:	b	28078 <main@@Base+0x11fd4>
   2b7e4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2b7e8:	add	fp, sp, #28
   2b7ec:	sub	sp, sp, #52	; 0x34
   2b7f0:	mov	sl, r0
   2b7f4:	mov	r0, #0
   2b7f8:	mov	r7, r1
   2b7fc:	mov	r1, #10
   2b800:	mov	r4, r3
   2b804:	mov	r5, r2
   2b808:	str	r0, [r3]
   2b80c:	ldr	r0, [sl]
   2b810:	bl	31fa8 <flatcc_builder_start_table@@Base>
   2b814:	cmp	r0, #0
   2b818:	beq	2b840 <main@@Base+0x1579c>
   2b81c:	mov	r0, sl
   2b820:	mov	r1, r7
   2b824:	mov	r2, r5
   2b828:	mov	r3, #33	; 0x21
   2b82c:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   2b830:	mov	r7, r0
   2b834:	mov	r0, r7
   2b838:	sub	sp, fp, #28
   2b83c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2b840:	sub	r0, fp, #32
   2b844:	mov	r1, r7
   2b848:	mov	r2, r5
   2b84c:	mov	r3, #5
   2b850:	str	r0, [sp]
   2b854:	mov	r0, sl
   2b858:	bl	398a0 <flatcc_json_parser_prepare_unions@@Base>
   2b85c:	cmp	r0, r5
   2b860:	beq	2b81c <main@@Base+0x15778>
   2b864:	cmp	r7, r5
   2b868:	beq	2b8a8 <main@@Base+0x15804>
   2b86c:	ldrb	r0, [r7]
   2b870:	cmp	r0, #123	; 0x7b
   2b874:	bne	2b8a8 <main@@Base+0x15804>
   2b878:	add	r1, r7, #1
   2b87c:	sub	r0, r5, r1
   2b880:	cmp	r0, #2
   2b884:	blt	2b90c <main@@Base+0x15868>
   2b888:	ldrb	r0, [r1]
   2b88c:	cmp	r0, #32
   2b890:	bls	2b8fc <main@@Base+0x15858>
   2b894:	mov	r7, r1
   2b898:	cmp	r7, r5
   2b89c:	mov	r3, r5
   2b8a0:	bne	2b928 <main@@Base+0x15884>
   2b8a4:	b	2b968 <main@@Base+0x158c4>
   2b8a8:	mov	r0, sl
   2b8ac:	mov	r1, r7
   2b8b0:	mov	r2, r5
   2b8b4:	mov	r3, #21
   2b8b8:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   2b8bc:	mov	r7, r0
   2b8c0:	ldr	r0, [sl, #24]
   2b8c4:	cmp	r0, #0
   2b8c8:	bne	2b81c <main@@Base+0x15778>
   2b8cc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2b8d0:	mov	r0, sl
   2b8d4:	mov	r1, r7
   2b8d8:	mov	r2, r5
   2b8dc:	bl	39930 <flatcc_json_parser_finalize_unions@@Base>
   2b8e0:	mov	r7, r0
   2b8e4:	ldr	r0, [sl]
   2b8e8:	bl	32950 <flatcc_builder_end_table@@Base>
   2b8ec:	cmp	r0, #0
   2b8f0:	str	r0, [r4]
   2b8f4:	bne	2b834 <main@@Base+0x15790>
   2b8f8:	b	2b81c <main@@Base+0x15778>
   2b8fc:	bne	2b90c <main@@Base+0x15868>
   2b900:	ldrb	r0, [r7, #2]!
   2b904:	cmp	r0, #32
   2b908:	bhi	2b91c <main@@Base+0x15878>
   2b90c:	mov	r0, sl
   2b910:	mov	r2, r5
   2b914:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   2b918:	mov	r7, r0
   2b91c:	cmp	r7, r5
   2b920:	mov	r3, r5
   2b924:	beq	2b968 <main@@Base+0x158c4>
   2b928:	ldrb	r0, [r7]
   2b92c:	cmp	r0, #125	; 0x7d
   2b930:	bne	2b964 <main@@Base+0x158c0>
   2b934:	add	r1, r7, #1
   2b938:	sub	r0, r5, r1
   2b93c:	cmp	r0, #2
   2b940:	blt	2cebc <main@@Base+0x16e18>
   2b944:	ldrb	r0, [r1]
   2b948:	cmp	r0, #32
   2b94c:	bhi	2ce80 <main@@Base+0x16ddc>
   2b950:	bne	2cebc <main@@Base+0x16e18>
   2b954:	ldrb	r0, [r7, #2]!
   2b958:	cmp	r0, #32
   2b95c:	bhi	2b8c0 <main@@Base+0x1581c>
   2b960:	b	2cebc <main@@Base+0x16e18>
   2b964:	mov	r3, r7
   2b968:	add	r0, sl, #12
   2b96c:	movw	r1, #740	; 0x2e4
   2b970:	str	r5, [sp, #40]	; 0x28
   2b974:	str	r4, [fp, #-36]	; 0xffffffdc
   2b978:	str	r0, [sp, #36]	; 0x24
   2b97c:	movw	r0, #24436	; 0x5f74
   2b980:	movt	r1, #6
   2b984:	movt	r0, #29299	; 0x7273
   2b988:	add	r1, r1, #32
   2b98c:	add	r0, r0, #65536	; 0x10000
   2b990:	str	r1, [sp, #24]
   2b994:	add	r0, r0, #16777216	; 0x1000000
   2b998:	str	r0, [sp, #28]
   2b99c:	cmp	r3, r5
   2b9a0:	mov	r8, r5
   2b9a4:	beq	2b9f8 <main@@Base+0x15954>
   2b9a8:	ldrb	r0, [r3]
   2b9ac:	cmp	r0, #46	; 0x2e
   2b9b0:	beq	2b9cc <main@@Base+0x15928>
   2b9b4:	cmp	r0, #34	; 0x22
   2b9b8:	bne	2b9e8 <main@@Base+0x15944>
   2b9bc:	ldr	r0, [sp, #36]	; 0x24
   2b9c0:	mov	r1, #0
   2b9c4:	add	r8, r3, #1
   2b9c8:	b	2b9f4 <main@@Base+0x15950>
   2b9cc:	mov	r1, r3
   2b9d0:	mov	r0, sl
   2b9d4:	mov	r2, r5
   2b9d8:	mov	r3, #5
   2b9dc:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   2b9e0:	mov	r8, r0
   2b9e4:	b	2b9f8 <main@@Base+0x15954>
   2b9e8:	ldr	r0, [sp, #36]	; 0x24
   2b9ec:	mov	r1, #1
   2b9f0:	mov	r8, r3
   2b9f4:	str	r1, [r0]
   2b9f8:	sub	ip, r5, r8
   2b9fc:	mov	r0, #8
   2ba00:	cmp	ip, #8
   2ba04:	movcc	r0, ip
   2ba08:	sub	r6, r0, #1
   2ba0c:	cmp	r6, #7
   2ba10:	bhi	2c50c <main@@Base+0x16468>
   2ba14:	mov	r9, sl
   2ba18:	add	sl, pc, #32
   2ba1c:	mov	r1, #0
   2ba20:	mov	lr, #0
   2ba24:	mov	r7, #0
   2ba28:	mov	r5, #0
   2ba2c:	mov	r3, #0
   2ba30:	mov	r4, #0
   2ba34:	mov	r0, #0
   2ba38:	mov	r2, #0
   2ba3c:	ldr	pc, [sl, r6, lsl #2]
   2ba40:	andeq	fp, r2, r4, lsr #21
   2ba44:	muleq	r2, ip, sl
   2ba48:	muleq	r2, r4, sl
   2ba4c:	andeq	fp, r2, ip, lsl #21
   2ba50:	andeq	fp, r2, r0, lsl #21
   2ba54:	andeq	fp, r2, r4, ror sl
   2ba58:	andeq	fp, r2, r4, ror #20
   2ba5c:	andeq	fp, r2, r0, ror #20
   2ba60:	ldrb	lr, [r8, #7]
   2ba64:	ldrb	r0, [r8, #6]
   2ba68:	mov	r7, r1
   2ba6c:	orr	r0, lr, r0, lsl #8
   2ba70:	mov	r1, r0
   2ba74:	ldrb	r0, [r8, #5]
   2ba78:	mov	r5, r7
   2ba7c:	orr	r1, r1, r0, lsl #16
   2ba80:	ldrb	r0, [r8, #4]
   2ba84:	mov	r3, r5
   2ba88:	orr	r1, r1, r0, lsl #24
   2ba8c:	ldrb	r0, [r8, #3]
   2ba90:	orr	r4, r0, r3
   2ba94:	ldrb	r0, [r8, #2]
   2ba98:	orr	r0, r4, r0, lsl #8
   2ba9c:	ldrb	r2, [r8, #1]
   2baa0:	orr	r2, r0, r2, lsl #16
   2baa4:	ldrb	r0, [r8]
   2baa8:	orr	r2, r2, r0, lsl #24
   2baac:	movw	r0, #29797	; 0x7465
   2bab0:	movt	r0, #24931	; 0x6163
   2bab4:	subs	r0, r1, r0
   2bab8:	movw	r0, #24946	; 0x6172
   2babc:	movt	r0, #25448	; 0x6368
   2bac0:	sbcs	r0, r2, r0
   2bac4:	bcs	2bc2c <main@@Base+0x15b88>
   2bac8:	movw	r0, #29817	; 0x7479
   2bacc:	movw	r3, #28005	; 0x6d65
   2bad0:	mov	sl, r9
   2bad4:	movt	r0, #28511	; 0x6f5f
   2bad8:	movt	r3, #25441	; 0x6361
   2badc:	eor	r0, r1, r0
   2bae0:	eor	r3, r2, r3
   2bae4:	orrs	r0, r0, r3
   2bae8:	beq	2bf64 <main@@Base+0x15ec0>
   2baec:	movw	r0, #28265	; 0x6e69
   2baf0:	movw	r7, #29793	; 0x7461
   2baf4:	ldr	r5, [sp, #40]	; 0x28
   2baf8:	movt	r0, #26479	; 0x676f
   2bafc:	movt	r7, #24942	; 0x616e
   2bb00:	eor	r0, r1, r0
   2bb04:	eor	r2, r2, r7
   2bb08:	orrs	r0, r0, r2
   2bb0c:	bne	2bffc <main@@Base+0x15f58>
   2bb10:	add	r4, r8, #8
   2bb14:	mov	r1, #8
   2bb18:	sub	lr, r5, r4
   2bb1c:	cmp	lr, #8
   2bb20:	movcc	r1, lr
   2bb24:	sub	r6, r1, #1
   2bb28:	cmp	r6, #7
   2bb2c:	bhi	2cd60 <main@@Base+0x16cbc>
   2bb30:	str	r4, [sp, #32]
   2bb34:	add	r0, pc, #28
   2bb38:	mov	r9, #0
   2bb3c:	mov	ip, #0
   2bb40:	mov	r1, #0
   2bb44:	mov	r3, #0
   2bb48:	mov	r7, #0
   2bb4c:	mov	r4, #0
   2bb50:	mov	r2, #0
   2bb54:	ldr	pc, [r0, r6, lsl #2]
   2bb58:			; <UNDEFINED> instruction: 0x0002bbb4
   2bb5c:	andeq	fp, r2, ip, lsr #23
   2bb60:	andeq	fp, r2, r4, lsr #23
   2bb64:	muleq	r2, ip, fp
   2bb68:	muleq	r2, r0, fp
   2bb6c:	andeq	fp, r2, r0, lsl #23
   2bb70:	andeq	fp, r2, r8, ror fp
   2bb74:	andeq	fp, r2, r8, ror fp
   2bb78:	ldrb	r0, [r8, #14]
   2bb7c:	lsl	ip, r0, #8
   2bb80:	ldrb	r0, [r8, #13]
   2bb84:	mov	r1, r9
   2bb88:	orr	r0, ip, r0, lsl #16
   2bb8c:	mov	r9, r0
   2bb90:	ldrb	r0, [r8, #12]
   2bb94:	mov	r3, r1
   2bb98:	orr	r9, r9, r0, lsl #24
   2bb9c:	ldrb	r0, [r8, #11]
   2bba0:	orr	r7, r0, r3
   2bba4:	ldrb	r0, [r8, #10]
   2bba8:	orr	r4, r7, r0, lsl #8
   2bbac:	ldrb	r0, [r8, #9]
   2bbb0:	orr	r2, r4, r0, lsl #16
   2bbb4:	ldr	r4, [sp, #32]
   2bbb8:	movw	r3, #25856	; 0x6500
   2bbbc:	movt	r3, #31088	; 0x7970
   2bbc0:	ldrb	r0, [r4]
   2bbc4:	orr	r1, r2, r0, lsl #24
   2bbc8:	ldr	r0, [sp, #28]
   2bbcc:	bic	r2, r9, #255	; 0xff
   2bbd0:	eor	r2, r2, r3
   2bbd4:	eor	r0, r1, r0
   2bbd8:	orrs	r0, r2, r0
   2bbdc:	bne	2c16c <main@@Base+0x160c8>
   2bbe0:	cmp	lr, #8
   2bbe4:	blt	2cd60 <main@@Base+0x16cbc>
   2bbe8:	ldr	r2, [sp, #36]	; 0x24
   2bbec:	mov	r1, r8
   2bbf0:	ldrb	r0, [r1, #15]!
   2bbf4:	ldr	r2, [r2]
   2bbf8:	cmp	r2, #0
   2bbfc:	beq	2c354 <main@@Base+0x162b0>
   2bc00:	cmp	r0, #33	; 0x21
   2bc04:	bcc	2bc10 <main@@Base+0x15b6c>
   2bc08:	cmp	r0, #58	; 0x3a
   2bc0c:	bne	2cd60 <main@@Base+0x16cbc>
   2bc10:	ldr	r0, [sp, #36]	; 0x24
   2bc14:	mov	r2, #0
   2bc18:	str	r2, [r0]
   2bc1c:	sub	r0, r5, r1
   2bc20:	cmp	r0, #2
   2bc24:	bge	2c36c <main@@Base+0x162c8>
   2bc28:	b	2c540 <main@@Base+0x1649c>
   2bc2c:	movw	r0, #26720	; 0x6860
   2bc30:	mov	sl, r9
   2bc34:	movt	r0, #24419	; 0x5f63
   2bc38:	subs	r0, r0, r1
   2bc3c:	movw	r0, #26990	; 0x696e
   2bc40:	movt	r0, #28001	; 0x6d61
   2bc44:	sbcs	r0, r0, r2
   2bc48:	bcc	2bd90 <main@@Base+0x15cec>
   2bc4c:	movw	r0, #29797	; 0x7465
   2bc50:	movt	r0, #24931	; 0x6163
   2bc54:	eor	r0, r1, r0
   2bc58:	movw	r1, #24946	; 0x6172
   2bc5c:	movt	r1, #25448	; 0x6368
   2bc60:	eor	r1, r2, r1
   2bc64:	orrs	r0, r0, r1
   2bc68:	bne	2bf54 <main@@Base+0x15eb0>
   2bc6c:	ldr	r5, [sp, #40]	; 0x28
   2bc70:	add	r4, r8, #8
   2bc74:	mov	r1, #8
   2bc78:	sub	lr, r5, r4
   2bc7c:	cmp	lr, #8
   2bc80:	movcc	r1, lr
   2bc84:	sub	r6, r1, #1
   2bc88:	cmp	r6, #7
   2bc8c:	bhi	2cd60 <main@@Base+0x16cbc>
   2bc90:	str	r4, [sp, #32]
   2bc94:	add	r0, pc, #28
   2bc98:	mov	r1, #0
   2bc9c:	mov	ip, #0
   2bca0:	mov	r9, #0
   2bca4:	mov	r3, #0
   2bca8:	mov	r7, #0
   2bcac:	mov	r4, #0
   2bcb0:	mov	r2, #0
   2bcb4:	ldr	pc, [r0, r6, lsl #2]
   2bcb8:	andeq	fp, r2, r4, lsl sp
   2bcbc:	andeq	fp, r2, ip, lsl #26
   2bcc0:	andeq	fp, r2, r4, lsl #26
   2bcc4:	strdeq	fp, [r2], -ip
   2bcc8:	strdeq	fp, [r2], -r0
   2bccc:	andeq	fp, r2, r0, ror #25
   2bcd0:	ldrdeq	fp, [r2], -r8
   2bcd4:	ldrdeq	fp, [r2], -r8
   2bcd8:	ldrb	r0, [r8, #14]
   2bcdc:	lsl	ip, r0, #8
   2bce0:	ldrb	r0, [r8, #13]
   2bce4:	mov	r9, r1
   2bce8:	orr	r0, ip, r0, lsl #16
   2bcec:	mov	r1, r0
   2bcf0:	ldrb	r0, [r8, #12]
   2bcf4:	mov	r3, r9
   2bcf8:	orr	r1, r1, r0, lsl #24
   2bcfc:	ldrb	r0, [r8, #11]
   2bd00:	orr	r7, r0, r3
   2bd04:	ldrb	r0, [r8, #10]
   2bd08:	orr	r4, r7, r0, lsl #8
   2bd0c:	ldrb	r0, [r8, #9]
   2bd10:	orr	r2, r4, r0, lsl #16
   2bd14:	ldr	r4, [sp, #32]
   2bd18:	bic	r0, r1, #255	; 0xff
   2bd1c:	movw	r1, #25856	; 0x6500
   2bd20:	movt	r1, #31088	; 0x7970
   2bd24:	eor	r0, r0, r1
   2bd28:	ldrb	r1, [r4]
   2bd2c:	orr	r1, r2, r1, lsl #24
   2bd30:	movw	r2, #24436	; 0x5f74
   2bd34:	movt	r2, #29299	; 0x7273
   2bd38:	eor	r2, r1, r2
   2bd3c:	orrs	r0, r0, r2
   2bd40:	bne	2c1cc <main@@Base+0x16128>
   2bd44:	cmp	lr, #8
   2bd48:	blt	2cd60 <main@@Base+0x16cbc>
   2bd4c:	ldr	r2, [sp, #36]	; 0x24
   2bd50:	mov	r1, r8
   2bd54:	ldrb	r0, [r1, #15]!
   2bd58:	ldr	r2, [r2]
   2bd5c:	cmp	r2, #0
   2bd60:	beq	2c3d8 <main@@Base+0x16334>
   2bd64:	cmp	r0, #33	; 0x21
   2bd68:	bcc	2bd74 <main@@Base+0x15cd0>
   2bd6c:	cmp	r0, #58	; 0x3a
   2bd70:	bne	2cd60 <main@@Base+0x16cbc>
   2bd74:	ldr	r0, [sp, #36]	; 0x24
   2bd78:	mov	r2, #0
   2bd7c:	str	r2, [r0]
   2bd80:	sub	r0, r5, r1
   2bd84:	cmp	r0, #2
   2bd88:	bge	2c3f0 <main@@Base+0x1634c>
   2bd8c:	b	2c6a8 <main@@Base+0x16604>
   2bd90:	movw	r0, #26979	; 0x6963
   2bd94:	movw	r3, #25701	; 0x6465
   2bd98:	movt	r0, #24427	; 0x5f6b
   2bd9c:	movt	r3, #29545	; 0x7369
   2bda0:	eor	r0, r1, r0
   2bda4:	eor	r3, r2, r3
   2bda8:	orrs	r0, r0, r3
   2bdac:	beq	2c060 <main@@Base+0x15fbc>
   2bdb0:	movw	r0, #26721	; 0x6861
   2bdb4:	movt	r0, #24419	; 0x5f63
   2bdb8:	eor	r0, r1, r0
   2bdbc:	movw	r1, #26990	; 0x696e
   2bdc0:	movt	r1, #28001	; 0x6d61
   2bdc4:	eor	r1, r2, r1
   2bdc8:	orrs	r0, r0, r1
   2bdcc:	bne	2bf54 <main@@Base+0x15eb0>
   2bdd0:	ldr	r0, [sp, #40]	; 0x28
   2bdd4:	add	r4, r8, #8
   2bdd8:	sub	lr, r0, r4
   2bddc:	mov	r0, #8
   2bde0:	cmp	lr, #8
   2bde4:	movcc	r0, lr
   2bde8:	sub	r6, r0, #1
   2bdec:	cmp	r6, #7
   2bdf0:	bhi	2c310 <main@@Base+0x1626c>
   2bdf4:	str	r4, [sp, #32]
   2bdf8:	add	r7, pc, #32
   2bdfc:	mov	r1, #0
   2be00:	mov	ip, #0
   2be04:	mov	sl, #0
   2be08:	mov	r5, #0
   2be0c:	mov	r3, #0
   2be10:	mov	r4, #0
   2be14:	mov	r2, #0
   2be18:	mov	r0, #0
   2be1c:	ldr	pc, [r7, r6, lsl #2]
   2be20:	andeq	fp, r2, r4, lsl #29
   2be24:	andeq	fp, r2, ip, ror lr
   2be28:	andeq	fp, r2, r4, ror lr
   2be2c:	andeq	fp, r2, ip, ror #28
   2be30:	andeq	fp, r2, r0, ror #28
   2be34:	andeq	fp, r2, r4, asr lr
   2be38:	andeq	fp, r2, r4, asr #28
   2be3c:	andeq	fp, r2, r0, asr #28
   2be40:	ldrb	ip, [r8, #15]
   2be44:	ldrb	r0, [r8, #14]
   2be48:	mov	sl, r1
   2be4c:	orr	r0, ip, r0, lsl #8
   2be50:	mov	r1, r0
   2be54:	ldrb	r0, [r8, #13]
   2be58:	mov	r5, sl
   2be5c:	orr	r1, r1, r0, lsl #16
   2be60:	ldrb	r0, [r8, #12]
   2be64:	mov	r3, r5
   2be68:	orr	r1, r1, r0, lsl #24
   2be6c:	ldrb	r0, [r8, #11]
   2be70:	orr	r4, r0, r3
   2be74:	ldrb	r0, [r8, #10]
   2be78:	orr	r2, r4, r0, lsl #8
   2be7c:	ldrb	r0, [r8, #9]
   2be80:	orr	r0, r2, r0, lsl #16
   2be84:	ldr	r4, [sp, #32]
   2be88:	movw	r2, #24436	; 0x5f74
   2be8c:	movt	r2, #25970	; 0x6572
   2be90:	eor	r2, r1, r2
   2be94:	ldrb	r3, [r4]
   2be98:	orr	r0, r0, r3, lsl #24
   2be9c:	movw	r3, #25460	; 0x6374
   2bea0:	movt	r3, #29281	; 0x7261
   2bea4:	eor	r3, r0, r3
   2bea8:	orrs	r2, r2, r3
   2beac:	bne	2c22c <main@@Base+0x16188>
   2beb0:	ldr	r0, [sp, #40]	; 0x28
   2beb4:	add	r4, r8, #16
   2beb8:	mov	r2, #8
   2bebc:	mov	sl, r9
   2bec0:	sub	r0, r0, r4
   2bec4:	cmp	r0, #8
   2bec8:	movcc	r2, r0
   2becc:	sub	r1, r2, #3
   2bed0:	cmp	r1, #6
   2bed4:	bcs	2c3bc <main@@Base+0x16318>
   2bed8:	ldrb	r1, [r8, #18]
   2bedc:	ldr	r5, [sp, #40]	; 0x28
   2bee0:	lsl	r1, r1, #8
   2bee4:	ldrb	r2, [r8, #17]
   2bee8:	orr	r1, r1, r2, lsl #16
   2beec:	ldrb	r2, [r4]
   2bef0:	bic	r1, r1, #255	; 0xff
   2bef4:	orr	r1, r1, r2, lsl #24
   2bef8:	movw	r2, #25856	; 0x6500
   2befc:	movt	r2, #31088	; 0x7970
   2bf00:	teq	r1, r2
   2bf04:	bne	2cd60 <main@@Base+0x16cbc>
   2bf08:	cmp	r0, #4
   2bf0c:	blt	2cd60 <main@@Base+0x16cbc>
   2bf10:	ldr	r2, [sp, #36]	; 0x24
   2bf14:	mov	r1, r8
   2bf18:	ldrb	r0, [r1, #19]!
   2bf1c:	ldr	r2, [r2]
   2bf20:	cmp	r2, #0
   2bf24:	beq	2c710 <main@@Base+0x1666c>
   2bf28:	cmp	r0, #33	; 0x21
   2bf2c:	bcc	2bf38 <main@@Base+0x15e94>
   2bf30:	cmp	r0, #58	; 0x3a
   2bf34:	bne	2cd60 <main@@Base+0x16cbc>
   2bf38:	ldr	r0, [sp, #36]	; 0x24
   2bf3c:	mov	r2, #0
   2bf40:	str	r2, [r0]
   2bf44:	sub	r0, r5, r1
   2bf48:	cmp	r0, #2
   2bf4c:	bge	2c728 <main@@Base+0x16684>
   2bf50:	b	2cb30 <main@@Base+0x16a8c>
   2bf54:	mov	r0, sl
   2bf58:	mov	r1, r8
   2bf5c:	ldr	r5, [sp, #40]	; 0x28
   2bf60:	b	2cd68 <main@@Base+0x16cc4>
   2bf64:	ldr	r5, [sp, #40]	; 0x28
   2bf68:	add	r6, r8, #8
   2bf6c:	mov	r2, #8
   2bf70:	sub	r0, r5, r6
   2bf74:	cmp	r0, #8
   2bf78:	movcc	r2, r0
   2bf7c:	sub	r1, r2, #2
   2bf80:	cmp	r1, #7
   2bf84:	bcs	2c2a4 <main@@Base+0x16200>
   2bf88:	ldrb	r1, [r8, #9]
   2bf8c:	lsl	r2, r1, #16
   2bf90:	mov	r1, #0
   2bf94:	ldrb	r3, [r6]
   2bf98:	orr	r2, r2, r3, lsl #24
   2bf9c:	movw	r3, #0
   2bfa0:	movt	r3, #28773	; 0x7065
   2bfa4:	eor	r2, r2, r3
   2bfa8:	orrs	r1, r1, r2
   2bfac:	bne	2c608 <main@@Base+0x16564>
   2bfb0:	cmp	r0, #3
   2bfb4:	blt	2c608 <main@@Base+0x16564>
   2bfb8:	ldr	r2, [sp, #36]	; 0x24
   2bfbc:	mov	r1, r8
   2bfc0:	ldrb	r0, [r1, #10]!
   2bfc4:	ldr	r2, [r2]
   2bfc8:	cmp	r2, #0
   2bfcc:	beq	2c388 <main@@Base+0x162e4>
   2bfd0:	cmp	r0, #33	; 0x21
   2bfd4:	bcc	2bfe0 <main@@Base+0x15f3c>
   2bfd8:	cmp	r0, #58	; 0x3a
   2bfdc:	bne	2c608 <main@@Base+0x16564>
   2bfe0:	ldr	r0, [sp, #36]	; 0x24
   2bfe4:	mov	r2, #0
   2bfe8:	str	r2, [r0]
   2bfec:	sub	r0, r5, r1
   2bff0:	cmp	r0, #2
   2bff4:	bge	2c3a0 <main@@Base+0x162fc>
   2bff8:	b	2c5bc <main@@Base+0x16518>
   2bffc:	and	r0, r1, #-16777216	; 0xff000000
   2c000:	eor	r0, r0, #1862270976	; 0x6f000000
   2c004:	orrs	r0, r0, r3
   2c008:	bne	2c50c <main@@Base+0x16468>
   2c00c:	cmp	ip, #6
   2c010:	mov	r1, r8
   2c014:	blt	2c8dc <main@@Base+0x16838>
   2c018:	ldr	r1, [sp, #36]	; 0x24
   2c01c:	mov	r2, r8
   2c020:	ldrb	r0, [r2, #5]!
   2c024:	ldr	r1, [r1]
   2c028:	cmp	r1, #0
   2c02c:	beq	2c31c <main@@Base+0x16278>
   2c030:	cmp	r0, #33	; 0x21
   2c034:	bcc	2c044 <main@@Base+0x15fa0>
   2c038:	cmp	r0, #58	; 0x3a
   2c03c:	mov	r1, r8
   2c040:	bne	2c8dc <main@@Base+0x16838>
   2c044:	ldr	r0, [sp, #36]	; 0x24
   2c048:	mov	r1, #0
   2c04c:	str	r1, [r0]
   2c050:	sub	r0, r5, r2
   2c054:	cmp	r0, #2
   2c058:	bge	2c338 <main@@Base+0x16294>
   2c05c:	b	2c4bc <main@@Base+0x16418>
   2c060:	ldr	r5, [sp, #40]	; 0x28
   2c064:	add	r9, r8, #8
   2c068:	mov	r1, #8
   2c06c:	sub	lr, r5, r9
   2c070:	cmp	lr, #8
   2c074:	movcc	r1, lr
   2c078:	sub	r3, r1, #1
   2c07c:	cmp	r3, #7
   2c080:	bhi	2ccec <main@@Base+0x16c48>
   2c084:	add	r6, pc, #24
   2c088:	mov	ip, #0
   2c08c:	mov	r2, #0
   2c090:	mov	r1, #0
   2c094:	mov	r0, #0
   2c098:	mov	r7, #0
   2c09c:	mov	r4, #0
   2c0a0:	ldr	pc, [r6, r3, lsl #2]
   2c0a4:	strdeq	ip, [r2], -r4
   2c0a8:	andeq	ip, r2, ip, ror #1
   2c0ac:	andeq	ip, r2, r4, ror #1
   2c0b0:	ldrdeq	ip, [r2], -ip	; <UNPREDICTABLE>
   2c0b4:	andeq	ip, r2, ip, asr #1
   2c0b8:	andeq	ip, r2, r4, asr #1
   2c0bc:	andeq	ip, r2, r4, asr #1
   2c0c0:	andeq	ip, r2, r4, asr #1
   2c0c4:	ldrb	r1, [r8, #13]
   2c0c8:	lsl	r2, r1, #16
   2c0cc:	ldrb	r1, [r8, #12]
   2c0d0:	orr	r2, r2, r1, lsl #24
   2c0d4:	mov	r1, ip
   2c0d8:	mov	ip, r2
   2c0dc:	ldrb	r2, [r8, #11]
   2c0e0:	orr	r0, r2, r1
   2c0e4:	ldrb	r1, [r8, #10]
   2c0e8:	orr	r7, r0, r1, lsl #8
   2c0ec:	ldrb	r1, [r8, #9]
   2c0f0:	orr	r4, r7, r1, lsl #16
   2c0f4:	ldrb	r1, [r9]
   2c0f8:	movw	r0, #27487	; 0x6b5f
   2c0fc:	lsr	r3, ip, #16
   2c100:	orr	r1, r4, r1, lsl #24
   2c104:	eor	r2, r0, r1, lsr #16
   2c108:	movw	r0, #28773	; 0x7065
   2c10c:	orr	r3, r3, r1, lsl #16
   2c110:	movt	r0, #29817	; 0x7479
   2c114:	eor	r3, r3, r0
   2c118:	orrs	r2, r3, r2
   2c11c:	bne	2c2b8 <main@@Base+0x16214>
   2c120:	cmp	lr, #7
   2c124:	blt	2ccec <main@@Base+0x16c48>
   2c128:	ldr	r2, [sp, #36]	; 0x24
   2c12c:	mov	r1, r8
   2c130:	ldrb	r0, [r1, #14]!
   2c134:	ldr	r2, [r2]
   2c138:	cmp	r2, #0
   2c13c:	beq	2c40c <main@@Base+0x16368>
   2c140:	cmp	r0, #33	; 0x21
   2c144:	bcc	2c150 <main@@Base+0x160ac>
   2c148:	cmp	r0, #58	; 0x3a
   2c14c:	bne	2ccec <main@@Base+0x16c48>
   2c150:	ldr	r0, [sp, #36]	; 0x24
   2c154:	mov	r2, #0
   2c158:	str	r2, [r0]
   2c15c:	sub	r0, r5, r1
   2c160:	cmp	r0, #2
   2c164:	bge	2c424 <main@@Base+0x16380>
   2c168:	b	2c758 <main@@Base+0x166b4>
   2c16c:	movw	r0, #0
   2c170:	bfc	r1, #0, #16
   2c174:	movt	r0, #29556	; 0x7374
   2c178:	teq	r1, r0
   2c17c:	bne	2cd60 <main@@Base+0x16cbc>
   2c180:	cmp	lr, #3
   2c184:	blt	2cd60 <main@@Base+0x16cbc>
   2c188:	ldr	r2, [sp, #36]	; 0x24
   2c18c:	mov	r1, r8
   2c190:	ldrb	r0, [r1, #10]!
   2c194:	ldr	r2, [r2]
   2c198:	cmp	r2, #0
   2c19c:	beq	2c440 <main@@Base+0x1639c>
   2c1a0:	cmp	r0, #33	; 0x21
   2c1a4:	bcc	2c1b0 <main@@Base+0x1610c>
   2c1a8:	cmp	r0, #58	; 0x3a
   2c1ac:	bne	2cd60 <main@@Base+0x16cbc>
   2c1b0:	ldr	r0, [sp, #36]	; 0x24
   2c1b4:	mov	r2, #0
   2c1b8:	str	r2, [r0]
   2c1bc:	sub	r0, r5, r1
   2c1c0:	cmp	r0, #2
   2c1c4:	bge	2c458 <main@@Base+0x163b4>
   2c1c8:	b	2c7d4 <main@@Base+0x16730>
   2c1cc:	movw	r0, #0
   2c1d0:	bfc	r1, #0, #16
   2c1d4:	movt	r0, #29299	; 0x7273
   2c1d8:	teq	r1, r0
   2c1dc:	bne	2cd60 <main@@Base+0x16cbc>
   2c1e0:	cmp	lr, #3
   2c1e4:	blt	2cd60 <main@@Base+0x16cbc>
   2c1e8:	ldr	r2, [sp, #36]	; 0x24
   2c1ec:	mov	r1, r8
   2c1f0:	ldrb	r0, [r1, #10]!
   2c1f4:	ldr	r2, [r2]
   2c1f8:	cmp	r2, #0
   2c1fc:	beq	2c474 <main@@Base+0x163d0>
   2c200:	cmp	r0, #33	; 0x21
   2c204:	bcc	2c210 <main@@Base+0x1616c>
   2c208:	cmp	r0, #58	; 0x3a
   2c20c:	bne	2cd60 <main@@Base+0x16cbc>
   2c210:	ldr	r0, [sp, #36]	; 0x24
   2c214:	mov	r2, #0
   2c218:	str	r2, [r0]
   2c21c:	sub	r0, r5, r1
   2c220:	cmp	r0, #2
   2c224:	bge	2c48c <main@@Base+0x163e8>
   2c228:	b	2c850 <main@@Base+0x167ac>
   2c22c:	movw	r2, #29281	; 0x7261
   2c230:	lsr	r1, r1, #16
   2c234:	mov	sl, r9
   2c238:	eor	r2, r2, r0, lsr #16
   2c23c:	orr	r0, r1, r0, lsl #16
   2c240:	movw	r1, #25970	; 0x6572
   2c244:	movt	r1, #25460	; 0x6374
   2c248:	eor	r0, r0, r1
   2c24c:	orrs	r0, r0, r2
   2c250:	bne	2c310 <main@@Base+0x1626c>
   2c254:	ldr	r5, [sp, #40]	; 0x28
   2c258:	cmp	lr, #7
   2c25c:	blt	2cd60 <main@@Base+0x16cbc>
   2c260:	ldr	r2, [sp, #36]	; 0x24
   2c264:	mov	r1, r8
   2c268:	ldrb	r0, [r1, #14]!
   2c26c:	ldr	r2, [r2]
   2c270:	cmp	r2, #0
   2c274:	beq	2c62c <main@@Base+0x16588>
   2c278:	cmp	r0, #33	; 0x21
   2c27c:	bcc	2c288 <main@@Base+0x161e4>
   2c280:	cmp	r0, #58	; 0x3a
   2c284:	bne	2cd60 <main@@Base+0x16cbc>
   2c288:	ldr	r0, [sp, #36]	; 0x24
   2c28c:	mov	r2, #0
   2c290:	str	r2, [r0]
   2c294:	sub	r0, r5, r1
   2c298:	cmp	r0, #2
   2c29c:	bge	2c644 <main@@Base+0x165a0>
   2c2a0:	b	2c9c4 <main@@Base+0x16920>
   2c2a4:	cmp	r2, #1
   2c2a8:	mov	r1, #0
   2c2ac:	mov	r2, #0
   2c2b0:	beq	2bf94 <main@@Base+0x15ef0>
   2c2b4:	b	2c608 <main@@Base+0x16564>
   2c2b8:	and	r1, r1, #-16777216	; 0xff000000
   2c2bc:	teq	r1, #1795162112	; 0x6b000000
   2c2c0:	bne	2ccec <main@@Base+0x16c48>
   2c2c4:	cmp	lr, #2
   2c2c8:	blt	2ccec <main@@Base+0x16c48>
   2c2cc:	ldr	r2, [sp, #36]	; 0x24
   2c2d0:	mov	r1, r8
   2c2d4:	ldrb	r0, [r1, #9]!
   2c2d8:	ldr	r2, [r2]
   2c2dc:	cmp	r2, #0
   2c2e0:	beq	2c660 <main@@Base+0x165bc>
   2c2e4:	cmp	r0, #33	; 0x21
   2c2e8:	bcc	2c2f4 <main@@Base+0x16250>
   2c2ec:	cmp	r0, #58	; 0x3a
   2c2f0:	bne	2ccec <main@@Base+0x16c48>
   2c2f4:	ldr	r0, [sp, #36]	; 0x24
   2c2f8:	mov	r2, #0
   2c2fc:	str	r2, [r0]
   2c300:	sub	r0, r5, r1
   2c304:	cmp	r0, #2
   2c308:	bge	2c678 <main@@Base+0x165d4>
   2c30c:	b	2ca40 <main@@Base+0x1699c>
   2c310:	mov	r0, sl
   2c314:	mov	r1, r4
   2c318:	b	2bf5c <main@@Base+0x15eb8>
   2c31c:	cmp	r0, #34	; 0x22
   2c320:	mov	r1, r8
   2c324:	bne	2c8dc <main@@Base+0x16838>
   2c328:	add	r2, r8, #6
   2c32c:	sub	r0, r5, r2
   2c330:	cmp	r0, #2
   2c334:	blt	2c4bc <main@@Base+0x16418>
   2c338:	ldrb	r0, [r2]
   2c33c:	cmp	r0, #32
   2c340:	bls	2c4a8 <main@@Base+0x16404>
   2c344:	mov	r1, r2
   2c348:	cmp	r1, r5
   2c34c:	bne	2c4d8 <main@@Base+0x16434>
   2c350:	b	2c518 <main@@Base+0x16474>
   2c354:	cmp	r0, #34	; 0x22
   2c358:	bne	2cd60 <main@@Base+0x16cbc>
   2c35c:	add	r1, r8, #16
   2c360:	sub	r0, r5, r1
   2c364:	cmp	r0, #2
   2c368:	blt	2c540 <main@@Base+0x1649c>
   2c36c:	ldrb	r0, [r1]
   2c370:	cmp	r0, #32
   2c374:	bls	2c52c <main@@Base+0x16488>
   2c378:	mov	r2, r1
   2c37c:	cmp	r2, r5
   2c380:	bne	2c558 <main@@Base+0x164b4>
   2c384:	b	2c590 <main@@Base+0x164ec>
   2c388:	cmp	r0, #34	; 0x22
   2c38c:	bne	2c608 <main@@Base+0x16564>
   2c390:	add	r1, r8, #11
   2c394:	sub	r0, r5, r1
   2c398:	cmp	r0, #2
   2c39c:	blt	2c5bc <main@@Base+0x16518>
   2c3a0:	ldrb	r0, [r1]
   2c3a4:	cmp	r0, #32
   2c3a8:	bls	2c5a8 <main@@Base+0x16504>
   2c3ac:	mov	r2, r1
   2c3b0:	cmp	r2, r5
   2c3b4:	bne	2c5d4 <main@@Base+0x16530>
   2c3b8:	b	2c614 <main@@Base+0x16570>
   2c3bc:	ldr	r5, [sp, #40]	; 0x28
   2c3c0:	mov	r1, #0
   2c3c4:	cmp	r2, #1
   2c3c8:	beq	2beec <main@@Base+0x15e48>
   2c3cc:	cmp	r2, #2
   2c3d0:	beq	2bee4 <main@@Base+0x15e40>
   2c3d4:	b	2cd60 <main@@Base+0x16cbc>
   2c3d8:	cmp	r0, #34	; 0x22
   2c3dc:	bne	2cd60 <main@@Base+0x16cbc>
   2c3e0:	add	r1, r8, #16
   2c3e4:	sub	r0, r5, r1
   2c3e8:	cmp	r0, #2
   2c3ec:	blt	2c6a8 <main@@Base+0x16604>
   2c3f0:	ldrb	r0, [r1]
   2c3f4:	cmp	r0, #32
   2c3f8:	bls	2c694 <main@@Base+0x165f0>
   2c3fc:	mov	r2, r1
   2c400:	cmp	r2, r5
   2c404:	bne	2c6c0 <main@@Base+0x1661c>
   2c408:	b	2c6f8 <main@@Base+0x16654>
   2c40c:	cmp	r0, #34	; 0x22
   2c410:	bne	2ccec <main@@Base+0x16c48>
   2c414:	add	r1, r8, #15
   2c418:	sub	r0, r5, r1
   2c41c:	cmp	r0, #2
   2c420:	blt	2c758 <main@@Base+0x166b4>
   2c424:	ldrb	r0, [r1]
   2c428:	cmp	r0, #32
   2c42c:	bls	2c744 <main@@Base+0x166a0>
   2c430:	mov	r2, r1
   2c434:	cmp	r2, r5
   2c438:	bne	2c770 <main@@Base+0x166cc>
   2c43c:	b	2c7a8 <main@@Base+0x16704>
   2c440:	cmp	r0, #34	; 0x22
   2c444:	bne	2cd60 <main@@Base+0x16cbc>
   2c448:	add	r1, r8, #11
   2c44c:	sub	r0, r5, r1
   2c450:	cmp	r0, #2
   2c454:	blt	2c7d4 <main@@Base+0x16730>
   2c458:	ldrb	r0, [r1]
   2c45c:	cmp	r0, #32
   2c460:	bls	2c7c0 <main@@Base+0x1671c>
   2c464:	mov	r2, r1
   2c468:	cmp	r2, r5
   2c46c:	bne	2c7ec <main@@Base+0x16748>
   2c470:	b	2c824 <main@@Base+0x16780>
   2c474:	cmp	r0, #34	; 0x22
   2c478:	bne	2cd60 <main@@Base+0x16cbc>
   2c47c:	add	r1, r8, #11
   2c480:	sub	r0, r5, r1
   2c484:	cmp	r0, #2
   2c488:	blt	2c850 <main@@Base+0x167ac>
   2c48c:	ldrb	r0, [r1]
   2c490:	cmp	r0, #32
   2c494:	bls	2c83c <main@@Base+0x16798>
   2c498:	mov	r2, r1
   2c49c:	cmp	r2, r5
   2c4a0:	bne	2c868 <main@@Base+0x167c4>
   2c4a4:	b	2c8a0 <main@@Base+0x167fc>
   2c4a8:	bne	2c4bc <main@@Base+0x16418>
   2c4ac:	mov	r1, r2
   2c4b0:	ldrb	r0, [r1, #1]!
   2c4b4:	cmp	r0, #32
   2c4b8:	bhi	2c4d0 <main@@Base+0x1642c>
   2c4bc:	mov	r1, r2
   2c4c0:	mov	r0, sl
   2c4c4:	mov	r2, r5
   2c4c8:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   2c4cc:	mov	r1, r0
   2c4d0:	cmp	r1, r5
   2c4d4:	beq	2c518 <main@@Base+0x16474>
   2c4d8:	ldrb	r0, [r1]
   2c4dc:	cmp	r0, #58	; 0x3a
   2c4e0:	bne	2c518 <main@@Base+0x16474>
   2c4e4:	add	r2, r1, #1
   2c4e8:	sub	r0, r5, r2
   2c4ec:	cmp	r0, #2
   2c4f0:	blt	2c8c8 <main@@Base+0x16824>
   2c4f4:	ldrb	r0, [r2]
   2c4f8:	cmp	r0, #32
   2c4fc:	bls	2c8b8 <main@@Base+0x16814>
   2c500:	mov	r1, r2
   2c504:	cmp	r8, r1
   2c508:	bne	2c8e4 <main@@Base+0x16840>
   2c50c:	mov	r0, sl
   2c510:	mov	r1, r8
   2c514:	b	2cd68 <main@@Base+0x16cc4>
   2c518:	mov	r0, sl
   2c51c:	mov	r2, r5
   2c520:	mov	r3, #4
   2c524:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   2c528:	b	2c8d8 <main@@Base+0x16834>
   2c52c:	bne	2c540 <main@@Base+0x1649c>
   2c530:	mov	r2, r1
   2c534:	ldrb	r0, [r2, #1]!
   2c538:	cmp	r0, #32
   2c53c:	bhi	2c550 <main@@Base+0x164ac>
   2c540:	mov	r0, sl
   2c544:	mov	r2, r5
   2c548:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   2c54c:	mov	r2, r0
   2c550:	cmp	r2, r5
   2c554:	beq	2c590 <main@@Base+0x164ec>
   2c558:	ldrb	r0, [r2]
   2c55c:	cmp	r0, #58	; 0x3a
   2c560:	bne	2c590 <main@@Base+0x164ec>
   2c564:	add	r1, r2, #1
   2c568:	sub	r0, r5, r1
   2c56c:	cmp	r0, #2
   2c570:	blt	2c924 <main@@Base+0x16880>
   2c574:	ldrb	r0, [r1]
   2c578:	cmp	r0, #32
   2c57c:	bls	2c914 <main@@Base+0x16870>
   2c580:	mov	r2, r1
   2c584:	cmp	r4, r2
   2c588:	bne	2c93c <main@@Base+0x16898>
   2c58c:	b	2cd60 <main@@Base+0x16cbc>
   2c590:	mov	r1, r2
   2c594:	mov	r0, sl
   2c598:	mov	r2, r5
   2c59c:	mov	r3, #4
   2c5a0:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   2c5a4:	b	2c930 <main@@Base+0x1688c>
   2c5a8:	bne	2c5bc <main@@Base+0x16518>
   2c5ac:	mov	r2, r1
   2c5b0:	ldrb	r0, [r2, #1]!
   2c5b4:	cmp	r0, #32
   2c5b8:	bhi	2c5cc <main@@Base+0x16528>
   2c5bc:	mov	r0, sl
   2c5c0:	mov	r2, r5
   2c5c4:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   2c5c8:	mov	r2, r0
   2c5cc:	cmp	r2, r5
   2c5d0:	beq	2c614 <main@@Base+0x16570>
   2c5d4:	ldrb	r0, [r2]
   2c5d8:	cmp	r0, #58	; 0x3a
   2c5dc:	bne	2c614 <main@@Base+0x16570>
   2c5e0:	add	r1, r2, #1
   2c5e4:	sub	r0, r5, r1
   2c5e8:	cmp	r0, #2
   2c5ec:	blt	2c96c <main@@Base+0x168c8>
   2c5f0:	ldrb	r0, [r1]
   2c5f4:	cmp	r0, #32
   2c5f8:	bls	2c95c <main@@Base+0x168b8>
   2c5fc:	mov	r2, r1
   2c600:	cmp	r6, r2
   2c604:	bne	2c984 <main@@Base+0x168e0>
   2c608:	mov	r0, sl
   2c60c:	mov	r1, r6
   2c610:	b	2cd68 <main@@Base+0x16cc4>
   2c614:	mov	r1, r2
   2c618:	mov	r0, sl
   2c61c:	mov	r2, r5
   2c620:	mov	r3, #4
   2c624:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   2c628:	b	2c978 <main@@Base+0x168d4>
   2c62c:	cmp	r0, #34	; 0x22
   2c630:	bne	2cd60 <main@@Base+0x16cbc>
   2c634:	add	r1, r8, #15
   2c638:	sub	r0, r5, r1
   2c63c:	cmp	r0, #2
   2c640:	blt	2c9c4 <main@@Base+0x16920>
   2c644:	ldrb	r0, [r1]
   2c648:	cmp	r0, #32
   2c64c:	bls	2c9b0 <main@@Base+0x1690c>
   2c650:	mov	r2, r1
   2c654:	cmp	r2, r5
   2c658:	bne	2c9dc <main@@Base+0x16938>
   2c65c:	b	2ca14 <main@@Base+0x16970>
   2c660:	cmp	r0, #34	; 0x22
   2c664:	bne	2ccec <main@@Base+0x16c48>
   2c668:	add	r1, r8, #10
   2c66c:	sub	r0, r5, r1
   2c670:	cmp	r0, #2
   2c674:	blt	2ca40 <main@@Base+0x1699c>
   2c678:	ldrb	r0, [r1]
   2c67c:	cmp	r0, #32
   2c680:	bls	2ca2c <main@@Base+0x16988>
   2c684:	mov	r2, r1
   2c688:	cmp	r2, r5
   2c68c:	bne	2ca58 <main@@Base+0x169b4>
   2c690:	b	2ca90 <main@@Base+0x169ec>
   2c694:	bne	2c6a8 <main@@Base+0x16604>
   2c698:	mov	r2, r1
   2c69c:	ldrb	r0, [r2, #1]!
   2c6a0:	cmp	r0, #32
   2c6a4:	bhi	2c6b8 <main@@Base+0x16614>
   2c6a8:	mov	r0, sl
   2c6ac:	mov	r2, r5
   2c6b0:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   2c6b4:	mov	r2, r0
   2c6b8:	cmp	r2, r5
   2c6bc:	beq	2c6f8 <main@@Base+0x16654>
   2c6c0:	ldrb	r0, [r2]
   2c6c4:	cmp	r0, #58	; 0x3a
   2c6c8:	bne	2c6f8 <main@@Base+0x16654>
   2c6cc:	add	r1, r2, #1
   2c6d0:	sub	r0, r5, r1
   2c6d4:	cmp	r0, #2
   2c6d8:	blt	2cab8 <main@@Base+0x16a14>
   2c6dc:	ldrb	r0, [r1]
   2c6e0:	cmp	r0, #32
   2c6e4:	bls	2caa8 <main@@Base+0x16a04>
   2c6e8:	mov	r2, r1
   2c6ec:	cmp	r4, r2
   2c6f0:	bne	2cad0 <main@@Base+0x16a2c>
   2c6f4:	b	2cd60 <main@@Base+0x16cbc>
   2c6f8:	mov	r1, r2
   2c6fc:	mov	r0, sl
   2c700:	mov	r2, r5
   2c704:	mov	r3, #4
   2c708:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   2c70c:	b	2cac4 <main@@Base+0x16a20>
   2c710:	cmp	r0, #34	; 0x22
   2c714:	bne	2cd60 <main@@Base+0x16cbc>
   2c718:	add	r1, r8, #20
   2c71c:	sub	r0, r5, r1
   2c720:	cmp	r0, #2
   2c724:	blt	2cb30 <main@@Base+0x16a8c>
   2c728:	ldrb	r0, [r1]
   2c72c:	cmp	r0, #32
   2c730:	bls	2cb1c <main@@Base+0x16a78>
   2c734:	mov	r2, r1
   2c738:	cmp	r2, r5
   2c73c:	bne	2cb48 <main@@Base+0x16aa4>
   2c740:	b	2cb80 <main@@Base+0x16adc>
   2c744:	bne	2c758 <main@@Base+0x166b4>
   2c748:	mov	r2, r1
   2c74c:	ldrb	r0, [r2, #1]!
   2c750:	cmp	r0, #32
   2c754:	bhi	2c768 <main@@Base+0x166c4>
   2c758:	mov	r0, sl
   2c75c:	mov	r2, r5
   2c760:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   2c764:	mov	r2, r0
   2c768:	cmp	r2, r5
   2c76c:	beq	2c7a8 <main@@Base+0x16704>
   2c770:	ldrb	r0, [r2]
   2c774:	cmp	r0, #58	; 0x3a
   2c778:	bne	2c7a8 <main@@Base+0x16704>
   2c77c:	add	r1, r2, #1
   2c780:	sub	r0, r5, r1
   2c784:	cmp	r0, #2
   2c788:	blt	2cbe0 <main@@Base+0x16b3c>
   2c78c:	ldrb	r0, [r1]
   2c790:	cmp	r0, #32
   2c794:	bls	2cbd0 <main@@Base+0x16b2c>
   2c798:	mov	r2, r1
   2c79c:	cmp	r9, r2
   2c7a0:	bne	2cbf8 <main@@Base+0x16b54>
   2c7a4:	b	2ccec <main@@Base+0x16c48>
   2c7a8:	mov	r1, r2
   2c7ac:	mov	r0, sl
   2c7b0:	mov	r2, r5
   2c7b4:	mov	r3, #4
   2c7b8:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   2c7bc:	b	2cbec <main@@Base+0x16b48>
   2c7c0:	bne	2c7d4 <main@@Base+0x16730>
   2c7c4:	mov	r2, r1
   2c7c8:	ldrb	r0, [r2, #1]!
   2c7cc:	cmp	r0, #32
   2c7d0:	bhi	2c7e4 <main@@Base+0x16740>
   2c7d4:	mov	r0, sl
   2c7d8:	mov	r2, r5
   2c7dc:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   2c7e0:	mov	r2, r0
   2c7e4:	cmp	r2, r5
   2c7e8:	beq	2c824 <main@@Base+0x16780>
   2c7ec:	ldrb	r0, [r2]
   2c7f0:	cmp	r0, #58	; 0x3a
   2c7f4:	bne	2c824 <main@@Base+0x16780>
   2c7f8:	add	r1, r2, #1
   2c7fc:	sub	r0, r5, r1
   2c800:	cmp	r0, #2
   2c804:	blt	2cba8 <main@@Base+0x16b04>
   2c808:	ldrb	r0, [r1]
   2c80c:	cmp	r0, #32
   2c810:	bls	2cb98 <main@@Base+0x16af4>
   2c814:	mov	r2, r1
   2c818:	cmp	r4, r2
   2c81c:	bne	2cbc0 <main@@Base+0x16b1c>
   2c820:	b	2cd60 <main@@Base+0x16cbc>
   2c824:	mov	r1, r2
   2c828:	mov	r0, sl
   2c82c:	mov	r2, r5
   2c830:	mov	r3, #4
   2c834:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   2c838:	b	2cbb4 <main@@Base+0x16b10>
   2c83c:	bne	2c850 <main@@Base+0x167ac>
   2c840:	mov	r2, r1
   2c844:	ldrb	r0, [r2, #1]!
   2c848:	cmp	r0, #32
   2c84c:	bhi	2c860 <main@@Base+0x167bc>
   2c850:	mov	r0, sl
   2c854:	mov	r2, r5
   2c858:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   2c85c:	mov	r2, r0
   2c860:	cmp	r2, r5
   2c864:	beq	2c8a0 <main@@Base+0x167fc>
   2c868:	ldrb	r0, [r2]
   2c86c:	cmp	r0, #58	; 0x3a
   2c870:	bne	2c8a0 <main@@Base+0x167fc>
   2c874:	add	r1, r2, #1
   2c878:	sub	r0, r5, r1
   2c87c:	cmp	r0, #2
   2c880:	blt	2cc28 <main@@Base+0x16b84>
   2c884:	ldrb	r0, [r1]
   2c888:	cmp	r0, #32
   2c88c:	bls	2cc18 <main@@Base+0x16b74>
   2c890:	mov	r2, r1
   2c894:	cmp	r4, r2
   2c898:	bne	2cc40 <main@@Base+0x16b9c>
   2c89c:	b	2cd60 <main@@Base+0x16cbc>
   2c8a0:	mov	r1, r2
   2c8a4:	mov	r0, sl
   2c8a8:	mov	r2, r5
   2c8ac:	mov	r3, #4
   2c8b0:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   2c8b4:	b	2cc34 <main@@Base+0x16b90>
   2c8b8:	bne	2c8c8 <main@@Base+0x16824>
   2c8bc:	ldrb	r0, [r1, #2]!
   2c8c0:	cmp	r0, #32
   2c8c4:	bhi	2c8dc <main@@Base+0x16838>
   2c8c8:	mov	r1, r2
   2c8cc:	mov	r0, sl
   2c8d0:	mov	r2, r5
   2c8d4:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   2c8d8:	mov	r1, r0
   2c8dc:	cmp	r8, r1
   2c8e0:	beq	2c50c <main@@Base+0x16468>
   2c8e4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2c8e8:	mov	r2, #7
   2c8ec:	mov	r3, #3
   2c8f0:	str	r2, [sp]
   2c8f4:	mov	r2, r5
   2c8f8:	str	r0, [sp, #4]
   2c8fc:	movw	r0, #53264	; 0xd010
   2c900:	movt	r0, #2
   2c904:	str	r0, [sp, #8]
   2c908:	mov	r0, sl
   2c90c:	bl	399a4 <flatcc_json_parser_union@@Base>
   2c910:	b	2cd70 <main@@Base+0x16ccc>
   2c914:	bne	2c924 <main@@Base+0x16880>
   2c918:	ldrb	r0, [r2, #2]!
   2c91c:	cmp	r0, #32
   2c920:	bhi	2c934 <main@@Base+0x16890>
   2c924:	mov	r0, sl
   2c928:	mov	r2, r5
   2c92c:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   2c930:	mov	r2, r0
   2c934:	cmp	r4, r2
   2c938:	beq	2cd60 <main@@Base+0x16cbc>
   2c93c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2c940:	movw	r1, #740	; 0x2e4
   2c944:	mov	r3, #3
   2c948:	movt	r1, #6
   2c94c:	str	r3, [sp]
   2c950:	mov	r3, #1
   2c954:	add	r1, r1, #16
   2c958:	b	2cd3c <main@@Base+0x16c98>
   2c95c:	bne	2c96c <main@@Base+0x168c8>
   2c960:	ldrb	r0, [r2, #2]!
   2c964:	cmp	r0, #32
   2c968:	bhi	2c97c <main@@Base+0x168d8>
   2c96c:	mov	r0, sl
   2c970:	mov	r2, r5
   2c974:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   2c978:	mov	r2, r0
   2c97c:	cmp	r6, r2
   2c980:	beq	2c608 <main@@Base+0x16564>
   2c984:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2c988:	mov	r1, #7
   2c98c:	mov	r3, #3
   2c990:	str	r1, [sp]
   2c994:	mov	r1, r2
   2c998:	mov	r2, r5
   2c99c:	str	r0, [sp, #4]
   2c9a0:	ldr	r0, [sp, #24]
   2c9a4:	str	r0, [sp, #8]
   2c9a8:	movw	r0, #53264	; 0xd010
   2c9ac:	b	2cd4c <main@@Base+0x16ca8>
   2c9b0:	bne	2c9c4 <main@@Base+0x16920>
   2c9b4:	mov	r2, r1
   2c9b8:	ldrb	r0, [r2, #1]!
   2c9bc:	cmp	r0, #32
   2c9c0:	bhi	2c9d4 <main@@Base+0x16930>
   2c9c4:	mov	r0, sl
   2c9c8:	mov	r2, r5
   2c9cc:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   2c9d0:	mov	r2, r0
   2c9d4:	cmp	r2, r5
   2c9d8:	beq	2ca14 <main@@Base+0x16970>
   2c9dc:	ldrb	r0, [r2]
   2c9e0:	cmp	r0, #58	; 0x3a
   2c9e4:	bne	2ca14 <main@@Base+0x16970>
   2c9e8:	add	r1, r2, #1
   2c9ec:	sub	r0, r5, r1
   2c9f0:	cmp	r0, #2
   2c9f4:	blt	2cc84 <main@@Base+0x16be0>
   2c9f8:	ldrb	r0, [r1]
   2c9fc:	cmp	r0, #32
   2ca00:	bls	2cc74 <main@@Base+0x16bd0>
   2ca04:	mov	r2, r1
   2ca08:	cmp	r4, r2
   2ca0c:	bne	2cc9c <main@@Base+0x16bf8>
   2ca10:	b	2cd60 <main@@Base+0x16cbc>
   2ca14:	mov	r1, r2
   2ca18:	mov	r0, sl
   2ca1c:	mov	r2, r5
   2ca20:	mov	r3, #4
   2ca24:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   2ca28:	b	2cc90 <main@@Base+0x16bec>
   2ca2c:	bne	2ca40 <main@@Base+0x1699c>
   2ca30:	mov	r2, r1
   2ca34:	ldrb	r0, [r2, #1]!
   2ca38:	cmp	r0, #32
   2ca3c:	bhi	2ca50 <main@@Base+0x169ac>
   2ca40:	mov	r0, sl
   2ca44:	mov	r2, r5
   2ca48:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   2ca4c:	mov	r2, r0
   2ca50:	cmp	r2, r5
   2ca54:	beq	2ca90 <main@@Base+0x169ec>
   2ca58:	ldrb	r0, [r2]
   2ca5c:	cmp	r0, #58	; 0x3a
   2ca60:	bne	2ca90 <main@@Base+0x169ec>
   2ca64:	add	r1, r2, #1
   2ca68:	sub	r0, r5, r1
   2ca6c:	cmp	r0, #2
   2ca70:	blt	2ccbc <main@@Base+0x16c18>
   2ca74:	ldrb	r0, [r1]
   2ca78:	cmp	r0, #32
   2ca7c:	bls	2ccac <main@@Base+0x16c08>
   2ca80:	mov	r2, r1
   2ca84:	cmp	r9, r2
   2ca88:	bne	2ccd4 <main@@Base+0x16c30>
   2ca8c:	b	2ccec <main@@Base+0x16c48>
   2ca90:	mov	r1, r2
   2ca94:	mov	r0, sl
   2ca98:	mov	r2, r5
   2ca9c:	mov	r3, #4
   2caa0:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   2caa4:	b	2ccc8 <main@@Base+0x16c24>
   2caa8:	bne	2cab8 <main@@Base+0x16a14>
   2caac:	ldrb	r0, [r2, #2]!
   2cab0:	cmp	r0, #32
   2cab4:	bhi	2cac8 <main@@Base+0x16a24>
   2cab8:	mov	r0, sl
   2cabc:	mov	r2, r5
   2cac0:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   2cac4:	mov	r2, r0
   2cac8:	cmp	r4, r2
   2cacc:	beq	2cd60 <main@@Base+0x16cbc>
   2cad0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2cad4:	movw	r1, #740	; 0x2e4
   2cad8:	mov	r3, #9
   2cadc:	movt	r1, #6
   2cae0:	str	r3, [sp]
   2cae4:	mov	r3, #4
   2cae8:	add	r1, r1, #48	; 0x30
   2caec:	stmib	sp, {r0, r1}
   2caf0:	movw	r0, #53264	; 0xd010
   2caf4:	mov	r1, r2
   2caf8:	mov	r2, r5
   2cafc:	movt	r0, #2
   2cb00:	str	r0, [sp, #12]
   2cb04:	movw	r0, #57276	; 0xdfbc
   2cb08:	movt	r0, #2
   2cb0c:	str	r0, [sp, #16]
   2cb10:	mov	r0, sl
   2cb14:	bl	3a640 <flatcc_json_parser_union_type_vector@@Base>
   2cb18:	b	2cd70 <main@@Base+0x16ccc>
   2cb1c:	bne	2cb30 <main@@Base+0x16a8c>
   2cb20:	mov	r2, r1
   2cb24:	ldrb	r0, [r2, #1]!
   2cb28:	cmp	r0, #32
   2cb2c:	bhi	2cb40 <main@@Base+0x16a9c>
   2cb30:	mov	r0, sl
   2cb34:	mov	r2, r5
   2cb38:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   2cb3c:	mov	r2, r0
   2cb40:	cmp	r2, r5
   2cb44:	beq	2cb80 <main@@Base+0x16adc>
   2cb48:	ldrb	r0, [r2]
   2cb4c:	cmp	r0, #58	; 0x3a
   2cb50:	bne	2cb80 <main@@Base+0x16adc>
   2cb54:	add	r1, r2, #1
   2cb58:	sub	r0, r5, r1
   2cb5c:	cmp	r0, #2
   2cb60:	blt	2cd08 <main@@Base+0x16c64>
   2cb64:	ldrb	r0, [r1]
   2cb68:	cmp	r0, #32
   2cb6c:	bls	2ccf8 <main@@Base+0x16c54>
   2cb70:	mov	r2, r1
   2cb74:	cmp	r4, r2
   2cb78:	bne	2cd20 <main@@Base+0x16c7c>
   2cb7c:	b	2cd60 <main@@Base+0x16cbc>
   2cb80:	mov	r1, r2
   2cb84:	mov	r0, sl
   2cb88:	mov	r2, r5
   2cb8c:	mov	r3, #4
   2cb90:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   2cb94:	b	2cd14 <main@@Base+0x16c70>
   2cb98:	bne	2cba8 <main@@Base+0x16b04>
   2cb9c:	ldrb	r0, [r2, #2]!
   2cba0:	cmp	r0, #32
   2cba4:	bhi	2cbb8 <main@@Base+0x16b14>
   2cba8:	mov	r0, sl
   2cbac:	mov	r2, r5
   2cbb0:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   2cbb4:	mov	r2, r0
   2cbb8:	cmp	r4, r2
   2cbbc:	beq	2cd60 <main@@Base+0x16cbc>
   2cbc0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2cbc4:	mov	r1, #3
   2cbc8:	mov	r3, #1
   2cbcc:	b	2cce0 <main@@Base+0x16c3c>
   2cbd0:	bne	2cbe0 <main@@Base+0x16b3c>
   2cbd4:	ldrb	r0, [r2, #2]!
   2cbd8:	cmp	r0, #32
   2cbdc:	bhi	2cbf0 <main@@Base+0x16b4c>
   2cbe0:	mov	r0, sl
   2cbe4:	mov	r2, r5
   2cbe8:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   2cbec:	mov	r2, r0
   2cbf0:	cmp	r9, r2
   2cbf4:	beq	2ccec <main@@Base+0x16c48>
   2cbf8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2cbfc:	movw	r1, #740	; 0x2e4
   2cc00:	mov	r3, #5
   2cc04:	movt	r1, #6
   2cc08:	str	r3, [sp]
   2cc0c:	mov	r3, #2
   2cc10:	add	r1, r1, #80	; 0x50
   2cc14:	b	2cd3c <main@@Base+0x16c98>
   2cc18:	bne	2cc28 <main@@Base+0x16b84>
   2cc1c:	ldrb	r0, [r2, #2]!
   2cc20:	cmp	r0, #32
   2cc24:	bhi	2cc38 <main@@Base+0x16b94>
   2cc28:	mov	r0, sl
   2cc2c:	mov	r2, r5
   2cc30:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   2cc34:	mov	r2, r0
   2cc38:	cmp	r4, r2
   2cc3c:	beq	2cd60 <main@@Base+0x16cbc>
   2cc40:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2cc44:	mov	r1, #9
   2cc48:	mov	r3, #4
   2cc4c:	str	r1, [sp]
   2cc50:	mov	r1, r2
   2cc54:	mov	r2, r5
   2cc58:	str	r0, [sp, #4]
   2cc5c:	movw	r0, #53264	; 0xd010
   2cc60:	movt	r0, #2
   2cc64:	str	r0, [sp, #8]
   2cc68:	mov	r0, sl
   2cc6c:	bl	3a0c4 <flatcc_json_parser_union_vector@@Base>
   2cc70:	b	2cd70 <main@@Base+0x16ccc>
   2cc74:	bne	2cc84 <main@@Base+0x16be0>
   2cc78:	ldrb	r0, [r2, #2]!
   2cc7c:	cmp	r0, #32
   2cc80:	bhi	2cc94 <main@@Base+0x16bf0>
   2cc84:	mov	r0, sl
   2cc88:	mov	r2, r5
   2cc8c:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   2cc90:	mov	r2, r0
   2cc94:	cmp	r4, r2
   2cc98:	beq	2cd60 <main@@Base+0x16cbc>
   2cc9c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2cca0:	mov	r1, #1
   2cca4:	mov	r3, #0
   2cca8:	b	2cce0 <main@@Base+0x16c3c>
   2ccac:	bne	2ccbc <main@@Base+0x16c18>
   2ccb0:	ldrb	r0, [r2, #2]!
   2ccb4:	cmp	r0, #32
   2ccb8:	bhi	2cccc <main@@Base+0x16c28>
   2ccbc:	mov	r0, sl
   2ccc0:	mov	r2, r5
   2ccc4:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   2ccc8:	mov	r2, r0
   2cccc:	cmp	r9, r2
   2ccd0:	beq	2ccec <main@@Base+0x16c48>
   2ccd4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2ccd8:	mov	r1, #5
   2ccdc:	mov	r3, #2
   2cce0:	str	r1, [sp]
   2cce4:	mov	r1, r2
   2cce8:	b	2c8f4 <main@@Base+0x16850>
   2ccec:	mov	r0, sl
   2ccf0:	mov	r1, r9
   2ccf4:	b	2cd68 <main@@Base+0x16cc4>
   2ccf8:	bne	2cd08 <main@@Base+0x16c64>
   2ccfc:	ldrb	r0, [r2, #2]!
   2cd00:	cmp	r0, #32
   2cd04:	bhi	2cd18 <main@@Base+0x16c74>
   2cd08:	mov	r0, sl
   2cd0c:	mov	r2, r5
   2cd10:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   2cd14:	mov	r2, r0
   2cd18:	cmp	r4, r2
   2cd1c:	beq	2cd60 <main@@Base+0x16cbc>
   2cd20:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2cd24:	movw	r1, #740	; 0x2e4
   2cd28:	mov	r3, #1
   2cd2c:	movt	r1, #6
   2cd30:	str	r3, [sp]
   2cd34:	mov	r3, #0
   2cd38:	add	r1, r1, #64	; 0x40
   2cd3c:	stmib	sp, {r0, r1}
   2cd40:	movw	r0, #53264	; 0xd010
   2cd44:	mov	r1, r2
   2cd48:	mov	r2, r5
   2cd4c:	movt	r0, #2
   2cd50:	str	r0, [sp, #12]
   2cd54:	mov	r0, sl
   2cd58:	bl	39afc <flatcc_json_parser_union_type@@Base>
   2cd5c:	b	2cd70 <main@@Base+0x16ccc>
   2cd60:	mov	r0, sl
   2cd64:	mov	r1, r4
   2cd68:	mov	r2, r5
   2cd6c:	bl	373bc <flatcc_json_parser_unmatched_symbol@@Base>
   2cd70:	ldr	r4, [fp, #-36]	; 0xffffffdc
   2cd74:	mov	r2, r0
   2cd78:	sub	r0, r5, r0
   2cd7c:	cmp	r0, #2
   2cd80:	blt	2cdf4 <main@@Base+0x16d50>
   2cd84:	ldrb	r0, [r2]
   2cd88:	cmp	r0, #32
   2cd8c:	bls	2cde0 <main@@Base+0x16d3c>
   2cd90:	mov	r3, r2
   2cd94:	cmp	r3, r5
   2cd98:	beq	2ce48 <main@@Base+0x16da4>
   2cd9c:	ldrb	r0, [r3]
   2cda0:	cmp	r0, #44	; 0x2c
   2cda4:	bne	2ce5c <main@@Base+0x16db8>
   2cda8:	add	r1, r3, #1
   2cdac:	sub	r0, r5, r1
   2cdb0:	cmp	r0, #2
   2cdb4:	blt	2ce24 <main@@Base+0x16d80>
   2cdb8:	ldrb	r0, [r1]
   2cdbc:	cmp	r0, #32
   2cdc0:	bls	2ce14 <main@@Base+0x16d70>
   2cdc4:	mov	r3, r1
   2cdc8:	cmp	r3, r5
   2cdcc:	beq	2ce3c <main@@Base+0x16d98>
   2cdd0:	ldrb	r0, [r3]
   2cdd4:	cmp	r0, #125	; 0x7d
   2cdd8:	bne	2b99c <main@@Base+0x158f8>
   2cddc:	b	2ce64 <main@@Base+0x16dc0>
   2cde0:	bne	2cdf4 <main@@Base+0x16d50>
   2cde4:	mov	r3, r2
   2cde8:	ldrb	r0, [r3, #1]!
   2cdec:	cmp	r0, #32
   2cdf0:	bhi	2ce08 <main@@Base+0x16d64>
   2cdf4:	mov	r1, r2
   2cdf8:	mov	r0, sl
   2cdfc:	mov	r2, r5
   2ce00:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   2ce04:	mov	r3, r0
   2ce08:	cmp	r3, r5
   2ce0c:	bne	2cd9c <main@@Base+0x16cf8>
   2ce10:	b	2ce48 <main@@Base+0x16da4>
   2ce14:	bne	2ce24 <main@@Base+0x16d80>
   2ce18:	ldrb	r0, [r3, #2]!
   2ce1c:	cmp	r0, #32
   2ce20:	bhi	2ce34 <main@@Base+0x16d90>
   2ce24:	mov	r0, sl
   2ce28:	mov	r2, r5
   2ce2c:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   2ce30:	mov	r3, r0
   2ce34:	cmp	r3, r5
   2ce38:	bne	2cdd0 <main@@Base+0x16d2c>
   2ce3c:	mov	r0, sl
   2ce40:	mov	r1, r5
   2ce44:	b	2ce9c <main@@Base+0x16df8>
   2ce48:	mov	r7, r5
   2ce4c:	ldr	r0, [sl, #24]
   2ce50:	cmp	r0, #0
   2ce54:	bne	2b81c <main@@Base+0x15778>
   2ce58:	b	2b8cc <main@@Base+0x15828>
   2ce5c:	cmp	r0, #125	; 0x7d
   2ce60:	bne	2ce94 <main@@Base+0x16df0>
   2ce64:	add	r1, r3, #1
   2ce68:	sub	r0, r5, r1
   2ce6c:	cmp	r0, #2
   2ce70:	blt	2cebc <main@@Base+0x16e18>
   2ce74:	ldrb	r0, [r1]
   2ce78:	cmp	r0, #32
   2ce7c:	bls	2cea8 <main@@Base+0x16e04>
   2ce80:	mov	r7, r1
   2ce84:	ldr	r0, [sl, #24]
   2ce88:	cmp	r0, #0
   2ce8c:	bne	2b81c <main@@Base+0x15778>
   2ce90:	b	2b8cc <main@@Base+0x15828>
   2ce94:	mov	r0, sl
   2ce98:	mov	r1, r3
   2ce9c:	mov	r2, r5
   2cea0:	mov	r3, #10
   2cea4:	b	2b8b8 <main@@Base+0x15814>
   2cea8:	bne	2cebc <main@@Base+0x16e18>
   2ceac:	ldrb	r0, [r3, #2]!
   2ceb0:	mov	r7, r3
   2ceb4:	cmp	r0, #32
   2ceb8:	bhi	2b8c0 <main@@Base+0x1581c>
   2cebc:	mov	r0, sl
   2cec0:	mov	r2, r5
   2cec4:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   2cec8:	b	2b8bc <main@@Base+0x15818>
   2cecc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2ced0:	add	fp, sp, #28
   2ced4:	push	{r3}		; (str r3, [sp, #-4]!)
   2ced8:	sub	r7, r2, r1
   2cedc:	cmp	r7, #8
   2cee0:	movcs	r7, #8
   2cee4:	sub	r5, r7, #1
   2cee8:	cmp	r5, #7
   2ceec:	bhi	2d004 <main@@Base+0x16f60>
   2cef0:	add	lr, pc, #32
   2cef4:	mov	ip, #0
   2cef8:	mov	r3, #0
   2cefc:	mov	r8, #0
   2cf00:	mov	r9, #0
   2cf04:	mov	sl, #0
   2cf08:	mov	r7, #0
   2cf0c:	mov	r4, #0
   2cf10:	mov	r6, #0
   2cf14:	ldr	pc, [lr, r5, lsl #2]
   2cf18:	andeq	ip, r2, ip, ror pc
   2cf1c:	andeq	ip, r2, r4, ror pc
   2cf20:	andeq	ip, r2, ip, ror #30
   2cf24:	andeq	ip, r2, r4, ror #30
   2cf28:	andeq	ip, r2, r8, asr pc
   2cf2c:	andeq	ip, r2, ip, asr #30
   2cf30:	andeq	ip, r2, ip, lsr pc
   2cf34:	andeq	ip, r2, r8, lsr pc
   2cf38:	ldrb	r3, [r1, #7]
   2cf3c:	ldrb	r7, [r1, #6]
   2cf40:	mov	r8, ip
   2cf44:	orr	r3, r3, r7, lsl #8
   2cf48:	mov	ip, r3
   2cf4c:	ldrb	r3, [r1, #5]
   2cf50:	mov	r9, r8
   2cf54:	orr	ip, ip, r3, lsl #16
   2cf58:	ldrb	r3, [r1, #4]
   2cf5c:	mov	sl, r9
   2cf60:	orr	ip, ip, r3, lsl #24
   2cf64:	ldrb	r3, [r1, #3]
   2cf68:	orr	r7, r3, sl
   2cf6c:	ldrb	r3, [r1, #2]
   2cf70:	orr	r4, r7, r3, lsl #8
   2cf74:	ldrb	r3, [r1, #1]
   2cf78:	orr	r6, r4, r3, lsl #16
   2cf7c:	ldrb	r7, [r1]
   2cf80:	movw	r3, #29797	; 0x7465
   2cf84:	movt	r3, #24931	; 0x6163
   2cf88:	eor	r3, ip, r3
   2cf8c:	orr	r7, r6, r7, lsl #24
   2cf90:	movw	r6, #24946	; 0x6172
   2cf94:	movt	r6, #17256	; 0x4368
   2cf98:	eor	r7, r7, r6
   2cf9c:	orrs	r3, r3, r7
   2cfa0:	bne	2d004 <main@@Base+0x16f60>
   2cfa4:	add	lr, r1, #8
   2cfa8:	sub	r7, r2, lr
   2cfac:	cmp	r7, #8
   2cfb0:	mov	r3, r7
   2cfb4:	movcs	r3, #8
   2cfb8:	sub	r3, r3, #1
   2cfbc:	cmp	r3, #7
   2cfc0:	bhi	2d004 <main@@Base+0x16f60>
   2cfc4:	cmp	r7, #2
   2cfc8:	blt	2d004 <main@@Base+0x16f60>
   2cfcc:	ldrb	r3, [lr]
   2cfd0:	cmp	r3, #114	; 0x72
   2cfd4:	bne	2d004 <main@@Base+0x16f60>
   2cfd8:	ldrb	r3, [r1, #9]
   2cfdc:	mov	ip, lr
   2cfe0:	cmp	r3, #46	; 0x2e
   2cfe4:	addeq	ip, r1, #10
   2cfe8:	cmp	ip, lr
   2cfec:	beq	2d004 <main@@Base+0x16f60>
   2cff0:	ldr	r3, [sp]
   2cff4:	mov	r1, ip
   2cff8:	sub	sp, fp, #28
   2cffc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2d000:	b	2720c <main@@Base+0x11168>
   2d004:	mov	r0, r1
   2d008:	sub	sp, fp, #28
   2d00c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2d010:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2d014:	add	fp, sp, #28
   2d018:	sub	sp, sp, #44	; 0x2c
   2d01c:	ldr	r7, [fp, #8]
   2d020:	mov	r9, r0
   2d024:	mov	r0, #0
   2d028:	mov	r8, r2
   2d02c:	mov	r4, r1
   2d030:	cmp	r3, #11
   2d034:	str	r0, [r7]
   2d038:	bhi	2d08c <main@@Base+0x16fe8>
   2d03c:	add	r0, pc, #0
   2d040:	ldr	pc, [r0, r3, lsl #2]
   2d044:	ldrdeq	sp, [r2], -r4
   2d048:	andeq	sp, r2, ip, lsr #1
   2d04c:	andeq	sp, r2, r8, lsl r1
   2d050:	andeq	sp, r2, ip, lsr #1
   2d054:	andeq	sp, r2, ip, lsr #1
   2d058:	andeq	sp, r2, ip, lsr #1
   2d05c:	andeq	sp, r2, ip, lsr #1
   2d060:	andeq	sp, r2, ip, lsr #1
   2d064:	andeq	sp, r2, r8, ror r1
   2d068:	andeq	sp, r2, r4, ror r0
   2d06c:	andeq	sp, r2, r4, ror r0
   2d070:	muleq	r2, r4, r0
   2d074:	mov	r0, r9
   2d078:	mov	r1, r4
   2d07c:	mov	r2, r8
   2d080:	mov	r3, r7
   2d084:	bl	2dfe4 <main@@Base+0x17f40>
   2d088:	b	2d27c <main@@Base+0x171d8>
   2d08c:	cmp	r3, #255	; 0xff
   2d090:	bne	2d0ac <main@@Base+0x17008>
   2d094:	mov	r0, r9
   2d098:	mov	r1, r4
   2d09c:	mov	r2, r8
   2d0a0:	mov	r3, r7
   2d0a4:	bl	39580 <flatcc_json_parser_build_string@@Base>
   2d0a8:	b	2d27c <main@@Base+0x171d8>
   2d0ac:	ldrb	r0, [r9, #8]
   2d0b0:	tst	r0, #1
   2d0b4:	bne	2d1e0 <main@@Base+0x1713c>
   2d0b8:	mov	r0, r9
   2d0bc:	mov	r1, r4
   2d0c0:	mov	r2, r8
   2d0c4:	mov	r3, #15
   2d0c8:	sub	sp, fp, #28
   2d0cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2d0d0:	b	36a9c <flatcc_json_parser_set_error@@Base>
   2d0d4:	sub	r0, r8, r4
   2d0d8:	cmp	r0, #4
   2d0dc:	blt	2d0fc <main@@Base+0x17058>
   2d0e0:	movw	r1, #59110	; 0xe6e6
   2d0e4:	mov	r0, r4
   2d0e8:	mov	r2, #4
   2d0ec:	movt	r1, #4
   2d0f0:	bl	14ebc <bcmp@plt>
   2d0f4:	cmp	r0, #0
   2d0f8:	beq	2d2c8 <main@@Base+0x17224>
   2d0fc:	mov	r0, r9
   2d100:	mov	r1, r4
   2d104:	mov	r2, r8
   2d108:	mov	r3, #26
   2d10c:	sub	sp, fp, #28
   2d110:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2d114:	b	36a9c <flatcc_json_parser_set_error@@Base>
   2d118:	mov	r0, #0
   2d11c:	mov	r1, #1
   2d120:	str	r0, [r7]
   2d124:	ldr	r0, [r9]
   2d128:	bl	31fa8 <flatcc_builder_start_table@@Base>
   2d12c:	cmp	r0, #0
   2d130:	bne	2d268 <main@@Base+0x171c4>
   2d134:	cmp	r4, r8
   2d138:	beq	2d244 <main@@Base+0x171a0>
   2d13c:	ldrb	r0, [r4]
   2d140:	cmp	r0, #123	; 0x7b
   2d144:	bne	2d244 <main@@Base+0x171a0>
   2d148:	add	r1, r4, #1
   2d14c:	sub	r0, r8, r1
   2d150:	cmp	r0, #2
   2d154:	blt	2d860 <main@@Base+0x177bc>
   2d158:	ldrb	r0, [r1]
   2d15c:	cmp	r0, #32
   2d160:	bls	2d850 <main@@Base+0x177ac>
   2d164:	mov	r4, r1
   2d168:	cmp	r4, r8
   2d16c:	mov	r2, r8
   2d170:	bne	2d87c <main@@Base+0x177d8>
   2d174:	b	2d8bc <main@@Base+0x17818>
   2d178:	mov	r0, #0
   2d17c:	mov	r1, #2
   2d180:	mov	r2, #2
   2d184:	str	r0, [r7]
   2d188:	ldr	r0, [r9]
   2d18c:	bl	30ccc <flatcc_builder_start_struct@@Base>
   2d190:	cmp	r0, #0
   2d194:	beq	2d238 <main@@Base+0x17194>
   2d198:	cmp	r4, r8
   2d19c:	beq	2d1f8 <main@@Base+0x17154>
   2d1a0:	ldrb	r1, [r4]
   2d1a4:	cmp	r1, #123	; 0x7b
   2d1a8:	bne	2d1f8 <main@@Base+0x17154>
   2d1ac:	add	r1, r4, #1
   2d1b0:	str	r0, [sp, #12]
   2d1b4:	sub	r0, r8, r1
   2d1b8:	cmp	r0, #2
   2d1bc:	blt	2d2e8 <main@@Base+0x17244>
   2d1c0:	ldrb	r0, [r1]
   2d1c4:	cmp	r0, #32
   2d1c8:	bls	2d2d8 <main@@Base+0x17234>
   2d1cc:	mov	r4, r1
   2d1d0:	cmp	r4, r8
   2d1d4:	mov	r2, r8
   2d1d8:	bne	2d304 <main@@Base+0x17260>
   2d1dc:	b	2d344 <main@@Base+0x172a0>
   2d1e0:	mov	r0, r9
   2d1e4:	mov	r1, r4
   2d1e8:	mov	r2, r8
   2d1ec:	sub	sp, fp, #28
   2d1f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2d1f4:	b	37648 <flatcc_json_parser_generic_json@@Base>
   2d1f8:	mov	r0, r9
   2d1fc:	mov	r1, r4
   2d200:	mov	r2, r8
   2d204:	mov	r3, #21
   2d208:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   2d20c:	mov	r4, r0
   2d210:	cmp	r4, r8
   2d214:	mov	r1, r8
   2d218:	beq	2d23c <main@@Base+0x17198>
   2d21c:	ldr	r0, [r9]
   2d220:	bl	30dc0 <flatcc_builder_end_struct@@Base>
   2d224:	cmp	r0, #0
   2d228:	mov	r1, r4
   2d22c:	str	r0, [r7]
   2d230:	bne	2d280 <main@@Base+0x171dc>
   2d234:	b	2d23c <main@@Base+0x17198>
   2d238:	mov	r1, r4
   2d23c:	mov	r0, r9
   2d240:	b	2d270 <main@@Base+0x171cc>
   2d244:	mov	r0, r9
   2d248:	mov	r1, r4
   2d24c:	mov	r2, r8
   2d250:	mov	r3, #21
   2d254:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   2d258:	mov	r4, r0
   2d25c:	ldr	r0, [r9, #24]
   2d260:	cmp	r0, #0
   2d264:	beq	2df10 <main@@Base+0x17e6c>
   2d268:	mov	r0, r9
   2d26c:	mov	r1, r4
   2d270:	mov	r2, r8
   2d274:	mov	r3, #33	; 0x21
   2d278:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   2d27c:	mov	r4, r0
   2d280:	ldr	r0, [r9, #24]
   2d284:	cmp	r0, #0
   2d288:	bne	2d298 <main@@Base+0x171f4>
   2d28c:	ldr	r0, [r7]
   2d290:	cmp	r0, #0
   2d294:	beq	2d2a4 <main@@Base+0x17200>
   2d298:	mov	r0, r4
   2d29c:	sub	sp, fp, #28
   2d2a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2d2a4:	mov	r0, r9
   2d2a8:	mov	r1, r4
   2d2ac:	mov	r2, r8
   2d2b0:	mov	r3, #33	; 0x21
   2d2b4:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   2d2b8:	mov	r4, r0
   2d2bc:	mov	r0, r4
   2d2c0:	sub	sp, fp, #28
   2d2c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2d2c8:	add	r4, r4, #4
   2d2cc:	mov	r0, r4
   2d2d0:	sub	sp, fp, #28
   2d2d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2d2d8:	bne	2d2e8 <main@@Base+0x17244>
   2d2dc:	ldrb	r0, [r4, #2]!
   2d2e0:	cmp	r0, #32
   2d2e4:	bhi	2d2f8 <main@@Base+0x17254>
   2d2e8:	mov	r0, r9
   2d2ec:	mov	r2, r8
   2d2f0:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   2d2f4:	mov	r4, r0
   2d2f8:	cmp	r4, r8
   2d2fc:	mov	r2, r8
   2d300:	beq	2d344 <main@@Base+0x172a0>
   2d304:	ldrb	r0, [r4]
   2d308:	cmp	r0, #125	; 0x7d
   2d30c:	bne	2d340 <main@@Base+0x1729c>
   2d310:	add	r1, r4, #1
   2d314:	sub	r0, r8, r1
   2d318:	cmp	r0, #2
   2d31c:	blt	2df5c <main@@Base+0x17eb8>
   2d320:	ldrb	r0, [r1]
   2d324:	cmp	r0, #32
   2d328:	bhi	2d830 <main@@Base+0x1778c>
   2d32c:	bne	2df5c <main@@Base+0x17eb8>
   2d330:	ldrb	r0, [r4, #2]!
   2d334:	cmp	r0, #32
   2d338:	bhi	2d210 <main@@Base+0x1716c>
   2d33c:	b	2df5c <main@@Base+0x17eb8>
   2d340:	mov	r2, r4
   2d344:	movw	r0, #508	; 0x1fc
   2d348:	movt	r0, #6
   2d34c:	add	r0, r0, #108	; 0x6c
   2d350:	str	r0, [sp, #8]
   2d354:	str	r9, [sp, #20]
   2d358:	cmp	r2, r8
   2d35c:	mov	r1, r8
   2d360:	beq	2d3ac <main@@Base+0x17308>
   2d364:	ldrb	r0, [r2]
   2d368:	cmp	r0, #46	; 0x2e
   2d36c:	beq	2d384 <main@@Base+0x172e0>
   2d370:	cmp	r0, #34	; 0x22
   2d374:	bne	2d3a0 <main@@Base+0x172fc>
   2d378:	mov	r0, #0
   2d37c:	add	r1, r2, #1
   2d380:	b	2d3a8 <main@@Base+0x17304>
   2d384:	mov	r1, r2
   2d388:	mov	r0, r9
   2d38c:	mov	r2, r8
   2d390:	mov	r3, #5
   2d394:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   2d398:	mov	r1, r0
   2d39c:	b	2d3ac <main@@Base+0x17308>
   2d3a0:	mov	r0, #1
   2d3a4:	mov	r1, r2
   2d3a8:	str	r0, [r9, #12]
   2d3ac:	sub	r0, r8, r1
   2d3b0:	mov	r2, #8
   2d3b4:	cmp	r0, #8
   2d3b8:	movcs	r0, r2
   2d3bc:	sub	r4, r0, #1
   2d3c0:	cmp	r4, #7
   2d3c4:	bhi	2d518 <main@@Base+0x17474>
   2d3c8:	add	r0, pc, #36	; 0x24
   2d3cc:	mov	r9, r7
   2d3d0:	mov	sl, #0
   2d3d4:	mov	ip, #0
   2d3d8:	mov	lr, #0
   2d3dc:	mov	r6, #0
   2d3e0:	mov	r3, #0
   2d3e4:	mov	r5, #0
   2d3e8:	mov	r2, #0
   2d3ec:	mov	r7, #0
   2d3f0:	ldr	pc, [r0, r4, lsl #2]
   2d3f4:	andeq	sp, r2, r8, asr r4
   2d3f8:	andeq	sp, r2, r0, asr r4
   2d3fc:	andeq	sp, r2, r8, asr #8
   2d400:	andeq	sp, r2, r0, asr #8
   2d404:	andeq	sp, r2, r4, lsr r4
   2d408:	andeq	sp, r2, r8, lsr #8
   2d40c:	andeq	sp, r2, r8, lsl r4
   2d410:	andeq	sp, r2, r4, lsl r4
   2d414:	ldrb	ip, [r1, #7]
   2d418:	ldrb	r0, [r1, #6]
   2d41c:	mov	lr, sl
   2d420:	orr	r0, ip, r0, lsl #8
   2d424:	mov	sl, r0
   2d428:	ldrb	r0, [r1, #5]
   2d42c:	mov	r6, lr
   2d430:	orr	sl, sl, r0, lsl #16
   2d434:	ldrb	r0, [r1, #4]
   2d438:	mov	r3, r6
   2d43c:	orr	sl, sl, r0, lsl #24
   2d440:	ldrb	r0, [r1, #3]
   2d444:	orr	r5, r0, r3
   2d448:	ldrb	r0, [r1, #2]
   2d44c:	orr	r2, r5, r0, lsl #8
   2d450:	ldrb	r0, [r1, #1]
   2d454:	orr	r7, r2, r0, lsl #16
   2d458:	ldrb	r2, [r1]
   2d45c:	movw	r0, #25966	; 0x656e
   2d460:	movw	r3, #26994	; 0x6972
   2d464:	movt	r0, #24428	; 0x5f6c
   2d468:	movt	r3, #26721	; 0x6861
   2d46c:	eor	r0, sl, r0
   2d470:	orr	r2, r7, r2, lsl #24
   2d474:	mov	r7, r9
   2d478:	ldr	r9, [sp, #20]
   2d47c:	eor	r2, r2, r3
   2d480:	orrs	r0, r0, r2
   2d484:	bne	2d518 <main@@Base+0x17474>
   2d488:	add	r4, r1, #8
   2d48c:	mov	r3, #8
   2d490:	sub	r0, r8, r4
   2d494:	cmp	r0, #8
   2d498:	movcc	r3, r0
   2d49c:	sub	r2, r3, #3
   2d4a0:	cmp	r2, #6
   2d4a4:	bcs	2d520 <main@@Base+0x1747c>
   2d4a8:	ldrb	r2, [r1, #10]
   2d4ac:	lsl	r2, r2, #8
   2d4b0:	ldrb	r3, [r1, #9]
   2d4b4:	orr	r2, r2, r3, lsl #16
   2d4b8:	ldrb	r3, [r4]
   2d4bc:	bic	r2, r2, #255	; 0xff
   2d4c0:	orr	r2, r2, r3, lsl #24
   2d4c4:	movw	r3, #26624	; 0x6800
   2d4c8:	movt	r3, #26484	; 0x6774
   2d4cc:	teq	r2, r3
   2d4d0:	bne	2d5d0 <main@@Base+0x1752c>
   2d4d4:	cmp	r0, #4
   2d4d8:	blt	2d5d0 <main@@Base+0x1752c>
   2d4dc:	mov	r2, r1
   2d4e0:	ldr	r3, [r9, #12]
   2d4e4:	ldrb	r0, [r2, #11]!
   2d4e8:	cmp	r3, #0
   2d4ec:	beq	2d538 <main@@Base+0x17494>
   2d4f0:	cmp	r0, #33	; 0x21
   2d4f4:	bcc	2d500 <main@@Base+0x1745c>
   2d4f8:	cmp	r0, #58	; 0x3a
   2d4fc:	bne	2d5d0 <main@@Base+0x1752c>
   2d500:	mov	r0, #0
   2d504:	str	r0, [r9, #12]
   2d508:	sub	r0, r8, r2
   2d50c:	cmp	r0, #2
   2d510:	bge	2d550 <main@@Base+0x174ac>
   2d514:	b	2d580 <main@@Base+0x174dc>
   2d518:	mov	r0, r9
   2d51c:	b	2d5d8 <main@@Base+0x17534>
   2d520:	mov	r2, #0
   2d524:	cmp	r3, #1
   2d528:	beq	2d4b8 <main@@Base+0x17414>
   2d52c:	cmp	r3, #2
   2d530:	beq	2d4b0 <main@@Base+0x1740c>
   2d534:	b	2d5d0 <main@@Base+0x1752c>
   2d538:	cmp	r0, #34	; 0x22
   2d53c:	bne	2d5d0 <main@@Base+0x1752c>
   2d540:	add	r2, r1, #12
   2d544:	sub	r0, r8, r2
   2d548:	cmp	r0, #2
   2d54c:	blt	2d580 <main@@Base+0x174dc>
   2d550:	ldrb	r0, [r2]
   2d554:	cmp	r0, #32
   2d558:	bls	2d56c <main@@Base+0x174c8>
   2d55c:	mov	r5, r2
   2d560:	cmp	r5, r8
   2d564:	bne	2d59c <main@@Base+0x174f8>
   2d568:	b	2d6a8 <main@@Base+0x17604>
   2d56c:	bne	2d580 <main@@Base+0x174dc>
   2d570:	mov	r5, r2
   2d574:	ldrb	r0, [r5, #1]!
   2d578:	cmp	r0, #32
   2d57c:	bhi	2d594 <main@@Base+0x174f0>
   2d580:	mov	r1, r2
   2d584:	mov	r0, r9
   2d588:	mov	r2, r8
   2d58c:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   2d590:	mov	r5, r0
   2d594:	cmp	r5, r8
   2d598:	beq	2d6a8 <main@@Base+0x17604>
   2d59c:	ldrb	r0, [r5]
   2d5a0:	cmp	r0, #58	; 0x3a
   2d5a4:	bne	2d6a8 <main@@Base+0x17604>
   2d5a8:	add	r1, r5, #1
   2d5ac:	sub	r0, r8, r1
   2d5b0:	cmp	r0, #2
   2d5b4:	blt	2d6d0 <main@@Base+0x1762c>
   2d5b8:	ldrb	r0, [r1]
   2d5bc:	cmp	r0, #32
   2d5c0:	bls	2d6c0 <main@@Base+0x1761c>
   2d5c4:	mov	r5, r1
   2d5c8:	cmp	r4, r5
   2d5cc:	bne	2d6e8 <main@@Base+0x17644>
   2d5d0:	mov	r0, r9
   2d5d4:	mov	r1, r4
   2d5d8:	mov	r2, r8
   2d5dc:	bl	373bc <flatcc_json_parser_unmatched_symbol@@Base>
   2d5e0:	mov	r1, r0
   2d5e4:	sub	r0, r8, r1
   2d5e8:	cmp	r0, #2
   2d5ec:	blt	2d660 <main@@Base+0x175bc>
   2d5f0:	ldrb	r0, [r1]
   2d5f4:	cmp	r0, #32
   2d5f8:	bls	2d64c <main@@Base+0x175a8>
   2d5fc:	mov	r2, r1
   2d600:	cmp	r2, r8
   2d604:	beq	2d804 <main@@Base+0x17760>
   2d608:	ldrb	r0, [r2]
   2d60c:	cmp	r0, #44	; 0x2c
   2d610:	bne	2d80c <main@@Base+0x17768>
   2d614:	add	r1, r2, #1
   2d618:	sub	r0, r8, r1
   2d61c:	cmp	r0, #2
   2d620:	blt	2d68c <main@@Base+0x175e8>
   2d624:	ldrb	r0, [r1]
   2d628:	cmp	r0, #32
   2d62c:	bls	2d67c <main@@Base+0x175d8>
   2d630:	mov	r2, r1
   2d634:	cmp	r2, r8
   2d638:	beq	2d844 <main@@Base+0x177a0>
   2d63c:	ldrb	r0, [r2]
   2d640:	cmp	r0, #125	; 0x7d
   2d644:	bne	2d358 <main@@Base+0x172b4>
   2d648:	b	2d814 <main@@Base+0x17770>
   2d64c:	bne	2d660 <main@@Base+0x175bc>
   2d650:	mov	r2, r1
   2d654:	ldrb	r0, [r2, #1]!
   2d658:	cmp	r0, #32
   2d65c:	bhi	2d670 <main@@Base+0x175cc>
   2d660:	mov	r0, r9
   2d664:	mov	r2, r8
   2d668:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   2d66c:	mov	r2, r0
   2d670:	cmp	r2, r8
   2d674:	bne	2d608 <main@@Base+0x17564>
   2d678:	b	2d804 <main@@Base+0x17760>
   2d67c:	bne	2d68c <main@@Base+0x175e8>
   2d680:	ldrb	r0, [r2, #2]!
   2d684:	cmp	r0, #32
   2d688:	bhi	2d69c <main@@Base+0x175f8>
   2d68c:	mov	r0, r9
   2d690:	mov	r2, r8
   2d694:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   2d698:	mov	r2, r0
   2d69c:	cmp	r2, r8
   2d6a0:	bne	2d63c <main@@Base+0x17598>
   2d6a4:	b	2d844 <main@@Base+0x177a0>
   2d6a8:	mov	r0, r9
   2d6ac:	mov	r1, r5
   2d6b0:	mov	r2, r8
   2d6b4:	mov	r3, #4
   2d6b8:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   2d6bc:	b	2d6dc <main@@Base+0x17638>
   2d6c0:	bne	2d6d0 <main@@Base+0x1762c>
   2d6c4:	ldrb	r0, [r5, #2]!
   2d6c8:	cmp	r0, #32
   2d6cc:	bhi	2d6e0 <main@@Base+0x1763c>
   2d6d0:	mov	r0, r9
   2d6d4:	mov	r2, r8
   2d6d8:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   2d6dc:	mov	r5, r0
   2d6e0:	cmp	r4, r5
   2d6e4:	beq	2d5d0 <main@@Base+0x1752c>
   2d6e8:	mov	r4, #0
   2d6ec:	cmp	r5, r8
   2d6f0:	str	r4, [sp, #36]	; 0x24
   2d6f4:	str	r4, [sp, #32]
   2d6f8:	strh	r4, [sp, #24]
   2d6fc:	str	r4, [sp, #28]
   2d700:	beq	2d758 <main@@Base+0x176b4>
   2d704:	add	r0, sp, #32
   2d708:	mov	r1, r5
   2d70c:	mov	r2, r8
   2d710:	add	r3, sp, #28
   2d714:	str	r0, [sp]
   2d718:	mov	r0, r9
   2d71c:	bl	38fa8 <flatcc_json_parser_integer@@Base>
   2d720:	cmp	r0, r5
   2d724:	beq	2d768 <main@@Base+0x176c4>
   2d728:	mov	r1, r0
   2d72c:	ldr	r0, [sp, #28]
   2d730:	cmp	r0, #0
   2d734:	beq	2d778 <main@@Base+0x176d4>
   2d738:	mov	r0, r9
   2d73c:	mov	r2, r8
   2d740:	mov	r3, #8
   2d744:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   2d748:	mov	r1, r0
   2d74c:	cmp	r5, r1
   2d750:	bne	2d7ec <main@@Base+0x17748>
   2d754:	b	2d7bc <main@@Base+0x17718>
   2d758:	mov	r1, r8
   2d75c:	cmp	r5, r1
   2d760:	bne	2d7ec <main@@Base+0x17748>
   2d764:	b	2d7bc <main@@Base+0x17718>
   2d768:	mov	r1, r5
   2d76c:	cmp	r5, r1
   2d770:	bne	2d7ec <main@@Base+0x17748>
   2d774:	b	2d7bc <main@@Base+0x17718>
   2d778:	ldr	r0, [sp, #32]
   2d77c:	ldr	r2, [sp, #36]	; 0x24
   2d780:	subs	r3, r0, #65536	; 0x10000
   2d784:	sbcs	r2, r2, #0
   2d788:	bcc	2d7ac <main@@Base+0x17708>
   2d78c:	mov	r0, r9
   2d790:	mov	r2, r8
   2d794:	mov	r3, #7
   2d798:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   2d79c:	mov	r1, r0
   2d7a0:	cmp	r5, r1
   2d7a4:	bne	2d7ec <main@@Base+0x17748>
   2d7a8:	b	2d7bc <main@@Base+0x17718>
   2d7ac:	mov	r4, r0
   2d7b0:	strh	r0, [sp, #24]
   2d7b4:	cmp	r5, r1
   2d7b8:	bne	2d7ec <main@@Base+0x17748>
   2d7bc:	add	r0, sp, #24
   2d7c0:	mov	r1, r5
   2d7c4:	mov	r2, r8
   2d7c8:	str	r0, [sp]
   2d7cc:	mov	r0, r9
   2d7d0:	ldr	r3, [sp, #8]
   2d7d4:	bl	2e690 <main@@Base+0x185ec>
   2d7d8:	mov	r1, r0
   2d7dc:	cmp	r0, r5
   2d7e0:	cmpne	r1, r8
   2d7e4:	beq	2dfa4 <main@@Base+0x17f00>
   2d7e8:	ldrh	r4, [sp, #24]
   2d7ec:	ldr	r0, [sp, #12]
   2d7f0:	strh	r4, [r0]
   2d7f4:	sub	r0, r8, r1
   2d7f8:	cmp	r0, #2
   2d7fc:	bge	2d5f0 <main@@Base+0x1754c>
   2d800:	b	2d660 <main@@Base+0x175bc>
   2d804:	mov	r1, r8
   2d808:	b	2d23c <main@@Base+0x17198>
   2d80c:	cmp	r0, #125	; 0x7d
   2d810:	bne	2df34 <main@@Base+0x17e90>
   2d814:	add	r1, r2, #1
   2d818:	sub	r0, r8, r1
   2d81c:	cmp	r0, #2
   2d820:	blt	2df5c <main@@Base+0x17eb8>
   2d824:	ldrb	r0, [r1]
   2d828:	cmp	r0, #32
   2d82c:	bls	2df48 <main@@Base+0x17ea4>
   2d830:	mov	r4, r1
   2d834:	cmp	r4, r8
   2d838:	mov	r1, r8
   2d83c:	bne	2d21c <main@@Base+0x17178>
   2d840:	b	2d23c <main@@Base+0x17198>
   2d844:	mov	r0, r9
   2d848:	mov	r1, r8
   2d84c:	b	2df3c <main@@Base+0x17e98>
   2d850:	bne	2d860 <main@@Base+0x177bc>
   2d854:	ldrb	r0, [r4, #2]!
   2d858:	cmp	r0, #32
   2d85c:	bhi	2d870 <main@@Base+0x177cc>
   2d860:	mov	r0, r9
   2d864:	mov	r2, r8
   2d868:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   2d86c:	mov	r4, r0
   2d870:	cmp	r4, r8
   2d874:	mov	r2, r8
   2d878:	beq	2d8bc <main@@Base+0x17818>
   2d87c:	ldrb	r0, [r4]
   2d880:	cmp	r0, #125	; 0x7d
   2d884:	bne	2d8b8 <main@@Base+0x17814>
   2d888:	add	r1, r4, #1
   2d88c:	sub	r0, r8, r1
   2d890:	cmp	r0, #2
   2d894:	blt	2df94 <main@@Base+0x17ef0>
   2d898:	ldrb	r0, [r1]
   2d89c:	cmp	r0, #32
   2d8a0:	bhi	2df00 <main@@Base+0x17e5c>
   2d8a4:	bne	2df94 <main@@Base+0x17ef0>
   2d8a8:	ldrb	r0, [r4, #2]!
   2d8ac:	cmp	r0, #32
   2d8b0:	bhi	2d25c <main@@Base+0x171b8>
   2d8b4:	b	2df94 <main@@Base+0x17ef0>
   2d8b8:	mov	r2, r4
   2d8bc:	movw	r0, #508	; 0x1fc
   2d8c0:	movt	r0, #6
   2d8c4:	add	r0, r0, #96	; 0x60
   2d8c8:	str	r0, [sp, #8]
   2d8cc:	str	r7, [sp, #16]
   2d8d0:	cmp	r2, r8
   2d8d4:	mov	r1, r8
   2d8d8:	beq	2d924 <main@@Base+0x17880>
   2d8dc:	ldrb	r0, [r2]
   2d8e0:	cmp	r0, #46	; 0x2e
   2d8e4:	beq	2d8fc <main@@Base+0x17858>
   2d8e8:	cmp	r0, #34	; 0x22
   2d8ec:	bne	2d918 <main@@Base+0x17874>
   2d8f0:	mov	r0, #0
   2d8f4:	add	r1, r2, #1
   2d8f8:	b	2d920 <main@@Base+0x1787c>
   2d8fc:	mov	r1, r2
   2d900:	mov	r0, r9
   2d904:	mov	r2, r8
   2d908:	mov	r3, #5
   2d90c:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   2d910:	mov	r1, r0
   2d914:	b	2d924 <main@@Base+0x17880>
   2d918:	mov	r0, #1
   2d91c:	mov	r1, r2
   2d920:	str	r0, [r9, #12]
   2d924:	sub	r0, r8, r1
   2d928:	mov	r2, #8
   2d92c:	cmp	r0, #8
   2d930:	movcs	r0, r2
   2d934:	sub	r4, r0, #1
   2d938:	cmp	r4, #7
   2d93c:	bhi	2db68 <main@@Base+0x17ac4>
   2d940:	add	sl, pc, #32
   2d944:	mov	r0, #0
   2d948:	mov	ip, #0
   2d94c:	mov	lr, #0
   2d950:	mov	r6, #0
   2d954:	mov	r3, #0
   2d958:	mov	r2, #0
   2d95c:	mov	r7, #0
   2d960:	mov	r5, #0
   2d964:	ldr	pc, [sl, r4, lsl #2]
   2d968:	andeq	sp, r2, ip, asr #19
   2d96c:	andeq	sp, r2, r4, asr #19
   2d970:			; <UNDEFINED> instruction: 0x0002d9bc
   2d974:			; <UNDEFINED> instruction: 0x0002d9b4
   2d978:	andeq	sp, r2, r8, lsr #19
   2d97c:	muleq	r2, ip, r9
   2d980:	andeq	sp, r2, ip, lsl #19
   2d984:	andeq	sp, r2, r8, lsl #19
   2d988:	ldrb	ip, [r1, #7]
   2d98c:	ldrb	r2, [r1, #6]
   2d990:	mov	lr, r0
   2d994:	orr	r2, ip, r2, lsl #8
   2d998:	mov	r0, r2
   2d99c:	ldrb	r2, [r1, #5]
   2d9a0:	mov	r6, lr
   2d9a4:	orr	r0, r0, r2, lsl #16
   2d9a8:	ldrb	r2, [r1, #4]
   2d9ac:	mov	r3, r6
   2d9b0:	orr	r0, r0, r2, lsl #24
   2d9b4:	ldrb	r2, [r1, #3]
   2d9b8:	orr	r2, r2, r3
   2d9bc:	ldrb	r3, [r1, #2]
   2d9c0:	orr	r7, r2, r3, lsl #8
   2d9c4:	ldrb	r2, [r1, #1]
   2d9c8:	orr	r5, r7, r2, lsl #16
   2d9cc:	movw	r2, #24948	; 0x6174
   2d9d0:	movw	r3, #28530	; 0x6f72
   2d9d4:	movt	r2, #25695	; 0x645f
   2d9d8:	movt	r3, #29559	; 0x7377
   2d9dc:	eor	r0, r0, r2
   2d9e0:	ldrb	r2, [r1]
   2d9e4:	orr	r2, r5, r2, lsl #24
   2d9e8:	eor	r2, r2, r3
   2d9ec:	orrs	r0, r0, r2
   2d9f0:	bne	2db68 <main@@Base+0x17ac4>
   2d9f4:	add	lr, r1, #8
   2d9f8:	mov	r2, #8
   2d9fc:	sub	r0, r8, lr
   2da00:	cmp	r0, #8
   2da04:	movcs	r0, r2
   2da08:	sub	r3, r0, #1
   2da0c:	cmp	r3, #7
   2da10:	bhi	2db70 <main@@Base+0x17acc>
   2da14:	add	r6, pc, #36	; 0x24
   2da18:	mov	r2, #0
   2da1c:	mov	r0, #0
   2da20:	mov	sl, #0
   2da24:	mov	r4, #0
   2da28:	mov	r5, #0
   2da2c:	mov	r7, #0
   2da30:	mov	ip, #0
   2da34:	str	r2, [sp, #12]
   2da38:	mov	r2, #0
   2da3c:	ldr	pc, [r6, r3, lsl #2]
   2da40:	andeq	sp, r2, ip, lsr #21
   2da44:	andeq	sp, r2, r4, lsr #21
   2da48:	muleq	r2, ip, sl
   2da4c:	muleq	r2, r4, sl
   2da50:	andeq	sp, r2, r8, lsl #21
   2da54:	andeq	sp, r2, ip, ror sl
   2da58:	andeq	sp, r2, r8, ror #20
   2da5c:	andeq	sp, r2, r0, ror #20
   2da60:	ldrb	r2, [r1, #15]
   2da64:	str	r2, [sp, #12]
   2da68:	ldrb	r2, [r1, #14]
   2da6c:	ldr	r3, [sp, #12]
   2da70:	mov	sl, r0
   2da74:	orr	r2, r3, r2, lsl #8
   2da78:	mov	r0, r2
   2da7c:	ldrb	r2, [r1, #13]
   2da80:	mov	r4, sl
   2da84:	orr	r0, r0, r2, lsl #16
   2da88:	ldrb	r2, [r1, #12]
   2da8c:	mov	r5, r4
   2da90:	orr	r0, r0, r2, lsl #24
   2da94:	ldrb	r2, [r1, #11]
   2da98:	orr	r2, r2, r5
   2da9c:	ldrb	r3, [r1, #10]
   2daa0:	orr	r7, r2, r3, lsl #8
   2daa4:	ldrb	r2, [r1, #9]
   2daa8:	orr	ip, r7, r2, lsl #16
   2daac:	movw	r2, #24941	; 0x616d
   2dab0:	movw	r3, #25451	; 0x636b
   2dab4:	movt	r2, #24420	; 0x5f64
   2dab8:	movt	r3, #29793	; 0x7461
   2dabc:	eor	r0, r0, r2
   2dac0:	ldrb	r2, [lr]
   2dac4:	orr	r2, ip, r2, lsl #24
   2dac8:	eor	r2, r2, r3
   2dacc:	orrs	r0, r0, r2
   2dad0:	bne	2db70 <main@@Base+0x17acc>
   2dad4:	add	r4, r1, #16
   2dad8:	mov	r3, #8
   2dadc:	sub	r0, r8, r4
   2dae0:	cmp	r0, #8
   2dae4:	movcc	r3, r0
   2dae8:	sub	r2, r3, #3
   2daec:	cmp	r2, #6
   2daf0:	bcs	2dc34 <main@@Base+0x17b90>
   2daf4:	ldrb	r2, [r1, #18]
   2daf8:	ldr	r7, [sp, #16]
   2dafc:	lsl	r2, r2, #8
   2db00:	ldrb	r3, [r1, #17]
   2db04:	orr	r2, r2, r3, lsl #16
   2db08:	ldrb	r3, [r4]
   2db0c:	bic	r2, r2, #255	; 0xff
   2db10:	orr	r2, r2, r3, lsl #24
   2db14:	movw	r3, #25856	; 0x6500
   2db18:	movt	r3, #24935	; 0x6167
   2db1c:	teq	r2, r3
   2db20:	bne	2dce8 <main@@Base+0x17c44>
   2db24:	cmp	r0, #4
   2db28:	blt	2dce8 <main@@Base+0x17c44>
   2db2c:	mov	r2, r1
   2db30:	ldr	r3, [r9, #12]
   2db34:	ldrb	r0, [r2, #19]!
   2db38:	cmp	r3, #0
   2db3c:	beq	2dc50 <main@@Base+0x17bac>
   2db40:	cmp	r0, #33	; 0x21
   2db44:	bcc	2db50 <main@@Base+0x17aac>
   2db48:	cmp	r0, #58	; 0x3a
   2db4c:	bne	2dce8 <main@@Base+0x17c44>
   2db50:	mov	r0, #0
   2db54:	str	r0, [r9, #12]
   2db58:	sub	r0, r8, r2
   2db5c:	cmp	r0, #2
   2db60:	bge	2dc68 <main@@Base+0x17bc4>
   2db64:	b	2dc98 <main@@Base+0x17bf4>
   2db68:	mov	r0, r9
   2db6c:	b	2db78 <main@@Base+0x17ad4>
   2db70:	mov	r0, r9
   2db74:	mov	r1, lr
   2db78:	mov	r2, r8
   2db7c:	bl	373bc <flatcc_json_parser_unmatched_symbol@@Base>
   2db80:	ldr	r7, [sp, #16]
   2db84:	mov	r4, r0
   2db88:	sub	r0, r8, r4
   2db8c:	cmp	r0, #2
   2db90:	blt	2dd08 <main@@Base+0x17c64>
   2db94:	ldrb	r0, [r4]
   2db98:	cmp	r0, #32
   2db9c:	bls	2dbe4 <main@@Base+0x17b40>
   2dba0:	mov	r2, r4
   2dba4:	cmp	r2, r8
   2dba8:	beq	2dec8 <main@@Base+0x17e24>
   2dbac:	ldrb	r0, [r2]
   2dbb0:	cmp	r0, #44	; 0x2c
   2dbb4:	bne	2dedc <main@@Base+0x17e38>
   2dbb8:	add	r1, r2, #1
   2dbbc:	sub	r0, r8, r1
   2dbc0:	cmp	r0, #2
   2dbc4:	blt	2dc0c <main@@Base+0x17b68>
   2dbc8:	ldrb	r0, [r1]
   2dbcc:	cmp	r0, #32
   2dbd0:	bls	2dbfc <main@@Base+0x17b58>
   2dbd4:	mov	r2, r1
   2dbd8:	cmp	r2, r8
   2dbdc:	bne	2dc24 <main@@Base+0x17b80>
   2dbe0:	b	2df28 <main@@Base+0x17e84>
   2dbe4:	bne	2dd08 <main@@Base+0x17c64>
   2dbe8:	mov	r2, r4
   2dbec:	ldrb	r0, [r2, #1]!
   2dbf0:	cmp	r0, #32
   2dbf4:	bhi	2dd1c <main@@Base+0x17c78>
   2dbf8:	b	2dd08 <main@@Base+0x17c64>
   2dbfc:	bne	2dc0c <main@@Base+0x17b68>
   2dc00:	ldrb	r0, [r2, #2]!
   2dc04:	cmp	r0, #32
   2dc08:	bhi	2dc1c <main@@Base+0x17b78>
   2dc0c:	mov	r0, r9
   2dc10:	mov	r2, r8
   2dc14:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   2dc18:	mov	r2, r0
   2dc1c:	cmp	r2, r8
   2dc20:	beq	2df28 <main@@Base+0x17e84>
   2dc24:	ldrb	r0, [r2]
   2dc28:	cmp	r0, #125	; 0x7d
   2dc2c:	bne	2d8d0 <main@@Base+0x1782c>
   2dc30:	b	2dee4 <main@@Base+0x17e40>
   2dc34:	ldr	r7, [sp, #16]
   2dc38:	mov	r2, #0
   2dc3c:	cmp	r3, #1
   2dc40:	beq	2db08 <main@@Base+0x17a64>
   2dc44:	cmp	r3, #2
   2dc48:	beq	2db00 <main@@Base+0x17a5c>
   2dc4c:	b	2dce8 <main@@Base+0x17c44>
   2dc50:	cmp	r0, #34	; 0x22
   2dc54:	bne	2dce8 <main@@Base+0x17c44>
   2dc58:	add	r2, r1, #20
   2dc5c:	sub	r0, r8, r2
   2dc60:	cmp	r0, #2
   2dc64:	blt	2dc98 <main@@Base+0x17bf4>
   2dc68:	ldrb	r0, [r2]
   2dc6c:	cmp	r0, #32
   2dc70:	bls	2dc84 <main@@Base+0x17be0>
   2dc74:	mov	r6, r2
   2dc78:	cmp	r6, r8
   2dc7c:	bne	2dcb4 <main@@Base+0x17c10>
   2dc80:	b	2dd28 <main@@Base+0x17c84>
   2dc84:	bne	2dc98 <main@@Base+0x17bf4>
   2dc88:	mov	r6, r2
   2dc8c:	ldrb	r0, [r6, #1]!
   2dc90:	cmp	r0, #32
   2dc94:	bhi	2dcac <main@@Base+0x17c08>
   2dc98:	mov	r1, r2
   2dc9c:	mov	r0, r9
   2dca0:	mov	r2, r8
   2dca4:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   2dca8:	mov	r6, r0
   2dcac:	cmp	r6, r8
   2dcb0:	beq	2dd28 <main@@Base+0x17c84>
   2dcb4:	ldrb	r0, [r6]
   2dcb8:	cmp	r0, #58	; 0x3a
   2dcbc:	bne	2dd28 <main@@Base+0x17c84>
   2dcc0:	add	r1, r6, #1
   2dcc4:	sub	r0, r8, r1
   2dcc8:	cmp	r0, #2
   2dccc:	blt	2dd50 <main@@Base+0x17cac>
   2dcd0:	ldrb	r0, [r1]
   2dcd4:	cmp	r0, #32
   2dcd8:	bls	2dd40 <main@@Base+0x17c9c>
   2dcdc:	mov	r6, r1
   2dce0:	cmp	r4, r6
   2dce4:	bne	2dd68 <main@@Base+0x17cc4>
   2dce8:	mov	r0, r9
   2dcec:	mov	r1, r4
   2dcf0:	mov	r2, r8
   2dcf4:	bl	373bc <flatcc_json_parser_unmatched_symbol@@Base>
   2dcf8:	mov	r4, r0
   2dcfc:	sub	r0, r8, r4
   2dd00:	cmp	r0, #2
   2dd04:	bge	2db94 <main@@Base+0x17af0>
   2dd08:	mov	r0, r9
   2dd0c:	mov	r1, r4
   2dd10:	mov	r2, r8
   2dd14:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   2dd18:	mov	r2, r0
   2dd1c:	cmp	r2, r8
   2dd20:	bne	2dbac <main@@Base+0x17b08>
   2dd24:	b	2dec8 <main@@Base+0x17e24>
   2dd28:	mov	r0, r9
   2dd2c:	mov	r1, r6
   2dd30:	mov	r2, r8
   2dd34:	mov	r3, #4
   2dd38:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   2dd3c:	b	2dd5c <main@@Base+0x17cb8>
   2dd40:	bne	2dd50 <main@@Base+0x17cac>
   2dd44:	ldrb	r0, [r6, #2]!
   2dd48:	cmp	r0, #32
   2dd4c:	bhi	2dd60 <main@@Base+0x17cbc>
   2dd50:	mov	r0, r9
   2dd54:	mov	r2, r8
   2dd58:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   2dd5c:	mov	r6, r0
   2dd60:	cmp	r4, r6
   2dd64:	beq	2dce8 <main@@Base+0x17c44>
   2dd68:	mov	r5, #0
   2dd6c:	cmp	r6, r8
   2dd70:	str	r5, [sp, #36]	; 0x24
   2dd74:	str	r5, [sp, #32]
   2dd78:	str	r5, [sp, #24]
   2dd7c:	str	r5, [sp, #28]
   2dd80:	beq	2dde0 <main@@Base+0x17d3c>
   2dd84:	add	r0, sp, #32
   2dd88:	mov	r1, r6
   2dd8c:	mov	r2, r8
   2dd90:	add	r3, sp, #28
   2dd94:	str	r0, [sp]
   2dd98:	mov	r0, r9
   2dd9c:	bl	38fa8 <flatcc_json_parser_integer@@Base>
   2dda0:	cmp	r0, r6
   2dda4:	beq	2ddf0 <main@@Base+0x17d4c>
   2dda8:	ldr	r2, [sp, #28]
   2ddac:	mov	r4, r0
   2ddb0:	ldr	r0, [sp, #32]
   2ddb4:	ldr	r1, [sp, #36]	; 0x24
   2ddb8:	cmp	r2, #0
   2ddbc:	beq	2de00 <main@@Base+0x17d5c>
   2ddc0:	subs	r2, r0, #-2147483647	; 0x80000001
   2ddc4:	sbcs	r1, r1, #0
   2ddc8:	bcc	2de30 <main@@Base+0x17d8c>
   2ddcc:	mov	r0, r9
   2ddd0:	mov	r1, r4
   2ddd4:	mov	r2, r8
   2ddd8:	mov	r3, #8
   2dddc:	b	2de1c <main@@Base+0x17d78>
   2dde0:	mov	r4, r8
   2dde4:	cmp	r6, r4
   2dde8:	bne	2de84 <main@@Base+0x17de0>
   2ddec:	b	2de54 <main@@Base+0x17db0>
   2ddf0:	mov	r4, r6
   2ddf4:	cmp	r6, r4
   2ddf8:	bne	2de84 <main@@Base+0x17de0>
   2ddfc:	b	2de54 <main@@Base+0x17db0>
   2de00:	subs	r2, r0, #-2147483648	; 0x80000000
   2de04:	sbcs	r1, r1, #0
   2de08:	bcc	2de44 <main@@Base+0x17da0>
   2de0c:	mov	r0, r9
   2de10:	mov	r1, r4
   2de14:	mov	r2, r8
   2de18:	mov	r3, #7
   2de1c:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   2de20:	mov	r4, r0
   2de24:	cmp	r6, r4
   2de28:	bne	2de84 <main@@Base+0x17de0>
   2de2c:	b	2de54 <main@@Base+0x17db0>
   2de30:	rsb	r5, r0, #0
   2de34:	str	r5, [sp, #24]
   2de38:	cmp	r6, r4
   2de3c:	bne	2de84 <main@@Base+0x17de0>
   2de40:	b	2de54 <main@@Base+0x17db0>
   2de44:	mov	r5, r0
   2de48:	str	r5, [sp, #24]
   2de4c:	cmp	r6, r4
   2de50:	bne	2de84 <main@@Base+0x17de0>
   2de54:	add	r0, sp, #24
   2de58:	mov	r1, r6
   2de5c:	mov	r2, r8
   2de60:	str	r0, [sp]
   2de64:	mov	r0, r9
   2de68:	ldr	r3, [sp, #8]
   2de6c:	bl	2600c <main@@Base+0xff68>
   2de70:	mov	r4, r0
   2de74:	cmp	r0, r6
   2de78:	cmpne	r4, r8
   2de7c:	beq	2dfb4 <main@@Base+0x17f10>
   2de80:	ldr	r5, [sp, #24]
   2de84:	cmp	r5, #0
   2de88:	bne	2de98 <main@@Base+0x17df4>
   2de8c:	ldrb	r0, [r9, #8]
   2de90:	tst	r0, #2
   2de94:	beq	2db88 <main@@Base+0x17ae4>
   2de98:	ldr	r0, [r9]
   2de9c:	mov	r1, #0
   2dea0:	mov	r2, #4
   2dea4:	mov	r3, #4
   2dea8:	bl	332fc <flatcc_builder_table_add@@Base>
   2deac:	cmp	r0, #0
   2deb0:	beq	2dfb4 <main@@Base+0x17f10>
   2deb4:	str	r5, [r0]
   2deb8:	sub	r0, r8, r4
   2debc:	cmp	r0, #2
   2dec0:	bge	2db94 <main@@Base+0x17af0>
   2dec4:	b	2dd08 <main@@Base+0x17c64>
   2dec8:	mov	r4, r8
   2decc:	ldr	r0, [r9, #24]
   2ded0:	cmp	r0, #0
   2ded4:	bne	2d268 <main@@Base+0x171c4>
   2ded8:	b	2df10 <main@@Base+0x17e6c>
   2dedc:	cmp	r0, #125	; 0x7d
   2dee0:	bne	2df6c <main@@Base+0x17ec8>
   2dee4:	add	r1, r2, #1
   2dee8:	sub	r0, r8, r1
   2deec:	cmp	r0, #2
   2def0:	blt	2df94 <main@@Base+0x17ef0>
   2def4:	ldrb	r0, [r1]
   2def8:	cmp	r0, #32
   2defc:	bls	2df80 <main@@Base+0x17edc>
   2df00:	mov	r4, r1
   2df04:	ldr	r0, [r9, #24]
   2df08:	cmp	r0, #0
   2df0c:	bne	2d268 <main@@Base+0x171c4>
   2df10:	ldr	r0, [r9]
   2df14:	bl	32950 <flatcc_builder_end_table@@Base>
   2df18:	cmp	r0, #0
   2df1c:	str	r0, [r7]
   2df20:	bne	2d280 <main@@Base+0x171dc>
   2df24:	b	2d268 <main@@Base+0x171c4>
   2df28:	mov	r0, r9
   2df2c:	mov	r1, r8
   2df30:	b	2df74 <main@@Base+0x17ed0>
   2df34:	mov	r0, r9
   2df38:	mov	r1, r2
   2df3c:	mov	r2, r8
   2df40:	mov	r3, #10
   2df44:	b	2d208 <main@@Base+0x17164>
   2df48:	bne	2df5c <main@@Base+0x17eb8>
   2df4c:	ldrb	r0, [r2, #2]!
   2df50:	mov	r4, r2
   2df54:	cmp	r0, #32
   2df58:	bhi	2d210 <main@@Base+0x1716c>
   2df5c:	mov	r0, r9
   2df60:	mov	r2, r8
   2df64:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   2df68:	b	2d20c <main@@Base+0x17168>
   2df6c:	mov	r0, r9
   2df70:	mov	r1, r2
   2df74:	mov	r2, r8
   2df78:	mov	r3, #10
   2df7c:	b	2d254 <main@@Base+0x171b0>
   2df80:	bne	2df94 <main@@Base+0x17ef0>
   2df84:	ldrb	r0, [r2, #2]!
   2df88:	mov	r4, r2
   2df8c:	cmp	r0, #32
   2df90:	bhi	2d25c <main@@Base+0x171b8>
   2df94:	mov	r0, r9
   2df98:	mov	r2, r8
   2df9c:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   2dfa0:	b	2d258 <main@@Base+0x171b4>
   2dfa4:	mov	r0, r9
   2dfa8:	mov	r2, r8
   2dfac:	mov	r3, #33	; 0x21
   2dfb0:	b	2d208 <main@@Base+0x17164>
   2dfb4:	ldr	r7, [sp, #16]
   2dfb8:	b	2d268 <main@@Base+0x171c4>
   2dfbc:	add	r0, r0, #1
   2dfc0:	uxtb	r1, r0
   2dfc4:	cmp	r1, #12
   2dfc8:	movhi	r0, #0
   2dfcc:	bxhi	lr
   2dfd0:	movw	r1, #49820	; 0xc29c
   2dfd4:	sxtb	r0, r0
   2dfd8:	movt	r1, #4
   2dfdc:	ldr	r0, [r1, r0, lsl #2]
   2dfe0:	bx	lr
   2dfe4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2dfe8:	add	fp, sp, #28
   2dfec:	sub	sp, sp, #36	; 0x24
   2dff0:	mov	r9, r0
   2dff4:	mov	r0, #0
   2dff8:	mov	sl, r2
   2dffc:	mov	r6, r1
   2e000:	mov	r1, #4
   2e004:	mov	r2, #4
   2e008:	str	r3, [sp, #12]
   2e00c:	str	r0, [r3]
   2e010:	ldr	r0, [r9]
   2e014:	bl	30ccc <flatcc_builder_start_struct@@Base>
   2e018:	cmp	r0, #0
   2e01c:	beq	2e0ec <main@@Base+0x18048>
   2e020:	cmp	r6, sl
   2e024:	beq	2e0a0 <main@@Base+0x17ffc>
   2e028:	ldrb	r1, [r6]
   2e02c:	cmp	r1, #123	; 0x7b
   2e030:	bne	2e0a0 <main@@Base+0x17ffc>
   2e034:	add	r1, r6, #1
   2e038:	str	r0, [sp, #8]
   2e03c:	sub	r0, sl, r1
   2e040:	cmp	r0, #2
   2e044:	blt	2e134 <main@@Base+0x18090>
   2e048:	ldrb	r0, [r1]
   2e04c:	cmp	r0, #32
   2e050:	bls	2e124 <main@@Base+0x18080>
   2e054:	mov	r6, r1
   2e058:	cmp	r6, sl
   2e05c:	mov	r2, sl
   2e060:	beq	2e150 <main@@Base+0x180ac>
   2e064:	ldrb	r0, [r6]
   2e068:	cmp	r0, #125	; 0x7d
   2e06c:	bne	2e110 <main@@Base+0x1806c>
   2e070:	add	r1, r6, #1
   2e074:	sub	r0, sl, r1
   2e078:	cmp	r0, #2
   2e07c:	blt	2e670 <main@@Base+0x185cc>
   2e080:	ldrb	r0, [r1]
   2e084:	cmp	r0, #32
   2e088:	bhi	2e628 <main@@Base+0x18584>
   2e08c:	bne	2e670 <main@@Base+0x185cc>
   2e090:	ldrb	r0, [r6, #2]!
   2e094:	cmp	r0, #32
   2e098:	bhi	2e0b8 <main@@Base+0x18014>
   2e09c:	b	2e670 <main@@Base+0x185cc>
   2e0a0:	mov	r0, r9
   2e0a4:	mov	r1, r6
   2e0a8:	mov	r2, sl
   2e0ac:	mov	r3, #21
   2e0b0:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   2e0b4:	mov	r6, r0
   2e0b8:	cmp	r6, sl
   2e0bc:	mov	r1, sl
   2e0c0:	beq	2e0f0 <main@@Base+0x1804c>
   2e0c4:	ldr	r0, [r9]
   2e0c8:	bl	30dc0 <flatcc_builder_end_struct@@Base>
   2e0cc:	ldr	r1, [sp, #12]
   2e0d0:	cmp	r0, #0
   2e0d4:	str	r0, [r1]
   2e0d8:	mov	r1, r6
   2e0dc:	beq	2e0f0 <main@@Base+0x1804c>
   2e0e0:	mov	r0, r6
   2e0e4:	sub	sp, fp, #28
   2e0e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2e0ec:	mov	r1, r6
   2e0f0:	mov	r0, r9
   2e0f4:	mov	r2, sl
   2e0f8:	mov	r3, #33	; 0x21
   2e0fc:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   2e100:	mov	r6, r0
   2e104:	mov	r0, r6
   2e108:	sub	sp, fp, #28
   2e10c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2e110:	mov	r2, r6
   2e114:	cmp	r2, sl
   2e118:	mov	r1, sl
   2e11c:	bne	2e15c <main@@Base+0x180b8>
   2e120:	b	2e1a4 <main@@Base+0x18100>
   2e124:	bne	2e134 <main@@Base+0x18090>
   2e128:	ldrb	r0, [r6, #2]!
   2e12c:	cmp	r0, #32
   2e130:	bhi	2e144 <main@@Base+0x180a0>
   2e134:	mov	r0, r9
   2e138:	mov	r2, sl
   2e13c:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   2e140:	mov	r6, r0
   2e144:	cmp	r6, sl
   2e148:	mov	r2, sl
   2e14c:	bne	2e064 <main@@Base+0x17fc0>
   2e150:	cmp	r2, sl
   2e154:	mov	r1, sl
   2e158:	beq	2e1a4 <main@@Base+0x18100>
   2e15c:	ldrb	r0, [r2]
   2e160:	cmp	r0, #46	; 0x2e
   2e164:	beq	2e17c <main@@Base+0x180d8>
   2e168:	cmp	r0, #34	; 0x22
   2e16c:	bne	2e198 <main@@Base+0x180f4>
   2e170:	mov	r0, #0
   2e174:	add	r1, r2, #1
   2e178:	b	2e1a0 <main@@Base+0x180fc>
   2e17c:	mov	r1, r2
   2e180:	mov	r0, r9
   2e184:	mov	r2, sl
   2e188:	mov	r3, #5
   2e18c:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   2e190:	mov	r1, r0
   2e194:	b	2e1a4 <main@@Base+0x18100>
   2e198:	mov	r0, #1
   2e19c:	mov	r1, r2
   2e1a0:	str	r0, [r9, #12]
   2e1a4:	sub	r0, sl, r1
   2e1a8:	mov	r2, #8
   2e1ac:	cmp	r0, #8
   2e1b0:	movcs	r0, r2
   2e1b4:	sub	r6, r0, #1
   2e1b8:	cmp	r6, #7
   2e1bc:	bhi	2e300 <main@@Base+0x1825c>
   2e1c0:	add	r0, pc, #32
   2e1c4:	mov	r8, #0
   2e1c8:	mov	ip, #0
   2e1cc:	mov	lr, #0
   2e1d0:	mov	r7, #0
   2e1d4:	mov	r3, #0
   2e1d8:	mov	r5, #0
   2e1dc:	mov	r2, #0
   2e1e0:	mov	r4, #0
   2e1e4:	ldr	pc, [r0, r6, lsl #2]
   2e1e8:	andeq	lr, r2, ip, asr #4
   2e1ec:	andeq	lr, r2, r4, asr #4
   2e1f0:	andeq	lr, r2, ip, lsr r2
   2e1f4:	andeq	lr, r2, r4, lsr r2
   2e1f8:	andeq	lr, r2, r8, lsr #4
   2e1fc:	andeq	lr, r2, ip, lsl r2
   2e200:	andeq	lr, r2, ip, lsl #4
   2e204:	andeq	lr, r2, r8, lsl #4
   2e208:	ldrb	ip, [r1, #7]
   2e20c:	ldrb	r0, [r1, #6]
   2e210:	mov	lr, r8
   2e214:	orr	r0, ip, r0, lsl #8
   2e218:	mov	r8, r0
   2e21c:	ldrb	r0, [r1, #5]
   2e220:	mov	r7, lr
   2e224:	orr	r8, r8, r0, lsl #16
   2e228:	ldrb	r0, [r1, #4]
   2e22c:	mov	r3, r7
   2e230:	orr	r8, r8, r0, lsl #24
   2e234:	ldrb	r0, [r1, #3]
   2e238:	orr	r5, r0, r3
   2e23c:	ldrb	r0, [r1, #2]
   2e240:	orr	r2, r5, r0, lsl #8
   2e244:	ldrb	r0, [r1, #1]
   2e248:	orr	r4, r2, r0, lsl #16
   2e24c:	ldrb	r2, [r1]
   2e250:	movw	r0, #29285	; 0x7265
   2e254:	movw	r3, #28523	; 0x6f6b
   2e258:	movt	r0, #29535	; 0x735f
   2e25c:	movt	r3, #25199	; 0x626f
   2e260:	eor	r0, r8, r0
   2e264:	orr	r2, r4, r2, lsl #24
   2e268:	eor	r2, r2, r3
   2e26c:	orrs	r0, r0, r2
   2e270:	bne	2e300 <main@@Base+0x1825c>
   2e274:	add	r8, r1, #8
   2e278:	mov	r3, #8
   2e27c:	sub	r0, sl, r8
   2e280:	cmp	r0, #8
   2e284:	movcc	r3, r0
   2e288:	sub	r2, r3, #2
   2e28c:	cmp	r2, #7
   2e290:	bcs	2e308 <main@@Base+0x18264>
   2e294:	ldrb	r2, [r1, #9]
   2e298:	lsl	r3, r2, #16
   2e29c:	mov	r2, #0
   2e2a0:	ldrb	r7, [r8]
   2e2a4:	orr	r3, r3, r7, lsl #24
   2e2a8:	movw	r7, #0
   2e2ac:	movt	r7, #24932	; 0x6164
   2e2b0:	eor	r3, r3, r7
   2e2b4:	orrs	r2, r2, r3
   2e2b8:	bne	2e3b4 <main@@Base+0x18310>
   2e2bc:	cmp	r0, #3
   2e2c0:	blt	2e3b4 <main@@Base+0x18310>
   2e2c4:	mov	r2, r1
   2e2c8:	ldr	r3, [r9, #12]
   2e2cc:	ldrb	r0, [r2, #10]!
   2e2d0:	cmp	r3, #0
   2e2d4:	beq	2e31c <main@@Base+0x18278>
   2e2d8:	cmp	r0, #33	; 0x21
   2e2dc:	bcc	2e2e8 <main@@Base+0x18244>
   2e2e0:	cmp	r0, #58	; 0x3a
   2e2e4:	bne	2e3b4 <main@@Base+0x18310>
   2e2e8:	mov	r0, #0
   2e2ec:	str	r0, [r9, #12]
   2e2f0:	sub	r0, sl, r2
   2e2f4:	cmp	r0, #2
   2e2f8:	bge	2e334 <main@@Base+0x18290>
   2e2fc:	b	2e364 <main@@Base+0x182c0>
   2e300:	mov	r0, r9
   2e304:	b	2e3bc <main@@Base+0x18318>
   2e308:	cmp	r3, #1
   2e30c:	mov	r2, #0
   2e310:	mov	r3, #0
   2e314:	beq	2e2a0 <main@@Base+0x181fc>
   2e318:	b	2e3b4 <main@@Base+0x18310>
   2e31c:	cmp	r0, #34	; 0x22
   2e320:	bne	2e3b4 <main@@Base+0x18310>
   2e324:	add	r2, r1, #11
   2e328:	sub	r0, sl, r2
   2e32c:	cmp	r0, #2
   2e330:	blt	2e364 <main@@Base+0x182c0>
   2e334:	ldrb	r0, [r2]
   2e338:	cmp	r0, #32
   2e33c:	bls	2e350 <main@@Base+0x182ac>
   2e340:	mov	r7, r2
   2e344:	cmp	r7, sl
   2e348:	bne	2e380 <main@@Base+0x182dc>
   2e34c:	b	2e48c <main@@Base+0x183e8>
   2e350:	bne	2e364 <main@@Base+0x182c0>
   2e354:	mov	r7, r2
   2e358:	ldrb	r0, [r7, #1]!
   2e35c:	cmp	r0, #32
   2e360:	bhi	2e378 <main@@Base+0x182d4>
   2e364:	mov	r1, r2
   2e368:	mov	r0, r9
   2e36c:	mov	r2, sl
   2e370:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   2e374:	mov	r7, r0
   2e378:	cmp	r7, sl
   2e37c:	beq	2e48c <main@@Base+0x183e8>
   2e380:	ldrb	r0, [r7]
   2e384:	cmp	r0, #58	; 0x3a
   2e388:	bne	2e48c <main@@Base+0x183e8>
   2e38c:	add	r1, r7, #1
   2e390:	sub	r0, sl, r1
   2e394:	cmp	r0, #2
   2e398:	blt	2e4b4 <main@@Base+0x18410>
   2e39c:	ldrb	r0, [r1]
   2e3a0:	cmp	r0, #32
   2e3a4:	bls	2e4a4 <main@@Base+0x18400>
   2e3a8:	mov	r7, r1
   2e3ac:	cmp	r8, r7
   2e3b0:	bne	2e4cc <main@@Base+0x18428>
   2e3b4:	mov	r0, r9
   2e3b8:	mov	r1, r8
   2e3bc:	mov	r2, sl
   2e3c0:	bl	373bc <flatcc_json_parser_unmatched_symbol@@Base>
   2e3c4:	mov	r1, r0
   2e3c8:	sub	r0, sl, r1
   2e3cc:	cmp	r0, #2
   2e3d0:	blt	2e444 <main@@Base+0x183a0>
   2e3d4:	ldrb	r0, [r1]
   2e3d8:	cmp	r0, #32
   2e3dc:	bls	2e430 <main@@Base+0x1838c>
   2e3e0:	mov	r2, r1
   2e3e4:	cmp	r2, sl
   2e3e8:	beq	2e5fc <main@@Base+0x18558>
   2e3ec:	ldrb	r0, [r2]
   2e3f0:	cmp	r0, #44	; 0x2c
   2e3f4:	bne	2e604 <main@@Base+0x18560>
   2e3f8:	add	r1, r2, #1
   2e3fc:	sub	r0, sl, r1
   2e400:	cmp	r0, #2
   2e404:	blt	2e470 <main@@Base+0x183cc>
   2e408:	ldrb	r0, [r1]
   2e40c:	cmp	r0, #32
   2e410:	bls	2e460 <main@@Base+0x183bc>
   2e414:	mov	r2, r1
   2e418:	cmp	r2, sl
   2e41c:	beq	2e63c <main@@Base+0x18598>
   2e420:	ldrb	r0, [r2]
   2e424:	cmp	r0, #125	; 0x7d
   2e428:	bne	2e150 <main@@Base+0x180ac>
   2e42c:	b	2e60c <main@@Base+0x18568>
   2e430:	bne	2e444 <main@@Base+0x183a0>
   2e434:	mov	r2, r1
   2e438:	ldrb	r0, [r2, #1]!
   2e43c:	cmp	r0, #32
   2e440:	bhi	2e454 <main@@Base+0x183b0>
   2e444:	mov	r0, r9
   2e448:	mov	r2, sl
   2e44c:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   2e450:	mov	r2, r0
   2e454:	cmp	r2, sl
   2e458:	bne	2e3ec <main@@Base+0x18348>
   2e45c:	b	2e5fc <main@@Base+0x18558>
   2e460:	bne	2e470 <main@@Base+0x183cc>
   2e464:	ldrb	r0, [r2, #2]!
   2e468:	cmp	r0, #32
   2e46c:	bhi	2e480 <main@@Base+0x183dc>
   2e470:	mov	r0, r9
   2e474:	mov	r2, sl
   2e478:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   2e47c:	mov	r2, r0
   2e480:	cmp	r2, sl
   2e484:	bne	2e420 <main@@Base+0x1837c>
   2e488:	b	2e63c <main@@Base+0x18598>
   2e48c:	mov	r0, r9
   2e490:	mov	r1, r7
   2e494:	mov	r2, sl
   2e498:	mov	r3, #4
   2e49c:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   2e4a0:	b	2e4c0 <main@@Base+0x1841c>
   2e4a4:	bne	2e4b4 <main@@Base+0x18410>
   2e4a8:	ldrb	r0, [r7, #2]!
   2e4ac:	cmp	r0, #32
   2e4b0:	bhi	2e4c4 <main@@Base+0x18420>
   2e4b4:	mov	r0, r9
   2e4b8:	mov	r2, sl
   2e4bc:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   2e4c0:	mov	r7, r0
   2e4c4:	cmp	r8, r7
   2e4c8:	beq	2e3b4 <main@@Base+0x18310>
   2e4cc:	mov	r6, #0
   2e4d0:	cmp	r7, sl
   2e4d4:	str	r6, [sp, #28]
   2e4d8:	str	r6, [sp, #24]
   2e4dc:	str	r6, [sp, #16]
   2e4e0:	str	r6, [sp, #20]
   2e4e4:	beq	2e540 <main@@Base+0x1849c>
   2e4e8:	add	r0, sp, #24
   2e4ec:	mov	r1, r7
   2e4f0:	mov	r2, sl
   2e4f4:	add	r3, sp, #20
   2e4f8:	str	r0, [sp]
   2e4fc:	mov	r0, r9
   2e500:	bl	38fa8 <flatcc_json_parser_integer@@Base>
   2e504:	cmp	r0, r7
   2e508:	beq	2e550 <main@@Base+0x184ac>
   2e50c:	ldr	r3, [sp, #20]
   2e510:	mov	r1, r0
   2e514:	ldr	r0, [sp, #24]
   2e518:	ldr	r2, [sp, #28]
   2e51c:	cmp	r3, #0
   2e520:	beq	2e560 <main@@Base+0x184bc>
   2e524:	subs	r3, r0, #-2147483647	; 0x80000001
   2e528:	sbcs	r2, r2, #0
   2e52c:	bcc	2e58c <main@@Base+0x184e8>
   2e530:	mov	r0, r9
   2e534:	mov	r2, sl
   2e538:	mov	r3, #8
   2e53c:	b	2e578 <main@@Base+0x184d4>
   2e540:	mov	r1, sl
   2e544:	cmp	r7, r1
   2e548:	bne	2e5e4 <main@@Base+0x18540>
   2e54c:	b	2e5b0 <main@@Base+0x1850c>
   2e550:	mov	r1, r7
   2e554:	cmp	r7, r1
   2e558:	bne	2e5e4 <main@@Base+0x18540>
   2e55c:	b	2e5b0 <main@@Base+0x1850c>
   2e560:	subs	r3, r0, #-2147483648	; 0x80000000
   2e564:	sbcs	r2, r2, #0
   2e568:	bcc	2e5a0 <main@@Base+0x184fc>
   2e56c:	mov	r0, r9
   2e570:	mov	r2, sl
   2e574:	mov	r3, #7
   2e578:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   2e57c:	mov	r1, r0
   2e580:	cmp	r7, r1
   2e584:	bne	2e5e4 <main@@Base+0x18540>
   2e588:	b	2e5b0 <main@@Base+0x1850c>
   2e58c:	rsb	r6, r0, #0
   2e590:	str	r6, [sp, #16]
   2e594:	cmp	r7, r1
   2e598:	bne	2e5e4 <main@@Base+0x18540>
   2e59c:	b	2e5b0 <main@@Base+0x1850c>
   2e5a0:	mov	r6, r0
   2e5a4:	str	r6, [sp, #16]
   2e5a8:	cmp	r7, r1
   2e5ac:	bne	2e5e4 <main@@Base+0x18540>
   2e5b0:	movw	r3, #136	; 0x88
   2e5b4:	add	r0, sp, #16
   2e5b8:	mov	r1, r7
   2e5bc:	mov	r2, sl
   2e5c0:	movt	r3, #6
   2e5c4:	str	r0, [sp]
   2e5c8:	mov	r0, r9
   2e5cc:	bl	2600c <main@@Base+0xff68>
   2e5d0:	mov	r1, r0
   2e5d4:	cmp	r0, r7
   2e5d8:	cmpne	r1, sl
   2e5dc:	beq	2e680 <main@@Base+0x185dc>
   2e5e0:	ldr	r6, [sp, #16]
   2e5e4:	ldr	r0, [sp, #8]
   2e5e8:	str	r6, [r0]
   2e5ec:	sub	r0, sl, r1
   2e5f0:	cmp	r0, #2
   2e5f4:	bge	2e3d4 <main@@Base+0x18330>
   2e5f8:	b	2e444 <main@@Base+0x183a0>
   2e5fc:	mov	r1, sl
   2e600:	b	2e0f0 <main@@Base+0x1804c>
   2e604:	cmp	r0, #125	; 0x7d
   2e608:	bne	2e648 <main@@Base+0x185a4>
   2e60c:	add	r1, r2, #1
   2e610:	sub	r0, sl, r1
   2e614:	cmp	r0, #2
   2e618:	blt	2e670 <main@@Base+0x185cc>
   2e61c:	ldrb	r0, [r1]
   2e620:	cmp	r0, #32
   2e624:	bls	2e65c <main@@Base+0x185b8>
   2e628:	mov	r6, r1
   2e62c:	cmp	r6, sl
   2e630:	mov	r1, sl
   2e634:	bne	2e0c4 <main@@Base+0x18020>
   2e638:	b	2e0f0 <main@@Base+0x1804c>
   2e63c:	mov	r0, r9
   2e640:	mov	r1, sl
   2e644:	b	2e650 <main@@Base+0x185ac>
   2e648:	mov	r0, r9
   2e64c:	mov	r1, r2
   2e650:	mov	r2, sl
   2e654:	mov	r3, #10
   2e658:	b	2e0b0 <main@@Base+0x1800c>
   2e65c:	bne	2e670 <main@@Base+0x185cc>
   2e660:	ldrb	r0, [r2, #2]!
   2e664:	mov	r6, r2
   2e668:	cmp	r0, #32
   2e66c:	bhi	2e0b8 <main@@Base+0x18014>
   2e670:	mov	r0, r9
   2e674:	mov	r2, sl
   2e678:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   2e67c:	b	2e0b4 <main@@Base+0x18010>
   2e680:	mov	r0, r9
   2e684:	mov	r2, sl
   2e688:	mov	r3, #33	; 0x21
   2e68c:	b	2e0b0 <main@@Base+0x1800c>
   2e690:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   2e694:	add	fp, sp, #28
   2e698:	sub	sp, sp, #44	; 0x2c
   2e69c:	mov	r6, r2
   2e6a0:	ldr	r2, [fp, #8]
   2e6a4:	mov	r5, r0
   2e6a8:	mov	r0, #0
   2e6ac:	mov	r8, r3
   2e6b0:	cmp	r1, r6
   2e6b4:	strh	r0, [r2]
   2e6b8:	beq	2e6dc <main@@Base+0x18638>
   2e6bc:	ldrb	r0, [r1]
   2e6c0:	cmp	r0, #46	; 0x2e
   2e6c4:	beq	2e704 <main@@Base+0x18660>
   2e6c8:	cmp	r0, #34	; 0x22
   2e6cc:	bne	2e8ac <main@@Base+0x18808>
   2e6d0:	mov	r0, #0
   2e6d4:	add	r1, r1, #1
   2e6d8:	str	r0, [r5, #12]
   2e6dc:	ldr	r0, [r5, #12]
   2e6e0:	cmp	r0, #0
   2e6e4:	beq	2e724 <main@@Base+0x18680>
   2e6e8:	mov	r7, r1
   2e6ec:	cmp	r7, r6
   2e6f0:	bne	2e768 <main@@Base+0x186c4>
   2e6f4:	mov	r4, r6
   2e6f8:	mov	r0, r4
   2e6fc:	sub	sp, fp, #28
   2e700:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2e704:	mov	r0, r5
   2e708:	mov	r2, r6
   2e70c:	mov	r3, #5
   2e710:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   2e714:	mov	r1, r0
   2e718:	ldr	r0, [r5, #12]
   2e71c:	cmp	r0, #0
   2e720:	bne	2e6e8 <main@@Base+0x18644>
   2e724:	sub	r0, r6, r1
   2e728:	cmp	r0, #2
   2e72c:	blt	2e750 <main@@Base+0x186ac>
   2e730:	ldrb	r0, [r1]
   2e734:	cmp	r0, #32
   2e738:	bhi	2e6e8 <main@@Base+0x18644>
   2e73c:	bne	2e750 <main@@Base+0x186ac>
   2e740:	mov	r7, r1
   2e744:	ldrb	r0, [r7, #1]!
   2e748:	cmp	r0, #32
   2e74c:	bhi	2e760 <main@@Base+0x186bc>
   2e750:	mov	r0, r5
   2e754:	mov	r2, r6
   2e758:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   2e75c:	mov	r7, r0
   2e760:	cmp	r7, r6
   2e764:	beq	2e6f4 <main@@Base+0x18650>
   2e768:	add	r0, r8, #4
   2e76c:	mov	r1, #0
   2e770:	add	sl, sp, #32
   2e774:	add	r9, sp, #28
   2e778:	str	r8, [sp, #16]
   2e77c:	str	r1, [sp, #20]
   2e780:	str	r0, [sp, #12]
   2e784:	ldr	r4, [r8]
   2e788:	mov	r8, r0
   2e78c:	add	r0, sp, #24
   2e790:	mov	r1, r7
   2e794:	mov	r2, r6
   2e798:	mov	r3, r9
   2e79c:	str	sl, [sp]
   2e7a0:	str	r0, [sp, #4]
   2e7a4:	mov	r0, r5
   2e7a8:	blx	r4
   2e7ac:	cmp	r0, r6
   2e7b0:	beq	2e878 <main@@Base+0x187d4>
   2e7b4:	mov	r4, r0
   2e7b8:	cmp	r0, r7
   2e7bc:	bne	2e7d0 <main@@Base+0x1872c>
   2e7c0:	ldr	r4, [r8], #4
   2e7c4:	cmp	r4, #0
   2e7c8:	bne	2e78c <main@@Base+0x186e8>
   2e7cc:	b	2e888 <main@@Base+0x187e4>
   2e7d0:	ldr	r0, [sp, #28]
   2e7d4:	cmp	r0, #0
   2e7d8:	beq	2e800 <main@@Base+0x1875c>
   2e7dc:	mov	r0, r5
   2e7e0:	mov	r1, r4
   2e7e4:	mov	r2, r6
   2e7e8:	mov	r3, #8
   2e7ec:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   2e7f0:	ldr	r8, [sp, #16]
   2e7f4:	cmp	r0, r6
   2e7f8:	bne	2e848 <main@@Base+0x187a4>
   2e7fc:	b	2e878 <main@@Base+0x187d4>
   2e800:	ldr	r0, [sp, #32]
   2e804:	ldr	r1, [sp, #36]	; 0x24
   2e808:	ldr	r8, [sp, #16]
   2e80c:	subs	r2, r0, #65536	; 0x10000
   2e810:	sbcs	r1, r1, #0
   2e814:	bcc	2e838 <main@@Base+0x18794>
   2e818:	mov	r0, r5
   2e81c:	mov	r1, r4
   2e820:	mov	r2, r6
   2e824:	mov	r3, #7
   2e828:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   2e82c:	cmp	r0, r6
   2e830:	bne	2e848 <main@@Base+0x187a4>
   2e834:	b	2e878 <main@@Base+0x187d4>
   2e838:	str	r0, [sp, #20]
   2e83c:	mov	r0, r4
   2e840:	cmp	r0, r6
   2e844:	beq	2e878 <main@@Base+0x187d4>
   2e848:	ldr	r0, [fp, #8]
   2e84c:	ldr	r2, [sp, #20]
   2e850:	mov	r7, r4
   2e854:	mov	r1, r0
   2e858:	ldrh	r0, [r0]
   2e85c:	add	r0, r0, r2
   2e860:	strh	r0, [r1]
   2e864:	ldr	r0, [sp, #24]
   2e868:	cmp	r0, #0
   2e86c:	ldr	r0, [sp, #12]
   2e870:	bne	2e784 <main@@Base+0x186e0>
   2e874:	b	2e6f8 <main@@Base+0x18654>
   2e878:	mov	r4, r6
   2e87c:	mov	r0, r4
   2e880:	sub	sp, fp, #28
   2e884:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2e888:	mov	r0, r5
   2e88c:	mov	r1, r7
   2e890:	mov	r2, r6
   2e894:	mov	r3, #23
   2e898:	bl	36a9c <flatcc_json_parser_set_error@@Base>
   2e89c:	mov	r4, r0
   2e8a0:	mov	r0, r4
   2e8a4:	sub	sp, fp, #28
   2e8a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   2e8ac:	mov	r0, #1
   2e8b0:	str	r0, [r5, #12]
   2e8b4:	ldr	r0, [r5, #12]
   2e8b8:	cmp	r0, #0
   2e8bc:	bne	2e6e8 <main@@Base+0x18644>
   2e8c0:	b	2e724 <main@@Base+0x18680>
   2e8c4:	push	{r4, r5, r6, sl, fp, lr}
   2e8c8:	add	fp, sp, #16
   2e8cc:	sub	sp, sp, #16
   2e8d0:	mov	r5, r0
   2e8d4:	movw	r0, #48839	; 0xbec7
   2e8d8:	mov	r4, r1
   2e8dc:	mov	r6, #1
   2e8e0:	mov	r1, #0
   2e8e4:	mov	r3, #0
   2e8e8:	movt	r0, #4
   2e8ec:	mov	r2, r4
   2e8f0:	stm	sp, {r0, r6}
   2e8f4:	mov	r0, r5
   2e8f8:	bl	3f1c4 <flatcc_json_printer_float_struct_field@@Base>
   2e8fc:	movw	r0, #58775	; 0xe597
   2e900:	mov	r1, #1
   2e904:	mov	r2, r4
   2e908:	mov	r3, #4
   2e90c:	movt	r0, #4
   2e910:	stm	sp, {r0, r6}
   2e914:	mov	r0, r5
   2e918:	bl	3f1c4 <flatcc_json_printer_float_struct_field@@Base>
   2e91c:	movw	r0, #49280	; 0xc080
   2e920:	mov	r1, #2
   2e924:	mov	r2, r4
   2e928:	mov	r3, #8
   2e92c:	movt	r0, #4
   2e930:	stm	sp, {r0, r6}
   2e934:	mov	r0, r5
   2e938:	bl	3f1c4 <flatcc_json_printer_float_struct_field@@Base>
   2e93c:	movw	r0, #49282	; 0xc082
   2e940:	mov	r6, #5
   2e944:	mov	r1, #3
   2e948:	mov	r2, r4
   2e94c:	mov	r3, #16
   2e950:	movt	r0, #4
   2e954:	stm	sp, {r0, r6}
   2e958:	mov	r0, r5
   2e95c:	bl	3f22c <flatcc_json_printer_double_struct_field@@Base>
   2e960:	movw	r0, #59840	; 0xe9c0
   2e964:	movw	r1, #49288	; 0xc088
   2e968:	mov	r2, r4
   2e96c:	mov	r3, #24
   2e970:	movt	r1, #4
   2e974:	movt	r0, #2
   2e978:	stm	sp, {r1, r6}
   2e97c:	str	r0, [sp, #8]
   2e980:	mov	r0, r5
   2e984:	mov	r1, #4
   2e988:	bl	3f548 <flatcc_json_printer_int8_enum_struct_field@@Base>
   2e98c:	movw	r0, #60224	; 0xeb40
   2e990:	movw	r1, #49294	; 0xc08e
   2e994:	mov	r2, r4
   2e998:	mov	r3, #26
   2e99c:	movt	r1, #4
   2e9a0:	movt	r0, #2
   2e9a4:	stm	sp, {r1, r6}
   2e9a8:	str	r0, [sp, #8]
   2e9ac:	mov	r0, r5
   2e9b0:	mov	r1, #5
   2e9b4:	bl	46d08 <flatcc_json_printer_embedded_struct_field@@Base>
   2e9b8:	sub	sp, fp, #16
   2e9bc:	pop	{r4, r5, r6, sl, fp, pc}
   2e9c0:	push	{r4, r5, r6, r7, fp, lr}
   2e9c4:	add	fp, sp, #16
   2e9c8:	mov	r4, r0
   2e9cc:	mvn	r0, #0
   2e9d0:	uxtb	r7, r1
   2e9d4:	uxtab	r0, r0, r1
   2e9d8:	ands	r5, r0, r7
   2e9dc:	movwne	r5, #1
   2e9e0:	cmp	r1, #0
   2e9e4:	beq	2ea28 <main@@Base+0x18984>
   2e9e8:	ands	r0, r1, #244	; 0xf4
   2e9ec:	bne	2ea28 <main@@Base+0x18984>
   2e9f0:	mov	r0, r4
   2e9f4:	mov	r1, r5
   2e9f8:	bl	3d1c4 <flatcc_json_printer_delimit_enum_flags@@Base>
   2e9fc:	mov	r6, #0
   2ea00:	tst	r7, #1
   2ea04:	bne	2ea34 <main@@Base+0x18990>
   2ea08:	tst	r7, #2
   2ea0c:	bne	2ea58 <main@@Base+0x189b4>
   2ea10:	tst	r7, #8
   2ea14:	bne	2ea7c <main@@Base+0x189d8>
   2ea18:	mov	r0, r4
   2ea1c:	mov	r1, r5
   2ea20:	pop	{r4, r5, r6, r7, fp, lr}
   2ea24:	b	3d1c4 <flatcc_json_printer_delimit_enum_flags@@Base>
   2ea28:	mov	r0, r4
   2ea2c:	pop	{r4, r5, r6, r7, fp, lr}
   2ea30:	b	3cec8 <flatcc_json_printer_int8@@Base>
   2ea34:	movw	r2, #49300	; 0xc094
   2ea38:	mov	r0, r4
   2ea3c:	mov	r1, #0
   2ea40:	mov	r3, #3
   2ea44:	movt	r2, #4
   2ea48:	bl	3d1f8 <flatcc_json_printer_enum_flag@@Base>
   2ea4c:	mov	r6, #1
   2ea50:	tst	r7, #2
   2ea54:	beq	2ea10 <main@@Base+0x1896c>
   2ea58:	movw	r2, #49304	; 0xc098
   2ea5c:	mov	r0, r4
   2ea60:	mov	r1, r6
   2ea64:	mov	r3, #5
   2ea68:	movt	r2, #4
   2ea6c:	bl	3d1f8 <flatcc_json_printer_enum_flag@@Base>
   2ea70:	add	r6, r6, #1
   2ea74:	tst	r7, #8
   2ea78:	beq	2ea18 <main@@Base+0x18974>
   2ea7c:	movw	r2, #49310	; 0xc09e
   2ea80:	mov	r0, r4
   2ea84:	mov	r1, r6
   2ea88:	mov	r3, #4
   2ea8c:	movt	r2, #4
   2ea90:	bl	3d1f8 <flatcc_json_printer_enum_flag@@Base>
   2ea94:	mov	r0, r4
   2ea98:	mov	r1, r5
   2ea9c:	pop	{r4, r5, r6, r7, fp, lr}
   2eaa0:	b	3d1c4 <flatcc_json_printer_delimit_enum_flags@@Base>
   2eaa4:	sub	r1, r1, #1
   2eaa8:	cmp	r1, #3
   2eaac:	bhi	2ead8 <main@@Base+0x18a34>
   2eab0:	add	r2, pc, #0
   2eab4:	ldr	pc, [r2, r1, lsl #2]
   2eab8:	andeq	lr, r2, r8, asr #21
   2eabc:	andeq	lr, r2, r8, ror #21
   2eac0:	strdeq	lr, [r2], -r8
   2eac4:	andeq	lr, r2, r8, lsl #22
   2eac8:	movw	r1, #49315	; 0xc0a3
   2eacc:	mov	r2, #7
   2ead0:	movt	r1, #4
   2ead4:	b	3d0d8 <flatcc_json_printer_enum@@Base>
   2ead8:	movw	r1, #55776	; 0xd9e0
   2eadc:	mov	r2, #4
   2eae0:	movt	r1, #4
   2eae4:	b	3d0d8 <flatcc_json_printer_enum@@Base>
   2eae8:	movw	r1, #49323	; 0xc0ab
   2eaec:	mov	r2, #23
   2eaf0:	movt	r1, #4
   2eaf4:	b	3d0d8 <flatcc_json_printer_enum@@Base>
   2eaf8:	movw	r1, #49347	; 0xc0c3
   2eafc:	mov	r2, #8
   2eb00:	movt	r1, #4
   2eb04:	b	3d0d8 <flatcc_json_printer_enum@@Base>
   2eb08:	movw	r1, #49356	; 0xc0cc
   2eb0c:	mov	r2, #3
   2eb10:	movt	r1, #4
   2eb14:	b	3d0d8 <flatcc_json_printer_enum@@Base>
   2eb18:	ldrb	r2, [r1, #8]
   2eb1c:	sub	r2, r2, #1
   2eb20:	uxtb	r3, r2
   2eb24:	cmp	r3, #3
   2eb28:	bxhi	lr
   2eb2c:	movw	r3, #49872	; 0xc2d0
   2eb30:	sxtb	r2, r2
   2eb34:	movt	r3, #4
   2eb38:	ldr	r2, [r3, r2, lsl #2]
   2eb3c:	b	46a54 <flatcc_json_printer_union_table@@Base>
   2eb40:	push	{r4, r5, r6, sl, fp, lr}
   2eb44:	add	fp, sp, #16
   2eb48:	sub	sp, sp, #8
   2eb4c:	mov	r5, r0
   2eb50:	movw	r0, #49066	; 0xbfaa
   2eb54:	mov	r4, r1
   2eb58:	mov	r6, #1
   2eb5c:	mov	r1, #0
   2eb60:	mov	r3, #0
   2eb64:	movt	r0, #4
   2eb68:	mov	r2, r4
   2eb6c:	stm	sp, {r0, r6}
   2eb70:	mov	r0, r5
   2eb74:	bl	3efb4 <flatcc_json_printer_int16_struct_field@@Base>
   2eb78:	movw	r0, #49481	; 0xc149
   2eb7c:	mov	r1, #1
   2eb80:	mov	r2, r4
   2eb84:	mov	r3, #2
   2eb88:	movt	r0, #4
   2eb8c:	stm	sp, {r0, r6}
   2eb90:	mov	r0, r5
   2eb94:	bl	3ee90 <flatcc_json_printer_int8_struct_field@@Base>
   2eb98:	sub	sp, fp, #16
   2eb9c:	pop	{r4, r5, r6, sl, fp, pc}
   2eba0:	push	{r4, r5, r6, sl, fp, lr}
   2eba4:	add	fp, sp, #16
   2eba8:	sub	sp, sp, #16
   2ebac:	movw	r3, #49728	; 0xc240
   2ebb0:	mov	r5, r0
   2ebb4:	mov	r0, #2
   2ebb8:	mov	r2, #0
   2ebbc:	mov	r4, r1
   2ebc0:	mov	r6, #0
   2ebc4:	movt	r3, #4
   2ebc8:	str	r0, [sp]
   2ebcc:	mov	r0, r5
   2ebd0:	bl	3d2c4 <flatcc_json_printer_string_field@@Base>
   2ebd4:	movw	r3, #49731	; 0xc243
   2ebd8:	mov	r0, #3
   2ebdc:	mov	r1, r4
   2ebe0:	mov	r2, #1
   2ebe4:	str	r6, [sp, #8]
   2ebe8:	str	r6, [sp, #12]
   2ebec:	movt	r3, #4
   2ebf0:	str	r0, [sp]
   2ebf4:	mov	r0, r5
   2ebf8:	bl	3de54 <flatcc_json_printer_int64_field@@Base>
   2ebfc:	movw	r3, #52028	; 0xcb3c
   2ec00:	mov	r0, #5
   2ec04:	mov	r1, r4
   2ec08:	mov	r2, #2
   2ec0c:	movt	r3, #4
   2ec10:	stm	sp, {r0, r6}
   2ec14:	mov	r0, r5
   2ec18:	bl	3d898 <flatcc_json_printer_uint16_field@@Base>
   2ec1c:	sub	sp, fp, #16
   2ec20:	pop	{r4, r5, r6, sl, fp, pc}
   2ec24:	push	{r4, r5, fp, lr}
   2ec28:	add	fp, sp, #8
   2ec2c:	sub	sp, sp, #8
   2ec30:	mov	r4, r1
   2ec34:	movw	r1, #49728	; 0xc240
   2ec38:	mov	r5, r0
   2ec3c:	mov	r0, #2
   2ec40:	mov	r3, #0
   2ec44:	movt	r1, #4
   2ec48:	str	r0, [sp, #4]
   2ec4c:	mov	r0, r5
   2ec50:	mov	r2, r4
   2ec54:	str	r1, [sp]
   2ec58:	mov	r1, #0
   2ec5c:	bl	3edd0 <flatcc_json_printer_uint32_struct_field@@Base>
   2ec60:	movw	r1, #49735	; 0xc247
   2ec64:	mov	r0, #8
   2ec68:	mov	r2, r4
   2ec6c:	mov	r3, #4
   2ec70:	movt	r1, #4
   2ec74:	str	r0, [sp, #4]
   2ec78:	mov	r0, r5
   2ec7c:	str	r1, [sp]
   2ec80:	mov	r1, #1
   2ec84:	bl	3edd0 <flatcc_json_printer_uint32_struct_field@@Base>
   2ec88:	sub	sp, fp, #8
   2ec8c:	pop	{r4, r5, fp, pc}
   2ec90:	bx	lr
   2ec94:	push	{r4, r5, r6, sl, fp, lr}
   2ec98:	add	fp, sp, #16
   2ec9c:	sub	sp, sp, #8
   2eca0:	movw	r3, #49747	; 0xc253
   2eca4:	mov	r5, r0
   2eca8:	mov	r0, #4
   2ecac:	mov	r6, #0
   2ecb0:	mov	r2, #0
   2ecb4:	mov	r4, r1
   2ecb8:	movt	r3, #4
   2ecbc:	stm	sp, {r0, r6}
   2ecc0:	mov	r0, r5
   2ecc4:	bl	3d550 <flatcc_json_printer_uint8_vector_base64_field@@Base>
   2ecc8:	movw	r3, #49744	; 0xc250
   2eccc:	mov	r0, #1
   2ecd0:	mov	r1, #7
   2ecd4:	mov	r2, #1
   2ecd8:	movt	r3, #4
   2ecdc:	str	r1, [sp]
   2ece0:	str	r0, [sp, #4]
   2ece4:	mov	r0, r5
   2ece8:	mov	r1, r4
   2ecec:	bl	3d550 <flatcc_json_printer_uint8_vector_base64_field@@Base>
   2ecf0:	movw	r3, #49752	; 0xc258
   2ecf4:	mov	r0, #6
   2ecf8:	mov	r1, r4
   2ecfc:	mov	r2, #2
   2ed00:	movt	r3, #4
   2ed04:	stm	sp, {r0, r6}
   2ed08:	mov	r0, r5
   2ed0c:	bl	3d550 <flatcc_json_printer_uint8_vector_base64_field@@Base>
   2ed10:	sub	sp, fp, #16
   2ed14:	pop	{r4, r5, r6, sl, fp, pc}
   2ed18:	push	{r4, r5, r6, r7, fp, lr}
   2ed1c:	add	fp, sp, #16
   2ed20:	sub	sp, sp, #16
   2ed24:	movw	r3, #48888	; 0xbef8
   2ed28:	movw	r7, #59840	; 0xe9c0
   2ed2c:	mov	r5, r0
   2ed30:	mov	r0, #5
   2ed34:	mov	r6, #2
   2ed38:	mov	r2, #0
   2ed3c:	mov	r4, r1
   2ed40:	movt	r3, #4
   2ed44:	movt	r7, #2
   2ed48:	stm	sp, {r0, r6, r7}
   2ed4c:	mov	r0, r5
   2ed50:	bl	3e650 <flatcc_json_printer_int8_enum_field@@Base>
   2ed54:	movw	r3, #49360	; 0xc0d0
   2ed58:	mov	r0, #6
   2ed5c:	mov	r1, r4
   2ed60:	mov	r2, #1
   2ed64:	movt	r3, #4
   2ed68:	stm	sp, {r0, r6, r7}
   2ed6c:	mov	r0, r5
   2ed70:	bl	3e650 <flatcc_json_printer_int8_enum_field@@Base>
   2ed74:	movw	r3, #49367	; 0xc0d7
   2ed78:	mov	r0, r5
   2ed7c:	mov	r1, r4
   2ed80:	mov	r2, #2
   2ed84:	str	r6, [sp]
   2ed88:	str	r6, [sp, #4]
   2ed8c:	movt	r3, #4
   2ed90:	bl	3d738 <flatcc_json_printer_uint8_field@@Base>
   2ed94:	movw	r3, #49370	; 0xc0da
   2ed98:	mov	r0, #3
   2ed9c:	mov	r1, r4
   2eda0:	mov	r2, #3
   2eda4:	movt	r3, #4
   2eda8:	stm	sp, {r0, r6}
   2edac:	mov	r0, r5
   2edb0:	bl	3d738 <flatcc_json_printer_uint8_field@@Base>
   2edb4:	sub	sp, fp, #16
   2edb8:	pop	{r4, r5, r6, r7, fp, pc}
   2edbc:	bx	lr
   2edc0:	push	{r4, r5, fp, lr}
   2edc4:	add	fp, sp, #8
   2edc8:	sub	sp, sp, #16
   2edcc:	mov	r5, r0
   2edd0:	movw	r0, #61036	; 0xee6c
   2edd4:	movw	r3, #49374	; 0xc0de
   2edd8:	mov	r4, r1
   2eddc:	mov	r1, #6
   2ede0:	mov	r2, #0
   2ede4:	movt	r0, #2
   2ede8:	movt	r3, #4
   2edec:	str	r1, [sp]
   2edf0:	mov	r1, r4
   2edf4:	str	r0, [sp, #4]
   2edf8:	mov	r0, r5
   2edfc:	bl	46370 <flatcc_json_printer_table_field@@Base>
   2ee00:	movw	r0, #61192	; 0xef08
   2ee04:	movw	r3, #49381	; 0xc0e5
   2ee08:	mov	r1, #5
   2ee0c:	mov	r2, #1
   2ee10:	movt	r0, #2
   2ee14:	movt	r3, #4
   2ee18:	str	r1, [sp]
   2ee1c:	mov	r1, r4
   2ee20:	str	r0, [sp, #4]
   2ee24:	mov	r0, r5
   2ee28:	bl	46370 <flatcc_json_printer_table_field@@Base>
   2ee2c:	movw	r0, #60184	; 0xeb18
   2ee30:	movw	r1, #60068	; 0xeaa4
   2ee34:	movw	r3, #49387	; 0xc0eb
   2ee38:	mov	r2, #7
   2ee3c:	movt	r0, #2
   2ee40:	movt	r1, #2
   2ee44:	movt	r3, #4
   2ee48:	str	r2, [sp]
   2ee4c:	mov	r2, #3
   2ee50:	str	r1, [sp, #4]
   2ee54:	str	r0, [sp, #8]
   2ee58:	mov	r0, r5
   2ee5c:	mov	r1, r4
   2ee60:	bl	45fa0 <flatcc_json_printer_union_vector_field@@Base>
   2ee64:	sub	sp, fp, #8
   2ee68:	pop	{r4, r5, fp, pc}
   2ee6c:	push	{r4, r5, r6, sl, fp, lr}
   2ee70:	add	fp, sp, #16
   2ee74:	sub	sp, sp, #8
   2ee78:	mov	r5, r0
   2ee7c:	movw	r0, #61420	; 0xefec
   2ee80:	movw	r3, #49395	; 0xc0f3
   2ee84:	mov	r4, r1
   2ee88:	mov	r1, #21
   2ee8c:	mov	r2, #0
   2ee90:	movt	r0, #2
   2ee94:	movt	r3, #4
   2ee98:	str	r1, [sp]
   2ee9c:	mov	r1, r4
   2eea0:	str	r0, [sp, #4]
   2eea4:	mov	r0, r5
   2eea8:	bl	46370 <flatcc_json_printer_table_field@@Base>
   2eeac:	movw	r0, #61744	; 0xf130
   2eeb0:	movw	r3, #49417	; 0xc109
   2eeb4:	mov	r6, #22
   2eeb8:	mov	r1, r4
   2eebc:	mov	r2, #1
   2eec0:	movt	r0, #2
   2eec4:	movt	r3, #4
   2eec8:	str	r6, [sp]
   2eecc:	str	r0, [sp, #4]
   2eed0:	mov	r0, r5
   2eed4:	bl	46370 <flatcc_json_printer_table_field@@Base>
   2eed8:	movw	r0, #61844	; 0xf194
   2eedc:	movw	r3, #49440	; 0xc120
   2eee0:	mov	r1, r4
   2eee4:	mov	r2, #2
   2eee8:	str	r6, [sp]
   2eeec:	movt	r0, #2
   2eef0:	movt	r3, #4
   2eef4:	str	r0, [sp, #4]
   2eef8:	mov	r0, r5
   2eefc:	bl	46370 <flatcc_json_printer_table_field@@Base>
   2ef00:	sub	sp, fp, #16
   2ef04:	pop	{r4, r5, r6, sl, fp, pc}
   2ef08:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   2ef0c:	add	fp, sp, #24
   2ef10:	sub	sp, sp, #16
   2ef14:	movw	r6, #62124	; 0xf2ac
   2ef18:	movw	r3, #49590	; 0xc1b6
   2ef1c:	movw	r7, #61944	; 0xf1f8
   2ef20:	mov	r5, r0
   2ef24:	mov	r0, #14
   2ef28:	mov	r2, #1
   2ef2c:	mov	r4, r1
   2ef30:	movt	r6, #2
   2ef34:	movt	r3, #4
   2ef38:	movt	r7, #2
   2ef3c:	stm	sp, {r0, r7}
   2ef40:	mov	r0, r5
   2ef44:	str	r6, [sp, #8]
   2ef48:	bl	4655c <flatcc_json_printer_union_field@@Base>
   2ef4c:	movw	r3, #49605	; 0xc1c5
   2ef50:	mov	r8, #10
   2ef54:	mov	r0, r5
   2ef58:	mov	r1, r4
   2ef5c:	mov	r2, #3
   2ef60:	str	r7, [sp, #4]
   2ef64:	str	r6, [sp, #8]
   2ef68:	movt	r3, #4
   2ef6c:	str	r8, [sp]
   2ef70:	bl	4655c <flatcc_json_printer_union_field@@Base>
   2ef74:	movw	r3, #49616	; 0xc1d0
   2ef78:	mov	r0, #9
   2ef7c:	mov	r1, r4
   2ef80:	mov	r2, #5
   2ef84:	mov	r9, #5
   2ef88:	movt	r3, #4
   2ef8c:	stm	sp, {r0, r7}
   2ef90:	mov	r0, r5
   2ef94:	str	r6, [sp, #8]
   2ef98:	bl	4655c <flatcc_json_printer_union_field@@Base>
   2ef9c:	movw	r3, #49626	; 0xc1da
   2efa0:	mov	r0, r5
   2efa4:	mov	r1, r4
   2efa8:	mov	r2, #7
   2efac:	str	r9, [sp]
   2efb0:	str	r7, [sp, #4]
   2efb4:	str	r6, [sp, #8]
   2efb8:	movt	r3, #4
   2efbc:	bl	4655c <flatcc_json_printer_union_field@@Base>
   2efc0:	movw	r3, #49632	; 0xc1e0
   2efc4:	mov	r0, r5
   2efc8:	mov	r1, r4
   2efcc:	mov	r2, #9
   2efd0:	str	r8, [sp]
   2efd4:	str	r7, [sp, #4]
   2efd8:	str	r6, [sp, #8]
   2efdc:	movt	r3, #4
   2efe0:	bl	45fa0 <flatcc_json_printer_union_vector_field@@Base>
   2efe4:	sub	sp, fp, #24
   2efe8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2efec:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   2eff0:	add	fp, sp, #24
   2eff4:	sub	sp, sp, #16
   2eff8:	movw	r3, #49463	; 0xc137
   2effc:	mov	r9, #4
   2f000:	mov	r2, #0
   2f004:	mov	r4, r1
   2f008:	mov	r5, r0
   2f00c:	mov	r6, #0
   2f010:	movt	r3, #4
   2f014:	str	r9, [sp]
   2f018:	bl	3d2c4 <flatcc_json_printer_string_field@@Base>
   2f01c:	movw	r3, #49468	; 0xc13c
   2f020:	mov	r8, #9
   2f024:	mov	r0, r5
   2f028:	mov	r1, r4
   2f02c:	mov	r2, #1
   2f030:	str	r6, [sp, #4]
   2f034:	movt	r3, #4
   2f038:	str	r8, [sp]
   2f03c:	bl	3d95c <flatcc_json_printer_uint32_field@@Base>
   2f040:	movw	r3, #49478	; 0xc146
   2f044:	mov	r0, r5
   2f048:	mov	r1, r4
   2f04c:	mov	r2, #2
   2f050:	str	r9, [sp]
   2f054:	movt	r3, #4
   2f058:	bl	3d2c4 <flatcc_json_printer_string_field@@Base>
   2f05c:	movw	r3, #49483	; 0xc14b
   2f060:	mov	r7, #8
   2f064:	mov	r0, r5
   2f068:	mov	r1, r4
   2f06c:	mov	r2, #3
   2f070:	str	r6, [sp, #8]
   2f074:	str	r6, [sp, #12]
   2f078:	movt	r3, #4
   2f07c:	str	r7, [sp]
   2f080:	bl	3de54 <flatcc_json_printer_int64_field@@Base>
   2f084:	movw	r3, #49492	; 0xc154
   2f088:	mov	r0, r5
   2f08c:	mov	r1, r4
   2f090:	mov	r2, #4
   2f094:	str	r9, [sp]
   2f098:	movt	r3, #4
   2f09c:	bl	3d2c4 <flatcc_json_printer_string_field@@Base>
   2f0a0:	movw	r3, #49497	; 0xc159
   2f0a4:	mov	r0, r5
   2f0a8:	mov	r1, r4
   2f0ac:	mov	r2, #5
   2f0b0:	str	r6, [sp, #8]
   2f0b4:	str	r6, [sp, #12]
   2f0b8:	str	r7, [sp]
   2f0bc:	movt	r3, #4
   2f0c0:	bl	3de54 <flatcc_json_printer_int64_field@@Base>
   2f0c4:	movw	r3, #49506	; 0xc162
   2f0c8:	mov	r0, r5
   2f0cc:	mov	r1, r4
   2f0d0:	mov	r2, #6
   2f0d4:	str	r8, [sp]
   2f0d8:	str	r6, [sp, #4]
   2f0dc:	movt	r3, #4
   2f0e0:	bl	3d95c <flatcc_json_printer_uint32_field@@Base>
   2f0e4:	movw	r3, #49516	; 0xc16c
   2f0e8:	mov	r0, r5
   2f0ec:	mov	r1, r4
   2f0f0:	mov	r2, #7
   2f0f4:	str	r6, [sp, #8]
   2f0f8:	str	r6, [sp, #12]
   2f0fc:	str	r7, [sp]
   2f100:	movt	r3, #4
   2f104:	bl	3de54 <flatcc_json_printer_int64_field@@Base>
   2f108:	movw	r3, #49525	; 0xc175
   2f10c:	mov	r0, r5
   2f110:	mov	r1, r4
   2f114:	mov	r2, #8
   2f118:	str	r8, [sp]
   2f11c:	str	r6, [sp, #4]
   2f120:	movt	r3, #4
   2f124:	bl	3d95c <flatcc_json_printer_uint32_field@@Base>
   2f128:	sub	sp, fp, #24
   2f12c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   2f130:	push	{r4, r5, r6, sl, fp, lr}
   2f134:	add	fp, sp, #16
   2f138:	sub	sp, sp, #16
   2f13c:	movw	r3, #49535	; 0xc17f
   2f140:	mov	r5, r0
   2f144:	mov	r0, #15
   2f148:	mov	r6, #0
   2f14c:	mov	r2, #0
   2f150:	mov	r4, r1
   2f154:	movt	r3, #4
   2f158:	str	r0, [sp]
   2f15c:	mov	r0, r5
   2f160:	str	r6, [sp, #8]
   2f164:	str	r6, [sp, #12]
   2f168:	bl	3de54 <flatcc_json_printer_int64_field@@Base>
   2f16c:	movw	r3, #49551	; 0xc18f
   2f170:	mov	r0, #16
   2f174:	mov	r1, r4
   2f178:	mov	r2, #1
   2f17c:	movt	r3, #4
   2f180:	stm	sp, {r0, r6}
   2f184:	mov	r0, r5
   2f188:	bl	3d95c <flatcc_json_printer_uint32_field@@Base>
   2f18c:	sub	sp, fp, #16
   2f190:	pop	{r4, r5, r6, sl, fp, pc}
   2f194:	push	{r4, r5, r6, sl, fp, lr}
   2f198:	add	fp, sp, #16
   2f19c:	sub	sp, sp, #16
   2f1a0:	movw	r3, #49535	; 0xc17f
   2f1a4:	mov	r5, r0
   2f1a8:	mov	r0, #15
   2f1ac:	mov	r6, #0
   2f1b0:	mov	r2, #0
   2f1b4:	mov	r4, r1
   2f1b8:	movt	r3, #4
   2f1bc:	str	r0, [sp]
   2f1c0:	mov	r0, r5
   2f1c4:	str	r6, [sp, #8]
   2f1c8:	str	r6, [sp, #12]
   2f1cc:	bl	3de54 <flatcc_json_printer_int64_field@@Base>
   2f1d0:	movw	r3, #49568	; 0xc1a0
   2f1d4:	mov	r0, #21
   2f1d8:	mov	r1, r4
   2f1dc:	mov	r2, #1
   2f1e0:	movt	r3, #4
   2f1e4:	stm	sp, {r0, r6}
   2f1e8:	mov	r0, r5
   2f1ec:	bl	3d95c <flatcc_json_printer_uint32_field@@Base>
   2f1f0:	sub	sp, fp, #16
   2f1f4:	pop	{r4, r5, r6, sl, fp, pc}
   2f1f8:	sub	r2, r1, #2
   2f1fc:	cmp	r2, #9
   2f200:	bhi	2f244 <main@@Base+0x191a0>
   2f204:	add	r1, pc, #0
   2f208:	ldr	pc, [r1, r2, lsl #2]
   2f20c:	andeq	pc, r2, r4, lsr r2	; <UNPREDICTABLE>
   2f210:	andeq	pc, r2, ip, asr r2	; <UNPREDICTABLE>
   2f214:	andeq	pc, r2, ip, asr r2	; <UNPREDICTABLE>
   2f218:	andeq	pc, r2, ip, asr r2	; <UNPREDICTABLE>
   2f21c:	andeq	pc, r2, ip, asr r2	; <UNPREDICTABLE>
   2f220:	andeq	pc, r2, ip, asr r2	; <UNPREDICTABLE>
   2f224:	andeq	pc, r2, ip, ror #4
   2f228:	andeq	pc, r2, ip, ror r2	; <UNPREDICTABLE>
   2f22c:	andeq	pc, r2, ip, lsl #5
   2f230:	muleq	r2, ip, r2
   2f234:	movw	r1, #49643	; 0xc1eb
   2f238:	mov	r2, #5
   2f23c:	movt	r1, #4
   2f240:	b	3d0d8 <flatcc_json_printer_enum@@Base>
   2f244:	cmp	r1, #255	; 0xff
   2f248:	bne	2f25c <main@@Base+0x191b8>
   2f24c:	movw	r1, #49678	; 0xc20e
   2f250:	mov	r2, #6
   2f254:	movt	r1, #4
   2f258:	b	3d0d8 <flatcc_json_printer_enum@@Base>
   2f25c:	movw	r1, #55776	; 0xd9e0
   2f260:	mov	r2, #4
   2f264:	movt	r1, #4
   2f268:	b	3d0d8 <flatcc_json_printer_enum@@Base>
   2f26c:	movw	r1, #49649	; 0xc1f1
   2f270:	mov	r2, #8
   2f274:	movt	r1, #4
   2f278:	b	3d0d8 <flatcc_json_printer_enum@@Base>
   2f27c:	movw	r1, #49658	; 0xc1fa
   2f280:	mov	r2, #5
   2f284:	movt	r1, #4
   2f288:	b	3d0d8 <flatcc_json_printer_enum@@Base>
   2f28c:	movw	r1, #49664	; 0xc200
   2f290:	mov	r2, #7
   2f294:	movt	r1, #4
   2f298:	b	3d0d8 <flatcc_json_printer_enum@@Base>
   2f29c:	movw	r1, #49672	; 0xc208
   2f2a0:	mov	r2, #5
   2f2a4:	movt	r1, #4
   2f2a8:	b	3d0d8 <flatcc_json_printer_enum@@Base>
   2f2ac:	ldrb	r3, [r1, #8]
   2f2b0:	sub	r2, r3, #2
   2f2b4:	cmp	r2, #9
   2f2b8:	bhi	2f2f8 <main@@Base+0x19254>
   2f2bc:	add	r3, pc, #0
   2f2c0:	ldr	pc, [r3, r2, lsl #2]
   2f2c4:	andeq	pc, r2, r4, lsl #6
   2f2c8:	andeq	pc, r2, ip, lsl r3	; <UNPREDICTABLE>
   2f2cc:	andeq	pc, r2, ip, lsl r3	; <UNPREDICTABLE>
   2f2d0:	andeq	pc, r2, ip, lsl r3	; <UNPREDICTABLE>
   2f2d4:	andeq	pc, r2, ip, lsl r3	; <UNPREDICTABLE>
   2f2d8:	andeq	pc, r2, ip, lsl r3	; <UNPREDICTABLE>
   2f2dc:	andeq	pc, r2, r0, lsl r3	; <UNPREDICTABLE>
   2f2e0:	andeq	pc, r2, ip, ror #5
   2f2e4:	andeq	pc, r2, ip, ror #5
   2f2e8:	andeq	pc, r2, r0, lsl #6
   2f2ec:	movw	r2, #62348	; 0xf38c
   2f2f0:	movt	r2, #2
   2f2f4:	b	46bd4 <flatcc_json_printer_union_struct@@Base>
   2f2f8:	cmp	r3, #255	; 0xff
   2f2fc:	bxne	lr
   2f300:	b	46cf4 <flatcc_json_printer_union_string@@Base>
   2f304:	movw	r2, #62240	; 0xf320
   2f308:	movt	r2, #2
   2f30c:	b	46a54 <flatcc_json_printer_union_table@@Base>
   2f310:	movw	r2, #62292	; 0xf354
   2f314:	movt	r2, #2
   2f318:	b	46bd4 <flatcc_json_printer_union_struct@@Base>
   2f31c:	bx	lr
   2f320:	push	{fp, lr}
   2f324:	mov	fp, sp
   2f328:	sub	sp, sp, #8
   2f32c:	mov	r3, #19
   2f330:	mov	r2, #0
   2f334:	str	r3, [sp]
   2f338:	movw	r3, #49685	; 0xc215
   2f33c:	str	r2, [sp, #4]
   2f340:	mov	r2, #0
   2f344:	movt	r3, #4
   2f348:	bl	3dd78 <flatcc_json_printer_int32_field@@Base>
   2f34c:	mov	sp, fp
   2f350:	pop	{fp, pc}
   2f354:	push	{fp, lr}
   2f358:	mov	fp, sp
   2f35c:	sub	sp, sp, #8
   2f360:	movw	r3, #49705	; 0xc229
   2f364:	mov	r2, r1
   2f368:	mov	r1, #11
   2f36c:	movt	r3, #4
   2f370:	str	r1, [sp, #4]
   2f374:	mov	r1, #0
   2f378:	str	r3, [sp]
   2f37c:	mov	r3, #0
   2f380:	bl	3ed70 <flatcc_json_printer_uint16_struct_field@@Base>
   2f384:	mov	sp, fp
   2f388:	pop	{fp, pc}
   2f38c:	push	{fp, lr}
   2f390:	mov	fp, sp
   2f394:	sub	sp, sp, #8
   2f398:	movw	r3, #49717	; 0xc235
   2f39c:	mov	r2, r1
   2f3a0:	mov	r1, #10
   2f3a4:	movt	r3, #4
   2f3a8:	str	r1, [sp, #4]
   2f3ac:	mov	r1, #0
   2f3b0:	str	r3, [sp]
   2f3b4:	mov	r3, #0
   2f3b8:	bl	3f030 <flatcc_json_printer_int32_struct_field@@Base>
   2f3bc:	mov	sp, fp
   2f3c0:	pop	{fp, pc}
   2f3c4:	ldrb	r1, [r0, #12]
   2f3c8:	sub	r1, r1, #1
   2f3cc:	uxtb	r2, r1
   2f3d0:	cmp	r2, #3
   2f3d4:	movhi	r0, #0
   2f3d8:	bxhi	lr
   2f3dc:	movw	r2, #49888	; 0xc2e0
   2f3e0:	sxtb	r1, r1
   2f3e4:	movt	r2, #4
   2f3e8:	ldr	r1, [r2, r1, lsl #2]
   2f3ec:	b	3547c <flatcc_verify_union_table@@Base>
   2f3f0:	push	{r4, sl, fp, lr}
   2f3f4:	add	fp, sp, #8
   2f3f8:	mov	r1, #0
   2f3fc:	mov	r2, #0
   2f400:	mov	r4, r0
   2f404:	bl	34cd0 <flatcc_verify_string_field@@Base>
   2f408:	cmp	r0, #0
   2f40c:	popne	{r4, sl, fp, pc}
   2f410:	mov	r0, r4
   2f414:	mov	r1, #1
   2f418:	mov	r2, #8
   2f41c:	mov	r3, #8
   2f420:	bl	34c4c <flatcc_verify_field@@Base>
   2f424:	cmp	r0, #0
   2f428:	beq	2f430 <main@@Base+0x1938c>
   2f42c:	pop	{r4, sl, fp, pc}
   2f430:	mov	r0, r4
   2f434:	mov	r1, #2
   2f438:	mov	r2, #2
   2f43c:	mov	r3, #2
   2f440:	pop	{r4, sl, fp, lr}
   2f444:	b	34c4c <flatcc_verify_field@@Base>
   2f448:	mov	r0, #0
   2f44c:	bx	lr
   2f450:	push	{r4, r5, r6, sl, fp, lr}
   2f454:	add	fp, sp, #16
   2f458:	sub	sp, sp, #8
   2f45c:	mvn	r5, #0
   2f460:	mov	r6, #1
   2f464:	mov	r1, #0
   2f468:	mov	r2, #0
   2f46c:	mov	r3, #1
   2f470:	mov	r4, r0
   2f474:	str	r6, [sp]
   2f478:	str	r5, [sp, #4]
   2f47c:	bl	34db0 <flatcc_verify_vector_field@@Base>
   2f480:	cmp	r0, #0
   2f484:	bne	2f4ac <main@@Base+0x19408>
   2f488:	mov	r0, r4
   2f48c:	mov	r1, #1
   2f490:	mov	r2, #0
   2f494:	mov	r3, #1
   2f498:	str	r6, [sp]
   2f49c:	str	r5, [sp, #4]
   2f4a0:	bl	34db0 <flatcc_verify_vector_field@@Base>
   2f4a4:	cmp	r0, #0
   2f4a8:	beq	2f4b4 <main@@Base+0x19410>
   2f4ac:	sub	sp, fp, #16
   2f4b0:	pop	{r4, r5, r6, sl, fp, pc}
   2f4b4:	movw	r0, #7756	; 0x1e4c
   2f4b8:	mov	r1, #1
   2f4bc:	mov	r2, #0
   2f4c0:	mov	r3, #0
   2f4c4:	movt	r0, #2
   2f4c8:	str	r1, [sp]
   2f4cc:	mov	r1, #2
   2f4d0:	str	r0, [sp, #4]
   2f4d4:	mov	r0, r4
   2f4d8:	bl	35d80 <flatcc_verify_table_as_nested_root@@Base>
   2f4dc:	sub	sp, fp, #16
   2f4e0:	pop	{r4, r5, r6, sl, fp, pc}
   2f4e4:	push	{r4, sl, fp, lr}
   2f4e8:	add	fp, sp, #8
   2f4ec:	mov	r1, #0
   2f4f0:	mov	r2, #1
   2f4f4:	mov	r3, #1
   2f4f8:	mov	r4, r0
   2f4fc:	bl	34c4c <flatcc_verify_field@@Base>
   2f500:	cmp	r0, #0
   2f504:	bne	2f540 <main@@Base+0x1949c>
   2f508:	mov	r0, r4
   2f50c:	mov	r1, #1
   2f510:	mov	r2, #1
   2f514:	mov	r3, #1
   2f518:	bl	34c4c <flatcc_verify_field@@Base>
   2f51c:	cmp	r0, #0
   2f520:	popne	{r4, sl, fp, pc}
   2f524:	mov	r0, r4
   2f528:	mov	r1, #2
   2f52c:	mov	r2, #1
   2f530:	mov	r3, #1
   2f534:	bl	34c4c <flatcc_verify_field@@Base>
   2f538:	cmp	r0, #0
   2f53c:	beq	2f544 <main@@Base+0x194a0>
   2f540:	pop	{r4, sl, fp, pc}
   2f544:	mov	r0, r4
   2f548:	mov	r1, #3
   2f54c:	mov	r2, #1
   2f550:	mov	r3, #1
   2f554:	pop	{r4, sl, fp, lr}
   2f558:	b	34c4c <flatcc_verify_field@@Base>
   2f55c:	mov	r0, #0
   2f560:	bx	lr
   2f564:	push	{r4, sl, fp, lr}
   2f568:	add	fp, sp, #8
   2f56c:	movw	r3, #62924	; 0xf5cc
   2f570:	mov	r1, #0
   2f574:	mov	r2, #0
   2f578:	mov	r4, r0
   2f57c:	movt	r3, #2
   2f580:	bl	35030 <flatcc_verify_table_field@@Base>
   2f584:	cmp	r0, #0
   2f588:	popne	{r4, sl, fp, pc}
   2f58c:	movw	r3, #63028	; 0xf634
   2f590:	mov	r0, r4
   2f594:	mov	r1, #1
   2f598:	mov	r2, #0
   2f59c:	movt	r3, #2
   2f5a0:	bl	35030 <flatcc_verify_table_field@@Base>
   2f5a4:	cmp	r0, #0
   2f5a8:	beq	2f5b0 <main@@Base+0x1950c>
   2f5ac:	pop	{r4, sl, fp, pc}
   2f5b0:	movw	r3, #62404	; 0xf3c4
   2f5b4:	mov	r0, r4
   2f5b8:	mov	r1, #3
   2f5bc:	mov	r2, #0
   2f5c0:	movt	r3, #2
   2f5c4:	pop	{r4, sl, fp, lr}
   2f5c8:	b	36228 <flatcc_verify_union_vector_field@@Base>
   2f5cc:	push	{r4, sl, fp, lr}
   2f5d0:	add	fp, sp, #8
   2f5d4:	movw	r3, #63196	; 0xf6dc
   2f5d8:	mov	r1, #0
   2f5dc:	mov	r2, #0
   2f5e0:	mov	r4, r0
   2f5e4:	movt	r3, #2
   2f5e8:	bl	35030 <flatcc_verify_table_field@@Base>
   2f5ec:	cmp	r0, #0
   2f5f0:	popne	{r4, sl, fp, pc}
   2f5f4:	movw	r3, #63444	; 0xf7d4
   2f5f8:	mov	r0, r4
   2f5fc:	mov	r1, #1
   2f600:	mov	r2, #0
   2f604:	movt	r3, #2
   2f608:	bl	35030 <flatcc_verify_table_field@@Base>
   2f60c:	cmp	r0, #0
   2f610:	beq	2f618 <main@@Base+0x19574>
   2f614:	pop	{r4, sl, fp, pc}
   2f618:	movw	r3, #63504	; 0xf810
   2f61c:	mov	r0, r4
   2f620:	mov	r1, #2
   2f624:	mov	r2, #0
   2f628:	movt	r3, #2
   2f62c:	pop	{r4, sl, fp, lr}
   2f630:	b	35030 <flatcc_verify_table_field@@Base>
   2f634:	push	{r4, sl, fp, lr}
   2f638:	add	fp, sp, #8
   2f63c:	movw	r3, #63564	; 0xf84c
   2f640:	mov	r1, #1
   2f644:	mov	r2, #0
   2f648:	mov	r4, r0
   2f64c:	movt	r3, #2
   2f650:	bl	360a0 <flatcc_verify_union_field@@Base>
   2f654:	cmp	r0, #0
   2f658:	bne	2f6bc <main@@Base+0x19618>
   2f65c:	movw	r3, #63564	; 0xf84c
   2f660:	mov	r0, r4
   2f664:	mov	r1, #3
   2f668:	mov	r2, #0
   2f66c:	movt	r3, #2
   2f670:	bl	360a0 <flatcc_verify_union_field@@Base>
   2f674:	cmp	r0, #0
   2f678:	bne	2f6bc <main@@Base+0x19618>
   2f67c:	movw	r3, #63564	; 0xf84c
   2f680:	mov	r0, r4
   2f684:	mov	r1, #5
   2f688:	mov	r2, #0
   2f68c:	movt	r3, #2
   2f690:	bl	360a0 <flatcc_verify_union_field@@Base>
   2f694:	cmp	r0, #0
   2f698:	popne	{r4, sl, fp, pc}
   2f69c:	movw	r3, #63564	; 0xf84c
   2f6a0:	mov	r0, r4
   2f6a4:	mov	r1, #7
   2f6a8:	mov	r2, #0
   2f6ac:	movt	r3, #2
   2f6b0:	bl	360a0 <flatcc_verify_union_field@@Base>
   2f6b4:	cmp	r0, #0
   2f6b8:	beq	2f6c0 <main@@Base+0x1961c>
   2f6bc:	pop	{r4, sl, fp, pc}
   2f6c0:	movw	r3, #63564	; 0xf84c
   2f6c4:	mov	r0, r4
   2f6c8:	mov	r1, #9
   2f6cc:	mov	r2, #0
   2f6d0:	movt	r3, #2
   2f6d4:	pop	{r4, sl, fp, lr}
   2f6d8:	b	36228 <flatcc_verify_union_vector_field@@Base>
   2f6dc:	push	{r4, sl, fp, lr}
   2f6e0:	add	fp, sp, #8
   2f6e4:	mov	r1, #0
   2f6e8:	mov	r2, #0
   2f6ec:	mov	r4, r0
   2f6f0:	bl	34cd0 <flatcc_verify_string_field@@Base>
   2f6f4:	cmp	r0, #0
   2f6f8:	bne	2f7b8 <main@@Base+0x19714>
   2f6fc:	mov	r0, r4
   2f700:	mov	r1, #1
   2f704:	mov	r2, #4
   2f708:	mov	r3, #4
   2f70c:	bl	34c4c <flatcc_verify_field@@Base>
   2f710:	cmp	r0, #0
   2f714:	bne	2f7b8 <main@@Base+0x19714>
   2f718:	mov	r0, r4
   2f71c:	mov	r1, #2
   2f720:	mov	r2, #0
   2f724:	bl	34cd0 <flatcc_verify_string_field@@Base>
   2f728:	cmp	r0, #0
   2f72c:	bne	2f7b8 <main@@Base+0x19714>
   2f730:	mov	r0, r4
   2f734:	mov	r1, #3
   2f738:	mov	r2, #8
   2f73c:	mov	r3, #8
   2f740:	bl	34c4c <flatcc_verify_field@@Base>
   2f744:	cmp	r0, #0
   2f748:	bne	2f7b8 <main@@Base+0x19714>
   2f74c:	mov	r0, r4
   2f750:	mov	r1, #4
   2f754:	mov	r2, #0
   2f758:	bl	34cd0 <flatcc_verify_string_field@@Base>
   2f75c:	cmp	r0, #0
   2f760:	bne	2f7b8 <main@@Base+0x19714>
   2f764:	mov	r0, r4
   2f768:	mov	r1, #5
   2f76c:	mov	r2, #8
   2f770:	mov	r3, #8
   2f774:	bl	34c4c <flatcc_verify_field@@Base>
   2f778:	cmp	r0, #0
   2f77c:	bne	2f7b8 <main@@Base+0x19714>
   2f780:	mov	r0, r4
   2f784:	mov	r1, #6
   2f788:	mov	r2, #4
   2f78c:	mov	r3, #4
   2f790:	bl	34c4c <flatcc_verify_field@@Base>
   2f794:	cmp	r0, #0
   2f798:	popne	{r4, sl, fp, pc}
   2f79c:	mov	r0, r4
   2f7a0:	mov	r1, #7
   2f7a4:	mov	r2, #8
   2f7a8:	mov	r3, #8
   2f7ac:	bl	34c4c <flatcc_verify_field@@Base>
   2f7b0:	cmp	r0, #0
   2f7b4:	beq	2f7bc <main@@Base+0x19718>
   2f7b8:	pop	{r4, sl, fp, pc}
   2f7bc:	mov	r0, r4
   2f7c0:	mov	r1, #8
   2f7c4:	mov	r2, #4
   2f7c8:	mov	r3, #4
   2f7cc:	pop	{r4, sl, fp, lr}
   2f7d0:	b	34c4c <flatcc_verify_field@@Base>
   2f7d4:	push	{r4, sl, fp, lr}
   2f7d8:	add	fp, sp, #8
   2f7dc:	mov	r1, #0
   2f7e0:	mov	r2, #8
   2f7e4:	mov	r3, #8
   2f7e8:	mov	r4, r0
   2f7ec:	bl	34c4c <flatcc_verify_field@@Base>
   2f7f0:	cmp	r0, #0
   2f7f4:	popne	{r4, sl, fp, pc}
   2f7f8:	mov	r0, r4
   2f7fc:	mov	r1, #1
   2f800:	mov	r2, #4
   2f804:	mov	r3, #4
   2f808:	pop	{r4, sl, fp, lr}
   2f80c:	b	34c4c <flatcc_verify_field@@Base>
   2f810:	push	{r4, sl, fp, lr}
   2f814:	add	fp, sp, #8
   2f818:	mov	r1, #0
   2f81c:	mov	r2, #8
   2f820:	mov	r3, #8
   2f824:	mov	r4, r0
   2f828:	bl	34c4c <flatcc_verify_field@@Base>
   2f82c:	cmp	r0, #0
   2f830:	popne	{r4, sl, fp, pc}
   2f834:	mov	r0, r4
   2f838:	mov	r1, #1
   2f83c:	mov	r2, #4
   2f840:	mov	r3, #4
   2f844:	pop	{r4, sl, fp, lr}
   2f848:	b	34c4c <flatcc_verify_field@@Base>
   2f84c:	ldrb	r2, [r0, #12]
   2f850:	sub	r1, r2, #2
   2f854:	cmp	r1, #9
   2f858:	bhi	2f898 <main@@Base+0x197f4>
   2f85c:	add	r2, pc, #0
   2f860:	ldr	pc, [r2, r1, lsl #2]
   2f864:	andeq	pc, r2, ip, lsr #17
   2f868:	andeq	pc, r2, r4, lsr #17
   2f86c:	andeq	pc, r2, r4, lsr #17
   2f870:	andeq	pc, r2, r4, lsr #17
   2f874:	andeq	pc, r2, r4, lsr #17
   2f878:	andeq	pc, r2, r4, lsr #17
   2f87c:			; <UNDEFINED> instruction: 0x0002f8b8
   2f880:	andeq	pc, r2, ip, lsl #17
   2f884:	andeq	pc, r2, ip, lsl #17
   2f888:	andeq	pc, r2, r0, lsr #17
   2f88c:	mov	r1, #4
   2f890:	mov	r2, #4
   2f894:	b	35568 <flatcc_verify_union_struct@@Base>
   2f898:	cmp	r2, #255	; 0xff
   2f89c:	bne	2f8a4 <main@@Base+0x19800>
   2f8a0:	b	355c0 <flatcc_verify_union_string@@Base>
   2f8a4:	mov	r0, #0
   2f8a8:	bx	lr
   2f8ac:	movw	r1, #63684	; 0xf8c4
   2f8b0:	movt	r1, #2
   2f8b4:	b	3547c <flatcc_verify_union_table@@Base>
   2f8b8:	mov	r1, #2
   2f8bc:	mov	r2, #2
   2f8c0:	b	35568 <flatcc_verify_union_struct@@Base>
   2f8c4:	mov	r1, #0
   2f8c8:	mov	r2, #4
   2f8cc:	mov	r3, #4
   2f8d0:	b	34c4c <flatcc_verify_field@@Base>

0002f8d4 <flatcc_builder_default_alloc@@Base>:
   2f8d4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   2f8d8:	add	fp, sp, #24
   2f8dc:	mov	r4, r1
   2f8e0:	cmp	r2, #0
   2f8e4:	beq	2f92c <flatcc_builder_default_alloc@@Base+0x58>
   2f8e8:	ldr	r0, [fp, #8]
   2f8ec:	mov	r8, r3
   2f8f0:	sub	r1, r0, #1
   2f8f4:	cmp	r1, #6
   2f8f8:	bhi	2f95c <flatcc_builder_default_alloc@@Base+0x88>
   2f8fc:	add	r3, pc, #4
   2f900:	mov	r0, #256	; 0x100
   2f904:	ldr	pc, [r3, r1, lsl #2]
   2f908:	andeq	pc, r2, r0, ror r9	; <UNPREDICTABLE>
   2f90c:	andeq	pc, r2, ip, asr r9	; <UNPREDICTABLE>
   2f910:	andeq	pc, r2, ip, asr r9	; <UNPREDICTABLE>
   2f914:	andeq	pc, r2, r4, lsr #18
   2f918:	andeq	pc, r2, r4, ror #18
   2f91c:	andeq	pc, r2, ip, asr r9	; <UNPREDICTABLE>
   2f920:	andeq	pc, r2, ip, ror #18
   2f924:	mov	r0, #288	; 0x120
   2f928:	b	2f970 <flatcc_builder_default_alloc@@Base+0x9c>
   2f92c:	ldr	r0, [r4]
   2f930:	cmp	r0, #0
   2f934:	beq	2f950 <flatcc_builder_default_alloc@@Base+0x7c>
   2f938:	bl	14e50 <free@plt>
   2f93c:	mov	r6, #0
   2f940:	mov	r0, r6
   2f944:	str	r6, [r4]
   2f948:	str	r6, [r4, #4]
   2f94c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2f950:	mov	r6, #0
   2f954:	mov	r0, r6
   2f958:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2f95c:	mov	r0, #32
   2f960:	b	2f970 <flatcc_builder_default_alloc@@Base+0x9c>
   2f964:	mov	r0, r2
   2f968:	b	2f970 <flatcc_builder_default_alloc@@Base+0x9c>
   2f96c:	mov	r0, #64	; 0x40
   2f970:	mov	r7, r0
   2f974:	lsl	r0, r0, #1
   2f978:	cmp	r7, r2
   2f97c:	bcc	2f970 <flatcc_builder_default_alloc@@Base+0x9c>
   2f980:	ldr	r0, [r4, #4]
   2f984:	mov	r6, #0
   2f988:	cmp	r0, r2
   2f98c:	lsrcs	r0, r0, #1
   2f990:	cmpcs	r0, r7
   2f994:	bcs	2f9d8 <flatcc_builder_default_alloc@@Base+0x104>
   2f998:	ldr	r0, [r4]
   2f99c:	mov	r1, r7
   2f9a0:	bl	14e80 <realloc@plt>
   2f9a4:	cmp	r0, #0
   2f9a8:	beq	2f9e0 <flatcc_builder_default_alloc@@Base+0x10c>
   2f9ac:	mov	r5, r0
   2f9b0:	cmp	r8, #0
   2f9b4:	beq	2f9d4 <flatcc_builder_default_alloc@@Base+0x100>
   2f9b8:	ldr	r1, [r4, #4]
   2f9bc:	cmp	r7, r1
   2f9c0:	bls	2f9d4 <flatcc_builder_default_alloc@@Base+0x100>
   2f9c4:	add	r0, r5, r1
   2f9c8:	sub	r2, r7, r1
   2f9cc:	mov	r1, #0
   2f9d0:	bl	14eec <memset@plt>
   2f9d4:	stm	r4, {r5, r7}
   2f9d8:	mov	r0, r6
   2f9dc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   2f9e0:	mvn	r6, #0
   2f9e4:	mov	r0, r6
   2f9e8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0002f9ec <flatcc_builder_flush_vtable_cache@@Base>:
   2f9ec:	push	{r4, r5, fp, lr}
   2f9f0:	add	fp, sp, #8
   2f9f4:	mov	r4, r0
   2f9f8:	ldr	r0, [r0, #116]	; 0x74
   2f9fc:	cmp	r0, #0
   2fa00:	popeq	{r4, r5, fp, pc}
   2fa04:	ldr	r0, [r4, #92]	; 0x5c
   2fa08:	ldr	r2, [r4, #96]	; 0x60
   2fa0c:	mov	r1, #0
   2fa10:	mov	r5, #0
   2fa14:	bl	14eec <memset@plt>
   2fa18:	mov	r0, #16
   2fa1c:	str	r5, [r4, #120]	; 0x78
   2fa20:	str	r0, [r4, #124]	; 0x7c
   2fa24:	pop	{r4, r5, fp, pc}

0002fa28 <flatcc_builder_custom_init@@Base>:
   2fa28:	push	{r4, r5, r6, r7, fp, lr}
   2fa2c:	add	fp, sp, #16
   2fa30:	mov	r6, r2
   2fa34:	mov	r7, r1
   2fa38:	mov	r1, #0
   2fa3c:	mov	r2, #232	; 0xe8
   2fa40:	mov	r5, r3
   2fa44:	mov	r4, r0
   2fa48:	bl	14eec <memset@plt>
   2fa4c:	ldr	r0, [fp, #8]
   2fa50:	cmp	r7, #0
   2fa54:	bne	2fa6c <flatcc_builder_custom_init@@Base+0x44>
   2fa58:	movw	r7, #18444	; 0x480c
   2fa5c:	mov	r1, #1
   2fa60:	add	r6, r4, #188	; 0xbc
   2fa64:	movt	r7, #3
   2fa68:	str	r1, [r4, #184]	; 0xb8
   2fa6c:	movw	r1, #63700	; 0xf8d4
   2fa70:	cmp	r5, #0
   2fa74:	str	r6, [r4, #36]	; 0x24
   2fa78:	str	r0, [r4, #40]	; 0x28
   2fa7c:	mov	r0, #0
   2fa80:	str	r7, [r4, #44]	; 0x2c
   2fa84:	movt	r1, #2
   2fa88:	movne	r1, r5
   2fa8c:	str	r1, [r4, #48]	; 0x30
   2fa90:	pop	{r4, r5, r6, r7, fp, pc}

0002fa94 <flatcc_builder_init@@Base>:
   2fa94:	push	{r4, r5, fp, lr}
   2fa98:	add	fp, sp, #8
   2fa9c:	mov	r1, #0
   2faa0:	mov	r2, #232	; 0xe8
   2faa4:	mov	r4, r0
   2faa8:	mov	r5, #0
   2faac:	bl	14eec <memset@plt>
   2fab0:	mov	r0, #1
   2fab4:	movw	r1, #18444	; 0x480c
   2fab8:	add	r2, r4, #188	; 0xbc
   2fabc:	str	r0, [r4, #184]	; 0xb8
   2fac0:	movw	r0, #63700	; 0xf8d4
   2fac4:	movt	r1, #3
   2fac8:	str	r2, [r4, #36]	; 0x24
   2facc:	str	r5, [r4, #40]	; 0x28
   2fad0:	movt	r0, #2
   2fad4:	str	r1, [r4, #44]	; 0x2c
   2fad8:	str	r0, [r4, #48]	; 0x30
   2fadc:	mov	r0, #0
   2fae0:	pop	{r4, r5, fp, pc}

0002fae4 <flatcc_builder_custom_reset@@Base>:
   2fae4:	push	{r4, r5, r6, sl, fp, lr}
   2fae8:	add	fp, sp, #16
   2faec:	sub	sp, sp, #8
   2faf0:	mov	r5, r1
   2faf4:	mov	r4, r0
   2faf8:	cmp	r2, #0
   2fafc:	beq	2fb5c <flatcc_builder_custom_reset@@Base+0x78>
   2fb00:	mov	r1, r4
   2fb04:	ldr	r0, [r1, #52]!	; 0x34
   2fb08:	cmp	r0, #0
   2fb0c:	beq	2fb88 <flatcc_builder_custom_reset@@Base+0xa4>
   2fb10:	ldr	r0, [r4, #40]	; 0x28
   2fb14:	ldr	r6, [r4, #48]	; 0x30
   2fb18:	mov	r2, #0
   2fb1c:	mov	r3, #1
   2fb20:	str	r2, [sp]
   2fb24:	mov	r2, #1
   2fb28:	blx	r6
   2fb2c:	mvn	r6, #0
   2fb30:	cmp	r0, #0
   2fb34:	bne	2fe3c <flatcc_builder_custom_reset@@Base+0x358>
   2fb38:	ldr	r0, [r4, #52]	; 0x34
   2fb3c:	ldr	r2, [r4, #56]	; 0x38
   2fb40:	mov	r1, #0
   2fb44:	bl	14eec <memset@plt>
   2fb48:	mov	r1, r4
   2fb4c:	ldr	r0, [r1, #60]!	; 0x3c
   2fb50:	cmp	r0, #0
   2fb54:	bne	2fba4 <flatcc_builder_custom_reset@@Base+0xc0>
   2fb58:	b	2fbf0 <flatcc_builder_custom_reset@@Base+0x10c>
   2fb5c:	ldr	r0, [r4, #52]	; 0x34
   2fb60:	ldr	r2, [r4, #56]	; 0x38
   2fb64:	cmp	r0, #0
   2fb68:	beq	2fc58 <flatcc_builder_custom_reset@@Base+0x174>
   2fb6c:	mov	r1, #0
   2fb70:	bl	14eec <memset@plt>
   2fb74:	ldr	r0, [r4, #60]	; 0x3c
   2fb78:	ldr	r2, [r4, #64]	; 0x40
   2fb7c:	cmp	r0, #0
   2fb80:	bne	2fc70 <flatcc_builder_custom_reset@@Base+0x18c>
   2fb84:	b	2fc8c <flatcc_builder_custom_reset@@Base+0x1a8>
   2fb88:	ldr	r0, [r4, #56]	; 0x38
   2fb8c:	cmp	r0, #0
   2fb90:	bne	30010 <flatcc_builder_custom_reset@@Base+0x52c>
   2fb94:	mov	r1, r4
   2fb98:	ldr	r0, [r1, #60]!	; 0x3c
   2fb9c:	cmp	r0, #0
   2fba0:	beq	2fbf0 <flatcc_builder_custom_reset@@Base+0x10c>
   2fba4:	ldr	r0, [r4, #40]	; 0x28
   2fba8:	ldr	r6, [r4, #48]	; 0x30
   2fbac:	mov	r2, #1
   2fbb0:	mov	r3, #1
   2fbb4:	str	r2, [sp]
   2fbb8:	mov	r2, #1
   2fbbc:	blx	r6
   2fbc0:	mvn	r6, #0
   2fbc4:	cmp	r0, #0
   2fbc8:	bne	2fe3c <flatcc_builder_custom_reset@@Base+0x358>
   2fbcc:	ldr	r0, [r4, #60]	; 0x3c
   2fbd0:	ldr	r2, [r4, #64]	; 0x40
   2fbd4:	mov	r1, #0
   2fbd8:	bl	14eec <memset@plt>
   2fbdc:	mov	r1, r4
   2fbe0:	ldr	r0, [r1, #68]!	; 0x44
   2fbe4:	cmp	r0, #0
   2fbe8:	bne	2fc0c <flatcc_builder_custom_reset@@Base+0x128>
   2fbec:	b	2fe48 <flatcc_builder_custom_reset@@Base+0x364>
   2fbf0:	ldr	r0, [r4, #64]	; 0x40
   2fbf4:	cmp	r0, #0
   2fbf8:	bne	30010 <flatcc_builder_custom_reset@@Base+0x52c>
   2fbfc:	mov	r1, r4
   2fc00:	ldr	r0, [r1, #68]!	; 0x44
   2fc04:	cmp	r0, #0
   2fc08:	beq	2fe48 <flatcc_builder_custom_reset@@Base+0x364>
   2fc0c:	ldr	r0, [r4, #40]	; 0x28
   2fc10:	ldr	r6, [r4, #48]	; 0x30
   2fc14:	mov	r2, #2
   2fc18:	mov	r3, #1
   2fc1c:	str	r2, [sp]
   2fc20:	mov	r2, #1
   2fc24:	blx	r6
   2fc28:	mvn	r6, #0
   2fc2c:	cmp	r0, #0
   2fc30:	bne	2fe3c <flatcc_builder_custom_reset@@Base+0x358>
   2fc34:	ldr	r0, [r4, #68]	; 0x44
   2fc38:	ldr	r2, [r4, #72]	; 0x48
   2fc3c:	mov	r1, #0
   2fc40:	bl	14eec <memset@plt>
   2fc44:	mov	r1, r4
   2fc48:	ldr	r0, [r1, #76]!	; 0x4c
   2fc4c:	cmp	r0, #0
   2fc50:	bne	2fe64 <flatcc_builder_custom_reset@@Base+0x380>
   2fc54:	b	2feb0 <flatcc_builder_custom_reset@@Base+0x3cc>
   2fc58:	cmp	r2, #0
   2fc5c:	bne	30010 <flatcc_builder_custom_reset@@Base+0x52c>
   2fc60:	ldr	r0, [r4, #60]	; 0x3c
   2fc64:	ldr	r2, [r4, #64]	; 0x40
   2fc68:	cmp	r0, #0
   2fc6c:	beq	2fc8c <flatcc_builder_custom_reset@@Base+0x1a8>
   2fc70:	mov	r1, #0
   2fc74:	bl	14eec <memset@plt>
   2fc78:	ldr	r0, [r4, #68]	; 0x44
   2fc7c:	ldr	r2, [r4, #72]	; 0x48
   2fc80:	cmp	r0, #0
   2fc84:	bne	2fca4 <flatcc_builder_custom_reset@@Base+0x1c0>
   2fc88:	b	2fcc0 <flatcc_builder_custom_reset@@Base+0x1dc>
   2fc8c:	cmp	r2, #0
   2fc90:	bne	30010 <flatcc_builder_custom_reset@@Base+0x52c>
   2fc94:	ldr	r0, [r4, #68]	; 0x44
   2fc98:	ldr	r2, [r4, #72]	; 0x48
   2fc9c:	cmp	r0, #0
   2fca0:	beq	2fcc0 <flatcc_builder_custom_reset@@Base+0x1dc>
   2fca4:	mov	r1, #0
   2fca8:	bl	14eec <memset@plt>
   2fcac:	ldr	r0, [r4, #76]	; 0x4c
   2fcb0:	ldr	r2, [r4, #80]	; 0x50
   2fcb4:	cmp	r0, #0
   2fcb8:	bne	2fcd8 <flatcc_builder_custom_reset@@Base+0x1f4>
   2fcbc:	b	2fcf4 <flatcc_builder_custom_reset@@Base+0x210>
   2fcc0:	cmp	r2, #0
   2fcc4:	bne	30010 <flatcc_builder_custom_reset@@Base+0x52c>
   2fcc8:	ldr	r0, [r4, #76]	; 0x4c
   2fccc:	ldr	r2, [r4, #80]	; 0x50
   2fcd0:	cmp	r0, #0
   2fcd4:	beq	2fcf4 <flatcc_builder_custom_reset@@Base+0x210>
   2fcd8:	mov	r1, #0
   2fcdc:	bl	14eec <memset@plt>
   2fce0:	ldr	r0, [r4, #84]	; 0x54
   2fce4:	ldr	r2, [r4, #88]	; 0x58
   2fce8:	cmp	r0, #0
   2fcec:	bne	2fd0c <flatcc_builder_custom_reset@@Base+0x228>
   2fcf0:	b	2fd28 <flatcc_builder_custom_reset@@Base+0x244>
   2fcf4:	cmp	r2, #0
   2fcf8:	bne	30010 <flatcc_builder_custom_reset@@Base+0x52c>
   2fcfc:	ldr	r0, [r4, #84]	; 0x54
   2fd00:	ldr	r2, [r4, #88]	; 0x58
   2fd04:	cmp	r0, #0
   2fd08:	beq	2fd28 <flatcc_builder_custom_reset@@Base+0x244>
   2fd0c:	mov	r1, #0
   2fd10:	bl	14eec <memset@plt>
   2fd14:	ldr	r0, [r4, #92]	; 0x5c
   2fd18:	ldr	r2, [r4, #96]	; 0x60
   2fd1c:	cmp	r0, #0
   2fd20:	bne	2fd40 <flatcc_builder_custom_reset@@Base+0x25c>
   2fd24:	b	2fd5c <flatcc_builder_custom_reset@@Base+0x278>
   2fd28:	cmp	r2, #0
   2fd2c:	bne	30010 <flatcc_builder_custom_reset@@Base+0x52c>
   2fd30:	ldr	r0, [r4, #92]	; 0x5c
   2fd34:	ldr	r2, [r4, #96]	; 0x60
   2fd38:	cmp	r0, #0
   2fd3c:	beq	2fd5c <flatcc_builder_custom_reset@@Base+0x278>
   2fd40:	mov	r1, #0
   2fd44:	bl	14eec <memset@plt>
   2fd48:	ldr	r0, [r4, #100]	; 0x64
   2fd4c:	ldr	r2, [r4, #104]	; 0x68
   2fd50:	cmp	r0, #0
   2fd54:	bne	2fd74 <flatcc_builder_custom_reset@@Base+0x290>
   2fd58:	b	2fd90 <flatcc_builder_custom_reset@@Base+0x2ac>
   2fd5c:	cmp	r2, #0
   2fd60:	bne	30010 <flatcc_builder_custom_reset@@Base+0x52c>
   2fd64:	ldr	r0, [r4, #100]	; 0x64
   2fd68:	ldr	r2, [r4, #104]	; 0x68
   2fd6c:	cmp	r0, #0
   2fd70:	beq	2fd90 <flatcc_builder_custom_reset@@Base+0x2ac>
   2fd74:	mov	r1, #0
   2fd78:	bl	14eec <memset@plt>
   2fd7c:	ldr	r0, [r4, #108]	; 0x6c
   2fd80:	ldr	r2, [r4, #112]	; 0x70
   2fd84:	cmp	r0, #0
   2fd88:	bne	2fda8 <flatcc_builder_custom_reset@@Base+0x2c4>
   2fd8c:	b	2fdb4 <flatcc_builder_custom_reset@@Base+0x2d0>
   2fd90:	cmp	r2, #0
   2fd94:	bne	30010 <flatcc_builder_custom_reset@@Base+0x52c>
   2fd98:	ldr	r0, [r4, #108]	; 0x6c
   2fd9c:	ldr	r2, [r4, #112]	; 0x70
   2fda0:	cmp	r0, #0
   2fda4:	beq	2fdb4 <flatcc_builder_custom_reset@@Base+0x2d0>
   2fda8:	mov	r1, #0
   2fdac:	bl	14eec <memset@plt>
   2fdb0:	b	2fdbc <flatcc_builder_custom_reset@@Base+0x2d8>
   2fdb4:	cmp	r2, #0
   2fdb8:	bne	30010 <flatcc_builder_custom_reset@@Base+0x52c>
   2fdbc:	mov	r0, #0
   2fdc0:	vmov.i32	q8, #0	; 0x00000000
   2fdc4:	mov	r6, #0
   2fdc8:	str	r0, [r4, #120]	; 0x78
   2fdcc:	ldr	r1, [r4, #124]	; 0x7c
   2fdd0:	cmp	r1, #0
   2fdd4:	movne	r1, #16
   2fdd8:	strne	r1, [r4, #124]	; 0x7c
   2fddc:	add	r1, r4, #148	; 0x94
   2fde0:	str	r0, [r4, #136]	; 0x88
   2fde4:	str	r0, [r4, #140]	; 0x8c
   2fde8:	strh	r0, [r4, #128]	; 0x80
   2fdec:	str	r0, [r4, #32]
   2fdf0:	cmp	r5, #0
   2fdf4:	vst1.32	{d16-d17}, [r1]
   2fdf8:	ldr	r2, [r4, #60]	; 0x3c
   2fdfc:	ldr	r1, [r4, #52]	; 0x34
   2fe00:	ldr	r3, [r4, #76]	; 0x4c
   2fe04:	str	r2, [r4, #16]
   2fe08:	str	r0, [r4, #20]
   2fe0c:	str	r0, [r4, #24]
   2fe10:	movne	r0, #0
   2fe14:	str	r3, [r4]
   2fe18:	str	r1, [r4, #4]
   2fe1c:	strne	r0, [r4, #172]	; 0xac
   2fe20:	strne	r0, [r4, #176]	; 0xb0
   2fe24:	strne	r0, [r4, #180]	; 0xb4
   2fe28:	ldr	r0, [r4, #184]	; 0xb8
   2fe2c:	cmp	r0, #0
   2fe30:	beq	2fe3c <flatcc_builder_custom_reset@@Base+0x358>
   2fe34:	add	r0, r4, #188	; 0xbc
   2fe38:	bl	346d4 <flatcc_emitter_reset@@Base>
   2fe3c:	mov	r0, r6
   2fe40:	sub	sp, fp, #16
   2fe44:	pop	{r4, r5, r6, sl, fp, pc}
   2fe48:	ldr	r0, [r4, #72]	; 0x48
   2fe4c:	cmp	r0, #0
   2fe50:	bne	30010 <flatcc_builder_custom_reset@@Base+0x52c>
   2fe54:	mov	r1, r4
   2fe58:	ldr	r0, [r1, #76]!	; 0x4c
   2fe5c:	cmp	r0, #0
   2fe60:	beq	2feb0 <flatcc_builder_custom_reset@@Base+0x3cc>
   2fe64:	ldr	r0, [r4, #40]	; 0x28
   2fe68:	ldr	r6, [r4, #48]	; 0x30
   2fe6c:	mov	r2, #3
   2fe70:	mov	r3, #1
   2fe74:	str	r2, [sp]
   2fe78:	mov	r2, #1
   2fe7c:	blx	r6
   2fe80:	mvn	r6, #0
   2fe84:	cmp	r0, #0
   2fe88:	bne	2fe3c <flatcc_builder_custom_reset@@Base+0x358>
   2fe8c:	ldr	r0, [r4, #76]	; 0x4c
   2fe90:	ldr	r2, [r4, #80]	; 0x50
   2fe94:	mov	r1, #0
   2fe98:	bl	14eec <memset@plt>
   2fe9c:	mov	r1, r4
   2fea0:	ldr	r0, [r1, #84]!	; 0x54
   2fea4:	cmp	r0, #0
   2fea8:	bne	2fecc <flatcc_builder_custom_reset@@Base+0x3e8>
   2feac:	b	2ff18 <flatcc_builder_custom_reset@@Base+0x434>
   2feb0:	ldr	r0, [r4, #80]	; 0x50
   2feb4:	cmp	r0, #0
   2feb8:	bne	30010 <flatcc_builder_custom_reset@@Base+0x52c>
   2febc:	mov	r1, r4
   2fec0:	ldr	r0, [r1, #84]!	; 0x54
   2fec4:	cmp	r0, #0
   2fec8:	beq	2ff18 <flatcc_builder_custom_reset@@Base+0x434>
   2fecc:	ldr	r0, [r4, #40]	; 0x28
   2fed0:	ldr	r6, [r4, #48]	; 0x30
   2fed4:	mov	r2, #4
   2fed8:	mov	r3, #1
   2fedc:	str	r2, [sp]
   2fee0:	mov	r2, #1
   2fee4:	blx	r6
   2fee8:	mvn	r6, #0
   2feec:	cmp	r0, #0
   2fef0:	bne	2fe3c <flatcc_builder_custom_reset@@Base+0x358>
   2fef4:	ldr	r0, [r4, #84]	; 0x54
   2fef8:	ldr	r2, [r4, #88]	; 0x58
   2fefc:	mov	r1, #0
   2ff00:	bl	14eec <memset@plt>
   2ff04:	ldr	r0, [r4, #92]	; 0x5c
   2ff08:	ldr	r2, [r4, #96]	; 0x60
   2ff0c:	cmp	r0, #0
   2ff10:	bne	2ff34 <flatcc_builder_custom_reset@@Base+0x450>
   2ff14:	b	2ff50 <flatcc_builder_custom_reset@@Base+0x46c>
   2ff18:	ldr	r0, [r4, #88]	; 0x58
   2ff1c:	cmp	r0, #0
   2ff20:	bne	30010 <flatcc_builder_custom_reset@@Base+0x52c>
   2ff24:	ldr	r0, [r4, #92]	; 0x5c
   2ff28:	ldr	r2, [r4, #96]	; 0x60
   2ff2c:	cmp	r0, #0
   2ff30:	beq	2ff50 <flatcc_builder_custom_reset@@Base+0x46c>
   2ff34:	mov	r1, #0
   2ff38:	bl	14eec <memset@plt>
   2ff3c:	mov	r1, r4
   2ff40:	ldr	r0, [r1, #100]!	; 0x64
   2ff44:	cmp	r0, #0
   2ff48:	bne	2ff68 <flatcc_builder_custom_reset@@Base+0x484>
   2ff4c:	b	2ffb4 <flatcc_builder_custom_reset@@Base+0x4d0>
   2ff50:	cmp	r2, #0
   2ff54:	bne	30010 <flatcc_builder_custom_reset@@Base+0x52c>
   2ff58:	mov	r1, r4
   2ff5c:	ldr	r0, [r1, #100]!	; 0x64
   2ff60:	cmp	r0, #0
   2ff64:	beq	2ffb4 <flatcc_builder_custom_reset@@Base+0x4d0>
   2ff68:	ldr	r0, [r4, #40]	; 0x28
   2ff6c:	ldr	r6, [r4, #48]	; 0x30
   2ff70:	mov	r2, #6
   2ff74:	mov	r3, #1
   2ff78:	str	r2, [sp]
   2ff7c:	mov	r2, #1
   2ff80:	blx	r6
   2ff84:	mvn	r6, #0
   2ff88:	cmp	r0, #0
   2ff8c:	bne	2fe3c <flatcc_builder_custom_reset@@Base+0x358>
   2ff90:	ldr	r0, [r4, #100]	; 0x64
   2ff94:	ldr	r2, [r4, #104]	; 0x68
   2ff98:	mov	r1, #0
   2ff9c:	bl	14eec <memset@plt>
   2ffa0:	mov	r1, r4
   2ffa4:	ldr	r0, [r1, #108]!	; 0x6c
   2ffa8:	cmp	r0, #0
   2ffac:	bne	2ffd0 <flatcc_builder_custom_reset@@Base+0x4ec>
   2ffb0:	b	30004 <flatcc_builder_custom_reset@@Base+0x520>
   2ffb4:	ldr	r0, [r4, #104]	; 0x68
   2ffb8:	cmp	r0, #0
   2ffbc:	bne	30010 <flatcc_builder_custom_reset@@Base+0x52c>
   2ffc0:	mov	r1, r4
   2ffc4:	ldr	r0, [r1, #108]!	; 0x6c
   2ffc8:	cmp	r0, #0
   2ffcc:	beq	30004 <flatcc_builder_custom_reset@@Base+0x520>
   2ffd0:	ldr	r0, [r4, #40]	; 0x28
   2ffd4:	ldr	r6, [r4, #48]	; 0x30
   2ffd8:	mov	r2, #7
   2ffdc:	mov	r3, #1
   2ffe0:	str	r2, [sp]
   2ffe4:	mov	r2, #1
   2ffe8:	blx	r6
   2ffec:	mvn	r6, #0
   2fff0:	cmp	r0, #0
   2fff4:	bne	2fe3c <flatcc_builder_custom_reset@@Base+0x358>
   2fff8:	ldr	r0, [r4, #108]	; 0x6c
   2fffc:	ldr	r2, [r4, #112]	; 0x70
   30000:	b	2fda8 <flatcc_builder_custom_reset@@Base+0x2c4>
   30004:	ldr	r0, [r4, #112]	; 0x70
   30008:	cmp	r0, #0
   3000c:	beq	2fdbc <flatcc_builder_custom_reset@@Base+0x2d8>
   30010:	movw	r0, #50416	; 0xc4f0
   30014:	movw	r1, #50434	; 0xc502
   30018:	movw	r3, #50504	; 0xc548
   3001c:	movw	r2, #434	; 0x1b2
   30020:	movt	r0, #4
   30024:	movt	r1, #4
   30028:	movt	r3, #4
   3002c:	bl	14f40 <__assert_fail@plt>

00030030 <flatcc_builder_reset@@Base>:
   30030:	mov	r1, #0
   30034:	mov	r2, #0
   30038:	b	2fae4 <flatcc_builder_custom_reset@@Base>

0003003c <flatcc_builder_clear@@Base>:
   3003c:	push	{r4, sl, fp, lr}
   30040:	add	fp, sp, #8
   30044:	sub	sp, sp, #8
   30048:	mov	r4, r0
   3004c:	ldr	r0, [r0, #40]	; 0x28
   30050:	mov	r1, #0
   30054:	mov	r2, #0
   30058:	mov	r3, #0
   3005c:	ldr	ip, [r4, #48]	; 0x30
   30060:	str	r1, [sp]
   30064:	add	r1, r4, #52	; 0x34
   30068:	blx	ip
   3006c:	ldr	r0, [r4, #40]	; 0x28
   30070:	ldr	ip, [r4, #48]	; 0x30
   30074:	mov	r1, #1
   30078:	mov	r2, #0
   3007c:	mov	r3, #0
   30080:	str	r1, [sp]
   30084:	add	r1, r4, #60	; 0x3c
   30088:	blx	ip
   3008c:	ldr	r0, [r4, #40]	; 0x28
   30090:	ldr	ip, [r4, #48]	; 0x30
   30094:	mov	r1, #2
   30098:	mov	r2, #0
   3009c:	mov	r3, #0
   300a0:	str	r1, [sp]
   300a4:	add	r1, r4, #68	; 0x44
   300a8:	blx	ip
   300ac:	ldr	r0, [r4, #40]	; 0x28
   300b0:	ldr	ip, [r4, #48]	; 0x30
   300b4:	mov	r1, #3
   300b8:	mov	r2, #0
   300bc:	mov	r3, #0
   300c0:	str	r1, [sp]
   300c4:	add	r1, r4, #76	; 0x4c
   300c8:	blx	ip
   300cc:	ldr	r0, [r4, #40]	; 0x28
   300d0:	ldr	ip, [r4, #48]	; 0x30
   300d4:	mov	r1, #4
   300d8:	mov	r2, #0
   300dc:	mov	r3, #0
   300e0:	str	r1, [sp]
   300e4:	add	r1, r4, #84	; 0x54
   300e8:	blx	ip
   300ec:	ldr	r0, [r4, #40]	; 0x28
   300f0:	ldr	ip, [r4, #48]	; 0x30
   300f4:	mov	r1, #5
   300f8:	mov	r2, #0
   300fc:	mov	r3, #0
   30100:	str	r1, [sp]
   30104:	add	r1, r4, #92	; 0x5c
   30108:	blx	ip
   3010c:	ldr	r0, [r4, #40]	; 0x28
   30110:	ldr	ip, [r4, #48]	; 0x30
   30114:	mov	r1, #6
   30118:	mov	r2, #0
   3011c:	mov	r3, #0
   30120:	str	r1, [sp]
   30124:	add	r1, r4, #100	; 0x64
   30128:	blx	ip
   3012c:	ldr	r0, [r4, #40]	; 0x28
   30130:	ldr	ip, [r4, #48]	; 0x30
   30134:	mov	r1, #7
   30138:	mov	r2, #0
   3013c:	mov	r3, #0
   30140:	str	r1, [sp]
   30144:	add	r1, r4, #108	; 0x6c
   30148:	blx	ip
   3014c:	ldr	r0, [r4, #184]	; 0xb8
   30150:	cmp	r0, #0
   30154:	beq	30160 <flatcc_builder_clear@@Base+0x124>
   30158:	add	r0, r4, #188	; 0xbc
   3015c:	bl	347a0 <flatcc_emitter_clear@@Base>
   30160:	mov	r0, r4
   30164:	mov	r1, #0
   30168:	mov	r2, #232	; 0xe8
   3016c:	sub	sp, fp, #8
   30170:	pop	{r4, sl, fp, lr}
   30174:	b	14eec <memset@plt>

00030178 <flatcc_builder_enter_user_frame_ptr@@Base>:
   30178:	push	{r4, r5, r6, r7, fp, lr}
   3017c:	add	fp, sp, #16
   30180:	sub	sp, sp, #8
   30184:	mov	r4, r0
   30188:	ldr	r0, [r0, #112]	; 0x70
   3018c:	add	r1, r1, #7
   30190:	ldr	r7, [r4, #228]	; 0xe4
   30194:	bic	r5, r1, #3
   30198:	add	r6, r4, #108	; 0x6c
   3019c:	add	r2, r7, r5
   301a0:	cmp	r2, r0
   301a4:	bls	301cc <flatcc_builder_enter_user_frame_ptr@@Base+0x54>
   301a8:	ldr	r0, [r4, #40]	; 0x28
   301ac:	ldr	ip, [r4, #48]	; 0x30
   301b0:	mov	r1, #7
   301b4:	mov	r3, #0
   301b8:	str	r1, [sp]
   301bc:	mov	r1, r6
   301c0:	blx	ip
   301c4:	cmp	r0, #0
   301c8:	bne	30220 <flatcc_builder_enter_user_frame_ptr@@Base+0xa8>
   301cc:	ldr	r0, [r6]
   301d0:	adds	r6, r0, r7
   301d4:	beq	30210 <flatcc_builder_enter_user_frame_ptr@@Base+0x98>
   301d8:	mov	r0, r6
   301dc:	mov	r1, #0
   301e0:	mov	r2, r5
   301e4:	bl	14eec <memset@plt>
   301e8:	ldr	r0, [r4, #224]	; 0xe0
   301ec:	str	r0, [r6], #4
   301f0:	ldr	r0, [r4, #228]	; 0xe4
   301f4:	add	r1, r0, #4
   301f8:	add	r0, r0, r5
   301fc:	str	r1, [r4, #224]	; 0xe0
   30200:	str	r0, [r4, #228]	; 0xe4
   30204:	mov	r0, r6
   30208:	sub	sp, fp, #16
   3020c:	pop	{r4, r5, r6, r7, fp, pc}
   30210:	mov	r6, #0
   30214:	mov	r0, r6
   30218:	sub	sp, fp, #16
   3021c:	pop	{r4, r5, r6, r7, fp, pc}
   30220:	movw	r0, #54952	; 0xd6a8
   30224:	movw	r1, #50434	; 0xc502
   30228:	movw	r3, #54498	; 0xd4e2
   3022c:	mov	r2, #308	; 0x134
   30230:	movt	r0, #4
   30234:	movt	r1, #4
   30238:	movt	r3, #4
   3023c:	bl	14f40 <__assert_fail@plt>

00030240 <flatcc_builder_enter_user_frame@@Base>:
   30240:	push	{r4, r5, r6, r7, fp, lr}
   30244:	add	fp, sp, #16
   30248:	sub	sp, sp, #8
   3024c:	mov	r4, r0
   30250:	ldr	r0, [r0, #112]	; 0x70
   30254:	add	r1, r1, #7
   30258:	ldr	r7, [r4, #228]	; 0xe4
   3025c:	bic	r5, r1, #3
   30260:	add	r6, r4, #108	; 0x6c
   30264:	add	r2, r7, r5
   30268:	cmp	r2, r0
   3026c:	bls	30294 <flatcc_builder_enter_user_frame@@Base+0x54>
   30270:	ldr	r0, [r4, #40]	; 0x28
   30274:	ldr	ip, [r4, #48]	; 0x30
   30278:	mov	r1, #7
   3027c:	mov	r3, #0
   30280:	str	r1, [sp]
   30284:	mov	r1, r6
   30288:	blx	ip
   3028c:	cmp	r0, #0
   30290:	bne	302e0 <flatcc_builder_enter_user_frame@@Base+0xa0>
   30294:	ldr	r0, [r6]
   30298:	adds	r6, r0, r7
   3029c:	beq	302d4 <flatcc_builder_enter_user_frame@@Base+0x94>
   302a0:	mov	r0, r6
   302a4:	mov	r1, #0
   302a8:	mov	r2, r5
   302ac:	bl	14eec <memset@plt>
   302b0:	ldr	r0, [r4, #224]	; 0xe0
   302b4:	str	r0, [r6]
   302b8:	ldr	r1, [r4, #228]	; 0xe4
   302bc:	add	r0, r1, #4
   302c0:	add	r1, r1, r5
   302c4:	str	r0, [r4, #224]	; 0xe0
   302c8:	str	r1, [r4, #228]	; 0xe4
   302cc:	sub	sp, fp, #16
   302d0:	pop	{r4, r5, r6, r7, fp, pc}
   302d4:	mov	r0, #0
   302d8:	sub	sp, fp, #16
   302dc:	pop	{r4, r5, r6, r7, fp, pc}
   302e0:	movw	r0, #54952	; 0xd6a8
   302e4:	movw	r1, #50434	; 0xc502
   302e8:	movw	r3, #54498	; 0xd4e2
   302ec:	mov	r2, #308	; 0x134
   302f0:	movt	r0, #4
   302f4:	movt	r1, #4
   302f8:	movt	r3, #4
   302fc:	bl	14f40 <__assert_fail@plt>

00030300 <flatcc_builder_exit_user_frame@@Base>:
   30300:	push	{fp, lr}
   30304:	mov	fp, sp
   30308:	ldr	r1, [r0, #224]	; 0xe0
   3030c:	cmp	r1, #0
   30310:	subne	r2, r1, #4
   30314:	strne	r2, [r0, #228]	; 0xe4
   30318:	ldrne	r2, [r0, #108]	; 0x6c
   3031c:	addne	r1, r2, r1
   30320:	ldrne	r1, [r1, #-4]
   30324:	strne	r1, [r0, #224]	; 0xe0
   30328:	movne	r0, r1
   3032c:	popne	{fp, pc}
   30330:	movw	r0, #50566	; 0xc586
   30334:	movw	r1, #50434	; 0xc502
   30338:	movw	r3, #50591	; 0xc59f
   3033c:	movw	r2, #542	; 0x21e
   30340:	movt	r0, #4
   30344:	movt	r1, #4
   30348:	movt	r3, #4
   3034c:	bl	14f40 <__assert_fail@plt>

00030350 <flatcc_builder_exit_user_frame_at@@Base>:
   30350:	push	{fp, lr}
   30354:	mov	fp, sp
   30358:	ldr	r2, [r0, #224]	; 0xe0
   3035c:	cmp	r2, r1
   30360:	bcc	303ac <flatcc_builder_exit_user_frame_at@@Base+0x5c>
   30364:	cmp	r1, #0
   30368:	str	r1, [r0, #224]	; 0xe0
   3036c:	subne	r2, r1, #4
   30370:	strne	r2, [r0, #228]	; 0xe4
   30374:	ldrne	r2, [r0, #108]	; 0x6c
   30378:	addne	r1, r2, r1
   3037c:	ldrne	r1, [r1, #-4]
   30380:	strne	r1, [r0, #224]	; 0xe0
   30384:	movne	r0, r1
   30388:	popne	{fp, pc}
   3038c:	movw	r0, #50566	; 0xc586
   30390:	movw	r1, #50434	; 0xc502
   30394:	movw	r3, #50591	; 0xc59f
   30398:	movw	r2, #542	; 0x21e
   3039c:	movt	r0, #4
   303a0:	movt	r1, #4
   303a4:	movt	r3, #4
   303a8:	bl	14f40 <__assert_fail@plt>
   303ac:	movw	r0, #50649	; 0xc5d9
   303b0:	movw	r1, #50434	; 0xc502
   303b4:	movw	r3, #50680	; 0xc5f8
   303b8:	movw	r2, #551	; 0x227
   303bc:	movt	r0, #4
   303c0:	movt	r1, #4
   303c4:	movt	r3, #4
   303c8:	bl	14f40 <__assert_fail@plt>

000303cc <flatcc_builder_get_current_user_frame@@Base>:
   303cc:	ldr	r0, [r0, #224]	; 0xe0
   303d0:	bx	lr

000303d4 <flatcc_builder_get_user_frame_ptr@@Base>:
   303d4:	ldr	r0, [r0, #108]	; 0x6c
   303d8:	add	r0, r0, r1
   303dc:	bx	lr

000303e0 <flatcc_builder_embed_buffer@@Base>:
   303e0:	push	{r4, r5, r6, r7, fp, lr}
   303e4:	add	fp, sp, #16
   303e8:	sub	sp, sp, #88	; 0x58
   303ec:	mov	r4, r0
   303f0:	ldr	r0, [fp, #8]
   303f4:	mov	r5, r3
   303f8:	mov	r7, r2
   303fc:	mov	r2, r1
   30400:	sub	r1, fp, #18
   30404:	strh	r0, [fp, #-18]	; 0xffffffee
   30408:	mov	r0, r4
   3040c:	ldr	r3, [r4, #152]	; 0x98
   30410:	cmp	r3, #0
   30414:	movwne	r3, #1
   30418:	bl	30550 <flatcc_builder_embed_buffer@@Base+0x170>
   3041c:	ldr	r1, [fp, #12]
   30420:	ldrh	r3, [fp, #-18]	; 0xffffffee
   30424:	ldr	r0, [r4, #136]	; 0x88
   30428:	mov	r2, #0
   3042c:	str	r2, [sp, #12]
   30430:	str	r2, [sp, #8]
   30434:	and	r1, r1, #2
   30438:	sub	r3, r3, #1
   3043c:	add	r1, r5, r1, lsl #1
   30440:	sub	r1, r0, r1
   30444:	and	r3, r3, r1
   30448:	add	r1, r3, r5
   3044c:	str	r1, [fp, #-24]	; 0xffffffe8
   30450:	ldr	r1, [r4, #152]	; 0x98
   30454:	cmp	r1, #0
   30458:	mov	r1, #0
   3045c:	beq	3047c <flatcc_builder_embed_buffer@@Base+0x9c>
   30460:	mov	r1, #4
   30464:	sub	r2, fp, #24
   30468:	str	r1, [sp, #20]
   3046c:	str	r2, [sp, #16]
   30470:	mov	r2, #1
   30474:	str	r1, [sp, #8]
   30478:	str	r2, [sp, #12]
   3047c:	cmp	r5, #0
   30480:	beq	304a4 <flatcc_builder_embed_buffer@@Base+0xc4>
   30484:	add	r6, sp, #8
   30488:	add	r1, r1, r5
   3048c:	add	r6, r6, r2, lsl #3
   30490:	add	r2, r2, #1
   30494:	str	r1, [sp, #8]
   30498:	str	r7, [r6, #8]
   3049c:	str	r5, [r6, #12]
   304a0:	str	r2, [sp, #12]
   304a4:	cmp	r3, #0
   304a8:	beq	304d4 <flatcc_builder_embed_buffer@@Base+0xf4>
   304ac:	add	r7, sp, #8
   304b0:	movw	r6, #49904	; 0xc2f0
   304b4:	add	r1, r1, r3
   304b8:	add	r7, r7, r2, lsl #3
   304bc:	movt	r6, #4
   304c0:	add	r2, r2, #1
   304c4:	str	r1, [sp, #8]
   304c8:	str	r6, [r7, #8]
   304cc:	str	r3, [r7, #12]
   304d0:	str	r2, [sp, #12]
   304d4:	cmp	r1, #0
   304d8:	ble	30530 <flatcc_builder_embed_buffer@@Base+0x150>
   304dc:	sub	r5, r0, r1
   304e0:	ldr	r0, [r4, #36]	; 0x24
   304e4:	ldr	r7, [r4, #44]	; 0x2c
   304e8:	str	r1, [sp]
   304ec:	add	r1, sp, #8
   304f0:	add	r1, r1, #8
   304f4:	mov	r3, r5
   304f8:	blx	r7
   304fc:	cmp	r0, #0
   30500:	streq	r5, [r4, #136]	; 0x88
   30504:	moveq	r0, r5
   30508:	subeq	sp, fp, #16
   3050c:	popeq	{r4, r5, r6, r7, fp, pc}
   30510:	movw	r0, #54952	; 0xd6a8
   30514:	movw	r1, #50434	; 0xc502
   30518:	movw	r3, #54631	; 0xd567
   3051c:	movw	r2, #651	; 0x28b
   30520:	movt	r0, #4
   30524:	movt	r1, #4
   30528:	movt	r3, #4
   3052c:	bl	14f40 <__assert_fail@plt>
   30530:	movw	r0, #54952	; 0xd6a8
   30534:	movw	r1, #50434	; 0xc502
   30538:	movw	r3, #54631	; 0xd567
   3053c:	movw	r2, #647	; 0x287
   30540:	movt	r0, #4
   30544:	movt	r1, #4
   30548:	movt	r3, #4
   3054c:	bl	14f40 <__assert_fail@plt>
   30550:	push	{r4, sl, fp, lr}
   30554:	add	fp, sp, #8
   30558:	sub	sp, sp, #80	; 0x50
   3055c:	cmp	r2, #0
   30560:	bne	30570 <flatcc_builder_embed_buffer@@Base+0x190>
   30564:	ldrh	r2, [r0, #132]	; 0x84
   30568:	cmp	r2, #0
   3056c:	movweq	r2, #1
   30570:	ldrh	r4, [r1]
   30574:	cmp	r4, #4
   30578:	movwcc	r4, #4
   3057c:	cmpcs	r4, r2
   30580:	bcs	30590 <flatcc_builder_embed_buffer@@Base+0x1b0>
   30584:	cmp	r4, r2
   30588:	movcc	r4, r2
   3058c:	strh	r4, [r1]
   30590:	cmp	r3, #0
   30594:	bne	30608 <flatcc_builder_embed_buffer@@Base+0x228>
   30598:	ldr	r4, [r0, #140]	; 0x8c
   3059c:	sub	r1, r2, #1
   305a0:	ands	r1, r4, r1
   305a4:	beq	30608 <flatcc_builder_embed_buffer@@Base+0x228>
   305a8:	movw	r2, #49904	; 0xc2f0
   305ac:	str	r1, [sp, #20]
   305b0:	cmn	r1, #1
   305b4:	movt	r2, #4
   305b8:	str	r2, [sp, #16]
   305bc:	mov	r2, #1
   305c0:	str	r1, [sp, #8]
   305c4:	str	r2, [sp, #12]
   305c8:	add	r2, r4, r1
   305cc:	str	r2, [r0, #140]	; 0x8c
   305d0:	ble	30610 <flatcc_builder_embed_buffer@@Base+0x230>
   305d4:	ldr	r2, [r0, #36]	; 0x24
   305d8:	ldr	ip, [r0, #44]	; 0x2c
   305dc:	add	r0, sp, #8
   305e0:	str	r1, [sp]
   305e4:	mov	r3, r4
   305e8:	add	r1, r0, #8
   305ec:	mov	r0, r2
   305f0:	mov	r2, #1
   305f4:	blx	ip
   305f8:	cmp	r0, #0
   305fc:	bne	30630 <flatcc_builder_embed_buffer@@Base+0x250>
   30600:	cmn	r4, #1
   30604:	beq	30650 <flatcc_builder_embed_buffer@@Base+0x270>
   30608:	sub	sp, fp, #8
   3060c:	pop	{r4, sl, fp, pc}
   30610:	movw	r0, #54952	; 0xd6a8
   30614:	movw	r1, #50434	; 0xc502
   30618:	movw	r3, #54819	; 0xd623
   3061c:	movw	r2, #673	; 0x2a1
   30620:	movt	r0, #4
   30624:	movt	r1, #4
   30628:	movt	r3, #4
   3062c:	bl	14f40 <__assert_fail@plt>
   30630:	movw	r0, #54952	; 0xd6a8
   30634:	movw	r1, #50434	; 0xc502
   30638:	movw	r3, #54819	; 0xd623
   3063c:	movw	r2, #677	; 0x2a5
   30640:	movt	r0, #4
   30644:	movt	r1, #4
   30648:	movt	r3, #4
   3064c:	bl	14f40 <__assert_fail@plt>
   30650:	movw	r0, #54952	; 0xd6a8
   30654:	movw	r1, #50434	; 0xc502
   30658:	movw	r3, #54565	; 0xd525
   3065c:	movw	r2, #702	; 0x2be
   30660:	movt	r0, #4
   30664:	movt	r1, #4
   30668:	movt	r3, #4
   3066c:	bl	14f40 <__assert_fail@plt>

00030670 <flatcc_builder_create_buffer@@Base>:
   30670:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   30674:	add	fp, sp, #28
   30678:	sub	sp, sp, #100	; 0x64
   3067c:	ldr	sl, [fp, #12]
   30680:	mov	r4, r0
   30684:	ldr	r0, [fp, #8]
   30688:	mov	r7, r1
   3068c:	mov	r5, #0
   30690:	mov	r6, r3
   30694:	sub	r1, fp, #30
   30698:	str	r5, [sp, #12]
   3069c:	and	r9, sl, #1
   306a0:	strh	r0, [fp, #-30]	; 0xffffffe2
   306a4:	mov	r0, r4
   306a8:	mov	r3, r9
   306ac:	bl	30550 <flatcc_builder_embed_buffer@@Base+0x170>
   306b0:	ldrh	r0, [r4, #128]	; 0x80
   306b4:	ldrh	r1, [fp, #-30]	; 0xffffffe2
   306b8:	str	r6, [sp, #8]
   306bc:	cmp	r0, r1
   306c0:	strhcc	r1, [r4, #128]	; 0x80
   306c4:	cmp	r7, #0
   306c8:	beq	306e4 <flatcc_builder_create_buffer@@Base+0x74>
   306cc:	ldr	r5, [r7]
   306d0:	cmp	r5, #0
   306d4:	str	r5, [sp, #12]
   306d8:	movwne	r5, #1
   306dc:	lsl	r7, r5, #2
   306e0:	b	306e8 <flatcc_builder_create_buffer@@Base+0x78>
   306e4:	mov	r7, #0
   306e8:	ldr	r0, [r4, #136]	; 0x88
   306ec:	and	r2, sl, #2
   306f0:	mov	r3, #0
   306f4:	sub	r6, r1, #1
   306f8:	ands	ip, sl, #3
   306fc:	mov	sl, #4
   30700:	mov	r1, #4
   30704:	str	r3, [sp, #20]
   30708:	str	r3, [sp, #16]
   3070c:	sub	r2, r0, r2, lsl #1
   30710:	sub	r2, r2, r7
   30714:	sub	r2, r2, #4
   30718:	beq	3073c <flatcc_builder_create_buffer@@Base+0xcc>
   3071c:	mov	r1, #4
   30720:	sub	r3, fp, #40	; 0x28
   30724:	str	r1, [sp, #28]
   30728:	str	r3, [sp, #24]
   3072c:	str	r1, [sp, #16]
   30730:	mov	r3, #1
   30734:	mov	r1, #8
   30738:	str	r3, [sp, #20]
   3073c:	add	lr, sp, #16
   30740:	and	r6, r2, r6
   30744:	sub	r8, fp, #36	; 0x24
   30748:	str	r1, [sp, #16]
   3074c:	cmp	r5, #0
   30750:	add	r2, lr, r3, lsl #3
   30754:	str	r8, [r2, #8]
   30758:	str	sl, [r2, #12]
   3075c:	add	r2, r3, #1
   30760:	str	r2, [sp, #20]
   30764:	beq	30788 <flatcc_builder_create_buffer@@Base+0x118>
   30768:	add	r2, lr, r2, lsl #3
   3076c:	add	r1, r1, r7
   30770:	add	r5, sp, #12
   30774:	str	r1, [sp, #16]
   30778:	str	r5, [r2, #8]
   3077c:	str	r7, [r2, #12]
   30780:	orr	r2, r3, #2
   30784:	str	r2, [sp, #20]
   30788:	cmp	r6, #0
   3078c:	beq	307b4 <flatcc_builder_create_buffer@@Base+0x144>
   30790:	movw	r5, #49904	; 0xc2f0
   30794:	add	r3, lr, r2, lsl #3
   30798:	add	r1, r1, r6
   3079c:	add	r2, r2, #1
   307a0:	movt	r5, #4
   307a4:	str	r1, [sp, #16]
   307a8:	str	r5, [r3, #8]
   307ac:	str	r6, [r3, #12]
   307b0:	str	r2, [sp, #20]
   307b4:	sub	r7, r0, r1
   307b8:	cmp	ip, #0
   307bc:	mov	r6, #144	; 0x90
   307c0:	ldr	r3, [sp, #8]
   307c4:	mov	r0, r7
   307c8:	addne	r0, r0, #4
   307cc:	cmp	r9, #0
   307d0:	movweq	r6, #140	; 0x8c
   307d4:	cmp	r1, #0
   307d8:	ldr	r6, [r4, r6]
   307dc:	sub	r3, r3, r0
   307e0:	str	r3, [fp, #-36]	; 0xffffffdc
   307e4:	sub	r0, r6, r0
   307e8:	str	r0, [fp, #-40]	; 0xffffffd8
   307ec:	ble	30844 <flatcc_builder_create_buffer@@Base+0x1d4>
   307f0:	ldr	r0, [r4, #36]	; 0x24
   307f4:	ldr	r6, [r4, #44]	; 0x2c
   307f8:	str	r1, [sp]
   307fc:	add	r1, lr, #8
   30800:	mov	r3, r7
   30804:	blx	r6
   30808:	cmp	r0, #0
   3080c:	bne	30864 <flatcc_builder_create_buffer@@Base+0x1f4>
   30810:	cmp	r7, #0
   30814:	str	r7, [r4, #136]	; 0x88
   30818:	movne	r0, r7
   3081c:	subne	sp, fp, #28
   30820:	popne	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   30824:	movw	r0, #54952	; 0xd6a8
   30828:	movw	r1, #50434	; 0xc502
   3082c:	movw	r3, #50749	; 0xc63d
   30830:	mov	r2, #772	; 0x304
   30834:	movt	r0, #4
   30838:	movt	r1, #4
   3083c:	movt	r3, #4
   30840:	bl	14f40 <__assert_fail@plt>
   30844:	movw	r0, #54952	; 0xd6a8
   30848:	movw	r1, #50434	; 0xc502
   3084c:	movw	r3, #54631	; 0xd567
   30850:	movw	r2, #647	; 0x287
   30854:	movt	r0, #4
   30858:	movt	r1, #4
   3085c:	movt	r3, #4
   30860:	bl	14f40 <__assert_fail@plt>
   30864:	movw	r0, #54952	; 0xd6a8
   30868:	movw	r1, #50434	; 0xc502
   3086c:	movw	r3, #54631	; 0xd567
   30870:	movw	r2, #651	; 0x28b
   30874:	movt	r0, #4
   30878:	movt	r1, #4
   3087c:	movt	r3, #4
   30880:	bl	14f40 <__assert_fail@plt>

00030884 <flatcc_builder_create_struct@@Base>:
   30884:	push	{r4, r5, r6, sl, fp, lr}
   30888:	add	fp, sp, #16
   3088c:	sub	sp, sp, #80	; 0x50
   30890:	cmp	r3, #0
   30894:	beq	3096c <flatcc_builder_create_struct@@Base+0xe8>
   30898:	mov	r5, r0
   3089c:	ldrh	r0, [r0, #128]	; 0x80
   308a0:	mov	r4, #0
   308a4:	cmp	r0, r3
   308a8:	strhcc	r3, [r5, #128]	; 0x80
   308ac:	sub	r3, r3, #1
   308b0:	cmp	r2, #0
   308b4:	ldr	r0, [r5, #136]	; 0x88
   308b8:	str	r4, [sp, #12]
   308bc:	str	r4, [sp, #8]
   308c0:	movne	r4, #1
   308c4:	strne	r2, [sp, #20]
   308c8:	strne	r1, [sp, #16]
   308cc:	strne	r2, [sp, #8]
   308d0:	strne	r4, [sp, #12]
   308d4:	sub	r6, r0, r2
   308d8:	and	r3, r6, r3
   308dc:	cmp	r3, #0
   308e0:	beq	3090c <flatcc_builder_create_struct@@Base+0x88>
   308e4:	add	r1, sp, #8
   308e8:	movw	r6, #49904	; 0xc2f0
   308ec:	add	r2, r3, r2
   308f0:	add	r1, r1, r4, lsl #3
   308f4:	movt	r6, #4
   308f8:	add	r4, r4, #1
   308fc:	str	r2, [sp, #8]
   30900:	str	r6, [r1, #8]
   30904:	str	r3, [r1, #12]
   30908:	str	r4, [sp, #12]
   3090c:	cmp	r2, #0
   30910:	ble	3098c <flatcc_builder_create_struct@@Base+0x108>
   30914:	sub	r6, r0, r2
   30918:	ldr	r0, [r5, #36]	; 0x24
   3091c:	ldr	ip, [r5, #44]	; 0x2c
   30920:	add	r1, sp, #8
   30924:	str	r2, [sp]
   30928:	mov	r2, r4
   3092c:	add	r1, r1, #8
   30930:	mov	r3, r6
   30934:	blx	ip
   30938:	cmp	r0, #0
   3093c:	streq	r6, [r5, #136]	; 0x88
   30940:	moveq	r0, r6
   30944:	subeq	sp, fp, #16
   30948:	popeq	{r4, r5, r6, sl, fp, pc}
   3094c:	movw	r0, #54952	; 0xd6a8
   30950:	movw	r1, #50434	; 0xc502
   30954:	movw	r3, #54631	; 0xd567
   30958:	movw	r2, #651	; 0x28b
   3095c:	movt	r0, #4
   30960:	movt	r1, #4
   30964:	movt	r3, #4
   30968:	bl	14f40 <__assert_fail@plt>
   3096c:	movw	r0, #50880	; 0xc6c0
   30970:	movw	r1, #50434	; 0xc502
   30974:	movw	r3, #50891	; 0xc6cb
   30978:	movw	r2, #783	; 0x30f
   3097c:	movt	r0, #4
   30980:	movt	r1, #4
   30984:	movt	r3, #4
   30988:	bl	14f40 <__assert_fail@plt>
   3098c:	movw	r0, #54952	; 0xd6a8
   30990:	movw	r1, #50434	; 0xc502
   30994:	movw	r3, #54631	; 0xd567
   30998:	movw	r2, #647	; 0x287
   3099c:	movt	r0, #4
   309a0:	movt	r1, #4
   309a4:	movt	r3, #4
   309a8:	bl	14f40 <__assert_fail@plt>

000309ac <flatcc_builder_start_buffer@@Base>:
   309ac:	push	{r4, r5, r6, r7, fp, lr}
   309b0:	add	fp, sp, #16
   309b4:	mov	r5, r1
   309b8:	ldrh	r1, [r0, #128]	; 0x80
   309bc:	mov	r6, r3
   309c0:	mov	r7, r2
   309c4:	mov	r4, r0
   309c8:	bl	30a68 <flatcc_builder_start_buffer@@Base+0xbc>
   309cc:	mov	r1, r0
   309d0:	mvn	r0, #0
   309d4:	cmp	r1, #0
   309d8:	popne	{r4, r5, r6, r7, fp, pc}
   309dc:	mov	r0, #1
   309e0:	cmp	r5, #0
   309e4:	strh	r0, [r4, #128]	; 0x80
   309e8:	ldrh	r1, [r4, #132]	; 0x84
   309ec:	ldr	r2, [r4, #32]
   309f0:	strh	r1, [r2, #34]	; 0x22
   309f4:	strh	r7, [r4, #132]	; 0x84
   309f8:	ldrh	r1, [r4, #164]	; 0xa4
   309fc:	ldr	r2, [r4, #32]
   30a00:	strh	r1, [r2, #32]
   30a04:	strh	r6, [r4, #164]	; 0xa4
   30a08:	ldr	r1, [r4, #32]
   30a0c:	ldr	r2, [r4, #144]	; 0x90
   30a10:	str	r2, [r1, #20]
   30a14:	ldr	r1, [r4, #32]
   30a18:	ldr	r2, [r4, #152]	; 0x98
   30a1c:	str	r2, [r1, #28]
   30a20:	ldr	r3, [r4, #148]	; 0x94
   30a24:	ldr	r1, [r4, #32]
   30a28:	ldr	r2, [r4, #136]	; 0x88
   30a2c:	ldr	r7, [r4, #168]	; 0xa8
   30a30:	add	r6, r3, #1
   30a34:	str	r2, [r4, #144]	; 0x90
   30a38:	str	r6, [r4, #148]	; 0x94
   30a3c:	str	r3, [r4, #152]	; 0x98
   30a40:	str	r7, [r1, #16]
   30a44:	movw	r1, #49904	; 0xc2f0
   30a48:	movt	r1, #4
   30a4c:	movne	r1, r5
   30a50:	ldr	r1, [r1]
   30a54:	str	r1, [r4, #168]	; 0xa8
   30a58:	ldr	r1, [r4, #32]
   30a5c:	strh	r0, [r1, #14]
   30a60:	mov	r0, #0
   30a64:	pop	{r4, r5, r6, r7, fp, pc}
   30a68:	push	{r4, r5, r6, r7, fp, lr}
   30a6c:	add	fp, sp, #16
   30a70:	sub	sp, sp, #8
   30a74:	mov	r5, r1
   30a78:	ldr	r1, [r0, #156]	; 0x9c
   30a7c:	ldr	r2, [r0, #160]	; 0xa0
   30a80:	mov	r4, r0
   30a84:	add	r0, r1, #1
   30a88:	cmp	r1, r2
   30a8c:	str	r0, [r4, #156]	; 0x9c
   30a90:	bge	30aa4 <flatcc_builder_start_buffer@@Base+0xf8>
   30a94:	ldr	r0, [r4, #32]
   30a98:	add	r0, r0, #36	; 0x24
   30a9c:	str	r0, [r4, #32]
   30aa0:	b	30b38 <flatcc_builder_start_buffer@@Base+0x18c>
   30aa4:	ldr	r2, [r4, #176]	; 0xb0
   30aa8:	mvn	r6, #0
   30aac:	cmp	r2, #1
   30ab0:	cmpge	r1, r2
   30ab4:	bge	30b70 <flatcc_builder_start_buffer@@Base+0x1c4>
   30ab8:	add	r7, r0, r0, lsl #3
   30abc:	ldr	r0, [r4, #88]	; 0x58
   30ac0:	lsl	r2, r7, #2
   30ac4:	cmp	r2, r0
   30ac8:	bls	30af0 <flatcc_builder_start_buffer@@Base+0x144>
   30acc:	ldr	r0, [r4, #40]	; 0x28
   30ad0:	ldr	ip, [r4, #48]	; 0x30
   30ad4:	mov	r3, #4
   30ad8:	add	r1, r4, #84	; 0x54
   30adc:	str	r3, [sp]
   30ae0:	mov	r3, #0
   30ae4:	blx	ip
   30ae8:	cmp	r0, #0
   30aec:	bne	30b7c <flatcc_builder_start_buffer@@Base+0x1d0>
   30af0:	ldr	r1, [r4, #84]	; 0x54
   30af4:	mvn	r0, #35	; 0x23
   30af8:	add	r0, r0, r7, lsl #2
   30afc:	adds	r0, r0, r1
   30b00:	str	r0, [r4, #32]
   30b04:	beq	30b70 <flatcc_builder_start_buffer@@Base+0x1c4>
   30b08:	ldr	r1, [r4, #88]	; 0x58
   30b0c:	movw	r3, #36409	; 0x8e39
   30b10:	ldr	r2, [r4, #176]	; 0xb0
   30b14:	movt	r3, #14563	; 0x38e3
   30b18:	umull	r1, r3, r1, r3
   30b1c:	cmp	r2, r3, lsr #3
   30b20:	lsr	r1, r3, #3
   30b24:	mov	r3, r1
   30b28:	movlt	r3, r2
   30b2c:	cmp	r2, #0
   30b30:	movle	r3, r1
   30b34:	str	r3, [r4, #160]	; 0xa0
   30b38:	ldr	r1, [r4, #20]
   30b3c:	mvn	r3, #3
   30b40:	mov	r6, #0
   30b44:	str	r1, [r0, #8]
   30b48:	ldrh	r2, [r4, #130]	; 0x82
   30b4c:	strh	r2, [r0, #12]
   30b50:	strh	r5, [r4, #130]	; 0x82
   30b54:	ldr	r2, [r4, #28]
   30b58:	stm	r0, {r2, r3}
   30b5c:	add	r0, r1, r2
   30b60:	str	r6, [r4, #20]
   30b64:	add	r0, r0, #7
   30b68:	bic	r0, r0, #7
   30b6c:	str	r0, [r4, #28]
   30b70:	mov	r0, r6
   30b74:	sub	sp, fp, #16
   30b78:	pop	{r4, r5, r6, r7, fp, pc}
   30b7c:	movw	r0, #54952	; 0xd6a8
   30b80:	movw	r1, #50434	; 0xc502
   30b84:	movw	r3, #54498	; 0xd4e2
   30b88:	mov	r2, #308	; 0x134
   30b8c:	movt	r0, #4
   30b90:	movt	r1, #4
   30b94:	movt	r3, #4
   30b98:	bl	14f40 <__assert_fail@plt>

00030b9c <flatcc_builder_end_buffer@@Base>:
   30b9c:	push	{r4, r5, r6, sl, fp, lr}
   30ba0:	add	fp, sp, #16
   30ba4:	sub	sp, sp, #8
   30ba8:	mov	r4, r0
   30bac:	ldr	r0, [r0, #32]
   30bb0:	ldrh	r0, [r0, #14]
   30bb4:	cmp	r0, #1
   30bb8:	bne	30cac <flatcc_builder_end_buffer@@Base+0x110>
   30bbc:	mov	r3, r1
   30bc0:	ldr	r1, [r4, #152]	; 0x98
   30bc4:	ldrh	r0, [r4, #164]	; 0xa4
   30bc8:	ldrh	r2, [r4, #132]	; 0x84
   30bcc:	cmp	r1, #0
   30bd0:	ldrh	r1, [r4, #128]	; 0x80
   30bd4:	and	r0, r0, #2
   30bd8:	orrne	r0, r0, #1
   30bdc:	cmp	r1, r2
   30be0:	movcc	r1, r2
   30be4:	strhcc	r2, [r4, #128]	; 0x80
   30be8:	str	r0, [sp, #4]
   30bec:	mov	r0, r4
   30bf0:	str	r1, [sp]
   30bf4:	add	r1, r4, #168	; 0xa8
   30bf8:	bl	30670 <flatcc_builder_create_buffer@@Base>
   30bfc:	mov	r6, r0
   30c00:	cmp	r0, #0
   30c04:	beq	30ca0 <flatcc_builder_end_buffer@@Base+0x104>
   30c08:	ldr	r1, [r4, #32]
   30c0c:	ldr	r0, [r4, #16]
   30c10:	ldr	r2, [r4, #20]
   30c14:	ldr	r3, [r1, #20]
   30c18:	str	r3, [r4, #144]	; 0x90
   30c1c:	ldr	r3, [r1, #28]
   30c20:	str	r3, [r4, #152]	; 0x98
   30c24:	ldr	r3, [r1, #16]
   30c28:	str	r3, [r4, #168]	; 0xa8
   30c2c:	ldrh	r1, [r1, #32]
   30c30:	strh	r1, [r4, #164]	; 0xa4
   30c34:	mov	r1, #0
   30c38:	bl	14eec <memset@plt>
   30c3c:	ldr	r0, [r4, #32]
   30c40:	ldr	r1, [r4, #60]	; 0x3c
   30c44:	ldr	r2, [r4, #64]	; 0x40
   30c48:	ldr	r3, [r0, #8]
   30c4c:	str	r3, [r4, #20]
   30c50:	ldr	r3, [r0]
   30c54:	str	r3, [r4, #28]
   30c58:	add	r1, r1, r3
   30c5c:	ldr	r5, [r0, #4]
   30c60:	str	r1, [r4, #16]
   30c64:	sub	r1, r2, r3
   30c68:	cmp	r1, r5
   30c6c:	movhi	r1, r5
   30c70:	str	r1, [r4, #24]
   30c74:	ldrh	r1, [r4, #130]	; 0x82
   30c78:	ldrh	r2, [r4, #128]	; 0x80
   30c7c:	cmp	r2, r1
   30c80:	strhcc	r1, [r4, #128]	; 0x80
   30c84:	ldrh	r1, [r0, #12]
   30c88:	sub	r0, r0, #36	; 0x24
   30c8c:	str	r0, [r4, #32]
   30c90:	strh	r1, [r4, #130]	; 0x82
   30c94:	ldr	r0, [r4, #156]	; 0x9c
   30c98:	sub	r0, r0, #1
   30c9c:	str	r0, [r4, #156]	; 0x9c
   30ca0:	mov	r0, r6
   30ca4:	sub	sp, fp, #16
   30ca8:	pop	{r4, r5, r6, sl, fp, pc}
   30cac:	movw	r0, #50993	; 0xc731
   30cb0:	movw	r1, #50434	; 0xc502
   30cb4:	movw	r3, #51037	; 0xc75d
   30cb8:	movw	r2, #838	; 0x346
   30cbc:	movt	r0, #4
   30cc0:	movt	r1, #4
   30cc4:	movt	r3, #4
   30cc8:	bl	14f40 <__assert_fail@plt>

00030ccc <flatcc_builder_start_struct@@Base>:
   30ccc:	push	{r4, r5, r6, r7, fp, lr}
   30cd0:	add	fp, sp, #16
   30cd4:	sub	sp, sp, #8
   30cd8:	mov	r6, r1
   30cdc:	mov	r1, r2
   30ce0:	mov	r4, r0
   30ce4:	bl	30a68 <flatcc_builder_start_buffer@@Base+0xbc>
   30ce8:	mov	r5, #0
   30cec:	cmp	r0, #0
   30cf0:	bne	30d6c <flatcc_builder_start_struct@@Base+0xa0>
   30cf4:	ldr	r2, [r4, #32]
   30cf8:	mov	r0, #2
   30cfc:	mvn	r7, #3
   30d00:	strh	r0, [r2, #14]
   30d04:	ldr	r1, [r4, #28]
   30d08:	ldr	r3, [r4, #64]	; 0x40
   30d0c:	ldr	r0, [r4, #60]	; 0x3c
   30d10:	sub	r3, r3, r1
   30d14:	add	r0, r0, r1
   30d18:	cmn	r3, #4
   30d1c:	str	r0, [r4, #16]
   30d20:	movcs	r3, r7
   30d24:	str	r3, [r4, #24]
   30d28:	str	r7, [r2, #4]
   30d2c:	ldr	r7, [r4, #20]
   30d30:	add	r2, r7, r6
   30d34:	cmp	r2, r3
   30d38:	str	r2, [r4, #20]
   30d3c:	bcc	30da8 <flatcc_builder_start_struct@@Base+0xdc>
   30d40:	ldr	r0, [r4, #40]	; 0x28
   30d44:	ldr	r6, [r4, #48]	; 0x30
   30d48:	add	r1, r1, r2
   30d4c:	mov	r3, #1
   30d50:	str	r3, [sp]
   30d54:	add	r2, r1, #1
   30d58:	add	r1, r4, #60	; 0x3c
   30d5c:	mov	r3, #1
   30d60:	blx	r6
   30d64:	cmp	r0, #0
   30d68:	beq	30d78 <flatcc_builder_start_struct@@Base+0xac>
   30d6c:	mov	r0, r5
   30d70:	sub	sp, fp, #16
   30d74:	pop	{r4, r5, r6, r7, fp, pc}
   30d78:	ldr	r1, [r4, #28]
   30d7c:	ldr	r0, [r4, #60]	; 0x3c
   30d80:	ldr	r3, [r4, #64]	; 0x40
   30d84:	ldr	r2, [r4, #32]
   30d88:	add	r0, r0, r1
   30d8c:	sub	r1, r3, r1
   30d90:	mvn	r3, #3
   30d94:	cmn	r1, #4
   30d98:	str	r0, [r4, #16]
   30d9c:	movcs	r1, r3
   30da0:	str	r1, [r4, #24]
   30da4:	str	r3, [r2, #4]
   30da8:	add	r5, r0, r7
   30dac:	mov	r0, r5
   30db0:	sub	sp, fp, #16
   30db4:	pop	{r4, r5, r6, r7, fp, pc}

00030db8 <flatcc_builder_struct_edit@@Base>:
   30db8:	ldr	r0, [r0, #16]
   30dbc:	bx	lr

00030dc0 <flatcc_builder_end_struct@@Base>:
   30dc0:	push	{r4, r5, fp, lr}
   30dc4:	add	fp, sp, #8
   30dc8:	mov	r4, r0
   30dcc:	ldr	r0, [r0, #32]
   30dd0:	ldrh	r0, [r0, #14]
   30dd4:	cmp	r0, #2
   30dd8:	bne	30e78 <flatcc_builder_end_struct@@Base+0xb8>
   30ddc:	ldrh	r3, [r4, #130]	; 0x82
   30de0:	ldr	r1, [r4, #16]
   30de4:	ldr	r2, [r4, #20]
   30de8:	mov	r0, r4
   30dec:	bl	30884 <flatcc_builder_create_struct@@Base>
   30df0:	mov	r5, r0
   30df4:	cmp	r0, #0
   30df8:	beq	30e70 <flatcc_builder_end_struct@@Base+0xb0>
   30dfc:	ldr	r0, [r4, #16]
   30e00:	ldr	r2, [r4, #20]
   30e04:	mov	r1, #0
   30e08:	bl	14eec <memset@plt>
   30e0c:	ldr	r0, [r4, #32]
   30e10:	ldr	r1, [r4, #60]	; 0x3c
   30e14:	ldr	ip, [r4, #64]	; 0x40
   30e18:	ldr	r3, [r0, #8]
   30e1c:	str	r3, [r4, #20]
   30e20:	ldr	r3, [r0]
   30e24:	str	r3, [r4, #28]
   30e28:	add	r1, r1, r3
   30e2c:	ldr	r2, [r0, #4]
   30e30:	str	r1, [r4, #16]
   30e34:	sub	r1, ip, r3
   30e38:	cmp	r1, r2
   30e3c:	movhi	r1, r2
   30e40:	str	r1, [r4, #24]
   30e44:	ldrh	r1, [r4, #130]	; 0x82
   30e48:	ldrh	r2, [r4, #128]	; 0x80
   30e4c:	cmp	r2, r1
   30e50:	strhcc	r1, [r4, #128]	; 0x80
   30e54:	ldrh	r1, [r0, #12]
   30e58:	sub	r0, r0, #36	; 0x24
   30e5c:	str	r0, [r4, #32]
   30e60:	strh	r1, [r4, #130]	; 0x82
   30e64:	ldr	r0, [r4, #156]	; 0x9c
   30e68:	sub	r0, r0, #1
   30e6c:	str	r0, [r4, #156]	; 0x9c
   30e70:	mov	r0, r5
   30e74:	pop	{r4, r5, fp, pc}
   30e78:	movw	r0, #51126	; 0xc7b6
   30e7c:	movw	r1, #50434	; 0xc502
   30e80:	movw	r3, #51170	; 0xc7e2
   30e84:	mov	r2, #872	; 0x368
   30e88:	movt	r0, #4
   30e8c:	movt	r1, #4
   30e90:	movt	r3, #4
   30e94:	bl	14f40 <__assert_fail@plt>

00030e98 <flatcc_builder_extend_vector@@Base>:
   30e98:	push	{r4, r5, fp, lr}
   30e9c:	add	fp, sp, #8
   30ea0:	sub	sp, sp, #8
   30ea4:	mov	r4, r0
   30ea8:	ldr	r0, [r0, #32]
   30eac:	ldr	r2, [r0, #20]
   30eb0:	adds	r2, r2, r1
   30eb4:	bcs	30f74 <flatcc_builder_extend_vector@@Base+0xdc>
   30eb8:	ldr	r3, [r0, #24]
   30ebc:	cmp	r2, r3
   30ec0:	bhi	30f74 <flatcc_builder_extend_vector@@Base+0xdc>
   30ec4:	str	r2, [r0, #20]
   30ec8:	ldr	r2, [r4, #32]
   30ecc:	ldr	r5, [r4, #20]
   30ed0:	ldr	r0, [r4, #24]
   30ed4:	ldr	r2, [r2, #16]
   30ed8:	mla	r1, r2, r1, r5
   30edc:	cmp	r1, r0
   30ee0:	str	r1, [r4, #20]
   30ee4:	bcs	30ef8 <flatcc_builder_extend_vector@@Base+0x60>
   30ee8:	ldr	r0, [r4, #16]
   30eec:	add	r0, r0, r5
   30ef0:	sub	sp, fp, #8
   30ef4:	pop	{r4, r5, fp, pc}
   30ef8:	ldr	r2, [r4, #28]
   30efc:	ldr	r0, [r4, #40]	; 0x28
   30f00:	ldr	ip, [r4, #48]	; 0x30
   30f04:	mov	r3, #1
   30f08:	str	r3, [sp]
   30f0c:	mov	r3, #1
   30f10:	add	r1, r1, r2
   30f14:	add	r2, r1, #1
   30f18:	add	r1, r4, #60	; 0x3c
   30f1c:	blx	ip
   30f20:	mov	r1, r0
   30f24:	mov	r0, #0
   30f28:	cmp	r1, #0
   30f2c:	beq	30f38 <flatcc_builder_extend_vector@@Base+0xa0>
   30f30:	sub	sp, fp, #8
   30f34:	pop	{r4, r5, fp, pc}
   30f38:	ldr	r1, [r4, #28]
   30f3c:	ldr	r0, [r4, #60]	; 0x3c
   30f40:	ldr	r3, [r4, #64]	; 0x40
   30f44:	ldr	r2, [r4, #32]
   30f48:	add	r0, r0, r1
   30f4c:	sub	r1, r3, r1
   30f50:	mvn	r3, #3
   30f54:	cmn	r1, #4
   30f58:	str	r0, [r4, #16]
   30f5c:	movcs	r1, r3
   30f60:	str	r1, [r4, #24]
   30f64:	str	r3, [r2, #4]
   30f68:	add	r0, r0, r5
   30f6c:	sub	sp, fp, #8
   30f70:	pop	{r4, r5, fp, pc}
   30f74:	movw	r0, #54705	; 0xd5b1
   30f78:	movw	r1, #50434	; 0xc502
   30f7c:	movw	r3, #54732	; 0xd5cc
   30f80:	mov	r2, #892	; 0x37c
   30f84:	movt	r0, #4
   30f88:	movt	r1, #4
   30f8c:	movt	r3, #4
   30f90:	bl	14f40 <__assert_fail@plt>

00030f94 <flatcc_builder_vector_push@@Base>:
   30f94:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   30f98:	add	fp, sp, #24
   30f9c:	sub	sp, sp, #8
   30fa0:	mov	r5, r0
   30fa4:	ldr	r0, [r0, #32]
   30fa8:	mov	r8, r1
   30fac:	ldrh	r1, [r0, #14]
   30fb0:	cmp	r1, #4
   30fb4:	bne	310a0 <flatcc_builder_vector_push@@Base+0x10c>
   30fb8:	ldr	r1, [r0, #20]
   30fbc:	ldr	r2, [r0, #24]
   30fc0:	cmp	r1, r2
   30fc4:	bhi	310c0 <flatcc_builder_vector_push@@Base+0x12c>
   30fc8:	add	r1, r1, #1
   30fcc:	str	r1, [r0, #20]
   30fd0:	ldr	r1, [r5, #32]
   30fd4:	ldr	r4, [r5, #20]
   30fd8:	ldr	r0, [r5, #24]
   30fdc:	ldr	r6, [r1, #16]
   30fe0:	add	r1, r4, r6
   30fe4:	cmp	r1, r0
   30fe8:	str	r1, [r5, #20]
   30fec:	bcs	31018 <flatcc_builder_vector_push@@Base+0x84>
   30ff0:	ldr	r0, [r5, #16]
   30ff4:	adds	r7, r0, r4
   30ff8:	beq	31090 <flatcc_builder_vector_push@@Base+0xfc>
   30ffc:	mov	r0, r7
   31000:	mov	r1, r8
   31004:	mov	r2, r6
   31008:	bl	14e5c <memcpy@plt>
   3100c:	mov	r0, r7
   31010:	sub	sp, fp, #24
   31014:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   31018:	ldr	r2, [r5, #28]
   3101c:	ldr	r0, [r5, #40]	; 0x28
   31020:	ldr	r7, [r5, #48]	; 0x30
   31024:	mov	r3, #1
   31028:	str	r3, [sp]
   3102c:	mov	r3, #1
   31030:	add	r1, r1, r2
   31034:	add	r2, r1, #1
   31038:	add	r1, r5, #60	; 0x3c
   3103c:	blx	r7
   31040:	mov	r7, #0
   31044:	cmp	r0, #0
   31048:	beq	31058 <flatcc_builder_vector_push@@Base+0xc4>
   3104c:	mov	r0, r7
   31050:	sub	sp, fp, #24
   31054:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   31058:	ldr	r1, [r5, #28]
   3105c:	ldr	r0, [r5, #60]	; 0x3c
   31060:	ldr	r3, [r5, #64]	; 0x40
   31064:	ldr	r2, [r5, #32]
   31068:	add	r0, r0, r1
   3106c:	sub	r1, r3, r1
   31070:	mvn	r3, #3
   31074:	cmn	r1, #4
   31078:	str	r0, [r5, #16]
   3107c:	movcs	r1, r3
   31080:	str	r1, [r5, #24]
   31084:	str	r3, [r2, #4]
   31088:	adds	r7, r0, r4
   3108c:	bne	30ffc <flatcc_builder_vector_push@@Base+0x68>
   31090:	mov	r7, #0
   31094:	mov	r0, r7
   31098:	sub	sp, fp, #24
   3109c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   310a0:	movw	r0, #51237	; 0xc825
   310a4:	movw	r1, #50434	; 0xc502
   310a8:	movw	r3, #51281	; 0xc851
   310ac:	movw	r2, #907	; 0x38b
   310b0:	movt	r0, #4
   310b4:	movt	r1, #4
   310b8:	movt	r3, #4
   310bc:	bl	14f40 <__assert_fail@plt>
   310c0:	movw	r0, #51348	; 0xc894
   310c4:	movw	r1, #50434	; 0xc502
   310c8:	movw	r3, #51281	; 0xc851
   310cc:	mov	r2, #908	; 0x38c
   310d0:	movt	r0, #4
   310d4:	movt	r1, #4
   310d8:	movt	r3, #4
   310dc:	bl	14f40 <__assert_fail@plt>

000310e0 <flatcc_builder_append_vector@@Base>:
   310e0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   310e4:	add	fp, sp, #24
   310e8:	sub	sp, sp, #8
   310ec:	mov	r6, r0
   310f0:	ldr	r0, [r0, #32]
   310f4:	mov	r8, r1
   310f8:	ldrh	r1, [r0, #14]
   310fc:	cmp	r1, #4
   31100:	bne	31214 <flatcc_builder_append_vector@@Base+0x134>
   31104:	ldr	r1, [r0, #20]
   31108:	mov	r5, r2
   3110c:	adds	r1, r1, r2
   31110:	bcs	311f4 <flatcc_builder_append_vector@@Base+0x114>
   31114:	ldr	r2, [r0, #24]
   31118:	cmp	r1, r2
   3111c:	bhi	311f4 <flatcc_builder_append_vector@@Base+0x114>
   31120:	str	r1, [r0, #20]
   31124:	ldr	r1, [r6, #32]
   31128:	ldr	r4, [r6, #20]
   3112c:	ldr	r0, [r6, #24]
   31130:	ldr	r9, [r1, #16]
   31134:	mla	r1, r9, r5, r4
   31138:	cmp	r1, r0
   3113c:	str	r1, [r6, #20]
   31140:	bcs	3116c <flatcc_builder_append_vector@@Base+0x8c>
   31144:	ldr	r0, [r6, #16]
   31148:	adds	r7, r0, r4
   3114c:	beq	311e4 <flatcc_builder_append_vector@@Base+0x104>
   31150:	mul	r2, r9, r5
   31154:	mov	r0, r7
   31158:	mov	r1, r8
   3115c:	bl	14e5c <memcpy@plt>
   31160:	mov	r0, r7
   31164:	sub	sp, fp, #24
   31168:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   3116c:	ldr	r2, [r6, #28]
   31170:	ldr	r0, [r6, #40]	; 0x28
   31174:	ldr	r7, [r6, #48]	; 0x30
   31178:	mov	r3, #1
   3117c:	str	r3, [sp]
   31180:	mov	r3, #1
   31184:	add	r1, r1, r2
   31188:	add	r2, r1, #1
   3118c:	add	r1, r6, #60	; 0x3c
   31190:	blx	r7
   31194:	mov	r7, #0
   31198:	cmp	r0, #0
   3119c:	beq	311ac <flatcc_builder_append_vector@@Base+0xcc>
   311a0:	mov	r0, r7
   311a4:	sub	sp, fp, #24
   311a8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   311ac:	ldr	r1, [r6, #28]
   311b0:	ldr	r0, [r6, #60]	; 0x3c
   311b4:	ldr	r3, [r6, #64]	; 0x40
   311b8:	ldr	r2, [r6, #32]
   311bc:	add	r0, r0, r1
   311c0:	sub	r1, r3, r1
   311c4:	mvn	r3, #3
   311c8:	cmn	r1, #4
   311cc:	str	r0, [r6, #16]
   311d0:	movcs	r1, r3
   311d4:	str	r1, [r6, #24]
   311d8:	str	r3, [r2, #4]
   311dc:	adds	r7, r0, r4
   311e0:	bne	31150 <flatcc_builder_append_vector@@Base+0x70>
   311e4:	mov	r7, #0
   311e8:	mov	r0, r7
   311ec:	sub	sp, fp, #24
   311f0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   311f4:	movw	r0, #54705	; 0xd5b1
   311f8:	movw	r1, #50434	; 0xc502
   311fc:	movw	r3, #54732	; 0xd5cc
   31200:	mov	r2, #892	; 0x37c
   31204:	movt	r0, #4
   31208:	movt	r1, #4
   3120c:	movt	r3, #4
   31210:	bl	14f40 <__assert_fail@plt>
   31214:	movw	r0, #51237	; 0xc825
   31218:	movw	r1, #50434	; 0xc502
   3121c:	movw	r3, #51409	; 0xc8d1
   31220:	movw	r2, #915	; 0x393
   31224:	movt	r0, #4
   31228:	movt	r1, #4
   3122c:	movt	r3, #4
   31230:	bl	14f40 <__assert_fail@plt>

00031234 <flatcc_builder_extend_offset_vector@@Base>:
   31234:	push	{r4, r5, fp, lr}
   31238:	add	fp, sp, #8
   3123c:	sub	sp, sp, #8
   31240:	mov	r4, r0
   31244:	ldr	r0, [r0, #32]
   31248:	ldr	r2, [r0, #20]
   3124c:	adds	r2, r2, r1
   31250:	cmpcc	r2, #1073741824	; 0x40000000
   31254:	bcc	31278 <flatcc_builder_extend_offset_vector@@Base+0x44>
   31258:	movw	r0, #54705	; 0xd5b1
   3125c:	movw	r1, #50434	; 0xc502
   31260:	movw	r3, #54732	; 0xd5cc
   31264:	mov	r2, #892	; 0x37c
   31268:	movt	r0, #4
   3126c:	movt	r1, #4
   31270:	movt	r3, #4
   31274:	bl	14f40 <__assert_fail@plt>
   31278:	str	r2, [r0, #20]
   3127c:	ldr	r5, [r4, #20]
   31280:	ldr	r0, [r4, #24]
   31284:	add	r1, r5, r1, lsl #2
   31288:	cmp	r1, r0
   3128c:	str	r1, [r4, #20]
   31290:	bcs	312a4 <flatcc_builder_extend_offset_vector@@Base+0x70>
   31294:	ldr	r0, [r4, #16]
   31298:	add	r0, r0, r5
   3129c:	sub	sp, fp, #8
   312a0:	pop	{r4, r5, fp, pc}
   312a4:	ldr	r2, [r4, #28]
   312a8:	ldr	r0, [r4, #40]	; 0x28
   312ac:	ldr	ip, [r4, #48]	; 0x30
   312b0:	mov	r3, #1
   312b4:	str	r3, [sp]
   312b8:	mov	r3, #1
   312bc:	add	r1, r1, r2
   312c0:	add	r2, r1, #1
   312c4:	add	r1, r4, #60	; 0x3c
   312c8:	blx	ip
   312cc:	mov	r1, r0
   312d0:	mov	r0, #0
   312d4:	cmp	r1, #0
   312d8:	beq	312e4 <flatcc_builder_extend_offset_vector@@Base+0xb0>
   312dc:	sub	sp, fp, #8
   312e0:	pop	{r4, r5, fp, pc}
   312e4:	ldr	r1, [r4, #28]
   312e8:	ldr	r0, [r4, #60]	; 0x3c
   312ec:	ldr	r3, [r4, #64]	; 0x40
   312f0:	ldr	r2, [r4, #32]
   312f4:	add	r0, r0, r1
   312f8:	sub	r1, r3, r1
   312fc:	mvn	r3, #3
   31300:	cmn	r1, #4
   31304:	str	r0, [r4, #16]
   31308:	movcs	r1, r3
   3130c:	str	r1, [r4, #24]
   31310:	str	r3, [r2, #4]
   31314:	add	r0, r0, r5
   31318:	sub	sp, fp, #8
   3131c:	pop	{r4, r5, fp, pc}

00031320 <flatcc_builder_offset_vector_push@@Base>:
   31320:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   31324:	add	fp, sp, #24
   31328:	sub	sp, sp, #8
   3132c:	mov	r6, r0
   31330:	ldr	r0, [r0, #32]
   31334:	mov	r8, r1
   31338:	ldrh	r1, [r0, #14]
   3133c:	cmp	r1, #5
   31340:	bne	31400 <flatcc_builder_offset_vector_push@@Base+0xe0>
   31344:	ldr	r1, [r0, #20]
   31348:	mov	r5, #0
   3134c:	cmn	r1, #-1073741823	; 0xc0000001
   31350:	beq	313ac <flatcc_builder_offset_vector_push@@Base+0x8c>
   31354:	add	r1, r1, #1
   31358:	str	r1, [r0, #20]
   3135c:	ldr	r7, [r6, #20]
   31360:	ldr	r0, [r6, #24]
   31364:	add	r1, r7, #4
   31368:	cmp	r1, r0
   3136c:	str	r1, [r6, #20]
   31370:	bcs	3137c <flatcc_builder_offset_vector_push@@Base+0x5c>
   31374:	ldr	r0, [r6, #16]
   31378:	b	313e8 <flatcc_builder_offset_vector_push@@Base+0xc8>
   3137c:	ldr	r1, [r6, #28]
   31380:	ldr	r0, [r6, #40]	; 0x28
   31384:	ldr	r4, [r6, #48]	; 0x30
   31388:	mov	r2, #1
   3138c:	mov	r3, #1
   31390:	str	r2, [sp]
   31394:	add	r1, r7, r1
   31398:	add	r2, r1, #5
   3139c:	add	r1, r6, #60	; 0x3c
   313a0:	blx	r4
   313a4:	cmp	r0, #0
   313a8:	beq	313b8 <flatcc_builder_offset_vector_push@@Base+0x98>
   313ac:	mov	r0, r5
   313b0:	sub	sp, fp, #24
   313b4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   313b8:	ldr	r1, [r6, #28]
   313bc:	ldr	r0, [r6, #60]	; 0x3c
   313c0:	ldr	r3, [r6, #64]	; 0x40
   313c4:	ldr	r2, [r6, #32]
   313c8:	add	r0, r0, r1
   313cc:	sub	r1, r3, r1
   313d0:	mvn	r3, #3
   313d4:	cmn	r1, #4
   313d8:	str	r0, [r6, #16]
   313dc:	movcs	r1, r3
   313e0:	str	r1, [r6, #24]
   313e4:	str	r3, [r2, #4]
   313e8:	adds	r0, r0, r7
   313ec:	movne	r5, r0
   313f0:	strne	r8, [r0]
   313f4:	mov	r0, r5
   313f8:	sub	sp, fp, #24
   313fc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   31400:	movw	r0, #51486	; 0xc91e
   31404:	movw	r1, #50434	; 0xc502
   31408:	movw	r3, #51537	; 0xc951
   3140c:	movw	r2, #934	; 0x3a6
   31410:	movt	r0, #4
   31414:	movt	r1, #4
   31418:	movt	r3, #4
   3141c:	bl	14f40 <__assert_fail@plt>

00031420 <flatcc_builder_append_offset_vector@@Base>:
   31420:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   31424:	add	fp, sp, #24
   31428:	sub	sp, sp, #8
   3142c:	mov	r6, r0
   31430:	ldr	r0, [r0, #32]
   31434:	mov	r8, r1
   31438:	ldrh	r1, [r0, #14]
   3143c:	cmp	r1, #5
   31440:	bne	31544 <flatcc_builder_append_offset_vector@@Base+0x124>
   31444:	ldr	r1, [r0, #20]
   31448:	mov	r5, r2
   3144c:	adds	r1, r1, r2
   31450:	cmpcc	r1, #1073741824	; 0x40000000
   31454:	bcc	31478 <flatcc_builder_append_offset_vector@@Base+0x58>
   31458:	movw	r0, #54705	; 0xd5b1
   3145c:	movw	r1, #50434	; 0xc502
   31460:	movw	r3, #54732	; 0xd5cc
   31464:	mov	r2, #892	; 0x37c
   31468:	movt	r0, #4
   3146c:	movt	r1, #4
   31470:	movt	r3, #4
   31474:	bl	14f40 <__assert_fail@plt>
   31478:	str	r1, [r0, #20]
   3147c:	ldr	r4, [r6, #20]
   31480:	ldr	r0, [r6, #24]
   31484:	add	r1, r4, r5, lsl #2
   31488:	cmp	r1, r0
   3148c:	str	r1, [r6, #20]
   31490:	bcs	314bc <flatcc_builder_append_offset_vector@@Base+0x9c>
   31494:	ldr	r0, [r6, #16]
   31498:	adds	r7, r0, r4
   3149c:	beq	31534 <flatcc_builder_append_offset_vector@@Base+0x114>
   314a0:	lsl	r2, r5, #2
   314a4:	mov	r0, r7
   314a8:	mov	r1, r8
   314ac:	bl	14e5c <memcpy@plt>
   314b0:	mov	r0, r7
   314b4:	sub	sp, fp, #24
   314b8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   314bc:	ldr	r2, [r6, #28]
   314c0:	ldr	r0, [r6, #40]	; 0x28
   314c4:	ldr	r7, [r6, #48]	; 0x30
   314c8:	mov	r3, #1
   314cc:	str	r3, [sp]
   314d0:	mov	r3, #1
   314d4:	add	r1, r1, r2
   314d8:	add	r2, r1, #1
   314dc:	add	r1, r6, #60	; 0x3c
   314e0:	blx	r7
   314e4:	mov	r7, #0
   314e8:	cmp	r0, #0
   314ec:	beq	314fc <flatcc_builder_append_offset_vector@@Base+0xdc>
   314f0:	mov	r0, r7
   314f4:	sub	sp, fp, #24
   314f8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   314fc:	ldr	r1, [r6, #28]
   31500:	ldr	r0, [r6, #60]	; 0x3c
   31504:	ldr	r3, [r6, #64]	; 0x40
   31508:	ldr	r2, [r6, #32]
   3150c:	add	r0, r0, r1
   31510:	sub	r1, r3, r1
   31514:	mvn	r3, #3
   31518:	cmn	r1, #4
   3151c:	str	r0, [r6, #16]
   31520:	movcs	r1, r3
   31524:	str	r1, [r6, #24]
   31528:	str	r3, [r2, #4]
   3152c:	adds	r7, r0, r4
   31530:	bne	314a0 <flatcc_builder_append_offset_vector@@Base+0x80>
   31534:	mov	r7, #0
   31538:	mov	r0, r7
   3153c:	sub	sp, fp, #24
   31540:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   31544:	movw	r0, #51486	; 0xc91e
   31548:	movw	r1, #50434	; 0xc502
   3154c:	movw	r3, #51635	; 0xc9b3
   31550:	mov	r2, #948	; 0x3b4
   31554:	movt	r0, #4
   31558:	movt	r1, #4
   3155c:	movt	r3, #4
   31560:	bl	14f40 <__assert_fail@plt>

00031564 <flatcc_builder_extend_string@@Base>:
   31564:	push	{r4, r5, fp, lr}
   31568:	add	fp, sp, #8
   3156c:	sub	sp, sp, #8
   31570:	mov	r4, r0
   31574:	ldr	r0, [r0, #32]
   31578:	ldrh	r2, [r0, #14]
   3157c:	cmp	r2, #6
   31580:	bne	31638 <flatcc_builder_extend_string@@Base+0xd4>
   31584:	ldr	r2, [r0, #20]
   31588:	adds	r2, r2, r1
   3158c:	bcs	31658 <flatcc_builder_extend_string@@Base+0xf4>
   31590:	str	r2, [r0, #20]
   31594:	ldr	r5, [r4, #20]
   31598:	ldr	r0, [r4, #24]
   3159c:	add	r1, r5, r1
   315a0:	cmp	r1, r0
   315a4:	str	r1, [r4, #20]
   315a8:	bcs	315bc <flatcc_builder_extend_string@@Base+0x58>
   315ac:	ldr	r0, [r4, #16]
   315b0:	add	r0, r0, r5
   315b4:	sub	sp, fp, #8
   315b8:	pop	{r4, r5, fp, pc}
   315bc:	ldr	r2, [r4, #28]
   315c0:	ldr	r0, [r4, #40]	; 0x28
   315c4:	ldr	ip, [r4, #48]	; 0x30
   315c8:	mov	r3, #1
   315cc:	str	r3, [sp]
   315d0:	mov	r3, #1
   315d4:	add	r1, r1, r2
   315d8:	add	r2, r1, #1
   315dc:	add	r1, r4, #60	; 0x3c
   315e0:	blx	ip
   315e4:	mov	r1, r0
   315e8:	mov	r0, #0
   315ec:	cmp	r1, #0
   315f0:	beq	315fc <flatcc_builder_extend_string@@Base+0x98>
   315f4:	sub	sp, fp, #8
   315f8:	pop	{r4, r5, fp, pc}
   315fc:	ldr	r1, [r4, #28]
   31600:	ldr	r0, [r4, #60]	; 0x3c
   31604:	ldr	r3, [r4, #64]	; 0x40
   31608:	ldr	r2, [r4, #32]
   3160c:	add	r0, r0, r1
   31610:	sub	r1, r3, r1
   31614:	mvn	r3, #3
   31618:	cmn	r1, #4
   3161c:	str	r0, [r4, #16]
   31620:	movcs	r1, r3
   31624:	str	r1, [r4, #24]
   31628:	str	r3, [r2, #4]
   3162c:	add	r0, r0, r5
   31630:	sub	sp, fp, #8
   31634:	pop	{r4, r5, fp, pc}
   31638:	movw	r0, #51751	; 0xca27
   3163c:	movw	r1, #50434	; 0xc502
   31640:	movw	r3, #51795	; 0xca53
   31644:	movw	r2, #957	; 0x3bd
   31648:	movt	r0, #4
   3164c:	movt	r1, #4
   31650:	movt	r3, #4
   31654:	bl	14f40 <__assert_fail@plt>
   31658:	movw	r0, #54705	; 0xd5b1
   3165c:	movw	r1, #50434	; 0xc502
   31660:	movw	r3, #54732	; 0xd5cc
   31664:	mov	r2, #892	; 0x37c
   31668:	movt	r0, #4
   3166c:	movt	r1, #4
   31670:	movt	r3, #4
   31674:	bl	14f40 <__assert_fail@plt>

00031678 <flatcc_builder_append_string@@Base>:
   31678:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   3167c:	add	fp, sp, #24
   31680:	sub	sp, sp, #8
   31684:	mov	r6, r0
   31688:	ldr	r0, [r0, #32]
   3168c:	mov	r8, r1
   31690:	ldrh	r1, [r0, #14]
   31694:	cmp	r1, #6
   31698:	bne	31778 <flatcc_builder_append_string@@Base+0x100>
   3169c:	ldr	r1, [r0, #20]
   316a0:	mov	r4, r2
   316a4:	adds	r1, r1, r2
   316a8:	bcs	31798 <flatcc_builder_append_string@@Base+0x120>
   316ac:	str	r1, [r0, #20]
   316b0:	ldr	r5, [r6, #20]
   316b4:	ldr	r0, [r6, #24]
   316b8:	add	r1, r5, r4
   316bc:	cmp	r1, r0
   316c0:	str	r1, [r6, #20]
   316c4:	bcs	316f0 <flatcc_builder_append_string@@Base+0x78>
   316c8:	ldr	r0, [r6, #16]
   316cc:	adds	r7, r0, r5
   316d0:	beq	31768 <flatcc_builder_append_string@@Base+0xf0>
   316d4:	mov	r0, r7
   316d8:	mov	r1, r8
   316dc:	mov	r2, r4
   316e0:	bl	14e5c <memcpy@plt>
   316e4:	mov	r0, r7
   316e8:	sub	sp, fp, #24
   316ec:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   316f0:	ldr	r2, [r6, #28]
   316f4:	ldr	r0, [r6, #40]	; 0x28
   316f8:	ldr	r7, [r6, #48]	; 0x30
   316fc:	mov	r3, #1
   31700:	str	r3, [sp]
   31704:	mov	r3, #1
   31708:	add	r1, r1, r2
   3170c:	add	r2, r1, #1
   31710:	add	r1, r6, #60	; 0x3c
   31714:	blx	r7
   31718:	mov	r7, #0
   3171c:	cmp	r0, #0
   31720:	beq	31730 <flatcc_builder_append_string@@Base+0xb8>
   31724:	mov	r0, r7
   31728:	sub	sp, fp, #24
   3172c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   31730:	ldr	r1, [r6, #28]
   31734:	ldr	r0, [r6, #60]	; 0x3c
   31738:	ldr	r3, [r6, #64]	; 0x40
   3173c:	ldr	r2, [r6, #32]
   31740:	add	r0, r0, r1
   31744:	sub	r1, r3, r1
   31748:	mvn	r3, #3
   3174c:	cmn	r1, #4
   31750:	str	r0, [r6, #16]
   31754:	movcs	r1, r3
   31758:	str	r1, [r6, #24]
   3175c:	str	r3, [r2, #4]
   31760:	adds	r7, r0, r5
   31764:	bne	316d4 <flatcc_builder_append_string@@Base+0x5c>
   31768:	mov	r7, #0
   3176c:	mov	r0, r7
   31770:	sub	sp, fp, #24
   31774:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   31778:	movw	r0, #51751	; 0xca27
   3177c:	movw	r1, #50434	; 0xc502
   31780:	movw	r3, #51858	; 0xca92
   31784:	movw	r2, #966	; 0x3c6
   31788:	movt	r0, #4
   3178c:	movt	r1, #4
   31790:	movt	r3, #4
   31794:	bl	14f40 <__assert_fail@plt>
   31798:	movw	r0, #54705	; 0xd5b1
   3179c:	movw	r1, #50434	; 0xc502
   317a0:	movw	r3, #54732	; 0xd5cc
   317a4:	mov	r2, #892	; 0x37c
   317a8:	movt	r0, #4
   317ac:	movt	r1, #4
   317b0:	movt	r3, #4
   317b4:	bl	14f40 <__assert_fail@plt>

000317b8 <flatcc_builder_append_string_str@@Base>:
   317b8:	push	{r4, r5, fp, lr}
   317bc:	add	fp, sp, #8
   317c0:	mov	r5, r0
   317c4:	mov	r0, r1
   317c8:	mov	r4, r1
   317cc:	bl	14ec8 <strlen@plt>
   317d0:	mov	r2, r0
   317d4:	mov	r0, r5
   317d8:	mov	r1, r4
   317dc:	pop	{r4, r5, fp, lr}
   317e0:	b	31678 <flatcc_builder_append_string@@Base>

000317e4 <flatcc_builder_append_string_strn@@Base>:
   317e4:	push	{r4, r5, r6, sl, fp, lr}
   317e8:	add	fp, sp, #16
   317ec:	mov	r6, r0
   317f0:	mov	r5, r1
   317f4:	mov	r0, r1
   317f8:	mov	r1, #0
   317fc:	mov	r4, r2
   31800:	bl	14f10 <memchr@plt>
   31804:	cmp	r0, #0
   31808:	mov	r1, r5
   3180c:	subne	r4, r0, r5
   31810:	mov	r0, r6
   31814:	mov	r2, r4
   31818:	pop	{r4, r5, r6, sl, fp, lr}
   3181c:	b	31678 <flatcc_builder_append_string@@Base>

00031820 <flatcc_builder_truncate_vector@@Base>:
   31820:	push	{fp, lr}
   31824:	mov	fp, sp
   31828:	ldr	r2, [r0, #32]
   3182c:	ldrh	r3, [r2, #14]
   31830:	cmp	r3, #4
   31834:	bne	3187c <flatcc_builder_truncate_vector@@Base+0x5c>
   31838:	ldr	r3, [r2, #20]
   3183c:	cmp	r3, r1
   31840:	bcc	3189c <flatcc_builder_truncate_vector@@Base+0x7c>
   31844:	sub	r3, r3, r1
   31848:	str	r3, [r2, #20]
   3184c:	ldr	r2, [r0, #32]
   31850:	ldr	r3, [r0, #20]
   31854:	ldr	ip, [r0, #16]
   31858:	ldr	r2, [r2, #16]
   3185c:	mls	r3, r2, r1, r3
   31860:	mul	r2, r2, r1
   31864:	mov	r1, #0
   31868:	str	r3, [r0, #20]
   3186c:	add	r0, ip, r3
   31870:	bl	14eec <memset@plt>
   31874:	mov	r0, #0
   31878:	pop	{fp, pc}
   3187c:	movw	r0, #51237	; 0xc825
   31880:	movw	r1, #50434	; 0xc502
   31884:	movw	r3, #51935	; 0xcadf
   31888:	movw	r2, #985	; 0x3d9
   3188c:	movt	r0, #4
   31890:	movt	r1, #4
   31894:	movt	r3, #4
   31898:	bl	14f40 <__assert_fail@plt>
   3189c:	movw	r0, #51998	; 0xcb1e
   318a0:	movw	r1, #50434	; 0xc502
   318a4:	movw	r3, #51935	; 0xcadf
   318a8:	movw	r2, #986	; 0x3da
   318ac:	movt	r0, #4
   318b0:	movt	r1, #4
   318b4:	movt	r3, #4
   318b8:	bl	14f40 <__assert_fail@plt>

000318bc <flatcc_builder_truncate_offset_vector@@Base>:
   318bc:	push	{fp, lr}
   318c0:	mov	fp, sp
   318c4:	ldr	r2, [r0, #32]
   318c8:	ldrh	r3, [r2, #14]
   318cc:	cmp	r3, #5
   318d0:	bne	31918 <flatcc_builder_truncate_offset_vector@@Base+0x5c>
   318d4:	ldr	r3, [r2, #20]
   318d8:	cmp	r3, r1
   318dc:	bcc	31938 <flatcc_builder_truncate_offset_vector@@Base+0x7c>
   318e0:	sub	r3, r3, r1
   318e4:	str	r3, [r2, #20]
   318e8:	ldr	r2, [r0, #32]
   318ec:	ldr	r3, [r0, #20]
   318f0:	ldr	ip, [r0, #16]
   318f4:	ldr	r2, [r2, #16]
   318f8:	mls	r3, r2, r1, r3
   318fc:	mul	r2, r2, r1
   31900:	mov	r1, #0
   31904:	str	r3, [r0, #20]
   31908:	add	r0, ip, r3
   3190c:	bl	14eec <memset@plt>
   31910:	mov	r0, #0
   31914:	pop	{fp, pc}
   31918:	movw	r0, #51486	; 0xc91e
   3191c:	movw	r1, #50434	; 0xc502
   31920:	movw	r3, #52034	; 0xcb42
   31924:	movw	r2, #994	; 0x3e2
   31928:	movt	r0, #4
   3192c:	movt	r1, #4
   31930:	movt	r3, #4
   31934:	bl	14f40 <__assert_fail@plt>
   31938:	movw	r0, #52104	; 0xcb88
   3193c:	movw	r1, #50434	; 0xc502
   31940:	movw	r3, #52034	; 0xcb42
   31944:	movw	r2, #995	; 0x3e3
   31948:	movt	r0, #4
   3194c:	movt	r1, #4
   31950:	movt	r3, #4
   31954:	bl	14f40 <__assert_fail@plt>

00031958 <flatcc_builder_truncate_string@@Base>:
   31958:	push	{fp, lr}
   3195c:	mov	fp, sp
   31960:	mov	r2, r1
   31964:	ldr	r1, [r0, #32]
   31968:	ldrh	r3, [r1, #14]
   3196c:	cmp	r3, #6
   31970:	bne	319ac <flatcc_builder_truncate_string@@Base+0x54>
   31974:	ldr	r3, [r1, #20]
   31978:	cmp	r3, r2
   3197c:	bcc	319cc <flatcc_builder_truncate_string@@Base+0x74>
   31980:	sub	r3, r3, r2
   31984:	str	r3, [r1, #20]
   31988:	ldr	r3, [r0, #20]
   3198c:	ldr	r1, [r0, #16]
   31990:	sub	r3, r3, r2
   31994:	str	r3, [r0, #20]
   31998:	add	r0, r1, r3
   3199c:	mov	r1, #0
   319a0:	bl	14eec <memset@plt>
   319a4:	mov	r0, #0
   319a8:	pop	{fp, pc}
   319ac:	movw	r0, #51751	; 0xca27
   319b0:	movw	r1, #50434	; 0xc502
   319b4:	movw	r3, #52163	; 0xcbc3
   319b8:	movw	r2, #1003	; 0x3eb
   319bc:	movt	r0, #4
   319c0:	movt	r1, #4
   319c4:	movt	r3, #4
   319c8:	bl	14f40 <__assert_fail@plt>
   319cc:	movw	r0, #52226	; 0xcc02
   319d0:	movw	r1, #50434	; 0xc502
   319d4:	movw	r3, #52163	; 0xcbc3
   319d8:	mov	r2, #1004	; 0x3ec
   319dc:	movt	r0, #4
   319e0:	movt	r1, #4
   319e4:	movt	r3, #4
   319e8:	bl	14f40 <__assert_fail@plt>

000319ec <flatcc_builder_start_vector@@Base>:
   319ec:	push	{r4, r5, r6, r7, fp, lr}
   319f0:	add	fp, sp, #16
   319f4:	mov	r7, #4
   319f8:	cmp	r2, #4
   319fc:	mov	r6, r1
   31a00:	mov	r5, r3
   31a04:	mov	r4, r0
   31a08:	movls	r2, r7
   31a0c:	mov	r1, r2
   31a10:	bl	30a68 <flatcc_builder_start_buffer@@Base+0xbc>
   31a14:	mov	r1, r0
   31a18:	mvn	r0, #0
   31a1c:	cmp	r1, #0
   31a20:	popne	{r4, r5, r6, r7, fp, pc}
   31a24:	ldr	r0, [r4, #32]
   31a28:	str	r6, [r0, #16]
   31a2c:	mov	r0, #0
   31a30:	ldr	r1, [r4, #32]
   31a34:	str	r0, [r1, #20]
   31a38:	ldr	r1, [r4, #32]
   31a3c:	str	r5, [r1, #24]
   31a40:	ldr	r1, [r4, #32]
   31a44:	strh	r7, [r1, #14]
   31a48:	ldr	r2, [r4, #28]
   31a4c:	ldr	r3, [r4, #60]	; 0x3c
   31a50:	ldr	r7, [r4, #64]	; 0x40
   31a54:	add	r3, r3, r2
   31a58:	sub	r2, r7, r2
   31a5c:	str	r3, [r4, #16]
   31a60:	mvn	r3, #3
   31a64:	cmn	r2, #4
   31a68:	movcs	r2, r3
   31a6c:	str	r2, [r4, #24]
   31a70:	str	r3, [r1, #4]
   31a74:	pop	{r4, r5, r6, r7, fp, pc}

00031a78 <flatcc_builder_start_offset_vector@@Base>:
   31a78:	push	{r4, r5, fp, lr}
   31a7c:	add	fp, sp, #8
   31a80:	mov	r1, #4
   31a84:	mov	r4, r0
   31a88:	mov	r5, #4
   31a8c:	bl	30a68 <flatcc_builder_start_buffer@@Base+0xbc>
   31a90:	mov	r1, r0
   31a94:	mvn	r0, #0
   31a98:	cmp	r1, #0
   31a9c:	popne	{r4, r5, fp, pc}
   31aa0:	ldr	r0, [r4, #32]
   31aa4:	mov	r2, #5
   31aa8:	str	r5, [r0, #16]
   31aac:	mov	r0, #0
   31ab0:	ldr	r1, [r4, #32]
   31ab4:	str	r0, [r1, #20]
   31ab8:	ldr	r1, [r4, #32]
   31abc:	strh	r2, [r1, #14]
   31ac0:	ldr	r2, [r4, #28]
   31ac4:	ldr	r3, [r4, #60]	; 0x3c
   31ac8:	ldr	r5, [r4, #64]	; 0x40
   31acc:	add	r3, r3, r2
   31ad0:	sub	r2, r5, r2
   31ad4:	str	r3, [r4, #16]
   31ad8:	mvn	r3, #3
   31adc:	cmn	r2, #4
   31ae0:	movcs	r2, r3
   31ae4:	str	r2, [r4, #24]
   31ae8:	str	r3, [r1, #4]
   31aec:	pop	{r4, r5, fp, pc}

00031af0 <flatcc_builder_create_offset_vector@@Base>:
   31af0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   31af4:	add	fp, sp, #24
   31af8:	sub	sp, sp, #8
   31afc:	mov	r8, r1
   31b00:	mov	r1, #4
   31b04:	mov	r6, r2
   31b08:	mov	r4, r0
   31b0c:	mov	r5, #4
   31b10:	bl	30a68 <flatcc_builder_start_buffer@@Base+0xbc>
   31b14:	mov	r7, #0
   31b18:	cmp	r0, #0
   31b1c:	beq	31b2c <flatcc_builder_create_offset_vector@@Base+0x3c>
   31b20:	mov	r0, r7
   31b24:	sub	sp, fp, #24
   31b28:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   31b2c:	ldr	r0, [r4, #32]
   31b30:	mov	r1, #0
   31b34:	str	r5, [r0, #16]
   31b38:	ldr	r0, [r4, #32]
   31b3c:	str	r1, [r0, #20]
   31b40:	mov	r1, #5
   31b44:	ldr	r0, [r4, #32]
   31b48:	strh	r1, [r0, #14]
   31b4c:	ldr	r1, [r4, #28]
   31b50:	ldr	r2, [r4, #60]	; 0x3c
   31b54:	ldr	r3, [r4, #64]	; 0x40
   31b58:	add	r2, r2, r1
   31b5c:	sub	r1, r3, r1
   31b60:	str	r2, [r4, #16]
   31b64:	mvn	r2, #3
   31b68:	cmn	r1, #4
   31b6c:	movcs	r1, r2
   31b70:	str	r1, [r4, #24]
   31b74:	str	r2, [r0, #4]
   31b78:	ldr	r1, [r0, #20]
   31b7c:	adds	r1, r1, r6
   31b80:	cmpcc	r1, #1073741824	; 0x40000000
   31b84:	bcc	31ba8 <flatcc_builder_create_offset_vector@@Base+0xb8>
   31b88:	movw	r0, #54705	; 0xd5b1
   31b8c:	movw	r1, #50434	; 0xc502
   31b90:	movw	r3, #54732	; 0xd5cc
   31b94:	mov	r2, #892	; 0x37c
   31b98:	movt	r0, #4
   31b9c:	movt	r1, #4
   31ba0:	movt	r3, #4
   31ba4:	bl	14f40 <__assert_fail@plt>
   31ba8:	str	r1, [r0, #20]
   31bac:	ldr	r5, [r4, #20]
   31bb0:	ldr	r0, [r4, #24]
   31bb4:	add	r1, r5, r6, lsl #2
   31bb8:	cmp	r1, r0
   31bbc:	str	r1, [r4, #20]
   31bc0:	bcs	31c94 <flatcc_builder_create_offset_vector@@Base+0x1a4>
   31bc4:	ldr	r0, [r4, #16]
   31bc8:	adds	r0, r0, r5
   31bcc:	beq	31d00 <flatcc_builder_create_offset_vector@@Base+0x210>
   31bd0:	lsl	r2, r6, #2
   31bd4:	mov	r1, r8
   31bd8:	bl	14e5c <memcpy@plt>
   31bdc:	ldr	r0, [r4, #32]
   31be0:	ldrh	r1, [r0, #14]
   31be4:	cmp	r1, #5
   31be8:	bne	31d10 <flatcc_builder_create_offset_vector@@Base+0x220>
   31bec:	ldr	r2, [r0, #20]
   31bf0:	ldr	r1, [r4, #16]
   31bf4:	mov	r0, r4
   31bf8:	mov	r3, #0
   31bfc:	mov	r7, #0
   31c00:	bl	32d70 <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   31c04:	cmp	r0, #0
   31c08:	beq	31b20 <flatcc_builder_create_offset_vector@@Base+0x30>
   31c0c:	mov	r5, r0
   31c10:	ldr	r0, [r4, #16]
   31c14:	ldr	r2, [r4, #20]
   31c18:	mov	r1, #0
   31c1c:	bl	14eec <memset@plt>
   31c20:	ldr	r0, [r4, #32]
   31c24:	ldr	r1, [r4, #60]	; 0x3c
   31c28:	ldr	r2, [r4, #64]	; 0x40
   31c2c:	ldr	r3, [r0, #8]
   31c30:	str	r3, [r4, #20]
   31c34:	ldr	r3, [r0]
   31c38:	str	r3, [r4, #28]
   31c3c:	add	r1, r1, r3
   31c40:	ldr	r7, [r0, #4]
   31c44:	str	r1, [r4, #16]
   31c48:	sub	r1, r2, r3
   31c4c:	cmp	r1, r7
   31c50:	movhi	r1, r7
   31c54:	mov	r7, r5
   31c58:	str	r1, [r4, #24]
   31c5c:	ldrh	r1, [r4, #130]	; 0x82
   31c60:	ldrh	r2, [r4, #128]	; 0x80
   31c64:	cmp	r2, r1
   31c68:	strhcc	r1, [r4, #128]	; 0x80
   31c6c:	ldrh	r1, [r0, #12]
   31c70:	sub	r0, r0, #36	; 0x24
   31c74:	str	r0, [r4, #32]
   31c78:	strh	r1, [r4, #130]	; 0x82
   31c7c:	ldr	r0, [r4, #156]	; 0x9c
   31c80:	sub	r0, r0, #1
   31c84:	str	r0, [r4, #156]	; 0x9c
   31c88:	mov	r0, r7
   31c8c:	sub	sp, fp, #24
   31c90:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   31c94:	ldr	r2, [r4, #28]
   31c98:	ldr	r0, [r4, #40]	; 0x28
   31c9c:	ldr	r7, [r4, #48]	; 0x30
   31ca0:	mov	r3, #1
   31ca4:	str	r3, [sp]
   31ca8:	mov	r3, #1
   31cac:	add	r1, r1, r2
   31cb0:	add	r2, r1, #1
   31cb4:	add	r1, r4, #60	; 0x3c
   31cb8:	blx	r7
   31cbc:	mov	r7, #0
   31cc0:	cmp	r0, #0
   31cc4:	bne	31b20 <flatcc_builder_create_offset_vector@@Base+0x30>
   31cc8:	ldr	r1, [r4, #28]
   31ccc:	ldr	r0, [r4, #60]	; 0x3c
   31cd0:	ldr	r3, [r4, #64]	; 0x40
   31cd4:	ldr	r2, [r4, #32]
   31cd8:	add	r0, r0, r1
   31cdc:	sub	r1, r3, r1
   31ce0:	mvn	r3, #3
   31ce4:	cmn	r1, #4
   31ce8:	str	r0, [r4, #16]
   31cec:	movcs	r1, r3
   31cf0:	str	r1, [r4, #24]
   31cf4:	str	r3, [r2, #4]
   31cf8:	adds	r0, r0, r5
   31cfc:	bne	31bd0 <flatcc_builder_create_offset_vector@@Base+0xe0>
   31d00:	mov	r7, #0
   31d04:	mov	r0, r7
   31d08:	sub	sp, fp, #24
   31d0c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   31d10:	movw	r0, #51486	; 0xc91e
   31d14:	movw	r1, #50434	; 0xc502
   31d18:	movw	r3, #53069	; 0xcf4d
   31d1c:	movw	r2, #1480	; 0x5c8
   31d20:	movt	r0, #4
   31d24:	movt	r1, #4
   31d28:	movt	r3, #4
   31d2c:	bl	14f40 <__assert_fail@plt>

00031d30 <flatcc_builder_end_offset_vector@@Base>:
   31d30:	push	{r4, r5, fp, lr}
   31d34:	add	fp, sp, #8
   31d38:	mov	r4, r0
   31d3c:	ldr	r0, [r0, #32]
   31d40:	ldrh	r1, [r0, #14]
   31d44:	cmp	r1, #5
   31d48:	bne	31de8 <flatcc_builder_end_offset_vector@@Base+0xb8>
   31d4c:	ldr	r2, [r0, #20]
   31d50:	ldr	r1, [r4, #16]
   31d54:	mov	r0, r4
   31d58:	mov	r3, #0
   31d5c:	bl	32d70 <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   31d60:	mov	r5, r0
   31d64:	cmp	r0, #0
   31d68:	beq	31de0 <flatcc_builder_end_offset_vector@@Base+0xb0>
   31d6c:	ldr	r0, [r4, #16]
   31d70:	ldr	r2, [r4, #20]
   31d74:	mov	r1, #0
   31d78:	bl	14eec <memset@plt>
   31d7c:	ldr	r0, [r4, #32]
   31d80:	ldr	r1, [r4, #60]	; 0x3c
   31d84:	ldr	ip, [r4, #64]	; 0x40
   31d88:	ldr	r3, [r0, #8]
   31d8c:	str	r3, [r4, #20]
   31d90:	ldr	r3, [r0]
   31d94:	str	r3, [r4, #28]
   31d98:	add	r1, r1, r3
   31d9c:	ldr	r2, [r0, #4]
   31da0:	str	r1, [r4, #16]
   31da4:	sub	r1, ip, r3
   31da8:	cmp	r1, r2
   31dac:	movhi	r1, r2
   31db0:	str	r1, [r4, #24]
   31db4:	ldrh	r1, [r4, #130]	; 0x82
   31db8:	ldrh	r2, [r4, #128]	; 0x80
   31dbc:	cmp	r2, r1
   31dc0:	strhcc	r1, [r4, #128]	; 0x80
   31dc4:	ldrh	r1, [r0, #12]
   31dc8:	sub	r0, r0, #36	; 0x24
   31dcc:	str	r0, [r4, #32]
   31dd0:	strh	r1, [r4, #130]	; 0x82
   31dd4:	ldr	r0, [r4, #156]	; 0x9c
   31dd8:	sub	r0, r0, #1
   31ddc:	str	r0, [r4, #156]	; 0x9c
   31de0:	mov	r0, r5
   31de4:	pop	{r4, r5, fp, pc}
   31de8:	movw	r0, #51486	; 0xc91e
   31dec:	movw	r1, #50434	; 0xc502
   31df0:	movw	r3, #53069	; 0xcf4d
   31df4:	movw	r2, #1480	; 0x5c8
   31df8:	movt	r0, #4
   31dfc:	movt	r1, #4
   31e00:	movt	r3, #4
   31e04:	bl	14f40 <__assert_fail@plt>

00031e08 <flatcc_builder_start_string@@Base>:
   31e08:	push	{r4, r5, fp, lr}
   31e0c:	add	fp, sp, #8
   31e10:	mov	r1, #1
   31e14:	mov	r4, r0
   31e18:	mov	r5, #1
   31e1c:	bl	30a68 <flatcc_builder_start_buffer@@Base+0xbc>
   31e20:	mov	r1, r0
   31e24:	mvn	r0, #0
   31e28:	cmp	r1, #0
   31e2c:	popne	{r4, r5, fp, pc}
   31e30:	ldr	r0, [r4, #32]
   31e34:	mov	r2, #6
   31e38:	str	r5, [r0, #16]
   31e3c:	mov	r0, #0
   31e40:	ldr	r1, [r4, #32]
   31e44:	str	r0, [r1, #20]
   31e48:	ldr	r1, [r4, #32]
   31e4c:	strh	r2, [r1, #14]
   31e50:	ldr	r2, [r4, #28]
   31e54:	ldr	r3, [r4, #60]	; 0x3c
   31e58:	ldr	r5, [r4, #64]	; 0x40
   31e5c:	add	r3, r3, r2
   31e60:	sub	r2, r5, r2
   31e64:	str	r3, [r4, #16]
   31e68:	mvn	r3, #3
   31e6c:	cmn	r2, #4
   31e70:	movcs	r2, r3
   31e74:	str	r2, [r4, #24]
   31e78:	str	r3, [r1, #4]
   31e7c:	pop	{r4, r5, fp, pc}

00031e80 <flatcc_builder_reserve_table@@Base>:
   31e80:	push	{r4, r5, r6, sl, fp, lr}
   31e84:	add	fp, sp, #16
   31e88:	sub	sp, sp, #8
   31e8c:	cmn	r1, #1
   31e90:	ble	31f68 <flatcc_builder_reserve_table@@Base+0xe8>
   31e94:	mov	r4, r0
   31e98:	ldr	r0, [r0, #32]
   31e9c:	mov	r5, r1
   31ea0:	ldr	r1, [r4, #56]	; 0x38
   31ea4:	ldrh	r2, [r0, #28]
   31ea8:	ldr	r0, [r0, #16]
   31eac:	add	r6, r0, r2, lsl #1
   31eb0:	add	r0, r6, r5, lsl #1
   31eb4:	add	r2, r0, #4
   31eb8:	cmp	r2, r1
   31ebc:	bls	31ee4 <flatcc_builder_reserve_table@@Base+0x64>
   31ec0:	ldr	r0, [r4, #40]	; 0x28
   31ec4:	ldr	ip, [r4, #48]	; 0x30
   31ec8:	mov	r3, #0
   31ecc:	add	r1, r4, #52	; 0x34
   31ed0:	str	r3, [sp]
   31ed4:	mov	r3, #1
   31ed8:	blx	ip
   31edc:	cmp	r0, #0
   31ee0:	bne	31f88 <flatcc_builder_reserve_table@@Base+0x108>
   31ee4:	ldr	r0, [r4, #52]	; 0x34
   31ee8:	adds	r0, r0, r6
   31eec:	str	r0, [r4, #4]
   31ef0:	beq	31f5c <flatcc_builder_reserve_table@@Base+0xdc>
   31ef4:	add	r0, r0, #4
   31ef8:	lsl	r1, r5, #1
   31efc:	str	r0, [r4, #4]
   31f00:	ldr	r0, [r4, #32]
   31f04:	ldr	r3, [r4, #80]	; 0x50
   31f08:	ldr	r5, [r0, #20]
   31f0c:	orr	r0, r1, #1
   31f10:	add	r2, r5, r0
   31f14:	cmp	r2, r3
   31f18:	bls	31f40 <flatcc_builder_reserve_table@@Base+0xc0>
   31f1c:	ldr	r0, [r4, #40]	; 0x28
   31f20:	ldr	r6, [r4, #48]	; 0x30
   31f24:	mov	r3, #3
   31f28:	add	r1, r4, #76	; 0x4c
   31f2c:	str	r3, [sp]
   31f30:	mov	r3, #0
   31f34:	blx	r6
   31f38:	cmp	r0, #0
   31f3c:	bne	31f88 <flatcc_builder_reserve_table@@Base+0x108>
   31f40:	ldr	r0, [r4, #76]	; 0x4c
   31f44:	adds	r0, r0, r5
   31f48:	str	r0, [r4]
   31f4c:	mov	r0, #0
   31f50:	mvneq	r0, #0
   31f54:	sub	sp, fp, #16
   31f58:	pop	{r4, r5, r6, sl, fp, pc}
   31f5c:	mvn	r0, #0
   31f60:	sub	sp, fp, #16
   31f64:	pop	{r4, r5, r6, sl, fp, pc}
   31f68:	movw	r0, #52325	; 0xcc65
   31f6c:	movw	r1, #50434	; 0xc502
   31f70:	movw	r3, #52260	; 0xcc24
   31f74:	movw	r2, #1065	; 0x429
   31f78:	movt	r0, #4
   31f7c:	movt	r1, #4
   31f80:	movt	r3, #4
   31f84:	bl	14f40 <__assert_fail@plt>
   31f88:	movw	r0, #54952	; 0xd6a8
   31f8c:	movw	r1, #50434	; 0xc502
   31f90:	movw	r3, #54498	; 0xd4e2
   31f94:	mov	r2, #308	; 0x134
   31f98:	movt	r0, #4
   31f9c:	movt	r1, #4
   31fa0:	movt	r3, #4
   31fa4:	bl	14f40 <__assert_fail@plt>

00031fa8 <flatcc_builder_start_table@@Base>:
   31fa8:	push	{r4, r5, r6, r7, fp, lr}
   31fac:	add	fp, sp, #16
   31fb0:	sub	sp, sp, #8
   31fb4:	mov	r6, r1
   31fb8:	mov	r1, #4
   31fbc:	mov	r4, r0
   31fc0:	bl	30a68 <flatcc_builder_start_buffer@@Base+0xbc>
   31fc4:	mvn	r5, #0
   31fc8:	cmp	r0, #0
   31fcc:	beq	31fdc <flatcc_builder_start_table@@Base+0x34>
   31fd0:	mov	r0, r5
   31fd4:	sub	sp, fp, #16
   31fd8:	pop	{r4, r5, r6, r7, fp, pc}
   31fdc:	mov	r1, r4
   31fe0:	ldr	r2, [r4, #4]
   31fe4:	ldr	r3, [r4, #32]
   31fe8:	ldr	r0, [r1, #52]!	; 0x34
   31fec:	sub	r0, r2, r0
   31ff0:	str	r0, [r3, #16]
   31ff4:	ldr	r0, [r4]
   31ff8:	ldr	r3, [r4, #76]	; 0x4c
   31ffc:	ldr	r2, [r4, #32]
   32000:	sub	r0, r0, r3
   32004:	mov	r3, #0
   32008:	str	r0, [r2, #20]
   3200c:	ldr	r0, [r4, #12]
   32010:	ldr	r2, [r4, #32]
   32014:	str	r0, [r2, #24]
   32018:	ldr	r0, [r4, #32]
   3201c:	ldrh	r2, [r4, #8]
   32020:	strh	r2, [r0, #28]
   32024:	movw	r0, #15186	; 0x3b52
   32028:	strh	r3, [r4, #8]
   3202c:	mov	r2, #3
   32030:	movt	r0, #12137	; 0x2f69
   32034:	str	r0, [r4, #12]
   32038:	ldr	r0, [r4, #32]
   3203c:	strh	r2, [r0, #14]
   32040:	ldrh	r2, [r0, #28]
   32044:	ldr	r0, [r0, #16]
   32048:	add	r7, r0, r2, lsl #1
   3204c:	add	r0, r7, r6, lsl #1
   32050:	add	r2, r0, #4
   32054:	ldr	r0, [r4, #56]	; 0x38
   32058:	cmp	r2, r0
   3205c:	bls	3207c <flatcc_builder_start_table@@Base+0xd4>
   32060:	ldr	r0, [r4, #40]	; 0x28
   32064:	ldr	ip, [r4, #48]	; 0x30
   32068:	str	r3, [sp]
   3206c:	mov	r3, #1
   32070:	blx	ip
   32074:	cmp	r0, #0
   32078:	bne	32128 <flatcc_builder_start_table@@Base+0x180>
   3207c:	ldr	r0, [r4, #52]	; 0x34
   32080:	adds	r0, r0, r7
   32084:	str	r0, [r4, #4]
   32088:	beq	31fd0 <flatcc_builder_start_table@@Base+0x28>
   3208c:	add	r0, r0, #4
   32090:	lsl	r1, r6, #1
   32094:	str	r0, [r4, #4]
   32098:	ldr	r0, [r4, #32]
   3209c:	ldr	r3, [r4, #80]	; 0x50
   320a0:	ldr	r6, [r0, #20]
   320a4:	orr	r0, r1, #1
   320a8:	add	r2, r6, r0
   320ac:	cmp	r2, r3
   320b0:	bls	320d8 <flatcc_builder_start_table@@Base+0x130>
   320b4:	ldr	r0, [r4, #40]	; 0x28
   320b8:	ldr	r7, [r4, #48]	; 0x30
   320bc:	mov	r3, #3
   320c0:	add	r1, r4, #76	; 0x4c
   320c4:	str	r3, [sp]
   320c8:	mov	r3, #0
   320cc:	blx	r7
   320d0:	cmp	r0, #0
   320d4:	bne	32128 <flatcc_builder_start_table@@Base+0x180>
   320d8:	ldr	r0, [r4, #76]	; 0x4c
   320dc:	adds	r0, r0, r6
   320e0:	str	r0, [r4]
   320e4:	beq	31fd0 <flatcc_builder_start_table@@Base+0x28>
   320e8:	ldr	r0, [r4, #28]
   320ec:	ldr	r2, [r4, #60]	; 0x3c
   320f0:	ldr	r3, [r4, #64]	; 0x40
   320f4:	ldr	r1, [r4, #32]
   320f8:	mov	r5, #0
   320fc:	add	r2, r2, r0
   32100:	sub	r0, r3, r0
   32104:	str	r2, [r4, #16]
   32108:	movw	r2, #65532	; 0xfffc
   3210c:	cmp	r0, r2
   32110:	movcs	r0, r2
   32114:	str	r0, [r4, #24]
   32118:	str	r2, [r1, #4]
   3211c:	mov	r0, r5
   32120:	sub	sp, fp, #16
   32124:	pop	{r4, r5, r6, r7, fp, pc}
   32128:	movw	r0, #54952	; 0xd6a8
   3212c:	movw	r1, #50434	; 0xc502
   32130:	movw	r3, #54498	; 0xd4e2
   32134:	mov	r2, #308	; 0x134
   32138:	movt	r0, #4
   3213c:	movt	r1, #4
   32140:	movt	r3, #4
   32144:	bl	14f40 <__assert_fail@plt>

00032148 <flatcc_builder_create_vtable@@Base>:
   32148:	push	{r4, r5, fp, lr}
   3214c:	add	fp, sp, #8
   32150:	sub	sp, sp, #80	; 0x50
   32154:	mov	r3, r2
   32158:	mov	r2, #0
   3215c:	mov	r4, r0
   32160:	cmp	r3, #0
   32164:	str	r2, [sp, #12]
   32168:	str	r2, [sp, #8]
   3216c:	movne	r2, #1
   32170:	strne	r3, [sp, #20]
   32174:	strne	r1, [sp, #16]
   32178:	strne	r3, [sp, #8]
   3217c:	strne	r2, [sp, #12]
   32180:	ldr	r0, [r4, #152]	; 0x98
   32184:	cmp	r0, #0
   32188:	bne	32198 <flatcc_builder_create_vtable@@Base+0x50>
   3218c:	ldr	r0, [r4, #180]	; 0xb4
   32190:	cmp	r0, #0
   32194:	beq	321f4 <flatcc_builder_create_vtable@@Base+0xac>
   32198:	cmp	r3, #0
   3219c:	beq	32238 <flatcc_builder_create_vtable@@Base+0xf0>
   321a0:	ldr	r0, [r4, #136]	; 0x88
   321a4:	ldr	ip, [r4, #44]	; 0x2c
   321a8:	add	r1, sp, #8
   321ac:	add	r1, r1, #8
   321b0:	sub	r5, r0, r3
   321b4:	ldr	r0, [r4, #36]	; 0x24
   321b8:	str	r3, [sp]
   321bc:	mov	r3, r5
   321c0:	blx	ip
   321c4:	cmp	r0, #0
   321c8:	bne	32258 <flatcc_builder_create_vtable@@Base+0x110>
   321cc:	cmp	r5, #0
   321d0:	str	r5, [r4, #136]	; 0x88
   321d4:	beq	321e8 <flatcc_builder_create_vtable@@Base+0xa0>
   321d8:	add	r1, r5, #1
   321dc:	mov	r0, r1
   321e0:	sub	sp, fp, #8
   321e4:	pop	{r4, r5, fp, pc}
   321e8:	mov	r0, #0
   321ec:	sub	sp, fp, #8
   321f0:	pop	{r4, r5, fp, pc}
   321f4:	ldr	r5, [r4, #140]	; 0x8c
   321f8:	ldr	r0, [r4, #36]	; 0x24
   321fc:	ldr	ip, [r4, #44]	; 0x2c
   32200:	add	r1, r5, r3
   32204:	str	r1, [r4, #140]	; 0x8c
   32208:	add	r1, sp, #8
   3220c:	str	r3, [sp]
   32210:	mov	r3, r5
   32214:	add	r1, r1, #8
   32218:	blx	ip
   3221c:	cmp	r0, #0
   32220:	bne	32278 <flatcc_builder_create_vtable@@Base+0x130>
   32224:	adds	r1, r5, #1
   32228:	mov	r0, #0
   3222c:	movcc	r0, r1
   32230:	sub	sp, fp, #8
   32234:	pop	{r4, r5, fp, pc}
   32238:	movw	r0, #54952	; 0xd6a8
   3223c:	movw	r1, #50434	; 0xc502
   32240:	movw	r3, #54631	; 0xd567
   32244:	movw	r2, #647	; 0x287
   32248:	movt	r0, #4
   3224c:	movt	r1, #4
   32250:	movt	r3, #4
   32254:	bl	14f40 <__assert_fail@plt>
   32258:	movw	r0, #54952	; 0xd6a8
   3225c:	movw	r1, #50434	; 0xc502
   32260:	movw	r3, #54631	; 0xd567
   32264:	movw	r2, #651	; 0x28b
   32268:	movt	r0, #4
   3226c:	movt	r1, #4
   32270:	movt	r3, #4
   32274:	bl	14f40 <__assert_fail@plt>
   32278:	movw	r0, #54952	; 0xd6a8
   3227c:	movw	r1, #50434	; 0xc502
   32280:	movw	r3, #54819	; 0xd623
   32284:	movw	r2, #677	; 0x2a5
   32288:	movt	r0, #4
   3228c:	movt	r1, #4
   32290:	movt	r3, #4
   32294:	bl	14f40 <__assert_fail@plt>

00032298 <flatcc_builder_create_cached_vtable@@Base>:
   32298:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3229c:	add	fp, sp, #28
   322a0:	sub	sp, sp, #20
   322a4:	mov	sl, r0
   322a8:	ldr	r0, [r0, #116]	; 0x74
   322ac:	mov	r8, r3
   322b0:	mov	r5, r2
   322b4:	str	r1, [sp, #16]
   322b8:	cmp	r0, #0
   322bc:	beq	32360 <flatcc_builder_create_cached_vtable@@Base+0xc8>
   322c0:	ldr	r1, [sl, #92]	; 0x5c
   322c4:	rsb	r0, r0, #32
   322c8:	lsr	r0, r8, r0
   322cc:	add	r6, r1, r0, lsl #2
   322d0:	cmp	r6, #0
   322d4:	beq	32424 <flatcc_builder_create_cached_vtable@@Base+0x18c>
   322d8:	ldr	r7, [r6]
   322dc:	str	r6, [sp, #12]
   322e0:	cmp	r7, #0
   322e4:	beq	32434 <flatcc_builder_create_cached_vtable@@Base+0x19c>
   322e8:	ldr	r4, [sl, #68]	; 0x44
   322ec:	ldr	r8, [sl, #100]	; 0x64
   322f0:	mov	r0, #0
   322f4:	str	r0, [sp, #8]
   322f8:	b	3230c <flatcc_builder_create_cached_vtable@@Base+0x74>
   322fc:	ldr	r7, [r9, #12]!
   32300:	mov	r6, r9
   32304:	cmp	r7, #0
   32308:	beq	3241c <flatcc_builder_create_cached_vtable@@Base+0x184>
   3230c:	add	r9, r8, r7
   32310:	mov	r1, r4
   32314:	ldr	r0, [r9, #8]
   32318:	ldrh	r0, [r1, r0]!	; <UNPREDICTABLE>
   3231c:	cmp	r0, r5
   32320:	bne	322fc <flatcc_builder_create_cached_vtable@@Base+0x64>
   32324:	ldr	r0, [sp, #16]
   32328:	mov	r2, r5
   3232c:	bl	14ebc <bcmp@plt>
   32330:	cmp	r0, #0
   32334:	bne	322fc <flatcc_builder_create_cached_vtable@@Base+0x64>
   32338:	ldr	r0, [sl, #152]	; 0x98
   3233c:	ldr	r1, [r9, #4]
   32340:	cmp	r1, r0
   32344:	beq	325a0 <flatcc_builder_create_cached_vtable@@Base+0x308>
   32348:	mov	r6, r9
   3234c:	mov	r0, r9
   32350:	ldr	r7, [r6, #12]!
   32354:	cmp	r7, #0
   32358:	bne	322f4 <flatcc_builder_create_cached_vtable@@Base+0x5c>
   3235c:	b	32438 <flatcc_builder_create_cached_vtable@@Base+0x1a0>
   32360:	ldr	r0, [sl, #124]	; 0x7c
   32364:	cmp	r0, #0
   32368:	bne	325f4 <flatcc_builder_create_cached_vtable@@Base+0x35c>
   3236c:	ldr	r0, [sl, #104]	; 0x68
   32370:	add	r7, sl, #100	; 0x64
   32374:	cmp	r0, #15
   32378:	bhi	323a4 <flatcc_builder_create_cached_vtable@@Base+0x10c>
   3237c:	ldr	r0, [sl, #40]	; 0x28
   32380:	ldr	r6, [sl, #48]	; 0x30
   32384:	mov	r1, #6
   32388:	mov	r2, #16
   3238c:	mov	r3, #0
   32390:	str	r1, [sp]
   32394:	mov	r1, r7
   32398:	blx	r6
   3239c:	cmp	r0, #0
   323a0:	bne	325d4 <flatcc_builder_create_cached_vtable@@Base+0x33c>
   323a4:	ldr	r0, [r7]
   323a8:	mov	r7, #0
   323ac:	cmp	r0, #0
   323b0:	beq	324d8 <flatcc_builder_create_cached_vtable@@Base+0x240>
   323b4:	mov	r0, #16
   323b8:	mov	r2, #5
   323bc:	add	r1, sl, #92	; 0x5c
   323c0:	mov	r3, #1
   323c4:	mov	r4, #256	; 0x100
   323c8:	str	r0, [sl, #124]	; 0x7c
   323cc:	ldr	r0, [sl, #40]	; 0x28
   323d0:	ldr	r6, [sl, #48]	; 0x30
   323d4:	str	r2, [sp]
   323d8:	mov	r2, #256	; 0x100
   323dc:	blx	r6
   323e0:	cmp	r0, #0
   323e4:	bne	324d8 <flatcc_builder_create_cached_vtable@@Base+0x240>
   323e8:	ldr	r0, [sl, #96]	; 0x60
   323ec:	mov	r1, r4
   323f0:	lsl	r4, r4, #1
   323f4:	cmp	r0, r1, lsl #1
   323f8:	bcs	323ec <flatcc_builder_create_cached_vtable@@Base+0x154>
   323fc:	lsr	r1, r1, #2
   32400:	mvn	r0, #0
   32404:	mov	r2, #1
   32408:	add	r0, r0, #1
   3240c:	cmp	r1, r2, lsl r0
   32410:	bhi	32408 <flatcc_builder_create_cached_vtable@@Base+0x170>
   32414:	str	r0, [sl, #116]	; 0x74
   32418:	b	322c0 <flatcc_builder_create_cached_vtable@@Base+0x28>
   3241c:	ldr	r9, [sp, #8]
   32420:	b	32438 <flatcc_builder_create_cached_vtable@@Base+0x1a0>
   32424:	mov	r7, #0
   32428:	mov	r0, r7
   3242c:	sub	sp, fp, #28
   32430:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   32434:	mov	r9, #0
   32438:	ldr	r4, [sl, #124]	; 0x7c
   3243c:	ldr	r0, [sl, #104]	; 0x68
   32440:	add	r7, sl, #100	; 0x64
   32444:	add	r2, r4, #16
   32448:	cmp	r2, r0
   3244c:	bls	32474 <flatcc_builder_create_cached_vtable@@Base+0x1dc>
   32450:	ldr	r0, [sl, #40]	; 0x28
   32454:	ldr	r6, [sl, #48]	; 0x30
   32458:	mov	r1, #6
   3245c:	mov	r3, #0
   32460:	str	r1, [sp]
   32464:	mov	r1, r7
   32468:	blx	r6
   3246c:	cmp	r0, #0
   32470:	bne	325d4 <flatcc_builder_create_cached_vtable@@Base+0x33c>
   32474:	ldr	r0, [r7]
   32478:	mov	r7, #0
   3247c:	adds	r4, r0, r4
   32480:	beq	324d8 <flatcc_builder_create_cached_vtable@@Base+0x240>
   32484:	ldr	r0, [sl, #124]	; 0x7c
   32488:	ldr	r1, [sl, #152]	; 0x98
   3248c:	add	r2, r0, #16
   32490:	str	r2, [sl, #124]	; 0x7c
   32494:	ldr	r2, [sp, #12]
   32498:	str	r1, [r4, #4]
   3249c:	ldr	r1, [r2]
   324a0:	str	r1, [r4, #12]
   324a4:	ldr	r1, [sp, #16]
   324a8:	str	r0, [r2]
   324ac:	mov	r0, sl
   324b0:	mov	r2, r5
   324b4:	bl	32148 <flatcc_builder_create_vtable@@Base>
   324b8:	cmp	r0, #0
   324bc:	str	r0, [r4]
   324c0:	beq	324d8 <flatcc_builder_create_cached_vtable@@Base+0x240>
   324c4:	cmp	r9, #0
   324c8:	beq	324e4 <flatcc_builder_create_cached_vtable@@Base+0x24c>
   324cc:	ldr	r0, [r9, #8]
   324d0:	str	r0, [r4, #8]
   324d4:	ldr	r7, [r4]
   324d8:	mov	r0, r7
   324dc:	sub	sp, fp, #28
   324e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   324e4:	ldr	r6, [sl, #120]	; 0x78
   324e8:	ldr	r0, [sl, #172]	; 0xac
   324ec:	add	r2, r6, r5
   324f0:	cmp	r0, #0
   324f4:	beq	32530 <flatcc_builder_create_cached_vtable@@Base+0x298>
   324f8:	cmp	r0, r2
   324fc:	bcs	32530 <flatcc_builder_create_cached_vtable@@Base+0x298>
   32500:	ldr	r0, [sl, #116]	; 0x74
   32504:	cmp	r0, #0
   32508:	beq	324d4 <flatcc_builder_create_cached_vtable@@Base+0x23c>
   3250c:	ldr	r0, [sl, #92]	; 0x5c
   32510:	ldr	r2, [sl, #96]	; 0x60
   32514:	mov	r1, #0
   32518:	mov	r5, #0
   3251c:	bl	14eec <memset@plt>
   32520:	mov	r0, #16
   32524:	str	r5, [sl, #120]	; 0x78
   32528:	str	r0, [sl, #124]	; 0x7c
   3252c:	b	324d4 <flatcc_builder_create_cached_vtable@@Base+0x23c>
   32530:	ldr	r0, [sl, #72]	; 0x48
   32534:	add	r7, sl, #68	; 0x44
   32538:	cmp	r2, r0
   3253c:	bls	32564 <flatcc_builder_create_cached_vtable@@Base+0x2cc>
   32540:	ldr	r0, [sl, #40]	; 0x28
   32544:	ldr	ip, [sl, #48]	; 0x30
   32548:	mov	r1, #2
   3254c:	mov	r3, #0
   32550:	str	r1, [sp]
   32554:	mov	r1, r7
   32558:	blx	ip
   3255c:	cmp	r0, #0
   32560:	bne	325d4 <flatcc_builder_create_cached_vtable@@Base+0x33c>
   32564:	ldr	r0, [r7]
   32568:	adds	r0, r0, r6
   3256c:	beq	32590 <flatcc_builder_create_cached_vtable@@Base+0x2f8>
   32570:	ldr	r1, [sl, #120]	; 0x78
   32574:	mov	r2, r5
   32578:	str	r1, [r4, #8]
   3257c:	add	r1, r1, r5
   32580:	str	r1, [sl, #120]	; 0x78
   32584:	ldr	r1, [sp, #16]
   32588:	bl	14e5c <memcpy@plt>
   3258c:	b	324d4 <flatcc_builder_create_cached_vtable@@Base+0x23c>
   32590:	mvn	r7, #0
   32594:	mov	r0, r7
   32598:	sub	sp, fp, #28
   3259c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   325a0:	ldr	r0, [sp, #12]
   325a4:	cmp	r6, r0
   325a8:	beq	325c4 <flatcc_builder_create_cached_vtable@@Base+0x32c>
   325ac:	mov	r1, r0
   325b0:	ldr	r0, [r9, #12]
   325b4:	str	r0, [r6]
   325b8:	ldr	r0, [r1]
   325bc:	str	r0, [r9, #12]
   325c0:	str	r7, [r1]
   325c4:	ldr	r7, [r9]
   325c8:	mov	r0, r7
   325cc:	sub	sp, fp, #28
   325d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   325d4:	movw	r0, #54952	; 0xd6a8
   325d8:	movw	r1, #50434	; 0xc502
   325dc:	movw	r3, #54498	; 0xd4e2
   325e0:	mov	r2, #308	; 0x134
   325e4:	movt	r0, #4
   325e8:	movt	r1, #4
   325ec:	movt	r3, #4
   325f0:	bl	14f40 <__assert_fail@plt>
   325f4:	movw	r0, #54892	; 0xd66c
   325f8:	movw	r1, #50434	; 0xc502
   325fc:	movw	r3, #54907	; 0xd67b
   32600:	movw	r2, #342	; 0x156
   32604:	movt	r0, #4
   32608:	movt	r1, #4
   3260c:	movt	r3, #4
   32610:	bl	14f40 <__assert_fail@plt>

00032614 <flatcc_builder_create_table@@Base>:
   32614:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   32618:	add	fp, sp, #24
   3261c:	sub	sp, sp, #80	; 0x50
   32620:	ldr	r5, [fp, #12]
   32624:	cmn	r5, #1
   32628:	ble	32774 <flatcc_builder_create_table@@Base+0x160>
   3262c:	ldr	ip, [fp, #16]
   32630:	tst	ip, #1
   32634:	beq	32794 <flatcc_builder_create_table@@Base+0x180>
   32638:	mov	r8, r0
   3263c:	ldrh	r0, [r0, #128]	; 0x80
   32640:	cmp	r3, #4
   32644:	movls	r3, #4
   32648:	cmp	r0, r3
   3264c:	strhcc	r3, [r8, #128]	; 0x80
   32650:	cmp	r5, #1
   32654:	ldr	r0, [r8, #136]	; 0x88
   32658:	sub	r4, r0, r2
   3265c:	sub	r0, r3, #1
   32660:	and	r0, r4, r0
   32664:	sub	r4, r4, #4
   32668:	add	r3, ip, r0
   3266c:	sub	r3, r4, r3
   32670:	add	r3, r3, #1
   32674:	str	r3, [fp, #-28]	; 0xffffffe4
   32678:	blt	326a8 <flatcc_builder_create_table@@Base+0x94>
   3267c:	ldr	r3, [fp, #8]
   32680:	sub	ip, r4, r0
   32684:	mvn	r4, #3
   32688:	sub	r4, r4, ip
   3268c:	ldrh	r6, [r3], #2
   32690:	subs	r5, r5, #1
   32694:	ldr	r7, [r6, r1]
   32698:	add	r7, r4, r7
   3269c:	sub	r7, r7, r6
   326a0:	str	r7, [r6, r1]
   326a4:	bne	3268c <flatcc_builder_create_table@@Base+0x78>
   326a8:	mov	r4, #4
   326ac:	sub	r3, fp, #28
   326b0:	cmp	r2, #0
   326b4:	str	r4, [sp, #16]
   326b8:	str	r3, [sp, #12]
   326bc:	mov	r3, #1
   326c0:	str	r4, [sp, #4]
   326c4:	addne	r4, r2, #4
   326c8:	str	r3, [sp, #8]
   326cc:	movne	r3, #2
   326d0:	strne	r2, [sp, #24]
   326d4:	strne	r1, [sp, #20]
   326d8:	strne	r3, [sp, #8]
   326dc:	strne	r4, [sp, #4]
   326e0:	cmp	r0, #0
   326e4:	beq	32710 <flatcc_builder_create_table@@Base+0xfc>
   326e8:	add	r1, sp, #4
   326ec:	movw	r2, #49904	; 0xc2f0
   326f0:	add	r4, r4, r0
   326f4:	add	r1, r1, r3, lsl #3
   326f8:	movt	r2, #4
   326fc:	add	r3, r3, #1
   32700:	str	r4, [sp, #4]
   32704:	str	r2, [r1, #8]
   32708:	str	r0, [r1, #12]
   3270c:	str	r3, [sp, #8]
   32710:	cmp	r4, #0
   32714:	ble	327b4 <flatcc_builder_create_table@@Base+0x1a0>
   32718:	ldr	r0, [r8, #136]	; 0x88
   3271c:	ldr	r7, [r8, #44]	; 0x2c
   32720:	add	r1, sp, #4
   32724:	mov	r2, r3
   32728:	add	r1, r1, #8
   3272c:	sub	r5, r0, r4
   32730:	ldr	r0, [r8, #36]	; 0x24
   32734:	str	r4, [sp]
   32738:	mov	r3, r5
   3273c:	blx	r7
   32740:	cmp	r0, #0
   32744:	streq	r5, [r8, #136]	; 0x88
   32748:	moveq	r0, r5
   3274c:	subeq	sp, fp, #24
   32750:	popeq	{r4, r5, r6, r7, r8, sl, fp, pc}
   32754:	movw	r0, #54952	; 0xd6a8
   32758:	movw	r1, #50434	; 0xc502
   3275c:	movw	r3, #54631	; 0xd567
   32760:	movw	r2, #651	; 0x28b
   32764:	movt	r0, #4
   32768:	movt	r1, #4
   3276c:	movt	r3, #4
   32770:	bl	14f40 <__assert_fail@plt>
   32774:	movw	r0, #52318	; 0xcc5e
   32778:	movw	r1, #50434	; 0xc502
   3277c:	movw	r3, #52336	; 0xcc70
   32780:	movw	r2, #1237	; 0x4d5
   32784:	movt	r0, #4
   32788:	movt	r1, #4
   3278c:	movt	r3, #4
   32790:	bl	14f40 <__assert_fail@plt>
   32794:	movw	r0, #52492	; 0xcd0c
   32798:	movw	r1, #50434	; 0xc502
   3279c:	movw	r3, #52336	; 0xcc70
   327a0:	movw	r2, #1243	; 0x4db
   327a4:	movt	r0, #4
   327a8:	movt	r1, #4
   327ac:	movt	r3, #4
   327b0:	bl	14f40 <__assert_fail@plt>
   327b4:	movw	r0, #54952	; 0xd6a8
   327b8:	movw	r1, #50434	; 0xc502
   327bc:	movw	r3, #54631	; 0xd567
   327c0:	movw	r2, #647	; 0x287
   327c4:	movt	r0, #4
   327c8:	movt	r1, #4
   327cc:	movt	r3, #4
   327d0:	bl	14f40 <__assert_fail@plt>

000327d4 <flatcc_builder_check_required_field@@Base>:
   327d4:	push	{fp, lr}
   327d8:	mov	fp, sp
   327dc:	ldr	r2, [r0, #32]
   327e0:	ldrh	r2, [r2, #14]
   327e4:	cmp	r2, #3
   327e8:	bne	32818 <flatcc_builder_check_required_field@@Base+0x44>
   327ec:	ldrh	r3, [r0, #8]
   327f0:	mov	r2, #0
   327f4:	cmp	r3, r1
   327f8:	bls	32810 <flatcc_builder_check_required_field@@Base+0x3c>
   327fc:	ldr	r0, [r0, #4]
   32800:	add	r0, r0, r1, lsl #1
   32804:	ldrh	r2, [r0]
   32808:	cmp	r2, #0
   3280c:	movwne	r2, #1
   32810:	mov	r0, r2
   32814:	pop	{fp, pc}
   32818:	movw	r0, #52503	; 0xcd17
   3281c:	movw	r1, #50434	; 0xc502
   32820:	movw	r3, #52546	; 0xcd42
   32824:	movw	r2, #1272	; 0x4f8
   32828:	movt	r0, #4
   3282c:	movt	r1, #4
   32830:	movt	r3, #4
   32834:	bl	14f40 <__assert_fail@plt>

00032838 <flatcc_builder_check_union_field@@Base>:
   32838:	push	{fp, lr}
   3283c:	mov	fp, sp
   32840:	mov	r2, r0
   32844:	ldr	r0, [r0, #32]
   32848:	ldrh	r0, [r0, #14]
   3284c:	cmp	r0, #3
   32850:	bne	328b0 <flatcc_builder_check_union_field@@Base+0x78>
   32854:	mov	r0, #0
   32858:	cmp	r1, #0
   3285c:	beq	3289c <flatcc_builder_check_union_field@@Base+0x64>
   32860:	ldrh	r3, [r2, #8]
   32864:	cmp	r3, r1
   32868:	popls	{fp, pc}
   3286c:	ldr	r0, [r2, #4]
   32870:	add	r0, r0, r1, lsl #1
   32874:	ldrh	r1, [r0, #-2]
   32878:	cmp	r1, #0
   3287c:	beq	328a0 <flatcc_builder_check_union_field@@Base+0x68>
   32880:	ldr	r2, [r2, #16]
   32884:	ldrh	r0, [r0]
   32888:	ldrb	r1, [r2, r1]
   3288c:	cmp	r1, #0
   32890:	beq	328a4 <flatcc_builder_check_union_field@@Base+0x6c>
   32894:	cmp	r0, #0
   32898:	movwne	r0, #1
   3289c:	pop	{fp, pc}
   328a0:	ldrh	r0, [r0]
   328a4:	clz	r0, r0
   328a8:	lsr	r0, r0, #5
   328ac:	pop	{fp, pc}
   328b0:	movw	r0, #52503	; 0xcd17
   328b4:	movw	r1, #50434	; 0xc502
   328b8:	movw	r3, #52629	; 0xcd95
   328bc:	movw	r2, #1279	; 0x4ff
   328c0:	movt	r0, #4
   328c4:	movt	r1, #4
   328c8:	movt	r3, #4
   328cc:	bl	14f40 <__assert_fail@plt>

000328d0 <flatcc_builder_check_required@@Base>:
   328d0:	push	{fp, lr}
   328d4:	mov	fp, sp
   328d8:	mov	r3, r0
   328dc:	ldr	r0, [r0, #32]
   328e0:	ldrh	r0, [r0, #14]
   328e4:	cmp	r0, #3
   328e8:	bne	32930 <flatcc_builder_check_required@@Base+0x60>
   328ec:	ldrh	ip, [r3, #8]
   328f0:	mov	r0, #0
   328f4:	cmp	ip, r2
   328f8:	poplt	{fp, pc}
   328fc:	cmp	r2, #1
   32900:	blt	32928 <flatcc_builder_check_required@@Base+0x58>
   32904:	ldr	ip, [r3, #4]
   32908:	ldrh	r3, [r1]
   3290c:	add	r3, ip, r3, lsl #1
   32910:	ldrh	r3, [r3]
   32914:	cmp	r3, #0
   32918:	beq	3292c <flatcc_builder_check_required@@Base+0x5c>
   3291c:	add	r1, r1, #2
   32920:	subs	r2, r2, #1
   32924:	bne	32908 <flatcc_builder_check_required@@Base+0x38>
   32928:	mov	r0, #1
   3292c:	pop	{fp, pc}
   32930:	movw	r0, #52503	; 0xcd17
   32934:	movw	r1, #50434	; 0xc502
   32938:	movw	r3, #52709	; 0xcde5
   3293c:	movw	r2, #1297	; 0x511
   32940:	movt	r0, #4
   32944:	movt	r1, #4
   32948:	movt	r3, #4
   3294c:	bl	14f40 <__assert_fail@plt>

00032950 <flatcc_builder_end_table@@Base>:
   32950:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   32954:	add	fp, sp, #24
   32958:	sub	sp, sp, #16
   3295c:	mov	r4, r0
   32960:	ldr	r0, [r0, #32]
   32964:	ldrh	r0, [r0, #14]
   32968:	cmp	r0, #3
   3296c:	bne	32af0 <flatcc_builder_end_table@@Base+0x1a0>
   32970:	ldrh	r0, [r4, #8]
   32974:	ldr	r5, [r4, #4]
   32978:	mov	r1, #4
   3297c:	movw	r2, #31153	; 0x79b1
   32980:	movt	r2, #40503	; 0x9e37
   32984:	add	r0, r1, r0, lsl #1
   32988:	strh	r0, [r5, #-4]!
   3298c:	ldrh	r1, [r4, #20]
   32990:	uxth	r6, r0
   32994:	add	r1, r1, #4
   32998:	strh	r1, [r5, #2]
   3299c:	uxth	r1, r1
   329a0:	ldr	r0, [r4, #12]
   329a4:	eor	r0, r0, r6
   329a8:	mul	r0, r0, r2
   329ac:	eor	r0, r0, r1
   329b0:	mov	r1, r5
   329b4:	mul	r3, r0, r2
   329b8:	mov	r0, r4
   329bc:	mov	r2, r6
   329c0:	str	r3, [r4, #12]
   329c4:	bl	32298 <flatcc_builder_create_cached_vtable@@Base>
   329c8:	cmp	r0, #0
   329cc:	beq	32ae0 <flatcc_builder_end_table@@Base+0x190>
   329d0:	mov	r7, r0
   329d4:	mov	r0, r5
   329d8:	mov	r1, #0
   329dc:	mov	r2, r6
   329e0:	mov	r8, #0
   329e4:	bl	14eec <memset@plt>
   329e8:	ldr	r5, [r4, #32]
   329ec:	ldr	r0, [r4, #76]	; 0x4c
   329f0:	ldr	r6, [r4]
   329f4:	ldrh	r3, [r4, #130]	; 0x82
   329f8:	ldr	r1, [r4, #16]
   329fc:	ldr	r2, [r4, #20]
   32a00:	ldr	r5, [r5, #20]
   32a04:	add	r0, r0, r5
   32a08:	sub	r6, r6, r0
   32a0c:	asr	r6, r6, #1
   32a10:	stm	sp, {r0, r6, r7}
   32a14:	mov	r0, r4
   32a18:	bl	32614 <flatcc_builder_create_table@@Base>
   32a1c:	cmp	r0, #0
   32a20:	beq	32ad4 <flatcc_builder_end_table@@Base+0x184>
   32a24:	ldr	r1, [r4, #32]
   32a28:	mov	r5, r0
   32a2c:	ldr	r0, [r4, #16]
   32a30:	ldr	r2, [r4, #20]
   32a34:	ldr	r3, [r4, #52]	; 0x34
   32a38:	ldr	r7, [r1, #24]
   32a3c:	str	r7, [r4, #12]
   32a40:	ldrh	r7, [r1, #28]
   32a44:	strh	r7, [r4, #8]
   32a48:	ldr	r7, [r1, #16]
   32a4c:	add	r3, r3, r7
   32a50:	str	r3, [r4, #4]
   32a54:	ldr	r3, [r4, #76]	; 0x4c
   32a58:	ldr	r1, [r1, #20]
   32a5c:	add	r1, r3, r1
   32a60:	str	r1, [r4]
   32a64:	mov	r1, #0
   32a68:	bl	14eec <memset@plt>
   32a6c:	ldr	r0, [r4, #32]
   32a70:	ldr	r1, [r4, #60]	; 0x3c
   32a74:	ldr	r2, [r4, #64]	; 0x40
   32a78:	mov	r8, r5
   32a7c:	ldr	r3, [r0, #8]
   32a80:	str	r3, [r4, #20]
   32a84:	ldr	r3, [r0]
   32a88:	str	r3, [r4, #28]
   32a8c:	add	r1, r1, r3
   32a90:	ldr	r7, [r0, #4]
   32a94:	str	r1, [r4, #16]
   32a98:	sub	r1, r2, r3
   32a9c:	cmp	r1, r7
   32aa0:	movhi	r1, r7
   32aa4:	str	r1, [r4, #24]
   32aa8:	ldrh	r1, [r4, #130]	; 0x82
   32aac:	ldrh	r2, [r4, #128]	; 0x80
   32ab0:	cmp	r2, r1
   32ab4:	strhcc	r1, [r4, #128]	; 0x80
   32ab8:	ldrh	r1, [r0, #12]
   32abc:	sub	r0, r0, #36	; 0x24
   32ac0:	str	r0, [r4, #32]
   32ac4:	strh	r1, [r4, #130]	; 0x82
   32ac8:	ldr	r0, [r4, #156]	; 0x9c
   32acc:	sub	r0, r0, #1
   32ad0:	str	r0, [r4, #156]	; 0x9c
   32ad4:	mov	r0, r8
   32ad8:	sub	sp, fp, #24
   32adc:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   32ae0:	mov	r8, #0
   32ae4:	mov	r0, r8
   32ae8:	sub	sp, fp, #24
   32aec:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   32af0:	movw	r0, #52503	; 0xcd17
   32af4:	movw	r1, #50434	; 0xc502
   32af8:	movw	r3, #52799	; 0xce3f
   32afc:	movw	r2, #1317	; 0x525
   32b00:	movt	r0, #4
   32b04:	movt	r1, #4
   32b08:	movt	r3, #4
   32b0c:	bl	14f40 <__assert_fail@plt>

00032b10 <flatcc_builder_create_vector@@Base>:
   32b10:	push	{r4, r5, r6, r7, fp, lr}
   32b14:	add	fp, sp, #16
   32b18:	sub	sp, sp, #80	; 0x50
   32b1c:	mov	r7, r0
   32b20:	ldr	r0, [fp, #12]
   32b24:	cmp	r2, r0
   32b28:	bhi	32c24 <flatcc_builder_create_vector@@Base+0x114>
   32b2c:	ldr	r0, [fp, #8]
   32b30:	mov	r4, r2
   32b34:	ldrh	r2, [r7, #128]	; 0x80
   32b38:	mov	r5, #4
   32b3c:	cmp	r0, #4
   32b40:	movls	r0, r5
   32b44:	cmp	r2, r0
   32b48:	sub	r2, fp, #20
   32b4c:	strhcc	r0, [r7, #128]	; 0x80
   32b50:	str	r4, [fp, #-20]	; 0xffffffec
   32b54:	sub	r0, r0, #1
   32b58:	ldr	ip, [r7, #136]	; 0x88
   32b5c:	str	r5, [sp, #16]
   32b60:	str	r2, [sp, #12]
   32b64:	mov	r2, #1
   32b68:	str	r5, [sp, #4]
   32b6c:	str	r2, [sp, #8]
   32b70:	mls	r6, r3, r4, ip
   32b74:	mul	r3, r3, r4
   32b78:	cmp	r3, #0
   32b7c:	and	r0, r6, r0
   32b80:	movne	r2, #2
   32b84:	addne	r5, r3, #4
   32b88:	strne	r3, [sp, #24]
   32b8c:	strne	r1, [sp, #20]
   32b90:	strne	r2, [sp, #8]
   32b94:	strne	r5, [sp, #4]
   32b98:	cmp	r0, #0
   32b9c:	beq	32bc8 <flatcc_builder_create_vector@@Base+0xb8>
   32ba0:	add	r1, sp, #4
   32ba4:	movw	r3, #49904	; 0xc2f0
   32ba8:	add	r5, r5, r0
   32bac:	add	r1, r1, r2, lsl #3
   32bb0:	movt	r3, #4
   32bb4:	add	r2, r2, #1
   32bb8:	str	r5, [sp, #4]
   32bbc:	str	r3, [r1, #8]
   32bc0:	str	r0, [r1, #12]
   32bc4:	str	r2, [sp, #8]
   32bc8:	cmp	r5, #0
   32bcc:	ble	32c44 <flatcc_builder_create_vector@@Base+0x134>
   32bd0:	ldr	r0, [r7, #36]	; 0x24
   32bd4:	ldr	r6, [r7, #44]	; 0x2c
   32bd8:	add	r1, sp, #4
   32bdc:	sub	r4, ip, r5
   32be0:	str	r5, [sp]
   32be4:	add	r1, r1, #8
   32be8:	mov	r3, r4
   32bec:	blx	r6
   32bf0:	cmp	r0, #0
   32bf4:	streq	r4, [r7, #136]	; 0x88
   32bf8:	moveq	r0, r4
   32bfc:	subeq	sp, fp, #16
   32c00:	popeq	{r4, r5, r6, r7, fp, pc}
   32c04:	movw	r0, #54952	; 0xd6a8
   32c08:	movw	r1, #50434	; 0xc502
   32c0c:	movw	r3, #54631	; 0xd567
   32c10:	movw	r2, #651	; 0x28b
   32c14:	movt	r0, #4
   32c18:	movt	r1, #4
   32c1c:	movt	r3, #4
   32c20:	bl	14f40 <__assert_fail@plt>
   32c24:	movw	r0, #52865	; 0xce81
   32c28:	movw	r1, #50434	; 0xc502
   32c2c:	movw	r3, #52884	; 0xce94
   32c30:	movw	r2, #1365	; 0x555
   32c34:	movt	r0, #4
   32c38:	movt	r1, #4
   32c3c:	movt	r3, #4
   32c40:	bl	14f40 <__assert_fail@plt>
   32c44:	movw	r0, #54952	; 0xd6a8
   32c48:	movw	r1, #50434	; 0xc502
   32c4c:	movw	r3, #54631	; 0xd567
   32c50:	movw	r2, #647	; 0x287
   32c54:	movt	r0, #4
   32c58:	movt	r1, #4
   32c5c:	movt	r3, #4
   32c60:	bl	14f40 <__assert_fail@plt>

00032c64 <flatcc_builder_end_vector@@Base>:
   32c64:	push	{r4, r5, fp, lr}
   32c68:	add	fp, sp, #8
   32c6c:	sub	sp, sp, #8
   32c70:	mov	r4, r0
   32c74:	ldr	r0, [r0, #32]
   32c78:	ldrh	r1, [r0, #14]
   32c7c:	cmp	r1, #4
   32c80:	bne	32d34 <flatcc_builder_end_vector@@Base+0xd0>
   32c84:	ldr	r3, [r0, #16]
   32c88:	ldr	r2, [r0, #20]
   32c8c:	ldr	r0, [r0, #24]
   32c90:	ldr	r1, [r4, #16]
   32c94:	ldrh	r5, [r4, #130]	; 0x82
   32c98:	str	r0, [sp, #4]
   32c9c:	mov	r0, r4
   32ca0:	str	r5, [sp]
   32ca4:	bl	32b10 <flatcc_builder_create_vector@@Base>
   32ca8:	mov	r5, r0
   32cac:	cmp	r0, #0
   32cb0:	beq	32d28 <flatcc_builder_end_vector@@Base+0xc4>
   32cb4:	ldr	r0, [r4, #16]
   32cb8:	ldr	r2, [r4, #20]
   32cbc:	mov	r1, #0
   32cc0:	bl	14eec <memset@plt>
   32cc4:	ldr	r0, [r4, #32]
   32cc8:	ldr	r1, [r4, #60]	; 0x3c
   32ccc:	ldr	ip, [r4, #64]	; 0x40
   32cd0:	ldr	r3, [r0, #8]
   32cd4:	str	r3, [r4, #20]
   32cd8:	ldr	r3, [r0]
   32cdc:	str	r3, [r4, #28]
   32ce0:	add	r1, r1, r3
   32ce4:	ldr	r2, [r0, #4]
   32ce8:	str	r1, [r4, #16]
   32cec:	sub	r1, ip, r3
   32cf0:	cmp	r1, r2
   32cf4:	movhi	r1, r2
   32cf8:	str	r1, [r4, #24]
   32cfc:	ldrh	r1, [r4, #130]	; 0x82
   32d00:	ldrh	r2, [r4, #128]	; 0x80
   32d04:	cmp	r2, r1
   32d08:	strhcc	r1, [r4, #128]	; 0x80
   32d0c:	ldrh	r1, [r0, #12]
   32d10:	sub	r0, r0, #36	; 0x24
   32d14:	str	r0, [r4, #32]
   32d18:	strh	r1, [r4, #130]	; 0x82
   32d1c:	ldr	r0, [r4, #156]	; 0x9c
   32d20:	sub	r0, r0, #1
   32d24:	str	r0, [r4, #156]	; 0x9c
   32d28:	mov	r0, r5
   32d2c:	sub	sp, fp, #8
   32d30:	pop	{r4, r5, fp, pc}
   32d34:	movw	r0, #51237	; 0xc825
   32d38:	movw	r1, #50434	; 0xc502
   32d3c:	movw	r3, #53002	; 0xcf0a
   32d40:	movw	r2, #1400	; 0x578
   32d44:	movt	r0, #4
   32d48:	movt	r1, #4
   32d4c:	movt	r3, #4
   32d50:	bl	14f40 <__assert_fail@plt>

00032d54 <flatcc_builder_vector_count@@Base>:
   32d54:	ldr	r0, [r0, #32]
   32d58:	ldr	r0, [r0, #20]
   32d5c:	bx	lr

00032d60 <flatcc_builder_vector_edit@@Base>:
   32d60:	ldr	r0, [r0, #16]
   32d64:	bx	lr

00032d68 <flatcc_builder_create_offset_vector_direct@@Base>:
   32d68:	mov	r3, #0
   32d6c:	b	32d70 <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   32d70:	push	{r4, r5, r6, r7, fp, lr}
   32d74:	add	fp, sp, #16
   32d78:	sub	sp, sp, #80	; 0x50
   32d7c:	mov	r5, #0
   32d80:	cmn	r2, #-1073741823	; 0xc0000001
   32d84:	bhi	32ef4 <flatcc_builder_create_offset_vector_direct@@Base+0x18c>
   32d88:	mov	r6, r0
   32d8c:	ldrh	r0, [r0, #128]	; 0x80
   32d90:	mov	r4, #4
   32d94:	sub	r5, fp, #20
   32d98:	mov	ip, #1
   32d9c:	cmp	r0, #3
   32da0:	movls	r0, #4
   32da4:	strhls	r0, [r6, #128]	; 0x80
   32da8:	str	r2, [fp, #-20]	; 0xffffffec
   32dac:	mov	r0, #0
   32db0:	ldr	lr, [r6, #136]	; 0x88
   32db4:	cmp	r0, r2, lsl #2
   32db8:	str	r4, [sp, #16]
   32dbc:	str	r5, [sp, #12]
   32dc0:	str	r4, [sp, #4]
   32dc4:	str	ip, [sp, #8]
   32dc8:	and	r5, lr, #3
   32dcc:	beq	32dec <flatcc_builder_create_offset_vector_direct@@Base+0x84>
   32dd0:	lsl	r0, r2, #2
   32dd4:	mov	ip, #2
   32dd8:	add	r4, r0, #4
   32ddc:	str	r0, [sp, #24]
   32de0:	str	r1, [sp, #20]
   32de4:	str	ip, [sp, #8]
   32de8:	str	r4, [sp, #4]
   32dec:	cmp	r5, #0
   32df0:	beq	32e1c <flatcc_builder_create_offset_vector_direct@@Base+0xb4>
   32df4:	add	r0, sp, #4
   32df8:	movw	r7, #49904	; 0xc2f0
   32dfc:	add	r4, r4, r5
   32e00:	add	r0, r0, ip, lsl #3
   32e04:	movt	r7, #4
   32e08:	add	ip, ip, #1
   32e0c:	str	r4, [sp, #4]
   32e10:	str	r7, [r0, #8]
   32e14:	str	r5, [r0, #12]
   32e18:	str	ip, [sp, #8]
   32e1c:	cmp	r2, #0
   32e20:	beq	32eb8 <flatcc_builder_create_offset_vector_direct@@Base+0x150>
   32e24:	sub	r0, r4, lr
   32e28:	cmp	r3, #0
   32e2c:	sub	r0, r0, #4
   32e30:	bne	32e78 <flatcc_builder_create_offset_vector_direct@@Base+0x110>
   32e34:	ldr	r3, [r1]
   32e38:	cmp	r3, #0
   32e3c:	beq	32f00 <flatcc_builder_create_offset_vector_direct@@Base+0x198>
   32e40:	add	r3, r0, r3
   32e44:	sub	r0, r0, #4
   32e48:	subs	r2, r2, #1
   32e4c:	str	r3, [r1], #4
   32e50:	bne	32e34 <flatcc_builder_create_offset_vector_direct@@Base+0xcc>
   32e54:	b	32eb8 <flatcc_builder_create_offset_vector_direct@@Base+0x150>
   32e58:	ldrb	r7, [r3]
   32e5c:	cmp	r7, #0
   32e60:	bne	32f20 <flatcc_builder_create_offset_vector_direct@@Base+0x1b8>
   32e64:	sub	r0, r0, #4
   32e68:	add	r1, r1, #4
   32e6c:	add	r3, r3, #1
   32e70:	subs	r2, r2, #1
   32e74:	beq	32eb8 <flatcc_builder_create_offset_vector_direct@@Base+0x150>
   32e78:	ldr	r5, [r1]
   32e7c:	cmp	r5, #0
   32e80:	beq	32e58 <flatcc_builder_create_offset_vector_direct@@Base+0xf0>
   32e84:	add	r7, r0, r5
   32e88:	str	r7, [r1]
   32e8c:	ldrb	r7, [r3]
   32e90:	cmp	r7, #0
   32e94:	bne	32e64 <flatcc_builder_create_offset_vector_direct@@Base+0xfc>
   32e98:	movw	r0, #54940	; 0xd69c
   32e9c:	movw	r1, #50434	; 0xc502
   32ea0:	movw	r3, #54954	; 0xd6aa
   32ea4:	movw	r2, #1457	; 0x5b1
   32ea8:	movt	r0, #4
   32eac:	movt	r1, #4
   32eb0:	movt	r3, #4
   32eb4:	bl	14f40 <__assert_fail@plt>
   32eb8:	cmp	r4, #0
   32ebc:	ble	32f40 <flatcc_builder_create_offset_vector_direct@@Base+0x1d8>
   32ec0:	ldr	r0, [r6, #136]	; 0x88
   32ec4:	ldr	r7, [r6, #44]	; 0x2c
   32ec8:	add	r1, sp, #4
   32ecc:	mov	r2, ip
   32ed0:	add	r1, r1, #8
   32ed4:	sub	r5, r0, r4
   32ed8:	ldr	r0, [r6, #36]	; 0x24
   32edc:	str	r4, [sp]
   32ee0:	mov	r3, r5
   32ee4:	blx	r7
   32ee8:	cmp	r0, #0
   32eec:	bne	32f60 <flatcc_builder_create_offset_vector_direct@@Base+0x1f8>
   32ef0:	str	r5, [r6, #136]	; 0x88
   32ef4:	mov	r0, r5
   32ef8:	sub	sp, fp, #16
   32efc:	pop	{r4, r5, r6, r7, fp, pc}
   32f00:	movw	r0, #54952	; 0xd6a8
   32f04:	movw	r1, #50434	; 0xc502
   32f08:	movw	r3, #54954	; 0xd6aa
   32f0c:	movw	r2, #1463	; 0x5b7
   32f10:	movt	r0, #4
   32f14:	movt	r1, #4
   32f18:	movt	r3, #4
   32f1c:	bl	14f40 <__assert_fail@plt>
   32f20:	movw	r0, #55085	; 0xd72d
   32f24:	movw	r1, #50434	; 0xc502
   32f28:	movw	r3, #54954	; 0xd6aa
   32f2c:	movw	r2, #1461	; 0x5b5
   32f30:	movt	r0, #4
   32f34:	movt	r1, #4
   32f38:	movt	r3, #4
   32f3c:	bl	14f40 <__assert_fail@plt>
   32f40:	movw	r0, #54952	; 0xd6a8
   32f44:	movw	r1, #50434	; 0xc502
   32f48:	movw	r3, #54631	; 0xd567
   32f4c:	movw	r2, #647	; 0x287
   32f50:	movt	r0, #4
   32f54:	movt	r1, #4
   32f58:	movt	r3, #4
   32f5c:	bl	14f40 <__assert_fail@plt>
   32f60:	movw	r0, #54952	; 0xd6a8
   32f64:	movw	r1, #50434	; 0xc502
   32f68:	movw	r3, #54631	; 0xd567
   32f6c:	movw	r2, #651	; 0x28b
   32f70:	movt	r0, #4
   32f74:	movt	r1, #4
   32f78:	movt	r3, #4
   32f7c:	bl	14f40 <__assert_fail@plt>

00032f80 <flatcc_builder_end_offset_vector_for_unions@@Base>:
   32f80:	push	{r4, r5, fp, lr}
   32f84:	add	fp, sp, #8
   32f88:	mov	r4, r0
   32f8c:	ldr	r0, [r0, #32]
   32f90:	mov	r3, r1
   32f94:	ldrh	r1, [r0, #14]
   32f98:	cmp	r1, #5
   32f9c:	bne	33038 <flatcc_builder_end_offset_vector_for_unions@@Base+0xb8>
   32fa0:	ldr	r2, [r0, #20]
   32fa4:	ldr	r1, [r4, #16]
   32fa8:	mov	r0, r4
   32fac:	bl	32d70 <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   32fb0:	mov	r5, r0
   32fb4:	cmp	r0, #0
   32fb8:	beq	33030 <flatcc_builder_end_offset_vector_for_unions@@Base+0xb0>
   32fbc:	ldr	r0, [r4, #16]
   32fc0:	ldr	r2, [r4, #20]
   32fc4:	mov	r1, #0
   32fc8:	bl	14eec <memset@plt>
   32fcc:	ldr	r0, [r4, #32]
   32fd0:	ldr	r1, [r4, #60]	; 0x3c
   32fd4:	ldr	ip, [r4, #64]	; 0x40
   32fd8:	ldr	r3, [r0, #8]
   32fdc:	str	r3, [r4, #20]
   32fe0:	ldr	r3, [r0]
   32fe4:	str	r3, [r4, #28]
   32fe8:	add	r1, r1, r3
   32fec:	ldr	r2, [r0, #4]
   32ff0:	str	r1, [r4, #16]
   32ff4:	sub	r1, ip, r3
   32ff8:	cmp	r1, r2
   32ffc:	movhi	r1, r2
   33000:	str	r1, [r4, #24]
   33004:	ldrh	r1, [r4, #130]	; 0x82
   33008:	ldrh	r2, [r4, #128]	; 0x80
   3300c:	cmp	r2, r1
   33010:	strhcc	r1, [r4, #128]	; 0x80
   33014:	ldrh	r1, [r0, #12]
   33018:	sub	r0, r0, #36	; 0x24
   3301c:	str	r0, [r4, #32]
   33020:	strh	r1, [r4, #130]	; 0x82
   33024:	ldr	r0, [r4, #156]	; 0x9c
   33028:	sub	r0, r0, #1
   3302c:	str	r0, [r4, #156]	; 0x9c
   33030:	mov	r0, r5
   33034:	pop	{r4, r5, fp, pc}
   33038:	movw	r0, #51486	; 0xc91e
   3303c:	movw	r1, #50434	; 0xc502
   33040:	movw	r3, #53143	; 0xcf97
   33044:	movw	r2, #1493	; 0x5d5
   33048:	movt	r0, #4
   3304c:	movt	r1, #4
   33050:	movt	r3, #4
   33054:	bl	14f40 <__assert_fail@plt>

00033058 <flatcc_builder_offset_vector_edit@@Base>:
   33058:	ldr	r0, [r0, #16]
   3305c:	bx	lr

00033060 <flatcc_builder_offset_vector_count@@Base>:
   33060:	ldr	r0, [r0, #32]
   33064:	ldr	r0, [r0, #20]
   33068:	bx	lr

0003306c <flatcc_builder_table_add_union@@Base>:
   3306c:	push	{r4, r5, r6, r7, fp, lr}
   33070:	add	fp, sp, #16
   33074:	mov	r5, r0
   33078:	ldr	r0, [r0, #32]
   3307c:	ldrh	r0, [r0, #14]
   33080:	cmp	r0, #3
   33084:	bne	3310c <flatcc_builder_table_add_union@@Base+0xa0>
   33088:	mov	r7, r3
   3308c:	mov	r4, r2
   33090:	mov	r6, r1
   33094:	cmp	r3, #0
   33098:	beq	330a8 <flatcc_builder_table_add_union@@Base+0x3c>
   3309c:	uxtb	r0, r4
   330a0:	cmp	r0, #0
   330a4:	beq	3312c <flatcc_builder_table_add_union@@Base+0xc0>
   330a8:	cmp	r7, #0
   330ac:	beq	330c8 <flatcc_builder_table_add_union@@Base+0x5c>
   330b0:	mov	r0, r5
   330b4:	mov	r1, r6
   330b8:	bl	3316c <flatcc_builder_table_add_offset@@Base>
   330bc:	cmp	r0, #0
   330c0:	beq	3314c <flatcc_builder_table_add_union@@Base+0xe0>
   330c4:	str	r7, [r0]
   330c8:	sub	r1, r6, #1
   330cc:	mov	r0, r5
   330d0:	mov	r2, #1
   330d4:	mov	r3, #1
   330d8:	bl	332fc <flatcc_builder_table_add@@Base>
   330dc:	cmp	r0, #0
   330e0:	strbne	r4, [r0]
   330e4:	movne	r0, #0
   330e8:	popne	{r4, r5, r6, r7, fp, pc}
   330ec:	movw	r0, #53389	; 0xd08d
   330f0:	movw	r1, #50434	; 0xc502
   330f4:	movw	r3, #53257	; 0xd009
   330f8:	movw	r2, #1526	; 0x5f6
   330fc:	movt	r0, #4
   33100:	movt	r1, #4
   33104:	movt	r3, #4
   33108:	bl	14f40 <__assert_fail@plt>
   3310c:	movw	r0, #52503	; 0xcd17
   33110:	movw	r1, #50434	; 0xc502
   33114:	movw	r3, #53257	; 0xd009
   33118:	movw	r2, #1518	; 0x5ee
   3311c:	movt	r0, #4
   33120:	movt	r1, #4
   33124:	movt	r3, #4
   33128:	bl	14f40 <__assert_fail@plt>
   3312c:	movw	r0, #53345	; 0xd061
   33130:	movw	r1, #50434	; 0xc502
   33134:	movw	r3, #53257	; 0xd009
   33138:	movw	r2, #1519	; 0x5ef
   3313c:	movt	r0, #4
   33140:	movt	r1, #4
   33144:	movt	r3, #4
   33148:	bl	14f40 <__assert_fail@plt>
   3314c:	movw	r0, #53379	; 0xd083
   33150:	movw	r1, #50434	; 0xc502
   33154:	movw	r3, #53257	; 0xd009
   33158:	movw	r2, #1522	; 0x5f2
   3315c:	movt	r0, #4
   33160:	movt	r1, #4
   33164:	movt	r3, #4
   33168:	bl	14f40 <__assert_fail@plt>

0003316c <flatcc_builder_table_add_offset@@Base>:
   3316c:	push	{r4, r5, r6, r7, fp, lr}
   33170:	add	fp, sp, #16
   33174:	sub	sp, sp, #8
   33178:	mov	r4, r0
   3317c:	ldr	r0, [r0, #32]
   33180:	ldrh	r0, [r0, #14]
   33184:	cmp	r0, #3
   33188:	bne	3329c <flatcc_builder_table_add_offset@@Base+0x130>
   3318c:	movw	r0, #32765	; 0x7ffd
   33190:	mov	r5, r1
   33194:	cmp	r1, r0
   33198:	bcs	332bc <flatcc_builder_table_add_offset@@Base+0x150>
   3319c:	ldr	r0, [r4, #4]
   331a0:	add	r1, r0, r5, lsl #1
   331a4:	ldrh	r1, [r1]
   331a8:	cmp	r1, #0
   331ac:	bne	332dc <flatcc_builder_table_add_offset@@Base+0x170>
   331b0:	ldr	r2, [r4, #20]
   331b4:	ldr	r1, [r4, #12]
   331b8:	ldr	r3, [r4, #24]
   331bc:	add	r2, r2, #3
   331c0:	eor	r1, r1, r5
   331c4:	bic	r6, r2, #3
   331c8:	movw	r2, #31153	; 0x79b1
   331cc:	movt	r2, #40503	; 0x9e37
   331d0:	add	r7, r6, #4
   331d4:	cmp	r7, r3
   331d8:	str	r7, [r4, #20]
   331dc:	mul	r1, r1, r2
   331e0:	eor	r1, r1, #4
   331e4:	mul	r1, r1, r2
   331e8:	str	r1, [r4, #12]
   331ec:	bls	33260 <flatcc_builder_table_add_offset@@Base+0xf4>
   331f0:	ldr	r1, [r4, #28]
   331f4:	ldr	r0, [r4, #40]	; 0x28
   331f8:	ldr	ip, [r4, #48]	; 0x30
   331fc:	mov	r2, #1
   33200:	mov	r3, #1
   33204:	str	r2, [sp]
   33208:	add	r2, r1, r7
   3320c:	add	r1, r4, #60	; 0x3c
   33210:	blx	ip
   33214:	mov	r1, r0
   33218:	mov	r0, #0
   3321c:	cmp	r1, #0
   33220:	beq	3322c <flatcc_builder_table_add_offset@@Base+0xc0>
   33224:	sub	sp, fp, #16
   33228:	pop	{r4, r5, r6, r7, fp, pc}
   3322c:	ldr	r0, [r4, #28]
   33230:	ldr	r2, [r4, #60]	; 0x3c
   33234:	ldr	r3, [r4, #64]	; 0x40
   33238:	ldr	r1, [r4, #32]
   3323c:	add	r2, r2, r0
   33240:	sub	r0, r3, r0
   33244:	str	r2, [r4, #16]
   33248:	movw	r2, #65532	; 0xfffc
   3324c:	cmp	r0, r2
   33250:	movcs	r0, r2
   33254:	str	r0, [r4, #24]
   33258:	str	r2, [r1, #4]
   3325c:	ldr	r0, [r4, #4]
   33260:	uxth	r1, r5
   33264:	add	r0, r0, r1, lsl #1
   33268:	strh	r7, [r0]
   3326c:	ldrh	r0, [r4, #8]
   33270:	cmp	r0, r1
   33274:	addls	r0, r5, #1
   33278:	strhls	r0, [r4, #8]
   3327c:	ldr	r0, [r4]
   33280:	add	r1, r0, #2
   33284:	str	r1, [r4]
   33288:	strh	r6, [r0]
   3328c:	ldr	r0, [r4, #16]
   33290:	add	r0, r0, r6
   33294:	sub	sp, fp, #16
   33298:	pop	{r4, r5, r6, r7, fp, pc}
   3329c:	movw	r0, #52503	; 0xcd17
   332a0:	movw	r1, #50434	; 0xc502
   332a4:	movw	r3, #54283	; 0xd40b
   332a8:	movw	r2, #1811	; 0x713
   332ac:	movt	r0, #4
   332b0:	movt	r1, #4
   332b4:	movt	r3, #4
   332b8:	bl	14f40 <__assert_fail@plt>
   332bc:	movw	r0, #54155	; 0xd38b
   332c0:	movw	r1, #50434	; 0xc502
   332c4:	movw	r3, #54283	; 0xd40b
   332c8:	movw	r2, #1812	; 0x714
   332cc:	movt	r0, #4
   332d0:	movt	r1, #4
   332d4:	movt	r3, #4
   332d8:	bl	14f40 <__assert_fail@plt>
   332dc:	movw	r0, #54952	; 0xd6a8
   332e0:	movw	r1, #50434	; 0xc502
   332e4:	movw	r3, #54283	; 0xd40b
   332e8:	movw	r2, #1819	; 0x71b
   332ec:	movt	r0, #4
   332f0:	movt	r1, #4
   332f4:	movt	r3, #4
   332f8:	bl	14f40 <__assert_fail@plt>

000332fc <flatcc_builder_table_add@@Base>:
   332fc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   33300:	add	fp, sp, #24
   33304:	sub	sp, sp, #8
   33308:	mov	r4, r0
   3330c:	ldr	r0, [r0, #32]
   33310:	ldrh	r0, [r0, #14]
   33314:	cmp	r0, #3
   33318:	bne	33438 <flatcc_builder_table_add@@Base+0x13c>
   3331c:	movw	r0, #32765	; 0x7ffd
   33320:	mov	r8, r1
   33324:	cmp	r1, r0
   33328:	bcs	33458 <flatcc_builder_table_add@@Base+0x15c>
   3332c:	ldrh	r0, [r4, #130]	; 0x82
   33330:	cmp	r0, r3
   33334:	strhcc	r3, [r4, #130]	; 0x82
   33338:	ldr	r0, [r4, #4]
   3333c:	add	r1, r0, r8, lsl #1
   33340:	ldrh	r1, [r1]
   33344:	cmp	r1, #0
   33348:	bne	33478 <flatcc_builder_table_add@@Base+0x17c>
   3334c:	ldr	r1, [r4, #12]
   33350:	movw	r7, #31153	; 0x79b1
   33354:	ldr	r6, [r4, #20]
   33358:	ldr	r5, [r4, #24]
   3335c:	movt	r7, #40503	; 0x9e37
   33360:	eor	r1, r1, r8
   33364:	mul	r1, r1, r7
   33368:	eor	r1, r1, r2
   3336c:	mul	r1, r1, r7
   33370:	str	r1, [r4, #12]
   33374:	add	r1, r3, r6
   33378:	rsb	r3, r3, #0
   3337c:	sub	r1, r1, #1
   33380:	and	r6, r1, r3
   33384:	add	r1, r6, r2
   33388:	cmp	r1, r5
   3338c:	str	r1, [r4, #20]
   33390:	bcc	33408 <flatcc_builder_table_add@@Base+0x10c>
   33394:	ldr	r2, [r4, #28]
   33398:	ldr	r0, [r4, #40]	; 0x28
   3339c:	ldr	r7, [r4, #48]	; 0x30
   333a0:	mov	r3, #1
   333a4:	str	r3, [sp]
   333a8:	mov	r3, #1
   333ac:	add	r1, r1, r2
   333b0:	add	r2, r1, #1
   333b4:	add	r1, r4, #60	; 0x3c
   333b8:	blx	r7
   333bc:	mov	r1, r0
   333c0:	mov	r0, #0
   333c4:	cmp	r1, #0
   333c8:	beq	333d4 <flatcc_builder_table_add@@Base+0xd8>
   333cc:	sub	sp, fp, #24
   333d0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   333d4:	ldr	r0, [r4, #28]
   333d8:	ldr	r2, [r4, #60]	; 0x3c
   333dc:	ldr	r3, [r4, #64]	; 0x40
   333e0:	ldr	r1, [r4, #32]
   333e4:	add	r2, r2, r0
   333e8:	sub	r0, r3, r0
   333ec:	str	r2, [r4, #16]
   333f0:	movw	r2, #65532	; 0xfffc
   333f4:	cmp	r0, r2
   333f8:	movcs	r0, r2
   333fc:	str	r0, [r4, #24]
   33400:	str	r2, [r1, #4]
   33404:	ldr	r0, [r4, #4]
   33408:	uxth	r1, r8
   3340c:	add	r2, r6, #4
   33410:	add	r0, r0, r1, lsl #1
   33414:	strh	r2, [r0]
   33418:	ldrh	r0, [r4, #8]
   3341c:	cmp	r0, r1
   33420:	addls	r0, r8, #1
   33424:	strhls	r0, [r4, #8]
   33428:	ldr	r0, [r4, #16]
   3342c:	add	r0, r0, r6
   33430:	sub	sp, fp, #24
   33434:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   33438:	movw	r0, #52503	; 0xcd17
   3343c:	movw	r1, #50434	; 0xc502
   33440:	movw	r3, #54081	; 0xd341
   33444:	movw	r2, #1773	; 0x6ed
   33448:	movt	r0, #4
   3344c:	movt	r1, #4
   33450:	movt	r3, #4
   33454:	bl	14f40 <__assert_fail@plt>
   33458:	movw	r0, #54155	; 0xd38b
   3345c:	movw	r1, #50434	; 0xc502
   33460:	movw	r3, #54081	; 0xd341
   33464:	movw	r2, #1774	; 0x6ee
   33468:	movt	r0, #4
   3346c:	movt	r1, #4
   33470:	movt	r3, #4
   33474:	bl	14f40 <__assert_fail@plt>
   33478:	movw	r0, #54952	; 0xd6a8
   3347c:	movw	r1, #50434	; 0xc502
   33480:	movw	r3, #54081	; 0xd341
   33484:	movw	r2, #1784	; 0x6f8
   33488:	movt	r0, #4
   3348c:	movt	r1, #4
   33490:	movt	r3, #4
   33494:	bl	14f40 <__assert_fail@plt>

00033498 <flatcc_builder_table_add_union_vector@@Base>:
   33498:	push	{r4, r5, r6, r7, fp, lr}
   3349c:	add	fp, sp, #16
   334a0:	mov	r6, r0
   334a4:	ldr	r0, [r0, #32]
   334a8:	ldrh	r0, [r0, #14]
   334ac:	cmp	r0, #3
   334b0:	bne	3351c <flatcc_builder_table_add_union_vector@@Base+0x84>
   334b4:	mov	r5, r1
   334b8:	clz	r1, r3
   334bc:	cmp	r2, #0
   334c0:	mov	r0, r2
   334c4:	mov	r4, r3
   334c8:	mov	r7, r2
   334cc:	movwne	r0, #1
   334d0:	lsr	r1, r1, #5
   334d4:	teq	r1, r0
   334d8:	beq	3353c <flatcc_builder_table_add_union_vector@@Base+0xa4>
   334dc:	cmp	r7, #0
   334e0:	beq	33514 <flatcc_builder_table_add_union_vector@@Base+0x7c>
   334e4:	sub	r1, r5, #1
   334e8:	mov	r0, r6
   334ec:	bl	3316c <flatcc_builder_table_add_offset@@Base>
   334f0:	cmp	r0, #0
   334f4:	beq	3355c <flatcc_builder_table_add_union_vector@@Base+0xc4>
   334f8:	str	r7, [r0]
   334fc:	mov	r0, r6
   33500:	mov	r1, r5
   33504:	bl	3316c <flatcc_builder_table_add_offset@@Base>
   33508:	cmp	r0, #0
   3350c:	beq	3357c <flatcc_builder_table_add_union_vector@@Base+0xe4>
   33510:	str	r4, [r0]
   33514:	mov	r0, #0
   33518:	pop	{r4, r5, r6, r7, fp, pc}
   3351c:	movw	r0, #52503	; 0xcd17
   33520:	movw	r1, #50434	; 0xc502
   33524:	movw	r3, #53401	; 0xd099
   33528:	mov	r2, #1536	; 0x600
   3352c:	movt	r0, #4
   33530:	movt	r1, #4
   33534:	movt	r3, #4
   33538:	bl	14f40 <__assert_fail@plt>
   3353c:	movw	r0, #53500	; 0xd0fc
   33540:	movw	r1, #50434	; 0xc502
   33544:	movw	r3, #53401	; 0xd099
   33548:	movw	r2, #1537	; 0x601
   3354c:	movt	r0, #4
   33550:	movt	r1, #4
   33554:	movt	r3, #4
   33558:	bl	14f40 <__assert_fail@plt>
   3355c:	movw	r0, #53379	; 0xd083
   33560:	movw	r1, #50434	; 0xc502
   33564:	movw	r3, #53401	; 0xd099
   33568:	movw	r2, #1540	; 0x604
   3356c:	movt	r0, #4
   33570:	movt	r1, #4
   33574:	movt	r3, #4
   33578:	bl	14f40 <__assert_fail@plt>
   3357c:	movw	r0, #53379	; 0xd083
   33580:	movw	r1, #50434	; 0xc502
   33584:	movw	r3, #53401	; 0xd099
   33588:	movw	r2, #1544	; 0x608
   3358c:	movt	r0, #4
   33590:	movt	r1, #4
   33594:	movt	r3, #4
   33598:	bl	14f40 <__assert_fail@plt>

0003359c <flatcc_builder_create_union_vector@@Base>:
   3359c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   335a0:	add	fp, sp, #28
   335a4:	sub	sp, sp, #12
   335a8:	mov	r6, #0
   335ac:	mov	r4, r1
   335b0:	mov	r8, r0
   335b4:	mov	sl, r3
   335b8:	mov	r9, r2
   335bc:	mov	r7, #4
   335c0:	str	r6, [r0]
   335c4:	str	r6, [r0, #4]
   335c8:	mov	r0, r1
   335cc:	mov	r1, #4
   335d0:	bl	30a68 <flatcc_builder_start_buffer@@Base+0xbc>
   335d4:	cmp	r0, #0
   335d8:	beq	335e4 <flatcc_builder_create_union_vector@@Base+0x48>
   335dc:	sub	sp, fp, #28
   335e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   335e4:	ldr	r0, [r4, #32]
   335e8:	mov	r1, #5
   335ec:	str	r7, [r0, #16]
   335f0:	ldr	r0, [r4, #32]
   335f4:	str	r6, [r0, #20]
   335f8:	ldr	r0, [r4, #32]
   335fc:	strh	r1, [r0, #14]
   33600:	ldr	r1, [r4, #28]
   33604:	ldr	r2, [r4, #60]	; 0x3c
   33608:	ldr	r3, [r4, #64]	; 0x40
   3360c:	add	r2, r2, r1
   33610:	sub	r1, r3, r1
   33614:	str	r2, [r4, #16]
   33618:	mvn	r2, #3
   3361c:	cmn	r1, #4
   33620:	movcs	r1, r2
   33624:	str	r1, [r4, #24]
   33628:	str	r2, [r0, #4]
   3362c:	ldr	r1, [r0, #20]
   33630:	adds	r1, r1, sl
   33634:	cmpcc	r1, #1073741824	; 0x40000000
   33638:	bcc	3365c <flatcc_builder_create_union_vector@@Base+0xc0>
   3363c:	movw	r0, #54705	; 0xd5b1
   33640:	movw	r1, #50434	; 0xc502
   33644:	movw	r3, #54732	; 0xd5cc
   33648:	mov	r2, #892	; 0x37c
   3364c:	movt	r0, #4
   33650:	movt	r1, #4
   33654:	movt	r3, #4
   33658:	bl	14f40 <__assert_fail@plt>
   3365c:	str	r1, [r0, #20]
   33660:	ldr	r7, [r4, #20]
   33664:	ldr	r0, [r4, #24]
   33668:	add	r1, r7, sl, lsl #2
   3366c:	cmp	r1, r0
   33670:	str	r1, [r4, #20]
   33674:	bcs	33688 <flatcc_builder_create_union_vector@@Base+0xec>
   33678:	ldr	r1, [r4, #16]
   3367c:	adds	r2, r1, r7
   33680:	bne	336f0 <flatcc_builder_create_union_vector@@Base+0x154>
   33684:	b	335dc <flatcc_builder_create_union_vector@@Base+0x40>
   33688:	ldr	r2, [r4, #28]
   3368c:	ldr	r0, [r4, #40]	; 0x28
   33690:	ldr	r6, [r4, #48]	; 0x30
   33694:	mov	r3, #1
   33698:	str	r3, [sp]
   3369c:	mov	r3, #1
   336a0:	add	r1, r1, r2
   336a4:	add	r2, r1, #1
   336a8:	add	r1, r4, #60	; 0x3c
   336ac:	blx	r6
   336b0:	cmp	r0, #0
   336b4:	bne	335dc <flatcc_builder_create_union_vector@@Base+0x40>
   336b8:	ldr	r0, [r4, #28]
   336bc:	ldr	r1, [r4, #60]	; 0x3c
   336c0:	ldr	r3, [r4, #64]	; 0x40
   336c4:	ldr	r2, [r4, #32]
   336c8:	add	r1, r1, r0
   336cc:	sub	r0, r3, r0
   336d0:	mvn	r3, #3
   336d4:	cmn	r0, #4
   336d8:	str	r1, [r4, #16]
   336dc:	movcs	r0, r3
   336e0:	str	r0, [r4, #24]
   336e4:	str	r3, [r2, #4]
   336e8:	adds	r2, r1, r7
   336ec:	beq	335dc <flatcc_builder_create_union_vector@@Base+0x40>
   336f0:	ldr	r7, [r4, #20]
   336f4:	add	r2, r7, sl
   336f8:	cmp	r2, r0
   336fc:	str	r2, [r4, #20]
   33700:	bcc	33764 <flatcc_builder_create_union_vector@@Base+0x1c8>
   33704:	ldr	r1, [r4, #28]
   33708:	ldr	r0, [r4, #40]	; 0x28
   3370c:	ldr	r6, [r4, #48]	; 0x30
   33710:	mov	r3, #1
   33714:	str	r3, [sp]
   33718:	mov	r3, #1
   3371c:	add	r1, r2, r1
   33720:	add	r2, r1, #1
   33724:	add	r1, r4, #60	; 0x3c
   33728:	blx	r6
   3372c:	cmp	r0, #0
   33730:	bne	335dc <flatcc_builder_create_union_vector@@Base+0x40>
   33734:	ldr	r0, [r4, #28]
   33738:	ldr	r1, [r4, #60]	; 0x3c
   3373c:	ldr	r3, [r4, #64]	; 0x40
   33740:	ldr	r2, [r4, #32]
   33744:	add	r1, r1, r0
   33748:	sub	r0, r3, r0
   3374c:	mvn	r3, #3
   33750:	cmn	r0, #4
   33754:	str	r1, [r4, #16]
   33758:	movcs	r0, r3
   3375c:	str	r0, [r4, #24]
   33760:	str	r3, [r2, #4]
   33764:	adds	r5, r1, r7
   33768:	beq	335dc <flatcc_builder_create_union_vector@@Base+0x40>
   3376c:	cmp	sl, #0
   33770:	beq	337f8 <flatcc_builder_create_union_vector@@Base+0x25c>
   33774:	and	ip, sl, #1
   33778:	mov	r0, #0
   3377c:	cmp	sl, #1
   33780:	str	r5, [sp, #8]
   33784:	beq	337dc <flatcc_builder_create_union_vector@@Base+0x240>
   33788:	ldr	r0, [sp, #8]
   3378c:	sub	lr, sl, ip
   33790:	add	r2, r1, #4
   33794:	add	r6, r9, #8
   33798:	add	r7, r0, #1
   3379c:	mov	r0, #0
   337a0:	ldrb	r3, [r6, #-8]
   337a4:	add	r5, r7, r0
   337a8:	strb	r3, [r5, #-1]
   337ac:	add	r3, r9, r0, lsl #3
   337b0:	ldr	r5, [r3, #4]
   337b4:	str	r5, [r2, #-4]
   337b8:	ldrb	r5, [r6]
   337bc:	add	r6, r6, #16
   337c0:	strb	r5, [r7, r0]
   337c4:	add	r0, r0, #2
   337c8:	ldr	r3, [r3, #12]
   337cc:	cmp	lr, r0
   337d0:	str	r3, [r2]
   337d4:	add	r2, r2, #8
   337d8:	bne	337a0 <flatcc_builder_create_union_vector@@Base+0x204>
   337dc:	ldr	r5, [sp, #8]
   337e0:	cmp	ip, #0
   337e4:	beq	337f8 <flatcc_builder_create_union_vector@@Base+0x25c>
   337e8:	ldrb	r2, [r9, r0, lsl #3]!
   337ec:	strb	r2, [r5, r0]
   337f0:	ldr	r2, [r9, #4]
   337f4:	str	r2, [r1, r0, lsl #2]
   337f8:	mov	r0, r4
   337fc:	mov	r2, sl
   33800:	mov	r3, r5
   33804:	bl	32d70 <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   33808:	mov	r7, r0
   3380c:	mov	r6, #0
   33810:	cmp	r0, #0
   33814:	beq	33840 <flatcc_builder_create_union_vector@@Base+0x2a4>
   33818:	mvn	r0, #0
   3381c:	mov	r1, #1
   33820:	mov	r2, sl
   33824:	mov	r3, #1
   33828:	str	r1, [sp]
   3382c:	str	r0, [sp, #4]
   33830:	mov	r0, r4
   33834:	mov	r1, r5
   33838:	bl	32b10 <flatcc_builder_create_vector@@Base>
   3383c:	b	33844 <flatcc_builder_create_union_vector@@Base+0x2a8>
   33840:	mov	r0, #0
   33844:	orr	r1, r6, r7
   33848:	stm	r8, {r0, r1}
   3384c:	mov	r1, #0
   33850:	ldr	r0, [r4, #16]
   33854:	ldr	r2, [r4, #20]
   33858:	bl	14eec <memset@plt>
   3385c:	ldr	r0, [r4, #32]
   33860:	ldr	r1, [r4, #60]	; 0x3c
   33864:	ldr	r2, [r4, #64]	; 0x40
   33868:	ldr	r3, [r0, #8]
   3386c:	str	r3, [r4, #20]
   33870:	ldr	r3, [r0]
   33874:	str	r3, [r4, #28]
   33878:	add	r1, r1, r3
   3387c:	ldr	r7, [r0, #4]
   33880:	str	r1, [r4, #16]
   33884:	sub	r1, r2, r3
   33888:	cmp	r1, r7
   3388c:	movhi	r1, r7
   33890:	str	r1, [r4, #24]
   33894:	ldrh	r1, [r4, #130]	; 0x82
   33898:	ldrh	r2, [r4, #128]	; 0x80
   3389c:	cmp	r2, r1
   338a0:	strhcc	r1, [r4, #128]	; 0x80
   338a4:	ldrh	r1, [r0, #12]
   338a8:	sub	r0, r0, #36	; 0x24
   338ac:	str	r0, [r4, #32]
   338b0:	strh	r1, [r4, #130]	; 0x82
   338b4:	ldr	r0, [r4, #156]	; 0x9c
   338b8:	sub	r0, r0, #1
   338bc:	str	r0, [r4, #156]	; 0x9c
   338c0:	sub	sp, fp, #28
   338c4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000338c8 <flatcc_builder_create_union_vector_direct@@Base>:
   338c8:	push	{r4, r5, r6, r7, fp, lr}
   338cc:	add	fp, sp, #16
   338d0:	sub	sp, sp, #8
   338d4:	ldr	r7, [fp, #8]
   338d8:	mov	r5, r2
   338dc:	mov	r4, r0
   338e0:	mov	r0, #0
   338e4:	mov	r6, r1
   338e8:	str	r0, [r4]
   338ec:	str	r0, [r4, #4]
   338f0:	mov	r0, r1
   338f4:	mov	r1, r3
   338f8:	mov	r3, r5
   338fc:	mov	r2, r7
   33900:	bl	32d70 <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   33904:	cmp	r0, #0
   33908:	str	r0, [r4, #4]
   3390c:	beq	33938 <flatcc_builder_create_union_vector_direct@@Base+0x70>
   33910:	mvn	r0, #0
   33914:	mov	r1, #1
   33918:	mov	r2, r7
   3391c:	mov	r3, #1
   33920:	str	r1, [sp]
   33924:	str	r0, [sp, #4]
   33928:	mov	r0, r6
   3392c:	mov	r1, r5
   33930:	bl	32b10 <flatcc_builder_create_vector@@Base>
   33934:	str	r0, [r4]
   33938:	sub	sp, fp, #16
   3393c:	pop	{r4, r5, r6, r7, fp, pc}

00033940 <flatcc_builder_start_union_vector@@Base>:
   33940:	push	{r4, sl, fp, lr}
   33944:	add	fp, sp, #8
   33948:	mov	r1, #4
   3394c:	mov	r4, r0
   33950:	bl	30a68 <flatcc_builder_start_buffer@@Base+0xbc>
   33954:	mov	r1, r0
   33958:	mvn	r0, #0
   3395c:	cmp	r1, #0
   33960:	popne	{r4, sl, fp, pc}
   33964:	ldr	r0, [r4, #32]
   33968:	mov	r1, #8
   3396c:	mov	r2, #7
   33970:	str	r1, [r0, #16]
   33974:	mov	r0, #0
   33978:	ldr	r1, [r4, #32]
   3397c:	str	r0, [r1, #20]
   33980:	ldr	r1, [r4, #32]
   33984:	strh	r2, [r1, #14]
   33988:	ldr	r2, [r4, #28]
   3398c:	ldr	r3, [r4, #60]	; 0x3c
   33990:	ldr	ip, [r4, #64]	; 0x40
   33994:	add	r3, r3, r2
   33998:	sub	r2, ip, r2
   3399c:	str	r3, [r4, #16]
   339a0:	mvn	r3, #3
   339a4:	cmn	r2, #4
   339a8:	movcs	r2, r3
   339ac:	str	r2, [r4, #24]
   339b0:	str	r3, [r1, #4]
   339b4:	pop	{r4, sl, fp, pc}

000339b8 <flatcc_builder_end_union_vector@@Base>:
   339b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   339bc:	add	fp, sp, #28
   339c0:	sub	sp, sp, #20
   339c4:	mov	r4, r0
   339c8:	mov	r0, #0
   339cc:	mov	r8, r1
   339d0:	str	r0, [r4]
   339d4:	str	r0, [r4, #4]
   339d8:	ldr	r0, [r1, #32]
   339dc:	ldrh	r1, [r0, #14]
   339e0:	cmp	r1, #7
   339e4:	bne	33bec <flatcc_builder_end_union_vector@@Base+0x234>
   339e8:	ldr	r9, [r0, #20]
   339ec:	ldr	r5, [r8, #20]
   339f0:	ldr	r2, [r8, #24]
   339f4:	add	r0, r9, r9, lsl #2
   339f8:	add	r1, r5, r0
   339fc:	cmp	r1, r2
   33a00:	str	r1, [r8, #20]
   33a04:	bcs	33af4 <flatcc_builder_end_union_vector@@Base+0x13c>
   33a08:	ldr	r0, [r8, #16]
   33a0c:	adds	r1, r0, r5
   33a10:	beq	33b5c <flatcc_builder_end_union_vector@@Base+0x1a4>
   33a14:	add	sl, r1, r9, lsl #2
   33a18:	cmp	r9, #0
   33a1c:	beq	33aac <flatcc_builder_end_union_vector@@Base+0xf4>
   33a20:	and	r2, r9, #1
   33a24:	cmp	r9, #1
   33a28:	str	r4, [sp, #12]
   33a2c:	str	r2, [sp, #16]
   33a30:	mov	r2, #0
   33a34:	beq	33a8c <flatcc_builder_end_union_vector@@Base+0xd4>
   33a38:	ldr	r2, [sp, #16]
   33a3c:	add	r5, r5, #4
   33a40:	add	r6, r0, #8
   33a44:	sub	lr, r9, r2
   33a48:	mov	r2, #0
   33a4c:	ldrb	r7, [r6, #-8]
   33a50:	mov	r4, sl
   33a54:	add	r3, r0, r2, lsl #3
   33a58:	strb	r7, [r4, r2]!
   33a5c:	add	r7, r0, r5
   33a60:	add	r2, r2, #2
   33a64:	ldr	ip, [r3, #4]
   33a68:	cmp	lr, r2
   33a6c:	str	ip, [r7, #-4]
   33a70:	ldrb	r7, [r6]
   33a74:	add	r6, r6, #16
   33a78:	strb	r7, [r4, #1]
   33a7c:	ldr	r3, [r3, #12]
   33a80:	str	r3, [r0, r5]
   33a84:	add	r5, r5, #8
   33a88:	bne	33a4c <flatcc_builder_end_union_vector@@Base+0x94>
   33a8c:	ldr	r3, [sp, #16]
   33a90:	ldr	r4, [sp, #12]
   33a94:	cmp	r3, #0
   33a98:	beq	33aac <flatcc_builder_end_union_vector@@Base+0xf4>
   33a9c:	ldrb	r3, [r0, r2, lsl #3]!
   33aa0:	strb	r3, [sl, r2]
   33aa4:	ldr	r0, [r0, #4]
   33aa8:	str	r0, [r1, r2, lsl #2]
   33aac:	mov	r0, r8
   33ab0:	mov	r2, r9
   33ab4:	mov	r3, sl
   33ab8:	bl	32d70 <flatcc_builder_create_offset_vector_direct@@Base+0x8>
   33abc:	mov	r5, r0
   33ac0:	mov	r6, #0
   33ac4:	cmp	r0, #0
   33ac8:	beq	33b64 <flatcc_builder_end_union_vector@@Base+0x1ac>
   33acc:	mvn	r0, #0
   33ad0:	mov	r1, #1
   33ad4:	mov	r2, r9
   33ad8:	mov	r3, #1
   33adc:	str	r1, [sp]
   33ae0:	str	r0, [sp, #4]
   33ae4:	mov	r0, r8
   33ae8:	mov	r1, sl
   33aec:	bl	32b10 <flatcc_builder_create_vector@@Base>
   33af0:	b	33b68 <flatcc_builder_end_union_vector@@Base+0x1b0>
   33af4:	ldr	r2, [r8, #28]
   33af8:	ldr	r0, [r8, #40]	; 0x28
   33afc:	ldr	r7, [r8, #48]	; 0x30
   33b00:	mov	r3, #1
   33b04:	str	r3, [sp]
   33b08:	mov	r3, #1
   33b0c:	add	r1, r1, r2
   33b10:	add	r2, r1, #1
   33b14:	add	r1, r8, #60	; 0x3c
   33b18:	blx	r7
   33b1c:	cmp	r0, #0
   33b20:	bne	33b5c <flatcc_builder_end_union_vector@@Base+0x1a4>
   33b24:	ldr	r1, [r8, #28]
   33b28:	ldr	r0, [r8, #60]	; 0x3c
   33b2c:	ldr	r3, [r8, #64]	; 0x40
   33b30:	ldr	r2, [r8, #32]
   33b34:	add	r0, r0, r1
   33b38:	sub	r1, r3, r1
   33b3c:	mvn	r3, #3
   33b40:	cmn	r1, #4
   33b44:	str	r0, [r8, #16]
   33b48:	movcs	r1, r3
   33b4c:	str	r1, [r8, #24]
   33b50:	str	r3, [r2, #4]
   33b54:	adds	r1, r0, r5
   33b58:	bne	33a14 <flatcc_builder_end_union_vector@@Base+0x5c>
   33b5c:	sub	sp, fp, #28
   33b60:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   33b64:	mov	r0, #0
   33b68:	orr	r1, r6, r5
   33b6c:	stm	r4, {r0, r1}
   33b70:	mov	r1, #0
   33b74:	ldr	r0, [r8, #16]
   33b78:	ldr	r2, [r8, #20]
   33b7c:	bl	14eec <memset@plt>
   33b80:	ldr	r0, [r8, #32]
   33b84:	ldr	r1, [r8, #60]	; 0x3c
   33b88:	ldr	r2, [r8, #64]	; 0x40
   33b8c:	ldr	r3, [r0, #8]
   33b90:	str	r3, [r8, #20]
   33b94:	ldr	r3, [r0]
   33b98:	str	r3, [r8, #28]
   33b9c:	add	r1, r1, r3
   33ba0:	ldr	r7, [r0, #4]
   33ba4:	str	r1, [r8, #16]
   33ba8:	sub	r1, r2, r3
   33bac:	cmp	r1, r7
   33bb0:	movhi	r1, r7
   33bb4:	str	r1, [r8, #24]
   33bb8:	ldrh	r1, [r8, #130]	; 0x82
   33bbc:	ldrh	r2, [r8, #128]	; 0x80
   33bc0:	cmp	r2, r1
   33bc4:	strhcc	r1, [r8, #128]	; 0x80
   33bc8:	ldrh	r1, [r0, #12]
   33bcc:	sub	r0, r0, #36	; 0x24
   33bd0:	str	r0, [r8, #32]
   33bd4:	strh	r1, [r8, #130]	; 0x82
   33bd8:	ldr	r0, [r8, #156]	; 0x9c
   33bdc:	sub	r0, r0, #1
   33be0:	str	r0, [r8, #156]	; 0x9c
   33be4:	sub	sp, fp, #28
   33be8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   33bec:	movw	r0, #53540	; 0xd124
   33bf0:	movw	r1, #50434	; 0xc502
   33bf4:	movw	r3, #53590	; 0xd156
   33bf8:	movw	r2, #1617	; 0x651
   33bfc:	movt	r0, #4
   33c00:	movt	r1, #4
   33c04:	movt	r3, #4
   33c08:	bl	14f40 <__assert_fail@plt>

00033c0c <flatcc_builder_union_vector_count@@Base>:
   33c0c:	ldr	r0, [r0, #32]
   33c10:	ldr	r0, [r0, #20]
   33c14:	bx	lr

00033c18 <flatcc_builder_union_vector_edit@@Base>:
   33c18:	ldr	r0, [r0, #16]
   33c1c:	bx	lr

00033c20 <flatcc_builder_extend_union_vector@@Base>:
   33c20:	push	{r4, r5, fp, lr}
   33c24:	add	fp, sp, #8
   33c28:	sub	sp, sp, #8
   33c2c:	mov	r4, r0
   33c30:	ldr	r0, [r0, #32]
   33c34:	ldr	r2, [r0, #20]
   33c38:	adds	r2, r2, r1
   33c3c:	cmpcc	r2, #536870912	; 0x20000000
   33c40:	bcc	33c64 <flatcc_builder_extend_union_vector@@Base+0x44>
   33c44:	movw	r0, #54705	; 0xd5b1
   33c48:	movw	r1, #50434	; 0xc502
   33c4c:	movw	r3, #54732	; 0xd5cc
   33c50:	mov	r2, #892	; 0x37c
   33c54:	movt	r0, #4
   33c58:	movt	r1, #4
   33c5c:	movt	r3, #4
   33c60:	bl	14f40 <__assert_fail@plt>
   33c64:	str	r2, [r0, #20]
   33c68:	ldr	r5, [r4, #20]
   33c6c:	ldr	r0, [r4, #24]
   33c70:	add	r1, r5, r1, lsl #3
   33c74:	cmp	r1, r0
   33c78:	str	r1, [r4, #20]
   33c7c:	bcs	33c90 <flatcc_builder_extend_union_vector@@Base+0x70>
   33c80:	ldr	r0, [r4, #16]
   33c84:	add	r0, r0, r5
   33c88:	sub	sp, fp, #8
   33c8c:	pop	{r4, r5, fp, pc}
   33c90:	ldr	r2, [r4, #28]
   33c94:	ldr	r0, [r4, #40]	; 0x28
   33c98:	ldr	ip, [r4, #48]	; 0x30
   33c9c:	mov	r3, #1
   33ca0:	str	r3, [sp]
   33ca4:	mov	r3, #1
   33ca8:	add	r1, r1, r2
   33cac:	add	r2, r1, #1
   33cb0:	add	r1, r4, #60	; 0x3c
   33cb4:	blx	ip
   33cb8:	mov	r1, r0
   33cbc:	mov	r0, #0
   33cc0:	cmp	r1, #0
   33cc4:	beq	33cd0 <flatcc_builder_extend_union_vector@@Base+0xb0>
   33cc8:	sub	sp, fp, #8
   33ccc:	pop	{r4, r5, fp, pc}
   33cd0:	ldr	r1, [r4, #28]
   33cd4:	ldr	r0, [r4, #60]	; 0x3c
   33cd8:	ldr	r3, [r4, #64]	; 0x40
   33cdc:	ldr	r2, [r4, #32]
   33ce0:	add	r0, r0, r1
   33ce4:	sub	r1, r3, r1
   33ce8:	mvn	r3, #3
   33cec:	cmn	r1, #4
   33cf0:	str	r0, [r4, #16]
   33cf4:	movcs	r1, r3
   33cf8:	str	r1, [r4, #24]
   33cfc:	str	r3, [r2, #4]
   33d00:	add	r0, r0, r5
   33d04:	sub	sp, fp, #8
   33d08:	pop	{r4, r5, fp, pc}

00033d0c <flatcc_builder_truncate_union_vector@@Base>:
   33d0c:	push	{fp, lr}
   33d10:	mov	fp, sp
   33d14:	ldr	r2, [r0, #32]
   33d18:	ldrh	r3, [r2, #14]
   33d1c:	cmp	r3, #7
   33d20:	bne	33d68 <flatcc_builder_truncate_union_vector@@Base+0x5c>
   33d24:	ldr	r3, [r2, #20]
   33d28:	cmp	r3, r1
   33d2c:	bcc	33d88 <flatcc_builder_truncate_union_vector@@Base+0x7c>
   33d30:	sub	r3, r3, r1
   33d34:	str	r3, [r2, #20]
   33d38:	ldr	r2, [r0, #32]
   33d3c:	ldr	r3, [r0, #20]
   33d40:	ldr	ip, [r0, #16]
   33d44:	ldr	r2, [r2, #16]
   33d48:	mls	r3, r2, r1, r3
   33d4c:	mul	r2, r2, r1
   33d50:	mov	r1, #0
   33d54:	str	r3, [r0, #20]
   33d58:	add	r0, ip, r3
   33d5c:	bl	14eec <memset@plt>
   33d60:	mov	r0, #0
   33d64:	pop	{fp, pc}
   33d68:	movw	r0, #53540	; 0xd124
   33d6c:	movw	r1, #50434	; 0xc502
   33d70:	movw	r3, #53673	; 0xd1a9
   33d74:	movw	r2, #1665	; 0x681
   33d78:	movt	r0, #4
   33d7c:	movt	r1, #4
   33d80:	movt	r3, #4
   33d84:	bl	14f40 <__assert_fail@plt>
   33d88:	movw	r0, #52104	; 0xcb88
   33d8c:	movw	r1, #50434	; 0xc502
   33d90:	movw	r3, #53673	; 0xd1a9
   33d94:	movw	r2, #1666	; 0x682
   33d98:	movt	r0, #4
   33d9c:	movt	r1, #4
   33da0:	movt	r3, #4
   33da4:	bl	14f40 <__assert_fail@plt>

00033da8 <flatcc_builder_union_vector_push@@Base>:
   33da8:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   33dac:	add	fp, sp, #24
   33db0:	sub	sp, sp, #8
   33db4:	mov	r7, r0
   33db8:	ldr	r0, [r0, #32]
   33dbc:	mov	r9, r1
   33dc0:	ldrh	r1, [r0, #14]
   33dc4:	cmp	r1, #7
   33dc8:	bne	33e90 <flatcc_builder_union_vector_push@@Base+0xe8>
   33dcc:	ldr	r1, [r0, #20]
   33dd0:	mov	r6, #0
   33dd4:	cmn	r1, #-536870911	; 0xe0000001
   33dd8:	beq	33e38 <flatcc_builder_union_vector_push@@Base+0x90>
   33ddc:	add	r1, r1, #1
   33de0:	mov	r8, r2
   33de4:	str	r1, [r0, #20]
   33de8:	ldr	r4, [r7, #20]
   33dec:	ldr	r0, [r7, #24]
   33df0:	add	r1, r4, #8
   33df4:	cmp	r1, r0
   33df8:	str	r1, [r7, #20]
   33dfc:	bcs	33e08 <flatcc_builder_union_vector_push@@Base+0x60>
   33e00:	ldr	r0, [r7, #16]
   33e04:	b	33e74 <flatcc_builder_union_vector_push@@Base+0xcc>
   33e08:	ldr	r1, [r7, #28]
   33e0c:	ldr	r0, [r7, #40]	; 0x28
   33e10:	ldr	r5, [r7, #48]	; 0x30
   33e14:	mov	r2, #1
   33e18:	mov	r3, #1
   33e1c:	str	r2, [sp]
   33e20:	add	r1, r4, r1
   33e24:	add	r2, r1, #9
   33e28:	add	r1, r7, #60	; 0x3c
   33e2c:	blx	r5
   33e30:	cmp	r0, #0
   33e34:	beq	33e44 <flatcc_builder_union_vector_push@@Base+0x9c>
   33e38:	mov	r0, r6
   33e3c:	sub	sp, fp, #24
   33e40:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   33e44:	ldr	r1, [r7, #28]
   33e48:	ldr	r0, [r7, #60]	; 0x3c
   33e4c:	ldr	r3, [r7, #64]	; 0x40
   33e50:	ldr	r2, [r7, #32]
   33e54:	add	r0, r0, r1
   33e58:	sub	r1, r3, r1
   33e5c:	mvn	r3, #3
   33e60:	cmn	r1, #4
   33e64:	str	r0, [r7, #16]
   33e68:	movcs	r1, r3
   33e6c:	str	r1, [r7, #24]
   33e70:	str	r3, [r2, #4]
   33e74:	adds	r0, r0, r4
   33e78:	movne	r6, r0
   33e7c:	strne	r9, [r0]
   33e80:	strne	r8, [r0, #4]
   33e84:	mov	r0, r6
   33e88:	sub	sp, fp, #24
   33e8c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   33e90:	movw	r0, #53540	; 0xd124
   33e94:	movw	r1, #50434	; 0xc502
   33e98:	movw	r3, #53742	; 0xd1ee
   33e9c:	movw	r2, #1677	; 0x68d
   33ea0:	movt	r0, #4
   33ea4:	movt	r1, #4
   33ea8:	movt	r3, #4
   33eac:	bl	14f40 <__assert_fail@plt>

00033eb0 <flatcc_builder_append_union_vector@@Base>:
   33eb0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   33eb4:	add	fp, sp, #24
   33eb8:	sub	sp, sp, #8
   33ebc:	mov	r6, r0
   33ec0:	ldr	r0, [r0, #32]
   33ec4:	mov	r8, r1
   33ec8:	ldrh	r1, [r0, #14]
   33ecc:	cmp	r1, #7
   33ed0:	bne	33fd4 <flatcc_builder_append_union_vector@@Base+0x124>
   33ed4:	ldr	r1, [r0, #20]
   33ed8:	mov	r5, r2
   33edc:	adds	r1, r1, r2
   33ee0:	cmpcc	r1, #536870912	; 0x20000000
   33ee4:	bcc	33f08 <flatcc_builder_append_union_vector@@Base+0x58>
   33ee8:	movw	r0, #54705	; 0xd5b1
   33eec:	movw	r1, #50434	; 0xc502
   33ef0:	movw	r3, #54732	; 0xd5cc
   33ef4:	mov	r2, #892	; 0x37c
   33ef8:	movt	r0, #4
   33efc:	movt	r1, #4
   33f00:	movt	r3, #4
   33f04:	bl	14f40 <__assert_fail@plt>
   33f08:	str	r1, [r0, #20]
   33f0c:	ldr	r4, [r6, #20]
   33f10:	ldr	r0, [r6, #24]
   33f14:	add	r1, r4, r5, lsl #3
   33f18:	cmp	r1, r0
   33f1c:	str	r1, [r6, #20]
   33f20:	bcs	33f4c <flatcc_builder_append_union_vector@@Base+0x9c>
   33f24:	ldr	r0, [r6, #16]
   33f28:	adds	r7, r0, r4
   33f2c:	beq	33fc4 <flatcc_builder_append_union_vector@@Base+0x114>
   33f30:	lsl	r2, r5, #3
   33f34:	mov	r0, r7
   33f38:	mov	r1, r8
   33f3c:	bl	14e5c <memcpy@plt>
   33f40:	mov	r0, r7
   33f44:	sub	sp, fp, #24
   33f48:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   33f4c:	ldr	r2, [r6, #28]
   33f50:	ldr	r0, [r6, #40]	; 0x28
   33f54:	ldr	r7, [r6, #48]	; 0x30
   33f58:	mov	r3, #1
   33f5c:	str	r3, [sp]
   33f60:	mov	r3, #1
   33f64:	add	r1, r1, r2
   33f68:	add	r2, r1, #1
   33f6c:	add	r1, r6, #60	; 0x3c
   33f70:	blx	r7
   33f74:	mov	r7, #0
   33f78:	cmp	r0, #0
   33f7c:	beq	33f8c <flatcc_builder_append_union_vector@@Base+0xdc>
   33f80:	mov	r0, r7
   33f84:	sub	sp, fp, #24
   33f88:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   33f8c:	ldr	r1, [r6, #28]
   33f90:	ldr	r0, [r6, #60]	; 0x3c
   33f94:	ldr	r3, [r6, #64]	; 0x40
   33f98:	ldr	r2, [r6, #32]
   33f9c:	add	r0, r0, r1
   33fa0:	sub	r1, r3, r1
   33fa4:	mvn	r3, #3
   33fa8:	cmn	r1, #4
   33fac:	str	r0, [r6, #16]
   33fb0:	movcs	r1, r3
   33fb4:	str	r1, [r6, #24]
   33fb8:	str	r3, [r2, #4]
   33fbc:	adds	r7, r0, r4
   33fc0:	bne	33f30 <flatcc_builder_append_union_vector@@Base+0x80>
   33fc4:	mov	r7, #0
   33fc8:	mov	r0, r7
   33fcc:	sub	sp, fp, #24
   33fd0:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   33fd4:	movw	r0, #53540	; 0xd124
   33fd8:	movw	r1, #50434	; 0xc502
   33fdc:	movw	r3, #53851	; 0xd25b
   33fe0:	movw	r2, #1692	; 0x69c
   33fe4:	movt	r0, #4
   33fe8:	movt	r1, #4
   33fec:	movt	r3, #4
   33ff0:	bl	14f40 <__assert_fail@plt>

00033ff4 <flatcc_builder_create_string@@Base>:
   33ff4:	push	{r4, r5, r6, sl, fp, lr}
   33ff8:	add	fp, sp, #16
   33ffc:	sub	sp, sp, #80	; 0x50
   34000:	str	r2, [fp, #-20]	; 0xffffffec
   34004:	mvn	r5, r2
   34008:	mov	r6, r0
   3400c:	sub	r3, fp, #20
   34010:	cmp	r2, #0
   34014:	add	lr, sp, #4
   34018:	ldr	ip, [r0, #136]	; 0x88
   3401c:	mov	r0, #4
   34020:	str	r0, [sp, #16]
   34024:	str	r3, [sp, #12]
   34028:	mov	r3, #1
   3402c:	str	r0, [sp, #4]
   34030:	addne	r0, r2, #4
   34034:	str	r3, [sp, #8]
   34038:	strne	r2, [sp, #24]
   3403c:	movw	r2, #49904	; 0xc2f0
   34040:	movne	r3, #2
   34044:	strne	r1, [sp, #20]
   34048:	strne	r3, [sp, #8]
   3404c:	strne	r0, [sp, #4]
   34050:	movt	r2, #4
   34054:	add	r5, ip, r5
   34058:	and	r5, r5, #3
   3405c:	add	r5, r5, #1
   34060:	add	r1, r0, r5
   34064:	add	r0, lr, r3, lsl #3
   34068:	str	r1, [sp, #4]
   3406c:	cmp	r1, #0
   34070:	str	r2, [r0, #8]
   34074:	add	r2, r3, #1
   34078:	str	r5, [r0, #12]
   3407c:	str	r2, [sp, #8]
   34080:	ble	340d4 <flatcc_builder_create_string@@Base+0xe0>
   34084:	ldr	r0, [r6, #36]	; 0x24
   34088:	ldr	r4, [r6, #44]	; 0x2c
   3408c:	sub	r5, ip, r1
   34090:	str	r1, [sp]
   34094:	add	r1, lr, #8
   34098:	mov	r3, r5
   3409c:	blx	r4
   340a0:	cmp	r0, #0
   340a4:	streq	r5, [r6, #136]	; 0x88
   340a8:	moveq	r0, r5
   340ac:	subeq	sp, fp, #16
   340b0:	popeq	{r4, r5, r6, sl, fp, pc}
   340b4:	movw	r0, #54952	; 0xd6a8
   340b8:	movw	r1, #50434	; 0xc502
   340bc:	movw	r3, #54631	; 0xd567
   340c0:	movw	r2, #651	; 0x28b
   340c4:	movt	r0, #4
   340c8:	movt	r1, #4
   340cc:	movt	r3, #4
   340d0:	bl	14f40 <__assert_fail@plt>
   340d4:	movw	r0, #54952	; 0xd6a8
   340d8:	movw	r1, #50434	; 0xc502
   340dc:	movw	r3, #54631	; 0xd567
   340e0:	movw	r2, #647	; 0x287
   340e4:	movt	r0, #4
   340e8:	movt	r1, #4
   340ec:	movt	r3, #4
   340f0:	bl	14f40 <__assert_fail@plt>

000340f4 <flatcc_builder_create_string_str@@Base>:
   340f4:	push	{r4, r5, fp, lr}
   340f8:	add	fp, sp, #8
   340fc:	mov	r5, r0
   34100:	mov	r0, r1
   34104:	mov	r4, r1
   34108:	bl	14ec8 <strlen@plt>
   3410c:	mov	r2, r0
   34110:	mov	r0, r5
   34114:	mov	r1, r4
   34118:	pop	{r4, r5, fp, lr}
   3411c:	b	33ff4 <flatcc_builder_create_string@@Base>

00034120 <flatcc_builder_create_string_strn@@Base>:
   34120:	push	{r4, r5, r6, sl, fp, lr}
   34124:	add	fp, sp, #16
   34128:	mov	r6, r0
   3412c:	mov	r5, r1
   34130:	mov	r0, r1
   34134:	mov	r1, #0
   34138:	mov	r4, r2
   3413c:	bl	14f10 <memchr@plt>
   34140:	cmp	r0, #0
   34144:	mov	r1, r5
   34148:	subne	r4, r0, r5
   3414c:	mov	r0, r6
   34150:	mov	r2, r4
   34154:	pop	{r4, r5, r6, sl, fp, lr}
   34158:	b	33ff4 <flatcc_builder_create_string@@Base>

0003415c <flatcc_builder_end_string@@Base>:
   3415c:	push	{r4, r5, fp, lr}
   34160:	add	fp, sp, #8
   34164:	mov	r4, r0
   34168:	ldr	r0, [r0, #32]
   3416c:	ldrh	r1, [r0, #14]
   34170:	cmp	r1, #6
   34174:	bne	3421c <flatcc_builder_end_string@@Base+0xc0>
   34178:	ldr	r2, [r0, #20]
   3417c:	ldr	r0, [r4, #20]
   34180:	cmp	r2, r0
   34184:	bne	3423c <flatcc_builder_end_string@@Base+0xe0>
   34188:	ldr	r1, [r4, #16]
   3418c:	mov	r0, r4
   34190:	bl	33ff4 <flatcc_builder_create_string@@Base>
   34194:	mov	r5, r0
   34198:	cmp	r0, #0
   3419c:	beq	34214 <flatcc_builder_end_string@@Base+0xb8>
   341a0:	ldr	r0, [r4, #16]
   341a4:	ldr	r2, [r4, #20]
   341a8:	mov	r1, #0
   341ac:	bl	14eec <memset@plt>
   341b0:	ldr	r0, [r4, #32]
   341b4:	ldr	r1, [r4, #60]	; 0x3c
   341b8:	ldr	ip, [r4, #64]	; 0x40
   341bc:	ldr	r3, [r0, #8]
   341c0:	str	r3, [r4, #20]
   341c4:	ldr	r3, [r0]
   341c8:	str	r3, [r4, #28]
   341cc:	add	r1, r1, r3
   341d0:	ldr	r2, [r0, #4]
   341d4:	str	r1, [r4, #16]
   341d8:	sub	r1, ip, r3
   341dc:	cmp	r1, r2
   341e0:	movhi	r1, r2
   341e4:	str	r1, [r4, #24]
   341e8:	ldrh	r1, [r4, #130]	; 0x82
   341ec:	ldrh	r2, [r4, #128]	; 0x80
   341f0:	cmp	r2, r1
   341f4:	strhcc	r1, [r4, #128]	; 0x80
   341f8:	ldrh	r1, [r0, #12]
   341fc:	sub	r0, r0, #36	; 0x24
   34200:	str	r0, [r4, #32]
   34204:	strh	r1, [r4, #130]	; 0x82
   34208:	ldr	r0, [r4, #156]	; 0x9c
   3420c:	sub	r0, r0, #1
   34210:	str	r0, [r4, #156]	; 0x9c
   34214:	mov	r0, r5
   34218:	pop	{r4, r5, fp, pc}
   3421c:	movw	r0, #51751	; 0xca27
   34220:	movw	r1, #50434	; 0xc502
   34224:	movw	r3, #53978	; 0xd2da
   34228:	movw	r2, #1732	; 0x6c4
   3422c:	movt	r0, #4
   34230:	movt	r1, #4
   34234:	movt	r3, #4
   34238:	bl	14f40 <__assert_fail@plt>
   3423c:	movw	r0, #54045	; 0xd31d
   34240:	movw	r1, #50434	; 0xc502
   34244:	movw	r3, #53978	; 0xd2da
   34248:	movw	r2, #1733	; 0x6c5
   3424c:	movt	r0, #4
   34250:	movt	r1, #4
   34254:	movt	r3, #4
   34258:	bl	14f40 <__assert_fail@plt>

0003425c <flatcc_builder_string_edit@@Base>:
   3425c:	ldr	r0, [r0, #16]
   34260:	bx	lr

00034264 <flatcc_builder_string_len@@Base>:
   34264:	ldr	r0, [r0, #32]
   34268:	ldr	r0, [r0, #20]
   3426c:	bx	lr

00034270 <flatcc_builder_table_edit@@Base>:
   34270:	push	{fp, lr}
   34274:	mov	fp, sp
   34278:	ldr	r2, [r0, #32]
   3427c:	ldrh	r2, [r2, #14]
   34280:	cmp	r2, #3
   34284:	ldreq	r2, [r0, #16]
   34288:	ldreq	r0, [r0, #20]
   3428c:	addeq	r0, r2, r0
   34290:	subeq	r0, r0, r1
   34294:	popeq	{fp, pc}
   34298:	movw	r0, #52503	; 0xcd17
   3429c:	movw	r1, #50434	; 0xc502
   342a0:	movw	r3, #54223	; 0xd3cf
   342a4:	movw	r2, #1794	; 0x702
   342a8:	movt	r0, #4
   342ac:	movt	r1, #4
   342b0:	movt	r3, #4
   342b4:	bl	14f40 <__assert_fail@plt>

000342b8 <flatcc_builder_table_add_copy@@Base>:
   342b8:	push	{r4, r5, r6, sl, fp, lr}
   342bc:	add	fp, sp, #16
   342c0:	mov	r4, r3
   342c4:	ldr	r3, [fp, #8]
   342c8:	mov	r5, r2
   342cc:	mov	r2, r4
   342d0:	bl	332fc <flatcc_builder_table_add@@Base>
   342d4:	mov	r6, r0
   342d8:	cmp	r0, #0
   342dc:	beq	342f0 <flatcc_builder_table_add_copy@@Base+0x38>
   342e0:	mov	r0, r6
   342e4:	mov	r1, r5
   342e8:	mov	r2, r4
   342ec:	bl	14e5c <memcpy@plt>
   342f0:	mov	r0, r6
   342f4:	pop	{r4, r5, r6, sl, fp, pc}

000342f8 <flatcc_builder_push_buffer_alignment@@Base>:
   342f8:	ldrh	r1, [r0, #128]	; 0x80
   342fc:	mov	r2, #4
   34300:	strh	r2, [r0, #128]	; 0x80
   34304:	mov	r0, r1
   34308:	bx	lr

0003430c <flatcc_builder_pop_buffer_alignment@@Base>:
   3430c:	ldrh	r2, [r0, #128]	; 0x80
   34310:	cmp	r2, r1
   34314:	strhcc	r1, [r0, #128]	; 0x80
   34318:	bx	lr

0003431c <flatcc_builder_get_buffer_alignment@@Base>:
   3431c:	ldrh	r0, [r0, #128]	; 0x80
   34320:	bx	lr

00034324 <flatcc_builder_set_vtable_clustering@@Base>:
   34324:	clz	r1, r1
   34328:	lsr	r1, r1, #5
   3432c:	str	r1, [r0, #180]	; 0xb4
   34330:	bx	lr

00034334 <flatcc_builder_set_block_align@@Base>:
   34334:	strh	r1, [r0, #132]	; 0x84
   34338:	bx	lr

0003433c <flatcc_builder_get_level@@Base>:
   3433c:	ldr	r0, [r0, #156]	; 0x9c
   34340:	bx	lr

00034344 <flatcc_builder_set_max_level@@Base>:
   34344:	str	r1, [r0, #176]	; 0xb0
   34348:	ldr	r2, [r0, #160]	; 0xa0
   3434c:	cmp	r2, r1
   34350:	strlt	r1, [r0, #160]	; 0xa0
   34354:	bx	lr

00034358 <flatcc_builder_get_buffer_size@@Base>:
   34358:	ldr	r1, [r0, #136]	; 0x88
   3435c:	ldr	r0, [r0, #140]	; 0x8c
   34360:	sub	r0, r0, r1
   34364:	bx	lr

00034368 <flatcc_builder_get_buffer_start@@Base>:
   34368:	ldr	r0, [r0, #136]	; 0x88
   3436c:	bx	lr

00034370 <flatcc_builder_get_buffer_end@@Base>:
   34370:	ldr	r0, [r0, #140]	; 0x8c
   34374:	bx	lr

00034378 <flatcc_builder_set_vtable_cache_limit@@Base>:
   34378:	str	r1, [r0, #172]	; 0xac
   3437c:	bx	lr

00034380 <flatcc_builder_set_identifier@@Base>:
   34380:	movw	r2, #49904	; 0xc2f0
   34384:	cmp	r1, #0
   34388:	movt	r2, #4
   3438c:	movne	r2, r1
   34390:	ldr	r1, [r2]
   34394:	str	r1, [r0, #168]	; 0xa8
   34398:	bx	lr

0003439c <flatcc_builder_get_type@@Base>:
   3439c:	ldr	r0, [r0, #32]
   343a0:	cmp	r0, #0
   343a4:	ldrhne	r0, [r0, #14]
   343a8:	moveq	r0, #0
   343ac:	bx	lr

000343b0 <flatcc_builder_get_type_at@@Base>:
   343b0:	mov	r2, r0
   343b4:	mov	r0, #0
   343b8:	cmp	r1, #1
   343bc:	blt	343e0 <flatcc_builder_get_type_at@@Base+0x30>
   343c0:	ldr	r3, [r2, #156]	; 0x9c
   343c4:	cmp	r3, r1
   343c8:	bxlt	lr
   343cc:	sub	r0, r1, r3
   343d0:	ldr	r1, [r2, #32]
   343d4:	add	r0, r0, r0, lsl #3
   343d8:	add	r0, r1, r0, lsl #2
   343dc:	ldrh	r0, [r0, #14]
   343e0:	bx	lr

000343e4 <flatcc_builder_get_direct_buffer@@Base>:
   343e4:	ldr	r2, [r0, #184]	; 0xb8
   343e8:	cmp	r2, #0
   343ec:	beq	34400 <flatcc_builder_get_direct_buffer@@Base+0x1c>
   343f0:	ldr	r2, [r0, #188]	; 0xbc
   343f4:	ldr	r3, [r0, #192]	; 0xc0
   343f8:	cmp	r2, r3
   343fc:	beq	34418 <flatcc_builder_get_direct_buffer@@Base+0x34>
   34400:	cmp	r1, #0
   34404:	moveq	r0, #0
   34408:	bxeq	lr
   3440c:	mov	r0, #0
   34410:	str	r0, [r1]
   34414:	bx	lr
   34418:	cmp	r1, #0
   3441c:	ldrne	r2, [r0, #212]	; 0xd4
   34420:	strne	r2, [r1]
   34424:	ldr	r0, [r0, #196]	; 0xc4
   34428:	bx	lr

0003442c <flatcc_builder_copy_buffer@@Base>:
   3442c:	push	{fp, lr}
   34430:	mov	fp, sp
   34434:	ldr	r3, [r0, #184]	; 0xb8
   34438:	cmp	r3, #0
   3443c:	beq	34470 <flatcc_builder_copy_buffer@@Base+0x44>
   34440:	add	r0, r0, #188	; 0xbc
   34444:	bl	34b70 <flatcc_emitter_copy_buffer@@Base>
   34448:	cmp	r0, #0
   3444c:	popne	{fp, pc}
   34450:	movw	r0, #34839	; 0x8817
   34454:	movw	r1, #50434	; 0xc502
   34458:	movw	r3, #54362	; 0xd45a
   3445c:	movw	r2, #1926	; 0x786
   34460:	movt	r0, #4
   34464:	movt	r1, #4
   34468:	movt	r3, #4
   3446c:	bl	14f40 <__assert_fail@plt>
   34470:	mov	r0, #0
   34474:	pop	{fp, pc}

00034478 <flatcc_builder_finalize_buffer@@Base>:
   34478:	push	{r4, r5, r6, sl, fp, lr}
   3447c:	add	fp, sp, #16
   34480:	mov	r5, r0
   34484:	ldr	r0, [r0, #136]	; 0x88
   34488:	cmp	r1, #0
   3448c:	ldr	r2, [r5, #140]	; 0x8c
   34490:	sub	r4, r2, r0
   34494:	mov	r0, r4
   34498:	strne	r4, [r1]
   3449c:	bl	14e98 <malloc@plt>
   344a0:	cmp	r0, #0
   344a4:	beq	344f4 <flatcc_builder_finalize_buffer@@Base+0x7c>
   344a8:	mov	r6, r0
   344ac:	ldr	r0, [r5, #184]	; 0xb8
   344b0:	cmp	r0, #0
   344b4:	beq	34514 <flatcc_builder_finalize_buffer@@Base+0x9c>
   344b8:	add	r0, r5, #188	; 0xbc
   344bc:	mov	r1, r6
   344c0:	mov	r2, r4
   344c4:	bl	34b70 <flatcc_emitter_copy_buffer@@Base>
   344c8:	cmp	r0, #0
   344cc:	movne	r0, r6
   344d0:	popne	{r4, r5, r6, sl, fp, pc}
   344d4:	movw	r0, #34839	; 0x8817
   344d8:	movw	r1, #50434	; 0xc502
   344dc:	movw	r3, #54362	; 0xd45a
   344e0:	movw	r2, #1926	; 0x786
   344e4:	movt	r0, #4
   344e8:	movt	r1, #4
   344ec:	movt	r3, #4
   344f0:	bl	14f40 <__assert_fail@plt>
   344f4:	movw	r0, #54952	; 0xd6a8
   344f8:	movw	r1, #50434	; 0xc502
   344fc:	movw	r3, #54431	; 0xd49f
   34500:	movw	r2, #1944	; 0x798
   34504:	movt	r0, #4
   34508:	movt	r1, #4
   3450c:	movt	r3, #4
   34510:	bl	14f40 <__assert_fail@plt>
   34514:	movw	r0, #54952	; 0xd6a8
   34518:	movw	r1, #50434	; 0xc502
   3451c:	movw	r3, #54431	; 0xd49f
   34520:	movw	r2, #1948	; 0x79c
   34524:	movt	r0, #4
   34528:	movt	r1, #4
   3452c:	movt	r3, #4
   34530:	bl	14f40 <__assert_fail@plt>

00034534 <flatcc_builder_finalize_aligned_buffer@@Base>:
   34534:	push	{r4, r5, r6, r7, fp, lr}
   34538:	add	fp, sp, #16
   3453c:	sub	sp, sp, #8
   34540:	mov	r5, r0
   34544:	mov	r4, r1
   34548:	ldr	r0, [r0, #136]	; 0x88
   3454c:	ldr	r1, [r5, #140]	; 0x8c
   34550:	cmp	r4, #0
   34554:	sub	r0, r1, r0
   34558:	mov	r1, #0
   3455c:	strne	r0, [r4]
   34560:	ldrh	r2, [r5, #128]	; 0x80
   34564:	str	r1, [sp, #4]
   34568:	add	r0, r0, r2
   3456c:	cmp	r2, #4
   34570:	mov	r1, r2
   34574:	rsb	r2, r2, #0
   34578:	sub	r0, r0, #1
   3457c:	movls	r1, #4
   34580:	and	r7, r0, r2
   34584:	add	r0, sp, #4
   34588:	mov	r2, r7
   3458c:	bl	14ee0 <posix_memalign@plt>
   34590:	ldr	r6, [sp, #4]
   34594:	cmp	r0, #0
   34598:	cmpne	r6, #0
   3459c:	bne	345d8 <flatcc_builder_finalize_aligned_buffer@@Base+0xa4>
   345a0:	cmp	r6, #0
   345a4:	beq	345e0 <flatcc_builder_finalize_aligned_buffer@@Base+0xac>
   345a8:	ldr	r0, [r5, #184]	; 0xb8
   345ac:	cmp	r0, #0
   345b0:	beq	345d8 <flatcc_builder_finalize_aligned_buffer@@Base+0xa4>
   345b4:	add	r0, r5, #188	; 0xbc
   345b8:	mov	r1, r6
   345bc:	mov	r2, r7
   345c0:	bl	34b70 <flatcc_emitter_copy_buffer@@Base>
   345c4:	cmp	r0, #0
   345c8:	beq	345f8 <flatcc_builder_finalize_aligned_buffer@@Base+0xc4>
   345cc:	mov	r0, r6
   345d0:	sub	sp, fp, #16
   345d4:	pop	{r4, r5, r6, r7, fp, pc}
   345d8:	mov	r0, r6
   345dc:	bl	14e50 <free@plt>
   345e0:	mov	r6, #0
   345e4:	cmp	r4, #0
   345e8:	strne	r6, [r4]
   345ec:	mov	r0, r6
   345f0:	sub	sp, fp, #16
   345f4:	pop	{r4, r5, r6, r7, fp, pc}
   345f8:	movw	r0, #34839	; 0x8817
   345fc:	movw	r1, #50434	; 0xc502
   34600:	movw	r3, #54362	; 0xd45a
   34604:	movw	r2, #1926	; 0x786
   34608:	movt	r0, #4
   3460c:	movt	r1, #4
   34610:	movt	r3, #4
   34614:	bl	14f40 <__assert_fail@plt>

00034618 <flatcc_builder_aligned_alloc@@Base>:
   34618:	push	{fp, lr}
   3461c:	mov	fp, sp
   34620:	sub	sp, sp, #8
   34624:	mov	r2, r1
   34628:	mov	r1, r0
   3462c:	mov	r0, #0
   34630:	cmp	r1, #4
   34634:	str	r0, [sp, #4]
   34638:	add	r0, sp, #4
   3463c:	movls	r1, #4
   34640:	bl	14ee0 <posix_memalign@plt>
   34644:	mov	r1, r0
   34648:	ldr	r0, [sp, #4]
   3464c:	cmp	r1, #0
   34650:	cmpne	r0, #0
   34654:	bne	34660 <flatcc_builder_aligned_alloc@@Base+0x48>
   34658:	mov	sp, fp
   3465c:	pop	{fp, pc}
   34660:	bl	14e50 <free@plt>
   34664:	mov	r0, #0
   34668:	str	r0, [sp, #4]
   3466c:	mov	sp, fp
   34670:	pop	{fp, pc}

00034674 <flatcc_builder_aligned_free@@Base>:
   34674:	b	14e50 <free@plt>

00034678 <flatcc_builder_get_emit_context@@Base>:
   34678:	ldr	r0, [r0, #36]	; 0x24
   3467c:	bx	lr

00034680 <flatcc_emitter_recycle_page@@Base>:
   34680:	ldr	r3, [r0]
   34684:	mov	r2, r0
   34688:	mvn	r0, #0
   3468c:	cmp	r3, r1
   34690:	beq	346d0 <flatcc_emitter_recycle_page@@Base+0x50>
   34694:	ldr	r2, [r2, #4]
   34698:	cmp	r2, r1
   3469c:	bxeq	lr
   346a0:	ldr	r0, [r1, #2944]	; 0xb80
   346a4:	ldr	r2, [r1, #2948]	; 0xb84
   346a8:	str	r2, [r0, #2948]	; 0xb84
   346ac:	ldr	r2, [r1, #2948]	; 0xb84
   346b0:	str	r0, [r2, #2944]	; 0xb80
   346b4:	ldr	r0, [r3, #2948]	; 0xb84
   346b8:	str	r3, [r1, #2944]	; 0xb80
   346bc:	str	r0, [r1, #2948]	; 0xb84
   346c0:	str	r1, [r0, #2944]	; 0xb80
   346c4:	ldr	r0, [r1, #2944]	; 0xb80
   346c8:	str	r1, [r0, #2948]	; 0xb84
   346cc:	mov	r0, #0
   346d0:	bx	lr

000346d4 <flatcc_emitter_reset@@Base>:
   346d4:	push	{r4, sl, fp, lr}
   346d8:	add	fp, sp, #8
   346dc:	ldr	r1, [r0]
   346e0:	cmp	r1, #0
   346e4:	beq	3479c <flatcc_emitter_reset@@Base+0xc8>
   346e8:	mov	r4, r0
   346ec:	add	r2, r1, #1472	; 0x5c0
   346f0:	mov	r0, #1472	; 0x5c0
   346f4:	mov	r3, #0
   346f8:	stmib	r4, {r1, r2}
   346fc:	str	r0, [r4, #12]
   34700:	str	r2, [r4, #16]
   34704:	str	r0, [r4, #20]
   34708:	movw	r0, #64064	; 0xfa40
   3470c:	movt	r0, #65535	; 0xffff
   34710:	str	r0, [r1, #2952]	; 0xb88
   34714:	ldr	r2, [r4, #32]
   34718:	ldr	r0, [r4, #24]
   3471c:	cmp	r2, #0
   34720:	moveq	r2, r0
   34724:	streq	r0, [r4, #32]
   34728:	str	r3, [r4, #24]
   3472c:	add	r2, r2, r2, lsl #1
   34730:	lsr	r2, r2, #2
   34734:	add	r0, r2, r0, lsr #2
   34738:	str	r0, [r4, #32]
   3473c:	ldr	r2, [r4, #28]
   34740:	cmp	r2, r0, lsl #1
   34744:	bls	3479c <flatcc_emitter_reset@@Base+0xc8>
   34748:	mov	r2, r1
   3474c:	ldr	r0, [r2, #2944]!	; 0xb80
   34750:	cmp	r0, r1
   34754:	popeq	{r4, sl, fp, pc}
   34758:	ldr	r3, [r0, #2944]	; 0xb80
   3475c:	str	r3, [r2]
   34760:	ldr	r2, [r0, #2944]	; 0xb80
   34764:	str	r1, [r2, #2948]	; 0xb84
   34768:	bl	14e50 <free@plt>
   3476c:	ldr	r0, [r4, #28]
   34770:	ldr	r1, [r4, #32]
   34774:	sub	r0, r0, #2944	; 0xb80
   34778:	cmp	r0, r1, lsl #1
   3477c:	str	r0, [r4, #28]
   34780:	bls	3479c <flatcc_emitter_reset@@Base+0xc8>
   34784:	ldr	r1, [r4, #4]
   34788:	ldr	r3, [r4]
   3478c:	mov	r2, r1
   34790:	ldr	r0, [r2, #2944]!	; 0xb80
   34794:	cmp	r0, r3
   34798:	bne	34758 <flatcc_emitter_reset@@Base+0x84>
   3479c:	pop	{r4, sl, fp, pc}

000347a0 <flatcc_emitter_clear@@Base>:
   347a0:	push	{r4, r5, r6, sl, fp, lr}
   347a4:	add	fp, sp, #16
   347a8:	ldr	r5, [r0]
   347ac:	cmp	r5, #0
   347b0:	beq	34808 <flatcc_emitter_clear@@Base+0x68>
   347b4:	mov	r4, r0
   347b8:	ldr	r0, [r5, #2948]	; 0xb84
   347bc:	mov	r6, #0
   347c0:	str	r6, [r0, #2944]	; 0xb80
   347c4:	ldr	r0, [r5, #2944]	; 0xb80
   347c8:	cmp	r0, #0
   347cc:	beq	347e8 <flatcc_emitter_clear@@Base+0x48>
   347d0:	mov	r5, r0
   347d4:	ldr	r0, [r0, #2948]	; 0xb84
   347d8:	bl	14e50 <free@plt>
   347dc:	ldr	r0, [r5, #2944]	; 0xb80
   347e0:	cmp	r0, #0
   347e4:	bne	347d0 <flatcc_emitter_clear@@Base+0x30>
   347e8:	mov	r0, r5
   347ec:	bl	14e50 <free@plt>
   347f0:	vmov.i32	q8, #0	; 0x00000000
   347f4:	add	r0, r4, #16
   347f8:	vst1.32	{d16-d17}, [r0]
   347fc:	mov	r0, #32
   34800:	vst1.32	{d16-d17}, [r4], r0
   34804:	str	r6, [r4]
   34808:	pop	{r4, r5, r6, sl, fp, pc}

0003480c <flatcc_emitter@@Base>:
   3480c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   34810:	add	fp, sp, #28
   34814:	sub	sp, sp, #4
   34818:	mov	r6, r0
   3481c:	mov	r7, r1
   34820:	ldr	r0, [r0, #24]
   34824:	ldr	r1, [fp, #8]
   34828:	mov	r4, r2
   3482c:	cmn	r3, #1
   34830:	mov	r9, r6
   34834:	add	r0, r0, r1
   34838:	str	r0, [r6, #24]
   3483c:	ble	349a4 <flatcc_emitter@@Base+0x198>
   34840:	ldr	r0, [r9, #20]!
   34844:	cmp	r0, r1
   34848:	bcs	34b04 <flatcc_emitter@@Base+0x2f8>
   3484c:	mov	r8, #0
   34850:	cmp	r4, #0
   34854:	beq	34b64 <flatcc_emitter@@Base+0x358>
   34858:	movw	sl, #64064	; 0xfa40
   3485c:	movt	sl, #65535	; 0xffff
   34860:	ldr	r8, [r7, #4]
   34864:	cmp	r8, #0
   34868:	beq	34988 <flatcc_emitter@@Base+0x17c>
   3486c:	ldr	r9, [r7]
   34870:	cmp	r8, r0
   34874:	mov	r5, r8
   34878:	bls	34884 <flatcc_emitter@@Base+0x78>
   3487c:	b	348c4 <flatcc_emitter@@Base+0xb8>
   34880:	mov	r5, r8
   34884:	ldr	r0, [r6, #16]
   34888:	mov	r1, r9
   3488c:	mov	r2, r5
   34890:	bl	14e5c <memcpy@plt>
   34894:	ldr	r0, [r6, #16]
   34898:	ldr	r1, [r6, #20]
   3489c:	add	r9, r9, r5
   348a0:	subs	r8, r8, r5
   348a4:	add	r2, r0, r5
   348a8:	sub	r0, r1, r5
   348ac:	str	r2, [r6, #16]
   348b0:	str	r0, [r6, #20]
   348b4:	beq	34988 <flatcc_emitter@@Base+0x17c>
   348b8:	cmp	r8, r0
   348bc:	mov	r5, r8
   348c0:	bls	34884 <flatcc_emitter@@Base+0x78>
   348c4:	mov	r5, r0
   348c8:	cmp	r5, #0
   348cc:	beq	34918 <flatcc_emitter@@Base+0x10c>
   348d0:	b	34884 <flatcc_emitter@@Base+0x78>
   348d4:	ldr	r1, [r6]
   348d8:	str	r1, [r0, #2944]	; 0xb80
   348dc:	str	r5, [r0, #2948]	; 0xb84
   348e0:	str	r0, [r1, #2948]	; 0xb84
   348e4:	str	r0, [r5, #2944]	; 0xb80
   348e8:	mov	r5, #2944	; 0xb80
   348ec:	str	r0, [r6, #4]
   348f0:	str	r0, [r6, #16]
   348f4:	str	r5, [r6, #20]
   348f8:	ldr	r1, [r0, #2948]	; 0xb84
   348fc:	ldr	r1, [r1, #2952]	; 0xb88
   34900:	add	r1, r1, #2944	; 0xb80
   34904:	str	r1, [r0, #2952]	; 0xb88
   34908:	cmp	r8, r5
   3490c:	bls	34880 <flatcc_emitter@@Base+0x74>
   34910:	cmp	r5, #0
   34914:	bne	34884 <flatcc_emitter@@Base+0x78>
   34918:	ldr	r5, [r6, #4]
   3491c:	cmp	r5, #0
   34920:	beq	34934 <flatcc_emitter@@Base+0x128>
   34924:	ldr	r0, [r5, #2944]	; 0xb80
   34928:	ldr	r1, [r6]
   3492c:	cmp	r0, r1
   34930:	bne	348e8 <flatcc_emitter@@Base+0xdc>
   34934:	movw	r0, #2956	; 0xb8c
   34938:	bl	14e98 <malloc@plt>
   3493c:	cmp	r0, #0
   34940:	beq	34b14 <flatcc_emitter@@Base+0x308>
   34944:	ldr	r1, [r6, #28]
   34948:	cmp	r5, #0
   3494c:	add	r1, r1, #2944	; 0xb80
   34950:	str	r1, [r6, #28]
   34954:	bne	348d4 <flatcc_emitter@@Base+0xc8>
   34958:	add	r1, r0, #1472	; 0x5c0
   3495c:	mov	r5, #1472	; 0x5c0
   34960:	str	r0, [r6]
   34964:	stmib	r6, {r0, r1, r5}
   34968:	str	r1, [r6, #16]
   3496c:	str	r5, [r6, #20]
   34970:	str	r0, [r0, #2944]	; 0xb80
   34974:	str	r0, [r0, #2948]	; 0xb84
   34978:	str	sl, [r0, #2952]	; 0xb88
   3497c:	cmp	r8, r5
   34980:	bhi	34910 <flatcc_emitter@@Base+0x104>
   34984:	b	34880 <flatcc_emitter@@Base+0x74>
   34988:	subs	r4, r4, #1
   3498c:	add	r7, r7, #8
   34990:	bne	34860 <flatcc_emitter@@Base+0x54>
   34994:	mov	r8, #0
   34998:	mov	r0, r8
   3499c:	sub	sp, fp, #28
   349a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   349a4:	ldr	r0, [r9, #12]!
   349a8:	cmp	r0, r1
   349ac:	bcs	34b24 <flatcc_emitter@@Base+0x318>
   349b0:	mov	r8, #0
   349b4:	cmp	r4, #0
   349b8:	beq	34b64 <flatcc_emitter@@Base+0x358>
   349bc:	add	r0, r7, r4, lsl #3
   349c0:	ldr	sl, [r0, #-4]
   349c4:	sub	r1, r0, #8
   349c8:	str	r1, [sp]
   349cc:	cmp	sl, #0
   349d0:	beq	34af4 <flatcc_emitter@@Base+0x2e8>
   349d4:	ldr	r0, [sp]
   349d8:	ldr	r0, [r0]
   349dc:	add	r7, r0, sl
   349e0:	ldr	r1, [r9]
   349e4:	cmp	sl, r1
   349e8:	bhi	34a28 <flatcc_emitter@@Base+0x21c>
   349ec:	b	34ac4 <flatcc_emitter@@Base+0x2b8>
   349f0:	ldr	r1, [r5, #2952]	; 0xb88
   349f4:	sub	r1, r1, #2944	; 0xb80
   349f8:	str	r1, [r0, #2952]	; 0xb88
   349fc:	mov	r1, #2944	; 0xb80
   34a00:	add	r2, r0, #2944	; 0xb80
   34a04:	str	r0, [r6]
   34a08:	str	r2, [r6, #8]
   34a0c:	str	r1, [r6, #12]
   34a10:	ldr	r2, [r0, #2944]	; 0xb80
   34a14:	ldr	r2, [r2, #2952]	; 0xb88
   34a18:	sub	r2, r2, #2944	; 0xb80
   34a1c:	str	r2, [r0, #2952]	; 0xb88
   34a20:	cmp	sl, r1
   34a24:	bls	34ac4 <flatcc_emitter@@Base+0x2b8>
   34a28:	cmp	r1, #0
   34a2c:	mov	r5, r1
   34a30:	bne	34ac8 <flatcc_emitter@@Base+0x2bc>
   34a34:	ldr	r5, [r6]
   34a38:	cmp	r5, #0
   34a3c:	beq	34a50 <flatcc_emitter@@Base+0x244>
   34a40:	ldr	r0, [r5, #2948]	; 0xb84
   34a44:	ldr	r1, [r6, #4]
   34a48:	cmp	r0, r1
   34a4c:	bne	349f0 <flatcc_emitter@@Base+0x1e4>
   34a50:	movw	r0, #2956	; 0xb8c
   34a54:	bl	14e98 <malloc@plt>
   34a58:	cmp	r0, #0
   34a5c:	beq	34b14 <flatcc_emitter@@Base+0x308>
   34a60:	ldr	r1, [r6, #28]
   34a64:	cmp	r5, #0
   34a68:	add	r1, r1, #2944	; 0xb80
   34a6c:	str	r1, [r6, #28]
   34a70:	beq	34a8c <flatcc_emitter@@Base+0x280>
   34a74:	ldr	r1, [r6, #4]
   34a78:	str	r5, [r0, #2944]	; 0xb80
   34a7c:	str	r1, [r0, #2948]	; 0xb84
   34a80:	str	r0, [r5, #2948]	; 0xb84
   34a84:	str	r0, [r1, #2944]	; 0xb80
   34a88:	b	349fc <flatcc_emitter@@Base+0x1f0>
   34a8c:	add	r2, r0, #1472	; 0x5c0
   34a90:	mov	r1, #1472	; 0x5c0
   34a94:	str	r0, [r6]
   34a98:	stmib	r6, {r0, r2}
   34a9c:	str	r1, [r6, #12]
   34aa0:	str	r2, [r6, #16]
   34aa4:	movw	r2, #64064	; 0xfa40
   34aa8:	str	r1, [r6, #20]
   34aac:	str	r0, [r0, #2944]	; 0xb80
   34ab0:	str	r0, [r0, #2948]	; 0xb84
   34ab4:	movt	r2, #65535	; 0xffff
   34ab8:	str	r2, [r0, #2952]	; 0xb88
   34abc:	cmp	sl, r1
   34ac0:	bhi	34a28 <flatcc_emitter@@Base+0x21c>
   34ac4:	mov	r5, sl
   34ac8:	sub	r0, r1, r5
   34acc:	sub	r7, r7, r5
   34ad0:	mov	r2, r5
   34ad4:	str	r0, [r6, #12]
   34ad8:	mov	r1, r7
   34adc:	ldr	r0, [r6, #8]
   34ae0:	sub	r0, r0, r5
   34ae4:	str	r0, [r6, #8]
   34ae8:	bl	14e5c <memcpy@plt>
   34aec:	subs	sl, sl, r5
   34af0:	bne	349e0 <flatcc_emitter@@Base+0x1d4>
   34af4:	ldr	r0, [sp]
   34af8:	subs	r4, r4, #1
   34afc:	bne	349c0 <flatcc_emitter@@Base+0x1b4>
   34b00:	b	34b64 <flatcc_emitter@@Base+0x358>
   34b04:	ldr	r5, [r6, #16]
   34b08:	add	r2, r5, r1
   34b0c:	str	r2, [r6, #16]
   34b10:	b	34b30 <flatcc_emitter@@Base+0x324>
   34b14:	mvn	r8, #0
   34b18:	mov	r0, r8
   34b1c:	sub	sp, fp, #28
   34b20:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   34b24:	ldr	r2, [r6, #8]
   34b28:	sub	r5, r2, r1
   34b2c:	str	r5, [r6, #8]
   34b30:	sub	r0, r0, r1
   34b34:	mov	r8, #0
   34b38:	cmp	r4, #0
   34b3c:	str	r0, [r9]
   34b40:	beq	34b64 <flatcc_emitter@@Base+0x358>
   34b44:	ldm	r7, {r1, r2}
   34b48:	mov	r0, r5
   34b4c:	bl	14e5c <memcpy@plt>
   34b50:	ldr	r0, [r7, #4]
   34b54:	add	r7, r7, #8
   34b58:	subs	r4, r4, #1
   34b5c:	add	r5, r5, r0
   34b60:	bne	34b44 <flatcc_emitter@@Base+0x338>
   34b64:	mov	r0, r8
   34b68:	sub	sp, fp, #28
   34b6c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00034b70 <flatcc_emitter_copy_buffer@@Base>:
   34b70:	push	{r4, r5, r6, sl, fp, lr}
   34b74:	add	fp, sp, #16
   34b78:	mov	r3, r2
   34b7c:	ldr	r2, [r0, #24]
   34b80:	mov	r5, #0
   34b84:	cmp	r2, r3
   34b88:	bhi	34c10 <flatcc_emitter_copy_buffer@@Base+0xa0>
   34b8c:	mov	r4, r0
   34b90:	ldr	r0, [r0]
   34b94:	cmp	r0, #0
   34b98:	beq	34c10 <flatcc_emitter_copy_buffer@@Base+0xa0>
   34b9c:	mov	r6, r1
   34ba0:	ldr	r1, [r4, #4]
   34ba4:	cmp	r0, r1
   34ba8:	beq	34c18 <flatcc_emitter_copy_buffer@@Base+0xa8>
   34bac:	ldr	r0, [r4, #12]
   34bb0:	ldr	r1, [r4, #8]
   34bb4:	rsb	r5, r0, #2944	; 0xb80
   34bb8:	mov	r0, r6
   34bbc:	mov	r2, r5
   34bc0:	bl	14e5c <memcpy@plt>
   34bc4:	ldm	r4, {r0, r1}
   34bc8:	add	r5, r6, r5
   34bcc:	ldr	r6, [r0, #2944]	; 0xb80
   34bd0:	cmp	r6, r1
   34bd4:	beq	34bfc <flatcc_emitter_copy_buffer@@Base+0x8c>
   34bd8:	mov	r0, r5
   34bdc:	mov	r1, r6
   34be0:	mov	r2, #2944	; 0xb80
   34be4:	bl	14e5c <memcpy@plt>
   34be8:	ldr	r6, [r6, #2944]	; 0xb80
   34bec:	ldr	r0, [r4, #4]
   34bf0:	add	r5, r5, #2944	; 0xb80
   34bf4:	cmp	r6, r0
   34bf8:	bne	34bd8 <flatcc_emitter_copy_buffer@@Base+0x68>
   34bfc:	ldr	r0, [r4, #20]
   34c00:	mov	r1, r6
   34c04:	rsb	r2, r0, #2944	; 0xb80
   34c08:	mov	r0, r5
   34c0c:	bl	14e5c <memcpy@plt>
   34c10:	mov	r0, r5
   34c14:	pop	{r4, r5, r6, sl, fp, pc}
   34c18:	ldr	r1, [r4, #8]
   34c1c:	mov	r0, r6
   34c20:	bl	14e5c <memcpy@plt>
   34c24:	mov	r0, r6
   34c28:	pop	{r4, r5, r6, sl, fp, pc}

00034c2c <flatcc_verify_error_string@@Base>:
   34c2c:	cmp	r0, #36	; 0x24
   34c30:	movwhi	r0, #56166	; 0xdb66
   34c34:	movthi	r0, #4
   34c38:	bxhi	lr
   34c3c:	movw	r1, #56176	; 0xdb70
   34c40:	movt	r1, #4
   34c44:	ldr	r0, [r1, r0, lsl #2]
   34c48:	bx	lr

00034c4c <flatcc_verify_field@@Base>:
   34c4c:	push	{r4, sl, fp, lr}
   34c50:	add	fp, sp, #8
   34c54:	mov	ip, #4
   34c58:	ldrh	r4, [r0, #22]
   34c5c:	mov	lr, #0
   34c60:	add	r1, ip, r1, lsl #1
   34c64:	uxth	ip, r1
   34c68:	cmp	ip, r4
   34c6c:	bcs	34cc8 <flatcc_verify_field@@Base+0x7c>
   34c70:	ldr	r4, [r0, #12]
   34c74:	uxtah	r1, r4, r1
   34c78:	ldrh	ip, [r1]
   34c7c:	cmp	ip, #0
   34c80:	beq	34cc8 <flatcc_verify_field@@Base+0x7c>
   34c84:	add	r1, ip, r2
   34c88:	ldrh	r2, [r0, #20]
   34c8c:	mov	lr, #13
   34c90:	cmp	r1, r2
   34c94:	bhi	34cc8 <flatcc_verify_field@@Base+0x7c>
   34c98:	ldr	r1, [r0]
   34c9c:	mov	lr, #0
   34ca0:	add	r2, r1, ip
   34ca4:	ldr	r1, [r0, #16]
   34ca8:	add	r4, r2, r1
   34cac:	sub	r1, r3, #1
   34cb0:	tst	r4, r1
   34cb4:	beq	34cc8 <flatcc_verify_field@@Base+0x7c>
   34cb8:	ldr	r0, [r0, #16]
   34cbc:	add	r0, r2, r0
   34cc0:	ands	lr, r0, r1
   34cc4:	movwne	lr, #12
   34cc8:	mov	r0, lr
   34ccc:	pop	{r4, sl, fp, pc}

00034cd0 <flatcc_verify_string_field@@Base>:
   34cd0:	push	{fp, lr}
   34cd4:	mov	fp, sp
   34cd8:	mov	lr, r0
   34cdc:	mov	r0, #4
   34ce0:	add	r0, r0, r1, lsl #1
   34ce4:	ldrh	r3, [lr, #22]
   34ce8:	uxth	r1, r0
   34cec:	cmp	r1, r3
   34cf0:	bcs	34d34 <flatcc_verify_string_field@@Base+0x64>
   34cf4:	ldr	r1, [lr, #12]
   34cf8:	uxtah	r0, r1, r0
   34cfc:	ldrh	r1, [r0]
   34d00:	cmp	r1, #0
   34d04:	beq	34d34 <flatcc_verify_string_field@@Base+0x64>
   34d08:	ldrh	r2, [lr, #20]
   34d0c:	add	r3, r1, #4
   34d10:	mov	r0, #13
   34d14:	cmp	r3, r2
   34d18:	bhi	34d30 <flatcc_verify_string_field@@Base+0x60>
   34d1c:	ldr	r0, [lr, #16]
   34d20:	add	r2, r0, r1
   34d24:	mov	r0, #12
   34d28:	tst	r2, #3
   34d2c:	beq	34d44 <flatcc_verify_string_field@@Base+0x74>
   34d30:	pop	{fp, pc}
   34d34:	cmp	r2, #0
   34d38:	movwne	r2, #1
   34d3c:	lsl	r0, r2, #2
   34d40:	pop	{fp, pc}
   34d44:	cmp	r2, #0
   34d48:	beq	34da8 <flatcc_verify_string_field@@Base+0xd8>
   34d4c:	ldr	ip, [lr]
   34d50:	ldr	r0, [ip, r2]
   34d54:	add	r1, r0, r2
   34d58:	mov	r0, #17
   34d5c:	tst	r1, #3
   34d60:	bne	34d30 <flatcc_verify_string_field@@Base+0x60>
   34d64:	cmp	r1, r2
   34d68:	bls	34d30 <flatcc_verify_string_field@@Base+0x60>
   34d6c:	ldr	r3, [lr, #4]
   34d70:	add	r2, r1, #4
   34d74:	cmp	r3, r2
   34d78:	bcc	34d30 <flatcc_verify_string_field@@Base+0x60>
   34d7c:	ldr	r1, [ip, r1]
   34d80:	sub	lr, r3, r2
   34d84:	mov	r0, #8
   34d88:	add	r3, r1, #1
   34d8c:	cmp	lr, r3
   34d90:	popcc	{fp, pc}
   34d94:	add	r0, ip, r2
   34d98:	ldrb	r0, [r0, r1]
   34d9c:	cmp	r0, #0
   34da0:	movwne	r0, #7
   34da4:	pop	{fp, pc}
   34da8:	mov	r0, #0
   34dac:	pop	{fp, pc}

00034db0 <flatcc_verify_vector_field@@Base>:
   34db0:	push	{r4, sl, fp, lr}
   34db4:	add	fp, sp, #8
   34db8:	mov	ip, r0
   34dbc:	mov	r0, #4
   34dc0:	add	r0, r0, r1, lsl #1
   34dc4:	ldrh	r4, [ip, #22]
   34dc8:	uxth	r1, r0
   34dcc:	cmp	r1, r4
   34dd0:	bcs	34e14 <flatcc_verify_vector_field@@Base+0x64>
   34dd4:	ldr	r1, [ip, #12]
   34dd8:	uxtah	r0, r1, r0
   34ddc:	ldrh	r1, [r0]
   34de0:	cmp	r1, #0
   34de4:	beq	34e14 <flatcc_verify_vector_field@@Base+0x64>
   34de8:	ldrh	r2, [ip, #20]
   34dec:	add	r4, r1, #4
   34df0:	mov	r0, #13
   34df4:	cmp	r4, r2
   34df8:	bhi	34e10 <flatcc_verify_vector_field@@Base+0x60>
   34dfc:	ldr	r0, [ip, #16]
   34e00:	add	r2, r0, r1
   34e04:	mov	r0, #12
   34e08:	tst	r2, #3
   34e0c:	beq	34e24 <flatcc_verify_vector_field@@Base+0x74>
   34e10:	pop	{r4, sl, fp, pc}
   34e14:	cmp	r2, #0
   34e18:	movwne	r2, #1
   34e1c:	lsl	r0, r2, #2
   34e20:	pop	{r4, sl, fp, pc}
   34e24:	cmp	r2, #0
   34e28:	beq	34ea0 <flatcc_verify_vector_field@@Base+0xf0>
   34e2c:	ldr	lr, [ip]
   34e30:	ldr	r4, [fp, #8]
   34e34:	ldr	r0, [lr, r2]
   34e38:	cmp	r4, #4
   34e3c:	movls	r4, #4
   34e40:	add	r1, r0, r2
   34e44:	mov	r0, #16
   34e48:	cmp	r1, r2
   34e4c:	bls	34e10 <flatcc_verify_vector_field@@Base+0x60>
   34e50:	ldr	ip, [ip, #4]
   34e54:	add	r2, r1, #4
   34e58:	cmp	r2, ip
   34e5c:	bhi	34e10 <flatcc_verify_vector_field@@Base+0x60>
   34e60:	sub	r4, r4, #1
   34e64:	orr	r4, r4, #3
   34e68:	tst	r2, r4
   34e6c:	bne	34e10 <flatcc_verify_vector_field@@Base+0x60>
   34e70:	ldr	r4, [fp, #12]
   34e74:	ldr	r2, [lr, r1]
   34e78:	mov	r0, #25
   34e7c:	cmp	r2, r4
   34e80:	pophi	{r4, sl, fp, pc}
   34e84:	mul	r2, r2, r3
   34e88:	sub	r0, ip, r1
   34e8c:	sub	r1, r0, #4
   34e90:	mov	r0, #0
   34e94:	cmp	r1, r2
   34e98:	movwcc	r0, #26
   34e9c:	pop	{r4, sl, fp, pc}
   34ea0:	mov	r0, #0
   34ea4:	pop	{r4, sl, fp, pc}

00034ea8 <flatcc_verify_string_vector_field@@Base>:
   34ea8:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   34eac:	add	fp, sp, #24
   34eb0:	mov	r3, r0
   34eb4:	mov	r0, #4
   34eb8:	add	r0, r0, r1, lsl #1
   34ebc:	ldrh	r7, [r3, #22]
   34ec0:	uxth	r1, r0
   34ec4:	cmp	r1, r7
   34ec8:	bcs	34f0c <flatcc_verify_string_vector_field@@Base+0x64>
   34ecc:	ldr	r1, [r3, #12]
   34ed0:	uxtah	r0, r1, r0
   34ed4:	ldrh	r1, [r0]
   34ed8:	cmp	r1, #0
   34edc:	beq	34f0c <flatcc_verify_string_vector_field@@Base+0x64>
   34ee0:	ldrh	r2, [r3, #20]
   34ee4:	add	r7, r1, #4
   34ee8:	mov	r0, #13
   34eec:	cmp	r7, r2
   34ef0:	bhi	34f08 <flatcc_verify_string_vector_field@@Base+0x60>
   34ef4:	ldr	r4, [r3, #16]
   34ef8:	mov	r0, #12
   34efc:	add	r6, r4, r1
   34f00:	tst	r6, #3
   34f04:	beq	34f1c <flatcc_verify_string_vector_field@@Base+0x74>
   34f08:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   34f0c:	cmp	r2, #0
   34f10:	movwne	r2, #1
   34f14:	lsl	r0, r2, #2
   34f18:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   34f1c:	cmp	r6, #0
   34f20:	beq	35018 <flatcc_verify_string_vector_field@@Base+0x170>
   34f24:	ldr	r5, [r3]
   34f28:	mov	r0, #16
   34f2c:	ldr	r7, [r5, r6]
   34f30:	add	r2, r7, r6
   34f34:	cmp	r2, r6
   34f38:	bls	34f08 <flatcc_verify_string_vector_field@@Base+0x60>
   34f3c:	ldr	ip, [r3, #4]
   34f40:	add	r3, r2, #4
   34f44:	cmp	r3, ip
   34f48:	bhi	34f08 <flatcc_verify_string_vector_field@@Base+0x60>
   34f4c:	ands	r3, r3, #3
   34f50:	bne	34f08 <flatcc_verify_string_vector_field@@Base+0x60>
   34f54:	ldr	lr, [r5, r2]
   34f58:	mov	r0, #25
   34f5c:	cmn	lr, #-1073741823	; 0xc0000001
   34f60:	bhi	34f08 <flatcc_verify_string_vector_field@@Base+0x60>
   34f64:	sub	r0, ip, r2
   34f68:	sub	r2, r0, #4
   34f6c:	mov	r0, #26
   34f70:	cmp	r2, lr, lsl #2
   34f74:	bcc	34f08 <flatcc_verify_string_vector_field@@Base+0x60>
   34f78:	cmp	lr, #0
   34f7c:	beq	35018 <flatcc_verify_string_vector_field@@Base+0x170>
   34f80:	sub	r0, ip, r7
   34f84:	add	r8, r7, r4
   34f88:	sub	r0, r0, r4
   34f8c:	add	r3, r5, r8
   34f90:	sub	r0, r0, r1
   34f94:	sub	r4, r0, #8
   34f98:	add	r0, r3, r1
   34f9c:	add	r7, r1, r8
   34fa0:	ldr	r5, [r0, #4]
   34fa4:	mov	r0, #17
   34fa8:	add	r6, r7, r5
   34fac:	add	r2, r6, #4
   34fb0:	tst	r2, #3
   34fb4:	bne	34f08 <flatcc_verify_string_vector_field@@Base+0x60>
   34fb8:	add	r7, r7, #4
   34fbc:	cmp	r2, r7
   34fc0:	bls	34f08 <flatcc_verify_string_vector_field@@Base+0x60>
   34fc4:	add	r2, r6, #8
   34fc8:	cmp	ip, r2
   34fcc:	bcc	34f08 <flatcc_verify_string_vector_field@@Base+0x60>
   34fd0:	add	r0, r1, r5
   34fd4:	sub	r2, r4, r5
   34fd8:	add	r0, r3, r0
   34fdc:	ldr	r0, [r0, #4]
   34fe0:	add	r6, r0, #1
   34fe4:	cmp	r2, r6
   34fe8:	bcc	35020 <flatcc_verify_string_vector_field@@Base+0x178>
   34fec:	add	r0, r5, r0
   34ff0:	add	r0, r1, r0
   34ff4:	add	r0, r3, r0
   34ff8:	ldrb	r0, [r0, #8]
   34ffc:	cmp	r0, #0
   35000:	bne	35028 <flatcc_verify_string_vector_field@@Base+0x180>
   35004:	subs	lr, lr, #1
   35008:	sub	r4, r4, #4
   3500c:	add	r8, r8, #4
   35010:	add	r3, r3, #4
   35014:	bne	34f98 <flatcc_verify_string_vector_field@@Base+0xf0>
   35018:	mov	r0, #0
   3501c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   35020:	mov	r0, #8
   35024:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   35028:	mov	r0, #7
   3502c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

00035030 <flatcc_verify_table_field@@Base>:
   35030:	push	{r4, r5, r6, sl, fp, lr}
   35034:	add	fp, sp, #16
   35038:	sub	sp, sp, #24
   3503c:	mov	ip, r0
   35040:	mov	r0, #4
   35044:	add	r0, r0, r1, lsl #1
   35048:	ldrh	r6, [ip, #22]
   3504c:	uxth	r1, r0
   35050:	cmp	r1, r6
   35054:	bcs	3509c <flatcc_verify_table_field@@Base+0x6c>
   35058:	ldr	r1, [ip, #12]
   3505c:	uxtah	r0, r1, r0
   35060:	ldrh	r1, [r0]
   35064:	cmp	r1, #0
   35068:	beq	3509c <flatcc_verify_table_field@@Base+0x6c>
   3506c:	ldrh	r2, [ip, #20]
   35070:	add	r6, r1, #4
   35074:	mov	r0, #13
   35078:	cmp	r6, r2
   3507c:	bhi	35094 <flatcc_verify_table_field@@Base+0x64>
   35080:	ldr	r0, [ip, #16]
   35084:	add	r4, r0, r1
   35088:	mov	r0, #12
   3508c:	tst	r4, #3
   35090:	beq	350b0 <flatcc_verify_table_field@@Base+0x80>
   35094:	sub	sp, fp, #16
   35098:	pop	{r4, r5, r6, sl, fp, pc}
   3509c:	cmp	r2, #0
   350a0:	movwne	r2, #1
   350a4:	lsl	r0, r2, #2
   350a8:	sub	sp, fp, #16
   350ac:	pop	{r4, r5, r6, sl, fp, pc}
   350b0:	cmp	r4, #0
   350b4:	beq	35180 <flatcc_verify_table_field@@Base+0x150>
   350b8:	ldm	ip, {r1, lr}
   350bc:	ldr	r2, [ip, #8]
   350c0:	ldr	r0, [r1, r4]
   350c4:	subs	r2, r2, #1
   350c8:	str	r2, [sp, #8]
   350cc:	beq	3518c <flatcc_verify_table_field@@Base+0x15c>
   350d0:	add	r2, r0, r4
   350d4:	mov	r0, #15
   350d8:	tst	r2, #3
   350dc:	bne	35094 <flatcc_verify_table_field@@Base+0x64>
   350e0:	cmp	r2, r4
   350e4:	bls	35094 <flatcc_verify_table_field@@Base+0x64>
   350e8:	add	r6, r2, #4
   350ec:	cmp	r6, lr
   350f0:	bhi	35094 <flatcc_verify_table_field@@Base+0x64>
   350f4:	str	r2, [sp, #16]
   350f8:	ldr	r0, [r1, r2]
   350fc:	sub	r5, r2, r0
   35100:	mov	r0, #29
   35104:	tst	r5, #-2147483647	; 0x80000001
   35108:	bne	35094 <flatcc_verify_table_field@@Base+0x64>
   3510c:	add	r4, r5, #2
   35110:	mov	r0, #27
   35114:	cmp	r4, lr
   35118:	bhi	35094 <flatcc_verify_table_field@@Base+0x64>
   3511c:	mov	ip, r1
   35120:	mov	r0, #30
   35124:	ldrh	r6, [ip, r5]!
   35128:	tst	r6, #1
   3512c:	strh	r6, [sp, #22]
   35130:	bne	35094 <flatcc_verify_table_field@@Base+0x64>
   35134:	add	r5, r5, r6
   35138:	cmp	r5, lr
   3513c:	bhi	35094 <flatcc_verify_table_field@@Base+0x64>
   35140:	mov	r0, #28
   35144:	cmp	r6, #4
   35148:	bcc	35094 <flatcc_verify_table_field@@Base+0x64>
   3514c:	add	r0, r1, r4
   35150:	sub	r2, lr, r2
   35154:	ldrh	r4, [r0]
   35158:	mov	r0, #20
   3515c:	cmp	r2, r4
   35160:	strh	r4, [sp, #20]
   35164:	bcc	35094 <flatcc_verify_table_field@@Base+0x64>
   35168:	mov	r0, sp
   3516c:	stm	sp, {r1, lr}
   35170:	str	ip, [sp, #12]
   35174:	blx	r3
   35178:	sub	sp, fp, #16
   3517c:	pop	{r4, r5, r6, sl, fp, pc}
   35180:	mov	r0, #0
   35184:	sub	sp, fp, #16
   35188:	pop	{r4, r5, r6, sl, fp, pc}
   3518c:	mov	r0, #3
   35190:	sub	sp, fp, #16
   35194:	pop	{r4, r5, r6, sl, fp, pc}

00035198 <flatcc_verify_table_vector_field@@Base>:
   35198:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3519c:	add	fp, sp, #28
   351a0:	sub	sp, sp, #28
   351a4:	mov	r4, r3
   351a8:	mov	r3, r0
   351ac:	mov	r0, #4
   351b0:	add	r0, r0, r1, lsl #1
   351b4:	ldrh	r7, [r3, #22]
   351b8:	uxth	r1, r0
   351bc:	cmp	r1, r7
   351c0:	bcs	35208 <flatcc_verify_table_vector_field@@Base+0x70>
   351c4:	ldr	r1, [r3, #12]
   351c8:	uxtah	r0, r1, r0
   351cc:	ldrh	r1, [r0]
   351d0:	cmp	r1, #0
   351d4:	beq	35208 <flatcc_verify_table_vector_field@@Base+0x70>
   351d8:	ldrh	r2, [r3, #20]
   351dc:	add	r7, r1, #4
   351e0:	mov	r0, #13
   351e4:	cmp	r7, r2
   351e8:	bhi	35200 <flatcc_verify_table_vector_field@@Base+0x68>
   351ec:	ldr	r2, [r3, #16]
   351f0:	mov	r0, #12
   351f4:	add	r6, r2, r1
   351f8:	tst	r6, #3
   351fc:	beq	3521c <flatcc_verify_table_vector_field@@Base+0x84>
   35200:	sub	sp, fp, #28
   35204:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   35208:	cmp	r2, #0
   3520c:	movwne	r2, #1
   35210:	lsl	r0, r2, #2
   35214:	sub	sp, fp, #28
   35218:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3521c:	cmp	r6, #0
   35220:	beq	3537c <flatcc_verify_table_vector_field@@Base+0x1e4>
   35224:	ldr	r7, [r3, #8]
   35228:	cmp	r7, #1
   3522c:	blt	35448 <flatcc_verify_table_vector_field@@Base+0x2b0>
   35230:	ldr	r8, [r3]
   35234:	mov	r0, #16
   35238:	ldr	ip, [r8, r6]
   3523c:	add	r5, ip, r6
   35240:	cmp	r5, r6
   35244:	bls	35200 <flatcc_verify_table_vector_field@@Base+0x68>
   35248:	ldr	r6, [r3, #4]
   3524c:	add	r9, r5, #4
   35250:	cmp	r9, r6
   35254:	bhi	35200 <flatcc_verify_table_vector_field@@Base+0x68>
   35258:	ands	r3, r9, #3
   3525c:	bne	35200 <flatcc_verify_table_vector_field@@Base+0x68>
   35260:	ldr	sl, [r8, r5]
   35264:	mov	r0, #25
   35268:	cmn	sl, #-1073741823	; 0xc0000001
   3526c:	bhi	35200 <flatcc_verify_table_vector_field@@Base+0x68>
   35270:	sub	r0, r6, r5
   35274:	sub	r3, r0, #4
   35278:	mov	r0, #26
   3527c:	cmp	r3, sl, lsl #2
   35280:	bcc	35200 <flatcc_verify_table_vector_field@@Base+0x68>
   35284:	cmp	sl, #0
   35288:	beq	3537c <flatcc_verify_table_vector_field@@Base+0x1e4>
   3528c:	subs	r0, r7, #2
   35290:	str	r0, [sp]
   35294:	beq	35440 <flatcc_verify_table_vector_field@@Base+0x2a8>
   35298:	sub	r0, r6, ip
   3529c:	sub	r0, r0, r2
   352a0:	sub	r0, r0, r1
   352a4:	sub	r7, r0, #4
   352a8:	ldr	r0, [r8, r9]
   352ac:	ldr	r1, [sp]
   352b0:	add	lr, r9, r0
   352b4:	str	r1, [sp, #12]
   352b8:	add	ip, lr, #4
   352bc:	tst	lr, #3
   352c0:	bne	35388 <flatcc_verify_table_vector_field@@Base+0x1f0>
   352c4:	cmp	lr, r9
   352c8:	bls	35388 <flatcc_verify_table_vector_field@@Base+0x1f0>
   352cc:	cmp	ip, r6
   352d0:	bhi	35388 <flatcc_verify_table_vector_field@@Base+0x1f0>
   352d4:	str	lr, [sp, #20]
   352d8:	add	r3, r8, r0
   352dc:	ldr	r1, [r3, r9]
   352e0:	sub	r5, r0, r1
   352e4:	add	r3, r9, r5
   352e8:	tst	r3, #-2147483647	; 0x80000001
   352ec:	bne	35388 <flatcc_verify_table_vector_field@@Base+0x1f0>
   352f0:	add	r2, r3, #2
   352f4:	cmp	r2, r6
   352f8:	bhi	35388 <flatcc_verify_table_vector_field@@Base+0x1f0>
   352fc:	add	r2, r8, r5
   35300:	add	r2, r2, r9
   35304:	ldrh	r5, [r2]
   35308:	cmp	r5, #4
   3530c:	strh	r5, [sp, #26]
   35310:	bcc	35388 <flatcc_verify_table_vector_field@@Base+0x1f0>
   35314:	ands	r2, r5, #1
   35318:	bne	35388 <flatcc_verify_table_vector_field@@Base+0x1f0>
   3531c:	add	r2, r0, r5
   35320:	sub	r2, r2, r1
   35324:	add	r2, r9, r2
   35328:	cmp	r2, r6
   3532c:	bhi	35388 <flatcc_verify_table_vector_field@@Base+0x1f0>
   35330:	add	r3, r8, r3
   35334:	sub	r0, r7, r0
   35338:	ldrh	r2, [r3, #2]
   3533c:	cmp	r0, r2
   35340:	strh	r2, [sp, #24]
   35344:	bcc	35388 <flatcc_verify_table_vector_field@@Base+0x1f0>
   35348:	add	r0, sp, #4
   3534c:	str	r6, [sp, #8]
   35350:	str	r8, [sp, #4]
   35354:	mov	r5, r6
   35358:	str	r3, [sp, #16]
   3535c:	blx	r4
   35360:	cmp	r0, #0
   35364:	bne	35454 <flatcc_verify_table_vector_field@@Base+0x2bc>
   35368:	subs	sl, sl, #1
   3536c:	sub	r7, r7, #4
   35370:	add	r9, r9, #4
   35374:	mov	r6, r5
   35378:	bne	352a8 <flatcc_verify_table_vector_field@@Base+0x110>
   3537c:	mov	r0, #0
   35380:	sub	sp, fp, #28
   35384:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   35388:	ldr	r0, [sp]
   3538c:	str	r0, [sp, #12]
   35390:	mov	r0, #15
   35394:	tst	lr, #3
   35398:	bne	35200 <flatcc_verify_table_vector_field@@Base+0x68>
   3539c:	cmp	lr, r9
   353a0:	bls	35200 <flatcc_verify_table_vector_field@@Base+0x68>
   353a4:	cmp	ip, r6
   353a8:	bhi	35200 <flatcc_verify_table_vector_field@@Base+0x68>
   353ac:	str	lr, [sp, #20]
   353b0:	ldr	r0, [r8, lr]
   353b4:	sub	r7, lr, r0
   353b8:	mov	r0, #29
   353bc:	tst	r7, #-2147483647	; 0x80000001
   353c0:	bne	35200 <flatcc_verify_table_vector_field@@Base+0x68>
   353c4:	add	r3, r7, #2
   353c8:	mov	r0, #27
   353cc:	cmp	r3, r6
   353d0:	bhi	35200 <flatcc_verify_table_vector_field@@Base+0x68>
   353d4:	mov	r2, r8
   353d8:	mov	r5, r6
   353dc:	mov	r0, #30
   353e0:	ldrh	r6, [r2, r7]!
   353e4:	tst	r6, #1
   353e8:	strh	r6, [sp, #26]
   353ec:	bne	35200 <flatcc_verify_table_vector_field@@Base+0x68>
   353f0:	add	r7, r7, r6
   353f4:	cmp	r7, r5
   353f8:	bhi	35200 <flatcc_verify_table_vector_field@@Base+0x68>
   353fc:	mov	r0, #28
   35400:	cmp	r6, #4
   35404:	bcc	35200 <flatcc_verify_table_vector_field@@Base+0x68>
   35408:	add	r0, r8, r3
   3540c:	sub	r1, r5, lr
   35410:	ldrh	r3, [r0]
   35414:	mov	r0, #20
   35418:	cmp	r1, r3
   3541c:	strh	r3, [sp, #24]
   35420:	bcc	35200 <flatcc_verify_table_vector_field@@Base+0x68>
   35424:	add	r0, sp, #4
   35428:	str	r5, [sp, #8]
   3542c:	str	r8, [sp, #4]
   35430:	str	r2, [sp, #16]
   35434:	blx	r4
   35438:	sub	sp, fp, #28
   3543c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   35440:	mov	r0, #0
   35444:	str	r0, [sp, #12]
   35448:	mov	r0, #3
   3544c:	sub	sp, fp, #28
   35450:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   35454:	ldr	r0, [r8, r9]
   35458:	ldr	r1, [sp]
   3545c:	mov	r6, r5
   35460:	add	lr, r0, r9
   35464:	str	r1, [sp, #12]
   35468:	add	ip, lr, #4
   3546c:	mov	r0, #15
   35470:	tst	lr, #3
   35474:	beq	3539c <flatcc_verify_table_vector_field@@Base+0x204>
   35478:	b	35200 <flatcc_verify_table_vector_field@@Base+0x68>

0003547c <flatcc_verify_union_table@@Base>:
   3547c:	push	{r4, r5, r6, sl, fp, lr}
   35480:	add	fp, sp, #16
   35484:	sub	sp, sp, #24
   35488:	ldr	r5, [r0, #16]
   3548c:	ldr	r2, [r0, #20]
   35490:	ldr	ip, [r0]
   35494:	ldr	r3, [r0, #4]
   35498:	ldr	r0, [r0, #8]
   3549c:	subs	r0, r0, #1
   354a0:	str	r0, [sp, #8]
   354a4:	beq	3555c <flatcc_verify_union_table@@Base+0xe0>
   354a8:	add	r2, r2, r5
   354ac:	mov	r0, #15
   354b0:	tst	r2, #3
   354b4:	bne	35554 <flatcc_verify_union_table@@Base+0xd8>
   354b8:	cmp	r2, r5
   354bc:	bls	35554 <flatcc_verify_union_table@@Base+0xd8>
   354c0:	add	r6, r2, #4
   354c4:	cmp	r6, r3
   354c8:	bhi	35554 <flatcc_verify_union_table@@Base+0xd8>
   354cc:	str	r2, [sp, #16]
   354d0:	ldr	r0, [ip, r2]
   354d4:	sub	r5, r2, r0
   354d8:	mov	r0, #29
   354dc:	tst	r5, #-2147483647	; 0x80000001
   354e0:	bne	35554 <flatcc_verify_union_table@@Base+0xd8>
   354e4:	add	r4, r5, #2
   354e8:	mov	r0, #27
   354ec:	cmp	r4, r3
   354f0:	bhi	35554 <flatcc_verify_union_table@@Base+0xd8>
   354f4:	mov	lr, ip
   354f8:	mov	r0, #30
   354fc:	ldrh	r6, [lr, r5]!
   35500:	tst	r6, #1
   35504:	strh	r6, [sp, #22]
   35508:	bne	35554 <flatcc_verify_union_table@@Base+0xd8>
   3550c:	add	r5, r5, r6
   35510:	cmp	r5, r3
   35514:	bhi	35554 <flatcc_verify_union_table@@Base+0xd8>
   35518:	mov	r0, #28
   3551c:	cmp	r6, #4
   35520:	bcc	35554 <flatcc_verify_union_table@@Base+0xd8>
   35524:	add	r0, ip, r4
   35528:	sub	r2, r3, r2
   3552c:	ldrh	r4, [r0]
   35530:	mov	r0, #20
   35534:	cmp	r2, r4
   35538:	strh	r4, [sp, #20]
   3553c:	bcc	35554 <flatcc_verify_union_table@@Base+0xd8>
   35540:	mov	r0, sp
   35544:	str	r3, [sp, #4]
   35548:	str	ip, [sp]
   3554c:	str	lr, [sp, #12]
   35550:	blx	r1
   35554:	sub	sp, fp, #16
   35558:	pop	{r4, r5, r6, sl, fp, pc}
   3555c:	mov	r0, #3
   35560:	sub	sp, fp, #16
   35564:	pop	{r4, r5, r6, sl, fp, pc}

00035568 <flatcc_verify_union_struct@@Base>:
   35568:	push	{fp, lr}
   3556c:	mov	fp, sp
   35570:	ldr	lr, [r0, #20]
   35574:	mov	r3, r0
   35578:	mov	r0, #18
   3557c:	cmp	lr, #0
   35580:	beq	355bc <flatcc_verify_union_struct@@Base+0x54>
   35584:	ldr	ip, [r3, #4]
   35588:	ldr	r3, [r3, #16]
   3558c:	add	r3, r3, lr
   35590:	cmp	r3, ip
   35594:	bhi	355bc <flatcc_verify_union_struct@@Base+0x54>
   35598:	adds	r1, r3, r1
   3559c:	mov	r0, #10
   355a0:	bcs	355bc <flatcc_verify_union_struct@@Base+0x54>
   355a4:	mov	r0, #9
   355a8:	cmp	r1, ip
   355ac:	pophi	{fp, pc}
   355b0:	sub	r0, r2, #1
   355b4:	ands	r0, r3, r0
   355b8:	movwne	r0, #11
   355bc:	pop	{fp, pc}

000355c0 <flatcc_verify_union_string@@Base>:
   355c0:	push	{fp, lr}
   355c4:	mov	fp, sp
   355c8:	mov	r1, r0
   355cc:	ldr	r3, [r0, #16]
   355d0:	ldr	r0, [r0, #20]
   355d4:	add	r2, r0, r3
   355d8:	mov	r0, #17
   355dc:	tst	r2, #3
   355e0:	bne	35628 <flatcc_verify_union_string@@Base+0x68>
   355e4:	cmp	r2, r3
   355e8:	bls	35628 <flatcc_verify_union_string@@Base+0x68>
   355ec:	ldr	r3, [r1, #4]
   355f0:	add	ip, r2, #4
   355f4:	cmp	r3, ip
   355f8:	bcc	35628 <flatcc_verify_union_string@@Base+0x68>
   355fc:	ldr	r1, [r1]
   35600:	sub	lr, r3, ip
   35604:	mov	r0, #8
   35608:	ldr	r2, [r1, r2]
   3560c:	add	r3, r2, #1
   35610:	cmp	lr, r3
   35614:	popcc	{fp, pc}
   35618:	add	r0, r1, ip
   3561c:	ldrb	r0, [r0, r2]
   35620:	cmp	r0, #0
   35624:	movwne	r0, #7
   35628:	pop	{fp, pc}

0003562c <flatcc_verify_buffer_header@@Base>:
   3562c:	push	{r4, sl, fp, lr}
   35630:	add	fp, sp, #8
   35634:	sub	sp, sp, #8
   35638:	mov	r4, r0
   3563c:	mov	r0, #5
   35640:	tst	r4, #3
   35644:	bne	35698 <flatcc_verify_buffer_header@@Base+0x6c>
   35648:	mov	r0, #6
   3564c:	cmn	r1, #9
   35650:	bhi	35698 <flatcc_verify_buffer_header@@Base+0x6c>
   35654:	mov	r0, #1
   35658:	cmp	r1, #8
   3565c:	bcc	35698 <flatcc_verify_buffer_header@@Base+0x6c>
   35660:	cmp	r2, #0
   35664:	beq	356a0 <flatcc_verify_buffer_header@@Base+0x74>
   35668:	mov	r0, #0
   3566c:	mov	r1, r2
   35670:	mov	r2, #4
   35674:	str	r0, [sp, #4]
   35678:	add	r0, sp, #4
   3567c:	bl	14ef8 <strncpy@plt>
   35680:	ldr	r1, [sp, #4]
   35684:	cmp	r1, #0
   35688:	ldrne	r2, [r4, #4]
   3568c:	movne	r0, #2
   35690:	cmpne	r2, r1
   35694:	moveq	r0, #0
   35698:	sub	sp, fp, #8
   3569c:	pop	{r4, sl, fp, pc}
   356a0:	mov	r0, #0
   356a4:	sub	sp, fp, #8
   356a8:	pop	{r4, sl, fp, pc}

000356ac <flatcc_verify_typed_buffer_header@@Base>:
   356ac:	mov	r3, r0
   356b0:	mov	r0, #5
   356b4:	tst	r3, #3
   356b8:	bne	356ec <flatcc_verify_typed_buffer_header@@Base+0x40>
   356bc:	mov	r0, #6
   356c0:	cmn	r1, #9
   356c4:	bhi	356ec <flatcc_verify_typed_buffer_header@@Base+0x40>
   356c8:	mov	r0, #1
   356cc:	cmp	r1, #8
   356d0:	bxcc	lr
   356d4:	cmp	r2, #0
   356d8:	beq	356f0 <flatcc_verify_typed_buffer_header@@Base+0x44>
   356dc:	ldr	r1, [r3, #4]
   356e0:	mov	r0, #2
   356e4:	cmp	r1, r2
   356e8:	moveq	r0, #0
   356ec:	bx	lr
   356f0:	mov	r0, #0
   356f4:	bx	lr

000356f8 <flatcc_verify_struct_as_root@@Base>:
   356f8:	push	{r4, r5, r6, r7, fp, lr}
   356fc:	add	fp, sp, #16
   35700:	sub	sp, sp, #8
   35704:	mov	r5, r0
   35708:	mov	r0, #5
   3570c:	tst	r5, #3
   35710:	bne	357a8 <flatcc_verify_struct_as_root@@Base+0xb0>
   35714:	mov	r4, r1
   35718:	mov	r0, #6
   3571c:	cmn	r1, #9
   35720:	bhi	357a8 <flatcc_verify_struct_as_root@@Base+0xb0>
   35724:	mov	r0, #1
   35728:	cmp	r4, #8
   3572c:	bcc	357a8 <flatcc_verify_struct_as_root@@Base+0xb0>
   35730:	mov	r6, r3
   35734:	mov	r7, r2
   35738:	cmp	r2, #0
   3573c:	beq	3576c <flatcc_verify_struct_as_root@@Base+0x74>
   35740:	mov	r0, #0
   35744:	mov	r1, r7
   35748:	mov	r2, #4
   3574c:	str	r0, [sp]
   35750:	mov	r0, sp
   35754:	bl	14ef8 <strncpy@plt>
   35758:	ldr	r0, [sp]
   3575c:	cmp	r0, #0
   35760:	ldrne	r1, [r5, #4]
   35764:	cmpne	r1, r0
   35768:	bne	357b0 <flatcc_verify_struct_as_root@@Base+0xb8>
   3576c:	ldr	r1, [r5]
   35770:	mov	r0, #18
   35774:	sub	r2, r1, #1
   35778:	cmp	r2, r4
   3577c:	bcs	357a8 <flatcc_verify_struct_as_root@@Base+0xb0>
   35780:	adds	r2, r1, r6
   35784:	mov	r0, #10
   35788:	bcs	357a8 <flatcc_verify_struct_as_root@@Base+0xb0>
   3578c:	mov	r0, #9
   35790:	cmp	r2, r4
   35794:	bhi	357a8 <flatcc_verify_struct_as_root@@Base+0xb0>
   35798:	ldr	r0, [fp, #8]
   3579c:	sub	r0, r0, #1
   357a0:	ands	r0, r1, r0
   357a4:	movwne	r0, #11
   357a8:	sub	sp, fp, #16
   357ac:	pop	{r4, r5, r6, r7, fp, pc}
   357b0:	mov	r0, #0
   357b4:	mov	r1, r7
   357b8:	mov	r2, #4
   357bc:	str	r0, [sp, #4]
   357c0:	add	r0, sp, #4
   357c4:	bl	14ef8 <strncpy@plt>
   357c8:	ldr	r0, [sp, #4]
   357cc:	ldr	r1, [r5, #4]
   357d0:	subs	r1, r1, r0
   357d4:	movwne	r1, #1
   357d8:	cmp	r0, #0
   357dc:	lslne	r0, r1, #1
   357e0:	sub	sp, fp, #16
   357e4:	pop	{r4, r5, r6, r7, fp, pc}

000357e8 <flatcc_verify_struct_as_typed_root@@Base>:
   357e8:	push	{fp, lr}
   357ec:	mov	fp, sp
   357f0:	mov	ip, r0
   357f4:	mov	r0, #5
   357f8:	tst	ip, #3
   357fc:	bne	3586c <flatcc_verify_struct_as_typed_root@@Base+0x84>
   35800:	mov	r0, #6
   35804:	cmn	r1, #9
   35808:	bhi	3586c <flatcc_verify_struct_as_typed_root@@Base+0x84>
   3580c:	mov	r0, #1
   35810:	cmp	r1, #8
   35814:	bcc	3586c <flatcc_verify_struct_as_typed_root@@Base+0x84>
   35818:	cmp	r2, #0
   3581c:	beq	35830 <flatcc_verify_struct_as_typed_root@@Base+0x48>
   35820:	ldr	lr, [ip, #4]
   35824:	mov	r0, #2
   35828:	cmp	lr, r2
   3582c:	bne	3586c <flatcc_verify_struct_as_typed_root@@Base+0x84>
   35830:	ldr	ip, [ip]
   35834:	mov	r0, #18
   35838:	sub	r2, ip, #1
   3583c:	cmp	r2, r1
   35840:	bcs	3586c <flatcc_verify_struct_as_typed_root@@Base+0x84>
   35844:	adds	r3, ip, r3
   35848:	mov	r0, #10
   3584c:	bcs	3586c <flatcc_verify_struct_as_typed_root@@Base+0x84>
   35850:	mov	r0, #9
   35854:	cmp	r3, r1
   35858:	pophi	{fp, pc}
   3585c:	ldr	r0, [fp, #8]
   35860:	sub	r0, r0, #1
   35864:	ands	r0, ip, r0
   35868:	movwne	r0, #11
   3586c:	pop	{fp, pc}

00035870 <flatcc_verify_table_as_root@@Base>:
   35870:	push	{r4, r5, r6, r7, fp, lr}
   35874:	add	fp, sp, #16
   35878:	sub	sp, sp, #24
   3587c:	mov	r4, r0
   35880:	mov	r0, #5
   35884:	tst	r4, #3
   35888:	bne	35994 <flatcc_verify_table_as_root@@Base+0x124>
   3588c:	mov	r6, r1
   35890:	mov	r0, #6
   35894:	cmn	r1, #9
   35898:	bhi	35994 <flatcc_verify_table_as_root@@Base+0x124>
   3589c:	mov	r0, #1
   358a0:	cmp	r6, #8
   358a4:	bcc	35994 <flatcc_verify_table_as_root@@Base+0x124>
   358a8:	mov	r5, r3
   358ac:	mov	r7, r2
   358b0:	cmp	r2, #0
   358b4:	beq	358e4 <flatcc_verify_table_as_root@@Base+0x74>
   358b8:	mov	r0, #0
   358bc:	mov	r1, r7
   358c0:	mov	r2, #4
   358c4:	str	r0, [sp]
   358c8:	mov	r0, sp
   358cc:	bl	14ef8 <strncpy@plt>
   358d0:	ldr	r0, [sp]
   358d4:	cmp	r0, #0
   358d8:	ldrne	r1, [r4, #4]
   358dc:	cmpne	r1, r0
   358e0:	bne	3599c <flatcc_verify_table_as_root@@Base+0x12c>
   358e4:	ldr	r1, [r4]
   358e8:	mov	r0, #99	; 0x63
   358ec:	str	r0, [sp, #8]
   358f0:	mov	r0, #15
   358f4:	tst	r1, #3
   358f8:	bne	35994 <flatcc_verify_table_as_root@@Base+0x124>
   358fc:	cmp	r1, #0
   35900:	beq	35994 <flatcc_verify_table_as_root@@Base+0x124>
   35904:	add	r2, r1, #4
   35908:	cmp	r2, r6
   3590c:	bhi	35994 <flatcc_verify_table_as_root@@Base+0x124>
   35910:	str	r1, [sp, #16]
   35914:	ldr	r0, [r4, r1]
   35918:	sub	r7, r1, r0
   3591c:	mov	r0, #29
   35920:	tst	r7, #-2147483647	; 0x80000001
   35924:	bne	35994 <flatcc_verify_table_as_root@@Base+0x124>
   35928:	add	r3, r7, #2
   3592c:	mov	r0, #27
   35930:	cmp	r3, r6
   35934:	bhi	35994 <flatcc_verify_table_as_root@@Base+0x124>
   35938:	mov	ip, r4
   3593c:	mov	r0, #30
   35940:	ldrh	r2, [ip, r7]!
   35944:	tst	r2, #1
   35948:	strh	r2, [sp, #22]
   3594c:	bne	35994 <flatcc_verify_table_as_root@@Base+0x124>
   35950:	add	r7, r7, r2
   35954:	cmp	r7, r6
   35958:	bhi	35994 <flatcc_verify_table_as_root@@Base+0x124>
   3595c:	mov	r0, #28
   35960:	cmp	r2, #4
   35964:	bcc	35994 <flatcc_verify_table_as_root@@Base+0x124>
   35968:	add	r0, r4, r3
   3596c:	sub	r1, r6, r1
   35970:	ldrh	r2, [r0]
   35974:	mov	r0, #20
   35978:	cmp	r1, r2
   3597c:	strh	r2, [sp, #20]
   35980:	bcc	35994 <flatcc_verify_table_as_root@@Base+0x124>
   35984:	mov	r0, sp
   35988:	stm	sp, {r4, r6}
   3598c:	str	ip, [sp, #12]
   35990:	blx	r5
   35994:	sub	sp, fp, #16
   35998:	pop	{r4, r5, r6, r7, fp, pc}
   3599c:	mov	r0, #0
   359a0:	mov	r1, r7
   359a4:	mov	r2, #4
   359a8:	str	r0, [sp]
   359ac:	mov	r0, sp
   359b0:	bl	14ef8 <strncpy@plt>
   359b4:	ldr	r0, [sp]
   359b8:	ldr	r1, [r4, #4]
   359bc:	subs	r1, r1, r0
   359c0:	movwne	r1, #1
   359c4:	cmp	r0, #0
   359c8:	lslne	r0, r1, #1
   359cc:	sub	sp, fp, #16
   359d0:	pop	{r4, r5, r6, r7, fp, pc}

000359d4 <flatcc_verify_table_as_typed_root@@Base>:
   359d4:	push	{r4, r5, r6, sl, fp, lr}
   359d8:	add	fp, sp, #16
   359dc:	sub	sp, sp, #24
   359e0:	mov	ip, #5
   359e4:	tst	r0, #3
   359e8:	bne	35ad0 <flatcc_verify_table_as_typed_root@@Base+0xfc>
   359ec:	mov	ip, #6
   359f0:	cmn	r1, #9
   359f4:	bhi	35ad0 <flatcc_verify_table_as_typed_root@@Base+0xfc>
   359f8:	mov	ip, #1
   359fc:	cmp	r1, #8
   35a00:	bcc	35ad0 <flatcc_verify_table_as_typed_root@@Base+0xfc>
   35a04:	cmp	r2, #0
   35a08:	beq	35a1c <flatcc_verify_table_as_typed_root@@Base+0x48>
   35a0c:	ldr	r6, [r0, #4]
   35a10:	mov	ip, #2
   35a14:	cmp	r6, r2
   35a18:	bne	35ad0 <flatcc_verify_table_as_typed_root@@Base+0xfc>
   35a1c:	ldr	r2, [r0]
   35a20:	mov	r6, #99	; 0x63
   35a24:	mov	ip, #15
   35a28:	str	r6, [sp, #8]
   35a2c:	tst	r2, #3
   35a30:	bne	35ad0 <flatcc_verify_table_as_typed_root@@Base+0xfc>
   35a34:	cmp	r2, #0
   35a38:	beq	35ad0 <flatcc_verify_table_as_typed_root@@Base+0xfc>
   35a3c:	add	r6, r2, #4
   35a40:	cmp	r6, r1
   35a44:	bhi	35ad0 <flatcc_verify_table_as_typed_root@@Base+0xfc>
   35a48:	str	r2, [sp, #16]
   35a4c:	mov	ip, #29
   35a50:	ldr	r6, [r0, r2]
   35a54:	sub	r5, r2, r6
   35a58:	tst	r5, #-2147483647	; 0x80000001
   35a5c:	bne	35ad0 <flatcc_verify_table_as_typed_root@@Base+0xfc>
   35a60:	add	r4, r5, #2
   35a64:	mov	ip, #27
   35a68:	cmp	r4, r1
   35a6c:	bhi	35ad0 <flatcc_verify_table_as_typed_root@@Base+0xfc>
   35a70:	mov	lr, r0
   35a74:	mov	ip, #30
   35a78:	ldrh	r6, [lr, r5]!
   35a7c:	tst	r6, #1
   35a80:	strh	r6, [sp, #22]
   35a84:	bne	35ad0 <flatcc_verify_table_as_typed_root@@Base+0xfc>
   35a88:	add	r5, r5, r6
   35a8c:	cmp	r5, r1
   35a90:	bhi	35ad0 <flatcc_verify_table_as_typed_root@@Base+0xfc>
   35a94:	mov	ip, #28
   35a98:	cmp	r6, #4
   35a9c:	bcc	35ad0 <flatcc_verify_table_as_typed_root@@Base+0xfc>
   35aa0:	add	r6, r0, r4
   35aa4:	sub	r2, r1, r2
   35aa8:	mov	ip, #20
   35aac:	ldrh	r4, [r6]
   35ab0:	cmp	r2, r4
   35ab4:	strh	r4, [sp, #20]
   35ab8:	bcc	35ad0 <flatcc_verify_table_as_typed_root@@Base+0xfc>
   35abc:	stm	sp, {r0, r1}
   35ac0:	mov	r0, sp
   35ac4:	str	lr, [sp, #12]
   35ac8:	blx	r3
   35acc:	mov	ip, r0
   35ad0:	mov	r0, ip
   35ad4:	sub	sp, fp, #16
   35ad8:	pop	{r4, r5, r6, sl, fp, pc}

00035adc <flatcc_verify_struct_as_nested_root@@Base>:
   35adc:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   35ae0:	add	fp, sp, #24
   35ae4:	sub	sp, sp, #8
   35ae8:	mov	r4, r3
   35aec:	mov	r3, #4
   35af0:	ldrh	r7, [r0, #22]
   35af4:	ldr	r9, [fp, #12]
   35af8:	add	r6, r3, r1, lsl #1
   35afc:	uxth	r3, r6
   35b00:	cmp	r3, r7
   35b04:	bcs	35b8c <flatcc_verify_struct_as_nested_root@@Base+0xb0>
   35b08:	ldr	r1, [r0, #12]
   35b0c:	uxtah	r6, r1, r6
   35b10:	ldrh	r6, [r6]
   35b14:	cmp	r6, #0
   35b18:	beq	35b8c <flatcc_verify_struct_as_nested_root@@Base+0xb0>
   35b1c:	ldrh	r7, [r0, #20]
   35b20:	add	r5, r6, #4
   35b24:	cmp	r5, r7
   35b28:	bhi	35ba0 <flatcc_verify_struct_as_nested_root@@Base+0xc4>
   35b2c:	ldr	r7, [r0, #16]
   35b30:	add	r5, r7, r6
   35b34:	tst	r5, #3
   35b38:	bne	35ba0 <flatcc_verify_struct_as_nested_root@@Base+0xc4>
   35b3c:	cmp	r5, #0
   35b40:	beq	35c60 <flatcc_verify_struct_as_nested_root@@Base+0x184>
   35b44:	ldr	r7, [r0]
   35b48:	ldr	r6, [r7, r5]
   35b4c:	add	r6, r6, r5
   35b50:	cmp	r6, r5
   35b54:	bls	35ba0 <flatcc_verify_struct_as_nested_root@@Base+0xc4>
   35b58:	ldr	ip, [r0, #4]
   35b5c:	add	r5, r6, #4
   35b60:	cmp	r5, ip
   35b64:	bhi	35ba0 <flatcc_verify_struct_as_nested_root@@Base+0xc4>
   35b68:	ands	r5, r5, #3
   35b6c:	bne	35ba0 <flatcc_verify_struct_as_nested_root@@Base+0xc4>
   35b70:	ldr	r7, [r7, r6]
   35b74:	sub	r6, ip, r6
   35b78:	sub	r6, r6, #4
   35b7c:	mul	r7, r7, r9
   35b80:	cmp	r6, r7
   35b84:	bcc	35ba0 <flatcc_verify_struct_as_nested_root@@Base+0xc4>
   35b88:	b	35c60 <flatcc_verify_struct_as_nested_root@@Base+0x184>
   35b8c:	cmp	r2, #0
   35b90:	beq	35c50 <flatcc_verify_struct_as_nested_root@@Base+0x174>
   35b94:	cmp	r3, r7
   35b98:	bcs	35c38 <flatcc_verify_struct_as_nested_root@@Base+0x15c>
   35b9c:	ldr	r1, [r0, #12]
   35ba0:	add	r1, r1, r3
   35ba4:	ldrh	r3, [r1]
   35ba8:	cmp	r3, #0
   35bac:	beq	35c38 <flatcc_verify_struct_as_nested_root@@Base+0x15c>
   35bb0:	ldrh	r2, [r0, #20]
   35bb4:	add	r7, r3, #4
   35bb8:	mov	r1, #13
   35bbc:	cmp	r7, r2
   35bc0:	bhi	35d38 <flatcc_verify_struct_as_nested_root@@Base+0x25c>
   35bc4:	ldr	r1, [r0, #16]
   35bc8:	add	r7, r1, r3
   35bcc:	mov	r1, #12
   35bd0:	tst	r7, #3
   35bd4:	bne	35d38 <flatcc_verify_struct_as_nested_root@@Base+0x25c>
   35bd8:	cmp	r7, #0
   35bdc:	beq	35d34 <flatcc_verify_struct_as_nested_root@@Base+0x258>
   35be0:	ldr	r2, [r0]
   35be4:	ldr	r1, [r2, r7]
   35be8:	add	r3, r1, r7
   35bec:	mov	r1, #16
   35bf0:	cmp	r3, r7
   35bf4:	bls	35d38 <flatcc_verify_struct_as_nested_root@@Base+0x25c>
   35bf8:	ldr	r0, [r0, #4]
   35bfc:	add	r7, r3, #4
   35c00:	cmp	r7, r0
   35c04:	bhi	35d38 <flatcc_verify_struct_as_nested_root@@Base+0x25c>
   35c08:	ands	r7, r7, #3
   35c0c:	bne	35d38 <flatcc_verify_struct_as_nested_root@@Base+0x25c>
   35c10:	ldr	r1, [r2, r3]
   35c14:	sub	r0, r0, r3
   35c18:	sub	r0, r0, #4
   35c1c:	mul	r2, r1, r9
   35c20:	mov	r1, #0
   35c24:	cmp	r0, r2
   35c28:	movwcc	r1, #26
   35c2c:	mov	r0, r1
   35c30:	sub	sp, fp, #24
   35c34:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   35c38:	cmp	r2, #0
   35c3c:	movwne	r2, #1
   35c40:	lsl	r1, r2, #2
   35c44:	mov	r0, r1
   35c48:	sub	sp, fp, #24
   35c4c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   35c50:	mov	r1, #0
   35c54:	cmp	r3, r7
   35c58:	bcs	35d38 <flatcc_verify_struct_as_nested_root@@Base+0x25c>
   35c5c:	ldr	r1, [r0, #12]
   35c60:	add	r1, r1, r3
   35c64:	ldrh	r2, [r1]
   35c68:	mov	r1, #0
   35c6c:	cmp	r2, #0
   35c70:	beq	35d38 <flatcc_verify_struct_as_nested_root@@Base+0x25c>
   35c74:	ldr	r3, [r0]
   35c78:	ldr	r0, [r0, #16]
   35c7c:	add	r0, r3, r0
   35c80:	adds	r0, r0, r2
   35c84:	beq	35d38 <flatcc_verify_struct_as_nested_root@@Base+0x25c>
   35c88:	ldr	r7, [r0]
   35c8c:	mov	r1, #5
   35c90:	ldr	r8, [r7, r0]!
   35c94:	add	r6, r7, #4
   35c98:	tst	r6, #3
   35c9c:	bne	35d38 <flatcc_verify_struct_as_nested_root@@Base+0x25c>
   35ca0:	mov	r1, #6
   35ca4:	cmn	r8, #9
   35ca8:	bhi	35d38 <flatcc_verify_struct_as_nested_root@@Base+0x25c>
   35cac:	mov	r1, #1
   35cb0:	cmp	r8, #8
   35cb4:	bcc	35d38 <flatcc_verify_struct_as_nested_root@@Base+0x25c>
   35cb8:	cmp	r4, #0
   35cbc:	beq	35cec <flatcc_verify_struct_as_nested_root@@Base+0x210>
   35cc0:	mov	r0, #0
   35cc4:	mov	r1, r4
   35cc8:	mov	r2, #4
   35ccc:	str	r0, [sp]
   35cd0:	mov	r0, sp
   35cd4:	bl	14ef8 <strncpy@plt>
   35cd8:	ldr	r0, [sp]
   35cdc:	cmp	r0, #0
   35ce0:	ldrne	r1, [r7, #8]
   35ce4:	cmpne	r1, r0
   35ce8:	bne	35d44 <flatcc_verify_struct_as_nested_root@@Base+0x268>
   35cec:	ldr	r0, [r6]
   35cf0:	mov	r1, #18
   35cf4:	sub	r2, r0, #1
   35cf8:	cmp	r2, r8
   35cfc:	bcs	35d38 <flatcc_verify_struct_as_nested_root@@Base+0x25c>
   35d00:	ldr	r1, [fp, #8]
   35d04:	adds	r2, r0, r1
   35d08:	mov	r1, #10
   35d0c:	bcs	35d38 <flatcc_verify_struct_as_nested_root@@Base+0x25c>
   35d10:	mov	r1, #9
   35d14:	cmp	r2, r8
   35d18:	bhi	35d38 <flatcc_verify_struct_as_nested_root@@Base+0x25c>
   35d1c:	sub	r1, r9, #1
   35d20:	ands	r1, r0, r1
   35d24:	movwne	r1, #11
   35d28:	mov	r0, r1
   35d2c:	sub	sp, fp, #24
   35d30:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   35d34:	mov	r1, #0
   35d38:	mov	r0, r1
   35d3c:	sub	sp, fp, #24
   35d40:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   35d44:	mov	r0, #0
   35d48:	mov	r1, r4
   35d4c:	mov	r2, #4
   35d50:	str	r0, [sp, #4]
   35d54:	add	r0, sp, #4
   35d58:	bl	14ef8 <strncpy@plt>
   35d5c:	ldr	r1, [sp, #4]
   35d60:	ldr	r0, [r7, #8]
   35d64:	subs	r0, r0, r1
   35d68:	movwne	r0, #1
   35d6c:	cmp	r1, #0
   35d70:	lslne	r1, r0, #1
   35d74:	mov	r0, r1
   35d78:	sub	sp, fp, #24
   35d7c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00035d80 <flatcc_verify_table_as_nested_root@@Base>:
   35d80:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   35d84:	add	fp, sp, #24
   35d88:	sub	sp, sp, #24
   35d8c:	mov	r4, r0
   35d90:	mov	r0, #4
   35d94:	ldr	r8, [fp, #8]
   35d98:	mov	r5, r3
   35d9c:	add	r6, r0, r1, lsl #1
   35da0:	ldrh	r7, [r4, #22]
   35da4:	uxth	r3, r6
   35da8:	cmp	r3, r7
   35dac:	bcs	35e34 <flatcc_verify_table_as_nested_root@@Base+0xb4>
   35db0:	ldr	r0, [r4, #12]
   35db4:	uxtah	r6, r0, r6
   35db8:	ldrh	r6, [r6]
   35dbc:	cmp	r6, #0
   35dc0:	beq	35e34 <flatcc_verify_table_as_nested_root@@Base+0xb4>
   35dc4:	ldrh	r7, [r4, #20]
   35dc8:	add	r1, r6, #4
   35dcc:	cmp	r1, r7
   35dd0:	bhi	35e48 <flatcc_verify_table_as_nested_root@@Base+0xc8>
   35dd4:	ldr	r1, [r4, #16]
   35dd8:	add	r7, r1, r6
   35ddc:	tst	r7, #3
   35de0:	bne	35e48 <flatcc_verify_table_as_nested_root@@Base+0xc8>
   35de4:	cmp	r7, #0
   35de8:	beq	35f00 <flatcc_verify_table_as_nested_root@@Base+0x180>
   35dec:	ldr	ip, [r4]
   35df0:	ldr	r1, [ip, r7]
   35df4:	add	r6, r1, r7
   35df8:	cmp	r6, r7
   35dfc:	bls	35e48 <flatcc_verify_table_as_nested_root@@Base+0xc8>
   35e00:	ldr	lr, [r4, #4]
   35e04:	add	r7, r6, #4
   35e08:	cmp	r7, lr
   35e0c:	bhi	35e48 <flatcc_verify_table_as_nested_root@@Base+0xc8>
   35e10:	ands	r1, r7, #3
   35e14:	bne	35e48 <flatcc_verify_table_as_nested_root@@Base+0xc8>
   35e18:	ldr	r1, [ip, r6]
   35e1c:	sub	r7, lr, r6
   35e20:	sub	r7, r7, #4
   35e24:	mul	r1, r1, r8
   35e28:	cmp	r7, r1
   35e2c:	bcc	35e48 <flatcc_verify_table_as_nested_root@@Base+0xc8>
   35e30:	b	35f00 <flatcc_verify_table_as_nested_root@@Base+0x180>
   35e34:	cmp	r2, #0
   35e38:	beq	35ef0 <flatcc_verify_table_as_nested_root@@Base+0x170>
   35e3c:	cmp	r3, r7
   35e40:	bcs	35edc <flatcc_verify_table_as_nested_root@@Base+0x15c>
   35e44:	ldr	r0, [r4, #12]
   35e48:	add	r0, r0, r3
   35e4c:	ldrh	r3, [r0]
   35e50:	cmp	r3, #0
   35e54:	beq	35edc <flatcc_verify_table_as_nested_root@@Base+0x15c>
   35e58:	ldrh	r1, [r4, #20]
   35e5c:	add	r2, r3, #4
   35e60:	mov	r0, #13
   35e64:	cmp	r2, r1
   35e68:	bhi	36048 <flatcc_verify_table_as_nested_root@@Base+0x2c8>
   35e6c:	ldr	r0, [r4, #16]
   35e70:	add	r7, r0, r3
   35e74:	mov	r0, #12
   35e78:	tst	r7, #3
   35e7c:	bne	36048 <flatcc_verify_table_as_nested_root@@Base+0x2c8>
   35e80:	cmp	r7, #0
   35e84:	beq	36050 <flatcc_verify_table_as_nested_root@@Base+0x2d0>
   35e88:	ldr	r2, [r4]
   35e8c:	ldr	r0, [r2, r7]
   35e90:	add	r3, r0, r7
   35e94:	mov	r0, #16
   35e98:	cmp	r3, r7
   35e9c:	bls	36048 <flatcc_verify_table_as_nested_root@@Base+0x2c8>
   35ea0:	ldr	r7, [r4, #4]
   35ea4:	add	r6, r3, #4
   35ea8:	cmp	r6, r7
   35eac:	bhi	36048 <flatcc_verify_table_as_nested_root@@Base+0x2c8>
   35eb0:	ands	r1, r6, #3
   35eb4:	bne	36048 <flatcc_verify_table_as_nested_root@@Base+0x2c8>
   35eb8:	ldr	r0, [r2, r3]
   35ebc:	mul	r1, r0, r8
   35ec0:	sub	r0, r7, r3
   35ec4:	sub	r2, r0, #4
   35ec8:	mov	r0, #0
   35ecc:	cmp	r2, r1
   35ed0:	movwcc	r0, #26
   35ed4:	sub	sp, fp, #24
   35ed8:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   35edc:	cmp	r2, #0
   35ee0:	movwne	r2, #1
   35ee4:	lsl	r0, r2, #2
   35ee8:	sub	sp, fp, #24
   35eec:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   35ef0:	mov	r0, #0
   35ef4:	cmp	r3, r7
   35ef8:	bcs	36048 <flatcc_verify_table_as_nested_root@@Base+0x2c8>
   35efc:	ldr	r0, [r4, #12]
   35f00:	add	r0, r0, r3
   35f04:	ldrh	r1, [r0]
   35f08:	mov	r0, #0
   35f0c:	cmp	r1, #0
   35f10:	beq	36048 <flatcc_verify_table_as_nested_root@@Base+0x2c8>
   35f14:	ldr	r2, [r4]
   35f18:	ldr	r3, [r4, #16]
   35f1c:	add	r2, r2, r3
   35f20:	adds	r1, r2, r1
   35f24:	beq	36048 <flatcc_verify_table_as_nested_root@@Base+0x2c8>
   35f28:	ldr	r6, [r1]
   35f2c:	mov	r0, #5
   35f30:	ldr	r8, [r6, r1]!
   35f34:	add	r7, r6, #4
   35f38:	tst	r7, #3
   35f3c:	bne	36048 <flatcc_verify_table_as_nested_root@@Base+0x2c8>
   35f40:	mov	r0, #6
   35f44:	cmn	r8, #9
   35f48:	bhi	36048 <flatcc_verify_table_as_nested_root@@Base+0x2c8>
   35f4c:	mov	r0, #1
   35f50:	cmp	r8, #8
   35f54:	bcc	36048 <flatcc_verify_table_as_nested_root@@Base+0x2c8>
   35f58:	cmp	r5, #0
   35f5c:	beq	35f8c <flatcc_verify_table_as_nested_root@@Base+0x20c>
   35f60:	mov	r0, #0
   35f64:	mov	r1, r5
   35f68:	mov	r2, #4
   35f6c:	str	r0, [sp]
   35f70:	mov	r0, sp
   35f74:	bl	14ef8 <strncpy@plt>
   35f78:	ldr	r0, [sp]
   35f7c:	cmp	r0, #0
   35f80:	ldrne	r1, [r6, #8]
   35f84:	cmpne	r1, r0
   35f88:	bne	3605c <flatcc_verify_table_as_nested_root@@Base+0x2dc>
   35f8c:	ldr	r0, [r4, #8]
   35f90:	ldr	r1, [r7]
   35f94:	subs	r0, r0, #1
   35f98:	str	r0, [sp, #8]
   35f9c:	beq	36094 <flatcc_verify_table_as_nested_root@@Base+0x314>
   35fa0:	mov	r0, #15
   35fa4:	tst	r1, #3
   35fa8:	bne	36048 <flatcc_verify_table_as_nested_root@@Base+0x2c8>
   35fac:	cmp	r1, #0
   35fb0:	beq	36048 <flatcc_verify_table_as_nested_root@@Base+0x2c8>
   35fb4:	add	r2, r1, #4
   35fb8:	cmp	r2, r8
   35fbc:	bhi	36048 <flatcc_verify_table_as_nested_root@@Base+0x2c8>
   35fc0:	str	r1, [sp, #16]
   35fc4:	ldr	r0, [r7, r1]
   35fc8:	sub	r6, r1, r0
   35fcc:	mov	r0, #29
   35fd0:	tst	r6, #-2147483647	; 0x80000001
   35fd4:	bne	36048 <flatcc_verify_table_as_nested_root@@Base+0x2c8>
   35fd8:	add	r3, r6, #2
   35fdc:	mov	r0, #27
   35fe0:	cmp	r3, r8
   35fe4:	bhi	36048 <flatcc_verify_table_as_nested_root@@Base+0x2c8>
   35fe8:	mov	r2, r7
   35fec:	mov	r0, #30
   35ff0:	ldrh	r5, [r2, r6]!
   35ff4:	tst	r5, #1
   35ff8:	strh	r5, [sp, #22]
   35ffc:	bne	36048 <flatcc_verify_table_as_nested_root@@Base+0x2c8>
   36000:	add	r6, r6, r5
   36004:	cmp	r6, r8
   36008:	bhi	36048 <flatcc_verify_table_as_nested_root@@Base+0x2c8>
   3600c:	mov	r0, #28
   36010:	cmp	r5, #4
   36014:	bcc	36048 <flatcc_verify_table_as_nested_root@@Base+0x2c8>
   36018:	add	r0, r7, r3
   3601c:	sub	r1, r8, r1
   36020:	ldrh	r3, [r0]
   36024:	mov	r0, #20
   36028:	cmp	r1, r3
   3602c:	strh	r3, [sp, #20]
   36030:	bcc	36048 <flatcc_verify_table_as_nested_root@@Base+0x2c8>
   36034:	ldr	r1, [fp, #12]
   36038:	mov	r0, sp
   3603c:	stm	sp, {r7, r8}
   36040:	str	r2, [sp, #12]
   36044:	blx	r1
   36048:	sub	sp, fp, #24
   3604c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   36050:	mov	r0, #0
   36054:	sub	sp, fp, #24
   36058:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   3605c:	mov	r0, #0
   36060:	mov	r1, r5
   36064:	mov	r2, #4
   36068:	str	r0, [sp]
   3606c:	mov	r0, sp
   36070:	bl	14ef8 <strncpy@plt>
   36074:	ldr	r0, [sp]
   36078:	ldr	r1, [r6, #8]
   3607c:	subs	r1, r1, r0
   36080:	movwne	r1, #1
   36084:	cmp	r0, #0
   36088:	lslne	r0, r1, #1
   3608c:	sub	sp, fp, #24
   36090:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   36094:	mov	r0, #3
   36098:	sub	sp, fp, #24
   3609c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

000360a0 <flatcc_verify_union_field@@Base>:
   360a0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   360a4:	add	fp, sp, #28
   360a8:	sub	sp, sp, #28
   360ac:	mov	r7, #2
   360b0:	ldrh	r4, [r0, #22]
   360b4:	lsl	r5, r1, #1
   360b8:	add	r7, r7, r1, lsl #1
   360bc:	uxth	r6, r7
   360c0:	cmp	r6, r4
   360c4:	bcs	361c4 <flatcc_verify_union_field@@Base+0x124>
   360c8:	ldr	r6, [r0, #12]
   360cc:	uxtah	r1, r6, r7
   360d0:	ldrh	ip, [r1]
   360d4:	cmp	ip, #0
   360d8:	beq	361c4 <flatcc_verify_union_field@@Base+0x124>
   360dc:	ldrh	r7, [r0, #20]
   360e0:	mov	r1, #13
   360e4:	cmp	ip, r7
   360e8:	bcs	361ec <flatcc_verify_union_field@@Base+0x14c>
   360ec:	add	r7, r5, #4
   360f0:	ldr	lr, [r0]
   360f4:	mov	r1, #1
   360f8:	uxth	sl, r7
   360fc:	cmp	sl, r4
   36100:	bcs	36114 <flatcc_verify_union_field@@Base+0x74>
   36104:	uxtah	r1, r6, r7
   36108:	ldrh	r1, [r1]
   3610c:	clz	r1, r1
   36110:	lsr	r1, r1, #5
   36114:	ldr	r9, [r0, #16]
   36118:	cmp	r1, #0
   3611c:	moveq	r1, #24
   36120:	add	r8, lr, r9
   36124:	ldrb	r5, [r8, ip]
   36128:	cmpeq	r5, #0
   3612c:	beq	361ec <flatcc_verify_union_field@@Base+0x14c>
   36130:	mov	r1, #0
   36134:	cmp	r5, #0
   36138:	beq	361ec <flatcc_verify_union_field@@Base+0x14c>
   3613c:	cmp	sl, r4
   36140:	bcs	36210 <flatcc_verify_union_field@@Base+0x170>
   36144:	uxtah	r1, r6, r7
   36148:	ldrh	r4, [r1]
   3614c:	cmp	r4, #0
   36150:	beq	36210 <flatcc_verify_union_field@@Base+0x170>
   36154:	ldrh	r1, [r0, #20]
   36158:	add	r2, r4, #4
   3615c:	cmp	r2, r1
   36160:	mov	r1, #13
   36164:	bhi	361ec <flatcc_verify_union_field@@Base+0x14c>
   36168:	add	r2, r9, r4
   3616c:	mov	r1, #12
   36170:	tst	r2, #3
   36174:	bne	361ec <flatcc_verify_union_field@@Base+0x14c>
   36178:	cmp	r2, #0
   3617c:	mov	r1, #0
   36180:	beq	361ec <flatcc_verify_union_field@@Base+0x14c>
   36184:	str	lr, [sp, #4]
   36188:	ldr	r1, [r0, #4]
   3618c:	ldr	r0, [r0, #8]
   36190:	str	r1, [sp, #8]
   36194:	str	r2, [sp, #20]
   36198:	str	r0, [sp, #12]
   3619c:	ldr	r0, [lr, r2]
   361a0:	str	r0, [sp, #24]
   361a4:	ldrb	r0, [r8, ip]
   361a8:	strb	r0, [sp, #16]
   361ac:	add	r0, sp, #4
   361b0:	blx	r3
   361b4:	mov	r1, r0
   361b8:	mov	r0, r1
   361bc:	sub	sp, fp, #28
   361c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   361c4:	add	r1, r5, #4
   361c8:	uxth	r3, r1
   361cc:	cmp	r3, r4
   361d0:	bcs	361f8 <flatcc_verify_union_field@@Base+0x158>
   361d4:	ldr	r0, [r0, #12]
   361d8:	uxtah	r0, r0, r1
   361dc:	mov	r1, #23
   361e0:	ldrh	r0, [r0]
   361e4:	cmp	r0, #0
   361e8:	beq	361f8 <flatcc_verify_union_field@@Base+0x158>
   361ec:	mov	r0, r1
   361f0:	sub	sp, fp, #28
   361f4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   361f8:	cmp	r2, #0
   361fc:	movwne	r2, #21
   36200:	mov	r1, r2
   36204:	mov	r0, r1
   36208:	sub	sp, fp, #28
   3620c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   36210:	cmp	r2, #0
   36214:	movwne	r2, #1
   36218:	lsl	r1, r2, #2
   3621c:	mov	r0, r1
   36220:	sub	sp, fp, #28
   36224:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00036228 <flatcc_verify_union_vector_field@@Base>:
   36228:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3622c:	add	fp, sp, #28
   36230:	sub	sp, sp, #28
   36234:	mov	r9, r3
   36238:	mov	r3, #2
   3623c:	lsl	sl, r1, #1
   36240:	add	r5, r3, r1, lsl #1
   36244:	ldrh	r1, [r0, #22]
   36248:	uxth	r3, r5
   3624c:	cmp	r3, r1
   36250:	bcs	362e4 <flatcc_verify_union_vector_field@@Base+0xbc>
   36254:	ldr	r7, [r0, #12]
   36258:	uxtah	r5, r7, r5
   3625c:	ldrh	r5, [r5]
   36260:	cmp	r5, #0
   36264:	beq	362e4 <flatcc_verify_union_vector_field@@Base+0xbc>
   36268:	add	r5, r7, r3
   3626c:	ldrh	r5, [r5]
   36270:	cmp	r5, #0
   36274:	beq	36330 <flatcc_verify_union_vector_field@@Base+0x108>
   36278:	ldrh	r4, [r0, #20]
   3627c:	add	r6, r5, #4
   36280:	cmp	r6, r4
   36284:	bhi	36344 <flatcc_verify_union_vector_field@@Base+0x11c>
   36288:	ldr	r6, [r0, #16]
   3628c:	add	r5, r6, r5
   36290:	tst	r5, #3
   36294:	bne	36344 <flatcc_verify_union_vector_field@@Base+0x11c>
   36298:	cmp	r5, #0
   3629c:	beq	363f8 <flatcc_verify_union_vector_field@@Base+0x1d0>
   362a0:	ldr	ip, [r0]
   362a4:	ldr	r6, [ip, r5]
   362a8:	add	lr, r6, r5
   362ac:	cmp	lr, r5
   362b0:	bls	36344 <flatcc_verify_union_vector_field@@Base+0x11c>
   362b4:	ldr	r8, [r0, #4]
   362b8:	add	r5, lr, #4
   362bc:	cmp	r5, r8
   362c0:	bhi	36344 <flatcc_verify_union_vector_field@@Base+0x11c>
   362c4:	ands	r4, r5, #3
   362c8:	bne	36344 <flatcc_verify_union_vector_field@@Base+0x11c>
   362cc:	ldr	r6, [ip, lr]
   362d0:	sub	r5, r8, lr
   362d4:	sub	r5, r5, #4
   362d8:	cmp	r5, r6
   362dc:	bcc	36344 <flatcc_verify_union_vector_field@@Base+0x11c>
   362e0:	b	363f8 <flatcc_verify_union_vector_field@@Base+0x1d0>
   362e4:	add	r7, sl, #4
   362e8:	uxth	r5, r7
   362ec:	cmp	r5, r1
   362f0:	bcs	363d8 <flatcc_verify_union_vector_field@@Base+0x1b0>
   362f4:	cmp	r2, #0
   362f8:	beq	36314 <flatcc_verify_union_vector_field@@Base+0xec>
   362fc:	ldr	r5, [r0, #12]
   36300:	uxtah	r7, r5, r7
   36304:	mov	r5, #22
   36308:	ldrh	r7, [r7]
   3630c:	cmp	r7, #0
   36310:	beq	36584 <flatcc_verify_union_vector_field@@Base+0x35c>
   36314:	cmp	r3, r1
   36318:	bcs	36330 <flatcc_verify_union_vector_field@@Base+0x108>
   3631c:	ldr	r7, [r0, #12]
   36320:	add	r5, r7, r3
   36324:	ldrh	r5, [r5]
   36328:	cmp	r5, #0
   3632c:	bne	36278 <flatcc_verify_union_vector_field@@Base+0x50>
   36330:	cmp	r2, #0
   36334:	beq	363e8 <flatcc_verify_union_vector_field@@Base+0x1c0>
   36338:	cmp	r3, r1
   3633c:	bcs	36578 <flatcc_verify_union_vector_field@@Base+0x350>
   36340:	ldr	r7, [r0, #12]
   36344:	add	r1, r7, r3
   36348:	ldrh	r1, [r1]
   3634c:	cmp	r1, #0
   36350:	beq	36578 <flatcc_verify_union_vector_field@@Base+0x350>
   36354:	ldrh	r2, [r0, #20]
   36358:	add	r3, r1, #4
   3635c:	mov	r5, #13
   36360:	cmp	r3, r2
   36364:	bhi	36584 <flatcc_verify_union_vector_field@@Base+0x35c>
   36368:	ldr	r2, [r0, #16]
   3636c:	mov	r5, #12
   36370:	add	r3, r2, r1
   36374:	tst	r3, #3
   36378:	bne	36584 <flatcc_verify_union_vector_field@@Base+0x35c>
   3637c:	cmp	r3, #0
   36380:	beq	36590 <flatcc_verify_union_vector_field@@Base+0x368>
   36384:	ldr	r1, [r0]
   36388:	mov	r5, #16
   3638c:	ldr	r2, [r1, r3]
   36390:	add	r2, r2, r3
   36394:	cmp	r2, r3
   36398:	bls	36584 <flatcc_verify_union_vector_field@@Base+0x35c>
   3639c:	ldr	r0, [r0, #4]
   363a0:	add	r3, r2, #4
   363a4:	cmp	r3, r0
   363a8:	bhi	36584 <flatcc_verify_union_vector_field@@Base+0x35c>
   363ac:	ands	r3, r3, #3
   363b0:	bne	36584 <flatcc_verify_union_vector_field@@Base+0x35c>
   363b4:	ldr	r1, [r1, r2]
   363b8:	sub	r0, r0, r2
   363bc:	mov	r5, #0
   363c0:	sub	r0, r0, #4
   363c4:	cmp	r0, r1
   363c8:	movwcc	r5, #26
   363cc:	mov	r0, r5
   363d0:	sub	sp, fp, #28
   363d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   363d8:	mov	r5, #22
   363dc:	cmp	r2, #0
   363e0:	bne	36584 <flatcc_verify_union_vector_field@@Base+0x35c>
   363e4:	b	36314 <flatcc_verify_union_vector_field@@Base+0xec>
   363e8:	mov	r5, #0
   363ec:	cmp	r3, r1
   363f0:	bcs	36584 <flatcc_verify_union_vector_field@@Base+0x35c>
   363f4:	ldr	r7, [r0, #12]
   363f8:	add	r3, r7, r3
   363fc:	mov	r5, #0
   36400:	ldrh	r3, [r3]
   36404:	cmp	r3, #0
   36408:	beq	36584 <flatcc_verify_union_vector_field@@Base+0x35c>
   3640c:	ldr	r8, [r0]
   36410:	ldr	lr, [r0, #16]
   36414:	add	r6, r8, lr
   36418:	adds	ip, r6, r3
   3641c:	beq	36584 <flatcc_verify_union_vector_field@@Base+0x35c>
   36420:	add	r3, sl, #4
   36424:	uxth	r4, r3
   36428:	cmp	r4, r1
   3642c:	bcs	36578 <flatcc_verify_union_vector_field@@Base+0x350>
   36430:	uxtah	r1, r7, r3
   36434:	ldrh	r1, [r1]
   36438:	cmp	r1, #0
   3643c:	beq	36578 <flatcc_verify_union_vector_field@@Base+0x350>
   36440:	ldrh	r2, [r0, #20]
   36444:	add	r3, r1, #4
   36448:	mov	r5, #13
   3644c:	cmp	r3, r2
   36450:	bhi	36584 <flatcc_verify_union_vector_field@@Base+0x35c>
   36454:	add	r3, lr, r1
   36458:	mov	r5, #12
   3645c:	tst	r3, #3
   36460:	bne	36584 <flatcc_verify_union_vector_field@@Base+0x35c>
   36464:	cmp	r3, #0
   36468:	mov	r5, #0
   3646c:	beq	36584 <flatcc_verify_union_vector_field@@Base+0x35c>
   36470:	ldr	r1, [r0, #8]
   36474:	cmp	r1, #1
   36478:	blt	365a0 <flatcc_verify_union_vector_field@@Base+0x378>
   3647c:	ldr	r2, [r8, r3]
   36480:	mov	r5, #16
   36484:	add	r2, r2, r3
   36488:	cmp	r2, r3
   3648c:	bls	36584 <flatcc_verify_union_vector_field@@Base+0x35c>
   36490:	ldr	r0, [r0, #4]
   36494:	add	r7, r2, #4
   36498:	cmp	r7, r0
   3649c:	bhi	36584 <flatcc_verify_union_vector_field@@Base+0x35c>
   364a0:	ands	r3, r7, #3
   364a4:	bne	36584 <flatcc_verify_union_vector_field@@Base+0x35c>
   364a8:	ldr	r3, [r8, r2]
   364ac:	mov	r5, #25
   364b0:	cmn	r3, #-1073741823	; 0xc0000001
   364b4:	bhi	36584 <flatcc_verify_union_vector_field@@Base+0x35c>
   364b8:	sub	r2, r0, r2
   364bc:	mov	r5, #26
   364c0:	sub	r2, r2, #4
   364c4:	cmp	r2, r3, lsl #2
   364c8:	bcc	36584 <flatcc_verify_union_vector_field@@Base+0x35c>
   364cc:	ldr	r2, [ip]
   364d0:	mov	r5, #34	; 0x22
   364d4:	ldr	sl, [r2, ip]!
   364d8:	cmp	r3, sl
   364dc:	bne	36584 <flatcc_verify_union_vector_field@@Base+0x35c>
   364e0:	sub	r1, r1, #1
   364e4:	mov	r5, #0
   364e8:	cmp	sl, #0
   364ec:	str	r1, [sp, #12]
   364f0:	str	r0, [sp, #8]
   364f4:	str	r8, [sp, #4]
   364f8:	beq	36584 <flatcc_verify_union_vector_field@@Base+0x35c>
   364fc:	add	r6, r2, #4
   36500:	add	r4, sp, #4
   36504:	ldr	r1, [r8, r7]
   36508:	ldrb	r0, [r6]
   3650c:	cmp	r1, #0
   36510:	bne	3653c <flatcc_verify_union_vector_field@@Base+0x314>
   36514:	cmp	r0, #0
   36518:	bne	365c0 <flatcc_verify_union_vector_field@@Base+0x398>
   3651c:	add	r6, r6, #1
   36520:	subs	sl, sl, #1
   36524:	add	r7, r7, #4
   36528:	beq	36584 <flatcc_verify_union_vector_field@@Base+0x35c>
   3652c:	ldr	r1, [r8, r7]
   36530:	ldrb	r0, [r6]
   36534:	cmp	r1, #0
   36538:	beq	36514 <flatcc_verify_union_vector_field@@Base+0x2ec>
   3653c:	cmp	r0, #0
   36540:	beq	365b0 <flatcc_verify_union_vector_field@@Base+0x388>
   36544:	str	r1, [sp, #24]
   36548:	str	r7, [sp, #20]
   3654c:	strb	r0, [sp, #16]
   36550:	mov	r0, r4
   36554:	blx	r9
   36558:	cmp	r0, #0
   3655c:	beq	3651c <flatcc_verify_union_vector_field@@Base+0x2f4>
   36560:	add	r0, sp, #4
   36564:	blx	r9
   36568:	mov	r5, r0
   3656c:	mov	r0, r5
   36570:	sub	sp, fp, #28
   36574:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   36578:	cmp	r2, #0
   3657c:	movwne	r2, #1
   36580:	lsl	r5, r2, #2
   36584:	mov	r0, r5
   36588:	sub	sp, fp, #28
   3658c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   36590:	mov	r5, #0
   36594:	mov	r0, r5
   36598:	sub	sp, fp, #28
   3659c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   365a0:	mov	r5, #3
   365a4:	mov	r0, r5
   365a8:	sub	sp, fp, #28
   365ac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   365b0:	mov	r5, #33	; 0x21
   365b4:	mov	r0, r5
   365b8:	sub	sp, fp, #28
   365bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   365c0:	mov	r5, #32
   365c4:	mov	r0, r5
   365c8:	sub	sp, fp, #28
   365cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000365d0 <grisu3_diy_fp_encode_double@@Base>:
   365d0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   365d4:	add	fp, sp, #28
   365d8:	sub	sp, sp, #12
   365dc:	ldr	lr, [fp, #8]
   365e0:	orr	r7, r0, r1
   365e4:	cmp	lr, #0
   365e8:	movwne	lr, #1
   365ec:	cmp	r7, #0
   365f0:	beq	369dc <grisu3_diy_fp_encode_double@@Base+0x40c>
   365f4:	mov	ip, #0
   365f8:	cmp	ip, r1, lsr #22
   365fc:	bne	3661c <grisu3_diy_fp_encode_double@@Base+0x4c>
   36600:	mov	ip, #0
   36604:	lsl	r1, r1, #10
   36608:	sub	ip, ip, #10
   3660c:	orr	r1, r1, r0, lsr #22
   36610:	lsl	r0, r0, #10
   36614:	cmp	r1, #4194304	; 0x400000
   36618:	bcc	36604 <grisu3_diy_fp_encode_double@@Base+0x34>
   3661c:	sub	r5, r2, r3
   36620:	mvn	r2, #0
   36624:	cmp	r1, #0
   36628:	bmi	367dc <grisu3_diy_fp_encode_double@@Base+0x20c>
   3662c:	lsl	r1, r1, #1
   36630:	lsl	r4, r0, #1
   36634:	sub	ip, ip, #1
   36638:	orr	r1, r1, r0, lsr #31
   3663c:	subs	r0, r2, r0, lsl #1
   36640:	sbcs	r0, r2, r1
   36644:	mov	r0, r4
   36648:	blt	3662c <grisu3_diy_fp_encode_double@@Base+0x5c>
   3664c:	cmn	r5, #348	; 0x15c
   36650:	blt	367e8 <grisu3_diy_fp_encode_double@@Base+0x218>
   36654:	cmp	r5, #348	; 0x15c
   36658:	bge	369fc <grisu3_diy_fp_encode_double@@Base+0x42c>
   3665c:	add	r0, r5, #348	; 0x15c
   36660:	movw	r9, #56440	; 0xdc78
   36664:	asr	r6, r0, #31
   36668:	movt	r9, #4
   3666c:	add	r0, r0, r6, lsr #29
   36670:	mvn	r6, #14
   36674:	and	r6, r6, r0, lsl #1
   36678:	ldr	r8, [r9, r6]!
   3667c:	ldrsh	r7, [r9, #10]
   36680:	cmp	r5, r7
   36684:	blt	36a1c <grisu3_diy_fp_encode_double@@Base+0x44c>
   36688:	add	r6, r7, #8
   3668c:	cmp	r6, r5
   36690:	ble	36a3c <grisu3_diy_fp_encode_double@@Base+0x46c>
   36694:	lsl	r6, lr, #2
   36698:	rsb	r0, ip, #0
   3669c:	cmp	r5, r7
   366a0:	lsl	sl, r6, r0
   366a4:	beq	3672c <grisu3_diy_fp_encode_double@@Base+0x15c>
   366a8:	mvn	r0, r7
   366ac:	str	sl, [sp, #4]
   366b0:	str	r3, [sp, #8]
   366b4:	add	r5, r5, r0
   366b8:	cmp	r5, #7
   366bc:	bcs	36a5c <grisu3_diy_fp_encode_double@@Base+0x48c>
   366c0:	movw	r0, #56328	; 0xdc08
   366c4:	movt	r0, #4
   366c8:	ldr	r6, [r0, r5, lsl #4]!
   366cc:	ldr	lr, [r0, #4]
   366d0:	ldr	r0, [r0, #8]
   366d4:	umull	sl, r7, r6, r1
   366d8:	str	r0, [sp]
   366dc:	umull	r3, r0, lr, r4
   366e0:	umaal	r7, r0, lr, r1
   366e4:	umull	r1, r6, r6, r4
   366e8:	mov	r1, #0
   366ec:	adds	r6, sl, r6
   366f0:	ldr	sl, [sp, #4]
   366f4:	adc	r1, r1, #0
   366f8:	adds	r3, r6, r3
   366fc:	adc	r1, r1, #0
   36700:	adds	r3, r3, #-2147483648	; 0x80000000
   36704:	adcs	r4, r7, r1
   36708:	adc	r1, r0, #0
   3670c:	ldr	r0, [sp, #8]
   36710:	add	r0, r0, r5
   36714:	add	r0, r0, #1
   36718:	cmp	r0, #19
   3671c:	ldr	r0, [sp]
   36720:	addgt	sl, sl, #4
   36724:	add	r0, ip, r0
   36728:	add	ip, r0, #64	; 0x40
   3672c:	ldr	r0, [r9, #4]
   36730:	umull	r3, r7, r4, r8
   36734:	umull	r3, r5, r1, r8
   36738:	mov	lr, #0
   3673c:	umull	r4, r6, r4, r0
   36740:	adds	r3, r3, r7
   36744:	adc	r7, lr, #0
   36748:	umaal	r5, r6, r1, r0
   3674c:	mov	r1, #9
   36750:	adds	r3, r3, r4
   36754:	adc	r4, r7, #0
   36758:	adds	r0, r3, #-2147483648	; 0x80000000
   3675c:	adcs	r4, r5, r4
   36760:	adc	r3, r6, #0
   36764:	cmp	sl, #0
   36768:	orr	r0, r4, r3
   3676c:	movweq	r1, #8
   36770:	cmp	r0, #0
   36774:	beq	369dc <grisu3_diy_fp_encode_double@@Base+0x40c>
   36778:	ldrsh	r0, [r9, #8]
   3677c:	cmp	lr, r3, lsr #22
   36780:	add	r0, r0, ip
   36784:	add	r5, r0, #64	; 0x40
   36788:	mov	r0, r5
   3678c:	bne	367a8 <grisu3_diy_fp_encode_double@@Base+0x1d8>
   36790:	lsl	r3, r3, #10
   36794:	sub	r0, r0, #10
   36798:	orr	r3, r3, r4, lsr #22
   3679c:	lsl	r4, r4, #10
   367a0:	cmp	r3, #4194304	; 0x400000
   367a4:	bcc	36790 <grisu3_diy_fp_encode_double@@Base+0x1c0>
   367a8:	add	r7, r1, sl
   367ac:	subs	r1, r2, r4
   367b0:	sbcs	r1, r2, r3
   367b4:	bge	36808 <grisu3_diy_fp_encode_double@@Base+0x238>
   367b8:	lsl	r1, r3, #1
   367bc:	subs	r6, r2, r4, lsl #1
   367c0:	sub	r0, r0, #1
   367c4:	orr	r3, r1, r4, lsr #31
   367c8:	lsl	r1, r4, #1
   367cc:	mov	r4, r1
   367d0:	sbcs	r6, r2, r3
   367d4:	blt	367b8 <grisu3_diy_fp_encode_double@@Base+0x1e8>
   367d8:	b	3680c <grisu3_diy_fp_encode_double@@Base+0x23c>
   367dc:	mov	r4, r0
   367e0:	cmn	r5, #348	; 0x15c
   367e4:	bge	36654 <grisu3_diy_fp_encode_double@@Base+0x84>
   367e8:	movw	r0, #59954	; 0xea32
   367ec:	movw	r1, #58512	; 0xe490
   367f0:	movw	r3, #59985	; 0xea51
   367f4:	mov	r2, #80	; 0x50
   367f8:	movt	r0, #4
   367fc:	movt	r1, #4
   36800:	movt	r3, #4
   36804:	bl	14f40 <__assert_fail@plt>
   36808:	mov	r1, r4
   3680c:	movw	lr, #64462	; 0xfbce
   36810:	sub	r2, r5, r0
   36814:	mov	r5, #0
   36818:	movt	lr, #65535	; 0xffff
   3681c:	lsl	ip, r7, r2
   36820:	add	r2, r0, #64	; 0x40
   36824:	add	r4, lr, #63	; 0x3f
   36828:	cmp	r2, r4
   3682c:	bgt	3687c <grisu3_diy_fp_encode_double@@Base+0x2ac>
   36830:	mvn	r4, #1072	; 0x430
   36834:	mov	r5, #64	; 0x40
   36838:	cmp	r2, r4
   3683c:	blt	3684c <grisu3_diy_fp_encode_double@@Base+0x27c>
   36840:	sub	r5, lr, r0
   36844:	cmp	r5, #61	; 0x3d
   36848:	blt	3687c <grisu3_diy_fp_encode_double@@Base+0x2ac>
   3684c:	sub	r2, r5, #62	; 0x3e
   36850:	mov	r4, #9
   36854:	add	ip, r4, ip, asr r2
   36858:	lsr	r1, r1, r2
   3685c:	rsb	r4, r5, #94	; 0x5e
   36860:	add	r0, r2, r0
   36864:	orr	r1, r1, r3, lsl r4
   36868:	subs	r4, r5, #94	; 0x5e
   3686c:	mov	r5, #62	; 0x3e
   36870:	lsrpl	r1, r3, r4
   36874:	lsr	r3, r3, r2
   36878:	movwpl	r3, #0
   3687c:	lsr	r2, r1, r5
   36880:	rsb	r4, r5, #32
   36884:	lsr	r6, r3, r5
   36888:	add	r0, r0, r5
   3688c:	orr	r2, r2, r3, lsl r4
   36890:	subs	r4, r5, #32
   36894:	lsrpl	r2, r3, r4
   36898:	sub	r3, r5, #1
   3689c:	mov	r4, #1
   368a0:	movwpl	r6, #0
   368a4:	lsl	r4, r4, r3
   368a8:	subs	r3, r5, #33	; 0x21
   368ac:	movwpl	r4, #0
   368b0:	add	r3, ip, r4, lsl #3
   368b4:	cmp	r5, r3
   368b8:	blt	368d8 <grisu3_diy_fp_encode_double@@Base+0x308>
   368bc:	adds	r2, r2, #1
   368c0:	adc	r6, r6, #0
   368c4:	tst	r6, #2097152	; 0x200000
   368c8:	beq	368d8 <grisu3_diy_fp_encode_double@@Base+0x308>
   368cc:	lsrs	r6, r6, #1
   368d0:	rrx	r2, r2
   368d4:	add	r0, r0, #1
   368d8:	and	r1, r4, r1
   368dc:	cmp	r6, #2097152	; 0x200000
   368e0:	bcc	36904 <grisu3_diy_fp_encode_double@@Base+0x334>
   368e4:	mov	r5, #0
   368e8:	lsrs	r7, r6, #1
   368ec:	rrx	r2, r2
   368f0:	cmp	r5, r6, lsr #22
   368f4:	add	r0, r0, #1
   368f8:	mov	r6, r7
   368fc:	bne	368e8 <grisu3_diy_fp_encode_double@@Base+0x318>
   36900:	b	36908 <grisu3_diy_fp_encode_double@@Base+0x338>
   36904:	mov	r7, r6
   36908:	ldr	r8, [fp, #12]
   3690c:	vmov.i32	d16, #0	; 0x00000000
   36910:	lsl	r9, r4, #3
   36914:	lsl	r1, r1, #3
   36918:	cmp	r0, lr
   3691c:	blt	369b0 <grisu3_diy_fp_encode_double@@Base+0x3e0>
   36920:	and	r4, r7, #1048576	; 0x100000
   36924:	mov	r5, #1
   36928:	cmp	r0, lr
   3692c:	eor	r5, r5, r4, lsr #20
   36930:	beq	36984 <grisu3_diy_fp_encode_double@@Base+0x3b4>
   36934:	cmp	r4, #0
   36938:	bne	36984 <grisu3_diy_fp_encode_double@@Base+0x3b4>
   3693c:	mov	r4, #1
   36940:	lsl	r5, r7, #1
   36944:	sub	r0, r0, #1
   36948:	orr	r6, r5, r2, lsr #31
   3694c:	ands	r5, r7, #524288	; 0x80000
   36950:	lsl	r2, r2, #1
   36954:	eor	r5, r4, r5, lsr #19
   36958:	bne	36968 <grisu3_diy_fp_encode_double@@Base+0x398>
   3695c:	cmp	r0, lr
   36960:	mov	r7, r6
   36964:	bgt	36940 <grisu3_diy_fp_encode_double@@Base+0x370>
   36968:	cmp	r0, lr
   3696c:	bne	36990 <grisu3_diy_fp_encode_double@@Base+0x3c0>
   36970:	cmp	r5, #0
   36974:	mov	r7, #0
   36978:	mov	r5, #0
   3697c:	bne	369a0 <grisu3_diy_fp_encode_double@@Base+0x3d0>
   36980:	b	36990 <grisu3_diy_fp_encode_double@@Base+0x3c0>
   36984:	mov	r6, r7
   36988:	cmp	r0, lr
   3698c:	beq	36970 <grisu3_diy_fp_encode_double@@Base+0x3a0>
   36990:	movw	r7, #1075	; 0x433
   36994:	add	r0, r0, r7
   36998:	mov	r7, #0
   3699c:	lsl	r5, r0, #20
   369a0:	bfc	r6, #20, #12
   369a4:	orr	r0, r7, r2
   369a8:	orr	r2, r5, r6
   369ac:	vmov	d16, r0, r2
   369b0:	cmp	r1, r3
   369b4:	sub	r3, r9, ip
   369b8:	mov	r2, #0
   369bc:	mov	r0, #0
   369c0:	vstr	d16, [r8]
   369c4:	movwge	r2, #1
   369c8:	cmp	r3, r1
   369cc:	movwge	r0, #1
   369d0:	orr	r0, r2, r0
   369d4:	sub	sp, fp, #28
   369d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   369dc:	movw	r0, #59802	; 0xe99a
   369e0:	movw	r1, #59811	; 0xe9a3
   369e4:	movw	r3, #59897	; 0xe9f9
   369e8:	mov	r2, #260	; 0x104
   369ec:	movt	r0, #4
   369f0:	movt	r1, #4
   369f4:	movt	r3, #4
   369f8:	bl	14f40 <__assert_fail@plt>
   369fc:	movw	r0, #60042	; 0xea8a
   36a00:	movw	r1, #58512	; 0xe490
   36a04:	movw	r3, #59985	; 0xea51
   36a08:	mov	r2, #81	; 0x51
   36a0c:	movt	r0, #4
   36a10:	movt	r1, #4
   36a14:	movt	r3, #4
   36a18:	bl	14f40 <__assert_fail@plt>
   36a1c:	movw	r0, #60085	; 0xeab5
   36a20:	movw	r1, #58512	; 0xe490
   36a24:	movw	r3, #59985	; 0xea51
   36a28:	mov	r2, #88	; 0x58
   36a2c:	movt	r0, #4
   36a30:	movt	r1, #4
   36a34:	movt	r3, #4
   36a38:	bl	14f40 <__assert_fail@plt>
   36a3c:	movw	r0, #60100	; 0xeac4
   36a40:	movw	r1, #58512	; 0xe490
   36a44:	movw	r3, #59985	; 0xea51
   36a48:	mov	r2, #89	; 0x59
   36a4c:	movt	r0, #4
   36a50:	movt	r1, #4
   36a54:	movt	r3, #4
   36a58:	bl	14f40 <__assert_fail@plt>
   36a5c:	movw	r0, #58484	; 0xe474
   36a60:	movw	r1, #58512	; 0xe490
   36a64:	movw	r3, #58599	; 0xe4e7
   36a68:	mov	r2, #185	; 0xb9
   36a6c:	movt	r0, #4
   36a70:	movt	r1, #4
   36a74:	movt	r3, #4
   36a78:	bl	14f40 <__assert_fail@plt>

00036a7c <flatcc_json_parser_error_string@@Base>:
   36a7c:	cmp	r0, #34	; 0x22
   36a80:	movwhi	r0, #56166	; 0xdb66
   36a84:	movthi	r0, #4
   36a88:	bxhi	lr
   36a8c:	movw	r1, #58344	; 0xe3e8
   36a90:	movt	r1, #4
   36a94:	ldr	r0, [r1, r0, lsl #2]
   36a98:	bx	lr

00036a9c <flatcc_json_parser_set_error@@Base>:
   36a9c:	mov	ip, r2
   36aa0:	ldr	r2, [r0, #24]
   36aa4:	cmp	r2, #0
   36aa8:	beq	36ab4 <flatcc_json_parser_set_error@@Base+0x18>
   36aac:	mov	r0, ip
   36ab0:	bx	lr
   36ab4:	str	r1, [r0, #36]	; 0x24
   36ab8:	ldr	r2, [r0, #4]
   36abc:	sub	r1, r1, r2
   36ac0:	add	r1, r1, #1
   36ac4:	str	r1, [r0, #20]
   36ac8:	str	r3, [r0, #24]
   36acc:	mov	r0, ip
   36ad0:	bx	lr

00036ad4 <flatcc_json_parser_string_part@@Base>:
   36ad4:	cmp	r1, r2
   36ad8:	beq	36b04 <flatcc_json_parser_string_part@@Base+0x30>
   36adc:	ldrb	r3, [r1]
   36ae0:	cmp	r3, #32
   36ae4:	bcc	36b38 <flatcc_json_parser_string_part@@Base+0x64>
   36ae8:	cmp	r3, #34	; 0x22
   36aec:	cmpne	r3, #92	; 0x5c
   36af0:	beq	36b30 <flatcc_json_parser_string_part@@Base+0x5c>
   36af4:	add	r1, r1, #1
   36af8:	cmp	r2, r1
   36afc:	bne	36adc <flatcc_json_parser_string_part@@Base+0x8>
   36b00:	mov	r1, r2
   36b04:	ldr	r3, [r0, #24]
   36b08:	cmp	r3, #0
   36b0c:	bne	36b2c <flatcc_json_parser_string_part@@Base+0x58>
   36b10:	mov	ip, #20
   36b14:	str	r1, [r0, #36]	; 0x24
   36b18:	ldr	r3, [r0, #4]
   36b1c:	sub	r1, r1, r3
   36b20:	add	r1, r1, #1
   36b24:	str	r1, [r0, #20]
   36b28:	str	ip, [r0, #24]
   36b2c:	mov	r1, r2
   36b30:	mov	r0, r1
   36b34:	bx	lr
   36b38:	ldr	r3, [r0, #24]
   36b3c:	cmp	r3, #0
   36b40:	bne	36b2c <flatcc_json_parser_string_part@@Base+0x58>
   36b44:	mov	ip, #17
   36b48:	b	36b14 <flatcc_json_parser_string_part@@Base+0x40>

00036b4c <flatcc_json_parser_space_ext@@Base>:
   36b4c:	mov	ip, r2
   36b50:	cmp	r1, r2
   36b54:	beq	36c58 <flatcc_json_parser_space_ext@@Base+0x10c>
   36b58:	ldrb	r3, [r1]
   36b5c:	cmp	r3, #32
   36b60:	bne	36b8c <flatcc_json_parser_space_ext@@Base+0x40>
   36b64:	add	r1, r1, #1
   36b68:	cmp	r1, ip
   36b6c:	bne	36b58 <flatcc_json_parser_space_ext@@Base+0xc>
   36b70:	b	36c58 <flatcc_json_parser_space_ext@@Base+0x10c>
   36b74:	add	r1, r1, r3
   36b78:	add	r1, r1, #1
   36b7c:	str	r1, [r0, #4]
   36b80:	ldr	r2, [r0, #16]
   36b84:	add	r2, r2, #1
   36b88:	str	r2, [r0, #16]
   36b8c:	cmp	r1, ip
   36b90:	bne	36ba4 <flatcc_json_parser_space_ext@@Base+0x58>
   36b94:	b	36c58 <flatcc_json_parser_space_ext@@Base+0x10c>
   36b98:	add	r1, r1, #1
   36b9c:	cmp	r1, ip
   36ba0:	beq	36c58 <flatcc_json_parser_space_ext@@Base+0x10c>
   36ba4:	ldrb	r3, [r1]
   36ba8:	cmp	r3, #32
   36bac:	movhi	r0, r1
   36bb0:	bxhi	lr
   36bb4:	sub	r3, r3, #9
   36bb8:	cmp	r3, #23
   36bbc:	bhi	36c4c <flatcc_json_parser_space_ext@@Base+0x100>
   36bc0:	add	r2, pc, #0
   36bc4:	ldr	pc, [r2, r3, lsl #2]
   36bc8:	muleq	r3, r8, fp
   36bcc:	andeq	r6, r3, r8, ror fp
   36bd0:	andeq	r6, r3, ip, asr #24
   36bd4:	andeq	r6, r3, ip, asr #24
   36bd8:	andeq	r6, r3, r8, lsr #24
   36bdc:	andeq	r6, r3, ip, asr #24
   36be0:	andeq	r6, r3, ip, asr #24
   36be4:	andeq	r6, r3, ip, asr #24
   36be8:	andeq	r6, r3, ip, asr #24
   36bec:	andeq	r6, r3, ip, asr #24
   36bf0:	andeq	r6, r3, ip, asr #24
   36bf4:	andeq	r6, r3, ip, asr #24
   36bf8:	andeq	r6, r3, ip, asr #24
   36bfc:	andeq	r6, r3, ip, asr #24
   36c00:	andeq	r6, r3, ip, asr #24
   36c04:	andeq	r6, r3, ip, asr #24
   36c08:	andeq	r6, r3, ip, asr #24
   36c0c:	andeq	r6, r3, ip, asr #24
   36c10:	andeq	r6, r3, ip, asr #24
   36c14:	andeq	r6, r3, ip, asr #24
   36c18:	andeq	r6, r3, ip, asr #24
   36c1c:	andeq	r6, r3, ip, asr #24
   36c20:	andeq	r6, r3, ip, asr #24
   36c24:	andeq	r6, r3, r8, ror #22
   36c28:	sub	r2, ip, r1
   36c2c:	mov	r3, #0
   36c30:	cmp	r2, #2
   36c34:	blt	36b74 <flatcc_json_parser_space_ext@@Base+0x28>
   36c38:	ldrb	r2, [r1, #1]
   36c3c:	sub	r2, r2, #10
   36c40:	clz	r2, r2
   36c44:	lsr	r3, r2, #5
   36c48:	b	36b74 <flatcc_json_parser_space_ext@@Base+0x28>
   36c4c:	ldr	r2, [r0, #24]
   36c50:	cmp	r2, #0
   36c54:	beq	36c60 <flatcc_json_parser_space_ext@@Base+0x114>
   36c58:	mov	r0, ip
   36c5c:	bx	lr
   36c60:	str	r1, [r0, #36]	; 0x24
   36c64:	mov	r2, #5
   36c68:	ldr	r3, [r0, #4]
   36c6c:	sub	r1, r1, r3
   36c70:	add	r1, r1, #1
   36c74:	str	r1, [r0, #20]
   36c78:	str	r2, [r0, #24]
   36c7c:	mov	r0, ip
   36c80:	bx	lr

00036c84 <flatcc_json_parser_string_escape@@Base>:
   36c84:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   36c88:	add	fp, sp, #24
   36c8c:	sub	r7, r2, r1
   36c90:	cmp	r7, #2
   36c94:	blt	36eec <flatcc_json_parser_string_escape@@Base+0x268>
   36c98:	ldrb	r6, [r1]
   36c9c:	cmp	r6, #92	; 0x5c
   36ca0:	bne	36eec <flatcc_json_parser_string_escape@@Base+0x268>
   36ca4:	ldrb	r6, [r1, #1]
   36ca8:	sub	r6, r6, #34	; 0x22
   36cac:	cmp	r6, #86	; 0x56
   36cb0:	bhi	36eec <flatcc_json_parser_string_escape@@Base+0x268>
   36cb4:	add	r5, pc, #0
   36cb8:	ldr	pc, [r5, r6, lsl #2]
   36cbc:	andeq	r6, r3, r8, lsl lr
   36cc0:	andeq	r6, r3, ip, ror #29
   36cc4:	andeq	r6, r3, ip, ror #29
   36cc8:	andeq	r6, r3, ip, ror #29
   36ccc:	andeq	r6, r3, ip, ror #29
   36cd0:	andeq	r6, r3, ip, ror #29
   36cd4:	andeq	r6, r3, ip, ror #29
   36cd8:	andeq	r6, r3, ip, ror #29
   36cdc:	andeq	r6, r3, ip, ror #29
   36ce0:	andeq	r6, r3, ip, ror #29
   36ce4:	andeq	r6, r3, ip, ror #29
   36ce8:	andeq	r6, r3, ip, ror #29
   36cec:	andeq	r6, r3, ip, ror #29
   36cf0:	andeq	r6, r3, ip, lsr #28
   36cf4:	andeq	r6, r3, ip, ror #29
   36cf8:	andeq	r6, r3, ip, ror #29
   36cfc:	andeq	r6, r3, ip, ror #29
   36d00:	andeq	r6, r3, ip, ror #29
   36d04:	andeq	r6, r3, ip, ror #29
   36d08:	andeq	r6, r3, ip, ror #29
   36d0c:	andeq	r6, r3, ip, ror #29
   36d10:	andeq	r6, r3, ip, ror #29
   36d14:	andeq	r6, r3, ip, ror #29
   36d18:	andeq	r6, r3, ip, ror #29
   36d1c:	andeq	r6, r3, ip, ror #29
   36d20:	andeq	r6, r3, ip, ror #29
   36d24:	andeq	r6, r3, ip, ror #29
   36d28:	andeq	r6, r3, ip, ror #29
   36d2c:	andeq	r6, r3, ip, ror #29
   36d30:	andeq	r6, r3, ip, ror #29
   36d34:	andeq	r6, r3, ip, ror #29
   36d38:	andeq	r6, r3, ip, ror #29
   36d3c:	andeq	r6, r3, ip, ror #29
   36d40:	andeq	r6, r3, ip, ror #29
   36d44:	andeq	r6, r3, ip, ror #29
   36d48:	andeq	r6, r3, ip, ror #29
   36d4c:	andeq	r6, r3, ip, ror #29
   36d50:	andeq	r6, r3, ip, ror #29
   36d54:	andeq	r6, r3, ip, ror #29
   36d58:	andeq	r6, r3, ip, ror #29
   36d5c:	andeq	r6, r3, ip, ror #29
   36d60:	andeq	r6, r3, ip, ror #29
   36d64:	andeq	r6, r3, ip, ror #29
   36d68:	andeq	r6, r3, ip, ror #29
   36d6c:	andeq	r6, r3, ip, ror #29
   36d70:	andeq	r6, r3, ip, ror #29
   36d74:	andeq	r6, r3, ip, ror #29
   36d78:	andeq	r6, r3, ip, ror #29
   36d7c:	andeq	r6, r3, ip, ror #29
   36d80:	andeq	r6, r3, ip, ror #29
   36d84:	andeq	r6, r3, ip, ror #29
   36d88:	andeq	r6, r3, ip, ror #29
   36d8c:	andeq	r6, r3, ip, ror #29
   36d90:	andeq	r6, r3, ip, ror #29
   36d94:	andeq	r6, r3, ip, ror #29
   36d98:	andeq	r6, r3, ip, ror #29
   36d9c:	andeq	r6, r3, ip, ror #29
   36da0:	andeq	r6, r3, ip, ror #29
   36da4:	andeq	r6, r3, r0, asr #28
   36da8:	andeq	r6, r3, ip, ror #29
   36dac:	andeq	r6, r3, ip, ror #29
   36db0:	andeq	r6, r3, ip, ror #29
   36db4:	andeq	r6, r3, ip, ror #29
   36db8:	andeq	r6, r3, ip, ror #29
   36dbc:	andeq	r6, r3, r4, asr lr
   36dc0:	andeq	r6, r3, ip, ror #29
   36dc4:	andeq	r6, r3, ip, ror #29
   36dc8:	andeq	r6, r3, ip, ror #29
   36dcc:	andeq	r6, r3, r8, ror #28
   36dd0:	andeq	r6, r3, ip, ror #29
   36dd4:	andeq	r6, r3, ip, ror #29
   36dd8:	andeq	r6, r3, ip, ror #29
   36ddc:	andeq	r6, r3, ip, ror #29
   36de0:	andeq	r6, r3, ip, ror #29
   36de4:	andeq	r6, r3, ip, ror #29
   36de8:	andeq	r6, r3, ip, ror #29
   36dec:	andeq	r6, r3, ip, ror lr
   36df0:	andeq	r6, r3, ip, ror #29
   36df4:	andeq	r6, r3, ip, ror #29
   36df8:	andeq	r6, r3, ip, ror #29
   36dfc:	muleq	r3, r0, lr
   36e00:	andeq	r6, r3, ip, ror #29
   36e04:	andeq	r6, r3, r4, lsr #29
   36e08:			; <UNDEFINED> instruction: 0x00036eb8
   36e0c:	andeq	r6, r3, ip, ror #29
   36e10:	andeq	r6, r3, ip, ror #29
   36e14:	ldrdeq	r6, [r3], -ip
   36e18:	movw	r0, #8705	; 0x2201
   36e1c:	add	r2, r1, #2
   36e20:	strh	r0, [r3]
   36e24:	mov	r0, r2
   36e28:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   36e2c:	movw	r0, #12033	; 0x2f01
   36e30:	add	r2, r1, #2
   36e34:	strh	r0, [r3]
   36e38:	mov	r0, r2
   36e3c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   36e40:	movw	r0, #23553	; 0x5c01
   36e44:	add	r2, r1, #2
   36e48:	strh	r0, [r3]
   36e4c:	mov	r0, r2
   36e50:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   36e54:	movw	r0, #2049	; 0x801
   36e58:	add	r2, r1, #2
   36e5c:	strh	r0, [r3]
   36e60:	mov	r0, r2
   36e64:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   36e68:	movw	r0, #3073	; 0xc01
   36e6c:	add	r2, r1, #2
   36e70:	strh	r0, [r3]
   36e74:	mov	r0, r2
   36e78:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   36e7c:	movw	r0, #2561	; 0xa01
   36e80:	add	r2, r1, #2
   36e84:	strh	r0, [r3]
   36e88:	mov	r0, r2
   36e8c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   36e90:	movw	r0, #3329	; 0xd01
   36e94:	add	r2, r1, #2
   36e98:	strh	r0, [r3]
   36e9c:	mov	r0, r2
   36ea0:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   36ea4:	movw	r0, #2305	; 0x901
   36ea8:	add	r2, r1, #2
   36eac:	strh	r0, [r3]
   36eb0:	mov	r0, r2
   36eb4:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   36eb8:	cmp	r7, #5
   36ebc:	ble	36eec <flatcc_json_parser_string_escape@@Base+0x268>
   36ec0:	ldrb	r7, [r1, #2]
   36ec4:	sub	r6, r7, #48	; 0x30
   36ec8:	uxtb	r6, r6
   36ecc:	cmp	r6, #9
   36ed0:	bhi	36f48 <flatcc_json_parser_string_escape@@Base+0x2c4>
   36ed4:	lsl	ip, r7, #12
   36ed8:	b	36f68 <flatcc_json_parser_string_escape@@Base+0x2e4>
   36edc:	mov	r6, #1
   36ee0:	cmp	r7, #3
   36ee4:	strb	r6, [r3]
   36ee8:	bgt	36f2c <flatcc_json_parser_string_escape@@Base+0x2a8>
   36eec:	mov	r7, #0
   36ef0:	strb	r7, [r3]
   36ef4:	ldr	r3, [r0, #24]
   36ef8:	cmp	r3, #0
   36efc:	beq	36f08 <flatcc_json_parser_string_escape@@Base+0x284>
   36f00:	mov	r0, r2
   36f04:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   36f08:	str	r1, [r0, #36]	; 0x24
   36f0c:	mov	r3, #18
   36f10:	ldr	r7, [r0, #4]
   36f14:	sub	r1, r1, r7
   36f18:	add	r1, r1, #1
   36f1c:	str	r1, [r0, #20]
   36f20:	str	r3, [r0, #24]
   36f24:	mov	r0, r2
   36f28:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   36f2c:	ldrb	r7, [r1, #2]
   36f30:	sub	r6, r7, #48	; 0x30
   36f34:	uxtb	r6, r6
   36f38:	cmp	r6, #9
   36f3c:	bhi	36f84 <flatcc_json_parser_string_escape@@Base+0x300>
   36f40:	lsl	r7, r7, #4
   36f44:	b	36fa0 <flatcc_json_parser_string_escape@@Base+0x31c>
   36f48:	orr	r6, r7, #32
   36f4c:	sub	r6, r6, #97	; 0x61
   36f50:	uxtb	r6, r6
   36f54:	cmp	r6, #5
   36f58:	bhi	36eec <flatcc_json_parser_string_escape@@Base+0x268>
   36f5c:	movw	r6, #36864	; 0x9000
   36f60:	movt	r6, #65535	; 0xffff
   36f64:	add	ip, r6, r7, lsl #12
   36f68:	ldrb	lr, [r1, #3]
   36f6c:	sub	r4, lr, #48	; 0x30
   36f70:	uxtb	r4, r4
   36f74:	cmp	r4, #10
   36f78:	bcs	36fe0 <flatcc_json_parser_string_escape@@Base+0x35c>
   36f7c:	mov	r8, #53248	; 0xd000
   36f80:	b	36ff8 <flatcc_json_parser_string_escape@@Base+0x374>
   36f84:	orr	r6, r7, #32
   36f88:	sub	r6, r6, #97	; 0x61
   36f8c:	uxtb	r6, r6
   36f90:	cmp	r6, #5
   36f94:	bhi	36eec <flatcc_json_parser_string_escape@@Base+0x268>
   36f98:	mvn	r6, #111	; 0x6f
   36f9c:	add	r7, r6, r7, lsl #4
   36fa0:	ldrb	r5, [r1, #3]
   36fa4:	sub	r6, r5, #48	; 0x30
   36fa8:	uxtb	r4, r6
   36fac:	cmp	r4, #10
   36fb0:	bcc	36fcc <flatcc_json_parser_string_escape@@Base+0x348>
   36fb4:	orr	r6, r5, #32
   36fb8:	sub	r5, r6, #97	; 0x61
   36fbc:	uxtb	r5, r5
   36fc0:	cmp	r5, #5
   36fc4:	bhi	36eec <flatcc_json_parser_string_escape@@Base+0x268>
   36fc8:	sub	r6, r6, #87	; 0x57
   36fcc:	orr	r0, r6, r7
   36fd0:	add	r2, r1, #4
   36fd4:	strb	r0, [r3, #1]
   36fd8:	mov	r0, r2
   36fdc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   36fe0:	orr	lr, lr, #32
   36fe4:	mov	r8, #43264	; 0xa900
   36fe8:	sub	r4, lr, #97	; 0x61
   36fec:	uxtb	r4, r4
   36ff0:	cmp	r4, #6
   36ff4:	bcs	36eec <flatcc_json_parser_string_escape@@Base+0x268>
   36ff8:	ldrb	r5, [r1, #4]
   36ffc:	sub	r4, r5, #48	; 0x30
   37000:	uxtb	r4, r4
   37004:	cmp	r4, #10
   37008:	bcs	37014 <flatcc_json_parser_string_escape@@Base+0x390>
   3700c:	mov	r9, #64768	; 0xfd00
   37010:	b	3702c <flatcc_json_parser_string_escape@@Base+0x3a8>
   37014:	orr	r5, r5, #32
   37018:	movw	r9, #64144	; 0xfa90
   3701c:	sub	r4, r5, #97	; 0x61
   37020:	uxtb	r4, r4
   37024:	cmp	r4, #6
   37028:	bcs	36eec <flatcc_json_parser_string_escape@@Base+0x268>
   3702c:	ldrb	r7, [r1, #5]
   37030:	sub	r4, r7, #48	; 0x30
   37034:	uxtb	r4, r4
   37038:	cmp	r4, #10
   3703c:	bcs	3704c <flatcc_json_parser_string_escape@@Base+0x3c8>
   37040:	mvn	r0, #86	; 0x56
   37044:	add	r4, r0, #39	; 0x27
   37048:	b	37064 <flatcc_json_parser_string_escape@@Base+0x3e0>
   3704c:	orr	r7, r7, #32
   37050:	movw	r4, #65449	; 0xffa9
   37054:	sub	r6, r7, #97	; 0x61
   37058:	uxtb	r6, r6
   3705c:	cmp	r6, #6
   37060:	bcs	36eec <flatcc_json_parser_string_escape@@Base+0x268>
   37064:	add	r0, r8, lr, lsl #8
   37068:	add	r2, r9, r5, lsl #4
   3706c:	orr	r0, r0, ip
   37070:	orr	r0, r0, r2
   37074:	add	r2, r4, r7
   37078:	orr	r0, r0, r2
   3707c:	uxth	r7, r0
   37080:	cmp	r7, #127	; 0x7f
   37084:	bhi	370a0 <flatcc_json_parser_string_escape@@Base+0x41c>
   37088:	mov	r2, #1
   3708c:	strb	r2, [r3]
   37090:	strb	r0, [r3, r2]
   37094:	add	r2, r1, #6
   37098:	mov	r0, r2
   3709c:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   370a0:	mov	r2, #0
   370a4:	cmp	r2, r7, lsr #11
   370a8:	bne	370c4 <flatcc_json_parser_string_escape@@Base+0x440>
   370ac:	mov	r7, #192	; 0xc0
   370b0:	mov	r2, #2
   370b4:	orr	r7, r7, r0, lsr #6
   370b8:	strb	r2, [r3]
   370bc:	strb	r7, [r3, #1]
   370c0:	b	370e8 <flatcc_json_parser_string_escape@@Base+0x464>
   370c4:	mov	r6, #224	; 0xe0
   370c8:	mov	r2, #3
   370cc:	orr	r6, r6, r7, lsr #12
   370d0:	strb	r2, [r3]
   370d4:	lsr	r7, r7, #6
   370d8:	strb	r6, [r3, #1]
   370dc:	mov	r6, #2
   370e0:	bfi	r7, r6, #6, #26
   370e4:	strb	r7, [r3, #2]
   370e8:	mvn	r7, #-67108863	; 0xfc000001
   370ec:	bfi	r0, r7, #6, #26
   370f0:	strb	r0, [r3, r2]
   370f4:	add	r2, r1, #6
   370f8:	mov	r0, r2
   370fc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}

00037100 <flatcc_json_parser_skip_constant@@Base>:
   37100:	push	{r4, r5, r6, sl, fp, lr}
   37104:	add	fp, sp, #16
   37108:	cmp	r1, r2
   3710c:	beq	371c0 <flatcc_json_parser_skip_constant@@Base+0xc0>
   37110:	mov	r4, r2
   37114:	mov	r5, r0
   37118:	ldrsb	r0, [r1]
   3711c:	mov	r6, r1
   37120:	cmp	r0, #0
   37124:	bmi	37138 <flatcc_json_parser_skip_constant@@Base+0x38>
   37128:	uxtb	r0, r0
   3712c:	cmp	r0, #95	; 0x5f
   37130:	cmpne	r0, #46	; 0x2e
   37134:	bne	37148 <flatcc_json_parser_skip_constant@@Base+0x48>
   37138:	add	r1, r6, #1
   3713c:	cmp	r1, r4
   37140:	bne	37118 <flatcc_json_parser_skip_constant@@Base+0x18>
   37144:	b	371b8 <flatcc_json_parser_skip_constant@@Base+0xb8>
   37148:	sub	r1, r0, #48	; 0x30
   3714c:	uxtb	r1, r1
   37150:	cmp	r1, #9
   37154:	bls	37138 <flatcc_json_parser_skip_constant@@Base+0x38>
   37158:	orr	r1, r0, #32
   3715c:	sub	r1, r1, #97	; 0x61
   37160:	uxtb	r1, r1
   37164:	cmp	r1, #25
   37168:	bls	37138 <flatcc_json_parser_skip_constant@@Base+0x38>
   3716c:	sub	r1, r4, r6
   37170:	cmp	r1, #2
   37174:	blt	37194 <flatcc_json_parser_skip_constant@@Base+0x94>
   37178:	cmp	r0, #32
   3717c:	bhi	371b0 <flatcc_json_parser_skip_constant@@Base+0xb0>
   37180:	bne	37194 <flatcc_json_parser_skip_constant@@Base+0x94>
   37184:	mov	r1, r6
   37188:	ldrb	r0, [r1, #1]!
   3718c:	cmp	r0, #32
   37190:	bhi	3713c <flatcc_json_parser_skip_constant@@Base+0x3c>
   37194:	mov	r0, r5
   37198:	mov	r1, r6
   3719c:	mov	r2, r4
   371a0:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   371a4:	mov	r1, r0
   371a8:	cmp	r0, r6
   371ac:	bne	3713c <flatcc_json_parser_skip_constant@@Base+0x3c>
   371b0:	mov	r0, r6
   371b4:	pop	{r4, r5, r6, sl, fp, pc}
   371b8:	mov	r0, r4
   371bc:	pop	{r4, r5, r6, sl, fp, pc}
   371c0:	mov	r0, r1
   371c4:	pop	{r4, r5, r6, sl, fp, pc}

000371c8 <flatcc_json_parser_match_constant@@Base>:
   371c8:	push	{r4, r5, r6, r7, fp, lr}
   371cc:	add	fp, sp, #16
   371d0:	ldr	r7, [fp, #8]
   371d4:	mov	r4, r1
   371d8:	sub	r1, r2, r1
   371dc:	cmp	r1, r3
   371e0:	ble	372f4 <flatcc_json_parser_match_constant@@Base+0x12c>
   371e4:	ldr	r1, [r0, #12]
   371e8:	mov	r5, r2
   371ec:	add	r6, r4, r3
   371f0:	cmp	r1, #0
   371f4:	beq	37280 <flatcc_json_parser_match_constant@@Base+0xb8>
   371f8:	sub	r1, r5, r6
   371fc:	cmp	r1, #2
   37200:	blt	37228 <flatcc_json_parser_match_constant@@Base+0x60>
   37204:	ldrb	r1, [r6]
   37208:	mov	r2, r6
   3720c:	cmp	r1, #32
   37210:	bhi	37238 <flatcc_json_parser_match_constant@@Base+0x70>
   37214:	bne	37228 <flatcc_json_parser_match_constant@@Base+0x60>
   37218:	mov	r2, r6
   3721c:	ldrb	r1, [r2, #1]!
   37220:	cmp	r1, #32
   37224:	bhi	37238 <flatcc_json_parser_match_constant@@Base+0x70>
   37228:	mov	r1, r6
   3722c:	mov	r2, r5
   37230:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   37234:	mov	r2, r0
   37238:	cmp	r2, r5
   3723c:	beq	37308 <flatcc_json_parser_match_constant@@Base+0x140>
   37240:	cmp	r2, r6
   37244:	beq	37318 <flatcc_json_parser_match_constant@@Base+0x150>
   37248:	ldrsb	r0, [r2]
   3724c:	cmp	r0, #95	; 0x5f
   37250:	beq	37270 <flatcc_json_parser_match_constant@@Base+0xa8>
   37254:	cmn	r0, #1
   37258:	ble	37270 <flatcc_json_parser_match_constant@@Base+0xa8>
   3725c:	orr	r0, r0, #32
   37260:	sub	r0, r0, #97	; 0x61
   37264:	uxtb	r0, r0
   37268:	cmp	r0, #25
   3726c:	bhi	37318 <flatcc_json_parser_match_constant@@Base+0x150>
   37270:	mov	r0, #1
   37274:	str	r0, [r7]
   37278:	mov	r0, r2
   3727c:	pop	{r4, r5, r6, r7, fp, pc}
   37280:	ldrb	r1, [r6]
   37284:	cmp	r1, #92	; 0x5c
   37288:	beq	37340 <flatcc_json_parser_match_constant@@Base+0x178>
   3728c:	cmp	r1, #34	; 0x22
   37290:	beq	372c4 <flatcc_json_parser_match_constant@@Base+0xfc>
   37294:	cmp	r1, #32
   37298:	bne	372f4 <flatcc_json_parser_match_constant@@Base+0x12c>
   3729c:	add	r1, r4, r3
   372a0:	add	r1, r1, #1
   372a4:	cmp	r5, r1
   372a8:	beq	37308 <flatcc_json_parser_match_constant@@Base+0x140>
   372ac:	ldrb	r2, [r1], #1
   372b0:	cmp	r2, #32
   372b4:	beq	372a4 <flatcc_json_parser_match_constant@@Base+0xdc>
   372b8:	cmp	r2, #34	; 0x22
   372bc:	bne	373a8 <flatcc_json_parser_match_constant@@Base+0x1e0>
   372c0:	sub	r6, r1, #1
   372c4:	mvn	r2, r6
   372c8:	add	r1, r6, #1
   372cc:	cmp	r2, #2
   372d0:	blt	3738c <flatcc_json_parser_match_constant@@Base+0x1c4>
   372d4:	ldrb	r2, [r1]
   372d8:	cmp	r2, #32
   372dc:	bls	37378 <flatcc_json_parser_match_constant@@Base+0x1b0>
   372e0:	mov	r2, r1
   372e4:	mov	r0, #0
   372e8:	str	r0, [r7]
   372ec:	mov	r0, r2
   372f0:	pop	{r4, r5, r6, r7, fp, pc}
   372f4:	mov	r0, #0
   372f8:	mov	r2, r4
   372fc:	str	r0, [r7]
   37300:	mov	r0, r2
   37304:	pop	{r4, r5, r6, r7, fp, pc}
   37308:	mov	r0, #0
   3730c:	str	r0, [r7]
   37310:	mov	r0, r5
   37314:	pop	{r4, r5, r6, r7, fp, pc}
   37318:	mov	r0, #0
   3731c:	str	r0, [r7]
   37320:	ldrb	r0, [r2]
   37324:	cmp	r0, #44	; 0x2c
   37328:	cmpne	r0, #93	; 0x5d
   3732c:	beq	37300 <flatcc_json_parser_match_constant@@Base+0x138>
   37330:	cmp	r0, #125	; 0x7d
   37334:	movne	r2, r4
   37338:	mov	r0, r2
   3733c:	pop	{r4, r5, r6, r7, fp, pc}
   37340:	mov	r1, #0
   37344:	str	r1, [r7]
   37348:	ldr	r1, [r0, #24]
   3734c:	cmp	r1, #0
   37350:	bne	37310 <flatcc_json_parser_match_constant@@Base+0x148>
   37354:	str	r6, [r0, #36]	; 0x24
   37358:	mov	r1, #18
   3735c:	ldr	r2, [r0, #4]
   37360:	sub	r2, r6, r2
   37364:	add	r2, r2, #1
   37368:	str	r2, [r0, #20]
   3736c:	str	r1, [r0, #24]
   37370:	mov	r0, r5
   37374:	pop	{r4, r5, r6, r7, fp, pc}
   37378:	bne	3738c <flatcc_json_parser_match_constant@@Base+0x1c4>
   3737c:	ldrb	r2, [r6, #2]!
   37380:	cmp	r2, #32
   37384:	mov	r2, r6
   37388:	bhi	37398 <flatcc_json_parser_match_constant@@Base+0x1d0>
   3738c:	mov	r2, #0
   37390:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   37394:	mov	r2, r0
   37398:	mov	r0, #0
   3739c:	str	r0, [r7]
   373a0:	mov	r0, r2
   373a4:	pop	{r4, r5, r6, r7, fp, pc}
   373a8:	mov	r0, #1
   373ac:	sub	r2, r1, #1
   373b0:	str	r0, [r7]
   373b4:	mov	r0, r2
   373b8:	pop	{r4, r5, r6, r7, fp, pc}

000373bc <flatcc_json_parser_unmatched_symbol@@Base>:
   373bc:	push	{r4, r5, fp, lr}
   373c0:	add	fp, sp, #8
   373c4:	mov	r5, r0
   373c8:	ldrb	r0, [r0, #8]
   373cc:	mov	r4, r2
   373d0:	tst	r0, #1
   373d4:	bne	373f8 <flatcc_json_parser_unmatched_symbol@@Base+0x3c>
   373d8:	ldr	r0, [r5, #24]
   373dc:	cmp	r0, #0
   373e0:	bne	375e8 <flatcc_json_parser_unmatched_symbol@@Base+0x22c>
   373e4:	str	r1, [r5, #36]	; 0x24
   373e8:	mov	r0, #13
   373ec:	ldr	r2, [r5, #4]
   373f0:	sub	r1, r1, r2
   373f4:	b	37600 <flatcc_json_parser_unmatched_symbol@@Base+0x244>
   373f8:	ldr	r0, [r5, #12]
   373fc:	cmp	r0, #0
   37400:	beq	37498 <flatcc_json_parser_unmatched_symbol@@Base+0xdc>
   37404:	cmp	r1, r4
   37408:	beq	375b0 <flatcc_json_parser_unmatched_symbol@@Base+0x1f4>
   3740c:	ldrb	r2, [r1]
   37410:	cmp	r2, #33	; 0x21
   37414:	bcc	375b0 <flatcc_json_parser_unmatched_symbol@@Base+0x1f4>
   37418:	add	r1, r1, #1
   3741c:	uxtb	r0, r2
   37420:	cmp	r0, #46	; 0x2e
   37424:	cmpne	r0, #95	; 0x5f
   37428:	bne	37444 <flatcc_json_parser_unmatched_symbol@@Base+0x88>
   3742c:	cmp	r4, r1
   37430:	beq	375a4 <flatcc_json_parser_unmatched_symbol@@Base+0x1e8>
   37434:	ldrb	r2, [r1], #1
   37438:	cmp	r2, #33	; 0x21
   3743c:	bcs	3741c <flatcc_json_parser_unmatched_symbol@@Base+0x60>
   37440:	b	37474 <flatcc_json_parser_unmatched_symbol@@Base+0xb8>
   37444:	sxtb	r3, r2
   37448:	cmp	r3, #0
   3744c:	bmi	3742c <flatcc_json_parser_unmatched_symbol@@Base+0x70>
   37450:	sub	r3, r2, #48	; 0x30
   37454:	uxtb	r3, r3
   37458:	cmp	r3, #9
   3745c:	bls	3742c <flatcc_json_parser_unmatched_symbol@@Base+0x70>
   37460:	orr	r2, r2, #32
   37464:	sub	r2, r2, #97	; 0x61
   37468:	uxtb	r2, r2
   3746c:	cmp	r2, #26
   37470:	bcc	3742c <flatcc_json_parser_unmatched_symbol@@Base+0x70>
   37474:	sub	r1, r1, #1
   37478:	cmp	r0, #46	; 0x2e
   3747c:	bne	375b0 <flatcc_json_parser_unmatched_symbol@@Base+0x1f4>
   37480:	ldr	r0, [r5, #24]
   37484:	mov	r2, r4
   37488:	cmp	r0, #0
   3748c:	bne	374f4 <flatcc_json_parser_unmatched_symbol@@Base+0x138>
   37490:	mov	r0, #5
   37494:	b	37564 <flatcc_json_parser_unmatched_symbol@@Base+0x1a8>
   37498:	cmp	r1, r4
   3749c:	bne	374b8 <flatcc_json_parser_unmatched_symbol@@Base+0xfc>
   374a0:	b	374e4 <flatcc_json_parser_unmatched_symbol@@Base+0x128>
   374a4:	cmp	r0, #34	; 0x22
   374a8:	beq	37590 <flatcc_json_parser_unmatched_symbol@@Base+0x1d4>
   374ac:	add	r1, r1, #1
   374b0:	cmp	r1, r4
   374b4:	beq	374e0 <flatcc_json_parser_unmatched_symbol@@Base+0x124>
   374b8:	ldrb	r0, [r1]
   374bc:	cmp	r0, #92	; 0x5c
   374c0:	bne	374a4 <flatcc_json_parser_unmatched_symbol@@Base+0xe8>
   374c4:	sub	r0, r4, r1
   374c8:	cmp	r0, #2
   374cc:	blt	374e4 <flatcc_json_parser_unmatched_symbol@@Base+0x128>
   374d0:	add	r1, r1, #1
   374d4:	add	r1, r1, #1
   374d8:	cmp	r1, r4
   374dc:	bne	374b8 <flatcc_json_parser_unmatched_symbol@@Base+0xfc>
   374e0:	mov	r1, r4
   374e4:	ldr	r0, [r5, #24]
   374e8:	mov	r2, r4
   374ec:	cmp	r0, #0
   374f0:	beq	37560 <flatcc_json_parser_unmatched_symbol@@Base+0x1a4>
   374f4:	sub	r0, r4, r2
   374f8:	cmp	r0, #2
   374fc:	blt	375c0 <flatcc_json_parser_unmatched_symbol@@Base+0x204>
   37500:	ldrb	r0, [r2]
   37504:	cmp	r0, #32
   37508:	bls	37548 <flatcc_json_parser_unmatched_symbol@@Base+0x18c>
   3750c:	mov	r3, r2
   37510:	cmp	r3, r4
   37514:	beq	375dc <flatcc_json_parser_unmatched_symbol@@Base+0x220>
   37518:	ldrb	r0, [r3]
   3751c:	cmp	r0, #58	; 0x3a
   37520:	bne	375dc <flatcc_json_parser_unmatched_symbol@@Base+0x220>
   37524:	add	r1, r3, #1
   37528:	sub	r0, r4, r1
   3752c:	cmp	r0, #2
   37530:	blt	37624 <flatcc_json_parser_unmatched_symbol@@Base+0x268>
   37534:	ldrb	r0, [r1]
   37538:	cmp	r0, #32
   3753c:	bls	37614 <flatcc_json_parser_unmatched_symbol@@Base+0x258>
   37540:	mov	r3, r1
   37544:	b	37634 <flatcc_json_parser_unmatched_symbol@@Base+0x278>
   37548:	bne	375c0 <flatcc_json_parser_unmatched_symbol@@Base+0x204>
   3754c:	mov	r3, r2
   37550:	ldrb	r0, [r3, #1]!
   37554:	cmp	r0, #32
   37558:	bls	375c0 <flatcc_json_parser_unmatched_symbol@@Base+0x204>
   3755c:	b	375d4 <flatcc_json_parser_unmatched_symbol@@Base+0x218>
   37560:	mov	r0, #20
   37564:	str	r1, [r5, #36]	; 0x24
   37568:	ldr	r2, [r5, #4]
   3756c:	sub	r1, r1, r2
   37570:	mov	r2, r4
   37574:	add	r1, r1, #1
   37578:	str	r1, [r5, #20]
   3757c:	str	r0, [r5, #24]
   37580:	sub	r0, r4, r2
   37584:	cmp	r0, #2
   37588:	bge	37500 <flatcc_json_parser_unmatched_symbol@@Base+0x144>
   3758c:	b	375c0 <flatcc_json_parser_unmatched_symbol@@Base+0x204>
   37590:	add	r2, r1, #1
   37594:	sub	r0, r4, r2
   37598:	cmp	r0, #2
   3759c:	bge	37500 <flatcc_json_parser_unmatched_symbol@@Base+0x144>
   375a0:	b	375c0 <flatcc_json_parser_unmatched_symbol@@Base+0x204>
   375a4:	mov	r1, r4
   375a8:	cmp	r0, #46	; 0x2e
   375ac:	beq	37480 <flatcc_json_parser_unmatched_symbol@@Base+0xc4>
   375b0:	mov	r2, r1
   375b4:	sub	r0, r4, r2
   375b8:	cmp	r0, #2
   375bc:	bge	37500 <flatcc_json_parser_unmatched_symbol@@Base+0x144>
   375c0:	mov	r1, r2
   375c4:	mov	r0, r5
   375c8:	mov	r2, r4
   375cc:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   375d0:	mov	r3, r0
   375d4:	cmp	r3, r4
   375d8:	bne	37518 <flatcc_json_parser_unmatched_symbol@@Base+0x15c>
   375dc:	ldr	r0, [r5, #24]
   375e0:	cmp	r0, #0
   375e4:	beq	375f0 <flatcc_json_parser_unmatched_symbol@@Base+0x234>
   375e8:	mov	r0, r4
   375ec:	pop	{r4, r5, fp, pc}
   375f0:	str	r3, [r5, #36]	; 0x24
   375f4:	mov	r0, #4
   375f8:	ldr	r1, [r5, #4]
   375fc:	sub	r1, r3, r1
   37600:	add	r1, r1, #1
   37604:	str	r1, [r5, #20]
   37608:	str	r0, [r5, #24]
   3760c:	mov	r0, r4
   37610:	pop	{r4, r5, fp, pc}
   37614:	bne	37624 <flatcc_json_parser_unmatched_symbol@@Base+0x268>
   37618:	ldrb	r0, [r3, #2]!
   3761c:	cmp	r0, #32
   37620:	bhi	37634 <flatcc_json_parser_unmatched_symbol@@Base+0x278>
   37624:	mov	r0, r5
   37628:	mov	r2, r4
   3762c:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   37630:	mov	r3, r0
   37634:	mov	r0, r5
   37638:	mov	r1, r3
   3763c:	mov	r2, r4
   37640:	pop	{r4, r5, fp, lr}
   37644:	b	37648 <flatcc_json_parser_generic_json@@Base>

00037648 <flatcc_json_parser_generic_json@@Base>:
   37648:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3764c:	add	fp, sp, #28
   37650:	sub	sp, sp, #540	; 0x21c
   37654:	mov	r7, r1
   37658:	cmp	r1, r2
   3765c:	beq	38334 <flatcc_json_parser_generic_json@@Base+0xcec>
   37660:	mov	r5, r0
   37664:	add	r0, r2, #1
   37668:	add	r1, sp, #24
   3766c:	mov	r6, r2
   37670:	mov	r8, #0
   37674:	str	r0, [sp, #4]
   37678:	add	r0, r5, #36	; 0x24
   3767c:	sub	sl, r1, #1
   37680:	add	r9, r5, #24
   37684:	str	r0, [sp, #16]
   37688:	add	r0, r5, #20
   3768c:	str	r0, [sp, #12]
   37690:	add	r0, r5, #4
   37694:	str	r0, [sp, #8]
   37698:	mov	r0, r1
   3769c:	cmp	r8, #0
   376a0:	beq	37974 <flatcc_json_parser_generic_json@@Base+0x32c>
   376a4:	ldrb	r0, [r0, #-1]
   376a8:	cmp	r0, #125	; 0x7d
   376ac:	bne	37974 <flatcc_json_parser_generic_json@@Base+0x32c>
   376b0:	ldrb	r0, [r7]
   376b4:	cmp	r0, #46	; 0x2e
   376b8:	beq	37734 <flatcc_json_parser_generic_json@@Base+0xec>
   376bc:	cmp	r0, #34	; 0x22
   376c0:	bne	377c8 <flatcc_json_parser_generic_json@@Base+0x180>
   376c4:	mov	r0, #0
   376c8:	mov	r2, r6
   376cc:	str	r0, [r5, #12]
   376d0:	add	r0, r7, #1
   376d4:	cmp	r0, r6
   376d8:	bne	376f4 <flatcc_json_parser_generic_json@@Base+0xac>
   376dc:	b	3777c <flatcc_json_parser_generic_json@@Base+0x134>
   376e0:	cmp	r1, #34	; 0x22
   376e4:	beq	3787c <flatcc_json_parser_generic_json@@Base+0x234>
   376e8:	add	r0, r0, #1
   376ec:	cmp	r0, r6
   376f0:	beq	3771c <flatcc_json_parser_generic_json@@Base+0xd4>
   376f4:	ldrb	r1, [r0]
   376f8:	cmp	r1, #92	; 0x5c
   376fc:	bne	376e0 <flatcc_json_parser_generic_json@@Base+0x98>
   37700:	sub	r1, r6, r0
   37704:	cmp	r1, #2
   37708:	blt	378b0 <flatcc_json_parser_generic_json@@Base+0x268>
   3770c:	add	r0, r0, #1
   37710:	add	r0, r0, #1
   37714:	cmp	r0, r6
   37718:	bne	376f4 <flatcc_json_parser_generic_json@@Base+0xac>
   3771c:	mov	r2, r6
   37720:	ldr	r0, [r9]
   37724:	mov	r1, r6
   37728:	cmp	r0, #0
   3772c:	bne	378c4 <flatcc_json_parser_generic_json@@Base+0x27c>
   37730:	b	3778c <flatcc_json_parser_generic_json@@Base+0x144>
   37734:	ldr	r0, [r9]
   37738:	cmp	r0, #0
   3773c:	bne	37768 <flatcc_json_parser_generic_json@@Base+0x120>
   37740:	mov	r0, #5
   37744:	ldr	r1, [sp, #12]
   37748:	str	r0, [r9]
   3774c:	ldr	r0, [sp, #8]
   37750:	ldr	r0, [r0]
   37754:	sub	r0, r7, r0
   37758:	add	r0, r0, #1
   3775c:	str	r0, [r1]
   37760:	ldr	r0, [sp, #16]
   37764:	str	r7, [r0]
   37768:	ldr	r0, [r5, #12]
   3776c:	mov	r2, r6
   37770:	mov	r1, r6
   37774:	cmp	r0, #0
   37778:	bne	378c4 <flatcc_json_parser_generic_json@@Base+0x27c>
   3777c:	ldr	r0, [r9]
   37780:	mov	r1, r6
   37784:	cmp	r0, #0
   37788:	bne	378c4 <flatcc_json_parser_generic_json@@Base+0x27c>
   3778c:	mov	r0, #20
   37790:	str	r0, [r9]
   37794:	ldr	r0, [sp, #8]
   37798:	ldr	r1, [sp, #12]
   3779c:	ldr	r0, [r0]
   377a0:	sub	r0, r2, r0
   377a4:	add	r0, r0, #1
   377a8:	str	r0, [r1]
   377ac:	ldr	r0, [sp, #16]
   377b0:	mov	r1, r6
   377b4:	str	r2, [r0]
   377b8:	sub	r0, r6, r1
   377bc:	cmp	r0, #2
   377c0:	bge	378d0 <flatcc_json_parser_generic_json@@Base+0x288>
   377c4:	b	37938 <flatcc_json_parser_generic_json@@Base+0x2f0>
   377c8:	mov	r0, #1
   377cc:	cmp	r7, r6
   377d0:	mov	r1, r6
   377d4:	str	r0, [r5, #12]
   377d8:	beq	378c4 <flatcc_json_parser_generic_json@@Base+0x27c>
   377dc:	ldrb	r2, [r7]
   377e0:	cmp	r2, #33	; 0x21
   377e4:	bcc	37868 <flatcc_json_parser_generic_json@@Base+0x220>
   377e8:	add	r1, r7, #1
   377ec:	uxtb	r0, r2
   377f0:	cmp	r0, #46	; 0x2e
   377f4:	cmpne	r0, #95	; 0x5f
   377f8:	bne	37814 <flatcc_json_parser_generic_json@@Base+0x1cc>
   377fc:	cmp	r6, r1
   37800:	beq	37890 <flatcc_json_parser_generic_json@@Base+0x248>
   37804:	ldrb	r2, [r1], #1
   37808:	cmp	r2, #33	; 0x21
   3780c:	bcs	377ec <flatcc_json_parser_generic_json@@Base+0x1a4>
   37810:	b	37844 <flatcc_json_parser_generic_json@@Base+0x1fc>
   37814:	sxtb	r3, r2
   37818:	cmp	r3, #0
   3781c:	bmi	377fc <flatcc_json_parser_generic_json@@Base+0x1b4>
   37820:	sub	r3, r2, #48	; 0x30
   37824:	uxtb	r3, r3
   37828:	cmp	r3, #9
   3782c:	bls	377fc <flatcc_json_parser_generic_json@@Base+0x1b4>
   37830:	orr	r2, r2, #32
   37834:	sub	r2, r2, #97	; 0x61
   37838:	uxtb	r2, r2
   3783c:	cmp	r2, #26
   37840:	bcc	377fc <flatcc_json_parser_generic_json@@Base+0x1b4>
   37844:	sub	r2, r1, #1
   37848:	cmp	r0, #46	; 0x2e
   3784c:	bne	3789c <flatcc_json_parser_generic_json@@Base+0x254>
   37850:	ldr	r0, [r9]
   37854:	mov	r1, r6
   37858:	cmp	r0, #0
   3785c:	bne	378c4 <flatcc_json_parser_generic_json@@Base+0x27c>
   37860:	mov	r0, #5
   37864:	b	37790 <flatcc_json_parser_generic_json@@Base+0x148>
   37868:	mov	r1, r7
   3786c:	sub	r0, r6, r1
   37870:	cmp	r0, #2
   37874:	bge	378d0 <flatcc_json_parser_generic_json@@Base+0x288>
   37878:	b	37938 <flatcc_json_parser_generic_json@@Base+0x2f0>
   3787c:	add	r1, r0, #1
   37880:	sub	r0, r6, r1
   37884:	cmp	r0, #2
   37888:	bge	378d0 <flatcc_json_parser_generic_json@@Base+0x288>
   3788c:	b	37938 <flatcc_json_parser_generic_json@@Base+0x2f0>
   37890:	mov	r2, r6
   37894:	cmp	r0, #46	; 0x2e
   37898:	beq	37850 <flatcc_json_parser_generic_json@@Base+0x208>
   3789c:	mov	r1, r2
   378a0:	sub	r0, r6, r1
   378a4:	cmp	r0, #2
   378a8:	bge	378d0 <flatcc_json_parser_generic_json@@Base+0x288>
   378ac:	b	37938 <flatcc_json_parser_generic_json@@Base+0x2f0>
   378b0:	mov	r2, r0
   378b4:	ldr	r0, [r9]
   378b8:	mov	r1, r6
   378bc:	cmp	r0, #0
   378c0:	beq	3778c <flatcc_json_parser_generic_json@@Base+0x144>
   378c4:	sub	r0, r6, r1
   378c8:	cmp	r0, #2
   378cc:	blt	37938 <flatcc_json_parser_generic_json@@Base+0x2f0>
   378d0:	ldrb	r0, [r1]
   378d4:	cmp	r0, #32
   378d8:	bls	37924 <flatcc_json_parser_generic_json@@Base+0x2dc>
   378dc:	mov	r7, r1
   378e0:	cmp	r7, r6
   378e4:	beq	383c0 <flatcc_json_parser_generic_json@@Base+0xd78>
   378e8:	ldrb	r0, [r7]
   378ec:	cmp	r0, #58	; 0x3a
   378f0:	bne	383d8 <flatcc_json_parser_generic_json@@Base+0xd90>
   378f4:	add	r1, r7, #1
   378f8:	sub	r0, r6, r1
   378fc:	cmp	r0, #2
   37900:	blt	37964 <flatcc_json_parser_generic_json@@Base+0x31c>
   37904:	ldrb	r2, [r1]
   37908:	cmp	r2, #32
   3790c:	bls	37954 <flatcc_json_parser_generic_json@@Base+0x30c>
   37910:	mov	r7, r1
   37914:	sub	r0, r2, #48	; 0x30
   37918:	cmp	r0, #10
   3791c:	bcc	37984 <flatcc_json_parser_generic_json@@Base+0x33c>
   37920:	b	37a1c <flatcc_json_parser_generic_json@@Base+0x3d4>
   37924:	bne	37938 <flatcc_json_parser_generic_json@@Base+0x2f0>
   37928:	mov	r7, r1
   3792c:	ldrb	r0, [r7, #1]!
   37930:	cmp	r0, #32
   37934:	bhi	37948 <flatcc_json_parser_generic_json@@Base+0x300>
   37938:	mov	r0, r5
   3793c:	mov	r2, r6
   37940:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   37944:	mov	r7, r0
   37948:	cmp	r7, r6
   3794c:	bne	378e8 <flatcc_json_parser_generic_json@@Base+0x2a0>
   37950:	b	383c0 <flatcc_json_parser_generic_json@@Base+0xd78>
   37954:	bne	37964 <flatcc_json_parser_generic_json@@Base+0x31c>
   37958:	ldrb	r2, [r7, #2]!
   3795c:	cmp	r2, #32
   37960:	bhi	37978 <flatcc_json_parser_generic_json@@Base+0x330>
   37964:	mov	r0, r5
   37968:	mov	r2, r6
   3796c:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   37970:	mov	r7, r0
   37974:	ldrb	r2, [r7]
   37978:	sub	r0, r2, #48	; 0x30
   3797c:	cmp	r0, #10
   37980:	bcs	37a1c <flatcc_json_parser_generic_json@@Base+0x3d4>
   37984:	cmp	r7, r6
   37988:	beq	38000 <flatcc_json_parser_generic_json@@Base+0x9b8>
   3798c:	cmp	r2, #45	; 0x2d
   37990:	bne	379a4 <flatcc_json_parser_generic_json@@Base+0x35c>
   37994:	add	r7, r7, #1
   37998:	cmp	r7, r6
   3799c:	beq	37ec4 <flatcc_json_parser_generic_json@@Base+0x87c>
   379a0:	ldrb	r2, [r7]
   379a4:	cmp	r2, #48	; 0x30
   379a8:	bne	37a38 <flatcc_json_parser_generic_json@@Base+0x3f0>
   379ac:	add	r4, r7, #1
   379b0:	cmp	r4, r6
   379b4:	mov	r1, r6
   379b8:	beq	37ff4 <flatcc_json_parser_generic_json@@Base+0x9ac>
   379bc:	ldrb	r0, [r4]
   379c0:	cmp	r0, #46	; 0x2e
   379c4:	bne	37d64 <flatcc_json_parser_generic_json@@Base+0x71c>
   379c8:	mov	r0, r4
   379cc:	ldrb	r1, [r0, #1]!
   379d0:	sub	r1, r1, #48	; 0x30
   379d4:	uxtb	r1, r1
   379d8:	cmp	r1, #10
   379dc:	bcc	37d30 <flatcc_json_parser_generic_json@@Base+0x6e8>
   379e0:	ldr	r1, [r9]
   379e4:	cmp	r1, #0
   379e8:	bne	38000 <flatcc_json_parser_generic_json@@Base+0x9b8>
   379ec:	mov	r1, #6
   379f0:	ldr	r2, [sp, #12]
   379f4:	mov	r4, r6
   379f8:	str	r1, [r9]
   379fc:	ldr	r1, [sp, #8]
   37a00:	ldr	r1, [r1]
   37a04:	sub	r1, r0, r1
   37a08:	add	r1, r1, #1
   37a0c:	str	r1, [r2]
   37a10:	ldr	r1, [sp, #16]
   37a14:	str	r0, [r1]
   37a18:	b	38004 <flatcc_json_parser_generic_json@@Base+0x9bc>
   37a1c:	cmp	r2, #90	; 0x5a
   37a20:	bgt	37a80 <flatcc_json_parser_generic_json@@Base+0x438>
   37a24:	cmp	r2, #34	; 0x22
   37a28:	beq	37b04 <flatcc_json_parser_generic_json@@Base+0x4bc>
   37a2c:	cmp	r2, #45	; 0x2d
   37a30:	beq	37984 <flatcc_json_parser_generic_json@@Base+0x33c>
   37a34:	b	37c68 <flatcc_json_parser_generic_json@@Base+0x620>
   37a38:	sub	r0, r2, #49	; 0x31
   37a3c:	uxtb	r0, r0
   37a40:	cmp	r0, #8
   37a44:	bls	37ad0 <flatcc_json_parser_generic_json@@Base+0x488>
   37a48:	ldr	r0, [r9]
   37a4c:	cmp	r0, #0
   37a50:	bne	38000 <flatcc_json_parser_generic_json@@Base+0x9b8>
   37a54:	mov	r0, #6
   37a58:	ldr	r1, [sp, #12]
   37a5c:	str	r0, [r9]
   37a60:	ldr	r0, [sp, #8]
   37a64:	ldr	r0, [r0]
   37a68:	sub	r0, r7, r0
   37a6c:	add	r0, r0, #1
   37a70:	str	r0, [r1]
   37a74:	ldr	r0, [sp, #16]
   37a78:	str	r7, [r0]
   37a7c:	b	38000 <flatcc_json_parser_generic_json@@Base+0x9b8>
   37a80:	cmp	r2, #91	; 0x5b
   37a84:	beq	37c28 <flatcc_json_parser_generic_json@@Base+0x5e0>
   37a88:	cmp	r2, #123	; 0x7b
   37a8c:	bne	37c68 <flatcc_json_parser_generic_json@@Base+0x620>
   37a90:	cmp	r8, #512	; 0x200
   37a94:	beq	383ec <flatcc_json_parser_generic_json@@Base+0xda4>
   37a98:	add	r0, sp, #24
   37a9c:	mov	r1, #125	; 0x7d
   37aa0:	strb	r1, [r0, r8]
   37aa4:	add	r1, r7, #1
   37aa8:	sub	r0, r6, r1
   37aac:	cmp	r0, #2
   37ab0:	blt	37f38 <flatcc_json_parser_generic_json@@Base+0x8f0>
   37ab4:	ldrb	r0, [r1]
   37ab8:	cmp	r0, #32
   37abc:	bls	37f28 <flatcc_json_parser_generic_json@@Base+0x8e0>
   37ac0:	mov	r7, r1
   37ac4:	cmp	r7, r6
   37ac8:	bne	37f50 <flatcc_json_parser_generic_json@@Base+0x908>
   37acc:	b	383b0 <flatcc_json_parser_generic_json@@Base+0xd68>
   37ad0:	add	r0, r7, #1
   37ad4:	cmp	r6, r0
   37ad8:	beq	37ed8 <flatcc_json_parser_generic_json@@Base+0x890>
   37adc:	ldrb	r1, [r0], #1
   37ae0:	sub	r1, r1, #48	; 0x30
   37ae4:	uxtb	r1, r1
   37ae8:	cmp	r1, #10
   37aec:	bcc	37ad4 <flatcc_json_parser_generic_json@@Base+0x48c>
   37af0:	sub	r4, r0, #1
   37af4:	cmp	r4, r6
   37af8:	mov	r1, r6
   37afc:	bne	379bc <flatcc_json_parser_generic_json@@Base+0x374>
   37b00:	b	37ff4 <flatcc_json_parser_generic_json@@Base+0x9ac>
   37b04:	cmp	r7, r6
   37b08:	beq	37eec <flatcc_json_parser_generic_json@@Base+0x8a4>
   37b0c:	add	r0, r7, #1
   37b10:	mov	r1, r6
   37b14:	add	r4, sp, #20
   37b18:	mov	r7, #17
   37b1c:	cmp	r0, r6
   37b20:	bne	37b50 <flatcc_json_parser_generic_json@@Base+0x508>
   37b24:	b	37fcc <flatcc_json_parser_generic_json@@Base+0x984>
   37b28:	ldr	r1, [r9]
   37b2c:	cmp	r1, #0
   37b30:	mov	r1, r6
   37b34:	beq	37bbc <flatcc_json_parser_generic_json@@Base+0x574>
   37b38:	mov	r0, r5
   37b3c:	mov	r2, r6
   37b40:	mov	r3, r4
   37b44:	bl	36c84 <flatcc_json_parser_string_escape@@Base>
   37b48:	cmp	r0, r6
   37b4c:	beq	37fc8 <flatcc_json_parser_generic_json@@Base+0x980>
   37b50:	ldrb	r1, [r0]
   37b54:	cmp	r1, #34	; 0x22
   37b58:	beq	37fa8 <flatcc_json_parser_generic_json@@Base+0x960>
   37b5c:	cmp	r1, #32
   37b60:	bcc	37b28 <flatcc_json_parser_generic_json@@Base+0x4e0>
   37b64:	rsb	r0, r0, #0
   37b68:	uxtb	r2, r1
   37b6c:	cmp	r2, #34	; 0x22
   37b70:	cmpne	r2, #92	; 0x5c
   37b74:	beq	37ba0 <flatcc_json_parser_generic_json@@Base+0x558>
   37b78:	add	r1, r6, r0
   37b7c:	cmp	r1, #1
   37b80:	beq	37be8 <flatcc_json_parser_generic_json@@Base+0x5a0>
   37b84:	rsb	r1, r0, #0
   37b88:	sub	r0, r0, #1
   37b8c:	ldrb	r1, [r1, #1]
   37b90:	cmp	r1, #32
   37b94:	bcs	37b68 <flatcc_json_parser_generic_json@@Base+0x520>
   37b98:	rsb	r0, r0, #0
   37b9c:	b	37b28 <flatcc_json_parser_generic_json@@Base+0x4e0>
   37ba0:	adds	r1, r6, r0
   37ba4:	mov	r1, r6
   37ba8:	beq	37b38 <flatcc_json_parser_generic_json@@Base+0x4f0>
   37bac:	rsb	r1, r0, #0
   37bb0:	cmp	r2, #34	; 0x22
   37bb4:	bne	37b38 <flatcc_json_parser_generic_json@@Base+0x4f0>
   37bb8:	b	37fac <flatcc_json_parser_generic_json@@Base+0x964>
   37bbc:	ldr	r1, [sp, #8]
   37bc0:	str	r7, [r9]
   37bc4:	ldr	r2, [sp, #12]
   37bc8:	ldr	r1, [r1]
   37bcc:	sub	r1, r0, r1
   37bd0:	add	r1, r1, #1
   37bd4:	str	r1, [r2]
   37bd8:	ldr	r1, [sp, #16]
   37bdc:	str	r0, [r1]
   37be0:	mov	r1, r6
   37be4:	b	37b38 <flatcc_json_parser_generic_json@@Base+0x4f0>
   37be8:	ldr	r0, [r9]
   37bec:	mov	r1, r6
   37bf0:	cmp	r0, #0
   37bf4:	bne	37b38 <flatcc_json_parser_generic_json@@Base+0x4f0>
   37bf8:	mov	r0, #20
   37bfc:	ldr	r1, [sp, #4]
   37c00:	str	r0, [r9]
   37c04:	ldr	r0, [sp, #8]
   37c08:	ldr	r0, [r0]
   37c0c:	sub	r0, r1, r0
   37c10:	ldr	r1, [sp, #12]
   37c14:	str	r0, [r1]
   37c18:	ldr	r0, [sp, #16]
   37c1c:	mov	r1, r6
   37c20:	str	r6, [r0]
   37c24:	b	37b38 <flatcc_json_parser_generic_json@@Base+0x4f0>
   37c28:	cmp	r8, #512	; 0x200
   37c2c:	beq	383ec <flatcc_json_parser_generic_json@@Base+0xda4>
   37c30:	add	r0, sp, #24
   37c34:	mov	r1, #93	; 0x5d
   37c38:	strb	r1, [r0, r8]
   37c3c:	add	r1, r7, #1
   37c40:	sub	r0, r6, r1
   37c44:	cmp	r0, #2
   37c48:	blt	37f78 <flatcc_json_parser_generic_json@@Base+0x930>
   37c4c:	ldrb	r0, [r1]
   37c50:	cmp	r0, #32
   37c54:	bls	37f68 <flatcc_json_parser_generic_json@@Base+0x920>
   37c58:	mov	r7, r1
   37c5c:	cmp	r7, r6
   37c60:	bne	37f90 <flatcc_json_parser_generic_json@@Base+0x948>
   37c64:	b	383b0 <flatcc_json_parser_generic_json@@Base+0xd68>
   37c68:	cmp	r7, r6
   37c6c:	mov	r4, r6
   37c70:	beq	37d24 <flatcc_json_parser_generic_json@@Base+0x6dc>
   37c74:	mov	r4, r7
   37c78:	sxtb	r0, r2
   37c7c:	cmp	r0, #0
   37c80:	bpl	37c9c <flatcc_json_parser_generic_json@@Base+0x654>
   37c84:	b	37d14 <flatcc_json_parser_generic_json@@Base+0x6cc>
   37c88:	ldrb	r2, [r0]
   37c8c:	mov	r4, r0
   37c90:	sxtb	r0, r2
   37c94:	cmp	r0, #0
   37c98:	bmi	37d14 <flatcc_json_parser_generic_json@@Base+0x6cc>
   37c9c:	uxtb	r0, r2
   37ca0:	cmp	r0, #95	; 0x5f
   37ca4:	cmpne	r0, #46	; 0x2e
   37ca8:	beq	37d14 <flatcc_json_parser_generic_json@@Base+0x6cc>
   37cac:	sub	r1, r2, #48	; 0x30
   37cb0:	uxtb	r1, r1
   37cb4:	cmp	r1, #9
   37cb8:	bls	37d14 <flatcc_json_parser_generic_json@@Base+0x6cc>
   37cbc:	orr	r1, r2, #32
   37cc0:	sub	r1, r1, #97	; 0x61
   37cc4:	uxtb	r1, r1
   37cc8:	cmp	r1, #25
   37ccc:	bls	37d14 <flatcc_json_parser_generic_json@@Base+0x6cc>
   37cd0:	sub	r1, r6, r4
   37cd4:	cmp	r1, #2
   37cd8:	blt	37cf8 <flatcc_json_parser_generic_json@@Base+0x6b0>
   37cdc:	cmp	r0, #32
   37ce0:	bhi	37d24 <flatcc_json_parser_generic_json@@Base+0x6dc>
   37ce4:	bne	37cf8 <flatcc_json_parser_generic_json@@Base+0x6b0>
   37ce8:	mov	r0, r4
   37cec:	ldrb	r1, [r0, #1]!
   37cf0:	cmp	r1, #32
   37cf4:	bhi	37d18 <flatcc_json_parser_generic_json@@Base+0x6d0>
   37cf8:	mov	r0, r5
   37cfc:	mov	r1, r4
   37d00:	mov	r2, r6
   37d04:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   37d08:	cmp	r0, r4
   37d0c:	bne	37d18 <flatcc_json_parser_generic_json@@Base+0x6d0>
   37d10:	b	37d24 <flatcc_json_parser_generic_json@@Base+0x6dc>
   37d14:	add	r0, r4, #1
   37d18:	cmp	r0, r6
   37d1c:	bne	37c88 <flatcc_json_parser_generic_json@@Base+0x640>
   37d20:	mov	r4, r6
   37d24:	cmp	r7, r4
   37d28:	bne	38004 <flatcc_json_parser_generic_json@@Base+0x9bc>
   37d2c:	b	38400 <flatcc_json_parser_generic_json@@Base+0xdb8>
   37d30:	add	r4, r4, #2
   37d34:	mov	r1, r6
   37d38:	cmp	r4, r6
   37d3c:	beq	37ff4 <flatcc_json_parser_generic_json@@Base+0x9ac>
   37d40:	ldrb	r0, [r4]
   37d44:	sub	r1, r0, #48	; 0x30
   37d48:	uxtb	r1, r1
   37d4c:	cmp	r1, #9
   37d50:	bhi	37d64 <flatcc_json_parser_generic_json@@Base+0x71c>
   37d54:	add	r4, r4, #1
   37d58:	cmp	r6, r4
   37d5c:	bne	37d40 <flatcc_json_parser_generic_json@@Base+0x6f8>
   37d60:	b	37ed8 <flatcc_json_parser_generic_json@@Base+0x890>
   37d64:	cmp	r4, r6
   37d68:	mov	r1, r6
   37d6c:	beq	37ff4 <flatcc_json_parser_generic_json@@Base+0x9ac>
   37d70:	orr	r1, r0, #32
   37d74:	cmp	r1, #101	; 0x65
   37d78:	bne	37dd8 <flatcc_json_parser_generic_json@@Base+0x790>
   37d7c:	add	r0, r4, #1
   37d80:	cmp	r0, r6
   37d84:	beq	37ec4 <flatcc_json_parser_generic_json@@Base+0x87c>
   37d88:	ldrb	r1, [r0]
   37d8c:	cmp	r1, #45	; 0x2d
   37d90:	cmpne	r1, #43	; 0x2b
   37d94:	addeq	r0, r4, #2
   37d98:	cmp	r0, r6
   37d9c:	beq	379e0 <flatcc_json_parser_generic_json@@Base+0x398>
   37da0:	ldrb	r1, [r0]
   37da4:	sub	r1, r1, #48	; 0x30
   37da8:	uxtb	r1, r1
   37dac:	cmp	r1, #9
   37db0:	bhi	379e0 <flatcc_json_parser_generic_json@@Base+0x398>
   37db4:	add	r1, r0, #1
   37db8:	cmp	r6, r1
   37dbc:	beq	37ed8 <flatcc_json_parser_generic_json@@Base+0x890>
   37dc0:	ldrb	r0, [r1], #1
   37dc4:	sub	r2, r0, #48	; 0x30
   37dc8:	uxtb	r2, r2
   37dcc:	cmp	r2, #10
   37dd0:	bcc	37db8 <flatcc_json_parser_generic_json@@Base+0x770>
   37dd4:	sub	r4, r1, #1
   37dd8:	cmp	r4, r6
   37ddc:	mov	r1, r6
   37de0:	beq	37ff4 <flatcc_json_parser_generic_json@@Base+0x9ac>
   37de4:	sub	r2, r0, #9
   37de8:	cmp	r2, #49	; 0x31
   37dec:	bhi	37fe0 <flatcc_json_parser_generic_json@@Base+0x998>
   37df0:	add	r0, pc, #4
   37df4:	mov	r1, r4
   37df8:	ldr	pc, [r0, r2, lsl #2]
   37dfc:	andeq	r8, r3, r4
   37e00:	andeq	r8, r3, r4
   37e04:	andeq	r8, r3, r4
   37e08:	strdeq	r7, [r3], -r4
   37e0c:	andeq	r8, r3, r4
   37e10:	strdeq	r7, [r3], -r4
   37e14:	strdeq	r7, [r3], -r4
   37e18:	strdeq	r7, [r3], -r4
   37e1c:	strdeq	r7, [r3], -r4
   37e20:	strdeq	r7, [r3], -r4
   37e24:	strdeq	r7, [r3], -r4
   37e28:	strdeq	r7, [r3], -r4
   37e2c:	strdeq	r7, [r3], -r4
   37e30:	strdeq	r7, [r3], -r4
   37e34:	strdeq	r7, [r3], -r4
   37e38:	strdeq	r7, [r3], -r4
   37e3c:	strdeq	r7, [r3], -r4
   37e40:	strdeq	r7, [r3], -r4
   37e44:	strdeq	r7, [r3], -r4
   37e48:	strdeq	r7, [r3], -r4
   37e4c:	strdeq	r7, [r3], -r4
   37e50:	strdeq	r7, [r3], -r4
   37e54:	strdeq	r7, [r3], -r4
   37e58:	andeq	r8, r3, r4
   37e5c:	strdeq	r7, [r3], -r4
   37e60:	strdeq	r7, [r3], -r4
   37e64:	strdeq	r7, [r3], -r4
   37e68:	strdeq	r7, [r3], -r4
   37e6c:	strdeq	r7, [r3], -r4
   37e70:	strdeq	r7, [r3], -r4
   37e74:	strdeq	r7, [r3], -r4
   37e78:	strdeq	r7, [r3], -r4
   37e7c:	strdeq	r7, [r3], -r4
   37e80:	strdeq	r7, [r3], -r4
   37e84:	strdeq	r7, [r3], -r4
   37e88:	andeq	r8, r3, r4
   37e8c:	strdeq	r7, [r3], -r4
   37e90:	strdeq	r7, [r3], -r4
   37e94:	strdeq	r7, [r3], -r4
   37e98:	strdeq	r7, [r3], -r4
   37e9c:	strdeq	r7, [r3], -r4
   37ea0:	strdeq	r7, [r3], -r4
   37ea4:	strdeq	r7, [r3], -r4
   37ea8:	strdeq	r7, [r3], -r4
   37eac:	strdeq	r7, [r3], -r4
   37eb0:	strdeq	r7, [r3], -r4
   37eb4:	strdeq	r7, [r3], -r4
   37eb8:	strdeq	r7, [r3], -r4
   37ebc:	strdeq	r7, [r3], -r4
   37ec0:	andeq	r8, r3, r4
   37ec4:	ldr	r0, [r9]
   37ec8:	cmp	r0, #0
   37ecc:	bne	38000 <flatcc_json_parser_generic_json@@Base+0x9b8>
   37ed0:	mov	r0, #6
   37ed4:	b	37efc <flatcc_json_parser_generic_json@@Base+0x8b4>
   37ed8:	mov	r1, r6
   37edc:	ldr	r0, [r9]
   37ee0:	cmp	r0, #0
   37ee4:	bne	38000 <flatcc_json_parser_generic_json@@Base+0x9b8>
   37ee8:	b	38304 <flatcc_json_parser_generic_json@@Base+0xcbc>
   37eec:	ldr	r0, [r9]
   37ef0:	cmp	r0, #0
   37ef4:	bne	38000 <flatcc_json_parser_generic_json@@Base+0x9b8>
   37ef8:	mov	r0, #16
   37efc:	str	r0, [r9]
   37f00:	ldr	r0, [sp, #8]
   37f04:	ldr	r1, [sp, #4]
   37f08:	mov	r4, r6
   37f0c:	ldr	r0, [r0]
   37f10:	sub	r0, r1, r0
   37f14:	ldr	r1, [sp, #12]
   37f18:	str	r0, [r1]
   37f1c:	ldr	r0, [sp, #16]
   37f20:	str	r6, [r0]
   37f24:	b	38004 <flatcc_json_parser_generic_json@@Base+0x9bc>
   37f28:	bne	37f38 <flatcc_json_parser_generic_json@@Base+0x8f0>
   37f2c:	ldrb	r0, [r7, #2]!
   37f30:	cmp	r0, #32
   37f34:	bhi	37f48 <flatcc_json_parser_generic_json@@Base+0x900>
   37f38:	mov	r0, r5
   37f3c:	mov	r2, r6
   37f40:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   37f44:	mov	r7, r0
   37f48:	cmp	r7, r6
   37f4c:	beq	383b0 <flatcc_json_parser_generic_json@@Base+0xd68>
   37f50:	ldrb	r0, [r7]
   37f54:	add	r8, r8, #1
   37f58:	cmp	r0, #125	; 0x7d
   37f5c:	mov	r4, r7
   37f60:	bne	382f0 <flatcc_json_parser_generic_json@@Base+0xca8>
   37f64:	b	38004 <flatcc_json_parser_generic_json@@Base+0x9bc>
   37f68:	bne	37f78 <flatcc_json_parser_generic_json@@Base+0x930>
   37f6c:	ldrb	r0, [r7, #2]!
   37f70:	cmp	r0, #32
   37f74:	bhi	37f88 <flatcc_json_parser_generic_json@@Base+0x940>
   37f78:	mov	r0, r5
   37f7c:	mov	r2, r6
   37f80:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   37f84:	mov	r7, r0
   37f88:	cmp	r7, r6
   37f8c:	beq	383b0 <flatcc_json_parser_generic_json@@Base+0xd68>
   37f90:	ldrb	r0, [r7]
   37f94:	add	r8, r8, #1
   37f98:	cmp	r0, #93	; 0x5d
   37f9c:	mov	r4, r7
   37fa0:	beq	38004 <flatcc_json_parser_generic_json@@Base+0x9bc>
   37fa4:	b	382f0 <flatcc_json_parser_generic_json@@Base+0xca8>
   37fa8:	mov	r1, r0
   37fac:	cmp	r1, r6
   37fb0:	beq	37fcc <flatcc_json_parser_generic_json@@Base+0x984>
   37fb4:	ldrb	r0, [r1]
   37fb8:	cmp	r0, #34	; 0x22
   37fbc:	bne	37fcc <flatcc_json_parser_generic_json@@Base+0x984>
   37fc0:	add	r4, r1, #1
   37fc4:	b	38004 <flatcc_json_parser_generic_json@@Base+0x9bc>
   37fc8:	mov	r1, r6
   37fcc:	ldr	r0, [r9]
   37fd0:	cmp	r0, #0
   37fd4:	bne	38000 <flatcc_json_parser_generic_json@@Base+0x9b8>
   37fd8:	mov	r0, #20
   37fdc:	b	38308 <flatcc_json_parser_generic_json@@Base+0xcc0>
   37fe0:	cmp	r0, #93	; 0x5d
   37fe4:	beq	38004 <flatcc_json_parser_generic_json@@Base+0x9bc>
   37fe8:	cmp	r0, #125	; 0x7d
   37fec:	mov	r1, r4
   37ff0:	beq	38004 <flatcc_json_parser_generic_json@@Base+0x9bc>
   37ff4:	ldr	r0, [r9]
   37ff8:	cmp	r0, #0
   37ffc:	beq	38304 <flatcc_json_parser_generic_json@@Base+0xcbc>
   38000:	mov	r4, r6
   38004:	subs	r1, r4, r6
   38008:	mov	r2, r8
   3800c:	movwne	r1, #1
   38010:	cmp	r8, #0
   38014:	movwne	r2, #1
   38018:	beq	38344 <flatcc_json_parser_generic_json@@Base+0xcfc>
   3801c:	cmp	r4, r6
   38020:	beq	38354 <flatcc_json_parser_generic_json@@Base+0xd0c>
   38024:	ldrb	r1, [sl, r8]
   38028:	sub	r0, r6, r4
   3802c:	cmp	r1, #93	; 0x5d
   38030:	bne	38084 <flatcc_json_parser_generic_json@@Base+0xa3c>
   38034:	cmp	r0, #2
   38038:	blt	38110 <flatcc_json_parser_generic_json@@Base+0xac8>
   3803c:	ldrb	r0, [r4]
   38040:	cmp	r0, #32
   38044:	bls	380fc <flatcc_json_parser_generic_json@@Base+0xab4>
   38048:	mov	r7, r4
   3804c:	cmp	r7, r6
   38050:	mov	r4, r6
   38054:	beq	38290 <flatcc_json_parser_generic_json@@Base+0xc48>
   38058:	ldrb	r0, [r7]
   3805c:	cmp	r0, #44	; 0x2c
   38060:	beq	3816c <flatcc_json_parser_generic_json@@Base+0xb24>
   38064:	cmp	r0, #93	; 0x5d
   38068:	beq	38248 <flatcc_json_parser_generic_json@@Base+0xc00>
   3806c:	ldr	r0, [r9]
   38070:	mov	r4, r6
   38074:	cmp	r0, #0
   38078:	bne	38290 <flatcc_json_parser_generic_json@@Base+0xc48>
   3807c:	mov	r0, #9
   38080:	b	380d0 <flatcc_json_parser_generic_json@@Base+0xa88>
   38084:	cmp	r0, #2
   38088:	blt	38148 <flatcc_json_parser_generic_json@@Base+0xb00>
   3808c:	ldrb	r0, [r4]
   38090:	cmp	r0, #32
   38094:	bls	38134 <flatcc_json_parser_generic_json@@Base+0xaec>
   38098:	mov	r7, r4
   3809c:	cmp	r7, r6
   380a0:	mov	r4, r6
   380a4:	beq	38290 <flatcc_json_parser_generic_json@@Base+0xc48>
   380a8:	ldrb	r0, [r7]
   380ac:	cmp	r0, #44	; 0x2c
   380b0:	beq	381ac <flatcc_json_parser_generic_json@@Base+0xb64>
   380b4:	cmp	r0, #125	; 0x7d
   380b8:	beq	38248 <flatcc_json_parser_generic_json@@Base+0xc00>
   380bc:	ldr	r0, [r9]
   380c0:	mov	r4, r6
   380c4:	cmp	r0, #0
   380c8:	bne	38290 <flatcc_json_parser_generic_json@@Base+0xc48>
   380cc:	mov	r0, #10
   380d0:	str	r0, [r9]
   380d4:	ldr	r0, [sp, #8]
   380d8:	ldr	r1, [sp, #12]
   380dc:	mov	r4, r6
   380e0:	ldr	r0, [r0]
   380e4:	sub	r0, r7, r0
   380e8:	add	r0, r0, #1
   380ec:	str	r0, [r1]
   380f0:	ldr	r0, [sp, #16]
   380f4:	str	r7, [r0]
   380f8:	b	38290 <flatcc_json_parser_generic_json@@Base+0xc48>
   380fc:	bne	38110 <flatcc_json_parser_generic_json@@Base+0xac8>
   38100:	mov	r7, r4
   38104:	ldrb	r0, [r7, #1]!
   38108:	cmp	r0, #32
   3810c:	bhi	38124 <flatcc_json_parser_generic_json@@Base+0xadc>
   38110:	mov	r0, r5
   38114:	mov	r1, r4
   38118:	mov	r2, r6
   3811c:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   38120:	mov	r7, r0
   38124:	cmp	r7, r6
   38128:	mov	r4, r6
   3812c:	bne	38058 <flatcc_json_parser_generic_json@@Base+0xa10>
   38130:	b	38290 <flatcc_json_parser_generic_json@@Base+0xc48>
   38134:	bne	38148 <flatcc_json_parser_generic_json@@Base+0xb00>
   38138:	mov	r7, r4
   3813c:	ldrb	r0, [r7, #1]!
   38140:	cmp	r0, #32
   38144:	bhi	3815c <flatcc_json_parser_generic_json@@Base+0xb14>
   38148:	mov	r0, r5
   3814c:	mov	r1, r4
   38150:	mov	r2, r6
   38154:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   38158:	mov	r7, r0
   3815c:	cmp	r7, r6
   38160:	mov	r4, r6
   38164:	bne	380a8 <flatcc_json_parser_generic_json@@Base+0xa60>
   38168:	b	38290 <flatcc_json_parser_generic_json@@Base+0xc48>
   3816c:	add	r1, r7, #1
   38170:	sub	r0, r6, r1
   38174:	cmp	r0, #2
   38178:	blt	38224 <flatcc_json_parser_generic_json@@Base+0xbdc>
   3817c:	ldrb	r0, [r1]
   38180:	cmp	r0, #32
   38184:	bls	38214 <flatcc_json_parser_generic_json@@Base+0xbcc>
   38188:	mov	r7, r1
   3818c:	cmp	r7, r6
   38190:	bne	3823c <flatcc_json_parser_generic_json@@Base+0xbf4>
   38194:	ldr	r0, [r9]
   38198:	mov	r4, r6
   3819c:	cmp	r0, #0
   381a0:	bne	38290 <flatcc_json_parser_generic_json@@Base+0xc48>
   381a4:	mov	r0, #9
   381a8:	b	381e8 <flatcc_json_parser_generic_json@@Base+0xba0>
   381ac:	add	r1, r7, #1
   381b0:	sub	r0, r6, r1
   381b4:	cmp	r0, #2
   381b8:	blt	382cc <flatcc_json_parser_generic_json@@Base+0xc84>
   381bc:	ldrb	r0, [r1]
   381c0:	cmp	r0, #32
   381c4:	bls	382bc <flatcc_json_parser_generic_json@@Base+0xc74>
   381c8:	mov	r7, r1
   381cc:	cmp	r7, r6
   381d0:	bne	382e4 <flatcc_json_parser_generic_json@@Base+0xc9c>
   381d4:	ldr	r0, [r9]
   381d8:	mov	r4, r6
   381dc:	cmp	r0, #0
   381e0:	bne	38290 <flatcc_json_parser_generic_json@@Base+0xc48>
   381e4:	mov	r0, #10
   381e8:	str	r0, [r9]
   381ec:	ldr	r0, [sp, #8]
   381f0:	ldr	r1, [sp, #4]
   381f4:	mov	r4, r6
   381f8:	ldr	r0, [r0]
   381fc:	sub	r0, r1, r0
   38200:	ldr	r1, [sp, #12]
   38204:	str	r0, [r1]
   38208:	ldr	r0, [sp, #16]
   3820c:	str	r6, [r0]
   38210:	b	38290 <flatcc_json_parser_generic_json@@Base+0xc48>
   38214:	bne	38224 <flatcc_json_parser_generic_json@@Base+0xbdc>
   38218:	ldrb	r0, [r7, #2]!
   3821c:	cmp	r0, #32
   38220:	bhi	38234 <flatcc_json_parser_generic_json@@Base+0xbec>
   38224:	mov	r0, r5
   38228:	mov	r2, r6
   3822c:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   38230:	mov	r7, r0
   38234:	cmp	r7, r6
   38238:	beq	38194 <flatcc_json_parser_generic_json@@Base+0xb4c>
   3823c:	ldrb	r0, [r7]
   38240:	cmp	r0, #93	; 0x5d
   38244:	bne	382f0 <flatcc_json_parser_generic_json@@Base+0xca8>
   38248:	add	r1, r7, #1
   3824c:	sub	r0, r6, r1
   38250:	cmp	r0, #2
   38254:	blt	38280 <flatcc_json_parser_generic_json@@Base+0xc38>
   38258:	ldrb	r0, [r1]
   3825c:	cmp	r0, #32
   38260:	bls	3826c <flatcc_json_parser_generic_json@@Base+0xc24>
   38264:	mov	r4, r1
   38268:	b	38290 <flatcc_json_parser_generic_json@@Base+0xc48>
   3826c:	bne	38280 <flatcc_json_parser_generic_json@@Base+0xc38>
   38270:	ldrb	r0, [r7, #2]!
   38274:	mov	r4, r7
   38278:	cmp	r0, #32
   3827c:	bhi	38290 <flatcc_json_parser_generic_json@@Base+0xc48>
   38280:	mov	r0, r5
   38284:	mov	r2, r6
   38288:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   3828c:	mov	r4, r0
   38290:	subs	r1, r4, r6
   38294:	sub	r0, r8, #1
   38298:	movwne	r1, #1
   3829c:	subs	r2, r8, #1
   382a0:	movwne	r2, #1
   382a4:	cmp	r8, #1
   382a8:	beq	38358 <flatcc_json_parser_generic_json@@Base+0xd10>
   382ac:	cmp	r4, r6
   382b0:	mov	r8, r0
   382b4:	bne	38024 <flatcc_json_parser_generic_json@@Base+0x9dc>
   382b8:	b	38358 <flatcc_json_parser_generic_json@@Base+0xd10>
   382bc:	bne	382cc <flatcc_json_parser_generic_json@@Base+0xc84>
   382c0:	ldrb	r0, [r7, #2]!
   382c4:	cmp	r0, #32
   382c8:	bhi	382dc <flatcc_json_parser_generic_json@@Base+0xc94>
   382cc:	mov	r0, r5
   382d0:	mov	r2, r6
   382d4:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   382d8:	mov	r7, r0
   382dc:	cmp	r7, r6
   382e0:	beq	381d4 <flatcc_json_parser_generic_json@@Base+0xb8c>
   382e4:	ldrb	r0, [r7]
   382e8:	cmp	r0, #125	; 0x7d
   382ec:	beq	38248 <flatcc_json_parser_generic_json@@Base+0xc00>
   382f0:	add	r0, sp, #24
   382f4:	cmp	r7, r6
   382f8:	add	r0, r0, r8
   382fc:	bne	3769c <flatcc_json_parser_generic_json@@Base+0x54>
   38300:	b	383b0 <flatcc_json_parser_generic_json@@Base+0xd68>
   38304:	mov	r0, #6
   38308:	str	r0, [r9]
   3830c:	ldr	r0, [sp, #8]
   38310:	ldr	r2, [sp, #12]
   38314:	mov	r4, r6
   38318:	ldr	r0, [r0]
   3831c:	sub	r0, r1, r0
   38320:	add	r0, r0, #1
   38324:	str	r0, [r2]
   38328:	ldr	r0, [sp, #16]
   3832c:	str	r1, [r0]
   38330:	b	38004 <flatcc_json_parser_generic_json@@Base+0x9bc>
   38334:	mov	r4, r7
   38338:	mov	r0, r4
   3833c:	sub	sp, fp, #28
   38340:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   38344:	mov	r0, r8
   38348:	cmp	r1, #0
   3834c:	beq	38360 <flatcc_json_parser_generic_json@@Base+0xd18>
   38350:	b	383b4 <flatcc_json_parser_generic_json@@Base+0xd6c>
   38354:	mov	r0, r8
   38358:	cmp	r1, #0
   3835c:	bne	383b4 <flatcc_json_parser_generic_json@@Base+0xd6c>
   38360:	cmp	r2, #0
   38364:	beq	383b4 <flatcc_json_parser_generic_json@@Base+0xd6c>
   38368:	ldr	r1, [r9]
   3836c:	cmp	r1, #0
   38370:	bne	383b0 <flatcc_json_parser_generic_json@@Base+0xd68>
   38374:	add	r1, sp, #24
   38378:	add	r0, r1, r0
   3837c:	mov	r1, #10
   38380:	ldrb	r0, [r0, #-1]
   38384:	cmp	r0, #93	; 0x5d
   38388:	movweq	r1, #9
   3838c:	str	r1, [r9]
   38390:	ldr	r0, [sp, #8]
   38394:	ldr	r1, [sp, #4]
   38398:	ldr	r0, [r0]
   3839c:	sub	r0, r1, r0
   383a0:	ldr	r1, [sp, #12]
   383a4:	str	r0, [r1]
   383a8:	ldr	r0, [sp, #16]
   383ac:	str	r6, [r0]
   383b0:	mov	r4, r6
   383b4:	mov	r0, r4
   383b8:	sub	sp, fp, #28
   383bc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   383c0:	ldr	r0, [r9]
   383c4:	cmp	r0, #0
   383c8:	bne	383b0 <flatcc_json_parser_generic_json@@Base+0xd68>
   383cc:	mov	r0, #10
   383d0:	str	r0, [r9]
   383d4:	b	38390 <flatcc_json_parser_generic_json@@Base+0xd48>
   383d8:	ldr	r0, [r9]
   383dc:	cmp	r0, #0
   383e0:	bne	383b0 <flatcc_json_parser_generic_json@@Base+0xd68>
   383e4:	mov	r0, #4
   383e8:	b	38410 <flatcc_json_parser_generic_json@@Base+0xdc8>
   383ec:	ldr	r0, [r9]
   383f0:	cmp	r0, #0
   383f4:	bne	383b0 <flatcc_json_parser_generic_json@@Base+0xd68>
   383f8:	mov	r0, #2
   383fc:	b	38410 <flatcc_json_parser_generic_json@@Base+0xdc8>
   38400:	ldr	r0, [r9]
   38404:	cmp	r0, #0
   38408:	bne	383b0 <flatcc_json_parser_generic_json@@Base+0xd68>
   3840c:	mov	r0, #5
   38410:	str	r0, [r9]
   38414:	ldr	r0, [sp, #8]
   38418:	ldr	r1, [sp, #12]
   3841c:	ldr	r0, [r0]
   38420:	sub	r0, r7, r0
   38424:	add	r0, r0, #1
   38428:	str	r0, [r1]
   3842c:	ldr	r0, [sp, #16]
   38430:	str	r7, [r0]
   38434:	b	383b0 <flatcc_json_parser_generic_json@@Base+0xd68>

00038438 <flatcc_json_parser_double@@Base>:
   38438:	push	{r4, r5, r6, r7, fp, lr}
   3843c:	add	fp, sp, #16
   38440:	mov	r5, r0
   38444:	mov	r0, #0
   38448:	mov	r6, r1
   3844c:	cmp	r1, r2
   38450:	str	r0, [r3]
   38454:	str	r0, [r3, #4]
   38458:	beq	384fc <flatcc_json_parser_double@@Base+0xc4>
   3845c:	mov	r0, r6
   38460:	mov	r4, r2
   38464:	mov	r7, r3
   38468:	ldrb	r1, [r0], #1
   3846c:	cmp	r1, #45	; 0x2d
   38470:	movne	r0, r6
   38474:	sub	r2, r2, r0
   38478:	cmp	r2, #2
   3847c:	blt	384bc <flatcc_json_parser_double@@Base+0x84>
   38480:	sub	r1, r1, #45	; 0x2d
   38484:	clz	r1, r1
   38488:	lsr	r1, r1, #5
   3848c:	ldrb	r1, [r6, r1]
   38490:	cmp	r1, #46	; 0x2e
   38494:	beq	384ac <flatcc_json_parser_double@@Base+0x74>
   38498:	cmp	r1, #48	; 0x30
   3849c:	bne	384bc <flatcc_json_parser_double@@Base+0x84>
   384a0:	ldrb	r0, [r0, #1]
   384a4:	cmp	r0, #48	; 0x30
   384a8:	bne	384bc <flatcc_json_parser_double@@Base+0x84>
   384ac:	ldr	r0, [r5, #24]
   384b0:	cmp	r0, #0
   384b4:	bne	38528 <flatcc_json_parser_double@@Base+0xf0>
   384b8:	b	3850c <flatcc_json_parser_double@@Base+0xd4>
   384bc:	sub	r1, r4, r6
   384c0:	mov	r0, r6
   384c4:	mov	r2, r7
   384c8:	bl	38530 <flatcc_json_parser_double@@Base+0xf8>
   384cc:	cmp	r0, #0
   384d0:	cmpne	r0, r6
   384d4:	bne	3852c <flatcc_json_parser_double@@Base+0xf4>
   384d8:	vldr	d0, [r7]
   384dc:	bl	14e74 <__isinf@plt>
   384e0:	ldr	r1, [r5, #24]
   384e4:	cmp	r0, #0
   384e8:	beq	38504 <flatcc_json_parser_double@@Base+0xcc>
   384ec:	cmp	r1, #0
   384f0:	bne	38528 <flatcc_json_parser_double@@Base+0xf0>
   384f4:	mov	r0, #7
   384f8:	b	38510 <flatcc_json_parser_double@@Base+0xd8>
   384fc:	mov	r0, r6
   38500:	pop	{r4, r5, r6, r7, fp, pc}
   38504:	cmp	r1, #0
   38508:	bne	38528 <flatcc_json_parser_double@@Base+0xf0>
   3850c:	mov	r0, #6
   38510:	str	r6, [r5, #36]	; 0x24
   38514:	ldr	r1, [r5, #4]
   38518:	sub	r1, r6, r1
   3851c:	add	r1, r1, #1
   38520:	str	r1, [r5, #20]
   38524:	str	r0, [r5, #24]
   38528:	mov	r0, r4
   3852c:	pop	{r4, r5, r6, r7, fp, pc}
   38530:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   38534:	add	fp, sp, #28
   38538:	sub	sp, sp, #36	; 0x24
   3853c:	cmp	r1, #1000	; 0x3e8
   38540:	mov	r3, r1
   38544:	mov	r5, #0
   38548:	mov	r9, r0
   3854c:	movge	r3, #1000	; 0x3e8
   38550:	str	r5, [r2]
   38554:	str	r5, [r2, #4]
   38558:	add	ip, r0, r3
   3855c:	add	lr, ip, #1
   38560:	cmp	lr, r0
   38564:	beq	385bc <flatcc_json_parser_double@@Base+0x184>
   38568:	ldrb	r0, [r9]
   3856c:	mov	r4, r9
   38570:	cmp	r0, #45	; 0x2d
   38574:	bne	3858c <flatcc_json_parser_double@@Base+0x154>
   38578:	cmp	r3, #0
   3857c:	beq	38960 <flatcc_json_parser_double@@Base+0x528>
   38580:	add	r4, r9, #1
   38584:	mov	r5, #1
   38588:	ldrb	r0, [r4]
   3858c:	cmp	r0, #48	; 0x30
   38590:	bne	385cc <flatcc_json_parser_double@@Base+0x194>
   38594:	add	r6, r4, #1
   38598:	cmp	r4, ip
   3859c:	beq	38640 <flatcc_json_parser_double@@Base+0x208>
   385a0:	ldrb	r1, [r6]
   385a4:	orr	r0, r1, #32
   385a8:	cmp	r0, #120	; 0x78
   385ac:	bne	3860c <flatcc_json_parser_double@@Base+0x1d4>
   385b0:	mov	r0, #0
   385b4:	str	r0, [r2]
   385b8:	str	r0, [r2, #4]
   385bc:	mov	r2, r9
   385c0:	mov	r0, r2
   385c4:	sub	sp, fp, #28
   385c8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   385cc:	sub	r1, r0, #49	; 0x31
   385d0:	uxtb	r1, r1
   385d4:	cmp	r1, #9
   385d8:	bcc	385f4 <flatcc_json_parser_double@@Base+0x1bc>
   385dc:	cmp	r5, #0
   385e0:	movne	r9, #0
   385e4:	mov	r2, r9
   385e8:	mov	r0, r2
   385ec:	sub	sp, fp, #28
   385f0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   385f4:	sub	r0, r0, #48	; 0x30
   385f8:	add	r6, r4, #1
   385fc:	asr	r1, r0, #31
   38600:	cmp	r6, lr
   38604:	bne	38650 <flatcc_json_parser_double@@Base+0x218>
   38608:	b	38960 <flatcc_json_parser_double@@Base+0x528>
   3860c:	cmp	r1, #48	; 0x30
   38610:	mov	r0, #0
   38614:	mov	r1, #0
   38618:	bne	38648 <flatcc_json_parser_double@@Base+0x210>
   3861c:	sub	r0, ip, #1
   38620:	mov	r1, r4
   38624:	cmp	r0, r4
   38628:	beq	3863c <flatcc_json_parser_double@@Base+0x204>
   3862c:	ldrb	r7, [r1, #2]
   38630:	add	r4, r1, #1
   38634:	cmp	r7, #48	; 0x30
   38638:	beq	38620 <flatcc_json_parser_double@@Base+0x1e8>
   3863c:	add	r6, r1, #2
   38640:	mov	r0, #0
   38644:	mov	r1, #0
   38648:	cmp	r6, lr
   3864c:	beq	38960 <flatcc_json_parser_double@@Base+0x528>
   38650:	mov	sl, #10
   38654:	mov	r7, r6
   38658:	str	r2, [sp, #20]
   3865c:	ldrb	r8, [r7]
   38660:	sub	r2, r8, #48	; 0x30
   38664:	uxtb	r4, r2
   38668:	mov	r2, #0
   3866c:	cmp	r4, #9
   38670:	bhi	386b0 <flatcc_json_parser_double@@Base+0x278>
   38674:	movw	r4, #39320	; 0x9998
   38678:	movt	r4, #39321	; 0x9999
   3867c:	subs	r4, r4, r0
   38680:	movw	r4, #39321	; 0x9999
   38684:	movt	r4, #6553	; 0x1999
   38688:	sbcs	r4, r4, r1
   3868c:	bcc	386cc <flatcc_json_parser_double@@Base+0x294>
   38690:	add	r1, r1, r1, lsl #2
   38694:	add	r7, r7, #1
   38698:	lsl	r1, r1, #1
   3869c:	umlal	r8, r1, r0, sl
   386a0:	subs	r0, r8, #48	; 0x30
   386a4:	sbc	r1, r1, #0
   386a8:	cmp	lr, r7
   386ac:	bne	3865c <flatcc_json_parser_double@@Base+0x224>
   386b0:	mov	r8, r0
   386b4:	mov	sl, r1
   386b8:	mov	r0, #0
   386bc:	cmp	r7, lr
   386c0:	str	r0, [sp, #24]
   386c4:	bne	386f4 <flatcc_json_parser_double@@Base+0x2bc>
   386c8:	b	38be8 <flatcc_json_parser_double@@Base+0x7b0>
   386cc:	adds	r4, r0, #1
   386d0:	adc	sl, r1, #0
   386d4:	cmp	r8, #52	; 0x34
   386d8:	mov	r8, r4
   386dc:	movls	r8, r0
   386e0:	movls	sl, r1
   386e4:	mov	r0, #1
   386e8:	cmp	r7, lr
   386ec:	str	r0, [sp, #24]
   386f0:	beq	38be8 <flatcc_json_parser_double@@Base+0x7b0>
   386f4:	sub	r0, r7, r6
   386f8:	mov	r6, #0
   386fc:	str	r0, [sp, #16]
   38700:	sub	r0, r3, r7
   38704:	add	r0, r9, r0
   38708:	ldrb	r1, [r7]
   3870c:	cmp	r1, #48	; 0x30
   38710:	bne	38818 <flatcc_json_parser_double@@Base+0x3e0>
   38714:	add	r1, r7, #1
   38718:	cmp	r7, ip
   3871c:	sub	r0, r0, #1
   38720:	add	r6, r6, #1
   38724:	mov	r7, r1
   38728:	bne	38708 <flatcc_json_parser_double@@Base+0x2d0>
   3872c:	mov	r7, r1
   38730:	mov	r2, #0
   38734:	cmp	r7, lr
   38738:	beq	38be8 <flatcc_json_parser_double@@Base+0x7b0>
   3873c:	ldrb	r0, [r7]
   38740:	cmp	r0, #46	; 0x2e
   38744:	bne	38938 <flatcc_json_parser_double@@Base+0x500>
   38748:	mov	r4, r7
   3874c:	ldrb	r0, [r4, #1]!
   38750:	sub	r1, r0, #48	; 0x30
   38754:	uxtb	r1, r1
   38758:	cmp	r1, #9
   3875c:	bhi	38be8 <flatcc_json_parser_double@@Base+0x7b0>
   38760:	cmp	r7, ip
   38764:	beq	38874 <flatcc_json_parser_double@@Base+0x43c>
   38768:	sub	r1, r3, r7
   3876c:	str	r4, [sp, #8]
   38770:	add	r1, r1, r9
   38774:	sub	r1, r1, #1
   38778:	str	r1, [sp, #12]
   3877c:	mov	r1, #0
   38780:	mov	r3, r1
   38784:	movw	r1, #39320	; 0x9998
   38788:	movt	r1, #39321	; 0x9999
   3878c:	subs	r1, r1, r8
   38790:	movw	r1, #39321	; 0x9999
   38794:	movt	r1, #6553	; 0x1999
   38798:	sbcs	r1, r1, sl
   3879c:	bcc	38884 <flatcc_json_parser_double@@Base+0x44c>
   387a0:	add	r1, sl, sl, lsl #2
   387a4:	uxtb	r0, r0
   387a8:	mov	r4, #10
   387ac:	lsl	r1, r1, #1
   387b0:	umlal	r0, r1, r8, r4
   387b4:	add	r4, r7, r3
   387b8:	subs	r8, r0, #48	; 0x30
   387bc:	ldr	r0, [sp, #12]
   387c0:	sbc	sl, r1, #0
   387c4:	cmp	r0, r3
   387c8:	beq	387fc <flatcc_json_parser_double@@Base+0x3c4>
   387cc:	ldrb	r0, [r4, #2]
   387d0:	str	sl, [sp, #28]
   387d4:	mov	sl, r8
   387d8:	mov	r8, r5
   387dc:	add	r1, r3, #1
   387e0:	sub	r5, r0, #48	; 0x30
   387e4:	uxtb	r5, r5
   387e8:	cmp	r5, #10
   387ec:	mov	r5, r8
   387f0:	mov	r8, sl
   387f4:	ldr	sl, [sp, #28]
   387f8:	bcc	38780 <flatcc_json_parser_double@@Base+0x348>
   387fc:	mvn	r0, r3
   38800:	add	r7, r4, #2
   38804:	add	r6, r0, r6
   38808:	ldr	r4, [sp, #8]
   3880c:	cmp	r7, lr
   38810:	bne	388c8 <flatcc_json_parser_double@@Base+0x490>
   38814:	b	38be8 <flatcc_json_parser_double@@Base+0x7b0>
   38818:	sub	r1, r1, #49	; 0x31
   3881c:	uxtb	r1, r1
   38820:	cmp	r1, #8
   38824:	bhi	38864 <flatcc_json_parser_double@@Base+0x42c>
   38828:	mvn	r2, #0
   3882c:	mov	r1, r2
   38830:	cmp	r0, #0
   38834:	beq	38854 <flatcc_json_parser_double@@Base+0x41c>
   38838:	ldrb	r2, [r7, -r1]
   3883c:	sub	r0, r0, #1
   38840:	sub	r2, r2, #48	; 0x30
   38844:	uxtb	r4, r2
   38848:	sub	r2, r1, #1
   3884c:	cmp	r4, #10
   38850:	bcc	3882c <flatcc_json_parser_double@@Base+0x3f4>
   38854:	mov	r0, #1
   38858:	sub	r6, r6, r1
   3885c:	sub	r7, r7, r1
   38860:	str	r0, [sp, #24]
   38864:	mov	r2, #0
   38868:	cmp	r7, lr
   3886c:	bne	3873c <flatcc_json_parser_double@@Base+0x304>
   38870:	b	38be8 <flatcc_json_parser_double@@Base+0x7b0>
   38874:	mov	r7, r4
   38878:	cmp	r7, lr
   3887c:	bne	388c8 <flatcc_json_parser_double@@Base+0x490>
   38880:	b	38be8 <flatcc_json_parser_double@@Base+0x7b0>
   38884:	add	r1, r7, r3
   38888:	sub	r6, r6, r3
   3888c:	add	r7, r1, #1
   38890:	ldr	r1, [sp, #24]
   38894:	cmp	r1, #0
   38898:	bne	388bc <flatcc_json_parser_double@@Base+0x484>
   3889c:	uxtb	r0, r0
   388a0:	adds	r1, r8, #1
   388a4:	adc	r3, sl, #0
   388a8:	cmp	r0, #52	; 0x34
   388ac:	mov	r0, #1
   388b0:	movhi	r8, r1
   388b4:	movhi	sl, r3
   388b8:	str	r0, [sp, #24]
   388bc:	ldr	r4, [sp, #8]
   388c0:	cmp	r7, lr
   388c4:	beq	38be8 <flatcc_json_parser_double@@Base+0x7b0>
   388c8:	ldr	r1, [sp, #16]
   388cc:	sub	r0, r7, r4
   388d0:	add	r1, r0, r1
   388d4:	str	r1, [sp, #16]
   388d8:	ldrb	r0, [r7]
   388dc:	cmp	r0, #48	; 0x30
   388e0:	bne	388f8 <flatcc_json_parser_double@@Base+0x4c0>
   388e4:	add	r7, r7, #1
   388e8:	add	r6, r6, #1
   388ec:	cmp	lr, r7
   388f0:	bne	388d8 <flatcc_json_parser_double@@Base+0x4a0>
   388f4:	b	38938 <flatcc_json_parser_double@@Base+0x500>
   388f8:	sub	r0, r0, #49	; 0x31
   388fc:	uxtb	r0, r0
   38900:	cmp	r0, #8
   38904:	bhi	38938 <flatcc_json_parser_double@@Base+0x500>
   38908:	mov	r0, r7
   3890c:	cmp	ip, r7
   38910:	beq	3892c <flatcc_json_parser_double@@Base+0x4f4>
   38914:	ldrb	r1, [r0, #1]
   38918:	add	r7, r0, #1
   3891c:	sub	r1, r1, #48	; 0x30
   38920:	uxtb	r1, r1
   38924:	cmp	r1, #10
   38928:	bcc	38908 <flatcc_json_parser_double@@Base+0x4d0>
   3892c:	add	r7, r0, #1
   38930:	mov	r0, #1
   38934:	str	r0, [sp, #24]
   38938:	cmp	r7, lr
   3893c:	beq	38be8 <flatcc_json_parser_double@@Base+0x7b0>
   38940:	ldrb	r0, [r7]
   38944:	mov	r4, #0
   38948:	orr	r0, r0, #32
   3894c:	cmp	r0, #101	; 0x65
   38950:	bne	38970 <flatcc_json_parser_double@@Base+0x538>
   38954:	sub	r0, lr, r7
   38958:	cmp	r0, #2
   3895c:	bge	389e4 <flatcc_json_parser_double@@Base+0x5ac>
   38960:	mov	r2, #0
   38964:	mov	r0, r2
   38968:	sub	sp, fp, #28
   3896c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   38970:	mov	r0, #0
   38974:	cmp	r7, lr
   38978:	mov	r2, #0
   3897c:	beq	38be8 <flatcc_json_parser_double@@Base+0x7b0>
   38980:	vmov.i32	d16, #0	; 0x00000000
   38984:	cmp	r4, #0
   38988:	rsbne	r0, r0, #0
   3898c:	orrs	r1, r8, sl
   38990:	beq	389b8 <flatcc_json_parser_double@@Base+0x580>
   38994:	ldr	r2, [sp, #16]
   38998:	add	r1, r2, r6
   3899c:	add	r4, r1, r0
   389a0:	cmn	r4, #324	; 0x144
   389a4:	blt	389b8 <flatcc_json_parser_double@@Base+0x580>
   389a8:	movw	r0, #310	; 0x136
   389ac:	cmp	r4, r0
   389b0:	ble	38a18 <flatcc_json_parser_double@@Base+0x5e0>
   389b4:	vldr	d16, [pc, #1004]	; 38da8 <flatcc_json_parser_double@@Base+0x970>
   389b8:	ldr	r4, [sp, #20]
   389bc:	vstr	d16, [r4]
   389c0:	cmp	r5, #0
   389c4:	beq	389d4 <flatcc_json_parser_double@@Base+0x59c>
   389c8:	vldr	d16, [r4]
   389cc:	vneg.f64	d16, d16
   389d0:	vstr	d16, [r4]
   389d4:	mov	r2, r7
   389d8:	mov	r0, r2
   389dc:	sub	sp, fp, #28
   389e0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   389e4:	mov	r3, r7
   389e8:	ldrb	r0, [r3, #1]!
   389ec:	cmp	r0, #45	; 0x2d
   389f0:	beq	38b14 <flatcc_json_parser_double@@Base+0x6dc>
   389f4:	mov	r4, #0
   389f8:	cmp	r0, #43	; 0x2b
   389fc:	bne	38b24 <flatcc_json_parser_double@@Base+0x6ec>
   38a00:	add	r3, r7, #2
   38a04:	mov	r2, #0
   38a08:	cmp	r3, lr
   38a0c:	beq	38be8 <flatcc_json_parser_double@@Base+0x7b0>
   38a10:	mov	r4, #0
   38a14:	b	38b24 <flatcc_json_parser_double@@Base+0x6ec>
   38a18:	mov	r0, #0
   38a1c:	mov	r6, r2
   38a20:	cmp	r0, sl, lsr #21
   38a24:	bne	38b88 <flatcc_json_parser_double@@Base+0x750>
   38a28:	cmp	r4, #22
   38a2c:	bhi	38b88 <flatcc_json_parser_double@@Base+0x750>
   38a30:	mov	r0, r8
   38a34:	mov	r1, sl
   38a38:	bl	48228 <flatcc_json_printer_clear@@Base+0x4e8>
   38a3c:	vmov	d16, r0, r1
   38a40:	sub	r2, r4, r6
   38a44:	add	r0, r2, #22
   38a48:	cmp	r0, #44	; 0x2c
   38a4c:	bhi	389b8 <flatcc_json_parser_double@@Base+0x580>
   38a50:	add	r1, pc, #0
   38a54:	ldr	pc, [r1, r0, lsl #2]
   38a58:	andeq	r8, r3, ip, lsl #22
   38a5c:	strdeq	r8, [r3], -r4
   38a60:	strdeq	r8, [r3], -ip
   38a64:	andeq	r8, r3, r4, lsl #24
   38a68:	andeq	r8, r3, ip, lsl #24
   38a6c:	andeq	r8, r3, r4, lsl ip
   38a70:	andeq	r8, r3, ip, lsl ip
   38a74:	andeq	r8, r3, r4, lsr #24
   38a78:	andeq	r8, r3, ip, lsr #24
   38a7c:	andeq	r8, r3, r4, lsr ip
   38a80:	andeq	r8, r3, ip, lsr ip
   38a84:	andeq	r8, r3, r4, asr #24
   38a88:	andeq	r8, r3, ip, asr #24
   38a8c:	andeq	r8, r3, r4, asr ip
   38a90:	andeq	r8, r3, ip, asr ip
   38a94:	andeq	r8, r3, r4, ror #24
   38a98:	andeq	r8, r3, ip, ror #24
   38a9c:	andeq	r8, r3, r4, ror ip
   38aa0:	andeq	r8, r3, ip, ror ip
   38aa4:	andeq	r8, r3, r4, lsl #25
   38aa8:	andeq	r8, r3, ip, lsl #25
   38aac:	muleq	r3, r4, ip
   38ab0:			; <UNDEFINED> instruction: 0x000389b8
   38ab4:	andeq	r8, r3, r0, lsr #25
   38ab8:	andeq	r8, r3, ip, lsr #25
   38abc:			; <UNDEFINED> instruction: 0x00038cb8
   38ac0:	andeq	r8, r3, r4, asr #25
   38ac4:	ldrdeq	r8, [r3], -r0
   38ac8:	ldrdeq	r8, [r3], -ip
   38acc:	andeq	r8, r3, r8, ror #25
   38ad0:	strdeq	r8, [r3], -r4
   38ad4:	andeq	r8, r3, r0, lsl #26
   38ad8:	andeq	r8, r3, ip, lsl #26
   38adc:	andeq	r8, r3, r8, lsl sp
   38ae0:	andeq	r8, r3, r4, lsr #26
   38ae4:	andeq	r8, r3, r0, lsr sp
   38ae8:	andeq	r8, r3, ip, lsr sp
   38aec:	andeq	r8, r3, r8, asr #26
   38af0:	andeq	r8, r3, r4, asr sp
   38af4:	andeq	r8, r3, r0, ror #26
   38af8:	andeq	r8, r3, ip, ror #26
   38afc:	andeq	r8, r3, r8, ror sp
   38b00:	andeq	r8, r3, r4, lsl #27
   38b04:	muleq	r3, r0, sp
   38b08:	muleq	r3, ip, sp
   38b0c:	vldr	d17, [pc, #828]	; 38e50 <flatcc_json_parser_double@@Base+0xa18>
   38b10:	b	38c98 <flatcc_json_parser_double@@Base+0x860>
   38b14:	add	r3, r7, #2
   38b18:	mov	r4, #1
   38b1c:	cmp	r3, lr
   38b20:	beq	38be4 <flatcc_json_parser_double@@Base+0x7ac>
   38b24:	ldrb	r0, [r3]
   38b28:	mov	r2, #0
   38b2c:	sub	r0, r0, #48	; 0x30
   38b30:	uxtb	r1, r0
   38b34:	cmp	r1, #9
   38b38:	bhi	38be8 <flatcc_json_parser_double@@Base+0x7b0>
   38b3c:	cmp	r3, ip
   38b40:	beq	38b74 <flatcc_json_parser_double@@Base+0x73c>
   38b44:	ldrb	r1, [r3, #1]
   38b48:	sub	r2, r1, #48	; 0x30
   38b4c:	uxtb	r2, r2
   38b50:	cmp	r2, #9
   38b54:	bhi	38b74 <flatcc_json_parser_double@@Base+0x73c>
   38b58:	cmp	r0, #32768	; 0x8000
   38b5c:	add	r3, r3, #1
   38b60:	addlt	r0, r0, r0, lsl #2
   38b64:	addlt	r0, r1, r0, lsl #1
   38b68:	sublt	r0, r0, #48	; 0x30
   38b6c:	cmp	ip, r3
   38b70:	bne	38b44 <flatcc_json_parser_double@@Base+0x70c>
   38b74:	add	r7, r3, #1
   38b78:	cmp	r7, lr
   38b7c:	mov	r2, #0
   38b80:	bne	38980 <flatcc_json_parser_double@@Base+0x548>
   38b84:	b	38be8 <flatcc_json_parser_double@@Base+0x7b0>
   38b88:	ldr	r0, [sp, #24]
   38b8c:	ldr	r3, [sp, #20]
   38b90:	mov	r2, r4
   38b94:	mov	r1, sl
   38b98:	str	r0, [sp]
   38b9c:	str	r3, [sp, #4]
   38ba0:	mov	r4, r3
   38ba4:	mov	r0, r8
   38ba8:	mov	r3, r6
   38bac:	bl	365d0 <grisu3_diy_fp_encode_double@@Base>
   38bb0:	cmp	r0, #0
   38bb4:	bne	389c0 <flatcc_json_parser_double@@Base+0x588>
   38bb8:	add	r1, sp, #32
   38bbc:	mov	r0, r9
   38bc0:	bl	14f04 <strtod@plt>
   38bc4:	vstr	d0, [r4]
   38bc8:	ldr	r0, [sp, #32]
   38bcc:	cmp	r0, r7
   38bd0:	movcc	r7, r0
   38bd4:	mov	r2, r7
   38bd8:	mov	r0, r2
   38bdc:	sub	sp, fp, #28
   38be0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   38be4:	mov	r2, #0
   38be8:	mov	r0, r2
   38bec:	sub	sp, fp, #28
   38bf0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   38bf4:	vldr	d17, [pc, #436]	; 38db0 <flatcc_json_parser_double@@Base+0x978>
   38bf8:	b	38c98 <flatcc_json_parser_double@@Base+0x860>
   38bfc:	vldr	d17, [pc, #436]	; 38db8 <flatcc_json_parser_double@@Base+0x980>
   38c00:	b	38c98 <flatcc_json_parser_double@@Base+0x860>
   38c04:	vldr	d17, [pc, #436]	; 38dc0 <flatcc_json_parser_double@@Base+0x988>
   38c08:	b	38c98 <flatcc_json_parser_double@@Base+0x860>
   38c0c:	vldr	d17, [pc, #436]	; 38dc8 <flatcc_json_parser_double@@Base+0x990>
   38c10:	b	38c98 <flatcc_json_parser_double@@Base+0x860>
   38c14:	vldr	d17, [pc, #436]	; 38dd0 <flatcc_json_parser_double@@Base+0x998>
   38c18:	b	38c98 <flatcc_json_parser_double@@Base+0x860>
   38c1c:	vldr	d17, [pc, #436]	; 38dd8 <flatcc_json_parser_double@@Base+0x9a0>
   38c20:	b	38c98 <flatcc_json_parser_double@@Base+0x860>
   38c24:	vldr	d17, [pc, #436]	; 38de0 <flatcc_json_parser_double@@Base+0x9a8>
   38c28:	b	38c98 <flatcc_json_parser_double@@Base+0x860>
   38c2c:	vldr	d17, [pc, #436]	; 38de8 <flatcc_json_parser_double@@Base+0x9b0>
   38c30:	b	38c98 <flatcc_json_parser_double@@Base+0x860>
   38c34:	vldr	d17, [pc, #436]	; 38df0 <flatcc_json_parser_double@@Base+0x9b8>
   38c38:	b	38c98 <flatcc_json_parser_double@@Base+0x860>
   38c3c:	vldr	d17, [pc, #436]	; 38df8 <flatcc_json_parser_double@@Base+0x9c0>
   38c40:	b	38c98 <flatcc_json_parser_double@@Base+0x860>
   38c44:	vldr	d17, [pc, #436]	; 38e00 <flatcc_json_parser_double@@Base+0x9c8>
   38c48:	b	38c98 <flatcc_json_parser_double@@Base+0x860>
   38c4c:	vldr	d17, [pc, #436]	; 38e08 <flatcc_json_parser_double@@Base+0x9d0>
   38c50:	b	38c98 <flatcc_json_parser_double@@Base+0x860>
   38c54:	vldr	d17, [pc, #436]	; 38e10 <flatcc_json_parser_double@@Base+0x9d8>
   38c58:	b	38c98 <flatcc_json_parser_double@@Base+0x860>
   38c5c:	vldr	d17, [pc, #436]	; 38e18 <flatcc_json_parser_double@@Base+0x9e0>
   38c60:	b	38c98 <flatcc_json_parser_double@@Base+0x860>
   38c64:	vldr	d17, [pc, #436]	; 38e20 <flatcc_json_parser_double@@Base+0x9e8>
   38c68:	b	38c98 <flatcc_json_parser_double@@Base+0x860>
   38c6c:	vldr	d17, [pc, #436]	; 38e28 <flatcc_json_parser_double@@Base+0x9f0>
   38c70:	b	38c98 <flatcc_json_parser_double@@Base+0x860>
   38c74:	vldr	d17, [pc, #436]	; 38e30 <flatcc_json_parser_double@@Base+0x9f8>
   38c78:	b	38c98 <flatcc_json_parser_double@@Base+0x860>
   38c7c:	vldr	d17, [pc, #436]	; 38e38 <flatcc_json_parser_double@@Base+0xa00>
   38c80:	b	38c98 <flatcc_json_parser_double@@Base+0x860>
   38c84:	vldr	d17, [pc, #436]	; 38e40 <flatcc_json_parser_double@@Base+0xa08>
   38c88:	b	38c98 <flatcc_json_parser_double@@Base+0x860>
   38c8c:	vldr	d17, [pc, #436]	; 38e48 <flatcc_json_parser_double@@Base+0xa10>
   38c90:	b	38c98 <flatcc_json_parser_double@@Base+0x860>
   38c94:	vmov.f64	d17, #36	; 0x41200000  10.0
   38c98:	vdiv.f64	d16, d16, d17
   38c9c:	b	389b8 <flatcc_json_parser_double@@Base+0x580>
   38ca0:	vmov.f64	d17, #36	; 0x41200000  10.0
   38ca4:	vmul.f64	d16, d16, d17
   38ca8:	b	389b8 <flatcc_json_parser_double@@Base+0x580>
   38cac:	vldr	d17, [pc, #404]	; 38e48 <flatcc_json_parser_double@@Base+0xa10>
   38cb0:	vmul.f64	d16, d16, d17
   38cb4:	b	389b8 <flatcc_json_parser_double@@Base+0x580>
   38cb8:	vldr	d17, [pc, #384]	; 38e40 <flatcc_json_parser_double@@Base+0xa08>
   38cbc:	vmul.f64	d16, d16, d17
   38cc0:	b	389b8 <flatcc_json_parser_double@@Base+0x580>
   38cc4:	vldr	d17, [pc, #364]	; 38e38 <flatcc_json_parser_double@@Base+0xa00>
   38cc8:	vmul.f64	d16, d16, d17
   38ccc:	b	389b8 <flatcc_json_parser_double@@Base+0x580>
   38cd0:	vldr	d17, [pc, #344]	; 38e30 <flatcc_json_parser_double@@Base+0x9f8>
   38cd4:	vmul.f64	d16, d16, d17
   38cd8:	b	389b8 <flatcc_json_parser_double@@Base+0x580>
   38cdc:	vldr	d17, [pc, #324]	; 38e28 <flatcc_json_parser_double@@Base+0x9f0>
   38ce0:	vmul.f64	d16, d16, d17
   38ce4:	b	389b8 <flatcc_json_parser_double@@Base+0x580>
   38ce8:	vldr	d17, [pc, #304]	; 38e20 <flatcc_json_parser_double@@Base+0x9e8>
   38cec:	vmul.f64	d16, d16, d17
   38cf0:	b	389b8 <flatcc_json_parser_double@@Base+0x580>
   38cf4:	vldr	d17, [pc, #284]	; 38e18 <flatcc_json_parser_double@@Base+0x9e0>
   38cf8:	vmul.f64	d16, d16, d17
   38cfc:	b	389b8 <flatcc_json_parser_double@@Base+0x580>
   38d00:	vldr	d17, [pc, #264]	; 38e10 <flatcc_json_parser_double@@Base+0x9d8>
   38d04:	vmul.f64	d16, d16, d17
   38d08:	b	389b8 <flatcc_json_parser_double@@Base+0x580>
   38d0c:	vldr	d17, [pc, #244]	; 38e08 <flatcc_json_parser_double@@Base+0x9d0>
   38d10:	vmul.f64	d16, d16, d17
   38d14:	b	389b8 <flatcc_json_parser_double@@Base+0x580>
   38d18:	vldr	d17, [pc, #224]	; 38e00 <flatcc_json_parser_double@@Base+0x9c8>
   38d1c:	vmul.f64	d16, d16, d17
   38d20:	b	389b8 <flatcc_json_parser_double@@Base+0x580>
   38d24:	vldr	d17, [pc, #204]	; 38df8 <flatcc_json_parser_double@@Base+0x9c0>
   38d28:	vmul.f64	d16, d16, d17
   38d2c:	b	389b8 <flatcc_json_parser_double@@Base+0x580>
   38d30:	vldr	d17, [pc, #184]	; 38df0 <flatcc_json_parser_double@@Base+0x9b8>
   38d34:	vmul.f64	d16, d16, d17
   38d38:	b	389b8 <flatcc_json_parser_double@@Base+0x580>
   38d3c:	vldr	d17, [pc, #164]	; 38de8 <flatcc_json_parser_double@@Base+0x9b0>
   38d40:	vmul.f64	d16, d16, d17
   38d44:	b	389b8 <flatcc_json_parser_double@@Base+0x580>
   38d48:	vldr	d17, [pc, #144]	; 38de0 <flatcc_json_parser_double@@Base+0x9a8>
   38d4c:	vmul.f64	d16, d16, d17
   38d50:	b	389b8 <flatcc_json_parser_double@@Base+0x580>
   38d54:	vldr	d17, [pc, #124]	; 38dd8 <flatcc_json_parser_double@@Base+0x9a0>
   38d58:	vmul.f64	d16, d16, d17
   38d5c:	b	389b8 <flatcc_json_parser_double@@Base+0x580>
   38d60:	vldr	d17, [pc, #104]	; 38dd0 <flatcc_json_parser_double@@Base+0x998>
   38d64:	vmul.f64	d16, d16, d17
   38d68:	b	389b8 <flatcc_json_parser_double@@Base+0x580>
   38d6c:	vldr	d17, [pc, #84]	; 38dc8 <flatcc_json_parser_double@@Base+0x990>
   38d70:	vmul.f64	d16, d16, d17
   38d74:	b	389b8 <flatcc_json_parser_double@@Base+0x580>
   38d78:	vldr	d17, [pc, #64]	; 38dc0 <flatcc_json_parser_double@@Base+0x988>
   38d7c:	vmul.f64	d16, d16, d17
   38d80:	b	389b8 <flatcc_json_parser_double@@Base+0x580>
   38d84:	vldr	d17, [pc, #44]	; 38db8 <flatcc_json_parser_double@@Base+0x980>
   38d88:	vmul.f64	d16, d16, d17
   38d8c:	b	389b8 <flatcc_json_parser_double@@Base+0x580>
   38d90:	vldr	d17, [pc, #24]	; 38db0 <flatcc_json_parser_double@@Base+0x978>
   38d94:	vmul.f64	d16, d16, d17
   38d98:	b	389b8 <flatcc_json_parser_double@@Base+0x580>
   38d9c:	vldr	d17, [pc, #172]	; 38e50 <flatcc_json_parser_double@@Base+0xa18>
   38da0:	vmul.f64	d16, d16, d17
   38da4:	b	389b8 <flatcc_json_parser_double@@Base+0x580>
   38da8:	andeq	r0, r0, r0
   38dac:	svcvc	0x00f00000	; IMB
   38db0:	usatle	lr, #2, r0, asr #30
   38db4:	strbmi	r1, [fp], #-2788	; 0xfffff51c
   38db8:	ldmvc	r5!, {r6, sl, fp, pc}
   38dbc:	ldrmi	sl, [r5], #-3869	; 0xfffff0e3
   38dc0:	addsvs	r3, r1, r0, lsl #26
   38dc4:	mvnmi	r5, #228, 16	; 0xe40000
   38dc8:	strbvs	ip, [lr, -r0, lsl #16]
   38dcc:			; <UNDEFINED> instruction: 0x43abc16d
   38dd0:	ldrbhi	sl, [r8]
   38dd4:	cmnmi	r6, #1459617792	; 0x57000000
   38dd8:	strbcc	r8, [r0, r0]!
   38ddc:	movtmi	ip, #4985	; 0x1379
   38de0:	ldrtcs	r0, [r4], -r0
   38de4:	movwmi	r6, #52213	; 0xcbf5
   38de8:	cdpne	0, 9, cr0, cr0, cr0, {0}
   38dec:	sbcsmi	fp, r6, #196, 24	; 0xc400
   38df0:	strb	r0, [r0, #-0]
   38df4:	adcmi	r3, r2, #156	; 0x9c
   38df8:	andge	r0, r0, #0
   38dfc:	rsbmi	r1, sp, #148, 20	; 0x94000
   38e00:	stmda	r0, {}	; <UNPREDICTABLE>
   38e04:	eorsmi	r4, r7, #7733248	; 0x760000
   38e08:	andcs	r0, r0, r0
   38e0c:	andmi	sl, r2, #95	; 0x5f
   38e10:	andeq	r0, r0, r0
   38e14:	bicmi	ip, sp, r5, ror #26
   38e18:	andeq	r0, r0, r0
   38e1c:	orrsmi	sp, r7, r4, lsl #15
   38e20:	andeq	r0, r0, r0
   38e24:	ldrdmi	r1, [r3, #-32]!	; 0xffffffe0
   38e28:	andeq	r0, r0, r0
   38e2c:	smlawbmi	lr, r0, r4, r8
   38e30:	andeq	r0, r0, r0
   38e34:	rscsmi	r6, r8, r0, lsl #20
   38e38:	andeq	r0, r0, r0
   38e3c:	sbcmi	r8, r3, r0, lsl #16
   38e40:	andeq	r0, r0, r0
   38e44:	addmi	r4, pc, r0
   38e48:	andeq	r0, r0, r0
   38e4c:	subsmi	r0, r9, r0
   38e50:			; <UNDEFINED> instruction: 0x064dd592
   38e54:	strmi	pc, [r0], #207	; 0xcf

00038e58 <flatcc_json_parser_float@@Base>:
   38e58:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   38e5c:	add	fp, sp, #24
   38e60:	vpush	{d8-d9}
   38e64:	sub	sp, sp, #8
   38e68:	mov	r8, r0
   38e6c:	mov	r0, #0
   38e70:	mov	r6, r1
   38e74:	cmp	r1, r2
   38e78:	str	r0, [r3]
   38e7c:	beq	38f54 <flatcc_json_parser_float@@Base+0xfc>
   38e80:	mov	r0, r6
   38e84:	mov	r5, r2
   38e88:	mov	r7, r3
   38e8c:	ldrb	r1, [r0], #1
   38e90:	cmp	r1, #45	; 0x2d
   38e94:	movne	r0, r6
   38e98:	sub	r2, r2, r0
   38e9c:	cmp	r2, #2
   38ea0:	blt	38ee0 <flatcc_json_parser_float@@Base+0x88>
   38ea4:	sub	r1, r1, #45	; 0x2d
   38ea8:	clz	r1, r1
   38eac:	lsr	r1, r1, #5
   38eb0:	ldrb	r1, [r6, r1]
   38eb4:	cmp	r1, #46	; 0x2e
   38eb8:	beq	38ed0 <flatcc_json_parser_float@@Base+0x78>
   38ebc:	cmp	r1, #48	; 0x30
   38ec0:	bne	38ee0 <flatcc_json_parser_float@@Base+0x88>
   38ec4:	ldrb	r0, [r0, #1]
   38ec8:	cmp	r0, #48	; 0x30
   38ecc:	bne	38ee0 <flatcc_json_parser_float@@Base+0x88>
   38ed0:	ldr	r0, [r8, #24]
   38ed4:	cmp	r0, #0
   38ed8:	bne	38f8c <flatcc_json_parser_float@@Base+0x134>
   38edc:	b	38f70 <flatcc_json_parser_float@@Base+0x118>
   38ee0:	sub	r1, r5, r6
   38ee4:	mov	r2, sp
   38ee8:	mov	r0, r6
   38eec:	bl	38530 <flatcc_json_parser_double@@Base+0xf8>
   38ef0:	vldr	d16, [sp]
   38ef4:	mov	r4, r0
   38ef8:	add	r0, pc, #160	; 0xa0
   38efc:	vcmpe.f64	d16, #0.0
   38f00:	vcvt.f32.f64	s16, d16
   38f04:	vmrs	APSR_nzcv, fpscr
   38f08:	addmi	r0, r0, #4
   38f0c:	vldr	s18, [r0]
   38f10:	vmov.f32	s0, s16
   38f14:	bl	14e68 <__isinff@plt>
   38f18:	cmp	r0, #0
   38f1c:	vseleq.f32	s0, s16, s18
   38f20:	movne	r4, r6
   38f24:	cmp	r4, #0
   38f28:	cmpne	r4, r6
   38f2c:	vstr	s0, [r7]
   38f30:	bne	38f58 <flatcc_json_parser_float@@Base+0x100>
   38f34:	bl	14e68 <__isinff@plt>
   38f38:	ldr	r1, [r8, #24]
   38f3c:	cmp	r0, #0
   38f40:	beq	38f68 <flatcc_json_parser_float@@Base+0x110>
   38f44:	cmp	r1, #0
   38f48:	bne	38f8c <flatcc_json_parser_float@@Base+0x134>
   38f4c:	mov	r0, #7
   38f50:	b	38f74 <flatcc_json_parser_float@@Base+0x11c>
   38f54:	mov	r4, r6
   38f58:	mov	r0, r4
   38f5c:	sub	sp, fp, #40	; 0x28
   38f60:	vpop	{d8-d9}
   38f64:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   38f68:	cmp	r1, #0
   38f6c:	bne	38f8c <flatcc_json_parser_float@@Base+0x134>
   38f70:	mov	r0, #6
   38f74:	str	r6, [r8, #36]	; 0x24
   38f78:	ldr	r1, [r8, #4]
   38f7c:	sub	r1, r6, r1
   38f80:	add	r1, r1, #1
   38f84:	str	r1, [r8, #20]
   38f88:	str	r0, [r8, #24]
   38f8c:	mov	r4, r5
   38f90:	mov	r0, r4
   38f94:	sub	sp, fp, #40	; 0x28
   38f98:	vpop	{d8-d9}
   38f9c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   38fa0:	svcvc	0x00800000
   38fa4:			; <UNDEFINED> instruction: 0xff800000

00038fa8 <flatcc_json_parser_integer@@Base>:
   38fa8:	push	{r4, r5, r6, r7, fp, lr}
   38fac:	add	fp, sp, #16
   38fb0:	mov	ip, r1
   38fb4:	cmp	r1, r2
   38fb8:	beq	390a4 <flatcc_json_parser_integer@@Base+0xfc>
   38fbc:	ldrb	r1, [ip]
   38fc0:	mov	r4, #0
   38fc4:	sub	r1, r1, #45	; 0x2d
   38fc8:	clz	r1, r1
   38fcc:	lsr	r1, r1, #5
   38fd0:	str	r1, [r3]
   38fd4:	add	r1, ip, r1
   38fd8:	cmp	r1, r2
   38fdc:	beq	39090 <flatcc_json_parser_integer@@Base+0xe8>
   38fe0:	mov	lr, #10
   38fe4:	mov	r5, #0
   38fe8:	ldrb	r6, [r1]
   38fec:	sub	r7, r6, #48	; 0x30
   38ff0:	uxtb	r7, r7
   38ff4:	cmp	r7, #9
   38ff8:	bhi	390ac <flatcc_json_parser_integer@@Base+0x104>
   38ffc:	add	r7, r5, r5, lsl #2
   39000:	lsl	r7, r7, #1
   39004:	umlal	r6, r7, r4, lr
   39008:	subs	r6, r6, #48	; 0x30
   3900c:	sbc	r7, r7, #0
   39010:	subs	r4, r6, r4
   39014:	sbcs	r4, r7, r5
   39018:	bcc	390bc <flatcc_json_parser_integer@@Base+0x114>
   3901c:	add	r1, r1, #1
   39020:	mov	r4, r6
   39024:	mov	r5, r7
   39028:	cmp	r2, r1
   3902c:	bne	38fe8 <flatcc_json_parser_integer@@Base+0x40>
   39030:	mov	r3, #0
   39034:	mov	r1, r2
   39038:	mov	r4, r6
   3903c:	mov	r5, r7
   39040:	cmp	r1, ip
   39044:	beq	390a4 <flatcc_json_parser_integer@@Base+0xfc>
   39048:	cmp	r3, #0
   3904c:	beq	390d8 <flatcc_json_parser_integer@@Base+0x130>
   39050:	ldrb	r3, [r1]
   39054:	cmp	r3, #46	; 0x2e
   39058:	cmpne	r3, #101	; 0x65
   3905c:	bne	390d0 <flatcc_json_parser_integer@@Base+0x128>
   39060:	ldr	r3, [r0, #24]
   39064:	cmp	r3, #0
   39068:	bne	390c8 <flatcc_json_parser_integer@@Base+0x120>
   3906c:	str	r1, [r0, #36]	; 0x24
   39070:	mov	r3, #12
   39074:	ldr	r7, [r0, #4]
   39078:	sub	r1, r1, r7
   3907c:	add	r1, r1, #1
   39080:	str	r1, [r0, #20]
   39084:	str	r3, [r0, #24]
   39088:	mov	r0, r2
   3908c:	pop	{r4, r5, r6, r7, fp, pc}
   39090:	mov	r1, r2
   39094:	mov	r5, #0
   39098:	mov	r3, #0
   3909c:	cmp	r1, ip
   390a0:	bne	39048 <flatcc_json_parser_integer@@Base+0xa0>
   390a4:	mov	r0, ip
   390a8:	pop	{r4, r5, r6, r7, fp, pc}
   390ac:	mov	r3, #1
   390b0:	cmp	r1, ip
   390b4:	bne	39048 <flatcc_json_parser_integer@@Base+0xa0>
   390b8:	b	390a4 <flatcc_json_parser_integer@@Base+0xfc>
   390bc:	ldr	r7, [r0, #24]
   390c0:	cmp	r7, #0
   390c4:	beq	390ec <flatcc_json_parser_integer@@Base+0x144>
   390c8:	mov	r0, r2
   390cc:	pop	{r4, r5, r6, r7, fp, pc}
   390d0:	cmp	r3, #69	; 0x45
   390d4:	beq	39060 <flatcc_json_parser_integer@@Base+0xb8>
   390d8:	ldr	r0, [fp, #8]
   390dc:	mov	ip, r1
   390e0:	strd	r4, [r0]
   390e4:	mov	r0, ip
   390e8:	pop	{r4, r5, r6, r7, fp, pc}
   390ec:	str	r1, [r0, #36]	; 0x24
   390f0:	cmp	r3, #0
   390f4:	mov	r7, #8
   390f8:	ldr	r3, [r0, #4]
   390fc:	movweq	r7, #7
   39100:	sub	r1, r1, r3
   39104:	add	r1, r1, #1
   39108:	str	r1, [r0, #20]
   3910c:	str	r7, [r0, #24]
   39110:	mov	r0, r2
   39114:	pop	{r4, r5, r6, r7, fp, pc}

00039118 <flatcc_json_parser_build_uint8_vector_base64@@Base>:
   39118:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3911c:	add	fp, sp, #28
   39120:	sub	sp, sp, #28
   39124:	ldr	r9, [fp, #8]
   39128:	mov	r6, r3
   3912c:	mov	r4, r2
   39130:	mov	r5, r0
   39134:	cmp	r1, r2
   39138:	beq	39180 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x68>
   3913c:	ldrb	r0, [r1]
   39140:	cmp	r0, #34	; 0x22
   39144:	bne	39180 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x68>
   39148:	add	sl, r1, #1
   3914c:	cmp	sl, r4
   39150:	beq	3918c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x74>
   39154:	mov	r7, sl
   39158:	ldrb	r1, [r7]
   3915c:	cmp	r1, #32
   39160:	bcc	393e0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2c8>
   39164:	cmp	r1, #34	; 0x22
   39168:	cmpne	r1, #92	; 0x5c
   3916c:	beq	39230 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x118>
   39170:	add	r7, r7, #1
   39174:	cmp	r4, r7
   39178:	bne	39158 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x40>
   3917c:	b	3918c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x74>
   39180:	ldr	r0, [r5, #24]
   39184:	cmp	r0, #0
   39188:	beq	391a0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x88>
   3918c:	ldr	r0, [r5, #24]
   39190:	cmp	r0, #0
   39194:	mov	r0, r4
   39198:	bne	391ec <flatcc_json_parser_build_uint8_vector_base64@@Base+0xd4>
   3919c:	b	391cc <flatcc_json_parser_build_uint8_vector_base64@@Base+0xb4>
   391a0:	str	r1, [r5, #36]	; 0x24
   391a4:	mov	r0, #16
   391a8:	ldr	r2, [r5, #4]
   391ac:	sub	r1, r1, r2
   391b0:	add	r1, r1, #1
   391b4:	str	r1, [r5, #20]
   391b8:	str	r0, [r5, #24]
   391bc:	ldr	r0, [r5, #24]
   391c0:	cmp	r0, #0
   391c4:	mov	r0, r4
   391c8:	bne	391ec <flatcc_json_parser_build_uint8_vector_base64@@Base+0xd4>
   391cc:	str	r4, [r5, #36]	; 0x24
   391d0:	mov	r0, #20
   391d4:	ldr	r1, [r5, #4]
   391d8:	sub	r1, r4, r1
   391dc:	add	r1, r1, #1
   391e0:	str	r1, [r5, #20]
   391e4:	str	r0, [r5, #24]
   391e8:	mov	r0, r4
   391ec:	mov	r1, #0
   391f0:	str	r1, [r6]
   391f4:	ldr	r1, [r5, #24]
   391f8:	cmp	r1, #0
   391fc:	bne	39224 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x10c>
   39200:	str	r0, [r5, #36]	; 0x24
   39204:	cmp	r9, #0
   39208:	mov	r1, #31
   3920c:	ldr	r2, [r5, #4]
   39210:	movwne	r1, #32
   39214:	sub	r0, r0, r2
   39218:	add	r0, r0, #1
   3921c:	str	r0, [r5, #20]
   39220:	str	r1, [r5, #24]
   39224:	mov	r0, r4
   39228:	sub	sp, fp, #28
   3922c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   39230:	cmp	r4, r7
   39234:	mov	r0, r4
   39238:	beq	391ec <flatcc_json_parser_build_uint8_vector_base64@@Base+0xd4>
   3923c:	cmp	r1, #34	; 0x22
   39240:	bne	3926c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x154>
   39244:	sub	r1, r7, sl
   39248:	and	r0, r1, #3
   3924c:	str	r1, [sp, #20]
   39250:	lsr	r1, r1, #2
   39254:	add	r8, r1, r1, lsl #1
   39258:	cmp	r0, #2
   3925c:	beq	39274 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x15c>
   39260:	cmp	r0, #3
   39264:	addeq	r8, r8, #2
   39268:	b	39278 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x160>
   3926c:	mov	r0, r7
   39270:	b	391ec <flatcc_json_parser_build_uint8_vector_base64@@Base+0xd4>
   39274:	add	r8, r8, #1
   39278:	ldr	r0, [r5]
   3927c:	mov	r1, #1
   39280:	mov	r2, #1
   39284:	mvn	r3, #0
   39288:	bl	319ec <flatcc_builder_start_vector@@Base>
   3928c:	cmp	r0, #0
   39290:	beq	392d0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x1b8>
   39294:	mov	r0, #0
   39298:	str	r0, [r6]
   3929c:	ldr	r0, [r5, #24]
   392a0:	cmp	r0, #0
   392a4:	bne	39224 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x10c>
   392a8:	mov	r0, #33	; 0x21
   392ac:	str	r7, [r5, #36]	; 0x24
   392b0:	ldr	r1, [r5, #4]
   392b4:	sub	r1, r7, r1
   392b8:	add	r1, r1, #1
   392bc:	str	r1, [r5, #20]
   392c0:	str	r0, [r5, #24]
   392c4:	mov	r0, r4
   392c8:	sub	sp, fp, #28
   392cc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   392d0:	ldr	r0, [r5]
   392d4:	mov	r1, r8
   392d8:	bl	30e98 <flatcc_builder_extend_vector@@Base>
   392dc:	cmp	r0, #0
   392e0:	beq	39294 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x17c>
   392e4:	movw	r2, #58088	; 0xe2e8
   392e8:	str	r0, [sp]
   392ec:	str	r0, [sp, #12]
   392f0:	ldr	r0, [sp, #20]
   392f4:	mov	r1, r8
   392f8:	movw	r8, #57832	; 0xe1e8
   392fc:	cmp	r9, #0
   39300:	add	lr, sp, #24
   39304:	mov	ip, sl
   39308:	movt	r2, #4
   3930c:	movt	r8, #4
   39310:	str	r1, [sp, #4]
   39314:	movne	r8, r2
   39318:	cmp	r1, #0
   3931c:	mvneq	r1, #0
   39320:	str	r1, [sp, #16]
   39324:	mov	r1, #0
   39328:	str	r0, [sp, #8]
   3932c:	cmp	r0, r1
   39330:	bne	3934c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x234>
   39334:	b	39404 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2ec>
   39338:	add	r1, r1, #1
   3933c:	cmp	r1, #4
   39340:	bcs	39378 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x260>
   39344:	cmp	r0, r1
   39348:	beq	39404 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2ec>
   3934c:	ldrb	r2, [ip, r1]
   39350:	ldrb	r3, [r8, r2]
   39354:	cmp	r3, #64	; 0x40
   39358:	strb	r3, [lr, r1]
   3935c:	bcc	39338 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x220>
   39360:	cmp	r3, #65	; 0x41
   39364:	bne	39450 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x338>
   39368:	sub	r1, r1, #1
   3936c:	sub	r0, r0, #1
   39370:	add	ip, ip, #1
   39374:	b	39338 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x220>
   39378:	ldr	lr, [sp, #16]
   3937c:	cmp	lr, #3
   39380:	bcc	394e4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3cc>
   39384:	ldrb	r2, [sp, #25]
   39388:	ldrb	r1, [sp, #24]
   3938c:	subs	lr, lr, #3
   39390:	sub	r0, r0, #4
   39394:	add	ip, ip, #4
   39398:	str	lr, [sp, #16]
   3939c:	add	lr, sp, #24
   393a0:	lsr	r3, r2, #4
   393a4:	orr	r1, r3, r1, lsl #2
   393a8:	ldr	r3, [sp, #12]
   393ac:	strb	r1, [r3]
   393b0:	ldrb	r1, [sp, #26]
   393b4:	lsr	r1, r1, #2
   393b8:	orr	r1, r1, r2, lsl #4
   393bc:	strb	r1, [r3, #1]
   393c0:	ldrb	r1, [sp, #26]
   393c4:	ldrb	r2, [sp, #27]
   393c8:	orr	r1, r2, r1, lsl #6
   393cc:	strb	r1, [r3, #2]
   393d0:	add	r3, r3, #3
   393d4:	str	r3, [sp, #12]
   393d8:	bne	39324 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x20c>
   393dc:	b	394d0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3b8>
   393e0:	ldr	r0, [r5, #24]
   393e4:	cmp	r0, #0
   393e8:	mov	r0, r4
   393ec:	bne	391ec <flatcc_json_parser_build_uint8_vector_base64@@Base+0xd4>
   393f0:	str	r7, [r5, #36]	; 0x24
   393f4:	mov	r0, #17
   393f8:	ldr	r1, [r5, #4]
   393fc:	sub	r1, r7, r1
   39400:	b	391dc <flatcc_json_parser_build_uint8_vector_base64@@Base+0xc4>
   39404:	mov	r1, r0
   39408:	mov	r3, r0
   3940c:	ldr	r2, [sp, #16]
   39410:	sub	r0, r0, r3
   39414:	cmp	r1, #0
   39418:	beq	394d0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3b8>
   3941c:	cmp	r1, #3
   39420:	beq	39490 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x378>
   39424:	cmp	r1, #2
   39428:	bne	394e4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3cc>
   3942c:	ldrb	r1, [sp, #25]
   39430:	tst	r1, #15
   39434:	bne	394e4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3cc>
   39438:	ldrb	r2, [sp, #24]
   3943c:	lsl	r2, r2, #2
   39440:	orr	r1, r2, r1, lsr #4
   39444:	ldr	r2, [sp, #12]
   39448:	strb	r1, [r2], #1
   3944c:	b	394cc <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3b4>
   39450:	cmp	r3, #66	; 0x42
   39454:	bne	39554 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x43c>
   39458:	add	r2, r1, #1
   3945c:	mov	r3, r2
   39460:	cmp	r2, r0
   39464:	bcs	3940c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2f4>
   39468:	cmp	r3, #7
   3946c:	bhi	3940c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2f4>
   39470:	ldrb	r2, [ip, r3]
   39474:	ldrb	r2, [r8, r2]
   39478:	sub	r2, r2, #65	; 0x41
   3947c:	uxtb	lr, r2
   39480:	add	r2, r3, #1
   39484:	cmp	lr, #2
   39488:	bcc	3945c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x344>
   3948c:	b	3940c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x2f4>
   39490:	cmp	r2, #2
   39494:	bcc	394e4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3cc>
   39498:	ldrb	r1, [sp, #26]
   3949c:	ands	r2, r1, #3
   394a0:	bne	394e4 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3cc>
   394a4:	ldrb	r3, [sp, #25]
   394a8:	ldrb	ip, [sp, #24]
   394ac:	lsl	r2, r3, #4
   394b0:	orr	r1, r2, r1, lsr #2
   394b4:	ldr	r2, [sp, #12]
   394b8:	strb	r1, [r2, #1]
   394bc:	lsr	r1, r3, #4
   394c0:	orr	r1, r1, ip, lsl #2
   394c4:	strb	r1, [r2]
   394c8:	add	r2, r2, #2
   394cc:	str	r2, [sp, #12]
   394d0:	cmp	r0, #0
   394d4:	beq	394f8 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3e0>
   394d8:	mov	r1, r0
   394dc:	ldr	r0, [sp, #20]
   394e0:	b	394ec <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3d4>
   394e4:	ldr	r0, [sp, #20]
   394e8:	ldr	r1, [sp, #8]
   394ec:	sub	r0, r0, r1
   394f0:	add	r0, sl, r0
   394f4:	b	391ec <flatcc_json_parser_build_uint8_vector_base64@@Base+0xd4>
   394f8:	ldr	r0, [sp]
   394fc:	ldr	r1, [sp, #12]
   39500:	sub	r0, r1, r0
   39504:	ldr	r1, [sp, #4]
   39508:	cmp	r1, r0
   3950c:	bls	39524 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x40c>
   39510:	sub	r1, r1, r0
   39514:	ldr	r0, [r5]
   39518:	bl	31820 <flatcc_builder_truncate_vector@@Base>
   3951c:	cmp	r0, #0
   39520:	bne	39294 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x17c>
   39524:	ldr	r0, [r5]
   39528:	bl	32c64 <flatcc_builder_end_vector@@Base>
   3952c:	cmp	r0, #0
   39530:	str	r0, [r6]
   39534:	beq	39294 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x17c>
   39538:	ldrb	r0, [r7]
   3953c:	cmp	r0, #34	; 0x22
   39540:	bne	3956c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x454>
   39544:	add	r4, r7, #1
   39548:	mov	r0, r4
   3954c:	sub	sp, fp, #28
   39550:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   39554:	mov	r3, r1
   39558:	ldr	r2, [sp, #16]
   3955c:	sub	r0, r0, r3
   39560:	cmp	r1, #0
   39564:	bne	3941c <flatcc_json_parser_build_uint8_vector_base64@@Base+0x304>
   39568:	b	394d0 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x3b8>
   3956c:	ldr	r0, [r5, #24]
   39570:	cmp	r0, #0
   39574:	bne	39224 <flatcc_json_parser_build_uint8_vector_base64@@Base+0x10c>
   39578:	mov	r0, #20
   3957c:	b	392ac <flatcc_json_parser_build_uint8_vector_base64@@Base+0x194>

00039580 <flatcc_json_parser_build_string@@Base>:
   39580:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   39584:	add	fp, sp, #28
   39588:	sub	sp, sp, #4
   3958c:	mov	sl, r3
   39590:	mov	r4, r2
   39594:	mov	r5, r0
   39598:	cmp	r1, r2
   3959c:	beq	395f8 <flatcc_json_parser_build_string@@Base+0x78>
   395a0:	ldrb	r0, [r1]
   395a4:	cmp	r0, #34	; 0x22
   395a8:	bne	395f8 <flatcc_json_parser_build_string@@Base+0x78>
   395ac:	add	r1, r1, #1
   395b0:	mov	r6, r4
   395b4:	cmp	r1, r4
   395b8:	beq	39608 <flatcc_json_parser_build_string@@Base+0x88>
   395bc:	mov	r6, r1
   395c0:	ldrb	r0, [r6]
   395c4:	cmp	r0, #32
   395c8:	bcc	39840 <flatcc_json_parser_build_string@@Base+0x2c0>
   395cc:	cmp	r0, #34	; 0x22
   395d0:	cmpne	r0, #92	; 0x5c
   395d4:	beq	3973c <flatcc_json_parser_build_string@@Base+0x1bc>
   395d8:	add	r6, r6, #1
   395dc:	cmp	r4, r6
   395e0:	bne	395c0 <flatcc_json_parser_build_string@@Base+0x40>
   395e4:	mov	r6, r1
   395e8:	ldr	r0, [r5, #24]
   395ec:	cmp	r0, #0
   395f0:	bne	39630 <flatcc_json_parser_build_string@@Base+0xb0>
   395f4:	b	39614 <flatcc_json_parser_build_string@@Base+0x94>
   395f8:	ldr	r0, [r5, #24]
   395fc:	mov	r6, r4
   39600:	cmp	r0, #0
   39604:	beq	3970c <flatcc_json_parser_build_string@@Base+0x18c>
   39608:	ldr	r0, [r5, #24]
   3960c:	cmp	r0, #0
   39610:	bne	39630 <flatcc_json_parser_build_string@@Base+0xb0>
   39614:	str	r4, [r5, #36]	; 0x24
   39618:	mov	r0, #20
   3961c:	ldr	r1, [r5, #4]
   39620:	sub	r1, r4, r1
   39624:	add	r1, r1, #1
   39628:	str	r1, [r5, #20]
   3962c:	str	r0, [r5, #24]
   39630:	mov	r7, r4
   39634:	ldr	r0, [r5]
   39638:	bl	31e08 <flatcc_builder_start_string@@Base>
   3963c:	cmp	r0, #0
   39640:	bne	39864 <flatcc_json_parser_build_string@@Base+0x2e4>
   39644:	ldr	r0, [r5]
   39648:	sub	r2, r7, r6
   3964c:	mov	r1, r6
   39650:	bl	31678 <flatcc_builder_append_string@@Base>
   39654:	cmp	r0, #0
   39658:	beq	39864 <flatcc_json_parser_build_string@@Base+0x2e4>
   3965c:	cmp	r7, r4
   39660:	mov	r6, r4
   39664:	beq	397e4 <flatcc_json_parser_build_string@@Base+0x264>
   39668:	mov	r8, sp
   3966c:	add	r9, r8, #1
   39670:	ldrb	r0, [r7]
   39674:	cmp	r0, #34	; 0x22
   39678:	beq	397e0 <flatcc_json_parser_build_string@@Base+0x260>
   3967c:	mov	r0, r5
   39680:	mov	r1, r7
   39684:	mov	r2, r4
   39688:	mov	r3, r8
   3968c:	bl	36c84 <flatcc_json_parser_string_escape@@Base>
   39690:	mov	r6, r0
   39694:	ldr	r0, [r5]
   39698:	ldrb	r2, [sp]
   3969c:	mov	r1, r9
   396a0:	bl	31678 <flatcc_builder_append_string@@Base>
   396a4:	cmp	r0, #0
   396a8:	beq	39838 <flatcc_json_parser_build_string@@Base+0x2b8>
   396ac:	cmp	r6, r4
   396b0:	beq	39788 <flatcc_json_parser_build_string@@Base+0x208>
   396b4:	mov	r7, r6
   396b8:	ldrb	r0, [r7]
   396bc:	cmp	r0, #32
   396c0:	bcc	397ac <flatcc_json_parser_build_string@@Base+0x22c>
   396c4:	cmp	r0, #34	; 0x22
   396c8:	cmpne	r0, #92	; 0x5c
   396cc:	beq	396e0 <flatcc_json_parser_build_string@@Base+0x160>
   396d0:	add	r7, r7, #1
   396d4:	cmp	r4, r7
   396d8:	bne	396b8 <flatcc_json_parser_build_string@@Base+0x138>
   396dc:	b	39788 <flatcc_json_parser_build_string@@Base+0x208>
   396e0:	cmp	r4, r7
   396e4:	beq	397d8 <flatcc_json_parser_build_string@@Base+0x258>
   396e8:	ldr	r0, [r5]
   396ec:	sub	r2, r7, r6
   396f0:	mov	r1, r6
   396f4:	bl	31678 <flatcc_builder_append_string@@Base>
   396f8:	cmp	r0, #0
   396fc:	beq	39864 <flatcc_json_parser_build_string@@Base+0x2e4>
   39700:	cmp	r4, r7
   39704:	bne	39670 <flatcc_json_parser_build_string@@Base+0xf0>
   39708:	b	397d8 <flatcc_json_parser_build_string@@Base+0x258>
   3970c:	str	r1, [r5, #36]	; 0x24
   39710:	mov	r0, #16
   39714:	mov	r6, r4
   39718:	ldr	r2, [r5, #4]
   3971c:	sub	r1, r1, r2
   39720:	add	r1, r1, #1
   39724:	str	r1, [r5, #20]
   39728:	str	r0, [r5, #24]
   3972c:	ldr	r0, [r5, #24]
   39730:	cmp	r0, #0
   39734:	bne	39630 <flatcc_json_parser_build_string@@Base+0xb0>
   39738:	b	39614 <flatcc_json_parser_build_string@@Base+0x94>
   3973c:	cmp	r4, r6
   39740:	beq	3984c <flatcc_json_parser_build_string@@Base+0x2cc>
   39744:	cmp	r0, #34	; 0x22
   39748:	bne	39780 <flatcc_json_parser_build_string@@Base+0x200>
   3974c:	ldr	r0, [r5]
   39750:	sub	r2, r6, r1
   39754:	bl	33ff4 <flatcc_builder_create_string@@Base>
   39758:	cmp	r6, r4
   3975c:	str	r0, [sl]
   39760:	beq	397f8 <flatcc_json_parser_build_string@@Base+0x278>
   39764:	ldrb	r0, [r6]
   39768:	cmp	r0, #34	; 0x22
   3976c:	bne	397f8 <flatcc_json_parser_build_string@@Base+0x278>
   39770:	add	r4, r6, #1
   39774:	mov	r0, r4
   39778:	sub	sp, fp, #28
   3977c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   39780:	mov	r7, r6
   39784:	b	39850 <flatcc_json_parser_build_string@@Base+0x2d0>
   39788:	ldr	r0, [r5, #24]
   3978c:	mov	r6, r4
   39790:	cmp	r0, #0
   39794:	bne	397e4 <flatcc_json_parser_build_string@@Base+0x264>
   39798:	str	r4, [r5, #36]	; 0x24
   3979c:	mov	r0, #20
   397a0:	ldr	r1, [r5, #4]
   397a4:	sub	r1, r4, r1
   397a8:	b	397cc <flatcc_json_parser_build_string@@Base+0x24c>
   397ac:	ldr	r0, [r5, #24]
   397b0:	mov	r6, r4
   397b4:	cmp	r0, #0
   397b8:	bne	397e4 <flatcc_json_parser_build_string@@Base+0x264>
   397bc:	str	r7, [r5, #36]	; 0x24
   397c0:	mov	r0, #17
   397c4:	ldr	r1, [r5, #4]
   397c8:	sub	r1, r7, r1
   397cc:	add	r1, r1, #1
   397d0:	str	r1, [r5, #20]
   397d4:	str	r0, [r5, #24]
   397d8:	mov	r6, r4
   397dc:	b	397e4 <flatcc_json_parser_build_string@@Base+0x264>
   397e0:	mov	r6, r7
   397e4:	ldr	r0, [r5]
   397e8:	bl	3415c <flatcc_builder_end_string@@Base>
   397ec:	cmp	r6, r4
   397f0:	str	r0, [sl]
   397f4:	bne	39764 <flatcc_json_parser_build_string@@Base+0x1e4>
   397f8:	ldr	r0, [r5, #24]
   397fc:	cmp	r0, #0
   39800:	beq	39810 <flatcc_json_parser_build_string@@Base+0x290>
   39804:	mov	r0, r4
   39808:	sub	sp, fp, #28
   3980c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   39810:	str	r6, [r5, #36]	; 0x24
   39814:	mov	r0, #20
   39818:	ldr	r1, [r5, #4]
   3981c:	sub	r1, r6, r1
   39820:	add	r1, r1, #1
   39824:	str	r1, [r5, #20]
   39828:	str	r0, [r5, #24]
   3982c:	mov	r0, r4
   39830:	sub	sp, fp, #28
   39834:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   39838:	mov	r4, r6
   3983c:	b	39868 <flatcc_json_parser_build_string@@Base+0x2e8>
   39840:	ldr	r0, [r5, #24]
   39844:	cmp	r0, #0
   39848:	beq	3987c <flatcc_json_parser_build_string@@Base+0x2fc>
   3984c:	mov	r7, r4
   39850:	mov	r6, r1
   39854:	ldr	r0, [r5]
   39858:	bl	31e08 <flatcc_builder_start_string@@Base>
   3985c:	cmp	r0, #0
   39860:	beq	39644 <flatcc_json_parser_build_string@@Base+0xc4>
   39864:	mov	r4, r7
   39868:	mov	r0, #0
   3986c:	str	r0, [sl]
   39870:	mov	r0, r4
   39874:	sub	sp, fp, #28
   39878:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3987c:	str	r6, [r5, #36]	; 0x24
   39880:	mov	r0, #17
   39884:	mov	r7, r4
   39888:	ldr	r2, [r5, #4]
   3988c:	sub	r2, r6, r2
   39890:	add	r2, r2, #1
   39894:	str	r2, [r5, #20]
   39898:	str	r0, [r5, #24]
   3989c:	b	39850 <flatcc_json_parser_build_string@@Base+0x2d0>

000398a0 <flatcc_json_parser_prepare_unions@@Base>:
   398a0:	push	{r4, r5, r6, r7, fp, lr}
   398a4:	add	fp, sp, #16
   398a8:	mov	r6, r0
   398ac:	add	r0, r3, r3, lsl #1
   398b0:	mov	r5, r1
   398b4:	mov	r1, #8
   398b8:	mov	r7, r3
   398bc:	mov	r4, r2
   398c0:	add	r1, r1, r0, lsl #3
   398c4:	ldr	r0, [r6]
   398c8:	bl	30240 <flatcc_builder_enter_user_frame@@Base>
   398cc:	mov	r1, r0
   398d0:	ldr	r0, [fp, #8]
   398d4:	cmp	r1, #0
   398d8:	str	r1, [r0]
   398dc:	beq	398f8 <flatcc_json_parser_prepare_unions@@Base+0x58>
   398e0:	ldr	r0, [r6]
   398e4:	bl	303d4 <flatcc_builder_get_user_frame_ptr@@Base>
   398e8:	mov	r4, r5
   398ec:	str	r7, [r0]
   398f0:	mov	r0, r4
   398f4:	pop	{r4, r5, r6, r7, fp, pc}
   398f8:	ldr	r0, [r6, #24]
   398fc:	cmp	r0, #0
   39900:	beq	3990c <flatcc_json_parser_prepare_unions@@Base+0x6c>
   39904:	mov	r0, r4
   39908:	pop	{r4, r5, r6, r7, fp, pc}
   3990c:	str	r5, [r6, #36]	; 0x24
   39910:	mov	r0, #33	; 0x21
   39914:	ldr	r1, [r6, #4]
   39918:	sub	r1, r5, r1
   3991c:	add	r1, r1, #1
   39920:	str	r1, [r6, #20]
   39924:	str	r0, [r6, #24]
   39928:	mov	r0, r4
   3992c:	pop	{r4, r5, r6, r7, fp, pc}

00039930 <flatcc_json_parser_finalize_unions@@Base>:
   39930:	push	{r4, r5, r6, r7, fp, lr}
   39934:	add	fp, sp, #16
   39938:	mov	r6, r0
   3993c:	ldr	r0, [r0]
   39940:	mov	r7, r1
   39944:	mov	r1, r3
   39948:	mov	r5, r3
   3994c:	mov	r4, r2
   39950:	bl	303d4 <flatcc_builder_get_user_frame_ptr@@Base>
   39954:	ldr	r0, [r0, #4]
   39958:	cmp	r0, #0
   3995c:	beq	3998c <flatcc_json_parser_finalize_unions@@Base+0x5c>
   39960:	ldr	r0, [r6, #24]
   39964:	cmp	r0, #0
   39968:	bne	39990 <flatcc_json_parser_finalize_unions@@Base+0x60>
   3996c:	str	r7, [r6, #36]	; 0x24
   39970:	mov	r0, #27
   39974:	ldr	r1, [r6, #4]
   39978:	sub	r1, r7, r1
   3997c:	add	r1, r1, #1
   39980:	str	r1, [r6, #20]
   39984:	str	r0, [r6, #24]
   39988:	b	39990 <flatcc_json_parser_finalize_unions@@Base+0x60>
   3998c:	mov	r4, r7
   39990:	ldr	r0, [r6]
   39994:	mov	r1, r5
   39998:	bl	30350 <flatcc_builder_exit_user_frame_at@@Base>
   3999c:	mov	r0, r4
   399a0:	pop	{r4, r5, r6, r7, fp, pc}

000399a4 <flatcc_json_parser_union@@Base>:
   399a4:	push	{r4, r5, r6, r7, fp, lr}
   399a8:	add	fp, sp, #16
   399ac:	sub	sp, sp, #16
   399b0:	mov	r6, r1
   399b4:	mov	r5, r0
   399b8:	ldr	r0, [r0]
   399bc:	ldr	r1, [fp, #12]
   399c0:	mov	r7, r3
   399c4:	mov	r4, r2
   399c8:	bl	303d4 <flatcc_builder_get_user_frame_ptr@@Base>
   399cc:	add	r2, r0, #8
   399d0:	add	r3, r7, r7, lsl #1
   399d4:	mov	r1, r2
   399d8:	ldr	r7, [r1, r3, lsl #3]!
   399dc:	cmp	r7, #0
   399e0:	beq	39a18 <flatcc_json_parser_union@@Base+0x74>
   399e4:	ldr	r0, [r5, #24]
   399e8:	cmp	r0, #0
   399ec:	bne	39ae8 <flatcc_json_parser_union@@Base+0x144>
   399f0:	mov	r0, #28
   399f4:	str	r6, [r5, #36]	; 0x24
   399f8:	ldr	r1, [r5, #4]
   399fc:	sub	r1, r6, r1
   39a00:	add	r1, r1, #1
   39a04:	str	r1, [r5, #20]
   39a08:	str	r0, [r5, #24]
   39a0c:	mov	r0, r4
   39a10:	sub	sp, fp, #16
   39a14:	pop	{r4, r5, r6, r7, fp, pc}
   39a18:	add	r2, r2, r3, lsl #3
   39a1c:	ldrb	r3, [r2, #12]
   39a20:	cmp	r3, #0
   39a24:	beq	39a9c <flatcc_json_parser_union@@Base+0xf8>
   39a28:	ldrb	r3, [r2, #13]
   39a2c:	cmp	r3, #0
   39a30:	strb	r3, [sp, #8]
   39a34:	beq	39adc <flatcc_json_parser_union@@Base+0x138>
   39a38:	ldr	r1, [r0, #4]
   39a3c:	ldr	r7, [fp, #16]
   39a40:	mov	r2, r4
   39a44:	sub	r1, r1, #1
   39a48:	str	r1, [r0, #4]
   39a4c:	add	r0, sp, #8
   39a50:	mov	r1, r6
   39a54:	add	r0, r0, #4
   39a58:	str	r0, [sp]
   39a5c:	mov	r0, r5
   39a60:	blx	r7
   39a64:	cmp	r0, r4
   39a68:	beq	39ae8 <flatcc_json_parser_union@@Base+0x144>
   39a6c:	mov	r6, r0
   39a70:	ldr	r1, [fp, #8]
   39a74:	ldr	r0, [r5]
   39a78:	ldr	r2, [sp, #8]
   39a7c:	ldr	r3, [sp, #12]
   39a80:	bl	3306c <flatcc_builder_table_add_union@@Base>
   39a84:	cmp	r0, #0
   39a88:	bne	399e4 <flatcc_json_parser_union@@Base+0x40>
   39a8c:	mov	r4, r6
   39a90:	mov	r0, r4
   39a94:	sub	sp, fp, #16
   39a98:	pop	{r4, r5, r6, r7, fp, pc}
   39a9c:	ldr	r3, [r0, #4]
   39aa0:	add	r3, r3, #1
   39aa4:	str	r3, [r0, #4]
   39aa8:	ldr	r0, [r5, #16]
   39aac:	str	r0, [r2, #8]
   39ab0:	ldr	r0, [r5, #4]
   39ab4:	str	r0, [r2, #4]
   39ab8:	str	r6, [r1]
   39abc:	mov	r0, r5
   39ac0:	mov	r1, r6
   39ac4:	mov	r2, r4
   39ac8:	bl	37648 <flatcc_json_parser_generic_json@@Base>
   39acc:	mov	r4, r0
   39ad0:	mov	r0, r4
   39ad4:	sub	sp, fp, #16
   39ad8:	pop	{r4, r5, r6, r7, fp, pc}
   39adc:	ldr	r0, [r5, #24]
   39ae0:	cmp	r0, #0
   39ae4:	beq	39af4 <flatcc_json_parser_union@@Base+0x150>
   39ae8:	mov	r0, r4
   39aec:	sub	sp, fp, #16
   39af0:	pop	{r4, r5, r6, r7, fp, pc}
   39af4:	mov	r0, #25
   39af8:	b	399f4 <flatcc_json_parser_union@@Base+0x50>

00039afc <flatcc_json_parser_union_type@@Base>:
   39afc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   39b00:	add	fp, sp, #28
   39b04:	sub	sp, sp, #20
   39b08:	mov	r8, r1
   39b0c:	mov	r5, r0
   39b10:	ldr	r0, [r0]
   39b14:	ldr	r1, [fp, #12]
   39b18:	mov	r6, r3
   39b1c:	mov	r4, r2
   39b20:	bl	303d4 <flatcc_builder_get_user_frame_ptr@@Base>
   39b24:	add	r3, r6, r6, lsl #1
   39b28:	add	r2, r0, #8
   39b2c:	mov	r9, r0
   39b30:	add	sl, r2, r3, lsl #3
   39b34:	mov	r0, sl
   39b38:	ldrb	r1, [r0, #12]!
   39b3c:	cmp	r1, #0
   39b40:	beq	39b5c <flatcc_json_parser_union_type@@Base+0x60>
   39b44:	ldr	r0, [r5, #24]
   39b48:	cmp	r0, #0
   39b4c:	beq	39c44 <flatcc_json_parser_union_type@@Base+0x148>
   39b50:	mov	r0, r4
   39b54:	sub	sp, fp, #28
   39b58:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   39b5c:	mov	r1, #1
   39b60:	mov	r6, #0
   39b64:	mov	lr, sl
   39b68:	cmp	r8, r4
   39b6c:	str	r3, [sp, #4]
   39b70:	str	r2, [sp, #8]
   39b74:	strb	r1, [r0]
   39b78:	strb	r6, [lr, #13]!
   39b7c:	beq	39d64 <flatcc_json_parser_union_type@@Base+0x268>
   39b80:	mov	r2, r8
   39b84:	ldrb	ip, [r2], #1
   39b88:	cmp	ip, #45	; 0x2d
   39b8c:	movne	r2, r8
   39b90:	cmp	r2, r4
   39b94:	beq	39c6c <flatcc_json_parser_union_type@@Base+0x170>
   39b98:	mov	r6, #0
   39b9c:	mov	r0, #10
   39ba0:	mov	r7, #0
   39ba4:	ldrb	r1, [r2]
   39ba8:	sub	r3, r1, #48	; 0x30
   39bac:	uxtb	r3, r3
   39bb0:	cmp	r3, #9
   39bb4:	bhi	39cf8 <flatcc_json_parser_union_type@@Base+0x1fc>
   39bb8:	add	r3, r7, r7, lsl #2
   39bbc:	lsl	r3, r3, #1
   39bc0:	umlal	r1, r3, r6, r0
   39bc4:	subs	r1, r1, #48	; 0x30
   39bc8:	sbc	r3, r3, #0
   39bcc:	subs	r6, r1, r6
   39bd0:	sbcs	r7, r3, r7
   39bd4:	bcc	39d08 <flatcc_json_parser_union_type@@Base+0x20c>
   39bd8:	add	r2, r2, #1
   39bdc:	mov	r6, r1
   39be0:	mov	r7, r3
   39be4:	cmp	r4, r2
   39be8:	bne	39ba4 <flatcc_json_parser_union_type@@Base+0xa8>
   39bec:	mov	r0, #0
   39bf0:	mov	r2, r4
   39bf4:	mov	r6, r1
   39bf8:	mov	r7, r3
   39bfc:	cmp	r2, r8
   39c00:	beq	39d64 <flatcc_json_parser_union_type@@Base+0x268>
   39c04:	cmp	r0, #0
   39c08:	beq	39c84 <flatcc_json_parser_union_type@@Base+0x188>
   39c0c:	ldrb	r0, [r2]
   39c10:	cmp	r0, #46	; 0x2e
   39c14:	beq	39c24 <flatcc_json_parser_union_type@@Base+0x128>
   39c18:	cmp	r0, #101	; 0x65
   39c1c:	cmpne	r0, #69	; 0x45
   39c20:	bne	39c84 <flatcc_json_parser_union_type@@Base+0x188>
   39c24:	ldr	r0, [r5, #24]
   39c28:	mov	r6, #0
   39c2c:	mov	r7, #0
   39c30:	cmp	r0, #0
   39c34:	mov	r0, r4
   39c38:	bne	39d48 <flatcc_json_parser_union_type@@Base+0x24c>
   39c3c:	mov	r0, #12
   39c40:	b	39d24 <flatcc_json_parser_union_type@@Base+0x228>
   39c44:	str	r8, [r5, #36]	; 0x24
   39c48:	mov	r0, #28
   39c4c:	ldr	r1, [r5, #4]
   39c50:	sub	r1, r8, r1
   39c54:	add	r1, r1, #1
   39c58:	str	r1, [r5, #20]
   39c5c:	str	r0, [r5, #24]
   39c60:	mov	r0, r4
   39c64:	sub	sp, fp, #28
   39c68:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   39c6c:	mov	r2, r4
   39c70:	mov	r7, #0
   39c74:	mov	r0, #0
   39c78:	cmp	r2, r8
   39c7c:	bne	39c04 <flatcc_json_parser_union_type@@Base+0x108>
   39c80:	b	39d64 <flatcc_json_parser_union_type@@Base+0x268>
   39c84:	mov	r0, r2
   39c88:	cmp	r0, r8
   39c8c:	beq	39d64 <flatcc_json_parser_union_type@@Base+0x268>
   39c90:	cmp	ip, #45	; 0x2d
   39c94:	bne	39cb0 <flatcc_json_parser_union_type@@Base+0x1b4>
   39c98:	ldr	r1, [r5, #24]
   39c9c:	mov	r2, r4
   39ca0:	cmp	r1, #0
   39ca4:	bne	39d5c <flatcc_json_parser_union_type@@Base+0x260>
   39ca8:	mov	r1, #8
   39cac:	b	39cd0 <flatcc_json_parser_union_type@@Base+0x1d4>
   39cb0:	subs	r1, r6, #256	; 0x100
   39cb4:	sbcs	r1, r7, #0
   39cb8:	bcc	39d54 <flatcc_json_parser_union_type@@Base+0x258>
   39cbc:	ldr	r1, [r5, #24]
   39cc0:	mov	r2, r4
   39cc4:	cmp	r1, #0
   39cc8:	bne	39d5c <flatcc_json_parser_union_type@@Base+0x260>
   39ccc:	mov	r1, #7
   39cd0:	str	r0, [r5, #36]	; 0x24
   39cd4:	ldr	r2, [r5, #4]
   39cd8:	sub	r0, r0, r2
   39cdc:	mov	r2, r4
   39ce0:	add	r0, r0, #1
   39ce4:	str	r0, [r5, #20]
   39ce8:	str	r1, [r5, #24]
   39cec:	cmp	r2, r8
   39cf0:	bne	39d88 <flatcc_json_parser_union_type@@Base+0x28c>
   39cf4:	b	39d64 <flatcc_json_parser_union_type@@Base+0x268>
   39cf8:	mov	r0, #1
   39cfc:	cmp	r2, r8
   39d00:	bne	39c04 <flatcc_json_parser_union_type@@Base+0x108>
   39d04:	b	39d64 <flatcc_json_parser_union_type@@Base+0x268>
   39d08:	ldr	r0, [r5, #24]
   39d0c:	mov	r6, #0
   39d10:	mov	r7, #0
   39d14:	cmp	r0, #0
   39d18:	mov	r0, r4
   39d1c:	bne	39d48 <flatcc_json_parser_union_type@@Base+0x24c>
   39d20:	mov	r0, #8
   39d24:	str	r2, [r5, #36]	; 0x24
   39d28:	mov	r6, #0
   39d2c:	mov	r7, #0
   39d30:	ldr	r1, [r5, #4]
   39d34:	sub	r1, r2, r1
   39d38:	add	r1, r1, #1
   39d3c:	str	r1, [r5, #20]
   39d40:	str	r0, [r5, #24]
   39d44:	mov	r0, r4
   39d48:	cmp	r0, r8
   39d4c:	bne	39c90 <flatcc_json_parser_union_type@@Base+0x194>
   39d50:	b	39d64 <flatcc_json_parser_union_type@@Base+0x268>
   39d54:	mov	r2, r0
   39d58:	strb	r6, [lr]
   39d5c:	cmp	r2, r8
   39d60:	bne	39d88 <flatcc_json_parser_union_type@@Base+0x28c>
   39d64:	ldr	r3, [fp, #16]
   39d68:	mov	r0, r5
   39d6c:	mov	r1, r8
   39d70:	mov	r2, r4
   39d74:	str	lr, [sp]
   39d78:	mov	r6, lr
   39d7c:	bl	39e94 <flatcc_json_parser_union_type@@Base+0x398>
   39d80:	mov	lr, r6
   39d84:	mov	r2, r0
   39d88:	ldr	r0, [sp, #8]
   39d8c:	ldr	r1, [sp, #4]
   39d90:	ldr	r1, [r0, r1, lsl #3]
   39d94:	cmp	r1, #0
   39d98:	beq	39e38 <flatcc_json_parser_union_type@@Base+0x33c>
   39d9c:	ldr	r0, [r9, #4]
   39da0:	str	r2, [sp, #8]
   39da4:	cmp	r0, #0
   39da8:	beq	39e74 <flatcc_json_parser_union_type@@Base+0x378>
   39dac:	sub	r0, r0, #1
   39db0:	ldr	r6, [fp, #20]
   39db4:	mov	r2, r4
   39db8:	str	r0, [r9, #4]
   39dbc:	ldr	r0, [sl, #8]
   39dc0:	ldr	r8, [r5, #4]
   39dc4:	ldr	r7, [r5, #16]
   39dc8:	str	r0, [r5, #16]
   39dcc:	ldr	r0, [sl, #4]
   39dd0:	str	r0, [r5, #4]
   39dd4:	add	r0, sp, #12
   39dd8:	ldrb	r3, [lr]
   39ddc:	add	r0, r0, #4
   39de0:	str	r0, [sp]
   39de4:	mov	r0, r5
   39de8:	strb	r3, [sp, #12]
   39dec:	blx	r6
   39df0:	cmp	r0, r4
   39df4:	beq	39b50 <flatcc_json_parser_union_type@@Base+0x54>
   39df8:	ldr	r1, [fp, #8]
   39dfc:	ldr	r0, [r5]
   39e00:	ldr	r2, [sp, #12]
   39e04:	ldr	r3, [sp, #16]
   39e08:	bl	3306c <flatcc_builder_table_add_union@@Base>
   39e0c:	cmp	r0, #0
   39e10:	beq	39e5c <flatcc_json_parser_union_type@@Base+0x360>
   39e14:	ldr	r0, [r5, #24]
   39e18:	cmp	r0, #0
   39e1c:	bne	39b50 <flatcc_json_parser_union_type@@Base+0x54>
   39e20:	ldr	r2, [sp, #8]
   39e24:	mov	r0, #28
   39e28:	str	r2, [r5, #36]	; 0x24
   39e2c:	ldr	r1, [r5, #4]
   39e30:	sub	r1, r2, r1
   39e34:	b	39c54 <flatcc_json_parser_union_type@@Base+0x158>
   39e38:	ldrb	r0, [lr]
   39e3c:	ldr	r1, [r9, #4]
   39e40:	mov	r4, r2
   39e44:	cmp	r0, #0
   39e48:	addne	r1, r1, #1
   39e4c:	str	r1, [r9, #4]
   39e50:	mov	r0, r4
   39e54:	sub	sp, fp, #28
   39e58:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   39e5c:	ldr	r4, [sp, #8]
   39e60:	str	r8, [r5, #4]
   39e64:	str	r7, [r5, #16]
   39e68:	mov	r0, r4
   39e6c:	sub	sp, fp, #28
   39e70:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   39e74:	movw	r0, #59260	; 0xe77c
   39e78:	movw	r1, #59275	; 0xe78b
   39e7c:	movw	r3, #59349	; 0xe7d5
   39e80:	movw	r2, #965	; 0x3c5
   39e84:	movt	r0, #4
   39e88:	movt	r1, #4
   39e8c:	movt	r3, #4
   39e90:	bl	14f40 <__assert_fail@plt>
   39e94:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   39e98:	add	fp, sp, #28
   39e9c:	sub	sp, sp, #36	; 0x24
   39ea0:	mov	r4, r2
   39ea4:	mov	r2, r1
   39ea8:	ldr	r1, [fp, #8]
   39eac:	mov	r5, r0
   39eb0:	mov	r0, #0
   39eb4:	mov	r6, r3
   39eb8:	cmp	r2, r4
   39ebc:	strb	r0, [r1]
   39ec0:	beq	3a068 <flatcc_json_parser_union_type@@Base+0x56c>
   39ec4:	ldrb	r0, [r2]
   39ec8:	cmp	r0, #46	; 0x2e
   39ecc:	beq	39f38 <flatcc_json_parser_union_type@@Base+0x43c>
   39ed0:	cmp	r0, #34	; 0x22
   39ed4:	bne	3a060 <flatcc_json_parser_union_type@@Base+0x564>
   39ed8:	mov	r0, #0
   39edc:	add	r1, r2, #1
   39ee0:	str	r0, [r5, #12]
   39ee4:	ldr	r0, [r5, #12]
   39ee8:	cmp	r0, #0
   39eec:	bne	39f74 <flatcc_json_parser_union_type@@Base+0x478>
   39ef0:	sub	r0, r4, r1
   39ef4:	cmp	r0, #2
   39ef8:	blt	39f1c <flatcc_json_parser_union_type@@Base+0x420>
   39efc:	ldrb	r0, [r1]
   39f00:	cmp	r0, #32
   39f04:	bhi	39f74 <flatcc_json_parser_union_type@@Base+0x478>
   39f08:	bne	39f1c <flatcc_json_parser_union_type@@Base+0x420>
   39f0c:	mov	r7, r1
   39f10:	ldrb	r0, [r7, #1]!
   39f14:	cmp	r0, #32
   39f18:	bhi	39f2c <flatcc_json_parser_union_type@@Base+0x430>
   39f1c:	mov	r0, r5
   39f20:	mov	r2, r4
   39f24:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   39f28:	mov	r7, r0
   39f2c:	cmp	r7, r4
   39f30:	bne	39f80 <flatcc_json_parser_union_type@@Base+0x484>
   39f34:	b	3a054 <flatcc_json_parser_union_type@@Base+0x558>
   39f38:	ldr	r0, [r5, #24]
   39f3c:	mov	r1, r4
   39f40:	cmp	r0, #0
   39f44:	bne	3a06c <flatcc_json_parser_union_type@@Base+0x570>
   39f48:	str	r2, [r5, #36]	; 0x24
   39f4c:	mov	r0, #5
   39f50:	ldr	r1, [r5, #4]
   39f54:	sub	r1, r2, r1
   39f58:	add	r1, r1, #1
   39f5c:	str	r1, [r5, #20]
   39f60:	str	r0, [r5, #24]
   39f64:	mov	r1, r4
   39f68:	ldr	r0, [r5, #12]
   39f6c:	cmp	r0, #0
   39f70:	beq	39ef0 <flatcc_json_parser_union_type@@Base+0x3f4>
   39f74:	mov	r7, r1
   39f78:	cmp	r7, r4
   39f7c:	beq	3a054 <flatcc_json_parser_union_type@@Base+0x558>
   39f80:	add	sl, r6, #4
   39f84:	add	r8, sp, #24
   39f88:	add	r9, sp, #20
   39f8c:	str	r6, [sp, #12]
   39f90:	str	sl, [sp, #8]
   39f94:	ldr	r6, [r6]
   39f98:	add	r0, sp, #16
   39f9c:	mov	r1, r7
   39fa0:	mov	r2, r4
   39fa4:	mov	r3, r9
   39fa8:	str	r8, [sp]
   39fac:	str	r0, [sp, #4]
   39fb0:	mov	r0, r5
   39fb4:	blx	r6
   39fb8:	cmp	r0, r4
   39fbc:	beq	3a054 <flatcc_json_parser_union_type@@Base+0x558>
   39fc0:	cmp	r0, r7
   39fc4:	bne	39fd8 <flatcc_json_parser_union_type@@Base+0x4dc>
   39fc8:	ldr	r6, [sl], #4
   39fcc:	cmp	r6, #0
   39fd0:	bne	39f98 <flatcc_json_parser_union_type@@Base+0x49c>
   39fd4:	b	3a02c <flatcc_json_parser_union_type@@Base+0x530>
   39fd8:	ldr	r1, [sp, #20]
   39fdc:	cmp	r1, #0
   39fe0:	bne	3a07c <flatcc_json_parser_union_type@@Base+0x580>
   39fe4:	ldr	r1, [sp, #24]
   39fe8:	ldr	r2, [sp, #28]
   39fec:	subs	r3, r1, #256	; 0x100
   39ff0:	sbcs	r2, r2, #0
   39ff4:	bcs	3a090 <flatcc_json_parser_union_type@@Base+0x594>
   39ff8:	ldr	r2, [fp, #8]
   39ffc:	ldr	r6, [sp, #12]
   3a000:	ldr	sl, [sp, #8]
   3a004:	mov	r7, r0
   3a008:	mov	r3, r2
   3a00c:	ldrb	r2, [r2]
   3a010:	add	r1, r2, r1
   3a014:	strb	r1, [r3]
   3a018:	ldr	r1, [sp, #16]
   3a01c:	cmp	r1, #0
   3a020:	bne	39f94 <flatcc_json_parser_union_type@@Base+0x498>
   3a024:	sub	sp, fp, #28
   3a028:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3a02c:	ldr	r0, [r5, #24]
   3a030:	cmp	r0, #0
   3a034:	bne	3a054 <flatcc_json_parser_union_type@@Base+0x558>
   3a038:	str	r7, [r5, #36]	; 0x24
   3a03c:	mov	r0, #23
   3a040:	ldr	r1, [r5, #4]
   3a044:	sub	r1, r7, r1
   3a048:	add	r1, r1, #1
   3a04c:	str	r1, [r5, #20]
   3a050:	str	r0, [r5, #24]
   3a054:	mov	r0, r4
   3a058:	sub	sp, fp, #28
   3a05c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3a060:	mov	r0, #1
   3a064:	str	r0, [r5, #12]
   3a068:	mov	r1, r2
   3a06c:	ldr	r0, [r5, #12]
   3a070:	cmp	r0, #0
   3a074:	bne	39f74 <flatcc_json_parser_union_type@@Base+0x478>
   3a078:	b	39ef0 <flatcc_json_parser_union_type@@Base+0x3f4>
   3a07c:	ldr	r1, [r5, #24]
   3a080:	cmp	r1, #0
   3a084:	bne	3a054 <flatcc_json_parser_union_type@@Base+0x558>
   3a088:	mov	r1, #8
   3a08c:	b	3a0a0 <flatcc_json_parser_union_type@@Base+0x5a4>
   3a090:	ldr	r1, [r5, #24]
   3a094:	cmp	r1, #0
   3a098:	bne	3a054 <flatcc_json_parser_union_type@@Base+0x558>
   3a09c:	mov	r1, #7
   3a0a0:	str	r0, [r5, #36]	; 0x24
   3a0a4:	ldr	r2, [r5, #4]
   3a0a8:	sub	r0, r0, r2
   3a0ac:	add	r0, r0, #1
   3a0b0:	str	r0, [r5, #20]
   3a0b4:	str	r1, [r5, #24]
   3a0b8:	mov	r0, r4
   3a0bc:	sub	sp, fp, #28
   3a0c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003a0c4 <flatcc_json_parser_union_vector@@Base>:
   3a0c4:	push	{r4, r5, r6, r7, fp, lr}
   3a0c8:	add	fp, sp, #16
   3a0cc:	sub	sp, sp, #16
   3a0d0:	mov	r6, r1
   3a0d4:	mov	r5, r0
   3a0d8:	ldr	r0, [r0]
   3a0dc:	ldr	r1, [fp, #12]
   3a0e0:	mov	r7, r3
   3a0e4:	mov	r4, r2
   3a0e8:	bl	303d4 <flatcc_builder_get_user_frame_ptr@@Base>
   3a0ec:	add	r2, r0, #8
   3a0f0:	add	r3, r7, r7, lsl #1
   3a0f4:	mov	r1, r2
   3a0f8:	ldr	r7, [r1, r3, lsl #3]!
   3a0fc:	cmp	r7, #0
   3a100:	beq	3a11c <flatcc_json_parser_union_vector@@Base+0x58>
   3a104:	ldr	r0, [r5, #24]
   3a108:	cmp	r0, #0
   3a10c:	beq	3a168 <flatcc_json_parser_union_vector@@Base+0xa4>
   3a110:	mov	r0, r4
   3a114:	sub	sp, fp, #16
   3a118:	pop	{r4, r5, r6, r7, fp, pc}
   3a11c:	add	r2, r2, r3, lsl #3
   3a120:	ldr	r3, [r0, #4]
   3a124:	ldrb	r7, [r2, #12]
   3a128:	cmp	r7, #0
   3a12c:	beq	3a190 <flatcc_json_parser_union_vector@@Base+0xcc>
   3a130:	sub	r3, r3, #1
   3a134:	ldr	r1, [fp, #16]
   3a138:	ldr	r7, [fp, #8]
   3a13c:	str	r3, [r0, #4]
   3a140:	ldr	r0, [r2, #16]
   3a144:	ldr	r3, [r2, #20]
   3a148:	mov	r2, r4
   3a14c:	stm	sp, {r0, r7}
   3a150:	str	r1, [sp, #8]
   3a154:	mov	r0, r5
   3a158:	mov	r1, r6
   3a15c:	bl	3a1c4 <flatcc_json_parser_union_vector@@Base+0x100>
   3a160:	sub	sp, fp, #16
   3a164:	pop	{r4, r5, r6, r7, fp, pc}
   3a168:	str	r6, [r5, #36]	; 0x24
   3a16c:	mov	r0, #28
   3a170:	ldr	r1, [r5, #4]
   3a174:	sub	r1, r6, r1
   3a178:	add	r1, r1, #1
   3a17c:	str	r1, [r5, #20]
   3a180:	str	r0, [r5, #24]
   3a184:	mov	r0, r4
   3a188:	sub	sp, fp, #16
   3a18c:	pop	{r4, r5, r6, r7, fp, pc}
   3a190:	add	r3, r3, #1
   3a194:	str	r3, [r0, #4]
   3a198:	ldr	r0, [r5, #16]
   3a19c:	str	r0, [r2, #8]
   3a1a0:	ldr	r0, [r5, #4]
   3a1a4:	str	r0, [r2, #4]
   3a1a8:	str	r6, [r1]
   3a1ac:	mov	r0, r5
   3a1b0:	mov	r1, r6
   3a1b4:	mov	r2, r4
   3a1b8:	sub	sp, fp, #16
   3a1bc:	pop	{r4, r5, r6, r7, fp, lr}
   3a1c0:	b	37648 <flatcc_json_parser_generic_json@@Base>
   3a1c4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3a1c8:	add	fp, sp, #28
   3a1cc:	sub	sp, sp, #12
   3a1d0:	mov	r5, r0
   3a1d4:	mov	r0, #0
   3a1d8:	mov	r8, r3
   3a1dc:	mov	r6, r2
   3a1e0:	mov	r7, r1
   3a1e4:	str	r0, [sp, #8]
   3a1e8:	ldr	r0, [r5]
   3a1ec:	bl	31a78 <flatcc_builder_start_offset_vector@@Base>
   3a1f0:	cmp	r0, #0
   3a1f4:	beq	3a218 <flatcc_json_parser_union_vector@@Base+0x154>
   3a1f8:	ldr	r0, [r5, #24]
   3a1fc:	cmp	r0, #0
   3a200:	bne	3a2a0 <flatcc_json_parser_union_vector@@Base+0x1dc>
   3a204:	str	r7, [r5, #36]	; 0x24
   3a208:	mov	r0, #33	; 0x21
   3a20c:	ldr	r1, [r5, #4]
   3a210:	sub	r1, r7, r1
   3a214:	b	3a294 <flatcc_json_parser_union_vector@@Base+0x1d0>
   3a218:	ldr	sl, [fp, #8]
   3a21c:	cmp	r7, r6
   3a220:	beq	3a260 <flatcc_json_parser_union_vector@@Base+0x19c>
   3a224:	ldrb	r0, [r7]
   3a228:	cmp	r0, #91	; 0x5b
   3a22c:	bne	3a260 <flatcc_json_parser_union_vector@@Base+0x19c>
   3a230:	add	r1, r7, #1
   3a234:	sub	r0, r6, r1
   3a238:	cmp	r0, #2
   3a23c:	blt	3a348 <flatcc_json_parser_union_vector@@Base+0x284>
   3a240:	ldrb	r0, [r1]
   3a244:	cmp	r0, #32
   3a248:	bls	3a338 <flatcc_json_parser_union_vector@@Base+0x274>
   3a24c:	mov	r7, r1
   3a250:	cmp	r7, r6
   3a254:	mov	r4, r6
   3a258:	bne	3a364 <flatcc_json_parser_union_vector@@Base+0x2a0>
   3a25c:	b	3a3a0 <flatcc_json_parser_union_vector@@Base+0x2dc>
   3a260:	ldr	r0, [r5, #24]
   3a264:	mov	r9, r6
   3a268:	cmp	r0, #0
   3a26c:	beq	3a2ac <flatcc_json_parser_union_vector@@Base+0x1e8>
   3a270:	cmp	sl, #0
   3a274:	beq	3a2d4 <flatcc_json_parser_union_vector@@Base+0x210>
   3a278:	ldr	r0, [r5, #24]
   3a27c:	cmp	r0, #0
   3a280:	bne	3a2a0 <flatcc_json_parser_union_vector@@Base+0x1dc>
   3a284:	str	r9, [r5, #36]	; 0x24
   3a288:	mov	r0, #30
   3a28c:	ldr	r1, [r5, #4]
   3a290:	sub	r1, r9, r1
   3a294:	add	r1, r1, #1
   3a298:	str	r1, [r5, #20]
   3a29c:	str	r0, [r5, #24]
   3a2a0:	mov	r0, r6
   3a2a4:	sub	sp, fp, #28
   3a2a8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3a2ac:	str	r7, [r5, #36]	; 0x24
   3a2b0:	mov	r0, #22
   3a2b4:	mov	r9, r6
   3a2b8:	ldr	r1, [r5, #4]
   3a2bc:	sub	r1, r7, r1
   3a2c0:	add	r1, r1, #1
   3a2c4:	str	r1, [r5, #20]
   3a2c8:	str	r0, [r5, #24]
   3a2cc:	cmp	sl, #0
   3a2d0:	bne	3a278 <flatcc_json_parser_union_vector@@Base+0x1b4>
   3a2d4:	ldr	r0, [r5]
   3a2d8:	mov	r1, r8
   3a2dc:	bl	303d4 <flatcc_builder_get_user_frame_ptr@@Base>
   3a2e0:	mov	r1, r0
   3a2e4:	ldr	r0, [r5]
   3a2e8:	bl	32f80 <flatcc_builder_end_offset_vector_for_unions@@Base>
   3a2ec:	cmp	r0, #0
   3a2f0:	str	r0, [sp, #8]
   3a2f4:	beq	3a324 <flatcc_json_parser_union_vector@@Base+0x260>
   3a2f8:	ldr	r1, [fp, #12]
   3a2fc:	ldr	r0, [r5]
   3a300:	bl	3316c <flatcc_builder_table_add_offset@@Base>
   3a304:	cmp	r0, #0
   3a308:	beq	3a324 <flatcc_json_parser_union_vector@@Base+0x260>
   3a30c:	ldr	r1, [sp, #8]
   3a310:	mov	r6, r9
   3a314:	str	r1, [r0]
   3a318:	mov	r0, r6
   3a31c:	sub	sp, fp, #28
   3a320:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3a324:	mov	r7, r9
   3a328:	ldr	r0, [r5, #24]
   3a32c:	cmp	r0, #0
   3a330:	bne	3a2a0 <flatcc_json_parser_union_vector@@Base+0x1dc>
   3a334:	b	3a204 <flatcc_json_parser_union_vector@@Base+0x140>
   3a338:	bne	3a348 <flatcc_json_parser_union_vector@@Base+0x284>
   3a33c:	ldrb	r0, [r7, #2]!
   3a340:	cmp	r0, #32
   3a344:	bhi	3a358 <flatcc_json_parser_union_vector@@Base+0x294>
   3a348:	mov	r0, r5
   3a34c:	mov	r2, r6
   3a350:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   3a354:	mov	r7, r0
   3a358:	cmp	r7, r6
   3a35c:	mov	r4, r6
   3a360:	beq	3a3a0 <flatcc_json_parser_union_vector@@Base+0x2dc>
   3a364:	ldrb	r0, [r7]
   3a368:	cmp	r0, #93	; 0x5d
   3a36c:	bne	3a39c <flatcc_json_parser_union_vector@@Base+0x2d8>
   3a370:	add	r1, r7, #1
   3a374:	sub	r0, r6, r1
   3a378:	cmp	r0, #2
   3a37c:	blt	3a538 <flatcc_json_parser_union_vector@@Base+0x474>
   3a380:	ldrb	r0, [r1]
   3a384:	cmp	r0, #32
   3a388:	bls	3a524 <flatcc_json_parser_union_vector@@Base+0x460>
   3a38c:	mov	r9, r1
   3a390:	cmp	sl, #0
   3a394:	bne	3a278 <flatcc_json_parser_union_vector@@Base+0x1b4>
   3a398:	b	3a2d4 <flatcc_json_parser_union_vector@@Base+0x210>
   3a39c:	mov	r4, r7
   3a3a0:	cmp	sl, #0
   3a3a4:	beq	3a504 <flatcc_json_parser_union_vector@@Base+0x440>
   3a3a8:	add	r0, r6, #1
   3a3ac:	mov	sl, #0
   3a3b0:	add	r9, sp, #8
   3a3b4:	str	r0, [sp, #4]
   3a3b8:	ldr	r0, [r5]
   3a3bc:	mov	r1, r8
   3a3c0:	bl	303d4 <flatcc_builder_get_user_frame_ptr@@Base>
   3a3c4:	ldrb	r3, [r0, -sl]
   3a3c8:	ldr	r7, [fp, #16]
   3a3cc:	mov	r0, r5
   3a3d0:	mov	r1, r4
   3a3d4:	mov	r2, r6
   3a3d8:	str	r9, [sp]
   3a3dc:	blx	r7
   3a3e0:	cmp	r0, r6
   3a3e4:	beq	3a2a0 <flatcc_json_parser_union_vector@@Base+0x1dc>
   3a3e8:	mov	r7, r0
   3a3ec:	ldr	r0, [r5]
   3a3f0:	mov	r1, #1
   3a3f4:	bl	31234 <flatcc_builder_extend_offset_vector@@Base>
   3a3f8:	cmp	r0, #0
   3a3fc:	beq	3a1f8 <flatcc_json_parser_union_vector@@Base+0x134>
   3a400:	ldr	r1, [sp, #8]
   3a404:	str	r1, [r0]
   3a408:	sub	r0, r6, r7
   3a40c:	cmp	r0, #2
   3a410:	blt	3a494 <flatcc_json_parser_union_vector@@Base+0x3d0>
   3a414:	ldrb	r0, [r7]
   3a418:	cmp	r0, #32
   3a41c:	bls	3a480 <flatcc_json_parser_union_vector@@Base+0x3bc>
   3a420:	mov	r4, r7
   3a424:	cmp	r4, r6
   3a428:	beq	3a628 <flatcc_json_parser_union_vector@@Base+0x564>
   3a42c:	ldrb	r0, [r4]
   3a430:	cmp	r0, #44	; 0x2c
   3a434:	bne	3a554 <flatcc_json_parser_union_vector@@Base+0x490>
   3a438:	add	r1, r4, #1
   3a43c:	sub	r0, r6, r1
   3a440:	cmp	r0, #2
   3a444:	blt	3a4c4 <flatcc_json_parser_union_vector@@Base+0x400>
   3a448:	ldrb	r0, [r1]
   3a44c:	cmp	r0, #32
   3a450:	bls	3a4b4 <flatcc_json_parser_union_vector@@Base+0x3f0>
   3a454:	mov	r4, r1
   3a458:	cmp	r4, r6
   3a45c:	beq	3a4dc <flatcc_json_parser_union_vector@@Base+0x418>
   3a460:	ldrb	r0, [r4]
   3a464:	cmp	r0, #93	; 0x5d
   3a468:	beq	3a590 <flatcc_json_parser_union_vector@@Base+0x4cc>
   3a46c:	ldr	r0, [fp, #8]
   3a470:	sub	sl, sl, #1
   3a474:	adds	r0, r0, sl
   3a478:	bne	3a3b8 <flatcc_json_parser_union_vector@@Base+0x2f4>
   3a47c:	b	3a504 <flatcc_json_parser_union_vector@@Base+0x440>
   3a480:	bne	3a494 <flatcc_json_parser_union_vector@@Base+0x3d0>
   3a484:	mov	r4, r7
   3a488:	ldrb	r0, [r4, #1]!
   3a48c:	cmp	r0, #32
   3a490:	bhi	3a4a8 <flatcc_json_parser_union_vector@@Base+0x3e4>
   3a494:	mov	r0, r5
   3a498:	mov	r1, r7
   3a49c:	mov	r2, r6
   3a4a0:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   3a4a4:	mov	r4, r0
   3a4a8:	cmp	r4, r6
   3a4ac:	bne	3a42c <flatcc_json_parser_union_vector@@Base+0x368>
   3a4b0:	b	3a628 <flatcc_json_parser_union_vector@@Base+0x564>
   3a4b4:	bne	3a4c4 <flatcc_json_parser_union_vector@@Base+0x400>
   3a4b8:	ldrb	r0, [r4, #2]!
   3a4bc:	cmp	r0, #32
   3a4c0:	bhi	3a4d4 <flatcc_json_parser_union_vector@@Base+0x410>
   3a4c4:	mov	r0, r5
   3a4c8:	mov	r2, r6
   3a4cc:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   3a4d0:	mov	r4, r0
   3a4d4:	cmp	r4, r6
   3a4d8:	bne	3a460 <flatcc_json_parser_union_vector@@Base+0x39c>
   3a4dc:	ldr	r0, [r5, #24]
   3a4e0:	mov	r9, r6
   3a4e4:	cmp	r0, #0
   3a4e8:	bne	3a5f8 <flatcc_json_parser_union_vector@@Base+0x534>
   3a4ec:	str	r6, [r5, #36]	; 0x24
   3a4f0:	ldr	r2, [sp, #4]
   3a4f4:	mov	r0, #9
   3a4f8:	ldr	r1, [r5, #4]
   3a4fc:	sub	r1, r2, r1
   3a500:	b	3a620 <flatcc_json_parser_union_vector@@Base+0x55c>
   3a504:	ldr	r0, [r5, #24]
   3a508:	cmp	r0, #0
   3a50c:	bne	3a2a0 <flatcc_json_parser_union_vector@@Base+0x1dc>
   3a510:	str	r4, [r5, #36]	; 0x24
   3a514:	mov	r0, #30
   3a518:	ldr	r1, [r5, #4]
   3a51c:	sub	r1, r4, r1
   3a520:	b	3a294 <flatcc_json_parser_union_vector@@Base+0x1d0>
   3a524:	bne	3a538 <flatcc_json_parser_union_vector@@Base+0x474>
   3a528:	ldrb	r0, [r7, #2]!
   3a52c:	mov	r9, r7
   3a530:	cmp	r0, #32
   3a534:	bhi	3a270 <flatcc_json_parser_union_vector@@Base+0x1ac>
   3a538:	mov	r0, r5
   3a53c:	mov	r2, r6
   3a540:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   3a544:	mov	r9, r0
   3a548:	cmp	sl, #0
   3a54c:	bne	3a278 <flatcc_json_parser_union_vector@@Base+0x1b4>
   3a550:	b	3a2d4 <flatcc_json_parser_union_vector@@Base+0x210>
   3a554:	cmp	r0, #93	; 0x5d
   3a558:	bne	3a5e8 <flatcc_json_parser_union_vector@@Base+0x524>
   3a55c:	add	r1, r4, #1
   3a560:	sub	r0, r6, r1
   3a564:	cmp	r0, #2
   3a568:	blt	3a5c4 <flatcc_json_parser_union_vector@@Base+0x500>
   3a56c:	ldrb	r0, [r1]
   3a570:	cmp	r0, #32
   3a574:	bhi	3a5ac <flatcc_json_parser_union_vector@@Base+0x4e8>
   3a578:	bne	3a5c4 <flatcc_json_parser_union_vector@@Base+0x500>
   3a57c:	ldrb	r0, [r4, #2]!
   3a580:	mov	r9, r4
   3a584:	cmp	r0, #32
   3a588:	bhi	3a5f8 <flatcc_json_parser_union_vector@@Base+0x534>
   3a58c:	b	3a5c4 <flatcc_json_parser_union_vector@@Base+0x500>
   3a590:	add	r1, r4, #1
   3a594:	sub	r0, r6, r1
   3a598:	cmp	r0, #2
   3a59c:	blt	3a5c4 <flatcc_json_parser_union_vector@@Base+0x500>
   3a5a0:	ldrb	r0, [r1]
   3a5a4:	cmp	r0, #32
   3a5a8:	bls	3a578 <flatcc_json_parser_union_vector@@Base+0x4b4>
   3a5ac:	mov	r9, r1
   3a5b0:	ldr	r0, [fp, #8]
   3a5b4:	add	r0, r0, sl
   3a5b8:	cmp	r0, #1
   3a5bc:	bne	3a278 <flatcc_json_parser_union_vector@@Base+0x1b4>
   3a5c0:	b	3a2d4 <flatcc_json_parser_union_vector@@Base+0x210>
   3a5c4:	mov	r0, r5
   3a5c8:	mov	r2, r6
   3a5cc:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   3a5d0:	mov	r9, r0
   3a5d4:	ldr	r0, [fp, #8]
   3a5d8:	add	r0, r0, sl
   3a5dc:	cmp	r0, #1
   3a5e0:	bne	3a278 <flatcc_json_parser_union_vector@@Base+0x1b4>
   3a5e4:	b	3a2d4 <flatcc_json_parser_union_vector@@Base+0x210>
   3a5e8:	ldr	r0, [r5, #24]
   3a5ec:	mov	r9, r6
   3a5f0:	cmp	r0, #0
   3a5f4:	beq	3a60c <flatcc_json_parser_union_vector@@Base+0x548>
   3a5f8:	ldr	r0, [fp, #8]
   3a5fc:	add	r0, r0, sl
   3a600:	cmp	r0, #1
   3a604:	bne	3a278 <flatcc_json_parser_union_vector@@Base+0x1b4>
   3a608:	b	3a2d4 <flatcc_json_parser_union_vector@@Base+0x210>
   3a60c:	str	r4, [r5, #36]	; 0x24
   3a610:	mov	r0, #9
   3a614:	ldr	r1, [r5, #4]
   3a618:	sub	r1, r4, r1
   3a61c:	add	r1, r1, #1
   3a620:	str	r1, [r5, #20]
   3a624:	str	r0, [r5, #24]
   3a628:	mov	r9, r6
   3a62c:	ldr	r0, [fp, #8]
   3a630:	add	r0, r0, sl
   3a634:	cmp	r0, #1
   3a638:	bne	3a278 <flatcc_json_parser_union_vector@@Base+0x1b4>
   3a63c:	b	3a2d4 <flatcc_json_parser_union_vector@@Base+0x210>

0003a640 <flatcc_json_parser_union_type_vector@@Base>:
   3a640:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3a644:	add	fp, sp, #28
   3a648:	sub	sp, sp, #28
   3a64c:	mov	r7, r1
   3a650:	mov	r5, r0
   3a654:	ldr	r0, [r0]
   3a658:	ldr	r1, [fp, #12]
   3a65c:	mov	r4, r3
   3a660:	mov	r8, r2
   3a664:	bl	303d4 <flatcc_builder_get_user_frame_ptr@@Base>
   3a668:	add	r6, r4, r4, lsl #1
   3a66c:	add	r0, r0, #8
   3a670:	add	r4, r0, r6, lsl #3
   3a674:	mov	r0, r4
   3a678:	ldrb	r1, [r0, #12]!
   3a67c:	cmp	r1, #0
   3a680:	beq	3a6a4 <flatcc_json_parser_union_type_vector@@Base+0x64>
   3a684:	ldr	r0, [r5, #24]
   3a688:	cmp	r0, #0
   3a68c:	bne	3a6f4 <flatcc_json_parser_union_type_vector@@Base+0xb4>
   3a690:	str	r7, [r5, #36]	; 0x24
   3a694:	mov	r0, #28
   3a698:	ldr	r1, [r5, #4]
   3a69c:	sub	r1, r7, r1
   3a6a0:	b	3a6e8 <flatcc_json_parser_union_type_vector@@Base+0xa8>
   3a6a4:	mov	r1, #1
   3a6a8:	mov	r2, #1
   3a6ac:	mvn	r3, #0
   3a6b0:	strb	r1, [r0]
   3a6b4:	mov	r1, #1
   3a6b8:	ldr	r0, [r5]
   3a6bc:	bl	319ec <flatcc_builder_start_vector@@Base>
   3a6c0:	cmp	r0, #0
   3a6c4:	beq	3a700 <flatcc_json_parser_union_type_vector@@Base+0xc0>
   3a6c8:	mov	sl, r7
   3a6cc:	ldr	r0, [r5, #24]
   3a6d0:	cmp	r0, #0
   3a6d4:	bne	3a6f4 <flatcc_json_parser_union_type_vector@@Base+0xb4>
   3a6d8:	str	sl, [r5, #36]	; 0x24
   3a6dc:	mov	r0, #33	; 0x21
   3a6e0:	ldr	r1, [r5, #4]
   3a6e4:	sub	r1, sl, r1
   3a6e8:	add	r1, r1, #1
   3a6ec:	str	r1, [r5, #20]
   3a6f0:	str	r0, [r5, #24]
   3a6f4:	mov	r0, r8
   3a6f8:	sub	sp, fp, #28
   3a6fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3a700:	cmp	r7, r8
   3a704:	beq	3a744 <flatcc_json_parser_union_type_vector@@Base+0x104>
   3a708:	ldrb	r0, [r7]
   3a70c:	cmp	r0, #91	; 0x5b
   3a710:	bne	3a744 <flatcc_json_parser_union_type_vector@@Base+0x104>
   3a714:	add	r1, r7, #1
   3a718:	sub	r0, r8, r1
   3a71c:	cmp	r0, #2
   3a720:	blt	3a788 <flatcc_json_parser_union_type_vector@@Base+0x148>
   3a724:	ldrb	r0, [r1]
   3a728:	cmp	r0, #32
   3a72c:	bls	3a778 <flatcc_json_parser_union_type_vector@@Base+0x138>
   3a730:	mov	r7, r1
   3a734:	cmp	r7, r8
   3a738:	mov	sl, r8
   3a73c:	bne	3a7a4 <flatcc_json_parser_union_type_vector@@Base+0x164>
   3a740:	b	3a7e8 <flatcc_json_parser_union_type_vector@@Base+0x1a8>
   3a744:	ldr	r0, [r5, #24]
   3a748:	cmp	r0, #0
   3a74c:	mov	r0, r8
   3a750:	bne	3ac68 <flatcc_json_parser_union_type_vector@@Base+0x628>
   3a754:	str	r7, [r5, #36]	; 0x24
   3a758:	mov	r0, #22
   3a75c:	ldr	r1, [r5, #4]
   3a760:	sub	r1, r7, r1
   3a764:	add	r1, r1, #1
   3a768:	str	r1, [r5, #20]
   3a76c:	str	r0, [r5, #24]
   3a770:	mov	r0, r8
   3a774:	b	3ac68 <flatcc_json_parser_union_type_vector@@Base+0x628>
   3a778:	bne	3a788 <flatcc_json_parser_union_type_vector@@Base+0x148>
   3a77c:	ldrb	r0, [r7, #2]!
   3a780:	cmp	r0, #32
   3a784:	bhi	3a798 <flatcc_json_parser_union_type_vector@@Base+0x158>
   3a788:	mov	r0, r5
   3a78c:	mov	r2, r8
   3a790:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   3a794:	mov	r7, r0
   3a798:	cmp	r7, r8
   3a79c:	mov	sl, r8
   3a7a0:	beq	3a7e8 <flatcc_json_parser_union_type_vector@@Base+0x1a8>
   3a7a4:	ldrb	r0, [r7]
   3a7a8:	cmp	r0, #93	; 0x5d
   3a7ac:	bne	3a7e4 <flatcc_json_parser_union_type_vector@@Base+0x1a4>
   3a7b0:	add	r1, r7, #1
   3a7b4:	sub	r0, r8, r1
   3a7b8:	cmp	r0, #2
   3a7bc:	blt	3ac5c <flatcc_json_parser_union_type_vector@@Base+0x61c>
   3a7c0:	ldrb	r0, [r1]
   3a7c4:	cmp	r0, #32
   3a7c8:	bhi	3abe8 <flatcc_json_parser_union_type_vector@@Base+0x5a8>
   3a7cc:	bne	3ac5c <flatcc_json_parser_union_type_vector@@Base+0x61c>
   3a7d0:	ldrb	r0, [r7, #2]!
   3a7d4:	cmp	r0, #32
   3a7d8:	mov	r0, r7
   3a7dc:	bls	3ac5c <flatcc_json_parser_union_type_vector@@Base+0x61c>
   3a7e0:	b	3ac68 <flatcc_json_parser_union_type_vector@@Base+0x628>
   3a7e4:	mov	sl, r7
   3a7e8:	ldr	r0, [r5]
   3a7ec:	mov	r1, #1
   3a7f0:	bl	30e98 <flatcc_builder_extend_vector@@Base>
   3a7f4:	cmp	r0, #0
   3a7f8:	beq	3a6cc <flatcc_json_parser_union_type_vector@@Base+0x8c>
   3a7fc:	mov	r1, r0
   3a800:	add	r0, r8, #1
   3a804:	str	r4, [sp, #16]
   3a808:	str	r0, [sp, #12]
   3a80c:	mov	r9, #0
   3a810:	cmp	sl, r8
   3a814:	mov	r4, r8
   3a818:	str	r1, [sp, #20]
   3a81c:	strb	r9, [sp, #27]
   3a820:	beq	3aa44 <flatcc_json_parser_union_type_vector@@Base+0x404>
   3a824:	mov	r2, sl
   3a828:	mov	r9, #0
   3a82c:	ldrb	ip, [r2], #1
   3a830:	cmp	ip, #45	; 0x2d
   3a834:	movne	r2, sl
   3a838:	cmp	r2, r8
   3a83c:	beq	3a8b4 <flatcc_json_parser_union_type_vector@@Base+0x274>
   3a840:	mov	r7, #0
   3a844:	mov	r0, #0
   3a848:	mov	r4, #10
   3a84c:	ldrb	r1, [r2]
   3a850:	sub	r3, r1, #48	; 0x30
   3a854:	uxtb	r3, r3
   3a858:	cmp	r3, #9
   3a85c:	bhi	3a8d4 <flatcc_json_parser_union_type_vector@@Base+0x294>
   3a860:	add	r3, r0, r0, lsl #2
   3a864:	lsl	r3, r3, #1
   3a868:	umlal	r1, r3, r7, r4
   3a86c:	subs	r1, r1, #48	; 0x30
   3a870:	sbc	r3, r3, #0
   3a874:	subs	r7, r1, r7
   3a878:	sbcs	r0, r3, r0
   3a87c:	bcc	3a958 <flatcc_json_parser_union_type_vector@@Base+0x318>
   3a880:	add	r2, r2, #1
   3a884:	mov	r7, r1
   3a888:	mov	r0, r3
   3a88c:	cmp	r8, r2
   3a890:	bne	3a84c <flatcc_json_parser_union_type_vector@@Base+0x20c>
   3a894:	mov	lr, #0
   3a898:	mov	r2, r8
   3a89c:	mov	r7, r1
   3a8a0:	mov	r0, r3
   3a8a4:	cmp	r2, sl
   3a8a8:	mov	r4, sl
   3a8ac:	bne	3a8e4 <flatcc_json_parser_union_type_vector@@Base+0x2a4>
   3a8b0:	b	3aa44 <flatcc_json_parser_union_type_vector@@Base+0x404>
   3a8b4:	mov	r2, r8
   3a8b8:	mov	r7, #0
   3a8bc:	mov	r0, #0
   3a8c0:	mov	lr, #0
   3a8c4:	cmp	r2, sl
   3a8c8:	mov	r4, sl
   3a8cc:	bne	3a8e4 <flatcc_json_parser_union_type_vector@@Base+0x2a4>
   3a8d0:	b	3aa44 <flatcc_json_parser_union_type_vector@@Base+0x404>
   3a8d4:	mov	lr, #1
   3a8d8:	cmp	r2, sl
   3a8dc:	mov	r4, sl
   3a8e0:	beq	3aa44 <flatcc_json_parser_union_type_vector@@Base+0x404>
   3a8e4:	cmp	lr, #0
   3a8e8:	beq	3a938 <flatcc_json_parser_union_type_vector@@Base+0x2f8>
   3a8ec:	ldrb	r1, [r2]
   3a8f0:	cmp	r1, #46	; 0x2e
   3a8f4:	beq	3a904 <flatcc_json_parser_union_type_vector@@Base+0x2c4>
   3a8f8:	cmp	r1, #101	; 0x65
   3a8fc:	cmpne	r1, #69	; 0x45
   3a900:	bne	3a9a8 <flatcc_json_parser_union_type_vector@@Base+0x368>
   3a904:	ldr	r0, [r5, #24]
   3a908:	mov	r7, #0
   3a90c:	mov	r4, r8
   3a910:	cmp	r0, #0
   3a914:	mov	r0, #0
   3a918:	bne	3a9ac <flatcc_json_parser_union_type_vector@@Base+0x36c>
   3a91c:	str	r2, [r5, #36]	; 0x24
   3a920:	ldr	r0, [r5, #4]
   3a924:	sub	r0, r2, r0
   3a928:	add	r0, r0, #1
   3a92c:	str	r0, [r5, #20]
   3a930:	mov	r0, #12
   3a934:	b	3a988 <flatcc_json_parser_union_type_vector@@Base+0x348>
   3a938:	mov	r4, r2
   3a93c:	mov	r9, #0
   3a940:	cmp	r4, sl
   3a944:	bne	3a9b8 <flatcc_json_parser_union_type_vector@@Base+0x378>
   3a948:	mov	r4, sl
   3a94c:	cmp	sl, r4
   3a950:	bne	3aa80 <flatcc_json_parser_union_type_vector@@Base+0x440>
   3a954:	b	3aa4c <flatcc_json_parser_union_type_vector@@Base+0x40c>
   3a958:	ldr	r0, [r5, #24]
   3a95c:	mov	r7, #0
   3a960:	mov	r4, r8
   3a964:	cmp	r0, #0
   3a968:	mov	r0, #0
   3a96c:	bne	3a9ac <flatcc_json_parser_union_type_vector@@Base+0x36c>
   3a970:	str	r2, [r5, #36]	; 0x24
   3a974:	ldr	r0, [r5, #4]
   3a978:	sub	r0, r2, r0
   3a97c:	add	r0, r0, #1
   3a980:	str	r0, [r5, #20]
   3a984:	mov	r0, #8
   3a988:	str	r0, [r5, #24]
   3a98c:	mov	r7, #0
   3a990:	mov	r0, #0
   3a994:	mov	r4, r8
   3a998:	mov	r9, #0
   3a99c:	cmp	r4, sl
   3a9a0:	bne	3a9b8 <flatcc_json_parser_union_type_vector@@Base+0x378>
   3a9a4:	b	3a948 <flatcc_json_parser_union_type_vector@@Base+0x308>
   3a9a8:	mov	r4, r2
   3a9ac:	mov	r9, #0
   3a9b0:	cmp	r4, sl
   3a9b4:	beq	3a948 <flatcc_json_parser_union_type_vector@@Base+0x308>
   3a9b8:	cmp	ip, #45	; 0x2d
   3a9bc:	bne	3a9e8 <flatcc_json_parser_union_type_vector@@Base+0x3a8>
   3a9c0:	ldr	r0, [r5, #24]
   3a9c4:	cmp	r0, #0
   3a9c8:	bne	3aa00 <flatcc_json_parser_union_type_vector@@Base+0x3c0>
   3a9cc:	str	r4, [r5, #36]	; 0x24
   3a9d0:	ldr	r0, [r5, #4]
   3a9d4:	sub	r0, r4, r0
   3a9d8:	add	r0, r0, #1
   3a9dc:	str	r0, [r5, #20]
   3a9e0:	mov	r0, #8
   3a9e4:	b	3aa3c <flatcc_json_parser_union_type_vector@@Base+0x3fc>
   3a9e8:	subs	r1, r7, #256	; 0x100
   3a9ec:	sbcs	r0, r0, #0
   3a9f0:	bcc	3aa10 <flatcc_json_parser_union_type_vector@@Base+0x3d0>
   3a9f4:	ldr	r0, [r5, #24]
   3a9f8:	cmp	r0, #0
   3a9fc:	beq	3aa24 <flatcc_json_parser_union_type_vector@@Base+0x3e4>
   3aa00:	mov	r4, r8
   3aa04:	cmp	sl, r4
   3aa08:	bne	3aa80 <flatcc_json_parser_union_type_vector@@Base+0x440>
   3aa0c:	b	3aa4c <flatcc_json_parser_union_type_vector@@Base+0x40c>
   3aa10:	mov	r9, r7
   3aa14:	strb	r7, [sp, #27]
   3aa18:	cmp	sl, r4
   3aa1c:	bne	3aa80 <flatcc_json_parser_union_type_vector@@Base+0x440>
   3aa20:	b	3aa4c <flatcc_json_parser_union_type_vector@@Base+0x40c>
   3aa24:	str	r4, [r5, #36]	; 0x24
   3aa28:	ldr	r0, [r5, #4]
   3aa2c:	sub	r0, r4, r0
   3aa30:	add	r0, r0, #1
   3aa34:	str	r0, [r5, #20]
   3aa38:	mov	r0, #7
   3aa3c:	str	r0, [r5, #24]
   3aa40:	mov	r4, r8
   3aa44:	cmp	sl, r4
   3aa48:	bne	3aa80 <flatcc_json_parser_union_type_vector@@Base+0x440>
   3aa4c:	ldr	r3, [fp, #16]
   3aa50:	add	r0, sp, #27
   3aa54:	mov	r1, sl
   3aa58:	mov	r2, r8
   3aa5c:	str	r0, [sp]
   3aa60:	mov	r0, r5
   3aa64:	bl	39e94 <flatcc_json_parser_union_type@@Base+0x398>
   3aa68:	mov	r4, r0
   3aa6c:	cmp	r0, sl
   3aa70:	beq	3ac14 <flatcc_json_parser_union_type_vector@@Base+0x5d4>
   3aa74:	cmp	r4, r8
   3aa78:	beq	3ac14 <flatcc_json_parser_union_type_vector@@Base+0x5d4>
   3aa7c:	ldrb	r9, [sp, #27]
   3aa80:	ldr	r1, [fp, #24]
   3aa84:	uxtb	r0, r9
   3aa88:	blx	r1
   3aa8c:	cmp	r0, #0
   3aa90:	bne	3aaa8 <flatcc_json_parser_union_type_vector@@Base+0x468>
   3aa94:	ldrb	r0, [r5, #8]
   3aa98:	tst	r0, #1
   3aa9c:	beq	3ac28 <flatcc_json_parser_union_type_vector@@Base+0x5e8>
   3aaa0:	mov	r9, #0
   3aaa4:	strb	r9, [sp, #27]
   3aaa8:	ldr	r0, [sp, #20]
   3aaac:	strb	r9, [r0]
   3aab0:	sub	r0, r8, r4
   3aab4:	cmp	r0, #2
   3aab8:	blt	3ab48 <flatcc_json_parser_union_type_vector@@Base+0x508>
   3aabc:	ldrb	r0, [r4]
   3aac0:	cmp	r0, #32
   3aac4:	bls	3ab34 <flatcc_json_parser_union_type_vector@@Base+0x4f4>
   3aac8:	mov	sl, r4
   3aacc:	cmp	sl, r8
   3aad0:	beq	3abb8 <flatcc_json_parser_union_type_vector@@Base+0x578>
   3aad4:	ldrb	r0, [sl]
   3aad8:	ldr	r4, [sp, #16]
   3aadc:	cmp	r0, #44	; 0x2c
   3aae0:	bne	3abc4 <flatcc_json_parser_union_type_vector@@Base+0x584>
   3aae4:	add	r1, sl, #1
   3aae8:	sub	r0, r8, r1
   3aaec:	cmp	r0, #2
   3aaf0:	blt	3ab78 <flatcc_json_parser_union_type_vector@@Base+0x538>
   3aaf4:	ldrb	r0, [r1]
   3aaf8:	cmp	r0, #32
   3aafc:	bls	3ab68 <flatcc_json_parser_union_type_vector@@Base+0x528>
   3ab00:	mov	sl, r1
   3ab04:	cmp	sl, r8
   3ab08:	beq	3ab90 <flatcc_json_parser_union_type_vector@@Base+0x550>
   3ab0c:	ldrb	r0, [sl]
   3ab10:	cmp	r0, #93	; 0x5d
   3ab14:	beq	3abcc <flatcc_json_parser_union_type_vector@@Base+0x58c>
   3ab18:	ldr	r0, [r5]
   3ab1c:	mov	r1, #1
   3ab20:	bl	30e98 <flatcc_builder_extend_vector@@Base>
   3ab24:	mov	r1, r0
   3ab28:	cmp	r0, #0
   3ab2c:	bne	3a80c <flatcc_json_parser_union_type_vector@@Base+0x1cc>
   3ab30:	b	3a6cc <flatcc_json_parser_union_type_vector@@Base+0x8c>
   3ab34:	bne	3ab48 <flatcc_json_parser_union_type_vector@@Base+0x508>
   3ab38:	mov	sl, r4
   3ab3c:	ldrb	r0, [sl, #1]!
   3ab40:	cmp	r0, #32
   3ab44:	bhi	3ab5c <flatcc_json_parser_union_type_vector@@Base+0x51c>
   3ab48:	mov	r0, r5
   3ab4c:	mov	r1, r4
   3ab50:	mov	r2, r8
   3ab54:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   3ab58:	mov	sl, r0
   3ab5c:	cmp	sl, r8
   3ab60:	bne	3aad4 <flatcc_json_parser_union_type_vector@@Base+0x494>
   3ab64:	b	3abb8 <flatcc_json_parser_union_type_vector@@Base+0x578>
   3ab68:	bne	3ab78 <flatcc_json_parser_union_type_vector@@Base+0x538>
   3ab6c:	ldrb	r0, [sl, #2]!
   3ab70:	cmp	r0, #32
   3ab74:	bhi	3ab88 <flatcc_json_parser_union_type_vector@@Base+0x548>
   3ab78:	mov	r0, r5
   3ab7c:	mov	r2, r8
   3ab80:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   3ab84:	mov	sl, r0
   3ab88:	cmp	sl, r8
   3ab8c:	bne	3ab0c <flatcc_json_parser_union_type_vector@@Base+0x4cc>
   3ab90:	ldr	r0, [r5, #24]
   3ab94:	cmp	r0, #0
   3ab98:	mov	r0, r8
   3ab9c:	bne	3ac68 <flatcc_json_parser_union_type_vector@@Base+0x628>
   3aba0:	str	r8, [r5, #36]	; 0x24
   3aba4:	ldr	r2, [sp, #12]
   3aba8:	mov	r0, #9
   3abac:	ldr	r1, [r5, #4]
   3abb0:	sub	r1, r2, r1
   3abb4:	b	3a768 <flatcc_json_parser_union_type_vector@@Base+0x128>
   3abb8:	ldr	r4, [sp, #16]
   3abbc:	mov	r0, r8
   3abc0:	b	3ac68 <flatcc_json_parser_union_type_vector@@Base+0x628>
   3abc4:	cmp	r0, #93	; 0x5d
   3abc8:	bne	3abf0 <flatcc_json_parser_union_type_vector@@Base+0x5b0>
   3abcc:	add	r1, sl, #1
   3abd0:	sub	r0, r8, r1
   3abd4:	cmp	r0, #2
   3abd8:	blt	3ac5c <flatcc_json_parser_union_type_vector@@Base+0x61c>
   3abdc:	ldrb	r0, [r1]
   3abe0:	cmp	r0, #32
   3abe4:	bls	3ac48 <flatcc_json_parser_union_type_vector@@Base+0x608>
   3abe8:	mov	r0, r1
   3abec:	b	3ac68 <flatcc_json_parser_union_type_vector@@Base+0x628>
   3abf0:	ldr	r0, [r5, #24]
   3abf4:	cmp	r0, #0
   3abf8:	mov	r0, r8
   3abfc:	bne	3ac68 <flatcc_json_parser_union_type_vector@@Base+0x628>
   3ac00:	str	sl, [r5, #36]	; 0x24
   3ac04:	mov	r0, #9
   3ac08:	ldr	r1, [r5, #4]
   3ac0c:	sub	r1, sl, r1
   3ac10:	b	3a764 <flatcc_json_parser_union_type_vector@@Base+0x124>
   3ac14:	mov	sl, r4
   3ac18:	ldr	r0, [r5, #24]
   3ac1c:	cmp	r0, #0
   3ac20:	bne	3a6f4 <flatcc_json_parser_union_type_vector@@Base+0xb4>
   3ac24:	b	3a6d8 <flatcc_json_parser_union_type_vector@@Base+0x98>
   3ac28:	ldr	r0, [r5, #24]
   3ac2c:	cmp	r0, #0
   3ac30:	bne	3a6f4 <flatcc_json_parser_union_type_vector@@Base+0xb4>
   3ac34:	str	r4, [r5, #36]	; 0x24
   3ac38:	mov	r0, #15
   3ac3c:	ldr	r1, [r5, #4]
   3ac40:	sub	r1, r4, r1
   3ac44:	b	3a6e8 <flatcc_json_parser_union_type_vector@@Base+0xa8>
   3ac48:	bne	3ac5c <flatcc_json_parser_union_type_vector@@Base+0x61c>
   3ac4c:	ldrb	r0, [sl, #2]!
   3ac50:	cmp	r0, #32
   3ac54:	mov	r0, sl
   3ac58:	bhi	3ac68 <flatcc_json_parser_union_type_vector@@Base+0x628>
   3ac5c:	mov	r0, r5
   3ac60:	mov	r2, r8
   3ac64:	bl	36b4c <flatcc_json_parser_space_ext@@Base>
   3ac68:	mov	sl, r0
   3ac6c:	ldr	r0, [r5]
   3ac70:	bl	32d54 <flatcc_builder_vector_count@@Base>
   3ac74:	str	r0, [r4, #16]
   3ac78:	mov	r7, r0
   3ac7c:	ldr	r0, [r5]
   3ac80:	mov	r1, r7
   3ac84:	bl	30240 <flatcc_builder_enter_user_frame@@Base>
   3ac88:	mov	r9, r0
   3ac8c:	ldr	r0, [r5]
   3ac90:	mov	r1, r9
   3ac94:	bl	303d4 <flatcc_builder_get_user_frame_ptr@@Base>
   3ac98:	mov	r4, r0
   3ac9c:	ldr	r0, [r5]
   3aca0:	bl	32d60 <flatcc_builder_vector_edit@@Base>
   3aca4:	mov	r1, r0
   3aca8:	mov	r0, r4
   3acac:	mov	r2, r7
   3acb0:	bl	14e5c <memcpy@plt>
   3acb4:	ldr	r0, [r5]
   3acb8:	bl	32c64 <flatcc_builder_end_vector@@Base>
   3acbc:	cmp	r0, #0
   3acc0:	beq	3a6cc <flatcc_json_parser_union_type_vector@@Base+0x8c>
   3acc4:	ldr	r1, [fp, #8]
   3acc8:	mov	r4, r0
   3accc:	ldr	r0, [r5]
   3acd0:	sub	r1, r1, #1
   3acd4:	bl	3316c <flatcc_builder_table_add_offset@@Base>
   3acd8:	cmp	r0, #0
   3acdc:	beq	3a6cc <flatcc_json_parser_union_type_vector@@Base+0x8c>
   3ace0:	str	r4, [r0]
   3ace4:	ldr	r1, [fp, #12]
   3ace8:	ldr	r0, [r5]
   3acec:	bl	303d4 <flatcc_builder_get_user_frame_ptr@@Base>
   3acf0:	add	r2, r0, #8
   3acf4:	mov	r3, r2
   3acf8:	ldr	r1, [r3, r6, lsl #3]!
   3acfc:	str	r9, [r3, #20]
   3ad00:	ldr	r3, [r0, #4]
   3ad04:	cmp	r1, #0
   3ad08:	beq	3ad78 <flatcc_json_parser_union_type_vector@@Base+0x738>
   3ad0c:	cmp	r3, #0
   3ad10:	beq	3ad90 <flatcc_json_parser_union_type_vector@@Base+0x750>
   3ad14:	sub	r3, r3, #1
   3ad18:	ldr	ip, [fp, #20]
   3ad1c:	str	r3, [r0, #4]
   3ad20:	add	r0, r2, r6, lsl #3
   3ad24:	mov	r3, r9
   3ad28:	ldr	r6, [r5, #4]
   3ad2c:	ldr	r4, [r5, #16]
   3ad30:	ldr	r2, [r0, #8]
   3ad34:	str	r2, [r5, #16]
   3ad38:	mov	r2, r8
   3ad3c:	ldr	r0, [r0, #4]
   3ad40:	str	r0, [r5, #4]
   3ad44:	ldr	r0, [fp, #8]
   3ad48:	str	r7, [sp]
   3ad4c:	stmib	sp, {r0, ip}
   3ad50:	mov	r0, r5
   3ad54:	bl	3a1c4 <flatcc_json_parser_union_vector@@Base+0x100>
   3ad58:	cmp	r0, r8
   3ad5c:	beq	3a6f4 <flatcc_json_parser_union_type_vector@@Base+0xb4>
   3ad60:	str	r6, [r5, #4]
   3ad64:	str	r4, [r5, #16]
   3ad68:	mov	r8, sl
   3ad6c:	mov	r0, r8
   3ad70:	sub	sp, fp, #28
   3ad74:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3ad78:	add	r1, r3, #1
   3ad7c:	str	r1, [r0, #4]
   3ad80:	mov	r8, sl
   3ad84:	mov	r0, r8
   3ad88:	sub	sp, fp, #28
   3ad8c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3ad90:	movw	r0, #59260	; 0xe77c
   3ad94:	movw	r1, #59275	; 0xe78b
   3ad98:	movw	r3, #59553	; 0xe8a1
   3ad9c:	movw	r2, #1122	; 0x462
   3ada0:	movt	r0, #4
   3ada4:	movt	r1, #4
   3ada8:	movt	r3, #4
   3adac:	bl	14f40 <__assert_fail@plt>

0003adb0 <flatcc_json_parser_table_as_root@@Base>:
   3adb0:	push	{r4, r5, r6, r7, fp, lr}
   3adb4:	add	fp, sp, #16
   3adb8:	sub	sp, sp, #48	; 0x30
   3adbc:	cmp	r1, #0
   3adc0:	vmov.i32	q8, #0	; 0x00000000
   3adc4:	add	r5, sp, #4
   3adc8:	mov	r6, r0
   3adcc:	add	r7, r2, r3
   3add0:	mov	r4, r2
   3add4:	movne	r5, r1
   3add8:	mov	r1, #1
   3addc:	add	r0, r5, #12
   3ade0:	vst1.32	{d16-d17}, [r0]
   3ade4:	add	r0, r5, #28
   3ade8:	vst1.32	{d16-d17}, [r0]
   3adec:	ldr	r0, [fp, #8]
   3adf0:	str	r2, [r5, #4]
   3adf4:	str	r6, [r5]
   3adf8:	str	r0, [r5, #8]
   3adfc:	str	r1, [r5, #16]
   3ae00:	mov	r1, #2
   3ae04:	str	r2, [r5, #28]
   3ae08:	str	r7, [r5, #32]
   3ae0c:	str	r2, [r5, #36]	; 0x24
   3ae10:	mov	r2, #0
   3ae14:	and	r3, r1, r0, lsr #1
   3ae18:	ldr	r1, [fp, #12]
   3ae1c:	mov	r0, r6
   3ae20:	bl	309ac <flatcc_builder_start_buffer@@Base>
   3ae24:	mov	r1, r0
   3ae28:	mvn	r0, #0
   3ae2c:	cmp	r1, #0
   3ae30:	bne	3ae58 <flatcc_json_parser_table_as_root@@Base+0xa8>
   3ae34:	ldr	ip, [fp, #16]
   3ae38:	mov	r3, sp
   3ae3c:	mov	r0, r5
   3ae40:	mov	r1, r4
   3ae44:	mov	r2, r7
   3ae48:	blx	ip
   3ae4c:	ldr	r0, [r5, #24]
   3ae50:	cmp	r0, #0
   3ae54:	beq	3ae60 <flatcc_json_parser_table_as_root@@Base+0xb0>
   3ae58:	sub	sp, fp, #16
   3ae5c:	pop	{r4, r5, r6, r7, fp, pc}
   3ae60:	ldr	r1, [sp]
   3ae64:	mov	r0, r6
   3ae68:	bl	30b9c <flatcc_builder_end_buffer@@Base>
   3ae6c:	cmp	r0, #0
   3ae70:	mvn	r0, #0
   3ae74:	movne	r0, #0
   3ae78:	strne	r4, [r5, #40]	; 0x28
   3ae7c:	sub	sp, fp, #16
   3ae80:	pop	{r4, r5, r6, r7, fp, pc}

0003ae84 <flatcc_json_parser_struct_as_root@@Base>:
   3ae84:	push	{r4, r5, r6, r7, fp, lr}
   3ae88:	add	fp, sp, #16
   3ae8c:	sub	sp, sp, #48	; 0x30
   3ae90:	cmp	r1, #0
   3ae94:	vmov.i32	q8, #0	; 0x00000000
   3ae98:	add	r5, sp, #4
   3ae9c:	mov	r6, r0
   3aea0:	add	r7, r2, r3
   3aea4:	mov	r4, r2
   3aea8:	movne	r5, r1
   3aeac:	mov	r1, #1
   3aeb0:	add	r0, r5, #12
   3aeb4:	vst1.32	{d16-d17}, [r0]
   3aeb8:	add	r0, r5, #28
   3aebc:	vst1.32	{d16-d17}, [r0]
   3aec0:	ldr	r0, [fp, #8]
   3aec4:	str	r2, [r5, #4]
   3aec8:	str	r6, [r5]
   3aecc:	str	r0, [r5, #8]
   3aed0:	str	r1, [r5, #16]
   3aed4:	mov	r1, #2
   3aed8:	str	r2, [r5, #28]
   3aedc:	str	r7, [r5, #32]
   3aee0:	str	r2, [r5, #36]	; 0x24
   3aee4:	mov	r2, #0
   3aee8:	and	r3, r1, r0, lsr #1
   3aeec:	ldr	r1, [fp, #12]
   3aef0:	mov	r0, r6
   3aef4:	bl	309ac <flatcc_builder_start_buffer@@Base>
   3aef8:	mov	r1, r0
   3aefc:	mvn	r0, #0
   3af00:	cmp	r1, #0
   3af04:	bne	3af2c <flatcc_json_parser_struct_as_root@@Base+0xa8>
   3af08:	ldr	ip, [fp, #16]
   3af0c:	mov	r3, sp
   3af10:	mov	r0, r5
   3af14:	mov	r1, r4
   3af18:	mov	r2, r7
   3af1c:	blx	ip
   3af20:	ldr	r0, [r5, #24]
   3af24:	cmp	r0, #0
   3af28:	beq	3af34 <flatcc_json_parser_struct_as_root@@Base+0xb0>
   3af2c:	sub	sp, fp, #16
   3af30:	pop	{r4, r5, r6, r7, fp, pc}
   3af34:	ldr	r1, [sp]
   3af38:	mov	r0, r6
   3af3c:	bl	30b9c <flatcc_builder_end_buffer@@Base>
   3af40:	cmp	r0, #0
   3af44:	mvn	r0, #0
   3af48:	movne	r0, #0
   3af4c:	strne	r4, [r5, #40]	; 0x28
   3af50:	sub	sp, fp, #16
   3af54:	pop	{r4, r5, r6, r7, fp, pc}

0003af58 <flatcc_json_printer_error_string@@Base>:
   3af58:	cmp	r0, #3
   3af5c:	movwhi	r0, #56166	; 0xdb66
   3af60:	movthi	r0, #4
   3af64:	bxhi	lr
   3af68:	movw	r1, #62916	; 0xf5c4
   3af6c:	movt	r1, #4
   3af70:	ldr	r0, [r1, r0, lsl #2]
   3af74:	bx	lr

0003af78 <flatcc_json_printer_fmt_float@@Base>:
   3af78:	vcvt.f64.f32	d0, s0
   3af7c:	b	3af80 <flatcc_json_printer_fmt_float@@Base+0x8>
   3af80:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3af84:	add	fp, sp, #28
   3af88:	sub	sp, sp, #92	; 0x5c
   3af8c:	cmp	r0, #0
   3af90:	beq	3be3c <flatcc_json_printer_fmt_float@@Base+0xec4>
   3af94:	vmov	r3, r2, d0
   3af98:	mov	ip, r0
   3af9c:	mov	r0, #-2147483648	; 0x80000000
   3afa0:	mov	r6, #0
   3afa4:	orr	r1, r0, #266338304	; 0xfe00000
   3afa8:	orr	r1, r1, #1879048192	; 0x70000000
   3afac:	lsl	r7, r2, #1
   3afb0:	subs	r6, r6, r3, lsl #1
   3afb4:	orr	r7, r7, r3, lsr #31
   3afb8:	sbcs	r1, r1, r7
   3afbc:	bcs	3afd8 <flatcc_json_printer_fmt_float@@Base+0x60>
   3afc0:	movw	r1, #60711	; 0xed27
   3afc4:	mov	r0, ip
   3afc8:	movt	r1, #4
   3afcc:	sub	sp, fp, #28
   3afd0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3afd4:	b	14f28 <sprintf@plt>
   3afd8:	cmn	r2, #1
   3afdc:	ble	3afe8 <flatcc_json_printer_fmt_float@@Base+0x70>
   3afe0:	mov	r5, ip
   3afe4:	b	3affc <flatcc_json_printer_fmt_float@@Base+0x84>
   3afe8:	vneg.f64	d0, d0
   3afec:	mov	r1, #45	; 0x2d
   3aff0:	mov	r5, ip
   3aff4:	eor	r2, r2, r0
   3aff8:	strb	r1, [r5], #1
   3affc:	movw	r0, #0
   3b000:	movt	r0, #32752	; 0x7ff0
   3b004:	eor	r1, r2, r0
   3b008:	orrs	r1, r3, r1
   3b00c:	beq	3b02c <flatcc_json_printer_fmt_float@@Base+0xb4>
   3b010:	orrs	r1, r3, r2
   3b014:	bne	3b044 <flatcc_json_printer_fmt_float@@Base+0xcc>
   3b018:	mov	r0, #48	; 0x30
   3b01c:	strh	r0, [r5], -ip
   3b020:	add	r0, r5, #1
   3b024:	sub	sp, fp, #28
   3b028:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3b02c:	movw	r0, #28265	; 0x6e69
   3b030:	movt	r0, #102	; 0x66
   3b034:	str	r0, [r5], -ip
   3b038:	add	r0, r5, #3
   3b03c:	sub	sp, fp, #28
   3b040:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3b044:	vmov	lr, r9, d0
   3b048:	str	r5, [fp, #-32]	; 0xffffffe0
   3b04c:	ands	r1, r9, r0
   3b050:	bfc	r9, #20, #12
   3b054:	str	r1, [fp, #-40]	; 0xffffffd8
   3b058:	beq	3b070 <flatcc_json_printer_fmt_float@@Base+0xf8>
   3b05c:	movw	r0, #64461	; 0xfbcd
   3b060:	orr	r4, r9, #1048576	; 0x100000
   3b064:	movt	r0, #65535	; 0xffff
   3b068:	add	r3, r0, r1, lsr #20
   3b06c:	b	3b084 <flatcc_json_printer_fmt_float@@Base+0x10c>
   3b070:	orrs	r0, lr, r9
   3b074:	beq	3be7c <flatcc_json_printer_fmt_float@@Base+0xf04>
   3b078:	movw	r3, #64462	; 0xfbce
   3b07c:	mov	r4, r9
   3b080:	movt	r3, #65535	; 0xffff
   3b084:	mov	r0, lr
   3b088:	mov	r2, r4
   3b08c:	mov	r7, r3
   3b090:	lsl	r1, r2, #10
   3b094:	sub	r7, r7, #10
   3b098:	orr	r2, r1, r0, lsr #22
   3b09c:	lsl	r0, r0, #10
   3b0a0:	cmp	r2, #4194304	; 0x400000
   3b0a4:	bcc	3b090 <flatcc_json_printer_fmt_float@@Base+0x118>
   3b0a8:	mvn	r5, #0
   3b0ac:	cmp	r2, #0
   3b0b0:	bmi	3b0d8 <flatcc_json_printer_fmt_float@@Base+0x160>
   3b0b4:	lsl	r1, r2, #1
   3b0b8:	sub	r7, r7, #1
   3b0bc:	orr	r2, r1, r0, lsr #31
   3b0c0:	lsl	r1, r0, #1
   3b0c4:	subs	r0, r5, r0, lsl #1
   3b0c8:	sbcs	r0, r5, r2
   3b0cc:	mov	r0, r1
   3b0d0:	blt	3b0b4 <flatcc_json_printer_fmt_float@@Base+0x13c>
   3b0d4:	b	3b0dc <flatcc_json_printer_fmt_float@@Base+0x164>
   3b0d8:	mov	r1, r0
   3b0dc:	lsl	r6, r4, #1
   3b0e0:	mov	r0, #1
   3b0e4:	sub	sl, r3, #1
   3b0e8:	str	r4, [fp, #-44]	; 0xffffffd4
   3b0ec:	str	r3, [fp, #-36]	; 0xffffffdc
   3b0f0:	orr	r8, r6, lr, lsr #31
   3b0f4:	mov	r6, #0
   3b0f8:	orr	r0, r0, lr, lsl #1
   3b0fc:	cmp	r6, r8, lsr #22
   3b100:	bne	3b430 <flatcc_json_printer_fmt_float@@Base+0x4b8>
   3b104:	mov	r6, r8
   3b108:	mov	r4, sl
   3b10c:	lsl	r3, r6, #10
   3b110:	sub	r4, r4, #10
   3b114:	orr	r6, r3, r0, lsr #22
   3b118:	lsl	r0, r0, #10
   3b11c:	cmp	r6, #4194304	; 0x400000
   3b120:	bcc	3b10c <flatcc_json_printer_fmt_float@@Base+0x194>
   3b124:	subs	r3, r5, r0
   3b128:	str	ip, [sp, #44]	; 0x2c
   3b12c:	sbcs	r3, r5, r6
   3b130:	blt	3b448 <flatcc_json_printer_fmt_float@@Base+0x4d0>
   3b134:	mov	ip, r0
   3b138:	vcmpe.f64	d0, #0.0
   3b13c:	vmrs	APSR_nzcv, fpscr
   3b140:	ble	3b474 <flatcc_json_printer_fmt_float@@Base+0x4fc>
   3b144:	vldr	d16, [pc, #852]	; 3b4a0 <flatcc_json_printer_fmt_float@@Base+0x528>
   3b148:	vcmpe.f64	d0, d16
   3b14c:	vmrs	APSR_nzcv, fpscr
   3b150:	bhi	3b474 <flatcc_json_printer_fmt_float@@Base+0x4fc>
   3b154:	ldr	r5, [fp, #-40]	; 0xffffffd8
   3b158:	orrs	r3, lr, r9
   3b15c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   3b160:	vldr	d16, [pc, #832]	; 3b4a8 <flatcc_json_printer_fmt_float@@Base+0x530>
   3b164:	movwne	r3, #1
   3b168:	clz	r5, r5
   3b16c:	lsl	r0, r0, #2
   3b170:	lsr	r5, r5, #5
   3b174:	orrs	r3, r3, r5
   3b178:	mvn	r5, #60	; 0x3c
   3b17c:	sub	r5, r5, r7
   3b180:	orreq	r8, r0, lr, lsr #30
   3b184:	lsl	r0, lr, #2
   3b188:	lslne	r0, lr, #1
   3b18c:	vmov	s2, r5
   3b190:	subs	r5, r0, #1
   3b194:	sbc	lr, r8, #0
   3b198:	cmp	r3, #0
   3b19c:	vcvt.f64.s32	d17, s2
   3b1a0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3b1a4:	subeq	sl, r0, #2
   3b1a8:	vmul.f64	d16, d17, d16
   3b1ac:	sub	r3, sl, r4
   3b1b0:	rsb	r0, r3, #32
   3b1b4:	lsl	sl, r5, r3
   3b1b8:	lsr	r0, r5, r0
   3b1bc:	orr	r0, r0, lr, lsl r3
   3b1c0:	subs	lr, r3, #32
   3b1c4:	lslpl	r0, r5, lr
   3b1c8:	movwpl	sl, #0
   3b1cc:	vcvt.s32.f64	s2, d16
   3b1d0:	vcmpe.f64	d16, #0.0
   3b1d4:	str	r0, [fp, #-36]	; 0xffffffdc
   3b1d8:	vmrs	APSR_nzcv, fpscr
   3b1dc:	vmov	r5, s2
   3b1e0:	bmi	3b1f8 <flatcc_json_printer_fmt_float@@Base+0x280>
   3b1e4:	vcvt.f64.s32	d17, s2
   3b1e8:	vsub.f64	d16, d16, d17
   3b1ec:	vcmp.f64	d16, #0.0
   3b1f0:	vmrs	APSR_nzcv, fpscr
   3b1f4:	addne	r5, r5, #1
   3b1f8:	movw	r0, #347	; 0x15b
   3b1fc:	bic	r1, r1, #1
   3b200:	add	r0, r5, r0
   3b204:	asr	r5, r0, #31
   3b208:	add	r0, r0, r5, lsr #29
   3b20c:	mvn	r5, #14
   3b210:	and	r0, r5, r0, lsl #1
   3b214:	movw	r5, #61464	; 0xf018
   3b218:	movt	r5, #4
   3b21c:	add	r0, r0, r5
   3b220:	ldrd	r8, [r0, #16]
   3b224:	str	r0, [sp, #48]	; 0x30
   3b228:	umull	r0, r5, r9, ip
   3b22c:	str	r0, [fp, #-40]	; 0xffffffd8
   3b230:	umull	r0, lr, r8, r6
   3b234:	umaal	lr, r5, r9, r6
   3b238:	umull	r6, r3, r8, ip
   3b23c:	ldr	r6, [fp, #-40]	; 0xffffffd8
   3b240:	adds	r0, r0, r3
   3b244:	mov	r3, #0
   3b248:	adc	r3, r3, #0
   3b24c:	adds	r0, r0, r6
   3b250:	adc	r3, r3, #0
   3b254:	adds	r0, r0, #-2147483648	; 0x80000000
   3b258:	adcs	r0, lr, r3
   3b25c:	adc	r3, r5, #0
   3b260:	adds	r0, r0, #1
   3b264:	str	r0, [sp, #52]	; 0x34
   3b268:	adc	ip, r3, #0
   3b26c:	umull	r0, r3, r9, sl
   3b270:	str	r0, [fp, #-40]	; 0xffffffd8
   3b274:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3b278:	umull	lr, r5, r8, r0
   3b27c:	umaal	r5, r3, r9, r0
   3b280:	umull	r0, r6, r8, sl
   3b284:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3b288:	adds	sl, lr, r6
   3b28c:	mov	r6, #0
   3b290:	mov	lr, ip
   3b294:	adc	r6, r6, #0
   3b298:	adds	r0, sl, r0
   3b29c:	adc	r6, r6, #0
   3b2a0:	adds	r0, r0, #-2147483648	; 0x80000000
   3b2a4:	adcs	r0, r5, r6
   3b2a8:	umull	r6, r5, r9, r1
   3b2ac:	adc	r3, r3, #0
   3b2b0:	subs	ip, r0, #1
   3b2b4:	sbc	sl, r3, #0
   3b2b8:	umull	r0, r3, r8, r2
   3b2bc:	umaal	r3, r5, r9, r2
   3b2c0:	umull	r1, r2, r8, r1
   3b2c4:	mov	r1, #0
   3b2c8:	ldr	r8, [sp, #52]	; 0x34
   3b2cc:	str	r1, [sp, #56]	; 0x38
   3b2d0:	mov	r1, #0
   3b2d4:	adds	r0, r0, r2
   3b2d8:	bic	r2, r6, #1
   3b2dc:	adc	r1, r1, #0
   3b2e0:	adds	r0, r0, r2
   3b2e4:	adc	r1, r1, #0
   3b2e8:	adds	r0, r0, #-2147483648	; 0x80000000
   3b2ec:	adcs	r0, r3, r1
   3b2f0:	str	r0, [sp, #32]
   3b2f4:	adc	r0, r5, #0
   3b2f8:	subs	r9, r8, ip
   3b2fc:	str	r0, [sp, #36]	; 0x24
   3b300:	sbcs	r0, lr, sl
   3b304:	str	r0, [fp, #-36]	; 0xffffffdc
   3b308:	bcc	3be5c <flatcc_json_printer_fmt_float@@Base+0xee4>
   3b30c:	ldr	r0, [sp, #48]	; 0x30
   3b310:	ldrsh	r0, [r0, #24]
   3b314:	add	r0, r0, #64	; 0x40
   3b318:	add	r1, r0, r4
   3b31c:	add	r2, r0, r7
   3b320:	movw	r7, #1233	; 0x4d1
   3b324:	str	r1, [sp, #28]
   3b328:	mvn	r1, #31
   3b32c:	rsb	ip, r2, #0
   3b330:	add	r3, r2, #32
   3b334:	str	r2, [sp, #24]
   3b338:	subs	r5, r1, r2
   3b33c:	movw	r1, #14609	; 0x3911
   3b340:	lsr	r0, r8, ip
   3b344:	movt	r1, #1
   3b348:	orr	r0, r0, lr, lsl r3
   3b34c:	lsrpl	r0, lr, r5
   3b350:	mla	r6, r2, r7, r1
   3b354:	mov	r1, #1
   3b358:	mov	r2, #1
   3b35c:	lsr	r3, r2, r3
   3b360:	add	r4, r1, r6, asr #12
   3b364:	movw	r1, #62856	; 0xf588
   3b368:	movt	r1, #4
   3b36c:	ldr	r7, [r1, r4, lsl #2]
   3b370:	cmp	r7, r0
   3b374:	lsl	r7, r2, ip
   3b378:	asrhi	r4, r6, #12
   3b37c:	cmp	r5, #0
   3b380:	movwpl	r7, #0
   3b384:	lslpl	r3, r2, r5
   3b388:	subs	r5, r7, #1
   3b38c:	str	r7, [sp, #60]	; 0x3c
   3b390:	sbc	r6, r3, #0
   3b394:	and	r8, r8, r5
   3b398:	cmp	r4, #0
   3b39c:	str	r3, [sp, #20]
   3b3a0:	str	lr, [sp, #40]	; 0x28
   3b3a4:	str	ip, [fp, #-40]	; 0xffffffd8
   3b3a8:	str	r5, [fp, #-44]	; 0xffffffd4
   3b3ac:	and	r2, lr, r6
   3b3b0:	str	r6, [fp, #-48]	; 0xffffffd0
   3b3b4:	ble	3b494 <flatcc_json_printer_fmt_float@@Base+0x51c>
   3b3b8:	ldr	sl, [r1, r4, lsl #2]
   3b3bc:	sub	r1, r4, #1
   3b3c0:	mov	lr, #0
   3b3c4:	str	r1, [fp, #-52]	; 0xffffffcc
   3b3c8:	udiv	r1, r0, sl
   3b3cc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3b3d0:	subs	r4, ip, #32
   3b3d4:	mls	r0, r1, sl, r0
   3b3d8:	add	r6, r1, #48	; 0x30
   3b3dc:	rsb	r1, ip, #32
   3b3e0:	strb	r6, [r3, lr]
   3b3e4:	lsr	r3, r0, r1
   3b3e8:	lsl	r7, r0, ip
   3b3ec:	lslpl	r3, r0, r4
   3b3f0:	movwpl	r7, #0
   3b3f4:	adds	r7, r7, r8
   3b3f8:	adc	r3, r3, r2
   3b3fc:	subs	r5, r7, r9
   3b400:	ldr	r5, [fp, #-36]	; 0xffffffdc
   3b404:	sbcs	r5, r3, r5
   3b408:	bcc	3b4b0 <flatcc_json_printer_fmt_float@@Base+0x538>
   3b40c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   3b410:	cmp	r1, lr
   3b414:	beq	3b5fc <flatcc_json_printer_fmt_float@@Base+0x684>
   3b418:	movw	r1, #52429	; 0xcccd
   3b41c:	add	lr, lr, #1
   3b420:	movt	r1, #52428	; 0xcccc
   3b424:	umull	r1, r3, sl, r1
   3b428:	lsr	sl, r3, #3
   3b42c:	b	3b3c8 <flatcc_json_printer_fmt_float@@Base+0x450>
   3b430:	mov	r4, sl
   3b434:	mov	r6, r8
   3b438:	subs	r3, r5, r0
   3b43c:	str	ip, [sp, #44]	; 0x2c
   3b440:	sbcs	r3, r5, r6
   3b444:	bge	3b134 <flatcc_json_printer_fmt_float@@Base+0x1bc>
   3b448:	lsl	r3, r6, #1
   3b44c:	lsl	ip, r0, #1
   3b450:	sub	r4, r4, #1
   3b454:	orr	r6, r3, r0, lsr #31
   3b458:	subs	r0, r5, r0, lsl #1
   3b45c:	sbcs	r0, r5, r6
   3b460:	mov	r0, ip
   3b464:	blt	3b448 <flatcc_json_printer_fmt_float@@Base+0x4d0>
   3b468:	vcmpe.f64	d0, #0.0
   3b46c:	vmrs	APSR_nzcv, fpscr
   3b470:	bgt	3b144 <flatcc_json_printer_fmt_float@@Base+0x1cc>
   3b474:	movw	r0, #60731	; 0xed3b
   3b478:	movw	r1, #60584	; 0xeca8
   3b47c:	movw	r3, #60768	; 0xed60
   3b480:	mov	r2, #138	; 0x8a
   3b484:	movt	r0, #4
   3b488:	movt	r1, #4
   3b48c:	movt	r3, #4
   3b490:	bl	14f40 <__assert_fail@plt>
   3b494:	mov	r1, r2
   3b498:	b	3b610 <flatcc_json_printer_fmt_float@@Base+0x698>
   3b49c:	nop	{0}
   3b4a0:			; <UNDEFINED> instruction: 0xffffffff
   3b4a4:	svcvc	0x00efffff
   3b4a8:			; <UNDEFINED> instruction: 0x509f79fe
   3b4ac:	svccc	0x00d34413
   3b4b0:	str	lr, [fp, #-44]	; 0xffffffd4
   3b4b4:	ldr	r8, [sp, #52]	; 0x34
   3b4b8:	ldr	r0, [sp, #32]
   3b4bc:	subs	r2, r8, r0
   3b4c0:	str	r2, [sp, #60]	; 0x3c
   3b4c4:	ldr	lr, [sp, #40]	; 0x28
   3b4c8:	ldr	r5, [sp, #36]	; 0x24
   3b4cc:	sbc	r2, lr, r5
   3b4d0:	str	r2, [sp, #56]	; 0x38
   3b4d4:	ldr	r2, [sp, #28]
   3b4d8:	ldr	ip, [sp, #24]
   3b4dc:	cmp	r2, ip
   3b4e0:	bne	3be5c <flatcc_json_printer_fmt_float@@Base+0xee4>
   3b4e4:	subs	r0, r8, r0
   3b4e8:	sbcs	r0, lr, r5
   3b4ec:	bcc	3be5c <flatcc_json_printer_fmt_float@@Base+0xee4>
   3b4f0:	ldr	r5, [fp, #-36]	; 0xffffffdc
   3b4f4:	lsr	lr, sl, r1
   3b4f8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   3b4fc:	subs	r0, r9, r7
   3b500:	sbc	r2, r5, r3
   3b504:	cmp	r4, #0
   3b508:	lsl	r8, sl, r1
   3b50c:	mov	r1, #0
   3b510:	lslpl	lr, sl, r4
   3b514:	movwpl	r8, #0
   3b518:	str	r2, [fp, #-40]	; 0xffffffd8
   3b51c:	subs	r5, r0, r8
   3b520:	sbcs	r5, r2, lr
   3b524:	ldr	r5, [sp, #60]	; 0x3c
   3b528:	movwcc	r1, #1
   3b52c:	adds	r2, r5, #1
   3b530:	str	r2, [fp, #-48]	; 0xffffffd0
   3b534:	ldr	r4, [sp, #56]	; 0x38
   3b538:	adc	r2, r4, #0
   3b53c:	subs	sl, r5, #1
   3b540:	sbc	ip, r4, #0
   3b544:	subs	r4, r7, sl
   3b548:	str	r2, [fp, #-56]	; 0xffffffc8
   3b54c:	sbcs	r4, r3, ip
   3b550:	bcs	3b8f0 <flatcc_json_printer_fmt_float@@Base+0x978>
   3b554:	subs	r0, r0, r8
   3b558:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3b55c:	sbcs	r0, r0, lr
   3b560:	bcc	3b8f0 <flatcc_json_printer_fmt_float@@Base+0x978>
   3b564:	adds	r0, r7, r8
   3b568:	adc	r4, r3, lr
   3b56c:	subs	r1, r0, sl
   3b570:	sbcs	r1, r4, ip
   3b574:	bcc	3b5ac <flatcc_json_printer_fmt_float@@Base+0x634>
   3b578:	subs	r1, r0, sl
   3b57c:	mov	r5, lr
   3b580:	mov	lr, r8
   3b584:	sbc	r2, r4, ip
   3b588:	str	r2, [fp, #-40]	; 0xffffffd8
   3b58c:	subs	r2, sl, r7
   3b590:	sbc	r8, ip, r3
   3b594:	subs	r1, r2, r1
   3b598:	ldr	r1, [fp, #-40]	; 0xffffffd8
   3b59c:	sbcs	r1, r8, r1
   3b5a0:	mov	r8, lr
   3b5a4:	mov	lr, r5
   3b5a8:	bcc	3b8ec <flatcc_json_printer_fmt_float@@Base+0x974>
   3b5ac:	ldr	r1, [fp, #-44]	; 0xffffffd4
   3b5b0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   3b5b4:	sub	r6, r6, #1
   3b5b8:	subs	r3, r9, r0
   3b5bc:	strb	r6, [r2, r1]
   3b5c0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   3b5c4:	sbc	r7, r1, r4
   3b5c8:	subs	r1, r3, r8
   3b5cc:	sbcs	r1, r7, lr
   3b5d0:	mov	r1, #0
   3b5d4:	movwcc	r1, #1
   3b5d8:	subs	r5, r0, sl
   3b5dc:	sbcs	r5, r4, ip
   3b5e0:	bcs	3b8f8 <flatcc_json_printer_fmt_float@@Base+0x980>
   3b5e4:	subs	r3, r3, r8
   3b5e8:	sbcs	r3, r7, lr
   3b5ec:	mov	r7, r0
   3b5f0:	mov	r3, r4
   3b5f4:	bcs	3b564 <flatcc_json_printer_fmt_float@@Base+0x5ec>
   3b5f8:	b	3b8f8 <flatcc_json_printer_fmt_float@@Base+0x980>
   3b5fc:	ldr	r0, [fp, #-52]	; 0xffffffcc
   3b600:	mov	r1, r2
   3b604:	sub	r4, r0, lr
   3b608:	add	r0, lr, #1
   3b60c:	str	r0, [sp, #56]	; 0x38
   3b610:	rsb	r0, ip, #32
   3b614:	mov	r3, r1
   3b618:	mov	r5, #0
   3b61c:	mov	r1, r8
   3b620:	str	r0, [fp, #-52]	; 0xffffffcc
   3b624:	sub	r0, ip, #32
   3b628:	mov	ip, #1
   3b62c:	str	r0, [fp, #-56]	; 0xffffffc8
   3b630:	mov	r0, r9
   3b634:	ldr	lr, [sp, #56]	; 0x38
   3b638:	ldr	r6, [fp, #-36]	; 0xffffffdc
   3b63c:	mov	r2, #10
   3b640:	mov	sl, r5
   3b644:	mov	r8, ip
   3b648:	add	r6, r6, r6, lsl #2
   3b64c:	umull	r2, r7, r1, r2
   3b650:	ldr	r1, [fp, #-40]	; 0xffffffd8
   3b654:	add	r9, sl, sl, lsl #2
   3b658:	lsr	r5, r2, r1
   3b65c:	mov	r1, r4
   3b660:	add	r4, r3, r3, lsl #2
   3b664:	ldr	r3, [fp, #-52]	; 0xffffffcc
   3b668:	add	r4, r7, r4, lsl #1
   3b66c:	orr	r7, r5, r4, lsl r3
   3b670:	ldr	r3, [fp, #-56]	; 0xffffffc8
   3b674:	cmp	r3, #0
   3b678:	lsrpl	r7, r4, r3
   3b67c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3b680:	add	r7, r7, #48	; 0x30
   3b684:	strb	r7, [r3, lr]
   3b688:	mov	r3, #10
   3b68c:	add	lr, lr, #1
   3b690:	umull	ip, r5, ip, r3
   3b694:	umull	r0, r3, r0, r3
   3b698:	add	r6, r3, r6, lsl #1
   3b69c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3b6a0:	add	r5, r5, r9, lsl #1
   3b6a4:	and	r3, r4, r3
   3b6a8:	mov	r4, r1
   3b6ac:	ldr	r1, [fp, #-44]	; 0xffffffd4
   3b6b0:	sub	r4, r4, #1
   3b6b4:	and	r1, r2, r1
   3b6b8:	subs	r2, r1, r0
   3b6bc:	sbcs	r2, r3, r6
   3b6c0:	bcs	3b63c <flatcc_json_printer_fmt_float@@Base+0x6c4>
   3b6c4:	str	r1, [fp, #-52]	; 0xffffffcc
   3b6c8:	str	r3, [sp, #16]
   3b6cc:	str	r9, [sp, #12]
   3b6d0:	str	r8, [fp, #-56]	; 0xffffffc8
   3b6d4:	stmib	sp, {r4, sl}
   3b6d8:	str	r0, [fp, #-40]	; 0xffffffd8
   3b6dc:	str	lr, [sp, #56]	; 0x38
   3b6e0:	ldr	r0, [sp, #28]
   3b6e4:	ldr	r1, [sp, #24]
   3b6e8:	ldr	r2, [sp, #52]	; 0x34
   3b6ec:	ldr	r3, [sp, #36]	; 0x24
   3b6f0:	ldr	r4, [sp, #32]
   3b6f4:	cmp	r0, r1
   3b6f8:	ldr	r0, [sp, #40]	; 0x28
   3b6fc:	bne	3be5c <flatcc_json_printer_fmt_float@@Base+0xee4>
   3b700:	subs	r1, r2, r4
   3b704:	sbcs	r1, r0, r3
   3b708:	bcc	3be5c <flatcc_json_printer_fmt_float@@Base+0xee4>
   3b70c:	subs	r1, r2, r4
   3b710:	sbc	r2, r0, r3
   3b714:	umull	r3, r4, ip, r1
   3b718:	mla	r2, ip, r2, r4
   3b71c:	mla	r1, r5, r1, r2
   3b720:	adds	r8, r3, ip
   3b724:	adc	r0, r1, r5
   3b728:	subs	r4, r3, ip
   3b72c:	mov	ip, #0
   3b730:	str	r0, [sp, #52]	; 0x34
   3b734:	sbc	r3, r1, r5
   3b738:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3b73c:	ldr	r9, [fp, #-52]	; 0xffffffcc
   3b740:	ldr	sl, [sp, #16]
   3b744:	ldr	lr, [sp, #20]
   3b748:	subs	r1, r0, r9
   3b74c:	ldr	r0, [sp, #60]	; 0x3c
   3b750:	str	r6, [fp, #-36]	; 0xffffffdc
   3b754:	str	r8, [sp, #40]	; 0x28
   3b758:	sbc	r2, r6, sl
   3b75c:	subs	r1, r1, r0
   3b760:	sbcs	r1, r2, lr
   3b764:	movwcc	ip, #1
   3b768:	cmp	ip, #0
   3b76c:	bne	3b834 <flatcc_json_printer_fmt_float@@Base+0x8bc>
   3b770:	subs	r1, r9, r4
   3b774:	sbcs	r1, sl, r3
   3b778:	bcs	3b824 <flatcc_json_printer_fmt_float@@Base+0x8ac>
   3b77c:	str	r4, [fp, #-44]	; 0xffffffd4
   3b780:	ldr	r1, [fp, #-32]	; 0xffffffe0
   3b784:	ldr	r2, [sp, #56]	; 0x38
   3b788:	add	r1, r1, r2
   3b78c:	str	r1, [fp, #-48]	; 0xffffffd0
   3b790:	ldr	r1, [fp, #-52]	; 0xffffffcc
   3b794:	ldr	r8, [fp, #-44]	; 0xffffffd4
   3b798:	adds	r9, r1, r0
   3b79c:	mov	r4, r1
   3b7a0:	adc	r2, sl, lr
   3b7a4:	subs	r1, r9, r8
   3b7a8:	sbcs	r1, r2, r3
   3b7ac:	bcc	3b7d0 <flatcc_json_printer_fmt_float@@Base+0x858>
   3b7b0:	subs	r1, r9, r8
   3b7b4:	sbc	ip, r2, r3
   3b7b8:	subs	r5, r8, r4
   3b7bc:	sbc	r6, r3, sl
   3b7c0:	subs	r1, r5, r1
   3b7c4:	sbcs	r1, r6, ip
   3b7c8:	ldr	r6, [fp, #-36]	; 0xffffffdc
   3b7cc:	bcc	3b82c <flatcc_json_printer_fmt_float@@Base+0x8b4>
   3b7d0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   3b7d4:	sub	r7, r7, #1
   3b7d8:	mov	ip, #0
   3b7dc:	strb	r7, [r0, #-1]
   3b7e0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   3b7e4:	subs	r5, r0, r9
   3b7e8:	ldr	r0, [sp, #60]	; 0x3c
   3b7ec:	sbc	r1, r6, r2
   3b7f0:	subs	r6, r5, r0
   3b7f4:	sbcs	r6, r1, lr
   3b7f8:	movwcc	ip, #1
   3b7fc:	subs	r4, r9, r8
   3b800:	sbcs	r4, r2, r3
   3b804:	bcs	3b838 <flatcc_json_printer_fmt_float@@Base+0x8c0>
   3b808:	ldr	r6, [fp, #-36]	; 0xffffffdc
   3b80c:	subs	r4, r5, r0
   3b810:	mov	sl, r2
   3b814:	sbcs	r1, r1, lr
   3b818:	mov	r1, r9
   3b81c:	bcs	3b798 <flatcc_json_printer_fmt_float@@Base+0x820>
   3b820:	b	3b838 <flatcc_json_printer_fmt_float@@Base+0x8c0>
   3b824:	ldr	r9, [fp, #-52]	; 0xffffffcc
   3b828:	b	3b834 <flatcc_json_printer_fmt_float@@Base+0x8bc>
   3b82c:	mov	ip, #0
   3b830:	mov	r9, r4
   3b834:	mov	r2, sl
   3b838:	ldr	r5, [sp, #40]	; 0x28
   3b83c:	ldr	r3, [sp, #52]	; 0x34
   3b840:	ldr	r4, [fp, #-56]	; 0xffffffc8
   3b844:	subs	r1, r9, r5
   3b848:	sbcs	r1, r2, r3
   3b84c:	bcs	3b888 <flatcc_json_printer_fmt_float@@Base+0x910>
   3b850:	cmp	ip, #0
   3b854:	bne	3b888 <flatcc_json_printer_fmt_float@@Base+0x910>
   3b858:	adds	r1, r9, r0
   3b85c:	adc	r7, r2, lr
   3b860:	subs	r6, r1, r5
   3b864:	sbcs	r6, r7, r3
   3b868:	bcc	3b978 <flatcc_json_printer_fmt_float@@Base+0xa00>
   3b86c:	subs	r6, r5, r9
   3b870:	sbc	r0, r3, r2
   3b874:	subs	r1, r1, r5
   3b878:	sbc	r7, r7, r3
   3b87c:	subs	r1, r1, r6
   3b880:	sbcs	r1, r7, r0
   3b884:	bcc	3b978 <flatcc_json_printer_fmt_float@@Base+0xa00>
   3b888:	mov	r1, #20
   3b88c:	ldr	r0, [sp, #12]
   3b890:	umull	r1, r7, r4, r1
   3b894:	add	r7, r7, r0, lsl #2
   3b898:	subs	r1, r9, r1
   3b89c:	sbcs	r1, r2, r7
   3b8a0:	bcc	3b978 <flatcc_json_printer_fmt_float@@Base+0xa00>
   3b8a4:	mvn	r5, #0
   3b8a8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3b8ac:	subs	r1, r5, #39	; 0x27
   3b8b0:	umull	r7, r6, r4, r1
   3b8b4:	sbc	r5, r5, #0
   3b8b8:	mla	r0, r4, r5, r6
   3b8bc:	ldr	r6, [sp, #8]
   3b8c0:	mla	r0, r6, r1, r0
   3b8c4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   3b8c8:	adds	r1, r7, r1
   3b8cc:	adc	r0, r0, r3
   3b8d0:	subs	r1, r1, r9
   3b8d4:	sbcs	r0, r0, r2
   3b8d8:	bcc	3b978 <flatcc_json_printer_fmt_float@@Base+0xa00>
   3b8dc:	ldr	r4, [sp, #56]	; 0x38
   3b8e0:	ldr	r5, [sp, #4]
   3b8e4:	sub	r2, r4, #1
   3b8e8:	b	3b9b4 <flatcc_json_printer_fmt_float@@Base+0xa3c>
   3b8ec:	mov	r1, #0
   3b8f0:	mov	r0, r7
   3b8f4:	mov	r4, r3
   3b8f8:	ldr	r6, [fp, #-48]	; 0xffffffd0
   3b8fc:	ldr	r5, [fp, #-56]	; 0xffffffc8
   3b900:	subs	r3, r0, r6
   3b904:	sbcs	r3, r4, r5
   3b908:	bcs	3b954 <flatcc_json_printer_fmt_float@@Base+0x9dc>
   3b90c:	cmp	r1, #0
   3b910:	bne	3b954 <flatcc_json_printer_fmt_float@@Base+0x9dc>
   3b914:	adds	r1, r0, r8
   3b918:	adc	r3, r4, lr
   3b91c:	subs	r7, r1, r6
   3b920:	sbcs	r7, r3, r5
   3b924:	bcc	3b978 <flatcc_json_printer_fmt_float@@Base+0xa00>
   3b928:	subs	r1, r1, r6
   3b92c:	sbc	r3, r3, r5
   3b930:	subs	r7, r6, r0
   3b934:	sbc	r6, r5, r4
   3b938:	subs	r5, r0, #2
   3b93c:	sbcs	r5, r4, #0
   3b940:	bcc	3b978 <flatcc_json_printer_fmt_float@@Base+0xa00>
   3b944:	subs	r1, r1, r7
   3b948:	sbcs	r1, r3, r6
   3b94c:	bcs	3b960 <flatcc_json_printer_fmt_float@@Base+0x9e8>
   3b950:	b	3b978 <flatcc_json_printer_fmt_float@@Base+0xa00>
   3b954:	subs	r1, r0, #2
   3b958:	sbcs	r1, r4, #0
   3b95c:	bcc	3b978 <flatcc_json_printer_fmt_float@@Base+0xa00>
   3b960:	ldr	r2, [fp, #-36]	; 0xffffffdc
   3b964:	subs	r1, r9, #4
   3b968:	sbc	r2, r2, #0
   3b96c:	subs	r0, r1, r0
   3b970:	sbcs	r0, r2, r4
   3b974:	bcs	3b9a4 <flatcc_json_printer_fmt_float@@Base+0xa2c>
   3b978:	ldr	r4, [fp, #-32]	; 0xffffffe0
   3b97c:	vmov	r2, r3, d0
   3b980:	movw	r1, #60725	; 0xed35
   3b984:	movt	r1, #4
   3b988:	mov	r0, r4
   3b98c:	bl	14f28 <sprintf@plt>
   3b990:	ldr	r1, [sp, #44]	; 0x2c
   3b994:	sub	r1, r4, r1
   3b998:	add	r0, r1, r0
   3b99c:	sub	sp, fp, #28
   3b9a0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3b9a4:	ldr	r2, [fp, #-44]	; 0xffffffd4
   3b9a8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   3b9ac:	sub	r5, r0, r2
   3b9b0:	add	r4, r2, #1
   3b9b4:	ldr	r0, [sp, #48]	; 0x30
   3b9b8:	cmp	r4, #3
   3b9bc:	ldrsh	r9, [r0, #26]
   3b9c0:	sub	r0, r4, #1
   3b9c4:	movwlt	r0, #1
   3b9c8:	sub	r8, r5, r9
   3b9cc:	rsb	r3, r8, #0
   3b9d0:	cmp	r0, r3
   3b9d4:	movge	r0, r3
   3b9d8:	cmn	r8, #1
   3b9dc:	ble	3ba04 <flatcc_json_printer_fmt_float@@Base+0xa8c>
   3b9e0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   3b9e4:	cmp	r8, #3
   3b9e8:	bcc	3bac0 <flatcc_json_printer_fmt_float@@Base+0xb48>
   3b9ec:	add	lr, r4, #1
   3b9f0:	mov	r0, #101	; 0x65
   3b9f4:	add	r9, r1, lr
   3b9f8:	strb	r0, [r1, r4]
   3b9fc:	mov	sl, r9
   3ba00:	b	3bbec <flatcc_json_printer_fmt_float@@Base+0xc74>
   3ba04:	ldr	r1, [fp, #-32]	; 0xffffffe0
   3ba08:	cmp	r4, r3
   3ba0c:	bgt	3baec <flatcc_json_printer_fmt_float@@Base+0xb74>
   3ba10:	add	r6, r8, r4
   3ba14:	cmn	r6, #2
   3ba18:	blt	3baec <flatcc_json_printer_fmt_float@@Base+0xb74>
   3ba1c:	add	r7, r1, #2
   3ba20:	mvn	r0, r2
   3ba24:	add	r2, r7, r3
   3ba28:	add	r0, r2, r0
   3ba2c:	mov	r2, r4
   3ba30:	bl	14e44 <memmove@plt>
   3ba34:	ldr	r1, [fp, #-32]	; 0xffffffe0
   3ba38:	movw	r0, #11824	; 0x2e30
   3ba3c:	rsb	r6, r6, #2
   3ba40:	cmp	r6, #3
   3ba44:	strh	r0, [r1]
   3ba48:	mov	r0, #2
   3ba4c:	blt	3bab4 <flatcc_json_printer_fmt_float@@Base+0xb3c>
   3ba50:	sub	r0, r9, r5
   3ba54:	mov	r1, #48	; 0x30
   3ba58:	sub	r8, r0, r4
   3ba5c:	mov	r0, r7
   3ba60:	mov	r2, r8
   3ba64:	bl	14eec <memset@plt>
   3ba68:	mvn	r0, r5
   3ba6c:	mov	r2, r4
   3ba70:	add	r0, r0, r9
   3ba74:	sub	r1, r0, r4
   3ba78:	and	r0, r8, #7
   3ba7c:	cmp	r1, #7
   3ba80:	bcc	3ba98 <flatcc_json_printer_fmt_float@@Base+0xb20>
   3ba84:	add	r1, r5, r2
   3ba88:	add	r1, r1, r0
   3ba8c:	sub	r1, r1, r9
   3ba90:	adds	r1, r1, #8
   3ba94:	bne	3ba90 <flatcc_json_printer_fmt_float@@Base+0xb18>
   3ba98:	ldr	r1, [fp, #-32]	; 0xffffffe0
   3ba9c:	cmp	r0, #0
   3baa0:	beq	3baac <flatcc_json_printer_fmt_float@@Base+0xb34>
   3baa4:	subs	r0, r0, #1
   3baa8:	bne	3baa4 <flatcc_json_printer_fmt_float@@Base+0xb2c>
   3baac:	mov	r0, r6
   3bab0:	mov	r4, r2
   3bab4:	ldr	ip, [sp, #44]	; 0x2c
   3bab8:	add	r4, r0, r4
   3babc:	b	3bd34 <flatcc_json_printer_fmt_float@@Base+0xdbc>
   3bac0:	cmp	r8, #0
   3bac4:	beq	3bb8c <flatcc_json_printer_fmt_float@@Base+0xc14>
   3bac8:	add	r0, r1, r4
   3bacc:	mov	r1, #48	; 0x30
   3bad0:	mov	r2, r8
   3bad4:	bl	14eec <memset@plt>
   3bad8:	cmp	r8, #4
   3badc:	bcs	3bb94 <flatcc_json_printer_fmt_float@@Base+0xc1c>
   3bae0:	ldr	ip, [sp, #44]	; 0x2c
   3bae4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   3bae8:	b	3bd24 <flatcc_json_printer_fmt_float@@Base+0xdac>
   3baec:	cmp	r4, #2
   3baf0:	blt	3bbd0 <flatcc_json_printer_fmt_float@@Base+0xc58>
   3baf4:	ldr	ip, [sp, #44]	; 0x2c
   3baf8:	cmp	r0, #1
   3bafc:	blt	3bb54 <flatcc_json_printer_fmt_float@@Base+0xbdc>
   3bb00:	and	r7, r0, #1
   3bb04:	mov	r2, #0
   3bb08:	beq	3bb3c <flatcc_json_printer_fmt_float@@Base+0xbc4>
   3bb0c:	mov	lr, r4
   3bb10:	add	r2, r1, r4
   3bb14:	sub	r6, r7, r0
   3bb18:	mov	r3, #0
   3bb1c:	add	r5, r2, r3
   3bb20:	sub	r3, r3, #2
   3bb24:	ldrh	r4, [r5, #-2]
   3bb28:	cmp	r6, r3
   3bb2c:	strh	r4, [r5, #-1]
   3bb30:	bne	3bb1c <flatcc_json_printer_fmt_float@@Base+0xba4>
   3bb34:	rsb	r2, r3, #0
   3bb38:	mov	r4, lr
   3bb3c:	cmp	r7, #0
   3bb40:	beq	3bb54 <flatcc_json_printer_fmt_float@@Base+0xbdc>
   3bb44:	sub	r3, r4, r2
   3bb48:	add	r2, r1, r3
   3bb4c:	ldrb	r2, [r2, #-1]
   3bb50:	strb	r2, [r1, r3]
   3bb54:	sub	r3, r4, r0
   3bb58:	mov	r2, #46	; 0x2e
   3bb5c:	adds	r7, r0, r8
   3bb60:	add	r0, r4, #1
   3bb64:	strb	r2, [r1, r3]
   3bb68:	beq	3bd48 <flatcc_json_printer_fmt_float@@Base+0xdd0>
   3bb6c:	add	lr, r4, #2
   3bb70:	mov	r2, #101	; 0x65
   3bb74:	cmn	r7, #1
   3bb78:	add	r8, r1, lr
   3bb7c:	strb	r2, [r1, r0]
   3bb80:	ble	3bd50 <flatcc_json_printer_fmt_float@@Base+0xdd8>
   3bb84:	mov	r9, r8
   3bb88:	b	3bd60 <flatcc_json_printer_fmt_float@@Base+0xde8>
   3bb8c:	ldr	ip, [sp, #44]	; 0x2c
   3bb90:	b	3bd34 <flatcc_json_printer_fmt_float@@Base+0xdbc>
   3bb94:	mov	r0, #0
   3bb98:	mov	r1, #1
   3bb9c:	vdup.32	q8, r0
   3bba0:	bic	r0, r8, #3
   3bba4:	sub	r3, r0, #4
   3bba8:	add	r2, r1, r3, lsr #2
   3bbac:	cmp	r3, #12
   3bbb0:	and	r7, r2, #3
   3bbb4:	vmov.32	d16[0], r4
   3bbb8:	bcs	3bccc <flatcc_json_printer_fmt_float@@Base+0xd54>
   3bbbc:	ldr	ip, [sp, #44]	; 0x2c
   3bbc0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   3bbc4:	cmp	r7, #0
   3bbc8:	bne	3bcf0 <flatcc_json_printer_fmt_float@@Base+0xd78>
   3bbcc:	b	3bd04 <flatcc_json_printer_fmt_float@@Base+0xd8c>
   3bbd0:	add	lr, r4, #1
   3bbd4:	add	r0, r1, r4
   3bbd8:	movw	r2, #11621	; 0x2d65
   3bbdc:	mov	r8, r3
   3bbe0:	add	r9, r1, lr
   3bbe4:	strh	r2, [r0]
   3bbe8:	add	sl, r9, #1
   3bbec:	movw	r0, #26215	; 0x6667
   3bbf0:	mov	r3, sl
   3bbf4:	movt	r0, #26214	; 0x6666
   3bbf8:	smmul	r6, r8, r0
   3bbfc:	asr	r5, r6, #2
   3bc00:	add	r7, r5, r6, lsr #31
   3bc04:	add	r6, r7, r7, lsl #2
   3bc08:	sub	r6, r8, r6, lsl #1
   3bc0c:	add	r6, r6, #48	; 0x30
   3bc10:	strb	r6, [r3], #1
   3bc14:	add	r6, r8, #9
   3bc18:	mov	r8, r7
   3bc1c:	cmp	r6, #18
   3bc20:	bhi	3bbf8 <flatcc_json_printer_fmt_float@@Base+0xc80>
   3bc24:	mov	r5, #0
   3bc28:	mov	r8, r3
   3bc2c:	strb	r5, [r8], -sl
   3bc30:	cmp	r8, #2
   3bc34:	blt	3bcb8 <flatcc_json_printer_fmt_float@@Base+0xd40>
   3bc38:	add	r0, r8, r8, lsr #31
   3bc3c:	bic	r4, r8, #1
   3bc40:	cmp	r4, #2
   3bc44:	asr	r0, r0, #1
   3bc48:	and	ip, r0, #1
   3bc4c:	beq	3bc98 <flatcc_json_printer_fmt_float@@Base+0xd20>
   3bc50:	sub	r5, ip, r0
   3bc54:	sub	r4, r3, #2
   3bc58:	add	r0, sl, #1
   3bc5c:	mov	r6, #0
   3bc60:	add	r1, r4, r6
   3bc64:	ldrb	r7, [r0, #-1]
   3bc68:	ldrb	r2, [r1, #1]
   3bc6c:	strb	r2, [r0, #-1]
   3bc70:	strb	r7, [r1, #1]
   3bc74:	ldrb	r1, [r4, r6]
   3bc78:	ldrb	r2, [r0]
   3bc7c:	strb	r1, [r0]
   3bc80:	strb	r2, [r4, r6]
   3bc84:	sub	r6, r6, #2
   3bc88:	add	r0, r0, #2
   3bc8c:	cmp	r5, r6
   3bc90:	bne	3bc60 <flatcc_json_printer_fmt_float@@Base+0xce8>
   3bc94:	rsb	r5, r6, #0
   3bc98:	cmp	ip, #0
   3bc9c:	beq	3bcb8 <flatcc_json_printer_fmt_float@@Base+0xd40>
   3bca0:	mvn	r1, r5
   3bca4:	ldrb	r0, [sl, r5]
   3bca8:	add	r1, r8, r1
   3bcac:	ldrb	r2, [sl, r1]
   3bcb0:	strb	r2, [sl, r5]
   3bcb4:	strb	r0, [sl, r1]
   3bcb8:	ldr	ip, [sp, #44]	; 0x2c
   3bcbc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   3bcc0:	sub	r0, lr, r9
   3bcc4:	add	r4, r0, r3
   3bcc8:	b	3bd34 <flatcc_json_printer_fmt_float@@Base+0xdbc>
   3bccc:	ldr	ip, [sp, #44]	; 0x2c
   3bcd0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   3bcd4:	vmov.i32	q9, #4	; 0x00000004
   3bcd8:	sub	r2, r7, r2
   3bcdc:	vadd.i32	q8, q8, q9
   3bce0:	adds	r2, r2, #4
   3bce4:	bne	3bcdc <flatcc_json_printer_fmt_float@@Base+0xd64>
   3bce8:	cmp	r7, #0
   3bcec:	beq	3bd04 <flatcc_json_printer_fmt_float@@Base+0xd8c>
   3bcf0:	vmov.i32	q9, #1	; 0x00000001
   3bcf4:	rsb	r2, r7, #0
   3bcf8:	vadd.i32	q8, q8, q9
   3bcfc:	adds	r2, r2, #1
   3bd00:	bcc	3bcf8 <flatcc_json_printer_fmt_float@@Base+0xd80>
   3bd04:	vext.8	q9, q8, q8, #8
   3bd08:	cmp	r8, r0
   3bd0c:	vadd.i32	q8, q8, q9
   3bd10:	vdup.32	q9, d16[1]
   3bd14:	vadd.i32	q8, q8, q9
   3bd18:	vmov.32	r4, d16[0]
   3bd1c:	beq	3bd34 <flatcc_json_printer_fmt_float@@Base+0xdbc>
   3bd20:	sub	r8, r8, r0
   3bd24:	sub	r8, r8, #1
   3bd28:	add	r4, r4, #1
   3bd2c:	cmp	r8, #0
   3bd30:	bgt	3bd24 <flatcc_json_printer_fmt_float@@Base+0xdac>
   3bd34:	mov	r0, #0
   3bd38:	strb	r0, [r1, r4]!
   3bd3c:	sub	r0, r1, ip
   3bd40:	sub	sp, fp, #28
   3bd44:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3bd48:	mov	r4, r0
   3bd4c:	b	3bd34 <flatcc_json_printer_fmt_float@@Base+0xdbc>
   3bd50:	mov	r0, #45	; 0x2d
   3bd54:	mov	r9, r8
   3bd58:	rsb	r7, r7, #0
   3bd5c:	strb	r0, [r9], #1
   3bd60:	movw	r0, #26215	; 0x6667
   3bd64:	mov	r3, r9
   3bd68:	movt	r0, #26214	; 0x6666
   3bd6c:	smmul	r6, r7, r0
   3bd70:	asr	r5, r6, #2
   3bd74:	add	r6, r5, r6, lsr #31
   3bd78:	add	r5, r6, r6, lsl #2
   3bd7c:	sub	r5, r7, r5, lsl #1
   3bd80:	add	r7, r7, #9
   3bd84:	cmp	r7, #18
   3bd88:	mov	r7, r6
   3bd8c:	add	r5, r5, #48	; 0x30
   3bd90:	strb	r5, [r3], #1
   3bd94:	bhi	3bd6c <flatcc_json_printer_fmt_float@@Base+0xdf4>
   3bd98:	mov	r5, #0
   3bd9c:	mov	sl, r3
   3bda0:	strb	r5, [sl], -r9
   3bda4:	cmp	sl, #2
   3bda8:	blt	3be30 <flatcc_json_printer_fmt_float@@Base+0xeb8>
   3bdac:	add	r0, sl, sl, lsr #31
   3bdb0:	bic	r4, sl, #1
   3bdb4:	cmp	r4, #2
   3bdb8:	asr	r0, r0, #1
   3bdbc:	and	ip, r0, #1
   3bdc0:	beq	3be0c <flatcc_json_printer_fmt_float@@Base+0xe94>
   3bdc4:	sub	r5, ip, r0
   3bdc8:	sub	r4, r3, #2
   3bdcc:	add	r0, r9, #1
   3bdd0:	mov	r6, #0
   3bdd4:	add	r1, r4, r6
   3bdd8:	ldrb	r7, [r0, #-1]
   3bddc:	ldrb	r2, [r1, #1]
   3bde0:	strb	r2, [r0, #-1]
   3bde4:	strb	r7, [r1, #1]
   3bde8:	ldrb	r1, [r4, r6]
   3bdec:	ldrb	r2, [r0]
   3bdf0:	strb	r1, [r0]
   3bdf4:	strb	r2, [r4, r6]
   3bdf8:	sub	r6, r6, #2
   3bdfc:	add	r0, r0, #2
   3be00:	cmp	r5, r6
   3be04:	bne	3bdd4 <flatcc_json_printer_fmt_float@@Base+0xe5c>
   3be08:	rsb	r5, r6, #0
   3be0c:	cmp	ip, #0
   3be10:	ldr	ip, [sp, #44]	; 0x2c
   3be14:	beq	3be30 <flatcc_json_printer_fmt_float@@Base+0xeb8>
   3be18:	mvn	r1, r5
   3be1c:	ldrb	r0, [r9, r5]
   3be20:	add	r1, sl, r1
   3be24:	ldrb	r2, [r9, r1]
   3be28:	strb	r2, [r9, r5]
   3be2c:	strb	r0, [r9, r1]
   3be30:	ldr	r1, [fp, #-32]	; 0xffffffe0
   3be34:	sub	r0, lr, r8
   3be38:	b	3bcc4 <flatcc_json_printer_fmt_float@@Base+0xd4c>
   3be3c:	movw	r0, #60580	; 0xeca4
   3be40:	movw	r1, #60584	; 0xeca8
   3be44:	movw	r3, #60671	; 0xecff
   3be48:	mov	r2, #189	; 0xbd
   3be4c:	movt	r0, #4
   3be50:	movt	r1, #4
   3be54:	movt	r3, #4
   3be58:	bl	14f40 <__assert_fail@plt>
   3be5c:	movw	r0, #60809	; 0xed89
   3be60:	movw	r1, #59811	; 0xe9a3
   3be64:	movw	r3, #60834	; 0xeda2
   3be68:	mov	r2, #239	; 0xef
   3be6c:	movt	r0, #4
   3be70:	movt	r1, #4
   3be74:	movt	r3, #4
   3be78:	bl	14f40 <__assert_fail@plt>
   3be7c:	movw	r0, #59802	; 0xe99a
   3be80:	movw	r1, #59811	; 0xe9a3
   3be84:	movw	r3, #59897	; 0xe9f9
   3be88:	mov	r2, #260	; 0x104
   3be8c:	movt	r0, #4
   3be90:	movt	r1, #4
   3be94:	movt	r3, #4
   3be98:	bl	14f40 <__assert_fail@plt>

0003be9c <flatcc_json_printer_fmt_double@@Base>:
   3be9c:	b	3af80 <flatcc_json_printer_fmt_float@@Base+0x8>

0003bea0 <flatcc_json_printer_fmt_bool@@Base>:
   3bea0:	cmp	r1, #0
   3bea4:	movwne	r1, #29300	; 0x7274
   3bea8:	movtne	r1, #25973	; 0x6575
   3beac:	strne	r1, [r0]
   3beb0:	movne	r0, #4
   3beb4:	bxne	lr
   3beb8:	mov	r1, #101	; 0x65
   3bebc:	strb	r1, [r0, #4]
   3bec0:	movw	r1, #24934	; 0x6166
   3bec4:	movt	r1, #29548	; 0x736c
   3bec8:	str	r1, [r0]
   3becc:	mov	r0, #5
   3bed0:	bx	lr

0003bed4 <flatcc_json_printer_string@@Base>:
   3bed4:	b	3bed8 <flatcc_json_printer_string@@Base+0x4>
   3bed8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3bedc:	add	fp, sp, #28
   3bee0:	sub	sp, sp, #12
   3bee4:	mov	r5, r0
   3bee8:	mov	r4, r0
   3beec:	mov	r6, r1
   3bef0:	mov	r3, r2
   3bef4:	ldr	r0, [r5, #20]!
   3bef8:	str	r5, [sp, #4]
   3befc:	add	r1, r0, #1
   3bf00:	str	r1, [r5]
   3bf04:	mov	r1, #34	; 0x22
   3bf08:	strb	r1, [r0]
   3bf0c:	ldrb	sl, [r6]
   3bf10:	mov	r8, r6
   3bf14:	cmp	sl, #32
   3bf18:	bcc	3bfd0 <flatcc_json_printer_string@@Base+0xfc>
   3bf1c:	b	3bfb4 <flatcc_json_printer_string@@Base+0xe0>
   3bf20:	ldr	r2, [r5]
   3bf24:	mov	r7, #48	; 0x30
   3bf28:	cmp	r1, #160	; 0xa0
   3bf2c:	add	r3, r2, #1
   3bf30:	str	r3, [r5]
   3bf34:	mov	r3, #117	; 0x75
   3bf38:	strb	r3, [r2]
   3bf3c:	ldr	r2, [r5]
   3bf40:	add	r3, r2, #1
   3bf44:	str	r3, [r5]
   3bf48:	strb	r7, [r2]
   3bf4c:	ldr	r2, [r5]
   3bf50:	add	r3, r2, #1
   3bf54:	str	r3, [r5]
   3bf58:	strb	r7, [r2]
   3bf5c:	ldr	r2, [r5]
   3bf60:	add	r3, r2, #1
   3bf64:	str	r3, [r5]
   3bf68:	mov	r3, #87	; 0x57
   3bf6c:	movwcc	r3, #48	; 0x30
   3bf70:	add	r1, r3, r1, lsr #4
   3bf74:	mov	r3, #87	; 0x57
   3bf78:	strb	r1, [r2]
   3bf7c:	ldr	r1, [r5]
   3bf80:	add	r2, r1, #1
   3bf84:	str	r2, [r5]
   3bf88:	and	r2, sl, #15
   3bf8c:	cmp	r2, #10
   3bf90:	movwcc	r3, #48	; 0x30
   3bf94:	add	r2, r3, r2
   3bf98:	strb	r2, [r1]
   3bf9c:	sub	r3, r0, #1
   3bfa0:	add	r6, r8, #1
   3bfa4:	ldrb	sl, [r6]
   3bfa8:	mov	r8, r6
   3bfac:	cmp	sl, #32
   3bfb0:	bcc	3bfd0 <flatcc_json_printer_string@@Base+0xfc>
   3bfb4:	uxtb	r0, sl
   3bfb8:	cmp	r0, #34	; 0x22
   3bfbc:	cmpne	r0, #92	; 0x5c
   3bfc0:	beq	3bfd0 <flatcc_json_printer_string@@Base+0xfc>
   3bfc4:	ldrb	sl, [r8, #1]!
   3bfc8:	cmp	sl, #31
   3bfcc:	bhi	3bfb4 <flatcc_json_printer_string@@Base+0xe0>
   3bfd0:	ldr	r0, [r4, #20]
   3bfd4:	ldr	r1, [r4, #16]
   3bfd8:	sub	r9, r8, r6
   3bfdc:	add	r2, r0, r9
   3bfe0:	cmp	r2, r1
   3bfe4:	bcs	3c004 <flatcc_json_printer_string@@Base+0x130>
   3bfe8:	mov	r1, r6
   3bfec:	mov	r2, r9
   3bff0:	mov	r6, r3
   3bff4:	bl	14e5c <memcpy@plt>
   3bff8:	mov	r2, r6
   3bffc:	mov	r7, r9
   3c000:	b	3c090 <flatcc_json_printer_string@@Base+0x1bc>
   3c004:	cmp	r0, r1
   3c008:	str	r3, [sp, #8]
   3c00c:	bcc	3c028 <flatcc_json_printer_string@@Base+0x154>
   3c010:	ldr	r2, [r4, #44]	; 0x2c
   3c014:	mov	r0, r4
   3c018:	mov	r1, #0
   3c01c:	blx	r2
   3c020:	ldr	r1, [r4, #16]
   3c024:	ldr	r0, [r4, #20]
   3c028:	sub	r5, r1, r0
   3c02c:	mov	r7, r9
   3c030:	cmp	r5, r9
   3c034:	bcs	3c07c <flatcc_json_printer_string@@Base+0x1a8>
   3c038:	mov	r1, r6
   3c03c:	mov	r2, r5
   3c040:	bl	14e5c <memcpy@plt>
   3c044:	ldr	r0, [r4, #20]
   3c048:	ldr	r2, [r4, #44]	; 0x2c
   3c04c:	mov	r1, #0
   3c050:	add	r0, r0, r5
   3c054:	str	r0, [r4, #20]
   3c058:	mov	r0, r4
   3c05c:	blx	r2
   3c060:	ldr	r1, [r4, #16]
   3c064:	ldr	r0, [r4, #20]
   3c068:	sub	r7, r7, r5
   3c06c:	add	r6, r6, r5
   3c070:	sub	r5, r1, r0
   3c074:	cmp	r7, r5
   3c078:	bhi	3c038 <flatcc_json_printer_string@@Base+0x164>
   3c07c:	ldr	r5, [sp, #4]
   3c080:	mov	r1, r6
   3c084:	mov	r2, r7
   3c088:	bl	14e5c <memcpy@plt>
   3c08c:	ldr	r2, [sp, #8]
   3c090:	ldr	r0, [r5]
   3c094:	add	r1, r0, r7
   3c098:	add	r0, r1, #1
   3c09c:	str	r0, [r5]
   3c0a0:	subs	r0, r2, r9
   3c0a4:	beq	3c1cc <flatcc_json_printer_string@@Base+0x2f8>
   3c0a8:	mov	r2, #92	; 0x5c
   3c0ac:	strb	r2, [r1]
   3c0b0:	mvn	r1, #7
   3c0b4:	uxtab	r2, r1, sl
   3c0b8:	uxtb	r1, sl
   3c0bc:	cmp	r2, #26
   3c0c0:	bhi	3c14c <flatcc_json_printer_string@@Base+0x278>
   3c0c4:	add	r3, pc, #0
   3c0c8:	ldr	pc, [r3, r2, lsl #2]
   3c0cc:	andeq	ip, r3, r8, lsr r1
   3c0d0:	andeq	ip, r3, r8, ror #2
   3c0d4:	andeq	ip, r3, ip, ror r1
   3c0d8:	andeq	fp, r3, r0, lsr #30
   3c0dc:	muleq	r3, r0, r1
   3c0e0:	andeq	ip, r3, r4, lsr #3
   3c0e4:	andeq	fp, r3, r0, lsr #30
   3c0e8:	andeq	fp, r3, r0, lsr #30
   3c0ec:	andeq	fp, r3, r0, lsr #30
   3c0f0:	andeq	fp, r3, r0, lsr #30
   3c0f4:	andeq	fp, r3, r0, lsr #30
   3c0f8:	andeq	fp, r3, r0, lsr #30
   3c0fc:	andeq	fp, r3, r0, lsr #30
   3c100:	andeq	fp, r3, r0, lsr #30
   3c104:	andeq	fp, r3, r0, lsr #30
   3c108:	andeq	fp, r3, r0, lsr #30
   3c10c:	andeq	fp, r3, r0, lsr #30
   3c110:	andeq	fp, r3, r0, lsr #30
   3c114:	andeq	fp, r3, r0, lsr #30
   3c118:	andeq	fp, r3, r0, lsr #30
   3c11c:	andeq	fp, r3, r0, lsr #30
   3c120:	andeq	fp, r3, r0, lsr #30
   3c124:	andeq	fp, r3, r0, lsr #30
   3c128:	andeq	fp, r3, r0, lsr #30
   3c12c:	andeq	fp, r3, r0, lsr #30
   3c130:	andeq	fp, r3, r0, lsr #30
   3c134:			; <UNDEFINED> instruction: 0x0003c1b8
   3c138:	ldr	r1, [r5]
   3c13c:	add	r2, r1, #1
   3c140:	str	r2, [r5]
   3c144:	mov	r2, #98	; 0x62
   3c148:	b	3bf98 <flatcc_json_printer_string@@Base+0xc4>
   3c14c:	cmp	r1, #92	; 0x5c
   3c150:	bne	3bf20 <flatcc_json_printer_string@@Base+0x4c>
   3c154:	ldr	r1, [r5]
   3c158:	add	r2, r1, #1
   3c15c:	str	r2, [r5]
   3c160:	mov	r2, #92	; 0x5c
   3c164:	b	3bf98 <flatcc_json_printer_string@@Base+0xc4>
   3c168:	ldr	r1, [r5]
   3c16c:	add	r2, r1, #1
   3c170:	str	r2, [r5]
   3c174:	mov	r2, #116	; 0x74
   3c178:	b	3bf98 <flatcc_json_printer_string@@Base+0xc4>
   3c17c:	ldr	r1, [r5]
   3c180:	add	r2, r1, #1
   3c184:	str	r2, [r5]
   3c188:	mov	r2, #110	; 0x6e
   3c18c:	b	3bf98 <flatcc_json_printer_string@@Base+0xc4>
   3c190:	ldr	r1, [r5]
   3c194:	add	r2, r1, #1
   3c198:	str	r2, [r5]
   3c19c:	mov	r2, #102	; 0x66
   3c1a0:	b	3bf98 <flatcc_json_printer_string@@Base+0xc4>
   3c1a4:	ldr	r1, [r5]
   3c1a8:	add	r2, r1, #1
   3c1ac:	str	r2, [r5]
   3c1b0:	mov	r2, #114	; 0x72
   3c1b4:	b	3bf98 <flatcc_json_printer_string@@Base+0xc4>
   3c1b8:	ldr	r1, [r5]
   3c1bc:	add	r2, r1, #1
   3c1c0:	str	r2, [r5]
   3c1c4:	mov	r2, #34	; 0x22
   3c1c8:	b	3bf98 <flatcc_json_printer_string@@Base+0xc4>
   3c1cc:	mov	r0, #34	; 0x22
   3c1d0:	strb	r0, [r1]
   3c1d4:	sub	sp, fp, #28
   3c1d8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003c1dc <flatcc_json_printer_write@@Base>:
   3c1dc:	push	{r4, r5, r6, r7, fp, lr}
   3c1e0:	add	fp, sp, #16
   3c1e4:	mov	r6, r1
   3c1e8:	mov	r5, r0
   3c1ec:	ldr	r1, [r0, #16]
   3c1f0:	ldr	r0, [r0, #20]
   3c1f4:	mov	r4, r2
   3c1f8:	add	r2, r0, r2
   3c1fc:	cmp	r2, r1
   3c200:	bcc	3c274 <flatcc_json_printer_write@@Base+0x98>
   3c204:	cmp	r0, r1
   3c208:	bcc	3c224 <flatcc_json_printer_write@@Base+0x48>
   3c20c:	ldr	r2, [r5, #44]	; 0x2c
   3c210:	mov	r0, r5
   3c214:	mov	r1, #0
   3c218:	blx	r2
   3c21c:	ldr	r1, [r5, #16]
   3c220:	ldr	r0, [r5, #20]
   3c224:	sub	r7, r1, r0
   3c228:	cmp	r7, r4
   3c22c:	bcs	3c274 <flatcc_json_printer_write@@Base+0x98>
   3c230:	mov	r1, r6
   3c234:	mov	r2, r7
   3c238:	bl	14e5c <memcpy@plt>
   3c23c:	ldr	r0, [r5, #20]
   3c240:	ldr	r2, [r5, #44]	; 0x2c
   3c244:	mov	r1, #0
   3c248:	add	r0, r0, r7
   3c24c:	str	r0, [r5, #20]
   3c250:	mov	r0, r5
   3c254:	blx	r2
   3c258:	ldr	r1, [r5, #16]
   3c25c:	ldr	r0, [r5, #20]
   3c260:	sub	r4, r4, r7
   3c264:	add	r6, r6, r7
   3c268:	sub	r7, r1, r0
   3c26c:	cmp	r4, r7
   3c270:	bhi	3c230 <flatcc_json_printer_write@@Base+0x54>
   3c274:	mov	r1, r6
   3c278:	mov	r2, r4
   3c27c:	bl	14e5c <memcpy@plt>
   3c280:	ldr	r0, [r5, #20]
   3c284:	add	r0, r0, r4
   3c288:	str	r0, [r5, #20]
   3c28c:	pop	{r4, r5, r6, r7, fp, pc}

0003c290 <flatcc_json_printer_nl@@Base>:
   3c290:	ldr	r1, [r0, #20]
   3c294:	add	r2, r1, #1
   3c298:	str	r2, [r0, #20]
   3c29c:	mov	r2, #10
   3c2a0:	strb	r2, [r1]
   3c2a4:	ldr	r1, [r0, #16]
   3c2a8:	ldr	r2, [r0, #20]
   3c2ac:	cmp	r2, r1
   3c2b0:	bxcc	lr
   3c2b4:	ldr	r2, [r0, #44]	; 0x2c
   3c2b8:	mov	r1, #0
   3c2bc:	bx	r2

0003c2c0 <flatcc_json_printer_char@@Base>:
   3c2c0:	ldr	r2, [r0, #20]
   3c2c4:	add	r3, r2, #1
   3c2c8:	str	r3, [r0, #20]
   3c2cc:	strb	r1, [r2]
   3c2d0:	bx	lr

0003c2d4 <flatcc_json_printer_indent@@Base>:
   3c2d4:	push	{r4, r5, r6, sl, fp, lr}
   3c2d8:	add	fp, sp, #16
   3c2dc:	mov	r4, r0
   3c2e0:	ldr	r1, [r0, #16]
   3c2e4:	ldr	r0, [r0, #20]
   3c2e8:	ldrb	r2, [r4, #25]
   3c2ec:	ldr	r3, [r4, #32]
   3c2f0:	mla	r6, r3, r2, r0
   3c2f4:	mul	r5, r3, r2
   3c2f8:	cmp	r6, r1
   3c2fc:	bls	3c36c <flatcc_json_printer_indent@@Base+0x98>
   3c300:	cmp	r0, r1
   3c304:	bcc	3c320 <flatcc_json_printer_indent@@Base+0x4c>
   3c308:	ldr	r2, [r4, #44]	; 0x2c
   3c30c:	mov	r0, r4
   3c310:	mov	r1, #0
   3c314:	blx	r2
   3c318:	ldr	r1, [r4, #16]
   3c31c:	ldr	r0, [r4, #20]
   3c320:	sub	r6, r1, r0
   3c324:	cmp	r6, r5
   3c328:	bcs	3c36c <flatcc_json_printer_indent@@Base+0x98>
   3c32c:	mov	r1, #32
   3c330:	mov	r2, r6
   3c334:	bl	14eec <memset@plt>
   3c338:	ldr	r0, [r4, #20]
   3c33c:	ldr	r2, [r4, #44]	; 0x2c
   3c340:	mov	r1, #0
   3c344:	add	r0, r0, r6
   3c348:	str	r0, [r4, #20]
   3c34c:	mov	r0, r4
   3c350:	blx	r2
   3c354:	ldr	r1, [r4, #16]
   3c358:	ldr	r0, [r4, #20]
   3c35c:	sub	r5, r5, r6
   3c360:	sub	r6, r1, r0
   3c364:	cmp	r5, r6
   3c368:	bhi	3c32c <flatcc_json_printer_indent@@Base+0x58>
   3c36c:	mov	r1, #32
   3c370:	mov	r2, r5
   3c374:	bl	14eec <memset@plt>
   3c378:	ldr	r0, [r4, #20]
   3c37c:	add	r0, r0, r5
   3c380:	str	r0, [r4, #20]
   3c384:	pop	{r4, r5, r6, sl, fp, pc}

0003c388 <flatcc_json_printer_add_level@@Base>:
   3c388:	ldr	r2, [r0, #32]
   3c38c:	add	r1, r2, r1
   3c390:	str	r1, [r0, #32]
   3c394:	bx	lr

0003c398 <flatcc_json_printer_get_level@@Base>:
   3c398:	ldr	r0, [r0, #32]
   3c39c:	bx	lr

0003c3a0 <flatcc_json_printer_uint8@@Base>:
   3c3a0:	push	{fp, lr}
   3c3a4:	mov	fp, sp
   3c3a8:	ldr	lr, [r0, #20]
   3c3ac:	cmp	r1, #100	; 0x64
   3c3b0:	bcc	3c40c <flatcc_json_printer_uint8@@Base+0x6c>
   3c3b4:	mov	r3, #0
   3c3b8:	strb	r3, [lr, #3]
   3c3bc:	movw	r3, #34079	; 0x851f
   3c3c0:	movt	r3, #20971	; 0x51eb
   3c3c4:	umull	r3, ip, r1, r3
   3c3c8:	mov	r3, #48	; 0x30
   3c3cc:	orr	r3, r3, ip, lsr #5
   3c3d0:	lsr	ip, ip, #5
   3c3d4:	strb	r3, [lr]
   3c3d8:	mov	r3, #100	; 0x64
   3c3dc:	mls	r1, ip, r3, r1
   3c3e0:	movw	r3, #60904	; 0xede8
   3c3e4:	movt	r3, #4
   3c3e8:	uxtb	r1, r1
   3c3ec:	add	r1, r3, r1, lsl #1
   3c3f0:	ldrh	r1, [r1]
   3c3f4:	strh	r1, [lr, #1]
   3c3f8:	mov	r1, #3
   3c3fc:	ldr	r2, [r0, #20]
   3c400:	add	r1, r2, r1
   3c404:	str	r1, [r0, #20]
   3c408:	pop	{fp, pc}
   3c40c:	cmp	r1, #10
   3c410:	bcc	3c45c <flatcc_json_printer_uint8@@Base+0xbc>
   3c414:	mov	r3, #0
   3c418:	strb	r3, [lr, #2]
   3c41c:	movw	r3, #34079	; 0x851f
   3c420:	movt	r3, #20971	; 0x51eb
   3c424:	umull	r3, r2, r1, r3
   3c428:	mov	r3, #100	; 0x64
   3c42c:	lsr	r2, r2, #5
   3c430:	mls	r1, r2, r3, r1
   3c434:	movw	r2, #60904	; 0xede8
   3c438:	movt	r2, #4
   3c43c:	add	r1, r2, r1, lsl #1
   3c440:	ldrh	r1, [r1]
   3c444:	strh	r1, [lr]
   3c448:	mov	r1, #2
   3c44c:	ldr	r2, [r0, #20]
   3c450:	add	r1, r2, r1
   3c454:	str	r1, [r0, #20]
   3c458:	pop	{fp, pc}
   3c45c:	mov	r2, #0
   3c460:	add	r1, r1, #48	; 0x30
   3c464:	strb	r2, [lr, #1]
   3c468:	strb	r1, [lr]
   3c46c:	mov	r1, #1
   3c470:	ldr	r2, [r0, #20]
   3c474:	add	r1, r2, r1
   3c478:	str	r1, [r0, #20]
   3c47c:	pop	{fp, pc}

0003c480 <flatcc_json_printer_uint16@@Base>:
   3c480:	push	{r4, sl, fp, lr}
   3c484:	add	fp, sp, #8
   3c488:	mov	r2, r1
   3c48c:	ldr	r1, [r0, #20]
   3c490:	mov	r4, r0
   3c494:	mov	r0, r2
   3c498:	bl	3c4ac <flatcc_json_printer_uint16@@Base+0x2c>
   3c49c:	ldr	r1, [r4, #20]
   3c4a0:	add	r0, r1, r0
   3c4a4:	str	r0, [r4, #20]
   3c4a8:	pop	{r4, sl, fp, pc}
   3c4ac:	push	{fp, lr}
   3c4b0:	mov	fp, sp
   3c4b4:	mov	lr, r0
   3c4b8:	cmp	r0, #1000	; 0x3e8
   3c4bc:	bcc	3c524 <flatcc_json_printer_uint16@@Base+0xa4>
   3c4c0:	movw	r3, #9999	; 0x270f
   3c4c4:	mov	r0, #4
   3c4c8:	cmp	lr, r3
   3c4cc:	movwhi	r0, #5
   3c4d0:	mov	r3, #0
   3c4d4:	tst	r0, #1
   3c4d8:	strb	r3, [r1, r0]!
   3c4dc:	bne	3c558 <flatcc_json_printer_uint16@@Base+0xd8>
   3c4e0:	cmp	r0, #2
   3c4e4:	beq	3c5e8 <flatcc_json_printer_uint16@@Base+0x168>
   3c4e8:	cmp	r0, #4
   3c4ec:	popne	{fp, pc}
   3c4f0:	movw	r2, #34079	; 0x851f
   3c4f4:	movt	r2, #20971	; 0x51eb
   3c4f8:	umull	r2, r3, lr, r2
   3c4fc:	mov	r2, #100	; 0x64
   3c500:	lsr	r3, r3, #5
   3c504:	mls	r2, r3, r2, lr
   3c508:	uxth	ip, r2
   3c50c:	movw	r2, #60904	; 0xede8
   3c510:	movt	r2, #4
   3c514:	add	r2, r2, ip, lsl #1
   3c518:	ldrh	r2, [r2]
   3c51c:	strh	r2, [r1, #-2]!
   3c520:	b	3c5ec <flatcc_json_printer_uint16@@Base+0x16c>
   3c524:	cmp	lr, #100	; 0x64
   3c528:	bcc	3c53c <flatcc_json_printer_uint16@@Base+0xbc>
   3c52c:	mov	r0, #0
   3c530:	strb	r0, [r1, #3]!
   3c534:	mov	r0, #3
   3c538:	b	3c5a8 <flatcc_json_printer_uint16@@Base+0x128>
   3c53c:	cmp	lr, #9
   3c540:	mov	r0, #1
   3c544:	movwhi	r0, #2
   3c548:	mov	r3, #0
   3c54c:	tst	r0, #1
   3c550:	strb	r3, [r1, r0]!
   3c554:	beq	3c4e0 <flatcc_json_printer_uint16@@Base+0x60>
   3c558:	cmp	r0, #1
   3c55c:	beq	3c620 <flatcc_json_printer_uint16@@Base+0x1a0>
   3c560:	cmp	r0, #3
   3c564:	beq	3c5a8 <flatcc_json_printer_uint16@@Base+0x128>
   3c568:	cmp	r0, #5
   3c56c:	bne	3c61c <flatcc_json_printer_uint16@@Base+0x19c>
   3c570:	movw	r0, #34079	; 0x851f
   3c574:	movw	r2, #60904	; 0xede8
   3c578:	movt	r0, #20971	; 0x51eb
   3c57c:	movt	r2, #4
   3c580:	umull	r0, r3, lr, r0
   3c584:	mov	r0, #100	; 0x64
   3c588:	lsr	r3, r3, #5
   3c58c:	mls	r0, r3, r0, lr
   3c590:	mov	lr, r3
   3c594:	uxth	r0, r0
   3c598:	add	r0, r2, r0, lsl #1
   3c59c:	ldrh	r0, [r0]
   3c5a0:	strh	r0, [r1, #-2]!
   3c5a4:	mov	r0, #5
   3c5a8:	movw	r3, #34079	; 0x851f
   3c5ac:	uxth	ip, lr
   3c5b0:	movt	r3, #20971	; 0x51eb
   3c5b4:	umull	r3, r2, ip, r3
   3c5b8:	lsr	r3, r2, #5
   3c5bc:	mov	r2, #100	; 0x64
   3c5c0:	mls	r2, r3, r2, lr
   3c5c4:	uxth	ip, r2
   3c5c8:	movw	r2, #60904	; 0xede8
   3c5cc:	movt	r2, #4
   3c5d0:	add	r2, r2, ip, lsl #1
   3c5d4:	ldrh	r2, [r2]
   3c5d8:	strh	r2, [r1, #-2]!
   3c5dc:	add	r2, r3, #48	; 0x30
   3c5e0:	strb	r2, [r1, #-1]
   3c5e4:	pop	{fp, pc}
   3c5e8:	mov	r3, lr
   3c5ec:	uxth	ip, r3
   3c5f0:	movw	r3, #34079	; 0x851f
   3c5f4:	movt	r3, #20971	; 0x51eb
   3c5f8:	umull	r3, r2, ip, r3
   3c5fc:	mov	r3, #100	; 0x64
   3c600:	lsr	r2, r2, #5
   3c604:	mls	r2, r2, r3, ip
   3c608:	movw	r3, #60904	; 0xede8
   3c60c:	movt	r3, #4
   3c610:	add	r2, r3, r2, lsl #1
   3c614:	ldrh	r2, [r2]
   3c618:	strh	r2, [r1, #-2]
   3c61c:	pop	{fp, pc}
   3c620:	mov	r3, lr
   3c624:	add	r2, r3, #48	; 0x30
   3c628:	strb	r2, [r1, #-1]
   3c62c:	pop	{fp, pc}

0003c630 <flatcc_json_printer_uint32@@Base>:
   3c630:	push	{r4, sl, fp, lr}
   3c634:	add	fp, sp, #8
   3c638:	mov	r2, r1
   3c63c:	ldr	r1, [r0, #20]
   3c640:	mov	r4, r0
   3c644:	mov	r0, r2
   3c648:	bl	3c65c <flatcc_json_printer_uint32@@Base+0x2c>
   3c64c:	ldr	r1, [r4, #20]
   3c650:	add	r0, r1, r0
   3c654:	str	r0, [r4, #20]
   3c658:	pop	{r4, sl, fp, pc}
   3c65c:	push	{fp, lr}
   3c660:	mov	fp, sp
   3c664:	mov	lr, r0
   3c668:	movw	r0, #10000	; 0x2710
   3c66c:	cmp	lr, r0
   3c670:	bcc	3c6d4 <flatcc_json_printer_uint32@@Base+0xa4>
   3c674:	movw	r0, #38528	; 0x9680
   3c678:	movt	r0, #152	; 0x98
   3c67c:	cmp	lr, r0
   3c680:	bcc	3c76c <flatcc_json_printer_uint32@@Base+0x13c>
   3c684:	movw	r0, #51712	; 0xca00
   3c688:	movt	r0, #15258	; 0x3b9a
   3c68c:	cmp	lr, r0
   3c690:	bcc	3c930 <flatcc_json_printer_uint32@@Base+0x300>
   3c694:	movw	r0, #34079	; 0x851f
   3c698:	movw	r2, #60904	; 0xede8
   3c69c:	movt	r0, #20971	; 0x51eb
   3c6a0:	movt	r2, #4
   3c6a4:	umull	r0, r3, lr, r0
   3c6a8:	mov	r0, #100	; 0x64
   3c6ac:	lsr	r3, r3, #5
   3c6b0:	mls	r0, r3, r0, lr
   3c6b4:	mov	lr, r3
   3c6b8:	add	r0, r2, r0, lsl #1
   3c6bc:	ldrh	r0, [r0]
   3c6c0:	strh	r0, [r1, #8]!
   3c6c4:	mov	r0, #0
   3c6c8:	strb	r0, [r1, #2]
   3c6cc:	mov	r0, #10
   3c6d0:	b	3c870 <flatcc_json_printer_uint32@@Base+0x240>
   3c6d4:	cmp	lr, #100	; 0x64
   3c6d8:	bcc	3c824 <flatcc_json_printer_uint32@@Base+0x1f4>
   3c6dc:	lsr	r3, lr, #3
   3c6e0:	mov	r0, #3
   3c6e4:	cmp	r3, #124	; 0x7c
   3c6e8:	movwhi	r0, #4
   3c6ec:	mov	r3, #0
   3c6f0:	tst	r0, #1
   3c6f4:	strb	r3, [r1, r0]!
   3c6f8:	beq	3c840 <flatcc_json_printer_uint32@@Base+0x210>
   3c6fc:	sub	ip, r0, #1
   3c700:	cmp	ip, #8
   3c704:	bhi	3c820 <flatcc_json_printer_uint32@@Base+0x1f0>
   3c708:	add	r3, pc, #0
   3c70c:	ldr	pc, [r3, ip, lsl #2]
   3c710:	andeq	ip, r3, r8, lsl r8
   3c714:	andeq	ip, r3, r0, lsr #16
   3c718:	andeq	ip, r3, r8, ror #15
   3c71c:	andeq	ip, r3, r0, lsr #16
   3c720:			; <UNDEFINED> instruction: 0x0003c7b8
   3c724:	andeq	ip, r3, r0, lsr #16
   3c728:	andeq	ip, r3, r8, lsl #15
   3c72c:	andeq	ip, r3, r0, lsr #16
   3c730:	andeq	ip, r3, r4, lsr r7
   3c734:	movw	r0, #34079	; 0x851f
   3c738:	movw	r2, #60904	; 0xede8
   3c73c:	movt	r0, #20971	; 0x51eb
   3c740:	movt	r2, #4
   3c744:	umull	r0, r3, lr, r0
   3c748:	mov	r0, #100	; 0x64
   3c74c:	lsr	r3, r3, #5
   3c750:	mls	r0, r3, r0, lr
   3c754:	mov	lr, r3
   3c758:	add	r0, r2, r0, lsl #1
   3c75c:	ldrh	r0, [r0]
   3c760:	strh	r0, [r1, #-2]!
   3c764:	mov	r0, #9
   3c768:	b	3c788 <flatcc_json_printer_uint32@@Base+0x158>
   3c76c:	movw	r0, #16960	; 0x4240
   3c770:	movt	r0, #15
   3c774:	cmp	lr, r0
   3c778:	bcc	3c958 <flatcc_json_printer_uint32@@Base+0x328>
   3c77c:	mov	r0, #0
   3c780:	strb	r0, [r1, #7]!
   3c784:	mov	r0, #7
   3c788:	movw	r3, #34079	; 0x851f
   3c78c:	movt	r3, #20971	; 0x51eb
   3c790:	umull	r3, r2, lr, r3
   3c794:	mov	r3, #100	; 0x64
   3c798:	lsr	r2, r2, #5
   3c79c:	mls	ip, r2, r3, lr
   3c7a0:	movw	r3, #60904	; 0xede8
   3c7a4:	mov	lr, r2
   3c7a8:	movt	r3, #4
   3c7ac:	add	r3, r3, ip, lsl #1
   3c7b0:	ldrh	r3, [r3]
   3c7b4:	strh	r3, [r1, #-2]!
   3c7b8:	movw	r2, #34079	; 0x851f
   3c7bc:	movt	r2, #20971	; 0x51eb
   3c7c0:	umull	r2, r3, lr, r2
   3c7c4:	lsr	r2, r3, #5
   3c7c8:	mov	r3, #100	; 0x64
   3c7cc:	mls	ip, r2, r3, lr
   3c7d0:	movw	r3, #60904	; 0xede8
   3c7d4:	mov	lr, r2
   3c7d8:	movt	r3, #4
   3c7dc:	add	r3, r3, ip, lsl #1
   3c7e0:	ldrh	r3, [r3]
   3c7e4:	strh	r3, [r1, #-2]!
   3c7e8:	movw	r2, #34079	; 0x851f
   3c7ec:	movt	r2, #20971	; 0x51eb
   3c7f0:	umull	r2, r3, lr, r2
   3c7f4:	lsr	r2, r3, #5
   3c7f8:	mov	r3, #100	; 0x64
   3c7fc:	mls	ip, r2, r3, lr
   3c800:	movw	r3, #60904	; 0xede8
   3c804:	mov	lr, r2
   3c808:	movt	r3, #4
   3c80c:	add	r3, r3, ip, lsl #1
   3c810:	ldrh	r3, [r3]
   3c814:	strh	r3, [r1, #-2]!
   3c818:	add	r2, lr, #48	; 0x30
   3c81c:	strb	r2, [r1, #-1]
   3c820:	pop	{fp, pc}
   3c824:	cmp	lr, #9
   3c828:	mov	r0, #1
   3c82c:	movwhi	r0, #2
   3c830:	mov	r3, #0
   3c834:	tst	r0, #1
   3c838:	strb	r3, [r1, r0]!
   3c83c:	bne	3c6fc <flatcc_json_printer_uint32@@Base+0xcc>
   3c840:	sub	r3, r0, #2
   3c844:	cmp	r3, #6
   3c848:	bhi	3c820 <flatcc_json_printer_uint32@@Base+0x1f0>
   3c84c:	add	r2, pc, #0
   3c850:	ldr	pc, [r2, r3, lsl #2]
   3c854:	andeq	ip, r3, r0, lsl #18
   3c858:	andeq	ip, r3, r0, lsr #16
   3c85c:	ldrdeq	ip, [r3], -r0
   3c860:	andeq	ip, r3, r0, lsr #16
   3c864:	andeq	ip, r3, r0, lsr #17
   3c868:	andeq	ip, r3, r0, lsr #16
   3c86c:	andeq	ip, r3, r0, ror r8
   3c870:	movw	r2, #34079	; 0x851f
   3c874:	movt	r2, #20971	; 0x51eb
   3c878:	umull	r2, r3, lr, r2
   3c87c:	lsr	r2, r3, #5
   3c880:	mov	r3, #100	; 0x64
   3c884:	mls	ip, r2, r3, lr
   3c888:	movw	r3, #60904	; 0xede8
   3c88c:	mov	lr, r2
   3c890:	movt	r3, #4
   3c894:	add	r3, r3, ip, lsl #1
   3c898:	ldrh	r3, [r3]
   3c89c:	strh	r3, [r1, #-2]!
   3c8a0:	movw	r2, #34079	; 0x851f
   3c8a4:	movt	r2, #20971	; 0x51eb
   3c8a8:	umull	r2, r3, lr, r2
   3c8ac:	lsr	r2, r3, #5
   3c8b0:	mov	r3, #100	; 0x64
   3c8b4:	mls	ip, r2, r3, lr
   3c8b8:	movw	r3, #60904	; 0xede8
   3c8bc:	mov	lr, r2
   3c8c0:	movt	r3, #4
   3c8c4:	add	r3, r3, ip, lsl #1
   3c8c8:	ldrh	r3, [r3]
   3c8cc:	strh	r3, [r1, #-2]!
   3c8d0:	movw	r2, #34079	; 0x851f
   3c8d4:	movt	r2, #20971	; 0x51eb
   3c8d8:	umull	r2, r3, lr, r2
   3c8dc:	lsr	r2, r3, #5
   3c8e0:	mov	r3, #100	; 0x64
   3c8e4:	mls	ip, r2, r3, lr
   3c8e8:	movw	r3, #60904	; 0xede8
   3c8ec:	mov	lr, r2
   3c8f0:	movt	r3, #4
   3c8f4:	add	r3, r3, ip, lsl #1
   3c8f8:	ldrh	r3, [r3]
   3c8fc:	strh	r3, [r1, #-2]!
   3c900:	movw	r2, #34079	; 0x851f
   3c904:	movt	r2, #20971	; 0x51eb
   3c908:	umull	r2, r3, lr, r2
   3c90c:	lsr	r2, r3, #5
   3c910:	mov	r3, #100	; 0x64
   3c914:	mls	r2, r2, r3, lr
   3c918:	movw	r3, #60904	; 0xede8
   3c91c:	movt	r3, #4
   3c920:	add	r2, r3, r2, lsl #1
   3c924:	ldrh	r2, [r2]
   3c928:	strh	r2, [r1, #-2]
   3c92c:	pop	{fp, pc}
   3c930:	movw	r3, #57599	; 0xe0ff
   3c934:	mov	r0, #8
   3c938:	movt	r3, #1525	; 0x5f5
   3c93c:	cmp	lr, r3
   3c940:	movwhi	r0, #9
   3c944:	mov	r3, #0
   3c948:	tst	r0, #1
   3c94c:	strb	r3, [r1, r0]!
   3c950:	bne	3c6fc <flatcc_json_printer_uint32@@Base+0xcc>
   3c954:	b	3c840 <flatcc_json_printer_uint32@@Base+0x210>
   3c958:	movw	r3, #34463	; 0x869f
   3c95c:	mov	r0, #5
   3c960:	movt	r3, #1
   3c964:	cmp	lr, r3
   3c968:	movwhi	r0, #6
   3c96c:	mov	r3, #0
   3c970:	tst	r0, #1
   3c974:	strb	r3, [r1, r0]!
   3c978:	bne	3c6fc <flatcc_json_printer_uint32@@Base+0xcc>
   3c97c:	b	3c840 <flatcc_json_printer_uint32@@Base+0x210>

0003c980 <flatcc_json_printer_uint64@@Base>:
   3c980:	push	{r4, sl, fp, lr}
   3c984:	add	fp, sp, #8
   3c988:	mov	r1, r3
   3c98c:	mov	r3, r2
   3c990:	ldr	r2, [r0, #20]
   3c994:	mov	r4, r0
   3c998:	mov	r0, r3
   3c99c:	bl	3c9b0 <flatcc_json_printer_uint64@@Base+0x30>
   3c9a0:	ldr	r1, [r4, #20]
   3c9a4:	add	r0, r1, r0
   3c9a8:	str	r0, [r4, #20]
   3c9ac:	pop	{r4, sl, fp, pc}
   3c9b0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3c9b4:	add	fp, sp, #28
   3c9b8:	sub	sp, sp, #4
   3c9bc:	mov	r7, r0
   3c9c0:	movw	r0, #51711	; 0xc9ff
   3c9c4:	mov	r4, r2
   3c9c8:	movt	r0, #15258	; 0x3b9a
   3c9cc:	subs	r0, r0, r7
   3c9d0:	rscs	r0, r1, #0
   3c9d4:	bcc	3c9ec <flatcc_json_printer_uint64@@Base+0x6c>
   3c9d8:	mov	r0, r7
   3c9dc:	mov	r1, r4
   3c9e0:	sub	sp, fp, #28
   3c9e4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3c9e8:	b	3c65c <flatcc_json_printer_uint32@@Base+0x2c>
   3c9ec:	mov	r6, r1
   3c9f0:	movw	r1, #40960	; 0xa000
   3c9f4:	movw	r9, #60904	; 0xede8
   3c9f8:	movw	r0, #2328	; 0x918
   3c9fc:	movt	r1, #20082	; 0x4e72
   3ca00:	movt	r9, #4
   3ca04:	subs	r1, r7, r1
   3ca08:	sbcs	r0, r6, r0
   3ca0c:	bcc	3ca7c <flatcc_json_printer_uint64@@Base+0xfc>
   3ca10:	movw	r1, #0
   3ca14:	movw	r0, #34546	; 0x86f2
   3ca18:	movt	r1, #28609	; 0x6fc1
   3ca1c:	movt	r0, #35	; 0x23
   3ca20:	subs	r1, r7, r1
   3ca24:	sbcs	r0, r6, r0
   3ca28:	bcc	3cc08 <flatcc_json_printer_uint64@@Base+0x288>
   3ca2c:	movw	r1, #0
   3ca30:	movw	r0, #46771	; 0xb6b3
   3ca34:	movt	r1, #42852	; 0xa764
   3ca38:	movt	r0, #3552	; 0xde0
   3ca3c:	subs	r1, r7, r1
   3ca40:	sbcs	r0, r6, r0
   3ca44:	bcc	3ce64 <flatcc_json_printer_uint64@@Base+0x4e4>
   3ca48:	movw	r1, #65535	; 0xffff
   3ca4c:	movw	r0, #8964	; 0x2304
   3ca50:	mov	r8, #19
   3ca54:	movt	r1, #35303	; 0x89e7
   3ca58:	movt	r0, #35527	; 0x8ac7
   3ca5c:	subs	r1, r1, r7
   3ca60:	sbcs	r0, r0, r6
   3ca64:	movwcc	r8, #20
   3ca68:	mov	r0, #0
   3ca6c:	tst	r8, #1
   3ca70:	strb	r0, [r4, r8]!
   3ca74:	bne	3cab8 <flatcc_json_printer_uint64@@Base+0x138>
   3ca78:	b	3cc5c <flatcc_json_printer_uint64@@Base+0x2dc>
   3ca7c:	movw	r0, #59392	; 0xe800
   3ca80:	movt	r0, #18550	; 0x4876
   3ca84:	subs	r0, r7, r0
   3ca88:	sbcs	r0, r6, #23
   3ca8c:	bcc	3cc34 <flatcc_json_printer_uint64@@Base+0x2b4>
   3ca90:	movw	r0, #4095	; 0xfff
   3ca94:	mov	r8, #12
   3ca98:	movt	r0, #54437	; 0xd4a5
   3ca9c:	subs	r0, r0, r7
   3caa0:	rscs	r0, r6, #232	; 0xe8
   3caa4:	movwcc	r8, #13
   3caa8:	mov	r0, #0
   3caac:	tst	r8, #1
   3cab0:	strb	r0, [r4, r8]!
   3cab4:	beq	3cc5c <flatcc_json_printer_uint64@@Base+0x2dc>
   3cab8:	sub	r0, r8, #11
   3cabc:	cmp	r0, #8
   3cac0:	bhi	3cdbc <flatcc_json_printer_uint64@@Base+0x43c>
   3cac4:	add	r1, pc, #0
   3cac8:	ldr	pc, [r1, r0, lsl #2]
   3cacc:	andeq	ip, r3, r8, lsr #23
   3cad0:			; <UNDEFINED> instruction: 0x0003cdbc
   3cad4:	andeq	ip, r3, r8, ror fp
   3cad8:			; <UNDEFINED> instruction: 0x0003cdbc
   3cadc:	andeq	ip, r3, r8, asr #22
   3cae0:			; <UNDEFINED> instruction: 0x0003cdbc
   3cae4:	andeq	ip, r3, r8, lsl fp
   3cae8:			; <UNDEFINED> instruction: 0x0003cdbc
   3caec:	strdeq	ip, [r3], -r0
   3caf0:	mov	r0, r7
   3caf4:	mov	r1, r6
   3caf8:	mov	r2, #100	; 0x64
   3cafc:	mov	r3, #0
   3cb00:	bl	484ec <flatcc_json_printer_clear@@Base+0x7ac>
   3cb04:	mov	r7, r0
   3cb08:	add	r0, r9, r2, lsl #1
   3cb0c:	mov	r6, r1
   3cb10:	ldrh	r0, [r0]
   3cb14:	strh	r0, [r4, #-2]!
   3cb18:	mov	r0, r7
   3cb1c:	mov	r1, r6
   3cb20:	mov	r2, #100	; 0x64
   3cb24:	mov	r3, #0
   3cb28:	mov	r5, #100	; 0x64
   3cb2c:	bl	484ec <flatcc_json_printer_clear@@Base+0x7ac>
   3cb30:	mov	r6, r1
   3cb34:	mls	r1, r0, r5, r7
   3cb38:	mov	r7, r0
   3cb3c:	add	r1, r9, r1, lsl #1
   3cb40:	ldrh	r1, [r1]
   3cb44:	strh	r1, [r4, #-2]!
   3cb48:	mov	r0, r7
   3cb4c:	mov	r1, r6
   3cb50:	mov	r2, #100	; 0x64
   3cb54:	mov	r3, #0
   3cb58:	mov	r5, #100	; 0x64
   3cb5c:	bl	484ec <flatcc_json_printer_clear@@Base+0x7ac>
   3cb60:	mov	r6, r1
   3cb64:	mls	r1, r0, r5, r7
   3cb68:	mov	r7, r0
   3cb6c:	add	r1, r9, r1, lsl #1
   3cb70:	ldrh	r1, [r1]
   3cb74:	strh	r1, [r4, #-2]!
   3cb78:	mov	r0, r7
   3cb7c:	mov	r1, r6
   3cb80:	mov	r2, #100	; 0x64
   3cb84:	mov	r3, #0
   3cb88:	mov	r5, #100	; 0x64
   3cb8c:	bl	484ec <flatcc_json_printer_clear@@Base+0x7ac>
   3cb90:	mov	r6, r1
   3cb94:	mls	r1, r0, r5, r7
   3cb98:	mov	r7, r0
   3cb9c:	add	r1, r9, r1, lsl #1
   3cba0:	ldrh	r1, [r1]
   3cba4:	strh	r1, [r4, #-2]!
   3cba8:	mov	r0, r7
   3cbac:	mov	r1, r6
   3cbb0:	mov	r2, #100	; 0x64
   3cbb4:	mov	r3, #0
   3cbb8:	mov	sl, #100	; 0x64
   3cbbc:	bl	484ec <flatcc_json_printer_clear@@Base+0x7ac>
   3cbc0:	mov	r2, #10
   3cbc4:	mov	r3, #0
   3cbc8:	mov	r5, r0
   3cbcc:	bl	484ec <flatcc_json_printer_clear@@Base+0x7ac>
   3cbd0:	orr	r0, r2, #48	; 0x30
   3cbd4:	mov	r1, r6
   3cbd8:	mov	r2, #1000	; 0x3e8
   3cbdc:	mov	r3, #0
   3cbe0:	strb	r0, [r4, #-3]!
   3cbe4:	mls	r0, r5, sl, r7
   3cbe8:	add	r0, r9, r0, lsl #1
   3cbec:	ldrh	r0, [r0]
   3cbf0:	strh	r0, [r4, #1]
   3cbf4:	mov	r0, r7
   3cbf8:	bl	484ec <flatcc_json_printer_clear@@Base+0x7ac>
   3cbfc:	mov	r7, r0
   3cc00:	mov	r6, r1
   3cc04:	b	3cdbc <flatcc_json_printer_uint64@@Base+0x43c>
   3cc08:	movw	r1, #32768	; 0x8000
   3cc0c:	movw	r0, #36222	; 0x8d7e
   3cc10:	movt	r1, #42182	; 0xa4c6
   3cc14:	movt	r0, #3
   3cc18:	subs	r1, r7, r1
   3cc1c:	sbcs	r0, r6, r0
   3cc20:	bcc	3ce98 <flatcc_json_printer_uint64@@Base+0x518>
   3cc24:	mov	r0, #0
   3cc28:	mov	r8, #16
   3cc2c:	strb	r0, [r4, #16]!
   3cc30:	b	3ccfc <flatcc_json_printer_uint64@@Base+0x37c>
   3cc34:	movw	r0, #58367	; 0xe3ff
   3cc38:	mov	r8, #10
   3cc3c:	movt	r0, #21515	; 0x540b
   3cc40:	subs	r0, r0, r7
   3cc44:	rscs	r0, r6, #2
   3cc48:	movwcc	r8, #11
   3cc4c:	mov	r0, #0
   3cc50:	tst	r8, #1
   3cc54:	strb	r0, [r4, r8]!
   3cc58:	bne	3cab8 <flatcc_json_printer_uint64@@Base+0x138>
   3cc5c:	sub	r0, r8, #10
   3cc60:	cmp	r0, #10
   3cc64:	bhi	3cdbc <flatcc_json_printer_uint64@@Base+0x43c>
   3cc68:	add	r1, pc, #0
   3cc6c:	ldr	pc, [r1, r0, lsl #2]
   3cc70:	andeq	ip, r3, ip, lsl #27
   3cc74:			; <UNDEFINED> instruction: 0x0003cdbc
   3cc78:	andeq	ip, r3, ip, asr sp
   3cc7c:			; <UNDEFINED> instruction: 0x0003cdbc
   3cc80:	andeq	ip, r3, ip, lsr #26
   3cc84:			; <UNDEFINED> instruction: 0x0003cdbc
   3cc88:	strdeq	ip, [r3], -ip	; <UNPREDICTABLE>
   3cc8c:			; <UNDEFINED> instruction: 0x0003cdbc
   3cc90:	andeq	ip, r3, ip, asr #25
   3cc94:			; <UNDEFINED> instruction: 0x0003cdbc
   3cc98:	muleq	r3, ip, ip
   3cc9c:	mov	r0, r7
   3cca0:	mov	r1, r6
   3cca4:	mov	r2, #100	; 0x64
   3cca8:	mov	r3, #0
   3ccac:	mov	r5, #100	; 0x64
   3ccb0:	bl	484ec <flatcc_json_printer_clear@@Base+0x7ac>
   3ccb4:	mov	r6, r1
   3ccb8:	mls	r1, r0, r5, r7
   3ccbc:	mov	r7, r0
   3ccc0:	add	r1, r9, r1, lsl #1
   3ccc4:	ldrh	r1, [r1]
   3ccc8:	strh	r1, [r4, #-2]!
   3cccc:	mov	r0, r7
   3ccd0:	mov	r1, r6
   3ccd4:	mov	r2, #100	; 0x64
   3ccd8:	mov	r3, #0
   3ccdc:	mov	r5, #100	; 0x64
   3cce0:	bl	484ec <flatcc_json_printer_clear@@Base+0x7ac>
   3cce4:	mov	r6, r1
   3cce8:	mls	r1, r0, r5, r7
   3ccec:	mov	r7, r0
   3ccf0:	add	r1, r9, r1, lsl #1
   3ccf4:	ldrh	r1, [r1]
   3ccf8:	strh	r1, [r4, #-2]!
   3ccfc:	mov	r0, r7
   3cd00:	mov	r1, r6
   3cd04:	mov	r2, #100	; 0x64
   3cd08:	mov	r3, #0
   3cd0c:	mov	r5, #100	; 0x64
   3cd10:	bl	484ec <flatcc_json_printer_clear@@Base+0x7ac>
   3cd14:	mov	r6, r1
   3cd18:	mls	r1, r0, r5, r7
   3cd1c:	mov	r7, r0
   3cd20:	add	r1, r9, r1, lsl #1
   3cd24:	ldrh	r1, [r1]
   3cd28:	strh	r1, [r4, #-2]!
   3cd2c:	mov	r0, r7
   3cd30:	mov	r1, r6
   3cd34:	mov	r2, #100	; 0x64
   3cd38:	mov	r3, #0
   3cd3c:	mov	r5, #100	; 0x64
   3cd40:	bl	484ec <flatcc_json_printer_clear@@Base+0x7ac>
   3cd44:	mov	r6, r1
   3cd48:	mls	r1, r0, r5, r7
   3cd4c:	mov	r7, r0
   3cd50:	add	r1, r9, r1, lsl #1
   3cd54:	ldrh	r1, [r1]
   3cd58:	strh	r1, [r4, #-2]!
   3cd5c:	mov	r0, r7
   3cd60:	mov	r1, r6
   3cd64:	mov	r2, #100	; 0x64
   3cd68:	mov	r3, #0
   3cd6c:	mov	r5, #100	; 0x64
   3cd70:	bl	484ec <flatcc_json_printer_clear@@Base+0x7ac>
   3cd74:	mov	r6, r1
   3cd78:	mls	r1, r0, r5, r7
   3cd7c:	mov	r7, r0
   3cd80:	add	r1, r9, r1, lsl #1
   3cd84:	ldrh	r1, [r1]
   3cd88:	strh	r1, [r4, #-2]!
   3cd8c:	mov	r0, r7
   3cd90:	mov	r1, r6
   3cd94:	mov	r2, #100	; 0x64
   3cd98:	mov	r3, #0
   3cd9c:	mov	r5, #100	; 0x64
   3cda0:	bl	484ec <flatcc_json_printer_clear@@Base+0x7ac>
   3cda4:	mov	r6, r1
   3cda8:	mls	r1, r0, r5, r7
   3cdac:	mov	r7, r0
   3cdb0:	add	r1, r9, r1, lsl #1
   3cdb4:	ldrh	r1, [r1]
   3cdb8:	strh	r1, [r4, #-2]!
   3cdbc:	mov	r0, r7
   3cdc0:	mov	r1, r6
   3cdc4:	mov	r2, #100	; 0x64
   3cdc8:	mov	r3, #0
   3cdcc:	mov	r5, #100	; 0x64
   3cdd0:	bl	484ec <flatcc_json_printer_clear@@Base+0x7ac>
   3cdd4:	mls	r2, r0, r5, r7
   3cdd8:	mov	r3, #0
   3cddc:	add	r2, r9, r2, lsl #1
   3cde0:	ldrh	r2, [r2]
   3cde4:	strh	r2, [r4, #-2]
   3cde8:	mov	r2, #100	; 0x64
   3cdec:	bl	484ec <flatcc_json_printer_clear@@Base+0x7ac>
   3cdf0:	add	r0, r9, r2, lsl #1
   3cdf4:	mov	r1, r6
   3cdf8:	movw	r2, #10000	; 0x2710
   3cdfc:	mov	r3, #0
   3ce00:	ldrh	r0, [r0]
   3ce04:	strh	r0, [r4, #-4]
   3ce08:	mov	r0, r7
   3ce0c:	bl	484ec <flatcc_json_printer_clear@@Base+0x7ac>
   3ce10:	mov	r2, #100	; 0x64
   3ce14:	mov	r3, #0
   3ce18:	bl	484ec <flatcc_json_printer_clear@@Base+0x7ac>
   3ce1c:	add	r0, r9, r2, lsl #1
   3ce20:	movw	r2, #16960	; 0x4240
   3ce24:	mov	r1, r6
   3ce28:	mov	r3, #0
   3ce2c:	movt	r2, #15
   3ce30:	ldrh	r0, [r0]
   3ce34:	strh	r0, [r4, #-6]
   3ce38:	mov	r0, r7
   3ce3c:	bl	484ec <flatcc_json_printer_clear@@Base+0x7ac>
   3ce40:	mov	r2, #100	; 0x64
   3ce44:	mov	r3, #0
   3ce48:	bl	484ec <flatcc_json_printer_clear@@Base+0x7ac>
   3ce4c:	add	r0, r9, r2, lsl #1
   3ce50:	ldrh	r0, [r0]
   3ce54:	strh	r0, [r4, #-8]
   3ce58:	mov	r0, r8
   3ce5c:	sub	sp, fp, #28
   3ce60:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3ce64:	movw	r1, #65535	; 0xffff
   3ce68:	movw	r0, #17784	; 0x4578
   3ce6c:	mov	r8, #17
   3ce70:	movt	r1, #23945	; 0x5d89
   3ce74:	movt	r0, #355	; 0x163
   3ce78:	subs	r1, r1, r7
   3ce7c:	sbcs	r0, r0, r6
   3ce80:	movwcc	r8, #18
   3ce84:	mov	r0, #0
   3ce88:	tst	r8, #1
   3ce8c:	strb	r0, [r4, r8]!
   3ce90:	bne	3cab8 <flatcc_json_printer_uint64@@Base+0x138>
   3ce94:	b	3cc5c <flatcc_json_printer_uint64@@Base+0x2dc>
   3ce98:	movw	r1, #16383	; 0x3fff
   3ce9c:	movw	r0, #23283	; 0x5af3
   3cea0:	mov	r8, #14
   3cea4:	movt	r1, #4218	; 0x107a
   3cea8:	subs	r1, r1, r7
   3ceac:	sbcs	r0, r0, r6
   3ceb0:	movwcc	r8, #15
   3ceb4:	mov	r0, #0
   3ceb8:	tst	r8, #1
   3cebc:	strb	r0, [r4, r8]!
   3cec0:	bne	3cab8 <flatcc_json_printer_uint64@@Base+0x138>
   3cec4:	b	3cc5c <flatcc_json_printer_uint64@@Base+0x2dc>

0003cec8 <flatcc_json_printer_int8@@Base>:
   3cec8:	push	{fp, lr}
   3cecc:	mov	fp, sp
   3ced0:	ldr	lr, [r0, #20]
   3ced4:	cmn	r1, #1
   3ced8:	uxtb	ip, r1
   3cedc:	movle	r3, #45	; 0x2d
   3cee0:	rsble	r1, r1, #0
   3cee4:	lsr	ip, ip, #7
   3cee8:	strble	r3, [lr], #1
   3ceec:	uxtb	r3, r1
   3cef0:	cmp	r3, #100	; 0x64
   3cef4:	bcc	3cf44 <flatcc_json_printer_int8@@Base+0x7c>
   3cef8:	mov	r1, #0
   3cefc:	strb	r1, [lr, #3]
   3cf00:	movw	r1, #34079	; 0x851f
   3cf04:	movt	r1, #20971	; 0x51eb
   3cf08:	umull	r1, r2, r3, r1
   3cf0c:	mov	r1, #48	; 0x30
   3cf10:	orr	r1, r1, r2, lsr #5
   3cf14:	strb	r1, [lr]
   3cf18:	lsr	r1, r2, #5
   3cf1c:	mov	r2, #100	; 0x64
   3cf20:	mls	r1, r1, r2, r3
   3cf24:	movw	r2, #60904	; 0xede8
   3cf28:	movt	r2, #4
   3cf2c:	uxtb	r1, r1
   3cf30:	add	r1, r2, r1, lsl #1
   3cf34:	ldrh	r1, [r1]
   3cf38:	strh	r1, [lr, #1]
   3cf3c:	mov	r1, #3
   3cf40:	b	3cf9c <flatcc_json_printer_int8@@Base+0xd4>
   3cf44:	cmp	r3, #10
   3cf48:	bcc	3cf88 <flatcc_json_printer_int8@@Base+0xc0>
   3cf4c:	mov	r1, #0
   3cf50:	strb	r1, [lr, #2]
   3cf54:	movw	r1, #34079	; 0x851f
   3cf58:	movt	r1, #20971	; 0x51eb
   3cf5c:	umull	r1, r2, r3, r1
   3cf60:	lsr	r1, r2, #5
   3cf64:	mov	r2, #100	; 0x64
   3cf68:	mls	r1, r1, r2, r3
   3cf6c:	movw	r2, #60904	; 0xede8
   3cf70:	movt	r2, #4
   3cf74:	add	r1, r2, r1, lsl #1
   3cf78:	ldrh	r1, [r1]
   3cf7c:	strh	r1, [lr]
   3cf80:	mov	r1, #2
   3cf84:	b	3cf9c <flatcc_json_printer_int8@@Base+0xd4>
   3cf88:	mov	r2, #0
   3cf8c:	add	r1, r1, #48	; 0x30
   3cf90:	strb	r2, [lr, #1]
   3cf94:	strb	r1, [lr]
   3cf98:	mov	r1, #1
   3cf9c:	ldr	r2, [r0, #20]
   3cfa0:	add	r1, r1, ip
   3cfa4:	add	r1, r2, r1
   3cfa8:	str	r1, [r0, #20]
   3cfac:	pop	{fp, pc}

0003cfb0 <flatcc_json_printer_int16@@Base>:
   3cfb0:	push	{r4, r5, fp, lr}
   3cfb4:	add	fp, sp, #8
   3cfb8:	mov	r2, r1
   3cfbc:	ldr	r1, [r0, #20]
   3cfc0:	mov	r4, r0
   3cfc4:	uxth	r0, r2
   3cfc8:	cmn	r2, #1
   3cfcc:	rsble	r2, r2, #0
   3cfd0:	lsr	r5, r0, #15
   3cfd4:	movle	r0, #45	; 0x2d
   3cfd8:	strble	r0, [r1], #1
   3cfdc:	uxth	r0, r2
   3cfe0:	bl	3c4ac <flatcc_json_printer_uint16@@Base+0x2c>
   3cfe4:	ldr	r1, [r4, #20]
   3cfe8:	add	r0, r0, r5
   3cfec:	add	r0, r1, r0
   3cff0:	str	r0, [r4, #20]
   3cff4:	pop	{r4, r5, fp, pc}

0003cff8 <flatcc_json_printer_int32@@Base>:
   3cff8:	push	{r4, r5, fp, lr}
   3cffc:	add	fp, sp, #8
   3d000:	mov	r2, r1
   3d004:	lsr	r5, r1, #31
   3d008:	ldr	r1, [r0, #20]
   3d00c:	mov	r4, r0
   3d010:	cmn	r2, #1
   3d014:	movle	r0, #45	; 0x2d
   3d018:	rsble	r2, r2, #0
   3d01c:	strble	r0, [r1], #1
   3d020:	mov	r0, r2
   3d024:	bl	3c65c <flatcc_json_printer_uint32@@Base+0x2c>
   3d028:	ldr	r1, [r4, #20]
   3d02c:	add	r0, r0, r5
   3d030:	add	r0, r1, r0
   3d034:	str	r0, [r4, #20]
   3d038:	pop	{r4, r5, fp, pc}

0003d03c <flatcc_json_printer_int64@@Base>:
   3d03c:	push	{r4, r5, fp, lr}
   3d040:	add	fp, sp, #8
   3d044:	mov	r1, r3
   3d048:	mov	r3, r2
   3d04c:	ldr	r2, [r0, #20]
   3d050:	mov	r4, r0
   3d054:	lsr	r5, r1, #31
   3d058:	cmn	r1, #1
   3d05c:	bgt	3d070 <flatcc_json_printer_int64@@Base+0x34>
   3d060:	mov	r0, #45	; 0x2d
   3d064:	rsbs	r3, r3, #0
   3d068:	strb	r0, [r2], #1
   3d06c:	rsc	r1, r1, #0
   3d070:	mov	r0, r3
   3d074:	bl	3c9b0 <flatcc_json_printer_uint64@@Base+0x30>
   3d078:	ldr	r1, [r4, #20]
   3d07c:	add	r0, r0, r5
   3d080:	add	r0, r1, r0
   3d084:	str	r0, [r4, #20]
   3d088:	pop	{r4, r5, fp, pc}

0003d08c <flatcc_json_printer_float@@Base>:
   3d08c:	push	{r4, sl, fp, lr}
   3d090:	add	fp, sp, #8
   3d094:	vcvt.f64.f32	d0, s0
   3d098:	mov	r4, r0
   3d09c:	ldr	r0, [r0, #20]
   3d0a0:	bl	3af80 <flatcc_json_printer_fmt_float@@Base+0x8>
   3d0a4:	ldr	r1, [r4, #20]
   3d0a8:	add	r0, r1, r0
   3d0ac:	str	r0, [r4, #20]
   3d0b0:	pop	{r4, sl, fp, pc}

0003d0b4 <flatcc_json_printer_double@@Base>:
   3d0b4:	push	{r4, sl, fp, lr}
   3d0b8:	add	fp, sp, #8
   3d0bc:	mov	r4, r0
   3d0c0:	ldr	r0, [r0, #20]
   3d0c4:	bl	3af80 <flatcc_json_printer_fmt_float@@Base+0x8>
   3d0c8:	ldr	r1, [r4, #20]
   3d0cc:	add	r0, r1, r0
   3d0d0:	str	r0, [r4, #20]
   3d0d4:	pop	{r4, sl, fp, pc}

0003d0d8 <flatcc_json_printer_enum@@Base>:
   3d0d8:	push	{r4, r5, r6, r7, fp, lr}
   3d0dc:	add	fp, sp, #16
   3d0e0:	mov	r4, r0
   3d0e4:	ldr	r0, [r0, #20]
   3d0e8:	mov	r6, r1
   3d0ec:	mov	r1, #34	; 0x22
   3d0f0:	mov	r5, r2
   3d0f4:	strb	r1, [r0]
   3d0f8:	ldrb	r2, [r4, #26]
   3d0fc:	ldr	r0, [r4, #20]
   3d100:	ldr	r1, [r4, #16]
   3d104:	cmp	r2, #0
   3d108:	addeq	r0, r0, #1
   3d10c:	add	r2, r0, r5
   3d110:	str	r0, [r4, #20]
   3d114:	cmp	r2, r1
   3d118:	bcc	3d18c <flatcc_json_printer_enum@@Base+0xb4>
   3d11c:	cmp	r0, r1
   3d120:	bcc	3d13c <flatcc_json_printer_enum@@Base+0x64>
   3d124:	ldr	r2, [r4, #44]	; 0x2c
   3d128:	mov	r0, r4
   3d12c:	mov	r1, #0
   3d130:	blx	r2
   3d134:	ldr	r1, [r4, #16]
   3d138:	ldr	r0, [r4, #20]
   3d13c:	sub	r7, r1, r0
   3d140:	cmp	r7, r5
   3d144:	bcs	3d18c <flatcc_json_printer_enum@@Base+0xb4>
   3d148:	mov	r1, r6
   3d14c:	mov	r2, r7
   3d150:	bl	14e5c <memcpy@plt>
   3d154:	ldr	r0, [r4, #20]
   3d158:	ldr	r2, [r4, #44]	; 0x2c
   3d15c:	mov	r1, #0
   3d160:	add	r0, r0, r7
   3d164:	str	r0, [r4, #20]
   3d168:	mov	r0, r4
   3d16c:	blx	r2
   3d170:	ldr	r1, [r4, #16]
   3d174:	ldr	r0, [r4, #20]
   3d178:	sub	r5, r5, r7
   3d17c:	add	r6, r6, r7
   3d180:	sub	r7, r1, r0
   3d184:	cmp	r5, r7
   3d188:	bhi	3d148 <flatcc_json_printer_enum@@Base+0x70>
   3d18c:	mov	r1, r6
   3d190:	mov	r2, r5
   3d194:	bl	14e5c <memcpy@plt>
   3d198:	ldr	r0, [r4, #20]
   3d19c:	add	r1, r0, r5
   3d1a0:	str	r1, [r4, #20]
   3d1a4:	mov	r1, #34	; 0x22
   3d1a8:	strb	r1, [r0, r5]
   3d1ac:	ldrb	r0, [r4, #26]
   3d1b0:	ldr	r1, [r4, #20]
   3d1b4:	cmp	r0, #0
   3d1b8:	addeq	r1, r1, #1
   3d1bc:	str	r1, [r4, #20]
   3d1c0:	pop	{r4, r5, r6, r7, fp, pc}

0003d1c4 <flatcc_json_printer_delimit_enum_flags@@Base>:
   3d1c4:	ldrb	ip, [r0, #26]
   3d1c8:	ldr	r3, [r0, #20]
   3d1cc:	mov	r2, #34	; 0x22
   3d1d0:	cmp	r1, #0
   3d1d4:	movwne	r1, #1
   3d1d8:	strb	r2, [r3]
   3d1dc:	clz	r2, ip
   3d1e0:	lsr	r2, r2, #5
   3d1e4:	orr	r1, r1, r2
   3d1e8:	ldr	r2, [r0, #20]
   3d1ec:	add	r1, r2, r1
   3d1f0:	str	r1, [r0, #20]
   3d1f4:	bx	lr

0003d1f8 <flatcc_json_printer_enum_flag@@Base>:
   3d1f8:	push	{r4, r5, r6, r7, fp, lr}
   3d1fc:	add	fp, sp, #16
   3d200:	mov	r5, r0
   3d204:	ldr	r0, [r0, #20]
   3d208:	mov	r6, r2
   3d20c:	mov	r2, #32
   3d210:	cmp	r1, #0
   3d214:	mov	r4, r3
   3d218:	strb	r2, [r0]
   3d21c:	ldr	r0, [r5, #20]
   3d220:	ldr	r2, [r5, #16]
   3d224:	addgt	r0, r0, #1
   3d228:	add	r1, r0, r3
   3d22c:	str	r0, [r5, #20]
   3d230:	cmp	r1, r2
   3d234:	bcc	3d2a8 <flatcc_json_printer_enum_flag@@Base+0xb0>
   3d238:	cmp	r0, r2
   3d23c:	bcc	3d258 <flatcc_json_printer_enum_flag@@Base+0x60>
   3d240:	ldr	r2, [r5, #44]	; 0x2c
   3d244:	mov	r0, r5
   3d248:	mov	r1, #0
   3d24c:	blx	r2
   3d250:	ldr	r2, [r5, #16]
   3d254:	ldr	r0, [r5, #20]
   3d258:	sub	r7, r2, r0
   3d25c:	cmp	r7, r4
   3d260:	bcs	3d2a8 <flatcc_json_printer_enum_flag@@Base+0xb0>
   3d264:	mov	r1, r6
   3d268:	mov	r2, r7
   3d26c:	bl	14e5c <memcpy@plt>
   3d270:	ldr	r0, [r5, #20]
   3d274:	ldr	r2, [r5, #44]	; 0x2c
   3d278:	mov	r1, #0
   3d27c:	add	r0, r0, r7
   3d280:	str	r0, [r5, #20]
   3d284:	mov	r0, r5
   3d288:	blx	r2
   3d28c:	ldr	r1, [r5, #16]
   3d290:	ldr	r0, [r5, #20]
   3d294:	sub	r4, r4, r7
   3d298:	add	r6, r6, r7
   3d29c:	sub	r7, r1, r0
   3d2a0:	cmp	r4, r7
   3d2a4:	bhi	3d264 <flatcc_json_printer_enum_flag@@Base+0x6c>
   3d2a8:	mov	r1, r6
   3d2ac:	mov	r2, r4
   3d2b0:	bl	14e5c <memcpy@plt>
   3d2b4:	ldr	r0, [r5, #20]
   3d2b8:	add	r0, r0, r4
   3d2bc:	str	r0, [r5, #20]
   3d2c0:	pop	{r4, r5, r6, r7, fp, pc}

0003d2c4 <flatcc_json_printer_string_field@@Base>:
   3d2c4:	push	{r4, r5, fp, lr}
   3d2c8:	add	fp, sp, #8
   3d2cc:	mov	r4, r0
   3d2d0:	mov	r0, #4
   3d2d4:	add	r0, r0, r2, lsl #1
   3d2d8:	ldr	r2, [r1, #8]
   3d2dc:	cmp	r0, r2
   3d2e0:	popge	{r4, r5, fp, pc}
   3d2e4:	ldr	r2, [r1, #4]
   3d2e8:	add	r0, r2, r0
   3d2ec:	ldrh	r0, [r0]
   3d2f0:	cmp	r0, #0
   3d2f4:	ldrne	r2, [r1]
   3d2f8:	addsne	r5, r2, r0
   3d2fc:	bne	3d304 <flatcc_json_printer_string_field@@Base+0x40>
   3d300:	pop	{r4, r5, fp, pc}
   3d304:	ldr	ip, [r1, #16]
   3d308:	ldr	r2, [fp, #8]
   3d30c:	add	r0, ip, #1
   3d310:	cmp	ip, #0
   3d314:	str	r0, [r1, #16]
   3d318:	beq	3d330 <flatcc_json_printer_string_field@@Base+0x6c>
   3d31c:	ldr	r0, [r4, #20]
   3d320:	add	r1, r0, #1
   3d324:	str	r1, [r4, #20]
   3d328:	mov	r1, #44	; 0x2c
   3d32c:	strb	r1, [r0]
   3d330:	mov	r0, r4
   3d334:	mov	r1, r3
   3d338:	bl	3d354 <flatcc_json_printer_string_field@@Base+0x90>
   3d33c:	ldr	r0, [r5]
   3d340:	ldr	r2, [r5, r0]!
   3d344:	mov	r0, r4
   3d348:	add	r1, r5, #4
   3d34c:	pop	{r4, r5, fp, lr}
   3d350:	b	3bed8 <flatcc_json_printer_string@@Base+0x4>
   3d354:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   3d358:	add	fp, sp, #24
   3d35c:	mov	r4, r0
   3d360:	mov	r6, r1
   3d364:	ldr	r0, [r0, #20]
   3d368:	mov	r8, r2
   3d36c:	ldrb	r1, [r4, #25]
   3d370:	cmp	r1, #0
   3d374:	beq	3d430 <flatcc_json_printer_string_field@@Base+0x16c>
   3d378:	add	r1, r0, #1
   3d37c:	str	r1, [r4, #20]
   3d380:	mov	r1, #10
   3d384:	strb	r1, [r0]
   3d388:	ldr	r0, [r4, #20]
   3d38c:	ldrb	r2, [r4, #25]
   3d390:	ldr	r3, [r4, #32]
   3d394:	ldr	r1, [r4, #16]
   3d398:	mla	r5, r3, r2, r0
   3d39c:	mul	r7, r3, r2
   3d3a0:	cmp	r5, r1
   3d3a4:	bls	3d414 <flatcc_json_printer_string_field@@Base+0x150>
   3d3a8:	cmp	r0, r1
   3d3ac:	bcc	3d3c8 <flatcc_json_printer_string_field@@Base+0x104>
   3d3b0:	ldr	r2, [r4, #44]	; 0x2c
   3d3b4:	mov	r0, r4
   3d3b8:	mov	r1, #0
   3d3bc:	blx	r2
   3d3c0:	ldr	r1, [r4, #16]
   3d3c4:	ldr	r0, [r4, #20]
   3d3c8:	sub	r5, r1, r0
   3d3cc:	cmp	r5, r7
   3d3d0:	bcs	3d414 <flatcc_json_printer_string_field@@Base+0x150>
   3d3d4:	mov	r1, #32
   3d3d8:	mov	r2, r5
   3d3dc:	bl	14eec <memset@plt>
   3d3e0:	ldr	r0, [r4, #20]
   3d3e4:	ldr	r2, [r4, #44]	; 0x2c
   3d3e8:	mov	r1, #0
   3d3ec:	add	r0, r0, r5
   3d3f0:	str	r0, [r4, #20]
   3d3f4:	mov	r0, r4
   3d3f8:	blx	r2
   3d3fc:	ldr	r1, [r4, #16]
   3d400:	ldr	r0, [r4, #20]
   3d404:	sub	r7, r7, r5
   3d408:	sub	r5, r1, r0
   3d40c:	cmp	r7, r5
   3d410:	bhi	3d3d4 <flatcc_json_printer_string_field@@Base+0x110>
   3d414:	mov	r1, #32
   3d418:	mov	r2, r7
   3d41c:	bl	14eec <memset@plt>
   3d420:	ldr	r0, [r4, #20]
   3d424:	add	r0, r0, r7
   3d428:	str	r0, [r4, #20]
   3d42c:	b	3d450 <flatcc_json_printer_string_field@@Base+0x18c>
   3d430:	ldr	r1, [r4, #16]
   3d434:	cmp	r0, r1
   3d438:	bcc	3d450 <flatcc_json_printer_string_field@@Base+0x18c>
   3d43c:	ldr	r2, [r4, #44]	; 0x2c
   3d440:	mov	r0, r4
   3d444:	mov	r1, #0
   3d448:	blx	r2
   3d44c:	ldr	r0, [r4, #20]
   3d450:	mov	r1, #34	; 0x22
   3d454:	strb	r1, [r0]
   3d458:	ldrb	r2, [r4, #26]
   3d45c:	ldr	r0, [r4, #20]
   3d460:	ldr	r1, [r4, #16]
   3d464:	cmp	r2, #0
   3d468:	addeq	r0, r0, #1
   3d46c:	add	r2, r0, r8
   3d470:	str	r0, [r4, #20]
   3d474:	cmp	r2, r1
   3d478:	bcc	3d4ec <flatcc_json_printer_string_field@@Base+0x228>
   3d47c:	cmp	r0, r1
   3d480:	bcc	3d49c <flatcc_json_printer_string_field@@Base+0x1d8>
   3d484:	ldr	r2, [r4, #44]	; 0x2c
   3d488:	mov	r0, r4
   3d48c:	mov	r1, #0
   3d490:	blx	r2
   3d494:	ldr	r1, [r4, #16]
   3d498:	ldr	r0, [r4, #20]
   3d49c:	sub	r7, r1, r0
   3d4a0:	cmp	r7, r8
   3d4a4:	bcs	3d4ec <flatcc_json_printer_string_field@@Base+0x228>
   3d4a8:	mov	r1, r6
   3d4ac:	mov	r2, r7
   3d4b0:	bl	14e5c <memcpy@plt>
   3d4b4:	ldr	r0, [r4, #20]
   3d4b8:	ldr	r2, [r4, #44]	; 0x2c
   3d4bc:	mov	r1, #0
   3d4c0:	add	r0, r0, r7
   3d4c4:	str	r0, [r4, #20]
   3d4c8:	mov	r0, r4
   3d4cc:	blx	r2
   3d4d0:	ldr	r1, [r4, #16]
   3d4d4:	ldr	r0, [r4, #20]
   3d4d8:	sub	r8, r8, r7
   3d4dc:	add	r6, r6, r7
   3d4e0:	sub	r7, r1, r0
   3d4e4:	cmp	r8, r7
   3d4e8:	bhi	3d4a8 <flatcc_json_printer_string_field@@Base+0x1e4>
   3d4ec:	mov	r1, r6
   3d4f0:	mov	r2, r8
   3d4f4:	bl	14e5c <memcpy@plt>
   3d4f8:	ldr	r0, [r4, #20]
   3d4fc:	add	r1, r0, r8
   3d500:	str	r1, [r4, #20]
   3d504:	mov	r1, #34	; 0x22
   3d508:	strb	r1, [r0, r8]
   3d50c:	ldrb	r0, [r4, #26]
   3d510:	ldr	r1, [r4, #20]
   3d514:	cmp	r0, #0
   3d518:	addeq	r1, r1, #1
   3d51c:	add	r0, r1, #1
   3d520:	str	r0, [r4, #20]
   3d524:	mov	r0, #58	; 0x3a
   3d528:	strb	r0, [r1]
   3d52c:	mov	r1, #32
   3d530:	ldr	r0, [r4, #20]
   3d534:	strb	r1, [r0]
   3d538:	ldrb	r0, [r4, #25]
   3d53c:	ldr	r1, [r4, #20]
   3d540:	cmp	r0, #0
   3d544:	addne	r1, r1, #1
   3d548:	str	r1, [r4, #20]
   3d54c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}

0003d550 <flatcc_json_printer_uint8_vector_base64_field@@Base>:
   3d550:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3d554:	add	fp, sp, #28
   3d558:	sub	sp, sp, #12
   3d55c:	mov	r4, r0
   3d560:	mov	r0, #4
   3d564:	add	r0, r0, r2, lsl #1
   3d568:	ldr	r2, [r1, #8]
   3d56c:	cmp	r0, r2
   3d570:	bge	3d710 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x1c0>
   3d574:	ldr	r2, [r1, #4]
   3d578:	add	r0, r2, r0
   3d57c:	ldrh	r0, [r0]
   3d580:	cmp	r0, #0
   3d584:	beq	3d710 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x1c0>
   3d588:	ldr	r5, [fp, #12]
   3d58c:	ldr	r2, [r1]
   3d590:	cmp	r5, #0
   3d594:	add	r6, r2, r0
   3d598:	movwne	r5, #1
   3d59c:	cmp	r6, #0
   3d5a0:	beq	3d710 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x1c0>
   3d5a4:	ldr	r0, [r1, #16]
   3d5a8:	ldr	r2, [fp, #8]
   3d5ac:	add	r7, r0, #1
   3d5b0:	cmp	r0, #0
   3d5b4:	str	r7, [r1, #16]
   3d5b8:	beq	3d5d0 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x80>
   3d5bc:	ldr	r0, [r4, #20]
   3d5c0:	add	r1, r0, #1
   3d5c4:	str	r1, [r4, #20]
   3d5c8:	mov	r1, #44	; 0x2c
   3d5cc:	strb	r1, [r0]
   3d5d0:	mov	r0, r4
   3d5d4:	mov	r1, r3
   3d5d8:	bl	3d354 <flatcc_json_printer_string_field@@Base+0x90>
   3d5dc:	ldr	r0, [r6]
   3d5e0:	ldr	r0, [r6, r0]!
   3d5e4:	str	r0, [sp, #8]
   3d5e8:	ldr	r0, [r4, #20]
   3d5ec:	add	r1, r0, #1
   3d5f0:	str	r1, [r4, #20]
   3d5f4:	mov	r1, #34	; 0x22
   3d5f8:	strb	r1, [r0]
   3d5fc:	movw	r1, #43691	; 0xaaab
   3d600:	ldr	r0, [sp, #8]
   3d604:	movt	r1, #43690	; 0xaaaa
   3d608:	lsl	r0, r0, #2
   3d60c:	umull	r0, r1, r0, r1
   3d610:	mov	r0, #3
   3d614:	add	r0, r0, r1, lsr #1
   3d618:	ldr	r1, [r4, #16]
   3d61c:	bic	r7, r0, #3
   3d620:	ldr	r0, [r4, #20]
   3d624:	add	r2, r0, r7
   3d628:	cmp	r2, r1
   3d62c:	bcc	3d648 <flatcc_json_printer_uint8_vector_base64_field@@Base+0xf8>
   3d630:	ldr	r2, [r4, #44]	; 0x2c
   3d634:	mov	r0, r4
   3d638:	mov	r1, #0
   3d63c:	blx	r2
   3d640:	ldr	r1, [r4, #16]
   3d644:	ldr	r0, [r4, #20]
   3d648:	add	r2, r0, r7
   3d64c:	add	r6, r6, #4
   3d650:	cmp	r2, r1
   3d654:	bls	3d6e8 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x198>
   3d658:	add	r9, sp, #4
   3d65c:	mov	sl, #3
   3d660:	sub	r1, r1, r0
   3d664:	bic	r7, r1, #3
   3d668:	add	r1, r7, r7, lsl #1
   3d66c:	cmp	r1, #0
   3d670:	beq	3d718 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x1c8>
   3d674:	lsr	r8, r1, #2
   3d678:	mov	r1, r6
   3d67c:	mov	r2, r9
   3d680:	mov	r3, r5
   3d684:	str	r8, [sp, #4]
   3d688:	bl	47d84 <flatcc_json_printer_clear@@Base+0x44>
   3d68c:	ldr	r0, [r4, #20]
   3d690:	mov	r1, #0
   3d694:	add	r0, r0, r7
   3d698:	str	r0, [r4, #20]
   3d69c:	ldr	r0, [sp, #8]
   3d6a0:	sub	r0, r0, r8
   3d6a4:	str	r0, [sp, #8]
   3d6a8:	mov	r0, r4
   3d6ac:	ldr	r2, [r4, #44]	; 0x2c
   3d6b0:	blx	r2
   3d6b4:	ldr	r0, [sp, #8]
   3d6b8:	movw	r1, #43691	; 0xaaab
   3d6bc:	add	r6, r6, r8
   3d6c0:	movt	r1, #43690	; 0xaaaa
   3d6c4:	lsl	r0, r0, #2
   3d6c8:	umull	r0, r1, r0, r1
   3d6cc:	add	r0, sl, r1, lsr #1
   3d6d0:	ldr	r1, [r4, #16]
   3d6d4:	bic	r7, r0, #3
   3d6d8:	ldr	r0, [r4, #20]
   3d6dc:	add	r2, r0, r7
   3d6e0:	cmp	r2, r1
   3d6e4:	bhi	3d660 <flatcc_json_printer_uint8_vector_base64_field@@Base+0x110>
   3d6e8:	orr	r3, r5, #128	; 0x80
   3d6ec:	add	r2, sp, #8
   3d6f0:	mov	r1, r6
   3d6f4:	bl	47d84 <flatcc_json_printer_clear@@Base+0x44>
   3d6f8:	ldr	r0, [r4, #20]
   3d6fc:	add	r1, r0, r7
   3d700:	add	r1, r1, #1
   3d704:	str	r1, [r4, #20]
   3d708:	mov	r1, #34	; 0x22
   3d70c:	strb	r1, [r0, r7]
   3d710:	sub	sp, fp, #28
   3d714:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3d718:	movw	r0, #61105	; 0xeeb1
   3d71c:	movw	r1, #60179	; 0xeb13
   3d720:	movw	r3, #61111	; 0xeeb7
   3d724:	movw	r2, #277	; 0x115
   3d728:	movt	r0, #4
   3d72c:	movt	r1, #4
   3d730:	movt	r3, #4
   3d734:	bl	14f40 <__assert_fail@plt>

0003d738 <flatcc_json_printer_uint8_field@@Base>:
   3d738:	push	{r4, r5, r6, sl, fp, lr}
   3d73c:	add	fp, sp, #16
   3d740:	mov	r6, r0
   3d744:	mov	r0, #4
   3d748:	ldr	r5, [r1, #8]
   3d74c:	add	r2, r0, r2, lsl #1
   3d750:	ldr	r0, [fp, #12]
   3d754:	cmp	r2, r5
   3d758:	bge	3d778 <flatcc_json_printer_uint8_field@@Base+0x40>
   3d75c:	ldr	r5, [r1, #4]
   3d760:	add	r2, r5, r2
   3d764:	ldrh	r2, [r2]
   3d768:	cmp	r2, #0
   3d76c:	ldrne	r5, [r1]
   3d770:	addsne	r2, r5, r2
   3d774:	bne	3d878 <flatcc_json_printer_uint8_field@@Base+0x140>
   3d778:	ldrb	r2, [r6, #29]
   3d77c:	mov	r5, r0
   3d780:	cmp	r2, #0
   3d784:	beq	3d874 <flatcc_json_printer_uint8_field@@Base+0x13c>
   3d788:	ldr	r0, [r1, #16]
   3d78c:	ldr	r2, [fp, #8]
   3d790:	add	r4, r0, #1
   3d794:	cmp	r0, #0
   3d798:	str	r4, [r1, #16]
   3d79c:	beq	3d7b4 <flatcc_json_printer_uint8_field@@Base+0x7c>
   3d7a0:	ldr	r0, [r6, #20]
   3d7a4:	add	r1, r0, #1
   3d7a8:	str	r1, [r6, #20]
   3d7ac:	mov	r1, #44	; 0x2c
   3d7b0:	strb	r1, [r0]
   3d7b4:	mov	r0, r6
   3d7b8:	mov	r1, r3
   3d7bc:	bl	3d354 <flatcc_json_printer_string_field@@Base+0x90>
   3d7c0:	ldr	r0, [r6, #20]
   3d7c4:	mov	r1, #0
   3d7c8:	cmp	r5, #100	; 0x64
   3d7cc:	bcc	3d818 <flatcc_json_printer_uint8_field@@Base+0xe0>
   3d7d0:	strb	r1, [r0, #3]
   3d7d4:	movw	r1, #34079	; 0x851f
   3d7d8:	movt	r1, #20971	; 0x51eb
   3d7dc:	umull	r1, r2, r5, r1
   3d7e0:	mov	r1, #48	; 0x30
   3d7e4:	orr	r1, r1, r2, lsr #5
   3d7e8:	strb	r1, [r0]
   3d7ec:	lsr	r1, r2, #5
   3d7f0:	mov	r2, #100	; 0x64
   3d7f4:	mls	r1, r1, r2, r5
   3d7f8:	movw	r2, #60904	; 0xede8
   3d7fc:	movt	r2, #4
   3d800:	uxtb	r1, r1
   3d804:	add	r1, r2, r1, lsl #1
   3d808:	ldrh	r1, [r1]
   3d80c:	strh	r1, [r0, #1]
   3d810:	mov	r0, #3
   3d814:	b	3d868 <flatcc_json_printer_uint8_field@@Base+0x130>
   3d818:	cmp	r5, #10
   3d81c:	bcc	3d858 <flatcc_json_printer_uint8_field@@Base+0x120>
   3d820:	strb	r1, [r0, #2]
   3d824:	movw	r1, #34079	; 0x851f
   3d828:	movt	r1, #20971	; 0x51eb
   3d82c:	umull	r1, r2, r5, r1
   3d830:	lsr	r1, r2, #5
   3d834:	mov	r2, #100	; 0x64
   3d838:	mls	r1, r1, r2, r5
   3d83c:	movw	r2, #60904	; 0xede8
   3d840:	movt	r2, #4
   3d844:	add	r1, r2, r1, lsl #1
   3d848:	ldrh	r1, [r1]
   3d84c:	strh	r1, [r0]
   3d850:	mov	r0, #2
   3d854:	b	3d868 <flatcc_json_printer_uint8_field@@Base+0x130>
   3d858:	strb	r1, [r0, #1]
   3d85c:	add	r1, r5, #48	; 0x30
   3d860:	strb	r1, [r0]
   3d864:	mov	r0, #1
   3d868:	ldr	r1, [r6, #20]
   3d86c:	add	r0, r1, r0
   3d870:	str	r0, [r6, #20]
   3d874:	pop	{r4, r5, r6, sl, fp, pc}
   3d878:	ldrb	r5, [r2]
   3d87c:	cmp	r5, r0
   3d880:	bne	3d788 <flatcc_json_printer_uint8_field@@Base+0x50>
   3d884:	ldrb	r2, [r6, #28]
   3d888:	mov	r5, r0
   3d88c:	cmp	r2, #0
   3d890:	popne	{r4, r5, r6, sl, fp, pc}
   3d894:	b	3d788 <flatcc_json_printer_uint8_field@@Base+0x50>

0003d898 <flatcc_json_printer_uint16_field@@Base>:
   3d898:	push	{r4, r5, r6, sl, fp, lr}
   3d89c:	add	fp, sp, #16
   3d8a0:	mov	r4, r0
   3d8a4:	mov	r0, #4
   3d8a8:	ldr	r5, [r1, #8]
   3d8ac:	add	r2, r0, r2, lsl #1
   3d8b0:	ldr	r0, [fp, #12]
   3d8b4:	cmp	r2, r5
   3d8b8:	bge	3d8d8 <flatcc_json_printer_uint16_field@@Base+0x40>
   3d8bc:	ldr	r5, [r1, #4]
   3d8c0:	add	r2, r5, r2
   3d8c4:	ldrh	r2, [r2]
   3d8c8:	cmp	r2, #0
   3d8cc:	ldrne	r5, [r1]
   3d8d0:	addsne	r2, r5, r2
   3d8d4:	bne	3d93c <flatcc_json_printer_uint16_field@@Base+0xa4>
   3d8d8:	ldrb	r2, [r4, #29]
   3d8dc:	mov	r6, r0
   3d8e0:	cmp	r2, #0
   3d8e4:	beq	3d938 <flatcc_json_printer_uint16_field@@Base+0xa0>
   3d8e8:	ldr	r0, [r1, #16]
   3d8ec:	ldr	r2, [fp, #8]
   3d8f0:	add	r5, r0, #1
   3d8f4:	cmp	r0, #0
   3d8f8:	str	r5, [r1, #16]
   3d8fc:	beq	3d914 <flatcc_json_printer_uint16_field@@Base+0x7c>
   3d900:	ldr	r0, [r4, #20]
   3d904:	add	r1, r0, #1
   3d908:	str	r1, [r4, #20]
   3d90c:	mov	r1, #44	; 0x2c
   3d910:	strb	r1, [r0]
   3d914:	mov	r0, r4
   3d918:	mov	r1, r3
   3d91c:	bl	3d354 <flatcc_json_printer_string_field@@Base+0x90>
   3d920:	ldr	r1, [r4, #20]
   3d924:	mov	r0, r6
   3d928:	bl	3c4ac <flatcc_json_printer_uint16@@Base+0x2c>
   3d92c:	ldr	r1, [r4, #20]
   3d930:	add	r0, r1, r0
   3d934:	str	r0, [r4, #20]
   3d938:	pop	{r4, r5, r6, sl, fp, pc}
   3d93c:	ldrh	r6, [r2]
   3d940:	cmp	r6, r0
   3d944:	bne	3d8e8 <flatcc_json_printer_uint16_field@@Base+0x50>
   3d948:	ldrb	r2, [r4, #28]
   3d94c:	mov	r6, r0
   3d950:	cmp	r2, #0
   3d954:	popne	{r4, r5, r6, sl, fp, pc}
   3d958:	b	3d8e8 <flatcc_json_printer_uint16_field@@Base+0x50>

0003d95c <flatcc_json_printer_uint32_field@@Base>:
   3d95c:	push	{r4, r5, r6, sl, fp, lr}
   3d960:	add	fp, sp, #16
   3d964:	mov	r4, r0
   3d968:	mov	r0, #4
   3d96c:	ldr	r5, [r1, #8]
   3d970:	add	r2, r0, r2, lsl #1
   3d974:	ldr	r0, [fp, #12]
   3d978:	cmp	r2, r5
   3d97c:	bge	3d99c <flatcc_json_printer_uint32_field@@Base+0x40>
   3d980:	ldr	r5, [r1, #4]
   3d984:	add	r2, r5, r2
   3d988:	ldrh	r2, [r2]
   3d98c:	cmp	r2, #0
   3d990:	ldrne	r5, [r1]
   3d994:	addsne	r2, r5, r2
   3d998:	bne	3da00 <flatcc_json_printer_uint32_field@@Base+0xa4>
   3d99c:	ldrb	r2, [r4, #29]
   3d9a0:	mov	r6, r0
   3d9a4:	cmp	r2, #0
   3d9a8:	beq	3d9fc <flatcc_json_printer_uint32_field@@Base+0xa0>
   3d9ac:	ldr	r0, [r1, #16]
   3d9b0:	ldr	r2, [fp, #8]
   3d9b4:	add	r5, r0, #1
   3d9b8:	cmp	r0, #0
   3d9bc:	str	r5, [r1, #16]
   3d9c0:	beq	3d9d8 <flatcc_json_printer_uint32_field@@Base+0x7c>
   3d9c4:	ldr	r0, [r4, #20]
   3d9c8:	add	r1, r0, #1
   3d9cc:	str	r1, [r4, #20]
   3d9d0:	mov	r1, #44	; 0x2c
   3d9d4:	strb	r1, [r0]
   3d9d8:	mov	r0, r4
   3d9dc:	mov	r1, r3
   3d9e0:	bl	3d354 <flatcc_json_printer_string_field@@Base+0x90>
   3d9e4:	ldr	r1, [r4, #20]
   3d9e8:	mov	r0, r6
   3d9ec:	bl	3c65c <flatcc_json_printer_uint32@@Base+0x2c>
   3d9f0:	ldr	r1, [r4, #20]
   3d9f4:	add	r0, r1, r0
   3d9f8:	str	r0, [r4, #20]
   3d9fc:	pop	{r4, r5, r6, sl, fp, pc}
   3da00:	ldr	r6, [r2]
   3da04:	cmp	r6, r0
   3da08:	bne	3d9ac <flatcc_json_printer_uint32_field@@Base+0x50>
   3da0c:	ldrb	r2, [r4, #28]
   3da10:	mov	r6, r0
   3da14:	cmp	r2, #0
   3da18:	popne	{r4, r5, r6, sl, fp, pc}
   3da1c:	b	3d9ac <flatcc_json_printer_uint32_field@@Base+0x50>

0003da20 <flatcc_json_printer_uint64_field@@Base>:
   3da20:	push	{r4, r6, r7, r8, fp, lr}
   3da24:	add	fp, sp, #16
   3da28:	mov	r4, r0
   3da2c:	mov	r0, #4
   3da30:	ldr	r6, [r1, #8]
   3da34:	ldr	lr, [fp, #20]
   3da38:	add	r7, r0, r2, lsl #1
   3da3c:	ldr	r2, [fp, #16]
   3da40:	cmp	r7, r6
   3da44:	bge	3da64 <flatcc_json_printer_uint64_field@@Base+0x44>
   3da48:	ldr	r6, [r1, #4]
   3da4c:	add	r7, r6, r7
   3da50:	ldrh	r7, [r7]
   3da54:	cmp	r7, #0
   3da58:	ldrne	r6, [r1]
   3da5c:	addsne	r7, r6, r7
   3da60:	bne	3dad0 <flatcc_json_printer_uint64_field@@Base+0xb0>
   3da64:	ldrb	r0, [r4, #29]
   3da68:	mov	r8, r2
   3da6c:	mov	r7, lr
   3da70:	cmp	r0, #0
   3da74:	beq	3dacc <flatcc_json_printer_uint64_field@@Base+0xac>
   3da78:	ldr	r0, [r1, #16]
   3da7c:	ldr	r2, [fp, #8]
   3da80:	add	r6, r0, #1
   3da84:	cmp	r0, #0
   3da88:	str	r6, [r1, #16]
   3da8c:	beq	3daa4 <flatcc_json_printer_uint64_field@@Base+0x84>
   3da90:	ldr	r0, [r4, #20]
   3da94:	add	r1, r0, #1
   3da98:	str	r1, [r4, #20]
   3da9c:	mov	r1, #44	; 0x2c
   3daa0:	strb	r1, [r0]
   3daa4:	mov	r0, r4
   3daa8:	mov	r1, r3
   3daac:	bl	3d354 <flatcc_json_printer_string_field@@Base+0x90>
   3dab0:	ldr	r2, [r4, #20]
   3dab4:	mov	r0, r8
   3dab8:	mov	r1, r7
   3dabc:	bl	3c9b0 <flatcc_json_printer_uint64@@Base+0x30>
   3dac0:	ldr	r1, [r4, #20]
   3dac4:	add	r0, r1, r0
   3dac8:	str	r0, [r4, #20]
   3dacc:	pop	{r4, r6, r7, r8, fp, pc}
   3dad0:	ldr	r8, [r7]
   3dad4:	ldr	r7, [r7, #4]
   3dad8:	eor	ip, r7, lr
   3dadc:	eor	r0, r8, r2
   3dae0:	orrs	r0, r0, ip
   3dae4:	bne	3da78 <flatcc_json_printer_uint64_field@@Base+0x58>
   3dae8:	ldrb	r0, [r4, #28]
   3daec:	mov	r8, r2
   3daf0:	mov	r7, lr
   3daf4:	cmp	r0, #0
   3daf8:	popne	{r4, r6, r7, r8, fp, pc}
   3dafc:	b	3da78 <flatcc_json_printer_uint64_field@@Base+0x58>

0003db00 <flatcc_json_printer_int8_field@@Base>:
   3db00:	push	{r4, r5, r6, sl, fp, lr}
   3db04:	add	fp, sp, #16
   3db08:	mov	r6, r0
   3db0c:	mov	r0, #4
   3db10:	ldr	r5, [r1, #8]
   3db14:	add	r2, r0, r2, lsl #1
   3db18:	ldr	r0, [fp, #12]
   3db1c:	cmp	r2, r5
   3db20:	bge	3db40 <flatcc_json_printer_int8_field@@Base+0x40>
   3db24:	ldr	r5, [r1, #4]
   3db28:	add	r2, r5, r2
   3db2c:	ldrh	r2, [r2]
   3db30:	cmp	r2, #0
   3db34:	ldrne	r5, [r1]
   3db38:	addsne	r2, r5, r2
   3db3c:	bne	3dc6c <flatcc_json_printer_int8_field@@Base+0x16c>
   3db40:	ldrb	r2, [r6, #29]
   3db44:	mov	r5, r0
   3db48:	cmp	r2, #0
   3db4c:	beq	3dc68 <flatcc_json_printer_int8_field@@Base+0x168>
   3db50:	ldr	r0, [r1, #16]
   3db54:	ldr	r2, [fp, #8]
   3db58:	add	r4, r0, #1
   3db5c:	cmp	r0, #0
   3db60:	str	r4, [r1, #16]
   3db64:	beq	3db7c <flatcc_json_printer_int8_field@@Base+0x7c>
   3db68:	ldr	r0, [r6, #20]
   3db6c:	add	r1, r0, #1
   3db70:	str	r1, [r6, #20]
   3db74:	mov	r1, #44	; 0x2c
   3db78:	strb	r1, [r0]
   3db7c:	mov	r0, r6
   3db80:	mov	r1, r3
   3db84:	bl	3d354 <flatcc_json_printer_string_field@@Base+0x90>
   3db88:	sxtb	r2, r5
   3db8c:	ldr	r0, [r6, #20]
   3db90:	uxtb	r1, r5
   3db94:	cmn	r2, #1
   3db98:	lsr	r1, r1, #7
   3db9c:	movle	r2, #45	; 0x2d
   3dba0:	rsble	r5, r5, #0
   3dba4:	strble	r2, [r0], #1
   3dba8:	uxtb	r2, r5
   3dbac:	cmp	r2, #100	; 0x64
   3dbb0:	bcc	3dc00 <flatcc_json_printer_int8_field@@Base+0x100>
   3dbb4:	mov	r3, #0
   3dbb8:	strb	r3, [r0, #3]
   3dbbc:	movw	r3, #34079	; 0x851f
   3dbc0:	movt	r3, #20971	; 0x51eb
   3dbc4:	umull	r3, r5, r2, r3
   3dbc8:	mov	r3, #48	; 0x30
   3dbcc:	orr	r3, r3, r5, lsr #5
   3dbd0:	strb	r3, [r0]
   3dbd4:	lsr	r3, r5, #5
   3dbd8:	mov	r5, #100	; 0x64
   3dbdc:	mls	r2, r3, r5, r2
   3dbe0:	movw	r3, #60904	; 0xede8
   3dbe4:	movt	r3, #4
   3dbe8:	uxtb	r2, r2
   3dbec:	add	r2, r3, r2, lsl #1
   3dbf0:	ldrh	r2, [r2]
   3dbf4:	strh	r2, [r0, #1]
   3dbf8:	mov	r0, #3
   3dbfc:	b	3dc58 <flatcc_json_printer_int8_field@@Base+0x158>
   3dc00:	cmp	r2, #10
   3dc04:	bcc	3dc44 <flatcc_json_printer_int8_field@@Base+0x144>
   3dc08:	mov	r3, #0
   3dc0c:	strb	r3, [r0, #2]
   3dc10:	movw	r3, #34079	; 0x851f
   3dc14:	movt	r3, #20971	; 0x51eb
   3dc18:	umull	r3, r5, r2, r3
   3dc1c:	lsr	r3, r5, #5
   3dc20:	mov	r5, #100	; 0x64
   3dc24:	mls	r2, r3, r5, r2
   3dc28:	movw	r3, #60904	; 0xede8
   3dc2c:	movt	r3, #4
   3dc30:	add	r2, r3, r2, lsl #1
   3dc34:	ldrh	r2, [r2]
   3dc38:	strh	r2, [r0]
   3dc3c:	mov	r0, #2
   3dc40:	b	3dc58 <flatcc_json_printer_int8_field@@Base+0x158>
   3dc44:	mov	r2, #0
   3dc48:	strb	r2, [r0, #1]
   3dc4c:	add	r2, r5, #48	; 0x30
   3dc50:	strb	r2, [r0]
   3dc54:	mov	r0, #1
   3dc58:	add	r0, r0, r1
   3dc5c:	ldr	r1, [r6, #20]
   3dc60:	add	r0, r1, r0
   3dc64:	str	r0, [r6, #20]
   3dc68:	pop	{r4, r5, r6, sl, fp, pc}
   3dc6c:	ldrb	r5, [r2]
   3dc70:	uxtb	r2, r0
   3dc74:	cmp	r5, r2
   3dc78:	bne	3db50 <flatcc_json_printer_int8_field@@Base+0x50>
   3dc7c:	ldrb	r2, [r6, #28]
   3dc80:	mov	r5, r0
   3dc84:	cmp	r2, #0
   3dc88:	popne	{r4, r5, r6, sl, fp, pc}
   3dc8c:	b	3db50 <flatcc_json_printer_int8_field@@Base+0x50>

0003dc90 <flatcc_json_printer_int16_field@@Base>:
   3dc90:	push	{r4, r5, r6, sl, fp, lr}
   3dc94:	add	fp, sp, #16
   3dc98:	mov	r4, r0
   3dc9c:	mov	r0, #4
   3dca0:	ldr	r6, [r1, #8]
   3dca4:	add	r2, r0, r2, lsl #1
   3dca8:	ldr	r0, [fp, #12]
   3dcac:	cmp	r2, r6
   3dcb0:	bge	3dcd0 <flatcc_json_printer_int16_field@@Base+0x40>
   3dcb4:	ldr	r6, [r1, #4]
   3dcb8:	add	r2, r6, r2
   3dcbc:	ldrh	r2, [r2]
   3dcc0:	cmp	r2, #0
   3dcc4:	ldrne	r6, [r1]
   3dcc8:	addsne	r2, r6, r2
   3dccc:	bne	3dd54 <flatcc_json_printer_int16_field@@Base+0xc4>
   3dcd0:	ldrb	r2, [r4, #29]
   3dcd4:	mov	r5, r0
   3dcd8:	cmp	r2, #0
   3dcdc:	beq	3dd50 <flatcc_json_printer_int16_field@@Base+0xc0>
   3dce0:	ldr	r0, [r1, #16]
   3dce4:	ldr	r2, [fp, #8]
   3dce8:	add	r6, r0, #1
   3dcec:	cmp	r0, #0
   3dcf0:	str	r6, [r1, #16]
   3dcf4:	beq	3dd0c <flatcc_json_printer_int16_field@@Base+0x7c>
   3dcf8:	ldr	r0, [r4, #20]
   3dcfc:	add	r1, r0, #1
   3dd00:	str	r1, [r4, #20]
   3dd04:	mov	r1, #44	; 0x2c
   3dd08:	strb	r1, [r0]
   3dd0c:	mov	r0, r4
   3dd10:	mov	r1, r3
   3dd14:	bl	3d354 <flatcc_json_printer_string_field@@Base+0x90>
   3dd18:	uxth	r0, r5
   3dd1c:	ldr	r1, [r4, #20]
   3dd20:	lsr	r6, r0, #15
   3dd24:	sxth	r0, r5
   3dd28:	cmn	r0, #1
   3dd2c:	movle	r0, #45	; 0x2d
   3dd30:	rsble	r5, r5, #0
   3dd34:	strble	r0, [r1], #1
   3dd38:	uxth	r0, r5
   3dd3c:	bl	3c4ac <flatcc_json_printer_uint16@@Base+0x2c>
   3dd40:	ldr	r1, [r4, #20]
   3dd44:	add	r0, r0, r6
   3dd48:	add	r0, r1, r0
   3dd4c:	str	r0, [r4, #20]
   3dd50:	pop	{r4, r5, r6, sl, fp, pc}
   3dd54:	ldrh	r5, [r2]
   3dd58:	uxth	r2, r0
   3dd5c:	cmp	r5, r2
   3dd60:	bne	3dce0 <flatcc_json_printer_int16_field@@Base+0x50>
   3dd64:	ldrb	r2, [r4, #28]
   3dd68:	mov	r5, r0
   3dd6c:	cmp	r2, #0
   3dd70:	popne	{r4, r5, r6, sl, fp, pc}
   3dd74:	b	3dce0 <flatcc_json_printer_int16_field@@Base+0x50>

0003dd78 <flatcc_json_printer_int32_field@@Base>:
   3dd78:	push	{r4, r5, r6, sl, fp, lr}
   3dd7c:	add	fp, sp, #16
   3dd80:	mov	r4, r0
   3dd84:	mov	r0, #4
   3dd88:	ldr	r6, [r1, #8]
   3dd8c:	add	r2, r0, r2, lsl #1
   3dd90:	ldr	r0, [fp, #12]
   3dd94:	cmp	r2, r6
   3dd98:	bge	3ddb8 <flatcc_json_printer_int32_field@@Base+0x40>
   3dd9c:	ldr	r6, [r1, #4]
   3dda0:	add	r2, r6, r2
   3dda4:	ldrh	r2, [r2]
   3dda8:	cmp	r2, #0
   3ddac:	ldrne	r6, [r1]
   3ddb0:	addsne	r2, r6, r2
   3ddb4:	bne	3de34 <flatcc_json_printer_int32_field@@Base+0xbc>
   3ddb8:	ldrb	r2, [r4, #29]
   3ddbc:	mov	r5, r0
   3ddc0:	cmp	r2, #0
   3ddc4:	beq	3de30 <flatcc_json_printer_int32_field@@Base+0xb8>
   3ddc8:	ldr	r0, [r1, #16]
   3ddcc:	ldr	r2, [fp, #8]
   3ddd0:	add	r6, r0, #1
   3ddd4:	cmp	r0, #0
   3ddd8:	str	r6, [r1, #16]
   3dddc:	beq	3ddf4 <flatcc_json_printer_int32_field@@Base+0x7c>
   3dde0:	ldr	r0, [r4, #20]
   3dde4:	add	r1, r0, #1
   3dde8:	str	r1, [r4, #20]
   3ddec:	mov	r1, #44	; 0x2c
   3ddf0:	strb	r1, [r0]
   3ddf4:	mov	r0, r4
   3ddf8:	mov	r1, r3
   3ddfc:	bl	3d354 <flatcc_json_printer_string_field@@Base+0x90>
   3de00:	ldr	r1, [r4, #20]
   3de04:	cmn	r5, #1
   3de08:	lsr	r6, r5, #31
   3de0c:	movle	r0, #45	; 0x2d
   3de10:	rsble	r5, r5, #0
   3de14:	strble	r0, [r1], #1
   3de18:	mov	r0, r5
   3de1c:	bl	3c65c <flatcc_json_printer_uint32@@Base+0x2c>
   3de20:	ldr	r1, [r4, #20]
   3de24:	add	r0, r0, r6
   3de28:	add	r0, r1, r0
   3de2c:	str	r0, [r4, #20]
   3de30:	pop	{r4, r5, r6, sl, fp, pc}
   3de34:	ldr	r5, [r2]
   3de38:	cmp	r5, r0
   3de3c:	bne	3ddc8 <flatcc_json_printer_int32_field@@Base+0x50>
   3de40:	ldrb	r2, [r4, #28]
   3de44:	mov	r5, r0
   3de48:	cmp	r2, #0
   3de4c:	popne	{r4, r5, r6, sl, fp, pc}
   3de50:	b	3ddc8 <flatcc_json_printer_int32_field@@Base+0x50>

0003de54 <flatcc_json_printer_int64_field@@Base>:
   3de54:	push	{r4, r5, r6, r7, fp, lr}
   3de58:	add	fp, sp, #16
   3de5c:	mov	r4, r0
   3de60:	mov	r0, #4
   3de64:	ldr	r6, [r1, #8]
   3de68:	add	r7, r0, r2, lsl #1
   3de6c:	ldr	r0, [fp, #20]
   3de70:	ldr	r2, [fp, #16]
   3de74:	cmp	r7, r6
   3de78:	bge	3de98 <flatcc_json_printer_int64_field@@Base+0x44>
   3de7c:	ldr	r6, [r1, #4]
   3de80:	add	r7, r6, r7
   3de84:	ldrh	r7, [r7]
   3de88:	cmp	r7, #0
   3de8c:	ldrne	r6, [r1]
   3de90:	addsne	r7, r6, r7
   3de94:	bne	3df24 <flatcc_json_printer_int64_field@@Base+0xd0>
   3de98:	ldrb	r7, [r4, #29]
   3de9c:	mov	r6, r2
   3dea0:	cmp	r7, #0
   3dea4:	mov	r7, r0
   3dea8:	beq	3df20 <flatcc_json_printer_int64_field@@Base+0xcc>
   3deac:	ldr	r0, [r1, #16]
   3deb0:	ldr	r2, [fp, #8]
   3deb4:	add	r5, r0, #1
   3deb8:	cmp	r0, #0
   3debc:	str	r5, [r1, #16]
   3dec0:	beq	3ded8 <flatcc_json_printer_int64_field@@Base+0x84>
   3dec4:	ldr	r0, [r4, #20]
   3dec8:	add	r1, r0, #1
   3decc:	str	r1, [r4, #20]
   3ded0:	mov	r1, #44	; 0x2c
   3ded4:	strb	r1, [r0]
   3ded8:	mov	r0, r4
   3dedc:	mov	r1, r3
   3dee0:	bl	3d354 <flatcc_json_printer_string_field@@Base+0x90>
   3dee4:	ldr	r2, [r4, #20]
   3dee8:	lsr	r5, r7, #31
   3deec:	cmn	r7, #1
   3def0:	bgt	3df04 <flatcc_json_printer_int64_field@@Base+0xb0>
   3def4:	mov	r0, #45	; 0x2d
   3def8:	rsbs	r6, r6, #0
   3defc:	strb	r0, [r2], #1
   3df00:	rsc	r7, r7, #0
   3df04:	mov	r0, r6
   3df08:	mov	r1, r7
   3df0c:	bl	3c9b0 <flatcc_json_printer_uint64@@Base+0x30>
   3df10:	ldr	r1, [r4, #20]
   3df14:	add	r0, r0, r5
   3df18:	add	r0, r1, r0
   3df1c:	str	r0, [r4, #20]
   3df20:	pop	{r4, r5, r6, r7, fp, pc}
   3df24:	ldrd	r6, [r7]
   3df28:	eor	ip, r7, r0
   3df2c:	eor	r5, r6, r2
   3df30:	orrs	r5, r5, ip
   3df34:	bne	3deac <flatcc_json_printer_int64_field@@Base+0x58>
   3df38:	ldrb	r7, [r4, #28]
   3df3c:	mov	r6, r2
   3df40:	cmp	r7, #0
   3df44:	mov	r7, r0
   3df48:	popne	{r4, r5, r6, r7, fp, pc}
   3df4c:	b	3deac <flatcc_json_printer_int64_field@@Base+0x58>

0003df50 <flatcc_json_printer_bool_field@@Base>:
   3df50:	push	{r4, r5, r6, sl, fp, lr}
   3df54:	add	fp, sp, #16
   3df58:	mov	r4, r0
   3df5c:	mov	r0, #4
   3df60:	ldr	r5, [r1, #8]
   3df64:	add	r2, r0, r2, lsl #1
   3df68:	ldr	r0, [fp, #12]
   3df6c:	cmp	r2, r5
   3df70:	bge	3df90 <flatcc_json_printer_bool_field@@Base+0x40>
   3df74:	ldr	r5, [r1, #4]
   3df78:	add	r2, r5, r2
   3df7c:	ldrh	r2, [r2]
   3df80:	cmp	r2, #0
   3df84:	ldrne	r5, [r1]
   3df88:	addsne	r2, r5, r2
   3df8c:	bne	3e028 <flatcc_json_printer_bool_field@@Base+0xd8>
   3df90:	ldrb	r2, [r4, #29]
   3df94:	mov	r6, r0
   3df98:	cmp	r2, #0
   3df9c:	beq	3e024 <flatcc_json_printer_bool_field@@Base+0xd4>
   3dfa0:	ldr	r0, [r1, #16]
   3dfa4:	ldr	r2, [fp, #8]
   3dfa8:	add	r5, r0, #1
   3dfac:	cmp	r0, #0
   3dfb0:	str	r5, [r1, #16]
   3dfb4:	beq	3dfcc <flatcc_json_printer_bool_field@@Base+0x7c>
   3dfb8:	ldr	r0, [r4, #20]
   3dfbc:	add	r1, r0, #1
   3dfc0:	str	r1, [r4, #20]
   3dfc4:	mov	r1, #44	; 0x2c
   3dfc8:	strb	r1, [r0]
   3dfcc:	mov	r0, r4
   3dfd0:	mov	r1, r3
   3dfd4:	bl	3d354 <flatcc_json_printer_string_field@@Base+0x90>
   3dfd8:	ldr	r0, [r4, #20]
   3dfdc:	cmp	r6, #0
   3dfe0:	beq	3e000 <flatcc_json_printer_bool_field@@Base+0xb0>
   3dfe4:	mov	r1, #0
   3dfe8:	strb	r1, [r0, #4]
   3dfec:	movw	r1, #29300	; 0x7274
   3dff0:	movt	r1, #25973	; 0x6575
   3dff4:	str	r1, [r0]
   3dff8:	mov	r0, #4
   3dffc:	b	3e018 <flatcc_json_printer_bool_field@@Base+0xc8>
   3e000:	mov	r1, #101	; 0x65
   3e004:	strh	r1, [r0, #4]
   3e008:	movw	r1, #24934	; 0x6166
   3e00c:	movt	r1, #29548	; 0x736c
   3e010:	str	r1, [r0]
   3e014:	mov	r0, #5
   3e018:	ldr	r1, [r4, #20]
   3e01c:	add	r0, r1, r0
   3e020:	str	r0, [r4, #20]
   3e024:	pop	{r4, r5, r6, sl, fp, pc}
   3e028:	ldrb	r6, [r2]
   3e02c:	cmp	r6, r0
   3e030:	bne	3dfa0 <flatcc_json_printer_bool_field@@Base+0x50>
   3e034:	ldrb	r2, [r4, #28]
   3e038:	mov	r6, r0
   3e03c:	cmp	r2, #0
   3e040:	popne	{r4, r5, r6, sl, fp, pc}
   3e044:	b	3dfa0 <flatcc_json_printer_bool_field@@Base+0x50>

0003e048 <flatcc_json_printer_float_field@@Base>:
   3e048:	push	{r4, r5, fp, lr}
   3e04c:	add	fp, sp, #8
   3e050:	vpush	{d8}
   3e054:	mov	r5, r0
   3e058:	mov	r0, #4
   3e05c:	vmov.f32	s16, s0
   3e060:	add	r0, r0, r2, lsl #1
   3e064:	ldr	r2, [r1, #8]
   3e068:	cmp	r0, r2
   3e06c:	bge	3e08c <flatcc_json_printer_float_field@@Base+0x44>
   3e070:	ldr	r2, [r1, #4]
   3e074:	add	r0, r2, r0
   3e078:	ldrh	r0, [r0]
   3e07c:	cmp	r0, #0
   3e080:	ldrne	r2, [r1]
   3e084:	addsne	r0, r2, r0
   3e088:	bne	3e0f0 <flatcc_json_printer_float_field@@Base+0xa8>
   3e08c:	ldrb	r0, [r5, #29]
   3e090:	cmp	r0, #0
   3e094:	beq	3e0e8 <flatcc_json_printer_float_field@@Base+0xa0>
   3e098:	ldr	r0, [r1, #16]
   3e09c:	ldr	r2, [fp, #8]
   3e0a0:	add	r4, r0, #1
   3e0a4:	cmp	r0, #0
   3e0a8:	str	r4, [r1, #16]
   3e0ac:	beq	3e0c4 <flatcc_json_printer_float_field@@Base+0x7c>
   3e0b0:	ldr	r0, [r5, #20]
   3e0b4:	add	r1, r0, #1
   3e0b8:	str	r1, [r5, #20]
   3e0bc:	mov	r1, #44	; 0x2c
   3e0c0:	strb	r1, [r0]
   3e0c4:	mov	r0, r5
   3e0c8:	mov	r1, r3
   3e0cc:	bl	3d354 <flatcc_json_printer_string_field@@Base+0x90>
   3e0d0:	vcvt.f64.f32	d0, s16
   3e0d4:	ldr	r0, [r5, #20]
   3e0d8:	bl	3af80 <flatcc_json_printer_fmt_float@@Base+0x8>
   3e0dc:	ldr	r1, [r5, #20]
   3e0e0:	add	r0, r1, r0
   3e0e4:	str	r0, [r5, #20]
   3e0e8:	vpop	{d8}
   3e0ec:	pop	{r4, r5, fp, pc}
   3e0f0:	vldr	s0, [r0]
   3e0f4:	vcmp.f32	s0, s16
   3e0f8:	vmrs	APSR_nzcv, fpscr
   3e0fc:	bne	3e114 <flatcc_json_printer_float_field@@Base+0xcc>
   3e100:	ldrb	r0, [r5, #28]
   3e104:	vmov.f32	s16, s0
   3e108:	cmp	r0, #0
   3e10c:	bne	3e0e8 <flatcc_json_printer_float_field@@Base+0xa0>
   3e110:	b	3e098 <flatcc_json_printer_float_field@@Base+0x50>
   3e114:	vmov.f32	s16, s0
   3e118:	b	3e098 <flatcc_json_printer_float_field@@Base+0x50>

0003e11c <flatcc_json_printer_double_field@@Base>:
   3e11c:	push	{r4, r5, fp, lr}
   3e120:	add	fp, sp, #8
   3e124:	vpush	{d8}
   3e128:	mov	r5, r0
   3e12c:	mov	r0, #4
   3e130:	vmov.f64	d8, d0
   3e134:	add	r0, r0, r2, lsl #1
   3e138:	ldr	r2, [r1, #8]
   3e13c:	cmp	r0, r2
   3e140:	bge	3e160 <flatcc_json_printer_double_field@@Base+0x44>
   3e144:	ldr	r2, [r1, #4]
   3e148:	add	r0, r2, r0
   3e14c:	ldrh	r0, [r0]
   3e150:	cmp	r0, #0
   3e154:	ldrne	r2, [r1]
   3e158:	addsne	r0, r2, r0
   3e15c:	bne	3e1c4 <flatcc_json_printer_double_field@@Base+0xa8>
   3e160:	ldrb	r0, [r5, #29]
   3e164:	cmp	r0, #0
   3e168:	beq	3e1bc <flatcc_json_printer_double_field@@Base+0xa0>
   3e16c:	ldr	r0, [r1, #16]
   3e170:	ldr	r2, [fp, #8]
   3e174:	add	r4, r0, #1
   3e178:	cmp	r0, #0
   3e17c:	str	r4, [r1, #16]
   3e180:	beq	3e198 <flatcc_json_printer_double_field@@Base+0x7c>
   3e184:	ldr	r0, [r5, #20]
   3e188:	add	r1, r0, #1
   3e18c:	str	r1, [r5, #20]
   3e190:	mov	r1, #44	; 0x2c
   3e194:	strb	r1, [r0]
   3e198:	mov	r0, r5
   3e19c:	mov	r1, r3
   3e1a0:	bl	3d354 <flatcc_json_printer_string_field@@Base+0x90>
   3e1a4:	ldr	r0, [r5, #20]
   3e1a8:	vmov.f64	d0, d8
   3e1ac:	bl	3af80 <flatcc_json_printer_fmt_float@@Base+0x8>
   3e1b0:	ldr	r1, [r5, #20]
   3e1b4:	add	r0, r1, r0
   3e1b8:	str	r0, [r5, #20]
   3e1bc:	vpop	{d8}
   3e1c0:	pop	{r4, r5, fp, pc}
   3e1c4:	vldr	d16, [r0]
   3e1c8:	vcmp.f64	d16, d8
   3e1cc:	vmrs	APSR_nzcv, fpscr
   3e1d0:	bne	3e1e8 <flatcc_json_printer_double_field@@Base+0xcc>
   3e1d4:	ldrb	r0, [r5, #28]
   3e1d8:	vmov.f64	d8, d16
   3e1dc:	cmp	r0, #0
   3e1e0:	bne	3e1bc <flatcc_json_printer_double_field@@Base+0xa0>
   3e1e4:	b	3e16c <flatcc_json_printer_double_field@@Base+0x50>
   3e1e8:	vmov.f64	d8, d16
   3e1ec:	b	3e16c <flatcc_json_printer_double_field@@Base+0x50>

0003e1f0 <flatcc_json_printer_uint8_enum_field@@Base>:
   3e1f0:	push	{r4, r5, r6, r7, fp, lr}
   3e1f4:	add	fp, sp, #16
   3e1f8:	mov	r6, r0
   3e1fc:	mov	r0, #4
   3e200:	ldr	r4, [r1, #8]
   3e204:	ldr	ip, [fp, #16]
   3e208:	add	r5, r0, r2, lsl #1
   3e20c:	ldr	r0, [fp, #12]
   3e210:	ldr	r2, [fp, #8]
   3e214:	cmp	r5, r4
   3e218:	bge	3e238 <flatcc_json_printer_uint8_enum_field@@Base+0x48>
   3e21c:	ldr	r4, [r1, #4]
   3e220:	add	r5, r4, r5
   3e224:	ldrh	r5, [r5]
   3e228:	cmp	r5, #0
   3e22c:	ldrne	r4, [r1]
   3e230:	addsne	r5, r4, r5
   3e234:	bne	3e338 <flatcc_json_printer_uint8_enum_field@@Base+0x148>
   3e238:	ldrb	r5, [r6, #29]
   3e23c:	cmp	r5, #0
   3e240:	mov	r5, r0
   3e244:	beq	3e374 <flatcc_json_printer_uint8_enum_field@@Base+0x184>
   3e248:	ldr	r0, [r1, #16]
   3e24c:	mov	r7, ip
   3e250:	add	r4, r0, #1
   3e254:	cmp	r0, #0
   3e258:	str	r4, [r1, #16]
   3e25c:	beq	3e274 <flatcc_json_printer_uint8_enum_field@@Base+0x84>
   3e260:	ldr	r0, [r6, #20]
   3e264:	add	r1, r0, #1
   3e268:	str	r1, [r6, #20]
   3e26c:	mov	r1, #44	; 0x2c
   3e270:	strb	r1, [r0]
   3e274:	mov	r0, r6
   3e278:	mov	r1, r3
   3e27c:	bl	3d354 <flatcc_json_printer_string_field@@Base+0x90>
   3e280:	ldrb	r0, [r6, #27]
   3e284:	cmp	r0, #0
   3e288:	beq	3e2e4 <flatcc_json_printer_uint8_enum_field@@Base+0xf4>
   3e28c:	ldr	r0, [r6, #20]
   3e290:	mov	r1, #0
   3e294:	cmp	r5, #100	; 0x64
   3e298:	bcc	3e2f8 <flatcc_json_printer_uint8_enum_field@@Base+0x108>
   3e29c:	strb	r1, [r0, #3]
   3e2a0:	movw	r1, #34079	; 0x851f
   3e2a4:	movt	r1, #20971	; 0x51eb
   3e2a8:	umull	r1, r2, r5, r1
   3e2ac:	mov	r1, #48	; 0x30
   3e2b0:	orr	r1, r1, r2, lsr #5
   3e2b4:	strb	r1, [r0]
   3e2b8:	lsr	r1, r2, #5
   3e2bc:	mov	r2, #100	; 0x64
   3e2c0:	mls	r1, r1, r2, r5
   3e2c4:	movw	r2, #60904	; 0xede8
   3e2c8:	movt	r2, #4
   3e2cc:	uxtb	r1, r1
   3e2d0:	add	r1, r2, r1, lsl #1
   3e2d4:	ldrh	r1, [r1]
   3e2d8:	strh	r1, [r0, #1]
   3e2dc:	mov	r0, #3
   3e2e0:	b	3e368 <flatcc_json_printer_uint8_enum_field@@Base+0x178>
   3e2e4:	mov	r0, r6
   3e2e8:	mov	r1, r5
   3e2ec:	mov	r2, r7
   3e2f0:	pop	{r4, r5, r6, r7, fp, lr}
   3e2f4:	bx	r2
   3e2f8:	cmp	r5, #10
   3e2fc:	bcc	3e358 <flatcc_json_printer_uint8_enum_field@@Base+0x168>
   3e300:	strb	r1, [r0, #2]
   3e304:	movw	r1, #34079	; 0x851f
   3e308:	movt	r1, #20971	; 0x51eb
   3e30c:	umull	r1, r2, r5, r1
   3e310:	lsr	r1, r2, #5
   3e314:	mov	r2, #100	; 0x64
   3e318:	mls	r1, r1, r2, r5
   3e31c:	movw	r2, #60904	; 0xede8
   3e320:	movt	r2, #4
   3e324:	add	r1, r2, r1, lsl #1
   3e328:	ldrh	r1, [r1]
   3e32c:	strh	r1, [r0]
   3e330:	mov	r0, #2
   3e334:	b	3e368 <flatcc_json_printer_uint8_enum_field@@Base+0x178>
   3e338:	ldrb	r5, [r5]
   3e33c:	cmp	r5, r0
   3e340:	bne	3e248 <flatcc_json_printer_uint8_enum_field@@Base+0x58>
   3e344:	ldrb	r5, [r6, #28]
   3e348:	cmp	r5, #0
   3e34c:	mov	r5, r0
   3e350:	popne	{r4, r5, r6, r7, fp, pc}
   3e354:	b	3e248 <flatcc_json_printer_uint8_enum_field@@Base+0x58>
   3e358:	strb	r1, [r0, #1]
   3e35c:	add	r1, r5, #48	; 0x30
   3e360:	strb	r1, [r0]
   3e364:	mov	r0, #1
   3e368:	ldr	r1, [r6, #20]
   3e36c:	add	r0, r1, r0
   3e370:	str	r0, [r6, #20]
   3e374:	pop	{r4, r5, r6, r7, fp, pc}

0003e378 <flatcc_json_printer_uint16_enum_field@@Base>:
   3e378:	push	{r4, r5, r6, r7, fp, lr}
   3e37c:	add	fp, sp, #16
   3e380:	mov	r4, r0
   3e384:	mov	r0, #4
   3e388:	ldr	r7, [fp, #16]
   3e38c:	ldr	ip, [fp, #12]
   3e390:	add	r5, r0, r2, lsl #1
   3e394:	ldr	r0, [r1, #8]
   3e398:	ldr	r2, [fp, #8]
   3e39c:	cmp	r5, r0
   3e3a0:	bge	3e3c0 <flatcc_json_printer_uint16_enum_field@@Base+0x48>
   3e3a4:	ldr	r0, [r1, #4]
   3e3a8:	add	r0, r0, r5
   3e3ac:	ldrh	r5, [r0]
   3e3b0:	cmp	r5, #0
   3e3b4:	ldrne	r0, [r1]
   3e3b8:	addsne	r5, r0, r5
   3e3bc:	bne	3e440 <flatcc_json_printer_uint16_enum_field@@Base+0xc8>
   3e3c0:	ldrb	r0, [r4, #29]
   3e3c4:	mov	r6, ip
   3e3c8:	cmp	r0, #0
   3e3cc:	beq	3e428 <flatcc_json_printer_uint16_enum_field@@Base+0xb0>
   3e3d0:	ldr	r0, [r1, #16]
   3e3d4:	add	r5, r0, #1
   3e3d8:	cmp	r0, #0
   3e3dc:	str	r5, [r1, #16]
   3e3e0:	beq	3e3f8 <flatcc_json_printer_uint16_enum_field@@Base+0x80>
   3e3e4:	ldr	r0, [r4, #20]
   3e3e8:	add	r1, r0, #1
   3e3ec:	str	r1, [r4, #20]
   3e3f0:	mov	r1, #44	; 0x2c
   3e3f4:	strb	r1, [r0]
   3e3f8:	mov	r0, r4
   3e3fc:	mov	r1, r3
   3e400:	bl	3d354 <flatcc_json_printer_string_field@@Base+0x90>
   3e404:	ldrb	r0, [r4, #27]
   3e408:	cmp	r0, #0
   3e40c:	beq	3e42c <flatcc_json_printer_uint16_enum_field@@Base+0xb4>
   3e410:	ldr	r1, [r4, #20]
   3e414:	mov	r0, r6
   3e418:	bl	3c4ac <flatcc_json_printer_uint16@@Base+0x2c>
   3e41c:	ldr	r1, [r4, #20]
   3e420:	add	r0, r1, r0
   3e424:	str	r0, [r4, #20]
   3e428:	pop	{r4, r5, r6, r7, fp, pc}
   3e42c:	mov	r0, r4
   3e430:	mov	r1, r6
   3e434:	mov	r2, r7
   3e438:	pop	{r4, r5, r6, r7, fp, lr}
   3e43c:	bx	r2
   3e440:	ldrh	r6, [r5]
   3e444:	cmp	r6, ip
   3e448:	bne	3e3d0 <flatcc_json_printer_uint16_enum_field@@Base+0x58>
   3e44c:	ldrb	r0, [r4, #28]
   3e450:	mov	r6, ip
   3e454:	cmp	r0, #0
   3e458:	popne	{r4, r5, r6, r7, fp, pc}
   3e45c:	b	3e3d0 <flatcc_json_printer_uint16_enum_field@@Base+0x58>

0003e460 <flatcc_json_printer_uint32_enum_field@@Base>:
   3e460:	push	{r4, r5, r6, r7, fp, lr}
   3e464:	add	fp, sp, #16
   3e468:	mov	r4, r0
   3e46c:	mov	r0, #4
   3e470:	ldr	r7, [fp, #16]
   3e474:	ldr	ip, [fp, #12]
   3e478:	add	r5, r0, r2, lsl #1
   3e47c:	ldr	r0, [r1, #8]
   3e480:	ldr	r2, [fp, #8]
   3e484:	cmp	r5, r0
   3e488:	bge	3e4a8 <flatcc_json_printer_uint32_enum_field@@Base+0x48>
   3e48c:	ldr	r0, [r1, #4]
   3e490:	add	r0, r0, r5
   3e494:	ldrh	r5, [r0]
   3e498:	cmp	r5, #0
   3e49c:	ldrne	r0, [r1]
   3e4a0:	addsne	r5, r0, r5
   3e4a4:	bne	3e528 <flatcc_json_printer_uint32_enum_field@@Base+0xc8>
   3e4a8:	ldrb	r0, [r4, #29]
   3e4ac:	mov	r6, ip
   3e4b0:	cmp	r0, #0
   3e4b4:	beq	3e510 <flatcc_json_printer_uint32_enum_field@@Base+0xb0>
   3e4b8:	ldr	r0, [r1, #16]
   3e4bc:	add	r5, r0, #1
   3e4c0:	cmp	r0, #0
   3e4c4:	str	r5, [r1, #16]
   3e4c8:	beq	3e4e0 <flatcc_json_printer_uint32_enum_field@@Base+0x80>
   3e4cc:	ldr	r0, [r4, #20]
   3e4d0:	add	r1, r0, #1
   3e4d4:	str	r1, [r4, #20]
   3e4d8:	mov	r1, #44	; 0x2c
   3e4dc:	strb	r1, [r0]
   3e4e0:	mov	r0, r4
   3e4e4:	mov	r1, r3
   3e4e8:	bl	3d354 <flatcc_json_printer_string_field@@Base+0x90>
   3e4ec:	ldrb	r0, [r4, #27]
   3e4f0:	cmp	r0, #0
   3e4f4:	beq	3e514 <flatcc_json_printer_uint32_enum_field@@Base+0xb4>
   3e4f8:	ldr	r1, [r4, #20]
   3e4fc:	mov	r0, r6
   3e500:	bl	3c65c <flatcc_json_printer_uint32@@Base+0x2c>
   3e504:	ldr	r1, [r4, #20]
   3e508:	add	r0, r1, r0
   3e50c:	str	r0, [r4, #20]
   3e510:	pop	{r4, r5, r6, r7, fp, pc}
   3e514:	mov	r0, r4
   3e518:	mov	r1, r6
   3e51c:	mov	r2, r7
   3e520:	pop	{r4, r5, r6, r7, fp, lr}
   3e524:	bx	r2
   3e528:	ldr	r6, [r5]
   3e52c:	cmp	r6, ip
   3e530:	bne	3e4b8 <flatcc_json_printer_uint32_enum_field@@Base+0x58>
   3e534:	ldrb	r0, [r4, #28]
   3e538:	mov	r6, ip
   3e53c:	cmp	r0, #0
   3e540:	popne	{r4, r5, r6, r7, fp, pc}
   3e544:	b	3e4b8 <flatcc_json_printer_uint32_enum_field@@Base+0x58>

0003e548 <flatcc_json_printer_uint64_enum_field@@Base>:
   3e548:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   3e54c:	add	fp, sp, #24
   3e550:	mov	r4, r0
   3e554:	mov	r0, #4
   3e558:	ldr	ip, [fp, #20]
   3e55c:	ldr	r6, [fp, #16]
   3e560:	ldr	r5, [fp, #24]
   3e564:	add	r7, r0, r2, lsl #1
   3e568:	ldr	r0, [r1, #8]
   3e56c:	ldr	r2, [fp, #8]
   3e570:	cmp	r7, r0
   3e574:	bge	3e594 <flatcc_json_printer_uint64_enum_field@@Base+0x4c>
   3e578:	ldr	r0, [r1, #4]
   3e57c:	add	r0, r0, r7
   3e580:	ldrh	r7, [r0]
   3e584:	cmp	r7, #0
   3e588:	ldrne	r0, [r1]
   3e58c:	addsne	r7, r0, r7
   3e590:	bne	3e620 <flatcc_json_printer_uint64_enum_field@@Base+0xd8>
   3e594:	ldrb	r0, [r4, #29]
   3e598:	mov	r8, r6
   3e59c:	mov	r7, ip
   3e5a0:	cmp	r0, #0
   3e5a4:	beq	3e604 <flatcc_json_printer_uint64_enum_field@@Base+0xbc>
   3e5a8:	ldr	r0, [r1, #16]
   3e5ac:	add	r6, r0, #1
   3e5b0:	cmp	r0, #0
   3e5b4:	str	r6, [r1, #16]
   3e5b8:	beq	3e5d0 <flatcc_json_printer_uint64_enum_field@@Base+0x88>
   3e5bc:	ldr	r0, [r4, #20]
   3e5c0:	add	r1, r0, #1
   3e5c4:	str	r1, [r4, #20]
   3e5c8:	mov	r1, #44	; 0x2c
   3e5cc:	strb	r1, [r0]
   3e5d0:	mov	r0, r4
   3e5d4:	mov	r1, r3
   3e5d8:	bl	3d354 <flatcc_json_printer_string_field@@Base+0x90>
   3e5dc:	ldrb	r0, [r4, #27]
   3e5e0:	cmp	r0, #0
   3e5e4:	beq	3e608 <flatcc_json_printer_uint64_enum_field@@Base+0xc0>
   3e5e8:	ldr	r2, [r4, #20]
   3e5ec:	mov	r0, r8
   3e5f0:	mov	r1, r7
   3e5f4:	bl	3c9b0 <flatcc_json_printer_uint64@@Base+0x30>
   3e5f8:	ldr	r1, [r4, #20]
   3e5fc:	add	r0, r1, r0
   3e600:	str	r0, [r4, #20]
   3e604:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   3e608:	mov	r0, r4
   3e60c:	mov	r2, r8
   3e610:	mov	r3, r7
   3e614:	mov	r1, r5
   3e618:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   3e61c:	bx	r1
   3e620:	ldr	r8, [r7]
   3e624:	ldr	r7, [r7, #4]
   3e628:	eor	lr, r7, ip
   3e62c:	eor	r0, r8, r6
   3e630:	orrs	r0, r0, lr
   3e634:	bne	3e5a8 <flatcc_json_printer_uint64_enum_field@@Base+0x60>
   3e638:	ldrb	r0, [r4, #28]
   3e63c:	mov	r8, r6
   3e640:	mov	r7, ip
   3e644:	cmp	r0, #0
   3e648:	popne	{r4, r5, r6, r7, r8, sl, fp, pc}
   3e64c:	b	3e5a8 <flatcc_json_printer_uint64_enum_field@@Base+0x60>

0003e650 <flatcc_json_printer_int8_enum_field@@Base>:
   3e650:	push	{r4, r5, r6, r7, fp, lr}
   3e654:	add	fp, sp, #16
   3e658:	mov	r6, r0
   3e65c:	mov	r0, #4
   3e660:	ldr	r4, [r1, #8]
   3e664:	ldr	ip, [fp, #16]
   3e668:	add	r5, r0, r2, lsl #1
   3e66c:	ldr	r0, [fp, #12]
   3e670:	ldr	r2, [fp, #8]
   3e674:	cmp	r5, r4
   3e678:	bge	3e698 <flatcc_json_printer_int8_enum_field@@Base+0x48>
   3e67c:	ldr	r4, [r1, #4]
   3e680:	add	r5, r4, r5
   3e684:	ldrh	r5, [r5]
   3e688:	cmp	r5, #0
   3e68c:	ldrne	r4, [r1]
   3e690:	addsne	r5, r4, r5
   3e694:	bne	3e7bc <flatcc_json_printer_int8_enum_field@@Base+0x16c>
   3e698:	ldrb	r5, [r6, #29]
   3e69c:	cmp	r5, #0
   3e6a0:	mov	r5, r0
   3e6a4:	beq	3e804 <flatcc_json_printer_int8_enum_field@@Base+0x1b4>
   3e6a8:	ldr	r0, [r1, #16]
   3e6ac:	mov	r7, ip
   3e6b0:	add	r4, r0, #1
   3e6b4:	cmp	r0, #0
   3e6b8:	str	r4, [r1, #16]
   3e6bc:	beq	3e6d4 <flatcc_json_printer_int8_enum_field@@Base+0x84>
   3e6c0:	ldr	r0, [r6, #20]
   3e6c4:	add	r1, r0, #1
   3e6c8:	str	r1, [r6, #20]
   3e6cc:	mov	r1, #44	; 0x2c
   3e6d0:	strb	r1, [r0]
   3e6d4:	mov	r0, r6
   3e6d8:	mov	r1, r3
   3e6dc:	bl	3d354 <flatcc_json_printer_string_field@@Base+0x90>
   3e6e0:	ldrb	r0, [r6, #27]
   3e6e4:	cmp	r0, #0
   3e6e8:	beq	3e764 <flatcc_json_printer_int8_enum_field@@Base+0x114>
   3e6ec:	sxtb	r2, r5
   3e6f0:	ldr	r0, [r6, #20]
   3e6f4:	uxtb	r1, r5
   3e6f8:	cmn	r2, #1
   3e6fc:	lsr	r1, r1, #7
   3e700:	movle	r2, #45	; 0x2d
   3e704:	rsble	r5, r5, #0
   3e708:	strble	r2, [r0], #1
   3e70c:	uxtb	r2, r5
   3e710:	cmp	r2, #100	; 0x64
   3e714:	bcc	3e778 <flatcc_json_printer_int8_enum_field@@Base+0x128>
   3e718:	mov	r3, #0
   3e71c:	strb	r3, [r0, #3]
   3e720:	movw	r3, #34079	; 0x851f
   3e724:	movt	r3, #20971	; 0x51eb
   3e728:	umull	r3, r5, r2, r3
   3e72c:	mov	r3, #48	; 0x30
   3e730:	orr	r3, r3, r5, lsr #5
   3e734:	strb	r3, [r0]
   3e738:	lsr	r3, r5, #5
   3e73c:	mov	r5, #100	; 0x64
   3e740:	mls	r2, r3, r5, r2
   3e744:	movw	r3, #60904	; 0xede8
   3e748:	movt	r3, #4
   3e74c:	uxtb	r2, r2
   3e750:	add	r2, r3, r2, lsl #1
   3e754:	ldrh	r2, [r2]
   3e758:	strh	r2, [r0, #1]
   3e75c:	mov	r0, #3
   3e760:	b	3e7f4 <flatcc_json_printer_int8_enum_field@@Base+0x1a4>
   3e764:	sxtb	r1, r5
   3e768:	mov	r0, r6
   3e76c:	mov	r2, r7
   3e770:	pop	{r4, r5, r6, r7, fp, lr}
   3e774:	bx	r2
   3e778:	cmp	r2, #10
   3e77c:	bcc	3e7e0 <flatcc_json_printer_int8_enum_field@@Base+0x190>
   3e780:	mov	r3, #0
   3e784:	strb	r3, [r0, #2]
   3e788:	movw	r3, #34079	; 0x851f
   3e78c:	movt	r3, #20971	; 0x51eb
   3e790:	umull	r3, r5, r2, r3
   3e794:	lsr	r3, r5, #5
   3e798:	mov	r5, #100	; 0x64
   3e79c:	mls	r2, r3, r5, r2
   3e7a0:	movw	r3, #60904	; 0xede8
   3e7a4:	movt	r3, #4
   3e7a8:	add	r2, r3, r2, lsl #1
   3e7ac:	ldrh	r2, [r2]
   3e7b0:	strh	r2, [r0]
   3e7b4:	mov	r0, #2
   3e7b8:	b	3e7f4 <flatcc_json_printer_int8_enum_field@@Base+0x1a4>
   3e7bc:	ldrb	r5, [r5]
   3e7c0:	uxtb	r4, r0
   3e7c4:	cmp	r5, r4
   3e7c8:	bne	3e6a8 <flatcc_json_printer_int8_enum_field@@Base+0x58>
   3e7cc:	ldrb	r5, [r6, #28]
   3e7d0:	cmp	r5, #0
   3e7d4:	mov	r5, r0
   3e7d8:	popne	{r4, r5, r6, r7, fp, pc}
   3e7dc:	b	3e6a8 <flatcc_json_printer_int8_enum_field@@Base+0x58>
   3e7e0:	mov	r2, #0
   3e7e4:	strb	r2, [r0, #1]
   3e7e8:	add	r2, r5, #48	; 0x30
   3e7ec:	strb	r2, [r0]
   3e7f0:	mov	r0, #1
   3e7f4:	add	r0, r0, r1
   3e7f8:	ldr	r1, [r6, #20]
   3e7fc:	add	r0, r1, r0
   3e800:	str	r0, [r6, #20]
   3e804:	pop	{r4, r5, r6, r7, fp, pc}

0003e808 <flatcc_json_printer_int16_enum_field@@Base>:
   3e808:	push	{r4, r5, r6, r7, fp, lr}
   3e80c:	add	fp, sp, #16
   3e810:	mov	r4, r0
   3e814:	mov	r0, #4
   3e818:	ldr	r5, [r1, #8]
   3e81c:	ldr	ip, [fp, #16]
   3e820:	add	r6, r0, r2, lsl #1
   3e824:	ldr	r0, [fp, #12]
   3e828:	ldr	r2, [fp, #8]
   3e82c:	cmp	r6, r5
   3e830:	bge	3e850 <flatcc_json_printer_int16_enum_field@@Base+0x48>
   3e834:	ldr	r5, [r1, #4]
   3e838:	add	r6, r5, r6
   3e83c:	ldrh	r6, [r6]
   3e840:	cmp	r6, #0
   3e844:	ldrne	r5, [r1]
   3e848:	addsne	r6, r5, r6
   3e84c:	bne	3e8f4 <flatcc_json_printer_int16_enum_field@@Base+0xec>
   3e850:	ldrb	r6, [r4, #29]
   3e854:	mov	r5, r0
   3e858:	cmp	r6, #0
   3e85c:	beq	3e8dc <flatcc_json_printer_int16_enum_field@@Base+0xd4>
   3e860:	ldr	r0, [r1, #16]
   3e864:	mov	r7, ip
   3e868:	add	r6, r0, #1
   3e86c:	cmp	r0, #0
   3e870:	str	r6, [r1, #16]
   3e874:	beq	3e88c <flatcc_json_printer_int16_enum_field@@Base+0x84>
   3e878:	ldr	r0, [r4, #20]
   3e87c:	add	r1, r0, #1
   3e880:	str	r1, [r4, #20]
   3e884:	mov	r1, #44	; 0x2c
   3e888:	strb	r1, [r0]
   3e88c:	mov	r0, r4
   3e890:	mov	r1, r3
   3e894:	bl	3d354 <flatcc_json_printer_string_field@@Base+0x90>
   3e898:	ldrb	r0, [r4, #27]
   3e89c:	cmp	r0, #0
   3e8a0:	beq	3e8e0 <flatcc_json_printer_int16_enum_field@@Base+0xd8>
   3e8a4:	uxth	r0, r5
   3e8a8:	ldr	r1, [r4, #20]
   3e8ac:	lsr	r6, r0, #15
   3e8b0:	sxth	r0, r5
   3e8b4:	cmn	r0, #1
   3e8b8:	movle	r0, #45	; 0x2d
   3e8bc:	rsble	r5, r5, #0
   3e8c0:	strble	r0, [r1], #1
   3e8c4:	uxth	r0, r5
   3e8c8:	bl	3c4ac <flatcc_json_printer_uint16@@Base+0x2c>
   3e8cc:	ldr	r1, [r4, #20]
   3e8d0:	add	r0, r0, r6
   3e8d4:	add	r0, r1, r0
   3e8d8:	str	r0, [r4, #20]
   3e8dc:	pop	{r4, r5, r6, r7, fp, pc}
   3e8e0:	sxth	r1, r5
   3e8e4:	mov	r0, r4
   3e8e8:	mov	r2, r7
   3e8ec:	pop	{r4, r5, r6, r7, fp, lr}
   3e8f0:	bx	r2
   3e8f4:	ldrh	r5, [r6]
   3e8f8:	uxth	r6, r0
   3e8fc:	cmp	r5, r6
   3e900:	bne	3e860 <flatcc_json_printer_int16_enum_field@@Base+0x58>
   3e904:	ldrb	r6, [r4, #28]
   3e908:	mov	r5, r0
   3e90c:	cmp	r6, #0
   3e910:	popne	{r4, r5, r6, r7, fp, pc}
   3e914:	b	3e860 <flatcc_json_printer_int16_enum_field@@Base+0x58>

0003e918 <flatcc_json_printer_int32_enum_field@@Base>:
   3e918:	push	{r4, r5, r6, r7, fp, lr}
   3e91c:	add	fp, sp, #16
   3e920:	mov	r4, r0
   3e924:	mov	r0, #4
   3e928:	ldr	r5, [r1, #8]
   3e92c:	ldr	ip, [fp, #16]
   3e930:	add	r6, r0, r2, lsl #1
   3e934:	ldr	r0, [fp, #12]
   3e938:	ldr	r2, [fp, #8]
   3e93c:	cmp	r6, r5
   3e940:	bge	3e960 <flatcc_json_printer_int32_enum_field@@Base+0x48>
   3e944:	ldr	r5, [r1, #4]
   3e948:	add	r6, r5, r6
   3e94c:	ldrh	r6, [r6]
   3e950:	cmp	r6, #0
   3e954:	ldrne	r5, [r1]
   3e958:	addsne	r6, r5, r6
   3e95c:	bne	3e9fc <flatcc_json_printer_int32_enum_field@@Base+0xe4>
   3e960:	ldrb	r6, [r4, #29]
   3e964:	mov	r5, r0
   3e968:	cmp	r6, #0
   3e96c:	beq	3e9e4 <flatcc_json_printer_int32_enum_field@@Base+0xcc>
   3e970:	ldr	r0, [r1, #16]
   3e974:	mov	r7, ip
   3e978:	add	r6, r0, #1
   3e97c:	cmp	r0, #0
   3e980:	str	r6, [r1, #16]
   3e984:	beq	3e99c <flatcc_json_printer_int32_enum_field@@Base+0x84>
   3e988:	ldr	r0, [r4, #20]
   3e98c:	add	r1, r0, #1
   3e990:	str	r1, [r4, #20]
   3e994:	mov	r1, #44	; 0x2c
   3e998:	strb	r1, [r0]
   3e99c:	mov	r0, r4
   3e9a0:	mov	r1, r3
   3e9a4:	bl	3d354 <flatcc_json_printer_string_field@@Base+0x90>
   3e9a8:	ldrb	r0, [r4, #27]
   3e9ac:	cmp	r0, #0
   3e9b0:	beq	3e9e8 <flatcc_json_printer_int32_enum_field@@Base+0xd0>
   3e9b4:	ldr	r1, [r4, #20]
   3e9b8:	cmn	r5, #1
   3e9bc:	lsr	r6, r5, #31
   3e9c0:	movle	r0, #45	; 0x2d
   3e9c4:	rsble	r5, r5, #0
   3e9c8:	strble	r0, [r1], #1
   3e9cc:	mov	r0, r5
   3e9d0:	bl	3c65c <flatcc_json_printer_uint32@@Base+0x2c>
   3e9d4:	ldr	r1, [r4, #20]
   3e9d8:	add	r0, r0, r6
   3e9dc:	add	r0, r1, r0
   3e9e0:	str	r0, [r4, #20]
   3e9e4:	pop	{r4, r5, r6, r7, fp, pc}
   3e9e8:	mov	r0, r4
   3e9ec:	mov	r1, r5
   3e9f0:	mov	r2, r7
   3e9f4:	pop	{r4, r5, r6, r7, fp, lr}
   3e9f8:	bx	r2
   3e9fc:	ldr	r5, [r6]
   3ea00:	cmp	r5, r0
   3ea04:	bne	3e970 <flatcc_json_printer_int32_enum_field@@Base+0x58>
   3ea08:	ldrb	r6, [r4, #28]
   3ea0c:	mov	r5, r0
   3ea10:	cmp	r6, #0
   3ea14:	popne	{r4, r5, r6, r7, fp, pc}
   3ea18:	b	3e970 <flatcc_json_printer_int32_enum_field@@Base+0x58>

0003ea1c <flatcc_json_printer_int64_enum_field@@Base>:
   3ea1c:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   3ea20:	add	fp, sp, #24
   3ea24:	mov	r4, r0
   3ea28:	mov	r0, #4
   3ea2c:	ldr	r5, [r1, #8]
   3ea30:	ldr	r6, [fp, #16]
   3ea34:	ldr	r9, [fp, #24]
   3ea38:	add	r7, r0, r2, lsl #1
   3ea3c:	ldr	r0, [fp, #20]
   3ea40:	ldr	r2, [fp, #8]
   3ea44:	cmp	r7, r5
   3ea48:	bge	3ea68 <flatcc_json_printer_int64_enum_field@@Base+0x4c>
   3ea4c:	ldr	r5, [r1, #4]
   3ea50:	add	r7, r5, r7
   3ea54:	ldrh	r7, [r7]
   3ea58:	cmp	r7, #0
   3ea5c:	ldrne	r5, [r1]
   3ea60:	addsne	r7, r5, r7
   3ea64:	bne	3eb14 <flatcc_json_printer_int64_enum_field@@Base+0xf8>
   3ea68:	ldrb	r7, [r4, #29]
   3ea6c:	mov	r8, r6
   3ea70:	cmp	r7, #0
   3ea74:	mov	r7, r0
   3ea78:	beq	3eaf8 <flatcc_json_printer_int64_enum_field@@Base+0xdc>
   3ea7c:	ldr	r0, [r1, #16]
   3ea80:	add	r6, r0, #1
   3ea84:	cmp	r0, #0
   3ea88:	str	r6, [r1, #16]
   3ea8c:	beq	3eaa4 <flatcc_json_printer_int64_enum_field@@Base+0x88>
   3ea90:	ldr	r0, [r4, #20]
   3ea94:	add	r1, r0, #1
   3ea98:	str	r1, [r4, #20]
   3ea9c:	mov	r1, #44	; 0x2c
   3eaa0:	strb	r1, [r0]
   3eaa4:	mov	r0, r4
   3eaa8:	mov	r1, r3
   3eaac:	bl	3d354 <flatcc_json_printer_string_field@@Base+0x90>
   3eab0:	ldrb	r0, [r4, #27]
   3eab4:	cmp	r0, #0
   3eab8:	beq	3eafc <flatcc_json_printer_int64_enum_field@@Base+0xe0>
   3eabc:	ldr	r2, [r4, #20]
   3eac0:	lsr	r5, r7, #31
   3eac4:	cmn	r7, #1
   3eac8:	bgt	3eadc <flatcc_json_printer_int64_enum_field@@Base+0xc0>
   3eacc:	mov	r0, #45	; 0x2d
   3ead0:	rsbs	r8, r8, #0
   3ead4:	strb	r0, [r2], #1
   3ead8:	rsc	r7, r7, #0
   3eadc:	mov	r0, r8
   3eae0:	mov	r1, r7
   3eae4:	bl	3c9b0 <flatcc_json_printer_uint64@@Base+0x30>
   3eae8:	ldr	r1, [r4, #20]
   3eaec:	add	r0, r0, r5
   3eaf0:	add	r0, r1, r0
   3eaf4:	str	r0, [r4, #20]
   3eaf8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   3eafc:	mov	r0, r4
   3eb00:	mov	r2, r8
   3eb04:	mov	r3, r7
   3eb08:	mov	r1, r9
   3eb0c:	pop	{r4, r5, r6, r7, r8, r9, fp, lr}
   3eb10:	bx	r1
   3eb14:	ldr	r8, [r7]
   3eb18:	ldr	r7, [r7, #4]
   3eb1c:	eor	ip, r7, r0
   3eb20:	eor	r5, r8, r6
   3eb24:	orrs	r5, r5, ip
   3eb28:	bne	3ea7c <flatcc_json_printer_int64_enum_field@@Base+0x60>
   3eb2c:	ldrb	r7, [r4, #28]
   3eb30:	mov	r8, r6
   3eb34:	cmp	r7, #0
   3eb38:	mov	r7, r0
   3eb3c:	popne	{r4, r5, r6, r7, r8, r9, fp, pc}
   3eb40:	b	3ea7c <flatcc_json_printer_int64_enum_field@@Base+0x60>

0003eb44 <flatcc_json_printer_bool_enum_field@@Base>:
   3eb44:	push	{r4, r5, r6, r7, fp, lr}
   3eb48:	add	fp, sp, #16
   3eb4c:	mov	r4, r0
   3eb50:	mov	r0, #4
   3eb54:	ldr	r7, [fp, #16]
   3eb58:	ldr	ip, [fp, #12]
   3eb5c:	add	r5, r0, r2, lsl #1
   3eb60:	ldr	r0, [r1, #8]
   3eb64:	ldr	r2, [fp, #8]
   3eb68:	cmp	r5, r0
   3eb6c:	bge	3eb8c <flatcc_json_printer_bool_enum_field@@Base+0x48>
   3eb70:	ldr	r0, [r1, #4]
   3eb74:	add	r0, r0, r5
   3eb78:	ldrh	r5, [r0]
   3eb7c:	cmp	r5, #0
   3eb80:	ldrne	r0, [r1]
   3eb84:	addsne	r5, r0, r5
   3eb88:	bne	3ec40 <flatcc_json_printer_bool_enum_field@@Base+0xfc>
   3eb8c:	ldrb	r0, [r4, #29]
   3eb90:	mov	r6, ip
   3eb94:	cmp	r0, #0
   3eb98:	beq	3ec3c <flatcc_json_printer_bool_enum_field@@Base+0xf8>
   3eb9c:	ldr	r0, [r1, #16]
   3eba0:	add	r5, r0, #1
   3eba4:	cmp	r0, #0
   3eba8:	str	r5, [r1, #16]
   3ebac:	beq	3ebc4 <flatcc_json_printer_bool_enum_field@@Base+0x80>
   3ebb0:	ldr	r0, [r4, #20]
   3ebb4:	add	r1, r0, #1
   3ebb8:	str	r1, [r4, #20]
   3ebbc:	mov	r1, #44	; 0x2c
   3ebc0:	strb	r1, [r0]
   3ebc4:	mov	r0, r4
   3ebc8:	mov	r1, r3
   3ebcc:	bl	3d354 <flatcc_json_printer_string_field@@Base+0x90>
   3ebd0:	ldrb	r0, [r4, #27]
   3ebd4:	cmp	r0, #0
   3ebd8:	beq	3ec04 <flatcc_json_printer_bool_enum_field@@Base+0xc0>
   3ebdc:	ldr	r0, [r4, #20]
   3ebe0:	cmp	r6, #0
   3ebe4:	beq	3ec18 <flatcc_json_printer_bool_enum_field@@Base+0xd4>
   3ebe8:	mov	r1, #0
   3ebec:	strb	r1, [r0, #4]
   3ebf0:	movw	r1, #29300	; 0x7274
   3ebf4:	movt	r1, #25973	; 0x6575
   3ebf8:	str	r1, [r0]
   3ebfc:	mov	r0, #4
   3ec00:	b	3ec30 <flatcc_json_printer_bool_enum_field@@Base+0xec>
   3ec04:	mov	r0, r4
   3ec08:	mov	r1, r6
   3ec0c:	mov	r2, r7
   3ec10:	pop	{r4, r5, r6, r7, fp, lr}
   3ec14:	bx	r2
   3ec18:	mov	r1, #101	; 0x65
   3ec1c:	strh	r1, [r0, #4]
   3ec20:	movw	r1, #24934	; 0x6166
   3ec24:	movt	r1, #29548	; 0x736c
   3ec28:	str	r1, [r0]
   3ec2c:	mov	r0, #5
   3ec30:	ldr	r1, [r4, #20]
   3ec34:	add	r0, r1, r0
   3ec38:	str	r0, [r4, #20]
   3ec3c:	pop	{r4, r5, r6, r7, fp, pc}
   3ec40:	ldrb	r6, [r5]
   3ec44:	cmp	r6, ip
   3ec48:	bne	3eb9c <flatcc_json_printer_bool_enum_field@@Base+0x58>
   3ec4c:	ldrb	r0, [r4, #28]
   3ec50:	mov	r6, ip
   3ec54:	cmp	r0, #0
   3ec58:	popne	{r4, r5, r6, r7, fp, pc}
   3ec5c:	b	3eb9c <flatcc_json_printer_bool_enum_field@@Base+0x58>

0003ec60 <flatcc_json_printer_uint8_struct_field@@Base>:
   3ec60:	push	{r4, r5, r6, sl, fp, lr}
   3ec64:	add	fp, sp, #16
   3ec68:	mov	r4, r1
   3ec6c:	ldrb	r6, [r2, r3]
   3ec70:	ldr	r2, [fp, #12]
   3ec74:	ldr	r1, [fp, #8]
   3ec78:	mov	r5, r0
   3ec7c:	cmp	r4, #0
   3ec80:	beq	3ec98 <flatcc_json_printer_uint8_struct_field@@Base+0x38>
   3ec84:	ldr	r0, [r5, #20]
   3ec88:	add	r3, r0, #1
   3ec8c:	str	r3, [r5, #20]
   3ec90:	mov	r3, #44	; 0x2c
   3ec94:	strb	r3, [r0]
   3ec98:	mov	r0, r5
   3ec9c:	bl	3d354 <flatcc_json_printer_string_field@@Base+0x90>
   3eca0:	ldr	r0, [r5, #20]
   3eca4:	mov	r1, #0
   3eca8:	cmp	r6, #100	; 0x64
   3ecac:	bcc	3ed04 <flatcc_json_printer_uint8_struct_field@@Base+0xa4>
   3ecb0:	strb	r1, [r0, #3]
   3ecb4:	movw	r1, #34079	; 0x851f
   3ecb8:	movt	r1, #20971	; 0x51eb
   3ecbc:	umull	r1, r2, r6, r1
   3ecc0:	mov	r1, #48	; 0x30
   3ecc4:	orr	r1, r1, r2, lsr #5
   3ecc8:	strb	r1, [r0]
   3eccc:	lsr	r1, r2, #5
   3ecd0:	mov	r2, #100	; 0x64
   3ecd4:	mls	r1, r1, r2, r6
   3ecd8:	movw	r2, #60904	; 0xede8
   3ecdc:	movt	r2, #4
   3ece0:	uxtb	r1, r1
   3ece4:	add	r1, r2, r1, lsl #1
   3ece8:	ldrh	r1, [r1]
   3ecec:	strh	r1, [r0, #1]
   3ecf0:	mov	r0, #3
   3ecf4:	ldr	r1, [r5, #20]
   3ecf8:	add	r0, r1, r0
   3ecfc:	str	r0, [r5, #20]
   3ed00:	pop	{r4, r5, r6, sl, fp, pc}
   3ed04:	cmp	r6, #10
   3ed08:	bcc	3ed50 <flatcc_json_printer_uint8_struct_field@@Base+0xf0>
   3ed0c:	strb	r1, [r0, #2]
   3ed10:	movw	r1, #34079	; 0x851f
   3ed14:	movt	r1, #20971	; 0x51eb
   3ed18:	umull	r1, r2, r6, r1
   3ed1c:	lsr	r1, r2, #5
   3ed20:	mov	r2, #100	; 0x64
   3ed24:	mls	r1, r1, r2, r6
   3ed28:	movw	r2, #60904	; 0xede8
   3ed2c:	movt	r2, #4
   3ed30:	add	r1, r2, r1, lsl #1
   3ed34:	ldrh	r1, [r1]
   3ed38:	strh	r1, [r0]
   3ed3c:	mov	r0, #2
   3ed40:	ldr	r1, [r5, #20]
   3ed44:	add	r0, r1, r0
   3ed48:	str	r0, [r5, #20]
   3ed4c:	pop	{r4, r5, r6, sl, fp, pc}
   3ed50:	strb	r1, [r0, #1]
   3ed54:	add	r1, r6, #48	; 0x30
   3ed58:	strb	r1, [r0]
   3ed5c:	mov	r0, #1
   3ed60:	ldr	r1, [r5, #20]
   3ed64:	add	r0, r1, r0
   3ed68:	str	r0, [r5, #20]
   3ed6c:	pop	{r4, r5, r6, sl, fp, pc}

0003ed70 <flatcc_json_printer_uint16_struct_field@@Base>:
   3ed70:	push	{r4, r5, r6, sl, fp, lr}
   3ed74:	add	fp, sp, #16
   3ed78:	mov	r4, r0
   3ed7c:	add	r0, r2, r3
   3ed80:	mov	r5, r1
   3ed84:	ldr	r2, [fp, #12]
   3ed88:	ldr	r1, [fp, #8]
   3ed8c:	ldrh	r6, [r0]
   3ed90:	cmp	r5, #0
   3ed94:	beq	3edac <flatcc_json_printer_uint16_struct_field@@Base+0x3c>
   3ed98:	ldr	r0, [r4, #20]
   3ed9c:	add	r3, r0, #1
   3eda0:	str	r3, [r4, #20]
   3eda4:	mov	r3, #44	; 0x2c
   3eda8:	strb	r3, [r0]
   3edac:	mov	r0, r4
   3edb0:	bl	3d354 <flatcc_json_printer_string_field@@Base+0x90>
   3edb4:	ldr	r1, [r4, #20]
   3edb8:	mov	r0, r6
   3edbc:	bl	3c4ac <flatcc_json_printer_uint16@@Base+0x2c>
   3edc0:	ldr	r1, [r4, #20]
   3edc4:	add	r0, r1, r0
   3edc8:	str	r0, [r4, #20]
   3edcc:	pop	{r4, r5, r6, sl, fp, pc}

0003edd0 <flatcc_json_printer_uint32_struct_field@@Base>:
   3edd0:	push	{r4, r5, r6, sl, fp, lr}
   3edd4:	add	fp, sp, #16
   3edd8:	mov	r5, r1
   3eddc:	ldr	r6, [r2, r3]
   3ede0:	ldr	r2, [fp, #12]
   3ede4:	ldr	r1, [fp, #8]
   3ede8:	mov	r4, r0
   3edec:	cmp	r5, #0
   3edf0:	beq	3ee08 <flatcc_json_printer_uint32_struct_field@@Base+0x38>
   3edf4:	ldr	r0, [r4, #20]
   3edf8:	add	r3, r0, #1
   3edfc:	str	r3, [r4, #20]
   3ee00:	mov	r3, #44	; 0x2c
   3ee04:	strb	r3, [r0]
   3ee08:	mov	r0, r4
   3ee0c:	bl	3d354 <flatcc_json_printer_string_field@@Base+0x90>
   3ee10:	ldr	r1, [r4, #20]
   3ee14:	mov	r0, r6
   3ee18:	bl	3c65c <flatcc_json_printer_uint32@@Base+0x2c>
   3ee1c:	ldr	r1, [r4, #20]
   3ee20:	add	r0, r1, r0
   3ee24:	str	r0, [r4, #20]
   3ee28:	pop	{r4, r5, r6, sl, fp, pc}

0003ee2c <flatcc_json_printer_uint64_struct_field@@Base>:
   3ee2c:	push	{r4, r5, r6, r7, fp, lr}
   3ee30:	add	fp, sp, #16
   3ee34:	ldr	r7, [r2, r3]!
   3ee38:	mov	r5, r1
   3ee3c:	ldr	r1, [fp, #8]
   3ee40:	mov	r4, r0
   3ee44:	cmp	r5, #0
   3ee48:	ldr	r6, [r2, #4]
   3ee4c:	ldr	r2, [fp, #12]
   3ee50:	beq	3ee68 <flatcc_json_printer_uint64_struct_field@@Base+0x3c>
   3ee54:	ldr	r0, [r4, #20]
   3ee58:	add	r3, r0, #1
   3ee5c:	str	r3, [r4, #20]
   3ee60:	mov	r3, #44	; 0x2c
   3ee64:	strb	r3, [r0]
   3ee68:	mov	r0, r4
   3ee6c:	bl	3d354 <flatcc_json_printer_string_field@@Base+0x90>
   3ee70:	ldr	r2, [r4, #20]
   3ee74:	mov	r0, r7
   3ee78:	mov	r1, r6
   3ee7c:	bl	3c9b0 <flatcc_json_printer_uint64@@Base+0x30>
   3ee80:	ldr	r1, [r4, #20]
   3ee84:	add	r0, r1, r0
   3ee88:	str	r0, [r4, #20]
   3ee8c:	pop	{r4, r5, r6, r7, fp, pc}

0003ee90 <flatcc_json_printer_int8_struct_field@@Base>:
   3ee90:	push	{r4, r5, r6, sl, fp, lr}
   3ee94:	add	fp, sp, #16
   3ee98:	mov	r5, r0
   3ee9c:	add	r0, r2, r3
   3eea0:	mov	r4, r1
   3eea4:	ldr	r2, [fp, #12]
   3eea8:	ldr	r1, [fp, #8]
   3eeac:	ldrsb	r6, [r0]
   3eeb0:	cmp	r4, #0
   3eeb4:	beq	3eecc <flatcc_json_printer_int8_struct_field@@Base+0x3c>
   3eeb8:	ldr	r0, [r5, #20]
   3eebc:	add	r3, r0, #1
   3eec0:	str	r3, [r5, #20]
   3eec4:	mov	r3, #44	; 0x2c
   3eec8:	strb	r3, [r0]
   3eecc:	mov	r0, r5
   3eed0:	bl	3d354 <flatcc_json_printer_string_field@@Base+0x90>
   3eed4:	ldr	r0, [r5, #20]
   3eed8:	cmn	r6, #1
   3eedc:	uxtb	r1, r6
   3eee0:	movle	r2, #45	; 0x2d
   3eee4:	rsble	r6, r6, #0
   3eee8:	lsr	r1, r1, #7
   3eeec:	strble	r2, [r0], #1
   3eef0:	uxtb	r2, r6
   3eef4:	cmp	r2, #100	; 0x64
   3eef8:	bcc	3ef48 <flatcc_json_printer_int8_struct_field@@Base+0xb8>
   3eefc:	mov	r3, #0
   3ef00:	strb	r3, [r0, #3]
   3ef04:	movw	r3, #34079	; 0x851f
   3ef08:	movt	r3, #20971	; 0x51eb
   3ef0c:	umull	r3, r6, r2, r3
   3ef10:	mov	r3, #48	; 0x30
   3ef14:	orr	r3, r3, r6, lsr #5
   3ef18:	strb	r3, [r0]
   3ef1c:	lsr	r3, r6, #5
   3ef20:	mov	r6, #100	; 0x64
   3ef24:	mls	r2, r3, r6, r2
   3ef28:	movw	r3, #60904	; 0xede8
   3ef2c:	movt	r3, #4
   3ef30:	uxtb	r2, r2
   3ef34:	add	r2, r3, r2, lsl #1
   3ef38:	ldrh	r2, [r2]
   3ef3c:	strh	r2, [r0, #1]
   3ef40:	mov	r0, #3
   3ef44:	b	3efa0 <flatcc_json_printer_int8_struct_field@@Base+0x110>
   3ef48:	cmp	r2, #10
   3ef4c:	bcc	3ef8c <flatcc_json_printer_int8_struct_field@@Base+0xfc>
   3ef50:	mov	r3, #0
   3ef54:	strb	r3, [r0, #2]
   3ef58:	movw	r3, #34079	; 0x851f
   3ef5c:	movt	r3, #20971	; 0x51eb
   3ef60:	umull	r3, r6, r2, r3
   3ef64:	lsr	r3, r6, #5
   3ef68:	mov	r6, #100	; 0x64
   3ef6c:	mls	r2, r3, r6, r2
   3ef70:	movw	r3, #60904	; 0xede8
   3ef74:	movt	r3, #4
   3ef78:	add	r2, r3, r2, lsl #1
   3ef7c:	ldrh	r2, [r2]
   3ef80:	strh	r2, [r0]
   3ef84:	mov	r0, #2
   3ef88:	b	3efa0 <flatcc_json_printer_int8_struct_field@@Base+0x110>
   3ef8c:	mov	r2, #0
   3ef90:	strb	r2, [r0, #1]
   3ef94:	add	r2, r6, #48	; 0x30
   3ef98:	strb	r2, [r0]
   3ef9c:	mov	r0, #1
   3efa0:	add	r0, r0, r1
   3efa4:	ldr	r1, [r5, #20]
   3efa8:	add	r0, r1, r0
   3efac:	str	r0, [r5, #20]
   3efb0:	pop	{r4, r5, r6, sl, fp, pc}

0003efb4 <flatcc_json_printer_int16_struct_field@@Base>:
   3efb4:	push	{r4, r5, r6, sl, fp, lr}
   3efb8:	add	fp, sp, #16
   3efbc:	mov	r4, r0
   3efc0:	add	r0, r2, r3
   3efc4:	mov	ip, r1
   3efc8:	ldr	r2, [fp, #12]
   3efcc:	ldr	r1, [fp, #8]
   3efd0:	ldrsh	r5, [r0]
   3efd4:	cmp	ip, #0
   3efd8:	beq	3eff0 <flatcc_json_printer_int16_struct_field@@Base+0x3c>
   3efdc:	ldr	r0, [r4, #20]
   3efe0:	add	r3, r0, #1
   3efe4:	str	r3, [r4, #20]
   3efe8:	mov	r3, #44	; 0x2c
   3efec:	strb	r3, [r0]
   3eff0:	mov	r0, r4
   3eff4:	bl	3d354 <flatcc_json_printer_string_field@@Base+0x90>
   3eff8:	ldr	r1, [r4, #20]
   3effc:	uxth	r0, r5
   3f000:	cmn	r5, #1
   3f004:	rsble	r5, r5, #0
   3f008:	lsr	r6, r0, #15
   3f00c:	movle	r0, #45	; 0x2d
   3f010:	strble	r0, [r1], #1
   3f014:	uxth	r0, r5
   3f018:	bl	3c4ac <flatcc_json_printer_uint16@@Base+0x2c>
   3f01c:	ldr	r1, [r4, #20]
   3f020:	add	r0, r0, r6
   3f024:	add	r0, r1, r0
   3f028:	str	r0, [r4, #20]
   3f02c:	pop	{r4, r5, r6, sl, fp, pc}

0003f030 <flatcc_json_printer_int32_struct_field@@Base>:
   3f030:	push	{r4, r5, r6, sl, fp, lr}
   3f034:	add	fp, sp, #16
   3f038:	mov	ip, r1
   3f03c:	ldr	r5, [r2, r3]
   3f040:	ldr	r2, [fp, #12]
   3f044:	ldr	r1, [fp, #8]
   3f048:	mov	r4, r0
   3f04c:	cmp	ip, #0
   3f050:	beq	3f068 <flatcc_json_printer_int32_struct_field@@Base+0x38>
   3f054:	ldr	r0, [r4, #20]
   3f058:	add	r3, r0, #1
   3f05c:	str	r3, [r4, #20]
   3f060:	mov	r3, #44	; 0x2c
   3f064:	strb	r3, [r0]
   3f068:	mov	r0, r4
   3f06c:	bl	3d354 <flatcc_json_printer_string_field@@Base+0x90>
   3f070:	ldr	r1, [r4, #20]
   3f074:	cmn	r5, #1
   3f078:	lsr	r6, r5, #31
   3f07c:	movle	r0, #45	; 0x2d
   3f080:	rsble	r5, r5, #0
   3f084:	strble	r0, [r1], #1
   3f088:	mov	r0, r5
   3f08c:	bl	3c65c <flatcc_json_printer_uint32@@Base+0x2c>
   3f090:	ldr	r1, [r4, #20]
   3f094:	add	r0, r0, r6
   3f098:	add	r0, r1, r0
   3f09c:	str	r0, [r4, #20]
   3f0a0:	pop	{r4, r5, r6, sl, fp, pc}

0003f0a4 <flatcc_json_printer_int64_struct_field@@Base>:
   3f0a4:	push	{r4, r5, r6, r7, fp, lr}
   3f0a8:	add	fp, sp, #16
   3f0ac:	ldr	r7, [r2, r3]!
   3f0b0:	mov	r5, r1
   3f0b4:	ldr	r1, [fp, #8]
   3f0b8:	mov	r4, r0
   3f0bc:	cmp	r5, #0
   3f0c0:	ldr	r6, [r2, #4]
   3f0c4:	ldr	r2, [fp, #12]
   3f0c8:	beq	3f0e0 <flatcc_json_printer_int64_struct_field@@Base+0x3c>
   3f0cc:	ldr	r0, [r4, #20]
   3f0d0:	add	r3, r0, #1
   3f0d4:	str	r3, [r4, #20]
   3f0d8:	mov	r3, #44	; 0x2c
   3f0dc:	strb	r3, [r0]
   3f0e0:	mov	r0, r4
   3f0e4:	bl	3d354 <flatcc_json_printer_string_field@@Base+0x90>
   3f0e8:	ldr	r2, [r4, #20]
   3f0ec:	lsr	r5, r6, #31
   3f0f0:	cmn	r6, #1
   3f0f4:	bgt	3f108 <flatcc_json_printer_int64_struct_field@@Base+0x64>
   3f0f8:	mov	r0, #45	; 0x2d
   3f0fc:	rsbs	r7, r7, #0
   3f100:	strb	r0, [r2], #1
   3f104:	rsc	r6, r6, #0
   3f108:	mov	r0, r7
   3f10c:	mov	r1, r6
   3f110:	bl	3c9b0 <flatcc_json_printer_uint64@@Base+0x30>
   3f114:	ldr	r1, [r4, #20]
   3f118:	add	r0, r0, r5
   3f11c:	add	r0, r1, r0
   3f120:	str	r0, [r4, #20]
   3f124:	pop	{r4, r5, r6, r7, fp, pc}

0003f128 <flatcc_json_printer_bool_struct_field@@Base>:
   3f128:	push	{r4, r5, fp, lr}
   3f12c:	add	fp, sp, #8
   3f130:	mov	ip, r1
   3f134:	ldrb	r5, [r2, r3]
   3f138:	ldr	r2, [fp, #12]
   3f13c:	ldr	r1, [fp, #8]
   3f140:	mov	r4, r0
   3f144:	cmp	ip, #0
   3f148:	beq	3f160 <flatcc_json_printer_bool_struct_field@@Base+0x38>
   3f14c:	ldr	r0, [r4, #20]
   3f150:	add	r3, r0, #1
   3f154:	str	r3, [r4, #20]
   3f158:	mov	r3, #44	; 0x2c
   3f15c:	strb	r3, [r0]
   3f160:	mov	r0, r4
   3f164:	bl	3d354 <flatcc_json_printer_string_field@@Base+0x90>
   3f168:	ldr	r0, [r4, #20]
   3f16c:	cmp	r5, #0
   3f170:	beq	3f19c <flatcc_json_printer_bool_struct_field@@Base+0x74>
   3f174:	mov	r1, #0
   3f178:	strb	r1, [r0, #4]
   3f17c:	movw	r1, #29300	; 0x7274
   3f180:	movt	r1, #25973	; 0x6575
   3f184:	str	r1, [r0]
   3f188:	mov	r0, #4
   3f18c:	ldr	r1, [r4, #20]
   3f190:	add	r0, r1, r0
   3f194:	str	r0, [r4, #20]
   3f198:	pop	{r4, r5, fp, pc}
   3f19c:	mov	r1, #101	; 0x65
   3f1a0:	strh	r1, [r0, #4]
   3f1a4:	movw	r1, #24934	; 0x6166
   3f1a8:	movt	r1, #29548	; 0x736c
   3f1ac:	str	r1, [r0]
   3f1b0:	mov	r0, #5
   3f1b4:	ldr	r1, [r4, #20]
   3f1b8:	add	r0, r1, r0
   3f1bc:	str	r0, [r4, #20]
   3f1c0:	pop	{r4, r5, fp, pc}

0003f1c4 <flatcc_json_printer_float_struct_field@@Base>:
   3f1c4:	push	{r4, sl, fp, lr}
   3f1c8:	add	fp, sp, #8
   3f1cc:	vpush	{d8}
   3f1d0:	mov	r4, r0
   3f1d4:	add	r0, r2, r3
   3f1d8:	mov	ip, r1
   3f1dc:	ldr	r2, [fp, #12]
   3f1e0:	ldr	r1, [fp, #8]
   3f1e4:	vldr	s16, [r0]
   3f1e8:	cmp	ip, #0
   3f1ec:	beq	3f204 <flatcc_json_printer_float_struct_field@@Base+0x40>
   3f1f0:	ldr	r0, [r4, #20]
   3f1f4:	add	r3, r0, #1
   3f1f8:	str	r3, [r4, #20]
   3f1fc:	mov	r3, #44	; 0x2c
   3f200:	strb	r3, [r0]
   3f204:	mov	r0, r4
   3f208:	bl	3d354 <flatcc_json_printer_string_field@@Base+0x90>
   3f20c:	vcvt.f64.f32	d0, s16
   3f210:	ldr	r0, [r4, #20]
   3f214:	bl	3af80 <flatcc_json_printer_fmt_float@@Base+0x8>
   3f218:	ldr	r1, [r4, #20]
   3f21c:	add	r0, r1, r0
   3f220:	str	r0, [r4, #20]
   3f224:	vpop	{d8}
   3f228:	pop	{r4, sl, fp, pc}

0003f22c <flatcc_json_printer_double_struct_field@@Base>:
   3f22c:	push	{r4, sl, fp, lr}
   3f230:	add	fp, sp, #8
   3f234:	vpush	{d8}
   3f238:	mov	r4, r0
   3f23c:	add	r0, r2, r3
   3f240:	mov	ip, r1
   3f244:	ldr	r2, [fp, #12]
   3f248:	ldr	r1, [fp, #8]
   3f24c:	vldr	d8, [r0]
   3f250:	cmp	ip, #0
   3f254:	beq	3f26c <flatcc_json_printer_double_struct_field@@Base+0x40>
   3f258:	ldr	r0, [r4, #20]
   3f25c:	add	r3, r0, #1
   3f260:	str	r3, [r4, #20]
   3f264:	mov	r3, #44	; 0x2c
   3f268:	strb	r3, [r0]
   3f26c:	mov	r0, r4
   3f270:	bl	3d354 <flatcc_json_printer_string_field@@Base+0x90>
   3f274:	ldr	r0, [r4, #20]
   3f278:	vorr	d0, d8, d8
   3f27c:	bl	3af80 <flatcc_json_printer_fmt_float@@Base+0x8>
   3f280:	ldr	r1, [r4, #20]
   3f284:	add	r0, r1, r0
   3f288:	str	r0, [r4, #20]
   3f28c:	vpop	{d8}
   3f290:	pop	{r4, sl, fp, pc}

0003f294 <flatcc_json_printer_uint8_enum_struct_field@@Base>:
   3f294:	push	{r4, r5, r6, r7, fp, lr}
   3f298:	add	fp, sp, #16
   3f29c:	add	r7, fp, #8
   3f2a0:	mov	r5, r1
   3f2a4:	ldrb	r6, [r2, r3]
   3f2a8:	mov	r4, r0
   3f2ac:	ldm	r7, {r1, r2, r7}
   3f2b0:	cmp	r5, #0
   3f2b4:	beq	3f2cc <flatcc_json_printer_uint8_enum_struct_field@@Base+0x38>
   3f2b8:	ldr	r0, [r4, #20]
   3f2bc:	add	r3, r0, #1
   3f2c0:	str	r3, [r4, #20]
   3f2c4:	mov	r3, #44	; 0x2c
   3f2c8:	strb	r3, [r0]
   3f2cc:	mov	r0, r4
   3f2d0:	bl	3d354 <flatcc_json_printer_string_field@@Base+0x90>
   3f2d4:	ldrb	r0, [r4, #27]
   3f2d8:	cmp	r0, #0
   3f2dc:	beq	3f344 <flatcc_json_printer_uint8_enum_struct_field@@Base+0xb0>
   3f2e0:	ldr	r0, [r4, #20]
   3f2e4:	mov	r1, #0
   3f2e8:	cmp	r6, #100	; 0x64
   3f2ec:	bcc	3f358 <flatcc_json_printer_uint8_enum_struct_field@@Base+0xc4>
   3f2f0:	strb	r1, [r0, #3]
   3f2f4:	movw	r1, #34079	; 0x851f
   3f2f8:	movt	r1, #20971	; 0x51eb
   3f2fc:	umull	r1, r2, r6, r1
   3f300:	mov	r1, #48	; 0x30
   3f304:	orr	r1, r1, r2, lsr #5
   3f308:	strb	r1, [r0]
   3f30c:	lsr	r1, r2, #5
   3f310:	mov	r2, #100	; 0x64
   3f314:	mls	r1, r1, r2, r6
   3f318:	movw	r2, #60904	; 0xede8
   3f31c:	movt	r2, #4
   3f320:	uxtb	r1, r1
   3f324:	add	r1, r2, r1, lsl #1
   3f328:	ldrh	r1, [r1]
   3f32c:	strh	r1, [r0, #1]
   3f330:	mov	r0, #3
   3f334:	ldr	r1, [r4, #20]
   3f338:	add	r0, r1, r0
   3f33c:	str	r0, [r4, #20]
   3f340:	pop	{r4, r5, r6, r7, fp, pc}
   3f344:	mov	r0, r4
   3f348:	mov	r1, r6
   3f34c:	mov	r2, r7
   3f350:	pop	{r4, r5, r6, r7, fp, lr}
   3f354:	bx	r2
   3f358:	cmp	r6, #10
   3f35c:	bcc	3f3a4 <flatcc_json_printer_uint8_enum_struct_field@@Base+0x110>
   3f360:	strb	r1, [r0, #2]
   3f364:	movw	r1, #34079	; 0x851f
   3f368:	movt	r1, #20971	; 0x51eb
   3f36c:	umull	r1, r2, r6, r1
   3f370:	lsr	r1, r2, #5
   3f374:	mov	r2, #100	; 0x64
   3f378:	mls	r1, r1, r2, r6
   3f37c:	movw	r2, #60904	; 0xede8
   3f380:	movt	r2, #4
   3f384:	add	r1, r2, r1, lsl #1
   3f388:	ldrh	r1, [r1]
   3f38c:	strh	r1, [r0]
   3f390:	mov	r0, #2
   3f394:	ldr	r1, [r4, #20]
   3f398:	add	r0, r1, r0
   3f39c:	str	r0, [r4, #20]
   3f3a0:	pop	{r4, r5, r6, r7, fp, pc}
   3f3a4:	strb	r1, [r0, #1]
   3f3a8:	add	r1, r6, #48	; 0x30
   3f3ac:	strb	r1, [r0]
   3f3b0:	mov	r0, #1
   3f3b4:	ldr	r1, [r4, #20]
   3f3b8:	add	r0, r1, r0
   3f3bc:	str	r0, [r4, #20]
   3f3c0:	pop	{r4, r5, r6, r7, fp, pc}

0003f3c4 <flatcc_json_printer_uint16_enum_struct_field@@Base>:
   3f3c4:	push	{r4, r5, r6, r7, fp, lr}
   3f3c8:	add	fp, sp, #16
   3f3cc:	mov	r4, r0
   3f3d0:	add	r0, r2, r3
   3f3d4:	add	r7, fp, #8
   3f3d8:	mov	r5, r1
   3f3dc:	ldrh	r6, [r0]
   3f3e0:	ldm	r7, {r1, r2, r7}
   3f3e4:	cmp	r5, #0
   3f3e8:	beq	3f400 <flatcc_json_printer_uint16_enum_struct_field@@Base+0x3c>
   3f3ec:	ldr	r0, [r4, #20]
   3f3f0:	add	r3, r0, #1
   3f3f4:	str	r3, [r4, #20]
   3f3f8:	mov	r3, #44	; 0x2c
   3f3fc:	strb	r3, [r0]
   3f400:	mov	r0, r4
   3f404:	bl	3d354 <flatcc_json_printer_string_field@@Base+0x90>
   3f408:	ldrb	r0, [r4, #27]
   3f40c:	cmp	r0, #0
   3f410:	beq	3f430 <flatcc_json_printer_uint16_enum_struct_field@@Base+0x6c>
   3f414:	ldr	r1, [r4, #20]
   3f418:	mov	r0, r6
   3f41c:	bl	3c4ac <flatcc_json_printer_uint16@@Base+0x2c>
   3f420:	ldr	r1, [r4, #20]
   3f424:	add	r0, r1, r0
   3f428:	str	r0, [r4, #20]
   3f42c:	pop	{r4, r5, r6, r7, fp, pc}
   3f430:	mov	r0, r4
   3f434:	mov	r1, r6
   3f438:	mov	r2, r7
   3f43c:	pop	{r4, r5, r6, r7, fp, lr}
   3f440:	bx	r2

0003f444 <flatcc_json_printer_uint32_enum_struct_field@@Base>:
   3f444:	push	{r4, r5, r6, r7, fp, lr}
   3f448:	add	fp, sp, #16
   3f44c:	add	r7, fp, #8
   3f450:	mov	r5, r1
   3f454:	ldr	r6, [r2, r3]
   3f458:	mov	r4, r0
   3f45c:	ldm	r7, {r1, r2, r7}
   3f460:	cmp	r5, #0
   3f464:	beq	3f47c <flatcc_json_printer_uint32_enum_struct_field@@Base+0x38>
   3f468:	ldr	r0, [r4, #20]
   3f46c:	add	r3, r0, #1
   3f470:	str	r3, [r4, #20]
   3f474:	mov	r3, #44	; 0x2c
   3f478:	strb	r3, [r0]
   3f47c:	mov	r0, r4
   3f480:	bl	3d354 <flatcc_json_printer_string_field@@Base+0x90>
   3f484:	ldrb	r0, [r4, #27]
   3f488:	cmp	r0, #0
   3f48c:	beq	3f4ac <flatcc_json_printer_uint32_enum_struct_field@@Base+0x68>
   3f490:	ldr	r1, [r4, #20]
   3f494:	mov	r0, r6
   3f498:	bl	3c65c <flatcc_json_printer_uint32@@Base+0x2c>
   3f49c:	ldr	r1, [r4, #20]
   3f4a0:	add	r0, r1, r0
   3f4a4:	str	r0, [r4, #20]
   3f4a8:	pop	{r4, r5, r6, r7, fp, pc}
   3f4ac:	mov	r0, r4
   3f4b0:	mov	r1, r6
   3f4b4:	mov	r2, r7
   3f4b8:	pop	{r4, r5, r6, r7, fp, lr}
   3f4bc:	bx	r2

0003f4c0 <flatcc_json_printer_uint64_enum_struct_field@@Base>:
   3f4c0:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   3f4c4:	add	fp, sp, #24
   3f4c8:	ldr	r6, [r2, r3]!
   3f4cc:	add	r8, fp, #8
   3f4d0:	mov	r5, r1
   3f4d4:	mov	r4, r0
   3f4d8:	cmp	r5, #0
   3f4dc:	ldr	r7, [r2, #4]
   3f4e0:	ldm	r8, {r1, r2, r8}
   3f4e4:	beq	3f4fc <flatcc_json_printer_uint64_enum_struct_field@@Base+0x3c>
   3f4e8:	ldr	r0, [r4, #20]
   3f4ec:	add	r3, r0, #1
   3f4f0:	str	r3, [r4, #20]
   3f4f4:	mov	r3, #44	; 0x2c
   3f4f8:	strb	r3, [r0]
   3f4fc:	mov	r0, r4
   3f500:	bl	3d354 <flatcc_json_printer_string_field@@Base+0x90>
   3f504:	ldrb	r0, [r4, #27]
   3f508:	cmp	r0, #0
   3f50c:	beq	3f530 <flatcc_json_printer_uint64_enum_struct_field@@Base+0x70>
   3f510:	ldr	r2, [r4, #20]
   3f514:	mov	r0, r6
   3f518:	mov	r1, r7
   3f51c:	bl	3c9b0 <flatcc_json_printer_uint64@@Base+0x30>
   3f520:	ldr	r1, [r4, #20]
   3f524:	add	r0, r1, r0
   3f528:	str	r0, [r4, #20]
   3f52c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   3f530:	mov	r0, r4
   3f534:	mov	r2, r6
   3f538:	mov	r3, r7
   3f53c:	mov	r1, r8
   3f540:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   3f544:	bx	r1

0003f548 <flatcc_json_printer_int8_enum_struct_field@@Base>:
   3f548:	push	{r4, r5, r6, r7, fp, lr}
   3f54c:	add	fp, sp, #16
   3f550:	mov	r4, r0
   3f554:	add	r0, r2, r3
   3f558:	add	r7, fp, #8
   3f55c:	mov	r5, r1
   3f560:	ldrsb	r6, [r0]
   3f564:	ldm	r7, {r1, r2, r7}
   3f568:	cmp	r5, #0
   3f56c:	beq	3f584 <flatcc_json_printer_int8_enum_struct_field@@Base+0x3c>
   3f570:	ldr	r0, [r4, #20]
   3f574:	add	r3, r0, #1
   3f578:	str	r3, [r4, #20]
   3f57c:	mov	r3, #44	; 0x2c
   3f580:	strb	r3, [r0]
   3f584:	mov	r0, r4
   3f588:	bl	3d354 <flatcc_json_printer_string_field@@Base+0x90>
   3f58c:	ldrb	r0, [r4, #27]
   3f590:	cmp	r0, #0
   3f594:	beq	3f60c <flatcc_json_printer_int8_enum_struct_field@@Base+0xc4>
   3f598:	ldr	r0, [r4, #20]
   3f59c:	cmn	r6, #1
   3f5a0:	uxtb	r1, r6
   3f5a4:	movle	r2, #45	; 0x2d
   3f5a8:	rsble	r6, r6, #0
   3f5ac:	lsr	r1, r1, #7
   3f5b0:	strble	r2, [r0], #1
   3f5b4:	uxtb	r2, r6
   3f5b8:	cmp	r2, #100	; 0x64
   3f5bc:	bcc	3f620 <flatcc_json_printer_int8_enum_struct_field@@Base+0xd8>
   3f5c0:	mov	r3, #0
   3f5c4:	strb	r3, [r0, #3]
   3f5c8:	movw	r3, #34079	; 0x851f
   3f5cc:	movt	r3, #20971	; 0x51eb
   3f5d0:	umull	r3, r6, r2, r3
   3f5d4:	mov	r3, #48	; 0x30
   3f5d8:	orr	r3, r3, r6, lsr #5
   3f5dc:	strb	r3, [r0]
   3f5e0:	lsr	r3, r6, #5
   3f5e4:	mov	r6, #100	; 0x64
   3f5e8:	mls	r2, r3, r6, r2
   3f5ec:	movw	r3, #60904	; 0xede8
   3f5f0:	movt	r3, #4
   3f5f4:	uxtb	r2, r2
   3f5f8:	add	r2, r3, r2, lsl #1
   3f5fc:	ldrh	r2, [r2]
   3f600:	strh	r2, [r0, #1]
   3f604:	mov	r0, #3
   3f608:	b	3f678 <flatcc_json_printer_int8_enum_struct_field@@Base+0x130>
   3f60c:	mov	r0, r4
   3f610:	mov	r1, r6
   3f614:	mov	r2, r7
   3f618:	pop	{r4, r5, r6, r7, fp, lr}
   3f61c:	bx	r2
   3f620:	cmp	r2, #10
   3f624:	bcc	3f664 <flatcc_json_printer_int8_enum_struct_field@@Base+0x11c>
   3f628:	mov	r3, #0
   3f62c:	strb	r3, [r0, #2]
   3f630:	movw	r3, #34079	; 0x851f
   3f634:	movt	r3, #20971	; 0x51eb
   3f638:	umull	r3, r6, r2, r3
   3f63c:	lsr	r3, r6, #5
   3f640:	mov	r6, #100	; 0x64
   3f644:	mls	r2, r3, r6, r2
   3f648:	movw	r3, #60904	; 0xede8
   3f64c:	movt	r3, #4
   3f650:	add	r2, r3, r2, lsl #1
   3f654:	ldrh	r2, [r2]
   3f658:	strh	r2, [r0]
   3f65c:	mov	r0, #2
   3f660:	b	3f678 <flatcc_json_printer_int8_enum_struct_field@@Base+0x130>
   3f664:	mov	r2, #0
   3f668:	strb	r2, [r0, #1]
   3f66c:	add	r2, r6, #48	; 0x30
   3f670:	strb	r2, [r0]
   3f674:	mov	r0, #1
   3f678:	add	r0, r0, r1
   3f67c:	ldr	r1, [r4, #20]
   3f680:	add	r0, r1, r0
   3f684:	str	r0, [r4, #20]
   3f688:	pop	{r4, r5, r6, r7, fp, pc}

0003f68c <flatcc_json_printer_int16_enum_struct_field@@Base>:
   3f68c:	push	{r4, r5, r6, r7, fp, lr}
   3f690:	add	fp, sp, #16
   3f694:	mov	r4, r0
   3f698:	add	r0, r2, r3
   3f69c:	add	r7, fp, #8
   3f6a0:	mov	r5, r1
   3f6a4:	ldrsh	r6, [r0]
   3f6a8:	ldm	r7, {r1, r2, r7}
   3f6ac:	cmp	r5, #0
   3f6b0:	beq	3f6c8 <flatcc_json_printer_int16_enum_struct_field@@Base+0x3c>
   3f6b4:	ldr	r0, [r4, #20]
   3f6b8:	add	r3, r0, #1
   3f6bc:	str	r3, [r4, #20]
   3f6c0:	mov	r3, #44	; 0x2c
   3f6c4:	strb	r3, [r0]
   3f6c8:	mov	r0, r4
   3f6cc:	bl	3d354 <flatcc_json_printer_string_field@@Base+0x90>
   3f6d0:	ldrb	r0, [r4, #27]
   3f6d4:	cmp	r0, #0
   3f6d8:	beq	3f714 <flatcc_json_printer_int16_enum_struct_field@@Base+0x88>
   3f6dc:	ldr	r1, [r4, #20]
   3f6e0:	uxth	r0, r6
   3f6e4:	cmn	r6, #1
   3f6e8:	rsble	r6, r6, #0
   3f6ec:	lsr	r5, r0, #15
   3f6f0:	movle	r0, #45	; 0x2d
   3f6f4:	strble	r0, [r1], #1
   3f6f8:	uxth	r0, r6
   3f6fc:	bl	3c4ac <flatcc_json_printer_uint16@@Base+0x2c>
   3f700:	ldr	r1, [r4, #20]
   3f704:	add	r0, r0, r5
   3f708:	add	r0, r1, r0
   3f70c:	str	r0, [r4, #20]
   3f710:	pop	{r4, r5, r6, r7, fp, pc}
   3f714:	mov	r0, r4
   3f718:	mov	r1, r6
   3f71c:	mov	r2, r7
   3f720:	pop	{r4, r5, r6, r7, fp, lr}
   3f724:	bx	r2

0003f728 <flatcc_json_printer_int32_enum_struct_field@@Base>:
   3f728:	push	{r4, r5, r6, r7, fp, lr}
   3f72c:	add	fp, sp, #16
   3f730:	add	r7, fp, #8
   3f734:	mov	r5, r1
   3f738:	ldr	r6, [r2, r3]
   3f73c:	mov	r4, r0
   3f740:	ldm	r7, {r1, r2, r7}
   3f744:	cmp	r5, #0
   3f748:	beq	3f760 <flatcc_json_printer_int32_enum_struct_field@@Base+0x38>
   3f74c:	ldr	r0, [r4, #20]
   3f750:	add	r3, r0, #1
   3f754:	str	r3, [r4, #20]
   3f758:	mov	r3, #44	; 0x2c
   3f75c:	strb	r3, [r0]
   3f760:	mov	r0, r4
   3f764:	bl	3d354 <flatcc_json_printer_string_field@@Base+0x90>
   3f768:	ldrb	r0, [r4, #27]
   3f76c:	cmp	r0, #0
   3f770:	beq	3f7a8 <flatcc_json_printer_int32_enum_struct_field@@Base+0x80>
   3f774:	ldr	r1, [r4, #20]
   3f778:	cmn	r6, #1
   3f77c:	lsr	r5, r6, #31
   3f780:	movle	r0, #45	; 0x2d
   3f784:	rsble	r6, r6, #0
   3f788:	strble	r0, [r1], #1
   3f78c:	mov	r0, r6
   3f790:	bl	3c65c <flatcc_json_printer_uint32@@Base+0x2c>
   3f794:	ldr	r1, [r4, #20]
   3f798:	add	r0, r0, r5
   3f79c:	add	r0, r1, r0
   3f7a0:	str	r0, [r4, #20]
   3f7a4:	pop	{r4, r5, r6, r7, fp, pc}
   3f7a8:	mov	r0, r4
   3f7ac:	mov	r1, r6
   3f7b0:	mov	r2, r7
   3f7b4:	pop	{r4, r5, r6, r7, fp, lr}
   3f7b8:	bx	r2

0003f7bc <flatcc_json_printer_int64_enum_struct_field@@Base>:
   3f7bc:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   3f7c0:	add	fp, sp, #24
   3f7c4:	ldr	r7, [r2, r3]!
   3f7c8:	add	r8, fp, #8
   3f7cc:	mov	r6, r1
   3f7d0:	mov	r4, r0
   3f7d4:	cmp	r6, #0
   3f7d8:	ldr	r5, [r2, #4]
   3f7dc:	ldm	r8, {r1, r2, r8}
   3f7e0:	beq	3f7f8 <flatcc_json_printer_int64_enum_struct_field@@Base+0x3c>
   3f7e4:	ldr	r0, [r4, #20]
   3f7e8:	add	r3, r0, #1
   3f7ec:	str	r3, [r4, #20]
   3f7f0:	mov	r3, #44	; 0x2c
   3f7f4:	strb	r3, [r0]
   3f7f8:	mov	r0, r4
   3f7fc:	bl	3d354 <flatcc_json_printer_string_field@@Base+0x90>
   3f800:	ldrb	r0, [r4, #27]
   3f804:	cmp	r0, #0
   3f808:	beq	3f84c <flatcc_json_printer_int64_enum_struct_field@@Base+0x90>
   3f80c:	ldr	r2, [r4, #20]
   3f810:	lsr	r6, r5, #31
   3f814:	cmn	r5, #1
   3f818:	bgt	3f82c <flatcc_json_printer_int64_enum_struct_field@@Base+0x70>
   3f81c:	mov	r0, #45	; 0x2d
   3f820:	rsbs	r7, r7, #0
   3f824:	strb	r0, [r2], #1
   3f828:	rsc	r5, r5, #0
   3f82c:	mov	r0, r7
   3f830:	mov	r1, r5
   3f834:	bl	3c9b0 <flatcc_json_printer_uint64@@Base+0x30>
   3f838:	ldr	r1, [r4, #20]
   3f83c:	add	r0, r0, r6
   3f840:	add	r0, r1, r0
   3f844:	str	r0, [r4, #20]
   3f848:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   3f84c:	mov	r0, r4
   3f850:	mov	r2, r7
   3f854:	mov	r3, r5
   3f858:	mov	r1, r8
   3f85c:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   3f860:	bx	r1

0003f864 <flatcc_json_printer_bool_enum_struct_field@@Base>:
   3f864:	push	{r4, r5, r6, r7, fp, lr}
   3f868:	add	fp, sp, #16
   3f86c:	add	r7, fp, #8
   3f870:	mov	r5, r1
   3f874:	ldrb	r6, [r2, r3]
   3f878:	mov	r4, r0
   3f87c:	ldm	r7, {r1, r2, r7}
   3f880:	cmp	r5, #0
   3f884:	beq	3f89c <flatcc_json_printer_bool_enum_struct_field@@Base+0x38>
   3f888:	ldr	r0, [r4, #20]
   3f88c:	add	r3, r0, #1
   3f890:	str	r3, [r4, #20]
   3f894:	mov	r3, #44	; 0x2c
   3f898:	strb	r3, [r0]
   3f89c:	mov	r0, r4
   3f8a0:	bl	3d354 <flatcc_json_printer_string_field@@Base+0x90>
   3f8a4:	ldrb	r0, [r4, #27]
   3f8a8:	cmp	r0, #0
   3f8ac:	beq	3f8e4 <flatcc_json_printer_bool_enum_struct_field@@Base+0x80>
   3f8b0:	ldr	r0, [r4, #20]
   3f8b4:	cmp	r6, #0
   3f8b8:	beq	3f8f8 <flatcc_json_printer_bool_enum_struct_field@@Base+0x94>
   3f8bc:	mov	r1, #0
   3f8c0:	strb	r1, [r0, #4]
   3f8c4:	movw	r1, #29300	; 0x7274
   3f8c8:	movt	r1, #25973	; 0x6575
   3f8cc:	str	r1, [r0]
   3f8d0:	mov	r0, #4
   3f8d4:	ldr	r1, [r4, #20]
   3f8d8:	add	r0, r1, r0
   3f8dc:	str	r0, [r4, #20]
   3f8e0:	pop	{r4, r5, r6, r7, fp, pc}
   3f8e4:	mov	r0, r4
   3f8e8:	mov	r1, r6
   3f8ec:	mov	r2, r7
   3f8f0:	pop	{r4, r5, r6, r7, fp, lr}
   3f8f4:	bx	r2
   3f8f8:	mov	r1, #101	; 0x65
   3f8fc:	strh	r1, [r0, #4]
   3f900:	movw	r1, #24934	; 0x6166
   3f904:	movt	r1, #29548	; 0x736c
   3f908:	str	r1, [r0]
   3f90c:	mov	r0, #5
   3f910:	ldr	r1, [r4, #20]
   3f914:	add	r0, r1, r0
   3f918:	str	r0, [r4, #20]
   3f91c:	pop	{r4, r5, r6, r7, fp, pc}

0003f920 <flatcc_json_printer_utype_vector_field@@Base>:
   3f920:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3f924:	add	fp, sp, #28
   3f928:	sub	sp, sp, #4
   3f92c:	mov	r4, r0
   3f930:	mov	r0, #4
   3f934:	add	r0, r0, r2, lsl #1
   3f938:	ldr	r2, [r1, #8]
   3f93c:	cmp	r0, r2
   3f940:	bge	3f960 <flatcc_json_printer_utype_vector_field@@Base+0x40>
   3f944:	ldr	r2, [r1, #4]
   3f948:	add	r0, r2, r0
   3f94c:	ldrh	r0, [r0]
   3f950:	cmp	r0, #0
   3f954:	ldrne	r2, [r1]
   3f958:	addsne	r9, r2, r0
   3f95c:	bne	3f968 <flatcc_json_printer_utype_vector_field@@Base+0x48>
   3f960:	sub	sp, fp, #28
   3f964:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3f968:	ldr	r0, [r1, #16]
   3f96c:	ldr	r2, [fp, #8]
   3f970:	add	r7, r0, #1
   3f974:	cmp	r0, #0
   3f978:	str	r7, [r1, #16]
   3f97c:	beq	3f994 <flatcc_json_printer_utype_vector_field@@Base+0x74>
   3f980:	ldr	r0, [r4, #20]
   3f984:	add	r1, r0, #1
   3f988:	str	r1, [r4, #20]
   3f98c:	mov	r1, #44	; 0x2c
   3f990:	strb	r1, [r0]
   3f994:	ldr	r0, [r9]
   3f998:	mov	r1, r3
   3f99c:	ldr	r8, [r9, r0]!
   3f9a0:	mov	r0, r4
   3f9a4:	bl	3d354 <flatcc_json_printer_string_field@@Base+0x90>
   3f9a8:	ldr	r1, [r4, #32]
   3f9ac:	ldr	r0, [r4, #20]
   3f9b0:	cmp	r8, #0
   3f9b4:	add	r1, r1, #1
   3f9b8:	str	r1, [r4, #32]
   3f9bc:	add	r1, r0, #1
   3f9c0:	str	r1, [r4, #20]
   3f9c4:	mov	r1, #91	; 0x5b
   3f9c8:	strb	r1, [r0]
   3f9cc:	beq	3fd5c <flatcc_json_printer_utype_vector_field@@Base+0x43c>
   3f9d0:	ldrb	r1, [r4, #25]
   3f9d4:	ldr	r0, [r4, #20]
   3f9d8:	cmp	r1, #0
   3f9dc:	beq	3faa8 <flatcc_json_printer_utype_vector_field@@Base+0x188>
   3f9e0:	add	r1, r0, #1
   3f9e4:	str	r1, [r4, #20]
   3f9e8:	mov	r1, #10
   3f9ec:	strb	r1, [r0]
   3f9f0:	ldr	r0, [r4, #20]
   3f9f4:	ldrb	r2, [r4, #25]
   3f9f8:	ldr	r3, [r4, #32]
   3f9fc:	ldr	r1, [r4, #16]
   3fa00:	mla	r7, r3, r2, r0
   3fa04:	mul	r5, r3, r2
   3fa08:	cmp	r7, r1
   3fa0c:	bls	3fa7c <flatcc_json_printer_utype_vector_field@@Base+0x15c>
   3fa10:	cmp	r0, r1
   3fa14:	bcc	3fa30 <flatcc_json_printer_utype_vector_field@@Base+0x110>
   3fa18:	ldr	r2, [r4, #44]	; 0x2c
   3fa1c:	mov	r0, r4
   3fa20:	mov	r1, #0
   3fa24:	blx	r2
   3fa28:	ldr	r1, [r4, #16]
   3fa2c:	ldr	r0, [r4, #20]
   3fa30:	sub	r6, r1, r0
   3fa34:	cmp	r6, r5
   3fa38:	bcs	3fa7c <flatcc_json_printer_utype_vector_field@@Base+0x15c>
   3fa3c:	mov	r1, #32
   3fa40:	mov	r2, r6
   3fa44:	bl	14eec <memset@plt>
   3fa48:	ldr	r0, [r4, #20]
   3fa4c:	ldr	r2, [r4, #44]	; 0x2c
   3fa50:	mov	r1, #0
   3fa54:	add	r0, r0, r6
   3fa58:	str	r0, [r4, #20]
   3fa5c:	mov	r0, r4
   3fa60:	blx	r2
   3fa64:	ldr	r1, [r4, #16]
   3fa68:	ldr	r0, [r4, #20]
   3fa6c:	sub	r5, r5, r6
   3fa70:	sub	r6, r1, r0
   3fa74:	cmp	r5, r6
   3fa78:	bhi	3fa3c <flatcc_json_printer_utype_vector_field@@Base+0x11c>
   3fa7c:	mov	r1, #32
   3fa80:	mov	r2, r5
   3fa84:	bl	14eec <memset@plt>
   3fa88:	ldr	r0, [r4, #20]
   3fa8c:	add	r0, r0, r5
   3fa90:	str	r0, [r4, #20]
   3fa94:	ldrb	r1, [r9, #4]
   3fa98:	mov	r2, #0
   3fa9c:	cmp	r1, #100	; 0x64
   3faa0:	bcs	3fad8 <flatcc_json_printer_utype_vector_field@@Base+0x1b8>
   3faa4:	b	3fb20 <flatcc_json_printer_utype_vector_field@@Base+0x200>
   3faa8:	ldr	r1, [r4, #16]
   3faac:	cmp	r0, r1
   3fab0:	bcc	3fac8 <flatcc_json_printer_utype_vector_field@@Base+0x1a8>
   3fab4:	ldr	r2, [r4, #44]	; 0x2c
   3fab8:	mov	r0, r4
   3fabc:	mov	r1, #0
   3fac0:	blx	r2
   3fac4:	ldr	r0, [r4, #20]
   3fac8:	ldrb	r1, [r9, #4]
   3facc:	mov	r2, #0
   3fad0:	cmp	r1, #100	; 0x64
   3fad4:	bcc	3fb20 <flatcc_json_printer_utype_vector_field@@Base+0x200>
   3fad8:	strb	r2, [r0, #3]
   3fadc:	movw	r2, #34079	; 0x851f
   3fae0:	movt	r2, #20971	; 0x51eb
   3fae4:	umull	r2, r3, r1, r2
   3fae8:	mov	r2, #48	; 0x30
   3faec:	orr	r2, r2, r3, lsr #5
   3faf0:	strb	r2, [r0]
   3faf4:	lsr	r2, r3, #5
   3faf8:	mov	r3, #100	; 0x64
   3fafc:	mls	r1, r2, r3, r1
   3fb00:	movw	r2, #60904	; 0xede8
   3fb04:	movt	r2, #4
   3fb08:	uxtb	r1, r1
   3fb0c:	add	r1, r2, r1, lsl #1
   3fb10:	ldrh	r1, [r1]
   3fb14:	strh	r1, [r0, #1]
   3fb18:	mov	r0, #3
   3fb1c:	b	3fb70 <flatcc_json_printer_utype_vector_field@@Base+0x250>
   3fb20:	cmp	r1, #10
   3fb24:	bcc	3fb60 <flatcc_json_printer_utype_vector_field@@Base+0x240>
   3fb28:	strb	r2, [r0, #2]
   3fb2c:	movw	r2, #34079	; 0x851f
   3fb30:	movt	r2, #20971	; 0x51eb
   3fb34:	umull	r2, r3, r1, r2
   3fb38:	lsr	r2, r3, #5
   3fb3c:	mov	r3, #100	; 0x64
   3fb40:	mls	r1, r2, r3, r1
   3fb44:	movw	r2, #60904	; 0xede8
   3fb48:	movt	r2, #4
   3fb4c:	add	r1, r2, r1, lsl #1
   3fb50:	ldrh	r1, [r1]
   3fb54:	strh	r1, [r0]
   3fb58:	mov	r0, #2
   3fb5c:	b	3fb70 <flatcc_json_printer_utype_vector_field@@Base+0x250>
   3fb60:	add	r1, r1, #48	; 0x30
   3fb64:	strb	r2, [r0, #1]
   3fb68:	strb	r1, [r0]
   3fb6c:	mov	r0, #1
   3fb70:	ldr	r1, [r4, #20]
   3fb74:	subs	r8, r8, #1
   3fb78:	add	r0, r1, r0
   3fb7c:	str	r0, [r4, #20]
   3fb80:	beq	3fd5c <flatcc_json_printer_utype_vector_field@@Base+0x43c>
   3fb84:	ldr	r0, [r4, #20]
   3fb88:	add	r7, r9, #5
   3fb8c:	mov	r9, #44	; 0x2c
   3fb90:	mov	sl, #0
   3fb94:	b	3fbf4 <flatcc_json_printer_utype_vector_field@@Base+0x2d4>
   3fb98:	movw	r2, #34079	; 0x851f
   3fb9c:	strb	sl, [r0, #3]
   3fba0:	movt	r2, #20971	; 0x51eb
   3fba4:	umull	r2, r3, r1, r2
   3fba8:	mov	r2, #48	; 0x30
   3fbac:	orr	r2, r2, r3, lsr #5
   3fbb0:	strb	r2, [r0]
   3fbb4:	lsr	r2, r3, #5
   3fbb8:	mov	r3, #100	; 0x64
   3fbbc:	mls	r1, r2, r3, r1
   3fbc0:	movw	r2, #60904	; 0xede8
   3fbc4:	movt	r2, #4
   3fbc8:	uxtb	r1, r1
   3fbcc:	add	r1, r2, r1, lsl #1
   3fbd0:	ldrh	r1, [r1]
   3fbd4:	strh	r1, [r0, #1]
   3fbd8:	mov	r0, #3
   3fbdc:	ldr	r1, [r4, #20]
   3fbe0:	add	r7, r7, #1
   3fbe4:	cmp	r8, #0
   3fbe8:	add	r0, r1, r0
   3fbec:	str	r0, [r4, #20]
   3fbf0:	beq	3fd5c <flatcc_json_printer_utype_vector_field@@Base+0x43c>
   3fbf4:	add	r1, r0, #1
   3fbf8:	str	r1, [r4, #20]
   3fbfc:	strb	r9, [r0]
   3fc00:	ldrb	r1, [r4, #25]
   3fc04:	ldr	r0, [r4, #20]
   3fc08:	cmp	r1, #0
   3fc0c:	beq	3fcd8 <flatcc_json_printer_utype_vector_field@@Base+0x3b8>
   3fc10:	add	r1, r0, #1
   3fc14:	str	r1, [r4, #20]
   3fc18:	mov	r1, #10
   3fc1c:	strb	r1, [r0]
   3fc20:	ldr	r0, [r4, #20]
   3fc24:	ldrb	r2, [r4, #25]
   3fc28:	ldr	r3, [r4, #32]
   3fc2c:	ldr	r1, [r4, #16]
   3fc30:	mla	r6, r3, r2, r0
   3fc34:	mul	r5, r3, r2
   3fc38:	cmp	r6, r1
   3fc3c:	bls	3fcac <flatcc_json_printer_utype_vector_field@@Base+0x38c>
   3fc40:	cmp	r0, r1
   3fc44:	bcc	3fc60 <flatcc_json_printer_utype_vector_field@@Base+0x340>
   3fc48:	ldr	r2, [r4, #44]	; 0x2c
   3fc4c:	mov	r0, r4
   3fc50:	mov	r1, #0
   3fc54:	blx	r2
   3fc58:	ldr	r1, [r4, #16]
   3fc5c:	ldr	r0, [r4, #20]
   3fc60:	sub	r6, r1, r0
   3fc64:	cmp	r6, r5
   3fc68:	bcs	3fcac <flatcc_json_printer_utype_vector_field@@Base+0x38c>
   3fc6c:	mov	r1, #32
   3fc70:	mov	r2, r6
   3fc74:	bl	14eec <memset@plt>
   3fc78:	ldr	r0, [r4, #20]
   3fc7c:	ldr	r2, [r4, #44]	; 0x2c
   3fc80:	mov	r1, #0
   3fc84:	add	r0, r0, r6
   3fc88:	str	r0, [r4, #20]
   3fc8c:	mov	r0, r4
   3fc90:	blx	r2
   3fc94:	ldr	r1, [r4, #16]
   3fc98:	ldr	r0, [r4, #20]
   3fc9c:	sub	r5, r5, r6
   3fca0:	sub	r6, r1, r0
   3fca4:	cmp	r5, r6
   3fca8:	bhi	3fc6c <flatcc_json_printer_utype_vector_field@@Base+0x34c>
   3fcac:	mov	r1, #32
   3fcb0:	mov	r2, r5
   3fcb4:	bl	14eec <memset@plt>
   3fcb8:	ldr	r0, [r4, #20]
   3fcbc:	add	r0, r0, r5
   3fcc0:	str	r0, [r4, #20]
   3fcc4:	ldrb	r1, [r7]
   3fcc8:	sub	r8, r8, #1
   3fccc:	cmp	r1, #100	; 0x64
   3fcd0:	bcs	3fb98 <flatcc_json_printer_utype_vector_field@@Base+0x278>
   3fcd4:	b	3fd08 <flatcc_json_printer_utype_vector_field@@Base+0x3e8>
   3fcd8:	ldr	r1, [r4, #16]
   3fcdc:	cmp	r0, r1
   3fce0:	bcc	3fcf8 <flatcc_json_printer_utype_vector_field@@Base+0x3d8>
   3fce4:	ldr	r2, [r4, #44]	; 0x2c
   3fce8:	mov	r0, r4
   3fcec:	mov	r1, #0
   3fcf0:	blx	r2
   3fcf4:	ldr	r0, [r4, #20]
   3fcf8:	ldrb	r1, [r7]
   3fcfc:	sub	r8, r8, #1
   3fd00:	cmp	r1, #100	; 0x64
   3fd04:	bcs	3fb98 <flatcc_json_printer_utype_vector_field@@Base+0x278>
   3fd08:	cmp	r1, #10
   3fd0c:	bcc	3fd48 <flatcc_json_printer_utype_vector_field@@Base+0x428>
   3fd10:	movw	r2, #34079	; 0x851f
   3fd14:	strb	sl, [r0, #2]
   3fd18:	movt	r2, #20971	; 0x51eb
   3fd1c:	umull	r2, r3, r1, r2
   3fd20:	lsr	r2, r3, #5
   3fd24:	mov	r3, #100	; 0x64
   3fd28:	mls	r1, r2, r3, r1
   3fd2c:	movw	r2, #60904	; 0xede8
   3fd30:	movt	r2, #4
   3fd34:	add	r1, r2, r1, lsl #1
   3fd38:	ldrh	r1, [r1]
   3fd3c:	strh	r1, [r0]
   3fd40:	mov	r0, #2
   3fd44:	b	3fbdc <flatcc_json_printer_utype_vector_field@@Base+0x2bc>
   3fd48:	add	r1, r1, #48	; 0x30
   3fd4c:	strb	sl, [r0, #1]
   3fd50:	strb	r1, [r0]
   3fd54:	mov	r0, #1
   3fd58:	b	3fbdc <flatcc_json_printer_utype_vector_field@@Base+0x2bc>
   3fd5c:	ldrb	r1, [r4, #25]
   3fd60:	ldr	r0, [r4, #20]
   3fd64:	cmp	r1, #0
   3fd68:	beq	3fe28 <flatcc_json_printer_utype_vector_field@@Base+0x508>
   3fd6c:	add	r1, r0, #1
   3fd70:	str	r1, [r4, #20]
   3fd74:	mov	r1, #10
   3fd78:	strb	r1, [r0]
   3fd7c:	ldr	r0, [r4, #32]
   3fd80:	sub	r2, r0, #1
   3fd84:	str	r2, [r4, #32]
   3fd88:	ldrb	r3, [r4, #25]
   3fd8c:	ldr	r0, [r4, #20]
   3fd90:	ldr	r1, [r4, #16]
   3fd94:	mla	r7, r2, r3, r0
   3fd98:	mul	r5, r2, r3
   3fd9c:	cmp	r7, r1
   3fda0:	bls	3fe10 <flatcc_json_printer_utype_vector_field@@Base+0x4f0>
   3fda4:	cmp	r0, r1
   3fda8:	bcc	3fdc4 <flatcc_json_printer_utype_vector_field@@Base+0x4a4>
   3fdac:	ldr	r2, [r4, #44]	; 0x2c
   3fdb0:	mov	r0, r4
   3fdb4:	mov	r1, #0
   3fdb8:	blx	r2
   3fdbc:	ldr	r1, [r4, #16]
   3fdc0:	ldr	r0, [r4, #20]
   3fdc4:	sub	r6, r1, r0
   3fdc8:	cmp	r6, r5
   3fdcc:	bcs	3fe10 <flatcc_json_printer_utype_vector_field@@Base+0x4f0>
   3fdd0:	mov	r1, #32
   3fdd4:	mov	r2, r6
   3fdd8:	bl	14eec <memset@plt>
   3fddc:	ldr	r0, [r4, #20]
   3fde0:	ldr	r2, [r4, #44]	; 0x2c
   3fde4:	mov	r1, #0
   3fde8:	add	r0, r0, r6
   3fdec:	str	r0, [r4, #20]
   3fdf0:	mov	r0, r4
   3fdf4:	blx	r2
   3fdf8:	ldr	r1, [r4, #16]
   3fdfc:	ldr	r0, [r4, #20]
   3fe00:	sub	r5, r5, r6
   3fe04:	sub	r6, r1, r0
   3fe08:	cmp	r5, r6
   3fe0c:	bhi	3fdd0 <flatcc_json_printer_utype_vector_field@@Base+0x4b0>
   3fe10:	mov	r1, #32
   3fe14:	mov	r2, r5
   3fe18:	bl	14eec <memset@plt>
   3fe1c:	ldr	r0, [r4, #20]
   3fe20:	add	r0, r0, r5
   3fe24:	str	r0, [r4, #20]
   3fe28:	add	r1, r0, #1
   3fe2c:	str	r1, [r4, #20]
   3fe30:	mov	r1, #93	; 0x5d
   3fe34:	strb	r1, [r0]
   3fe38:	sub	sp, fp, #28
   3fe3c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0003fe40 <flatcc_json_printer_uint8_vector_field@@Base>:
   3fe40:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   3fe44:	add	fp, sp, #28
   3fe48:	sub	sp, sp, #4
   3fe4c:	mov	r4, r0
   3fe50:	mov	r0, #4
   3fe54:	add	r0, r0, r2, lsl #1
   3fe58:	ldr	r2, [r1, #8]
   3fe5c:	cmp	r0, r2
   3fe60:	bge	3fe80 <flatcc_json_printer_uint8_vector_field@@Base+0x40>
   3fe64:	ldr	r2, [r1, #4]
   3fe68:	add	r0, r2, r0
   3fe6c:	ldrh	r0, [r0]
   3fe70:	cmp	r0, #0
   3fe74:	ldrne	r2, [r1]
   3fe78:	addsne	r9, r2, r0
   3fe7c:	bne	3fe88 <flatcc_json_printer_uint8_vector_field@@Base+0x48>
   3fe80:	sub	sp, fp, #28
   3fe84:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   3fe88:	ldr	r0, [r1, #16]
   3fe8c:	ldr	r2, [fp, #8]
   3fe90:	add	r7, r0, #1
   3fe94:	cmp	r0, #0
   3fe98:	str	r7, [r1, #16]
   3fe9c:	beq	3feb4 <flatcc_json_printer_uint8_vector_field@@Base+0x74>
   3fea0:	ldr	r0, [r4, #20]
   3fea4:	add	r1, r0, #1
   3fea8:	str	r1, [r4, #20]
   3feac:	mov	r1, #44	; 0x2c
   3feb0:	strb	r1, [r0]
   3feb4:	ldr	r0, [r9]
   3feb8:	mov	r1, r3
   3febc:	ldr	r8, [r9, r0]!
   3fec0:	mov	r0, r4
   3fec4:	bl	3d354 <flatcc_json_printer_string_field@@Base+0x90>
   3fec8:	ldr	r1, [r4, #32]
   3fecc:	ldr	r0, [r4, #20]
   3fed0:	cmp	r8, #0
   3fed4:	add	r1, r1, #1
   3fed8:	str	r1, [r4, #32]
   3fedc:	add	r1, r0, #1
   3fee0:	str	r1, [r4, #20]
   3fee4:	mov	r1, #91	; 0x5b
   3fee8:	strb	r1, [r0]
   3feec:	beq	4027c <flatcc_json_printer_uint8_vector_field@@Base+0x43c>
   3fef0:	ldrb	r1, [r4, #25]
   3fef4:	ldr	r0, [r4, #20]
   3fef8:	cmp	r1, #0
   3fefc:	beq	3ffc8 <flatcc_json_printer_uint8_vector_field@@Base+0x188>
   3ff00:	add	r1, r0, #1
   3ff04:	str	r1, [r4, #20]
   3ff08:	mov	r1, #10
   3ff0c:	strb	r1, [r0]
   3ff10:	ldr	r0, [r4, #20]
   3ff14:	ldrb	r2, [r4, #25]
   3ff18:	ldr	r3, [r4, #32]
   3ff1c:	ldr	r1, [r4, #16]
   3ff20:	mla	r7, r3, r2, r0
   3ff24:	mul	r5, r3, r2
   3ff28:	cmp	r7, r1
   3ff2c:	bls	3ff9c <flatcc_json_printer_uint8_vector_field@@Base+0x15c>
   3ff30:	cmp	r0, r1
   3ff34:	bcc	3ff50 <flatcc_json_printer_uint8_vector_field@@Base+0x110>
   3ff38:	ldr	r2, [r4, #44]	; 0x2c
   3ff3c:	mov	r0, r4
   3ff40:	mov	r1, #0
   3ff44:	blx	r2
   3ff48:	ldr	r1, [r4, #16]
   3ff4c:	ldr	r0, [r4, #20]
   3ff50:	sub	r6, r1, r0
   3ff54:	cmp	r6, r5
   3ff58:	bcs	3ff9c <flatcc_json_printer_uint8_vector_field@@Base+0x15c>
   3ff5c:	mov	r1, #32
   3ff60:	mov	r2, r6
   3ff64:	bl	14eec <memset@plt>
   3ff68:	ldr	r0, [r4, #20]
   3ff6c:	ldr	r2, [r4, #44]	; 0x2c
   3ff70:	mov	r1, #0
   3ff74:	add	r0, r0, r6
   3ff78:	str	r0, [r4, #20]
   3ff7c:	mov	r0, r4
   3ff80:	blx	r2
   3ff84:	ldr	r1, [r4, #16]
   3ff88:	ldr	r0, [r4, #20]
   3ff8c:	sub	r5, r5, r6
   3ff90:	sub	r6, r1, r0
   3ff94:	cmp	r5, r6
   3ff98:	bhi	3ff5c <flatcc_json_printer_uint8_vector_field@@Base+0x11c>
   3ff9c:	mov	r1, #32
   3ffa0:	mov	r2, r5
   3ffa4:	bl	14eec <memset@plt>
   3ffa8:	ldr	r0, [r4, #20]
   3ffac:	add	r0, r0, r5
   3ffb0:	str	r0, [r4, #20]
   3ffb4:	ldrb	r1, [r9, #4]
   3ffb8:	mov	r2, #0
   3ffbc:	cmp	r1, #100	; 0x64
   3ffc0:	bcs	3fff8 <flatcc_json_printer_uint8_vector_field@@Base+0x1b8>
   3ffc4:	b	40040 <flatcc_json_printer_uint8_vector_field@@Base+0x200>
   3ffc8:	ldr	r1, [r4, #16]
   3ffcc:	cmp	r0, r1
   3ffd0:	bcc	3ffe8 <flatcc_json_printer_uint8_vector_field@@Base+0x1a8>
   3ffd4:	ldr	r2, [r4, #44]	; 0x2c
   3ffd8:	mov	r0, r4
   3ffdc:	mov	r1, #0
   3ffe0:	blx	r2
   3ffe4:	ldr	r0, [r4, #20]
   3ffe8:	ldrb	r1, [r9, #4]
   3ffec:	mov	r2, #0
   3fff0:	cmp	r1, #100	; 0x64
   3fff4:	bcc	40040 <flatcc_json_printer_uint8_vector_field@@Base+0x200>
   3fff8:	strb	r2, [r0, #3]
   3fffc:	movw	r2, #34079	; 0x851f
   40000:	movt	r2, #20971	; 0x51eb
   40004:	umull	r2, r3, r1, r2
   40008:	mov	r2, #48	; 0x30
   4000c:	orr	r2, r2, r3, lsr #5
   40010:	strb	r2, [r0]
   40014:	lsr	r2, r3, #5
   40018:	mov	r3, #100	; 0x64
   4001c:	mls	r1, r2, r3, r1
   40020:	movw	r2, #60904	; 0xede8
   40024:	movt	r2, #4
   40028:	uxtb	r1, r1
   4002c:	add	r1, r2, r1, lsl #1
   40030:	ldrh	r1, [r1]
   40034:	strh	r1, [r0, #1]
   40038:	mov	r0, #3
   4003c:	b	40090 <flatcc_json_printer_uint8_vector_field@@Base+0x250>
   40040:	cmp	r1, #10
   40044:	bcc	40080 <flatcc_json_printer_uint8_vector_field@@Base+0x240>
   40048:	strb	r2, [r0, #2]
   4004c:	movw	r2, #34079	; 0x851f
   40050:	movt	r2, #20971	; 0x51eb
   40054:	umull	r2, r3, r1, r2
   40058:	lsr	r2, r3, #5
   4005c:	mov	r3, #100	; 0x64
   40060:	mls	r1, r2, r3, r1
   40064:	movw	r2, #60904	; 0xede8
   40068:	movt	r2, #4
   4006c:	add	r1, r2, r1, lsl #1
   40070:	ldrh	r1, [r1]
   40074:	strh	r1, [r0]
   40078:	mov	r0, #2
   4007c:	b	40090 <flatcc_json_printer_uint8_vector_field@@Base+0x250>
   40080:	add	r1, r1, #48	; 0x30
   40084:	strb	r2, [r0, #1]
   40088:	strb	r1, [r0]
   4008c:	mov	r0, #1
   40090:	ldr	r1, [r4, #20]
   40094:	subs	r8, r8, #1
   40098:	add	r0, r1, r0
   4009c:	str	r0, [r4, #20]
   400a0:	beq	4027c <flatcc_json_printer_uint8_vector_field@@Base+0x43c>
   400a4:	ldr	r0, [r4, #20]
   400a8:	add	r7, r9, #5
   400ac:	mov	r9, #44	; 0x2c
   400b0:	mov	sl, #0
   400b4:	b	40114 <flatcc_json_printer_uint8_vector_field@@Base+0x2d4>
   400b8:	movw	r2, #34079	; 0x851f
   400bc:	strb	sl, [r0, #3]
   400c0:	movt	r2, #20971	; 0x51eb
   400c4:	umull	r2, r3, r1, r2
   400c8:	mov	r2, #48	; 0x30
   400cc:	orr	r2, r2, r3, lsr #5
   400d0:	strb	r2, [r0]
   400d4:	lsr	r2, r3, #5
   400d8:	mov	r3, #100	; 0x64
   400dc:	mls	r1, r2, r3, r1
   400e0:	movw	r2, #60904	; 0xede8
   400e4:	movt	r2, #4
   400e8:	uxtb	r1, r1
   400ec:	add	r1, r2, r1, lsl #1
   400f0:	ldrh	r1, [r1]
   400f4:	strh	r1, [r0, #1]
   400f8:	mov	r0, #3
   400fc:	ldr	r1, [r4, #20]
   40100:	add	r7, r7, #1
   40104:	cmp	r8, #0
   40108:	add	r0, r1, r0
   4010c:	str	r0, [r4, #20]
   40110:	beq	4027c <flatcc_json_printer_uint8_vector_field@@Base+0x43c>
   40114:	add	r1, r0, #1
   40118:	str	r1, [r4, #20]
   4011c:	strb	r9, [r0]
   40120:	ldrb	r1, [r4, #25]
   40124:	ldr	r0, [r4, #20]
   40128:	cmp	r1, #0
   4012c:	beq	401f8 <flatcc_json_printer_uint8_vector_field@@Base+0x3b8>
   40130:	add	r1, r0, #1
   40134:	str	r1, [r4, #20]
   40138:	mov	r1, #10
   4013c:	strb	r1, [r0]
   40140:	ldr	r0, [r4, #20]
   40144:	ldrb	r2, [r4, #25]
   40148:	ldr	r3, [r4, #32]
   4014c:	ldr	r1, [r4, #16]
   40150:	mla	r6, r3, r2, r0
   40154:	mul	r5, r3, r2
   40158:	cmp	r6, r1
   4015c:	bls	401cc <flatcc_json_printer_uint8_vector_field@@Base+0x38c>
   40160:	cmp	r0, r1
   40164:	bcc	40180 <flatcc_json_printer_uint8_vector_field@@Base+0x340>
   40168:	ldr	r2, [r4, #44]	; 0x2c
   4016c:	mov	r0, r4
   40170:	mov	r1, #0
   40174:	blx	r2
   40178:	ldr	r1, [r4, #16]
   4017c:	ldr	r0, [r4, #20]
   40180:	sub	r6, r1, r0
   40184:	cmp	r6, r5
   40188:	bcs	401cc <flatcc_json_printer_uint8_vector_field@@Base+0x38c>
   4018c:	mov	r1, #32
   40190:	mov	r2, r6
   40194:	bl	14eec <memset@plt>
   40198:	ldr	r0, [r4, #20]
   4019c:	ldr	r2, [r4, #44]	; 0x2c
   401a0:	mov	r1, #0
   401a4:	add	r0, r0, r6
   401a8:	str	r0, [r4, #20]
   401ac:	mov	r0, r4
   401b0:	blx	r2
   401b4:	ldr	r1, [r4, #16]
   401b8:	ldr	r0, [r4, #20]
   401bc:	sub	r5, r5, r6
   401c0:	sub	r6, r1, r0
   401c4:	cmp	r5, r6
   401c8:	bhi	4018c <flatcc_json_printer_uint8_vector_field@@Base+0x34c>
   401cc:	mov	r1, #32
   401d0:	mov	r2, r5
   401d4:	bl	14eec <memset@plt>
   401d8:	ldr	r0, [r4, #20]
   401dc:	add	r0, r0, r5
   401e0:	str	r0, [r4, #20]
   401e4:	ldrb	r1, [r7]
   401e8:	sub	r8, r8, #1
   401ec:	cmp	r1, #100	; 0x64
   401f0:	bcs	400b8 <flatcc_json_printer_uint8_vector_field@@Base+0x278>
   401f4:	b	40228 <flatcc_json_printer_uint8_vector_field@@Base+0x3e8>
   401f8:	ldr	r1, [r4, #16]
   401fc:	cmp	r0, r1
   40200:	bcc	40218 <flatcc_json_printer_uint8_vector_field@@Base+0x3d8>
   40204:	ldr	r2, [r4, #44]	; 0x2c
   40208:	mov	r0, r4
   4020c:	mov	r1, #0
   40210:	blx	r2
   40214:	ldr	r0, [r4, #20]
   40218:	ldrb	r1, [r7]
   4021c:	sub	r8, r8, #1
   40220:	cmp	r1, #100	; 0x64
   40224:	bcs	400b8 <flatcc_json_printer_uint8_vector_field@@Base+0x278>
   40228:	cmp	r1, #10
   4022c:	bcc	40268 <flatcc_json_printer_uint8_vector_field@@Base+0x428>
   40230:	movw	r2, #34079	; 0x851f
   40234:	strb	sl, [r0, #2]
   40238:	movt	r2, #20971	; 0x51eb
   4023c:	umull	r2, r3, r1, r2
   40240:	lsr	r2, r3, #5
   40244:	mov	r3, #100	; 0x64
   40248:	mls	r1, r2, r3, r1
   4024c:	movw	r2, #60904	; 0xede8
   40250:	movt	r2, #4
   40254:	add	r1, r2, r1, lsl #1
   40258:	ldrh	r1, [r1]
   4025c:	strh	r1, [r0]
   40260:	mov	r0, #2
   40264:	b	400fc <flatcc_json_printer_uint8_vector_field@@Base+0x2bc>
   40268:	add	r1, r1, #48	; 0x30
   4026c:	strb	sl, [r0, #1]
   40270:	strb	r1, [r0]
   40274:	mov	r0, #1
   40278:	b	400fc <flatcc_json_printer_uint8_vector_field@@Base+0x2bc>
   4027c:	ldrb	r1, [r4, #25]
   40280:	ldr	r0, [r4, #20]
   40284:	cmp	r1, #0
   40288:	beq	40348 <flatcc_json_printer_uint8_vector_field@@Base+0x508>
   4028c:	add	r1, r0, #1
   40290:	str	r1, [r4, #20]
   40294:	mov	r1, #10
   40298:	strb	r1, [r0]
   4029c:	ldr	r0, [r4, #32]
   402a0:	sub	r2, r0, #1
   402a4:	str	r2, [r4, #32]
   402a8:	ldrb	r3, [r4, #25]
   402ac:	ldr	r0, [r4, #20]
   402b0:	ldr	r1, [r4, #16]
   402b4:	mla	r7, r2, r3, r0
   402b8:	mul	r5, r2, r3
   402bc:	cmp	r7, r1
   402c0:	bls	40330 <flatcc_json_printer_uint8_vector_field@@Base+0x4f0>
   402c4:	cmp	r0, r1
   402c8:	bcc	402e4 <flatcc_json_printer_uint8_vector_field@@Base+0x4a4>
   402cc:	ldr	r2, [r4, #44]	; 0x2c
   402d0:	mov	r0, r4
   402d4:	mov	r1, #0
   402d8:	blx	r2
   402dc:	ldr	r1, [r4, #16]
   402e0:	ldr	r0, [r4, #20]
   402e4:	sub	r6, r1, r0
   402e8:	cmp	r6, r5
   402ec:	bcs	40330 <flatcc_json_printer_uint8_vector_field@@Base+0x4f0>
   402f0:	mov	r1, #32
   402f4:	mov	r2, r6
   402f8:	bl	14eec <memset@plt>
   402fc:	ldr	r0, [r4, #20]
   40300:	ldr	r2, [r4, #44]	; 0x2c
   40304:	mov	r1, #0
   40308:	add	r0, r0, r6
   4030c:	str	r0, [r4, #20]
   40310:	mov	r0, r4
   40314:	blx	r2
   40318:	ldr	r1, [r4, #16]
   4031c:	ldr	r0, [r4, #20]
   40320:	sub	r5, r5, r6
   40324:	sub	r6, r1, r0
   40328:	cmp	r5, r6
   4032c:	bhi	402f0 <flatcc_json_printer_uint8_vector_field@@Base+0x4b0>
   40330:	mov	r1, #32
   40334:	mov	r2, r5
   40338:	bl	14eec <memset@plt>
   4033c:	ldr	r0, [r4, #20]
   40340:	add	r0, r0, r5
   40344:	str	r0, [r4, #20]
   40348:	add	r1, r0, #1
   4034c:	str	r1, [r4, #20]
   40350:	mov	r1, #93	; 0x5d
   40354:	strb	r1, [r0]
   40358:	sub	sp, fp, #28
   4035c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00040360 <flatcc_json_printer_uint16_vector_field@@Base>:
   40360:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   40364:	add	fp, sp, #28
   40368:	sub	sp, sp, #4
   4036c:	mov	r4, r0
   40370:	mov	r0, #4
   40374:	add	r0, r0, r2, lsl #1
   40378:	ldr	r2, [r1, #8]
   4037c:	cmp	r0, r2
   40380:	bge	403a0 <flatcc_json_printer_uint16_vector_field@@Base+0x40>
   40384:	ldr	r2, [r1, #4]
   40388:	add	r0, r2, r0
   4038c:	ldrh	r0, [r0]
   40390:	cmp	r0, #0
   40394:	ldrne	r2, [r1]
   40398:	addsne	r8, r2, r0
   4039c:	bne	403a8 <flatcc_json_printer_uint16_vector_field@@Base+0x48>
   403a0:	sub	sp, fp, #28
   403a4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   403a8:	ldr	r0, [r1, #16]
   403ac:	ldr	r2, [fp, #8]
   403b0:	add	r7, r0, #1
   403b4:	cmp	r0, #0
   403b8:	str	r7, [r1, #16]
   403bc:	beq	403d4 <flatcc_json_printer_uint16_vector_field@@Base+0x74>
   403c0:	ldr	r0, [r4, #20]
   403c4:	add	r1, r0, #1
   403c8:	str	r1, [r4, #20]
   403cc:	mov	r1, #44	; 0x2c
   403d0:	strb	r1, [r0]
   403d4:	ldr	r0, [r8]
   403d8:	mov	r1, r3
   403dc:	ldr	r7, [r8, r0]!
   403e0:	mov	r0, r4
   403e4:	bl	3d354 <flatcc_json_printer_string_field@@Base+0x90>
   403e8:	ldr	r1, [r4, #32]
   403ec:	ldr	r0, [r4, #20]
   403f0:	cmp	r7, #0
   403f4:	add	r1, r1, #1
   403f8:	str	r1, [r4, #32]
   403fc:	add	r1, r0, #1
   40400:	str	r1, [r4, #20]
   40404:	mov	r1, #91	; 0x5b
   40408:	strb	r1, [r0]
   4040c:	beq	4063c <flatcc_json_printer_uint16_vector_field@@Base+0x2dc>
   40410:	ldrb	r0, [r4, #25]
   40414:	ldr	r1, [r4, #20]
   40418:	cmp	r0, #0
   4041c:	beq	404d8 <flatcc_json_printer_uint16_vector_field@@Base+0x178>
   40420:	add	r0, r1, #1
   40424:	str	r0, [r4, #20]
   40428:	mov	r0, #10
   4042c:	strb	r0, [r1]
   40430:	ldr	r0, [r4, #20]
   40434:	ldrb	r2, [r4, #25]
   40438:	ldr	r3, [r4, #32]
   4043c:	ldr	r1, [r4, #16]
   40440:	mla	r6, r3, r2, r0
   40444:	mul	r5, r3, r2
   40448:	cmp	r6, r1
   4044c:	bls	404bc <flatcc_json_printer_uint16_vector_field@@Base+0x15c>
   40450:	cmp	r0, r1
   40454:	bcc	40470 <flatcc_json_printer_uint16_vector_field@@Base+0x110>
   40458:	ldr	r2, [r4, #44]	; 0x2c
   4045c:	mov	r0, r4
   40460:	mov	r1, #0
   40464:	blx	r2
   40468:	ldr	r1, [r4, #16]
   4046c:	ldr	r0, [r4, #20]
   40470:	sub	r6, r1, r0
   40474:	cmp	r6, r5
   40478:	bcs	404bc <flatcc_json_printer_uint16_vector_field@@Base+0x15c>
   4047c:	mov	r1, #32
   40480:	mov	r2, r6
   40484:	bl	14eec <memset@plt>
   40488:	ldr	r0, [r4, #20]
   4048c:	ldr	r2, [r4, #44]	; 0x2c
   40490:	mov	r1, #0
   40494:	add	r0, r0, r6
   40498:	str	r0, [r4, #20]
   4049c:	mov	r0, r4
   404a0:	blx	r2
   404a4:	ldr	r1, [r4, #16]
   404a8:	ldr	r0, [r4, #20]
   404ac:	sub	r5, r5, r6
   404b0:	sub	r6, r1, r0
   404b4:	cmp	r5, r6
   404b8:	bhi	4047c <flatcc_json_printer_uint16_vector_field@@Base+0x11c>
   404bc:	mov	r1, #32
   404c0:	mov	r2, r5
   404c4:	bl	14eec <memset@plt>
   404c8:	ldr	r0, [r4, #20]
   404cc:	add	r1, r0, r5
   404d0:	str	r1, [r4, #20]
   404d4:	b	404f8 <flatcc_json_printer_uint16_vector_field@@Base+0x198>
   404d8:	ldr	r0, [r4, #16]
   404dc:	cmp	r1, r0
   404e0:	bcc	404f8 <flatcc_json_printer_uint16_vector_field@@Base+0x198>
   404e4:	ldr	r2, [r4, #44]	; 0x2c
   404e8:	mov	r0, r4
   404ec:	mov	r1, #0
   404f0:	blx	r2
   404f4:	ldr	r1, [r4, #20]
   404f8:	ldrh	r0, [r8, #4]
   404fc:	bl	3c4ac <flatcc_json_printer_uint16@@Base+0x2c>
   40500:	ldr	r1, [r4, #20]
   40504:	subs	r9, r7, #1
   40508:	add	r0, r1, r0
   4050c:	str	r0, [r4, #20]
   40510:	beq	4063c <flatcc_json_printer_uint16_vector_field@@Base+0x2dc>
   40514:	ldr	r0, [r4, #20]
   40518:	add	r7, r8, #6
   4051c:	mov	r8, #44	; 0x2c
   40520:	mov	sl, #10
   40524:	b	4055c <flatcc_json_printer_uint16_vector_field@@Base+0x1fc>
   40528:	mov	r1, #32
   4052c:	mov	r2, r5
   40530:	bl	14eec <memset@plt>
   40534:	ldr	r0, [r4, #20]
   40538:	add	r1, r0, r5
   4053c:	str	r1, [r4, #20]
   40540:	ldrh	r0, [r7], #2
   40544:	bl	3c4ac <flatcc_json_printer_uint16@@Base+0x2c>
   40548:	ldr	r1, [r4, #20]
   4054c:	cmp	r9, #0
   40550:	add	r0, r1, r0
   40554:	str	r0, [r4, #20]
   40558:	beq	4063c <flatcc_json_printer_uint16_vector_field@@Base+0x2dc>
   4055c:	add	r1, r0, #1
   40560:	sub	r9, r9, #1
   40564:	str	r1, [r4, #20]
   40568:	strb	r8, [r0]
   4056c:	ldrb	r0, [r4, #25]
   40570:	ldr	r1, [r4, #20]
   40574:	cmp	r0, #0
   40578:	beq	40618 <flatcc_json_printer_uint16_vector_field@@Base+0x2b8>
   4057c:	add	r0, r1, #1
   40580:	str	r0, [r4, #20]
   40584:	strb	sl, [r1]
   40588:	ldr	r0, [r4, #20]
   4058c:	ldrb	r2, [r4, #25]
   40590:	ldr	r3, [r4, #32]
   40594:	ldr	r1, [r4, #16]
   40598:	mla	r6, r3, r2, r0
   4059c:	mul	r5, r3, r2
   405a0:	cmp	r6, r1
   405a4:	bls	40528 <flatcc_json_printer_uint16_vector_field@@Base+0x1c8>
   405a8:	cmp	r0, r1
   405ac:	bcc	405c8 <flatcc_json_printer_uint16_vector_field@@Base+0x268>
   405b0:	ldr	r2, [r4, #44]	; 0x2c
   405b4:	mov	r0, r4
   405b8:	mov	r1, #0
   405bc:	blx	r2
   405c0:	ldr	r1, [r4, #16]
   405c4:	ldr	r0, [r4, #20]
   405c8:	sub	r6, r1, r0
   405cc:	cmp	r6, r5
   405d0:	bcs	40528 <flatcc_json_printer_uint16_vector_field@@Base+0x1c8>
   405d4:	mov	r1, #32
   405d8:	mov	r2, r6
   405dc:	bl	14eec <memset@plt>
   405e0:	ldr	r0, [r4, #20]
   405e4:	ldr	r2, [r4, #44]	; 0x2c
   405e8:	mov	r1, #0
   405ec:	add	r0, r0, r6
   405f0:	str	r0, [r4, #20]
   405f4:	mov	r0, r4
   405f8:	blx	r2
   405fc:	ldr	r1, [r4, #16]
   40600:	ldr	r0, [r4, #20]
   40604:	sub	r5, r5, r6
   40608:	sub	r6, r1, r0
   4060c:	cmp	r5, r6
   40610:	bhi	405d4 <flatcc_json_printer_uint16_vector_field@@Base+0x274>
   40614:	b	40528 <flatcc_json_printer_uint16_vector_field@@Base+0x1c8>
   40618:	ldr	r0, [r4, #16]
   4061c:	cmp	r1, r0
   40620:	bcc	40540 <flatcc_json_printer_uint16_vector_field@@Base+0x1e0>
   40624:	ldr	r2, [r4, #44]	; 0x2c
   40628:	mov	r0, r4
   4062c:	mov	r1, #0
   40630:	blx	r2
   40634:	ldr	r1, [r4, #20]
   40638:	b	40540 <flatcc_json_printer_uint16_vector_field@@Base+0x1e0>
   4063c:	ldrb	r1, [r4, #25]
   40640:	ldr	r0, [r4, #20]
   40644:	cmp	r1, #0
   40648:	beq	40708 <flatcc_json_printer_uint16_vector_field@@Base+0x3a8>
   4064c:	add	r1, r0, #1
   40650:	str	r1, [r4, #20]
   40654:	mov	r1, #10
   40658:	strb	r1, [r0]
   4065c:	ldr	r0, [r4, #32]
   40660:	sub	r2, r0, #1
   40664:	str	r2, [r4, #32]
   40668:	ldrb	r3, [r4, #25]
   4066c:	ldr	r0, [r4, #20]
   40670:	ldr	r1, [r4, #16]
   40674:	mla	r7, r2, r3, r0
   40678:	mul	r5, r2, r3
   4067c:	cmp	r7, r1
   40680:	bls	406f0 <flatcc_json_printer_uint16_vector_field@@Base+0x390>
   40684:	cmp	r0, r1
   40688:	bcc	406a4 <flatcc_json_printer_uint16_vector_field@@Base+0x344>
   4068c:	ldr	r2, [r4, #44]	; 0x2c
   40690:	mov	r0, r4
   40694:	mov	r1, #0
   40698:	blx	r2
   4069c:	ldr	r1, [r4, #16]
   406a0:	ldr	r0, [r4, #20]
   406a4:	sub	r6, r1, r0
   406a8:	cmp	r6, r5
   406ac:	bcs	406f0 <flatcc_json_printer_uint16_vector_field@@Base+0x390>
   406b0:	mov	r1, #32
   406b4:	mov	r2, r6
   406b8:	bl	14eec <memset@plt>
   406bc:	ldr	r0, [r4, #20]
   406c0:	ldr	r2, [r4, #44]	; 0x2c
   406c4:	mov	r1, #0
   406c8:	add	r0, r0, r6
   406cc:	str	r0, [r4, #20]
   406d0:	mov	r0, r4
   406d4:	blx	r2
   406d8:	ldr	r1, [r4, #16]
   406dc:	ldr	r0, [r4, #20]
   406e0:	sub	r5, r5, r6
   406e4:	sub	r6, r1, r0
   406e8:	cmp	r5, r6
   406ec:	bhi	406b0 <flatcc_json_printer_uint16_vector_field@@Base+0x350>
   406f0:	mov	r1, #32
   406f4:	mov	r2, r5
   406f8:	bl	14eec <memset@plt>
   406fc:	ldr	r0, [r4, #20]
   40700:	add	r0, r0, r5
   40704:	str	r0, [r4, #20]
   40708:	add	r1, r0, #1
   4070c:	str	r1, [r4, #20]
   40710:	mov	r1, #93	; 0x5d
   40714:	strb	r1, [r0]
   40718:	sub	sp, fp, #28
   4071c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00040720 <flatcc_json_printer_uint32_vector_field@@Base>:
   40720:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   40724:	add	fp, sp, #28
   40728:	sub	sp, sp, #4
   4072c:	mov	r4, r0
   40730:	mov	r0, #4
   40734:	add	r0, r0, r2, lsl #1
   40738:	ldr	r2, [r1, #8]
   4073c:	cmp	r0, r2
   40740:	bge	40760 <flatcc_json_printer_uint32_vector_field@@Base+0x40>
   40744:	ldr	r2, [r1, #4]
   40748:	add	r0, r2, r0
   4074c:	ldrh	r0, [r0]
   40750:	cmp	r0, #0
   40754:	ldrne	r2, [r1]
   40758:	addsne	r8, r2, r0
   4075c:	bne	40768 <flatcc_json_printer_uint32_vector_field@@Base+0x48>
   40760:	sub	sp, fp, #28
   40764:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   40768:	ldr	r0, [r1, #16]
   4076c:	ldr	r2, [fp, #8]
   40770:	add	r7, r0, #1
   40774:	cmp	r0, #0
   40778:	str	r7, [r1, #16]
   4077c:	beq	40794 <flatcc_json_printer_uint32_vector_field@@Base+0x74>
   40780:	ldr	r0, [r4, #20]
   40784:	add	r1, r0, #1
   40788:	str	r1, [r4, #20]
   4078c:	mov	r1, #44	; 0x2c
   40790:	strb	r1, [r0]
   40794:	ldr	r0, [r8]
   40798:	mov	r1, r3
   4079c:	ldr	r7, [r8, r0]!
   407a0:	mov	r0, r4
   407a4:	bl	3d354 <flatcc_json_printer_string_field@@Base+0x90>
   407a8:	ldr	r1, [r4, #32]
   407ac:	ldr	r0, [r4, #20]
   407b0:	cmp	r7, #0
   407b4:	add	r1, r1, #1
   407b8:	str	r1, [r4, #32]
   407bc:	add	r1, r0, #1
   407c0:	str	r1, [r4, #20]
   407c4:	mov	r1, #91	; 0x5b
   407c8:	strb	r1, [r0]
   407cc:	beq	409fc <flatcc_json_printer_uint32_vector_field@@Base+0x2dc>
   407d0:	ldrb	r0, [r4, #25]
   407d4:	ldr	r1, [r4, #20]
   407d8:	cmp	r0, #0
   407dc:	beq	40898 <flatcc_json_printer_uint32_vector_field@@Base+0x178>
   407e0:	add	r0, r1, #1
   407e4:	str	r0, [r4, #20]
   407e8:	mov	r0, #10
   407ec:	strb	r0, [r1]
   407f0:	ldr	r0, [r4, #20]
   407f4:	ldrb	r2, [r4, #25]
   407f8:	ldr	r3, [r4, #32]
   407fc:	ldr	r1, [r4, #16]
   40800:	mla	r6, r3, r2, r0
   40804:	mul	r5, r3, r2
   40808:	cmp	r6, r1
   4080c:	bls	4087c <flatcc_json_printer_uint32_vector_field@@Base+0x15c>
   40810:	cmp	r0, r1
   40814:	bcc	40830 <flatcc_json_printer_uint32_vector_field@@Base+0x110>
   40818:	ldr	r2, [r4, #44]	; 0x2c
   4081c:	mov	r0, r4
   40820:	mov	r1, #0
   40824:	blx	r2
   40828:	ldr	r1, [r4, #16]
   4082c:	ldr	r0, [r4, #20]
   40830:	sub	r6, r1, r0
   40834:	cmp	r6, r5
   40838:	bcs	4087c <flatcc_json_printer_uint32_vector_field@@Base+0x15c>
   4083c:	mov	r1, #32
   40840:	mov	r2, r6
   40844:	bl	14eec <memset@plt>
   40848:	ldr	r0, [r4, #20]
   4084c:	ldr	r2, [r4, #44]	; 0x2c
   40850:	mov	r1, #0
   40854:	add	r0, r0, r6
   40858:	str	r0, [r4, #20]
   4085c:	mov	r0, r4
   40860:	blx	r2
   40864:	ldr	r1, [r4, #16]
   40868:	ldr	r0, [r4, #20]
   4086c:	sub	r5, r5, r6
   40870:	sub	r6, r1, r0
   40874:	cmp	r5, r6
   40878:	bhi	4083c <flatcc_json_printer_uint32_vector_field@@Base+0x11c>
   4087c:	mov	r1, #32
   40880:	mov	r2, r5
   40884:	bl	14eec <memset@plt>
   40888:	ldr	r0, [r4, #20]
   4088c:	add	r1, r0, r5
   40890:	str	r1, [r4, #20]
   40894:	b	408b8 <flatcc_json_printer_uint32_vector_field@@Base+0x198>
   40898:	ldr	r0, [r4, #16]
   4089c:	cmp	r1, r0
   408a0:	bcc	408b8 <flatcc_json_printer_uint32_vector_field@@Base+0x198>
   408a4:	ldr	r2, [r4, #44]	; 0x2c
   408a8:	mov	r0, r4
   408ac:	mov	r1, #0
   408b0:	blx	r2
   408b4:	ldr	r1, [r4, #20]
   408b8:	ldr	r0, [r8, #4]
   408bc:	bl	3c65c <flatcc_json_printer_uint32@@Base+0x2c>
   408c0:	ldr	r1, [r4, #20]
   408c4:	subs	r9, r7, #1
   408c8:	add	r0, r1, r0
   408cc:	str	r0, [r4, #20]
   408d0:	beq	409fc <flatcc_json_printer_uint32_vector_field@@Base+0x2dc>
   408d4:	ldr	r0, [r4, #20]
   408d8:	add	r7, r8, #8
   408dc:	mov	r8, #44	; 0x2c
   408e0:	mov	sl, #10
   408e4:	b	4091c <flatcc_json_printer_uint32_vector_field@@Base+0x1fc>
   408e8:	mov	r1, #32
   408ec:	mov	r2, r5
   408f0:	bl	14eec <memset@plt>
   408f4:	ldr	r0, [r4, #20]
   408f8:	add	r1, r0, r5
   408fc:	str	r1, [r4, #20]
   40900:	ldr	r0, [r7], #4
   40904:	bl	3c65c <flatcc_json_printer_uint32@@Base+0x2c>
   40908:	ldr	r1, [r4, #20]
   4090c:	cmp	r9, #0
   40910:	add	r0, r1, r0
   40914:	str	r0, [r4, #20]
   40918:	beq	409fc <flatcc_json_printer_uint32_vector_field@@Base+0x2dc>
   4091c:	add	r1, r0, #1
   40920:	sub	r9, r9, #1
   40924:	str	r1, [r4, #20]
   40928:	strb	r8, [r0]
   4092c:	ldrb	r0, [r4, #25]
   40930:	ldr	r1, [r4, #20]
   40934:	cmp	r0, #0
   40938:	beq	409d8 <flatcc_json_printer_uint32_vector_field@@Base+0x2b8>
   4093c:	add	r0, r1, #1
   40940:	str	r0, [r4, #20]
   40944:	strb	sl, [r1]
   40948:	ldr	r0, [r4, #20]
   4094c:	ldrb	r2, [r4, #25]
   40950:	ldr	r3, [r4, #32]
   40954:	ldr	r1, [r4, #16]
   40958:	mla	r6, r3, r2, r0
   4095c:	mul	r5, r3, r2
   40960:	cmp	r6, r1
   40964:	bls	408e8 <flatcc_json_printer_uint32_vector_field@@Base+0x1c8>
   40968:	cmp	r0, r1
   4096c:	bcc	40988 <flatcc_json_printer_uint32_vector_field@@Base+0x268>
   40970:	ldr	r2, [r4, #44]	; 0x2c
   40974:	mov	r0, r4
   40978:	mov	r1, #0
   4097c:	blx	r2
   40980:	ldr	r1, [r4, #16]
   40984:	ldr	r0, [r4, #20]
   40988:	sub	r6, r1, r0
   4098c:	cmp	r6, r5
   40990:	bcs	408e8 <flatcc_json_printer_uint32_vector_field@@Base+0x1c8>
   40994:	mov	r1, #32
   40998:	mov	r2, r6
   4099c:	bl	14eec <memset@plt>
   409a0:	ldr	r0, [r4, #20]
   409a4:	ldr	r2, [r4, #44]	; 0x2c
   409a8:	mov	r1, #0
   409ac:	add	r0, r0, r6
   409b0:	str	r0, [r4, #20]
   409b4:	mov	r0, r4
   409b8:	blx	r2
   409bc:	ldr	r1, [r4, #16]
   409c0:	ldr	r0, [r4, #20]
   409c4:	sub	r5, r5, r6
   409c8:	sub	r6, r1, r0
   409cc:	cmp	r5, r6
   409d0:	bhi	40994 <flatcc_json_printer_uint32_vector_field@@Base+0x274>
   409d4:	b	408e8 <flatcc_json_printer_uint32_vector_field@@Base+0x1c8>
   409d8:	ldr	r0, [r4, #16]
   409dc:	cmp	r1, r0
   409e0:	bcc	40900 <flatcc_json_printer_uint32_vector_field@@Base+0x1e0>
   409e4:	ldr	r2, [r4, #44]	; 0x2c
   409e8:	mov	r0, r4
   409ec:	mov	r1, #0
   409f0:	blx	r2
   409f4:	ldr	r1, [r4, #20]
   409f8:	b	40900 <flatcc_json_printer_uint32_vector_field@@Base+0x1e0>
   409fc:	ldrb	r1, [r4, #25]
   40a00:	ldr	r0, [r4, #20]
   40a04:	cmp	r1, #0
   40a08:	beq	40ac8 <flatcc_json_printer_uint32_vector_field@@Base+0x3a8>
   40a0c:	add	r1, r0, #1
   40a10:	str	r1, [r4, #20]
   40a14:	mov	r1, #10
   40a18:	strb	r1, [r0]
   40a1c:	ldr	r0, [r4, #32]
   40a20:	sub	r2, r0, #1
   40a24:	str	r2, [r4, #32]
   40a28:	ldrb	r3, [r4, #25]
   40a2c:	ldr	r0, [r4, #20]
   40a30:	ldr	r1, [r4, #16]
   40a34:	mla	r7, r2, r3, r0
   40a38:	mul	r5, r2, r3
   40a3c:	cmp	r7, r1
   40a40:	bls	40ab0 <flatcc_json_printer_uint32_vector_field@@Base+0x390>
   40a44:	cmp	r0, r1
   40a48:	bcc	40a64 <flatcc_json_printer_uint32_vector_field@@Base+0x344>
   40a4c:	ldr	r2, [r4, #44]	; 0x2c
   40a50:	mov	r0, r4
   40a54:	mov	r1, #0
   40a58:	blx	r2
   40a5c:	ldr	r1, [r4, #16]
   40a60:	ldr	r0, [r4, #20]
   40a64:	sub	r6, r1, r0
   40a68:	cmp	r6, r5
   40a6c:	bcs	40ab0 <flatcc_json_printer_uint32_vector_field@@Base+0x390>
   40a70:	mov	r1, #32
   40a74:	mov	r2, r6
   40a78:	bl	14eec <memset@plt>
   40a7c:	ldr	r0, [r4, #20]
   40a80:	ldr	r2, [r4, #44]	; 0x2c
   40a84:	mov	r1, #0
   40a88:	add	r0, r0, r6
   40a8c:	str	r0, [r4, #20]
   40a90:	mov	r0, r4
   40a94:	blx	r2
   40a98:	ldr	r1, [r4, #16]
   40a9c:	ldr	r0, [r4, #20]
   40aa0:	sub	r5, r5, r6
   40aa4:	sub	r6, r1, r0
   40aa8:	cmp	r5, r6
   40aac:	bhi	40a70 <flatcc_json_printer_uint32_vector_field@@Base+0x350>
   40ab0:	mov	r1, #32
   40ab4:	mov	r2, r5
   40ab8:	bl	14eec <memset@plt>
   40abc:	ldr	r0, [r4, #20]
   40ac0:	add	r0, r0, r5
   40ac4:	str	r0, [r4, #20]
   40ac8:	add	r1, r0, #1
   40acc:	str	r1, [r4, #20]
   40ad0:	mov	r1, #93	; 0x5d
   40ad4:	strb	r1, [r0]
   40ad8:	sub	sp, fp, #28
   40adc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00040ae0 <flatcc_json_printer_uint64_vector_field@@Base>:
   40ae0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   40ae4:	add	fp, sp, #28
   40ae8:	sub	sp, sp, #4
   40aec:	mov	r4, r0
   40af0:	mov	r0, #4
   40af4:	add	r0, r0, r2, lsl #1
   40af8:	ldr	r2, [r1, #8]
   40afc:	cmp	r0, r2
   40b00:	bge	40b20 <flatcc_json_printer_uint64_vector_field@@Base+0x40>
   40b04:	ldr	r2, [r1, #4]
   40b08:	add	r0, r2, r0
   40b0c:	ldrh	r0, [r0]
   40b10:	cmp	r0, #0
   40b14:	ldrne	r2, [r1]
   40b18:	addsne	r8, r2, r0
   40b1c:	bne	40b28 <flatcc_json_printer_uint64_vector_field@@Base+0x48>
   40b20:	sub	sp, fp, #28
   40b24:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   40b28:	ldr	r0, [r1, #16]
   40b2c:	ldr	r2, [fp, #8]
   40b30:	add	r7, r0, #1
   40b34:	cmp	r0, #0
   40b38:	str	r7, [r1, #16]
   40b3c:	beq	40b54 <flatcc_json_printer_uint64_vector_field@@Base+0x74>
   40b40:	ldr	r0, [r4, #20]
   40b44:	add	r1, r0, #1
   40b48:	str	r1, [r4, #20]
   40b4c:	mov	r1, #44	; 0x2c
   40b50:	strb	r1, [r0]
   40b54:	ldr	r0, [r8]
   40b58:	mov	r1, r3
   40b5c:	ldr	r7, [r8, r0]!
   40b60:	mov	r0, r4
   40b64:	bl	3d354 <flatcc_json_printer_string_field@@Base+0x90>
   40b68:	ldr	r1, [r4, #32]
   40b6c:	ldr	r0, [r4, #20]
   40b70:	cmp	r7, #0
   40b74:	add	r1, r1, #1
   40b78:	str	r1, [r4, #32]
   40b7c:	add	r1, r0, #1
   40b80:	str	r1, [r4, #20]
   40b84:	mov	r1, #91	; 0x5b
   40b88:	strb	r1, [r0]
   40b8c:	beq	40dc0 <flatcc_json_printer_uint64_vector_field@@Base+0x2e0>
   40b90:	ldrb	r0, [r4, #25]
   40b94:	ldr	r2, [r4, #20]
   40b98:	cmp	r0, #0
   40b9c:	beq	40c58 <flatcc_json_printer_uint64_vector_field@@Base+0x178>
   40ba0:	add	r0, r2, #1
   40ba4:	str	r0, [r4, #20]
   40ba8:	mov	r0, #10
   40bac:	strb	r0, [r2]
   40bb0:	ldr	r0, [r4, #20]
   40bb4:	ldrb	r2, [r4, #25]
   40bb8:	ldr	r3, [r4, #32]
   40bbc:	ldr	r1, [r4, #16]
   40bc0:	mla	r6, r3, r2, r0
   40bc4:	mul	r5, r3, r2
   40bc8:	cmp	r6, r1
   40bcc:	bls	40c3c <flatcc_json_printer_uint64_vector_field@@Base+0x15c>
   40bd0:	cmp	r0, r1
   40bd4:	bcc	40bf0 <flatcc_json_printer_uint64_vector_field@@Base+0x110>
   40bd8:	ldr	r2, [r4, #44]	; 0x2c
   40bdc:	mov	r0, r4
   40be0:	mov	r1, #0
   40be4:	blx	r2
   40be8:	ldr	r1, [r4, #16]
   40bec:	ldr	r0, [r4, #20]
   40bf0:	sub	r6, r1, r0
   40bf4:	cmp	r6, r5
   40bf8:	bcs	40c3c <flatcc_json_printer_uint64_vector_field@@Base+0x15c>
   40bfc:	mov	r1, #32
   40c00:	mov	r2, r6
   40c04:	bl	14eec <memset@plt>
   40c08:	ldr	r0, [r4, #20]
   40c0c:	ldr	r2, [r4, #44]	; 0x2c
   40c10:	mov	r1, #0
   40c14:	add	r0, r0, r6
   40c18:	str	r0, [r4, #20]
   40c1c:	mov	r0, r4
   40c20:	blx	r2
   40c24:	ldr	r1, [r4, #16]
   40c28:	ldr	r0, [r4, #20]
   40c2c:	sub	r5, r5, r6
   40c30:	sub	r6, r1, r0
   40c34:	cmp	r5, r6
   40c38:	bhi	40bfc <flatcc_json_printer_uint64_vector_field@@Base+0x11c>
   40c3c:	mov	r1, #32
   40c40:	mov	r2, r5
   40c44:	bl	14eec <memset@plt>
   40c48:	ldr	r0, [r4, #20]
   40c4c:	add	r2, r0, r5
   40c50:	str	r2, [r4, #20]
   40c54:	b	40c78 <flatcc_json_printer_uint64_vector_field@@Base+0x198>
   40c58:	ldr	r0, [r4, #16]
   40c5c:	cmp	r2, r0
   40c60:	bcc	40c78 <flatcc_json_printer_uint64_vector_field@@Base+0x198>
   40c64:	ldr	r2, [r4, #44]	; 0x2c
   40c68:	mov	r0, r4
   40c6c:	mov	r1, #0
   40c70:	blx	r2
   40c74:	ldr	r2, [r4, #20]
   40c78:	ldrd	r0, [r8, #4]
   40c7c:	bl	3c9b0 <flatcc_json_printer_uint64@@Base+0x30>
   40c80:	ldr	r1, [r4, #20]
   40c84:	subs	r9, r7, #1
   40c88:	add	r0, r1, r0
   40c8c:	str	r0, [r4, #20]
   40c90:	beq	40dc0 <flatcc_json_printer_uint64_vector_field@@Base+0x2e0>
   40c94:	ldr	r0, [r4, #20]
   40c98:	add	r7, r8, #12
   40c9c:	mov	r8, #44	; 0x2c
   40ca0:	mov	sl, #10
   40ca4:	b	40ce0 <flatcc_json_printer_uint64_vector_field@@Base+0x200>
   40ca8:	mov	r1, #32
   40cac:	mov	r2, r5
   40cb0:	bl	14eec <memset@plt>
   40cb4:	ldr	r0, [r4, #20]
   40cb8:	add	r2, r0, r5
   40cbc:	str	r2, [r4, #20]
   40cc0:	ldrd	r0, [r7]
   40cc4:	bl	3c9b0 <flatcc_json_printer_uint64@@Base+0x30>
   40cc8:	ldr	r1, [r4, #20]
   40ccc:	add	r7, r7, #8
   40cd0:	cmp	r9, #0
   40cd4:	add	r0, r1, r0
   40cd8:	str	r0, [r4, #20]
   40cdc:	beq	40dc0 <flatcc_json_printer_uint64_vector_field@@Base+0x2e0>
   40ce0:	add	r1, r0, #1
   40ce4:	sub	r9, r9, #1
   40ce8:	str	r1, [r4, #20]
   40cec:	strb	r8, [r0]
   40cf0:	ldrb	r0, [r4, #25]
   40cf4:	ldr	r2, [r4, #20]
   40cf8:	cmp	r0, #0
   40cfc:	beq	40d9c <flatcc_json_printer_uint64_vector_field@@Base+0x2bc>
   40d00:	add	r0, r2, #1
   40d04:	str	r0, [r4, #20]
   40d08:	strb	sl, [r2]
   40d0c:	ldr	r0, [r4, #20]
   40d10:	ldrb	r2, [r4, #25]
   40d14:	ldr	r3, [r4, #32]
   40d18:	ldr	r1, [r4, #16]
   40d1c:	mla	r6, r3, r2, r0
   40d20:	mul	r5, r3, r2
   40d24:	cmp	r6, r1
   40d28:	bls	40ca8 <flatcc_json_printer_uint64_vector_field@@Base+0x1c8>
   40d2c:	cmp	r0, r1
   40d30:	bcc	40d4c <flatcc_json_printer_uint64_vector_field@@Base+0x26c>
   40d34:	ldr	r2, [r4, #44]	; 0x2c
   40d38:	mov	r0, r4
   40d3c:	mov	r1, #0
   40d40:	blx	r2
   40d44:	ldr	r1, [r4, #16]
   40d48:	ldr	r0, [r4, #20]
   40d4c:	sub	r6, r1, r0
   40d50:	cmp	r6, r5
   40d54:	bcs	40ca8 <flatcc_json_printer_uint64_vector_field@@Base+0x1c8>
   40d58:	mov	r1, #32
   40d5c:	mov	r2, r6
   40d60:	bl	14eec <memset@plt>
   40d64:	ldr	r0, [r4, #20]
   40d68:	ldr	r2, [r4, #44]	; 0x2c
   40d6c:	mov	r1, #0
   40d70:	add	r0, r0, r6
   40d74:	str	r0, [r4, #20]
   40d78:	mov	r0, r4
   40d7c:	blx	r2
   40d80:	ldr	r1, [r4, #16]
   40d84:	ldr	r0, [r4, #20]
   40d88:	sub	r5, r5, r6
   40d8c:	sub	r6, r1, r0
   40d90:	cmp	r5, r6
   40d94:	bhi	40d58 <flatcc_json_printer_uint64_vector_field@@Base+0x278>
   40d98:	b	40ca8 <flatcc_json_printer_uint64_vector_field@@Base+0x1c8>
   40d9c:	ldr	r0, [r4, #16]
   40da0:	cmp	r2, r0
   40da4:	bcc	40cc0 <flatcc_json_printer_uint64_vector_field@@Base+0x1e0>
   40da8:	ldr	r2, [r4, #44]	; 0x2c
   40dac:	mov	r0, r4
   40db0:	mov	r1, #0
   40db4:	blx	r2
   40db8:	ldr	r2, [r4, #20]
   40dbc:	b	40cc0 <flatcc_json_printer_uint64_vector_field@@Base+0x1e0>
   40dc0:	ldrb	r1, [r4, #25]
   40dc4:	ldr	r0, [r4, #20]
   40dc8:	cmp	r1, #0
   40dcc:	beq	40e8c <flatcc_json_printer_uint64_vector_field@@Base+0x3ac>
   40dd0:	add	r1, r0, #1
   40dd4:	str	r1, [r4, #20]
   40dd8:	mov	r1, #10
   40ddc:	strb	r1, [r0]
   40de0:	ldr	r0, [r4, #32]
   40de4:	sub	r2, r0, #1
   40de8:	str	r2, [r4, #32]
   40dec:	ldrb	r3, [r4, #25]
   40df0:	ldr	r0, [r4, #20]
   40df4:	ldr	r1, [r4, #16]
   40df8:	mla	r7, r2, r3, r0
   40dfc:	mul	r5, r2, r3
   40e00:	cmp	r7, r1
   40e04:	bls	40e74 <flatcc_json_printer_uint64_vector_field@@Base+0x394>
   40e08:	cmp	r0, r1
   40e0c:	bcc	40e28 <flatcc_json_printer_uint64_vector_field@@Base+0x348>
   40e10:	ldr	r2, [r4, #44]	; 0x2c
   40e14:	mov	r0, r4
   40e18:	mov	r1, #0
   40e1c:	blx	r2
   40e20:	ldr	r1, [r4, #16]
   40e24:	ldr	r0, [r4, #20]
   40e28:	sub	r6, r1, r0
   40e2c:	cmp	r6, r5
   40e30:	bcs	40e74 <flatcc_json_printer_uint64_vector_field@@Base+0x394>
   40e34:	mov	r1, #32
   40e38:	mov	r2, r6
   40e3c:	bl	14eec <memset@plt>
   40e40:	ldr	r0, [r4, #20]
   40e44:	ldr	r2, [r4, #44]	; 0x2c
   40e48:	mov	r1, #0
   40e4c:	add	r0, r0, r6
   40e50:	str	r0, [r4, #20]
   40e54:	mov	r0, r4
   40e58:	blx	r2
   40e5c:	ldr	r1, [r4, #16]
   40e60:	ldr	r0, [r4, #20]
   40e64:	sub	r5, r5, r6
   40e68:	sub	r6, r1, r0
   40e6c:	cmp	r5, r6
   40e70:	bhi	40e34 <flatcc_json_printer_uint64_vector_field@@Base+0x354>
   40e74:	mov	r1, #32
   40e78:	mov	r2, r5
   40e7c:	bl	14eec <memset@plt>
   40e80:	ldr	r0, [r4, #20]
   40e84:	add	r0, r0, r5
   40e88:	str	r0, [r4, #20]
   40e8c:	add	r1, r0, #1
   40e90:	str	r1, [r4, #20]
   40e94:	mov	r1, #93	; 0x5d
   40e98:	strb	r1, [r0]
   40e9c:	sub	sp, fp, #28
   40ea0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00040ea4 <flatcc_json_printer_int8_vector_field@@Base>:
   40ea4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   40ea8:	add	fp, sp, #28
   40eac:	sub	sp, sp, #4
   40eb0:	mov	r4, r0
   40eb4:	mov	r0, #4
   40eb8:	add	r0, r0, r2, lsl #1
   40ebc:	ldr	r2, [r1, #8]
   40ec0:	cmp	r0, r2
   40ec4:	bge	40ee4 <flatcc_json_printer_int8_vector_field@@Base+0x40>
   40ec8:	ldr	r2, [r1, #4]
   40ecc:	add	r0, r2, r0
   40ed0:	ldrh	r0, [r0]
   40ed4:	cmp	r0, #0
   40ed8:	ldrne	r2, [r1]
   40edc:	addsne	r9, r2, r0
   40ee0:	bne	40eec <flatcc_json_printer_int8_vector_field@@Base+0x48>
   40ee4:	sub	sp, fp, #28
   40ee8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   40eec:	ldr	r0, [r1, #16]
   40ef0:	ldr	r2, [fp, #8]
   40ef4:	add	r7, r0, #1
   40ef8:	cmp	r0, #0
   40efc:	str	r7, [r1, #16]
   40f00:	beq	40f18 <flatcc_json_printer_int8_vector_field@@Base+0x74>
   40f04:	ldr	r0, [r4, #20]
   40f08:	add	r1, r0, #1
   40f0c:	str	r1, [r4, #20]
   40f10:	mov	r1, #44	; 0x2c
   40f14:	strb	r1, [r0]
   40f18:	ldr	r0, [r9]
   40f1c:	mov	r1, r3
   40f20:	ldr	r8, [r9, r0]!
   40f24:	mov	r0, r4
   40f28:	bl	3d354 <flatcc_json_printer_string_field@@Base+0x90>
   40f2c:	ldr	r1, [r4, #32]
   40f30:	ldr	r0, [r4, #20]
   40f34:	cmp	r8, #0
   40f38:	add	r1, r1, #1
   40f3c:	str	r1, [r4, #32]
   40f40:	add	r1, r0, #1
   40f44:	str	r1, [r4, #20]
   40f48:	mov	r1, #91	; 0x5b
   40f4c:	strb	r1, [r0]
   40f50:	beq	41308 <flatcc_json_printer_int8_vector_field@@Base+0x464>
   40f54:	ldrb	r1, [r4, #25]
   40f58:	ldr	r0, [r4, #20]
   40f5c:	cmp	r1, #0
   40f60:	beq	4101c <flatcc_json_printer_int8_vector_field@@Base+0x178>
   40f64:	add	r1, r0, #1
   40f68:	str	r1, [r4, #20]
   40f6c:	mov	r1, #10
   40f70:	strb	r1, [r0]
   40f74:	ldr	r0, [r4, #20]
   40f78:	ldrb	r2, [r4, #25]
   40f7c:	ldr	r3, [r4, #32]
   40f80:	ldr	r1, [r4, #16]
   40f84:	mla	r7, r3, r2, r0
   40f88:	mul	r5, r3, r2
   40f8c:	cmp	r7, r1
   40f90:	bls	41000 <flatcc_json_printer_int8_vector_field@@Base+0x15c>
   40f94:	cmp	r0, r1
   40f98:	bcc	40fb4 <flatcc_json_printer_int8_vector_field@@Base+0x110>
   40f9c:	ldr	r2, [r4, #44]	; 0x2c
   40fa0:	mov	r0, r4
   40fa4:	mov	r1, #0
   40fa8:	blx	r2
   40fac:	ldr	r1, [r4, #16]
   40fb0:	ldr	r0, [r4, #20]
   40fb4:	sub	r6, r1, r0
   40fb8:	cmp	r6, r5
   40fbc:	bcs	41000 <flatcc_json_printer_int8_vector_field@@Base+0x15c>
   40fc0:	mov	r1, #32
   40fc4:	mov	r2, r6
   40fc8:	bl	14eec <memset@plt>
   40fcc:	ldr	r0, [r4, #20]
   40fd0:	ldr	r2, [r4, #44]	; 0x2c
   40fd4:	mov	r1, #0
   40fd8:	add	r0, r0, r6
   40fdc:	str	r0, [r4, #20]
   40fe0:	mov	r0, r4
   40fe4:	blx	r2
   40fe8:	ldr	r1, [r4, #16]
   40fec:	ldr	r0, [r4, #20]
   40ff0:	sub	r5, r5, r6
   40ff4:	sub	r6, r1, r0
   40ff8:	cmp	r5, r6
   40ffc:	bhi	40fc0 <flatcc_json_printer_int8_vector_field@@Base+0x11c>
   41000:	mov	r1, #32
   41004:	mov	r2, r5
   41008:	bl	14eec <memset@plt>
   4100c:	ldr	r0, [r4, #20]
   41010:	add	r0, r0, r5
   41014:	str	r0, [r4, #20]
   41018:	b	4103c <flatcc_json_printer_int8_vector_field@@Base+0x198>
   4101c:	ldr	r1, [r4, #16]
   41020:	cmp	r0, r1
   41024:	bcc	4103c <flatcc_json_printer_int8_vector_field@@Base+0x198>
   41028:	ldr	r2, [r4, #44]	; 0x2c
   4102c:	mov	r0, r4
   41030:	mov	r1, #0
   41034:	blx	r2
   41038:	ldr	r0, [r4, #20]
   4103c:	ldrb	r1, [r9, #4]
   41040:	sxtb	r2, r1
   41044:	lsr	r1, r1, #7
   41048:	cmn	r2, #1
   4104c:	movle	r3, #45	; 0x2d
   41050:	rsble	r2, r2, #0
   41054:	strble	r3, [r0], #1
   41058:	uxtb	r3, r2
   4105c:	cmp	r3, #100	; 0x64
   41060:	bcc	410b0 <flatcc_json_printer_int8_vector_field@@Base+0x20c>
   41064:	mov	r2, #0
   41068:	strb	r2, [r0, #3]
   4106c:	movw	r2, #34079	; 0x851f
   41070:	movt	r2, #20971	; 0x51eb
   41074:	umull	r2, r7, r3, r2
   41078:	mov	r2, #48	; 0x30
   4107c:	orr	r2, r2, r7, lsr #5
   41080:	strb	r2, [r0]
   41084:	lsr	r2, r7, #5
   41088:	mov	r7, #100	; 0x64
   4108c:	mls	r2, r2, r7, r3
   41090:	movw	r3, #60904	; 0xede8
   41094:	movt	r3, #4
   41098:	uxtb	r2, r2
   4109c:	add	r2, r3, r2, lsl #1
   410a0:	ldrh	r2, [r2]
   410a4:	strh	r2, [r0, #1]
   410a8:	mov	r0, #3
   410ac:	b	41108 <flatcc_json_printer_int8_vector_field@@Base+0x264>
   410b0:	cmp	r3, #10
   410b4:	bcc	410f4 <flatcc_json_printer_int8_vector_field@@Base+0x250>
   410b8:	mov	r2, #0
   410bc:	strb	r2, [r0, #2]
   410c0:	movw	r2, #34079	; 0x851f
   410c4:	movt	r2, #20971	; 0x51eb
   410c8:	umull	r2, r7, r3, r2
   410cc:	lsr	r2, r7, #5
   410d0:	mov	r7, #100	; 0x64
   410d4:	mls	r2, r2, r7, r3
   410d8:	movw	r3, #60904	; 0xede8
   410dc:	movt	r3, #4
   410e0:	add	r2, r3, r2, lsl #1
   410e4:	ldrh	r2, [r2]
   410e8:	strh	r2, [r0]
   410ec:	mov	r0, #2
   410f0:	b	41108 <flatcc_json_printer_int8_vector_field@@Base+0x264>
   410f4:	mov	r3, #0
   410f8:	add	r2, r2, #48	; 0x30
   410fc:	strb	r3, [r0, #1]
   41100:	strb	r2, [r0]
   41104:	mov	r0, #1
   41108:	add	r0, r0, r1
   4110c:	ldr	r1, [r4, #20]
   41110:	subs	r8, r8, #1
   41114:	add	r0, r1, r0
   41118:	str	r0, [r4, #20]
   4111c:	beq	41308 <flatcc_json_printer_int8_vector_field@@Base+0x464>
   41120:	ldr	r0, [r4, #20]
   41124:	add	r7, r9, #5
   41128:	mov	r9, #44	; 0x2c
   4112c:	mov	sl, #0
   41130:	b	41194 <flatcc_json_printer_int8_vector_field@@Base+0x2f0>
   41134:	movw	r2, #34079	; 0x851f
   41138:	strb	sl, [r0, #3]
   4113c:	movt	r2, #20971	; 0x51eb
   41140:	umull	r2, r6, r3, r2
   41144:	mov	r2, #48	; 0x30
   41148:	orr	r2, r2, r6, lsr #5
   4114c:	strb	r2, [r0]
   41150:	lsr	r2, r6, #5
   41154:	mov	r6, #100	; 0x64
   41158:	mls	r2, r2, r6, r3
   4115c:	movw	r3, #60904	; 0xede8
   41160:	movt	r3, #4
   41164:	uxtb	r2, r2
   41168:	add	r2, r3, r2, lsl #1
   4116c:	ldrh	r2, [r2]
   41170:	strh	r2, [r0, #1]
   41174:	mov	r0, #3
   41178:	add	r0, r0, r1
   4117c:	ldr	r1, [r4, #20]
   41180:	add	r7, r7, #1
   41184:	cmp	r8, #0
   41188:	add	r0, r1, r0
   4118c:	str	r0, [r4, #20]
   41190:	beq	41308 <flatcc_json_printer_int8_vector_field@@Base+0x464>
   41194:	add	r1, r0, #1
   41198:	str	r1, [r4, #20]
   4119c:	strb	r9, [r0]
   411a0:	ldrb	r1, [r4, #25]
   411a4:	ldr	r0, [r4, #20]
   411a8:	cmp	r1, #0
   411ac:	beq	41268 <flatcc_json_printer_int8_vector_field@@Base+0x3c4>
   411b0:	add	r1, r0, #1
   411b4:	str	r1, [r4, #20]
   411b8:	mov	r1, #10
   411bc:	strb	r1, [r0]
   411c0:	ldr	r0, [r4, #20]
   411c4:	ldrb	r2, [r4, #25]
   411c8:	ldr	r3, [r4, #32]
   411cc:	ldr	r1, [r4, #16]
   411d0:	mla	r6, r3, r2, r0
   411d4:	mul	r5, r3, r2
   411d8:	cmp	r6, r1
   411dc:	bls	4124c <flatcc_json_printer_int8_vector_field@@Base+0x3a8>
   411e0:	cmp	r0, r1
   411e4:	bcc	41200 <flatcc_json_printer_int8_vector_field@@Base+0x35c>
   411e8:	ldr	r2, [r4, #44]	; 0x2c
   411ec:	mov	r0, r4
   411f0:	mov	r1, #0
   411f4:	blx	r2
   411f8:	ldr	r1, [r4, #16]
   411fc:	ldr	r0, [r4, #20]
   41200:	sub	r6, r1, r0
   41204:	cmp	r6, r5
   41208:	bcs	4124c <flatcc_json_printer_int8_vector_field@@Base+0x3a8>
   4120c:	mov	r1, #32
   41210:	mov	r2, r6
   41214:	bl	14eec <memset@plt>
   41218:	ldr	r0, [r4, #20]
   4121c:	ldr	r2, [r4, #44]	; 0x2c
   41220:	mov	r1, #0
   41224:	add	r0, r0, r6
   41228:	str	r0, [r4, #20]
   4122c:	mov	r0, r4
   41230:	blx	r2
   41234:	ldr	r1, [r4, #16]
   41238:	ldr	r0, [r4, #20]
   4123c:	sub	r5, r5, r6
   41240:	sub	r6, r1, r0
   41244:	cmp	r5, r6
   41248:	bhi	4120c <flatcc_json_printer_int8_vector_field@@Base+0x368>
   4124c:	mov	r1, #32
   41250:	mov	r2, r5
   41254:	bl	14eec <memset@plt>
   41258:	ldr	r0, [r4, #20]
   4125c:	add	r0, r0, r5
   41260:	str	r0, [r4, #20]
   41264:	b	41288 <flatcc_json_printer_int8_vector_field@@Base+0x3e4>
   41268:	ldr	r1, [r4, #16]
   4126c:	cmp	r0, r1
   41270:	bcc	41288 <flatcc_json_printer_int8_vector_field@@Base+0x3e4>
   41274:	ldr	r2, [r4, #44]	; 0x2c
   41278:	mov	r0, r4
   4127c:	mov	r1, #0
   41280:	blx	r2
   41284:	ldr	r0, [r4, #20]
   41288:	ldrb	r1, [r7]
   4128c:	sub	r8, r8, #1
   41290:	sxtb	r2, r1
   41294:	lsr	r1, r1, #7
   41298:	cmn	r2, #1
   4129c:	movle	r3, #45	; 0x2d
   412a0:	rsble	r2, r2, #0
   412a4:	strble	r3, [r0], #1
   412a8:	uxtb	r3, r2
   412ac:	cmp	r3, #100	; 0x64
   412b0:	bcs	41134 <flatcc_json_printer_int8_vector_field@@Base+0x290>
   412b4:	cmp	r3, #10
   412b8:	bcc	412f4 <flatcc_json_printer_int8_vector_field@@Base+0x450>
   412bc:	movw	r2, #34079	; 0x851f
   412c0:	strb	sl, [r0, #2]
   412c4:	movt	r2, #20971	; 0x51eb
   412c8:	umull	r2, r6, r3, r2
   412cc:	lsr	r2, r6, #5
   412d0:	mov	r6, #100	; 0x64
   412d4:	mls	r2, r2, r6, r3
   412d8:	movw	r3, #60904	; 0xede8
   412dc:	movt	r3, #4
   412e0:	add	r2, r3, r2, lsl #1
   412e4:	ldrh	r2, [r2]
   412e8:	strh	r2, [r0]
   412ec:	mov	r0, #2
   412f0:	b	41178 <flatcc_json_printer_int8_vector_field@@Base+0x2d4>
   412f4:	add	r2, r2, #48	; 0x30
   412f8:	strb	sl, [r0, #1]
   412fc:	strb	r2, [r0]
   41300:	mov	r0, #1
   41304:	b	41178 <flatcc_json_printer_int8_vector_field@@Base+0x2d4>
   41308:	ldrb	r1, [r4, #25]
   4130c:	ldr	r0, [r4, #20]
   41310:	cmp	r1, #0
   41314:	beq	413d4 <flatcc_json_printer_int8_vector_field@@Base+0x530>
   41318:	add	r1, r0, #1
   4131c:	str	r1, [r4, #20]
   41320:	mov	r1, #10
   41324:	strb	r1, [r0]
   41328:	ldr	r0, [r4, #32]
   4132c:	sub	r2, r0, #1
   41330:	str	r2, [r4, #32]
   41334:	ldrb	r3, [r4, #25]
   41338:	ldr	r0, [r4, #20]
   4133c:	ldr	r1, [r4, #16]
   41340:	mla	r7, r2, r3, r0
   41344:	mul	r5, r2, r3
   41348:	cmp	r7, r1
   4134c:	bls	413bc <flatcc_json_printer_int8_vector_field@@Base+0x518>
   41350:	cmp	r0, r1
   41354:	bcc	41370 <flatcc_json_printer_int8_vector_field@@Base+0x4cc>
   41358:	ldr	r2, [r4, #44]	; 0x2c
   4135c:	mov	r0, r4
   41360:	mov	r1, #0
   41364:	blx	r2
   41368:	ldr	r1, [r4, #16]
   4136c:	ldr	r0, [r4, #20]
   41370:	sub	r6, r1, r0
   41374:	cmp	r6, r5
   41378:	bcs	413bc <flatcc_json_printer_int8_vector_field@@Base+0x518>
   4137c:	mov	r1, #32
   41380:	mov	r2, r6
   41384:	bl	14eec <memset@plt>
   41388:	ldr	r0, [r4, #20]
   4138c:	ldr	r2, [r4, #44]	; 0x2c
   41390:	mov	r1, #0
   41394:	add	r0, r0, r6
   41398:	str	r0, [r4, #20]
   4139c:	mov	r0, r4
   413a0:	blx	r2
   413a4:	ldr	r1, [r4, #16]
   413a8:	ldr	r0, [r4, #20]
   413ac:	sub	r5, r5, r6
   413b0:	sub	r6, r1, r0
   413b4:	cmp	r5, r6
   413b8:	bhi	4137c <flatcc_json_printer_int8_vector_field@@Base+0x4d8>
   413bc:	mov	r1, #32
   413c0:	mov	r2, r5
   413c4:	bl	14eec <memset@plt>
   413c8:	ldr	r0, [r4, #20]
   413cc:	add	r0, r0, r5
   413d0:	str	r0, [r4, #20]
   413d4:	add	r1, r0, #1
   413d8:	str	r1, [r4, #20]
   413dc:	mov	r1, #93	; 0x5d
   413e0:	strb	r1, [r0]
   413e4:	sub	sp, fp, #28
   413e8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000413ec <flatcc_json_printer_int16_vector_field@@Base>:
   413ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   413f0:	add	fp, sp, #28
   413f4:	sub	sp, sp, #4
   413f8:	mov	r4, r0
   413fc:	mov	r0, #4
   41400:	add	r0, r0, r2, lsl #1
   41404:	ldr	r2, [r1, #8]
   41408:	cmp	r0, r2
   4140c:	bge	4142c <flatcc_json_printer_int16_vector_field@@Base+0x40>
   41410:	ldr	r2, [r1, #4]
   41414:	add	r0, r2, r0
   41418:	ldrh	r0, [r0]
   4141c:	cmp	r0, #0
   41420:	ldrne	r2, [r1]
   41424:	addsne	r8, r2, r0
   41428:	bne	41434 <flatcc_json_printer_int16_vector_field@@Base+0x48>
   4142c:	sub	sp, fp, #28
   41430:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   41434:	ldr	r0, [r1, #16]
   41438:	ldr	r2, [fp, #8]
   4143c:	add	r7, r0, #1
   41440:	cmp	r0, #0
   41444:	str	r7, [r1, #16]
   41448:	beq	41460 <flatcc_json_printer_int16_vector_field@@Base+0x74>
   4144c:	ldr	r0, [r4, #20]
   41450:	add	r1, r0, #1
   41454:	str	r1, [r4, #20]
   41458:	mov	r1, #44	; 0x2c
   4145c:	strb	r1, [r0]
   41460:	ldr	r0, [r8]
   41464:	mov	r1, r3
   41468:	ldr	r7, [r8, r0]!
   4146c:	mov	r0, r4
   41470:	bl	3d354 <flatcc_json_printer_string_field@@Base+0x90>
   41474:	ldr	r1, [r4, #32]
   41478:	ldr	r0, [r4, #20]
   4147c:	cmp	r7, #0
   41480:	add	r1, r1, #1
   41484:	str	r1, [r4, #32]
   41488:	add	r1, r0, #1
   4148c:	str	r1, [r4, #20]
   41490:	mov	r1, #91	; 0x5b
   41494:	strb	r1, [r0]
   41498:	beq	4170c <flatcc_json_printer_int16_vector_field@@Base+0x320>
   4149c:	ldrb	r0, [r4, #25]
   414a0:	ldr	r1, [r4, #20]
   414a4:	cmp	r0, #0
   414a8:	beq	41564 <flatcc_json_printer_int16_vector_field@@Base+0x178>
   414ac:	add	r0, r1, #1
   414b0:	str	r0, [r4, #20]
   414b4:	mov	r0, #10
   414b8:	strb	r0, [r1]
   414bc:	ldr	r0, [r4, #20]
   414c0:	ldrb	r2, [r4, #25]
   414c4:	ldr	r3, [r4, #32]
   414c8:	ldr	r1, [r4, #16]
   414cc:	mla	r6, r3, r2, r0
   414d0:	mul	r5, r3, r2
   414d4:	cmp	r6, r1
   414d8:	bls	41548 <flatcc_json_printer_int16_vector_field@@Base+0x15c>
   414dc:	cmp	r0, r1
   414e0:	bcc	414fc <flatcc_json_printer_int16_vector_field@@Base+0x110>
   414e4:	ldr	r2, [r4, #44]	; 0x2c
   414e8:	mov	r0, r4
   414ec:	mov	r1, #0
   414f0:	blx	r2
   414f4:	ldr	r1, [r4, #16]
   414f8:	ldr	r0, [r4, #20]
   414fc:	sub	r6, r1, r0
   41500:	cmp	r6, r5
   41504:	bcs	41548 <flatcc_json_printer_int16_vector_field@@Base+0x15c>
   41508:	mov	r1, #32
   4150c:	mov	r2, r6
   41510:	bl	14eec <memset@plt>
   41514:	ldr	r0, [r4, #20]
   41518:	ldr	r2, [r4, #44]	; 0x2c
   4151c:	mov	r1, #0
   41520:	add	r0, r0, r6
   41524:	str	r0, [r4, #20]
   41528:	mov	r0, r4
   4152c:	blx	r2
   41530:	ldr	r1, [r4, #16]
   41534:	ldr	r0, [r4, #20]
   41538:	sub	r5, r5, r6
   4153c:	sub	r6, r1, r0
   41540:	cmp	r5, r6
   41544:	bhi	41508 <flatcc_json_printer_int16_vector_field@@Base+0x11c>
   41548:	mov	r1, #32
   4154c:	mov	r2, r5
   41550:	bl	14eec <memset@plt>
   41554:	ldr	r0, [r4, #20]
   41558:	add	r1, r0, r5
   4155c:	str	r1, [r4, #20]
   41560:	b	41584 <flatcc_json_printer_int16_vector_field@@Base+0x198>
   41564:	ldr	r0, [r4, #16]
   41568:	cmp	r1, r0
   4156c:	bcc	41584 <flatcc_json_printer_int16_vector_field@@Base+0x198>
   41570:	ldr	r2, [r4, #44]	; 0x2c
   41574:	mov	r0, r4
   41578:	mov	r1, #0
   4157c:	blx	r2
   41580:	ldr	r1, [r4, #20]
   41584:	ldrh	r0, [r8, #4]
   41588:	lsr	r5, r0, #15
   4158c:	sxth	r0, r0
   41590:	cmn	r0, #1
   41594:	rsble	r0, r0, #0
   41598:	movle	r2, #45	; 0x2d
   4159c:	uxth	r0, r0
   415a0:	strble	r2, [r1], #1
   415a4:	bl	3c4ac <flatcc_json_printer_uint16@@Base+0x2c>
   415a8:	ldr	r1, [r4, #20]
   415ac:	add	r0, r0, r5
   415b0:	subs	r9, r7, #1
   415b4:	add	r0, r1, r0
   415b8:	str	r0, [r4, #20]
   415bc:	beq	4170c <flatcc_json_printer_int16_vector_field@@Base+0x320>
   415c0:	ldr	r0, [r4, #20]
   415c4:	add	r7, r8, #6
   415c8:	mov	r8, #44	; 0x2c
   415cc:	mov	sl, #10
   415d0:	b	41630 <flatcc_json_printer_int16_vector_field@@Base+0x244>
   415d4:	mov	r1, #32
   415d8:	mov	r2, r5
   415dc:	bl	14eec <memset@plt>
   415e0:	ldr	r0, [r4, #20]
   415e4:	add	r1, r0, r5
   415e8:	str	r1, [r4, #20]
   415ec:	ldrh	r0, [r7]
   415f0:	sub	r9, r9, #1
   415f4:	lsr	r5, r0, #15
   415f8:	sxth	r0, r0
   415fc:	cmn	r0, #1
   41600:	rsble	r0, r0, #0
   41604:	movle	r2, #45	; 0x2d
   41608:	uxth	r0, r0
   4160c:	strble	r2, [r1], #1
   41610:	bl	3c4ac <flatcc_json_printer_uint16@@Base+0x2c>
   41614:	ldr	r1, [r4, #20]
   41618:	add	r0, r0, r5
   4161c:	add	r7, r7, #2
   41620:	cmp	r9, #0
   41624:	add	r0, r1, r0
   41628:	str	r0, [r4, #20]
   4162c:	beq	4170c <flatcc_json_printer_int16_vector_field@@Base+0x320>
   41630:	add	r1, r0, #1
   41634:	str	r1, [r4, #20]
   41638:	strb	r8, [r0]
   4163c:	ldrb	r0, [r4, #25]
   41640:	ldr	r1, [r4, #20]
   41644:	cmp	r0, #0
   41648:	beq	416e8 <flatcc_json_printer_int16_vector_field@@Base+0x2fc>
   4164c:	add	r0, r1, #1
   41650:	str	r0, [r4, #20]
   41654:	strb	sl, [r1]
   41658:	ldr	r0, [r4, #20]
   4165c:	ldrb	r2, [r4, #25]
   41660:	ldr	r3, [r4, #32]
   41664:	ldr	r1, [r4, #16]
   41668:	mla	r6, r3, r2, r0
   4166c:	mul	r5, r3, r2
   41670:	cmp	r6, r1
   41674:	bls	415d4 <flatcc_json_printer_int16_vector_field@@Base+0x1e8>
   41678:	cmp	r0, r1
   4167c:	bcc	41698 <flatcc_json_printer_int16_vector_field@@Base+0x2ac>
   41680:	ldr	r2, [r4, #44]	; 0x2c
   41684:	mov	r0, r4
   41688:	mov	r1, #0
   4168c:	blx	r2
   41690:	ldr	r1, [r4, #16]
   41694:	ldr	r0, [r4, #20]
   41698:	sub	r6, r1, r0
   4169c:	cmp	r6, r5
   416a0:	bcs	415d4 <flatcc_json_printer_int16_vector_field@@Base+0x1e8>
   416a4:	mov	r1, #32
   416a8:	mov	r2, r6
   416ac:	bl	14eec <memset@plt>
   416b0:	ldr	r0, [r4, #20]
   416b4:	ldr	r2, [r4, #44]	; 0x2c
   416b8:	mov	r1, #0
   416bc:	add	r0, r0, r6
   416c0:	str	r0, [r4, #20]
   416c4:	mov	r0, r4
   416c8:	blx	r2
   416cc:	ldr	r1, [r4, #16]
   416d0:	ldr	r0, [r4, #20]
   416d4:	sub	r5, r5, r6
   416d8:	sub	r6, r1, r0
   416dc:	cmp	r5, r6
   416e0:	bhi	416a4 <flatcc_json_printer_int16_vector_field@@Base+0x2b8>
   416e4:	b	415d4 <flatcc_json_printer_int16_vector_field@@Base+0x1e8>
   416e8:	ldr	r0, [r4, #16]
   416ec:	cmp	r1, r0
   416f0:	bcc	415ec <flatcc_json_printer_int16_vector_field@@Base+0x200>
   416f4:	ldr	r2, [r4, #44]	; 0x2c
   416f8:	mov	r0, r4
   416fc:	mov	r1, #0
   41700:	blx	r2
   41704:	ldr	r1, [r4, #20]
   41708:	b	415ec <flatcc_json_printer_int16_vector_field@@Base+0x200>
   4170c:	ldrb	r1, [r4, #25]
   41710:	ldr	r0, [r4, #20]
   41714:	cmp	r1, #0
   41718:	beq	417d8 <flatcc_json_printer_int16_vector_field@@Base+0x3ec>
   4171c:	add	r1, r0, #1
   41720:	str	r1, [r4, #20]
   41724:	mov	r1, #10
   41728:	strb	r1, [r0]
   4172c:	ldr	r0, [r4, #32]
   41730:	sub	r2, r0, #1
   41734:	str	r2, [r4, #32]
   41738:	ldrb	r3, [r4, #25]
   4173c:	ldr	r0, [r4, #20]
   41740:	ldr	r1, [r4, #16]
   41744:	mla	r7, r2, r3, r0
   41748:	mul	r5, r2, r3
   4174c:	cmp	r7, r1
   41750:	bls	417c0 <flatcc_json_printer_int16_vector_field@@Base+0x3d4>
   41754:	cmp	r0, r1
   41758:	bcc	41774 <flatcc_json_printer_int16_vector_field@@Base+0x388>
   4175c:	ldr	r2, [r4, #44]	; 0x2c
   41760:	mov	r0, r4
   41764:	mov	r1, #0
   41768:	blx	r2
   4176c:	ldr	r1, [r4, #16]
   41770:	ldr	r0, [r4, #20]
   41774:	sub	r6, r1, r0
   41778:	cmp	r6, r5
   4177c:	bcs	417c0 <flatcc_json_printer_int16_vector_field@@Base+0x3d4>
   41780:	mov	r1, #32
   41784:	mov	r2, r6
   41788:	bl	14eec <memset@plt>
   4178c:	ldr	r0, [r4, #20]
   41790:	ldr	r2, [r4, #44]	; 0x2c
   41794:	mov	r1, #0
   41798:	add	r0, r0, r6
   4179c:	str	r0, [r4, #20]
   417a0:	mov	r0, r4
   417a4:	blx	r2
   417a8:	ldr	r1, [r4, #16]
   417ac:	ldr	r0, [r4, #20]
   417b0:	sub	r5, r5, r6
   417b4:	sub	r6, r1, r0
   417b8:	cmp	r5, r6
   417bc:	bhi	41780 <flatcc_json_printer_int16_vector_field@@Base+0x394>
   417c0:	mov	r1, #32
   417c4:	mov	r2, r5
   417c8:	bl	14eec <memset@plt>
   417cc:	ldr	r0, [r4, #20]
   417d0:	add	r0, r0, r5
   417d4:	str	r0, [r4, #20]
   417d8:	add	r1, r0, #1
   417dc:	str	r1, [r4, #20]
   417e0:	mov	r1, #93	; 0x5d
   417e4:	strb	r1, [r0]
   417e8:	sub	sp, fp, #28
   417ec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000417f0 <flatcc_json_printer_int32_vector_field@@Base>:
   417f0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   417f4:	add	fp, sp, #28
   417f8:	sub	sp, sp, #4
   417fc:	mov	r4, r0
   41800:	mov	r0, #4
   41804:	add	r0, r0, r2, lsl #1
   41808:	ldr	r2, [r1, #8]
   4180c:	cmp	r0, r2
   41810:	bge	41830 <flatcc_json_printer_int32_vector_field@@Base+0x40>
   41814:	ldr	r2, [r1, #4]
   41818:	add	r0, r2, r0
   4181c:	ldrh	r0, [r0]
   41820:	cmp	r0, #0
   41824:	ldrne	r2, [r1]
   41828:	addsne	r8, r2, r0
   4182c:	bne	41838 <flatcc_json_printer_int32_vector_field@@Base+0x48>
   41830:	sub	sp, fp, #28
   41834:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   41838:	ldr	r0, [r1, #16]
   4183c:	ldr	r2, [fp, #8]
   41840:	add	r7, r0, #1
   41844:	cmp	r0, #0
   41848:	str	r7, [r1, #16]
   4184c:	beq	41864 <flatcc_json_printer_int32_vector_field@@Base+0x74>
   41850:	ldr	r0, [r4, #20]
   41854:	add	r1, r0, #1
   41858:	str	r1, [r4, #20]
   4185c:	mov	r1, #44	; 0x2c
   41860:	strb	r1, [r0]
   41864:	ldr	r0, [r8]
   41868:	mov	r1, r3
   4186c:	ldr	r7, [r8, r0]!
   41870:	mov	r0, r4
   41874:	bl	3d354 <flatcc_json_printer_string_field@@Base+0x90>
   41878:	ldr	r1, [r4, #32]
   4187c:	ldr	r0, [r4, #20]
   41880:	cmp	r7, #0
   41884:	add	r1, r1, #1
   41888:	str	r1, [r4, #32]
   4188c:	add	r1, r0, #1
   41890:	str	r1, [r4, #20]
   41894:	mov	r1, #91	; 0x5b
   41898:	strb	r1, [r0]
   4189c:	beq	41b00 <flatcc_json_printer_int32_vector_field@@Base+0x310>
   418a0:	ldrb	r0, [r4, #25]
   418a4:	ldr	r1, [r4, #20]
   418a8:	cmp	r0, #0
   418ac:	beq	41968 <flatcc_json_printer_int32_vector_field@@Base+0x178>
   418b0:	add	r0, r1, #1
   418b4:	str	r0, [r4, #20]
   418b8:	mov	r0, #10
   418bc:	strb	r0, [r1]
   418c0:	ldr	r0, [r4, #20]
   418c4:	ldrb	r2, [r4, #25]
   418c8:	ldr	r3, [r4, #32]
   418cc:	ldr	r1, [r4, #16]
   418d0:	mla	r6, r3, r2, r0
   418d4:	mul	r5, r3, r2
   418d8:	cmp	r6, r1
   418dc:	bls	4194c <flatcc_json_printer_int32_vector_field@@Base+0x15c>
   418e0:	cmp	r0, r1
   418e4:	bcc	41900 <flatcc_json_printer_int32_vector_field@@Base+0x110>
   418e8:	ldr	r2, [r4, #44]	; 0x2c
   418ec:	mov	r0, r4
   418f0:	mov	r1, #0
   418f4:	blx	r2
   418f8:	ldr	r1, [r4, #16]
   418fc:	ldr	r0, [r4, #20]
   41900:	sub	r6, r1, r0
   41904:	cmp	r6, r5
   41908:	bcs	4194c <flatcc_json_printer_int32_vector_field@@Base+0x15c>
   4190c:	mov	r1, #32
   41910:	mov	r2, r6
   41914:	bl	14eec <memset@plt>
   41918:	ldr	r0, [r4, #20]
   4191c:	ldr	r2, [r4, #44]	; 0x2c
   41920:	mov	r1, #0
   41924:	add	r0, r0, r6
   41928:	str	r0, [r4, #20]
   4192c:	mov	r0, r4
   41930:	blx	r2
   41934:	ldr	r1, [r4, #16]
   41938:	ldr	r0, [r4, #20]
   4193c:	sub	r5, r5, r6
   41940:	sub	r6, r1, r0
   41944:	cmp	r5, r6
   41948:	bhi	4190c <flatcc_json_printer_int32_vector_field@@Base+0x11c>
   4194c:	mov	r1, #32
   41950:	mov	r2, r5
   41954:	bl	14eec <memset@plt>
   41958:	ldr	r0, [r4, #20]
   4195c:	add	r1, r0, r5
   41960:	str	r1, [r4, #20]
   41964:	b	41988 <flatcc_json_printer_int32_vector_field@@Base+0x198>
   41968:	ldr	r0, [r4, #16]
   4196c:	cmp	r1, r0
   41970:	bcc	41988 <flatcc_json_printer_int32_vector_field@@Base+0x198>
   41974:	ldr	r2, [r4, #44]	; 0x2c
   41978:	mov	r0, r4
   4197c:	mov	r1, #0
   41980:	blx	r2
   41984:	ldr	r1, [r4, #20]
   41988:	ldr	r0, [r8, #4]
   4198c:	cmn	r0, #1
   41990:	lsr	r5, r0, #31
   41994:	movle	r2, #45	; 0x2d
   41998:	rsble	r0, r0, #0
   4199c:	strble	r2, [r1], #1
   419a0:	bl	3c65c <flatcc_json_printer_uint32@@Base+0x2c>
   419a4:	ldr	r1, [r4, #20]
   419a8:	add	r0, r0, r5
   419ac:	subs	r9, r7, #1
   419b0:	add	r0, r1, r0
   419b4:	str	r0, [r4, #20]
   419b8:	beq	41b00 <flatcc_json_printer_int32_vector_field@@Base+0x310>
   419bc:	ldr	r0, [r4, #20]
   419c0:	add	r7, r8, #8
   419c4:	mov	r8, #44	; 0x2c
   419c8:	mov	sl, #10
   419cc:	b	41a24 <flatcc_json_printer_int32_vector_field@@Base+0x234>
   419d0:	mov	r1, #32
   419d4:	mov	r2, r5
   419d8:	bl	14eec <memset@plt>
   419dc:	ldr	r0, [r4, #20]
   419e0:	add	r1, r0, r5
   419e4:	str	r1, [r4, #20]
   419e8:	ldr	r0, [r7]
   419ec:	sub	r9, r9, #1
   419f0:	cmn	r0, #1
   419f4:	lsr	r5, r0, #31
   419f8:	movle	r2, #45	; 0x2d
   419fc:	rsble	r0, r0, #0
   41a00:	strble	r2, [r1], #1
   41a04:	bl	3c65c <flatcc_json_printer_uint32@@Base+0x2c>
   41a08:	ldr	r1, [r4, #20]
   41a0c:	add	r0, r0, r5
   41a10:	add	r7, r7, #4
   41a14:	cmp	r9, #0
   41a18:	add	r0, r1, r0
   41a1c:	str	r0, [r4, #20]
   41a20:	beq	41b00 <flatcc_json_printer_int32_vector_field@@Base+0x310>
   41a24:	add	r1, r0, #1
   41a28:	str	r1, [r4, #20]
   41a2c:	strb	r8, [r0]
   41a30:	ldrb	r0, [r4, #25]
   41a34:	ldr	r1, [r4, #20]
   41a38:	cmp	r0, #0
   41a3c:	beq	41adc <flatcc_json_printer_int32_vector_field@@Base+0x2ec>
   41a40:	add	r0, r1, #1
   41a44:	str	r0, [r4, #20]
   41a48:	strb	sl, [r1]
   41a4c:	ldr	r0, [r4, #20]
   41a50:	ldrb	r2, [r4, #25]
   41a54:	ldr	r3, [r4, #32]
   41a58:	ldr	r1, [r4, #16]
   41a5c:	mla	r6, r3, r2, r0
   41a60:	mul	r5, r3, r2
   41a64:	cmp	r6, r1
   41a68:	bls	419d0 <flatcc_json_printer_int32_vector_field@@Base+0x1e0>
   41a6c:	cmp	r0, r1
   41a70:	bcc	41a8c <flatcc_json_printer_int32_vector_field@@Base+0x29c>
   41a74:	ldr	r2, [r4, #44]	; 0x2c
   41a78:	mov	r0, r4
   41a7c:	mov	r1, #0
   41a80:	blx	r2
   41a84:	ldr	r1, [r4, #16]
   41a88:	ldr	r0, [r4, #20]
   41a8c:	sub	r6, r1, r0
   41a90:	cmp	r6, r5
   41a94:	bcs	419d0 <flatcc_json_printer_int32_vector_field@@Base+0x1e0>
   41a98:	mov	r1, #32
   41a9c:	mov	r2, r6
   41aa0:	bl	14eec <memset@plt>
   41aa4:	ldr	r0, [r4, #20]
   41aa8:	ldr	r2, [r4, #44]	; 0x2c
   41aac:	mov	r1, #0
   41ab0:	add	r0, r0, r6
   41ab4:	str	r0, [r4, #20]
   41ab8:	mov	r0, r4
   41abc:	blx	r2
   41ac0:	ldr	r1, [r4, #16]
   41ac4:	ldr	r0, [r4, #20]
   41ac8:	sub	r5, r5, r6
   41acc:	sub	r6, r1, r0
   41ad0:	cmp	r5, r6
   41ad4:	bhi	41a98 <flatcc_json_printer_int32_vector_field@@Base+0x2a8>
   41ad8:	b	419d0 <flatcc_json_printer_int32_vector_field@@Base+0x1e0>
   41adc:	ldr	r0, [r4, #16]
   41ae0:	cmp	r1, r0
   41ae4:	bcc	419e8 <flatcc_json_printer_int32_vector_field@@Base+0x1f8>
   41ae8:	ldr	r2, [r4, #44]	; 0x2c
   41aec:	mov	r0, r4
   41af0:	mov	r1, #0
   41af4:	blx	r2
   41af8:	ldr	r1, [r4, #20]
   41afc:	b	419e8 <flatcc_json_printer_int32_vector_field@@Base+0x1f8>
   41b00:	ldrb	r1, [r4, #25]
   41b04:	ldr	r0, [r4, #20]
   41b08:	cmp	r1, #0
   41b0c:	beq	41bcc <flatcc_json_printer_int32_vector_field@@Base+0x3dc>
   41b10:	add	r1, r0, #1
   41b14:	str	r1, [r4, #20]
   41b18:	mov	r1, #10
   41b1c:	strb	r1, [r0]
   41b20:	ldr	r0, [r4, #32]
   41b24:	sub	r2, r0, #1
   41b28:	str	r2, [r4, #32]
   41b2c:	ldrb	r3, [r4, #25]
   41b30:	ldr	r0, [r4, #20]
   41b34:	ldr	r1, [r4, #16]
   41b38:	mla	r7, r2, r3, r0
   41b3c:	mul	r5, r2, r3
   41b40:	cmp	r7, r1
   41b44:	bls	41bb4 <flatcc_json_printer_int32_vector_field@@Base+0x3c4>
   41b48:	cmp	r0, r1
   41b4c:	bcc	41b68 <flatcc_json_printer_int32_vector_field@@Base+0x378>
   41b50:	ldr	r2, [r4, #44]	; 0x2c
   41b54:	mov	r0, r4
   41b58:	mov	r1, #0
   41b5c:	blx	r2
   41b60:	ldr	r1, [r4, #16]
   41b64:	ldr	r0, [r4, #20]
   41b68:	sub	r6, r1, r0
   41b6c:	cmp	r6, r5
   41b70:	bcs	41bb4 <flatcc_json_printer_int32_vector_field@@Base+0x3c4>
   41b74:	mov	r1, #32
   41b78:	mov	r2, r6
   41b7c:	bl	14eec <memset@plt>
   41b80:	ldr	r0, [r4, #20]
   41b84:	ldr	r2, [r4, #44]	; 0x2c
   41b88:	mov	r1, #0
   41b8c:	add	r0, r0, r6
   41b90:	str	r0, [r4, #20]
   41b94:	mov	r0, r4
   41b98:	blx	r2
   41b9c:	ldr	r1, [r4, #16]
   41ba0:	ldr	r0, [r4, #20]
   41ba4:	sub	r5, r5, r6
   41ba8:	sub	r6, r1, r0
   41bac:	cmp	r5, r6
   41bb0:	bhi	41b74 <flatcc_json_printer_int32_vector_field@@Base+0x384>
   41bb4:	mov	r1, #32
   41bb8:	mov	r2, r5
   41bbc:	bl	14eec <memset@plt>
   41bc0:	ldr	r0, [r4, #20]
   41bc4:	add	r0, r0, r5
   41bc8:	str	r0, [r4, #20]
   41bcc:	add	r1, r0, #1
   41bd0:	str	r1, [r4, #20]
   41bd4:	mov	r1, #93	; 0x5d
   41bd8:	strb	r1, [r0]
   41bdc:	sub	sp, fp, #28
   41be0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00041be4 <flatcc_json_printer_int64_vector_field@@Base>:
   41be4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   41be8:	add	fp, sp, #28
   41bec:	sub	sp, sp, #4
   41bf0:	mov	r4, r0
   41bf4:	mov	r0, #4
   41bf8:	add	r0, r0, r2, lsl #1
   41bfc:	ldr	r2, [r1, #8]
   41c00:	cmp	r0, r2
   41c04:	bge	41c24 <flatcc_json_printer_int64_vector_field@@Base+0x40>
   41c08:	ldr	r2, [r1, #4]
   41c0c:	add	r0, r2, r0
   41c10:	ldrh	r0, [r0]
   41c14:	cmp	r0, #0
   41c18:	ldrne	r2, [r1]
   41c1c:	addsne	r8, r2, r0
   41c20:	bne	41c2c <flatcc_json_printer_int64_vector_field@@Base+0x48>
   41c24:	sub	sp, fp, #28
   41c28:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   41c2c:	ldr	r0, [r1, #16]
   41c30:	ldr	r2, [fp, #8]
   41c34:	add	r7, r0, #1
   41c38:	cmp	r0, #0
   41c3c:	str	r7, [r1, #16]
   41c40:	beq	41c58 <flatcc_json_printer_int64_vector_field@@Base+0x74>
   41c44:	ldr	r0, [r4, #20]
   41c48:	add	r1, r0, #1
   41c4c:	str	r1, [r4, #20]
   41c50:	mov	r1, #44	; 0x2c
   41c54:	strb	r1, [r0]
   41c58:	ldr	r0, [r8]
   41c5c:	mov	r1, r3
   41c60:	ldr	r7, [r8, r0]!
   41c64:	mov	r0, r4
   41c68:	bl	3d354 <flatcc_json_printer_string_field@@Base+0x90>
   41c6c:	ldr	r1, [r4, #32]
   41c70:	ldr	r0, [r4, #20]
   41c74:	cmp	r7, #0
   41c78:	add	r1, r1, #1
   41c7c:	str	r1, [r4, #32]
   41c80:	add	r1, r0, #1
   41c84:	str	r1, [r4, #20]
   41c88:	mov	r1, #91	; 0x5b
   41c8c:	strb	r1, [r0]
   41c90:	beq	41f14 <flatcc_json_printer_int64_vector_field@@Base+0x330>
   41c94:	ldrb	r0, [r4, #25]
   41c98:	ldr	r2, [r4, #20]
   41c9c:	cmp	r0, #0
   41ca0:	beq	41d6c <flatcc_json_printer_int64_vector_field@@Base+0x188>
   41ca4:	add	r0, r2, #1
   41ca8:	str	r0, [r4, #20]
   41cac:	mov	r0, #10
   41cb0:	strb	r0, [r2]
   41cb4:	ldr	r0, [r4, #20]
   41cb8:	ldrb	r2, [r4, #25]
   41cbc:	ldr	r3, [r4, #32]
   41cc0:	ldr	r1, [r4, #16]
   41cc4:	mla	r6, r3, r2, r0
   41cc8:	mul	r5, r3, r2
   41ccc:	cmp	r6, r1
   41cd0:	bls	41d40 <flatcc_json_printer_int64_vector_field@@Base+0x15c>
   41cd4:	cmp	r0, r1
   41cd8:	bcc	41cf4 <flatcc_json_printer_int64_vector_field@@Base+0x110>
   41cdc:	ldr	r2, [r4, #44]	; 0x2c
   41ce0:	mov	r0, r4
   41ce4:	mov	r1, #0
   41ce8:	blx	r2
   41cec:	ldr	r1, [r4, #16]
   41cf0:	ldr	r0, [r4, #20]
   41cf4:	sub	r6, r1, r0
   41cf8:	cmp	r6, r5
   41cfc:	bcs	41d40 <flatcc_json_printer_int64_vector_field@@Base+0x15c>
   41d00:	mov	r1, #32
   41d04:	mov	r2, r6
   41d08:	bl	14eec <memset@plt>
   41d0c:	ldr	r0, [r4, #20]
   41d10:	ldr	r2, [r4, #44]	; 0x2c
   41d14:	mov	r1, #0
   41d18:	add	r0, r0, r6
   41d1c:	str	r0, [r4, #20]
   41d20:	mov	r0, r4
   41d24:	blx	r2
   41d28:	ldr	r1, [r4, #16]
   41d2c:	ldr	r0, [r4, #20]
   41d30:	sub	r5, r5, r6
   41d34:	sub	r6, r1, r0
   41d38:	cmp	r5, r6
   41d3c:	bhi	41d00 <flatcc_json_printer_int64_vector_field@@Base+0x11c>
   41d40:	mov	r1, #32
   41d44:	mov	r2, r5
   41d48:	bl	14eec <memset@plt>
   41d4c:	ldr	r0, [r4, #20]
   41d50:	add	r2, r0, r5
   41d54:	str	r2, [r4, #20]
   41d58:	ldrd	r0, [r8, #4]
   41d5c:	lsr	r5, r1, #31
   41d60:	cmn	r1, #1
   41d64:	bgt	41dac <flatcc_json_printer_int64_vector_field@@Base+0x1c8>
   41d68:	b	41d9c <flatcc_json_printer_int64_vector_field@@Base+0x1b8>
   41d6c:	ldr	r0, [r4, #16]
   41d70:	cmp	r2, r0
   41d74:	bcc	41d8c <flatcc_json_printer_int64_vector_field@@Base+0x1a8>
   41d78:	ldr	r2, [r4, #44]	; 0x2c
   41d7c:	mov	r0, r4
   41d80:	mov	r1, #0
   41d84:	blx	r2
   41d88:	ldr	r2, [r4, #20]
   41d8c:	ldrd	r0, [r8, #4]
   41d90:	lsr	r5, r1, #31
   41d94:	cmn	r1, #1
   41d98:	bgt	41dac <flatcc_json_printer_int64_vector_field@@Base+0x1c8>
   41d9c:	mov	r3, #45	; 0x2d
   41da0:	rsbs	r0, r0, #0
   41da4:	strb	r3, [r2], #1
   41da8:	rsc	r1, r1, #0
   41dac:	bl	3c9b0 <flatcc_json_printer_uint64@@Base+0x30>
   41db0:	ldr	r1, [r4, #20]
   41db4:	add	r0, r0, r5
   41db8:	subs	r9, r7, #1
   41dbc:	add	r0, r1, r0
   41dc0:	str	r0, [r4, #20]
   41dc4:	beq	41f14 <flatcc_json_printer_int64_vector_field@@Base+0x330>
   41dc8:	ldr	r0, [r4, #20]
   41dcc:	add	r7, r8, #12
   41dd0:	mov	r8, #44	; 0x2c
   41dd4:	mov	sl, #10
   41dd8:	b	41dfc <flatcc_json_printer_int64_vector_field@@Base+0x218>
   41ddc:	bl	3c9b0 <flatcc_json_printer_uint64@@Base+0x30>
   41de0:	ldr	r1, [r4, #20]
   41de4:	add	r0, r0, r5
   41de8:	add	r7, r7, #8
   41dec:	cmp	r9, #0
   41df0:	add	r0, r1, r0
   41df4:	str	r0, [r4, #20]
   41df8:	beq	41f14 <flatcc_json_printer_int64_vector_field@@Base+0x330>
   41dfc:	add	r1, r0, #1
   41e00:	str	r1, [r4, #20]
   41e04:	strb	r8, [r0]
   41e08:	ldrb	r0, [r4, #25]
   41e0c:	ldr	r2, [r4, #20]
   41e10:	cmp	r0, #0
   41e14:	beq	41ecc <flatcc_json_printer_int64_vector_field@@Base+0x2e8>
   41e18:	add	r0, r2, #1
   41e1c:	str	r0, [r4, #20]
   41e20:	strb	sl, [r2]
   41e24:	ldr	r0, [r4, #20]
   41e28:	ldrb	r2, [r4, #25]
   41e2c:	ldr	r3, [r4, #32]
   41e30:	ldr	r1, [r4, #16]
   41e34:	mla	r6, r3, r2, r0
   41e38:	mul	r5, r3, r2
   41e3c:	cmp	r6, r1
   41e40:	bls	41eb0 <flatcc_json_printer_int64_vector_field@@Base+0x2cc>
   41e44:	cmp	r0, r1
   41e48:	bcc	41e64 <flatcc_json_printer_int64_vector_field@@Base+0x280>
   41e4c:	ldr	r2, [r4, #44]	; 0x2c
   41e50:	mov	r0, r4
   41e54:	mov	r1, #0
   41e58:	blx	r2
   41e5c:	ldr	r1, [r4, #16]
   41e60:	ldr	r0, [r4, #20]
   41e64:	sub	r6, r1, r0
   41e68:	cmp	r6, r5
   41e6c:	bcs	41eb0 <flatcc_json_printer_int64_vector_field@@Base+0x2cc>
   41e70:	mov	r1, #32
   41e74:	mov	r2, r6
   41e78:	bl	14eec <memset@plt>
   41e7c:	ldr	r0, [r4, #20]
   41e80:	ldr	r2, [r4, #44]	; 0x2c
   41e84:	mov	r1, #0
   41e88:	add	r0, r0, r6
   41e8c:	str	r0, [r4, #20]
   41e90:	mov	r0, r4
   41e94:	blx	r2
   41e98:	ldr	r1, [r4, #16]
   41e9c:	ldr	r0, [r4, #20]
   41ea0:	sub	r5, r5, r6
   41ea4:	sub	r6, r1, r0
   41ea8:	cmp	r5, r6
   41eac:	bhi	41e70 <flatcc_json_printer_int64_vector_field@@Base+0x28c>
   41eb0:	mov	r1, #32
   41eb4:	mov	r2, r5
   41eb8:	bl	14eec <memset@plt>
   41ebc:	ldr	r0, [r4, #20]
   41ec0:	add	r2, r0, r5
   41ec4:	str	r2, [r4, #20]
   41ec8:	b	41eec <flatcc_json_printer_int64_vector_field@@Base+0x308>
   41ecc:	ldr	r0, [r4, #16]
   41ed0:	cmp	r2, r0
   41ed4:	bcc	41eec <flatcc_json_printer_int64_vector_field@@Base+0x308>
   41ed8:	ldr	r2, [r4, #44]	; 0x2c
   41edc:	mov	r0, r4
   41ee0:	mov	r1, #0
   41ee4:	blx	r2
   41ee8:	ldr	r2, [r4, #20]
   41eec:	ldrd	r0, [r7]
   41ef0:	sub	r9, r9, #1
   41ef4:	lsr	r5, r1, #31
   41ef8:	cmn	r1, #1
   41efc:	bgt	41ddc <flatcc_json_printer_int64_vector_field@@Base+0x1f8>
   41f00:	mov	r3, #45	; 0x2d
   41f04:	rsbs	r0, r0, #0
   41f08:	strb	r3, [r2], #1
   41f0c:	rsc	r1, r1, #0
   41f10:	b	41ddc <flatcc_json_printer_int64_vector_field@@Base+0x1f8>
   41f14:	ldrb	r1, [r4, #25]
   41f18:	ldr	r0, [r4, #20]
   41f1c:	cmp	r1, #0
   41f20:	beq	41fe0 <flatcc_json_printer_int64_vector_field@@Base+0x3fc>
   41f24:	add	r1, r0, #1
   41f28:	str	r1, [r4, #20]
   41f2c:	mov	r1, #10
   41f30:	strb	r1, [r0]
   41f34:	ldr	r0, [r4, #32]
   41f38:	sub	r2, r0, #1
   41f3c:	str	r2, [r4, #32]
   41f40:	ldrb	r3, [r4, #25]
   41f44:	ldr	r0, [r4, #20]
   41f48:	ldr	r1, [r4, #16]
   41f4c:	mla	r7, r2, r3, r0
   41f50:	mul	r5, r2, r3
   41f54:	cmp	r7, r1
   41f58:	bls	41fc8 <flatcc_json_printer_int64_vector_field@@Base+0x3e4>
   41f5c:	cmp	r0, r1
   41f60:	bcc	41f7c <flatcc_json_printer_int64_vector_field@@Base+0x398>
   41f64:	ldr	r2, [r4, #44]	; 0x2c
   41f68:	mov	r0, r4
   41f6c:	mov	r1, #0
   41f70:	blx	r2
   41f74:	ldr	r1, [r4, #16]
   41f78:	ldr	r0, [r4, #20]
   41f7c:	sub	r6, r1, r0
   41f80:	cmp	r6, r5
   41f84:	bcs	41fc8 <flatcc_json_printer_int64_vector_field@@Base+0x3e4>
   41f88:	mov	r1, #32
   41f8c:	mov	r2, r6
   41f90:	bl	14eec <memset@plt>
   41f94:	ldr	r0, [r4, #20]
   41f98:	ldr	r2, [r4, #44]	; 0x2c
   41f9c:	mov	r1, #0
   41fa0:	add	r0, r0, r6
   41fa4:	str	r0, [r4, #20]
   41fa8:	mov	r0, r4
   41fac:	blx	r2
   41fb0:	ldr	r1, [r4, #16]
   41fb4:	ldr	r0, [r4, #20]
   41fb8:	sub	r5, r5, r6
   41fbc:	sub	r6, r1, r0
   41fc0:	cmp	r5, r6
   41fc4:	bhi	41f88 <flatcc_json_printer_int64_vector_field@@Base+0x3a4>
   41fc8:	mov	r1, #32
   41fcc:	mov	r2, r5
   41fd0:	bl	14eec <memset@plt>
   41fd4:	ldr	r0, [r4, #20]
   41fd8:	add	r0, r0, r5
   41fdc:	str	r0, [r4, #20]
   41fe0:	add	r1, r0, #1
   41fe4:	str	r1, [r4, #20]
   41fe8:	mov	r1, #93	; 0x5d
   41fec:	strb	r1, [r0]
   41ff0:	sub	sp, fp, #28
   41ff4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00041ff8 <flatcc_json_printer_bool_vector_field@@Base>:
   41ff8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   41ffc:	add	fp, sp, #28
   42000:	sub	sp, sp, #4
   42004:	mov	r4, r0
   42008:	mov	r0, #4
   4200c:	add	r0, r0, r2, lsl #1
   42010:	ldr	r2, [r1, #8]
   42014:	cmp	r0, r2
   42018:	bge	42038 <flatcc_json_printer_bool_vector_field@@Base+0x40>
   4201c:	ldr	r2, [r1, #4]
   42020:	add	r0, r2, r0
   42024:	ldrh	r0, [r0]
   42028:	cmp	r0, #0
   4202c:	ldrne	r2, [r1]
   42030:	addsne	sl, r2, r0
   42034:	bne	42040 <flatcc_json_printer_bool_vector_field@@Base+0x48>
   42038:	sub	sp, fp, #28
   4203c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   42040:	ldr	r0, [r1, #16]
   42044:	ldr	r2, [fp, #8]
   42048:	add	r7, r0, #1
   4204c:	cmp	r0, #0
   42050:	str	r7, [r1, #16]
   42054:	beq	4206c <flatcc_json_printer_bool_vector_field@@Base+0x74>
   42058:	ldr	r0, [r4, #20]
   4205c:	add	r1, r0, #1
   42060:	str	r1, [r4, #20]
   42064:	mov	r1, #44	; 0x2c
   42068:	strb	r1, [r0]
   4206c:	ldr	r0, [sl]
   42070:	mov	r1, r3
   42074:	ldr	r9, [sl, r0]!
   42078:	mov	r0, r4
   4207c:	bl	3d354 <flatcc_json_printer_string_field@@Base+0x90>
   42080:	ldr	r1, [r4, #32]
   42084:	ldr	r0, [r4, #20]
   42088:	cmp	r9, #0
   4208c:	add	r1, r1, #1
   42090:	str	r1, [r4, #32]
   42094:	add	r1, r0, #1
   42098:	str	r1, [r4, #20]
   4209c:	mov	r1, #91	; 0x5b
   420a0:	strb	r1, [r0]
   420a4:	beq	4234c <flatcc_json_printer_bool_vector_field@@Base+0x354>
   420a8:	ldrb	r1, [r4, #25]
   420ac:	ldr	r0, [r4, #20]
   420b0:	cmp	r1, #0
   420b4:	beq	42170 <flatcc_json_printer_bool_vector_field@@Base+0x178>
   420b8:	add	r1, r0, #1
   420bc:	str	r1, [r4, #20]
   420c0:	mov	r1, #10
   420c4:	strb	r1, [r0]
   420c8:	ldr	r0, [r4, #20]
   420cc:	ldrb	r2, [r4, #25]
   420d0:	ldr	r3, [r4, #32]
   420d4:	ldr	r1, [r4, #16]
   420d8:	mla	r7, r3, r2, r0
   420dc:	mul	r5, r3, r2
   420e0:	cmp	r7, r1
   420e4:	bls	42154 <flatcc_json_printer_bool_vector_field@@Base+0x15c>
   420e8:	cmp	r0, r1
   420ec:	bcc	42108 <flatcc_json_printer_bool_vector_field@@Base+0x110>
   420f0:	ldr	r2, [r4, #44]	; 0x2c
   420f4:	mov	r0, r4
   420f8:	mov	r1, #0
   420fc:	blx	r2
   42100:	ldr	r1, [r4, #16]
   42104:	ldr	r0, [r4, #20]
   42108:	sub	r6, r1, r0
   4210c:	cmp	r6, r5
   42110:	bcs	42154 <flatcc_json_printer_bool_vector_field@@Base+0x15c>
   42114:	mov	r1, #32
   42118:	mov	r2, r6
   4211c:	bl	14eec <memset@plt>
   42120:	ldr	r0, [r4, #20]
   42124:	ldr	r2, [r4, #44]	; 0x2c
   42128:	mov	r1, #0
   4212c:	add	r0, r0, r6
   42130:	str	r0, [r4, #20]
   42134:	mov	r0, r4
   42138:	blx	r2
   4213c:	ldr	r1, [r4, #16]
   42140:	ldr	r0, [r4, #20]
   42144:	sub	r5, r5, r6
   42148:	sub	r6, r1, r0
   4214c:	cmp	r5, r6
   42150:	bhi	42114 <flatcc_json_printer_bool_vector_field@@Base+0x11c>
   42154:	mov	r1, #32
   42158:	mov	r2, r5
   4215c:	bl	14eec <memset@plt>
   42160:	ldr	r0, [r4, #20]
   42164:	add	r0, r0, r5
   42168:	str	r0, [r4, #20]
   4216c:	b	42190 <flatcc_json_printer_bool_vector_field@@Base+0x198>
   42170:	ldr	r1, [r4, #16]
   42174:	cmp	r0, r1
   42178:	bcc	42190 <flatcc_json_printer_bool_vector_field@@Base+0x198>
   4217c:	ldr	r2, [r4, #44]	; 0x2c
   42180:	mov	r0, r4
   42184:	mov	r1, #0
   42188:	blx	r2
   4218c:	ldr	r0, [r4, #20]
   42190:	ldrb	r1, [sl, #4]
   42194:	movw	r8, #29300	; 0x7274
   42198:	movt	r8, #25973	; 0x6575
   4219c:	cmp	r1, #0
   421a0:	beq	421b8 <flatcc_json_printer_bool_vector_field@@Base+0x1c0>
   421a4:	mov	r1, #0
   421a8:	str	r8, [r0]
   421ac:	strb	r1, [r0, #4]
   421b0:	mov	r0, #4
   421b4:	b	421d0 <flatcc_json_printer_bool_vector_field@@Base+0x1d8>
   421b8:	mov	r1, #101	; 0x65
   421bc:	strh	r1, [r0, #4]
   421c0:	movw	r1, #24934	; 0x6166
   421c4:	movt	r1, #29548	; 0x736c
   421c8:	str	r1, [r0]
   421cc:	mov	r0, #5
   421d0:	ldr	r1, [r4, #20]
   421d4:	subs	r9, r9, #1
   421d8:	add	r0, r1, r0
   421dc:	str	r0, [r4, #20]
   421e0:	beq	4234c <flatcc_json_printer_bool_vector_field@@Base+0x354>
   421e4:	ldr	r0, [r4, #20]
   421e8:	add	r7, sl, #5
   421ec:	mov	sl, #44	; 0x2c
   421f0:	b	42224 <flatcc_json_printer_bool_vector_field@@Base+0x22c>
   421f4:	mov	r1, #101	; 0x65
   421f8:	strh	r1, [r0, #4]
   421fc:	movw	r1, #24934	; 0x6166
   42200:	movt	r1, #29548	; 0x736c
   42204:	str	r1, [r0]
   42208:	mov	r0, #5
   4220c:	ldr	r1, [r4, #20]
   42210:	add	r7, r7, #1
   42214:	cmp	r9, #0
   42218:	add	r0, r1, r0
   4221c:	str	r0, [r4, #20]
   42220:	beq	4234c <flatcc_json_printer_bool_vector_field@@Base+0x354>
   42224:	add	r1, r0, #1
   42228:	str	r1, [r4, #20]
   4222c:	strb	sl, [r0]
   42230:	ldrb	r1, [r4, #25]
   42234:	ldr	r0, [r4, #20]
   42238:	cmp	r1, #0
   4223c:	beq	42308 <flatcc_json_printer_bool_vector_field@@Base+0x310>
   42240:	add	r1, r0, #1
   42244:	str	r1, [r4, #20]
   42248:	mov	r1, #10
   4224c:	strb	r1, [r0]
   42250:	ldr	r0, [r4, #20]
   42254:	ldrb	r2, [r4, #25]
   42258:	ldr	r3, [r4, #32]
   4225c:	ldr	r1, [r4, #16]
   42260:	mla	r6, r3, r2, r0
   42264:	mul	r5, r3, r2
   42268:	cmp	r6, r1
   4226c:	bls	422dc <flatcc_json_printer_bool_vector_field@@Base+0x2e4>
   42270:	cmp	r0, r1
   42274:	bcc	42290 <flatcc_json_printer_bool_vector_field@@Base+0x298>
   42278:	ldr	r2, [r4, #44]	; 0x2c
   4227c:	mov	r0, r4
   42280:	mov	r1, #0
   42284:	blx	r2
   42288:	ldr	r1, [r4, #16]
   4228c:	ldr	r0, [r4, #20]
   42290:	sub	r6, r1, r0
   42294:	cmp	r6, r5
   42298:	bcs	422dc <flatcc_json_printer_bool_vector_field@@Base+0x2e4>
   4229c:	mov	r1, #32
   422a0:	mov	r2, r6
   422a4:	bl	14eec <memset@plt>
   422a8:	ldr	r0, [r4, #20]
   422ac:	ldr	r2, [r4, #44]	; 0x2c
   422b0:	mov	r1, #0
   422b4:	add	r0, r0, r6
   422b8:	str	r0, [r4, #20]
   422bc:	mov	r0, r4
   422c0:	blx	r2
   422c4:	ldr	r1, [r4, #16]
   422c8:	ldr	r0, [r4, #20]
   422cc:	sub	r5, r5, r6
   422d0:	sub	r6, r1, r0
   422d4:	cmp	r5, r6
   422d8:	bhi	4229c <flatcc_json_printer_bool_vector_field@@Base+0x2a4>
   422dc:	mov	r1, #32
   422e0:	mov	r2, r5
   422e4:	bl	14eec <memset@plt>
   422e8:	ldr	r0, [r4, #20]
   422ec:	add	r0, r0, r5
   422f0:	str	r0, [r4, #20]
   422f4:	ldrb	r1, [r7]
   422f8:	sub	r9, r9, #1
   422fc:	cmp	r1, #0
   42300:	bne	42338 <flatcc_json_printer_bool_vector_field@@Base+0x340>
   42304:	b	421f4 <flatcc_json_printer_bool_vector_field@@Base+0x1fc>
   42308:	ldr	r1, [r4, #16]
   4230c:	cmp	r0, r1
   42310:	bcc	42328 <flatcc_json_printer_bool_vector_field@@Base+0x330>
   42314:	ldr	r2, [r4, #44]	; 0x2c
   42318:	mov	r0, r4
   4231c:	mov	r1, #0
   42320:	blx	r2
   42324:	ldr	r0, [r4, #20]
   42328:	ldrb	r1, [r7]
   4232c:	sub	r9, r9, #1
   42330:	cmp	r1, #0
   42334:	beq	421f4 <flatcc_json_printer_bool_vector_field@@Base+0x1fc>
   42338:	mov	r1, #0
   4233c:	str	r8, [r0]
   42340:	strb	r1, [r0, #4]
   42344:	mov	r0, #4
   42348:	b	4220c <flatcc_json_printer_bool_vector_field@@Base+0x214>
   4234c:	ldrb	r1, [r4, #25]
   42350:	ldr	r0, [r4, #20]
   42354:	cmp	r1, #0
   42358:	beq	42418 <flatcc_json_printer_bool_vector_field@@Base+0x420>
   4235c:	add	r1, r0, #1
   42360:	str	r1, [r4, #20]
   42364:	mov	r1, #10
   42368:	strb	r1, [r0]
   4236c:	ldr	r0, [r4, #32]
   42370:	sub	r2, r0, #1
   42374:	str	r2, [r4, #32]
   42378:	ldrb	r3, [r4, #25]
   4237c:	ldr	r0, [r4, #20]
   42380:	ldr	r1, [r4, #16]
   42384:	mla	r7, r2, r3, r0
   42388:	mul	r5, r2, r3
   4238c:	cmp	r7, r1
   42390:	bls	42400 <flatcc_json_printer_bool_vector_field@@Base+0x408>
   42394:	cmp	r0, r1
   42398:	bcc	423b4 <flatcc_json_printer_bool_vector_field@@Base+0x3bc>
   4239c:	ldr	r2, [r4, #44]	; 0x2c
   423a0:	mov	r0, r4
   423a4:	mov	r1, #0
   423a8:	blx	r2
   423ac:	ldr	r1, [r4, #16]
   423b0:	ldr	r0, [r4, #20]
   423b4:	sub	r6, r1, r0
   423b8:	cmp	r6, r5
   423bc:	bcs	42400 <flatcc_json_printer_bool_vector_field@@Base+0x408>
   423c0:	mov	r1, #32
   423c4:	mov	r2, r6
   423c8:	bl	14eec <memset@plt>
   423cc:	ldr	r0, [r4, #20]
   423d0:	ldr	r2, [r4, #44]	; 0x2c
   423d4:	mov	r1, #0
   423d8:	add	r0, r0, r6
   423dc:	str	r0, [r4, #20]
   423e0:	mov	r0, r4
   423e4:	blx	r2
   423e8:	ldr	r1, [r4, #16]
   423ec:	ldr	r0, [r4, #20]
   423f0:	sub	r5, r5, r6
   423f4:	sub	r6, r1, r0
   423f8:	cmp	r5, r6
   423fc:	bhi	423c0 <flatcc_json_printer_bool_vector_field@@Base+0x3c8>
   42400:	mov	r1, #32
   42404:	mov	r2, r5
   42408:	bl	14eec <memset@plt>
   4240c:	ldr	r0, [r4, #20]
   42410:	add	r0, r0, r5
   42414:	str	r0, [r4, #20]
   42418:	add	r1, r0, #1
   4241c:	str	r1, [r4, #20]
   42420:	mov	r1, #93	; 0x5d
   42424:	strb	r1, [r0]
   42428:	sub	sp, fp, #28
   4242c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00042430 <flatcc_json_printer_float_vector_field@@Base>:
   42430:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   42434:	add	fp, sp, #28
   42438:	sub	sp, sp, #4
   4243c:	mov	r4, r0
   42440:	mov	r0, #4
   42444:	add	r0, r0, r2, lsl #1
   42448:	ldr	r2, [r1, #8]
   4244c:	cmp	r0, r2
   42450:	bge	42470 <flatcc_json_printer_float_vector_field@@Base+0x40>
   42454:	ldr	r2, [r1, #4]
   42458:	add	r0, r2, r0
   4245c:	ldrh	r0, [r0]
   42460:	cmp	r0, #0
   42464:	ldrne	r2, [r1]
   42468:	addsne	r8, r2, r0
   4246c:	bne	42478 <flatcc_json_printer_float_vector_field@@Base+0x48>
   42470:	sub	sp, fp, #28
   42474:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   42478:	ldr	r0, [r1, #16]
   4247c:	ldr	r2, [fp, #8]
   42480:	add	r7, r0, #1
   42484:	cmp	r0, #0
   42488:	str	r7, [r1, #16]
   4248c:	beq	424a4 <flatcc_json_printer_float_vector_field@@Base+0x74>
   42490:	ldr	r0, [r4, #20]
   42494:	add	r1, r0, #1
   42498:	str	r1, [r4, #20]
   4249c:	mov	r1, #44	; 0x2c
   424a0:	strb	r1, [r0]
   424a4:	ldr	r0, [r8]
   424a8:	mov	r1, r3
   424ac:	ldr	r7, [r8, r0]!
   424b0:	mov	r0, r4
   424b4:	bl	3d354 <flatcc_json_printer_string_field@@Base+0x90>
   424b8:	ldr	r1, [r4, #32]
   424bc:	ldr	r0, [r4, #20]
   424c0:	cmp	r7, #0
   424c4:	add	r1, r1, #1
   424c8:	str	r1, [r4, #32]
   424cc:	add	r1, r0, #1
   424d0:	str	r1, [r4, #20]
   424d4:	mov	r1, #91	; 0x5b
   424d8:	strb	r1, [r0]
   424dc:	beq	42718 <flatcc_json_printer_float_vector_field@@Base+0x2e8>
   424e0:	ldrb	r1, [r4, #25]
   424e4:	ldr	r0, [r4, #20]
   424e8:	cmp	r1, #0
   424ec:	beq	425a8 <flatcc_json_printer_float_vector_field@@Base+0x178>
   424f0:	add	r1, r0, #1
   424f4:	str	r1, [r4, #20]
   424f8:	mov	r1, #10
   424fc:	strb	r1, [r0]
   42500:	ldr	r0, [r4, #20]
   42504:	ldrb	r2, [r4, #25]
   42508:	ldr	r3, [r4, #32]
   4250c:	ldr	r1, [r4, #16]
   42510:	mla	r6, r3, r2, r0
   42514:	mul	r5, r3, r2
   42518:	cmp	r6, r1
   4251c:	bls	4258c <flatcc_json_printer_float_vector_field@@Base+0x15c>
   42520:	cmp	r0, r1
   42524:	bcc	42540 <flatcc_json_printer_float_vector_field@@Base+0x110>
   42528:	ldr	r2, [r4, #44]	; 0x2c
   4252c:	mov	r0, r4
   42530:	mov	r1, #0
   42534:	blx	r2
   42538:	ldr	r1, [r4, #16]
   4253c:	ldr	r0, [r4, #20]
   42540:	sub	r6, r1, r0
   42544:	cmp	r6, r5
   42548:	bcs	4258c <flatcc_json_printer_float_vector_field@@Base+0x15c>
   4254c:	mov	r1, #32
   42550:	mov	r2, r6
   42554:	bl	14eec <memset@plt>
   42558:	ldr	r0, [r4, #20]
   4255c:	ldr	r2, [r4, #44]	; 0x2c
   42560:	mov	r1, #0
   42564:	add	r0, r0, r6
   42568:	str	r0, [r4, #20]
   4256c:	mov	r0, r4
   42570:	blx	r2
   42574:	ldr	r1, [r4, #16]
   42578:	ldr	r0, [r4, #20]
   4257c:	sub	r5, r5, r6
   42580:	sub	r6, r1, r0
   42584:	cmp	r5, r6
   42588:	bhi	4254c <flatcc_json_printer_float_vector_field@@Base+0x11c>
   4258c:	mov	r1, #32
   42590:	mov	r2, r5
   42594:	bl	14eec <memset@plt>
   42598:	ldr	r0, [r4, #20]
   4259c:	add	r0, r0, r5
   425a0:	str	r0, [r4, #20]
   425a4:	b	425c8 <flatcc_json_printer_float_vector_field@@Base+0x198>
   425a8:	ldr	r1, [r4, #16]
   425ac:	cmp	r0, r1
   425b0:	bcc	425c8 <flatcc_json_printer_float_vector_field@@Base+0x198>
   425b4:	ldr	r2, [r4, #44]	; 0x2c
   425b8:	mov	r0, r4
   425bc:	mov	r1, #0
   425c0:	blx	r2
   425c4:	ldr	r0, [r4, #20]
   425c8:	vldr	s0, [r8, #4]
   425cc:	vcvt.f64.f32	d0, s0
   425d0:	bl	3af80 <flatcc_json_printer_fmt_float@@Base+0x8>
   425d4:	ldr	r1, [r4, #20]
   425d8:	subs	r9, r7, #1
   425dc:	add	r0, r1, r0
   425e0:	str	r0, [r4, #20]
   425e4:	beq	42718 <flatcc_json_printer_float_vector_field@@Base+0x2e8>
   425e8:	ldr	r0, [r4, #20]
   425ec:	add	r7, r8, #8
   425f0:	mov	r8, #44	; 0x2c
   425f4:	mov	sl, #10
   425f8:	b	42638 <flatcc_json_printer_float_vector_field@@Base+0x208>
   425fc:	mov	r1, #32
   42600:	mov	r2, r5
   42604:	bl	14eec <memset@plt>
   42608:	ldr	r0, [r4, #20]
   4260c:	add	r0, r0, r5
   42610:	str	r0, [r4, #20]
   42614:	vldr	s0, [r7]
   42618:	vcvt.f64.f32	d0, s0
   4261c:	bl	3af80 <flatcc_json_printer_fmt_float@@Base+0x8>
   42620:	ldr	r1, [r4, #20]
   42624:	add	r7, r7, #4
   42628:	cmp	r9, #0
   4262c:	add	r0, r1, r0
   42630:	str	r0, [r4, #20]
   42634:	beq	42718 <flatcc_json_printer_float_vector_field@@Base+0x2e8>
   42638:	add	r1, r0, #1
   4263c:	sub	r9, r9, #1
   42640:	str	r1, [r4, #20]
   42644:	strb	r8, [r0]
   42648:	ldrb	r1, [r4, #25]
   4264c:	ldr	r0, [r4, #20]
   42650:	cmp	r1, #0
   42654:	beq	426f4 <flatcc_json_printer_float_vector_field@@Base+0x2c4>
   42658:	add	r1, r0, #1
   4265c:	str	r1, [r4, #20]
   42660:	strb	sl, [r0]
   42664:	ldr	r0, [r4, #20]
   42668:	ldrb	r2, [r4, #25]
   4266c:	ldr	r3, [r4, #32]
   42670:	ldr	r1, [r4, #16]
   42674:	mla	r6, r3, r2, r0
   42678:	mul	r5, r3, r2
   4267c:	cmp	r6, r1
   42680:	bls	425fc <flatcc_json_printer_float_vector_field@@Base+0x1cc>
   42684:	cmp	r0, r1
   42688:	bcc	426a4 <flatcc_json_printer_float_vector_field@@Base+0x274>
   4268c:	ldr	r2, [r4, #44]	; 0x2c
   42690:	mov	r0, r4
   42694:	mov	r1, #0
   42698:	blx	r2
   4269c:	ldr	r1, [r4, #16]
   426a0:	ldr	r0, [r4, #20]
   426a4:	sub	r6, r1, r0
   426a8:	cmp	r6, r5
   426ac:	bcs	425fc <flatcc_json_printer_float_vector_field@@Base+0x1cc>
   426b0:	mov	r1, #32
   426b4:	mov	r2, r6
   426b8:	bl	14eec <memset@plt>
   426bc:	ldr	r0, [r4, #20]
   426c0:	ldr	r2, [r4, #44]	; 0x2c
   426c4:	mov	r1, #0
   426c8:	add	r0, r0, r6
   426cc:	str	r0, [r4, #20]
   426d0:	mov	r0, r4
   426d4:	blx	r2
   426d8:	ldr	r1, [r4, #16]
   426dc:	ldr	r0, [r4, #20]
   426e0:	sub	r5, r5, r6
   426e4:	sub	r6, r1, r0
   426e8:	cmp	r5, r6
   426ec:	bhi	426b0 <flatcc_json_printer_float_vector_field@@Base+0x280>
   426f0:	b	425fc <flatcc_json_printer_float_vector_field@@Base+0x1cc>
   426f4:	ldr	r1, [r4, #16]
   426f8:	cmp	r0, r1
   426fc:	bcc	42614 <flatcc_json_printer_float_vector_field@@Base+0x1e4>
   42700:	ldr	r2, [r4, #44]	; 0x2c
   42704:	mov	r0, r4
   42708:	mov	r1, #0
   4270c:	blx	r2
   42710:	ldr	r0, [r4, #20]
   42714:	b	42614 <flatcc_json_printer_float_vector_field@@Base+0x1e4>
   42718:	ldrb	r1, [r4, #25]
   4271c:	ldr	r0, [r4, #20]
   42720:	cmp	r1, #0
   42724:	beq	427e4 <flatcc_json_printer_float_vector_field@@Base+0x3b4>
   42728:	add	r1, r0, #1
   4272c:	str	r1, [r4, #20]
   42730:	mov	r1, #10
   42734:	strb	r1, [r0]
   42738:	ldr	r0, [r4, #32]
   4273c:	sub	r2, r0, #1
   42740:	str	r2, [r4, #32]
   42744:	ldrb	r3, [r4, #25]
   42748:	ldr	r0, [r4, #20]
   4274c:	ldr	r1, [r4, #16]
   42750:	mla	r7, r2, r3, r0
   42754:	mul	r5, r2, r3
   42758:	cmp	r7, r1
   4275c:	bls	427cc <flatcc_json_printer_float_vector_field@@Base+0x39c>
   42760:	cmp	r0, r1
   42764:	bcc	42780 <flatcc_json_printer_float_vector_field@@Base+0x350>
   42768:	ldr	r2, [r4, #44]	; 0x2c
   4276c:	mov	r0, r4
   42770:	mov	r1, #0
   42774:	blx	r2
   42778:	ldr	r1, [r4, #16]
   4277c:	ldr	r0, [r4, #20]
   42780:	sub	r6, r1, r0
   42784:	cmp	r6, r5
   42788:	bcs	427cc <flatcc_json_printer_float_vector_field@@Base+0x39c>
   4278c:	mov	r1, #32
   42790:	mov	r2, r6
   42794:	bl	14eec <memset@plt>
   42798:	ldr	r0, [r4, #20]
   4279c:	ldr	r2, [r4, #44]	; 0x2c
   427a0:	mov	r1, #0
   427a4:	add	r0, r0, r6
   427a8:	str	r0, [r4, #20]
   427ac:	mov	r0, r4
   427b0:	blx	r2
   427b4:	ldr	r1, [r4, #16]
   427b8:	ldr	r0, [r4, #20]
   427bc:	sub	r5, r5, r6
   427c0:	sub	r6, r1, r0
   427c4:	cmp	r5, r6
   427c8:	bhi	4278c <flatcc_json_printer_float_vector_field@@Base+0x35c>
   427cc:	mov	r1, #32
   427d0:	mov	r2, r5
   427d4:	bl	14eec <memset@plt>
   427d8:	ldr	r0, [r4, #20]
   427dc:	add	r0, r0, r5
   427e0:	str	r0, [r4, #20]
   427e4:	add	r1, r0, #1
   427e8:	str	r1, [r4, #20]
   427ec:	mov	r1, #93	; 0x5d
   427f0:	strb	r1, [r0]
   427f4:	sub	sp, fp, #28
   427f8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

000427fc <flatcc_json_printer_double_vector_field@@Base>:
   427fc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   42800:	add	fp, sp, #28
   42804:	sub	sp, sp, #4
   42808:	mov	r4, r0
   4280c:	mov	r0, #4
   42810:	add	r0, r0, r2, lsl #1
   42814:	ldr	r2, [r1, #8]
   42818:	cmp	r0, r2
   4281c:	bge	4283c <flatcc_json_printer_double_vector_field@@Base+0x40>
   42820:	ldr	r2, [r1, #4]
   42824:	add	r0, r2, r0
   42828:	ldrh	r0, [r0]
   4282c:	cmp	r0, #0
   42830:	ldrne	r2, [r1]
   42834:	addsne	r8, r2, r0
   42838:	bne	42844 <flatcc_json_printer_double_vector_field@@Base+0x48>
   4283c:	sub	sp, fp, #28
   42840:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   42844:	ldr	r0, [r1, #16]
   42848:	ldr	r2, [fp, #8]
   4284c:	add	r7, r0, #1
   42850:	cmp	r0, #0
   42854:	str	r7, [r1, #16]
   42858:	beq	42870 <flatcc_json_printer_double_vector_field@@Base+0x74>
   4285c:	ldr	r0, [r4, #20]
   42860:	add	r1, r0, #1
   42864:	str	r1, [r4, #20]
   42868:	mov	r1, #44	; 0x2c
   4286c:	strb	r1, [r0]
   42870:	ldr	r0, [r8]
   42874:	mov	r1, r3
   42878:	ldr	r7, [r8, r0]!
   4287c:	mov	r0, r4
   42880:	bl	3d354 <flatcc_json_printer_string_field@@Base+0x90>
   42884:	ldr	r1, [r4, #32]
   42888:	ldr	r0, [r4, #20]
   4288c:	cmp	r7, #0
   42890:	add	r1, r1, #1
   42894:	str	r1, [r4, #32]
   42898:	add	r1, r0, #1
   4289c:	str	r1, [r4, #20]
   428a0:	mov	r1, #91	; 0x5b
   428a4:	strb	r1, [r0]
   428a8:	beq	42adc <flatcc_json_printer_double_vector_field@@Base+0x2e0>
   428ac:	ldrb	r1, [r4, #25]
   428b0:	ldr	r0, [r4, #20]
   428b4:	cmp	r1, #0
   428b8:	beq	42974 <flatcc_json_printer_double_vector_field@@Base+0x178>
   428bc:	add	r1, r0, #1
   428c0:	str	r1, [r4, #20]
   428c4:	mov	r1, #10
   428c8:	strb	r1, [r0]
   428cc:	ldr	r0, [r4, #20]
   428d0:	ldrb	r2, [r4, #25]
   428d4:	ldr	r3, [r4, #32]
   428d8:	ldr	r1, [r4, #16]
   428dc:	mla	r6, r3, r2, r0
   428e0:	mul	r5, r3, r2
   428e4:	cmp	r6, r1
   428e8:	bls	42958 <flatcc_json_printer_double_vector_field@@Base+0x15c>
   428ec:	cmp	r0, r1
   428f0:	bcc	4290c <flatcc_json_printer_double_vector_field@@Base+0x110>
   428f4:	ldr	r2, [r4, #44]	; 0x2c
   428f8:	mov	r0, r4
   428fc:	mov	r1, #0
   42900:	blx	r2
   42904:	ldr	r1, [r4, #16]
   42908:	ldr	r0, [r4, #20]
   4290c:	sub	r6, r1, r0
   42910:	cmp	r6, r5
   42914:	bcs	42958 <flatcc_json_printer_double_vector_field@@Base+0x15c>
   42918:	mov	r1, #32
   4291c:	mov	r2, r6
   42920:	bl	14eec <memset@plt>
   42924:	ldr	r0, [r4, #20]
   42928:	ldr	r2, [r4, #44]	; 0x2c
   4292c:	mov	r1, #0
   42930:	add	r0, r0, r6
   42934:	str	r0, [r4, #20]
   42938:	mov	r0, r4
   4293c:	blx	r2
   42940:	ldr	r1, [r4, #16]
   42944:	ldr	r0, [r4, #20]
   42948:	sub	r5, r5, r6
   4294c:	sub	r6, r1, r0
   42950:	cmp	r5, r6
   42954:	bhi	42918 <flatcc_json_printer_double_vector_field@@Base+0x11c>
   42958:	mov	r1, #32
   4295c:	mov	r2, r5
   42960:	bl	14eec <memset@plt>
   42964:	ldr	r0, [r4, #20]
   42968:	add	r0, r0, r5
   4296c:	str	r0, [r4, #20]
   42970:	b	42994 <flatcc_json_printer_double_vector_field@@Base+0x198>
   42974:	ldr	r1, [r4, #16]
   42978:	cmp	r0, r1
   4297c:	bcc	42994 <flatcc_json_printer_double_vector_field@@Base+0x198>
   42980:	ldr	r2, [r4, #44]	; 0x2c
   42984:	mov	r0, r4
   42988:	mov	r1, #0
   4298c:	blx	r2
   42990:	ldr	r0, [r4, #20]
   42994:	vldr	d0, [r8, #4]
   42998:	bl	3af80 <flatcc_json_printer_fmt_float@@Base+0x8>
   4299c:	ldr	r1, [r4, #20]
   429a0:	subs	r9, r7, #1
   429a4:	add	r0, r1, r0
   429a8:	str	r0, [r4, #20]
   429ac:	beq	42adc <flatcc_json_printer_double_vector_field@@Base+0x2e0>
   429b0:	ldr	r0, [r4, #20]
   429b4:	add	r7, r8, #12
   429b8:	mov	r8, #44	; 0x2c
   429bc:	mov	sl, #10
   429c0:	b	429fc <flatcc_json_printer_double_vector_field@@Base+0x200>
   429c4:	mov	r1, #32
   429c8:	mov	r2, r5
   429cc:	bl	14eec <memset@plt>
   429d0:	ldr	r0, [r4, #20]
   429d4:	add	r0, r0, r5
   429d8:	str	r0, [r4, #20]
   429dc:	vldr	d0, [r7]
   429e0:	bl	3af80 <flatcc_json_printer_fmt_float@@Base+0x8>
   429e4:	ldr	r1, [r4, #20]
   429e8:	add	r7, r7, #8
   429ec:	cmp	r9, #0
   429f0:	add	r0, r1, r0
   429f4:	str	r0, [r4, #20]
   429f8:	beq	42adc <flatcc_json_printer_double_vector_field@@Base+0x2e0>
   429fc:	add	r1, r0, #1
   42a00:	sub	r9, r9, #1
   42a04:	str	r1, [r4, #20]
   42a08:	strb	r8, [r0]
   42a0c:	ldrb	r1, [r4, #25]
   42a10:	ldr	r0, [r4, #20]
   42a14:	cmp	r1, #0
   42a18:	beq	42ab8 <flatcc_json_printer_double_vector_field@@Base+0x2bc>
   42a1c:	add	r1, r0, #1
   42a20:	str	r1, [r4, #20]
   42a24:	strb	sl, [r0]
   42a28:	ldr	r0, [r4, #20]
   42a2c:	ldrb	r2, [r4, #25]
   42a30:	ldr	r3, [r4, #32]
   42a34:	ldr	r1, [r4, #16]
   42a38:	mla	r6, r3, r2, r0
   42a3c:	mul	r5, r3, r2
   42a40:	cmp	r6, r1
   42a44:	bls	429c4 <flatcc_json_printer_double_vector_field@@Base+0x1c8>
   42a48:	cmp	r0, r1
   42a4c:	bcc	42a68 <flatcc_json_printer_double_vector_field@@Base+0x26c>
   42a50:	ldr	r2, [r4, #44]	; 0x2c
   42a54:	mov	r0, r4
   42a58:	mov	r1, #0
   42a5c:	blx	r2
   42a60:	ldr	r1, [r4, #16]
   42a64:	ldr	r0, [r4, #20]
   42a68:	sub	r6, r1, r0
   42a6c:	cmp	r6, r5
   42a70:	bcs	429c4 <flatcc_json_printer_double_vector_field@@Base+0x1c8>
   42a74:	mov	r1, #32
   42a78:	mov	r2, r6
   42a7c:	bl	14eec <memset@plt>
   42a80:	ldr	r0, [r4, #20]
   42a84:	ldr	r2, [r4, #44]	; 0x2c
   42a88:	mov	r1, #0
   42a8c:	add	r0, r0, r6
   42a90:	str	r0, [r4, #20]
   42a94:	mov	r0, r4
   42a98:	blx	r2
   42a9c:	ldr	r1, [r4, #16]
   42aa0:	ldr	r0, [r4, #20]
   42aa4:	sub	r5, r5, r6
   42aa8:	sub	r6, r1, r0
   42aac:	cmp	r5, r6
   42ab0:	bhi	42a74 <flatcc_json_printer_double_vector_field@@Base+0x278>
   42ab4:	b	429c4 <flatcc_json_printer_double_vector_field@@Base+0x1c8>
   42ab8:	ldr	r1, [r4, #16]
   42abc:	cmp	r0, r1
   42ac0:	bcc	429dc <flatcc_json_printer_double_vector_field@@Base+0x1e0>
   42ac4:	ldr	r2, [r4, #44]	; 0x2c
   42ac8:	mov	r0, r4
   42acc:	mov	r1, #0
   42ad0:	blx	r2
   42ad4:	ldr	r0, [r4, #20]
   42ad8:	b	429dc <flatcc_json_printer_double_vector_field@@Base+0x1e0>
   42adc:	ldrb	r1, [r4, #25]
   42ae0:	ldr	r0, [r4, #20]
   42ae4:	cmp	r1, #0
   42ae8:	beq	42ba8 <flatcc_json_printer_double_vector_field@@Base+0x3ac>
   42aec:	add	r1, r0, #1
   42af0:	str	r1, [r4, #20]
   42af4:	mov	r1, #10
   42af8:	strb	r1, [r0]
   42afc:	ldr	r0, [r4, #32]
   42b00:	sub	r2, r0, #1
   42b04:	str	r2, [r4, #32]
   42b08:	ldrb	r3, [r4, #25]
   42b0c:	ldr	r0, [r4, #20]
   42b10:	ldr	r1, [r4, #16]
   42b14:	mla	r7, r2, r3, r0
   42b18:	mul	r5, r2, r3
   42b1c:	cmp	r7, r1
   42b20:	bls	42b90 <flatcc_json_printer_double_vector_field@@Base+0x394>
   42b24:	cmp	r0, r1
   42b28:	bcc	42b44 <flatcc_json_printer_double_vector_field@@Base+0x348>
   42b2c:	ldr	r2, [r4, #44]	; 0x2c
   42b30:	mov	r0, r4
   42b34:	mov	r1, #0
   42b38:	blx	r2
   42b3c:	ldr	r1, [r4, #16]
   42b40:	ldr	r0, [r4, #20]
   42b44:	sub	r6, r1, r0
   42b48:	cmp	r6, r5
   42b4c:	bcs	42b90 <flatcc_json_printer_double_vector_field@@Base+0x394>
   42b50:	mov	r1, #32
   42b54:	mov	r2, r6
   42b58:	bl	14eec <memset@plt>
   42b5c:	ldr	r0, [r4, #20]
   42b60:	ldr	r2, [r4, #44]	; 0x2c
   42b64:	mov	r1, #0
   42b68:	add	r0, r0, r6
   42b6c:	str	r0, [r4, #20]
   42b70:	mov	r0, r4
   42b74:	blx	r2
   42b78:	ldr	r1, [r4, #16]
   42b7c:	ldr	r0, [r4, #20]
   42b80:	sub	r5, r5, r6
   42b84:	sub	r6, r1, r0
   42b88:	cmp	r5, r6
   42b8c:	bhi	42b50 <flatcc_json_printer_double_vector_field@@Base+0x354>
   42b90:	mov	r1, #32
   42b94:	mov	r2, r5
   42b98:	bl	14eec <memset@plt>
   42b9c:	ldr	r0, [r4, #20]
   42ba0:	add	r0, r0, r5
   42ba4:	str	r0, [r4, #20]
   42ba8:	add	r1, r0, #1
   42bac:	str	r1, [r4, #20]
   42bb0:	mov	r1, #93	; 0x5d
   42bb4:	strb	r1, [r0]
   42bb8:	sub	sp, fp, #28
   42bbc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00042bc0 <flatcc_json_printer_utype_enum_vector_field@@Base>:
   42bc0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   42bc4:	add	fp, sp, #28
   42bc8:	sub	sp, sp, #4
   42bcc:	mov	r4, r0
   42bd0:	ldrb	r0, [r0, #27]
   42bd4:	cmp	r0, #0
   42bd8:	beq	42bec <flatcc_json_printer_utype_enum_vector_field@@Base+0x2c>
   42bdc:	mov	r0, r4
   42be0:	sub	sp, fp, #28
   42be4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   42be8:	b	3f920 <flatcc_json_printer_utype_vector_field@@Base>
   42bec:	mov	r0, #4
   42bf0:	add	r0, r0, r2, lsl #1
   42bf4:	ldr	r2, [r1, #8]
   42bf8:	cmp	r0, r2
   42bfc:	bge	42c1c <flatcc_json_printer_utype_enum_vector_field@@Base+0x5c>
   42c00:	ldr	r2, [r1, #4]
   42c04:	add	r0, r2, r0
   42c08:	ldrh	r0, [r0]
   42c0c:	cmp	r0, #0
   42c10:	ldrne	r2, [r1]
   42c14:	addsne	r8, r2, r0
   42c18:	bne	42c24 <flatcc_json_printer_utype_enum_vector_field@@Base+0x64>
   42c1c:	sub	sp, fp, #28
   42c20:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   42c24:	ldr	r0, [r1, #16]
   42c28:	ldr	sl, [fp, #12]
   42c2c:	ldr	r2, [fp, #8]
   42c30:	add	r7, r0, #1
   42c34:	cmp	r0, #0
   42c38:	str	r7, [r1, #16]
   42c3c:	beq	42c54 <flatcc_json_printer_utype_enum_vector_field@@Base+0x94>
   42c40:	ldr	r0, [r4, #20]
   42c44:	add	r1, r0, #1
   42c48:	str	r1, [r4, #20]
   42c4c:	mov	r1, #44	; 0x2c
   42c50:	strb	r1, [r0]
   42c54:	ldr	r0, [r8]
   42c58:	mov	r1, r3
   42c5c:	ldr	r9, [r8, r0]!
   42c60:	mov	r0, r4
   42c64:	bl	3d354 <flatcc_json_printer_string_field@@Base+0x90>
   42c68:	ldr	r1, [r4, #32]
   42c6c:	ldr	r0, [r4, #20]
   42c70:	cmp	r9, #0
   42c74:	add	r1, r1, #1
   42c78:	str	r1, [r4, #32]
   42c7c:	add	r1, r0, #1
   42c80:	str	r1, [r4, #20]
   42c84:	mov	r1, #91	; 0x5b
   42c88:	strb	r1, [r0]
   42c8c:	beq	42ea4 <flatcc_json_printer_utype_enum_vector_field@@Base+0x2e4>
   42c90:	ldrb	r1, [r4, #25]
   42c94:	ldr	r0, [r4, #20]
   42c98:	cmp	r1, #0
   42c9c:	beq	42d58 <flatcc_json_printer_utype_enum_vector_field@@Base+0x198>
   42ca0:	add	r1, r0, #1
   42ca4:	str	r1, [r4, #20]
   42ca8:	mov	r1, #10
   42cac:	strb	r1, [r0]
   42cb0:	ldr	r0, [r4, #20]
   42cb4:	ldrb	r2, [r4, #25]
   42cb8:	ldr	r3, [r4, #32]
   42cbc:	ldr	r1, [r4, #16]
   42cc0:	mla	r7, r3, r2, r0
   42cc4:	mul	r5, r3, r2
   42cc8:	cmp	r7, r1
   42ccc:	bls	42d3c <flatcc_json_printer_utype_enum_vector_field@@Base+0x17c>
   42cd0:	cmp	r0, r1
   42cd4:	bcc	42cf0 <flatcc_json_printer_utype_enum_vector_field@@Base+0x130>
   42cd8:	ldr	r2, [r4, #44]	; 0x2c
   42cdc:	mov	r0, r4
   42ce0:	mov	r1, #0
   42ce4:	blx	r2
   42ce8:	ldr	r1, [r4, #16]
   42cec:	ldr	r0, [r4, #20]
   42cf0:	sub	r6, r1, r0
   42cf4:	cmp	r6, r5
   42cf8:	bcs	42d3c <flatcc_json_printer_utype_enum_vector_field@@Base+0x17c>
   42cfc:	mov	r1, #32
   42d00:	mov	r2, r6
   42d04:	bl	14eec <memset@plt>
   42d08:	ldr	r0, [r4, #20]
   42d0c:	ldr	r2, [r4, #44]	; 0x2c
   42d10:	mov	r1, #0
   42d14:	add	r0, r0, r6
   42d18:	str	r0, [r4, #20]
   42d1c:	mov	r0, r4
   42d20:	blx	r2
   42d24:	ldr	r1, [r4, #16]
   42d28:	ldr	r0, [r4, #20]
   42d2c:	sub	r5, r5, r6
   42d30:	sub	r6, r1, r0
   42d34:	cmp	r5, r6
   42d38:	bhi	42cfc <flatcc_json_printer_utype_enum_vector_field@@Base+0x13c>
   42d3c:	mov	r1, #32
   42d40:	mov	r2, r5
   42d44:	bl	14eec <memset@plt>
   42d48:	ldr	r0, [r4, #20]
   42d4c:	add	r0, r0, r5
   42d50:	str	r0, [r4, #20]
   42d54:	b	42d74 <flatcc_json_printer_utype_enum_vector_field@@Base+0x1b4>
   42d58:	ldr	r1, [r4, #16]
   42d5c:	cmp	r0, r1
   42d60:	bcc	42d74 <flatcc_json_printer_utype_enum_vector_field@@Base+0x1b4>
   42d64:	ldr	r2, [r4, #44]	; 0x2c
   42d68:	mov	r0, r4
   42d6c:	mov	r1, #0
   42d70:	blx	r2
   42d74:	ldrb	r1, [r8, #4]
   42d78:	mov	r0, r4
   42d7c:	blx	sl
   42d80:	subs	r9, r9, #1
   42d84:	beq	42ea4 <flatcc_json_printer_utype_enum_vector_field@@Base+0x2e4>
   42d88:	add	r7, r8, #5
   42d8c:	mov	r8, #44	; 0x2c
   42d90:	b	42dc0 <flatcc_json_printer_utype_enum_vector_field@@Base+0x200>
   42d94:	mov	r1, #32
   42d98:	mov	r2, r5
   42d9c:	bl	14eec <memset@plt>
   42da0:	ldr	r0, [r4, #20]
   42da4:	add	r0, r0, r5
   42da8:	str	r0, [r4, #20]
   42dac:	ldrb	r1, [r7], #1
   42db0:	mov	r0, r4
   42db4:	blx	sl
   42db8:	cmp	r9, #0
   42dbc:	beq	42ea4 <flatcc_json_printer_utype_enum_vector_field@@Base+0x2e4>
   42dc0:	ldr	r0, [r4, #20]
   42dc4:	sub	r9, r9, #1
   42dc8:	add	r1, r0, #1
   42dcc:	str	r1, [r4, #20]
   42dd0:	strb	r8, [r0]
   42dd4:	ldrb	r1, [r4, #25]
   42dd8:	ldr	r0, [r4, #20]
   42ddc:	cmp	r1, #0
   42de0:	beq	42e84 <flatcc_json_printer_utype_enum_vector_field@@Base+0x2c4>
   42de4:	add	r1, r0, #1
   42de8:	str	r1, [r4, #20]
   42dec:	mov	r1, #10
   42df0:	strb	r1, [r0]
   42df4:	ldr	r0, [r4, #20]
   42df8:	ldrb	r2, [r4, #25]
   42dfc:	ldr	r3, [r4, #32]
   42e00:	ldr	r1, [r4, #16]
   42e04:	mla	r6, r3, r2, r0
   42e08:	mul	r5, r3, r2
   42e0c:	cmp	r6, r1
   42e10:	bls	42d94 <flatcc_json_printer_utype_enum_vector_field@@Base+0x1d4>
   42e14:	cmp	r0, r1
   42e18:	bcc	42e34 <flatcc_json_printer_utype_enum_vector_field@@Base+0x274>
   42e1c:	ldr	r2, [r4, #44]	; 0x2c
   42e20:	mov	r0, r4
   42e24:	mov	r1, #0
   42e28:	blx	r2
   42e2c:	ldr	r1, [r4, #16]
   42e30:	ldr	r0, [r4, #20]
   42e34:	sub	r6, r1, r0
   42e38:	cmp	r6, r5
   42e3c:	bcs	42d94 <flatcc_json_printer_utype_enum_vector_field@@Base+0x1d4>
   42e40:	mov	r1, #32
   42e44:	mov	r2, r6
   42e48:	bl	14eec <memset@plt>
   42e4c:	ldr	r0, [r4, #20]
   42e50:	ldr	r2, [r4, #44]	; 0x2c
   42e54:	mov	r1, #0
   42e58:	add	r0, r0, r6
   42e5c:	str	r0, [r4, #20]
   42e60:	mov	r0, r4
   42e64:	blx	r2
   42e68:	ldr	r1, [r4, #16]
   42e6c:	ldr	r0, [r4, #20]
   42e70:	sub	r5, r5, r6
   42e74:	sub	r6, r1, r0
   42e78:	cmp	r5, r6
   42e7c:	bhi	42e40 <flatcc_json_printer_utype_enum_vector_field@@Base+0x280>
   42e80:	b	42d94 <flatcc_json_printer_utype_enum_vector_field@@Base+0x1d4>
   42e84:	ldr	r1, [r4, #16]
   42e88:	cmp	r0, r1
   42e8c:	bcc	42dac <flatcc_json_printer_utype_enum_vector_field@@Base+0x1ec>
   42e90:	ldr	r2, [r4, #44]	; 0x2c
   42e94:	mov	r0, r4
   42e98:	mov	r1, #0
   42e9c:	blx	r2
   42ea0:	b	42dac <flatcc_json_printer_utype_enum_vector_field@@Base+0x1ec>
   42ea4:	ldrb	r1, [r4, #25]
   42ea8:	ldr	r0, [r4, #20]
   42eac:	cmp	r1, #0
   42eb0:	beq	42f70 <flatcc_json_printer_utype_enum_vector_field@@Base+0x3b0>
   42eb4:	add	r1, r0, #1
   42eb8:	str	r1, [r4, #20]
   42ebc:	mov	r1, #10
   42ec0:	strb	r1, [r0]
   42ec4:	ldr	r0, [r4, #32]
   42ec8:	sub	r2, r0, #1
   42ecc:	str	r2, [r4, #32]
   42ed0:	ldrb	r3, [r4, #25]
   42ed4:	ldr	r0, [r4, #20]
   42ed8:	ldr	r1, [r4, #16]
   42edc:	mla	r7, r2, r3, r0
   42ee0:	mul	r5, r2, r3
   42ee4:	cmp	r7, r1
   42ee8:	bls	42f58 <flatcc_json_printer_utype_enum_vector_field@@Base+0x398>
   42eec:	cmp	r0, r1
   42ef0:	bcc	42f0c <flatcc_json_printer_utype_enum_vector_field@@Base+0x34c>
   42ef4:	ldr	r2, [r4, #44]	; 0x2c
   42ef8:	mov	r0, r4
   42efc:	mov	r1, #0
   42f00:	blx	r2
   42f04:	ldr	r1, [r4, #16]
   42f08:	ldr	r0, [r4, #20]
   42f0c:	sub	r6, r1, r0
   42f10:	cmp	r6, r5
   42f14:	bcs	42f58 <flatcc_json_printer_utype_enum_vector_field@@Base+0x398>
   42f18:	mov	r1, #32
   42f1c:	mov	r2, r6
   42f20:	bl	14eec <memset@plt>
   42f24:	ldr	r0, [r4, #20]
   42f28:	ldr	r2, [r4, #44]	; 0x2c
   42f2c:	mov	r1, #0
   42f30:	add	r0, r0, r6
   42f34:	str	r0, [r4, #20]
   42f38:	mov	r0, r4
   42f3c:	blx	r2
   42f40:	ldr	r1, [r4, #16]
   42f44:	ldr	r0, [r4, #20]
   42f48:	sub	r5, r5, r6
   42f4c:	sub	r6, r1, r0
   42f50:	cmp	r5, r6
   42f54:	bhi	42f18 <flatcc_json_printer_utype_enum_vector_field@@Base+0x358>
   42f58:	mov	r1, #32
   42f5c:	mov	r2, r5
   42f60:	bl	14eec <memset@plt>
   42f64:	ldr	r0, [r4, #20]
   42f68:	add	r0, r0, r5
   42f6c:	str	r0, [r4, #20]
   42f70:	add	r1, r0, #1
   42f74:	str	r1, [r4, #20]
   42f78:	mov	r1, #93	; 0x5d
   42f7c:	strb	r1, [r0]
   42f80:	sub	sp, fp, #28
   42f84:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00042f88 <flatcc_json_printer_uint8_enum_vector_field@@Base>:
   42f88:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   42f8c:	add	fp, sp, #28
   42f90:	sub	sp, sp, #4
   42f94:	mov	r4, r0
   42f98:	ldrb	r0, [r0, #27]
   42f9c:	cmp	r0, #0
   42fa0:	beq	42fb4 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x2c>
   42fa4:	mov	r0, r4
   42fa8:	sub	sp, fp, #28
   42fac:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   42fb0:	b	3fe40 <flatcc_json_printer_uint8_vector_field@@Base>
   42fb4:	mov	r0, #4
   42fb8:	add	r0, r0, r2, lsl #1
   42fbc:	ldr	r2, [r1, #8]
   42fc0:	cmp	r0, r2
   42fc4:	bge	42fe4 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x5c>
   42fc8:	ldr	r2, [r1, #4]
   42fcc:	add	r0, r2, r0
   42fd0:	ldrh	r0, [r0]
   42fd4:	cmp	r0, #0
   42fd8:	ldrne	r2, [r1]
   42fdc:	addsne	r8, r2, r0
   42fe0:	bne	42fec <flatcc_json_printer_uint8_enum_vector_field@@Base+0x64>
   42fe4:	sub	sp, fp, #28
   42fe8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   42fec:	ldr	r0, [r1, #16]
   42ff0:	ldr	sl, [fp, #12]
   42ff4:	ldr	r2, [fp, #8]
   42ff8:	add	r7, r0, #1
   42ffc:	cmp	r0, #0
   43000:	str	r7, [r1, #16]
   43004:	beq	4301c <flatcc_json_printer_uint8_enum_vector_field@@Base+0x94>
   43008:	ldr	r0, [r4, #20]
   4300c:	add	r1, r0, #1
   43010:	str	r1, [r4, #20]
   43014:	mov	r1, #44	; 0x2c
   43018:	strb	r1, [r0]
   4301c:	ldr	r0, [r8]
   43020:	mov	r1, r3
   43024:	ldr	r9, [r8, r0]!
   43028:	mov	r0, r4
   4302c:	bl	3d354 <flatcc_json_printer_string_field@@Base+0x90>
   43030:	ldr	r1, [r4, #32]
   43034:	ldr	r0, [r4, #20]
   43038:	cmp	r9, #0
   4303c:	add	r1, r1, #1
   43040:	str	r1, [r4, #32]
   43044:	add	r1, r0, #1
   43048:	str	r1, [r4, #20]
   4304c:	mov	r1, #91	; 0x5b
   43050:	strb	r1, [r0]
   43054:	beq	4326c <flatcc_json_printer_uint8_enum_vector_field@@Base+0x2e4>
   43058:	ldrb	r1, [r4, #25]
   4305c:	ldr	r0, [r4, #20]
   43060:	cmp	r1, #0
   43064:	beq	43120 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x198>
   43068:	add	r1, r0, #1
   4306c:	str	r1, [r4, #20]
   43070:	mov	r1, #10
   43074:	strb	r1, [r0]
   43078:	ldr	r0, [r4, #20]
   4307c:	ldrb	r2, [r4, #25]
   43080:	ldr	r3, [r4, #32]
   43084:	ldr	r1, [r4, #16]
   43088:	mla	r7, r3, r2, r0
   4308c:	mul	r5, r3, r2
   43090:	cmp	r7, r1
   43094:	bls	43104 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x17c>
   43098:	cmp	r0, r1
   4309c:	bcc	430b8 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x130>
   430a0:	ldr	r2, [r4, #44]	; 0x2c
   430a4:	mov	r0, r4
   430a8:	mov	r1, #0
   430ac:	blx	r2
   430b0:	ldr	r1, [r4, #16]
   430b4:	ldr	r0, [r4, #20]
   430b8:	sub	r6, r1, r0
   430bc:	cmp	r6, r5
   430c0:	bcs	43104 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x17c>
   430c4:	mov	r1, #32
   430c8:	mov	r2, r6
   430cc:	bl	14eec <memset@plt>
   430d0:	ldr	r0, [r4, #20]
   430d4:	ldr	r2, [r4, #44]	; 0x2c
   430d8:	mov	r1, #0
   430dc:	add	r0, r0, r6
   430e0:	str	r0, [r4, #20]
   430e4:	mov	r0, r4
   430e8:	blx	r2
   430ec:	ldr	r1, [r4, #16]
   430f0:	ldr	r0, [r4, #20]
   430f4:	sub	r5, r5, r6
   430f8:	sub	r6, r1, r0
   430fc:	cmp	r5, r6
   43100:	bhi	430c4 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x13c>
   43104:	mov	r1, #32
   43108:	mov	r2, r5
   4310c:	bl	14eec <memset@plt>
   43110:	ldr	r0, [r4, #20]
   43114:	add	r0, r0, r5
   43118:	str	r0, [r4, #20]
   4311c:	b	4313c <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1b4>
   43120:	ldr	r1, [r4, #16]
   43124:	cmp	r0, r1
   43128:	bcc	4313c <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1b4>
   4312c:	ldr	r2, [r4, #44]	; 0x2c
   43130:	mov	r0, r4
   43134:	mov	r1, #0
   43138:	blx	r2
   4313c:	ldrb	r1, [r8, #4]
   43140:	mov	r0, r4
   43144:	blx	sl
   43148:	subs	r9, r9, #1
   4314c:	beq	4326c <flatcc_json_printer_uint8_enum_vector_field@@Base+0x2e4>
   43150:	add	r7, r8, #5
   43154:	mov	r8, #44	; 0x2c
   43158:	b	43188 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x200>
   4315c:	mov	r1, #32
   43160:	mov	r2, r5
   43164:	bl	14eec <memset@plt>
   43168:	ldr	r0, [r4, #20]
   4316c:	add	r0, r0, r5
   43170:	str	r0, [r4, #20]
   43174:	ldrb	r1, [r7], #1
   43178:	mov	r0, r4
   4317c:	blx	sl
   43180:	cmp	r9, #0
   43184:	beq	4326c <flatcc_json_printer_uint8_enum_vector_field@@Base+0x2e4>
   43188:	ldr	r0, [r4, #20]
   4318c:	sub	r9, r9, #1
   43190:	add	r1, r0, #1
   43194:	str	r1, [r4, #20]
   43198:	strb	r8, [r0]
   4319c:	ldrb	r1, [r4, #25]
   431a0:	ldr	r0, [r4, #20]
   431a4:	cmp	r1, #0
   431a8:	beq	4324c <flatcc_json_printer_uint8_enum_vector_field@@Base+0x2c4>
   431ac:	add	r1, r0, #1
   431b0:	str	r1, [r4, #20]
   431b4:	mov	r1, #10
   431b8:	strb	r1, [r0]
   431bc:	ldr	r0, [r4, #20]
   431c0:	ldrb	r2, [r4, #25]
   431c4:	ldr	r3, [r4, #32]
   431c8:	ldr	r1, [r4, #16]
   431cc:	mla	r6, r3, r2, r0
   431d0:	mul	r5, r3, r2
   431d4:	cmp	r6, r1
   431d8:	bls	4315c <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1d4>
   431dc:	cmp	r0, r1
   431e0:	bcc	431fc <flatcc_json_printer_uint8_enum_vector_field@@Base+0x274>
   431e4:	ldr	r2, [r4, #44]	; 0x2c
   431e8:	mov	r0, r4
   431ec:	mov	r1, #0
   431f0:	blx	r2
   431f4:	ldr	r1, [r4, #16]
   431f8:	ldr	r0, [r4, #20]
   431fc:	sub	r6, r1, r0
   43200:	cmp	r6, r5
   43204:	bcs	4315c <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1d4>
   43208:	mov	r1, #32
   4320c:	mov	r2, r6
   43210:	bl	14eec <memset@plt>
   43214:	ldr	r0, [r4, #20]
   43218:	ldr	r2, [r4, #44]	; 0x2c
   4321c:	mov	r1, #0
   43220:	add	r0, r0, r6
   43224:	str	r0, [r4, #20]
   43228:	mov	r0, r4
   4322c:	blx	r2
   43230:	ldr	r1, [r4, #16]
   43234:	ldr	r0, [r4, #20]
   43238:	sub	r5, r5, r6
   4323c:	sub	r6, r1, r0
   43240:	cmp	r5, r6
   43244:	bhi	43208 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x280>
   43248:	b	4315c <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1d4>
   4324c:	ldr	r1, [r4, #16]
   43250:	cmp	r0, r1
   43254:	bcc	43174 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1ec>
   43258:	ldr	r2, [r4, #44]	; 0x2c
   4325c:	mov	r0, r4
   43260:	mov	r1, #0
   43264:	blx	r2
   43268:	b	43174 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x1ec>
   4326c:	ldrb	r1, [r4, #25]
   43270:	ldr	r0, [r4, #20]
   43274:	cmp	r1, #0
   43278:	beq	43338 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x3b0>
   4327c:	add	r1, r0, #1
   43280:	str	r1, [r4, #20]
   43284:	mov	r1, #10
   43288:	strb	r1, [r0]
   4328c:	ldr	r0, [r4, #32]
   43290:	sub	r2, r0, #1
   43294:	str	r2, [r4, #32]
   43298:	ldrb	r3, [r4, #25]
   4329c:	ldr	r0, [r4, #20]
   432a0:	ldr	r1, [r4, #16]
   432a4:	mla	r7, r2, r3, r0
   432a8:	mul	r5, r2, r3
   432ac:	cmp	r7, r1
   432b0:	bls	43320 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x398>
   432b4:	cmp	r0, r1
   432b8:	bcc	432d4 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x34c>
   432bc:	ldr	r2, [r4, #44]	; 0x2c
   432c0:	mov	r0, r4
   432c4:	mov	r1, #0
   432c8:	blx	r2
   432cc:	ldr	r1, [r4, #16]
   432d0:	ldr	r0, [r4, #20]
   432d4:	sub	r6, r1, r0
   432d8:	cmp	r6, r5
   432dc:	bcs	43320 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x398>
   432e0:	mov	r1, #32
   432e4:	mov	r2, r6
   432e8:	bl	14eec <memset@plt>
   432ec:	ldr	r0, [r4, #20]
   432f0:	ldr	r2, [r4, #44]	; 0x2c
   432f4:	mov	r1, #0
   432f8:	add	r0, r0, r6
   432fc:	str	r0, [r4, #20]
   43300:	mov	r0, r4
   43304:	blx	r2
   43308:	ldr	r1, [r4, #16]
   4330c:	ldr	r0, [r4, #20]
   43310:	sub	r5, r5, r6
   43314:	sub	r6, r1, r0
   43318:	cmp	r5, r6
   4331c:	bhi	432e0 <flatcc_json_printer_uint8_enum_vector_field@@Base+0x358>
   43320:	mov	r1, #32
   43324:	mov	r2, r5
   43328:	bl	14eec <memset@plt>
   4332c:	ldr	r0, [r4, #20]
   43330:	add	r0, r0, r5
   43334:	str	r0, [r4, #20]
   43338:	add	r1, r0, #1
   4333c:	str	r1, [r4, #20]
   43340:	mov	r1, #93	; 0x5d
   43344:	strb	r1, [r0]
   43348:	sub	sp, fp, #28
   4334c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00043350 <flatcc_json_printer_uint16_enum_vector_field@@Base>:
   43350:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   43354:	add	fp, sp, #28
   43358:	sub	sp, sp, #4
   4335c:	mov	r4, r0
   43360:	ldrb	r0, [r0, #27]
   43364:	cmp	r0, #0
   43368:	beq	4337c <flatcc_json_printer_uint16_enum_vector_field@@Base+0x2c>
   4336c:	mov	r0, r4
   43370:	sub	sp, fp, #28
   43374:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   43378:	b	40360 <flatcc_json_printer_uint16_vector_field@@Base>
   4337c:	mov	r0, #4
   43380:	add	r0, r0, r2, lsl #1
   43384:	ldr	r2, [r1, #8]
   43388:	cmp	r0, r2
   4338c:	bge	433ac <flatcc_json_printer_uint16_enum_vector_field@@Base+0x5c>
   43390:	ldr	r2, [r1, #4]
   43394:	add	r0, r2, r0
   43398:	ldrh	r0, [r0]
   4339c:	cmp	r0, #0
   433a0:	ldrne	r2, [r1]
   433a4:	addsne	r8, r2, r0
   433a8:	bne	433b4 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x64>
   433ac:	sub	sp, fp, #28
   433b0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   433b4:	ldr	r0, [r1, #16]
   433b8:	ldr	sl, [fp, #12]
   433bc:	ldr	r2, [fp, #8]
   433c0:	add	r7, r0, #1
   433c4:	cmp	r0, #0
   433c8:	str	r7, [r1, #16]
   433cc:	beq	433e4 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x94>
   433d0:	ldr	r0, [r4, #20]
   433d4:	add	r1, r0, #1
   433d8:	str	r1, [r4, #20]
   433dc:	mov	r1, #44	; 0x2c
   433e0:	strb	r1, [r0]
   433e4:	ldr	r0, [r8]
   433e8:	mov	r1, r3
   433ec:	ldr	r9, [r8, r0]!
   433f0:	mov	r0, r4
   433f4:	bl	3d354 <flatcc_json_printer_string_field@@Base+0x90>
   433f8:	ldr	r1, [r4, #32]
   433fc:	ldr	r0, [r4, #20]
   43400:	cmp	r9, #0
   43404:	add	r1, r1, #1
   43408:	str	r1, [r4, #32]
   4340c:	add	r1, r0, #1
   43410:	str	r1, [r4, #20]
   43414:	mov	r1, #91	; 0x5b
   43418:	strb	r1, [r0]
   4341c:	beq	43634 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x2e4>
   43420:	ldrb	r1, [r4, #25]
   43424:	ldr	r0, [r4, #20]
   43428:	cmp	r1, #0
   4342c:	beq	434e8 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x198>
   43430:	add	r1, r0, #1
   43434:	str	r1, [r4, #20]
   43438:	mov	r1, #10
   4343c:	strb	r1, [r0]
   43440:	ldr	r0, [r4, #20]
   43444:	ldrb	r2, [r4, #25]
   43448:	ldr	r3, [r4, #32]
   4344c:	ldr	r1, [r4, #16]
   43450:	mla	r7, r3, r2, r0
   43454:	mul	r5, r3, r2
   43458:	cmp	r7, r1
   4345c:	bls	434cc <flatcc_json_printer_uint16_enum_vector_field@@Base+0x17c>
   43460:	cmp	r0, r1
   43464:	bcc	43480 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x130>
   43468:	ldr	r2, [r4, #44]	; 0x2c
   4346c:	mov	r0, r4
   43470:	mov	r1, #0
   43474:	blx	r2
   43478:	ldr	r1, [r4, #16]
   4347c:	ldr	r0, [r4, #20]
   43480:	sub	r6, r1, r0
   43484:	cmp	r6, r5
   43488:	bcs	434cc <flatcc_json_printer_uint16_enum_vector_field@@Base+0x17c>
   4348c:	mov	r1, #32
   43490:	mov	r2, r6
   43494:	bl	14eec <memset@plt>
   43498:	ldr	r0, [r4, #20]
   4349c:	ldr	r2, [r4, #44]	; 0x2c
   434a0:	mov	r1, #0
   434a4:	add	r0, r0, r6
   434a8:	str	r0, [r4, #20]
   434ac:	mov	r0, r4
   434b0:	blx	r2
   434b4:	ldr	r1, [r4, #16]
   434b8:	ldr	r0, [r4, #20]
   434bc:	sub	r5, r5, r6
   434c0:	sub	r6, r1, r0
   434c4:	cmp	r5, r6
   434c8:	bhi	4348c <flatcc_json_printer_uint16_enum_vector_field@@Base+0x13c>
   434cc:	mov	r1, #32
   434d0:	mov	r2, r5
   434d4:	bl	14eec <memset@plt>
   434d8:	ldr	r0, [r4, #20]
   434dc:	add	r0, r0, r5
   434e0:	str	r0, [r4, #20]
   434e4:	b	43504 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1b4>
   434e8:	ldr	r1, [r4, #16]
   434ec:	cmp	r0, r1
   434f0:	bcc	43504 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1b4>
   434f4:	ldr	r2, [r4, #44]	; 0x2c
   434f8:	mov	r0, r4
   434fc:	mov	r1, #0
   43500:	blx	r2
   43504:	ldrh	r1, [r8, #4]
   43508:	mov	r0, r4
   4350c:	blx	sl
   43510:	subs	r9, r9, #1
   43514:	beq	43634 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x2e4>
   43518:	add	r7, r8, #6
   4351c:	mov	r8, #44	; 0x2c
   43520:	b	43550 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x200>
   43524:	mov	r1, #32
   43528:	mov	r2, r5
   4352c:	bl	14eec <memset@plt>
   43530:	ldr	r0, [r4, #20]
   43534:	add	r0, r0, r5
   43538:	str	r0, [r4, #20]
   4353c:	ldrh	r1, [r7], #2
   43540:	mov	r0, r4
   43544:	blx	sl
   43548:	cmp	r9, #0
   4354c:	beq	43634 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x2e4>
   43550:	ldr	r0, [r4, #20]
   43554:	sub	r9, r9, #1
   43558:	add	r1, r0, #1
   4355c:	str	r1, [r4, #20]
   43560:	strb	r8, [r0]
   43564:	ldrb	r1, [r4, #25]
   43568:	ldr	r0, [r4, #20]
   4356c:	cmp	r1, #0
   43570:	beq	43614 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x2c4>
   43574:	add	r1, r0, #1
   43578:	str	r1, [r4, #20]
   4357c:	mov	r1, #10
   43580:	strb	r1, [r0]
   43584:	ldr	r0, [r4, #20]
   43588:	ldrb	r2, [r4, #25]
   4358c:	ldr	r3, [r4, #32]
   43590:	ldr	r1, [r4, #16]
   43594:	mla	r6, r3, r2, r0
   43598:	mul	r5, r3, r2
   4359c:	cmp	r6, r1
   435a0:	bls	43524 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1d4>
   435a4:	cmp	r0, r1
   435a8:	bcc	435c4 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x274>
   435ac:	ldr	r2, [r4, #44]	; 0x2c
   435b0:	mov	r0, r4
   435b4:	mov	r1, #0
   435b8:	blx	r2
   435bc:	ldr	r1, [r4, #16]
   435c0:	ldr	r0, [r4, #20]
   435c4:	sub	r6, r1, r0
   435c8:	cmp	r6, r5
   435cc:	bcs	43524 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1d4>
   435d0:	mov	r1, #32
   435d4:	mov	r2, r6
   435d8:	bl	14eec <memset@plt>
   435dc:	ldr	r0, [r4, #20]
   435e0:	ldr	r2, [r4, #44]	; 0x2c
   435e4:	mov	r1, #0
   435e8:	add	r0, r0, r6
   435ec:	str	r0, [r4, #20]
   435f0:	mov	r0, r4
   435f4:	blx	r2
   435f8:	ldr	r1, [r4, #16]
   435fc:	ldr	r0, [r4, #20]
   43600:	sub	r5, r5, r6
   43604:	sub	r6, r1, r0
   43608:	cmp	r5, r6
   4360c:	bhi	435d0 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x280>
   43610:	b	43524 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1d4>
   43614:	ldr	r1, [r4, #16]
   43618:	cmp	r0, r1
   4361c:	bcc	4353c <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1ec>
   43620:	ldr	r2, [r4, #44]	; 0x2c
   43624:	mov	r0, r4
   43628:	mov	r1, #0
   4362c:	blx	r2
   43630:	b	4353c <flatcc_json_printer_uint16_enum_vector_field@@Base+0x1ec>
   43634:	ldrb	r1, [r4, #25]
   43638:	ldr	r0, [r4, #20]
   4363c:	cmp	r1, #0
   43640:	beq	43700 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x3b0>
   43644:	add	r1, r0, #1
   43648:	str	r1, [r4, #20]
   4364c:	mov	r1, #10
   43650:	strb	r1, [r0]
   43654:	ldr	r0, [r4, #32]
   43658:	sub	r2, r0, #1
   4365c:	str	r2, [r4, #32]
   43660:	ldrb	r3, [r4, #25]
   43664:	ldr	r0, [r4, #20]
   43668:	ldr	r1, [r4, #16]
   4366c:	mla	r7, r2, r3, r0
   43670:	mul	r5, r2, r3
   43674:	cmp	r7, r1
   43678:	bls	436e8 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x398>
   4367c:	cmp	r0, r1
   43680:	bcc	4369c <flatcc_json_printer_uint16_enum_vector_field@@Base+0x34c>
   43684:	ldr	r2, [r4, #44]	; 0x2c
   43688:	mov	r0, r4
   4368c:	mov	r1, #0
   43690:	blx	r2
   43694:	ldr	r1, [r4, #16]
   43698:	ldr	r0, [r4, #20]
   4369c:	sub	r6, r1, r0
   436a0:	cmp	r6, r5
   436a4:	bcs	436e8 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x398>
   436a8:	mov	r1, #32
   436ac:	mov	r2, r6
   436b0:	bl	14eec <memset@plt>
   436b4:	ldr	r0, [r4, #20]
   436b8:	ldr	r2, [r4, #44]	; 0x2c
   436bc:	mov	r1, #0
   436c0:	add	r0, r0, r6
   436c4:	str	r0, [r4, #20]
   436c8:	mov	r0, r4
   436cc:	blx	r2
   436d0:	ldr	r1, [r4, #16]
   436d4:	ldr	r0, [r4, #20]
   436d8:	sub	r5, r5, r6
   436dc:	sub	r6, r1, r0
   436e0:	cmp	r5, r6
   436e4:	bhi	436a8 <flatcc_json_printer_uint16_enum_vector_field@@Base+0x358>
   436e8:	mov	r1, #32
   436ec:	mov	r2, r5
   436f0:	bl	14eec <memset@plt>
   436f4:	ldr	r0, [r4, #20]
   436f8:	add	r0, r0, r5
   436fc:	str	r0, [r4, #20]
   43700:	add	r1, r0, #1
   43704:	str	r1, [r4, #20]
   43708:	mov	r1, #93	; 0x5d
   4370c:	strb	r1, [r0]
   43710:	sub	sp, fp, #28
   43714:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00043718 <flatcc_json_printer_uint32_enum_vector_field@@Base>:
   43718:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4371c:	add	fp, sp, #28
   43720:	sub	sp, sp, #4
   43724:	mov	r4, r0
   43728:	ldrb	r0, [r0, #27]
   4372c:	cmp	r0, #0
   43730:	beq	43744 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x2c>
   43734:	mov	r0, r4
   43738:	sub	sp, fp, #28
   4373c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   43740:	b	40720 <flatcc_json_printer_uint32_vector_field@@Base>
   43744:	mov	r0, #4
   43748:	add	r0, r0, r2, lsl #1
   4374c:	ldr	r2, [r1, #8]
   43750:	cmp	r0, r2
   43754:	bge	43774 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x5c>
   43758:	ldr	r2, [r1, #4]
   4375c:	add	r0, r2, r0
   43760:	ldrh	r0, [r0]
   43764:	cmp	r0, #0
   43768:	ldrne	r2, [r1]
   4376c:	addsne	r8, r2, r0
   43770:	bne	4377c <flatcc_json_printer_uint32_enum_vector_field@@Base+0x64>
   43774:	sub	sp, fp, #28
   43778:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   4377c:	ldr	r0, [r1, #16]
   43780:	ldr	sl, [fp, #12]
   43784:	ldr	r2, [fp, #8]
   43788:	add	r7, r0, #1
   4378c:	cmp	r0, #0
   43790:	str	r7, [r1, #16]
   43794:	beq	437ac <flatcc_json_printer_uint32_enum_vector_field@@Base+0x94>
   43798:	ldr	r0, [r4, #20]
   4379c:	add	r1, r0, #1
   437a0:	str	r1, [r4, #20]
   437a4:	mov	r1, #44	; 0x2c
   437a8:	strb	r1, [r0]
   437ac:	ldr	r0, [r8]
   437b0:	mov	r1, r3
   437b4:	ldr	r9, [r8, r0]!
   437b8:	mov	r0, r4
   437bc:	bl	3d354 <flatcc_json_printer_string_field@@Base+0x90>
   437c0:	ldr	r1, [r4, #32]
   437c4:	ldr	r0, [r4, #20]
   437c8:	cmp	r9, #0
   437cc:	add	r1, r1, #1
   437d0:	str	r1, [r4, #32]
   437d4:	add	r1, r0, #1
   437d8:	str	r1, [r4, #20]
   437dc:	mov	r1, #91	; 0x5b
   437e0:	strb	r1, [r0]
   437e4:	beq	439fc <flatcc_json_printer_uint32_enum_vector_field@@Base+0x2e4>
   437e8:	ldrb	r1, [r4, #25]
   437ec:	ldr	r0, [r4, #20]
   437f0:	cmp	r1, #0
   437f4:	beq	438b0 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x198>
   437f8:	add	r1, r0, #1
   437fc:	str	r1, [r4, #20]
   43800:	mov	r1, #10
   43804:	strb	r1, [r0]
   43808:	ldr	r0, [r4, #20]
   4380c:	ldrb	r2, [r4, #25]
   43810:	ldr	r3, [r4, #32]
   43814:	ldr	r1, [r4, #16]
   43818:	mla	r7, r3, r2, r0
   4381c:	mul	r5, r3, r2
   43820:	cmp	r7, r1
   43824:	bls	43894 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x17c>
   43828:	cmp	r0, r1
   4382c:	bcc	43848 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x130>
   43830:	ldr	r2, [r4, #44]	; 0x2c
   43834:	mov	r0, r4
   43838:	mov	r1, #0
   4383c:	blx	r2
   43840:	ldr	r1, [r4, #16]
   43844:	ldr	r0, [r4, #20]
   43848:	sub	r6, r1, r0
   4384c:	cmp	r6, r5
   43850:	bcs	43894 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x17c>
   43854:	mov	r1, #32
   43858:	mov	r2, r6
   4385c:	bl	14eec <memset@plt>
   43860:	ldr	r0, [r4, #20]
   43864:	ldr	r2, [r4, #44]	; 0x2c
   43868:	mov	r1, #0
   4386c:	add	r0, r0, r6
   43870:	str	r0, [r4, #20]
   43874:	mov	r0, r4
   43878:	blx	r2
   4387c:	ldr	r1, [r4, #16]
   43880:	ldr	r0, [r4, #20]
   43884:	sub	r5, r5, r6
   43888:	sub	r6, r1, r0
   4388c:	cmp	r5, r6
   43890:	bhi	43854 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x13c>
   43894:	mov	r1, #32
   43898:	mov	r2, r5
   4389c:	bl	14eec <memset@plt>
   438a0:	ldr	r0, [r4, #20]
   438a4:	add	r0, r0, r5
   438a8:	str	r0, [r4, #20]
   438ac:	b	438cc <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1b4>
   438b0:	ldr	r1, [r4, #16]
   438b4:	cmp	r0, r1
   438b8:	bcc	438cc <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1b4>
   438bc:	ldr	r2, [r4, #44]	; 0x2c
   438c0:	mov	r0, r4
   438c4:	mov	r1, #0
   438c8:	blx	r2
   438cc:	ldr	r1, [r8, #4]
   438d0:	mov	r0, r4
   438d4:	blx	sl
   438d8:	subs	r9, r9, #1
   438dc:	beq	439fc <flatcc_json_printer_uint32_enum_vector_field@@Base+0x2e4>
   438e0:	add	r7, r8, #8
   438e4:	mov	r8, #44	; 0x2c
   438e8:	b	43918 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x200>
   438ec:	mov	r1, #32
   438f0:	mov	r2, r5
   438f4:	bl	14eec <memset@plt>
   438f8:	ldr	r0, [r4, #20]
   438fc:	add	r0, r0, r5
   43900:	str	r0, [r4, #20]
   43904:	ldr	r1, [r7], #4
   43908:	mov	r0, r4
   4390c:	blx	sl
   43910:	cmp	r9, #0
   43914:	beq	439fc <flatcc_json_printer_uint32_enum_vector_field@@Base+0x2e4>
   43918:	ldr	r0, [r4, #20]
   4391c:	sub	r9, r9, #1
   43920:	add	r1, r0, #1
   43924:	str	r1, [r4, #20]
   43928:	strb	r8, [r0]
   4392c:	ldrb	r1, [r4, #25]
   43930:	ldr	r0, [r4, #20]
   43934:	cmp	r1, #0
   43938:	beq	439dc <flatcc_json_printer_uint32_enum_vector_field@@Base+0x2c4>
   4393c:	add	r1, r0, #1
   43940:	str	r1, [r4, #20]
   43944:	mov	r1, #10
   43948:	strb	r1, [r0]
   4394c:	ldr	r0, [r4, #20]
   43950:	ldrb	r2, [r4, #25]
   43954:	ldr	r3, [r4, #32]
   43958:	ldr	r1, [r4, #16]
   4395c:	mla	r6, r3, r2, r0
   43960:	mul	r5, r3, r2
   43964:	cmp	r6, r1
   43968:	bls	438ec <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1d4>
   4396c:	cmp	r0, r1
   43970:	bcc	4398c <flatcc_json_printer_uint32_enum_vector_field@@Base+0x274>
   43974:	ldr	r2, [r4, #44]	; 0x2c
   43978:	mov	r0, r4
   4397c:	mov	r1, #0
   43980:	blx	r2
   43984:	ldr	r1, [r4, #16]
   43988:	ldr	r0, [r4, #20]
   4398c:	sub	r6, r1, r0
   43990:	cmp	r6, r5
   43994:	bcs	438ec <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1d4>
   43998:	mov	r1, #32
   4399c:	mov	r2, r6
   439a0:	bl	14eec <memset@plt>
   439a4:	ldr	r0, [r4, #20]
   439a8:	ldr	r2, [r4, #44]	; 0x2c
   439ac:	mov	r1, #0
   439b0:	add	r0, r0, r6
   439b4:	str	r0, [r4, #20]
   439b8:	mov	r0, r4
   439bc:	blx	r2
   439c0:	ldr	r1, [r4, #16]
   439c4:	ldr	r0, [r4, #20]
   439c8:	sub	r5, r5, r6
   439cc:	sub	r6, r1, r0
   439d0:	cmp	r5, r6
   439d4:	bhi	43998 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x280>
   439d8:	b	438ec <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1d4>
   439dc:	ldr	r1, [r4, #16]
   439e0:	cmp	r0, r1
   439e4:	bcc	43904 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1ec>
   439e8:	ldr	r2, [r4, #44]	; 0x2c
   439ec:	mov	r0, r4
   439f0:	mov	r1, #0
   439f4:	blx	r2
   439f8:	b	43904 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x1ec>
   439fc:	ldrb	r1, [r4, #25]
   43a00:	ldr	r0, [r4, #20]
   43a04:	cmp	r1, #0
   43a08:	beq	43ac8 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x3b0>
   43a0c:	add	r1, r0, #1
   43a10:	str	r1, [r4, #20]
   43a14:	mov	r1, #10
   43a18:	strb	r1, [r0]
   43a1c:	ldr	r0, [r4, #32]
   43a20:	sub	r2, r0, #1
   43a24:	str	r2, [r4, #32]
   43a28:	ldrb	r3, [r4, #25]
   43a2c:	ldr	r0, [r4, #20]
   43a30:	ldr	r1, [r4, #16]
   43a34:	mla	r7, r2, r3, r0
   43a38:	mul	r5, r2, r3
   43a3c:	cmp	r7, r1
   43a40:	bls	43ab0 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x398>
   43a44:	cmp	r0, r1
   43a48:	bcc	43a64 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x34c>
   43a4c:	ldr	r2, [r4, #44]	; 0x2c
   43a50:	mov	r0, r4
   43a54:	mov	r1, #0
   43a58:	blx	r2
   43a5c:	ldr	r1, [r4, #16]
   43a60:	ldr	r0, [r4, #20]
   43a64:	sub	r6, r1, r0
   43a68:	cmp	r6, r5
   43a6c:	bcs	43ab0 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x398>
   43a70:	mov	r1, #32
   43a74:	mov	r2, r6
   43a78:	bl	14eec <memset@plt>
   43a7c:	ldr	r0, [r4, #20]
   43a80:	ldr	r2, [r4, #44]	; 0x2c
   43a84:	mov	r1, #0
   43a88:	add	r0, r0, r6
   43a8c:	str	r0, [r4, #20]
   43a90:	mov	r0, r4
   43a94:	blx	r2
   43a98:	ldr	r1, [r4, #16]
   43a9c:	ldr	r0, [r4, #20]
   43aa0:	sub	r5, r5, r6
   43aa4:	sub	r6, r1, r0
   43aa8:	cmp	r5, r6
   43aac:	bhi	43a70 <flatcc_json_printer_uint32_enum_vector_field@@Base+0x358>
   43ab0:	mov	r1, #32
   43ab4:	mov	r2, r5
   43ab8:	bl	14eec <memset@plt>
   43abc:	ldr	r0, [r4, #20]
   43ac0:	add	r0, r0, r5
   43ac4:	str	r0, [r4, #20]
   43ac8:	add	r1, r0, #1
   43acc:	str	r1, [r4, #20]
   43ad0:	mov	r1, #93	; 0x5d
   43ad4:	strb	r1, [r0]
   43ad8:	sub	sp, fp, #28
   43adc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00043ae0 <flatcc_json_printer_uint64_enum_vector_field@@Base>:
   43ae0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   43ae4:	add	fp, sp, #28
   43ae8:	sub	sp, sp, #4
   43aec:	mov	r4, r0
   43af0:	ldrb	r0, [r0, #27]
   43af4:	cmp	r0, #0
   43af8:	beq	43b0c <flatcc_json_printer_uint64_enum_vector_field@@Base+0x2c>
   43afc:	mov	r0, r4
   43b00:	sub	sp, fp, #28
   43b04:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   43b08:	b	40ae0 <flatcc_json_printer_uint64_vector_field@@Base>
   43b0c:	mov	r0, #4
   43b10:	add	r0, r0, r2, lsl #1
   43b14:	ldr	r2, [r1, #8]
   43b18:	cmp	r0, r2
   43b1c:	bge	43b3c <flatcc_json_printer_uint64_enum_vector_field@@Base+0x5c>
   43b20:	ldr	r2, [r1, #4]
   43b24:	add	r0, r2, r0
   43b28:	ldrh	r0, [r0]
   43b2c:	cmp	r0, #0
   43b30:	ldrne	r2, [r1]
   43b34:	addsne	r8, r2, r0
   43b38:	bne	43b44 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x64>
   43b3c:	sub	sp, fp, #28
   43b40:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   43b44:	ldr	r0, [r1, #16]
   43b48:	ldr	sl, [fp, #12]
   43b4c:	ldr	r2, [fp, #8]
   43b50:	add	r7, r0, #1
   43b54:	cmp	r0, #0
   43b58:	str	r7, [r1, #16]
   43b5c:	beq	43b74 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x94>
   43b60:	ldr	r0, [r4, #20]
   43b64:	add	r1, r0, #1
   43b68:	str	r1, [r4, #20]
   43b6c:	mov	r1, #44	; 0x2c
   43b70:	strb	r1, [r0]
   43b74:	ldr	r0, [r8]
   43b78:	mov	r1, r3
   43b7c:	ldr	r9, [r8, r0]!
   43b80:	mov	r0, r4
   43b84:	bl	3d354 <flatcc_json_printer_string_field@@Base+0x90>
   43b88:	ldr	r1, [r4, #32]
   43b8c:	ldr	r0, [r4, #20]
   43b90:	cmp	r9, #0
   43b94:	add	r1, r1, #1
   43b98:	str	r1, [r4, #32]
   43b9c:	add	r1, r0, #1
   43ba0:	str	r1, [r4, #20]
   43ba4:	mov	r1, #91	; 0x5b
   43ba8:	strb	r1, [r0]
   43bac:	beq	43dc8 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x2e8>
   43bb0:	ldrb	r1, [r4, #25]
   43bb4:	ldr	r0, [r4, #20]
   43bb8:	cmp	r1, #0
   43bbc:	beq	43c78 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x198>
   43bc0:	add	r1, r0, #1
   43bc4:	str	r1, [r4, #20]
   43bc8:	mov	r1, #10
   43bcc:	strb	r1, [r0]
   43bd0:	ldr	r0, [r4, #20]
   43bd4:	ldrb	r2, [r4, #25]
   43bd8:	ldr	r3, [r4, #32]
   43bdc:	ldr	r1, [r4, #16]
   43be0:	mla	r7, r3, r2, r0
   43be4:	mul	r5, r3, r2
   43be8:	cmp	r7, r1
   43bec:	bls	43c5c <flatcc_json_printer_uint64_enum_vector_field@@Base+0x17c>
   43bf0:	cmp	r0, r1
   43bf4:	bcc	43c10 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x130>
   43bf8:	ldr	r2, [r4, #44]	; 0x2c
   43bfc:	mov	r0, r4
   43c00:	mov	r1, #0
   43c04:	blx	r2
   43c08:	ldr	r1, [r4, #16]
   43c0c:	ldr	r0, [r4, #20]
   43c10:	sub	r6, r1, r0
   43c14:	cmp	r6, r5
   43c18:	bcs	43c5c <flatcc_json_printer_uint64_enum_vector_field@@Base+0x17c>
   43c1c:	mov	r1, #32
   43c20:	mov	r2, r6
   43c24:	bl	14eec <memset@plt>
   43c28:	ldr	r0, [r4, #20]
   43c2c:	ldr	r2, [r4, #44]	; 0x2c
   43c30:	mov	r1, #0
   43c34:	add	r0, r0, r6
   43c38:	str	r0, [r4, #20]
   43c3c:	mov	r0, r4
   43c40:	blx	r2
   43c44:	ldr	r1, [r4, #16]
   43c48:	ldr	r0, [r4, #20]
   43c4c:	sub	r5, r5, r6
   43c50:	sub	r6, r1, r0
   43c54:	cmp	r5, r6
   43c58:	bhi	43c1c <flatcc_json_printer_uint64_enum_vector_field@@Base+0x13c>
   43c5c:	mov	r1, #32
   43c60:	mov	r2, r5
   43c64:	bl	14eec <memset@plt>
   43c68:	ldr	r0, [r4, #20]
   43c6c:	add	r0, r0, r5
   43c70:	str	r0, [r4, #20]
   43c74:	b	43c94 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1b4>
   43c78:	ldr	r1, [r4, #16]
   43c7c:	cmp	r0, r1
   43c80:	bcc	43c94 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1b4>
   43c84:	ldr	r2, [r4, #44]	; 0x2c
   43c88:	mov	r0, r4
   43c8c:	mov	r1, #0
   43c90:	blx	r2
   43c94:	ldrd	r2, [r8, #4]
   43c98:	mov	r0, r4
   43c9c:	blx	sl
   43ca0:	subs	r9, r9, #1
   43ca4:	beq	43dc8 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x2e8>
   43ca8:	add	r7, r8, #12
   43cac:	mov	r8, #44	; 0x2c
   43cb0:	b	43ce4 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x204>
   43cb4:	mov	r1, #32
   43cb8:	mov	r2, r5
   43cbc:	bl	14eec <memset@plt>
   43cc0:	ldr	r0, [r4, #20]
   43cc4:	add	r0, r0, r5
   43cc8:	str	r0, [r4, #20]
   43ccc:	ldrd	r2, [r7]
   43cd0:	mov	r0, r4
   43cd4:	blx	sl
   43cd8:	add	r7, r7, #8
   43cdc:	cmp	r9, #0
   43ce0:	beq	43dc8 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x2e8>
   43ce4:	ldr	r0, [r4, #20]
   43ce8:	sub	r9, r9, #1
   43cec:	add	r1, r0, #1
   43cf0:	str	r1, [r4, #20]
   43cf4:	strb	r8, [r0]
   43cf8:	ldrb	r1, [r4, #25]
   43cfc:	ldr	r0, [r4, #20]
   43d00:	cmp	r1, #0
   43d04:	beq	43da8 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x2c8>
   43d08:	add	r1, r0, #1
   43d0c:	str	r1, [r4, #20]
   43d10:	mov	r1, #10
   43d14:	strb	r1, [r0]
   43d18:	ldr	r0, [r4, #20]
   43d1c:	ldrb	r2, [r4, #25]
   43d20:	ldr	r3, [r4, #32]
   43d24:	ldr	r1, [r4, #16]
   43d28:	mla	r6, r3, r2, r0
   43d2c:	mul	r5, r3, r2
   43d30:	cmp	r6, r1
   43d34:	bls	43cb4 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1d4>
   43d38:	cmp	r0, r1
   43d3c:	bcc	43d58 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x278>
   43d40:	ldr	r2, [r4, #44]	; 0x2c
   43d44:	mov	r0, r4
   43d48:	mov	r1, #0
   43d4c:	blx	r2
   43d50:	ldr	r1, [r4, #16]
   43d54:	ldr	r0, [r4, #20]
   43d58:	sub	r6, r1, r0
   43d5c:	cmp	r6, r5
   43d60:	bcs	43cb4 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1d4>
   43d64:	mov	r1, #32
   43d68:	mov	r2, r6
   43d6c:	bl	14eec <memset@plt>
   43d70:	ldr	r0, [r4, #20]
   43d74:	ldr	r2, [r4, #44]	; 0x2c
   43d78:	mov	r1, #0
   43d7c:	add	r0, r0, r6
   43d80:	str	r0, [r4, #20]
   43d84:	mov	r0, r4
   43d88:	blx	r2
   43d8c:	ldr	r1, [r4, #16]
   43d90:	ldr	r0, [r4, #20]
   43d94:	sub	r5, r5, r6
   43d98:	sub	r6, r1, r0
   43d9c:	cmp	r5, r6
   43da0:	bhi	43d64 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x284>
   43da4:	b	43cb4 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1d4>
   43da8:	ldr	r1, [r4, #16]
   43dac:	cmp	r0, r1
   43db0:	bcc	43ccc <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1ec>
   43db4:	ldr	r2, [r4, #44]	; 0x2c
   43db8:	mov	r0, r4
   43dbc:	mov	r1, #0
   43dc0:	blx	r2
   43dc4:	b	43ccc <flatcc_json_printer_uint64_enum_vector_field@@Base+0x1ec>
   43dc8:	ldrb	r1, [r4, #25]
   43dcc:	ldr	r0, [r4, #20]
   43dd0:	cmp	r1, #0
   43dd4:	beq	43e94 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x3b4>
   43dd8:	add	r1, r0, #1
   43ddc:	str	r1, [r4, #20]
   43de0:	mov	r1, #10
   43de4:	strb	r1, [r0]
   43de8:	ldr	r0, [r4, #32]
   43dec:	sub	r2, r0, #1
   43df0:	str	r2, [r4, #32]
   43df4:	ldrb	r3, [r4, #25]
   43df8:	ldr	r0, [r4, #20]
   43dfc:	ldr	r1, [r4, #16]
   43e00:	mla	r7, r2, r3, r0
   43e04:	mul	r5, r2, r3
   43e08:	cmp	r7, r1
   43e0c:	bls	43e7c <flatcc_json_printer_uint64_enum_vector_field@@Base+0x39c>
   43e10:	cmp	r0, r1
   43e14:	bcc	43e30 <flatcc_json_printer_uint64_enum_vector_field@@Base+0x350>
   43e18:	ldr	r2, [r4, #44]	; 0x2c
   43e1c:	mov	r0, r4
   43e20:	mov	r1, #0
   43e24:	blx	r2
   43e28:	ldr	r1, [r4, #16]
   43e2c:	ldr	r0, [r4, #20]
   43e30:	sub	r6, r1, r0
   43e34:	cmp	r6, r5
   43e38:	bcs	43e7c <flatcc_json_printer_uint64_enum_vector_field@@Base+0x39c>
   43e3c:	mov	r1, #32
   43e40:	mov	r2, r6
   43e44:	bl	14eec <memset@plt>
   43e48:	ldr	r0, [r4, #20]
   43e4c:	ldr	r2, [r4, #44]	; 0x2c
   43e50:	mov	r1, #0
   43e54:	add	r0, r0, r6
   43e58:	str	r0, [r4, #20]
   43e5c:	mov	r0, r4
   43e60:	blx	r2
   43e64:	ldr	r1, [r4, #16]
   43e68:	ldr	r0, [r4, #20]
   43e6c:	sub	r5, r5, r6
   43e70:	sub	r6, r1, r0
   43e74:	cmp	r5, r6
   43e78:	bhi	43e3c <flatcc_json_printer_uint64_enum_vector_field@@Base+0x35c>
   43e7c:	mov	r1, #32
   43e80:	mov	r2, r5
   43e84:	bl	14eec <memset@plt>
   43e88:	ldr	r0, [r4, #20]
   43e8c:	add	r0, r0, r5
   43e90:	str	r0, [r4, #20]
   43e94:	add	r1, r0, #1
   43e98:	str	r1, [r4, #20]
   43e9c:	mov	r1, #93	; 0x5d
   43ea0:	strb	r1, [r0]
   43ea4:	sub	sp, fp, #28
   43ea8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00043eac <flatcc_json_printer_int8_enum_vector_field@@Base>:
   43eac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   43eb0:	add	fp, sp, #28
   43eb4:	sub	sp, sp, #4
   43eb8:	mov	r4, r0
   43ebc:	ldrb	r0, [r0, #27]
   43ec0:	cmp	r0, #0
   43ec4:	beq	43ed8 <flatcc_json_printer_int8_enum_vector_field@@Base+0x2c>
   43ec8:	mov	r0, r4
   43ecc:	sub	sp, fp, #28
   43ed0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   43ed4:	b	40ea4 <flatcc_json_printer_int8_vector_field@@Base>
   43ed8:	mov	r0, #4
   43edc:	add	r0, r0, r2, lsl #1
   43ee0:	ldr	r2, [r1, #8]
   43ee4:	cmp	r0, r2
   43ee8:	bge	43f08 <flatcc_json_printer_int8_enum_vector_field@@Base+0x5c>
   43eec:	ldr	r2, [r1, #4]
   43ef0:	add	r0, r2, r0
   43ef4:	ldrh	r0, [r0]
   43ef8:	cmp	r0, #0
   43efc:	ldrne	r2, [r1]
   43f00:	addsne	r8, r2, r0
   43f04:	bne	43f10 <flatcc_json_printer_int8_enum_vector_field@@Base+0x64>
   43f08:	sub	sp, fp, #28
   43f0c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   43f10:	ldr	r0, [r1, #16]
   43f14:	ldr	sl, [fp, #12]
   43f18:	ldr	r2, [fp, #8]
   43f1c:	add	r7, r0, #1
   43f20:	cmp	r0, #0
   43f24:	str	r7, [r1, #16]
   43f28:	beq	43f40 <flatcc_json_printer_int8_enum_vector_field@@Base+0x94>
   43f2c:	ldr	r0, [r4, #20]
   43f30:	add	r1, r0, #1
   43f34:	str	r1, [r4, #20]
   43f38:	mov	r1, #44	; 0x2c
   43f3c:	strb	r1, [r0]
   43f40:	ldr	r0, [r8]
   43f44:	mov	r1, r3
   43f48:	ldr	r9, [r8, r0]!
   43f4c:	mov	r0, r4
   43f50:	bl	3d354 <flatcc_json_printer_string_field@@Base+0x90>
   43f54:	ldr	r1, [r4, #32]
   43f58:	ldr	r0, [r4, #20]
   43f5c:	cmp	r9, #0
   43f60:	add	r1, r1, #1
   43f64:	str	r1, [r4, #32]
   43f68:	add	r1, r0, #1
   43f6c:	str	r1, [r4, #20]
   43f70:	mov	r1, #91	; 0x5b
   43f74:	strb	r1, [r0]
   43f78:	beq	44190 <flatcc_json_printer_int8_enum_vector_field@@Base+0x2e4>
   43f7c:	ldrb	r1, [r4, #25]
   43f80:	ldr	r0, [r4, #20]
   43f84:	cmp	r1, #0
   43f88:	beq	44044 <flatcc_json_printer_int8_enum_vector_field@@Base+0x198>
   43f8c:	add	r1, r0, #1
   43f90:	str	r1, [r4, #20]
   43f94:	mov	r1, #10
   43f98:	strb	r1, [r0]
   43f9c:	ldr	r0, [r4, #20]
   43fa0:	ldrb	r2, [r4, #25]
   43fa4:	ldr	r3, [r4, #32]
   43fa8:	ldr	r1, [r4, #16]
   43fac:	mla	r7, r3, r2, r0
   43fb0:	mul	r5, r3, r2
   43fb4:	cmp	r7, r1
   43fb8:	bls	44028 <flatcc_json_printer_int8_enum_vector_field@@Base+0x17c>
   43fbc:	cmp	r0, r1
   43fc0:	bcc	43fdc <flatcc_json_printer_int8_enum_vector_field@@Base+0x130>
   43fc4:	ldr	r2, [r4, #44]	; 0x2c
   43fc8:	mov	r0, r4
   43fcc:	mov	r1, #0
   43fd0:	blx	r2
   43fd4:	ldr	r1, [r4, #16]
   43fd8:	ldr	r0, [r4, #20]
   43fdc:	sub	r6, r1, r0
   43fe0:	cmp	r6, r5
   43fe4:	bcs	44028 <flatcc_json_printer_int8_enum_vector_field@@Base+0x17c>
   43fe8:	mov	r1, #32
   43fec:	mov	r2, r6
   43ff0:	bl	14eec <memset@plt>
   43ff4:	ldr	r0, [r4, #20]
   43ff8:	ldr	r2, [r4, #44]	; 0x2c
   43ffc:	mov	r1, #0
   44000:	add	r0, r0, r6
   44004:	str	r0, [r4, #20]
   44008:	mov	r0, r4
   4400c:	blx	r2
   44010:	ldr	r1, [r4, #16]
   44014:	ldr	r0, [r4, #20]
   44018:	sub	r5, r5, r6
   4401c:	sub	r6, r1, r0
   44020:	cmp	r5, r6
   44024:	bhi	43fe8 <flatcc_json_printer_int8_enum_vector_field@@Base+0x13c>
   44028:	mov	r1, #32
   4402c:	mov	r2, r5
   44030:	bl	14eec <memset@plt>
   44034:	ldr	r0, [r4, #20]
   44038:	add	r0, r0, r5
   4403c:	str	r0, [r4, #20]
   44040:	b	44060 <flatcc_json_printer_int8_enum_vector_field@@Base+0x1b4>
   44044:	ldr	r1, [r4, #16]
   44048:	cmp	r0, r1
   4404c:	bcc	44060 <flatcc_json_printer_int8_enum_vector_field@@Base+0x1b4>
   44050:	ldr	r2, [r4, #44]	; 0x2c
   44054:	mov	r0, r4
   44058:	mov	r1, #0
   4405c:	blx	r2
   44060:	ldrsb	r1, [r8, #4]
   44064:	mov	r0, r4
   44068:	blx	sl
   4406c:	subs	r9, r9, #1
   44070:	beq	44190 <flatcc_json_printer_int8_enum_vector_field@@Base+0x2e4>
   44074:	add	r7, r8, #5
   44078:	mov	r8, #44	; 0x2c
   4407c:	b	440ac <flatcc_json_printer_int8_enum_vector_field@@Base+0x200>
   44080:	mov	r1, #32
   44084:	mov	r2, r5
   44088:	bl	14eec <memset@plt>
   4408c:	ldr	r0, [r4, #20]
   44090:	add	r0, r0, r5
   44094:	str	r0, [r4, #20]
   44098:	ldrsb	r1, [r7], #1
   4409c:	mov	r0, r4
   440a0:	blx	sl
   440a4:	cmp	r9, #0
   440a8:	beq	44190 <flatcc_json_printer_int8_enum_vector_field@@Base+0x2e4>
   440ac:	ldr	r0, [r4, #20]
   440b0:	sub	r9, r9, #1
   440b4:	add	r1, r0, #1
   440b8:	str	r1, [r4, #20]
   440bc:	strb	r8, [r0]
   440c0:	ldrb	r1, [r4, #25]
   440c4:	ldr	r0, [r4, #20]
   440c8:	cmp	r1, #0
   440cc:	beq	44170 <flatcc_json_printer_int8_enum_vector_field@@Base+0x2c4>
   440d0:	add	r1, r0, #1
   440d4:	str	r1, [r4, #20]
   440d8:	mov	r1, #10
   440dc:	strb	r1, [r0]
   440e0:	ldr	r0, [r4, #20]
   440e4:	ldrb	r2, [r4, #25]
   440e8:	ldr	r3, [r4, #32]
   440ec:	ldr	r1, [r4, #16]
   440f0:	mla	r6, r3, r2, r0
   440f4:	mul	r5, r3, r2
   440f8:	cmp	r6, r1
   440fc:	bls	44080 <flatcc_json_printer_int8_enum_vector_field@@Base+0x1d4>
   44100:	cmp	r0, r1
   44104:	bcc	44120 <flatcc_json_printer_int8_enum_vector_field@@Base+0x274>
   44108:	ldr	r2, [r4, #44]	; 0x2c
   4410c:	mov	r0, r4
   44110:	mov	r1, #0
   44114:	blx	r2
   44118:	ldr	r1, [r4, #16]
   4411c:	ldr	r0, [r4, #20]
   44120:	sub	r6, r1, r0
   44124:	cmp	r6, r5
   44128:	bcs	44080 <flatcc_json_printer_int8_enum_vector_field@@Base+0x1d4>
   4412c:	mov	r1, #32
   44130:	mov	r2, r6
   44134:	bl	14eec <memset@plt>
   44138:	ldr	r0, [r4, #20]
   4413c:	ldr	r2, [r4, #44]	; 0x2c
   44140:	mov	r1, #0
   44144:	add	r0, r0, r6
   44148:	str	r0, [r4, #20]
   4414c:	mov	r0, r4
   44150:	blx	r2
   44154:	ldr	r1, [r4, #16]
   44158:	ldr	r0, [r4, #20]
   4415c:	sub	r5, r5, r6
   44160:	sub	r6, r1, r0
   44164:	cmp	r5, r6
   44168:	bhi	4412c <flatcc_json_printer_int8_enum_vector_field@@Base+0x280>
   4416c:	b	44080 <flatcc_json_printer_int8_enum_vector_field@@Base+0x1d4>
   44170:	ldr	r1, [r4, #16]
   44174:	cmp	r0, r1
   44178:	bcc	44098 <flatcc_json_printer_int8_enum_vector_field@@Base+0x1ec>
   4417c:	ldr	r2, [r4, #44]	; 0x2c
   44180:	mov	r0, r4
   44184:	mov	r1, #0
   44188:	blx	r2
   4418c:	b	44098 <flatcc_json_printer_int8_enum_vector_field@@Base+0x1ec>
   44190:	ldrb	r1, [r4, #25]
   44194:	ldr	r0, [r4, #20]
   44198:	cmp	r1, #0
   4419c:	beq	4425c <flatcc_json_printer_int8_enum_vector_field@@Base+0x3b0>
   441a0:	add	r1, r0, #1
   441a4:	str	r1, [r4, #20]
   441a8:	mov	r1, #10
   441ac:	strb	r1, [r0]
   441b0:	ldr	r0, [r4, #32]
   441b4:	sub	r2, r0, #1
   441b8:	str	r2, [r4, #32]
   441bc:	ldrb	r3, [r4, #25]
   441c0:	ldr	r0, [r4, #20]
   441c4:	ldr	r1, [r4, #16]
   441c8:	mla	r7, r2, r3, r0
   441cc:	mul	r5, r2, r3
   441d0:	cmp	r7, r1
   441d4:	bls	44244 <flatcc_json_printer_int8_enum_vector_field@@Base+0x398>
   441d8:	cmp	r0, r1
   441dc:	bcc	441f8 <flatcc_json_printer_int8_enum_vector_field@@Base+0x34c>
   441e0:	ldr	r2, [r4, #44]	; 0x2c
   441e4:	mov	r0, r4
   441e8:	mov	r1, #0
   441ec:	blx	r2
   441f0:	ldr	r1, [r4, #16]
   441f4:	ldr	r0, [r4, #20]
   441f8:	sub	r6, r1, r0
   441fc:	cmp	r6, r5
   44200:	bcs	44244 <flatcc_json_printer_int8_enum_vector_field@@Base+0x398>
   44204:	mov	r1, #32
   44208:	mov	r2, r6
   4420c:	bl	14eec <memset@plt>
   44210:	ldr	r0, [r4, #20]
   44214:	ldr	r2, [r4, #44]	; 0x2c
   44218:	mov	r1, #0
   4421c:	add	r0, r0, r6
   44220:	str	r0, [r4, #20]
   44224:	mov	r0, r4
   44228:	blx	r2
   4422c:	ldr	r1, [r4, #16]
   44230:	ldr	r0, [r4, #20]
   44234:	sub	r5, r5, r6
   44238:	sub	r6, r1, r0
   4423c:	cmp	r5, r6
   44240:	bhi	44204 <flatcc_json_printer_int8_enum_vector_field@@Base+0x358>
   44244:	mov	r1, #32
   44248:	mov	r2, r5
   4424c:	bl	14eec <memset@plt>
   44250:	ldr	r0, [r4, #20]
   44254:	add	r0, r0, r5
   44258:	str	r0, [r4, #20]
   4425c:	add	r1, r0, #1
   44260:	str	r1, [r4, #20]
   44264:	mov	r1, #93	; 0x5d
   44268:	strb	r1, [r0]
   4426c:	sub	sp, fp, #28
   44270:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00044274 <flatcc_json_printer_int16_enum_vector_field@@Base>:
   44274:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   44278:	add	fp, sp, #28
   4427c:	sub	sp, sp, #4
   44280:	mov	r4, r0
   44284:	ldrb	r0, [r0, #27]
   44288:	cmp	r0, #0
   4428c:	beq	442a0 <flatcc_json_printer_int16_enum_vector_field@@Base+0x2c>
   44290:	mov	r0, r4
   44294:	sub	sp, fp, #28
   44298:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4429c:	b	413ec <flatcc_json_printer_int16_vector_field@@Base>
   442a0:	mov	r0, #4
   442a4:	add	r0, r0, r2, lsl #1
   442a8:	ldr	r2, [r1, #8]
   442ac:	cmp	r0, r2
   442b0:	bge	442d0 <flatcc_json_printer_int16_enum_vector_field@@Base+0x5c>
   442b4:	ldr	r2, [r1, #4]
   442b8:	add	r0, r2, r0
   442bc:	ldrh	r0, [r0]
   442c0:	cmp	r0, #0
   442c4:	ldrne	r2, [r1]
   442c8:	addsne	r8, r2, r0
   442cc:	bne	442d8 <flatcc_json_printer_int16_enum_vector_field@@Base+0x64>
   442d0:	sub	sp, fp, #28
   442d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   442d8:	ldr	r0, [r1, #16]
   442dc:	ldr	sl, [fp, #12]
   442e0:	ldr	r2, [fp, #8]
   442e4:	add	r7, r0, #1
   442e8:	cmp	r0, #0
   442ec:	str	r7, [r1, #16]
   442f0:	beq	44308 <flatcc_json_printer_int16_enum_vector_field@@Base+0x94>
   442f4:	ldr	r0, [r4, #20]
   442f8:	add	r1, r0, #1
   442fc:	str	r1, [r4, #20]
   44300:	mov	r1, #44	; 0x2c
   44304:	strb	r1, [r0]
   44308:	ldr	r0, [r8]
   4430c:	mov	r1, r3
   44310:	ldr	r9, [r8, r0]!
   44314:	mov	r0, r4
   44318:	bl	3d354 <flatcc_json_printer_string_field@@Base+0x90>
   4431c:	ldr	r1, [r4, #32]
   44320:	ldr	r0, [r4, #20]
   44324:	cmp	r9, #0
   44328:	add	r1, r1, #1
   4432c:	str	r1, [r4, #32]
   44330:	add	r1, r0, #1
   44334:	str	r1, [r4, #20]
   44338:	mov	r1, #91	; 0x5b
   4433c:	strb	r1, [r0]
   44340:	beq	44558 <flatcc_json_printer_int16_enum_vector_field@@Base+0x2e4>
   44344:	ldrb	r1, [r4, #25]
   44348:	ldr	r0, [r4, #20]
   4434c:	cmp	r1, #0
   44350:	beq	4440c <flatcc_json_printer_int16_enum_vector_field@@Base+0x198>
   44354:	add	r1, r0, #1
   44358:	str	r1, [r4, #20]
   4435c:	mov	r1, #10
   44360:	strb	r1, [r0]
   44364:	ldr	r0, [r4, #20]
   44368:	ldrb	r2, [r4, #25]
   4436c:	ldr	r3, [r4, #32]
   44370:	ldr	r1, [r4, #16]
   44374:	mla	r7, r3, r2, r0
   44378:	mul	r5, r3, r2
   4437c:	cmp	r7, r1
   44380:	bls	443f0 <flatcc_json_printer_int16_enum_vector_field@@Base+0x17c>
   44384:	cmp	r0, r1
   44388:	bcc	443a4 <flatcc_json_printer_int16_enum_vector_field@@Base+0x130>
   4438c:	ldr	r2, [r4, #44]	; 0x2c
   44390:	mov	r0, r4
   44394:	mov	r1, #0
   44398:	blx	r2
   4439c:	ldr	r1, [r4, #16]
   443a0:	ldr	r0, [r4, #20]
   443a4:	sub	r6, r1, r0
   443a8:	cmp	r6, r5
   443ac:	bcs	443f0 <flatcc_json_printer_int16_enum_vector_field@@Base+0x17c>
   443b0:	mov	r1, #32
   443b4:	mov	r2, r6
   443b8:	bl	14eec <memset@plt>
   443bc:	ldr	r0, [r4, #20]
   443c0:	ldr	r2, [r4, #44]	; 0x2c
   443c4:	mov	r1, #0
   443c8:	add	r0, r0, r6
   443cc:	str	r0, [r4, #20]
   443d0:	mov	r0, r4
   443d4:	blx	r2
   443d8:	ldr	r1, [r4, #16]
   443dc:	ldr	r0, [r4, #20]
   443e0:	sub	r5, r5, r6
   443e4:	sub	r6, r1, r0
   443e8:	cmp	r5, r6
   443ec:	bhi	443b0 <flatcc_json_printer_int16_enum_vector_field@@Base+0x13c>
   443f0:	mov	r1, #32
   443f4:	mov	r2, r5
   443f8:	bl	14eec <memset@plt>
   443fc:	ldr	r0, [r4, #20]
   44400:	add	r0, r0, r5
   44404:	str	r0, [r4, #20]
   44408:	b	44428 <flatcc_json_printer_int16_enum_vector_field@@Base+0x1b4>
   4440c:	ldr	r1, [r4, #16]
   44410:	cmp	r0, r1
   44414:	bcc	44428 <flatcc_json_printer_int16_enum_vector_field@@Base+0x1b4>
   44418:	ldr	r2, [r4, #44]	; 0x2c
   4441c:	mov	r0, r4
   44420:	mov	r1, #0
   44424:	blx	r2
   44428:	ldrsh	r1, [r8, #4]
   4442c:	mov	r0, r4
   44430:	blx	sl
   44434:	subs	r9, r9, #1
   44438:	beq	44558 <flatcc_json_printer_int16_enum_vector_field@@Base+0x2e4>
   4443c:	add	r7, r8, #6
   44440:	mov	r8, #44	; 0x2c
   44444:	b	44474 <flatcc_json_printer_int16_enum_vector_field@@Base+0x200>
   44448:	mov	r1, #32
   4444c:	mov	r2, r5
   44450:	bl	14eec <memset@plt>
   44454:	ldr	r0, [r4, #20]
   44458:	add	r0, r0, r5
   4445c:	str	r0, [r4, #20]
   44460:	ldrsh	r1, [r7], #2
   44464:	mov	r0, r4
   44468:	blx	sl
   4446c:	cmp	r9, #0
   44470:	beq	44558 <flatcc_json_printer_int16_enum_vector_field@@Base+0x2e4>
   44474:	ldr	r0, [r4, #20]
   44478:	sub	r9, r9, #1
   4447c:	add	r1, r0, #1
   44480:	str	r1, [r4, #20]
   44484:	strb	r8, [r0]
   44488:	ldrb	r1, [r4, #25]
   4448c:	ldr	r0, [r4, #20]
   44490:	cmp	r1, #0
   44494:	beq	44538 <flatcc_json_printer_int16_enum_vector_field@@Base+0x2c4>
   44498:	add	r1, r0, #1
   4449c:	str	r1, [r4, #20]
   444a0:	mov	r1, #10
   444a4:	strb	r1, [r0]
   444a8:	ldr	r0, [r4, #20]
   444ac:	ldrb	r2, [r4, #25]
   444b0:	ldr	r3, [r4, #32]
   444b4:	ldr	r1, [r4, #16]
   444b8:	mla	r6, r3, r2, r0
   444bc:	mul	r5, r3, r2
   444c0:	cmp	r6, r1
   444c4:	bls	44448 <flatcc_json_printer_int16_enum_vector_field@@Base+0x1d4>
   444c8:	cmp	r0, r1
   444cc:	bcc	444e8 <flatcc_json_printer_int16_enum_vector_field@@Base+0x274>
   444d0:	ldr	r2, [r4, #44]	; 0x2c
   444d4:	mov	r0, r4
   444d8:	mov	r1, #0
   444dc:	blx	r2
   444e0:	ldr	r1, [r4, #16]
   444e4:	ldr	r0, [r4, #20]
   444e8:	sub	r6, r1, r0
   444ec:	cmp	r6, r5
   444f0:	bcs	44448 <flatcc_json_printer_int16_enum_vector_field@@Base+0x1d4>
   444f4:	mov	r1, #32
   444f8:	mov	r2, r6
   444fc:	bl	14eec <memset@plt>
   44500:	ldr	r0, [r4, #20]
   44504:	ldr	r2, [r4, #44]	; 0x2c
   44508:	mov	r1, #0
   4450c:	add	r0, r0, r6
   44510:	str	r0, [r4, #20]
   44514:	mov	r0, r4
   44518:	blx	r2
   4451c:	ldr	r1, [r4, #16]
   44520:	ldr	r0, [r4, #20]
   44524:	sub	r5, r5, r6
   44528:	sub	r6, r1, r0
   4452c:	cmp	r5, r6
   44530:	bhi	444f4 <flatcc_json_printer_int16_enum_vector_field@@Base+0x280>
   44534:	b	44448 <flatcc_json_printer_int16_enum_vector_field@@Base+0x1d4>
   44538:	ldr	r1, [r4, #16]
   4453c:	cmp	r0, r1
   44540:	bcc	44460 <flatcc_json_printer_int16_enum_vector_field@@Base+0x1ec>
   44544:	ldr	r2, [r4, #44]	; 0x2c
   44548:	mov	r0, r4
   4454c:	mov	r1, #0
   44550:	blx	r2
   44554:	b	44460 <flatcc_json_printer_int16_enum_vector_field@@Base+0x1ec>
   44558:	ldrb	r1, [r4, #25]
   4455c:	ldr	r0, [r4, #20]
   44560:	cmp	r1, #0
   44564:	beq	44624 <flatcc_json_printer_int16_enum_vector_field@@Base+0x3b0>
   44568:	add	r1, r0, #1
   4456c:	str	r1, [r4, #20]
   44570:	mov	r1, #10
   44574:	strb	r1, [r0]
   44578:	ldr	r0, [r4, #32]
   4457c:	sub	r2, r0, #1
   44580:	str	r2, [r4, #32]
   44584:	ldrb	r3, [r4, #25]
   44588:	ldr	r0, [r4, #20]
   4458c:	ldr	r1, [r4, #16]
   44590:	mla	r7, r2, r3, r0
   44594:	mul	r5, r2, r3
   44598:	cmp	r7, r1
   4459c:	bls	4460c <flatcc_json_printer_int16_enum_vector_field@@Base+0x398>
   445a0:	cmp	r0, r1
   445a4:	bcc	445c0 <flatcc_json_printer_int16_enum_vector_field@@Base+0x34c>
   445a8:	ldr	r2, [r4, #44]	; 0x2c
   445ac:	mov	r0, r4
   445b0:	mov	r1, #0
   445b4:	blx	r2
   445b8:	ldr	r1, [r4, #16]
   445bc:	ldr	r0, [r4, #20]
   445c0:	sub	r6, r1, r0
   445c4:	cmp	r6, r5
   445c8:	bcs	4460c <flatcc_json_printer_int16_enum_vector_field@@Base+0x398>
   445cc:	mov	r1, #32
   445d0:	mov	r2, r6
   445d4:	bl	14eec <memset@plt>
   445d8:	ldr	r0, [r4, #20]
   445dc:	ldr	r2, [r4, #44]	; 0x2c
   445e0:	mov	r1, #0
   445e4:	add	r0, r0, r6
   445e8:	str	r0, [r4, #20]
   445ec:	mov	r0, r4
   445f0:	blx	r2
   445f4:	ldr	r1, [r4, #16]
   445f8:	ldr	r0, [r4, #20]
   445fc:	sub	r5, r5, r6
   44600:	sub	r6, r1, r0
   44604:	cmp	r5, r6
   44608:	bhi	445cc <flatcc_json_printer_int16_enum_vector_field@@Base+0x358>
   4460c:	mov	r1, #32
   44610:	mov	r2, r5
   44614:	bl	14eec <memset@plt>
   44618:	ldr	r0, [r4, #20]
   4461c:	add	r0, r0, r5
   44620:	str	r0, [r4, #20]
   44624:	add	r1, r0, #1
   44628:	str	r1, [r4, #20]
   4462c:	mov	r1, #93	; 0x5d
   44630:	strb	r1, [r0]
   44634:	sub	sp, fp, #28
   44638:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

0004463c <flatcc_json_printer_int32_enum_vector_field@@Base>:
   4463c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   44640:	add	fp, sp, #28
   44644:	sub	sp, sp, #4
   44648:	mov	r4, r0
   4464c:	ldrb	r0, [r0, #27]
   44650:	cmp	r0, #0
   44654:	beq	44668 <flatcc_json_printer_int32_enum_vector_field@@Base+0x2c>
   44658:	mov	r0, r4
   4465c:	sub	sp, fp, #28
   44660:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   44664:	b	417f0 <flatcc_json_printer_int32_vector_field@@Base>
   44668:	mov	r0, #4
   4466c:	add	r0, r0, r2, lsl #1
   44670:	ldr	r2, [r1, #8]
   44674:	cmp	r0, r2
   44678:	bge	44698 <flatcc_json_printer_int32_enum_vector_field@@Base+0x5c>
   4467c:	ldr	r2, [r1, #4]
   44680:	add	r0, r2, r0
   44684:	ldrh	r0, [r0]
   44688:	cmp	r0, #0
   4468c:	ldrne	r2, [r1]
   44690:	addsne	r8, r2, r0
   44694:	bne	446a0 <flatcc_json_printer_int32_enum_vector_field@@Base+0x64>
   44698:	sub	sp, fp, #28
   4469c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   446a0:	ldr	r0, [r1, #16]
   446a4:	ldr	sl, [fp, #12]
   446a8:	ldr	r2, [fp, #8]
   446ac:	add	r7, r0, #1
   446b0:	cmp	r0, #0
   446b4:	str	r7, [r1, #16]
   446b8:	beq	446d0 <flatcc_json_printer_int32_enum_vector_field@@Base+0x94>
   446bc:	ldr	r0, [r4, #20]
   446c0:	add	r1, r0, #1
   446c4:	str	r1, [r4, #20]
   446c8:	mov	r1, #44	; 0x2c
   446cc:	strb	r1, [r0]
   446d0:	ldr	r0, [r8]
   446d4:	mov	r1, r3
   446d8:	ldr	r9, [r8, r0]!
   446dc:	mov	r0, r4
   446e0:	bl	3d354 <flatcc_json_printer_string_field@@Base+0x90>
   446e4:	ldr	r1, [r4, #32]
   446e8:	ldr	r0, [r4, #20]
   446ec:	cmp	r9, #0
   446f0:	add	r1, r1, #1
   446f4:	str	r1, [r4, #32]
   446f8:	add	r1, r0, #1
   446fc:	str	r1, [r4, #20]
   44700:	mov	r1, #91	; 0x5b
   44704:	strb	r1, [r0]
   44708:	beq	44920 <flatcc_json_printer_int32_enum_vector_field@@Base+0x2e4>
   4470c:	ldrb	r1, [r4, #25]
   44710:	ldr	r0, [r4, #20]
   44714:	cmp	r1, #0
   44718:	beq	447d4 <flatcc_json_printer_int32_enum_vector_field@@Base+0x198>
   4471c:	add	r1, r0, #1
   44720:	str	r1, [r4, #20]
   44724:	mov	r1, #10
   44728:	strb	r1, [r0]
   4472c:	ldr	r0, [r4, #20]
   44730:	ldrb	r2, [r4, #25]
   44734:	ldr	r3, [r4, #32]
   44738:	ldr	r1, [r4, #16]
   4473c:	mla	r7, r3, r2, r0
   44740:	mul	r5, r3, r2
   44744:	cmp	r7, r1
   44748:	bls	447b8 <flatcc_json_printer_int32_enum_vector_field@@Base+0x17c>
   4474c:	cmp	r0, r1
   44750:	bcc	4476c <flatcc_json_printer_int32_enum_vector_field@@Base+0x130>
   44754:	ldr	r2, [r4, #44]	; 0x2c
   44758:	mov	r0, r4
   4475c:	mov	r1, #0
   44760:	blx	r2
   44764:	ldr	r1, [r4, #16]
   44768:	ldr	r0, [r4, #20]
   4476c:	sub	r6, r1, r0
   44770:	cmp	r6, r5
   44774:	bcs	447b8 <flatcc_json_printer_int32_enum_vector_field@@Base+0x17c>
   44778:	mov	r1, #32
   4477c:	mov	r2, r6
   44780:	bl	14eec <memset@plt>
   44784:	ldr	r0, [r4, #20]
   44788:	ldr	r2, [r4, #44]	; 0x2c
   4478c:	mov	r1, #0
   44790:	add	r0, r0, r6
   44794:	str	r0, [r4, #20]
   44798:	mov	r0, r4
   4479c:	blx	r2
   447a0:	ldr	r1, [r4, #16]
   447a4:	ldr	r0, [r4, #20]
   447a8:	sub	r5, r5, r6
   447ac:	sub	r6, r1, r0
   447b0:	cmp	r5, r6
   447b4:	bhi	44778 <flatcc_json_printer_int32_enum_vector_field@@Base+0x13c>
   447b8:	mov	r1, #32
   447bc:	mov	r2, r5
   447c0:	bl	14eec <memset@plt>
   447c4:	ldr	r0, [r4, #20]
   447c8:	add	r0, r0, r5
   447cc:	str	r0, [r4, #20]
   447d0:	b	447f0 <flatcc_json_printer_int32_enum_vector_field@@Base+0x1b4>
   447d4:	ldr	r1, [r4, #16]
   447d8:	cmp	r0, r1
   447dc:	bcc	447f0 <flatcc_json_printer_int32_enum_vector_field@@Base+0x1b4>
   447e0:	ldr	r2, [r4, #44]	; 0x2c
   447e4:	mov	r0, r4
   447e8:	mov	r1, #0
   447ec:	blx	r2
   447f0:	ldr	r1, [r8, #4]
   447f4:	mov	r0, r4
   447f8:	blx	sl
   447fc:	subs	r9, r9, #1
   44800:	beq	44920 <flatcc_json_printer_int32_enum_vector_field@@Base+0x2e4>
   44804:	add	r7, r8, #8
   44808:	mov	r8, #44	; 0x2c
   4480c:	b	4483c <flatcc_json_printer_int32_enum_vector_field@@Base+0x200>
   44810:	mov	r1, #32
   44814:	mov	r2, r5
   44818:	bl	14eec <memset@plt>
   4481c:	ldr	r0, [r4, #20]
   44820:	add	r0, r0, r5
   44824:	str	r0, [r4, #20]
   44828:	ldr	r1, [r7], #4
   4482c:	mov	r0, r4
   44830:	blx	sl
   44834:	cmp	r9, #0
   44838:	beq	44920 <flatcc_json_printer_int32_enum_vector_field@@Base+0x2e4>
   4483c:	ldr	r0, [r4, #20]
   44840:	sub	r9, r9, #1
   44844:	add	r1, r0, #1
   44848:	str	r1, [r4, #20]
   4484c:	strb	r8, [r0]
   44850:	ldrb	r1, [r4, #25]
   44854:	ldr	r0, [r4, #20]
   44858:	cmp	r1, #0
   4485c:	beq	44900 <flatcc_json_printer_int32_enum_vector_field@@Base+0x2c4>
   44860:	add	r1, r0, #1
   44864:	str	r1, [r4, #20]
   44868:	mov	r1, #10
   4486c:	strb	r1, [r0]
   44870:	ldr	r0, [r4, #20]
   44874:	ldrb	r2, [r4, #25]
   44878:	ldr	r3, [r4, #32]
   4487c:	ldr	r1, [r4, #16]
   44880:	mla	r6, r3, r2, r0
   44884:	mul	r5, r3, r2
   44888:	cmp	r6, r1
   4488c:	bls	44810 <flatcc_json_printer_int32_enum_vector_field@@Base+0x1d4>
   44890:	cmp	r0, r1
   44894:	bcc	448b0 <flatcc_json_printer_int32_enum_vector_field@@Base+0x274>
   44898:	ldr	r2, [r4, #44]	; 0x2c
   4489c:	mov	r0, r4
   448a0:	mov	r1, #0
   448a4:	blx	r2
   448a8:	ldr	r1, [r4, #16]
   448ac:	ldr	r0, [r4, #20]
   448b0:	sub	r6, r1, r0
   448b4:	cmp	r6, r5
   448b8:	bcs	44810 <flatcc_json_printer_int32_enum_vector_field@@Base+0x1d4>
   448bc:	mov	r1, #32
   448c0:	mov	r2, r6
   448c4:	bl	14eec <memset@plt>
   448c8:	ldr	r0, [r4, #20]
   448cc:	ldr	r2, [r4, #44]	; 0x2c
   448d0:	mov	r1, #0
   448d4:	add	r0, r0, r6
   448d8:	str	r0, [r4, #20]
   448dc:	mov	r0, r4
   448e0:	blx	r2
   448e4:	ldr	r1, [r4, #16]
   448e8:	ldr	r0, [r4, #20]
   448ec:	sub	r5, r5, r6
   448f0:	sub	r6, r1, r0
   448f4:	cmp	r5, r6
   448f8:	bhi	448bc <flatcc_json_printer_int32_enum_vector_field@@Base+0x280>
   448fc:	b	44810 <flatcc_json_printer_int32_enum_vector_field@@Base+0x1d4>
   44900:	ldr	r1, [r4, #16]
   44904:	cmp	r0, r1
   44908:	bcc	44828 <flatcc_json_printer_int32_enum_vector_field@@Base+0x1ec>
   4490c:	ldr	r2, [r4, #44]	; 0x2c
   44910:	mov	r0, r4
   44914:	mov	r1, #0
   44918:	blx	r2
   4491c:	b	44828 <flatcc_json_printer_int32_enum_vector_field@@Base+0x1ec>
   44920:	ldrb	r1, [r4, #25]
   44924:	ldr	r0, [r4, #20]
   44928:	cmp	r1, #0
   4492c:	beq	449ec <flatcc_json_printer_int32_enum_vector_field@@Base+0x3b0>
   44930:	add	r1, r0, #1
   44934:	str	r1, [r4, #20]
   44938:	mov	r1, #10
   4493c:	strb	r1, [r0]
   44940:	ldr	r0, [r4, #32]
   44944:	sub	r2, r0, #1
   44948:	str	r2, [r4, #32]
   4494c:	ldrb	r3, [r4, #25]
   44950:	ldr	r0, [r4, #20]
   44954:	ldr	r1, [r4, #16]
   44958:	mla	r7, r2, r3, r0
   4495c:	mul	r5, r2, r3
   44960:	cmp	r7, r1
   44964:	bls	449d4 <flatcc_json_printer_int32_enum_vector_field@@Base+0x398>
   44968:	cmp	r0, r1
   4496c:	bcc	44988 <flatcc_json_printer_int32_enum_vector_field@@Base+0x34c>
   44970:	ldr	r2, [r4, #44]	; 0x2c
   44974:	mov	r0, r4
   44978:	mov	r1, #0
   4497c:	blx	r2
   44980:	ldr	r1, [r4, #16]
   44984:	ldr	r0, [r4, #20]
   44988:	sub	r6, r1, r0
   4498c:	cmp	r6, r5
   44990:	bcs	449d4 <flatcc_json_printer_int32_enum_vector_field@@Base+0x398>
   44994:	mov	r1, #32
   44998:	mov	r2, r6
   4499c:	bl	14eec <memset@plt>
   449a0:	ldr	r0, [r4, #20]
   449a4:	ldr	r2, [r4, #44]	; 0x2c
   449a8:	mov	r1, #0
   449ac:	add	r0, r0, r6
   449b0:	str	r0, [r4, #20]
   449b4:	mov	r0, r4
   449b8:	blx	r2
   449bc:	ldr	r1, [r4, #16]
   449c0:	ldr	r0, [r4, #20]
   449c4:	sub	r5, r5, r6
   449c8:	sub	r6, r1, r0
   449cc:	cmp	r5, r6
   449d0:	bhi	44994 <flatcc_json_printer_int32_enum_vector_field@@Base+0x358>
   449d4:	mov	r1, #32
   449d8:	mov	r2, r5
   449dc:	bl	14eec <memset@plt>
   449e0:	ldr	r0, [r4, #20]
   449e4:	add	r0, r0, r5
   449e8:	str	r0, [r4, #20]
   449ec:	add	r1, r0, #1
   449f0:	str	r1, [r4, #20]
   449f4:	mov	r1, #93	; 0x5d
   449f8:	strb	r1, [r0]
   449fc:	sub	sp, fp, #28
   44a00:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00044a04 <flatcc_json_printer_int64_enum_vector_field@@Base>:
   44a04:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   44a08:	add	fp, sp, #28
   44a0c:	sub	sp, sp, #4
   44a10:	mov	r4, r0
   44a14:	ldrb	r0, [r0, #27]
   44a18:	cmp	r0, #0
   44a1c:	beq	44a30 <flatcc_json_printer_int64_enum_vector_field@@Base+0x2c>
   44a20:	mov	r0, r4
   44a24:	sub	sp, fp, #28
   44a28:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   44a2c:	b	41be4 <flatcc_json_printer_int64_vector_field@@Base>
   44a30:	mov	r0, #4
   44a34:	add	r0, r0, r2, lsl #1
   44a38:	ldr	r2, [r1, #8]
   44a3c:	cmp	r0, r2
   44a40:	bge	44a60 <flatcc_json_printer_int64_enum_vector_field@@Base+0x5c>
   44a44:	ldr	r2, [r1, #4]
   44a48:	add	r0, r2, r0
   44a4c:	ldrh	r0, [r0]
   44a50:	cmp	r0, #0
   44a54:	ldrne	r2, [r1]
   44a58:	addsne	r8, r2, r0
   44a5c:	bne	44a68 <flatcc_json_printer_int64_enum_vector_field@@Base+0x64>
   44a60:	sub	sp, fp, #28
   44a64:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   44a68:	ldr	r0, [r1, #16]
   44a6c:	ldr	sl, [fp, #12]
   44a70:	ldr	r2, [fp, #8]
   44a74:	add	r7, r0, #1
   44a78:	cmp	r0, #0
   44a7c:	str	r7, [r1, #16]
   44a80:	beq	44a98 <flatcc_json_printer_int64_enum_vector_field@@Base+0x94>
   44a84:	ldr	r0, [r4, #20]
   44a88:	add	r1, r0, #1
   44a8c:	str	r1, [r4, #20]
   44a90:	mov	r1, #44	; 0x2c
   44a94:	strb	r1, [r0]
   44a98:	ldr	r0, [r8]
   44a9c:	mov	r1, r3
   44aa0:	ldr	r9, [r8, r0]!
   44aa4:	mov	r0, r4
   44aa8:	bl	3d354 <flatcc_json_printer_string_field@@Base+0x90>
   44aac:	ldr	r1, [r4, #32]
   44ab0:	ldr	r0, [r4, #20]
   44ab4:	cmp	r9, #0
   44ab8:	add	r1, r1, #1
   44abc:	str	r1, [r4, #32]
   44ac0:	add	r1, r0, #1
   44ac4:	str	r1, [r4, #20]
   44ac8:	mov	r1, #91	; 0x5b
   44acc:	strb	r1, [r0]
   44ad0:	beq	44cec <flatcc_json_printer_int64_enum_vector_field@@Base+0x2e8>
   44ad4:	ldrb	r1, [r4, #25]
   44ad8:	ldr	r0, [r4, #20]
   44adc:	cmp	r1, #0
   44ae0:	beq	44b9c <flatcc_json_printer_int64_enum_vector_field@@Base+0x198>
   44ae4:	add	r1, r0, #1
   44ae8:	str	r1, [r4, #20]
   44aec:	mov	r1, #10
   44af0:	strb	r1, [r0]
   44af4:	ldr	r0, [r4, #20]
   44af8:	ldrb	r2, [r4, #25]
   44afc:	ldr	r3, [r4, #32]
   44b00:	ldr	r1, [r4, #16]
   44b04:	mla	r7, r3, r2, r0
   44b08:	mul	r5, r3, r2
   44b0c:	cmp	r7, r1
   44b10:	bls	44b80 <flatcc_json_printer_int64_enum_vector_field@@Base+0x17c>
   44b14:	cmp	r0, r1
   44b18:	bcc	44b34 <flatcc_json_printer_int64_enum_vector_field@@Base+0x130>
   44b1c:	ldr	r2, [r4, #44]	; 0x2c
   44b20:	mov	r0, r4
   44b24:	mov	r1, #0
   44b28:	blx	r2
   44b2c:	ldr	r1, [r4, #16]
   44b30:	ldr	r0, [r4, #20]
   44b34:	sub	r6, r1, r0
   44b38:	cmp	r6, r5
   44b3c:	bcs	44b80 <flatcc_json_printer_int64_enum_vector_field@@Base+0x17c>
   44b40:	mov	r1, #32
   44b44:	mov	r2, r6
   44b48:	bl	14eec <memset@plt>
   44b4c:	ldr	r0, [r4, #20]
   44b50:	ldr	r2, [r4, #44]	; 0x2c
   44b54:	mov	r1, #0
   44b58:	add	r0, r0, r6
   44b5c:	str	r0, [r4, #20]
   44b60:	mov	r0, r4
   44b64:	blx	r2
   44b68:	ldr	r1, [r4, #16]
   44b6c:	ldr	r0, [r4, #20]
   44b70:	sub	r5, r5, r6
   44b74:	sub	r6, r1, r0
   44b78:	cmp	r5, r6
   44b7c:	bhi	44b40 <flatcc_json_printer_int64_enum_vector_field@@Base+0x13c>
   44b80:	mov	r1, #32
   44b84:	mov	r2, r5
   44b88:	bl	14eec <memset@plt>
   44b8c:	ldr	r0, [r4, #20]
   44b90:	add	r0, r0, r5
   44b94:	str	r0, [r4, #20]
   44b98:	b	44bb8 <flatcc_json_printer_int64_enum_vector_field@@Base+0x1b4>
   44b9c:	ldr	r1, [r4, #16]
   44ba0:	cmp	r0, r1
   44ba4:	bcc	44bb8 <flatcc_json_printer_int64_enum_vector_field@@Base+0x1b4>
   44ba8:	ldr	r2, [r4, #44]	; 0x2c
   44bac:	mov	r0, r4
   44bb0:	mov	r1, #0
   44bb4:	blx	r2
   44bb8:	ldrd	r2, [r8, #4]
   44bbc:	mov	r0, r4
   44bc0:	blx	sl
   44bc4:	subs	r9, r9, #1
   44bc8:	beq	44cec <flatcc_json_printer_int64_enum_vector_field@@Base+0x2e8>
   44bcc:	add	r7, r8, #12
   44bd0:	mov	r8, #44	; 0x2c
   44bd4:	b	44c08 <flatcc_json_printer_int64_enum_vector_field@@Base+0x204>
   44bd8:	mov	r1, #32
   44bdc:	mov	r2, r5
   44be0:	bl	14eec <memset@plt>
   44be4:	ldr	r0, [r4, #20]
   44be8:	add	r0, r0, r5
   44bec:	str	r0, [r4, #20]
   44bf0:	ldrd	r2, [r7]
   44bf4:	mov	r0, r4
   44bf8:	blx	sl
   44bfc:	add	r7, r7, #8
   44c00:	cmp	r9, #0
   44c04:	beq	44cec <flatcc_json_printer_int64_enum_vector_field@@Base+0x2e8>
   44c08:	ldr	r0, [r4, #20]
   44c0c:	sub	r9, r9, #1
   44c10:	add	r1, r0, #1
   44c14:	str	r1, [r4, #20]
   44c18:	strb	r8, [r0]
   44c1c:	ldrb	r1, [r4, #25]
   44c20:	ldr	r0, [r4, #20]
   44c24:	cmp	r1, #0
   44c28:	beq	44ccc <flatcc_json_printer_int64_enum_vector_field@@Base+0x2c8>
   44c2c:	add	r1, r0, #1
   44c30:	str	r1, [r4, #20]
   44c34:	mov	r1, #10
   44c38:	strb	r1, [r0]
   44c3c:	ldr	r0, [r4, #20]
   44c40:	ldrb	r2, [r4, #25]
   44c44:	ldr	r3, [r4, #32]
   44c48:	ldr	r1, [r4, #16]
   44c4c:	mla	r6, r3, r2, r0
   44c50:	mul	r5, r3, r2
   44c54:	cmp	r6, r1
   44c58:	bls	44bd8 <flatcc_json_printer_int64_enum_vector_field@@Base+0x1d4>
   44c5c:	cmp	r0, r1
   44c60:	bcc	44c7c <flatcc_json_printer_int64_enum_vector_field@@Base+0x278>
   44c64:	ldr	r2, [r4, #44]	; 0x2c
   44c68:	mov	r0, r4
   44c6c:	mov	r1, #0
   44c70:	blx	r2
   44c74:	ldr	r1, [r4, #16]
   44c78:	ldr	r0, [r4, #20]
   44c7c:	sub	r6, r1, r0
   44c80:	cmp	r6, r5
   44c84:	bcs	44bd8 <flatcc_json_printer_int64_enum_vector_field@@Base+0x1d4>
   44c88:	mov	r1, #32
   44c8c:	mov	r2, r6
   44c90:	bl	14eec <memset@plt>
   44c94:	ldr	r0, [r4, #20]
   44c98:	ldr	r2, [r4, #44]	; 0x2c
   44c9c:	mov	r1, #0
   44ca0:	add	r0, r0, r6
   44ca4:	str	r0, [r4, #20]
   44ca8:	mov	r0, r4
   44cac:	blx	r2
   44cb0:	ldr	r1, [r4, #16]
   44cb4:	ldr	r0, [r4, #20]
   44cb8:	sub	r5, r5, r6
   44cbc:	sub	r6, r1, r0
   44cc0:	cmp	r5, r6
   44cc4:	bhi	44c88 <flatcc_json_printer_int64_enum_vector_field@@Base+0x284>
   44cc8:	b	44bd8 <flatcc_json_printer_int64_enum_vector_field@@Base+0x1d4>
   44ccc:	ldr	r1, [r4, #16]
   44cd0:	cmp	r0, r1
   44cd4:	bcc	44bf0 <flatcc_json_printer_int64_enum_vector_field@@Base+0x1ec>
   44cd8:	ldr	r2, [r4, #44]	; 0x2c
   44cdc:	mov	r0, r4
   44ce0:	mov	r1, #0
   44ce4:	blx	r2
   44ce8:	b	44bf0 <flatcc_json_printer_int64_enum_vector_field@@Base+0x1ec>
   44cec:	ldrb	r1, [r4, #25]
   44cf0:	ldr	r0, [r4, #20]
   44cf4:	cmp	r1, #0
   44cf8:	beq	44db8 <flatcc_json_printer_int64_enum_vector_field@@Base+0x3b4>
   44cfc:	add	r1, r0, #1
   44d00:	str	r1, [r4, #20]
   44d04:	mov	r1, #10
   44d08:	strb	r1, [r0]
   44d0c:	ldr	r0, [r4, #32]
   44d10:	sub	r2, r0, #1
   44d14:	str	r2, [r4, #32]
   44d18:	ldrb	r3, [r4, #25]
   44d1c:	ldr	r0, [r4, #20]
   44d20:	ldr	r1, [r4, #16]
   44d24:	mla	r7, r2, r3, r0
   44d28:	mul	r5, r2, r3
   44d2c:	cmp	r7, r1
   44d30:	bls	44da0 <flatcc_json_printer_int64_enum_vector_field@@Base+0x39c>
   44d34:	cmp	r0, r1
   44d38:	bcc	44d54 <flatcc_json_printer_int64_enum_vector_field@@Base+0x350>
   44d3c:	ldr	r2, [r4, #44]	; 0x2c
   44d40:	mov	r0, r4
   44d44:	mov	r1, #0
   44d48:	blx	r2
   44d4c:	ldr	r1, [r4, #16]
   44d50:	ldr	r0, [r4, #20]
   44d54:	sub	r6, r1, r0
   44d58:	cmp	r6, r5
   44d5c:	bcs	44da0 <flatcc_json_printer_int64_enum_vector_field@@Base+0x39c>
   44d60:	mov	r1, #32
   44d64:	mov	r2, r6
   44d68:	bl	14eec <memset@plt>
   44d6c:	ldr	r0, [r4, #20]
   44d70:	ldr	r2, [r4, #44]	; 0x2c
   44d74:	mov	r1, #0
   44d78:	add	r0, r0, r6
   44d7c:	str	r0, [r4, #20]
   44d80:	mov	r0, r4
   44d84:	blx	r2
   44d88:	ldr	r1, [r4, #16]
   44d8c:	ldr	r0, [r4, #20]
   44d90:	sub	r5, r5, r6
   44d94:	sub	r6, r1, r0
   44d98:	cmp	r5, r6
   44d9c:	bhi	44d60 <flatcc_json_printer_int64_enum_vector_field@@Base+0x35c>
   44da0:	mov	r1, #32
   44da4:	mov	r2, r5
   44da8:	bl	14eec <memset@plt>
   44dac:	ldr	r0, [r4, #20]
   44db0:	add	r0, r0, r5
   44db4:	str	r0, [r4, #20]
   44db8:	add	r1, r0, #1
   44dbc:	str	r1, [r4, #20]
   44dc0:	mov	r1, #93	; 0x5d
   44dc4:	strb	r1, [r0]
   44dc8:	sub	sp, fp, #28
   44dcc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00044dd0 <flatcc_json_printer_bool_enum_vector_field@@Base>:
   44dd0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   44dd4:	add	fp, sp, #28
   44dd8:	sub	sp, sp, #4
   44ddc:	mov	r4, r0
   44de0:	ldrb	r0, [r0, #27]
   44de4:	cmp	r0, #0
   44de8:	beq	44dfc <flatcc_json_printer_bool_enum_vector_field@@Base+0x2c>
   44dec:	mov	r0, r4
   44df0:	sub	sp, fp, #28
   44df4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   44df8:	b	41ff8 <flatcc_json_printer_bool_vector_field@@Base>
   44dfc:	mov	r0, #4
   44e00:	add	r0, r0, r2, lsl #1
   44e04:	ldr	r2, [r1, #8]
   44e08:	cmp	r0, r2
   44e0c:	bge	44e2c <flatcc_json_printer_bool_enum_vector_field@@Base+0x5c>
   44e10:	ldr	r2, [r1, #4]
   44e14:	add	r0, r2, r0
   44e18:	ldrh	r0, [r0]
   44e1c:	cmp	r0, #0
   44e20:	ldrne	r2, [r1]
   44e24:	addsne	r8, r2, r0
   44e28:	bne	44e34 <flatcc_json_printer_bool_enum_vector_field@@Base+0x64>
   44e2c:	sub	sp, fp, #28
   44e30:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   44e34:	ldr	r0, [r1, #16]
   44e38:	ldr	sl, [fp, #12]
   44e3c:	ldr	r2, [fp, #8]
   44e40:	add	r7, r0, #1
   44e44:	cmp	r0, #0
   44e48:	str	r7, [r1, #16]
   44e4c:	beq	44e64 <flatcc_json_printer_bool_enum_vector_field@@Base+0x94>
   44e50:	ldr	r0, [r4, #20]
   44e54:	add	r1, r0, #1
   44e58:	str	r1, [r4, #20]
   44e5c:	mov	r1, #44	; 0x2c
   44e60:	strb	r1, [r0]
   44e64:	ldr	r0, [r8]
   44e68:	mov	r1, r3
   44e6c:	ldr	r9, [r8, r0]!
   44e70:	mov	r0, r4
   44e74:	bl	3d354 <flatcc_json_printer_string_field@@Base+0x90>
   44e78:	ldr	r1, [r4, #32]
   44e7c:	ldr	r0, [r4, #20]
   44e80:	cmp	r9, #0
   44e84:	add	r1, r1, #1
   44e88:	str	r1, [r4, #32]
   44e8c:	add	r1, r0, #1
   44e90:	str	r1, [r4, #20]
   44e94:	mov	r1, #91	; 0x5b
   44e98:	strb	r1, [r0]
   44e9c:	beq	450b4 <flatcc_json_printer_bool_enum_vector_field@@Base+0x2e4>
   44ea0:	ldrb	r1, [r4, #25]
   44ea4:	ldr	r0, [r4, #20]
   44ea8:	cmp	r1, #0
   44eac:	beq	44f68 <flatcc_json_printer_bool_enum_vector_field@@Base+0x198>
   44eb0:	add	r1, r0, #1
   44eb4:	str	r1, [r4, #20]
   44eb8:	mov	r1, #10
   44ebc:	strb	r1, [r0]
   44ec0:	ldr	r0, [r4, #20]
   44ec4:	ldrb	r2, [r4, #25]
   44ec8:	ldr	r3, [r4, #32]
   44ecc:	ldr	r1, [r4, #16]
   44ed0:	mla	r7, r3, r2, r0
   44ed4:	mul	r5, r3, r2
   44ed8:	cmp	r7, r1
   44edc:	bls	44f4c <flatcc_json_printer_bool_enum_vector_field@@Base+0x17c>
   44ee0:	cmp	r0, r1
   44ee4:	bcc	44f00 <flatcc_json_printer_bool_enum_vector_field@@Base+0x130>
   44ee8:	ldr	r2, [r4, #44]	; 0x2c
   44eec:	mov	r0, r4
   44ef0:	mov	r1, #0
   44ef4:	blx	r2
   44ef8:	ldr	r1, [r4, #16]
   44efc:	ldr	r0, [r4, #20]
   44f00:	sub	r6, r1, r0
   44f04:	cmp	r6, r5
   44f08:	bcs	44f4c <flatcc_json_printer_bool_enum_vector_field@@Base+0x17c>
   44f0c:	mov	r1, #32
   44f10:	mov	r2, r6
   44f14:	bl	14eec <memset@plt>
   44f18:	ldr	r0, [r4, #20]
   44f1c:	ldr	r2, [r4, #44]	; 0x2c
   44f20:	mov	r1, #0
   44f24:	add	r0, r0, r6
   44f28:	str	r0, [r4, #20]
   44f2c:	mov	r0, r4
   44f30:	blx	r2
   44f34:	ldr	r1, [r4, #16]
   44f38:	ldr	r0, [r4, #20]
   44f3c:	sub	r5, r5, r6
   44f40:	sub	r6, r1, r0
   44f44:	cmp	r5, r6
   44f48:	bhi	44f0c <flatcc_json_printer_bool_enum_vector_field@@Base+0x13c>
   44f4c:	mov	r1, #32
   44f50:	mov	r2, r5
   44f54:	bl	14eec <memset@plt>
   44f58:	ldr	r0, [r4, #20]
   44f5c:	add	r0, r0, r5
   44f60:	str	r0, [r4, #20]
   44f64:	b	44f84 <flatcc_json_printer_bool_enum_vector_field@@Base+0x1b4>
   44f68:	ldr	r1, [r4, #16]
   44f6c:	cmp	r0, r1
   44f70:	bcc	44f84 <flatcc_json_printer_bool_enum_vector_field@@Base+0x1b4>
   44f74:	ldr	r2, [r4, #44]	; 0x2c
   44f78:	mov	r0, r4
   44f7c:	mov	r1, #0
   44f80:	blx	r2
   44f84:	ldrb	r1, [r8, #4]
   44f88:	mov	r0, r4
   44f8c:	blx	sl
   44f90:	subs	r9, r9, #1
   44f94:	beq	450b4 <flatcc_json_printer_bool_enum_vector_field@@Base+0x2e4>
   44f98:	add	r7, r8, #5
   44f9c:	mov	r8, #44	; 0x2c
   44fa0:	b	44fd0 <flatcc_json_printer_bool_enum_vector_field@@Base+0x200>
   44fa4:	mov	r1, #32
   44fa8:	mov	r2, r5
   44fac:	bl	14eec <memset@plt>
   44fb0:	ldr	r0, [r4, #20]
   44fb4:	add	r0, r0, r5
   44fb8:	str	r0, [r4, #20]
   44fbc:	ldrb	r1, [r7], #1
   44fc0:	mov	r0, r4
   44fc4:	blx	sl
   44fc8:	cmp	r9, #0
   44fcc:	beq	450b4 <flatcc_json_printer_bool_enum_vector_field@@Base+0x2e4>
   44fd0:	ldr	r0, [r4, #20]
   44fd4:	sub	r9, r9, #1
   44fd8:	add	r1, r0, #1
   44fdc:	str	r1, [r4, #20]
   44fe0:	strb	r8, [r0]
   44fe4:	ldrb	r1, [r4, #25]
   44fe8:	ldr	r0, [r4, #20]
   44fec:	cmp	r1, #0
   44ff0:	beq	45094 <flatcc_json_printer_bool_enum_vector_field@@Base+0x2c4>
   44ff4:	add	r1, r0, #1
   44ff8:	str	r1, [r4, #20]
   44ffc:	mov	r1, #10
   45000:	strb	r1, [r0]
   45004:	ldr	r0, [r4, #20]
   45008:	ldrb	r2, [r4, #25]
   4500c:	ldr	r3, [r4, #32]
   45010:	ldr	r1, [r4, #16]
   45014:	mla	r6, r3, r2, r0
   45018:	mul	r5, r3, r2
   4501c:	cmp	r6, r1
   45020:	bls	44fa4 <flatcc_json_printer_bool_enum_vector_field@@Base+0x1d4>
   45024:	cmp	r0, r1
   45028:	bcc	45044 <flatcc_json_printer_bool_enum_vector_field@@Base+0x274>
   4502c:	ldr	r2, [r4, #44]	; 0x2c
   45030:	mov	r0, r4
   45034:	mov	r1, #0
   45038:	blx	r2
   4503c:	ldr	r1, [r4, #16]
   45040:	ldr	r0, [r4, #20]
   45044:	sub	r6, r1, r0
   45048:	cmp	r6, r5
   4504c:	bcs	44fa4 <flatcc_json_printer_bool_enum_vector_field@@Base+0x1d4>
   45050:	mov	r1, #32
   45054:	mov	r2, r6
   45058:	bl	14eec <memset@plt>
   4505c:	ldr	r0, [r4, #20]
   45060:	ldr	r2, [r4, #44]	; 0x2c
   45064:	mov	r1, #0
   45068:	add	r0, r0, r6
   4506c:	str	r0, [r4, #20]
   45070:	mov	r0, r4
   45074:	blx	r2
   45078:	ldr	r1, [r4, #16]
   4507c:	ldr	r0, [r4, #20]
   45080:	sub	r5, r5, r6
   45084:	sub	r6, r1, r0
   45088:	cmp	r5, r6
   4508c:	bhi	45050 <flatcc_json_printer_bool_enum_vector_field@@Base+0x280>
   45090:	b	44fa4 <flatcc_json_printer_bool_enum_vector_field@@Base+0x1d4>
   45094:	ldr	r1, [r4, #16]
   45098:	cmp	r0, r1
   4509c:	bcc	44fbc <flatcc_json_printer_bool_enum_vector_field@@Base+0x1ec>
   450a0:	ldr	r2, [r4, #44]	; 0x2c
   450a4:	mov	r0, r4
   450a8:	mov	r1, #0
   450ac:	blx	r2
   450b0:	b	44fbc <flatcc_json_printer_bool_enum_vector_field@@Base+0x1ec>
   450b4:	ldrb	r1, [r4, #25]
   450b8:	ldr	r0, [r4, #20]
   450bc:	cmp	r1, #0
   450c0:	beq	45180 <flatcc_json_printer_bool_enum_vector_field@@Base+0x3b0>
   450c4:	add	r1, r0, #1
   450c8:	str	r1, [r4, #20]
   450cc:	mov	r1, #10
   450d0:	strb	r1, [r0]
   450d4:	ldr	r0, [r4, #32]
   450d8:	sub	r2, r0, #1
   450dc:	str	r2, [r4, #32]
   450e0:	ldrb	r3, [r4, #25]
   450e4:	ldr	r0, [r4, #20]
   450e8:	ldr	r1, [r4, #16]
   450ec:	mla	r7, r2, r3, r0
   450f0:	mul	r5, r2, r3
   450f4:	cmp	r7, r1
   450f8:	bls	45168 <flatcc_json_printer_bool_enum_vector_field@@Base+0x398>
   450fc:	cmp	r0, r1
   45100:	bcc	4511c <flatcc_json_printer_bool_enum_vector_field@@Base+0x34c>
   45104:	ldr	r2, [r4, #44]	; 0x2c
   45108:	mov	r0, r4
   4510c:	mov	r1, #0
   45110:	blx	r2
   45114:	ldr	r1, [r4, #16]
   45118:	ldr	r0, [r4, #20]
   4511c:	sub	r6, r1, r0
   45120:	cmp	r6, r5
   45124:	bcs	45168 <flatcc_json_printer_bool_enum_vector_field@@Base+0x398>
   45128:	mov	r1, #32
   4512c:	mov	r2, r6
   45130:	bl	14eec <memset@plt>
   45134:	ldr	r0, [r4, #20]
   45138:	ldr	r2, [r4, #44]	; 0x2c
   4513c:	mov	r1, #0
   45140:	add	r0, r0, r6
   45144:	str	r0, [r4, #20]
   45148:	mov	r0, r4
   4514c:	blx	r2
   45150:	ldr	r1, [r4, #16]
   45154:	ldr	r0, [r4, #20]
   45158:	sub	r5, r5, r6
   4515c:	sub	r6, r1, r0
   45160:	cmp	r5, r6
   45164:	bhi	45128 <flatcc_json_printer_bool_enum_vector_field@@Base+0x358>
   45168:	mov	r1, #32
   4516c:	mov	r2, r5
   45170:	bl	14eec <memset@plt>
   45174:	ldr	r0, [r4, #20]
   45178:	add	r0, r0, r5
   4517c:	str	r0, [r4, #20]
   45180:	add	r1, r0, #1
   45184:	str	r1, [r4, #20]
   45188:	mov	r1, #93	; 0x5d
   4518c:	strb	r1, [r0]
   45190:	sub	sp, fp, #28
   45194:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00045198 <flatcc_json_printer_struct_vector_field@@Base>:
   45198:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   4519c:	add	fp, sp, #28
   451a0:	sub	sp, sp, #4
   451a4:	mov	r4, r0
   451a8:	mov	r0, #4
   451ac:	add	r0, r0, r2, lsl #1
   451b0:	ldr	r2, [r1, #8]
   451b4:	cmp	r0, r2
   451b8:	bge	451d8 <flatcc_json_printer_struct_vector_field@@Base+0x40>
   451bc:	ldr	r2, [r1, #4]
   451c0:	add	r0, r2, r0
   451c4:	ldrh	r0, [r0]
   451c8:	cmp	r0, #0
   451cc:	ldrne	r2, [r1]
   451d0:	addsne	r6, r2, r0
   451d4:	bne	451e0 <flatcc_json_printer_struct_vector_field@@Base+0x48>
   451d8:	sub	sp, fp, #28
   451dc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   451e0:	ldr	r0, [r1, #16]
   451e4:	ldr	r2, [fp, #8]
   451e8:	add	r7, r0, #1
   451ec:	cmp	r0, #0
   451f0:	str	r7, [r1, #16]
   451f4:	beq	4520c <flatcc_json_printer_struct_vector_field@@Base+0x74>
   451f8:	ldr	r0, [r4, #20]
   451fc:	add	r1, r0, #1
   45200:	str	r1, [r4, #20]
   45204:	mov	r1, #44	; 0x2c
   45208:	strb	r1, [r0]
   4520c:	ldr	r0, [r6]
   45210:	mov	r1, r3
   45214:	ldr	r5, [r6, r0]!
   45218:	mov	r0, r4
   4521c:	bl	3d354 <flatcc_json_printer_string_field@@Base+0x90>
   45220:	ldr	r1, [r4, #32]
   45224:	ldr	r0, [r4, #20]
   45228:	cmp	r5, #0
   4522c:	add	r1, r1, #1
   45230:	str	r1, [r4, #32]
   45234:	add	r1, r0, #1
   45238:	str	r1, [r4, #20]
   4523c:	mov	r1, #91	; 0x5b
   45240:	strb	r1, [r0]
   45244:	beq	4565c <flatcc_json_printer_struct_vector_field@@Base+0x4c4>
   45248:	ldrb	r1, [r4, #25]
   4524c:	ldr	r0, [r4, #20]
   45250:	add	r9, r6, #4
   45254:	cmp	r1, #0
   45258:	beq	45314 <flatcc_json_printer_struct_vector_field@@Base+0x17c>
   4525c:	add	r1, r0, #1
   45260:	str	r1, [r4, #20]
   45264:	mov	r1, #10
   45268:	strb	r1, [r0]
   4526c:	ldr	r0, [r4, #20]
   45270:	ldrb	r2, [r4, #25]
   45274:	ldr	r3, [r4, #32]
   45278:	ldr	r1, [r4, #16]
   4527c:	mla	r7, r3, r2, r0
   45280:	mul	r6, r3, r2
   45284:	cmp	r7, r1
   45288:	bls	452f8 <flatcc_json_printer_struct_vector_field@@Base+0x160>
   4528c:	cmp	r0, r1
   45290:	bcc	452ac <flatcc_json_printer_struct_vector_field@@Base+0x114>
   45294:	ldr	r2, [r4, #44]	; 0x2c
   45298:	mov	r0, r4
   4529c:	mov	r1, #0
   452a0:	blx	r2
   452a4:	ldr	r1, [r4, #16]
   452a8:	ldr	r0, [r4, #20]
   452ac:	sub	r7, r1, r0
   452b0:	cmp	r7, r6
   452b4:	bcs	452f8 <flatcc_json_printer_struct_vector_field@@Base+0x160>
   452b8:	mov	r1, #32
   452bc:	mov	r2, r7
   452c0:	bl	14eec <memset@plt>
   452c4:	ldr	r0, [r4, #20]
   452c8:	ldr	r2, [r4, #44]	; 0x2c
   452cc:	mov	r1, #0
   452d0:	add	r0, r0, r7
   452d4:	str	r0, [r4, #20]
   452d8:	mov	r0, r4
   452dc:	blx	r2
   452e0:	ldr	r1, [r4, #16]
   452e4:	ldr	r0, [r4, #20]
   452e8:	sub	r6, r6, r7
   452ec:	sub	r7, r1, r0
   452f0:	cmp	r6, r7
   452f4:	bhi	452b8 <flatcc_json_printer_struct_vector_field@@Base+0x120>
   452f8:	mov	r1, #32
   452fc:	mov	r2, r6
   45300:	bl	14eec <memset@plt>
   45304:	ldr	r0, [r4, #20]
   45308:	add	r0, r0, r6
   4530c:	str	r0, [r4, #20]
   45310:	b	45334 <flatcc_json_printer_struct_vector_field@@Base+0x19c>
   45314:	ldr	r1, [r4, #16]
   45318:	cmp	r0, r1
   4531c:	bcc	45334 <flatcc_json_printer_struct_vector_field@@Base+0x19c>
   45320:	ldr	r2, [r4, #44]	; 0x2c
   45324:	mov	r0, r4
   45328:	mov	r1, #0
   4532c:	blx	r2
   45330:	ldr	r0, [r4, #20]
   45334:	add	r1, r0, #1
   45338:	ldr	r2, [fp, #16]
   4533c:	str	r1, [r4, #20]
   45340:	ldr	r1, [r4, #32]
   45344:	add	r1, r1, #1
   45348:	str	r1, [r4, #32]
   4534c:	mov	r1, #123	; 0x7b
   45350:	strb	r1, [r0]
   45354:	mov	r0, r4
   45358:	mov	r1, r9
   4535c:	blx	r2
   45360:	ldrb	r1, [r4, #25]
   45364:	ldr	r0, [r4, #20]
   45368:	cmp	r1, #0
   4536c:	beq	4542c <flatcc_json_printer_struct_vector_field@@Base+0x294>
   45370:	add	r1, r0, #1
   45374:	str	r1, [r4, #20]
   45378:	mov	r1, #10
   4537c:	strb	r1, [r0]
   45380:	ldr	r0, [r4, #32]
   45384:	sub	r2, r0, #1
   45388:	str	r2, [r4, #32]
   4538c:	ldrb	r3, [r4, #25]
   45390:	ldr	r0, [r4, #20]
   45394:	ldr	r1, [r4, #16]
   45398:	mla	r7, r2, r3, r0
   4539c:	mul	r6, r2, r3
   453a0:	cmp	r7, r1
   453a4:	bls	45414 <flatcc_json_printer_struct_vector_field@@Base+0x27c>
   453a8:	cmp	r0, r1
   453ac:	bcc	453c8 <flatcc_json_printer_struct_vector_field@@Base+0x230>
   453b0:	ldr	r2, [r4, #44]	; 0x2c
   453b4:	mov	r0, r4
   453b8:	mov	r1, #0
   453bc:	blx	r2
   453c0:	ldr	r1, [r4, #16]
   453c4:	ldr	r0, [r4, #20]
   453c8:	sub	r7, r1, r0
   453cc:	cmp	r7, r6
   453d0:	bcs	45414 <flatcc_json_printer_struct_vector_field@@Base+0x27c>
   453d4:	mov	r1, #32
   453d8:	mov	r2, r7
   453dc:	bl	14eec <memset@plt>
   453e0:	ldr	r0, [r4, #20]
   453e4:	ldr	r2, [r4, #44]	; 0x2c
   453e8:	mov	r1, #0
   453ec:	add	r0, r0, r7
   453f0:	str	r0, [r4, #20]
   453f4:	mov	r0, r4
   453f8:	blx	r2
   453fc:	ldr	r1, [r4, #16]
   45400:	ldr	r0, [r4, #20]
   45404:	sub	r6, r6, r7
   45408:	sub	r7, r1, r0
   4540c:	cmp	r6, r7
   45410:	bhi	453d4 <flatcc_json_printer_struct_vector_field@@Base+0x23c>
   45414:	mov	r1, #32
   45418:	mov	r2, r6
   4541c:	bl	14eec <memset@plt>
   45420:	ldr	r0, [r4, #20]
   45424:	add	r0, r0, r6
   45428:	str	r0, [r4, #20]
   4542c:	add	r1, r0, #1
   45430:	mov	sl, #125	; 0x7d
   45434:	subs	r5, r5, #1
   45438:	str	r1, [r4, #20]
   4543c:	strb	sl, [r0]
   45440:	beq	4565c <flatcc_json_printer_struct_vector_field@@Base+0x4c4>
   45444:	mov	r8, #10
   45448:	b	45478 <flatcc_json_printer_struct_vector_field@@Base+0x2e0>
   4544c:	mov	r1, #32
   45450:	mov	r2, r6
   45454:	bl	14eec <memset@plt>
   45458:	ldr	r0, [r4, #20]
   4545c:	add	r0, r0, r6
   45460:	str	r0, [r4, #20]
   45464:	add	r1, r0, #1
   45468:	cmp	r5, #0
   4546c:	str	r1, [r4, #20]
   45470:	strb	sl, [r0]
   45474:	beq	4565c <flatcc_json_printer_struct_vector_field@@Base+0x4c4>
   45478:	ldr	r0, [r4, #20]
   4547c:	add	r1, r0, #1
   45480:	str	r1, [r4, #20]
   45484:	mov	r1, #44	; 0x2c
   45488:	strb	r1, [r0]
   4548c:	ldr	r0, [fp, #12]
   45490:	ldrb	r1, [r4, #25]
   45494:	add	r9, r9, r0
   45498:	ldr	r0, [r4, #20]
   4549c:	cmp	r1, #0
   454a0:	beq	45558 <flatcc_json_printer_struct_vector_field@@Base+0x3c0>
   454a4:	add	r1, r0, #1
   454a8:	str	r1, [r4, #20]
   454ac:	strb	r8, [r0]
   454b0:	ldr	r0, [r4, #20]
   454b4:	ldrb	r2, [r4, #25]
   454b8:	ldr	r3, [r4, #32]
   454bc:	ldr	r1, [r4, #16]
   454c0:	mla	r7, r3, r2, r0
   454c4:	mul	r6, r3, r2
   454c8:	cmp	r7, r1
   454cc:	bls	4553c <flatcc_json_printer_struct_vector_field@@Base+0x3a4>
   454d0:	cmp	r0, r1
   454d4:	bcc	454f0 <flatcc_json_printer_struct_vector_field@@Base+0x358>
   454d8:	ldr	r2, [r4, #44]	; 0x2c
   454dc:	mov	r0, r4
   454e0:	mov	r1, #0
   454e4:	blx	r2
   454e8:	ldr	r1, [r4, #16]
   454ec:	ldr	r0, [r4, #20]
   454f0:	sub	r7, r1, r0
   454f4:	cmp	r7, r6
   454f8:	bcs	4553c <flatcc_json_printer_struct_vector_field@@Base+0x3a4>
   454fc:	mov	r1, #32
   45500:	mov	r2, r7
   45504:	bl	14eec <memset@plt>
   45508:	ldr	r0, [r4, #20]
   4550c:	ldr	r2, [r4, #44]	; 0x2c
   45510:	mov	r1, #0
   45514:	add	r0, r0, r7
   45518:	str	r0, [r4, #20]
   4551c:	mov	r0, r4
   45520:	blx	r2
   45524:	ldr	r1, [r4, #16]
   45528:	ldr	r0, [r4, #20]
   4552c:	sub	r6, r6, r7
   45530:	sub	r7, r1, r0
   45534:	cmp	r6, r7
   45538:	bhi	454fc <flatcc_json_printer_struct_vector_field@@Base+0x364>
   4553c:	mov	r1, #32
   45540:	mov	r2, r6
   45544:	bl	14eec <memset@plt>
   45548:	ldr	r0, [r4, #20]
   4554c:	add	r0, r0, r6
   45550:	str	r0, [r4, #20]
   45554:	b	45578 <flatcc_json_printer_struct_vector_field@@Base+0x3e0>
   45558:	ldr	r1, [r4, #16]
   4555c:	cmp	r0, r1
   45560:	bcc	45578 <flatcc_json_printer_struct_vector_field@@Base+0x3e0>
   45564:	ldr	r2, [r4, #44]	; 0x2c
   45568:	mov	r0, r4
   4556c:	mov	r1, #0
   45570:	blx	r2
   45574:	ldr	r0, [r4, #20]
   45578:	add	r1, r0, #1
   4557c:	ldr	r2, [fp, #16]
   45580:	sub	r5, r5, #1
   45584:	str	r1, [r4, #20]
   45588:	ldr	r1, [r4, #32]
   4558c:	add	r1, r1, #1
   45590:	str	r1, [r4, #32]
   45594:	mov	r1, #123	; 0x7b
   45598:	strb	r1, [r0]
   4559c:	mov	r0, r4
   455a0:	mov	r1, r9
   455a4:	blx	r2
   455a8:	ldrb	r1, [r4, #25]
   455ac:	ldr	r0, [r4, #20]
   455b0:	cmp	r1, #0
   455b4:	beq	45464 <flatcc_json_printer_struct_vector_field@@Base+0x2cc>
   455b8:	add	r1, r0, #1
   455bc:	str	r1, [r4, #20]
   455c0:	strb	r8, [r0]
   455c4:	ldr	r0, [r4, #32]
   455c8:	sub	r2, r0, #1
   455cc:	str	r2, [r4, #32]
   455d0:	ldrb	r3, [r4, #25]
   455d4:	ldr	r0, [r4, #20]
   455d8:	ldr	r1, [r4, #16]
   455dc:	mla	r7, r2, r3, r0
   455e0:	mul	r6, r2, r3
   455e4:	cmp	r7, r1
   455e8:	bls	4544c <flatcc_json_printer_struct_vector_field@@Base+0x2b4>
   455ec:	cmp	r0, r1
   455f0:	bcc	4560c <flatcc_json_printer_struct_vector_field@@Base+0x474>
   455f4:	ldr	r2, [r4, #44]	; 0x2c
   455f8:	mov	r0, r4
   455fc:	mov	r1, #0
   45600:	blx	r2
   45604:	ldr	r1, [r4, #16]
   45608:	ldr	r0, [r4, #20]
   4560c:	sub	r7, r1, r0
   45610:	cmp	r7, r6
   45614:	bcs	4544c <flatcc_json_printer_struct_vector_field@@Base+0x2b4>
   45618:	mov	r1, #32
   4561c:	mov	r2, r7
   45620:	bl	14eec <memset@plt>
   45624:	ldr	r0, [r4, #20]
   45628:	ldr	r2, [r4, #44]	; 0x2c
   4562c:	mov	r1, #0
   45630:	add	r0, r0, r7
   45634:	str	r0, [r4, #20]
   45638:	mov	r0, r4
   4563c:	blx	r2
   45640:	ldr	r1, [r4, #16]
   45644:	ldr	r0, [r4, #20]
   45648:	sub	r6, r6, r7
   4564c:	sub	r7, r1, r0
   45650:	cmp	r6, r7
   45654:	bhi	45618 <flatcc_json_printer_struct_vector_field@@Base+0x480>
   45658:	b	4544c <flatcc_json_printer_struct_vector_field@@Base+0x2b4>
   4565c:	ldrb	r1, [r4, #25]
   45660:	ldr	r0, [r4, #20]
   45664:	cmp	r1, #0
   45668:	beq	45728 <flatcc_json_printer_struct_vector_field@@Base+0x590>
   4566c:	add	r1, r0, #1
   45670:	str	r1, [r4, #20]
   45674:	mov	r1, #10
   45678:	strb	r1, [r0]
   4567c:	ldr	r0, [r4, #32]
   45680:	sub	r2, r0, #1
   45684:	str	r2, [r4, #32]
   45688:	ldrb	r3, [r4, #25]
   4568c:	ldr	r0, [r4, #20]
   45690:	ldr	r1, [r4, #16]
   45694:	mla	r7, r2, r3, r0
   45698:	mul	r5, r2, r3
   4569c:	cmp	r7, r1
   456a0:	bls	45710 <flatcc_json_printer_struct_vector_field@@Base+0x578>
   456a4:	cmp	r0, r1
   456a8:	bcc	456c4 <flatcc_json_printer_struct_vector_field@@Base+0x52c>
   456ac:	ldr	r2, [r4, #44]	; 0x2c
   456b0:	mov	r0, r4
   456b4:	mov	r1, #0
   456b8:	blx	r2
   456bc:	ldr	r1, [r4, #16]
   456c0:	ldr	r0, [r4, #20]
   456c4:	sub	r6, r1, r0
   456c8:	cmp	r6, r5
   456cc:	bcs	45710 <flatcc_json_printer_struct_vector_field@@Base+0x578>
   456d0:	mov	r1, #32
   456d4:	mov	r2, r6
   456d8:	bl	14eec <memset@plt>
   456dc:	ldr	r0, [r4, #20]
   456e0:	ldr	r2, [r4, #44]	; 0x2c
   456e4:	mov	r1, #0
   456e8:	add	r0, r0, r6
   456ec:	str	r0, [r4, #20]
   456f0:	mov	r0, r4
   456f4:	blx	r2
   456f8:	ldr	r1, [r4, #16]
   456fc:	ldr	r0, [r4, #20]
   45700:	sub	r5, r5, r6
   45704:	sub	r6, r1, r0
   45708:	cmp	r5, r6
   4570c:	bhi	456d0 <flatcc_json_printer_struct_vector_field@@Base+0x538>
   45710:	mov	r1, #32
   45714:	mov	r2, r5
   45718:	bl	14eec <memset@plt>
   4571c:	ldr	r0, [r4, #20]
   45720:	add	r0, r0, r5
   45724:	str	r0, [r4, #20]
   45728:	add	r1, r0, #1
   4572c:	str	r1, [r4, #20]
   45730:	mov	r1, #93	; 0x5d
   45734:	strb	r1, [r0]
   45738:	sub	sp, fp, #28
   4573c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00045740 <flatcc_json_printer_string_vector_field@@Base>:
   45740:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   45744:	add	fp, sp, #28
   45748:	sub	sp, sp, #4
   4574c:	mov	r4, r0
   45750:	mov	r0, #4
   45754:	add	r0, r0, r2, lsl #1
   45758:	ldr	r2, [r1, #8]
   4575c:	cmp	r0, r2
   45760:	bge	45780 <flatcc_json_printer_string_vector_field@@Base+0x40>
   45764:	ldr	r2, [r1, #4]
   45768:	add	r0, r2, r0
   4576c:	ldrh	r0, [r0]
   45770:	cmp	r0, #0
   45774:	ldrne	r2, [r1]
   45778:	addsne	r5, r2, r0
   4577c:	bne	45788 <flatcc_json_printer_string_vector_field@@Base+0x48>
   45780:	sub	sp, fp, #28
   45784:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   45788:	ldr	r0, [r1, #16]
   4578c:	ldr	r2, [fp, #8]
   45790:	add	r7, r0, #1
   45794:	cmp	r0, #0
   45798:	str	r7, [r1, #16]
   4579c:	beq	457b4 <flatcc_json_printer_string_vector_field@@Base+0x74>
   457a0:	ldr	r0, [r4, #20]
   457a4:	add	r1, r0, #1
   457a8:	str	r1, [r4, #20]
   457ac:	mov	r1, #44	; 0x2c
   457b0:	strb	r1, [r0]
   457b4:	ldr	r0, [r5]
   457b8:	mov	r1, r3
   457bc:	ldr	r8, [r5, r0]!
   457c0:	mov	r0, r4
   457c4:	bl	3d354 <flatcc_json_printer_string_field@@Base+0x90>
   457c8:	ldr	r1, [r4, #32]
   457cc:	ldr	r0, [r4, #20]
   457d0:	cmp	r8, #0
   457d4:	add	r1, r1, #1
   457d8:	str	r1, [r4, #32]
   457dc:	add	r1, r0, #1
   457e0:	str	r1, [r4, #20]
   457e4:	mov	r1, #91	; 0x5b
   457e8:	strb	r1, [r0]
   457ec:	beq	45a20 <flatcc_json_printer_string_vector_field@@Base+0x2e0>
   457f0:	ldrb	r1, [r4, #25]
   457f4:	ldr	r0, [r4, #20]
   457f8:	add	r9, r5, #4
   457fc:	cmp	r1, #0
   45800:	beq	458bc <flatcc_json_printer_string_vector_field@@Base+0x17c>
   45804:	add	r1, r0, #1
   45808:	str	r1, [r4, #20]
   4580c:	mov	r1, #10
   45810:	strb	r1, [r0]
   45814:	ldr	r0, [r4, #20]
   45818:	ldrb	r2, [r4, #25]
   4581c:	ldr	r3, [r4, #32]
   45820:	ldr	r1, [r4, #16]
   45824:	mla	r7, r3, r2, r0
   45828:	mul	r5, r3, r2
   4582c:	cmp	r7, r1
   45830:	bls	458a0 <flatcc_json_printer_string_vector_field@@Base+0x160>
   45834:	cmp	r0, r1
   45838:	bcc	45854 <flatcc_json_printer_string_vector_field@@Base+0x114>
   4583c:	ldr	r2, [r4, #44]	; 0x2c
   45840:	mov	r0, r4
   45844:	mov	r1, #0
   45848:	blx	r2
   4584c:	ldr	r1, [r4, #16]
   45850:	ldr	r0, [r4, #20]
   45854:	sub	r6, r1, r0
   45858:	cmp	r6, r5
   4585c:	bcs	458a0 <flatcc_json_printer_string_vector_field@@Base+0x160>
   45860:	mov	r1, #32
   45864:	mov	r2, r6
   45868:	bl	14eec <memset@plt>
   4586c:	ldr	r0, [r4, #20]
   45870:	ldr	r2, [r4, #44]	; 0x2c
   45874:	mov	r1, #0
   45878:	add	r0, r0, r6
   4587c:	str	r0, [r4, #20]
   45880:	mov	r0, r4
   45884:	blx	r2
   45888:	ldr	r1, [r4, #16]
   4588c:	ldr	r0, [r4, #20]
   45890:	sub	r5, r5, r6
   45894:	sub	r6, r1, r0
   45898:	cmp	r5, r6
   4589c:	bhi	45860 <flatcc_json_printer_string_vector_field@@Base+0x120>
   458a0:	mov	r1, #32
   458a4:	mov	r2, r5
   458a8:	bl	14eec <memset@plt>
   458ac:	ldr	r0, [r4, #20]
   458b0:	add	r0, r0, r5
   458b4:	str	r0, [r4, #20]
   458b8:	b	458d8 <flatcc_json_printer_string_vector_field@@Base+0x198>
   458bc:	ldr	r1, [r4, #16]
   458c0:	cmp	r0, r1
   458c4:	bcc	458d8 <flatcc_json_printer_string_vector_field@@Base+0x198>
   458c8:	ldr	r2, [r4, #44]	; 0x2c
   458cc:	mov	r0, r4
   458d0:	mov	r1, #0
   458d4:	blx	r2
   458d8:	ldr	r0, [r9]
   458dc:	mov	r1, r9
   458e0:	ldr	r2, [r1, r0]!
   458e4:	mov	r0, r4
   458e8:	add	r1, r1, #4
   458ec:	bl	3bed8 <flatcc_json_printer_string@@Base+0x4>
   458f0:	subs	r7, r8, #1
   458f4:	beq	45a20 <flatcc_json_printer_string_vector_field@@Base+0x2e0>
   458f8:	mov	r8, #44	; 0x2c
   458fc:	mov	sl, #10
   45900:	b	4593c <flatcc_json_printer_string_vector_field@@Base+0x1fc>
   45904:	mov	r1, #32
   45908:	mov	r2, r5
   4590c:	bl	14eec <memset@plt>
   45910:	ldr	r0, [r4, #20]
   45914:	add	r0, r0, r5
   45918:	str	r0, [r4, #20]
   4591c:	ldr	r0, [r9]
   45920:	mov	r1, r9
   45924:	ldr	r2, [r1, r0]!
   45928:	mov	r0, r4
   4592c:	add	r1, r1, #4
   45930:	bl	3bed8 <flatcc_json_printer_string@@Base+0x4>
   45934:	cmp	r7, #0
   45938:	beq	45a20 <flatcc_json_printer_string_vector_field@@Base+0x2e0>
   4593c:	ldr	r0, [r4, #20]
   45940:	add	r9, r9, #4
   45944:	sub	r7, r7, #1
   45948:	add	r1, r0, #1
   4594c:	str	r1, [r4, #20]
   45950:	strb	r8, [r0]
   45954:	ldrb	r1, [r4, #25]
   45958:	ldr	r0, [r4, #20]
   4595c:	cmp	r1, #0
   45960:	beq	45a00 <flatcc_json_printer_string_vector_field@@Base+0x2c0>
   45964:	add	r1, r0, #1
   45968:	str	r1, [r4, #20]
   4596c:	strb	sl, [r0]
   45970:	ldr	r0, [r4, #20]
   45974:	ldrb	r2, [r4, #25]
   45978:	ldr	r3, [r4, #32]
   4597c:	ldr	r1, [r4, #16]
   45980:	mla	r6, r3, r2, r0
   45984:	mul	r5, r3, r2
   45988:	cmp	r6, r1
   4598c:	bls	45904 <flatcc_json_printer_string_vector_field@@Base+0x1c4>
   45990:	cmp	r0, r1
   45994:	bcc	459b0 <flatcc_json_printer_string_vector_field@@Base+0x270>
   45998:	ldr	r2, [r4, #44]	; 0x2c
   4599c:	mov	r0, r4
   459a0:	mov	r1, #0
   459a4:	blx	r2
   459a8:	ldr	r1, [r4, #16]
   459ac:	ldr	r0, [r4, #20]
   459b0:	sub	r6, r1, r0
   459b4:	cmp	r6, r5
   459b8:	bcs	45904 <flatcc_json_printer_string_vector_field@@Base+0x1c4>
   459bc:	mov	r1, #32
   459c0:	mov	r2, r6
   459c4:	bl	14eec <memset@plt>
   459c8:	ldr	r0, [r4, #20]
   459cc:	ldr	r2, [r4, #44]	; 0x2c
   459d0:	mov	r1, #0
   459d4:	add	r0, r0, r6
   459d8:	str	r0, [r4, #20]
   459dc:	mov	r0, r4
   459e0:	blx	r2
   459e4:	ldr	r1, [r4, #16]
   459e8:	ldr	r0, [r4, #20]
   459ec:	sub	r5, r5, r6
   459f0:	sub	r6, r1, r0
   459f4:	cmp	r5, r6
   459f8:	bhi	459bc <flatcc_json_printer_string_vector_field@@Base+0x27c>
   459fc:	b	45904 <flatcc_json_printer_string_vector_field@@Base+0x1c4>
   45a00:	ldr	r1, [r4, #16]
   45a04:	cmp	r0, r1
   45a08:	bcc	4591c <flatcc_json_printer_string_vector_field@@Base+0x1dc>
   45a0c:	ldr	r2, [r4, #44]	; 0x2c
   45a10:	mov	r0, r4
   45a14:	mov	r1, #0
   45a18:	blx	r2
   45a1c:	b	4591c <flatcc_json_printer_string_vector_field@@Base+0x1dc>
   45a20:	ldrb	r1, [r4, #25]
   45a24:	ldr	r0, [r4, #20]
   45a28:	cmp	r1, #0
   45a2c:	beq	45aec <flatcc_json_printer_string_vector_field@@Base+0x3ac>
   45a30:	add	r1, r0, #1
   45a34:	str	r1, [r4, #20]
   45a38:	mov	r1, #10
   45a3c:	strb	r1, [r0]
   45a40:	ldr	r0, [r4, #32]
   45a44:	sub	r2, r0, #1
   45a48:	str	r2, [r4, #32]
   45a4c:	ldrb	r3, [r4, #25]
   45a50:	ldr	r0, [r4, #20]
   45a54:	ldr	r1, [r4, #16]
   45a58:	mla	r7, r2, r3, r0
   45a5c:	mul	r5, r2, r3
   45a60:	cmp	r7, r1
   45a64:	bls	45ad4 <flatcc_json_printer_string_vector_field@@Base+0x394>
   45a68:	cmp	r0, r1
   45a6c:	bcc	45a88 <flatcc_json_printer_string_vector_field@@Base+0x348>
   45a70:	ldr	r2, [r4, #44]	; 0x2c
   45a74:	mov	r0, r4
   45a78:	mov	r1, #0
   45a7c:	blx	r2
   45a80:	ldr	r1, [r4, #16]
   45a84:	ldr	r0, [r4, #20]
   45a88:	sub	r6, r1, r0
   45a8c:	cmp	r6, r5
   45a90:	bcs	45ad4 <flatcc_json_printer_string_vector_field@@Base+0x394>
   45a94:	mov	r1, #32
   45a98:	mov	r2, r6
   45a9c:	bl	14eec <memset@plt>
   45aa0:	ldr	r0, [r4, #20]
   45aa4:	ldr	r2, [r4, #44]	; 0x2c
   45aa8:	mov	r1, #0
   45aac:	add	r0, r0, r6
   45ab0:	str	r0, [r4, #20]
   45ab4:	mov	r0, r4
   45ab8:	blx	r2
   45abc:	ldr	r1, [r4, #16]
   45ac0:	ldr	r0, [r4, #20]
   45ac4:	sub	r5, r5, r6
   45ac8:	sub	r6, r1, r0
   45acc:	cmp	r5, r6
   45ad0:	bhi	45a94 <flatcc_json_printer_string_vector_field@@Base+0x354>
   45ad4:	mov	r1, #32
   45ad8:	mov	r2, r5
   45adc:	bl	14eec <memset@plt>
   45ae0:	ldr	r0, [r4, #20]
   45ae4:	add	r0, r0, r5
   45ae8:	str	r0, [r4, #20]
   45aec:	add	r1, r0, #1
   45af0:	str	r1, [r4, #20]
   45af4:	mov	r1, #93	; 0x5d
   45af8:	strb	r1, [r0]
   45afc:	sub	sp, fp, #28
   45b00:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00045b04 <flatcc_json_printer_table_vector_field@@Base>:
   45b04:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   45b08:	add	fp, sp, #28
   45b0c:	sub	sp, sp, #20
   45b10:	mov	sl, r1
   45b14:	ldr	r1, [r1, #8]
   45b18:	mov	r4, r0
   45b1c:	mov	r0, #4
   45b20:	add	r0, r0, r2, lsl #1
   45b24:	cmp	r0, r1
   45b28:	bge	45b48 <flatcc_json_printer_table_vector_field@@Base+0x44>
   45b2c:	ldr	r1, [sl, #4]
   45b30:	add	r0, r1, r0
   45b34:	ldrh	r0, [r0]
   45b38:	cmp	r0, #0
   45b3c:	ldrne	r1, [sl]
   45b40:	addsne	r5, r1, r0
   45b44:	bne	45b50 <flatcc_json_printer_table_vector_field@@Base+0x4c>
   45b48:	sub	sp, fp, #28
   45b4c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   45b50:	ldr	r0, [sl, #16]
   45b54:	ldr	r2, [fp, #8]
   45b58:	add	r1, r0, #1
   45b5c:	cmp	r0, #0
   45b60:	str	r1, [sl, #16]
   45b64:	beq	45b7c <flatcc_json_printer_table_vector_field@@Base+0x78>
   45b68:	ldr	r0, [r4, #20]
   45b6c:	add	r1, r0, #1
   45b70:	str	r1, [r4, #20]
   45b74:	mov	r1, #44	; 0x2c
   45b78:	strb	r1, [r0]
   45b7c:	ldr	r0, [r5]
   45b80:	mov	r1, r3
   45b84:	ldr	r8, [r5, r0]!
   45b88:	mov	r0, r4
   45b8c:	bl	3d354 <flatcc_json_printer_string_field@@Base+0x90>
   45b90:	ldr	r1, [r4, #32]
   45b94:	ldr	r0, [r4, #20]
   45b98:	cmp	r8, #0
   45b9c:	add	r1, r1, #1
   45ba0:	str	r1, [r4, #32]
   45ba4:	add	r1, r0, #1
   45ba8:	str	r1, [r4, #20]
   45bac:	mov	r1, #91	; 0x5b
   45bb0:	strb	r1, [r0]
   45bb4:	beq	45ebc <flatcc_json_printer_table_vector_field@@Base+0x3b8>
   45bb8:	ldr	r0, [sl, #12]
   45bbc:	ldr	r6, [fp, #12]
   45bc0:	add	r5, r5, #4
   45bc4:	subs	r0, r0, #1
   45bc8:	beq	45d10 <flatcc_json_printer_table_vector_field@@Base+0x20c>
   45bcc:	ldr	r3, [r4, #32]
   45bd0:	ldr	r2, [r4, #20]
   45bd4:	ldr	r1, [r5]
   45bd8:	add	r3, r3, #1
   45bdc:	add	r1, r5, r1
   45be0:	str	r3, [r4, #32]
   45be4:	add	r3, r2, #1
   45be8:	str	r3, [r4, #20]
   45bec:	mov	r3, #123	; 0x7b
   45bf0:	strb	r3, [r2]
   45bf4:	str	r0, [sp, #12]
   45bf8:	mov	r0, #0
   45bfc:	str	r0, [sp, #16]
   45c00:	str	r1, [sp]
   45c04:	ldr	r0, [r1]
   45c08:	sub	r2, r1, r0
   45c0c:	str	r2, [sp, #4]
   45c10:	ldrh	r0, [r1, -r0]
   45c14:	mov	r1, sp
   45c18:	str	r0, [sp, #8]
   45c1c:	mov	r0, r4
   45c20:	blx	r6
   45c24:	ldrb	r1, [r4, #25]
   45c28:	ldr	r0, [r4, #20]
   45c2c:	cmp	r1, #0
   45c30:	beq	45cf4 <flatcc_json_printer_table_vector_field@@Base+0x1f0>
   45c34:	add	r1, r0, #1
   45c38:	str	r1, [r4, #20]
   45c3c:	mov	r1, #10
   45c40:	strb	r1, [r0]
   45c44:	ldr	r0, [r4, #32]
   45c48:	sub	r2, r0, #1
   45c4c:	str	r2, [r4, #32]
   45c50:	ldrb	r3, [r4, #25]
   45c54:	ldr	r0, [r4, #20]
   45c58:	ldr	r1, [r4, #16]
   45c5c:	mla	r7, r2, r3, r0
   45c60:	mul	r6, r2, r3
   45c64:	cmp	r7, r1
   45c68:	bls	45cd8 <flatcc_json_printer_table_vector_field@@Base+0x1d4>
   45c6c:	cmp	r0, r1
   45c70:	bcc	45c8c <flatcc_json_printer_table_vector_field@@Base+0x188>
   45c74:	ldr	r2, [r4, #44]	; 0x2c
   45c78:	mov	r0, r4
   45c7c:	mov	r1, #0
   45c80:	blx	r2
   45c84:	ldr	r1, [r4, #16]
   45c88:	ldr	r0, [r4, #20]
   45c8c:	sub	r7, r1, r0
   45c90:	cmp	r7, r6
   45c94:	bcs	45cd8 <flatcc_json_printer_table_vector_field@@Base+0x1d4>
   45c98:	mov	r1, #32
   45c9c:	mov	r2, r7
   45ca0:	bl	14eec <memset@plt>
   45ca4:	ldr	r0, [r4, #20]
   45ca8:	ldr	r2, [r4, #44]	; 0x2c
   45cac:	mov	r1, #0
   45cb0:	add	r0, r0, r7
   45cb4:	str	r0, [r4, #20]
   45cb8:	mov	r0, r4
   45cbc:	blx	r2
   45cc0:	ldr	r1, [r4, #16]
   45cc4:	ldr	r0, [r4, #20]
   45cc8:	sub	r6, r6, r7
   45ccc:	sub	r7, r1, r0
   45cd0:	cmp	r6, r7
   45cd4:	bhi	45c98 <flatcc_json_printer_table_vector_field@@Base+0x194>
   45cd8:	mov	r1, #32
   45cdc:	mov	r2, r6
   45ce0:	bl	14eec <memset@plt>
   45ce4:	ldr	r0, [r4, #20]
   45ce8:	add	r0, r0, r6
   45cec:	ldr	r6, [fp, #12]
   45cf0:	str	r0, [r4, #20]
   45cf4:	add	r1, r0, #1
   45cf8:	str	r1, [r4, #20]
   45cfc:	mov	r1, #125	; 0x7d
   45d00:	strb	r1, [r0]
   45d04:	subs	r9, r8, #1
   45d08:	bne	45d28 <flatcc_json_printer_table_vector_field@@Base+0x224>
   45d0c:	b	45ebc <flatcc_json_printer_table_vector_field@@Base+0x3b8>
   45d10:	ldr	r0, [r4, #36]	; 0x24
   45d14:	cmp	r0, #0
   45d18:	moveq	r0, #2
   45d1c:	streq	r0, [r4, #36]	; 0x24
   45d20:	subs	r9, r8, #1
   45d24:	beq	45ebc <flatcc_json_printer_table_vector_field@@Base+0x3b8>
   45d28:	mov	r8, #44	; 0x2c
   45d2c:	b	45d48 <flatcc_json_printer_table_vector_field@@Base+0x244>
   45d30:	ldr	r0, [r4, #36]	; 0x24
   45d34:	cmp	r0, #0
   45d38:	moveq	r0, #2
   45d3c:	streq	r0, [r4, #36]	; 0x24
   45d40:	cmp	r9, #0
   45d44:	beq	45ebc <flatcc_json_printer_table_vector_field@@Base+0x3b8>
   45d48:	ldr	r0, [r4, #20]
   45d4c:	sub	r9, r9, #1
   45d50:	add	r1, r0, #1
   45d54:	str	r1, [r4, #20]
   45d58:	strb	r8, [r0]
   45d5c:	ldr	r0, [sl, #12]
   45d60:	ldr	r1, [r5, #4]!
   45d64:	subs	r0, r0, #1
   45d68:	beq	45d30 <flatcc_json_printer_table_vector_field@@Base+0x22c>
   45d6c:	ldr	r3, [r4, #32]
   45d70:	ldr	r2, [r4, #20]
   45d74:	add	r1, r5, r1
   45d78:	add	r3, r3, #1
   45d7c:	str	r3, [r4, #32]
   45d80:	add	r3, r2, #1
   45d84:	str	r3, [r4, #20]
   45d88:	mov	r3, #123	; 0x7b
   45d8c:	strb	r3, [r2]
   45d90:	str	r0, [sp, #12]
   45d94:	mov	r0, #0
   45d98:	str	r0, [sp, #16]
   45d9c:	str	r1, [sp]
   45da0:	ldr	r0, [r1]
   45da4:	sub	r2, r1, r0
   45da8:	str	r2, [sp, #4]
   45dac:	ldrh	r0, [r1, -r0]
   45db0:	mov	r1, sp
   45db4:	str	r0, [sp, #8]
   45db8:	mov	r0, r4
   45dbc:	blx	r6
   45dc0:	ldrb	r1, [r4, #25]
   45dc4:	ldr	r0, [r4, #20]
   45dc8:	cmp	r1, #0
   45dcc:	beq	45ea4 <flatcc_json_printer_table_vector_field@@Base+0x3a0>
   45dd0:	add	r1, r0, #1
   45dd4:	str	r1, [r4, #20]
   45dd8:	mov	r1, #10
   45ddc:	strb	r1, [r0]
   45de0:	ldr	r0, [r4, #32]
   45de4:	sub	r2, r0, #1
   45de8:	str	r2, [r4, #32]
   45dec:	ldrb	r3, [r4, #25]
   45df0:	ldr	r0, [r4, #20]
   45df4:	ldr	r1, [r4, #16]
   45df8:	mla	r6, r2, r3, r0
   45dfc:	mul	r7, r2, r3
   45e00:	cmp	r6, r1
   45e04:	bls	45e88 <flatcc_json_printer_table_vector_field@@Base+0x384>
   45e08:	cmp	r0, r1
   45e0c:	bcc	45e28 <flatcc_json_printer_table_vector_field@@Base+0x324>
   45e10:	ldr	r2, [r4, #44]	; 0x2c
   45e14:	mov	r0, r4
   45e18:	mov	r1, #0
   45e1c:	blx	r2
   45e20:	ldr	r1, [r4, #16]
   45e24:	ldr	r0, [r4, #20]
   45e28:	sub	r6, r1, r0
   45e2c:	cmp	r6, r7
   45e30:	bcs	45e74 <flatcc_json_printer_table_vector_field@@Base+0x370>
   45e34:	mov	r1, #32
   45e38:	mov	r2, r6
   45e3c:	bl	14eec <memset@plt>
   45e40:	ldr	r0, [r4, #20]
   45e44:	ldr	r2, [r4, #44]	; 0x2c
   45e48:	mov	r1, #0
   45e4c:	add	r0, r0, r6
   45e50:	str	r0, [r4, #20]
   45e54:	mov	r0, r4
   45e58:	blx	r2
   45e5c:	ldr	r1, [r4, #16]
   45e60:	ldr	r0, [r4, #20]
   45e64:	sub	r7, r7, r6
   45e68:	sub	r6, r1, r0
   45e6c:	cmp	r7, r6
   45e70:	bhi	45e34 <flatcc_json_printer_table_vector_field@@Base+0x330>
   45e74:	ldr	r6, [fp, #12]
   45e78:	mov	r1, #32
   45e7c:	mov	r2, r7
   45e80:	bl	14eec <memset@plt>
   45e84:	b	45e98 <flatcc_json_printer_table_vector_field@@Base+0x394>
   45e88:	mov	r1, #32
   45e8c:	mov	r2, r7
   45e90:	bl	14eec <memset@plt>
   45e94:	ldr	r6, [fp, #12]
   45e98:	ldr	r0, [r4, #20]
   45e9c:	add	r0, r0, r7
   45ea0:	str	r0, [r4, #20]
   45ea4:	add	r1, r0, #1
   45ea8:	str	r1, [r4, #20]
   45eac:	mov	r1, #125	; 0x7d
   45eb0:	strb	r1, [r0]
   45eb4:	cmp	r9, #0
   45eb8:	bne	45d48 <flatcc_json_printer_table_vector_field@@Base+0x244>
   45ebc:	ldrb	r1, [r4, #25]
   45ec0:	ldr	r0, [r4, #20]
   45ec4:	cmp	r1, #0
   45ec8:	beq	45f88 <flatcc_json_printer_table_vector_field@@Base+0x484>
   45ecc:	add	r1, r0, #1
   45ed0:	str	r1, [r4, #20]
   45ed4:	mov	r1, #10
   45ed8:	strb	r1, [r0]
   45edc:	ldr	r0, [r4, #32]
   45ee0:	sub	r2, r0, #1
   45ee4:	str	r2, [r4, #32]
   45ee8:	ldrb	r3, [r4, #25]
   45eec:	ldr	r0, [r4, #20]
   45ef0:	ldr	r1, [r4, #16]
   45ef4:	mla	r7, r2, r3, r0
   45ef8:	mul	r5, r2, r3
   45efc:	cmp	r7, r1
   45f00:	bls	45f70 <flatcc_json_printer_table_vector_field@@Base+0x46c>
   45f04:	cmp	r0, r1
   45f08:	bcc	45f24 <flatcc_json_printer_table_vector_field@@Base+0x420>
   45f0c:	ldr	r2, [r4, #44]	; 0x2c
   45f10:	mov	r0, r4
   45f14:	mov	r1, #0
   45f18:	blx	r2
   45f1c:	ldr	r1, [r4, #16]
   45f20:	ldr	r0, [r4, #20]
   45f24:	sub	r6, r1, r0
   45f28:	cmp	r6, r5
   45f2c:	bcs	45f70 <flatcc_json_printer_table_vector_field@@Base+0x46c>
   45f30:	mov	r1, #32
   45f34:	mov	r2, r6
   45f38:	bl	14eec <memset@plt>
   45f3c:	ldr	r0, [r4, #20]
   45f40:	ldr	r2, [r4, #44]	; 0x2c
   45f44:	mov	r1, #0
   45f48:	add	r0, r0, r6
   45f4c:	str	r0, [r4, #20]
   45f50:	mov	r0, r4
   45f54:	blx	r2
   45f58:	ldr	r1, [r4, #16]
   45f5c:	ldr	r0, [r4, #20]
   45f60:	sub	r5, r5, r6
   45f64:	sub	r6, r1, r0
   45f68:	cmp	r5, r6
   45f6c:	bhi	45f30 <flatcc_json_printer_table_vector_field@@Base+0x42c>
   45f70:	mov	r1, #32
   45f74:	mov	r2, r5
   45f78:	bl	14eec <memset@plt>
   45f7c:	ldr	r0, [r4, #20]
   45f80:	add	r0, r0, r5
   45f84:	str	r0, [r4, #20]
   45f88:	add	r1, r0, #1
   45f8c:	str	r1, [r4, #20]
   45f90:	mov	r1, #93	; 0x5d
   45f94:	strb	r1, [r0]
   45f98:	sub	sp, fp, #28
   45f9c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00045fa0 <flatcc_json_printer_union_vector_field@@Base>:
   45fa0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   45fa4:	add	fp, sp, #28
   45fa8:	sub	sp, sp, #140	; 0x8c
   45fac:	mov	r6, r1
   45fb0:	ldr	r1, [r1, #8]
   45fb4:	mov	r8, r0
   45fb8:	sub	r9, r2, #1
   45fbc:	mov	r0, #4
   45fc0:	mov	r4, r3
   45fc4:	mov	r5, #0
   45fc8:	mov	sl, #0
   45fcc:	add	r3, r0, r9, lsl #1
   45fd0:	cmp	r3, r1
   45fd4:	bge	45ff4 <flatcc_json_printer_union_vector_field@@Base+0x54>
   45fd8:	ldr	r7, [r6, #4]
   45fdc:	mov	sl, #0
   45fe0:	add	r3, r7, r3
   45fe4:	ldrh	r3, [r3]
   45fe8:	cmp	r3, #0
   45fec:	ldrne	r7, [r6]
   45ff0:	addne	sl, r7, r3
   45ff4:	ldr	r7, [fp, #8]
   45ff8:	add	r0, r0, r2, lsl #1
   45ffc:	cmp	r0, r1
   46000:	bge	4601c <flatcc_json_printer_union_vector_field@@Base+0x7c>
   46004:	ldr	r1, [r6, #4]
   46008:	add	r0, r1, r0
   4600c:	ldrh	r0, [r0]
   46010:	cmp	r0, #0
   46014:	ldrne	r1, [r6]
   46018:	addne	r5, r1, r0
   4601c:	ldr	r0, [r6, #12]
   46020:	cmp	r7, #101	; 0x65
   46024:	str	r5, [sp, #16]
   46028:	str	r0, [sp, #24]
   4602c:	bge	46340 <flatcc_json_printer_union_vector_field@@Base+0x3a0>
   46030:	add	r5, sp, #32
   46034:	mov	r1, r4
   46038:	mov	r2, r7
   4603c:	mov	r0, r5
   46040:	bl	14e5c <memcpy@plt>
   46044:	movw	r0, #29791	; 0x745f
   46048:	cmp	sl, #0
   4604c:	mov	r1, #101	; 0x65
   46050:	movt	r0, #28793	; 0x7079
   46054:	str	r0, [r5, r7]
   46058:	add	r0, r5, r7
   4605c:	ldr	r5, [sp, #16]
   46060:	strb	r1, [r0, #4]
   46064:	cmpne	r5, #0
   46068:	bne	46074 <flatcc_json_printer_union_vector_field@@Base+0xd4>
   4606c:	sub	sp, fp, #28
   46070:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   46074:	ldr	r0, [fp, #12]
   46078:	add	r1, r7, #5
   4607c:	add	r3, sp, #32
   46080:	mov	r2, r9
   46084:	str	r1, [sp]
   46088:	mov	r1, r6
   4608c:	str	r0, [sp, #4]
   46090:	mov	r0, r8
   46094:	bl	42bc0 <flatcc_json_printer_utype_enum_vector_field@@Base>
   46098:	ldr	r0, [r6, #16]
   4609c:	add	r1, r0, #1
   460a0:	cmp	r0, #0
   460a4:	str	r1, [r6, #16]
   460a8:	beq	460c0 <flatcc_json_printer_union_vector_field@@Base+0x120>
   460ac:	ldr	r0, [r8, #20]
   460b0:	add	r1, r0, #1
   460b4:	str	r1, [r8, #20]
   460b8:	mov	r1, #44	; 0x2c
   460bc:	strb	r1, [r0]
   460c0:	ldr	r0, [r5]
   460c4:	ldr	r9, [sl]
   460c8:	mov	r1, r4
   460cc:	mov	r2, r7
   460d0:	ldr	r6, [r5, r0]!
   460d4:	str	r0, [sp, #12]
   460d8:	mov	r0, r8
   460dc:	bl	3d354 <flatcc_json_printer_string_field@@Base+0x90>
   460e0:	mov	r7, r8
   460e4:	cmp	r6, #0
   460e8:	ldr	r0, [r7, #20]!
   460ec:	add	r1, r0, #1
   460f0:	str	r1, [r7]
   460f4:	ldr	r1, [r7, #12]
   460f8:	add	r1, r1, #1
   460fc:	str	r1, [r7, #12]
   46100:	mov	r1, #91	; 0x5b
   46104:	strb	r1, [r0]
   46108:	beq	4625c <flatcc_json_printer_union_vector_field@@Base+0x2bc>
   4610c:	add	r4, sl, r9
   46110:	ldr	r2, [fp, #16]
   46114:	ldrb	r0, [r4, #4]
   46118:	cmp	r0, #0
   4611c:	beq	46148 <flatcc_json_printer_union_vector_field@@Base+0x1a8>
   46120:	add	r1, r5, #4
   46124:	mov	r9, r2
   46128:	str	r1, [sp, #20]
   4612c:	strb	r0, [sp, #28]
   46130:	add	r1, sp, #20
   46134:	mov	r0, r8
   46138:	blx	r2
   4613c:	subs	r6, r6, #1
   46140:	bne	461a0 <flatcc_json_printer_union_vector_field@@Base+0x200>
   46144:	b	4625c <flatcc_json_printer_union_vector_field@@Base+0x2bc>
   46148:	ldr	r0, [r7]
   4614c:	mov	r9, r2
   46150:	add	r1, r0, #1
   46154:	str	r1, [r7]
   46158:	mov	r1, #110	; 0x6e
   4615c:	strb	r1, [r0]
   46160:	ldr	r0, [r7]
   46164:	add	r1, r0, #1
   46168:	str	r1, [r7]
   4616c:	mov	r1, #117	; 0x75
   46170:	strb	r1, [r0]
   46174:	ldr	r0, [r7]
   46178:	add	r1, r0, #1
   4617c:	str	r1, [r7]
   46180:	mov	r1, #108	; 0x6c
   46184:	strb	r1, [r0]
   46188:	ldr	r0, [r7]
   4618c:	add	r2, r0, #1
   46190:	str	r2, [r7]
   46194:	strb	r1, [r0]
   46198:	subs	r6, r6, #1
   4619c:	beq	4625c <flatcc_json_printer_union_vector_field@@Base+0x2bc>
   461a0:	ldr	r0, [sp, #16]
   461a4:	ldr	r1, [sp, #12]
   461a8:	add	r4, r4, #5
   461ac:	mov	sl, #44	; 0x2c
   461b0:	add	r0, r1, r0
   461b4:	add	r5, r0, #8
   461b8:	b	46218 <flatcc_json_printer_union_vector_field@@Base+0x278>
   461bc:	ldr	r0, [r7]
   461c0:	mov	r2, #108	; 0x6c
   461c4:	add	r1, r0, #1
   461c8:	str	r1, [r7]
   461cc:	mov	r1, #110	; 0x6e
   461d0:	strb	r1, [r0]
   461d4:	ldr	r0, [r7]
   461d8:	add	r1, r0, #1
   461dc:	str	r1, [r7]
   461e0:	mov	r1, #117	; 0x75
   461e4:	strb	r1, [r0]
   461e8:	ldr	r0, [r7]
   461ec:	add	r1, r0, #1
   461f0:	str	r1, [r7]
   461f4:	strb	r2, [r0]
   461f8:	ldr	r0, [r7]
   461fc:	add	r1, r0, #1
   46200:	str	r1, [r7]
   46204:	strb	r2, [r0]
   46208:	add	r5, r5, #4
   4620c:	add	r4, r4, #1
   46210:	cmp	r6, #0
   46214:	beq	4625c <flatcc_json_printer_union_vector_field@@Base+0x2bc>
   46218:	ldrb	r0, [r4]
   4621c:	ldr	r1, [r7]
   46220:	sub	r6, r6, #1
   46224:	add	r2, r1, #1
   46228:	cmp	r0, #0
   4622c:	str	r2, [r7]
   46230:	strb	sl, [r1]
   46234:	beq	461bc <flatcc_json_printer_union_vector_field@@Base+0x21c>
   46238:	str	r5, [sp, #20]
   4623c:	strb	r0, [sp, #28]
   46240:	mov	r0, r8
   46244:	add	r1, sp, #20
   46248:	blx	r9
   4624c:	add	r5, r5, #4
   46250:	add	r4, r4, #1
   46254:	cmp	r6, #0
   46258:	bne	46218 <flatcc_json_printer_union_vector_field@@Base+0x278>
   4625c:	ldrb	r1, [r8, #25]
   46260:	ldr	r0, [r8, #20]
   46264:	cmp	r1, #0
   46268:	beq	46328 <flatcc_json_printer_union_vector_field@@Base+0x388>
   4626c:	add	r1, r0, #1
   46270:	str	r1, [r8, #20]
   46274:	mov	r1, #10
   46278:	strb	r1, [r0]
   4627c:	ldr	r0, [r8, #32]
   46280:	sub	r2, r0, #1
   46284:	str	r2, [r8, #32]
   46288:	ldrb	r3, [r8, #25]
   4628c:	ldr	r0, [r8, #20]
   46290:	ldr	r1, [r8, #16]
   46294:	mla	r6, r2, r3, r0
   46298:	mul	r5, r2, r3
   4629c:	cmp	r6, r1
   462a0:	bls	46310 <flatcc_json_printer_union_vector_field@@Base+0x370>
   462a4:	cmp	r0, r1
   462a8:	bcc	462c4 <flatcc_json_printer_union_vector_field@@Base+0x324>
   462ac:	ldr	r2, [r8, #44]	; 0x2c
   462b0:	mov	r0, r8
   462b4:	mov	r1, #0
   462b8:	blx	r2
   462bc:	ldr	r1, [r8, #16]
   462c0:	ldr	r0, [r8, #20]
   462c4:	sub	r6, r1, r0
   462c8:	cmp	r6, r5
   462cc:	bcs	46310 <flatcc_json_printer_union_vector_field@@Base+0x370>
   462d0:	mov	r1, #32
   462d4:	mov	r2, r6
   462d8:	bl	14eec <memset@plt>
   462dc:	ldr	r0, [r8, #20]
   462e0:	ldr	r2, [r8, #44]	; 0x2c
   462e4:	mov	r1, #0
   462e8:	add	r0, r0, r6
   462ec:	str	r0, [r8, #20]
   462f0:	mov	r0, r8
   462f4:	blx	r2
   462f8:	ldr	r1, [r8, #16]
   462fc:	ldr	r0, [r8, #20]
   46300:	sub	r5, r5, r6
   46304:	sub	r6, r1, r0
   46308:	cmp	r5, r6
   4630c:	bhi	462d0 <flatcc_json_printer_union_vector_field@@Base+0x330>
   46310:	mov	r1, #32
   46314:	mov	r2, r5
   46318:	bl	14eec <memset@plt>
   4631c:	ldr	r0, [r7]
   46320:	add	r0, r0, r5
   46324:	str	r0, [r7]
   46328:	add	r1, r0, #1
   4632c:	str	r1, [r7]
   46330:	mov	r1, #93	; 0x5d
   46334:	strb	r1, [r0]
   46338:	sub	sp, fp, #28
   4633c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   46340:	ldr	r0, [r8, #36]	; 0x24
   46344:	movw	r1, #60179	; 0xeb13
   46348:	movw	r3, #60254	; 0xeb5e
   4634c:	movw	r2, #843	; 0x34b
   46350:	movt	r1, #4
   46354:	movt	r3, #4
   46358:	cmp	r0, #0
   4635c:	moveq	r0, #1
   46360:	streq	r0, [r8, #36]	; 0x24
   46364:	movw	r0, #60152	; 0xeaf8
   46368:	movt	r0, #4
   4636c:	bl	14f40 <__assert_fail@plt>

00046370 <flatcc_json_printer_table_field@@Base>:
   46370:	push	{r4, r5, r6, sl, fp, lr}
   46374:	add	fp, sp, #16
   46378:	sub	sp, sp, #24
   4637c:	mov	r5, r1
   46380:	ldr	r1, [r1, #8]
   46384:	mov	r4, r0
   46388:	mov	r0, #4
   4638c:	add	r0, r0, r2, lsl #1
   46390:	cmp	r0, r1
   46394:	bge	463b4 <flatcc_json_printer_table_field@@Base+0x44>
   46398:	ldr	r1, [r5, #4]
   4639c:	add	r0, r1, r0
   463a0:	ldrh	r0, [r0]
   463a4:	cmp	r0, #0
   463a8:	ldrne	r1, [r5]
   463ac:	addsne	r6, r1, r0
   463b0:	bne	463bc <flatcc_json_printer_table_field@@Base+0x4c>
   463b4:	sub	sp, fp, #16
   463b8:	pop	{r4, r5, r6, sl, fp, pc}
   463bc:	ldr	r0, [r5, #16]
   463c0:	ldr	r2, [fp, #8]
   463c4:	add	r1, r0, #1
   463c8:	cmp	r0, #0
   463cc:	str	r1, [r5, #16]
   463d0:	beq	463e8 <flatcc_json_printer_table_field@@Base+0x78>
   463d4:	ldr	r0, [r4, #20]
   463d8:	add	r1, r0, #1
   463dc:	str	r1, [r4, #20]
   463e0:	mov	r1, #44	; 0x2c
   463e4:	strb	r1, [r0]
   463e8:	mov	r0, r4
   463ec:	mov	r1, r3
   463f0:	bl	3d354 <flatcc_json_printer_string_field@@Base+0x90>
   463f4:	ldr	r0, [r5, #12]
   463f8:	subs	r0, r0, #1
   463fc:	beq	46540 <flatcc_json_printer_table_field@@Base+0x1d0>
   46400:	ldr	r1, [r6]
   46404:	ldr	r3, [r4, #20]
   46408:	ldr	r2, [fp, #12]
   4640c:	add	r1, r6, r1
   46410:	ldr	r6, [r4, #32]
   46414:	add	r6, r6, #1
   46418:	str	r6, [r4, #32]
   4641c:	add	r6, r3, #1
   46420:	str	r6, [r4, #20]
   46424:	mov	r6, #123	; 0x7b
   46428:	strb	r6, [r3]
   4642c:	str	r0, [sp, #16]
   46430:	mov	r0, #0
   46434:	str	r0, [sp, #20]
   46438:	str	r1, [sp, #4]
   4643c:	ldr	r0, [r1]
   46440:	sub	r3, r1, r0
   46444:	str	r3, [sp, #8]
   46448:	ldrh	r0, [r1, -r0]
   4644c:	add	r1, sp, #4
   46450:	str	r0, [sp, #12]
   46454:	mov	r0, r4
   46458:	blx	r2
   4645c:	ldrb	r1, [r4, #25]
   46460:	ldr	r0, [r4, #20]
   46464:	cmp	r1, #0
   46468:	beq	46528 <flatcc_json_printer_table_field@@Base+0x1b8>
   4646c:	add	r1, r0, #1
   46470:	str	r1, [r4, #20]
   46474:	mov	r1, #10
   46478:	strb	r1, [r0]
   4647c:	ldr	r0, [r4, #32]
   46480:	sub	r2, r0, #1
   46484:	str	r2, [r4, #32]
   46488:	ldrb	r3, [r4, #25]
   4648c:	ldr	r0, [r4, #20]
   46490:	ldr	r1, [r4, #16]
   46494:	mla	r6, r2, r3, r0
   46498:	mul	r5, r2, r3
   4649c:	cmp	r6, r1
   464a0:	bls	46510 <flatcc_json_printer_table_field@@Base+0x1a0>
   464a4:	cmp	r0, r1
   464a8:	bcc	464c4 <flatcc_json_printer_table_field@@Base+0x154>
   464ac:	ldr	r2, [r4, #44]	; 0x2c
   464b0:	mov	r0, r4
   464b4:	mov	r1, #0
   464b8:	blx	r2
   464bc:	ldr	r1, [r4, #16]
   464c0:	ldr	r0, [r4, #20]
   464c4:	sub	r6, r1, r0
   464c8:	cmp	r6, r5
   464cc:	bcs	46510 <flatcc_json_printer_table_field@@Base+0x1a0>
   464d0:	mov	r1, #32
   464d4:	mov	r2, r6
   464d8:	bl	14eec <memset@plt>
   464dc:	ldr	r0, [r4, #20]
   464e0:	ldr	r2, [r4, #44]	; 0x2c
   464e4:	mov	r1, #0
   464e8:	add	r0, r0, r6
   464ec:	str	r0, [r4, #20]
   464f0:	mov	r0, r4
   464f4:	blx	r2
   464f8:	ldr	r1, [r4, #16]
   464fc:	ldr	r0, [r4, #20]
   46500:	sub	r5, r5, r6
   46504:	sub	r6, r1, r0
   46508:	cmp	r5, r6
   4650c:	bhi	464d0 <flatcc_json_printer_table_field@@Base+0x160>
   46510:	mov	r1, #32
   46514:	mov	r2, r5
   46518:	bl	14eec <memset@plt>
   4651c:	ldr	r0, [r4, #20]
   46520:	add	r0, r0, r5
   46524:	str	r0, [r4, #20]
   46528:	add	r1, r0, #1
   4652c:	str	r1, [r4, #20]
   46530:	mov	r1, #125	; 0x7d
   46534:	strb	r1, [r0]
   46538:	sub	sp, fp, #16
   4653c:	pop	{r4, r5, r6, sl, fp, pc}
   46540:	ldr	r0, [r4, #36]	; 0x24
   46544:	cmp	r0, #0
   46548:	bne	463b4 <flatcc_json_printer_table_field@@Base+0x44>
   4654c:	mov	r0, #2
   46550:	str	r0, [r4, #36]	; 0x24
   46554:	sub	sp, fp, #16
   46558:	pop	{r4, r5, r6, sl, fp, pc}

0004655c <flatcc_json_printer_union_field@@Base>:
   4655c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   46560:	add	fp, sp, #28
   46564:	sub	sp, sp, #20
   46568:	mov	r9, r1
   4656c:	mov	r4, r0
   46570:	mov	r0, #2
   46574:	mov	sl, r3
   46578:	lsl	r1, r2, #1
   4657c:	add	r3, r0, r2, lsl #1
   46580:	ldr	r2, [r9, #8]
   46584:	mov	r0, #0
   46588:	cmp	r3, r2
   4658c:	bge	465a8 <flatcc_json_printer_union_field@@Base+0x4c>
   46590:	ldr	r7, [r9, #4]
   46594:	add	r3, r7, r3
   46598:	ldrh	r3, [r3]
   4659c:	cmp	r3, #0
   465a0:	ldrne	r0, [r9]
   465a4:	addne	r0, r0, r3
   465a8:	add	r1, r1, #4
   465ac:	cmp	r1, r2
   465b0:	bge	465cc <flatcc_json_printer_union_field@@Base+0x70>
   465b4:	ldr	r2, [r9, #4]
   465b8:	add	r1, r2, r1
   465bc:	ldrh	r1, [r1]
   465c0:	cmp	r1, #0
   465c4:	cmpne	r0, #0
   465c8:	bne	465d4 <flatcc_json_printer_union_field@@Base+0x78>
   465cc:	sub	sp, fp, #28
   465d0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   465d4:	ldr	r2, [r9]
   465d8:	adds	r1, r2, r1
   465dc:	str	r1, [sp, #4]
   465e0:	beq	465cc <flatcc_json_printer_union_field@@Base+0x70>
   465e4:	ldrb	r6, [r0]
   465e8:	ldr	r0, [r9, #16]
   465ec:	add	r1, r0, #1
   465f0:	cmp	r0, #0
   465f4:	str	r1, [r9, #16]
   465f8:	beq	46610 <flatcc_json_printer_union_field@@Base+0xb4>
   465fc:	ldr	r0, [r4, #20]
   46600:	add	r1, r0, #1
   46604:	str	r1, [r4, #20]
   46608:	mov	r1, #44	; 0x2c
   4660c:	strb	r1, [r0]
   46610:	ldrb	r1, [r4, #25]
   46614:	ldr	r8, [fp, #8]
   46618:	ldr	r0, [r4, #20]
   4661c:	cmp	r1, #0
   46620:	beq	466d8 <flatcc_json_printer_union_field@@Base+0x17c>
   46624:	add	r1, r0, #1
   46628:	mov	r5, r6
   4662c:	str	r1, [r4, #20]
   46630:	mov	r1, #10
   46634:	strb	r1, [r0]
   46638:	ldr	r0, [r4, #20]
   4663c:	ldrb	r2, [r4, #25]
   46640:	ldr	r3, [r4, #32]
   46644:	ldr	r1, [r4, #16]
   46648:	mla	r6, r3, r2, r0
   4664c:	mul	r7, r3, r2
   46650:	cmp	r6, r1
   46654:	bls	466fc <flatcc_json_printer_union_field@@Base+0x1a0>
   46658:	cmp	r0, r1
   4665c:	bcc	46678 <flatcc_json_printer_union_field@@Base+0x11c>
   46660:	ldr	r2, [r4, #44]	; 0x2c
   46664:	mov	r0, r4
   46668:	mov	r1, #0
   4666c:	blx	r2
   46670:	ldr	r1, [r4, #16]
   46674:	ldr	r0, [r4, #20]
   46678:	mov	r6, r5
   4667c:	sub	r5, r1, r0
   46680:	cmp	r5, r7
   46684:	bcs	466c8 <flatcc_json_printer_union_field@@Base+0x16c>
   46688:	mov	r1, #32
   4668c:	mov	r2, r5
   46690:	bl	14eec <memset@plt>
   46694:	ldr	r0, [r4, #20]
   46698:	ldr	r2, [r4, #44]	; 0x2c
   4669c:	mov	r1, #0
   466a0:	add	r0, r0, r5
   466a4:	str	r0, [r4, #20]
   466a8:	mov	r0, r4
   466ac:	blx	r2
   466b0:	ldr	r1, [r4, #16]
   466b4:	ldr	r0, [r4, #20]
   466b8:	sub	r7, r7, r5
   466bc:	sub	r5, r1, r0
   466c0:	cmp	r7, r5
   466c4:	bhi	46688 <flatcc_json_printer_union_field@@Base+0x12c>
   466c8:	mov	r1, #32
   466cc:	mov	r2, r7
   466d0:	bl	14eec <memset@plt>
   466d4:	b	4670c <flatcc_json_printer_union_field@@Base+0x1b0>
   466d8:	ldr	r1, [r4, #16]
   466dc:	cmp	r0, r1
   466e0:	bcc	46718 <flatcc_json_printer_union_field@@Base+0x1bc>
   466e4:	ldr	r2, [r4, #44]	; 0x2c
   466e8:	mov	r0, r4
   466ec:	mov	r1, #0
   466f0:	blx	r2
   466f4:	ldr	r0, [r4, #20]
   466f8:	b	46718 <flatcc_json_printer_union_field@@Base+0x1bc>
   466fc:	mov	r1, #32
   46700:	mov	r2, r7
   46704:	bl	14eec <memset@plt>
   46708:	mov	r6, r5
   4670c:	ldr	r0, [r4, #20]
   46710:	add	r0, r0, r7
   46714:	str	r0, [r4, #20]
   46718:	mov	r1, #34	; 0x22
   4671c:	strb	r1, [r0]
   46720:	ldrb	r2, [r4, #26]
   46724:	ldr	r0, [r4, #20]
   46728:	ldr	r1, [r4, #16]
   4672c:	cmp	r2, #0
   46730:	addeq	r0, r0, #1
   46734:	add	r2, r0, r8
   46738:	str	r0, [r4, #20]
   4673c:	cmp	r2, r1
   46740:	bcs	46758 <flatcc_json_printer_union_field@@Base+0x1fc>
   46744:	mov	r1, sl
   46748:	mov	r2, r8
   4674c:	bl	14e5c <memcpy@plt>
   46750:	mov	r7, r8
   46754:	b	467f4 <flatcc_json_printer_union_field@@Base+0x298>
   46758:	cmp	r0, r1
   4675c:	mov	r7, r8
   46760:	str	r6, [sp]
   46764:	bcc	46780 <flatcc_json_printer_union_field@@Base+0x224>
   46768:	ldr	r2, [r4, #44]	; 0x2c
   4676c:	mov	r0, r4
   46770:	mov	r1, #0
   46774:	blx	r2
   46778:	ldr	r1, [r4, #16]
   4677c:	ldr	r0, [r4, #20]
   46780:	sub	r8, r1, r0
   46784:	mov	r6, sl
   46788:	mov	r5, r7
   4678c:	cmp	r8, r7
   46790:	bcs	467e0 <flatcc_json_printer_union_field@@Base+0x284>
   46794:	mov	r7, r5
   46798:	mov	r6, sl
   4679c:	mov	r1, r6
   467a0:	mov	r2, r8
   467a4:	bl	14e5c <memcpy@plt>
   467a8:	ldr	r0, [r4, #20]
   467ac:	ldr	r2, [r4, #44]	; 0x2c
   467b0:	mov	r1, #0
   467b4:	add	r0, r0, r8
   467b8:	str	r0, [r4, #20]
   467bc:	mov	r0, r4
   467c0:	blx	r2
   467c4:	ldr	r1, [r4, #16]
   467c8:	ldr	r0, [r4, #20]
   467cc:	sub	r7, r7, r8
   467d0:	add	r6, r6, r8
   467d4:	sub	r8, r1, r0
   467d8:	cmp	r7, r8
   467dc:	bhi	4679c <flatcc_json_printer_union_field@@Base+0x240>
   467e0:	mov	r1, r6
   467e4:	mov	r2, r7
   467e8:	bl	14e5c <memcpy@plt>
   467ec:	ldr	r6, [sp]
   467f0:	mov	r8, r5
   467f4:	ldr	r0, [r4, #20]
   467f8:	ldr	r1, [r4, #16]
   467fc:	add	r0, r0, r7
   46800:	add	r2, r0, #5
   46804:	str	r0, [r4, #20]
   46808:	cmp	r2, r1
   4680c:	bcs	4682c <flatcc_json_printer_union_field@@Base+0x2d0>
   46810:	mov	r1, #101	; 0x65
   46814:	mov	r7, #5
   46818:	strb	r1, [r0, #4]
   4681c:	movw	r1, #29791	; 0x745f
   46820:	movt	r1, #28793	; 0x7079
   46824:	str	r1, [r0]
   46828:	b	468d0 <flatcc_json_printer_union_field@@Base+0x374>
   4682c:	cmp	r0, r1
   46830:	bcc	4684c <flatcc_json_printer_union_field@@Base+0x2f0>
   46834:	ldr	r2, [r4, #44]	; 0x2c
   46838:	mov	r0, r4
   4683c:	mov	r1, #0
   46840:	blx	r2
   46844:	ldr	r1, [r4, #16]
   46848:	ldr	r0, [r4, #20]
   4684c:	sub	r5, r1, r0
   46850:	mov	r8, r6
   46854:	cmp	r5, #4
   46858:	bhi	468b0 <flatcc_json_printer_union_field@@Base+0x354>
   4685c:	movw	r6, #60456	; 0xec28
   46860:	mov	r7, #5
   46864:	movt	r6, #4
   46868:	mov	r1, r6
   4686c:	mov	r2, r5
   46870:	bl	14e5c <memcpy@plt>
   46874:	ldr	r0, [r4, #20]
   46878:	ldr	r2, [r4, #44]	; 0x2c
   4687c:	mov	r1, #0
   46880:	add	r0, r0, r5
   46884:	str	r0, [r4, #20]
   46888:	mov	r0, r4
   4688c:	blx	r2
   46890:	ldr	r1, [r4, #16]
   46894:	ldr	r0, [r4, #20]
   46898:	sub	r7, r7, r5
   4689c:	add	r6, r6, r5
   468a0:	sub	r5, r1, r0
   468a4:	cmp	r7, r5
   468a8:	bhi	46868 <flatcc_json_printer_union_field@@Base+0x30c>
   468ac:	b	468bc <flatcc_json_printer_union_field@@Base+0x360>
   468b0:	movw	r6, #60456	; 0xec28
   468b4:	mov	r7, #5
   468b8:	movt	r6, #4
   468bc:	mov	r1, r6
   468c0:	mov	r2, r7
   468c4:	bl	14e5c <memcpy@plt>
   468c8:	mov	r6, r8
   468cc:	ldr	r8, [fp, #8]
   468d0:	ldr	r0, [r4, #20]
   468d4:	add	r1, r0, r7
   468d8:	str	r1, [r4, #20]
   468dc:	mov	r1, #34	; 0x22
   468e0:	strb	r1, [r0, r7]
   468e4:	ldrb	r0, [r4, #26]
   468e8:	ldr	r1, [r4, #20]
   468ec:	cmp	r0, #0
   468f0:	addeq	r1, r1, #1
   468f4:	add	r0, r1, #1
   468f8:	str	r0, [r4, #20]
   468fc:	mov	r0, #58	; 0x3a
   46900:	strb	r0, [r1]
   46904:	mov	r1, #32
   46908:	ldr	r0, [r4, #20]
   4690c:	strb	r1, [r0]
   46910:	ldrb	r1, [r4, #25]
   46914:	ldr	r0, [r4, #20]
   46918:	cmp	r1, #0
   4691c:	addne	r0, r0, #1
   46920:	str	r0, [r4, #20]
   46924:	ldrb	r1, [r4, #27]
   46928:	cmp	r1, #0
   4692c:	beq	46984 <flatcc_json_printer_union_field@@Base+0x428>
   46930:	mov	r1, #0
   46934:	cmp	r6, #100	; 0x64
   46938:	bcc	469a0 <flatcc_json_printer_union_field@@Base+0x444>
   4693c:	strb	r1, [r0, #3]
   46940:	movw	r1, #34079	; 0x851f
   46944:	movt	r1, #20971	; 0x51eb
   46948:	umull	r1, r2, r6, r1
   4694c:	mov	r1, #48	; 0x30
   46950:	orr	r1, r1, r2, lsr #5
   46954:	strb	r1, [r0]
   46958:	lsr	r1, r2, #5
   4695c:	mov	r2, #100	; 0x64
   46960:	mls	r1, r1, r2, r6
   46964:	movw	r2, #60904	; 0xede8
   46968:	movt	r2, #4
   4696c:	uxtb	r1, r1
   46970:	add	r1, r2, r1, lsl #1
   46974:	ldrh	r1, [r1]
   46978:	strh	r1, [r0, #1]
   4697c:	mov	r0, #3
   46980:	b	469f0 <flatcc_json_printer_union_field@@Base+0x494>
   46984:	ldr	r2, [fp, #12]
   46988:	mov	r0, r4
   4698c:	mov	r1, r6
   46990:	blx	r2
   46994:	cmp	r6, #0
   46998:	bne	46a04 <flatcc_json_printer_union_field@@Base+0x4a8>
   4699c:	b	465cc <flatcc_json_printer_union_field@@Base+0x70>
   469a0:	cmp	r6, #10
   469a4:	bcc	469e0 <flatcc_json_printer_union_field@@Base+0x484>
   469a8:	strb	r1, [r0, #2]
   469ac:	movw	r1, #34079	; 0x851f
   469b0:	movt	r1, #20971	; 0x51eb
   469b4:	umull	r1, r2, r6, r1
   469b8:	lsr	r1, r2, #5
   469bc:	mov	r2, #100	; 0x64
   469c0:	mls	r1, r1, r2, r6
   469c4:	movw	r2, #60904	; 0xede8
   469c8:	movt	r2, #4
   469cc:	add	r1, r2, r1, lsl #1
   469d0:	ldrh	r1, [r1]
   469d4:	strh	r1, [r0]
   469d8:	mov	r0, #2
   469dc:	b	469f0 <flatcc_json_printer_union_field@@Base+0x494>
   469e0:	strb	r1, [r0, #1]
   469e4:	add	r1, r6, #48	; 0x30
   469e8:	strb	r1, [r0]
   469ec:	mov	r0, #1
   469f0:	ldr	r1, [r4, #20]
   469f4:	add	r0, r1, r0
   469f8:	str	r0, [r4, #20]
   469fc:	cmp	r6, #0
   46a00:	beq	465cc <flatcc_json_printer_union_field@@Base+0x70>
   46a04:	ldr	r0, [r4, #20]
   46a08:	ldr	r5, [fp, #16]
   46a0c:	mov	r2, r8
   46a10:	add	r1, r0, #1
   46a14:	str	r1, [r4, #20]
   46a18:	mov	r1, #44	; 0x2c
   46a1c:	strb	r1, [r0]
   46a20:	mov	r0, r4
   46a24:	mov	r1, sl
   46a28:	bl	3d354 <flatcc_json_printer_string_field@@Base+0x90>
   46a2c:	ldr	r0, [r9, #12]
   46a30:	ldr	r1, [sp, #4]
   46a34:	strb	r6, [sp, #16]
   46a38:	str	r1, [sp, #8]
   46a3c:	str	r0, [sp, #12]
   46a40:	add	r1, sp, #8
   46a44:	mov	r0, r4
   46a48:	blx	r5
   46a4c:	sub	sp, fp, #28
   46a50:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00046a54 <flatcc_json_printer_union_table@@Base>:
   46a54:	push	{r4, r5, r6, sl, fp, lr}
   46a58:	add	fp, sp, #16
   46a5c:	sub	sp, sp, #24
   46a60:	mov	r4, r0
   46a64:	ldr	r0, [r1, #4]
   46a68:	subs	r0, r0, #1
   46a6c:	beq	46bb0 <flatcc_json_printer_union_table@@Base+0x15c>
   46a70:	ldr	r1, [r1]
   46a74:	ldr	r6, [r4, #32]
   46a78:	ldr	r3, [r1]
   46a7c:	add	r6, r6, #1
   46a80:	add	r1, r1, r3
   46a84:	ldr	r3, [r4, #20]
   46a88:	str	r6, [r4, #32]
   46a8c:	add	r6, r3, #1
   46a90:	str	r6, [r4, #20]
   46a94:	mov	r6, #123	; 0x7b
   46a98:	strb	r6, [r3]
   46a9c:	str	r0, [sp, #16]
   46aa0:	mov	r0, #0
   46aa4:	str	r0, [sp, #20]
   46aa8:	str	r1, [sp, #4]
   46aac:	ldr	r0, [r1]
   46ab0:	sub	r3, r1, r0
   46ab4:	str	r3, [sp, #8]
   46ab8:	ldrh	r0, [r1, -r0]
   46abc:	add	r1, sp, #4
   46ac0:	str	r0, [sp, #12]
   46ac4:	mov	r0, r4
   46ac8:	blx	r2
   46acc:	ldrb	r1, [r4, #25]
   46ad0:	ldr	r0, [r4, #20]
   46ad4:	cmp	r1, #0
   46ad8:	beq	46b98 <flatcc_json_printer_union_table@@Base+0x144>
   46adc:	add	r1, r0, #1
   46ae0:	str	r1, [r4, #20]
   46ae4:	mov	r1, #10
   46ae8:	strb	r1, [r0]
   46aec:	ldr	r0, [r4, #32]
   46af0:	sub	r2, r0, #1
   46af4:	str	r2, [r4, #32]
   46af8:	ldrb	r3, [r4, #25]
   46afc:	ldr	r0, [r4, #20]
   46b00:	ldr	r1, [r4, #16]
   46b04:	mla	r6, r2, r3, r0
   46b08:	mul	r5, r2, r3
   46b0c:	cmp	r6, r1
   46b10:	bls	46b80 <flatcc_json_printer_union_table@@Base+0x12c>
   46b14:	cmp	r0, r1
   46b18:	bcc	46b34 <flatcc_json_printer_union_table@@Base+0xe0>
   46b1c:	ldr	r2, [r4, #44]	; 0x2c
   46b20:	mov	r0, r4
   46b24:	mov	r1, #0
   46b28:	blx	r2
   46b2c:	ldr	r1, [r4, #16]
   46b30:	ldr	r0, [r4, #20]
   46b34:	sub	r6, r1, r0
   46b38:	cmp	r6, r5
   46b3c:	bcs	46b80 <flatcc_json_printer_union_table@@Base+0x12c>
   46b40:	mov	r1, #32
   46b44:	mov	r2, r6
   46b48:	bl	14eec <memset@plt>
   46b4c:	ldr	r0, [r4, #20]
   46b50:	ldr	r2, [r4, #44]	; 0x2c
   46b54:	mov	r1, #0
   46b58:	add	r0, r0, r6
   46b5c:	str	r0, [r4, #20]
   46b60:	mov	r0, r4
   46b64:	blx	r2
   46b68:	ldr	r1, [r4, #16]
   46b6c:	ldr	r0, [r4, #20]
   46b70:	sub	r5, r5, r6
   46b74:	sub	r6, r1, r0
   46b78:	cmp	r5, r6
   46b7c:	bhi	46b40 <flatcc_json_printer_union_table@@Base+0xec>
   46b80:	mov	r1, #32
   46b84:	mov	r2, r5
   46b88:	bl	14eec <memset@plt>
   46b8c:	ldr	r0, [r4, #20]
   46b90:	add	r0, r0, r5
   46b94:	str	r0, [r4, #20]
   46b98:	add	r1, r0, #1
   46b9c:	str	r1, [r4, #20]
   46ba0:	mov	r1, #125	; 0x7d
   46ba4:	strb	r1, [r0]
   46ba8:	sub	sp, fp, #16
   46bac:	pop	{r4, r5, r6, sl, fp, pc}
   46bb0:	ldr	r0, [r4, #36]	; 0x24
   46bb4:	cmp	r0, #0
   46bb8:	beq	46bc4 <flatcc_json_printer_union_table@@Base+0x170>
   46bbc:	sub	sp, fp, #16
   46bc0:	pop	{r4, r5, r6, sl, fp, pc}
   46bc4:	mov	r0, #2
   46bc8:	str	r0, [r4, #36]	; 0x24
   46bcc:	sub	sp, fp, #16
   46bd0:	pop	{r4, r5, r6, sl, fp, pc}

00046bd4 <flatcc_json_printer_union_struct@@Base>:
   46bd4:	push	{r4, r5, r6, sl, fp, lr}
   46bd8:	add	fp, sp, #16
   46bdc:	mov	r4, r0
   46be0:	ldr	r0, [r0, #20]
   46be4:	ldr	r3, [r4, #32]
   46be8:	add	r3, r3, #1
   46bec:	str	r3, [r4, #32]
   46bf0:	add	r3, r0, #1
   46bf4:	str	r3, [r4, #20]
   46bf8:	mov	r3, #123	; 0x7b
   46bfc:	strb	r3, [r0]
   46c00:	ldr	r0, [r1]
   46c04:	ldr	r1, [r0]
   46c08:	add	r1, r0, r1
   46c0c:	mov	r0, r4
   46c10:	blx	r2
   46c14:	ldrb	r1, [r4, #25]
   46c18:	ldr	r0, [r4, #20]
   46c1c:	cmp	r1, #0
   46c20:	beq	46ce0 <flatcc_json_printer_union_struct@@Base+0x10c>
   46c24:	add	r1, r0, #1
   46c28:	str	r1, [r4, #20]
   46c2c:	mov	r1, #10
   46c30:	strb	r1, [r0]
   46c34:	ldr	r0, [r4, #32]
   46c38:	sub	r2, r0, #1
   46c3c:	str	r2, [r4, #32]
   46c40:	ldrb	r3, [r4, #25]
   46c44:	ldr	r0, [r4, #20]
   46c48:	ldr	r1, [r4, #16]
   46c4c:	mla	r6, r2, r3, r0
   46c50:	mul	r5, r2, r3
   46c54:	cmp	r6, r1
   46c58:	bls	46cc8 <flatcc_json_printer_union_struct@@Base+0xf4>
   46c5c:	cmp	r0, r1
   46c60:	bcc	46c7c <flatcc_json_printer_union_struct@@Base+0xa8>
   46c64:	ldr	r2, [r4, #44]	; 0x2c
   46c68:	mov	r0, r4
   46c6c:	mov	r1, #0
   46c70:	blx	r2
   46c74:	ldr	r1, [r4, #16]
   46c78:	ldr	r0, [r4, #20]
   46c7c:	sub	r6, r1, r0
   46c80:	cmp	r6, r5
   46c84:	bcs	46cc8 <flatcc_json_printer_union_struct@@Base+0xf4>
   46c88:	mov	r1, #32
   46c8c:	mov	r2, r6
   46c90:	bl	14eec <memset@plt>
   46c94:	ldr	r0, [r4, #20]
   46c98:	ldr	r2, [r4, #44]	; 0x2c
   46c9c:	mov	r1, #0
   46ca0:	add	r0, r0, r6
   46ca4:	str	r0, [r4, #20]
   46ca8:	mov	r0, r4
   46cac:	blx	r2
   46cb0:	ldr	r1, [r4, #16]
   46cb4:	ldr	r0, [r4, #20]
   46cb8:	sub	r5, r5, r6
   46cbc:	sub	r6, r1, r0
   46cc0:	cmp	r5, r6
   46cc4:	bhi	46c88 <flatcc_json_printer_union_struct@@Base+0xb4>
   46cc8:	mov	r1, #32
   46ccc:	mov	r2, r5
   46cd0:	bl	14eec <memset@plt>
   46cd4:	ldr	r0, [r4, #20]
   46cd8:	add	r0, r0, r5
   46cdc:	str	r0, [r4, #20]
   46ce0:	add	r1, r0, #1
   46ce4:	str	r1, [r4, #20]
   46ce8:	mov	r1, #125	; 0x7d
   46cec:	strb	r1, [r0]
   46cf0:	pop	{r4, r5, r6, sl, fp, pc}

00046cf4 <flatcc_json_printer_union_string@@Base>:
   46cf4:	ldr	r1, [r1]
   46cf8:	ldr	r2, [r1]
   46cfc:	ldr	r2, [r1, r2]!
   46d00:	add	r1, r1, #4
   46d04:	b	3bed8 <flatcc_json_printer_string@@Base+0x4>

00046d08 <flatcc_json_printer_embedded_struct_field@@Base>:
   46d08:	push	{r4, r5, r6, r7, fp, lr}
   46d0c:	add	fp, sp, #16
   46d10:	add	r7, fp, #8
   46d14:	mov	r5, r3
   46d18:	mov	r3, r1
   46d1c:	mov	r6, r2
   46d20:	mov	r4, r0
   46d24:	ldm	r7, {r1, r2, r7}
   46d28:	cmp	r3, #0
   46d2c:	beq	46d44 <flatcc_json_printer_embedded_struct_field@@Base+0x3c>
   46d30:	ldr	r0, [r4, #20]
   46d34:	add	r3, r0, #1
   46d38:	str	r3, [r4, #20]
   46d3c:	mov	r3, #44	; 0x2c
   46d40:	strb	r3, [r0]
   46d44:	mov	r0, r4
   46d48:	bl	3d354 <flatcc_json_printer_string_field@@Base+0x90>
   46d4c:	ldr	r1, [r4, #32]
   46d50:	ldr	r0, [r4, #20]
   46d54:	add	r1, r1, #1
   46d58:	str	r1, [r4, #32]
   46d5c:	add	r1, r0, #1
   46d60:	str	r1, [r4, #20]
   46d64:	mov	r1, #123	; 0x7b
   46d68:	strb	r1, [r0]
   46d6c:	add	r1, r6, r5
   46d70:	mov	r0, r4
   46d74:	blx	r7
   46d78:	ldrb	r1, [r4, #25]
   46d7c:	ldr	r0, [r4, #20]
   46d80:	cmp	r1, #0
   46d84:	beq	46e44 <flatcc_json_printer_embedded_struct_field@@Base+0x13c>
   46d88:	add	r1, r0, #1
   46d8c:	str	r1, [r4, #20]
   46d90:	mov	r1, #10
   46d94:	strb	r1, [r0]
   46d98:	ldr	r0, [r4, #32]
   46d9c:	sub	r2, r0, #1
   46da0:	str	r2, [r4, #32]
   46da4:	ldrb	r3, [r4, #25]
   46da8:	ldr	r0, [r4, #20]
   46dac:	ldr	r1, [r4, #16]
   46db0:	mla	r7, r2, r3, r0
   46db4:	mul	r5, r2, r3
   46db8:	cmp	r7, r1
   46dbc:	bls	46e2c <flatcc_json_printer_embedded_struct_field@@Base+0x124>
   46dc0:	cmp	r0, r1
   46dc4:	bcc	46de0 <flatcc_json_printer_embedded_struct_field@@Base+0xd8>
   46dc8:	ldr	r2, [r4, #44]	; 0x2c
   46dcc:	mov	r0, r4
   46dd0:	mov	r1, #0
   46dd4:	blx	r2
   46dd8:	ldr	r1, [r4, #16]
   46ddc:	ldr	r0, [r4, #20]
   46de0:	sub	r6, r1, r0
   46de4:	cmp	r6, r5
   46de8:	bcs	46e2c <flatcc_json_printer_embedded_struct_field@@Base+0x124>
   46dec:	mov	r1, #32
   46df0:	mov	r2, r6
   46df4:	bl	14eec <memset@plt>
   46df8:	ldr	r0, [r4, #20]
   46dfc:	ldr	r2, [r4, #44]	; 0x2c
   46e00:	mov	r1, #0
   46e04:	add	r0, r0, r6
   46e08:	str	r0, [r4, #20]
   46e0c:	mov	r0, r4
   46e10:	blx	r2
   46e14:	ldr	r1, [r4, #16]
   46e18:	ldr	r0, [r4, #20]
   46e1c:	sub	r5, r5, r6
   46e20:	sub	r6, r1, r0
   46e24:	cmp	r5, r6
   46e28:	bhi	46dec <flatcc_json_printer_embedded_struct_field@@Base+0xe4>
   46e2c:	mov	r1, #32
   46e30:	mov	r2, r5
   46e34:	bl	14eec <memset@plt>
   46e38:	ldr	r0, [r4, #20]
   46e3c:	add	r0, r0, r5
   46e40:	str	r0, [r4, #20]
   46e44:	add	r1, r0, #1
   46e48:	str	r1, [r4, #20]
   46e4c:	mov	r1, #125	; 0x7d
   46e50:	strb	r1, [r0]
   46e54:	pop	{r4, r5, r6, r7, fp, pc}

00046e58 <flatcc_json_printer_struct_field@@Base>:
   46e58:	push	{r4, r5, r6, r7, fp, lr}
   46e5c:	add	fp, sp, #16
   46e60:	mov	r4, r0
   46e64:	mov	r0, #4
   46e68:	add	r0, r0, r2, lsl #1
   46e6c:	ldr	r2, [r1, #8]
   46e70:	cmp	r0, r2
   46e74:	popge	{r4, r5, r6, r7, fp, pc}
   46e78:	ldr	r2, [r1, #4]
   46e7c:	add	r0, r2, r0
   46e80:	ldrh	r0, [r0]
   46e84:	cmp	r0, #0
   46e88:	ldrne	r2, [r1]
   46e8c:	addsne	r5, r2, r0
   46e90:	bne	46e98 <flatcc_json_printer_struct_field@@Base+0x40>
   46e94:	pop	{r4, r5, r6, r7, fp, pc}
   46e98:	ldr	r0, [r1, #16]
   46e9c:	ldr	r7, [fp, #12]
   46ea0:	ldr	r2, [fp, #8]
   46ea4:	add	r6, r0, #1
   46ea8:	cmp	r0, #0
   46eac:	str	r6, [r1, #16]
   46eb0:	beq	46ec8 <flatcc_json_printer_struct_field@@Base+0x70>
   46eb4:	ldr	r0, [r4, #20]
   46eb8:	add	r1, r0, #1
   46ebc:	str	r1, [r4, #20]
   46ec0:	mov	r1, #44	; 0x2c
   46ec4:	strb	r1, [r0]
   46ec8:	mov	r0, r4
   46ecc:	mov	r1, r3
   46ed0:	bl	3d354 <flatcc_json_printer_string_field@@Base+0x90>
   46ed4:	ldr	r1, [r4, #32]
   46ed8:	ldr	r0, [r4, #20]
   46edc:	add	r1, r1, #1
   46ee0:	str	r1, [r4, #32]
   46ee4:	add	r1, r0, #1
   46ee8:	str	r1, [r4, #20]
   46eec:	mov	r1, #123	; 0x7b
   46ef0:	strb	r1, [r0]
   46ef4:	mov	r0, r4
   46ef8:	mov	r1, r5
   46efc:	blx	r7
   46f00:	ldrb	r1, [r4, #25]
   46f04:	ldr	r0, [r4, #20]
   46f08:	cmp	r1, #0
   46f0c:	beq	46fcc <flatcc_json_printer_struct_field@@Base+0x174>
   46f10:	add	r1, r0, #1
   46f14:	str	r1, [r4, #20]
   46f18:	mov	r1, #10
   46f1c:	strb	r1, [r0]
   46f20:	ldr	r0, [r4, #32]
   46f24:	sub	r2, r0, #1
   46f28:	str	r2, [r4, #32]
   46f2c:	ldrb	r3, [r4, #25]
   46f30:	ldr	r0, [r4, #20]
   46f34:	ldr	r1, [r4, #16]
   46f38:	mla	r7, r2, r3, r0
   46f3c:	mul	r5, r2, r3
   46f40:	cmp	r7, r1
   46f44:	bls	46fb4 <flatcc_json_printer_struct_field@@Base+0x15c>
   46f48:	cmp	r0, r1
   46f4c:	bcc	46f68 <flatcc_json_printer_struct_field@@Base+0x110>
   46f50:	ldr	r2, [r4, #44]	; 0x2c
   46f54:	mov	r0, r4
   46f58:	mov	r1, #0
   46f5c:	blx	r2
   46f60:	ldr	r1, [r4, #16]
   46f64:	ldr	r0, [r4, #20]
   46f68:	sub	r6, r1, r0
   46f6c:	cmp	r6, r5
   46f70:	bcs	46fb4 <flatcc_json_printer_struct_field@@Base+0x15c>
   46f74:	mov	r1, #32
   46f78:	mov	r2, r6
   46f7c:	bl	14eec <memset@plt>
   46f80:	ldr	r0, [r4, #20]
   46f84:	ldr	r2, [r4, #44]	; 0x2c
   46f88:	mov	r1, #0
   46f8c:	add	r0, r0, r6
   46f90:	str	r0, [r4, #20]
   46f94:	mov	r0, r4
   46f98:	blx	r2
   46f9c:	ldr	r1, [r4, #16]
   46fa0:	ldr	r0, [r4, #20]
   46fa4:	sub	r5, r5, r6
   46fa8:	sub	r6, r1, r0
   46fac:	cmp	r5, r6
   46fb0:	bhi	46f74 <flatcc_json_printer_struct_field@@Base+0x11c>
   46fb4:	mov	r1, #32
   46fb8:	mov	r2, r5
   46fbc:	bl	14eec <memset@plt>
   46fc0:	ldr	r0, [r4, #20]
   46fc4:	add	r0, r0, r5
   46fc8:	str	r0, [r4, #20]
   46fcc:	add	r1, r0, #1
   46fd0:	str	r1, [r4, #20]
   46fd4:	mov	r1, #125	; 0x7d
   46fd8:	strb	r1, [r0]
   46fdc:	pop	{r4, r5, r6, r7, fp, pc}

00046fe0 <flatcc_json_printer_struct_as_root@@Base>:
   46fe0:	push	{r4, r5, r6, sl, fp, lr}
   46fe4:	add	fp, sp, #16
   46fe8:	sub	sp, sp, #8
   46fec:	cmp	r1, #0
   46ff0:	mov	r4, r0
   46ff4:	mov	r0, #0
   46ff8:	cmpne	r2, #7
   46ffc:	str	r0, [sp, #4]
   47000:	bls	471b8 <flatcc_json_printer_struct_as_root@@Base+0x1d8>
   47004:	mov	r5, r1
   47008:	cmp	r3, #0
   4700c:	beq	47038 <flatcc_json_printer_struct_as_root@@Base+0x58>
   47010:	add	r0, sp, #4
   47014:	mov	r1, r3
   47018:	mov	r2, #4
   4701c:	bl	14ef8 <strncpy@plt>
   47020:	ldr	r0, [sp, #4]
   47024:	cmp	r0, #0
   47028:	beq	47038 <flatcc_json_printer_struct_as_root@@Base+0x58>
   4702c:	ldr	r1, [r5, #4]
   47030:	cmp	r1, r0
   47034:	bne	471e8 <flatcc_json_printer_struct_as_root@@Base+0x208>
   47038:	ldr	r1, [r4, #32]
   4703c:	ldr	r0, [r4, #20]
   47040:	ldr	r2, [fp, #8]
   47044:	add	r1, r1, #1
   47048:	str	r1, [r4, #32]
   4704c:	add	r1, r0, #1
   47050:	str	r1, [r4, #20]
   47054:	mov	r1, #123	; 0x7b
   47058:	strb	r1, [r0]
   4705c:	ldr	r0, [r5]
   47060:	add	r1, r5, r0
   47064:	mov	r0, r4
   47068:	blx	r2
   4706c:	ldrb	r1, [r4, #25]
   47070:	ldr	r0, [r4, #20]
   47074:	cmp	r1, #0
   47078:	beq	47138 <flatcc_json_printer_struct_as_root@@Base+0x158>
   4707c:	add	r1, r0, #1
   47080:	str	r1, [r4, #20]
   47084:	mov	r1, #10
   47088:	strb	r1, [r0]
   4708c:	ldr	r0, [r4, #32]
   47090:	sub	r2, r0, #1
   47094:	str	r2, [r4, #32]
   47098:	ldrb	r3, [r4, #25]
   4709c:	ldr	r0, [r4, #20]
   470a0:	ldr	r1, [r4, #16]
   470a4:	mla	r6, r2, r3, r0
   470a8:	mul	r5, r2, r3
   470ac:	cmp	r6, r1
   470b0:	bls	47120 <flatcc_json_printer_struct_as_root@@Base+0x140>
   470b4:	cmp	r0, r1
   470b8:	bcc	470d4 <flatcc_json_printer_struct_as_root@@Base+0xf4>
   470bc:	ldr	r2, [r4, #44]	; 0x2c
   470c0:	mov	r0, r4
   470c4:	mov	r1, #0
   470c8:	blx	r2
   470cc:	ldr	r1, [r4, #16]
   470d0:	ldr	r0, [r4, #20]
   470d4:	sub	r6, r1, r0
   470d8:	cmp	r6, r5
   470dc:	bcs	47120 <flatcc_json_printer_struct_as_root@@Base+0x140>
   470e0:	mov	r1, #32
   470e4:	mov	r2, r6
   470e8:	bl	14eec <memset@plt>
   470ec:	ldr	r0, [r4, #20]
   470f0:	ldr	r2, [r4, #44]	; 0x2c
   470f4:	mov	r1, #0
   470f8:	add	r0, r0, r6
   470fc:	str	r0, [r4, #20]
   47100:	mov	r0, r4
   47104:	blx	r2
   47108:	ldr	r1, [r4, #16]
   4710c:	ldr	r0, [r4, #20]
   47110:	sub	r5, r5, r6
   47114:	sub	r6, r1, r0
   47118:	cmp	r5, r6
   4711c:	bhi	470e0 <flatcc_json_printer_struct_as_root@@Base+0x100>
   47120:	mov	r1, #32
   47124:	mov	r2, r5
   47128:	bl	14eec <memset@plt>
   4712c:	ldr	r0, [r4, #20]
   47130:	add	r0, r0, r5
   47134:	str	r0, [r4, #20]
   47138:	add	r1, r0, #1
   4713c:	str	r1, [r4, #20]
   47140:	mov	r1, #125	; 0x7d
   47144:	strb	r1, [r0]
   47148:	ldrb	r0, [r4, #25]
   4714c:	cmp	r0, #0
   47150:	beq	47174 <flatcc_json_printer_struct_as_root@@Base+0x194>
   47154:	ldr	r0, [r4, #32]
   47158:	cmp	r0, #0
   4715c:	bne	47174 <flatcc_json_printer_struct_as_root@@Base+0x194>
   47160:	ldr	r0, [r4, #20]
   47164:	add	r1, r0, #1
   47168:	str	r1, [r4, #20]
   4716c:	mov	r1, #10
   47170:	strb	r1, [r0]
   47174:	ldr	r2, [r4, #44]	; 0x2c
   47178:	mov	r0, r4
   4717c:	mov	r1, #1
   47180:	blx	r2
   47184:	ldr	r1, [r4, #36]	; 0x24
   47188:	mvn	r0, #0
   4718c:	cmp	r1, #0
   47190:	beq	4719c <flatcc_json_printer_struct_as_root@@Base+0x1bc>
   47194:	sub	sp, fp, #16
   47198:	pop	{r4, r5, r6, sl, fp, pc}
   4719c:	ldr	r1, [r4, #12]
   471a0:	ldr	r2, [r4, #20]
   471a4:	ldr	r0, [r4]
   471a8:	add	r1, r2, r1
   471ac:	sub	r0, r1, r0
   471b0:	sub	sp, fp, #16
   471b4:	pop	{r4, r5, r6, sl, fp, pc}
   471b8:	ldr	r0, [r4, #36]	; 0x24
   471bc:	movw	r1, #60179	; 0xeb13
   471c0:	movw	r3, #61354	; 0xefaa
   471c4:	movw	r2, #1019	; 0x3fb
   471c8:	movt	r1, #4
   471cc:	movt	r3, #4
   471d0:	cmp	r0, #0
   471d4:	moveq	r0, #1
   471d8:	streq	r0, [r4, #36]	; 0x24
   471dc:	movw	r0, #61323	; 0xef8b
   471e0:	movt	r0, #4
   471e4:	bl	14f40 <__assert_fail@plt>
   471e8:	ldr	r0, [r4, #36]	; 0x24
   471ec:	movw	r1, #60179	; 0xeb13
   471f0:	movw	r3, #61354	; 0xefaa
   471f4:	movw	r2, #1028	; 0x404
   471f8:	movt	r1, #4
   471fc:	movt	r3, #4
   47200:	cmp	r0, #0
   47204:	moveq	r0, #1
   47208:	streq	r0, [r4, #36]	; 0x24
   4720c:	movw	r0, #61433	; 0xeff9
   47210:	movt	r0, #4
   47214:	bl	14f40 <__assert_fail@plt>

00047218 <flatcc_json_printer_table_as_root@@Base>:
   47218:	push	{r4, r5, r6, sl, fp, lr}
   4721c:	add	fp, sp, #16
   47220:	sub	sp, sp, #24
   47224:	cmp	r1, #0
   47228:	mov	r4, r0
   4722c:	mov	r0, #0
   47230:	cmpne	r2, #7
   47234:	str	r0, [sp, #4]
   47238:	bls	4741c <flatcc_json_printer_table_as_root@@Base+0x204>
   4723c:	mov	r5, r1
   47240:	cmp	r3, #0
   47244:	beq	47270 <flatcc_json_printer_table_as_root@@Base+0x58>
   47248:	add	r0, sp, #4
   4724c:	mov	r1, r3
   47250:	mov	r2, #4
   47254:	bl	14ef8 <strncpy@plt>
   47258:	ldr	r0, [sp, #4]
   4725c:	cmp	r0, #0
   47260:	beq	47270 <flatcc_json_printer_table_as_root@@Base+0x58>
   47264:	ldr	r1, [r5, #4]
   47268:	cmp	r1, r0
   4726c:	bne	4744c <flatcc_json_printer_table_as_root@@Base+0x234>
   47270:	ldr	r3, [r4, #32]
   47274:	ldr	r1, [r4, #20]
   47278:	ldr	r0, [r5]
   4727c:	ldr	r2, [fp, #8]
   47280:	add	r3, r3, #1
   47284:	str	r3, [r4, #32]
   47288:	add	r3, r1, #1
   4728c:	str	r3, [r4, #20]
   47290:	mov	r3, #123	; 0x7b
   47294:	strb	r3, [r1]
   47298:	mov	r1, #99	; 0x63
   4729c:	str	r1, [sp, #16]
   472a0:	mov	r1, #0
   472a4:	str	r1, [sp, #20]
   472a8:	add	r1, r5, r0
   472ac:	str	r1, [sp, #4]
   472b0:	ldr	r0, [r5, r0]
   472b4:	sub	r3, r1, r0
   472b8:	str	r3, [sp, #8]
   472bc:	ldrh	r0, [r1, -r0]
   472c0:	add	r1, sp, #4
   472c4:	str	r0, [sp, #12]
   472c8:	mov	r0, r4
   472cc:	blx	r2
   472d0:	ldrb	r1, [r4, #25]
   472d4:	ldr	r0, [r4, #20]
   472d8:	cmp	r1, #0
   472dc:	beq	4739c <flatcc_json_printer_table_as_root@@Base+0x184>
   472e0:	add	r1, r0, #1
   472e4:	str	r1, [r4, #20]
   472e8:	mov	r1, #10
   472ec:	strb	r1, [r0]
   472f0:	ldr	r0, [r4, #32]
   472f4:	sub	r2, r0, #1
   472f8:	str	r2, [r4, #32]
   472fc:	ldrb	r3, [r4, #25]
   47300:	ldr	r0, [r4, #20]
   47304:	ldr	r1, [r4, #16]
   47308:	mla	r6, r2, r3, r0
   4730c:	mul	r5, r2, r3
   47310:	cmp	r6, r1
   47314:	bls	47384 <flatcc_json_printer_table_as_root@@Base+0x16c>
   47318:	cmp	r0, r1
   4731c:	bcc	47338 <flatcc_json_printer_table_as_root@@Base+0x120>
   47320:	ldr	r2, [r4, #44]	; 0x2c
   47324:	mov	r0, r4
   47328:	mov	r1, #0
   4732c:	blx	r2
   47330:	ldr	r1, [r4, #16]
   47334:	ldr	r0, [r4, #20]
   47338:	sub	r6, r1, r0
   4733c:	cmp	r6, r5
   47340:	bcs	47384 <flatcc_json_printer_table_as_root@@Base+0x16c>
   47344:	mov	r1, #32
   47348:	mov	r2, r6
   4734c:	bl	14eec <memset@plt>
   47350:	ldr	r0, [r4, #20]
   47354:	ldr	r2, [r4, #44]	; 0x2c
   47358:	mov	r1, #0
   4735c:	add	r0, r0, r6
   47360:	str	r0, [r4, #20]
   47364:	mov	r0, r4
   47368:	blx	r2
   4736c:	ldr	r1, [r4, #16]
   47370:	ldr	r0, [r4, #20]
   47374:	sub	r5, r5, r6
   47378:	sub	r6, r1, r0
   4737c:	cmp	r5, r6
   47380:	bhi	47344 <flatcc_json_printer_table_as_root@@Base+0x12c>
   47384:	mov	r1, #32
   47388:	mov	r2, r5
   4738c:	bl	14eec <memset@plt>
   47390:	ldr	r0, [r4, #20]
   47394:	add	r0, r0, r5
   47398:	str	r0, [r4, #20]
   4739c:	add	r1, r0, #1
   473a0:	str	r1, [r4, #20]
   473a4:	mov	r1, #125	; 0x7d
   473a8:	strb	r1, [r0]
   473ac:	ldrb	r0, [r4, #25]
   473b0:	cmp	r0, #0
   473b4:	beq	473d8 <flatcc_json_printer_table_as_root@@Base+0x1c0>
   473b8:	ldr	r0, [r4, #32]
   473bc:	cmp	r0, #0
   473c0:	bne	473d8 <flatcc_json_printer_table_as_root@@Base+0x1c0>
   473c4:	ldr	r0, [r4, #20]
   473c8:	add	r1, r0, #1
   473cc:	str	r1, [r4, #20]
   473d0:	mov	r1, #10
   473d4:	strb	r1, [r0]
   473d8:	ldr	r2, [r4, #44]	; 0x2c
   473dc:	mov	r0, r4
   473e0:	mov	r1, #1
   473e4:	blx	r2
   473e8:	ldr	r1, [r4, #36]	; 0x24
   473ec:	mvn	r0, #0
   473f0:	cmp	r1, #0
   473f4:	beq	47400 <flatcc_json_printer_table_as_root@@Base+0x1e8>
   473f8:	sub	sp, fp, #16
   473fc:	pop	{r4, r5, r6, sl, fp, pc}
   47400:	ldr	r1, [r4, #12]
   47404:	ldr	r2, [r4, #20]
   47408:	ldr	r0, [r4]
   4740c:	add	r1, r2, r1
   47410:	sub	r0, r1, r0
   47414:	sub	sp, fp, #16
   47418:	pop	{r4, r5, r6, sl, fp, pc}
   4741c:	ldr	r0, [r4, #36]	; 0x24
   47420:	movw	r1, #60179	; 0xeb13
   47424:	movw	r3, #61354	; 0xefaa
   47428:	movw	r2, #1019	; 0x3fb
   4742c:	movt	r1, #4
   47430:	movt	r3, #4
   47434:	cmp	r0, #0
   47438:	moveq	r0, #1
   4743c:	streq	r0, [r4, #36]	; 0x24
   47440:	movw	r0, #61323	; 0xef8b
   47444:	movt	r0, #4
   47448:	bl	14f40 <__assert_fail@plt>
   4744c:	ldr	r0, [r4, #36]	; 0x24
   47450:	movw	r1, #60179	; 0xeb13
   47454:	movw	r3, #61354	; 0xefaa
   47458:	movw	r2, #1028	; 0x404
   4745c:	movt	r1, #4
   47460:	movt	r3, #4
   47464:	cmp	r0, #0
   47468:	moveq	r0, #1
   4746c:	streq	r0, [r4, #36]	; 0x24
   47470:	movw	r0, #61433	; 0xeff9
   47474:	movt	r0, #4
   47478:	bl	14f40 <__assert_fail@plt>

0004747c <flatcc_json_printer_struct_as_nested_root@@Base>:
   4747c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   47480:	add	fp, sp, #24
   47484:	sub	sp, sp, #8
   47488:	mov	r6, r1
   4748c:	ldr	r1, [r1, #8]
   47490:	mov	r4, r0
   47494:	mov	r0, #4
   47498:	add	r0, r0, r2, lsl #1
   4749c:	cmp	r0, r1
   474a0:	bge	474c0 <flatcc_json_printer_struct_as_nested_root@@Base+0x44>
   474a4:	ldr	r1, [r6, #4]
   474a8:	add	r0, r1, r0
   474ac:	ldrh	r0, [r0]
   474b0:	cmp	r0, #0
   474b4:	ldrne	r1, [r6]
   474b8:	addsne	r0, r1, r0
   474bc:	bne	474c8 <flatcc_json_printer_struct_as_nested_root@@Base+0x4c>
   474c0:	sub	sp, fp, #24
   474c4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   474c8:	ldr	r7, [r0]
   474cc:	mov	r1, #0
   474d0:	ldr	r0, [r7, r0]!
   474d4:	str	r1, [sp, #4]
   474d8:	cmp	r7, #0
   474dc:	cmpne	r0, #7
   474e0:	bls	47668 <flatcc_json_printer_struct_as_nested_root@@Base+0x1ec>
   474e4:	ldr	r1, [fp, #12]
   474e8:	mov	r5, r3
   474ec:	cmp	r1, #0
   474f0:	beq	47518 <flatcc_json_printer_struct_as_nested_root@@Base+0x9c>
   474f4:	add	r0, sp, #4
   474f8:	mov	r2, #4
   474fc:	bl	14ef8 <strncpy@plt>
   47500:	ldr	r0, [sp, #4]
   47504:	cmp	r0, #0
   47508:	beq	47518 <flatcc_json_printer_struct_as_nested_root@@Base+0x9c>
   4750c:	ldr	r1, [r7, #4]
   47510:	cmp	r1, r0
   47514:	bne	47698 <flatcc_json_printer_struct_as_nested_root@@Base+0x21c>
   47518:	ldr	r0, [r6, #16]
   4751c:	ldr	r8, [fp, #16]
   47520:	ldr	r2, [fp, #8]
   47524:	add	r1, r0, #1
   47528:	cmp	r0, #0
   4752c:	str	r1, [r6, #16]
   47530:	beq	47548 <flatcc_json_printer_struct_as_nested_root@@Base+0xcc>
   47534:	ldr	r0, [r4, #20]
   47538:	add	r1, r0, #1
   4753c:	str	r1, [r4, #20]
   47540:	mov	r1, #44	; 0x2c
   47544:	strb	r1, [r0]
   47548:	mov	r0, r4
   4754c:	mov	r1, r5
   47550:	bl	3d354 <flatcc_json_printer_string_field@@Base+0x90>
   47554:	ldr	r1, [r4, #32]
   47558:	ldr	r0, [r4, #20]
   4755c:	add	r1, r1, #1
   47560:	str	r1, [r4, #32]
   47564:	add	r1, r0, #1
   47568:	str	r1, [r4, #20]
   4756c:	mov	r1, #123	; 0x7b
   47570:	strb	r1, [r0]
   47574:	ldr	r0, [r7]
   47578:	add	r1, r7, r0
   4757c:	mov	r0, r4
   47580:	blx	r8
   47584:	ldrb	r1, [r4, #25]
   47588:	ldr	r0, [r4, #20]
   4758c:	cmp	r1, #0
   47590:	beq	47650 <flatcc_json_printer_struct_as_nested_root@@Base+0x1d4>
   47594:	add	r1, r0, #1
   47598:	str	r1, [r4, #20]
   4759c:	mov	r1, #10
   475a0:	strb	r1, [r0]
   475a4:	ldr	r0, [r4, #32]
   475a8:	sub	r2, r0, #1
   475ac:	str	r2, [r4, #32]
   475b0:	ldrb	r3, [r4, #25]
   475b4:	ldr	r0, [r4, #20]
   475b8:	ldr	r1, [r4, #16]
   475bc:	mla	r7, r2, r3, r0
   475c0:	mul	r5, r2, r3
   475c4:	cmp	r7, r1
   475c8:	bls	47638 <flatcc_json_printer_struct_as_nested_root@@Base+0x1bc>
   475cc:	cmp	r0, r1
   475d0:	bcc	475ec <flatcc_json_printer_struct_as_nested_root@@Base+0x170>
   475d4:	ldr	r2, [r4, #44]	; 0x2c
   475d8:	mov	r0, r4
   475dc:	mov	r1, #0
   475e0:	blx	r2
   475e4:	ldr	r1, [r4, #16]
   475e8:	ldr	r0, [r4, #20]
   475ec:	sub	r6, r1, r0
   475f0:	cmp	r6, r5
   475f4:	bcs	47638 <flatcc_json_printer_struct_as_nested_root@@Base+0x1bc>
   475f8:	mov	r1, #32
   475fc:	mov	r2, r6
   47600:	bl	14eec <memset@plt>
   47604:	ldr	r0, [r4, #20]
   47608:	ldr	r2, [r4, #44]	; 0x2c
   4760c:	mov	r1, #0
   47610:	add	r0, r0, r6
   47614:	str	r0, [r4, #20]
   47618:	mov	r0, r4
   4761c:	blx	r2
   47620:	ldr	r1, [r4, #16]
   47624:	ldr	r0, [r4, #20]
   47628:	sub	r5, r5, r6
   4762c:	sub	r6, r1, r0
   47630:	cmp	r5, r6
   47634:	bhi	475f8 <flatcc_json_printer_struct_as_nested_root@@Base+0x17c>
   47638:	mov	r1, #32
   4763c:	mov	r2, r5
   47640:	bl	14eec <memset@plt>
   47644:	ldr	r0, [r4, #20]
   47648:	add	r0, r0, r5
   4764c:	str	r0, [r4, #20]
   47650:	add	r1, r0, #1
   47654:	str	r1, [r4, #20]
   47658:	mov	r1, #125	; 0x7d
   4765c:	strb	r1, [r0]
   47660:	sub	sp, fp, #24
   47664:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   47668:	ldr	r0, [r4, #36]	; 0x24
   4766c:	movw	r1, #60179	; 0xeb13
   47670:	movw	r3, #61354	; 0xefaa
   47674:	movw	r2, #1019	; 0x3fb
   47678:	movt	r1, #4
   4767c:	movt	r3, #4
   47680:	cmp	r0, #0
   47684:	moveq	r0, #1
   47688:	streq	r0, [r4, #36]	; 0x24
   4768c:	movw	r0, #61323	; 0xef8b
   47690:	movt	r0, #4
   47694:	bl	14f40 <__assert_fail@plt>
   47698:	ldr	r0, [r4, #36]	; 0x24
   4769c:	movw	r1, #60179	; 0xeb13
   476a0:	movw	r3, #61354	; 0xefaa
   476a4:	movw	r2, #1028	; 0x404
   476a8:	movt	r1, #4
   476ac:	movt	r3, #4
   476b0:	cmp	r0, #0
   476b4:	moveq	r0, #1
   476b8:	streq	r0, [r4, #36]	; 0x24
   476bc:	movw	r0, #61433	; 0xeff9
   476c0:	movt	r0, #4
   476c4:	bl	14f40 <__assert_fail@plt>

000476c8 <flatcc_json_printer_table_as_nested_root@@Base>:
   476c8:	push	{r4, r5, r6, r7, fp, lr}
   476cc:	add	fp, sp, #16
   476d0:	sub	sp, sp, #24
   476d4:	mov	r5, r1
   476d8:	ldr	r1, [r1, #8]
   476dc:	mov	r4, r0
   476e0:	mov	r0, #4
   476e4:	add	r0, r0, r2, lsl #1
   476e8:	cmp	r0, r1
   476ec:	bge	4770c <flatcc_json_printer_table_as_nested_root@@Base+0x44>
   476f0:	ldr	r1, [r5, #4]
   476f4:	add	r0, r1, r0
   476f8:	ldrh	r0, [r0]
   476fc:	cmp	r0, #0
   47700:	ldrne	r1, [r5]
   47704:	addsne	r0, r1, r0
   47708:	bne	47714 <flatcc_json_printer_table_as_nested_root@@Base+0x4c>
   4770c:	sub	sp, fp, #16
   47710:	pop	{r4, r5, r6, r7, fp, pc}
   47714:	ldr	r7, [r0]
   47718:	mov	r1, #0
   4771c:	ldr	r0, [r7, r0]!
   47720:	str	r1, [sp, #4]
   47724:	cmp	r0, #7
   47728:	bls	47904 <flatcc_json_printer_table_as_nested_root@@Base+0x23c>
   4772c:	ldr	r1, [fp, #12]
   47730:	mov	r6, r3
   47734:	cmp	r1, #0
   47738:	beq	47760 <flatcc_json_printer_table_as_nested_root@@Base+0x98>
   4773c:	add	r0, sp, #4
   47740:	mov	r2, #4
   47744:	bl	14ef8 <strncpy@plt>
   47748:	ldr	r0, [sp, #4]
   4774c:	cmp	r0, #0
   47750:	beq	47760 <flatcc_json_printer_table_as_nested_root@@Base+0x98>
   47754:	ldr	r1, [r7, #8]
   47758:	cmp	r1, r0
   4775c:	bne	47934 <flatcc_json_printer_table_as_nested_root@@Base+0x26c>
   47760:	ldr	r0, [r5, #16]
   47764:	ldr	r2, [fp, #8]
   47768:	add	r1, r0, #1
   4776c:	cmp	r0, #0
   47770:	str	r1, [r5, #16]
   47774:	beq	4778c <flatcc_json_printer_table_as_nested_root@@Base+0xc4>
   47778:	ldr	r0, [r4, #20]
   4777c:	add	r1, r0, #1
   47780:	str	r1, [r4, #20]
   47784:	mov	r1, #44	; 0x2c
   47788:	strb	r1, [r0]
   4778c:	mov	r0, r4
   47790:	mov	r1, r6
   47794:	bl	3d354 <flatcc_json_printer_string_field@@Base+0x90>
   47798:	ldr	r0, [r5, #12]
   4779c:	subs	r0, r0, #1
   477a0:	beq	478e8 <flatcc_json_printer_table_as_nested_root@@Base+0x220>
   477a4:	add	r1, r7, #4
   477a8:	ldr	r7, [r4, #32]
   477ac:	ldr	r2, [fp, #16]
   477b0:	ldr	r3, [r1]
   477b4:	add	r7, r7, #1
   477b8:	add	r1, r1, r3
   477bc:	ldr	r3, [r4, #20]
   477c0:	str	r7, [r4, #32]
   477c4:	add	r7, r3, #1
   477c8:	str	r7, [r4, #20]
   477cc:	mov	r7, #123	; 0x7b
   477d0:	strb	r7, [r3]
   477d4:	str	r0, [sp, #16]
   477d8:	mov	r0, #0
   477dc:	str	r0, [sp, #20]
   477e0:	str	r1, [sp, #4]
   477e4:	ldr	r0, [r1]
   477e8:	sub	r3, r1, r0
   477ec:	str	r3, [sp, #8]
   477f0:	ldrh	r0, [r1, -r0]
   477f4:	add	r1, sp, #4
   477f8:	str	r0, [sp, #12]
   477fc:	mov	r0, r4
   47800:	blx	r2
   47804:	ldrb	r1, [r4, #25]
   47808:	ldr	r0, [r4, #20]
   4780c:	cmp	r1, #0
   47810:	beq	478d0 <flatcc_json_printer_table_as_nested_root@@Base+0x208>
   47814:	add	r1, r0, #1
   47818:	str	r1, [r4, #20]
   4781c:	mov	r1, #10
   47820:	strb	r1, [r0]
   47824:	ldr	r0, [r4, #32]
   47828:	sub	r2, r0, #1
   4782c:	str	r2, [r4, #32]
   47830:	ldrb	r3, [r4, #25]
   47834:	ldr	r0, [r4, #20]
   47838:	ldr	r1, [r4, #16]
   4783c:	mla	r7, r2, r3, r0
   47840:	mul	r5, r2, r3
   47844:	cmp	r7, r1
   47848:	bls	478b8 <flatcc_json_printer_table_as_nested_root@@Base+0x1f0>
   4784c:	cmp	r0, r1
   47850:	bcc	4786c <flatcc_json_printer_table_as_nested_root@@Base+0x1a4>
   47854:	ldr	r2, [r4, #44]	; 0x2c
   47858:	mov	r0, r4
   4785c:	mov	r1, #0
   47860:	blx	r2
   47864:	ldr	r1, [r4, #16]
   47868:	ldr	r0, [r4, #20]
   4786c:	sub	r6, r1, r0
   47870:	cmp	r6, r5
   47874:	bcs	478b8 <flatcc_json_printer_table_as_nested_root@@Base+0x1f0>
   47878:	mov	r1, #32
   4787c:	mov	r2, r6
   47880:	bl	14eec <memset@plt>
   47884:	ldr	r0, [r4, #20]
   47888:	ldr	r2, [r4, #44]	; 0x2c
   4788c:	mov	r1, #0
   47890:	add	r0, r0, r6
   47894:	str	r0, [r4, #20]
   47898:	mov	r0, r4
   4789c:	blx	r2
   478a0:	ldr	r1, [r4, #16]
   478a4:	ldr	r0, [r4, #20]
   478a8:	sub	r5, r5, r6
   478ac:	sub	r6, r1, r0
   478b0:	cmp	r5, r6
   478b4:	bhi	47878 <flatcc_json_printer_table_as_nested_root@@Base+0x1b0>
   478b8:	mov	r1, #32
   478bc:	mov	r2, r5
   478c0:	bl	14eec <memset@plt>
   478c4:	ldr	r0, [r4, #20]
   478c8:	add	r0, r0, r5
   478cc:	str	r0, [r4, #20]
   478d0:	add	r1, r0, #1
   478d4:	str	r1, [r4, #20]
   478d8:	mov	r1, #125	; 0x7d
   478dc:	strb	r1, [r0]
   478e0:	sub	sp, fp, #16
   478e4:	pop	{r4, r5, r6, r7, fp, pc}
   478e8:	ldr	r0, [r4, #36]	; 0x24
   478ec:	cmp	r0, #0
   478f0:	bne	4770c <flatcc_json_printer_table_as_nested_root@@Base+0x44>
   478f4:	mov	r0, #2
   478f8:	str	r0, [r4, #36]	; 0x24
   478fc:	sub	sp, fp, #16
   47900:	pop	{r4, r5, r6, r7, fp, pc}
   47904:	ldr	r0, [r4, #36]	; 0x24
   47908:	movw	r1, #60179	; 0xeb13
   4790c:	movw	r3, #61354	; 0xefaa
   47910:	movw	r2, #1019	; 0x3fb
   47914:	movt	r1, #4
   47918:	movt	r3, #4
   4791c:	cmp	r0, #0
   47920:	moveq	r0, #1
   47924:	streq	r0, [r4, #36]	; 0x24
   47928:	movw	r0, #61323	; 0xef8b
   4792c:	movt	r0, #4
   47930:	bl	14f40 <__assert_fail@plt>
   47934:	ldr	r0, [r4, #36]	; 0x24
   47938:	movw	r1, #60179	; 0xeb13
   4793c:	movw	r3, #61354	; 0xefaa
   47940:	movw	r2, #1028	; 0x404
   47944:	movt	r1, #4
   47948:	movt	r3, #4
   4794c:	cmp	r0, #0
   47950:	moveq	r0, #1
   47954:	streq	r0, [r4, #36]	; 0x24
   47958:	movw	r0, #61433	; 0xeff9
   4795c:	movt	r0, #4
   47960:	bl	14f40 <__assert_fail@plt>

00047964 <flatcc_json_printer_init@@Base>:
   47964:	push	{r4, r5, r6, sl, fp, lr}
   47968:	add	fp, sp, #16
   4796c:	vmov.i32	q8, #0	; 0x00000000
   47970:	mov	r5, r0
   47974:	mov	r4, #0
   47978:	cmp	r1, #0
   4797c:	movw	r6, #16448	; 0x4040
   47980:	str	r4, [r0, #32]
   47984:	mov	r0, #36	; 0x24
   47988:	mov	r2, r5
   4798c:	vst1.32	{d16-d17}, [r2], r0
   47990:	add	r0, r5, #16
   47994:	vst1.32	{d16-d17}, [r0]
   47998:	movw	r0, #844	; 0x34c
   4799c:	str	r4, [r2]
   479a0:	movw	r2, #31236	; 0x7a04
   479a4:	movt	r0, #6
   479a8:	movt	r2, #4
   479ac:	ldr	r0, [r0]
   479b0:	movne	r0, r1
   479b4:	str	r0, [r5, #40]	; 0x28
   479b8:	movw	r0, #16448	; 0x4040
   479bc:	str	r2, [r5, #44]	; 0x2c
   479c0:	bl	14e98 <malloc@plt>
   479c4:	cmp	r0, #0
   479c8:	str	r0, [r5]
   479cc:	beq	479f8 <flatcc_json_printer_init@@Base+0x94>
   479d0:	mov	r1, #16384	; 0x4000
   479d4:	str	r6, [r5, #4]
   479d8:	str	r1, [r5, #8]
   479dc:	mov	r1, #1
   479e0:	strb	r1, [r5, #24]
   479e4:	add	r1, r0, #16384	; 0x4000
   479e8:	str	r1, [r5, #16]
   479ec:	str	r0, [r5, #20]
   479f0:	mov	r0, r4
   479f4:	pop	{r4, r5, r6, sl, fp, pc}
   479f8:	mvn	r4, #0
   479fc:	mov	r0, r4
   47a00:	pop	{r4, r5, r6, sl, fp, pc}
   47a04:	push	{r4, r5, r6, sl, fp, lr}
   47a08:	add	fp, sp, #16
   47a0c:	mov	r4, r0
   47a10:	cmp	r1, #0
   47a14:	beq	47a20 <flatcc_json_printer_init@@Base+0xbc>
   47a18:	ldr	r5, [r4, #20]
   47a1c:	b	47a30 <flatcc_json_printer_init@@Base+0xcc>
   47a20:	ldr	r6, [r4, #16]
   47a24:	ldr	r5, [r4, #20]
   47a28:	cmp	r5, r6
   47a2c:	bcs	47a68 <flatcc_json_printer_init@@Base+0x104>
   47a30:	ldr	r0, [r4]
   47a34:	ldr	r3, [r4, #40]	; 0x28
   47a38:	mov	r2, #1
   47a3c:	sub	r5, r5, r0
   47a40:	mov	r1, r5
   47a44:	bl	14e8c <fwrite@plt>
   47a48:	ldr	r1, [r4, #12]
   47a4c:	ldr	r0, [r4]
   47a50:	str	r0, [r4, #20]
   47a54:	add	r1, r1, r5
   47a58:	str	r1, [r4, #12]
   47a5c:	mov	r1, #0
   47a60:	strb	r1, [r0]
   47a64:	pop	{r4, r5, r6, sl, fp, pc}
   47a68:	ldr	r0, [r4]
   47a6c:	ldr	r1, [r4, #8]
   47a70:	ldr	r3, [r4, #40]	; 0x28
   47a74:	mov	r2, #1
   47a78:	bl	14e8c <fwrite@plt>
   47a7c:	ldr	r0, [r4]
   47a80:	ldr	r1, [r4, #8]
   47a84:	sub	r5, r5, r6
   47a88:	mov	r2, r5
   47a8c:	add	r1, r0, r1
   47a90:	bl	14e5c <memcpy@plt>
   47a94:	ldr	r0, [r4]
   47a98:	ldr	r1, [r4, #8]
   47a9c:	ldr	r2, [r4, #12]
   47aa0:	add	r0, r0, r5
   47aa4:	add	r1, r2, r1
   47aa8:	str	r0, [r4, #20]
   47aac:	str	r1, [r4, #12]
   47ab0:	mov	r1, #0
   47ab4:	strb	r1, [r0]
   47ab8:	pop	{r4, r5, r6, sl, fp, pc}

00047abc <flatcc_json_printer_init_buffer@@Base>:
   47abc:	push	{fp, lr}
   47ac0:	mov	fp, sp
   47ac4:	cmp	r2, #63	; 0x3f
   47ac8:	bls	47b08 <flatcc_json_printer_init_buffer@@Base+0x4c>
   47acc:	vmov.i32	q8, #0	; 0x00000000
   47ad0:	add	r3, r0, #12
   47ad4:	vst1.32	{d16-d17}, [r3]
   47ad8:	movw	r3, #31528	; 0x7b28
   47adc:	movt	r3, #4
   47ae0:	str	r3, [r0, #44]	; 0x2c
   47ae4:	add	r3, r0, #28
   47ae8:	vst1.32	{d16-d17}, [r3]
   47aec:	sub	r3, r2, #64	; 0x40
   47af0:	stm	r0, {r1, r2, r3}
   47af4:	add	r2, r1, r3
   47af8:	str	r2, [r0, #16]
   47afc:	str	r1, [r0, #20]
   47b00:	mov	r0, #0
   47b04:	pop	{fp, pc}
   47b08:	movw	r0, #60462	; 0xec2e
   47b0c:	movw	r1, #60179	; 0xeb13
   47b10:	movw	r3, #60503	; 0xec57
   47b14:	movw	r2, #1165	; 0x48d
   47b18:	movt	r0, #4
   47b1c:	movt	r1, #4
   47b20:	movt	r3, #4
   47b24:	bl	14f40 <__assert_fail@plt>
   47b28:	ldr	r2, [r0, #16]
   47b2c:	ldr	r1, [r0, #20]
   47b30:	cmp	r1, r2
   47b34:	bcs	47b48 <flatcc_json_printer_init_buffer@@Base+0x8c>
   47b38:	mov	r2, r1
   47b3c:	mov	r0, #0
   47b40:	strb	r0, [r2]
   47b44:	bx	lr
   47b48:	ldr	r2, [r0, #36]	; 0x24
   47b4c:	cmp	r2, #0
   47b50:	moveq	r2, #3
   47b54:	streq	r2, [r0, #36]	; 0x24
   47b58:	ldr	r2, [r0]
   47b5c:	ldr	r3, [r0, #12]
   47b60:	sub	r1, r1, r2
   47b64:	str	r2, [r0, #20]
   47b68:	add	r1, r1, r3
   47b6c:	str	r1, [r0, #12]
   47b70:	mov	r0, #0
   47b74:	strb	r0, [r2]
   47b78:	bx	lr

00047b7c <flatcc_json_printer_init_dynamic_buffer@@Base>:
   47b7c:	push	{r4, r5, fp, lr}
   47b80:	add	fp, sp, #8
   47b84:	vmov.i32	q8, #0	; 0x00000000
   47b88:	cmp	r1, #0
   47b8c:	mov	r5, r1
   47b90:	mov	r4, r0
   47b94:	add	r0, r0, #28
   47b98:	movweq	r5, #4096	; 0x1000
   47b9c:	cmp	r5, #64	; 0x40
   47ba0:	vst1.32	{d16-d17}, [r0]
   47ba4:	add	r0, r4, #12
   47ba8:	movls	r5, #64	; 0x40
   47bac:	vst1.32	{d16-d17}, [r0]
   47bb0:	mov	r0, r5
   47bb4:	bl	14e98 <malloc@plt>
   47bb8:	mov	r1, r0
   47bbc:	movw	r2, #31744	; 0x7c00
   47bc0:	mov	r0, #1
   47bc4:	strb	r0, [r4, #24]
   47bc8:	sub	r0, r5, #64	; 0x40
   47bcc:	movt	r2, #4
   47bd0:	stm	r4, {r1, r5}
   47bd4:	cmp	r1, #0
   47bd8:	str	r0, [r4, #8]
   47bdc:	add	r0, r1, r0
   47be0:	str	r2, [r4, #44]	; 0x2c
   47be4:	str	r0, [r4, #16]
   47be8:	mov	r0, #0
   47bec:	moveq	r0, #3
   47bf0:	str	r1, [r4, #20]
   47bf4:	streq	r0, [r4, #36]	; 0x24
   47bf8:	mvneq	r0, #0
   47bfc:	pop	{r4, r5, fp, pc}
   47c00:	push	{r4, r5, fp, lr}
   47c04:	add	fp, sp, #8
   47c08:	mov	r4, r0
   47c0c:	ldr	r0, [r0]
   47c10:	mov	r1, #0
   47c14:	ldr	r5, [r4, #20]
   47c18:	strb	r1, [r5], -r0
   47c1c:	ldr	r0, [r4, #16]
   47c20:	ldr	r1, [r4, #20]
   47c24:	cmp	r1, r0
   47c28:	popcc	{r4, r5, fp, pc}
   47c2c:	ldm	r4, {r0, r1}
   47c30:	lsl	r1, r1, #1
   47c34:	bl	14e80 <realloc@plt>
   47c38:	cmp	r0, #0
   47c3c:	beq	47c78 <flatcc_json_printer_init_dynamic_buffer@@Base+0xfc>
   47c40:	str	r0, [r4]
   47c44:	mvn	r3, #63	; 0x3f
   47c48:	add	r1, r0, r5
   47c4c:	ldr	r2, [r4, #4]
   47c50:	add	r3, r3, r2, lsl #1
   47c54:	lsl	r2, r2, #1
   47c58:	add	r0, r0, r3
   47c5c:	str	r3, [r4, #8]
   47c60:	str	r2, [r4, #4]
   47c64:	str	r0, [r4, #16]
   47c68:	str	r1, [r4, #20]
   47c6c:	mov	r0, #0
   47c70:	strb	r0, [r1]
   47c74:	pop	{r4, r5, fp, pc}
   47c78:	ldr	r0, [r4, #36]	; 0x24
   47c7c:	cmp	r0, #0
   47c80:	moveq	r0, #3
   47c84:	streq	r0, [r4, #36]	; 0x24
   47c88:	ldr	r0, [r4, #12]
   47c8c:	ldr	r1, [r4]
   47c90:	add	r0, r0, r5
   47c94:	str	r1, [r4, #20]
   47c98:	str	r0, [r4, #12]
   47c9c:	mov	r0, #0
   47ca0:	strb	r0, [r1]
   47ca4:	pop	{r4, r5, fp, pc}

00047ca8 <flatcc_json_printer_get_buffer@@Base>:
   47ca8:	push	{r4, r5, fp, lr}
   47cac:	add	fp, sp, #8
   47cb0:	ldr	r2, [r0, #44]	; 0x2c
   47cb4:	mov	r4, r1
   47cb8:	mov	r1, #0
   47cbc:	mov	r5, r0
   47cc0:	blx	r2
   47cc4:	cmp	r4, #0
   47cc8:	beq	47ce0 <flatcc_json_printer_get_buffer@@Base+0x38>
   47ccc:	ldr	r0, [r5]
   47cd0:	ldr	r1, [r5, #20]
   47cd4:	sub	r1, r1, r0
   47cd8:	str	r1, [r4]
   47cdc:	pop	{r4, r5, fp, pc}
   47ce0:	ldr	r0, [r5]
   47ce4:	pop	{r4, r5, fp, pc}

00047ce8 <flatcc_json_printer_finalize_dynamic_buffer@@Base>:
   47ce8:	push	{r4, r5, fp, lr}
   47cec:	add	fp, sp, #8
   47cf0:	ldr	r2, [r0, #44]	; 0x2c
   47cf4:	mov	r5, r1
   47cf8:	mov	r1, #0
   47cfc:	mov	r4, r0
   47d00:	blx	r2
   47d04:	cmp	r5, #0
   47d08:	beq	47d20 <flatcc_json_printer_finalize_dynamic_buffer@@Base+0x38>
   47d0c:	ldr	r0, [r4]
   47d10:	ldr	r1, [r4, #20]
   47d14:	sub	r1, r1, r0
   47d18:	str	r1, [r5]
   47d1c:	b	47d24 <flatcc_json_printer_finalize_dynamic_buffer@@Base+0x3c>
   47d20:	ldr	r0, [r4]
   47d24:	vmov.i32	q8, #0	; 0x00000000
   47d28:	mov	r1, #32
   47d2c:	add	r2, r4, #16
   47d30:	vst1.32	{d16-d17}, [r4], r1
   47d34:	vst1.32	{d16-d17}, [r2]
   47d38:	vst1.32	{d16-d17}, [r4]
   47d3c:	pop	{r4, r5, fp, pc}

00047d40 <flatcc_json_printer_clear@@Base>:
   47d40:	push	{r4, sl, fp, lr}
   47d44:	add	fp, sp, #8
   47d48:	mov	r4, r0
   47d4c:	ldrb	r0, [r0, #24]
   47d50:	cmp	r0, #0
   47d54:	beq	47d68 <flatcc_json_printer_clear@@Base+0x28>
   47d58:	ldr	r0, [r4]
   47d5c:	cmp	r0, #0
   47d60:	beq	47d68 <flatcc_json_printer_clear@@Base+0x28>
   47d64:	bl	14e50 <free@plt>
   47d68:	vmov.i32	q8, #0	; 0x00000000
   47d6c:	mov	r0, #32
   47d70:	add	r1, r4, #16
   47d74:	vst1.32	{d16-d17}, [r4], r0
   47d78:	vst1.32	{d16-d17}, [r1]
   47d7c:	vst1.32	{d16-d17}, [r4]
   47d80:	pop	{r4, sl, fp, pc}
   47d84:	cmp	r2, #0
   47d88:	bxeq	lr
   47d8c:	push	{r4, r5, fp, lr}
   47d90:	add	fp, sp, #8
   47d94:	ldr	lr, [r2]
   47d98:	bic	ip, r3, #224	; 0xe0
   47d9c:	cmp	ip, #0
   47da0:	beq	47dc0 <flatcc_json_printer_clear@@Base+0x80>
   47da4:	cmp	ip, #1
   47da8:	bne	47e88 <flatcc_json_printer_clear@@Base+0x148>
   47dac:	movw	ip, #61258	; 0xef4a
   47db0:	movt	ip, #4
   47db4:	cmp	lr, #3
   47db8:	bcs	47dd0 <flatcc_json_printer_clear@@Base+0x90>
   47dbc:	b	47e30 <flatcc_json_printer_clear@@Base+0xf0>
   47dc0:	movw	ip, #61193	; 0xef09
   47dc4:	movt	ip, #4
   47dc8:	cmp	lr, #3
   47dcc:	bcc	47e30 <flatcc_json_printer_clear@@Base+0xf0>
   47dd0:	ldrb	r4, [r1]
   47dd4:	sub	lr, lr, #3
   47dd8:	cmp	lr, #2
   47ddc:	ldrb	r4, [ip, r4, lsr #2]
   47de0:	strb	r4, [r0]
   47de4:	ldrb	r5, [r1, #1]
   47de8:	ldrb	r4, [r1]
   47dec:	lsr	r5, r5, #4
   47df0:	bfi	r5, r4, #4, #2
   47df4:	ldrb	r4, [ip, r5]
   47df8:	strb	r4, [r0, #1]
   47dfc:	ldrb	r5, [r1, #2]
   47e00:	ldrb	r4, [r1, #1]
   47e04:	lsr	r5, r5, #6
   47e08:	bfi	r5, r4, #2, #4
   47e0c:	ldrb	r4, [ip, r5]
   47e10:	strb	r4, [r0, #2]
   47e14:	ldrb	r4, [r1, #2]
   47e18:	add	r1, r1, #3
   47e1c:	and	r4, r4, #63	; 0x3f
   47e20:	ldrb	r4, [ip, r4]
   47e24:	strb	r4, [r0, #3]
   47e28:	add	r0, r0, #4
   47e2c:	bhi	47dd0 <flatcc_json_printer_clear@@Base+0x90>
   47e30:	and	r3, r3, #128	; 0x80
   47e34:	cmp	lr, #1
   47e38:	beq	47e9c <flatcc_json_printer_clear@@Base+0x15c>
   47e3c:	cmp	lr, #2
   47e40:	bne	47ec4 <flatcc_json_printer_clear@@Base+0x184>
   47e44:	ldrb	r5, [r1]
   47e48:	cmp	r3, #0
   47e4c:	ldrb	r5, [ip, r5, lsr #2]
   47e50:	strb	r5, [r0]
   47e54:	ldrb	r4, [r1, #1]
   47e58:	ldrb	r5, [r1]
   47e5c:	lsr	r4, r4, #4
   47e60:	bfi	r4, r5, #4, #2
   47e64:	ldrb	r5, [ip, r4]
   47e68:	strb	r5, [r0, #1]
   47e6c:	ldrb	r1, [r1, #1]
   47e70:	and	r1, r1, #15
   47e74:	ldrb	r1, [ip, r1, lsl #2]
   47e78:	strb	r1, [r0, #2]
   47e7c:	movne	r1, #61	; 0x3d
   47e80:	strbne	r1, [r0, #3]
   47e84:	b	47ec4 <flatcc_json_printer_clear@@Base+0x184>
   47e88:	mov	r0, lr
   47e8c:	sub	r0, lr, r0
   47e90:	str	r0, [r2]
   47e94:	pop	{r4, r5, fp, lr}
   47e98:	bx	lr
   47e9c:	ldrb	r5, [r1]
   47ea0:	cmp	r3, #0
   47ea4:	ldrb	r5, [ip, r5, lsr #2]
   47ea8:	strb	r5, [r0]
   47eac:	ldrb	r1, [r1]
   47eb0:	and	r1, r1, #3
   47eb4:	ldrb	r1, [ip, r1, lsl #4]
   47eb8:	strb	r1, [r0, #1]
   47ebc:	movwne	r1, #15677	; 0x3d3d
   47ec0:	strhne	r1, [r0, #2]
   47ec4:	ldr	lr, [r2]
   47ec8:	mov	r0, #0
   47ecc:	sub	r0, lr, r0
   47ed0:	str	r0, [r2]
   47ed4:	pop	{r4, r5, fp, lr}
   47ed8:	bx	lr
   47edc:	eor	r1, r1, #-2147483648	; 0x80000000
   47ee0:	b	47ee8 <flatcc_json_printer_clear@@Base+0x1a8>
   47ee4:	eor	r3, r3, #-2147483648	; 0x80000000
   47ee8:	push	{r4, r5, lr}
   47eec:	lsl	r4, r1, #1
   47ef0:	lsl	r5, r3, #1
   47ef4:	teq	r4, r5
   47ef8:	teqeq	r0, r2
   47efc:	orrsne	ip, r4, r0
   47f00:	orrsne	ip, r5, r2
   47f04:	mvnsne	ip, r4, asr #21
   47f08:	mvnsne	ip, r5, asr #21
   47f0c:	beq	480f8 <flatcc_json_printer_clear@@Base+0x3b8>
   47f10:	lsr	r4, r4, #21
   47f14:	rsbs	r5, r4, r5, lsr #21
   47f18:	rsblt	r5, r5, #0
   47f1c:	ble	47f3c <flatcc_json_printer_clear@@Base+0x1fc>
   47f20:	add	r4, r4, r5
   47f24:	eor	r2, r0, r2
   47f28:	eor	r3, r1, r3
   47f2c:	eor	r0, r2, r0
   47f30:	eor	r1, r3, r1
   47f34:	eor	r2, r0, r2
   47f38:	eor	r3, r1, r3
   47f3c:	cmp	r5, #54	; 0x36
   47f40:	pophi	{r4, r5, pc}
   47f44:	tst	r1, #-2147483648	; 0x80000000
   47f48:	lsl	r1, r1, #12
   47f4c:	mov	ip, #1048576	; 0x100000
   47f50:	orr	r1, ip, r1, lsr #12
   47f54:	beq	47f60 <flatcc_json_printer_clear@@Base+0x220>
   47f58:	rsbs	r0, r0, #0
   47f5c:	rsc	r1, r1, #0
   47f60:	tst	r3, #-2147483648	; 0x80000000
   47f64:	lsl	r3, r3, #12
   47f68:	orr	r3, ip, r3, lsr #12
   47f6c:	beq	47f78 <flatcc_json_printer_clear@@Base+0x238>
   47f70:	rsbs	r2, r2, #0
   47f74:	rsc	r3, r3, #0
   47f78:	teq	r4, r5
   47f7c:	beq	480e0 <flatcc_json_printer_clear@@Base+0x3a0>
   47f80:	sub	r4, r4, #1
   47f84:	rsbs	lr, r5, #32
   47f88:	blt	47fa4 <flatcc_json_printer_clear@@Base+0x264>
   47f8c:	lsl	ip, r2, lr
   47f90:	adds	r0, r0, r2, lsr r5
   47f94:	adc	r1, r1, #0
   47f98:	adds	r0, r0, r3, lsl lr
   47f9c:	adcs	r1, r1, r3, asr r5
   47fa0:	b	47fc0 <flatcc_json_printer_clear@@Base+0x280>
   47fa4:	sub	r5, r5, #32
   47fa8:	add	lr, lr, #32
   47fac:	cmp	r2, #1
   47fb0:	lsl	ip, r3, lr
   47fb4:	orrcs	ip, ip, #2
   47fb8:	adds	r0, r0, r3, asr r5
   47fbc:	adcs	r1, r1, r3, asr #31
   47fc0:	and	r5, r1, #-2147483648	; 0x80000000
   47fc4:	bpl	47fd4 <flatcc_json_printer_clear@@Base+0x294>
   47fc8:	rsbs	ip, ip, #0
   47fcc:	rscs	r0, r0, #0
   47fd0:	rsc	r1, r1, #0
   47fd4:	cmp	r1, #1048576	; 0x100000
   47fd8:	bcc	48018 <flatcc_json_printer_clear@@Base+0x2d8>
   47fdc:	cmp	r1, #2097152	; 0x200000
   47fe0:	bcc	48000 <flatcc_json_printer_clear@@Base+0x2c0>
   47fe4:	lsrs	r1, r1, #1
   47fe8:	rrxs	r0, r0
   47fec:	rrx	ip, ip
   47ff0:	add	r4, r4, #1
   47ff4:	lsl	r2, r4, #21
   47ff8:	cmn	r2, #4194304	; 0x400000
   47ffc:	bcs	48158 <flatcc_json_printer_clear@@Base+0x418>
   48000:	cmp	ip, #-2147483648	; 0x80000000
   48004:	lsrseq	ip, r0, #1
   48008:	adcs	r0, r0, #0
   4800c:	adc	r1, r1, r4, lsl #20
   48010:	orr	r1, r1, r5
   48014:	pop	{r4, r5, pc}
   48018:	lsls	ip, ip, #1
   4801c:	adcs	r0, r0, r0
   48020:	adc	r1, r1, r1
   48024:	tst	r1, #1048576	; 0x100000
   48028:	sub	r4, r4, #1
   4802c:	bne	48000 <flatcc_json_printer_clear@@Base+0x2c0>
   48030:	teq	r1, #0
   48034:	moveq	r1, r0
   48038:	moveq	r0, #0
   4803c:	clz	r3, r1
   48040:	addeq	r3, r3, #32
   48044:	sub	r3, r3, #11
   48048:	subs	r2, r3, #32
   4804c:	bge	48070 <flatcc_json_printer_clear@@Base+0x330>
   48050:	adds	r2, r2, #12
   48054:	ble	4806c <flatcc_json_printer_clear@@Base+0x32c>
   48058:	add	ip, r2, #20
   4805c:	rsb	r2, r2, #12
   48060:	lsl	r0, r1, ip
   48064:	lsr	r1, r1, r2
   48068:	b	48080 <flatcc_json_printer_clear@@Base+0x340>
   4806c:	add	r2, r2, #20
   48070:	rsble	ip, r2, #32
   48074:	lsl	r1, r1, r2
   48078:	orrle	r1, r1, r0, lsr ip
   4807c:	lslle	r0, r0, r2
   48080:	subs	r4, r4, r3
   48084:	addge	r1, r1, r4, lsl #20
   48088:	orrge	r1, r1, r5
   4808c:	popge	{r4, r5, pc}
   48090:	mvn	r4, r4
   48094:	subs	r4, r4, #31
   48098:	bge	480d4 <flatcc_json_printer_clear@@Base+0x394>
   4809c:	adds	r4, r4, #12
   480a0:	bgt	480bc <flatcc_json_printer_clear@@Base+0x37c>
   480a4:	add	r4, r4, #20
   480a8:	rsb	r2, r4, #32
   480ac:	lsr	r0, r0, r4
   480b0:	orr	r0, r0, r1, lsl r2
   480b4:	orr	r1, r5, r1, lsr r4
   480b8:	pop	{r4, r5, pc}
   480bc:	rsb	r4, r4, #12
   480c0:	rsb	r2, r4, #32
   480c4:	lsr	r0, r0, r2
   480c8:	orr	r0, r0, r1, lsl r4
   480cc:	mov	r1, r5
   480d0:	pop	{r4, r5, pc}
   480d4:	lsr	r0, r1, r4
   480d8:	mov	r1, r5
   480dc:	pop	{r4, r5, pc}
   480e0:	teq	r4, #0
   480e4:	eor	r3, r3, #1048576	; 0x100000
   480e8:	eoreq	r1, r1, #1048576	; 0x100000
   480ec:	addeq	r4, r4, #1
   480f0:	subne	r5, r5, #1
   480f4:	b	47f80 <flatcc_json_printer_clear@@Base+0x240>
   480f8:	mvns	ip, r4, asr #21
   480fc:	mvnsne	ip, r5, asr #21
   48100:	beq	48168 <flatcc_json_printer_clear@@Base+0x428>
   48104:	teq	r4, r5
   48108:	teqeq	r0, r2
   4810c:	beq	48120 <flatcc_json_printer_clear@@Base+0x3e0>
   48110:	orrs	ip, r4, r0
   48114:	moveq	r1, r3
   48118:	moveq	r0, r2
   4811c:	pop	{r4, r5, pc}
   48120:	teq	r1, r3
   48124:	movne	r1, #0
   48128:	movne	r0, #0
   4812c:	popne	{r4, r5, pc}
   48130:	lsrs	ip, r4, #21
   48134:	bne	48148 <flatcc_json_printer_clear@@Base+0x408>
   48138:	lsls	r0, r0, #1
   4813c:	adcs	r1, r1, r1
   48140:	orrcs	r1, r1, #-2147483648	; 0x80000000
   48144:	pop	{r4, r5, pc}
   48148:	adds	r4, r4, #4194304	; 0x400000
   4814c:	addcc	r1, r1, #1048576	; 0x100000
   48150:	popcc	{r4, r5, pc}
   48154:	and	r5, r1, #-2147483648	; 0x80000000
   48158:	orr	r1, r5, #2130706432	; 0x7f000000
   4815c:	orr	r1, r1, #15728640	; 0xf00000
   48160:	mov	r0, #0
   48164:	pop	{r4, r5, pc}
   48168:	mvns	ip, r4, asr #21
   4816c:	movne	r1, r3
   48170:	movne	r0, r2
   48174:	mvnseq	ip, r5, asr #21
   48178:	movne	r3, r1
   4817c:	movne	r2, r0
   48180:	orrs	r4, r0, r1, lsl #12
   48184:	orrseq	r5, r2, r3, lsl #12
   48188:	teqeq	r1, r3
   4818c:	orrne	r1, r1, #524288	; 0x80000
   48190:	pop	{r4, r5, pc}
   48194:	teq	r0, #0
   48198:	moveq	r1, #0
   4819c:	bxeq	lr
   481a0:	push	{r4, r5, lr}
   481a4:	mov	r4, #1024	; 0x400
   481a8:	add	r4, r4, #50	; 0x32
   481ac:	mov	r5, #0
   481b0:	mov	r1, #0
   481b4:	b	48030 <flatcc_json_printer_clear@@Base+0x2f0>
   481b8:	teq	r0, #0
   481bc:	moveq	r1, #0
   481c0:	bxeq	lr
   481c4:	push	{r4, r5, lr}
   481c8:	mov	r4, #1024	; 0x400
   481cc:	add	r4, r4, #50	; 0x32
   481d0:	ands	r5, r0, #-2147483648	; 0x80000000
   481d4:	rsbmi	r0, r0, #0
   481d8:	mov	r1, #0
   481dc:	b	48030 <flatcc_json_printer_clear@@Base+0x2f0>
   481e0:	lsls	r2, r0, #1
   481e4:	asr	r1, r2, #3
   481e8:	rrx	r1, r1
   481ec:	lsl	r0, r2, #28
   481f0:	andsne	r3, r2, #-16777216	; 0xff000000
   481f4:	teqne	r3, #-16777216	; 0xff000000
   481f8:	eorne	r1, r1, #939524096	; 0x38000000
   481fc:	bxne	lr
   48200:	bics	r2, r2, #-16777216	; 0xff000000
   48204:	bxeq	lr
   48208:	teq	r3, #-16777216	; 0xff000000
   4820c:	orreq	r1, r1, #524288	; 0x80000
   48210:	bxeq	lr
   48214:	push	{r4, r5, lr}
   48218:	mov	r4, #896	; 0x380
   4821c:	and	r5, r1, #-2147483648	; 0x80000000
   48220:	bic	r1, r1, #-2147483648	; 0x80000000
   48224:	b	48030 <flatcc_json_printer_clear@@Base+0x2f0>
   48228:	orrs	r2, r0, r1
   4822c:	bxeq	lr
   48230:	push	{r4, r5, lr}
   48234:	mov	r5, #0
   48238:	b	48258 <flatcc_json_printer_clear@@Base+0x518>
   4823c:	orrs	r2, r0, r1
   48240:	bxeq	lr
   48244:	push	{r4, r5, lr}
   48248:	ands	r5, r1, #-2147483648	; 0x80000000
   4824c:	bpl	48258 <flatcc_json_printer_clear@@Base+0x518>
   48250:	rsbs	r0, r0, #0
   48254:	rsc	r1, r1, #0
   48258:	mov	r4, #1024	; 0x400
   4825c:	add	r4, r4, #50	; 0x32
   48260:	lsrs	ip, r1, #22
   48264:	beq	47fd4 <flatcc_json_printer_clear@@Base+0x294>
   48268:	mov	r2, #3
   4826c:	lsrs	ip, ip, #3
   48270:	addne	r2, r2, #3
   48274:	lsrs	ip, ip, #3
   48278:	addne	r2, r2, #3
   4827c:	add	r2, r2, ip, lsr #3
   48280:	rsb	r3, r2, #32
   48284:	lsl	ip, r0, r3
   48288:	lsr	r0, r0, r2
   4828c:	orr	r0, r0, r1, lsl r3
   48290:	lsr	r1, r1, r2
   48294:	add	r4, r4, r2
   48298:	b	47fd4 <flatcc_json_printer_clear@@Base+0x294>
   4829c:	eor	r0, r0, #-2147483648	; 0x80000000
   482a0:	b	482a8 <flatcc_json_printer_clear@@Base+0x568>
   482a4:	eor	r1, r1, #-2147483648	; 0x80000000
   482a8:	lsls	r2, r0, #1
   482ac:	lslsne	r3, r1, #1
   482b0:	teqne	r2, r3
   482b4:	mvnsne	ip, r2, asr #24
   482b8:	mvnsne	ip, r3, asr #24
   482bc:	beq	483b4 <flatcc_json_printer_clear@@Base+0x674>
   482c0:	lsr	r2, r2, #24
   482c4:	rsbs	r3, r2, r3, lsr #24
   482c8:	addgt	r2, r2, r3
   482cc:	eorgt	r1, r0, r1
   482d0:	eorgt	r0, r1, r0
   482d4:	eorgt	r1, r0, r1
   482d8:	rsblt	r3, r3, #0
   482dc:	cmp	r3, #25
   482e0:	bxhi	lr
   482e4:	tst	r0, #-2147483648	; 0x80000000
   482e8:	orr	r0, r0, #8388608	; 0x800000
   482ec:	bic	r0, r0, #-16777216	; 0xff000000
   482f0:	rsbne	r0, r0, #0
   482f4:	tst	r1, #-2147483648	; 0x80000000
   482f8:	orr	r1, r1, #8388608	; 0x800000
   482fc:	bic	r1, r1, #-16777216	; 0xff000000
   48300:	rsbne	r1, r1, #0
   48304:	teq	r2, r3
   48308:	beq	4839c <flatcc_json_printer_clear@@Base+0x65c>
   4830c:	sub	r2, r2, #1
   48310:	adds	r0, r0, r1, asr r3
   48314:	rsb	r3, r3, #32
   48318:	lsl	r1, r1, r3
   4831c:	and	r3, r0, #-2147483648	; 0x80000000
   48320:	bpl	4832c <flatcc_json_printer_clear@@Base+0x5ec>
   48324:	rsbs	r1, r1, #0
   48328:	rsc	r0, r0, #0
   4832c:	cmp	r0, #8388608	; 0x800000
   48330:	bcc	48364 <flatcc_json_printer_clear@@Base+0x624>
   48334:	cmp	r0, #16777216	; 0x1000000
   48338:	bcc	48350 <flatcc_json_printer_clear@@Base+0x610>
   4833c:	lsrs	r0, r0, #1
   48340:	rrx	r1, r1
   48344:	add	r2, r2, #1
   48348:	cmp	r2, #254	; 0xfe
   4834c:	bcs	48408 <flatcc_json_printer_clear@@Base+0x6c8>
   48350:	cmp	r1, #-2147483648	; 0x80000000
   48354:	adc	r0, r0, r2, lsl #23
   48358:	biceq	r0, r0, #1
   4835c:	orr	r0, r0, r3
   48360:	bx	lr
   48364:	lsls	r1, r1, #1
   48368:	adc	r0, r0, r0
   4836c:	tst	r0, #8388608	; 0x800000
   48370:	sub	r2, r2, #1
   48374:	bne	48350 <flatcc_json_printer_clear@@Base+0x610>
   48378:	clz	ip, r0
   4837c:	sub	ip, ip, #8
   48380:	subs	r2, r2, ip
   48384:	lsl	r0, r0, ip
   48388:	addge	r0, r0, r2, lsl #23
   4838c:	rsblt	r2, r2, #0
   48390:	orrge	r0, r0, r3
   48394:	orrlt	r0, r3, r0, lsr r2
   48398:	bx	lr
   4839c:	teq	r2, #0
   483a0:	eor	r1, r1, #8388608	; 0x800000
   483a4:	eoreq	r0, r0, #8388608	; 0x800000
   483a8:	addeq	r2, r2, #1
   483ac:	subne	r3, r3, #1
   483b0:	b	4830c <flatcc_json_printer_clear@@Base+0x5cc>
   483b4:	lsl	r3, r1, #1
   483b8:	mvns	ip, r2, asr #24
   483bc:	mvnsne	ip, r3, asr #24
   483c0:	beq	48414 <flatcc_json_printer_clear@@Base+0x6d4>
   483c4:	teq	r2, r3
   483c8:	beq	483d8 <flatcc_json_printer_clear@@Base+0x698>
   483cc:	teq	r2, #0
   483d0:	moveq	r0, r1
   483d4:	bx	lr
   483d8:	teq	r0, r1
   483dc:	movne	r0, #0
   483e0:	bxne	lr
   483e4:	tst	r2, #-16777216	; 0xff000000
   483e8:	bne	483f8 <flatcc_json_printer_clear@@Base+0x6b8>
   483ec:	lsls	r0, r0, #1
   483f0:	orrcs	r0, r0, #-2147483648	; 0x80000000
   483f4:	bx	lr
   483f8:	adds	r2, r2, #33554432	; 0x2000000
   483fc:	addcc	r0, r0, #8388608	; 0x800000
   48400:	bxcc	lr
   48404:	and	r3, r0, #-2147483648	; 0x80000000
   48408:	orr	r0, r3, #2130706432	; 0x7f000000
   4840c:	orr	r0, r0, #8388608	; 0x800000
   48410:	bx	lr
   48414:	mvns	r2, r2, asr #24
   48418:	movne	r0, r1
   4841c:	mvnseq	r3, r3, asr #24
   48420:	movne	r1, r0
   48424:	lsls	r2, r0, #9
   48428:	lslseq	r3, r1, #9
   4842c:	teqeq	r0, r1
   48430:	orrne	r0, r0, #4194304	; 0x400000
   48434:	bx	lr
   48438:	mov	r3, #0
   4843c:	b	48448 <flatcc_json_printer_clear@@Base+0x708>
   48440:	ands	r3, r0, #-2147483648	; 0x80000000
   48444:	rsbmi	r0, r0, #0
   48448:	movs	ip, r0
   4844c:	bxeq	lr
   48450:	orr	r3, r3, #1258291200	; 0x4b000000
   48454:	mov	r1, r0
   48458:	mov	r0, #0
   4845c:	b	484a0 <flatcc_json_printer_clear@@Base+0x760>
   48460:	orrs	r2, r0, r1
   48464:	bxeq	lr
   48468:	mov	r3, #0
   4846c:	b	48488 <flatcc_json_printer_clear@@Base+0x748>
   48470:	orrs	r2, r0, r1
   48474:	bxeq	lr
   48478:	ands	r3, r1, #-2147483648	; 0x80000000
   4847c:	bpl	48488 <flatcc_json_printer_clear@@Base+0x748>
   48480:	rsbs	r0, r0, #0
   48484:	rsc	r1, r1, #0
   48488:	movs	ip, r1
   4848c:	moveq	ip, r0
   48490:	moveq	r1, r0
   48494:	moveq	r0, #0
   48498:	orr	r3, r3, #1526726656	; 0x5b000000
   4849c:	subeq	r3, r3, #268435456	; 0x10000000
   484a0:	sub	r3, r3, #8388608	; 0x800000
   484a4:	clz	r2, ip
   484a8:	subs	r2, r2, #8
   484ac:	sub	r3, r3, r2, lsl #23
   484b0:	blt	484d0 <flatcc_json_printer_clear@@Base+0x790>
   484b4:	add	r3, r3, r1, lsl r2
   484b8:	lsl	ip, r0, r2
   484bc:	rsb	r2, r2, #32
   484c0:	cmp	ip, #-2147483648	; 0x80000000
   484c4:	adc	r0, r3, r0, lsr r2
   484c8:	biceq	r0, r0, #1
   484cc:	bx	lr
   484d0:	add	r2, r2, #32
   484d4:	lsl	ip, r1, r2
   484d8:	rsb	r2, r2, #32
   484dc:	orrs	r0, r0, ip, lsl #1
   484e0:	adc	r0, r3, r1, lsr r2
   484e4:	biceq	r0, r0, ip, lsr #31
   484e8:	bx	lr
   484ec:	cmp	r3, #0
   484f0:	cmpeq	r2, #0
   484f4:	bne	4850c <flatcc_json_printer_clear@@Base+0x7cc>
   484f8:	cmp	r1, #0
   484fc:	cmpeq	r0, #0
   48500:	mvnne	r1, #0
   48504:	mvnne	r0, #0
   48508:	b	48528 <flatcc_json_printer_clear@@Base+0x7e8>
   4850c:	sub	sp, sp, #8
   48510:	push	{sp, lr}
   48514:	bl	48538 <flatcc_json_printer_clear@@Base+0x7f8>
   48518:	ldr	lr, [sp, #4]
   4851c:	add	sp, sp, #8
   48520:	pop	{r2, r3}
   48524:	bx	lr
   48528:	push	{r1, lr}
   4852c:	mov	r0, #8
   48530:	bl	14e2c <raise@plt>
   48534:	pop	{r1, pc}
   48538:	cmp	r1, r3
   4853c:	cmpeq	r0, r2
   48540:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   48544:	mov	r4, r0
   48548:	movcc	r0, #0
   4854c:	mov	r5, r1
   48550:	ldr	lr, [sp, #36]	; 0x24
   48554:	movcc	r1, r0
   48558:	bcc	48654 <flatcc_json_printer_clear@@Base+0x914>
   4855c:	cmp	r3, #0
   48560:	clzeq	ip, r2
   48564:	clzne	ip, r3
   48568:	addeq	ip, ip, #32
   4856c:	cmp	r5, #0
   48570:	clzeq	r1, r4
   48574:	addeq	r1, r1, #32
   48578:	clzne	r1, r5
   4857c:	sub	ip, ip, r1
   48580:	sub	sl, ip, #32
   48584:	lsl	r9, r3, ip
   48588:	rsb	fp, ip, #32
   4858c:	orr	r9, r9, r2, lsl sl
   48590:	orr	r9, r9, r2, lsr fp
   48594:	lsl	r8, r2, ip
   48598:	cmp	r5, r9
   4859c:	cmpeq	r4, r8
   485a0:	movcc	r0, #0
   485a4:	movcc	r1, r0
   485a8:	bcc	485c4 <flatcc_json_printer_clear@@Base+0x884>
   485ac:	mov	r0, #1
   485b0:	subs	r4, r4, r8
   485b4:	lsl	r1, r0, sl
   485b8:	orr	r1, r1, r0, lsr fp
   485bc:	lsl	r0, r0, ip
   485c0:	sbc	r5, r5, r9
   485c4:	cmp	ip, #0
   485c8:	beq	48654 <flatcc_json_printer_clear@@Base+0x914>
   485cc:	lsr	r6, r8, #1
   485d0:	orr	r6, r6, r9, lsl #31
   485d4:	lsr	r7, r9, #1
   485d8:	mov	r2, ip
   485dc:	b	48600 <flatcc_json_printer_clear@@Base+0x8c0>
   485e0:	subs	r3, r4, r6
   485e4:	sbc	r8, r5, r7
   485e8:	adds	r3, r3, r3
   485ec:	adc	r8, r8, r8
   485f0:	adds	r4, r3, #1
   485f4:	adc	r5, r8, #0
   485f8:	subs	r2, r2, #1
   485fc:	beq	4861c <flatcc_json_printer_clear@@Base+0x8dc>
   48600:	cmp	r5, r7
   48604:	cmpeq	r4, r6
   48608:	bcs	485e0 <flatcc_json_printer_clear@@Base+0x8a0>
   4860c:	adds	r4, r4, r4
   48610:	adc	r5, r5, r5
   48614:	subs	r2, r2, #1
   48618:	bne	48600 <flatcc_json_printer_clear@@Base+0x8c0>
   4861c:	lsr	r3, r4, ip
   48620:	orr	r3, r3, r5, lsl fp
   48624:	lsr	r2, r5, ip
   48628:	orr	r3, r3, r5, lsr sl
   4862c:	adds	r0, r0, r4
   48630:	mov	r4, r3
   48634:	lsl	r3, r2, ip
   48638:	orr	r3, r3, r4, lsl sl
   4863c:	lsl	ip, r4, ip
   48640:	orr	r3, r3, r4, lsr fp
   48644:	adc	r1, r1, r5
   48648:	subs	r0, r0, ip
   4864c:	mov	r5, r2
   48650:	sbc	r1, r1, r3
   48654:	cmp	lr, #0
   48658:	strdne	r4, [lr]
   4865c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}

00048660 <__libc_csu_init@@Base>:
   48660:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   48664:	mov	r7, r0
   48668:	ldr	r6, [pc, #72]	; 486b8 <__libc_csu_init@@Base+0x58>
   4866c:	ldr	r5, [pc, #72]	; 486bc <__libc_csu_init@@Base+0x5c>
   48670:	add	r6, pc, r6
   48674:	add	r5, pc, r5
   48678:	sub	r6, r6, r5
   4867c:	mov	r8, r1
   48680:	mov	r9, r2
   48684:	bl	14e0c <raise@plt-0x20>
   48688:	asrs	r6, r6, #2
   4868c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   48690:	mov	r4, #0
   48694:	add	r4, r4, #1
   48698:	ldr	r3, [r5], #4
   4869c:	mov	r2, r9
   486a0:	mov	r1, r8
   486a4:	mov	r0, r7
   486a8:	blx	r3
   486ac:	cmp	r6, r4
   486b0:	bne	48694 <__libc_csu_init@@Base+0x34>
   486b4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   486b8:	muleq	r1, r4, r8
   486bc:	andeq	r7, r1, ip, lsl #17

000486c0 <__libc_csu_fini@@Base>:
   486c0:	bx	lr

Disassembly of section .fini:

000486c4 <.fini>:
   486c4:	push	{r3, lr}
   486c8:	pop	{r3, pc}
