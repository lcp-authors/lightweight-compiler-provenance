
../repos/sgerbino-table-2fdd8d0/bin/table_serialize_test:     file format elf32-littlearm


Disassembly of section .init:

00011b00 <.init>:
   11b00:	push	{r3, lr}
   11b04:	bl	11c1c <_start@@Base+0x3c>
   11b08:	pop	{r3, pc}

Disassembly of section .plt:

00011b0c <strcmp@plt-0x14>:
   11b0c:	push	{lr}		; (str lr, [sp, #-4]!)
   11b10:	ldr	lr, [pc, #4]	; 11b1c <strcmp@plt-0x4>
   11b14:	add	lr, pc, lr
   11b18:	ldr	pc, [lr, #8]!
   11b1c:	andeq	r5, r1, r4, ror #9

00011b20 <strcmp@plt>:
   11b20:	add	ip, pc, #0, 12
   11b24:	add	ip, ip, #86016	; 0x15000
   11b28:	ldr	pc, [ip, #1252]!	; 0x4e4

00011b2c <printf@plt>:
   11b2c:	add	ip, pc, #0, 12
   11b30:	add	ip, ip, #86016	; 0x15000
   11b34:	ldr	pc, [ip, #1244]!	; 0x4dc

00011b38 <free@plt>:
   11b38:	add	ip, pc, #0, 12
   11b3c:	add	ip, ip, #86016	; 0x15000
   11b40:	ldr	pc, [ip, #1236]!	; 0x4d4

00011b44 <time@plt>:
   11b44:	add	ip, pc, #0, 12
   11b48:	add	ip, ip, #86016	; 0x15000
   11b4c:	ldr	pc, [ip, #1228]!	; 0x4cc

00011b50 <realloc@plt>:
   11b50:	add	ip, pc, #0, 12
   11b54:	add	ip, ip, #86016	; 0x15000
   11b58:	ldr	pc, [ip, #1220]!	; 0x4c4

00011b5c <strcpy@plt>:
   11b5c:	add	ip, pc, #0, 12
   11b60:	add	ip, ip, #86016	; 0x15000
   11b64:	ldr	pc, [ip, #1212]!	; 0x4bc

00011b68 <malloc@plt>:
   11b68:	add	ip, pc, #0, 12
   11b6c:	add	ip, ip, #86016	; 0x15000
   11b70:	ldr	pc, [ip, #1204]!	; 0x4b4

00011b74 <__libc_start_main@plt>:
   11b74:	add	ip, pc, #0, 12
   11b78:	add	ip, ip, #86016	; 0x15000
   11b7c:	ldr	pc, [ip, #1196]!	; 0x4ac

00011b80 <__gmon_start__@plt>:
   11b80:	add	ip, pc, #0, 12
   11b84:	add	ip, ip, #86016	; 0x15000
   11b88:	ldr	pc, [ip, #1188]!	; 0x4a4

00011b8c <strlen@plt>:
   11b8c:	add	ip, pc, #0, 12
   11b90:	add	ip, ip, #86016	; 0x15000
   11b94:	ldr	pc, [ip, #1180]!	; 0x49c

00011b98 <srand@plt>:
   11b98:	add	ip, pc, #0, 12
   11b9c:	add	ip, ip, #86016	; 0x15000
   11ba0:	ldr	pc, [ip, #1172]!	; 0x494

00011ba4 <snprintf@plt>:
   11ba4:	add	ip, pc, #0, 12
   11ba8:	add	ip, ip, #86016	; 0x15000
   11bac:	ldr	pc, [ip, #1164]!	; 0x48c

00011bb0 <__isoc99_sscanf@plt>:
   11bb0:	add	ip, pc, #0, 12
   11bb4:	add	ip, ip, #86016	; 0x15000
   11bb8:	ldr	pc, [ip, #1156]!	; 0x484

00011bbc <strncpy@plt>:
   11bbc:	add	ip, pc, #0, 12
   11bc0:	add	ip, ip, #86016	; 0x15000
   11bc4:	ldr	pc, [ip, #1148]!	; 0x47c

00011bc8 <rand@plt>:
   11bc8:	add	ip, pc, #0, 12
   11bcc:	add	ip, ip, #86016	; 0x15000
   11bd0:	ldr	pc, [ip, #1140]!	; 0x474

00011bd4 <abort@plt>:
   11bd4:	add	ip, pc, #0, 12
   11bd8:	add	ip, ip, #86016	; 0x15000
   11bdc:	ldr	pc, [ip, #1132]!	; 0x46c

Disassembly of section .text:

00011be0 <_start@@Base>:
   11be0:	mov	fp, #0
   11be4:	mov	lr, #0
   11be8:	pop	{r1}		; (ldr r1, [sp], #4)
   11bec:	mov	r2, sp
   11bf0:	push	{r2}		; (str r2, [sp, #-4]!)
   11bf4:	push	{r0}		; (str r0, [sp, #-4]!)
   11bf8:	ldr	ip, [pc, #16]	; 11c10 <_start@@Base+0x30>
   11bfc:	push	{ip}		; (str ip, [sp, #-4]!)
   11c00:	ldr	r0, [pc, #12]	; 11c14 <_start@@Base+0x34>
   11c04:	ldr	r3, [pc, #12]	; 11c18 <_start@@Base+0x38>
   11c08:	bl	11b74 <__libc_start_main@plt>
   11c0c:	bl	11bd4 <abort@plt>
   11c10:	andeq	r6, r1, r4, lsl #2
   11c14:	ldrdeq	r1, [r1], -r0
   11c18:	andeq	r6, r1, r4, lsr #1
   11c1c:	ldr	r3, [pc, #20]	; 11c38 <_start@@Base+0x58>
   11c20:	ldr	r2, [pc, #20]	; 11c3c <_start@@Base+0x5c>
   11c24:	add	r3, pc, r3
   11c28:	ldr	r2, [r3, r2]
   11c2c:	cmp	r2, #0
   11c30:	bxeq	lr
   11c34:	b	11b80 <__gmon_start__@plt>
   11c38:	ldrdeq	r5, [r1], -r4
   11c3c:	andeq	r0, r0, ip, asr #32
   11c40:	ldr	r0, [pc, #24]	; 11c60 <_start@@Base+0x80>
   11c44:	ldr	r3, [pc, #24]	; 11c64 <_start@@Base+0x84>
   11c48:	cmp	r3, r0
   11c4c:	bxeq	lr
   11c50:	ldr	r3, [pc, #16]	; 11c68 <_start@@Base+0x88>
   11c54:	cmp	r3, #0
   11c58:	bxeq	lr
   11c5c:	bx	r3
   11c60:	andeq	r7, r2, r8, asr r0
   11c64:	andeq	r7, r2, r8, asr r0
   11c68:	andeq	r0, r0, r0
   11c6c:	ldr	r0, [pc, #36]	; 11c98 <_start@@Base+0xb8>
   11c70:	ldr	r1, [pc, #36]	; 11c9c <_start@@Base+0xbc>
   11c74:	sub	r1, r1, r0
   11c78:	asr	r1, r1, #2
   11c7c:	add	r1, r1, r1, lsr #31
   11c80:	asrs	r1, r1, #1
   11c84:	bxeq	lr
   11c88:	ldr	r3, [pc, #16]	; 11ca0 <_start@@Base+0xc0>
   11c8c:	cmp	r3, #0
   11c90:	bxeq	lr
   11c94:	bx	r3
   11c98:	andeq	r7, r2, r8, asr r0
   11c9c:	andeq	r7, r2, r8, asr r0
   11ca0:	andeq	r0, r0, r0
   11ca4:	push	{r4, lr}
   11ca8:	ldr	r4, [pc, #24]	; 11cc8 <_start@@Base+0xe8>
   11cac:	ldrb	r3, [r4]
   11cb0:	cmp	r3, #0
   11cb4:	popne	{r4, pc}
   11cb8:	bl	11c40 <_start@@Base+0x60>
   11cbc:	mov	r3, #1
   11cc0:	strb	r3, [r4]
   11cc4:	pop	{r4, pc}
   11cc8:	andeq	r7, r2, r8, asr r0
   11ccc:	b	11c6c <_start@@Base+0x8c>

00011cd0 <main@@Base>:
   11cd0:	strd	r4, [sp, #-36]!	; 0xffffffdc
   11cd4:	strd	r6, [sp, #8]
   11cd8:	strd	r8, [sp, #16]
   11cdc:	strd	sl, [sp, #24]
   11ce0:	str	lr, [sp, #32]
   11ce4:	vpush	{d8}
   11ce8:	sub	sp, sp, #99328	; 0x18400
   11cec:	sub	sp, sp, #1004	; 0x3ec
   11cf0:	add	r0, sp, #99328	; 0x18400
   11cf4:	add	r0, r0, #940	; 0x3ac
   11cf8:	bl	11b44 <time@plt>
   11cfc:	bl	11b98 <srand@plt>
   11d00:	bl	11bc8 <rand@plt>
   11d04:	mov	r4, r0
   11d08:	add	r0, sp, #99328	; 0x18400
   11d0c:	add	r0, r0, #944	; 0x3b0
   11d10:	bl	12504 <table_init@@Base>
   11d14:	mov	r2, #0
   11d18:	movw	r1, #24852	; 0x6114
   11d1c:	movt	r1, #1
   11d20:	add	r0, sp, #99328	; 0x18400
   11d24:	add	r0, r0, #944	; 0x3b0
   11d28:	bl	12fd8 <table_add_column@@Base>
   11d2c:	mov	r8, r0
   11d30:	mov	r2, #21
   11d34:	movw	r1, #24856	; 0x6118
   11d38:	movt	r1, #1
   11d3c:	add	r0, sp, #99328	; 0x18400
   11d40:	add	r0, r0, #944	; 0x3b0
   11d44:	bl	12fd8 <table_add_column@@Base>
   11d48:	mov	r7, r0
   11d4c:	movw	r3, #34079	; 0x851f
   11d50:	movt	r3, #20971	; 0x51eb
   11d54:	smull	r2, r3, r3, r4
   11d58:	asr	r5, r4, #31
   11d5c:	rsb	r5, r5, r3, asr #5
   11d60:	mov	r3, #100	; 0x64
   11d64:	mls	r5, r3, r5, r4
   11d68:	add	r5, r5, r3
   11d6c:	mov	r4, #0
   11d70:	movw	r6, #24920	; 0x6158
   11d74:	movt	r6, #1
   11d78:	mov	r9, #255	; 0xff
   11d7c:	mov	r3, r4
   11d80:	mov	r2, r6
   11d84:	mov	r1, r9
   11d88:	add	r0, sp, #12
   11d8c:	bl	11ba4 <snprintf@plt>
   11d90:	add	r0, sp, #99328	; 0x18400
   11d94:	add	r0, r0, #944	; 0x3b0
   11d98:	bl	13f50 <table_add_row@@Base>
   11d9c:	mov	r3, r4
   11da0:	mov	r2, r8
   11da4:	mov	r1, r4
   11da8:	add	r0, sp, #99328	; 0x18400
   11dac:	add	r0, r0, #944	; 0x3b0
   11db0:	bl	148f4 <table_set_int@@Base>
   11db4:	add	r3, sp, #12
   11db8:	mov	r2, r7
   11dbc:	mov	r1, r4
   11dc0:	add	r0, sp, #99328	; 0x18400
   11dc4:	add	r0, r0, #944	; 0x3b0
   11dc8:	bl	14b90 <table_set_string@@Base>
   11dcc:	add	r4, r4, #1
   11dd0:	cmp	r5, r4
   11dd4:	bne	11d7c <main@@Base+0xac>
   11dd8:	movw	r4, #34464	; 0x86a0
   11ddc:	movt	r4, #1
   11de0:	mov	r2, r4
   11de4:	add	r1, sp, #268	; 0x10c
   11de8:	add	r0, sp, #99328	; 0x18400
   11dec:	add	r0, r0, #944	; 0x3b0
   11df0:	bl	14c10 <table_serialize@@Base>
   11df4:	mov	r1, r4
   11df8:	add	r0, sp, #268	; 0x10c
   11dfc:	bl	15090 <table_deserialize@@Base>
   11e00:	mov	r7, r0
   11e04:	add	r0, sp, #99328	; 0x18400
   11e08:	add	r0, r0, #944	; 0x3b0
   11e0c:	bl	13f48 <table_get_row_length@@Base>
   11e10:	mov	r4, r0
   11e14:	mov	r0, r7
   11e18:	bl	13f48 <table_get_row_length@@Base>
   11e1c:	mov	sl, r0
   11e20:	cmp	r4, r0
   11e24:	bne	11e74 <main@@Base+0x1a4>
   11e28:	add	r0, sp, #99328	; 0x18400
   11e2c:	add	r0, r0, #944	; 0x3b0
   11e30:	bl	12f44 <table_get_column_length@@Base>
   11e34:	mov	r4, r0
   11e38:	mov	r0, r7
   11e3c:	bl	12f44 <table_get_column_length@@Base>
   11e40:	mov	r6, r0
   11e44:	cmp	r4, r0
   11e48:	bne	11eac <main@@Base+0x1dc>
   11e4c:	cmp	sl, #0
   11e50:	movle	r3, #0
   11e54:	strle	r3, [sp, #4]
   11e58:	ble	11ec8 <main@@Base+0x1f8>
   11e5c:	mov	r3, #0
   11e60:	str	r3, [sp, #4]
   11e64:	mov	r5, r3
   11e68:	movw	fp, #24988	; 0x619c
   11e6c:	movt	fp, #1
   11e70:	b	124e8 <main@@Base+0x818>
   11e74:	mov	r2, r0
   11e78:	mov	r1, r4
   11e7c:	movw	r0, #24864	; 0x6120
   11e80:	movt	r0, #1
   11e84:	bl	11b2c <printf@plt>
   11e88:	add	r0, sp, #99328	; 0x18400
   11e8c:	add	r0, r0, #944	; 0x3b0
   11e90:	bl	12f44 <table_get_column_length@@Base>
   11e94:	mov	r4, r0
   11e98:	mov	r0, r7
   11e9c:	bl	12f44 <table_get_column_length@@Base>
   11ea0:	mov	r6, r0
   11ea4:	cmp	r4, r0
   11ea8:	beq	124f8 <main@@Base+0x828>
   11eac:	mov	r2, r6
   11eb0:	mov	r1, r4
   11eb4:	movw	r0, #24924	; 0x615c
   11eb8:	movt	r0, #1
   11ebc:	bl	11b2c <printf@plt>
   11ec0:	mvn	r3, #0
   11ec4:	str	r3, [sp, #4]
   11ec8:	add	r0, sp, #99328	; 0x18400
   11ecc:	add	r0, r0, #944	; 0x3b0
   11ed0:	bl	12574 <table_destroy@@Base>
   11ed4:	mov	r0, r7
   11ed8:	bl	12654 <table_delete@@Base>
   11edc:	ldr	r0, [sp, #4]
   11ee0:	add	sp, sp, #99328	; 0x18400
   11ee4:	add	sp, sp, #1004	; 0x3ec
   11ee8:	vpop	{d8}
   11eec:	ldrd	r4, [sp]
   11ef0:	ldrd	r6, [sp, #8]
   11ef4:	ldrd	r8, [sp, #16]
   11ef8:	ldrd	sl, [sp, #24]
   11efc:	add	sp, sp, #32
   11f00:	pop	{pc}		; (ldr pc, [sp], #4)
   11f04:	mov	r2, r4
   11f08:	mov	r1, r5
   11f0c:	add	r0, sp, #99328	; 0x18400
   11f10:	add	r0, r0, #944	; 0x3b0
   11f14:	bl	13c10 <table_get_bool@@Base>
   11f18:	mov	r8, r0
   11f1c:	mov	r2, r4
   11f20:	mov	r1, r5
   11f24:	mov	r0, r7
   11f28:	bl	13c10 <table_get_bool@@Base>
   11f2c:	subs	r0, r8, r0
   11f30:	movne	r0, #1
   11f34:	cmp	r0, #0
   11f38:	bne	124c4 <main@@Base+0x7f4>
   11f3c:	add	r4, r4, #1
   11f40:	cmp	r4, r6
   11f44:	beq	124dc <main@@Base+0x80c>
   11f48:	mov	r1, r4
   11f4c:	add	r0, sp, #99328	; 0x18400
   11f50:	add	r0, r0, #944	; 0x3b0
   11f54:	bl	12fc4 <table_get_column_data_type@@Base>
   11f58:	cmp	r0, #23
   11f5c:	ldrls	pc, [pc, r0, lsl #2]
   11f60:	b	11f3c <main@@Base+0x26c>
   11f64:	andeq	r1, r1, r4, asr #31
   11f68:	strdeq	r1, [r1], -r8
   11f6c:	andeq	r2, r1, ip, lsr #32
   11f70:	andeq	r2, r1, r0, rrx
   11f74:	muleq	r1, r4, r0
   11f78:	andeq	r2, r1, r8, asr #1
   11f7c:	strdeq	r2, [r1], -ip
   11f80:	andeq	r2, r1, r0, lsr r1
   11f84:	andeq	r2, r1, r4, ror #2
   11f88:	andeq	r2, r1, r4, lsr #3
   11f8c:	andeq	r2, r1, r4, ror #3
   11f90:	andeq	r2, r1, r8, lsl r2
   11f94:	andeq	r2, r1, ip, asr #4
   11f98:	andeq	r2, r1, r0, lsl #5
   11f9c:			; <UNDEFINED> instruction: 0x000122b4
   11fa0:	strdeq	r2, [r1], -r4
   11fa4:	andeq	r2, r1, r4, lsr r3
   11fa8:	andeq	r2, r1, r0, ror r3
   11fac:	andeq	r2, r1, ip, lsr #7
   11fb0:	andeq	r2, r1, r8, lsr #8
   11fb4:	andeq	r2, r1, ip, asr r4
   11fb8:	andeq	r2, r1, r8, ror #7
   11fbc:	andeq	r1, r1, r4, lsl #30
   11fc0:	muleq	r1, r0, r4
   11fc4:	mov	r2, r4
   11fc8:	mov	r1, r5
   11fcc:	add	r0, sp, #99328	; 0x18400
   11fd0:	add	r0, r0, #944	; 0x3b0
   11fd4:	bl	13c2c <table_get_int@@Base>
   11fd8:	mov	r8, r0
   11fdc:	mov	r2, r4
   11fe0:	mov	r1, r5
   11fe4:	mov	r0, r7
   11fe8:	bl	13c2c <table_get_int@@Base>
   11fec:	subs	r0, r8, r0
   11ff0:	movne	r0, #1
   11ff4:	b	11f34 <main@@Base+0x264>
   11ff8:	mov	r2, r4
   11ffc:	mov	r1, r5
   12000:	add	r0, sp, #99328	; 0x18400
   12004:	add	r0, r0, #944	; 0x3b0
   12008:	bl	13c48 <table_get_uint@@Base>
   1200c:	mov	r8, r0
   12010:	mov	r2, r4
   12014:	mov	r1, r5
   12018:	mov	r0, r7
   1201c:	bl	13c48 <table_get_uint@@Base>
   12020:	subs	r0, r8, r0
   12024:	movne	r0, #1
   12028:	b	11f34 <main@@Base+0x264>
   1202c:	mov	r2, r4
   12030:	mov	r1, r5
   12034:	add	r0, sp, #99328	; 0x18400
   12038:	add	r0, r0, #944	; 0x3b0
   1203c:	bl	13c64 <table_get_int8@@Base>
   12040:	mov	r8, r0
   12044:	mov	r2, r4
   12048:	mov	r1, r5
   1204c:	mov	r0, r7
   12050:	bl	13c64 <table_get_int8@@Base>
   12054:	subs	r0, r8, r0
   12058:	movne	r0, #1
   1205c:	b	11f34 <main@@Base+0x264>
   12060:	mov	r2, r4
   12064:	mov	r1, r5
   12068:	add	r0, sp, #99328	; 0x18400
   1206c:	add	r0, r0, #944	; 0x3b0
   12070:	bl	13c80 <table_get_uint8@@Base>
   12074:	mov	r8, r0
   12078:	mov	r2, r4
   1207c:	mov	r1, r5
   12080:	mov	r0, r7
   12084:	bl	13c80 <table_get_uint8@@Base>
   12088:	subs	r0, r8, r0
   1208c:	movne	r0, #1
   12090:	b	11f34 <main@@Base+0x264>
   12094:	mov	r2, r4
   12098:	mov	r1, r5
   1209c:	add	r0, sp, #99328	; 0x18400
   120a0:	add	r0, r0, #944	; 0x3b0
   120a4:	bl	13c9c <table_get_int16@@Base>
   120a8:	mov	r8, r0
   120ac:	mov	r2, r4
   120b0:	mov	r1, r5
   120b4:	mov	r0, r7
   120b8:	bl	13c9c <table_get_int16@@Base>
   120bc:	subs	r0, r8, r0
   120c0:	movne	r0, #1
   120c4:	b	11f34 <main@@Base+0x264>
   120c8:	mov	r2, r4
   120cc:	mov	r1, r5
   120d0:	add	r0, sp, #99328	; 0x18400
   120d4:	add	r0, r0, #944	; 0x3b0
   120d8:	bl	13cb8 <table_get_uint16@@Base>
   120dc:	mov	r8, r0
   120e0:	mov	r2, r4
   120e4:	mov	r1, r5
   120e8:	mov	r0, r7
   120ec:	bl	13cb8 <table_get_uint16@@Base>
   120f0:	subs	r0, r8, r0
   120f4:	movne	r0, #1
   120f8:	b	11f34 <main@@Base+0x264>
   120fc:	mov	r2, r4
   12100:	mov	r1, r5
   12104:	add	r0, sp, #99328	; 0x18400
   12108:	add	r0, r0, #944	; 0x3b0
   1210c:	bl	13cd4 <table_get_int32@@Base>
   12110:	mov	r8, r0
   12114:	mov	r2, r4
   12118:	mov	r1, r5
   1211c:	mov	r0, r7
   12120:	bl	13cd4 <table_get_int32@@Base>
   12124:	subs	r0, r8, r0
   12128:	movne	r0, #1
   1212c:	b	11f34 <main@@Base+0x264>
   12130:	mov	r2, r4
   12134:	mov	r1, r5
   12138:	add	r0, sp, #99328	; 0x18400
   1213c:	add	r0, r0, #944	; 0x3b0
   12140:	bl	13cf0 <table_get_uint32@@Base>
   12144:	mov	r8, r0
   12148:	mov	r2, r4
   1214c:	mov	r1, r5
   12150:	mov	r0, r7
   12154:	bl	13cf0 <table_get_uint32@@Base>
   12158:	subs	r0, r8, r0
   1215c:	movne	r0, #1
   12160:	b	11f34 <main@@Base+0x264>
   12164:	mov	r2, r4
   12168:	mov	r1, r5
   1216c:	add	r0, sp, #99328	; 0x18400
   12170:	add	r0, r0, #944	; 0x3b0
   12174:	bl	13d0c <table_get_int64@@Base>
   12178:	mov	r8, r0
   1217c:	mov	r9, r1
   12180:	mov	r2, r4
   12184:	mov	r1, r5
   12188:	mov	r0, r7
   1218c:	bl	13d0c <table_get_int64@@Base>
   12190:	cmp	r9, r1
   12194:	cmpeq	r8, r0
   12198:	movne	r0, #1
   1219c:	moveq	r0, #0
   121a0:	b	11f34 <main@@Base+0x264>
   121a4:	mov	r2, r4
   121a8:	mov	r1, r5
   121ac:	add	r0, sp, #99328	; 0x18400
   121b0:	add	r0, r0, #944	; 0x3b0
   121b4:	bl	13d28 <table_get_uint64@@Base>
   121b8:	mov	r8, r0
   121bc:	mov	r9, r1
   121c0:	mov	r2, r4
   121c4:	mov	r1, r5
   121c8:	mov	r0, r7
   121cc:	bl	13d28 <table_get_uint64@@Base>
   121d0:	cmp	r9, r1
   121d4:	cmpeq	r8, r0
   121d8:	movne	r0, #1
   121dc:	moveq	r0, #0
   121e0:	b	11f34 <main@@Base+0x264>
   121e4:	mov	r2, r4
   121e8:	mov	r1, r5
   121ec:	add	r0, sp, #99328	; 0x18400
   121f0:	add	r0, r0, #944	; 0x3b0
   121f4:	bl	13d44 <table_get_short@@Base>
   121f8:	mov	r8, r0
   121fc:	mov	r2, r4
   12200:	mov	r1, r5
   12204:	mov	r0, r7
   12208:	bl	13d44 <table_get_short@@Base>
   1220c:	subs	r0, r8, r0
   12210:	movne	r0, #1
   12214:	b	11f34 <main@@Base+0x264>
   12218:	mov	r2, r4
   1221c:	mov	r1, r5
   12220:	add	r0, sp, #99328	; 0x18400
   12224:	add	r0, r0, #944	; 0x3b0
   12228:	bl	13d60 <table_get_ushort@@Base>
   1222c:	mov	r8, r0
   12230:	mov	r2, r4
   12234:	mov	r1, r5
   12238:	mov	r0, r7
   1223c:	bl	13d60 <table_get_ushort@@Base>
   12240:	subs	r0, r8, r0
   12244:	movne	r0, #1
   12248:	b	11f34 <main@@Base+0x264>
   1224c:	mov	r2, r4
   12250:	mov	r1, r5
   12254:	add	r0, sp, #99328	; 0x18400
   12258:	add	r0, r0, #944	; 0x3b0
   1225c:	bl	13d7c <table_get_long@@Base>
   12260:	mov	r8, r0
   12264:	mov	r2, r4
   12268:	mov	r1, r5
   1226c:	mov	r0, r7
   12270:	bl	13d7c <table_get_long@@Base>
   12274:	subs	r0, r8, r0
   12278:	movne	r0, #1
   1227c:	b	11f34 <main@@Base+0x264>
   12280:	mov	r2, r4
   12284:	mov	r1, r5
   12288:	add	r0, sp, #99328	; 0x18400
   1228c:	add	r0, r0, #944	; 0x3b0
   12290:	bl	13d98 <table_get_ulong@@Base>
   12294:	mov	r8, r0
   12298:	mov	r2, r4
   1229c:	mov	r1, r5
   122a0:	mov	r0, r7
   122a4:	bl	13d98 <table_get_ulong@@Base>
   122a8:	subs	r0, r8, r0
   122ac:	movne	r0, #1
   122b0:	b	11f34 <main@@Base+0x264>
   122b4:	mov	r2, r4
   122b8:	mov	r1, r5
   122bc:	add	r0, sp, #99328	; 0x18400
   122c0:	add	r0, r0, #944	; 0x3b0
   122c4:	bl	13db4 <table_get_llong@@Base>
   122c8:	mov	r8, r0
   122cc:	mov	r9, r1
   122d0:	mov	r2, r4
   122d4:	mov	r1, r5
   122d8:	mov	r0, r7
   122dc:	bl	13db4 <table_get_llong@@Base>
   122e0:	cmp	r9, r1
   122e4:	cmpeq	r8, r0
   122e8:	movne	r0, #1
   122ec:	moveq	r0, #0
   122f0:	b	11f34 <main@@Base+0x264>
   122f4:	mov	r2, r4
   122f8:	mov	r1, r5
   122fc:	add	r0, sp, #99328	; 0x18400
   12300:	add	r0, r0, #944	; 0x3b0
   12304:	bl	13dd0 <table_get_ullong@@Base>
   12308:	mov	r8, r0
   1230c:	mov	r9, r1
   12310:	mov	r2, r4
   12314:	mov	r1, r5
   12318:	mov	r0, r7
   1231c:	bl	13dd0 <table_get_ullong@@Base>
   12320:	cmp	r9, r1
   12324:	cmpeq	r8, r0
   12328:	movne	r0, #1
   1232c:	moveq	r0, #0
   12330:	b	11f34 <main@@Base+0x264>
   12334:	mov	r2, r4
   12338:	mov	r1, r5
   1233c:	add	r0, sp, #99328	; 0x18400
   12340:	add	r0, r0, #944	; 0x3b0
   12344:	bl	13dec <table_get_float@@Base>
   12348:	vmov.f32	s16, s0
   1234c:	mov	r2, r4
   12350:	mov	r1, r5
   12354:	mov	r0, r7
   12358:	bl	13dec <table_get_float@@Base>
   1235c:	vcmp.f32	s16, s0
   12360:	vmrs	APSR_nzcv, fpscr
   12364:	movne	r0, #1
   12368:	moveq	r0, #0
   1236c:	b	11f34 <main@@Base+0x264>
   12370:	mov	r2, r4
   12374:	mov	r1, r5
   12378:	add	r0, sp, #99328	; 0x18400
   1237c:	add	r0, r0, #944	; 0x3b0
   12380:	bl	13e08 <table_get_double@@Base>
   12384:	vmov.f64	d8, d0
   12388:	mov	r2, r4
   1238c:	mov	r1, r5
   12390:	mov	r0, r7
   12394:	bl	13e08 <table_get_double@@Base>
   12398:	vcmp.f64	d8, d0
   1239c:	vmrs	APSR_nzcv, fpscr
   123a0:	movne	r0, #1
   123a4:	moveq	r0, #0
   123a8:	b	11f34 <main@@Base+0x264>
   123ac:	mov	r2, r4
   123b0:	mov	r1, r5
   123b4:	add	r0, sp, #99328	; 0x18400
   123b8:	add	r0, r0, #944	; 0x3b0
   123bc:	bl	13e24 <table_get_ldouble@@Base>
   123c0:	vmov.f64	d8, d0
   123c4:	mov	r2, r4
   123c8:	mov	r1, r5
   123cc:	mov	r0, r7
   123d0:	bl	13e24 <table_get_ldouble@@Base>
   123d4:	vcmp.f64	d8, d0
   123d8:	vmrs	APSR_nzcv, fpscr
   123dc:	movne	r0, #1
   123e0:	moveq	r0, #0
   123e4:	b	11f34 <main@@Base+0x264>
   123e8:	mov	r2, r4
   123ec:	mov	r1, r5
   123f0:	add	r0, sp, #99328	; 0x18400
   123f4:	add	r0, r0, #944	; 0x3b0
   123f8:	bl	13e78 <table_get_string@@Base>
   123fc:	mov	r8, r0
   12400:	mov	r2, r4
   12404:	mov	r1, r5
   12408:	mov	r0, r7
   1240c:	bl	13e78 <table_get_string@@Base>
   12410:	mov	r1, r0
   12414:	mov	r0, r8
   12418:	bl	11b20 <strcmp@plt>
   1241c:	adds	r0, r0, #0
   12420:	movne	r0, #1
   12424:	b	11f34 <main@@Base+0x264>
   12428:	mov	r2, r4
   1242c:	mov	r1, r5
   12430:	add	r0, sp, #99328	; 0x18400
   12434:	add	r0, r0, #944	; 0x3b0
   12438:	bl	13e40 <table_get_char@@Base>
   1243c:	mov	r8, r0
   12440:	mov	r2, r4
   12444:	mov	r1, r5
   12448:	mov	r0, r7
   1244c:	bl	13e40 <table_get_char@@Base>
   12450:	subs	r0, r8, r0
   12454:	movne	r0, #1
   12458:	b	11f34 <main@@Base+0x264>
   1245c:	mov	r2, r4
   12460:	mov	r1, r5
   12464:	add	r0, sp, #99328	; 0x18400
   12468:	add	r0, r0, #944	; 0x3b0
   1246c:	bl	13e5c <table_get_uchar@@Base>
   12470:	mov	r8, r0
   12474:	mov	r2, r4
   12478:	mov	r1, r5
   1247c:	mov	r0, r7
   12480:	bl	13e5c <table_get_uchar@@Base>
   12484:	subs	r0, r8, r0
   12488:	movne	r0, #1
   1248c:	b	11f34 <main@@Base+0x264>
   12490:	mov	r2, r4
   12494:	mov	r1, r5
   12498:	add	r0, sp, #99328	; 0x18400
   1249c:	add	r0, r0, #944	; 0x3b0
   124a0:	bl	13e90 <table_get_ptr@@Base>
   124a4:	mov	r8, r0
   124a8:	mov	r2, r4
   124ac:	mov	r1, r5
   124b0:	mov	r0, r7
   124b4:	bl	13e90 <table_get_ptr@@Base>
   124b8:	subs	r0, r8, r0
   124bc:	movne	r0, #1
   124c0:	b	11f34 <main@@Base+0x264>
   124c4:	mov	r2, r4
   124c8:	mov	r1, r5
   124cc:	mov	r0, fp
   124d0:	bl	11b2c <printf@plt>
   124d4:	mvn	r3, #0
   124d8:	str	r3, [sp, #4]
   124dc:	add	r5, r5, #1
   124e0:	cmp	sl, r5
   124e4:	beq	11ec8 <main@@Base+0x1f8>
   124e8:	cmp	r6, #0
   124ec:	movgt	r4, #0
   124f0:	bgt	11f48 <main@@Base+0x278>
   124f4:	b	124dc <main@@Base+0x80c>
   124f8:	mvn	r3, #0
   124fc:	str	r3, [sp, #4]
   12500:	b	11ec8 <main@@Base+0x1f8>

00012504 <table_init@@Base>:
   12504:	mov	r3, #0
   12508:	str	r3, [r0]
   1250c:	str	r3, [r0, #4]
   12510:	str	r3, [r0, #12]
   12514:	mov	r2, #10
   12518:	str	r2, [r0, #8]
   1251c:	str	r3, [r0, #16]
   12520:	str	r3, [r0, #20]
   12524:	str	r3, [r0, #28]
   12528:	mov	r1, #20
   1252c:	str	r1, [r0, #24]
   12530:	str	r3, [r0, #36]	; 0x24
   12534:	str	r3, [r0, #40]	; 0x28
   12538:	str	r3, [r0, #44]	; 0x2c
   1253c:	str	r3, [r0, #32]
   12540:	str	r3, [r0, #52]	; 0x34
   12544:	str	r2, [r0, #48]	; 0x30
   12548:	bx	lr

0001254c <table_new@@Base>:
   1254c:	str	r4, [sp, #-8]!
   12550:	str	lr, [sp, #4]
   12554:	mov	r0, #56	; 0x38
   12558:	bl	11b68 <malloc@plt>
   1255c:	mov	r4, r0
   12560:	bl	12504 <table_init@@Base>
   12564:	mov	r0, r4
   12568:	ldr	r4, [sp]
   1256c:	add	sp, sp, #4
   12570:	pop	{pc}		; (ldr pc, [sp], #4)

00012574 <table_destroy@@Base>:
   12574:	strd	r4, [sp, #-16]!
   12578:	str	r6, [sp, #8]
   1257c:	str	lr, [sp, #12]
   12580:	subs	r4, r0, #0
   12584:	beq	12644 <table_destroy@@Base+0xd0>
   12588:	mov	r3, #64	; 0x40
   1258c:	mvn	r2, #0
   12590:	mov	r1, r2
   12594:	mov	r0, r4
   12598:	bl	12e10 <table_notify@@Base>
   1259c:	mov	r0, r4
   125a0:	bl	13f48 <table_get_row_length@@Base>
   125a4:	subs	r6, r0, #0
   125a8:	ble	125c8 <table_destroy@@Base+0x54>
   125ac:	mov	r5, #0
   125b0:	mov	r1, r5
   125b4:	mov	r0, r4
   125b8:	bl	13edc <table_row_destroy@@Base>
   125bc:	add	r5, r5, #1
   125c0:	cmp	r6, r5
   125c4:	bne	125b0 <table_destroy@@Base+0x3c>
   125c8:	ldr	r0, [r4, #16]
   125cc:	cmp	r0, #0
   125d0:	beq	125d8 <table_destroy@@Base+0x64>
   125d4:	bl	11b38 <free@plt>
   125d8:	mov	r0, r4
   125dc:	bl	12f44 <table_get_column_length@@Base>
   125e0:	subs	r6, r0, #0
   125e4:	ble	12604 <table_destroy@@Base+0x90>
   125e8:	mov	r5, #0
   125ec:	mov	r1, r5
   125f0:	mov	r0, r4
   125f4:	bl	12f18 <table_column_destroy@@Base>
   125f8:	add	r5, r5, #1
   125fc:	cmp	r6, r5
   12600:	bne	125ec <table_destroy@@Base+0x78>
   12604:	ldr	r0, [r4]
   12608:	cmp	r0, #0
   1260c:	beq	12614 <table_destroy@@Base+0xa0>
   12610:	bl	11b38 <free@plt>
   12614:	ldr	r0, [r4, #36]	; 0x24
   12618:	cmp	r0, #0
   1261c:	beq	12624 <table_destroy@@Base+0xb0>
   12620:	bl	11b38 <free@plt>
   12624:	ldr	r0, [r4, #40]	; 0x28
   12628:	cmp	r0, #0
   1262c:	beq	12634 <table_destroy@@Base+0xc0>
   12630:	bl	11b38 <free@plt>
   12634:	ldr	r0, [r4, #44]	; 0x2c
   12638:	cmp	r0, #0
   1263c:	beq	12644 <table_destroy@@Base+0xd0>
   12640:	bl	11b38 <free@plt>
   12644:	ldrd	r4, [sp]
   12648:	ldr	r6, [sp, #8]
   1264c:	add	sp, sp, #12
   12650:	pop	{pc}		; (ldr pc, [sp], #4)

00012654 <table_delete@@Base>:
   12654:	str	r4, [sp, #-8]!
   12658:	str	lr, [sp, #4]
   1265c:	mov	r4, r0
   12660:	bl	12574 <table_destroy@@Base>
   12664:	mov	r0, r4
   12668:	bl	11b38 <free@plt>
   1266c:	ldr	r4, [sp]
   12670:	add	sp, sp, #4
   12674:	pop	{pc}		; (ldr pc, [sp], #4)

00012678 <table_dupe@@Base>:
   12678:	strd	r4, [sp, #-28]!	; 0xffffffe4
   1267c:	strd	r6, [sp, #8]
   12680:	strd	r8, [sp, #16]
   12684:	str	lr, [sp, #24]
   12688:	sub	sp, sp, #20
   1268c:	mov	r6, r0
   12690:	bl	13f48 <table_get_row_length@@Base>
   12694:	mov	r9, r0
   12698:	mov	r0, r6
   1269c:	bl	12f44 <table_get_column_length@@Base>
   126a0:	mov	r7, r0
   126a4:	bl	1254c <table_new@@Base>
   126a8:	mov	r8, r0
   126ac:	cmp	r7, #0
   126b0:	ble	126f0 <table_dupe@@Base+0x78>
   126b4:	mov	r4, #0
   126b8:	mov	r1, r4
   126bc:	mov	r0, r6
   126c0:	bl	132b0 <table_get_column_name@@Base>
   126c4:	mov	r5, r0
   126c8:	mov	r1, r4
   126cc:	mov	r0, r6
   126d0:	bl	12fc4 <table_get_column_data_type@@Base>
   126d4:	mov	r2, r0
   126d8:	mov	r1, r5
   126dc:	mov	r0, r8
   126e0:	bl	12fd8 <table_add_column@@Base>
   126e4:	add	r4, r4, #1
   126e8:	cmp	r7, r4
   126ec:	bne	126b8 <table_dupe@@Base+0x40>
   126f0:	cmp	r9, #0
   126f4:	ble	12b5c <table_dupe@@Base+0x4e4>
   126f8:	mov	r5, #0
   126fc:	b	12b44 <table_dupe@@Base+0x4cc>
   12700:	mov	r2, r4
   12704:	mov	r1, r5
   12708:	mov	r0, r6
   1270c:	bl	13c2c <table_get_int@@Base>
   12710:	mov	r3, r0
   12714:	mov	r2, r4
   12718:	mov	r1, r5
   1271c:	mov	r0, r8
   12720:	bl	148f4 <table_set_int@@Base>
   12724:	add	r4, r4, #1
   12728:	cmp	r7, r4
   1272c:	beq	12b38 <table_dupe@@Base+0x4c0>
   12730:	mov	r1, r4
   12734:	mov	r0, r6
   12738:	bl	12fc4 <table_get_column_data_type@@Base>
   1273c:	cmp	r0, #23
   12740:	ldrls	pc, [pc, r0, lsl #2]
   12744:	b	12724 <table_dupe@@Base+0xac>
   12748:	andeq	r2, r1, r0, lsl #14
   1274c:	andeq	r2, r1, r8, lsr #15
   12750:	ldrdeq	r2, [r1], -r0
   12754:	strdeq	r2, [r1], -r8
   12758:	andeq	r2, r1, r0, lsr #16
   1275c:	andeq	r2, r1, r8, asr #16
   12760:	andeq	r2, r1, r0, ror r8
   12764:	muleq	r1, r8, r8
   12768:	andeq	r2, r1, r0, asr #17
   1276c:	andeq	r2, r1, r8, ror #17
   12770:	andeq	r2, r1, r0, lsl r9
   12774:	andeq	r2, r1, r8, lsr r9
   12778:	andeq	r2, r1, r0, ror #18
   1277c:	andeq	r2, r1, r8, lsl #19
   12780:			; <UNDEFINED> instruction: 0x000129b0
   12784:	ldrdeq	r2, [r1], -r8
   12788:	andeq	r2, r1, r8, lsr #20
   1278c:	andeq	r2, r1, ip, asr #20
   12790:	andeq	r2, r1, r0, ror sl
   12794:			; <UNDEFINED> instruction: 0x00012abc
   12798:	andeq	r2, r1, r4, ror #21
   1279c:	andeq	r2, r1, r0, lsl #20
   127a0:	muleq	r1, r4, sl
   127a4:	andeq	r2, r1, ip, lsl #22
   127a8:	mov	r2, r4
   127ac:	mov	r1, r5
   127b0:	mov	r0, r6
   127b4:	bl	13c48 <table_get_uint@@Base>
   127b8:	mov	r3, r0
   127bc:	mov	r2, r4
   127c0:	mov	r1, r5
   127c4:	mov	r0, r8
   127c8:	bl	14918 <table_set_uint@@Base>
   127cc:	b	12724 <table_dupe@@Base+0xac>
   127d0:	mov	r2, r4
   127d4:	mov	r1, r5
   127d8:	mov	r0, r6
   127dc:	bl	13c64 <table_get_int8@@Base>
   127e0:	mov	r3, r0
   127e4:	mov	r2, r4
   127e8:	mov	r1, r5
   127ec:	mov	r0, r8
   127f0:	bl	1493c <table_set_int8@@Base>
   127f4:	b	12724 <table_dupe@@Base+0xac>
   127f8:	mov	r2, r4
   127fc:	mov	r1, r5
   12800:	mov	r0, r6
   12804:	bl	13c80 <table_get_uint8@@Base>
   12808:	mov	r3, r0
   1280c:	mov	r2, r4
   12810:	mov	r1, r5
   12814:	mov	r0, r8
   12818:	bl	14960 <table_set_uint8@@Base>
   1281c:	b	12724 <table_dupe@@Base+0xac>
   12820:	mov	r2, r4
   12824:	mov	r1, r5
   12828:	mov	r0, r6
   1282c:	bl	13c9c <table_get_int16@@Base>
   12830:	mov	r3, r0
   12834:	mov	r2, r4
   12838:	mov	r1, r5
   1283c:	mov	r0, r8
   12840:	bl	14984 <table_set_int16@@Base>
   12844:	b	12724 <table_dupe@@Base+0xac>
   12848:	mov	r2, r4
   1284c:	mov	r1, r5
   12850:	mov	r0, r6
   12854:	bl	13cb8 <table_get_uint16@@Base>
   12858:	mov	r3, r0
   1285c:	mov	r2, r4
   12860:	mov	r1, r5
   12864:	mov	r0, r8
   12868:	bl	149a8 <table_set_uint16@@Base>
   1286c:	b	12724 <table_dupe@@Base+0xac>
   12870:	mov	r2, r4
   12874:	mov	r1, r5
   12878:	mov	r0, r6
   1287c:	bl	13cd4 <table_get_int32@@Base>
   12880:	mov	r3, r0
   12884:	mov	r2, r4
   12888:	mov	r1, r5
   1288c:	mov	r0, r8
   12890:	bl	149cc <table_set_int32@@Base>
   12894:	b	12724 <table_dupe@@Base+0xac>
   12898:	mov	r2, r4
   1289c:	mov	r1, r5
   128a0:	mov	r0, r6
   128a4:	bl	13cf0 <table_get_uint32@@Base>
   128a8:	mov	r3, r0
   128ac:	mov	r2, r4
   128b0:	mov	r1, r5
   128b4:	mov	r0, r8
   128b8:	bl	149f0 <table_set_uint32@@Base>
   128bc:	b	12724 <table_dupe@@Base+0xac>
   128c0:	mov	r2, r4
   128c4:	mov	r1, r5
   128c8:	mov	r0, r6
   128cc:	bl	13d0c <table_get_int64@@Base>
   128d0:	strd	r0, [sp]
   128d4:	mov	r2, r4
   128d8:	mov	r1, r5
   128dc:	mov	r0, r8
   128e0:	bl	14a14 <table_set_int64@@Base>
   128e4:	b	12724 <table_dupe@@Base+0xac>
   128e8:	mov	r2, r4
   128ec:	mov	r1, r5
   128f0:	mov	r0, r6
   128f4:	bl	13d28 <table_get_uint64@@Base>
   128f8:	strd	r0, [sp]
   128fc:	mov	r2, r4
   12900:	mov	r1, r5
   12904:	mov	r0, r8
   12908:	bl	14a34 <table_set_uint64@@Base>
   1290c:	b	12724 <table_dupe@@Base+0xac>
   12910:	mov	r2, r4
   12914:	mov	r1, r5
   12918:	mov	r0, r6
   1291c:	bl	13d44 <table_get_short@@Base>
   12920:	mov	r3, r0
   12924:	mov	r2, r4
   12928:	mov	r1, r5
   1292c:	mov	r0, r8
   12930:	bl	14a54 <table_set_short@@Base>
   12934:	b	12724 <table_dupe@@Base+0xac>
   12938:	mov	r2, r4
   1293c:	mov	r1, r5
   12940:	mov	r0, r6
   12944:	bl	13d60 <table_get_ushort@@Base>
   12948:	mov	r3, r0
   1294c:	mov	r2, r4
   12950:	mov	r1, r5
   12954:	mov	r0, r8
   12958:	bl	14a78 <table_set_ushort@@Base>
   1295c:	b	12724 <table_dupe@@Base+0xac>
   12960:	mov	r2, r4
   12964:	mov	r1, r5
   12968:	mov	r0, r6
   1296c:	bl	13d7c <table_get_long@@Base>
   12970:	mov	r3, r0
   12974:	mov	r2, r4
   12978:	mov	r1, r5
   1297c:	mov	r0, r8
   12980:	bl	14a9c <table_set_long@@Base>
   12984:	b	12724 <table_dupe@@Base+0xac>
   12988:	mov	r2, r4
   1298c:	mov	r1, r5
   12990:	mov	r0, r6
   12994:	bl	13d98 <table_get_ulong@@Base>
   12998:	mov	r3, r0
   1299c:	mov	r2, r4
   129a0:	mov	r1, r5
   129a4:	mov	r0, r8
   129a8:	bl	14ac0 <table_set_ulong@@Base>
   129ac:	b	12724 <table_dupe@@Base+0xac>
   129b0:	mov	r2, r4
   129b4:	mov	r1, r5
   129b8:	mov	r0, r6
   129bc:	bl	13db4 <table_get_llong@@Base>
   129c0:	strd	r0, [sp]
   129c4:	mov	r2, r4
   129c8:	mov	r1, r5
   129cc:	mov	r0, r8
   129d0:	bl	14ae4 <table_set_llong@@Base>
   129d4:	b	12724 <table_dupe@@Base+0xac>
   129d8:	mov	r2, r4
   129dc:	mov	r1, r5
   129e0:	mov	r0, r6
   129e4:	bl	13dd0 <table_get_ullong@@Base>
   129e8:	strd	r0, [sp]
   129ec:	mov	r2, r4
   129f0:	mov	r1, r5
   129f4:	mov	r0, r8
   129f8:	bl	14b04 <table_set_ullong@@Base>
   129fc:	b	12724 <table_dupe@@Base+0xac>
   12a00:	mov	r2, r4
   12a04:	mov	r1, r5
   12a08:	mov	r0, r6
   12a0c:	bl	13e78 <table_get_string@@Base>
   12a10:	mov	r3, r0
   12a14:	mov	r2, r4
   12a18:	mov	r1, r5
   12a1c:	mov	r0, r8
   12a20:	bl	14b90 <table_set_string@@Base>
   12a24:	b	12724 <table_dupe@@Base+0xac>
   12a28:	mov	r2, r4
   12a2c:	mov	r1, r5
   12a30:	mov	r0, r6
   12a34:	bl	13dec <table_get_float@@Base>
   12a38:	mov	r2, r4
   12a3c:	mov	r1, r5
   12a40:	mov	r0, r8
   12a44:	bl	14b24 <table_set_float@@Base>
   12a48:	b	12724 <table_dupe@@Base+0xac>
   12a4c:	mov	r2, r4
   12a50:	mov	r1, r5
   12a54:	mov	r0, r6
   12a58:	bl	13e08 <table_get_double@@Base>
   12a5c:	mov	r2, r4
   12a60:	mov	r1, r5
   12a64:	mov	r0, r8
   12a68:	bl	14b48 <table_set_double@@Base>
   12a6c:	b	12724 <table_dupe@@Base+0xac>
   12a70:	mov	r2, r4
   12a74:	mov	r1, r5
   12a78:	mov	r0, r6
   12a7c:	bl	13e24 <table_get_ldouble@@Base>
   12a80:	mov	r2, r4
   12a84:	mov	r1, r5
   12a88:	mov	r0, r8
   12a8c:	bl	14b6c <table_set_ldouble@@Base>
   12a90:	b	12724 <table_dupe@@Base+0xac>
   12a94:	mov	r2, r4
   12a98:	mov	r1, r5
   12a9c:	mov	r0, r6
   12aa0:	bl	13c10 <table_get_bool@@Base>
   12aa4:	mov	r3, r0
   12aa8:	mov	r2, r4
   12aac:	mov	r1, r5
   12ab0:	mov	r0, r8
   12ab4:	bl	148d0 <table_set_bool@@Base>
   12ab8:	b	12724 <table_dupe@@Base+0xac>
   12abc:	mov	r2, r4
   12ac0:	mov	r1, r5
   12ac4:	mov	r0, r6
   12ac8:	bl	13e40 <table_get_char@@Base>
   12acc:	mov	r3, r0
   12ad0:	mov	r2, r4
   12ad4:	mov	r1, r5
   12ad8:	mov	r0, r8
   12adc:	bl	14bac <table_set_char@@Base>
   12ae0:	b	12724 <table_dupe@@Base+0xac>
   12ae4:	mov	r2, r4
   12ae8:	mov	r1, r5
   12aec:	mov	r0, r6
   12af0:	bl	13e5c <table_get_uchar@@Base>
   12af4:	mov	r3, r0
   12af8:	mov	r2, r4
   12afc:	mov	r1, r5
   12b00:	mov	r0, r8
   12b04:	bl	14bd0 <table_set_uchar@@Base>
   12b08:	b	12724 <table_dupe@@Base+0xac>
   12b0c:	mov	r2, r4
   12b10:	mov	r1, r5
   12b14:	mov	r0, r6
   12b18:	bl	13e90 <table_get_ptr@@Base>
   12b1c:	str	r0, [sp, #12]
   12b20:	add	r3, sp, #12
   12b24:	mov	r2, r4
   12b28:	mov	r1, r5
   12b2c:	mov	r0, r8
   12b30:	bl	14bf4 <table_set_ptr@@Base>
   12b34:	b	12724 <table_dupe@@Base+0xac>
   12b38:	add	r5, r5, #1
   12b3c:	cmp	r9, r5
   12b40:	beq	12b5c <table_dupe@@Base+0x4e4>
   12b44:	mov	r0, r8
   12b48:	bl	13f50 <table_add_row@@Base>
   12b4c:	cmp	r7, #0
   12b50:	ble	12b38 <table_dupe@@Base+0x4c0>
   12b54:	mov	r4, #0
   12b58:	b	12730 <table_dupe@@Base+0xb8>
   12b5c:	mov	r0, r8
   12b60:	add	sp, sp, #20
   12b64:	ldrd	r4, [sp]
   12b68:	ldrd	r6, [sp, #8]
   12b6c:	ldrd	r8, [sp, #16]
   12b70:	add	sp, sp, #24
   12b74:	pop	{pc}		; (ldr pc, [sp], #4)

00012b78 <table_get_major_version@@Base>:
   12b78:	mov	r0, #0
   12b7c:	bx	lr

00012b80 <table_get_minor_version@@Base>:
   12b80:	mov	r0, #0
   12b84:	bx	lr

00012b88 <table_get_patch_version@@Base>:
   12b88:	mov	r0, #0
   12b8c:	bx	lr

00012b90 <table_get_version@@Base>:
   12b90:	movw	r0, #25104	; 0x6210
   12b94:	movt	r0, #1
   12b98:	bx	lr

00012b9c <table_get_callback_length@@Base>:
   12b9c:	ldr	r0, [r0, #32]
   12ba0:	bx	lr

00012ba4 <table_register_callback@@Base>:
   12ba4:	strd	r4, [sp, #-24]!	; 0xffffffe8
   12ba8:	strd	r6, [sp, #8]
   12bac:	str	r8, [sp, #16]
   12bb0:	str	lr, [sp, #20]
   12bb4:	ldr	r5, [r0, #32]
   12bb8:	cmp	r5, #0
   12bbc:	ble	12c18 <table_register_callback@@Base+0x74>
   12bc0:	ldr	lr, [r0, #36]	; 0x24
   12bc4:	sub	lr, lr, #4
   12bc8:	mov	ip, #0
   12bcc:	b	12bdc <table_register_callback@@Base+0x38>
   12bd0:	add	ip, ip, #1
   12bd4:	cmp	ip, r5
   12bd8:	beq	12c18 <table_register_callback@@Base+0x74>
   12bdc:	lsl	r6, ip, #2
   12be0:	ldr	r4, [lr, #4]!
   12be4:	cmp	r1, r4
   12be8:	bne	12bd0 <table_register_callback@@Base+0x2c>
   12bec:	ldr	r4, [r0, #40]	; 0x28
   12bf0:	ldr	r4, [r4, ip, lsl #2]
   12bf4:	cmp	r2, r4
   12bf8:	bne	12bd0 <table_register_callback@@Base+0x2c>
   12bfc:	cmp	ip, #0
   12c00:	ble	12c18 <table_register_callback@@Base+0x74>
   12c04:	ldr	r2, [r0, #44]	; 0x2c
   12c08:	ldr	r8, [r2, r6]
   12c0c:	orr	r8, r8, r3
   12c10:	str	r8, [r2, r6]
   12c14:	b	12c64 <table_register_callback@@Base+0xc0>
   12c18:	mov	r8, r3
   12c1c:	mov	r7, r2
   12c20:	mov	r6, r1
   12c24:	mov	r4, r0
   12c28:	ldr	r1, [r0, #48]	; 0x30
   12c2c:	udiv	r3, r5, r1
   12c30:	mls	r5, r1, r3, r5
   12c34:	cmp	r5, #0
   12c38:	beq	12c78 <table_register_callback@@Base+0xd4>
   12c3c:	ldr	r3, [r4, #32]
   12c40:	ldr	r2, [r4, #36]	; 0x24
   12c44:	str	r6, [r2, r3, lsl #2]
   12c48:	ldr	r2, [r4, #40]	; 0x28
   12c4c:	str	r7, [r2, r3, lsl #2]
   12c50:	ldr	r2, [r4, #44]	; 0x2c
   12c54:	str	r8, [r2, r3, lsl #2]
   12c58:	ldr	r3, [r4, #32]
   12c5c:	add	r3, r3, #1
   12c60:	str	r3, [r4, #32]
   12c64:	ldrd	r4, [sp]
   12c68:	ldrd	r6, [sp, #8]
   12c6c:	ldr	r8, [sp, #16]
   12c70:	add	sp, sp, #20
   12c74:	pop	{pc}		; (ldr pc, [sp], #4)
   12c78:	ldr	r3, [r0, #52]	; 0x34
   12c7c:	add	r1, r1, r3
   12c80:	str	r1, [r0, #52]	; 0x34
   12c84:	lsl	r1, r1, #2
   12c88:	ldr	r0, [r0, #36]	; 0x24
   12c8c:	bl	11b50 <realloc@plt>
   12c90:	str	r0, [r4, #36]	; 0x24
   12c94:	ldr	r1, [r4, #52]	; 0x34
   12c98:	lsl	r1, r1, #2
   12c9c:	ldr	r0, [r4, #40]	; 0x28
   12ca0:	bl	11b50 <realloc@plt>
   12ca4:	str	r0, [r4, #40]	; 0x28
   12ca8:	ldr	r1, [r4, #52]	; 0x34
   12cac:	lsl	r1, r1, #2
   12cb0:	ldr	r0, [r4, #44]	; 0x2c
   12cb4:	bl	11b50 <realloc@plt>
   12cb8:	str	r0, [r4, #44]	; 0x2c
   12cbc:	b	12c3c <table_register_callback@@Base+0x98>

00012cc0 <table_unregister_callback@@Base>:
   12cc0:	strd	r4, [sp, #-16]!
   12cc4:	str	r6, [sp, #8]
   12cc8:	str	lr, [sp, #12]
   12ccc:	ldr	lr, [r0, #32]
   12cd0:	cmp	lr, #0
   12cd4:	ble	12d80 <table_unregister_callback@@Base+0xc0>
   12cd8:	ldr	r4, [r0, #36]	; 0x24
   12cdc:	sub	r4, r4, #4
   12ce0:	mov	r3, #0
   12ce4:	b	12cf4 <table_unregister_callback@@Base+0x34>
   12ce8:	add	r3, r3, #1
   12cec:	cmp	r3, lr
   12cf0:	beq	12d80 <table_unregister_callback@@Base+0xc0>
   12cf4:	ldr	r5, [r4, #4]!
   12cf8:	cmp	r1, r5
   12cfc:	bne	12ce8 <table_unregister_callback@@Base+0x28>
   12d00:	ldr	r5, [r0, #40]	; 0x28
   12d04:	ldr	r5, [r5, r3, lsl #2]
   12d08:	cmp	r2, r5
   12d0c:	bne	12ce8 <table_unregister_callback@@Base+0x28>
   12d10:	cmn	r3, #1
   12d14:	beq	12d80 <table_unregister_callback@@Base+0xc0>
   12d18:	sub	r1, lr, #1
   12d1c:	cmp	r1, r3
   12d20:	ble	12d68 <table_unregister_callback@@Base+0xa8>
   12d24:	add	r2, r3, #1
   12d28:	lsl	r2, r2, #2
   12d2c:	ldr	r1, [r0, #36]	; 0x24
   12d30:	ldr	ip, [r1, r2]
   12d34:	str	ip, [r1, r3, lsl #2]
   12d38:	ldr	r1, [r0, #40]	; 0x28
   12d3c:	ldr	ip, [r1, r2]
   12d40:	str	ip, [r1, r3, lsl #2]
   12d44:	ldr	r1, [r0, #44]	; 0x2c
   12d48:	ldr	ip, [r1, r2]
   12d4c:	str	ip, [r1, r3, lsl #2]
   12d50:	add	r3, r3, #1
   12d54:	ldr	r1, [r0, #32]
   12d58:	sub	r1, r1, #1
   12d5c:	add	r2, r2, #4
   12d60:	cmp	r1, r3
   12d64:	bgt	12d2c <table_unregister_callback@@Base+0x6c>
   12d68:	str	r1, [r0, #32]
   12d6c:	ldr	r2, [r0, #48]	; 0x30
   12d70:	udiv	r3, r1, r2
   12d74:	mls	r1, r2, r3, r1
   12d78:	cmp	r1, #0
   12d7c:	beq	12d90 <table_unregister_callback@@Base+0xd0>
   12d80:	ldrd	r4, [sp]
   12d84:	ldr	r6, [sp, #8]
   12d88:	add	sp, sp, #12
   12d8c:	pop	{pc}		; (ldr pc, [sp], #4)
   12d90:	mov	r4, r0
   12d94:	ldr	r1, [r0, #52]	; 0x34
   12d98:	sub	r1, r1, r2
   12d9c:	str	r1, [r0, #52]	; 0x34
   12da0:	cmp	r1, #0
   12da4:	beq	12de4 <table_unregister_callback@@Base+0x124>
   12da8:	lsl	r1, r1, #2
   12dac:	ldr	r0, [r0, #36]	; 0x24
   12db0:	bl	11b50 <realloc@plt>
   12db4:	str	r0, [r4, #36]	; 0x24
   12db8:	ldr	r1, [r4, #52]	; 0x34
   12dbc:	lsl	r1, r1, #2
   12dc0:	ldr	r0, [r4, #40]	; 0x28
   12dc4:	bl	11b50 <realloc@plt>
   12dc8:	str	r0, [r4, #40]	; 0x28
   12dcc:	ldr	r1, [r4, #52]	; 0x34
   12dd0:	lsl	r1, r1, #2
   12dd4:	ldr	r0, [r4, #44]	; 0x2c
   12dd8:	bl	11b50 <realloc@plt>
   12ddc:	str	r0, [r4, #44]	; 0x2c
   12de0:	b	12d80 <table_unregister_callback@@Base+0xc0>
   12de4:	ldr	r0, [r0, #36]	; 0x24
   12de8:	bl	11b38 <free@plt>
   12dec:	ldr	r0, [r4, #40]	; 0x28
   12df0:	bl	11b38 <free@plt>
   12df4:	ldr	r0, [r4, #44]	; 0x2c
   12df8:	bl	11b38 <free@plt>
   12dfc:	mov	r3, #0
   12e00:	str	r3, [r4, #36]	; 0x24
   12e04:	str	r3, [r4, #40]	; 0x28
   12e08:	str	r3, [r4, #44]	; 0x2c
   12e0c:	b	12d80 <table_unregister_callback@@Base+0xc0>

00012e10 <table_notify@@Base>:
   12e10:	ldr	ip, [r0, #32]
   12e14:	cmp	ip, #0
   12e18:	bxle	lr
   12e1c:	strd	r4, [sp, #-28]!	; 0xffffffe4
   12e20:	strd	r6, [sp, #8]
   12e24:	strd	r8, [sp, #16]
   12e28:	str	lr, [sp, #24]
   12e2c:	sub	sp, sp, #12
   12e30:	mov	r6, r3
   12e34:	mov	r8, r2
   12e38:	mov	r7, r1
   12e3c:	mov	r5, r0
   12e40:	mov	r4, #0
   12e44:	b	12e58 <table_notify@@Base+0x48>
   12e48:	add	r4, r4, #1
   12e4c:	ldr	r0, [r5, #32]
   12e50:	cmp	r0, r4
   12e54:	ble	12e94 <table_notify@@Base+0x84>
   12e58:	ldr	r0, [r5, #44]	; 0x2c
   12e5c:	ldr	r0, [r0, r4, lsl #2]
   12e60:	tst	r6, r0
   12e64:	beq	12e48 <table_notify@@Base+0x38>
   12e68:	ldr	r3, [r5, #36]	; 0x24
   12e6c:	ldr	r2, [r5, #40]	; 0x28
   12e70:	ldr	r2, [r2, r4, lsl #2]
   12e74:	str	r2, [sp]
   12e78:	ldr	r9, [r3, r4, lsl #2]
   12e7c:	mov	r3, r6
   12e80:	mov	r2, r8
   12e84:	mov	r1, r7
   12e88:	mov	r0, r5
   12e8c:	blx	r9
   12e90:	b	12e48 <table_notify@@Base+0x38>
   12e94:	add	sp, sp, #12
   12e98:	ldrd	r4, [sp]
   12e9c:	ldrd	r6, [sp, #8]
   12ea0:	ldrd	r8, [sp, #16]
   12ea4:	add	sp, sp, #24
   12ea8:	pop	{pc}		; (ldr pc, [sp], #4)

00012eac <table_column_init@@Base>:
   12eac:	strd	r4, [sp, #-24]!	; 0xffffffe8
   12eb0:	strd	r6, [sp, #8]
   12eb4:	str	r8, [sp, #16]
   12eb8:	str	lr, [sp, #20]
   12ebc:	mov	r7, r2
   12ec0:	mov	r8, r3
   12ec4:	add	r1, r1, r1, lsl #1
   12ec8:	lsl	r4, r1, #2
   12ecc:	ldr	r6, [r0]
   12ed0:	add	r5, r6, r4
   12ed4:	mov	r0, r2
   12ed8:	bl	11b8c <strlen@plt>
   12edc:	add	r0, r0, #1
   12ee0:	bl	11b68 <malloc@plt>
   12ee4:	str	r0, [r6, r4]
   12ee8:	cmp	r0, #0
   12eec:	beq	12ef8 <table_column_init@@Base+0x4c>
   12ef0:	mov	r1, r7
   12ef4:	bl	11b5c <strcpy@plt>
   12ef8:	str	r8, [r5, #4]
   12efc:	ldr	r3, [sp, #24]
   12f00:	str	r3, [r5, #8]
   12f04:	ldrd	r4, [sp]
   12f08:	ldrd	r6, [sp, #8]
   12f0c:	ldr	r8, [sp, #16]
   12f10:	add	sp, sp, #20
   12f14:	pop	{pc}		; (ldr pc, [sp], #4)

00012f18 <table_column_destroy@@Base>:
   12f18:	ldr	r3, [r0]
   12f1c:	add	r1, r1, r1, lsl #1
   12f20:	ldr	r0, [r3, r1, lsl #2]
   12f24:	cmp	r0, #0
   12f28:	bxeq	lr
   12f2c:	str	r4, [sp, #-8]!
   12f30:	str	lr, [sp, #4]
   12f34:	bl	11b38 <free@plt>
   12f38:	ldr	r4, [sp]
   12f3c:	add	sp, sp, #4
   12f40:	pop	{pc}		; (ldr pc, [sp], #4)

00012f44 <table_get_column_length@@Base>:
   12f44:	ldr	r0, [r0, #4]
   12f48:	bx	lr

00012f4c <table_get_column@@Base>:
   12f4c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   12f50:	strd	r6, [sp, #8]
   12f54:	str	r8, [sp, #16]
   12f58:	str	lr, [sp, #20]
   12f5c:	ldr	r7, [r0, #4]
   12f60:	cmp	r7, #0
   12f64:	ble	12fa0 <table_get_column@@Base+0x54>
   12f68:	mov	r6, r1
   12f6c:	ldr	r5, [r0]
   12f70:	mov	r4, #0
   12f74:	mov	r1, r6
   12f78:	ldr	r0, [r5]
   12f7c:	bl	11b20 <strcmp@plt>
   12f80:	cmp	r0, #0
   12f84:	beq	12fa4 <table_get_column@@Base+0x58>
   12f88:	add	r4, r4, #1
   12f8c:	add	r5, r5, #12
   12f90:	cmp	r4, r7
   12f94:	bne	12f74 <table_get_column@@Base+0x28>
   12f98:	mvn	r4, #0
   12f9c:	b	12fac <table_get_column@@Base+0x60>
   12fa0:	mov	r4, #0
   12fa4:	cmp	r4, r7
   12fa8:	mvneq	r4, #0
   12fac:	mov	r0, r4
   12fb0:	ldrd	r4, [sp]
   12fb4:	ldrd	r6, [sp, #8]
   12fb8:	ldr	r8, [sp, #16]
   12fbc:	add	sp, sp, #20
   12fc0:	pop	{pc}		; (ldr pc, [sp], #4)

00012fc4 <table_get_column_data_type@@Base>:
   12fc4:	ldr	r3, [r0]
   12fc8:	add	r1, r1, r1, lsl #1
   12fcc:	add	r3, r3, r1, lsl #2
   12fd0:	ldr	r0, [r3, #4]
   12fd4:	bx	lr

00012fd8 <table_add_column@@Base>:
   12fd8:	strd	r4, [sp, #-28]!	; 0xffffffe4
   12fdc:	strd	r6, [sp, #8]
   12fe0:	strd	r8, [sp, #16]
   12fe4:	str	lr, [sp, #24]
   12fe8:	sub	sp, sp, #12
   12fec:	mov	r4, r0
   12ff0:	mov	r7, r1
   12ff4:	mov	r6, r2
   12ff8:	ldr	r1, [r0, #8]
   12ffc:	ldr	r2, [r0, #4]
   13000:	udiv	r3, r2, r1
   13004:	mls	r3, r1, r3, r2
   13008:	cmp	r3, #0
   1300c:	beq	130a0 <table_add_column@@Base+0xc8>
   13010:	mov	r0, r4
   13014:	bl	13f48 <table_get_row_length@@Base>
   13018:	mov	r8, r0
   1301c:	ldr	r9, [r4, #4]
   13020:	mov	r0, r6
   13024:	bl	13a60 <table_get_default_compare_function_for_data_type@@Base>
   13028:	str	r0, [sp]
   1302c:	mov	r3, r6
   13030:	mov	r2, r7
   13034:	mov	r1, r9
   13038:	mov	r0, r4
   1303c:	bl	12eac <table_column_init@@Base>
   13040:	cmp	r8, #0
   13044:	ble	13068 <table_add_column@@Base+0x90>
   13048:	mov	r5, #0
   1304c:	mov	r2, r9
   13050:	mov	r1, r5
   13054:	mov	r0, r4
   13058:	bl	15ff0 <table_cell_init@@Base>
   1305c:	add	r5, r5, #1
   13060:	cmp	r8, r5
   13064:	bne	1304c <table_add_column@@Base+0x74>
   13068:	mov	r3, #8
   1306c:	ldr	r2, [r4, #4]
   13070:	mvn	r1, #0
   13074:	mov	r0, r4
   13078:	bl	12e10 <table_notify@@Base>
   1307c:	ldr	r0, [r4, #4]
   13080:	add	r3, r0, #1
   13084:	str	r3, [r4, #4]
   13088:	add	sp, sp, #12
   1308c:	ldrd	r4, [sp]
   13090:	ldrd	r6, [sp, #8]
   13094:	ldrd	r8, [sp, #16]
   13098:	add	sp, sp, #24
   1309c:	pop	{pc}		; (ldr pc, [sp], #4)
   130a0:	ldr	r3, [r0, #12]
   130a4:	add	r1, r1, r3
   130a8:	str	r1, [r0, #12]
   130ac:	add	r1, r1, r1, lsl #1
   130b0:	lsl	r1, r1, #2
   130b4:	ldr	r0, [r0]
   130b8:	bl	11b50 <realloc@plt>
   130bc:	str	r0, [r4]
   130c0:	mov	r0, r4
   130c4:	bl	13f48 <table_get_row_length@@Base>
   130c8:	subs	r9, r0, #0
   130cc:	ble	13010 <table_add_column@@Base+0x38>
   130d0:	mov	r5, #0
   130d4:	mov	r1, r5
   130d8:	mov	r0, r4
   130dc:	bl	14140 <table_get_row_ptr@@Base>
   130e0:	mov	r8, r0
   130e4:	ldr	r1, [r4, #12]
   130e8:	lsl	r1, r1, #2
   130ec:	ldr	r0, [r0]
   130f0:	bl	11b50 <realloc@plt>
   130f4:	str	r0, [r8]
   130f8:	add	r5, r5, #1
   130fc:	cmp	r9, r5
   13100:	bne	130d4 <table_add_column@@Base+0xfc>
   13104:	b	13010 <table_add_column@@Base+0x38>

00013108 <table_remove_column@@Base>:
   13108:	strd	r4, [sp, #-32]!	; 0xffffffe0
   1310c:	strd	r6, [sp, #8]
   13110:	strd	r8, [sp, #16]
   13114:	str	sl, [sp, #24]
   13118:	str	lr, [sp, #28]
   1311c:	mov	r4, r0
   13120:	mov	r5, r1
   13124:	bl	12f18 <table_column_destroy@@Base>
   13128:	ldr	r6, [r4, #4]
   1312c:	sub	r7, r6, #1
   13130:	cmp	r5, r7
   13134:	bge	1317c <table_remove_column@@Base+0x74>
   13138:	add	r2, r5, r5, lsl #1
   1313c:	lsl	r2, r2, #2
   13140:	mov	r8, r7
   13144:	mov	r0, r5
   13148:	ldr	r3, [r4]
   1314c:	add	r1, r3, r2
   13150:	add	r2, r2, #12
   13154:	add	r3, r3, r2
   13158:	ldr	lr, [r3]
   1315c:	ldr	ip, [r3, #4]
   13160:	ldr	r3, [r3, #8]
   13164:	str	lr, [r1]
   13168:	str	ip, [r1, #4]
   1316c:	str	r3, [r1, #8]
   13170:	add	r0, r0, #1
   13174:	cmp	r8, r0
   13178:	bne	13148 <table_remove_column@@Base+0x40>
   1317c:	mov	r0, r4
   13180:	bl	13f48 <table_get_row_length@@Base>
   13184:	subs	r9, r0, #0
   13188:	ble	131f8 <table_remove_column@@Base+0xf0>
   1318c:	lsl	sl, r5, #2
   13190:	mov	r8, #0
   13194:	sub	r6, r6, #1
   13198:	b	131a8 <table_remove_column@@Base+0xa0>
   1319c:	add	r8, r8, #1
   131a0:	cmp	r9, r8
   131a4:	beq	131f8 <table_remove_column@@Base+0xf0>
   131a8:	mov	r2, r5
   131ac:	mov	r1, r8
   131b0:	mov	r0, r4
   131b4:	bl	16010 <table_cell_destroy@@Base>
   131b8:	mov	r1, r8
   131bc:	mov	r0, r4
   131c0:	bl	14140 <table_get_row_ptr@@Base>
   131c4:	cmp	r5, r7
   131c8:	bge	1319c <table_remove_column@@Base+0x94>
   131cc:	mov	r3, sl
   131d0:	mov	r2, r5
   131d4:	ldr	r1, [r0]
   131d8:	add	ip, r1, r3
   131dc:	add	r3, r3, #4
   131e0:	ldr	r1, [r1, r3]
   131e4:	str	r1, [ip]
   131e8:	add	r2, r2, #1
   131ec:	cmp	r6, r2
   131f0:	bne	131d4 <table_remove_column@@Base+0xcc>
   131f4:	b	1319c <table_remove_column@@Base+0x94>
   131f8:	ldr	r3, [r4, #4]
   131fc:	sub	r3, r3, #1
   13200:	str	r3, [r4, #4]
   13204:	ldr	r1, [r4, #8]
   13208:	udiv	r2, r3, r1
   1320c:	mls	r3, r1, r2, r3
   13210:	cmp	r3, #0
   13214:	beq	13248 <table_remove_column@@Base+0x140>
   13218:	mov	r3, #16
   1321c:	mov	r2, r5
   13220:	mvn	r1, #0
   13224:	mov	r0, r4
   13228:	bl	12e10 <table_notify@@Base>
   1322c:	mov	r0, #0
   13230:	ldrd	r4, [sp]
   13234:	ldrd	r6, [sp, #8]
   13238:	ldrd	r8, [sp, #16]
   1323c:	ldr	sl, [sp, #24]
   13240:	add	sp, sp, #28
   13244:	pop	{pc}		; (ldr pc, [sp], #4)
   13248:	ldr	r3, [r4, #12]
   1324c:	sub	r1, r3, r1
   13250:	str	r1, [r4, #12]
   13254:	add	r1, r1, r1, lsl #1
   13258:	lsl	r1, r1, #2
   1325c:	ldr	r0, [r4]
   13260:	bl	11b50 <realloc@plt>
   13264:	str	r0, [r4]
   13268:	mov	r0, r4
   1326c:	bl	13f48 <table_get_row_length@@Base>
   13270:	subs	r8, r0, #0
   13274:	ble	13218 <table_remove_column@@Base+0x110>
   13278:	mov	r6, #0
   1327c:	mov	r1, r6
   13280:	mov	r0, r4
   13284:	bl	14140 <table_get_row_ptr@@Base>
   13288:	mov	r7, r0
   1328c:	ldr	r1, [r4, #12]
   13290:	lsl	r1, r1, #2
   13294:	ldr	r0, [r0]
   13298:	bl	11b50 <realloc@plt>
   1329c:	str	r0, [r7]
   132a0:	add	r6, r6, #1
   132a4:	cmp	r8, r6
   132a8:	bne	1327c <table_remove_column@@Base+0x174>
   132ac:	b	13218 <table_remove_column@@Base+0x110>

000132b0 <table_get_column_name@@Base>:
   132b0:	ldr	r3, [r0]
   132b4:	add	r1, r1, r1, lsl #1
   132b8:	ldr	r0, [r3, r1, lsl #2]
   132bc:	bx	lr

000132c0 <table_get_col_ptr@@Base>:
   132c0:	add	r1, r1, r1, lsl #1
   132c4:	ldr	r0, [r0]
   132c8:	add	r0, r0, r1, lsl #2
   132cc:	bx	lr

000132d0 <table_get_column_compare_function@@Base>:
   132d0:	ldr	r3, [r0]
   132d4:	add	r1, r1, r1, lsl #1
   132d8:	add	r3, r3, r1, lsl #2
   132dc:	ldr	r0, [r3, #8]
   132e0:	bx	lr

000132e4 <table_set_column_compare_function@@Base>:
   132e4:	ldr	r3, [r0]
   132e8:	add	r1, r1, r1, lsl #1
   132ec:	add	r3, r3, r1, lsl #2
   132f0:	str	r2, [r3, #8]
   132f4:	bx	lr

000132f8 <table_compare_bool@@Base>:
   132f8:	cmp	r0, #0
   132fc:	beq	13328 <table_compare_bool@@Base+0x30>
   13300:	cmp	r1, #0
   13304:	beq	13338 <table_compare_bool@@Base+0x40>
   13308:	ldrb	r0, [r0]
   1330c:	ldrb	r1, [r1]
   13310:	cmp	r0, r1
   13314:	bhi	13340 <table_compare_bool@@Base+0x48>
   13318:	cmp	r0, r1
   1331c:	movcs	r0, #0
   13320:	mvncc	r0, #0
   13324:	bx	lr
   13328:	adds	r0, r1, #0
   1332c:	movne	r0, #1
   13330:	rsb	r0, r0, #0
   13334:	bx	lr
   13338:	mov	r0, #1
   1333c:	bx	lr
   13340:	mov	r0, #1
   13344:	bx	lr

00013348 <table_compare_int@@Base>:
   13348:	cmp	r0, #0
   1334c:	beq	13378 <table_compare_int@@Base+0x30>
   13350:	cmp	r1, #0
   13354:	beq	13388 <table_compare_int@@Base+0x40>
   13358:	ldr	r0, [r0]
   1335c:	ldr	r1, [r1]
   13360:	cmp	r0, r1
   13364:	bgt	13390 <table_compare_int@@Base+0x48>
   13368:	cmp	r0, r1
   1336c:	movge	r0, #0
   13370:	mvnlt	r0, #0
   13374:	bx	lr
   13378:	adds	r0, r1, #0
   1337c:	movne	r0, #1
   13380:	rsb	r0, r0, #0
   13384:	bx	lr
   13388:	mov	r0, #1
   1338c:	bx	lr
   13390:	mov	r0, #1
   13394:	bx	lr

00013398 <table_compare_uint@@Base>:
   13398:	cmp	r0, #0
   1339c:	beq	133c8 <table_compare_uint@@Base+0x30>
   133a0:	cmp	r1, #0
   133a4:	beq	133d8 <table_compare_uint@@Base+0x40>
   133a8:	ldr	r0, [r0]
   133ac:	ldr	r1, [r1]
   133b0:	cmp	r0, r1
   133b4:	bhi	133e0 <table_compare_uint@@Base+0x48>
   133b8:	cmp	r0, r1
   133bc:	movcs	r0, #0
   133c0:	mvncc	r0, #0
   133c4:	bx	lr
   133c8:	adds	r0, r1, #0
   133cc:	movne	r0, #1
   133d0:	rsb	r0, r0, #0
   133d4:	bx	lr
   133d8:	mov	r0, #1
   133dc:	bx	lr
   133e0:	mov	r0, #1
   133e4:	bx	lr

000133e8 <table_compare_int8@@Base>:
   133e8:	cmp	r0, #0
   133ec:	beq	13418 <table_compare_int8@@Base+0x30>
   133f0:	cmp	r1, #0
   133f4:	beq	13428 <table_compare_int8@@Base+0x40>
   133f8:	ldrsb	r0, [r0]
   133fc:	ldrsb	r1, [r1]
   13400:	cmp	r0, r1
   13404:	bgt	13430 <table_compare_int8@@Base+0x48>
   13408:	cmp	r0, r1
   1340c:	movge	r0, #0
   13410:	mvnlt	r0, #0
   13414:	bx	lr
   13418:	adds	r0, r1, #0
   1341c:	movne	r0, #1
   13420:	rsb	r0, r0, #0
   13424:	bx	lr
   13428:	mov	r0, #1
   1342c:	bx	lr
   13430:	mov	r0, #1
   13434:	bx	lr

00013438 <table_compare_uint8@@Base>:
   13438:	cmp	r0, #0
   1343c:	beq	13468 <table_compare_uint8@@Base+0x30>
   13440:	cmp	r1, #0
   13444:	beq	13478 <table_compare_uint8@@Base+0x40>
   13448:	ldrb	r0, [r0]
   1344c:	ldrb	r1, [r1]
   13450:	cmp	r0, r1
   13454:	bhi	13480 <table_compare_uint8@@Base+0x48>
   13458:	cmp	r0, r1
   1345c:	movcs	r0, #0
   13460:	mvncc	r0, #0
   13464:	bx	lr
   13468:	adds	r0, r1, #0
   1346c:	movne	r0, #1
   13470:	rsb	r0, r0, #0
   13474:	bx	lr
   13478:	mov	r0, #1
   1347c:	bx	lr
   13480:	mov	r0, #1
   13484:	bx	lr

00013488 <table_compare_int16@@Base>:
   13488:	cmp	r0, #0
   1348c:	beq	134b8 <table_compare_int16@@Base+0x30>
   13490:	cmp	r1, #0
   13494:	beq	134c8 <table_compare_int16@@Base+0x40>
   13498:	ldrsh	r0, [r0]
   1349c:	ldrsh	r1, [r1]
   134a0:	cmp	r0, r1
   134a4:	bgt	134d0 <table_compare_int16@@Base+0x48>
   134a8:	cmp	r0, r1
   134ac:	movge	r0, #0
   134b0:	mvnlt	r0, #0
   134b4:	bx	lr
   134b8:	adds	r0, r1, #0
   134bc:	movne	r0, #1
   134c0:	rsb	r0, r0, #0
   134c4:	bx	lr
   134c8:	mov	r0, #1
   134cc:	bx	lr
   134d0:	mov	r0, #1
   134d4:	bx	lr

000134d8 <table_compare_uint16@@Base>:
   134d8:	cmp	r0, #0
   134dc:	beq	13508 <table_compare_uint16@@Base+0x30>
   134e0:	cmp	r1, #0
   134e4:	beq	13518 <table_compare_uint16@@Base+0x40>
   134e8:	ldrh	r0, [r0]
   134ec:	ldrh	r1, [r1]
   134f0:	cmp	r0, r1
   134f4:	bhi	13520 <table_compare_uint16@@Base+0x48>
   134f8:	cmp	r0, r1
   134fc:	movcs	r0, #0
   13500:	mvncc	r0, #0
   13504:	bx	lr
   13508:	adds	r0, r1, #0
   1350c:	movne	r0, #1
   13510:	rsb	r0, r0, #0
   13514:	bx	lr
   13518:	mov	r0, #1
   1351c:	bx	lr
   13520:	mov	r0, #1
   13524:	bx	lr

00013528 <table_compare_int32@@Base>:
   13528:	cmp	r0, #0
   1352c:	beq	13558 <table_compare_int32@@Base+0x30>
   13530:	cmp	r1, #0
   13534:	beq	13568 <table_compare_int32@@Base+0x40>
   13538:	ldr	r0, [r0]
   1353c:	ldr	r1, [r1]
   13540:	cmp	r0, r1
   13544:	bgt	13570 <table_compare_int32@@Base+0x48>
   13548:	cmp	r0, r1
   1354c:	movge	r0, #0
   13550:	mvnlt	r0, #0
   13554:	bx	lr
   13558:	adds	r0, r1, #0
   1355c:	movne	r0, #1
   13560:	rsb	r0, r0, #0
   13564:	bx	lr
   13568:	mov	r0, #1
   1356c:	bx	lr
   13570:	mov	r0, #1
   13574:	bx	lr

00013578 <table_compare_uint32@@Base>:
   13578:	cmp	r0, #0
   1357c:	beq	135a8 <table_compare_uint32@@Base+0x30>
   13580:	cmp	r1, #0
   13584:	beq	135b8 <table_compare_uint32@@Base+0x40>
   13588:	ldr	r0, [r0]
   1358c:	ldr	r1, [r1]
   13590:	cmp	r0, r1
   13594:	bhi	135c0 <table_compare_uint32@@Base+0x48>
   13598:	cmp	r0, r1
   1359c:	movcs	r0, #0
   135a0:	mvncc	r0, #0
   135a4:	bx	lr
   135a8:	adds	r0, r1, #0
   135ac:	movne	r0, #1
   135b0:	rsb	r0, r0, #0
   135b4:	bx	lr
   135b8:	mov	r0, #1
   135bc:	bx	lr
   135c0:	mov	r0, #1
   135c4:	bx	lr

000135c8 <table_compare_int64@@Base>:
   135c8:	cmp	r0, #0
   135cc:	beq	13610 <table_compare_int64@@Base+0x48>
   135d0:	cmp	r1, #0
   135d4:	beq	13620 <table_compare_int64@@Base+0x58>
   135d8:	strd	r4, [sp, #-8]!
   135dc:	ldrd	r4, [r0]
   135e0:	ldrd	r2, [r1]
   135e4:	cmp	r2, r4
   135e8:	sbcs	r1, r3, r5
   135ec:	movlt	r0, #1
   135f0:	blt	13604 <table_compare_int64@@Base+0x3c>
   135f4:	cmp	r4, r2
   135f8:	sbcs	r3, r5, r3
   135fc:	mvnlt	r0, #0
   13600:	movge	r0, #0
   13604:	ldrd	r4, [sp]
   13608:	add	sp, sp, #8
   1360c:	bx	lr
   13610:	adds	r1, r1, #0
   13614:	movne	r1, #1
   13618:	rsb	r0, r1, #0
   1361c:	bx	lr
   13620:	mov	r0, #1
   13624:	bx	lr

00013628 <table_compare_uint64@@Base>:
   13628:	cmp	r0, #0
   1362c:	beq	13668 <table_compare_uint64@@Base+0x40>
   13630:	cmp	r1, #0
   13634:	beq	13678 <table_compare_uint64@@Base+0x50>
   13638:	strd	r4, [sp, #-8]!
   1363c:	ldrd	r4, [r0]
   13640:	ldrd	r2, [r1]
   13644:	cmp	r5, r3
   13648:	cmpeq	r4, r2
   1364c:	movhi	r0, #1
   13650:	bhi	1365c <table_compare_uint64@@Base+0x34>
   13654:	mvncc	r0, #0
   13658:	movcs	r0, #0
   1365c:	ldrd	r4, [sp]
   13660:	add	sp, sp, #8
   13664:	bx	lr
   13668:	adds	r1, r1, #0
   1366c:	movne	r1, #1
   13670:	rsb	r0, r1, #0
   13674:	bx	lr
   13678:	mov	r0, #1
   1367c:	bx	lr

00013680 <table_compare_short@@Base>:
   13680:	cmp	r0, #0
   13684:	beq	136b0 <table_compare_short@@Base+0x30>
   13688:	cmp	r1, #0
   1368c:	beq	136c0 <table_compare_short@@Base+0x40>
   13690:	ldrsh	r0, [r0]
   13694:	ldrsh	r1, [r1]
   13698:	cmp	r0, r1
   1369c:	bgt	136c8 <table_compare_short@@Base+0x48>
   136a0:	cmp	r0, r1
   136a4:	movge	r0, #0
   136a8:	mvnlt	r0, #0
   136ac:	bx	lr
   136b0:	adds	r0, r1, #0
   136b4:	movne	r0, #1
   136b8:	rsb	r0, r0, #0
   136bc:	bx	lr
   136c0:	mov	r0, #1
   136c4:	bx	lr
   136c8:	mov	r0, #1
   136cc:	bx	lr

000136d0 <table_compare_ushort@@Base>:
   136d0:	cmp	r0, #0
   136d4:	beq	13700 <table_compare_ushort@@Base+0x30>
   136d8:	cmp	r1, #0
   136dc:	beq	13710 <table_compare_ushort@@Base+0x40>
   136e0:	ldrh	r0, [r0]
   136e4:	ldrh	r1, [r1]
   136e8:	cmp	r0, r1
   136ec:	bhi	13718 <table_compare_ushort@@Base+0x48>
   136f0:	cmp	r0, r1
   136f4:	movcs	r0, #0
   136f8:	mvncc	r0, #0
   136fc:	bx	lr
   13700:	adds	r0, r1, #0
   13704:	movne	r0, #1
   13708:	rsb	r0, r0, #0
   1370c:	bx	lr
   13710:	mov	r0, #1
   13714:	bx	lr
   13718:	mov	r0, #1
   1371c:	bx	lr

00013720 <table_compare_long@@Base>:
   13720:	cmp	r0, #0
   13724:	beq	13750 <table_compare_long@@Base+0x30>
   13728:	cmp	r1, #0
   1372c:	beq	13760 <table_compare_long@@Base+0x40>
   13730:	ldr	r0, [r0]
   13734:	ldr	r1, [r1]
   13738:	cmp	r0, r1
   1373c:	bgt	13768 <table_compare_long@@Base+0x48>
   13740:	cmp	r0, r1
   13744:	movge	r0, #0
   13748:	mvnlt	r0, #0
   1374c:	bx	lr
   13750:	adds	r0, r1, #0
   13754:	movne	r0, #1
   13758:	rsb	r0, r0, #0
   1375c:	bx	lr
   13760:	mov	r0, #1
   13764:	bx	lr
   13768:	mov	r0, #1
   1376c:	bx	lr

00013770 <table_compare_ulong@@Base>:
   13770:	cmp	r0, #0
   13774:	beq	137a0 <table_compare_ulong@@Base+0x30>
   13778:	cmp	r1, #0
   1377c:	beq	137b0 <table_compare_ulong@@Base+0x40>
   13780:	ldr	r0, [r0]
   13784:	ldr	r1, [r1]
   13788:	cmp	r0, r1
   1378c:	bhi	137b8 <table_compare_ulong@@Base+0x48>
   13790:	cmp	r0, r1
   13794:	movcs	r0, #0
   13798:	mvncc	r0, #0
   1379c:	bx	lr
   137a0:	adds	r0, r1, #0
   137a4:	movne	r0, #1
   137a8:	rsb	r0, r0, #0
   137ac:	bx	lr
   137b0:	mov	r0, #1
   137b4:	bx	lr
   137b8:	mov	r0, #1
   137bc:	bx	lr

000137c0 <table_compare_llong@@Base>:
   137c0:	cmp	r0, #0
   137c4:	beq	13808 <table_compare_llong@@Base+0x48>
   137c8:	cmp	r1, #0
   137cc:	beq	13818 <table_compare_llong@@Base+0x58>
   137d0:	strd	r4, [sp, #-8]!
   137d4:	ldrd	r4, [r0]
   137d8:	ldrd	r2, [r1]
   137dc:	cmp	r2, r4
   137e0:	sbcs	r1, r3, r5
   137e4:	movlt	r0, #1
   137e8:	blt	137fc <table_compare_llong@@Base+0x3c>
   137ec:	cmp	r4, r2
   137f0:	sbcs	r3, r5, r3
   137f4:	mvnlt	r0, #0
   137f8:	movge	r0, #0
   137fc:	ldrd	r4, [sp]
   13800:	add	sp, sp, #8
   13804:	bx	lr
   13808:	adds	r1, r1, #0
   1380c:	movne	r1, #1
   13810:	rsb	r0, r1, #0
   13814:	bx	lr
   13818:	mov	r0, #1
   1381c:	bx	lr

00013820 <table_compare_ullong@@Base>:
   13820:	cmp	r0, #0
   13824:	beq	13850 <table_compare_ullong@@Base+0x30>
   13828:	cmp	r1, #0
   1382c:	beq	13860 <table_compare_ullong@@Base+0x40>
   13830:	ldr	r0, [r0]
   13834:	ldr	r1, [r1]
   13838:	cmp	r0, r1
   1383c:	bhi	13868 <table_compare_ullong@@Base+0x48>
   13840:	cmp	r0, r1
   13844:	movcs	r0, #0
   13848:	mvncc	r0, #0
   1384c:	bx	lr
   13850:	adds	r0, r1, #0
   13854:	movne	r0, #1
   13858:	rsb	r0, r0, #0
   1385c:	bx	lr
   13860:	mov	r0, #1
   13864:	bx	lr
   13868:	mov	r0, #1
   1386c:	bx	lr

00013870 <table_compare_float@@Base>:
   13870:	cmp	r0, #0
   13874:	beq	138a0 <table_compare_float@@Base+0x30>
   13878:	cmp	r1, #0
   1387c:	beq	138b0 <table_compare_float@@Base+0x40>
   13880:	vldr	s14, [r0]
   13884:	vldr	s15, [r1]
   13888:	vcmpe.f32	s14, s15
   1388c:	vmrs	APSR_nzcv, fpscr
   13890:	bgt	138b8 <table_compare_float@@Base+0x48>
   13894:	mvnmi	r0, #0
   13898:	movpl	r0, #0
   1389c:	bx	lr
   138a0:	adds	r1, r1, #0
   138a4:	movne	r1, #1
   138a8:	rsb	r0, r1, #0
   138ac:	bx	lr
   138b0:	mov	r0, #1
   138b4:	bx	lr
   138b8:	mov	r0, #1
   138bc:	bx	lr

000138c0 <table_compare_double@@Base>:
   138c0:	cmp	r0, #0
   138c4:	beq	138f0 <table_compare_double@@Base+0x30>
   138c8:	cmp	r1, #0
   138cc:	beq	13900 <table_compare_double@@Base+0x40>
   138d0:	vldr	d6, [r0]
   138d4:	vldr	d7, [r1]
   138d8:	vcmpe.f64	d6, d7
   138dc:	vmrs	APSR_nzcv, fpscr
   138e0:	bgt	13908 <table_compare_double@@Base+0x48>
   138e4:	mvnmi	r0, #0
   138e8:	movpl	r0, #0
   138ec:	bx	lr
   138f0:	adds	r1, r1, #0
   138f4:	movne	r1, #1
   138f8:	rsb	r0, r1, #0
   138fc:	bx	lr
   13900:	mov	r0, #1
   13904:	bx	lr
   13908:	mov	r0, #1
   1390c:	bx	lr

00013910 <table_compare_ldouble@@Base>:
   13910:	cmp	r0, #0
   13914:	beq	13940 <table_compare_ldouble@@Base+0x30>
   13918:	cmp	r1, #0
   1391c:	beq	13950 <table_compare_ldouble@@Base+0x40>
   13920:	vldr	d6, [r0]
   13924:	vldr	d7, [r1]
   13928:	vcmpe.f64	d6, d7
   1392c:	vmrs	APSR_nzcv, fpscr
   13930:	bgt	13958 <table_compare_ldouble@@Base+0x48>
   13934:	mvnmi	r0, #0
   13938:	movpl	r0, #0
   1393c:	bx	lr
   13940:	adds	r1, r1, #0
   13944:	movne	r1, #1
   13948:	rsb	r0, r1, #0
   1394c:	bx	lr
   13950:	mov	r0, #1
   13954:	bx	lr
   13958:	mov	r0, #1
   1395c:	bx	lr

00013960 <table_compare_char@@Base>:
   13960:	cmp	r0, #0
   13964:	beq	13990 <table_compare_char@@Base+0x30>
   13968:	cmp	r1, #0
   1396c:	beq	139a0 <table_compare_char@@Base+0x40>
   13970:	ldrb	r0, [r0]
   13974:	ldrb	r1, [r1]
   13978:	cmp	r0, r1
   1397c:	bhi	139a8 <table_compare_char@@Base+0x48>
   13980:	cmp	r0, r1
   13984:	movcs	r0, #0
   13988:	mvncc	r0, #0
   1398c:	bx	lr
   13990:	adds	r0, r1, #0
   13994:	movne	r0, #1
   13998:	rsb	r0, r0, #0
   1399c:	bx	lr
   139a0:	mov	r0, #1
   139a4:	bx	lr
   139a8:	mov	r0, #1
   139ac:	bx	lr

000139b0 <table_compare_uchar@@Base>:
   139b0:	cmp	r0, #0
   139b4:	beq	139e0 <table_compare_uchar@@Base+0x30>
   139b8:	cmp	r1, #0
   139bc:	beq	139f0 <table_compare_uchar@@Base+0x40>
   139c0:	ldrb	r0, [r0]
   139c4:	ldrb	r1, [r1]
   139c8:	cmp	r0, r1
   139cc:	bhi	139f8 <table_compare_uchar@@Base+0x48>
   139d0:	cmp	r0, r1
   139d4:	movcs	r0, #0
   139d8:	mvncc	r0, #0
   139dc:	bx	lr
   139e0:	adds	r0, r1, #0
   139e4:	movne	r0, #1
   139e8:	rsb	r0, r0, #0
   139ec:	bx	lr
   139f0:	mov	r0, #1
   139f4:	bx	lr
   139f8:	mov	r0, #1
   139fc:	bx	lr

00013a00 <table_compare_ptr@@Base>:
   13a00:	cmp	r0, r1
   13a04:	bhi	13a18 <table_compare_ptr@@Base+0x18>
   13a08:	cmp	r0, r1
   13a0c:	movcs	r0, #0
   13a10:	mvncc	r0, #0
   13a14:	bx	lr
   13a18:	mov	r0, #1
   13a1c:	bx	lr

00013a20 <table_compare_string@@Base>:
   13a20:	cmp	r0, #0
   13a24:	beq	13a48 <table_compare_string@@Base+0x28>
   13a28:	cmp	r1, #0
   13a2c:	beq	13a58 <table_compare_string@@Base+0x38>
   13a30:	str	r4, [sp, #-8]!
   13a34:	str	lr, [sp, #4]
   13a38:	bl	11b20 <strcmp@plt>
   13a3c:	ldr	r4, [sp]
   13a40:	add	sp, sp, #4
   13a44:	pop	{pc}		; (ldr pc, [sp], #4)
   13a48:	adds	r1, r1, #0
   13a4c:	movne	r1, #1
   13a50:	rsb	r0, r1, #0
   13a54:	bx	lr
   13a58:	mov	r0, #1
   13a5c:	bx	lr

00013a60 <table_get_default_compare_function_for_data_type@@Base>:
   13a60:	cmp	r0, #23
   13a64:	ldrls	pc, [pc, r0, lsl #2]
   13a68:	b	13bec <table_get_default_compare_function_for_data_type@@Base+0x18c>
   13a6c:	andeq	r3, r1, ip, asr #21
   13a70:	ldrdeq	r3, [r1], -r8
   13a74:	andeq	r3, r1, r4, ror #21
   13a78:	strdeq	r3, [r1], -r0
   13a7c:	strdeq	r3, [r1], -ip
   13a80:	andeq	r3, r1, r8, lsl #22
   13a84:	andeq	r3, r1, r4, lsl fp
   13a88:	andeq	r3, r1, r0, lsr #22
   13a8c:	andeq	r3, r1, ip, lsr #22
   13a90:	andeq	r3, r1, r8, lsr fp
   13a94:	andeq	r3, r1, r4, asr #22
   13a98:	andeq	r3, r1, r0, asr fp
   13a9c:	andeq	r3, r1, ip, asr fp
   13aa0:	andeq	r3, r1, r8, ror #22
   13aa4:	andeq	r3, r1, r4, ror fp
   13aa8:	andeq	r3, r1, r0, lsl #23
   13aac:	muleq	r1, r8, fp
   13ab0:	andeq	r3, r1, r4, lsr #23
   13ab4:			; <UNDEFINED> instruction: 0x00013bb0
   13ab8:	andeq	r3, r1, r8, asr #23
   13abc:	ldrdeq	r3, [r1], -r4
   13ac0:	andeq	r3, r1, ip, lsl #23
   13ac4:			; <UNDEFINED> instruction: 0x00013bbc
   13ac8:	andeq	r3, r1, r0, ror #23
   13acc:	movw	r0, #13128	; 0x3348
   13ad0:	movt	r0, #1
   13ad4:	bx	lr
   13ad8:	movw	r0, #13208	; 0x3398
   13adc:	movt	r0, #1
   13ae0:	bx	lr
   13ae4:	movw	r0, #13288	; 0x33e8
   13ae8:	movt	r0, #1
   13aec:	bx	lr
   13af0:	movw	r0, #13368	; 0x3438
   13af4:	movt	r0, #1
   13af8:	bx	lr
   13afc:	movw	r0, #13448	; 0x3488
   13b00:	movt	r0, #1
   13b04:	bx	lr
   13b08:	movw	r0, #13528	; 0x34d8
   13b0c:	movt	r0, #1
   13b10:	bx	lr
   13b14:	movw	r0, #13608	; 0x3528
   13b18:	movt	r0, #1
   13b1c:	bx	lr
   13b20:	movw	r0, #13688	; 0x3578
   13b24:	movt	r0, #1
   13b28:	bx	lr
   13b2c:	movw	r0, #13768	; 0x35c8
   13b30:	movt	r0, #1
   13b34:	bx	lr
   13b38:	movw	r0, #13864	; 0x3628
   13b3c:	movt	r0, #1
   13b40:	bx	lr
   13b44:	movw	r0, #13952	; 0x3680
   13b48:	movt	r0, #1
   13b4c:	bx	lr
   13b50:	movw	r0, #14032	; 0x36d0
   13b54:	movt	r0, #1
   13b58:	bx	lr
   13b5c:	movw	r0, #14112	; 0x3720
   13b60:	movt	r0, #1
   13b64:	bx	lr
   13b68:	movw	r0, #14192	; 0x3770
   13b6c:	movt	r0, #1
   13b70:	bx	lr
   13b74:	movw	r0, #14272	; 0x37c0
   13b78:	movt	r0, #1
   13b7c:	bx	lr
   13b80:	movw	r0, #14368	; 0x3820
   13b84:	movt	r0, #1
   13b88:	bx	lr
   13b8c:	movw	r0, #14880	; 0x3a20
   13b90:	movt	r0, #1
   13b94:	bx	lr
   13b98:	movw	r0, #14448	; 0x3870
   13b9c:	movt	r0, #1
   13ba0:	bx	lr
   13ba4:	movw	r0, #14528	; 0x38c0
   13ba8:	movt	r0, #1
   13bac:	bx	lr
   13bb0:	movw	r0, #14608	; 0x3910
   13bb4:	movt	r0, #1
   13bb8:	bx	lr
   13bbc:	movw	r0, #13048	; 0x32f8
   13bc0:	movt	r0, #1
   13bc4:	bx	lr
   13bc8:	movw	r0, #14688	; 0x3960
   13bcc:	movt	r0, #1
   13bd0:	bx	lr
   13bd4:	movw	r0, #14768	; 0x39b0
   13bd8:	movt	r0, #1
   13bdc:	bx	lr
   13be0:	movw	r0, #14848	; 0x3a00
   13be4:	movt	r0, #1
   13be8:	bx	lr
   13bec:	mov	r0, #0
   13bf0:	bx	lr

00013bf4 <table_get@@Base>:
   13bf4:	str	r4, [sp, #-8]!
   13bf8:	str	lr, [sp, #4]
   13bfc:	bl	15fcc <table_get_cell_ptr@@Base>
   13c00:	ldr	r0, [r0]
   13c04:	ldr	r4, [sp]
   13c08:	add	sp, sp, #4
   13c0c:	pop	{pc}		; (ldr pc, [sp], #4)

00013c10 <table_get_bool@@Base>:
   13c10:	str	r4, [sp, #-8]!
   13c14:	str	lr, [sp, #4]
   13c18:	bl	13bf4 <table_get@@Base>
   13c1c:	ldrb	r0, [r0]
   13c20:	ldr	r4, [sp]
   13c24:	add	sp, sp, #4
   13c28:	pop	{pc}		; (ldr pc, [sp], #4)

00013c2c <table_get_int@@Base>:
   13c2c:	str	r4, [sp, #-8]!
   13c30:	str	lr, [sp, #4]
   13c34:	bl	13bf4 <table_get@@Base>
   13c38:	ldr	r0, [r0]
   13c3c:	ldr	r4, [sp]
   13c40:	add	sp, sp, #4
   13c44:	pop	{pc}		; (ldr pc, [sp], #4)

00013c48 <table_get_uint@@Base>:
   13c48:	str	r4, [sp, #-8]!
   13c4c:	str	lr, [sp, #4]
   13c50:	bl	13bf4 <table_get@@Base>
   13c54:	ldr	r0, [r0]
   13c58:	ldr	r4, [sp]
   13c5c:	add	sp, sp, #4
   13c60:	pop	{pc}		; (ldr pc, [sp], #4)

00013c64 <table_get_int8@@Base>:
   13c64:	str	r4, [sp, #-8]!
   13c68:	str	lr, [sp, #4]
   13c6c:	bl	13bf4 <table_get@@Base>
   13c70:	ldrsb	r0, [r0]
   13c74:	ldr	r4, [sp]
   13c78:	add	sp, sp, #4
   13c7c:	pop	{pc}		; (ldr pc, [sp], #4)

00013c80 <table_get_uint8@@Base>:
   13c80:	str	r4, [sp, #-8]!
   13c84:	str	lr, [sp, #4]
   13c88:	bl	13bf4 <table_get@@Base>
   13c8c:	ldrb	r0, [r0]
   13c90:	ldr	r4, [sp]
   13c94:	add	sp, sp, #4
   13c98:	pop	{pc}		; (ldr pc, [sp], #4)

00013c9c <table_get_int16@@Base>:
   13c9c:	str	r4, [sp, #-8]!
   13ca0:	str	lr, [sp, #4]
   13ca4:	bl	13bf4 <table_get@@Base>
   13ca8:	ldrsh	r0, [r0]
   13cac:	ldr	r4, [sp]
   13cb0:	add	sp, sp, #4
   13cb4:	pop	{pc}		; (ldr pc, [sp], #4)

00013cb8 <table_get_uint16@@Base>:
   13cb8:	str	r4, [sp, #-8]!
   13cbc:	str	lr, [sp, #4]
   13cc0:	bl	13bf4 <table_get@@Base>
   13cc4:	ldrh	r0, [r0]
   13cc8:	ldr	r4, [sp]
   13ccc:	add	sp, sp, #4
   13cd0:	pop	{pc}		; (ldr pc, [sp], #4)

00013cd4 <table_get_int32@@Base>:
   13cd4:	str	r4, [sp, #-8]!
   13cd8:	str	lr, [sp, #4]
   13cdc:	bl	13bf4 <table_get@@Base>
   13ce0:	ldr	r0, [r0]
   13ce4:	ldr	r4, [sp]
   13ce8:	add	sp, sp, #4
   13cec:	pop	{pc}		; (ldr pc, [sp], #4)

00013cf0 <table_get_uint32@@Base>:
   13cf0:	str	r4, [sp, #-8]!
   13cf4:	str	lr, [sp, #4]
   13cf8:	bl	13bf4 <table_get@@Base>
   13cfc:	ldr	r0, [r0]
   13d00:	ldr	r4, [sp]
   13d04:	add	sp, sp, #4
   13d08:	pop	{pc}		; (ldr pc, [sp], #4)

00013d0c <table_get_int64@@Base>:
   13d0c:	str	r4, [sp, #-8]!
   13d10:	str	lr, [sp, #4]
   13d14:	bl	13bf4 <table_get@@Base>
   13d18:	ldrd	r0, [r0]
   13d1c:	ldr	r4, [sp]
   13d20:	add	sp, sp, #4
   13d24:	pop	{pc}		; (ldr pc, [sp], #4)

00013d28 <table_get_uint64@@Base>:
   13d28:	str	r4, [sp, #-8]!
   13d2c:	str	lr, [sp, #4]
   13d30:	bl	13bf4 <table_get@@Base>
   13d34:	ldrd	r0, [r0]
   13d38:	ldr	r4, [sp]
   13d3c:	add	sp, sp, #4
   13d40:	pop	{pc}		; (ldr pc, [sp], #4)

00013d44 <table_get_short@@Base>:
   13d44:	str	r4, [sp, #-8]!
   13d48:	str	lr, [sp, #4]
   13d4c:	bl	13bf4 <table_get@@Base>
   13d50:	ldrsh	r0, [r0]
   13d54:	ldr	r4, [sp]
   13d58:	add	sp, sp, #4
   13d5c:	pop	{pc}		; (ldr pc, [sp], #4)

00013d60 <table_get_ushort@@Base>:
   13d60:	str	r4, [sp, #-8]!
   13d64:	str	lr, [sp, #4]
   13d68:	bl	13bf4 <table_get@@Base>
   13d6c:	ldrh	r0, [r0]
   13d70:	ldr	r4, [sp]
   13d74:	add	sp, sp, #4
   13d78:	pop	{pc}		; (ldr pc, [sp], #4)

00013d7c <table_get_long@@Base>:
   13d7c:	str	r4, [sp, #-8]!
   13d80:	str	lr, [sp, #4]
   13d84:	bl	13bf4 <table_get@@Base>
   13d88:	ldr	r0, [r0]
   13d8c:	ldr	r4, [sp]
   13d90:	add	sp, sp, #4
   13d94:	pop	{pc}		; (ldr pc, [sp], #4)

00013d98 <table_get_ulong@@Base>:
   13d98:	str	r4, [sp, #-8]!
   13d9c:	str	lr, [sp, #4]
   13da0:	bl	13bf4 <table_get@@Base>
   13da4:	ldr	r0, [r0]
   13da8:	ldr	r4, [sp]
   13dac:	add	sp, sp, #4
   13db0:	pop	{pc}		; (ldr pc, [sp], #4)

00013db4 <table_get_llong@@Base>:
   13db4:	str	r4, [sp, #-8]!
   13db8:	str	lr, [sp, #4]
   13dbc:	bl	13bf4 <table_get@@Base>
   13dc0:	ldrd	r0, [r0]
   13dc4:	ldr	r4, [sp]
   13dc8:	add	sp, sp, #4
   13dcc:	pop	{pc}		; (ldr pc, [sp], #4)

00013dd0 <table_get_ullong@@Base>:
   13dd0:	str	r4, [sp, #-8]!
   13dd4:	str	lr, [sp, #4]
   13dd8:	bl	13bf4 <table_get@@Base>
   13ddc:	ldrd	r0, [r0]
   13de0:	ldr	r4, [sp]
   13de4:	add	sp, sp, #4
   13de8:	pop	{pc}		; (ldr pc, [sp], #4)

00013dec <table_get_float@@Base>:
   13dec:	str	r4, [sp, #-8]!
   13df0:	str	lr, [sp, #4]
   13df4:	bl	13bf4 <table_get@@Base>
   13df8:	vldr	s0, [r0]
   13dfc:	ldr	r4, [sp]
   13e00:	add	sp, sp, #4
   13e04:	pop	{pc}		; (ldr pc, [sp], #4)

00013e08 <table_get_double@@Base>:
   13e08:	str	r4, [sp, #-8]!
   13e0c:	str	lr, [sp, #4]
   13e10:	bl	13bf4 <table_get@@Base>
   13e14:	vldr	d0, [r0]
   13e18:	ldr	r4, [sp]
   13e1c:	add	sp, sp, #4
   13e20:	pop	{pc}		; (ldr pc, [sp], #4)

00013e24 <table_get_ldouble@@Base>:
   13e24:	str	r4, [sp, #-8]!
   13e28:	str	lr, [sp, #4]
   13e2c:	bl	13bf4 <table_get@@Base>
   13e30:	vldr	d0, [r0]
   13e34:	ldr	r4, [sp]
   13e38:	add	sp, sp, #4
   13e3c:	pop	{pc}		; (ldr pc, [sp], #4)

00013e40 <table_get_char@@Base>:
   13e40:	str	r4, [sp, #-8]!
   13e44:	str	lr, [sp, #4]
   13e48:	bl	13bf4 <table_get@@Base>
   13e4c:	ldrb	r0, [r0]
   13e50:	ldr	r4, [sp]
   13e54:	add	sp, sp, #4
   13e58:	pop	{pc}		; (ldr pc, [sp], #4)

00013e5c <table_get_uchar@@Base>:
   13e5c:	str	r4, [sp, #-8]!
   13e60:	str	lr, [sp, #4]
   13e64:	bl	13bf4 <table_get@@Base>
   13e68:	ldrb	r0, [r0]
   13e6c:	ldr	r4, [sp]
   13e70:	add	sp, sp, #4
   13e74:	pop	{pc}		; (ldr pc, [sp], #4)

00013e78 <table_get_string@@Base>:
   13e78:	str	r4, [sp, #-8]!
   13e7c:	str	lr, [sp, #4]
   13e80:	bl	13bf4 <table_get@@Base>
   13e84:	ldr	r4, [sp]
   13e88:	add	sp, sp, #4
   13e8c:	pop	{pc}		; (ldr pc, [sp], #4)

00013e90 <table_get_ptr@@Base>:
   13e90:	str	r4, [sp, #-8]!
   13e94:	str	lr, [sp, #4]
   13e98:	bl	13bf4 <table_get@@Base>
   13e9c:	ldr	r4, [sp]
   13ea0:	add	sp, sp, #4
   13ea4:	pop	{pc}		; (ldr pc, [sp], #4)

00013ea8 <table_row_init@@Base>:
   13ea8:	strd	r4, [sp, #-16]!
   13eac:	str	r6, [sp, #8]
   13eb0:	str	lr, [sp, #12]
   13eb4:	mov	r5, r1
   13eb8:	ldr	r4, [r0, #16]
   13ebc:	ldr	r0, [r0, #12]
   13ec0:	lsl	r0, r0, #2
   13ec4:	bl	11b68 <malloc@plt>
   13ec8:	str	r0, [r4, r5, lsl #2]
   13ecc:	ldrd	r4, [sp]
   13ed0:	ldr	r6, [sp, #8]
   13ed4:	add	sp, sp, #12
   13ed8:	pop	{pc}		; (ldr pc, [sp], #4)

00013edc <table_row_destroy@@Base>:
   13edc:	strd	r4, [sp, #-24]!	; 0xffffffe8
   13ee0:	strd	r6, [sp, #8]
   13ee4:	str	r8, [sp, #16]
   13ee8:	str	lr, [sp, #20]
   13eec:	mov	r6, r0
   13ef0:	mov	r5, r1
   13ef4:	bl	12f44 <table_get_column_length@@Base>
   13ef8:	ldr	r8, [r6, #16]
   13efc:	subs	r7, r0, #0
   13f00:	ble	13f24 <table_row_destroy@@Base+0x48>
   13f04:	mov	r4, #0
   13f08:	mov	r2, r4
   13f0c:	mov	r1, r5
   13f10:	mov	r0, r6
   13f14:	bl	16010 <table_cell_destroy@@Base>
   13f18:	add	r4, r4, #1
   13f1c:	cmp	r7, r4
   13f20:	bne	13f08 <table_row_destroy@@Base+0x2c>
   13f24:	ldr	r0, [r8, r5, lsl #2]
   13f28:	cmp	r0, #0
   13f2c:	beq	13f34 <table_row_destroy@@Base+0x58>
   13f30:	bl	11b38 <free@plt>
   13f34:	ldrd	r4, [sp]
   13f38:	ldrd	r6, [sp, #8]
   13f3c:	ldr	r8, [sp, #16]
   13f40:	add	sp, sp, #20
   13f44:	pop	{pc}		; (ldr pc, [sp], #4)

00013f48 <table_get_row_length@@Base>:
   13f48:	ldr	r0, [r0, #20]
   13f4c:	bx	lr

00013f50 <table_add_row@@Base>:
   13f50:	strd	r4, [sp, #-24]!	; 0xffffffe8
   13f54:	strd	r6, [sp, #8]
   13f58:	str	r8, [sp, #16]
   13f5c:	str	lr, [sp, #20]
   13f60:	mov	r4, r0
   13f64:	ldr	r1, [r0, #24]
   13f68:	ldr	r2, [r0, #20]
   13f6c:	udiv	r3, r2, r1
   13f70:	mls	r3, r1, r3, r2
   13f74:	cmp	r3, #0
   13f78:	beq	13ff4 <table_add_row@@Base+0xa4>
   13f7c:	ldr	r7, [r4, #20]
   13f80:	mov	r0, r4
   13f84:	bl	12f44 <table_get_column_length@@Base>
   13f88:	mov	r6, r0
   13f8c:	mov	r1, r7
   13f90:	mov	r0, r4
   13f94:	bl	13ea8 <table_row_init@@Base>
   13f98:	cmp	r6, #0
   13f9c:	ble	13fc0 <table_add_row@@Base+0x70>
   13fa0:	mov	r5, #0
   13fa4:	mov	r2, r5
   13fa8:	mov	r1, r7
   13fac:	mov	r0, r4
   13fb0:	bl	15ff0 <table_cell_init@@Base>
   13fb4:	add	r5, r5, #1
   13fb8:	cmp	r6, r5
   13fbc:	bne	13fa4 <table_add_row@@Base+0x54>
   13fc0:	mov	r3, #2
   13fc4:	mvn	r2, #0
   13fc8:	ldr	r1, [r4, #20]
   13fcc:	mov	r0, r4
   13fd0:	bl	12e10 <table_notify@@Base>
   13fd4:	ldr	r0, [r4, #20]
   13fd8:	add	r3, r0, #1
   13fdc:	str	r3, [r4, #20]
   13fe0:	ldrd	r4, [sp]
   13fe4:	ldrd	r6, [sp, #8]
   13fe8:	ldr	r8, [sp, #16]
   13fec:	add	sp, sp, #20
   13ff0:	pop	{pc}		; (ldr pc, [sp], #4)
   13ff4:	ldr	r3, [r0, #28]
   13ff8:	add	r1, r1, r3
   13ffc:	str	r1, [r0, #28]
   14000:	lsl	r1, r1, #2
   14004:	ldr	r0, [r0, #16]
   14008:	bl	11b50 <realloc@plt>
   1400c:	str	r0, [r4, #16]
   14010:	b	13f7c <table_add_row@@Base+0x2c>

00014014 <table_remove_row@@Base>:
   14014:	strd	r4, [sp, #-24]!	; 0xffffffe8
   14018:	strd	r6, [sp, #8]
   1401c:	str	r8, [sp, #16]
   14020:	str	lr, [sp, #20]
   14024:	mov	r4, r0
   14028:	mov	r5, r1
   1402c:	ldr	r7, [r0, #20]
   14030:	bl	12f44 <table_get_column_length@@Base>
   14034:	subs	r8, r0, #0
   14038:	ble	14088 <table_remove_row@@Base+0x74>
   1403c:	mov	r6, #0
   14040:	b	14054 <table_remove_row@@Base+0x40>
   14044:	bl	11b38 <free@plt>
   14048:	add	r6, r6, #1
   1404c:	cmp	r8, r6
   14050:	beq	14088 <table_remove_row@@Base+0x74>
   14054:	mov	r1, r6
   14058:	mov	r0, r4
   1405c:	bl	12fc4 <table_get_column_data_type@@Base>
   14060:	cmp	r0, #23
   14064:	beq	14048 <table_remove_row@@Base+0x34>
   14068:	mov	r2, r6
   1406c:	mov	r1, r5
   14070:	mov	r0, r4
   14074:	bl	15fcc <table_get_cell_ptr@@Base>
   14078:	ldr	r0, [r0]
   1407c:	cmp	r0, #0
   14080:	bne	14044 <table_remove_row@@Base+0x30>
   14084:	b	14048 <table_remove_row@@Base+0x34>
   14088:	lsl	r6, r5, #2
   1408c:	ldr	r3, [r4, #16]
   14090:	ldr	r0, [r3, r5, lsl #2]
   14094:	cmp	r0, #0
   14098:	beq	140a0 <table_remove_row@@Base+0x8c>
   1409c:	bl	11b38 <free@plt>
   140a0:	sub	r3, r7, #1
   140a4:	cmp	r5, r3
   140a8:	bge	140d4 <table_remove_row@@Base+0xc0>
   140ac:	mov	r7, r3
   140b0:	mov	r3, r5
   140b4:	ldr	r2, [r4, #16]
   140b8:	add	r1, r2, r6
   140bc:	add	r6, r6, #4
   140c0:	ldr	r2, [r2, r6]
   140c4:	str	r2, [r1]
   140c8:	add	r3, r3, #1
   140cc:	cmp	r7, r3
   140d0:	bne	140b4 <table_remove_row@@Base+0xa0>
   140d4:	ldr	r3, [r4, #20]
   140d8:	sub	r3, r3, #1
   140dc:	str	r3, [r4, #20]
   140e0:	ldr	r1, [r4, #24]
   140e4:	udiv	r2, r3, r1
   140e8:	mls	r3, r1, r2, r3
   140ec:	cmp	r3, #0
   140f0:	beq	14120 <table_remove_row@@Base+0x10c>
   140f4:	mov	r3, #4
   140f8:	mvn	r2, #0
   140fc:	mov	r1, r5
   14100:	mov	r0, r4
   14104:	bl	12e10 <table_notify@@Base>
   14108:	mov	r0, #0
   1410c:	ldrd	r4, [sp]
   14110:	ldrd	r6, [sp, #8]
   14114:	ldr	r8, [sp, #16]
   14118:	add	sp, sp, #20
   1411c:	pop	{pc}		; (ldr pc, [sp], #4)
   14120:	ldr	r3, [r4, #28]
   14124:	sub	r1, r3, r1
   14128:	str	r1, [r4, #28]
   1412c:	lsl	r1, r1, #2
   14130:	ldr	r0, [r4, #16]
   14134:	bl	11b50 <realloc@plt>
   14138:	str	r0, [r4, #16]
   1413c:	b	140f4 <table_remove_row@@Base+0xe0>

00014140 <table_get_row_ptr@@Base>:
   14140:	ldr	r0, [r0, #16]
   14144:	add	r0, r0, r1, lsl #2
   14148:	bx	lr

0001414c <table_set_row_ptr@@Base>:
   1414c:	ldr	r3, [r0, #16]
   14150:	ldr	r2, [r2]
   14154:	str	r2, [r3, r1, lsl #2]
   14158:	bx	lr

0001415c <table_set@@Base>:
   1415c:	strd	r4, [sp, #-32]!	; 0xffffffe0
   14160:	strd	r6, [sp, #8]
   14164:	strd	r8, [sp, #16]
   14168:	str	sl, [sp, #24]
   1416c:	str	lr, [sp, #28]
   14170:	mov	r5, r0
   14174:	mov	r9, r1
   14178:	mov	r6, r2
   1417c:	mov	r7, r3
   14180:	ldr	r4, [sp, #32]
   14184:	bl	15fcc <table_get_cell_ptr@@Base>
   14188:	mov	r8, r0
   1418c:	mov	r1, r6
   14190:	mov	r0, r5
   14194:	bl	132c0 <table_get_col_ptr@@Base>
   14198:	cmp	r4, #23
   1419c:	ldrls	pc, [pc, r4, lsl #2]
   141a0:	b	14858 <table_set@@Base+0x6fc>
   141a4:	andeq	r4, r1, r0, ror r2
   141a8:			; <UNDEFINED> instruction: 0x000142b0
   141ac:	strdeq	r4, [r1], -r0
   141b0:	andeq	r4, r1, r0, lsr r3
   141b4:	andeq	r4, r1, r0, ror r3
   141b8:			; <UNDEFINED> instruction: 0x000143b0
   141bc:	strdeq	r4, [r1], -r0
   141c0:	andeq	r4, r1, r0, lsr r4
   141c4:	andeq	r4, r1, r0, ror r4
   141c8:			; <UNDEFINED> instruction: 0x000144b8
   141cc:	andeq	r4, r1, r0, lsl #10
   141d0:	andeq	r4, r1, r0, asr #10
   141d4:	andeq	r4, r1, r0, lsl #11
   141d8:	andeq	r4, r1, r4, asr #11
   141dc:	andeq	r4, r1, r8, lsl #12
   141e0:	andeq	r4, r1, r4, asr r6
   141e4:	andeq	r4, r1, r0, lsr #13
   141e8:	andeq	r4, r1, r4, ror #13
   141ec:	andeq	r4, r1, r0, lsr r7
   141f0:			; <UNDEFINED> instruction: 0x000147b8
   141f4:	strdeq	r4, [r1], -ip
   141f8:	andeq	r4, r1, ip, ror r7
   141fc:	andeq	r4, r1, r4, lsl #4
   14200:	andeq	r4, r1, r0, asr #16
   14204:	ldr	r3, [r0, #4]
   14208:	cmp	r3, #22
   1420c:	bne	14860 <table_set@@Base+0x704>
   14210:	ldr	r0, [r8]
   14214:	cmp	r0, #0
   14218:	beq	14254 <table_set@@Base+0xf8>
   1421c:	ldrb	r3, [r7]
   14220:	strb	r3, [r0]
   14224:	mov	r3, #1
   14228:	mov	r2, r6
   1422c:	mov	r1, r9
   14230:	mov	r0, r5
   14234:	bl	12e10 <table_notify@@Base>
   14238:	mov	r0, #0
   1423c:	ldrd	r4, [sp]
   14240:	ldrd	r6, [sp, #8]
   14244:	ldrd	r8, [sp, #16]
   14248:	ldr	sl, [sp, #24]
   1424c:	add	sp, sp, #28
   14250:	pop	{pc}		; (ldr pc, [sp], #4)
   14254:	mov	r0, #1
   14258:	bl	11b68 <malloc@plt>
   1425c:	str	r0, [r8]
   14260:	cmp	r0, #0
   14264:	bne	1421c <table_set@@Base+0xc0>
   14268:	mvn	r0, #0
   1426c:	b	1423c <table_set@@Base+0xe0>
   14270:	ldr	r3, [r0, #4]
   14274:	cmp	r3, #0
   14278:	bne	14868 <table_set@@Base+0x70c>
   1427c:	ldr	r0, [r8]
   14280:	cmp	r0, #0
   14284:	beq	14294 <table_set@@Base+0x138>
   14288:	ldr	r3, [r7]
   1428c:	str	r3, [r0]
   14290:	b	14224 <table_set@@Base+0xc8>
   14294:	mov	r0, #4
   14298:	bl	11b68 <malloc@plt>
   1429c:	str	r0, [r8]
   142a0:	cmp	r0, #0
   142a4:	bne	14288 <table_set@@Base+0x12c>
   142a8:	mvn	r0, #0
   142ac:	b	1423c <table_set@@Base+0xe0>
   142b0:	ldr	r3, [r0, #4]
   142b4:	cmp	r3, #1
   142b8:	bne	14870 <table_set@@Base+0x714>
   142bc:	ldr	r0, [r8]
   142c0:	cmp	r0, #0
   142c4:	beq	142d4 <table_set@@Base+0x178>
   142c8:	ldr	r3, [r7]
   142cc:	str	r3, [r0]
   142d0:	b	14224 <table_set@@Base+0xc8>
   142d4:	mov	r0, #4
   142d8:	bl	11b68 <malloc@plt>
   142dc:	str	r0, [r8]
   142e0:	cmp	r0, #0
   142e4:	bne	142c8 <table_set@@Base+0x16c>
   142e8:	mvn	r0, #0
   142ec:	b	1423c <table_set@@Base+0xe0>
   142f0:	ldr	r3, [r0, #4]
   142f4:	cmp	r3, #2
   142f8:	bne	14878 <table_set@@Base+0x71c>
   142fc:	ldr	r0, [r8]
   14300:	cmp	r0, #0
   14304:	beq	14314 <table_set@@Base+0x1b8>
   14308:	ldrb	r3, [r7]
   1430c:	strb	r3, [r0]
   14310:	b	14224 <table_set@@Base+0xc8>
   14314:	mov	r0, #1
   14318:	bl	11b68 <malloc@plt>
   1431c:	str	r0, [r8]
   14320:	cmp	r0, #0
   14324:	bne	14308 <table_set@@Base+0x1ac>
   14328:	mvn	r0, #0
   1432c:	b	1423c <table_set@@Base+0xe0>
   14330:	ldr	r3, [r0, #4]
   14334:	cmp	r3, #3
   14338:	bne	14880 <table_set@@Base+0x724>
   1433c:	ldr	r0, [r8]
   14340:	cmp	r0, #0
   14344:	beq	14354 <table_set@@Base+0x1f8>
   14348:	ldrb	r3, [r7]
   1434c:	strb	r3, [r0]
   14350:	b	14224 <table_set@@Base+0xc8>
   14354:	mov	r0, #1
   14358:	bl	11b68 <malloc@plt>
   1435c:	str	r0, [r8]
   14360:	cmp	r0, #0
   14364:	bne	14348 <table_set@@Base+0x1ec>
   14368:	mvn	r0, #0
   1436c:	b	1423c <table_set@@Base+0xe0>
   14370:	ldr	r3, [r0, #4]
   14374:	cmp	r3, #4
   14378:	bne	14888 <table_set@@Base+0x72c>
   1437c:	ldr	r0, [r8]
   14380:	cmp	r0, #0
   14384:	beq	14394 <table_set@@Base+0x238>
   14388:	ldrh	r3, [r7]
   1438c:	strh	r3, [r0]
   14390:	b	14224 <table_set@@Base+0xc8>
   14394:	mov	r0, #2
   14398:	bl	11b68 <malloc@plt>
   1439c:	str	r0, [r8]
   143a0:	cmp	r0, #0
   143a4:	bne	14388 <table_set@@Base+0x22c>
   143a8:	mvn	r0, #0
   143ac:	b	1423c <table_set@@Base+0xe0>
   143b0:	ldr	r3, [r0, #4]
   143b4:	cmp	r3, #5
   143b8:	bne	14890 <table_set@@Base+0x734>
   143bc:	ldr	r0, [r8]
   143c0:	cmp	r0, #0
   143c4:	beq	143d4 <table_set@@Base+0x278>
   143c8:	ldrh	r3, [r7]
   143cc:	strh	r3, [r0]
   143d0:	b	14224 <table_set@@Base+0xc8>
   143d4:	mov	r0, #2
   143d8:	bl	11b68 <malloc@plt>
   143dc:	str	r0, [r8]
   143e0:	cmp	r0, #0
   143e4:	bne	143c8 <table_set@@Base+0x26c>
   143e8:	mvn	r0, #0
   143ec:	b	1423c <table_set@@Base+0xe0>
   143f0:	ldr	r3, [r0, #4]
   143f4:	cmp	r3, #6
   143f8:	bne	14898 <table_set@@Base+0x73c>
   143fc:	ldr	r0, [r8]
   14400:	cmp	r0, #0
   14404:	beq	14414 <table_set@@Base+0x2b8>
   14408:	ldr	r3, [r7]
   1440c:	str	r3, [r0]
   14410:	b	14224 <table_set@@Base+0xc8>
   14414:	mov	r0, #4
   14418:	bl	11b68 <malloc@plt>
   1441c:	str	r0, [r8]
   14420:	cmp	r0, #0
   14424:	bne	14408 <table_set@@Base+0x2ac>
   14428:	mvn	r0, #0
   1442c:	b	1423c <table_set@@Base+0xe0>
   14430:	ldr	r3, [r0, #4]
   14434:	cmp	r3, #7
   14438:	bne	148a0 <table_set@@Base+0x744>
   1443c:	ldr	r0, [r8]
   14440:	cmp	r0, #0
   14444:	beq	14454 <table_set@@Base+0x2f8>
   14448:	ldr	r3, [r7]
   1444c:	str	r3, [r0]
   14450:	b	14224 <table_set@@Base+0xc8>
   14454:	mov	r0, #4
   14458:	bl	11b68 <malloc@plt>
   1445c:	str	r0, [r8]
   14460:	cmp	r0, #0
   14464:	bne	14448 <table_set@@Base+0x2ec>
   14468:	mvn	r0, #0
   1446c:	b	1423c <table_set@@Base+0xe0>
   14470:	ldr	r3, [r0, #4]
   14474:	cmp	r3, #8
   14478:	bne	148a8 <table_set@@Base+0x74c>
   1447c:	ldr	r0, [r8]
   14480:	cmp	r0, #0
   14484:	beq	1449c <table_set@@Base+0x340>
   14488:	ldr	r2, [r7]
   1448c:	ldr	r3, [r7, #4]
   14490:	str	r2, [r0]
   14494:	str	r3, [r0, #4]
   14498:	b	14224 <table_set@@Base+0xc8>
   1449c:	mov	r0, #8
   144a0:	bl	11b68 <malloc@plt>
   144a4:	str	r0, [r8]
   144a8:	cmp	r0, #0
   144ac:	bne	14488 <table_set@@Base+0x32c>
   144b0:	mvn	r0, #0
   144b4:	b	1423c <table_set@@Base+0xe0>
   144b8:	ldr	r3, [r0, #4]
   144bc:	cmp	r3, #9
   144c0:	bne	148b0 <table_set@@Base+0x754>
   144c4:	ldr	r0, [r8]
   144c8:	cmp	r0, #0
   144cc:	beq	144e4 <table_set@@Base+0x388>
   144d0:	ldr	r2, [r7]
   144d4:	ldr	r3, [r7, #4]
   144d8:	str	r2, [r0]
   144dc:	str	r3, [r0, #4]
   144e0:	b	14224 <table_set@@Base+0xc8>
   144e4:	mov	r0, #8
   144e8:	bl	11b68 <malloc@plt>
   144ec:	str	r0, [r8]
   144f0:	cmp	r0, #0
   144f4:	bne	144d0 <table_set@@Base+0x374>
   144f8:	mvn	r0, #0
   144fc:	b	1423c <table_set@@Base+0xe0>
   14500:	ldr	r3, [r0, #4]
   14504:	cmp	r3, #10
   14508:	bne	148b8 <table_set@@Base+0x75c>
   1450c:	ldr	r0, [r8]
   14510:	cmp	r0, #0
   14514:	beq	14524 <table_set@@Base+0x3c8>
   14518:	ldrh	r3, [r7]
   1451c:	strh	r3, [r0]
   14520:	b	14224 <table_set@@Base+0xc8>
   14524:	mov	r0, #2
   14528:	bl	11b68 <malloc@plt>
   1452c:	str	r0, [r8]
   14530:	cmp	r0, #0
   14534:	bne	14518 <table_set@@Base+0x3bc>
   14538:	mvn	r0, #0
   1453c:	b	1423c <table_set@@Base+0xe0>
   14540:	ldr	r3, [r0, #4]
   14544:	cmp	r3, #11
   14548:	bne	148c0 <table_set@@Base+0x764>
   1454c:	ldr	r0, [r8]
   14550:	cmp	r0, #0
   14554:	beq	14564 <table_set@@Base+0x408>
   14558:	ldrh	r3, [r7]
   1455c:	strh	r3, [r0]
   14560:	b	14224 <table_set@@Base+0xc8>
   14564:	mov	r0, #2
   14568:	bl	11b68 <malloc@plt>
   1456c:	str	r0, [r8]
   14570:	cmp	r0, #0
   14574:	bne	14558 <table_set@@Base+0x3fc>
   14578:	mvn	r0, #0
   1457c:	b	1423c <table_set@@Base+0xe0>
   14580:	ldr	r3, [r0, #4]
   14584:	cmp	r3, #12
   14588:	mvnne	r0, #0
   1458c:	bne	1423c <table_set@@Base+0xe0>
   14590:	ldr	r0, [r8]
   14594:	cmp	r0, #0
   14598:	beq	145a8 <table_set@@Base+0x44c>
   1459c:	ldr	r3, [r7]
   145a0:	str	r3, [r0]
   145a4:	b	14224 <table_set@@Base+0xc8>
   145a8:	mov	r0, #4
   145ac:	bl	11b68 <malloc@plt>
   145b0:	str	r0, [r8]
   145b4:	cmp	r0, #0
   145b8:	bne	1459c <table_set@@Base+0x440>
   145bc:	mvn	r0, #0
   145c0:	b	1423c <table_set@@Base+0xe0>
   145c4:	ldr	r3, [r0, #4]
   145c8:	cmp	r3, #13
   145cc:	mvnne	r0, #0
   145d0:	bne	1423c <table_set@@Base+0xe0>
   145d4:	ldr	r0, [r8]
   145d8:	cmp	r0, #0
   145dc:	beq	145ec <table_set@@Base+0x490>
   145e0:	ldr	r3, [r7]
   145e4:	str	r3, [r0]
   145e8:	b	14224 <table_set@@Base+0xc8>
   145ec:	mov	r0, #4
   145f0:	bl	11b68 <malloc@plt>
   145f4:	str	r0, [r8]
   145f8:	cmp	r0, #0
   145fc:	bne	145e0 <table_set@@Base+0x484>
   14600:	mvn	r0, #0
   14604:	b	1423c <table_set@@Base+0xe0>
   14608:	ldr	r3, [r0, #4]
   1460c:	cmp	r3, #14
   14610:	mvnne	r0, #0
   14614:	bne	1423c <table_set@@Base+0xe0>
   14618:	ldr	r0, [r8]
   1461c:	cmp	r0, #0
   14620:	beq	14638 <table_set@@Base+0x4dc>
   14624:	ldr	r2, [r7]
   14628:	ldr	r3, [r7, #4]
   1462c:	str	r2, [r0]
   14630:	str	r3, [r0, #4]
   14634:	b	14224 <table_set@@Base+0xc8>
   14638:	mov	r0, #8
   1463c:	bl	11b68 <malloc@plt>
   14640:	str	r0, [r8]
   14644:	cmp	r0, #0
   14648:	bne	14624 <table_set@@Base+0x4c8>
   1464c:	mvn	r0, #0
   14650:	b	1423c <table_set@@Base+0xe0>
   14654:	ldr	r3, [r0, #4]
   14658:	cmp	r3, #15
   1465c:	mvnne	r0, #0
   14660:	bne	1423c <table_set@@Base+0xe0>
   14664:	ldr	r0, [r8]
   14668:	cmp	r0, #0
   1466c:	beq	14684 <table_set@@Base+0x528>
   14670:	ldr	r2, [r7]
   14674:	ldr	r3, [r7, #4]
   14678:	str	r2, [r0]
   1467c:	str	r3, [r0, #4]
   14680:	b	14224 <table_set@@Base+0xc8>
   14684:	mov	r0, #8
   14688:	bl	11b68 <malloc@plt>
   1468c:	str	r0, [r8]
   14690:	cmp	r0, #0
   14694:	bne	14670 <table_set@@Base+0x514>
   14698:	mvn	r0, #0
   1469c:	b	1423c <table_set@@Base+0xe0>
   146a0:	ldr	r3, [r0, #4]
   146a4:	cmp	r3, #16
   146a8:	mvnne	r0, #0
   146ac:	bne	1423c <table_set@@Base+0xe0>
   146b0:	ldr	r0, [r8]
   146b4:	cmp	r0, #0
   146b8:	beq	146c8 <table_set@@Base+0x56c>
   146bc:	ldr	r3, [r7]
   146c0:	str	r3, [r0]
   146c4:	b	14224 <table_set@@Base+0xc8>
   146c8:	mov	r0, #4
   146cc:	bl	11b68 <malloc@plt>
   146d0:	str	r0, [r8]
   146d4:	cmp	r0, #0
   146d8:	bne	146bc <table_set@@Base+0x560>
   146dc:	mvn	r0, #0
   146e0:	b	1423c <table_set@@Base+0xe0>
   146e4:	ldr	r3, [r0, #4]
   146e8:	cmp	r3, #17
   146ec:	mvnne	r0, #0
   146f0:	bne	1423c <table_set@@Base+0xe0>
   146f4:	ldr	r0, [r8]
   146f8:	cmp	r0, #0
   146fc:	beq	14714 <table_set@@Base+0x5b8>
   14700:	ldr	r2, [r7]
   14704:	ldr	r3, [r7, #4]
   14708:	str	r2, [r0]
   1470c:	str	r3, [r0, #4]
   14710:	b	14224 <table_set@@Base+0xc8>
   14714:	mov	r0, #8
   14718:	bl	11b68 <malloc@plt>
   1471c:	str	r0, [r8]
   14720:	cmp	r0, #0
   14724:	bne	14700 <table_set@@Base+0x5a4>
   14728:	mvn	r0, #0
   1472c:	b	1423c <table_set@@Base+0xe0>
   14730:	ldr	r3, [r0, #4]
   14734:	cmp	r3, #18
   14738:	mvnne	r0, #0
   1473c:	bne	1423c <table_set@@Base+0xe0>
   14740:	ldr	r0, [r8]
   14744:	cmp	r0, #0
   14748:	beq	14760 <table_set@@Base+0x604>
   1474c:	ldr	r2, [r7]
   14750:	ldr	r3, [r7, #4]
   14754:	str	r2, [r0]
   14758:	str	r3, [r0, #4]
   1475c:	b	14224 <table_set@@Base+0xc8>
   14760:	mov	r0, #8
   14764:	bl	11b68 <malloc@plt>
   14768:	str	r0, [r8]
   1476c:	cmp	r0, #0
   14770:	bne	1474c <table_set@@Base+0x5f0>
   14774:	mvn	r0, #0
   14778:	b	1423c <table_set@@Base+0xe0>
   1477c:	ldr	r3, [r0, #4]
   14780:	cmp	r3, #21
   14784:	mvnne	r0, #0
   14788:	bne	1423c <table_set@@Base+0xe0>
   1478c:	mov	r0, r7
   14790:	bl	11b8c <strlen@plt>
   14794:	add	r1, r0, #1
   14798:	ldr	r0, [r8]
   1479c:	bl	11b50 <realloc@plt>
   147a0:	str	r0, [r8]
   147a4:	cmp	r0, #0
   147a8:	beq	148c8 <table_set@@Base+0x76c>
   147ac:	mov	r1, r7
   147b0:	bl	11b5c <strcpy@plt>
   147b4:	b	14224 <table_set@@Base+0xc8>
   147b8:	ldr	r3, [r0, #4]
   147bc:	cmp	r3, #19
   147c0:	mvnne	r0, #0
   147c4:	bne	1423c <table_set@@Base+0xe0>
   147c8:	ldr	r0, [r8]
   147cc:	cmp	r0, #0
   147d0:	beq	147e0 <table_set@@Base+0x684>
   147d4:	ldrb	r3, [r7]
   147d8:	strb	r3, [r0]
   147dc:	b	14224 <table_set@@Base+0xc8>
   147e0:	mov	r0, #1
   147e4:	bl	11b68 <malloc@plt>
   147e8:	str	r0, [r8]
   147ec:	cmp	r0, #0
   147f0:	bne	147d4 <table_set@@Base+0x678>
   147f4:	mvn	r0, #0
   147f8:	b	1423c <table_set@@Base+0xe0>
   147fc:	ldr	r3, [r0, #4]
   14800:	cmp	r3, #20
   14804:	mvnne	r0, #0
   14808:	bne	1423c <table_set@@Base+0xe0>
   1480c:	ldr	r0, [r8]
   14810:	cmp	r0, #0
   14814:	beq	14824 <table_set@@Base+0x6c8>
   14818:	ldrb	r3, [r7]
   1481c:	strb	r3, [r0]
   14820:	b	14224 <table_set@@Base+0xc8>
   14824:	mov	r0, #1
   14828:	bl	11b68 <malloc@plt>
   1482c:	str	r0, [r8]
   14830:	cmp	r0, #0
   14834:	bne	14818 <table_set@@Base+0x6bc>
   14838:	mvn	r0, #0
   1483c:	b	1423c <table_set@@Base+0xe0>
   14840:	ldr	r3, [r0, #4]
   14844:	cmp	r3, #23
   14848:	mvnne	r0, #0
   1484c:	bne	1423c <table_set@@Base+0xe0>
   14850:	str	r7, [r8]
   14854:	b	14224 <table_set@@Base+0xc8>
   14858:	mvn	r0, #0
   1485c:	b	1423c <table_set@@Base+0xe0>
   14860:	mvn	r0, #0
   14864:	b	1423c <table_set@@Base+0xe0>
   14868:	mvn	r0, #0
   1486c:	b	1423c <table_set@@Base+0xe0>
   14870:	mvn	r0, #0
   14874:	b	1423c <table_set@@Base+0xe0>
   14878:	mvn	r0, #0
   1487c:	b	1423c <table_set@@Base+0xe0>
   14880:	mvn	r0, #0
   14884:	b	1423c <table_set@@Base+0xe0>
   14888:	mvn	r0, #0
   1488c:	b	1423c <table_set@@Base+0xe0>
   14890:	mvn	r0, #0
   14894:	b	1423c <table_set@@Base+0xe0>
   14898:	mvn	r0, #0
   1489c:	b	1423c <table_set@@Base+0xe0>
   148a0:	mvn	r0, #0
   148a4:	b	1423c <table_set@@Base+0xe0>
   148a8:	mvn	r0, #0
   148ac:	b	1423c <table_set@@Base+0xe0>
   148b0:	mvn	r0, #0
   148b4:	b	1423c <table_set@@Base+0xe0>
   148b8:	mvn	r0, #0
   148bc:	b	1423c <table_set@@Base+0xe0>
   148c0:	mvn	r0, #0
   148c4:	b	1423c <table_set@@Base+0xe0>
   148c8:	mvn	r0, #0
   148cc:	b	1423c <table_set@@Base+0xe0>

000148d0 <table_set_bool@@Base>:
   148d0:	push	{lr}		; (str lr, [sp, #-4]!)
   148d4:	sub	sp, sp, #20
   148d8:	strb	r3, [sp, #15]
   148dc:	mov	r3, #22
   148e0:	str	r3, [sp]
   148e4:	add	r3, sp, #15
   148e8:	bl	1415c <table_set@@Base>
   148ec:	add	sp, sp, #20
   148f0:	pop	{pc}		; (ldr pc, [sp], #4)

000148f4 <table_set_int@@Base>:
   148f4:	push	{lr}		; (str lr, [sp, #-4]!)
   148f8:	sub	sp, sp, #20
   148fc:	str	r3, [sp, #12]
   14900:	mov	r3, #0
   14904:	str	r3, [sp]
   14908:	add	r3, sp, #12
   1490c:	bl	1415c <table_set@@Base>
   14910:	add	sp, sp, #20
   14914:	pop	{pc}		; (ldr pc, [sp], #4)

00014918 <table_set_uint@@Base>:
   14918:	push	{lr}		; (str lr, [sp, #-4]!)
   1491c:	sub	sp, sp, #20
   14920:	str	r3, [sp, #12]
   14924:	mov	r3, #1
   14928:	str	r3, [sp]
   1492c:	add	r3, sp, #12
   14930:	bl	1415c <table_set@@Base>
   14934:	add	sp, sp, #20
   14938:	pop	{pc}		; (ldr pc, [sp], #4)

0001493c <table_set_int8@@Base>:
   1493c:	push	{lr}		; (str lr, [sp, #-4]!)
   14940:	sub	sp, sp, #20
   14944:	strb	r3, [sp, #15]
   14948:	mov	r3, #2
   1494c:	str	r3, [sp]
   14950:	add	r3, sp, #15
   14954:	bl	1415c <table_set@@Base>
   14958:	add	sp, sp, #20
   1495c:	pop	{pc}		; (ldr pc, [sp], #4)

00014960 <table_set_uint8@@Base>:
   14960:	push	{lr}		; (str lr, [sp, #-4]!)
   14964:	sub	sp, sp, #20
   14968:	strb	r3, [sp, #15]
   1496c:	mov	r3, #3
   14970:	str	r3, [sp]
   14974:	add	r3, sp, #15
   14978:	bl	1415c <table_set@@Base>
   1497c:	add	sp, sp, #20
   14980:	pop	{pc}		; (ldr pc, [sp], #4)

00014984 <table_set_int16@@Base>:
   14984:	push	{lr}		; (str lr, [sp, #-4]!)
   14988:	sub	sp, sp, #20
   1498c:	strh	r3, [sp, #14]
   14990:	mov	r3, #4
   14994:	str	r3, [sp]
   14998:	add	r3, sp, #14
   1499c:	bl	1415c <table_set@@Base>
   149a0:	add	sp, sp, #20
   149a4:	pop	{pc}		; (ldr pc, [sp], #4)

000149a8 <table_set_uint16@@Base>:
   149a8:	push	{lr}		; (str lr, [sp, #-4]!)
   149ac:	sub	sp, sp, #20
   149b0:	strh	r3, [sp, #14]
   149b4:	mov	r3, #5
   149b8:	str	r3, [sp]
   149bc:	add	r3, sp, #14
   149c0:	bl	1415c <table_set@@Base>
   149c4:	add	sp, sp, #20
   149c8:	pop	{pc}		; (ldr pc, [sp], #4)

000149cc <table_set_int32@@Base>:
   149cc:	push	{lr}		; (str lr, [sp, #-4]!)
   149d0:	sub	sp, sp, #20
   149d4:	str	r3, [sp, #12]
   149d8:	mov	r3, #6
   149dc:	str	r3, [sp]
   149e0:	add	r3, sp, #12
   149e4:	bl	1415c <table_set@@Base>
   149e8:	add	sp, sp, #20
   149ec:	pop	{pc}		; (ldr pc, [sp], #4)

000149f0 <table_set_uint32@@Base>:
   149f0:	push	{lr}		; (str lr, [sp, #-4]!)
   149f4:	sub	sp, sp, #20
   149f8:	str	r3, [sp, #12]
   149fc:	mov	r3, #7
   14a00:	str	r3, [sp]
   14a04:	add	r3, sp, #12
   14a08:	bl	1415c <table_set@@Base>
   14a0c:	add	sp, sp, #20
   14a10:	pop	{pc}		; (ldr pc, [sp], #4)

00014a14 <table_set_int64@@Base>:
   14a14:	push	{lr}		; (str lr, [sp, #-4]!)
   14a18:	sub	sp, sp, #12
   14a1c:	mov	r3, #8
   14a20:	str	r3, [sp]
   14a24:	add	r3, sp, #16
   14a28:	bl	1415c <table_set@@Base>
   14a2c:	add	sp, sp, #12
   14a30:	pop	{pc}		; (ldr pc, [sp], #4)

00014a34 <table_set_uint64@@Base>:
   14a34:	push	{lr}		; (str lr, [sp, #-4]!)
   14a38:	sub	sp, sp, #12
   14a3c:	mov	r3, #9
   14a40:	str	r3, [sp]
   14a44:	add	r3, sp, #16
   14a48:	bl	1415c <table_set@@Base>
   14a4c:	add	sp, sp, #12
   14a50:	pop	{pc}		; (ldr pc, [sp], #4)

00014a54 <table_set_short@@Base>:
   14a54:	push	{lr}		; (str lr, [sp, #-4]!)
   14a58:	sub	sp, sp, #20
   14a5c:	strh	r3, [sp, #14]
   14a60:	mov	r3, #10
   14a64:	str	r3, [sp]
   14a68:	add	r3, sp, #14
   14a6c:	bl	1415c <table_set@@Base>
   14a70:	add	sp, sp, #20
   14a74:	pop	{pc}		; (ldr pc, [sp], #4)

00014a78 <table_set_ushort@@Base>:
   14a78:	push	{lr}		; (str lr, [sp, #-4]!)
   14a7c:	sub	sp, sp, #20
   14a80:	strh	r3, [sp, #14]
   14a84:	mov	r3, #11
   14a88:	str	r3, [sp]
   14a8c:	add	r3, sp, #14
   14a90:	bl	1415c <table_set@@Base>
   14a94:	add	sp, sp, #20
   14a98:	pop	{pc}		; (ldr pc, [sp], #4)

00014a9c <table_set_long@@Base>:
   14a9c:	push	{lr}		; (str lr, [sp, #-4]!)
   14aa0:	sub	sp, sp, #20
   14aa4:	str	r3, [sp, #12]
   14aa8:	mov	r3, #12
   14aac:	str	r3, [sp]
   14ab0:	add	r3, sp, r3
   14ab4:	bl	1415c <table_set@@Base>
   14ab8:	add	sp, sp, #20
   14abc:	pop	{pc}		; (ldr pc, [sp], #4)

00014ac0 <table_set_ulong@@Base>:
   14ac0:	push	{lr}		; (str lr, [sp, #-4]!)
   14ac4:	sub	sp, sp, #20
   14ac8:	str	r3, [sp, #12]
   14acc:	mov	r3, #13
   14ad0:	str	r3, [sp]
   14ad4:	add	r3, sp, #12
   14ad8:	bl	1415c <table_set@@Base>
   14adc:	add	sp, sp, #20
   14ae0:	pop	{pc}		; (ldr pc, [sp], #4)

00014ae4 <table_set_llong@@Base>:
   14ae4:	push	{lr}		; (str lr, [sp, #-4]!)
   14ae8:	sub	sp, sp, #12
   14aec:	mov	r3, #14
   14af0:	str	r3, [sp]
   14af4:	add	r3, sp, #16
   14af8:	bl	1415c <table_set@@Base>
   14afc:	add	sp, sp, #12
   14b00:	pop	{pc}		; (ldr pc, [sp], #4)

00014b04 <table_set_ullong@@Base>:
   14b04:	push	{lr}		; (str lr, [sp, #-4]!)
   14b08:	sub	sp, sp, #12
   14b0c:	mov	r3, #15
   14b10:	str	r3, [sp]
   14b14:	add	r3, sp, #16
   14b18:	bl	1415c <table_set@@Base>
   14b1c:	add	sp, sp, #12
   14b20:	pop	{pc}		; (ldr pc, [sp], #4)

00014b24 <table_set_float@@Base>:
   14b24:	push	{lr}		; (str lr, [sp, #-4]!)
   14b28:	sub	sp, sp, #20
   14b2c:	vstr	s0, [sp, #12]
   14b30:	mov	r3, #16
   14b34:	str	r3, [sp]
   14b38:	add	r3, sp, #12
   14b3c:	bl	1415c <table_set@@Base>
   14b40:	add	sp, sp, #20
   14b44:	pop	{pc}		; (ldr pc, [sp], #4)

00014b48 <table_set_double@@Base>:
   14b48:	push	{lr}		; (str lr, [sp, #-4]!)
   14b4c:	sub	sp, sp, #20
   14b50:	vstr	d0, [sp, #8]
   14b54:	mov	r3, #17
   14b58:	str	r3, [sp]
   14b5c:	add	r3, sp, #8
   14b60:	bl	1415c <table_set@@Base>
   14b64:	add	sp, sp, #20
   14b68:	pop	{pc}		; (ldr pc, [sp], #4)

00014b6c <table_set_ldouble@@Base>:
   14b6c:	push	{lr}		; (str lr, [sp, #-4]!)
   14b70:	sub	sp, sp, #20
   14b74:	vstr	d0, [sp, #8]
   14b78:	mov	r3, #18
   14b7c:	str	r3, [sp]
   14b80:	add	r3, sp, #8
   14b84:	bl	1415c <table_set@@Base>
   14b88:	add	sp, sp, #20
   14b8c:	pop	{pc}		; (ldr pc, [sp], #4)

00014b90 <table_set_string@@Base>:
   14b90:	push	{lr}		; (str lr, [sp, #-4]!)
   14b94:	sub	sp, sp, #12
   14b98:	mov	ip, #21
   14b9c:	str	ip, [sp]
   14ba0:	bl	1415c <table_set@@Base>
   14ba4:	add	sp, sp, #12
   14ba8:	pop	{pc}		; (ldr pc, [sp], #4)

00014bac <table_set_char@@Base>:
   14bac:	push	{lr}		; (str lr, [sp, #-4]!)
   14bb0:	sub	sp, sp, #20
   14bb4:	strb	r3, [sp, #15]
   14bb8:	mov	r3, #19
   14bbc:	str	r3, [sp]
   14bc0:	add	r3, sp, #15
   14bc4:	bl	1415c <table_set@@Base>
   14bc8:	add	sp, sp, #20
   14bcc:	pop	{pc}		; (ldr pc, [sp], #4)

00014bd0 <table_set_uchar@@Base>:
   14bd0:	push	{lr}		; (str lr, [sp, #-4]!)
   14bd4:	sub	sp, sp, #20
   14bd8:	strb	r3, [sp, #15]
   14bdc:	mov	r3, #20
   14be0:	str	r3, [sp]
   14be4:	add	r3, sp, #15
   14be8:	bl	1415c <table_set@@Base>
   14bec:	add	sp, sp, #20
   14bf0:	pop	{pc}		; (ldr pc, [sp], #4)

00014bf4 <table_set_ptr@@Base>:
   14bf4:	push	{lr}		; (str lr, [sp, #-4]!)
   14bf8:	sub	sp, sp, #12
   14bfc:	mov	ip, #23
   14c00:	str	ip, [sp]
   14c04:	bl	1415c <table_set@@Base>
   14c08:	add	sp, sp, #12
   14c0c:	pop	{pc}		; (ldr pc, [sp], #4)

00014c10 <table_serialize@@Base>:
   14c10:	strd	r4, [sp, #-36]!	; 0xffffffdc
   14c14:	strd	r6, [sp, #8]
   14c18:	strd	r8, [sp, #16]
   14c1c:	strd	sl, [sp, #24]
   14c20:	str	lr, [sp, #32]
   14c24:	sub	sp, sp, #4
   14c28:	mov	r6, r0
   14c2c:	mov	r5, r1
   14c30:	bl	13f48 <table_get_row_length@@Base>
   14c34:	mov	r8, r0
   14c38:	mov	r0, r6
   14c3c:	bl	12f44 <table_get_column_length@@Base>
   14c40:	mov	r7, r0
   14c44:	str	r0, [r5]
   14c48:	ldr	r3, [r6, #8]
   14c4c:	str	r3, [r5, #4]
   14c50:	add	r5, r5, #8
   14c54:	cmp	r0, #0
   14c58:	ble	14ca8 <table_serialize@@Base+0x98>
   14c5c:	mov	r4, #0
   14c60:	mov	r1, r4
   14c64:	mov	r0, r6
   14c68:	bl	132b0 <table_get_column_name@@Base>
   14c6c:	mov	sl, r0
   14c70:	bl	11b8c <strlen@plt>
   14c74:	add	r9, r0, #1
   14c78:	mov	r1, r4
   14c7c:	mov	r0, r6
   14c80:	bl	12fc4 <table_get_column_data_type@@Base>
   14c84:	str	r0, [r5], #4
   14c88:	mov	r2, r9
   14c8c:	mov	r1, sl
   14c90:	mov	r0, r5
   14c94:	bl	11bbc <strncpy@plt>
   14c98:	add	r5, r5, r9
   14c9c:	add	r4, r4, #1
   14ca0:	cmp	r7, r4
   14ca4:	bne	14c60 <table_serialize@@Base+0x50>
   14ca8:	str	r8, [r5]
   14cac:	ldr	r3, [r6, #24]
   14cb0:	str	r3, [r5, #4]
   14cb4:	add	r5, r5, #8
   14cb8:	cmp	r8, #0
   14cbc:	movgt	r9, #0
   14cc0:	bgt	15080 <table_serialize@@Base+0x470>
   14cc4:	ldr	r3, [r6, #32]
   14cc8:	str	r3, [r5]
   14ccc:	ldr	r3, [r6, #48]	; 0x30
   14cd0:	str	r3, [r5, #4]
   14cd4:	ldr	r3, [r6, #32]
   14cd8:	cmp	r3, #0
   14cdc:	ble	14d20 <table_serialize@@Base+0x110>
   14ce0:	add	r5, r5, #20
   14ce4:	mov	r3, #0
   14ce8:	ldr	r2, [r6, #36]	; 0x24
   14cec:	ldr	r2, [r2, r3, lsl #2]
   14cf0:	str	r2, [r5, #-12]
   14cf4:	ldr	r2, [r6, #40]	; 0x28
   14cf8:	ldr	r2, [r2, r3, lsl #2]
   14cfc:	str	r2, [r5, #-8]
   14d00:	ldr	r2, [r6, #44]	; 0x2c
   14d04:	ldr	r2, [r2, r3, lsl #2]
   14d08:	str	r2, [r5, #-4]
   14d0c:	add	r3, r3, #1
   14d10:	add	r5, r5, #12
   14d14:	ldr	r2, [r6, #32]
   14d18:	cmp	r2, r3
   14d1c:	bgt	14ce8 <table_serialize@@Base+0xd8>
   14d20:	add	sp, sp, #4
   14d24:	ldrd	r4, [sp]
   14d28:	ldrd	r6, [sp, #8]
   14d2c:	ldrd	r8, [sp, #16]
   14d30:	ldrd	sl, [sp, #24]
   14d34:	add	sp, sp, #32
   14d38:	pop	{pc}		; (ldr pc, [sp], #4)
   14d3c:	mov	r2, r4
   14d40:	mov	r1, r9
   14d44:	mov	r0, r6
   14d48:	bl	13bf4 <table_get@@Base>
   14d4c:	ldrb	r3, [r0]
   14d50:	strb	r3, [r5], #1
   14d54:	add	r4, r4, #1
   14d58:	cmp	r7, r4
   14d5c:	beq	15074 <table_serialize@@Base+0x464>
   14d60:	mov	r1, r4
   14d64:	mov	r0, r6
   14d68:	bl	12fc4 <table_get_column_data_type@@Base>
   14d6c:	cmp	r0, #23
   14d70:	ldrls	pc, [pc, r0, lsl #2]
   14d74:	b	14d54 <table_serialize@@Base+0x144>
   14d78:	ldrdeq	r4, [r1], -r8
   14d7c:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14d80:	andeq	r4, r1, r0, lsl lr
   14d84:	andeq	r4, r1, ip, lsr #28
   14d88:	andeq	r4, r1, r8, asr #28
   14d8c:	andeq	r4, r1, r4, ror #28
   14d90:	andeq	r4, r1, r0, lsl #29
   14d94:	muleq	r1, ip, lr
   14d98:			; <UNDEFINED> instruction: 0x00014eb8
   14d9c:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   14da0:	strdeq	r4, [r1], -r0
   14da4:	andeq	r4, r1, ip, lsl #30
   14da8:	andeq	r4, r1, r8, lsr #30
   14dac:	andeq	r4, r1, r4, asr #30
   14db0:	andeq	r4, r1, r0, ror #30
   14db4:	andeq	r4, r1, ip, ror pc
   14db8:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   14dbc:			; <UNDEFINED> instruction: 0x00014fb4
   14dc0:	ldrdeq	r4, [r1], -r0
   14dc4:	andeq	r5, r1, r0, lsr #32
   14dc8:	andeq	r5, r1, ip, lsr r0
   14dcc:	andeq	r4, r1, ip, ror #31
   14dd0:	andeq	r4, r1, ip, lsr sp
   14dd4:	andeq	r5, r1, r8, asr r0
   14dd8:	mov	r2, r4
   14ddc:	mov	r1, r9
   14de0:	mov	r0, r6
   14de4:	bl	13bf4 <table_get@@Base>
   14de8:	ldr	r3, [r0]
   14dec:	str	r3, [r5], #4
   14df0:	b	14d54 <table_serialize@@Base+0x144>
   14df4:	mov	r2, r4
   14df8:	mov	r1, r9
   14dfc:	mov	r0, r6
   14e00:	bl	13bf4 <table_get@@Base>
   14e04:	ldr	r3, [r0]
   14e08:	str	r3, [r5], #4
   14e0c:	b	14d54 <table_serialize@@Base+0x144>
   14e10:	mov	r2, r4
   14e14:	mov	r1, r9
   14e18:	mov	r0, r6
   14e1c:	bl	13bf4 <table_get@@Base>
   14e20:	ldrsb	r3, [r0]
   14e24:	strb	r3, [r5], #1
   14e28:	b	14d54 <table_serialize@@Base+0x144>
   14e2c:	mov	r2, r4
   14e30:	mov	r1, r9
   14e34:	mov	r0, r6
   14e38:	bl	13bf4 <table_get@@Base>
   14e3c:	ldrb	r3, [r0]
   14e40:	strb	r3, [r5], #1
   14e44:	b	14d54 <table_serialize@@Base+0x144>
   14e48:	mov	r2, r4
   14e4c:	mov	r1, r9
   14e50:	mov	r0, r6
   14e54:	bl	13bf4 <table_get@@Base>
   14e58:	ldrsh	r3, [r0]
   14e5c:	strh	r3, [r5], #2
   14e60:	b	14d54 <table_serialize@@Base+0x144>
   14e64:	mov	r2, r4
   14e68:	mov	r1, r9
   14e6c:	mov	r0, r6
   14e70:	bl	13bf4 <table_get@@Base>
   14e74:	ldrh	r3, [r0]
   14e78:	strh	r3, [r5], #2
   14e7c:	b	14d54 <table_serialize@@Base+0x144>
   14e80:	mov	r2, r4
   14e84:	mov	r1, r9
   14e88:	mov	r0, r6
   14e8c:	bl	13bf4 <table_get@@Base>
   14e90:	ldr	r3, [r0]
   14e94:	str	r3, [r5], #4
   14e98:	b	14d54 <table_serialize@@Base+0x144>
   14e9c:	mov	r2, r4
   14ea0:	mov	r1, r9
   14ea4:	mov	r0, r6
   14ea8:	bl	13bf4 <table_get@@Base>
   14eac:	ldr	r3, [r0]
   14eb0:	str	r3, [r5], #4
   14eb4:	b	14d54 <table_serialize@@Base+0x144>
   14eb8:	mov	r2, r4
   14ebc:	mov	r1, r9
   14ec0:	mov	r0, r6
   14ec4:	bl	13bf4 <table_get@@Base>
   14ec8:	ldrd	r2, [r0]
   14ecc:	strd	r2, [r5], #8
   14ed0:	b	14d54 <table_serialize@@Base+0x144>
   14ed4:	mov	r2, r4
   14ed8:	mov	r1, r9
   14edc:	mov	r0, r6
   14ee0:	bl	13bf4 <table_get@@Base>
   14ee4:	ldrd	r2, [r0]
   14ee8:	strd	r2, [r5], #8
   14eec:	b	14d54 <table_serialize@@Base+0x144>
   14ef0:	mov	r2, r4
   14ef4:	mov	r1, r9
   14ef8:	mov	r0, r6
   14efc:	bl	13bf4 <table_get@@Base>
   14f00:	ldrsh	r3, [r0]
   14f04:	strh	r3, [r5], #2
   14f08:	b	14d54 <table_serialize@@Base+0x144>
   14f0c:	mov	r2, r4
   14f10:	mov	r1, r9
   14f14:	mov	r0, r6
   14f18:	bl	13bf4 <table_get@@Base>
   14f1c:	ldrh	r3, [r0]
   14f20:	strh	r3, [r5], #2
   14f24:	b	14d54 <table_serialize@@Base+0x144>
   14f28:	mov	r2, r4
   14f2c:	mov	r1, r9
   14f30:	mov	r0, r6
   14f34:	bl	13bf4 <table_get@@Base>
   14f38:	ldr	r3, [r0]
   14f3c:	str	r3, [r5], #4
   14f40:	b	14d54 <table_serialize@@Base+0x144>
   14f44:	mov	r2, r4
   14f48:	mov	r1, r9
   14f4c:	mov	r0, r6
   14f50:	bl	13bf4 <table_get@@Base>
   14f54:	ldr	r3, [r0]
   14f58:	str	r3, [r5], #4
   14f5c:	b	14d54 <table_serialize@@Base+0x144>
   14f60:	mov	r2, r4
   14f64:	mov	r1, r9
   14f68:	mov	r0, r6
   14f6c:	bl	13bf4 <table_get@@Base>
   14f70:	ldrd	r2, [r0]
   14f74:	strd	r2, [r5], #8
   14f78:	b	14d54 <table_serialize@@Base+0x144>
   14f7c:	mov	r2, r4
   14f80:	mov	r1, r9
   14f84:	mov	r0, r6
   14f88:	bl	13bf4 <table_get@@Base>
   14f8c:	ldrd	r2, [r0]
   14f90:	strd	r2, [r5], #8
   14f94:	b	14d54 <table_serialize@@Base+0x144>
   14f98:	mov	r2, r4
   14f9c:	mov	r1, r9
   14fa0:	mov	r0, r6
   14fa4:	bl	13bf4 <table_get@@Base>
   14fa8:	ldr	r3, [r0]
   14fac:	str	r3, [r5], #4
   14fb0:	b	14d54 <table_serialize@@Base+0x144>
   14fb4:	mov	r2, r4
   14fb8:	mov	r1, r9
   14fbc:	mov	r0, r6
   14fc0:	bl	13bf4 <table_get@@Base>
   14fc4:	ldrd	r2, [r0]
   14fc8:	strd	r2, [r5], #8
   14fcc:	b	14d54 <table_serialize@@Base+0x144>
   14fd0:	mov	r2, r4
   14fd4:	mov	r1, r9
   14fd8:	mov	r0, r6
   14fdc:	bl	13bf4 <table_get@@Base>
   14fe0:	ldrd	r2, [r0]
   14fe4:	strd	r2, [r5], #8
   14fe8:	b	14d54 <table_serialize@@Base+0x144>
   14fec:	mov	r2, r4
   14ff0:	mov	r1, r9
   14ff4:	mov	r0, r6
   14ff8:	bl	13e78 <table_get_string@@Base>
   14ffc:	mov	fp, r0
   15000:	bl	11b8c <strlen@plt>
   15004:	add	sl, r0, #1
   15008:	mov	r2, sl
   1500c:	mov	r1, fp
   15010:	mov	r0, r5
   15014:	bl	11bbc <strncpy@plt>
   15018:	add	r5, r5, sl
   1501c:	b	14d54 <table_serialize@@Base+0x144>
   15020:	mov	r2, r4
   15024:	mov	r1, r9
   15028:	mov	r0, r6
   1502c:	bl	13bf4 <table_get@@Base>
   15030:	ldrb	r3, [r0]
   15034:	strb	r3, [r5], #1
   15038:	b	14d54 <table_serialize@@Base+0x144>
   1503c:	mov	r2, r4
   15040:	mov	r1, r9
   15044:	mov	r0, r6
   15048:	bl	13bf4 <table_get@@Base>
   1504c:	ldrb	r3, [r0]
   15050:	strb	r3, [r5], #1
   15054:	b	14d54 <table_serialize@@Base+0x144>
   15058:	mov	r2, r4
   1505c:	mov	r1, r9
   15060:	mov	r0, r6
   15064:	bl	13bf4 <table_get@@Base>
   15068:	ldr	r3, [r0]
   1506c:	str	r3, [r5], #4
   15070:	b	14d54 <table_serialize@@Base+0x144>
   15074:	add	r9, r9, #1
   15078:	cmp	r8, r9
   1507c:	beq	14cc4 <table_serialize@@Base+0xb4>
   15080:	cmp	r7, #0
   15084:	movgt	r4, #0
   15088:	bgt	14d60 <table_serialize@@Base+0x150>
   1508c:	b	15074 <table_serialize@@Base+0x464>

00015090 <table_deserialize@@Base>:
   15090:	strd	r4, [sp, #-28]!	; 0xffffffe4
   15094:	strd	r6, [sp, #8]
   15098:	strd	r8, [sp, #16]
   1509c:	str	lr, [sp, #24]
   150a0:	sub	sp, sp, #12
   150a4:	mov	r5, r0
   150a8:	bl	1254c <table_new@@Base>
   150ac:	mov	r7, r0
   150b0:	ldr	r8, [r5]
   150b4:	ldr	r3, [r5, #4]
   150b8:	str	r3, [r0, #8]
   150bc:	add	r5, r5, #8
   150c0:	cmp	r8, #0
   150c4:	ble	150f8 <table_deserialize@@Base+0x68>
   150c8:	mov	r4, #0
   150cc:	ldr	r2, [r5], #4
   150d0:	mov	r1, r5
   150d4:	mov	r0, r7
   150d8:	bl	12fd8 <table_add_column@@Base>
   150dc:	mov	r0, r5
   150e0:	bl	11b8c <strlen@plt>
   150e4:	add	r0, r0, #1
   150e8:	add	r5, r5, r0
   150ec:	add	r4, r4, #1
   150f0:	cmp	r8, r4
   150f4:	bne	150cc <table_deserialize@@Base+0x3c>
   150f8:	ldr	r9, [r5]
   150fc:	ldr	r3, [r5, #4]
   15100:	str	r3, [r7, #24]
   15104:	add	r5, r5, #8
   15108:	cmp	r9, #0
   1510c:	ble	1541c <table_deserialize@@Base+0x38c>
   15110:	mov	r6, #0
   15114:	b	15404 <table_deserialize@@Base+0x374>
   15118:	ldrb	r3, [r5], #1
   1511c:	mov	r2, r4
   15120:	mov	r1, r6
   15124:	mov	r0, r7
   15128:	bl	148d0 <table_set_bool@@Base>
   1512c:	add	r4, r4, #1
   15130:	cmp	r8, r4
   15134:	beq	153f8 <table_deserialize@@Base+0x368>
   15138:	mov	r1, r4
   1513c:	mov	r0, r7
   15140:	bl	12fc4 <table_get_column_data_type@@Base>
   15144:	cmp	r0, #23
   15148:	ldrls	pc, [pc, r0, lsl #2]
   1514c:	b	1512c <table_deserialize@@Base+0x9c>
   15150:			; <UNDEFINED> instruction: 0x000151b0
   15154:	andeq	r5, r1, r8, asr #3
   15158:	andeq	r5, r1, r0, ror #3
   1515c:	strdeq	r5, [r1], -r8
   15160:	andeq	r5, r1, r0, lsl r2
   15164:	andeq	r5, r1, r8, lsr #4
   15168:	andeq	r5, r1, r0, asr #4
   1516c:	andeq	r5, r1, r8, asr r2
   15170:	andeq	r5, r1, r0, ror r2
   15174:	andeq	r5, r1, ip, lsl #5
   15178:	andeq	r5, r1, r8, lsr #5
   1517c:	andeq	r5, r1, r0, asr #5
   15180:	ldrdeq	r5, [r1], -r8
   15184:	strdeq	r5, [r1], -r0
   15188:	andeq	r5, r1, r8, lsl #6
   1518c:	andeq	r5, r1, r4, lsr #6
   15190:	andeq	r5, r1, r0, asr #6
   15194:	andeq	r5, r1, r8, asr r3
   15198:	andeq	r5, r1, r0, ror r3
   1519c:			; <UNDEFINED> instruction: 0x000153b0
   151a0:	andeq	r5, r1, r8, asr #7
   151a4:	andeq	r5, r1, r8, lsl #7
   151a8:	andeq	r5, r1, r8, lsl r1
   151ac:	andeq	r5, r1, r0, ror #7
   151b0:	ldr	r3, [r5], #4
   151b4:	mov	r2, r4
   151b8:	mov	r1, r6
   151bc:	mov	r0, r7
   151c0:	bl	148f4 <table_set_int@@Base>
   151c4:	b	1512c <table_deserialize@@Base+0x9c>
   151c8:	ldr	r3, [r5], #4
   151cc:	mov	r2, r4
   151d0:	mov	r1, r6
   151d4:	mov	r0, r7
   151d8:	bl	14918 <table_set_uint@@Base>
   151dc:	b	1512c <table_deserialize@@Base+0x9c>
   151e0:	ldrsb	r3, [r5], #1
   151e4:	mov	r2, r4
   151e8:	mov	r1, r6
   151ec:	mov	r0, r7
   151f0:	bl	1493c <table_set_int8@@Base>
   151f4:	b	1512c <table_deserialize@@Base+0x9c>
   151f8:	ldrb	r3, [r5], #1
   151fc:	mov	r2, r4
   15200:	mov	r1, r6
   15204:	mov	r0, r7
   15208:	bl	14960 <table_set_uint8@@Base>
   1520c:	b	1512c <table_deserialize@@Base+0x9c>
   15210:	ldrsh	r3, [r5], #2
   15214:	mov	r2, r4
   15218:	mov	r1, r6
   1521c:	mov	r0, r7
   15220:	bl	14984 <table_set_int16@@Base>
   15224:	b	1512c <table_deserialize@@Base+0x9c>
   15228:	ldrh	r3, [r5], #2
   1522c:	mov	r2, r4
   15230:	mov	r1, r6
   15234:	mov	r0, r7
   15238:	bl	149a8 <table_set_uint16@@Base>
   1523c:	b	1512c <table_deserialize@@Base+0x9c>
   15240:	ldr	r3, [r5], #4
   15244:	mov	r2, r4
   15248:	mov	r1, r6
   1524c:	mov	r0, r7
   15250:	bl	149cc <table_set_int32@@Base>
   15254:	b	1512c <table_deserialize@@Base+0x9c>
   15258:	ldr	r3, [r5], #4
   1525c:	mov	r2, r4
   15260:	mov	r1, r6
   15264:	mov	r0, r7
   15268:	bl	149f0 <table_set_uint32@@Base>
   1526c:	b	1512c <table_deserialize@@Base+0x9c>
   15270:	ldrd	r2, [r5], #8
   15274:	strd	r2, [sp]
   15278:	mov	r2, r4
   1527c:	mov	r1, r6
   15280:	mov	r0, r7
   15284:	bl	14a14 <table_set_int64@@Base>
   15288:	b	1512c <table_deserialize@@Base+0x9c>
   1528c:	ldrd	r2, [r5], #8
   15290:	strd	r2, [sp]
   15294:	mov	r2, r4
   15298:	mov	r1, r6
   1529c:	mov	r0, r7
   152a0:	bl	14a34 <table_set_uint64@@Base>
   152a4:	b	1512c <table_deserialize@@Base+0x9c>
   152a8:	ldrsh	r3, [r5], #2
   152ac:	mov	r2, r4
   152b0:	mov	r1, r6
   152b4:	mov	r0, r7
   152b8:	bl	14a54 <table_set_short@@Base>
   152bc:	b	1512c <table_deserialize@@Base+0x9c>
   152c0:	ldrh	r3, [r5], #2
   152c4:	mov	r2, r4
   152c8:	mov	r1, r6
   152cc:	mov	r0, r7
   152d0:	bl	14a78 <table_set_ushort@@Base>
   152d4:	b	1512c <table_deserialize@@Base+0x9c>
   152d8:	ldr	r3, [r5], #4
   152dc:	mov	r2, r4
   152e0:	mov	r1, r6
   152e4:	mov	r0, r7
   152e8:	bl	14a9c <table_set_long@@Base>
   152ec:	b	1512c <table_deserialize@@Base+0x9c>
   152f0:	ldr	r3, [r5], #4
   152f4:	mov	r2, r4
   152f8:	mov	r1, r6
   152fc:	mov	r0, r7
   15300:	bl	14ac0 <table_set_ulong@@Base>
   15304:	b	1512c <table_deserialize@@Base+0x9c>
   15308:	ldrd	r2, [r5], #8
   1530c:	strd	r2, [sp]
   15310:	mov	r2, r4
   15314:	mov	r1, r6
   15318:	mov	r0, r7
   1531c:	bl	14ae4 <table_set_llong@@Base>
   15320:	b	1512c <table_deserialize@@Base+0x9c>
   15324:	ldrd	r2, [r5], #8
   15328:	strd	r2, [sp]
   1532c:	mov	r2, r4
   15330:	mov	r1, r6
   15334:	mov	r0, r7
   15338:	bl	14b04 <table_set_ullong@@Base>
   1533c:	b	1512c <table_deserialize@@Base+0x9c>
   15340:	vldmia	r5!, {s0}
   15344:	mov	r2, r4
   15348:	mov	r1, r6
   1534c:	mov	r0, r7
   15350:	bl	14b24 <table_set_float@@Base>
   15354:	b	1512c <table_deserialize@@Base+0x9c>
   15358:	vldmia	r5!, {d0}
   1535c:	mov	r2, r4
   15360:	mov	r1, r6
   15364:	mov	r0, r7
   15368:	bl	14b48 <table_set_double@@Base>
   1536c:	b	1512c <table_deserialize@@Base+0x9c>
   15370:	vldmia	r5!, {d0}
   15374:	mov	r2, r4
   15378:	mov	r1, r6
   1537c:	mov	r0, r7
   15380:	bl	14b6c <table_set_ldouble@@Base>
   15384:	b	1512c <table_deserialize@@Base+0x9c>
   15388:	mov	r3, r5
   1538c:	mov	r2, r4
   15390:	mov	r1, r6
   15394:	mov	r0, r7
   15398:	bl	14b90 <table_set_string@@Base>
   1539c:	mov	r0, r5
   153a0:	bl	11b8c <strlen@plt>
   153a4:	add	r0, r0, #1
   153a8:	add	r5, r5, r0
   153ac:	b	1512c <table_deserialize@@Base+0x9c>
   153b0:	ldrb	r3, [r5], #1
   153b4:	mov	r2, r4
   153b8:	mov	r1, r6
   153bc:	mov	r0, r7
   153c0:	bl	14bac <table_set_char@@Base>
   153c4:	b	1512c <table_deserialize@@Base+0x9c>
   153c8:	ldrb	r3, [r5], #1
   153cc:	mov	r2, r4
   153d0:	mov	r1, r6
   153d4:	mov	r0, r7
   153d8:	bl	14bd0 <table_set_uchar@@Base>
   153dc:	b	1512c <table_deserialize@@Base+0x9c>
   153e0:	ldr	r3, [r5], #4
   153e4:	mov	r2, r4
   153e8:	mov	r1, r6
   153ec:	mov	r0, r7
   153f0:	bl	14bf4 <table_set_ptr@@Base>
   153f4:	b	1512c <table_deserialize@@Base+0x9c>
   153f8:	add	r6, r6, #1
   153fc:	cmp	r9, r6
   15400:	beq	1541c <table_deserialize@@Base+0x38c>
   15404:	mov	r0, r7
   15408:	bl	13f50 <table_add_row@@Base>
   1540c:	cmp	r8, #0
   15410:	ble	153f8 <table_deserialize@@Base+0x368>
   15414:	mov	r4, #0
   15418:	b	15138 <table_deserialize@@Base+0xa8>
   1541c:	ldr	r6, [r5]
   15420:	ldr	r3, [r5, #4]
   15424:	str	r3, [r7, #48]	; 0x30
   15428:	cmp	r6, #0
   1542c:	ble	1545c <table_deserialize@@Base+0x3cc>
   15430:	add	r5, r5, #20
   15434:	mov	r4, #0
   15438:	ldr	r3, [r5, #-4]
   1543c:	ldr	r2, [r5, #-8]
   15440:	ldr	r1, [r5, #-12]
   15444:	mov	r0, r7
   15448:	bl	12ba4 <table_register_callback@@Base>
   1544c:	add	r4, r4, #1
   15450:	add	r5, r5, #12
   15454:	cmp	r6, r4
   15458:	bne	15438 <table_deserialize@@Base+0x3a8>
   1545c:	mov	r0, r7
   15460:	add	sp, sp, #12
   15464:	ldrd	r4, [sp]
   15468:	ldrd	r6, [sp, #8]
   1546c:	ldrd	r8, [sp, #16]
   15470:	add	sp, sp, #24
   15474:	pop	{pc}		; (ldr pc, [sp], #4)

00015478 <table_cell_to_buffer@@Base>:
   15478:	strd	r4, [sp, #-20]!	; 0xffffffec
   1547c:	strd	r6, [sp, #8]
   15480:	str	lr, [sp, #16]
   15484:	sub	sp, sp, #12
   15488:	mov	r6, r0
   1548c:	mov	r7, r1
   15490:	mov	r4, r2
   15494:	mov	r5, r3
   15498:	mov	r1, r2
   1549c:	bl	12fc4 <table_get_column_data_type@@Base>
   154a0:	cmp	r0, #23
   154a4:	ldrls	pc, [pc, r0, lsl #2]
   154a8:	b	15534 <table_cell_to_buffer@@Base+0xbc>
   154ac:	andeq	r5, r1, ip, lsl #10
   154b0:	andeq	r5, r1, ip, asr #10
   154b4:	andeq	r5, r1, r8, ror r5
   154b8:	andeq	r5, r1, r4, lsr #11
   154bc:	ldrdeq	r5, [r1], -r0
   154c0:	strdeq	r5, [r1], -ip
   154c4:	andeq	r5, r1, r8, lsr #12
   154c8:	andeq	r5, r1, r4, asr r6
   154cc:	andeq	r5, r1, r0, lsl #13
   154d0:	andeq	r5, r1, ip, lsr #13
   154d4:	ldrdeq	r5, [r1], -r8
   154d8:	andeq	r5, r1, r4, lsl #14
   154dc:	andeq	r5, r1, r0, lsr r7
   154e0:	andeq	r5, r1, ip, asr r7
   154e4:	andeq	r5, r1, r8, lsl #15
   154e8:			; <UNDEFINED> instruction: 0x000157b4
   154ec:	andeq	r5, r1, ip, lsl #16
   154f0:	andeq	r5, r1, ip, lsr r8
   154f4:	andeq	r5, r1, r8, ror #16
   154f8:	andeq	r5, r1, r0, asr #17
   154fc:	andeq	r5, r1, ip, ror #17
   15500:	andeq	r5, r1, r0, ror #15
   15504:	muleq	r1, r4, r8
   15508:	andeq	r5, r1, r8, lsl r9
   1550c:	mov	r2, r4
   15510:	mov	r1, r7
   15514:	mov	r0, r6
   15518:	bl	13c2c <table_get_int@@Base>
   1551c:	mov	r3, r0
   15520:	movw	r2, #24920	; 0x6158
   15524:	movt	r2, #1
   15528:	ldr	r1, [sp, #32]
   1552c:	mov	r0, r5
   15530:	bl	11ba4 <snprintf@plt>
   15534:	mov	r0, #0
   15538:	add	sp, sp, #12
   1553c:	ldrd	r4, [sp]
   15540:	ldrd	r6, [sp, #8]
   15544:	add	sp, sp, #16
   15548:	pop	{pc}		; (ldr pc, [sp], #4)
   1554c:	mov	r2, r4
   15550:	mov	r1, r7
   15554:	mov	r0, r6
   15558:	bl	13c48 <table_get_uint@@Base>
   1555c:	mov	r3, r0
   15560:	movw	r2, #25040	; 0x61d0
   15564:	movt	r2, #1
   15568:	ldr	r1, [sp, #32]
   1556c:	mov	r0, r5
   15570:	bl	11ba4 <snprintf@plt>
   15574:	b	15534 <table_cell_to_buffer@@Base+0xbc>
   15578:	mov	r2, r4
   1557c:	mov	r1, r7
   15580:	mov	r0, r6
   15584:	bl	13c64 <table_get_int8@@Base>
   15588:	mov	r3, r0
   1558c:	movw	r2, #24920	; 0x6158
   15590:	movt	r2, #1
   15594:	ldr	r1, [sp, #32]
   15598:	mov	r0, r5
   1559c:	bl	11ba4 <snprintf@plt>
   155a0:	b	15534 <table_cell_to_buffer@@Base+0xbc>
   155a4:	mov	r2, r4
   155a8:	mov	r1, r7
   155ac:	mov	r0, r6
   155b0:	bl	13c80 <table_get_uint8@@Base>
   155b4:	mov	r3, r0
   155b8:	movw	r2, #25040	; 0x61d0
   155bc:	movt	r2, #1
   155c0:	ldr	r1, [sp, #32]
   155c4:	mov	r0, r5
   155c8:	bl	11ba4 <snprintf@plt>
   155cc:	b	15534 <table_cell_to_buffer@@Base+0xbc>
   155d0:	mov	r2, r4
   155d4:	mov	r1, r7
   155d8:	mov	r0, r6
   155dc:	bl	13c9c <table_get_int16@@Base>
   155e0:	mov	r3, r0
   155e4:	movw	r2, #24920	; 0x6158
   155e8:	movt	r2, #1
   155ec:	ldr	r1, [sp, #32]
   155f0:	mov	r0, r5
   155f4:	bl	11ba4 <snprintf@plt>
   155f8:	b	15534 <table_cell_to_buffer@@Base+0xbc>
   155fc:	mov	r2, r4
   15600:	mov	r1, r7
   15604:	mov	r0, r6
   15608:	bl	13cb8 <table_get_uint16@@Base>
   1560c:	mov	r3, r0
   15610:	movw	r2, #25040	; 0x61d0
   15614:	movt	r2, #1
   15618:	ldr	r1, [sp, #32]
   1561c:	mov	r0, r5
   15620:	bl	11ba4 <snprintf@plt>
   15624:	b	15534 <table_cell_to_buffer@@Base+0xbc>
   15628:	mov	r2, r4
   1562c:	mov	r1, r7
   15630:	mov	r0, r6
   15634:	bl	13cd4 <table_get_int32@@Base>
   15638:	mov	r3, r0
   1563c:	movw	r2, #24920	; 0x6158
   15640:	movt	r2, #1
   15644:	ldr	r1, [sp, #32]
   15648:	mov	r0, r5
   1564c:	bl	11ba4 <snprintf@plt>
   15650:	b	15534 <table_cell_to_buffer@@Base+0xbc>
   15654:	mov	r2, r4
   15658:	mov	r1, r7
   1565c:	mov	r0, r6
   15660:	bl	13cf0 <table_get_uint32@@Base>
   15664:	mov	r3, r0
   15668:	movw	r2, #25040	; 0x61d0
   1566c:	movt	r2, #1
   15670:	ldr	r1, [sp, #32]
   15674:	mov	r0, r5
   15678:	bl	11ba4 <snprintf@plt>
   1567c:	b	15534 <table_cell_to_buffer@@Base+0xbc>
   15680:	mov	r2, r4
   15684:	mov	r1, r7
   15688:	mov	r0, r6
   1568c:	bl	13d0c <table_get_int64@@Base>
   15690:	strd	r0, [sp]
   15694:	movw	r2, #25044	; 0x61d4
   15698:	movt	r2, #1
   1569c:	ldr	r1, [sp, #32]
   156a0:	mov	r0, r5
   156a4:	bl	11ba4 <snprintf@plt>
   156a8:	b	15534 <table_cell_to_buffer@@Base+0xbc>
   156ac:	mov	r2, r4
   156b0:	mov	r1, r7
   156b4:	mov	r0, r6
   156b8:	bl	13d28 <table_get_uint64@@Base>
   156bc:	strd	r0, [sp]
   156c0:	movw	r2, #25052	; 0x61dc
   156c4:	movt	r2, #1
   156c8:	ldr	r1, [sp, #32]
   156cc:	mov	r0, r5
   156d0:	bl	11ba4 <snprintf@plt>
   156d4:	b	15534 <table_cell_to_buffer@@Base+0xbc>
   156d8:	mov	r2, r4
   156dc:	mov	r1, r7
   156e0:	mov	r0, r6
   156e4:	bl	13d44 <table_get_short@@Base>
   156e8:	mov	r3, r0
   156ec:	movw	r2, #25060	; 0x61e4
   156f0:	movt	r2, #1
   156f4:	ldr	r1, [sp, #32]
   156f8:	mov	r0, r5
   156fc:	bl	11ba4 <snprintf@plt>
   15700:	b	15534 <table_cell_to_buffer@@Base+0xbc>
   15704:	mov	r2, r4
   15708:	mov	r1, r7
   1570c:	mov	r0, r6
   15710:	bl	13d60 <table_get_ushort@@Base>
   15714:	mov	r3, r0
   15718:	movw	r2, #25064	; 0x61e8
   1571c:	movt	r2, #1
   15720:	ldr	r1, [sp, #32]
   15724:	mov	r0, r5
   15728:	bl	11ba4 <snprintf@plt>
   1572c:	b	15534 <table_cell_to_buffer@@Base+0xbc>
   15730:	mov	r2, r4
   15734:	mov	r1, r7
   15738:	mov	r0, r6
   1573c:	bl	13d7c <table_get_long@@Base>
   15740:	mov	r3, r0
   15744:	movw	r2, #25068	; 0x61ec
   15748:	movt	r2, #1
   1574c:	ldr	r1, [sp, #32]
   15750:	mov	r0, r5
   15754:	bl	11ba4 <snprintf@plt>
   15758:	b	15534 <table_cell_to_buffer@@Base+0xbc>
   1575c:	mov	r2, r4
   15760:	mov	r1, r7
   15764:	mov	r0, r6
   15768:	bl	13d98 <table_get_ulong@@Base>
   1576c:	mov	r3, r0
   15770:	movw	r2, #25072	; 0x61f0
   15774:	movt	r2, #1
   15778:	ldr	r1, [sp, #32]
   1577c:	mov	r0, r5
   15780:	bl	11ba4 <snprintf@plt>
   15784:	b	15534 <table_cell_to_buffer@@Base+0xbc>
   15788:	mov	r2, r4
   1578c:	mov	r1, r7
   15790:	mov	r0, r6
   15794:	bl	13db4 <table_get_llong@@Base>
   15798:	strd	r0, [sp]
   1579c:	movw	r2, #25044	; 0x61d4
   157a0:	movt	r2, #1
   157a4:	ldr	r1, [sp, #32]
   157a8:	mov	r0, r5
   157ac:	bl	11ba4 <snprintf@plt>
   157b0:	b	15534 <table_cell_to_buffer@@Base+0xbc>
   157b4:	mov	r2, r4
   157b8:	mov	r1, r7
   157bc:	mov	r0, r6
   157c0:	bl	13dd0 <table_get_ullong@@Base>
   157c4:	strd	r0, [sp]
   157c8:	movw	r2, #25052	; 0x61dc
   157cc:	movt	r2, #1
   157d0:	ldr	r1, [sp, #32]
   157d4:	mov	r0, r5
   157d8:	bl	11ba4 <snprintf@plt>
   157dc:	b	15534 <table_cell_to_buffer@@Base+0xbc>
   157e0:	mov	r2, r4
   157e4:	mov	r1, r7
   157e8:	mov	r0, r6
   157ec:	bl	13e78 <table_get_string@@Base>
   157f0:	mov	r3, r0
   157f4:	movw	r2, #25076	; 0x61f4
   157f8:	movt	r2, #1
   157fc:	ldr	r1, [sp, #32]
   15800:	mov	r0, r5
   15804:	bl	11ba4 <snprintf@plt>
   15808:	b	15534 <table_cell_to_buffer@@Base+0xbc>
   1580c:	mov	r2, r4
   15810:	mov	r1, r7
   15814:	mov	r0, r6
   15818:	bl	13dec <table_get_float@@Base>
   1581c:	vcvt.f64.f32	d0, s0
   15820:	vstr	d0, [sp]
   15824:	movw	r2, #25080	; 0x61f8
   15828:	movt	r2, #1
   1582c:	ldr	r1, [sp, #32]
   15830:	mov	r0, r5
   15834:	bl	11ba4 <snprintf@plt>
   15838:	b	15534 <table_cell_to_buffer@@Base+0xbc>
   1583c:	mov	r2, r4
   15840:	mov	r1, r7
   15844:	mov	r0, r6
   15848:	bl	13e08 <table_get_double@@Base>
   1584c:	vstr	d0, [sp]
   15850:	movw	r2, #25084	; 0x61fc
   15854:	movt	r2, #1
   15858:	ldr	r1, [sp, #32]
   1585c:	mov	r0, r5
   15860:	bl	11ba4 <snprintf@plt>
   15864:	b	15534 <table_cell_to_buffer@@Base+0xbc>
   15868:	mov	r2, r4
   1586c:	mov	r1, r7
   15870:	mov	r0, r6
   15874:	bl	13e24 <table_get_ldouble@@Base>
   15878:	vstr	d0, [sp]
   1587c:	movw	r2, #25088	; 0x6200
   15880:	movt	r2, #1
   15884:	ldr	r1, [sp, #32]
   15888:	mov	r0, r5
   1588c:	bl	11ba4 <snprintf@plt>
   15890:	b	15534 <table_cell_to_buffer@@Base+0xbc>
   15894:	mov	r2, r4
   15898:	mov	r1, r7
   1589c:	mov	r0, r6
   158a0:	bl	13c10 <table_get_bool@@Base>
   158a4:	mov	r3, r0
   158a8:	movw	r2, #24920	; 0x6158
   158ac:	movt	r2, #1
   158b0:	ldr	r1, [sp, #32]
   158b4:	mov	r0, r5
   158b8:	bl	11ba4 <snprintf@plt>
   158bc:	b	15534 <table_cell_to_buffer@@Base+0xbc>
   158c0:	mov	r2, r4
   158c4:	mov	r1, r7
   158c8:	mov	r0, r6
   158cc:	bl	13e40 <table_get_char@@Base>
   158d0:	mov	r3, r0
   158d4:	movw	r2, #25092	; 0x6204
   158d8:	movt	r2, #1
   158dc:	ldr	r1, [sp, #32]
   158e0:	mov	r0, r5
   158e4:	bl	11ba4 <snprintf@plt>
   158e8:	b	15534 <table_cell_to_buffer@@Base+0xbc>
   158ec:	mov	r2, r4
   158f0:	mov	r1, r7
   158f4:	mov	r0, r6
   158f8:	bl	13e5c <table_get_uchar@@Base>
   158fc:	mov	r3, r0
   15900:	movw	r2, #25092	; 0x6204
   15904:	movt	r2, #1
   15908:	ldr	r1, [sp, #32]
   1590c:	mov	r0, r5
   15910:	bl	11ba4 <snprintf@plt>
   15914:	b	15534 <table_cell_to_buffer@@Base+0xbc>
   15918:	mov	r2, r4
   1591c:	mov	r1, r7
   15920:	mov	r0, r6
   15924:	bl	13e90 <table_get_ptr@@Base>
   15928:	mov	r3, r0
   1592c:	movw	r2, #25096	; 0x6208
   15930:	movt	r2, #1
   15934:	ldr	r1, [sp, #32]
   15938:	mov	r0, r5
   1593c:	bl	11ba4 <snprintf@plt>
   15940:	b	15534 <table_cell_to_buffer@@Base+0xbc>

00015944 <table_cell_from_buffer@@Base>:
   15944:	strd	r4, [sp, #-20]!	; 0xffffffec
   15948:	strd	r6, [sp, #8]
   1594c:	str	lr, [sp, #16]
   15950:	sub	sp, sp, #268	; 0x10c
   15954:	mov	r6, r0
   15958:	mov	r7, r1
   1595c:	mov	r4, r2
   15960:	mov	r5, r3
   15964:	mov	r1, r2
   15968:	bl	12fc4 <table_get_column_data_type@@Base>
   1596c:	cmp	r0, #23
   15970:	ldrls	pc, [pc, r0, lsl #2]
   15974:	b	15fc4 <table_cell_from_buffer@@Base+0x680>
   15978:	ldrdeq	r5, [r1], -r8
   1597c:	andeq	r5, r1, ip, lsr #20
   15980:	andeq	r5, r1, r8, ror #20
   15984:	andeq	r5, r1, r4, lsr #21
   15988:	andeq	r5, r1, r0, ror #21
   1598c:	andeq	r5, r1, ip, lsl fp
   15990:	andeq	r5, r1, r8, asr fp
   15994:	muleq	r1, r4, fp
   15998:	ldrdeq	r5, [r1], -r0
   1599c:	andeq	r5, r1, r0, lsl ip
   159a0:	andeq	r5, r1, r0, asr ip
   159a4:	andeq	r5, r1, ip, lsl #25
   159a8:	andeq	r5, r1, r8, asr #25
   159ac:	andeq	r5, r1, r4, lsl #26
   159b0:	andeq	r5, r1, r0, asr #26
   159b4:	andeq	r5, r1, r0, lsl #27
   159b8:	strdeq	r5, [r1], -ip
   159bc:	andeq	r5, r1, r8, lsr lr
   159c0:	andeq	r5, r1, r4, ror lr
   159c4:	andeq	r5, r1, r0, lsl pc
   159c8:	andeq	r5, r1, ip, asr #30
   159cc:	andeq	r5, r1, r0, asr #27
   159d0:			; <UNDEFINED> instruction: 0x00015eb0
   159d4:	andeq	r5, r1, r8, lsl #31
   159d8:	add	r2, sp, #8
   159dc:	movw	r1, #24920	; 0x6158
   159e0:	movt	r1, #1
   159e4:	mov	r0, r5
   159e8:	bl	11bb0 <__isoc99_sscanf@plt>
   159ec:	cmp	r0, #1
   159f0:	mvnne	r5, #0
   159f4:	beq	15a10 <table_cell_from_buffer@@Base+0xcc>
   159f8:	mov	r0, r5
   159fc:	add	sp, sp, #268	; 0x10c
   15a00:	ldrd	r4, [sp]
   15a04:	ldrd	r6, [sp, #8]
   15a08:	add	sp, sp, #16
   15a0c:	pop	{pc}		; (ldr pc, [sp], #4)
   15a10:	ldr	r3, [sp, #8]
   15a14:	mov	r2, r4
   15a18:	mov	r1, r7
   15a1c:	mov	r0, r6
   15a20:	bl	148f4 <table_set_int@@Base>
   15a24:	mov	r5, #0
   15a28:	b	159f8 <table_cell_from_buffer@@Base+0xb4>
   15a2c:	add	r2, sp, #8
   15a30:	movw	r1, #25040	; 0x61d0
   15a34:	movt	r1, #1
   15a38:	mov	r0, r5
   15a3c:	bl	11bb0 <__isoc99_sscanf@plt>
   15a40:	cmp	r0, #1
   15a44:	mvnne	r5, #0
   15a48:	bne	159f8 <table_cell_from_buffer@@Base+0xb4>
   15a4c:	ldr	r3, [sp, #8]
   15a50:	mov	r2, r4
   15a54:	mov	r1, r7
   15a58:	mov	r0, r6
   15a5c:	bl	14918 <table_set_uint@@Base>
   15a60:	mov	r5, #0
   15a64:	b	159f8 <table_cell_from_buffer@@Base+0xb4>
   15a68:	add	r2, sp, #8
   15a6c:	movw	r1, #25100	; 0x620c
   15a70:	movt	r1, #1
   15a74:	mov	r0, r5
   15a78:	bl	11bb0 <__isoc99_sscanf@plt>
   15a7c:	cmp	r0, #1
   15a80:	mvnne	r5, #0
   15a84:	bne	159f8 <table_cell_from_buffer@@Base+0xb4>
   15a88:	ldrsb	r3, [sp, #8]
   15a8c:	mov	r2, r4
   15a90:	mov	r1, r7
   15a94:	mov	r0, r6
   15a98:	bl	1493c <table_set_int8@@Base>
   15a9c:	mov	r5, #0
   15aa0:	b	159f8 <table_cell_from_buffer@@Base+0xb4>
   15aa4:	add	r2, sp, #8
   15aa8:	movw	r1, #25108	; 0x6214
   15aac:	movt	r1, #1
   15ab0:	mov	r0, r5
   15ab4:	bl	11bb0 <__isoc99_sscanf@plt>
   15ab8:	cmp	r0, #1
   15abc:	mvnne	r5, #0
   15ac0:	bne	159f8 <table_cell_from_buffer@@Base+0xb4>
   15ac4:	ldrb	r3, [sp, #8]
   15ac8:	mov	r2, r4
   15acc:	mov	r1, r7
   15ad0:	mov	r0, r6
   15ad4:	bl	14960 <table_set_uint8@@Base>
   15ad8:	mov	r5, #0
   15adc:	b	159f8 <table_cell_from_buffer@@Base+0xb4>
   15ae0:	add	r2, sp, #8
   15ae4:	movw	r1, #25060	; 0x61e4
   15ae8:	movt	r1, #1
   15aec:	mov	r0, r5
   15af0:	bl	11bb0 <__isoc99_sscanf@plt>
   15af4:	cmp	r0, #1
   15af8:	mvnne	r5, #0
   15afc:	bne	159f8 <table_cell_from_buffer@@Base+0xb4>
   15b00:	ldrsh	r3, [sp, #8]
   15b04:	mov	r2, r4
   15b08:	mov	r1, r7
   15b0c:	mov	r0, r6
   15b10:	bl	14984 <table_set_int16@@Base>
   15b14:	mov	r5, #0
   15b18:	b	159f8 <table_cell_from_buffer@@Base+0xb4>
   15b1c:	add	r2, sp, #8
   15b20:	movw	r1, #25064	; 0x61e8
   15b24:	movt	r1, #1
   15b28:	mov	r0, r5
   15b2c:	bl	11bb0 <__isoc99_sscanf@plt>
   15b30:	cmp	r0, #1
   15b34:	mvnne	r5, #0
   15b38:	bne	159f8 <table_cell_from_buffer@@Base+0xb4>
   15b3c:	ldrh	r3, [sp, #8]
   15b40:	mov	r2, r4
   15b44:	mov	r1, r7
   15b48:	mov	r0, r6
   15b4c:	bl	149a8 <table_set_uint16@@Base>
   15b50:	mov	r5, #0
   15b54:	b	159f8 <table_cell_from_buffer@@Base+0xb4>
   15b58:	add	r2, sp, #8
   15b5c:	movw	r1, #24920	; 0x6158
   15b60:	movt	r1, #1
   15b64:	mov	r0, r5
   15b68:	bl	11bb0 <__isoc99_sscanf@plt>
   15b6c:	cmp	r0, #1
   15b70:	mvnne	r5, #0
   15b74:	bne	159f8 <table_cell_from_buffer@@Base+0xb4>
   15b78:	ldr	r3, [sp, #8]
   15b7c:	mov	r2, r4
   15b80:	mov	r1, r7
   15b84:	mov	r0, r6
   15b88:	bl	149cc <table_set_int32@@Base>
   15b8c:	mov	r5, #0
   15b90:	b	159f8 <table_cell_from_buffer@@Base+0xb4>
   15b94:	add	r2, sp, #8
   15b98:	movw	r1, #25040	; 0x61d0
   15b9c:	movt	r1, #1
   15ba0:	mov	r0, r5
   15ba4:	bl	11bb0 <__isoc99_sscanf@plt>
   15ba8:	cmp	r0, #1
   15bac:	mvnne	r5, #0
   15bb0:	bne	159f8 <table_cell_from_buffer@@Base+0xb4>
   15bb4:	ldr	r3, [sp, #8]
   15bb8:	mov	r2, r4
   15bbc:	mov	r1, r7
   15bc0:	mov	r0, r6
   15bc4:	bl	149f0 <table_set_uint32@@Base>
   15bc8:	mov	r5, #0
   15bcc:	b	159f8 <table_cell_from_buffer@@Base+0xb4>
   15bd0:	add	r2, sp, #8
   15bd4:	movw	r1, #25044	; 0x61d4
   15bd8:	movt	r1, #1
   15bdc:	mov	r0, r5
   15be0:	bl	11bb0 <__isoc99_sscanf@plt>
   15be4:	cmp	r0, #1
   15be8:	mvnne	r5, #0
   15bec:	bne	159f8 <table_cell_from_buffer@@Base+0xb4>
   15bf0:	ldrd	r2, [sp, #8]
   15bf4:	strd	r2, [sp]
   15bf8:	mov	r2, r4
   15bfc:	mov	r1, r7
   15c00:	mov	r0, r6
   15c04:	bl	14a14 <table_set_int64@@Base>
   15c08:	mov	r5, #0
   15c0c:	b	159f8 <table_cell_from_buffer@@Base+0xb4>
   15c10:	add	r2, sp, #8
   15c14:	movw	r1, #25052	; 0x61dc
   15c18:	movt	r1, #1
   15c1c:	mov	r0, r5
   15c20:	bl	11bb0 <__isoc99_sscanf@plt>
   15c24:	cmp	r0, #1
   15c28:	mvnne	r5, #0
   15c2c:	bne	159f8 <table_cell_from_buffer@@Base+0xb4>
   15c30:	ldrd	r2, [sp, #8]
   15c34:	strd	r2, [sp]
   15c38:	mov	r2, r4
   15c3c:	mov	r1, r7
   15c40:	mov	r0, r6
   15c44:	bl	14a34 <table_set_uint64@@Base>
   15c48:	mov	r5, #0
   15c4c:	b	159f8 <table_cell_from_buffer@@Base+0xb4>
   15c50:	add	r2, sp, #8
   15c54:	movw	r1, #25060	; 0x61e4
   15c58:	movt	r1, #1
   15c5c:	mov	r0, r5
   15c60:	bl	11bb0 <__isoc99_sscanf@plt>
   15c64:	cmp	r0, #1
   15c68:	mvnne	r5, #0
   15c6c:	bne	159f8 <table_cell_from_buffer@@Base+0xb4>
   15c70:	ldrsh	r3, [sp, #8]
   15c74:	mov	r2, r4
   15c78:	mov	r1, r7
   15c7c:	mov	r0, r6
   15c80:	bl	14a54 <table_set_short@@Base>
   15c84:	mov	r5, #0
   15c88:	b	159f8 <table_cell_from_buffer@@Base+0xb4>
   15c8c:	add	r2, sp, #8
   15c90:	movw	r1, #25064	; 0x61e8
   15c94:	movt	r1, #1
   15c98:	mov	r0, r5
   15c9c:	bl	11bb0 <__isoc99_sscanf@plt>
   15ca0:	cmp	r0, #1
   15ca4:	mvnne	r5, #0
   15ca8:	bne	159f8 <table_cell_from_buffer@@Base+0xb4>
   15cac:	ldrh	r3, [sp, #8]
   15cb0:	mov	r2, r4
   15cb4:	mov	r1, r7
   15cb8:	mov	r0, r6
   15cbc:	bl	14a78 <table_set_ushort@@Base>
   15cc0:	mov	r5, #0
   15cc4:	b	159f8 <table_cell_from_buffer@@Base+0xb4>
   15cc8:	add	r2, sp, #8
   15ccc:	movw	r1, #25068	; 0x61ec
   15cd0:	movt	r1, #1
   15cd4:	mov	r0, r5
   15cd8:	bl	11bb0 <__isoc99_sscanf@plt>
   15cdc:	cmp	r0, #1
   15ce0:	mvnne	r5, #0
   15ce4:	bne	159f8 <table_cell_from_buffer@@Base+0xb4>
   15ce8:	ldr	r3, [sp, #8]
   15cec:	mov	r2, r4
   15cf0:	mov	r1, r7
   15cf4:	mov	r0, r6
   15cf8:	bl	14a9c <table_set_long@@Base>
   15cfc:	mov	r5, #0
   15d00:	b	159f8 <table_cell_from_buffer@@Base+0xb4>
   15d04:	add	r2, sp, #8
   15d08:	movw	r1, #25072	; 0x61f0
   15d0c:	movt	r1, #1
   15d10:	mov	r0, r5
   15d14:	bl	11bb0 <__isoc99_sscanf@plt>
   15d18:	cmp	r0, #1
   15d1c:	mvnne	r5, #0
   15d20:	bne	159f8 <table_cell_from_buffer@@Base+0xb4>
   15d24:	ldr	r3, [sp, #8]
   15d28:	mov	r2, r4
   15d2c:	mov	r1, r7
   15d30:	mov	r0, r6
   15d34:	bl	14ac0 <table_set_ulong@@Base>
   15d38:	mov	r5, #0
   15d3c:	b	159f8 <table_cell_from_buffer@@Base+0xb4>
   15d40:	add	r2, sp, #8
   15d44:	movw	r1, #25044	; 0x61d4
   15d48:	movt	r1, #1
   15d4c:	mov	r0, r5
   15d50:	bl	11bb0 <__isoc99_sscanf@plt>
   15d54:	cmp	r0, #1
   15d58:	mvnne	r5, #0
   15d5c:	bne	159f8 <table_cell_from_buffer@@Base+0xb4>
   15d60:	ldrd	r2, [sp, #8]
   15d64:	strd	r2, [sp]
   15d68:	mov	r2, r4
   15d6c:	mov	r1, r7
   15d70:	mov	r0, r6
   15d74:	bl	14ae4 <table_set_llong@@Base>
   15d78:	mov	r5, #0
   15d7c:	b	159f8 <table_cell_from_buffer@@Base+0xb4>
   15d80:	add	r2, sp, #8
   15d84:	movw	r1, #25052	; 0x61dc
   15d88:	movt	r1, #1
   15d8c:	mov	r0, r5
   15d90:	bl	11bb0 <__isoc99_sscanf@plt>
   15d94:	cmp	r0, #1
   15d98:	mvnne	r5, #0
   15d9c:	bne	159f8 <table_cell_from_buffer@@Base+0xb4>
   15da0:	ldrd	r2, [sp, #8]
   15da4:	strd	r2, [sp]
   15da8:	mov	r2, r4
   15dac:	mov	r1, r7
   15db0:	mov	r0, r6
   15db4:	bl	14b04 <table_set_ullong@@Base>
   15db8:	mov	r5, #0
   15dbc:	b	159f8 <table_cell_from_buffer@@Base+0xb4>
   15dc0:	add	r2, sp, #8
   15dc4:	movw	r1, #25076	; 0x61f4
   15dc8:	movt	r1, #1
   15dcc:	mov	r0, r5
   15dd0:	bl	11bb0 <__isoc99_sscanf@plt>
   15dd4:	cmp	r0, #1
   15dd8:	mvnne	r5, #0
   15ddc:	bne	159f8 <table_cell_from_buffer@@Base+0xb4>
   15de0:	add	r3, sp, #8
   15de4:	mov	r2, r4
   15de8:	mov	r1, r7
   15dec:	mov	r0, r6
   15df0:	bl	14b90 <table_set_string@@Base>
   15df4:	mov	r5, #0
   15df8:	b	159f8 <table_cell_from_buffer@@Base+0xb4>
   15dfc:	add	r2, sp, #8
   15e00:	movw	r1, #25080	; 0x61f8
   15e04:	movt	r1, #1
   15e08:	mov	r0, r5
   15e0c:	bl	11bb0 <__isoc99_sscanf@plt>
   15e10:	cmp	r0, #1
   15e14:	mvnne	r5, #0
   15e18:	bne	159f8 <table_cell_from_buffer@@Base+0xb4>
   15e1c:	vldr	s0, [sp, #8]
   15e20:	mov	r2, r4
   15e24:	mov	r1, r7
   15e28:	mov	r0, r6
   15e2c:	bl	14b24 <table_set_float@@Base>
   15e30:	mov	r5, #0
   15e34:	b	159f8 <table_cell_from_buffer@@Base+0xb4>
   15e38:	add	r2, sp, #8
   15e3c:	movw	r1, #25084	; 0x61fc
   15e40:	movt	r1, #1
   15e44:	mov	r0, r5
   15e48:	bl	11bb0 <__isoc99_sscanf@plt>
   15e4c:	cmp	r0, #1
   15e50:	mvnne	r5, #0
   15e54:	bne	159f8 <table_cell_from_buffer@@Base+0xb4>
   15e58:	vldr	d0, [sp, #8]
   15e5c:	mov	r2, r4
   15e60:	mov	r1, r7
   15e64:	mov	r0, r6
   15e68:	bl	14b48 <table_set_double@@Base>
   15e6c:	mov	r5, #0
   15e70:	b	159f8 <table_cell_from_buffer@@Base+0xb4>
   15e74:	add	r2, sp, #8
   15e78:	movw	r1, #25088	; 0x6200
   15e7c:	movt	r1, #1
   15e80:	mov	r0, r5
   15e84:	bl	11bb0 <__isoc99_sscanf@plt>
   15e88:	cmp	r0, #1
   15e8c:	mvnne	r5, #0
   15e90:	bne	159f8 <table_cell_from_buffer@@Base+0xb4>
   15e94:	vldr	d0, [sp, #8]
   15e98:	mov	r2, r4
   15e9c:	mov	r1, r7
   15ea0:	mov	r0, r6
   15ea4:	bl	14b6c <table_set_ldouble@@Base>
   15ea8:	mov	r5, #0
   15eac:	b	159f8 <table_cell_from_buffer@@Base+0xb4>
   15eb0:	add	r2, sp, #8
   15eb4:	movw	r1, #24920	; 0x6158
   15eb8:	movt	r1, #1
   15ebc:	mov	r0, r5
   15ec0:	bl	11bb0 <__isoc99_sscanf@plt>
   15ec4:	cmp	r0, #1
   15ec8:	mvnne	r5, #0
   15ecc:	bne	159f8 <table_cell_from_buffer@@Base+0xb4>
   15ed0:	ldr	r5, [sp, #8]
   15ed4:	cmp	r5, #0
   15ed8:	beq	15ef8 <table_cell_from_buffer@@Base+0x5b4>
   15edc:	mov	r3, #1
   15ee0:	mov	r2, r4
   15ee4:	mov	r1, r7
   15ee8:	mov	r0, r6
   15eec:	bl	148d0 <table_set_bool@@Base>
   15ef0:	mov	r5, #0
   15ef4:	b	159f8 <table_cell_from_buffer@@Base+0xb4>
   15ef8:	mov	r3, #0
   15efc:	mov	r2, r4
   15f00:	mov	r1, r7
   15f04:	mov	r0, r6
   15f08:	bl	148d0 <table_set_bool@@Base>
   15f0c:	b	159f8 <table_cell_from_buffer@@Base+0xb4>
   15f10:	add	r2, sp, #8
   15f14:	movw	r1, #25092	; 0x6204
   15f18:	movt	r1, #1
   15f1c:	mov	r0, r5
   15f20:	bl	11bb0 <__isoc99_sscanf@plt>
   15f24:	cmp	r0, #1
   15f28:	mvnne	r5, #0
   15f2c:	bne	159f8 <table_cell_from_buffer@@Base+0xb4>
   15f30:	ldrb	r3, [sp, #8]
   15f34:	mov	r2, r4
   15f38:	mov	r1, r7
   15f3c:	mov	r0, r6
   15f40:	bl	14bac <table_set_char@@Base>
   15f44:	mov	r5, #0
   15f48:	b	159f8 <table_cell_from_buffer@@Base+0xb4>
   15f4c:	add	r2, sp, #8
   15f50:	movw	r1, #25092	; 0x6204
   15f54:	movt	r1, #1
   15f58:	mov	r0, r5
   15f5c:	bl	11bb0 <__isoc99_sscanf@plt>
   15f60:	cmp	r0, #1
   15f64:	mvnne	r5, #0
   15f68:	bne	159f8 <table_cell_from_buffer@@Base+0xb4>
   15f6c:	ldrb	r3, [sp, #8]
   15f70:	mov	r2, r4
   15f74:	mov	r1, r7
   15f78:	mov	r0, r6
   15f7c:	bl	14bd0 <table_set_uchar@@Base>
   15f80:	mov	r5, #0
   15f84:	b	159f8 <table_cell_from_buffer@@Base+0xb4>
   15f88:	add	r2, sp, #8
   15f8c:	movw	r1, #25096	; 0x6208
   15f90:	movt	r1, #1
   15f94:	mov	r0, r5
   15f98:	bl	11bb0 <__isoc99_sscanf@plt>
   15f9c:	cmp	r0, #1
   15fa0:	mvnne	r5, #0
   15fa4:	bne	159f8 <table_cell_from_buffer@@Base+0xb4>
   15fa8:	ldr	r3, [sp, #8]
   15fac:	mov	r2, r4
   15fb0:	mov	r1, r7
   15fb4:	mov	r0, r6
   15fb8:	bl	14bf4 <table_set_ptr@@Base>
   15fbc:	mov	r5, #0
   15fc0:	b	159f8 <table_cell_from_buffer@@Base+0xb4>
   15fc4:	mov	r5, #0
   15fc8:	b	159f8 <table_cell_from_buffer@@Base+0xb4>

00015fcc <table_get_cell_ptr@@Base>:
   15fcc:	str	r4, [sp, #-8]!
   15fd0:	str	lr, [sp, #4]
   15fd4:	mov	r4, r2
   15fd8:	bl	14140 <table_get_row_ptr@@Base>
   15fdc:	ldr	r0, [r0]
   15fe0:	add	r0, r0, r4, lsl #2
   15fe4:	ldr	r4, [sp]
   15fe8:	add	sp, sp, #4
   15fec:	pop	{pc}		; (ldr pc, [sp], #4)

00015ff0 <table_cell_init@@Base>:
   15ff0:	str	r4, [sp, #-8]!
   15ff4:	str	lr, [sp, #4]
   15ff8:	bl	15fcc <table_get_cell_ptr@@Base>
   15ffc:	mov	r3, #0
   16000:	str	r3, [r0]
   16004:	ldr	r4, [sp]
   16008:	add	sp, sp, #4
   1600c:	pop	{pc}		; (ldr pc, [sp], #4)

00016010 <table_cell_destroy@@Base>:
   16010:	strd	r4, [sp, #-16]!
   16014:	str	r6, [sp, #8]
   16018:	str	lr, [sp, #12]
   1601c:	mov	r5, r0
   16020:	mov	r6, r1
   16024:	mov	r4, r2
   16028:	mov	r1, r2
   1602c:	bl	12fc4 <table_get_column_data_type@@Base>
   16030:	cmp	r0, #23
   16034:	bne	16048 <table_cell_destroy@@Base+0x38>
   16038:	ldrd	r4, [sp]
   1603c:	ldr	r6, [sp, #8]
   16040:	add	sp, sp, #12
   16044:	pop	{pc}		; (ldr pc, [sp], #4)
   16048:	mov	r2, r4
   1604c:	mov	r1, r6
   16050:	mov	r0, r5
   16054:	bl	15fcc <table_get_cell_ptr@@Base>
   16058:	ldr	r0, [r0]
   1605c:	cmp	r0, #0
   16060:	beq	16038 <table_cell_destroy@@Base+0x28>
   16064:	bl	11b38 <free@plt>
   16068:	b	16038 <table_cell_destroy@@Base+0x28>

0001606c <table_cell_nullify@@Base>:
   1606c:	str	r4, [sp, #-8]!
   16070:	str	lr, [sp, #4]
   16074:	bl	15fcc <table_get_cell_ptr@@Base>
   16078:	mov	r4, r0
   1607c:	ldr	r0, [r0]
   16080:	cmp	r0, #0
   16084:	beq	16094 <table_cell_nullify@@Base+0x28>
   16088:	bl	11b38 <free@plt>
   1608c:	mov	r3, #0
   16090:	str	r3, [r4]
   16094:	mov	r0, #0
   16098:	ldr	r4, [sp]
   1609c:	add	sp, sp, #4
   160a0:	pop	{pc}		; (ldr pc, [sp], #4)

000160a4 <__libc_csu_init@@Base>:
   160a4:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   160a8:	mov	r7, r0
   160ac:	ldr	r6, [pc, #72]	; 160fc <__libc_csu_init@@Base+0x58>
   160b0:	ldr	r5, [pc, #72]	; 16100 <__libc_csu_init@@Base+0x5c>
   160b4:	add	r6, pc, r6
   160b8:	add	r5, pc, r5
   160bc:	sub	r6, r6, r5
   160c0:	mov	r8, r1
   160c4:	mov	r9, r2
   160c8:	bl	11b00 <strcmp@plt-0x20>
   160cc:	asrs	r6, r6, #2
   160d0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   160d4:	mov	r4, #0
   160d8:	add	r4, r4, #1
   160dc:	ldr	r3, [r5], #4
   160e0:	mov	r2, r9
   160e4:	mov	r1, r8
   160e8:	mov	r0, r7
   160ec:	blx	r3
   160f0:	cmp	r6, r4
   160f4:	bne	160d8 <__libc_csu_init@@Base+0x34>
   160f8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   160fc:	andeq	r0, r1, r8, asr lr
   16100:	andeq	r0, r1, r0, asr lr

00016104 <__libc_csu_fini@@Base>:
   16104:	bx	lr

Disassembly of section .fini:

00016108 <.fini>:
   16108:	push	{r3, lr}
   1610c:	pop	{r3, pc}
