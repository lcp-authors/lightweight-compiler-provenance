
../repos/coreutils/src/head:     file format elf32-littlearm


Disassembly of section .init:

00010e30 <.init>:
   10e30:	push	{r3, lr}
   10e34:	bl	11120 <__assert_fail@plt+0x48>
   10e38:	pop	{r3, pc}

Disassembly of section .plt:

00010e3c <calloc@plt-0x14>:
   10e3c:	push	{lr}		; (str lr, [sp, #-4]!)
   10e40:	ldr	lr, [pc, #4]	; 10e4c <calloc@plt-0x4>
   10e44:	add	lr, pc, lr
   10e48:	ldr	pc, [lr, #8]!
   10e4c:			; <UNDEFINED> instruction: 0x0001f1b4

00010e50 <calloc@plt>:
   10e50:	add	ip, pc, #0, 12
   10e54:	add	ip, ip, #126976	; 0x1f000
   10e58:	ldr	pc, [ip, #436]!	; 0x1b4

00010e5c <fputs_unlocked@plt>:
   10e5c:	add	ip, pc, #0, 12
   10e60:	add	ip, ip, #126976	; 0x1f000
   10e64:	ldr	pc, [ip, #428]!	; 0x1ac

00010e68 <raise@plt>:
   10e68:	add	ip, pc, #0, 12
   10e6c:	add	ip, ip, #126976	; 0x1f000
   10e70:	ldr	pc, [ip, #420]!	; 0x1a4

00010e74 <strcmp@plt>:
   10e74:	add	ip, pc, #0, 12
   10e78:	add	ip, ip, #126976	; 0x1f000
   10e7c:	ldr	pc, [ip, #412]!	; 0x19c

00010e80 <printf@plt>:
   10e80:	add	ip, pc, #0, 12
   10e84:	add	ip, ip, #126976	; 0x1f000
   10e88:	ldr	pc, [ip, #404]!	; 0x194

00010e8c <read@plt>:
   10e8c:	add	ip, pc, #0, 12
   10e90:	add	ip, ip, #126976	; 0x1f000
   10e94:	ldr	pc, [ip, #396]!	; 0x18c

00010e98 <fflush@plt>:
   10e98:	add	ip, pc, #0, 12
   10e9c:	add	ip, ip, #126976	; 0x1f000
   10ea0:	ldr	pc, [ip, #388]!	; 0x184

00010ea4 <free@plt>:
   10ea4:	add	ip, pc, #0, 12
   10ea8:	add	ip, ip, #126976	; 0x1f000
   10eac:	ldr	pc, [ip, #380]!	; 0x17c

00010eb0 <_exit@plt>:
   10eb0:	add	ip, pc, #0, 12
   10eb4:	add	ip, ip, #126976	; 0x1f000
   10eb8:	ldr	pc, [ip, #372]!	; 0x174

00010ebc <memcpy@plt>:
   10ebc:	add	ip, pc, #0, 12
   10ec0:	add	ip, ip, #126976	; 0x1f000
   10ec4:	ldr	pc, [ip, #364]!	; 0x16c

00010ec8 <mbsinit@plt>:
   10ec8:	add	ip, pc, #0, 12
   10ecc:	add	ip, ip, #126976	; 0x1f000
   10ed0:	ldr	pc, [ip, #356]!	; 0x164

00010ed4 <fwrite_unlocked@plt>:
   10ed4:	add	ip, pc, #0, 12
   10ed8:	add	ip, ip, #126976	; 0x1f000
   10edc:	ldr	pc, [ip, #348]!	; 0x15c

00010ee0 <memcmp@plt>:
   10ee0:	add	ip, pc, #0, 12
   10ee4:	add	ip, ip, #126976	; 0x1f000
   10ee8:	ldr	pc, [ip, #340]!	; 0x154

00010eec <realloc@plt>:
   10eec:	add	ip, pc, #0, 12
   10ef0:	add	ip, ip, #126976	; 0x1f000
   10ef4:	ldr	pc, [ip, #332]!	; 0x14c

00010ef8 <textdomain@plt>:
   10ef8:	add	ip, pc, #0, 12
   10efc:	add	ip, ip, #126976	; 0x1f000
   10f00:	ldr	pc, [ip, #324]!	; 0x144

00010f04 <rawmemchr@plt>:
   10f04:	add	ip, pc, #0, 12
   10f08:	add	ip, ip, #126976	; 0x1f000
   10f0c:	ldr	pc, [ip, #316]!	; 0x13c

00010f10 <iswprint@plt>:
   10f10:	add	ip, pc, #0, 12
   10f14:	add	ip, ip, #126976	; 0x1f000
   10f18:	ldr	pc, [ip, #308]!	; 0x134

00010f1c <__fxstat64@plt>:
   10f1c:	add	ip, pc, #0, 12
   10f20:	add	ip, ip, #126976	; 0x1f000
   10f24:	ldr	pc, [ip, #300]!	; 0x12c

00010f28 <lseek64@plt>:
   10f28:	add	ip, pc, #0, 12
   10f2c:	add	ip, ip, #126976	; 0x1f000
   10f30:	ldr	pc, [ip, #292]!	; 0x124

00010f34 <__ctype_get_mb_cur_max@plt>:
   10f34:	add	ip, pc, #0, 12
   10f38:	add	ip, ip, #126976	; 0x1f000
   10f3c:	ldr	pc, [ip, #284]!	; 0x11c

00010f40 <__fpending@plt>:
   10f40:	add	ip, pc, #0, 12
   10f44:	add	ip, ip, #126976	; 0x1f000
   10f48:	ldr	pc, [ip, #276]!	; 0x114

00010f4c <ferror_unlocked@plt>:
   10f4c:	add	ip, pc, #0, 12
   10f50:	add	ip, ip, #126976	; 0x1f000
   10f54:	ldr	pc, [ip, #268]!	; 0x10c

00010f58 <mbrtowc@plt>:
   10f58:	add	ip, pc, #0, 12
   10f5c:	add	ip, ip, #126976	; 0x1f000
   10f60:	ldr	pc, [ip, #260]!	; 0x104

00010f64 <error@plt>:
   10f64:	add	ip, pc, #0, 12
   10f68:	add	ip, ip, #126976	; 0x1f000
   10f6c:	ldr	pc, [ip, #252]!	; 0xfc

00010f70 <open64@plt>:
   10f70:	add	ip, pc, #0, 12
   10f74:	add	ip, ip, #126976	; 0x1f000
   10f78:	ldr	pc, [ip, #244]!	; 0xf4

00010f7c <malloc@plt>:
   10f7c:	add	ip, pc, #0, 12
   10f80:	add	ip, ip, #126976	; 0x1f000
   10f84:	ldr	pc, [ip, #236]!	; 0xec

00010f88 <__libc_start_main@plt>:
   10f88:	add	ip, pc, #0, 12
   10f8c:	add	ip, ip, #126976	; 0x1f000
   10f90:	ldr	pc, [ip, #228]!	; 0xe4

00010f94 <__freading@plt>:
   10f94:	add	ip, pc, #0, 12
   10f98:	add	ip, ip, #126976	; 0x1f000
   10f9c:	ldr	pc, [ip, #220]!	; 0xdc

00010fa0 <__gmon_start__@plt>:
   10fa0:	add	ip, pc, #0, 12
   10fa4:	add	ip, ip, #126976	; 0x1f000
   10fa8:	ldr	pc, [ip, #212]!	; 0xd4

00010fac <getopt_long@plt>:
   10fac:	add	ip, pc, #0, 12
   10fb0:	add	ip, ip, #126976	; 0x1f000
   10fb4:	ldr	pc, [ip, #204]!	; 0xcc

00010fb8 <__ctype_b_loc@plt>:
   10fb8:	add	ip, pc, #0, 12
   10fbc:	add	ip, ip, #126976	; 0x1f000
   10fc0:	ldr	pc, [ip, #196]!	; 0xc4

00010fc4 <exit@plt>:
   10fc4:	add	ip, pc, #0, 12
   10fc8:	add	ip, ip, #126976	; 0x1f000
   10fcc:	ldr	pc, [ip, #188]!	; 0xbc

00010fd0 <gettext@plt>:
   10fd0:	add	ip, pc, #0, 12
   10fd4:	add	ip, ip, #126976	; 0x1f000
   10fd8:	ldr	pc, [ip, #180]!	; 0xb4

00010fdc <strlen@plt>:
   10fdc:	add	ip, pc, #0, 12
   10fe0:	add	ip, ip, #126976	; 0x1f000
   10fe4:	ldr	pc, [ip, #172]!	; 0xac

00010fe8 <strchr@plt>:
   10fe8:	add	ip, pc, #0, 12
   10fec:	add	ip, ip, #126976	; 0x1f000
   10ff0:	ldr	pc, [ip, #164]!	; 0xa4

00010ff4 <memrchr@plt>:
   10ff4:	add	ip, pc, #0, 12
   10ff8:	add	ip, ip, #126976	; 0x1f000
   10ffc:	ldr	pc, [ip, #156]!	; 0x9c

00011000 <fprintf@plt>:
   11000:	add	ip, pc, #0, 12
   11004:	add	ip, ip, #126976	; 0x1f000
   11008:	ldr	pc, [ip, #148]!	; 0x94

0001100c <__errno_location@plt>:
   1100c:	add	ip, pc, #0, 12
   11010:	add	ip, ip, #126976	; 0x1f000
   11014:	ldr	pc, [ip, #140]!	; 0x8c

00011018 <__cxa_atexit@plt>:
   11018:	add	ip, pc, #0, 12
   1101c:	add	ip, ip, #126976	; 0x1f000
   11020:	ldr	pc, [ip, #132]!	; 0x84

00011024 <memset@plt>:
   11024:	add	ip, pc, #0, 12
   11028:	add	ip, ip, #126976	; 0x1f000
   1102c:	ldr	pc, [ip, #124]!	; 0x7c

00011030 <fileno@plt>:
   11030:	add	ip, pc, #0, 12
   11034:	add	ip, ip, #126976	; 0x1f000
   11038:	ldr	pc, [ip, #116]!	; 0x74

0001103c <strtoumax@plt>:
   1103c:	add	ip, pc, #0, 12
   11040:	add	ip, ip, #126976	; 0x1f000
   11044:	ldr	pc, [ip, #108]!	; 0x6c

00011048 <memchr@plt>:
   11048:	add	ip, pc, #0, 12
   1104c:	add	ip, ip, #126976	; 0x1f000
   11050:	ldr	pc, [ip, #100]!	; 0x64

00011054 <fclose@plt>:
   11054:	add	ip, pc, #0, 12
   11058:	add	ip, ip, #126976	; 0x1f000
   1105c:	ldr	pc, [ip, #92]!	; 0x5c

00011060 <fseeko64@plt>:
   11060:	add	ip, pc, #0, 12
   11064:	add	ip, ip, #126976	; 0x1f000
   11068:	ldr	pc, [ip, #84]!	; 0x54

0001106c <setlocale@plt>:
   1106c:	add	ip, pc, #0, 12
   11070:	add	ip, ip, #126976	; 0x1f000
   11074:	ldr	pc, [ip, #76]!	; 0x4c

00011078 <strrchr@plt>:
   11078:	add	ip, pc, #0, 12
   1107c:	add	ip, ip, #126976	; 0x1f000
   11080:	ldr	pc, [ip, #68]!	; 0x44

00011084 <nl_langinfo@plt>:
   11084:	add	ip, pc, #0, 12
   11088:	add	ip, ip, #126976	; 0x1f000
   1108c:	ldr	pc, [ip, #60]!	; 0x3c

00011090 <clearerr_unlocked@plt>:
   11090:	add	ip, pc, #0, 12
   11094:	add	ip, ip, #126976	; 0x1f000
   11098:	ldr	pc, [ip, #52]!	; 0x34

0001109c <bindtextdomain@plt>:
   1109c:	add	ip, pc, #0, 12
   110a0:	add	ip, ip, #126976	; 0x1f000
   110a4:	ldr	pc, [ip, #44]!	; 0x2c

000110a8 <fputs@plt>:
   110a8:	add	ip, pc, #0, 12
   110ac:	add	ip, ip, #126976	; 0x1f000
   110b0:	ldr	pc, [ip, #36]!	; 0x24

000110b4 <strncmp@plt>:
   110b4:	add	ip, pc, #0, 12
   110b8:	add	ip, ip, #126976	; 0x1f000
   110bc:	ldr	pc, [ip, #28]!

000110c0 <abort@plt>:
   110c0:	add	ip, pc, #0, 12
   110c4:	add	ip, ip, #126976	; 0x1f000
   110c8:	ldr	pc, [ip, #20]!

000110cc <close@plt>:
   110cc:	add	ip, pc, #0, 12
   110d0:	add	ip, ip, #126976	; 0x1f000
   110d4:	ldr	pc, [ip, #12]!

000110d8 <__assert_fail@plt>:
   110d8:	add	ip, pc, #0, 12
   110dc:	add	ip, ip, #126976	; 0x1f000
   110e0:	ldr	pc, [ip, #4]!

Disassembly of section .text:

000110e4 <.text>:
   110e4:	mov	fp, #0
   110e8:	mov	lr, #0
   110ec:	pop	{r1}		; (ldr r1, [sp], #4)
   110f0:	mov	r2, sp
   110f4:	push	{r2}		; (str r2, [sp, #-4]!)
   110f8:	push	{r0}		; (str r0, [sp, #-4]!)
   110fc:	ldr	ip, [pc, #16]	; 11114 <__assert_fail@plt+0x3c>
   11100:	push	{ip}		; (str ip, [sp, #-4]!)
   11104:	ldr	r0, [pc, #12]	; 11118 <__assert_fail@plt+0x40>
   11108:	ldr	r3, [pc, #12]	; 1111c <__assert_fail@plt+0x44>
   1110c:	bl	10f88 <__libc_start_main@plt>
   11110:	bl	110c0 <abort@plt>
   11114:			; <UNDEFINED> instruction: 0x0001ebb8
   11118:	andeq	r1, r1, ip, asr r5
   1111c:	andeq	lr, r1, r8, asr fp
   11120:	ldr	r3, [pc, #20]	; 1113c <__assert_fail@plt+0x64>
   11124:	ldr	r2, [pc, #20]	; 11140 <__assert_fail@plt+0x68>
   11128:	add	r3, pc, r3
   1112c:	ldr	r2, [r3, r2]
   11130:	cmp	r2, #0
   11134:	bxeq	lr
   11138:	b	10fa0 <__gmon_start__@plt>
   1113c:	ldrdeq	lr, [r1], -r0
   11140:	andeq	r0, r0, r8, ror #1
   11144:	ldr	r0, [pc, #24]	; 11164 <__assert_fail@plt+0x8c>
   11148:	ldr	r3, [pc, #24]	; 11168 <__assert_fail@plt+0x90>
   1114c:	cmp	r3, r0
   11150:	bxeq	lr
   11154:	ldr	r3, [pc, #16]	; 1116c <__assert_fail@plt+0x94>
   11158:	cmp	r3, #0
   1115c:	bxeq	lr
   11160:	bx	r3
   11164:	andeq	r0, r3, r0, asr #2
   11168:	andeq	r0, r3, r0, asr #2
   1116c:	andeq	r0, r0, r0
   11170:	ldr	r0, [pc, #36]	; 1119c <__assert_fail@plt+0xc4>
   11174:	ldr	r1, [pc, #36]	; 111a0 <__assert_fail@plt+0xc8>
   11178:	sub	r1, r1, r0
   1117c:	asr	r1, r1, #2
   11180:	add	r1, r1, r1, lsr #31
   11184:	asrs	r1, r1, #1
   11188:	bxeq	lr
   1118c:	ldr	r3, [pc, #16]	; 111a4 <__assert_fail@plt+0xcc>
   11190:	cmp	r3, #0
   11194:	bxeq	lr
   11198:	bx	r3
   1119c:	andeq	r0, r3, r0, asr #2
   111a0:	andeq	r0, r3, r0, asr #2
   111a4:	andeq	r0, r0, r0
   111a8:	push	{r4, lr}
   111ac:	ldr	r4, [pc, #24]	; 111cc <__assert_fail@plt+0xf4>
   111b0:	ldrb	r3, [r4]
   111b4:	cmp	r3, #0
   111b8:	popne	{r4, pc}
   111bc:	bl	11144 <__assert_fail@plt+0x6c>
   111c0:	mov	r3, #1
   111c4:	strb	r3, [r4]
   111c8:	pop	{r4, pc}
   111cc:	andeq	r0, r3, ip, asr r1
   111d0:	b	11170 <__assert_fail@plt+0x98>
   111d4:	push	{fp, lr}
   111d8:	mov	fp, sp
   111dc:	sub	sp, sp, #48	; 0x30
   111e0:	str	r0, [fp, #-4]
   111e4:	ldr	r0, [fp, #-4]
   111e8:	cmp	r0, #0
   111ec:	beq	11238 <__assert_fail@plt+0x160>
   111f0:	b	111f4 <__assert_fail@plt+0x11c>
   111f4:	movw	r0, #336	; 0x150
   111f8:	movt	r0, #3
   111fc:	ldr	r0, [r0]
   11200:	movw	r1, #60400	; 0xebf0
   11204:	movt	r1, #1
   11208:	str	r0, [fp, #-8]
   1120c:	mov	r0, r1
   11210:	bl	10fd0 <gettext@plt>
   11214:	movw	r1, #364	; 0x16c
   11218:	movt	r1, #3
   1121c:	ldr	r2, [r1]
   11220:	ldr	r1, [fp, #-8]
   11224:	str	r0, [fp, #-12]
   11228:	mov	r0, r1
   1122c:	ldr	r1, [fp, #-12]
   11230:	bl	11000 <fprintf@plt>
   11234:	b	11358 <__assert_fail@plt+0x280>
   11238:	movw	r0, #60439	; 0xec17
   1123c:	movt	r0, #1
   11240:	bl	10fd0 <gettext@plt>
   11244:	movw	r1, #364	; 0x16c
   11248:	movt	r1, #3
   1124c:	ldr	r1, [r1]
   11250:	bl	10e80 <printf@plt>
   11254:	movw	r1, #60472	; 0xec38
   11258:	movt	r1, #1
   1125c:	str	r0, [fp, #-16]
   11260:	mov	r0, r1
   11264:	bl	10fd0 <gettext@plt>
   11268:	movw	r1, #10
   1126c:	bl	10e80 <printf@plt>
   11270:	str	r0, [fp, #-20]	; 0xffffffec
   11274:	bl	11360 <__assert_fail@plt+0x288>
   11278:	bl	11388 <__assert_fail@plt+0x2b0>
   1127c:	movw	r0, #60605	; 0xecbd
   11280:	movt	r0, #1
   11284:	bl	10fd0 <gettext@plt>
   11288:	movw	r1, #10
   1128c:	bl	10e80 <printf@plt>
   11290:	movw	r1, #61003	; 0xee4b
   11294:	movt	r1, #1
   11298:	str	r0, [sp, #24]
   1129c:	mov	r0, r1
   112a0:	bl	10fd0 <gettext@plt>
   112a4:	movw	r1, #340	; 0x154
   112a8:	movt	r1, #3
   112ac:	ldr	r1, [r1]
   112b0:	bl	10e5c <fputs_unlocked@plt>
   112b4:	movw	r1, #61135	; 0xeecf
   112b8:	movt	r1, #1
   112bc:	str	r0, [sp, #20]
   112c0:	mov	r0, r1
   112c4:	bl	10fd0 <gettext@plt>
   112c8:	movw	r1, #340	; 0x154
   112cc:	movt	r1, #3
   112d0:	ldr	r1, [r1]
   112d4:	bl	10e5c <fputs_unlocked@plt>
   112d8:	movw	r1, #61198	; 0xef0e
   112dc:	movt	r1, #1
   112e0:	str	r0, [sp, #16]
   112e4:	mov	r0, r1
   112e8:	bl	10fd0 <gettext@plt>
   112ec:	movw	r1, #340	; 0x154
   112f0:	movt	r1, #3
   112f4:	ldr	r1, [r1]
   112f8:	bl	10e5c <fputs_unlocked@plt>
   112fc:	movw	r1, #61243	; 0xef3b
   11300:	movt	r1, #1
   11304:	str	r0, [sp, #12]
   11308:	mov	r0, r1
   1130c:	bl	10fd0 <gettext@plt>
   11310:	movw	r1, #340	; 0x154
   11314:	movt	r1, #3
   11318:	ldr	r1, [r1]
   1131c:	bl	10e5c <fputs_unlocked@plt>
   11320:	movw	r1, #61297	; 0xef71
   11324:	movt	r1, #1
   11328:	str	r0, [sp, #8]
   1132c:	mov	r0, r1
   11330:	bl	10fd0 <gettext@plt>
   11334:	movw	r1, #340	; 0x154
   11338:	movt	r1, #3
   1133c:	ldr	r1, [r1]
   11340:	bl	10e5c <fputs_unlocked@plt>
   11344:	movw	r1, #61509	; 0xf045
   11348:	movt	r1, #1
   1134c:	str	r0, [sp, #4]
   11350:	mov	r0, r1
   11354:	bl	113b0 <__assert_fail@plt+0x2d8>
   11358:	ldr	r0, [fp, #-4]
   1135c:	bl	10fc4 <exit@plt>
   11360:	push	{fp, lr}
   11364:	mov	fp, sp
   11368:	movw	r0, #61660	; 0xf0dc
   1136c:	movt	r0, #1
   11370:	bl	10fd0 <gettext@plt>
   11374:	movw	r1, #340	; 0x154
   11378:	movt	r1, #3
   1137c:	ldr	r1, [r1]
   11380:	bl	10e5c <fputs_unlocked@plt>
   11384:	pop	{fp, pc}
   11388:	push	{fp, lr}
   1138c:	mov	fp, sp
   11390:	movw	r0, #61716	; 0xf114
   11394:	movt	r0, #1
   11398:	bl	10fd0 <gettext@plt>
   1139c:	movw	r1, #340	; 0x154
   113a0:	movt	r1, #3
   113a4:	ldr	r1, [r1]
   113a8:	bl	10e5c <fputs_unlocked@plt>
   113ac:	pop	{fp, pc}
   113b0:	push	{fp, lr}
   113b4:	mov	fp, sp
   113b8:	sub	sp, sp, #88	; 0x58
   113bc:	add	r1, sp, #28
   113c0:	movw	r2, #62648	; 0xf4b8
   113c4:	movt	r2, #1
   113c8:	str	r0, [fp, #-4]
   113cc:	mov	r0, r1
   113d0:	str	r1, [sp, #12]
   113d4:	mov	r1, r2
   113d8:	movw	r2, #56	; 0x38
   113dc:	bl	10ebc <memcpy@plt>
   113e0:	ldr	r0, [fp, #-4]
   113e4:	str	r0, [sp, #24]
   113e8:	ldr	r0, [sp, #12]
   113ec:	str	r0, [sp, #20]
   113f0:	ldr	r0, [sp, #20]
   113f4:	ldr	r0, [r0]
   113f8:	movw	r1, #0
   113fc:	cmp	r0, r1
   11400:	movw	r0, #0
   11404:	str	r0, [sp, #8]
   11408:	beq	11434 <__assert_fail@plt+0x35c>
   1140c:	ldr	r0, [fp, #-4]
   11410:	ldr	r1, [sp, #20]
   11414:	ldr	r1, [r1]
   11418:	bl	10e74 <strcmp@plt>
   1141c:	cmp	r0, #0
   11420:	movw	r0, #0
   11424:	moveq	r0, #1
   11428:	mvn	r1, #0
   1142c:	eor	r0, r0, r1
   11430:	str	r0, [sp, #8]
   11434:	ldr	r0, [sp, #8]
   11438:	tst	r0, #1
   1143c:	beq	11450 <__assert_fail@plt+0x378>
   11440:	ldr	r0, [sp, #20]
   11444:	add	r0, r0, #8
   11448:	str	r0, [sp, #20]
   1144c:	b	113f0 <__assert_fail@plt+0x318>
   11450:	ldr	r0, [sp, #20]
   11454:	ldr	r0, [r0, #4]
   11458:	movw	r1, #0
   1145c:	cmp	r0, r1
   11460:	beq	11470 <__assert_fail@plt+0x398>
   11464:	ldr	r0, [sp, #20]
   11468:	ldr	r0, [r0, #4]
   1146c:	str	r0, [sp, #24]
   11470:	movw	r0, #61886	; 0xf1be
   11474:	movt	r0, #1
   11478:	bl	10fd0 <gettext@plt>
   1147c:	movw	r1, #61586	; 0xf092
   11480:	movt	r1, #1
   11484:	movw	r2, #61909	; 0xf1d5
   11488:	movt	r2, #1
   1148c:	bl	10e80 <printf@plt>
   11490:	movw	r1, #5
   11494:	str	r0, [sp, #4]
   11498:	mov	r0, r1
   1149c:	movw	r1, #0
   114a0:	bl	1106c <setlocale@plt>
   114a4:	str	r0, [sp, #16]
   114a8:	ldr	r0, [sp, #16]
   114ac:	movw	r1, #0
   114b0:	cmp	r0, r1
   114b4:	beq	114f0 <__assert_fail@plt+0x418>
   114b8:	ldr	r0, [sp, #16]
   114bc:	movw	r1, #61949	; 0xf1fd
   114c0:	movt	r1, #1
   114c4:	movw	r2, #3
   114c8:	bl	110b4 <strncmp@plt>
   114cc:	cmp	r0, #0
   114d0:	beq	114f0 <__assert_fail@plt+0x418>
   114d4:	movw	r0, #61953	; 0xf201
   114d8:	movt	r0, #1
   114dc:	bl	10fd0 <gettext@plt>
   114e0:	movw	r1, #340	; 0x154
   114e4:	movt	r1, #3
   114e8:	ldr	r1, [r1]
   114ec:	bl	10e5c <fputs_unlocked@plt>
   114f0:	movw	r0, #62024	; 0xf248
   114f4:	movt	r0, #1
   114f8:	bl	10fd0 <gettext@plt>
   114fc:	ldr	r2, [fp, #-4]
   11500:	movw	r1, #61909	; 0xf1d5
   11504:	movt	r1, #1
   11508:	bl	10e80 <printf@plt>
   1150c:	movw	r1, #62051	; 0xf263
   11510:	movt	r1, #1
   11514:	str	r0, [sp]
   11518:	mov	r0, r1
   1151c:	bl	10fd0 <gettext@plt>
   11520:	ldr	r1, [sp, #24]
   11524:	ldr	r2, [sp, #24]
   11528:	ldr	r3, [fp, #-4]
   1152c:	cmp	r2, r3
   11530:	movw	r2, #0
   11534:	moveq	r2, #1
   11538:	tst	r2, #1
   1153c:	movw	r2, #62101	; 0xf295
   11540:	movt	r2, #1
   11544:	movw	r3, #61819	; 0xf17b
   11548:	movt	r3, #1
   1154c:	movne	r2, r3
   11550:	bl	10e80 <printf@plt>
   11554:	mov	sp, fp
   11558:	pop	{fp, pc}
   1155c:	push	{fp, lr}
   11560:	mov	fp, sp
   11564:	sub	sp, sp, #144	; 0x90
   11568:	mov	r2, #0
   1156c:	str	r2, [fp, #-4]
   11570:	str	r0, [fp, #-8]
   11574:	str	r1, [fp, #-12]
   11578:	str	r2, [fp, #-16]
   1157c:	mov	r0, #1
   11580:	strb	r0, [fp, #-17]	; 0xffffffef
   11584:	str	r2, [fp, #-36]	; 0xffffffdc
   11588:	mov	r0, #10
   1158c:	str	r0, [fp, #-40]	; 0xffffffd8
   11590:	movw	r0, #1
   11594:	strb	r0, [fp, #-41]	; 0xffffffd7
   11598:	movw	r0, #0
   1159c:	strb	r0, [fp, #-42]	; 0xffffffd6
   115a0:	ldr	r0, [fp, #-12]
   115a4:	ldr	r0, [r0]
   115a8:	bl	143f0 <__assert_fail@plt+0x3318>
   115ac:	movw	r0, #6
   115b0:	movw	r1, #62101	; 0xf295
   115b4:	movt	r1, #1
   115b8:	bl	1106c <setlocale@plt>
   115bc:	movw	r1, #61590	; 0xf096
   115c0:	movt	r1, #1
   115c4:	str	r0, [sp, #56]	; 0x38
   115c8:	mov	r0, r1
   115cc:	movw	r1, #61514	; 0xf04a
   115d0:	movt	r1, #1
   115d4:	bl	1109c <bindtextdomain@plt>
   115d8:	movw	r1, #61590	; 0xf096
   115dc:	movt	r1, #1
   115e0:	str	r0, [sp, #52]	; 0x34
   115e4:	mov	r0, r1
   115e8:	bl	10ef8 <textdomain@plt>
   115ec:	movw	r1, #16252	; 0x3f7c
   115f0:	movt	r1, #1
   115f4:	str	r0, [sp, #48]	; 0x30
   115f8:	mov	r0, r1
   115fc:	bl	1ebbc <__assert_fail@plt+0xdae4>
   11600:	movw	r1, #349	; 0x15d
   11604:	movt	r1, #3
   11608:	movw	r2, #0
   1160c:	strb	r2, [r1]
   11610:	movw	r1, #350	; 0x15e
   11614:	movt	r1, #3
   11618:	strb	r2, [r1]
   1161c:	movw	r1, #351	; 0x15f
   11620:	movt	r1, #3
   11624:	movw	r2, #10
   11628:	strb	r2, [r1]
   1162c:	ldr	r1, [fp, #-8]
   11630:	movw	r2, #1
   11634:	cmp	r2, r1
   11638:	bge	11864 <__assert_fail@plt+0x78c>
   1163c:	ldr	r0, [fp, #-12]
   11640:	ldr	r0, [r0, #4]
   11644:	ldrb	r0, [r0]
   11648:	cmp	r0, #45	; 0x2d
   1164c:	bne	11864 <__assert_fail@plt+0x78c>
   11650:	ldr	r0, [fp, #-12]
   11654:	ldr	r0, [r0, #4]
   11658:	ldrb	r0, [r0, #1]
   1165c:	sub	r0, r0, #48	; 0x30
   11660:	cmp	r0, #9
   11664:	bhi	11864 <__assert_fail@plt+0x78c>
   11668:	ldr	r0, [fp, #-12]
   1166c:	ldr	r0, [r0, #4]
   11670:	str	r0, [fp, #-52]	; 0xffffffcc
   11674:	ldr	r0, [fp, #-52]	; 0xffffffcc
   11678:	add	r0, r0, #1
   1167c:	str	r0, [fp, #-52]	; 0xffffffcc
   11680:	str	r0, [fp, #-56]	; 0xffffffc8
   11684:	movw	r0, #0
   11688:	strb	r0, [fp, #-61]	; 0xffffffc3
   1168c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   11690:	add	r0, r0, #1
   11694:	str	r0, [fp, #-52]	; 0xffffffcc
   11698:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1169c:	ldrb	r0, [r0]
   116a0:	sub	r0, r0, #48	; 0x30
   116a4:	cmp	r0, #9
   116a8:	bls	1168c <__assert_fail@plt+0x5b4>
   116ac:	ldr	r0, [fp, #-52]	; 0xffffffcc
   116b0:	str	r0, [fp, #-60]	; 0xffffffc4
   116b4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   116b8:	ldrsb	r0, [r0]
   116bc:	cmp	r0, #0
   116c0:	beq	117f4 <__assert_fail@plt+0x71c>
   116c4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   116c8:	ldrb	r0, [r0]
   116cc:	sub	r0, r0, #98	; 0x62
   116d0:	cmp	r0, #24
   116d4:	str	r0, [sp, #44]	; 0x2c
   116d8:	bhi	117b0 <__assert_fail@plt+0x6d8>
   116dc:	add	r0, pc, #8
   116e0:	ldr	r1, [sp, #44]	; 0x2c
   116e4:	ldr	r0, [r0, r1, lsl #2]
   116e8:	mov	pc, r0
   116ec:	andeq	r1, r1, r0, ror #14
   116f0:	andeq	r1, r1, r0, asr r7
   116f4:			; <UNDEFINED> instruction: 0x000117b0
   116f8:			; <UNDEFINED> instruction: 0x000117b0
   116fc:			; <UNDEFINED> instruction: 0x000117b0
   11700:			; <UNDEFINED> instruction: 0x000117b0
   11704:			; <UNDEFINED> instruction: 0x000117b0
   11708:			; <UNDEFINED> instruction: 0x000117b0
   1170c:			; <UNDEFINED> instruction: 0x000117b0
   11710:	andeq	r1, r1, r0, ror #14
   11714:	andeq	r1, r1, r8, ror r7
   11718:	andeq	r1, r1, r0, ror #14
   1171c:			; <UNDEFINED> instruction: 0x000117b0
   11720:			; <UNDEFINED> instruction: 0x000117b0
   11724:			; <UNDEFINED> instruction: 0x000117b0
   11728:	andeq	r1, r1, r4, lsl #15
   1172c:			; <UNDEFINED> instruction: 0x000117b0
   11730:			; <UNDEFINED> instruction: 0x000117b0
   11734:			; <UNDEFINED> instruction: 0x000117b0
   11738:			; <UNDEFINED> instruction: 0x000117b0
   1173c:	muleq	r1, r0, r7
   11740:			; <UNDEFINED> instruction: 0x000117b0
   11744:			; <UNDEFINED> instruction: 0x000117b0
   11748:			; <UNDEFINED> instruction: 0x000117b0
   1174c:	muleq	r1, ip, r7
   11750:	movw	r0, #0
   11754:	strb	r0, [fp, #-41]	; 0xffffffd7
   11758:	strb	r0, [fp, #-61]	; 0xffffffc3
   1175c:	b	117e0 <__assert_fail@plt+0x708>
   11760:	movw	r0, #0
   11764:	strb	r0, [fp, #-41]	; 0xffffffd7
   11768:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1176c:	ldrb	r0, [r0]
   11770:	strb	r0, [fp, #-61]	; 0xffffffc3
   11774:	b	117e0 <__assert_fail@plt+0x708>
   11778:	movw	r0, #1
   1177c:	strb	r0, [fp, #-41]	; 0xffffffd7
   11780:	b	117e0 <__assert_fail@plt+0x708>
   11784:	movw	r0, #2
   11788:	str	r0, [fp, #-16]
   1178c:	b	117e0 <__assert_fail@plt+0x708>
   11790:	movw	r0, #1
   11794:	str	r0, [fp, #-16]
   11798:	b	117e0 <__assert_fail@plt+0x708>
   1179c:	movw	r0, #351	; 0x15f
   117a0:	movt	r0, #3
   117a4:	movw	r1, #0
   117a8:	strb	r1, [r0]
   117ac:	b	117e0 <__assert_fail@plt+0x708>
   117b0:	movw	r0, #61538	; 0xf062
   117b4:	movt	r0, #1
   117b8:	bl	10fd0 <gettext@plt>
   117bc:	ldr	r1, [fp, #-52]	; 0xffffffcc
   117c0:	ldrb	r3, [r1]
   117c4:	movw	r1, #0
   117c8:	str	r0, [sp, #40]	; 0x28
   117cc:	mov	r0, r1
   117d0:	ldr	r2, [sp, #40]	; 0x28
   117d4:	bl	10f64 <error@plt>
   117d8:	movw	r0, #1
   117dc:	bl	111d4 <__assert_fail@plt+0xfc>
   117e0:	b	117e4 <__assert_fail@plt+0x70c>
   117e4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   117e8:	add	r0, r0, #1
   117ec:	str	r0, [fp, #-52]	; 0xffffffcc
   117f0:	b	116b4 <__assert_fail@plt+0x5dc>
   117f4:	ldrb	r0, [fp, #-61]	; 0xffffffc3
   117f8:	ldr	r1, [fp, #-60]	; 0xffffffc4
   117fc:	strb	r0, [r1]
   11800:	ldrsb	r0, [fp, #-61]	; 0xffffffc3
   11804:	cmp	r0, #0
   11808:	beq	11820 <__assert_fail@plt+0x748>
   1180c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   11810:	add	r1, r0, #1
   11814:	str	r1, [fp, #-60]	; 0xffffffc4
   11818:	movw	r1, #0
   1181c:	strb	r1, [r0, #1]
   11820:	ldr	r1, [fp, #-56]	; 0xffffffc8
   11824:	ldrb	r0, [fp, #-41]	; 0xffffffd7
   11828:	and	r0, r0, #1
   1182c:	bl	11cd8 <__assert_fail@plt+0xc00>
   11830:	str	r1, [fp, #-36]	; 0xffffffdc
   11834:	str	r0, [fp, #-40]	; 0xffffffd8
   11838:	ldr	r0, [fp, #-12]
   1183c:	ldr	r0, [r0]
   11840:	ldr	r1, [fp, #-12]
   11844:	str	r0, [r1, #4]
   11848:	ldr	r0, [fp, #-12]
   1184c:	add	r0, r0, #4
   11850:	str	r0, [fp, #-12]
   11854:	ldr	r0, [fp, #-8]
   11858:	mvn	r1, #0
   1185c:	add	r0, r0, r1
   11860:	str	r0, [fp, #-8]
   11864:	b	11868 <__assert_fail@plt+0x790>
   11868:	ldr	r0, [fp, #-8]
   1186c:	ldr	r1, [fp, #-12]
   11870:	movw	r2, #61568	; 0xf080
   11874:	movt	r2, #1
   11878:	movw	r3, #62488	; 0xf418
   1187c:	movt	r3, #1
   11880:	movw	ip, #0
   11884:	str	ip, [sp]
   11888:	bl	10fac <getopt_long@plt>
   1188c:	str	r0, [fp, #-24]	; 0xffffffe8
   11890:	cmn	r0, #1
   11894:	beq	11ad8 <__assert_fail@plt+0xa00>
   11898:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1189c:	cmn	r0, #3
   118a0:	str	r0, [sp, #36]	; 0x24
   118a4:	beq	11a44 <__assert_fail@plt+0x96c>
   118a8:	b	118ac <__assert_fail@plt+0x7d4>
   118ac:	ldr	r0, [sp, #36]	; 0x24
   118b0:	cmn	r0, #2
   118b4:	beq	11a3c <__assert_fail@plt+0x964>
   118b8:	b	118bc <__assert_fail@plt+0x7e4>
   118bc:	ldr	r0, [sp, #36]	; 0x24
   118c0:	cmp	r0, #99	; 0x63
   118c4:	beq	11930 <__assert_fail@plt+0x858>
   118c8:	b	118cc <__assert_fail@plt+0x7f4>
   118cc:	ldr	r0, [sp, #36]	; 0x24
   118d0:	cmp	r0, #110	; 0x6e
   118d4:	beq	119a0 <__assert_fail@plt+0x8c8>
   118d8:	b	118dc <__assert_fail@plt+0x804>
   118dc:	ldr	r0, [sp, #36]	; 0x24
   118e0:	cmp	r0, #113	; 0x71
   118e4:	beq	11a10 <__assert_fail@plt+0x938>
   118e8:	b	118ec <__assert_fail@plt+0x814>
   118ec:	ldr	r0, [sp, #36]	; 0x24
   118f0:	cmp	r0, #118	; 0x76
   118f4:	beq	11a1c <__assert_fail@plt+0x944>
   118f8:	b	118fc <__assert_fail@plt+0x824>
   118fc:	ldr	r0, [sp, #36]	; 0x24
   11900:	cmp	r0, #122	; 0x7a
   11904:	beq	11a28 <__assert_fail@plt+0x950>
   11908:	b	1190c <__assert_fail@plt+0x834>
   1190c:	ldr	r0, [sp, #36]	; 0x24
   11910:	cmp	r0, #256	; 0x100
   11914:	bne	11a98 <__assert_fail@plt+0x9c0>
   11918:	b	1191c <__assert_fail@plt+0x844>
   1191c:	movw	r0, #352	; 0x160
   11920:	movt	r0, #3
   11924:	movw	r1, #1
   11928:	strb	r1, [r0]
   1192c:	b	11ad4 <__assert_fail@plt+0x9fc>
   11930:	movw	r0, #0
   11934:	strb	r0, [fp, #-41]	; 0xffffffd7
   11938:	movw	r0, #344	; 0x158
   1193c:	movt	r0, #3
   11940:	ldr	r0, [r0]
   11944:	ldrb	r0, [r0]
   11948:	cmp	r0, #45	; 0x2d
   1194c:	movw	r0, #0
   11950:	moveq	r0, #1
   11954:	and	r0, r0, #1
   11958:	strb	r0, [fp, #-42]	; 0xffffffd6
   1195c:	ldrb	r0, [fp, #-42]	; 0xffffffd6
   11960:	tst	r0, #1
   11964:	beq	1197c <__assert_fail@plt+0x8a4>
   11968:	movw	r0, #344	; 0x158
   1196c:	movt	r0, #3
   11970:	ldr	r1, [r0]
   11974:	add	r1, r1, #1
   11978:	str	r1, [r0]
   1197c:	movw	r0, #344	; 0x158
   11980:	movt	r0, #3
   11984:	ldr	r1, [r0]
   11988:	ldrb	r0, [fp, #-41]	; 0xffffffd7
   1198c:	and	r0, r0, #1
   11990:	bl	11cd8 <__assert_fail@plt+0xc00>
   11994:	str	r1, [fp, #-36]	; 0xffffffdc
   11998:	str	r0, [fp, #-40]	; 0xffffffd8
   1199c:	b	11ad4 <__assert_fail@plt+0x9fc>
   119a0:	movw	r0, #1
   119a4:	strb	r0, [fp, #-41]	; 0xffffffd7
   119a8:	movw	r0, #344	; 0x158
   119ac:	movt	r0, #3
   119b0:	ldr	r0, [r0]
   119b4:	ldrb	r0, [r0]
   119b8:	cmp	r0, #45	; 0x2d
   119bc:	movw	r0, #0
   119c0:	moveq	r0, #1
   119c4:	and	r0, r0, #1
   119c8:	strb	r0, [fp, #-42]	; 0xffffffd6
   119cc:	ldrb	r0, [fp, #-42]	; 0xffffffd6
   119d0:	tst	r0, #1
   119d4:	beq	119ec <__assert_fail@plt+0x914>
   119d8:	movw	r0, #344	; 0x158
   119dc:	movt	r0, #3
   119e0:	ldr	r1, [r0]
   119e4:	add	r1, r1, #1
   119e8:	str	r1, [r0]
   119ec:	movw	r0, #344	; 0x158
   119f0:	movt	r0, #3
   119f4:	ldr	r1, [r0]
   119f8:	ldrb	r0, [fp, #-41]	; 0xffffffd7
   119fc:	and	r0, r0, #1
   11a00:	bl	11cd8 <__assert_fail@plt+0xc00>
   11a04:	str	r1, [fp, #-36]	; 0xffffffdc
   11a08:	str	r0, [fp, #-40]	; 0xffffffd8
   11a0c:	b	11ad4 <__assert_fail@plt+0x9fc>
   11a10:	movw	r0, #2
   11a14:	str	r0, [fp, #-16]
   11a18:	b	11ad4 <__assert_fail@plt+0x9fc>
   11a1c:	movw	r0, #1
   11a20:	str	r0, [fp, #-16]
   11a24:	b	11ad4 <__assert_fail@plt+0x9fc>
   11a28:	movw	r0, #351	; 0x15f
   11a2c:	movt	r0, #3
   11a30:	movw	r1, #0
   11a34:	strb	r1, [r0]
   11a38:	b	11ad4 <__assert_fail@plt+0x9fc>
   11a3c:	movw	r0, #0
   11a40:	bl	111d4 <__assert_fail@plt+0xfc>
   11a44:	movw	r0, #340	; 0x154
   11a48:	movt	r0, #3
   11a4c:	ldr	r0, [r0]
   11a50:	movw	r1, #248	; 0xf8
   11a54:	movt	r1, #3
   11a58:	ldr	r3, [r1]
   11a5c:	movw	r1, #61509	; 0xf045
   11a60:	movt	r1, #1
   11a64:	movw	r2, #61586	; 0xf092
   11a68:	movt	r2, #1
   11a6c:	movw	ip, #61600	; 0xf0a0
   11a70:	movt	ip, #1
   11a74:	str	ip, [sp]
   11a78:	movw	ip, #61616	; 0xf0b0
   11a7c:	movt	ip, #1
   11a80:	str	ip, [sp, #4]
   11a84:	movw	ip, #0
   11a88:	str	ip, [sp, #8]
   11a8c:	bl	17378 <__assert_fail@plt+0x62a0>
   11a90:	movw	r0, #0
   11a94:	bl	10fc4 <exit@plt>
   11a98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11a9c:	sub	r0, r0, #48	; 0x30
   11aa0:	cmp	r0, #9
   11aa4:	bhi	11acc <__assert_fail@plt+0x9f4>
   11aa8:	movw	r0, #61538	; 0xf062
   11aac:	movt	r0, #1
   11ab0:	bl	10fd0 <gettext@plt>
   11ab4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11ab8:	movw	r1, #0
   11abc:	str	r0, [sp, #32]
   11ac0:	mov	r0, r1
   11ac4:	ldr	r2, [sp, #32]
   11ac8:	bl	10f64 <error@plt>
   11acc:	movw	r0, #1
   11ad0:	bl	111d4 <__assert_fail@plt+0xfc>
   11ad4:	b	11868 <__assert_fail@plt+0x790>
   11ad8:	ldr	r0, [fp, #-16]
   11adc:	cmp	r0, #1
   11ae0:	beq	11b0c <__assert_fail@plt+0xa34>
   11ae4:	ldr	r0, [fp, #-16]
   11ae8:	cmp	r0, #0
   11aec:	bne	11b1c <__assert_fail@plt+0xa44>
   11af0:	movw	r0, #328	; 0x148
   11af4:	movt	r0, #3
   11af8:	ldr	r0, [r0]
   11afc:	ldr	r1, [fp, #-8]
   11b00:	sub	r1, r1, #1
   11b04:	cmp	r0, r1
   11b08:	bge	11b1c <__assert_fail@plt+0xa44>
   11b0c:	movw	r0, #350	; 0x15e
   11b10:	movt	r0, #3
   11b14:	movw	r1, #1
   11b18:	strb	r1, [r0]
   11b1c:	ldrb	r0, [fp, #-41]	; 0xffffffd7
   11b20:	tst	r0, #1
   11b24:	bne	11ba0 <__assert_fail@plt+0xac8>
   11b28:	ldrb	r0, [fp, #-42]	; 0xffffffd6
   11b2c:	tst	r0, #1
   11b30:	beq	11ba0 <__assert_fail@plt+0xac8>
   11b34:	ldr	r0, [fp, #-36]	; 0xffffffdc
   11b38:	cmn	r0, #1
   11b3c:	bgt	11ba0 <__assert_fail@plt+0xac8>
   11b40:	b	11b44 <__assert_fail@plt+0xa6c>
   11b44:	add	r2, sp, #62	; 0x3e
   11b48:	movw	r0, #61636	; 0xf0c4
   11b4c:	movt	r0, #1
   11b50:	str	r2, [sp, #28]
   11b54:	bl	10fd0 <gettext@plt>
   11b58:	ldr	r1, [fp, #-40]	; 0xffffffd8
   11b5c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   11b60:	str	r0, [sp, #24]
   11b64:	mov	r0, r1
   11b68:	mov	r1, r2
   11b6c:	ldr	r2, [sp, #28]
   11b70:	bl	142c0 <__assert_fail@plt+0x31e8>
   11b74:	bl	16a4c <__assert_fail@plt+0x5974>
   11b78:	movw	r1, #1
   11b7c:	str	r0, [sp, #20]
   11b80:	mov	r0, r1
   11b84:	movw	r1, #75	; 0x4b
   11b88:	movw	r2, #61629	; 0xf0bd
   11b8c:	movt	r2, #1
   11b90:	ldr	r3, [sp, #24]
   11b94:	ldr	ip, [sp, #20]
   11b98:	str	ip, [sp]
   11b9c:	bl	10f64 <error@plt>
   11ba0:	movw	r0, #328	; 0x148
   11ba4:	movt	r0, #3
   11ba8:	ldr	r0, [r0]
   11bac:	ldr	r1, [fp, #-8]
   11bb0:	cmp	r0, r1
   11bb4:	bge	11bd4 <__assert_fail@plt+0xafc>
   11bb8:	ldr	r0, [fp, #-12]
   11bbc:	movw	r1, #328	; 0x148
   11bc0:	movt	r1, #3
   11bc4:	ldr	r1, [r1]
   11bc8:	add	r0, r0, r1, lsl #2
   11bcc:	str	r0, [sp, #16]
   11bd0:	b	11be4 <__assert_fail@plt+0xb0c>
   11bd4:	movw	r0, #62480	; 0xf410
   11bd8:	movt	r0, #1
   11bdc:	str	r0, [sp, #16]
   11be0:	b	11be4 <__assert_fail@plt+0xb0c>
   11be4:	ldr	r0, [sp, #16]
   11be8:	str	r0, [fp, #-48]	; 0xffffffd0
   11bec:	movw	r0, #1
   11bf0:	movw	r1, #0
   11bf4:	bl	1a28c <__assert_fail@plt+0x91b4>
   11bf8:	movw	r0, #0
   11bfc:	str	r0, [fp, #-28]	; 0xffffffe4
   11c00:	ldr	r0, [fp, #-48]	; 0xffffffd0
   11c04:	ldr	r1, [fp, #-28]	; 0xffffffe4
   11c08:	add	r0, r0, r1, lsl #2
   11c0c:	ldr	r0, [r0]
   11c10:	movw	r1, #0
   11c14:	cmp	r0, r1
   11c18:	beq	11c84 <__assert_fail@plt+0xbac>
   11c1c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   11c20:	ldr	r1, [fp, #-28]	; 0xffffffe4
   11c24:	ldr	r0, [r0, r1, lsl #2]
   11c28:	ldr	r2, [fp, #-40]	; 0xffffffd8
   11c2c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11c30:	ldrb	r1, [fp, #-41]	; 0xffffffd7
   11c34:	ldrb	ip, [fp, #-42]	; 0xffffffd6
   11c38:	and	ip, ip, #1
   11c3c:	mov	lr, sp
   11c40:	str	ip, [lr, #4]
   11c44:	and	r1, r1, #1
   11c48:	str	r1, [lr]
   11c4c:	bl	11d6c <__assert_fail@plt+0xc94>
   11c50:	and	r0, r0, #1
   11c54:	ldrb	r1, [fp, #-17]	; 0xffffffef
   11c58:	and	r1, r1, #1
   11c5c:	and	r0, r1, r0
   11c60:	cmp	r0, #0
   11c64:	movw	r0, #0
   11c68:	movne	r0, #1
   11c6c:	and	r0, r0, #1
   11c70:	strb	r0, [fp, #-17]	; 0xffffffef
   11c74:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11c78:	add	r0, r0, #1
   11c7c:	str	r0, [fp, #-28]	; 0xffffffe4
   11c80:	b	11c00 <__assert_fail@plt+0xb28>
   11c84:	movw	r0, #349	; 0x15d
   11c88:	movt	r0, #3
   11c8c:	ldrb	r0, [r0]
   11c90:	tst	r0, #1
   11c94:	beq	11cc0 <__assert_fail@plt+0xbe8>
   11c98:	movw	r0, #0
   11c9c:	bl	110cc <close@plt>
   11ca0:	cmp	r0, #0
   11ca4:	bge	11cc0 <__assert_fail@plt+0xbe8>
   11ca8:	bl	1100c <__errno_location@plt>
   11cac:	ldr	r1, [r0]
   11cb0:	movw	r0, #1
   11cb4:	movw	r2, #62797	; 0xf54d
   11cb8:	movt	r2, #1
   11cbc:	bl	10f64 <error@plt>
   11cc0:	ldrb	r0, [fp, #-17]	; 0xffffffef
   11cc4:	tst	r0, #1
   11cc8:	movw	r0, #0
   11ccc:	moveq	r0, #1
   11cd0:	mov	sp, fp
   11cd4:	pop	{fp, pc}
   11cd8:	push	{fp, lr}
   11cdc:	mov	fp, sp
   11ce0:	sub	sp, sp, #40	; 0x28
   11ce4:	and	r0, r0, #1
   11ce8:	strb	r0, [fp, #-1]
   11cec:	str	r1, [fp, #-8]
   11cf0:	ldr	r0, [fp, #-8]
   11cf4:	ldrb	r1, [fp, #-1]
   11cf8:	tst	r1, #1
   11cfc:	str	r0, [fp, #-12]
   11d00:	beq	11d18 <__assert_fail@plt+0xc40>
   11d04:	movw	r0, #62115	; 0xf2a3
   11d08:	movt	r0, #1
   11d0c:	bl	10fd0 <gettext@plt>
   11d10:	str	r0, [fp, #-16]
   11d14:	b	11d28 <__assert_fail@plt+0xc50>
   11d18:	movw	r0, #61636	; 0xf0c4
   11d1c:	movt	r0, #1
   11d20:	bl	10fd0 <gettext@plt>
   11d24:	str	r0, [fp, #-16]
   11d28:	ldr	r0, [fp, #-16]
   11d2c:	mov	r1, sp
   11d30:	mov	r2, #0
   11d34:	str	r2, [r1, #16]
   11d38:	str	r0, [r1, #12]
   11d3c:	movw	r0, #62102	; 0xf296
   11d40:	movt	r0, #1
   11d44:	str	r0, [r1, #8]
   11d48:	mvn	r0, #0
   11d4c:	str	r0, [r1, #4]
   11d50:	str	r0, [r1]
   11d54:	ldr	r0, [fp, #-12]
   11d58:	str	r2, [sp, #20]
   11d5c:	ldr	r3, [sp, #20]
   11d60:	bl	1a4b0 <__assert_fail@plt+0x93d8>
   11d64:	mov	sp, fp
   11d68:	pop	{fp, pc}
   11d6c:	push	{r4, sl, fp, lr}
   11d70:	add	fp, sp, #8
   11d74:	sub	sp, sp, #64	; 0x40
   11d78:	ldr	r1, [fp, #12]
   11d7c:	ldr	ip, [fp, #8]
   11d80:	str	r0, [fp, #-16]
   11d84:	str	r3, [fp, #-20]	; 0xffffffec
   11d88:	str	r2, [fp, #-24]	; 0xffffffe8
   11d8c:	and	r0, ip, #1
   11d90:	strb	r0, [fp, #-25]	; 0xffffffe7
   11d94:	and	r0, r1, #1
   11d98:	strb	r0, [fp, #-26]	; 0xffffffe6
   11d9c:	ldr	r0, [fp, #-16]
   11da0:	movw	r1, #62797	; 0xf54d
   11da4:	movt	r1, #1
   11da8:	bl	10e74 <strcmp@plt>
   11dac:	cmp	r0, #0
   11db0:	movw	r0, #0
   11db4:	moveq	r0, #1
   11db8:	and	r0, r0, #1
   11dbc:	strb	r0, [fp, #-34]	; 0xffffffde
   11dc0:	ldrb	r0, [fp, #-34]	; 0xffffffde
   11dc4:	tst	r0, #1
   11dc8:	beq	11e08 <__assert_fail@plt+0xd30>
   11dcc:	movw	r0, #349	; 0x15d
   11dd0:	movt	r0, #3
   11dd4:	movw	r1, #1
   11dd8:	strb	r1, [r0]
   11ddc:	movw	r0, #0
   11de0:	str	r0, [fp, #-32]	; 0xffffffe0
   11de4:	movw	r0, #62209	; 0xf301
   11de8:	movt	r0, #1
   11dec:	bl	10fd0 <gettext@plt>
   11df0:	str	r0, [fp, #-16]
   11df4:	movw	r0, #0
   11df8:	str	r0, [sp, #32]
   11dfc:	ldr	r1, [sp, #32]
   11e00:	bl	1a28c <__assert_fail@plt+0x91b4>
   11e04:	b	11e80 <__assert_fail@plt+0xda8>
   11e08:	ldr	r0, [fp, #-16]
   11e0c:	movw	r1, #0
   11e10:	bl	10f70 <open64@plt>
   11e14:	str	r0, [fp, #-32]	; 0xffffffe0
   11e18:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11e1c:	cmp	r0, #0
   11e20:	bge	11e7c <__assert_fail@plt+0xda4>
   11e24:	bl	1100c <__errno_location@plt>
   11e28:	ldr	r1, [r0]
   11e2c:	movw	r0, #62224	; 0xf310
   11e30:	movt	r0, #1
   11e34:	str	r1, [sp, #28]
   11e38:	bl	10fd0 <gettext@plt>
   11e3c:	ldr	r1, [fp, #-16]
   11e40:	movw	r2, #4
   11e44:	str	r0, [sp, #24]
   11e48:	mov	r0, r2
   11e4c:	bl	166b4 <__assert_fail@plt+0x55dc>
   11e50:	movw	r1, #0
   11e54:	str	r0, [sp, #20]
   11e58:	mov	r0, r1
   11e5c:	ldr	r1, [sp, #28]
   11e60:	ldr	r2, [sp, #24]
   11e64:	ldr	r3, [sp, #20]
   11e68:	bl	10f64 <error@plt>
   11e6c:	movw	r0, #0
   11e70:	and	r0, r0, #1
   11e74:	strb	r0, [fp, #-9]
   11e78:	b	11f38 <__assert_fail@plt+0xe60>
   11e7c:	b	11e80 <__assert_fail@plt+0xda8>
   11e80:	ldr	r0, [fp, #-16]
   11e84:	ldr	r1, [fp, #-32]	; 0xffffffe0
   11e88:	ldr	r2, [fp, #-24]	; 0xffffffe8
   11e8c:	ldr	r3, [fp, #-20]	; 0xffffffec
   11e90:	ldrb	ip, [fp, #-25]	; 0xffffffe7
   11e94:	ldrb	lr, [fp, #-26]	; 0xffffffe6
   11e98:	and	lr, lr, #1
   11e9c:	mov	r4, sp
   11ea0:	str	lr, [r4, #4]
   11ea4:	and	ip, ip, #1
   11ea8:	str	ip, [r4]
   11eac:	bl	11f48 <__assert_fail@plt+0xe70>
   11eb0:	and	r0, r0, #1
   11eb4:	strb	r0, [fp, #-33]	; 0xffffffdf
   11eb8:	ldrb	r0, [fp, #-34]	; 0xffffffde
   11ebc:	tst	r0, #1
   11ec0:	bne	11f2c <__assert_fail@plt+0xe54>
   11ec4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   11ec8:	bl	110cc <close@plt>
   11ecc:	cmp	r0, #0
   11ed0:	beq	11f2c <__assert_fail@plt+0xe54>
   11ed4:	bl	1100c <__errno_location@plt>
   11ed8:	ldr	r1, [r0]
   11edc:	movw	r0, #62251	; 0xf32b
   11ee0:	movt	r0, #1
   11ee4:	str	r1, [sp, #16]
   11ee8:	bl	10fd0 <gettext@plt>
   11eec:	ldr	r1, [fp, #-16]
   11ef0:	movw	r2, #4
   11ef4:	str	r0, [sp, #12]
   11ef8:	mov	r0, r2
   11efc:	bl	166b4 <__assert_fail@plt+0x55dc>
   11f00:	movw	r1, #0
   11f04:	str	r0, [sp, #8]
   11f08:	mov	r0, r1
   11f0c:	ldr	r1, [sp, #16]
   11f10:	ldr	r2, [sp, #12]
   11f14:	ldr	r3, [sp, #8]
   11f18:	bl	10f64 <error@plt>
   11f1c:	movw	r0, #0
   11f20:	and	r0, r0, #1
   11f24:	strb	r0, [fp, #-9]
   11f28:	b	11f38 <__assert_fail@plt+0xe60>
   11f2c:	ldrb	r0, [fp, #-33]	; 0xffffffdf
   11f30:	and	r0, r0, #1
   11f34:	strb	r0, [fp, #-9]
   11f38:	ldrb	r0, [fp, #-9]
   11f3c:	and	r0, r0, #1
   11f40:	sub	sp, fp, #8
   11f44:	pop	{r4, sl, fp, pc}
   11f48:	push	{r4, sl, fp, lr}
   11f4c:	add	fp, sp, #8
   11f50:	sub	sp, sp, #176	; 0xb0
   11f54:	ldr	ip, [fp, #12]
   11f58:	ldr	lr, [fp, #8]
   11f5c:	str	r0, [fp, #-16]
   11f60:	str	r1, [fp, #-20]	; 0xffffffec
   11f64:	str	r3, [fp, #-28]	; 0xffffffe4
   11f68:	str	r2, [fp, #-32]	; 0xffffffe0
   11f6c:	and	r0, lr, #1
   11f70:	strb	r0, [fp, #-33]	; 0xffffffdf
   11f74:	and	r0, ip, #1
   11f78:	strb	r0, [fp, #-34]	; 0xffffffde
   11f7c:	movw	r0, #350	; 0x15e
   11f80:	movt	r0, #3
   11f84:	ldrb	r0, [r0]
   11f88:	tst	r0, #1
   11f8c:	beq	11f98 <__assert_fail@plt+0xec0>
   11f90:	ldr	r0, [fp, #-16]
   11f94:	bl	12170 <__assert_fail@plt+0x1098>
   11f98:	ldrb	r0, [fp, #-34]	; 0xffffffde
   11f9c:	tst	r0, #1
   11fa0:	beq	12118 <__assert_fail@plt+0x1040>
   11fa4:	mvn	r0, #0
   11fa8:	str	r0, [fp, #-44]	; 0xffffffd4
   11fac:	str	r0, [fp, #-48]	; 0xffffffd0
   11fb0:	ldr	r0, [fp, #-20]	; 0xffffffec
   11fb4:	add	r1, sp, #32
   11fb8:	bl	1ebd4 <__assert_fail@plt+0xdafc>
   11fbc:	cmp	r0, #0
   11fc0:	beq	1201c <__assert_fail@plt+0xf44>
   11fc4:	bl	1100c <__errno_location@plt>
   11fc8:	ldr	r1, [r0]
   11fcc:	movw	r0, #62270	; 0xf33e
   11fd0:	movt	r0, #1
   11fd4:	str	r1, [sp, #28]
   11fd8:	bl	10fd0 <gettext@plt>
   11fdc:	ldr	r1, [fp, #-16]
   11fe0:	movw	r2, #4
   11fe4:	str	r0, [sp, #24]
   11fe8:	mov	r0, r2
   11fec:	bl	166b4 <__assert_fail@plt+0x55dc>
   11ff0:	movw	r1, #0
   11ff4:	str	r0, [sp, #20]
   11ff8:	mov	r0, r1
   11ffc:	ldr	r1, [sp, #28]
   12000:	ldr	r2, [sp, #24]
   12004:	ldr	r3, [sp, #20]
   12008:	bl	10f64 <error@plt>
   1200c:	movw	r0, #0
   12010:	and	r0, r0, #1
   12014:	strb	r0, [fp, #-9]
   12018:	b	12160 <__assert_fail@plt+0x1088>
   1201c:	movw	r0, #352	; 0x160
   12020:	movt	r0, #3
   12024:	ldrb	r0, [r0]
   12028:	tst	r0, #1
   1202c:	bne	12094 <__assert_fail@plt+0xfbc>
   12030:	add	r0, sp, #32
   12034:	bl	121d8 <__assert_fail@plt+0x1100>
   12038:	tst	r0, #1
   1203c:	beq	12094 <__assert_fail@plt+0xfbc>
   12040:	ldr	r0, [fp, #-20]	; 0xffffffec
   12044:	ldr	r1, [fp, #-16]
   12048:	mov	r2, sp
   1204c:	str	r1, [r2, #4]
   12050:	mov	r1, #1
   12054:	str	r1, [r2]
   12058:	mov	r1, #0
   1205c:	mov	r2, r1
   12060:	mov	r3, r1
   12064:	bl	12258 <__assert_fail@plt+0x1180>
   12068:	str	r1, [fp, #-44]	; 0xffffffd4
   1206c:	str	r0, [fp, #-48]	; 0xffffffd0
   12070:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12074:	cmn	r0, #1
   12078:	bgt	12090 <__assert_fail@plt+0xfb8>
   1207c:	b	12080 <__assert_fail@plt+0xfa8>
   12080:	movw	r0, #0
   12084:	and	r0, r0, #1
   12088:	strb	r0, [fp, #-9]
   1208c:	b	12160 <__assert_fail@plt+0x1088>
   12090:	b	12094 <__assert_fail@plt+0xfbc>
   12094:	ldrb	r0, [fp, #-33]	; 0xffffffdf
   12098:	tst	r0, #1
   1209c:	beq	120dc <__assert_fail@plt+0x1004>
   120a0:	ldr	r0, [fp, #-16]
   120a4:	ldr	r1, [fp, #-20]	; 0xffffffec
   120a8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   120ac:	ldr	r3, [fp, #-28]	; 0xffffffe4
   120b0:	ldr	ip, [fp, #-48]	; 0xffffffd0
   120b4:	ldr	lr, [fp, #-44]	; 0xffffffd4
   120b8:	mov	r4, sp
   120bc:	str	lr, [r4, #12]
   120c0:	str	ip, [r4, #8]
   120c4:	add	ip, sp, #32
   120c8:	str	ip, [r4]
   120cc:	bl	12358 <__assert_fail@plt+0x1280>
   120d0:	and	r0, r0, #1
   120d4:	strb	r0, [fp, #-9]
   120d8:	b	12160 <__assert_fail@plt+0x1088>
   120dc:	ldr	r0, [fp, #-16]
   120e0:	ldr	r1, [fp, #-20]	; 0xffffffec
   120e4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   120e8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   120ec:	ldr	ip, [fp, #-48]	; 0xffffffd0
   120f0:	ldr	lr, [fp, #-44]	; 0xffffffd4
   120f4:	mov	r4, sp
   120f8:	str	lr, [r4, #12]
   120fc:	str	ip, [r4, #8]
   12100:	add	ip, sp, #32
   12104:	str	ip, [r4]
   12108:	bl	124e0 <__assert_fail@plt+0x1408>
   1210c:	and	r0, r0, #1
   12110:	strb	r0, [fp, #-9]
   12114:	b	12160 <__assert_fail@plt+0x1088>
   12118:	ldrb	r0, [fp, #-33]	; 0xffffffdf
   1211c:	tst	r0, #1
   12120:	beq	12144 <__assert_fail@plt+0x106c>
   12124:	ldr	r0, [fp, #-16]
   12128:	ldr	r1, [fp, #-20]	; 0xffffffec
   1212c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   12130:	ldr	r3, [fp, #-28]	; 0xffffffe4
   12134:	bl	126ec <__assert_fail@plt+0x1614>
   12138:	and	r0, r0, #1
   1213c:	strb	r0, [fp, #-9]
   12140:	b	12160 <__assert_fail@plt+0x1088>
   12144:	ldr	r0, [fp, #-16]
   12148:	ldr	r1, [fp, #-20]	; 0xffffffec
   1214c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   12150:	ldr	r3, [fp, #-28]	; 0xffffffe4
   12154:	bl	128f4 <__assert_fail@plt+0x181c>
   12158:	and	r0, r0, #1
   1215c:	strb	r0, [fp, #-9]
   12160:	ldrb	r0, [fp, #-9]
   12164:	and	r0, r0, #1
   12168:	sub	sp, fp, #8
   1216c:	pop	{r4, sl, fp, pc}
   12170:	push	{fp, lr}
   12174:	mov	fp, sp
   12178:	sub	sp, sp, #8
   1217c:	str	r0, [sp, #4]
   12180:	movw	r0, #244	; 0xf4
   12184:	movt	r0, #3
   12188:	ldrb	r0, [r0]
   1218c:	tst	r0, #1
   12190:	movw	r0, #62100	; 0xf294
   12194:	movt	r0, #1
   12198:	movw	r1, #62101	; 0xf295
   1219c:	movt	r1, #1
   121a0:	movne	r0, r1
   121a4:	ldr	r2, [sp, #4]
   121a8:	movw	r1, #62286	; 0xf34e
   121ac:	movt	r1, #1
   121b0:	str	r0, [sp]
   121b4:	mov	r0, r1
   121b8:	ldr	r1, [sp]
   121bc:	bl	10e80 <printf@plt>
   121c0:	movw	r1, #244	; 0xf4
   121c4:	movt	r1, #3
   121c8:	movw	r2, #0
   121cc:	strb	r2, [r1]
   121d0:	mov	sp, fp
   121d4:	pop	{fp, pc}
   121d8:	sub	sp, sp, #8
   121dc:	str	r0, [sp, #4]
   121e0:	ldr	r0, [sp, #4]
   121e4:	ldr	r0, [r0, #16]
   121e8:	and	r0, r0, #61440	; 0xf000
   121ec:	cmp	r0, #32768	; 0x8000
   121f0:	movw	r0, #1
   121f4:	str	r0, [sp]
   121f8:	beq	12248 <__assert_fail@plt+0x1170>
   121fc:	ldr	r0, [sp, #4]
   12200:	ldr	r0, [r0, #16]
   12204:	and	r0, r0, #61440	; 0xf000
   12208:	cmp	r0, #40960	; 0xa000
   1220c:	movw	r0, #1
   12210:	str	r0, [sp]
   12214:	beq	12248 <__assert_fail@plt+0x1170>
   12218:	ldr	r0, [sp, #4]
   1221c:	ldr	r0, [r0, #16]
   12220:	ldr	r1, [sp, #4]
   12224:	ldr	r1, [r1, #16]
   12228:	sub	r0, r0, r1
   1222c:	cmp	r0, #0
   12230:	movw	r0, #1
   12234:	str	r0, [sp]
   12238:	bne	12248 <__assert_fail@plt+0x1170>
   1223c:	movw	r0, #0
   12240:	str	r0, [sp]
   12244:	b	12248 <__assert_fail@plt+0x1170>
   12248:	ldr	r0, [sp]
   1224c:	and	r0, r0, #1
   12250:	add	sp, sp, #8
   12254:	bx	lr
   12258:	push	{r4, sl, fp, lr}
   1225c:	add	fp, sp, #8
   12260:	sub	sp, sp, #80	; 0x50
   12264:	ldr	r1, [fp, #12]
   12268:	ldr	ip, [fp, #8]
   1226c:	str	r0, [fp, #-12]
   12270:	str	r3, [fp, #-20]	; 0xffffffec
   12274:	str	r2, [fp, #-24]	; 0xffffffe8
   12278:	ldr	r0, [fp, #-12]
   1227c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   12280:	ldr	r3, [fp, #-20]	; 0xffffffec
   12284:	ldr	lr, [fp, #8]
   12288:	mov	r4, sp
   1228c:	str	lr, [r4]
   12290:	str	r1, [sp, #28]
   12294:	str	ip, [sp, #24]
   12298:	bl	10f28 <lseek64@plt>
   1229c:	str	r1, [fp, #-28]	; 0xffffffe4
   122a0:	str	r0, [fp, #-32]	; 0xffffffe0
   122a4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   122a8:	cmn	r0, #1
   122ac:	bgt	12348 <__assert_fail@plt+0x1270>
   122b0:	b	122b4 <__assert_fail@plt+0x11dc>
   122b4:	add	r2, sp, #35	; 0x23
   122b8:	str	r2, [sp, #20]
   122bc:	bl	1100c <__errno_location@plt>
   122c0:	ldr	r1, [r0]
   122c4:	ldr	r0, [fp, #8]
   122c8:	movw	r2, #62300	; 0xf35c
   122cc:	movt	r2, #1
   122d0:	movw	r3, #62329	; 0xf379
   122d4:	movt	r3, #1
   122d8:	cmp	r0, #0
   122dc:	moveq	r3, r2
   122e0:	mov	r0, r3
   122e4:	str	r1, [sp, #16]
   122e8:	bl	10fd0 <gettext@plt>
   122ec:	ldr	r2, [fp, #12]
   122f0:	mov	r1, #0
   122f4:	mov	r3, #3
   122f8:	str	r0, [sp, #12]
   122fc:	mov	r0, r1
   12300:	mov	r1, r3
   12304:	bl	16808 <__assert_fail@plt+0x5730>
   12308:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1230c:	ldr	r2, [fp, #-20]	; 0xffffffec
   12310:	str	r0, [sp, #8]
   12314:	mov	r0, r1
   12318:	mov	r1, r2
   1231c:	ldr	r2, [sp, #20]
   12320:	bl	14190 <__assert_fail@plt+0x30b8>
   12324:	movw	r1, #0
   12328:	str	r0, [sp, #4]
   1232c:	mov	r0, r1
   12330:	ldr	r1, [sp, #16]
   12334:	ldr	r2, [sp, #12]
   12338:	ldr	r3, [sp, #8]
   1233c:	ldr	ip, [sp, #4]
   12340:	str	ip, [sp]
   12344:	bl	10f64 <error@plt>
   12348:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1234c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12350:	sub	sp, fp, #8
   12354:	pop	{r4, sl, fp, pc}
   12358:	push	{r4, r5, r6, sl, fp, lr}
   1235c:	add	fp, sp, #16
   12360:	sub	sp, sp, #72	; 0x48
   12364:	ldr	ip, [fp, #20]
   12368:	ldr	lr, [fp, #16]
   1236c:	ldr	r4, [fp, #8]
   12370:	str	r0, [fp, #-24]	; 0xffffffe8
   12374:	str	r1, [fp, #-28]	; 0xffffffe4
   12378:	str	r3, [fp, #-36]	; 0xffffffdc
   1237c:	str	r2, [fp, #-40]	; 0xffffffd8
   12380:	str	ip, [sp, #44]	; 0x2c
   12384:	str	lr, [sp, #40]	; 0x28
   12388:	ldr	r0, [fp, #8]
   1238c:	ldr	r1, [r0, #48]	; 0x30
   12390:	ldr	r0, [r0, #52]	; 0x34
   12394:	str	r0, [sp, #36]	; 0x24
   12398:	str	r1, [sp, #32]
   1239c:	movw	r0, #352	; 0x160
   123a0:	movt	r0, #3
   123a4:	ldrb	r0, [r0]
   123a8:	tst	r0, #1
   123ac:	bne	1242c <__assert_fail@plt+0x1354>
   123b0:	ldr	r0, [sp, #44]	; 0x2c
   123b4:	cmp	r0, #0
   123b8:	bmi	1242c <__assert_fail@plt+0x1354>
   123bc:	b	123c0 <__assert_fail@plt+0x12e8>
   123c0:	ldr	r0, [sp, #32]
   123c4:	ldr	r1, [sp, #36]	; 0x24
   123c8:	ldr	r2, [fp, #8]
   123cc:	ldr	r2, [r2, #56]	; 0x38
   123d0:	movw	r3, #0
   123d4:	cmp	r3, r2
   123d8:	str	r0, [sp, #28]
   123dc:	str	r1, [sp, #24]
   123e0:	bge	12404 <__assert_fail@plt+0x132c>
   123e4:	ldr	r0, [fp, #8]
   123e8:	ldr	r0, [r0, #56]	; 0x38
   123ec:	cmp	r0, #536870912	; 0x20000000
   123f0:	bhi	12404 <__assert_fail@plt+0x132c>
   123f4:	ldr	r0, [fp, #8]
   123f8:	ldr	r0, [r0, #56]	; 0x38
   123fc:	str	r0, [sp, #20]
   12400:	b	12410 <__assert_fail@plt+0x1338>
   12404:	movw	r0, #512	; 0x200
   12408:	str	r0, [sp, #20]
   1240c:	b	12410 <__assert_fail@plt+0x1338>
   12410:	ldr	r0, [sp, #20]
   12414:	ldr	r1, [sp, #28]
   12418:	subs	r2, r0, r1
   1241c:	ldr	r3, [sp, #24]
   12420:	rscs	r0, r3, r0, asr #31
   12424:	blt	12460 <__assert_fail@plt+0x1388>
   12428:	b	1242c <__assert_fail@plt+0x1354>
   1242c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12430:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12434:	ldr	r2, [fp, #-40]	; 0xffffffd8
   12438:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1243c:	ldr	ip, [sp, #40]	; 0x28
   12440:	ldr	lr, [sp, #44]	; 0x2c
   12444:	mov	r4, sp
   12448:	str	lr, [r4, #4]
   1244c:	str	ip, [r4]
   12450:	bl	12a28 <__assert_fail@plt+0x1950>
   12454:	and	r0, r0, #1
   12458:	strb	r0, [fp, #-17]	; 0xffffffef
   1245c:	b	124d0 <__assert_fail@plt+0x13f8>
   12460:	ldr	r0, [sp, #32]
   12464:	ldr	r1, [sp, #36]	; 0x24
   12468:	ldr	r2, [sp, #40]	; 0x28
   1246c:	ldr	r3, [sp, #44]	; 0x2c
   12470:	mov	ip, #1
   12474:	subs	r0, r2, r0
   12478:	sbcs	r1, r3, r1
   1247c:	str	ip, [sp, #16]
   12480:	bge	124c4 <__assert_fail@plt+0x13ec>
   12484:	b	12488 <__assert_fail@plt+0x13b0>
   12488:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1248c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12490:	ldr	r2, [fp, #-40]	; 0xffffffd8
   12494:	ldr	r3, [fp, #-36]	; 0xffffffdc
   12498:	ldr	ip, [sp, #40]	; 0x28
   1249c:	ldr	lr, [sp, #44]	; 0x2c
   124a0:	ldr	r4, [sp, #32]
   124a4:	ldr	r5, [sp, #36]	; 0x24
   124a8:	mov	r6, sp
   124ac:	str	r5, [r6, #12]
   124b0:	str	r4, [r6, #8]
   124b4:	str	lr, [r6, #4]
   124b8:	str	ip, [r6]
   124bc:	bl	130b8 <__assert_fail@plt+0x1fe0>
   124c0:	str	r0, [sp, #16]
   124c4:	ldr	r0, [sp, #16]
   124c8:	and	r0, r0, #1
   124cc:	strb	r0, [fp, #-17]	; 0xffffffef
   124d0:	ldrb	r0, [fp, #-17]	; 0xffffffef
   124d4:	and	r0, r0, #1
   124d8:	sub	sp, fp, #16
   124dc:	pop	{r4, r5, r6, sl, fp, pc}
   124e0:	push	{r4, sl, fp, lr}
   124e4:	add	fp, sp, #8
   124e8:	sub	sp, sp, #88	; 0x58
   124ec:	ldr	ip, [fp, #20]
   124f0:	ldr	lr, [fp, #16]
   124f4:	ldr	r4, [fp, #8]
   124f8:	str	r0, [fp, #-16]
   124fc:	str	r1, [fp, #-20]	; 0xffffffec
   12500:	str	r3, [fp, #-28]	; 0xffffffe4
   12504:	str	r2, [fp, #-32]	; 0xffffffe0
   12508:	str	ip, [fp, #-36]	; 0xffffffdc
   1250c:	str	lr, [fp, #-40]	; 0xffffffd8
   12510:	ldr	r0, [fp, #8]
   12514:	ldr	r1, [r0, #48]	; 0x30
   12518:	ldr	r0, [r0, #52]	; 0x34
   1251c:	str	r0, [sp, #52]	; 0x34
   12520:	str	r1, [sp, #48]	; 0x30
   12524:	movw	r0, #352	; 0x160
   12528:	movt	r0, #3
   1252c:	ldrb	r0, [r0]
   12530:	tst	r0, #1
   12534:	bne	125b4 <__assert_fail@plt+0x14dc>
   12538:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1253c:	cmp	r0, #0
   12540:	bmi	125b4 <__assert_fail@plt+0x14dc>
   12544:	b	12548 <__assert_fail@plt+0x1470>
   12548:	ldr	r0, [sp, #48]	; 0x30
   1254c:	ldr	r1, [sp, #52]	; 0x34
   12550:	ldr	r2, [fp, #8]
   12554:	ldr	r2, [r2, #56]	; 0x38
   12558:	movw	r3, #0
   1255c:	cmp	r3, r2
   12560:	str	r0, [sp, #24]
   12564:	str	r1, [sp, #20]
   12568:	bge	1258c <__assert_fail@plt+0x14b4>
   1256c:	ldr	r0, [fp, #8]
   12570:	ldr	r0, [r0, #56]	; 0x38
   12574:	cmp	r0, #536870912	; 0x20000000
   12578:	bhi	1258c <__assert_fail@plt+0x14b4>
   1257c:	ldr	r0, [fp, #8]
   12580:	ldr	r0, [r0, #56]	; 0x38
   12584:	str	r0, [sp, #16]
   12588:	b	12598 <__assert_fail@plt+0x14c0>
   1258c:	movw	r0, #512	; 0x200
   12590:	str	r0, [sp, #16]
   12594:	b	12598 <__assert_fail@plt+0x14c0>
   12598:	ldr	r0, [sp, #16]
   1259c:	ldr	r1, [sp, #24]
   125a0:	subs	r2, r0, r1
   125a4:	ldr	r3, [sp, #20]
   125a8:	rscs	r0, r3, r0, asr #31
   125ac:	blt	125e8 <__assert_fail@plt+0x1510>
   125b0:	b	125b4 <__assert_fail@plt+0x14dc>
   125b4:	ldr	r0, [fp, #-16]
   125b8:	ldr	r1, [fp, #-20]	; 0xffffffec
   125bc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   125c0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   125c4:	ldr	ip, [fp, #-40]	; 0xffffffd8
   125c8:	ldr	lr, [fp, #-36]	; 0xffffffdc
   125cc:	mov	r4, sp
   125d0:	str	lr, [r4, #4]
   125d4:	str	ip, [r4]
   125d8:	bl	13850 <__assert_fail@plt+0x2778>
   125dc:	and	r0, r0, #1
   125e0:	strb	r0, [fp, #-9]
   125e4:	b	126dc <__assert_fail@plt+0x1604>
   125e8:	ldr	r0, [sp, #48]	; 0x30
   125ec:	ldr	r1, [sp, #52]	; 0x34
   125f0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   125f4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   125f8:	subs	r0, r0, r2
   125fc:	sbc	r1, r1, r3
   12600:	str	r0, [sp, #40]	; 0x28
   12604:	str	r1, [sp, #44]	; 0x2c
   12608:	ldr	r0, [sp, #44]	; 0x2c
   1260c:	cmn	r0, #1
   12610:	bgt	1262c <__assert_fail@plt+0x1554>
   12614:	b	12618 <__assert_fail@plt+0x1540>
   12618:	mov	r0, #0
   1261c:	mov	r1, r0
   12620:	str	r1, [sp, #12]
   12624:	str	r0, [sp, #8]
   12628:	b	12640 <__assert_fail@plt+0x1568>
   1262c:	ldr	r0, [sp, #40]	; 0x28
   12630:	ldr	r1, [sp, #44]	; 0x2c
   12634:	str	r0, [sp, #12]
   12638:	str	r1, [sp, #8]
   1263c:	b	12640 <__assert_fail@plt+0x1568>
   12640:	ldr	r0, [sp, #8]
   12644:	ldr	r1, [sp, #12]
   12648:	str	r1, [sp, #32]
   1264c:	str	r0, [sp, #36]	; 0x24
   12650:	ldr	r0, [sp, #32]
   12654:	ldr	r1, [sp, #36]	; 0x24
   12658:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1265c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   12660:	subs	r0, r2, r0
   12664:	sbcs	r1, r3, r1
   12668:	bcc	12680 <__assert_fail@plt+0x15a8>
   1266c:	b	12670 <__assert_fail@plt+0x1598>
   12670:	movw	r0, #1
   12674:	and	r0, r0, #1
   12678:	strb	r0, [fp, #-9]
   1267c:	b	126dc <__assert_fail@plt+0x1604>
   12680:	ldr	r0, [fp, #-20]	; 0xffffffec
   12684:	ldr	r1, [sp, #32]
   12688:	ldr	r2, [sp, #36]	; 0x24
   1268c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12690:	ldr	ip, [fp, #-28]	; 0xffffffe4
   12694:	subs	r1, r1, r3
   12698:	sbc	r3, r2, ip
   1269c:	mov	r2, r1
   126a0:	bl	13638 <__assert_fail@plt+0x2560>
   126a4:	str	r0, [sp, #28]
   126a8:	ldr	r0, [sp, #28]
   126ac:	cmp	r0, #0
   126b0:	bne	126c4 <__assert_fail@plt+0x15ec>
   126b4:	movw	r0, #1
   126b8:	and	r0, r0, #1
   126bc:	strb	r0, [fp, #-9]
   126c0:	b	126dc <__assert_fail@plt+0x1604>
   126c4:	ldr	r0, [sp, #28]
   126c8:	ldr	r1, [fp, #-16]
   126cc:	bl	13770 <__assert_fail@plt+0x2698>
   126d0:	movw	r0, #0
   126d4:	and	r0, r0, #1
   126d8:	strb	r0, [fp, #-9]
   126dc:	ldrb	r0, [fp, #-9]
   126e0:	and	r0, r0, #1
   126e4:	sub	sp, fp, #8
   126e8:	pop	{r4, sl, fp, pc}
   126ec:	push	{r4, r5, fp, lr}
   126f0:	add	fp, sp, #8
   126f4:	sub	sp, sp, #168	; 0xa8
   126f8:	sub	sp, sp, #8192	; 0x2000
   126fc:	str	r0, [fp, #-16]
   12700:	str	r1, [fp, #-20]	; 0xffffffec
   12704:	str	r3, [fp, #-28]	; 0xffffffe4
   12708:	str	r2, [fp, #-32]	; 0xffffffe0
   1270c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12710:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12714:	orr	r0, r0, r1
   12718:	cmp	r0, #0
   1271c:	beq	128d8 <__assert_fail@plt+0x1800>
   12720:	b	12724 <__assert_fail@plt+0x164c>
   12724:	add	r1, sp, #144	; 0x90
   12728:	ldr	r0, [fp, #-20]	; 0xffffffec
   1272c:	movw	r2, #8192	; 0x2000
   12730:	bl	16b84 <__assert_fail@plt+0x5aac>
   12734:	str	r0, [sp, #140]	; 0x8c
   12738:	movw	r0, #0
   1273c:	str	r0, [sp, #136]	; 0x88
   12740:	ldr	r0, [sp, #140]	; 0x8c
   12744:	cmn	r0, #1
   12748:	bne	127a4 <__assert_fail@plt+0x16cc>
   1274c:	bl	1100c <__errno_location@plt>
   12750:	ldr	r1, [r0]
   12754:	movw	r0, #62367	; 0xf39f
   12758:	movt	r0, #1
   1275c:	str	r1, [sp, #20]
   12760:	bl	10fd0 <gettext@plt>
   12764:	ldr	r1, [fp, #-16]
   12768:	movw	r2, #4
   1276c:	str	r0, [sp, #16]
   12770:	mov	r0, r2
   12774:	bl	166b4 <__assert_fail@plt+0x55dc>
   12778:	movw	r1, #0
   1277c:	str	r0, [sp, #12]
   12780:	mov	r0, r1
   12784:	ldr	r1, [sp, #20]
   12788:	ldr	r2, [sp, #16]
   1278c:	ldr	r3, [sp, #12]
   12790:	bl	10f64 <error@plt>
   12794:	movw	r0, #0
   12798:	and	r0, r0, #1
   1279c:	strb	r0, [fp, #-9]
   127a0:	b	128e4 <__assert_fail@plt+0x180c>
   127a4:	ldr	r0, [sp, #140]	; 0x8c
   127a8:	cmp	r0, #0
   127ac:	bne	127b4 <__assert_fail@plt+0x16dc>
   127b0:	b	128d8 <__assert_fail@plt+0x1800>
   127b4:	b	127b8 <__assert_fail@plt+0x16e0>
   127b8:	ldr	r0, [sp, #136]	; 0x88
   127bc:	ldr	r1, [sp, #140]	; 0x8c
   127c0:	cmp	r0, r1
   127c4:	bcs	128c8 <__assert_fail@plt+0x17f0>
   127c8:	ldr	r0, [sp, #136]	; 0x88
   127cc:	add	r1, r0, #1
   127d0:	str	r1, [sp, #136]	; 0x88
   127d4:	add	r1, sp, #144	; 0x90
   127d8:	add	r0, r1, r0
   127dc:	ldrb	r0, [r0]
   127e0:	movw	r1, #351	; 0x15f
   127e4:	movt	r1, #3
   127e8:	ldrb	r1, [r1]
   127ec:	cmp	r0, r1
   127f0:	bne	128c4 <__assert_fail@plt+0x17ec>
   127f4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   127f8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   127fc:	subs	r0, r0, #1
   12800:	sbc	r1, r1, #0
   12804:	str	r0, [fp, #-32]	; 0xffffffe0
   12808:	str	r1, [fp, #-28]	; 0xffffffe4
   1280c:	orr	r0, r0, r1
   12810:	cmp	r0, #0
   12814:	bne	128c4 <__assert_fail@plt+0x17ec>
   12818:	b	1281c <__assert_fail@plt+0x1744>
   1281c:	ldr	r0, [sp, #140]	; 0x8c
   12820:	ldr	r1, [sp, #136]	; 0x88
   12824:	sub	r0, r0, r1
   12828:	mov	r1, #0
   1282c:	str	r1, [sp, #132]	; 0x84
   12830:	str	r0, [sp, #128]	; 0x80
   12834:	ldr	r0, [fp, #-20]	; 0xffffffec
   12838:	ldr	r1, [sp, #128]	; 0x80
   1283c:	ldr	r2, [sp, #132]	; 0x84
   12840:	rsbs	r1, r1, #0
   12844:	rsc	r3, r2, #0
   12848:	mov	r2, sp
   1284c:	mov	ip, #1
   12850:	str	ip, [r2]
   12854:	mov	r2, r1
   12858:	bl	10f28 <lseek64@plt>
   1285c:	cmn	r1, #1
   12860:	bgt	128c0 <__assert_fail@plt+0x17e8>
   12864:	b	12868 <__assert_fail@plt+0x1790>
   12868:	ldr	r0, [fp, #-20]	; 0xffffffec
   1286c:	add	r1, sp, #24
   12870:	bl	1ebd4 <__assert_fail@plt+0xdafc>
   12874:	cmp	r0, #0
   12878:	bne	1288c <__assert_fail@plt+0x17b4>
   1287c:	ldr	r0, [sp, #40]	; 0x28
   12880:	and	r0, r0, #61440	; 0xf000
   12884:	cmp	r0, #32768	; 0x8000
   12888:	bne	128bc <__assert_fail@plt+0x17e4>
   1288c:	ldr	r0, [fp, #-20]	; 0xffffffec
   12890:	ldr	r1, [sp, #128]	; 0x80
   12894:	ldr	r2, [sp, #132]	; 0x84
   12898:	rsbs	r1, r1, #0
   1289c:	rsc	r3, r2, #0
   128a0:	ldr	r2, [fp, #-16]
   128a4:	mov	ip, sp
   128a8:	str	r2, [ip, #4]
   128ac:	mov	r2, #1
   128b0:	str	r2, [ip]
   128b4:	mov	r2, r1
   128b8:	bl	12258 <__assert_fail@plt+0x1180>
   128bc:	b	128c0 <__assert_fail@plt+0x17e8>
   128c0:	b	128c8 <__assert_fail@plt+0x17f0>
   128c4:	b	127b8 <__assert_fail@plt+0x16e0>
   128c8:	add	r0, sp, #144	; 0x90
   128cc:	ldr	r1, [sp, #136]	; 0x88
   128d0:	bl	1358c <__assert_fail@plt+0x24b4>
   128d4:	b	1270c <__assert_fail@plt+0x1634>
   128d8:	movw	r0, #1
   128dc:	and	r0, r0, #1
   128e0:	strb	r0, [fp, #-9]
   128e4:	ldrb	r0, [fp, #-9]
   128e8:	and	r0, r0, #1
   128ec:	sub	sp, fp, #8
   128f0:	pop	{r4, r5, fp, pc}
   128f4:	push	{r4, r5, fp, lr}
   128f8:	add	fp, sp, #8
   128fc:	sub	sp, sp, #48	; 0x30
   12900:	sub	sp, sp, #8192	; 0x2000
   12904:	str	r0, [fp, #-16]
   12908:	str	r1, [fp, #-20]	; 0xffffffec
   1290c:	str	r3, [fp, #-28]	; 0xffffffe4
   12910:	str	r2, [fp, #-32]	; 0xffffffe0
   12914:	movw	r0, #8192	; 0x2000
   12918:	str	r0, [sp, #20]
   1291c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12920:	ldr	r1, [fp, #-28]	; 0xffffffe4
   12924:	orr	r0, r0, r1
   12928:	cmp	r0, #0
   1292c:	beq	12a0c <__assert_fail@plt+0x1934>
   12930:	b	12934 <__assert_fail@plt+0x185c>
   12934:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12938:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1293c:	ldr	r2, [sp, #20]
   12940:	subs	r0, r0, r2
   12944:	sbcs	r1, r1, #0
   12948:	bcs	12958 <__assert_fail@plt+0x1880>
   1294c:	b	12950 <__assert_fail@plt+0x1878>
   12950:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12954:	str	r0, [sp, #20]
   12958:	add	r1, sp, #24
   1295c:	ldr	r0, [fp, #-20]	; 0xffffffec
   12960:	ldr	r2, [sp, #20]
   12964:	bl	16b84 <__assert_fail@plt+0x5aac>
   12968:	str	r0, [sp, #16]
   1296c:	ldr	r0, [sp, #16]
   12970:	cmn	r0, #1
   12974:	bne	129d0 <__assert_fail@plt+0x18f8>
   12978:	bl	1100c <__errno_location@plt>
   1297c:	ldr	r1, [r0]
   12980:	movw	r0, #62367	; 0xf39f
   12984:	movt	r0, #1
   12988:	str	r1, [sp, #12]
   1298c:	bl	10fd0 <gettext@plt>
   12990:	ldr	r1, [fp, #-16]
   12994:	movw	r2, #4
   12998:	str	r0, [sp, #8]
   1299c:	mov	r0, r2
   129a0:	bl	166b4 <__assert_fail@plt+0x55dc>
   129a4:	movw	r1, #0
   129a8:	str	r0, [sp, #4]
   129ac:	mov	r0, r1
   129b0:	ldr	r1, [sp, #12]
   129b4:	ldr	r2, [sp, #8]
   129b8:	ldr	r3, [sp, #4]
   129bc:	bl	10f64 <error@plt>
   129c0:	movw	r0, #0
   129c4:	and	r0, r0, #1
   129c8:	strb	r0, [fp, #-9]
   129cc:	b	12a18 <__assert_fail@plt+0x1940>
   129d0:	ldr	r0, [sp, #16]
   129d4:	cmp	r0, #0
   129d8:	bne	129e0 <__assert_fail@plt+0x1908>
   129dc:	b	12a0c <__assert_fail@plt+0x1934>
   129e0:	ldr	r1, [sp, #16]
   129e4:	add	r0, sp, #24
   129e8:	bl	1358c <__assert_fail@plt+0x24b4>
   129ec:	ldr	r0, [sp, #16]
   129f0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   129f4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   129f8:	subs	r0, r1, r0
   129fc:	sbc	r1, r2, #0
   12a00:	str	r0, [fp, #-32]	; 0xffffffe0
   12a04:	str	r1, [fp, #-28]	; 0xffffffe4
   12a08:	b	1291c <__assert_fail@plt+0x1844>
   12a0c:	movw	r0, #1
   12a10:	and	r0, r0, #1
   12a14:	strb	r0, [fp, #-9]
   12a18:	ldrb	r0, [fp, #-9]
   12a1c:	and	r0, r0, #1
   12a20:	sub	sp, fp, #8
   12a24:	pop	{r4, r5, fp, pc}
   12a28:	push	{fp, lr}
   12a2c:	mov	fp, sp
   12a30:	sub	sp, sp, #104	; 0x68
   12a34:	ldr	ip, [fp, #12]
   12a38:	ldr	lr, [fp, #8]
   12a3c:	str	r0, [fp, #-4]
   12a40:	str	r1, [fp, #-8]
   12a44:	str	r3, [fp, #-12]
   12a48:	str	r2, [fp, #-16]
   12a4c:	str	ip, [fp, #-20]	; 0xffffffec
   12a50:	str	lr, [fp, #-24]	; 0xffffffe8
   12a54:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12a58:	ldr	r1, [fp, #-20]	; 0xffffffec
   12a5c:	str	r1, [fp, #-28]	; 0xffffffe4
   12a60:	str	r0, [fp, #-32]	; 0xffffffe0
   12a64:	movw	r0, #0
   12a68:	str	r0, [fp, #-48]	; 0xffffffd0
   12a6c:	movw	r0, #1
   12a70:	strb	r0, [fp, #-49]	; 0xffffffcf
   12a74:	movw	r0, #8208	; 0x2010
   12a78:	bl	17500 <__assert_fail@plt+0x6428>
   12a7c:	str	r0, [fp, #-40]	; 0xffffffd8
   12a80:	str	r0, [fp, #-36]	; 0xffffffdc
   12a84:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12a88:	movw	r1, #8200	; 0x2008
   12a8c:	add	r0, r0, r1
   12a90:	movw	r1, #0
   12a94:	str	r1, [r0]
   12a98:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12a9c:	movw	r2, #8196	; 0x2004
   12aa0:	add	r0, r0, r2
   12aa4:	str	r1, [r0]
   12aa8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12aac:	movw	r2, #8204	; 0x200c
   12ab0:	add	r0, r0, r2
   12ab4:	str	r1, [r0]
   12ab8:	movw	r0, #8208	; 0x2010
   12abc:	bl	17500 <__assert_fail@plt+0x6428>
   12ac0:	str	r0, [fp, #-44]	; 0xffffffd4
   12ac4:	ldr	r0, [fp, #-8]
   12ac8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12acc:	movw	r2, #8192	; 0x2000
   12ad0:	bl	16b84 <__assert_fail@plt+0x5aac>
   12ad4:	str	r0, [sp, #48]	; 0x30
   12ad8:	ldr	r0, [sp, #48]	; 0x30
   12adc:	cmp	r0, #0
   12ae0:	beq	12af0 <__assert_fail@plt+0x1a18>
   12ae4:	ldr	r0, [sp, #48]	; 0x30
   12ae8:	cmn	r0, #1
   12aec:	bne	12af4 <__assert_fail@plt+0x1a1c>
   12af0:	b	12d84 <__assert_fail@plt+0x1cac>
   12af4:	ldr	r0, [fp, #-16]
   12af8:	ldr	r1, [fp, #-12]
   12afc:	orr	r0, r0, r1
   12b00:	cmp	r0, #0
   12b04:	bne	12b38 <__assert_fail@plt+0x1a60>
   12b08:	b	12b0c <__assert_fail@plt+0x1a34>
   12b0c:	ldr	r0, [sp, #48]	; 0x30
   12b10:	ldr	r1, [fp, #-32]	; 0xffffffe0
   12b14:	ldr	r2, [fp, #-28]	; 0xffffffe4
   12b18:	adds	r0, r1, r0
   12b1c:	adc	r1, r2, #0
   12b20:	str	r0, [fp, #-32]	; 0xffffffe0
   12b24:	str	r1, [fp, #-28]	; 0xffffffe4
   12b28:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12b2c:	ldr	r1, [sp, #48]	; 0x30
   12b30:	bl	1358c <__assert_fail@plt+0x24b4>
   12b34:	b	12ac4 <__assert_fail@plt+0x19ec>
   12b38:	ldr	r0, [sp, #48]	; 0x30
   12b3c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12b40:	movw	r2, #8196	; 0x2004
   12b44:	add	r1, r1, r2
   12b48:	str	r0, [r1]
   12b4c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12b50:	movw	r1, #8200	; 0x2008
   12b54:	add	r0, r0, r1
   12b58:	movw	r1, #0
   12b5c:	str	r1, [r0]
   12b60:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12b64:	movw	r2, #8204	; 0x200c
   12b68:	add	r0, r0, r2
   12b6c:	str	r1, [r0]
   12b70:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12b74:	ldr	r1, [sp, #48]	; 0x30
   12b78:	add	r0, r0, r1
   12b7c:	str	r0, [sp, #44]	; 0x2c
   12b80:	movw	r0, #351	; 0x15f
   12b84:	movt	r0, #3
   12b88:	ldrb	r0, [r0]
   12b8c:	ldr	r1, [sp, #44]	; 0x2c
   12b90:	strb	r0, [r1]
   12b94:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12b98:	str	r0, [sp, #40]	; 0x28
   12b9c:	ldr	r0, [sp, #40]	; 0x28
   12ba0:	movw	r1, #351	; 0x15f
   12ba4:	movt	r1, #3
   12ba8:	ldrb	r1, [r1]
   12bac:	bl	10f04 <rawmemchr@plt>
   12bb0:	str	r0, [sp, #40]	; 0x28
   12bb4:	ldr	r1, [sp, #44]	; 0x2c
   12bb8:	cmp	r0, r1
   12bbc:	bcs	12bec <__assert_fail@plt+0x1b14>
   12bc0:	ldr	r0, [sp, #40]	; 0x28
   12bc4:	add	r0, r0, #1
   12bc8:	str	r0, [sp, #40]	; 0x28
   12bcc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12bd0:	movw	r1, #8200	; 0x2008
   12bd4:	add	r2, r0, r1
   12bd8:	ldr	r2, [r2]
   12bdc:	add	r2, r2, #1
   12be0:	add	r0, r0, r1
   12be4:	str	r2, [r0]
   12be8:	b	12b9c <__assert_fail@plt+0x1ac4>
   12bec:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12bf0:	movw	r1, #8200	; 0x2008
   12bf4:	add	r0, r0, r1
   12bf8:	ldr	r0, [r0]
   12bfc:	ldr	r1, [fp, #-48]	; 0xffffffd0
   12c00:	add	r0, r1, r0
   12c04:	str	r0, [fp, #-48]	; 0xffffffd0
   12c08:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12c0c:	movw	r1, #8196	; 0x2004
   12c10:	add	r0, r0, r1
   12c14:	ldr	r0, [r0]
   12c18:	ldr	r2, [fp, #-40]	; 0xffffffd8
   12c1c:	add	r1, r2, r1
   12c20:	ldr	r1, [r1]
   12c24:	add	r0, r0, r1
   12c28:	cmp	r0, #8192	; 0x2000
   12c2c:	bcs	12cb8 <__assert_fail@plt+0x1be0>
   12c30:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12c34:	ldr	r1, [fp, #-40]	; 0xffffffd8
   12c38:	movw	r2, #8196	; 0x2004
   12c3c:	add	r1, r1, r2
   12c40:	ldr	r1, [r1]
   12c44:	add	r0, r0, r1
   12c48:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12c4c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   12c50:	add	r3, r3, r2
   12c54:	ldr	r3, [r3]
   12c58:	str	r2, [sp, #24]
   12c5c:	mov	r2, r3
   12c60:	bl	10ebc <memcpy@plt>
   12c64:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12c68:	ldr	r1, [sp, #24]
   12c6c:	add	r0, r0, r1
   12c70:	ldr	r0, [r0]
   12c74:	ldr	r2, [fp, #-40]	; 0xffffffd8
   12c78:	add	r3, r2, r1
   12c7c:	ldr	r3, [r3]
   12c80:	add	r0, r3, r0
   12c84:	add	r2, r2, r1
   12c88:	str	r0, [r2]
   12c8c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12c90:	movw	r2, #8200	; 0x2008
   12c94:	add	r0, r0, r2
   12c98:	ldr	r0, [r0]
   12c9c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   12ca0:	add	ip, r3, r2
   12ca4:	ldr	ip, [ip]
   12ca8:	add	r0, ip, r0
   12cac:	add	r2, r3, r2
   12cb0:	str	r0, [r2]
   12cb4:	b	12d80 <__assert_fail@plt+0x1ca8>
   12cb8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12cbc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   12cc0:	movw	r2, #8204	; 0x200c
   12cc4:	str	r0, [r1, r2]
   12cc8:	str	r0, [fp, #-40]	; 0xffffffd8
   12ccc:	ldr	r0, [fp, #-16]
   12cd0:	ldr	r1, [fp, #-12]
   12cd4:	ldr	r2, [fp, #-48]	; 0xffffffd0
   12cd8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   12cdc:	movw	ip, #8200	; 0x2008
   12ce0:	ldr	r3, [r3, ip]
   12ce4:	sub	r2, r2, r3
   12ce8:	subs	r0, r0, r2
   12cec:	sbcs	r1, r1, #0
   12cf0:	bcs	12d70 <__assert_fail@plt+0x1c98>
   12cf4:	b	12cf8 <__assert_fail@plt+0x1c20>
   12cf8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12cfc:	movw	r1, #8196	; 0x2004
   12d00:	ldr	r0, [r0, r1]
   12d04:	ldr	r1, [fp, #-32]	; 0xffffffe0
   12d08:	ldr	r2, [fp, #-28]	; 0xffffffe4
   12d0c:	adds	r0, r1, r0
   12d10:	adc	r1, r2, #0
   12d14:	str	r0, [fp, #-32]	; 0xffffffe0
   12d18:	str	r1, [fp, #-28]	; 0xffffffe4
   12d1c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12d20:	ldr	r1, [fp, #-36]	; 0xffffffdc
   12d24:	movw	r2, #8196	; 0x2004
   12d28:	add	r1, r1, r2
   12d2c:	ldr	r1, [r1]
   12d30:	bl	1358c <__assert_fail@plt+0x24b4>
   12d34:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12d38:	str	r0, [fp, #-44]	; 0xffffffd4
   12d3c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12d40:	movw	r1, #8200	; 0x2008
   12d44:	add	r0, r0, r1
   12d48:	ldr	r0, [r0]
   12d4c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   12d50:	sub	r0, r1, r0
   12d54:	str	r0, [fp, #-48]	; 0xffffffd0
   12d58:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12d5c:	movw	r1, #8204	; 0x200c
   12d60:	add	r0, r0, r1
   12d64:	ldr	r0, [r0]
   12d68:	str	r0, [fp, #-36]	; 0xffffffdc
   12d6c:	b	12d7c <__assert_fail@plt+0x1ca4>
   12d70:	movw	r0, #8208	; 0x2010
   12d74:	bl	17500 <__assert_fail@plt+0x6428>
   12d78:	str	r0, [fp, #-44]	; 0xffffffd4
   12d7c:	b	12d80 <__assert_fail@plt+0x1ca8>
   12d80:	b	12ac4 <__assert_fail@plt+0x19ec>
   12d84:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12d88:	bl	1409c <__assert_fail@plt+0x2fc4>
   12d8c:	ldr	r0, [sp, #48]	; 0x30
   12d90:	cmn	r0, #1
   12d94:	bne	12dec <__assert_fail@plt+0x1d14>
   12d98:	bl	1100c <__errno_location@plt>
   12d9c:	ldr	r1, [r0]
   12da0:	movw	r0, #62367	; 0xf39f
   12da4:	movt	r0, #1
   12da8:	str	r1, [sp, #20]
   12dac:	bl	10fd0 <gettext@plt>
   12db0:	ldr	r1, [fp, #-4]
   12db4:	movw	r2, #4
   12db8:	str	r0, [sp, #16]
   12dbc:	mov	r0, r2
   12dc0:	bl	166b4 <__assert_fail@plt+0x55dc>
   12dc4:	movw	r1, #0
   12dc8:	str	r0, [sp, #12]
   12dcc:	mov	r0, r1
   12dd0:	ldr	r1, [sp, #20]
   12dd4:	ldr	r2, [sp, #16]
   12dd8:	ldr	r3, [sp, #12]
   12ddc:	bl	10f64 <error@plt>
   12de0:	movw	r0, #0
   12de4:	strb	r0, [fp, #-49]	; 0xffffffcf
   12de8:	b	13024 <__assert_fail@plt+0x1f4c>
   12dec:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12df0:	movw	r1, #8196	; 0x2004
   12df4:	add	r0, r0, r1
   12df8:	ldr	r0, [r0]
   12dfc:	cmp	r0, #0
   12e00:	beq	12e60 <__assert_fail@plt+0x1d88>
   12e04:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12e08:	ldr	r1, [fp, #-40]	; 0xffffffd8
   12e0c:	movw	r2, #8196	; 0x2004
   12e10:	add	r1, r1, r2
   12e14:	ldr	r1, [r1]
   12e18:	sub	r1, r1, #1
   12e1c:	add	r0, r0, r1
   12e20:	ldrb	r0, [r0]
   12e24:	movw	r1, #351	; 0x15f
   12e28:	movt	r1, #3
   12e2c:	ldrb	r1, [r1]
   12e30:	cmp	r0, r1
   12e34:	beq	12e60 <__assert_fail@plt+0x1d88>
   12e38:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12e3c:	movw	r1, #8200	; 0x2008
   12e40:	add	r2, r0, r1
   12e44:	ldr	r2, [r2]
   12e48:	add	r2, r2, #1
   12e4c:	add	r0, r0, r1
   12e50:	str	r2, [r0]
   12e54:	ldr	r0, [fp, #-48]	; 0xffffffd0
   12e58:	add	r0, r0, #1
   12e5c:	str	r0, [fp, #-48]	; 0xffffffd0
   12e60:	ldr	r0, [fp, #-36]	; 0xffffffdc
   12e64:	str	r0, [fp, #-44]	; 0xffffffd4
   12e68:	ldr	r0, [fp, #-16]
   12e6c:	ldr	r1, [fp, #-12]
   12e70:	ldr	r2, [fp, #-48]	; 0xffffffd0
   12e74:	ldr	r3, [fp, #-44]	; 0xffffffd4
   12e78:	movw	ip, #8200	; 0x2008
   12e7c:	ldr	r3, [r3, ip]
   12e80:	sub	r2, r2, r3
   12e84:	subs	r0, r0, r2
   12e88:	sbcs	r1, r1, #0
   12e8c:	bcs	12f04 <__assert_fail@plt+0x1e2c>
   12e90:	b	12e94 <__assert_fail@plt+0x1dbc>
   12e94:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12e98:	movw	r1, #8196	; 0x2004
   12e9c:	ldr	r0, [r0, r1]
   12ea0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   12ea4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   12ea8:	adds	r0, r1, r0
   12eac:	adc	r1, r2, #0
   12eb0:	str	r0, [fp, #-32]	; 0xffffffe0
   12eb4:	str	r1, [fp, #-28]	; 0xffffffe4
   12eb8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12ebc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12ec0:	movw	r2, #8196	; 0x2004
   12ec4:	add	r1, r1, r2
   12ec8:	ldr	r1, [r1]
   12ecc:	bl	1358c <__assert_fail@plt+0x24b4>
   12ed0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12ed4:	movw	r1, #8200	; 0x2008
   12ed8:	add	r0, r0, r1
   12edc:	ldr	r0, [r0]
   12ee0:	ldr	r1, [fp, #-48]	; 0xffffffd0
   12ee4:	sub	r0, r1, r0
   12ee8:	str	r0, [fp, #-48]	; 0xffffffd0
   12eec:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12ef0:	movw	r1, #8204	; 0x200c
   12ef4:	add	r0, r0, r1
   12ef8:	ldr	r0, [r0]
   12efc:	str	r0, [fp, #-44]	; 0xffffffd4
   12f00:	b	12e68 <__assert_fail@plt+0x1d90>
   12f04:	ldr	r0, [fp, #-16]
   12f08:	ldr	r1, [fp, #-12]
   12f0c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   12f10:	subs	r0, r0, r2
   12f14:	sbcs	r1, r1, #0
   12f18:	bcs	13020 <__assert_fail@plt+0x1f48>
   12f1c:	b	12f20 <__assert_fail@plt+0x1e48>
   12f20:	ldr	r0, [fp, #-48]	; 0xffffffd0
   12f24:	ldr	r1, [fp, #-16]
   12f28:	sub	r0, r0, r1
   12f2c:	str	r0, [sp, #36]	; 0x24
   12f30:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12f34:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12f38:	movw	r2, #8196	; 0x2004
   12f3c:	add	r1, r1, r2
   12f40:	ldr	r1, [r1]
   12f44:	add	r0, r0, r1
   12f48:	str	r0, [sp, #32]
   12f4c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12f50:	str	r0, [sp, #28]
   12f54:	ldr	r0, [sp, #36]	; 0x24
   12f58:	cmp	r0, #0
   12f5c:	movw	r0, #0
   12f60:	str	r0, [sp, #8]
   12f64:	beq	12fa0 <__assert_fail@plt+0x1ec8>
   12f68:	ldr	r0, [sp, #28]
   12f6c:	movw	r1, #351	; 0x15f
   12f70:	movt	r1, #3
   12f74:	ldrb	r1, [r1]
   12f78:	ldr	r2, [sp, #32]
   12f7c:	ldr	r3, [sp, #28]
   12f80:	sub	r2, r2, r3
   12f84:	bl	11048 <memchr@plt>
   12f88:	str	r0, [sp, #28]
   12f8c:	movw	r1, #0
   12f90:	cmp	r0, r1
   12f94:	movw	r0, #0
   12f98:	movne	r0, #1
   12f9c:	str	r0, [sp, #8]
   12fa0:	ldr	r0, [sp, #8]
   12fa4:	tst	r0, #1
   12fa8:	beq	12fe8 <__assert_fail@plt+0x1f10>
   12fac:	ldr	r0, [sp, #28]
   12fb0:	add	r0, r0, #1
   12fb4:	str	r0, [sp, #28]
   12fb8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   12fbc:	movw	r1, #8200	; 0x2008
   12fc0:	add	r2, r0, r1
   12fc4:	ldr	r2, [r2]
   12fc8:	add	r2, r2, #1
   12fcc:	add	r0, r0, r1
   12fd0:	str	r2, [r0]
   12fd4:	ldr	r0, [sp, #36]	; 0x24
   12fd8:	mvn	r1, #0
   12fdc:	add	r0, r0, r1
   12fe0:	str	r0, [sp, #36]	; 0x24
   12fe4:	b	12f54 <__assert_fail@plt+0x1e7c>
   12fe8:	ldr	r0, [sp, #28]
   12fec:	ldr	r1, [fp, #-44]	; 0xffffffd4
   12ff0:	sub	r0, r0, r1
   12ff4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   12ff8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   12ffc:	adds	r1, r1, r0
   13000:	adc	r0, r2, r0, asr #31
   13004:	str	r1, [fp, #-32]	; 0xffffffe0
   13008:	str	r0, [fp, #-28]	; 0xffffffe4
   1300c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13010:	ldr	r1, [sp, #28]
   13014:	ldr	r2, [fp, #-44]	; 0xffffffd4
   13018:	sub	r1, r1, r2
   1301c:	bl	1358c <__assert_fail@plt+0x24b4>
   13020:	b	13024 <__assert_fail@plt+0x1f4c>
   13024:	b	13028 <__assert_fail@plt+0x1f50>
   13028:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1302c:	movw	r1, #0
   13030:	cmp	r0, r1
   13034:	beq	13060 <__assert_fail@plt+0x1f88>
   13038:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1303c:	movw	r1, #8204	; 0x200c
   13040:	add	r0, r0, r1
   13044:	ldr	r0, [r0]
   13048:	str	r0, [fp, #-44]	; 0xffffffd4
   1304c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13050:	bl	1409c <__assert_fail@plt+0x2fc4>
   13054:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13058:	str	r0, [fp, #-36]	; 0xffffffdc
   1305c:	b	13028 <__assert_fail@plt+0x1f50>
   13060:	ldr	r0, [fp, #-20]	; 0xffffffec
   13064:	cmp	r0, #0
   13068:	bmi	130a8 <__assert_fail@plt+0x1fd0>
   1306c:	b	13070 <__assert_fail@plt+0x1f98>
   13070:	ldr	r0, [fp, #-8]
   13074:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13078:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1307c:	ldr	r1, [fp, #-4]
   13080:	mov	ip, sp
   13084:	str	r1, [ip, #4]
   13088:	mov	r1, #0
   1308c:	str	r1, [ip]
   13090:	bl	12258 <__assert_fail@plt+0x1180>
   13094:	cmn	r1, #1
   13098:	bgt	130a8 <__assert_fail@plt+0x1fd0>
   1309c:	b	130a0 <__assert_fail@plt+0x1fc8>
   130a0:	movw	r0, #0
   130a4:	strb	r0, [fp, #-49]	; 0xffffffcf
   130a8:	ldrb	r0, [fp, #-49]	; 0xffffffcf
   130ac:	and	r0, r0, #1
   130b0:	mov	sp, fp
   130b4:	pop	{fp, pc}
   130b8:	push	{r4, r5, r6, r7, fp, lr}
   130bc:	add	fp, sp, #16
   130c0:	sub	sp, sp, #112	; 0x70
   130c4:	sub	sp, sp, #8192	; 0x2000
   130c8:	ldr	ip, [fp, #20]
   130cc:	ldr	lr, [fp, #16]
   130d0:	ldr	r4, [fp, #12]
   130d4:	ldr	r5, [fp, #8]
   130d8:	str	r0, [fp, #-24]	; 0xffffffe8
   130dc:	str	r1, [fp, #-28]	; 0xffffffe4
   130e0:	str	r3, [fp, #-36]	; 0xffffffdc
   130e4:	str	r2, [fp, #-40]	; 0xffffffd8
   130e8:	str	r4, [fp, #-44]	; 0xffffffd4
   130ec:	str	r5, [fp, #-48]	; 0xffffffd0
   130f0:	str	ip, [fp, #-52]	; 0xffffffcc
   130f4:	str	lr, [fp, #-56]	; 0xffffffc8
   130f8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   130fc:	ldr	r1, [fp, #-52]	; 0xffffffcc
   13100:	str	r1, [sp, #60]	; 0x3c
   13104:	str	r0, [sp, #56]	; 0x38
   13108:	ldr	r0, [sp, #56]	; 0x38
   1310c:	ldr	r1, [sp, #60]	; 0x3c
   13110:	ldr	r2, [fp, #-48]	; 0xffffffd0
   13114:	ldr	r3, [fp, #-44]	; 0xffffffd4
   13118:	subs	r0, r0, r2
   1311c:	sbc	r1, r1, r3
   13120:	asr	r1, r1, #31
   13124:	add	r1, r0, r1, lsr #19
   13128:	bfc	r1, #0, #13
   1312c:	sub	r0, r0, r1
   13130:	str	r0, [sp, #68]	; 0x44
   13134:	ldr	r0, [sp, #68]	; 0x44
   13138:	cmp	r0, #0
   1313c:	bne	13148 <__assert_fail@plt+0x2070>
   13140:	movw	r0, #8192	; 0x2000
   13144:	str	r0, [sp, #68]	; 0x44
   13148:	ldr	r0, [sp, #68]	; 0x44
   1314c:	ldr	r1, [sp, #56]	; 0x38
   13150:	ldr	r2, [sp, #60]	; 0x3c
   13154:	subs	r0, r1, r0
   13158:	sbc	r1, r2, #0
   1315c:	str	r0, [sp, #56]	; 0x38
   13160:	str	r1, [sp, #60]	; 0x3c
   13164:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13168:	ldr	r2, [sp, #56]	; 0x38
   1316c:	ldr	r3, [sp, #60]	; 0x3c
   13170:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13174:	mov	ip, sp
   13178:	str	r1, [ip, #4]
   1317c:	mov	r1, #0
   13180:	str	r1, [ip]
   13184:	bl	12258 <__assert_fail@plt+0x1180>
   13188:	cmn	r1, #1
   1318c:	bgt	131a4 <__assert_fail@plt+0x20cc>
   13190:	b	13194 <__assert_fail@plt+0x20bc>
   13194:	movw	r0, #0
   13198:	and	r0, r0, #1
   1319c:	strb	r0, [fp, #-17]	; 0xffffffef
   131a0:	b	1357c <__assert_fail@plt+0x24a4>
   131a4:	add	r1, sp, #72	; 0x48
   131a8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   131ac:	ldr	r2, [sp, #68]	; 0x44
   131b0:	bl	16b84 <__assert_fail@plt+0x5aac>
   131b4:	str	r0, [sp, #68]	; 0x44
   131b8:	ldr	r0, [sp, #68]	; 0x44
   131bc:	cmn	r0, #1
   131c0:	bne	1321c <__assert_fail@plt+0x2144>
   131c4:	bl	1100c <__errno_location@plt>
   131c8:	ldr	r1, [r0]
   131cc:	movw	r0, #62367	; 0xf39f
   131d0:	movt	r0, #1
   131d4:	str	r1, [sp, #36]	; 0x24
   131d8:	bl	10fd0 <gettext@plt>
   131dc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   131e0:	movw	r2, #4
   131e4:	str	r0, [sp, #32]
   131e8:	mov	r0, r2
   131ec:	bl	166b4 <__assert_fail@plt+0x55dc>
   131f0:	movw	r1, #0
   131f4:	str	r0, [sp, #28]
   131f8:	mov	r0, r1
   131fc:	ldr	r1, [sp, #36]	; 0x24
   13200:	ldr	r2, [sp, #32]
   13204:	ldr	r3, [sp, #28]
   13208:	bl	10f64 <error@plt>
   1320c:	movw	r0, #0
   13210:	and	r0, r0, #1
   13214:	strb	r0, [fp, #-17]	; 0xffffffef
   13218:	b	1357c <__assert_fail@plt+0x24a4>
   1321c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13220:	ldr	r1, [fp, #-36]	; 0xffffffdc
   13224:	orr	r0, r0, r1
   13228:	clz	r0, r0
   1322c:	lsr	r0, r0, #5
   13230:	strb	r0, [sp, #55]	; 0x37
   13234:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13238:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1323c:	orr	r0, r0, r1
   13240:	cmp	r0, #0
   13244:	beq	13298 <__assert_fail@plt+0x21c0>
   13248:	b	1324c <__assert_fail@plt+0x2174>
   1324c:	ldr	r0, [sp, #68]	; 0x44
   13250:	cmp	r0, #0
   13254:	beq	13298 <__assert_fail@plt+0x21c0>
   13258:	ldr	r0, [sp, #68]	; 0x44
   1325c:	sub	r0, r0, #1
   13260:	add	r1, sp, #72	; 0x48
   13264:	add	r0, r1, r0
   13268:	ldrb	r0, [r0]
   1326c:	movw	r1, #351	; 0x15f
   13270:	movt	r1, #3
   13274:	ldrb	r1, [r1]
   13278:	cmp	r0, r1
   1327c:	beq	13298 <__assert_fail@plt+0x21c0>
   13280:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13284:	ldr	r1, [fp, #-36]	; 0xffffffdc
   13288:	subs	r0, r0, #1
   1328c:	sbc	r1, r1, #0
   13290:	str	r0, [fp, #-40]	; 0xffffffd8
   13294:	str	r1, [fp, #-36]	; 0xffffffdc
   13298:	b	1329c <__assert_fail@plt+0x21c4>
   1329c:	ldr	r0, [sp, #68]	; 0x44
   132a0:	str	r0, [sp, #48]	; 0x30
   132a4:	ldr	r0, [sp, #48]	; 0x30
   132a8:	cmp	r0, #0
   132ac:	beq	13454 <__assert_fail@plt+0x237c>
   132b0:	ldrb	r0, [sp, #55]	; 0x37
   132b4:	tst	r0, #1
   132b8:	beq	132cc <__assert_fail@plt+0x21f4>
   132bc:	ldr	r0, [sp, #48]	; 0x30
   132c0:	sub	r0, r0, #1
   132c4:	str	r0, [sp, #48]	; 0x30
   132c8:	b	1330c <__assert_fail@plt+0x2234>
   132cc:	add	r0, sp, #72	; 0x48
   132d0:	movw	r1, #351	; 0x15f
   132d4:	movt	r1, #3
   132d8:	ldrb	r1, [r1]
   132dc:	ldr	r2, [sp, #48]	; 0x30
   132e0:	bl	10ff4 <memrchr@plt>
   132e4:	str	r0, [sp, #44]	; 0x2c
   132e8:	ldr	r0, [sp, #44]	; 0x2c
   132ec:	movw	r1, #0
   132f0:	cmp	r0, r1
   132f4:	bne	132fc <__assert_fail@plt+0x2224>
   132f8:	b	13454 <__assert_fail@plt+0x237c>
   132fc:	add	r0, sp, #72	; 0x48
   13300:	ldr	r1, [sp, #44]	; 0x2c
   13304:	sub	r0, r1, r0
   13308:	str	r0, [sp, #48]	; 0x30
   1330c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13310:	ldr	r1, [fp, #-36]	; 0xffffffdc
   13314:	subs	r2, r0, #1
   13318:	sbc	r3, r1, #0
   1331c:	str	r2, [fp, #-40]	; 0xffffffd8
   13320:	str	r3, [fp, #-36]	; 0xffffffdc
   13324:	orr	r0, r0, r1
   13328:	cmp	r0, #0
   1332c:	bne	13450 <__assert_fail@plt+0x2378>
   13330:	b	13334 <__assert_fail@plt+0x225c>
   13334:	ldr	r0, [fp, #-48]	; 0xffffffd0
   13338:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1333c:	ldr	r2, [sp, #56]	; 0x38
   13340:	ldr	r3, [sp, #60]	; 0x3c
   13344:	subs	r0, r0, r2
   13348:	sbcs	r1, r1, r3
   1334c:	bge	133e8 <__assert_fail@plt+0x2310>
   13350:	b	13354 <__assert_fail@plt+0x227c>
   13354:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13358:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1335c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   13360:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13364:	mov	ip, sp
   13368:	str	r1, [ip, #4]
   1336c:	mov	r1, #0
   13370:	str	r1, [ip]
   13374:	bl	12258 <__assert_fail@plt+0x1180>
   13378:	cmn	r1, #1
   1337c:	bgt	13394 <__assert_fail@plt+0x22bc>
   13380:	b	13384 <__assert_fail@plt+0x22ac>
   13384:	movw	r0, #0
   13388:	and	r0, r0, #1
   1338c:	strb	r0, [fp, #-17]	; 0xffffffef
   13390:	b	1357c <__assert_fail@plt+0x24a4>
   13394:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13398:	ldr	r1, [sp, #56]	; 0x38
   1339c:	ldr	r2, [sp, #60]	; 0x3c
   133a0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   133a4:	ldr	ip, [fp, #-44]	; 0xffffffd4
   133a8:	subs	r1, r1, r3
   133ac:	sbc	r3, r2, ip
   133b0:	mov	r2, r1
   133b4:	bl	13638 <__assert_fail@plt+0x2560>
   133b8:	str	r0, [sp, #40]	; 0x28
   133bc:	ldr	r0, [sp, #40]	; 0x28
   133c0:	cmp	r0, #0
   133c4:	beq	133e4 <__assert_fail@plt+0x230c>
   133c8:	ldr	r0, [sp, #40]	; 0x28
   133cc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   133d0:	bl	13770 <__assert_fail@plt+0x2698>
   133d4:	movw	r0, #0
   133d8:	and	r0, r0, #1
   133dc:	strb	r0, [fp, #-17]	; 0xffffffef
   133e0:	b	1357c <__assert_fail@plt+0x24a4>
   133e4:	b	133e8 <__assert_fail@plt+0x2310>
   133e8:	ldr	r0, [sp, #48]	; 0x30
   133ec:	add	r1, r0, #1
   133f0:	add	r0, sp, #72	; 0x48
   133f4:	bl	1358c <__assert_fail@plt+0x24b4>
   133f8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   133fc:	ldr	r1, [sp, #56]	; 0x38
   13400:	ldr	r2, [sp, #60]	; 0x3c
   13404:	ldr	r3, [sp, #48]	; 0x30
   13408:	adds	r1, r1, r3
   1340c:	adc	r2, r2, #0
   13410:	adds	r1, r1, #1
   13414:	adc	r3, r2, #0
   13418:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1341c:	mov	ip, sp
   13420:	str	r2, [ip, #4]
   13424:	mov	r2, #0
   13428:	str	r2, [ip]
   1342c:	str	r2, [sp, #24]
   13430:	mov	r2, r1
   13434:	bl	12258 <__assert_fail@plt+0x1180>
   13438:	cmn	r1, #1
   1343c:	ldr	r1, [sp, #24]
   13440:	movwgt	r1, #1
   13444:	and	r1, r1, #1
   13448:	strb	r1, [fp, #-17]	; 0xffffffef
   1344c:	b	1357c <__assert_fail@plt+0x24a4>
   13450:	b	132a4 <__assert_fail@plt+0x21cc>
   13454:	ldr	r0, [sp, #56]	; 0x38
   13458:	ldr	r1, [sp, #60]	; 0x3c
   1345c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   13460:	ldr	r3, [fp, #-44]	; 0xffffffd4
   13464:	eor	r1, r1, r3
   13468:	eor	r0, r0, r2
   1346c:	orr	r0, r0, r1
   13470:	cmp	r0, #0
   13474:	bne	1348c <__assert_fail@plt+0x23b4>
   13478:	b	1347c <__assert_fail@plt+0x23a4>
   1347c:	movw	r0, #1
   13480:	and	r0, r0, #1
   13484:	strb	r0, [fp, #-17]	; 0xffffffef
   13488:	b	1357c <__assert_fail@plt+0x24a4>
   1348c:	ldr	r0, [sp, #56]	; 0x38
   13490:	ldr	r1, [sp, #60]	; 0x3c
   13494:	subs	r0, r0, #8192	; 0x2000
   13498:	sbc	r1, r1, #0
   1349c:	str	r0, [sp, #56]	; 0x38
   134a0:	str	r1, [sp, #60]	; 0x3c
   134a4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   134a8:	ldr	r2, [sp, #56]	; 0x38
   134ac:	ldr	r3, [sp, #60]	; 0x3c
   134b0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   134b4:	mov	ip, sp
   134b8:	str	r1, [ip, #4]
   134bc:	mov	r1, #0
   134c0:	str	r1, [ip]
   134c4:	bl	12258 <__assert_fail@plt+0x1180>
   134c8:	cmn	r1, #1
   134cc:	bgt	134e4 <__assert_fail@plt+0x240c>
   134d0:	b	134d4 <__assert_fail@plt+0x23fc>
   134d4:	movw	r0, #0
   134d8:	and	r0, r0, #1
   134dc:	strb	r0, [fp, #-17]	; 0xffffffef
   134e0:	b	1357c <__assert_fail@plt+0x24a4>
   134e4:	add	r1, sp, #72	; 0x48
   134e8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   134ec:	movw	r2, #8192	; 0x2000
   134f0:	bl	16b84 <__assert_fail@plt+0x5aac>
   134f4:	str	r0, [sp, #68]	; 0x44
   134f8:	ldr	r0, [sp, #68]	; 0x44
   134fc:	cmn	r0, #1
   13500:	bne	1355c <__assert_fail@plt+0x2484>
   13504:	bl	1100c <__errno_location@plt>
   13508:	ldr	r1, [r0]
   1350c:	movw	r0, #62367	; 0xf39f
   13510:	movt	r0, #1
   13514:	str	r1, [sp, #20]
   13518:	bl	10fd0 <gettext@plt>
   1351c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13520:	movw	r2, #4
   13524:	str	r0, [sp, #16]
   13528:	mov	r0, r2
   1352c:	bl	166b4 <__assert_fail@plt+0x55dc>
   13530:	movw	r1, #0
   13534:	str	r0, [sp, #12]
   13538:	mov	r0, r1
   1353c:	ldr	r1, [sp, #20]
   13540:	ldr	r2, [sp, #16]
   13544:	ldr	r3, [sp, #12]
   13548:	bl	10f64 <error@plt>
   1354c:	movw	r0, #0
   13550:	and	r0, r0, #1
   13554:	strb	r0, [fp, #-17]	; 0xffffffef
   13558:	b	1357c <__assert_fail@plt+0x24a4>
   1355c:	ldr	r0, [sp, #68]	; 0x44
   13560:	cmp	r0, #0
   13564:	bne	13578 <__assert_fail@plt+0x24a0>
   13568:	movw	r0, #1
   1356c:	and	r0, r0, #1
   13570:	strb	r0, [fp, #-17]	; 0xffffffef
   13574:	b	1357c <__assert_fail@plt+0x24a4>
   13578:	b	1329c <__assert_fail@plt+0x21c4>
   1357c:	ldrb	r0, [fp, #-17]	; 0xffffffef
   13580:	and	r0, r0, #1
   13584:	sub	sp, fp, #16
   13588:	pop	{r4, r5, r6, r7, fp, pc}
   1358c:	push	{fp, lr}
   13590:	mov	fp, sp
   13594:	sub	sp, sp, #24
   13598:	str	r0, [fp, #-4]
   1359c:	str	r1, [fp, #-8]
   135a0:	ldr	r0, [fp, #-8]
   135a4:	cmp	r0, #0
   135a8:	bls	13630 <__assert_fail@plt+0x2558>
   135ac:	ldr	r0, [fp, #-4]
   135b0:	ldr	r2, [fp, #-8]
   135b4:	movw	r1, #340	; 0x154
   135b8:	movt	r1, #3
   135bc:	ldr	r3, [r1]
   135c0:	movw	r1, #1
   135c4:	bl	10ed4 <fwrite_unlocked@plt>
   135c8:	ldr	r1, [fp, #-8]
   135cc:	cmp	r0, r1
   135d0:	bcs	13630 <__assert_fail@plt+0x2558>
   135d4:	movw	r0, #340	; 0x154
   135d8:	movt	r0, #3
   135dc:	ldr	r0, [r0]
   135e0:	bl	11090 <clearerr_unlocked@plt>
   135e4:	bl	1100c <__errno_location@plt>
   135e8:	ldr	r1, [r0]
   135ec:	movw	r0, #62384	; 0xf3b0
   135f0:	movt	r0, #1
   135f4:	str	r1, [sp, #12]
   135f8:	bl	10fd0 <gettext@plt>
   135fc:	movw	r1, #4
   13600:	str	r0, [sp, #8]
   13604:	mov	r0, r1
   13608:	movw	r1, #62401	; 0xf3c1
   1360c:	movt	r1, #1
   13610:	bl	166b4 <__assert_fail@plt+0x55dc>
   13614:	movw	r1, #1
   13618:	str	r0, [sp, #4]
   1361c:	mov	r0, r1
   13620:	ldr	r1, [sp, #12]
   13624:	ldr	r2, [sp, #8]
   13628:	ldr	r3, [sp, #4]
   1362c:	bl	10f64 <error@plt>
   13630:	mov	sp, fp
   13634:	pop	{fp, pc}
   13638:	push	{r4, r5, fp, lr}
   1363c:	add	fp, sp, #8
   13640:	sub	sp, sp, #40	; 0x28
   13644:	sub	sp, sp, #8192	; 0x2000
   13648:	str	r0, [fp, #-16]
   1364c:	str	r3, [fp, #-20]	; 0xffffffec
   13650:	str	r2, [fp, #-24]	; 0xffffffe8
   13654:	movw	r0, #8192	; 0x2000
   13658:	str	r0, [sp, #20]
   1365c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13660:	ldr	r1, [fp, #-20]	; 0xffffffec
   13664:	orr	r0, r0, r1
   13668:	cmp	r0, #0
   1366c:	beq	1375c <__assert_fail@plt+0x2684>
   13670:	b	13674 <__assert_fail@plt+0x259c>
   13674:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13678:	ldr	r1, [fp, #-20]	; 0xffffffec
   1367c:	movw	r2, #8193	; 0x2001
   13680:	subs	r0, r0, r2
   13684:	sbcs	r1, r1, #0
   13688:	bcc	136a4 <__assert_fail@plt+0x25cc>
   1368c:	b	13690 <__assert_fail@plt+0x25b8>
   13690:	mov	r0, #0
   13694:	mov	r1, #8192	; 0x2000
   13698:	str	r1, [sp, #8]
   1369c:	str	r0, [sp, #4]
   136a0:	b	136b8 <__assert_fail@plt+0x25e0>
   136a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   136a8:	ldr	r1, [fp, #-20]	; 0xffffffec
   136ac:	str	r0, [sp, #8]
   136b0:	str	r1, [sp, #4]
   136b4:	b	136b8 <__assert_fail@plt+0x25e0>
   136b8:	ldr	r0, [sp, #4]
   136bc:	ldr	r1, [sp, #8]
   136c0:	add	r2, sp, #24
   136c4:	str	r1, [sp, #16]
   136c8:	ldr	r1, [fp, #-16]
   136cc:	ldr	r3, [sp, #16]
   136d0:	str	r0, [sp]
   136d4:	mov	r0, r1
   136d8:	mov	r1, r2
   136dc:	mov	r2, r3
   136e0:	bl	16b84 <__assert_fail@plt+0x5aac>
   136e4:	str	r0, [sp, #12]
   136e8:	ldr	r0, [sp, #12]
   136ec:	cmn	r0, #1
   136f0:	bne	13700 <__assert_fail@plt+0x2628>
   136f4:	movw	r0, #1
   136f8:	str	r0, [fp, #-12]
   136fc:	b	13764 <__assert_fail@plt+0x268c>
   13700:	ldr	r0, [sp, #12]
   13704:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13708:	ldr	r2, [fp, #-20]	; 0xffffffec
   1370c:	subs	r0, r1, r0
   13710:	sbc	r1, r2, #0
   13714:	str	r0, [fp, #-24]	; 0xffffffe8
   13718:	str	r1, [fp, #-20]	; 0xffffffec
   1371c:	ldr	r0, [sp, #12]
   13720:	cmp	r0, #0
   13724:	bne	1374c <__assert_fail@plt+0x2674>
   13728:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1372c:	ldr	r1, [fp, #-20]	; 0xffffffec
   13730:	orr	r0, r0, r1
   13734:	cmp	r0, #0
   13738:	beq	1374c <__assert_fail@plt+0x2674>
   1373c:	b	13740 <__assert_fail@plt+0x2668>
   13740:	movw	r0, #2
   13744:	str	r0, [fp, #-12]
   13748:	b	13764 <__assert_fail@plt+0x268c>
   1374c:	add	r0, sp, #24
   13750:	ldr	r1, [sp, #12]
   13754:	bl	1358c <__assert_fail@plt+0x24b4>
   13758:	b	1365c <__assert_fail@plt+0x2584>
   1375c:	movw	r0, #0
   13760:	str	r0, [fp, #-12]
   13764:	ldr	r0, [fp, #-12]
   13768:	sub	sp, fp, #8
   1376c:	pop	{r4, r5, fp, pc}
   13770:	push	{fp, lr}
   13774:	mov	fp, sp
   13778:	sub	sp, sp, #40	; 0x28
   1377c:	str	r0, [fp, #-4]
   13780:	str	r1, [fp, #-8]
   13784:	ldr	r0, [fp, #-4]
   13788:	cmp	r0, #1
   1378c:	str	r0, [fp, #-12]
   13790:	beq	137a8 <__assert_fail@plt+0x26d0>
   13794:	b	13798 <__assert_fail@plt+0x26c0>
   13798:	ldr	r0, [fp, #-12]
   1379c:	cmp	r0, #2
   137a0:	beq	137f4 <__assert_fail@plt+0x271c>
   137a4:	b	13844 <__assert_fail@plt+0x276c>
   137a8:	bl	1100c <__errno_location@plt>
   137ac:	ldr	r1, [r0]
   137b0:	movw	r0, #62367	; 0xf39f
   137b4:	movt	r0, #1
   137b8:	str	r1, [fp, #-16]
   137bc:	bl	10fd0 <gettext@plt>
   137c0:	ldr	r1, [fp, #-8]
   137c4:	movw	r2, #4
   137c8:	str	r0, [sp, #20]
   137cc:	mov	r0, r2
   137d0:	bl	166b4 <__assert_fail@plt+0x55dc>
   137d4:	movw	r1, #0
   137d8:	str	r0, [sp, #16]
   137dc:	mov	r0, r1
   137e0:	ldr	r1, [fp, #-16]
   137e4:	ldr	r2, [sp, #20]
   137e8:	ldr	r3, [sp, #16]
   137ec:	bl	10f64 <error@plt>
   137f0:	b	13848 <__assert_fail@plt+0x2770>
   137f4:	bl	1100c <__errno_location@plt>
   137f8:	ldr	r1, [r0]
   137fc:	movw	r0, #62417	; 0xf3d1
   13800:	movt	r0, #1
   13804:	str	r1, [sp, #12]
   13808:	bl	10fd0 <gettext@plt>
   1380c:	ldr	r2, [fp, #-8]
   13810:	movw	r1, #0
   13814:	str	r0, [sp, #8]
   13818:	mov	r0, r1
   1381c:	movw	r1, #3
   13820:	bl	16808 <__assert_fail@plt+0x5730>
   13824:	movw	r1, #0
   13828:	str	r0, [sp, #4]
   1382c:	mov	r0, r1
   13830:	ldr	r1, [sp, #12]
   13834:	ldr	r2, [sp, #8]
   13838:	ldr	r3, [sp, #4]
   1383c:	bl	10f64 <error@plt>
   13840:	b	13848 <__assert_fail@plt+0x2770>
   13844:	bl	110c0 <abort@plt>
   13848:	mov	sp, fp
   1384c:	pop	{fp, pc}
   13850:	push	{fp, lr}
   13854:	mov	fp, sp
   13858:	sub	sp, sp, #192	; 0xc0
   1385c:	ldr	ip, [fp, #12]
   13860:	ldr	lr, [fp, #8]
   13864:	str	r0, [fp, #-4]
   13868:	str	r1, [fp, #-8]
   1386c:	str	r3, [fp, #-12]
   13870:	str	r2, [fp, #-16]
   13874:	str	ip, [fp, #-20]	; 0xffffffec
   13878:	str	lr, [fp, #-24]	; 0xffffffe8
   1387c:	ldr	r0, [fp, #-16]
   13880:	str	r0, [fp, #-28]	; 0xffffffe4
   13884:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13888:	ldr	r1, [fp, #-20]	; 0xffffffec
   1388c:	str	r1, [fp, #-36]	; 0xffffffdc
   13890:	str	r0, [fp, #-40]	; 0xffffffd8
   13894:	mov	r0, #1
   13898:	strb	r0, [fp, #-41]	; 0xffffffd7
   1389c:	ldr	r0, [fp, #-16]
   138a0:	ldr	r1, [fp, #-12]
   138a4:	adds	r0, r0, #8192	; 0x2000
   138a8:	adc	r1, r1, #0
   138ac:	cmp	r1, #0
   138b0:	beq	13904 <__assert_fail@plt+0x282c>
   138b4:	b	138b8 <__assert_fail@plt+0x27e0>
   138b8:	sub	r2, fp, #62	; 0x3e
   138bc:	movw	r0, #62446	; 0xf3ee
   138c0:	movt	r0, #1
   138c4:	str	r2, [sp, #44]	; 0x2c
   138c8:	bl	10fd0 <gettext@plt>
   138cc:	ldr	r1, [fp, #-16]
   138d0:	ldr	r2, [fp, #-12]
   138d4:	str	r0, [sp, #40]	; 0x28
   138d8:	mov	r0, r1
   138dc:	mov	r1, r2
   138e0:	ldr	r2, [sp, #44]	; 0x2c
   138e4:	bl	142c0 <__assert_fail@plt+0x31e8>
   138e8:	movw	r1, #1
   138ec:	str	r0, [sp, #36]	; 0x24
   138f0:	mov	r0, r1
   138f4:	movw	r1, #0
   138f8:	ldr	r2, [sp, #40]	; 0x28
   138fc:	ldr	r3, [sp, #36]	; 0x24
   13900:	bl	10f64 <error@plt>
   13904:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13908:	cmp	r0, #1048576	; 0x100000
   1390c:	bhi	13b28 <__assert_fail@plt+0x2a50>
   13910:	movw	r0, #1
   13914:	strb	r0, [fp, #-63]	; 0xffffffc1
   13918:	movw	r0, #0
   1391c:	strb	r0, [fp, #-64]	; 0xffffffc0
   13920:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13924:	add	r0, r0, #8192	; 0x2000
   13928:	str	r0, [fp, #-68]	; 0xffffffbc
   1392c:	ldr	r1, [fp, #-68]	; 0xffffffbc
   13930:	movw	r0, #2
   13934:	bl	17658 <__assert_fail@plt+0x6580>
   13938:	str	r0, [fp, #-80]	; 0xffffffb0
   1393c:	ldr	r0, [fp, #-80]	; 0xffffffb0
   13940:	ldr	r1, [fp, #-68]	; 0xffffffbc
   13944:	add	r0, r0, r1
   13948:	str	r0, [fp, #-76]	; 0xffffffb4
   1394c:	movw	r0, #0
   13950:	strb	r0, [fp, #-69]	; 0xffffffbb
   13954:	ldrb	r0, [fp, #-64]	; 0xffffffc0
   13958:	mvn	r1, #0
   1395c:	eor	r0, r0, r1
   13960:	tst	r0, #1
   13964:	beq	13b1c <__assert_fail@plt+0x2a44>
   13968:	ldr	r0, [fp, #-8]
   1396c:	ldrb	r1, [fp, #-69]	; 0xffffffbb
   13970:	and	r1, r1, #1
   13974:	sub	r2, fp, #80	; 0x50
   13978:	add	r1, r2, r1, lsl #2
   1397c:	ldr	r1, [r1]
   13980:	ldr	r2, [fp, #-68]	; 0xffffffbc
   13984:	bl	140dc <__assert_fail@plt+0x3004>
   13988:	str	r0, [fp, #-84]	; 0xffffffac
   1398c:	movw	r0, #0
   13990:	str	r0, [fp, #-88]	; 0xffffffa8
   13994:	ldr	r0, [fp, #-84]	; 0xffffffac
   13998:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1399c:	cmp	r0, r1
   139a0:	bcs	13a44 <__assert_fail@plt+0x296c>
   139a4:	bl	1100c <__errno_location@plt>
   139a8:	ldr	r0, [r0]
   139ac:	cmp	r0, #0
   139b0:	beq	13a08 <__assert_fail@plt+0x2930>
   139b4:	bl	1100c <__errno_location@plt>
   139b8:	ldr	r1, [r0]
   139bc:	movw	r0, #62367	; 0xf39f
   139c0:	movt	r0, #1
   139c4:	str	r1, [sp, #32]
   139c8:	bl	10fd0 <gettext@plt>
   139cc:	ldr	r1, [fp, #-4]
   139d0:	movw	r2, #4
   139d4:	str	r0, [sp, #28]
   139d8:	mov	r0, r2
   139dc:	bl	166b4 <__assert_fail@plt+0x55dc>
   139e0:	movw	r1, #0
   139e4:	str	r0, [sp, #24]
   139e8:	mov	r0, r1
   139ec:	ldr	r1, [sp, #32]
   139f0:	ldr	r2, [sp, #28]
   139f4:	ldr	r3, [sp, #24]
   139f8:	bl	10f64 <error@plt>
   139fc:	movw	r0, #0
   13a00:	strb	r0, [fp, #-41]	; 0xffffffd7
   13a04:	b	13b1c <__assert_fail@plt+0x2a44>
   13a08:	ldr	r0, [fp, #-84]	; 0xffffffac
   13a0c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13a10:	cmp	r0, r1
   13a14:	bhi	13a3c <__assert_fail@plt+0x2964>
   13a18:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   13a1c:	tst	r0, #1
   13a20:	beq	13a28 <__assert_fail@plt+0x2950>
   13a24:	b	13a38 <__assert_fail@plt+0x2960>
   13a28:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13a2c:	ldr	r1, [fp, #-84]	; 0xffffffac
   13a30:	sub	r0, r0, r1
   13a34:	str	r0, [fp, #-88]	; 0xffffffa8
   13a38:	b	13a3c <__assert_fail@plt+0x2964>
   13a3c:	movw	r0, #1
   13a40:	strb	r0, [fp, #-64]	; 0xffffffc0
   13a44:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   13a48:	tst	r0, #1
   13a4c:	bne	13aa0 <__assert_fail@plt+0x29c8>
   13a50:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13a54:	ldr	r1, [fp, #-88]	; 0xffffffa8
   13a58:	sub	r0, r0, r1
   13a5c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13a60:	ldr	r2, [fp, #-36]	; 0xffffffdc
   13a64:	adds	r0, r1, r0
   13a68:	adc	r1, r2, #0
   13a6c:	str	r0, [fp, #-40]	; 0xffffffd8
   13a70:	str	r1, [fp, #-36]	; 0xffffffdc
   13a74:	ldrb	r0, [fp, #-69]	; 0xffffffbb
   13a78:	mov	r1, #1
   13a7c:	bic	r0, r1, r0
   13a80:	sub	r1, fp, #80	; 0x50
   13a84:	add	r0, r1, r0, lsl #2
   13a88:	ldr	r0, [r0]
   13a8c:	add	r0, r0, #8192	; 0x2000
   13a90:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13a94:	ldr	r2, [fp, #-88]	; 0xffffffa8
   13a98:	sub	r1, r1, r2
   13a9c:	bl	1358c <__assert_fail@plt+0x24b4>
   13aa0:	movw	r0, #0
   13aa4:	strb	r0, [fp, #-63]	; 0xffffffc1
   13aa8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13aac:	ldr	r1, [fp, #-84]	; 0xffffffac
   13ab0:	cmp	r0, r1
   13ab4:	bcs	13b00 <__assert_fail@plt+0x2a28>
   13ab8:	ldr	r0, [fp, #-84]	; 0xffffffac
   13abc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13ac0:	sub	r0, r0, r1
   13ac4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13ac8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   13acc:	adds	r0, r1, r0
   13ad0:	adc	r1, r2, #0
   13ad4:	str	r0, [fp, #-40]	; 0xffffffd8
   13ad8:	str	r1, [fp, #-36]	; 0xffffffdc
   13adc:	ldrb	r0, [fp, #-69]	; 0xffffffbb
   13ae0:	and	r0, r0, #1
   13ae4:	sub	r1, fp, #80	; 0x50
   13ae8:	add	r0, r1, r0, lsl #2
   13aec:	ldr	r0, [r0]
   13af0:	ldr	r1, [fp, #-84]	; 0xffffffac
   13af4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   13af8:	sub	r1, r1, r2
   13afc:	bl	1358c <__assert_fail@plt+0x24b4>
   13b00:	b	13b04 <__assert_fail@plt+0x2a2c>
   13b04:	ldrb	r0, [fp, #-69]	; 0xffffffbb
   13b08:	mvn	r1, #0
   13b0c:	eor	r0, r0, r1
   13b10:	and	r0, r0, #1
   13b14:	strb	r0, [fp, #-69]	; 0xffffffbb
   13b18:	b	13954 <__assert_fail@plt+0x287c>
   13b1c:	ldr	r0, [fp, #-80]	; 0xffffffb0
   13b20:	bl	1409c <__assert_fail@plt+0x2fc4>
   13b24:	b	13edc <__assert_fail@plt+0x2e04>
   13b28:	mov	r0, #0
   13b2c:	strb	r0, [fp, #-89]	; 0xffffffa7
   13b30:	str	r0, [sp, #80]	; 0x50
   13b34:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13b38:	bfc	r0, #13, #19
   13b3c:	rsb	r0, r0, #8192	; 0x2000
   13b40:	str	r0, [sp, #76]	; 0x4c
   13b44:	ldr	r0, [fp, #-28]	; 0xffffffe4
   13b48:	ldr	r1, [sp, #76]	; 0x4c
   13b4c:	add	r0, r0, r1
   13b50:	str	r0, [sp, #72]	; 0x48
   13b54:	ldr	r0, [sp, #72]	; 0x48
   13b58:	lsr	r0, r0, #13
   13b5c:	add	r0, r0, #1
   13b60:	str	r0, [sp, #68]	; 0x44
   13b64:	movw	r0, #0
   13b68:	str	r0, [sp, #64]	; 0x40
   13b6c:	str	r0, [sp, #60]	; 0x3c
   13b70:	movw	r1, #0
   13b74:	strb	r1, [sp, #95]	; 0x5f
   13b78:	str	r0, [sp, #88]	; 0x58
   13b7c:	movw	r0, #1
   13b80:	str	r0, [sp, #84]	; 0x54
   13b84:	ldrb	r0, [fp, #-89]	; 0xffffffa7
   13b88:	mvn	r1, #0
   13b8c:	eor	r0, r0, r1
   13b90:	tst	r0, #1
   13b94:	beq	13d74 <__assert_fail@plt+0x2c9c>
   13b98:	ldr	r0, [sp, #60]	; 0x3c
   13b9c:	ldr	r1, [sp, #88]	; 0x58
   13ba0:	cmp	r0, r1
   13ba4:	bne	13c28 <__assert_fail@plt+0x2b50>
   13ba8:	ldr	r0, [sp, #60]	; 0x3c
   13bac:	cmp	r0, #0
   13bb0:	bne	13be4 <__assert_fail@plt+0x2b0c>
   13bb4:	ldr	r0, [sp, #68]	; 0x44
   13bb8:	cmp	r0, #16
   13bbc:	bcs	13bcc <__assert_fail@plt+0x2af4>
   13bc0:	ldr	r0, [sp, #68]	; 0x44
   13bc4:	str	r0, [sp, #20]
   13bc8:	b	13bd8 <__assert_fail@plt+0x2b00>
   13bcc:	movw	r0, #16
   13bd0:	str	r0, [sp, #20]
   13bd4:	b	13bd8 <__assert_fail@plt+0x2b00>
   13bd8:	ldr	r0, [sp, #20]
   13bdc:	str	r0, [sp, #60]	; 0x3c
   13be0:	b	13c14 <__assert_fail@plt+0x2b3c>
   13be4:	ldr	r0, [sp, #60]	; 0x3c
   13be8:	ldr	r1, [sp, #68]	; 0x44
   13bec:	lsr	r1, r1, #1
   13bf0:	cmp	r0, r1
   13bf4:	bhi	13c08 <__assert_fail@plt+0x2b30>
   13bf8:	ldr	r0, [sp, #60]	; 0x3c
   13bfc:	lsl	r0, r0, #1
   13c00:	str	r0, [sp, #60]	; 0x3c
   13c04:	b	13c10 <__assert_fail@plt+0x2b38>
   13c08:	ldr	r0, [sp, #68]	; 0x44
   13c0c:	str	r0, [sp, #60]	; 0x3c
   13c10:	b	13c14 <__assert_fail@plt+0x2b3c>
   13c14:	ldr	r0, [sp, #80]	; 0x50
   13c18:	ldr	r1, [sp, #60]	; 0x3c
   13c1c:	movw	r2, #4
   13c20:	bl	1745c <__assert_fail@plt+0x6384>
   13c24:	str	r0, [sp, #80]	; 0x50
   13c28:	ldrb	r0, [sp, #95]	; 0x5f
   13c2c:	tst	r0, #1
   13c30:	bne	13c58 <__assert_fail@plt+0x2b80>
   13c34:	mov	r0, #8192	; 0x2000
   13c38:	bl	17500 <__assert_fail@plt+0x6428>
   13c3c:	ldr	r1, [sp, #80]	; 0x50
   13c40:	ldr	r2, [sp, #88]	; 0x58
   13c44:	add	r1, r1, r2, lsl #2
   13c48:	str	r0, [r1]
   13c4c:	ldr	r0, [sp, #88]	; 0x58
   13c50:	add	r0, r0, #1
   13c54:	str	r0, [sp, #64]	; 0x40
   13c58:	ldr	r0, [fp, #-8]
   13c5c:	ldr	r1, [sp, #80]	; 0x50
   13c60:	ldr	r2, [sp, #88]	; 0x58
   13c64:	add	r1, r1, r2, lsl #2
   13c68:	ldr	r1, [r1]
   13c6c:	movw	r2, #8192	; 0x2000
   13c70:	bl	140dc <__assert_fail@plt+0x3004>
   13c74:	str	r0, [sp, #96]	; 0x60
   13c78:	ldr	r0, [sp, #96]	; 0x60
   13c7c:	cmp	r0, #8192	; 0x2000
   13c80:	bcs	13cf0 <__assert_fail@plt+0x2c18>
   13c84:	bl	1100c <__errno_location@plt>
   13c88:	ldr	r0, [r0]
   13c8c:	cmp	r0, #0
   13c90:	beq	13ce8 <__assert_fail@plt+0x2c10>
   13c94:	bl	1100c <__errno_location@plt>
   13c98:	ldr	r1, [r0]
   13c9c:	movw	r0, #62367	; 0xf39f
   13ca0:	movt	r0, #1
   13ca4:	str	r1, [sp, #16]
   13ca8:	bl	10fd0 <gettext@plt>
   13cac:	ldr	r1, [fp, #-4]
   13cb0:	movw	r2, #4
   13cb4:	str	r0, [sp, #12]
   13cb8:	mov	r0, r2
   13cbc:	bl	166b4 <__assert_fail@plt+0x55dc>
   13cc0:	movw	r1, #0
   13cc4:	str	r0, [sp, #8]
   13cc8:	mov	r0, r1
   13ccc:	ldr	r1, [sp, #16]
   13cd0:	ldr	r2, [sp, #12]
   13cd4:	ldr	r3, [sp, #8]
   13cd8:	bl	10f64 <error@plt>
   13cdc:	movw	r0, #0
   13ce0:	strb	r0, [fp, #-41]	; 0xffffffd7
   13ce4:	b	13e98 <__assert_fail@plt+0x2dc0>
   13ce8:	movw	r0, #1
   13cec:	strb	r0, [fp, #-89]	; 0xffffffa7
   13cf0:	ldr	r0, [sp, #88]	; 0x58
   13cf4:	add	r0, r0, #1
   13cf8:	ldr	r1, [sp, #68]	; 0x44
   13cfc:	cmp	r0, r1
   13d00:	bne	13d0c <__assert_fail@plt+0x2c34>
   13d04:	movw	r0, #1
   13d08:	strb	r0, [sp, #95]	; 0x5f
   13d0c:	ldrb	r0, [sp, #95]	; 0x5f
   13d10:	tst	r0, #1
   13d14:	beq	13d4c <__assert_fail@plt+0x2c74>
   13d18:	ldr	r0, [sp, #96]	; 0x60
   13d1c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13d20:	ldr	r2, [fp, #-36]	; 0xffffffdc
   13d24:	adds	r0, r1, r0
   13d28:	adc	r1, r2, #0
   13d2c:	str	r0, [fp, #-40]	; 0xffffffd8
   13d30:	str	r1, [fp, #-36]	; 0xffffffdc
   13d34:	ldr	r0, [sp, #80]	; 0x50
   13d38:	ldr	r1, [sp, #84]	; 0x54
   13d3c:	add	r0, r0, r1, lsl #2
   13d40:	ldr	r0, [r0]
   13d44:	ldr	r1, [sp, #96]	; 0x60
   13d48:	bl	1358c <__assert_fail@plt+0x24b4>
   13d4c:	b	13d50 <__assert_fail@plt+0x2c78>
   13d50:	ldr	r0, [sp, #84]	; 0x54
   13d54:	str	r0, [sp, #88]	; 0x58
   13d58:	ldr	r0, [sp, #84]	; 0x54
   13d5c:	add	r0, r0, #1
   13d60:	ldr	r1, [sp, #68]	; 0x44
   13d64:	udiv	r2, r0, r1
   13d68:	mls	r0, r2, r1, r0
   13d6c:	str	r0, [sp, #84]	; 0x54
   13d70:	b	13b84 <__assert_fail@plt+0x2aac>
   13d74:	ldr	r0, [sp, #76]	; 0x4c
   13d78:	cmp	r0, #0
   13d7c:	beq	13e94 <__assert_fail@plt+0x2dbc>
   13d80:	ldrb	r0, [sp, #95]	; 0x5f
   13d84:	tst	r0, #1
   13d88:	beq	13e28 <__assert_fail@plt+0x2d50>
   13d8c:	ldr	r0, [sp, #96]	; 0x60
   13d90:	rsb	r0, r0, #8192	; 0x2000
   13d94:	str	r0, [sp, #56]	; 0x38
   13d98:	ldr	r0, [sp, #76]	; 0x4c
   13d9c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13da0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   13da4:	adds	r0, r1, r0
   13da8:	adc	r1, r2, #0
   13dac:	str	r0, [fp, #-40]	; 0xffffffd8
   13db0:	str	r1, [fp, #-36]	; 0xffffffdc
   13db4:	ldr	r0, [sp, #76]	; 0x4c
   13db8:	ldr	r1, [sp, #56]	; 0x38
   13dbc:	cmp	r0, r1
   13dc0:	bcs	13de8 <__assert_fail@plt+0x2d10>
   13dc4:	ldr	r0, [sp, #80]	; 0x50
   13dc8:	ldr	r1, [sp, #88]	; 0x58
   13dcc:	add	r0, r0, r1, lsl #2
   13dd0:	ldr	r0, [r0]
   13dd4:	ldr	r1, [sp, #96]	; 0x60
   13dd8:	add	r0, r0, r1
   13ddc:	ldr	r1, [sp, #76]	; 0x4c
   13de0:	bl	1358c <__assert_fail@plt+0x24b4>
   13de4:	b	13e24 <__assert_fail@plt+0x2d4c>
   13de8:	ldr	r0, [sp, #80]	; 0x50
   13dec:	ldr	r1, [sp, #88]	; 0x58
   13df0:	ldr	r0, [r0, r1, lsl #2]
   13df4:	ldr	r1, [sp, #96]	; 0x60
   13df8:	add	r0, r0, r1
   13dfc:	ldr	r1, [sp, #56]	; 0x38
   13e00:	bl	1358c <__assert_fail@plt+0x24b4>
   13e04:	ldr	r0, [sp, #80]	; 0x50
   13e08:	ldr	r1, [sp, #84]	; 0x54
   13e0c:	add	r0, r0, r1, lsl #2
   13e10:	ldr	r0, [r0]
   13e14:	ldr	r1, [sp, #76]	; 0x4c
   13e18:	ldr	r2, [sp, #56]	; 0x38
   13e1c:	sub	r1, r1, r2
   13e20:	bl	1358c <__assert_fail@plt+0x24b4>
   13e24:	b	13e90 <__assert_fail@plt+0x2db8>
   13e28:	ldr	r0, [sp, #88]	; 0x58
   13e2c:	add	r0, r0, #1
   13e30:	ldr	r1, [sp, #68]	; 0x44
   13e34:	cmp	r0, r1
   13e38:	bne	13e8c <__assert_fail@plt+0x2db4>
   13e3c:	ldr	r0, [sp, #76]	; 0x4c
   13e40:	rsb	r0, r0, #8192	; 0x2000
   13e44:	str	r0, [sp, #52]	; 0x34
   13e48:	ldr	r0, [sp, #96]	; 0x60
   13e4c:	ldr	r1, [sp, #52]	; 0x34
   13e50:	sub	r0, r0, r1
   13e54:	str	r0, [sp, #48]	; 0x30
   13e58:	ldr	r0, [sp, #48]	; 0x30
   13e5c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13e60:	ldr	r2, [fp, #-36]	; 0xffffffdc
   13e64:	adds	r0, r1, r0
   13e68:	adc	r1, r2, #0
   13e6c:	str	r0, [fp, #-40]	; 0xffffffd8
   13e70:	str	r1, [fp, #-36]	; 0xffffffdc
   13e74:	ldr	r0, [sp, #80]	; 0x50
   13e78:	ldr	r1, [sp, #84]	; 0x54
   13e7c:	add	r0, r0, r1, lsl #2
   13e80:	ldr	r0, [r0]
   13e84:	ldr	r1, [sp, #48]	; 0x30
   13e88:	bl	1358c <__assert_fail@plt+0x24b4>
   13e8c:	b	13e90 <__assert_fail@plt+0x2db8>
   13e90:	b	13e94 <__assert_fail@plt+0x2dbc>
   13e94:	b	13e98 <__assert_fail@plt+0x2dc0>
   13e98:	movw	r0, #0
   13e9c:	str	r0, [sp, #88]	; 0x58
   13ea0:	ldr	r0, [sp, #88]	; 0x58
   13ea4:	ldr	r1, [sp, #64]	; 0x40
   13ea8:	cmp	r0, r1
   13eac:	bcs	13ed4 <__assert_fail@plt+0x2dfc>
   13eb0:	ldr	r0, [sp, #80]	; 0x50
   13eb4:	ldr	r1, [sp, #88]	; 0x58
   13eb8:	add	r0, r0, r1, lsl #2
   13ebc:	ldr	r0, [r0]
   13ec0:	bl	1409c <__assert_fail@plt+0x2fc4>
   13ec4:	ldr	r0, [sp, #88]	; 0x58
   13ec8:	add	r0, r0, #1
   13ecc:	str	r0, [sp, #88]	; 0x58
   13ed0:	b	13ea0 <__assert_fail@plt+0x2dc8>
   13ed4:	ldr	r0, [sp, #80]	; 0x50
   13ed8:	bl	1409c <__assert_fail@plt+0x2fc4>
   13edc:	ldr	r0, [fp, #-20]	; 0xffffffec
   13ee0:	cmp	r0, #0
   13ee4:	bmi	13f24 <__assert_fail@plt+0x2e4c>
   13ee8:	b	13eec <__assert_fail@plt+0x2e14>
   13eec:	ldr	r0, [fp, #-8]
   13ef0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   13ef4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   13ef8:	ldr	r1, [fp, #-4]
   13efc:	mov	ip, sp
   13f00:	str	r1, [ip, #4]
   13f04:	mov	r1, #0
   13f08:	str	r1, [ip]
   13f0c:	bl	12258 <__assert_fail@plt+0x1180>
   13f10:	cmn	r1, #1
   13f14:	bgt	13f24 <__assert_fail@plt+0x2e4c>
   13f18:	b	13f1c <__assert_fail@plt+0x2e44>
   13f1c:	movw	r0, #0
   13f20:	strb	r0, [fp, #-41]	; 0xffffffd7
   13f24:	ldrb	r0, [fp, #-41]	; 0xffffffd7
   13f28:	and	r0, r0, #1
   13f2c:	mov	sp, fp
   13f30:	pop	{fp, pc}
   13f34:	sub	sp, sp, #4
   13f38:	str	r0, [sp]
   13f3c:	ldr	r0, [sp]
   13f40:	movw	r1, #356	; 0x164
   13f44:	movt	r1, #3
   13f48:	str	r0, [r1]
   13f4c:	add	sp, sp, #4
   13f50:	bx	lr
   13f54:	sub	sp, sp, #4
   13f58:	and	r0, r0, #1
   13f5c:	strb	r0, [sp, #3]
   13f60:	ldrb	r0, [sp, #3]
   13f64:	and	r0, r0, #1
   13f68:	movw	r1, #360	; 0x168
   13f6c:	movt	r1, #3
   13f70:	strb	r0, [r1]
   13f74:	add	sp, sp, #4
   13f78:	bx	lr
   13f7c:	push	{fp, lr}
   13f80:	mov	fp, sp
   13f84:	sub	sp, sp, #24
   13f88:	movw	r0, #340	; 0x154
   13f8c:	movt	r0, #3
   13f90:	ldr	r0, [r0]
   13f94:	bl	1c748 <__assert_fail@plt+0xb670>
   13f98:	cmp	r0, #0
   13f9c:	beq	1406c <__assert_fail@plt+0x2f94>
   13fa0:	movw	r0, #360	; 0x168
   13fa4:	movt	r0, #3
   13fa8:	ldrb	r0, [r0]
   13fac:	tst	r0, #1
   13fb0:	beq	13fc4 <__assert_fail@plt+0x2eec>
   13fb4:	bl	1100c <__errno_location@plt>
   13fb8:	ldr	r0, [r0]
   13fbc:	cmp	r0, #32
   13fc0:	beq	1406c <__assert_fail@plt+0x2f94>
   13fc4:	movw	r0, #62719	; 0xf4ff
   13fc8:	movt	r0, #1
   13fcc:	bl	10fd0 <gettext@plt>
   13fd0:	str	r0, [fp, #-4]
   13fd4:	movw	r0, #356	; 0x164
   13fd8:	movt	r0, #3
   13fdc:	ldr	r0, [r0]
   13fe0:	movw	r1, #0
   13fe4:	cmp	r0, r1
   13fe8:	beq	14040 <__assert_fail@plt+0x2f68>
   13fec:	bl	1100c <__errno_location@plt>
   13ff0:	ldr	r1, [r0]
   13ff4:	movw	r0, #356	; 0x164
   13ff8:	movt	r0, #3
   13ffc:	ldr	r0, [r0]
   14000:	str	r1, [fp, #-8]
   14004:	bl	167b0 <__assert_fail@plt+0x56d8>
   14008:	ldr	r1, [fp, #-4]
   1400c:	movw	r2, #0
   14010:	str	r0, [sp, #12]
   14014:	mov	r0, r2
   14018:	ldr	r2, [fp, #-8]
   1401c:	str	r1, [sp, #8]
   14020:	mov	r1, r2
   14024:	movw	r2, #61629	; 0xf0bd
   14028:	movt	r2, #1
   1402c:	ldr	r3, [sp, #12]
   14030:	ldr	ip, [sp, #8]
   14034:	str	ip, [sp]
   14038:	bl	10f64 <error@plt>
   1403c:	b	1405c <__assert_fail@plt+0x2f84>
   14040:	bl	1100c <__errno_location@plt>
   14044:	ldr	r1, [r0]
   14048:	ldr	r3, [fp, #-4]
   1404c:	movw	r0, #0
   14050:	movw	r2, #61633	; 0xf0c1
   14054:	movt	r2, #1
   14058:	bl	10f64 <error@plt>
   1405c:	movw	r0, #252	; 0xfc
   14060:	movt	r0, #3
   14064:	ldr	r0, [r0]
   14068:	bl	10eb0 <_exit@plt>
   1406c:	movw	r0, #336	; 0x150
   14070:	movt	r0, #3
   14074:	ldr	r0, [r0]
   14078:	bl	1c748 <__assert_fail@plt+0xb670>
   1407c:	cmp	r0, #0
   14080:	beq	14094 <__assert_fail@plt+0x2fbc>
   14084:	movw	r0, #252	; 0xfc
   14088:	movt	r0, #3
   1408c:	ldr	r0, [r0]
   14090:	bl	10eb0 <_exit@plt>
   14094:	mov	sp, fp
   14098:	pop	{fp, pc}
   1409c:	push	{fp, lr}
   140a0:	mov	fp, sp
   140a4:	sub	sp, sp, #16
   140a8:	str	r0, [fp, #-4]
   140ac:	bl	1100c <__errno_location@plt>
   140b0:	ldr	r0, [r0]
   140b4:	str	r0, [sp, #8]
   140b8:	ldr	r0, [fp, #-4]
   140bc:	bl	10ea4 <free@plt>
   140c0:	ldr	r0, [sp, #8]
   140c4:	str	r0, [sp, #4]
   140c8:	bl	1100c <__errno_location@plt>
   140cc:	ldr	r1, [sp, #4]
   140d0:	str	r1, [r0]
   140d4:	mov	sp, fp
   140d8:	pop	{fp, pc}
   140dc:	push	{fp, lr}
   140e0:	mov	fp, sp
   140e4:	sub	sp, sp, #24
   140e8:	str	r0, [fp, #-4]
   140ec:	str	r1, [fp, #-8]
   140f0:	str	r2, [sp, #12]
   140f4:	movw	r0, #0
   140f8:	str	r0, [sp, #8]
   140fc:	ldr	r0, [fp, #-8]
   14100:	str	r0, [sp, #4]
   14104:	ldr	r0, [sp, #12]
   14108:	cmp	r0, #0
   1410c:	bls	14184 <__assert_fail@plt+0x30ac>
   14110:	ldr	r0, [fp, #-4]
   14114:	ldr	r1, [sp, #4]
   14118:	ldr	r2, [sp, #12]
   1411c:	bl	16b84 <__assert_fail@plt+0x5aac>
   14120:	str	r0, [sp]
   14124:	ldr	r0, [sp]
   14128:	cmn	r0, #1
   1412c:	bne	14134 <__assert_fail@plt+0x305c>
   14130:	b	14184 <__assert_fail@plt+0x30ac>
   14134:	ldr	r0, [sp]
   14138:	cmp	r0, #0
   1413c:	bne	14150 <__assert_fail@plt+0x3078>
   14140:	bl	1100c <__errno_location@plt>
   14144:	movw	r1, #0
   14148:	str	r1, [r0]
   1414c:	b	14184 <__assert_fail@plt+0x30ac>
   14150:	ldr	r0, [sp]
   14154:	ldr	r1, [sp, #8]
   14158:	add	r0, r1, r0
   1415c:	str	r0, [sp, #8]
   14160:	ldr	r0, [sp]
   14164:	ldr	r1, [sp, #4]
   14168:	add	r0, r1, r0
   1416c:	str	r0, [sp, #4]
   14170:	ldr	r0, [sp]
   14174:	ldr	r1, [sp, #12]
   14178:	sub	r0, r1, r0
   1417c:	str	r0, [sp, #12]
   14180:	b	14104 <__assert_fail@plt+0x302c>
   14184:	ldr	r0, [sp, #8]
   14188:	mov	sp, fp
   1418c:	pop	{fp, pc}
   14190:	push	{fp, lr}
   14194:	mov	fp, sp
   14198:	sub	sp, sp, #16
   1419c:	str	r0, [sp, #8]
   141a0:	str	r1, [sp, #12]
   141a4:	str	r2, [sp, #4]
   141a8:	ldr	r0, [sp, #4]
   141ac:	add	r0, r0, #20
   141b0:	str	r0, [sp]
   141b4:	ldr	r0, [sp]
   141b8:	mov	r1, #0
   141bc:	strb	r1, [r0]
   141c0:	ldr	r0, [sp, #12]
   141c4:	cmn	r0, #1
   141c8:	bgt	14250 <__assert_fail@plt+0x3178>
   141cc:	b	141d0 <__assert_fail@plt+0x30f8>
   141d0:	b	141d4 <__assert_fail@plt+0x30fc>
   141d4:	ldr	r0, [sp, #8]
   141d8:	ldr	r1, [sp, #12]
   141dc:	mov	r2, #10
   141e0:	mov	r3, #0
   141e4:	bl	1e910 <__assert_fail@plt+0xd838>
   141e8:	rsb	r2, r2, #48	; 0x30
   141ec:	ldr	r3, [sp]
   141f0:	mvn	ip, #0
   141f4:	add	lr, r3, ip
   141f8:	str	lr, [sp]
   141fc:	add	r3, r3, ip
   14200:	strb	r2, [r3]
   14204:	ldr	r0, [sp, #8]
   14208:	ldr	r1, [sp, #12]
   1420c:	mov	r2, #10
   14210:	mov	r3, #0
   14214:	bl	1e910 <__assert_fail@plt+0xd838>
   14218:	str	r1, [sp, #12]
   1421c:	str	r0, [sp, #8]
   14220:	orr	r0, r0, r1
   14224:	cmp	r0, #0
   14228:	bne	141d4 <__assert_fail@plt+0x30fc>
   1422c:	b	14230 <__assert_fail@plt+0x3158>
   14230:	ldr	r0, [sp]
   14234:	mvn	r1, #0
   14238:	add	r2, r0, r1
   1423c:	str	r2, [sp]
   14240:	add	r0, r0, r1
   14244:	movw	r1, #45	; 0x2d
   14248:	strb	r1, [r0]
   1424c:	b	142b4 <__assert_fail@plt+0x31dc>
   14250:	b	14254 <__assert_fail@plt+0x317c>
   14254:	ldr	r0, [sp, #8]
   14258:	ldr	r1, [sp, #12]
   1425c:	mov	r2, #10
   14260:	mov	r3, #0
   14264:	bl	1e910 <__assert_fail@plt+0xd838>
   14268:	add	r2, r2, #48	; 0x30
   1426c:	ldr	r3, [sp]
   14270:	mvn	ip, #0
   14274:	add	lr, r3, ip
   14278:	str	lr, [sp]
   1427c:	add	r3, r3, ip
   14280:	strb	r2, [r3]
   14284:	ldr	r0, [sp, #8]
   14288:	ldr	r1, [sp, #12]
   1428c:	mov	r2, #10
   14290:	mov	r3, #0
   14294:	bl	1e910 <__assert_fail@plt+0xd838>
   14298:	str	r1, [sp, #12]
   1429c:	str	r0, [sp, #8]
   142a0:	orr	r0, r0, r1
   142a4:	cmp	r0, #0
   142a8:	bne	14254 <__assert_fail@plt+0x317c>
   142ac:	b	142b0 <__assert_fail@plt+0x31d8>
   142b0:	b	142b4 <__assert_fail@plt+0x31dc>
   142b4:	ldr	r0, [sp]
   142b8:	mov	sp, fp
   142bc:	pop	{fp, pc}
   142c0:	push	{fp, lr}
   142c4:	mov	fp, sp
   142c8:	sub	sp, sp, #16
   142cc:	str	r0, [sp, #8]
   142d0:	str	r1, [sp, #12]
   142d4:	str	r2, [sp, #4]
   142d8:	ldr	r0, [sp, #4]
   142dc:	add	r0, r0, #20
   142e0:	str	r0, [sp]
   142e4:	ldr	r0, [sp]
   142e8:	mov	r1, #0
   142ec:	strb	r1, [r0]
   142f0:	mov	r0, #1
   142f4:	cmp	r0, #0
   142f8:	bne	14380 <__assert_fail@plt+0x32a8>
   142fc:	b	14300 <__assert_fail@plt+0x3228>
   14300:	b	14304 <__assert_fail@plt+0x322c>
   14304:	ldr	r0, [sp, #8]
   14308:	ldr	r1, [sp, #12]
   1430c:	mov	r2, #10
   14310:	mov	r3, #0
   14314:	bl	1e9e4 <__assert_fail@plt+0xd90c>
   14318:	rsb	r2, r2, #48	; 0x30
   1431c:	ldr	r3, [sp]
   14320:	mvn	ip, #0
   14324:	add	lr, r3, ip
   14328:	str	lr, [sp]
   1432c:	add	r3, r3, ip
   14330:	strb	r2, [r3]
   14334:	ldr	r0, [sp, #8]
   14338:	ldr	r1, [sp, #12]
   1433c:	mov	r2, #10
   14340:	mov	r3, #0
   14344:	bl	1e9e4 <__assert_fail@plt+0xd90c>
   14348:	str	r1, [sp, #12]
   1434c:	str	r0, [sp, #8]
   14350:	orr	r0, r0, r1
   14354:	cmp	r0, #0
   14358:	bne	14304 <__assert_fail@plt+0x322c>
   1435c:	b	14360 <__assert_fail@plt+0x3288>
   14360:	ldr	r0, [sp]
   14364:	mvn	r1, #0
   14368:	add	r2, r0, r1
   1436c:	str	r2, [sp]
   14370:	add	r0, r0, r1
   14374:	movw	r1, #45	; 0x2d
   14378:	strb	r1, [r0]
   1437c:	b	143e4 <__assert_fail@plt+0x330c>
   14380:	b	14384 <__assert_fail@plt+0x32ac>
   14384:	ldr	r0, [sp, #8]
   14388:	ldr	r1, [sp, #12]
   1438c:	mov	r2, #10
   14390:	mov	r3, #0
   14394:	bl	1e9e4 <__assert_fail@plt+0xd90c>
   14398:	orr	r2, r2, #48	; 0x30
   1439c:	ldr	r3, [sp]
   143a0:	mvn	ip, #0
   143a4:	add	lr, r3, ip
   143a8:	str	lr, [sp]
   143ac:	add	r3, r3, ip
   143b0:	strb	r2, [r3]
   143b4:	ldr	r0, [sp, #8]
   143b8:	ldr	r1, [sp, #12]
   143bc:	mov	r2, #10
   143c0:	mov	r3, #0
   143c4:	bl	1e9e4 <__assert_fail@plt+0xd90c>
   143c8:	str	r1, [sp, #12]
   143cc:	str	r0, [sp, #8]
   143d0:	orr	r0, r0, r1
   143d4:	cmp	r0, #0
   143d8:	bne	14384 <__assert_fail@plt+0x32ac>
   143dc:	b	143e0 <__assert_fail@plt+0x3308>
   143e0:	b	143e4 <__assert_fail@plt+0x330c>
   143e4:	ldr	r0, [sp]
   143e8:	mov	sp, fp
   143ec:	pop	{fp, pc}
   143f0:	push	{fp, lr}
   143f4:	mov	fp, sp
   143f8:	sub	sp, sp, #24
   143fc:	str	r0, [fp, #-4]
   14400:	ldr	r0, [fp, #-4]
   14404:	movw	r1, #0
   14408:	cmp	r0, r1
   1440c:	bne	14430 <__assert_fail@plt+0x3358>
   14410:	movw	r0, #336	; 0x150
   14414:	movt	r0, #3
   14418:	ldr	r1, [r0]
   1441c:	movw	r0, #62731	; 0xf50b
   14420:	movt	r0, #1
   14424:	bl	110a8 <fputs@plt>
   14428:	str	r0, [sp, #8]
   1442c:	bl	110c0 <abort@plt>
   14430:	ldr	r0, [fp, #-4]
   14434:	movw	r1, #47	; 0x2f
   14438:	bl	11078 <strrchr@plt>
   1443c:	str	r0, [fp, #-8]
   14440:	ldr	r0, [fp, #-8]
   14444:	movw	r1, #0
   14448:	cmp	r0, r1
   1444c:	beq	14460 <__assert_fail@plt+0x3388>
   14450:	ldr	r0, [fp, #-8]
   14454:	add	r0, r0, #1
   14458:	str	r0, [sp, #4]
   1445c:	b	14468 <__assert_fail@plt+0x3390>
   14460:	ldr	r0, [fp, #-4]
   14464:	str	r0, [sp, #4]
   14468:	ldr	r0, [sp, #4]
   1446c:	str	r0, [sp, #12]
   14470:	ldr	r0, [sp, #12]
   14474:	ldr	r1, [fp, #-4]
   14478:	sub	r0, r0, r1
   1447c:	cmp	r0, #7
   14480:	blt	144ec <__assert_fail@plt+0x3414>
   14484:	ldr	r0, [sp, #12]
   14488:	mvn	r1, #6
   1448c:	add	r0, r0, r1
   14490:	movw	r1, #62787	; 0xf543
   14494:	movt	r1, #1
   14498:	movw	r2, #7
   1449c:	bl	110b4 <strncmp@plt>
   144a0:	cmp	r0, #0
   144a4:	bne	144ec <__assert_fail@plt+0x3414>
   144a8:	ldr	r0, [sp, #12]
   144ac:	str	r0, [fp, #-4]
   144b0:	ldr	r0, [sp, #12]
   144b4:	movw	r1, #62795	; 0xf54b
   144b8:	movt	r1, #1
   144bc:	movw	r2, #3
   144c0:	bl	110b4 <strncmp@plt>
   144c4:	cmp	r0, #0
   144c8:	bne	144e8 <__assert_fail@plt+0x3410>
   144cc:	ldr	r0, [sp, #12]
   144d0:	add	r0, r0, #3
   144d4:	str	r0, [fp, #-4]
   144d8:	ldr	r0, [fp, #-4]
   144dc:	movw	r1, #320	; 0x140
   144e0:	movt	r1, #3
   144e4:	str	r0, [r1]
   144e8:	b	144ec <__assert_fail@plt+0x3414>
   144ec:	ldr	r0, [fp, #-4]
   144f0:	movw	r1, #364	; 0x16c
   144f4:	movt	r1, #3
   144f8:	str	r0, [r1]
   144fc:	ldr	r0, [fp, #-4]
   14500:	movw	r1, #324	; 0x144
   14504:	movt	r1, #3
   14508:	str	r0, [r1]
   1450c:	mov	sp, fp
   14510:	pop	{fp, pc}
   14514:	push	{fp, lr}
   14518:	mov	fp, sp
   1451c:	sub	sp, sp, #24
   14520:	str	r0, [fp, #-4]
   14524:	bl	1100c <__errno_location@plt>
   14528:	ldr	r0, [r0]
   1452c:	str	r0, [fp, #-8]
   14530:	ldr	r0, [fp, #-4]
   14534:	movw	r1, #0
   14538:	cmp	r0, r1
   1453c:	beq	1454c <__assert_fail@plt+0x3474>
   14540:	ldr	r0, [fp, #-4]
   14544:	str	r0, [sp, #8]
   14548:	b	1455c <__assert_fail@plt+0x3484>
   1454c:	movw	r0, #368	; 0x170
   14550:	movt	r0, #3
   14554:	str	r0, [sp, #8]
   14558:	b	1455c <__assert_fail@plt+0x3484>
   1455c:	ldr	r0, [sp, #8]
   14560:	movw	r1, #48	; 0x30
   14564:	bl	1a138 <__assert_fail@plt+0x9060>
   14568:	str	r0, [sp, #12]
   1456c:	ldr	r0, [fp, #-8]
   14570:	str	r0, [sp, #4]
   14574:	bl	1100c <__errno_location@plt>
   14578:	ldr	r1, [sp, #4]
   1457c:	str	r1, [r0]
   14580:	ldr	r0, [sp, #12]
   14584:	mov	sp, fp
   14588:	pop	{fp, pc}
   1458c:	sub	sp, sp, #8
   14590:	str	r0, [sp, #4]
   14594:	ldr	r0, [sp, #4]
   14598:	movw	r1, #0
   1459c:	cmp	r0, r1
   145a0:	beq	145b0 <__assert_fail@plt+0x34d8>
   145a4:	ldr	r0, [sp, #4]
   145a8:	str	r0, [sp]
   145ac:	b	145c0 <__assert_fail@plt+0x34e8>
   145b0:	movw	r0, #368	; 0x170
   145b4:	movt	r0, #3
   145b8:	str	r0, [sp]
   145bc:	b	145c0 <__assert_fail@plt+0x34e8>
   145c0:	ldr	r0, [sp]
   145c4:	ldr	r0, [r0]
   145c8:	add	sp, sp, #8
   145cc:	bx	lr
   145d0:	sub	sp, sp, #16
   145d4:	str	r0, [sp, #12]
   145d8:	str	r1, [sp, #8]
   145dc:	ldr	r0, [sp, #8]
   145e0:	ldr	r1, [sp, #12]
   145e4:	movw	r2, #0
   145e8:	cmp	r1, r2
   145ec:	str	r0, [sp, #4]
   145f0:	beq	14600 <__assert_fail@plt+0x3528>
   145f4:	ldr	r0, [sp, #12]
   145f8:	str	r0, [sp]
   145fc:	b	14610 <__assert_fail@plt+0x3538>
   14600:	movw	r0, #368	; 0x170
   14604:	movt	r0, #3
   14608:	str	r0, [sp]
   1460c:	b	14610 <__assert_fail@plt+0x3538>
   14610:	ldr	r0, [sp]
   14614:	ldr	r1, [sp, #4]
   14618:	str	r1, [r0]
   1461c:	add	sp, sp, #16
   14620:	bx	lr
   14624:	sub	sp, sp, #32
   14628:	str	r0, [sp, #28]
   1462c:	strb	r1, [sp, #27]
   14630:	str	r2, [sp, #20]
   14634:	ldrb	r0, [sp, #27]
   14638:	strb	r0, [sp, #19]
   1463c:	ldr	r0, [sp, #28]
   14640:	movw	r1, #0
   14644:	cmp	r0, r1
   14648:	beq	14658 <__assert_fail@plt+0x3580>
   1464c:	ldr	r0, [sp, #28]
   14650:	str	r0, [sp]
   14654:	b	14668 <__assert_fail@plt+0x3590>
   14658:	movw	r0, #368	; 0x170
   1465c:	movt	r0, #3
   14660:	str	r0, [sp]
   14664:	b	14668 <__assert_fail@plt+0x3590>
   14668:	ldr	r0, [sp]
   1466c:	add	r0, r0, #8
   14670:	ldrb	r1, [sp, #19]
   14674:	lsr	r1, r1, #5
   14678:	add	r0, r0, r1, lsl #2
   1467c:	str	r0, [sp, #12]
   14680:	ldrb	r0, [sp, #19]
   14684:	and	r0, r0, #31
   14688:	str	r0, [sp, #8]
   1468c:	ldr	r0, [sp, #12]
   14690:	ldr	r0, [r0]
   14694:	ldr	r1, [sp, #8]
   14698:	lsr	r0, r0, r1
   1469c:	and	r0, r0, #1
   146a0:	str	r0, [sp, #4]
   146a4:	ldr	r0, [sp, #20]
   146a8:	and	r0, r0, #1
   146ac:	ldr	r1, [sp, #4]
   146b0:	eor	r0, r0, r1
   146b4:	ldr	r1, [sp, #8]
   146b8:	lsl	r0, r0, r1
   146bc:	ldr	r1, [sp, #12]
   146c0:	ldr	r2, [r1]
   146c4:	eor	r0, r2, r0
   146c8:	str	r0, [r1]
   146cc:	ldr	r0, [sp, #4]
   146d0:	add	sp, sp, #32
   146d4:	bx	lr
   146d8:	sub	sp, sp, #12
   146dc:	str	r0, [sp, #8]
   146e0:	str	r1, [sp, #4]
   146e4:	ldr	r0, [sp, #8]
   146e8:	movw	r1, #0
   146ec:	cmp	r0, r1
   146f0:	bne	14700 <__assert_fail@plt+0x3628>
   146f4:	movw	r0, #368	; 0x170
   146f8:	movt	r0, #3
   146fc:	str	r0, [sp, #8]
   14700:	ldr	r0, [sp, #8]
   14704:	ldr	r0, [r0, #4]
   14708:	str	r0, [sp]
   1470c:	ldr	r0, [sp, #4]
   14710:	ldr	r1, [sp, #8]
   14714:	str	r0, [r1, #4]
   14718:	ldr	r0, [sp]
   1471c:	add	sp, sp, #12
   14720:	bx	lr
   14724:	push	{fp, lr}
   14728:	mov	fp, sp
   1472c:	sub	sp, sp, #16
   14730:	str	r0, [fp, #-4]
   14734:	str	r1, [sp, #8]
   14738:	str	r2, [sp, #4]
   1473c:	ldr	r0, [fp, #-4]
   14740:	movw	r1, #0
   14744:	cmp	r0, r1
   14748:	bne	14758 <__assert_fail@plt+0x3680>
   1474c:	movw	r0, #368	; 0x170
   14750:	movt	r0, #3
   14754:	str	r0, [fp, #-4]
   14758:	ldr	r0, [fp, #-4]
   1475c:	movw	r1, #10
   14760:	str	r1, [r0]
   14764:	ldr	r0, [sp, #8]
   14768:	movw	r1, #0
   1476c:	cmp	r0, r1
   14770:	beq	14784 <__assert_fail@plt+0x36ac>
   14774:	ldr	r0, [sp, #4]
   14778:	movw	r1, #0
   1477c:	cmp	r0, r1
   14780:	bne	14788 <__assert_fail@plt+0x36b0>
   14784:	bl	110c0 <abort@plt>
   14788:	ldr	r0, [sp, #8]
   1478c:	ldr	r1, [fp, #-4]
   14790:	str	r0, [r1, #40]	; 0x28
   14794:	ldr	r0, [sp, #4]
   14798:	ldr	r1, [fp, #-4]
   1479c:	str	r0, [r1, #44]	; 0x2c
   147a0:	mov	sp, fp
   147a4:	pop	{fp, pc}
   147a8:	push	{r4, r5, r6, sl, fp, lr}
   147ac:	add	fp, sp, #16
   147b0:	sub	sp, sp, #56	; 0x38
   147b4:	ldr	ip, [fp, #8]
   147b8:	str	r0, [fp, #-20]	; 0xffffffec
   147bc:	str	r1, [fp, #-24]	; 0xffffffe8
   147c0:	str	r2, [fp, #-28]	; 0xffffffe4
   147c4:	str	r3, [fp, #-32]	; 0xffffffe0
   147c8:	ldr	r0, [fp, #8]
   147cc:	movw	r1, #0
   147d0:	cmp	r0, r1
   147d4:	beq	147e4 <__assert_fail@plt+0x370c>
   147d8:	ldr	r0, [fp, #8]
   147dc:	str	r0, [sp, #24]
   147e0:	b	147f4 <__assert_fail@plt+0x371c>
   147e4:	movw	r0, #368	; 0x170
   147e8:	movt	r0, #3
   147ec:	str	r0, [sp, #24]
   147f0:	b	147f4 <__assert_fail@plt+0x371c>
   147f4:	ldr	r0, [sp, #24]
   147f8:	str	r0, [sp, #36]	; 0x24
   147fc:	bl	1100c <__errno_location@plt>
   14800:	ldr	r0, [r0]
   14804:	str	r0, [sp, #32]
   14808:	ldr	r0, [fp, #-20]	; 0xffffffec
   1480c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14810:	ldr	r2, [fp, #-28]	; 0xffffffe4
   14814:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14818:	ldr	ip, [sp, #36]	; 0x24
   1481c:	ldr	ip, [ip]
   14820:	ldr	lr, [sp, #36]	; 0x24
   14824:	ldr	lr, [lr, #4]
   14828:	ldr	r4, [sp, #36]	; 0x24
   1482c:	add	r4, r4, #8
   14830:	ldr	r5, [sp, #36]	; 0x24
   14834:	ldr	r5, [r5, #40]	; 0x28
   14838:	ldr	r6, [sp, #36]	; 0x24
   1483c:	ldr	r6, [r6, #44]	; 0x2c
   14840:	str	ip, [sp]
   14844:	str	lr, [sp, #4]
   14848:	str	r4, [sp, #8]
   1484c:	str	r5, [sp, #12]
   14850:	str	r6, [sp, #16]
   14854:	bl	1487c <__assert_fail@plt+0x37a4>
   14858:	str	r0, [sp, #28]
   1485c:	ldr	r0, [sp, #32]
   14860:	str	r0, [sp, #20]
   14864:	bl	1100c <__errno_location@plt>
   14868:	ldr	r1, [sp, #20]
   1486c:	str	r1, [r0]
   14870:	ldr	r0, [sp, #28]
   14874:	sub	sp, fp, #16
   14878:	pop	{r4, r5, r6, sl, fp, pc}
   1487c:	push	{r4, r5, r6, sl, fp, lr}
   14880:	add	fp, sp, #16
   14884:	sub	sp, sp, #160	; 0xa0
   14888:	ldr	ip, [fp, #24]
   1488c:	ldr	lr, [fp, #20]
   14890:	ldr	r4, [fp, #16]
   14894:	ldr	r5, [fp, #12]
   14898:	ldr	r6, [fp, #8]
   1489c:	str	r0, [fp, #-24]	; 0xffffffe8
   148a0:	str	r1, [fp, #-28]	; 0xffffffe4
   148a4:	str	r2, [fp, #-32]	; 0xffffffe0
   148a8:	str	r3, [fp, #-36]	; 0xffffffdc
   148ac:	movw	r0, #0
   148b0:	str	r0, [fp, #-44]	; 0xffffffd4
   148b4:	str	r0, [fp, #-48]	; 0xffffffd0
   148b8:	str	r0, [fp, #-52]	; 0xffffffcc
   148bc:	str	r0, [fp, #-56]	; 0xffffffc8
   148c0:	movw	r0, #0
   148c4:	strb	r0, [fp, #-57]	; 0xffffffc7
   148c8:	str	ip, [sp, #72]	; 0x48
   148cc:	str	lr, [sp, #68]	; 0x44
   148d0:	str	r4, [sp, #64]	; 0x40
   148d4:	str	r5, [sp, #60]	; 0x3c
   148d8:	str	r6, [sp, #56]	; 0x38
   148dc:	bl	10f34 <__ctype_get_mb_cur_max@plt>
   148e0:	cmp	r0, #1
   148e4:	movw	r0, #0
   148e8:	moveq	r0, #1
   148ec:	and	r0, r0, #1
   148f0:	strb	r0, [fp, #-58]	; 0xffffffc6
   148f4:	ldr	r0, [fp, #12]
   148f8:	and	r0, r0, #2
   148fc:	cmp	r0, #0
   14900:	movw	r0, #0
   14904:	movne	r0, #1
   14908:	and	r0, r0, #1
   1490c:	strb	r0, [fp, #-59]	; 0xffffffc5
   14910:	movw	r0, #0
   14914:	strb	r0, [fp, #-60]	; 0xffffffc4
   14918:	strb	r0, [fp, #-61]	; 0xffffffc3
   1491c:	movw	r0, #1
   14920:	strb	r0, [fp, #-62]	; 0xffffffc2
   14924:	ldr	r0, [fp, #8]
   14928:	cmp	r0, #10
   1492c:	str	r0, [sp, #52]	; 0x34
   14930:	bhi	14b58 <__assert_fail@plt+0x3a80>
   14934:	add	r0, pc, #8
   14938:	ldr	r1, [sp, #52]	; 0x34
   1493c:	ldr	r0, [r0, r1, lsl #2]
   14940:	mov	pc, r0
   14944:	andeq	r4, r1, ip, asr #22
   14948:	andeq	r4, r1, r8, asr #21
   1494c:	andeq	r4, r1, r8, ror #21
   14950:	andeq	r4, r1, r0, asr #21
   14954:	ldrdeq	r4, [r1], -r0
   14958:	andeq	r4, r1, r0, lsl #19
   1495c:	andeq	r4, r1, r0, ror r9
   14960:	andeq	r4, r1, r4, ror #19
   14964:	strdeq	r4, [r1], -r8
   14968:	strdeq	r4, [r1], -r8
   1496c:	strdeq	r4, [r1], -r8
   14970:	movw	r0, #5
   14974:	str	r0, [fp, #8]
   14978:	movw	r0, #1
   1497c:	strb	r0, [fp, #-59]	; 0xffffffc5
   14980:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14984:	tst	r0, #1
   14988:	bne	149c4 <__assert_fail@plt+0x38ec>
   1498c:	b	14990 <__assert_fail@plt+0x38b8>
   14990:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14994:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14998:	cmp	r0, r1
   1499c:	bcs	149b4 <__assert_fail@plt+0x38dc>
   149a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   149a4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   149a8:	add	r0, r0, r1
   149ac:	movw	r1, #34	; 0x22
   149b0:	strb	r1, [r0]
   149b4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   149b8:	add	r0, r0, #1
   149bc:	str	r0, [fp, #-44]	; 0xffffffd4
   149c0:	b	149c4 <__assert_fail@plt+0x38ec>
   149c4:	movw	r0, #1
   149c8:	strb	r0, [fp, #-57]	; 0xffffffc7
   149cc:	movw	r0, #62875	; 0xf59b
   149d0:	movt	r0, #1
   149d4:	str	r0, [fp, #-52]	; 0xffffffcc
   149d8:	movw	r0, #1
   149dc:	str	r0, [fp, #-56]	; 0xffffffc8
   149e0:	b	14b5c <__assert_fail@plt+0x3a84>
   149e4:	movw	r0, #1
   149e8:	strb	r0, [fp, #-57]	; 0xffffffc7
   149ec:	movw	r0, #0
   149f0:	strb	r0, [fp, #-59]	; 0xffffffc5
   149f4:	b	14b5c <__assert_fail@plt+0x3a84>
   149f8:	ldr	r0, [fp, #8]
   149fc:	cmp	r0, #10
   14a00:	beq	14a2c <__assert_fail@plt+0x3954>
   14a04:	ldr	r1, [fp, #8]
   14a08:	movw	r0, #62877	; 0xf59d
   14a0c:	movt	r0, #1
   14a10:	bl	16a70 <__assert_fail@plt+0x5998>
   14a14:	str	r0, [fp, #20]
   14a18:	ldr	r1, [fp, #8]
   14a1c:	movw	r0, #62879	; 0xf59f
   14a20:	movt	r0, #1
   14a24:	bl	16a70 <__assert_fail@plt+0x5998>
   14a28:	str	r0, [fp, #24]
   14a2c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14a30:	tst	r0, #1
   14a34:	bne	14aa0 <__assert_fail@plt+0x39c8>
   14a38:	ldr	r0, [fp, #20]
   14a3c:	str	r0, [fp, #-52]	; 0xffffffcc
   14a40:	ldr	r0, [fp, #-52]	; 0xffffffcc
   14a44:	ldrsb	r0, [r0]
   14a48:	cmp	r0, #0
   14a4c:	beq	14a9c <__assert_fail@plt+0x39c4>
   14a50:	b	14a54 <__assert_fail@plt+0x397c>
   14a54:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14a58:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14a5c:	cmp	r0, r1
   14a60:	bcs	14a7c <__assert_fail@plt+0x39a4>
   14a64:	ldr	r0, [fp, #-52]	; 0xffffffcc
   14a68:	ldrb	r0, [r0]
   14a6c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14a70:	ldr	r2, [fp, #-44]	; 0xffffffd4
   14a74:	add	r1, r1, r2
   14a78:	strb	r0, [r1]
   14a7c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14a80:	add	r0, r0, #1
   14a84:	str	r0, [fp, #-44]	; 0xffffffd4
   14a88:	b	14a8c <__assert_fail@plt+0x39b4>
   14a8c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   14a90:	add	r0, r0, #1
   14a94:	str	r0, [fp, #-52]	; 0xffffffcc
   14a98:	b	14a40 <__assert_fail@plt+0x3968>
   14a9c:	b	14aa0 <__assert_fail@plt+0x39c8>
   14aa0:	movw	r0, #1
   14aa4:	strb	r0, [fp, #-57]	; 0xffffffc7
   14aa8:	ldr	r0, [fp, #24]
   14aac:	str	r0, [fp, #-52]	; 0xffffffcc
   14ab0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   14ab4:	bl	10fdc <strlen@plt>
   14ab8:	str	r0, [fp, #-56]	; 0xffffffc8
   14abc:	b	14b5c <__assert_fail@plt+0x3a84>
   14ac0:	movw	r0, #1
   14ac4:	strb	r0, [fp, #-57]	; 0xffffffc7
   14ac8:	movw	r0, #1
   14acc:	strb	r0, [fp, #-59]	; 0xffffffc5
   14ad0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14ad4:	tst	r0, #1
   14ad8:	bne	14ae4 <__assert_fail@plt+0x3a0c>
   14adc:	movw	r0, #1
   14ae0:	strb	r0, [fp, #-57]	; 0xffffffc7
   14ae4:	b	14ae8 <__assert_fail@plt+0x3a10>
   14ae8:	movw	r0, #2
   14aec:	str	r0, [fp, #8]
   14af0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14af4:	tst	r0, #1
   14af8:	bne	14b34 <__assert_fail@plt+0x3a5c>
   14afc:	b	14b00 <__assert_fail@plt+0x3a28>
   14b00:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14b04:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14b08:	cmp	r0, r1
   14b0c:	bcs	14b24 <__assert_fail@plt+0x3a4c>
   14b10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14b14:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14b18:	add	r0, r0, r1
   14b1c:	movw	r1, #39	; 0x27
   14b20:	strb	r1, [r0]
   14b24:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14b28:	add	r0, r0, #1
   14b2c:	str	r0, [fp, #-44]	; 0xffffffd4
   14b30:	b	14b34 <__assert_fail@plt+0x3a5c>
   14b34:	movw	r0, #62879	; 0xf59f
   14b38:	movt	r0, #1
   14b3c:	str	r0, [fp, #-52]	; 0xffffffcc
   14b40:	movw	r0, #1
   14b44:	str	r0, [fp, #-56]	; 0xffffffc8
   14b48:	b	14b5c <__assert_fail@plt+0x3a84>
   14b4c:	movw	r0, #0
   14b50:	strb	r0, [fp, #-59]	; 0xffffffc5
   14b54:	b	14b5c <__assert_fail@plt+0x3a84>
   14b58:	bl	110c0 <abort@plt>
   14b5c:	movw	r0, #0
   14b60:	str	r0, [fp, #-40]	; 0xffffffd8
   14b64:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14b68:	cmn	r0, #1
   14b6c:	bne	14b98 <__assert_fail@plt+0x3ac0>
   14b70:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14b74:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14b78:	add	r0, r0, r1
   14b7c:	ldrb	r0, [r0]
   14b80:	cmp	r0, #0
   14b84:	movw	r0, #0
   14b88:	moveq	r0, #1
   14b8c:	and	r0, r0, #1
   14b90:	str	r0, [sp, #48]	; 0x30
   14b94:	b	14bb4 <__assert_fail@plt+0x3adc>
   14b98:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14b9c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14ba0:	cmp	r0, r1
   14ba4:	movw	r0, #0
   14ba8:	moveq	r0, #1
   14bac:	and	r0, r0, #1
   14bb0:	str	r0, [sp, #48]	; 0x30
   14bb4:	ldr	r0, [sp, #48]	; 0x30
   14bb8:	cmp	r0, #0
   14bbc:	movw	r0, #0
   14bc0:	movne	r0, #1
   14bc4:	mvn	r1, #0
   14bc8:	eor	r0, r0, r1
   14bcc:	tst	r0, #1
   14bd0:	beq	15dbc <__assert_fail@plt+0x4ce4>
   14bd4:	movw	r0, #0
   14bd8:	strb	r0, [fp, #-65]	; 0xffffffbf
   14bdc:	strb	r0, [fp, #-66]	; 0xffffffbe
   14be0:	strb	r0, [fp, #-67]	; 0xffffffbd
   14be4:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   14be8:	tst	r0, #1
   14bec:	beq	14c98 <__assert_fail@plt+0x3bc0>
   14bf0:	ldr	r0, [fp, #8]
   14bf4:	cmp	r0, #2
   14bf8:	beq	14c98 <__assert_fail@plt+0x3bc0>
   14bfc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   14c00:	cmp	r0, #0
   14c04:	beq	14c98 <__assert_fail@plt+0x3bc0>
   14c08:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14c0c:	ldr	r1, [fp, #-56]	; 0xffffffc8
   14c10:	add	r0, r0, r1
   14c14:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14c18:	cmn	r1, #1
   14c1c:	str	r0, [sp, #44]	; 0x2c
   14c20:	bne	14c48 <__assert_fail@plt+0x3b70>
   14c24:	ldr	r0, [fp, #-56]	; 0xffffffc8
   14c28:	movw	r1, #1
   14c2c:	cmp	r1, r0
   14c30:	bcs	14c48 <__assert_fail@plt+0x3b70>
   14c34:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14c38:	bl	10fdc <strlen@plt>
   14c3c:	str	r0, [fp, #-36]	; 0xffffffdc
   14c40:	str	r0, [sp, #40]	; 0x28
   14c44:	b	14c50 <__assert_fail@plt+0x3b78>
   14c48:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14c4c:	str	r0, [sp, #40]	; 0x28
   14c50:	ldr	r0, [sp, #40]	; 0x28
   14c54:	ldr	r1, [sp, #44]	; 0x2c
   14c58:	cmp	r1, r0
   14c5c:	bhi	14c98 <__assert_fail@plt+0x3bc0>
   14c60:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14c64:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14c68:	add	r0, r0, r1
   14c6c:	ldr	r1, [fp, #-52]	; 0xffffffcc
   14c70:	ldr	r2, [fp, #-56]	; 0xffffffc8
   14c74:	bl	10ee0 <memcmp@plt>
   14c78:	cmp	r0, #0
   14c7c:	bne	14c98 <__assert_fail@plt+0x3bc0>
   14c80:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14c84:	tst	r0, #1
   14c88:	beq	14c90 <__assert_fail@plt+0x3bb8>
   14c8c:	b	15f3c <__assert_fail@plt+0x4e64>
   14c90:	movw	r0, #1
   14c94:	strb	r0, [fp, #-65]	; 0xffffffbf
   14c98:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14c9c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14ca0:	ldrb	r0, [r0, r1]
   14ca4:	strb	r0, [fp, #-63]	; 0xffffffc1
   14ca8:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   14cac:	mov	r1, r0
   14cb0:	cmp	r0, #126	; 0x7e
   14cb4:	str	r1, [sp, #36]	; 0x24
   14cb8:	bhi	15528 <__assert_fail@plt+0x4450>
   14cbc:	add	r0, pc, #8
   14cc0:	ldr	r1, [sp, #36]	; 0x24
   14cc4:	ldr	r0, [r0, r1, lsl #2]
   14cc8:	mov	pc, r0
   14ccc:	andeq	r4, r1, r8, asr #29
   14cd0:	andeq	r5, r1, r8, lsr #10
   14cd4:	andeq	r5, r1, r8, lsr #10
   14cd8:	andeq	r5, r1, r8, lsr #10
   14cdc:	andeq	r5, r1, r8, lsr #10
   14ce0:	andeq	r5, r1, r8, lsr #10
   14ce4:	andeq	r5, r1, r8, lsr #10
   14ce8:	ldrdeq	r5, [r1], -r0
   14cec:	ldrdeq	r5, [r1], -ip
   14cf0:	andeq	r5, r1, ip, lsl #6
   14cf4:	strdeq	r5, [r1], -r4
   14cf8:	andeq	r5, r1, r8, lsl r3
   14cfc:	andeq	r5, r1, r8, ror #5
   14d00:	andeq	r5, r1, r0, lsl #6
   14d04:	andeq	r5, r1, r8, lsr #10
   14d08:	andeq	r5, r1, r8, lsr #10
   14d0c:	andeq	r5, r1, r8, lsr #10
   14d10:	andeq	r5, r1, r8, lsr #10
   14d14:	andeq	r5, r1, r8, lsr #10
   14d18:	andeq	r5, r1, r8, lsr #10
   14d1c:	andeq	r5, r1, r8, lsr #10
   14d20:	andeq	r5, r1, r8, lsr #10
   14d24:	andeq	r5, r1, r8, lsr #10
   14d28:	andeq	r5, r1, r8, lsr #10
   14d2c:	andeq	r5, r1, r8, lsr #10
   14d30:	andeq	r5, r1, r8, lsr #10
   14d34:	andeq	r5, r1, r8, lsr #10
   14d38:	andeq	r5, r1, r8, lsr #10
   14d3c:	andeq	r5, r1, r8, lsr #10
   14d40:	andeq	r5, r1, r8, lsr #10
   14d44:	andeq	r5, r1, r8, lsr #10
   14d48:	andeq	r5, r1, r8, lsr #10
   14d4c:	strdeq	r5, [r1], -ip
   14d50:	andeq	r5, r1, r4, lsl #8
   14d54:	andeq	r5, r1, r4, lsl #8
   14d58:	andeq	r5, r1, r8, ror #7
   14d5c:	andeq	r5, r1, r4, lsl #8
   14d60:	andeq	r5, r1, ip, lsl r5
   14d64:	andeq	r5, r1, r4, lsl #8
   14d68:	andeq	r5, r1, r4, lsr #8
   14d6c:	andeq	r5, r1, r4, lsl #8
   14d70:	andeq	r5, r1, r4, lsl #8
   14d74:	andeq	r5, r1, r4, lsl #8
   14d78:	andeq	r5, r1, ip, lsl r5
   14d7c:	andeq	r5, r1, ip, lsl r5
   14d80:	andeq	r5, r1, ip, lsl r5
   14d84:	andeq	r5, r1, ip, lsl r5
   14d88:	andeq	r5, r1, ip, lsl r5
   14d8c:	andeq	r5, r1, ip, lsl r5
   14d90:	andeq	r5, r1, ip, lsl r5
   14d94:	andeq	r5, r1, ip, lsl r5
   14d98:	andeq	r5, r1, ip, lsl r5
   14d9c:	andeq	r5, r1, ip, lsl r5
   14da0:	andeq	r5, r1, ip, lsl r5
   14da4:	andeq	r5, r1, ip, lsl r5
   14da8:	andeq	r5, r1, ip, lsl r5
   14dac:	andeq	r5, r1, ip, lsl r5
   14db0:	andeq	r5, r1, ip, lsl r5
   14db4:	andeq	r5, r1, ip, lsl r5
   14db8:	andeq	r5, r1, r4, lsl #8
   14dbc:	andeq	r5, r1, r4, lsl #8
   14dc0:	andeq	r5, r1, r4, lsl #8
   14dc4:	andeq	r5, r1, r4, lsl #8
   14dc8:	ldrdeq	r5, [r1], -r4
   14dcc:	andeq	r5, r1, r8, lsr #10
   14dd0:	andeq	r5, r1, ip, lsl r5
   14dd4:	andeq	r5, r1, ip, lsl r5
   14dd8:	andeq	r5, r1, ip, lsl r5
   14ddc:	andeq	r5, r1, ip, lsl r5
   14de0:	andeq	r5, r1, ip, lsl r5
   14de4:	andeq	r5, r1, ip, lsl r5
   14de8:	andeq	r5, r1, ip, lsl r5
   14dec:	andeq	r5, r1, ip, lsl r5
   14df0:	andeq	r5, r1, ip, lsl r5
   14df4:	andeq	r5, r1, ip, lsl r5
   14df8:	andeq	r5, r1, ip, lsl r5
   14dfc:	andeq	r5, r1, ip, lsl r5
   14e00:	andeq	r5, r1, ip, lsl r5
   14e04:	andeq	r5, r1, ip, lsl r5
   14e08:	andeq	r5, r1, ip, lsl r5
   14e0c:	andeq	r5, r1, ip, lsl r5
   14e10:	andeq	r5, r1, ip, lsl r5
   14e14:	andeq	r5, r1, ip, lsl r5
   14e18:	andeq	r5, r1, ip, lsl r5
   14e1c:	andeq	r5, r1, ip, lsl r5
   14e20:	andeq	r5, r1, ip, lsl r5
   14e24:	andeq	r5, r1, ip, lsl r5
   14e28:	andeq	r5, r1, ip, lsl r5
   14e2c:	andeq	r5, r1, ip, lsl r5
   14e30:	andeq	r5, r1, ip, lsl r5
   14e34:	andeq	r5, r1, ip, lsl r5
   14e38:	andeq	r5, r1, r4, lsl #8
   14e3c:	andeq	r5, r1, r4, lsr #6
   14e40:	andeq	r5, r1, ip, lsl r5
   14e44:	andeq	r5, r1, r4, lsl #8
   14e48:	andeq	r5, r1, ip, lsl r5
   14e4c:	andeq	r5, r1, r4, lsl #8
   14e50:	andeq	r5, r1, ip, lsl r5
   14e54:	andeq	r5, r1, ip, lsl r5
   14e58:	andeq	r5, r1, ip, lsl r5
   14e5c:	andeq	r5, r1, ip, lsl r5
   14e60:	andeq	r5, r1, ip, lsl r5
   14e64:	andeq	r5, r1, ip, lsl r5
   14e68:	andeq	r5, r1, ip, lsl r5
   14e6c:	andeq	r5, r1, ip, lsl r5
   14e70:	andeq	r5, r1, ip, lsl r5
   14e74:	andeq	r5, r1, ip, lsl r5
   14e78:	andeq	r5, r1, ip, lsl r5
   14e7c:	andeq	r5, r1, ip, lsl r5
   14e80:	andeq	r5, r1, ip, lsl r5
   14e84:	andeq	r5, r1, ip, lsl r5
   14e88:	andeq	r5, r1, ip, lsl r5
   14e8c:	andeq	r5, r1, ip, lsl r5
   14e90:	andeq	r5, r1, ip, lsl r5
   14e94:	andeq	r5, r1, ip, lsl r5
   14e98:	andeq	r5, r1, ip, lsl r5
   14e9c:	andeq	r5, r1, ip, lsl r5
   14ea0:	andeq	r5, r1, ip, lsl r5
   14ea4:	andeq	r5, r1, ip, lsl r5
   14ea8:	andeq	r5, r1, ip, lsl r5
   14eac:	andeq	r5, r1, ip, lsl r5
   14eb0:	andeq	r5, r1, ip, lsl r5
   14eb4:	andeq	r5, r1, ip, lsl r5
   14eb8:			; <UNDEFINED> instruction: 0x000153b4
   14ebc:	andeq	r5, r1, r4, lsl #8
   14ec0:			; <UNDEFINED> instruction: 0x000153b4
   14ec4:	andeq	r5, r1, r8, ror #7
   14ec8:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   14ecc:	tst	r0, #1
   14ed0:	beq	150b8 <__assert_fail@plt+0x3fe0>
   14ed4:	b	14ed8 <__assert_fail@plt+0x3e00>
   14ed8:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14edc:	tst	r0, #1
   14ee0:	beq	14ee8 <__assert_fail@plt+0x3e10>
   14ee4:	b	15f3c <__assert_fail@plt+0x4e64>
   14ee8:	movw	r0, #1
   14eec:	strb	r0, [fp, #-66]	; 0xffffffbe
   14ef0:	ldr	r0, [fp, #8]
   14ef4:	cmp	r0, #2
   14ef8:	bne	14fac <__assert_fail@plt+0x3ed4>
   14efc:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   14f00:	tst	r0, #1
   14f04:	bne	14fac <__assert_fail@plt+0x3ed4>
   14f08:	b	14f0c <__assert_fail@plt+0x3e34>
   14f0c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14f10:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14f14:	cmp	r0, r1
   14f18:	bcs	14f30 <__assert_fail@plt+0x3e58>
   14f1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14f20:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14f24:	add	r0, r0, r1
   14f28:	movw	r1, #39	; 0x27
   14f2c:	strb	r1, [r0]
   14f30:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14f34:	add	r0, r0, #1
   14f38:	str	r0, [fp, #-44]	; 0xffffffd4
   14f3c:	b	14f40 <__assert_fail@plt+0x3e68>
   14f40:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14f44:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14f48:	cmp	r0, r1
   14f4c:	bcs	14f64 <__assert_fail@plt+0x3e8c>
   14f50:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14f54:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14f58:	add	r0, r0, r1
   14f5c:	movw	r1, #36	; 0x24
   14f60:	strb	r1, [r0]
   14f64:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14f68:	add	r0, r0, #1
   14f6c:	str	r0, [fp, #-44]	; 0xffffffd4
   14f70:	b	14f74 <__assert_fail@plt+0x3e9c>
   14f74:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14f78:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14f7c:	cmp	r0, r1
   14f80:	bcs	14f98 <__assert_fail@plt+0x3ec0>
   14f84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14f88:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14f8c:	add	r0, r0, r1
   14f90:	movw	r1, #39	; 0x27
   14f94:	strb	r1, [r0]
   14f98:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14f9c:	add	r0, r0, #1
   14fa0:	str	r0, [fp, #-44]	; 0xffffffd4
   14fa4:	movw	r0, #1
   14fa8:	strb	r0, [fp, #-60]	; 0xffffffc4
   14fac:	b	14fb0 <__assert_fail@plt+0x3ed8>
   14fb0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14fb4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14fb8:	cmp	r0, r1
   14fbc:	bcs	14fd4 <__assert_fail@plt+0x3efc>
   14fc0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14fc4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14fc8:	add	r0, r0, r1
   14fcc:	movw	r1, #92	; 0x5c
   14fd0:	strb	r1, [r0]
   14fd4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14fd8:	add	r0, r0, #1
   14fdc:	str	r0, [fp, #-44]	; 0xffffffd4
   14fe0:	b	14fe4 <__assert_fail@plt+0x3f0c>
   14fe4:	ldr	r0, [fp, #8]
   14fe8:	cmp	r0, #2
   14fec:	beq	150ac <__assert_fail@plt+0x3fd4>
   14ff0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14ff4:	add	r0, r0, #1
   14ff8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14ffc:	cmp	r0, r1
   15000:	bcs	150ac <__assert_fail@plt+0x3fd4>
   15004:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15008:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1500c:	add	r1, r1, #1
   15010:	add	r0, r0, r1
   15014:	ldrb	r0, [r0]
   15018:	movw	r1, #48	; 0x30
   1501c:	cmp	r1, r0
   15020:	bgt	150ac <__assert_fail@plt+0x3fd4>
   15024:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15028:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1502c:	add	r1, r1, #1
   15030:	add	r0, r0, r1
   15034:	ldrb	r0, [r0]
   15038:	cmp	r0, #57	; 0x39
   1503c:	bgt	150ac <__assert_fail@plt+0x3fd4>
   15040:	b	15044 <__assert_fail@plt+0x3f6c>
   15044:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15048:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1504c:	cmp	r0, r1
   15050:	bcs	15068 <__assert_fail@plt+0x3f90>
   15054:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15058:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1505c:	add	r0, r0, r1
   15060:	movw	r1, #48	; 0x30
   15064:	strb	r1, [r0]
   15068:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1506c:	add	r0, r0, #1
   15070:	str	r0, [fp, #-44]	; 0xffffffd4
   15074:	b	15078 <__assert_fail@plt+0x3fa0>
   15078:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1507c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15080:	cmp	r0, r1
   15084:	bcs	1509c <__assert_fail@plt+0x3fc4>
   15088:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1508c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15090:	add	r0, r0, r1
   15094:	movw	r1, #48	; 0x30
   15098:	strb	r1, [r0]
   1509c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   150a0:	add	r0, r0, #1
   150a4:	str	r0, [fp, #-44]	; 0xffffffd4
   150a8:	b	150ac <__assert_fail@plt+0x3fd4>
   150ac:	movw	r0, #48	; 0x30
   150b0:	strb	r0, [fp, #-63]	; 0xffffffc1
   150b4:	b	150d0 <__assert_fail@plt+0x3ff8>
   150b8:	ldr	r0, [fp, #12]
   150bc:	and	r0, r0, #1
   150c0:	cmp	r0, #0
   150c4:	beq	150cc <__assert_fail@plt+0x3ff4>
   150c8:	b	15dac <__assert_fail@plt+0x4cd4>
   150cc:	b	150d0 <__assert_fail@plt+0x3ff8>
   150d0:	b	15b48 <__assert_fail@plt+0x4a70>
   150d4:	ldr	r0, [fp, #8]
   150d8:	cmp	r0, #2
   150dc:	str	r0, [sp, #32]
   150e0:	beq	150f8 <__assert_fail@plt+0x4020>
   150e4:	b	150e8 <__assert_fail@plt+0x4010>
   150e8:	ldr	r0, [sp, #32]
   150ec:	cmp	r0, #5
   150f0:	beq	1510c <__assert_fail@plt+0x4034>
   150f4:	b	152c8 <__assert_fail@plt+0x41f0>
   150f8:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   150fc:	tst	r0, #1
   15100:	beq	15108 <__assert_fail@plt+0x4030>
   15104:	b	15f3c <__assert_fail@plt+0x4e64>
   15108:	b	152cc <__assert_fail@plt+0x41f4>
   1510c:	ldr	r0, [fp, #12]
   15110:	and	r0, r0, #4
   15114:	cmp	r0, #0
   15118:	beq	152c4 <__assert_fail@plt+0x41ec>
   1511c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15120:	add	r0, r0, #2
   15124:	ldr	r1, [fp, #-36]	; 0xffffffdc
   15128:	cmp	r0, r1
   1512c:	bcs	152c4 <__assert_fail@plt+0x41ec>
   15130:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15134:	ldr	r1, [fp, #-40]	; 0xffffffd8
   15138:	add	r1, r1, #1
   1513c:	add	r0, r0, r1
   15140:	ldrb	r0, [r0]
   15144:	cmp	r0, #63	; 0x3f
   15148:	bne	152c4 <__assert_fail@plt+0x41ec>
   1514c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15150:	ldr	r1, [fp, #-40]	; 0xffffffd8
   15154:	add	r0, r1, r0
   15158:	ldrb	r0, [r0, #2]
   1515c:	mov	r1, r0
   15160:	cmp	r0, #33	; 0x21
   15164:	str	r1, [sp, #28]
   15168:	beq	151b8 <__assert_fail@plt+0x40e0>
   1516c:	b	15170 <__assert_fail@plt+0x4098>
   15170:	ldr	r0, [sp, #28]
   15174:	sub	r1, r0, #39	; 0x27
   15178:	cmp	r1, #3
   1517c:	bcc	151b8 <__assert_fail@plt+0x40e0>
   15180:	b	15184 <__assert_fail@plt+0x40ac>
   15184:	ldr	r0, [sp, #28]
   15188:	cmp	r0, #45	; 0x2d
   1518c:	beq	151b8 <__assert_fail@plt+0x40e0>
   15190:	b	15194 <__assert_fail@plt+0x40bc>
   15194:	ldr	r0, [sp, #28]
   15198:	cmp	r0, #47	; 0x2f
   1519c:	beq	151b8 <__assert_fail@plt+0x40e0>
   151a0:	b	151a4 <__assert_fail@plt+0x40cc>
   151a4:	ldr	r0, [sp, #28]
   151a8:	sub	r1, r0, #60	; 0x3c
   151ac:	cmp	r1, #2
   151b0:	bhi	152bc <__assert_fail@plt+0x41e4>
   151b4:	b	151b8 <__assert_fail@plt+0x40e0>
   151b8:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   151bc:	tst	r0, #1
   151c0:	beq	151c8 <__assert_fail@plt+0x40f0>
   151c4:	b	15f3c <__assert_fail@plt+0x4e64>
   151c8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   151cc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   151d0:	add	r1, r1, #2
   151d4:	add	r0, r0, r1
   151d8:	ldrb	r0, [r0]
   151dc:	strb	r0, [fp, #-63]	; 0xffffffc1
   151e0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   151e4:	add	r0, r0, #2
   151e8:	str	r0, [fp, #-40]	; 0xffffffd8
   151ec:	ldr	r0, [fp, #-44]	; 0xffffffd4
   151f0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   151f4:	cmp	r0, r1
   151f8:	bcs	15210 <__assert_fail@plt+0x4138>
   151fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15200:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15204:	add	r0, r0, r1
   15208:	movw	r1, #63	; 0x3f
   1520c:	strb	r1, [r0]
   15210:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15214:	add	r0, r0, #1
   15218:	str	r0, [fp, #-44]	; 0xffffffd4
   1521c:	b	15220 <__assert_fail@plt+0x4148>
   15220:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15224:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15228:	cmp	r0, r1
   1522c:	bcs	15244 <__assert_fail@plt+0x416c>
   15230:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15234:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15238:	add	r0, r0, r1
   1523c:	movw	r1, #34	; 0x22
   15240:	strb	r1, [r0]
   15244:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15248:	add	r0, r0, #1
   1524c:	str	r0, [fp, #-44]	; 0xffffffd4
   15250:	b	15254 <__assert_fail@plt+0x417c>
   15254:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15258:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1525c:	cmp	r0, r1
   15260:	bcs	15278 <__assert_fail@plt+0x41a0>
   15264:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15268:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1526c:	add	r0, r0, r1
   15270:	movw	r1, #34	; 0x22
   15274:	strb	r1, [r0]
   15278:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1527c:	add	r0, r0, #1
   15280:	str	r0, [fp, #-44]	; 0xffffffd4
   15284:	b	15288 <__assert_fail@plt+0x41b0>
   15288:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1528c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15290:	cmp	r0, r1
   15294:	bcs	152ac <__assert_fail@plt+0x41d4>
   15298:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1529c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   152a0:	add	r0, r0, r1
   152a4:	movw	r1, #63	; 0x3f
   152a8:	strb	r1, [r0]
   152ac:	ldr	r0, [fp, #-44]	; 0xffffffd4
   152b0:	add	r0, r0, #1
   152b4:	str	r0, [fp, #-44]	; 0xffffffd4
   152b8:	b	152c0 <__assert_fail@plt+0x41e8>
   152bc:	b	152c0 <__assert_fail@plt+0x41e8>
   152c0:	b	152c4 <__assert_fail@plt+0x41ec>
   152c4:	b	152cc <__assert_fail@plt+0x41f4>
   152c8:	b	152cc <__assert_fail@plt+0x41f4>
   152cc:	b	15b48 <__assert_fail@plt+0x4a70>
   152d0:	movw	r0, #97	; 0x61
   152d4:	strb	r0, [fp, #-64]	; 0xffffffc0
   152d8:	b	15398 <__assert_fail@plt+0x42c0>
   152dc:	movw	r0, #98	; 0x62
   152e0:	strb	r0, [fp, #-64]	; 0xffffffc0
   152e4:	b	15398 <__assert_fail@plt+0x42c0>
   152e8:	movw	r0, #102	; 0x66
   152ec:	strb	r0, [fp, #-64]	; 0xffffffc0
   152f0:	b	15398 <__assert_fail@plt+0x42c0>
   152f4:	movw	r0, #110	; 0x6e
   152f8:	strb	r0, [fp, #-64]	; 0xffffffc0
   152fc:	b	15378 <__assert_fail@plt+0x42a0>
   15300:	movw	r0, #114	; 0x72
   15304:	strb	r0, [fp, #-64]	; 0xffffffc0
   15308:	b	15378 <__assert_fail@plt+0x42a0>
   1530c:	movw	r0, #116	; 0x74
   15310:	strb	r0, [fp, #-64]	; 0xffffffc0
   15314:	b	15378 <__assert_fail@plt+0x42a0>
   15318:	movw	r0, #118	; 0x76
   1531c:	strb	r0, [fp, #-64]	; 0xffffffc0
   15320:	b	15398 <__assert_fail@plt+0x42c0>
   15324:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   15328:	strb	r0, [fp, #-64]	; 0xffffffc0
   1532c:	ldr	r0, [fp, #8]
   15330:	cmp	r0, #2
   15334:	bne	1534c <__assert_fail@plt+0x4274>
   15338:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1533c:	tst	r0, #1
   15340:	beq	15348 <__assert_fail@plt+0x4270>
   15344:	b	15f3c <__assert_fail@plt+0x4e64>
   15348:	b	15cd0 <__assert_fail@plt+0x4bf8>
   1534c:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   15350:	tst	r0, #1
   15354:	beq	15374 <__assert_fail@plt+0x429c>
   15358:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1535c:	tst	r0, #1
   15360:	beq	15374 <__assert_fail@plt+0x429c>
   15364:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15368:	cmp	r0, #0
   1536c:	beq	15374 <__assert_fail@plt+0x429c>
   15370:	b	15cd0 <__assert_fail@plt+0x4bf8>
   15374:	b	15378 <__assert_fail@plt+0x42a0>
   15378:	ldr	r0, [fp, #8]
   1537c:	cmp	r0, #2
   15380:	bne	15394 <__assert_fail@plt+0x42bc>
   15384:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15388:	tst	r0, #1
   1538c:	beq	15394 <__assert_fail@plt+0x42bc>
   15390:	b	15f3c <__assert_fail@plt+0x4e64>
   15394:	b	15398 <__assert_fail@plt+0x42c0>
   15398:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   1539c:	tst	r0, #1
   153a0:	beq	153b0 <__assert_fail@plt+0x42d8>
   153a4:	ldrb	r0, [fp, #-64]	; 0xffffffc0
   153a8:	strb	r0, [fp, #-63]	; 0xffffffc1
   153ac:	b	15bbc <__assert_fail@plt+0x4ae4>
   153b0:	b	15b48 <__assert_fail@plt+0x4a70>
   153b4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   153b8:	cmn	r0, #1
   153bc:	bne	153d4 <__assert_fail@plt+0x42fc>
   153c0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   153c4:	ldrb	r0, [r0, #1]
   153c8:	cmp	r0, #0
   153cc:	beq	153e4 <__assert_fail@plt+0x430c>
   153d0:	b	153e0 <__assert_fail@plt+0x4308>
   153d4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   153d8:	cmp	r0, #1
   153dc:	beq	153e4 <__assert_fail@plt+0x430c>
   153e0:	b	15b48 <__assert_fail@plt+0x4a70>
   153e4:	b	153e8 <__assert_fail@plt+0x4310>
   153e8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   153ec:	cmp	r0, #0
   153f0:	beq	153f8 <__assert_fail@plt+0x4320>
   153f4:	b	15b48 <__assert_fail@plt+0x4a70>
   153f8:	b	153fc <__assert_fail@plt+0x4324>
   153fc:	movw	r0, #1
   15400:	strb	r0, [fp, #-67]	; 0xffffffbd
   15404:	ldr	r0, [fp, #8]
   15408:	cmp	r0, #2
   1540c:	bne	15420 <__assert_fail@plt+0x4348>
   15410:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15414:	tst	r0, #1
   15418:	beq	15420 <__assert_fail@plt+0x4348>
   1541c:	b	15f3c <__assert_fail@plt+0x4e64>
   15420:	b	15b48 <__assert_fail@plt+0x4a70>
   15424:	movw	r0, #1
   15428:	strb	r0, [fp, #-61]	; 0xffffffc3
   1542c:	strb	r0, [fp, #-67]	; 0xffffffbd
   15430:	ldr	r0, [fp, #8]
   15434:	cmp	r0, #2
   15438:	bne	15518 <__assert_fail@plt+0x4440>
   1543c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15440:	tst	r0, #1
   15444:	beq	1544c <__assert_fail@plt+0x4374>
   15448:	b	15f3c <__assert_fail@plt+0x4e64>
   1544c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   15450:	cmp	r0, #0
   15454:	beq	15474 <__assert_fail@plt+0x439c>
   15458:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1545c:	cmp	r0, #0
   15460:	bne	15474 <__assert_fail@plt+0x439c>
   15464:	ldr	r0, [fp, #-28]	; 0xffffffe4
   15468:	str	r0, [fp, #-48]	; 0xffffffd0
   1546c:	movw	r0, #0
   15470:	str	r0, [fp, #-28]	; 0xffffffe4
   15474:	b	15478 <__assert_fail@plt+0x43a0>
   15478:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1547c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15480:	cmp	r0, r1
   15484:	bcs	1549c <__assert_fail@plt+0x43c4>
   15488:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1548c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15490:	add	r0, r0, r1
   15494:	movw	r1, #39	; 0x27
   15498:	strb	r1, [r0]
   1549c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   154a0:	add	r0, r0, #1
   154a4:	str	r0, [fp, #-44]	; 0xffffffd4
   154a8:	b	154ac <__assert_fail@plt+0x43d4>
   154ac:	ldr	r0, [fp, #-44]	; 0xffffffd4
   154b0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   154b4:	cmp	r0, r1
   154b8:	bcs	154d0 <__assert_fail@plt+0x43f8>
   154bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   154c0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   154c4:	add	r0, r0, r1
   154c8:	movw	r1, #92	; 0x5c
   154cc:	strb	r1, [r0]
   154d0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   154d4:	add	r0, r0, #1
   154d8:	str	r0, [fp, #-44]	; 0xffffffd4
   154dc:	b	154e0 <__assert_fail@plt+0x4408>
   154e0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   154e4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   154e8:	cmp	r0, r1
   154ec:	bcs	15504 <__assert_fail@plt+0x442c>
   154f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   154f4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   154f8:	add	r0, r0, r1
   154fc:	movw	r1, #39	; 0x27
   15500:	strb	r1, [r0]
   15504:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15508:	add	r0, r0, #1
   1550c:	str	r0, [fp, #-44]	; 0xffffffd4
   15510:	movw	r0, #0
   15514:	strb	r0, [fp, #-60]	; 0xffffffc4
   15518:	b	15b48 <__assert_fail@plt+0x4a70>
   1551c:	movw	r0, #1
   15520:	strb	r0, [fp, #-67]	; 0xffffffbd
   15524:	b	15b48 <__assert_fail@plt+0x4a70>
   15528:	ldrb	r0, [fp, #-58]	; 0xffffffc6
   1552c:	tst	r0, #1
   15530:	beq	15570 <__assert_fail@plt+0x4498>
   15534:	mov	r0, #1
   15538:	str	r0, [fp, #-72]	; 0xffffffb8
   1553c:	bl	10fb8 <__ctype_b_loc@plt>
   15540:	ldr	r0, [r0]
   15544:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   15548:	mov	r2, r1
   1554c:	add	r0, r0, r1, lsl #1
   15550:	ldrh	r0, [r0]
   15554:	and	r0, r0, #16384	; 0x4000
   15558:	cmp	r0, #0
   1555c:	movw	r0, #0
   15560:	movne	r0, #1
   15564:	and	r0, r0, #1
   15568:	strb	r0, [fp, #-73]	; 0xffffffb7
   1556c:	b	157fc <__assert_fail@plt+0x4724>
   15570:	sub	r0, fp, #84	; 0x54
   15574:	movw	r1, #0
   15578:	and	r1, r1, #255	; 0xff
   1557c:	movw	r2, #8
   15580:	bl	11024 <memset@plt>
   15584:	movw	r0, #0
   15588:	str	r0, [fp, #-72]	; 0xffffffb8
   1558c:	movw	r0, #1
   15590:	strb	r0, [fp, #-73]	; 0xffffffb7
   15594:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15598:	cmn	r0, #1
   1559c:	bne	155ac <__assert_fail@plt+0x44d4>
   155a0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   155a4:	bl	10fdc <strlen@plt>
   155a8:	str	r0, [fp, #-36]	; 0xffffffdc
   155ac:	b	155b0 <__assert_fail@plt+0x44d8>
   155b0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   155b4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   155b8:	ldr	r2, [fp, #-72]	; 0xffffffb8
   155bc:	add	r1, r1, r2
   155c0:	add	r1, r0, r1
   155c4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   155c8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   155cc:	ldr	r3, [fp, #-72]	; 0xffffffb8
   155d0:	add	r2, r2, r3
   155d4:	sub	r2, r0, r2
   155d8:	add	r0, sp, #88	; 0x58
   155dc:	sub	r3, fp, #84	; 0x54
   155e0:	bl	1cce8 <__assert_fail@plt+0xbc10>
   155e4:	str	r0, [sp, #84]	; 0x54
   155e8:	ldr	r0, [sp, #84]	; 0x54
   155ec:	cmp	r0, #0
   155f0:	bne	155f8 <__assert_fail@plt+0x4520>
   155f4:	b	157f8 <__assert_fail@plt+0x4720>
   155f8:	ldr	r0, [sp, #84]	; 0x54
   155fc:	cmn	r0, #1
   15600:	bne	15610 <__assert_fail@plt+0x4538>
   15604:	movw	r0, #0
   15608:	strb	r0, [fp, #-73]	; 0xffffffb7
   1560c:	b	157f8 <__assert_fail@plt+0x4720>
   15610:	ldr	r0, [sp, #84]	; 0x54
   15614:	cmn	r0, #2
   15618:	bne	1568c <__assert_fail@plt+0x45b4>
   1561c:	movw	r0, #0
   15620:	strb	r0, [fp, #-73]	; 0xffffffb7
   15624:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15628:	ldr	r1, [fp, #-72]	; 0xffffffb8
   1562c:	add	r0, r0, r1
   15630:	ldr	r1, [fp, #-36]	; 0xffffffdc
   15634:	cmp	r0, r1
   15638:	movw	r0, #0
   1563c:	str	r0, [sp, #24]
   15640:	bcs	1566c <__assert_fail@plt+0x4594>
   15644:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15648:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1564c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   15650:	add	r1, r1, r2
   15654:	add	r0, r0, r1
   15658:	ldrb	r0, [r0]
   1565c:	cmp	r0, #0
   15660:	movw	r0, #0
   15664:	movne	r0, #1
   15668:	str	r0, [sp, #24]
   1566c:	ldr	r0, [sp, #24]
   15670:	tst	r0, #1
   15674:	beq	15688 <__assert_fail@plt+0x45b0>
   15678:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1567c:	add	r0, r0, #1
   15680:	str	r0, [fp, #-72]	; 0xffffffb8
   15684:	b	15624 <__assert_fail@plt+0x454c>
   15688:	b	157f8 <__assert_fail@plt+0x4720>
   1568c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15690:	tst	r0, #1
   15694:	beq	157a0 <__assert_fail@plt+0x46c8>
   15698:	ldr	r0, [fp, #8]
   1569c:	cmp	r0, #2
   156a0:	bne	157a0 <__assert_fail@plt+0x46c8>
   156a4:	movw	r0, #1
   156a8:	str	r0, [sp, #80]	; 0x50
   156ac:	ldr	r0, [sp, #80]	; 0x50
   156b0:	ldr	r1, [sp, #84]	; 0x54
   156b4:	cmp	r0, r1
   156b8:	bcs	1579c <__assert_fail@plt+0x46c4>
   156bc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   156c0:	ldr	r1, [fp, #-40]	; 0xffffffd8
   156c4:	ldr	r2, [fp, #-72]	; 0xffffffb8
   156c8:	add	r1, r1, r2
   156cc:	ldr	r2, [sp, #80]	; 0x50
   156d0:	add	r1, r1, r2
   156d4:	ldrb	r0, [r0, r1]
   156d8:	sub	r0, r0, #91	; 0x5b
   156dc:	cmp	r0, #33	; 0x21
   156e0:	str	r0, [sp, #20]
   156e4:	bhi	15784 <__assert_fail@plt+0x46ac>
   156e8:	add	r0, pc, #8
   156ec:	ldr	r1, [sp, #20]
   156f0:	ldr	r0, [r0, r1, lsl #2]
   156f4:	mov	pc, r0
   156f8:	andeq	r5, r1, r0, lsl #15
   156fc:	andeq	r5, r1, r0, lsl #15
   15700:	andeq	r5, r1, r4, lsl #15
   15704:	andeq	r5, r1, r0, lsl #15
   15708:	andeq	r5, r1, r4, lsl #15
   1570c:	andeq	r5, r1, r0, lsl #15
   15710:	andeq	r5, r1, r4, lsl #15
   15714:	andeq	r5, r1, r4, lsl #15
   15718:	andeq	r5, r1, r4, lsl #15
   1571c:	andeq	r5, r1, r4, lsl #15
   15720:	andeq	r5, r1, r4, lsl #15
   15724:	andeq	r5, r1, r4, lsl #15
   15728:	andeq	r5, r1, r4, lsl #15
   1572c:	andeq	r5, r1, r4, lsl #15
   15730:	andeq	r5, r1, r4, lsl #15
   15734:	andeq	r5, r1, r4, lsl #15
   15738:	andeq	r5, r1, r4, lsl #15
   1573c:	andeq	r5, r1, r4, lsl #15
   15740:	andeq	r5, r1, r4, lsl #15
   15744:	andeq	r5, r1, r4, lsl #15
   15748:	andeq	r5, r1, r4, lsl #15
   1574c:	andeq	r5, r1, r4, lsl #15
   15750:	andeq	r5, r1, r4, lsl #15
   15754:	andeq	r5, r1, r4, lsl #15
   15758:	andeq	r5, r1, r4, lsl #15
   1575c:	andeq	r5, r1, r4, lsl #15
   15760:	andeq	r5, r1, r4, lsl #15
   15764:	andeq	r5, r1, r4, lsl #15
   15768:	andeq	r5, r1, r4, lsl #15
   1576c:	andeq	r5, r1, r4, lsl #15
   15770:	andeq	r5, r1, r4, lsl #15
   15774:	andeq	r5, r1, r4, lsl #15
   15778:	andeq	r5, r1, r4, lsl #15
   1577c:	andeq	r5, r1, r0, lsl #15
   15780:	b	15f3c <__assert_fail@plt+0x4e64>
   15784:	b	15788 <__assert_fail@plt+0x46b0>
   15788:	b	1578c <__assert_fail@plt+0x46b4>
   1578c:	ldr	r0, [sp, #80]	; 0x50
   15790:	add	r0, r0, #1
   15794:	str	r0, [sp, #80]	; 0x50
   15798:	b	156ac <__assert_fail@plt+0x45d4>
   1579c:	b	157a0 <__assert_fail@plt+0x46c8>
   157a0:	ldr	r0, [sp, #88]	; 0x58
   157a4:	bl	10f10 <iswprint@plt>
   157a8:	cmp	r0, #0
   157ac:	bne	157b8 <__assert_fail@plt+0x46e0>
   157b0:	movw	r0, #0
   157b4:	strb	r0, [fp, #-73]	; 0xffffffb7
   157b8:	ldr	r0, [sp, #84]	; 0x54
   157bc:	ldr	r1, [fp, #-72]	; 0xffffffb8
   157c0:	add	r0, r1, r0
   157c4:	str	r0, [fp, #-72]	; 0xffffffb8
   157c8:	b	157cc <__assert_fail@plt+0x46f4>
   157cc:	b	157d0 <__assert_fail@plt+0x46f8>
   157d0:	b	157d4 <__assert_fail@plt+0x46fc>
   157d4:	sub	r0, fp, #84	; 0x54
   157d8:	bl	10ec8 <mbsinit@plt>
   157dc:	cmp	r0, #0
   157e0:	movw	r0, #0
   157e4:	movne	r0, #1
   157e8:	mvn	r1, #0
   157ec:	eor	r0, r0, r1
   157f0:	tst	r0, #1
   157f4:	bne	155b0 <__assert_fail@plt+0x44d8>
   157f8:	b	157fc <__assert_fail@plt+0x4724>
   157fc:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   15800:	and	r0, r0, #1
   15804:	strb	r0, [fp, #-67]	; 0xffffffbd
   15808:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1580c:	movw	r1, #1
   15810:	cmp	r1, r0
   15814:	bcc	15830 <__assert_fail@plt+0x4758>
   15818:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   1581c:	tst	r0, #1
   15820:	beq	15b44 <__assert_fail@plt+0x4a6c>
   15824:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   15828:	tst	r0, #1
   1582c:	bne	15b44 <__assert_fail@plt+0x4a6c>
   15830:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15834:	ldr	r1, [fp, #-72]	; 0xffffffb8
   15838:	add	r0, r0, r1
   1583c:	str	r0, [sp, #76]	; 0x4c
   15840:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   15844:	tst	r0, #1
   15848:	beq	159f8 <__assert_fail@plt+0x4920>
   1584c:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   15850:	tst	r0, #1
   15854:	bne	159f8 <__assert_fail@plt+0x4920>
   15858:	b	1585c <__assert_fail@plt+0x4784>
   1585c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15860:	tst	r0, #1
   15864:	beq	1586c <__assert_fail@plt+0x4794>
   15868:	b	15f3c <__assert_fail@plt+0x4e64>
   1586c:	movw	r0, #1
   15870:	strb	r0, [fp, #-66]	; 0xffffffbe
   15874:	ldr	r0, [fp, #8]
   15878:	cmp	r0, #2
   1587c:	bne	15930 <__assert_fail@plt+0x4858>
   15880:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   15884:	tst	r0, #1
   15888:	bne	15930 <__assert_fail@plt+0x4858>
   1588c:	b	15890 <__assert_fail@plt+0x47b8>
   15890:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15894:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15898:	cmp	r0, r1
   1589c:	bcs	158b4 <__assert_fail@plt+0x47dc>
   158a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   158a4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   158a8:	add	r0, r0, r1
   158ac:	movw	r1, #39	; 0x27
   158b0:	strb	r1, [r0]
   158b4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   158b8:	add	r0, r0, #1
   158bc:	str	r0, [fp, #-44]	; 0xffffffd4
   158c0:	b	158c4 <__assert_fail@plt+0x47ec>
   158c4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   158c8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   158cc:	cmp	r0, r1
   158d0:	bcs	158e8 <__assert_fail@plt+0x4810>
   158d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   158d8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   158dc:	add	r0, r0, r1
   158e0:	movw	r1, #36	; 0x24
   158e4:	strb	r1, [r0]
   158e8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   158ec:	add	r0, r0, #1
   158f0:	str	r0, [fp, #-44]	; 0xffffffd4
   158f4:	b	158f8 <__assert_fail@plt+0x4820>
   158f8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   158fc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15900:	cmp	r0, r1
   15904:	bcs	1591c <__assert_fail@plt+0x4844>
   15908:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1590c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15910:	add	r0, r0, r1
   15914:	movw	r1, #39	; 0x27
   15918:	strb	r1, [r0]
   1591c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15920:	add	r0, r0, #1
   15924:	str	r0, [fp, #-44]	; 0xffffffd4
   15928:	movw	r0, #1
   1592c:	strb	r0, [fp, #-60]	; 0xffffffc4
   15930:	b	15934 <__assert_fail@plt+0x485c>
   15934:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15938:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1593c:	cmp	r0, r1
   15940:	bcs	15958 <__assert_fail@plt+0x4880>
   15944:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15948:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1594c:	add	r0, r0, r1
   15950:	movw	r1, #92	; 0x5c
   15954:	strb	r1, [r0]
   15958:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1595c:	add	r0, r0, #1
   15960:	str	r0, [fp, #-44]	; 0xffffffd4
   15964:	b	15968 <__assert_fail@plt+0x4890>
   15968:	b	1596c <__assert_fail@plt+0x4894>
   1596c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15970:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15974:	cmp	r0, r1
   15978:	bcs	15998 <__assert_fail@plt+0x48c0>
   1597c:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   15980:	asr	r0, r0, #6
   15984:	add	r0, r0, #48	; 0x30
   15988:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1598c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   15990:	add	r1, r1, r2
   15994:	strb	r0, [r1]
   15998:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1599c:	add	r0, r0, #1
   159a0:	str	r0, [fp, #-44]	; 0xffffffd4
   159a4:	b	159a8 <__assert_fail@plt+0x48d0>
   159a8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   159ac:	ldr	r1, [fp, #-28]	; 0xffffffe4
   159b0:	cmp	r0, r1
   159b4:	bcs	159d8 <__assert_fail@plt+0x4900>
   159b8:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   159bc:	asr	r0, r0, #3
   159c0:	and	r0, r0, #7
   159c4:	add	r0, r0, #48	; 0x30
   159c8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   159cc:	ldr	r2, [fp, #-44]	; 0xffffffd4
   159d0:	add	r1, r1, r2
   159d4:	strb	r0, [r1]
   159d8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   159dc:	add	r0, r0, #1
   159e0:	str	r0, [fp, #-44]	; 0xffffffd4
   159e4:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   159e8:	and	r0, r0, #7
   159ec:	add	r0, r0, #48	; 0x30
   159f0:	strb	r0, [fp, #-63]	; 0xffffffc1
   159f4:	b	15a44 <__assert_fail@plt+0x496c>
   159f8:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   159fc:	tst	r0, #1
   15a00:	beq	15a40 <__assert_fail@plt+0x4968>
   15a04:	b	15a08 <__assert_fail@plt+0x4930>
   15a08:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15a0c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15a10:	cmp	r0, r1
   15a14:	bcs	15a2c <__assert_fail@plt+0x4954>
   15a18:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15a1c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15a20:	add	r0, r0, r1
   15a24:	movw	r1, #92	; 0x5c
   15a28:	strb	r1, [r0]
   15a2c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15a30:	add	r0, r0, #1
   15a34:	str	r0, [fp, #-44]	; 0xffffffd4
   15a38:	movw	r0, #0
   15a3c:	strb	r0, [fp, #-65]	; 0xffffffbf
   15a40:	b	15a44 <__assert_fail@plt+0x496c>
   15a44:	ldr	r0, [sp, #76]	; 0x4c
   15a48:	ldr	r1, [fp, #-40]	; 0xffffffd8
   15a4c:	add	r1, r1, #1
   15a50:	cmp	r0, r1
   15a54:	bhi	15a5c <__assert_fail@plt+0x4984>
   15a58:	b	15b40 <__assert_fail@plt+0x4a68>
   15a5c:	b	15a60 <__assert_fail@plt+0x4988>
   15a60:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   15a64:	tst	r0, #1
   15a68:	beq	15ae8 <__assert_fail@plt+0x4a10>
   15a6c:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   15a70:	tst	r0, #1
   15a74:	bne	15ae8 <__assert_fail@plt+0x4a10>
   15a78:	b	15a7c <__assert_fail@plt+0x49a4>
   15a7c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15a80:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15a84:	cmp	r0, r1
   15a88:	bcs	15aa0 <__assert_fail@plt+0x49c8>
   15a8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15a90:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15a94:	add	r0, r0, r1
   15a98:	movw	r1, #39	; 0x27
   15a9c:	strb	r1, [r0]
   15aa0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15aa4:	add	r0, r0, #1
   15aa8:	str	r0, [fp, #-44]	; 0xffffffd4
   15aac:	b	15ab0 <__assert_fail@plt+0x49d8>
   15ab0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15ab4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15ab8:	cmp	r0, r1
   15abc:	bcs	15ad4 <__assert_fail@plt+0x49fc>
   15ac0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15ac4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15ac8:	add	r0, r0, r1
   15acc:	movw	r1, #39	; 0x27
   15ad0:	strb	r1, [r0]
   15ad4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15ad8:	add	r0, r0, #1
   15adc:	str	r0, [fp, #-44]	; 0xffffffd4
   15ae0:	movw	r0, #0
   15ae4:	strb	r0, [fp, #-60]	; 0xffffffc4
   15ae8:	b	15aec <__assert_fail@plt+0x4a14>
   15aec:	b	15af0 <__assert_fail@plt+0x4a18>
   15af0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15af4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15af8:	cmp	r0, r1
   15afc:	bcs	15b14 <__assert_fail@plt+0x4a3c>
   15b00:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   15b04:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15b08:	ldr	r2, [fp, #-44]	; 0xffffffd4
   15b0c:	add	r1, r1, r2
   15b10:	strb	r0, [r1]
   15b14:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15b18:	add	r0, r0, #1
   15b1c:	str	r0, [fp, #-44]	; 0xffffffd4
   15b20:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15b24:	ldr	r1, [fp, #-40]	; 0xffffffd8
   15b28:	add	r1, r1, #1
   15b2c:	str	r1, [fp, #-40]	; 0xffffffd8
   15b30:	add	r0, r0, r1
   15b34:	ldrb	r0, [r0]
   15b38:	strb	r0, [fp, #-63]	; 0xffffffc1
   15b3c:	b	15840 <__assert_fail@plt+0x4768>
   15b40:	b	15cd0 <__assert_fail@plt+0x4bf8>
   15b44:	b	15b48 <__assert_fail@plt+0x4a70>
   15b48:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   15b4c:	tst	r0, #1
   15b50:	beq	15b60 <__assert_fail@plt+0x4a88>
   15b54:	ldr	r0, [fp, #8]
   15b58:	cmp	r0, #2
   15b5c:	bne	15b6c <__assert_fail@plt+0x4a94>
   15b60:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15b64:	tst	r0, #1
   15b68:	beq	15ba8 <__assert_fail@plt+0x4ad0>
   15b6c:	ldr	r0, [fp, #16]
   15b70:	movw	r1, #0
   15b74:	cmp	r0, r1
   15b78:	beq	15ba8 <__assert_fail@plt+0x4ad0>
   15b7c:	ldr	r0, [fp, #16]
   15b80:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   15b84:	lsr	r1, r1, #5
   15b88:	add	r0, r0, r1, lsl #2
   15b8c:	ldr	r0, [r0]
   15b90:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   15b94:	and	r1, r1, #31
   15b98:	lsr	r0, r0, r1
   15b9c:	and	r0, r0, #1
   15ba0:	cmp	r0, #0
   15ba4:	bne	15bb8 <__assert_fail@plt+0x4ae0>
   15ba8:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   15bac:	tst	r0, #1
   15bb0:	bne	15bb8 <__assert_fail@plt+0x4ae0>
   15bb4:	b	15cd0 <__assert_fail@plt+0x4bf8>
   15bb8:	b	15bbc <__assert_fail@plt+0x4ae4>
   15bbc:	b	15bc0 <__assert_fail@plt+0x4ae8>
   15bc0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15bc4:	tst	r0, #1
   15bc8:	beq	15bd0 <__assert_fail@plt+0x4af8>
   15bcc:	b	15f3c <__assert_fail@plt+0x4e64>
   15bd0:	movw	r0, #1
   15bd4:	strb	r0, [fp, #-66]	; 0xffffffbe
   15bd8:	ldr	r0, [fp, #8]
   15bdc:	cmp	r0, #2
   15be0:	bne	15c94 <__assert_fail@plt+0x4bbc>
   15be4:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   15be8:	tst	r0, #1
   15bec:	bne	15c94 <__assert_fail@plt+0x4bbc>
   15bf0:	b	15bf4 <__assert_fail@plt+0x4b1c>
   15bf4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15bf8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15bfc:	cmp	r0, r1
   15c00:	bcs	15c18 <__assert_fail@plt+0x4b40>
   15c04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15c08:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15c0c:	add	r0, r0, r1
   15c10:	movw	r1, #39	; 0x27
   15c14:	strb	r1, [r0]
   15c18:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15c1c:	add	r0, r0, #1
   15c20:	str	r0, [fp, #-44]	; 0xffffffd4
   15c24:	b	15c28 <__assert_fail@plt+0x4b50>
   15c28:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15c2c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15c30:	cmp	r0, r1
   15c34:	bcs	15c4c <__assert_fail@plt+0x4b74>
   15c38:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15c3c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15c40:	add	r0, r0, r1
   15c44:	movw	r1, #36	; 0x24
   15c48:	strb	r1, [r0]
   15c4c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15c50:	add	r0, r0, #1
   15c54:	str	r0, [fp, #-44]	; 0xffffffd4
   15c58:	b	15c5c <__assert_fail@plt+0x4b84>
   15c5c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15c60:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15c64:	cmp	r0, r1
   15c68:	bcs	15c80 <__assert_fail@plt+0x4ba8>
   15c6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15c70:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15c74:	add	r0, r0, r1
   15c78:	movw	r1, #39	; 0x27
   15c7c:	strb	r1, [r0]
   15c80:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15c84:	add	r0, r0, #1
   15c88:	str	r0, [fp, #-44]	; 0xffffffd4
   15c8c:	movw	r0, #1
   15c90:	strb	r0, [fp, #-60]	; 0xffffffc4
   15c94:	b	15c98 <__assert_fail@plt+0x4bc0>
   15c98:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15c9c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15ca0:	cmp	r0, r1
   15ca4:	bcs	15cbc <__assert_fail@plt+0x4be4>
   15ca8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15cac:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15cb0:	add	r0, r0, r1
   15cb4:	movw	r1, #92	; 0x5c
   15cb8:	strb	r1, [r0]
   15cbc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15cc0:	add	r0, r0, #1
   15cc4:	str	r0, [fp, #-44]	; 0xffffffd4
   15cc8:	b	15ccc <__assert_fail@plt+0x4bf4>
   15ccc:	b	15cd0 <__assert_fail@plt+0x4bf8>
   15cd0:	b	15cd4 <__assert_fail@plt+0x4bfc>
   15cd4:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   15cd8:	tst	r0, #1
   15cdc:	beq	15d5c <__assert_fail@plt+0x4c84>
   15ce0:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   15ce4:	tst	r0, #1
   15ce8:	bne	15d5c <__assert_fail@plt+0x4c84>
   15cec:	b	15cf0 <__assert_fail@plt+0x4c18>
   15cf0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15cf4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15cf8:	cmp	r0, r1
   15cfc:	bcs	15d14 <__assert_fail@plt+0x4c3c>
   15d00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15d04:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15d08:	add	r0, r0, r1
   15d0c:	movw	r1, #39	; 0x27
   15d10:	strb	r1, [r0]
   15d14:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15d18:	add	r0, r0, #1
   15d1c:	str	r0, [fp, #-44]	; 0xffffffd4
   15d20:	b	15d24 <__assert_fail@plt+0x4c4c>
   15d24:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15d28:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15d2c:	cmp	r0, r1
   15d30:	bcs	15d48 <__assert_fail@plt+0x4c70>
   15d34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15d38:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15d3c:	add	r0, r0, r1
   15d40:	movw	r1, #39	; 0x27
   15d44:	strb	r1, [r0]
   15d48:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15d4c:	add	r0, r0, #1
   15d50:	str	r0, [fp, #-44]	; 0xffffffd4
   15d54:	movw	r0, #0
   15d58:	strb	r0, [fp, #-60]	; 0xffffffc4
   15d5c:	b	15d60 <__assert_fail@plt+0x4c88>
   15d60:	b	15d64 <__assert_fail@plt+0x4c8c>
   15d64:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15d68:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15d6c:	cmp	r0, r1
   15d70:	bcs	15d88 <__assert_fail@plt+0x4cb0>
   15d74:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   15d78:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15d7c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   15d80:	add	r1, r1, r2
   15d84:	strb	r0, [r1]
   15d88:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15d8c:	add	r0, r0, #1
   15d90:	str	r0, [fp, #-44]	; 0xffffffd4
   15d94:	ldrb	r0, [fp, #-67]	; 0xffffffbd
   15d98:	tst	r0, #1
   15d9c:	bne	15da8 <__assert_fail@plt+0x4cd0>
   15da0:	movw	r0, #0
   15da4:	strb	r0, [fp, #-62]	; 0xffffffc2
   15da8:	b	15dac <__assert_fail@plt+0x4cd4>
   15dac:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15db0:	add	r0, r0, #1
   15db4:	str	r0, [fp, #-40]	; 0xffffffd8
   15db8:	b	14b64 <__assert_fail@plt+0x3a8c>
   15dbc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15dc0:	cmp	r0, #0
   15dc4:	bne	15de4 <__assert_fail@plt+0x4d0c>
   15dc8:	ldr	r0, [fp, #8]
   15dcc:	cmp	r0, #2
   15dd0:	bne	15de4 <__assert_fail@plt+0x4d0c>
   15dd4:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15dd8:	tst	r0, #1
   15ddc:	beq	15de4 <__assert_fail@plt+0x4d0c>
   15de0:	b	15f3c <__assert_fail@plt+0x4e64>
   15de4:	ldr	r0, [fp, #8]
   15de8:	cmp	r0, #2
   15dec:	bne	15e8c <__assert_fail@plt+0x4db4>
   15df0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15df4:	tst	r0, #1
   15df8:	bne	15e8c <__assert_fail@plt+0x4db4>
   15dfc:	ldrb	r0, [fp, #-61]	; 0xffffffc3
   15e00:	tst	r0, #1
   15e04:	beq	15e8c <__assert_fail@plt+0x4db4>
   15e08:	ldrb	r0, [fp, #-62]	; 0xffffffc2
   15e0c:	tst	r0, #1
   15e10:	beq	15e58 <__assert_fail@plt+0x4d80>
   15e14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15e18:	ldr	r1, [fp, #-48]	; 0xffffffd0
   15e1c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   15e20:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15e24:	ldr	ip, [fp, #12]
   15e28:	ldr	lr, [fp, #16]
   15e2c:	ldr	r4, [fp, #20]
   15e30:	ldr	r5, [fp, #24]
   15e34:	movw	r6, #5
   15e38:	str	r6, [sp]
   15e3c:	str	ip, [sp, #4]
   15e40:	str	lr, [sp, #8]
   15e44:	str	r4, [sp, #12]
   15e48:	str	r5, [sp, #16]
   15e4c:	bl	1487c <__assert_fail@plt+0x37a4>
   15e50:	str	r0, [fp, #-20]	; 0xffffffec
   15e54:	b	15fa4 <__assert_fail@plt+0x4ecc>
   15e58:	ldr	r0, [fp, #-28]	; 0xffffffe4
   15e5c:	cmp	r0, #0
   15e60:	bne	15e84 <__assert_fail@plt+0x4dac>
   15e64:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15e68:	cmp	r0, #0
   15e6c:	beq	15e84 <__assert_fail@plt+0x4dac>
   15e70:	ldr	r0, [fp, #-48]	; 0xffffffd0
   15e74:	str	r0, [fp, #-28]	; 0xffffffe4
   15e78:	movw	r0, #0
   15e7c:	str	r0, [fp, #-44]	; 0xffffffd4
   15e80:	b	14924 <__assert_fail@plt+0x384c>
   15e84:	b	15e88 <__assert_fail@plt+0x4db0>
   15e88:	b	15e8c <__assert_fail@plt+0x4db4>
   15e8c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   15e90:	movw	r1, #0
   15e94:	cmp	r0, r1
   15e98:	beq	15f0c <__assert_fail@plt+0x4e34>
   15e9c:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   15ea0:	tst	r0, #1
   15ea4:	bne	15f0c <__assert_fail@plt+0x4e34>
   15ea8:	b	15eac <__assert_fail@plt+0x4dd4>
   15eac:	ldr	r0, [fp, #-52]	; 0xffffffcc
   15eb0:	ldrsb	r0, [r0]
   15eb4:	cmp	r0, #0
   15eb8:	beq	15f08 <__assert_fail@plt+0x4e30>
   15ebc:	b	15ec0 <__assert_fail@plt+0x4de8>
   15ec0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15ec4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15ec8:	cmp	r0, r1
   15ecc:	bcs	15ee8 <__assert_fail@plt+0x4e10>
   15ed0:	ldr	r0, [fp, #-52]	; 0xffffffcc
   15ed4:	ldrb	r0, [r0]
   15ed8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15edc:	ldr	r2, [fp, #-44]	; 0xffffffd4
   15ee0:	add	r1, r1, r2
   15ee4:	strb	r0, [r1]
   15ee8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15eec:	add	r0, r0, #1
   15ef0:	str	r0, [fp, #-44]	; 0xffffffd4
   15ef4:	b	15ef8 <__assert_fail@plt+0x4e20>
   15ef8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   15efc:	add	r0, r0, #1
   15f00:	str	r0, [fp, #-52]	; 0xffffffcc
   15f04:	b	15eac <__assert_fail@plt+0x4dd4>
   15f08:	b	15f0c <__assert_fail@plt+0x4e34>
   15f0c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15f10:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15f14:	cmp	r0, r1
   15f18:	bcs	15f30 <__assert_fail@plt+0x4e58>
   15f1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15f20:	ldr	r1, [fp, #-44]	; 0xffffffd4
   15f24:	add	r0, r0, r1
   15f28:	movw	r1, #0
   15f2c:	strb	r1, [r0]
   15f30:	ldr	r0, [fp, #-44]	; 0xffffffd4
   15f34:	str	r0, [fp, #-20]	; 0xffffffec
   15f38:	b	15fa4 <__assert_fail@plt+0x4ecc>
   15f3c:	ldr	r0, [fp, #8]
   15f40:	cmp	r0, #2
   15f44:	bne	15f5c <__assert_fail@plt+0x4e84>
   15f48:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   15f4c:	tst	r0, #1
   15f50:	beq	15f5c <__assert_fail@plt+0x4e84>
   15f54:	movw	r0, #4
   15f58:	str	r0, [fp, #8]
   15f5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15f60:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15f64:	ldr	r2, [fp, #-32]	; 0xffffffe0
   15f68:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15f6c:	ldr	ip, [fp, #8]
   15f70:	ldr	lr, [fp, #12]
   15f74:	mvn	r4, #2
   15f78:	and	lr, lr, r4
   15f7c:	ldr	r4, [fp, #20]
   15f80:	ldr	r5, [fp, #24]
   15f84:	str	ip, [sp]
   15f88:	str	lr, [sp, #4]
   15f8c:	movw	ip, #0
   15f90:	str	ip, [sp, #8]
   15f94:	str	r4, [sp, #12]
   15f98:	str	r5, [sp, #16]
   15f9c:	bl	1487c <__assert_fail@plt+0x37a4>
   15fa0:	str	r0, [fp, #-20]	; 0xffffffec
   15fa4:	ldr	r0, [fp, #-20]	; 0xffffffec
   15fa8:	sub	sp, fp, #16
   15fac:	pop	{r4, r5, r6, sl, fp, pc}
   15fb0:	push	{fp, lr}
   15fb4:	mov	fp, sp
   15fb8:	sub	sp, sp, #16
   15fbc:	str	r0, [fp, #-4]
   15fc0:	str	r1, [sp, #8]
   15fc4:	str	r2, [sp, #4]
   15fc8:	ldr	r0, [fp, #-4]
   15fcc:	ldr	r1, [sp, #8]
   15fd0:	ldr	r3, [sp, #4]
   15fd4:	movw	r2, #0
   15fd8:	bl	15fe4 <__assert_fail@plt+0x4f0c>
   15fdc:	mov	sp, fp
   15fe0:	pop	{fp, pc}
   15fe4:	push	{r4, r5, r6, sl, fp, lr}
   15fe8:	add	fp, sp, #16
   15fec:	sub	sp, sp, #80	; 0x50
   15ff0:	str	r0, [fp, #-20]	; 0xffffffec
   15ff4:	str	r1, [fp, #-24]	; 0xffffffe8
   15ff8:	str	r2, [fp, #-28]	; 0xffffffe4
   15ffc:	str	r3, [fp, #-32]	; 0xffffffe0
   16000:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16004:	movw	r1, #0
   16008:	cmp	r0, r1
   1600c:	beq	1601c <__assert_fail@plt+0x4f44>
   16010:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16014:	str	r0, [sp, #40]	; 0x28
   16018:	b	1602c <__assert_fail@plt+0x4f54>
   1601c:	movw	r0, #368	; 0x170
   16020:	movt	r0, #3
   16024:	str	r0, [sp, #40]	; 0x28
   16028:	b	1602c <__assert_fail@plt+0x4f54>
   1602c:	ldr	r0, [sp, #40]	; 0x28
   16030:	str	r0, [fp, #-36]	; 0xffffffdc
   16034:	bl	1100c <__errno_location@plt>
   16038:	ldr	r0, [r0]
   1603c:	str	r0, [fp, #-40]	; 0xffffffd8
   16040:	ldr	r0, [fp, #-36]	; 0xffffffdc
   16044:	ldr	r0, [r0, #4]
   16048:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1604c:	movw	r2, #0
   16050:	cmp	r1, r2
   16054:	movw	r1, #0
   16058:	movne	r1, #1
   1605c:	tst	r1, #1
   16060:	mov	r1, r2
   16064:	moveq	r1, #1
   16068:	orr	r0, r0, r1
   1606c:	str	r0, [fp, #-44]	; 0xffffffd4
   16070:	ldr	r0, [fp, #-20]	; 0xffffffec
   16074:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16078:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1607c:	ldr	r1, [r1]
   16080:	ldr	ip, [fp, #-44]	; 0xffffffd4
   16084:	ldr	lr, [fp, #-36]	; 0xffffffdc
   16088:	add	lr, lr, #8
   1608c:	ldr	r4, [fp, #-36]	; 0xffffffdc
   16090:	ldr	r4, [r4, #40]	; 0x28
   16094:	ldr	r5, [fp, #-36]	; 0xffffffdc
   16098:	ldr	r5, [r5, #44]	; 0x2c
   1609c:	str	r0, [sp, #36]	; 0x24
   160a0:	mov	r0, r2
   160a4:	str	r1, [sp, #32]
   160a8:	mov	r1, r2
   160ac:	ldr	r2, [sp, #36]	; 0x24
   160b0:	ldr	r6, [sp, #32]
   160b4:	str	r6, [sp]
   160b8:	str	ip, [sp, #4]
   160bc:	str	lr, [sp, #8]
   160c0:	str	r4, [sp, #12]
   160c4:	str	r5, [sp, #16]
   160c8:	bl	1487c <__assert_fail@plt+0x37a4>
   160cc:	add	r0, r0, #1
   160d0:	str	r0, [sp, #48]	; 0x30
   160d4:	ldr	r0, [sp, #48]	; 0x30
   160d8:	bl	17578 <__assert_fail@plt+0x64a0>
   160dc:	str	r0, [sp, #44]	; 0x2c
   160e0:	ldr	r0, [sp, #44]	; 0x2c
   160e4:	ldr	r1, [sp, #48]	; 0x30
   160e8:	ldr	r2, [fp, #-20]	; 0xffffffec
   160ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   160f0:	ldr	ip, [fp, #-36]	; 0xffffffdc
   160f4:	ldr	ip, [ip]
   160f8:	ldr	lr, [fp, #-44]	; 0xffffffd4
   160fc:	ldr	r4, [fp, #-36]	; 0xffffffdc
   16100:	add	r4, r4, #8
   16104:	ldr	r5, [fp, #-36]	; 0xffffffdc
   16108:	ldr	r5, [r5, #40]	; 0x28
   1610c:	ldr	r6, [fp, #-36]	; 0xffffffdc
   16110:	ldr	r6, [r6, #44]	; 0x2c
   16114:	str	ip, [sp]
   16118:	str	lr, [sp, #4]
   1611c:	str	r4, [sp, #8]
   16120:	str	r5, [sp, #12]
   16124:	str	r6, [sp, #16]
   16128:	bl	1487c <__assert_fail@plt+0x37a4>
   1612c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   16130:	str	r0, [sp, #28]
   16134:	str	r1, [sp, #24]
   16138:	bl	1100c <__errno_location@plt>
   1613c:	ldr	r1, [sp, #24]
   16140:	str	r1, [r0]
   16144:	ldr	r0, [fp, #-28]	; 0xffffffe4
   16148:	movw	r2, #0
   1614c:	cmp	r0, r2
   16150:	beq	16164 <__assert_fail@plt+0x508c>
   16154:	ldr	r0, [sp, #48]	; 0x30
   16158:	sub	r0, r0, #1
   1615c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16160:	str	r0, [r1]
   16164:	ldr	r0, [sp, #44]	; 0x2c
   16168:	sub	sp, fp, #16
   1616c:	pop	{r4, r5, r6, sl, fp, pc}
   16170:	push	{fp, lr}
   16174:	mov	fp, sp
   16178:	sub	sp, sp, #8
   1617c:	movw	r0, #256	; 0x100
   16180:	movt	r0, #3
   16184:	ldr	r0, [r0]
   16188:	str	r0, [sp, #4]
   1618c:	movw	r0, #1
   16190:	str	r0, [sp]
   16194:	ldr	r0, [sp]
   16198:	movw	r1, #260	; 0x104
   1619c:	movt	r1, #3
   161a0:	ldr	r1, [r1]
   161a4:	cmp	r0, r1
   161a8:	bge	161d0 <__assert_fail@plt+0x50f8>
   161ac:	ldr	r0, [sp, #4]
   161b0:	ldr	r1, [sp]
   161b4:	add	r0, r0, r1, lsl #3
   161b8:	ldr	r0, [r0, #4]
   161bc:	bl	1409c <__assert_fail@plt+0x2fc4>
   161c0:	ldr	r0, [sp]
   161c4:	add	r0, r0, #1
   161c8:	str	r0, [sp]
   161cc:	b	16194 <__assert_fail@plt+0x50bc>
   161d0:	ldr	r0, [sp, #4]
   161d4:	ldr	r0, [r0, #4]
   161d8:	movw	r1, #416	; 0x1a0
   161dc:	movt	r1, #3
   161e0:	cmp	r0, r1
   161e4:	beq	16210 <__assert_fail@plt+0x5138>
   161e8:	ldr	r0, [sp, #4]
   161ec:	ldr	r0, [r0, #4]
   161f0:	bl	1409c <__assert_fail@plt+0x2fc4>
   161f4:	movw	r0, #256	; 0x100
   161f8:	movw	r1, #264	; 0x108
   161fc:	movt	r1, #3
   16200:	str	r0, [r1]
   16204:	movw	r0, #416	; 0x1a0
   16208:	movt	r0, #3
   1620c:	str	r0, [r1, #4]
   16210:	ldr	r0, [sp, #4]
   16214:	movw	r1, #264	; 0x108
   16218:	movt	r1, #3
   1621c:	cmp	r0, r1
   16220:	beq	16240 <__assert_fail@plt+0x5168>
   16224:	ldr	r0, [sp, #4]
   16228:	bl	1409c <__assert_fail@plt+0x2fc4>
   1622c:	movw	r0, #256	; 0x100
   16230:	movt	r0, #3
   16234:	movw	r1, #264	; 0x108
   16238:	movt	r1, #3
   1623c:	str	r1, [r0]
   16240:	movw	r0, #260	; 0x104
   16244:	movt	r0, #3
   16248:	movw	r1, #1
   1624c:	str	r1, [r0]
   16250:	mov	sp, fp
   16254:	pop	{fp, pc}
   16258:	push	{fp, lr}
   1625c:	mov	fp, sp
   16260:	sub	sp, sp, #8
   16264:	str	r0, [sp, #4]
   16268:	str	r1, [sp]
   1626c:	ldr	r0, [sp, #4]
   16270:	ldr	r1, [sp]
   16274:	mvn	r2, #0
   16278:	movw	r3, #368	; 0x170
   1627c:	movt	r3, #3
   16280:	bl	1628c <__assert_fail@plt+0x51b4>
   16284:	mov	sp, fp
   16288:	pop	{fp, pc}
   1628c:	push	{r4, r5, r6, sl, fp, lr}
   16290:	add	fp, sp, #16
   16294:	sub	sp, sp, #80	; 0x50
   16298:	str	r0, [fp, #-20]	; 0xffffffec
   1629c:	str	r1, [fp, #-24]	; 0xffffffe8
   162a0:	str	r2, [fp, #-28]	; 0xffffffe4
   162a4:	str	r3, [fp, #-32]	; 0xffffffe0
   162a8:	bl	1100c <__errno_location@plt>
   162ac:	ldr	r1, [pc, #672]	; 16554 <__assert_fail@plt+0x547c>
   162b0:	ldr	r0, [r0]
   162b4:	str	r0, [fp, #-36]	; 0xffffffdc
   162b8:	movw	r0, #256	; 0x100
   162bc:	movt	r0, #3
   162c0:	ldr	r0, [r0]
   162c4:	str	r0, [fp, #-40]	; 0xffffffd8
   162c8:	str	r1, [fp, #-44]	; 0xffffffd4
   162cc:	ldr	r0, [fp, #-20]	; 0xffffffec
   162d0:	movw	r1, #0
   162d4:	cmp	r1, r0
   162d8:	bgt	162ec <__assert_fail@plt+0x5214>
   162dc:	ldr	r0, [fp, #-20]	; 0xffffffec
   162e0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   162e4:	cmp	r0, r1
   162e8:	blt	162f0 <__assert_fail@plt+0x5218>
   162ec:	bl	110c0 <abort@plt>
   162f0:	movw	r0, #260	; 0x104
   162f4:	movt	r0, #3
   162f8:	ldr	r0, [r0]
   162fc:	ldr	r1, [fp, #-20]	; 0xffffffec
   16300:	cmp	r0, r1
   16304:	bgt	163fc <__assert_fail@plt+0x5324>
   16308:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1630c:	movw	r1, #264	; 0x108
   16310:	movt	r1, #3
   16314:	cmp	r0, r1
   16318:	movw	r0, #0
   1631c:	moveq	r0, #1
   16320:	and	r0, r0, #1
   16324:	strb	r0, [fp, #-45]	; 0xffffffd3
   16328:	movw	r0, #260	; 0x104
   1632c:	movt	r0, #3
   16330:	ldr	r0, [r0]
   16334:	str	r0, [sp, #44]	; 0x2c
   16338:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   1633c:	tst	r0, #1
   16340:	beq	16350 <__assert_fail@plt+0x5278>
   16344:	movw	r0, #0
   16348:	str	r0, [sp, #24]
   1634c:	b	16358 <__assert_fail@plt+0x5280>
   16350:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16354:	str	r0, [sp, #24]
   16358:	ldr	r0, [sp, #24]
   1635c:	ldr	r1, [fp, #-20]	; 0xffffffec
   16360:	movw	r2, #260	; 0x104
   16364:	movt	r2, #3
   16368:	ldr	r2, [r2]
   1636c:	sub	r1, r1, r2
   16370:	add	r2, r1, #1
   16374:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16378:	add	r1, sp, #44	; 0x2c
   1637c:	movw	ip, #8
   16380:	str	ip, [sp]
   16384:	bl	177b4 <__assert_fail@plt+0x66dc>
   16388:	str	r0, [fp, #-40]	; 0xffffffd8
   1638c:	movw	r1, #256	; 0x100
   16390:	movt	r1, #3
   16394:	str	r0, [r1]
   16398:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   1639c:	tst	r0, #1
   163a0:	beq	163c0 <__assert_fail@plt+0x52e8>
   163a4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   163a8:	movw	r1, #264	; 0x108
   163ac:	movt	r1, #3
   163b0:	ldr	r2, [r1]
   163b4:	str	r2, [r0]
   163b8:	ldr	r1, [r1, #4]
   163bc:	str	r1, [r0, #4]
   163c0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   163c4:	movw	r1, #260	; 0x104
   163c8:	movt	r1, #3
   163cc:	ldr	r1, [r1]
   163d0:	add	r0, r0, r1, lsl #3
   163d4:	ldr	r2, [sp, #44]	; 0x2c
   163d8:	sub	r1, r2, r1
   163dc:	lsl	r2, r1, #3
   163e0:	movw	r1, #0
   163e4:	and	r1, r1, #255	; 0xff
   163e8:	bl	11024 <memset@plt>
   163ec:	ldr	r0, [sp, #44]	; 0x2c
   163f0:	movw	r1, #260	; 0x104
   163f4:	movt	r1, #3
   163f8:	str	r0, [r1]
   163fc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16400:	ldr	r1, [fp, #-20]	; 0xffffffec
   16404:	ldr	r0, [r0, r1, lsl #3]
   16408:	str	r0, [sp, #40]	; 0x28
   1640c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   16410:	ldr	r1, [fp, #-20]	; 0xffffffec
   16414:	add	r0, r0, r1, lsl #3
   16418:	ldr	r0, [r0, #4]
   1641c:	str	r0, [sp, #36]	; 0x24
   16420:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16424:	ldr	r0, [r0, #4]
   16428:	orr	r0, r0, #1
   1642c:	str	r0, [sp, #32]
   16430:	ldr	r0, [sp, #36]	; 0x24
   16434:	ldr	r1, [sp, #40]	; 0x28
   16438:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1643c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16440:	ldr	ip, [fp, #-32]	; 0xffffffe0
   16444:	ldr	ip, [ip]
   16448:	ldr	lr, [sp, #32]
   1644c:	ldr	r4, [fp, #-32]	; 0xffffffe0
   16450:	add	r4, r4, #8
   16454:	ldr	r5, [fp, #-32]	; 0xffffffe0
   16458:	ldr	r5, [r5, #40]	; 0x28
   1645c:	ldr	r6, [fp, #-32]	; 0xffffffe0
   16460:	ldr	r6, [r6, #44]	; 0x2c
   16464:	str	ip, [sp]
   16468:	str	lr, [sp, #4]
   1646c:	str	r4, [sp, #8]
   16470:	str	r5, [sp, #12]
   16474:	str	r6, [sp, #16]
   16478:	bl	1487c <__assert_fail@plt+0x37a4>
   1647c:	str	r0, [sp, #28]
   16480:	ldr	r0, [sp, #40]	; 0x28
   16484:	ldr	r1, [sp, #28]
   16488:	cmp	r0, r1
   1648c:	bhi	16534 <__assert_fail@plt+0x545c>
   16490:	ldr	r0, [sp, #28]
   16494:	add	r0, r0, #1
   16498:	str	r0, [sp, #40]	; 0x28
   1649c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   164a0:	ldr	r2, [fp, #-20]	; 0xffffffec
   164a4:	add	r1, r1, r2, lsl #3
   164a8:	str	r0, [r1]
   164ac:	ldr	r0, [sp, #36]	; 0x24
   164b0:	movw	r1, #416	; 0x1a0
   164b4:	movt	r1, #3
   164b8:	cmp	r0, r1
   164bc:	beq	164c8 <__assert_fail@plt+0x53f0>
   164c0:	ldr	r0, [sp, #36]	; 0x24
   164c4:	bl	1409c <__assert_fail@plt+0x2fc4>
   164c8:	ldr	r0, [sp, #40]	; 0x28
   164cc:	bl	17578 <__assert_fail@plt+0x64a0>
   164d0:	mov	r1, r0
   164d4:	str	r0, [sp, #36]	; 0x24
   164d8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   164dc:	ldr	r2, [fp, #-20]	; 0xffffffec
   164e0:	add	r0, r0, r2, lsl #3
   164e4:	str	r1, [r0, #4]
   164e8:	ldr	r0, [sp, #36]	; 0x24
   164ec:	ldr	r1, [sp, #40]	; 0x28
   164f0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   164f4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   164f8:	ldr	ip, [fp, #-32]	; 0xffffffe0
   164fc:	ldr	ip, [ip]
   16500:	ldr	lr, [sp, #32]
   16504:	ldr	r4, [fp, #-32]	; 0xffffffe0
   16508:	add	r4, r4, #8
   1650c:	ldr	r5, [fp, #-32]	; 0xffffffe0
   16510:	ldr	r5, [r5, #40]	; 0x28
   16514:	ldr	r6, [fp, #-32]	; 0xffffffe0
   16518:	ldr	r6, [r6, #44]	; 0x2c
   1651c:	str	ip, [sp]
   16520:	str	lr, [sp, #4]
   16524:	str	r4, [sp, #8]
   16528:	str	r5, [sp, #12]
   1652c:	str	r6, [sp, #16]
   16530:	bl	1487c <__assert_fail@plt+0x37a4>
   16534:	ldr	r0, [fp, #-36]	; 0xffffffdc
   16538:	str	r0, [sp, #20]
   1653c:	bl	1100c <__errno_location@plt>
   16540:	ldr	r1, [sp, #20]
   16544:	str	r1, [r0]
   16548:	ldr	r0, [sp, #36]	; 0x24
   1654c:	sub	sp, fp, #16
   16550:	pop	{r4, r5, r6, sl, fp, pc}
   16554:	svcvc	0x00ffffff
   16558:	push	{fp, lr}
   1655c:	mov	fp, sp
   16560:	sub	sp, sp, #16
   16564:	str	r0, [fp, #-4]
   16568:	str	r1, [sp, #8]
   1656c:	str	r2, [sp, #4]
   16570:	ldr	r0, [fp, #-4]
   16574:	ldr	r1, [sp, #8]
   16578:	ldr	r2, [sp, #4]
   1657c:	movw	r3, #368	; 0x170
   16580:	movt	r3, #3
   16584:	bl	1628c <__assert_fail@plt+0x51b4>
   16588:	mov	sp, fp
   1658c:	pop	{fp, pc}
   16590:	push	{fp, lr}
   16594:	mov	fp, sp
   16598:	sub	sp, sp, #8
   1659c:	str	r0, [sp, #4]
   165a0:	ldr	r1, [sp, #4]
   165a4:	movw	r0, #0
   165a8:	bl	16258 <__assert_fail@plt+0x5180>
   165ac:	mov	sp, fp
   165b0:	pop	{fp, pc}
   165b4:	push	{fp, lr}
   165b8:	mov	fp, sp
   165bc:	sub	sp, sp, #8
   165c0:	str	r0, [sp, #4]
   165c4:	str	r1, [sp]
   165c8:	ldr	r1, [sp, #4]
   165cc:	ldr	r2, [sp]
   165d0:	movw	r0, #0
   165d4:	bl	16558 <__assert_fail@plt+0x5480>
   165d8:	mov	sp, fp
   165dc:	pop	{fp, pc}
   165e0:	push	{fp, lr}
   165e4:	mov	fp, sp
   165e8:	sub	sp, sp, #64	; 0x40
   165ec:	str	r0, [fp, #-4]
   165f0:	str	r1, [fp, #-8]
   165f4:	str	r2, [fp, #-12]
   165f8:	ldr	r1, [fp, #-8]
   165fc:	add	r0, sp, #4
   16600:	bl	16620 <__assert_fail@plt+0x5548>
   16604:	ldr	r0, [fp, #-4]
   16608:	ldr	r1, [fp, #-12]
   1660c:	mvn	r2, #0
   16610:	add	r3, sp, #4
   16614:	bl	1628c <__assert_fail@plt+0x51b4>
   16618:	mov	sp, fp
   1661c:	pop	{fp, pc}
   16620:	push	{fp, lr}
   16624:	mov	fp, sp
   16628:	sub	sp, sp, #8
   1662c:	str	r1, [sp, #4]
   16630:	mov	r1, r0
   16634:	str	r0, [sp]
   16638:	mov	r0, r1
   1663c:	movw	r1, #0
   16640:	and	r1, r1, #255	; 0xff
   16644:	movw	r2, #48	; 0x30
   16648:	bl	11024 <memset@plt>
   1664c:	ldr	r0, [sp, #4]
   16650:	cmp	r0, #10
   16654:	bne	1665c <__assert_fail@plt+0x5584>
   16658:	bl	110c0 <abort@plt>
   1665c:	ldr	r0, [sp, #4]
   16660:	ldr	r1, [sp]
   16664:	str	r0, [r1]
   16668:	mov	sp, fp
   1666c:	pop	{fp, pc}
   16670:	push	{fp, lr}
   16674:	mov	fp, sp
   16678:	sub	sp, sp, #64	; 0x40
   1667c:	str	r0, [fp, #-4]
   16680:	str	r1, [fp, #-8]
   16684:	str	r2, [fp, #-12]
   16688:	str	r3, [fp, #-16]
   1668c:	ldr	r1, [fp, #-8]
   16690:	mov	r0, sp
   16694:	bl	16620 <__assert_fail@plt+0x5548>
   16698:	ldr	r0, [fp, #-4]
   1669c:	ldr	r1, [fp, #-12]
   166a0:	ldr	r2, [fp, #-16]
   166a4:	mov	r3, sp
   166a8:	bl	1628c <__assert_fail@plt+0x51b4>
   166ac:	mov	sp, fp
   166b0:	pop	{fp, pc}
   166b4:	push	{fp, lr}
   166b8:	mov	fp, sp
   166bc:	sub	sp, sp, #8
   166c0:	str	r0, [sp, #4]
   166c4:	str	r1, [sp]
   166c8:	ldr	r1, [sp, #4]
   166cc:	ldr	r2, [sp]
   166d0:	movw	r0, #0
   166d4:	bl	165e0 <__assert_fail@plt+0x5508>
   166d8:	mov	sp, fp
   166dc:	pop	{fp, pc}
   166e0:	push	{fp, lr}
   166e4:	mov	fp, sp
   166e8:	sub	sp, sp, #16
   166ec:	str	r0, [fp, #-4]
   166f0:	str	r1, [sp, #8]
   166f4:	str	r2, [sp, #4]
   166f8:	ldr	r1, [fp, #-4]
   166fc:	ldr	r2, [sp, #8]
   16700:	ldr	r3, [sp, #4]
   16704:	movw	r0, #0
   16708:	bl	16670 <__assert_fail@plt+0x5598>
   1670c:	mov	sp, fp
   16710:	pop	{fp, pc}
   16714:	push	{fp, lr}
   16718:	mov	fp, sp
   1671c:	sub	sp, sp, #72	; 0x48
   16720:	movw	r3, #368	; 0x170
   16724:	movt	r3, #3
   16728:	str	r0, [fp, #-4]
   1672c:	str	r1, [fp, #-8]
   16730:	strb	r2, [fp, #-9]
   16734:	add	r0, sp, #12
   16738:	mov	r1, r0
   1673c:	str	r0, [sp, #8]
   16740:	mov	r0, r1
   16744:	mov	r1, r3
   16748:	movw	r2, #48	; 0x30
   1674c:	bl	10ebc <memcpy@plt>
   16750:	ldr	r0, [sp, #8]
   16754:	ldrb	r1, [fp, #-9]
   16758:	movw	r2, #1
   1675c:	bl	14624 <__assert_fail@plt+0x354c>
   16760:	ldr	r1, [fp, #-4]
   16764:	ldr	r2, [fp, #-8]
   16768:	movw	r3, #0
   1676c:	str	r0, [sp, #4]
   16770:	mov	r0, r3
   16774:	add	r3, sp, #12
   16778:	bl	1628c <__assert_fail@plt+0x51b4>
   1677c:	mov	sp, fp
   16780:	pop	{fp, pc}
   16784:	push	{fp, lr}
   16788:	mov	fp, sp
   1678c:	sub	sp, sp, #8
   16790:	str	r0, [sp, #4]
   16794:	strb	r1, [sp, #3]
   16798:	ldr	r0, [sp, #4]
   1679c:	mvn	r1, #0
   167a0:	ldrb	r2, [sp, #3]
   167a4:	bl	16714 <__assert_fail@plt+0x563c>
   167a8:	mov	sp, fp
   167ac:	pop	{fp, pc}
   167b0:	push	{fp, lr}
   167b4:	mov	fp, sp
   167b8:	sub	sp, sp, #8
   167bc:	str	r0, [sp, #4]
   167c0:	ldr	r0, [sp, #4]
   167c4:	movw	r1, #58	; 0x3a
   167c8:	and	r1, r1, #255	; 0xff
   167cc:	bl	16784 <__assert_fail@plt+0x56ac>
   167d0:	mov	sp, fp
   167d4:	pop	{fp, pc}
   167d8:	push	{fp, lr}
   167dc:	mov	fp, sp
   167e0:	sub	sp, sp, #8
   167e4:	str	r0, [sp, #4]
   167e8:	str	r1, [sp]
   167ec:	ldr	r0, [sp, #4]
   167f0:	ldr	r1, [sp]
   167f4:	movw	r2, #58	; 0x3a
   167f8:	and	r2, r2, #255	; 0xff
   167fc:	bl	16714 <__assert_fail@plt+0x563c>
   16800:	mov	sp, fp
   16804:	pop	{fp, pc}
   16808:	push	{fp, lr}
   1680c:	mov	fp, sp
   16810:	sub	sp, sp, #120	; 0x78
   16814:	str	r0, [fp, #-4]
   16818:	str	r1, [fp, #-8]
   1681c:	str	r2, [fp, #-12]
   16820:	ldr	r1, [fp, #-8]
   16824:	add	r0, sp, #12
   16828:	bl	16620 <__assert_fail@plt+0x5548>
   1682c:	add	r0, sp, #60	; 0x3c
   16830:	mov	r1, r0
   16834:	add	r2, sp, #12
   16838:	str	r0, [sp, #8]
   1683c:	mov	r0, r1
   16840:	mov	r1, r2
   16844:	movw	r2, #48	; 0x30
   16848:	bl	10ebc <memcpy@plt>
   1684c:	ldr	r0, [sp, #8]
   16850:	movw	r1, #58	; 0x3a
   16854:	and	r1, r1, #255	; 0xff
   16858:	movw	r2, #1
   1685c:	bl	14624 <__assert_fail@plt+0x354c>
   16860:	ldr	r1, [fp, #-4]
   16864:	ldr	r2, [fp, #-12]
   16868:	str	r0, [sp, #4]
   1686c:	mov	r0, r1
   16870:	mov	r1, r2
   16874:	mvn	r2, #0
   16878:	add	r3, sp, #60	; 0x3c
   1687c:	bl	1628c <__assert_fail@plt+0x51b4>
   16880:	mov	sp, fp
   16884:	pop	{fp, pc}
   16888:	push	{fp, lr}
   1688c:	mov	fp, sp
   16890:	sub	sp, sp, #24
   16894:	str	r0, [fp, #-4]
   16898:	str	r1, [fp, #-8]
   1689c:	str	r2, [sp, #12]
   168a0:	str	r3, [sp, #8]
   168a4:	ldr	r0, [fp, #-4]
   168a8:	ldr	r1, [fp, #-8]
   168ac:	ldr	r2, [sp, #12]
   168b0:	ldr	r3, [sp, #8]
   168b4:	mvn	ip, #0
   168b8:	str	ip, [sp]
   168bc:	bl	168c8 <__assert_fail@plt+0x57f0>
   168c0:	mov	sp, fp
   168c4:	pop	{fp, pc}
   168c8:	push	{fp, lr}
   168cc:	mov	fp, sp
   168d0:	sub	sp, sp, #72	; 0x48
   168d4:	ldr	ip, [fp, #8]
   168d8:	movw	lr, #368	; 0x170
   168dc:	movt	lr, #3
   168e0:	str	r0, [fp, #-4]
   168e4:	str	r1, [fp, #-8]
   168e8:	str	r2, [fp, #-12]
   168ec:	str	r3, [fp, #-16]
   168f0:	add	r0, sp, #8
   168f4:	mov	r1, r0
   168f8:	str	r0, [sp, #4]
   168fc:	mov	r0, r1
   16900:	mov	r1, lr
   16904:	movw	r2, #48	; 0x30
   16908:	str	ip, [sp]
   1690c:	bl	10ebc <memcpy@plt>
   16910:	ldr	r1, [fp, #-8]
   16914:	ldr	r2, [fp, #-12]
   16918:	ldr	r0, [sp, #4]
   1691c:	bl	14724 <__assert_fail@plt+0x364c>
   16920:	ldr	r0, [fp, #-4]
   16924:	ldr	r1, [fp, #-16]
   16928:	ldr	r2, [fp, #8]
   1692c:	add	r3, sp, #8
   16930:	bl	1628c <__assert_fail@plt+0x51b4>
   16934:	mov	sp, fp
   16938:	pop	{fp, pc}
   1693c:	push	{fp, lr}
   16940:	mov	fp, sp
   16944:	sub	sp, sp, #16
   16948:	str	r0, [fp, #-4]
   1694c:	str	r1, [sp, #8]
   16950:	str	r2, [sp, #4]
   16954:	ldr	r1, [fp, #-4]
   16958:	ldr	r2, [sp, #8]
   1695c:	ldr	r3, [sp, #4]
   16960:	movw	r0, #0
   16964:	bl	16888 <__assert_fail@plt+0x57b0>
   16968:	mov	sp, fp
   1696c:	pop	{fp, pc}
   16970:	push	{fp, lr}
   16974:	mov	fp, sp
   16978:	sub	sp, sp, #24
   1697c:	str	r0, [fp, #-4]
   16980:	str	r1, [fp, #-8]
   16984:	str	r2, [sp, #12]
   16988:	str	r3, [sp, #8]
   1698c:	ldr	r1, [fp, #-4]
   16990:	ldr	r2, [fp, #-8]
   16994:	ldr	r3, [sp, #12]
   16998:	ldr	r0, [sp, #8]
   1699c:	movw	ip, #0
   169a0:	str	r0, [sp, #4]
   169a4:	mov	r0, ip
   169a8:	ldr	ip, [sp, #4]
   169ac:	str	ip, [sp]
   169b0:	bl	168c8 <__assert_fail@plt+0x57f0>
   169b4:	mov	sp, fp
   169b8:	pop	{fp, pc}
   169bc:	push	{fp, lr}
   169c0:	mov	fp, sp
   169c4:	sub	sp, sp, #16
   169c8:	str	r0, [fp, #-4]
   169cc:	str	r1, [sp, #8]
   169d0:	str	r2, [sp, #4]
   169d4:	ldr	r0, [fp, #-4]
   169d8:	ldr	r1, [sp, #8]
   169dc:	ldr	r2, [sp, #4]
   169e0:	movw	r3, #272	; 0x110
   169e4:	movt	r3, #3
   169e8:	bl	1628c <__assert_fail@plt+0x51b4>
   169ec:	mov	sp, fp
   169f0:	pop	{fp, pc}
   169f4:	push	{fp, lr}
   169f8:	mov	fp, sp
   169fc:	sub	sp, sp, #8
   16a00:	str	r0, [sp, #4]
   16a04:	str	r1, [sp]
   16a08:	ldr	r1, [sp, #4]
   16a0c:	ldr	r2, [sp]
   16a10:	movw	r0, #0
   16a14:	bl	169bc <__assert_fail@plt+0x58e4>
   16a18:	mov	sp, fp
   16a1c:	pop	{fp, pc}
   16a20:	push	{fp, lr}
   16a24:	mov	fp, sp
   16a28:	sub	sp, sp, #8
   16a2c:	str	r0, [sp, #4]
   16a30:	str	r1, [sp]
   16a34:	ldr	r0, [sp, #4]
   16a38:	ldr	r1, [sp]
   16a3c:	mvn	r2, #0
   16a40:	bl	169bc <__assert_fail@plt+0x58e4>
   16a44:	mov	sp, fp
   16a48:	pop	{fp, pc}
   16a4c:	push	{fp, lr}
   16a50:	mov	fp, sp
   16a54:	sub	sp, sp, #8
   16a58:	str	r0, [sp, #4]
   16a5c:	ldr	r1, [sp, #4]
   16a60:	movw	r0, #0
   16a64:	bl	16a20 <__assert_fail@plt+0x5948>
   16a68:	mov	sp, fp
   16a6c:	pop	{fp, pc}
   16a70:	push	{fp, lr}
   16a74:	mov	fp, sp
   16a78:	sub	sp, sp, #24
   16a7c:	str	r0, [fp, #-8]
   16a80:	str	r1, [sp, #12]
   16a84:	ldr	r0, [fp, #-8]
   16a88:	bl	10fd0 <gettext@plt>
   16a8c:	str	r0, [sp, #8]
   16a90:	ldr	r0, [sp, #8]
   16a94:	ldr	r1, [fp, #-8]
   16a98:	cmp	r0, r1
   16a9c:	beq	16aac <__assert_fail@plt+0x59d4>
   16aa0:	ldr	r0, [sp, #8]
   16aa4:	str	r0, [fp, #-4]
   16aa8:	b	16b78 <__assert_fail@plt+0x5aa0>
   16aac:	bl	1cc8c <__assert_fail@plt+0xbbb4>
   16ab0:	str	r0, [sp, #4]
   16ab4:	ldr	r0, [sp, #4]
   16ab8:	movw	r1, #62881	; 0xf5a1
   16abc:	movt	r1, #1
   16ac0:	bl	1c690 <__assert_fail@plt+0xb5b8>
   16ac4:	cmp	r0, #0
   16ac8:	bne	16b00 <__assert_fail@plt+0x5a28>
   16acc:	ldr	r0, [fp, #-8]
   16ad0:	ldrb	r0, [r0]
   16ad4:	cmp	r0, #96	; 0x60
   16ad8:	movw	r0, #0
   16adc:	moveq	r0, #1
   16ae0:	tst	r0, #1
   16ae4:	movw	r0, #62891	; 0xf5ab
   16ae8:	movt	r0, #1
   16aec:	movw	r1, #62887	; 0xf5a7
   16af0:	movt	r1, #1
   16af4:	movne	r0, r1
   16af8:	str	r0, [fp, #-4]
   16afc:	b	16b78 <__assert_fail@plt+0x5aa0>
   16b00:	ldr	r0, [sp, #4]
   16b04:	movw	r1, #62895	; 0xf5af
   16b08:	movt	r1, #1
   16b0c:	bl	1c690 <__assert_fail@plt+0xb5b8>
   16b10:	cmp	r0, #0
   16b14:	bne	16b4c <__assert_fail@plt+0x5a74>
   16b18:	ldr	r0, [fp, #-8]
   16b1c:	ldrb	r0, [r0]
   16b20:	cmp	r0, #96	; 0x60
   16b24:	movw	r0, #0
   16b28:	moveq	r0, #1
   16b2c:	tst	r0, #1
   16b30:	movw	r0, #62907	; 0xf5bb
   16b34:	movt	r0, #1
   16b38:	movw	r1, #62903	; 0xf5b7
   16b3c:	movt	r1, #1
   16b40:	movne	r0, r1
   16b44:	str	r0, [fp, #-4]
   16b48:	b	16b78 <__assert_fail@plt+0x5aa0>
   16b4c:	ldr	r0, [sp, #12]
   16b50:	cmp	r0, #9
   16b54:	movw	r0, #0
   16b58:	moveq	r0, #1
   16b5c:	tst	r0, #1
   16b60:	movw	r0, #62879	; 0xf59f
   16b64:	movt	r0, #1
   16b68:	movw	r1, #62875	; 0xf59b
   16b6c:	movt	r1, #1
   16b70:	movne	r0, r1
   16b74:	str	r0, [fp, #-4]
   16b78:	ldr	r0, [fp, #-4]
   16b7c:	mov	sp, fp
   16b80:	pop	{fp, pc}
   16b84:	push	{fp, lr}
   16b88:	mov	fp, sp
   16b8c:	sub	sp, sp, #24
   16b90:	str	r0, [fp, #-8]
   16b94:	str	r1, [sp, #12]
   16b98:	str	r2, [sp, #8]
   16b9c:	ldr	r0, [fp, #-8]
   16ba0:	ldr	r1, [sp, #12]
   16ba4:	ldr	r2, [sp, #8]
   16ba8:	bl	10e8c <read@plt>
   16bac:	str	r0, [sp, #4]
   16bb0:	ldr	r0, [sp, #4]
   16bb4:	movw	r1, #0
   16bb8:	cmp	r1, r0
   16bbc:	bgt	16bcc <__assert_fail@plt+0x5af4>
   16bc0:	ldr	r0, [sp, #4]
   16bc4:	str	r0, [fp, #-4]
   16bc8:	b	16c24 <__assert_fail@plt+0x5b4c>
   16bcc:	bl	1100c <__errno_location@plt>
   16bd0:	ldr	r0, [r0]
   16bd4:	cmp	r0, #4
   16bd8:	bne	16be0 <__assert_fail@plt+0x5b08>
   16bdc:	b	16b9c <__assert_fail@plt+0x5ac4>
   16be0:	bl	1100c <__errno_location@plt>
   16be4:	ldr	r0, [r0]
   16be8:	cmp	r0, #22
   16bec:	bne	16c0c <__assert_fail@plt+0x5b34>
   16bf0:	ldr	r0, [pc, #56]	; 16c30 <__assert_fail@plt+0x5b58>
   16bf4:	ldr	r1, [sp, #8]
   16bf8:	cmp	r0, r1
   16bfc:	bcs	16c0c <__assert_fail@plt+0x5b34>
   16c00:	ldr	r0, [pc, #40]	; 16c30 <__assert_fail@plt+0x5b58>
   16c04:	str	r0, [sp, #8]
   16c08:	b	16c18 <__assert_fail@plt+0x5b40>
   16c0c:	ldr	r0, [sp, #4]
   16c10:	str	r0, [fp, #-4]
   16c14:	b	16c24 <__assert_fail@plt+0x5b4c>
   16c18:	b	16c1c <__assert_fail@plt+0x5b44>
   16c1c:	b	16c20 <__assert_fail@plt+0x5b48>
   16c20:	b	16b9c <__assert_fail@plt+0x5ac4>
   16c24:	ldr	r0, [fp, #-4]
   16c28:	mov	sp, fp
   16c2c:	pop	{fp, pc}
   16c30:	svcvc	0x00f00000	; IMB
   16c34:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   16c38:	add	fp, sp, #28
   16c3c:	sub	sp, sp, #196	; 0xc4
   16c40:	ldr	ip, [fp, #12]
   16c44:	ldr	lr, [fp, #8]
   16c48:	str	r0, [fp, #-32]	; 0xffffffe0
   16c4c:	str	r1, [fp, #-36]	; 0xffffffdc
   16c50:	str	r2, [fp, #-40]	; 0xffffffd8
   16c54:	str	r3, [fp, #-44]	; 0xffffffd4
   16c58:	ldr	r0, [fp, #-36]	; 0xffffffdc
   16c5c:	movw	r1, #0
   16c60:	cmp	r0, r1
   16c64:	beq	16c98 <__assert_fail@plt+0x5bc0>
   16c68:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16c6c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   16c70:	ldr	r3, [fp, #-40]	; 0xffffffd8
   16c74:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16c78:	movw	ip, #62996	; 0xf614
   16c7c:	movt	ip, #1
   16c80:	str	r1, [fp, #-48]	; 0xffffffd0
   16c84:	mov	r1, ip
   16c88:	ldr	ip, [fp, #-48]	; 0xffffffd0
   16c8c:	str	ip, [sp]
   16c90:	bl	11000 <fprintf@plt>
   16c94:	b	16cb0 <__assert_fail@plt+0x5bd8>
   16c98:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16c9c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   16ca0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16ca4:	movw	r1, #63008	; 0xf620
   16ca8:	movt	r1, #1
   16cac:	bl	11000 <fprintf@plt>
   16cb0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16cb4:	movw	r1, #63015	; 0xf627
   16cb8:	movt	r1, #1
   16cbc:	str	r0, [fp, #-52]	; 0xffffffcc
   16cc0:	mov	r0, r1
   16cc4:	bl	10fd0 <gettext@plt>
   16cc8:	movw	r1, #63733	; 0xf8f5
   16ccc:	movt	r1, #1
   16cd0:	movw	r3, #2022	; 0x7e6
   16cd4:	ldr	r2, [fp, #-52]	; 0xffffffcc
   16cd8:	str	r0, [fp, #-56]	; 0xffffffc8
   16cdc:	mov	r0, r2
   16ce0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   16ce4:	bl	11000 <fprintf@plt>
   16ce8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   16cec:	movw	r2, #62100	; 0xf294
   16cf0:	movt	r2, #1
   16cf4:	str	r0, [fp, #-60]	; 0xffffffc4
   16cf8:	mov	r0, r2
   16cfc:	str	r2, [fp, #-64]	; 0xffffffc0
   16d00:	bl	10e5c <fputs_unlocked@plt>
   16d04:	ldr	r1, [fp, #-32]	; 0xffffffe0
   16d08:	movw	r2, #63019	; 0xf62b
   16d0c:	movt	r2, #1
   16d10:	str	r0, [fp, #-68]	; 0xffffffbc
   16d14:	mov	r0, r2
   16d18:	str	r1, [fp, #-72]	; 0xffffffb8
   16d1c:	bl	10fd0 <gettext@plt>
   16d20:	movw	r2, #63190	; 0xf6d6
   16d24:	movt	r2, #1
   16d28:	ldr	r1, [fp, #-72]	; 0xffffffb8
   16d2c:	str	r0, [fp, #-76]	; 0xffffffb4
   16d30:	mov	r0, r1
   16d34:	ldr	r1, [fp, #-76]	; 0xffffffb4
   16d38:	bl	11000 <fprintf@plt>
   16d3c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   16d40:	ldr	r2, [fp, #-64]	; 0xffffffc0
   16d44:	str	r0, [fp, #-80]	; 0xffffffb0
   16d48:	mov	r0, r2
   16d4c:	bl	10e5c <fputs_unlocked@plt>
   16d50:	ldr	r1, [fp, #12]
   16d54:	cmp	r1, #9
   16d58:	str	r1, [fp, #-84]	; 0xffffffac
   16d5c:	bhi	17178 <__assert_fail@plt+0x60a0>
   16d60:	add	r0, pc, #8
   16d64:	ldr	r1, [fp, #-84]	; 0xffffffac
   16d68:	ldr	r0, [r0, r1, lsl #2]
   16d6c:	mov	pc, r0
   16d70:	muleq	r1, r8, sp
   16d74:	muleq	r1, ip, sp
   16d78:	ldrdeq	r6, [r1], -r4
   16d7c:	andeq	r6, r1, r4, lsl lr
   16d80:	andeq	r6, r1, ip, ror #28
   16d84:	ldrdeq	r6, [r1], -r0
   16d88:	andeq	r6, r1, r0, asr #30
   16d8c:			; <UNDEFINED> instruction: 0x00016fbc
   16d90:	andeq	r7, r1, r4, asr #32
   16d94:	ldrdeq	r7, [r1], -r8
   16d98:	b	17214 <__assert_fail@plt+0x613c>
   16d9c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16da0:	movw	r1, #63224	; 0xf6f8
   16da4:	movt	r1, #1
   16da8:	str	r0, [fp, #-88]	; 0xffffffa8
   16dac:	mov	r0, r1
   16db0:	bl	10fd0 <gettext@plt>
   16db4:	ldr	r1, [fp, #8]
   16db8:	ldr	r2, [r1]
   16dbc:	ldr	r1, [fp, #-88]	; 0xffffffa8
   16dc0:	str	r0, [fp, #-92]	; 0xffffffa4
   16dc4:	mov	r0, r1
   16dc8:	ldr	r1, [fp, #-92]	; 0xffffffa4
   16dcc:	bl	11000 <fprintf@plt>
   16dd0:	b	17214 <__assert_fail@plt+0x613c>
   16dd4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16dd8:	movw	r1, #63240	; 0xf708
   16ddc:	movt	r1, #1
   16de0:	str	r0, [fp, #-96]	; 0xffffffa0
   16de4:	mov	r0, r1
   16de8:	bl	10fd0 <gettext@plt>
   16dec:	ldr	r1, [fp, #8]
   16df0:	ldr	r2, [r1]
   16df4:	ldr	r1, [fp, #8]
   16df8:	ldr	r3, [r1, #4]
   16dfc:	ldr	r1, [fp, #-96]	; 0xffffffa0
   16e00:	str	r0, [fp, #-100]	; 0xffffff9c
   16e04:	mov	r0, r1
   16e08:	ldr	r1, [fp, #-100]	; 0xffffff9c
   16e0c:	bl	11000 <fprintf@plt>
   16e10:	b	17214 <__assert_fail@plt+0x613c>
   16e14:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16e18:	movw	r1, #63263	; 0xf71f
   16e1c:	movt	r1, #1
   16e20:	str	r0, [fp, #-104]	; 0xffffff98
   16e24:	mov	r0, r1
   16e28:	bl	10fd0 <gettext@plt>
   16e2c:	ldr	r1, [fp, #8]
   16e30:	ldr	r2, [r1]
   16e34:	ldr	r1, [fp, #8]
   16e38:	ldr	r3, [r1, #4]
   16e3c:	ldr	r1, [fp, #8]
   16e40:	ldr	r1, [r1, #8]
   16e44:	ldr	ip, [fp, #-104]	; 0xffffff98
   16e48:	str	r0, [fp, #-108]	; 0xffffff94
   16e4c:	mov	r0, ip
   16e50:	ldr	lr, [fp, #-108]	; 0xffffff94
   16e54:	str	r1, [sp, #112]	; 0x70
   16e58:	mov	r1, lr
   16e5c:	ldr	r4, [sp, #112]	; 0x70
   16e60:	str	r4, [sp]
   16e64:	bl	11000 <fprintf@plt>
   16e68:	b	17214 <__assert_fail@plt+0x613c>
   16e6c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16e70:	movw	r1, #63291	; 0xf73b
   16e74:	movt	r1, #1
   16e78:	str	r0, [sp, #108]	; 0x6c
   16e7c:	mov	r0, r1
   16e80:	bl	10fd0 <gettext@plt>
   16e84:	ldr	r1, [fp, #8]
   16e88:	ldr	r2, [r1]
   16e8c:	ldr	r1, [fp, #8]
   16e90:	ldr	r3, [r1, #4]
   16e94:	ldr	r1, [fp, #8]
   16e98:	ldr	r1, [r1, #8]
   16e9c:	ldr	ip, [fp, #8]
   16ea0:	ldr	ip, [ip, #12]
   16ea4:	ldr	lr, [sp, #108]	; 0x6c
   16ea8:	str	r0, [sp, #104]	; 0x68
   16eac:	mov	r0, lr
   16eb0:	ldr	r4, [sp, #104]	; 0x68
   16eb4:	str	r1, [sp, #100]	; 0x64
   16eb8:	mov	r1, r4
   16ebc:	ldr	r5, [sp, #100]	; 0x64
   16ec0:	str	r5, [sp]
   16ec4:	str	ip, [sp, #4]
   16ec8:	bl	11000 <fprintf@plt>
   16ecc:	b	17214 <__assert_fail@plt+0x613c>
   16ed0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16ed4:	movw	r1, #63323	; 0xf75b
   16ed8:	movt	r1, #1
   16edc:	str	r0, [sp, #96]	; 0x60
   16ee0:	mov	r0, r1
   16ee4:	bl	10fd0 <gettext@plt>
   16ee8:	ldr	r1, [fp, #8]
   16eec:	ldr	r2, [r1]
   16ef0:	ldr	r1, [fp, #8]
   16ef4:	ldr	r3, [r1, #4]
   16ef8:	ldr	r1, [fp, #8]
   16efc:	ldr	r1, [r1, #8]
   16f00:	ldr	ip, [fp, #8]
   16f04:	ldr	ip, [ip, #12]
   16f08:	ldr	lr, [fp, #8]
   16f0c:	ldr	lr, [lr, #16]
   16f10:	ldr	r4, [sp, #96]	; 0x60
   16f14:	str	r0, [sp, #92]	; 0x5c
   16f18:	mov	r0, r4
   16f1c:	ldr	r5, [sp, #92]	; 0x5c
   16f20:	str	r1, [sp, #88]	; 0x58
   16f24:	mov	r1, r5
   16f28:	ldr	r6, [sp, #88]	; 0x58
   16f2c:	str	r6, [sp]
   16f30:	str	ip, [sp, #4]
   16f34:	str	lr, [sp, #8]
   16f38:	bl	11000 <fprintf@plt>
   16f3c:	b	17214 <__assert_fail@plt+0x613c>
   16f40:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16f44:	movw	r1, #63359	; 0xf77f
   16f48:	movt	r1, #1
   16f4c:	str	r0, [sp, #84]	; 0x54
   16f50:	mov	r0, r1
   16f54:	bl	10fd0 <gettext@plt>
   16f58:	ldr	r1, [fp, #8]
   16f5c:	ldr	r2, [r1]
   16f60:	ldr	r1, [fp, #8]
   16f64:	ldr	r3, [r1, #4]
   16f68:	ldr	r1, [fp, #8]
   16f6c:	ldr	r1, [r1, #8]
   16f70:	ldr	ip, [fp, #8]
   16f74:	ldr	ip, [ip, #12]
   16f78:	ldr	lr, [fp, #8]
   16f7c:	ldr	lr, [lr, #16]
   16f80:	ldr	r4, [fp, #8]
   16f84:	ldr	r4, [r4, #20]
   16f88:	ldr	r5, [sp, #84]	; 0x54
   16f8c:	str	r0, [sp, #80]	; 0x50
   16f90:	mov	r0, r5
   16f94:	ldr	r6, [sp, #80]	; 0x50
   16f98:	str	r1, [sp, #76]	; 0x4c
   16f9c:	mov	r1, r6
   16fa0:	ldr	r7, [sp, #76]	; 0x4c
   16fa4:	str	r7, [sp]
   16fa8:	str	ip, [sp, #4]
   16fac:	str	lr, [sp, #8]
   16fb0:	str	r4, [sp, #12]
   16fb4:	bl	11000 <fprintf@plt>
   16fb8:	b	17214 <__assert_fail@plt+0x613c>
   16fbc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16fc0:	movw	r1, #63399	; 0xf7a7
   16fc4:	movt	r1, #1
   16fc8:	str	r0, [sp, #72]	; 0x48
   16fcc:	mov	r0, r1
   16fd0:	bl	10fd0 <gettext@plt>
   16fd4:	ldr	r1, [fp, #8]
   16fd8:	ldr	r2, [r1]
   16fdc:	ldr	r1, [fp, #8]
   16fe0:	ldr	r3, [r1, #4]
   16fe4:	ldr	r1, [fp, #8]
   16fe8:	ldr	r1, [r1, #8]
   16fec:	ldr	ip, [fp, #8]
   16ff0:	ldr	ip, [ip, #12]
   16ff4:	ldr	lr, [fp, #8]
   16ff8:	ldr	lr, [lr, #16]
   16ffc:	ldr	r4, [fp, #8]
   17000:	ldr	r4, [r4, #20]
   17004:	ldr	r5, [fp, #8]
   17008:	ldr	r5, [r5, #24]
   1700c:	ldr	r6, [sp, #72]	; 0x48
   17010:	str	r0, [sp, #68]	; 0x44
   17014:	mov	r0, r6
   17018:	ldr	r7, [sp, #68]	; 0x44
   1701c:	str	r1, [sp, #64]	; 0x40
   17020:	mov	r1, r7
   17024:	ldr	r8, [sp, #64]	; 0x40
   17028:	str	r8, [sp]
   1702c:	str	ip, [sp, #4]
   17030:	str	lr, [sp, #8]
   17034:	str	r4, [sp, #12]
   17038:	str	r5, [sp, #16]
   1703c:	bl	11000 <fprintf@plt>
   17040:	b	17214 <__assert_fail@plt+0x613c>
   17044:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17048:	movw	r1, #63443	; 0xf7d3
   1704c:	movt	r1, #1
   17050:	str	r0, [sp, #60]	; 0x3c
   17054:	mov	r0, r1
   17058:	bl	10fd0 <gettext@plt>
   1705c:	ldr	r1, [fp, #8]
   17060:	ldr	r2, [r1]
   17064:	ldr	r1, [fp, #8]
   17068:	ldr	r3, [r1, #4]
   1706c:	ldr	r1, [fp, #8]
   17070:	ldr	r1, [r1, #8]
   17074:	ldr	ip, [fp, #8]
   17078:	ldr	ip, [ip, #12]
   1707c:	ldr	lr, [fp, #8]
   17080:	ldr	lr, [lr, #16]
   17084:	ldr	r4, [fp, #8]
   17088:	ldr	r4, [r4, #20]
   1708c:	ldr	r5, [fp, #8]
   17090:	ldr	r5, [r5, #24]
   17094:	ldr	r6, [fp, #8]
   17098:	ldr	r6, [r6, #28]
   1709c:	ldr	r7, [sp, #60]	; 0x3c
   170a0:	str	r0, [sp, #56]	; 0x38
   170a4:	mov	r0, r7
   170a8:	ldr	r8, [sp, #56]	; 0x38
   170ac:	str	r1, [sp, #52]	; 0x34
   170b0:	mov	r1, r8
   170b4:	ldr	r9, [sp, #52]	; 0x34
   170b8:	str	r9, [sp]
   170bc:	str	ip, [sp, #4]
   170c0:	str	lr, [sp, #8]
   170c4:	str	r4, [sp, #12]
   170c8:	str	r5, [sp, #16]
   170cc:	str	r6, [sp, #20]
   170d0:	bl	11000 <fprintf@plt>
   170d4:	b	17214 <__assert_fail@plt+0x613c>
   170d8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   170dc:	movw	r1, #63491	; 0xf803
   170e0:	movt	r1, #1
   170e4:	str	r0, [sp, #48]	; 0x30
   170e8:	mov	r0, r1
   170ec:	bl	10fd0 <gettext@plt>
   170f0:	ldr	r1, [fp, #8]
   170f4:	ldr	r2, [r1]
   170f8:	ldr	r1, [fp, #8]
   170fc:	ldr	r3, [r1, #4]
   17100:	ldr	r1, [fp, #8]
   17104:	ldr	r1, [r1, #8]
   17108:	ldr	ip, [fp, #8]
   1710c:	ldr	ip, [ip, #12]
   17110:	ldr	lr, [fp, #8]
   17114:	ldr	lr, [lr, #16]
   17118:	ldr	r4, [fp, #8]
   1711c:	ldr	r4, [r4, #20]
   17120:	ldr	r5, [fp, #8]
   17124:	ldr	r5, [r5, #24]
   17128:	ldr	r6, [fp, #8]
   1712c:	ldr	r6, [r6, #28]
   17130:	ldr	r7, [fp, #8]
   17134:	ldr	r7, [r7, #32]
   17138:	ldr	r8, [sp, #48]	; 0x30
   1713c:	str	r0, [sp, #44]	; 0x2c
   17140:	mov	r0, r8
   17144:	ldr	r9, [sp, #44]	; 0x2c
   17148:	str	r1, [sp, #40]	; 0x28
   1714c:	mov	r1, r9
   17150:	ldr	sl, [sp, #40]	; 0x28
   17154:	str	sl, [sp]
   17158:	str	ip, [sp, #4]
   1715c:	str	lr, [sp, #8]
   17160:	str	r4, [sp, #12]
   17164:	str	r5, [sp, #16]
   17168:	str	r6, [sp, #20]
   1716c:	str	r7, [sp, #24]
   17170:	bl	11000 <fprintf@plt>
   17174:	b	17214 <__assert_fail@plt+0x613c>
   17178:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1717c:	movw	r1, #63543	; 0xf837
   17180:	movt	r1, #1
   17184:	str	r0, [sp, #36]	; 0x24
   17188:	mov	r0, r1
   1718c:	bl	10fd0 <gettext@plt>
   17190:	ldr	r1, [fp, #8]
   17194:	ldr	r2, [r1]
   17198:	ldr	r1, [fp, #8]
   1719c:	ldr	r3, [r1, #4]
   171a0:	ldr	r1, [fp, #8]
   171a4:	ldr	r1, [r1, #8]
   171a8:	ldr	ip, [fp, #8]
   171ac:	ldr	ip, [ip, #12]
   171b0:	ldr	lr, [fp, #8]
   171b4:	ldr	lr, [lr, #16]
   171b8:	ldr	r4, [fp, #8]
   171bc:	ldr	r4, [r4, #20]
   171c0:	ldr	r5, [fp, #8]
   171c4:	ldr	r5, [r5, #24]
   171c8:	ldr	r6, [fp, #8]
   171cc:	ldr	r6, [r6, #28]
   171d0:	ldr	r7, [fp, #8]
   171d4:	ldr	r7, [r7, #32]
   171d8:	ldr	r8, [sp, #36]	; 0x24
   171dc:	str	r0, [sp, #32]
   171e0:	mov	r0, r8
   171e4:	ldr	r9, [sp, #32]
   171e8:	str	r1, [sp, #28]
   171ec:	mov	r1, r9
   171f0:	ldr	sl, [sp, #28]
   171f4:	str	sl, [sp]
   171f8:	str	ip, [sp, #4]
   171fc:	str	lr, [sp, #8]
   17200:	str	r4, [sp, #12]
   17204:	str	r5, [sp, #16]
   17208:	str	r6, [sp, #20]
   1720c:	str	r7, [sp, #24]
   17210:	bl	11000 <fprintf@plt>
   17214:	sub	sp, fp, #28
   17218:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1721c:	push	{fp, lr}
   17220:	mov	fp, sp
   17224:	sub	sp, sp, #32
   17228:	ldr	ip, [fp, #8]
   1722c:	str	r0, [fp, #-4]
   17230:	str	r1, [fp, #-8]
   17234:	str	r2, [fp, #-12]
   17238:	str	r3, [sp, #16]
   1723c:	movw	r0, #0
   17240:	str	r0, [sp, #12]
   17244:	ldr	r0, [fp, #8]
   17248:	ldr	r1, [sp, #12]
   1724c:	add	r0, r0, r1, lsl #2
   17250:	ldr	r0, [r0]
   17254:	movw	r1, #0
   17258:	cmp	r0, r1
   1725c:	beq	17274 <__assert_fail@plt+0x619c>
   17260:	b	17264 <__assert_fail@plt+0x618c>
   17264:	ldr	r0, [sp, #12]
   17268:	add	r0, r0, #1
   1726c:	str	r0, [sp, #12]
   17270:	b	17244 <__assert_fail@plt+0x616c>
   17274:	ldr	r0, [fp, #-4]
   17278:	ldr	r1, [fp, #-8]
   1727c:	ldr	r2, [fp, #-12]
   17280:	ldr	r3, [sp, #16]
   17284:	ldr	ip, [fp, #8]
   17288:	ldr	lr, [sp, #12]
   1728c:	str	ip, [sp]
   17290:	str	lr, [sp, #4]
   17294:	bl	16c34 <__assert_fail@plt+0x5b5c>
   17298:	mov	sp, fp
   1729c:	pop	{fp, pc}
   172a0:	push	{fp, lr}
   172a4:	mov	fp, sp
   172a8:	sub	sp, sp, #80	; 0x50
   172ac:	ldr	ip, [fp, #8]
   172b0:	str	ip, [fp, #-4]
   172b4:	str	r0, [fp, #-8]
   172b8:	str	r1, [fp, #-12]
   172bc:	str	r2, [fp, #-16]
   172c0:	str	r3, [fp, #-20]	; 0xffffffec
   172c4:	movw	r0, #0
   172c8:	str	r0, [fp, #-24]	; 0xffffffe8
   172cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   172d0:	cmp	r0, #10
   172d4:	movw	r0, #0
   172d8:	str	r0, [sp, #12]
   172dc:	bcs	17314 <__assert_fail@plt+0x623c>
   172e0:	ldr	r0, [fp, #-4]
   172e4:	add	r1, r0, #4
   172e8:	str	r1, [fp, #-4]
   172ec:	ldr	r0, [r0]
   172f0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   172f4:	add	r2, sp, #16
   172f8:	add	r1, r2, r1, lsl #2
   172fc:	str	r0, [r1]
   17300:	movw	r1, #0
   17304:	cmp	r0, r1
   17308:	movw	r0, #0
   1730c:	movne	r0, #1
   17310:	str	r0, [sp, #12]
   17314:	ldr	r0, [sp, #12]
   17318:	tst	r0, #1
   1731c:	beq	17334 <__assert_fail@plt+0x625c>
   17320:	b	17324 <__assert_fail@plt+0x624c>
   17324:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17328:	add	r0, r0, #1
   1732c:	str	r0, [fp, #-24]	; 0xffffffe8
   17330:	b	172cc <__assert_fail@plt+0x61f4>
   17334:	add	r0, sp, #16
   17338:	ldr	r1, [fp, #-8]
   1733c:	ldr	r2, [fp, #-12]
   17340:	ldr	r3, [fp, #-16]
   17344:	ldr	ip, [fp, #-20]	; 0xffffffec
   17348:	ldr	lr, [fp, #-24]	; 0xffffffe8
   1734c:	str	r0, [sp, #8]
   17350:	mov	r0, r1
   17354:	mov	r1, r2
   17358:	mov	r2, r3
   1735c:	mov	r3, ip
   17360:	ldr	ip, [sp, #8]
   17364:	str	ip, [sp]
   17368:	str	lr, [sp, #4]
   1736c:	bl	16c34 <__assert_fail@plt+0x5b5c>
   17370:	mov	sp, fp
   17374:	pop	{fp, pc}
   17378:	push	{fp, lr}
   1737c:	mov	fp, sp
   17380:	sub	sp, sp, #24
   17384:	str	r0, [fp, #-4]
   17388:	str	r1, [fp, #-8]
   1738c:	str	r2, [sp, #12]
   17390:	str	r3, [sp, #8]
   17394:	add	r0, fp, #8
   17398:	str	r0, [sp, #4]
   1739c:	ldr	r0, [fp, #-4]
   173a0:	ldr	r1, [fp, #-8]
   173a4:	ldr	r2, [sp, #12]
   173a8:	ldr	r3, [sp, #8]
   173ac:	ldr	ip, [sp, #4]
   173b0:	mov	lr, sp
   173b4:	str	ip, [lr]
   173b8:	bl	172a0 <__assert_fail@plt+0x61c8>
   173bc:	add	r0, sp, #4
   173c0:	mov	sp, fp
   173c4:	pop	{fp, pc}
   173c8:	push	{fp, lr}
   173cc:	mov	fp, sp
   173d0:	sub	sp, sp, #16
   173d4:	movw	r0, #340	; 0x154
   173d8:	movt	r0, #3
   173dc:	ldr	r1, [r0]
   173e0:	movw	r0, #62100	; 0xf294
   173e4:	movt	r0, #1
   173e8:	bl	10e5c <fputs_unlocked@plt>
   173ec:	movw	r1, #63603	; 0xf873
   173f0:	movt	r1, #1
   173f4:	str	r0, [fp, #-4]
   173f8:	mov	r0, r1
   173fc:	bl	10fd0 <gettext@plt>
   17400:	movw	r1, #63623	; 0xf887
   17404:	movt	r1, #1
   17408:	bl	10e80 <printf@plt>
   1740c:	movw	r1, #63645	; 0xf89d
   17410:	movt	r1, #1
   17414:	str	r0, [sp, #8]
   17418:	mov	r0, r1
   1741c:	bl	10fd0 <gettext@plt>
   17420:	movw	r1, #61586	; 0xf092
   17424:	movt	r1, #1
   17428:	movw	r2, #61909	; 0xf1d5
   1742c:	movt	r2, #1
   17430:	bl	10e80 <printf@plt>
   17434:	movw	r1, #63665	; 0xf8b1
   17438:	movt	r1, #1
   1743c:	str	r0, [sp, #4]
   17440:	mov	r0, r1
   17444:	bl	10fd0 <gettext@plt>
   17448:	movw	r1, #63704	; 0xf8d8
   1744c:	movt	r1, #1
   17450:	bl	10e80 <printf@plt>
   17454:	mov	sp, fp
   17458:	pop	{fp, pc}
   1745c:	push	{fp, lr}
   17460:	mov	fp, sp
   17464:	sub	sp, sp, #16
   17468:	str	r0, [fp, #-4]
   1746c:	str	r1, [sp, #8]
   17470:	str	r2, [sp, #4]
   17474:	ldr	r0, [fp, #-4]
   17478:	ldr	r1, [sp, #8]
   1747c:	ldr	r2, [sp, #4]
   17480:	bl	1748c <__assert_fail@plt+0x63b4>
   17484:	mov	sp, fp
   17488:	pop	{fp, pc}
   1748c:	push	{fp, lr}
   17490:	mov	fp, sp
   17494:	sub	sp, sp, #16
   17498:	str	r0, [fp, #-4]
   1749c:	str	r1, [sp, #8]
   174a0:	str	r2, [sp, #4]
   174a4:	ldr	r0, [fp, #-4]
   174a8:	ldr	r1, [sp, #8]
   174ac:	ldr	r2, [sp, #4]
   174b0:	bl	1cd98 <__assert_fail@plt+0xbcc0>
   174b4:	str	r0, [sp]
   174b8:	ldr	r0, [sp]
   174bc:	movw	r1, #0
   174c0:	cmp	r0, r1
   174c4:	bne	174f4 <__assert_fail@plt+0x641c>
   174c8:	ldr	r0, [fp, #-4]
   174cc:	movw	r1, #0
   174d0:	cmp	r0, r1
   174d4:	beq	174f0 <__assert_fail@plt+0x6418>
   174d8:	ldr	r0, [sp, #8]
   174dc:	cmp	r0, #0
   174e0:	beq	174f4 <__assert_fail@plt+0x641c>
   174e4:	ldr	r0, [sp, #4]
   174e8:	cmp	r0, #0
   174ec:	beq	174f4 <__assert_fail@plt+0x641c>
   174f0:	bl	1a238 <__assert_fail@plt+0x9160>
   174f4:	ldr	r0, [sp]
   174f8:	mov	sp, fp
   174fc:	pop	{fp, pc}
   17500:	push	{fp, lr}
   17504:	mov	fp, sp
   17508:	sub	sp, sp, #8
   1750c:	str	r0, [sp, #4]
   17510:	ldr	r0, [sp, #4]
   17514:	bl	1c53c <__assert_fail@plt+0xb464>
   17518:	bl	17524 <__assert_fail@plt+0x644c>
   1751c:	mov	sp, fp
   17520:	pop	{fp, pc}
   17524:	push	{fp, lr}
   17528:	mov	fp, sp
   1752c:	sub	sp, sp, #8
   17530:	str	r0, [sp, #4]
   17534:	ldr	r0, [sp, #4]
   17538:	movw	r1, #0
   1753c:	cmp	r0, r1
   17540:	bne	17548 <__assert_fail@plt+0x6470>
   17544:	bl	1a238 <__assert_fail@plt+0x9160>
   17548:	ldr	r0, [sp, #4]
   1754c:	mov	sp, fp
   17550:	pop	{fp, pc}
   17554:	push	{fp, lr}
   17558:	mov	fp, sp
   1755c:	sub	sp, sp, #8
   17560:	str	r0, [sp, #4]
   17564:	ldr	r0, [sp, #4]
   17568:	bl	1cad4 <__assert_fail@plt+0xb9fc>
   1756c:	bl	17524 <__assert_fail@plt+0x644c>
   17570:	mov	sp, fp
   17574:	pop	{fp, pc}
   17578:	push	{fp, lr}
   1757c:	mov	fp, sp
   17580:	sub	sp, sp, #8
   17584:	str	r0, [sp, #4]
   17588:	ldr	r0, [sp, #4]
   1758c:	bl	17500 <__assert_fail@plt+0x6428>
   17590:	mov	sp, fp
   17594:	pop	{fp, pc}
   17598:	push	{fp, lr}
   1759c:	mov	fp, sp
   175a0:	sub	sp, sp, #16
   175a4:	str	r0, [fp, #-4]
   175a8:	str	r1, [sp, #8]
   175ac:	ldr	r0, [fp, #-4]
   175b0:	ldr	r1, [sp, #8]
   175b4:	bl	1c5ac <__assert_fail@plt+0xb4d4>
   175b8:	str	r0, [sp, #4]
   175bc:	ldr	r0, [sp, #4]
   175c0:	movw	r1, #0
   175c4:	cmp	r0, r1
   175c8:	bne	175ec <__assert_fail@plt+0x6514>
   175cc:	ldr	r0, [fp, #-4]
   175d0:	movw	r1, #0
   175d4:	cmp	r0, r1
   175d8:	beq	175e8 <__assert_fail@plt+0x6510>
   175dc:	ldr	r0, [sp, #8]
   175e0:	cmp	r0, #0
   175e4:	beq	175ec <__assert_fail@plt+0x6514>
   175e8:	bl	1a238 <__assert_fail@plt+0x9160>
   175ec:	ldr	r0, [sp, #4]
   175f0:	mov	sp, fp
   175f4:	pop	{fp, pc}
   175f8:	push	{fp, lr}
   175fc:	mov	fp, sp
   17600:	sub	sp, sp, #8
   17604:	str	r0, [sp, #4]
   17608:	str	r1, [sp]
   1760c:	ldr	r0, [sp, #4]
   17610:	ldr	r1, [sp]
   17614:	bl	1cb14 <__assert_fail@plt+0xba3c>
   17618:	bl	17524 <__assert_fail@plt+0x644c>
   1761c:	mov	sp, fp
   17620:	pop	{fp, pc}
   17624:	push	{fp, lr}
   17628:	mov	fp, sp
   1762c:	sub	sp, sp, #16
   17630:	str	r0, [fp, #-4]
   17634:	str	r1, [sp, #8]
   17638:	str	r2, [sp, #4]
   1763c:	ldr	r0, [fp, #-4]
   17640:	ldr	r1, [sp, #8]
   17644:	ldr	r2, [sp, #4]
   17648:	bl	1cc0c <__assert_fail@plt+0xbb34>
   1764c:	bl	17524 <__assert_fail@plt+0x644c>
   17650:	mov	sp, fp
   17654:	pop	{fp, pc}
   17658:	push	{fp, lr}
   1765c:	mov	fp, sp
   17660:	sub	sp, sp, #8
   17664:	str	r0, [sp, #4]
   17668:	str	r1, [sp]
   1766c:	ldr	r1, [sp, #4]
   17670:	ldr	r2, [sp]
   17674:	movw	r0, #0
   17678:	bl	1748c <__assert_fail@plt+0x63b4>
   1767c:	mov	sp, fp
   17680:	pop	{fp, pc}
   17684:	push	{fp, lr}
   17688:	mov	fp, sp
   1768c:	sub	sp, sp, #8
   17690:	str	r0, [sp, #4]
   17694:	str	r1, [sp]
   17698:	ldr	r1, [sp, #4]
   1769c:	ldr	r2, [sp]
   176a0:	movw	r0, #0
   176a4:	bl	17624 <__assert_fail@plt+0x654c>
   176a8:	mov	sp, fp
   176ac:	pop	{fp, pc}
   176b0:	push	{fp, lr}
   176b4:	mov	fp, sp
   176b8:	sub	sp, sp, #8
   176bc:	str	r0, [sp, #4]
   176c0:	str	r1, [sp]
   176c4:	ldr	r0, [sp, #4]
   176c8:	ldr	r1, [sp]
   176cc:	movw	r2, #1
   176d0:	bl	176dc <__assert_fail@plt+0x6604>
   176d4:	mov	sp, fp
   176d8:	pop	{fp, pc}
   176dc:	push	{fp, lr}
   176e0:	mov	fp, sp
   176e4:	sub	sp, sp, #16
   176e8:	str	r0, [fp, #-4]
   176ec:	str	r1, [sp, #8]
   176f0:	str	r2, [sp, #4]
   176f4:	ldr	r0, [sp, #8]
   176f8:	ldr	r0, [r0]
   176fc:	str	r0, [sp]
   17700:	ldr	r0, [fp, #-4]
   17704:	movw	r1, #0
   17708:	cmp	r0, r1
   1770c:	bne	17758 <__assert_fail@plt+0x6680>
   17710:	ldr	r0, [sp]
   17714:	cmp	r0, #0
   17718:	bne	17754 <__assert_fail@plt+0x667c>
   1771c:	ldr	r0, [sp, #4]
   17720:	movw	r1, #64	; 0x40
   17724:	udiv	r0, r1, r0
   17728:	str	r0, [sp]
   1772c:	ldr	r0, [sp]
   17730:	cmp	r0, #0
   17734:	movw	r0, #0
   17738:	movne	r0, #1
   1773c:	mvn	r1, #0
   17740:	eor	r0, r0, r1
   17744:	and	r0, r0, #1
   17748:	ldr	r1, [sp]
   1774c:	add	r0, r1, r0
   17750:	str	r0, [sp]
   17754:	b	17788 <__assert_fail@plt+0x66b0>
   17758:	ldr	r0, [sp]
   1775c:	ldr	r1, [sp]
   17760:	lsr	r1, r1, #1
   17764:	add	r1, r1, #1
   17768:	adds	r0, r0, r1
   1776c:	mov	r1, #0
   17770:	adc	r1, r1, #0
   17774:	str	r0, [sp]
   17778:	tst	r1, #1
   1777c:	beq	17784 <__assert_fail@plt+0x66ac>
   17780:	bl	1a238 <__assert_fail@plt+0x9160>
   17784:	b	17788 <__assert_fail@plt+0x66b0>
   17788:	ldr	r0, [fp, #-4]
   1778c:	ldr	r1, [sp]
   17790:	ldr	r2, [sp, #4]
   17794:	bl	1748c <__assert_fail@plt+0x63b4>
   17798:	str	r0, [fp, #-4]
   1779c:	ldr	r0, [sp]
   177a0:	ldr	r1, [sp, #8]
   177a4:	str	r0, [r1]
   177a8:	ldr	r0, [fp, #-4]
   177ac:	mov	sp, fp
   177b0:	pop	{fp, pc}
   177b4:	push	{fp, lr}
   177b8:	mov	fp, sp
   177bc:	sub	sp, sp, #216	; 0xd8
   177c0:	ldr	ip, [fp, #8]
   177c4:	str	r0, [fp, #-4]
   177c8:	str	r1, [fp, #-8]
   177cc:	str	r2, [fp, #-12]
   177d0:	str	r3, [fp, #-16]
   177d4:	ldr	r0, [fp, #-8]
   177d8:	ldr	r0, [r0]
   177dc:	str	r0, [fp, #-20]	; 0xffffffec
   177e0:	ldr	r0, [fp, #-20]	; 0xffffffec
   177e4:	ldr	r1, [fp, #-20]	; 0xffffffec
   177e8:	asr	r1, r1, #1
   177ec:	add	r1, r0, r1
   177f0:	mov	r2, #1
   177f4:	cmp	r1, r0
   177f8:	movwvc	r2, #0
   177fc:	str	r1, [fp, #-24]	; 0xffffffe8
   17800:	tst	r2, #1
   17804:	beq	17810 <__assert_fail@plt+0x6738>
   17808:	ldr	r0, [pc, #4036]	; 187d4 <__assert_fail@plt+0x76fc>
   1780c:	str	r0, [fp, #-24]	; 0xffffffe8
   17810:	ldr	r0, [fp, #-16]
   17814:	movw	r1, #0
   17818:	cmp	r1, r0
   1781c:	bgt	17838 <__assert_fail@plt+0x6760>
   17820:	ldr	r0, [fp, #-16]
   17824:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17828:	cmp	r0, r1
   1782c:	bge	17838 <__assert_fail@plt+0x6760>
   17830:	ldr	r0, [fp, #-16]
   17834:	str	r0, [fp, #-24]	; 0xffffffe8
   17838:	b	17c10 <__assert_fail@plt+0x6b38>
   1783c:	b	17840 <__assert_fail@plt+0x6768>
   17840:	ldr	r0, [fp, #8]
   17844:	cmp	r0, #0
   17848:	bge	1795c <__assert_fail@plt+0x6884>
   1784c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17850:	cmp	r0, #0
   17854:	bge	178e0 <__assert_fail@plt+0x6808>
   17858:	b	1785c <__assert_fail@plt+0x6784>
   1785c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17860:	ldr	r1, [fp, #8]
   17864:	movw	r2, #127	; 0x7f
   17868:	sdiv	r1, r2, r1
   1786c:	cmp	r0, r1
   17870:	blt	179fc <__assert_fail@plt+0x6924>
   17874:	b	17a14 <__assert_fail@plt+0x693c>
   17878:	b	1787c <__assert_fail@plt+0x67a4>
   1787c:	ldr	r0, [pc, #4084]	; 18878 <__assert_fail@plt+0x77a0>
   17880:	ldr	r1, [fp, #8]
   17884:	cmp	r1, r0
   17888:	blt	178a0 <__assert_fail@plt+0x67c8>
   1788c:	b	178ac <__assert_fail@plt+0x67d4>
   17890:	ldr	r0, [fp, #8]
   17894:	movw	r1, #0
   17898:	cmp	r1, r0
   1789c:	bge	178ac <__assert_fail@plt+0x67d4>
   178a0:	movw	r0, #0
   178a4:	str	r0, [fp, #-36]	; 0xffffffdc
   178a8:	b	178c4 <__assert_fail@plt+0x67ec>
   178ac:	ldr	r0, [fp, #8]
   178b0:	movw	r1, #0
   178b4:	sub	r0, r1, r0
   178b8:	movw	r1, #127	; 0x7f
   178bc:	sdiv	r0, r1, r0
   178c0:	str	r0, [fp, #-36]	; 0xffffffdc
   178c4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   178c8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   178cc:	mvn	r2, #0
   178d0:	sub	r1, r2, r1
   178d4:	cmp	r0, r1
   178d8:	ble	179fc <__assert_fail@plt+0x6924>
   178dc:	b	17a14 <__assert_fail@plt+0x693c>
   178e0:	b	178e4 <__assert_fail@plt+0x680c>
   178e4:	b	17940 <__assert_fail@plt+0x6868>
   178e8:	b	17940 <__assert_fail@plt+0x6868>
   178ec:	ldr	r0, [fp, #8]
   178f0:	cmn	r0, #1
   178f4:	bne	17940 <__assert_fail@plt+0x6868>
   178f8:	b	178fc <__assert_fail@plt+0x6824>
   178fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17900:	mvn	r1, #127	; 0x7f
   17904:	add	r0, r0, r1
   17908:	movw	r1, #0
   1790c:	cmp	r1, r0
   17910:	blt	179fc <__assert_fail@plt+0x6924>
   17914:	b	17a14 <__assert_fail@plt+0x693c>
   17918:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1791c:	movw	r1, #0
   17920:	cmp	r1, r0
   17924:	bge	17a14 <__assert_fail@plt+0x693c>
   17928:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1792c:	sub	r0, r0, #1
   17930:	movw	r1, #127	; 0x7f
   17934:	cmp	r1, r0
   17938:	blt	179fc <__assert_fail@plt+0x6924>
   1793c:	b	17a14 <__assert_fail@plt+0x693c>
   17940:	ldr	r0, [fp, #8]
   17944:	mvn	r1, #127	; 0x7f
   17948:	sdiv	r0, r1, r0
   1794c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17950:	cmp	r0, r1
   17954:	blt	179fc <__assert_fail@plt+0x6924>
   17958:	b	17a14 <__assert_fail@plt+0x693c>
   1795c:	ldr	r0, [fp, #8]
   17960:	cmp	r0, #0
   17964:	bne	1796c <__assert_fail@plt+0x6894>
   17968:	b	17a14 <__assert_fail@plt+0x693c>
   1796c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17970:	cmp	r0, #0
   17974:	bge	179e4 <__assert_fail@plt+0x690c>
   17978:	b	1797c <__assert_fail@plt+0x68a4>
   1797c:	b	179c8 <__assert_fail@plt+0x68f0>
   17980:	b	179c8 <__assert_fail@plt+0x68f0>
   17984:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17988:	cmn	r0, #1
   1798c:	bne	179c8 <__assert_fail@plt+0x68f0>
   17990:	b	17994 <__assert_fail@plt+0x68bc>
   17994:	ldr	r0, [fp, #8]
   17998:	mvn	r1, #127	; 0x7f
   1799c:	add	r0, r0, r1
   179a0:	movw	r1, #0
   179a4:	cmp	r1, r0
   179a8:	blt	179fc <__assert_fail@plt+0x6924>
   179ac:	b	17a14 <__assert_fail@plt+0x693c>
   179b0:	ldr	r0, [fp, #8]
   179b4:	sub	r0, r0, #1
   179b8:	movw	r1, #127	; 0x7f
   179bc:	cmp	r1, r0
   179c0:	blt	179fc <__assert_fail@plt+0x6924>
   179c4:	b	17a14 <__assert_fail@plt+0x693c>
   179c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   179cc:	mvn	r1, #127	; 0x7f
   179d0:	sdiv	r0, r1, r0
   179d4:	ldr	r1, [fp, #8]
   179d8:	cmp	r0, r1
   179dc:	blt	179fc <__assert_fail@plt+0x6924>
   179e0:	b	17a14 <__assert_fail@plt+0x693c>
   179e4:	ldr	r0, [fp, #8]
   179e8:	movw	r1, #127	; 0x7f
   179ec:	sdiv	r0, r1, r0
   179f0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   179f4:	cmp	r0, r1
   179f8:	bge	17a14 <__assert_fail@plt+0x693c>
   179fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17a00:	ldr	r1, [fp, #8]
   17a04:	mul	r0, r0, r1
   17a08:	sxtb	r0, r0
   17a0c:	str	r0, [fp, #-28]	; 0xffffffe4
   17a10:	b	18bd8 <__assert_fail@plt+0x7b00>
   17a14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17a18:	ldr	r1, [fp, #8]
   17a1c:	mul	r0, r0, r1
   17a20:	sxtb	r0, r0
   17a24:	str	r0, [fp, #-28]	; 0xffffffe4
   17a28:	b	18be4 <__assert_fail@plt+0x7b0c>
   17a2c:	ldr	r0, [fp, #8]
   17a30:	cmp	r0, #0
   17a34:	bge	17b44 <__assert_fail@plt+0x6a6c>
   17a38:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17a3c:	cmp	r0, #0
   17a40:	bge	17acc <__assert_fail@plt+0x69f4>
   17a44:	b	17a48 <__assert_fail@plt+0x6970>
   17a48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17a4c:	ldr	r1, [fp, #8]
   17a50:	movw	r2, #255	; 0xff
   17a54:	sdiv	r1, r2, r1
   17a58:	cmp	r0, r1
   17a5c:	blt	17be0 <__assert_fail@plt+0x6b08>
   17a60:	b	17bf8 <__assert_fail@plt+0x6b20>
   17a64:	b	17a68 <__assert_fail@plt+0x6990>
   17a68:	ldr	r0, [pc, #3592]	; 18878 <__assert_fail@plt+0x77a0>
   17a6c:	ldr	r1, [fp, #8]
   17a70:	cmp	r1, r0
   17a74:	blt	17a8c <__assert_fail@plt+0x69b4>
   17a78:	b	17a98 <__assert_fail@plt+0x69c0>
   17a7c:	ldr	r0, [fp, #8]
   17a80:	movw	r1, #0
   17a84:	cmp	r1, r0
   17a88:	bge	17a98 <__assert_fail@plt+0x69c0>
   17a8c:	movw	r0, #0
   17a90:	str	r0, [fp, #-40]	; 0xffffffd8
   17a94:	b	17ab0 <__assert_fail@plt+0x69d8>
   17a98:	ldr	r0, [fp, #8]
   17a9c:	movw	r1, #0
   17aa0:	sub	r0, r1, r0
   17aa4:	movw	r1, #255	; 0xff
   17aa8:	sdiv	r0, r1, r0
   17aac:	str	r0, [fp, #-40]	; 0xffffffd8
   17ab0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   17ab4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17ab8:	mvn	r2, #0
   17abc:	sub	r1, r2, r1
   17ac0:	cmp	r0, r1
   17ac4:	ble	17be0 <__assert_fail@plt+0x6b08>
   17ac8:	b	17bf8 <__assert_fail@plt+0x6b20>
   17acc:	b	17ad0 <__assert_fail@plt+0x69f8>
   17ad0:	b	17b28 <__assert_fail@plt+0x6a50>
   17ad4:	b	17b28 <__assert_fail@plt+0x6a50>
   17ad8:	ldr	r0, [fp, #8]
   17adc:	cmn	r0, #1
   17ae0:	bne	17b28 <__assert_fail@plt+0x6a50>
   17ae4:	b	17ae8 <__assert_fail@plt+0x6a10>
   17ae8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17aec:	add	r0, r0, #0
   17af0:	movw	r1, #0
   17af4:	cmp	r1, r0
   17af8:	blt	17be0 <__assert_fail@plt+0x6b08>
   17afc:	b	17bf8 <__assert_fail@plt+0x6b20>
   17b00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17b04:	movw	r1, #0
   17b08:	cmp	r1, r0
   17b0c:	bge	17bf8 <__assert_fail@plt+0x6b20>
   17b10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17b14:	sub	r0, r0, #1
   17b18:	mvn	r1, #0
   17b1c:	cmp	r1, r0
   17b20:	blt	17be0 <__assert_fail@plt+0x6b08>
   17b24:	b	17bf8 <__assert_fail@plt+0x6b20>
   17b28:	ldr	r0, [fp, #8]
   17b2c:	movw	r1, #0
   17b30:	sdiv	r0, r1, r0
   17b34:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17b38:	cmp	r0, r1
   17b3c:	blt	17be0 <__assert_fail@plt+0x6b08>
   17b40:	b	17bf8 <__assert_fail@plt+0x6b20>
   17b44:	ldr	r0, [fp, #8]
   17b48:	cmp	r0, #0
   17b4c:	bne	17b54 <__assert_fail@plt+0x6a7c>
   17b50:	b	17bf8 <__assert_fail@plt+0x6b20>
   17b54:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17b58:	cmp	r0, #0
   17b5c:	bge	17bc8 <__assert_fail@plt+0x6af0>
   17b60:	b	17b64 <__assert_fail@plt+0x6a8c>
   17b64:	b	17bac <__assert_fail@plt+0x6ad4>
   17b68:	b	17bac <__assert_fail@plt+0x6ad4>
   17b6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17b70:	cmn	r0, #1
   17b74:	bne	17bac <__assert_fail@plt+0x6ad4>
   17b78:	b	17b7c <__assert_fail@plt+0x6aa4>
   17b7c:	ldr	r0, [fp, #8]
   17b80:	add	r0, r0, #0
   17b84:	movw	r1, #0
   17b88:	cmp	r1, r0
   17b8c:	blt	17be0 <__assert_fail@plt+0x6b08>
   17b90:	b	17bf8 <__assert_fail@plt+0x6b20>
   17b94:	ldr	r0, [fp, #8]
   17b98:	sub	r0, r0, #1
   17b9c:	mvn	r1, #0
   17ba0:	cmp	r1, r0
   17ba4:	blt	17be0 <__assert_fail@plt+0x6b08>
   17ba8:	b	17bf8 <__assert_fail@plt+0x6b20>
   17bac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17bb0:	movw	r1, #0
   17bb4:	sdiv	r0, r1, r0
   17bb8:	ldr	r1, [fp, #8]
   17bbc:	cmp	r0, r1
   17bc0:	blt	17be0 <__assert_fail@plt+0x6b08>
   17bc4:	b	17bf8 <__assert_fail@plt+0x6b20>
   17bc8:	ldr	r0, [fp, #8]
   17bcc:	movw	r1, #255	; 0xff
   17bd0:	sdiv	r0, r1, r0
   17bd4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17bd8:	cmp	r0, r1
   17bdc:	bge	17bf8 <__assert_fail@plt+0x6b20>
   17be0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17be4:	ldr	r1, [fp, #8]
   17be8:	mul	r0, r0, r1
   17bec:	and	r0, r0, #255	; 0xff
   17bf0:	str	r0, [fp, #-28]	; 0xffffffe4
   17bf4:	b	18bd8 <__assert_fail@plt+0x7b00>
   17bf8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17bfc:	ldr	r1, [fp, #8]
   17c00:	mul	r0, r0, r1
   17c04:	and	r0, r0, #255	; 0xff
   17c08:	str	r0, [fp, #-28]	; 0xffffffe4
   17c0c:	b	18be4 <__assert_fail@plt+0x7b0c>
   17c10:	b	17fe8 <__assert_fail@plt+0x6f10>
   17c14:	b	17c18 <__assert_fail@plt+0x6b40>
   17c18:	ldr	r0, [fp, #8]
   17c1c:	cmp	r0, #0
   17c20:	bge	17d34 <__assert_fail@plt+0x6c5c>
   17c24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17c28:	cmp	r0, #0
   17c2c:	bge	17cb8 <__assert_fail@plt+0x6be0>
   17c30:	b	17c34 <__assert_fail@plt+0x6b5c>
   17c34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17c38:	ldr	r1, [fp, #8]
   17c3c:	movw	r2, #32767	; 0x7fff
   17c40:	sdiv	r1, r2, r1
   17c44:	cmp	r0, r1
   17c48:	blt	17dd4 <__assert_fail@plt+0x6cfc>
   17c4c:	b	17dec <__assert_fail@plt+0x6d14>
   17c50:	b	17c54 <__assert_fail@plt+0x6b7c>
   17c54:	ldr	r0, [pc, #3100]	; 18878 <__assert_fail@plt+0x77a0>
   17c58:	ldr	r1, [fp, #8]
   17c5c:	cmp	r1, r0
   17c60:	blt	17c78 <__assert_fail@plt+0x6ba0>
   17c64:	b	17c84 <__assert_fail@plt+0x6bac>
   17c68:	ldr	r0, [fp, #8]
   17c6c:	movw	r1, #0
   17c70:	cmp	r1, r0
   17c74:	bge	17c84 <__assert_fail@plt+0x6bac>
   17c78:	movw	r0, #0
   17c7c:	str	r0, [fp, #-44]	; 0xffffffd4
   17c80:	b	17c9c <__assert_fail@plt+0x6bc4>
   17c84:	ldr	r0, [fp, #8]
   17c88:	movw	r1, #0
   17c8c:	sub	r0, r1, r0
   17c90:	movw	r1, #32767	; 0x7fff
   17c94:	sdiv	r0, r1, r0
   17c98:	str	r0, [fp, #-44]	; 0xffffffd4
   17c9c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   17ca0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17ca4:	mvn	r2, #0
   17ca8:	sub	r1, r2, r1
   17cac:	cmp	r0, r1
   17cb0:	ble	17dd4 <__assert_fail@plt+0x6cfc>
   17cb4:	b	17dec <__assert_fail@plt+0x6d14>
   17cb8:	b	17cbc <__assert_fail@plt+0x6be4>
   17cbc:	b	17d18 <__assert_fail@plt+0x6c40>
   17cc0:	b	17d18 <__assert_fail@plt+0x6c40>
   17cc4:	ldr	r0, [fp, #8]
   17cc8:	cmn	r0, #1
   17ccc:	bne	17d18 <__assert_fail@plt+0x6c40>
   17cd0:	b	17cd4 <__assert_fail@plt+0x6bfc>
   17cd4:	ldr	r0, [pc, #4068]	; 18cc0 <__assert_fail@plt+0x7be8>
   17cd8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17cdc:	add	r0, r1, r0
   17ce0:	movw	r1, #0
   17ce4:	cmp	r1, r0
   17ce8:	blt	17dd4 <__assert_fail@plt+0x6cfc>
   17cec:	b	17dec <__assert_fail@plt+0x6d14>
   17cf0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17cf4:	movw	r1, #0
   17cf8:	cmp	r1, r0
   17cfc:	bge	17dec <__assert_fail@plt+0x6d14>
   17d00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17d04:	sub	r0, r0, #1
   17d08:	movw	r1, #32767	; 0x7fff
   17d0c:	cmp	r1, r0
   17d10:	blt	17dd4 <__assert_fail@plt+0x6cfc>
   17d14:	b	17dec <__assert_fail@plt+0x6d14>
   17d18:	ldr	r0, [pc, #4000]	; 18cc0 <__assert_fail@plt+0x7be8>
   17d1c:	ldr	r1, [fp, #8]
   17d20:	sdiv	r0, r0, r1
   17d24:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17d28:	cmp	r0, r1
   17d2c:	blt	17dd4 <__assert_fail@plt+0x6cfc>
   17d30:	b	17dec <__assert_fail@plt+0x6d14>
   17d34:	ldr	r0, [fp, #8]
   17d38:	cmp	r0, #0
   17d3c:	bne	17d44 <__assert_fail@plt+0x6c6c>
   17d40:	b	17dec <__assert_fail@plt+0x6d14>
   17d44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17d48:	cmp	r0, #0
   17d4c:	bge	17dbc <__assert_fail@plt+0x6ce4>
   17d50:	b	17d54 <__assert_fail@plt+0x6c7c>
   17d54:	b	17da0 <__assert_fail@plt+0x6cc8>
   17d58:	b	17da0 <__assert_fail@plt+0x6cc8>
   17d5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17d60:	cmn	r0, #1
   17d64:	bne	17da0 <__assert_fail@plt+0x6cc8>
   17d68:	b	17d6c <__assert_fail@plt+0x6c94>
   17d6c:	ldr	r0, [pc, #3916]	; 18cc0 <__assert_fail@plt+0x7be8>
   17d70:	ldr	r1, [fp, #8]
   17d74:	add	r0, r1, r0
   17d78:	movw	r1, #0
   17d7c:	cmp	r1, r0
   17d80:	blt	17dd4 <__assert_fail@plt+0x6cfc>
   17d84:	b	17dec <__assert_fail@plt+0x6d14>
   17d88:	ldr	r0, [fp, #8]
   17d8c:	sub	r0, r0, #1
   17d90:	movw	r1, #32767	; 0x7fff
   17d94:	cmp	r1, r0
   17d98:	blt	17dd4 <__assert_fail@plt+0x6cfc>
   17d9c:	b	17dec <__assert_fail@plt+0x6d14>
   17da0:	ldr	r0, [pc, #3864]	; 18cc0 <__assert_fail@plt+0x7be8>
   17da4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17da8:	sdiv	r0, r0, r1
   17dac:	ldr	r1, [fp, #8]
   17db0:	cmp	r0, r1
   17db4:	blt	17dd4 <__assert_fail@plt+0x6cfc>
   17db8:	b	17dec <__assert_fail@plt+0x6d14>
   17dbc:	ldr	r0, [fp, #8]
   17dc0:	movw	r1, #32767	; 0x7fff
   17dc4:	sdiv	r0, r1, r0
   17dc8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17dcc:	cmp	r0, r1
   17dd0:	bge	17dec <__assert_fail@plt+0x6d14>
   17dd4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17dd8:	ldr	r1, [fp, #8]
   17ddc:	mul	r0, r0, r1
   17de0:	sxth	r0, r0
   17de4:	str	r0, [fp, #-28]	; 0xffffffe4
   17de8:	b	18bd8 <__assert_fail@plt+0x7b00>
   17dec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17df0:	ldr	r1, [fp, #8]
   17df4:	mul	r0, r0, r1
   17df8:	sxth	r0, r0
   17dfc:	str	r0, [fp, #-28]	; 0xffffffe4
   17e00:	b	18be4 <__assert_fail@plt+0x7b0c>
   17e04:	ldr	r0, [fp, #8]
   17e08:	cmp	r0, #0
   17e0c:	bge	17f1c <__assert_fail@plt+0x6e44>
   17e10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17e14:	cmp	r0, #0
   17e18:	bge	17ea4 <__assert_fail@plt+0x6dcc>
   17e1c:	b	17e20 <__assert_fail@plt+0x6d48>
   17e20:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17e24:	ldr	r1, [fp, #8]
   17e28:	movw	r2, #65535	; 0xffff
   17e2c:	sdiv	r1, r2, r1
   17e30:	cmp	r0, r1
   17e34:	blt	17fb8 <__assert_fail@plt+0x6ee0>
   17e38:	b	17fd0 <__assert_fail@plt+0x6ef8>
   17e3c:	b	17e40 <__assert_fail@plt+0x6d68>
   17e40:	ldr	r0, [pc, #2608]	; 18878 <__assert_fail@plt+0x77a0>
   17e44:	ldr	r1, [fp, #8]
   17e48:	cmp	r1, r0
   17e4c:	blt	17e64 <__assert_fail@plt+0x6d8c>
   17e50:	b	17e70 <__assert_fail@plt+0x6d98>
   17e54:	ldr	r0, [fp, #8]
   17e58:	movw	r1, #0
   17e5c:	cmp	r1, r0
   17e60:	bge	17e70 <__assert_fail@plt+0x6d98>
   17e64:	movw	r0, #0
   17e68:	str	r0, [fp, #-48]	; 0xffffffd0
   17e6c:	b	17e88 <__assert_fail@plt+0x6db0>
   17e70:	ldr	r0, [fp, #8]
   17e74:	movw	r1, #0
   17e78:	sub	r0, r1, r0
   17e7c:	movw	r1, #65535	; 0xffff
   17e80:	sdiv	r0, r1, r0
   17e84:	str	r0, [fp, #-48]	; 0xffffffd0
   17e88:	ldr	r0, [fp, #-48]	; 0xffffffd0
   17e8c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17e90:	mvn	r2, #0
   17e94:	sub	r1, r2, r1
   17e98:	cmp	r0, r1
   17e9c:	ble	17fb8 <__assert_fail@plt+0x6ee0>
   17ea0:	b	17fd0 <__assert_fail@plt+0x6ef8>
   17ea4:	b	17ea8 <__assert_fail@plt+0x6dd0>
   17ea8:	b	17f00 <__assert_fail@plt+0x6e28>
   17eac:	b	17f00 <__assert_fail@plt+0x6e28>
   17eb0:	ldr	r0, [fp, #8]
   17eb4:	cmn	r0, #1
   17eb8:	bne	17f00 <__assert_fail@plt+0x6e28>
   17ebc:	b	17ec0 <__assert_fail@plt+0x6de8>
   17ec0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17ec4:	add	r0, r0, #0
   17ec8:	movw	r1, #0
   17ecc:	cmp	r1, r0
   17ed0:	blt	17fb8 <__assert_fail@plt+0x6ee0>
   17ed4:	b	17fd0 <__assert_fail@plt+0x6ef8>
   17ed8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17edc:	movw	r1, #0
   17ee0:	cmp	r1, r0
   17ee4:	bge	17fd0 <__assert_fail@plt+0x6ef8>
   17ee8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17eec:	sub	r0, r0, #1
   17ef0:	mvn	r1, #0
   17ef4:	cmp	r1, r0
   17ef8:	blt	17fb8 <__assert_fail@plt+0x6ee0>
   17efc:	b	17fd0 <__assert_fail@plt+0x6ef8>
   17f00:	ldr	r0, [fp, #8]
   17f04:	movw	r1, #0
   17f08:	sdiv	r0, r1, r0
   17f0c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17f10:	cmp	r0, r1
   17f14:	blt	17fb8 <__assert_fail@plt+0x6ee0>
   17f18:	b	17fd0 <__assert_fail@plt+0x6ef8>
   17f1c:	ldr	r0, [fp, #8]
   17f20:	cmp	r0, #0
   17f24:	bne	17f2c <__assert_fail@plt+0x6e54>
   17f28:	b	17fd0 <__assert_fail@plt+0x6ef8>
   17f2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17f30:	cmp	r0, #0
   17f34:	bge	17fa0 <__assert_fail@plt+0x6ec8>
   17f38:	b	17f3c <__assert_fail@plt+0x6e64>
   17f3c:	b	17f84 <__assert_fail@plt+0x6eac>
   17f40:	b	17f84 <__assert_fail@plt+0x6eac>
   17f44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17f48:	cmn	r0, #1
   17f4c:	bne	17f84 <__assert_fail@plt+0x6eac>
   17f50:	b	17f54 <__assert_fail@plt+0x6e7c>
   17f54:	ldr	r0, [fp, #8]
   17f58:	add	r0, r0, #0
   17f5c:	movw	r1, #0
   17f60:	cmp	r1, r0
   17f64:	blt	17fb8 <__assert_fail@plt+0x6ee0>
   17f68:	b	17fd0 <__assert_fail@plt+0x6ef8>
   17f6c:	ldr	r0, [fp, #8]
   17f70:	sub	r0, r0, #1
   17f74:	mvn	r1, #0
   17f78:	cmp	r1, r0
   17f7c:	blt	17fb8 <__assert_fail@plt+0x6ee0>
   17f80:	b	17fd0 <__assert_fail@plt+0x6ef8>
   17f84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17f88:	movw	r1, #0
   17f8c:	sdiv	r0, r1, r0
   17f90:	ldr	r1, [fp, #8]
   17f94:	cmp	r0, r1
   17f98:	blt	17fb8 <__assert_fail@plt+0x6ee0>
   17f9c:	b	17fd0 <__assert_fail@plt+0x6ef8>
   17fa0:	ldr	r0, [fp, #8]
   17fa4:	movw	r1, #65535	; 0xffff
   17fa8:	sdiv	r0, r1, r0
   17fac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17fb0:	cmp	r0, r1
   17fb4:	bge	17fd0 <__assert_fail@plt+0x6ef8>
   17fb8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17fbc:	ldr	r1, [fp, #8]
   17fc0:	mul	r0, r0, r1
   17fc4:	uxth	r0, r0
   17fc8:	str	r0, [fp, #-28]	; 0xffffffe4
   17fcc:	b	18bd8 <__assert_fail@plt+0x7b00>
   17fd0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17fd4:	ldr	r1, [fp, #8]
   17fd8:	mul	r0, r0, r1
   17fdc:	uxth	r0, r0
   17fe0:	str	r0, [fp, #-28]	; 0xffffffe4
   17fe4:	b	18be4 <__assert_fail@plt+0x7b0c>
   17fe8:	b	17fec <__assert_fail@plt+0x6f14>
   17fec:	b	17ff0 <__assert_fail@plt+0x6f18>
   17ff0:	ldr	r0, [fp, #8]
   17ff4:	cmp	r0, #0
   17ff8:	bge	180fc <__assert_fail@plt+0x7024>
   17ffc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18000:	cmp	r0, #0
   18004:	bge	18090 <__assert_fail@plt+0x6fb8>
   18008:	b	1800c <__assert_fail@plt+0x6f34>
   1800c:	ldr	r0, [pc, #1984]	; 187d4 <__assert_fail@plt+0x76fc>
   18010:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18014:	ldr	r2, [fp, #8]
   18018:	sdiv	r0, r0, r2
   1801c:	cmp	r1, r0
   18020:	blt	1818c <__assert_fail@plt+0x70b4>
   18024:	b	181a0 <__assert_fail@plt+0x70c8>
   18028:	b	1802c <__assert_fail@plt+0x6f54>
   1802c:	ldr	r0, [pc, #2116]	; 18878 <__assert_fail@plt+0x77a0>
   18030:	ldr	r1, [fp, #8]
   18034:	cmp	r1, r0
   18038:	blt	18050 <__assert_fail@plt+0x6f78>
   1803c:	b	1805c <__assert_fail@plt+0x6f84>
   18040:	ldr	r0, [fp, #8]
   18044:	movw	r1, #0
   18048:	cmp	r1, r0
   1804c:	bge	1805c <__assert_fail@plt+0x6f84>
   18050:	movw	r0, #0
   18054:	str	r0, [fp, #-52]	; 0xffffffcc
   18058:	b	18074 <__assert_fail@plt+0x6f9c>
   1805c:	ldr	r0, [pc, #1904]	; 187d4 <__assert_fail@plt+0x76fc>
   18060:	ldr	r1, [fp, #8]
   18064:	movw	r2, #0
   18068:	sub	r1, r2, r1
   1806c:	sdiv	r0, r0, r1
   18070:	str	r0, [fp, #-52]	; 0xffffffcc
   18074:	ldr	r0, [fp, #-52]	; 0xffffffcc
   18078:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1807c:	mvn	r2, #0
   18080:	sub	r1, r2, r1
   18084:	cmp	r0, r1
   18088:	ble	1818c <__assert_fail@plt+0x70b4>
   1808c:	b	181a0 <__assert_fail@plt+0x70c8>
   18090:	ldr	r0, [fp, #8]
   18094:	cmn	r0, #1
   18098:	bne	180e0 <__assert_fail@plt+0x7008>
   1809c:	b	180a0 <__assert_fail@plt+0x6fc8>
   180a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   180a4:	add	r0, r0, #-2147483648	; 0x80000000
   180a8:	movw	r1, #0
   180ac:	cmp	r1, r0
   180b0:	blt	1818c <__assert_fail@plt+0x70b4>
   180b4:	b	181a0 <__assert_fail@plt+0x70c8>
   180b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   180bc:	movw	r1, #0
   180c0:	cmp	r1, r0
   180c4:	bge	181a0 <__assert_fail@plt+0x70c8>
   180c8:	ldr	r0, [pc, #1796]	; 187d4 <__assert_fail@plt+0x76fc>
   180cc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   180d0:	sub	r1, r1, #1
   180d4:	cmp	r0, r1
   180d8:	blt	1818c <__assert_fail@plt+0x70b4>
   180dc:	b	181a0 <__assert_fail@plt+0x70c8>
   180e0:	ldr	r0, [pc, #4080]	; 190d8 <__assert_fail@plt+0x8000>
   180e4:	ldr	r1, [fp, #8]
   180e8:	sdiv	r0, r0, r1
   180ec:	ldr	r1, [fp, #-24]	; 0xffffffe8
   180f0:	cmp	r0, r1
   180f4:	blt	1818c <__assert_fail@plt+0x70b4>
   180f8:	b	181a0 <__assert_fail@plt+0x70c8>
   180fc:	ldr	r0, [fp, #8]
   18100:	cmp	r0, #0
   18104:	bne	1810c <__assert_fail@plt+0x7034>
   18108:	b	181a0 <__assert_fail@plt+0x70c8>
   1810c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18110:	cmp	r0, #0
   18114:	bge	18174 <__assert_fail@plt+0x709c>
   18118:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1811c:	cmn	r0, #1
   18120:	bne	18158 <__assert_fail@plt+0x7080>
   18124:	b	18128 <__assert_fail@plt+0x7050>
   18128:	ldr	r0, [fp, #8]
   1812c:	add	r0, r0, #-2147483648	; 0x80000000
   18130:	movw	r1, #0
   18134:	cmp	r1, r0
   18138:	blt	1818c <__assert_fail@plt+0x70b4>
   1813c:	b	181a0 <__assert_fail@plt+0x70c8>
   18140:	ldr	r0, [pc, #1676]	; 187d4 <__assert_fail@plt+0x76fc>
   18144:	ldr	r1, [fp, #8]
   18148:	sub	r1, r1, #1
   1814c:	cmp	r0, r1
   18150:	blt	1818c <__assert_fail@plt+0x70b4>
   18154:	b	181a0 <__assert_fail@plt+0x70c8>
   18158:	ldr	r0, [pc, #3960]	; 190d8 <__assert_fail@plt+0x8000>
   1815c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18160:	sdiv	r0, r0, r1
   18164:	ldr	r1, [fp, #8]
   18168:	cmp	r0, r1
   1816c:	blt	1818c <__assert_fail@plt+0x70b4>
   18170:	b	181a0 <__assert_fail@plt+0x70c8>
   18174:	ldr	r0, [pc, #1624]	; 187d4 <__assert_fail@plt+0x76fc>
   18178:	ldr	r1, [fp, #8]
   1817c:	sdiv	r0, r0, r1
   18180:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18184:	cmp	r0, r1
   18188:	bge	181a0 <__assert_fail@plt+0x70c8>
   1818c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18190:	ldr	r1, [fp, #8]
   18194:	mul	r0, r0, r1
   18198:	str	r0, [fp, #-28]	; 0xffffffe4
   1819c:	b	18bd8 <__assert_fail@plt+0x7b00>
   181a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   181a4:	ldr	r1, [fp, #8]
   181a8:	mul	r0, r0, r1
   181ac:	str	r0, [fp, #-28]	; 0xffffffe4
   181b0:	b	18be4 <__assert_fail@plt+0x7b0c>
   181b4:	ldr	r0, [fp, #8]
   181b8:	cmp	r0, #0
   181bc:	bge	182cc <__assert_fail@plt+0x71f4>
   181c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   181c4:	cmp	r0, #0
   181c8:	bge	18254 <__assert_fail@plt+0x717c>
   181cc:	b	181ec <__assert_fail@plt+0x7114>
   181d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   181d4:	ldr	r1, [fp, #8]
   181d8:	mvn	r2, #0
   181dc:	udiv	r1, r2, r1
   181e0:	cmp	r0, r1
   181e4:	bcc	18368 <__assert_fail@plt+0x7290>
   181e8:	b	1837c <__assert_fail@plt+0x72a4>
   181ec:	b	181f0 <__assert_fail@plt+0x7118>
   181f0:	ldr	r0, [pc, #1664]	; 18878 <__assert_fail@plt+0x77a0>
   181f4:	ldr	r1, [fp, #8]
   181f8:	cmp	r1, r0
   181fc:	blt	18214 <__assert_fail@plt+0x713c>
   18200:	b	18220 <__assert_fail@plt+0x7148>
   18204:	ldr	r0, [fp, #8]
   18208:	movw	r1, #0
   1820c:	cmp	r1, r0
   18210:	bge	18220 <__assert_fail@plt+0x7148>
   18214:	movw	r0, #1
   18218:	str	r0, [fp, #-56]	; 0xffffffc8
   1821c:	b	18238 <__assert_fail@plt+0x7160>
   18220:	ldr	r0, [fp, #8]
   18224:	movw	r1, #0
   18228:	sub	r0, r1, r0
   1822c:	mvn	r1, #0
   18230:	udiv	r0, r1, r0
   18234:	str	r0, [fp, #-56]	; 0xffffffc8
   18238:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1823c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18240:	mvn	r2, #0
   18244:	sub	r1, r2, r1
   18248:	cmp	r0, r1
   1824c:	bls	18368 <__assert_fail@plt+0x7290>
   18250:	b	1837c <__assert_fail@plt+0x72a4>
   18254:	b	18258 <__assert_fail@plt+0x7180>
   18258:	b	182b0 <__assert_fail@plt+0x71d8>
   1825c:	b	182b0 <__assert_fail@plt+0x71d8>
   18260:	ldr	r0, [fp, #8]
   18264:	cmn	r0, #1
   18268:	bne	182b0 <__assert_fail@plt+0x71d8>
   1826c:	b	18270 <__assert_fail@plt+0x7198>
   18270:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18274:	add	r0, r0, #0
   18278:	movw	r1, #0
   1827c:	cmp	r1, r0
   18280:	blt	18368 <__assert_fail@plt+0x7290>
   18284:	b	1837c <__assert_fail@plt+0x72a4>
   18288:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1828c:	movw	r1, #0
   18290:	cmp	r1, r0
   18294:	bge	1837c <__assert_fail@plt+0x72a4>
   18298:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1829c:	sub	r0, r0, #1
   182a0:	mvn	r1, #0
   182a4:	cmp	r1, r0
   182a8:	blt	18368 <__assert_fail@plt+0x7290>
   182ac:	b	1837c <__assert_fail@plt+0x72a4>
   182b0:	ldr	r0, [fp, #8]
   182b4:	movw	r1, #0
   182b8:	sdiv	r0, r1, r0
   182bc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   182c0:	cmp	r0, r1
   182c4:	blt	18368 <__assert_fail@plt+0x7290>
   182c8:	b	1837c <__assert_fail@plt+0x72a4>
   182cc:	ldr	r0, [fp, #8]
   182d0:	cmp	r0, #0
   182d4:	bne	182dc <__assert_fail@plt+0x7204>
   182d8:	b	1837c <__assert_fail@plt+0x72a4>
   182dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   182e0:	cmp	r0, #0
   182e4:	bge	18350 <__assert_fail@plt+0x7278>
   182e8:	b	182ec <__assert_fail@plt+0x7214>
   182ec:	b	18334 <__assert_fail@plt+0x725c>
   182f0:	b	18334 <__assert_fail@plt+0x725c>
   182f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   182f8:	cmn	r0, #1
   182fc:	bne	18334 <__assert_fail@plt+0x725c>
   18300:	b	18304 <__assert_fail@plt+0x722c>
   18304:	ldr	r0, [fp, #8]
   18308:	add	r0, r0, #0
   1830c:	movw	r1, #0
   18310:	cmp	r1, r0
   18314:	blt	18368 <__assert_fail@plt+0x7290>
   18318:	b	1837c <__assert_fail@plt+0x72a4>
   1831c:	ldr	r0, [fp, #8]
   18320:	sub	r0, r0, #1
   18324:	mvn	r1, #0
   18328:	cmp	r1, r0
   1832c:	blt	18368 <__assert_fail@plt+0x7290>
   18330:	b	1837c <__assert_fail@plt+0x72a4>
   18334:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18338:	movw	r1, #0
   1833c:	sdiv	r0, r1, r0
   18340:	ldr	r1, [fp, #8]
   18344:	cmp	r0, r1
   18348:	blt	18368 <__assert_fail@plt+0x7290>
   1834c:	b	1837c <__assert_fail@plt+0x72a4>
   18350:	ldr	r0, [fp, #8]
   18354:	mvn	r1, #0
   18358:	udiv	r0, r1, r0
   1835c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18360:	cmp	r0, r1
   18364:	bcs	1837c <__assert_fail@plt+0x72a4>
   18368:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1836c:	ldr	r1, [fp, #8]
   18370:	mul	r0, r0, r1
   18374:	str	r0, [fp, #-28]	; 0xffffffe4
   18378:	b	18bd8 <__assert_fail@plt+0x7b00>
   1837c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18380:	ldr	r1, [fp, #8]
   18384:	mul	r0, r0, r1
   18388:	str	r0, [fp, #-28]	; 0xffffffe4
   1838c:	b	18be4 <__assert_fail@plt+0x7b0c>
   18390:	b	18394 <__assert_fail@plt+0x72bc>
   18394:	b	18398 <__assert_fail@plt+0x72c0>
   18398:	ldr	r0, [fp, #8]
   1839c:	cmp	r0, #0
   183a0:	bge	184a4 <__assert_fail@plt+0x73cc>
   183a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   183a8:	cmp	r0, #0
   183ac:	bge	18438 <__assert_fail@plt+0x7360>
   183b0:	b	183b4 <__assert_fail@plt+0x72dc>
   183b4:	ldr	r0, [pc, #1048]	; 187d4 <__assert_fail@plt+0x76fc>
   183b8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   183bc:	ldr	r2, [fp, #8]
   183c0:	sdiv	r0, r0, r2
   183c4:	cmp	r1, r0
   183c8:	blt	18534 <__assert_fail@plt+0x745c>
   183cc:	b	18548 <__assert_fail@plt+0x7470>
   183d0:	b	183d4 <__assert_fail@plt+0x72fc>
   183d4:	ldr	r0, [pc, #1180]	; 18878 <__assert_fail@plt+0x77a0>
   183d8:	ldr	r1, [fp, #8]
   183dc:	cmp	r1, r0
   183e0:	blt	183f8 <__assert_fail@plt+0x7320>
   183e4:	b	18404 <__assert_fail@plt+0x732c>
   183e8:	ldr	r0, [fp, #8]
   183ec:	movw	r1, #0
   183f0:	cmp	r1, r0
   183f4:	bge	18404 <__assert_fail@plt+0x732c>
   183f8:	movw	r0, #0
   183fc:	str	r0, [fp, #-60]	; 0xffffffc4
   18400:	b	1841c <__assert_fail@plt+0x7344>
   18404:	ldr	r0, [pc, #968]	; 187d4 <__assert_fail@plt+0x76fc>
   18408:	ldr	r1, [fp, #8]
   1840c:	movw	r2, #0
   18410:	sub	r1, r2, r1
   18414:	sdiv	r0, r0, r1
   18418:	str	r0, [fp, #-60]	; 0xffffffc4
   1841c:	ldr	r0, [fp, #-60]	; 0xffffffc4
   18420:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18424:	mvn	r2, #0
   18428:	sub	r1, r2, r1
   1842c:	cmp	r0, r1
   18430:	ble	18534 <__assert_fail@plt+0x745c>
   18434:	b	18548 <__assert_fail@plt+0x7470>
   18438:	ldr	r0, [fp, #8]
   1843c:	cmn	r0, #1
   18440:	bne	18488 <__assert_fail@plt+0x73b0>
   18444:	b	18448 <__assert_fail@plt+0x7370>
   18448:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1844c:	add	r0, r0, #-2147483648	; 0x80000000
   18450:	movw	r1, #0
   18454:	cmp	r1, r0
   18458:	blt	18534 <__assert_fail@plt+0x745c>
   1845c:	b	18548 <__assert_fail@plt+0x7470>
   18460:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18464:	movw	r1, #0
   18468:	cmp	r1, r0
   1846c:	bge	18548 <__assert_fail@plt+0x7470>
   18470:	ldr	r0, [pc, #860]	; 187d4 <__assert_fail@plt+0x76fc>
   18474:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18478:	sub	r1, r1, #1
   1847c:	cmp	r0, r1
   18480:	blt	18534 <__assert_fail@plt+0x745c>
   18484:	b	18548 <__assert_fail@plt+0x7470>
   18488:	ldr	r0, [pc, #3144]	; 190d8 <__assert_fail@plt+0x8000>
   1848c:	ldr	r1, [fp, #8]
   18490:	sdiv	r0, r0, r1
   18494:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18498:	cmp	r0, r1
   1849c:	blt	18534 <__assert_fail@plt+0x745c>
   184a0:	b	18548 <__assert_fail@plt+0x7470>
   184a4:	ldr	r0, [fp, #8]
   184a8:	cmp	r0, #0
   184ac:	bne	184b4 <__assert_fail@plt+0x73dc>
   184b0:	b	18548 <__assert_fail@plt+0x7470>
   184b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   184b8:	cmp	r0, #0
   184bc:	bge	1851c <__assert_fail@plt+0x7444>
   184c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   184c4:	cmn	r0, #1
   184c8:	bne	18500 <__assert_fail@plt+0x7428>
   184cc:	b	184d0 <__assert_fail@plt+0x73f8>
   184d0:	ldr	r0, [fp, #8]
   184d4:	add	r0, r0, #-2147483648	; 0x80000000
   184d8:	movw	r1, #0
   184dc:	cmp	r1, r0
   184e0:	blt	18534 <__assert_fail@plt+0x745c>
   184e4:	b	18548 <__assert_fail@plt+0x7470>
   184e8:	ldr	r0, [pc, #740]	; 187d4 <__assert_fail@plt+0x76fc>
   184ec:	ldr	r1, [fp, #8]
   184f0:	sub	r1, r1, #1
   184f4:	cmp	r0, r1
   184f8:	blt	18534 <__assert_fail@plt+0x745c>
   184fc:	b	18548 <__assert_fail@plt+0x7470>
   18500:	ldr	r0, [pc, #3024]	; 190d8 <__assert_fail@plt+0x8000>
   18504:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18508:	sdiv	r0, r0, r1
   1850c:	ldr	r1, [fp, #8]
   18510:	cmp	r0, r1
   18514:	blt	18534 <__assert_fail@plt+0x745c>
   18518:	b	18548 <__assert_fail@plt+0x7470>
   1851c:	ldr	r0, [pc, #688]	; 187d4 <__assert_fail@plt+0x76fc>
   18520:	ldr	r1, [fp, #8]
   18524:	sdiv	r0, r0, r1
   18528:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1852c:	cmp	r0, r1
   18530:	bge	18548 <__assert_fail@plt+0x7470>
   18534:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18538:	ldr	r1, [fp, #8]
   1853c:	mul	r0, r0, r1
   18540:	str	r0, [fp, #-28]	; 0xffffffe4
   18544:	b	18bd8 <__assert_fail@plt+0x7b00>
   18548:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1854c:	ldr	r1, [fp, #8]
   18550:	mul	r0, r0, r1
   18554:	str	r0, [fp, #-28]	; 0xffffffe4
   18558:	b	18be4 <__assert_fail@plt+0x7b0c>
   1855c:	ldr	r0, [fp, #8]
   18560:	cmp	r0, #0
   18564:	bge	18674 <__assert_fail@plt+0x759c>
   18568:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1856c:	cmp	r0, #0
   18570:	bge	185fc <__assert_fail@plt+0x7524>
   18574:	b	18594 <__assert_fail@plt+0x74bc>
   18578:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1857c:	ldr	r1, [fp, #8]
   18580:	mvn	r2, #0
   18584:	udiv	r1, r2, r1
   18588:	cmp	r0, r1
   1858c:	bcc	18710 <__assert_fail@plt+0x7638>
   18590:	b	18724 <__assert_fail@plt+0x764c>
   18594:	b	18598 <__assert_fail@plt+0x74c0>
   18598:	ldr	r0, [pc, #728]	; 18878 <__assert_fail@plt+0x77a0>
   1859c:	ldr	r1, [fp, #8]
   185a0:	cmp	r1, r0
   185a4:	blt	185bc <__assert_fail@plt+0x74e4>
   185a8:	b	185c8 <__assert_fail@plt+0x74f0>
   185ac:	ldr	r0, [fp, #8]
   185b0:	movw	r1, #0
   185b4:	cmp	r1, r0
   185b8:	bge	185c8 <__assert_fail@plt+0x74f0>
   185bc:	movw	r0, #1
   185c0:	str	r0, [fp, #-64]	; 0xffffffc0
   185c4:	b	185e0 <__assert_fail@plt+0x7508>
   185c8:	ldr	r0, [fp, #8]
   185cc:	movw	r1, #0
   185d0:	sub	r0, r1, r0
   185d4:	mvn	r1, #0
   185d8:	udiv	r0, r1, r0
   185dc:	str	r0, [fp, #-64]	; 0xffffffc0
   185e0:	ldr	r0, [fp, #-64]	; 0xffffffc0
   185e4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   185e8:	mvn	r2, #0
   185ec:	sub	r1, r2, r1
   185f0:	cmp	r0, r1
   185f4:	bls	18710 <__assert_fail@plt+0x7638>
   185f8:	b	18724 <__assert_fail@plt+0x764c>
   185fc:	b	18600 <__assert_fail@plt+0x7528>
   18600:	b	18658 <__assert_fail@plt+0x7580>
   18604:	b	18658 <__assert_fail@plt+0x7580>
   18608:	ldr	r0, [fp, #8]
   1860c:	cmn	r0, #1
   18610:	bne	18658 <__assert_fail@plt+0x7580>
   18614:	b	18618 <__assert_fail@plt+0x7540>
   18618:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1861c:	add	r0, r0, #0
   18620:	movw	r1, #0
   18624:	cmp	r1, r0
   18628:	blt	18710 <__assert_fail@plt+0x7638>
   1862c:	b	18724 <__assert_fail@plt+0x764c>
   18630:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18634:	movw	r1, #0
   18638:	cmp	r1, r0
   1863c:	bge	18724 <__assert_fail@plt+0x764c>
   18640:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18644:	sub	r0, r0, #1
   18648:	mvn	r1, #0
   1864c:	cmp	r1, r0
   18650:	blt	18710 <__assert_fail@plt+0x7638>
   18654:	b	18724 <__assert_fail@plt+0x764c>
   18658:	ldr	r0, [fp, #8]
   1865c:	movw	r1, #0
   18660:	sdiv	r0, r1, r0
   18664:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18668:	cmp	r0, r1
   1866c:	blt	18710 <__assert_fail@plt+0x7638>
   18670:	b	18724 <__assert_fail@plt+0x764c>
   18674:	ldr	r0, [fp, #8]
   18678:	cmp	r0, #0
   1867c:	bne	18684 <__assert_fail@plt+0x75ac>
   18680:	b	18724 <__assert_fail@plt+0x764c>
   18684:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18688:	cmp	r0, #0
   1868c:	bge	186f8 <__assert_fail@plt+0x7620>
   18690:	b	18694 <__assert_fail@plt+0x75bc>
   18694:	b	186dc <__assert_fail@plt+0x7604>
   18698:	b	186dc <__assert_fail@plt+0x7604>
   1869c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   186a0:	cmn	r0, #1
   186a4:	bne	186dc <__assert_fail@plt+0x7604>
   186a8:	b	186ac <__assert_fail@plt+0x75d4>
   186ac:	ldr	r0, [fp, #8]
   186b0:	add	r0, r0, #0
   186b4:	movw	r1, #0
   186b8:	cmp	r1, r0
   186bc:	blt	18710 <__assert_fail@plt+0x7638>
   186c0:	b	18724 <__assert_fail@plt+0x764c>
   186c4:	ldr	r0, [fp, #8]
   186c8:	sub	r0, r0, #1
   186cc:	mvn	r1, #0
   186d0:	cmp	r1, r0
   186d4:	blt	18710 <__assert_fail@plt+0x7638>
   186d8:	b	18724 <__assert_fail@plt+0x764c>
   186dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   186e0:	movw	r1, #0
   186e4:	sdiv	r0, r1, r0
   186e8:	ldr	r1, [fp, #8]
   186ec:	cmp	r0, r1
   186f0:	blt	18710 <__assert_fail@plt+0x7638>
   186f4:	b	18724 <__assert_fail@plt+0x764c>
   186f8:	ldr	r0, [fp, #8]
   186fc:	mvn	r1, #0
   18700:	udiv	r0, r1, r0
   18704:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18708:	cmp	r0, r1
   1870c:	bcs	18724 <__assert_fail@plt+0x764c>
   18710:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18714:	ldr	r1, [fp, #8]
   18718:	mul	r0, r0, r1
   1871c:	str	r0, [fp, #-28]	; 0xffffffe4
   18720:	b	18bd8 <__assert_fail@plt+0x7b00>
   18724:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18728:	ldr	r1, [fp, #8]
   1872c:	mul	r0, r0, r1
   18730:	str	r0, [fp, #-28]	; 0xffffffe4
   18734:	b	18be4 <__assert_fail@plt+0x7b0c>
   18738:	b	1873c <__assert_fail@plt+0x7664>
   1873c:	ldr	r0, [fp, #8]
   18740:	cmp	r0, #0
   18744:	bge	188b4 <__assert_fail@plt+0x77dc>
   18748:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1874c:	cmp	r0, #0
   18750:	bge	1882c <__assert_fail@plt+0x7754>
   18754:	b	18758 <__assert_fail@plt+0x7680>
   18758:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1875c:	ldr	r1, [fp, #8]
   18760:	asr	r3, r1, #31
   18764:	mvn	r2, #0
   18768:	mvn	ip, #-2147483648	; 0x80000000
   1876c:	str	r0, [fp, #-68]	; 0xffffffbc
   18770:	mov	r0, r2
   18774:	str	r1, [fp, #-72]	; 0xffffffb8
   18778:	mov	r1, ip
   1877c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   18780:	bl	1e910 <__assert_fail@plt+0xd838>
   18784:	ldr	r2, [fp, #-68]	; 0xffffffbc
   18788:	subs	r0, r2, r0
   1878c:	rscs	r1, r1, r2, asr #31
   18790:	blt	1897c <__assert_fail@plt+0x78a4>
   18794:	b	18990 <__assert_fail@plt+0x78b8>
   18798:	b	1879c <__assert_fail@plt+0x76c4>
   1879c:	ldr	r0, [pc, #212]	; 18878 <__assert_fail@plt+0x77a0>
   187a0:	ldr	r1, [fp, #8]
   187a4:	cmp	r1, r0
   187a8:	blt	187c0 <__assert_fail@plt+0x76e8>
   187ac:	b	187d8 <__assert_fail@plt+0x7700>
   187b0:	ldr	r0, [fp, #8]
   187b4:	movw	r1, #0
   187b8:	cmp	r1, r0
   187bc:	bge	187d8 <__assert_fail@plt+0x7700>
   187c0:	mov	r0, #0
   187c4:	mvn	r1, #0
   187c8:	str	r1, [fp, #-76]	; 0xffffffb4
   187cc:	str	r0, [fp, #-80]	; 0xffffffb0
   187d0:	b	1880c <__assert_fail@plt+0x7734>
   187d4:	svcvc	0x00ffffff
   187d8:	ldr	r0, [fp, #8]
   187dc:	rsb	r0, r0, #0
   187e0:	asr	r3, r0, #31
   187e4:	mvn	r1, #0
   187e8:	mvn	r2, #-2147483648	; 0x80000000
   187ec:	str	r0, [fp, #-84]	; 0xffffffac
   187f0:	mov	r0, r1
   187f4:	mov	r1, r2
   187f8:	ldr	r2, [fp, #-84]	; 0xffffffac
   187fc:	bl	1e910 <__assert_fail@plt+0xd838>
   18800:	str	r0, [fp, #-76]	; 0xffffffb4
   18804:	str	r1, [fp, #-80]	; 0xffffffb0
   18808:	b	1880c <__assert_fail@plt+0x7734>
   1880c:	ldr	r0, [fp, #-80]	; 0xffffffb0
   18810:	ldr	r1, [fp, #-76]	; 0xffffffb4
   18814:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18818:	mvn	r2, r2
   1881c:	subs	r1, r2, r1
   18820:	rscs	r0, r0, r2, asr #31
   18824:	bge	1897c <__assert_fail@plt+0x78a4>
   18828:	b	18990 <__assert_fail@plt+0x78b8>
   1882c:	ldr	r0, [fp, #8]
   18830:	cmn	r0, #1
   18834:	bne	1887c <__assert_fail@plt+0x77a4>
   18838:	b	1883c <__assert_fail@plt+0x7764>
   1883c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18840:	mov	r1, #-2147483648	; 0x80000000
   18844:	add	r1, r1, r0, asr #31
   18848:	rsbs	r0, r0, #0
   1884c:	rscs	r1, r1, #0
   18850:	blt	1897c <__assert_fail@plt+0x78a4>
   18854:	b	18990 <__assert_fail@plt+0x78b8>
   18858:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1885c:	movw	r1, #0
   18860:	cmp	r1, r0
   18864:	bge	18990 <__assert_fail@plt+0x78b8>
   18868:	mov	r0, #0
   1886c:	cmp	r0, #0
   18870:	bne	1897c <__assert_fail@plt+0x78a4>
   18874:	b	18990 <__assert_fail@plt+0x78b8>
   18878:	andhi	r0, r0, r1
   1887c:	ldr	r0, [fp, #8]
   18880:	asr	r3, r0, #31
   18884:	mov	r1, #0
   18888:	mov	r2, #-2147483648	; 0x80000000
   1888c:	str	r0, [fp, #-88]	; 0xffffffa8
   18890:	mov	r0, r1
   18894:	mov	r1, r2
   18898:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1889c:	bl	1e910 <__assert_fail@plt+0xd838>
   188a0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   188a4:	subs	r0, r0, r2
   188a8:	sbcs	r1, r1, r2, asr #31
   188ac:	blt	1897c <__assert_fail@plt+0x78a4>
   188b0:	b	18990 <__assert_fail@plt+0x78b8>
   188b4:	ldr	r0, [fp, #8]
   188b8:	cmp	r0, #0
   188bc:	bne	188c4 <__assert_fail@plt+0x77ec>
   188c0:	b	18990 <__assert_fail@plt+0x78b8>
   188c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   188c8:	cmp	r0, #0
   188cc:	bge	18944 <__assert_fail@plt+0x786c>
   188d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   188d4:	cmn	r0, #1
   188d8:	bne	1890c <__assert_fail@plt+0x7834>
   188dc:	b	188e0 <__assert_fail@plt+0x7808>
   188e0:	ldr	r0, [fp, #8]
   188e4:	mov	r1, #-2147483648	; 0x80000000
   188e8:	add	r1, r1, r0, asr #31
   188ec:	rsbs	r0, r0, #0
   188f0:	rscs	r1, r1, #0
   188f4:	blt	1897c <__assert_fail@plt+0x78a4>
   188f8:	b	18990 <__assert_fail@plt+0x78b8>
   188fc:	mov	r0, #0
   18900:	cmp	r0, #0
   18904:	bne	1897c <__assert_fail@plt+0x78a4>
   18908:	b	18990 <__assert_fail@plt+0x78b8>
   1890c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18910:	asr	r3, r0, #31
   18914:	mov	r1, #0
   18918:	mov	r2, #-2147483648	; 0x80000000
   1891c:	str	r0, [fp, #-92]	; 0xffffffa4
   18920:	mov	r0, r1
   18924:	mov	r1, r2
   18928:	ldr	r2, [fp, #-92]	; 0xffffffa4
   1892c:	bl	1e910 <__assert_fail@plt+0xd838>
   18930:	ldr	r2, [fp, #8]
   18934:	subs	r0, r0, r2
   18938:	sbcs	r1, r1, r2, asr #31
   1893c:	blt	1897c <__assert_fail@plt+0x78a4>
   18940:	b	18990 <__assert_fail@plt+0x78b8>
   18944:	ldr	r0, [fp, #8]
   18948:	asr	r3, r0, #31
   1894c:	mvn	r1, #0
   18950:	mvn	r2, #-2147483648	; 0x80000000
   18954:	str	r0, [fp, #-96]	; 0xffffffa0
   18958:	mov	r0, r1
   1895c:	mov	r1, r2
   18960:	ldr	r2, [fp, #-96]	; 0xffffffa0
   18964:	bl	1e910 <__assert_fail@plt+0xd838>
   18968:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1896c:	subs	r0, r0, r2
   18970:	sbcs	r1, r1, r2, asr #31
   18974:	bge	18990 <__assert_fail@plt+0x78b8>
   18978:	b	1897c <__assert_fail@plt+0x78a4>
   1897c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18980:	ldr	r1, [fp, #8]
   18984:	mul	r0, r0, r1
   18988:	str	r0, [fp, #-28]	; 0xffffffe4
   1898c:	b	18bd8 <__assert_fail@plt+0x7b00>
   18990:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18994:	ldr	r1, [fp, #8]
   18998:	mul	r0, r0, r1
   1899c:	str	r0, [fp, #-28]	; 0xffffffe4
   189a0:	b	18be4 <__assert_fail@plt+0x7b0c>
   189a4:	ldr	r0, [fp, #8]
   189a8:	cmp	r0, #0
   189ac:	bge	18afc <__assert_fail@plt+0x7a24>
   189b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   189b4:	cmp	r0, #0
   189b8:	bge	18a84 <__assert_fail@plt+0x79ac>
   189bc:	b	189fc <__assert_fail@plt+0x7924>
   189c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   189c4:	ldr	r1, [fp, #8]
   189c8:	asr	r3, r1, #31
   189cc:	mvn	r2, #0
   189d0:	str	r0, [fp, #-100]	; 0xffffff9c
   189d4:	mov	r0, r2
   189d8:	str	r1, [fp, #-104]	; 0xffffff98
   189dc:	mov	r1, r2
   189e0:	ldr	r2, [fp, #-104]	; 0xffffff98
   189e4:	bl	1e9e4 <__assert_fail@plt+0xd90c>
   189e8:	ldr	r2, [fp, #-100]	; 0xffffff9c
   189ec:	subs	r0, r2, r0
   189f0:	rscs	r1, r1, r2, asr #31
   189f4:	bcc	18bb0 <__assert_fail@plt+0x7ad8>
   189f8:	b	18bc4 <__assert_fail@plt+0x7aec>
   189fc:	b	18a00 <__assert_fail@plt+0x7928>
   18a00:	ldr	r0, [pc, #-400]	; 18878 <__assert_fail@plt+0x77a0>
   18a04:	ldr	r1, [fp, #8]
   18a08:	cmp	r1, r0
   18a0c:	blt	18a24 <__assert_fail@plt+0x794c>
   18a10:	b	18a38 <__assert_fail@plt+0x7960>
   18a14:	ldr	r0, [fp, #8]
   18a18:	movw	r1, #0
   18a1c:	cmp	r1, r0
   18a20:	bge	18a38 <__assert_fail@plt+0x7960>
   18a24:	mov	r0, #1
   18a28:	mvn	r1, #0
   18a2c:	str	r1, [sp, #108]	; 0x6c
   18a30:	str	r0, [sp, #104]	; 0x68
   18a34:	b	18a64 <__assert_fail@plt+0x798c>
   18a38:	ldr	r0, [fp, #8]
   18a3c:	rsb	r0, r0, #0
   18a40:	asr	r3, r0, #31
   18a44:	mvn	r1, #0
   18a48:	str	r0, [sp, #100]	; 0x64
   18a4c:	mov	r0, r1
   18a50:	ldr	r2, [sp, #100]	; 0x64
   18a54:	bl	1e9e4 <__assert_fail@plt+0xd90c>
   18a58:	str	r0, [sp, #108]	; 0x6c
   18a5c:	str	r1, [sp, #104]	; 0x68
   18a60:	b	18a64 <__assert_fail@plt+0x798c>
   18a64:	ldr	r0, [sp, #104]	; 0x68
   18a68:	ldr	r1, [sp, #108]	; 0x6c
   18a6c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18a70:	mvn	r2, r2
   18a74:	subs	r1, r2, r1
   18a78:	rscs	r0, r0, r2, asr #31
   18a7c:	bcs	18bb0 <__assert_fail@plt+0x7ad8>
   18a80:	b	18bc4 <__assert_fail@plt+0x7aec>
   18a84:	b	18a88 <__assert_fail@plt+0x79b0>
   18a88:	b	18ae0 <__assert_fail@plt+0x7a08>
   18a8c:	b	18ae0 <__assert_fail@plt+0x7a08>
   18a90:	ldr	r0, [fp, #8]
   18a94:	cmn	r0, #1
   18a98:	bne	18ae0 <__assert_fail@plt+0x7a08>
   18a9c:	b	18aa0 <__assert_fail@plt+0x79c8>
   18aa0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18aa4:	add	r0, r0, #0
   18aa8:	movw	r1, #0
   18aac:	cmp	r1, r0
   18ab0:	blt	18bb0 <__assert_fail@plt+0x7ad8>
   18ab4:	b	18bc4 <__assert_fail@plt+0x7aec>
   18ab8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18abc:	movw	r1, #0
   18ac0:	cmp	r1, r0
   18ac4:	bge	18bc4 <__assert_fail@plt+0x7aec>
   18ac8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18acc:	sub	r0, r0, #1
   18ad0:	mvn	r1, #0
   18ad4:	cmp	r1, r0
   18ad8:	blt	18bb0 <__assert_fail@plt+0x7ad8>
   18adc:	b	18bc4 <__assert_fail@plt+0x7aec>
   18ae0:	ldr	r0, [fp, #8]
   18ae4:	movw	r1, #0
   18ae8:	sdiv	r0, r1, r0
   18aec:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18af0:	cmp	r0, r1
   18af4:	blt	18bb0 <__assert_fail@plt+0x7ad8>
   18af8:	b	18bc4 <__assert_fail@plt+0x7aec>
   18afc:	ldr	r0, [fp, #8]
   18b00:	cmp	r0, #0
   18b04:	bne	18b0c <__assert_fail@plt+0x7a34>
   18b08:	b	18bc4 <__assert_fail@plt+0x7aec>
   18b0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18b10:	cmp	r0, #0
   18b14:	bge	18b80 <__assert_fail@plt+0x7aa8>
   18b18:	b	18b1c <__assert_fail@plt+0x7a44>
   18b1c:	b	18b64 <__assert_fail@plt+0x7a8c>
   18b20:	b	18b64 <__assert_fail@plt+0x7a8c>
   18b24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18b28:	cmn	r0, #1
   18b2c:	bne	18b64 <__assert_fail@plt+0x7a8c>
   18b30:	b	18b34 <__assert_fail@plt+0x7a5c>
   18b34:	ldr	r0, [fp, #8]
   18b38:	add	r0, r0, #0
   18b3c:	movw	r1, #0
   18b40:	cmp	r1, r0
   18b44:	blt	18bb0 <__assert_fail@plt+0x7ad8>
   18b48:	b	18bc4 <__assert_fail@plt+0x7aec>
   18b4c:	ldr	r0, [fp, #8]
   18b50:	sub	r0, r0, #1
   18b54:	mvn	r1, #0
   18b58:	cmp	r1, r0
   18b5c:	blt	18bb0 <__assert_fail@plt+0x7ad8>
   18b60:	b	18bc4 <__assert_fail@plt+0x7aec>
   18b64:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18b68:	movw	r1, #0
   18b6c:	sdiv	r0, r1, r0
   18b70:	ldr	r1, [fp, #8]
   18b74:	cmp	r0, r1
   18b78:	blt	18bb0 <__assert_fail@plt+0x7ad8>
   18b7c:	b	18bc4 <__assert_fail@plt+0x7aec>
   18b80:	ldr	r0, [fp, #8]
   18b84:	asr	r3, r0, #31
   18b88:	mvn	r1, #0
   18b8c:	str	r0, [sp, #96]	; 0x60
   18b90:	mov	r0, r1
   18b94:	ldr	r2, [sp, #96]	; 0x60
   18b98:	bl	1e9e4 <__assert_fail@plt+0xd90c>
   18b9c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18ba0:	subs	r0, r0, r2
   18ba4:	sbcs	r1, r1, r2, asr #31
   18ba8:	bcs	18bc4 <__assert_fail@plt+0x7aec>
   18bac:	b	18bb0 <__assert_fail@plt+0x7ad8>
   18bb0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18bb4:	ldr	r1, [fp, #8]
   18bb8:	mul	r0, r0, r1
   18bbc:	str	r0, [fp, #-28]	; 0xffffffe4
   18bc0:	b	18bd8 <__assert_fail@plt+0x7b00>
   18bc4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18bc8:	ldr	r1, [fp, #8]
   18bcc:	mul	r0, r0, r1
   18bd0:	str	r0, [fp, #-28]	; 0xffffffe4
   18bd4:	b	18be4 <__assert_fail@plt+0x7b0c>
   18bd8:	ldr	r0, [pc, #-1036]	; 187d4 <__assert_fail@plt+0x76fc>
   18bdc:	str	r0, [sp, #92]	; 0x5c
   18be0:	b	18c04 <__assert_fail@plt+0x7b2c>
   18be4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   18be8:	cmp	r0, #64	; 0x40
   18bec:	movw	r0, #0
   18bf0:	movlt	r0, #1
   18bf4:	tst	r0, #1
   18bf8:	movw	r0, #64	; 0x40
   18bfc:	moveq	r0, #0
   18c00:	str	r0, [sp, #92]	; 0x5c
   18c04:	ldr	r0, [sp, #92]	; 0x5c
   18c08:	str	r0, [fp, #-32]	; 0xffffffe0
   18c0c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18c10:	cmp	r0, #0
   18c14:	beq	18c44 <__assert_fail@plt+0x7b6c>
   18c18:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18c1c:	ldr	r1, [fp, #8]
   18c20:	sdiv	r0, r0, r1
   18c24:	str	r0, [fp, #-24]	; 0xffffffe8
   18c28:	ldr	r0, [fp, #-32]	; 0xffffffe0
   18c2c:	mov	r1, r0
   18c30:	ldr	r2, [fp, #8]
   18c34:	sdiv	r3, r0, r2
   18c38:	mls	r0, r3, r2, r0
   18c3c:	sub	r0, r1, r0
   18c40:	str	r0, [fp, #-28]	; 0xffffffe4
   18c44:	ldr	r0, [fp, #-4]
   18c48:	movw	r1, #0
   18c4c:	cmp	r0, r1
   18c50:	bne	18c60 <__assert_fail@plt+0x7b88>
   18c54:	ldr	r0, [fp, #-8]
   18c58:	movw	r1, #0
   18c5c:	str	r1, [r0]
   18c60:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18c64:	ldr	r1, [fp, #-20]	; 0xffffffec
   18c68:	sub	r0, r0, r1
   18c6c:	ldr	r1, [fp, #-12]
   18c70:	cmp	r0, r1
   18c74:	bge	1a060 <__assert_fail@plt+0x8f88>
   18c78:	ldr	r0, [fp, #-20]	; 0xffffffec
   18c7c:	ldr	r1, [fp, #-12]
   18c80:	add	r1, r0, r1
   18c84:	mov	r2, #1
   18c88:	cmp	r1, r0
   18c8c:	movwvc	r2, #0
   18c90:	str	r1, [fp, #-24]	; 0xffffffe8
   18c94:	tst	r2, #1
   18c98:	bne	1a05c <__assert_fail@plt+0x8f84>
   18c9c:	ldr	r0, [fp, #-16]
   18ca0:	movw	r1, #0
   18ca4:	cmp	r1, r0
   18ca8:	bgt	18cbc <__assert_fail@plt+0x7be4>
   18cac:	ldr	r0, [fp, #-16]
   18cb0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18cb4:	cmp	r0, r1
   18cb8:	blt	1a05c <__assert_fail@plt+0x8f84>
   18cbc:	b	19098 <__assert_fail@plt+0x7fc0>
   18cc0:			; <UNDEFINED> instruction: 0xffff8000
   18cc4:	b	18cc8 <__assert_fail@plt+0x7bf0>
   18cc8:	ldr	r0, [fp, #8]
   18ccc:	cmp	r0, #0
   18cd0:	bge	18de4 <__assert_fail@plt+0x7d0c>
   18cd4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18cd8:	cmp	r0, #0
   18cdc:	bge	18d68 <__assert_fail@plt+0x7c90>
   18ce0:	b	18ce4 <__assert_fail@plt+0x7c0c>
   18ce4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18ce8:	ldr	r1, [fp, #8]
   18cec:	movw	r2, #127	; 0x7f
   18cf0:	sdiv	r1, r2, r1
   18cf4:	cmp	r0, r1
   18cf8:	blt	18e84 <__assert_fail@plt+0x7dac>
   18cfc:	b	18e9c <__assert_fail@plt+0x7dc4>
   18d00:	b	18d04 <__assert_fail@plt+0x7c2c>
   18d04:	ldr	r0, [pc, #-1172]	; 18878 <__assert_fail@plt+0x77a0>
   18d08:	ldr	r1, [fp, #8]
   18d0c:	cmp	r1, r0
   18d10:	blt	18d28 <__assert_fail@plt+0x7c50>
   18d14:	b	18d34 <__assert_fail@plt+0x7c5c>
   18d18:	ldr	r0, [fp, #8]
   18d1c:	movw	r1, #0
   18d20:	cmp	r1, r0
   18d24:	bge	18d34 <__assert_fail@plt+0x7c5c>
   18d28:	movw	r0, #0
   18d2c:	str	r0, [sp, #88]	; 0x58
   18d30:	b	18d4c <__assert_fail@plt+0x7c74>
   18d34:	ldr	r0, [fp, #8]
   18d38:	movw	r1, #0
   18d3c:	sub	r0, r1, r0
   18d40:	movw	r1, #127	; 0x7f
   18d44:	sdiv	r0, r1, r0
   18d48:	str	r0, [sp, #88]	; 0x58
   18d4c:	ldr	r0, [sp, #88]	; 0x58
   18d50:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18d54:	mvn	r2, #0
   18d58:	sub	r1, r2, r1
   18d5c:	cmp	r0, r1
   18d60:	ble	18e84 <__assert_fail@plt+0x7dac>
   18d64:	b	18e9c <__assert_fail@plt+0x7dc4>
   18d68:	b	18d6c <__assert_fail@plt+0x7c94>
   18d6c:	b	18dc8 <__assert_fail@plt+0x7cf0>
   18d70:	b	18dc8 <__assert_fail@plt+0x7cf0>
   18d74:	ldr	r0, [fp, #8]
   18d78:	cmn	r0, #1
   18d7c:	bne	18dc8 <__assert_fail@plt+0x7cf0>
   18d80:	b	18d84 <__assert_fail@plt+0x7cac>
   18d84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18d88:	mvn	r1, #127	; 0x7f
   18d8c:	add	r0, r0, r1
   18d90:	movw	r1, #0
   18d94:	cmp	r1, r0
   18d98:	blt	18e84 <__assert_fail@plt+0x7dac>
   18d9c:	b	18e9c <__assert_fail@plt+0x7dc4>
   18da0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18da4:	movw	r1, #0
   18da8:	cmp	r1, r0
   18dac:	bge	18e9c <__assert_fail@plt+0x7dc4>
   18db0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18db4:	sub	r0, r0, #1
   18db8:	movw	r1, #127	; 0x7f
   18dbc:	cmp	r1, r0
   18dc0:	blt	18e84 <__assert_fail@plt+0x7dac>
   18dc4:	b	18e9c <__assert_fail@plt+0x7dc4>
   18dc8:	ldr	r0, [fp, #8]
   18dcc:	mvn	r1, #127	; 0x7f
   18dd0:	sdiv	r0, r1, r0
   18dd4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18dd8:	cmp	r0, r1
   18ddc:	blt	18e84 <__assert_fail@plt+0x7dac>
   18de0:	b	18e9c <__assert_fail@plt+0x7dc4>
   18de4:	ldr	r0, [fp, #8]
   18de8:	cmp	r0, #0
   18dec:	bne	18df4 <__assert_fail@plt+0x7d1c>
   18df0:	b	18e9c <__assert_fail@plt+0x7dc4>
   18df4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18df8:	cmp	r0, #0
   18dfc:	bge	18e6c <__assert_fail@plt+0x7d94>
   18e00:	b	18e04 <__assert_fail@plt+0x7d2c>
   18e04:	b	18e50 <__assert_fail@plt+0x7d78>
   18e08:	b	18e50 <__assert_fail@plt+0x7d78>
   18e0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18e10:	cmn	r0, #1
   18e14:	bne	18e50 <__assert_fail@plt+0x7d78>
   18e18:	b	18e1c <__assert_fail@plt+0x7d44>
   18e1c:	ldr	r0, [fp, #8]
   18e20:	mvn	r1, #127	; 0x7f
   18e24:	add	r0, r0, r1
   18e28:	movw	r1, #0
   18e2c:	cmp	r1, r0
   18e30:	blt	18e84 <__assert_fail@plt+0x7dac>
   18e34:	b	18e9c <__assert_fail@plt+0x7dc4>
   18e38:	ldr	r0, [fp, #8]
   18e3c:	sub	r0, r0, #1
   18e40:	movw	r1, #127	; 0x7f
   18e44:	cmp	r1, r0
   18e48:	blt	18e84 <__assert_fail@plt+0x7dac>
   18e4c:	b	18e9c <__assert_fail@plt+0x7dc4>
   18e50:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18e54:	mvn	r1, #127	; 0x7f
   18e58:	sdiv	r0, r1, r0
   18e5c:	ldr	r1, [fp, #8]
   18e60:	cmp	r0, r1
   18e64:	blt	18e84 <__assert_fail@plt+0x7dac>
   18e68:	b	18e9c <__assert_fail@plt+0x7dc4>
   18e6c:	ldr	r0, [fp, #8]
   18e70:	movw	r1, #127	; 0x7f
   18e74:	sdiv	r0, r1, r0
   18e78:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18e7c:	cmp	r0, r1
   18e80:	bge	18e9c <__assert_fail@plt+0x7dc4>
   18e84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18e88:	ldr	r1, [fp, #8]
   18e8c:	mul	r0, r0, r1
   18e90:	sxtb	r0, r0
   18e94:	str	r0, [fp, #-28]	; 0xffffffe4
   18e98:	b	1a05c <__assert_fail@plt+0x8f84>
   18e9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18ea0:	ldr	r1, [fp, #8]
   18ea4:	mul	r0, r0, r1
   18ea8:	sxtb	r0, r0
   18eac:	str	r0, [fp, #-28]	; 0xffffffe4
   18eb0:	b	1a060 <__assert_fail@plt+0x8f88>
   18eb4:	ldr	r0, [fp, #8]
   18eb8:	cmp	r0, #0
   18ebc:	bge	18fcc <__assert_fail@plt+0x7ef4>
   18ec0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18ec4:	cmp	r0, #0
   18ec8:	bge	18f54 <__assert_fail@plt+0x7e7c>
   18ecc:	b	18ed0 <__assert_fail@plt+0x7df8>
   18ed0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18ed4:	ldr	r1, [fp, #8]
   18ed8:	movw	r2, #255	; 0xff
   18edc:	sdiv	r1, r2, r1
   18ee0:	cmp	r0, r1
   18ee4:	blt	19068 <__assert_fail@plt+0x7f90>
   18ee8:	b	19080 <__assert_fail@plt+0x7fa8>
   18eec:	b	18ef0 <__assert_fail@plt+0x7e18>
   18ef0:	ldr	r0, [pc, #-1664]	; 18878 <__assert_fail@plt+0x77a0>
   18ef4:	ldr	r1, [fp, #8]
   18ef8:	cmp	r1, r0
   18efc:	blt	18f14 <__assert_fail@plt+0x7e3c>
   18f00:	b	18f20 <__assert_fail@plt+0x7e48>
   18f04:	ldr	r0, [fp, #8]
   18f08:	movw	r1, #0
   18f0c:	cmp	r1, r0
   18f10:	bge	18f20 <__assert_fail@plt+0x7e48>
   18f14:	movw	r0, #0
   18f18:	str	r0, [sp, #84]	; 0x54
   18f1c:	b	18f38 <__assert_fail@plt+0x7e60>
   18f20:	ldr	r0, [fp, #8]
   18f24:	movw	r1, #0
   18f28:	sub	r0, r1, r0
   18f2c:	movw	r1, #255	; 0xff
   18f30:	sdiv	r0, r1, r0
   18f34:	str	r0, [sp, #84]	; 0x54
   18f38:	ldr	r0, [sp, #84]	; 0x54
   18f3c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18f40:	mvn	r2, #0
   18f44:	sub	r1, r2, r1
   18f48:	cmp	r0, r1
   18f4c:	ble	19068 <__assert_fail@plt+0x7f90>
   18f50:	b	19080 <__assert_fail@plt+0x7fa8>
   18f54:	b	18f58 <__assert_fail@plt+0x7e80>
   18f58:	b	18fb0 <__assert_fail@plt+0x7ed8>
   18f5c:	b	18fb0 <__assert_fail@plt+0x7ed8>
   18f60:	ldr	r0, [fp, #8]
   18f64:	cmn	r0, #1
   18f68:	bne	18fb0 <__assert_fail@plt+0x7ed8>
   18f6c:	b	18f70 <__assert_fail@plt+0x7e98>
   18f70:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18f74:	add	r0, r0, #0
   18f78:	movw	r1, #0
   18f7c:	cmp	r1, r0
   18f80:	blt	19068 <__assert_fail@plt+0x7f90>
   18f84:	b	19080 <__assert_fail@plt+0x7fa8>
   18f88:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18f8c:	movw	r1, #0
   18f90:	cmp	r1, r0
   18f94:	bge	19080 <__assert_fail@plt+0x7fa8>
   18f98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18f9c:	sub	r0, r0, #1
   18fa0:	mvn	r1, #0
   18fa4:	cmp	r1, r0
   18fa8:	blt	19068 <__assert_fail@plt+0x7f90>
   18fac:	b	19080 <__assert_fail@plt+0x7fa8>
   18fb0:	ldr	r0, [fp, #8]
   18fb4:	movw	r1, #0
   18fb8:	sdiv	r0, r1, r0
   18fbc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18fc0:	cmp	r0, r1
   18fc4:	blt	19068 <__assert_fail@plt+0x7f90>
   18fc8:	b	19080 <__assert_fail@plt+0x7fa8>
   18fcc:	ldr	r0, [fp, #8]
   18fd0:	cmp	r0, #0
   18fd4:	bne	18fdc <__assert_fail@plt+0x7f04>
   18fd8:	b	19080 <__assert_fail@plt+0x7fa8>
   18fdc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18fe0:	cmp	r0, #0
   18fe4:	bge	19050 <__assert_fail@plt+0x7f78>
   18fe8:	b	18fec <__assert_fail@plt+0x7f14>
   18fec:	b	19034 <__assert_fail@plt+0x7f5c>
   18ff0:	b	19034 <__assert_fail@plt+0x7f5c>
   18ff4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18ff8:	cmn	r0, #1
   18ffc:	bne	19034 <__assert_fail@plt+0x7f5c>
   19000:	b	19004 <__assert_fail@plt+0x7f2c>
   19004:	ldr	r0, [fp, #8]
   19008:	add	r0, r0, #0
   1900c:	movw	r1, #0
   19010:	cmp	r1, r0
   19014:	blt	19068 <__assert_fail@plt+0x7f90>
   19018:	b	19080 <__assert_fail@plt+0x7fa8>
   1901c:	ldr	r0, [fp, #8]
   19020:	sub	r0, r0, #1
   19024:	mvn	r1, #0
   19028:	cmp	r1, r0
   1902c:	blt	19068 <__assert_fail@plt+0x7f90>
   19030:	b	19080 <__assert_fail@plt+0x7fa8>
   19034:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19038:	movw	r1, #0
   1903c:	sdiv	r0, r1, r0
   19040:	ldr	r1, [fp, #8]
   19044:	cmp	r0, r1
   19048:	blt	19068 <__assert_fail@plt+0x7f90>
   1904c:	b	19080 <__assert_fail@plt+0x7fa8>
   19050:	ldr	r0, [fp, #8]
   19054:	movw	r1, #255	; 0xff
   19058:	sdiv	r0, r1, r0
   1905c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19060:	cmp	r0, r1
   19064:	bge	19080 <__assert_fail@plt+0x7fa8>
   19068:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1906c:	ldr	r1, [fp, #8]
   19070:	mul	r0, r0, r1
   19074:	and	r0, r0, #255	; 0xff
   19078:	str	r0, [fp, #-28]	; 0xffffffe4
   1907c:	b	1a05c <__assert_fail@plt+0x8f84>
   19080:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19084:	ldr	r1, [fp, #8]
   19088:	mul	r0, r0, r1
   1908c:	and	r0, r0, #255	; 0xff
   19090:	str	r0, [fp, #-28]	; 0xffffffe4
   19094:	b	1a060 <__assert_fail@plt+0x8f88>
   19098:	b	19474 <__assert_fail@plt+0x839c>
   1909c:	b	190a0 <__assert_fail@plt+0x7fc8>
   190a0:	ldr	r0, [fp, #8]
   190a4:	cmp	r0, #0
   190a8:	bge	191c0 <__assert_fail@plt+0x80e8>
   190ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   190b0:	cmp	r0, #0
   190b4:	bge	19144 <__assert_fail@plt+0x806c>
   190b8:	b	190bc <__assert_fail@plt+0x7fe4>
   190bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   190c0:	ldr	r1, [fp, #8]
   190c4:	movw	r2, #32767	; 0x7fff
   190c8:	sdiv	r1, r2, r1
   190cc:	cmp	r0, r1
   190d0:	blt	19260 <__assert_fail@plt+0x8188>
   190d4:	b	19278 <__assert_fail@plt+0x81a0>
   190d8:	andhi	r0, r0, r0
   190dc:	b	190e0 <__assert_fail@plt+0x8008>
   190e0:	ldr	r0, [pc, #4004]	; 1a08c <__assert_fail@plt+0x8fb4>
   190e4:	ldr	r1, [fp, #8]
   190e8:	cmp	r1, r0
   190ec:	blt	19104 <__assert_fail@plt+0x802c>
   190f0:	b	19110 <__assert_fail@plt+0x8038>
   190f4:	ldr	r0, [fp, #8]
   190f8:	movw	r1, #0
   190fc:	cmp	r1, r0
   19100:	bge	19110 <__assert_fail@plt+0x8038>
   19104:	movw	r0, #0
   19108:	str	r0, [sp, #80]	; 0x50
   1910c:	b	19128 <__assert_fail@plt+0x8050>
   19110:	ldr	r0, [fp, #8]
   19114:	movw	r1, #0
   19118:	sub	r0, r1, r0
   1911c:	movw	r1, #32767	; 0x7fff
   19120:	sdiv	r0, r1, r0
   19124:	str	r0, [sp, #80]	; 0x50
   19128:	ldr	r0, [sp, #80]	; 0x50
   1912c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19130:	mvn	r2, #0
   19134:	sub	r1, r2, r1
   19138:	cmp	r0, r1
   1913c:	ble	19260 <__assert_fail@plt+0x8188>
   19140:	b	19278 <__assert_fail@plt+0x81a0>
   19144:	b	19148 <__assert_fail@plt+0x8070>
   19148:	b	191a4 <__assert_fail@plt+0x80cc>
   1914c:	b	191a4 <__assert_fail@plt+0x80cc>
   19150:	ldr	r0, [fp, #8]
   19154:	cmn	r0, #1
   19158:	bne	191a4 <__assert_fail@plt+0x80cc>
   1915c:	b	19160 <__assert_fail@plt+0x8088>
   19160:	ldr	r0, [pc, #3884]	; 1a094 <__assert_fail@plt+0x8fbc>
   19164:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19168:	add	r0, r1, r0
   1916c:	movw	r1, #0
   19170:	cmp	r1, r0
   19174:	blt	19260 <__assert_fail@plt+0x8188>
   19178:	b	19278 <__assert_fail@plt+0x81a0>
   1917c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19180:	movw	r1, #0
   19184:	cmp	r1, r0
   19188:	bge	19278 <__assert_fail@plt+0x81a0>
   1918c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19190:	sub	r0, r0, #1
   19194:	movw	r1, #32767	; 0x7fff
   19198:	cmp	r1, r0
   1919c:	blt	19260 <__assert_fail@plt+0x8188>
   191a0:	b	19278 <__assert_fail@plt+0x81a0>
   191a4:	ldr	r0, [pc, #3816]	; 1a094 <__assert_fail@plt+0x8fbc>
   191a8:	ldr	r1, [fp, #8]
   191ac:	sdiv	r0, r0, r1
   191b0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   191b4:	cmp	r0, r1
   191b8:	blt	19260 <__assert_fail@plt+0x8188>
   191bc:	b	19278 <__assert_fail@plt+0x81a0>
   191c0:	ldr	r0, [fp, #8]
   191c4:	cmp	r0, #0
   191c8:	bne	191d0 <__assert_fail@plt+0x80f8>
   191cc:	b	19278 <__assert_fail@plt+0x81a0>
   191d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   191d4:	cmp	r0, #0
   191d8:	bge	19248 <__assert_fail@plt+0x8170>
   191dc:	b	191e0 <__assert_fail@plt+0x8108>
   191e0:	b	1922c <__assert_fail@plt+0x8154>
   191e4:	b	1922c <__assert_fail@plt+0x8154>
   191e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   191ec:	cmn	r0, #1
   191f0:	bne	1922c <__assert_fail@plt+0x8154>
   191f4:	b	191f8 <__assert_fail@plt+0x8120>
   191f8:	ldr	r0, [pc, #3732]	; 1a094 <__assert_fail@plt+0x8fbc>
   191fc:	ldr	r1, [fp, #8]
   19200:	add	r0, r1, r0
   19204:	movw	r1, #0
   19208:	cmp	r1, r0
   1920c:	blt	19260 <__assert_fail@plt+0x8188>
   19210:	b	19278 <__assert_fail@plt+0x81a0>
   19214:	ldr	r0, [fp, #8]
   19218:	sub	r0, r0, #1
   1921c:	movw	r1, #32767	; 0x7fff
   19220:	cmp	r1, r0
   19224:	blt	19260 <__assert_fail@plt+0x8188>
   19228:	b	19278 <__assert_fail@plt+0x81a0>
   1922c:	ldr	r0, [pc, #3680]	; 1a094 <__assert_fail@plt+0x8fbc>
   19230:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19234:	sdiv	r0, r0, r1
   19238:	ldr	r1, [fp, #8]
   1923c:	cmp	r0, r1
   19240:	blt	19260 <__assert_fail@plt+0x8188>
   19244:	b	19278 <__assert_fail@plt+0x81a0>
   19248:	ldr	r0, [fp, #8]
   1924c:	movw	r1, #32767	; 0x7fff
   19250:	sdiv	r0, r1, r0
   19254:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19258:	cmp	r0, r1
   1925c:	bge	19278 <__assert_fail@plt+0x81a0>
   19260:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19264:	ldr	r1, [fp, #8]
   19268:	mul	r0, r0, r1
   1926c:	sxth	r0, r0
   19270:	str	r0, [fp, #-28]	; 0xffffffe4
   19274:	b	1a05c <__assert_fail@plt+0x8f84>
   19278:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1927c:	ldr	r1, [fp, #8]
   19280:	mul	r0, r0, r1
   19284:	sxth	r0, r0
   19288:	str	r0, [fp, #-28]	; 0xffffffe4
   1928c:	b	1a060 <__assert_fail@plt+0x8f88>
   19290:	ldr	r0, [fp, #8]
   19294:	cmp	r0, #0
   19298:	bge	193a8 <__assert_fail@plt+0x82d0>
   1929c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   192a0:	cmp	r0, #0
   192a4:	bge	19330 <__assert_fail@plt+0x8258>
   192a8:	b	192ac <__assert_fail@plt+0x81d4>
   192ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   192b0:	ldr	r1, [fp, #8]
   192b4:	movw	r2, #65535	; 0xffff
   192b8:	sdiv	r1, r2, r1
   192bc:	cmp	r0, r1
   192c0:	blt	19444 <__assert_fail@plt+0x836c>
   192c4:	b	1945c <__assert_fail@plt+0x8384>
   192c8:	b	192cc <__assert_fail@plt+0x81f4>
   192cc:	ldr	r0, [pc, #3512]	; 1a08c <__assert_fail@plt+0x8fb4>
   192d0:	ldr	r1, [fp, #8]
   192d4:	cmp	r1, r0
   192d8:	blt	192f0 <__assert_fail@plt+0x8218>
   192dc:	b	192fc <__assert_fail@plt+0x8224>
   192e0:	ldr	r0, [fp, #8]
   192e4:	movw	r1, #0
   192e8:	cmp	r1, r0
   192ec:	bge	192fc <__assert_fail@plt+0x8224>
   192f0:	movw	r0, #0
   192f4:	str	r0, [sp, #76]	; 0x4c
   192f8:	b	19314 <__assert_fail@plt+0x823c>
   192fc:	ldr	r0, [fp, #8]
   19300:	movw	r1, #0
   19304:	sub	r0, r1, r0
   19308:	movw	r1, #65535	; 0xffff
   1930c:	sdiv	r0, r1, r0
   19310:	str	r0, [sp, #76]	; 0x4c
   19314:	ldr	r0, [sp, #76]	; 0x4c
   19318:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1931c:	mvn	r2, #0
   19320:	sub	r1, r2, r1
   19324:	cmp	r0, r1
   19328:	ble	19444 <__assert_fail@plt+0x836c>
   1932c:	b	1945c <__assert_fail@plt+0x8384>
   19330:	b	19334 <__assert_fail@plt+0x825c>
   19334:	b	1938c <__assert_fail@plt+0x82b4>
   19338:	b	1938c <__assert_fail@plt+0x82b4>
   1933c:	ldr	r0, [fp, #8]
   19340:	cmn	r0, #1
   19344:	bne	1938c <__assert_fail@plt+0x82b4>
   19348:	b	1934c <__assert_fail@plt+0x8274>
   1934c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19350:	add	r0, r0, #0
   19354:	movw	r1, #0
   19358:	cmp	r1, r0
   1935c:	blt	19444 <__assert_fail@plt+0x836c>
   19360:	b	1945c <__assert_fail@plt+0x8384>
   19364:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19368:	movw	r1, #0
   1936c:	cmp	r1, r0
   19370:	bge	1945c <__assert_fail@plt+0x8384>
   19374:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19378:	sub	r0, r0, #1
   1937c:	mvn	r1, #0
   19380:	cmp	r1, r0
   19384:	blt	19444 <__assert_fail@plt+0x836c>
   19388:	b	1945c <__assert_fail@plt+0x8384>
   1938c:	ldr	r0, [fp, #8]
   19390:	movw	r1, #0
   19394:	sdiv	r0, r1, r0
   19398:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1939c:	cmp	r0, r1
   193a0:	blt	19444 <__assert_fail@plt+0x836c>
   193a4:	b	1945c <__assert_fail@plt+0x8384>
   193a8:	ldr	r0, [fp, #8]
   193ac:	cmp	r0, #0
   193b0:	bne	193b8 <__assert_fail@plt+0x82e0>
   193b4:	b	1945c <__assert_fail@plt+0x8384>
   193b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   193bc:	cmp	r0, #0
   193c0:	bge	1942c <__assert_fail@plt+0x8354>
   193c4:	b	193c8 <__assert_fail@plt+0x82f0>
   193c8:	b	19410 <__assert_fail@plt+0x8338>
   193cc:	b	19410 <__assert_fail@plt+0x8338>
   193d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   193d4:	cmn	r0, #1
   193d8:	bne	19410 <__assert_fail@plt+0x8338>
   193dc:	b	193e0 <__assert_fail@plt+0x8308>
   193e0:	ldr	r0, [fp, #8]
   193e4:	add	r0, r0, #0
   193e8:	movw	r1, #0
   193ec:	cmp	r1, r0
   193f0:	blt	19444 <__assert_fail@plt+0x836c>
   193f4:	b	1945c <__assert_fail@plt+0x8384>
   193f8:	ldr	r0, [fp, #8]
   193fc:	sub	r0, r0, #1
   19400:	mvn	r1, #0
   19404:	cmp	r1, r0
   19408:	blt	19444 <__assert_fail@plt+0x836c>
   1940c:	b	1945c <__assert_fail@plt+0x8384>
   19410:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19414:	movw	r1, #0
   19418:	sdiv	r0, r1, r0
   1941c:	ldr	r1, [fp, #8]
   19420:	cmp	r0, r1
   19424:	blt	19444 <__assert_fail@plt+0x836c>
   19428:	b	1945c <__assert_fail@plt+0x8384>
   1942c:	ldr	r0, [fp, #8]
   19430:	movw	r1, #65535	; 0xffff
   19434:	sdiv	r0, r1, r0
   19438:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1943c:	cmp	r0, r1
   19440:	bge	1945c <__assert_fail@plt+0x8384>
   19444:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19448:	ldr	r1, [fp, #8]
   1944c:	mul	r0, r0, r1
   19450:	uxth	r0, r0
   19454:	str	r0, [fp, #-28]	; 0xffffffe4
   19458:	b	1a05c <__assert_fail@plt+0x8f84>
   1945c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19460:	ldr	r1, [fp, #8]
   19464:	mul	r0, r0, r1
   19468:	uxth	r0, r0
   1946c:	str	r0, [fp, #-28]	; 0xffffffe4
   19470:	b	1a060 <__assert_fail@plt+0x8f88>
   19474:	b	19478 <__assert_fail@plt+0x83a0>
   19478:	b	1947c <__assert_fail@plt+0x83a4>
   1947c:	ldr	r0, [fp, #8]
   19480:	cmp	r0, #0
   19484:	bge	19588 <__assert_fail@plt+0x84b0>
   19488:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1948c:	cmp	r0, #0
   19490:	bge	1951c <__assert_fail@plt+0x8444>
   19494:	b	19498 <__assert_fail@plt+0x83c0>
   19498:	ldr	r0, [pc, #3048]	; 1a088 <__assert_fail@plt+0x8fb0>
   1949c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   194a0:	ldr	r2, [fp, #8]
   194a4:	sdiv	r0, r0, r2
   194a8:	cmp	r1, r0
   194ac:	blt	19618 <__assert_fail@plt+0x8540>
   194b0:	b	1962c <__assert_fail@plt+0x8554>
   194b4:	b	194b8 <__assert_fail@plt+0x83e0>
   194b8:	ldr	r0, [pc, #3020]	; 1a08c <__assert_fail@plt+0x8fb4>
   194bc:	ldr	r1, [fp, #8]
   194c0:	cmp	r1, r0
   194c4:	blt	194dc <__assert_fail@plt+0x8404>
   194c8:	b	194e8 <__assert_fail@plt+0x8410>
   194cc:	ldr	r0, [fp, #8]
   194d0:	movw	r1, #0
   194d4:	cmp	r1, r0
   194d8:	bge	194e8 <__assert_fail@plt+0x8410>
   194dc:	movw	r0, #0
   194e0:	str	r0, [sp, #72]	; 0x48
   194e4:	b	19500 <__assert_fail@plt+0x8428>
   194e8:	ldr	r0, [pc, #2968]	; 1a088 <__assert_fail@plt+0x8fb0>
   194ec:	ldr	r1, [fp, #8]
   194f0:	movw	r2, #0
   194f4:	sub	r1, r2, r1
   194f8:	sdiv	r0, r0, r1
   194fc:	str	r0, [sp, #72]	; 0x48
   19500:	ldr	r0, [sp, #72]	; 0x48
   19504:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19508:	mvn	r2, #0
   1950c:	sub	r1, r2, r1
   19510:	cmp	r0, r1
   19514:	ble	19618 <__assert_fail@plt+0x8540>
   19518:	b	1962c <__assert_fail@plt+0x8554>
   1951c:	ldr	r0, [fp, #8]
   19520:	cmn	r0, #1
   19524:	bne	1956c <__assert_fail@plt+0x8494>
   19528:	b	1952c <__assert_fail@plt+0x8454>
   1952c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19530:	add	r0, r0, #-2147483648	; 0x80000000
   19534:	movw	r1, #0
   19538:	cmp	r1, r0
   1953c:	blt	19618 <__assert_fail@plt+0x8540>
   19540:	b	1962c <__assert_fail@plt+0x8554>
   19544:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19548:	movw	r1, #0
   1954c:	cmp	r1, r0
   19550:	bge	1962c <__assert_fail@plt+0x8554>
   19554:	ldr	r0, [pc, #2860]	; 1a088 <__assert_fail@plt+0x8fb0>
   19558:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1955c:	sub	r1, r1, #1
   19560:	cmp	r0, r1
   19564:	blt	19618 <__assert_fail@plt+0x8540>
   19568:	b	1962c <__assert_fail@plt+0x8554>
   1956c:	ldr	r0, [pc, #2844]	; 1a090 <__assert_fail@plt+0x8fb8>
   19570:	ldr	r1, [fp, #8]
   19574:	sdiv	r0, r0, r1
   19578:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1957c:	cmp	r0, r1
   19580:	blt	19618 <__assert_fail@plt+0x8540>
   19584:	b	1962c <__assert_fail@plt+0x8554>
   19588:	ldr	r0, [fp, #8]
   1958c:	cmp	r0, #0
   19590:	bne	19598 <__assert_fail@plt+0x84c0>
   19594:	b	1962c <__assert_fail@plt+0x8554>
   19598:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1959c:	cmp	r0, #0
   195a0:	bge	19600 <__assert_fail@plt+0x8528>
   195a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   195a8:	cmn	r0, #1
   195ac:	bne	195e4 <__assert_fail@plt+0x850c>
   195b0:	b	195b4 <__assert_fail@plt+0x84dc>
   195b4:	ldr	r0, [fp, #8]
   195b8:	add	r0, r0, #-2147483648	; 0x80000000
   195bc:	movw	r1, #0
   195c0:	cmp	r1, r0
   195c4:	blt	19618 <__assert_fail@plt+0x8540>
   195c8:	b	1962c <__assert_fail@plt+0x8554>
   195cc:	ldr	r0, [pc, #2740]	; 1a088 <__assert_fail@plt+0x8fb0>
   195d0:	ldr	r1, [fp, #8]
   195d4:	sub	r1, r1, #1
   195d8:	cmp	r0, r1
   195dc:	blt	19618 <__assert_fail@plt+0x8540>
   195e0:	b	1962c <__assert_fail@plt+0x8554>
   195e4:	ldr	r0, [pc, #2724]	; 1a090 <__assert_fail@plt+0x8fb8>
   195e8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   195ec:	sdiv	r0, r0, r1
   195f0:	ldr	r1, [fp, #8]
   195f4:	cmp	r0, r1
   195f8:	blt	19618 <__assert_fail@plt+0x8540>
   195fc:	b	1962c <__assert_fail@plt+0x8554>
   19600:	ldr	r0, [pc, #2688]	; 1a088 <__assert_fail@plt+0x8fb0>
   19604:	ldr	r1, [fp, #8]
   19608:	sdiv	r0, r0, r1
   1960c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19610:	cmp	r0, r1
   19614:	bge	1962c <__assert_fail@plt+0x8554>
   19618:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1961c:	ldr	r1, [fp, #8]
   19620:	mul	r0, r0, r1
   19624:	str	r0, [fp, #-28]	; 0xffffffe4
   19628:	b	1a05c <__assert_fail@plt+0x8f84>
   1962c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19630:	ldr	r1, [fp, #8]
   19634:	mul	r0, r0, r1
   19638:	str	r0, [fp, #-28]	; 0xffffffe4
   1963c:	b	1a060 <__assert_fail@plt+0x8f88>
   19640:	ldr	r0, [fp, #8]
   19644:	cmp	r0, #0
   19648:	bge	19758 <__assert_fail@plt+0x8680>
   1964c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19650:	cmp	r0, #0
   19654:	bge	196e0 <__assert_fail@plt+0x8608>
   19658:	b	19678 <__assert_fail@plt+0x85a0>
   1965c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19660:	ldr	r1, [fp, #8]
   19664:	mvn	r2, #0
   19668:	udiv	r1, r2, r1
   1966c:	cmp	r0, r1
   19670:	bcc	197f4 <__assert_fail@plt+0x871c>
   19674:	b	19808 <__assert_fail@plt+0x8730>
   19678:	b	1967c <__assert_fail@plt+0x85a4>
   1967c:	ldr	r0, [pc, #2568]	; 1a08c <__assert_fail@plt+0x8fb4>
   19680:	ldr	r1, [fp, #8]
   19684:	cmp	r1, r0
   19688:	blt	196a0 <__assert_fail@plt+0x85c8>
   1968c:	b	196ac <__assert_fail@plt+0x85d4>
   19690:	ldr	r0, [fp, #8]
   19694:	movw	r1, #0
   19698:	cmp	r1, r0
   1969c:	bge	196ac <__assert_fail@plt+0x85d4>
   196a0:	movw	r0, #1
   196a4:	str	r0, [sp, #68]	; 0x44
   196a8:	b	196c4 <__assert_fail@plt+0x85ec>
   196ac:	ldr	r0, [fp, #8]
   196b0:	movw	r1, #0
   196b4:	sub	r0, r1, r0
   196b8:	mvn	r1, #0
   196bc:	udiv	r0, r1, r0
   196c0:	str	r0, [sp, #68]	; 0x44
   196c4:	ldr	r0, [sp, #68]	; 0x44
   196c8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   196cc:	mvn	r2, #0
   196d0:	sub	r1, r2, r1
   196d4:	cmp	r0, r1
   196d8:	bls	197f4 <__assert_fail@plt+0x871c>
   196dc:	b	19808 <__assert_fail@plt+0x8730>
   196e0:	b	196e4 <__assert_fail@plt+0x860c>
   196e4:	b	1973c <__assert_fail@plt+0x8664>
   196e8:	b	1973c <__assert_fail@plt+0x8664>
   196ec:	ldr	r0, [fp, #8]
   196f0:	cmn	r0, #1
   196f4:	bne	1973c <__assert_fail@plt+0x8664>
   196f8:	b	196fc <__assert_fail@plt+0x8624>
   196fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19700:	add	r0, r0, #0
   19704:	movw	r1, #0
   19708:	cmp	r1, r0
   1970c:	blt	197f4 <__assert_fail@plt+0x871c>
   19710:	b	19808 <__assert_fail@plt+0x8730>
   19714:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19718:	movw	r1, #0
   1971c:	cmp	r1, r0
   19720:	bge	19808 <__assert_fail@plt+0x8730>
   19724:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19728:	sub	r0, r0, #1
   1972c:	mvn	r1, #0
   19730:	cmp	r1, r0
   19734:	blt	197f4 <__assert_fail@plt+0x871c>
   19738:	b	19808 <__assert_fail@plt+0x8730>
   1973c:	ldr	r0, [fp, #8]
   19740:	movw	r1, #0
   19744:	sdiv	r0, r1, r0
   19748:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1974c:	cmp	r0, r1
   19750:	blt	197f4 <__assert_fail@plt+0x871c>
   19754:	b	19808 <__assert_fail@plt+0x8730>
   19758:	ldr	r0, [fp, #8]
   1975c:	cmp	r0, #0
   19760:	bne	19768 <__assert_fail@plt+0x8690>
   19764:	b	19808 <__assert_fail@plt+0x8730>
   19768:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1976c:	cmp	r0, #0
   19770:	bge	197dc <__assert_fail@plt+0x8704>
   19774:	b	19778 <__assert_fail@plt+0x86a0>
   19778:	b	197c0 <__assert_fail@plt+0x86e8>
   1977c:	b	197c0 <__assert_fail@plt+0x86e8>
   19780:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19784:	cmn	r0, #1
   19788:	bne	197c0 <__assert_fail@plt+0x86e8>
   1978c:	b	19790 <__assert_fail@plt+0x86b8>
   19790:	ldr	r0, [fp, #8]
   19794:	add	r0, r0, #0
   19798:	movw	r1, #0
   1979c:	cmp	r1, r0
   197a0:	blt	197f4 <__assert_fail@plt+0x871c>
   197a4:	b	19808 <__assert_fail@plt+0x8730>
   197a8:	ldr	r0, [fp, #8]
   197ac:	sub	r0, r0, #1
   197b0:	mvn	r1, #0
   197b4:	cmp	r1, r0
   197b8:	blt	197f4 <__assert_fail@plt+0x871c>
   197bc:	b	19808 <__assert_fail@plt+0x8730>
   197c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   197c4:	movw	r1, #0
   197c8:	sdiv	r0, r1, r0
   197cc:	ldr	r1, [fp, #8]
   197d0:	cmp	r0, r1
   197d4:	blt	197f4 <__assert_fail@plt+0x871c>
   197d8:	b	19808 <__assert_fail@plt+0x8730>
   197dc:	ldr	r0, [fp, #8]
   197e0:	mvn	r1, #0
   197e4:	udiv	r0, r1, r0
   197e8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   197ec:	cmp	r0, r1
   197f0:	bcs	19808 <__assert_fail@plt+0x8730>
   197f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   197f8:	ldr	r1, [fp, #8]
   197fc:	mul	r0, r0, r1
   19800:	str	r0, [fp, #-28]	; 0xffffffe4
   19804:	b	1a05c <__assert_fail@plt+0x8f84>
   19808:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1980c:	ldr	r1, [fp, #8]
   19810:	mul	r0, r0, r1
   19814:	str	r0, [fp, #-28]	; 0xffffffe4
   19818:	b	1a060 <__assert_fail@plt+0x8f88>
   1981c:	b	19820 <__assert_fail@plt+0x8748>
   19820:	b	19824 <__assert_fail@plt+0x874c>
   19824:	ldr	r0, [fp, #8]
   19828:	cmp	r0, #0
   1982c:	bge	19930 <__assert_fail@plt+0x8858>
   19830:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19834:	cmp	r0, #0
   19838:	bge	198c4 <__assert_fail@plt+0x87ec>
   1983c:	b	19840 <__assert_fail@plt+0x8768>
   19840:	ldr	r0, [pc, #2112]	; 1a088 <__assert_fail@plt+0x8fb0>
   19844:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19848:	ldr	r2, [fp, #8]
   1984c:	sdiv	r0, r0, r2
   19850:	cmp	r1, r0
   19854:	blt	199c0 <__assert_fail@plt+0x88e8>
   19858:	b	199d4 <__assert_fail@plt+0x88fc>
   1985c:	b	19860 <__assert_fail@plt+0x8788>
   19860:	ldr	r0, [pc, #2084]	; 1a08c <__assert_fail@plt+0x8fb4>
   19864:	ldr	r1, [fp, #8]
   19868:	cmp	r1, r0
   1986c:	blt	19884 <__assert_fail@plt+0x87ac>
   19870:	b	19890 <__assert_fail@plt+0x87b8>
   19874:	ldr	r0, [fp, #8]
   19878:	movw	r1, #0
   1987c:	cmp	r1, r0
   19880:	bge	19890 <__assert_fail@plt+0x87b8>
   19884:	movw	r0, #0
   19888:	str	r0, [sp, #64]	; 0x40
   1988c:	b	198a8 <__assert_fail@plt+0x87d0>
   19890:	ldr	r0, [pc, #2032]	; 1a088 <__assert_fail@plt+0x8fb0>
   19894:	ldr	r1, [fp, #8]
   19898:	movw	r2, #0
   1989c:	sub	r1, r2, r1
   198a0:	sdiv	r0, r0, r1
   198a4:	str	r0, [sp, #64]	; 0x40
   198a8:	ldr	r0, [sp, #64]	; 0x40
   198ac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   198b0:	mvn	r2, #0
   198b4:	sub	r1, r2, r1
   198b8:	cmp	r0, r1
   198bc:	ble	199c0 <__assert_fail@plt+0x88e8>
   198c0:	b	199d4 <__assert_fail@plt+0x88fc>
   198c4:	ldr	r0, [fp, #8]
   198c8:	cmn	r0, #1
   198cc:	bne	19914 <__assert_fail@plt+0x883c>
   198d0:	b	198d4 <__assert_fail@plt+0x87fc>
   198d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   198d8:	add	r0, r0, #-2147483648	; 0x80000000
   198dc:	movw	r1, #0
   198e0:	cmp	r1, r0
   198e4:	blt	199c0 <__assert_fail@plt+0x88e8>
   198e8:	b	199d4 <__assert_fail@plt+0x88fc>
   198ec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   198f0:	movw	r1, #0
   198f4:	cmp	r1, r0
   198f8:	bge	199d4 <__assert_fail@plt+0x88fc>
   198fc:	ldr	r0, [pc, #1924]	; 1a088 <__assert_fail@plt+0x8fb0>
   19900:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19904:	sub	r1, r1, #1
   19908:	cmp	r0, r1
   1990c:	blt	199c0 <__assert_fail@plt+0x88e8>
   19910:	b	199d4 <__assert_fail@plt+0x88fc>
   19914:	ldr	r0, [pc, #1908]	; 1a090 <__assert_fail@plt+0x8fb8>
   19918:	ldr	r1, [fp, #8]
   1991c:	sdiv	r0, r0, r1
   19920:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19924:	cmp	r0, r1
   19928:	blt	199c0 <__assert_fail@plt+0x88e8>
   1992c:	b	199d4 <__assert_fail@plt+0x88fc>
   19930:	ldr	r0, [fp, #8]
   19934:	cmp	r0, #0
   19938:	bne	19940 <__assert_fail@plt+0x8868>
   1993c:	b	199d4 <__assert_fail@plt+0x88fc>
   19940:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19944:	cmp	r0, #0
   19948:	bge	199a8 <__assert_fail@plt+0x88d0>
   1994c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19950:	cmn	r0, #1
   19954:	bne	1998c <__assert_fail@plt+0x88b4>
   19958:	b	1995c <__assert_fail@plt+0x8884>
   1995c:	ldr	r0, [fp, #8]
   19960:	add	r0, r0, #-2147483648	; 0x80000000
   19964:	movw	r1, #0
   19968:	cmp	r1, r0
   1996c:	blt	199c0 <__assert_fail@plt+0x88e8>
   19970:	b	199d4 <__assert_fail@plt+0x88fc>
   19974:	ldr	r0, [pc, #1804]	; 1a088 <__assert_fail@plt+0x8fb0>
   19978:	ldr	r1, [fp, #8]
   1997c:	sub	r1, r1, #1
   19980:	cmp	r0, r1
   19984:	blt	199c0 <__assert_fail@plt+0x88e8>
   19988:	b	199d4 <__assert_fail@plt+0x88fc>
   1998c:	ldr	r0, [pc, #1788]	; 1a090 <__assert_fail@plt+0x8fb8>
   19990:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19994:	sdiv	r0, r0, r1
   19998:	ldr	r1, [fp, #8]
   1999c:	cmp	r0, r1
   199a0:	blt	199c0 <__assert_fail@plt+0x88e8>
   199a4:	b	199d4 <__assert_fail@plt+0x88fc>
   199a8:	ldr	r0, [pc, #1752]	; 1a088 <__assert_fail@plt+0x8fb0>
   199ac:	ldr	r1, [fp, #8]
   199b0:	sdiv	r0, r0, r1
   199b4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   199b8:	cmp	r0, r1
   199bc:	bge	199d4 <__assert_fail@plt+0x88fc>
   199c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   199c4:	ldr	r1, [fp, #8]
   199c8:	mul	r0, r0, r1
   199cc:	str	r0, [fp, #-28]	; 0xffffffe4
   199d0:	b	1a05c <__assert_fail@plt+0x8f84>
   199d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   199d8:	ldr	r1, [fp, #8]
   199dc:	mul	r0, r0, r1
   199e0:	str	r0, [fp, #-28]	; 0xffffffe4
   199e4:	b	1a060 <__assert_fail@plt+0x8f88>
   199e8:	ldr	r0, [fp, #8]
   199ec:	cmp	r0, #0
   199f0:	bge	19b00 <__assert_fail@plt+0x8a28>
   199f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   199f8:	cmp	r0, #0
   199fc:	bge	19a88 <__assert_fail@plt+0x89b0>
   19a00:	b	19a20 <__assert_fail@plt+0x8948>
   19a04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19a08:	ldr	r1, [fp, #8]
   19a0c:	mvn	r2, #0
   19a10:	udiv	r1, r2, r1
   19a14:	cmp	r0, r1
   19a18:	bcc	19b9c <__assert_fail@plt+0x8ac4>
   19a1c:	b	19bb0 <__assert_fail@plt+0x8ad8>
   19a20:	b	19a24 <__assert_fail@plt+0x894c>
   19a24:	ldr	r0, [pc, #1632]	; 1a08c <__assert_fail@plt+0x8fb4>
   19a28:	ldr	r1, [fp, #8]
   19a2c:	cmp	r1, r0
   19a30:	blt	19a48 <__assert_fail@plt+0x8970>
   19a34:	b	19a54 <__assert_fail@plt+0x897c>
   19a38:	ldr	r0, [fp, #8]
   19a3c:	movw	r1, #0
   19a40:	cmp	r1, r0
   19a44:	bge	19a54 <__assert_fail@plt+0x897c>
   19a48:	movw	r0, #1
   19a4c:	str	r0, [sp, #60]	; 0x3c
   19a50:	b	19a6c <__assert_fail@plt+0x8994>
   19a54:	ldr	r0, [fp, #8]
   19a58:	movw	r1, #0
   19a5c:	sub	r0, r1, r0
   19a60:	mvn	r1, #0
   19a64:	udiv	r0, r1, r0
   19a68:	str	r0, [sp, #60]	; 0x3c
   19a6c:	ldr	r0, [sp, #60]	; 0x3c
   19a70:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19a74:	mvn	r2, #0
   19a78:	sub	r1, r2, r1
   19a7c:	cmp	r0, r1
   19a80:	bls	19b9c <__assert_fail@plt+0x8ac4>
   19a84:	b	19bb0 <__assert_fail@plt+0x8ad8>
   19a88:	b	19a8c <__assert_fail@plt+0x89b4>
   19a8c:	b	19ae4 <__assert_fail@plt+0x8a0c>
   19a90:	b	19ae4 <__assert_fail@plt+0x8a0c>
   19a94:	ldr	r0, [fp, #8]
   19a98:	cmn	r0, #1
   19a9c:	bne	19ae4 <__assert_fail@plt+0x8a0c>
   19aa0:	b	19aa4 <__assert_fail@plt+0x89cc>
   19aa4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19aa8:	add	r0, r0, #0
   19aac:	movw	r1, #0
   19ab0:	cmp	r1, r0
   19ab4:	blt	19b9c <__assert_fail@plt+0x8ac4>
   19ab8:	b	19bb0 <__assert_fail@plt+0x8ad8>
   19abc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19ac0:	movw	r1, #0
   19ac4:	cmp	r1, r0
   19ac8:	bge	19bb0 <__assert_fail@plt+0x8ad8>
   19acc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19ad0:	sub	r0, r0, #1
   19ad4:	mvn	r1, #0
   19ad8:	cmp	r1, r0
   19adc:	blt	19b9c <__assert_fail@plt+0x8ac4>
   19ae0:	b	19bb0 <__assert_fail@plt+0x8ad8>
   19ae4:	ldr	r0, [fp, #8]
   19ae8:	movw	r1, #0
   19aec:	sdiv	r0, r1, r0
   19af0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19af4:	cmp	r0, r1
   19af8:	blt	19b9c <__assert_fail@plt+0x8ac4>
   19afc:	b	19bb0 <__assert_fail@plt+0x8ad8>
   19b00:	ldr	r0, [fp, #8]
   19b04:	cmp	r0, #0
   19b08:	bne	19b10 <__assert_fail@plt+0x8a38>
   19b0c:	b	19bb0 <__assert_fail@plt+0x8ad8>
   19b10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19b14:	cmp	r0, #0
   19b18:	bge	19b84 <__assert_fail@plt+0x8aac>
   19b1c:	b	19b20 <__assert_fail@plt+0x8a48>
   19b20:	b	19b68 <__assert_fail@plt+0x8a90>
   19b24:	b	19b68 <__assert_fail@plt+0x8a90>
   19b28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19b2c:	cmn	r0, #1
   19b30:	bne	19b68 <__assert_fail@plt+0x8a90>
   19b34:	b	19b38 <__assert_fail@plt+0x8a60>
   19b38:	ldr	r0, [fp, #8]
   19b3c:	add	r0, r0, #0
   19b40:	movw	r1, #0
   19b44:	cmp	r1, r0
   19b48:	blt	19b9c <__assert_fail@plt+0x8ac4>
   19b4c:	b	19bb0 <__assert_fail@plt+0x8ad8>
   19b50:	ldr	r0, [fp, #8]
   19b54:	sub	r0, r0, #1
   19b58:	mvn	r1, #0
   19b5c:	cmp	r1, r0
   19b60:	blt	19b9c <__assert_fail@plt+0x8ac4>
   19b64:	b	19bb0 <__assert_fail@plt+0x8ad8>
   19b68:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19b6c:	movw	r1, #0
   19b70:	sdiv	r0, r1, r0
   19b74:	ldr	r1, [fp, #8]
   19b78:	cmp	r0, r1
   19b7c:	blt	19b9c <__assert_fail@plt+0x8ac4>
   19b80:	b	19bb0 <__assert_fail@plt+0x8ad8>
   19b84:	ldr	r0, [fp, #8]
   19b88:	mvn	r1, #0
   19b8c:	udiv	r0, r1, r0
   19b90:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19b94:	cmp	r0, r1
   19b98:	bcs	19bb0 <__assert_fail@plt+0x8ad8>
   19b9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19ba0:	ldr	r1, [fp, #8]
   19ba4:	mul	r0, r0, r1
   19ba8:	str	r0, [fp, #-28]	; 0xffffffe4
   19bac:	b	1a05c <__assert_fail@plt+0x8f84>
   19bb0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19bb4:	ldr	r1, [fp, #8]
   19bb8:	mul	r0, r0, r1
   19bbc:	str	r0, [fp, #-28]	; 0xffffffe4
   19bc0:	b	1a060 <__assert_fail@plt+0x8f88>
   19bc4:	b	19bc8 <__assert_fail@plt+0x8af0>
   19bc8:	ldr	r0, [fp, #8]
   19bcc:	cmp	r0, #0
   19bd0:	bge	19d38 <__assert_fail@plt+0x8c60>
   19bd4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19bd8:	cmp	r0, #0
   19bdc:	bge	19cb4 <__assert_fail@plt+0x8bdc>
   19be0:	b	19be4 <__assert_fail@plt+0x8b0c>
   19be4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19be8:	ldr	r1, [fp, #8]
   19bec:	asr	r3, r1, #31
   19bf0:	mvn	r2, #0
   19bf4:	mvn	ip, #-2147483648	; 0x80000000
   19bf8:	str	r0, [sp, #56]	; 0x38
   19bfc:	mov	r0, r2
   19c00:	str	r1, [sp, #52]	; 0x34
   19c04:	mov	r1, ip
   19c08:	ldr	r2, [sp, #52]	; 0x34
   19c0c:	bl	1e910 <__assert_fail@plt+0xd838>
   19c10:	ldr	r2, [sp, #56]	; 0x38
   19c14:	subs	r0, r2, r0
   19c18:	rscs	r1, r1, r2, asr #31
   19c1c:	blt	19e00 <__assert_fail@plt+0x8d28>
   19c20:	b	19e14 <__assert_fail@plt+0x8d3c>
   19c24:	b	19c28 <__assert_fail@plt+0x8b50>
   19c28:	ldr	r0, [pc, #1116]	; 1a08c <__assert_fail@plt+0x8fb4>
   19c2c:	ldr	r1, [fp, #8]
   19c30:	cmp	r1, r0
   19c34:	blt	19c4c <__assert_fail@plt+0x8b74>
   19c38:	b	19c60 <__assert_fail@plt+0x8b88>
   19c3c:	ldr	r0, [fp, #8]
   19c40:	movw	r1, #0
   19c44:	cmp	r1, r0
   19c48:	bge	19c60 <__assert_fail@plt+0x8b88>
   19c4c:	mov	r0, #0
   19c50:	mvn	r1, #0
   19c54:	str	r1, [sp, #48]	; 0x30
   19c58:	str	r0, [sp, #44]	; 0x2c
   19c5c:	b	19c94 <__assert_fail@plt+0x8bbc>
   19c60:	ldr	r0, [fp, #8]
   19c64:	rsb	r0, r0, #0
   19c68:	asr	r3, r0, #31
   19c6c:	mvn	r1, #0
   19c70:	mvn	r2, #-2147483648	; 0x80000000
   19c74:	str	r0, [sp, #40]	; 0x28
   19c78:	mov	r0, r1
   19c7c:	mov	r1, r2
   19c80:	ldr	r2, [sp, #40]	; 0x28
   19c84:	bl	1e910 <__assert_fail@plt+0xd838>
   19c88:	str	r0, [sp, #48]	; 0x30
   19c8c:	str	r1, [sp, #44]	; 0x2c
   19c90:	b	19c94 <__assert_fail@plt+0x8bbc>
   19c94:	ldr	r0, [sp, #44]	; 0x2c
   19c98:	ldr	r1, [sp, #48]	; 0x30
   19c9c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19ca0:	mvn	r2, r2
   19ca4:	subs	r1, r2, r1
   19ca8:	rscs	r0, r0, r2, asr #31
   19cac:	bge	19e00 <__assert_fail@plt+0x8d28>
   19cb0:	b	19e14 <__assert_fail@plt+0x8d3c>
   19cb4:	ldr	r0, [fp, #8]
   19cb8:	cmn	r0, #1
   19cbc:	bne	19d00 <__assert_fail@plt+0x8c28>
   19cc0:	b	19cc4 <__assert_fail@plt+0x8bec>
   19cc4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19cc8:	mov	r1, #-2147483648	; 0x80000000
   19ccc:	add	r1, r1, r0, asr #31
   19cd0:	rsbs	r0, r0, #0
   19cd4:	rscs	r1, r1, #0
   19cd8:	blt	19e00 <__assert_fail@plt+0x8d28>
   19cdc:	b	19e14 <__assert_fail@plt+0x8d3c>
   19ce0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19ce4:	movw	r1, #0
   19ce8:	cmp	r1, r0
   19cec:	bge	19e14 <__assert_fail@plt+0x8d3c>
   19cf0:	mov	r0, #0
   19cf4:	cmp	r0, #0
   19cf8:	bne	19e00 <__assert_fail@plt+0x8d28>
   19cfc:	b	19e14 <__assert_fail@plt+0x8d3c>
   19d00:	ldr	r0, [fp, #8]
   19d04:	asr	r3, r0, #31
   19d08:	mov	r1, #0
   19d0c:	mov	r2, #-2147483648	; 0x80000000
   19d10:	str	r0, [sp, #36]	; 0x24
   19d14:	mov	r0, r1
   19d18:	mov	r1, r2
   19d1c:	ldr	r2, [sp, #36]	; 0x24
   19d20:	bl	1e910 <__assert_fail@plt+0xd838>
   19d24:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19d28:	subs	r0, r0, r2
   19d2c:	sbcs	r1, r1, r2, asr #31
   19d30:	blt	19e00 <__assert_fail@plt+0x8d28>
   19d34:	b	19e14 <__assert_fail@plt+0x8d3c>
   19d38:	ldr	r0, [fp, #8]
   19d3c:	cmp	r0, #0
   19d40:	bne	19d48 <__assert_fail@plt+0x8c70>
   19d44:	b	19e14 <__assert_fail@plt+0x8d3c>
   19d48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19d4c:	cmp	r0, #0
   19d50:	bge	19dc8 <__assert_fail@plt+0x8cf0>
   19d54:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19d58:	cmn	r0, #1
   19d5c:	bne	19d90 <__assert_fail@plt+0x8cb8>
   19d60:	b	19d64 <__assert_fail@plt+0x8c8c>
   19d64:	ldr	r0, [fp, #8]
   19d68:	mov	r1, #-2147483648	; 0x80000000
   19d6c:	add	r1, r1, r0, asr #31
   19d70:	rsbs	r0, r0, #0
   19d74:	rscs	r1, r1, #0
   19d78:	blt	19e00 <__assert_fail@plt+0x8d28>
   19d7c:	b	19e14 <__assert_fail@plt+0x8d3c>
   19d80:	mov	r0, #0
   19d84:	cmp	r0, #0
   19d88:	bne	19e00 <__assert_fail@plt+0x8d28>
   19d8c:	b	19e14 <__assert_fail@plt+0x8d3c>
   19d90:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19d94:	asr	r3, r0, #31
   19d98:	mov	r1, #0
   19d9c:	mov	r2, #-2147483648	; 0x80000000
   19da0:	str	r0, [sp, #32]
   19da4:	mov	r0, r1
   19da8:	mov	r1, r2
   19dac:	ldr	r2, [sp, #32]
   19db0:	bl	1e910 <__assert_fail@plt+0xd838>
   19db4:	ldr	r2, [fp, #8]
   19db8:	subs	r0, r0, r2
   19dbc:	sbcs	r1, r1, r2, asr #31
   19dc0:	blt	19e00 <__assert_fail@plt+0x8d28>
   19dc4:	b	19e14 <__assert_fail@plt+0x8d3c>
   19dc8:	ldr	r0, [fp, #8]
   19dcc:	asr	r3, r0, #31
   19dd0:	mvn	r1, #0
   19dd4:	mvn	r2, #-2147483648	; 0x80000000
   19dd8:	str	r0, [sp, #28]
   19ddc:	mov	r0, r1
   19de0:	mov	r1, r2
   19de4:	ldr	r2, [sp, #28]
   19de8:	bl	1e910 <__assert_fail@plt+0xd838>
   19dec:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19df0:	subs	r0, r0, r2
   19df4:	sbcs	r1, r1, r2, asr #31
   19df8:	bge	19e14 <__assert_fail@plt+0x8d3c>
   19dfc:	b	19e00 <__assert_fail@plt+0x8d28>
   19e00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19e04:	ldr	r1, [fp, #8]
   19e08:	mul	r0, r0, r1
   19e0c:	str	r0, [fp, #-28]	; 0xffffffe4
   19e10:	b	1a05c <__assert_fail@plt+0x8f84>
   19e14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19e18:	ldr	r1, [fp, #8]
   19e1c:	mul	r0, r0, r1
   19e20:	str	r0, [fp, #-28]	; 0xffffffe4
   19e24:	b	1a060 <__assert_fail@plt+0x8f88>
   19e28:	ldr	r0, [fp, #8]
   19e2c:	cmp	r0, #0
   19e30:	bge	19f80 <__assert_fail@plt+0x8ea8>
   19e34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19e38:	cmp	r0, #0
   19e3c:	bge	19f08 <__assert_fail@plt+0x8e30>
   19e40:	b	19e80 <__assert_fail@plt+0x8da8>
   19e44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19e48:	ldr	r1, [fp, #8]
   19e4c:	asr	r3, r1, #31
   19e50:	mvn	r2, #0
   19e54:	str	r0, [sp, #24]
   19e58:	mov	r0, r2
   19e5c:	str	r1, [sp, #20]
   19e60:	mov	r1, r2
   19e64:	ldr	r2, [sp, #20]
   19e68:	bl	1e9e4 <__assert_fail@plt+0xd90c>
   19e6c:	ldr	r2, [sp, #24]
   19e70:	subs	r0, r2, r0
   19e74:	rscs	r1, r1, r2, asr #31
   19e78:	bcc	1a034 <__assert_fail@plt+0x8f5c>
   19e7c:	b	1a048 <__assert_fail@plt+0x8f70>
   19e80:	b	19e84 <__assert_fail@plt+0x8dac>
   19e84:	ldr	r0, [pc, #512]	; 1a08c <__assert_fail@plt+0x8fb4>
   19e88:	ldr	r1, [fp, #8]
   19e8c:	cmp	r1, r0
   19e90:	blt	19ea8 <__assert_fail@plt+0x8dd0>
   19e94:	b	19ebc <__assert_fail@plt+0x8de4>
   19e98:	ldr	r0, [fp, #8]
   19e9c:	movw	r1, #0
   19ea0:	cmp	r1, r0
   19ea4:	bge	19ebc <__assert_fail@plt+0x8de4>
   19ea8:	mov	r0, #1
   19eac:	mvn	r1, #0
   19eb0:	str	r1, [sp, #16]
   19eb4:	str	r0, [sp, #12]
   19eb8:	b	19ee8 <__assert_fail@plt+0x8e10>
   19ebc:	ldr	r0, [fp, #8]
   19ec0:	rsb	r0, r0, #0
   19ec4:	asr	r3, r0, #31
   19ec8:	mvn	r1, #0
   19ecc:	str	r0, [sp, #8]
   19ed0:	mov	r0, r1
   19ed4:	ldr	r2, [sp, #8]
   19ed8:	bl	1e9e4 <__assert_fail@plt+0xd90c>
   19edc:	str	r0, [sp, #16]
   19ee0:	str	r1, [sp, #12]
   19ee4:	b	19ee8 <__assert_fail@plt+0x8e10>
   19ee8:	ldr	r0, [sp, #12]
   19eec:	ldr	r1, [sp, #16]
   19ef0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19ef4:	mvn	r2, r2
   19ef8:	subs	r1, r2, r1
   19efc:	rscs	r0, r0, r2, asr #31
   19f00:	bcs	1a034 <__assert_fail@plt+0x8f5c>
   19f04:	b	1a048 <__assert_fail@plt+0x8f70>
   19f08:	b	19f0c <__assert_fail@plt+0x8e34>
   19f0c:	b	19f64 <__assert_fail@plt+0x8e8c>
   19f10:	b	19f64 <__assert_fail@plt+0x8e8c>
   19f14:	ldr	r0, [fp, #8]
   19f18:	cmn	r0, #1
   19f1c:	bne	19f64 <__assert_fail@plt+0x8e8c>
   19f20:	b	19f24 <__assert_fail@plt+0x8e4c>
   19f24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19f28:	add	r0, r0, #0
   19f2c:	movw	r1, #0
   19f30:	cmp	r1, r0
   19f34:	blt	1a034 <__assert_fail@plt+0x8f5c>
   19f38:	b	1a048 <__assert_fail@plt+0x8f70>
   19f3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19f40:	movw	r1, #0
   19f44:	cmp	r1, r0
   19f48:	bge	1a048 <__assert_fail@plt+0x8f70>
   19f4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19f50:	sub	r0, r0, #1
   19f54:	mvn	r1, #0
   19f58:	cmp	r1, r0
   19f5c:	blt	1a034 <__assert_fail@plt+0x8f5c>
   19f60:	b	1a048 <__assert_fail@plt+0x8f70>
   19f64:	ldr	r0, [fp, #8]
   19f68:	movw	r1, #0
   19f6c:	sdiv	r0, r1, r0
   19f70:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19f74:	cmp	r0, r1
   19f78:	blt	1a034 <__assert_fail@plt+0x8f5c>
   19f7c:	b	1a048 <__assert_fail@plt+0x8f70>
   19f80:	ldr	r0, [fp, #8]
   19f84:	cmp	r0, #0
   19f88:	bne	19f90 <__assert_fail@plt+0x8eb8>
   19f8c:	b	1a048 <__assert_fail@plt+0x8f70>
   19f90:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19f94:	cmp	r0, #0
   19f98:	bge	1a004 <__assert_fail@plt+0x8f2c>
   19f9c:	b	19fa0 <__assert_fail@plt+0x8ec8>
   19fa0:	b	19fe8 <__assert_fail@plt+0x8f10>
   19fa4:	b	19fe8 <__assert_fail@plt+0x8f10>
   19fa8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19fac:	cmn	r0, #1
   19fb0:	bne	19fe8 <__assert_fail@plt+0x8f10>
   19fb4:	b	19fb8 <__assert_fail@plt+0x8ee0>
   19fb8:	ldr	r0, [fp, #8]
   19fbc:	add	r0, r0, #0
   19fc0:	movw	r1, #0
   19fc4:	cmp	r1, r0
   19fc8:	blt	1a034 <__assert_fail@plt+0x8f5c>
   19fcc:	b	1a048 <__assert_fail@plt+0x8f70>
   19fd0:	ldr	r0, [fp, #8]
   19fd4:	sub	r0, r0, #1
   19fd8:	mvn	r1, #0
   19fdc:	cmp	r1, r0
   19fe0:	blt	1a034 <__assert_fail@plt+0x8f5c>
   19fe4:	b	1a048 <__assert_fail@plt+0x8f70>
   19fe8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19fec:	movw	r1, #0
   19ff0:	sdiv	r0, r1, r0
   19ff4:	ldr	r1, [fp, #8]
   19ff8:	cmp	r0, r1
   19ffc:	blt	1a034 <__assert_fail@plt+0x8f5c>
   1a000:	b	1a048 <__assert_fail@plt+0x8f70>
   1a004:	ldr	r0, [fp, #8]
   1a008:	asr	r3, r0, #31
   1a00c:	mvn	r1, #0
   1a010:	str	r0, [sp, #4]
   1a014:	mov	r0, r1
   1a018:	ldr	r2, [sp, #4]
   1a01c:	bl	1e9e4 <__assert_fail@plt+0xd90c>
   1a020:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a024:	subs	r0, r0, r2
   1a028:	sbcs	r1, r1, r2, asr #31
   1a02c:	bcs	1a048 <__assert_fail@plt+0x8f70>
   1a030:	b	1a034 <__assert_fail@plt+0x8f5c>
   1a034:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a038:	ldr	r1, [fp, #8]
   1a03c:	mul	r0, r0, r1
   1a040:	str	r0, [fp, #-28]	; 0xffffffe4
   1a044:	b	1a05c <__assert_fail@plt+0x8f84>
   1a048:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a04c:	ldr	r1, [fp, #8]
   1a050:	mul	r0, r0, r1
   1a054:	str	r0, [fp, #-28]	; 0xffffffe4
   1a058:	b	1a060 <__assert_fail@plt+0x8f88>
   1a05c:	bl	1a238 <__assert_fail@plt+0x9160>
   1a060:	ldr	r0, [fp, #-4]
   1a064:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a068:	bl	17598 <__assert_fail@plt+0x64c0>
   1a06c:	str	r0, [fp, #-4]
   1a070:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a074:	ldr	r1, [fp, #-8]
   1a078:	str	r0, [r1]
   1a07c:	ldr	r0, [fp, #-4]
   1a080:	mov	sp, fp
   1a084:	pop	{fp, pc}
   1a088:	svcvc	0x00ffffff
   1a08c:	andhi	r0, r0, r1
   1a090:	andhi	r0, r0, r0
   1a094:			; <UNDEFINED> instruction: 0xffff8000
   1a098:	push	{fp, lr}
   1a09c:	mov	fp, sp
   1a0a0:	sub	sp, sp, #8
   1a0a4:	str	r0, [sp, #4]
   1a0a8:	ldr	r0, [sp, #4]
   1a0ac:	movw	r1, #1
   1a0b0:	bl	1a0bc <__assert_fail@plt+0x8fe4>
   1a0b4:	mov	sp, fp
   1a0b8:	pop	{fp, pc}
   1a0bc:	push	{fp, lr}
   1a0c0:	mov	fp, sp
   1a0c4:	sub	sp, sp, #8
   1a0c8:	str	r0, [sp, #4]
   1a0cc:	str	r1, [sp]
   1a0d0:	ldr	r0, [sp, #4]
   1a0d4:	ldr	r1, [sp]
   1a0d8:	bl	1c4a0 <__assert_fail@plt+0xb3c8>
   1a0dc:	bl	17524 <__assert_fail@plt+0x644c>
   1a0e0:	mov	sp, fp
   1a0e4:	pop	{fp, pc}
   1a0e8:	push	{fp, lr}
   1a0ec:	mov	fp, sp
   1a0f0:	sub	sp, sp, #8
   1a0f4:	str	r0, [sp, #4]
   1a0f8:	ldr	r0, [sp, #4]
   1a0fc:	movw	r1, #1
   1a100:	bl	1a10c <__assert_fail@plt+0x9034>
   1a104:	mov	sp, fp
   1a108:	pop	{fp, pc}
   1a10c:	push	{fp, lr}
   1a110:	mov	fp, sp
   1a114:	sub	sp, sp, #8
   1a118:	str	r0, [sp, #4]
   1a11c:	str	r1, [sp]
   1a120:	ldr	r0, [sp, #4]
   1a124:	ldr	r1, [sp]
   1a128:	bl	1cb7c <__assert_fail@plt+0xbaa4>
   1a12c:	bl	17524 <__assert_fail@plt+0x644c>
   1a130:	mov	sp, fp
   1a134:	pop	{fp, pc}
   1a138:	push	{fp, lr}
   1a13c:	mov	fp, sp
   1a140:	sub	sp, sp, #16
   1a144:	str	r0, [fp, #-4]
   1a148:	str	r1, [sp, #8]
   1a14c:	ldr	r0, [sp, #8]
   1a150:	bl	17500 <__assert_fail@plt+0x6428>
   1a154:	ldr	r1, [fp, #-4]
   1a158:	ldr	r2, [sp, #8]
   1a15c:	str	r0, [sp, #4]
   1a160:	bl	10ebc <memcpy@plt>
   1a164:	ldr	r0, [sp, #4]
   1a168:	mov	sp, fp
   1a16c:	pop	{fp, pc}
   1a170:	push	{fp, lr}
   1a174:	mov	fp, sp
   1a178:	sub	sp, sp, #16
   1a17c:	str	r0, [fp, #-4]
   1a180:	str	r1, [sp, #8]
   1a184:	ldr	r0, [sp, #8]
   1a188:	bl	17554 <__assert_fail@plt+0x647c>
   1a18c:	ldr	r1, [fp, #-4]
   1a190:	ldr	r2, [sp, #8]
   1a194:	str	r0, [sp, #4]
   1a198:	bl	10ebc <memcpy@plt>
   1a19c:	ldr	r0, [sp, #4]
   1a1a0:	mov	sp, fp
   1a1a4:	pop	{fp, pc}
   1a1a8:	push	{fp, lr}
   1a1ac:	mov	fp, sp
   1a1b0:	sub	sp, sp, #16
   1a1b4:	str	r0, [fp, #-4]
   1a1b8:	str	r1, [sp, #8]
   1a1bc:	ldr	r0, [sp, #8]
   1a1c0:	add	r0, r0, #1
   1a1c4:	bl	17554 <__assert_fail@plt+0x647c>
   1a1c8:	str	r0, [sp, #4]
   1a1cc:	ldr	r0, [sp, #4]
   1a1d0:	ldr	r1, [sp, #8]
   1a1d4:	add	r0, r0, r1
   1a1d8:	movw	r1, #0
   1a1dc:	strb	r1, [r0]
   1a1e0:	ldr	r0, [sp, #4]
   1a1e4:	ldr	r1, [fp, #-4]
   1a1e8:	ldr	r2, [sp, #8]
   1a1ec:	str	r0, [sp]
   1a1f0:	bl	10ebc <memcpy@plt>
   1a1f4:	ldr	r0, [sp]
   1a1f8:	mov	sp, fp
   1a1fc:	pop	{fp, pc}
   1a200:	push	{fp, lr}
   1a204:	mov	fp, sp
   1a208:	sub	sp, sp, #8
   1a20c:	str	r0, [sp, #4]
   1a210:	ldr	r0, [sp, #4]
   1a214:	ldr	r1, [sp, #4]
   1a218:	str	r0, [sp]
   1a21c:	mov	r0, r1
   1a220:	bl	10fdc <strlen@plt>
   1a224:	add	r1, r0, #1
   1a228:	ldr	r0, [sp]
   1a22c:	bl	1a138 <__assert_fail@plt+0x9060>
   1a230:	mov	sp, fp
   1a234:	pop	{fp, pc}
   1a238:	push	{fp, lr}
   1a23c:	mov	fp, sp
   1a240:	sub	sp, sp, #8
   1a244:	movw	r0, #252	; 0xfc
   1a248:	movt	r0, #3
   1a24c:	ldr	r0, [r0]
   1a250:	movw	r1, #63780	; 0xf924
   1a254:	movt	r1, #1
   1a258:	str	r0, [sp, #4]
   1a25c:	mov	r0, r1
   1a260:	bl	10fd0 <gettext@plt>
   1a264:	ldr	r1, [sp, #4]
   1a268:	str	r0, [sp]
   1a26c:	mov	r0, r1
   1a270:	movw	r1, #0
   1a274:	movw	r2, #61633	; 0xf0c1
   1a278:	movt	r2, #1
   1a27c:	ldr	r3, [sp]
   1a280:	bl	10f64 <error@plt>
   1a284:	bl	110c0 <abort@plt>
   1a288:	bx	lr
   1a28c:	push	{fp, lr}
   1a290:	mov	fp, sp
   1a294:	sub	sp, sp, #8
   1a298:	str	r0, [sp, #4]
   1a29c:	str	r1, [sp]
   1a2a0:	ldr	r0, [sp, #4]
   1a2a4:	ldr	r1, [sp]
   1a2a8:	bl	1c668 <__assert_fail@plt+0xb590>
   1a2ac:	cmp	r0, #0
   1a2b0:	bge	1a2b8 <__assert_fail@plt+0x91e0>
   1a2b4:	bl	1a288 <__assert_fail@plt+0x91b0>
   1a2b8:	mov	sp, fp
   1a2bc:	pop	{fp, pc}
   1a2c0:	push	{r4, r5, r6, sl, fp, lr}
   1a2c4:	add	fp, sp, #16
   1a2c8:	sub	sp, sp, #88	; 0x58
   1a2cc:	ldr	ip, [fp, #12]
   1a2d0:	ldr	lr, [fp, #8]
   1a2d4:	ldr	r4, [fp, #24]
   1a2d8:	ldr	r5, [fp, #20]
   1a2dc:	ldr	r6, [fp, #16]
   1a2e0:	str	r0, [fp, #-20]	; 0xffffffec
   1a2e4:	str	r1, [fp, #-24]	; 0xffffffe8
   1a2e8:	str	r3, [fp, #-28]	; 0xffffffe4
   1a2ec:	str	r2, [fp, #-32]	; 0xffffffe0
   1a2f0:	str	ip, [fp, #-36]	; 0xffffffdc
   1a2f4:	str	lr, [fp, #-40]	; 0xffffffd8
   1a2f8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1a2fc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a300:	ldr	r1, [fp, #16]
   1a304:	movw	r3, #0
   1a308:	str	r1, [sp, #44]	; 0x2c
   1a30c:	mov	r1, r3
   1a310:	add	r3, sp, #48	; 0x30
   1a314:	ldr	ip, [sp, #44]	; 0x2c
   1a318:	str	ip, [sp]
   1a31c:	str	r4, [sp, #40]	; 0x28
   1a320:	str	r5, [sp, #36]	; 0x24
   1a324:	str	r6, [sp, #32]
   1a328:	bl	1a538 <__assert_fail@plt+0x9460>
   1a32c:	str	r0, [fp, #-44]	; 0xffffffd4
   1a330:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a334:	cmp	r0, #0
   1a338:	bne	1a3c0 <__assert_fail@plt+0x92e8>
   1a33c:	ldr	r0, [sp, #48]	; 0x30
   1a340:	ldr	r1, [sp, #52]	; 0x34
   1a344:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1a348:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1a34c:	subs	r0, r0, r2
   1a350:	sbcs	r1, r1, r3
   1a354:	bcc	1a37c <__assert_fail@plt+0x92a4>
   1a358:	b	1a35c <__assert_fail@plt+0x9284>
   1a35c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a360:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1a364:	ldr	r2, [sp, #48]	; 0x30
   1a368:	ldr	r3, [sp, #52]	; 0x34
   1a36c:	subs	r0, r0, r2
   1a370:	sbcs	r1, r1, r3
   1a374:	bcs	1a3bc <__assert_fail@plt+0x92e4>
   1a378:	b	1a37c <__assert_fail@plt+0x92a4>
   1a37c:	mov	r0, #1
   1a380:	str	r0, [fp, #-44]	; 0xffffffd4
   1a384:	ldr	r0, [sp, #48]	; 0x30
   1a388:	ldr	r1, [sp, #52]	; 0x34
   1a38c:	subs	r0, r0, #1073741824	; 0x40000000
   1a390:	sbcs	r1, r1, #0
   1a394:	bcc	1a3ac <__assert_fail@plt+0x92d4>
   1a398:	b	1a39c <__assert_fail@plt+0x92c4>
   1a39c:	bl	1100c <__errno_location@plt>
   1a3a0:	movw	r1, #75	; 0x4b
   1a3a4:	str	r1, [r0]
   1a3a8:	b	1a3b8 <__assert_fail@plt+0x92e0>
   1a3ac:	bl	1100c <__errno_location@plt>
   1a3b0:	movw	r1, #34	; 0x22
   1a3b4:	str	r1, [r0]
   1a3b8:	b	1a3bc <__assert_fail@plt+0x92e4>
   1a3bc:	b	1a3fc <__assert_fail@plt+0x9324>
   1a3c0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a3c4:	cmp	r0, #1
   1a3c8:	bne	1a3dc <__assert_fail@plt+0x9304>
   1a3cc:	bl	1100c <__errno_location@plt>
   1a3d0:	movw	r1, #75	; 0x4b
   1a3d4:	str	r1, [r0]
   1a3d8:	b	1a3f8 <__assert_fail@plt+0x9320>
   1a3dc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a3e0:	cmp	r0, #3
   1a3e4:	bne	1a3f4 <__assert_fail@plt+0x931c>
   1a3e8:	bl	1100c <__errno_location@plt>
   1a3ec:	movw	r1, #0
   1a3f0:	str	r1, [r0]
   1a3f4:	b	1a3f8 <__assert_fail@plt+0x9320>
   1a3f8:	b	1a3fc <__assert_fail@plt+0x9324>
   1a3fc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a400:	cmp	r0, #0
   1a404:	beq	1a4a0 <__assert_fail@plt+0x93c8>
   1a408:	ldr	r0, [fp, #24]
   1a40c:	cmp	r0, #0
   1a410:	beq	1a420 <__assert_fail@plt+0x9348>
   1a414:	ldr	r0, [fp, #24]
   1a418:	str	r0, [sp, #28]
   1a41c:	b	1a42c <__assert_fail@plt+0x9354>
   1a420:	movw	r0, #1
   1a424:	str	r0, [sp, #28]
   1a428:	b	1a42c <__assert_fail@plt+0x9354>
   1a42c:	ldr	r0, [sp, #28]
   1a430:	str	r0, [sp, #24]
   1a434:	bl	1100c <__errno_location@plt>
   1a438:	ldr	r0, [r0]
   1a43c:	cmp	r0, #22
   1a440:	bne	1a450 <__assert_fail@plt+0x9378>
   1a444:	movw	r0, #0
   1a448:	str	r0, [sp, #20]
   1a44c:	b	1a45c <__assert_fail@plt+0x9384>
   1a450:	bl	1100c <__errno_location@plt>
   1a454:	ldr	r0, [r0]
   1a458:	str	r0, [sp, #20]
   1a45c:	ldr	r0, [sp, #20]
   1a460:	ldr	r3, [fp, #20]
   1a464:	ldr	r1, [fp, #-20]	; 0xffffffec
   1a468:	str	r0, [sp, #16]
   1a46c:	mov	r0, r1
   1a470:	str	r3, [sp, #12]
   1a474:	bl	16a4c <__assert_fail@plt+0x5974>
   1a478:	ldr	r1, [sp, #24]
   1a47c:	str	r0, [sp, #8]
   1a480:	mov	r0, r1
   1a484:	ldr	r1, [sp, #16]
   1a488:	movw	r2, #61629	; 0xf0bd
   1a48c:	movt	r2, #1
   1a490:	ldr	r3, [sp, #12]
   1a494:	ldr	ip, [sp, #8]
   1a498:	str	ip, [sp]
   1a49c:	bl	10f64 <error@plt>
   1a4a0:	ldr	r0, [sp, #48]	; 0x30
   1a4a4:	ldr	r1, [sp, #52]	; 0x34
   1a4a8:	sub	sp, fp, #16
   1a4ac:	pop	{r4, r5, r6, sl, fp, pc}
   1a4b0:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1a4b4:	add	fp, sp, #24
   1a4b8:	sub	sp, sp, #56	; 0x38
   1a4bc:	ldr	r1, [fp, #12]
   1a4c0:	ldr	ip, [fp, #8]
   1a4c4:	ldr	lr, [fp, #24]
   1a4c8:	ldr	r4, [fp, #20]
   1a4cc:	ldr	r5, [fp, #16]
   1a4d0:	str	r0, [fp, #-28]	; 0xffffffe4
   1a4d4:	str	r3, [sp, #44]	; 0x2c
   1a4d8:	str	r2, [sp, #40]	; 0x28
   1a4dc:	str	r1, [sp, #36]	; 0x24
   1a4e0:	str	ip, [sp, #32]
   1a4e4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1a4e8:	ldr	r2, [sp, #40]	; 0x28
   1a4ec:	ldr	r3, [sp, #44]	; 0x2c
   1a4f0:	ldr	r1, [sp, #32]
   1a4f4:	ldr	ip, [sp, #36]	; 0x24
   1a4f8:	ldr	r6, [fp, #16]
   1a4fc:	ldr	r7, [fp, #20]
   1a500:	ldr	r8, [fp, #24]
   1a504:	mov	r9, sp
   1a508:	str	r8, [r9, #16]
   1a50c:	str	r7, [r9, #12]
   1a510:	str	r6, [r9, #8]
   1a514:	str	ip, [r9, #4]
   1a518:	str	r1, [r9]
   1a51c:	mov	r1, #10
   1a520:	str	lr, [sp, #28]
   1a524:	str	r4, [sp, #24]
   1a528:	str	r5, [sp, #20]
   1a52c:	bl	1a2c0 <__assert_fail@plt+0x91e8>
   1a530:	sub	sp, fp, #24
   1a534:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   1a538:	push	{fp, lr}
   1a53c:	mov	fp, sp
   1a540:	sub	sp, sp, #80	; 0x50
   1a544:	ldr	ip, [fp, #8]
   1a548:	str	r0, [fp, #-8]
   1a54c:	str	r1, [fp, #-12]
   1a550:	str	r2, [fp, #-16]
   1a554:	str	r3, [fp, #-20]	; 0xffffffec
   1a558:	movw	r0, #0
   1a55c:	str	r0, [sp, #36]	; 0x24
   1a560:	ldr	r1, [fp, #-16]
   1a564:	cmp	r0, r1
   1a568:	bgt	1a57c <__assert_fail@plt+0x94a4>
   1a56c:	ldr	r0, [fp, #-16]
   1a570:	cmp	r0, #36	; 0x24
   1a574:	bgt	1a57c <__assert_fail@plt+0x94a4>
   1a578:	b	1a59c <__assert_fail@plt+0x94c4>
   1a57c:	movw	r0, #63797	; 0xf935
   1a580:	movt	r0, #1
   1a584:	movw	r1, #63835	; 0xf95b
   1a588:	movt	r1, #1
   1a58c:	movw	r2, #85	; 0x55
   1a590:	movw	r3, #63851	; 0xf96b
   1a594:	movt	r3, #1
   1a598:	bl	110d8 <__assert_fail@plt>
   1a59c:	ldr	r0, [fp, #-12]
   1a5a0:	movw	r1, #0
   1a5a4:	cmp	r0, r1
   1a5a8:	beq	1a5b8 <__assert_fail@plt+0x94e0>
   1a5ac:	ldr	r0, [fp, #-12]
   1a5b0:	str	r0, [sp, #12]
   1a5b4:	b	1a5c4 <__assert_fail@plt+0x94ec>
   1a5b8:	sub	r0, fp, #24
   1a5bc:	str	r0, [sp, #12]
   1a5c0:	b	1a5c4 <__assert_fail@plt+0x94ec>
   1a5c4:	ldr	r0, [sp, #12]
   1a5c8:	str	r0, [fp, #-28]	; 0xffffffe4
   1a5cc:	bl	1100c <__errno_location@plt>
   1a5d0:	movw	r1, #0
   1a5d4:	str	r1, [r0]
   1a5d8:	ldr	r0, [fp, #-8]
   1a5dc:	str	r0, [sp, #32]
   1a5e0:	ldr	r0, [sp, #32]
   1a5e4:	ldrb	r0, [r0]
   1a5e8:	strb	r0, [sp, #31]
   1a5ec:	bl	10fb8 <__ctype_b_loc@plt>
   1a5f0:	ldr	r0, [r0]
   1a5f4:	ldrb	r1, [sp, #31]
   1a5f8:	mov	r2, r1
   1a5fc:	add	r0, r0, r1, lsl #1
   1a600:	ldrh	r0, [r0]
   1a604:	and	r0, r0, #8192	; 0x2000
   1a608:	cmp	r0, #0
   1a60c:	beq	1a628 <__assert_fail@plt+0x9550>
   1a610:	ldr	r0, [sp, #32]
   1a614:	add	r1, r0, #1
   1a618:	str	r1, [sp, #32]
   1a61c:	ldrb	r0, [r0, #1]
   1a620:	strb	r0, [sp, #31]
   1a624:	b	1a5ec <__assert_fail@plt+0x9514>
   1a628:	ldrb	r0, [sp, #31]
   1a62c:	cmp	r0, #45	; 0x2d
   1a630:	bne	1a640 <__assert_fail@plt+0x9568>
   1a634:	movw	r0, #4
   1a638:	str	r0, [fp, #-4]
   1a63c:	b	1abbc <__assert_fail@plt+0x9ae4>
   1a640:	ldr	r0, [fp, #-8]
   1a644:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a648:	ldr	r2, [fp, #-16]
   1a64c:	bl	1103c <strtoumax@plt>
   1a650:	str	r1, [sp, #44]	; 0x2c
   1a654:	str	r0, [sp, #40]	; 0x28
   1a658:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1a65c:	ldr	r0, [r0]
   1a660:	ldr	r1, [fp, #-8]
   1a664:	cmp	r0, r1
   1a668:	bne	1a6d4 <__assert_fail@plt+0x95fc>
   1a66c:	ldr	r0, [fp, #8]
   1a670:	movw	r1, #0
   1a674:	cmp	r0, r1
   1a678:	beq	1a6c4 <__assert_fail@plt+0x95ec>
   1a67c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1a680:	ldr	r0, [r0]
   1a684:	ldrb	r0, [r0]
   1a688:	cmp	r0, #0
   1a68c:	beq	1a6c4 <__assert_fail@plt+0x95ec>
   1a690:	ldr	r0, [fp, #8]
   1a694:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a698:	ldr	r1, [r1]
   1a69c:	ldrb	r1, [r1]
   1a6a0:	bl	10fe8 <strchr@plt>
   1a6a4:	movw	r1, #0
   1a6a8:	cmp	r0, r1
   1a6ac:	beq	1a6c4 <__assert_fail@plt+0x95ec>
   1a6b0:	mov	r0, #0
   1a6b4:	str	r0, [sp, #44]	; 0x2c
   1a6b8:	mov	r0, #1
   1a6bc:	str	r0, [sp, #40]	; 0x28
   1a6c0:	b	1a6d0 <__assert_fail@plt+0x95f8>
   1a6c4:	movw	r0, #4
   1a6c8:	str	r0, [fp, #-4]
   1a6cc:	b	1abbc <__assert_fail@plt+0x9ae4>
   1a6d0:	b	1a70c <__assert_fail@plt+0x9634>
   1a6d4:	bl	1100c <__errno_location@plt>
   1a6d8:	ldr	r0, [r0]
   1a6dc:	cmp	r0, #0
   1a6e0:	beq	1a708 <__assert_fail@plt+0x9630>
   1a6e4:	bl	1100c <__errno_location@plt>
   1a6e8:	ldr	r0, [r0]
   1a6ec:	cmp	r0, #34	; 0x22
   1a6f0:	beq	1a700 <__assert_fail@plt+0x9628>
   1a6f4:	movw	r0, #4
   1a6f8:	str	r0, [fp, #-4]
   1a6fc:	b	1abbc <__assert_fail@plt+0x9ae4>
   1a700:	movw	r0, #1
   1a704:	str	r0, [sp, #36]	; 0x24
   1a708:	b	1a70c <__assert_fail@plt+0x9634>
   1a70c:	ldr	r0, [fp, #8]
   1a710:	movw	r1, #0
   1a714:	cmp	r0, r1
   1a718:	bne	1a73c <__assert_fail@plt+0x9664>
   1a71c:	ldr	r0, [sp, #40]	; 0x28
   1a720:	ldr	r1, [sp, #44]	; 0x2c
   1a724:	ldr	r2, [fp, #-20]	; 0xffffffec
   1a728:	str	r1, [r2, #4]
   1a72c:	str	r0, [r2]
   1a730:	ldr	r0, [sp, #36]	; 0x24
   1a734:	str	r0, [fp, #-4]
   1a738:	b	1abbc <__assert_fail@plt+0x9ae4>
   1a73c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1a740:	ldr	r0, [r0]
   1a744:	ldrb	r0, [r0]
   1a748:	cmp	r0, #0
   1a74c:	beq	1aba0 <__assert_fail@plt+0x9ac8>
   1a750:	movw	r0, #1024	; 0x400
   1a754:	str	r0, [sp, #24]
   1a758:	movw	r0, #1
   1a75c:	str	r0, [sp, #20]
   1a760:	ldr	r0, [fp, #8]
   1a764:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a768:	ldr	r1, [r1]
   1a76c:	ldrb	r1, [r1]
   1a770:	bl	10fe8 <strchr@plt>
   1a774:	movw	r1, #0
   1a778:	cmp	r0, r1
   1a77c:	bne	1a7a4 <__assert_fail@plt+0x96cc>
   1a780:	ldr	r0, [sp, #40]	; 0x28
   1a784:	ldr	r1, [sp, #44]	; 0x2c
   1a788:	ldr	r2, [fp, #-20]	; 0xffffffec
   1a78c:	str	r1, [r2, #4]
   1a790:	str	r0, [r2]
   1a794:	ldr	r0, [sp, #36]	; 0x24
   1a798:	orr	r0, r0, #2
   1a79c:	str	r0, [fp, #-4]
   1a7a0:	b	1abbc <__assert_fail@plt+0x9ae4>
   1a7a4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1a7a8:	ldr	r0, [r0]
   1a7ac:	ldrb	r0, [r0]
   1a7b0:	sub	r0, r0, #69	; 0x45
   1a7b4:	cmp	r0, #47	; 0x2f
   1a7b8:	str	r0, [sp, #8]
   1a7bc:	bhi	1a928 <__assert_fail@plt+0x9850>
   1a7c0:	add	r0, pc, #8
   1a7c4:	ldr	r1, [sp, #8]
   1a7c8:	ldr	r0, [r0, r1, lsl #2]
   1a7cc:	mov	pc, r0
   1a7d0:	muleq	r1, r0, r8
   1a7d4:	andeq	sl, r1, r8, lsr #18
   1a7d8:	muleq	r1, r0, r8
   1a7dc:	andeq	sl, r1, r8, lsr #18
   1a7e0:	andeq	sl, r1, r8, lsr #18
   1a7e4:	andeq	sl, r1, r8, lsr #18
   1a7e8:	muleq	r1, r0, r8
   1a7ec:	andeq	sl, r1, r8, lsr #18
   1a7f0:	muleq	r1, r0, r8
   1a7f4:	andeq	sl, r1, r8, lsr #18
   1a7f8:	andeq	sl, r1, r8, lsr #18
   1a7fc:	muleq	r1, r0, r8
   1a800:	andeq	sl, r1, r8, lsr #18
   1a804:	andeq	sl, r1, r8, lsr #18
   1a808:	andeq	sl, r1, r8, lsr #18
   1a80c:	muleq	r1, r0, r8
   1a810:	andeq	sl, r1, r8, lsr #18
   1a814:	andeq	sl, r1, r8, lsr #18
   1a818:	andeq	sl, r1, r8, lsr #18
   1a81c:	andeq	sl, r1, r8, lsr #18
   1a820:	muleq	r1, r0, r8
   1a824:	muleq	r1, r0, r8
   1a828:	andeq	sl, r1, r8, lsr #18
   1a82c:	andeq	sl, r1, r8, lsr #18
   1a830:	andeq	sl, r1, r8, lsr #18
   1a834:	andeq	sl, r1, r8, lsr #18
   1a838:	andeq	sl, r1, r8, lsr #18
   1a83c:	andeq	sl, r1, r8, lsr #18
   1a840:	andeq	sl, r1, r8, lsr #18
   1a844:	andeq	sl, r1, r8, lsr #18
   1a848:	andeq	sl, r1, r8, lsr #18
   1a84c:	andeq	sl, r1, r8, lsr #18
   1a850:	andeq	sl, r1, r8, lsr #18
   1a854:	andeq	sl, r1, r8, lsr #18
   1a858:	muleq	r1, r0, r8
   1a85c:	andeq	sl, r1, r8, lsr #18
   1a860:	andeq	sl, r1, r8, lsr #18
   1a864:	andeq	sl, r1, r8, lsr #18
   1a868:	muleq	r1, r0, r8
   1a86c:	andeq	sl, r1, r8, lsr #18
   1a870:	muleq	r1, r0, r8
   1a874:	andeq	sl, r1, r8, lsr #18
   1a878:	andeq	sl, r1, r8, lsr #18
   1a87c:	andeq	sl, r1, r8, lsr #18
   1a880:	andeq	sl, r1, r8, lsr #18
   1a884:	andeq	sl, r1, r8, lsr #18
   1a888:	andeq	sl, r1, r8, lsr #18
   1a88c:	muleq	r1, r0, r8
   1a890:	ldr	r0, [fp, #8]
   1a894:	movw	r1, #48	; 0x30
   1a898:	bl	10fe8 <strchr@plt>
   1a89c:	movw	r1, #0
   1a8a0:	cmp	r0, r1
   1a8a4:	beq	1a924 <__assert_fail@plt+0x984c>
   1a8a8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1a8ac:	ldr	r0, [r0]
   1a8b0:	ldrb	r0, [r0, #1]
   1a8b4:	mov	r1, r0
   1a8b8:	cmp	r0, #66	; 0x42
   1a8bc:	str	r1, [sp, #4]
   1a8c0:	beq	1a90c <__assert_fail@plt+0x9834>
   1a8c4:	b	1a8c8 <__assert_fail@plt+0x97f0>
   1a8c8:	ldr	r0, [sp, #4]
   1a8cc:	cmp	r0, #68	; 0x44
   1a8d0:	beq	1a90c <__assert_fail@plt+0x9834>
   1a8d4:	b	1a8d8 <__assert_fail@plt+0x9800>
   1a8d8:	ldr	r0, [sp, #4]
   1a8dc:	cmp	r0, #105	; 0x69
   1a8e0:	bne	1a920 <__assert_fail@plt+0x9848>
   1a8e4:	b	1a8e8 <__assert_fail@plt+0x9810>
   1a8e8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1a8ec:	ldr	r0, [r0]
   1a8f0:	ldrb	r0, [r0, #2]
   1a8f4:	cmp	r0, #66	; 0x42
   1a8f8:	bne	1a908 <__assert_fail@plt+0x9830>
   1a8fc:	ldr	r0, [sp, #20]
   1a900:	add	r0, r0, #2
   1a904:	str	r0, [sp, #20]
   1a908:	b	1a920 <__assert_fail@plt+0x9848>
   1a90c:	movw	r0, #1000	; 0x3e8
   1a910:	str	r0, [sp, #24]
   1a914:	ldr	r0, [sp, #20]
   1a918:	add	r0, r0, #1
   1a91c:	str	r0, [sp, #20]
   1a920:	b	1a924 <__assert_fail@plt+0x984c>
   1a924:	b	1a928 <__assert_fail@plt+0x9850>
   1a928:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1a92c:	ldr	r0, [r0]
   1a930:	ldrb	r0, [r0]
   1a934:	sub	r0, r0, #66	; 0x42
   1a938:	cmp	r0, #53	; 0x35
   1a93c:	str	r0, [sp]
   1a940:	bhi	1ab34 <__assert_fail@plt+0x9a5c>
   1a944:	add	r0, pc, #8
   1a948:	ldr	r1, [sp]
   1a94c:	ldr	r0, [r0, r1, lsl #2]
   1a950:	mov	pc, r0
   1a954:	andeq	sl, r1, r0, asr #20
   1a958:	andeq	sl, r1, r4, lsr fp
   1a95c:	andeq	sl, r1, r4, lsr fp
   1a960:	andeq	sl, r1, r0, ror #20
   1a964:	andeq	sl, r1, r4, lsr fp
   1a968:	andeq	sl, r1, r8, ror sl
   1a96c:	andeq	sl, r1, r4, lsr fp
   1a970:	andeq	sl, r1, r4, lsr fp
   1a974:	andeq	sl, r1, r4, lsr fp
   1a978:	muleq	r1, r0, sl
   1a97c:	andeq	sl, r1, r4, lsr fp
   1a980:	andeq	sl, r1, r8, lsr #21
   1a984:	andeq	sl, r1, r4, lsr fp
   1a988:	andeq	sl, r1, r4, lsr fp
   1a98c:	andeq	sl, r1, r0, asr #21
   1a990:	andeq	sl, r1, r4, lsr fp
   1a994:	andeq	sl, r1, r4, lsr fp
   1a998:	andeq	sl, r1, r4, lsr fp
   1a99c:	ldrdeq	sl, [r1], -r8
   1a9a0:	andeq	sl, r1, r4, lsr fp
   1a9a4:	andeq	sl, r1, r4, lsr fp
   1a9a8:	andeq	sl, r1, r4, lsr fp
   1a9ac:	andeq	sl, r1, r4, lsr fp
   1a9b0:	andeq	sl, r1, r4, lsl #22
   1a9b4:	andeq	sl, r1, ip, lsl fp
   1a9b8:	andeq	sl, r1, r4, lsr fp
   1a9bc:	andeq	sl, r1, r4, lsr fp
   1a9c0:	andeq	sl, r1, r4, lsr fp
   1a9c4:	andeq	sl, r1, r4, lsr fp
   1a9c8:	andeq	sl, r1, r4, lsr fp
   1a9cc:	andeq	sl, r1, r4, lsr fp
   1a9d0:	andeq	sl, r1, r4, lsr fp
   1a9d4:	andeq	sl, r1, ip, lsr #20
   1a9d8:	andeq	sl, r1, r4, asr sl
   1a9dc:	andeq	sl, r1, r4, lsr fp
   1a9e0:	andeq	sl, r1, r4, lsr fp
   1a9e4:	andeq	sl, r1, r4, lsr fp
   1a9e8:	andeq	sl, r1, r8, ror sl
   1a9ec:	andeq	sl, r1, r4, lsr fp
   1a9f0:	andeq	sl, r1, r4, lsr fp
   1a9f4:	andeq	sl, r1, r4, lsr fp
   1a9f8:	muleq	r1, r0, sl
   1a9fc:	andeq	sl, r1, r4, lsr fp
   1aa00:	andeq	sl, r1, r8, lsr #21
   1aa04:	andeq	sl, r1, r4, lsr fp
   1aa08:	andeq	sl, r1, r4, lsr fp
   1aa0c:	andeq	sl, r1, r4, lsr fp
   1aa10:	andeq	sl, r1, r4, lsr fp
   1aa14:	andeq	sl, r1, r4, lsr fp
   1aa18:	andeq	sl, r1, r4, lsr fp
   1aa1c:	ldrdeq	sl, [r1], -r8
   1aa20:	andeq	sl, r1, r4, lsr fp
   1aa24:	andeq	sl, r1, r4, lsr fp
   1aa28:	strdeq	sl, [r1], -r0
   1aa2c:	add	r0, sp, #40	; 0x28
   1aa30:	movw	r1, #512	; 0x200
   1aa34:	bl	1abc8 <__assert_fail@plt+0x9af0>
   1aa38:	str	r0, [sp, #16]
   1aa3c:	b	1ab58 <__assert_fail@plt+0x9a80>
   1aa40:	add	r0, sp, #40	; 0x28
   1aa44:	movw	r1, #1024	; 0x400
   1aa48:	bl	1abc8 <__assert_fail@plt+0x9af0>
   1aa4c:	str	r0, [sp, #16]
   1aa50:	b	1ab58 <__assert_fail@plt+0x9a80>
   1aa54:	movw	r0, #0
   1aa58:	str	r0, [sp, #16]
   1aa5c:	b	1ab58 <__assert_fail@plt+0x9a80>
   1aa60:	ldr	r1, [sp, #24]
   1aa64:	add	r0, sp, #40	; 0x28
   1aa68:	movw	r2, #6
   1aa6c:	bl	1c440 <__assert_fail@plt+0xb368>
   1aa70:	str	r0, [sp, #16]
   1aa74:	b	1ab58 <__assert_fail@plt+0x9a80>
   1aa78:	ldr	r1, [sp, #24]
   1aa7c:	add	r0, sp, #40	; 0x28
   1aa80:	movw	r2, #3
   1aa84:	bl	1c440 <__assert_fail@plt+0xb368>
   1aa88:	str	r0, [sp, #16]
   1aa8c:	b	1ab58 <__assert_fail@plt+0x9a80>
   1aa90:	ldr	r1, [sp, #24]
   1aa94:	add	r0, sp, #40	; 0x28
   1aa98:	movw	r2, #1
   1aa9c:	bl	1c440 <__assert_fail@plt+0xb368>
   1aaa0:	str	r0, [sp, #16]
   1aaa4:	b	1ab58 <__assert_fail@plt+0x9a80>
   1aaa8:	ldr	r1, [sp, #24]
   1aaac:	add	r0, sp, #40	; 0x28
   1aab0:	movw	r2, #2
   1aab4:	bl	1c440 <__assert_fail@plt+0xb368>
   1aab8:	str	r0, [sp, #16]
   1aabc:	b	1ab58 <__assert_fail@plt+0x9a80>
   1aac0:	ldr	r1, [sp, #24]
   1aac4:	add	r0, sp, #40	; 0x28
   1aac8:	movw	r2, #5
   1aacc:	bl	1c440 <__assert_fail@plt+0xb368>
   1aad0:	str	r0, [sp, #16]
   1aad4:	b	1ab58 <__assert_fail@plt+0x9a80>
   1aad8:	ldr	r1, [sp, #24]
   1aadc:	add	r0, sp, #40	; 0x28
   1aae0:	movw	r2, #4
   1aae4:	bl	1c440 <__assert_fail@plt+0xb368>
   1aae8:	str	r0, [sp, #16]
   1aaec:	b	1ab58 <__assert_fail@plt+0x9a80>
   1aaf0:	add	r0, sp, #40	; 0x28
   1aaf4:	movw	r1, #2
   1aaf8:	bl	1abc8 <__assert_fail@plt+0x9af0>
   1aafc:	str	r0, [sp, #16]
   1ab00:	b	1ab58 <__assert_fail@plt+0x9a80>
   1ab04:	ldr	r1, [sp, #24]
   1ab08:	add	r0, sp, #40	; 0x28
   1ab0c:	movw	r2, #8
   1ab10:	bl	1c440 <__assert_fail@plt+0xb368>
   1ab14:	str	r0, [sp, #16]
   1ab18:	b	1ab58 <__assert_fail@plt+0x9a80>
   1ab1c:	ldr	r1, [sp, #24]
   1ab20:	add	r0, sp, #40	; 0x28
   1ab24:	movw	r2, #7
   1ab28:	bl	1c440 <__assert_fail@plt+0xb368>
   1ab2c:	str	r0, [sp, #16]
   1ab30:	b	1ab58 <__assert_fail@plt+0x9a80>
   1ab34:	ldr	r0, [sp, #40]	; 0x28
   1ab38:	ldr	r1, [sp, #44]	; 0x2c
   1ab3c:	ldr	r2, [fp, #-20]	; 0xffffffec
   1ab40:	str	r1, [r2, #4]
   1ab44:	str	r0, [r2]
   1ab48:	ldr	r0, [sp, #36]	; 0x24
   1ab4c:	orr	r0, r0, #2
   1ab50:	str	r0, [fp, #-4]
   1ab54:	b	1abbc <__assert_fail@plt+0x9ae4>
   1ab58:	ldr	r0, [sp, #16]
   1ab5c:	ldr	r1, [sp, #36]	; 0x24
   1ab60:	orr	r0, r1, r0
   1ab64:	str	r0, [sp, #36]	; 0x24
   1ab68:	ldr	r0, [sp, #20]
   1ab6c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1ab70:	ldr	r2, [r1]
   1ab74:	add	r0, r2, r0
   1ab78:	str	r0, [r1]
   1ab7c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1ab80:	ldr	r0, [r0]
   1ab84:	ldrsb	r0, [r0]
   1ab88:	cmp	r0, #0
   1ab8c:	beq	1ab9c <__assert_fail@plt+0x9ac4>
   1ab90:	ldr	r0, [sp, #36]	; 0x24
   1ab94:	orr	r0, r0, #2
   1ab98:	str	r0, [sp, #36]	; 0x24
   1ab9c:	b	1aba0 <__assert_fail@plt+0x9ac8>
   1aba0:	ldr	r0, [sp, #40]	; 0x28
   1aba4:	ldr	r1, [sp, #44]	; 0x2c
   1aba8:	ldr	r2, [fp, #-20]	; 0xffffffec
   1abac:	str	r1, [r2, #4]
   1abb0:	str	r0, [r2]
   1abb4:	ldr	r0, [sp, #36]	; 0x24
   1abb8:	str	r0, [fp, #-4]
   1abbc:	ldr	r0, [fp, #-4]
   1abc0:	mov	sp, fp
   1abc4:	pop	{fp, pc}
   1abc8:	push	{fp, lr}
   1abcc:	mov	fp, sp
   1abd0:	sub	sp, sp, #112	; 0x70
   1abd4:	str	r0, [fp, #-8]
   1abd8:	str	r1, [fp, #-12]
   1abdc:	b	1b08c <__assert_fail@plt+0x9fb4>
   1abe0:	b	1ae54 <__assert_fail@plt+0x9d7c>
   1abe4:	ldr	r0, [fp, #-12]
   1abe8:	cmp	r0, #0
   1abec:	bge	1ad44 <__assert_fail@plt+0x9c6c>
   1abf0:	mov	r0, #1
   1abf4:	cmp	r0, #0
   1abf8:	bne	1aca0 <__assert_fail@plt+0x9bc8>
   1abfc:	b	1ac00 <__assert_fail@plt+0x9b28>
   1ac00:	b	1ac04 <__assert_fail@plt+0x9b2c>
   1ac04:	ldr	r0, [fp, #-8]
   1ac08:	ldr	r1, [r0]
   1ac0c:	ldr	r0, [r0, #4]
   1ac10:	ldr	r2, [fp, #-12]
   1ac14:	mov	r3, #127	; 0x7f
   1ac18:	sdiv	r2, r3, r2
   1ac1c:	subs	r1, r1, r2
   1ac20:	sbcs	r0, r0, r2, asr #31
   1ac24:	bcc	1ae0c <__assert_fail@plt+0x9d34>
   1ac28:	b	1ae30 <__assert_fail@plt+0x9d58>
   1ac2c:	b	1ac30 <__assert_fail@plt+0x9b58>
   1ac30:	ldr	r0, [pc, #4076]	; 1bc24 <__assert_fail@plt+0xab4c>
   1ac34:	ldr	r1, [fp, #-12]
   1ac38:	cmp	r1, r0
   1ac3c:	blt	1ac54 <__assert_fail@plt+0x9b7c>
   1ac40:	b	1ac60 <__assert_fail@plt+0x9b88>
   1ac44:	ldr	r0, [fp, #-12]
   1ac48:	movw	r1, #0
   1ac4c:	cmp	r1, r0
   1ac50:	bge	1ac60 <__assert_fail@plt+0x9b88>
   1ac54:	movw	r0, #0
   1ac58:	str	r0, [fp, #-28]	; 0xffffffe4
   1ac5c:	b	1ac78 <__assert_fail@plt+0x9ba0>
   1ac60:	ldr	r0, [fp, #-12]
   1ac64:	movw	r1, #0
   1ac68:	sub	r0, r1, r0
   1ac6c:	movw	r1, #127	; 0x7f
   1ac70:	sdiv	r0, r1, r0
   1ac74:	str	r0, [fp, #-28]	; 0xffffffe4
   1ac78:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1ac7c:	ldr	r1, [fp, #-8]
   1ac80:	ldr	r2, [r1]
   1ac84:	ldr	r1, [r1, #4]
   1ac88:	mvn	r1, r1
   1ac8c:	mvn	r2, r2
   1ac90:	subs	r2, r2, r0
   1ac94:	sbcs	r0, r1, r0, asr #31
   1ac98:	bcs	1ae0c <__assert_fail@plt+0x9d34>
   1ac9c:	b	1ae30 <__assert_fail@plt+0x9d58>
   1aca0:	b	1aca4 <__assert_fail@plt+0x9bcc>
   1aca4:	b	1ad1c <__assert_fail@plt+0x9c44>
   1aca8:	b	1ad1c <__assert_fail@plt+0x9c44>
   1acac:	ldr	r0, [fp, #-12]
   1acb0:	cmn	r0, #1
   1acb4:	bne	1ad1c <__assert_fail@plt+0x9c44>
   1acb8:	b	1acdc <__assert_fail@plt+0x9c04>
   1acbc:	ldr	r0, [fp, #-8]
   1acc0:	ldr	r1, [r0]
   1acc4:	ldr	r0, [r0, #4]
   1acc8:	eor	r1, r1, #128	; 0x80
   1accc:	orr	r0, r1, r0
   1acd0:	cmp	r0, #0
   1acd4:	bne	1ae0c <__assert_fail@plt+0x9d34>
   1acd8:	b	1ae30 <__assert_fail@plt+0x9d58>
   1acdc:	ldr	r0, [fp, #-8]
   1ace0:	ldr	r1, [r0]
   1ace4:	ldr	r0, [r0, #4]
   1ace8:	orr	r0, r1, r0
   1acec:	cmp	r0, #0
   1acf0:	beq	1ae30 <__assert_fail@plt+0x9d58>
   1acf4:	b	1acf8 <__assert_fail@plt+0x9c20>
   1acf8:	ldr	r0, [fp, #-8]
   1acfc:	ldr	r1, [r0]
   1ad00:	ldr	r0, [r0, #4]
   1ad04:	subs	r1, r1, #1
   1ad08:	sbc	r0, r0, #0
   1ad0c:	rsbs	r1, r1, #127	; 0x7f
   1ad10:	rscs	r0, r0, #0
   1ad14:	bcc	1ae0c <__assert_fail@plt+0x9d34>
   1ad18:	b	1ae30 <__assert_fail@plt+0x9d58>
   1ad1c:	ldr	r0, [fp, #-12]
   1ad20:	mvn	r1, #127	; 0x7f
   1ad24:	sdiv	r0, r1, r0
   1ad28:	ldr	r1, [fp, #-8]
   1ad2c:	ldr	r2, [r1]
   1ad30:	ldr	r1, [r1, #4]
   1ad34:	subs	r2, r0, r2
   1ad38:	rscs	r0, r1, r0, asr #31
   1ad3c:	bcc	1ae0c <__assert_fail@plt+0x9d34>
   1ad40:	b	1ae30 <__assert_fail@plt+0x9d58>
   1ad44:	ldr	r0, [fp, #-12]
   1ad48:	cmp	r0, #0
   1ad4c:	bne	1ad54 <__assert_fail@plt+0x9c7c>
   1ad50:	b	1ae30 <__assert_fail@plt+0x9d58>
   1ad54:	mov	r0, #1
   1ad58:	cmp	r0, #0
   1ad5c:	bne	1ade4 <__assert_fail@plt+0x9d0c>
   1ad60:	b	1ad64 <__assert_fail@plt+0x9c8c>
   1ad64:	ldr	r0, [fp, #-8]
   1ad68:	ldr	r1, [r0]
   1ad6c:	ldr	r0, [r0, #4]
   1ad70:	and	r0, r1, r0
   1ad74:	cmn	r0, #1
   1ad78:	bne	1adb8 <__assert_fail@plt+0x9ce0>
   1ad7c:	b	1ad80 <__assert_fail@plt+0x9ca8>
   1ad80:	b	1ad84 <__assert_fail@plt+0x9cac>
   1ad84:	ldr	r0, [fp, #-12]
   1ad88:	mvn	r1, #127	; 0x7f
   1ad8c:	add	r0, r0, r1
   1ad90:	movw	r1, #0
   1ad94:	cmp	r1, r0
   1ad98:	blt	1ae0c <__assert_fail@plt+0x9d34>
   1ad9c:	b	1ae30 <__assert_fail@plt+0x9d58>
   1ada0:	ldr	r0, [fp, #-12]
   1ada4:	sub	r0, r0, #1
   1ada8:	movw	r1, #127	; 0x7f
   1adac:	cmp	r1, r0
   1adb0:	blt	1ae0c <__assert_fail@plt+0x9d34>
   1adb4:	b	1ae30 <__assert_fail@plt+0x9d58>
   1adb8:	ldr	r0, [fp, #-8]
   1adbc:	ldr	r2, [r0]
   1adc0:	ldr	r3, [r0, #4]
   1adc4:	mvn	r0, #127	; 0x7f
   1adc8:	mvn	r1, #0
   1adcc:	bl	1e9e4 <__assert_fail@plt+0xd90c>
   1add0:	ldr	r2, [fp, #-12]
   1add4:	subs	r0, r0, r2
   1add8:	sbcs	r1, r1, r2, asr #31
   1addc:	bcc	1ae0c <__assert_fail@plt+0x9d34>
   1ade0:	b	1ae30 <__assert_fail@plt+0x9d58>
   1ade4:	ldr	r0, [fp, #-12]
   1ade8:	mov	r1, #127	; 0x7f
   1adec:	sdiv	r0, r1, r0
   1adf0:	ldr	r1, [fp, #-8]
   1adf4:	ldr	r2, [r1]
   1adf8:	ldr	r1, [r1, #4]
   1adfc:	subs	r2, r0, r2
   1ae00:	rscs	r0, r1, r0, asr #31
   1ae04:	bcs	1ae30 <__assert_fail@plt+0x9d58>
   1ae08:	b	1ae0c <__assert_fail@plt+0x9d34>
   1ae0c:	ldr	r0, [fp, #-8]
   1ae10:	ldr	r0, [r0]
   1ae14:	ldr	r1, [fp, #-12]
   1ae18:	mul	r0, r0, r1
   1ae1c:	sxtb	r0, r0
   1ae20:	asr	r1, r0, #31
   1ae24:	str	r0, [fp, #-24]	; 0xffffffe8
   1ae28:	str	r1, [fp, #-20]	; 0xffffffec
   1ae2c:	b	1c3f4 <__assert_fail@plt+0xb31c>
   1ae30:	ldr	r0, [fp, #-8]
   1ae34:	ldr	r0, [r0]
   1ae38:	ldr	r1, [fp, #-12]
   1ae3c:	mul	r0, r0, r1
   1ae40:	sxtb	r0, r0
   1ae44:	asr	r1, r0, #31
   1ae48:	str	r0, [fp, #-24]	; 0xffffffe8
   1ae4c:	str	r1, [fp, #-20]	; 0xffffffec
   1ae50:	b	1c410 <__assert_fail@plt+0xb338>
   1ae54:	ldr	r0, [fp, #-12]
   1ae58:	cmp	r0, #0
   1ae5c:	bge	1af90 <__assert_fail@plt+0x9eb8>
   1ae60:	mov	r0, #1
   1ae64:	cmp	r0, #0
   1ae68:	bne	1af10 <__assert_fail@plt+0x9e38>
   1ae6c:	b	1ae70 <__assert_fail@plt+0x9d98>
   1ae70:	b	1ae74 <__assert_fail@plt+0x9d9c>
   1ae74:	ldr	r0, [fp, #-8]
   1ae78:	ldr	r1, [r0]
   1ae7c:	ldr	r0, [r0, #4]
   1ae80:	ldr	r2, [fp, #-12]
   1ae84:	mov	r3, #255	; 0xff
   1ae88:	sdiv	r2, r3, r2
   1ae8c:	subs	r1, r1, r2
   1ae90:	sbcs	r0, r0, r2, asr #31
   1ae94:	bcc	1b044 <__assert_fail@plt+0x9f6c>
   1ae98:	b	1b068 <__assert_fail@plt+0x9f90>
   1ae9c:	b	1aea0 <__assert_fail@plt+0x9dc8>
   1aea0:	ldr	r0, [pc, #3452]	; 1bc24 <__assert_fail@plt+0xab4c>
   1aea4:	ldr	r1, [fp, #-12]
   1aea8:	cmp	r1, r0
   1aeac:	blt	1aec4 <__assert_fail@plt+0x9dec>
   1aeb0:	b	1aed0 <__assert_fail@plt+0x9df8>
   1aeb4:	ldr	r0, [fp, #-12]
   1aeb8:	movw	r1, #0
   1aebc:	cmp	r1, r0
   1aec0:	bge	1aed0 <__assert_fail@plt+0x9df8>
   1aec4:	movw	r0, #0
   1aec8:	str	r0, [fp, #-32]	; 0xffffffe0
   1aecc:	b	1aee8 <__assert_fail@plt+0x9e10>
   1aed0:	ldr	r0, [fp, #-12]
   1aed4:	movw	r1, #0
   1aed8:	sub	r0, r1, r0
   1aedc:	movw	r1, #255	; 0xff
   1aee0:	sdiv	r0, r1, r0
   1aee4:	str	r0, [fp, #-32]	; 0xffffffe0
   1aee8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1aeec:	ldr	r1, [fp, #-8]
   1aef0:	ldr	r2, [r1]
   1aef4:	ldr	r1, [r1, #4]
   1aef8:	mvn	r1, r1
   1aefc:	mvn	r2, r2
   1af00:	subs	r2, r2, r0
   1af04:	sbcs	r0, r1, r0, asr #31
   1af08:	bcs	1b044 <__assert_fail@plt+0x9f6c>
   1af0c:	b	1b068 <__assert_fail@plt+0x9f90>
   1af10:	b	1af14 <__assert_fail@plt+0x9e3c>
   1af14:	b	1af74 <__assert_fail@plt+0x9e9c>
   1af18:	b	1af74 <__assert_fail@plt+0x9e9c>
   1af1c:	ldr	r0, [fp, #-12]
   1af20:	cmn	r0, #1
   1af24:	bne	1af74 <__assert_fail@plt+0x9e9c>
   1af28:	b	1af48 <__assert_fail@plt+0x9e70>
   1af2c:	ldr	r0, [fp, #-8]
   1af30:	ldr	r1, [r0]
   1af34:	ldr	r0, [r0, #4]
   1af38:	orr	r0, r1, r0
   1af3c:	cmp	r0, #0
   1af40:	bne	1b044 <__assert_fail@plt+0x9f6c>
   1af44:	b	1b068 <__assert_fail@plt+0x9f90>
   1af48:	ldr	r0, [fp, #-8]
   1af4c:	ldr	r1, [r0]
   1af50:	ldr	r0, [r0, #4]
   1af54:	orr	r0, r1, r0
   1af58:	cmp	r0, #0
   1af5c:	beq	1b068 <__assert_fail@plt+0x9f90>
   1af60:	b	1af64 <__assert_fail@plt+0x9e8c>
   1af64:	mov	r0, #0
   1af68:	cmp	r0, #0
   1af6c:	bne	1b044 <__assert_fail@plt+0x9f6c>
   1af70:	b	1b068 <__assert_fail@plt+0x9f90>
   1af74:	ldr	r0, [fp, #-8]
   1af78:	ldr	r1, [r0]
   1af7c:	ldr	r0, [r0, #4]
   1af80:	orr	r0, r1, r0
   1af84:	cmp	r0, #0
   1af88:	bne	1b044 <__assert_fail@plt+0x9f6c>
   1af8c:	b	1b068 <__assert_fail@plt+0x9f90>
   1af90:	ldr	r0, [fp, #-12]
   1af94:	cmp	r0, #0
   1af98:	bne	1afa0 <__assert_fail@plt+0x9ec8>
   1af9c:	b	1b068 <__assert_fail@plt+0x9f90>
   1afa0:	mov	r0, #1
   1afa4:	cmp	r0, #0
   1afa8:	bne	1b01c <__assert_fail@plt+0x9f44>
   1afac:	b	1afb0 <__assert_fail@plt+0x9ed8>
   1afb0:	b	1afb8 <__assert_fail@plt+0x9ee0>
   1afb4:	b	1afbc <__assert_fail@plt+0x9ee4>
   1afb8:	b	1b00c <__assert_fail@plt+0x9f34>
   1afbc:	ldr	r0, [fp, #-8]
   1afc0:	ldr	r1, [r0]
   1afc4:	ldr	r0, [r0, #4]
   1afc8:	and	r0, r1, r0
   1afcc:	cmn	r0, #1
   1afd0:	bne	1b00c <__assert_fail@plt+0x9f34>
   1afd4:	b	1afd8 <__assert_fail@plt+0x9f00>
   1afd8:	b	1afdc <__assert_fail@plt+0x9f04>
   1afdc:	ldr	r0, [fp, #-12]
   1afe0:	add	r0, r0, #0
   1afe4:	movw	r1, #0
   1afe8:	cmp	r1, r0
   1afec:	blt	1b044 <__assert_fail@plt+0x9f6c>
   1aff0:	b	1b068 <__assert_fail@plt+0x9f90>
   1aff4:	ldr	r0, [fp, #-12]
   1aff8:	sub	r0, r0, #1
   1affc:	mvn	r1, #0
   1b000:	cmp	r1, r0
   1b004:	blt	1b044 <__assert_fail@plt+0x9f6c>
   1b008:	b	1b068 <__assert_fail@plt+0x9f90>
   1b00c:	ldr	r0, [fp, #-12]
   1b010:	cmp	r0, #0
   1b014:	bne	1b044 <__assert_fail@plt+0x9f6c>
   1b018:	b	1b068 <__assert_fail@plt+0x9f90>
   1b01c:	ldr	r0, [fp, #-12]
   1b020:	mov	r1, #255	; 0xff
   1b024:	sdiv	r0, r1, r0
   1b028:	ldr	r1, [fp, #-8]
   1b02c:	ldr	r2, [r1]
   1b030:	ldr	r1, [r1, #4]
   1b034:	subs	r2, r0, r2
   1b038:	rscs	r0, r1, r0, asr #31
   1b03c:	bcs	1b068 <__assert_fail@plt+0x9f90>
   1b040:	b	1b044 <__assert_fail@plt+0x9f6c>
   1b044:	ldr	r0, [fp, #-8]
   1b048:	ldr	r0, [r0]
   1b04c:	ldr	r1, [fp, #-12]
   1b050:	mul	r0, r0, r1
   1b054:	uxtb	r0, r0
   1b058:	mov	r1, #0
   1b05c:	str	r1, [fp, #-20]	; 0xffffffec
   1b060:	str	r0, [fp, #-24]	; 0xffffffe8
   1b064:	b	1c3f4 <__assert_fail@plt+0xb31c>
   1b068:	ldr	r0, [fp, #-8]
   1b06c:	ldr	r0, [r0]
   1b070:	ldr	r1, [fp, #-12]
   1b074:	mul	r0, r0, r1
   1b078:	uxtb	r0, r0
   1b07c:	mov	r1, #0
   1b080:	str	r1, [fp, #-20]	; 0xffffffec
   1b084:	str	r0, [fp, #-24]	; 0xffffffe8
   1b088:	b	1c410 <__assert_fail@plt+0xb338>
   1b08c:	b	1b54c <__assert_fail@plt+0xa474>
   1b090:	b	1b314 <__assert_fail@plt+0xa23c>
   1b094:	ldr	r0, [fp, #-12]
   1b098:	cmp	r0, #0
   1b09c:	bge	1b200 <__assert_fail@plt+0xa128>
   1b0a0:	mov	r0, #1
   1b0a4:	cmp	r0, #0
   1b0a8:	bne	1b150 <__assert_fail@plt+0xa078>
   1b0ac:	b	1b0b0 <__assert_fail@plt+0x9fd8>
   1b0b0:	b	1b0b4 <__assert_fail@plt+0x9fdc>
   1b0b4:	ldr	r0, [fp, #-8]
   1b0b8:	ldr	r1, [r0]
   1b0bc:	ldr	r0, [r0, #4]
   1b0c0:	ldr	r2, [fp, #-12]
   1b0c4:	movw	r3, #32767	; 0x7fff
   1b0c8:	sdiv	r2, r3, r2
   1b0cc:	subs	r1, r1, r2
   1b0d0:	sbcs	r0, r0, r2, asr #31
   1b0d4:	bcc	1b2cc <__assert_fail@plt+0xa1f4>
   1b0d8:	b	1b2f0 <__assert_fail@plt+0xa218>
   1b0dc:	b	1b0e0 <__assert_fail@plt+0xa008>
   1b0e0:	ldr	r0, [pc, #2876]	; 1bc24 <__assert_fail@plt+0xab4c>
   1b0e4:	ldr	r1, [fp, #-12]
   1b0e8:	cmp	r1, r0
   1b0ec:	blt	1b104 <__assert_fail@plt+0xa02c>
   1b0f0:	b	1b110 <__assert_fail@plt+0xa038>
   1b0f4:	ldr	r0, [fp, #-12]
   1b0f8:	movw	r1, #0
   1b0fc:	cmp	r1, r0
   1b100:	bge	1b110 <__assert_fail@plt+0xa038>
   1b104:	movw	r0, #0
   1b108:	str	r0, [fp, #-36]	; 0xffffffdc
   1b10c:	b	1b128 <__assert_fail@plt+0xa050>
   1b110:	ldr	r0, [fp, #-12]
   1b114:	movw	r1, #0
   1b118:	sub	r0, r1, r0
   1b11c:	movw	r1, #32767	; 0x7fff
   1b120:	sdiv	r0, r1, r0
   1b124:	str	r0, [fp, #-36]	; 0xffffffdc
   1b128:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1b12c:	ldr	r1, [fp, #-8]
   1b130:	ldr	r2, [r1]
   1b134:	ldr	r1, [r1, #4]
   1b138:	mvn	r1, r1
   1b13c:	mvn	r2, r2
   1b140:	subs	r2, r2, r0
   1b144:	sbcs	r0, r1, r0, asr #31
   1b148:	bcs	1b2cc <__assert_fail@plt+0xa1f4>
   1b14c:	b	1b2f0 <__assert_fail@plt+0xa218>
   1b150:	b	1b154 <__assert_fail@plt+0xa07c>
   1b154:	b	1b1d4 <__assert_fail@plt+0xa0fc>
   1b158:	b	1b1d4 <__assert_fail@plt+0xa0fc>
   1b15c:	ldr	r0, [fp, #-12]
   1b160:	cmn	r0, #1
   1b164:	bne	1b1d4 <__assert_fail@plt+0xa0fc>
   1b168:	b	1b18c <__assert_fail@plt+0xa0b4>
   1b16c:	ldr	r0, [fp, #-8]
   1b170:	ldr	r1, [r0]
   1b174:	ldr	r0, [r0, #4]
   1b178:	eor	r1, r1, #32768	; 0x8000
   1b17c:	orr	r0, r1, r0
   1b180:	cmp	r0, #0
   1b184:	bne	1b2cc <__assert_fail@plt+0xa1f4>
   1b188:	b	1b2f0 <__assert_fail@plt+0xa218>
   1b18c:	ldr	r0, [fp, #-8]
   1b190:	ldr	r1, [r0]
   1b194:	ldr	r0, [r0, #4]
   1b198:	orr	r0, r1, r0
   1b19c:	cmp	r0, #0
   1b1a0:	beq	1b2f0 <__assert_fail@plt+0xa218>
   1b1a4:	b	1b1a8 <__assert_fail@plt+0xa0d0>
   1b1a8:	ldr	r0, [fp, #-8]
   1b1ac:	ldr	r1, [r0]
   1b1b0:	ldr	r0, [r0, #4]
   1b1b4:	subs	r1, r1, #1
   1b1b8:	sbc	r0, r0, #0
   1b1bc:	lsr	r1, r1, #15
   1b1c0:	orr	r1, r1, r0, lsl #17
   1b1c4:	orr	r0, r1, r0, lsr #15
   1b1c8:	cmp	r0, #0
   1b1cc:	bne	1b2cc <__assert_fail@plt+0xa1f4>
   1b1d0:	b	1b2f0 <__assert_fail@plt+0xa218>
   1b1d4:	ldr	r0, [fp, #-12]
   1b1d8:	movw	r1, #32768	; 0x8000
   1b1dc:	movt	r1, #65535	; 0xffff
   1b1e0:	sdiv	r0, r1, r0
   1b1e4:	ldr	r1, [fp, #-8]
   1b1e8:	ldr	r2, [r1]
   1b1ec:	ldr	r1, [r1, #4]
   1b1f0:	subs	r2, r0, r2
   1b1f4:	rscs	r0, r1, r0, asr #31
   1b1f8:	bcc	1b2cc <__assert_fail@plt+0xa1f4>
   1b1fc:	b	1b2f0 <__assert_fail@plt+0xa218>
   1b200:	ldr	r0, [fp, #-12]
   1b204:	cmp	r0, #0
   1b208:	bne	1b210 <__assert_fail@plt+0xa138>
   1b20c:	b	1b2f0 <__assert_fail@plt+0xa218>
   1b210:	mov	r0, #1
   1b214:	cmp	r0, #0
   1b218:	bne	1b2a4 <__assert_fail@plt+0xa1cc>
   1b21c:	b	1b220 <__assert_fail@plt+0xa148>
   1b220:	ldr	r0, [fp, #-8]
   1b224:	ldr	r1, [r0]
   1b228:	ldr	r0, [r0, #4]
   1b22c:	and	r0, r1, r0
   1b230:	cmn	r0, #1
   1b234:	bne	1b274 <__assert_fail@plt+0xa19c>
   1b238:	b	1b23c <__assert_fail@plt+0xa164>
   1b23c:	b	1b240 <__assert_fail@plt+0xa168>
   1b240:	ldr	r0, [pc, #4020]	; 1c1fc <__assert_fail@plt+0xb124>
   1b244:	ldr	r1, [fp, #-12]
   1b248:	add	r0, r1, r0
   1b24c:	movw	r1, #0
   1b250:	cmp	r1, r0
   1b254:	blt	1b2cc <__assert_fail@plt+0xa1f4>
   1b258:	b	1b2f0 <__assert_fail@plt+0xa218>
   1b25c:	ldr	r0, [fp, #-12]
   1b260:	sub	r0, r0, #1
   1b264:	movw	r1, #32767	; 0x7fff
   1b268:	cmp	r1, r0
   1b26c:	blt	1b2cc <__assert_fail@plt+0xa1f4>
   1b270:	b	1b2f0 <__assert_fail@plt+0xa218>
   1b274:	ldr	r0, [fp, #-8]
   1b278:	ldr	r2, [r0]
   1b27c:	ldr	r3, [r0, #4]
   1b280:	movw	r0, #32768	; 0x8000
   1b284:	movt	r0, #65535	; 0xffff
   1b288:	mvn	r1, #0
   1b28c:	bl	1e9e4 <__assert_fail@plt+0xd90c>
   1b290:	ldr	r2, [fp, #-12]
   1b294:	subs	r0, r0, r2
   1b298:	sbcs	r1, r1, r2, asr #31
   1b29c:	bcc	1b2cc <__assert_fail@plt+0xa1f4>
   1b2a0:	b	1b2f0 <__assert_fail@plt+0xa218>
   1b2a4:	ldr	r0, [fp, #-12]
   1b2a8:	movw	r1, #32767	; 0x7fff
   1b2ac:	sdiv	r0, r1, r0
   1b2b0:	ldr	r1, [fp, #-8]
   1b2b4:	ldr	r2, [r1]
   1b2b8:	ldr	r1, [r1, #4]
   1b2bc:	subs	r2, r0, r2
   1b2c0:	rscs	r0, r1, r0, asr #31
   1b2c4:	bcs	1b2f0 <__assert_fail@plt+0xa218>
   1b2c8:	b	1b2cc <__assert_fail@plt+0xa1f4>
   1b2cc:	ldr	r0, [fp, #-8]
   1b2d0:	ldr	r0, [r0]
   1b2d4:	ldr	r1, [fp, #-12]
   1b2d8:	mul	r0, r0, r1
   1b2dc:	sxth	r0, r0
   1b2e0:	asr	r1, r0, #31
   1b2e4:	str	r0, [fp, #-24]	; 0xffffffe8
   1b2e8:	str	r1, [fp, #-20]	; 0xffffffec
   1b2ec:	b	1c3f4 <__assert_fail@plt+0xb31c>
   1b2f0:	ldr	r0, [fp, #-8]
   1b2f4:	ldr	r0, [r0]
   1b2f8:	ldr	r1, [fp, #-12]
   1b2fc:	mul	r0, r0, r1
   1b300:	sxth	r0, r0
   1b304:	asr	r1, r0, #31
   1b308:	str	r0, [fp, #-24]	; 0xffffffe8
   1b30c:	str	r1, [fp, #-20]	; 0xffffffec
   1b310:	b	1c410 <__assert_fail@plt+0xb338>
   1b314:	ldr	r0, [fp, #-12]
   1b318:	cmp	r0, #0
   1b31c:	bge	1b450 <__assert_fail@plt+0xa378>
   1b320:	mov	r0, #1
   1b324:	cmp	r0, #0
   1b328:	bne	1b3d0 <__assert_fail@plt+0xa2f8>
   1b32c:	b	1b330 <__assert_fail@plt+0xa258>
   1b330:	b	1b334 <__assert_fail@plt+0xa25c>
   1b334:	ldr	r0, [fp, #-8]
   1b338:	ldr	r1, [r0]
   1b33c:	ldr	r0, [r0, #4]
   1b340:	ldr	r2, [fp, #-12]
   1b344:	movw	r3, #65535	; 0xffff
   1b348:	sdiv	r2, r3, r2
   1b34c:	subs	r1, r1, r2
   1b350:	sbcs	r0, r0, r2, asr #31
   1b354:	bcc	1b504 <__assert_fail@plt+0xa42c>
   1b358:	b	1b528 <__assert_fail@plt+0xa450>
   1b35c:	b	1b360 <__assert_fail@plt+0xa288>
   1b360:	ldr	r0, [pc, #2236]	; 1bc24 <__assert_fail@plt+0xab4c>
   1b364:	ldr	r1, [fp, #-12]
   1b368:	cmp	r1, r0
   1b36c:	blt	1b384 <__assert_fail@plt+0xa2ac>
   1b370:	b	1b390 <__assert_fail@plt+0xa2b8>
   1b374:	ldr	r0, [fp, #-12]
   1b378:	movw	r1, #0
   1b37c:	cmp	r1, r0
   1b380:	bge	1b390 <__assert_fail@plt+0xa2b8>
   1b384:	movw	r0, #0
   1b388:	str	r0, [fp, #-40]	; 0xffffffd8
   1b38c:	b	1b3a8 <__assert_fail@plt+0xa2d0>
   1b390:	ldr	r0, [fp, #-12]
   1b394:	movw	r1, #0
   1b398:	sub	r0, r1, r0
   1b39c:	movw	r1, #65535	; 0xffff
   1b3a0:	sdiv	r0, r1, r0
   1b3a4:	str	r0, [fp, #-40]	; 0xffffffd8
   1b3a8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1b3ac:	ldr	r1, [fp, #-8]
   1b3b0:	ldr	r2, [r1]
   1b3b4:	ldr	r1, [r1, #4]
   1b3b8:	mvn	r1, r1
   1b3bc:	mvn	r2, r2
   1b3c0:	subs	r2, r2, r0
   1b3c4:	sbcs	r0, r1, r0, asr #31
   1b3c8:	bcs	1b504 <__assert_fail@plt+0xa42c>
   1b3cc:	b	1b528 <__assert_fail@plt+0xa450>
   1b3d0:	b	1b3d4 <__assert_fail@plt+0xa2fc>
   1b3d4:	b	1b434 <__assert_fail@plt+0xa35c>
   1b3d8:	b	1b434 <__assert_fail@plt+0xa35c>
   1b3dc:	ldr	r0, [fp, #-12]
   1b3e0:	cmn	r0, #1
   1b3e4:	bne	1b434 <__assert_fail@plt+0xa35c>
   1b3e8:	b	1b408 <__assert_fail@plt+0xa330>
   1b3ec:	ldr	r0, [fp, #-8]
   1b3f0:	ldr	r1, [r0]
   1b3f4:	ldr	r0, [r0, #4]
   1b3f8:	orr	r0, r1, r0
   1b3fc:	cmp	r0, #0
   1b400:	bne	1b504 <__assert_fail@plt+0xa42c>
   1b404:	b	1b528 <__assert_fail@plt+0xa450>
   1b408:	ldr	r0, [fp, #-8]
   1b40c:	ldr	r1, [r0]
   1b410:	ldr	r0, [r0, #4]
   1b414:	orr	r0, r1, r0
   1b418:	cmp	r0, #0
   1b41c:	beq	1b528 <__assert_fail@plt+0xa450>
   1b420:	b	1b424 <__assert_fail@plt+0xa34c>
   1b424:	mov	r0, #0
   1b428:	cmp	r0, #0
   1b42c:	bne	1b504 <__assert_fail@plt+0xa42c>
   1b430:	b	1b528 <__assert_fail@plt+0xa450>
   1b434:	ldr	r0, [fp, #-8]
   1b438:	ldr	r1, [r0]
   1b43c:	ldr	r0, [r0, #4]
   1b440:	orr	r0, r1, r0
   1b444:	cmp	r0, #0
   1b448:	bne	1b504 <__assert_fail@plt+0xa42c>
   1b44c:	b	1b528 <__assert_fail@plt+0xa450>
   1b450:	ldr	r0, [fp, #-12]
   1b454:	cmp	r0, #0
   1b458:	bne	1b460 <__assert_fail@plt+0xa388>
   1b45c:	b	1b528 <__assert_fail@plt+0xa450>
   1b460:	mov	r0, #1
   1b464:	cmp	r0, #0
   1b468:	bne	1b4dc <__assert_fail@plt+0xa404>
   1b46c:	b	1b470 <__assert_fail@plt+0xa398>
   1b470:	b	1b478 <__assert_fail@plt+0xa3a0>
   1b474:	b	1b47c <__assert_fail@plt+0xa3a4>
   1b478:	b	1b4cc <__assert_fail@plt+0xa3f4>
   1b47c:	ldr	r0, [fp, #-8]
   1b480:	ldr	r1, [r0]
   1b484:	ldr	r0, [r0, #4]
   1b488:	and	r0, r1, r0
   1b48c:	cmn	r0, #1
   1b490:	bne	1b4cc <__assert_fail@plt+0xa3f4>
   1b494:	b	1b498 <__assert_fail@plt+0xa3c0>
   1b498:	b	1b49c <__assert_fail@plt+0xa3c4>
   1b49c:	ldr	r0, [fp, #-12]
   1b4a0:	add	r0, r0, #0
   1b4a4:	movw	r1, #0
   1b4a8:	cmp	r1, r0
   1b4ac:	blt	1b504 <__assert_fail@plt+0xa42c>
   1b4b0:	b	1b528 <__assert_fail@plt+0xa450>
   1b4b4:	ldr	r0, [fp, #-12]
   1b4b8:	sub	r0, r0, #1
   1b4bc:	mvn	r1, #0
   1b4c0:	cmp	r1, r0
   1b4c4:	blt	1b504 <__assert_fail@plt+0xa42c>
   1b4c8:	b	1b528 <__assert_fail@plt+0xa450>
   1b4cc:	ldr	r0, [fp, #-12]
   1b4d0:	cmp	r0, #0
   1b4d4:	bne	1b504 <__assert_fail@plt+0xa42c>
   1b4d8:	b	1b528 <__assert_fail@plt+0xa450>
   1b4dc:	ldr	r0, [fp, #-12]
   1b4e0:	movw	r1, #65535	; 0xffff
   1b4e4:	sdiv	r0, r1, r0
   1b4e8:	ldr	r1, [fp, #-8]
   1b4ec:	ldr	r2, [r1]
   1b4f0:	ldr	r1, [r1, #4]
   1b4f4:	subs	r2, r0, r2
   1b4f8:	rscs	r0, r1, r0, asr #31
   1b4fc:	bcs	1b528 <__assert_fail@plt+0xa450>
   1b500:	b	1b504 <__assert_fail@plt+0xa42c>
   1b504:	ldr	r0, [fp, #-8]
   1b508:	ldr	r0, [r0]
   1b50c:	ldr	r1, [fp, #-12]
   1b510:	mul	r0, r0, r1
   1b514:	uxth	r0, r0
   1b518:	mov	r1, #0
   1b51c:	str	r1, [fp, #-20]	; 0xffffffec
   1b520:	str	r0, [fp, #-24]	; 0xffffffe8
   1b524:	b	1c3f4 <__assert_fail@plt+0xb31c>
   1b528:	ldr	r0, [fp, #-8]
   1b52c:	ldr	r0, [r0]
   1b530:	ldr	r1, [fp, #-12]
   1b534:	mul	r0, r0, r1
   1b538:	uxth	r0, r0
   1b53c:	mov	r1, #0
   1b540:	str	r1, [fp, #-20]	; 0xffffffec
   1b544:	str	r0, [fp, #-24]	; 0xffffffe8
   1b548:	b	1c410 <__assert_fail@plt+0xb338>
   1b54c:	b	1b9e0 <__assert_fail@plt+0xa908>
   1b550:	b	1b7b0 <__assert_fail@plt+0xa6d8>
   1b554:	ldr	r0, [fp, #-12]
   1b558:	cmp	r0, #0
   1b55c:	bge	1b6ac <__assert_fail@plt+0xa5d4>
   1b560:	mov	r0, #1
   1b564:	cmp	r0, #0
   1b568:	bne	1b610 <__assert_fail@plt+0xa538>
   1b56c:	b	1b570 <__assert_fail@plt+0xa498>
   1b570:	b	1b574 <__assert_fail@plt+0xa49c>
   1b574:	ldr	r0, [fp, #-8]
   1b578:	ldr	r1, [r0]
   1b57c:	ldr	r0, [r0, #4]
   1b580:	ldr	r2, [fp, #-12]
   1b584:	mvn	r3, #-2147483648	; 0x80000000
   1b588:	sdiv	r2, r3, r2
   1b58c:	subs	r1, r1, r2
   1b590:	sbcs	r0, r0, r2, asr #31
   1b594:	bcc	1b770 <__assert_fail@plt+0xa698>
   1b598:	b	1b790 <__assert_fail@plt+0xa6b8>
   1b59c:	b	1b5a0 <__assert_fail@plt+0xa4c8>
   1b5a0:	ldr	r0, [pc, #3728]	; 1c438 <__assert_fail@plt+0xb360>
   1b5a4:	ldr	r1, [fp, #-12]
   1b5a8:	cmp	r1, r0
   1b5ac:	blt	1b5c4 <__assert_fail@plt+0xa4ec>
   1b5b0:	b	1b5d0 <__assert_fail@plt+0xa4f8>
   1b5b4:	ldr	r0, [fp, #-12]
   1b5b8:	movw	r1, #0
   1b5bc:	cmp	r1, r0
   1b5c0:	bge	1b5d0 <__assert_fail@plt+0xa4f8>
   1b5c4:	movw	r0, #0
   1b5c8:	str	r0, [fp, #-44]	; 0xffffffd4
   1b5cc:	b	1b5e8 <__assert_fail@plt+0xa510>
   1b5d0:	ldr	r0, [pc, #3684]	; 1c43c <__assert_fail@plt+0xb364>
   1b5d4:	ldr	r1, [fp, #-12]
   1b5d8:	movw	r2, #0
   1b5dc:	sub	r1, r2, r1
   1b5e0:	sdiv	r0, r0, r1
   1b5e4:	str	r0, [fp, #-44]	; 0xffffffd4
   1b5e8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1b5ec:	ldr	r1, [fp, #-8]
   1b5f0:	ldr	r2, [r1]
   1b5f4:	ldr	r1, [r1, #4]
   1b5f8:	mvn	r1, r1
   1b5fc:	mvn	r2, r2
   1b600:	subs	r2, r2, r0
   1b604:	sbcs	r0, r1, r0, asr #31
   1b608:	bcs	1b770 <__assert_fail@plt+0xa698>
   1b60c:	b	1b790 <__assert_fail@plt+0xa6b8>
   1b610:	ldr	r0, [fp, #-12]
   1b614:	cmn	r0, #1
   1b618:	bne	1b684 <__assert_fail@plt+0xa5ac>
   1b61c:	b	1b640 <__assert_fail@plt+0xa568>
   1b620:	ldr	r0, [fp, #-8]
   1b624:	ldr	r1, [r0]
   1b628:	ldr	r0, [r0, #4]
   1b62c:	eor	r1, r1, #-2147483648	; 0x80000000
   1b630:	orr	r0, r1, r0
   1b634:	cmp	r0, #0
   1b638:	bne	1b770 <__assert_fail@plt+0xa698>
   1b63c:	b	1b790 <__assert_fail@plt+0xa6b8>
   1b640:	ldr	r0, [fp, #-8]
   1b644:	ldr	r1, [r0]
   1b648:	ldr	r0, [r0, #4]
   1b64c:	orr	r0, r1, r0
   1b650:	cmp	r0, #0
   1b654:	beq	1b790 <__assert_fail@plt+0xa6b8>
   1b658:	b	1b65c <__assert_fail@plt+0xa584>
   1b65c:	ldr	r0, [fp, #-8]
   1b660:	ldr	r1, [r0]
   1b664:	ldr	r0, [r0, #4]
   1b668:	subs	r1, r1, #1
   1b66c:	sbc	r0, r0, #0
   1b670:	mvn	r2, #-2147483648	; 0x80000000
   1b674:	subs	r1, r2, r1
   1b678:	rscs	r0, r0, #0
   1b67c:	bcc	1b770 <__assert_fail@plt+0xa698>
   1b680:	b	1b790 <__assert_fail@plt+0xa6b8>
   1b684:	ldr	r0, [fp, #-12]
   1b688:	mov	r1, #-2147483648	; 0x80000000
   1b68c:	sdiv	r0, r1, r0
   1b690:	ldr	r1, [fp, #-8]
   1b694:	ldr	r2, [r1]
   1b698:	ldr	r1, [r1, #4]
   1b69c:	subs	r2, r0, r2
   1b6a0:	rscs	r0, r1, r0, asr #31
   1b6a4:	bcc	1b770 <__assert_fail@plt+0xa698>
   1b6a8:	b	1b790 <__assert_fail@plt+0xa6b8>
   1b6ac:	ldr	r0, [fp, #-12]
   1b6b0:	cmp	r0, #0
   1b6b4:	bne	1b6bc <__assert_fail@plt+0xa5e4>
   1b6b8:	b	1b790 <__assert_fail@plt+0xa6b8>
   1b6bc:	mov	r0, #1
   1b6c0:	cmp	r0, #0
   1b6c4:	bne	1b748 <__assert_fail@plt+0xa670>
   1b6c8:	b	1b6cc <__assert_fail@plt+0xa5f4>
   1b6cc:	ldr	r0, [fp, #-8]
   1b6d0:	ldr	r1, [r0]
   1b6d4:	ldr	r0, [r0, #4]
   1b6d8:	and	r0, r1, r0
   1b6dc:	cmn	r0, #1
   1b6e0:	bne	1b71c <__assert_fail@plt+0xa644>
   1b6e4:	b	1b6e8 <__assert_fail@plt+0xa610>
   1b6e8:	b	1b6ec <__assert_fail@plt+0xa614>
   1b6ec:	ldr	r0, [fp, #-12]
   1b6f0:	add	r0, r0, #-2147483648	; 0x80000000
   1b6f4:	movw	r1, #0
   1b6f8:	cmp	r1, r0
   1b6fc:	blt	1b770 <__assert_fail@plt+0xa698>
   1b700:	b	1b790 <__assert_fail@plt+0xa6b8>
   1b704:	ldr	r0, [pc, #3376]	; 1c43c <__assert_fail@plt+0xb364>
   1b708:	ldr	r1, [fp, #-12]
   1b70c:	sub	r1, r1, #1
   1b710:	cmp	r0, r1
   1b714:	blt	1b770 <__assert_fail@plt+0xa698>
   1b718:	b	1b790 <__assert_fail@plt+0xa6b8>
   1b71c:	ldr	r0, [fp, #-8]
   1b720:	ldr	r2, [r0]
   1b724:	ldr	r3, [r0, #4]
   1b728:	mov	r0, #-2147483648	; 0x80000000
   1b72c:	mvn	r1, #0
   1b730:	bl	1e9e4 <__assert_fail@plt+0xd90c>
   1b734:	ldr	r2, [fp, #-12]
   1b738:	subs	r0, r0, r2
   1b73c:	sbcs	r1, r1, r2, asr #31
   1b740:	bcc	1b770 <__assert_fail@plt+0xa698>
   1b744:	b	1b790 <__assert_fail@plt+0xa6b8>
   1b748:	ldr	r0, [fp, #-12]
   1b74c:	mvn	r1, #-2147483648	; 0x80000000
   1b750:	sdiv	r0, r1, r0
   1b754:	ldr	r1, [fp, #-8]
   1b758:	ldr	r2, [r1]
   1b75c:	ldr	r1, [r1, #4]
   1b760:	subs	r2, r0, r2
   1b764:	rscs	r0, r1, r0, asr #31
   1b768:	bcs	1b790 <__assert_fail@plt+0xa6b8>
   1b76c:	b	1b770 <__assert_fail@plt+0xa698>
   1b770:	ldr	r0, [fp, #-8]
   1b774:	ldr	r0, [r0]
   1b778:	ldr	r1, [fp, #-12]
   1b77c:	mul	r0, r0, r1
   1b780:	asr	r1, r0, #31
   1b784:	str	r0, [fp, #-24]	; 0xffffffe8
   1b788:	str	r1, [fp, #-20]	; 0xffffffec
   1b78c:	b	1c3f4 <__assert_fail@plt+0xb31c>
   1b790:	ldr	r0, [fp, #-8]
   1b794:	ldr	r0, [r0]
   1b798:	ldr	r1, [fp, #-12]
   1b79c:	mul	r0, r0, r1
   1b7a0:	asr	r1, r0, #31
   1b7a4:	str	r0, [fp, #-24]	; 0xffffffe8
   1b7a8:	str	r1, [fp, #-20]	; 0xffffffec
   1b7ac:	b	1c410 <__assert_fail@plt+0xb338>
   1b7b0:	ldr	r0, [fp, #-12]
   1b7b4:	cmp	r0, #0
   1b7b8:	bge	1b8ec <__assert_fail@plt+0xa814>
   1b7bc:	mov	r0, #1
   1b7c0:	cmp	r0, #0
   1b7c4:	bne	1b86c <__assert_fail@plt+0xa794>
   1b7c8:	b	1b7cc <__assert_fail@plt+0xa6f4>
   1b7cc:	b	1b7f8 <__assert_fail@plt+0xa720>
   1b7d0:	ldr	r0, [fp, #-8]
   1b7d4:	ldr	r1, [r0]
   1b7d8:	ldr	r0, [r0, #4]
   1b7dc:	ldr	r2, [fp, #-12]
   1b7e0:	mvn	r3, #0
   1b7e4:	udiv	r2, r3, r2
   1b7e8:	subs	r1, r1, r2
   1b7ec:	sbcs	r0, r0, #0
   1b7f0:	bcc	1b9a0 <__assert_fail@plt+0xa8c8>
   1b7f4:	b	1b9c0 <__assert_fail@plt+0xa8e8>
   1b7f8:	b	1b7fc <__assert_fail@plt+0xa724>
   1b7fc:	ldr	r0, [pc, #3124]	; 1c438 <__assert_fail@plt+0xb360>
   1b800:	ldr	r1, [fp, #-12]
   1b804:	cmp	r1, r0
   1b808:	blt	1b820 <__assert_fail@plt+0xa748>
   1b80c:	b	1b82c <__assert_fail@plt+0xa754>
   1b810:	ldr	r0, [fp, #-12]
   1b814:	movw	r1, #0
   1b818:	cmp	r1, r0
   1b81c:	bge	1b82c <__assert_fail@plt+0xa754>
   1b820:	movw	r0, #1
   1b824:	str	r0, [fp, #-48]	; 0xffffffd0
   1b828:	b	1b844 <__assert_fail@plt+0xa76c>
   1b82c:	ldr	r0, [fp, #-12]
   1b830:	movw	r1, #0
   1b834:	sub	r0, r1, r0
   1b838:	mvn	r1, #0
   1b83c:	udiv	r0, r1, r0
   1b840:	str	r0, [fp, #-48]	; 0xffffffd0
   1b844:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1b848:	ldr	r1, [fp, #-8]
   1b84c:	ldr	r2, [r1]
   1b850:	ldr	r1, [r1, #4]
   1b854:	mvn	r1, r1
   1b858:	mvn	r2, r2
   1b85c:	subs	r0, r2, r0
   1b860:	sbcs	r1, r1, #0
   1b864:	bcs	1b9a0 <__assert_fail@plt+0xa8c8>
   1b868:	b	1b9c0 <__assert_fail@plt+0xa8e8>
   1b86c:	b	1b870 <__assert_fail@plt+0xa798>
   1b870:	b	1b8d0 <__assert_fail@plt+0xa7f8>
   1b874:	b	1b8d0 <__assert_fail@plt+0xa7f8>
   1b878:	ldr	r0, [fp, #-12]
   1b87c:	cmn	r0, #1
   1b880:	bne	1b8d0 <__assert_fail@plt+0xa7f8>
   1b884:	b	1b8a4 <__assert_fail@plt+0xa7cc>
   1b888:	ldr	r0, [fp, #-8]
   1b88c:	ldr	r1, [r0]
   1b890:	ldr	r0, [r0, #4]
   1b894:	orr	r0, r1, r0
   1b898:	cmp	r0, #0
   1b89c:	bne	1b9a0 <__assert_fail@plt+0xa8c8>
   1b8a0:	b	1b9c0 <__assert_fail@plt+0xa8e8>
   1b8a4:	ldr	r0, [fp, #-8]
   1b8a8:	ldr	r1, [r0]
   1b8ac:	ldr	r0, [r0, #4]
   1b8b0:	orr	r0, r1, r0
   1b8b4:	cmp	r0, #0
   1b8b8:	beq	1b9c0 <__assert_fail@plt+0xa8e8>
   1b8bc:	b	1b8c0 <__assert_fail@plt+0xa7e8>
   1b8c0:	mov	r0, #0
   1b8c4:	cmp	r0, #0
   1b8c8:	bne	1b9a0 <__assert_fail@plt+0xa8c8>
   1b8cc:	b	1b9c0 <__assert_fail@plt+0xa8e8>
   1b8d0:	ldr	r0, [fp, #-8]
   1b8d4:	ldr	r1, [r0]
   1b8d8:	ldr	r0, [r0, #4]
   1b8dc:	orr	r0, r1, r0
   1b8e0:	cmp	r0, #0
   1b8e4:	bne	1b9a0 <__assert_fail@plt+0xa8c8>
   1b8e8:	b	1b9c0 <__assert_fail@plt+0xa8e8>
   1b8ec:	ldr	r0, [fp, #-12]
   1b8f0:	cmp	r0, #0
   1b8f4:	bne	1b8fc <__assert_fail@plt+0xa824>
   1b8f8:	b	1b9c0 <__assert_fail@plt+0xa8e8>
   1b8fc:	mov	r0, #1
   1b900:	cmp	r0, #0
   1b904:	bne	1b978 <__assert_fail@plt+0xa8a0>
   1b908:	b	1b90c <__assert_fail@plt+0xa834>
   1b90c:	b	1b914 <__assert_fail@plt+0xa83c>
   1b910:	b	1b918 <__assert_fail@plt+0xa840>
   1b914:	b	1b968 <__assert_fail@plt+0xa890>
   1b918:	ldr	r0, [fp, #-8]
   1b91c:	ldr	r1, [r0]
   1b920:	ldr	r0, [r0, #4]
   1b924:	and	r0, r1, r0
   1b928:	cmn	r0, #1
   1b92c:	bne	1b968 <__assert_fail@plt+0xa890>
   1b930:	b	1b934 <__assert_fail@plt+0xa85c>
   1b934:	b	1b938 <__assert_fail@plt+0xa860>
   1b938:	ldr	r0, [fp, #-12]
   1b93c:	add	r0, r0, #0
   1b940:	movw	r1, #0
   1b944:	cmp	r1, r0
   1b948:	blt	1b9a0 <__assert_fail@plt+0xa8c8>
   1b94c:	b	1b9c0 <__assert_fail@plt+0xa8e8>
   1b950:	ldr	r0, [fp, #-12]
   1b954:	sub	r0, r0, #1
   1b958:	mvn	r1, #0
   1b95c:	cmp	r1, r0
   1b960:	blt	1b9a0 <__assert_fail@plt+0xa8c8>
   1b964:	b	1b9c0 <__assert_fail@plt+0xa8e8>
   1b968:	ldr	r0, [fp, #-12]
   1b96c:	cmp	r0, #0
   1b970:	bne	1b9a0 <__assert_fail@plt+0xa8c8>
   1b974:	b	1b9c0 <__assert_fail@plt+0xa8e8>
   1b978:	ldr	r0, [fp, #-12]
   1b97c:	mvn	r1, #0
   1b980:	udiv	r0, r1, r0
   1b984:	ldr	r1, [fp, #-8]
   1b988:	ldr	r2, [r1]
   1b98c:	ldr	r1, [r1, #4]
   1b990:	subs	r0, r0, r2
   1b994:	rscs	r1, r1, #0
   1b998:	bcs	1b9c0 <__assert_fail@plt+0xa8e8>
   1b99c:	b	1b9a0 <__assert_fail@plt+0xa8c8>
   1b9a0:	ldr	r0, [fp, #-8]
   1b9a4:	ldr	r0, [r0]
   1b9a8:	ldr	r1, [fp, #-12]
   1b9ac:	mul	r0, r0, r1
   1b9b0:	mov	r1, #0
   1b9b4:	str	r1, [fp, #-20]	; 0xffffffec
   1b9b8:	str	r0, [fp, #-24]	; 0xffffffe8
   1b9bc:	b	1c3f4 <__assert_fail@plt+0xb31c>
   1b9c0:	ldr	r0, [fp, #-8]
   1b9c4:	ldr	r0, [r0]
   1b9c8:	ldr	r1, [fp, #-12]
   1b9cc:	mul	r0, r0, r1
   1b9d0:	mov	r1, #0
   1b9d4:	str	r1, [fp, #-20]	; 0xffffffec
   1b9d8:	str	r0, [fp, #-24]	; 0xffffffe8
   1b9dc:	b	1c410 <__assert_fail@plt+0xb338>
   1b9e0:	b	1be78 <__assert_fail@plt+0xada0>
   1b9e4:	b	1bc48 <__assert_fail@plt+0xab70>
   1b9e8:	ldr	r0, [fp, #-12]
   1b9ec:	cmp	r0, #0
   1b9f0:	bge	1bb40 <__assert_fail@plt+0xaa68>
   1b9f4:	mov	r0, #1
   1b9f8:	cmp	r0, #0
   1b9fc:	bne	1baa4 <__assert_fail@plt+0xa9cc>
   1ba00:	b	1ba04 <__assert_fail@plt+0xa92c>
   1ba04:	b	1ba08 <__assert_fail@plt+0xa930>
   1ba08:	ldr	r0, [fp, #-8]
   1ba0c:	ldr	r1, [r0]
   1ba10:	ldr	r0, [r0, #4]
   1ba14:	ldr	r2, [fp, #-12]
   1ba18:	mvn	r3, #-2147483648	; 0x80000000
   1ba1c:	sdiv	r2, r3, r2
   1ba20:	subs	r1, r1, r2
   1ba24:	sbcs	r0, r0, r2, asr #31
   1ba28:	bcc	1bc04 <__assert_fail@plt+0xab2c>
   1ba2c:	b	1bc28 <__assert_fail@plt+0xab50>
   1ba30:	b	1ba34 <__assert_fail@plt+0xa95c>
   1ba34:	ldr	r0, [pc, #2556]	; 1c438 <__assert_fail@plt+0xb360>
   1ba38:	ldr	r1, [fp, #-12]
   1ba3c:	cmp	r1, r0
   1ba40:	blt	1ba58 <__assert_fail@plt+0xa980>
   1ba44:	b	1ba64 <__assert_fail@plt+0xa98c>
   1ba48:	ldr	r0, [fp, #-12]
   1ba4c:	movw	r1, #0
   1ba50:	cmp	r1, r0
   1ba54:	bge	1ba64 <__assert_fail@plt+0xa98c>
   1ba58:	movw	r0, #0
   1ba5c:	str	r0, [fp, #-52]	; 0xffffffcc
   1ba60:	b	1ba7c <__assert_fail@plt+0xa9a4>
   1ba64:	ldr	r0, [pc, #2512]	; 1c43c <__assert_fail@plt+0xb364>
   1ba68:	ldr	r1, [fp, #-12]
   1ba6c:	movw	r2, #0
   1ba70:	sub	r1, r2, r1
   1ba74:	sdiv	r0, r0, r1
   1ba78:	str	r0, [fp, #-52]	; 0xffffffcc
   1ba7c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1ba80:	ldr	r1, [fp, #-8]
   1ba84:	ldr	r2, [r1]
   1ba88:	ldr	r1, [r1, #4]
   1ba8c:	mvn	r1, r1
   1ba90:	mvn	r2, r2
   1ba94:	subs	r2, r2, r0
   1ba98:	sbcs	r0, r1, r0, asr #31
   1ba9c:	bcs	1bc04 <__assert_fail@plt+0xab2c>
   1baa0:	b	1bc28 <__assert_fail@plt+0xab50>
   1baa4:	ldr	r0, [fp, #-12]
   1baa8:	cmn	r0, #1
   1baac:	bne	1bb18 <__assert_fail@plt+0xaa40>
   1bab0:	b	1bad4 <__assert_fail@plt+0xa9fc>
   1bab4:	ldr	r0, [fp, #-8]
   1bab8:	ldr	r1, [r0]
   1babc:	ldr	r0, [r0, #4]
   1bac0:	eor	r1, r1, #-2147483648	; 0x80000000
   1bac4:	orr	r0, r1, r0
   1bac8:	cmp	r0, #0
   1bacc:	bne	1bc04 <__assert_fail@plt+0xab2c>
   1bad0:	b	1bc28 <__assert_fail@plt+0xab50>
   1bad4:	ldr	r0, [fp, #-8]
   1bad8:	ldr	r1, [r0]
   1badc:	ldr	r0, [r0, #4]
   1bae0:	orr	r0, r1, r0
   1bae4:	cmp	r0, #0
   1bae8:	beq	1bc28 <__assert_fail@plt+0xab50>
   1baec:	b	1baf0 <__assert_fail@plt+0xaa18>
   1baf0:	ldr	r0, [fp, #-8]
   1baf4:	ldr	r1, [r0]
   1baf8:	ldr	r0, [r0, #4]
   1bafc:	subs	r1, r1, #1
   1bb00:	sbc	r0, r0, #0
   1bb04:	mvn	r2, #-2147483648	; 0x80000000
   1bb08:	subs	r1, r2, r1
   1bb0c:	rscs	r0, r0, #0
   1bb10:	bcc	1bc04 <__assert_fail@plt+0xab2c>
   1bb14:	b	1bc28 <__assert_fail@plt+0xab50>
   1bb18:	ldr	r0, [fp, #-12]
   1bb1c:	mov	r1, #-2147483648	; 0x80000000
   1bb20:	sdiv	r0, r1, r0
   1bb24:	ldr	r1, [fp, #-8]
   1bb28:	ldr	r2, [r1]
   1bb2c:	ldr	r1, [r1, #4]
   1bb30:	subs	r2, r0, r2
   1bb34:	rscs	r0, r1, r0, asr #31
   1bb38:	bcc	1bc04 <__assert_fail@plt+0xab2c>
   1bb3c:	b	1bc28 <__assert_fail@plt+0xab50>
   1bb40:	ldr	r0, [fp, #-12]
   1bb44:	cmp	r0, #0
   1bb48:	bne	1bb50 <__assert_fail@plt+0xaa78>
   1bb4c:	b	1bc28 <__assert_fail@plt+0xab50>
   1bb50:	mov	r0, #1
   1bb54:	cmp	r0, #0
   1bb58:	bne	1bbdc <__assert_fail@plt+0xab04>
   1bb5c:	b	1bb60 <__assert_fail@plt+0xaa88>
   1bb60:	ldr	r0, [fp, #-8]
   1bb64:	ldr	r1, [r0]
   1bb68:	ldr	r0, [r0, #4]
   1bb6c:	and	r0, r1, r0
   1bb70:	cmn	r0, #1
   1bb74:	bne	1bbb0 <__assert_fail@plt+0xaad8>
   1bb78:	b	1bb7c <__assert_fail@plt+0xaaa4>
   1bb7c:	b	1bb80 <__assert_fail@plt+0xaaa8>
   1bb80:	ldr	r0, [fp, #-12]
   1bb84:	add	r0, r0, #-2147483648	; 0x80000000
   1bb88:	movw	r1, #0
   1bb8c:	cmp	r1, r0
   1bb90:	blt	1bc04 <__assert_fail@plt+0xab2c>
   1bb94:	b	1bc28 <__assert_fail@plt+0xab50>
   1bb98:	ldr	r0, [pc, #2204]	; 1c43c <__assert_fail@plt+0xb364>
   1bb9c:	ldr	r1, [fp, #-12]
   1bba0:	sub	r1, r1, #1
   1bba4:	cmp	r0, r1
   1bba8:	blt	1bc04 <__assert_fail@plt+0xab2c>
   1bbac:	b	1bc28 <__assert_fail@plt+0xab50>
   1bbb0:	ldr	r0, [fp, #-8]
   1bbb4:	ldr	r2, [r0]
   1bbb8:	ldr	r3, [r0, #4]
   1bbbc:	mov	r0, #-2147483648	; 0x80000000
   1bbc0:	mvn	r1, #0
   1bbc4:	bl	1e9e4 <__assert_fail@plt+0xd90c>
   1bbc8:	ldr	r2, [fp, #-12]
   1bbcc:	subs	r0, r0, r2
   1bbd0:	sbcs	r1, r1, r2, asr #31
   1bbd4:	bcc	1bc04 <__assert_fail@plt+0xab2c>
   1bbd8:	b	1bc28 <__assert_fail@plt+0xab50>
   1bbdc:	ldr	r0, [fp, #-12]
   1bbe0:	mvn	r1, #-2147483648	; 0x80000000
   1bbe4:	sdiv	r0, r1, r0
   1bbe8:	ldr	r1, [fp, #-8]
   1bbec:	ldr	r2, [r1]
   1bbf0:	ldr	r1, [r1, #4]
   1bbf4:	subs	r2, r0, r2
   1bbf8:	rscs	r0, r1, r0, asr #31
   1bbfc:	bcs	1bc28 <__assert_fail@plt+0xab50>
   1bc00:	b	1bc04 <__assert_fail@plt+0xab2c>
   1bc04:	ldr	r0, [fp, #-8]
   1bc08:	ldr	r0, [r0]
   1bc0c:	ldr	r1, [fp, #-12]
   1bc10:	mul	r0, r0, r1
   1bc14:	asr	r1, r0, #31
   1bc18:	str	r0, [fp, #-24]	; 0xffffffe8
   1bc1c:	str	r1, [fp, #-20]	; 0xffffffec
   1bc20:	b	1c3f4 <__assert_fail@plt+0xb31c>
   1bc24:	andhi	r0, r0, r1
   1bc28:	ldr	r0, [fp, #-8]
   1bc2c:	ldr	r0, [r0]
   1bc30:	ldr	r1, [fp, #-12]
   1bc34:	mul	r0, r0, r1
   1bc38:	asr	r1, r0, #31
   1bc3c:	str	r0, [fp, #-24]	; 0xffffffe8
   1bc40:	str	r1, [fp, #-20]	; 0xffffffec
   1bc44:	b	1c410 <__assert_fail@plt+0xb338>
   1bc48:	ldr	r0, [fp, #-12]
   1bc4c:	cmp	r0, #0
   1bc50:	bge	1bd84 <__assert_fail@plt+0xacac>
   1bc54:	mov	r0, #1
   1bc58:	cmp	r0, #0
   1bc5c:	bne	1bd04 <__assert_fail@plt+0xac2c>
   1bc60:	b	1bc64 <__assert_fail@plt+0xab8c>
   1bc64:	b	1bc90 <__assert_fail@plt+0xabb8>
   1bc68:	ldr	r0, [fp, #-8]
   1bc6c:	ldr	r1, [r0]
   1bc70:	ldr	r0, [r0, #4]
   1bc74:	ldr	r2, [fp, #-12]
   1bc78:	mvn	r3, #0
   1bc7c:	udiv	r2, r3, r2
   1bc80:	subs	r1, r1, r2
   1bc84:	sbcs	r0, r0, #0
   1bc88:	bcc	1be38 <__assert_fail@plt+0xad60>
   1bc8c:	b	1be58 <__assert_fail@plt+0xad80>
   1bc90:	b	1bc94 <__assert_fail@plt+0xabbc>
   1bc94:	ldr	r0, [pc, #1948]	; 1c438 <__assert_fail@plt+0xb360>
   1bc98:	ldr	r1, [fp, #-12]
   1bc9c:	cmp	r1, r0
   1bca0:	blt	1bcb8 <__assert_fail@plt+0xabe0>
   1bca4:	b	1bcc4 <__assert_fail@plt+0xabec>
   1bca8:	ldr	r0, [fp, #-12]
   1bcac:	movw	r1, #0
   1bcb0:	cmp	r1, r0
   1bcb4:	bge	1bcc4 <__assert_fail@plt+0xabec>
   1bcb8:	movw	r0, #1
   1bcbc:	str	r0, [sp, #56]	; 0x38
   1bcc0:	b	1bcdc <__assert_fail@plt+0xac04>
   1bcc4:	ldr	r0, [fp, #-12]
   1bcc8:	movw	r1, #0
   1bccc:	sub	r0, r1, r0
   1bcd0:	mvn	r1, #0
   1bcd4:	udiv	r0, r1, r0
   1bcd8:	str	r0, [sp, #56]	; 0x38
   1bcdc:	ldr	r0, [sp, #56]	; 0x38
   1bce0:	ldr	r1, [fp, #-8]
   1bce4:	ldr	r2, [r1]
   1bce8:	ldr	r1, [r1, #4]
   1bcec:	mvn	r1, r1
   1bcf0:	mvn	r2, r2
   1bcf4:	subs	r0, r2, r0
   1bcf8:	sbcs	r1, r1, #0
   1bcfc:	bcs	1be38 <__assert_fail@plt+0xad60>
   1bd00:	b	1be58 <__assert_fail@plt+0xad80>
   1bd04:	b	1bd08 <__assert_fail@plt+0xac30>
   1bd08:	b	1bd68 <__assert_fail@plt+0xac90>
   1bd0c:	b	1bd68 <__assert_fail@plt+0xac90>
   1bd10:	ldr	r0, [fp, #-12]
   1bd14:	cmn	r0, #1
   1bd18:	bne	1bd68 <__assert_fail@plt+0xac90>
   1bd1c:	b	1bd3c <__assert_fail@plt+0xac64>
   1bd20:	ldr	r0, [fp, #-8]
   1bd24:	ldr	r1, [r0]
   1bd28:	ldr	r0, [r0, #4]
   1bd2c:	orr	r0, r1, r0
   1bd30:	cmp	r0, #0
   1bd34:	bne	1be38 <__assert_fail@plt+0xad60>
   1bd38:	b	1be58 <__assert_fail@plt+0xad80>
   1bd3c:	ldr	r0, [fp, #-8]
   1bd40:	ldr	r1, [r0]
   1bd44:	ldr	r0, [r0, #4]
   1bd48:	orr	r0, r1, r0
   1bd4c:	cmp	r0, #0
   1bd50:	beq	1be58 <__assert_fail@plt+0xad80>
   1bd54:	b	1bd58 <__assert_fail@plt+0xac80>
   1bd58:	mov	r0, #0
   1bd5c:	cmp	r0, #0
   1bd60:	bne	1be38 <__assert_fail@plt+0xad60>
   1bd64:	b	1be58 <__assert_fail@plt+0xad80>
   1bd68:	ldr	r0, [fp, #-8]
   1bd6c:	ldr	r1, [r0]
   1bd70:	ldr	r0, [r0, #4]
   1bd74:	orr	r0, r1, r0
   1bd78:	cmp	r0, #0
   1bd7c:	bne	1be38 <__assert_fail@plt+0xad60>
   1bd80:	b	1be58 <__assert_fail@plt+0xad80>
   1bd84:	ldr	r0, [fp, #-12]
   1bd88:	cmp	r0, #0
   1bd8c:	bne	1bd94 <__assert_fail@plt+0xacbc>
   1bd90:	b	1be58 <__assert_fail@plt+0xad80>
   1bd94:	mov	r0, #1
   1bd98:	cmp	r0, #0
   1bd9c:	bne	1be10 <__assert_fail@plt+0xad38>
   1bda0:	b	1bda4 <__assert_fail@plt+0xaccc>
   1bda4:	b	1bdac <__assert_fail@plt+0xacd4>
   1bda8:	b	1bdb0 <__assert_fail@plt+0xacd8>
   1bdac:	b	1be00 <__assert_fail@plt+0xad28>
   1bdb0:	ldr	r0, [fp, #-8]
   1bdb4:	ldr	r1, [r0]
   1bdb8:	ldr	r0, [r0, #4]
   1bdbc:	and	r0, r1, r0
   1bdc0:	cmn	r0, #1
   1bdc4:	bne	1be00 <__assert_fail@plt+0xad28>
   1bdc8:	b	1bdcc <__assert_fail@plt+0xacf4>
   1bdcc:	b	1bdd0 <__assert_fail@plt+0xacf8>
   1bdd0:	ldr	r0, [fp, #-12]
   1bdd4:	add	r0, r0, #0
   1bdd8:	movw	r1, #0
   1bddc:	cmp	r1, r0
   1bde0:	blt	1be38 <__assert_fail@plt+0xad60>
   1bde4:	b	1be58 <__assert_fail@plt+0xad80>
   1bde8:	ldr	r0, [fp, #-12]
   1bdec:	sub	r0, r0, #1
   1bdf0:	mvn	r1, #0
   1bdf4:	cmp	r1, r0
   1bdf8:	blt	1be38 <__assert_fail@plt+0xad60>
   1bdfc:	b	1be58 <__assert_fail@plt+0xad80>
   1be00:	ldr	r0, [fp, #-12]
   1be04:	cmp	r0, #0
   1be08:	bne	1be38 <__assert_fail@plt+0xad60>
   1be0c:	b	1be58 <__assert_fail@plt+0xad80>
   1be10:	ldr	r0, [fp, #-12]
   1be14:	mvn	r1, #0
   1be18:	udiv	r0, r1, r0
   1be1c:	ldr	r1, [fp, #-8]
   1be20:	ldr	r2, [r1]
   1be24:	ldr	r1, [r1, #4]
   1be28:	subs	r0, r0, r2
   1be2c:	rscs	r1, r1, #0
   1be30:	bcs	1be58 <__assert_fail@plt+0xad80>
   1be34:	b	1be38 <__assert_fail@plt+0xad60>
   1be38:	ldr	r0, [fp, #-8]
   1be3c:	ldr	r0, [r0]
   1be40:	ldr	r1, [fp, #-12]
   1be44:	mul	r0, r0, r1
   1be48:	mov	r1, #0
   1be4c:	str	r1, [fp, #-20]	; 0xffffffec
   1be50:	str	r0, [fp, #-24]	; 0xffffffe8
   1be54:	b	1c3f4 <__assert_fail@plt+0xb31c>
   1be58:	ldr	r0, [fp, #-8]
   1be5c:	ldr	r0, [r0]
   1be60:	ldr	r1, [fp, #-12]
   1be64:	mul	r0, r0, r1
   1be68:	mov	r1, #0
   1be6c:	str	r1, [fp, #-20]	; 0xffffffec
   1be70:	str	r0, [fp, #-24]	; 0xffffffe8
   1be74:	b	1c410 <__assert_fail@plt+0xb338>
   1be78:	b	1c15c <__assert_fail@plt+0xb084>
   1be7c:	ldr	r0, [fp, #-12]
   1be80:	cmp	r0, #0
   1be84:	bge	1c02c <__assert_fail@plt+0xaf54>
   1be88:	mov	r0, #1
   1be8c:	cmp	r0, #0
   1be90:	bne	1bf80 <__assert_fail@plt+0xaea8>
   1be94:	b	1be98 <__assert_fail@plt+0xadc0>
   1be98:	b	1be9c <__assert_fail@plt+0xadc4>
   1be9c:	ldr	r0, [fp, #-8]
   1bea0:	ldr	r1, [r0]
   1bea4:	ldr	r0, [r0, #4]
   1bea8:	ldr	r2, [fp, #-12]
   1beac:	asr	r3, r2, #31
   1beb0:	mvn	ip, #0
   1beb4:	mvn	lr, #-2147483648	; 0x80000000
   1beb8:	str	r0, [sp, #52]	; 0x34
   1bebc:	mov	r0, ip
   1bec0:	str	r1, [sp, #48]	; 0x30
   1bec4:	mov	r1, lr
   1bec8:	bl	1e910 <__assert_fail@plt+0xd838>
   1becc:	ldr	r2, [sp, #48]	; 0x30
   1bed0:	subs	r0, r2, r0
   1bed4:	ldr	r2, [sp, #52]	; 0x34
   1bed8:	sbcs	r1, r2, r1
   1bedc:	bcc	1c104 <__assert_fail@plt+0xb02c>
   1bee0:	b	1c130 <__assert_fail@plt+0xb058>
   1bee4:	b	1bee8 <__assert_fail@plt+0xae10>
   1bee8:	ldr	r0, [pc, #1352]	; 1c438 <__assert_fail@plt+0xb360>
   1beec:	ldr	r1, [fp, #-12]
   1bef0:	cmp	r1, r0
   1bef4:	blt	1bf0c <__assert_fail@plt+0xae34>
   1bef8:	b	1bf20 <__assert_fail@plt+0xae48>
   1befc:	ldr	r0, [fp, #-12]
   1bf00:	movw	r1, #0
   1bf04:	cmp	r1, r0
   1bf08:	bge	1bf20 <__assert_fail@plt+0xae48>
   1bf0c:	mov	r0, #0
   1bf10:	mvn	r1, #0
   1bf14:	str	r1, [sp, #44]	; 0x2c
   1bf18:	str	r0, [sp, #40]	; 0x28
   1bf1c:	b	1bf54 <__assert_fail@plt+0xae7c>
   1bf20:	ldr	r0, [fp, #-12]
   1bf24:	rsb	r0, r0, #0
   1bf28:	asr	r3, r0, #31
   1bf2c:	mvn	r1, #0
   1bf30:	mvn	r2, #-2147483648	; 0x80000000
   1bf34:	str	r0, [sp, #36]	; 0x24
   1bf38:	mov	r0, r1
   1bf3c:	mov	r1, r2
   1bf40:	ldr	r2, [sp, #36]	; 0x24
   1bf44:	bl	1e910 <__assert_fail@plt+0xd838>
   1bf48:	str	r0, [sp, #44]	; 0x2c
   1bf4c:	str	r1, [sp, #40]	; 0x28
   1bf50:	b	1bf54 <__assert_fail@plt+0xae7c>
   1bf54:	ldr	r0, [sp, #40]	; 0x28
   1bf58:	ldr	r1, [sp, #44]	; 0x2c
   1bf5c:	ldr	r2, [fp, #-8]
   1bf60:	ldr	r3, [r2]
   1bf64:	ldr	r2, [r2, #4]
   1bf68:	mvn	r2, r2
   1bf6c:	mvn	r3, r3
   1bf70:	subs	r1, r3, r1
   1bf74:	sbcs	r0, r2, r0
   1bf78:	bcs	1c104 <__assert_fail@plt+0xb02c>
   1bf7c:	b	1c130 <__assert_fail@plt+0xb058>
   1bf80:	ldr	r0, [fp, #-12]
   1bf84:	cmn	r0, #1
   1bf88:	bne	1bfec <__assert_fail@plt+0xaf14>
   1bf8c:	b	1bfb0 <__assert_fail@plt+0xaed8>
   1bf90:	ldr	r0, [fp, #-8]
   1bf94:	ldr	r1, [r0]
   1bf98:	ldr	r0, [r0, #4]
   1bf9c:	eor	r0, r0, #-2147483648	; 0x80000000
   1bfa0:	orr	r0, r1, r0
   1bfa4:	cmp	r0, #0
   1bfa8:	bne	1c104 <__assert_fail@plt+0xb02c>
   1bfac:	b	1c130 <__assert_fail@plt+0xb058>
   1bfb0:	ldr	r0, [fp, #-8]
   1bfb4:	ldr	r1, [r0]
   1bfb8:	ldr	r0, [r0, #4]
   1bfbc:	orr	r0, r1, r0
   1bfc0:	cmp	r0, #0
   1bfc4:	beq	1c130 <__assert_fail@plt+0xb058>
   1bfc8:	b	1bfcc <__assert_fail@plt+0xaef4>
   1bfcc:	ldr	r0, [fp, #-8]
   1bfd0:	ldr	r1, [r0]
   1bfd4:	ldr	r0, [r0, #4]
   1bfd8:	subs	r1, r1, #1
   1bfdc:	sbc	r0, r0, #0
   1bfe0:	cmp	r0, #0
   1bfe4:	bmi	1c104 <__assert_fail@plt+0xb02c>
   1bfe8:	b	1c130 <__assert_fail@plt+0xb058>
   1bfec:	ldr	r0, [fp, #-12]
   1bff0:	asr	r3, r0, #31
   1bff4:	mov	r1, #0
   1bff8:	mov	r2, #-2147483648	; 0x80000000
   1bffc:	str	r0, [sp, #32]
   1c000:	mov	r0, r1
   1c004:	mov	r1, r2
   1c008:	ldr	r2, [sp, #32]
   1c00c:	bl	1e910 <__assert_fail@plt+0xd838>
   1c010:	ldr	r2, [fp, #-8]
   1c014:	ldr	r3, [r2]
   1c018:	ldr	r2, [r2, #4]
   1c01c:	subs	r0, r0, r3
   1c020:	sbcs	r1, r1, r2
   1c024:	bcc	1c104 <__assert_fail@plt+0xb02c>
   1c028:	b	1c130 <__assert_fail@plt+0xb058>
   1c02c:	ldr	r0, [fp, #-12]
   1c030:	cmp	r0, #0
   1c034:	bne	1c03c <__assert_fail@plt+0xaf64>
   1c038:	b	1c130 <__assert_fail@plt+0xb058>
   1c03c:	mov	r0, #1
   1c040:	cmp	r0, #0
   1c044:	bne	1c0c4 <__assert_fail@plt+0xafec>
   1c048:	b	1c04c <__assert_fail@plt+0xaf74>
   1c04c:	ldr	r0, [fp, #-8]
   1c050:	ldr	r1, [r0]
   1c054:	ldr	r0, [r0, #4]
   1c058:	and	r0, r1, r0
   1c05c:	cmn	r0, #1
   1c060:	bne	1c098 <__assert_fail@plt+0xafc0>
   1c064:	b	1c068 <__assert_fail@plt+0xaf90>
   1c068:	b	1c06c <__assert_fail@plt+0xaf94>
   1c06c:	ldr	r0, [fp, #-12]
   1c070:	mov	r1, #-2147483648	; 0x80000000
   1c074:	add	r1, r1, r0, asr #31
   1c078:	rsbs	r0, r0, #0
   1c07c:	rscs	r1, r1, #0
   1c080:	blt	1c104 <__assert_fail@plt+0xb02c>
   1c084:	b	1c130 <__assert_fail@plt+0xb058>
   1c088:	mov	r0, #0
   1c08c:	cmp	r0, #0
   1c090:	bne	1c104 <__assert_fail@plt+0xb02c>
   1c094:	b	1c130 <__assert_fail@plt+0xb058>
   1c098:	ldr	r0, [fp, #-8]
   1c09c:	ldr	r2, [r0]
   1c0a0:	ldr	r3, [r0, #4]
   1c0a4:	mov	r0, #0
   1c0a8:	mov	r1, #-2147483648	; 0x80000000
   1c0ac:	bl	1e9e4 <__assert_fail@plt+0xd90c>
   1c0b0:	ldr	r2, [fp, #-12]
   1c0b4:	subs	r0, r0, r2
   1c0b8:	sbcs	r1, r1, r2, asr #31
   1c0bc:	bcc	1c104 <__assert_fail@plt+0xb02c>
   1c0c0:	b	1c130 <__assert_fail@plt+0xb058>
   1c0c4:	ldr	r0, [fp, #-12]
   1c0c8:	asr	r3, r0, #31
   1c0cc:	mvn	r1, #0
   1c0d0:	mvn	r2, #-2147483648	; 0x80000000
   1c0d4:	str	r0, [sp, #28]
   1c0d8:	mov	r0, r1
   1c0dc:	mov	r1, r2
   1c0e0:	ldr	r2, [sp, #28]
   1c0e4:	bl	1e910 <__assert_fail@plt+0xd838>
   1c0e8:	ldr	r2, [fp, #-8]
   1c0ec:	ldr	r3, [r2]
   1c0f0:	ldr	r2, [r2, #4]
   1c0f4:	subs	r0, r0, r3
   1c0f8:	sbcs	r1, r1, r2
   1c0fc:	bcs	1c130 <__assert_fail@plt+0xb058>
   1c100:	b	1c104 <__assert_fail@plt+0xb02c>
   1c104:	ldr	r0, [fp, #-8]
   1c108:	ldr	r1, [r0]
   1c10c:	ldr	r0, [r0, #4]
   1c110:	ldr	r2, [fp, #-12]
   1c114:	asr	r3, r2, #31
   1c118:	umull	ip, lr, r1, r2
   1c11c:	mla	r1, r1, r3, lr
   1c120:	mla	r0, r0, r2, r1
   1c124:	str	ip, [fp, #-24]	; 0xffffffe8
   1c128:	str	r0, [fp, #-20]	; 0xffffffec
   1c12c:	b	1c3f4 <__assert_fail@plt+0xb31c>
   1c130:	ldr	r0, [fp, #-8]
   1c134:	ldr	r1, [r0]
   1c138:	ldr	r0, [r0, #4]
   1c13c:	ldr	r2, [fp, #-12]
   1c140:	asr	r3, r2, #31
   1c144:	umull	ip, lr, r1, r2
   1c148:	mla	r1, r1, r3, lr
   1c14c:	mla	r0, r0, r2, r1
   1c150:	str	ip, [fp, #-24]	; 0xffffffe8
   1c154:	str	r0, [fp, #-20]	; 0xffffffec
   1c158:	b	1c410 <__assert_fail@plt+0xb338>
   1c15c:	ldr	r0, [fp, #-12]
   1c160:	cmp	r0, #0
   1c164:	bge	1c2d8 <__assert_fail@plt+0xb200>
   1c168:	mov	r0, #1
   1c16c:	cmp	r0, #0
   1c170:	bne	1c258 <__assert_fail@plt+0xb180>
   1c174:	b	1c178 <__assert_fail@plt+0xb0a0>
   1c178:	b	1c1c0 <__assert_fail@plt+0xb0e8>
   1c17c:	ldr	r0, [fp, #-8]
   1c180:	ldr	r1, [r0]
   1c184:	ldr	r0, [r0, #4]
   1c188:	ldr	r2, [fp, #-12]
   1c18c:	asr	r3, r2, #31
   1c190:	mvn	ip, #0
   1c194:	str	r0, [sp, #24]
   1c198:	mov	r0, ip
   1c19c:	str	r1, [sp, #20]
   1c1a0:	mov	r1, ip
   1c1a4:	bl	1e9e4 <__assert_fail@plt+0xd90c>
   1c1a8:	ldr	r2, [sp, #20]
   1c1ac:	subs	r0, r2, r0
   1c1b0:	ldr	r2, [sp, #24]
   1c1b4:	sbcs	r1, r2, r1
   1c1b8:	bcc	1c39c <__assert_fail@plt+0xb2c4>
   1c1bc:	b	1c3c8 <__assert_fail@plt+0xb2f0>
   1c1c0:	b	1c1c4 <__assert_fail@plt+0xb0ec>
   1c1c4:	ldr	r0, [pc, #620]	; 1c438 <__assert_fail@plt+0xb360>
   1c1c8:	ldr	r1, [fp, #-12]
   1c1cc:	cmp	r1, r0
   1c1d0:	blt	1c1e8 <__assert_fail@plt+0xb110>
   1c1d4:	b	1c200 <__assert_fail@plt+0xb128>
   1c1d8:	ldr	r0, [fp, #-12]
   1c1dc:	movw	r1, #0
   1c1e0:	cmp	r1, r0
   1c1e4:	bge	1c200 <__assert_fail@plt+0xb128>
   1c1e8:	mov	r0, #1
   1c1ec:	mvn	r1, #0
   1c1f0:	str	r1, [sp, #16]
   1c1f4:	str	r0, [sp, #12]
   1c1f8:	b	1c22c <__assert_fail@plt+0xb154>
   1c1fc:			; <UNDEFINED> instruction: 0xffff8000
   1c200:	ldr	r0, [fp, #-12]
   1c204:	rsb	r0, r0, #0
   1c208:	asr	r3, r0, #31
   1c20c:	mvn	r1, #0
   1c210:	str	r0, [sp, #8]
   1c214:	mov	r0, r1
   1c218:	ldr	r2, [sp, #8]
   1c21c:	bl	1e9e4 <__assert_fail@plt+0xd90c>
   1c220:	str	r0, [sp, #16]
   1c224:	str	r1, [sp, #12]
   1c228:	b	1c22c <__assert_fail@plt+0xb154>
   1c22c:	ldr	r0, [sp, #12]
   1c230:	ldr	r1, [sp, #16]
   1c234:	ldr	r2, [fp, #-8]
   1c238:	ldr	r3, [r2]
   1c23c:	ldr	r2, [r2, #4]
   1c240:	mvn	r2, r2
   1c244:	mvn	r3, r3
   1c248:	subs	r1, r3, r1
   1c24c:	sbcs	r0, r2, r0
   1c250:	bcs	1c39c <__assert_fail@plt+0xb2c4>
   1c254:	b	1c3c8 <__assert_fail@plt+0xb2f0>
   1c258:	b	1c25c <__assert_fail@plt+0xb184>
   1c25c:	b	1c2bc <__assert_fail@plt+0xb1e4>
   1c260:	b	1c2bc <__assert_fail@plt+0xb1e4>
   1c264:	ldr	r0, [fp, #-12]
   1c268:	cmn	r0, #1
   1c26c:	bne	1c2bc <__assert_fail@plt+0xb1e4>
   1c270:	b	1c290 <__assert_fail@plt+0xb1b8>
   1c274:	ldr	r0, [fp, #-8]
   1c278:	ldr	r1, [r0]
   1c27c:	ldr	r0, [r0, #4]
   1c280:	orr	r0, r1, r0
   1c284:	cmp	r0, #0
   1c288:	bne	1c39c <__assert_fail@plt+0xb2c4>
   1c28c:	b	1c3c8 <__assert_fail@plt+0xb2f0>
   1c290:	ldr	r0, [fp, #-8]
   1c294:	ldr	r1, [r0]
   1c298:	ldr	r0, [r0, #4]
   1c29c:	orr	r0, r1, r0
   1c2a0:	cmp	r0, #0
   1c2a4:	beq	1c3c8 <__assert_fail@plt+0xb2f0>
   1c2a8:	b	1c2ac <__assert_fail@plt+0xb1d4>
   1c2ac:	mov	r0, #0
   1c2b0:	cmp	r0, #0
   1c2b4:	bne	1c39c <__assert_fail@plt+0xb2c4>
   1c2b8:	b	1c3c8 <__assert_fail@plt+0xb2f0>
   1c2bc:	ldr	r0, [fp, #-8]
   1c2c0:	ldr	r1, [r0]
   1c2c4:	ldr	r0, [r0, #4]
   1c2c8:	orr	r0, r1, r0
   1c2cc:	cmp	r0, #0
   1c2d0:	bne	1c39c <__assert_fail@plt+0xb2c4>
   1c2d4:	b	1c3c8 <__assert_fail@plt+0xb2f0>
   1c2d8:	ldr	r0, [fp, #-12]
   1c2dc:	cmp	r0, #0
   1c2e0:	bne	1c2e8 <__assert_fail@plt+0xb210>
   1c2e4:	b	1c3c8 <__assert_fail@plt+0xb2f0>
   1c2e8:	mov	r0, #1
   1c2ec:	cmp	r0, #0
   1c2f0:	bne	1c364 <__assert_fail@plt+0xb28c>
   1c2f4:	b	1c2f8 <__assert_fail@plt+0xb220>
   1c2f8:	b	1c300 <__assert_fail@plt+0xb228>
   1c2fc:	b	1c304 <__assert_fail@plt+0xb22c>
   1c300:	b	1c354 <__assert_fail@plt+0xb27c>
   1c304:	ldr	r0, [fp, #-8]
   1c308:	ldr	r1, [r0]
   1c30c:	ldr	r0, [r0, #4]
   1c310:	and	r0, r1, r0
   1c314:	cmn	r0, #1
   1c318:	bne	1c354 <__assert_fail@plt+0xb27c>
   1c31c:	b	1c320 <__assert_fail@plt+0xb248>
   1c320:	b	1c324 <__assert_fail@plt+0xb24c>
   1c324:	ldr	r0, [fp, #-12]
   1c328:	add	r0, r0, #0
   1c32c:	movw	r1, #0
   1c330:	cmp	r1, r0
   1c334:	blt	1c39c <__assert_fail@plt+0xb2c4>
   1c338:	b	1c3c8 <__assert_fail@plt+0xb2f0>
   1c33c:	ldr	r0, [fp, #-12]
   1c340:	sub	r0, r0, #1
   1c344:	mvn	r1, #0
   1c348:	cmp	r1, r0
   1c34c:	blt	1c39c <__assert_fail@plt+0xb2c4>
   1c350:	b	1c3c8 <__assert_fail@plt+0xb2f0>
   1c354:	ldr	r0, [fp, #-12]
   1c358:	cmp	r0, #0
   1c35c:	bne	1c39c <__assert_fail@plt+0xb2c4>
   1c360:	b	1c3c8 <__assert_fail@plt+0xb2f0>
   1c364:	ldr	r0, [fp, #-12]
   1c368:	asr	r3, r0, #31
   1c36c:	mvn	r1, #0
   1c370:	str	r0, [sp, #4]
   1c374:	mov	r0, r1
   1c378:	ldr	r2, [sp, #4]
   1c37c:	bl	1e9e4 <__assert_fail@plt+0xd90c>
   1c380:	ldr	r2, [fp, #-8]
   1c384:	ldr	r3, [r2]
   1c388:	ldr	r2, [r2, #4]
   1c38c:	subs	r0, r0, r3
   1c390:	sbcs	r1, r1, r2
   1c394:	bcs	1c3c8 <__assert_fail@plt+0xb2f0>
   1c398:	b	1c39c <__assert_fail@plt+0xb2c4>
   1c39c:	ldr	r0, [fp, #-8]
   1c3a0:	ldr	r1, [r0]
   1c3a4:	ldr	r0, [r0, #4]
   1c3a8:	ldr	r2, [fp, #-12]
   1c3ac:	asr	r3, r2, #31
   1c3b0:	umull	ip, lr, r1, r2
   1c3b4:	mla	r1, r1, r3, lr
   1c3b8:	mla	r0, r0, r2, r1
   1c3bc:	str	ip, [fp, #-24]	; 0xffffffe8
   1c3c0:	str	r0, [fp, #-20]	; 0xffffffec
   1c3c4:	b	1c3f4 <__assert_fail@plt+0xb31c>
   1c3c8:	ldr	r0, [fp, #-8]
   1c3cc:	ldr	r1, [r0]
   1c3d0:	ldr	r0, [r0, #4]
   1c3d4:	ldr	r2, [fp, #-12]
   1c3d8:	asr	r3, r2, #31
   1c3dc:	umull	ip, lr, r1, r2
   1c3e0:	mla	r1, r1, r3, lr
   1c3e4:	mla	r0, r0, r2, r1
   1c3e8:	str	ip, [fp, #-24]	; 0xffffffe8
   1c3ec:	str	r0, [fp, #-20]	; 0xffffffec
   1c3f0:	b	1c410 <__assert_fail@plt+0xb338>
   1c3f4:	ldr	r0, [fp, #-8]
   1c3f8:	mvn	r1, #0
   1c3fc:	str	r1, [r0, #4]
   1c400:	str	r1, [r0]
   1c404:	movw	r0, #1
   1c408:	str	r0, [fp, #-4]
   1c40c:	b	1c42c <__assert_fail@plt+0xb354>
   1c410:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c414:	ldr	r1, [fp, #-20]	; 0xffffffec
   1c418:	ldr	r2, [fp, #-8]
   1c41c:	str	r1, [r2, #4]
   1c420:	str	r0, [r2]
   1c424:	movw	r0, #0
   1c428:	str	r0, [fp, #-4]
   1c42c:	ldr	r0, [fp, #-4]
   1c430:	mov	sp, fp
   1c434:	pop	{fp, pc}
   1c438:	andhi	r0, r0, r1
   1c43c:	svcvc	0x00ffffff
   1c440:	push	{fp, lr}
   1c444:	mov	fp, sp
   1c448:	sub	sp, sp, #16
   1c44c:	str	r0, [fp, #-4]
   1c450:	str	r1, [sp, #8]
   1c454:	str	r2, [sp, #4]
   1c458:	movw	r0, #0
   1c45c:	str	r0, [sp]
   1c460:	ldr	r0, [sp, #4]
   1c464:	mvn	r1, #0
   1c468:	add	r1, r0, r1
   1c46c:	str	r1, [sp, #4]
   1c470:	cmp	r0, #0
   1c474:	beq	1c494 <__assert_fail@plt+0xb3bc>
   1c478:	ldr	r0, [fp, #-4]
   1c47c:	ldr	r1, [sp, #8]
   1c480:	bl	1abc8 <__assert_fail@plt+0x9af0>
   1c484:	ldr	r1, [sp]
   1c488:	orr	r0, r1, r0
   1c48c:	str	r0, [sp]
   1c490:	b	1c460 <__assert_fail@plt+0xb388>
   1c494:	ldr	r0, [sp]
   1c498:	mov	sp, fp
   1c49c:	pop	{fp, pc}
   1c4a0:	push	{fp, lr}
   1c4a4:	mov	fp, sp
   1c4a8:	sub	sp, sp, #16
   1c4ac:	str	r0, [sp, #8]
   1c4b0:	str	r1, [sp, #4]
   1c4b4:	ldr	r0, [sp, #8]
   1c4b8:	cmp	r0, #0
   1c4bc:	beq	1c4cc <__assert_fail@plt+0xb3f4>
   1c4c0:	ldr	r0, [sp, #4]
   1c4c4:	cmp	r0, #0
   1c4c8:	bne	1c4d8 <__assert_fail@plt+0xb400>
   1c4cc:	movw	r0, #1
   1c4d0:	str	r0, [sp, #4]
   1c4d4:	str	r0, [sp, #8]
   1c4d8:	ldr	r0, [sp, #4]
   1c4dc:	cmp	r0, #0
   1c4e0:	beq	1c514 <__assert_fail@plt+0xb43c>
   1c4e4:	ldr	r0, [pc, #76]	; 1c538 <__assert_fail@plt+0xb460>
   1c4e8:	ldr	r1, [sp, #4]
   1c4ec:	udiv	r0, r0, r1
   1c4f0:	ldr	r1, [sp, #8]
   1c4f4:	cmp	r0, r1
   1c4f8:	bcs	1c514 <__assert_fail@plt+0xb43c>
   1c4fc:	bl	1100c <__errno_location@plt>
   1c500:	movw	r1, #12
   1c504:	str	r1, [r0]
   1c508:	movw	r0, #0
   1c50c:	str	r0, [fp, #-4]
   1c510:	b	1c52c <__assert_fail@plt+0xb454>
   1c514:	ldr	r0, [sp, #8]
   1c518:	ldr	r1, [sp, #4]
   1c51c:	bl	10e50 <calloc@plt>
   1c520:	str	r0, [sp]
   1c524:	ldr	r0, [sp]
   1c528:	str	r0, [fp, #-4]
   1c52c:	ldr	r0, [fp, #-4]
   1c530:	mov	sp, fp
   1c534:	pop	{fp, pc}
   1c538:	svcvc	0x00ffffff
   1c53c:	push	{fp, lr}
   1c540:	mov	fp, sp
   1c544:	sub	sp, sp, #16
   1c548:	str	r0, [sp, #8]
   1c54c:	ldr	r0, [sp, #8]
   1c550:	cmp	r0, #0
   1c554:	bne	1c560 <__assert_fail@plt+0xb488>
   1c558:	movw	r0, #1
   1c55c:	str	r0, [sp, #8]
   1c560:	ldr	r0, [pc, #64]	; 1c5a8 <__assert_fail@plt+0xb4d0>
   1c564:	ldr	r1, [sp, #8]
   1c568:	cmp	r0, r1
   1c56c:	bcs	1c588 <__assert_fail@plt+0xb4b0>
   1c570:	bl	1100c <__errno_location@plt>
   1c574:	movw	r1, #12
   1c578:	str	r1, [r0]
   1c57c:	movw	r0, #0
   1c580:	str	r0, [fp, #-4]
   1c584:	b	1c59c <__assert_fail@plt+0xb4c4>
   1c588:	ldr	r0, [sp, #8]
   1c58c:	bl	10f7c <malloc@plt>
   1c590:	str	r0, [sp, #4]
   1c594:	ldr	r0, [sp, #4]
   1c598:	str	r0, [fp, #-4]
   1c59c:	ldr	r0, [fp, #-4]
   1c5a0:	mov	sp, fp
   1c5a4:	pop	{fp, pc}
   1c5a8:	svcvc	0x00ffffff
   1c5ac:	push	{fp, lr}
   1c5b0:	mov	fp, sp
   1c5b4:	sub	sp, sp, #16
   1c5b8:	str	r0, [sp, #8]
   1c5bc:	str	r1, [sp, #4]
   1c5c0:	ldr	r0, [sp, #8]
   1c5c4:	movw	r1, #0
   1c5c8:	cmp	r0, r1
   1c5cc:	bne	1c5e0 <__assert_fail@plt+0xb508>
   1c5d0:	ldr	r0, [sp, #4]
   1c5d4:	bl	1c53c <__assert_fail@plt+0xb464>
   1c5d8:	str	r0, [fp, #-4]
   1c5dc:	b	1c640 <__assert_fail@plt+0xb568>
   1c5e0:	ldr	r0, [sp, #4]
   1c5e4:	cmp	r0, #0
   1c5e8:	bne	1c600 <__assert_fail@plt+0xb528>
   1c5ec:	ldr	r0, [sp, #8]
   1c5f0:	bl	1409c <__assert_fail@plt+0x2fc4>
   1c5f4:	movw	r0, #0
   1c5f8:	str	r0, [fp, #-4]
   1c5fc:	b	1c640 <__assert_fail@plt+0xb568>
   1c600:	ldr	r0, [pc, #68]	; 1c64c <__assert_fail@plt+0xb574>
   1c604:	ldr	r1, [sp, #4]
   1c608:	cmp	r0, r1
   1c60c:	bcs	1c628 <__assert_fail@plt+0xb550>
   1c610:	bl	1100c <__errno_location@plt>
   1c614:	movw	r1, #12
   1c618:	str	r1, [r0]
   1c61c:	movw	r0, #0
   1c620:	str	r0, [fp, #-4]
   1c624:	b	1c640 <__assert_fail@plt+0xb568>
   1c628:	ldr	r0, [sp, #8]
   1c62c:	ldr	r1, [sp, #4]
   1c630:	bl	10eec <realloc@plt>
   1c634:	str	r0, [sp]
   1c638:	ldr	r0, [sp]
   1c63c:	str	r0, [fp, #-4]
   1c640:	ldr	r0, [fp, #-4]
   1c644:	mov	sp, fp
   1c648:	pop	{fp, pc}
   1c64c:	svcvc	0x00ffffff
   1c650:	sub	sp, sp, #8
   1c654:	str	r0, [sp, #4]
   1c658:	str	r1, [sp]
   1c65c:	movw	r0, #0
   1c660:	add	sp, sp, #8
   1c664:	bx	lr
   1c668:	push	{fp, lr}
   1c66c:	mov	fp, sp
   1c670:	sub	sp, sp, #8
   1c674:	str	r0, [sp, #4]
   1c678:	str	r1, [sp]
   1c67c:	ldr	r0, [sp, #4]
   1c680:	ldr	r1, [sp]
   1c684:	bl	1c650 <__assert_fail@plt+0xb578>
   1c688:	mov	sp, fp
   1c68c:	pop	{fp, pc}
   1c690:	push	{fp, lr}
   1c694:	mov	fp, sp
   1c698:	sub	sp, sp, #24
   1c69c:	str	r0, [fp, #-8]
   1c6a0:	str	r1, [sp, #12]
   1c6a4:	ldr	r0, [fp, #-8]
   1c6a8:	str	r0, [sp, #8]
   1c6ac:	ldr	r0, [sp, #12]
   1c6b0:	str	r0, [sp, #4]
   1c6b4:	ldr	r0, [sp, #8]
   1c6b8:	ldr	r1, [sp, #4]
   1c6bc:	cmp	r0, r1
   1c6c0:	bne	1c6d0 <__assert_fail@plt+0xb5f8>
   1c6c4:	movw	r0, #0
   1c6c8:	str	r0, [fp, #-4]
   1c6cc:	b	1c73c <__assert_fail@plt+0xb664>
   1c6d0:	b	1c6d4 <__assert_fail@plt+0xb5fc>
   1c6d4:	ldr	r0, [sp, #8]
   1c6d8:	ldrb	r0, [r0]
   1c6dc:	bl	1e690 <__assert_fail@plt+0xd5b8>
   1c6e0:	strb	r0, [sp, #3]
   1c6e4:	ldr	r0, [sp, #4]
   1c6e8:	ldrb	r0, [r0]
   1c6ec:	bl	1e690 <__assert_fail@plt+0xd5b8>
   1c6f0:	strb	r0, [sp, #2]
   1c6f4:	ldrb	r0, [sp, #3]
   1c6f8:	cmp	r0, #0
   1c6fc:	bne	1c704 <__assert_fail@plt+0xb62c>
   1c700:	b	1c72c <__assert_fail@plt+0xb654>
   1c704:	ldr	r0, [sp, #8]
   1c708:	add	r0, r0, #1
   1c70c:	str	r0, [sp, #8]
   1c710:	ldr	r0, [sp, #4]
   1c714:	add	r0, r0, #1
   1c718:	str	r0, [sp, #4]
   1c71c:	ldrb	r0, [sp, #3]
   1c720:	ldrb	r1, [sp, #2]
   1c724:	cmp	r0, r1
   1c728:	beq	1c6d4 <__assert_fail@plt+0xb5fc>
   1c72c:	ldrb	r0, [sp, #3]
   1c730:	ldrb	r1, [sp, #2]
   1c734:	sub	r0, r0, r1
   1c738:	str	r0, [fp, #-4]
   1c73c:	ldr	r0, [fp, #-4]
   1c740:	mov	sp, fp
   1c744:	pop	{fp, pc}
   1c748:	push	{fp, lr}
   1c74c:	mov	fp, sp
   1c750:	sub	sp, sp, #16
   1c754:	str	r0, [sp, #8]
   1c758:	ldr	r0, [sp, #8]
   1c75c:	bl	10f40 <__fpending@plt>
   1c760:	cmp	r0, #0
   1c764:	movw	r0, #0
   1c768:	movne	r0, #1
   1c76c:	and	r0, r0, #1
   1c770:	strb	r0, [sp, #7]
   1c774:	ldr	r0, [sp, #8]
   1c778:	bl	10f4c <ferror_unlocked@plt>
   1c77c:	cmp	r0, #0
   1c780:	movw	r0, #0
   1c784:	movne	r0, #1
   1c788:	and	r0, r0, #1
   1c78c:	strb	r0, [sp, #6]
   1c790:	ldr	r0, [sp, #8]
   1c794:	bl	1c818 <__assert_fail@plt+0xb740>
   1c798:	cmp	r0, #0
   1c79c:	movw	r0, #0
   1c7a0:	movne	r0, #1
   1c7a4:	and	r0, r0, #1
   1c7a8:	strb	r0, [sp, #5]
   1c7ac:	ldrb	r0, [sp, #6]
   1c7b0:	tst	r0, #1
   1c7b4:	bne	1c7e0 <__assert_fail@plt+0xb708>
   1c7b8:	ldrb	r0, [sp, #5]
   1c7bc:	tst	r0, #1
   1c7c0:	beq	1c804 <__assert_fail@plt+0xb72c>
   1c7c4:	ldrb	r0, [sp, #7]
   1c7c8:	tst	r0, #1
   1c7cc:	bne	1c7e0 <__assert_fail@plt+0xb708>
   1c7d0:	bl	1100c <__errno_location@plt>
   1c7d4:	ldr	r0, [r0]
   1c7d8:	cmp	r0, #9
   1c7dc:	beq	1c804 <__assert_fail@plt+0xb72c>
   1c7e0:	ldrb	r0, [sp, #5]
   1c7e4:	tst	r0, #1
   1c7e8:	bne	1c7f8 <__assert_fail@plt+0xb720>
   1c7ec:	bl	1100c <__errno_location@plt>
   1c7f0:	movw	r1, #0
   1c7f4:	str	r1, [r0]
   1c7f8:	mvn	r0, #0
   1c7fc:	str	r0, [fp, #-4]
   1c800:	b	1c80c <__assert_fail@plt+0xb734>
   1c804:	movw	r0, #0
   1c808:	str	r0, [fp, #-4]
   1c80c:	ldr	r0, [fp, #-4]
   1c810:	mov	sp, fp
   1c814:	pop	{fp, pc}
   1c818:	push	{fp, lr}
   1c81c:	mov	fp, sp
   1c820:	sub	sp, sp, #32
   1c824:	str	r0, [fp, #-8]
   1c828:	movw	r0, #0
   1c82c:	str	r0, [fp, #-12]
   1c830:	str	r0, [sp, #12]
   1c834:	ldr	r0, [fp, #-8]
   1c838:	bl	11030 <fileno@plt>
   1c83c:	str	r0, [sp, #16]
   1c840:	ldr	r0, [sp, #16]
   1c844:	cmp	r0, #0
   1c848:	bge	1c85c <__assert_fail@plt+0xb784>
   1c84c:	ldr	r0, [fp, #-8]
   1c850:	bl	11054 <fclose@plt>
   1c854:	str	r0, [fp, #-4]
   1c858:	b	1c8f8 <__assert_fail@plt+0xb820>
   1c85c:	ldr	r0, [fp, #-8]
   1c860:	bl	10f94 <__freading@plt>
   1c864:	cmp	r0, #0
   1c868:	beq	1c8a0 <__assert_fail@plt+0xb7c8>
   1c86c:	ldr	r0, [fp, #-8]
   1c870:	bl	11030 <fileno@plt>
   1c874:	mov	r1, sp
   1c878:	mov	r2, #1
   1c87c:	str	r2, [r1]
   1c880:	mov	r1, #0
   1c884:	mov	r2, r1
   1c888:	mov	r3, r1
   1c88c:	bl	10f28 <lseek64@plt>
   1c890:	and	r0, r0, r1
   1c894:	cmn	r0, #1
   1c898:	beq	1c8bc <__assert_fail@plt+0xb7e4>
   1c89c:	b	1c8a0 <__assert_fail@plt+0xb7c8>
   1c8a0:	ldr	r0, [fp, #-8]
   1c8a4:	bl	1c904 <__assert_fail@plt+0xb82c>
   1c8a8:	cmp	r0, #0
   1c8ac:	beq	1c8bc <__assert_fail@plt+0xb7e4>
   1c8b0:	bl	1100c <__errno_location@plt>
   1c8b4:	ldr	r0, [r0]
   1c8b8:	str	r0, [fp, #-12]
   1c8bc:	ldr	r0, [fp, #-8]
   1c8c0:	bl	11054 <fclose@plt>
   1c8c4:	str	r0, [sp, #12]
   1c8c8:	ldr	r0, [fp, #-12]
   1c8cc:	cmp	r0, #0
   1c8d0:	beq	1c8f0 <__assert_fail@plt+0xb818>
   1c8d4:	ldr	r0, [fp, #-12]
   1c8d8:	str	r0, [sp, #8]
   1c8dc:	bl	1100c <__errno_location@plt>
   1c8e0:	ldr	r1, [sp, #8]
   1c8e4:	str	r1, [r0]
   1c8e8:	mvn	r0, #0
   1c8ec:	str	r0, [sp, #12]
   1c8f0:	ldr	r0, [sp, #12]
   1c8f4:	str	r0, [fp, #-4]
   1c8f8:	ldr	r0, [fp, #-4]
   1c8fc:	mov	sp, fp
   1c900:	pop	{fp, pc}
   1c904:	push	{fp, lr}
   1c908:	mov	fp, sp
   1c90c:	sub	sp, sp, #8
   1c910:	str	r0, [sp]
   1c914:	ldr	r0, [sp]
   1c918:	movw	r1, #0
   1c91c:	cmp	r0, r1
   1c920:	beq	1c934 <__assert_fail@plt+0xb85c>
   1c924:	ldr	r0, [sp]
   1c928:	bl	10f94 <__freading@plt>
   1c92c:	cmp	r0, #0
   1c930:	bne	1c944 <__assert_fail@plt+0xb86c>
   1c934:	ldr	r0, [sp]
   1c938:	bl	10e98 <fflush@plt>
   1c93c:	str	r0, [sp, #4]
   1c940:	b	1c958 <__assert_fail@plt+0xb880>
   1c944:	ldr	r0, [sp]
   1c948:	bl	1c964 <__assert_fail@plt+0xb88c>
   1c94c:	ldr	r0, [sp]
   1c950:	bl	10e98 <fflush@plt>
   1c954:	str	r0, [sp, #4]
   1c958:	ldr	r0, [sp, #4]
   1c95c:	mov	sp, fp
   1c960:	pop	{fp, pc}
   1c964:	push	{fp, lr}
   1c968:	mov	fp, sp
   1c96c:	sub	sp, sp, #8
   1c970:	str	r0, [sp, #4]
   1c974:	ldr	r0, [sp, #4]
   1c978:	ldr	r0, [r0]
   1c97c:	and	r0, r0, #256	; 0x100
   1c980:	cmp	r0, #0
   1c984:	beq	1c9a8 <__assert_fail@plt+0xb8d0>
   1c988:	ldr	r0, [sp, #4]
   1c98c:	mov	r1, sp
   1c990:	mov	r2, #1
   1c994:	str	r2, [r1]
   1c998:	mov	r1, #0
   1c99c:	mov	r2, r1
   1c9a0:	mov	r3, r1
   1c9a4:	bl	1c9b0 <__assert_fail@plt+0xb8d8>
   1c9a8:	mov	sp, fp
   1c9ac:	pop	{fp, pc}
   1c9b0:	push	{fp, lr}
   1c9b4:	mov	fp, sp
   1c9b8:	sub	sp, sp, #32
   1c9bc:	ldr	r1, [fp, #8]
   1c9c0:	str	r0, [fp, #-8]
   1c9c4:	str	r3, [sp, #20]
   1c9c8:	str	r2, [sp, #16]
   1c9cc:	ldr	r0, [fp, #-8]
   1c9d0:	ldr	r0, [r0, #8]
   1c9d4:	ldr	r2, [fp, #-8]
   1c9d8:	ldr	r2, [r2, #4]
   1c9dc:	cmp	r0, r2
   1c9e0:	bne	1ca8c <__assert_fail@plt+0xb9b4>
   1c9e4:	ldr	r0, [fp, #-8]
   1c9e8:	ldr	r0, [r0, #20]
   1c9ec:	ldr	r1, [fp, #-8]
   1c9f0:	ldr	r1, [r1, #16]
   1c9f4:	cmp	r0, r1
   1c9f8:	bne	1ca8c <__assert_fail@plt+0xb9b4>
   1c9fc:	ldr	r0, [fp, #-8]
   1ca00:	ldr	r0, [r0, #36]	; 0x24
   1ca04:	movw	r1, #0
   1ca08:	cmp	r0, r1
   1ca0c:	bne	1ca8c <__assert_fail@plt+0xb9b4>
   1ca10:	ldr	r0, [fp, #-8]
   1ca14:	bl	11030 <fileno@plt>
   1ca18:	ldr	r2, [sp, #16]
   1ca1c:	ldr	r3, [sp, #20]
   1ca20:	ldr	r1, [fp, #8]
   1ca24:	mov	ip, sp
   1ca28:	str	r1, [ip]
   1ca2c:	bl	10f28 <lseek64@plt>
   1ca30:	str	r1, [sp, #12]
   1ca34:	str	r0, [sp, #8]
   1ca38:	ldr	r0, [sp, #8]
   1ca3c:	ldr	r1, [sp, #12]
   1ca40:	and	r0, r0, r1
   1ca44:	cmn	r0, #1
   1ca48:	bne	1ca5c <__assert_fail@plt+0xb984>
   1ca4c:	b	1ca50 <__assert_fail@plt+0xb978>
   1ca50:	mvn	r0, #0
   1ca54:	str	r0, [fp, #-4]
   1ca58:	b	1caac <__assert_fail@plt+0xb9d4>
   1ca5c:	ldr	r0, [fp, #-8]
   1ca60:	ldr	r1, [r0]
   1ca64:	bic	r1, r1, #16
   1ca68:	str	r1, [r0]
   1ca6c:	ldr	r0, [sp, #8]
   1ca70:	ldr	r1, [sp, #12]
   1ca74:	ldr	r2, [fp, #-8]
   1ca78:	str	r1, [r2, #84]	; 0x54
   1ca7c:	str	r0, [r2, #80]	; 0x50
   1ca80:	movw	r0, #0
   1ca84:	str	r0, [fp, #-4]
   1ca88:	b	1caac <__assert_fail@plt+0xb9d4>
   1ca8c:	ldr	r0, [fp, #-8]
   1ca90:	ldr	r2, [sp, #16]
   1ca94:	ldr	r3, [sp, #20]
   1ca98:	ldr	r1, [fp, #8]
   1ca9c:	mov	ip, sp
   1caa0:	str	r1, [ip]
   1caa4:	bl	11060 <fseeko64@plt>
   1caa8:	str	r0, [fp, #-4]
   1caac:	ldr	r0, [fp, #-4]
   1cab0:	mov	sp, fp
   1cab4:	pop	{fp, pc}
   1cab8:	push	{fp, lr}
   1cabc:	mov	fp, sp
   1cac0:	bl	1100c <__errno_location@plt>
   1cac4:	movw	r1, #12
   1cac8:	str	r1, [r0]
   1cacc:	movw	r0, #0
   1cad0:	pop	{fp, pc}
   1cad4:	push	{fp, lr}
   1cad8:	mov	fp, sp
   1cadc:	sub	sp, sp, #8
   1cae0:	str	r0, [sp, #4]
   1cae4:	ldr	r0, [sp, #4]
   1cae8:	cmn	r0, #1
   1caec:	bhi	1cb00 <__assert_fail@plt+0xba28>
   1caf0:	ldr	r0, [sp, #4]
   1caf4:	bl	1c53c <__assert_fail@plt+0xb464>
   1caf8:	str	r0, [sp]
   1cafc:	b	1cb08 <__assert_fail@plt+0xba30>
   1cb00:	bl	1cab8 <__assert_fail@plt+0xb9e0>
   1cb04:	str	r0, [sp]
   1cb08:	ldr	r0, [sp]
   1cb0c:	mov	sp, fp
   1cb10:	pop	{fp, pc}
   1cb14:	push	{fp, lr}
   1cb18:	mov	fp, sp
   1cb1c:	sub	sp, sp, #16
   1cb20:	str	r0, [fp, #-4]
   1cb24:	str	r1, [sp, #8]
   1cb28:	ldr	r0, [sp, #8]
   1cb2c:	cmn	r0, #1
   1cb30:	bhi	1cb68 <__assert_fail@plt+0xba90>
   1cb34:	ldr	r0, [fp, #-4]
   1cb38:	ldr	r1, [sp, #8]
   1cb3c:	ldr	r2, [sp, #8]
   1cb40:	cmp	r2, #0
   1cb44:	movw	r2, #0
   1cb48:	movne	r2, #1
   1cb4c:	mvn	r3, #0
   1cb50:	eor	r2, r2, r3
   1cb54:	and	r2, r2, #1
   1cb58:	orr	r1, r1, r2
   1cb5c:	bl	1c5ac <__assert_fail@plt+0xb4d4>
   1cb60:	str	r0, [sp, #4]
   1cb64:	b	1cb70 <__assert_fail@plt+0xba98>
   1cb68:	bl	1cab8 <__assert_fail@plt+0xb9e0>
   1cb6c:	str	r0, [sp, #4]
   1cb70:	ldr	r0, [sp, #4]
   1cb74:	mov	sp, fp
   1cb78:	pop	{fp, pc}
   1cb7c:	push	{fp, lr}
   1cb80:	mov	fp, sp
   1cb84:	sub	sp, sp, #16
   1cb88:	str	r0, [sp, #8]
   1cb8c:	str	r1, [sp, #4]
   1cb90:	ldr	r0, [sp, #8]
   1cb94:	mvn	r1, #0
   1cb98:	cmp	r1, r0
   1cb9c:	bcs	1cbc0 <__assert_fail@plt+0xbae8>
   1cba0:	ldr	r0, [sp, #4]
   1cba4:	cmp	r0, #0
   1cba8:	beq	1cbb8 <__assert_fail@plt+0xbae0>
   1cbac:	bl	1cab8 <__assert_fail@plt+0xb9e0>
   1cbb0:	str	r0, [fp, #-4]
   1cbb4:	b	1cc00 <__assert_fail@plt+0xbb28>
   1cbb8:	movw	r0, #0
   1cbbc:	str	r0, [sp, #8]
   1cbc0:	ldr	r0, [sp, #4]
   1cbc4:	mvn	r1, #0
   1cbc8:	cmp	r1, r0
   1cbcc:	bcs	1cbf0 <__assert_fail@plt+0xbb18>
   1cbd0:	ldr	r0, [sp, #8]
   1cbd4:	cmp	r0, #0
   1cbd8:	beq	1cbe8 <__assert_fail@plt+0xbb10>
   1cbdc:	bl	1cab8 <__assert_fail@plt+0xb9e0>
   1cbe0:	str	r0, [fp, #-4]
   1cbe4:	b	1cc00 <__assert_fail@plt+0xbb28>
   1cbe8:	movw	r0, #0
   1cbec:	str	r0, [sp, #4]
   1cbf0:	ldr	r0, [sp, #8]
   1cbf4:	ldr	r1, [sp, #4]
   1cbf8:	bl	1c4a0 <__assert_fail@plt+0xb3c8>
   1cbfc:	str	r0, [fp, #-4]
   1cc00:	ldr	r0, [fp, #-4]
   1cc04:	mov	sp, fp
   1cc08:	pop	{fp, pc}
   1cc0c:	push	{fp, lr}
   1cc10:	mov	fp, sp
   1cc14:	sub	sp, sp, #16
   1cc18:	str	r0, [fp, #-4]
   1cc1c:	str	r1, [sp, #8]
   1cc20:	str	r2, [sp, #4]
   1cc24:	ldr	r0, [sp, #8]
   1cc28:	cmp	r0, #0
   1cc2c:	beq	1cc3c <__assert_fail@plt+0xbb64>
   1cc30:	ldr	r0, [sp, #4]
   1cc34:	cmp	r0, #0
   1cc38:	bne	1cc48 <__assert_fail@plt+0xbb70>
   1cc3c:	movw	r0, #1
   1cc40:	str	r0, [sp, #4]
   1cc44:	str	r0, [sp, #8]
   1cc48:	ldr	r0, [sp, #8]
   1cc4c:	cmn	r0, #1
   1cc50:	bhi	1cc78 <__assert_fail@plt+0xbba0>
   1cc54:	ldr	r0, [sp, #4]
   1cc58:	cmn	r0, #1
   1cc5c:	bhi	1cc78 <__assert_fail@plt+0xbba0>
   1cc60:	ldr	r0, [fp, #-4]
   1cc64:	ldr	r1, [sp, #8]
   1cc68:	ldr	r2, [sp, #4]
   1cc6c:	bl	1cd98 <__assert_fail@plt+0xbcc0>
   1cc70:	str	r0, [sp]
   1cc74:	b	1cc80 <__assert_fail@plt+0xbba8>
   1cc78:	bl	1cab8 <__assert_fail@plt+0xb9e0>
   1cc7c:	str	r0, [sp]
   1cc80:	ldr	r0, [sp]
   1cc84:	mov	sp, fp
   1cc88:	pop	{fp, pc}
   1cc8c:	push	{fp, lr}
   1cc90:	mov	fp, sp
   1cc94:	sub	sp, sp, #8
   1cc98:	movw	r0, #14
   1cc9c:	bl	11084 <nl_langinfo@plt>
   1cca0:	str	r0, [sp, #4]
   1cca4:	ldr	r0, [sp, #4]
   1cca8:	movw	r1, #0
   1ccac:	cmp	r0, r1
   1ccb0:	bne	1ccc0 <__assert_fail@plt+0xbbe8>
   1ccb4:	movw	r0, #62101	; 0xf295
   1ccb8:	movt	r0, #1
   1ccbc:	str	r0, [sp, #4]
   1ccc0:	ldr	r0, [sp, #4]
   1ccc4:	ldrb	r0, [r0]
   1ccc8:	cmp	r0, #0
   1cccc:	bne	1ccdc <__assert_fail@plt+0xbc04>
   1ccd0:	movw	r0, #63930	; 0xf9ba
   1ccd4:	movt	r0, #1
   1ccd8:	str	r0, [sp, #4]
   1ccdc:	ldr	r0, [sp, #4]
   1cce0:	mov	sp, fp
   1cce4:	pop	{fp, pc}
   1cce8:	push	{fp, lr}
   1ccec:	mov	fp, sp
   1ccf0:	sub	sp, sp, #32
   1ccf4:	str	r0, [fp, #-8]
   1ccf8:	str	r1, [fp, #-12]
   1ccfc:	str	r2, [sp, #16]
   1cd00:	str	r3, [sp, #12]
   1cd04:	ldr	r0, [fp, #-8]
   1cd08:	movw	r1, #0
   1cd0c:	cmp	r0, r1
   1cd10:	bne	1cd1c <__assert_fail@plt+0xbc44>
   1cd14:	add	r0, sp, #4
   1cd18:	str	r0, [fp, #-8]
   1cd1c:	ldr	r0, [fp, #-8]
   1cd20:	ldr	r1, [fp, #-12]
   1cd24:	ldr	r2, [sp, #16]
   1cd28:	ldr	r3, [sp, #12]
   1cd2c:	bl	10f58 <mbrtowc@plt>
   1cd30:	str	r0, [sp, #8]
   1cd34:	ldr	r0, [sp, #8]
   1cd38:	mvn	r1, #1
   1cd3c:	cmp	r1, r0
   1cd40:	bhi	1cd84 <__assert_fail@plt+0xbcac>
   1cd44:	ldr	r0, [sp, #16]
   1cd48:	cmp	r0, #0
   1cd4c:	beq	1cd84 <__assert_fail@plt+0xbcac>
   1cd50:	movw	r0, #0
   1cd54:	bl	1e718 <__assert_fail@plt+0xd640>
   1cd58:	tst	r0, #1
   1cd5c:	bne	1cd84 <__assert_fail@plt+0xbcac>
   1cd60:	ldr	r0, [fp, #-12]
   1cd64:	ldrb	r0, [r0]
   1cd68:	strb	r0, [sp, #3]
   1cd6c:	ldrb	r0, [sp, #3]
   1cd70:	ldr	r1, [fp, #-8]
   1cd74:	str	r0, [r1]
   1cd78:	movw	r0, #1
   1cd7c:	str	r0, [fp, #-4]
   1cd80:	b	1cd8c <__assert_fail@plt+0xbcb4>
   1cd84:	ldr	r0, [sp, #8]
   1cd88:	str	r0, [fp, #-4]
   1cd8c:	ldr	r0, [fp, #-4]
   1cd90:	mov	sp, fp
   1cd94:	pop	{fp, pc}
   1cd98:	push	{fp, lr}
   1cd9c:	mov	fp, sp
   1cda0:	sub	sp, sp, #96	; 0x60
   1cda4:	str	r0, [fp, #-8]
   1cda8:	str	r1, [fp, #-12]
   1cdac:	str	r2, [fp, #-16]
   1cdb0:	b	1d168 <__assert_fail@plt+0xc090>
   1cdb4:	b	1cf88 <__assert_fail@plt+0xbeb0>
   1cdb8:	ldr	r0, [fp, #-16]
   1cdbc:	cmp	r0, #0
   1cdc0:	bcs	1cec4 <__assert_fail@plt+0xbdec>
   1cdc4:	ldr	r0, [fp, #-12]
   1cdc8:	cmp	r0, #0
   1cdcc:	bcs	1ce54 <__assert_fail@plt+0xbd7c>
   1cdd0:	b	1cdf0 <__assert_fail@plt+0xbd18>
   1cdd4:	ldr	r0, [fp, #-12]
   1cdd8:	ldr	r1, [fp, #-16]
   1cddc:	movw	r2, #127	; 0x7f
   1cde0:	udiv	r1, r2, r1
   1cde4:	cmp	r0, r1
   1cde8:	bcc	1cf58 <__assert_fail@plt+0xbe80>
   1cdec:	b	1cf70 <__assert_fail@plt+0xbe98>
   1cdf0:	b	1ce04 <__assert_fail@plt+0xbd2c>
   1cdf4:	ldr	r0, [fp, #-16]
   1cdf8:	cmp	r0, #1
   1cdfc:	bcc	1ce14 <__assert_fail@plt+0xbd3c>
   1ce00:	b	1ce20 <__assert_fail@plt+0xbd48>
   1ce04:	ldr	r0, [fp, #-16]
   1ce08:	movw	r1, #0
   1ce0c:	cmp	r1, r0
   1ce10:	bcs	1ce20 <__assert_fail@plt+0xbd48>
   1ce14:	movw	r0, #0
   1ce18:	str	r0, [fp, #-24]	; 0xffffffe8
   1ce1c:	b	1ce38 <__assert_fail@plt+0xbd60>
   1ce20:	ldr	r0, [fp, #-16]
   1ce24:	movw	r1, #0
   1ce28:	sub	r0, r1, r0
   1ce2c:	movw	r1, #127	; 0x7f
   1ce30:	udiv	r0, r1, r0
   1ce34:	str	r0, [fp, #-24]	; 0xffffffe8
   1ce38:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1ce3c:	ldr	r1, [fp, #-12]
   1ce40:	mvn	r2, #0
   1ce44:	sub	r1, r2, r1
   1ce48:	cmp	r0, r1
   1ce4c:	bls	1cf58 <__assert_fail@plt+0xbe80>
   1ce50:	b	1cf70 <__assert_fail@plt+0xbe98>
   1ce54:	ldr	r0, [fp, #-16]
   1ce58:	cmn	r0, #1
   1ce5c:	bne	1cea8 <__assert_fail@plt+0xbdd0>
   1ce60:	b	1ce80 <__assert_fail@plt+0xbda8>
   1ce64:	ldr	r0, [fp, #-12]
   1ce68:	mvn	r1, #127	; 0x7f
   1ce6c:	add	r0, r0, r1
   1ce70:	movw	r1, #0
   1ce74:	cmp	r1, r0
   1ce78:	bcc	1cf58 <__assert_fail@plt+0xbe80>
   1ce7c:	b	1cf70 <__assert_fail@plt+0xbe98>
   1ce80:	ldr	r0, [fp, #-12]
   1ce84:	movw	r1, #0
   1ce88:	cmp	r1, r0
   1ce8c:	bcs	1cf70 <__assert_fail@plt+0xbe98>
   1ce90:	ldr	r0, [fp, #-12]
   1ce94:	sub	r0, r0, #1
   1ce98:	movw	r1, #127	; 0x7f
   1ce9c:	cmp	r1, r0
   1cea0:	bcc	1cf58 <__assert_fail@plt+0xbe80>
   1cea4:	b	1cf70 <__assert_fail@plt+0xbe98>
   1cea8:	ldr	r0, [fp, #-16]
   1ceac:	mvn	r1, #127	; 0x7f
   1ceb0:	udiv	r0, r1, r0
   1ceb4:	ldr	r1, [fp, #-12]
   1ceb8:	cmp	r0, r1
   1cebc:	bcc	1cf58 <__assert_fail@plt+0xbe80>
   1cec0:	b	1cf70 <__assert_fail@plt+0xbe98>
   1cec4:	ldr	r0, [fp, #-16]
   1cec8:	cmp	r0, #0
   1cecc:	bne	1ced4 <__assert_fail@plt+0xbdfc>
   1ced0:	b	1cf70 <__assert_fail@plt+0xbe98>
   1ced4:	ldr	r0, [fp, #-12]
   1ced8:	cmp	r0, #0
   1cedc:	bcs	1cf40 <__assert_fail@plt+0xbe68>
   1cee0:	ldr	r0, [fp, #-12]
   1cee4:	cmn	r0, #1
   1cee8:	bne	1cf24 <__assert_fail@plt+0xbe4c>
   1ceec:	b	1cf0c <__assert_fail@plt+0xbe34>
   1cef0:	ldr	r0, [fp, #-16]
   1cef4:	mvn	r1, #127	; 0x7f
   1cef8:	add	r0, r0, r1
   1cefc:	movw	r1, #0
   1cf00:	cmp	r1, r0
   1cf04:	bcc	1cf58 <__assert_fail@plt+0xbe80>
   1cf08:	b	1cf70 <__assert_fail@plt+0xbe98>
   1cf0c:	ldr	r0, [fp, #-16]
   1cf10:	sub	r0, r0, #1
   1cf14:	movw	r1, #127	; 0x7f
   1cf18:	cmp	r1, r0
   1cf1c:	bcc	1cf58 <__assert_fail@plt+0xbe80>
   1cf20:	b	1cf70 <__assert_fail@plt+0xbe98>
   1cf24:	ldr	r0, [fp, #-12]
   1cf28:	mvn	r1, #127	; 0x7f
   1cf2c:	udiv	r0, r1, r0
   1cf30:	ldr	r1, [fp, #-16]
   1cf34:	cmp	r0, r1
   1cf38:	bcc	1cf58 <__assert_fail@plt+0xbe80>
   1cf3c:	b	1cf70 <__assert_fail@plt+0xbe98>
   1cf40:	ldr	r0, [fp, #-16]
   1cf44:	movw	r1, #127	; 0x7f
   1cf48:	udiv	r0, r1, r0
   1cf4c:	ldr	r1, [fp, #-12]
   1cf50:	cmp	r0, r1
   1cf54:	bcs	1cf70 <__assert_fail@plt+0xbe98>
   1cf58:	ldr	r0, [fp, #-12]
   1cf5c:	ldr	r1, [fp, #-16]
   1cf60:	mul	r0, r0, r1
   1cf64:	sxtb	r0, r0
   1cf68:	str	r0, [fp, #-20]	; 0xffffffec
   1cf6c:	b	1e098 <__assert_fail@plt+0xcfc0>
   1cf70:	ldr	r0, [fp, #-12]
   1cf74:	ldr	r1, [fp, #-16]
   1cf78:	mul	r0, r0, r1
   1cf7c:	sxtb	r0, r0
   1cf80:	str	r0, [fp, #-20]	; 0xffffffec
   1cf84:	b	1e0b0 <__assert_fail@plt+0xcfd8>
   1cf88:	ldr	r0, [fp, #-16]
   1cf8c:	cmp	r0, #0
   1cf90:	bcs	1d09c <__assert_fail@plt+0xbfc4>
   1cf94:	ldr	r0, [fp, #-12]
   1cf98:	cmp	r0, #0
   1cf9c:	bcs	1d024 <__assert_fail@plt+0xbf4c>
   1cfa0:	b	1cfc0 <__assert_fail@plt+0xbee8>
   1cfa4:	ldr	r0, [fp, #-12]
   1cfa8:	ldr	r1, [fp, #-16]
   1cfac:	movw	r2, #255	; 0xff
   1cfb0:	udiv	r1, r2, r1
   1cfb4:	cmp	r0, r1
   1cfb8:	bcc	1d138 <__assert_fail@plt+0xc060>
   1cfbc:	b	1d150 <__assert_fail@plt+0xc078>
   1cfc0:	b	1cfd4 <__assert_fail@plt+0xbefc>
   1cfc4:	ldr	r0, [fp, #-16]
   1cfc8:	cmp	r0, #1
   1cfcc:	bcc	1cfe4 <__assert_fail@plt+0xbf0c>
   1cfd0:	b	1cff0 <__assert_fail@plt+0xbf18>
   1cfd4:	ldr	r0, [fp, #-16]
   1cfd8:	movw	r1, #0
   1cfdc:	cmp	r1, r0
   1cfe0:	bcs	1cff0 <__assert_fail@plt+0xbf18>
   1cfe4:	movw	r0, #0
   1cfe8:	str	r0, [fp, #-28]	; 0xffffffe4
   1cfec:	b	1d008 <__assert_fail@plt+0xbf30>
   1cff0:	ldr	r0, [fp, #-16]
   1cff4:	movw	r1, #0
   1cff8:	sub	r0, r1, r0
   1cffc:	movw	r1, #255	; 0xff
   1d000:	udiv	r0, r1, r0
   1d004:	str	r0, [fp, #-28]	; 0xffffffe4
   1d008:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1d00c:	ldr	r1, [fp, #-12]
   1d010:	mvn	r2, #0
   1d014:	sub	r1, r2, r1
   1d018:	cmp	r0, r1
   1d01c:	bls	1d138 <__assert_fail@plt+0xc060>
   1d020:	b	1d150 <__assert_fail@plt+0xc078>
   1d024:	b	1d02c <__assert_fail@plt+0xbf54>
   1d028:	b	1d030 <__assert_fail@plt+0xbf58>
   1d02c:	b	1d080 <__assert_fail@plt+0xbfa8>
   1d030:	ldr	r0, [fp, #-16]
   1d034:	cmn	r0, #1
   1d038:	bne	1d080 <__assert_fail@plt+0xbfa8>
   1d03c:	b	1d058 <__assert_fail@plt+0xbf80>
   1d040:	ldr	r0, [fp, #-12]
   1d044:	add	r0, r0, #0
   1d048:	movw	r1, #0
   1d04c:	cmp	r1, r0
   1d050:	bcc	1d138 <__assert_fail@plt+0xc060>
   1d054:	b	1d150 <__assert_fail@plt+0xc078>
   1d058:	ldr	r0, [fp, #-12]
   1d05c:	movw	r1, #0
   1d060:	cmp	r1, r0
   1d064:	bcs	1d150 <__assert_fail@plt+0xc078>
   1d068:	ldr	r0, [fp, #-12]
   1d06c:	sub	r0, r0, #1
   1d070:	mvn	r1, #0
   1d074:	cmp	r1, r0
   1d078:	bcc	1d138 <__assert_fail@plt+0xc060>
   1d07c:	b	1d150 <__assert_fail@plt+0xc078>
   1d080:	ldr	r0, [fp, #-16]
   1d084:	movw	r1, #0
   1d088:	udiv	r0, r1, r0
   1d08c:	ldr	r1, [fp, #-12]
   1d090:	cmp	r0, r1
   1d094:	bcc	1d138 <__assert_fail@plt+0xc060>
   1d098:	b	1d150 <__assert_fail@plt+0xc078>
   1d09c:	ldr	r0, [fp, #-16]
   1d0a0:	cmp	r0, #0
   1d0a4:	bne	1d0ac <__assert_fail@plt+0xbfd4>
   1d0a8:	b	1d150 <__assert_fail@plt+0xc078>
   1d0ac:	ldr	r0, [fp, #-12]
   1d0b0:	cmp	r0, #0
   1d0b4:	bcs	1d120 <__assert_fail@plt+0xc048>
   1d0b8:	b	1d0c0 <__assert_fail@plt+0xbfe8>
   1d0bc:	b	1d0c4 <__assert_fail@plt+0xbfec>
   1d0c0:	b	1d104 <__assert_fail@plt+0xc02c>
   1d0c4:	ldr	r0, [fp, #-12]
   1d0c8:	cmn	r0, #1
   1d0cc:	bne	1d104 <__assert_fail@plt+0xc02c>
   1d0d0:	b	1d0ec <__assert_fail@plt+0xc014>
   1d0d4:	ldr	r0, [fp, #-16]
   1d0d8:	add	r0, r0, #0
   1d0dc:	movw	r1, #0
   1d0e0:	cmp	r1, r0
   1d0e4:	bcc	1d138 <__assert_fail@plt+0xc060>
   1d0e8:	b	1d150 <__assert_fail@plt+0xc078>
   1d0ec:	ldr	r0, [fp, #-16]
   1d0f0:	sub	r0, r0, #1
   1d0f4:	mvn	r1, #0
   1d0f8:	cmp	r1, r0
   1d0fc:	bcc	1d138 <__assert_fail@plt+0xc060>
   1d100:	b	1d150 <__assert_fail@plt+0xc078>
   1d104:	ldr	r0, [fp, #-12]
   1d108:	movw	r1, #0
   1d10c:	udiv	r0, r1, r0
   1d110:	ldr	r1, [fp, #-16]
   1d114:	cmp	r0, r1
   1d118:	bcc	1d138 <__assert_fail@plt+0xc060>
   1d11c:	b	1d150 <__assert_fail@plt+0xc078>
   1d120:	ldr	r0, [fp, #-16]
   1d124:	movw	r1, #255	; 0xff
   1d128:	udiv	r0, r1, r0
   1d12c:	ldr	r1, [fp, #-12]
   1d130:	cmp	r0, r1
   1d134:	bcs	1d150 <__assert_fail@plt+0xc078>
   1d138:	ldr	r0, [fp, #-12]
   1d13c:	ldr	r1, [fp, #-16]
   1d140:	mul	r0, r0, r1
   1d144:	and	r0, r0, #255	; 0xff
   1d148:	str	r0, [fp, #-20]	; 0xffffffec
   1d14c:	b	1e098 <__assert_fail@plt+0xcfc0>
   1d150:	ldr	r0, [fp, #-12]
   1d154:	ldr	r1, [fp, #-16]
   1d158:	mul	r0, r0, r1
   1d15c:	and	r0, r0, #255	; 0xff
   1d160:	str	r0, [fp, #-20]	; 0xffffffec
   1d164:	b	1e0b0 <__assert_fail@plt+0xcfd8>
   1d168:	b	1d520 <__assert_fail@plt+0xc448>
   1d16c:	b	1d340 <__assert_fail@plt+0xc268>
   1d170:	ldr	r0, [fp, #-16]
   1d174:	cmp	r0, #0
   1d178:	bcs	1d27c <__assert_fail@plt+0xc1a4>
   1d17c:	ldr	r0, [fp, #-12]
   1d180:	cmp	r0, #0
   1d184:	bcs	1d20c <__assert_fail@plt+0xc134>
   1d188:	b	1d1a8 <__assert_fail@plt+0xc0d0>
   1d18c:	ldr	r0, [fp, #-12]
   1d190:	ldr	r1, [fp, #-16]
   1d194:	movw	r2, #32767	; 0x7fff
   1d198:	udiv	r1, r2, r1
   1d19c:	cmp	r0, r1
   1d1a0:	bcc	1d310 <__assert_fail@plt+0xc238>
   1d1a4:	b	1d328 <__assert_fail@plt+0xc250>
   1d1a8:	b	1d1bc <__assert_fail@plt+0xc0e4>
   1d1ac:	ldr	r0, [fp, #-16]
   1d1b0:	cmp	r0, #1
   1d1b4:	bcc	1d1cc <__assert_fail@plt+0xc0f4>
   1d1b8:	b	1d1d8 <__assert_fail@plt+0xc100>
   1d1bc:	ldr	r0, [fp, #-16]
   1d1c0:	movw	r1, #0
   1d1c4:	cmp	r1, r0
   1d1c8:	bcs	1d1d8 <__assert_fail@plt+0xc100>
   1d1cc:	movw	r0, #0
   1d1d0:	str	r0, [fp, #-32]	; 0xffffffe0
   1d1d4:	b	1d1f0 <__assert_fail@plt+0xc118>
   1d1d8:	ldr	r0, [fp, #-16]
   1d1dc:	movw	r1, #0
   1d1e0:	sub	r0, r1, r0
   1d1e4:	movw	r1, #32767	; 0x7fff
   1d1e8:	udiv	r0, r1, r0
   1d1ec:	str	r0, [fp, #-32]	; 0xffffffe0
   1d1f0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1d1f4:	ldr	r1, [fp, #-12]
   1d1f8:	mvn	r2, #0
   1d1fc:	sub	r1, r2, r1
   1d200:	cmp	r0, r1
   1d204:	bls	1d310 <__assert_fail@plt+0xc238>
   1d208:	b	1d328 <__assert_fail@plt+0xc250>
   1d20c:	ldr	r0, [fp, #-16]
   1d210:	cmn	r0, #1
   1d214:	bne	1d260 <__assert_fail@plt+0xc188>
   1d218:	b	1d238 <__assert_fail@plt+0xc160>
   1d21c:	ldr	r0, [pc, #3760]	; 1e0d4 <__assert_fail@plt+0xcffc>
   1d220:	ldr	r1, [fp, #-12]
   1d224:	add	r0, r1, r0
   1d228:	movw	r1, #0
   1d22c:	cmp	r1, r0
   1d230:	bcc	1d310 <__assert_fail@plt+0xc238>
   1d234:	b	1d328 <__assert_fail@plt+0xc250>
   1d238:	ldr	r0, [fp, #-12]
   1d23c:	movw	r1, #0
   1d240:	cmp	r1, r0
   1d244:	bcs	1d328 <__assert_fail@plt+0xc250>
   1d248:	ldr	r0, [fp, #-12]
   1d24c:	sub	r0, r0, #1
   1d250:	movw	r1, #32767	; 0x7fff
   1d254:	cmp	r1, r0
   1d258:	bcc	1d310 <__assert_fail@plt+0xc238>
   1d25c:	b	1d328 <__assert_fail@plt+0xc250>
   1d260:	ldr	r0, [pc, #3692]	; 1e0d4 <__assert_fail@plt+0xcffc>
   1d264:	ldr	r1, [fp, #-16]
   1d268:	udiv	r0, r0, r1
   1d26c:	ldr	r1, [fp, #-12]
   1d270:	cmp	r0, r1
   1d274:	bcc	1d310 <__assert_fail@plt+0xc238>
   1d278:	b	1d328 <__assert_fail@plt+0xc250>
   1d27c:	ldr	r0, [fp, #-16]
   1d280:	cmp	r0, #0
   1d284:	bne	1d28c <__assert_fail@plt+0xc1b4>
   1d288:	b	1d328 <__assert_fail@plt+0xc250>
   1d28c:	ldr	r0, [fp, #-12]
   1d290:	cmp	r0, #0
   1d294:	bcs	1d2f8 <__assert_fail@plt+0xc220>
   1d298:	ldr	r0, [fp, #-12]
   1d29c:	cmn	r0, #1
   1d2a0:	bne	1d2dc <__assert_fail@plt+0xc204>
   1d2a4:	b	1d2c4 <__assert_fail@plt+0xc1ec>
   1d2a8:	ldr	r0, [pc, #3620]	; 1e0d4 <__assert_fail@plt+0xcffc>
   1d2ac:	ldr	r1, [fp, #-16]
   1d2b0:	add	r0, r1, r0
   1d2b4:	movw	r1, #0
   1d2b8:	cmp	r1, r0
   1d2bc:	bcc	1d310 <__assert_fail@plt+0xc238>
   1d2c0:	b	1d328 <__assert_fail@plt+0xc250>
   1d2c4:	ldr	r0, [fp, #-16]
   1d2c8:	sub	r0, r0, #1
   1d2cc:	movw	r1, #32767	; 0x7fff
   1d2d0:	cmp	r1, r0
   1d2d4:	bcc	1d310 <__assert_fail@plt+0xc238>
   1d2d8:	b	1d328 <__assert_fail@plt+0xc250>
   1d2dc:	ldr	r0, [pc, #3568]	; 1e0d4 <__assert_fail@plt+0xcffc>
   1d2e0:	ldr	r1, [fp, #-12]
   1d2e4:	udiv	r0, r0, r1
   1d2e8:	ldr	r1, [fp, #-16]
   1d2ec:	cmp	r0, r1
   1d2f0:	bcc	1d310 <__assert_fail@plt+0xc238>
   1d2f4:	b	1d328 <__assert_fail@plt+0xc250>
   1d2f8:	ldr	r0, [fp, #-16]
   1d2fc:	movw	r1, #32767	; 0x7fff
   1d300:	udiv	r0, r1, r0
   1d304:	ldr	r1, [fp, #-12]
   1d308:	cmp	r0, r1
   1d30c:	bcs	1d328 <__assert_fail@plt+0xc250>
   1d310:	ldr	r0, [fp, #-12]
   1d314:	ldr	r1, [fp, #-16]
   1d318:	mul	r0, r0, r1
   1d31c:	sxth	r0, r0
   1d320:	str	r0, [fp, #-20]	; 0xffffffec
   1d324:	b	1e098 <__assert_fail@plt+0xcfc0>
   1d328:	ldr	r0, [fp, #-12]
   1d32c:	ldr	r1, [fp, #-16]
   1d330:	mul	r0, r0, r1
   1d334:	sxth	r0, r0
   1d338:	str	r0, [fp, #-20]	; 0xffffffec
   1d33c:	b	1e0b0 <__assert_fail@plt+0xcfd8>
   1d340:	ldr	r0, [fp, #-16]
   1d344:	cmp	r0, #0
   1d348:	bcs	1d454 <__assert_fail@plt+0xc37c>
   1d34c:	ldr	r0, [fp, #-12]
   1d350:	cmp	r0, #0
   1d354:	bcs	1d3dc <__assert_fail@plt+0xc304>
   1d358:	b	1d378 <__assert_fail@plt+0xc2a0>
   1d35c:	ldr	r0, [fp, #-12]
   1d360:	ldr	r1, [fp, #-16]
   1d364:	movw	r2, #65535	; 0xffff
   1d368:	udiv	r1, r2, r1
   1d36c:	cmp	r0, r1
   1d370:	bcc	1d4f0 <__assert_fail@plt+0xc418>
   1d374:	b	1d508 <__assert_fail@plt+0xc430>
   1d378:	b	1d38c <__assert_fail@plt+0xc2b4>
   1d37c:	ldr	r0, [fp, #-16]
   1d380:	cmp	r0, #1
   1d384:	bcc	1d39c <__assert_fail@plt+0xc2c4>
   1d388:	b	1d3a8 <__assert_fail@plt+0xc2d0>
   1d38c:	ldr	r0, [fp, #-16]
   1d390:	movw	r1, #0
   1d394:	cmp	r1, r0
   1d398:	bcs	1d3a8 <__assert_fail@plt+0xc2d0>
   1d39c:	movw	r0, #0
   1d3a0:	str	r0, [fp, #-36]	; 0xffffffdc
   1d3a4:	b	1d3c0 <__assert_fail@plt+0xc2e8>
   1d3a8:	ldr	r0, [fp, #-16]
   1d3ac:	movw	r1, #0
   1d3b0:	sub	r0, r1, r0
   1d3b4:	movw	r1, #65535	; 0xffff
   1d3b8:	udiv	r0, r1, r0
   1d3bc:	str	r0, [fp, #-36]	; 0xffffffdc
   1d3c0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1d3c4:	ldr	r1, [fp, #-12]
   1d3c8:	mvn	r2, #0
   1d3cc:	sub	r1, r2, r1
   1d3d0:	cmp	r0, r1
   1d3d4:	bls	1d4f0 <__assert_fail@plt+0xc418>
   1d3d8:	b	1d508 <__assert_fail@plt+0xc430>
   1d3dc:	b	1d3e4 <__assert_fail@plt+0xc30c>
   1d3e0:	b	1d3e8 <__assert_fail@plt+0xc310>
   1d3e4:	b	1d438 <__assert_fail@plt+0xc360>
   1d3e8:	ldr	r0, [fp, #-16]
   1d3ec:	cmn	r0, #1
   1d3f0:	bne	1d438 <__assert_fail@plt+0xc360>
   1d3f4:	b	1d410 <__assert_fail@plt+0xc338>
   1d3f8:	ldr	r0, [fp, #-12]
   1d3fc:	add	r0, r0, #0
   1d400:	movw	r1, #0
   1d404:	cmp	r1, r0
   1d408:	bcc	1d4f0 <__assert_fail@plt+0xc418>
   1d40c:	b	1d508 <__assert_fail@plt+0xc430>
   1d410:	ldr	r0, [fp, #-12]
   1d414:	movw	r1, #0
   1d418:	cmp	r1, r0
   1d41c:	bcs	1d508 <__assert_fail@plt+0xc430>
   1d420:	ldr	r0, [fp, #-12]
   1d424:	sub	r0, r0, #1
   1d428:	mvn	r1, #0
   1d42c:	cmp	r1, r0
   1d430:	bcc	1d4f0 <__assert_fail@plt+0xc418>
   1d434:	b	1d508 <__assert_fail@plt+0xc430>
   1d438:	ldr	r0, [fp, #-16]
   1d43c:	movw	r1, #0
   1d440:	udiv	r0, r1, r0
   1d444:	ldr	r1, [fp, #-12]
   1d448:	cmp	r0, r1
   1d44c:	bcc	1d4f0 <__assert_fail@plt+0xc418>
   1d450:	b	1d508 <__assert_fail@plt+0xc430>
   1d454:	ldr	r0, [fp, #-16]
   1d458:	cmp	r0, #0
   1d45c:	bne	1d464 <__assert_fail@plt+0xc38c>
   1d460:	b	1d508 <__assert_fail@plt+0xc430>
   1d464:	ldr	r0, [fp, #-12]
   1d468:	cmp	r0, #0
   1d46c:	bcs	1d4d8 <__assert_fail@plt+0xc400>
   1d470:	b	1d478 <__assert_fail@plt+0xc3a0>
   1d474:	b	1d47c <__assert_fail@plt+0xc3a4>
   1d478:	b	1d4bc <__assert_fail@plt+0xc3e4>
   1d47c:	ldr	r0, [fp, #-12]
   1d480:	cmn	r0, #1
   1d484:	bne	1d4bc <__assert_fail@plt+0xc3e4>
   1d488:	b	1d4a4 <__assert_fail@plt+0xc3cc>
   1d48c:	ldr	r0, [fp, #-16]
   1d490:	add	r0, r0, #0
   1d494:	movw	r1, #0
   1d498:	cmp	r1, r0
   1d49c:	bcc	1d4f0 <__assert_fail@plt+0xc418>
   1d4a0:	b	1d508 <__assert_fail@plt+0xc430>
   1d4a4:	ldr	r0, [fp, #-16]
   1d4a8:	sub	r0, r0, #1
   1d4ac:	mvn	r1, #0
   1d4b0:	cmp	r1, r0
   1d4b4:	bcc	1d4f0 <__assert_fail@plt+0xc418>
   1d4b8:	b	1d508 <__assert_fail@plt+0xc430>
   1d4bc:	ldr	r0, [fp, #-12]
   1d4c0:	movw	r1, #0
   1d4c4:	udiv	r0, r1, r0
   1d4c8:	ldr	r1, [fp, #-16]
   1d4cc:	cmp	r0, r1
   1d4d0:	bcc	1d4f0 <__assert_fail@plt+0xc418>
   1d4d4:	b	1d508 <__assert_fail@plt+0xc430>
   1d4d8:	ldr	r0, [fp, #-16]
   1d4dc:	movw	r1, #65535	; 0xffff
   1d4e0:	udiv	r0, r1, r0
   1d4e4:	ldr	r1, [fp, #-12]
   1d4e8:	cmp	r0, r1
   1d4ec:	bcs	1d508 <__assert_fail@plt+0xc430>
   1d4f0:	ldr	r0, [fp, #-12]
   1d4f4:	ldr	r1, [fp, #-16]
   1d4f8:	mul	r0, r0, r1
   1d4fc:	uxth	r0, r0
   1d500:	str	r0, [fp, #-20]	; 0xffffffec
   1d504:	b	1e098 <__assert_fail@plt+0xcfc0>
   1d508:	ldr	r0, [fp, #-12]
   1d50c:	ldr	r1, [fp, #-16]
   1d510:	mul	r0, r0, r1
   1d514:	uxth	r0, r0
   1d518:	str	r0, [fp, #-20]	; 0xffffffec
   1d51c:	b	1e0b0 <__assert_fail@plt+0xcfd8>
   1d520:	b	1d524 <__assert_fail@plt+0xc44c>
   1d524:	b	1d6e8 <__assert_fail@plt+0xc610>
   1d528:	ldr	r0, [fp, #-16]
   1d52c:	cmp	r0, #0
   1d530:	bcs	1d630 <__assert_fail@plt+0xc558>
   1d534:	ldr	r0, [fp, #-12]
   1d538:	cmp	r0, #0
   1d53c:	bcs	1d5c4 <__assert_fail@plt+0xc4ec>
   1d540:	b	1d560 <__assert_fail@plt+0xc488>
   1d544:	ldr	r0, [pc, #2944]	; 1e0cc <__assert_fail@plt+0xcff4>
   1d548:	ldr	r1, [fp, #-12]
   1d54c:	ldr	r2, [fp, #-16]
   1d550:	udiv	r0, r0, r2
   1d554:	cmp	r1, r0
   1d558:	bcc	1d6c0 <__assert_fail@plt+0xc5e8>
   1d55c:	b	1d6d4 <__assert_fail@plt+0xc5fc>
   1d560:	b	1d574 <__assert_fail@plt+0xc49c>
   1d564:	ldr	r0, [fp, #-16]
   1d568:	cmp	r0, #1
   1d56c:	bcc	1d584 <__assert_fail@plt+0xc4ac>
   1d570:	b	1d590 <__assert_fail@plt+0xc4b8>
   1d574:	ldr	r0, [fp, #-16]
   1d578:	movw	r1, #0
   1d57c:	cmp	r1, r0
   1d580:	bcs	1d590 <__assert_fail@plt+0xc4b8>
   1d584:	movw	r0, #0
   1d588:	str	r0, [fp, #-40]	; 0xffffffd8
   1d58c:	b	1d5a8 <__assert_fail@plt+0xc4d0>
   1d590:	ldr	r0, [pc, #2868]	; 1e0cc <__assert_fail@plt+0xcff4>
   1d594:	ldr	r1, [fp, #-16]
   1d598:	movw	r2, #0
   1d59c:	sub	r1, r2, r1
   1d5a0:	udiv	r0, r0, r1
   1d5a4:	str	r0, [fp, #-40]	; 0xffffffd8
   1d5a8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1d5ac:	ldr	r1, [fp, #-12]
   1d5b0:	mvn	r2, #0
   1d5b4:	sub	r1, r2, r1
   1d5b8:	cmp	r0, r1
   1d5bc:	bls	1d6c0 <__assert_fail@plt+0xc5e8>
   1d5c0:	b	1d6d4 <__assert_fail@plt+0xc5fc>
   1d5c4:	ldr	r0, [fp, #-16]
   1d5c8:	cmn	r0, #1
   1d5cc:	bne	1d614 <__assert_fail@plt+0xc53c>
   1d5d0:	b	1d5ec <__assert_fail@plt+0xc514>
   1d5d4:	ldr	r0, [fp, #-12]
   1d5d8:	add	r0, r0, #-2147483648	; 0x80000000
   1d5dc:	movw	r1, #0
   1d5e0:	cmp	r1, r0
   1d5e4:	bcc	1d6c0 <__assert_fail@plt+0xc5e8>
   1d5e8:	b	1d6d4 <__assert_fail@plt+0xc5fc>
   1d5ec:	ldr	r0, [fp, #-12]
   1d5f0:	movw	r1, #0
   1d5f4:	cmp	r1, r0
   1d5f8:	bcs	1d6d4 <__assert_fail@plt+0xc5fc>
   1d5fc:	ldr	r0, [pc, #2760]	; 1e0cc <__assert_fail@plt+0xcff4>
   1d600:	ldr	r1, [fp, #-12]
   1d604:	sub	r1, r1, #1
   1d608:	cmp	r0, r1
   1d60c:	bcc	1d6c0 <__assert_fail@plt+0xc5e8>
   1d610:	b	1d6d4 <__assert_fail@plt+0xc5fc>
   1d614:	ldr	r0, [pc, #2740]	; 1e0d0 <__assert_fail@plt+0xcff8>
   1d618:	ldr	r1, [fp, #-16]
   1d61c:	udiv	r0, r0, r1
   1d620:	ldr	r1, [fp, #-12]
   1d624:	cmp	r0, r1
   1d628:	bcc	1d6c0 <__assert_fail@plt+0xc5e8>
   1d62c:	b	1d6d4 <__assert_fail@plt+0xc5fc>
   1d630:	ldr	r0, [fp, #-16]
   1d634:	cmp	r0, #0
   1d638:	bne	1d640 <__assert_fail@plt+0xc568>
   1d63c:	b	1d6d4 <__assert_fail@plt+0xc5fc>
   1d640:	ldr	r0, [fp, #-12]
   1d644:	cmp	r0, #0
   1d648:	bcs	1d6a8 <__assert_fail@plt+0xc5d0>
   1d64c:	ldr	r0, [fp, #-12]
   1d650:	cmn	r0, #1
   1d654:	bne	1d68c <__assert_fail@plt+0xc5b4>
   1d658:	b	1d674 <__assert_fail@plt+0xc59c>
   1d65c:	ldr	r0, [fp, #-16]
   1d660:	add	r0, r0, #-2147483648	; 0x80000000
   1d664:	movw	r1, #0
   1d668:	cmp	r1, r0
   1d66c:	bcc	1d6c0 <__assert_fail@plt+0xc5e8>
   1d670:	b	1d6d4 <__assert_fail@plt+0xc5fc>
   1d674:	ldr	r0, [pc, #2640]	; 1e0cc <__assert_fail@plt+0xcff4>
   1d678:	ldr	r1, [fp, #-16]
   1d67c:	sub	r1, r1, #1
   1d680:	cmp	r0, r1
   1d684:	bcc	1d6c0 <__assert_fail@plt+0xc5e8>
   1d688:	b	1d6d4 <__assert_fail@plt+0xc5fc>
   1d68c:	ldr	r0, [pc, #2620]	; 1e0d0 <__assert_fail@plt+0xcff8>
   1d690:	ldr	r1, [fp, #-12]
   1d694:	udiv	r0, r0, r1
   1d698:	ldr	r1, [fp, #-16]
   1d69c:	cmp	r0, r1
   1d6a0:	bcc	1d6c0 <__assert_fail@plt+0xc5e8>
   1d6a4:	b	1d6d4 <__assert_fail@plt+0xc5fc>
   1d6a8:	ldr	r0, [pc, #2588]	; 1e0cc <__assert_fail@plt+0xcff4>
   1d6ac:	ldr	r1, [fp, #-16]
   1d6b0:	udiv	r0, r0, r1
   1d6b4:	ldr	r1, [fp, #-12]
   1d6b8:	cmp	r0, r1
   1d6bc:	bcs	1d6d4 <__assert_fail@plt+0xc5fc>
   1d6c0:	ldr	r0, [fp, #-12]
   1d6c4:	ldr	r1, [fp, #-16]
   1d6c8:	mul	r0, r0, r1
   1d6cc:	str	r0, [fp, #-20]	; 0xffffffec
   1d6d0:	b	1e098 <__assert_fail@plt+0xcfc0>
   1d6d4:	ldr	r0, [fp, #-12]
   1d6d8:	ldr	r1, [fp, #-16]
   1d6dc:	mul	r0, r0, r1
   1d6e0:	str	r0, [fp, #-20]	; 0xffffffec
   1d6e4:	b	1e0b0 <__assert_fail@plt+0xcfd8>
   1d6e8:	ldr	r0, [fp, #-16]
   1d6ec:	cmp	r0, #0
   1d6f0:	bcs	1d7fc <__assert_fail@plt+0xc724>
   1d6f4:	ldr	r0, [fp, #-12]
   1d6f8:	cmp	r0, #0
   1d6fc:	bcs	1d784 <__assert_fail@plt+0xc6ac>
   1d700:	b	1d720 <__assert_fail@plt+0xc648>
   1d704:	ldr	r0, [fp, #-12]
   1d708:	ldr	r1, [fp, #-16]
   1d70c:	mvn	r2, #0
   1d710:	udiv	r1, r2, r1
   1d714:	cmp	r0, r1
   1d718:	bcc	1d898 <__assert_fail@plt+0xc7c0>
   1d71c:	b	1d8ac <__assert_fail@plt+0xc7d4>
   1d720:	b	1d734 <__assert_fail@plt+0xc65c>
   1d724:	ldr	r0, [fp, #-16]
   1d728:	cmp	r0, #1
   1d72c:	bcc	1d744 <__assert_fail@plt+0xc66c>
   1d730:	b	1d750 <__assert_fail@plt+0xc678>
   1d734:	ldr	r0, [fp, #-16]
   1d738:	movw	r1, #0
   1d73c:	cmp	r1, r0
   1d740:	bcs	1d750 <__assert_fail@plt+0xc678>
   1d744:	movw	r0, #1
   1d748:	str	r0, [fp, #-44]	; 0xffffffd4
   1d74c:	b	1d768 <__assert_fail@plt+0xc690>
   1d750:	ldr	r0, [fp, #-16]
   1d754:	movw	r1, #0
   1d758:	sub	r0, r1, r0
   1d75c:	mvn	r1, #0
   1d760:	udiv	r0, r1, r0
   1d764:	str	r0, [fp, #-44]	; 0xffffffd4
   1d768:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1d76c:	ldr	r1, [fp, #-12]
   1d770:	mvn	r2, #0
   1d774:	sub	r1, r2, r1
   1d778:	cmp	r0, r1
   1d77c:	bls	1d898 <__assert_fail@plt+0xc7c0>
   1d780:	b	1d8ac <__assert_fail@plt+0xc7d4>
   1d784:	b	1d78c <__assert_fail@plt+0xc6b4>
   1d788:	b	1d790 <__assert_fail@plt+0xc6b8>
   1d78c:	b	1d7e0 <__assert_fail@plt+0xc708>
   1d790:	ldr	r0, [fp, #-16]
   1d794:	cmn	r0, #1
   1d798:	bne	1d7e0 <__assert_fail@plt+0xc708>
   1d79c:	b	1d7b8 <__assert_fail@plt+0xc6e0>
   1d7a0:	ldr	r0, [fp, #-12]
   1d7a4:	add	r0, r0, #0
   1d7a8:	movw	r1, #0
   1d7ac:	cmp	r1, r0
   1d7b0:	bcc	1d898 <__assert_fail@plt+0xc7c0>
   1d7b4:	b	1d8ac <__assert_fail@plt+0xc7d4>
   1d7b8:	ldr	r0, [fp, #-12]
   1d7bc:	movw	r1, #0
   1d7c0:	cmp	r1, r0
   1d7c4:	bcs	1d8ac <__assert_fail@plt+0xc7d4>
   1d7c8:	ldr	r0, [fp, #-12]
   1d7cc:	sub	r0, r0, #1
   1d7d0:	mvn	r1, #0
   1d7d4:	cmp	r1, r0
   1d7d8:	bcc	1d898 <__assert_fail@plt+0xc7c0>
   1d7dc:	b	1d8ac <__assert_fail@plt+0xc7d4>
   1d7e0:	ldr	r0, [fp, #-16]
   1d7e4:	movw	r1, #0
   1d7e8:	udiv	r0, r1, r0
   1d7ec:	ldr	r1, [fp, #-12]
   1d7f0:	cmp	r0, r1
   1d7f4:	bcc	1d898 <__assert_fail@plt+0xc7c0>
   1d7f8:	b	1d8ac <__assert_fail@plt+0xc7d4>
   1d7fc:	ldr	r0, [fp, #-16]
   1d800:	cmp	r0, #0
   1d804:	bne	1d80c <__assert_fail@plt+0xc734>
   1d808:	b	1d8ac <__assert_fail@plt+0xc7d4>
   1d80c:	ldr	r0, [fp, #-12]
   1d810:	cmp	r0, #0
   1d814:	bcs	1d880 <__assert_fail@plt+0xc7a8>
   1d818:	b	1d820 <__assert_fail@plt+0xc748>
   1d81c:	b	1d824 <__assert_fail@plt+0xc74c>
   1d820:	b	1d864 <__assert_fail@plt+0xc78c>
   1d824:	ldr	r0, [fp, #-12]
   1d828:	cmn	r0, #1
   1d82c:	bne	1d864 <__assert_fail@plt+0xc78c>
   1d830:	b	1d84c <__assert_fail@plt+0xc774>
   1d834:	ldr	r0, [fp, #-16]
   1d838:	add	r0, r0, #0
   1d83c:	movw	r1, #0
   1d840:	cmp	r1, r0
   1d844:	bcc	1d898 <__assert_fail@plt+0xc7c0>
   1d848:	b	1d8ac <__assert_fail@plt+0xc7d4>
   1d84c:	ldr	r0, [fp, #-16]
   1d850:	sub	r0, r0, #1
   1d854:	mvn	r1, #0
   1d858:	cmp	r1, r0
   1d85c:	bcc	1d898 <__assert_fail@plt+0xc7c0>
   1d860:	b	1d8ac <__assert_fail@plt+0xc7d4>
   1d864:	ldr	r0, [fp, #-12]
   1d868:	movw	r1, #0
   1d86c:	udiv	r0, r1, r0
   1d870:	ldr	r1, [fp, #-16]
   1d874:	cmp	r0, r1
   1d878:	bcc	1d898 <__assert_fail@plt+0xc7c0>
   1d87c:	b	1d8ac <__assert_fail@plt+0xc7d4>
   1d880:	ldr	r0, [fp, #-16]
   1d884:	mvn	r1, #0
   1d888:	udiv	r0, r1, r0
   1d88c:	ldr	r1, [fp, #-12]
   1d890:	cmp	r0, r1
   1d894:	bcs	1d8ac <__assert_fail@plt+0xc7d4>
   1d898:	ldr	r0, [fp, #-12]
   1d89c:	ldr	r1, [fp, #-16]
   1d8a0:	mul	r0, r0, r1
   1d8a4:	str	r0, [fp, #-20]	; 0xffffffec
   1d8a8:	b	1e098 <__assert_fail@plt+0xcfc0>
   1d8ac:	ldr	r0, [fp, #-12]
   1d8b0:	ldr	r1, [fp, #-16]
   1d8b4:	mul	r0, r0, r1
   1d8b8:	str	r0, [fp, #-20]	; 0xffffffec
   1d8bc:	b	1e0b0 <__assert_fail@plt+0xcfd8>
   1d8c0:	b	1d8c4 <__assert_fail@plt+0xc7ec>
   1d8c4:	b	1da88 <__assert_fail@plt+0xc9b0>
   1d8c8:	ldr	r0, [fp, #-16]
   1d8cc:	cmp	r0, #0
   1d8d0:	bcs	1d9d0 <__assert_fail@plt+0xc8f8>
   1d8d4:	ldr	r0, [fp, #-12]
   1d8d8:	cmp	r0, #0
   1d8dc:	bcs	1d964 <__assert_fail@plt+0xc88c>
   1d8e0:	b	1d900 <__assert_fail@plt+0xc828>
   1d8e4:	ldr	r0, [pc, #2016]	; 1e0cc <__assert_fail@plt+0xcff4>
   1d8e8:	ldr	r1, [fp, #-12]
   1d8ec:	ldr	r2, [fp, #-16]
   1d8f0:	udiv	r0, r0, r2
   1d8f4:	cmp	r1, r0
   1d8f8:	bcc	1da60 <__assert_fail@plt+0xc988>
   1d8fc:	b	1da74 <__assert_fail@plt+0xc99c>
   1d900:	b	1d914 <__assert_fail@plt+0xc83c>
   1d904:	ldr	r0, [fp, #-16]
   1d908:	cmp	r0, #1
   1d90c:	bcc	1d924 <__assert_fail@plt+0xc84c>
   1d910:	b	1d930 <__assert_fail@plt+0xc858>
   1d914:	ldr	r0, [fp, #-16]
   1d918:	movw	r1, #0
   1d91c:	cmp	r1, r0
   1d920:	bcs	1d930 <__assert_fail@plt+0xc858>
   1d924:	movw	r0, #0
   1d928:	str	r0, [sp, #48]	; 0x30
   1d92c:	b	1d948 <__assert_fail@plt+0xc870>
   1d930:	ldr	r0, [pc, #1940]	; 1e0cc <__assert_fail@plt+0xcff4>
   1d934:	ldr	r1, [fp, #-16]
   1d938:	movw	r2, #0
   1d93c:	sub	r1, r2, r1
   1d940:	udiv	r0, r0, r1
   1d944:	str	r0, [sp, #48]	; 0x30
   1d948:	ldr	r0, [sp, #48]	; 0x30
   1d94c:	ldr	r1, [fp, #-12]
   1d950:	mvn	r2, #0
   1d954:	sub	r1, r2, r1
   1d958:	cmp	r0, r1
   1d95c:	bls	1da60 <__assert_fail@plt+0xc988>
   1d960:	b	1da74 <__assert_fail@plt+0xc99c>
   1d964:	ldr	r0, [fp, #-16]
   1d968:	cmn	r0, #1
   1d96c:	bne	1d9b4 <__assert_fail@plt+0xc8dc>
   1d970:	b	1d98c <__assert_fail@plt+0xc8b4>
   1d974:	ldr	r0, [fp, #-12]
   1d978:	add	r0, r0, #-2147483648	; 0x80000000
   1d97c:	movw	r1, #0
   1d980:	cmp	r1, r0
   1d984:	bcc	1da60 <__assert_fail@plt+0xc988>
   1d988:	b	1da74 <__assert_fail@plt+0xc99c>
   1d98c:	ldr	r0, [fp, #-12]
   1d990:	movw	r1, #0
   1d994:	cmp	r1, r0
   1d998:	bcs	1da74 <__assert_fail@plt+0xc99c>
   1d99c:	ldr	r0, [pc, #1832]	; 1e0cc <__assert_fail@plt+0xcff4>
   1d9a0:	ldr	r1, [fp, #-12]
   1d9a4:	sub	r1, r1, #1
   1d9a8:	cmp	r0, r1
   1d9ac:	bcc	1da60 <__assert_fail@plt+0xc988>
   1d9b0:	b	1da74 <__assert_fail@plt+0xc99c>
   1d9b4:	ldr	r0, [pc, #1812]	; 1e0d0 <__assert_fail@plt+0xcff8>
   1d9b8:	ldr	r1, [fp, #-16]
   1d9bc:	udiv	r0, r0, r1
   1d9c0:	ldr	r1, [fp, #-12]
   1d9c4:	cmp	r0, r1
   1d9c8:	bcc	1da60 <__assert_fail@plt+0xc988>
   1d9cc:	b	1da74 <__assert_fail@plt+0xc99c>
   1d9d0:	ldr	r0, [fp, #-16]
   1d9d4:	cmp	r0, #0
   1d9d8:	bne	1d9e0 <__assert_fail@plt+0xc908>
   1d9dc:	b	1da74 <__assert_fail@plt+0xc99c>
   1d9e0:	ldr	r0, [fp, #-12]
   1d9e4:	cmp	r0, #0
   1d9e8:	bcs	1da48 <__assert_fail@plt+0xc970>
   1d9ec:	ldr	r0, [fp, #-12]
   1d9f0:	cmn	r0, #1
   1d9f4:	bne	1da2c <__assert_fail@plt+0xc954>
   1d9f8:	b	1da14 <__assert_fail@plt+0xc93c>
   1d9fc:	ldr	r0, [fp, #-16]
   1da00:	add	r0, r0, #-2147483648	; 0x80000000
   1da04:	movw	r1, #0
   1da08:	cmp	r1, r0
   1da0c:	bcc	1da60 <__assert_fail@plt+0xc988>
   1da10:	b	1da74 <__assert_fail@plt+0xc99c>
   1da14:	ldr	r0, [pc, #1712]	; 1e0cc <__assert_fail@plt+0xcff4>
   1da18:	ldr	r1, [fp, #-16]
   1da1c:	sub	r1, r1, #1
   1da20:	cmp	r0, r1
   1da24:	bcc	1da60 <__assert_fail@plt+0xc988>
   1da28:	b	1da74 <__assert_fail@plt+0xc99c>
   1da2c:	ldr	r0, [pc, #1692]	; 1e0d0 <__assert_fail@plt+0xcff8>
   1da30:	ldr	r1, [fp, #-12]
   1da34:	udiv	r0, r0, r1
   1da38:	ldr	r1, [fp, #-16]
   1da3c:	cmp	r0, r1
   1da40:	bcc	1da60 <__assert_fail@plt+0xc988>
   1da44:	b	1da74 <__assert_fail@plt+0xc99c>
   1da48:	ldr	r0, [pc, #1660]	; 1e0cc <__assert_fail@plt+0xcff4>
   1da4c:	ldr	r1, [fp, #-16]
   1da50:	udiv	r0, r0, r1
   1da54:	ldr	r1, [fp, #-12]
   1da58:	cmp	r0, r1
   1da5c:	bcs	1da74 <__assert_fail@plt+0xc99c>
   1da60:	ldr	r0, [fp, #-12]
   1da64:	ldr	r1, [fp, #-16]
   1da68:	mul	r0, r0, r1
   1da6c:	str	r0, [fp, #-20]	; 0xffffffec
   1da70:	b	1e098 <__assert_fail@plt+0xcfc0>
   1da74:	ldr	r0, [fp, #-12]
   1da78:	ldr	r1, [fp, #-16]
   1da7c:	mul	r0, r0, r1
   1da80:	str	r0, [fp, #-20]	; 0xffffffec
   1da84:	b	1e0b0 <__assert_fail@plt+0xcfd8>
   1da88:	ldr	r0, [fp, #-16]
   1da8c:	cmp	r0, #0
   1da90:	bcs	1db9c <__assert_fail@plt+0xcac4>
   1da94:	ldr	r0, [fp, #-12]
   1da98:	cmp	r0, #0
   1da9c:	bcs	1db24 <__assert_fail@plt+0xca4c>
   1daa0:	b	1dac0 <__assert_fail@plt+0xc9e8>
   1daa4:	ldr	r0, [fp, #-12]
   1daa8:	ldr	r1, [fp, #-16]
   1daac:	mvn	r2, #0
   1dab0:	udiv	r1, r2, r1
   1dab4:	cmp	r0, r1
   1dab8:	bcc	1dc38 <__assert_fail@plt+0xcb60>
   1dabc:	b	1dc4c <__assert_fail@plt+0xcb74>
   1dac0:	b	1dad4 <__assert_fail@plt+0xc9fc>
   1dac4:	ldr	r0, [fp, #-16]
   1dac8:	cmp	r0, #1
   1dacc:	bcc	1dae4 <__assert_fail@plt+0xca0c>
   1dad0:	b	1daf0 <__assert_fail@plt+0xca18>
   1dad4:	ldr	r0, [fp, #-16]
   1dad8:	movw	r1, #0
   1dadc:	cmp	r1, r0
   1dae0:	bcs	1daf0 <__assert_fail@plt+0xca18>
   1dae4:	movw	r0, #1
   1dae8:	str	r0, [sp, #44]	; 0x2c
   1daec:	b	1db08 <__assert_fail@plt+0xca30>
   1daf0:	ldr	r0, [fp, #-16]
   1daf4:	movw	r1, #0
   1daf8:	sub	r0, r1, r0
   1dafc:	mvn	r1, #0
   1db00:	udiv	r0, r1, r0
   1db04:	str	r0, [sp, #44]	; 0x2c
   1db08:	ldr	r0, [sp, #44]	; 0x2c
   1db0c:	ldr	r1, [fp, #-12]
   1db10:	mvn	r2, #0
   1db14:	sub	r1, r2, r1
   1db18:	cmp	r0, r1
   1db1c:	bls	1dc38 <__assert_fail@plt+0xcb60>
   1db20:	b	1dc4c <__assert_fail@plt+0xcb74>
   1db24:	b	1db2c <__assert_fail@plt+0xca54>
   1db28:	b	1db30 <__assert_fail@plt+0xca58>
   1db2c:	b	1db80 <__assert_fail@plt+0xcaa8>
   1db30:	ldr	r0, [fp, #-16]
   1db34:	cmn	r0, #1
   1db38:	bne	1db80 <__assert_fail@plt+0xcaa8>
   1db3c:	b	1db58 <__assert_fail@plt+0xca80>
   1db40:	ldr	r0, [fp, #-12]
   1db44:	add	r0, r0, #0
   1db48:	movw	r1, #0
   1db4c:	cmp	r1, r0
   1db50:	bcc	1dc38 <__assert_fail@plt+0xcb60>
   1db54:	b	1dc4c <__assert_fail@plt+0xcb74>
   1db58:	ldr	r0, [fp, #-12]
   1db5c:	movw	r1, #0
   1db60:	cmp	r1, r0
   1db64:	bcs	1dc4c <__assert_fail@plt+0xcb74>
   1db68:	ldr	r0, [fp, #-12]
   1db6c:	sub	r0, r0, #1
   1db70:	mvn	r1, #0
   1db74:	cmp	r1, r0
   1db78:	bcc	1dc38 <__assert_fail@plt+0xcb60>
   1db7c:	b	1dc4c <__assert_fail@plt+0xcb74>
   1db80:	ldr	r0, [fp, #-16]
   1db84:	movw	r1, #0
   1db88:	udiv	r0, r1, r0
   1db8c:	ldr	r1, [fp, #-12]
   1db90:	cmp	r0, r1
   1db94:	bcc	1dc38 <__assert_fail@plt+0xcb60>
   1db98:	b	1dc4c <__assert_fail@plt+0xcb74>
   1db9c:	ldr	r0, [fp, #-16]
   1dba0:	cmp	r0, #0
   1dba4:	bne	1dbac <__assert_fail@plt+0xcad4>
   1dba8:	b	1dc4c <__assert_fail@plt+0xcb74>
   1dbac:	ldr	r0, [fp, #-12]
   1dbb0:	cmp	r0, #0
   1dbb4:	bcs	1dc20 <__assert_fail@plt+0xcb48>
   1dbb8:	b	1dbc0 <__assert_fail@plt+0xcae8>
   1dbbc:	b	1dbc4 <__assert_fail@plt+0xcaec>
   1dbc0:	b	1dc04 <__assert_fail@plt+0xcb2c>
   1dbc4:	ldr	r0, [fp, #-12]
   1dbc8:	cmn	r0, #1
   1dbcc:	bne	1dc04 <__assert_fail@plt+0xcb2c>
   1dbd0:	b	1dbec <__assert_fail@plt+0xcb14>
   1dbd4:	ldr	r0, [fp, #-16]
   1dbd8:	add	r0, r0, #0
   1dbdc:	movw	r1, #0
   1dbe0:	cmp	r1, r0
   1dbe4:	bcc	1dc38 <__assert_fail@plt+0xcb60>
   1dbe8:	b	1dc4c <__assert_fail@plt+0xcb74>
   1dbec:	ldr	r0, [fp, #-16]
   1dbf0:	sub	r0, r0, #1
   1dbf4:	mvn	r1, #0
   1dbf8:	cmp	r1, r0
   1dbfc:	bcc	1dc38 <__assert_fail@plt+0xcb60>
   1dc00:	b	1dc4c <__assert_fail@plt+0xcb74>
   1dc04:	ldr	r0, [fp, #-12]
   1dc08:	movw	r1, #0
   1dc0c:	udiv	r0, r1, r0
   1dc10:	ldr	r1, [fp, #-16]
   1dc14:	cmp	r0, r1
   1dc18:	bcc	1dc38 <__assert_fail@plt+0xcb60>
   1dc1c:	b	1dc4c <__assert_fail@plt+0xcb74>
   1dc20:	ldr	r0, [fp, #-16]
   1dc24:	mvn	r1, #0
   1dc28:	udiv	r0, r1, r0
   1dc2c:	ldr	r1, [fp, #-12]
   1dc30:	cmp	r0, r1
   1dc34:	bcs	1dc4c <__assert_fail@plt+0xcb74>
   1dc38:	ldr	r0, [fp, #-12]
   1dc3c:	ldr	r1, [fp, #-16]
   1dc40:	mul	r0, r0, r1
   1dc44:	str	r0, [fp, #-20]	; 0xffffffec
   1dc48:	b	1e098 <__assert_fail@plt+0xcfc0>
   1dc4c:	ldr	r0, [fp, #-12]
   1dc50:	ldr	r1, [fp, #-16]
   1dc54:	mul	r0, r0, r1
   1dc58:	str	r0, [fp, #-20]	; 0xffffffec
   1dc5c:	b	1e0b0 <__assert_fail@plt+0xcfd8>
   1dc60:	b	1de7c <__assert_fail@plt+0xcda4>
   1dc64:	ldr	r0, [fp, #-16]
   1dc68:	cmp	r0, #0
   1dc6c:	bcs	1ddac <__assert_fail@plt+0xccd4>
   1dc70:	ldr	r0, [fp, #-12]
   1dc74:	cmp	r0, #0
   1dc78:	bcs	1dd38 <__assert_fail@plt+0xcc60>
   1dc7c:	b	1dc80 <__assert_fail@plt+0xcba8>
   1dc80:	ldr	r0, [fp, #-12]
   1dc84:	ldr	r2, [fp, #-16]
   1dc88:	mvn	r1, #0
   1dc8c:	mvn	r3, #-2147483648	; 0x80000000
   1dc90:	mov	ip, #0
   1dc94:	str	r0, [sp, #40]	; 0x28
   1dc98:	mov	r0, r1
   1dc9c:	mov	r1, r3
   1dca0:	mov	r3, ip
   1dca4:	bl	1e9e4 <__assert_fail@plt+0xd90c>
   1dca8:	ldr	r2, [sp, #40]	; 0x28
   1dcac:	subs	r0, r2, r0
   1dcb0:	rscs	r1, r1, #0
   1dcb4:	blt	1de54 <__assert_fail@plt+0xcd7c>
   1dcb8:	b	1de68 <__assert_fail@plt+0xcd90>
   1dcbc:	b	1dcd0 <__assert_fail@plt+0xcbf8>
   1dcc0:	ldr	r0, [fp, #-16]
   1dcc4:	cmp	r0, #1
   1dcc8:	bcc	1dce0 <__assert_fail@plt+0xcc08>
   1dccc:	b	1dcf4 <__assert_fail@plt+0xcc1c>
   1dcd0:	ldr	r0, [fp, #-16]
   1dcd4:	movw	r1, #0
   1dcd8:	cmp	r1, r0
   1dcdc:	bcs	1dcf4 <__assert_fail@plt+0xcc1c>
   1dce0:	mov	r0, #0
   1dce4:	mvn	r1, #0
   1dce8:	str	r1, [sp, #36]	; 0x24
   1dcec:	str	r0, [sp, #32]
   1dcf0:	b	1dd18 <__assert_fail@plt+0xcc40>
   1dcf4:	ldr	r0, [fp, #-16]
   1dcf8:	rsb	r2, r0, #0
   1dcfc:	mvn	r0, #0
   1dd00:	mvn	r1, #-2147483648	; 0x80000000
   1dd04:	mov	r3, #0
   1dd08:	bl	1e9e4 <__assert_fail@plt+0xd90c>
   1dd0c:	str	r0, [sp, #36]	; 0x24
   1dd10:	str	r1, [sp, #32]
   1dd14:	b	1dd18 <__assert_fail@plt+0xcc40>
   1dd18:	ldr	r0, [sp, #32]
   1dd1c:	ldr	r1, [sp, #36]	; 0x24
   1dd20:	ldr	r2, [fp, #-12]
   1dd24:	mvn	r2, r2
   1dd28:	subs	r1, r2, r1
   1dd2c:	rscs	r0, r0, #0
   1dd30:	bge	1de54 <__assert_fail@plt+0xcd7c>
   1dd34:	b	1de68 <__assert_fail@plt+0xcd90>
   1dd38:	ldr	r0, [fp, #-16]
   1dd3c:	cmn	r0, #1
   1dd40:	bne	1dd80 <__assert_fail@plt+0xcca8>
   1dd44:	b	1dd60 <__assert_fail@plt+0xcc88>
   1dd48:	ldr	r0, [fp, #-12]
   1dd4c:	rsbs	r0, r0, #0
   1dd50:	mov	r1, #0
   1dd54:	sbcs	r1, r1, #-2147483648	; 0x80000000
   1dd58:	blt	1de54 <__assert_fail@plt+0xcd7c>
   1dd5c:	b	1de68 <__assert_fail@plt+0xcd90>
   1dd60:	ldr	r0, [fp, #-12]
   1dd64:	movw	r1, #0
   1dd68:	cmp	r1, r0
   1dd6c:	bcs	1de68 <__assert_fail@plt+0xcd90>
   1dd70:	mov	r0, #0
   1dd74:	cmp	r0, #0
   1dd78:	bne	1de54 <__assert_fail@plt+0xcd7c>
   1dd7c:	b	1de68 <__assert_fail@plt+0xcd90>
   1dd80:	ldr	r2, [fp, #-16]
   1dd84:	mov	r1, #-2147483648	; 0x80000000
   1dd88:	mov	r0, #0
   1dd8c:	str	r0, [sp, #28]
   1dd90:	ldr	r3, [sp, #28]
   1dd94:	bl	1e910 <__assert_fail@plt+0xd838>
   1dd98:	ldr	r2, [fp, #-12]
   1dd9c:	subs	r0, r0, r2
   1dda0:	sbcs	r1, r1, #0
   1dda4:	blt	1de54 <__assert_fail@plt+0xcd7c>
   1dda8:	b	1de68 <__assert_fail@plt+0xcd90>
   1ddac:	ldr	r0, [fp, #-16]
   1ddb0:	cmp	r0, #0
   1ddb4:	bne	1ddbc <__assert_fail@plt+0xcce4>
   1ddb8:	b	1de68 <__assert_fail@plt+0xcd90>
   1ddbc:	ldr	r0, [fp, #-12]
   1ddc0:	cmp	r0, #0
   1ddc4:	bcs	1de2c <__assert_fail@plt+0xcd54>
   1ddc8:	ldr	r0, [fp, #-12]
   1ddcc:	cmn	r0, #1
   1ddd0:	bne	1de00 <__assert_fail@plt+0xcd28>
   1ddd4:	b	1ddf0 <__assert_fail@plt+0xcd18>
   1ddd8:	ldr	r0, [fp, #-16]
   1dddc:	rsbs	r0, r0, #0
   1dde0:	mov	r1, #0
   1dde4:	sbcs	r1, r1, #-2147483648	; 0x80000000
   1dde8:	blt	1de54 <__assert_fail@plt+0xcd7c>
   1ddec:	b	1de68 <__assert_fail@plt+0xcd90>
   1ddf0:	mov	r0, #0
   1ddf4:	cmp	r0, #0
   1ddf8:	bne	1de54 <__assert_fail@plt+0xcd7c>
   1ddfc:	b	1de68 <__assert_fail@plt+0xcd90>
   1de00:	ldr	r2, [fp, #-12]
   1de04:	mov	r1, #-2147483648	; 0x80000000
   1de08:	mov	r0, #0
   1de0c:	str	r0, [sp, #24]
   1de10:	ldr	r3, [sp, #24]
   1de14:	bl	1e910 <__assert_fail@plt+0xd838>
   1de18:	ldr	r2, [fp, #-16]
   1de1c:	subs	r0, r0, r2
   1de20:	sbcs	r1, r1, #0
   1de24:	blt	1de54 <__assert_fail@plt+0xcd7c>
   1de28:	b	1de68 <__assert_fail@plt+0xcd90>
   1de2c:	ldr	r2, [fp, #-16]
   1de30:	mvn	r0, #0
   1de34:	mvn	r1, #-2147483648	; 0x80000000
   1de38:	mov	r3, #0
   1de3c:	bl	1e9e4 <__assert_fail@plt+0xd90c>
   1de40:	ldr	r2, [fp, #-12]
   1de44:	subs	r0, r0, r2
   1de48:	sbcs	r1, r1, #0
   1de4c:	bge	1de68 <__assert_fail@plt+0xcd90>
   1de50:	b	1de54 <__assert_fail@plt+0xcd7c>
   1de54:	ldr	r0, [fp, #-12]
   1de58:	ldr	r1, [fp, #-16]
   1de5c:	mul	r0, r0, r1
   1de60:	str	r0, [fp, #-20]	; 0xffffffec
   1de64:	b	1e098 <__assert_fail@plt+0xcfc0>
   1de68:	ldr	r0, [fp, #-12]
   1de6c:	ldr	r1, [fp, #-16]
   1de70:	mul	r0, r0, r1
   1de74:	str	r0, [fp, #-20]	; 0xffffffec
   1de78:	b	1e0b0 <__assert_fail@plt+0xcfd8>
   1de7c:	ldr	r0, [fp, #-16]
   1de80:	cmp	r0, #0
   1de84:	bcs	1dfc0 <__assert_fail@plt+0xcee8>
   1de88:	ldr	r0, [fp, #-12]
   1de8c:	cmp	r0, #0
   1de90:	bcs	1df48 <__assert_fail@plt+0xce70>
   1de94:	b	1dec8 <__assert_fail@plt+0xcdf0>
   1de98:	ldr	r0, [fp, #-12]
   1de9c:	ldr	r2, [fp, #-16]
   1dea0:	mvn	r1, #0
   1dea4:	mov	r3, #0
   1dea8:	str	r0, [sp, #20]
   1deac:	mov	r0, r1
   1deb0:	bl	1e9e4 <__assert_fail@plt+0xd90c>
   1deb4:	ldr	r2, [sp, #20]
   1deb8:	subs	r0, r2, r0
   1debc:	rscs	r1, r1, #0
   1dec0:	bcc	1e070 <__assert_fail@plt+0xcf98>
   1dec4:	b	1e084 <__assert_fail@plt+0xcfac>
   1dec8:	b	1dedc <__assert_fail@plt+0xce04>
   1decc:	ldr	r0, [fp, #-16]
   1ded0:	cmp	r0, #1
   1ded4:	bcc	1deec <__assert_fail@plt+0xce14>
   1ded8:	b	1df00 <__assert_fail@plt+0xce28>
   1dedc:	ldr	r0, [fp, #-16]
   1dee0:	movw	r1, #0
   1dee4:	cmp	r1, r0
   1dee8:	bcs	1df00 <__assert_fail@plt+0xce28>
   1deec:	mov	r0, #1
   1def0:	mvn	r1, #0
   1def4:	str	r1, [sp, #16]
   1def8:	str	r0, [sp, #12]
   1defc:	b	1df28 <__assert_fail@plt+0xce50>
   1df00:	ldr	r0, [fp, #-16]
   1df04:	rsb	r2, r0, #0
   1df08:	mvn	r0, #0
   1df0c:	mov	r3, #0
   1df10:	str	r0, [sp, #8]
   1df14:	ldr	r1, [sp, #8]
   1df18:	bl	1e9e4 <__assert_fail@plt+0xd90c>
   1df1c:	str	r0, [sp, #16]
   1df20:	str	r1, [sp, #12]
   1df24:	b	1df28 <__assert_fail@plt+0xce50>
   1df28:	ldr	r0, [sp, #12]
   1df2c:	ldr	r1, [sp, #16]
   1df30:	ldr	r2, [fp, #-12]
   1df34:	mvn	r2, r2
   1df38:	subs	r1, r2, r1
   1df3c:	rscs	r0, r0, #0
   1df40:	bcs	1e070 <__assert_fail@plt+0xcf98>
   1df44:	b	1e084 <__assert_fail@plt+0xcfac>
   1df48:	b	1df50 <__assert_fail@plt+0xce78>
   1df4c:	b	1df54 <__assert_fail@plt+0xce7c>
   1df50:	b	1dfa4 <__assert_fail@plt+0xcecc>
   1df54:	ldr	r0, [fp, #-16]
   1df58:	cmn	r0, #1
   1df5c:	bne	1dfa4 <__assert_fail@plt+0xcecc>
   1df60:	b	1df7c <__assert_fail@plt+0xcea4>
   1df64:	ldr	r0, [fp, #-12]
   1df68:	add	r0, r0, #0
   1df6c:	movw	r1, #0
   1df70:	cmp	r1, r0
   1df74:	bcc	1e070 <__assert_fail@plt+0xcf98>
   1df78:	b	1e084 <__assert_fail@plt+0xcfac>
   1df7c:	ldr	r0, [fp, #-12]
   1df80:	movw	r1, #0
   1df84:	cmp	r1, r0
   1df88:	bcs	1e084 <__assert_fail@plt+0xcfac>
   1df8c:	ldr	r0, [fp, #-12]
   1df90:	sub	r0, r0, #1
   1df94:	mvn	r1, #0
   1df98:	cmp	r1, r0
   1df9c:	bcc	1e070 <__assert_fail@plt+0xcf98>
   1dfa0:	b	1e084 <__assert_fail@plt+0xcfac>
   1dfa4:	ldr	r0, [fp, #-16]
   1dfa8:	movw	r1, #0
   1dfac:	udiv	r0, r1, r0
   1dfb0:	ldr	r1, [fp, #-12]
   1dfb4:	cmp	r0, r1
   1dfb8:	bcc	1e070 <__assert_fail@plt+0xcf98>
   1dfbc:	b	1e084 <__assert_fail@plt+0xcfac>
   1dfc0:	ldr	r0, [fp, #-16]
   1dfc4:	cmp	r0, #0
   1dfc8:	bne	1dfd0 <__assert_fail@plt+0xcef8>
   1dfcc:	b	1e084 <__assert_fail@plt+0xcfac>
   1dfd0:	ldr	r0, [fp, #-12]
   1dfd4:	cmp	r0, #0
   1dfd8:	bcs	1e044 <__assert_fail@plt+0xcf6c>
   1dfdc:	b	1dfe4 <__assert_fail@plt+0xcf0c>
   1dfe0:	b	1dfe8 <__assert_fail@plt+0xcf10>
   1dfe4:	b	1e028 <__assert_fail@plt+0xcf50>
   1dfe8:	ldr	r0, [fp, #-12]
   1dfec:	cmn	r0, #1
   1dff0:	bne	1e028 <__assert_fail@plt+0xcf50>
   1dff4:	b	1e010 <__assert_fail@plt+0xcf38>
   1dff8:	ldr	r0, [fp, #-16]
   1dffc:	add	r0, r0, #0
   1e000:	movw	r1, #0
   1e004:	cmp	r1, r0
   1e008:	bcc	1e070 <__assert_fail@plt+0xcf98>
   1e00c:	b	1e084 <__assert_fail@plt+0xcfac>
   1e010:	ldr	r0, [fp, #-16]
   1e014:	sub	r0, r0, #1
   1e018:	mvn	r1, #0
   1e01c:	cmp	r1, r0
   1e020:	bcc	1e070 <__assert_fail@plt+0xcf98>
   1e024:	b	1e084 <__assert_fail@plt+0xcfac>
   1e028:	ldr	r0, [fp, #-12]
   1e02c:	movw	r1, #0
   1e030:	udiv	r0, r1, r0
   1e034:	ldr	r1, [fp, #-16]
   1e038:	cmp	r0, r1
   1e03c:	bcc	1e070 <__assert_fail@plt+0xcf98>
   1e040:	b	1e084 <__assert_fail@plt+0xcfac>
   1e044:	ldr	r2, [fp, #-16]
   1e048:	mvn	r0, #0
   1e04c:	mov	r3, #0
   1e050:	str	r0, [sp, #4]
   1e054:	ldr	r1, [sp, #4]
   1e058:	bl	1e9e4 <__assert_fail@plt+0xd90c>
   1e05c:	ldr	r2, [fp, #-12]
   1e060:	subs	r0, r0, r2
   1e064:	sbcs	r1, r1, #0
   1e068:	bcs	1e084 <__assert_fail@plt+0xcfac>
   1e06c:	b	1e070 <__assert_fail@plt+0xcf98>
   1e070:	ldr	r0, [fp, #-12]
   1e074:	ldr	r1, [fp, #-16]
   1e078:	mul	r0, r0, r1
   1e07c:	str	r0, [fp, #-20]	; 0xffffffec
   1e080:	b	1e098 <__assert_fail@plt+0xcfc0>
   1e084:	ldr	r0, [fp, #-12]
   1e088:	ldr	r1, [fp, #-16]
   1e08c:	mul	r0, r0, r1
   1e090:	str	r0, [fp, #-20]	; 0xffffffec
   1e094:	b	1e0b0 <__assert_fail@plt+0xcfd8>
   1e098:	bl	1100c <__errno_location@plt>
   1e09c:	movw	r1, #12
   1e0a0:	str	r1, [r0]
   1e0a4:	movw	r0, #0
   1e0a8:	str	r0, [fp, #-4]
   1e0ac:	b	1e0c0 <__assert_fail@plt+0xcfe8>
   1e0b0:	ldr	r0, [fp, #-8]
   1e0b4:	ldr	r1, [fp, #-20]	; 0xffffffec
   1e0b8:	bl	1c5ac <__assert_fail@plt+0xb4d4>
   1e0bc:	str	r0, [fp, #-4]
   1e0c0:	ldr	r0, [fp, #-4]
   1e0c4:	mov	sp, fp
   1e0c8:	pop	{fp, pc}
   1e0cc:	svcvc	0x00ffffff
   1e0d0:	andhi	r0, r0, r0
   1e0d4:			; <UNDEFINED> instruction: 0xffff8000
   1e0d8:	sub	sp, sp, #12
   1e0dc:	str	r0, [sp, #4]
   1e0e0:	ldr	r0, [sp, #4]
   1e0e4:	sub	r1, r0, #48	; 0x30
   1e0e8:	cmp	r1, #10
   1e0ec:	str	r0, [sp]
   1e0f0:	bcc	1e120 <__assert_fail@plt+0xd048>
   1e0f4:	b	1e0f8 <__assert_fail@plt+0xd020>
   1e0f8:	ldr	r0, [sp]
   1e0fc:	sub	r1, r0, #65	; 0x41
   1e100:	cmp	r1, #26
   1e104:	bcc	1e120 <__assert_fail@plt+0xd048>
   1e108:	b	1e10c <__assert_fail@plt+0xd034>
   1e10c:	ldr	r0, [sp]
   1e110:	sub	r1, r0, #97	; 0x61
   1e114:	cmp	r1, #25
   1e118:	bhi	1e130 <__assert_fail@plt+0xd058>
   1e11c:	b	1e120 <__assert_fail@plt+0xd048>
   1e120:	movw	r0, #1
   1e124:	and	r0, r0, #1
   1e128:	strb	r0, [sp, #11]
   1e12c:	b	1e13c <__assert_fail@plt+0xd064>
   1e130:	movw	r0, #0
   1e134:	and	r0, r0, #1
   1e138:	strb	r0, [sp, #11]
   1e13c:	ldrb	r0, [sp, #11]
   1e140:	and	r0, r0, #1
   1e144:	add	sp, sp, #12
   1e148:	bx	lr
   1e14c:	sub	sp, sp, #12
   1e150:	str	r0, [sp, #4]
   1e154:	ldr	r0, [sp, #4]
   1e158:	sub	r1, r0, #65	; 0x41
   1e15c:	cmp	r1, #26
   1e160:	str	r0, [sp]
   1e164:	bcc	1e180 <__assert_fail@plt+0xd0a8>
   1e168:	b	1e16c <__assert_fail@plt+0xd094>
   1e16c:	ldr	r0, [sp]
   1e170:	sub	r1, r0, #97	; 0x61
   1e174:	cmp	r1, #25
   1e178:	bhi	1e190 <__assert_fail@plt+0xd0b8>
   1e17c:	b	1e180 <__assert_fail@plt+0xd0a8>
   1e180:	movw	r0, #1
   1e184:	and	r0, r0, #1
   1e188:	strb	r0, [sp, #11]
   1e18c:	b	1e19c <__assert_fail@plt+0xd0c4>
   1e190:	movw	r0, #0
   1e194:	and	r0, r0, #1
   1e198:	strb	r0, [sp, #11]
   1e19c:	ldrb	r0, [sp, #11]
   1e1a0:	and	r0, r0, #1
   1e1a4:	add	sp, sp, #12
   1e1a8:	bx	lr
   1e1ac:	sub	sp, sp, #8
   1e1b0:	str	r0, [sp]
   1e1b4:	ldr	r0, [sp]
   1e1b8:	cmp	r0, #127	; 0x7f
   1e1bc:	bhi	1e1d4 <__assert_fail@plt+0xd0fc>
   1e1c0:	b	1e1c4 <__assert_fail@plt+0xd0ec>
   1e1c4:	movw	r0, #1
   1e1c8:	and	r0, r0, #1
   1e1cc:	strb	r0, [sp, #7]
   1e1d0:	b	1e1e0 <__assert_fail@plt+0xd108>
   1e1d4:	movw	r0, #0
   1e1d8:	and	r0, r0, #1
   1e1dc:	strb	r0, [sp, #7]
   1e1e0:	ldrb	r0, [sp, #7]
   1e1e4:	and	r0, r0, #1
   1e1e8:	add	sp, sp, #8
   1e1ec:	bx	lr
   1e1f0:	sub	sp, sp, #8
   1e1f4:	str	r0, [sp, #4]
   1e1f8:	ldr	r0, [sp, #4]
   1e1fc:	cmp	r0, #32
   1e200:	movw	r0, #1
   1e204:	str	r0, [sp]
   1e208:	beq	1e220 <__assert_fail@plt+0xd148>
   1e20c:	ldr	r0, [sp, #4]
   1e210:	cmp	r0, #9
   1e214:	movw	r0, #0
   1e218:	moveq	r0, #1
   1e21c:	str	r0, [sp]
   1e220:	ldr	r0, [sp]
   1e224:	and	r0, r0, #1
   1e228:	add	sp, sp, #8
   1e22c:	bx	lr
   1e230:	sub	sp, sp, #12
   1e234:	str	r0, [sp, #4]
   1e238:	ldr	r0, [sp, #4]
   1e23c:	cmp	r0, #32
   1e240:	str	r0, [sp]
   1e244:	bcc	1e25c <__assert_fail@plt+0xd184>
   1e248:	b	1e24c <__assert_fail@plt+0xd174>
   1e24c:	ldr	r0, [sp]
   1e250:	cmp	r0, #127	; 0x7f
   1e254:	bne	1e26c <__assert_fail@plt+0xd194>
   1e258:	b	1e25c <__assert_fail@plt+0xd184>
   1e25c:	movw	r0, #1
   1e260:	and	r0, r0, #1
   1e264:	strb	r0, [sp, #11]
   1e268:	b	1e278 <__assert_fail@plt+0xd1a0>
   1e26c:	movw	r0, #0
   1e270:	and	r0, r0, #1
   1e274:	strb	r0, [sp, #11]
   1e278:	ldrb	r0, [sp, #11]
   1e27c:	and	r0, r0, #1
   1e280:	add	sp, sp, #12
   1e284:	bx	lr
   1e288:	sub	sp, sp, #8
   1e28c:	str	r0, [sp]
   1e290:	ldr	r0, [sp]
   1e294:	sub	r0, r0, #48	; 0x30
   1e298:	cmp	r0, #9
   1e29c:	bhi	1e2b4 <__assert_fail@plt+0xd1dc>
   1e2a0:	b	1e2a4 <__assert_fail@plt+0xd1cc>
   1e2a4:	movw	r0, #1
   1e2a8:	and	r0, r0, #1
   1e2ac:	strb	r0, [sp, #7]
   1e2b0:	b	1e2c0 <__assert_fail@plt+0xd1e8>
   1e2b4:	movw	r0, #0
   1e2b8:	and	r0, r0, #1
   1e2bc:	strb	r0, [sp, #7]
   1e2c0:	ldrb	r0, [sp, #7]
   1e2c4:	and	r0, r0, #1
   1e2c8:	add	sp, sp, #8
   1e2cc:	bx	lr
   1e2d0:	sub	sp, sp, #8
   1e2d4:	str	r0, [sp]
   1e2d8:	ldr	r0, [sp]
   1e2dc:	sub	r0, r0, #33	; 0x21
   1e2e0:	cmp	r0, #93	; 0x5d
   1e2e4:	bhi	1e2fc <__assert_fail@plt+0xd224>
   1e2e8:	b	1e2ec <__assert_fail@plt+0xd214>
   1e2ec:	movw	r0, #1
   1e2f0:	and	r0, r0, #1
   1e2f4:	strb	r0, [sp, #7]
   1e2f8:	b	1e308 <__assert_fail@plt+0xd230>
   1e2fc:	movw	r0, #0
   1e300:	and	r0, r0, #1
   1e304:	strb	r0, [sp, #7]
   1e308:	ldrb	r0, [sp, #7]
   1e30c:	and	r0, r0, #1
   1e310:	add	sp, sp, #8
   1e314:	bx	lr
   1e318:	sub	sp, sp, #8
   1e31c:	str	r0, [sp]
   1e320:	ldr	r0, [sp]
   1e324:	sub	r0, r0, #97	; 0x61
   1e328:	cmp	r0, #25
   1e32c:	bhi	1e344 <__assert_fail@plt+0xd26c>
   1e330:	b	1e334 <__assert_fail@plt+0xd25c>
   1e334:	movw	r0, #1
   1e338:	and	r0, r0, #1
   1e33c:	strb	r0, [sp, #7]
   1e340:	b	1e350 <__assert_fail@plt+0xd278>
   1e344:	movw	r0, #0
   1e348:	and	r0, r0, #1
   1e34c:	strb	r0, [sp, #7]
   1e350:	ldrb	r0, [sp, #7]
   1e354:	and	r0, r0, #1
   1e358:	add	sp, sp, #8
   1e35c:	bx	lr
   1e360:	sub	sp, sp, #8
   1e364:	str	r0, [sp]
   1e368:	ldr	r0, [sp]
   1e36c:	sub	r0, r0, #32
   1e370:	cmp	r0, #94	; 0x5e
   1e374:	bhi	1e38c <__assert_fail@plt+0xd2b4>
   1e378:	b	1e37c <__assert_fail@plt+0xd2a4>
   1e37c:	movw	r0, #1
   1e380:	and	r0, r0, #1
   1e384:	strb	r0, [sp, #7]
   1e388:	b	1e398 <__assert_fail@plt+0xd2c0>
   1e38c:	movw	r0, #0
   1e390:	and	r0, r0, #1
   1e394:	strb	r0, [sp, #7]
   1e398:	ldrb	r0, [sp, #7]
   1e39c:	and	r0, r0, #1
   1e3a0:	add	sp, sp, #8
   1e3a4:	bx	lr
   1e3a8:	sub	sp, sp, #12
   1e3ac:	str	r0, [sp, #4]
   1e3b0:	ldr	r0, [sp, #4]
   1e3b4:	sub	r0, r0, #33	; 0x21
   1e3b8:	cmp	r0, #93	; 0x5d
   1e3bc:	str	r0, [sp]
   1e3c0:	bhi	1e55c <__assert_fail@plt+0xd484>
   1e3c4:	add	r0, pc, #8
   1e3c8:	ldr	r1, [sp]
   1e3cc:	ldr	r0, [r0, r1, lsl #2]
   1e3d0:	mov	pc, r0
   1e3d4:	andeq	lr, r1, ip, asr #10
   1e3d8:	andeq	lr, r1, ip, asr #10
   1e3dc:	andeq	lr, r1, ip, asr #10
   1e3e0:	andeq	lr, r1, ip, asr #10
   1e3e4:	andeq	lr, r1, ip, asr #10
   1e3e8:	andeq	lr, r1, ip, asr #10
   1e3ec:	andeq	lr, r1, ip, asr #10
   1e3f0:	andeq	lr, r1, ip, asr #10
   1e3f4:	andeq	lr, r1, ip, asr #10
   1e3f8:	andeq	lr, r1, ip, asr #10
   1e3fc:	andeq	lr, r1, ip, asr #10
   1e400:	andeq	lr, r1, ip, asr #10
   1e404:	andeq	lr, r1, ip, asr #10
   1e408:	andeq	lr, r1, ip, asr #10
   1e40c:	andeq	lr, r1, ip, asr #10
   1e410:	andeq	lr, r1, ip, asr r5
   1e414:	andeq	lr, r1, ip, asr r5
   1e418:	andeq	lr, r1, ip, asr r5
   1e41c:	andeq	lr, r1, ip, asr r5
   1e420:	andeq	lr, r1, ip, asr r5
   1e424:	andeq	lr, r1, ip, asr r5
   1e428:	andeq	lr, r1, ip, asr r5
   1e42c:	andeq	lr, r1, ip, asr r5
   1e430:	andeq	lr, r1, ip, asr r5
   1e434:	andeq	lr, r1, ip, asr r5
   1e438:	andeq	lr, r1, ip, asr #10
   1e43c:	andeq	lr, r1, ip, asr #10
   1e440:	andeq	lr, r1, ip, asr #10
   1e444:	andeq	lr, r1, ip, asr #10
   1e448:	andeq	lr, r1, ip, asr #10
   1e44c:	andeq	lr, r1, ip, asr #10
   1e450:	andeq	lr, r1, ip, asr #10
   1e454:	andeq	lr, r1, ip, asr r5
   1e458:	andeq	lr, r1, ip, asr r5
   1e45c:	andeq	lr, r1, ip, asr r5
   1e460:	andeq	lr, r1, ip, asr r5
   1e464:	andeq	lr, r1, ip, asr r5
   1e468:	andeq	lr, r1, ip, asr r5
   1e46c:	andeq	lr, r1, ip, asr r5
   1e470:	andeq	lr, r1, ip, asr r5
   1e474:	andeq	lr, r1, ip, asr r5
   1e478:	andeq	lr, r1, ip, asr r5
   1e47c:	andeq	lr, r1, ip, asr r5
   1e480:	andeq	lr, r1, ip, asr r5
   1e484:	andeq	lr, r1, ip, asr r5
   1e488:	andeq	lr, r1, ip, asr r5
   1e48c:	andeq	lr, r1, ip, asr r5
   1e490:	andeq	lr, r1, ip, asr r5
   1e494:	andeq	lr, r1, ip, asr r5
   1e498:	andeq	lr, r1, ip, asr r5
   1e49c:	andeq	lr, r1, ip, asr r5
   1e4a0:	andeq	lr, r1, ip, asr r5
   1e4a4:	andeq	lr, r1, ip, asr r5
   1e4a8:	andeq	lr, r1, ip, asr r5
   1e4ac:	andeq	lr, r1, ip, asr r5
   1e4b0:	andeq	lr, r1, ip, asr r5
   1e4b4:	andeq	lr, r1, ip, asr r5
   1e4b8:	andeq	lr, r1, ip, asr r5
   1e4bc:	andeq	lr, r1, ip, asr #10
   1e4c0:	andeq	lr, r1, ip, asr #10
   1e4c4:	andeq	lr, r1, ip, asr #10
   1e4c8:	andeq	lr, r1, ip, asr #10
   1e4cc:	andeq	lr, r1, ip, asr #10
   1e4d0:	andeq	lr, r1, ip, asr #10
   1e4d4:	andeq	lr, r1, ip, asr r5
   1e4d8:	andeq	lr, r1, ip, asr r5
   1e4dc:	andeq	lr, r1, ip, asr r5
   1e4e0:	andeq	lr, r1, ip, asr r5
   1e4e4:	andeq	lr, r1, ip, asr r5
   1e4e8:	andeq	lr, r1, ip, asr r5
   1e4ec:	andeq	lr, r1, ip, asr r5
   1e4f0:	andeq	lr, r1, ip, asr r5
   1e4f4:	andeq	lr, r1, ip, asr r5
   1e4f8:	andeq	lr, r1, ip, asr r5
   1e4fc:	andeq	lr, r1, ip, asr r5
   1e500:	andeq	lr, r1, ip, asr r5
   1e504:	andeq	lr, r1, ip, asr r5
   1e508:	andeq	lr, r1, ip, asr r5
   1e50c:	andeq	lr, r1, ip, asr r5
   1e510:	andeq	lr, r1, ip, asr r5
   1e514:	andeq	lr, r1, ip, asr r5
   1e518:	andeq	lr, r1, ip, asr r5
   1e51c:	andeq	lr, r1, ip, asr r5
   1e520:	andeq	lr, r1, ip, asr r5
   1e524:	andeq	lr, r1, ip, asr r5
   1e528:	andeq	lr, r1, ip, asr r5
   1e52c:	andeq	lr, r1, ip, asr r5
   1e530:	andeq	lr, r1, ip, asr r5
   1e534:	andeq	lr, r1, ip, asr r5
   1e538:	andeq	lr, r1, ip, asr r5
   1e53c:	andeq	lr, r1, ip, asr #10
   1e540:	andeq	lr, r1, ip, asr #10
   1e544:	andeq	lr, r1, ip, asr #10
   1e548:	andeq	lr, r1, ip, asr #10
   1e54c:	movw	r0, #1
   1e550:	and	r0, r0, #1
   1e554:	strb	r0, [sp, #11]
   1e558:	b	1e568 <__assert_fail@plt+0xd490>
   1e55c:	movw	r0, #0
   1e560:	and	r0, r0, #1
   1e564:	strb	r0, [sp, #11]
   1e568:	ldrb	r0, [sp, #11]
   1e56c:	and	r0, r0, #1
   1e570:	add	sp, sp, #12
   1e574:	bx	lr
   1e578:	sub	sp, sp, #12
   1e57c:	str	r0, [sp, #4]
   1e580:	ldr	r0, [sp, #4]
   1e584:	sub	r1, r0, #9
   1e588:	cmp	r1, #5
   1e58c:	str	r0, [sp]
   1e590:	bcc	1e5a8 <__assert_fail@plt+0xd4d0>
   1e594:	b	1e598 <__assert_fail@plt+0xd4c0>
   1e598:	ldr	r0, [sp]
   1e59c:	cmp	r0, #32
   1e5a0:	bne	1e5b8 <__assert_fail@plt+0xd4e0>
   1e5a4:	b	1e5a8 <__assert_fail@plt+0xd4d0>
   1e5a8:	movw	r0, #1
   1e5ac:	and	r0, r0, #1
   1e5b0:	strb	r0, [sp, #11]
   1e5b4:	b	1e5c4 <__assert_fail@plt+0xd4ec>
   1e5b8:	movw	r0, #0
   1e5bc:	and	r0, r0, #1
   1e5c0:	strb	r0, [sp, #11]
   1e5c4:	ldrb	r0, [sp, #11]
   1e5c8:	and	r0, r0, #1
   1e5cc:	add	sp, sp, #12
   1e5d0:	bx	lr
   1e5d4:	sub	sp, sp, #8
   1e5d8:	str	r0, [sp]
   1e5dc:	ldr	r0, [sp]
   1e5e0:	sub	r0, r0, #65	; 0x41
   1e5e4:	cmp	r0, #25
   1e5e8:	bhi	1e600 <__assert_fail@plt+0xd528>
   1e5ec:	b	1e5f0 <__assert_fail@plt+0xd518>
   1e5f0:	movw	r0, #1
   1e5f4:	and	r0, r0, #1
   1e5f8:	strb	r0, [sp, #7]
   1e5fc:	b	1e60c <__assert_fail@plt+0xd534>
   1e600:	movw	r0, #0
   1e604:	and	r0, r0, #1
   1e608:	strb	r0, [sp, #7]
   1e60c:	ldrb	r0, [sp, #7]
   1e610:	and	r0, r0, #1
   1e614:	add	sp, sp, #8
   1e618:	bx	lr
   1e61c:	sub	sp, sp, #12
   1e620:	str	r0, [sp, #4]
   1e624:	ldr	r0, [sp, #4]
   1e628:	sub	r1, r0, #48	; 0x30
   1e62c:	cmp	r1, #10
   1e630:	str	r0, [sp]
   1e634:	bcc	1e664 <__assert_fail@plt+0xd58c>
   1e638:	b	1e63c <__assert_fail@plt+0xd564>
   1e63c:	ldr	r0, [sp]
   1e640:	sub	r1, r0, #65	; 0x41
   1e644:	cmp	r1, #6
   1e648:	bcc	1e664 <__assert_fail@plt+0xd58c>
   1e64c:	b	1e650 <__assert_fail@plt+0xd578>
   1e650:	ldr	r0, [sp]
   1e654:	sub	r1, r0, #97	; 0x61
   1e658:	cmp	r1, #5
   1e65c:	bhi	1e674 <__assert_fail@plt+0xd59c>
   1e660:	b	1e664 <__assert_fail@plt+0xd58c>
   1e664:	movw	r0, #1
   1e668:	and	r0, r0, #1
   1e66c:	strb	r0, [sp, #11]
   1e670:	b	1e680 <__assert_fail@plt+0xd5a8>
   1e674:	movw	r0, #0
   1e678:	and	r0, r0, #1
   1e67c:	strb	r0, [sp, #11]
   1e680:	ldrb	r0, [sp, #11]
   1e684:	and	r0, r0, #1
   1e688:	add	sp, sp, #12
   1e68c:	bx	lr
   1e690:	sub	sp, sp, #8
   1e694:	str	r0, [sp]
   1e698:	ldr	r0, [sp]
   1e69c:	sub	r0, r0, #65	; 0x41
   1e6a0:	cmp	r0, #25
   1e6a4:	bhi	1e6c0 <__assert_fail@plt+0xd5e8>
   1e6a8:	b	1e6ac <__assert_fail@plt+0xd5d4>
   1e6ac:	ldr	r0, [sp]
   1e6b0:	sub	r0, r0, #65	; 0x41
   1e6b4:	add	r0, r0, #97	; 0x61
   1e6b8:	str	r0, [sp, #4]
   1e6bc:	b	1e6c8 <__assert_fail@plt+0xd5f0>
   1e6c0:	ldr	r0, [sp]
   1e6c4:	str	r0, [sp, #4]
   1e6c8:	ldr	r0, [sp, #4]
   1e6cc:	add	sp, sp, #8
   1e6d0:	bx	lr
   1e6d4:	sub	sp, sp, #8
   1e6d8:	str	r0, [sp]
   1e6dc:	ldr	r0, [sp]
   1e6e0:	sub	r0, r0, #97	; 0x61
   1e6e4:	cmp	r0, #25
   1e6e8:	bhi	1e704 <__assert_fail@plt+0xd62c>
   1e6ec:	b	1e6f0 <__assert_fail@plt+0xd618>
   1e6f0:	ldr	r0, [sp]
   1e6f4:	sub	r0, r0, #97	; 0x61
   1e6f8:	add	r0, r0, #65	; 0x41
   1e6fc:	str	r0, [sp, #4]
   1e700:	b	1e70c <__assert_fail@plt+0xd634>
   1e704:	ldr	r0, [sp]
   1e708:	str	r0, [sp, #4]
   1e70c:	ldr	r0, [sp, #4]
   1e710:	add	sp, sp, #8
   1e714:	bx	lr
   1e718:	push	{r4, r5, fp, lr}
   1e71c:	add	fp, sp, #8
   1e720:	sub	sp, sp, #272	; 0x110
   1e724:	add	r1, sp, #7
   1e728:	str	r0, [fp, #-16]
   1e72c:	ldr	r0, [fp, #-16]
   1e730:	movw	r2, #257	; 0x101
   1e734:	bl	1e7b4 <__assert_fail@plt+0xd6dc>
   1e738:	cmp	r0, #0
   1e73c:	beq	1e750 <__assert_fail@plt+0xd678>
   1e740:	movw	r0, #0
   1e744:	and	r0, r0, #1
   1e748:	strb	r0, [fp, #-9]
   1e74c:	b	1e7a4 <__assert_fail@plt+0xd6cc>
   1e750:	add	r0, sp, #7
   1e754:	movw	r1, #63936	; 0xf9c0
   1e758:	movt	r1, #1
   1e75c:	bl	10e74 <strcmp@plt>
   1e760:	cmp	r0, #0
   1e764:	movw	r0, #1
   1e768:	str	r0, [sp]
   1e76c:	beq	1e790 <__assert_fail@plt+0xd6b8>
   1e770:	add	r0, sp, #7
   1e774:	movw	r1, #63938	; 0xf9c2
   1e778:	movt	r1, #1
   1e77c:	bl	10e74 <strcmp@plt>
   1e780:	cmp	r0, #0
   1e784:	movw	r0, #0
   1e788:	moveq	r0, #1
   1e78c:	str	r0, [sp]
   1e790:	ldr	r0, [sp]
   1e794:	mvn	r1, #0
   1e798:	eor	r0, r0, r1
   1e79c:	and	r0, r0, #1
   1e7a0:	strb	r0, [fp, #-9]
   1e7a4:	ldrb	r0, [fp, #-9]
   1e7a8:	and	r0, r0, #1
   1e7ac:	sub	sp, fp, #8
   1e7b0:	pop	{r4, r5, fp, pc}
   1e7b4:	push	{fp, lr}
   1e7b8:	mov	fp, sp
   1e7bc:	sub	sp, sp, #16
   1e7c0:	str	r0, [fp, #-4]
   1e7c4:	str	r1, [sp, #8]
   1e7c8:	str	r2, [sp, #4]
   1e7cc:	ldr	r0, [fp, #-4]
   1e7d0:	ldr	r1, [sp, #8]
   1e7d4:	ldr	r2, [sp, #4]
   1e7d8:	bl	1e7e4 <__assert_fail@plt+0xd70c>
   1e7dc:	mov	sp, fp
   1e7e0:	pop	{fp, pc}
   1e7e4:	push	{fp, lr}
   1e7e8:	mov	fp, sp
   1e7ec:	sub	sp, sp, #24
   1e7f0:	str	r0, [fp, #-8]
   1e7f4:	str	r1, [sp, #12]
   1e7f8:	str	r2, [sp, #8]
   1e7fc:	ldr	r0, [fp, #-8]
   1e800:	bl	1e8e4 <__assert_fail@plt+0xd80c>
   1e804:	str	r0, [sp, #4]
   1e808:	ldr	r0, [sp, #4]
   1e80c:	movw	r1, #0
   1e810:	cmp	r0, r1
   1e814:	bne	1e83c <__assert_fail@plt+0xd764>
   1e818:	ldr	r0, [sp, #8]
   1e81c:	cmp	r0, #0
   1e820:	bls	1e830 <__assert_fail@plt+0xd758>
   1e824:	ldr	r0, [sp, #12]
   1e828:	movw	r1, #0
   1e82c:	strb	r1, [r0]
   1e830:	movw	r0, #22
   1e834:	str	r0, [fp, #-4]
   1e838:	b	1e8b8 <__assert_fail@plt+0xd7e0>
   1e83c:	ldr	r0, [sp, #4]
   1e840:	bl	10fdc <strlen@plt>
   1e844:	str	r0, [sp]
   1e848:	ldr	r0, [sp]
   1e84c:	ldr	r1, [sp, #8]
   1e850:	cmp	r0, r1
   1e854:	bcs	1e878 <__assert_fail@plt+0xd7a0>
   1e858:	ldr	r0, [sp, #12]
   1e85c:	ldr	r1, [sp, #4]
   1e860:	ldr	r2, [sp]
   1e864:	add	r2, r2, #1
   1e868:	bl	10ebc <memcpy@plt>
   1e86c:	movw	r0, #0
   1e870:	str	r0, [fp, #-4]
   1e874:	b	1e8b8 <__assert_fail@plt+0xd7e0>
   1e878:	ldr	r0, [sp, #8]
   1e87c:	cmp	r0, #0
   1e880:	bls	1e8b0 <__assert_fail@plt+0xd7d8>
   1e884:	ldr	r0, [sp, #12]
   1e888:	ldr	r1, [sp, #4]
   1e88c:	ldr	r2, [sp, #8]
   1e890:	sub	r2, r2, #1
   1e894:	bl	10ebc <memcpy@plt>
   1e898:	ldr	r0, [sp, #12]
   1e89c:	ldr	r1, [sp, #8]
   1e8a0:	sub	r1, r1, #1
   1e8a4:	add	r0, r0, r1
   1e8a8:	movw	r1, #0
   1e8ac:	strb	r1, [r0]
   1e8b0:	movw	r0, #34	; 0x22
   1e8b4:	str	r0, [fp, #-4]
   1e8b8:	ldr	r0, [fp, #-4]
   1e8bc:	mov	sp, fp
   1e8c0:	pop	{fp, pc}
   1e8c4:	push	{fp, lr}
   1e8c8:	mov	fp, sp
   1e8cc:	sub	sp, sp, #8
   1e8d0:	str	r0, [sp, #4]
   1e8d4:	ldr	r0, [sp, #4]
   1e8d8:	bl	1e8e4 <__assert_fail@plt+0xd80c>
   1e8dc:	mov	sp, fp
   1e8e0:	pop	{fp, pc}
   1e8e4:	push	{fp, lr}
   1e8e8:	mov	fp, sp
   1e8ec:	sub	sp, sp, #8
   1e8f0:	str	r0, [sp, #4]
   1e8f4:	ldr	r0, [sp, #4]
   1e8f8:	movw	r1, #0
   1e8fc:	bl	1106c <setlocale@plt>
   1e900:	str	r0, [sp]
   1e904:	ldr	r0, [sp]
   1e908:	mov	sp, fp
   1e90c:	pop	{fp, pc}
   1e910:	cmp	r3, #0
   1e914:	cmpeq	r2, #0
   1e918:	bne	1e93c <__assert_fail@plt+0xd864>
   1e91c:	cmp	r1, #0
   1e920:	movlt	r1, #-2147483648	; 0x80000000
   1e924:	movlt	r0, #0
   1e928:	blt	1e938 <__assert_fail@plt+0xd860>
   1e92c:	cmpeq	r0, #0
   1e930:	mvnne	r1, #-2147483648	; 0x80000000
   1e934:	mvnne	r0, #0
   1e938:	b	1ea20 <__assert_fail@plt+0xd948>
   1e93c:	sub	sp, sp, #8
   1e940:	push	{sp, lr}
   1e944:	cmp	r1, #0
   1e948:	blt	1e968 <__assert_fail@plt+0xd890>
   1e94c:	cmp	r3, #0
   1e950:	blt	1e99c <__assert_fail@plt+0xd8c4>
   1e954:	bl	1ea30 <__assert_fail@plt+0xd958>
   1e958:	ldr	lr, [sp, #4]
   1e95c:	add	sp, sp, #8
   1e960:	pop	{r2, r3}
   1e964:	bx	lr
   1e968:	rsbs	r0, r0, #0
   1e96c:	sbc	r1, r1, r1, lsl #1
   1e970:	cmp	r3, #0
   1e974:	blt	1e9c0 <__assert_fail@plt+0xd8e8>
   1e978:	bl	1ea30 <__assert_fail@plt+0xd958>
   1e97c:	ldr	lr, [sp, #4]
   1e980:	add	sp, sp, #8
   1e984:	pop	{r2, r3}
   1e988:	rsbs	r0, r0, #0
   1e98c:	sbc	r1, r1, r1, lsl #1
   1e990:	rsbs	r2, r2, #0
   1e994:	sbc	r3, r3, r3, lsl #1
   1e998:	bx	lr
   1e99c:	rsbs	r2, r2, #0
   1e9a0:	sbc	r3, r3, r3, lsl #1
   1e9a4:	bl	1ea30 <__assert_fail@plt+0xd958>
   1e9a8:	ldr	lr, [sp, #4]
   1e9ac:	add	sp, sp, #8
   1e9b0:	pop	{r2, r3}
   1e9b4:	rsbs	r0, r0, #0
   1e9b8:	sbc	r1, r1, r1, lsl #1
   1e9bc:	bx	lr
   1e9c0:	rsbs	r2, r2, #0
   1e9c4:	sbc	r3, r3, r3, lsl #1
   1e9c8:	bl	1ea30 <__assert_fail@plt+0xd958>
   1e9cc:	ldr	lr, [sp, #4]
   1e9d0:	add	sp, sp, #8
   1e9d4:	pop	{r2, r3}
   1e9d8:	rsbs	r2, r2, #0
   1e9dc:	sbc	r3, r3, r3, lsl #1
   1e9e0:	bx	lr
   1e9e4:	cmp	r3, #0
   1e9e8:	cmpeq	r2, #0
   1e9ec:	bne	1ea04 <__assert_fail@plt+0xd92c>
   1e9f0:	cmp	r1, #0
   1e9f4:	cmpeq	r0, #0
   1e9f8:	mvnne	r1, #0
   1e9fc:	mvnne	r0, #0
   1ea00:	b	1ea20 <__assert_fail@plt+0xd948>
   1ea04:	sub	sp, sp, #8
   1ea08:	push	{sp, lr}
   1ea0c:	bl	1ea30 <__assert_fail@plt+0xd958>
   1ea10:	ldr	lr, [sp, #4]
   1ea14:	add	sp, sp, #8
   1ea18:	pop	{r2, r3}
   1ea1c:	bx	lr
   1ea20:	push	{r1, lr}
   1ea24:	mov	r0, #8
   1ea28:	bl	10e68 <raise@plt>
   1ea2c:	pop	{r1, pc}
   1ea30:	cmp	r1, r3
   1ea34:	cmpeq	r0, r2
   1ea38:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1ea3c:	mov	r4, r0
   1ea40:	movcc	r0, #0
   1ea44:	mov	r5, r1
   1ea48:	ldr	lr, [sp, #36]	; 0x24
   1ea4c:	movcc	r1, r0
   1ea50:	bcc	1eb4c <__assert_fail@plt+0xda74>
   1ea54:	cmp	r3, #0
   1ea58:	clzeq	ip, r2
   1ea5c:	clzne	ip, r3
   1ea60:	addeq	ip, ip, #32
   1ea64:	cmp	r5, #0
   1ea68:	clzeq	r1, r4
   1ea6c:	addeq	r1, r1, #32
   1ea70:	clzne	r1, r5
   1ea74:	sub	ip, ip, r1
   1ea78:	sub	sl, ip, #32
   1ea7c:	lsl	r9, r3, ip
   1ea80:	rsb	fp, ip, #32
   1ea84:	orr	r9, r9, r2, lsl sl
   1ea88:	orr	r9, r9, r2, lsr fp
   1ea8c:	lsl	r8, r2, ip
   1ea90:	cmp	r5, r9
   1ea94:	cmpeq	r4, r8
   1ea98:	movcc	r0, #0
   1ea9c:	movcc	r1, r0
   1eaa0:	bcc	1eabc <__assert_fail@plt+0xd9e4>
   1eaa4:	mov	r0, #1
   1eaa8:	subs	r4, r4, r8
   1eaac:	lsl	r1, r0, sl
   1eab0:	orr	r1, r1, r0, lsr fp
   1eab4:	lsl	r0, r0, ip
   1eab8:	sbc	r5, r5, r9
   1eabc:	cmp	ip, #0
   1eac0:	beq	1eb4c <__assert_fail@plt+0xda74>
   1eac4:	lsr	r6, r8, #1
   1eac8:	orr	r6, r6, r9, lsl #31
   1eacc:	lsr	r7, r9, #1
   1ead0:	mov	r2, ip
   1ead4:	b	1eaf8 <__assert_fail@plt+0xda20>
   1ead8:	subs	r3, r4, r6
   1eadc:	sbc	r8, r5, r7
   1eae0:	adds	r3, r3, r3
   1eae4:	adc	r8, r8, r8
   1eae8:	adds	r4, r3, #1
   1eaec:	adc	r5, r8, #0
   1eaf0:	subs	r2, r2, #1
   1eaf4:	beq	1eb14 <__assert_fail@plt+0xda3c>
   1eaf8:	cmp	r5, r7
   1eafc:	cmpeq	r4, r6
   1eb00:	bcs	1ead8 <__assert_fail@plt+0xda00>
   1eb04:	adds	r4, r4, r4
   1eb08:	adc	r5, r5, r5
   1eb0c:	subs	r2, r2, #1
   1eb10:	bne	1eaf8 <__assert_fail@plt+0xda20>
   1eb14:	lsr	r3, r4, ip
   1eb18:	orr	r3, r3, r5, lsl fp
   1eb1c:	lsr	r2, r5, ip
   1eb20:	orr	r3, r3, r5, lsr sl
   1eb24:	adds	r0, r0, r4
   1eb28:	mov	r4, r3
   1eb2c:	lsl	r3, r2, ip
   1eb30:	orr	r3, r3, r4, lsl sl
   1eb34:	lsl	ip, r4, ip
   1eb38:	orr	r3, r3, r4, lsr fp
   1eb3c:	adc	r1, r1, r5
   1eb40:	subs	r0, r0, ip
   1eb44:	mov	r5, r2
   1eb48:	sbc	r1, r1, r3
   1eb4c:	cmp	lr, #0
   1eb50:	strdne	r4, [lr]
   1eb54:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1eb58:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1eb5c:	mov	r7, r0
   1eb60:	ldr	r6, [pc, #72]	; 1ebb0 <__assert_fail@plt+0xdad8>
   1eb64:	ldr	r5, [pc, #72]	; 1ebb4 <__assert_fail@plt+0xdadc>
   1eb68:	add	r6, pc, r6
   1eb6c:	add	r5, pc, r5
   1eb70:	sub	r6, r6, r5
   1eb74:	mov	r8, r1
   1eb78:	mov	r9, r2
   1eb7c:	bl	10e30 <calloc@plt-0x20>
   1eb80:	asrs	r6, r6, #2
   1eb84:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1eb88:	mov	r4, #0
   1eb8c:	add	r4, r4, #1
   1eb90:	ldr	r3, [r5], #4
   1eb94:	mov	r2, r9
   1eb98:	mov	r1, r8
   1eb9c:	mov	r0, r7
   1eba0:	blx	r3
   1eba4:	cmp	r6, r4
   1eba8:	bne	1eb8c <__assert_fail@plt+0xdab4>
   1ebac:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1ebb0:	muleq	r1, ip, r3
   1ebb4:	muleq	r1, r4, r3
   1ebb8:	bx	lr
   1ebbc:	ldr	r3, [pc, #12]	; 1ebd0 <__assert_fail@plt+0xdaf8>
   1ebc0:	mov	r1, #0
   1ebc4:	add	r3, pc, r3
   1ebc8:	ldr	r2, [r3]
   1ebcc:	b	11018 <__cxa_atexit@plt>
   1ebd0:	andeq	r1, r1, r4, lsr #10
   1ebd4:	mov	r2, r1
   1ebd8:	mov	r1, r0
   1ebdc:	mov	r0, #3
   1ebe0:	b	10f1c <__fxstat64@plt>

Disassembly of section .fini:

0001ebe4 <.fini>:
   1ebe4:	push	{r3, lr}
   1ebe8:	pop	{r3, pc}
