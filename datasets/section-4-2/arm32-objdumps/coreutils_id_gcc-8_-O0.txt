
../repos/coreutils/src/id:     file format elf32-littlearm


Disassembly of section .init:

00010eec <.init>:
   10eec:	push	{r3, lr}
   10ef0:	bl	11254 <__assert_fail@plt+0x48>
   10ef4:	pop	{r3, pc}

Disassembly of section .plt:

00010ef8 <calloc@plt-0x14>:
   10ef8:	push	{lr}		; (str lr, [sp, #-4]!)
   10efc:	ldr	lr, [pc, #4]	; 10f08 <calloc@plt-0x4>
   10f00:	add	lr, pc, lr
   10f04:	ldr	pc, [lr, #8]!
   10f08:	strdeq	sl, [r1], -r8

00010f0c <calloc@plt>:
   10f0c:	add	ip, pc, #0, 12
   10f10:	add	ip, ip, #106496	; 0x1a000
   10f14:	ldr	pc, [ip, #248]!	; 0xf8

00010f18 <endgrent@plt>:
   10f18:	add	ip, pc, #0, 12
   10f1c:	add	ip, ip, #106496	; 0x1a000
   10f20:	ldr	pc, [ip, #240]!	; 0xf0

00010f24 <fputs_unlocked@plt>:
   10f24:	add	ip, pc, #0, 12
   10f28:	add	ip, ip, #106496	; 0x1a000
   10f2c:	ldr	pc, [ip, #232]!	; 0xe8

00010f30 <raise@plt>:
   10f30:	add	ip, pc, #0, 12
   10f34:	add	ip, ip, #106496	; 0x1a000
   10f38:	ldr	pc, [ip, #224]!	; 0xe0

00010f3c <getpwnam@plt>:
   10f3c:	add	ip, pc, #0, 12
   10f40:	add	ip, ip, #106496	; 0x1a000
   10f44:	ldr	pc, [ip, #216]!	; 0xd8

00010f48 <is_selinux_enabled@plt>:
   10f48:	add	ip, pc, #0, 12
   10f4c:	add	ip, ip, #106496	; 0x1a000
   10f50:	ldr	pc, [ip, #208]!	; 0xd0

00010f54 <strcmp@plt>:
   10f54:	add	ip, pc, #0, 12
   10f58:	add	ip, ip, #106496	; 0x1a000
   10f5c:	ldr	pc, [ip, #200]!	; 0xc8

00010f60 <getpwuid@plt>:
   10f60:	add	ip, pc, #0, 12
   10f64:	add	ip, ip, #106496	; 0x1a000
   10f68:	ldr	pc, [ip, #192]!	; 0xc0

00010f6c <printf@plt>:
   10f6c:	add	ip, pc, #0, 12
   10f70:	add	ip, ip, #106496	; 0x1a000
   10f74:	ldr	pc, [ip, #184]!	; 0xb8

00010f78 <fflush@plt>:
   10f78:	add	ip, pc, #0, 12
   10f7c:	add	ip, ip, #106496	; 0x1a000
   10f80:	ldr	pc, [ip, #176]!	; 0xb0

00010f84 <getuid@plt>:
   10f84:	add	ip, pc, #0, 12
   10f88:	add	ip, ip, #106496	; 0x1a000
   10f8c:	ldr	pc, [ip, #168]!	; 0xa8

00010f90 <free@plt>:
   10f90:	add	ip, pc, #0, 12
   10f94:	add	ip, ip, #106496	; 0x1a000
   10f98:	ldr	pc, [ip, #160]!	; 0xa0

00010f9c <_exit@plt>:
   10f9c:	add	ip, pc, #0, 12
   10fa0:	add	ip, ip, #106496	; 0x1a000
   10fa4:	ldr	pc, [ip, #152]!	; 0x98

00010fa8 <memcpy@plt>:
   10fa8:	add	ip, pc, #0, 12
   10fac:	add	ip, ip, #106496	; 0x1a000
   10fb0:	ldr	pc, [ip, #144]!	; 0x90

00010fb4 <mbsinit@plt>:
   10fb4:	add	ip, pc, #0, 12
   10fb8:	add	ip, ip, #106496	; 0x1a000
   10fbc:	ldr	pc, [ip, #136]!	; 0x88

00010fc0 <memcmp@plt>:
   10fc0:	add	ip, pc, #0, 12
   10fc4:	add	ip, ip, #106496	; 0x1a000
   10fc8:	ldr	pc, [ip, #128]!	; 0x80

00010fcc <fputc_unlocked@plt>:
   10fcc:	add	ip, pc, #0, 12
   10fd0:	add	ip, ip, #106496	; 0x1a000
   10fd4:	ldr	pc, [ip, #120]!	; 0x78

00010fd8 <realloc@plt>:
   10fd8:	add	ip, pc, #0, 12
   10fdc:	add	ip, ip, #106496	; 0x1a000
   10fe0:	ldr	pc, [ip, #112]!	; 0x70

00010fe4 <textdomain@plt>:
   10fe4:	add	ip, pc, #0, 12
   10fe8:	add	ip, ip, #106496	; 0x1a000
   10fec:	ldr	pc, [ip, #104]!	; 0x68

00010ff0 <geteuid@plt>:
   10ff0:	add	ip, pc, #0, 12
   10ff4:	add	ip, ip, #106496	; 0x1a000
   10ff8:	ldr	pc, [ip, #96]!	; 0x60

00010ffc <iswprint@plt>:
   10ffc:	add	ip, pc, #0, 12
   11000:	add	ip, ip, #106496	; 0x1a000
   11004:	ldr	pc, [ip, #88]!	; 0x58

00011008 <getegid@plt>:
   11008:	add	ip, pc, #0, 12
   1100c:	add	ip, ip, #106496	; 0x1a000
   11010:	ldr	pc, [ip, #80]!	; 0x50

00011014 <fwrite@plt>:
   11014:	add	ip, pc, #0, 12
   11018:	add	ip, ip, #106496	; 0x1a000
   1101c:	ldr	pc, [ip, #72]!	; 0x48

00011020 <lseek64@plt>:
   11020:	add	ip, pc, #0, 12
   11024:	add	ip, ip, #106496	; 0x1a000
   11028:	ldr	pc, [ip, #64]!	; 0x40

0001102c <__ctype_get_mb_cur_max@plt>:
   1102c:	add	ip, pc, #0, 12
   11030:	add	ip, ip, #106496	; 0x1a000
   11034:	ldr	pc, [ip, #56]!	; 0x38

00011038 <getcon@plt>:
   11038:	add	ip, pc, #0, 12
   1103c:	add	ip, ip, #106496	; 0x1a000
   11040:	ldr	pc, [ip, #48]!	; 0x30

00011044 <__fpending@plt>:
   11044:	add	ip, pc, #0, 12
   11048:	add	ip, ip, #106496	; 0x1a000
   1104c:	ldr	pc, [ip, #40]!	; 0x28

00011050 <ferror_unlocked@plt>:
   11050:	add	ip, pc, #0, 12
   11054:	add	ip, ip, #106496	; 0x1a000
   11058:	ldr	pc, [ip, #32]!

0001105c <mbrtowc@plt>:
   1105c:	add	ip, pc, #0, 12
   11060:	add	ip, ip, #106496	; 0x1a000
   11064:	ldr	pc, [ip, #24]!

00011068 <error@plt>:
   11068:	add	ip, pc, #0, 12
   1106c:	add	ip, ip, #106496	; 0x1a000
   11070:	ldr	pc, [ip, #16]!

00011074 <getenv@plt>:
   11074:	add	ip, pc, #0, 12
   11078:	add	ip, ip, #106496	; 0x1a000
   1107c:	ldr	pc, [ip, #8]!

00011080 <malloc@plt>:
   11080:	add	ip, pc, #0, 12
   11084:	add	ip, ip, #106496	; 0x1a000
   11088:	ldr	pc, [ip, #0]!

0001108c <__libc_start_main@plt>:
   1108c:	add	ip, pc, #0, 12
   11090:	add	ip, ip, #102400	; 0x19000
   11094:	ldr	pc, [ip, #4088]!	; 0xff8

00011098 <__freading@plt>:
   11098:	add	ip, pc, #0, 12
   1109c:	add	ip, ip, #102400	; 0x19000
   110a0:	ldr	pc, [ip, #4080]!	; 0xff0

000110a4 <__gmon_start__@plt>:
   110a4:	add	ip, pc, #0, 12
   110a8:	add	ip, ip, #102400	; 0x19000
   110ac:	ldr	pc, [ip, #4072]!	; 0xfe8

000110b0 <getopt_long@plt>:
   110b0:	add	ip, pc, #0, 12
   110b4:	add	ip, ip, #102400	; 0x19000
   110b8:	ldr	pc, [ip, #4064]!	; 0xfe0

000110bc <__ctype_b_loc@plt>:
   110bc:	add	ip, pc, #0, 12
   110c0:	add	ip, ip, #102400	; 0x19000
   110c4:	ldr	pc, [ip, #4056]!	; 0xfd8

000110c8 <exit@plt>:
   110c8:	add	ip, pc, #0, 12
   110cc:	add	ip, ip, #102400	; 0x19000
   110d0:	ldr	pc, [ip, #4048]!	; 0xfd0

000110d4 <gettext@plt>:
   110d4:	add	ip, pc, #0, 12
   110d8:	add	ip, ip, #102400	; 0x19000
   110dc:	ldr	pc, [ip, #4040]!	; 0xfc8

000110e0 <strtoul@plt>:
   110e0:	add	ip, pc, #0, 12
   110e4:	add	ip, ip, #102400	; 0x19000
   110e8:	ldr	pc, [ip, #4032]!	; 0xfc0

000110ec <strlen@plt>:
   110ec:	add	ip, pc, #0, 12
   110f0:	add	ip, ip, #102400	; 0x19000
   110f4:	ldr	pc, [ip, #4024]!	; 0xfb8

000110f8 <strchr@plt>:
   110f8:	add	ip, pc, #0, 12
   110fc:	add	ip, ip, #102400	; 0x19000
   11100:	ldr	pc, [ip, #4016]!	; 0xfb0

00011104 <fprintf@plt>:
   11104:	add	ip, pc, #0, 12
   11108:	add	ip, ip, #102400	; 0x19000
   1110c:	ldr	pc, [ip, #4008]!	; 0xfa8

00011110 <__errno_location@plt>:
   11110:	add	ip, pc, #0, 12
   11114:	add	ip, ip, #102400	; 0x19000
   11118:	ldr	pc, [ip, #4000]!	; 0xfa0

0001111c <__cxa_atexit@plt>:
   1111c:	add	ip, pc, #0, 12
   11120:	add	ip, ip, #102400	; 0x19000
   11124:	ldr	pc, [ip, #3992]!	; 0xf98

00011128 <getgid@plt>:
   11128:	add	ip, pc, #0, 12
   1112c:	add	ip, ip, #102400	; 0x19000
   11130:	ldr	pc, [ip, #3984]!	; 0xf90

00011134 <getgrouplist@plt>:
   11134:	add	ip, pc, #0, 12
   11138:	add	ip, ip, #102400	; 0x19000
   1113c:	ldr	pc, [ip, #3976]!	; 0xf88

00011140 <memset@plt>:
   11140:	add	ip, pc, #0, 12
   11144:	add	ip, ip, #102400	; 0x19000
   11148:	ldr	pc, [ip, #3968]!	; 0xf80

0001114c <setgrent@plt>:
   1114c:	add	ip, pc, #0, 12
   11150:	add	ip, ip, #102400	; 0x19000
   11154:	ldr	pc, [ip, #3960]!	; 0xf78

00011158 <getgrent@plt>:
   11158:	add	ip, pc, #0, 12
   1115c:	add	ip, ip, #102400	; 0x19000
   11160:	ldr	pc, [ip, #3952]!	; 0xf70

00011164 <fileno@plt>:
   11164:	add	ip, pc, #0, 12
   11168:	add	ip, ip, #102400	; 0x19000
   1116c:	ldr	pc, [ip, #3944]!	; 0xf68

00011170 <fclose@plt>:
   11170:	add	ip, pc, #0, 12
   11174:	add	ip, ip, #102400	; 0x19000
   11178:	ldr	pc, [ip, #3936]!	; 0xf60

0001117c <fseeko64@plt>:
   1117c:	add	ip, pc, #0, 12
   11180:	add	ip, ip, #102400	; 0x19000
   11184:	ldr	pc, [ip, #3928]!	; 0xf58

00011188 <setlocale@plt>:
   11188:	add	ip, pc, #0, 12
   1118c:	add	ip, ip, #102400	; 0x19000
   11190:	ldr	pc, [ip, #3920]!	; 0xf50

00011194 <endpwent@plt>:
   11194:	add	ip, pc, #0, 12
   11198:	add	ip, ip, #102400	; 0x19000
   1119c:	ldr	pc, [ip, #3912]!	; 0xf48

000111a0 <strrchr@plt>:
   111a0:	add	ip, pc, #0, 12
   111a4:	add	ip, ip, #102400	; 0x19000
   111a8:	ldr	pc, [ip, #3904]!	; 0xf40

000111ac <nl_langinfo@plt>:
   111ac:	add	ip, pc, #0, 12
   111b0:	add	ip, ip, #102400	; 0x19000
   111b4:	ldr	pc, [ip, #3896]!	; 0xf38

000111b8 <getgroups@plt>:
   111b8:	add	ip, pc, #0, 12
   111bc:	add	ip, ip, #102400	; 0x19000
   111c0:	ldr	pc, [ip, #3888]!	; 0xf30

000111c4 <bindtextdomain@plt>:
   111c4:	add	ip, pc, #0, 12
   111c8:	add	ip, ip, #102400	; 0x19000
   111cc:	ldr	pc, [ip, #3880]!	; 0xf28

000111d0 <strncmp@plt>:
   111d0:	add	ip, pc, #0, 12
   111d4:	add	ip, ip, #102400	; 0x19000
   111d8:	ldr	pc, [ip, #3872]!	; 0xf20

000111dc <abort@plt>:
   111dc:	add	ip, pc, #0, 12
   111e0:	add	ip, ip, #102400	; 0x19000
   111e4:	ldr	pc, [ip, #3864]!	; 0xf18

000111e8 <getgrgid@plt>:
   111e8:	add	ip, pc, #0, 12
   111ec:	add	ip, ip, #102400	; 0x19000
   111f0:	ldr	pc, [ip, #3856]!	; 0xf10

000111f4 <getgrnam@plt>:
   111f4:	add	ip, pc, #0, 12
   111f8:	add	ip, ip, #102400	; 0x19000
   111fc:	ldr	pc, [ip, #3848]!	; 0xf08

00011200 <putchar_unlocked@plt>:
   11200:	add	ip, pc, #0, 12
   11204:	add	ip, ip, #102400	; 0x19000
   11208:	ldr	pc, [ip, #3840]!	; 0xf00

0001120c <__assert_fail@plt>:
   1120c:	add	ip, pc, #0, 12
   11210:	add	ip, ip, #102400	; 0x19000
   11214:	ldr	pc, [ip, #3832]!	; 0xef8

Disassembly of section .text:

00011218 <.text>:
   11218:	mov	fp, #0
   1121c:	mov	lr, #0
   11220:	pop	{r1}		; (ldr r1, [sp], #4)
   11224:	mov	r2, sp
   11228:	push	{r2}		; (str r2, [sp, #-4]!)
   1122c:	push	{r0}		; (str r0, [sp, #-4]!)
   11230:	ldr	ip, [pc, #16]	; 11248 <__assert_fail@plt+0x3c>
   11234:	push	{ip}		; (str ip, [sp, #-4]!)
   11238:	ldr	r0, [pc, #12]	; 1124c <__assert_fail@plt+0x40>
   1123c:	ldr	r3, [pc, #12]	; 11250 <__assert_fail@plt+0x44>
   11240:	bl	1108c <__libc_start_main@plt>
   11244:	bl	111dc <abort@plt>
   11248:	strdeq	r9, [r1], -r0
   1124c:	andeq	r1, r1, ip, ror #12
   11250:	muleq	r1, r0, r0
   11254:	ldr	r3, [pc, #20]	; 11270 <__assert_fail@plt+0x64>
   11258:	ldr	r2, [pc, #20]	; 11274 <__assert_fail@plt+0x68>
   1125c:	add	r3, pc, r3
   11260:	ldr	r2, [r3, r2]
   11264:	cmp	r2, #0
   11268:	bxeq	lr
   1126c:	b	110a4 <__gmon_start__@plt>
   11270:	muleq	r1, ip, sp
   11274:	andeq	r0, r0, r0, lsl r1
   11278:	ldr	r0, [pc, #24]	; 11298 <__assert_fail@plt+0x8c>
   1127c:	ldr	r3, [pc, #24]	; 1129c <__assert_fail@plt+0x90>
   11280:	cmp	r3, r0
   11284:	bxeq	lr
   11288:	ldr	r3, [pc, #16]	; 112a0 <__assert_fail@plt+0x94>
   1128c:	cmp	r3, #0
   11290:	bxeq	lr
   11294:	bx	r3
   11298:	andeq	fp, r2, r4, ror r1
   1129c:	andeq	fp, r2, r4, ror r1
   112a0:	andeq	r0, r0, r0
   112a4:	ldr	r0, [pc, #36]	; 112d0 <__assert_fail@plt+0xc4>
   112a8:	ldr	r1, [pc, #36]	; 112d4 <__assert_fail@plt+0xc8>
   112ac:	sub	r1, r1, r0
   112b0:	asr	r1, r1, #2
   112b4:	add	r1, r1, r1, lsr #31
   112b8:	asrs	r1, r1, #1
   112bc:	bxeq	lr
   112c0:	ldr	r3, [pc, #16]	; 112d8 <__assert_fail@plt+0xcc>
   112c4:	cmp	r3, #0
   112c8:	bxeq	lr
   112cc:	bx	r3
   112d0:	andeq	fp, r2, r4, ror r1
   112d4:	andeq	fp, r2, r4, ror r1
   112d8:	andeq	r0, r0, r0
   112dc:	push	{r4, lr}
   112e0:	ldr	r4, [pc, #24]	; 11300 <__assert_fail@plt+0xf4>
   112e4:	ldrb	r3, [r4]
   112e8:	cmp	r3, #0
   112ec:	popne	{r4, pc}
   112f0:	bl	11278 <__assert_fail@plt+0x6c>
   112f4:	mov	r3, #1
   112f8:	strb	r3, [r4]
   112fc:	pop	{r4, pc}
   11300:	muleq	r2, r0, r1
   11304:	b	112a4 <__assert_fail@plt+0x98>
   11308:	str	fp, [sp, #-8]!
   1130c:	str	lr, [sp, #4]
   11310:	add	fp, sp, #4
   11314:	sub	sp, sp, #80	; 0x50
   11318:	str	r0, [fp, #-80]	; 0xffffffb0
   1131c:	movw	r2, #37516	; 0x928c
   11320:	movt	r2, #1
   11324:	sub	r3, fp, #72	; 0x48
   11328:	ldrd	r0, [r2]
   1132c:	strd	r0, [r3]
   11330:	ldrd	r0, [r2, #8]
   11334:	strd	r0, [r3, #8]
   11338:	ldrd	r0, [r2, #16]
   1133c:	strd	r0, [r3, #16]
   11340:	ldrd	r0, [r2, #24]
   11344:	strd	r0, [r3, #24]
   11348:	ldrd	r0, [r2, #32]
   1134c:	strd	r0, [r3, #32]
   11350:	ldrd	r0, [r2, #40]	; 0x28
   11354:	strd	r0, [r3, #40]	; 0x28
   11358:	ldrd	r0, [r2, #48]	; 0x30
   1135c:	strd	r0, [r3, #48]	; 0x30
   11360:	ldr	r3, [fp, #-80]	; 0xffffffb0
   11364:	str	r3, [fp, #-8]
   11368:	sub	r3, fp, #72	; 0x48
   1136c:	str	r3, [fp, #-12]
   11370:	b	11380 <__assert_fail@plt+0x174>
   11374:	ldr	r3, [fp, #-12]
   11378:	add	r3, r3, #8
   1137c:	str	r3, [fp, #-12]
   11380:	ldr	r3, [fp, #-12]
   11384:	ldr	r3, [r3]
   11388:	cmp	r3, #0
   1138c:	beq	113b0 <__assert_fail@plt+0x1a4>
   11390:	ldr	r3, [fp, #-12]
   11394:	ldr	r3, [r3]
   11398:	mov	r1, r3
   1139c:	ldr	r0, [fp, #-80]	; 0xffffffb0
   113a0:	bl	10f54 <strcmp@plt>
   113a4:	mov	r3, r0
   113a8:	cmp	r3, #0
   113ac:	bne	11374 <__assert_fail@plt+0x168>
   113b0:	ldr	r3, [fp, #-12]
   113b4:	ldr	r3, [r3, #4]
   113b8:	cmp	r3, #0
   113bc:	beq	113cc <__assert_fail@plt+0x1c0>
   113c0:	ldr	r3, [fp, #-12]
   113c4:	ldr	r3, [r3, #4]
   113c8:	str	r3, [fp, #-8]
   113cc:	movw	r0, #37144	; 0x9118
   113d0:	movt	r0, #1
   113d4:	bl	110d4 <gettext@plt>
   113d8:	mov	r3, r0
   113dc:	movw	r2, #37168	; 0x9130
   113e0:	movt	r2, #1
   113e4:	movw	r1, #37208	; 0x9158
   113e8:	movt	r1, #1
   113ec:	mov	r0, r3
   113f0:	bl	10f6c <printf@plt>
   113f4:	mov	r1, #0
   113f8:	mov	r0, #5
   113fc:	bl	11188 <setlocale@plt>
   11400:	str	r0, [fp, #-16]
   11404:	ldr	r3, [fp, #-16]
   11408:	cmp	r3, #0
   1140c:	beq	11458 <__assert_fail@plt+0x24c>
   11410:	mov	r2, #3
   11414:	movw	r1, #37224	; 0x9168
   11418:	movt	r1, #1
   1141c:	ldr	r0, [fp, #-16]
   11420:	bl	111d0 <strncmp@plt>
   11424:	mov	r3, r0
   11428:	cmp	r3, #0
   1142c:	beq	11458 <__assert_fail@plt+0x24c>
   11430:	movw	r0, #37228	; 0x916c
   11434:	movt	r0, #1
   11438:	bl	110d4 <gettext@plt>
   1143c:	mov	r2, r0
   11440:	movw	r3, #45452	; 0xb18c
   11444:	movt	r3, #2
   11448:	ldr	r3, [r3]
   1144c:	mov	r1, r3
   11450:	mov	r0, r2
   11454:	bl	10f24 <fputs_unlocked@plt>
   11458:	movw	r0, #37300	; 0x91b4
   1145c:	movt	r0, #1
   11460:	bl	110d4 <gettext@plt>
   11464:	mov	r3, r0
   11468:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1146c:	movw	r1, #37168	; 0x9130
   11470:	movt	r1, #1
   11474:	mov	r0, r3
   11478:	bl	10f6c <printf@plt>
   1147c:	movw	r0, #37328	; 0x91d0
   11480:	movt	r0, #1
   11484:	bl	110d4 <gettext@plt>
   11488:	ldr	r2, [fp, #-8]
   1148c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   11490:	cmp	r2, r3
   11494:	bne	114a4 <__assert_fail@plt+0x298>
   11498:	movw	r3, #37380	; 0x9204
   1149c:	movt	r3, #1
   114a0:	b	114ac <__assert_fail@plt+0x2a0>
   114a4:	movw	r3, #37392	; 0x9210
   114a8:	movt	r3, #1
   114ac:	mov	r2, r3
   114b0:	ldr	r1, [fp, #-8]
   114b4:	bl	10f6c <printf@plt>
   114b8:	nop	{0}
   114bc:	sub	sp, fp, #4
   114c0:	ldr	fp, [sp]
   114c4:	add	sp, sp, #4
   114c8:	pop	{pc}		; (ldr pc, [sp], #4)
   114cc:	push	{fp}		; (str fp, [sp, #-4]!)
   114d0:	add	fp, sp, #0
   114d4:	sub	sp, sp, #12
   114d8:	str	r0, [fp, #-8]
   114dc:	mvn	r3, #0
   114e0:	mov	r0, r3
   114e4:	add	sp, fp, #0
   114e8:	pop	{fp}		; (ldr fp, [sp], #4)
   114ec:	bx	lr
   114f0:	push	{fp}		; (str fp, [sp, #-4]!)
   114f4:	add	fp, sp, #0
   114f8:	mov	r3, #0
   114fc:	mov	r0, r3
   11500:	add	sp, fp, #0
   11504:	pop	{fp}		; (ldr fp, [sp], #4)
   11508:	bx	lr
   1150c:	str	r4, [sp, #-12]!
   11510:	str	fp, [sp, #4]
   11514:	str	lr, [sp, #8]
   11518:	add	fp, sp, #8
   1151c:	sub	sp, sp, #12
   11520:	str	r0, [fp, #-16]
   11524:	ldr	r3, [fp, #-16]
   11528:	cmp	r3, #0
   1152c:	beq	11568 <__assert_fail@plt+0x35c>
   11530:	movw	r3, #45448	; 0xb188
   11534:	movt	r3, #2
   11538:	ldr	r4, [r3]
   1153c:	movw	r0, #37804	; 0x93ac
   11540:	movt	r0, #1
   11544:	bl	110d4 <gettext@plt>
   11548:	mov	r1, r0
   1154c:	movw	r3, #45568	; 0xb200
   11550:	movt	r3, #2
   11554:	ldr	r3, [r3]
   11558:	mov	r2, r3
   1155c:	mov	r0, r4
   11560:	bl	11104 <fprintf@plt>
   11564:	b	11664 <__assert_fail@plt+0x458>
   11568:	movw	r0, #37844	; 0x93d4
   1156c:	movt	r0, #1
   11570:	bl	110d4 <gettext@plt>
   11574:	mov	r2, r0
   11578:	movw	r3, #45568	; 0xb200
   1157c:	movt	r3, #2
   11580:	ldr	r3, [r3]
   11584:	mov	r1, r3
   11588:	mov	r0, r2
   1158c:	bl	10f6c <printf@plt>
   11590:	movw	r0, #37880	; 0x93f8
   11594:	movt	r0, #1
   11598:	bl	110d4 <gettext@plt>
   1159c:	mov	r2, r0
   115a0:	movw	r3, #45452	; 0xb18c
   115a4:	movt	r3, #2
   115a8:	ldr	r3, [r3]
   115ac:	mov	r1, r3
   115b0:	mov	r0, r2
   115b4:	bl	10f24 <fputs_unlocked@plt>
   115b8:	movw	r0, #37988	; 0x9464
   115bc:	movt	r0, #1
   115c0:	bl	110d4 <gettext@plt>
   115c4:	mov	r2, r0
   115c8:	movw	r3, #45452	; 0xb18c
   115cc:	movt	r3, #2
   115d0:	ldr	r3, [r3]
   115d4:	mov	r1, r3
   115d8:	mov	r0, r2
   115dc:	bl	10f24 <fputs_unlocked@plt>
   115e0:	movw	r0, #38512	; 0x9670
   115e4:	movt	r0, #1
   115e8:	bl	110d4 <gettext@plt>
   115ec:	mov	r2, r0
   115f0:	movw	r3, #45452	; 0xb18c
   115f4:	movt	r3, #2
   115f8:	ldr	r3, [r3]
   115fc:	mov	r1, r3
   11600:	mov	r0, r2
   11604:	bl	10f24 <fputs_unlocked@plt>
   11608:	movw	r0, #38560	; 0x96a0
   1160c:	movt	r0, #1
   11610:	bl	110d4 <gettext@plt>
   11614:	mov	r2, r0
   11618:	movw	r3, #45452	; 0xb18c
   1161c:	movt	r3, #2
   11620:	ldr	r3, [r3]
   11624:	mov	r1, r3
   11628:	mov	r0, r2
   1162c:	bl	10f24 <fputs_unlocked@plt>
   11630:	movw	r0, #38616	; 0x96d8
   11634:	movt	r0, #1
   11638:	bl	110d4 <gettext@plt>
   1163c:	mov	r2, r0
   11640:	movw	r3, #45452	; 0xb18c
   11644:	movt	r3, #2
   11648:	ldr	r3, [r3]
   1164c:	mov	r1, r3
   11650:	mov	r0, r2
   11654:	bl	10f24 <fputs_unlocked@plt>
   11658:	movw	r0, #38688	; 0x9720
   1165c:	movt	r0, #1
   11660:	bl	11308 <__assert_fail@plt+0xfc>
   11664:	ldr	r0, [fp, #-16]
   11668:	bl	110c8 <exit@plt>
   1166c:	strd	r4, [sp, #-16]!
   11670:	str	fp, [sp, #8]
   11674:	str	lr, [sp, #12]
   11678:	add	fp, sp, #12
   1167c:	sub	sp, sp, #64	; 0x40
   11680:	str	r0, [fp, #-56]	; 0xffffffc8
   11684:	str	r1, [fp, #-60]	; 0xffffffc4
   11688:	bl	10f48 <is_selinux_enabled@plt>
   1168c:	mov	r3, r0
   11690:	cmp	r3, #0
   11694:	movgt	r3, #1
   11698:	movle	r3, #0
   1169c:	uxtb	r3, r3
   116a0:	str	r3, [fp, #-20]	; 0xffffffec
   116a4:	bl	114f0 <__assert_fail@plt+0x2e4>
   116a8:	mov	r3, r0
   116ac:	strb	r3, [fp, #-21]	; 0xffffffeb
   116b0:	mov	r3, #0
   116b4:	str	r3, [fp, #-28]	; 0xffffffe4
   116b8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   116bc:	ldr	r3, [r3]
   116c0:	mov	r0, r3
   116c4:	bl	13020 <__assert_fail@plt+0x1e14>
   116c8:	movw	r1, #37392	; 0x9210
   116cc:	movt	r1, #1
   116d0:	mov	r0, #6
   116d4:	bl	11188 <setlocale@plt>
   116d8:	movw	r1, #38692	; 0x9724
   116dc:	movt	r1, #1
   116e0:	movw	r0, #37416	; 0x9228
   116e4:	movt	r0, #1
   116e8:	bl	111c4 <bindtextdomain@plt>
   116ec:	movw	r0, #37416	; 0x9228
   116f0:	movt	r0, #1
   116f4:	bl	10fe4 <textdomain@plt>
   116f8:	movw	r0, #11660	; 0x2d8c
   116fc:	movt	r0, #1
   11700:	bl	190f4 <__assert_fail@plt+0x7ee8>
   11704:	b	118d4 <__assert_fail@plt+0x6c8>
   11708:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1170c:	cmp	r3, #97	; 0x61
   11710:	beq	118d4 <__assert_fail@plt+0x6c8>
   11714:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11718:	cmp	r3, #97	; 0x61
   1171c:	bgt	11764 <__assert_fail@plt+0x558>
   11720:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11724:	cmn	r3, #2
   11728:	beq	1186c <__assert_fail@plt+0x660>
   1172c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11730:	cmn	r3, #2
   11734:	bgt	11748 <__assert_fail@plt+0x53c>
   11738:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1173c:	cmn	r3, #3
   11740:	beq	11874 <__assert_fail@plt+0x668>
   11744:	b	118cc <__assert_fail@plt+0x6c0>
   11748:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1174c:	cmp	r3, #71	; 0x47
   11750:	beq	11858 <__assert_fail@plt+0x64c>
   11754:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11758:	cmp	r3, #90	; 0x5a
   1175c:	beq	117b4 <__assert_fail@plt+0x5a8>
   11760:	b	118cc <__assert_fail@plt+0x6c0>
   11764:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11768:	cmp	r3, #114	; 0x72
   1176c:	beq	1181c <__assert_fail@plt+0x610>
   11770:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11774:	cmp	r3, #114	; 0x72
   11778:	bgt	11798 <__assert_fail@plt+0x58c>
   1177c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11780:	cmp	r3, #103	; 0x67
   11784:	beq	117f4 <__assert_fail@plt+0x5e8>
   11788:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1178c:	cmp	r3, #110	; 0x6e
   11790:	beq	11808 <__assert_fail@plt+0x5fc>
   11794:	b	118cc <__assert_fail@plt+0x6c0>
   11798:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1179c:	cmp	r3, #117	; 0x75
   117a0:	beq	11830 <__assert_fail@plt+0x624>
   117a4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   117a8:	cmp	r3, #122	; 0x7a
   117ac:	beq	11844 <__assert_fail@plt+0x638>
   117b0:	b	118cc <__assert_fail@plt+0x6c0>
   117b4:	ldr	r3, [fp, #-20]	; 0xffffffec
   117b8:	cmp	r3, #0
   117bc:	bne	117e0 <__assert_fail@plt+0x5d4>
   117c0:	movw	r0, #38716	; 0x973c
   117c4:	movt	r0, #1
   117c8:	bl	110d4 <gettext@plt>
   117cc:	mov	r3, r0
   117d0:	mov	r2, r3
   117d4:	mov	r1, #0
   117d8:	mov	r0, #1
   117dc:	bl	11068 <error@plt>
   117e0:	movw	r3, #45460	; 0xb194
   117e4:	movt	r3, #2
   117e8:	mov	r2, #1
   117ec:	strb	r2, [r3]
   117f0:	b	118d4 <__assert_fail@plt+0x6c8>
   117f4:	movw	r3, #45463	; 0xb197
   117f8:	movt	r3, #2
   117fc:	mov	r2, #1
   11800:	strb	r2, [r3]
   11804:	b	118d4 <__assert_fail@plt+0x6c8>
   11808:	movw	r3, #45467	; 0xb19b
   1180c:	movt	r3, #2
   11810:	mov	r2, #1
   11814:	strb	r2, [r3]
   11818:	b	118d4 <__assert_fail@plt+0x6c8>
   1181c:	movw	r3, #45464	; 0xb198
   11820:	movt	r3, #2
   11824:	mov	r2, #1
   11828:	strb	r2, [r3]
   1182c:	b	118d4 <__assert_fail@plt+0x6c8>
   11830:	movw	r3, #45465	; 0xb199
   11834:	movt	r3, #2
   11838:	mov	r2, #1
   1183c:	strb	r2, [r3]
   11840:	b	118d4 <__assert_fail@plt+0x6c8>
   11844:	movw	r3, #45461	; 0xb195
   11848:	movt	r3, #2
   1184c:	mov	r2, #1
   11850:	strb	r2, [r3]
   11854:	b	118d4 <__assert_fail@plt+0x6c8>
   11858:	movw	r3, #45462	; 0xb196
   1185c:	movt	r3, #2
   11860:	mov	r2, #1
   11864:	strb	r2, [r3]
   11868:	b	118d4 <__assert_fail@plt+0x6c8>
   1186c:	mov	r0, #0
   11870:	bl	1150c <__assert_fail@plt+0x300>
   11874:	movw	r3, #45452	; 0xb18c
   11878:	movt	r3, #2
   1187c:	ldr	r0, [r3]
   11880:	movw	r3, #45344	; 0xb120
   11884:	movt	r3, #2
   11888:	ldr	r2, [r3]
   1188c:	mov	r3, #0
   11890:	str	r3, [sp, #8]
   11894:	movw	r3, #38772	; 0x9774
   11898:	movt	r3, #1
   1189c:	str	r3, [sp, #4]
   118a0:	movw	r3, #38788	; 0x9784
   118a4:	movt	r3, #1
   118a8:	str	r3, [sp]
   118ac:	mov	r3, r2
   118b0:	movw	r2, #37208	; 0x9158
   118b4:	movt	r2, #1
   118b8:	movw	r1, #38688	; 0x9720
   118bc:	movt	r1, #1
   118c0:	bl	165c0 <__assert_fail@plt+0x53b4>
   118c4:	mov	r0, #0
   118c8:	bl	110c8 <exit@plt>
   118cc:	mov	r0, #1
   118d0:	bl	1150c <__assert_fail@plt+0x300>
   118d4:	mov	r3, #0
   118d8:	str	r3, [sp]
   118dc:	movw	r3, #37644	; 0x930c
   118e0:	movt	r3, #1
   118e4:	movw	r2, #38804	; 0x9794
   118e8:	movt	r2, #1
   118ec:	ldr	r1, [fp, #-60]	; 0xffffffc4
   118f0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   118f4:	bl	110b0 <getopt_long@plt>
   118f8:	str	r0, [fp, #-32]	; 0xffffffe0
   118fc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11900:	cmn	r3, #1
   11904:	bne	11708 <__assert_fail@plt+0x4fc>
   11908:	movw	r3, #45440	; 0xb180
   1190c:	movt	r3, #2
   11910:	ldr	r3, [r3]
   11914:	ldr	r2, [fp, #-56]	; 0xffffffc8
   11918:	sub	r3, r2, r3
   1191c:	str	r3, [fp, #-36]	; 0xffffffdc
   11920:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11924:	cmp	r3, #0
   11928:	beq	11960 <__assert_fail@plt+0x754>
   1192c:	movw	r3, #45460	; 0xb194
   11930:	movt	r3, #2
   11934:	ldrb	r3, [r3]
   11938:	cmp	r3, #0
   1193c:	beq	11960 <__assert_fail@plt+0x754>
   11940:	movw	r0, #38816	; 0x97a0
   11944:	movt	r0, #1
   11948:	bl	110d4 <gettext@plt>
   1194c:	mov	r3, r0
   11950:	mov	r2, r3
   11954:	mov	r1, #0
   11958:	mov	r0, #1
   1195c:	bl	11068 <error@plt>
   11960:	movw	r3, #45465	; 0xb199
   11964:	movt	r3, #2
   11968:	ldrb	r3, [r3]
   1196c:	mov	r2, r3
   11970:	movw	r3, #45463	; 0xb197
   11974:	movt	r3, #2
   11978:	ldrb	r3, [r3]
   1197c:	add	r2, r2, r3
   11980:	movw	r3, #45462	; 0xb196
   11984:	movt	r3, #2
   11988:	ldrb	r3, [r3]
   1198c:	add	r2, r2, r3
   11990:	movw	r3, #45460	; 0xb194
   11994:	movt	r3, #2
   11998:	ldrb	r3, [r3]
   1199c:	add	r3, r2, r3
   119a0:	cmp	r3, #1
   119a4:	ble	119c8 <__assert_fail@plt+0x7bc>
   119a8:	movw	r0, #38868	; 0x97d4
   119ac:	movt	r0, #1
   119b0:	bl	110d4 <gettext@plt>
   119b4:	mov	r3, r0
   119b8:	mov	r2, r3
   119bc:	mov	r1, #0
   119c0:	mov	r0, #1
   119c4:	bl	11068 <error@plt>
   119c8:	movw	r3, #45465	; 0xb199
   119cc:	movt	r3, #2
   119d0:	ldrb	r3, [r3]
   119d4:	eor	r3, r3, #1
   119d8:	uxtb	r3, r3
   119dc:	cmp	r3, #0
   119e0:	beq	11a40 <__assert_fail@plt+0x834>
   119e4:	movw	r3, #45463	; 0xb197
   119e8:	movt	r3, #2
   119ec:	ldrb	r3, [r3]
   119f0:	eor	r3, r3, #1
   119f4:	uxtb	r3, r3
   119f8:	cmp	r3, #0
   119fc:	beq	11a40 <__assert_fail@plt+0x834>
   11a00:	movw	r3, #45462	; 0xb196
   11a04:	movt	r3, #2
   11a08:	ldrb	r3, [r3]
   11a0c:	eor	r3, r3, #1
   11a10:	uxtb	r3, r3
   11a14:	cmp	r3, #0
   11a18:	beq	11a40 <__assert_fail@plt+0x834>
   11a1c:	movw	r3, #45460	; 0xb194
   11a20:	movt	r3, #2
   11a24:	ldrb	r3, [r3]
   11a28:	eor	r3, r3, #1
   11a2c:	uxtb	r3, r3
   11a30:	cmp	r3, #0
   11a34:	beq	11a40 <__assert_fail@plt+0x834>
   11a38:	mov	r3, #1
   11a3c:	b	11a44 <__assert_fail@plt+0x838>
   11a40:	mov	r3, #0
   11a44:	strb	r3, [fp, #-37]	; 0xffffffdb
   11a48:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   11a4c:	and	r3, r3, #1
   11a50:	strb	r3, [fp, #-37]	; 0xffffffdb
   11a54:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   11a58:	cmp	r3, #0
   11a5c:	beq	11aa8 <__assert_fail@plt+0x89c>
   11a60:	movw	r3, #45464	; 0xb198
   11a64:	movt	r3, #2
   11a68:	ldrb	r3, [r3]
   11a6c:	cmp	r3, #0
   11a70:	bne	11a88 <__assert_fail@plt+0x87c>
   11a74:	movw	r3, #45467	; 0xb19b
   11a78:	movt	r3, #2
   11a7c:	ldrb	r3, [r3]
   11a80:	cmp	r3, #0
   11a84:	beq	11aa8 <__assert_fail@plt+0x89c>
   11a88:	movw	r0, #38912	; 0x9800
   11a8c:	movt	r0, #1
   11a90:	bl	110d4 <gettext@plt>
   11a94:	mov	r3, r0
   11a98:	mov	r2, r3
   11a9c:	mov	r1, #0
   11aa0:	mov	r0, #1
   11aa4:	bl	11068 <error@plt>
   11aa8:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   11aac:	cmp	r3, #0
   11ab0:	beq	11ae8 <__assert_fail@plt+0x8dc>
   11ab4:	movw	r3, #45461	; 0xb195
   11ab8:	movt	r3, #2
   11abc:	ldrb	r3, [r3]
   11ac0:	cmp	r3, #0
   11ac4:	beq	11ae8 <__assert_fail@plt+0x8dc>
   11ac8:	movw	r0, #38968	; 0x9838
   11acc:	movt	r0, #1
   11ad0:	bl	110d4 <gettext@plt>
   11ad4:	mov	r3, r0
   11ad8:	mov	r2, r3
   11adc:	mov	r1, #0
   11ae0:	mov	r0, #1
   11ae4:	bl	11068 <error@plt>
   11ae8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11aec:	cmp	r3, #0
   11af0:	bne	11bbc <__assert_fail@plt+0x9b0>
   11af4:	movw	r3, #45460	; 0xb194
   11af8:	movt	r3, #2
   11afc:	ldrb	r3, [r3]
   11b00:	cmp	r3, #0
   11b04:	bne	11b2c <__assert_fail@plt+0x920>
   11b08:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   11b0c:	cmp	r3, #0
   11b10:	beq	11bbc <__assert_fail@plt+0x9b0>
   11b14:	movw	r0, #39016	; 0x9868
   11b18:	movt	r0, #1
   11b1c:	bl	11074 <getenv@plt>
   11b20:	mov	r3, r0
   11b24:	cmp	r3, #0
   11b28:	bne	11bbc <__assert_fail@plt+0x9b0>
   11b2c:	ldr	r3, [fp, #-20]	; 0xffffffec
   11b30:	cmp	r3, #0
   11b34:	beq	11b64 <__assert_fail@plt+0x958>
   11b38:	movw	r0, #45484	; 0xb1ac
   11b3c:	movt	r0, #2
   11b40:	bl	11038 <getcon@plt>
   11b44:	mov	r3, r0
   11b48:	cmp	r3, #0
   11b4c:	beq	11b64 <__assert_fail@plt+0x958>
   11b50:	movw	r3, #45460	; 0xb194
   11b54:	movt	r3, #2
   11b58:	ldrb	r3, [r3]
   11b5c:	cmp	r3, #0
   11b60:	bne	11b9c <__assert_fail@plt+0x990>
   11b64:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   11b68:	cmp	r3, #0
   11b6c:	beq	11bbc <__assert_fail@plt+0x9b0>
   11b70:	movw	r0, #45484	; 0xb1ac
   11b74:	movt	r0, #2
   11b78:	bl	114cc <__assert_fail@plt+0x2c0>
   11b7c:	mov	r3, r0
   11b80:	cmp	r3, #0
   11b84:	bge	11bbc <__assert_fail@plt+0x9b0>
   11b88:	movw	r3, #45460	; 0xb194
   11b8c:	movt	r3, #2
   11b90:	ldrb	r3, [r3]
   11b94:	cmp	r3, #0
   11b98:	beq	11bbc <__assert_fail@plt+0x9b0>
   11b9c:	movw	r0, #39032	; 0x9878
   11ba0:	movt	r0, #1
   11ba4:	bl	110d4 <gettext@plt>
   11ba8:	mov	r3, r0
   11bac:	mov	r2, r3
   11bb0:	mov	r1, #0
   11bb4:	mov	r0, #1
   11bb8:	bl	11068 <error@plt>
   11bbc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11bc0:	cmp	r3, #0
   11bc4:	beq	11db4 <__assert_fail@plt+0xba8>
   11bc8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11bcc:	cmp	r3, #1
   11bd0:	movhi	r3, #1
   11bd4:	movls	r3, #0
   11bd8:	uxtb	r2, r3
   11bdc:	movw	r3, #45466	; 0xb19a
   11be0:	movt	r3, #2
   11be4:	strb	r2, [r3]
   11be8:	movw	r3, #45440	; 0xb180
   11bec:	movt	r3, #2
   11bf0:	ldr	r3, [r3]
   11bf4:	mov	r2, r3
   11bf8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11bfc:	add	r3, r3, r2
   11c00:	str	r3, [fp, #-36]	; 0xffffffdc
   11c04:	b	11d94 <__assert_fail@plt+0xb88>
   11c08:	mov	r3, #0
   11c0c:	str	r3, [fp, #-16]
   11c10:	movw	r3, #45440	; 0xb180
   11c14:	movt	r3, #2
   11c18:	ldr	r3, [r3]
   11c1c:	lsl	r3, r3, #2
   11c20:	ldr	r2, [fp, #-60]	; 0xffffffc4
   11c24:	add	r3, r2, r3
   11c28:	ldr	r3, [r3]
   11c2c:	str	r3, [fp, #-44]	; 0xffffffd4
   11c30:	ldr	r3, [fp, #-44]	; 0xffffffd4
   11c34:	ldrb	r3, [r3]
   11c38:	cmp	r3, #0
   11c3c:	beq	11c84 <__assert_fail@plt+0xa78>
   11c40:	mov	r3, #0
   11c44:	str	r3, [sp]
   11c48:	mov	r3, #0
   11c4c:	mov	r2, #0
   11c50:	movw	r1, #45472	; 0xb1a0
   11c54:	movt	r1, #2
   11c58:	ldr	r0, [fp, #-44]	; 0xffffffd4
   11c5c:	bl	15df0 <__assert_fail@plt+0x4be4>
   11c60:	mov	r3, r0
   11c64:	cmp	r3, #0
   11c68:	bne	11c84 <__assert_fail@plt+0xa78>
   11c6c:	movw	r3, #45472	; 0xb1a0
   11c70:	movt	r3, #2
   11c74:	ldr	r3, [r3]
   11c78:	mov	r0, r3
   11c7c:	bl	10f60 <getpwuid@plt>
   11c80:	str	r0, [fp, #-16]
   11c84:	ldr	r3, [fp, #-16]
   11c88:	cmp	r3, #0
   11c8c:	bne	11cf8 <__assert_fail@plt+0xaec>
   11c90:	bl	11110 <__errno_location@plt>
   11c94:	mov	r3, r0
   11c98:	ldr	r4, [r3]
   11c9c:	movw	r0, #39060	; 0x9894
   11ca0:	movt	r0, #1
   11ca4:	bl	110d4 <gettext@plt>
   11ca8:	mov	r5, r0
   11cac:	movw	r3, #45440	; 0xb180
   11cb0:	movt	r3, #2
   11cb4:	ldr	r3, [r3]
   11cb8:	lsl	r3, r3, #2
   11cbc:	ldr	r2, [fp, #-60]	; 0xffffffc4
   11cc0:	add	r3, r2, r3
   11cc4:	ldr	r3, [r3]
   11cc8:	mov	r0, r3
   11ccc:	bl	15980 <__assert_fail@plt+0x4774>
   11cd0:	mov	r3, r0
   11cd4:	mov	r2, r5
   11cd8:	mov	r1, r4
   11cdc:	mov	r0, #0
   11ce0:	bl	11068 <error@plt>
   11ce4:	movw	r3, #45340	; 0xb11c
   11ce8:	movt	r3, #2
   11cec:	mov	r2, #0
   11cf0:	strb	r2, [r3]
   11cf4:	b	11d78 <__assert_fail@plt+0xb6c>
   11cf8:	ldr	r3, [fp, #-16]
   11cfc:	ldr	r3, [r3]
   11d00:	mov	r0, r3
   11d04:	bl	16f6c <__assert_fail@plt+0x5d60>
   11d08:	mov	r3, r0
   11d0c:	str	r3, [fp, #-28]	; 0xffffffe4
   11d10:	ldr	r3, [fp, #-16]
   11d14:	ldr	r2, [r3, #8]
   11d18:	movw	r3, #45472	; 0xb1a0
   11d1c:	movt	r3, #2
   11d20:	str	r2, [r3]
   11d24:	movw	r3, #45472	; 0xb1a0
   11d28:	movt	r3, #2
   11d2c:	ldr	r2, [r3]
   11d30:	movw	r3, #45468	; 0xb19c
   11d34:	movt	r3, #2
   11d38:	str	r2, [r3]
   11d3c:	ldr	r3, [fp, #-16]
   11d40:	ldr	r2, [r3, #12]
   11d44:	movw	r3, #45480	; 0xb1a8
   11d48:	movt	r3, #2
   11d4c:	str	r2, [r3]
   11d50:	movw	r3, #45480	; 0xb1a8
   11d54:	movt	r3, #2
   11d58:	ldr	r2, [r3]
   11d5c:	movw	r3, #45476	; 0xb1a4
   11d60:	movt	r3, #2
   11d64:	str	r2, [r3]
   11d68:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11d6c:	bl	12714 <__assert_fail@plt+0x1508>
   11d70:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11d74:	bl	12edc <__assert_fail@plt+0x1cd0>
   11d78:	movw	r3, #45440	; 0xb180
   11d7c:	movt	r3, #2
   11d80:	ldr	r3, [r3]
   11d84:	add	r2, r3, #1
   11d88:	movw	r3, #45440	; 0xb180
   11d8c:	movt	r3, #2
   11d90:	str	r2, [r3]
   11d94:	movw	r3, #45440	; 0xb180
   11d98:	movt	r3, #2
   11d9c:	ldr	r3, [r3]
   11da0:	mov	r2, r3
   11da4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11da8:	cmp	r3, r2
   11dac:	bhi	11c08 <__assert_fail@plt+0x9fc>
   11db0:	b	12144 <__assert_fail@plt+0xf38>
   11db4:	mvn	r3, #0
   11db8:	str	r3, [fp, #-48]	; 0xffffffd0
   11dbc:	mvn	r3, #0
   11dc0:	str	r3, [fp, #-52]	; 0xffffffcc
   11dc4:	movw	r3, #45465	; 0xb199
   11dc8:	movt	r3, #2
   11dcc:	ldrb	r3, [r3]
   11dd0:	cmp	r3, #0
   11dd4:	beq	11df0 <__assert_fail@plt+0xbe4>
   11dd8:	movw	r3, #45464	; 0xb198
   11ddc:	movt	r3, #2
   11de0:	ldrb	r3, [r3]
   11de4:	eor	r3, r3, #1
   11de8:	uxtb	r3, r3
   11dec:	b	11e58 <__assert_fail@plt+0xc4c>
   11df0:	movw	r3, #45463	; 0xb197
   11df4:	movt	r3, #2
   11df8:	ldrb	r3, [r3]
   11dfc:	eor	r3, r3, #1
   11e00:	uxtb	r3, r3
   11e04:	cmp	r3, #0
   11e08:	beq	11e4c <__assert_fail@plt+0xc40>
   11e0c:	movw	r3, #45462	; 0xb196
   11e10:	movt	r3, #2
   11e14:	ldrb	r3, [r3]
   11e18:	eor	r3, r3, #1
   11e1c:	uxtb	r3, r3
   11e20:	cmp	r3, #0
   11e24:	beq	11e4c <__assert_fail@plt+0xc40>
   11e28:	movw	r3, #45460	; 0xb194
   11e2c:	movt	r3, #2
   11e30:	ldrb	r3, [r3]
   11e34:	eor	r3, r3, #1
   11e38:	uxtb	r3, r3
   11e3c:	cmp	r3, #0
   11e40:	beq	11e4c <__assert_fail@plt+0xc40>
   11e44:	mov	r3, #1
   11e48:	b	11e50 <__assert_fail@plt+0xc44>
   11e4c:	mov	r3, #0
   11e50:	and	r3, r3, #1
   11e54:	uxtb	r3, r3
   11e58:	cmp	r3, #0
   11e5c:	beq	11edc <__assert_fail@plt+0xcd0>
   11e60:	bl	11110 <__errno_location@plt>
   11e64:	mov	r2, r0
   11e68:	mov	r3, #0
   11e6c:	str	r3, [r2]
   11e70:	bl	10ff0 <geteuid@plt>
   11e74:	mov	r2, r0
   11e78:	movw	r3, #45472	; 0xb1a0
   11e7c:	movt	r3, #2
   11e80:	str	r2, [r3]
   11e84:	movw	r3, #45472	; 0xb1a0
   11e88:	movt	r3, #2
   11e8c:	ldr	r3, [r3]
   11e90:	ldr	r2, [fp, #-48]	; 0xffffffd0
   11e94:	cmp	r2, r3
   11e98:	bne	11edc <__assert_fail@plt+0xcd0>
   11e9c:	bl	11110 <__errno_location@plt>
   11ea0:	mov	r3, r0
   11ea4:	ldr	r3, [r3]
   11ea8:	cmp	r3, #0
   11eac:	beq	11edc <__assert_fail@plt+0xcd0>
   11eb0:	bl	11110 <__errno_location@plt>
   11eb4:	mov	r3, r0
   11eb8:	ldr	r4, [r3]
   11ebc:	movw	r0, #39080	; 0x98a8
   11ec0:	movt	r0, #1
   11ec4:	bl	110d4 <gettext@plt>
   11ec8:	mov	r3, r0
   11ecc:	mov	r2, r3
   11ed0:	mov	r1, r4
   11ed4:	mov	r0, #1
   11ed8:	bl	11068 <error@plt>
   11edc:	movw	r3, #45465	; 0xb199
   11ee0:	movt	r3, #2
   11ee4:	ldrb	r3, [r3]
   11ee8:	cmp	r3, #0
   11eec:	beq	11f00 <__assert_fail@plt+0xcf4>
   11ef0:	movw	r3, #45464	; 0xb198
   11ef4:	movt	r3, #2
   11ef8:	ldrb	r3, [r3]
   11efc:	b	11f60 <__assert_fail@plt+0xd54>
   11f00:	movw	r3, #45463	; 0xb197
   11f04:	movt	r3, #2
   11f08:	ldrb	r3, [r3]
   11f0c:	eor	r3, r3, #1
   11f10:	uxtb	r3, r3
   11f14:	cmp	r3, #0
   11f18:	beq	11f54 <__assert_fail@plt+0xd48>
   11f1c:	movw	r3, #45462	; 0xb196
   11f20:	movt	r3, #2
   11f24:	ldrb	r3, [r3]
   11f28:	cmp	r3, #0
   11f2c:	bne	11f4c <__assert_fail@plt+0xd40>
   11f30:	movw	r3, #45460	; 0xb194
   11f34:	movt	r3, #2
   11f38:	ldrb	r3, [r3]
   11f3c:	eor	r3, r3, #1
   11f40:	uxtb	r3, r3
   11f44:	cmp	r3, #0
   11f48:	beq	11f54 <__assert_fail@plt+0xd48>
   11f4c:	mov	r3, #1
   11f50:	b	11f58 <__assert_fail@plt+0xd4c>
   11f54:	mov	r3, #0
   11f58:	and	r3, r3, #1
   11f5c:	uxtb	r3, r3
   11f60:	cmp	r3, #0
   11f64:	beq	11fe4 <__assert_fail@plt+0xdd8>
   11f68:	bl	11110 <__errno_location@plt>
   11f6c:	mov	r2, r0
   11f70:	mov	r3, #0
   11f74:	str	r3, [r2]
   11f78:	bl	10f84 <getuid@plt>
   11f7c:	mov	r2, r0
   11f80:	movw	r3, #45468	; 0xb19c
   11f84:	movt	r3, #2
   11f88:	str	r2, [r3]
   11f8c:	movw	r3, #45468	; 0xb19c
   11f90:	movt	r3, #2
   11f94:	ldr	r3, [r3]
   11f98:	ldr	r2, [fp, #-48]	; 0xffffffd0
   11f9c:	cmp	r2, r3
   11fa0:	bne	11fe4 <__assert_fail@plt+0xdd8>
   11fa4:	bl	11110 <__errno_location@plt>
   11fa8:	mov	r3, r0
   11fac:	ldr	r3, [r3]
   11fb0:	cmp	r3, #0
   11fb4:	beq	11fe4 <__assert_fail@plt+0xdd8>
   11fb8:	bl	11110 <__errno_location@plt>
   11fbc:	mov	r3, r0
   11fc0:	ldr	r4, [r3]
   11fc4:	movw	r0, #39108	; 0x98c4
   11fc8:	movt	r0, #1
   11fcc:	bl	110d4 <gettext@plt>
   11fd0:	mov	r3, r0
   11fd4:	mov	r2, r3
   11fd8:	mov	r1, r4
   11fdc:	mov	r0, #1
   11fe0:	bl	11068 <error@plt>
   11fe4:	movw	r3, #45465	; 0xb199
   11fe8:	movt	r3, #2
   11fec:	ldrb	r3, [r3]
   11ff0:	eor	r3, r3, #1
   11ff4:	uxtb	r3, r3
   11ff8:	cmp	r3, #0
   11ffc:	beq	1213c <__assert_fail@plt+0xf30>
   12000:	movw	r3, #45463	; 0xb197
   12004:	movt	r3, #2
   12008:	ldrb	r3, [r3]
   1200c:	cmp	r3, #0
   12010:	bne	12044 <__assert_fail@plt+0xe38>
   12014:	movw	r3, #45462	; 0xb196
   12018:	movt	r3, #2
   1201c:	ldrb	r3, [r3]
   12020:	cmp	r3, #0
   12024:	bne	12044 <__assert_fail@plt+0xe38>
   12028:	movw	r3, #45460	; 0xb194
   1202c:	movt	r3, #2
   12030:	ldrb	r3, [r3]
   12034:	eor	r3, r3, #1
   12038:	uxtb	r3, r3
   1203c:	cmp	r3, #0
   12040:	beq	1213c <__assert_fail@plt+0xf30>
   12044:	bl	11110 <__errno_location@plt>
   12048:	mov	r2, r0
   1204c:	mov	r3, #0
   12050:	str	r3, [r2]
   12054:	bl	11008 <getegid@plt>
   12058:	mov	r2, r0
   1205c:	movw	r3, #45480	; 0xb1a8
   12060:	movt	r3, #2
   12064:	str	r2, [r3]
   12068:	movw	r3, #45480	; 0xb1a8
   1206c:	movt	r3, #2
   12070:	ldr	r3, [r3]
   12074:	ldr	r2, [fp, #-52]	; 0xffffffcc
   12078:	cmp	r2, r3
   1207c:	bne	120c0 <__assert_fail@plt+0xeb4>
   12080:	bl	11110 <__errno_location@plt>
   12084:	mov	r3, r0
   12088:	ldr	r3, [r3]
   1208c:	cmp	r3, #0
   12090:	beq	120c0 <__assert_fail@plt+0xeb4>
   12094:	bl	11110 <__errno_location@plt>
   12098:	mov	r3, r0
   1209c:	ldr	r4, [r3]
   120a0:	movw	r0, #39128	; 0x98d8
   120a4:	movt	r0, #1
   120a8:	bl	110d4 <gettext@plt>
   120ac:	mov	r3, r0
   120b0:	mov	r2, r3
   120b4:	mov	r1, r4
   120b8:	mov	r0, #1
   120bc:	bl	11068 <error@plt>
   120c0:	bl	11110 <__errno_location@plt>
   120c4:	mov	r2, r0
   120c8:	mov	r3, #0
   120cc:	str	r3, [r2]
   120d0:	bl	11128 <getgid@plt>
   120d4:	mov	r2, r0
   120d8:	movw	r3, #45476	; 0xb1a4
   120dc:	movt	r3, #2
   120e0:	str	r2, [r3]
   120e4:	movw	r3, #45476	; 0xb1a4
   120e8:	movt	r3, #2
   120ec:	ldr	r3, [r3]
   120f0:	ldr	r2, [fp, #-52]	; 0xffffffcc
   120f4:	cmp	r2, r3
   120f8:	bne	1213c <__assert_fail@plt+0xf30>
   120fc:	bl	11110 <__errno_location@plt>
   12100:	mov	r3, r0
   12104:	ldr	r3, [r3]
   12108:	cmp	r3, #0
   1210c:	beq	1213c <__assert_fail@plt+0xf30>
   12110:	bl	11110 <__errno_location@plt>
   12114:	mov	r3, r0
   12118:	ldr	r4, [r3]
   1211c:	movw	r0, #39156	; 0x98f4
   12120:	movt	r0, #1
   12124:	bl	110d4 <gettext@plt>
   12128:	mov	r3, r0
   1212c:	mov	r2, r3
   12130:	mov	r1, r4
   12134:	mov	r0, #1
   12138:	bl	11068 <error@plt>
   1213c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12140:	bl	12714 <__assert_fail@plt+0x1508>
   12144:	movw	r3, #45340	; 0xb11c
   12148:	movt	r3, #2
   1214c:	ldrb	r3, [r3]
   12150:	eor	r3, r3, #1
   12154:	uxtb	r3, r3
   12158:	mov	r0, r3
   1215c:	sub	sp, fp, #12
   12160:	ldrd	r4, [sp]
   12164:	ldr	fp, [sp, #8]
   12168:	add	sp, sp, #12
   1216c:	pop	{pc}		; (ldr pc, [sp], #4)
   12170:	str	fp, [sp, #-8]!
   12174:	str	lr, [sp, #4]
   12178:	add	fp, sp, #4
   1217c:	sub	sp, sp, #8
   12180:	str	r0, [fp, #-8]
   12184:	ldr	r3, [fp, #-8]
   12188:	ldr	r3, [r3]
   1218c:	mov	r0, r3
   12190:	mov	r1, #0
   12194:	movw	r2, #45488	; 0xb1b0
   12198:	movt	r2, #2
   1219c:	bl	12f80 <__assert_fail@plt+0x1d74>
   121a0:	mov	r3, r0
   121a4:	mov	r0, r3
   121a8:	sub	sp, fp, #4
   121ac:	ldr	fp, [sp]
   121b0:	add	sp, sp, #4
   121b4:	pop	{pc}		; (ldr pc, [sp], #4)
   121b8:	str	fp, [sp, #-8]!
   121bc:	str	lr, [sp, #4]
   121c0:	add	fp, sp, #4
   121c4:	sub	sp, sp, #8
   121c8:	str	r0, [fp, #-8]
   121cc:	ldr	r3, [fp, #-8]
   121d0:	ldr	r3, [r3]
   121d4:	mov	r0, r3
   121d8:	mov	r1, #0
   121dc:	movw	r2, #45512	; 0xb1c8
   121e0:	movt	r2, #2
   121e4:	bl	12f80 <__assert_fail@plt+0x1d74>
   121e8:	mov	r3, r0
   121ec:	mov	r0, r3
   121f0:	sub	sp, fp, #4
   121f4:	ldr	fp, [sp]
   121f8:	add	sp, sp, #4
   121fc:	pop	{pc}		; (ldr pc, [sp], #4)
   12200:	str	r4, [sp, #-12]!
   12204:	str	fp, [sp, #4]
   12208:	str	lr, [sp, #8]
   1220c:	add	fp, sp, #8
   12210:	sub	sp, sp, #20
   12214:	str	r0, [fp, #-24]	; 0xffffffe8
   12218:	mov	r3, #0
   1221c:	str	r3, [fp, #-16]
   12220:	movw	r3, #45467	; 0xb19b
   12224:	movt	r3, #2
   12228:	ldrb	r3, [r3]
   1222c:	cmp	r3, #0
   12230:	beq	12290 <__assert_fail@plt+0x1084>
   12234:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12238:	mov	r0, r3
   1223c:	bl	10f60 <getpwuid@plt>
   12240:	str	r0, [fp, #-16]
   12244:	ldr	r3, [fp, #-16]
   12248:	cmp	r3, #0
   1224c:	bne	12290 <__assert_fail@plt+0x1084>
   12250:	movw	r0, #39176	; 0x9908
   12254:	movt	r0, #1
   12258:	bl	110d4 <gettext@plt>
   1225c:	mov	r4, r0
   12260:	sub	r3, fp, #24
   12264:	mov	r0, r3
   12268:	bl	121b8 <__assert_fail@plt+0xfac>
   1226c:	mov	r3, r0
   12270:	mov	r2, r4
   12274:	mov	r1, #0
   12278:	mov	r0, #0
   1227c:	bl	11068 <error@plt>
   12280:	movw	r3, #45340	; 0xb11c
   12284:	movt	r3, #2
   12288:	mov	r2, #0
   1228c:	strb	r2, [r3]
   12290:	ldr	r3, [fp, #-16]
   12294:	cmp	r3, #0
   12298:	beq	122a8 <__assert_fail@plt+0x109c>
   1229c:	ldr	r3, [fp, #-16]
   122a0:	ldr	r3, [r3]
   122a4:	b	122b8 <__assert_fail@plt+0x10ac>
   122a8:	sub	r3, fp, #24
   122ac:	mov	r0, r3
   122b0:	bl	121b8 <__assert_fail@plt+0xfac>
   122b4:	mov	r3, r0
   122b8:	str	r3, [fp, #-20]	; 0xffffffec
   122bc:	movw	r3, #45452	; 0xb18c
   122c0:	movt	r3, #2
   122c4:	ldr	r3, [r3]
   122c8:	mov	r1, r3
   122cc:	ldr	r0, [fp, #-20]	; 0xffffffec
   122d0:	bl	10f24 <fputs_unlocked@plt>
   122d4:	nop	{0}
   122d8:	sub	sp, fp, #8
   122dc:	ldr	r4, [sp]
   122e0:	ldr	fp, [sp, #4]
   122e4:	add	sp, sp, #8
   122e8:	pop	{pc}		; (ldr pc, [sp], #4)
   122ec:	strd	r4, [sp, #-16]!
   122f0:	str	fp, [sp, #8]
   122f4:	str	lr, [sp, #12]
   122f8:	add	fp, sp, #12
   122fc:	sub	sp, sp, #32
   12300:	str	r0, [fp, #-40]	; 0xffffffd8
   12304:	movw	r0, #39208	; 0x9928
   12308:	movt	r0, #1
   1230c:	bl	110d4 <gettext@plt>
   12310:	mov	r4, r0
   12314:	movw	r0, #45468	; 0xb19c
   12318:	movt	r0, #2
   1231c:	bl	121b8 <__assert_fail@plt+0xfac>
   12320:	mov	r3, r0
   12324:	mov	r1, r3
   12328:	mov	r0, r4
   1232c:	bl	10f6c <printf@plt>
   12330:	movw	r3, #45468	; 0xb19c
   12334:	movt	r3, #2
   12338:	ldr	r3, [r3]
   1233c:	mov	r0, r3
   12340:	bl	10f60 <getpwuid@plt>
   12344:	str	r0, [fp, #-16]
   12348:	ldr	r3, [fp, #-16]
   1234c:	cmp	r3, #0
   12350:	beq	1236c <__assert_fail@plt+0x1160>
   12354:	ldr	r3, [fp, #-16]
   12358:	ldr	r3, [r3]
   1235c:	mov	r1, r3
   12360:	movw	r0, #39216	; 0x9930
   12364:	movt	r0, #1
   12368:	bl	10f6c <printf@plt>
   1236c:	movw	r0, #39224	; 0x9938
   12370:	movt	r0, #1
   12374:	bl	110d4 <gettext@plt>
   12378:	mov	r4, r0
   1237c:	movw	r0, #45476	; 0xb1a4
   12380:	movt	r0, #2
   12384:	bl	12170 <__assert_fail@plt+0xf64>
   12388:	mov	r3, r0
   1238c:	mov	r1, r3
   12390:	mov	r0, r4
   12394:	bl	10f6c <printf@plt>
   12398:	movw	r3, #45476	; 0xb1a4
   1239c:	movt	r3, #2
   123a0:	ldr	r3, [r3]
   123a4:	mov	r0, r3
   123a8:	bl	111e8 <getgrgid@plt>
   123ac:	str	r0, [fp, #-28]	; 0xffffffe4
   123b0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   123b4:	cmp	r3, #0
   123b8:	beq	123d4 <__assert_fail@plt+0x11c8>
   123bc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   123c0:	ldr	r3, [r3]
   123c4:	mov	r1, r3
   123c8:	movw	r0, #39216	; 0x9930
   123cc:	movt	r0, #1
   123d0:	bl	10f6c <printf@plt>
   123d4:	movw	r3, #45472	; 0xb1a0
   123d8:	movt	r3, #2
   123dc:	ldr	r2, [r3]
   123e0:	movw	r3, #45468	; 0xb19c
   123e4:	movt	r3, #2
   123e8:	ldr	r3, [r3]
   123ec:	cmp	r2, r3
   123f0:	beq	1245c <__assert_fail@plt+0x1250>
   123f4:	movw	r0, #39232	; 0x9940
   123f8:	movt	r0, #1
   123fc:	bl	110d4 <gettext@plt>
   12400:	mov	r4, r0
   12404:	movw	r0, #45472	; 0xb1a0
   12408:	movt	r0, #2
   1240c:	bl	121b8 <__assert_fail@plt+0xfac>
   12410:	mov	r3, r0
   12414:	mov	r1, r3
   12418:	mov	r0, r4
   1241c:	bl	10f6c <printf@plt>
   12420:	movw	r3, #45472	; 0xb1a0
   12424:	movt	r3, #2
   12428:	ldr	r3, [r3]
   1242c:	mov	r0, r3
   12430:	bl	10f60 <getpwuid@plt>
   12434:	str	r0, [fp, #-16]
   12438:	ldr	r3, [fp, #-16]
   1243c:	cmp	r3, #0
   12440:	beq	1245c <__assert_fail@plt+0x1250>
   12444:	ldr	r3, [fp, #-16]
   12448:	ldr	r3, [r3]
   1244c:	mov	r1, r3
   12450:	movw	r0, #39216	; 0x9930
   12454:	movt	r0, #1
   12458:	bl	10f6c <printf@plt>
   1245c:	movw	r3, #45480	; 0xb1a8
   12460:	movt	r3, #2
   12464:	ldr	r2, [r3]
   12468:	movw	r3, #45476	; 0xb1a4
   1246c:	movt	r3, #2
   12470:	ldr	r3, [r3]
   12474:	cmp	r2, r3
   12478:	beq	124e4 <__assert_fail@plt+0x12d8>
   1247c:	movw	r0, #39244	; 0x994c
   12480:	movt	r0, #1
   12484:	bl	110d4 <gettext@plt>
   12488:	mov	r4, r0
   1248c:	movw	r0, #45480	; 0xb1a8
   12490:	movt	r0, #2
   12494:	bl	12170 <__assert_fail@plt+0xf64>
   12498:	mov	r3, r0
   1249c:	mov	r1, r3
   124a0:	mov	r0, r4
   124a4:	bl	10f6c <printf@plt>
   124a8:	movw	r3, #45480	; 0xb1a8
   124ac:	movt	r3, #2
   124b0:	ldr	r3, [r3]
   124b4:	mov	r0, r3
   124b8:	bl	111e8 <getgrgid@plt>
   124bc:	str	r0, [fp, #-28]	; 0xffffffe4
   124c0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   124c4:	cmp	r3, #0
   124c8:	beq	124e4 <__assert_fail@plt+0x12d8>
   124cc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   124d0:	ldr	r3, [r3]
   124d4:	mov	r1, r3
   124d8:	movw	r0, #39216	; 0x9930
   124dc:	movt	r0, #1
   124e0:	bl	10f6c <printf@plt>
   124e4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   124e8:	cmp	r3, #0
   124ec:	beq	12514 <__assert_fail@plt+0x1308>
   124f0:	ldr	r3, [fp, #-16]
   124f4:	cmp	r3, #0
   124f8:	beq	12508 <__assert_fail@plt+0x12fc>
   124fc:	ldr	r3, [fp, #-16]
   12500:	ldr	r3, [r3, #12]
   12504:	b	1250c <__assert_fail@plt+0x1300>
   12508:	mvn	r3, #0
   1250c:	str	r3, [fp, #-20]	; 0xffffffec
   12510:	b	12524 <__assert_fail@plt+0x1318>
   12514:	movw	r3, #45480	; 0xb1a8
   12518:	movt	r3, #2
   1251c:	ldr	r3, [r3]
   12520:	str	r3, [fp, #-20]	; 0xffffffec
   12524:	sub	r3, fp, #36	; 0x24
   12528:	mov	r2, r3
   1252c:	ldr	r1, [fp, #-20]	; 0xffffffec
   12530:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12534:	bl	16ff8 <__assert_fail@plt+0x5dec>
   12538:	str	r0, [fp, #-32]	; 0xffffffe0
   1253c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12540:	cmp	r3, #0
   12544:	bge	125d0 <__assert_fail@plt+0x13c4>
   12548:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1254c:	cmp	r3, #0
   12550:	beq	12590 <__assert_fail@plt+0x1384>
   12554:	bl	11110 <__errno_location@plt>
   12558:	mov	r3, r0
   1255c:	ldr	r4, [r3]
   12560:	movw	r0, #39256	; 0x9958
   12564:	movt	r0, #1
   12568:	bl	110d4 <gettext@plt>
   1256c:	mov	r5, r0
   12570:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12574:	bl	15980 <__assert_fail@plt+0x4774>
   12578:	mov	r3, r0
   1257c:	mov	r2, r5
   12580:	mov	r1, r4
   12584:	mov	r0, #0
   12588:	bl	11068 <error@plt>
   1258c:	b	125bc <__assert_fail@plt+0x13b0>
   12590:	bl	11110 <__errno_location@plt>
   12594:	mov	r3, r0
   12598:	ldr	r4, [r3]
   1259c:	movw	r0, #39292	; 0x997c
   125a0:	movt	r0, #1
   125a4:	bl	110d4 <gettext@plt>
   125a8:	mov	r3, r0
   125ac:	mov	r2, r3
   125b0:	mov	r1, r4
   125b4:	mov	r0, #0
   125b8:	bl	11068 <error@plt>
   125bc:	movw	r3, #45340	; 0xb11c
   125c0:	movt	r3, #2
   125c4:	mov	r2, #0
   125c8:	strb	r2, [r3]
   125cc:	b	12700 <__assert_fail@plt+0x14f4>
   125d0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   125d4:	cmp	r3, #0
   125d8:	ble	12604 <__assert_fail@plt+0x13f8>
   125dc:	movw	r0, #39340	; 0x99ac
   125e0:	movt	r0, #1
   125e4:	bl	110d4 <gettext@plt>
   125e8:	mov	r2, r0
   125ec:	movw	r3, #45452	; 0xb18c
   125f0:	movt	r3, #2
   125f4:	ldr	r3, [r3]
   125f8:	mov	r1, r3
   125fc:	mov	r0, r2
   12600:	bl	10f24 <fputs_unlocked@plt>
   12604:	mov	r3, #0
   12608:	str	r3, [fp, #-24]	; 0xffffffe8
   1260c:	b	126a8 <__assert_fail@plt+0x149c>
   12610:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12614:	cmp	r3, #0
   12618:	ble	12624 <__assert_fail@plt+0x1418>
   1261c:	mov	r0, #44	; 0x2c
   12620:	bl	11200 <putchar_unlocked@plt>
   12624:	ldr	r2, [fp, #-36]	; 0xffffffdc
   12628:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1262c:	lsl	r3, r3, #2
   12630:	add	r3, r2, r3
   12634:	mov	r0, r3
   12638:	bl	12170 <__assert_fail@plt+0xf64>
   1263c:	mov	r2, r0
   12640:	movw	r3, #45452	; 0xb18c
   12644:	movt	r3, #2
   12648:	ldr	r3, [r3]
   1264c:	mov	r1, r3
   12650:	mov	r0, r2
   12654:	bl	10f24 <fputs_unlocked@plt>
   12658:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1265c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12660:	lsl	r3, r3, #2
   12664:	add	r3, r2, r3
   12668:	ldr	r3, [r3]
   1266c:	mov	r0, r3
   12670:	bl	111e8 <getgrgid@plt>
   12674:	str	r0, [fp, #-28]	; 0xffffffe4
   12678:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1267c:	cmp	r3, #0
   12680:	beq	1269c <__assert_fail@plt+0x1490>
   12684:	ldr	r3, [fp, #-28]	; 0xffffffe4
   12688:	ldr	r3, [r3]
   1268c:	mov	r1, r3
   12690:	movw	r0, #39216	; 0x9930
   12694:	movt	r0, #1
   12698:	bl	10f6c <printf@plt>
   1269c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   126a0:	add	r3, r3, #1
   126a4:	str	r3, [fp, #-24]	; 0xffffffe8
   126a8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   126ac:	ldr	r3, [fp, #-32]	; 0xffffffe0
   126b0:	cmp	r2, r3
   126b4:	blt	12610 <__assert_fail@plt+0x1404>
   126b8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   126bc:	mov	r0, r3
   126c0:	bl	12edc <__assert_fail@plt+0x1cd0>
   126c4:	movw	r3, #45484	; 0xb1ac
   126c8:	movt	r3, #2
   126cc:	ldr	r3, [r3]
   126d0:	cmp	r3, #0
   126d4:	beq	12700 <__assert_fail@plt+0x14f4>
   126d8:	movw	r0, #39352	; 0x99b8
   126dc:	movt	r0, #1
   126e0:	bl	110d4 <gettext@plt>
   126e4:	mov	r2, r0
   126e8:	movw	r3, #45484	; 0xb1ac
   126ec:	movt	r3, #2
   126f0:	ldr	r3, [r3]
   126f4:	mov	r1, r3
   126f8:	mov	r0, r2
   126fc:	bl	10f6c <printf@plt>
   12700:	sub	sp, fp, #12
   12704:	ldrd	r4, [sp]
   12708:	ldr	fp, [sp, #8]
   1270c:	add	sp, sp, #12
   12710:	pop	{pc}		; (ldr pc, [sp], #4)
   12714:	str	fp, [sp, #-8]!
   12718:	str	lr, [sp, #4]
   1271c:	add	fp, sp, #4
   12720:	sub	sp, sp, #16
   12724:	str	r0, [fp, #-8]
   12728:	movw	r3, #45465	; 0xb199
   1272c:	movt	r3, #2
   12730:	ldrb	r3, [r3]
   12734:	cmp	r3, #0
   12738:	beq	12778 <__assert_fail@plt+0x156c>
   1273c:	movw	r3, #45464	; 0xb198
   12740:	movt	r3, #2
   12744:	ldrb	r3, [r3]
   12748:	cmp	r3, #0
   1274c:	beq	12760 <__assert_fail@plt+0x1554>
   12750:	movw	r3, #45468	; 0xb19c
   12754:	movt	r3, #2
   12758:	ldr	r3, [r3]
   1275c:	b	1276c <__assert_fail@plt+0x1560>
   12760:	movw	r3, #45472	; 0xb1a0
   12764:	movt	r3, #2
   12768:	ldr	r3, [r3]
   1276c:	mov	r0, r3
   12770:	bl	12200 <__assert_fail@plt+0xff4>
   12774:	b	12914 <__assert_fail@plt+0x1708>
   12778:	movw	r3, #45463	; 0xb197
   1277c:	movt	r3, #2
   12780:	ldrb	r3, [r3]
   12784:	cmp	r3, #0
   12788:	beq	12814 <__assert_fail@plt+0x1608>
   1278c:	movw	r3, #45464	; 0xb198
   12790:	movt	r3, #2
   12794:	ldrb	r3, [r3]
   12798:	cmp	r3, #0
   1279c:	beq	127b0 <__assert_fail@plt+0x15a4>
   127a0:	movw	r3, #45476	; 0xb1a4
   127a4:	movt	r3, #2
   127a8:	ldr	r2, [r3]
   127ac:	b	127bc <__assert_fail@plt+0x15b0>
   127b0:	movw	r3, #45480	; 0xb1a8
   127b4:	movt	r3, #2
   127b8:	ldr	r2, [r3]
   127bc:	movw	r3, #45467	; 0xb19b
   127c0:	movt	r3, #2
   127c4:	ldrb	r3, [r3]
   127c8:	mov	r1, r3
   127cc:	mov	r0, r2
   127d0:	bl	12c50 <__assert_fail@plt+0x1a44>
   127d4:	mov	r3, r0
   127d8:	mov	r1, r3
   127dc:	movw	r3, #45340	; 0xb11c
   127e0:	movt	r3, #2
   127e4:	ldrb	r3, [r3]
   127e8:	mov	r2, r3
   127ec:	mov	r3, r1
   127f0:	and	r3, r3, r2
   127f4:	cmp	r3, #0
   127f8:	movne	r3, #1
   127fc:	moveq	r3, #0
   12800:	uxtb	r2, r3
   12804:	movw	r3, #45340	; 0xb11c
   12808:	movt	r3, #2
   1280c:	strb	r2, [r3]
   12810:	b	12914 <__assert_fail@plt+0x1708>
   12814:	movw	r3, #45462	; 0xb196
   12818:	movt	r3, #2
   1281c:	ldrb	r3, [r3]
   12820:	cmp	r3, #0
   12824:	beq	128d0 <__assert_fail@plt+0x16c4>
   12828:	movw	r3, #45468	; 0xb19c
   1282c:	movt	r3, #2
   12830:	ldr	r1, [r3]
   12834:	movw	r3, #45476	; 0xb1a4
   12838:	movt	r3, #2
   1283c:	ldr	r0, [r3]
   12840:	movw	r3, #45480	; 0xb1a8
   12844:	movt	r3, #2
   12848:	ldr	ip, [r3]
   1284c:	movw	r3, #45467	; 0xb19b
   12850:	movt	r3, #2
   12854:	ldrb	r2, [r3]
   12858:	movw	r3, #45461	; 0xb195
   1285c:	movt	r3, #2
   12860:	ldrb	r3, [r3]
   12864:	cmp	r3, #0
   12868:	beq	12874 <__assert_fail@plt+0x1668>
   1286c:	mov	r3, #0
   12870:	b	12878 <__assert_fail@plt+0x166c>
   12874:	mov	r3, #32
   12878:	str	r3, [sp, #4]
   1287c:	str	r2, [sp]
   12880:	mov	r3, ip
   12884:	mov	r2, r0
   12888:	ldr	r0, [fp, #-8]
   1288c:	bl	129a0 <__assert_fail@plt+0x1794>
   12890:	mov	r3, r0
   12894:	mov	r1, r3
   12898:	movw	r3, #45340	; 0xb11c
   1289c:	movt	r3, #2
   128a0:	ldrb	r3, [r3]
   128a4:	mov	r2, r3
   128a8:	mov	r3, r1
   128ac:	and	r3, r3, r2
   128b0:	cmp	r3, #0
   128b4:	movne	r3, #1
   128b8:	moveq	r3, #0
   128bc:	uxtb	r2, r3
   128c0:	movw	r3, #45340	; 0xb11c
   128c4:	movt	r3, #2
   128c8:	strb	r2, [r3]
   128cc:	b	12914 <__assert_fail@plt+0x1708>
   128d0:	movw	r3, #45460	; 0xb194
   128d4:	movt	r3, #2
   128d8:	ldrb	r3, [r3]
   128dc:	cmp	r3, #0
   128e0:	beq	1290c <__assert_fail@plt+0x1700>
   128e4:	movw	r3, #45484	; 0xb1ac
   128e8:	movt	r3, #2
   128ec:	ldr	r2, [r3]
   128f0:	movw	r3, #45452	; 0xb18c
   128f4:	movt	r3, #2
   128f8:	ldr	r3, [r3]
   128fc:	mov	r1, r3
   12900:	mov	r0, r2
   12904:	bl	10f24 <fputs_unlocked@plt>
   12908:	b	12914 <__assert_fail@plt+0x1708>
   1290c:	ldr	r0, [fp, #-8]
   12910:	bl	122ec <__assert_fail@plt+0x10e0>
   12914:	movw	r3, #45461	; 0xb195
   12918:	movt	r3, #2
   1291c:	ldrb	r3, [r3]
   12920:	cmp	r3, #0
   12924:	beq	12964 <__assert_fail@plt+0x1758>
   12928:	movw	r3, #45462	; 0xb196
   1292c:	movt	r3, #2
   12930:	ldrb	r3, [r3]
   12934:	cmp	r3, #0
   12938:	beq	12964 <__assert_fail@plt+0x1758>
   1293c:	movw	r3, #45466	; 0xb19a
   12940:	movt	r3, #2
   12944:	ldrb	r3, [r3]
   12948:	cmp	r3, #0
   1294c:	beq	12964 <__assert_fail@plt+0x1758>
   12950:	mov	r0, #0
   12954:	bl	11200 <putchar_unlocked@plt>
   12958:	mov	r0, #0
   1295c:	bl	11200 <putchar_unlocked@plt>
   12960:	b	1298c <__assert_fail@plt+0x1780>
   12964:	movw	r3, #45461	; 0xb195
   12968:	movt	r3, #2
   1296c:	ldrb	r3, [r3]
   12970:	cmp	r3, #0
   12974:	beq	12980 <__assert_fail@plt+0x1774>
   12978:	mov	r3, #0
   1297c:	b	12984 <__assert_fail@plt+0x1778>
   12980:	mov	r3, #10
   12984:	mov	r0, r3
   12988:	bl	11200 <putchar_unlocked@plt>
   1298c:	nop	{0}
   12990:	sub	sp, fp, #4
   12994:	ldr	fp, [sp]
   12998:	add	sp, sp, #4
   1299c:	pop	{pc}		; (ldr pc, [sp], #4)
   129a0:	strd	r4, [sp, #-16]!
   129a4:	str	fp, [sp, #8]
   129a8:	str	lr, [sp, #12]
   129ac:	add	fp, sp, #12
   129b0:	sub	sp, sp, #40	; 0x28
   129b4:	str	r0, [fp, #-40]	; 0xffffffd8
   129b8:	str	r1, [fp, #-44]	; 0xffffffd4
   129bc:	str	r2, [fp, #-48]	; 0xffffffd0
   129c0:	str	r3, [fp, #-52]	; 0xffffffcc
   129c4:	mov	r3, #1
   129c8:	strb	r3, [fp, #-13]
   129cc:	mov	r3, #0
   129d0:	str	r3, [fp, #-20]	; 0xffffffec
   129d4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   129d8:	cmp	r3, #0
   129dc:	beq	12a00 <__assert_fail@plt+0x17f4>
   129e0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   129e4:	bl	10f60 <getpwuid@plt>
   129e8:	str	r0, [fp, #-20]	; 0xffffffec
   129ec:	ldr	r3, [fp, #-20]	; 0xffffffec
   129f0:	cmp	r3, #0
   129f4:	bne	12a00 <__assert_fail@plt+0x17f4>
   129f8:	mov	r3, #0
   129fc:	strb	r3, [fp, #-13]
   12a00:	ldrb	r3, [fp, #4]
   12a04:	mov	r1, r3
   12a08:	ldr	r0, [fp, #-48]	; 0xffffffd0
   12a0c:	bl	12c50 <__assert_fail@plt+0x1a44>
   12a10:	mov	r3, r0
   12a14:	eor	r3, r3, #1
   12a18:	uxtb	r3, r3
   12a1c:	cmp	r3, #0
   12a20:	beq	12a2c <__assert_fail@plt+0x1820>
   12a24:	mov	r3, #0
   12a28:	strb	r3, [fp, #-13]
   12a2c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   12a30:	ldr	r3, [fp, #-48]	; 0xffffffd0
   12a34:	cmp	r2, r3
   12a38:	beq	12a74 <__assert_fail@plt+0x1868>
   12a3c:	ldrb	r3, [fp, #8]
   12a40:	mov	r0, r3
   12a44:	bl	11200 <putchar_unlocked@plt>
   12a48:	ldrb	r3, [fp, #4]
   12a4c:	mov	r1, r3
   12a50:	ldr	r0, [fp, #-52]	; 0xffffffcc
   12a54:	bl	12c50 <__assert_fail@plt+0x1a44>
   12a58:	mov	r3, r0
   12a5c:	eor	r3, r3, #1
   12a60:	uxtb	r3, r3
   12a64:	cmp	r3, #0
   12a68:	beq	12a74 <__assert_fail@plt+0x1868>
   12a6c:	mov	r3, #0
   12a70:	strb	r3, [fp, #-13]
   12a74:	ldr	r3, [fp, #-20]	; 0xffffffec
   12a78:	cmp	r3, #0
   12a7c:	beq	12a8c <__assert_fail@plt+0x1880>
   12a80:	ldr	r3, [fp, #-20]	; 0xffffffec
   12a84:	ldr	r3, [r3, #12]
   12a88:	b	12a90 <__assert_fail@plt+0x1884>
   12a8c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   12a90:	sub	r2, fp, #32
   12a94:	mov	r1, r3
   12a98:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12a9c:	bl	16ff8 <__assert_fail@plt+0x5dec>
   12aa0:	str	r0, [fp, #-28]	; 0xffffffe4
   12aa4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   12aa8:	cmp	r3, #0
   12aac:	bge	12b2c <__assert_fail@plt+0x1920>
   12ab0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   12ab4:	cmp	r3, #0
   12ab8:	beq	12af8 <__assert_fail@plt+0x18ec>
   12abc:	bl	11110 <__errno_location@plt>
   12ac0:	mov	r3, r0
   12ac4:	ldr	r4, [r3]
   12ac8:	movw	r0, #39364	; 0x99c4
   12acc:	movt	r0, #1
   12ad0:	bl	110d4 <gettext@plt>
   12ad4:	mov	r5, r0
   12ad8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12adc:	bl	15980 <__assert_fail@plt+0x4774>
   12ae0:	mov	r3, r0
   12ae4:	mov	r2, r5
   12ae8:	mov	r1, r4
   12aec:	mov	r0, #0
   12af0:	bl	11068 <error@plt>
   12af4:	b	12b24 <__assert_fail@plt+0x1918>
   12af8:	bl	11110 <__errno_location@plt>
   12afc:	mov	r3, r0
   12b00:	ldr	r4, [r3]
   12b04:	movw	r0, #39400	; 0x99e8
   12b08:	movt	r0, #1
   12b0c:	bl	110d4 <gettext@plt>
   12b10:	mov	r3, r0
   12b14:	mov	r2, r3
   12b18:	mov	r1, r4
   12b1c:	mov	r0, #0
   12b20:	bl	11068 <error@plt>
   12b24:	mov	r3, #0
   12b28:	b	12bf0 <__assert_fail@plt+0x19e4>
   12b2c:	mov	r3, #0
   12b30:	str	r3, [fp, #-24]	; 0xffffffe8
   12b34:	b	12bd0 <__assert_fail@plt+0x19c4>
   12b38:	ldr	r2, [fp, #-32]	; 0xffffffe0
   12b3c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12b40:	lsl	r3, r3, #2
   12b44:	add	r3, r2, r3
   12b48:	ldr	r3, [r3]
   12b4c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   12b50:	cmp	r2, r3
   12b54:	beq	12bc4 <__assert_fail@plt+0x19b8>
   12b58:	ldr	r2, [fp, #-32]	; 0xffffffe0
   12b5c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12b60:	lsl	r3, r3, #2
   12b64:	add	r3, r2, r3
   12b68:	ldr	r3, [r3]
   12b6c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   12b70:	cmp	r2, r3
   12b74:	beq	12bc4 <__assert_fail@plt+0x19b8>
   12b78:	ldrb	r3, [fp, #8]
   12b7c:	mov	r0, r3
   12b80:	bl	11200 <putchar_unlocked@plt>
   12b84:	ldr	r2, [fp, #-32]	; 0xffffffe0
   12b88:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12b8c:	lsl	r3, r3, #2
   12b90:	add	r3, r2, r3
   12b94:	ldr	r3, [r3]
   12b98:	ldrb	r2, [fp, #4]
   12b9c:	mov	r1, r2
   12ba0:	mov	r0, r3
   12ba4:	bl	12c50 <__assert_fail@plt+0x1a44>
   12ba8:	mov	r3, r0
   12bac:	eor	r3, r3, #1
   12bb0:	uxtb	r3, r3
   12bb4:	cmp	r3, #0
   12bb8:	beq	12bc4 <__assert_fail@plt+0x19b8>
   12bbc:	mov	r3, #0
   12bc0:	strb	r3, [fp, #-13]
   12bc4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12bc8:	add	r3, r3, #1
   12bcc:	str	r3, [fp, #-24]	; 0xffffffe8
   12bd0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   12bd4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   12bd8:	cmp	r2, r3
   12bdc:	blt	12b38 <__assert_fail@plt+0x192c>
   12be0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   12be4:	mov	r0, r3
   12be8:	bl	12edc <__assert_fail@plt+0x1cd0>
   12bec:	ldrb	r3, [fp, #-13]
   12bf0:	mov	r0, r3
   12bf4:	sub	sp, fp, #12
   12bf8:	ldrd	r4, [sp]
   12bfc:	ldr	fp, [sp, #8]
   12c00:	add	sp, sp, #12
   12c04:	pop	{pc}		; (ldr pc, [sp], #4)
   12c08:	str	fp, [sp, #-8]!
   12c0c:	str	lr, [sp, #4]
   12c10:	add	fp, sp, #4
   12c14:	sub	sp, sp, #8
   12c18:	str	r0, [fp, #-8]
   12c1c:	ldr	r3, [fp, #-8]
   12c20:	ldr	r3, [r3]
   12c24:	mov	r0, r3
   12c28:	mov	r1, #0
   12c2c:	movw	r2, #45536	; 0xb1e0
   12c30:	movt	r2, #2
   12c34:	bl	12f80 <__assert_fail@plt+0x1d74>
   12c38:	mov	r3, r0
   12c3c:	mov	r0, r3
   12c40:	sub	sp, fp, #4
   12c44:	ldr	fp, [sp]
   12c48:	add	sp, sp, #4
   12c4c:	pop	{pc}		; (ldr pc, [sp], #4)
   12c50:	str	fp, [sp, #-8]!
   12c54:	str	lr, [sp, #4]
   12c58:	add	fp, sp, #4
   12c5c:	sub	sp, sp, #24
   12c60:	str	r0, [fp, #-24]	; 0xffffffe8
   12c64:	mov	r3, r1
   12c68:	strb	r3, [fp, #-25]	; 0xffffffe7
   12c6c:	mov	r3, #0
   12c70:	str	r3, [fp, #-8]
   12c74:	mov	r3, #1
   12c78:	strb	r3, [fp, #-9]
   12c7c:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   12c80:	cmp	r3, #0
   12c84:	beq	12ccc <__assert_fail@plt+0x1ac0>
   12c88:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12c8c:	mov	r0, r3
   12c90:	bl	111e8 <getgrgid@plt>
   12c94:	str	r0, [fp, #-8]
   12c98:	ldr	r3, [fp, #-8]
   12c9c:	cmp	r3, #0
   12ca0:	bne	12ccc <__assert_fail@plt+0x1ac0>
   12ca4:	movw	r0, #39448	; 0x9a18
   12ca8:	movt	r0, #1
   12cac:	bl	110d4 <gettext@plt>
   12cb0:	mov	r2, r0
   12cb4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12cb8:	mov	r1, #0
   12cbc:	mov	r0, #0
   12cc0:	bl	11068 <error@plt>
   12cc4:	mov	r3, #0
   12cc8:	strb	r3, [fp, #-9]
   12ccc:	ldr	r3, [fp, #-8]
   12cd0:	cmp	r3, #0
   12cd4:	beq	12ce4 <__assert_fail@plt+0x1ad8>
   12cd8:	ldr	r3, [fp, #-8]
   12cdc:	ldr	r3, [r3]
   12ce0:	b	12cf4 <__assert_fail@plt+0x1ae8>
   12ce4:	sub	r3, fp, #24
   12ce8:	mov	r0, r3
   12cec:	bl	12c08 <__assert_fail@plt+0x19fc>
   12cf0:	mov	r3, r0
   12cf4:	str	r3, [fp, #-16]
   12cf8:	movw	r3, #45452	; 0xb18c
   12cfc:	movt	r3, #2
   12d00:	ldr	r3, [r3]
   12d04:	mov	r1, r3
   12d08:	ldr	r0, [fp, #-16]
   12d0c:	bl	10f24 <fputs_unlocked@plt>
   12d10:	ldrb	r3, [fp, #-9]
   12d14:	mov	r0, r3
   12d18:	sub	sp, fp, #4
   12d1c:	ldr	fp, [sp]
   12d20:	add	sp, sp, #4
   12d24:	pop	{pc}		; (ldr pc, [sp], #4)
   12d28:	push	{fp}		; (str fp, [sp, #-4]!)
   12d2c:	add	fp, sp, #0
   12d30:	sub	sp, sp, #12
   12d34:	str	r0, [fp, #-8]
   12d38:	movw	r3, #45560	; 0xb1f8
   12d3c:	movt	r3, #2
   12d40:	ldr	r2, [fp, #-8]
   12d44:	str	r2, [r3]
   12d48:	nop	{0}
   12d4c:	add	sp, fp, #0
   12d50:	pop	{fp}		; (ldr fp, [sp], #4)
   12d54:	bx	lr
   12d58:	push	{fp}		; (str fp, [sp, #-4]!)
   12d5c:	add	fp, sp, #0
   12d60:	sub	sp, sp, #12
   12d64:	mov	r3, r0
   12d68:	strb	r3, [fp, #-5]
   12d6c:	movw	r3, #45564	; 0xb1fc
   12d70:	movt	r3, #2
   12d74:	ldrb	r2, [fp, #-5]
   12d78:	strb	r2, [r3]
   12d7c:	nop	{0}
   12d80:	add	sp, fp, #0
   12d84:	pop	{fp}		; (ldr fp, [sp], #4)
   12d88:	bx	lr
   12d8c:	str	r4, [sp, #-12]!
   12d90:	str	fp, [sp, #4]
   12d94:	str	lr, [sp, #8]
   12d98:	add	fp, sp, #8
   12d9c:	sub	sp, sp, #20
   12da0:	movw	r3, #45452	; 0xb18c
   12da4:	movt	r3, #2
   12da8:	ldr	r3, [r3]
   12dac:	mov	r0, r3
   12db0:	bl	17a90 <__assert_fail@plt+0x6884>
   12db4:	mov	r3, r0
   12db8:	cmp	r3, #0
   12dbc:	beq	12e90 <__assert_fail@plt+0x1c84>
   12dc0:	movw	r3, #45564	; 0xb1fc
   12dc4:	movt	r3, #2
   12dc8:	ldrb	r3, [r3]
   12dcc:	eor	r3, r3, #1
   12dd0:	uxtb	r3, r3
   12dd4:	cmp	r3, #0
   12dd8:	bne	12df0 <__assert_fail@plt+0x1be4>
   12ddc:	bl	11110 <__errno_location@plt>
   12de0:	mov	r3, r0
   12de4:	ldr	r3, [r3]
   12de8:	cmp	r3, #32
   12dec:	beq	12e90 <__assert_fail@plt+0x1c84>
   12df0:	movw	r0, #39500	; 0x9a4c
   12df4:	movt	r0, #1
   12df8:	bl	110d4 <gettext@plt>
   12dfc:	str	r0, [fp, #-16]
   12e00:	movw	r3, #45560	; 0xb1f8
   12e04:	movt	r3, #2
   12e08:	ldr	r3, [r3]
   12e0c:	cmp	r3, #0
   12e10:	beq	12e5c <__assert_fail@plt+0x1c50>
   12e14:	bl	11110 <__errno_location@plt>
   12e18:	mov	r3, r0
   12e1c:	ldr	r4, [r3]
   12e20:	movw	r3, #45560	; 0xb1f8
   12e24:	movt	r3, #2
   12e28:	ldr	r3, [r3]
   12e2c:	mov	r0, r3
   12e30:	bl	1560c <__assert_fail@plt+0x4400>
   12e34:	mov	r2, r0
   12e38:	ldr	r3, [fp, #-16]
   12e3c:	str	r3, [sp]
   12e40:	mov	r3, r2
   12e44:	movw	r2, #39512	; 0x9a58
   12e48:	movt	r2, #1
   12e4c:	mov	r1, r4
   12e50:	mov	r0, #0
   12e54:	bl	11068 <error@plt>
   12e58:	b	12e7c <__assert_fail@plt+0x1c70>
   12e5c:	bl	11110 <__errno_location@plt>
   12e60:	mov	r3, r0
   12e64:	ldr	r1, [r3]
   12e68:	ldr	r3, [fp, #-16]
   12e6c:	movw	r2, #39520	; 0x9a60
   12e70:	movt	r2, #1
   12e74:	mov	r0, #0
   12e78:	bl	11068 <error@plt>
   12e7c:	movw	r3, #45348	; 0xb124
   12e80:	movt	r3, #2
   12e84:	ldr	r3, [r3]
   12e88:	mov	r0, r3
   12e8c:	bl	10f9c <_exit@plt>
   12e90:	movw	r3, #45448	; 0xb188
   12e94:	movt	r3, #2
   12e98:	ldr	r3, [r3]
   12e9c:	mov	r0, r3
   12ea0:	bl	17a90 <__assert_fail@plt+0x6884>
   12ea4:	mov	r3, r0
   12ea8:	cmp	r3, #0
   12eac:	beq	12ec4 <__assert_fail@plt+0x1cb8>
   12eb0:	movw	r3, #45348	; 0xb124
   12eb4:	movt	r3, #2
   12eb8:	ldr	r3, [r3]
   12ebc:	mov	r0, r3
   12ec0:	bl	10f9c <_exit@plt>
   12ec4:	nop	{0}
   12ec8:	sub	sp, fp, #8
   12ecc:	ldr	r4, [sp]
   12ed0:	ldr	fp, [sp, #4]
   12ed4:	add	sp, sp, #8
   12ed8:	pop	{pc}		; (ldr pc, [sp], #4)
   12edc:	str	r4, [sp, #-12]!
   12ee0:	str	fp, [sp, #4]
   12ee4:	str	lr, [sp, #8]
   12ee8:	add	fp, sp, #8
   12eec:	sub	sp, sp, #20
   12ef0:	str	r0, [fp, #-24]	; 0xffffffe8
   12ef4:	bl	11110 <__errno_location@plt>
   12ef8:	mov	r3, r0
   12efc:	ldr	r3, [r3]
   12f00:	str	r3, [fp, #-20]	; 0xffffffec
   12f04:	bl	11110 <__errno_location@plt>
   12f08:	mov	r3, r0
   12f0c:	ldr	r3, [r3]
   12f10:	str	r3, [fp, #-16]
   12f14:	bl	11110 <__errno_location@plt>
   12f18:	mov	r2, r0
   12f1c:	mov	r3, #0
   12f20:	str	r3, [r2]
   12f24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12f28:	bl	10f90 <free@plt>
   12f2c:	bl	11110 <__errno_location@plt>
   12f30:	mov	r3, r0
   12f34:	ldr	r3, [r3]
   12f38:	cmp	r3, #0
   12f3c:	moveq	r3, #1
   12f40:	movne	r3, #0
   12f44:	uxtb	r3, r3
   12f48:	mov	r4, r3
   12f4c:	bl	11110 <__errno_location@plt>
   12f50:	mov	r2, r0
   12f54:	lsl	r3, r4, #2
   12f58:	sub	r1, fp, #12
   12f5c:	add	r3, r1, r3
   12f60:	ldr	r3, [r3, #-8]
   12f64:	str	r3, [r2]
   12f68:	nop	{0}
   12f6c:	sub	sp, fp, #8
   12f70:	ldr	r4, [sp]
   12f74:	ldr	fp, [sp, #4]
   12f78:	add	sp, sp, #8
   12f7c:	pop	{pc}		; (ldr pc, [sp], #4)
   12f80:	str	fp, [sp, #-8]!
   12f84:	str	lr, [sp, #4]
   12f88:	add	fp, sp, #4
   12f8c:	sub	sp, sp, #24
   12f90:	strd	r0, [fp, #-20]	; 0xffffffec
   12f94:	str	r2, [fp, #-24]	; 0xffffffe8
   12f98:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12f9c:	add	r3, r3, #20
   12fa0:	str	r3, [fp, #-8]
   12fa4:	ldr	r3, [fp, #-8]
   12fa8:	mov	r2, #0
   12fac:	strb	r2, [r3]
   12fb0:	ldrd	r0, [fp, #-20]	; 0xffffffec
   12fb4:	mov	r2, #10
   12fb8:	mov	r3, #0
   12fbc:	bl	18f1c <__assert_fail@plt+0x7d10>
   12fc0:	uxtb	r3, r2
   12fc4:	ldr	r2, [fp, #-8]
   12fc8:	sub	r2, r2, #1
   12fcc:	str	r2, [fp, #-8]
   12fd0:	add	r3, r3, #48	; 0x30
   12fd4:	uxtb	r2, r3
   12fd8:	ldr	r3, [fp, #-8]
   12fdc:	strb	r2, [r3]
   12fe0:	ldrd	r0, [fp, #-20]	; 0xffffffec
   12fe4:	mov	r2, #10
   12fe8:	mov	r3, #0
   12fec:	bl	18f1c <__assert_fail@plt+0x7d10>
   12ff0:	mov	r2, r0
   12ff4:	mov	r3, r1
   12ff8:	strd	r2, [fp, #-20]	; 0xffffffec
   12ffc:	ldrd	r2, [fp, #-20]	; 0xffffffec
   13000:	orrs	r3, r2, r3
   13004:	bne	12fb0 <__assert_fail@plt+0x1da4>
   13008:	ldr	r3, [fp, #-8]
   1300c:	mov	r0, r3
   13010:	sub	sp, fp, #4
   13014:	ldr	fp, [sp]
   13018:	add	sp, sp, #4
   1301c:	pop	{pc}		; (ldr pc, [sp], #4)
   13020:	str	fp, [sp, #-8]!
   13024:	str	lr, [sp, #4]
   13028:	add	fp, sp, #4
   1302c:	sub	sp, sp, #16
   13030:	str	r0, [fp, #-16]
   13034:	ldr	r3, [fp, #-16]
   13038:	cmp	r3, #0
   1303c:	bne	13064 <__assert_fail@plt+0x1e58>
   13040:	movw	r3, #45448	; 0xb188
   13044:	movt	r3, #2
   13048:	ldr	r3, [r3]
   1304c:	mov	r2, #55	; 0x37
   13050:	mov	r1, #1
   13054:	movw	r0, #39524	; 0x9a64
   13058:	movt	r0, #1
   1305c:	bl	11014 <fwrite@plt>
   13060:	bl	111dc <abort@plt>
   13064:	mov	r1, #47	; 0x2f
   13068:	ldr	r0, [fp, #-16]
   1306c:	bl	111a0 <strrchr@plt>
   13070:	str	r0, [fp, #-8]
   13074:	ldr	r3, [fp, #-8]
   13078:	cmp	r3, #0
   1307c:	beq	1308c <__assert_fail@plt+0x1e80>
   13080:	ldr	r3, [fp, #-8]
   13084:	add	r3, r3, #1
   13088:	b	13090 <__assert_fail@plt+0x1e84>
   1308c:	ldr	r3, [fp, #-16]
   13090:	str	r3, [fp, #-12]
   13094:	ldr	r2, [fp, #-12]
   13098:	ldr	r3, [fp, #-16]
   1309c:	sub	r3, r2, r3
   130a0:	cmp	r3, #6
   130a4:	ble	13114 <__assert_fail@plt+0x1f08>
   130a8:	ldr	r3, [fp, #-12]
   130ac:	sub	r3, r3, #7
   130b0:	mov	r2, #7
   130b4:	movw	r1, #39580	; 0x9a9c
   130b8:	movt	r1, #1
   130bc:	mov	r0, r3
   130c0:	bl	111d0 <strncmp@plt>
   130c4:	mov	r3, r0
   130c8:	cmp	r3, #0
   130cc:	bne	13114 <__assert_fail@plt+0x1f08>
   130d0:	ldr	r3, [fp, #-12]
   130d4:	str	r3, [fp, #-16]
   130d8:	mov	r2, #3
   130dc:	movw	r1, #39588	; 0x9aa4
   130e0:	movt	r1, #1
   130e4:	ldr	r0, [fp, #-12]
   130e8:	bl	111d0 <strncmp@plt>
   130ec:	mov	r3, r0
   130f0:	cmp	r3, #0
   130f4:	bne	13114 <__assert_fail@plt+0x1f08>
   130f8:	ldr	r3, [fp, #-12]
   130fc:	add	r3, r3, #3
   13100:	str	r3, [fp, #-16]
   13104:	movw	r3, #45432	; 0xb178
   13108:	movt	r3, #2
   1310c:	ldr	r2, [fp, #-16]
   13110:	str	r2, [r3]
   13114:	movw	r3, #45568	; 0xb200
   13118:	movt	r3, #2
   1311c:	ldr	r2, [fp, #-16]
   13120:	str	r2, [r3]
   13124:	movw	r3, #45436	; 0xb17c
   13128:	movt	r3, #2
   1312c:	ldr	r2, [fp, #-16]
   13130:	str	r2, [r3]
   13134:	nop	{0}
   13138:	sub	sp, fp, #4
   1313c:	ldr	fp, [sp]
   13140:	add	sp, sp, #4
   13144:	pop	{pc}		; (ldr pc, [sp], #4)
   13148:	str	fp, [sp, #-8]!
   1314c:	str	lr, [sp, #4]
   13150:	add	fp, sp, #4
   13154:	sub	sp, sp, #16
   13158:	str	r0, [fp, #-16]
   1315c:	bl	11110 <__errno_location@plt>
   13160:	mov	r3, r0
   13164:	ldr	r3, [r3]
   13168:	str	r3, [fp, #-8]
   1316c:	ldr	r3, [fp, #-16]
   13170:	cmp	r3, #0
   13174:	beq	13180 <__assert_fail@plt+0x1f74>
   13178:	ldr	r3, [fp, #-16]
   1317c:	b	13188 <__assert_fail@plt+0x1f7c>
   13180:	movw	r3, #45572	; 0xb204
   13184:	movt	r3, #2
   13188:	mov	r1, #48	; 0x30
   1318c:	mov	r0, r3
   13190:	bl	16e60 <__assert_fail@plt+0x5c54>
   13194:	mov	r3, r0
   13198:	str	r3, [fp, #-12]
   1319c:	bl	11110 <__errno_location@plt>
   131a0:	mov	r2, r0
   131a4:	ldr	r3, [fp, #-8]
   131a8:	str	r3, [r2]
   131ac:	ldr	r3, [fp, #-12]
   131b0:	mov	r0, r3
   131b4:	sub	sp, fp, #4
   131b8:	ldr	fp, [sp]
   131bc:	add	sp, sp, #4
   131c0:	pop	{pc}		; (ldr pc, [sp], #4)
   131c4:	push	{fp}		; (str fp, [sp, #-4]!)
   131c8:	add	fp, sp, #0
   131cc:	sub	sp, sp, #12
   131d0:	str	r0, [fp, #-8]
   131d4:	ldr	r3, [fp, #-8]
   131d8:	cmp	r3, #0
   131dc:	beq	131e8 <__assert_fail@plt+0x1fdc>
   131e0:	ldr	r3, [fp, #-8]
   131e4:	b	131f0 <__assert_fail@plt+0x1fe4>
   131e8:	movw	r3, #45572	; 0xb204
   131ec:	movt	r3, #2
   131f0:	ldr	r3, [r3]
   131f4:	mov	r0, r3
   131f8:	add	sp, fp, #0
   131fc:	pop	{fp}		; (ldr fp, [sp], #4)
   13200:	bx	lr
   13204:	push	{fp}		; (str fp, [sp, #-4]!)
   13208:	add	fp, sp, #0
   1320c:	sub	sp, sp, #12
   13210:	str	r0, [fp, #-8]
   13214:	str	r1, [fp, #-12]
   13218:	ldr	r3, [fp, #-8]
   1321c:	cmp	r3, #0
   13220:	beq	1322c <__assert_fail@plt+0x2020>
   13224:	ldr	r3, [fp, #-8]
   13228:	b	13234 <__assert_fail@plt+0x2028>
   1322c:	movw	r3, #45572	; 0xb204
   13230:	movt	r3, #2
   13234:	ldr	r2, [fp, #-12]
   13238:	str	r2, [r3]
   1323c:	nop	{0}
   13240:	add	sp, fp, #0
   13244:	pop	{fp}		; (ldr fp, [sp], #4)
   13248:	bx	lr
   1324c:	push	{fp}		; (str fp, [sp, #-4]!)
   13250:	add	fp, sp, #0
   13254:	sub	sp, sp, #36	; 0x24
   13258:	str	r0, [fp, #-24]	; 0xffffffe8
   1325c:	mov	r3, r1
   13260:	str	r2, [fp, #-32]	; 0xffffffe0
   13264:	strb	r3, [fp, #-25]	; 0xffffffe7
   13268:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   1326c:	strb	r3, [fp, #-5]
   13270:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13274:	cmp	r3, #0
   13278:	beq	13284 <__assert_fail@plt+0x2078>
   1327c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13280:	b	1328c <__assert_fail@plt+0x2080>
   13284:	movw	r3, #45572	; 0xb204
   13288:	movt	r3, #2
   1328c:	add	r2, r3, #8
   13290:	ldrb	r3, [fp, #-5]
   13294:	lsr	r3, r3, #5
   13298:	uxtb	r3, r3
   1329c:	lsl	r3, r3, #2
   132a0:	add	r3, r2, r3
   132a4:	str	r3, [fp, #-12]
   132a8:	ldrb	r3, [fp, #-5]
   132ac:	and	r3, r3, #31
   132b0:	str	r3, [fp, #-16]
   132b4:	ldr	r3, [fp, #-12]
   132b8:	ldr	r2, [r3]
   132bc:	ldr	r3, [fp, #-16]
   132c0:	lsr	r3, r2, r3
   132c4:	and	r3, r3, #1
   132c8:	str	r3, [fp, #-20]	; 0xffffffec
   132cc:	ldr	r3, [fp, #-12]
   132d0:	ldr	r3, [r3]
   132d4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   132d8:	and	r1, r2, #1
   132dc:	ldr	r2, [fp, #-20]	; 0xffffffec
   132e0:	eor	r1, r1, r2
   132e4:	ldr	r2, [fp, #-16]
   132e8:	lsl	r2, r1, r2
   132ec:	eor	r2, r2, r3
   132f0:	ldr	r3, [fp, #-12]
   132f4:	str	r2, [r3]
   132f8:	ldr	r3, [fp, #-20]	; 0xffffffec
   132fc:	mov	r0, r3
   13300:	add	sp, fp, #0
   13304:	pop	{fp}		; (ldr fp, [sp], #4)
   13308:	bx	lr
   1330c:	push	{fp}		; (str fp, [sp, #-4]!)
   13310:	add	fp, sp, #0
   13314:	sub	sp, sp, #20
   13318:	str	r0, [fp, #-16]
   1331c:	str	r1, [fp, #-20]	; 0xffffffec
   13320:	ldr	r3, [fp, #-16]
   13324:	cmp	r3, #0
   13328:	bne	13338 <__assert_fail@plt+0x212c>
   1332c:	movw	r3, #45572	; 0xb204
   13330:	movt	r3, #2
   13334:	str	r3, [fp, #-16]
   13338:	ldr	r3, [fp, #-16]
   1333c:	ldr	r3, [r3, #4]
   13340:	str	r3, [fp, #-8]
   13344:	ldr	r3, [fp, #-16]
   13348:	ldr	r2, [fp, #-20]	; 0xffffffec
   1334c:	str	r2, [r3, #4]
   13350:	ldr	r3, [fp, #-8]
   13354:	mov	r0, r3
   13358:	add	sp, fp, #0
   1335c:	pop	{fp}		; (ldr fp, [sp], #4)
   13360:	bx	lr
   13364:	str	fp, [sp, #-8]!
   13368:	str	lr, [sp, #4]
   1336c:	add	fp, sp, #4
   13370:	sub	sp, sp, #16
   13374:	str	r0, [fp, #-8]
   13378:	str	r1, [fp, #-12]
   1337c:	str	r2, [fp, #-16]
   13380:	ldr	r3, [fp, #-8]
   13384:	cmp	r3, #0
   13388:	bne	13398 <__assert_fail@plt+0x218c>
   1338c:	movw	r3, #45572	; 0xb204
   13390:	movt	r3, #2
   13394:	str	r3, [fp, #-8]
   13398:	ldr	r3, [fp, #-8]
   1339c:	mov	r2, #10
   133a0:	str	r2, [r3]
   133a4:	ldr	r3, [fp, #-12]
   133a8:	cmp	r3, #0
   133ac:	beq	133bc <__assert_fail@plt+0x21b0>
   133b0:	ldr	r3, [fp, #-16]
   133b4:	cmp	r3, #0
   133b8:	bne	133c0 <__assert_fail@plt+0x21b4>
   133bc:	bl	111dc <abort@plt>
   133c0:	ldr	r3, [fp, #-8]
   133c4:	ldr	r2, [fp, #-12]
   133c8:	str	r2, [r3, #40]	; 0x28
   133cc:	ldr	r3, [fp, #-8]
   133d0:	ldr	r2, [fp, #-16]
   133d4:	str	r2, [r3, #44]	; 0x2c
   133d8:	nop	{0}
   133dc:	sub	sp, fp, #4
   133e0:	ldr	fp, [sp]
   133e4:	add	sp, sp, #4
   133e8:	pop	{pc}		; (ldr pc, [sp], #4)
   133ec:	str	fp, [sp, #-8]!
   133f0:	str	lr, [sp, #4]
   133f4:	add	fp, sp, #4
   133f8:	sub	sp, sp, #56	; 0x38
   133fc:	str	r0, [fp, #-56]	; 0xffffffc8
   13400:	str	r1, [fp, #-60]	; 0xffffffc4
   13404:	sub	r1, fp, #52	; 0x34
   13408:	mov	r2, #0
   1340c:	mov	r3, #0
   13410:	strd	r2, [r1]
   13414:	strd	r2, [r1, #8]
   13418:	strd	r2, [r1, #16]
   1341c:	strd	r2, [r1, #24]
   13420:	strd	r2, [r1, #32]
   13424:	strd	r2, [r1, #40]	; 0x28
   13428:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1342c:	cmp	r3, #10
   13430:	bne	13438 <__assert_fail@plt+0x222c>
   13434:	bl	111dc <abort@plt>
   13438:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1343c:	str	r3, [fp, #-52]	; 0xffffffcc
   13440:	ldr	r3, [fp, #-56]	; 0xffffffc8
   13444:	mov	r2, r3
   13448:	sub	r3, fp, #52	; 0x34
   1344c:	ldrd	r0, [r3]
   13450:	strd	r0, [r2]
   13454:	ldrd	r0, [r3, #8]
   13458:	strd	r0, [r2, #8]
   1345c:	ldrd	r0, [r3, #16]
   13460:	strd	r0, [r2, #16]
   13464:	ldrd	r0, [r3, #24]
   13468:	strd	r0, [r2, #24]
   1346c:	ldrd	r0, [r3, #32]
   13470:	strd	r0, [r2, #32]
   13474:	ldrd	r0, [r3, #40]	; 0x28
   13478:	strd	r0, [r2, #40]	; 0x28
   1347c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   13480:	sub	sp, fp, #4
   13484:	ldr	fp, [sp]
   13488:	add	sp, sp, #4
   1348c:	pop	{pc}		; (ldr pc, [sp], #4)
   13490:	str	fp, [sp, #-8]!
   13494:	str	lr, [sp, #4]
   13498:	add	fp, sp, #4
   1349c:	sub	sp, sp, #16
   134a0:	str	r0, [fp, #-16]
   134a4:	str	r1, [fp, #-20]	; 0xffffffec
   134a8:	ldr	r0, [fp, #-16]
   134ac:	bl	110d4 <gettext@plt>
   134b0:	str	r0, [fp, #-8]
   134b4:	ldr	r2, [fp, #-8]
   134b8:	ldr	r3, [fp, #-16]
   134bc:	cmp	r2, r3
   134c0:	beq	134cc <__assert_fail@plt+0x22c0>
   134c4:	ldr	r3, [fp, #-8]
   134c8:	b	1357c <__assert_fail@plt+0x2370>
   134cc:	bl	17fa4 <__assert_fail@plt+0x6d98>
   134d0:	str	r0, [fp, #-12]
   134d4:	movw	r1, #39780	; 0x9b64
   134d8:	movt	r1, #1
   134dc:	ldr	r0, [fp, #-12]
   134e0:	bl	179e4 <__assert_fail@plt+0x67d8>
   134e4:	mov	r3, r0
   134e8:	cmp	r3, #0
   134ec:	bne	13518 <__assert_fail@plt+0x230c>
   134f0:	ldr	r3, [fp, #-16]
   134f4:	ldrb	r3, [r3]
   134f8:	cmp	r3, #96	; 0x60
   134fc:	bne	1350c <__assert_fail@plt+0x2300>
   13500:	movw	r3, #39788	; 0x9b6c
   13504:	movt	r3, #1
   13508:	b	1357c <__assert_fail@plt+0x2370>
   1350c:	movw	r3, #39792	; 0x9b70
   13510:	movt	r3, #1
   13514:	b	1357c <__assert_fail@plt+0x2370>
   13518:	movw	r1, #39796	; 0x9b74
   1351c:	movt	r1, #1
   13520:	ldr	r0, [fp, #-12]
   13524:	bl	179e4 <__assert_fail@plt+0x67d8>
   13528:	mov	r3, r0
   1352c:	cmp	r3, #0
   13530:	bne	1355c <__assert_fail@plt+0x2350>
   13534:	ldr	r3, [fp, #-16]
   13538:	ldrb	r3, [r3]
   1353c:	cmp	r3, #96	; 0x60
   13540:	bne	13550 <__assert_fail@plt+0x2344>
   13544:	movw	r3, #39804	; 0x9b7c
   13548:	movt	r3, #1
   1354c:	b	1357c <__assert_fail@plt+0x2370>
   13550:	movw	r3, #39808	; 0x9b80
   13554:	movt	r3, #1
   13558:	b	1357c <__assert_fail@plt+0x2370>
   1355c:	ldr	r3, [fp, #-20]	; 0xffffffec
   13560:	cmp	r3, #9
   13564:	bne	13574 <__assert_fail@plt+0x2368>
   13568:	movw	r3, #39812	; 0x9b84
   1356c:	movt	r3, #1
   13570:	b	1357c <__assert_fail@plt+0x2370>
   13574:	movw	r3, #39816	; 0x9b88
   13578:	movt	r3, #1
   1357c:	mov	r0, r3
   13580:	sub	sp, fp, #4
   13584:	ldr	fp, [sp]
   13588:	add	sp, sp, #4
   1358c:	pop	{pc}		; (ldr pc, [sp], #4)
   13590:	str	r4, [sp, #-12]!
   13594:	str	fp, [sp, #4]
   13598:	str	lr, [sp, #8]
   1359c:	add	fp, sp, #8
   135a0:	sub	sp, sp, #116	; 0x74
   135a4:	str	r0, [fp, #-88]	; 0xffffffa8
   135a8:	str	r1, [fp, #-92]	; 0xffffffa4
   135ac:	str	r2, [fp, #-96]	; 0xffffffa0
   135b0:	str	r3, [fp, #-100]	; 0xffffff9c
   135b4:	mov	r3, #0
   135b8:	str	r3, [fp, #-20]	; 0xffffffec
   135bc:	mov	r3, #0
   135c0:	str	r3, [fp, #-24]	; 0xffffffe8
   135c4:	mov	r3, #0
   135c8:	str	r3, [fp, #-28]	; 0xffffffe4
   135cc:	mov	r3, #0
   135d0:	str	r3, [fp, #-32]	; 0xffffffe0
   135d4:	mov	r3, #0
   135d8:	strb	r3, [fp, #-33]	; 0xffffffdf
   135dc:	bl	1102c <__ctype_get_mb_cur_max@plt>
   135e0:	mov	r3, r0
   135e4:	cmp	r3, #1
   135e8:	moveq	r3, #1
   135ec:	movne	r3, #0
   135f0:	strb	r3, [fp, #-57]	; 0xffffffc7
   135f4:	ldr	r3, [fp, #8]
   135f8:	and	r3, r3, #2
   135fc:	cmp	r3, #0
   13600:	movne	r3, #1
   13604:	moveq	r3, #0
   13608:	strb	r3, [fp, #-34]	; 0xffffffde
   1360c:	mov	r3, #0
   13610:	strb	r3, [fp, #-35]	; 0xffffffdd
   13614:	mov	r3, #0
   13618:	strb	r3, [fp, #-36]	; 0xffffffdc
   1361c:	mov	r3, #1
   13620:	strb	r3, [fp, #-37]	; 0xffffffdb
   13624:	ldr	r3, [fp, #4]
   13628:	cmp	r3, #10
   1362c:	ldrls	pc, [pc, r3, lsl #2]
   13630:	b	13848 <__assert_fail@plt+0x263c>
   13634:	andeq	r3, r1, ip, lsr r8
   13638:			; <UNDEFINED> instruction: 0x000137b4
   1363c:	ldrdeq	r3, [r1], -r8
   13640:	andeq	r3, r1, ip, lsr #15
   13644:			; <UNDEFINED> instruction: 0x000137bc
   13648:	andeq	r3, r1, r0, ror r6
   1364c:	andeq	r3, r1, r0, ror #12
   13650:	ldrdeq	r3, [r1], -r4
   13654:	andeq	r3, r1, r8, ror #13
   13658:	andeq	r3, r1, r8, ror #13
   1365c:	andeq	r3, r1, r8, ror #13
   13660:	mov	r3, #5
   13664:	str	r3, [fp, #4]
   13668:	mov	r3, #1
   1366c:	strb	r3, [fp, #-34]	; 0xffffffde
   13670:	ldrb	r3, [fp, #-34]	; 0xffffffde
   13674:	eor	r3, r3, #1
   13678:	uxtb	r3, r3
   1367c:	cmp	r3, #0
   13680:	beq	136b4 <__assert_fail@plt+0x24a8>
   13684:	ldr	r2, [fp, #-20]	; 0xffffffec
   13688:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1368c:	cmp	r2, r3
   13690:	bcs	136a8 <__assert_fail@plt+0x249c>
   13694:	ldr	r2, [fp, #-88]	; 0xffffffa8
   13698:	ldr	r3, [fp, #-20]	; 0xffffffec
   1369c:	add	r3, r2, r3
   136a0:	mov	r2, #34	; 0x22
   136a4:	strb	r2, [r3]
   136a8:	ldr	r3, [fp, #-20]	; 0xffffffec
   136ac:	add	r3, r3, #1
   136b0:	str	r3, [fp, #-20]	; 0xffffffec
   136b4:	mov	r3, #1
   136b8:	strb	r3, [fp, #-33]	; 0xffffffdf
   136bc:	movw	r3, #39812	; 0x9b84
   136c0:	movt	r3, #1
   136c4:	str	r3, [fp, #-28]	; 0xffffffe4
   136c8:	mov	r3, #1
   136cc:	str	r3, [fp, #-32]	; 0xffffffe0
   136d0:	b	1384c <__assert_fail@plt+0x2640>
   136d4:	mov	r3, #1
   136d8:	strb	r3, [fp, #-33]	; 0xffffffdf
   136dc:	mov	r3, #0
   136e0:	strb	r3, [fp, #-34]	; 0xffffffde
   136e4:	b	1384c <__assert_fail@plt+0x2640>
   136e8:	ldr	r3, [fp, #4]
   136ec:	cmp	r3, #10
   136f0:	beq	1371c <__assert_fail@plt+0x2510>
   136f4:	ldr	r1, [fp, #4]
   136f8:	movw	r0, #39820	; 0x9b8c
   136fc:	movt	r0, #1
   13700:	bl	13490 <__assert_fail@plt+0x2284>
   13704:	str	r0, [fp, #16]
   13708:	ldr	r1, [fp, #4]
   1370c:	movw	r0, #39816	; 0x9b88
   13710:	movt	r0, #1
   13714:	bl	13490 <__assert_fail@plt+0x2284>
   13718:	str	r0, [fp, #20]
   1371c:	ldrb	r3, [fp, #-34]	; 0xffffffde
   13720:	eor	r3, r3, #1
   13724:	uxtb	r3, r3
   13728:	cmp	r3, #0
   1372c:	beq	1378c <__assert_fail@plt+0x2580>
   13730:	ldr	r3, [fp, #16]
   13734:	str	r3, [fp, #-28]	; 0xffffffe4
   13738:	b	1377c <__assert_fail@plt+0x2570>
   1373c:	ldr	r2, [fp, #-20]	; 0xffffffec
   13740:	ldr	r3, [fp, #-92]	; 0xffffffa4
   13744:	cmp	r2, r3
   13748:	bcs	13764 <__assert_fail@plt+0x2558>
   1374c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   13750:	ldr	r3, [fp, #-20]	; 0xffffffec
   13754:	add	r3, r2, r3
   13758:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1375c:	ldrb	r2, [r2]
   13760:	strb	r2, [r3]
   13764:	ldr	r3, [fp, #-20]	; 0xffffffec
   13768:	add	r3, r3, #1
   1376c:	str	r3, [fp, #-20]	; 0xffffffec
   13770:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13774:	add	r3, r3, #1
   13778:	str	r3, [fp, #-28]	; 0xffffffe4
   1377c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13780:	ldrb	r3, [r3]
   13784:	cmp	r3, #0
   13788:	bne	1373c <__assert_fail@plt+0x2530>
   1378c:	mov	r3, #1
   13790:	strb	r3, [fp, #-33]	; 0xffffffdf
   13794:	ldr	r3, [fp, #20]
   13798:	str	r3, [fp, #-28]	; 0xffffffe4
   1379c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   137a0:	bl	110ec <strlen@plt>
   137a4:	str	r0, [fp, #-32]	; 0xffffffe0
   137a8:	b	1384c <__assert_fail@plt+0x2640>
   137ac:	mov	r3, #1
   137b0:	strb	r3, [fp, #-33]	; 0xffffffdf
   137b4:	mov	r3, #1
   137b8:	strb	r3, [fp, #-34]	; 0xffffffde
   137bc:	ldrb	r3, [fp, #-34]	; 0xffffffde
   137c0:	eor	r3, r3, #1
   137c4:	uxtb	r3, r3
   137c8:	cmp	r3, #0
   137cc:	beq	137d8 <__assert_fail@plt+0x25cc>
   137d0:	mov	r3, #1
   137d4:	strb	r3, [fp, #-33]	; 0xffffffdf
   137d8:	mov	r3, #2
   137dc:	str	r3, [fp, #4]
   137e0:	ldrb	r3, [fp, #-34]	; 0xffffffde
   137e4:	eor	r3, r3, #1
   137e8:	uxtb	r3, r3
   137ec:	cmp	r3, #0
   137f0:	beq	13824 <__assert_fail@plt+0x2618>
   137f4:	ldr	r2, [fp, #-20]	; 0xffffffec
   137f8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   137fc:	cmp	r2, r3
   13800:	bcs	13818 <__assert_fail@plt+0x260c>
   13804:	ldr	r2, [fp, #-88]	; 0xffffffa8
   13808:	ldr	r3, [fp, #-20]	; 0xffffffec
   1380c:	add	r3, r2, r3
   13810:	mov	r2, #39	; 0x27
   13814:	strb	r2, [r3]
   13818:	ldr	r3, [fp, #-20]	; 0xffffffec
   1381c:	add	r3, r3, #1
   13820:	str	r3, [fp, #-20]	; 0xffffffec
   13824:	movw	r3, #39816	; 0x9b88
   13828:	movt	r3, #1
   1382c:	str	r3, [fp, #-28]	; 0xffffffe4
   13830:	mov	r3, #1
   13834:	str	r3, [fp, #-32]	; 0xffffffe0
   13838:	b	1384c <__assert_fail@plt+0x2640>
   1383c:	mov	r3, #0
   13840:	strb	r3, [fp, #-34]	; 0xffffffde
   13844:	b	1384c <__assert_fail@plt+0x2640>
   13848:	bl	111dc <abort@plt>
   1384c:	mov	r3, #0
   13850:	str	r3, [fp, #-16]
   13854:	b	149f0 <__assert_fail@plt+0x37e4>
   13858:	mov	r3, #0
   1385c:	strb	r3, [fp, #-40]	; 0xffffffd8
   13860:	mov	r3, #0
   13864:	strb	r3, [fp, #-41]	; 0xffffffd7
   13868:	mov	r3, #0
   1386c:	strb	r3, [fp, #-42]	; 0xffffffd6
   13870:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   13874:	cmp	r3, #0
   13878:	beq	13914 <__assert_fail@plt+0x2708>
   1387c:	ldr	r3, [fp, #4]
   13880:	cmp	r3, #2
   13884:	beq	13914 <__assert_fail@plt+0x2708>
   13888:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1388c:	cmp	r3, #0
   13890:	beq	13914 <__assert_fail@plt+0x2708>
   13894:	ldr	r2, [fp, #-16]
   13898:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1389c:	add	r4, r2, r3
   138a0:	ldr	r3, [fp, #-100]	; 0xffffff9c
   138a4:	cmn	r3, #1
   138a8:	bne	138cc <__assert_fail@plt+0x26c0>
   138ac:	ldr	r3, [fp, #-32]	; 0xffffffe0
   138b0:	cmp	r3, #1
   138b4:	bls	138cc <__assert_fail@plt+0x26c0>
   138b8:	ldr	r0, [fp, #-96]	; 0xffffffa0
   138bc:	bl	110ec <strlen@plt>
   138c0:	str	r0, [fp, #-100]	; 0xffffff9c
   138c4:	ldr	r3, [fp, #-100]	; 0xffffff9c
   138c8:	b	138d0 <__assert_fail@plt+0x26c4>
   138cc:	ldr	r3, [fp, #-100]	; 0xffffff9c
   138d0:	cmp	r3, r4
   138d4:	bcc	13914 <__assert_fail@plt+0x2708>
   138d8:	ldr	r2, [fp, #-96]	; 0xffffffa0
   138dc:	ldr	r3, [fp, #-16]
   138e0:	add	r3, r2, r3
   138e4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   138e8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   138ec:	mov	r0, r3
   138f0:	bl	10fc0 <memcmp@plt>
   138f4:	mov	r3, r0
   138f8:	cmp	r3, #0
   138fc:	bne	13914 <__assert_fail@plt+0x2708>
   13900:	ldrb	r3, [fp, #-34]	; 0xffffffde
   13904:	cmp	r3, #0
   13908:	bne	14bac <__assert_fail@plt+0x39a0>
   1390c:	mov	r3, #1
   13910:	strb	r3, [fp, #-40]	; 0xffffffd8
   13914:	ldr	r2, [fp, #-96]	; 0xffffffa0
   13918:	ldr	r3, [fp, #-16]
   1391c:	add	r3, r2, r3
   13920:	ldrb	r3, [r3]
   13924:	strb	r3, [fp, #-38]	; 0xffffffda
   13928:	ldrb	r3, [fp, #-38]	; 0xffffffda
   1392c:	cmp	r3, #126	; 0x7e
   13930:	ldrls	pc, [pc, r3, lsl #2]
   13934:	b	1416c <__assert_fail@plt+0x2f60>
   13938:	andeq	r3, r1, r4, lsr fp
   1393c:	andeq	r4, r1, ip, ror #2
   13940:	andeq	r4, r1, ip, ror #2
   13944:	andeq	r4, r1, ip, ror #2
   13948:	andeq	r4, r1, ip, ror #2
   1394c:	andeq	r4, r1, ip, ror #2
   13950:	andeq	r4, r1, ip, ror #2
   13954:	andeq	r3, r1, r8, lsr #30
   13958:	andeq	r3, r1, r4, lsr pc
   1395c:	andeq	r3, r1, r4, ror #30
   13960:	andeq	r3, r1, ip, asr #30
   13964:	andeq	r3, r1, r0, ror pc
   13968:	andeq	r3, r1, r0, asr #30
   1396c:	andeq	r3, r1, r8, asr pc
   13970:	andeq	r4, r1, ip, ror #2
   13974:	andeq	r4, r1, ip, ror #2
   13978:	andeq	r4, r1, ip, ror #2
   1397c:	andeq	r4, r1, ip, ror #2
   13980:	andeq	r4, r1, ip, ror #2
   13984:	andeq	r4, r1, ip, ror #2
   13988:	andeq	r4, r1, ip, ror #2
   1398c:	andeq	r4, r1, ip, ror #2
   13990:	andeq	r4, r1, ip, ror #2
   13994:	andeq	r4, r1, ip, ror #2
   13998:	andeq	r4, r1, ip, ror #2
   1399c:	andeq	r4, r1, ip, ror #2
   139a0:	andeq	r4, r1, ip, ror #2
   139a4:	andeq	r4, r1, ip, ror #2
   139a8:	andeq	r4, r1, ip, ror #2
   139ac:	andeq	r4, r1, ip, ror #2
   139b0:	andeq	r4, r1, ip, ror #2
   139b4:	andeq	r4, r1, ip, ror #2
   139b8:	andeq	r4, r1, r0, asr r0
   139bc:	andeq	r4, r1, r8, asr r0
   139c0:	andeq	r4, r1, r8, asr r0
   139c4:	andeq	r4, r1, r4, asr #32
   139c8:	andeq	r4, r1, r8, asr r0
   139cc:	andeq	r4, r1, r0, ror #2
   139d0:	andeq	r4, r1, r8, asr r0
   139d4:	andeq	r4, r1, r4, ror r0
   139d8:	andeq	r4, r1, r8, asr r0
   139dc:	andeq	r4, r1, r8, asr r0
   139e0:	andeq	r4, r1, r8, asr r0
   139e4:	andeq	r4, r1, r0, ror #2
   139e8:	andeq	r4, r1, r0, ror #2
   139ec:	andeq	r4, r1, r0, ror #2
   139f0:	andeq	r4, r1, r0, ror #2
   139f4:	andeq	r4, r1, r0, ror #2
   139f8:	andeq	r4, r1, r0, ror #2
   139fc:	andeq	r4, r1, r0, ror #2
   13a00:	andeq	r4, r1, r0, ror #2
   13a04:	andeq	r4, r1, r0, ror #2
   13a08:	andeq	r4, r1, r0, ror #2
   13a0c:	andeq	r4, r1, r0, ror #2
   13a10:	andeq	r4, r1, r0, ror #2
   13a14:	andeq	r4, r1, r0, ror #2
   13a18:	andeq	r4, r1, r0, ror #2
   13a1c:	andeq	r4, r1, r0, ror #2
   13a20:	andeq	r4, r1, r0, ror #2
   13a24:	andeq	r4, r1, r8, asr r0
   13a28:	andeq	r4, r1, r8, asr r0
   13a2c:	andeq	r4, r1, r8, asr r0
   13a30:	andeq	r4, r1, r8, asr r0
   13a34:	andeq	r3, r1, r4, lsl sp
   13a38:	andeq	r4, r1, ip, ror #2
   13a3c:	andeq	r4, r1, r0, ror #2
   13a40:	andeq	r4, r1, r0, ror #2
   13a44:	andeq	r4, r1, r0, ror #2
   13a48:	andeq	r4, r1, r0, ror #2
   13a4c:	andeq	r4, r1, r0, ror #2
   13a50:	andeq	r4, r1, r0, ror #2
   13a54:	andeq	r4, r1, r0, ror #2
   13a58:	andeq	r4, r1, r0, ror #2
   13a5c:	andeq	r4, r1, r0, ror #2
   13a60:	andeq	r4, r1, r0, ror #2
   13a64:	andeq	r4, r1, r0, ror #2
   13a68:	andeq	r4, r1, r0, ror #2
   13a6c:	andeq	r4, r1, r0, ror #2
   13a70:	andeq	r4, r1, r0, ror #2
   13a74:	andeq	r4, r1, r0, ror #2
   13a78:	andeq	r4, r1, r0, ror #2
   13a7c:	andeq	r4, r1, r0, ror #2
   13a80:	andeq	r4, r1, r0, ror #2
   13a84:	andeq	r4, r1, r0, ror #2
   13a88:	andeq	r4, r1, r0, ror #2
   13a8c:	andeq	r4, r1, r0, ror #2
   13a90:	andeq	r4, r1, r0, ror #2
   13a94:	andeq	r4, r1, r0, ror #2
   13a98:	andeq	r4, r1, r0, ror #2
   13a9c:	andeq	r4, r1, r0, ror #2
   13aa0:	andeq	r4, r1, r0, ror #2
   13aa4:	andeq	r4, r1, r8, asr r0
   13aa8:	andeq	r3, r1, ip, ror pc
   13aac:	andeq	r4, r1, r0, ror #2
   13ab0:	andeq	r4, r1, r8, asr r0
   13ab4:	andeq	r4, r1, r0, ror #2
   13ab8:	andeq	r4, r1, r8, asr r0
   13abc:	andeq	r4, r1, r0, ror #2
   13ac0:	andeq	r4, r1, r0, ror #2
   13ac4:	andeq	r4, r1, r0, ror #2
   13ac8:	andeq	r4, r1, r0, ror #2
   13acc:	andeq	r4, r1, r0, ror #2
   13ad0:	andeq	r4, r1, r0, ror #2
   13ad4:	andeq	r4, r1, r0, ror #2
   13ad8:	andeq	r4, r1, r0, ror #2
   13adc:	andeq	r4, r1, r0, ror #2
   13ae0:	andeq	r4, r1, r0, ror #2
   13ae4:	andeq	r4, r1, r0, ror #2
   13ae8:	andeq	r4, r1, r0, ror #2
   13aec:	andeq	r4, r1, r0, ror #2
   13af0:	andeq	r4, r1, r0, ror #2
   13af4:	andeq	r4, r1, r0, ror #2
   13af8:	andeq	r4, r1, r0, ror #2
   13afc:	andeq	r4, r1, r0, ror #2
   13b00:	andeq	r4, r1, r0, ror #2
   13b04:	andeq	r4, r1, r0, ror #2
   13b08:	andeq	r4, r1, r0, ror #2
   13b0c:	andeq	r4, r1, r0, ror #2
   13b10:	andeq	r4, r1, r0, ror #2
   13b14:	andeq	r4, r1, r0, ror #2
   13b18:	andeq	r4, r1, r0, ror #2
   13b1c:	andeq	r4, r1, r0, ror #2
   13b20:	andeq	r4, r1, r0, ror #2
   13b24:	strdeq	r3, [r1], -ip
   13b28:	andeq	r4, r1, r8, asr r0
   13b2c:	strdeq	r3, [r1], -ip
   13b30:	andeq	r4, r1, r4, asr #32
   13b34:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   13b38:	cmp	r3, #0
   13b3c:	beq	13d00 <__assert_fail@plt+0x2af4>
   13b40:	ldrb	r3, [fp, #-34]	; 0xffffffde
   13b44:	cmp	r3, #0
   13b48:	bne	14bb4 <__assert_fail@plt+0x39a8>
   13b4c:	mov	r3, #1
   13b50:	strb	r3, [fp, #-41]	; 0xffffffd7
   13b54:	ldr	r3, [fp, #4]
   13b58:	cmp	r3, #2
   13b5c:	bne	13c0c <__assert_fail@plt+0x2a00>
   13b60:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   13b64:	eor	r3, r3, #1
   13b68:	uxtb	r3, r3
   13b6c:	cmp	r3, #0
   13b70:	beq	13c0c <__assert_fail@plt+0x2a00>
   13b74:	ldr	r2, [fp, #-20]	; 0xffffffec
   13b78:	ldr	r3, [fp, #-92]	; 0xffffffa4
   13b7c:	cmp	r2, r3
   13b80:	bcs	13b98 <__assert_fail@plt+0x298c>
   13b84:	ldr	r2, [fp, #-88]	; 0xffffffa8
   13b88:	ldr	r3, [fp, #-20]	; 0xffffffec
   13b8c:	add	r3, r2, r3
   13b90:	mov	r2, #39	; 0x27
   13b94:	strb	r2, [r3]
   13b98:	ldr	r3, [fp, #-20]	; 0xffffffec
   13b9c:	add	r3, r3, #1
   13ba0:	str	r3, [fp, #-20]	; 0xffffffec
   13ba4:	ldr	r2, [fp, #-20]	; 0xffffffec
   13ba8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   13bac:	cmp	r2, r3
   13bb0:	bcs	13bc8 <__assert_fail@plt+0x29bc>
   13bb4:	ldr	r2, [fp, #-88]	; 0xffffffa8
   13bb8:	ldr	r3, [fp, #-20]	; 0xffffffec
   13bbc:	add	r3, r2, r3
   13bc0:	mov	r2, #36	; 0x24
   13bc4:	strb	r2, [r3]
   13bc8:	ldr	r3, [fp, #-20]	; 0xffffffec
   13bcc:	add	r3, r3, #1
   13bd0:	str	r3, [fp, #-20]	; 0xffffffec
   13bd4:	ldr	r2, [fp, #-20]	; 0xffffffec
   13bd8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   13bdc:	cmp	r2, r3
   13be0:	bcs	13bf8 <__assert_fail@plt+0x29ec>
   13be4:	ldr	r2, [fp, #-88]	; 0xffffffa8
   13be8:	ldr	r3, [fp, #-20]	; 0xffffffec
   13bec:	add	r3, r2, r3
   13bf0:	mov	r2, #39	; 0x27
   13bf4:	strb	r2, [r3]
   13bf8:	ldr	r3, [fp, #-20]	; 0xffffffec
   13bfc:	add	r3, r3, #1
   13c00:	str	r3, [fp, #-20]	; 0xffffffec
   13c04:	mov	r3, #1
   13c08:	strb	r3, [fp, #-35]	; 0xffffffdd
   13c0c:	ldr	r2, [fp, #-20]	; 0xffffffec
   13c10:	ldr	r3, [fp, #-92]	; 0xffffffa4
   13c14:	cmp	r2, r3
   13c18:	bcs	13c30 <__assert_fail@plt+0x2a24>
   13c1c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   13c20:	ldr	r3, [fp, #-20]	; 0xffffffec
   13c24:	add	r3, r2, r3
   13c28:	mov	r2, #92	; 0x5c
   13c2c:	strb	r2, [r3]
   13c30:	ldr	r3, [fp, #-20]	; 0xffffffec
   13c34:	add	r3, r3, #1
   13c38:	str	r3, [fp, #-20]	; 0xffffffec
   13c3c:	ldr	r3, [fp, #4]
   13c40:	cmp	r3, #2
   13c44:	beq	13cf4 <__assert_fail@plt+0x2ae8>
   13c48:	ldr	r3, [fp, #-16]
   13c4c:	add	r3, r3, #1
   13c50:	ldr	r2, [fp, #-100]	; 0xffffff9c
   13c54:	cmp	r2, r3
   13c58:	bls	13cf4 <__assert_fail@plt+0x2ae8>
   13c5c:	ldr	r3, [fp, #-16]
   13c60:	add	r3, r3, #1
   13c64:	ldr	r2, [fp, #-96]	; 0xffffffa0
   13c68:	add	r3, r2, r3
   13c6c:	ldrb	r3, [r3]
   13c70:	cmp	r3, #47	; 0x2f
   13c74:	bls	13cf4 <__assert_fail@plt+0x2ae8>
   13c78:	ldr	r3, [fp, #-16]
   13c7c:	add	r3, r3, #1
   13c80:	ldr	r2, [fp, #-96]	; 0xffffffa0
   13c84:	add	r3, r2, r3
   13c88:	ldrb	r3, [r3]
   13c8c:	cmp	r3, #57	; 0x39
   13c90:	bhi	13cf4 <__assert_fail@plt+0x2ae8>
   13c94:	ldr	r2, [fp, #-20]	; 0xffffffec
   13c98:	ldr	r3, [fp, #-92]	; 0xffffffa4
   13c9c:	cmp	r2, r3
   13ca0:	bcs	13cb8 <__assert_fail@plt+0x2aac>
   13ca4:	ldr	r2, [fp, #-88]	; 0xffffffa8
   13ca8:	ldr	r3, [fp, #-20]	; 0xffffffec
   13cac:	add	r3, r2, r3
   13cb0:	mov	r2, #48	; 0x30
   13cb4:	strb	r2, [r3]
   13cb8:	ldr	r3, [fp, #-20]	; 0xffffffec
   13cbc:	add	r3, r3, #1
   13cc0:	str	r3, [fp, #-20]	; 0xffffffec
   13cc4:	ldr	r2, [fp, #-20]	; 0xffffffec
   13cc8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   13ccc:	cmp	r2, r3
   13cd0:	bcs	13ce8 <__assert_fail@plt+0x2adc>
   13cd4:	ldr	r2, [fp, #-88]	; 0xffffffa8
   13cd8:	ldr	r3, [fp, #-20]	; 0xffffffec
   13cdc:	add	r3, r2, r3
   13ce0:	mov	r2, #48	; 0x30
   13ce4:	strb	r2, [r3]
   13ce8:	ldr	r3, [fp, #-20]	; 0xffffffec
   13cec:	add	r3, r3, #1
   13cf0:	str	r3, [fp, #-20]	; 0xffffffec
   13cf4:	mov	r3, #48	; 0x30
   13cf8:	strb	r3, [fp, #-38]	; 0xffffffda
   13cfc:	b	1473c <__assert_fail@plt+0x3530>
   13d00:	ldr	r3, [fp, #8]
   13d04:	and	r3, r3, #1
   13d08:	cmp	r3, #0
   13d0c:	beq	1473c <__assert_fail@plt+0x3530>
   13d10:	b	149e4 <__assert_fail@plt+0x37d8>
   13d14:	ldr	r3, [fp, #4]
   13d18:	cmp	r3, #2
   13d1c:	beq	13d30 <__assert_fail@plt+0x2b24>
   13d20:	ldr	r3, [fp, #4]
   13d24:	cmp	r3, #5
   13d28:	beq	13d40 <__assert_fail@plt+0x2b34>
   13d2c:	b	13f24 <__assert_fail@plt+0x2d18>
   13d30:	ldrb	r3, [fp, #-34]	; 0xffffffde
   13d34:	cmp	r3, #0
   13d38:	beq	13f18 <__assert_fail@plt+0x2d0c>
   13d3c:	b	14be8 <__assert_fail@plt+0x39dc>
   13d40:	ldr	r3, [fp, #8]
   13d44:	and	r3, r3, #4
   13d48:	cmp	r3, #0
   13d4c:	beq	13f20 <__assert_fail@plt+0x2d14>
   13d50:	ldr	r3, [fp, #-16]
   13d54:	add	r3, r3, #2
   13d58:	ldr	r2, [fp, #-100]	; 0xffffff9c
   13d5c:	cmp	r2, r3
   13d60:	bls	13f20 <__assert_fail@plt+0x2d14>
   13d64:	ldr	r3, [fp, #-16]
   13d68:	add	r3, r3, #1
   13d6c:	ldr	r2, [fp, #-96]	; 0xffffffa0
   13d70:	add	r3, r2, r3
   13d74:	ldrb	r3, [r3]
   13d78:	cmp	r3, #63	; 0x3f
   13d7c:	bne	13f20 <__assert_fail@plt+0x2d14>
   13d80:	ldr	r3, [fp, #-16]
   13d84:	add	r3, r3, #2
   13d88:	ldr	r2, [fp, #-96]	; 0xffffffa0
   13d8c:	add	r3, r2, r3
   13d90:	ldrb	r3, [r3]
   13d94:	sub	r3, r3, #33	; 0x21
   13d98:	cmp	r3, #29
   13d9c:	ldrls	pc, [pc, r3, lsl #2]
   13da0:	b	13f10 <__assert_fail@plt+0x2d04>
   13da4:	andeq	r3, r1, ip, lsl lr
   13da8:	andeq	r3, r1, r0, lsl pc
   13dac:	andeq	r3, r1, r0, lsl pc
   13db0:	andeq	r3, r1, r0, lsl pc
   13db4:	andeq	r3, r1, r0, lsl pc
   13db8:	andeq	r3, r1, r0, lsl pc
   13dbc:	andeq	r3, r1, ip, lsl lr
   13dc0:	andeq	r3, r1, ip, lsl lr
   13dc4:	andeq	r3, r1, ip, lsl lr
   13dc8:	andeq	r3, r1, r0, lsl pc
   13dcc:	andeq	r3, r1, r0, lsl pc
   13dd0:	andeq	r3, r1, r0, lsl pc
   13dd4:	andeq	r3, r1, ip, lsl lr
   13dd8:	andeq	r3, r1, r0, lsl pc
   13ddc:	andeq	r3, r1, ip, lsl lr
   13de0:	andeq	r3, r1, r0, lsl pc
   13de4:	andeq	r3, r1, r0, lsl pc
   13de8:	andeq	r3, r1, r0, lsl pc
   13dec:	andeq	r3, r1, r0, lsl pc
   13df0:	andeq	r3, r1, r0, lsl pc
   13df4:	andeq	r3, r1, r0, lsl pc
   13df8:	andeq	r3, r1, r0, lsl pc
   13dfc:	andeq	r3, r1, r0, lsl pc
   13e00:	andeq	r3, r1, r0, lsl pc
   13e04:	andeq	r3, r1, r0, lsl pc
   13e08:	andeq	r3, r1, r0, lsl pc
   13e0c:	andeq	r3, r1, r0, lsl pc
   13e10:	andeq	r3, r1, ip, lsl lr
   13e14:	andeq	r3, r1, ip, lsl lr
   13e18:	andeq	r3, r1, ip, lsl lr
   13e1c:	ldrb	r3, [fp, #-34]	; 0xffffffde
   13e20:	cmp	r3, #0
   13e24:	bne	14bbc <__assert_fail@plt+0x39b0>
   13e28:	ldr	r3, [fp, #-16]
   13e2c:	add	r3, r3, #2
   13e30:	ldr	r2, [fp, #-96]	; 0xffffffa0
   13e34:	add	r3, r2, r3
   13e38:	ldrb	r3, [r3]
   13e3c:	strb	r3, [fp, #-38]	; 0xffffffda
   13e40:	ldr	r3, [fp, #-16]
   13e44:	add	r3, r3, #2
   13e48:	str	r3, [fp, #-16]
   13e4c:	ldr	r2, [fp, #-20]	; 0xffffffec
   13e50:	ldr	r3, [fp, #-92]	; 0xffffffa4
   13e54:	cmp	r2, r3
   13e58:	bcs	13e70 <__assert_fail@plt+0x2c64>
   13e5c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   13e60:	ldr	r3, [fp, #-20]	; 0xffffffec
   13e64:	add	r3, r2, r3
   13e68:	mov	r2, #63	; 0x3f
   13e6c:	strb	r2, [r3]
   13e70:	ldr	r3, [fp, #-20]	; 0xffffffec
   13e74:	add	r3, r3, #1
   13e78:	str	r3, [fp, #-20]	; 0xffffffec
   13e7c:	ldr	r2, [fp, #-20]	; 0xffffffec
   13e80:	ldr	r3, [fp, #-92]	; 0xffffffa4
   13e84:	cmp	r2, r3
   13e88:	bcs	13ea0 <__assert_fail@plt+0x2c94>
   13e8c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   13e90:	ldr	r3, [fp, #-20]	; 0xffffffec
   13e94:	add	r3, r2, r3
   13e98:	mov	r2, #34	; 0x22
   13e9c:	strb	r2, [r3]
   13ea0:	ldr	r3, [fp, #-20]	; 0xffffffec
   13ea4:	add	r3, r3, #1
   13ea8:	str	r3, [fp, #-20]	; 0xffffffec
   13eac:	ldr	r2, [fp, #-20]	; 0xffffffec
   13eb0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   13eb4:	cmp	r2, r3
   13eb8:	bcs	13ed0 <__assert_fail@plt+0x2cc4>
   13ebc:	ldr	r2, [fp, #-88]	; 0xffffffa8
   13ec0:	ldr	r3, [fp, #-20]	; 0xffffffec
   13ec4:	add	r3, r2, r3
   13ec8:	mov	r2, #34	; 0x22
   13ecc:	strb	r2, [r3]
   13ed0:	ldr	r3, [fp, #-20]	; 0xffffffec
   13ed4:	add	r3, r3, #1
   13ed8:	str	r3, [fp, #-20]	; 0xffffffec
   13edc:	ldr	r2, [fp, #-20]	; 0xffffffec
   13ee0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   13ee4:	cmp	r2, r3
   13ee8:	bcs	13f00 <__assert_fail@plt+0x2cf4>
   13eec:	ldr	r2, [fp, #-88]	; 0xffffffa8
   13ef0:	ldr	r3, [fp, #-20]	; 0xffffffec
   13ef4:	add	r3, r2, r3
   13ef8:	mov	r2, #63	; 0x3f
   13efc:	strb	r2, [r3]
   13f00:	ldr	r3, [fp, #-20]	; 0xffffffec
   13f04:	add	r3, r3, #1
   13f08:	str	r3, [fp, #-20]	; 0xffffffec
   13f0c:	b	13f14 <__assert_fail@plt+0x2d08>
   13f10:	nop	{0}
   13f14:	b	13f20 <__assert_fail@plt+0x2d14>
   13f18:	nop	{0}
   13f1c:	b	14770 <__assert_fail@plt+0x3564>
   13f20:	nop	{0}
   13f24:	b	14770 <__assert_fail@plt+0x3564>
   13f28:	mov	r3, #97	; 0x61
   13f2c:	strb	r3, [fp, #-39]	; 0xffffffd9
   13f30:	b	13fe4 <__assert_fail@plt+0x2dd8>
   13f34:	mov	r3, #98	; 0x62
   13f38:	strb	r3, [fp, #-39]	; 0xffffffd9
   13f3c:	b	13fe4 <__assert_fail@plt+0x2dd8>
   13f40:	mov	r3, #102	; 0x66
   13f44:	strb	r3, [fp, #-39]	; 0xffffffd9
   13f48:	b	13fe4 <__assert_fail@plt+0x2dd8>
   13f4c:	mov	r3, #110	; 0x6e
   13f50:	strb	r3, [fp, #-39]	; 0xffffffd9
   13f54:	b	13fc8 <__assert_fail@plt+0x2dbc>
   13f58:	mov	r3, #114	; 0x72
   13f5c:	strb	r3, [fp, #-39]	; 0xffffffd9
   13f60:	b	13fc8 <__assert_fail@plt+0x2dbc>
   13f64:	mov	r3, #116	; 0x74
   13f68:	strb	r3, [fp, #-39]	; 0xffffffd9
   13f6c:	b	13fc8 <__assert_fail@plt+0x2dbc>
   13f70:	mov	r3, #118	; 0x76
   13f74:	strb	r3, [fp, #-39]	; 0xffffffd9
   13f78:	b	13fe4 <__assert_fail@plt+0x2dd8>
   13f7c:	ldrb	r3, [fp, #-38]	; 0xffffffda
   13f80:	strb	r3, [fp, #-39]	; 0xffffffd9
   13f84:	ldr	r3, [fp, #4]
   13f88:	cmp	r3, #2
   13f8c:	bne	13fa0 <__assert_fail@plt+0x2d94>
   13f90:	ldrb	r3, [fp, #-34]	; 0xffffffde
   13f94:	cmp	r3, #0
   13f98:	beq	148fc <__assert_fail@plt+0x36f0>
   13f9c:	b	14be8 <__assert_fail@plt+0x39dc>
   13fa0:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   13fa4:	cmp	r3, #0
   13fa8:	beq	13fc4 <__assert_fail@plt+0x2db8>
   13fac:	ldrb	r3, [fp, #-34]	; 0xffffffde
   13fb0:	cmp	r3, #0
   13fb4:	beq	13fc4 <__assert_fail@plt+0x2db8>
   13fb8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13fbc:	cmp	r3, #0
   13fc0:	bne	14904 <__assert_fail@plt+0x36f8>
   13fc4:	nop	{0}
   13fc8:	ldr	r3, [fp, #4]
   13fcc:	cmp	r3, #2
   13fd0:	bne	13fe0 <__assert_fail@plt+0x2dd4>
   13fd4:	ldrb	r3, [fp, #-34]	; 0xffffffde
   13fd8:	cmp	r3, #0
   13fdc:	bne	14bc4 <__assert_fail@plt+0x39b8>
   13fe0:	nop	{0}
   13fe4:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   13fe8:	cmp	r3, #0
   13fec:	beq	14744 <__assert_fail@plt+0x3538>
   13ff0:	ldrb	r3, [fp, #-39]	; 0xffffffd9
   13ff4:	strb	r3, [fp, #-38]	; 0xffffffda
   13ff8:	b	147fc <__assert_fail@plt+0x35f0>
   13ffc:	ldr	r3, [fp, #-100]	; 0xffffff9c
   14000:	cmn	r3, #1
   14004:	bne	14028 <__assert_fail@plt+0x2e1c>
   14008:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1400c:	add	r3, r3, #1
   14010:	ldrb	r3, [r3]
   14014:	cmp	r3, #0
   14018:	movne	r3, #1
   1401c:	moveq	r3, #0
   14020:	uxtb	r3, r3
   14024:	b	1403c <__assert_fail@plt+0x2e30>
   14028:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1402c:	cmp	r3, #1
   14030:	movne	r3, #1
   14034:	moveq	r3, #0
   14038:	uxtb	r3, r3
   1403c:	cmp	r3, #0
   14040:	bne	1474c <__assert_fail@plt+0x3540>
   14044:	ldr	r3, [fp, #-16]
   14048:	cmp	r3, #0
   1404c:	bne	14754 <__assert_fail@plt+0x3548>
   14050:	mov	r3, #1
   14054:	strb	r3, [fp, #-42]	; 0xffffffd6
   14058:	ldr	r3, [fp, #4]
   1405c:	cmp	r3, #2
   14060:	bne	1475c <__assert_fail@plt+0x3550>
   14064:	ldrb	r3, [fp, #-34]	; 0xffffffde
   14068:	cmp	r3, #0
   1406c:	beq	1475c <__assert_fail@plt+0x3550>
   14070:	b	14be8 <__assert_fail@plt+0x39dc>
   14074:	mov	r3, #1
   14078:	strb	r3, [fp, #-36]	; 0xffffffdc
   1407c:	mov	r3, #1
   14080:	strb	r3, [fp, #-42]	; 0xffffffd6
   14084:	ldr	r3, [fp, #4]
   14088:	cmp	r3, #2
   1408c:	bne	14764 <__assert_fail@plt+0x3558>
   14090:	ldrb	r3, [fp, #-34]	; 0xffffffde
   14094:	cmp	r3, #0
   14098:	bne	14bcc <__assert_fail@plt+0x39c0>
   1409c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   140a0:	cmp	r3, #0
   140a4:	beq	140c4 <__assert_fail@plt+0x2eb8>
   140a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   140ac:	cmp	r3, #0
   140b0:	bne	140c4 <__assert_fail@plt+0x2eb8>
   140b4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   140b8:	str	r3, [fp, #-24]	; 0xffffffe8
   140bc:	mov	r3, #0
   140c0:	str	r3, [fp, #-92]	; 0xffffffa4
   140c4:	ldr	r2, [fp, #-20]	; 0xffffffec
   140c8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   140cc:	cmp	r2, r3
   140d0:	bcs	140e8 <__assert_fail@plt+0x2edc>
   140d4:	ldr	r2, [fp, #-88]	; 0xffffffa8
   140d8:	ldr	r3, [fp, #-20]	; 0xffffffec
   140dc:	add	r3, r2, r3
   140e0:	mov	r2, #39	; 0x27
   140e4:	strb	r2, [r3]
   140e8:	ldr	r3, [fp, #-20]	; 0xffffffec
   140ec:	add	r3, r3, #1
   140f0:	str	r3, [fp, #-20]	; 0xffffffec
   140f4:	ldr	r2, [fp, #-20]	; 0xffffffec
   140f8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   140fc:	cmp	r2, r3
   14100:	bcs	14118 <__assert_fail@plt+0x2f0c>
   14104:	ldr	r2, [fp, #-88]	; 0xffffffa8
   14108:	ldr	r3, [fp, #-20]	; 0xffffffec
   1410c:	add	r3, r2, r3
   14110:	mov	r2, #92	; 0x5c
   14114:	strb	r2, [r3]
   14118:	ldr	r3, [fp, #-20]	; 0xffffffec
   1411c:	add	r3, r3, #1
   14120:	str	r3, [fp, #-20]	; 0xffffffec
   14124:	ldr	r2, [fp, #-20]	; 0xffffffec
   14128:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1412c:	cmp	r2, r3
   14130:	bcs	14148 <__assert_fail@plt+0x2f3c>
   14134:	ldr	r2, [fp, #-88]	; 0xffffffa8
   14138:	ldr	r3, [fp, #-20]	; 0xffffffec
   1413c:	add	r3, r2, r3
   14140:	mov	r2, #39	; 0x27
   14144:	strb	r2, [r3]
   14148:	ldr	r3, [fp, #-20]	; 0xffffffec
   1414c:	add	r3, r3, #1
   14150:	str	r3, [fp, #-20]	; 0xffffffec
   14154:	mov	r3, #0
   14158:	strb	r3, [fp, #-35]	; 0xffffffdd
   1415c:	b	14764 <__assert_fail@plt+0x3558>
   14160:	mov	r3, #1
   14164:	strb	r3, [fp, #-42]	; 0xffffffd6
   14168:	b	14770 <__assert_fail@plt+0x3564>
   1416c:	ldrb	r3, [fp, #-57]	; 0xffffffc7
   14170:	cmp	r3, #0
   14174:	beq	141b4 <__assert_fail@plt+0x2fa8>
   14178:	mov	r3, #1
   1417c:	str	r3, [fp, #-48]	; 0xffffffd0
   14180:	bl	110bc <__ctype_b_loc@plt>
   14184:	mov	r3, r0
   14188:	ldr	r2, [r3]
   1418c:	ldrb	r3, [fp, #-38]	; 0xffffffda
   14190:	lsl	r3, r3, #1
   14194:	add	r3, r2, r3
   14198:	ldrh	r3, [r3]
   1419c:	and	r3, r3, #16384	; 0x4000
   141a0:	cmp	r3, #0
   141a4:	movne	r3, #1
   141a8:	moveq	r3, #0
   141ac:	strb	r3, [fp, #-49]	; 0xffffffcf
   141b0:	b	14400 <__assert_fail@plt+0x31f4>
   141b4:	sub	r3, fp, #76	; 0x4c
   141b8:	mov	r2, #8
   141bc:	mov	r1, #0
   141c0:	mov	r0, r3
   141c4:	bl	11140 <memset@plt>
   141c8:	mov	r3, #0
   141cc:	str	r3, [fp, #-48]	; 0xffffffd0
   141d0:	mov	r3, #1
   141d4:	strb	r3, [fp, #-49]	; 0xffffffcf
   141d8:	ldr	r3, [fp, #-100]	; 0xffffff9c
   141dc:	cmn	r3, #1
   141e0:	bne	141f0 <__assert_fail@plt+0x2fe4>
   141e4:	ldr	r0, [fp, #-96]	; 0xffffffa0
   141e8:	bl	110ec <strlen@plt>
   141ec:	str	r0, [fp, #-100]	; 0xffffff9c
   141f0:	ldr	r2, [fp, #-16]
   141f4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   141f8:	add	r3, r2, r3
   141fc:	ldr	r2, [fp, #-96]	; 0xffffffa0
   14200:	add	r1, r2, r3
   14204:	ldr	r2, [fp, #-16]
   14208:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1420c:	add	r3, r2, r3
   14210:	ldr	r2, [fp, #-100]	; 0xffffff9c
   14214:	sub	r2, r2, r3
   14218:	sub	r3, fp, #76	; 0x4c
   1421c:	sub	r0, fp, #80	; 0x50
   14220:	bl	1800c <__assert_fail@plt+0x6e00>
   14224:	str	r0, [fp, #-64]	; 0xffffffc0
   14228:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1422c:	cmp	r3, #0
   14230:	beq	143f4 <__assert_fail@plt+0x31e8>
   14234:	ldr	r3, [fp, #-64]	; 0xffffffc0
   14238:	cmn	r3, #1
   1423c:	bne	1424c <__assert_fail@plt+0x3040>
   14240:	mov	r3, #0
   14244:	strb	r3, [fp, #-49]	; 0xffffffcf
   14248:	b	14400 <__assert_fail@plt+0x31f4>
   1424c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   14250:	cmn	r3, #2
   14254:	bne	142ac <__assert_fail@plt+0x30a0>
   14258:	mov	r3, #0
   1425c:	strb	r3, [fp, #-49]	; 0xffffffcf
   14260:	b	14270 <__assert_fail@plt+0x3064>
   14264:	ldr	r3, [fp, #-48]	; 0xffffffd0
   14268:	add	r3, r3, #1
   1426c:	str	r3, [fp, #-48]	; 0xffffffd0
   14270:	ldr	r2, [fp, #-16]
   14274:	ldr	r3, [fp, #-48]	; 0xffffffd0
   14278:	add	r3, r2, r3
   1427c:	ldr	r2, [fp, #-100]	; 0xffffff9c
   14280:	cmp	r2, r3
   14284:	bls	143fc <__assert_fail@plt+0x31f0>
   14288:	ldr	r2, [fp, #-16]
   1428c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   14290:	add	r3, r2, r3
   14294:	ldr	r2, [fp, #-96]	; 0xffffffa0
   14298:	add	r3, r2, r3
   1429c:	ldrb	r3, [r3]
   142a0:	cmp	r3, #0
   142a4:	bne	14264 <__assert_fail@plt+0x3058>
   142a8:	b	143fc <__assert_fail@plt+0x31f0>
   142ac:	ldrb	r3, [fp, #-34]	; 0xffffffde
   142b0:	cmp	r3, #0
   142b4:	beq	143a8 <__assert_fail@plt+0x319c>
   142b8:	ldr	r3, [fp, #4]
   142bc:	cmp	r3, #2
   142c0:	bne	143a8 <__assert_fail@plt+0x319c>
   142c4:	mov	r3, #1
   142c8:	str	r3, [fp, #-56]	; 0xffffffc8
   142cc:	b	14398 <__assert_fail@plt+0x318c>
   142d0:	ldr	r2, [fp, #-16]
   142d4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   142d8:	add	r2, r2, r3
   142dc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   142e0:	add	r3, r2, r3
   142e4:	ldr	r2, [fp, #-96]	; 0xffffffa0
   142e8:	add	r3, r2, r3
   142ec:	ldrb	r3, [r3]
   142f0:	sub	r3, r3, #91	; 0x5b
   142f4:	cmp	r3, #33	; 0x21
   142f8:	ldrls	pc, [pc, r3, lsl #2]
   142fc:	b	14388 <__assert_fail@plt+0x317c>
   14300:	andeq	r4, r1, r8, ror #23
   14304:	andeq	r4, r1, r8, ror #23
   14308:	andeq	r4, r1, r8, lsl #7
   1430c:	andeq	r4, r1, r8, ror #23
   14310:	andeq	r4, r1, r8, lsl #7
   14314:	andeq	r4, r1, r8, ror #23
   14318:	andeq	r4, r1, r8, lsl #7
   1431c:	andeq	r4, r1, r8, lsl #7
   14320:	andeq	r4, r1, r8, lsl #7
   14324:	andeq	r4, r1, r8, lsl #7
   14328:	andeq	r4, r1, r8, lsl #7
   1432c:	andeq	r4, r1, r8, lsl #7
   14330:	andeq	r4, r1, r8, lsl #7
   14334:	andeq	r4, r1, r8, lsl #7
   14338:	andeq	r4, r1, r8, lsl #7
   1433c:	andeq	r4, r1, r8, lsl #7
   14340:	andeq	r4, r1, r8, lsl #7
   14344:	andeq	r4, r1, r8, lsl #7
   14348:	andeq	r4, r1, r8, lsl #7
   1434c:	andeq	r4, r1, r8, lsl #7
   14350:	andeq	r4, r1, r8, lsl #7
   14354:	andeq	r4, r1, r8, lsl #7
   14358:	andeq	r4, r1, r8, lsl #7
   1435c:	andeq	r4, r1, r8, lsl #7
   14360:	andeq	r4, r1, r8, lsl #7
   14364:	andeq	r4, r1, r8, lsl #7
   14368:	andeq	r4, r1, r8, lsl #7
   1436c:	andeq	r4, r1, r8, lsl #7
   14370:	andeq	r4, r1, r8, lsl #7
   14374:	andeq	r4, r1, r8, lsl #7
   14378:	andeq	r4, r1, r8, lsl #7
   1437c:	andeq	r4, r1, r8, lsl #7
   14380:	andeq	r4, r1, r8, lsl #7
   14384:	andeq	r4, r1, r8, ror #23
   14388:	nop	{0}
   1438c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   14390:	add	r3, r3, #1
   14394:	str	r3, [fp, #-56]	; 0xffffffc8
   14398:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1439c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   143a0:	cmp	r2, r3
   143a4:	bcc	142d0 <__assert_fail@plt+0x30c4>
   143a8:	ldr	r3, [fp, #-80]	; 0xffffffb0
   143ac:	mov	r0, r3
   143b0:	bl	10ffc <iswprint@plt>
   143b4:	mov	r3, r0
   143b8:	cmp	r3, #0
   143bc:	bne	143c8 <__assert_fail@plt+0x31bc>
   143c0:	mov	r3, #0
   143c4:	strb	r3, [fp, #-49]	; 0xffffffcf
   143c8:	ldr	r2, [fp, #-48]	; 0xffffffd0
   143cc:	ldr	r3, [fp, #-64]	; 0xffffffc0
   143d0:	add	r3, r2, r3
   143d4:	str	r3, [fp, #-48]	; 0xffffffd0
   143d8:	sub	r3, fp, #76	; 0x4c
   143dc:	mov	r0, r3
   143e0:	bl	10fb4 <mbsinit@plt>
   143e4:	mov	r3, r0
   143e8:	cmp	r3, #0
   143ec:	beq	141f0 <__assert_fail@plt+0x2fe4>
   143f0:	b	14400 <__assert_fail@plt+0x31f4>
   143f4:	nop	{0}
   143f8:	b	14400 <__assert_fail@plt+0x31f4>
   143fc:	nop	{0}
   14400:	ldrb	r3, [fp, #-49]	; 0xffffffcf
   14404:	strb	r3, [fp, #-42]	; 0xffffffd6
   14408:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1440c:	cmp	r3, #1
   14410:	bhi	14434 <__assert_fail@plt+0x3228>
   14414:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   14418:	cmp	r3, #0
   1441c:	beq	1476c <__assert_fail@plt+0x3560>
   14420:	ldrb	r3, [fp, #-49]	; 0xffffffcf
   14424:	eor	r3, r3, #1
   14428:	uxtb	r3, r3
   1442c:	cmp	r3, #0
   14430:	beq	1476c <__assert_fail@plt+0x3560>
   14434:	ldr	r2, [fp, #-16]
   14438:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1443c:	add	r3, r2, r3
   14440:	str	r3, [fp, #-68]	; 0xffffffbc
   14444:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   14448:	cmp	r3, #0
   1444c:	beq	14600 <__assert_fail@plt+0x33f4>
   14450:	ldrb	r3, [fp, #-49]	; 0xffffffcf
   14454:	eor	r3, r3, #1
   14458:	uxtb	r3, r3
   1445c:	cmp	r3, #0
   14460:	beq	14600 <__assert_fail@plt+0x33f4>
   14464:	ldrb	r3, [fp, #-34]	; 0xffffffde
   14468:	cmp	r3, #0
   1446c:	bne	14bd4 <__assert_fail@plt+0x39c8>
   14470:	mov	r3, #1
   14474:	strb	r3, [fp, #-41]	; 0xffffffd7
   14478:	ldr	r3, [fp, #4]
   1447c:	cmp	r3, #2
   14480:	bne	14530 <__assert_fail@plt+0x3324>
   14484:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   14488:	eor	r3, r3, #1
   1448c:	uxtb	r3, r3
   14490:	cmp	r3, #0
   14494:	beq	14530 <__assert_fail@plt+0x3324>
   14498:	ldr	r2, [fp, #-20]	; 0xffffffec
   1449c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   144a0:	cmp	r2, r3
   144a4:	bcs	144bc <__assert_fail@plt+0x32b0>
   144a8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   144ac:	ldr	r3, [fp, #-20]	; 0xffffffec
   144b0:	add	r3, r2, r3
   144b4:	mov	r2, #39	; 0x27
   144b8:	strb	r2, [r3]
   144bc:	ldr	r3, [fp, #-20]	; 0xffffffec
   144c0:	add	r3, r3, #1
   144c4:	str	r3, [fp, #-20]	; 0xffffffec
   144c8:	ldr	r2, [fp, #-20]	; 0xffffffec
   144cc:	ldr	r3, [fp, #-92]	; 0xffffffa4
   144d0:	cmp	r2, r3
   144d4:	bcs	144ec <__assert_fail@plt+0x32e0>
   144d8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   144dc:	ldr	r3, [fp, #-20]	; 0xffffffec
   144e0:	add	r3, r2, r3
   144e4:	mov	r2, #36	; 0x24
   144e8:	strb	r2, [r3]
   144ec:	ldr	r3, [fp, #-20]	; 0xffffffec
   144f0:	add	r3, r3, #1
   144f4:	str	r3, [fp, #-20]	; 0xffffffec
   144f8:	ldr	r2, [fp, #-20]	; 0xffffffec
   144fc:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14500:	cmp	r2, r3
   14504:	bcs	1451c <__assert_fail@plt+0x3310>
   14508:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1450c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14510:	add	r3, r2, r3
   14514:	mov	r2, #39	; 0x27
   14518:	strb	r2, [r3]
   1451c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14520:	add	r3, r3, #1
   14524:	str	r3, [fp, #-20]	; 0xffffffec
   14528:	mov	r3, #1
   1452c:	strb	r3, [fp, #-35]	; 0xffffffdd
   14530:	ldr	r2, [fp, #-20]	; 0xffffffec
   14534:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14538:	cmp	r2, r3
   1453c:	bcs	14554 <__assert_fail@plt+0x3348>
   14540:	ldr	r2, [fp, #-88]	; 0xffffffa8
   14544:	ldr	r3, [fp, #-20]	; 0xffffffec
   14548:	add	r3, r2, r3
   1454c:	mov	r2, #92	; 0x5c
   14550:	strb	r2, [r3]
   14554:	ldr	r3, [fp, #-20]	; 0xffffffec
   14558:	add	r3, r3, #1
   1455c:	str	r3, [fp, #-20]	; 0xffffffec
   14560:	ldr	r2, [fp, #-20]	; 0xffffffec
   14564:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14568:	cmp	r2, r3
   1456c:	bcs	14594 <__assert_fail@plt+0x3388>
   14570:	ldrb	r3, [fp, #-38]	; 0xffffffda
   14574:	lsr	r3, r3, #6
   14578:	uxtb	r2, r3
   1457c:	ldr	r1, [fp, #-88]	; 0xffffffa8
   14580:	ldr	r3, [fp, #-20]	; 0xffffffec
   14584:	add	r3, r1, r3
   14588:	add	r2, r2, #48	; 0x30
   1458c:	uxtb	r2, r2
   14590:	strb	r2, [r3]
   14594:	ldr	r3, [fp, #-20]	; 0xffffffec
   14598:	add	r3, r3, #1
   1459c:	str	r3, [fp, #-20]	; 0xffffffec
   145a0:	ldr	r2, [fp, #-20]	; 0xffffffec
   145a4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   145a8:	cmp	r2, r3
   145ac:	bcs	145dc <__assert_fail@plt+0x33d0>
   145b0:	ldrb	r3, [fp, #-38]	; 0xffffffda
   145b4:	lsr	r3, r3, #3
   145b8:	uxtb	r3, r3
   145bc:	and	r3, r3, #7
   145c0:	uxtb	r2, r3
   145c4:	ldr	r1, [fp, #-88]	; 0xffffffa8
   145c8:	ldr	r3, [fp, #-20]	; 0xffffffec
   145cc:	add	r3, r1, r3
   145d0:	add	r2, r2, #48	; 0x30
   145d4:	uxtb	r2, r2
   145d8:	strb	r2, [r3]
   145dc:	ldr	r3, [fp, #-20]	; 0xffffffec
   145e0:	add	r3, r3, #1
   145e4:	str	r3, [fp, #-20]	; 0xffffffec
   145e8:	ldrb	r3, [fp, #-38]	; 0xffffffda
   145ec:	and	r3, r3, #7
   145f0:	uxtb	r3, r3
   145f4:	add	r3, r3, #48	; 0x30
   145f8:	strb	r3, [fp, #-38]	; 0xffffffda
   145fc:	b	14644 <__assert_fail@plt+0x3438>
   14600:	ldrb	r3, [fp, #-40]	; 0xffffffd8
   14604:	cmp	r3, #0
   14608:	beq	14644 <__assert_fail@plt+0x3438>
   1460c:	ldr	r2, [fp, #-20]	; 0xffffffec
   14610:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14614:	cmp	r2, r3
   14618:	bcs	14630 <__assert_fail@plt+0x3424>
   1461c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   14620:	ldr	r3, [fp, #-20]	; 0xffffffec
   14624:	add	r3, r2, r3
   14628:	mov	r2, #92	; 0x5c
   1462c:	strb	r2, [r3]
   14630:	ldr	r3, [fp, #-20]	; 0xffffffec
   14634:	add	r3, r3, #1
   14638:	str	r3, [fp, #-20]	; 0xffffffec
   1463c:	mov	r3, #0
   14640:	strb	r3, [fp, #-40]	; 0xffffffd8
   14644:	ldr	r3, [fp, #-16]
   14648:	add	r3, r3, #1
   1464c:	ldr	r2, [fp, #-68]	; 0xffffffbc
   14650:	cmp	r2, r3
   14654:	bls	14734 <__assert_fail@plt+0x3528>
   14658:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   1465c:	cmp	r3, #0
   14660:	beq	146e0 <__assert_fail@plt+0x34d4>
   14664:	ldrb	r3, [fp, #-41]	; 0xffffffd7
   14668:	eor	r3, r3, #1
   1466c:	uxtb	r3, r3
   14670:	cmp	r3, #0
   14674:	beq	146e0 <__assert_fail@plt+0x34d4>
   14678:	ldr	r2, [fp, #-20]	; 0xffffffec
   1467c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14680:	cmp	r2, r3
   14684:	bcs	1469c <__assert_fail@plt+0x3490>
   14688:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1468c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14690:	add	r3, r2, r3
   14694:	mov	r2, #39	; 0x27
   14698:	strb	r2, [r3]
   1469c:	ldr	r3, [fp, #-20]	; 0xffffffec
   146a0:	add	r3, r3, #1
   146a4:	str	r3, [fp, #-20]	; 0xffffffec
   146a8:	ldr	r2, [fp, #-20]	; 0xffffffec
   146ac:	ldr	r3, [fp, #-92]	; 0xffffffa4
   146b0:	cmp	r2, r3
   146b4:	bcs	146cc <__assert_fail@plt+0x34c0>
   146b8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   146bc:	ldr	r3, [fp, #-20]	; 0xffffffec
   146c0:	add	r3, r2, r3
   146c4:	mov	r2, #39	; 0x27
   146c8:	strb	r2, [r3]
   146cc:	ldr	r3, [fp, #-20]	; 0xffffffec
   146d0:	add	r3, r3, #1
   146d4:	str	r3, [fp, #-20]	; 0xffffffec
   146d8:	mov	r3, #0
   146dc:	strb	r3, [fp, #-35]	; 0xffffffdd
   146e0:	ldr	r2, [fp, #-20]	; 0xffffffec
   146e4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   146e8:	cmp	r2, r3
   146ec:	bcs	14704 <__assert_fail@plt+0x34f8>
   146f0:	ldr	r2, [fp, #-88]	; 0xffffffa8
   146f4:	ldr	r3, [fp, #-20]	; 0xffffffec
   146f8:	add	r3, r2, r3
   146fc:	ldrb	r2, [fp, #-38]	; 0xffffffda
   14700:	strb	r2, [r3]
   14704:	ldr	r3, [fp, #-20]	; 0xffffffec
   14708:	add	r3, r3, #1
   1470c:	str	r3, [fp, #-20]	; 0xffffffec
   14710:	ldr	r3, [fp, #-16]
   14714:	add	r3, r3, #1
   14718:	str	r3, [fp, #-16]
   1471c:	ldr	r2, [fp, #-96]	; 0xffffffa0
   14720:	ldr	r3, [fp, #-16]
   14724:	add	r3, r2, r3
   14728:	ldrb	r3, [r3]
   1472c:	strb	r3, [fp, #-38]	; 0xffffffda
   14730:	b	14444 <__assert_fail@plt+0x3238>
   14734:	nop	{0}
   14738:	b	14910 <__assert_fail@plt+0x3704>
   1473c:	nop	{0}
   14740:	b	14770 <__assert_fail@plt+0x3564>
   14744:	nop	{0}
   14748:	b	14770 <__assert_fail@plt+0x3564>
   1474c:	nop	{0}
   14750:	b	14770 <__assert_fail@plt+0x3564>
   14754:	nop	{0}
   14758:	b	14770 <__assert_fail@plt+0x3564>
   1475c:	nop	{0}
   14760:	b	14770 <__assert_fail@plt+0x3564>
   14764:	nop	{0}
   14768:	b	14770 <__assert_fail@plt+0x3564>
   1476c:	nop	{0}
   14770:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   14774:	eor	r3, r3, #1
   14778:	uxtb	r3, r3
   1477c:	cmp	r3, #0
   14780:	bne	14790 <__assert_fail@plt+0x3584>
   14784:	ldr	r3, [fp, #4]
   14788:	cmp	r3, #2
   1478c:	bne	147a4 <__assert_fail@plt+0x3598>
   14790:	ldrb	r3, [fp, #-34]	; 0xffffffde
   14794:	eor	r3, r3, #1
   14798:	uxtb	r3, r3
   1479c:	cmp	r3, #0
   147a0:	bne	147e4 <__assert_fail@plt+0x35d8>
   147a4:	ldr	r3, [fp, #12]
   147a8:	cmp	r3, #0
   147ac:	beq	147e4 <__assert_fail@plt+0x35d8>
   147b0:	ldrb	r3, [fp, #-38]	; 0xffffffda
   147b4:	lsr	r3, r3, #5
   147b8:	uxtb	r3, r3
   147bc:	lsl	r3, r3, #2
   147c0:	ldr	r2, [fp, #12]
   147c4:	add	r3, r2, r3
   147c8:	ldr	r2, [r3]
   147cc:	ldrb	r3, [fp, #-38]	; 0xffffffda
   147d0:	and	r3, r3, #31
   147d4:	lsr	r3, r2, r3
   147d8:	and	r3, r3, #1
   147dc:	cmp	r3, #0
   147e0:	bne	147f8 <__assert_fail@plt+0x35ec>
   147e4:	ldrb	r3, [fp, #-40]	; 0xffffffd8
   147e8:	eor	r3, r3, #1
   147ec:	uxtb	r3, r3
   147f0:	cmp	r3, #0
   147f4:	bne	1490c <__assert_fail@plt+0x3700>
   147f8:	nop	{0}
   147fc:	ldrb	r3, [fp, #-34]	; 0xffffffde
   14800:	cmp	r3, #0
   14804:	bne	14bdc <__assert_fail@plt+0x39d0>
   14808:	mov	r3, #1
   1480c:	strb	r3, [fp, #-41]	; 0xffffffd7
   14810:	ldr	r3, [fp, #4]
   14814:	cmp	r3, #2
   14818:	bne	148c8 <__assert_fail@plt+0x36bc>
   1481c:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   14820:	eor	r3, r3, #1
   14824:	uxtb	r3, r3
   14828:	cmp	r3, #0
   1482c:	beq	148c8 <__assert_fail@plt+0x36bc>
   14830:	ldr	r2, [fp, #-20]	; 0xffffffec
   14834:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14838:	cmp	r2, r3
   1483c:	bcs	14854 <__assert_fail@plt+0x3648>
   14840:	ldr	r2, [fp, #-88]	; 0xffffffa8
   14844:	ldr	r3, [fp, #-20]	; 0xffffffec
   14848:	add	r3, r2, r3
   1484c:	mov	r2, #39	; 0x27
   14850:	strb	r2, [r3]
   14854:	ldr	r3, [fp, #-20]	; 0xffffffec
   14858:	add	r3, r3, #1
   1485c:	str	r3, [fp, #-20]	; 0xffffffec
   14860:	ldr	r2, [fp, #-20]	; 0xffffffec
   14864:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14868:	cmp	r2, r3
   1486c:	bcs	14884 <__assert_fail@plt+0x3678>
   14870:	ldr	r2, [fp, #-88]	; 0xffffffa8
   14874:	ldr	r3, [fp, #-20]	; 0xffffffec
   14878:	add	r3, r2, r3
   1487c:	mov	r2, #36	; 0x24
   14880:	strb	r2, [r3]
   14884:	ldr	r3, [fp, #-20]	; 0xffffffec
   14888:	add	r3, r3, #1
   1488c:	str	r3, [fp, #-20]	; 0xffffffec
   14890:	ldr	r2, [fp, #-20]	; 0xffffffec
   14894:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14898:	cmp	r2, r3
   1489c:	bcs	148b4 <__assert_fail@plt+0x36a8>
   148a0:	ldr	r2, [fp, #-88]	; 0xffffffa8
   148a4:	ldr	r3, [fp, #-20]	; 0xffffffec
   148a8:	add	r3, r2, r3
   148ac:	mov	r2, #39	; 0x27
   148b0:	strb	r2, [r3]
   148b4:	ldr	r3, [fp, #-20]	; 0xffffffec
   148b8:	add	r3, r3, #1
   148bc:	str	r3, [fp, #-20]	; 0xffffffec
   148c0:	mov	r3, #1
   148c4:	strb	r3, [fp, #-35]	; 0xffffffdd
   148c8:	ldr	r2, [fp, #-20]	; 0xffffffec
   148cc:	ldr	r3, [fp, #-92]	; 0xffffffa4
   148d0:	cmp	r2, r3
   148d4:	bcs	148ec <__assert_fail@plt+0x36e0>
   148d8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   148dc:	ldr	r3, [fp, #-20]	; 0xffffffec
   148e0:	add	r3, r2, r3
   148e4:	mov	r2, #92	; 0x5c
   148e8:	strb	r2, [r3]
   148ec:	ldr	r3, [fp, #-20]	; 0xffffffec
   148f0:	add	r3, r3, #1
   148f4:	str	r3, [fp, #-20]	; 0xffffffec
   148f8:	b	14910 <__assert_fail@plt+0x3704>
   148fc:	nop	{0}
   14900:	b	14910 <__assert_fail@plt+0x3704>
   14904:	nop	{0}
   14908:	b	14910 <__assert_fail@plt+0x3704>
   1490c:	nop	{0}
   14910:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   14914:	cmp	r3, #0
   14918:	beq	14998 <__assert_fail@plt+0x378c>
   1491c:	ldrb	r3, [fp, #-41]	; 0xffffffd7
   14920:	eor	r3, r3, #1
   14924:	uxtb	r3, r3
   14928:	cmp	r3, #0
   1492c:	beq	14998 <__assert_fail@plt+0x378c>
   14930:	ldr	r2, [fp, #-20]	; 0xffffffec
   14934:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14938:	cmp	r2, r3
   1493c:	bcs	14954 <__assert_fail@plt+0x3748>
   14940:	ldr	r2, [fp, #-88]	; 0xffffffa8
   14944:	ldr	r3, [fp, #-20]	; 0xffffffec
   14948:	add	r3, r2, r3
   1494c:	mov	r2, #39	; 0x27
   14950:	strb	r2, [r3]
   14954:	ldr	r3, [fp, #-20]	; 0xffffffec
   14958:	add	r3, r3, #1
   1495c:	str	r3, [fp, #-20]	; 0xffffffec
   14960:	ldr	r2, [fp, #-20]	; 0xffffffec
   14964:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14968:	cmp	r2, r3
   1496c:	bcs	14984 <__assert_fail@plt+0x3778>
   14970:	ldr	r2, [fp, #-88]	; 0xffffffa8
   14974:	ldr	r3, [fp, #-20]	; 0xffffffec
   14978:	add	r3, r2, r3
   1497c:	mov	r2, #39	; 0x27
   14980:	strb	r2, [r3]
   14984:	ldr	r3, [fp, #-20]	; 0xffffffec
   14988:	add	r3, r3, #1
   1498c:	str	r3, [fp, #-20]	; 0xffffffec
   14990:	mov	r3, #0
   14994:	strb	r3, [fp, #-35]	; 0xffffffdd
   14998:	ldr	r2, [fp, #-20]	; 0xffffffec
   1499c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   149a0:	cmp	r2, r3
   149a4:	bcs	149bc <__assert_fail@plt+0x37b0>
   149a8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   149ac:	ldr	r3, [fp, #-20]	; 0xffffffec
   149b0:	add	r3, r2, r3
   149b4:	ldrb	r2, [fp, #-38]	; 0xffffffda
   149b8:	strb	r2, [r3]
   149bc:	ldr	r3, [fp, #-20]	; 0xffffffec
   149c0:	add	r3, r3, #1
   149c4:	str	r3, [fp, #-20]	; 0xffffffec
   149c8:	ldrb	r3, [fp, #-42]	; 0xffffffd6
   149cc:	eor	r3, r3, #1
   149d0:	uxtb	r3, r3
   149d4:	cmp	r3, #0
   149d8:	beq	149e4 <__assert_fail@plt+0x37d8>
   149dc:	mov	r3, #0
   149e0:	strb	r3, [fp, #-37]	; 0xffffffdb
   149e4:	ldr	r3, [fp, #-16]
   149e8:	add	r3, r3, #1
   149ec:	str	r3, [fp, #-16]
   149f0:	ldr	r3, [fp, #-100]	; 0xffffff9c
   149f4:	cmn	r3, #1
   149f8:	bne	14a20 <__assert_fail@plt+0x3814>
   149fc:	ldr	r2, [fp, #-96]	; 0xffffffa0
   14a00:	ldr	r3, [fp, #-16]
   14a04:	add	r3, r2, r3
   14a08:	ldrb	r3, [r3]
   14a0c:	cmp	r3, #0
   14a10:	movne	r3, #1
   14a14:	moveq	r3, #0
   14a18:	uxtb	r3, r3
   14a1c:	b	14a38 <__assert_fail@plt+0x382c>
   14a20:	ldr	r2, [fp, #-16]
   14a24:	ldr	r3, [fp, #-100]	; 0xffffff9c
   14a28:	cmp	r2, r3
   14a2c:	movne	r3, #1
   14a30:	moveq	r3, #0
   14a34:	uxtb	r3, r3
   14a38:	cmp	r3, #0
   14a3c:	bne	13858 <__assert_fail@plt+0x264c>
   14a40:	ldr	r3, [fp, #-20]	; 0xffffffec
   14a44:	cmp	r3, #0
   14a48:	bne	14a64 <__assert_fail@plt+0x3858>
   14a4c:	ldr	r3, [fp, #4]
   14a50:	cmp	r3, #2
   14a54:	bne	14a64 <__assert_fail@plt+0x3858>
   14a58:	ldrb	r3, [fp, #-34]	; 0xffffffde
   14a5c:	cmp	r3, #0
   14a60:	bne	14be4 <__assert_fail@plt+0x39d8>
   14a64:	ldr	r3, [fp, #4]
   14a68:	cmp	r3, #2
   14a6c:	bne	14b0c <__assert_fail@plt+0x3900>
   14a70:	ldrb	r3, [fp, #-34]	; 0xffffffde
   14a74:	eor	r3, r3, #1
   14a78:	uxtb	r3, r3
   14a7c:	cmp	r3, #0
   14a80:	beq	14b0c <__assert_fail@plt+0x3900>
   14a84:	ldrb	r3, [fp, #-36]	; 0xffffffdc
   14a88:	cmp	r3, #0
   14a8c:	beq	14b0c <__assert_fail@plt+0x3900>
   14a90:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   14a94:	cmp	r3, #0
   14a98:	beq	14ae0 <__assert_fail@plt+0x38d4>
   14a9c:	ldr	r3, [fp, #20]
   14aa0:	str	r3, [sp, #16]
   14aa4:	ldr	r3, [fp, #16]
   14aa8:	str	r3, [sp, #12]
   14aac:	ldr	r3, [fp, #12]
   14ab0:	str	r3, [sp, #8]
   14ab4:	ldr	r3, [fp, #8]
   14ab8:	str	r3, [sp, #4]
   14abc:	mov	r3, #5
   14ac0:	str	r3, [sp]
   14ac4:	ldr	r3, [fp, #-100]	; 0xffffff9c
   14ac8:	ldr	r2, [fp, #-96]	; 0xffffffa0
   14acc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14ad0:	ldr	r0, [fp, #-88]	; 0xffffffa8
   14ad4:	bl	13590 <__assert_fail@plt+0x2384>
   14ad8:	mov	r3, r0
   14adc:	b	14c4c <__assert_fail@plt+0x3a40>
   14ae0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14ae4:	cmp	r3, #0
   14ae8:	bne	14b0c <__assert_fail@plt+0x3900>
   14aec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14af0:	cmp	r3, #0
   14af4:	beq	14b0c <__assert_fail@plt+0x3900>
   14af8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14afc:	str	r3, [fp, #-92]	; 0xffffffa4
   14b00:	mov	r3, #0
   14b04:	str	r3, [fp, #-20]	; 0xffffffec
   14b08:	b	13624 <__assert_fail@plt+0x2418>
   14b0c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14b10:	cmp	r3, #0
   14b14:	beq	14b80 <__assert_fail@plt+0x3974>
   14b18:	ldrb	r3, [fp, #-34]	; 0xffffffde
   14b1c:	eor	r3, r3, #1
   14b20:	uxtb	r3, r3
   14b24:	cmp	r3, #0
   14b28:	beq	14b80 <__assert_fail@plt+0x3974>
   14b2c:	b	14b70 <__assert_fail@plt+0x3964>
   14b30:	ldr	r2, [fp, #-20]	; 0xffffffec
   14b34:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14b38:	cmp	r2, r3
   14b3c:	bcs	14b58 <__assert_fail@plt+0x394c>
   14b40:	ldr	r2, [fp, #-88]	; 0xffffffa8
   14b44:	ldr	r3, [fp, #-20]	; 0xffffffec
   14b48:	add	r3, r2, r3
   14b4c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   14b50:	ldrb	r2, [r2]
   14b54:	strb	r2, [r3]
   14b58:	ldr	r3, [fp, #-20]	; 0xffffffec
   14b5c:	add	r3, r3, #1
   14b60:	str	r3, [fp, #-20]	; 0xffffffec
   14b64:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14b68:	add	r3, r3, #1
   14b6c:	str	r3, [fp, #-28]	; 0xffffffe4
   14b70:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14b74:	ldrb	r3, [r3]
   14b78:	cmp	r3, #0
   14b7c:	bne	14b30 <__assert_fail@plt+0x3924>
   14b80:	ldr	r2, [fp, #-20]	; 0xffffffec
   14b84:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14b88:	cmp	r2, r3
   14b8c:	bcs	14ba4 <__assert_fail@plt+0x3998>
   14b90:	ldr	r2, [fp, #-88]	; 0xffffffa8
   14b94:	ldr	r3, [fp, #-20]	; 0xffffffec
   14b98:	add	r3, r2, r3
   14b9c:	mov	r2, #0
   14ba0:	strb	r2, [r3]
   14ba4:	ldr	r3, [fp, #-20]	; 0xffffffec
   14ba8:	b	14c4c <__assert_fail@plt+0x3a40>
   14bac:	nop	{0}
   14bb0:	b	14be8 <__assert_fail@plt+0x39dc>
   14bb4:	nop	{0}
   14bb8:	b	14be8 <__assert_fail@plt+0x39dc>
   14bbc:	nop	{0}
   14bc0:	b	14be8 <__assert_fail@plt+0x39dc>
   14bc4:	nop	{0}
   14bc8:	b	14be8 <__assert_fail@plt+0x39dc>
   14bcc:	nop	{0}
   14bd0:	b	14be8 <__assert_fail@plt+0x39dc>
   14bd4:	nop	{0}
   14bd8:	b	14be8 <__assert_fail@plt+0x39dc>
   14bdc:	nop	{0}
   14be0:	b	14be8 <__assert_fail@plt+0x39dc>
   14be4:	nop	{0}
   14be8:	ldr	r3, [fp, #4]
   14bec:	cmp	r3, #2
   14bf0:	bne	14c08 <__assert_fail@plt+0x39fc>
   14bf4:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   14bf8:	cmp	r3, #0
   14bfc:	beq	14c08 <__assert_fail@plt+0x39fc>
   14c00:	mov	r3, #4
   14c04:	str	r3, [fp, #4]
   14c08:	ldr	r3, [fp, #8]
   14c0c:	bic	r3, r3, #2
   14c10:	ldr	r2, [fp, #20]
   14c14:	str	r2, [sp, #16]
   14c18:	ldr	r2, [fp, #16]
   14c1c:	str	r2, [sp, #12]
   14c20:	mov	r2, #0
   14c24:	str	r2, [sp, #8]
   14c28:	str	r3, [sp, #4]
   14c2c:	ldr	r3, [fp, #4]
   14c30:	str	r3, [sp]
   14c34:	ldr	r3, [fp, #-100]	; 0xffffff9c
   14c38:	ldr	r2, [fp, #-96]	; 0xffffffa0
   14c3c:	ldr	r1, [fp, #-92]	; 0xffffffa4
   14c40:	ldr	r0, [fp, #-88]	; 0xffffffa8
   14c44:	bl	13590 <__assert_fail@plt+0x2384>
   14c48:	mov	r3, r0
   14c4c:	mov	r0, r3
   14c50:	sub	sp, fp, #8
   14c54:	ldr	r4, [sp]
   14c58:	ldr	fp, [sp, #4]
   14c5c:	add	sp, sp, #8
   14c60:	pop	{pc}		; (ldr pc, [sp], #4)
   14c64:	str	fp, [sp, #-8]!
   14c68:	str	lr, [sp, #4]
   14c6c:	add	fp, sp, #4
   14c70:	sub	sp, sp, #56	; 0x38
   14c74:	str	r0, [fp, #-24]	; 0xffffffe8
   14c78:	str	r1, [fp, #-28]	; 0xffffffe4
   14c7c:	str	r2, [fp, #-32]	; 0xffffffe0
   14c80:	str	r3, [fp, #-36]	; 0xffffffdc
   14c84:	ldr	r3, [fp, #4]
   14c88:	cmp	r3, #0
   14c8c:	beq	14c98 <__assert_fail@plt+0x3a8c>
   14c90:	ldr	r3, [fp, #4]
   14c94:	b	14ca0 <__assert_fail@plt+0x3a94>
   14c98:	movw	r3, #45572	; 0xb204
   14c9c:	movt	r3, #2
   14ca0:	str	r3, [fp, #-8]
   14ca4:	bl	11110 <__errno_location@plt>
   14ca8:	mov	r3, r0
   14cac:	ldr	r3, [r3]
   14cb0:	str	r3, [fp, #-12]
   14cb4:	ldr	r3, [fp, #-8]
   14cb8:	ldr	r3, [r3]
   14cbc:	ldr	r2, [fp, #-8]
   14cc0:	ldr	r2, [r2, #4]
   14cc4:	ldr	r1, [fp, #-8]
   14cc8:	add	r1, r1, #8
   14ccc:	ldr	r0, [fp, #-8]
   14cd0:	ldr	r0, [r0, #40]	; 0x28
   14cd4:	ldr	ip, [fp, #-8]
   14cd8:	ldr	ip, [ip, #44]	; 0x2c
   14cdc:	str	ip, [sp, #16]
   14ce0:	str	r0, [sp, #12]
   14ce4:	str	r1, [sp, #8]
   14ce8:	str	r2, [sp, #4]
   14cec:	str	r3, [sp]
   14cf0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14cf4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14cf8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14cfc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14d00:	bl	13590 <__assert_fail@plt+0x2384>
   14d04:	str	r0, [fp, #-16]
   14d08:	bl	11110 <__errno_location@plt>
   14d0c:	mov	r2, r0
   14d10:	ldr	r3, [fp, #-12]
   14d14:	str	r3, [r2]
   14d18:	ldr	r3, [fp, #-16]
   14d1c:	mov	r0, r3
   14d20:	sub	sp, fp, #4
   14d24:	ldr	fp, [sp]
   14d28:	add	sp, sp, #4
   14d2c:	pop	{pc}		; (ldr pc, [sp], #4)
   14d30:	str	fp, [sp, #-8]!
   14d34:	str	lr, [sp, #4]
   14d38:	add	fp, sp, #4
   14d3c:	sub	sp, sp, #16
   14d40:	str	r0, [fp, #-8]
   14d44:	str	r1, [fp, #-12]
   14d48:	str	r2, [fp, #-16]
   14d4c:	ldr	r3, [fp, #-16]
   14d50:	mov	r2, #0
   14d54:	ldr	r1, [fp, #-12]
   14d58:	ldr	r0, [fp, #-8]
   14d5c:	bl	14d78 <__assert_fail@plt+0x3b6c>
   14d60:	mov	r3, r0
   14d64:	mov	r0, r3
   14d68:	sub	sp, fp, #4
   14d6c:	ldr	fp, [sp]
   14d70:	add	sp, sp, #4
   14d74:	pop	{pc}		; (ldr pc, [sp], #4)
   14d78:	str	fp, [sp, #-8]!
   14d7c:	str	lr, [sp, #4]
   14d80:	add	fp, sp, #4
   14d84:	sub	sp, sp, #64	; 0x40
   14d88:	str	r0, [fp, #-32]	; 0xffffffe0
   14d8c:	str	r1, [fp, #-36]	; 0xffffffdc
   14d90:	str	r2, [fp, #-40]	; 0xffffffd8
   14d94:	str	r3, [fp, #-44]	; 0xffffffd4
   14d98:	ldr	r3, [fp, #-44]	; 0xffffffd4
   14d9c:	cmp	r3, #0
   14da0:	beq	14dac <__assert_fail@plt+0x3ba0>
   14da4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   14da8:	b	14db4 <__assert_fail@plt+0x3ba8>
   14dac:	movw	r3, #45572	; 0xb204
   14db0:	movt	r3, #2
   14db4:	str	r3, [fp, #-8]
   14db8:	bl	11110 <__errno_location@plt>
   14dbc:	mov	r3, r0
   14dc0:	ldr	r3, [r3]
   14dc4:	str	r3, [fp, #-12]
   14dc8:	ldr	r3, [fp, #-8]
   14dcc:	ldr	r3, [r3, #4]
   14dd0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   14dd4:	cmp	r2, #0
   14dd8:	moveq	r2, #1
   14ddc:	movne	r2, #0
   14de0:	uxtb	r2, r2
   14de4:	orr	r3, r3, r2
   14de8:	str	r3, [fp, #-16]
   14dec:	ldr	r3, [fp, #-8]
   14df0:	ldr	r3, [r3]
   14df4:	ldr	r2, [fp, #-8]
   14df8:	add	r2, r2, #8
   14dfc:	ldr	r1, [fp, #-8]
   14e00:	ldr	r1, [r1, #40]	; 0x28
   14e04:	ldr	r0, [fp, #-8]
   14e08:	ldr	r0, [r0, #44]	; 0x2c
   14e0c:	str	r0, [sp, #16]
   14e10:	str	r1, [sp, #12]
   14e14:	str	r2, [sp, #8]
   14e18:	ldr	r2, [fp, #-16]
   14e1c:	str	r2, [sp, #4]
   14e20:	str	r3, [sp]
   14e24:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14e28:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14e2c:	mov	r1, #0
   14e30:	mov	r0, #0
   14e34:	bl	13590 <__assert_fail@plt+0x2384>
   14e38:	mov	r3, r0
   14e3c:	add	r3, r3, #1
   14e40:	str	r3, [fp, #-20]	; 0xffffffec
   14e44:	ldr	r0, [fp, #-20]	; 0xffffffec
   14e48:	bl	167c0 <__assert_fail@plt+0x55b4>
   14e4c:	mov	r3, r0
   14e50:	str	r3, [fp, #-24]	; 0xffffffe8
   14e54:	ldr	r3, [fp, #-8]
   14e58:	ldr	r3, [r3]
   14e5c:	ldr	r2, [fp, #-8]
   14e60:	add	r2, r2, #8
   14e64:	ldr	r1, [fp, #-8]
   14e68:	ldr	r1, [r1, #40]	; 0x28
   14e6c:	ldr	r0, [fp, #-8]
   14e70:	ldr	r0, [r0, #44]	; 0x2c
   14e74:	str	r0, [sp, #16]
   14e78:	str	r1, [sp, #12]
   14e7c:	str	r2, [sp, #8]
   14e80:	ldr	r2, [fp, #-16]
   14e84:	str	r2, [sp, #4]
   14e88:	str	r3, [sp]
   14e8c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14e90:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14e94:	ldr	r1, [fp, #-20]	; 0xffffffec
   14e98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14e9c:	bl	13590 <__assert_fail@plt+0x2384>
   14ea0:	bl	11110 <__errno_location@plt>
   14ea4:	mov	r2, r0
   14ea8:	ldr	r3, [fp, #-12]
   14eac:	str	r3, [r2]
   14eb0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   14eb4:	cmp	r3, #0
   14eb8:	beq	14ecc <__assert_fail@plt+0x3cc0>
   14ebc:	ldr	r3, [fp, #-20]	; 0xffffffec
   14ec0:	sub	r2, r3, #1
   14ec4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   14ec8:	str	r2, [r3]
   14ecc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14ed0:	mov	r0, r3
   14ed4:	sub	sp, fp, #4
   14ed8:	ldr	fp, [sp]
   14edc:	add	sp, sp, #4
   14ee0:	pop	{pc}		; (ldr pc, [sp], #4)
   14ee4:	str	fp, [sp, #-8]!
   14ee8:	str	lr, [sp, #4]
   14eec:	add	fp, sp, #4
   14ef0:	sub	sp, sp, #8
   14ef4:	movw	r3, #45364	; 0xb134
   14ef8:	movt	r3, #2
   14efc:	ldr	r3, [r3]
   14f00:	str	r3, [fp, #-12]
   14f04:	mov	r3, #1
   14f08:	str	r3, [fp, #-8]
   14f0c:	b	14f38 <__assert_fail@plt+0x3d2c>
   14f10:	ldr	r3, [fp, #-8]
   14f14:	lsl	r3, r3, #3
   14f18:	ldr	r2, [fp, #-12]
   14f1c:	add	r3, r2, r3
   14f20:	ldr	r3, [r3, #4]
   14f24:	mov	r0, r3
   14f28:	bl	12edc <__assert_fail@plt+0x1cd0>
   14f2c:	ldr	r3, [fp, #-8]
   14f30:	add	r3, r3, #1
   14f34:	str	r3, [fp, #-8]
   14f38:	movw	r3, #45352	; 0xb128
   14f3c:	movt	r3, #2
   14f40:	ldr	r3, [r3]
   14f44:	ldr	r2, [fp, #-8]
   14f48:	cmp	r2, r3
   14f4c:	blt	14f10 <__assert_fail@plt+0x3d04>
   14f50:	ldr	r3, [fp, #-12]
   14f54:	ldr	r2, [r3, #4]
   14f58:	movw	r3, #45620	; 0xb234
   14f5c:	movt	r3, #2
   14f60:	cmp	r2, r3
   14f64:	beq	14f9c <__assert_fail@plt+0x3d90>
   14f68:	ldr	r3, [fp, #-12]
   14f6c:	ldr	r3, [r3, #4]
   14f70:	mov	r0, r3
   14f74:	bl	12edc <__assert_fail@plt+0x1cd0>
   14f78:	movw	r3, #45356	; 0xb12c
   14f7c:	movt	r3, #2
   14f80:	mov	r2, #256	; 0x100
   14f84:	str	r2, [r3]
   14f88:	movw	r3, #45356	; 0xb12c
   14f8c:	movt	r3, #2
   14f90:	movw	r2, #45620	; 0xb234
   14f94:	movt	r2, #2
   14f98:	str	r2, [r3, #4]
   14f9c:	ldr	r2, [fp, #-12]
   14fa0:	movw	r3, #45356	; 0xb12c
   14fa4:	movt	r3, #2
   14fa8:	cmp	r2, r3
   14fac:	beq	14fcc <__assert_fail@plt+0x3dc0>
   14fb0:	ldr	r0, [fp, #-12]
   14fb4:	bl	12edc <__assert_fail@plt+0x1cd0>
   14fb8:	movw	r3, #45364	; 0xb134
   14fbc:	movt	r3, #2
   14fc0:	movw	r2, #45356	; 0xb12c
   14fc4:	movt	r2, #2
   14fc8:	str	r2, [r3]
   14fcc:	movw	r3, #45352	; 0xb128
   14fd0:	movt	r3, #2
   14fd4:	mov	r2, #1
   14fd8:	str	r2, [r3]
   14fdc:	nop	{0}
   14fe0:	sub	sp, fp, #4
   14fe4:	ldr	fp, [sp]
   14fe8:	add	sp, sp, #4
   14fec:	pop	{pc}		; (ldr pc, [sp], #4)
   14ff0:	str	fp, [sp, #-8]!
   14ff4:	str	lr, [sp, #4]
   14ff8:	add	fp, sp, #4
   14ffc:	sub	sp, sp, #80	; 0x50
   15000:	str	r0, [fp, #-48]	; 0xffffffd0
   15004:	str	r1, [fp, #-52]	; 0xffffffcc
   15008:	str	r2, [fp, #-56]	; 0xffffffc8
   1500c:	str	r3, [fp, #-60]	; 0xffffffc4
   15010:	bl	11110 <__errno_location@plt>
   15014:	mov	r3, r0
   15018:	ldr	r3, [r3]
   1501c:	str	r3, [fp, #-16]
   15020:	movw	r3, #45364	; 0xb134
   15024:	movt	r3, #2
   15028:	ldr	r3, [r3]
   1502c:	str	r3, [fp, #-8]
   15030:	mvn	r3, #-2147483648	; 0x80000000
   15034:	str	r3, [fp, #-20]	; 0xffffffec
   15038:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1503c:	cmp	r3, #0
   15040:	blt	15054 <__assert_fail@plt+0x3e48>
   15044:	ldr	r2, [fp, #-48]	; 0xffffffd0
   15048:	ldr	r3, [fp, #-20]	; 0xffffffec
   1504c:	cmp	r2, r3
   15050:	blt	15058 <__assert_fail@plt+0x3e4c>
   15054:	bl	111dc <abort@plt>
   15058:	movw	r3, #45352	; 0xb128
   1505c:	movt	r3, #2
   15060:	ldr	r3, [r3]
   15064:	ldr	r2, [fp, #-48]	; 0xffffffd0
   15068:	cmp	r2, r3
   1506c:	blt	15164 <__assert_fail@plt+0x3f58>
   15070:	ldr	r2, [fp, #-8]
   15074:	movw	r3, #45356	; 0xb12c
   15078:	movt	r3, #2
   1507c:	cmp	r2, r3
   15080:	moveq	r3, #1
   15084:	movne	r3, #0
   15088:	strb	r3, [fp, #-21]	; 0xffffffeb
   1508c:	movw	r3, #45352	; 0xb128
   15090:	movt	r3, #2
   15094:	ldr	r3, [r3]
   15098:	str	r3, [fp, #-40]	; 0xffffffd8
   1509c:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   150a0:	cmp	r3, #0
   150a4:	beq	150b0 <__assert_fail@plt+0x3ea4>
   150a8:	mov	r0, #0
   150ac:	b	150b4 <__assert_fail@plt+0x3ea8>
   150b0:	ldr	r0, [fp, #-8]
   150b4:	movw	r3, #45352	; 0xb128
   150b8:	movt	r3, #2
   150bc:	ldr	r3, [r3]
   150c0:	ldr	r2, [fp, #-48]	; 0xffffffd0
   150c4:	sub	r3, r2, r3
   150c8:	add	r2, r3, #1
   150cc:	sub	r1, fp, #40	; 0x28
   150d0:	mov	r3, #8
   150d4:	str	r3, [sp]
   150d8:	ldr	r3, [fp, #-20]	; 0xffffffec
   150dc:	bl	16b20 <__assert_fail@plt+0x5914>
   150e0:	str	r0, [fp, #-8]
   150e4:	movw	r3, #45364	; 0xb134
   150e8:	movt	r3, #2
   150ec:	ldr	r2, [fp, #-8]
   150f0:	str	r2, [r3]
   150f4:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   150f8:	cmp	r3, #0
   150fc:	beq	15118 <__assert_fail@plt+0x3f0c>
   15100:	ldr	r2, [fp, #-8]
   15104:	movw	r3, #45356	; 0xb12c
   15108:	movt	r3, #2
   1510c:	mov	r1, r2
   15110:	ldrd	r2, [r3]
   15114:	strd	r2, [r1]
   15118:	movw	r3, #45352	; 0xb128
   1511c:	movt	r3, #2
   15120:	ldr	r3, [r3]
   15124:	lsl	r3, r3, #3
   15128:	ldr	r2, [fp, #-8]
   1512c:	add	r0, r2, r3
   15130:	ldr	r2, [fp, #-40]	; 0xffffffd8
   15134:	movw	r3, #45352	; 0xb128
   15138:	movt	r3, #2
   1513c:	ldr	r3, [r3]
   15140:	sub	r3, r2, r3
   15144:	lsl	r3, r3, #3
   15148:	mov	r2, r3
   1514c:	mov	r1, #0
   15150:	bl	11140 <memset@plt>
   15154:	ldr	r2, [fp, #-40]	; 0xffffffd8
   15158:	movw	r3, #45352	; 0xb128
   1515c:	movt	r3, #2
   15160:	str	r2, [r3]
   15164:	ldr	r3, [fp, #-48]	; 0xffffffd0
   15168:	lsl	r3, r3, #3
   1516c:	ldr	r2, [fp, #-8]
   15170:	add	r3, r2, r3
   15174:	ldr	r3, [r3]
   15178:	str	r3, [fp, #-28]	; 0xffffffe4
   1517c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   15180:	lsl	r3, r3, #3
   15184:	ldr	r2, [fp, #-8]
   15188:	add	r3, r2, r3
   1518c:	ldr	r3, [r3, #4]
   15190:	str	r3, [fp, #-12]
   15194:	ldr	r3, [fp, #-60]	; 0xffffffc4
   15198:	ldr	r3, [r3, #4]
   1519c:	orr	r3, r3, #1
   151a0:	str	r3, [fp, #-32]	; 0xffffffe0
   151a4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   151a8:	ldr	r3, [r3]
   151ac:	ldr	r2, [fp, #-60]	; 0xffffffc4
   151b0:	add	r2, r2, #8
   151b4:	ldr	r1, [fp, #-60]	; 0xffffffc4
   151b8:	ldr	r1, [r1, #40]	; 0x28
   151bc:	ldr	r0, [fp, #-60]	; 0xffffffc4
   151c0:	ldr	r0, [r0, #44]	; 0x2c
   151c4:	str	r0, [sp, #16]
   151c8:	str	r1, [sp, #12]
   151cc:	str	r2, [sp, #8]
   151d0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   151d4:	str	r2, [sp, #4]
   151d8:	str	r3, [sp]
   151dc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   151e0:	ldr	r2, [fp, #-52]	; 0xffffffcc
   151e4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   151e8:	ldr	r0, [fp, #-12]
   151ec:	bl	13590 <__assert_fail@plt+0x2384>
   151f0:	str	r0, [fp, #-36]	; 0xffffffdc
   151f4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   151f8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   151fc:	cmp	r2, r3
   15200:	bhi	152b8 <__assert_fail@plt+0x40ac>
   15204:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15208:	add	r3, r3, #1
   1520c:	str	r3, [fp, #-28]	; 0xffffffe4
   15210:	ldr	r3, [fp, #-48]	; 0xffffffd0
   15214:	lsl	r3, r3, #3
   15218:	ldr	r2, [fp, #-8]
   1521c:	add	r3, r2, r3
   15220:	ldr	r2, [fp, #-28]	; 0xffffffe4
   15224:	str	r2, [r3]
   15228:	ldr	r2, [fp, #-12]
   1522c:	movw	r3, #45620	; 0xb234
   15230:	movt	r3, #2
   15234:	cmp	r2, r3
   15238:	beq	15244 <__assert_fail@plt+0x4038>
   1523c:	ldr	r0, [fp, #-12]
   15240:	bl	12edc <__assert_fail@plt+0x1cd0>
   15244:	ldr	r0, [fp, #-28]	; 0xffffffe4
   15248:	bl	167c0 <__assert_fail@plt+0x55b4>
   1524c:	mov	r3, r0
   15250:	str	r3, [fp, #-12]
   15254:	ldr	r3, [fp, #-48]	; 0xffffffd0
   15258:	lsl	r3, r3, #3
   1525c:	ldr	r2, [fp, #-8]
   15260:	add	r3, r2, r3
   15264:	ldr	r2, [fp, #-12]
   15268:	str	r2, [r3, #4]
   1526c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   15270:	ldr	r3, [r3]
   15274:	ldr	r2, [fp, #-60]	; 0xffffffc4
   15278:	add	r2, r2, #8
   1527c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   15280:	ldr	r1, [r1, #40]	; 0x28
   15284:	ldr	r0, [fp, #-60]	; 0xffffffc4
   15288:	ldr	r0, [r0, #44]	; 0x2c
   1528c:	str	r0, [sp, #16]
   15290:	str	r1, [sp, #12]
   15294:	str	r2, [sp, #8]
   15298:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1529c:	str	r2, [sp, #4]
   152a0:	str	r3, [sp]
   152a4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   152a8:	ldr	r2, [fp, #-52]	; 0xffffffcc
   152ac:	ldr	r1, [fp, #-28]	; 0xffffffe4
   152b0:	ldr	r0, [fp, #-12]
   152b4:	bl	13590 <__assert_fail@plt+0x2384>
   152b8:	bl	11110 <__errno_location@plt>
   152bc:	mov	r2, r0
   152c0:	ldr	r3, [fp, #-16]
   152c4:	str	r3, [r2]
   152c8:	ldr	r3, [fp, #-12]
   152cc:	mov	r0, r3
   152d0:	sub	sp, fp, #4
   152d4:	ldr	fp, [sp]
   152d8:	add	sp, sp, #4
   152dc:	pop	{pc}		; (ldr pc, [sp], #4)
   152e0:	str	fp, [sp, #-8]!
   152e4:	str	lr, [sp, #4]
   152e8:	add	fp, sp, #4
   152ec:	sub	sp, sp, #8
   152f0:	str	r0, [fp, #-8]
   152f4:	str	r1, [fp, #-12]
   152f8:	movw	r3, #45572	; 0xb204
   152fc:	movt	r3, #2
   15300:	mvn	r2, #0
   15304:	ldr	r1, [fp, #-12]
   15308:	ldr	r0, [fp, #-8]
   1530c:	bl	14ff0 <__assert_fail@plt+0x3de4>
   15310:	mov	r3, r0
   15314:	mov	r0, r3
   15318:	sub	sp, fp, #4
   1531c:	ldr	fp, [sp]
   15320:	add	sp, sp, #4
   15324:	pop	{pc}		; (ldr pc, [sp], #4)
   15328:	str	fp, [sp, #-8]!
   1532c:	str	lr, [sp, #4]
   15330:	add	fp, sp, #4
   15334:	sub	sp, sp, #16
   15338:	str	r0, [fp, #-8]
   1533c:	str	r1, [fp, #-12]
   15340:	str	r2, [fp, #-16]
   15344:	movw	r3, #45572	; 0xb204
   15348:	movt	r3, #2
   1534c:	ldr	r2, [fp, #-16]
   15350:	ldr	r1, [fp, #-12]
   15354:	ldr	r0, [fp, #-8]
   15358:	bl	14ff0 <__assert_fail@plt+0x3de4>
   1535c:	mov	r3, r0
   15360:	mov	r0, r3
   15364:	sub	sp, fp, #4
   15368:	ldr	fp, [sp]
   1536c:	add	sp, sp, #4
   15370:	pop	{pc}		; (ldr pc, [sp], #4)
   15374:	str	fp, [sp, #-8]!
   15378:	str	lr, [sp, #4]
   1537c:	add	fp, sp, #4
   15380:	sub	sp, sp, #8
   15384:	str	r0, [fp, #-8]
   15388:	ldr	r1, [fp, #-8]
   1538c:	mov	r0, #0
   15390:	bl	152e0 <__assert_fail@plt+0x40d4>
   15394:	mov	r3, r0
   15398:	mov	r0, r3
   1539c:	sub	sp, fp, #4
   153a0:	ldr	fp, [sp]
   153a4:	add	sp, sp, #4
   153a8:	pop	{pc}		; (ldr pc, [sp], #4)
   153ac:	str	fp, [sp, #-8]!
   153b0:	str	lr, [sp, #4]
   153b4:	add	fp, sp, #4
   153b8:	sub	sp, sp, #8
   153bc:	str	r0, [fp, #-8]
   153c0:	str	r1, [fp, #-12]
   153c4:	ldr	r2, [fp, #-12]
   153c8:	ldr	r1, [fp, #-8]
   153cc:	mov	r0, #0
   153d0:	bl	15328 <__assert_fail@plt+0x411c>
   153d4:	mov	r3, r0
   153d8:	mov	r0, r3
   153dc:	sub	sp, fp, #4
   153e0:	ldr	fp, [sp]
   153e4:	add	sp, sp, #4
   153e8:	pop	{pc}		; (ldr pc, [sp], #4)
   153ec:	str	fp, [sp, #-8]!
   153f0:	str	lr, [sp, #4]
   153f4:	add	fp, sp, #4
   153f8:	sub	sp, sp, #64	; 0x40
   153fc:	str	r0, [fp, #-56]	; 0xffffffc8
   15400:	str	r1, [fp, #-60]	; 0xffffffc4
   15404:	str	r2, [fp, #-64]	; 0xffffffc0
   15408:	sub	r3, fp, #52	; 0x34
   1540c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   15410:	mov	r0, r3
   15414:	bl	133ec <__assert_fail@plt+0x21e0>
   15418:	sub	r3, fp, #52	; 0x34
   1541c:	mvn	r2, #0
   15420:	ldr	r1, [fp, #-64]	; 0xffffffc0
   15424:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15428:	bl	14ff0 <__assert_fail@plt+0x3de4>
   1542c:	mov	r3, r0
   15430:	mov	r0, r3
   15434:	sub	sp, fp, #4
   15438:	ldr	fp, [sp]
   1543c:	add	sp, sp, #4
   15440:	pop	{pc}		; (ldr pc, [sp], #4)
   15444:	str	fp, [sp, #-8]!
   15448:	str	lr, [sp, #4]
   1544c:	add	fp, sp, #4
   15450:	sub	sp, sp, #64	; 0x40
   15454:	str	r0, [fp, #-56]	; 0xffffffc8
   15458:	str	r1, [fp, #-60]	; 0xffffffc4
   1545c:	str	r2, [fp, #-64]	; 0xffffffc0
   15460:	str	r3, [fp, #-68]	; 0xffffffbc
   15464:	sub	r3, fp, #52	; 0x34
   15468:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1546c:	mov	r0, r3
   15470:	bl	133ec <__assert_fail@plt+0x21e0>
   15474:	sub	r3, fp, #52	; 0x34
   15478:	ldr	r2, [fp, #-68]	; 0xffffffbc
   1547c:	ldr	r1, [fp, #-64]	; 0xffffffc0
   15480:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15484:	bl	14ff0 <__assert_fail@plt+0x3de4>
   15488:	mov	r3, r0
   1548c:	mov	r0, r3
   15490:	sub	sp, fp, #4
   15494:	ldr	fp, [sp]
   15498:	add	sp, sp, #4
   1549c:	pop	{pc}		; (ldr pc, [sp], #4)
   154a0:	str	fp, [sp, #-8]!
   154a4:	str	lr, [sp, #4]
   154a8:	add	fp, sp, #4
   154ac:	sub	sp, sp, #8
   154b0:	str	r0, [fp, #-8]
   154b4:	str	r1, [fp, #-12]
   154b8:	ldr	r2, [fp, #-12]
   154bc:	ldr	r1, [fp, #-8]
   154c0:	mov	r0, #0
   154c4:	bl	153ec <__assert_fail@plt+0x41e0>
   154c8:	mov	r3, r0
   154cc:	mov	r0, r3
   154d0:	sub	sp, fp, #4
   154d4:	ldr	fp, [sp]
   154d8:	add	sp, sp, #4
   154dc:	pop	{pc}		; (ldr pc, [sp], #4)
   154e0:	str	fp, [sp, #-8]!
   154e4:	str	lr, [sp, #4]
   154e8:	add	fp, sp, #4
   154ec:	sub	sp, sp, #16
   154f0:	str	r0, [fp, #-8]
   154f4:	str	r1, [fp, #-12]
   154f8:	str	r2, [fp, #-16]
   154fc:	ldr	r3, [fp, #-16]
   15500:	ldr	r2, [fp, #-12]
   15504:	ldr	r1, [fp, #-8]
   15508:	mov	r0, #0
   1550c:	bl	15444 <__assert_fail@plt+0x4238>
   15510:	mov	r3, r0
   15514:	mov	r0, r3
   15518:	sub	sp, fp, #4
   1551c:	ldr	fp, [sp]
   15520:	add	sp, sp, #4
   15524:	pop	{pc}		; (ldr pc, [sp], #4)
   15528:	str	fp, [sp, #-8]!
   1552c:	str	lr, [sp, #4]
   15530:	add	fp, sp, #4
   15534:	sub	sp, sp, #64	; 0x40
   15538:	str	r0, [fp, #-56]	; 0xffffffc8
   1553c:	str	r1, [fp, #-60]	; 0xffffffc4
   15540:	mov	r3, r2
   15544:	strb	r3, [fp, #-61]	; 0xffffffc3
   15548:	movw	r2, #45572	; 0xb204
   1554c:	movt	r2, #2
   15550:	sub	r3, fp, #52	; 0x34
   15554:	ldrd	r0, [r2]
   15558:	strd	r0, [r3]
   1555c:	ldrd	r0, [r2, #8]
   15560:	strd	r0, [r3, #8]
   15564:	ldrd	r0, [r2, #16]
   15568:	strd	r0, [r3, #16]
   1556c:	ldrd	r0, [r2, #24]
   15570:	strd	r0, [r3, #24]
   15574:	ldrd	r0, [r2, #32]
   15578:	strd	r0, [r3, #32]
   1557c:	ldrd	r0, [r2, #40]	; 0x28
   15580:	strd	r0, [r3, #40]	; 0x28
   15584:	ldrb	r1, [fp, #-61]	; 0xffffffc3
   15588:	sub	r3, fp, #52	; 0x34
   1558c:	mov	r2, #1
   15590:	mov	r0, r3
   15594:	bl	1324c <__assert_fail@plt+0x2040>
   15598:	sub	r3, fp, #52	; 0x34
   1559c:	ldr	r2, [fp, #-60]	; 0xffffffc4
   155a0:	ldr	r1, [fp, #-56]	; 0xffffffc8
   155a4:	mov	r0, #0
   155a8:	bl	14ff0 <__assert_fail@plt+0x3de4>
   155ac:	mov	r3, r0
   155b0:	mov	r0, r3
   155b4:	sub	sp, fp, #4
   155b8:	ldr	fp, [sp]
   155bc:	add	sp, sp, #4
   155c0:	pop	{pc}		; (ldr pc, [sp], #4)
   155c4:	str	fp, [sp, #-8]!
   155c8:	str	lr, [sp, #4]
   155cc:	add	fp, sp, #4
   155d0:	sub	sp, sp, #8
   155d4:	str	r0, [fp, #-8]
   155d8:	mov	r3, r1
   155dc:	strb	r3, [fp, #-9]
   155e0:	ldrb	r3, [fp, #-9]
   155e4:	mov	r2, r3
   155e8:	mvn	r1, #0
   155ec:	ldr	r0, [fp, #-8]
   155f0:	bl	15528 <__assert_fail@plt+0x431c>
   155f4:	mov	r3, r0
   155f8:	mov	r0, r3
   155fc:	sub	sp, fp, #4
   15600:	ldr	fp, [sp]
   15604:	add	sp, sp, #4
   15608:	pop	{pc}		; (ldr pc, [sp], #4)
   1560c:	str	fp, [sp, #-8]!
   15610:	str	lr, [sp, #4]
   15614:	add	fp, sp, #4
   15618:	sub	sp, sp, #8
   1561c:	str	r0, [fp, #-8]
   15620:	mov	r1, #58	; 0x3a
   15624:	ldr	r0, [fp, #-8]
   15628:	bl	155c4 <__assert_fail@plt+0x43b8>
   1562c:	mov	r3, r0
   15630:	mov	r0, r3
   15634:	sub	sp, fp, #4
   15638:	ldr	fp, [sp]
   1563c:	add	sp, sp, #4
   15640:	pop	{pc}		; (ldr pc, [sp], #4)
   15644:	str	fp, [sp, #-8]!
   15648:	str	lr, [sp, #4]
   1564c:	add	fp, sp, #4
   15650:	sub	sp, sp, #8
   15654:	str	r0, [fp, #-8]
   15658:	str	r1, [fp, #-12]
   1565c:	mov	r2, #58	; 0x3a
   15660:	ldr	r1, [fp, #-12]
   15664:	ldr	r0, [fp, #-8]
   15668:	bl	15528 <__assert_fail@plt+0x431c>
   1566c:	mov	r3, r0
   15670:	mov	r0, r3
   15674:	sub	sp, fp, #4
   15678:	ldr	fp, [sp]
   1567c:	add	sp, sp, #4
   15680:	pop	{pc}		; (ldr pc, [sp], #4)
   15684:	str	fp, [sp, #-8]!
   15688:	str	lr, [sp, #4]
   1568c:	add	fp, sp, #4
   15690:	sub	sp, sp, #112	; 0x70
   15694:	str	r0, [fp, #-56]	; 0xffffffc8
   15698:	str	r1, [fp, #-60]	; 0xffffffc4
   1569c:	str	r2, [fp, #-64]	; 0xffffffc0
   156a0:	sub	r3, fp, #116	; 0x74
   156a4:	ldr	r1, [fp, #-60]	; 0xffffffc4
   156a8:	mov	r0, r3
   156ac:	bl	133ec <__assert_fail@plt+0x21e0>
   156b0:	sub	r3, fp, #52	; 0x34
   156b4:	sub	r2, fp, #116	; 0x74
   156b8:	ldrd	r0, [r2]
   156bc:	strd	r0, [r3]
   156c0:	ldrd	r0, [r2, #8]
   156c4:	strd	r0, [r3, #8]
   156c8:	ldrd	r0, [r2, #16]
   156cc:	strd	r0, [r3, #16]
   156d0:	ldrd	r0, [r2, #24]
   156d4:	strd	r0, [r3, #24]
   156d8:	ldrd	r0, [r2, #32]
   156dc:	strd	r0, [r3, #32]
   156e0:	ldrd	r0, [r2, #40]	; 0x28
   156e4:	strd	r0, [r3, #40]	; 0x28
   156e8:	sub	r3, fp, #52	; 0x34
   156ec:	mov	r2, #1
   156f0:	mov	r1, #58	; 0x3a
   156f4:	mov	r0, r3
   156f8:	bl	1324c <__assert_fail@plt+0x2040>
   156fc:	sub	r3, fp, #52	; 0x34
   15700:	mvn	r2, #0
   15704:	ldr	r1, [fp, #-64]	; 0xffffffc0
   15708:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1570c:	bl	14ff0 <__assert_fail@plt+0x3de4>
   15710:	mov	r3, r0
   15714:	mov	r0, r3
   15718:	sub	sp, fp, #4
   1571c:	ldr	fp, [sp]
   15720:	add	sp, sp, #4
   15724:	pop	{pc}		; (ldr pc, [sp], #4)
   15728:	str	fp, [sp, #-8]!
   1572c:	str	lr, [sp, #4]
   15730:	add	fp, sp, #4
   15734:	sub	sp, sp, #24
   15738:	str	r0, [fp, #-8]
   1573c:	str	r1, [fp, #-12]
   15740:	str	r2, [fp, #-16]
   15744:	str	r3, [fp, #-20]	; 0xffffffec
   15748:	mvn	r3, #0
   1574c:	str	r3, [sp]
   15750:	ldr	r3, [fp, #-20]	; 0xffffffec
   15754:	ldr	r2, [fp, #-16]
   15758:	ldr	r1, [fp, #-12]
   1575c:	ldr	r0, [fp, #-8]
   15760:	bl	1577c <__assert_fail@plt+0x4570>
   15764:	mov	r3, r0
   15768:	mov	r0, r3
   1576c:	sub	sp, fp, #4
   15770:	ldr	fp, [sp]
   15774:	add	sp, sp, #4
   15778:	pop	{pc}		; (ldr pc, [sp], #4)
   1577c:	str	fp, [sp, #-8]!
   15780:	str	lr, [sp, #4]
   15784:	add	fp, sp, #4
   15788:	sub	sp, sp, #64	; 0x40
   1578c:	str	r0, [fp, #-56]	; 0xffffffc8
   15790:	str	r1, [fp, #-60]	; 0xffffffc4
   15794:	str	r2, [fp, #-64]	; 0xffffffc0
   15798:	str	r3, [fp, #-68]	; 0xffffffbc
   1579c:	movw	r2, #45572	; 0xb204
   157a0:	movt	r2, #2
   157a4:	sub	r3, fp, #52	; 0x34
   157a8:	ldrd	r0, [r2]
   157ac:	strd	r0, [r3]
   157b0:	ldrd	r0, [r2, #8]
   157b4:	strd	r0, [r3, #8]
   157b8:	ldrd	r0, [r2, #16]
   157bc:	strd	r0, [r3, #16]
   157c0:	ldrd	r0, [r2, #24]
   157c4:	strd	r0, [r3, #24]
   157c8:	ldrd	r0, [r2, #32]
   157cc:	strd	r0, [r3, #32]
   157d0:	ldrd	r0, [r2, #40]	; 0x28
   157d4:	strd	r0, [r3, #40]	; 0x28
   157d8:	sub	r3, fp, #52	; 0x34
   157dc:	ldr	r2, [fp, #-64]	; 0xffffffc0
   157e0:	ldr	r1, [fp, #-60]	; 0xffffffc4
   157e4:	mov	r0, r3
   157e8:	bl	13364 <__assert_fail@plt+0x2158>
   157ec:	sub	r3, fp, #52	; 0x34
   157f0:	ldr	r2, [fp, #4]
   157f4:	ldr	r1, [fp, #-68]	; 0xffffffbc
   157f8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   157fc:	bl	14ff0 <__assert_fail@plt+0x3de4>
   15800:	mov	r3, r0
   15804:	mov	r0, r3
   15808:	sub	sp, fp, #4
   1580c:	ldr	fp, [sp]
   15810:	add	sp, sp, #4
   15814:	pop	{pc}		; (ldr pc, [sp], #4)
   15818:	str	fp, [sp, #-8]!
   1581c:	str	lr, [sp, #4]
   15820:	add	fp, sp, #4
   15824:	sub	sp, sp, #16
   15828:	str	r0, [fp, #-8]
   1582c:	str	r1, [fp, #-12]
   15830:	str	r2, [fp, #-16]
   15834:	ldr	r3, [fp, #-16]
   15838:	ldr	r2, [fp, #-12]
   1583c:	ldr	r1, [fp, #-8]
   15840:	mov	r0, #0
   15844:	bl	15728 <__assert_fail@plt+0x451c>
   15848:	mov	r3, r0
   1584c:	mov	r0, r3
   15850:	sub	sp, fp, #4
   15854:	ldr	fp, [sp]
   15858:	add	sp, sp, #4
   1585c:	pop	{pc}		; (ldr pc, [sp], #4)
   15860:	str	fp, [sp, #-8]!
   15864:	str	lr, [sp, #4]
   15868:	add	fp, sp, #4
   1586c:	sub	sp, sp, #24
   15870:	str	r0, [fp, #-8]
   15874:	str	r1, [fp, #-12]
   15878:	str	r2, [fp, #-16]
   1587c:	str	r3, [fp, #-20]	; 0xffffffec
   15880:	ldr	r3, [fp, #-20]	; 0xffffffec
   15884:	str	r3, [sp]
   15888:	ldr	r3, [fp, #-16]
   1588c:	ldr	r2, [fp, #-12]
   15890:	ldr	r1, [fp, #-8]
   15894:	mov	r0, #0
   15898:	bl	1577c <__assert_fail@plt+0x4570>
   1589c:	mov	r3, r0
   158a0:	mov	r0, r3
   158a4:	sub	sp, fp, #4
   158a8:	ldr	fp, [sp]
   158ac:	add	sp, sp, #4
   158b0:	pop	{pc}		; (ldr pc, [sp], #4)
   158b4:	str	fp, [sp, #-8]!
   158b8:	str	lr, [sp, #4]
   158bc:	add	fp, sp, #4
   158c0:	sub	sp, sp, #16
   158c4:	str	r0, [fp, #-8]
   158c8:	str	r1, [fp, #-12]
   158cc:	str	r2, [fp, #-16]
   158d0:	movw	r3, #45368	; 0xb138
   158d4:	movt	r3, #2
   158d8:	ldr	r2, [fp, #-16]
   158dc:	ldr	r1, [fp, #-12]
   158e0:	ldr	r0, [fp, #-8]
   158e4:	bl	14ff0 <__assert_fail@plt+0x3de4>
   158e8:	mov	r3, r0
   158ec:	mov	r0, r3
   158f0:	sub	sp, fp, #4
   158f4:	ldr	fp, [sp]
   158f8:	add	sp, sp, #4
   158fc:	pop	{pc}		; (ldr pc, [sp], #4)
   15900:	str	fp, [sp, #-8]!
   15904:	str	lr, [sp, #4]
   15908:	add	fp, sp, #4
   1590c:	sub	sp, sp, #8
   15910:	str	r0, [fp, #-8]
   15914:	str	r1, [fp, #-12]
   15918:	ldr	r2, [fp, #-12]
   1591c:	ldr	r1, [fp, #-8]
   15920:	mov	r0, #0
   15924:	bl	158b4 <__assert_fail@plt+0x46a8>
   15928:	mov	r3, r0
   1592c:	mov	r0, r3
   15930:	sub	sp, fp, #4
   15934:	ldr	fp, [sp]
   15938:	add	sp, sp, #4
   1593c:	pop	{pc}		; (ldr pc, [sp], #4)
   15940:	str	fp, [sp, #-8]!
   15944:	str	lr, [sp, #4]
   15948:	add	fp, sp, #4
   1594c:	sub	sp, sp, #8
   15950:	str	r0, [fp, #-8]
   15954:	str	r1, [fp, #-12]
   15958:	mvn	r2, #0
   1595c:	ldr	r1, [fp, #-12]
   15960:	ldr	r0, [fp, #-8]
   15964:	bl	158b4 <__assert_fail@plt+0x46a8>
   15968:	mov	r3, r0
   1596c:	mov	r0, r3
   15970:	sub	sp, fp, #4
   15974:	ldr	fp, [sp]
   15978:	add	sp, sp, #4
   1597c:	pop	{pc}		; (ldr pc, [sp], #4)
   15980:	str	fp, [sp, #-8]!
   15984:	str	lr, [sp, #4]
   15988:	add	fp, sp, #4
   1598c:	sub	sp, sp, #8
   15990:	str	r0, [fp, #-8]
   15994:	ldr	r1, [fp, #-8]
   15998:	mov	r0, #0
   1599c:	bl	15940 <__assert_fail@plt+0x4734>
   159a0:	mov	r3, r0
   159a4:	mov	r0, r3
   159a8:	sub	sp, fp, #4
   159ac:	ldr	fp, [sp]
   159b0:	add	sp, sp, #4
   159b4:	pop	{pc}		; (ldr pc, [sp], #4)
   159b8:	str	fp, [sp, #-8]!
   159bc:	str	lr, [sp, #4]
   159c0:	add	fp, sp, #4
   159c4:	sub	sp, sp, #96	; 0x60
   159c8:	str	r0, [fp, #-80]	; 0xffffffb0
   159cc:	str	r1, [fp, #-84]	; 0xffffffac
   159d0:	str	r2, [fp, #-88]	; 0xffffffa8
   159d4:	str	r3, [fp, #-92]	; 0xffffffa4
   159d8:	mov	r3, #0
   159dc:	str	r3, [fp, #-16]
   159e0:	ldr	r3, [fp, #-88]	; 0xffffffa8
   159e4:	ldr	r3, [r3]
   159e8:	str	r3, [fp, #-20]	; 0xffffffec
   159ec:	ldr	r3, [fp, #-92]	; 0xffffffa4
   159f0:	cmp	r3, #0
   159f4:	beq	15a04 <__assert_fail@plt+0x47f8>
   159f8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   159fc:	ldr	r3, [r3]
   15a00:	b	15a08 <__assert_fail@plt+0x47fc>
   15a04:	mvn	r3, #0
   15a08:	str	r3, [fp, #-24]	; 0xffffffe8
   15a0c:	mov	r3, #0
   15a10:	str	r3, [fp, #-8]
   15a14:	ldr	r3, [fp, #4]
   15a18:	cmp	r3, #0
   15a1c:	beq	15a2c <__assert_fail@plt+0x4820>
   15a20:	ldr	r3, [fp, #4]
   15a24:	mov	r2, #0
   15a28:	str	r2, [r3]
   15a2c:	ldr	r3, [fp, #8]
   15a30:	cmp	r3, #0
   15a34:	beq	15a44 <__assert_fail@plt+0x4838>
   15a38:	ldr	r3, [fp, #8]
   15a3c:	mov	r2, #0
   15a40:	str	r2, [r3]
   15a44:	mov	r3, #0
   15a48:	str	r3, [fp, #-12]
   15a4c:	ldr	r3, [fp, #-84]	; 0xffffffac
   15a50:	cmp	r3, #0
   15a54:	bne	15a7c <__assert_fail@plt+0x4870>
   15a58:	ldr	r3, [fp, #-80]	; 0xffffffb0
   15a5c:	ldrb	r3, [r3]
   15a60:	cmp	r3, #0
   15a64:	beq	15ac8 <__assert_fail@plt+0x48bc>
   15a68:	ldr	r0, [fp, #-80]	; 0xffffffb0
   15a6c:	bl	16f6c <__assert_fail@plt+0x5d60>
   15a70:	mov	r3, r0
   15a74:	str	r3, [fp, #-12]
   15a78:	b	15ac8 <__assert_fail@plt+0x48bc>
   15a7c:	ldr	r2, [fp, #-84]	; 0xffffffac
   15a80:	ldr	r3, [fp, #-80]	; 0xffffffb0
   15a84:	sub	r3, r2, r3
   15a88:	str	r3, [fp, #-28]	; 0xffffffe4
   15a8c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15a90:	cmp	r3, #0
   15a94:	beq	15ac8 <__assert_fail@plt+0x48bc>
   15a98:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15a9c:	add	r3, r3, #1
   15aa0:	mov	r1, r3
   15aa4:	ldr	r0, [fp, #-80]	; 0xffffffb0
   15aa8:	bl	16eac <__assert_fail@plt+0x5ca0>
   15aac:	mov	r3, r0
   15ab0:	str	r3, [fp, #-12]
   15ab4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15ab8:	ldr	r2, [fp, #-12]
   15abc:	add	r3, r2, r3
   15ac0:	mov	r2, #0
   15ac4:	strb	r2, [r3]
   15ac8:	ldr	r3, [fp, #-84]	; 0xffffffac
   15acc:	cmp	r3, #0
   15ad0:	beq	15af4 <__assert_fail@plt+0x48e8>
   15ad4:	ldr	r3, [fp, #-84]	; 0xffffffac
   15ad8:	add	r3, r3, #1
   15adc:	ldrb	r3, [r3]
   15ae0:	cmp	r3, #0
   15ae4:	beq	15af4 <__assert_fail@plt+0x48e8>
   15ae8:	ldr	r3, [fp, #-84]	; 0xffffffac
   15aec:	add	r3, r3, #1
   15af0:	b	15af8 <__assert_fail@plt+0x48ec>
   15af4:	mov	r3, #0
   15af8:	str	r3, [fp, #-32]	; 0xffffffe0
   15afc:	ldr	r3, [fp, #-12]
   15b00:	cmp	r3, #0
   15b04:	beq	15c74 <__assert_fail@plt+0x4a68>
   15b08:	ldr	r3, [fp, #-12]
   15b0c:	ldrb	r3, [r3]
   15b10:	cmp	r3, #43	; 0x2b
   15b14:	beq	15b28 <__assert_fail@plt+0x491c>
   15b18:	ldr	r0, [fp, #-12]
   15b1c:	bl	10f3c <getpwnam@plt>
   15b20:	mov	r3, r0
   15b24:	b	15b2c <__assert_fail@plt+0x4920>
   15b28:	mov	r3, #0
   15b2c:	str	r3, [fp, #-36]	; 0xffffffdc
   15b30:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15b34:	cmp	r3, #0
   15b38:	bne	15bec <__assert_fail@plt+0x49e0>
   15b3c:	ldr	r3, [fp, #-84]	; 0xffffffac
   15b40:	cmp	r3, #0
   15b44:	beq	15b5c <__assert_fail@plt+0x4950>
   15b48:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15b4c:	cmp	r3, #0
   15b50:	bne	15b5c <__assert_fail@plt+0x4950>
   15b54:	mov	r3, #1
   15b58:	b	15b60 <__assert_fail@plt+0x4954>
   15b5c:	mov	r3, #0
   15b60:	strb	r3, [fp, #-37]	; 0xffffffdb
   15b64:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   15b68:	and	r3, r3, #1
   15b6c:	strb	r3, [fp, #-37]	; 0xffffffdb
   15b70:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   15b74:	cmp	r3, #0
   15b78:	beq	15b90 <__assert_fail@plt+0x4984>
   15b7c:	movw	r3, #45416	; 0xb168
   15b80:	movt	r3, #2
   15b84:	ldr	r3, [r3]
   15b88:	str	r3, [fp, #-8]
   15b8c:	b	15c70 <__assert_fail@plt+0x4a64>
   15b90:	sub	r2, fp, #48	; 0x30
   15b94:	movw	r3, #39824	; 0x9b90
   15b98:	movt	r3, #1
   15b9c:	str	r3, [sp]
   15ba0:	mov	r3, r2
   15ba4:	mov	r2, #10
   15ba8:	mov	r1, #0
   15bac:	ldr	r0, [fp, #-12]
   15bb0:	bl	17180 <__assert_fail@plt+0x5f74>
   15bb4:	mov	r3, r0
   15bb8:	cmp	r3, #0
   15bbc:	bne	15bd8 <__assert_fail@plt+0x49cc>
   15bc0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   15bc4:	cmn	r3, #1
   15bc8:	beq	15bd8 <__assert_fail@plt+0x49cc>
   15bcc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   15bd0:	str	r3, [fp, #-20]	; 0xffffffec
   15bd4:	b	15c70 <__assert_fail@plt+0x4a64>
   15bd8:	movw	r3, #45420	; 0xb16c
   15bdc:	movt	r3, #2
   15be0:	ldr	r3, [r3]
   15be4:	str	r3, [fp, #-8]
   15be8:	b	15c70 <__assert_fail@plt+0x4a64>
   15bec:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15bf0:	ldr	r3, [r3, #8]
   15bf4:	str	r3, [fp, #-20]	; 0xffffffec
   15bf8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15bfc:	cmp	r3, #0
   15c00:	bne	15c70 <__assert_fail@plt+0x4a64>
   15c04:	ldr	r3, [fp, #-84]	; 0xffffffac
   15c08:	cmp	r3, #0
   15c0c:	beq	15c70 <__assert_fail@plt+0x4a64>
   15c10:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15c14:	ldr	r3, [r3, #12]
   15c18:	str	r3, [fp, #-24]	; 0xffffffe8
   15c1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15c20:	bl	111e8 <getgrgid@plt>
   15c24:	str	r0, [fp, #-44]	; 0xffffffd4
   15c28:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15c2c:	cmp	r3, #0
   15c30:	beq	15c40 <__assert_fail@plt+0x4a34>
   15c34:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15c38:	ldr	r3, [r3]
   15c3c:	b	15c5c <__assert_fail@plt+0x4a50>
   15c40:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15c44:	mov	r0, r3
   15c48:	mov	r1, #0
   15c4c:	sub	r3, fp, #72	; 0x48
   15c50:	mov	r2, r3
   15c54:	bl	12f80 <__assert_fail@plt+0x1d74>
   15c58:	mov	r3, r0
   15c5c:	mov	r0, r3
   15c60:	bl	16f6c <__assert_fail@plt+0x5d60>
   15c64:	mov	r3, r0
   15c68:	str	r3, [fp, #-16]
   15c6c:	bl	10f18 <endgrent@plt>
   15c70:	bl	11194 <endpwent@plt>
   15c74:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15c78:	cmp	r3, #0
   15c7c:	beq	15d3c <__assert_fail@plt+0x4b30>
   15c80:	ldr	r3, [fp, #-8]
   15c84:	cmp	r3, #0
   15c88:	bne	15d3c <__assert_fail@plt+0x4b30>
   15c8c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15c90:	ldrb	r3, [r3]
   15c94:	cmp	r3, #43	; 0x2b
   15c98:	beq	15cac <__assert_fail@plt+0x4aa0>
   15c9c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15ca0:	bl	111f4 <getgrnam@plt>
   15ca4:	mov	r3, r0
   15ca8:	b	15cb0 <__assert_fail@plt+0x4aa4>
   15cac:	mov	r3, #0
   15cb0:	str	r3, [fp, #-44]	; 0xffffffd4
   15cb4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15cb8:	cmp	r3, #0
   15cbc:	bne	15d1c <__assert_fail@plt+0x4b10>
   15cc0:	sub	r2, fp, #76	; 0x4c
   15cc4:	movw	r3, #39824	; 0x9b90
   15cc8:	movt	r3, #1
   15ccc:	str	r3, [sp]
   15cd0:	mov	r3, r2
   15cd4:	mov	r2, #10
   15cd8:	mov	r1, #0
   15cdc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15ce0:	bl	17180 <__assert_fail@plt+0x5f74>
   15ce4:	mov	r3, r0
   15ce8:	cmp	r3, #0
   15cec:	bne	15d08 <__assert_fail@plt+0x4afc>
   15cf0:	ldr	r3, [fp, #-76]	; 0xffffffb4
   15cf4:	cmn	r3, #1
   15cf8:	beq	15d08 <__assert_fail@plt+0x4afc>
   15cfc:	ldr	r3, [fp, #-76]	; 0xffffffb4
   15d00:	str	r3, [fp, #-24]	; 0xffffffe8
   15d04:	b	15d28 <__assert_fail@plt+0x4b1c>
   15d08:	movw	r3, #45424	; 0xb170
   15d0c:	movt	r3, #2
   15d10:	ldr	r3, [r3]
   15d14:	str	r3, [fp, #-8]
   15d18:	b	15d28 <__assert_fail@plt+0x4b1c>
   15d1c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15d20:	ldr	r3, [r3, #8]
   15d24:	str	r3, [fp, #-24]	; 0xffffffe8
   15d28:	bl	10f18 <endgrent@plt>
   15d2c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15d30:	bl	16f6c <__assert_fail@plt+0x5d60>
   15d34:	mov	r3, r0
   15d38:	str	r3, [fp, #-16]
   15d3c:	ldr	r3, [fp, #-8]
   15d40:	cmp	r3, #0
   15d44:	bne	15dac <__assert_fail@plt+0x4ba0>
   15d48:	ldr	r3, [fp, #-88]	; 0xffffffa8
   15d4c:	ldr	r2, [fp, #-20]	; 0xffffffec
   15d50:	str	r2, [r3]
   15d54:	ldr	r3, [fp, #-92]	; 0xffffffa4
   15d58:	cmp	r3, #0
   15d5c:	beq	15d6c <__assert_fail@plt+0x4b60>
   15d60:	ldr	r3, [fp, #-92]	; 0xffffffa4
   15d64:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15d68:	str	r2, [r3]
   15d6c:	ldr	r3, [fp, #4]
   15d70:	cmp	r3, #0
   15d74:	beq	15d8c <__assert_fail@plt+0x4b80>
   15d78:	ldr	r3, [fp, #4]
   15d7c:	ldr	r2, [fp, #-12]
   15d80:	str	r2, [r3]
   15d84:	mov	r3, #0
   15d88:	str	r3, [fp, #-12]
   15d8c:	ldr	r3, [fp, #8]
   15d90:	cmp	r3, #0
   15d94:	beq	15dac <__assert_fail@plt+0x4ba0>
   15d98:	ldr	r3, [fp, #8]
   15d9c:	ldr	r2, [fp, #-16]
   15da0:	str	r2, [r3]
   15da4:	mov	r3, #0
   15da8:	str	r3, [fp, #-16]
   15dac:	ldr	r0, [fp, #-12]
   15db0:	bl	12edc <__assert_fail@plt+0x1cd0>
   15db4:	ldr	r0, [fp, #-16]
   15db8:	bl	12edc <__assert_fail@plt+0x1cd0>
   15dbc:	ldr	r3, [fp, #-8]
   15dc0:	cmp	r3, #0
   15dc4:	beq	15dd8 <__assert_fail@plt+0x4bcc>
   15dc8:	ldr	r0, [fp, #-8]
   15dcc:	bl	110d4 <gettext@plt>
   15dd0:	mov	r3, r0
   15dd4:	b	15ddc <__assert_fail@plt+0x4bd0>
   15dd8:	mov	r3, #0
   15ddc:	mov	r0, r3
   15de0:	sub	sp, fp, #4
   15de4:	ldr	fp, [sp]
   15de8:	add	sp, sp, #4
   15dec:	pop	{pc}		; (ldr pc, [sp], #4)
   15df0:	str	fp, [sp, #-8]!
   15df4:	str	lr, [sp, #4]
   15df8:	add	fp, sp, #4
   15dfc:	sub	sp, sp, #40	; 0x28
   15e00:	str	r0, [fp, #-24]	; 0xffffffe8
   15e04:	str	r1, [fp, #-28]	; 0xffffffe4
   15e08:	str	r2, [fp, #-32]	; 0xffffffe0
   15e0c:	str	r3, [fp, #-36]	; 0xffffffdc
   15e10:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15e14:	cmp	r3, #0
   15e18:	beq	15e30 <__assert_fail@plt+0x4c24>
   15e1c:	mov	r1, #58	; 0x3a
   15e20:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15e24:	bl	110f8 <strchr@plt>
   15e28:	mov	r3, r0
   15e2c:	b	15e34 <__assert_fail@plt+0x4c28>
   15e30:	mov	r3, #0
   15e34:	str	r3, [fp, #-12]
   15e38:	ldr	r3, [fp, #4]
   15e3c:	str	r3, [sp, #4]
   15e40:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15e44:	str	r3, [sp]
   15e48:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15e4c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   15e50:	ldr	r1, [fp, #-12]
   15e54:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15e58:	bl	159b8 <__assert_fail@plt+0x47ac>
   15e5c:	str	r0, [fp, #-8]
   15e60:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15e64:	cmp	r3, #0
   15e68:	beq	15ed8 <__assert_fail@plt+0x4ccc>
   15e6c:	ldr	r3, [fp, #-12]
   15e70:	cmp	r3, #0
   15e74:	bne	15ed8 <__assert_fail@plt+0x4ccc>
   15e78:	ldr	r3, [fp, #-8]
   15e7c:	cmp	r3, #0
   15e80:	beq	15ed8 <__assert_fail@plt+0x4ccc>
   15e84:	mov	r1, #46	; 0x2e
   15e88:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15e8c:	bl	110f8 <strchr@plt>
   15e90:	str	r0, [fp, #-16]
   15e94:	ldr	r3, [fp, #-16]
   15e98:	cmp	r3, #0
   15e9c:	beq	15ed8 <__assert_fail@plt+0x4ccc>
   15ea0:	ldr	r3, [fp, #4]
   15ea4:	str	r3, [sp, #4]
   15ea8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15eac:	str	r3, [sp]
   15eb0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15eb4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   15eb8:	ldr	r1, [fp, #-16]
   15ebc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15ec0:	bl	159b8 <__assert_fail@plt+0x47ac>
   15ec4:	mov	r3, r0
   15ec8:	cmp	r3, #0
   15ecc:	bne	15ed8 <__assert_fail@plt+0x4ccc>
   15ed0:	mov	r3, #0
   15ed4:	str	r3, [fp, #-8]
   15ed8:	ldr	r3, [fp, #-8]
   15edc:	mov	r0, r3
   15ee0:	sub	sp, fp, #4
   15ee4:	ldr	fp, [sp]
   15ee8:	add	sp, sp, #4
   15eec:	pop	{pc}		; (ldr pc, [sp], #4)
   15ef0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   15ef4:	strd	r6, [sp, #8]
   15ef8:	str	fp, [sp, #16]
   15efc:	str	lr, [sp, #20]
   15f00:	add	fp, sp, #20
   15f04:	sub	sp, sp, #48	; 0x30
   15f08:	str	r0, [fp, #-24]	; 0xffffffe8
   15f0c:	str	r1, [fp, #-28]	; 0xffffffe4
   15f10:	str	r2, [fp, #-32]	; 0xffffffe0
   15f14:	str	r3, [fp, #-36]	; 0xffffffdc
   15f18:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15f1c:	cmp	r3, #0
   15f20:	beq	15f48 <__assert_fail@plt+0x4d3c>
   15f24:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15f28:	str	r3, [sp]
   15f2c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15f30:	ldr	r2, [fp, #-28]	; 0xffffffe4
   15f34:	movw	r1, #39876	; 0x9bc4
   15f38:	movt	r1, #1
   15f3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15f40:	bl	11104 <fprintf@plt>
   15f44:	b	15f60 <__assert_fail@plt+0x4d54>
   15f48:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15f4c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   15f50:	movw	r1, #39888	; 0x9bd0
   15f54:	movt	r1, #1
   15f58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15f5c:	bl	11104 <fprintf@plt>
   15f60:	movw	r0, #39896	; 0x9bd8
   15f64:	movt	r0, #1
   15f68:	bl	110d4 <gettext@plt>
   15f6c:	mov	r2, r0
   15f70:	movw	r3, #2022	; 0x7e6
   15f74:	movw	r1, #40680	; 0x9ee8
   15f78:	movt	r1, #1
   15f7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15f80:	bl	11104 <fprintf@plt>
   15f84:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15f88:	mov	r0, #10
   15f8c:	bl	10fcc <fputc_unlocked@plt>
   15f90:	movw	r0, #39900	; 0x9bdc
   15f94:	movt	r0, #1
   15f98:	bl	110d4 <gettext@plt>
   15f9c:	mov	r3, r0
   15fa0:	movw	r2, #40072	; 0x9c88
   15fa4:	movt	r2, #1
   15fa8:	mov	r1, r3
   15fac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15fb0:	bl	11104 <fprintf@plt>
   15fb4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15fb8:	mov	r0, #10
   15fbc:	bl	10fcc <fputc_unlocked@plt>
   15fc0:	ldr	r3, [fp, #8]
   15fc4:	cmp	r3, #9
   15fc8:	ldrls	pc, [pc, r3, lsl #2]
   15fcc:	b	163ac <__assert_fail@plt+0x51a0>
   15fd0:	andeq	r6, r1, r8, asr r4
   15fd4:	strdeq	r5, [r1], -r8
   15fd8:	andeq	r6, r1, r0, lsr #32
   15fdc:	andeq	r6, r1, r0, asr r0
   15fe0:	muleq	r1, r4, r0
   15fe4:	strdeq	r6, [r1], -r0
   15fe8:	andeq	r6, r1, ip, asr r1
   15fec:	ldrdeq	r6, [r1], -r8
   15ff0:	andeq	r6, r1, r4, ror #4
   15ff4:	andeq	r6, r1, r0, lsl #6
   15ff8:	movw	r0, #40108	; 0x9cac
   15ffc:	movt	r0, #1
   16000:	bl	110d4 <gettext@plt>
   16004:	mov	r1, r0
   16008:	ldr	r3, [fp, #4]
   1600c:	ldr	r3, [r3]
   16010:	mov	r2, r3
   16014:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16018:	bl	11104 <fprintf@plt>
   1601c:	b	1645c <__assert_fail@plt+0x5250>
   16020:	movw	r0, #40124	; 0x9cbc
   16024:	movt	r0, #1
   16028:	bl	110d4 <gettext@plt>
   1602c:	mov	r1, r0
   16030:	ldr	r3, [fp, #4]
   16034:	ldr	r2, [r3]
   16038:	ldr	r3, [fp, #4]
   1603c:	add	r3, r3, #4
   16040:	ldr	r3, [r3]
   16044:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16048:	bl	11104 <fprintf@plt>
   1604c:	b	1645c <__assert_fail@plt+0x5250>
   16050:	movw	r0, #40148	; 0x9cd4
   16054:	movt	r0, #1
   16058:	bl	110d4 <gettext@plt>
   1605c:	ldr	r3, [fp, #4]
   16060:	ldr	r2, [r3]
   16064:	ldr	r3, [fp, #4]
   16068:	add	r3, r3, #4
   1606c:	ldr	r1, [r3]
   16070:	ldr	r3, [fp, #4]
   16074:	add	r3, r3, #8
   16078:	ldr	r3, [r3]
   1607c:	str	r3, [sp]
   16080:	mov	r3, r1
   16084:	mov	r1, r0
   16088:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1608c:	bl	11104 <fprintf@plt>
   16090:	b	1645c <__assert_fail@plt+0x5250>
   16094:	movw	r0, #40176	; 0x9cf0
   16098:	movt	r0, #1
   1609c:	bl	110d4 <gettext@plt>
   160a0:	mov	ip, r0
   160a4:	ldr	r3, [fp, #4]
   160a8:	ldr	r1, [r3]
   160ac:	ldr	r3, [fp, #4]
   160b0:	add	r3, r3, #4
   160b4:	ldr	r0, [r3]
   160b8:	ldr	r3, [fp, #4]
   160bc:	add	r3, r3, #8
   160c0:	ldr	r3, [r3]
   160c4:	ldr	r2, [fp, #4]
   160c8:	add	r2, r2, #12
   160cc:	ldr	r2, [r2]
   160d0:	str	r2, [sp, #4]
   160d4:	str	r3, [sp]
   160d8:	mov	r3, r0
   160dc:	mov	r2, r1
   160e0:	mov	r1, ip
   160e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   160e8:	bl	11104 <fprintf@plt>
   160ec:	b	1645c <__assert_fail@plt+0x5250>
   160f0:	movw	r0, #40208	; 0x9d10
   160f4:	movt	r0, #1
   160f8:	bl	110d4 <gettext@plt>
   160fc:	mov	lr, r0
   16100:	ldr	r3, [fp, #4]
   16104:	ldr	r0, [r3]
   16108:	ldr	r3, [fp, #4]
   1610c:	add	r3, r3, #4
   16110:	ldr	ip, [r3]
   16114:	ldr	r3, [fp, #4]
   16118:	add	r3, r3, #8
   1611c:	ldr	r3, [r3]
   16120:	ldr	r2, [fp, #4]
   16124:	add	r2, r2, #12
   16128:	ldr	r2, [r2]
   1612c:	ldr	r1, [fp, #4]
   16130:	add	r1, r1, #16
   16134:	ldr	r1, [r1]
   16138:	str	r1, [sp, #8]
   1613c:	str	r2, [sp, #4]
   16140:	str	r3, [sp]
   16144:	mov	r3, ip
   16148:	mov	r2, r0
   1614c:	mov	r1, lr
   16150:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16154:	bl	11104 <fprintf@plt>
   16158:	b	1645c <__assert_fail@plt+0x5250>
   1615c:	movw	r0, #40244	; 0x9d34
   16160:	movt	r0, #1
   16164:	bl	110d4 <gettext@plt>
   16168:	mov	r4, r0
   1616c:	ldr	r3, [fp, #4]
   16170:	ldr	ip, [r3]
   16174:	ldr	r3, [fp, #4]
   16178:	add	r3, r3, #4
   1617c:	ldr	lr, [r3]
   16180:	ldr	r3, [fp, #4]
   16184:	add	r3, r3, #8
   16188:	ldr	r3, [r3]
   1618c:	ldr	r2, [fp, #4]
   16190:	add	r2, r2, #12
   16194:	ldr	r2, [r2]
   16198:	ldr	r1, [fp, #4]
   1619c:	add	r1, r1, #16
   161a0:	ldr	r1, [r1]
   161a4:	ldr	r0, [fp, #4]
   161a8:	add	r0, r0, #20
   161ac:	ldr	r0, [r0]
   161b0:	str	r0, [sp, #12]
   161b4:	str	r1, [sp, #8]
   161b8:	str	r2, [sp, #4]
   161bc:	str	r3, [sp]
   161c0:	mov	r3, lr
   161c4:	mov	r2, ip
   161c8:	mov	r1, r4
   161cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   161d0:	bl	11104 <fprintf@plt>
   161d4:	b	1645c <__assert_fail@plt+0x5250>
   161d8:	movw	r0, #40284	; 0x9d5c
   161dc:	movt	r0, #1
   161e0:	bl	110d4 <gettext@plt>
   161e4:	mov	r5, r0
   161e8:	ldr	r3, [fp, #4]
   161ec:	ldr	lr, [r3]
   161f0:	ldr	r3, [fp, #4]
   161f4:	add	r3, r3, #4
   161f8:	ldr	r4, [r3]
   161fc:	ldr	r3, [fp, #4]
   16200:	add	r3, r3, #8
   16204:	ldr	r3, [r3]
   16208:	ldr	r2, [fp, #4]
   1620c:	add	r2, r2, #12
   16210:	ldr	r2, [r2]
   16214:	ldr	r1, [fp, #4]
   16218:	add	r1, r1, #16
   1621c:	ldr	r1, [r1]
   16220:	ldr	r0, [fp, #4]
   16224:	add	r0, r0, #20
   16228:	ldr	r0, [r0]
   1622c:	ldr	ip, [fp, #4]
   16230:	add	ip, ip, #24
   16234:	ldr	ip, [ip]
   16238:	str	ip, [sp, #16]
   1623c:	str	r0, [sp, #12]
   16240:	str	r1, [sp, #8]
   16244:	str	r2, [sp, #4]
   16248:	str	r3, [sp]
   1624c:	mov	r3, r4
   16250:	mov	r2, lr
   16254:	mov	r1, r5
   16258:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1625c:	bl	11104 <fprintf@plt>
   16260:	b	1645c <__assert_fail@plt+0x5250>
   16264:	movw	r0, #40328	; 0x9d88
   16268:	movt	r0, #1
   1626c:	bl	110d4 <gettext@plt>
   16270:	mov	r6, r0
   16274:	ldr	r3, [fp, #4]
   16278:	ldr	r4, [r3]
   1627c:	ldr	r3, [fp, #4]
   16280:	add	r3, r3, #4
   16284:	ldr	r5, [r3]
   16288:	ldr	r3, [fp, #4]
   1628c:	add	r3, r3, #8
   16290:	ldr	r3, [r3]
   16294:	ldr	r2, [fp, #4]
   16298:	add	r2, r2, #12
   1629c:	ldr	r2, [r2]
   162a0:	ldr	r1, [fp, #4]
   162a4:	add	r1, r1, #16
   162a8:	ldr	r1, [r1]
   162ac:	ldr	r0, [fp, #4]
   162b0:	add	r0, r0, #20
   162b4:	ldr	r0, [r0]
   162b8:	ldr	ip, [fp, #4]
   162bc:	add	ip, ip, #24
   162c0:	ldr	ip, [ip]
   162c4:	ldr	lr, [fp, #4]
   162c8:	add	lr, lr, #28
   162cc:	ldr	lr, [lr]
   162d0:	str	lr, [sp, #20]
   162d4:	str	ip, [sp, #16]
   162d8:	str	r0, [sp, #12]
   162dc:	str	r1, [sp, #8]
   162e0:	str	r2, [sp, #4]
   162e4:	str	r3, [sp]
   162e8:	mov	r3, r5
   162ec:	mov	r2, r4
   162f0:	mov	r1, r6
   162f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   162f8:	bl	11104 <fprintf@plt>
   162fc:	b	1645c <__assert_fail@plt+0x5250>
   16300:	movw	r0, #40376	; 0x9db8
   16304:	movt	r0, #1
   16308:	bl	110d4 <gettext@plt>
   1630c:	mov	r7, r0
   16310:	ldr	r3, [fp, #4]
   16314:	ldr	r5, [r3]
   16318:	ldr	r3, [fp, #4]
   1631c:	add	r3, r3, #4
   16320:	ldr	r6, [r3]
   16324:	ldr	r3, [fp, #4]
   16328:	add	r3, r3, #8
   1632c:	ldr	r3, [r3]
   16330:	ldr	r2, [fp, #4]
   16334:	add	r2, r2, #12
   16338:	ldr	r2, [r2]
   1633c:	ldr	r1, [fp, #4]
   16340:	add	r1, r1, #16
   16344:	ldr	r1, [r1]
   16348:	ldr	r0, [fp, #4]
   1634c:	add	r0, r0, #20
   16350:	ldr	r0, [r0]
   16354:	ldr	ip, [fp, #4]
   16358:	add	ip, ip, #24
   1635c:	ldr	ip, [ip]
   16360:	ldr	lr, [fp, #4]
   16364:	add	lr, lr, #28
   16368:	ldr	lr, [lr]
   1636c:	ldr	r4, [fp, #4]
   16370:	add	r4, r4, #32
   16374:	ldr	r4, [r4]
   16378:	str	r4, [sp, #24]
   1637c:	str	lr, [sp, #20]
   16380:	str	ip, [sp, #16]
   16384:	str	r0, [sp, #12]
   16388:	str	r1, [sp, #8]
   1638c:	str	r2, [sp, #4]
   16390:	str	r3, [sp]
   16394:	mov	r3, r6
   16398:	mov	r2, r5
   1639c:	mov	r1, r7
   163a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   163a4:	bl	11104 <fprintf@plt>
   163a8:	b	1645c <__assert_fail@plt+0x5250>
   163ac:	movw	r0, #40428	; 0x9dec
   163b0:	movt	r0, #1
   163b4:	bl	110d4 <gettext@plt>
   163b8:	mov	r7, r0
   163bc:	ldr	r3, [fp, #4]
   163c0:	ldr	r5, [r3]
   163c4:	ldr	r3, [fp, #4]
   163c8:	add	r3, r3, #4
   163cc:	ldr	r6, [r3]
   163d0:	ldr	r3, [fp, #4]
   163d4:	add	r3, r3, #8
   163d8:	ldr	r3, [r3]
   163dc:	ldr	r2, [fp, #4]
   163e0:	add	r2, r2, #12
   163e4:	ldr	r2, [r2]
   163e8:	ldr	r1, [fp, #4]
   163ec:	add	r1, r1, #16
   163f0:	ldr	r1, [r1]
   163f4:	ldr	r0, [fp, #4]
   163f8:	add	r0, r0, #20
   163fc:	ldr	r0, [r0]
   16400:	ldr	ip, [fp, #4]
   16404:	add	ip, ip, #24
   16408:	ldr	ip, [ip]
   1640c:	ldr	lr, [fp, #4]
   16410:	add	lr, lr, #28
   16414:	ldr	lr, [lr]
   16418:	ldr	r4, [fp, #4]
   1641c:	add	r4, r4, #32
   16420:	ldr	r4, [r4]
   16424:	str	r4, [sp, #24]
   16428:	str	lr, [sp, #20]
   1642c:	str	ip, [sp, #16]
   16430:	str	r0, [sp, #12]
   16434:	str	r1, [sp, #8]
   16438:	str	r2, [sp, #4]
   1643c:	str	r3, [sp]
   16440:	mov	r3, r6
   16444:	mov	r2, r5
   16448:	mov	r1, r7
   1644c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16450:	bl	11104 <fprintf@plt>
   16454:	b	1645c <__assert_fail@plt+0x5250>
   16458:	nop	{0}
   1645c:	nop	{0}
   16460:	sub	sp, fp, #20
   16464:	ldrd	r4, [sp]
   16468:	ldrd	r6, [sp, #8]
   1646c:	ldr	fp, [sp, #16]
   16470:	add	sp, sp, #20
   16474:	pop	{pc}		; (ldr pc, [sp], #4)
   16478:	str	fp, [sp, #-8]!
   1647c:	str	lr, [sp, #4]
   16480:	add	fp, sp, #4
   16484:	sub	sp, sp, #32
   16488:	str	r0, [fp, #-16]
   1648c:	str	r1, [fp, #-20]	; 0xffffffec
   16490:	str	r2, [fp, #-24]	; 0xffffffe8
   16494:	str	r3, [fp, #-28]	; 0xffffffe4
   16498:	mov	r3, #0
   1649c:	str	r3, [fp, #-8]
   164a0:	b	164b0 <__assert_fail@plt+0x52a4>
   164a4:	ldr	r3, [fp, #-8]
   164a8:	add	r3, r3, #1
   164ac:	str	r3, [fp, #-8]
   164b0:	ldr	r3, [fp, #-8]
   164b4:	lsl	r3, r3, #2
   164b8:	ldr	r2, [fp, #4]
   164bc:	add	r3, r2, r3
   164c0:	ldr	r3, [r3]
   164c4:	cmp	r3, #0
   164c8:	bne	164a4 <__assert_fail@plt+0x5298>
   164cc:	ldr	r3, [fp, #-8]
   164d0:	str	r3, [sp, #4]
   164d4:	ldr	r3, [fp, #4]
   164d8:	str	r3, [sp]
   164dc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   164e0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   164e4:	ldr	r1, [fp, #-20]	; 0xffffffec
   164e8:	ldr	r0, [fp, #-16]
   164ec:	bl	15ef0 <__assert_fail@plt+0x4ce4>
   164f0:	nop	{0}
   164f4:	sub	sp, fp, #4
   164f8:	ldr	fp, [sp]
   164fc:	add	sp, sp, #4
   16500:	pop	{pc}		; (ldr pc, [sp], #4)
   16504:	str	fp, [sp, #-8]!
   16508:	str	lr, [sp, #4]
   1650c:	add	fp, sp, #4
   16510:	sub	sp, sp, #72	; 0x48
   16514:	str	r0, [fp, #-56]	; 0xffffffc8
   16518:	str	r1, [fp, #-60]	; 0xffffffc4
   1651c:	str	r2, [fp, #-64]	; 0xffffffc0
   16520:	str	r3, [fp, #-68]	; 0xffffffbc
   16524:	mov	r3, #0
   16528:	str	r3, [fp, #-8]
   1652c:	b	1653c <__assert_fail@plt+0x5330>
   16530:	ldr	r3, [fp, #-8]
   16534:	add	r3, r3, #1
   16538:	str	r3, [fp, #-8]
   1653c:	ldr	r3, [fp, #-8]
   16540:	cmp	r3, #9
   16544:	bhi	16588 <__assert_fail@plt+0x537c>
   16548:	ldr	r3, [fp, #4]
   1654c:	add	r2, r3, #4
   16550:	str	r2, [fp, #4]
   16554:	ldr	r2, [r3]
   16558:	ldr	r3, [fp, #-8]
   1655c:	lsl	r3, r3, #2
   16560:	sub	r1, fp, #4
   16564:	add	r3, r1, r3
   16568:	str	r2, [r3, #-44]	; 0xffffffd4
   1656c:	ldr	r3, [fp, #-8]
   16570:	lsl	r3, r3, #2
   16574:	sub	r2, fp, #4
   16578:	add	r3, r2, r3
   1657c:	ldr	r3, [r3, #-44]	; 0xffffffd4
   16580:	cmp	r3, #0
   16584:	bne	16530 <__assert_fail@plt+0x5324>
   16588:	ldr	r3, [fp, #-8]
   1658c:	str	r3, [sp, #4]
   16590:	sub	r3, fp, #48	; 0x30
   16594:	str	r3, [sp]
   16598:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1659c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   165a0:	ldr	r1, [fp, #-60]	; 0xffffffc4
   165a4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   165a8:	bl	15ef0 <__assert_fail@plt+0x4ce4>
   165ac:	nop	{0}
   165b0:	sub	sp, fp, #4
   165b4:	ldr	fp, [sp]
   165b8:	add	sp, sp, #4
   165bc:	pop	{pc}		; (ldr pc, [sp], #4)
   165c0:	push	{r3}		; (str r3, [sp, #-4]!)
   165c4:	str	fp, [sp, #-8]!
   165c8:	str	lr, [sp, #4]
   165cc:	add	fp, sp, #4
   165d0:	sub	sp, sp, #36	; 0x24
   165d4:	str	r0, [fp, #-20]	; 0xffffffec
   165d8:	str	r1, [fp, #-24]	; 0xffffffe8
   165dc:	str	r2, [fp, #-28]	; 0xffffffe4
   165e0:	add	r3, fp, #8
   165e4:	str	r3, [fp, #-12]
   165e8:	ldr	r3, [fp, #-12]
   165ec:	str	r3, [sp]
   165f0:	ldr	r3, [fp, #4]
   165f4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   165f8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   165fc:	ldr	r0, [fp, #-20]	; 0xffffffec
   16600:	bl	16504 <__assert_fail@plt+0x52f8>
   16604:	nop	{0}
   16608:	sub	sp, fp, #4
   1660c:	ldr	fp, [sp]
   16610:	ldr	lr, [sp, #4]
   16614:	add	sp, sp, #8
   16618:	add	sp, sp, #4
   1661c:	bx	lr
   16620:	str	fp, [sp, #-8]!
   16624:	str	lr, [sp, #4]
   16628:	add	fp, sp, #4
   1662c:	movw	r3, #45452	; 0xb18c
   16630:	movt	r3, #2
   16634:	ldr	r3, [r3]
   16638:	mov	r1, r3
   1663c:	mov	r0, #10
   16640:	bl	10fcc <fputc_unlocked@plt>
   16644:	movw	r0, #40488	; 0x9e28
   16648:	movt	r0, #1
   1664c:	bl	110d4 <gettext@plt>
   16650:	mov	r3, r0
   16654:	movw	r1, #40508	; 0x9e3c
   16658:	movt	r1, #1
   1665c:	mov	r0, r3
   16660:	bl	10f6c <printf@plt>
   16664:	movw	r0, #40532	; 0x9e54
   16668:	movt	r0, #1
   1666c:	bl	110d4 <gettext@plt>
   16670:	mov	r3, r0
   16674:	movw	r2, #40552	; 0x9e68
   16678:	movt	r2, #1
   1667c:	movw	r1, #40592	; 0x9e90
   16680:	movt	r1, #1
   16684:	mov	r0, r3
   16688:	bl	10f6c <printf@plt>
   1668c:	movw	r0, #40608	; 0x9ea0
   16690:	movt	r0, #1
   16694:	bl	110d4 <gettext@plt>
   16698:	mov	r3, r0
   1669c:	movw	r1, #40648	; 0x9ec8
   166a0:	movt	r1, #1
   166a4:	mov	r0, r3
   166a8:	bl	10f6c <printf@plt>
   166ac:	nop	{0}
   166b0:	sub	sp, fp, #4
   166b4:	ldr	fp, [sp]
   166b8:	add	sp, sp, #4
   166bc:	pop	{pc}		; (ldr pc, [sp], #4)
   166c0:	str	fp, [sp, #-8]!
   166c4:	str	lr, [sp, #4]
   166c8:	add	fp, sp, #4
   166cc:	sub	sp, sp, #16
   166d0:	str	r0, [fp, #-8]
   166d4:	str	r1, [fp, #-12]
   166d8:	str	r2, [fp, #-16]
   166dc:	ldr	r2, [fp, #-16]
   166e0:	ldr	r1, [fp, #-12]
   166e4:	ldr	r0, [fp, #-8]
   166e8:	bl	168a4 <__assert_fail@plt+0x5698>
   166ec:	mov	r3, r0
   166f0:	mov	r0, r3
   166f4:	sub	sp, fp, #4
   166f8:	ldr	fp, [sp]
   166fc:	add	sp, sp, #4
   16700:	pop	{pc}		; (ldr pc, [sp], #4)
   16704:	str	fp, [sp, #-8]!
   16708:	str	lr, [sp, #4]
   1670c:	add	fp, sp, #4
   16710:	sub	sp, sp, #8
   16714:	str	r0, [fp, #-8]
   16718:	ldr	r3, [fp, #-8]
   1671c:	cmp	r3, #0
   16720:	bne	16728 <__assert_fail@plt+0x551c>
   16724:	bl	16fb4 <__assert_fail@plt+0x5da8>
   16728:	ldr	r3, [fp, #-8]
   1672c:	mov	r0, r3
   16730:	sub	sp, fp, #4
   16734:	ldr	fp, [sp]
   16738:	add	sp, sp, #4
   1673c:	pop	{pc}		; (ldr pc, [sp], #4)
   16740:	str	fp, [sp, #-8]!
   16744:	str	lr, [sp, #4]
   16748:	add	fp, sp, #4
   1674c:	sub	sp, sp, #8
   16750:	str	r0, [fp, #-8]
   16754:	ldr	r0, [fp, #-8]
   16758:	bl	1789c <__assert_fail@plt+0x6690>
   1675c:	mov	r3, r0
   16760:	mov	r0, r3
   16764:	bl	16704 <__assert_fail@plt+0x54f8>
   16768:	mov	r3, r0
   1676c:	mov	r0, r3
   16770:	sub	sp, fp, #4
   16774:	ldr	fp, [sp]
   16778:	add	sp, sp, #4
   1677c:	pop	{pc}		; (ldr pc, [sp], #4)
   16780:	str	fp, [sp, #-8]!
   16784:	str	lr, [sp, #4]
   16788:	add	fp, sp, #4
   1678c:	sub	sp, sp, #8
   16790:	str	r0, [fp, #-8]
   16794:	ldr	r0, [fp, #-8]
   16798:	bl	17e5c <__assert_fail@plt+0x6c50>
   1679c:	mov	r3, r0
   167a0:	mov	r0, r3
   167a4:	bl	16704 <__assert_fail@plt+0x54f8>
   167a8:	mov	r3, r0
   167ac:	mov	r0, r3
   167b0:	sub	sp, fp, #4
   167b4:	ldr	fp, [sp]
   167b8:	add	sp, sp, #4
   167bc:	pop	{pc}		; (ldr pc, [sp], #4)
   167c0:	str	fp, [sp, #-8]!
   167c4:	str	lr, [sp, #4]
   167c8:	add	fp, sp, #4
   167cc:	sub	sp, sp, #8
   167d0:	str	r0, [fp, #-8]
   167d4:	ldr	r0, [fp, #-8]
   167d8:	bl	16740 <__assert_fail@plt+0x5534>
   167dc:	mov	r3, r0
   167e0:	mov	r0, r3
   167e4:	sub	sp, fp, #4
   167e8:	ldr	fp, [sp]
   167ec:	add	sp, sp, #4
   167f0:	pop	{pc}		; (ldr pc, [sp], #4)
   167f4:	str	fp, [sp, #-8]!
   167f8:	str	lr, [sp, #4]
   167fc:	add	fp, sp, #4
   16800:	sub	sp, sp, #16
   16804:	str	r0, [fp, #-16]
   16808:	str	r1, [fp, #-20]	; 0xffffffec
   1680c:	ldr	r1, [fp, #-20]	; 0xffffffec
   16810:	ldr	r0, [fp, #-16]
   16814:	bl	1792c <__assert_fail@plt+0x6720>
   16818:	str	r0, [fp, #-8]
   1681c:	ldr	r3, [fp, #-8]
   16820:	cmp	r3, #0
   16824:	bne	16844 <__assert_fail@plt+0x5638>
   16828:	ldr	r3, [fp, #-16]
   1682c:	cmp	r3, #0
   16830:	beq	16840 <__assert_fail@plt+0x5634>
   16834:	ldr	r3, [fp, #-20]	; 0xffffffec
   16838:	cmp	r3, #0
   1683c:	beq	16844 <__assert_fail@plt+0x5638>
   16840:	bl	16fb4 <__assert_fail@plt+0x5da8>
   16844:	ldr	r3, [fp, #-8]
   16848:	mov	r0, r3
   1684c:	sub	sp, fp, #4
   16850:	ldr	fp, [sp]
   16854:	add	sp, sp, #4
   16858:	pop	{pc}		; (ldr pc, [sp], #4)
   1685c:	str	fp, [sp, #-8]!
   16860:	str	lr, [sp, #4]
   16864:	add	fp, sp, #4
   16868:	sub	sp, sp, #8
   1686c:	str	r0, [fp, #-8]
   16870:	str	r1, [fp, #-12]
   16874:	ldr	r1, [fp, #-12]
   16878:	ldr	r0, [fp, #-8]
   1687c:	bl	17e94 <__assert_fail@plt+0x6c88>
   16880:	mov	r3, r0
   16884:	mov	r0, r3
   16888:	bl	16704 <__assert_fail@plt+0x54f8>
   1688c:	mov	r3, r0
   16890:	mov	r0, r3
   16894:	sub	sp, fp, #4
   16898:	ldr	fp, [sp]
   1689c:	add	sp, sp, #4
   168a0:	pop	{pc}		; (ldr pc, [sp], #4)
   168a4:	str	fp, [sp, #-8]!
   168a8:	str	lr, [sp, #4]
   168ac:	add	fp, sp, #4
   168b0:	sub	sp, sp, #24
   168b4:	str	r0, [fp, #-16]
   168b8:	str	r1, [fp, #-20]	; 0xffffffec
   168bc:	str	r2, [fp, #-24]	; 0xffffffe8
   168c0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   168c4:	ldr	r1, [fp, #-20]	; 0xffffffec
   168c8:	ldr	r0, [fp, #-16]
   168cc:	bl	184f0 <__assert_fail@plt+0x72e4>
   168d0:	str	r0, [fp, #-8]
   168d4:	ldr	r3, [fp, #-8]
   168d8:	cmp	r3, #0
   168dc:	bne	16908 <__assert_fail@plt+0x56fc>
   168e0:	ldr	r3, [fp, #-16]
   168e4:	cmp	r3, #0
   168e8:	beq	16904 <__assert_fail@plt+0x56f8>
   168ec:	ldr	r3, [fp, #-20]	; 0xffffffec
   168f0:	cmp	r3, #0
   168f4:	beq	16908 <__assert_fail@plt+0x56fc>
   168f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   168fc:	cmp	r3, #0
   16900:	beq	16908 <__assert_fail@plt+0x56fc>
   16904:	bl	16fb4 <__assert_fail@plt+0x5da8>
   16908:	ldr	r3, [fp, #-8]
   1690c:	mov	r0, r3
   16910:	sub	sp, fp, #4
   16914:	ldr	fp, [sp]
   16918:	add	sp, sp, #4
   1691c:	pop	{pc}		; (ldr pc, [sp], #4)
   16920:	str	fp, [sp, #-8]!
   16924:	str	lr, [sp, #4]
   16928:	add	fp, sp, #4
   1692c:	sub	sp, sp, #16
   16930:	str	r0, [fp, #-8]
   16934:	str	r1, [fp, #-12]
   16938:	str	r2, [fp, #-16]
   1693c:	ldr	r2, [fp, #-16]
   16940:	ldr	r1, [fp, #-12]
   16944:	ldr	r0, [fp, #-8]
   16948:	bl	17f34 <__assert_fail@plt+0x6d28>
   1694c:	mov	r3, r0
   16950:	mov	r0, r3
   16954:	bl	16704 <__assert_fail@plt+0x54f8>
   16958:	mov	r3, r0
   1695c:	mov	r0, r3
   16960:	sub	sp, fp, #4
   16964:	ldr	fp, [sp]
   16968:	add	sp, sp, #4
   1696c:	pop	{pc}		; (ldr pc, [sp], #4)
   16970:	str	fp, [sp, #-8]!
   16974:	str	lr, [sp, #4]
   16978:	add	fp, sp, #4
   1697c:	sub	sp, sp, #8
   16980:	str	r0, [fp, #-8]
   16984:	str	r1, [fp, #-12]
   16988:	ldr	r2, [fp, #-12]
   1698c:	ldr	r1, [fp, #-8]
   16990:	mov	r0, #0
   16994:	bl	168a4 <__assert_fail@plt+0x5698>
   16998:	mov	r3, r0
   1699c:	mov	r0, r3
   169a0:	sub	sp, fp, #4
   169a4:	ldr	fp, [sp]
   169a8:	add	sp, sp, #4
   169ac:	pop	{pc}		; (ldr pc, [sp], #4)
   169b0:	str	fp, [sp, #-8]!
   169b4:	str	lr, [sp, #4]
   169b8:	add	fp, sp, #4
   169bc:	sub	sp, sp, #8
   169c0:	str	r0, [fp, #-8]
   169c4:	str	r1, [fp, #-12]
   169c8:	ldr	r2, [fp, #-12]
   169cc:	ldr	r1, [fp, #-8]
   169d0:	mov	r0, #0
   169d4:	bl	16920 <__assert_fail@plt+0x5714>
   169d8:	mov	r3, r0
   169dc:	mov	r0, r3
   169e0:	sub	sp, fp, #4
   169e4:	ldr	fp, [sp]
   169e8:	add	sp, sp, #4
   169ec:	pop	{pc}		; (ldr pc, [sp], #4)
   169f0:	str	fp, [sp, #-8]!
   169f4:	str	lr, [sp, #4]
   169f8:	add	fp, sp, #4
   169fc:	sub	sp, sp, #8
   16a00:	str	r0, [fp, #-8]
   16a04:	str	r1, [fp, #-12]
   16a08:	mov	r2, #1
   16a0c:	ldr	r1, [fp, #-12]
   16a10:	ldr	r0, [fp, #-8]
   16a14:	bl	16a30 <__assert_fail@plt+0x5824>
   16a18:	mov	r3, r0
   16a1c:	mov	r0, r3
   16a20:	sub	sp, fp, #4
   16a24:	ldr	fp, [sp]
   16a28:	add	sp, sp, #4
   16a2c:	pop	{pc}		; (ldr pc, [sp], #4)
   16a30:	str	fp, [sp, #-8]!
   16a34:	str	lr, [sp, #4]
   16a38:	add	fp, sp, #4
   16a3c:	sub	sp, sp, #24
   16a40:	str	r0, [fp, #-16]
   16a44:	str	r1, [fp, #-20]	; 0xffffffec
   16a48:	str	r2, [fp, #-24]	; 0xffffffe8
   16a4c:	ldr	r3, [fp, #-20]	; 0xffffffec
   16a50:	ldr	r3, [r3]
   16a54:	str	r3, [fp, #-8]
   16a58:	ldr	r3, [fp, #-16]
   16a5c:	cmp	r3, #0
   16a60:	bne	16aa8 <__assert_fail@plt+0x589c>
   16a64:	ldr	r3, [fp, #-8]
   16a68:	cmp	r3, #0
   16a6c:	bne	16ae4 <__assert_fail@plt+0x58d8>
   16a70:	mov	r2, #64	; 0x40
   16a74:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16a78:	udiv	r3, r2, r3
   16a7c:	str	r3, [fp, #-8]
   16a80:	ldr	r3, [fp, #-8]
   16a84:	cmp	r3, #0
   16a88:	moveq	r3, #1
   16a8c:	movne	r3, #0
   16a90:	uxtb	r3, r3
   16a94:	mov	r2, r3
   16a98:	ldr	r3, [fp, #-8]
   16a9c:	add	r3, r2, r3
   16aa0:	str	r3, [fp, #-8]
   16aa4:	b	16ae4 <__assert_fail@plt+0x58d8>
   16aa8:	ldr	r2, [fp, #-8]
   16aac:	ldr	r3, [fp, #-8]
   16ab0:	lsr	r3, r3, #1
   16ab4:	add	r3, r3, #1
   16ab8:	mov	r1, #0
   16abc:	adds	r3, r2, r3
   16ac0:	bcc	16ac8 <__assert_fail@plt+0x58bc>
   16ac4:	mov	r1, #1
   16ac8:	str	r3, [fp, #-8]
   16acc:	mov	r3, r1
   16ad0:	and	r3, r3, #1
   16ad4:	uxtb	r3, r3
   16ad8:	cmp	r3, #0
   16adc:	beq	16ae4 <__assert_fail@plt+0x58d8>
   16ae0:	bl	16fb4 <__assert_fail@plt+0x5da8>
   16ae4:	ldr	r3, [fp, #-8]
   16ae8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16aec:	mov	r1, r3
   16af0:	ldr	r0, [fp, #-16]
   16af4:	bl	168a4 <__assert_fail@plt+0x5698>
   16af8:	str	r0, [fp, #-16]
   16afc:	ldr	r2, [fp, #-8]
   16b00:	ldr	r3, [fp, #-20]	; 0xffffffec
   16b04:	str	r2, [r3]
   16b08:	ldr	r3, [fp, #-16]
   16b0c:	mov	r0, r3
   16b10:	sub	sp, fp, #4
   16b14:	ldr	fp, [sp]
   16b18:	add	sp, sp, #4
   16b1c:	pop	{pc}		; (ldr pc, [sp], #4)
   16b20:	str	fp, [sp, #-8]!
   16b24:	str	lr, [sp, #4]
   16b28:	add	fp, sp, #4
   16b2c:	sub	sp, sp, #32
   16b30:	str	r0, [fp, #-24]	; 0xffffffe8
   16b34:	str	r1, [fp, #-28]	; 0xffffffe4
   16b38:	str	r2, [fp, #-32]	; 0xffffffe0
   16b3c:	str	r3, [fp, #-36]	; 0xffffffdc
   16b40:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16b44:	ldr	r3, [r3]
   16b48:	str	r3, [fp, #-8]
   16b4c:	ldr	r3, [fp, #-8]
   16b50:	asr	r3, r3, #1
   16b54:	mov	r1, #0
   16b58:	ldr	r2, [fp, #-8]
   16b5c:	adds	r3, r2, r3
   16b60:	bvc	16b68 <__assert_fail@plt+0x595c>
   16b64:	mov	r1, #1
   16b68:	str	r3, [fp, #-16]
   16b6c:	mov	r3, r1
   16b70:	and	r3, r3, #1
   16b74:	uxtb	r3, r3
   16b78:	cmp	r3, #0
   16b7c:	beq	16b88 <__assert_fail@plt+0x597c>
   16b80:	mvn	r3, #-2147483648	; 0x80000000
   16b84:	str	r3, [fp, #-16]
   16b88:	ldr	r3, [fp, #-36]	; 0xffffffdc
   16b8c:	cmp	r3, #0
   16b90:	blt	16bac <__assert_fail@plt+0x59a0>
   16b94:	ldr	r3, [fp, #-16]
   16b98:	ldr	r2, [fp, #-36]	; 0xffffffdc
   16b9c:	cmp	r2, r3
   16ba0:	bge	16bac <__assert_fail@plt+0x59a0>
   16ba4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   16ba8:	str	r3, [fp, #-16]
   16bac:	ldr	r2, [fp, #-16]
   16bb0:	mov	lr, #0
   16bb4:	ldr	r3, [fp, #4]
   16bb8:	smull	r2, r3, r2, r3
   16bbc:	mov	r0, #0
   16bc0:	mov	r1, #0
   16bc4:	mov	r0, r3
   16bc8:	asr	r1, r3, #31
   16bcc:	asr	ip, r2, #31
   16bd0:	cmp	ip, r0
   16bd4:	beq	16bdc <__assert_fail@plt+0x59d0>
   16bd8:	mov	lr, #1
   16bdc:	mov	r3, r2
   16be0:	str	r3, [fp, #-20]	; 0xffffffec
   16be4:	mov	r3, lr
   16be8:	and	r3, r3, #1
   16bec:	uxtb	r3, r3
   16bf0:	cmp	r3, #0
   16bf4:	beq	16c00 <__assert_fail@plt+0x59f4>
   16bf8:	mvn	r3, #-2147483648	; 0x80000000
   16bfc:	b	16c18 <__assert_fail@plt+0x5a0c>
   16c00:	ldr	r3, [fp, #-20]	; 0xffffffec
   16c04:	cmp	r3, #63	; 0x3f
   16c08:	bgt	16c14 <__assert_fail@plt+0x5a08>
   16c0c:	mov	r3, #64	; 0x40
   16c10:	b	16c18 <__assert_fail@plt+0x5a0c>
   16c14:	mov	r3, #0
   16c18:	str	r3, [fp, #-12]
   16c1c:	ldr	r3, [fp, #-12]
   16c20:	cmp	r3, #0
   16c24:	beq	16c5c <__assert_fail@plt+0x5a50>
   16c28:	ldr	r2, [fp, #-12]
   16c2c:	ldr	r3, [fp, #4]
   16c30:	sdiv	r3, r2, r3
   16c34:	str	r3, [fp, #-16]
   16c38:	ldr	r3, [fp, #-12]
   16c3c:	ldr	r2, [fp, #4]
   16c40:	sdiv	r2, r3, r2
   16c44:	ldr	r1, [fp, #4]
   16c48:	mul	r2, r1, r2
   16c4c:	sub	r3, r3, r2
   16c50:	ldr	r2, [fp, #-12]
   16c54:	sub	r3, r2, r3
   16c58:	str	r3, [fp, #-20]	; 0xffffffec
   16c5c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16c60:	cmp	r3, #0
   16c64:	bne	16c74 <__assert_fail@plt+0x5a68>
   16c68:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16c6c:	mov	r2, #0
   16c70:	str	r2, [r3]
   16c74:	ldr	r2, [fp, #-16]
   16c78:	ldr	r3, [fp, #-8]
   16c7c:	sub	r3, r2, r3
   16c80:	ldr	r2, [fp, #-32]	; 0xffffffe0
   16c84:	cmp	r2, r3
   16c88:	ble	16d28 <__assert_fail@plt+0x5b1c>
   16c8c:	mov	r1, #0
   16c90:	ldr	r2, [fp, #-8]
   16c94:	ldr	r3, [fp, #-32]	; 0xffffffe0
   16c98:	adds	r3, r2, r3
   16c9c:	bvc	16ca4 <__assert_fail@plt+0x5a98>
   16ca0:	mov	r1, #1
   16ca4:	str	r3, [fp, #-16]
   16ca8:	mov	r3, r1
   16cac:	and	r3, r3, #1
   16cb0:	uxtb	r3, r3
   16cb4:	cmp	r3, #0
   16cb8:	bne	16d24 <__assert_fail@plt+0x5b18>
   16cbc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   16cc0:	cmp	r3, #0
   16cc4:	blt	16cd8 <__assert_fail@plt+0x5acc>
   16cc8:	ldr	r3, [fp, #-16]
   16ccc:	ldr	r2, [fp, #-36]	; 0xffffffdc
   16cd0:	cmp	r2, r3
   16cd4:	blt	16d24 <__assert_fail@plt+0x5b18>
   16cd8:	ldr	r2, [fp, #-16]
   16cdc:	mov	lr, #0
   16ce0:	ldr	r3, [fp, #4]
   16ce4:	smull	r2, r3, r2, r3
   16ce8:	mov	r0, #0
   16cec:	mov	r1, #0
   16cf0:	mov	r0, r3
   16cf4:	asr	r1, r3, #31
   16cf8:	asr	ip, r2, #31
   16cfc:	cmp	ip, r0
   16d00:	beq	16d08 <__assert_fail@plt+0x5afc>
   16d04:	mov	lr, #1
   16d08:	mov	r3, r2
   16d0c:	str	r3, [fp, #-20]	; 0xffffffec
   16d10:	mov	r3, lr
   16d14:	and	r3, r3, #1
   16d18:	uxtb	r3, r3
   16d1c:	cmp	r3, #0
   16d20:	beq	16d28 <__assert_fail@plt+0x5b1c>
   16d24:	bl	16fb4 <__assert_fail@plt+0x5da8>
   16d28:	ldr	r3, [fp, #-20]	; 0xffffffec
   16d2c:	mov	r1, r3
   16d30:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16d34:	bl	167f4 <__assert_fail@plt+0x55e8>
   16d38:	str	r0, [fp, #-24]	; 0xffffffe8
   16d3c:	ldr	r2, [fp, #-16]
   16d40:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16d44:	str	r2, [r3]
   16d48:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16d4c:	mov	r0, r3
   16d50:	sub	sp, fp, #4
   16d54:	ldr	fp, [sp]
   16d58:	add	sp, sp, #4
   16d5c:	pop	{pc}		; (ldr pc, [sp], #4)
   16d60:	str	fp, [sp, #-8]!
   16d64:	str	lr, [sp, #4]
   16d68:	add	fp, sp, #4
   16d6c:	sub	sp, sp, #8
   16d70:	str	r0, [fp, #-8]
   16d74:	mov	r1, #1
   16d78:	ldr	r0, [fp, #-8]
   16d7c:	bl	16dd0 <__assert_fail@plt+0x5bc4>
   16d80:	mov	r3, r0
   16d84:	mov	r0, r3
   16d88:	sub	sp, fp, #4
   16d8c:	ldr	fp, [sp]
   16d90:	add	sp, sp, #4
   16d94:	pop	{pc}		; (ldr pc, [sp], #4)
   16d98:	str	fp, [sp, #-8]!
   16d9c:	str	lr, [sp, #4]
   16da0:	add	fp, sp, #4
   16da4:	sub	sp, sp, #8
   16da8:	str	r0, [fp, #-8]
   16dac:	mov	r1, #1
   16db0:	ldr	r0, [fp, #-8]
   16db4:	bl	16e18 <__assert_fail@plt+0x5c0c>
   16db8:	mov	r3, r0
   16dbc:	mov	r0, r3
   16dc0:	sub	sp, fp, #4
   16dc4:	ldr	fp, [sp]
   16dc8:	add	sp, sp, #4
   16dcc:	pop	{pc}		; (ldr pc, [sp], #4)
   16dd0:	str	fp, [sp, #-8]!
   16dd4:	str	lr, [sp, #4]
   16dd8:	add	fp, sp, #4
   16ddc:	sub	sp, sp, #8
   16de0:	str	r0, [fp, #-8]
   16de4:	str	r1, [fp, #-12]
   16de8:	ldr	r1, [fp, #-12]
   16dec:	ldr	r0, [fp, #-8]
   16df0:	bl	177cc <__assert_fail@plt+0x65c0>
   16df4:	mov	r3, r0
   16df8:	mov	r0, r3
   16dfc:	bl	16704 <__assert_fail@plt+0x54f8>
   16e00:	mov	r3, r0
   16e04:	mov	r0, r3
   16e08:	sub	sp, fp, #4
   16e0c:	ldr	fp, [sp]
   16e10:	add	sp, sp, #4
   16e14:	pop	{pc}		; (ldr pc, [sp], #4)
   16e18:	str	fp, [sp, #-8]!
   16e1c:	str	lr, [sp, #4]
   16e20:	add	fp, sp, #4
   16e24:	sub	sp, sp, #8
   16e28:	str	r0, [fp, #-8]
   16e2c:	str	r1, [fp, #-12]
   16e30:	ldr	r1, [fp, #-12]
   16e34:	ldr	r0, [fp, #-8]
   16e38:	bl	17ef0 <__assert_fail@plt+0x6ce4>
   16e3c:	mov	r3, r0
   16e40:	mov	r0, r3
   16e44:	bl	16704 <__assert_fail@plt+0x54f8>
   16e48:	mov	r3, r0
   16e4c:	mov	r0, r3
   16e50:	sub	sp, fp, #4
   16e54:	ldr	fp, [sp]
   16e58:	add	sp, sp, #4
   16e5c:	pop	{pc}		; (ldr pc, [sp], #4)
   16e60:	str	fp, [sp, #-8]!
   16e64:	str	lr, [sp, #4]
   16e68:	add	fp, sp, #4
   16e6c:	sub	sp, sp, #8
   16e70:	str	r0, [fp, #-8]
   16e74:	str	r1, [fp, #-12]
   16e78:	ldr	r0, [fp, #-12]
   16e7c:	bl	16740 <__assert_fail@plt+0x5534>
   16e80:	mov	r3, r0
   16e84:	ldr	r2, [fp, #-12]
   16e88:	ldr	r1, [fp, #-8]
   16e8c:	mov	r0, r3
   16e90:	bl	10fa8 <memcpy@plt>
   16e94:	mov	r3, r0
   16e98:	mov	r0, r3
   16e9c:	sub	sp, fp, #4
   16ea0:	ldr	fp, [sp]
   16ea4:	add	sp, sp, #4
   16ea8:	pop	{pc}		; (ldr pc, [sp], #4)
   16eac:	str	fp, [sp, #-8]!
   16eb0:	str	lr, [sp, #4]
   16eb4:	add	fp, sp, #4
   16eb8:	sub	sp, sp, #8
   16ebc:	str	r0, [fp, #-8]
   16ec0:	str	r1, [fp, #-12]
   16ec4:	ldr	r0, [fp, #-12]
   16ec8:	bl	16780 <__assert_fail@plt+0x5574>
   16ecc:	mov	r3, r0
   16ed0:	mov	r0, r3
   16ed4:	ldr	r3, [fp, #-12]
   16ed8:	mov	r2, r3
   16edc:	ldr	r1, [fp, #-8]
   16ee0:	bl	10fa8 <memcpy@plt>
   16ee4:	mov	r3, r0
   16ee8:	mov	r0, r3
   16eec:	sub	sp, fp, #4
   16ef0:	ldr	fp, [sp]
   16ef4:	add	sp, sp, #4
   16ef8:	pop	{pc}		; (ldr pc, [sp], #4)
   16efc:	str	fp, [sp, #-8]!
   16f00:	str	lr, [sp, #4]
   16f04:	add	fp, sp, #4
   16f08:	sub	sp, sp, #16
   16f0c:	str	r0, [fp, #-16]
   16f10:	str	r1, [fp, #-20]	; 0xffffffec
   16f14:	ldr	r3, [fp, #-20]	; 0xffffffec
   16f18:	add	r3, r3, #1
   16f1c:	mov	r0, r3
   16f20:	bl	16780 <__assert_fail@plt+0x5574>
   16f24:	mov	r3, r0
   16f28:	str	r3, [fp, #-8]
   16f2c:	ldr	r3, [fp, #-20]	; 0xffffffec
   16f30:	ldr	r2, [fp, #-8]
   16f34:	add	r3, r2, r3
   16f38:	mov	r2, #0
   16f3c:	strb	r2, [r3]
   16f40:	ldr	r3, [fp, #-20]	; 0xffffffec
   16f44:	mov	r2, r3
   16f48:	ldr	r1, [fp, #-16]
   16f4c:	ldr	r0, [fp, #-8]
   16f50:	bl	10fa8 <memcpy@plt>
   16f54:	mov	r3, r0
   16f58:	mov	r0, r3
   16f5c:	sub	sp, fp, #4
   16f60:	ldr	fp, [sp]
   16f64:	add	sp, sp, #4
   16f68:	pop	{pc}		; (ldr pc, [sp], #4)
   16f6c:	str	fp, [sp, #-8]!
   16f70:	str	lr, [sp, #4]
   16f74:	add	fp, sp, #4
   16f78:	sub	sp, sp, #8
   16f7c:	str	r0, [fp, #-8]
   16f80:	ldr	r0, [fp, #-8]
   16f84:	bl	110ec <strlen@plt>
   16f88:	mov	r3, r0
   16f8c:	add	r3, r3, #1
   16f90:	mov	r1, r3
   16f94:	ldr	r0, [fp, #-8]
   16f98:	bl	16e60 <__assert_fail@plt+0x5c54>
   16f9c:	mov	r3, r0
   16fa0:	mov	r0, r3
   16fa4:	sub	sp, fp, #4
   16fa8:	ldr	fp, [sp]
   16fac:	add	sp, sp, #4
   16fb0:	pop	{pc}		; (ldr pc, [sp], #4)
   16fb4:	strd	r4, [sp, #-16]!
   16fb8:	str	fp, [sp, #8]
   16fbc:	str	lr, [sp, #12]
   16fc0:	add	fp, sp, #12
   16fc4:	movw	r3, #45348	; 0xb124
   16fc8:	movt	r3, #2
   16fcc:	ldr	r4, [r3]
   16fd0:	movw	r0, #40728	; 0x9f18
   16fd4:	movt	r0, #1
   16fd8:	bl	110d4 <gettext@plt>
   16fdc:	mov	r3, r0
   16fe0:	movw	r2, #40748	; 0x9f2c
   16fe4:	movt	r2, #1
   16fe8:	mov	r1, #0
   16fec:	mov	r0, r4
   16ff0:	bl	11068 <error@plt>
   16ff4:	bl	111dc <abort@plt>
   16ff8:	str	fp, [sp, #-8]!
   16ffc:	str	lr, [sp, #4]
   17000:	add	fp, sp, #4
   17004:	sub	sp, sp, #24
   17008:	str	r0, [fp, #-16]
   1700c:	str	r1, [fp, #-20]	; 0xffffffec
   17010:	str	r2, [fp, #-24]	; 0xffffffe8
   17014:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17018:	ldr	r1, [fp, #-20]	; 0xffffffec
   1701c:	ldr	r0, [fp, #-16]
   17020:	bl	1815c <__assert_fail@plt+0x6f50>
   17024:	str	r0, [fp, #-8]
   17028:	ldr	r3, [fp, #-8]
   1702c:	cmn	r3, #1
   17030:	bne	1704c <__assert_fail@plt+0x5e40>
   17034:	bl	11110 <__errno_location@plt>
   17038:	mov	r3, r0
   1703c:	ldr	r3, [r3]
   17040:	cmp	r3, #12
   17044:	bne	1704c <__assert_fail@plt+0x5e40>
   17048:	bl	16fb4 <__assert_fail@plt+0x5da8>
   1704c:	ldr	r3, [fp, #-8]
   17050:	mov	r0, r3
   17054:	sub	sp, fp, #4
   17058:	ldr	fp, [sp]
   1705c:	add	sp, sp, #4
   17060:	pop	{pc}		; (ldr pc, [sp], #4)
   17064:	push	{fp}		; (str fp, [sp, #-4]!)
   17068:	add	fp, sp, #0
   1706c:	sub	sp, sp, #20
   17070:	str	r0, [fp, #-16]
   17074:	str	r1, [fp, #-20]	; 0xffffffec
   17078:	ldr	r3, [fp, #-16]
   1707c:	ldr	r3, [r3]
   17080:	mov	ip, #0
   17084:	ldr	r2, [fp, #-20]	; 0xffffffec
   17088:	cmp	r2, #0
   1708c:	bge	1709c <__assert_fail@plt+0x5e90>
   17090:	cmp	r3, #0
   17094:	beq	1709c <__assert_fail@plt+0x5e90>
   17098:	mov	ip, #1
   1709c:	ldr	r2, [fp, #-20]	; 0xffffffec
   170a0:	umull	r0, r1, r3, r2
   170a4:	mov	r2, #0
   170a8:	mov	r3, #0
   170ac:	mov	r2, r1
   170b0:	mov	r3, #0
   170b4:	cmp	r2, #0
   170b8:	beq	170c0 <__assert_fail@plt+0x5eb4>
   170bc:	mov	ip, #1
   170c0:	mov	r3, r0
   170c4:	str	r3, [fp, #-8]
   170c8:	mov	r3, ip
   170cc:	and	r3, r3, #1
   170d0:	uxtb	r3, r3
   170d4:	cmp	r3, #0
   170d8:	beq	170f0 <__assert_fail@plt+0x5ee4>
   170dc:	ldr	r3, [fp, #-16]
   170e0:	mvn	r2, #0
   170e4:	str	r2, [r3]
   170e8:	mov	r3, #1
   170ec:	b	17100 <__assert_fail@plt+0x5ef4>
   170f0:	ldr	r2, [fp, #-8]
   170f4:	ldr	r3, [fp, #-16]
   170f8:	str	r2, [r3]
   170fc:	mov	r3, #0
   17100:	mov	r0, r3
   17104:	add	sp, fp, #0
   17108:	pop	{fp}		; (ldr fp, [sp], #4)
   1710c:	bx	lr
   17110:	str	fp, [sp, #-8]!
   17114:	str	lr, [sp, #4]
   17118:	add	fp, sp, #4
   1711c:	sub	sp, sp, #24
   17120:	str	r0, [fp, #-16]
   17124:	str	r1, [fp, #-20]	; 0xffffffec
   17128:	str	r2, [fp, #-24]	; 0xffffffe8
   1712c:	mov	r3, #0
   17130:	str	r3, [fp, #-8]
   17134:	b	17154 <__assert_fail@plt+0x5f48>
   17138:	ldr	r1, [fp, #-20]	; 0xffffffec
   1713c:	ldr	r0, [fp, #-16]
   17140:	bl	17064 <__assert_fail@plt+0x5e58>
   17144:	mov	r2, r0
   17148:	ldr	r3, [fp, #-8]
   1714c:	orr	r3, r3, r2
   17150:	str	r3, [fp, #-8]
   17154:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17158:	sub	r2, r3, #1
   1715c:	str	r2, [fp, #-24]	; 0xffffffe8
   17160:	cmp	r3, #0
   17164:	bne	17138 <__assert_fail@plt+0x5f2c>
   17168:	ldr	r3, [fp, #-8]
   1716c:	mov	r0, r3
   17170:	sub	sp, fp, #4
   17174:	ldr	fp, [sp]
   17178:	add	sp, sp, #4
   1717c:	pop	{pc}		; (ldr pc, [sp], #4)
   17180:	str	fp, [sp, #-8]!
   17184:	str	lr, [sp, #4]
   17188:	add	fp, sp, #4
   1718c:	sub	sp, sp, #56	; 0x38
   17190:	str	r0, [fp, #-48]	; 0xffffffd0
   17194:	str	r1, [fp, #-52]	; 0xffffffcc
   17198:	str	r2, [fp, #-56]	; 0xffffffc8
   1719c:	str	r3, [fp, #-60]	; 0xffffffc4
   171a0:	mov	r3, #0
   171a4:	str	r3, [fp, #-8]
   171a8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   171ac:	cmp	r3, #0
   171b0:	blt	171c0 <__assert_fail@plt+0x5fb4>
   171b4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   171b8:	cmp	r3, #36	; 0x24
   171bc:	ble	171e0 <__assert_fail@plt+0x5fd4>
   171c0:	movw	r3, #40808	; 0x9f68
   171c4:	movt	r3, #1
   171c8:	mov	r2, #85	; 0x55
   171cc:	movw	r1, #40752	; 0x9f30
   171d0:	movt	r1, #1
   171d4:	movw	r0, #40768	; 0x9f40
   171d8:	movt	r0, #1
   171dc:	bl	1120c <__assert_fail@plt>
   171e0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   171e4:	cmp	r3, #0
   171e8:	bne	171f4 <__assert_fail@plt+0x5fe8>
   171ec:	sub	r3, fp, #36	; 0x24
   171f0:	b	171f8 <__assert_fail@plt+0x5fec>
   171f4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   171f8:	str	r3, [fp, #-32]	; 0xffffffe0
   171fc:	bl	11110 <__errno_location@plt>
   17200:	mov	r2, r0
   17204:	mov	r3, #0
   17208:	str	r3, [r2]
   1720c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   17210:	str	r3, [fp, #-12]
   17214:	ldr	r3, [fp, #-12]
   17218:	ldrb	r3, [r3]
   1721c:	strb	r3, [fp, #-13]
   17220:	b	1723c <__assert_fail@plt+0x6030>
   17224:	ldr	r3, [fp, #-12]
   17228:	add	r3, r3, #1
   1722c:	str	r3, [fp, #-12]
   17230:	ldr	r3, [fp, #-12]
   17234:	ldrb	r3, [r3]
   17238:	strb	r3, [fp, #-13]
   1723c:	bl	110bc <__ctype_b_loc@plt>
   17240:	mov	r3, r0
   17244:	ldr	r2, [r3]
   17248:	ldrb	r3, [fp, #-13]
   1724c:	lsl	r3, r3, #1
   17250:	add	r3, r2, r3
   17254:	ldrh	r3, [r3]
   17258:	and	r3, r3, #8192	; 0x2000
   1725c:	cmp	r3, #0
   17260:	bne	17224 <__assert_fail@plt+0x6018>
   17264:	ldrb	r3, [fp, #-13]
   17268:	cmp	r3, #45	; 0x2d
   1726c:	bne	17278 <__assert_fail@plt+0x606c>
   17270:	mov	r3, #4
   17274:	b	177b8 <__assert_fail@plt+0x65ac>
   17278:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1727c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   17280:	ldr	r0, [fp, #-48]	; 0xffffffd0
   17284:	bl	110e0 <strtoul@plt>
   17288:	mov	r3, r0
   1728c:	str	r3, [fp, #-40]	; 0xffffffd8
   17290:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17294:	ldr	r3, [r3]
   17298:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1729c:	cmp	r2, r3
   172a0:	bne	172fc <__assert_fail@plt+0x60f0>
   172a4:	ldr	r3, [fp, #4]
   172a8:	cmp	r3, #0
   172ac:	beq	172f4 <__assert_fail@plt+0x60e8>
   172b0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   172b4:	ldr	r3, [r3]
   172b8:	ldrb	r3, [r3]
   172bc:	cmp	r3, #0
   172c0:	beq	172f4 <__assert_fail@plt+0x60e8>
   172c4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   172c8:	ldr	r3, [r3]
   172cc:	ldrb	r3, [r3]
   172d0:	mov	r1, r3
   172d4:	ldr	r0, [fp, #4]
   172d8:	bl	110f8 <strchr@plt>
   172dc:	mov	r3, r0
   172e0:	cmp	r3, #0
   172e4:	beq	172f4 <__assert_fail@plt+0x60e8>
   172e8:	mov	r3, #1
   172ec:	str	r3, [fp, #-40]	; 0xffffffd8
   172f0:	b	17334 <__assert_fail@plt+0x6128>
   172f4:	mov	r3, #4
   172f8:	b	177b8 <__assert_fail@plt+0x65ac>
   172fc:	bl	11110 <__errno_location@plt>
   17300:	mov	r3, r0
   17304:	ldr	r3, [r3]
   17308:	cmp	r3, #0
   1730c:	beq	17334 <__assert_fail@plt+0x6128>
   17310:	bl	11110 <__errno_location@plt>
   17314:	mov	r3, r0
   17318:	ldr	r3, [r3]
   1731c:	cmp	r3, #34	; 0x22
   17320:	beq	1732c <__assert_fail@plt+0x6120>
   17324:	mov	r3, #4
   17328:	b	177b8 <__assert_fail@plt+0x65ac>
   1732c:	mov	r3, #1
   17330:	str	r3, [fp, #-8]
   17334:	ldr	r3, [fp, #4]
   17338:	cmp	r3, #0
   1733c:	bne	17354 <__assert_fail@plt+0x6148>
   17340:	ldr	r2, [fp, #-40]	; 0xffffffd8
   17344:	ldr	r3, [fp, #-60]	; 0xffffffc4
   17348:	str	r2, [r3]
   1734c:	ldr	r3, [fp, #-8]
   17350:	b	177b8 <__assert_fail@plt+0x65ac>
   17354:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17358:	ldr	r3, [r3]
   1735c:	ldrb	r3, [r3]
   17360:	cmp	r3, #0
   17364:	beq	177a8 <__assert_fail@plt+0x659c>
   17368:	mov	r3, #1024	; 0x400
   1736c:	str	r3, [fp, #-20]	; 0xffffffec
   17370:	mov	r3, #1
   17374:	str	r3, [fp, #-24]	; 0xffffffe8
   17378:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1737c:	ldr	r3, [r3]
   17380:	ldrb	r3, [r3]
   17384:	mov	r1, r3
   17388:	ldr	r0, [fp, #4]
   1738c:	bl	110f8 <strchr@plt>
   17390:	mov	r3, r0
   17394:	cmp	r3, #0
   17398:	bne	173b4 <__assert_fail@plt+0x61a8>
   1739c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   173a0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   173a4:	str	r2, [r3]
   173a8:	ldr	r3, [fp, #-8]
   173ac:	orr	r3, r3, #2
   173b0:	b	177b8 <__assert_fail@plt+0x65ac>
   173b4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   173b8:	ldr	r3, [r3]
   173bc:	ldrb	r3, [r3]
   173c0:	sub	r3, r3, #69	; 0x45
   173c4:	cmp	r3, #47	; 0x2f
   173c8:	ldrls	pc, [pc, r3, lsl #2]
   173cc:	b	17520 <__assert_fail@plt+0x6314>
   173d0:	muleq	r1, r0, r4
   173d4:	andeq	r7, r1, r0, lsr #10
   173d8:	muleq	r1, r0, r4
   173dc:	andeq	r7, r1, r0, lsr #10
   173e0:	andeq	r7, r1, r0, lsr #10
   173e4:	andeq	r7, r1, r0, lsr #10
   173e8:	muleq	r1, r0, r4
   173ec:	andeq	r7, r1, r0, lsr #10
   173f0:	muleq	r1, r0, r4
   173f4:	andeq	r7, r1, r0, lsr #10
   173f8:	andeq	r7, r1, r0, lsr #10
   173fc:	muleq	r1, r0, r4
   17400:	andeq	r7, r1, r0, lsr #10
   17404:	andeq	r7, r1, r0, lsr #10
   17408:	andeq	r7, r1, r0, lsr #10
   1740c:	muleq	r1, r0, r4
   17410:	andeq	r7, r1, r0, lsr #10
   17414:	andeq	r7, r1, r0, lsr #10
   17418:	andeq	r7, r1, r0, lsr #10
   1741c:	andeq	r7, r1, r0, lsr #10
   17420:	muleq	r1, r0, r4
   17424:	muleq	r1, r0, r4
   17428:	andeq	r7, r1, r0, lsr #10
   1742c:	andeq	r7, r1, r0, lsr #10
   17430:	andeq	r7, r1, r0, lsr #10
   17434:	andeq	r7, r1, r0, lsr #10
   17438:	andeq	r7, r1, r0, lsr #10
   1743c:	andeq	r7, r1, r0, lsr #10
   17440:	andeq	r7, r1, r0, lsr #10
   17444:	andeq	r7, r1, r0, lsr #10
   17448:	andeq	r7, r1, r0, lsr #10
   1744c:	andeq	r7, r1, r0, lsr #10
   17450:	andeq	r7, r1, r0, lsr #10
   17454:	andeq	r7, r1, r0, lsr #10
   17458:	muleq	r1, r0, r4
   1745c:	andeq	r7, r1, r0, lsr #10
   17460:	andeq	r7, r1, r0, lsr #10
   17464:	andeq	r7, r1, r0, lsr #10
   17468:	muleq	r1, r0, r4
   1746c:	andeq	r7, r1, r0, lsr #10
   17470:	muleq	r1, r0, r4
   17474:	andeq	r7, r1, r0, lsr #10
   17478:	andeq	r7, r1, r0, lsr #10
   1747c:	andeq	r7, r1, r0, lsr #10
   17480:	andeq	r7, r1, r0, lsr #10
   17484:	andeq	r7, r1, r0, lsr #10
   17488:	andeq	r7, r1, r0, lsr #10
   1748c:	muleq	r1, r0, r4
   17490:	mov	r1, #48	; 0x30
   17494:	ldr	r0, [fp, #4]
   17498:	bl	110f8 <strchr@plt>
   1749c:	mov	r3, r0
   174a0:	cmp	r3, #0
   174a4:	beq	17514 <__assert_fail@plt+0x6308>
   174a8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   174ac:	ldr	r3, [r3]
   174b0:	add	r3, r3, #1
   174b4:	ldrb	r3, [r3]
   174b8:	cmp	r3, #68	; 0x44
   174bc:	beq	174fc <__assert_fail@plt+0x62f0>
   174c0:	cmp	r3, #105	; 0x69
   174c4:	beq	174d4 <__assert_fail@plt+0x62c8>
   174c8:	cmp	r3, #66	; 0x42
   174cc:	beq	174fc <__assert_fail@plt+0x62f0>
   174d0:	b	17520 <__assert_fail@plt+0x6314>
   174d4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   174d8:	ldr	r3, [r3]
   174dc:	add	r3, r3, #2
   174e0:	ldrb	r3, [r3]
   174e4:	cmp	r3, #66	; 0x42
   174e8:	bne	1751c <__assert_fail@plt+0x6310>
   174ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   174f0:	add	r3, r3, #2
   174f4:	str	r3, [fp, #-24]	; 0xffffffe8
   174f8:	b	1751c <__assert_fail@plt+0x6310>
   174fc:	mov	r3, #1000	; 0x3e8
   17500:	str	r3, [fp, #-20]	; 0xffffffec
   17504:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17508:	add	r3, r3, #1
   1750c:	str	r3, [fp, #-24]	; 0xffffffe8
   17510:	b	17520 <__assert_fail@plt+0x6314>
   17514:	nop	{0}
   17518:	b	17520 <__assert_fail@plt+0x6314>
   1751c:	nop	{0}
   17520:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17524:	ldr	r3, [r3]
   17528:	ldrb	r3, [r3]
   1752c:	sub	r3, r3, #66	; 0x42
   17530:	cmp	r3, #53	; 0x35
   17534:	ldrls	pc, [pc, r3, lsl #2]
   17538:	b	17748 <__assert_fail@plt+0x653c>
   1753c:	andeq	r7, r1, ip, lsr #12
   17540:	andeq	r7, r1, r8, asr #14
   17544:	andeq	r7, r1, r8, asr #14
   17548:	andeq	r7, r1, r0, asr r6
   1754c:	andeq	r7, r1, r8, asr #14
   17550:	andeq	r7, r1, ip, ror #12
   17554:	andeq	r7, r1, r8, asr #14
   17558:	andeq	r7, r1, r8, asr #14
   1755c:	andeq	r7, r1, r8, asr #14
   17560:	andeq	r7, r1, r8, lsl #13
   17564:	andeq	r7, r1, r8, asr #14
   17568:	andeq	r7, r1, r4, lsr #13
   1756c:	andeq	r7, r1, r8, asr #14
   17570:	andeq	r7, r1, r8, asr #14
   17574:	andeq	r7, r1, r0, asr #13
   17578:	andeq	r7, r1, r8, asr #14
   1757c:	andeq	r7, r1, r8, asr #14
   17580:	andeq	r7, r1, r8, asr #14
   17584:	ldrdeq	r7, [r1], -ip
   17588:	andeq	r7, r1, r8, asr #14
   1758c:	andeq	r7, r1, r8, asr #14
   17590:	andeq	r7, r1, r8, asr #14
   17594:	andeq	r7, r1, r8, asr #14
   17598:	andeq	r7, r1, r0, lsl r7
   1759c:	andeq	r7, r1, ip, lsr #14
   175a0:	andeq	r7, r1, r8, asr #14
   175a4:	andeq	r7, r1, r8, asr #14
   175a8:	andeq	r7, r1, r8, asr #14
   175ac:	andeq	r7, r1, r8, asr #14
   175b0:	andeq	r7, r1, r8, asr #14
   175b4:	andeq	r7, r1, r8, asr #14
   175b8:	andeq	r7, r1, r8, asr #14
   175bc:	andeq	r7, r1, r4, lsl r6
   175c0:	andeq	r7, r1, r4, asr #12
   175c4:	andeq	r7, r1, r8, asr #14
   175c8:	andeq	r7, r1, r8, asr #14
   175cc:	andeq	r7, r1, r8, asr #14
   175d0:	andeq	r7, r1, ip, ror #12
   175d4:	andeq	r7, r1, r8, asr #14
   175d8:	andeq	r7, r1, r8, asr #14
   175dc:	andeq	r7, r1, r8, asr #14
   175e0:	andeq	r7, r1, r8, lsl #13
   175e4:	andeq	r7, r1, r8, asr #14
   175e8:	andeq	r7, r1, r4, lsr #13
   175ec:	andeq	r7, r1, r8, asr #14
   175f0:	andeq	r7, r1, r8, asr #14
   175f4:	andeq	r7, r1, r8, asr #14
   175f8:	andeq	r7, r1, r8, asr #14
   175fc:	andeq	r7, r1, r8, asr #14
   17600:	andeq	r7, r1, r8, asr #14
   17604:	ldrdeq	r7, [r1], -ip
   17608:	andeq	r7, r1, r8, asr #14
   1760c:	andeq	r7, r1, r8, asr #14
   17610:	strdeq	r7, [r1], -r8
   17614:	sub	r3, fp, #40	; 0x28
   17618:	mov	r1, #512	; 0x200
   1761c:	mov	r0, r3
   17620:	bl	17064 <__assert_fail@plt+0x5e58>
   17624:	str	r0, [fp, #-28]	; 0xffffffe4
   17628:	b	17760 <__assert_fail@plt+0x6554>
   1762c:	sub	r3, fp, #40	; 0x28
   17630:	mov	r1, #1024	; 0x400
   17634:	mov	r0, r3
   17638:	bl	17064 <__assert_fail@plt+0x5e58>
   1763c:	str	r0, [fp, #-28]	; 0xffffffe4
   17640:	b	17760 <__assert_fail@plt+0x6554>
   17644:	mov	r3, #0
   17648:	str	r3, [fp, #-28]	; 0xffffffe4
   1764c:	b	17760 <__assert_fail@plt+0x6554>
   17650:	sub	r3, fp, #40	; 0x28
   17654:	mov	r2, #6
   17658:	ldr	r1, [fp, #-20]	; 0xffffffec
   1765c:	mov	r0, r3
   17660:	bl	17110 <__assert_fail@plt+0x5f04>
   17664:	str	r0, [fp, #-28]	; 0xffffffe4
   17668:	b	17760 <__assert_fail@plt+0x6554>
   1766c:	sub	r3, fp, #40	; 0x28
   17670:	mov	r2, #3
   17674:	ldr	r1, [fp, #-20]	; 0xffffffec
   17678:	mov	r0, r3
   1767c:	bl	17110 <__assert_fail@plt+0x5f04>
   17680:	str	r0, [fp, #-28]	; 0xffffffe4
   17684:	b	17760 <__assert_fail@plt+0x6554>
   17688:	sub	r3, fp, #40	; 0x28
   1768c:	mov	r2, #1
   17690:	ldr	r1, [fp, #-20]	; 0xffffffec
   17694:	mov	r0, r3
   17698:	bl	17110 <__assert_fail@plt+0x5f04>
   1769c:	str	r0, [fp, #-28]	; 0xffffffe4
   176a0:	b	17760 <__assert_fail@plt+0x6554>
   176a4:	sub	r3, fp, #40	; 0x28
   176a8:	mov	r2, #2
   176ac:	ldr	r1, [fp, #-20]	; 0xffffffec
   176b0:	mov	r0, r3
   176b4:	bl	17110 <__assert_fail@plt+0x5f04>
   176b8:	str	r0, [fp, #-28]	; 0xffffffe4
   176bc:	b	17760 <__assert_fail@plt+0x6554>
   176c0:	sub	r3, fp, #40	; 0x28
   176c4:	mov	r2, #5
   176c8:	ldr	r1, [fp, #-20]	; 0xffffffec
   176cc:	mov	r0, r3
   176d0:	bl	17110 <__assert_fail@plt+0x5f04>
   176d4:	str	r0, [fp, #-28]	; 0xffffffe4
   176d8:	b	17760 <__assert_fail@plt+0x6554>
   176dc:	sub	r3, fp, #40	; 0x28
   176e0:	mov	r2, #4
   176e4:	ldr	r1, [fp, #-20]	; 0xffffffec
   176e8:	mov	r0, r3
   176ec:	bl	17110 <__assert_fail@plt+0x5f04>
   176f0:	str	r0, [fp, #-28]	; 0xffffffe4
   176f4:	b	17760 <__assert_fail@plt+0x6554>
   176f8:	sub	r3, fp, #40	; 0x28
   176fc:	mov	r1, #2
   17700:	mov	r0, r3
   17704:	bl	17064 <__assert_fail@plt+0x5e58>
   17708:	str	r0, [fp, #-28]	; 0xffffffe4
   1770c:	b	17760 <__assert_fail@plt+0x6554>
   17710:	sub	r3, fp, #40	; 0x28
   17714:	mov	r2, #8
   17718:	ldr	r1, [fp, #-20]	; 0xffffffec
   1771c:	mov	r0, r3
   17720:	bl	17110 <__assert_fail@plt+0x5f04>
   17724:	str	r0, [fp, #-28]	; 0xffffffe4
   17728:	b	17760 <__assert_fail@plt+0x6554>
   1772c:	sub	r3, fp, #40	; 0x28
   17730:	mov	r2, #7
   17734:	ldr	r1, [fp, #-20]	; 0xffffffec
   17738:	mov	r0, r3
   1773c:	bl	17110 <__assert_fail@plt+0x5f04>
   17740:	str	r0, [fp, #-28]	; 0xffffffe4
   17744:	b	17760 <__assert_fail@plt+0x6554>
   17748:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1774c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   17750:	str	r2, [r3]
   17754:	ldr	r3, [fp, #-8]
   17758:	orr	r3, r3, #2
   1775c:	b	177b8 <__assert_fail@plt+0x65ac>
   17760:	ldr	r2, [fp, #-8]
   17764:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17768:	orr	r3, r2, r3
   1776c:	str	r3, [fp, #-8]
   17770:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17774:	ldr	r2, [r3]
   17778:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1777c:	add	r2, r2, r3
   17780:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17784:	str	r2, [r3]
   17788:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1778c:	ldr	r3, [r3]
   17790:	ldrb	r3, [r3]
   17794:	cmp	r3, #0
   17798:	beq	177a8 <__assert_fail@plt+0x659c>
   1779c:	ldr	r3, [fp, #-8]
   177a0:	orr	r3, r3, #2
   177a4:	str	r3, [fp, #-8]
   177a8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   177ac:	ldr	r3, [fp, #-60]	; 0xffffffc4
   177b0:	str	r2, [r3]
   177b4:	ldr	r3, [fp, #-8]
   177b8:	mov	r0, r3
   177bc:	sub	sp, fp, #4
   177c0:	ldr	fp, [sp]
   177c4:	add	sp, sp, #4
   177c8:	pop	{pc}		; (ldr pc, [sp], #4)
   177cc:	str	fp, [sp, #-8]!
   177d0:	str	lr, [sp, #4]
   177d4:	add	fp, sp, #4
   177d8:	sub	sp, sp, #16
   177dc:	str	r0, [fp, #-16]
   177e0:	str	r1, [fp, #-20]	; 0xffffffec
   177e4:	ldr	r3, [fp, #-16]
   177e8:	cmp	r3, #0
   177ec:	beq	177fc <__assert_fail@plt+0x65f0>
   177f0:	ldr	r3, [fp, #-20]	; 0xffffffec
   177f4:	cmp	r3, #0
   177f8:	bne	1780c <__assert_fail@plt+0x6600>
   177fc:	mov	r3, #1
   17800:	str	r3, [fp, #-20]	; 0xffffffec
   17804:	ldr	r3, [fp, #-20]	; 0xffffffec
   17808:	str	r3, [fp, #-16]
   1780c:	mov	ip, #0
   17810:	ldr	r2, [fp, #-16]
   17814:	ldr	r3, [fp, #-20]	; 0xffffffec
   17818:	umull	r0, r1, r2, r3
   1781c:	mov	r2, #0
   17820:	mov	r3, #0
   17824:	mov	r2, r1
   17828:	mov	r3, #0
   1782c:	cmp	r2, #0
   17830:	beq	17838 <__assert_fail@plt+0x662c>
   17834:	mov	ip, #1
   17838:	cmp	r0, #0
   1783c:	bge	17844 <__assert_fail@plt+0x6638>
   17840:	mov	ip, #1
   17844:	mov	r3, ip
   17848:	and	r3, r3, #1
   1784c:	uxtb	r3, r3
   17850:	cmp	r3, #0
   17854:	beq	17870 <__assert_fail@plt+0x6664>
   17858:	bl	11110 <__errno_location@plt>
   1785c:	mov	r2, r0
   17860:	mov	r3, #12
   17864:	str	r3, [r2]
   17868:	mov	r3, #0
   1786c:	b	17888 <__assert_fail@plt+0x667c>
   17870:	ldr	r1, [fp, #-20]	; 0xffffffec
   17874:	ldr	r0, [fp, #-16]
   17878:	bl	10f0c <calloc@plt>
   1787c:	mov	r3, r0
   17880:	str	r3, [fp, #-8]
   17884:	ldr	r3, [fp, #-8]
   17888:	mov	r0, r3
   1788c:	sub	sp, fp, #4
   17890:	ldr	fp, [sp]
   17894:	add	sp, sp, #4
   17898:	pop	{pc}		; (ldr pc, [sp], #4)
   1789c:	str	fp, [sp, #-8]!
   178a0:	str	lr, [sp, #4]
   178a4:	add	fp, sp, #4
   178a8:	sub	sp, sp, #16
   178ac:	str	r0, [fp, #-16]
   178b0:	ldr	r3, [fp, #-16]
   178b4:	cmp	r3, #0
   178b8:	bne	178c4 <__assert_fail@plt+0x66b8>
   178bc:	mov	r3, #1
   178c0:	str	r3, [fp, #-16]
   178c4:	mov	r2, #0
   178c8:	ldr	r3, [fp, #-16]
   178cc:	cmp	r3, #0
   178d0:	bge	178d8 <__assert_fail@plt+0x66cc>
   178d4:	mov	r2, #1
   178d8:	mov	r3, r2
   178dc:	and	r3, r3, #1
   178e0:	uxtb	r3, r3
   178e4:	cmp	r3, #0
   178e8:	beq	17904 <__assert_fail@plt+0x66f8>
   178ec:	bl	11110 <__errno_location@plt>
   178f0:	mov	r2, r0
   178f4:	mov	r3, #12
   178f8:	str	r3, [r2]
   178fc:	mov	r3, #0
   17900:	b	17918 <__assert_fail@plt+0x670c>
   17904:	ldr	r0, [fp, #-16]
   17908:	bl	11080 <malloc@plt>
   1790c:	mov	r3, r0
   17910:	str	r3, [fp, #-8]
   17914:	ldr	r3, [fp, #-8]
   17918:	mov	r0, r3
   1791c:	sub	sp, fp, #4
   17920:	ldr	fp, [sp]
   17924:	add	sp, sp, #4
   17928:	pop	{pc}		; (ldr pc, [sp], #4)
   1792c:	str	fp, [sp, #-8]!
   17930:	str	lr, [sp, #4]
   17934:	add	fp, sp, #4
   17938:	sub	sp, sp, #16
   1793c:	str	r0, [fp, #-16]
   17940:	str	r1, [fp, #-20]	; 0xffffffec
   17944:	ldr	r3, [fp, #-16]
   17948:	cmp	r3, #0
   1794c:	bne	17960 <__assert_fail@plt+0x6754>
   17950:	ldr	r0, [fp, #-20]	; 0xffffffec
   17954:	bl	1789c <__assert_fail@plt+0x6690>
   17958:	mov	r3, r0
   1795c:	b	179d0 <__assert_fail@plt+0x67c4>
   17960:	ldr	r3, [fp, #-20]	; 0xffffffec
   17964:	cmp	r3, #0
   17968:	bne	1797c <__assert_fail@plt+0x6770>
   1796c:	ldr	r0, [fp, #-16]
   17970:	bl	12edc <__assert_fail@plt+0x1cd0>
   17974:	mov	r3, #0
   17978:	b	179d0 <__assert_fail@plt+0x67c4>
   1797c:	mov	r2, #0
   17980:	ldr	r3, [fp, #-20]	; 0xffffffec
   17984:	cmp	r3, #0
   17988:	bge	17990 <__assert_fail@plt+0x6784>
   1798c:	mov	r2, #1
   17990:	mov	r3, r2
   17994:	and	r3, r3, #1
   17998:	uxtb	r3, r3
   1799c:	cmp	r3, #0
   179a0:	beq	179bc <__assert_fail@plt+0x67b0>
   179a4:	bl	11110 <__errno_location@plt>
   179a8:	mov	r2, r0
   179ac:	mov	r3, #12
   179b0:	str	r3, [r2]
   179b4:	mov	r3, #0
   179b8:	b	179d0 <__assert_fail@plt+0x67c4>
   179bc:	ldr	r1, [fp, #-20]	; 0xffffffec
   179c0:	ldr	r0, [fp, #-16]
   179c4:	bl	10fd8 <realloc@plt>
   179c8:	str	r0, [fp, #-8]
   179cc:	ldr	r3, [fp, #-8]
   179d0:	mov	r0, r3
   179d4:	sub	sp, fp, #4
   179d8:	ldr	fp, [sp]
   179dc:	add	sp, sp, #4
   179e0:	pop	{pc}		; (ldr pc, [sp], #4)
   179e4:	strd	r4, [sp, #-16]!
   179e8:	str	fp, [sp, #8]
   179ec:	str	lr, [sp, #12]
   179f0:	add	fp, sp, #12
   179f4:	sub	sp, sp, #16
   179f8:	str	r0, [fp, #-24]	; 0xffffffe8
   179fc:	str	r1, [fp, #-28]	; 0xffffffe4
   17a00:	ldr	r5, [fp, #-24]	; 0xffffffe8
   17a04:	ldr	r4, [fp, #-28]	; 0xffffffe4
   17a08:	cmp	r5, r4
   17a0c:	bne	17a18 <__assert_fail@plt+0x680c>
   17a10:	mov	r3, #0
   17a14:	b	17a78 <__assert_fail@plt+0x686c>
   17a18:	ldrb	r3, [r5]
   17a1c:	mov	r0, r3
   17a20:	bl	18a3c <__assert_fail@plt+0x7830>
   17a24:	mov	r3, r0
   17a28:	strb	r3, [fp, #-13]
   17a2c:	ldrb	r3, [r4]
   17a30:	mov	r0, r3
   17a34:	bl	18a3c <__assert_fail@plt+0x7830>
   17a38:	mov	r3, r0
   17a3c:	strb	r3, [fp, #-14]
   17a40:	ldrb	r3, [fp, #-13]
   17a44:	cmp	r3, #0
   17a48:	beq	17a68 <__assert_fail@plt+0x685c>
   17a4c:	add	r5, r5, #1
   17a50:	add	r4, r4, #1
   17a54:	ldrb	r2, [fp, #-13]
   17a58:	ldrb	r3, [fp, #-14]
   17a5c:	cmp	r2, r3
   17a60:	beq	17a18 <__assert_fail@plt+0x680c>
   17a64:	b	17a6c <__assert_fail@plt+0x6860>
   17a68:	nop	{0}
   17a6c:	ldrb	r2, [fp, #-13]
   17a70:	ldrb	r3, [fp, #-14]
   17a74:	sub	r3, r2, r3
   17a78:	mov	r0, r3
   17a7c:	sub	sp, fp, #12
   17a80:	ldrd	r4, [sp]
   17a84:	ldr	fp, [sp, #8]
   17a88:	add	sp, sp, #12
   17a8c:	pop	{pc}		; (ldr pc, [sp], #4)
   17a90:	str	fp, [sp, #-8]!
   17a94:	str	lr, [sp, #4]
   17a98:	add	fp, sp, #4
   17a9c:	sub	sp, sp, #16
   17aa0:	str	r0, [fp, #-16]
   17aa4:	ldr	r0, [fp, #-16]
   17aa8:	bl	11044 <__fpending@plt>
   17aac:	mov	r3, r0
   17ab0:	cmp	r3, #0
   17ab4:	movne	r3, #1
   17ab8:	moveq	r3, #0
   17abc:	strb	r3, [fp, #-5]
   17ac0:	ldr	r0, [fp, #-16]
   17ac4:	bl	11050 <ferror_unlocked@plt>
   17ac8:	mov	r3, r0
   17acc:	cmp	r3, #0
   17ad0:	movne	r3, #1
   17ad4:	moveq	r3, #0
   17ad8:	strb	r3, [fp, #-6]
   17adc:	ldr	r0, [fp, #-16]
   17ae0:	bl	17b74 <__assert_fail@plt+0x6968>
   17ae4:	mov	r3, r0
   17ae8:	cmp	r3, #0
   17aec:	movne	r3, #1
   17af0:	moveq	r3, #0
   17af4:	strb	r3, [fp, #-7]
   17af8:	ldrb	r3, [fp, #-6]
   17afc:	cmp	r3, #0
   17b00:	bne	17b30 <__assert_fail@plt+0x6924>
   17b04:	ldrb	r3, [fp, #-7]
   17b08:	cmp	r3, #0
   17b0c:	beq	17b5c <__assert_fail@plt+0x6950>
   17b10:	ldrb	r3, [fp, #-5]
   17b14:	cmp	r3, #0
   17b18:	bne	17b30 <__assert_fail@plt+0x6924>
   17b1c:	bl	11110 <__errno_location@plt>
   17b20:	mov	r3, r0
   17b24:	ldr	r3, [r3]
   17b28:	cmp	r3, #9
   17b2c:	beq	17b5c <__assert_fail@plt+0x6950>
   17b30:	ldrb	r3, [fp, #-7]
   17b34:	eor	r3, r3, #1
   17b38:	uxtb	r3, r3
   17b3c:	cmp	r3, #0
   17b40:	beq	17b54 <__assert_fail@plt+0x6948>
   17b44:	bl	11110 <__errno_location@plt>
   17b48:	mov	r2, r0
   17b4c:	mov	r3, #0
   17b50:	str	r3, [r2]
   17b54:	mvn	r3, #0
   17b58:	b	17b60 <__assert_fail@plt+0x6954>
   17b5c:	mov	r3, #0
   17b60:	mov	r0, r3
   17b64:	sub	sp, fp, #4
   17b68:	ldr	fp, [sp]
   17b6c:	add	sp, sp, #4
   17b70:	pop	{pc}		; (ldr pc, [sp], #4)
   17b74:	str	fp, [sp, #-8]!
   17b78:	str	lr, [sp, #4]
   17b7c:	add	fp, sp, #4
   17b80:	sub	sp, sp, #32
   17b84:	str	r0, [fp, #-24]	; 0xffffffe8
   17b88:	mov	r3, #0
   17b8c:	str	r3, [fp, #-8]
   17b90:	mov	r3, #0
   17b94:	str	r3, [fp, #-12]
   17b98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17b9c:	bl	11164 <fileno@plt>
   17ba0:	str	r0, [fp, #-16]
   17ba4:	ldr	r3, [fp, #-16]
   17ba8:	cmp	r3, #0
   17bac:	bge	17bc0 <__assert_fail@plt+0x69b4>
   17bb0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17bb4:	bl	11170 <fclose@plt>
   17bb8:	mov	r3, r0
   17bbc:	b	17c64 <__assert_fail@plt+0x6a58>
   17bc0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17bc4:	bl	11098 <__freading@plt>
   17bc8:	mov	r3, r0
   17bcc:	cmp	r3, #0
   17bd0:	beq	17c0c <__assert_fail@plt+0x6a00>
   17bd4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17bd8:	bl	11164 <fileno@plt>
   17bdc:	mov	r1, r0
   17be0:	mov	r3, #1
   17be4:	str	r3, [sp]
   17be8:	mov	r2, #0
   17bec:	mov	r3, #0
   17bf0:	mov	r0, r1
   17bf4:	bl	11020 <lseek64@plt>
   17bf8:	mvn	r2, #0
   17bfc:	mvn	r3, #0
   17c00:	cmp	r1, r3
   17c04:	cmpeq	r0, r2
   17c08:	beq	17c30 <__assert_fail@plt+0x6a24>
   17c0c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17c10:	bl	17ccc <__assert_fail@plt+0x6ac0>
   17c14:	mov	r3, r0
   17c18:	cmp	r3, #0
   17c1c:	beq	17c30 <__assert_fail@plt+0x6a24>
   17c20:	bl	11110 <__errno_location@plt>
   17c24:	mov	r3, r0
   17c28:	ldr	r3, [r3]
   17c2c:	str	r3, [fp, #-8]
   17c30:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17c34:	bl	11170 <fclose@plt>
   17c38:	str	r0, [fp, #-12]
   17c3c:	ldr	r3, [fp, #-8]
   17c40:	cmp	r3, #0
   17c44:	beq	17c60 <__assert_fail@plt+0x6a54>
   17c48:	bl	11110 <__errno_location@plt>
   17c4c:	mov	r2, r0
   17c50:	ldr	r3, [fp, #-8]
   17c54:	str	r3, [r2]
   17c58:	mvn	r3, #0
   17c5c:	str	r3, [fp, #-12]
   17c60:	ldr	r3, [fp, #-12]
   17c64:	mov	r0, r3
   17c68:	sub	sp, fp, #4
   17c6c:	ldr	fp, [sp]
   17c70:	add	sp, sp, #4
   17c74:	pop	{pc}		; (ldr pc, [sp], #4)
   17c78:	str	fp, [sp, #-8]!
   17c7c:	str	lr, [sp, #4]
   17c80:	add	fp, sp, #4
   17c84:	sub	sp, sp, #16
   17c88:	str	r0, [fp, #-8]
   17c8c:	ldr	r3, [fp, #-8]
   17c90:	ldr	r3, [r3]
   17c94:	and	r3, r3, #256	; 0x100
   17c98:	cmp	r3, #0
   17c9c:	beq	17cb8 <__assert_fail@plt+0x6aac>
   17ca0:	mov	r3, #1
   17ca4:	str	r3, [sp]
   17ca8:	mov	r2, #0
   17cac:	mov	r3, #0
   17cb0:	ldr	r0, [fp, #-8]
   17cb4:	bl	17d38 <__assert_fail@plt+0x6b2c>
   17cb8:	nop	{0}
   17cbc:	sub	sp, fp, #4
   17cc0:	ldr	fp, [sp]
   17cc4:	add	sp, sp, #4
   17cc8:	pop	{pc}		; (ldr pc, [sp], #4)
   17ccc:	str	fp, [sp, #-8]!
   17cd0:	str	lr, [sp, #4]
   17cd4:	add	fp, sp, #4
   17cd8:	sub	sp, sp, #8
   17cdc:	str	r0, [fp, #-8]
   17ce0:	ldr	r3, [fp, #-8]
   17ce4:	cmp	r3, #0
   17ce8:	beq	17d00 <__assert_fail@plt+0x6af4>
   17cec:	ldr	r0, [fp, #-8]
   17cf0:	bl	11098 <__freading@plt>
   17cf4:	mov	r3, r0
   17cf8:	cmp	r3, #0
   17cfc:	bne	17d10 <__assert_fail@plt+0x6b04>
   17d00:	ldr	r0, [fp, #-8]
   17d04:	bl	10f78 <fflush@plt>
   17d08:	mov	r3, r0
   17d0c:	b	17d24 <__assert_fail@plt+0x6b18>
   17d10:	ldr	r0, [fp, #-8]
   17d14:	bl	17c78 <__assert_fail@plt+0x6a6c>
   17d18:	ldr	r0, [fp, #-8]
   17d1c:	bl	10f78 <fflush@plt>
   17d20:	mov	r3, r0
   17d24:	mov	r0, r3
   17d28:	sub	sp, fp, #4
   17d2c:	ldr	fp, [sp]
   17d30:	add	sp, sp, #4
   17d34:	pop	{pc}		; (ldr pc, [sp], #4)
   17d38:	str	fp, [sp, #-8]!
   17d3c:	str	lr, [sp, #4]
   17d40:	add	fp, sp, #4
   17d44:	sub	sp, sp, #32
   17d48:	str	r0, [fp, #-16]
   17d4c:	strd	r2, [fp, #-28]	; 0xffffffe4
   17d50:	ldr	r3, [fp, #-16]
   17d54:	ldr	r2, [r3, #8]
   17d58:	ldr	r3, [fp, #-16]
   17d5c:	ldr	r3, [r3, #4]
   17d60:	cmp	r2, r3
   17d64:	bne	17dfc <__assert_fail@plt+0x6bf0>
   17d68:	ldr	r3, [fp, #-16]
   17d6c:	ldr	r2, [r3, #20]
   17d70:	ldr	r3, [fp, #-16]
   17d74:	ldr	r3, [r3, #16]
   17d78:	cmp	r2, r3
   17d7c:	bne	17dfc <__assert_fail@plt+0x6bf0>
   17d80:	ldr	r3, [fp, #-16]
   17d84:	ldr	r3, [r3, #36]	; 0x24
   17d88:	cmp	r3, #0
   17d8c:	bne	17dfc <__assert_fail@plt+0x6bf0>
   17d90:	ldr	r0, [fp, #-16]
   17d94:	bl	11164 <fileno@plt>
   17d98:	mov	r1, r0
   17d9c:	ldr	r3, [fp, #4]
   17da0:	str	r3, [sp]
   17da4:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   17da8:	mov	r0, r1
   17dac:	bl	11020 <lseek64@plt>
   17db0:	strd	r0, [fp, #-12]
   17db4:	ldrd	r2, [fp, #-12]
   17db8:	mvn	r0, #0
   17dbc:	mvn	r1, #0
   17dc0:	cmp	r3, r1
   17dc4:	cmpeq	r2, r0
   17dc8:	bne	17dd4 <__assert_fail@plt+0x6bc8>
   17dcc:	mvn	r3, #0
   17dd0:	b	17e14 <__assert_fail@plt+0x6c08>
   17dd4:	ldr	r3, [fp, #-16]
   17dd8:	ldr	r3, [r3]
   17ddc:	bic	r2, r3, #16
   17de0:	ldr	r3, [fp, #-16]
   17de4:	str	r2, [r3]
   17de8:	ldr	r1, [fp, #-16]
   17dec:	ldrd	r2, [fp, #-12]
   17df0:	strd	r2, [r1, #80]	; 0x50
   17df4:	mov	r3, #0
   17df8:	b	17e14 <__assert_fail@plt+0x6c08>
   17dfc:	ldr	r3, [fp, #4]
   17e00:	str	r3, [sp]
   17e04:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   17e08:	ldr	r0, [fp, #-16]
   17e0c:	bl	1117c <fseeko64@plt>
   17e10:	mov	r3, r0
   17e14:	mov	r0, r3
   17e18:	sub	sp, fp, #4
   17e1c:	ldr	fp, [sp]
   17e20:	add	sp, sp, #4
   17e24:	pop	{pc}		; (ldr pc, [sp], #4)
   17e28:	str	fp, [sp, #-8]!
   17e2c:	str	lr, [sp, #4]
   17e30:	add	fp, sp, #4
   17e34:	bl	11110 <__errno_location@plt>
   17e38:	mov	r2, r0
   17e3c:	mov	r3, #12
   17e40:	str	r3, [r2]
   17e44:	mov	r3, #0
   17e48:	mov	r0, r3
   17e4c:	sub	sp, fp, #4
   17e50:	ldr	fp, [sp]
   17e54:	add	sp, sp, #4
   17e58:	pop	{pc}		; (ldr pc, [sp], #4)
   17e5c:	str	fp, [sp, #-8]!
   17e60:	str	lr, [sp, #4]
   17e64:	add	fp, sp, #4
   17e68:	sub	sp, sp, #8
   17e6c:	str	r0, [fp, #-8]
   17e70:	ldr	r3, [fp, #-8]
   17e74:	mov	r0, r3
   17e78:	bl	1789c <__assert_fail@plt+0x6690>
   17e7c:	mov	r3, r0
   17e80:	mov	r0, r3
   17e84:	sub	sp, fp, #4
   17e88:	ldr	fp, [sp]
   17e8c:	add	sp, sp, #4
   17e90:	pop	{pc}		; (ldr pc, [sp], #4)
   17e94:	str	fp, [sp, #-8]!
   17e98:	str	lr, [sp, #4]
   17e9c:	add	fp, sp, #4
   17ea0:	sub	sp, sp, #8
   17ea4:	str	r0, [fp, #-8]
   17ea8:	str	r1, [fp, #-12]
   17eac:	ldr	r3, [fp, #-12]
   17eb0:	cmp	r3, #0
   17eb4:	moveq	r3, #1
   17eb8:	movne	r3, #0
   17ebc:	uxtb	r3, r3
   17ec0:	mov	r2, r3
   17ec4:	ldr	r3, [fp, #-12]
   17ec8:	orr	r3, r2, r3
   17ecc:	mov	r1, r3
   17ed0:	ldr	r0, [fp, #-8]
   17ed4:	bl	1792c <__assert_fail@plt+0x6720>
   17ed8:	mov	r3, r0
   17edc:	mov	r0, r3
   17ee0:	sub	sp, fp, #4
   17ee4:	ldr	fp, [sp]
   17ee8:	add	sp, sp, #4
   17eec:	pop	{pc}		; (ldr pc, [sp], #4)
   17ef0:	str	fp, [sp, #-8]!
   17ef4:	str	lr, [sp, #4]
   17ef8:	add	fp, sp, #4
   17efc:	sub	sp, sp, #8
   17f00:	str	r0, [fp, #-8]
   17f04:	str	r1, [fp, #-12]
   17f08:	ldr	r3, [fp, #-8]
   17f0c:	ldr	r2, [fp, #-12]
   17f10:	mov	r1, r2
   17f14:	mov	r0, r3
   17f18:	bl	177cc <__assert_fail@plt+0x65c0>
   17f1c:	mov	r3, r0
   17f20:	mov	r0, r3
   17f24:	sub	sp, fp, #4
   17f28:	ldr	fp, [sp]
   17f2c:	add	sp, sp, #4
   17f30:	pop	{pc}		; (ldr pc, [sp], #4)
   17f34:	str	fp, [sp, #-8]!
   17f38:	str	lr, [sp, #4]
   17f3c:	add	fp, sp, #4
   17f40:	sub	sp, sp, #16
   17f44:	str	r0, [fp, #-8]
   17f48:	str	r1, [fp, #-12]
   17f4c:	str	r2, [fp, #-16]
   17f50:	ldr	r3, [fp, #-12]
   17f54:	cmp	r3, #0
   17f58:	beq	17f68 <__assert_fail@plt+0x6d5c>
   17f5c:	ldr	r3, [fp, #-16]
   17f60:	cmp	r3, #0
   17f64:	bne	17f78 <__assert_fail@plt+0x6d6c>
   17f68:	mov	r3, #1
   17f6c:	str	r3, [fp, #-16]
   17f70:	ldr	r3, [fp, #-16]
   17f74:	str	r3, [fp, #-12]
   17f78:	ldr	r3, [fp, #-12]
   17f7c:	ldr	r2, [fp, #-16]
   17f80:	mov	r1, r3
   17f84:	ldr	r0, [fp, #-8]
   17f88:	bl	184f0 <__assert_fail@plt+0x72e4>
   17f8c:	mov	r3, r0
   17f90:	mov	r0, r3
   17f94:	sub	sp, fp, #4
   17f98:	ldr	fp, [sp]
   17f9c:	add	sp, sp, #4
   17fa0:	pop	{pc}		; (ldr pc, [sp], #4)
   17fa4:	str	fp, [sp, #-8]!
   17fa8:	str	lr, [sp, #4]
   17fac:	add	fp, sp, #4
   17fb0:	sub	sp, sp, #8
   17fb4:	mov	r0, #14
   17fb8:	bl	111ac <nl_langinfo@plt>
   17fbc:	str	r0, [fp, #-8]
   17fc0:	ldr	r3, [fp, #-8]
   17fc4:	cmp	r3, #0
   17fc8:	bne	17fd8 <__assert_fail@plt+0x6dcc>
   17fcc:	movw	r3, #40820	; 0x9f74
   17fd0:	movt	r3, #1
   17fd4:	str	r3, [fp, #-8]
   17fd8:	ldr	r3, [fp, #-8]
   17fdc:	ldrb	r3, [r3]
   17fe0:	cmp	r3, #0
   17fe4:	bne	17ff4 <__assert_fail@plt+0x6de8>
   17fe8:	movw	r3, #40824	; 0x9f78
   17fec:	movt	r3, #1
   17ff0:	str	r3, [fp, #-8]
   17ff4:	ldr	r3, [fp, #-8]
   17ff8:	mov	r0, r3
   17ffc:	sub	sp, fp, #4
   18000:	ldr	fp, [sp]
   18004:	add	sp, sp, #4
   18008:	pop	{pc}		; (ldr pc, [sp], #4)
   1800c:	str	fp, [sp, #-8]!
   18010:	str	lr, [sp, #4]
   18014:	add	fp, sp, #4
   18018:	sub	sp, sp, #32
   1801c:	str	r0, [fp, #-24]	; 0xffffffe8
   18020:	str	r1, [fp, #-28]	; 0xffffffe4
   18024:	str	r2, [fp, #-32]	; 0xffffffe0
   18028:	str	r3, [fp, #-36]	; 0xffffffdc
   1802c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18030:	cmp	r3, #0
   18034:	bne	18040 <__assert_fail@plt+0x6e34>
   18038:	sub	r3, fp, #16
   1803c:	str	r3, [fp, #-24]	; 0xffffffe8
   18040:	ldr	r3, [fp, #-36]	; 0xffffffdc
   18044:	ldr	r2, [fp, #-32]	; 0xffffffe0
   18048:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1804c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18050:	bl	1105c <mbrtowc@plt>
   18054:	str	r0, [fp, #-8]
   18058:	ldr	r3, [fp, #-8]
   1805c:	cmn	r3, #3
   18060:	bls	180ac <__assert_fail@plt+0x6ea0>
   18064:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18068:	cmp	r3, #0
   1806c:	beq	180ac <__assert_fail@plt+0x6ea0>
   18070:	mov	r0, #0
   18074:	bl	18ce0 <__assert_fail@plt+0x7ad4>
   18078:	mov	r3, r0
   1807c:	eor	r3, r3, #1
   18080:	uxtb	r3, r3
   18084:	cmp	r3, #0
   18088:	beq	180ac <__assert_fail@plt+0x6ea0>
   1808c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18090:	ldrb	r3, [r3]
   18094:	strb	r3, [fp, #-9]
   18098:	ldrb	r2, [fp, #-9]
   1809c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   180a0:	str	r2, [r3]
   180a4:	mov	r3, #1
   180a8:	b	180b0 <__assert_fail@plt+0x6ea4>
   180ac:	ldr	r3, [fp, #-8]
   180b0:	mov	r0, r3
   180b4:	sub	sp, fp, #4
   180b8:	ldr	fp, [sp]
   180bc:	add	sp, sp, #4
   180c0:	pop	{pc}		; (ldr pc, [sp], #4)
   180c4:	str	fp, [sp, #-8]!
   180c8:	str	lr, [sp, #4]
   180cc:	add	fp, sp, #4
   180d0:	sub	sp, sp, #8
   180d4:	str	r0, [fp, #-8]
   180d8:	str	r1, [fp, #-12]
   180dc:	mov	r3, #0
   180e0:	ldr	r2, [fp, #-12]
   180e4:	lsl	r2, r2, #2
   180e8:	ldr	r1, [fp, #-12]
   180ec:	lsr	r1, r1, #30
   180f0:	cmp	r1, #0
   180f4:	beq	180fc <__assert_fail@plt+0x6ef0>
   180f8:	mov	r3, #1
   180fc:	cmp	r2, #0
   18100:	bge	18108 <__assert_fail@plt+0x6efc>
   18104:	mov	r3, #1
   18108:	and	r3, r3, #1
   1810c:	uxtb	r3, r3
   18110:	cmp	r3, #0
   18114:	beq	18130 <__assert_fail@plt+0x6f24>
   18118:	bl	11110 <__errno_location@plt>
   1811c:	mov	r2, r0
   18120:	mov	r3, #12
   18124:	str	r3, [r2]
   18128:	mov	r3, #0
   1812c:	b	18148 <__assert_fail@plt+0x6f3c>
   18130:	ldr	r3, [fp, #-12]
   18134:	lsl	r3, r3, #2
   18138:	mov	r1, r3
   1813c:	ldr	r0, [fp, #-8]
   18140:	bl	1792c <__assert_fail@plt+0x6720>
   18144:	mov	r3, r0
   18148:	mov	r0, r3
   1814c:	sub	sp, fp, #4
   18150:	ldr	fp, [sp]
   18154:	add	sp, sp, #4
   18158:	pop	{pc}		; (ldr pc, [sp], #4)
   1815c:	str	fp, [sp, #-8]!
   18160:	str	lr, [sp, #4]
   18164:	add	fp, sp, #4
   18168:	sub	sp, sp, #48	; 0x30
   1816c:	str	r0, [fp, #-40]	; 0xffffffd8
   18170:	str	r1, [fp, #-44]	; 0xffffffd4
   18174:	str	r2, [fp, #-48]	; 0xffffffd0
   18178:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1817c:	cmp	r3, #0
   18180:	beq	18254 <__assert_fail@plt+0x7048>
   18184:	mov	r3, #10
   18188:	str	r3, [fp, #-36]	; 0xffffffdc
   1818c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   18190:	mov	r1, r3
   18194:	mov	r0, #0
   18198:	bl	180c4 <__assert_fail@plt+0x6eb8>
   1819c:	str	r0, [fp, #-12]
   181a0:	ldr	r3, [fp, #-12]
   181a4:	cmp	r3, #0
   181a8:	bne	181b4 <__assert_fail@plt+0x6fa8>
   181ac:	mvn	r3, #0
   181b0:	b	184dc <__assert_fail@plt+0x72d0>
   181b4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   181b8:	str	r3, [fp, #-20]	; 0xffffffec
   181bc:	sub	r3, fp, #36	; 0x24
   181c0:	ldr	r2, [fp, #-12]
   181c4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   181c8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   181cc:	bl	11134 <getgrouplist@plt>
   181d0:	str	r0, [fp, #-8]
   181d4:	ldr	r3, [fp, #-8]
   181d8:	cmp	r3, #0
   181dc:	bge	181fc <__assert_fail@plt+0x6ff0>
   181e0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   181e4:	ldr	r2, [fp, #-20]	; 0xffffffec
   181e8:	cmp	r2, r3
   181ec:	bne	181fc <__assert_fail@plt+0x6ff0>
   181f0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   181f4:	lsl	r3, r3, #1
   181f8:	str	r3, [fp, #-36]	; 0xffffffdc
   181fc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   18200:	mov	r1, r3
   18204:	ldr	r0, [fp, #-12]
   18208:	bl	180c4 <__assert_fail@plt+0x6eb8>
   1820c:	str	r0, [fp, #-24]	; 0xffffffe8
   18210:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18214:	cmp	r3, #0
   18218:	bne	1822c <__assert_fail@plt+0x7020>
   1821c:	ldr	r0, [fp, #-12]
   18220:	bl	12edc <__assert_fail@plt+0x1cd0>
   18224:	mvn	r3, #0
   18228:	b	184dc <__assert_fail@plt+0x72d0>
   1822c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18230:	str	r3, [fp, #-12]
   18234:	ldr	r3, [fp, #-8]
   18238:	cmp	r3, #0
   1823c:	blt	181b4 <__assert_fail@plt+0x6fa8>
   18240:	ldr	r3, [fp, #-48]	; 0xffffffd0
   18244:	ldr	r2, [fp, #-12]
   18248:	str	r2, [r3]
   1824c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   18250:	b	184dc <__assert_fail@plt+0x72d0>
   18254:	ldr	r3, [fp, #-40]	; 0xffffffd8
   18258:	cmp	r3, #0
   1825c:	beq	1827c <__assert_fail@plt+0x7070>
   18260:	ldr	r3, [fp, #-44]	; 0xffffffd4
   18264:	ldr	r2, [fp, #-40]	; 0xffffffd8
   18268:	mov	r1, #0
   1826c:	mov	r0, #0
   18270:	bl	18abc <__assert_fail@plt+0x78b0>
   18274:	mov	r3, r0
   18278:	b	1828c <__assert_fail@plt+0x7080>
   1827c:	mov	r1, #0
   18280:	mov	r0, #0
   18284:	bl	111b8 <getgroups@plt>
   18288:	mov	r3, r0
   1828c:	str	r3, [fp, #-36]	; 0xffffffdc
   18290:	ldr	r3, [fp, #-36]	; 0xffffffdc
   18294:	cmp	r3, #0
   18298:	bge	18304 <__assert_fail@plt+0x70f8>
   1829c:	bl	11110 <__errno_location@plt>
   182a0:	mov	r3, r0
   182a4:	ldr	r3, [r3]
   182a8:	cmp	r3, #38	; 0x26
   182ac:	bne	182fc <__assert_fail@plt+0x70f0>
   182b0:	mov	r1, #1
   182b4:	mov	r0, #0
   182b8:	bl	180c4 <__assert_fail@plt+0x6eb8>
   182bc:	str	r0, [fp, #-12]
   182c0:	ldr	r3, [fp, #-12]
   182c4:	cmp	r3, #0
   182c8:	beq	182fc <__assert_fail@plt+0x70f0>
   182cc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   182d0:	ldr	r2, [fp, #-12]
   182d4:	str	r2, [r3]
   182d8:	ldr	r3, [fp, #-12]
   182dc:	ldr	r2, [fp, #-44]	; 0xffffffd4
   182e0:	str	r2, [r3]
   182e4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   182e8:	cmn	r3, #1
   182ec:	movne	r3, #1
   182f0:	moveq	r3, #0
   182f4:	uxtb	r3, r3
   182f8:	b	184dc <__assert_fail@plt+0x72d0>
   182fc:	mvn	r3, #0
   18300:	b	184dc <__assert_fail@plt+0x72d0>
   18304:	ldr	r3, [fp, #-36]	; 0xffffffdc
   18308:	cmp	r3, #0
   1830c:	beq	18328 <__assert_fail@plt+0x711c>
   18310:	ldr	r3, [fp, #-40]	; 0xffffffd8
   18314:	cmp	r3, #0
   18318:	bne	18334 <__assert_fail@plt+0x7128>
   1831c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   18320:	cmn	r3, #1
   18324:	beq	18334 <__assert_fail@plt+0x7128>
   18328:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1832c:	add	r3, r3, #1
   18330:	str	r3, [fp, #-36]	; 0xffffffdc
   18334:	ldr	r3, [fp, #-36]	; 0xffffffdc
   18338:	mov	r1, r3
   1833c:	mov	r0, #0
   18340:	bl	180c4 <__assert_fail@plt+0x6eb8>
   18344:	str	r0, [fp, #-12]
   18348:	ldr	r3, [fp, #-12]
   1834c:	cmp	r3, #0
   18350:	bne	1835c <__assert_fail@plt+0x7150>
   18354:	mvn	r3, #0
   18358:	b	184dc <__assert_fail@plt+0x72d0>
   1835c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   18360:	cmp	r3, #0
   18364:	beq	18384 <__assert_fail@plt+0x7178>
   18368:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1836c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   18370:	ldr	r2, [fp, #-40]	; 0xffffffd8
   18374:	ldr	r1, [fp, #-12]
   18378:	bl	18abc <__assert_fail@plt+0x78b0>
   1837c:	mov	r3, r0
   18380:	b	183cc <__assert_fail@plt+0x71c0>
   18384:	ldr	r3, [fp, #-36]	; 0xffffffdc
   18388:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1838c:	cmn	r2, #1
   18390:	movne	r2, #1
   18394:	moveq	r2, #0
   18398:	uxtb	r2, r2
   1839c:	sub	r0, r3, r2
   183a0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   183a4:	cmn	r3, #1
   183a8:	beq	183b4 <__assert_fail@plt+0x71a8>
   183ac:	mov	r3, #4
   183b0:	b	183b8 <__assert_fail@plt+0x71ac>
   183b4:	mov	r3, #0
   183b8:	ldr	r2, [fp, #-12]
   183bc:	add	r3, r2, r3
   183c0:	mov	r1, r3
   183c4:	bl	111b8 <getgroups@plt>
   183c8:	mov	r3, r0
   183cc:	str	r3, [fp, #-8]
   183d0:	ldr	r3, [fp, #-8]
   183d4:	cmp	r3, #0
   183d8:	bge	183ec <__assert_fail@plt+0x71e0>
   183dc:	ldr	r0, [fp, #-12]
   183e0:	bl	12edc <__assert_fail@plt+0x1cd0>
   183e4:	mvn	r3, #0
   183e8:	b	184dc <__assert_fail@plt+0x72d0>
   183ec:	ldr	r3, [fp, #-40]	; 0xffffffd8
   183f0:	cmp	r3, #0
   183f4:	bne	1841c <__assert_fail@plt+0x7210>
   183f8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   183fc:	cmn	r3, #1
   18400:	beq	1841c <__assert_fail@plt+0x7210>
   18404:	ldr	r3, [fp, #-12]
   18408:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1840c:	str	r2, [r3]
   18410:	ldr	r3, [fp, #-8]
   18414:	add	r3, r3, #1
   18418:	str	r3, [fp, #-8]
   1841c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   18420:	ldr	r2, [fp, #-12]
   18424:	str	r2, [r3]
   18428:	ldr	r3, [fp, #-8]
   1842c:	cmp	r3, #1
   18430:	ble	184d8 <__assert_fail@plt+0x72cc>
   18434:	ldr	r3, [fp, #-12]
   18438:	ldr	r3, [r3]
   1843c:	str	r3, [fp, #-28]	; 0xffffffe4
   18440:	ldr	r3, [fp, #-8]
   18444:	lsl	r3, r3, #2
   18448:	ldr	r2, [fp, #-12]
   1844c:	add	r3, r2, r3
   18450:	str	r3, [fp, #-32]	; 0xffffffe0
   18454:	ldr	r3, [fp, #-12]
   18458:	add	r3, r3, #4
   1845c:	str	r3, [fp, #-16]
   18460:	b	184c8 <__assert_fail@plt+0x72bc>
   18464:	ldr	r3, [fp, #-16]
   18468:	ldr	r3, [r3]
   1846c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   18470:	cmp	r2, r3
   18474:	beq	18490 <__assert_fail@plt+0x7284>
   18478:	ldr	r3, [fp, #-16]
   1847c:	ldr	r2, [r3]
   18480:	ldr	r3, [fp, #-12]
   18484:	ldr	r3, [r3]
   18488:	cmp	r2, r3
   1848c:	bne	184a0 <__assert_fail@plt+0x7294>
   18490:	ldr	r3, [fp, #-8]
   18494:	sub	r3, r3, #1
   18498:	str	r3, [fp, #-8]
   1849c:	b	184bc <__assert_fail@plt+0x72b0>
   184a0:	ldr	r3, [fp, #-12]
   184a4:	add	r3, r3, #4
   184a8:	str	r3, [fp, #-12]
   184ac:	ldr	r3, [fp, #-16]
   184b0:	ldr	r2, [r3]
   184b4:	ldr	r3, [fp, #-12]
   184b8:	str	r2, [r3]
   184bc:	ldr	r3, [fp, #-16]
   184c0:	add	r3, r3, #4
   184c4:	str	r3, [fp, #-16]
   184c8:	ldr	r2, [fp, #-16]
   184cc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   184d0:	cmp	r2, r3
   184d4:	bcc	18464 <__assert_fail@plt+0x7258>
   184d8:	ldr	r3, [fp, #-8]
   184dc:	mov	r0, r3
   184e0:	sub	sp, fp, #4
   184e4:	ldr	fp, [sp]
   184e8:	add	sp, sp, #4
   184ec:	pop	{pc}		; (ldr pc, [sp], #4)
   184f0:	str	fp, [sp, #-8]!
   184f4:	str	lr, [sp, #4]
   184f8:	add	fp, sp, #4
   184fc:	sub	sp, sp, #24
   18500:	str	r0, [fp, #-16]
   18504:	str	r1, [fp, #-20]	; 0xffffffec
   18508:	str	r2, [fp, #-24]	; 0xffffffe8
   1850c:	mov	ip, #0
   18510:	ldr	r2, [fp, #-20]	; 0xffffffec
   18514:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18518:	umull	r0, r1, r2, r3
   1851c:	mov	r2, #0
   18520:	mov	r3, #0
   18524:	mov	r2, r1
   18528:	mov	r3, #0
   1852c:	cmp	r2, #0
   18530:	beq	18538 <__assert_fail@plt+0x732c>
   18534:	mov	ip, #1
   18538:	mov	r3, r0
   1853c:	str	r3, [fp, #-8]
   18540:	mov	r3, ip
   18544:	and	r3, r3, #1
   18548:	uxtb	r3, r3
   1854c:	cmp	r3, #0
   18550:	beq	1856c <__assert_fail@plt+0x7360>
   18554:	bl	11110 <__errno_location@plt>
   18558:	mov	r2, r0
   1855c:	mov	r3, #12
   18560:	str	r3, [r2]
   18564:	mov	r3, #0
   18568:	b	18580 <__assert_fail@plt+0x7374>
   1856c:	ldr	r3, [fp, #-8]
   18570:	mov	r1, r3
   18574:	ldr	r0, [fp, #-16]
   18578:	bl	1792c <__assert_fail@plt+0x6720>
   1857c:	mov	r3, r0
   18580:	mov	r0, r3
   18584:	sub	sp, fp, #4
   18588:	ldr	fp, [sp]
   1858c:	add	sp, sp, #4
   18590:	pop	{pc}		; (ldr pc, [sp], #4)
   18594:	push	{fp}		; (str fp, [sp, #-4]!)
   18598:	add	fp, sp, #0
   1859c:	sub	sp, sp, #12
   185a0:	str	r0, [fp, #-8]
   185a4:	ldr	r3, [fp, #-8]
   185a8:	cmp	r3, #90	; 0x5a
   185ac:	bgt	185d0 <__assert_fail@plt+0x73c4>
   185b0:	ldr	r3, [fp, #-8]
   185b4:	cmp	r3, #65	; 0x41
   185b8:	bge	185e0 <__assert_fail@plt+0x73d4>
   185bc:	ldr	r3, [fp, #-8]
   185c0:	sub	r3, r3, #48	; 0x30
   185c4:	cmp	r3, #9
   185c8:	bhi	185e8 <__assert_fail@plt+0x73dc>
   185cc:	b	185e0 <__assert_fail@plt+0x73d4>
   185d0:	ldr	r3, [fp, #-8]
   185d4:	sub	r3, r3, #97	; 0x61
   185d8:	cmp	r3, #25
   185dc:	bhi	185e8 <__assert_fail@plt+0x73dc>
   185e0:	mov	r3, #1
   185e4:	b	185ec <__assert_fail@plt+0x73e0>
   185e8:	mov	r3, #0
   185ec:	mov	r0, r3
   185f0:	add	sp, fp, #0
   185f4:	pop	{fp}		; (ldr fp, [sp], #4)
   185f8:	bx	lr
   185fc:	push	{fp}		; (str fp, [sp, #-4]!)
   18600:	add	fp, sp, #0
   18604:	sub	sp, sp, #12
   18608:	str	r0, [fp, #-8]
   1860c:	ldr	r3, [fp, #-8]
   18610:	cmp	r3, #65	; 0x41
   18614:	blt	1863c <__assert_fail@plt+0x7430>
   18618:	ldr	r3, [fp, #-8]
   1861c:	cmp	r3, #90	; 0x5a
   18620:	ble	18634 <__assert_fail@plt+0x7428>
   18624:	ldr	r3, [fp, #-8]
   18628:	sub	r3, r3, #97	; 0x61
   1862c:	cmp	r3, #25
   18630:	bhi	1863c <__assert_fail@plt+0x7430>
   18634:	mov	r3, #1
   18638:	b	18640 <__assert_fail@plt+0x7434>
   1863c:	mov	r3, #0
   18640:	mov	r0, r3
   18644:	add	sp, fp, #0
   18648:	pop	{fp}		; (ldr fp, [sp], #4)
   1864c:	bx	lr
   18650:	push	{fp}		; (str fp, [sp, #-4]!)
   18654:	add	fp, sp, #0
   18658:	sub	sp, sp, #12
   1865c:	str	r0, [fp, #-8]
   18660:	ldr	r3, [fp, #-8]
   18664:	cmp	r3, #127	; 0x7f
   18668:	bhi	18674 <__assert_fail@plt+0x7468>
   1866c:	mov	r3, #1
   18670:	b	18678 <__assert_fail@plt+0x746c>
   18674:	mov	r3, #0
   18678:	mov	r0, r3
   1867c:	add	sp, fp, #0
   18680:	pop	{fp}		; (ldr fp, [sp], #4)
   18684:	bx	lr
   18688:	push	{fp}		; (str fp, [sp, #-4]!)
   1868c:	add	fp, sp, #0
   18690:	sub	sp, sp, #12
   18694:	str	r0, [fp, #-8]
   18698:	ldr	r3, [fp, #-8]
   1869c:	cmp	r3, #32
   186a0:	beq	186b0 <__assert_fail@plt+0x74a4>
   186a4:	ldr	r3, [fp, #-8]
   186a8:	cmp	r3, #9
   186ac:	bne	186b8 <__assert_fail@plt+0x74ac>
   186b0:	mov	r3, #1
   186b4:	b	186bc <__assert_fail@plt+0x74b0>
   186b8:	mov	r3, #0
   186bc:	and	r3, r3, #1
   186c0:	uxtb	r3, r3
   186c4:	mov	r0, r3
   186c8:	add	sp, fp, #0
   186cc:	pop	{fp}		; (ldr fp, [sp], #4)
   186d0:	bx	lr
   186d4:	push	{fp}		; (str fp, [sp, #-4]!)
   186d8:	add	fp, sp, #0
   186dc:	sub	sp, sp, #12
   186e0:	str	r0, [fp, #-8]
   186e4:	ldr	r3, [fp, #-8]
   186e8:	cmp	r3, #0
   186ec:	blt	18710 <__assert_fail@plt+0x7504>
   186f0:	ldr	r3, [fp, #-8]
   186f4:	cmp	r3, #31
   186f8:	ble	18708 <__assert_fail@plt+0x74fc>
   186fc:	ldr	r3, [fp, #-8]
   18700:	cmp	r3, #127	; 0x7f
   18704:	bne	18710 <__assert_fail@plt+0x7504>
   18708:	mov	r3, #1
   1870c:	b	18714 <__assert_fail@plt+0x7508>
   18710:	mov	r3, #0
   18714:	mov	r0, r3
   18718:	add	sp, fp, #0
   1871c:	pop	{fp}		; (ldr fp, [sp], #4)
   18720:	bx	lr
   18724:	push	{fp}		; (str fp, [sp, #-4]!)
   18728:	add	fp, sp, #0
   1872c:	sub	sp, sp, #12
   18730:	str	r0, [fp, #-8]
   18734:	ldr	r3, [fp, #-8]
   18738:	sub	r3, r3, #48	; 0x30
   1873c:	cmp	r3, #9
   18740:	bhi	1874c <__assert_fail@plt+0x7540>
   18744:	mov	r3, #1
   18748:	b	18750 <__assert_fail@plt+0x7544>
   1874c:	mov	r3, #0
   18750:	mov	r0, r3
   18754:	add	sp, fp, #0
   18758:	pop	{fp}		; (ldr fp, [sp], #4)
   1875c:	bx	lr
   18760:	push	{fp}		; (str fp, [sp, #-4]!)
   18764:	add	fp, sp, #0
   18768:	sub	sp, sp, #12
   1876c:	str	r0, [fp, #-8]
   18770:	ldr	r3, [fp, #-8]
   18774:	sub	r3, r3, #33	; 0x21
   18778:	cmp	r3, #93	; 0x5d
   1877c:	bhi	18788 <__assert_fail@plt+0x757c>
   18780:	mov	r3, #1
   18784:	b	1878c <__assert_fail@plt+0x7580>
   18788:	mov	r3, #0
   1878c:	mov	r0, r3
   18790:	add	sp, fp, #0
   18794:	pop	{fp}		; (ldr fp, [sp], #4)
   18798:	bx	lr
   1879c:	push	{fp}		; (str fp, [sp, #-4]!)
   187a0:	add	fp, sp, #0
   187a4:	sub	sp, sp, #12
   187a8:	str	r0, [fp, #-8]
   187ac:	ldr	r3, [fp, #-8]
   187b0:	sub	r3, r3, #97	; 0x61
   187b4:	cmp	r3, #25
   187b8:	bhi	187c4 <__assert_fail@plt+0x75b8>
   187bc:	mov	r3, #1
   187c0:	b	187c8 <__assert_fail@plt+0x75bc>
   187c4:	mov	r3, #0
   187c8:	mov	r0, r3
   187cc:	add	sp, fp, #0
   187d0:	pop	{fp}		; (ldr fp, [sp], #4)
   187d4:	bx	lr
   187d8:	push	{fp}		; (str fp, [sp, #-4]!)
   187dc:	add	fp, sp, #0
   187e0:	sub	sp, sp, #12
   187e4:	str	r0, [fp, #-8]
   187e8:	ldr	r3, [fp, #-8]
   187ec:	sub	r3, r3, #32
   187f0:	cmp	r3, #94	; 0x5e
   187f4:	bhi	18800 <__assert_fail@plt+0x75f4>
   187f8:	mov	r3, #1
   187fc:	b	18804 <__assert_fail@plt+0x75f8>
   18800:	mov	r3, #0
   18804:	mov	r0, r3
   18808:	add	sp, fp, #0
   1880c:	pop	{fp}		; (ldr fp, [sp], #4)
   18810:	bx	lr
   18814:	push	{fp}		; (str fp, [sp, #-4]!)
   18818:	add	fp, sp, #0
   1881c:	sub	sp, sp, #12
   18820:	str	r0, [fp, #-8]
   18824:	ldr	r3, [fp, #-8]
   18828:	cmp	r3, #64	; 0x40
   1882c:	bgt	18850 <__assert_fail@plt+0x7644>
   18830:	ldr	r3, [fp, #-8]
   18834:	cmp	r3, #58	; 0x3a
   18838:	bge	18878 <__assert_fail@plt+0x766c>
   1883c:	ldr	r3, [fp, #-8]
   18840:	sub	r3, r3, #33	; 0x21
   18844:	cmp	r3, #14
   18848:	bhi	18880 <__assert_fail@plt+0x7674>
   1884c:	b	18878 <__assert_fail@plt+0x766c>
   18850:	ldr	r3, [fp, #-8]
   18854:	cmp	r3, #91	; 0x5b
   18858:	blt	18880 <__assert_fail@plt+0x7674>
   1885c:	ldr	r3, [fp, #-8]
   18860:	cmp	r3, #96	; 0x60
   18864:	ble	18878 <__assert_fail@plt+0x766c>
   18868:	ldr	r3, [fp, #-8]
   1886c:	sub	r3, r3, #123	; 0x7b
   18870:	cmp	r3, #3
   18874:	bhi	18880 <__assert_fail@plt+0x7674>
   18878:	mov	r3, #1
   1887c:	b	18884 <__assert_fail@plt+0x7678>
   18880:	mov	r3, #0
   18884:	mov	r0, r3
   18888:	add	sp, fp, #0
   1888c:	pop	{fp}		; (ldr fp, [sp], #4)
   18890:	bx	lr
   18894:	push	{fp}		; (str fp, [sp, #-4]!)
   18898:	add	fp, sp, #0
   1889c:	sub	sp, sp, #12
   188a0:	str	r0, [fp, #-8]
   188a4:	ldr	r3, [fp, #-8]
   188a8:	cmp	r3, #9
   188ac:	blt	188d0 <__assert_fail@plt+0x76c4>
   188b0:	ldr	r3, [fp, #-8]
   188b4:	cmp	r3, #13
   188b8:	ble	188c8 <__assert_fail@plt+0x76bc>
   188bc:	ldr	r3, [fp, #-8]
   188c0:	cmp	r3, #32
   188c4:	bne	188d0 <__assert_fail@plt+0x76c4>
   188c8:	mov	r3, #1
   188cc:	b	188d4 <__assert_fail@plt+0x76c8>
   188d0:	mov	r3, #0
   188d4:	mov	r0, r3
   188d8:	add	sp, fp, #0
   188dc:	pop	{fp}		; (ldr fp, [sp], #4)
   188e0:	bx	lr
   188e4:	push	{fp}		; (str fp, [sp, #-4]!)
   188e8:	add	fp, sp, #0
   188ec:	sub	sp, sp, #12
   188f0:	str	r0, [fp, #-8]
   188f4:	ldr	r3, [fp, #-8]
   188f8:	sub	r3, r3, #65	; 0x41
   188fc:	cmp	r3, #25
   18900:	bhi	1890c <__assert_fail@plt+0x7700>
   18904:	mov	r3, #1
   18908:	b	18910 <__assert_fail@plt+0x7704>
   1890c:	mov	r3, #0
   18910:	mov	r0, r3
   18914:	add	sp, fp, #0
   18918:	pop	{fp}		; (ldr fp, [sp], #4)
   1891c:	bx	lr
   18920:	push	{fp}		; (str fp, [sp, #-4]!)
   18924:	add	fp, sp, #0
   18928:	sub	sp, sp, #12
   1892c:	str	r0, [fp, #-8]
   18930:	ldr	r3, [fp, #-8]
   18934:	sub	r3, r3, #48	; 0x30
   18938:	cmp	r3, #54	; 0x36
   1893c:	ldrls	pc, [pc, r3, lsl #2]
   18940:	b	18a28 <__assert_fail@plt+0x781c>
   18944:	andeq	r8, r1, r0, lsr #20
   18948:	andeq	r8, r1, r0, lsr #20
   1894c:	andeq	r8, r1, r0, lsr #20
   18950:	andeq	r8, r1, r0, lsr #20
   18954:	andeq	r8, r1, r0, lsr #20
   18958:	andeq	r8, r1, r0, lsr #20
   1895c:	andeq	r8, r1, r0, lsr #20
   18960:	andeq	r8, r1, r0, lsr #20
   18964:	andeq	r8, r1, r0, lsr #20
   18968:	andeq	r8, r1, r0, lsr #20
   1896c:	andeq	r8, r1, r8, lsr #20
   18970:	andeq	r8, r1, r8, lsr #20
   18974:	andeq	r8, r1, r8, lsr #20
   18978:	andeq	r8, r1, r8, lsr #20
   1897c:	andeq	r8, r1, r8, lsr #20
   18980:	andeq	r8, r1, r8, lsr #20
   18984:	andeq	r8, r1, r8, lsr #20
   18988:	andeq	r8, r1, r0, lsr #20
   1898c:	andeq	r8, r1, r0, lsr #20
   18990:	andeq	r8, r1, r0, lsr #20
   18994:	andeq	r8, r1, r0, lsr #20
   18998:	andeq	r8, r1, r0, lsr #20
   1899c:	andeq	r8, r1, r0, lsr #20
   189a0:	andeq	r8, r1, r8, lsr #20
   189a4:	andeq	r8, r1, r8, lsr #20
   189a8:	andeq	r8, r1, r8, lsr #20
   189ac:	andeq	r8, r1, r8, lsr #20
   189b0:	andeq	r8, r1, r8, lsr #20
   189b4:	andeq	r8, r1, r8, lsr #20
   189b8:	andeq	r8, r1, r8, lsr #20
   189bc:	andeq	r8, r1, r8, lsr #20
   189c0:	andeq	r8, r1, r8, lsr #20
   189c4:	andeq	r8, r1, r8, lsr #20
   189c8:	andeq	r8, r1, r8, lsr #20
   189cc:	andeq	r8, r1, r8, lsr #20
   189d0:	andeq	r8, r1, r8, lsr #20
   189d4:	andeq	r8, r1, r8, lsr #20
   189d8:	andeq	r8, r1, r8, lsr #20
   189dc:	andeq	r8, r1, r8, lsr #20
   189e0:	andeq	r8, r1, r8, lsr #20
   189e4:	andeq	r8, r1, r8, lsr #20
   189e8:	andeq	r8, r1, r8, lsr #20
   189ec:	andeq	r8, r1, r8, lsr #20
   189f0:	andeq	r8, r1, r8, lsr #20
   189f4:	andeq	r8, r1, r8, lsr #20
   189f8:	andeq	r8, r1, r8, lsr #20
   189fc:	andeq	r8, r1, r8, lsr #20
   18a00:	andeq	r8, r1, r8, lsr #20
   18a04:	andeq	r8, r1, r8, lsr #20
   18a08:	andeq	r8, r1, r0, lsr #20
   18a0c:	andeq	r8, r1, r0, lsr #20
   18a10:	andeq	r8, r1, r0, lsr #20
   18a14:	andeq	r8, r1, r0, lsr #20
   18a18:	andeq	r8, r1, r0, lsr #20
   18a1c:	andeq	r8, r1, r0, lsr #20
   18a20:	mov	r3, #1
   18a24:	b	18a2c <__assert_fail@plt+0x7820>
   18a28:	mov	r3, #0
   18a2c:	mov	r0, r3
   18a30:	add	sp, fp, #0
   18a34:	pop	{fp}		; (ldr fp, [sp], #4)
   18a38:	bx	lr
   18a3c:	push	{fp}		; (str fp, [sp, #-4]!)
   18a40:	add	fp, sp, #0
   18a44:	sub	sp, sp, #12
   18a48:	str	r0, [fp, #-8]
   18a4c:	ldr	r3, [fp, #-8]
   18a50:	sub	r3, r3, #65	; 0x41
   18a54:	cmp	r3, #25
   18a58:	bhi	18a68 <__assert_fail@plt+0x785c>
   18a5c:	ldr	r3, [fp, #-8]
   18a60:	add	r3, r3, #32
   18a64:	b	18a6c <__assert_fail@plt+0x7860>
   18a68:	ldr	r3, [fp, #-8]
   18a6c:	mov	r0, r3
   18a70:	add	sp, fp, #0
   18a74:	pop	{fp}		; (ldr fp, [sp], #4)
   18a78:	bx	lr
   18a7c:	push	{fp}		; (str fp, [sp, #-4]!)
   18a80:	add	fp, sp, #0
   18a84:	sub	sp, sp, #12
   18a88:	str	r0, [fp, #-8]
   18a8c:	ldr	r3, [fp, #-8]
   18a90:	sub	r3, r3, #97	; 0x61
   18a94:	cmp	r3, #25
   18a98:	bhi	18aa8 <__assert_fail@plt+0x789c>
   18a9c:	ldr	r3, [fp, #-8]
   18aa0:	sub	r3, r3, #32
   18aa4:	b	18aac <__assert_fail@plt+0x78a0>
   18aa8:	ldr	r3, [fp, #-8]
   18aac:	mov	r0, r3
   18ab0:	add	sp, fp, #0
   18ab4:	pop	{fp}		; (ldr fp, [sp], #4)
   18ab8:	bx	lr
   18abc:	str	fp, [sp, #-8]!
   18ac0:	str	lr, [sp, #4]
   18ac4:	add	fp, sp, #4
   18ac8:	sub	sp, sp, #40	; 0x28
   18acc:	str	r0, [fp, #-32]	; 0xffffffe0
   18ad0:	str	r1, [fp, #-36]	; 0xffffffdc
   18ad4:	str	r2, [fp, #-40]	; 0xffffffd8
   18ad8:	str	r3, [fp, #-44]	; 0xffffffd4
   18adc:	mov	r3, #0
   18ae0:	str	r3, [fp, #-8]
   18ae4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   18ae8:	cmn	r3, #1
   18aec:	beq	18b20 <__assert_fail@plt+0x7914>
   18af0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18af4:	cmp	r3, #0
   18af8:	beq	18b14 <__assert_fail@plt+0x7908>
   18afc:	ldr	r3, [fp, #-8]
   18b00:	lsl	r3, r3, #2
   18b04:	ldr	r2, [fp, #-36]	; 0xffffffdc
   18b08:	add	r3, r2, r3
   18b0c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   18b10:	str	r2, [r3]
   18b14:	ldr	r3, [fp, #-8]
   18b18:	add	r3, r3, #1
   18b1c:	str	r3, [fp, #-8]
   18b20:	bl	1114c <setgrent@plt>
   18b24:	bl	11110 <__errno_location@plt>
   18b28:	mov	r2, r0
   18b2c:	mov	r3, #0
   18b30:	str	r3, [r2]
   18b34:	bl	11158 <getgrent@plt>
   18b38:	str	r0, [fp, #-20]	; 0xffffffec
   18b3c:	ldr	r3, [fp, #-20]	; 0xffffffec
   18b40:	cmp	r3, #0
   18b44:	beq	18c74 <__assert_fail@plt+0x7a68>
   18b48:	ldr	r3, [fp, #-20]	; 0xffffffec
   18b4c:	ldr	r3, [r3, #12]
   18b50:	str	r3, [fp, #-12]
   18b54:	b	18c60 <__assert_fail@plt+0x7a54>
   18b58:	ldr	r3, [fp, #-12]
   18b5c:	ldr	r3, [r3]
   18b60:	mov	r1, r3
   18b64:	ldr	r0, [fp, #-40]	; 0xffffffd8
   18b68:	bl	10f54 <strcmp@plt>
   18b6c:	mov	r3, r0
   18b70:	cmp	r3, #0
   18b74:	bne	18c50 <__assert_fail@plt+0x7a44>
   18b78:	mov	r3, #0
   18b7c:	str	r3, [fp, #-16]
   18b80:	b	18bc0 <__assert_fail@plt+0x79b4>
   18b84:	ldr	r3, [fp, #-36]	; 0xffffffdc
   18b88:	cmp	r3, #0
   18b8c:	beq	18bb4 <__assert_fail@plt+0x79a8>
   18b90:	ldr	r3, [fp, #-16]
   18b94:	lsl	r3, r3, #2
   18b98:	ldr	r2, [fp, #-36]	; 0xffffffdc
   18b9c:	add	r3, r2, r3
   18ba0:	ldr	r2, [r3]
   18ba4:	ldr	r3, [fp, #-20]	; 0xffffffec
   18ba8:	ldr	r3, [r3, #8]
   18bac:	cmp	r2, r3
   18bb0:	beq	18bd4 <__assert_fail@plt+0x79c8>
   18bb4:	ldr	r3, [fp, #-16]
   18bb8:	add	r3, r3, #1
   18bbc:	str	r3, [fp, #-16]
   18bc0:	ldr	r2, [fp, #-16]
   18bc4:	ldr	r3, [fp, #-8]
   18bc8:	cmp	r2, r3
   18bcc:	blt	18b84 <__assert_fail@plt+0x7978>
   18bd0:	b	18bd8 <__assert_fail@plt+0x79cc>
   18bd4:	nop	{0}
   18bd8:	ldr	r2, [fp, #-16]
   18bdc:	ldr	r3, [fp, #-8]
   18be0:	cmp	r2, r3
   18be4:	bne	18c54 <__assert_fail@plt+0x7a48>
   18be8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18bec:	cmp	r3, #0
   18bf0:	beq	18c20 <__assert_fail@plt+0x7a14>
   18bf4:	ldr	r2, [fp, #-8]
   18bf8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18bfc:	cmp	r2, r3
   18c00:	bge	18c98 <__assert_fail@plt+0x7a8c>
   18c04:	ldr	r3, [fp, #-8]
   18c08:	lsl	r3, r3, #2
   18c0c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   18c10:	add	r3, r2, r3
   18c14:	ldr	r2, [fp, #-20]	; 0xffffffec
   18c18:	ldr	r2, [r2, #8]
   18c1c:	str	r2, [r3]
   18c20:	ldr	r3, [fp, #-8]
   18c24:	cmn	r3, #-2147483647	; 0x80000001
   18c28:	bne	18c40 <__assert_fail@plt+0x7a34>
   18c2c:	bl	11110 <__errno_location@plt>
   18c30:	mov	r2, r0
   18c34:	mov	r3, #75	; 0x4b
   18c38:	str	r3, [r2]
   18c3c:	b	18ca4 <__assert_fail@plt+0x7a98>
   18c40:	ldr	r3, [fp, #-8]
   18c44:	add	r3, r3, #1
   18c48:	str	r3, [fp, #-8]
   18c4c:	b	18c54 <__assert_fail@plt+0x7a48>
   18c50:	nop	{0}
   18c54:	ldr	r3, [fp, #-12]
   18c58:	add	r3, r3, #4
   18c5c:	str	r3, [fp, #-12]
   18c60:	ldr	r3, [fp, #-12]
   18c64:	ldr	r3, [r3]
   18c68:	cmp	r3, #0
   18c6c:	bne	18b58 <__assert_fail@plt+0x794c>
   18c70:	b	18b24 <__assert_fail@plt+0x7918>
   18c74:	nop	{0}
   18c78:	bl	11110 <__errno_location@plt>
   18c7c:	mov	r3, r0
   18c80:	ldr	r3, [r3]
   18c84:	cmp	r3, #0
   18c88:	beq	18ca0 <__assert_fail@plt+0x7a94>
   18c8c:	mvn	r3, #0
   18c90:	str	r3, [fp, #-8]
   18c94:	b	18ca4 <__assert_fail@plt+0x7a98>
   18c98:	nop	{0}
   18c9c:	b	18ca4 <__assert_fail@plt+0x7a98>
   18ca0:	nop	{0}
   18ca4:	bl	11110 <__errno_location@plt>
   18ca8:	mov	r3, r0
   18cac:	ldr	r3, [r3]
   18cb0:	str	r3, [fp, #-24]	; 0xffffffe8
   18cb4:	bl	10f18 <endgrent@plt>
   18cb8:	bl	11110 <__errno_location@plt>
   18cbc:	mov	r2, r0
   18cc0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18cc4:	str	r3, [r2]
   18cc8:	ldr	r3, [fp, #-8]
   18ccc:	mov	r0, r3
   18cd0:	sub	sp, fp, #4
   18cd4:	ldr	fp, [sp]
   18cd8:	add	sp, sp, #4
   18cdc:	pop	{pc}		; (ldr pc, [sp], #4)
   18ce0:	str	fp, [sp, #-8]!
   18ce4:	str	lr, [sp, #4]
   18ce8:	add	fp, sp, #4
   18cec:	sub	sp, sp, #272	; 0x110
   18cf0:	str	r0, [fp, #-272]	; 0xfffffef0
   18cf4:	sub	r3, fp, #264	; 0x108
   18cf8:	movw	r2, #257	; 0x101
   18cfc:	mov	r1, r3
   18d00:	ldr	r0, [fp, #-272]	; 0xfffffef0
   18d04:	bl	18ea4 <__assert_fail@plt+0x7c98>
   18d08:	mov	r3, r0
   18d0c:	cmp	r3, #0
   18d10:	beq	18d1c <__assert_fail@plt+0x7b10>
   18d14:	mov	r3, #0
   18d18:	b	18d70 <__assert_fail@plt+0x7b64>
   18d1c:	sub	r3, fp, #264	; 0x108
   18d20:	movw	r1, #40832	; 0x9f80
   18d24:	movt	r1, #1
   18d28:	mov	r0, r3
   18d2c:	bl	10f54 <strcmp@plt>
   18d30:	mov	r3, r0
   18d34:	cmp	r3, #0
   18d38:	beq	18d64 <__assert_fail@plt+0x7b58>
   18d3c:	sub	r3, fp, #264	; 0x108
   18d40:	movw	r1, #40836	; 0x9f84
   18d44:	movt	r1, #1
   18d48:	mov	r0, r3
   18d4c:	bl	10f54 <strcmp@plt>
   18d50:	mov	r3, r0
   18d54:	cmp	r3, #0
   18d58:	beq	18d64 <__assert_fail@plt+0x7b58>
   18d5c:	mov	r3, #1
   18d60:	b	18d68 <__assert_fail@plt+0x7b5c>
   18d64:	mov	r3, #0
   18d68:	and	r3, r3, #1
   18d6c:	uxtb	r3, r3
   18d70:	mov	r0, r3
   18d74:	sub	sp, fp, #4
   18d78:	ldr	fp, [sp]
   18d7c:	add	sp, sp, #4
   18d80:	pop	{pc}		; (ldr pc, [sp], #4)
   18d84:	str	fp, [sp, #-8]!
   18d88:	str	lr, [sp, #4]
   18d8c:	add	fp, sp, #4
   18d90:	sub	sp, sp, #16
   18d94:	str	r0, [fp, #-16]
   18d98:	mov	r1, #0
   18d9c:	ldr	r0, [fp, #-16]
   18da0:	bl	11188 <setlocale@plt>
   18da4:	str	r0, [fp, #-8]
   18da8:	ldr	r3, [fp, #-8]
   18dac:	mov	r0, r3
   18db0:	sub	sp, fp, #4
   18db4:	ldr	fp, [sp]
   18db8:	add	sp, sp, #4
   18dbc:	pop	{pc}		; (ldr pc, [sp], #4)
   18dc0:	str	fp, [sp, #-8]!
   18dc4:	str	lr, [sp, #4]
   18dc8:	add	fp, sp, #4
   18dcc:	sub	sp, sp, #24
   18dd0:	str	r0, [fp, #-16]
   18dd4:	str	r1, [fp, #-20]	; 0xffffffec
   18dd8:	str	r2, [fp, #-24]	; 0xffffffe8
   18ddc:	ldr	r0, [fp, #-16]
   18de0:	bl	18d84 <__assert_fail@plt+0x7b78>
   18de4:	str	r0, [fp, #-8]
   18de8:	ldr	r3, [fp, #-8]
   18dec:	cmp	r3, #0
   18df0:	bne	18e14 <__assert_fail@plt+0x7c08>
   18df4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18df8:	cmp	r3, #0
   18dfc:	beq	18e0c <__assert_fail@plt+0x7c00>
   18e00:	ldr	r3, [fp, #-20]	; 0xffffffec
   18e04:	mov	r2, #0
   18e08:	strb	r2, [r3]
   18e0c:	mov	r3, #22
   18e10:	b	18e90 <__assert_fail@plt+0x7c84>
   18e14:	ldr	r0, [fp, #-8]
   18e18:	bl	110ec <strlen@plt>
   18e1c:	str	r0, [fp, #-12]
   18e20:	ldr	r2, [fp, #-12]
   18e24:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18e28:	cmp	r2, r3
   18e2c:	bcs	18e50 <__assert_fail@plt+0x7c44>
   18e30:	ldr	r3, [fp, #-12]
   18e34:	add	r3, r3, #1
   18e38:	mov	r2, r3
   18e3c:	ldr	r1, [fp, #-8]
   18e40:	ldr	r0, [fp, #-20]	; 0xffffffec
   18e44:	bl	10fa8 <memcpy@plt>
   18e48:	mov	r3, #0
   18e4c:	b	18e90 <__assert_fail@plt+0x7c84>
   18e50:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18e54:	cmp	r3, #0
   18e58:	beq	18e8c <__assert_fail@plt+0x7c80>
   18e5c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18e60:	sub	r3, r3, #1
   18e64:	mov	r2, r3
   18e68:	ldr	r1, [fp, #-8]
   18e6c:	ldr	r0, [fp, #-20]	; 0xffffffec
   18e70:	bl	10fa8 <memcpy@plt>
   18e74:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18e78:	sub	r3, r3, #1
   18e7c:	ldr	r2, [fp, #-20]	; 0xffffffec
   18e80:	add	r3, r2, r3
   18e84:	mov	r2, #0
   18e88:	strb	r2, [r3]
   18e8c:	mov	r3, #34	; 0x22
   18e90:	mov	r0, r3
   18e94:	sub	sp, fp, #4
   18e98:	ldr	fp, [sp]
   18e9c:	add	sp, sp, #4
   18ea0:	pop	{pc}		; (ldr pc, [sp], #4)
   18ea4:	str	fp, [sp, #-8]!
   18ea8:	str	lr, [sp, #4]
   18eac:	add	fp, sp, #4
   18eb0:	sub	sp, sp, #16
   18eb4:	str	r0, [fp, #-8]
   18eb8:	str	r1, [fp, #-12]
   18ebc:	str	r2, [fp, #-16]
   18ec0:	ldr	r2, [fp, #-16]
   18ec4:	ldr	r1, [fp, #-12]
   18ec8:	ldr	r0, [fp, #-8]
   18ecc:	bl	18dc0 <__assert_fail@plt+0x7bb4>
   18ed0:	mov	r3, r0
   18ed4:	mov	r0, r3
   18ed8:	sub	sp, fp, #4
   18edc:	ldr	fp, [sp]
   18ee0:	add	sp, sp, #4
   18ee4:	pop	{pc}		; (ldr pc, [sp], #4)
   18ee8:	str	fp, [sp, #-8]!
   18eec:	str	lr, [sp, #4]
   18ef0:	add	fp, sp, #4
   18ef4:	sub	sp, sp, #8
   18ef8:	str	r0, [fp, #-8]
   18efc:	ldr	r0, [fp, #-8]
   18f00:	bl	18d84 <__assert_fail@plt+0x7b78>
   18f04:	mov	r3, r0
   18f08:	mov	r0, r3
   18f0c:	sub	sp, fp, #4
   18f10:	ldr	fp, [sp]
   18f14:	add	sp, sp, #4
   18f18:	pop	{pc}		; (ldr pc, [sp], #4)
   18f1c:	cmp	r3, #0
   18f20:	cmpeq	r2, #0
   18f24:	bne	18f3c <__assert_fail@plt+0x7d30>
   18f28:	cmp	r1, #0
   18f2c:	cmpeq	r0, #0
   18f30:	mvnne	r1, #0
   18f34:	mvnne	r0, #0
   18f38:	b	18f58 <__assert_fail@plt+0x7d4c>
   18f3c:	sub	sp, sp, #8
   18f40:	push	{sp, lr}
   18f44:	bl	18f68 <__assert_fail@plt+0x7d5c>
   18f48:	ldr	lr, [sp, #4]
   18f4c:	add	sp, sp, #8
   18f50:	pop	{r2, r3}
   18f54:	bx	lr
   18f58:	push	{r1, lr}
   18f5c:	mov	r0, #8
   18f60:	bl	10f30 <raise@plt>
   18f64:	pop	{r1, pc}
   18f68:	cmp	r1, r3
   18f6c:	cmpeq	r0, r2
   18f70:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   18f74:	mov	r4, r0
   18f78:	movcc	r0, #0
   18f7c:	mov	r5, r1
   18f80:	ldr	lr, [sp, #36]	; 0x24
   18f84:	movcc	r1, r0
   18f88:	bcc	19084 <__assert_fail@plt+0x7e78>
   18f8c:	cmp	r3, #0
   18f90:	clzeq	ip, r2
   18f94:	clzne	ip, r3
   18f98:	addeq	ip, ip, #32
   18f9c:	cmp	r5, #0
   18fa0:	clzeq	r1, r4
   18fa4:	addeq	r1, r1, #32
   18fa8:	clzne	r1, r5
   18fac:	sub	ip, ip, r1
   18fb0:	sub	sl, ip, #32
   18fb4:	lsl	r9, r3, ip
   18fb8:	rsb	fp, ip, #32
   18fbc:	orr	r9, r9, r2, lsl sl
   18fc0:	orr	r9, r9, r2, lsr fp
   18fc4:	lsl	r8, r2, ip
   18fc8:	cmp	r5, r9
   18fcc:	cmpeq	r4, r8
   18fd0:	movcc	r0, #0
   18fd4:	movcc	r1, r0
   18fd8:	bcc	18ff4 <__assert_fail@plt+0x7de8>
   18fdc:	mov	r0, #1
   18fe0:	subs	r4, r4, r8
   18fe4:	lsl	r1, r0, sl
   18fe8:	orr	r1, r1, r0, lsr fp
   18fec:	lsl	r0, r0, ip
   18ff0:	sbc	r5, r5, r9
   18ff4:	cmp	ip, #0
   18ff8:	beq	19084 <__assert_fail@plt+0x7e78>
   18ffc:	lsr	r6, r8, #1
   19000:	orr	r6, r6, r9, lsl #31
   19004:	lsr	r7, r9, #1
   19008:	mov	r2, ip
   1900c:	b	19030 <__assert_fail@plt+0x7e24>
   19010:	subs	r3, r4, r6
   19014:	sbc	r8, r5, r7
   19018:	adds	r3, r3, r3
   1901c:	adc	r8, r8, r8
   19020:	adds	r4, r3, #1
   19024:	adc	r5, r8, #0
   19028:	subs	r2, r2, #1
   1902c:	beq	1904c <__assert_fail@plt+0x7e40>
   19030:	cmp	r5, r7
   19034:	cmpeq	r4, r6
   19038:	bcs	19010 <__assert_fail@plt+0x7e04>
   1903c:	adds	r4, r4, r4
   19040:	adc	r5, r5, r5
   19044:	subs	r2, r2, #1
   19048:	bne	19030 <__assert_fail@plt+0x7e24>
   1904c:	lsr	r3, r4, ip
   19050:	orr	r3, r3, r5, lsl fp
   19054:	lsr	r2, r5, ip
   19058:	orr	r3, r3, r5, lsr sl
   1905c:	adds	r0, r0, r4
   19060:	mov	r4, r3
   19064:	lsl	r3, r2, ip
   19068:	orr	r3, r3, r4, lsl sl
   1906c:	lsl	ip, r4, ip
   19070:	orr	r3, r3, r4, lsr fp
   19074:	adc	r1, r1, r5
   19078:	subs	r0, r0, ip
   1907c:	mov	r5, r2
   19080:	sbc	r1, r1, r3
   19084:	cmp	lr, #0
   19088:	strdne	r4, [lr]
   1908c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   19090:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   19094:	mov	r7, r0
   19098:	ldr	r6, [pc, #72]	; 190e8 <__assert_fail@plt+0x7edc>
   1909c:	ldr	r5, [pc, #72]	; 190ec <__assert_fail@plt+0x7ee0>
   190a0:	add	r6, pc, r6
   190a4:	add	r5, pc, r5
   190a8:	sub	r6, r6, r5
   190ac:	mov	r8, r1
   190b0:	mov	r9, r2
   190b4:	bl	10eec <calloc@plt-0x20>
   190b8:	asrs	r6, r6, #2
   190bc:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   190c0:	mov	r4, #0
   190c4:	add	r4, r4, #1
   190c8:	ldr	r3, [r5], #4
   190cc:	mov	r2, r9
   190d0:	mov	r1, r8
   190d4:	mov	r0, r7
   190d8:	blx	r3
   190dc:	cmp	r6, r4
   190e0:	bne	190c4 <__assert_fail@plt+0x7eb8>
   190e4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   190e8:	andeq	r1, r1, r4, ror #28
   190ec:	andeq	r1, r1, ip, asr lr
   190f0:	bx	lr
   190f4:	ldr	r3, [pc, #12]	; 19108 <__assert_fail@plt+0x7efc>
   190f8:	mov	r1, #0
   190fc:	add	r3, pc, r3
   19100:	ldr	r2, [r3]
   19104:	b	1111c <__cxa_atexit@plt>
   19108:	andeq	r2, r1, r4, lsl r0

Disassembly of section .fini:

0001910c <.fini>:
   1910c:	push	{r3, lr}
   19110:	pop	{r3, pc}
