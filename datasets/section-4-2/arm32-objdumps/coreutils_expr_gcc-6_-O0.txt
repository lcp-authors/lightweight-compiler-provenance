
../repos/coreutils/src/expr:     file format elf32-littlearm


Disassembly of section .init:

00010f2c <.init>:
   10f2c:	push	{r3, lr}
   10f30:	bl	112bc <__assert_fail@plt+0x4c>
   10f34:	pop	{r3, pc}

Disassembly of section .plt:

00010f38 <pthread_mutex_unlock@plt-0x14>:
   10f38:	push	{lr}		; (str lr, [sp, #-4]!)
   10f3c:	ldr	lr, [pc, #4]	; 10f48 <pthread_mutex_unlock@plt-0x4>
   10f40:	add	lr, pc, lr
   10f44:	ldr	pc, [lr, #8]!
   10f48:	strheq	r1, [r4], -r8

00010f4c <pthread_mutex_unlock@plt>:
   10f4c:	add	ip, pc, #0, 12
   10f50:	add	ip, ip, #266240	; 0x41000
   10f54:	ldr	pc, [ip, #184]!	; 0xb8

00010f58 <calloc@plt>:
   10f58:	add	ip, pc, #0, 12
   10f5c:	add	ip, ip, #266240	; 0x41000
   10f60:	ldr	pc, [ip, #176]!	; 0xb0

00010f64 <fputs_unlocked@plt>:
   10f64:	add	ip, pc, #0, 12
   10f68:	add	ip, ip, #266240	; 0x41000
   10f6c:	ldr	pc, [ip, #168]!	; 0xa8

00010f70 <wctype@plt>:
   10f70:	add	ip, pc, #0, 12
   10f74:	add	ip, ip, #266240	; 0x41000
   10f78:	ldr	pc, [ip, #160]!	; 0xa0

00010f7c <raise@plt>:
   10f7c:	add	ip, pc, #0, 12
   10f80:	add	ip, ip, #266240	; 0x41000
   10f84:	ldr	pc, [ip, #152]!	; 0x98

00010f88 <wcrtomb@plt>:
   10f88:	add	ip, pc, #0, 12
   10f8c:	add	ip, ip, #266240	; 0x41000
   10f90:	ldr	pc, [ip, #144]!	; 0x90

00010f94 <iswctype@plt>:
   10f94:	add	ip, pc, #0, 12
   10f98:	add	ip, ip, #266240	; 0x41000
   10f9c:	ldr	pc, [ip, #136]!	; 0x88

00010fa0 <strcmp@plt>:
   10fa0:	add	ip, pc, #0, 12
   10fa4:	add	ip, ip, #266240	; 0x41000
   10fa8:	ldr	pc, [ip, #128]!	; 0x80

00010fac <strcspn@plt>:
   10fac:	add	ip, pc, #0, 12
   10fb0:	add	ip, ip, #266240	; 0x41000
   10fb4:	ldr	pc, [ip, #120]!	; 0x78

00010fb8 <printf@plt>:
   10fb8:	add	ip, pc, #0, 12
   10fbc:	add	ip, ip, #266240	; 0x41000
   10fc0:	ldr	pc, [ip, #112]!	; 0x70

00010fc4 <pthread_mutex_destroy@plt>:
   10fc4:	add	ip, pc, #0, 12
   10fc8:	add	ip, ip, #266240	; 0x41000
   10fcc:	ldr	pc, [ip, #104]!	; 0x68

00010fd0 <fflush@plt>:
   10fd0:	add	ip, pc, #0, 12
   10fd4:	add	ip, ip, #266240	; 0x41000
   10fd8:	ldr	pc, [ip, #96]!	; 0x60

00010fdc <wcwidth@plt>:
   10fdc:	add	ip, pc, #0, 12
   10fe0:	add	ip, ip, #266240	; 0x41000
   10fe4:	ldr	pc, [ip, #88]!	; 0x58

00010fe8 <memmove@plt>:
   10fe8:	add	ip, pc, #0, 12
   10fec:	add	ip, ip, #266240	; 0x41000
   10ff0:	ldr	pc, [ip, #80]!	; 0x50

00010ff4 <free@plt>:
   10ff4:	add	ip, pc, #0, 12
   10ff8:	add	ip, ip, #266240	; 0x41000
   10ffc:	ldr	pc, [ip, #72]!	; 0x48

00011000 <pthread_mutex_lock@plt>:
   11000:	add	ip, pc, #0, 12
   11004:	add	ip, ip, #266240	; 0x41000
   11008:	ldr	pc, [ip, #64]!	; 0x40

0001100c <_exit@plt>:
   1100c:	add	ip, pc, #0, 12
   11010:	add	ip, ip, #266240	; 0x41000
   11014:	ldr	pc, [ip, #56]!	; 0x38

00011018 <memcpy@plt>:
   11018:	add	ip, pc, #0, 12
   1101c:	add	ip, ip, #266240	; 0x41000
   11020:	ldr	pc, [ip, #48]!	; 0x30

00011024 <tolower@plt>:
   11024:	add	ip, pc, #0, 12
   11028:	add	ip, ip, #266240	; 0x41000
   1102c:	ldr	pc, [ip, #40]!	; 0x28

00011030 <pthread_mutex_init@plt>:
   11030:	add	ip, pc, #0, 12
   11034:	add	ip, ip, #266240	; 0x41000
   11038:	ldr	pc, [ip, #32]!

0001103c <towlower@plt>:
   1103c:	add	ip, pc, #0, 12
   11040:	add	ip, ip, #266240	; 0x41000
   11044:	ldr	pc, [ip, #24]!

00011048 <mbsinit@plt>:
   11048:	add	ip, pc, #0, 12
   1104c:	add	ip, ip, #266240	; 0x41000
   11050:	ldr	pc, [ip, #16]!

00011054 <memcmp@plt>:
   11054:	add	ip, pc, #0, 12
   11058:	add	ip, ip, #266240	; 0x41000
   1105c:	ldr	pc, [ip, #8]!

00011060 <fputc_unlocked@plt>:
   11060:	add	ip, pc, #0, 12
   11064:	add	ip, ip, #266240	; 0x41000
   11068:	ldr	pc, [ip, #0]!

0001106c <realloc@plt>:
   1106c:	add	ip, pc, #0, 12
   11070:	add	ip, ip, #64, 20	; 0x40000
   11074:	ldr	pc, [ip, #4088]!	; 0xff8

00011078 <textdomain@plt>:
   11078:	add	ip, pc, #0, 12
   1107c:	add	ip, ip, #64, 20	; 0x40000
   11080:	ldr	pc, [ip, #4080]!	; 0xff0

00011084 <iswcntrl@plt>:
   11084:	add	ip, pc, #0, 12
   11088:	add	ip, ip, #64, 20	; 0x40000
   1108c:	ldr	pc, [ip, #4072]!	; 0xfe8

00011090 <iswprint@plt>:
   11090:	add	ip, pc, #0, 12
   11094:	add	ip, ip, #64, 20	; 0x40000
   11098:	ldr	pc, [ip, #4064]!	; 0xfe0

0001109c <fwrite@plt>:
   1109c:	add	ip, pc, #0, 12
   110a0:	add	ip, ip, #64, 20	; 0x40000
   110a4:	ldr	pc, [ip, #4056]!	; 0xfd8

000110a8 <lseek64@plt>:
   110a8:	add	ip, pc, #0, 12
   110ac:	add	ip, ip, #64, 20	; 0x40000
   110b0:	ldr	pc, [ip, #4048]!	; 0xfd0

000110b4 <__ctype_get_mb_cur_max@plt>:
   110b4:	add	ip, pc, #0, 12
   110b8:	add	ip, ip, #64, 20	; 0x40000
   110bc:	ldr	pc, [ip, #4040]!	; 0xfc8

000110c0 <__fpending@plt>:
   110c0:	add	ip, pc, #0, 12
   110c4:	add	ip, ip, #64, 20	; 0x40000
   110c8:	ldr	pc, [ip, #4032]!	; 0xfc0

000110cc <ferror_unlocked@plt>:
   110cc:	add	ip, pc, #0, 12
   110d0:	add	ip, ip, #64, 20	; 0x40000
   110d4:	ldr	pc, [ip, #4024]!	; 0xfb8

000110d8 <mbrtowc@plt>:
   110d8:	add	ip, pc, #0, 12
   110dc:	add	ip, ip, #64, 20	; 0x40000
   110e0:	ldr	pc, [ip, #4016]!	; 0xfb0

000110e4 <error@plt>:
   110e4:	add	ip, pc, #0, 12
   110e8:	add	ip, ip, #64, 20	; 0x40000
   110ec:	ldr	pc, [ip, #4008]!	; 0xfa8

000110f0 <strcoll@plt>:
   110f0:	add	ip, pc, #0, 12
   110f4:	add	ip, ip, #64, 20	; 0x40000
   110f8:	ldr	pc, [ip, #4000]!	; 0xfa0

000110fc <puts@plt>:
   110fc:	add	ip, pc, #0, 12
   11100:	add	ip, ip, #64, 20	; 0x40000
   11104:	ldr	pc, [ip, #3992]!	; 0xf98

00011108 <malloc@plt>:
   11108:	add	ip, pc, #0, 12
   1110c:	add	ip, ip, #64, 20	; 0x40000
   11110:	ldr	pc, [ip, #3984]!	; 0xf90

00011114 <__libc_start_main@plt>:
   11114:	add	ip, pc, #0, 12
   11118:	add	ip, ip, #64, 20	; 0x40000
   1111c:	ldr	pc, [ip, #3976]!	; 0xf88

00011120 <__freading@plt>:
   11120:	add	ip, pc, #0, 12
   11124:	add	ip, ip, #64, 20	; 0x40000
   11128:	ldr	pc, [ip, #3968]!	; 0xf80

0001112c <__gmon_start__@plt>:
   1112c:	add	ip, pc, #0, 12
   11130:	add	ip, ip, #64, 20	; 0x40000
   11134:	ldr	pc, [ip, #3960]!	; 0xf78

00011138 <mempcpy@plt>:
   11138:	add	ip, pc, #0, 12
   1113c:	add	ip, ip, #64, 20	; 0x40000
   11140:	ldr	pc, [ip, #3952]!	; 0xf70

00011144 <getopt_long@plt>:
   11144:	add	ip, pc, #0, 12
   11148:	add	ip, ip, #64, 20	; 0x40000
   1114c:	ldr	pc, [ip, #3944]!	; 0xf68

00011150 <__ctype_b_loc@plt>:
   11150:	add	ip, pc, #0, 12
   11154:	add	ip, ip, #64, 20	; 0x40000
   11158:	ldr	pc, [ip, #3936]!	; 0xf60

0001115c <exit@plt>:
   1115c:	add	ip, pc, #0, 12
   11160:	add	ip, ip, #64, 20	; 0x40000
   11164:	ldr	pc, [ip, #3928]!	; 0xf58

00011168 <gettext@plt>:
   11168:	add	ip, pc, #0, 12
   1116c:	add	ip, ip, #64, 20	; 0x40000
   11170:	ldr	pc, [ip, #3920]!	; 0xf50

00011174 <strlen@plt>:
   11174:	add	ip, pc, #0, 12
   11178:	add	ip, ip, #64, 20	; 0x40000
   1117c:	ldr	pc, [ip, #3912]!	; 0xf48

00011180 <strchr@plt>:
   11180:	add	ip, pc, #0, 12
   11184:	add	ip, ip, #64, 20	; 0x40000
   11188:	ldr	pc, [ip, #3904]!	; 0xf40

0001118c <fprintf@plt>:
   1118c:	add	ip, pc, #0, 12
   11190:	add	ip, ip, #64, 20	; 0x40000
   11194:	ldr	pc, [ip, #3896]!	; 0xf38

00011198 <__errno_location@plt>:
   11198:	add	ip, pc, #0, 12
   1119c:	add	ip, ip, #64, 20	; 0x40000
   111a0:	ldr	pc, [ip, #3888]!	; 0xf30

000111a4 <iswalnum@plt>:
   111a4:	add	ip, pc, #0, 12
   111a8:	add	ip, ip, #64, 20	; 0x40000
   111ac:	ldr	pc, [ip, #3880]!	; 0xf28

000111b0 <__cxa_atexit@plt>:
   111b0:	add	ip, pc, #0, 12
   111b4:	add	ip, ip, #64, 20	; 0x40000
   111b8:	ldr	pc, [ip, #3872]!	; 0xf20

000111bc <memset@plt>:
   111bc:	add	ip, pc, #0, 12
   111c0:	add	ip, ip, #64, 20	; 0x40000
   111c4:	ldr	pc, [ip, #3864]!	; 0xf18

000111c8 <btowc@plt>:
   111c8:	add	ip, pc, #0, 12
   111cc:	add	ip, ip, #64, 20	; 0x40000
   111d0:	ldr	pc, [ip, #3856]!	; 0xf10

000111d4 <fileno@plt>:
   111d4:	add	ip, pc, #0, 12
   111d8:	add	ip, ip, #64, 20	; 0x40000
   111dc:	ldr	pc, [ip, #3848]!	; 0xf08

000111e0 <memchr@plt>:
   111e0:	add	ip, pc, #0, 12
   111e4:	add	ip, ip, #64, 20	; 0x40000
   111e8:	ldr	pc, [ip, #3840]!	; 0xf00

000111ec <fclose@plt>:
   111ec:	add	ip, pc, #0, 12
   111f0:	add	ip, ip, #64, 20	; 0x40000
   111f4:	ldr	pc, [ip, #3832]!	; 0xef8

000111f8 <fseeko64@plt>:
   111f8:	add	ip, pc, #0, 12
   111fc:	add	ip, ip, #64, 20	; 0x40000
   11200:	ldr	pc, [ip, #3824]!	; 0xef0

00011204 <setlocale@plt>:
   11204:	add	ip, pc, #0, 12
   11208:	add	ip, ip, #64, 20	; 0x40000
   1120c:	ldr	pc, [ip, #3816]!	; 0xee8

00011210 <toupper@plt>:
   11210:	add	ip, pc, #0, 12
   11214:	add	ip, ip, #64, 20	; 0x40000
   11218:	ldr	pc, [ip, #3808]!	; 0xee0

0001121c <strrchr@plt>:
   1121c:	add	ip, pc, #0, 12
   11220:	add	ip, ip, #64, 20	; 0x40000
   11224:	ldr	pc, [ip, #3800]!	; 0xed8

00011228 <nl_langinfo@plt>:
   11228:	add	ip, pc, #0, 12
   1122c:	add	ip, ip, #64, 20	; 0x40000
   11230:	ldr	pc, [ip, #3792]!	; 0xed0

00011234 <bindtextdomain@plt>:
   11234:	add	ip, pc, #0, 12
   11238:	add	ip, ip, #64, 20	; 0x40000
   1123c:	ldr	pc, [ip, #3784]!	; 0xec8

00011240 <towupper@plt>:
   11240:	add	ip, pc, #0, 12
   11244:	add	ip, ip, #64, 20	; 0x40000
   11248:	ldr	pc, [ip, #3776]!	; 0xec0

0001124c <strncmp@plt>:
   1124c:	add	ip, pc, #0, 12
   11250:	add	ip, ip, #64, 20	; 0x40000
   11254:	ldr	pc, [ip, #3768]!	; 0xeb8

00011258 <abort@plt>:
   11258:	add	ip, pc, #0, 12
   1125c:	add	ip, ip, #64, 20	; 0x40000
   11260:	ldr	pc, [ip, #3760]!	; 0xeb0

00011264 <putchar_unlocked@plt>:
   11264:	add	ip, pc, #0, 12
   11268:	add	ip, ip, #64, 20	; 0x40000
   1126c:	ldr	pc, [ip, #3752]!	; 0xea8

00011270 <__assert_fail@plt>:
   11270:	add	ip, pc, #0, 12
   11274:	add	ip, ip, #64, 20	; 0x40000
   11278:	ldr	pc, [ip, #3744]!	; 0xea0

Disassembly of section .text:

00011280 <.text>:
   11280:	mov	fp, #0
   11284:	mov	lr, #0
   11288:	pop	{r1}		; (ldr r1, [sp], #4)
   1128c:	mov	r2, sp
   11290:	push	{r2}		; (str r2, [sp, #-4]!)
   11294:	push	{r0}		; (str r0, [sp, #-4]!)
   11298:	ldr	ip, [pc, #16]	; 112b0 <__assert_fail@plt+0x40>
   1129c:	push	{ip}		; (str ip, [sp, #-4]!)
   112a0:	ldr	r0, [pc, #12]	; 112b4 <__assert_fail@plt+0x44>
   112a4:	ldr	r3, [pc, #12]	; 112b8 <__assert_fail@plt+0x48>
   112a8:	bl	11114 <__libc_start_main@plt>
   112ac:	bl	11258 <abort@plt>
   112b0:	andeq	pc, r3, ip, lsl sl	; <UNPREDICTABLE>
   112b4:	andeq	r1, r1, r0, lsl sp
   112b8:			; <UNDEFINED> instruction: 0x0003f9bc
   112bc:	ldr	r3, [pc, #20]	; 112d8 <__assert_fail@plt+0x68>
   112c0:	ldr	r2, [pc, #20]	; 112dc <__assert_fail@plt+0x6c>
   112c4:	add	r3, pc, r3
   112c8:	ldr	r2, [r3, r2]
   112cc:	cmp	r2, #0
   112d0:	bxeq	lr
   112d4:	b	1112c <__gmon_start__@plt>
   112d8:	andeq	r0, r4, r4, lsr sp
   112dc:	andeq	r0, r0, ip, lsl r1
   112e0:	ldr	r3, [pc, #28]	; 11304 <__assert_fail@plt+0x94>
   112e4:	ldr	r0, [pc, #28]	; 11308 <__assert_fail@plt+0x98>
   112e8:	sub	r3, r3, r0
   112ec:	cmp	r3, #6
   112f0:	bxls	lr
   112f4:	ldr	r3, [pc, #16]	; 1130c <__assert_fail@plt+0x9c>
   112f8:	cmp	r3, #0
   112fc:	bxeq	lr
   11300:	bx	r3
   11304:	andeq	r2, r5, fp, ror r1
   11308:	andeq	r2, r5, r8, ror r1
   1130c:	andeq	r0, r0, r0
   11310:	ldr	r1, [pc, #36]	; 1133c <__assert_fail@plt+0xcc>
   11314:	ldr	r0, [pc, #36]	; 11340 <__assert_fail@plt+0xd0>
   11318:	sub	r1, r1, r0
   1131c:	asr	r1, r1, #2
   11320:	add	r1, r1, r1, lsr #31
   11324:	asrs	r1, r1, #1
   11328:	bxeq	lr
   1132c:	ldr	r3, [pc, #16]	; 11344 <__assert_fail@plt+0xd4>
   11330:	cmp	r3, #0
   11334:	bxeq	lr
   11338:	bx	r3
   1133c:	andeq	r2, r5, r8, ror r1
   11340:	andeq	r2, r5, r8, ror r1
   11344:	andeq	r0, r0, r0
   11348:	push	{r4, lr}
   1134c:	ldr	r4, [pc, #24]	; 1136c <__assert_fail@plt+0xfc>
   11350:	ldrb	r3, [r4]
   11354:	cmp	r3, #0
   11358:	popne	{r4, pc}
   1135c:	bl	112e0 <__assert_fail@plt+0x70>
   11360:	mov	r3, #1
   11364:	strb	r3, [r4]
   11368:	pop	{r4, pc}
   1136c:	muleq	r5, r4, r1
   11370:	ldr	r0, [pc, #40]	; 113a0 <__assert_fail@plt+0x130>
   11374:	ldr	r3, [r0]
   11378:	cmp	r3, #0
   1137c:	bne	11384 <__assert_fail@plt+0x114>
   11380:	b	11310 <__assert_fail@plt+0xa0>
   11384:	ldr	r3, [pc, #24]	; 113a4 <__assert_fail@plt+0x134>
   11388:	cmp	r3, #0
   1138c:	beq	11380 <__assert_fail@plt+0x110>
   11390:	push	{r4, lr}
   11394:	blx	r3
   11398:	pop	{r4, lr}
   1139c:	b	11310 <__assert_fail@plt+0xa0>
   113a0:	andeq	r1, r5, r4, lsl pc
   113a4:	andeq	r0, r0, r0
   113a8:	push	{fp}		; (str fp, [sp, #-4]!)
   113ac:	add	fp, sp, #0
   113b0:	sub	sp, sp, #12
   113b4:	str	r0, [fp, #-8]
   113b8:	ldr	r3, [fp, #-8]
   113bc:	cmp	r3, #1
   113c0:	beq	113d0 <__assert_fail@plt+0x160>
   113c4:	ldr	r2, [pc, #20]	; 113e0 <__assert_fail@plt+0x170>
   113c8:	ldr	r3, [fp, #-8]
   113cc:	str	r3, [r2]
   113d0:	nop			; (mov r0, r0)
   113d4:	add	sp, fp, #0
   113d8:	pop	{fp}		; (ldr fp, [sp], #4)
   113dc:	bx	lr
   113e0:	andeq	r2, r5, r8, lsr #2
   113e4:	push	{fp, lr}
   113e8:	add	fp, sp, #4
   113ec:	sub	sp, sp, #80	; 0x50
   113f0:	str	r0, [fp, #-80]	; 0xffffffb0
   113f4:	ldr	r3, [pc, #348]	; 11558 <__assert_fail@plt+0x2e8>
   113f8:	sub	ip, fp, #72	; 0x48
   113fc:	mov	lr, r3
   11400:	ldm	lr!, {r0, r1, r2, r3}
   11404:	stmia	ip!, {r0, r1, r2, r3}
   11408:	ldm	lr!, {r0, r1, r2, r3}
   1140c:	stmia	ip!, {r0, r1, r2, r3}
   11410:	ldm	lr!, {r0, r1, r2, r3}
   11414:	stmia	ip!, {r0, r1, r2, r3}
   11418:	ldm	lr, {r0, r1}
   1141c:	stm	ip, {r0, r1}
   11420:	ldr	r3, [fp, #-80]	; 0xffffffb0
   11424:	str	r3, [fp, #-8]
   11428:	sub	r3, fp, #72	; 0x48
   1142c:	str	r3, [fp, #-12]
   11430:	b	11440 <__assert_fail@plt+0x1d0>
   11434:	ldr	r3, [fp, #-12]
   11438:	add	r3, r3, #8
   1143c:	str	r3, [fp, #-12]
   11440:	ldr	r3, [fp, #-12]
   11444:	ldr	r3, [r3]
   11448:	cmp	r3, #0
   1144c:	beq	11470 <__assert_fail@plt+0x200>
   11450:	ldr	r3, [fp, #-12]
   11454:	ldr	r3, [r3]
   11458:	mov	r1, r3
   1145c:	ldr	r0, [fp, #-80]	; 0xffffffb0
   11460:	bl	10fa0 <strcmp@plt>
   11464:	mov	r3, r0
   11468:	cmp	r3, #0
   1146c:	bne	11434 <__assert_fail@plt+0x1c4>
   11470:	ldr	r3, [fp, #-12]
   11474:	ldr	r3, [r3, #4]
   11478:	cmp	r3, #0
   1147c:	beq	1148c <__assert_fail@plt+0x21c>
   11480:	ldr	r3, [fp, #-12]
   11484:	ldr	r3, [r3, #4]
   11488:	str	r3, [fp, #-8]
   1148c:	ldr	r0, [pc, #200]	; 1155c <__assert_fail@plt+0x2ec>
   11490:	bl	11168 <gettext@plt>
   11494:	mov	r3, r0
   11498:	ldr	r2, [pc, #192]	; 11560 <__assert_fail@plt+0x2f0>
   1149c:	ldr	r1, [pc, #192]	; 11564 <__assert_fail@plt+0x2f4>
   114a0:	mov	r0, r3
   114a4:	bl	10fb8 <printf@plt>
   114a8:	mov	r1, #0
   114ac:	mov	r0, #5
   114b0:	bl	11204 <setlocale@plt>
   114b4:	str	r0, [fp, #-16]
   114b8:	ldr	r3, [fp, #-16]
   114bc:	cmp	r3, #0
   114c0:	beq	11500 <__assert_fail@plt+0x290>
   114c4:	mov	r2, #3
   114c8:	ldr	r1, [pc, #152]	; 11568 <__assert_fail@plt+0x2f8>
   114cc:	ldr	r0, [fp, #-16]
   114d0:	bl	1124c <strncmp@plt>
   114d4:	mov	r3, r0
   114d8:	cmp	r3, #0
   114dc:	beq	11500 <__assert_fail@plt+0x290>
   114e0:	ldr	r0, [pc, #132]	; 1156c <__assert_fail@plt+0x2fc>
   114e4:	bl	11168 <gettext@plt>
   114e8:	mov	r2, r0
   114ec:	ldr	r3, [pc, #124]	; 11570 <__assert_fail@plt+0x300>
   114f0:	ldr	r3, [r3]
   114f4:	mov	r1, r3
   114f8:	mov	r0, r2
   114fc:	bl	10f64 <fputs_unlocked@plt>
   11500:	ldr	r0, [pc, #108]	; 11574 <__assert_fail@plt+0x304>
   11504:	bl	11168 <gettext@plt>
   11508:	mov	r3, r0
   1150c:	ldr	r2, [fp, #-80]	; 0xffffffb0
   11510:	ldr	r1, [pc, #72]	; 11560 <__assert_fail@plt+0x2f0>
   11514:	mov	r0, r3
   11518:	bl	10fb8 <printf@plt>
   1151c:	ldr	r0, [pc, #84]	; 11578 <__assert_fail@plt+0x308>
   11520:	bl	11168 <gettext@plt>
   11524:	ldr	r2, [fp, #-8]
   11528:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1152c:	cmp	r2, r3
   11530:	bne	1153c <__assert_fail@plt+0x2cc>
   11534:	ldr	r3, [pc, #64]	; 1157c <__assert_fail@plt+0x30c>
   11538:	b	11540 <__assert_fail@plt+0x2d0>
   1153c:	ldr	r3, [pc, #60]	; 11580 <__assert_fail@plt+0x310>
   11540:	mov	r2, r3
   11544:	ldr	r1, [fp, #-8]
   11548:	bl	10fb8 <printf@plt>
   1154c:	nop			; (mov r0, r0)
   11550:	sub	sp, fp, #4
   11554:	pop	{fp, pc}
   11558:			; <UNDEFINED> instruction: 0x0003fbb8
   1155c:	andeq	pc, r3, r4, asr #20
   11560:	andeq	pc, r3, ip, asr sl	; <UNPREDICTABLE>
   11564:	andeq	pc, r3, r4, lsl #21
   11568:	muleq	r3, r4, sl
   1156c:	muleq	r3, r8, sl
   11570:	andeq	r2, r5, ip, lsl #3
   11574:	andeq	pc, r3, r0, ror #21
   11578:	strdeq	pc, [r3], -ip
   1157c:	andeq	pc, r3, r0, lsr fp	; <UNPREDICTABLE>
   11580:	andeq	pc, r3, ip, lsr fp	; <UNPREDICTABLE>
   11584:	push	{fp, lr}
   11588:	add	fp, sp, #4
   1158c:	sub	sp, sp, #128	; 0x80
   11590:	str	r0, [fp, #-128]	; 0xffffff80
   11594:	str	r1, [fp, #-132]	; 0xffffff7c
   11598:	mov	r3, #0
   1159c:	str	r3, [fp, #-8]
   115a0:	ldr	r3, [fp, #-132]	; 0xffffff7c
   115a4:	ldrb	r3, [r3]
   115a8:	cmp	r3, #0
   115ac:	bne	115b8 <__assert_fail@plt+0x348>
   115b0:	mov	r3, #0
   115b4:	b	117e8 <__assert_fail@plt+0x578>
   115b8:	bl	110b4 <__ctype_get_mb_cur_max@plt>
   115bc:	mov	r3, r0
   115c0:	cmp	r3, #1
   115c4:	bls	117b0 <__assert_fail@plt+0x540>
   115c8:	ldr	r3, [fp, #-128]	; 0xffffff80
   115cc:	str	r3, [fp, #-108]	; 0xffffff94
   115d0:	mov	r3, #0
   115d4:	strb	r3, [fp, #-124]	; 0xffffff84
   115d8:	sub	r3, fp, #124	; 0x7c
   115dc:	add	r3, r3, #4
   115e0:	mov	r2, #8
   115e4:	mov	r1, #0
   115e8:	mov	r0, r3
   115ec:	bl	111bc <memset@plt>
   115f0:	mov	r3, #0
   115f4:	strb	r3, [fp, #-112]	; 0xffffff90
   115f8:	b	11768 <__assert_fail@plt+0x4f8>
   115fc:	ldr	r3, [fp, #-8]
   11600:	add	r3, r3, #1
   11604:	str	r3, [fp, #-8]
   11608:	ldr	r3, [fp, #-104]	; 0xffffff98
   1160c:	cmp	r3, #1
   11610:	bne	1163c <__assert_fail@plt+0x3cc>
   11614:	ldr	r3, [fp, #-108]	; 0xffffff94
   11618:	ldrb	r3, [r3]
   1161c:	mov	r1, r3
   11620:	ldr	r0, [fp, #-132]	; 0xffffff7c
   11624:	bl	20328 <__assert_fail@plt+0xf0b8>
   11628:	mov	r3, r0
   1162c:	cmp	r3, #0
   11630:	beq	11750 <__assert_fail@plt+0x4e0>
   11634:	ldr	r3, [fp, #-8]
   11638:	b	117e8 <__assert_fail@plt+0x578>
   1163c:	ldr	r3, [fp, #-132]	; 0xffffff7c
   11640:	str	r3, [fp, #-52]	; 0xffffffcc
   11644:	mov	r3, #0
   11648:	strb	r3, [fp, #-68]	; 0xffffffbc
   1164c:	sub	r3, fp, #68	; 0x44
   11650:	add	r3, r3, #4
   11654:	mov	r2, #8
   11658:	mov	r1, #0
   1165c:	mov	r0, r3
   11660:	bl	111bc <memset@plt>
   11664:	mov	r3, #0
   11668:	strb	r3, [fp, #-56]	; 0xffffffc8
   1166c:	b	11710 <__assert_fail@plt+0x4a0>
   11670:	ldrb	r3, [fp, #-44]	; 0xffffffd4
   11674:	cmp	r3, #0
   11678:	beq	116a4 <__assert_fail@plt+0x434>
   1167c:	ldrb	r3, [fp, #-100]	; 0xffffff9c
   11680:	cmp	r3, #0
   11684:	beq	116a4 <__assert_fail@plt+0x434>
   11688:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1168c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   11690:	cmp	r2, r3
   11694:	moveq	r3, #1
   11698:	movne	r3, #0
   1169c:	uxtb	r3, r3
   116a0:	b	116e8 <__assert_fail@plt+0x478>
   116a4:	ldr	r2, [fp, #-48]	; 0xffffffd0
   116a8:	ldr	r3, [fp, #-104]	; 0xffffff98
   116ac:	cmp	r2, r3
   116b0:	bne	116dc <__assert_fail@plt+0x46c>
   116b4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   116b8:	ldr	r1, [fp, #-108]	; 0xffffff94
   116bc:	ldr	r2, [fp, #-48]	; 0xffffffd0
   116c0:	mov	r0, r3
   116c4:	bl	11054 <memcmp@plt>
   116c8:	mov	r3, r0
   116cc:	cmp	r3, #0
   116d0:	bne	116dc <__assert_fail@plt+0x46c>
   116d4:	mov	r3, #1
   116d8:	b	116e0 <__assert_fail@plt+0x470>
   116dc:	mov	r3, #0
   116e0:	and	r3, r3, #1
   116e4:	uxtb	r3, r3
   116e8:	cmp	r3, #0
   116ec:	beq	116f8 <__assert_fail@plt+0x488>
   116f0:	ldr	r3, [fp, #-8]
   116f4:	b	117e8 <__assert_fail@plt+0x578>
   116f8:	ldr	r2, [fp, #-52]	; 0xffffffcc
   116fc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   11700:	add	r3, r2, r3
   11704:	str	r3, [fp, #-52]	; 0xffffffcc
   11708:	mov	r3, #0
   1170c:	strb	r3, [fp, #-56]	; 0xffffffc8
   11710:	sub	r3, fp, #68	; 0x44
   11714:	mov	r0, r3
   11718:	bl	20520 <__assert_fail@plt+0xf2b0>
   1171c:	ldrb	r3, [fp, #-44]	; 0xffffffd4
   11720:	eor	r3, r3, #1
   11724:	uxtb	r3, r3
   11728:	cmp	r3, #0
   1172c:	bne	1173c <__assert_fail@plt+0x4cc>
   11730:	ldr	r3, [fp, #-40]	; 0xffffffd8
   11734:	cmp	r3, #0
   11738:	beq	11744 <__assert_fail@plt+0x4d4>
   1173c:	mov	r3, #1
   11740:	b	11748 <__assert_fail@plt+0x4d8>
   11744:	mov	r3, #0
   11748:	cmp	r3, #0
   1174c:	bne	11670 <__assert_fail@plt+0x400>
   11750:	ldr	r2, [fp, #-108]	; 0xffffff94
   11754:	ldr	r3, [fp, #-104]	; 0xffffff98
   11758:	add	r3, r2, r3
   1175c:	str	r3, [fp, #-108]	; 0xffffff94
   11760:	mov	r3, #0
   11764:	strb	r3, [fp, #-112]	; 0xffffff90
   11768:	sub	r3, fp, #124	; 0x7c
   1176c:	mov	r0, r3
   11770:	bl	20520 <__assert_fail@plt+0xf2b0>
   11774:	ldrb	r3, [fp, #-100]	; 0xffffff9c
   11778:	eor	r3, r3, #1
   1177c:	uxtb	r3, r3
   11780:	cmp	r3, #0
   11784:	bne	11794 <__assert_fail@plt+0x524>
   11788:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1178c:	cmp	r3, #0
   11790:	beq	1179c <__assert_fail@plt+0x52c>
   11794:	mov	r3, #1
   11798:	b	117a0 <__assert_fail@plt+0x530>
   1179c:	mov	r3, #0
   117a0:	cmp	r3, #0
   117a4:	bne	115fc <__assert_fail@plt+0x38c>
   117a8:	mov	r3, #0
   117ac:	b	117e8 <__assert_fail@plt+0x578>
   117b0:	ldr	r1, [fp, #-132]	; 0xffffff7c
   117b4:	ldr	r0, [fp, #-128]	; 0xffffff80
   117b8:	bl	10fac <strcspn@plt>
   117bc:	str	r0, [fp, #-12]
   117c0:	ldr	r2, [fp, #-128]	; 0xffffff80
   117c4:	ldr	r3, [fp, #-12]
   117c8:	add	r3, r2, r3
   117cc:	ldrb	r3, [r3]
   117d0:	cmp	r3, #0
   117d4:	beq	117e4 <__assert_fail@plt+0x574>
   117d8:	ldr	r3, [fp, #-12]
   117dc:	add	r3, r3, #1
   117e0:	b	117e8 <__assert_fail@plt+0x578>
   117e4:	mov	r3, #0
   117e8:	mov	r0, r3
   117ec:	sub	sp, fp, #4
   117f0:	pop	{fp, pc}
   117f4:	push	{fp, lr}
   117f8:	add	fp, sp, #4
   117fc:	sub	sp, sp, #96	; 0x60
   11800:	str	r0, [fp, #-88]	; 0xffffffa8
   11804:	str	r1, [fp, #-92]	; 0xffffffa4
   11808:	str	r2, [fp, #-96]	; 0xffffffa0
   1180c:	ldr	r0, [fp, #-88]	; 0xffffffa8
   11810:	bl	11174 <strlen@plt>
   11814:	str	r0, [fp, #-24]	; 0xffffffe8
   11818:	bl	110b4 <__ctype_get_mb_cur_max@plt>
   1181c:	mov	r3, r0
   11820:	cmp	r3, #1
   11824:	bls	11838 <__assert_fail@plt+0x5c8>
   11828:	ldr	r0, [fp, #-88]	; 0xffffffa8
   1182c:	bl	20440 <__assert_fail@plt+0xf1d0>
   11830:	mov	r3, r0
   11834:	b	1183c <__assert_fail@plt+0x5cc>
   11838:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1183c:	str	r3, [fp, #-28]	; 0xffffffe4
   11840:	ldr	r2, [fp, #-28]	; 0xffffffe4
   11844:	ldr	r3, [fp, #-92]	; 0xffffffa4
   11848:	cmp	r2, r3
   1184c:	bcc	11874 <__assert_fail@plt+0x604>
   11850:	ldr	r3, [fp, #-92]	; 0xffffffa4
   11854:	cmp	r3, #0
   11858:	beq	11874 <__assert_fail@plt+0x604>
   1185c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   11860:	cmp	r3, #0
   11864:	beq	11874 <__assert_fail@plt+0x604>
   11868:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1186c:	cmn	r3, #1
   11870:	bne	11884 <__assert_fail@plt+0x614>
   11874:	ldr	r0, [pc, #416]	; 11a1c <__assert_fail@plt+0x7ac>
   11878:	bl	3de5c <__assert_fail@plt+0x2cbec>
   1187c:	mov	r3, r0
   11880:	b	11a10 <__assert_fail@plt+0x7a0>
   11884:	ldr	r2, [fp, #-28]	; 0xffffffe4
   11888:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1188c:	sub	r3, r2, r3
   11890:	add	r2, r3, #1
   11894:	ldr	r3, [fp, #-96]	; 0xffffffa0
   11898:	cmp	r2, r3
   1189c:	movcc	r3, r2
   118a0:	movcs	r3, r3
   118a4:	str	r3, [fp, #-16]
   118a8:	bl	110b4 <__ctype_get_mb_cur_max@plt>
   118ac:	mov	r3, r0
   118b0:	cmp	r3, #1
   118b4:	bne	118f8 <__assert_fail@plt+0x688>
   118b8:	ldr	r3, [fp, #-16]
   118bc:	add	r3, r3, #1
   118c0:	mov	r0, r3
   118c4:	bl	3d37c <__assert_fail@plt+0x2c10c>
   118c8:	mov	r3, r0
   118cc:	str	r3, [fp, #-8]
   118d0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   118d4:	sub	r3, r3, #1
   118d8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   118dc:	add	r3, r2, r3
   118e0:	ldr	r2, [fp, #-16]
   118e4:	mov	r1, r3
   118e8:	ldr	r0, [fp, #-8]
   118ec:	bl	11138 <mempcpy@plt>
   118f0:	str	r0, [fp, #-12]
   118f4:	b	11a00 <__assert_fail@plt+0x790>
   118f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   118fc:	add	r3, r3, #1
   11900:	mov	r0, r3
   11904:	bl	3d37c <__assert_fail@plt+0x2c10c>
   11908:	mov	r3, r0
   1190c:	str	r3, [fp, #-8]
   11910:	ldr	r3, [fp, #-8]
   11914:	str	r3, [fp, #-12]
   11918:	mov	r3, #1
   1191c:	str	r3, [fp, #-20]	; 0xffffffec
   11920:	ldr	r3, [fp, #-88]	; 0xffffffa8
   11924:	str	r3, [fp, #-68]	; 0xffffffbc
   11928:	mov	r3, #0
   1192c:	strb	r3, [fp, #-84]	; 0xffffffac
   11930:	sub	r3, fp, #84	; 0x54
   11934:	add	r3, r3, #4
   11938:	mov	r2, #8
   1193c:	mov	r1, #0
   11940:	mov	r0, r3
   11944:	bl	111bc <memset@plt>
   11948:	mov	r3, #0
   1194c:	strb	r3, [fp, #-72]	; 0xffffffb8
   11950:	b	119b4 <__assert_fail@plt+0x744>
   11954:	ldr	r2, [fp, #-20]	; 0xffffffec
   11958:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1195c:	cmp	r2, r3
   11960:	bcc	1198c <__assert_fail@plt+0x71c>
   11964:	ldr	r3, [fp, #-16]
   11968:	sub	r3, r3, #1
   1196c:	str	r3, [fp, #-16]
   11970:	ldr	r3, [fp, #-68]	; 0xffffffbc
   11974:	ldr	r2, [fp, #-64]	; 0xffffffc0
   11978:	mov	r1, r3
   1197c:	ldr	r0, [fp, #-12]
   11980:	bl	11138 <mempcpy@plt>
   11984:	str	r0, [fp, #-12]
   11988:	b	11990 <__assert_fail@plt+0x720>
   1198c:	nop			; (mov r0, r0)
   11990:	ldr	r2, [fp, #-68]	; 0xffffffbc
   11994:	ldr	r3, [fp, #-64]	; 0xffffffc0
   11998:	add	r3, r2, r3
   1199c:	str	r3, [fp, #-68]	; 0xffffffbc
   119a0:	mov	r3, #0
   119a4:	strb	r3, [fp, #-72]	; 0xffffffb8
   119a8:	ldr	r3, [fp, #-20]	; 0xffffffec
   119ac:	add	r3, r3, #1
   119b0:	str	r3, [fp, #-20]	; 0xffffffec
   119b4:	sub	r3, fp, #84	; 0x54
   119b8:	mov	r0, r3
   119bc:	bl	20520 <__assert_fail@plt+0xf2b0>
   119c0:	ldrb	r3, [fp, #-60]	; 0xffffffc4
   119c4:	eor	r3, r3, #1
   119c8:	uxtb	r3, r3
   119cc:	cmp	r3, #0
   119d0:	bne	119e0 <__assert_fail@plt+0x770>
   119d4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   119d8:	cmp	r3, #0
   119dc:	beq	119e8 <__assert_fail@plt+0x778>
   119e0:	mov	r3, #1
   119e4:	b	119ec <__assert_fail@plt+0x77c>
   119e8:	mov	r3, #0
   119ec:	cmp	r3, #0
   119f0:	beq	11a00 <__assert_fail@plt+0x790>
   119f4:	ldr	r3, [fp, #-16]
   119f8:	cmp	r3, #0
   119fc:	bne	11954 <__assert_fail@plt+0x6e4>
   11a00:	ldr	r3, [fp, #-12]
   11a04:	mov	r2, #0
   11a08:	strb	r2, [r3]
   11a0c:	ldr	r3, [fp, #-8]
   11a10:	mov	r0, r3
   11a14:	sub	sp, fp, #4
   11a18:	pop	{fp, pc}
   11a1c:	andeq	pc, r3, ip, lsr fp	; <UNPREDICTABLE>
   11a20:	push	{fp, lr}
   11a24:	add	fp, sp, #4
   11a28:	sub	sp, sp, #72	; 0x48
   11a2c:	str	r0, [fp, #-72]	; 0xffffffb8
   11a30:	str	r1, [fp, #-76]	; 0xffffffb4
   11a34:	mov	r3, #0
   11a38:	str	r3, [fp, #-8]
   11a3c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   11a40:	str	r3, [fp, #-52]	; 0xffffffcc
   11a44:	mov	r3, #0
   11a48:	strb	r3, [fp, #-68]	; 0xffffffbc
   11a4c:	sub	r3, fp, #68	; 0x44
   11a50:	add	r3, r3, #4
   11a54:	mov	r2, #8
   11a58:	mov	r1, #0
   11a5c:	mov	r0, r3
   11a60:	bl	111bc <memset@plt>
   11a64:	mov	r3, #0
   11a68:	strb	r3, [fp, #-56]	; 0xffffffc8
   11a6c:	b	11ab8 <__assert_fail@plt+0x848>
   11a70:	ldr	r3, [fp, #-52]	; 0xffffffcc
   11a74:	mov	r2, r3
   11a78:	ldr	r3, [fp, #-72]	; 0xffffffb8
   11a7c:	sub	r3, r2, r3
   11a80:	str	r3, [fp, #-12]
   11a84:	ldr	r2, [fp, #-12]
   11a88:	ldr	r3, [fp, #-76]	; 0xffffffb4
   11a8c:	cmp	r2, r3
   11a90:	bcs	11afc <__assert_fail@plt+0x88c>
   11a94:	ldr	r3, [fp, #-8]
   11a98:	add	r3, r3, #1
   11a9c:	str	r3, [fp, #-8]
   11aa0:	ldr	r2, [fp, #-52]	; 0xffffffcc
   11aa4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   11aa8:	add	r3, r2, r3
   11aac:	str	r3, [fp, #-52]	; 0xffffffcc
   11ab0:	mov	r3, #0
   11ab4:	strb	r3, [fp, #-56]	; 0xffffffc8
   11ab8:	sub	r3, fp, #68	; 0x44
   11abc:	mov	r0, r3
   11ac0:	bl	20520 <__assert_fail@plt+0xf2b0>
   11ac4:	ldrb	r3, [fp, #-44]	; 0xffffffd4
   11ac8:	eor	r3, r3, #1
   11acc:	uxtb	r3, r3
   11ad0:	cmp	r3, #0
   11ad4:	bne	11ae4 <__assert_fail@plt+0x874>
   11ad8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   11adc:	cmp	r3, #0
   11ae0:	beq	11aec <__assert_fail@plt+0x87c>
   11ae4:	mov	r3, #1
   11ae8:	b	11af0 <__assert_fail@plt+0x880>
   11aec:	mov	r3, #0
   11af0:	cmp	r3, #0
   11af4:	bne	11a70 <__assert_fail@plt+0x800>
   11af8:	b	11b00 <__assert_fail@plt+0x890>
   11afc:	nop			; (mov r0, r0)
   11b00:	ldr	r3, [fp, #-8]
   11b04:	mov	r0, r3
   11b08:	sub	sp, fp, #4
   11b0c:	pop	{fp, pc}
   11b10:	push	{r4, fp, lr}
   11b14:	add	fp, sp, #8
   11b18:	sub	sp, sp, #12
   11b1c:	str	r0, [fp, #-16]
   11b20:	ldr	r3, [fp, #-16]
   11b24:	cmp	r3, #0
   11b28:	beq	11b58 <__assert_fail@plt+0x8e8>
   11b2c:	ldr	r3, [pc, #412]	; 11cd0 <__assert_fail@plt+0xa60>
   11b30:	ldr	r4, [r3]
   11b34:	ldr	r0, [pc, #408]	; 11cd4 <__assert_fail@plt+0xa64>
   11b38:	bl	11168 <gettext@plt>
   11b3c:	mov	r1, r0
   11b40:	ldr	r3, [pc, #400]	; 11cd8 <__assert_fail@plt+0xa68>
   11b44:	ldr	r3, [r3]
   11b48:	mov	r2, r3
   11b4c:	mov	r0, r4
   11b50:	bl	1118c <fprintf@plt>
   11b54:	b	11cc8 <__assert_fail@plt+0xa58>
   11b58:	ldr	r0, [pc, #380]	; 11cdc <__assert_fail@plt+0xa6c>
   11b5c:	bl	11168 <gettext@plt>
   11b60:	ldr	r3, [pc, #368]	; 11cd8 <__assert_fail@plt+0xa68>
   11b64:	ldr	r1, [r3]
   11b68:	ldr	r3, [pc, #360]	; 11cd8 <__assert_fail@plt+0xa68>
   11b6c:	ldr	r3, [r3]
   11b70:	mov	r2, r3
   11b74:	bl	10fb8 <printf@plt>
   11b78:	mov	r0, #10
   11b7c:	bl	11264 <putchar_unlocked@plt>
   11b80:	ldr	r0, [pc, #344]	; 11ce0 <__assert_fail@plt+0xa70>
   11b84:	bl	11168 <gettext@plt>
   11b88:	mov	r2, r0
   11b8c:	ldr	r3, [pc, #336]	; 11ce4 <__assert_fail@plt+0xa74>
   11b90:	ldr	r3, [r3]
   11b94:	mov	r1, r3
   11b98:	mov	r0, r2
   11b9c:	bl	10f64 <fputs_unlocked@plt>
   11ba0:	ldr	r0, [pc, #320]	; 11ce8 <__assert_fail@plt+0xa78>
   11ba4:	bl	11168 <gettext@plt>
   11ba8:	mov	r2, r0
   11bac:	ldr	r3, [pc, #304]	; 11ce4 <__assert_fail@plt+0xa74>
   11bb0:	ldr	r3, [r3]
   11bb4:	mov	r1, r3
   11bb8:	mov	r0, r2
   11bbc:	bl	10f64 <fputs_unlocked@plt>
   11bc0:	ldr	r0, [pc, #292]	; 11cec <__assert_fail@plt+0xa7c>
   11bc4:	bl	11168 <gettext@plt>
   11bc8:	mov	r2, r0
   11bcc:	ldr	r3, [pc, #272]	; 11ce4 <__assert_fail@plt+0xa74>
   11bd0:	ldr	r3, [r3]
   11bd4:	mov	r1, r3
   11bd8:	mov	r0, r2
   11bdc:	bl	10f64 <fputs_unlocked@plt>
   11be0:	ldr	r0, [pc, #264]	; 11cf0 <__assert_fail@plt+0xa80>
   11be4:	bl	11168 <gettext@plt>
   11be8:	mov	r2, r0
   11bec:	ldr	r3, [pc, #240]	; 11ce4 <__assert_fail@plt+0xa74>
   11bf0:	ldr	r3, [r3]
   11bf4:	mov	r1, r3
   11bf8:	mov	r0, r2
   11bfc:	bl	10f64 <fputs_unlocked@plt>
   11c00:	ldr	r0, [pc, #236]	; 11cf4 <__assert_fail@plt+0xa84>
   11c04:	bl	11168 <gettext@plt>
   11c08:	mov	r2, r0
   11c0c:	ldr	r3, [pc, #208]	; 11ce4 <__assert_fail@plt+0xa74>
   11c10:	ldr	r3, [r3]
   11c14:	mov	r1, r3
   11c18:	mov	r0, r2
   11c1c:	bl	10f64 <fputs_unlocked@plt>
   11c20:	ldr	r0, [pc, #208]	; 11cf8 <__assert_fail@plt+0xa88>
   11c24:	bl	11168 <gettext@plt>
   11c28:	mov	r2, r0
   11c2c:	ldr	r3, [pc, #176]	; 11ce4 <__assert_fail@plt+0xa74>
   11c30:	ldr	r3, [r3]
   11c34:	mov	r1, r3
   11c38:	mov	r0, r2
   11c3c:	bl	10f64 <fputs_unlocked@plt>
   11c40:	ldr	r0, [pc, #180]	; 11cfc <__assert_fail@plt+0xa8c>
   11c44:	bl	11168 <gettext@plt>
   11c48:	mov	r2, r0
   11c4c:	ldr	r3, [pc, #144]	; 11ce4 <__assert_fail@plt+0xa74>
   11c50:	ldr	r3, [r3]
   11c54:	mov	r1, r3
   11c58:	mov	r0, r2
   11c5c:	bl	10f64 <fputs_unlocked@plt>
   11c60:	ldr	r0, [pc, #152]	; 11d00 <__assert_fail@plt+0xa90>
   11c64:	bl	11168 <gettext@plt>
   11c68:	mov	r2, r0
   11c6c:	ldr	r3, [pc, #112]	; 11ce4 <__assert_fail@plt+0xa74>
   11c70:	ldr	r3, [r3]
   11c74:	mov	r1, r3
   11c78:	mov	r0, r2
   11c7c:	bl	10f64 <fputs_unlocked@plt>
   11c80:	ldr	r0, [pc, #124]	; 11d04 <__assert_fail@plt+0xa94>
   11c84:	bl	11168 <gettext@plt>
   11c88:	mov	r2, r0
   11c8c:	ldr	r3, [pc, #80]	; 11ce4 <__assert_fail@plt+0xa74>
   11c90:	ldr	r3, [r3]
   11c94:	mov	r1, r3
   11c98:	mov	r0, r2
   11c9c:	bl	10f64 <fputs_unlocked@plt>
   11ca0:	ldr	r0, [pc, #96]	; 11d08 <__assert_fail@plt+0xa98>
   11ca4:	bl	11168 <gettext@plt>
   11ca8:	mov	r2, r0
   11cac:	ldr	r3, [pc, #48]	; 11ce4 <__assert_fail@plt+0xa74>
   11cb0:	ldr	r3, [r3]
   11cb4:	mov	r1, r3
   11cb8:	mov	r0, r2
   11cbc:	bl	10f64 <fputs_unlocked@plt>
   11cc0:	ldr	r0, [pc, #68]	; 11d0c <__assert_fail@plt+0xa9c>
   11cc4:	bl	113e4 <__assert_fail@plt+0x174>
   11cc8:	ldr	r0, [fp, #-16]
   11ccc:	bl	1115c <exit@plt>
   11cd0:	andeq	r2, r5, r8, lsl #3
   11cd4:	strdeq	pc, [r3], -r0
   11cd8:	andeq	r2, r5, r4, lsr #3
   11cdc:	andeq	pc, r3, r8, lsl ip	; <UNPREDICTABLE>
   11ce0:	andeq	pc, r3, r0, asr #24
   11ce4:	andeq	r2, r5, ip, lsl #3
   11ce8:	andeq	pc, r3, r0, ror ip	; <UNPREDICTABLE>
   11cec:	andeq	pc, r3, r8, lsr #25
   11cf0:			; <UNDEFINED> instruction: 0x0003fdbc
   11cf4:	andeq	pc, r3, r0, ror #29
   11cf8:	andeq	pc, r3, r4, asr pc	; <UNPREDICTABLE>
   11cfc:	andeq	r0, r4, r0, lsl r0
   11d00:	andeq	r0, r4, r8, asr #2
   11d04:	andeq	r0, r4, r4, lsl r2
   11d08:	andeq	r0, r4, r8, lsr r3
   11d0c:	ldrdeq	r0, [r4], -r4
   11d10:	push	{r4, fp, lr}
   11d14:	add	fp, sp, #8
   11d18:	sub	sp, sp, #44	; 0x2c
   11d1c:	str	r0, [fp, #-24]	; 0xffffffe8
   11d20:	str	r1, [fp, #-28]	; 0xffffffe4
   11d24:	ldr	r3, [fp, #-28]	; 0xffffffe4
   11d28:	ldr	r3, [r3]
   11d2c:	mov	r0, r3
   11d30:	bl	2084c <__assert_fail@plt+0xf5dc>
   11d34:	ldr	r1, [pc, #376]	; 11eb4 <__assert_fail@plt+0xc44>
   11d38:	mov	r0, #6
   11d3c:	bl	11204 <setlocale@plt>
   11d40:	ldr	r1, [pc, #368]	; 11eb8 <__assert_fail@plt+0xc48>
   11d44:	ldr	r0, [pc, #368]	; 11ebc <__assert_fail@plt+0xc4c>
   11d48:	bl	11234 <bindtextdomain@plt>
   11d4c:	ldr	r0, [pc, #360]	; 11ebc <__assert_fail@plt+0xc4c>
   11d50:	bl	11078 <textdomain@plt>
   11d54:	mov	r0, #3
   11d58:	bl	113a8 <__assert_fail@plt+0x138>
   11d5c:	ldr	r0, [pc, #348]	; 11ec0 <__assert_fail@plt+0xc50>
   11d60:	bl	3fa20 <__assert_fail@plt+0x2e7b0>
   11d64:	mov	r3, #0
   11d68:	str	r3, [sp, #20]
   11d6c:	ldr	r3, [pc, #336]	; 11ec4 <__assert_fail@plt+0xc54>
   11d70:	str	r3, [sp, #16]
   11d74:	ldr	r3, [pc, #332]	; 11ec8 <__assert_fail@plt+0xc58>
   11d78:	str	r3, [sp, #12]
   11d7c:	ldr	r3, [pc, #328]	; 11ecc <__assert_fail@plt+0xc5c>
   11d80:	str	r3, [sp, #8]
   11d84:	ldr	r3, [pc, #324]	; 11ed0 <__assert_fail@plt+0xc60>
   11d88:	str	r3, [sp, #4]
   11d8c:	ldr	r3, [pc, #320]	; 11ed4 <__assert_fail@plt+0xc64>
   11d90:	str	r3, [sp]
   11d94:	ldr	r3, [pc, #316]	; 11ed8 <__assert_fail@plt+0xc68>
   11d98:	ldr	r2, [pc, #316]	; 11edc <__assert_fail@plt+0xc6c>
   11d9c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   11da0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11da4:	bl	20110 <__assert_fail@plt+0xeea0>
   11da8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   11dac:	str	r3, [fp, #-16]
   11db0:	ldr	r3, [fp, #-16]
   11db4:	cmp	r3, #1
   11db8:	bls	11df8 <__assert_fail@plt+0xb88>
   11dbc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   11dc0:	add	r3, r3, #4
   11dc4:	ldr	r3, [r3]
   11dc8:	ldr	r1, [pc, #272]	; 11ee0 <__assert_fail@plt+0xc70>
   11dcc:	mov	r0, r3
   11dd0:	bl	10fa0 <strcmp@plt>
   11dd4:	mov	r3, r0
   11dd8:	cmp	r3, #0
   11ddc:	bne	11df8 <__assert_fail@plt+0xb88>
   11de0:	ldr	r3, [fp, #-16]
   11de4:	sub	r3, r3, #1
   11de8:	str	r3, [fp, #-16]
   11dec:	ldr	r3, [fp, #-28]	; 0xffffffe4
   11df0:	add	r3, r3, #4
   11df4:	str	r3, [fp, #-28]	; 0xffffffe4
   11df8:	ldr	r3, [fp, #-16]
   11dfc:	cmp	r3, #1
   11e00:	bhi	11e28 <__assert_fail@plt+0xbb8>
   11e04:	ldr	r0, [pc, #216]	; 11ee4 <__assert_fail@plt+0xc74>
   11e08:	bl	11168 <gettext@plt>
   11e0c:	mov	r3, r0
   11e10:	mov	r2, r3
   11e14:	mov	r1, #0
   11e18:	mov	r0, #0
   11e1c:	bl	110e4 <error@plt>
   11e20:	mov	r0, #2
   11e24:	bl	11b10 <__assert_fail@plt+0x8a0>
   11e28:	ldr	r3, [fp, #-28]	; 0xffffffe4
   11e2c:	add	r3, r3, #4
   11e30:	ldr	r2, [pc, #176]	; 11ee8 <__assert_fail@plt+0xc78>
   11e34:	str	r3, [r2]
   11e38:	mov	r0, #1
   11e3c:	bl	133b0 <__assert_fail@plt+0x2140>
   11e40:	str	r0, [fp, #-20]	; 0xffffffec
   11e44:	bl	12424 <__assert_fail@plt+0x11b4>
   11e48:	mov	r3, r0
   11e4c:	eor	r3, r3, #1
   11e50:	uxtb	r3, r3
   11e54:	cmp	r3, #0
   11e58:	beq	11e98 <__assert_fail@plt+0xc28>
   11e5c:	ldr	r0, [pc, #136]	; 11eec <__assert_fail@plt+0xc7c>
   11e60:	bl	11168 <gettext@plt>
   11e64:	mov	r4, r0
   11e68:	ldr	r3, [pc, #120]	; 11ee8 <__assert_fail@plt+0xc78>
   11e6c:	ldr	r3, [r3]
   11e70:	ldr	r3, [r3]
   11e74:	mov	r2, r3
   11e78:	mov	r1, #8
   11e7c:	mov	r0, #0
   11e80:	bl	22ae8 <__assert_fail@plt+0x11878>
   11e84:	mov	r3, r0
   11e88:	mov	r2, r4
   11e8c:	mov	r1, #0
   11e90:	mov	r0, #2
   11e94:	bl	110e4 <error@plt>
   11e98:	ldr	r0, [fp, #-20]	; 0xffffffec
   11e9c:	bl	11fec <__assert_fail@plt+0xd7c>
   11ea0:	ldr	r0, [fp, #-20]	; 0xffffffec
   11ea4:	bl	12068 <__assert_fail@plt+0xdf8>
   11ea8:	mov	r3, r0
   11eac:	mov	r0, r3
   11eb0:	bl	1115c <exit@plt>
   11eb4:	andeq	pc, r3, ip, lsr fp	; <UNPREDICTABLE>
   11eb8:	ldrdeq	r0, [r4], -ip
   11ebc:	andeq	pc, r3, r4, asr fp	; <UNPREDICTABLE>
   11ec0:	strdeq	r3, [r1], -ip
   11ec4:	strdeq	r0, [r4], -r4
   11ec8:	andeq	r0, r4, r0, lsl #8
   11ecc:	andeq	r0, r4, r0, lsl r4
   11ed0:	andeq	r1, r1, r0, lsl fp
   11ed4:	andeq	r0, r4, ip, lsl r4
   11ed8:	andeq	pc, r3, r4, lsl #21
   11edc:	ldrdeq	r0, [r4], -r4
   11ee0:	andeq	r0, r4, ip, lsr #8
   11ee4:	andeq	r0, r4, r0, lsr r4
   11ee8:	muleq	r5, r8, r1
   11eec:	andeq	r0, r4, r0, asr #8
   11ef0:	push	{fp, lr}
   11ef4:	add	fp, sp, #4
   11ef8:	sub	sp, sp, #16
   11efc:	str	r0, [fp, #-16]
   11f00:	mov	r0, #16
   11f04:	bl	3d37c <__assert_fail@plt+0x2c10c>
   11f08:	mov	r3, r0
   11f0c:	str	r3, [fp, #-8]
   11f10:	ldr	r3, [fp, #-8]
   11f14:	mov	r2, #0
   11f18:	str	r2, [r3]
   11f1c:	ldr	r3, [fp, #-8]
   11f20:	add	r3, r3, #4
   11f24:	ldr	r1, [fp, #-16]
   11f28:	mov	r0, r3
   11f2c:	bl	17e24 <__assert_fail@plt+0x6bb4>
   11f30:	ldr	r3, [fp, #-8]
   11f34:	mov	r0, r3
   11f38:	sub	sp, fp, #4
   11f3c:	pop	{fp, pc}
   11f40:	push	{fp, lr}
   11f44:	add	fp, sp, #4
   11f48:	sub	sp, sp, #16
   11f4c:	str	r0, [fp, #-16]
   11f50:	mov	r0, #16
   11f54:	bl	3d37c <__assert_fail@plt+0x2c10c>
   11f58:	mov	r3, r0
   11f5c:	str	r3, [fp, #-8]
   11f60:	ldr	r3, [fp, #-8]
   11f64:	mov	r2, #1
   11f68:	str	r2, [r3]
   11f6c:	ldr	r0, [fp, #-16]
   11f70:	bl	3de5c <__assert_fail@plt+0x2cbec>
   11f74:	mov	r3, r0
   11f78:	mov	r2, r3
   11f7c:	ldr	r3, [fp, #-8]
   11f80:	str	r2, [r3, #4]
   11f84:	ldr	r3, [fp, #-8]
   11f88:	mov	r0, r3
   11f8c:	sub	sp, fp, #4
   11f90:	pop	{fp, pc}
   11f94:	push	{fp, lr}
   11f98:	add	fp, sp, #4
   11f9c:	sub	sp, sp, #8
   11fa0:	str	r0, [fp, #-8]
   11fa4:	ldr	r3, [fp, #-8]
   11fa8:	ldr	r3, [r3]
   11fac:	cmp	r3, #1
   11fb0:	bne	11fc8 <__assert_fail@plt+0xd58>
   11fb4:	ldr	r3, [fp, #-8]
   11fb8:	ldr	r3, [r3, #4]
   11fbc:	mov	r0, r3
   11fc0:	bl	13630 <__assert_fail@plt+0x23c0>
   11fc4:	b	11fd8 <__assert_fail@plt+0xd68>
   11fc8:	ldr	r3, [fp, #-8]
   11fcc:	add	r3, r3, #4
   11fd0:	mov	r0, r3
   11fd4:	bl	17b48 <__assert_fail@plt+0x68d8>
   11fd8:	ldr	r0, [fp, #-8]
   11fdc:	bl	13630 <__assert_fail@plt+0x23c0>
   11fe0:	nop			; (mov r0, r0)
   11fe4:	sub	sp, fp, #4
   11fe8:	pop	{fp, pc}
   11fec:	push	{fp, lr}
   11ff0:	add	fp, sp, #4
   11ff4:	sub	sp, sp, #8
   11ff8:	str	r0, [fp, #-8]
   11ffc:	ldr	r3, [fp, #-8]
   12000:	ldr	r3, [r3]
   12004:	cmp	r3, #0
   12008:	beq	12018 <__assert_fail@plt+0xda8>
   1200c:	cmp	r3, #1
   12010:	beq	12040 <__assert_fail@plt+0xdd0>
   12014:	b	12054 <__assert_fail@plt+0xde4>
   12018:	ldr	r3, [pc, #68]	; 12064 <__assert_fail@plt+0xdf4>
   1201c:	ldr	r0, [r3]
   12020:	ldr	r3, [fp, #-8]
   12024:	add	r3, r3, #4
   12028:	mov	r2, r3
   1202c:	mov	r1, #10
   12030:	bl	1f92c <__assert_fail@plt+0xe6bc>
   12034:	mov	r0, #10
   12038:	bl	11264 <putchar_unlocked@plt>
   1203c:	b	12058 <__assert_fail@plt+0xde8>
   12040:	ldr	r3, [fp, #-8]
   12044:	ldr	r3, [r3, #4]
   12048:	mov	r0, r3
   1204c:	bl	110fc <puts@plt>
   12050:	b	12058 <__assert_fail@plt+0xde8>
   12054:	bl	11258 <abort@plt>
   12058:	nop			; (mov r0, r0)
   1205c:	sub	sp, fp, #4
   12060:	pop	{fp, pc}
   12064:	andeq	r2, r5, ip, lsl #3
   12068:	push	{fp, lr}
   1206c:	add	fp, sp, #4
   12070:	sub	sp, sp, #16
   12074:	str	r0, [fp, #-16]
   12078:	ldr	r3, [fp, #-16]
   1207c:	ldr	r3, [r3]
   12080:	cmp	r3, #0
   12084:	beq	12094 <__assert_fail@plt+0xe24>
   12088:	cmp	r3, #1
   1208c:	beq	120bc <__assert_fail@plt+0xe4c>
   12090:	b	12144 <__assert_fail@plt+0xed4>
   12094:	ldr	r3, [fp, #-16]
   12098:	add	r3, r3, #4
   1209c:	mov	r0, r3
   120a0:	bl	18b94 <__assert_fail@plt+0x7924>
   120a4:	mov	r3, r0
   120a8:	cmp	r3, #0
   120ac:	moveq	r3, #1
   120b0:	movne	r3, #0
   120b4:	uxtb	r3, r3
   120b8:	b	12148 <__assert_fail@plt+0xed8>
   120bc:	ldr	r3, [fp, #-16]
   120c0:	ldr	r3, [r3, #4]
   120c4:	str	r3, [fp, #-8]
   120c8:	ldr	r3, [fp, #-8]
   120cc:	ldrb	r3, [r3]
   120d0:	cmp	r3, #0
   120d4:	bne	120e0 <__assert_fail@plt+0xe70>
   120d8:	mov	r3, #1
   120dc:	b	12148 <__assert_fail@plt+0xed8>
   120e0:	ldr	r3, [fp, #-8]
   120e4:	ldrb	r3, [r3]
   120e8:	cmp	r3, #45	; 0x2d
   120ec:	moveq	r3, #1
   120f0:	movne	r3, #0
   120f4:	uxtb	r3, r3
   120f8:	mov	r2, r3
   120fc:	ldr	r3, [fp, #-8]
   12100:	add	r3, r3, r2
   12104:	str	r3, [fp, #-8]
   12108:	ldr	r3, [fp, #-8]
   1210c:	ldrb	r3, [r3]
   12110:	cmp	r3, #48	; 0x30
   12114:	beq	12120 <__assert_fail@plt+0xeb0>
   12118:	mov	r3, #0
   1211c:	b	12148 <__assert_fail@plt+0xed8>
   12120:	ldr	r3, [fp, #-8]
   12124:	add	r3, r3, #1
   12128:	str	r3, [fp, #-8]
   1212c:	ldr	r3, [fp, #-8]
   12130:	ldrb	r3, [r3]
   12134:	cmp	r3, #0
   12138:	bne	12108 <__assert_fail@plt+0xe98>
   1213c:	mov	r3, #1
   12140:	b	12148 <__assert_fail@plt+0xed8>
   12144:	bl	11258 <abort@plt>
   12148:	mov	r0, r3
   1214c:	sub	sp, fp, #4
   12150:	pop	{fp, pc}
   12154:	push	{fp}		; (str fp, [sp, #-4]!)
   12158:	add	fp, sp, #0
   1215c:	sub	sp, sp, #12
   12160:	str	r0, [fp, #-8]
   12164:	ldr	r3, [fp, #-8]
   12168:	ldrb	r3, [r3]
   1216c:	cmp	r3, #45	; 0x2d
   12170:	moveq	r3, #1
   12174:	movne	r3, #0
   12178:	uxtb	r3, r3
   1217c:	mov	r2, r3
   12180:	ldr	r3, [fp, #-8]
   12184:	add	r3, r3, r2
   12188:	str	r3, [fp, #-8]
   1218c:	ldr	r3, [fp, #-8]
   12190:	ldrb	r3, [r3]
   12194:	sub	r3, r3, #48	; 0x30
   12198:	cmp	r3, #9
   1219c:	bls	121a8 <__assert_fail@plt+0xf38>
   121a0:	mov	r3, #0
   121a4:	b	121c8 <__assert_fail@plt+0xf58>
   121a8:	ldr	r3, [fp, #-8]
   121ac:	add	r3, r3, #1
   121b0:	str	r3, [fp, #-8]
   121b4:	ldr	r3, [fp, #-8]
   121b8:	ldrb	r3, [r3]
   121bc:	cmp	r3, #0
   121c0:	bne	1218c <__assert_fail@plt+0xf1c>
   121c4:	mov	r3, #1
   121c8:	mov	r0, r3
   121cc:	add	sp, fp, #0
   121d0:	pop	{fp}		; (ldr fp, [sp], #4)
   121d4:	bx	lr
   121d8:	push	{fp, lr}
   121dc:	add	fp, sp, #4
   121e0:	sub	sp, sp, #16
   121e4:	str	r0, [fp, #-16]
   121e8:	ldr	r3, [fp, #-16]
   121ec:	ldr	r3, [r3]
   121f0:	cmp	r3, #0
   121f4:	beq	12204 <__assert_fail@plt+0xf94>
   121f8:	cmp	r3, #1
   121fc:	beq	12250 <__assert_fail@plt+0xfe0>
   12200:	b	1224c <__assert_fail@plt+0xfdc>
   12204:	ldr	r3, [fp, #-16]
   12208:	add	r3, r3, #4
   1220c:	mov	r2, r3
   12210:	mov	r1, #10
   12214:	mov	r0, #0
   12218:	bl	1f0b0 <__assert_fail@plt+0xde40>
   1221c:	str	r0, [fp, #-8]
   12220:	ldr	r3, [fp, #-16]
   12224:	add	r3, r3, #4
   12228:	mov	r0, r3
   1222c:	bl	17b48 <__assert_fail@plt+0x68d8>
   12230:	ldr	r3, [fp, #-16]
   12234:	ldr	r2, [fp, #-8]
   12238:	str	r2, [r3, #4]
   1223c:	ldr	r3, [fp, #-16]
   12240:	mov	r2, #1
   12244:	str	r2, [r3]
   12248:	b	12254 <__assert_fail@plt+0xfe4>
   1224c:	bl	11258 <abort@plt>
   12250:	nop			; (mov r0, r0)
   12254:	nop			; (mov r0, r0)
   12258:	sub	sp, fp, #4
   1225c:	pop	{fp, pc}
   12260:	push	{fp, lr}
   12264:	add	fp, sp, #4
   12268:	sub	sp, sp, #16
   1226c:	str	r0, [fp, #-16]
   12270:	ldr	r3, [fp, #-16]
   12274:	ldr	r3, [r3]
   12278:	cmp	r3, #0
   1227c:	beq	1228c <__assert_fail@plt+0x101c>
   12280:	cmp	r3, #1
   12284:	beq	12294 <__assert_fail@plt+0x1024>
   12288:	b	12318 <__assert_fail@plt+0x10a8>
   1228c:	mov	r3, #1
   12290:	b	1231c <__assert_fail@plt+0x10ac>
   12294:	ldr	r3, [fp, #-16]
   12298:	ldr	r3, [r3, #4]
   1229c:	str	r3, [fp, #-8]
   122a0:	ldr	r0, [fp, #-8]
   122a4:	bl	12154 <__assert_fail@plt+0xee4>
   122a8:	mov	r3, r0
   122ac:	eor	r3, r3, #1
   122b0:	uxtb	r3, r3
   122b4:	cmp	r3, #0
   122b8:	beq	122c4 <__assert_fail@plt+0x1054>
   122bc:	mov	r3, #0
   122c0:	b	1231c <__assert_fail@plt+0x10ac>
   122c4:	ldr	r3, [fp, #-16]
   122c8:	add	r3, r3, #4
   122cc:	mov	r2, #10
   122d0:	ldr	r1, [fp, #-8]
   122d4:	mov	r0, r3
   122d8:	bl	1f8ec <__assert_fail@plt+0xe67c>
   122dc:	mov	r3, r0
   122e0:	cmp	r3, #0
   122e4:	beq	122fc <__assert_fail@plt+0x108c>
   122e8:	ldr	r3, [fp, #-8]
   122ec:	ldr	r2, [pc, #52]	; 12328 <__assert_fail@plt+0x10b8>
   122f0:	mov	r1, #34	; 0x22
   122f4:	mov	r0, #3
   122f8:	bl	110e4 <error@plt>
   122fc:	ldr	r0, [fp, #-8]
   12300:	bl	13630 <__assert_fail@plt+0x23c0>
   12304:	ldr	r3, [fp, #-16]
   12308:	mov	r2, #0
   1230c:	str	r2, [r3]
   12310:	mov	r3, #1
   12314:	b	1231c <__assert_fail@plt+0x10ac>
   12318:	bl	11258 <abort@plt>
   1231c:	mov	r0, r3
   12320:	sub	sp, fp, #4
   12324:	pop	{fp, pc}
   12328:	andeq	r0, r4, r8, ror #8
   1232c:	push	{fp, lr}
   12330:	add	fp, sp, #4
   12334:	sub	sp, sp, #16
   12338:	str	r0, [fp, #-16]
   1233c:	ldr	r0, [fp, #-16]
   12340:	bl	18b94 <__assert_fail@plt+0x7924>
   12344:	mov	r3, r0
   12348:	cmp	r3, #0
   1234c:	bge	12358 <__assert_fail@plt+0x10e8>
   12350:	mvn	r3, #0
   12354:	b	12390 <__assert_fail@plt+0x1120>
   12358:	ldr	r0, [fp, #-16]
   1235c:	bl	17f68 <__assert_fail@plt+0x6cf8>
   12360:	mov	r3, r0
   12364:	cmp	r3, #0
   12368:	beq	1238c <__assert_fail@plt+0x111c>
   1236c:	ldr	r0, [fp, #-16]
   12370:	bl	1818c <__assert_fail@plt+0x6f1c>
   12374:	str	r0, [fp, #-8]
   12378:	ldr	r3, [fp, #-8]
   1237c:	cmn	r3, #1
   12380:	beq	1238c <__assert_fail@plt+0x111c>
   12384:	ldr	r3, [fp, #-8]
   12388:	b	12390 <__assert_fail@plt+0x1120>
   1238c:	mvn	r3, #1
   12390:	mov	r0, r3
   12394:	sub	sp, fp, #4
   12398:	pop	{fp, pc}
   1239c:	push	{fp, lr}
   123a0:	add	fp, sp, #4
   123a4:	sub	sp, sp, #16
   123a8:	str	r0, [fp, #-16]
   123ac:	ldr	r3, [pc, #108]	; 12420 <__assert_fail@plt+0x11b0>
   123b0:	ldr	r3, [r3]
   123b4:	ldr	r3, [r3]
   123b8:	cmp	r3, #0
   123bc:	bne	123c8 <__assert_fail@plt+0x1158>
   123c0:	mov	r3, #0
   123c4:	b	12414 <__assert_fail@plt+0x11a4>
   123c8:	ldr	r3, [pc, #80]	; 12420 <__assert_fail@plt+0x11b0>
   123cc:	ldr	r3, [r3]
   123d0:	ldr	r3, [r3]
   123d4:	ldr	r1, [fp, #-16]
   123d8:	mov	r0, r3
   123dc:	bl	10fa0 <strcmp@plt>
   123e0:	mov	r3, r0
   123e4:	cmp	r3, #0
   123e8:	moveq	r3, #1
   123ec:	movne	r3, #0
   123f0:	strb	r3, [fp, #-5]
   123f4:	ldr	r3, [pc, #36]	; 12420 <__assert_fail@plt+0x11b0>
   123f8:	ldr	r2, [r3]
   123fc:	ldrb	r3, [fp, #-5]
   12400:	lsl	r3, r3, #2
   12404:	add	r3, r2, r3
   12408:	ldr	r2, [pc, #16]	; 12420 <__assert_fail@plt+0x11b0>
   1240c:	str	r3, [r2]
   12410:	ldrb	r3, [fp, #-5]
   12414:	mov	r0, r3
   12418:	sub	sp, fp, #4
   1241c:	pop	{fp, pc}
   12420:	muleq	r5, r8, r1
   12424:	push	{fp}		; (str fp, [sp, #-4]!)
   12428:	add	fp, sp, #0
   1242c:	ldr	r3, [pc, #36]	; 12458 <__assert_fail@plt+0x11e8>
   12430:	ldr	r3, [r3]
   12434:	ldr	r3, [r3]
   12438:	cmp	r3, #0
   1243c:	moveq	r3, #1
   12440:	movne	r3, #0
   12444:	uxtb	r3, r3
   12448:	mov	r0, r3
   1244c:	add	sp, fp, #0
   12450:	pop	{fp}		; (ldr fp, [sp], #4)
   12454:	bx	lr
   12458:	muleq	r5, r8, r1
   1245c:	push	{r4, r5, fp, lr}
   12460:	add	fp, sp, #12
   12464:	bl	12424 <__assert_fail@plt+0x11b4>
   12468:	mov	r3, r0
   1246c:	cmp	r3, #0
   12470:	beq	124b4 <__assert_fail@plt+0x1244>
   12474:	ldr	r0, [pc, #64]	; 124bc <__assert_fail@plt+0x124c>
   12478:	bl	11168 <gettext@plt>
   1247c:	mov	r4, r0
   12480:	ldr	r3, [pc, #56]	; 124c0 <__assert_fail@plt+0x1250>
   12484:	ldr	r3, [r3]
   12488:	sub	r3, r3, #4
   1248c:	ldr	r3, [r3]
   12490:	mov	r2, r3
   12494:	mov	r1, #8
   12498:	mov	r0, #0
   1249c:	bl	22ae8 <__assert_fail@plt+0x11878>
   124a0:	mov	r3, r0
   124a4:	mov	r2, r4
   124a8:	mov	r1, #0
   124ac:	mov	r0, #2
   124b0:	bl	110e4 <error@plt>
   124b4:	nop			; (mov r0, r0)
   124b8:	pop	{r4, r5, fp, pc}
   124bc:	andeq	r0, r4, ip, ror #8
   124c0:	muleq	r5, r8, r1
   124c4:	push	{r4, fp, lr}
   124c8:	add	fp, sp, #8
   124cc:	sub	sp, sp, #340	; 0x154
   124d0:	str	r0, [fp, #-336]	; 0xfffffeb0
   124d4:	str	r1, [fp, #-340]	; 0xfffffeac
   124d8:	ldr	r0, [fp, #-336]	; 0xfffffeb0
   124dc:	bl	121d8 <__assert_fail@plt+0xf68>
   124e0:	ldr	r0, [fp, #-340]	; 0xfffffeac
   124e4:	bl	121d8 <__assert_fail@plt+0xf68>
   124e8:	mov	r3, #0
   124ec:	str	r3, [fp, #-328]	; 0xfffffeb8
   124f0:	mov	r3, #0
   124f4:	str	r3, [fp, #-324]	; 0xfffffebc
   124f8:	mov	r3, #0
   124fc:	str	r3, [fp, #-320]	; 0xfffffec0
   12500:	mov	r3, #0
   12504:	str	r3, [fp, #-60]	; 0xffffffc4
   12508:	mov	r3, #0
   1250c:	str	r3, [fp, #-56]	; 0xffffffc8
   12510:	sub	r3, fp, #316	; 0x13c
   12514:	str	r3, [fp, #-44]	; 0xffffffd4
   12518:	mov	r3, #0
   1251c:	str	r3, [fp, #-40]	; 0xffffffd8
   12520:	ldr	r3, [pc, #548]	; 1274c <__assert_fail@plt+0x14dc>
   12524:	ldr	r2, [pc, #548]	; 12750 <__assert_fail@plt+0x14e0>
   12528:	str	r2, [r3]
   1252c:	ldr	r3, [fp, #-340]	; 0xfffffeac
   12530:	ldr	r4, [r3, #4]
   12534:	ldr	r3, [fp, #-340]	; 0xfffffeac
   12538:	ldr	r3, [r3, #4]
   1253c:	mov	r0, r3
   12540:	bl	11174 <strlen@plt>
   12544:	mov	r1, r0
   12548:	sub	r3, fp, #60	; 0x3c
   1254c:	mov	r2, r3
   12550:	mov	r0, r4
   12554:	bl	28468 <__assert_fail@plt+0x171f8>
   12558:	str	r0, [fp, #-20]	; 0xffffffec
   1255c:	ldr	r3, [fp, #-20]	; 0xffffffec
   12560:	cmp	r3, #0
   12564:	beq	1257c <__assert_fail@plt+0x130c>
   12568:	ldr	r3, [fp, #-20]	; 0xffffffec
   1256c:	ldr	r2, [pc, #480]	; 12754 <__assert_fail@plt+0x14e4>
   12570:	mov	r1, #0
   12574:	mov	r0, #2
   12578:	bl	110e4 <error@plt>
   1257c:	ldrb	r3, [fp, #-32]	; 0xffffffe0
   12580:	bic	r3, r3, #128	; 0x80
   12584:	strb	r3, [fp, #-32]	; 0xffffffe0
   12588:	ldr	r3, [fp, #-336]	; 0xfffffeb0
   1258c:	ldr	r4, [r3, #4]
   12590:	ldr	r3, [fp, #-336]	; 0xfffffeb0
   12594:	ldr	r3, [r3, #4]
   12598:	mov	r0, r3
   1259c:	bl	11174 <strlen@plt>
   125a0:	mov	r3, r0
   125a4:	mov	r2, r3
   125a8:	sub	r0, fp, #60	; 0x3c
   125ac:	sub	r3, fp, #328	; 0x148
   125b0:	str	r3, [sp]
   125b4:	mov	r3, #0
   125b8:	mov	r1, r4
   125bc:	bl	3171c <__assert_fail@plt+0x204ac>
   125c0:	str	r0, [fp, #-24]	; 0xffffffe8
   125c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   125c8:	cmp	r3, #0
   125cc:	blt	12690 <__assert_fail@plt+0x1420>
   125d0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   125d4:	cmp	r3, #0
   125d8:	beq	12648 <__assert_fail@plt+0x13d8>
   125dc:	ldr	r3, [fp, #-320]	; 0xfffffec0
   125e0:	add	r3, r3, #4
   125e4:	ldr	r3, [r3]
   125e8:	cmp	r3, #0
   125ec:	bge	12600 <__assert_fail@plt+0x1390>
   125f0:	ldr	r0, [pc, #352]	; 12758 <__assert_fail@plt+0x14e8>
   125f4:	bl	11f40 <__assert_fail@plt+0xcd0>
   125f8:	str	r0, [fp, #-16]
   125fc:	b	12704 <__assert_fail@plt+0x1494>
   12600:	ldr	r3, [fp, #-336]	; 0xfffffeb0
   12604:	ldr	r3, [r3, #4]
   12608:	ldr	r2, [fp, #-320]	; 0xfffffec0
   1260c:	add	r2, r2, #4
   12610:	ldr	r2, [r2]
   12614:	add	r3, r3, r2
   12618:	mov	r2, #0
   1261c:	strb	r2, [r3]
   12620:	ldr	r3, [fp, #-336]	; 0xfffffeb0
   12624:	ldr	r3, [r3, #4]
   12628:	ldr	r2, [fp, #-324]	; 0xfffffebc
   1262c:	add	r2, r2, #4
   12630:	ldr	r2, [r2]
   12634:	add	r3, r3, r2
   12638:	mov	r0, r3
   1263c:	bl	11f40 <__assert_fail@plt+0xcd0>
   12640:	str	r0, [fp, #-16]
   12644:	b	12704 <__assert_fail@plt+0x1494>
   12648:	bl	110b4 <__ctype_get_mb_cur_max@plt>
   1264c:	mov	r3, r0
   12650:	cmp	r3, #1
   12654:	beq	12678 <__assert_fail@plt+0x1408>
   12658:	ldr	r3, [fp, #-336]	; 0xfffffeb0
   1265c:	ldr	r3, [r3, #4]
   12660:	ldr	r2, [fp, #-24]	; 0xffffffe8
   12664:	mov	r1, r2
   12668:	mov	r0, r3
   1266c:	bl	11a20 <__assert_fail@plt+0x7b0>
   12670:	mov	r3, r0
   12674:	b	1267c <__assert_fail@plt+0x140c>
   12678:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1267c:	str	r3, [fp, #-28]	; 0xffffffe4
   12680:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12684:	bl	11ef0 <__assert_fail@plt+0xc80>
   12688:	str	r0, [fp, #-16]
   1268c:	b	12704 <__assert_fail@plt+0x1494>
   12690:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12694:	cmn	r3, #1
   12698:	bne	126c8 <__assert_fail@plt+0x1458>
   1269c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   126a0:	cmp	r3, #0
   126a4:	beq	126b8 <__assert_fail@plt+0x1448>
   126a8:	ldr	r0, [pc, #168]	; 12758 <__assert_fail@plt+0x14e8>
   126ac:	bl	11f40 <__assert_fail@plt+0xcd0>
   126b0:	str	r0, [fp, #-16]
   126b4:	b	12704 <__assert_fail@plt+0x1494>
   126b8:	mov	r0, #0
   126bc:	bl	11ef0 <__assert_fail@plt+0xc80>
   126c0:	str	r0, [fp, #-16]
   126c4:	b	12704 <__assert_fail@plt+0x1494>
   126c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   126cc:	cmn	r3, #2
   126d0:	bne	126e4 <__assert_fail@plt+0x1474>
   126d4:	bl	11198 <__errno_location@plt>
   126d8:	mov	r3, r0
   126dc:	ldr	r4, [r3]
   126e0:	b	126e8 <__assert_fail@plt+0x1478>
   126e4:	mov	r4, #75	; 0x4b
   126e8:	ldr	r0, [pc, #108]	; 1275c <__assert_fail@plt+0x14ec>
   126ec:	bl	11168 <gettext@plt>
   126f0:	mov	r3, r0
   126f4:	mov	r2, r3
   126f8:	mov	r1, r4
   126fc:	mov	r0, #3
   12700:	bl	110e4 <error@plt>
   12704:	ldr	r3, [fp, #-328]	; 0xfffffeb8
   12708:	cmp	r3, #0
   1270c:	beq	12728 <__assert_fail@plt+0x14b8>
   12710:	ldr	r3, [fp, #-324]	; 0xfffffebc
   12714:	mov	r0, r3
   12718:	bl	13630 <__assert_fail@plt+0x23c0>
   1271c:	ldr	r3, [fp, #-320]	; 0xfffffec0
   12720:	mov	r0, r3
   12724:	bl	13630 <__assert_fail@plt+0x23c0>
   12728:	mov	r3, #0
   1272c:	str	r3, [fp, #-44]	; 0xffffffd4
   12730:	sub	r3, fp, #60	; 0x3c
   12734:	mov	r0, r3
   12738:	bl	2935c <__assert_fail@plt+0x180ec>
   1273c:	ldr	r3, [fp, #-16]
   12740:	mov	r0, r3
   12744:	sub	sp, fp, #8
   12748:	pop	{r4, fp, pc}
   1274c:	ldrdeq	r2, [r5], -r8
   12750:	andeq	r0, r0, r6, asr #5
   12754:	andeq	r0, r4, r8, ror #8
   12758:	andeq	pc, r3, ip, lsr fp	; <UNPREDICTABLE>
   1275c:	muleq	r4, r4, r4
   12760:	push	{r4, fp, lr}
   12764:	add	fp, sp, #8
   12768:	sub	sp, sp, #20
   1276c:	mov	r3, r0
   12770:	strb	r3, [fp, #-21]	; 0xffffffeb
   12774:	bl	1245c <__assert_fail@plt+0x11ec>
   12778:	ldr	r0, [pc, #300]	; 128ac <__assert_fail@plt+0x163c>
   1277c:	bl	1239c <__assert_fail@plt+0x112c>
   12780:	mov	r3, r0
   12784:	cmp	r3, #0
   12788:	beq	1284c <__assert_fail@plt+0x15dc>
   1278c:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   12790:	mov	r0, r3
   12794:	bl	133b0 <__assert_fail@plt+0x2140>
   12798:	str	r0, [fp, #-16]
   1279c:	bl	12424 <__assert_fail@plt+0x11b4>
   127a0:	mov	r3, r0
   127a4:	cmp	r3, #0
   127a8:	beq	127ec <__assert_fail@plt+0x157c>
   127ac:	ldr	r0, [pc, #252]	; 128b0 <__assert_fail@plt+0x1640>
   127b0:	bl	11168 <gettext@plt>
   127b4:	mov	r4, r0
   127b8:	ldr	r3, [pc, #244]	; 128b4 <__assert_fail@plt+0x1644>
   127bc:	ldr	r3, [r3]
   127c0:	sub	r3, r3, #4
   127c4:	ldr	r3, [r3]
   127c8:	mov	r2, r3
   127cc:	mov	r1, #8
   127d0:	mov	r0, #0
   127d4:	bl	22ae8 <__assert_fail@plt+0x11878>
   127d8:	mov	r3, r0
   127dc:	mov	r2, r4
   127e0:	mov	r1, #0
   127e4:	mov	r0, #2
   127e8:	bl	110e4 <error@plt>
   127ec:	ldr	r0, [pc, #196]	; 128b8 <__assert_fail@plt+0x1648>
   127f0:	bl	1239c <__assert_fail@plt+0x112c>
   127f4:	mov	r3, r0
   127f8:	eor	r3, r3, #1
   127fc:	uxtb	r3, r3
   12800:	cmp	r3, #0
   12804:	beq	12844 <__assert_fail@plt+0x15d4>
   12808:	ldr	r0, [pc, #172]	; 128bc <__assert_fail@plt+0x164c>
   1280c:	bl	11168 <gettext@plt>
   12810:	mov	r4, r0
   12814:	ldr	r3, [pc, #152]	; 128b4 <__assert_fail@plt+0x1644>
   12818:	ldr	r3, [r3]
   1281c:	ldr	r3, [r3]
   12820:	mov	r2, r3
   12824:	mov	r1, #8
   12828:	mov	r0, #0
   1282c:	bl	22ae8 <__assert_fail@plt+0x11878>
   12830:	mov	r3, r0
   12834:	mov	r2, r4
   12838:	mov	r1, #0
   1283c:	mov	r0, #2
   12840:	bl	110e4 <error@plt>
   12844:	ldr	r3, [fp, #-16]
   12848:	b	128a0 <__assert_fail@plt+0x1630>
   1284c:	ldr	r0, [pc, #100]	; 128b8 <__assert_fail@plt+0x1648>
   12850:	bl	1239c <__assert_fail@plt+0x112c>
   12854:	mov	r3, r0
   12858:	cmp	r3, #0
   1285c:	beq	1287c <__assert_fail@plt+0x160c>
   12860:	ldr	r0, [pc, #88]	; 128c0 <__assert_fail@plt+0x1650>
   12864:	bl	11168 <gettext@plt>
   12868:	mov	r3, r0
   1286c:	mov	r2, r3
   12870:	mov	r1, #0
   12874:	mov	r0, #2
   12878:	bl	110e4 <error@plt>
   1287c:	ldr	r3, [pc, #48]	; 128b4 <__assert_fail@plt+0x1644>
   12880:	ldr	r3, [r3]
   12884:	add	r2, r3, #4
   12888:	ldr	r1, [pc, #36]	; 128b4 <__assert_fail@plt+0x1644>
   1288c:	str	r2, [r1]
   12890:	ldr	r3, [r3]
   12894:	mov	r0, r3
   12898:	bl	11f40 <__assert_fail@plt+0xcd0>
   1289c:	mov	r3, r0
   128a0:	mov	r0, r3
   128a4:	sub	sp, fp, #8
   128a8:	pop	{r4, fp, pc}
   128ac:			; <UNDEFINED> instruction: 0x000404b8
   128b0:			; <UNDEFINED> instruction: 0x000404bc
   128b4:	muleq	r5, r8, r1
   128b8:	andeq	r0, r4, r4, ror #9
   128bc:	andeq	r0, r4, r8, ror #9
   128c0:	andeq	r0, r4, r4, lsl r5
   128c4:	push	{fp, lr}
   128c8:	add	fp, sp, #4
   128cc:	sub	sp, sp, #48	; 0x30
   128d0:	mov	r3, r0
   128d4:	strb	r3, [fp, #-45]	; 0xffffffd3
   128d8:	ldr	r0, [pc, #696]	; 12b98 <__assert_fail@plt+0x1928>
   128dc:	bl	1239c <__assert_fail@plt+0x112c>
   128e0:	mov	r3, r0
   128e4:	cmp	r3, #0
   128e8:	beq	12918 <__assert_fail@plt+0x16a8>
   128ec:	bl	1245c <__assert_fail@plt+0x11ec>
   128f0:	ldr	r3, [pc, #676]	; 12b9c <__assert_fail@plt+0x192c>
   128f4:	ldr	r3, [r3]
   128f8:	add	r2, r3, #4
   128fc:	ldr	r1, [pc, #664]	; 12b9c <__assert_fail@plt+0x192c>
   12900:	str	r2, [r1]
   12904:	ldr	r3, [r3]
   12908:	mov	r0, r3
   1290c:	bl	11f40 <__assert_fail@plt+0xcd0>
   12910:	mov	r3, r0
   12914:	b	12b8c <__assert_fail@plt+0x191c>
   12918:	ldr	r0, [pc, #640]	; 12ba0 <__assert_fail@plt+0x1930>
   1291c:	bl	1239c <__assert_fail@plt+0x112c>
   12920:	mov	r3, r0
   12924:	cmp	r3, #0
   12928:	beq	12974 <__assert_fail@plt+0x1704>
   1292c:	ldrb	r3, [fp, #-45]	; 0xffffffd3
   12930:	mov	r0, r3
   12934:	bl	128c4 <__assert_fail@plt+0x1654>
   12938:	str	r0, [fp, #-12]
   1293c:	ldr	r0, [fp, #-12]
   12940:	bl	121d8 <__assert_fail@plt+0xf68>
   12944:	ldr	r3, [fp, #-12]
   12948:	ldr	r3, [r3, #4]
   1294c:	mov	r0, r3
   12950:	bl	20440 <__assert_fail@plt+0xf1d0>
   12954:	mov	r3, r0
   12958:	mov	r0, r3
   1295c:	bl	11ef0 <__assert_fail@plt+0xc80>
   12960:	str	r0, [fp, #-8]
   12964:	ldr	r0, [fp, #-12]
   12968:	bl	11f94 <__assert_fail@plt+0xd24>
   1296c:	ldr	r3, [fp, #-8]
   12970:	b	12b8c <__assert_fail@plt+0x191c>
   12974:	ldr	r0, [pc, #552]	; 12ba4 <__assert_fail@plt+0x1934>
   12978:	bl	1239c <__assert_fail@plt+0x112c>
   1297c:	mov	r3, r0
   12980:	cmp	r3, #0
   12984:	beq	129e8 <__assert_fail@plt+0x1778>
   12988:	ldrb	r3, [fp, #-45]	; 0xffffffd3
   1298c:	mov	r0, r3
   12990:	bl	128c4 <__assert_fail@plt+0x1654>
   12994:	str	r0, [fp, #-16]
   12998:	ldrb	r3, [fp, #-45]	; 0xffffffd3
   1299c:	mov	r0, r3
   129a0:	bl	128c4 <__assert_fail@plt+0x1654>
   129a4:	str	r0, [fp, #-12]
   129a8:	ldrb	r3, [fp, #-45]	; 0xffffffd3
   129ac:	cmp	r3, #0
   129b0:	beq	129d0 <__assert_fail@plt+0x1760>
   129b4:	ldr	r1, [fp, #-12]
   129b8:	ldr	r0, [fp, #-16]
   129bc:	bl	124c4 <__assert_fail@plt+0x1254>
   129c0:	str	r0, [fp, #-8]
   129c4:	ldr	r0, [fp, #-16]
   129c8:	bl	11f94 <__assert_fail@plt+0xd24>
   129cc:	b	129d8 <__assert_fail@plt+0x1768>
   129d0:	ldr	r3, [fp, #-16]
   129d4:	str	r3, [fp, #-8]
   129d8:	ldr	r0, [fp, #-12]
   129dc:	bl	11f94 <__assert_fail@plt+0xd24>
   129e0:	ldr	r3, [fp, #-8]
   129e4:	b	12b8c <__assert_fail@plt+0x191c>
   129e8:	ldr	r0, [pc, #440]	; 12ba8 <__assert_fail@plt+0x1938>
   129ec:	bl	1239c <__assert_fail@plt+0x112c>
   129f0:	mov	r3, r0
   129f4:	cmp	r3, #0
   129f8:	beq	12a70 <__assert_fail@plt+0x1800>
   129fc:	ldrb	r3, [fp, #-45]	; 0xffffffd3
   12a00:	mov	r0, r3
   12a04:	bl	128c4 <__assert_fail@plt+0x1654>
   12a08:	str	r0, [fp, #-16]
   12a0c:	ldrb	r3, [fp, #-45]	; 0xffffffd3
   12a10:	mov	r0, r3
   12a14:	bl	128c4 <__assert_fail@plt+0x1654>
   12a18:	str	r0, [fp, #-12]
   12a1c:	ldr	r0, [fp, #-16]
   12a20:	bl	121d8 <__assert_fail@plt+0xf68>
   12a24:	ldr	r0, [fp, #-12]
   12a28:	bl	121d8 <__assert_fail@plt+0xf68>
   12a2c:	ldr	r3, [fp, #-16]
   12a30:	ldr	r2, [r3, #4]
   12a34:	ldr	r3, [fp, #-12]
   12a38:	ldr	r3, [r3, #4]
   12a3c:	mov	r1, r3
   12a40:	mov	r0, r2
   12a44:	bl	11584 <__assert_fail@plt+0x314>
   12a48:	str	r0, [fp, #-20]	; 0xffffffec
   12a4c:	ldr	r0, [fp, #-20]	; 0xffffffec
   12a50:	bl	11ef0 <__assert_fail@plt+0xc80>
   12a54:	str	r0, [fp, #-8]
   12a58:	ldr	r0, [fp, #-16]
   12a5c:	bl	11f94 <__assert_fail@plt+0xd24>
   12a60:	ldr	r0, [fp, #-12]
   12a64:	bl	11f94 <__assert_fail@plt+0xd24>
   12a68:	ldr	r3, [fp, #-8]
   12a6c:	b	12b8c <__assert_fail@plt+0x191c>
   12a70:	ldr	r0, [pc, #308]	; 12bac <__assert_fail@plt+0x193c>
   12a74:	bl	1239c <__assert_fail@plt+0x112c>
   12a78:	mov	r3, r0
   12a7c:	cmp	r3, #0
   12a80:	beq	12b7c <__assert_fail@plt+0x190c>
   12a84:	ldrb	r3, [fp, #-45]	; 0xffffffd3
   12a88:	mov	r0, r3
   12a8c:	bl	128c4 <__assert_fail@plt+0x1654>
   12a90:	str	r0, [fp, #-16]
   12a94:	ldrb	r3, [fp, #-45]	; 0xffffffd3
   12a98:	mov	r0, r3
   12a9c:	bl	128c4 <__assert_fail@plt+0x1654>
   12aa0:	str	r0, [fp, #-24]	; 0xffffffe8
   12aa4:	ldrb	r3, [fp, #-45]	; 0xffffffd3
   12aa8:	mov	r0, r3
   12aac:	bl	128c4 <__assert_fail@plt+0x1654>
   12ab0:	str	r0, [fp, #-28]	; 0xffffffe4
   12ab4:	ldr	r0, [fp, #-16]
   12ab8:	bl	121d8 <__assert_fail@plt+0xf68>
   12abc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12ac0:	bl	12260 <__assert_fail@plt+0xff0>
   12ac4:	mov	r3, r0
   12ac8:	eor	r3, r3, #1
   12acc:	uxtb	r3, r3
   12ad0:	cmp	r3, #0
   12ad4:	bne	12af4 <__assert_fail@plt+0x1884>
   12ad8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12adc:	bl	12260 <__assert_fail@plt+0xff0>
   12ae0:	mov	r3, r0
   12ae4:	eor	r3, r3, #1
   12ae8:	uxtb	r3, r3
   12aec:	cmp	r3, #0
   12af0:	beq	12b04 <__assert_fail@plt+0x1894>
   12af4:	ldr	r0, [pc, #180]	; 12bb0 <__assert_fail@plt+0x1940>
   12af8:	bl	11f40 <__assert_fail@plt+0xcd0>
   12afc:	str	r0, [fp, #-8]
   12b00:	b	12b5c <__assert_fail@plt+0x18ec>
   12b04:	ldr	r3, [fp, #-24]	; 0xffffffe8
   12b08:	add	r3, r3, #4
   12b0c:	mov	r0, r3
   12b10:	bl	1232c <__assert_fail@plt+0x10bc>
   12b14:	str	r0, [fp, #-32]	; 0xffffffe0
   12b18:	ldr	r3, [fp, #-28]	; 0xffffffe4
   12b1c:	add	r3, r3, #4
   12b20:	mov	r0, r3
   12b24:	bl	1232c <__assert_fail@plt+0x10bc>
   12b28:	str	r0, [fp, #-36]	; 0xffffffdc
   12b2c:	ldr	r3, [fp, #-16]
   12b30:	ldr	r3, [r3, #4]
   12b34:	ldr	r2, [fp, #-36]	; 0xffffffdc
   12b38:	ldr	r1, [fp, #-32]	; 0xffffffe0
   12b3c:	mov	r0, r3
   12b40:	bl	117f4 <__assert_fail@plt+0x584>
   12b44:	str	r0, [fp, #-40]	; 0xffffffd8
   12b48:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12b4c:	bl	11f40 <__assert_fail@plt+0xcd0>
   12b50:	str	r0, [fp, #-8]
   12b54:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12b58:	bl	13630 <__assert_fail@plt+0x23c0>
   12b5c:	ldr	r0, [fp, #-16]
   12b60:	bl	11f94 <__assert_fail@plt+0xd24>
   12b64:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12b68:	bl	11f94 <__assert_fail@plt+0xd24>
   12b6c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12b70:	bl	11f94 <__assert_fail@plt+0xd24>
   12b74:	ldr	r3, [fp, #-8]
   12b78:	b	12b8c <__assert_fail@plt+0x191c>
   12b7c:	ldrb	r3, [fp, #-45]	; 0xffffffd3
   12b80:	mov	r0, r3
   12b84:	bl	12760 <__assert_fail@plt+0x14f0>
   12b88:	mov	r3, r0
   12b8c:	mov	r0, r3
   12b90:	sub	sp, fp, #4
   12b94:	pop	{fp, pc}
   12b98:	andeq	r0, r4, r4, lsr r5
   12b9c:	muleq	r5, r8, r1
   12ba0:	andeq	r0, r4, r8, lsr r5
   12ba4:	andeq	r0, r4, r0, asr #10
   12ba8:	andeq	r0, r4, r8, asr #10
   12bac:	andeq	r0, r4, r0, asr r5
   12bb0:	andeq	pc, r3, ip, lsr fp	; <UNPREDICTABLE>
   12bb4:	push	{fp, lr}
   12bb8:	add	fp, sp, #4
   12bbc:	sub	sp, sp, #24
   12bc0:	mov	r3, r0
   12bc4:	strb	r3, [fp, #-21]	; 0xffffffeb
   12bc8:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   12bcc:	mov	r0, r3
   12bd0:	bl	128c4 <__assert_fail@plt+0x1654>
   12bd4:	str	r0, [fp, #-8]
   12bd8:	ldr	r0, [pc, #100]	; 12c44 <__assert_fail@plt+0x19d4>
   12bdc:	bl	1239c <__assert_fail@plt+0x112c>
   12be0:	mov	r3, r0
   12be4:	cmp	r3, #0
   12be8:	beq	12c34 <__assert_fail@plt+0x19c4>
   12bec:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   12bf0:	mov	r0, r3
   12bf4:	bl	128c4 <__assert_fail@plt+0x1654>
   12bf8:	str	r0, [fp, #-12]
   12bfc:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   12c00:	cmp	r3, #0
   12c04:	beq	12c28 <__assert_fail@plt+0x19b8>
   12c08:	ldr	r1, [fp, #-12]
   12c0c:	ldr	r0, [fp, #-8]
   12c10:	bl	124c4 <__assert_fail@plt+0x1254>
   12c14:	str	r0, [fp, #-16]
   12c18:	ldr	r0, [fp, #-8]
   12c1c:	bl	11f94 <__assert_fail@plt+0xd24>
   12c20:	ldr	r3, [fp, #-16]
   12c24:	str	r3, [fp, #-8]
   12c28:	ldr	r0, [fp, #-12]
   12c2c:	bl	11f94 <__assert_fail@plt+0xd24>
   12c30:	b	12bd8 <__assert_fail@plt+0x1968>
   12c34:	ldr	r3, [fp, #-8]
   12c38:	mov	r0, r3
   12c3c:	sub	sp, fp, #4
   12c40:	pop	{fp, pc}
   12c44:	andeq	r0, r4, r8, asr r5
   12c48:	push	{fp, lr}
   12c4c:	add	fp, sp, #4
   12c50:	sub	sp, sp, #24
   12c54:	mov	r3, r0
   12c58:	strb	r3, [fp, #-21]	; 0xffffffeb
   12c5c:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   12c60:	mov	r0, r3
   12c64:	bl	12bb4 <__assert_fail@plt+0x1944>
   12c68:	str	r0, [fp, #-12]
   12c6c:	ldr	r0, [pc, #372]	; 12de8 <__assert_fail@plt+0x1b78>
   12c70:	bl	1239c <__assert_fail@plt+0x112c>
   12c74:	mov	r3, r0
   12c78:	cmp	r3, #0
   12c7c:	beq	12c8c <__assert_fail@plt+0x1a1c>
   12c80:	mov	r3, #0
   12c84:	str	r3, [fp, #-8]
   12c88:	b	12cd4 <__assert_fail@plt+0x1a64>
   12c8c:	ldr	r0, [pc, #344]	; 12dec <__assert_fail@plt+0x1b7c>
   12c90:	bl	1239c <__assert_fail@plt+0x112c>
   12c94:	mov	r3, r0
   12c98:	cmp	r3, #0
   12c9c:	beq	12cac <__assert_fail@plt+0x1a3c>
   12ca0:	mov	r3, #1
   12ca4:	str	r3, [fp, #-8]
   12ca8:	b	12cd4 <__assert_fail@plt+0x1a64>
   12cac:	ldr	r0, [pc, #316]	; 12df0 <__assert_fail@plt+0x1b80>
   12cb0:	bl	1239c <__assert_fail@plt+0x112c>
   12cb4:	mov	r3, r0
   12cb8:	cmp	r3, #0
   12cbc:	beq	12ccc <__assert_fail@plt+0x1a5c>
   12cc0:	mov	r3, #2
   12cc4:	str	r3, [fp, #-8]
   12cc8:	b	12cd4 <__assert_fail@plt+0x1a64>
   12ccc:	ldr	r3, [fp, #-12]
   12cd0:	b	12ddc <__assert_fail@plt+0x1b6c>
   12cd4:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   12cd8:	mov	r0, r3
   12cdc:	bl	12bb4 <__assert_fail@plt+0x1944>
   12ce0:	str	r0, [fp, #-16]
   12ce4:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   12ce8:	cmp	r3, #0
   12cec:	beq	12dd0 <__assert_fail@plt+0x1b60>
   12cf0:	ldr	r0, [fp, #-12]
   12cf4:	bl	12260 <__assert_fail@plt+0xff0>
   12cf8:	mov	r3, r0
   12cfc:	eor	r3, r3, #1
   12d00:	uxtb	r3, r3
   12d04:	cmp	r3, #0
   12d08:	bne	12d28 <__assert_fail@plt+0x1ab8>
   12d0c:	ldr	r0, [fp, #-16]
   12d10:	bl	12260 <__assert_fail@plt+0xff0>
   12d14:	mov	r3, r0
   12d18:	eor	r3, r3, #1
   12d1c:	uxtb	r3, r3
   12d20:	cmp	r3, #0
   12d24:	beq	12d44 <__assert_fail@plt+0x1ad4>
   12d28:	ldr	r0, [pc, #196]	; 12df4 <__assert_fail@plt+0x1b84>
   12d2c:	bl	11168 <gettext@plt>
   12d30:	mov	r3, r0
   12d34:	mov	r2, r3
   12d38:	mov	r1, #0
   12d3c:	mov	r0, #2
   12d40:	bl	110e4 <error@plt>
   12d44:	ldr	r3, [fp, #-8]
   12d48:	cmp	r3, #0
   12d4c:	beq	12d88 <__assert_fail@plt+0x1b18>
   12d50:	ldr	r3, [fp, #-16]
   12d54:	add	r3, r3, #4
   12d58:	mov	r0, r3
   12d5c:	bl	18b94 <__assert_fail@plt+0x7924>
   12d60:	mov	r3, r0
   12d64:	cmp	r3, #0
   12d68:	bne	12d88 <__assert_fail@plt+0x1b18>
   12d6c:	ldr	r0, [pc, #132]	; 12df8 <__assert_fail@plt+0x1b88>
   12d70:	bl	11168 <gettext@plt>
   12d74:	mov	r3, r0
   12d78:	mov	r2, r3
   12d7c:	mov	r1, #0
   12d80:	mov	r0, #2
   12d84:	bl	110e4 <error@plt>
   12d88:	ldr	r3, [fp, #-8]
   12d8c:	cmp	r3, #0
   12d90:	beq	12db0 <__assert_fail@plt+0x1b40>
   12d94:	ldr	r3, [fp, #-8]
   12d98:	cmp	r3, #1
   12d9c:	bne	12da8 <__assert_fail@plt+0x1b38>
   12da0:	ldr	r3, [pc, #84]	; 12dfc <__assert_fail@plt+0x1b8c>
   12da4:	b	12db4 <__assert_fail@plt+0x1b44>
   12da8:	ldr	r3, [pc, #80]	; 12e00 <__assert_fail@plt+0x1b90>
   12dac:	b	12db4 <__assert_fail@plt+0x1b44>
   12db0:	ldr	r3, [pc, #76]	; 12e04 <__assert_fail@plt+0x1b94>
   12db4:	ldr	r2, [fp, #-12]
   12db8:	add	r0, r2, #4
   12dbc:	ldr	r2, [fp, #-12]
   12dc0:	add	r1, r2, #4
   12dc4:	ldr	r2, [fp, #-16]
   12dc8:	add	r2, r2, #4
   12dcc:	blx	r3
   12dd0:	ldr	r0, [fp, #-16]
   12dd4:	bl	11f94 <__assert_fail@plt+0xd24>
   12dd8:	b	12c6c <__assert_fail@plt+0x19fc>
   12ddc:	mov	r0, r3
   12de0:	sub	sp, fp, #4
   12de4:	pop	{fp, pc}
   12de8:	andeq	r0, r4, ip, asr r5
   12dec:	andeq	r0, r4, r0, ror #10
   12df0:	andeq	r0, r4, r4, ror #10
   12df4:	andeq	r0, r4, r8, ror #10
   12df8:	andeq	r0, r4, r0, lsl #11
   12dfc:	andeq	r9, r1, r8, asr #30
   12e00:	andeq	sl, r1, r8
   12e04:	andeq	r9, r1, r8, lsr #10
   12e08:	push	{fp, lr}
   12e0c:	add	fp, sp, #4
   12e10:	sub	sp, sp, #24
   12e14:	mov	r3, r0
   12e18:	strb	r3, [fp, #-21]	; 0xffffffeb
   12e1c:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   12e20:	mov	r0, r3
   12e24:	bl	12c48 <__assert_fail@plt+0x19d8>
   12e28:	str	r0, [fp, #-12]
   12e2c:	ldr	r0, [pc, #252]	; 12f30 <__assert_fail@plt+0x1cc0>
   12e30:	bl	1239c <__assert_fail@plt+0x112c>
   12e34:	mov	r3, r0
   12e38:	cmp	r3, #0
   12e3c:	beq	12e4c <__assert_fail@plt+0x1bdc>
   12e40:	mov	r3, #0
   12e44:	str	r3, [fp, #-8]
   12e48:	b	12e74 <__assert_fail@plt+0x1c04>
   12e4c:	ldr	r0, [pc, #224]	; 12f34 <__assert_fail@plt+0x1cc4>
   12e50:	bl	1239c <__assert_fail@plt+0x112c>
   12e54:	mov	r3, r0
   12e58:	cmp	r3, #0
   12e5c:	beq	12e6c <__assert_fail@plt+0x1bfc>
   12e60:	mov	r3, #1
   12e64:	str	r3, [fp, #-8]
   12e68:	b	12e74 <__assert_fail@plt+0x1c04>
   12e6c:	ldr	r3, [fp, #-12]
   12e70:	b	12f24 <__assert_fail@plt+0x1cb4>
   12e74:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   12e78:	mov	r0, r3
   12e7c:	bl	12c48 <__assert_fail@plt+0x19d8>
   12e80:	str	r0, [fp, #-16]
   12e84:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   12e88:	cmp	r3, #0
   12e8c:	beq	12f18 <__assert_fail@plt+0x1ca8>
   12e90:	ldr	r0, [fp, #-12]
   12e94:	bl	12260 <__assert_fail@plt+0xff0>
   12e98:	mov	r3, r0
   12e9c:	eor	r3, r3, #1
   12ea0:	uxtb	r3, r3
   12ea4:	cmp	r3, #0
   12ea8:	bne	12ec8 <__assert_fail@plt+0x1c58>
   12eac:	ldr	r0, [fp, #-16]
   12eb0:	bl	12260 <__assert_fail@plt+0xff0>
   12eb4:	mov	r3, r0
   12eb8:	eor	r3, r3, #1
   12ebc:	uxtb	r3, r3
   12ec0:	cmp	r3, #0
   12ec4:	beq	12ee4 <__assert_fail@plt+0x1c74>
   12ec8:	ldr	r0, [pc, #104]	; 12f38 <__assert_fail@plt+0x1cc8>
   12ecc:	bl	11168 <gettext@plt>
   12ed0:	mov	r3, r0
   12ed4:	mov	r2, r3
   12ed8:	mov	r1, #0
   12edc:	mov	r0, #2
   12ee0:	bl	110e4 <error@plt>
   12ee4:	ldr	r3, [fp, #-8]
   12ee8:	cmp	r3, #0
   12eec:	bne	12ef8 <__assert_fail@plt+0x1c88>
   12ef0:	ldr	r3, [pc, #68]	; 12f3c <__assert_fail@plt+0x1ccc>
   12ef4:	b	12efc <__assert_fail@plt+0x1c8c>
   12ef8:	ldr	r3, [pc, #64]	; 12f40 <__assert_fail@plt+0x1cd0>
   12efc:	ldr	r2, [fp, #-12]
   12f00:	add	r0, r2, #4
   12f04:	ldr	r2, [fp, #-12]
   12f08:	add	r1, r2, #4
   12f0c:	ldr	r2, [fp, #-16]
   12f10:	add	r2, r2, #4
   12f14:	blx	r3
   12f18:	ldr	r0, [fp, #-16]
   12f1c:	bl	11f94 <__assert_fail@plt+0xd24>
   12f20:	b	12e2c <__assert_fail@plt+0x1bbc>
   12f24:	mov	r0, r3
   12f28:	sub	sp, fp, #4
   12f2c:	pop	{fp, pc}
   12f30:	andeq	r0, r4, r4, lsr r5
   12f34:	muleq	r4, r4, r5
   12f38:	andeq	r0, r4, r8, ror #10
   12f3c:	andeq	r9, r1, r0, asr #6
   12f40:	ldrdeq	r9, [r1], -r4
   12f44:	push	{r4, r5, fp, lr}
   12f48:	add	fp, sp, #12
   12f4c:	sub	sp, sp, #40	; 0x28
   12f50:	mov	r3, r0
   12f54:	strb	r3, [fp, #-37]	; 0xffffffdb
   12f58:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   12f5c:	mov	r0, r3
   12f60:	bl	12e08 <__assert_fail@plt+0x1b98>
   12f64:	str	r0, [fp, #-16]
   12f68:	mov	r3, #0
   12f6c:	strb	r3, [fp, #-21]	; 0xffffffeb
   12f70:	ldr	r0, [pc, #800]	; 13298 <__assert_fail@plt+0x2028>
   12f74:	bl	1239c <__assert_fail@plt+0x112c>
   12f78:	mov	r3, r0
   12f7c:	cmp	r3, #0
   12f80:	beq	12f90 <__assert_fail@plt+0x1d20>
   12f84:	mov	r3, #0
   12f88:	str	r3, [fp, #-20]	; 0xffffffec
   12f8c:	b	1304c <__assert_fail@plt+0x1ddc>
   12f90:	ldr	r0, [pc, #772]	; 1329c <__assert_fail@plt+0x202c>
   12f94:	bl	1239c <__assert_fail@plt+0x112c>
   12f98:	mov	r3, r0
   12f9c:	cmp	r3, #0
   12fa0:	beq	12fb0 <__assert_fail@plt+0x1d40>
   12fa4:	mov	r3, #1
   12fa8:	str	r3, [fp, #-20]	; 0xffffffec
   12fac:	b	1304c <__assert_fail@plt+0x1ddc>
   12fb0:	ldr	r0, [pc, #744]	; 132a0 <__assert_fail@plt+0x2030>
   12fb4:	bl	1239c <__assert_fail@plt+0x112c>
   12fb8:	mov	r3, r0
   12fbc:	cmp	r3, #0
   12fc0:	bne	12fd8 <__assert_fail@plt+0x1d68>
   12fc4:	ldr	r0, [pc, #728]	; 132a4 <__assert_fail@plt+0x2034>
   12fc8:	bl	1239c <__assert_fail@plt+0x112c>
   12fcc:	mov	r3, r0
   12fd0:	cmp	r3, #0
   12fd4:	beq	12fe4 <__assert_fail@plt+0x1d74>
   12fd8:	mov	r3, #2
   12fdc:	str	r3, [fp, #-20]	; 0xffffffec
   12fe0:	b	1304c <__assert_fail@plt+0x1ddc>
   12fe4:	ldr	r0, [pc, #700]	; 132a8 <__assert_fail@plt+0x2038>
   12fe8:	bl	1239c <__assert_fail@plt+0x112c>
   12fec:	mov	r3, r0
   12ff0:	cmp	r3, #0
   12ff4:	beq	13004 <__assert_fail@plt+0x1d94>
   12ff8:	mov	r3, #3
   12ffc:	str	r3, [fp, #-20]	; 0xffffffec
   13000:	b	1304c <__assert_fail@plt+0x1ddc>
   13004:	ldr	r0, [pc, #672]	; 132ac <__assert_fail@plt+0x203c>
   13008:	bl	1239c <__assert_fail@plt+0x112c>
   1300c:	mov	r3, r0
   13010:	cmp	r3, #0
   13014:	beq	13024 <__assert_fail@plt+0x1db4>
   13018:	mov	r3, #4
   1301c:	str	r3, [fp, #-20]	; 0xffffffec
   13020:	b	1304c <__assert_fail@plt+0x1ddc>
   13024:	ldr	r0, [pc, #644]	; 132b0 <__assert_fail@plt+0x2040>
   13028:	bl	1239c <__assert_fail@plt+0x112c>
   1302c:	mov	r3, r0
   13030:	cmp	r3, #0
   13034:	beq	13044 <__assert_fail@plt+0x1dd4>
   13038:	mov	r3, #5
   1303c:	str	r3, [fp, #-20]	; 0xffffffec
   13040:	b	1304c <__assert_fail@plt+0x1ddc>
   13044:	ldr	r3, [fp, #-16]
   13048:	b	1328c <__assert_fail@plt+0x201c>
   1304c:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   13050:	mov	r0, r3
   13054:	bl	12e08 <__assert_fail@plt+0x1b98>
   13058:	str	r0, [fp, #-32]	; 0xffffffe0
   1305c:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   13060:	cmp	r3, #0
   13064:	beq	13268 <__assert_fail@plt+0x1ff8>
   13068:	ldr	r0, [fp, #-16]
   1306c:	bl	121d8 <__assert_fail@plt+0xf68>
   13070:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13074:	bl	121d8 <__assert_fail@plt+0xf68>
   13078:	ldr	r3, [fp, #-16]
   1307c:	ldr	r3, [r3, #4]
   13080:	mov	r0, r3
   13084:	bl	12154 <__assert_fail@plt+0xee4>
   13088:	mov	r3, r0
   1308c:	cmp	r3, #0
   13090:	beq	130d4 <__assert_fail@plt+0x1e64>
   13094:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13098:	ldr	r3, [r3, #4]
   1309c:	mov	r0, r3
   130a0:	bl	12154 <__assert_fail@plt+0xee4>
   130a4:	mov	r3, r0
   130a8:	cmp	r3, #0
   130ac:	beq	130d4 <__assert_fail@plt+0x1e64>
   130b0:	ldr	r3, [fp, #-16]
   130b4:	ldr	r2, [r3, #4]
   130b8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   130bc:	ldr	r3, [r3, #4]
   130c0:	mov	r1, r3
   130c4:	mov	r0, r2
   130c8:	bl	3cb58 <__assert_fail@plt+0x2b8e8>
   130cc:	str	r0, [fp, #-28]	; 0xffffffe4
   130d0:	b	131b8 <__assert_fail@plt+0x1f48>
   130d4:	bl	11198 <__errno_location@plt>
   130d8:	mov	r2, r0
   130dc:	mov	r3, #0
   130e0:	str	r3, [r2]
   130e4:	ldr	r3, [fp, #-16]
   130e8:	ldr	r2, [r3, #4]
   130ec:	ldr	r3, [fp, #-32]	; 0xffffffe0
   130f0:	ldr	r3, [r3, #4]
   130f4:	mov	r1, r3
   130f8:	mov	r0, r2
   130fc:	bl	110f0 <strcoll@plt>
   13100:	str	r0, [fp, #-28]	; 0xffffffe4
   13104:	bl	11198 <__errno_location@plt>
   13108:	mov	r3, r0
   1310c:	ldr	r3, [r3]
   13110:	cmp	r3, #0
   13114:	beq	131b8 <__assert_fail@plt+0x1f48>
   13118:	bl	11198 <__errno_location@plt>
   1311c:	mov	r3, r0
   13120:	ldr	r4, [r3]
   13124:	ldr	r0, [pc, #392]	; 132b4 <__assert_fail@plt+0x2044>
   13128:	bl	11168 <gettext@plt>
   1312c:	mov	r3, r0
   13130:	mov	r2, r3
   13134:	mov	r1, r4
   13138:	mov	r0, #0
   1313c:	bl	110e4 <error@plt>
   13140:	ldr	r0, [pc, #368]	; 132b8 <__assert_fail@plt+0x2048>
   13144:	bl	11168 <gettext@plt>
   13148:	mov	r3, r0
   1314c:	mov	r2, r3
   13150:	mov	r1, #0
   13154:	mov	r0, #0
   13158:	bl	110e4 <error@plt>
   1315c:	ldr	r0, [pc, #344]	; 132bc <__assert_fail@plt+0x204c>
   13160:	bl	11168 <gettext@plt>
   13164:	mov	r4, r0
   13168:	ldr	r3, [fp, #-16]
   1316c:	ldr	r3, [r3, #4]
   13170:	mov	r2, r3
   13174:	mov	r1, #8
   13178:	mov	r0, #0
   1317c:	bl	22ae8 <__assert_fail@plt+0x11878>
   13180:	mov	r5, r0
   13184:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13188:	ldr	r3, [r3, #4]
   1318c:	mov	r2, r3
   13190:	mov	r1, #8
   13194:	mov	r0, #1
   13198:	bl	22ae8 <__assert_fail@plt+0x11878>
   1319c:	mov	r3, r0
   131a0:	str	r3, [sp]
   131a4:	mov	r3, r5
   131a8:	mov	r2, r4
   131ac:	mov	r1, #0
   131b0:	mov	r0, #2
   131b4:	bl	110e4 <error@plt>
   131b8:	ldr	r3, [fp, #-20]	; 0xffffffec
   131bc:	cmp	r3, #5
   131c0:	ldrls	pc, [pc, r3, lsl #2]
   131c4:	b	13264 <__assert_fail@plt+0x1ff4>
   131c8:	andeq	r3, r1, r0, ror #3
   131cc:	strdeq	r3, [r1], -r0
   131d0:	andeq	r3, r1, r8, lsl #4
   131d4:	andeq	r3, r1, r0, lsr #4
   131d8:	andeq	r3, r1, r8, lsr r2
   131dc:	andeq	r3, r1, ip, asr #4
   131e0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   131e4:	lsr	r3, r3, #31
   131e8:	strb	r3, [fp, #-21]	; 0xffffffeb
   131ec:	b	13268 <__assert_fail@plt+0x1ff8>
   131f0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   131f4:	cmp	r3, #0
   131f8:	movle	r3, #1
   131fc:	movgt	r3, #0
   13200:	strb	r3, [fp, #-21]	; 0xffffffeb
   13204:	b	13268 <__assert_fail@plt+0x1ff8>
   13208:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1320c:	cmp	r3, #0
   13210:	moveq	r3, #1
   13214:	movne	r3, #0
   13218:	strb	r3, [fp, #-21]	; 0xffffffeb
   1321c:	b	13268 <__assert_fail@plt+0x1ff8>
   13220:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13224:	cmp	r3, #0
   13228:	movne	r3, #1
   1322c:	moveq	r3, #0
   13230:	strb	r3, [fp, #-21]	; 0xffffffeb
   13234:	b	13268 <__assert_fail@plt+0x1ff8>
   13238:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1323c:	mvn	r3, r3
   13240:	lsr	r3, r3, #31
   13244:	strb	r3, [fp, #-21]	; 0xffffffeb
   13248:	b	13268 <__assert_fail@plt+0x1ff8>
   1324c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13250:	cmp	r3, #0
   13254:	movgt	r3, #1
   13258:	movle	r3, #0
   1325c:	strb	r3, [fp, #-21]	; 0xffffffeb
   13260:	b	13268 <__assert_fail@plt+0x1ff8>
   13264:	bl	11258 <abort@plt>
   13268:	ldr	r0, [fp, #-16]
   1326c:	bl	11f94 <__assert_fail@plt+0xd24>
   13270:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13274:	bl	11f94 <__assert_fail@plt+0xd24>
   13278:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   1327c:	mov	r0, r3
   13280:	bl	11ef0 <__assert_fail@plt+0xc80>
   13284:	str	r0, [fp, #-16]
   13288:	b	12f68 <__assert_fail@plt+0x1cf8>
   1328c:	mov	r0, r3
   13290:	sub	sp, fp, #12
   13294:	pop	{r4, r5, fp, pc}
   13298:	muleq	r4, r8, r5
   1329c:	muleq	r4, ip, r5
   132a0:	andeq	r0, r4, r0, lsr #11
   132a4:	andeq	r0, r4, r4, lsr #11
   132a8:	andeq	r0, r4, r8, lsr #11
   132ac:	andeq	r0, r4, ip, lsr #11
   132b0:			; <UNDEFINED> instruction: 0x000405b0
   132b4:			; <UNDEFINED> instruction: 0x000405b4
   132b8:	ldrdeq	r0, [r4], -r0	; <UNPREDICTABLE>
   132bc:	strdeq	r0, [r4], -ip
   132c0:	push	{fp, lr}
   132c4:	add	fp, sp, #4
   132c8:	sub	sp, sp, #16
   132cc:	mov	r3, r0
   132d0:	strb	r3, [fp, #-13]
   132d4:	ldrb	r3, [fp, #-13]
   132d8:	mov	r0, r3
   132dc:	bl	12f44 <__assert_fail@plt+0x1cd4>
   132e0:	str	r0, [fp, #-8]
   132e4:	ldr	r0, [pc, #192]	; 133ac <__assert_fail@plt+0x213c>
   132e8:	bl	1239c <__assert_fail@plt+0x112c>
   132ec:	mov	r3, r0
   132f0:	cmp	r3, #0
   132f4:	beq	13394 <__assert_fail@plt+0x2124>
   132f8:	ldrb	r3, [fp, #-13]
   132fc:	cmp	r3, #0
   13300:	beq	13328 <__assert_fail@plt+0x20b8>
   13304:	ldr	r0, [fp, #-8]
   13308:	bl	12068 <__assert_fail@plt+0xdf8>
   1330c:	mov	r3, r0
   13310:	eor	r3, r3, #1
   13314:	uxtb	r3, r3
   13318:	cmp	r3, #0
   1331c:	beq	13328 <__assert_fail@plt+0x20b8>
   13320:	mov	r3, #1
   13324:	b	1332c <__assert_fail@plt+0x20bc>
   13328:	mov	r3, #0
   1332c:	and	r3, r3, #1
   13330:	uxtb	r3, r3
   13334:	mov	r0, r3
   13338:	bl	12f44 <__assert_fail@plt+0x1cd4>
   1333c:	str	r0, [fp, #-12]
   13340:	ldr	r0, [fp, #-8]
   13344:	bl	12068 <__assert_fail@plt+0xdf8>
   13348:	mov	r3, r0
   1334c:	cmp	r3, #0
   13350:	bne	13368 <__assert_fail@plt+0x20f8>
   13354:	ldr	r0, [fp, #-12]
   13358:	bl	12068 <__assert_fail@plt+0xdf8>
   1335c:	mov	r3, r0
   13360:	cmp	r3, #0
   13364:	beq	13388 <__assert_fail@plt+0x2118>
   13368:	ldr	r0, [fp, #-8]
   1336c:	bl	11f94 <__assert_fail@plt+0xd24>
   13370:	ldr	r0, [fp, #-12]
   13374:	bl	11f94 <__assert_fail@plt+0xd24>
   13378:	mov	r0, #0
   1337c:	bl	11ef0 <__assert_fail@plt+0xc80>
   13380:	str	r0, [fp, #-8]
   13384:	b	1339c <__assert_fail@plt+0x212c>
   13388:	ldr	r0, [fp, #-12]
   1338c:	bl	11f94 <__assert_fail@plt+0xd24>
   13390:	b	132e4 <__assert_fail@plt+0x2074>
   13394:	ldr	r3, [fp, #-8]
   13398:	b	133a0 <__assert_fail@plt+0x2130>
   1339c:	b	132e4 <__assert_fail@plt+0x2074>
   133a0:	mov	r0, r3
   133a4:	sub	sp, fp, #4
   133a8:	pop	{fp, pc}
   133ac:	andeq	r0, r4, r0, lsr #12
   133b0:	push	{fp, lr}
   133b4:	add	fp, sp, #4
   133b8:	sub	sp, sp, #16
   133bc:	mov	r3, r0
   133c0:	strb	r3, [fp, #-13]
   133c4:	ldrb	r3, [fp, #-13]
   133c8:	mov	r0, r3
   133cc:	bl	132c0 <__assert_fail@plt+0x2050>
   133d0:	str	r0, [fp, #-8]
   133d4:	ldr	r0, [pc, #184]	; 13494 <__assert_fail@plt+0x2224>
   133d8:	bl	1239c <__assert_fail@plt+0x112c>
   133dc:	mov	r3, r0
   133e0:	cmp	r3, #0
   133e4:	beq	13484 <__assert_fail@plt+0x2214>
   133e8:	ldrb	r3, [fp, #-13]
   133ec:	cmp	r3, #0
   133f0:	beq	13410 <__assert_fail@plt+0x21a0>
   133f4:	ldr	r0, [fp, #-8]
   133f8:	bl	12068 <__assert_fail@plt+0xdf8>
   133fc:	mov	r3, r0
   13400:	cmp	r3, #0
   13404:	beq	13410 <__assert_fail@plt+0x21a0>
   13408:	mov	r3, #1
   1340c:	b	13414 <__assert_fail@plt+0x21a4>
   13410:	mov	r3, #0
   13414:	and	r3, r3, #1
   13418:	uxtb	r3, r3
   1341c:	mov	r0, r3
   13420:	bl	132c0 <__assert_fail@plt+0x2050>
   13424:	str	r0, [fp, #-12]
   13428:	ldr	r0, [fp, #-8]
   1342c:	bl	12068 <__assert_fail@plt+0xdf8>
   13430:	mov	r3, r0
   13434:	cmp	r3, #0
   13438:	beq	13478 <__assert_fail@plt+0x2208>
   1343c:	ldr	r0, [fp, #-8]
   13440:	bl	11f94 <__assert_fail@plt+0xd24>
   13444:	ldr	r3, [fp, #-12]
   13448:	str	r3, [fp, #-8]
   1344c:	ldr	r0, [fp, #-8]
   13450:	bl	12068 <__assert_fail@plt+0xdf8>
   13454:	mov	r3, r0
   13458:	cmp	r3, #0
   1345c:	beq	133d4 <__assert_fail@plt+0x2164>
   13460:	ldr	r0, [fp, #-8]
   13464:	bl	11f94 <__assert_fail@plt+0xd24>
   13468:	mov	r0, #0
   1346c:	bl	11ef0 <__assert_fail@plt+0xc80>
   13470:	str	r0, [fp, #-8]
   13474:	b	133d4 <__assert_fail@plt+0x2164>
   13478:	ldr	r0, [fp, #-12]
   1347c:	bl	11f94 <__assert_fail@plt+0xd24>
   13480:	b	133d4 <__assert_fail@plt+0x2164>
   13484:	ldr	r3, [fp, #-8]
   13488:	mov	r0, r3
   1348c:	sub	sp, fp, #4
   13490:	pop	{fp, pc}
   13494:	andeq	r0, r4, r4, lsr #12
   13498:	push	{fp}		; (str fp, [sp, #-4]!)
   1349c:	add	fp, sp, #0
   134a0:	sub	sp, sp, #12
   134a4:	str	r0, [fp, #-8]
   134a8:	ldr	r2, [pc, #20]	; 134c4 <__assert_fail@plt+0x2254>
   134ac:	ldr	r3, [fp, #-8]
   134b0:	str	r3, [r2]
   134b4:	nop			; (mov r0, r0)
   134b8:	add	sp, fp, #0
   134bc:	pop	{fp}		; (ldr fp, [sp], #4)
   134c0:	bx	lr
   134c4:	muleq	r5, ip, r1
   134c8:	push	{fp}		; (str fp, [sp, #-4]!)
   134cc:	add	fp, sp, #0
   134d0:	sub	sp, sp, #12
   134d4:	mov	r3, r0
   134d8:	strb	r3, [fp, #-5]
   134dc:	ldr	r2, [pc, #20]	; 134f8 <__assert_fail@plt+0x2288>
   134e0:	ldrb	r3, [fp, #-5]
   134e4:	strb	r3, [r2]
   134e8:	nop			; (mov r0, r0)
   134ec:	add	sp, fp, #0
   134f0:	pop	{fp}		; (ldr fp, [sp], #4)
   134f4:	bx	lr
   134f8:	andeq	r2, r5, r0, lsr #3
   134fc:	push	{r4, fp, lr}
   13500:	add	fp, sp, #8
   13504:	sub	sp, sp, #20
   13508:	ldr	r3, [pc, #256]	; 13610 <__assert_fail@plt+0x23a0>
   1350c:	ldr	r3, [r3]
   13510:	mov	r0, r3
   13514:	bl	3e1a8 <__assert_fail@plt+0x2cf38>
   13518:	mov	r3, r0
   1351c:	cmp	r3, #0
   13520:	beq	135d8 <__assert_fail@plt+0x2368>
   13524:	ldr	r3, [pc, #232]	; 13614 <__assert_fail@plt+0x23a4>
   13528:	ldrb	r3, [r3]
   1352c:	eor	r3, r3, #1
   13530:	uxtb	r3, r3
   13534:	cmp	r3, #0
   13538:	bne	13550 <__assert_fail@plt+0x22e0>
   1353c:	bl	11198 <__errno_location@plt>
   13540:	mov	r3, r0
   13544:	ldr	r3, [r3]
   13548:	cmp	r3, #32
   1354c:	beq	135d8 <__assert_fail@plt+0x2368>
   13550:	ldr	r0, [pc, #192]	; 13618 <__assert_fail@plt+0x23a8>
   13554:	bl	11168 <gettext@plt>
   13558:	str	r0, [fp, #-16]
   1355c:	ldr	r3, [pc, #184]	; 1361c <__assert_fail@plt+0x23ac>
   13560:	ldr	r3, [r3]
   13564:	cmp	r3, #0
   13568:	beq	135ac <__assert_fail@plt+0x233c>
   1356c:	bl	11198 <__errno_location@plt>
   13570:	mov	r3, r0
   13574:	ldr	r4, [r3]
   13578:	ldr	r3, [pc, #156]	; 1361c <__assert_fail@plt+0x23ac>
   1357c:	ldr	r3, [r3]
   13580:	mov	r0, r3
   13584:	bl	22cac <__assert_fail@plt+0x11a3c>
   13588:	mov	r2, r0
   1358c:	ldr	r3, [fp, #-16]
   13590:	str	r3, [sp]
   13594:	mov	r3, r2
   13598:	ldr	r2, [pc, #128]	; 13620 <__assert_fail@plt+0x23b0>
   1359c:	mov	r1, r4
   135a0:	mov	r0, #0
   135a4:	bl	110e4 <error@plt>
   135a8:	b	135c8 <__assert_fail@plt+0x2358>
   135ac:	bl	11198 <__errno_location@plt>
   135b0:	mov	r3, r0
   135b4:	ldr	r1, [r3]
   135b8:	ldr	r3, [fp, #-16]
   135bc:	ldr	r2, [pc, #96]	; 13624 <__assert_fail@plt+0x23b4>
   135c0:	mov	r0, #0
   135c4:	bl	110e4 <error@plt>
   135c8:	ldr	r3, [pc, #88]	; 13628 <__assert_fail@plt+0x23b8>
   135cc:	ldr	r3, [r3]
   135d0:	mov	r0, r3
   135d4:	bl	1100c <_exit@plt>
   135d8:	ldr	r3, [pc, #76]	; 1362c <__assert_fail@plt+0x23bc>
   135dc:	ldr	r3, [r3]
   135e0:	mov	r0, r3
   135e4:	bl	3e1a8 <__assert_fail@plt+0x2cf38>
   135e8:	mov	r3, r0
   135ec:	cmp	r3, #0
   135f0:	beq	13604 <__assert_fail@plt+0x2394>
   135f4:	ldr	r3, [pc, #44]	; 13628 <__assert_fail@plt+0x23b8>
   135f8:	ldr	r3, [r3]
   135fc:	mov	r0, r3
   13600:	bl	1100c <_exit@plt>
   13604:	nop			; (mov r0, r0)
   13608:	sub	sp, fp, #8
   1360c:	pop	{r4, fp, pc}
   13610:	andeq	r2, r5, ip, lsl #3
   13614:	andeq	r2, r5, r0, lsr #3
   13618:	andeq	r0, r4, r8, lsr #12
   1361c:	muleq	r5, ip, r1
   13620:	andeq	r0, r4, r4, lsr r6
   13624:	andeq	r0, r4, ip, lsr r6
   13628:	andeq	r2, r5, r8, lsr #2
   1362c:	andeq	r2, r5, r8, lsl #3
   13630:	push	{r4, fp, lr}
   13634:	add	fp, sp, #8
   13638:	sub	sp, sp, #20
   1363c:	str	r0, [fp, #-24]	; 0xffffffe8
   13640:	bl	11198 <__errno_location@plt>
   13644:	mov	r3, r0
   13648:	ldr	r3, [r3]
   1364c:	str	r3, [fp, #-20]	; 0xffffffec
   13650:	bl	11198 <__errno_location@plt>
   13654:	mov	r3, r0
   13658:	ldr	r3, [r3]
   1365c:	str	r3, [fp, #-16]
   13660:	bl	11198 <__errno_location@plt>
   13664:	mov	r2, r0
   13668:	mov	r3, #0
   1366c:	str	r3, [r2]
   13670:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13674:	bl	10ff4 <free@plt>
   13678:	bl	11198 <__errno_location@plt>
   1367c:	mov	r4, r0
   13680:	bl	11198 <__errno_location@plt>
   13684:	mov	r3, r0
   13688:	ldr	r3, [r3]
   1368c:	cmp	r3, #0
   13690:	moveq	r3, #1
   13694:	movne	r3, #0
   13698:	uxtb	r3, r3
   1369c:	lsl	r3, r3, #2
   136a0:	sub	r2, fp, #12
   136a4:	add	r3, r2, r3
   136a8:	ldr	r3, [r3, #-8]
   136ac:	str	r3, [r4]
   136b0:	nop			; (mov r0, r0)
   136b4:	sub	sp, fp, #8
   136b8:	pop	{r4, fp, pc}
   136bc:	andeq	r0, r0, r0
   136c0:	push	{fp, lr}
   136c4:	add	fp, sp, #4
   136c8:	sub	sp, sp, #8
   136cc:	str	r0, [fp, #-8]
   136d0:	ldr	r3, [pc, #20]	; 136ec <__assert_fail@plt+0x247c>
   136d4:	ldr	r3, [r3]
   136d8:	ldr	r2, [fp, #-8]
   136dc:	ldr	r1, [pc, #12]	; 136f0 <__assert_fail@plt+0x2480>
   136e0:	mov	r0, r3
   136e4:	bl	1118c <fprintf@plt>
   136e8:	bl	11258 <abort@plt>
   136ec:	andeq	r2, r5, r8, lsl #3
   136f0:	andeq	r0, r4, r4, asr #12
   136f4:	push	{fp, lr}
   136f8:	add	fp, sp, #4
   136fc:	sub	sp, sp, #16
   13700:	str	r0, [fp, #-16]
   13704:	ldr	r3, [fp, #-16]
   13708:	cmp	r3, #0
   1370c:	bne	13724 <__assert_fail@plt+0x24b4>
   13710:	ldr	r3, [pc, #64]	; 13758 <__assert_fail@plt+0x24e8>
   13714:	ldr	r2, [pc, #64]	; 1375c <__assert_fail@plt+0x24ec>
   13718:	ldr	r1, [pc, #64]	; 13760 <__assert_fail@plt+0x24f0>
   1371c:	ldr	r0, [pc, #64]	; 13764 <__assert_fail@plt+0x24f4>
   13720:	bl	11270 <__assert_fail@plt>
   13724:	ldr	r0, [fp, #-16]
   13728:	bl	3df98 <__assert_fail@plt+0x2cd28>
   1372c:	mov	r3, r0
   13730:	str	r3, [fp, #-8]
   13734:	ldr	r3, [fp, #-8]
   13738:	cmp	r3, #0
   1373c:	bne	13748 <__assert_fail@plt+0x24d8>
   13740:	ldr	r0, [pc, #32]	; 13768 <__assert_fail@plt+0x24f8>
   13744:	bl	136c0 <__assert_fail@plt+0x2450>
   13748:	ldr	r3, [fp, #-8]
   1374c:	mov	r0, r3
   13750:	sub	sp, fp, #4
   13754:	pop	{fp, pc}
   13758:	andeq	r0, r4, r8, asr ip
   1375c:	andeq	r0, r0, r3, lsr #2
   13760:	andeq	r0, r4, r8, asr #12
   13764:	andeq	r0, r4, r8, asr r6
   13768:	andeq	r0, r4, r4, ror #12
   1376c:	push	{fp, lr}
   13770:	add	fp, sp, #4
   13774:	sub	sp, sp, #24
   13778:	str	r0, [fp, #-16]
   1377c:	str	r1, [fp, #-20]	; 0xffffffec
   13780:	str	r2, [fp, #-24]	; 0xffffffe8
   13784:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13788:	ldr	r0, [fp, #-16]
   1378c:	bl	3e040 <__assert_fail@plt+0x2cdd0>
   13790:	str	r0, [fp, #-8]
   13794:	ldr	r3, [fp, #-8]
   13798:	cmp	r3, #0
   1379c:	bne	137a8 <__assert_fail@plt+0x2538>
   137a0:	ldr	r0, [pc, #16]	; 137b8 <__assert_fail@plt+0x2548>
   137a4:	bl	136c0 <__assert_fail@plt+0x2450>
   137a8:	ldr	r3, [fp, #-8]
   137ac:	mov	r0, r3
   137b0:	sub	sp, fp, #4
   137b4:	pop	{fp, pc}
   137b8:	muleq	r4, r4, r6
   137bc:	push	{fp, lr}
   137c0:	add	fp, sp, #4
   137c4:	sub	sp, sp, #8
   137c8:	str	r0, [fp, #-8]
   137cc:	str	r1, [fp, #-12]
   137d0:	ldr	r0, [fp, #-8]
   137d4:	bl	13630 <__assert_fail@plt+0x23c0>
   137d8:	nop			; (mov r0, r0)
   137dc:	sub	sp, fp, #4
   137e0:	pop	{fp, pc}
   137e4:	push	{fp}		; (str fp, [sp, #-4]!)
   137e8:	add	fp, sp, #0
   137ec:	sub	sp, sp, #20
   137f0:	str	r0, [fp, #-8]
   137f4:	str	r1, [fp, #-12]
   137f8:	str	r2, [fp, #-16]
   137fc:	ldr	r3, [fp, #-8]
   13800:	cmp	r3, #0
   13804:	beq	13818 <__assert_fail@plt+0x25a8>
   13808:	ldr	r3, [pc, #80]	; 13860 <__assert_fail@plt+0x25f0>
   1380c:	ldr	r2, [r3]
   13810:	ldr	r3, [fp, #-8]
   13814:	str	r2, [r3]
   13818:	ldr	r3, [fp, #-12]
   1381c:	cmp	r3, #0
   13820:	beq	13834 <__assert_fail@plt+0x25c4>
   13824:	ldr	r3, [pc, #56]	; 13864 <__assert_fail@plt+0x25f4>
   13828:	ldr	r2, [r3]
   1382c:	ldr	r3, [fp, #-12]
   13830:	str	r2, [r3]
   13834:	ldr	r3, [fp, #-16]
   13838:	cmp	r3, #0
   1383c:	beq	13850 <__assert_fail@plt+0x25e0>
   13840:	ldr	r3, [pc, #32]	; 13868 <__assert_fail@plt+0x25f8>
   13844:	ldr	r2, [r3]
   13848:	ldr	r3, [fp, #-16]
   1384c:	str	r2, [r3]
   13850:	nop			; (mov r0, r0)
   13854:	add	sp, fp, #0
   13858:	pop	{fp}		; (ldr fp, [sp], #4)
   1385c:	bx	lr
   13860:	andeq	r2, r5, ip, lsr #2
   13864:	andeq	r2, r5, r0, lsr r1
   13868:	andeq	r2, r5, r4, lsr r1
   1386c:	push	{fp}		; (str fp, [sp, #-4]!)
   13870:	add	fp, sp, #0
   13874:	sub	sp, sp, #20
   13878:	str	r0, [fp, #-8]
   1387c:	str	r1, [fp, #-12]
   13880:	str	r2, [fp, #-16]
   13884:	ldr	r3, [fp, #-8]
   13888:	cmp	r3, #0
   1388c:	bne	13898 <__assert_fail@plt+0x2628>
   13890:	ldr	r3, [pc, #92]	; 138f4 <__assert_fail@plt+0x2684>
   13894:	str	r3, [fp, #-8]
   13898:	ldr	r3, [fp, #-12]
   1389c:	cmp	r3, #0
   138a0:	bne	138ac <__assert_fail@plt+0x263c>
   138a4:	ldr	r3, [pc, #76]	; 138f8 <__assert_fail@plt+0x2688>
   138a8:	str	r3, [fp, #-12]
   138ac:	ldr	r3, [fp, #-16]
   138b0:	cmp	r3, #0
   138b4:	bne	138c0 <__assert_fail@plt+0x2650>
   138b8:	ldr	r3, [pc, #60]	; 138fc <__assert_fail@plt+0x268c>
   138bc:	str	r3, [fp, #-16]
   138c0:	ldr	r2, [pc, #56]	; 13900 <__assert_fail@plt+0x2690>
   138c4:	ldr	r3, [fp, #-8]
   138c8:	str	r3, [r2]
   138cc:	ldr	r2, [pc, #48]	; 13904 <__assert_fail@plt+0x2694>
   138d0:	ldr	r3, [fp, #-12]
   138d4:	str	r3, [r2]
   138d8:	ldr	r2, [pc, #40]	; 13908 <__assert_fail@plt+0x2698>
   138dc:	ldr	r3, [fp, #-16]
   138e0:	str	r3, [r2]
   138e4:	nop			; (mov r0, r0)
   138e8:	add	sp, fp, #0
   138ec:	pop	{fp}		; (ldr fp, [sp], #4)
   138f0:	bx	lr
   138f4:	strdeq	r3, [r1], -r4
   138f8:	andeq	r3, r1, ip, ror #14
   138fc:			; <UNDEFINED> instruction: 0x000137bc
   13900:	andeq	r2, r5, ip, lsr #2
   13904:	andeq	r2, r5, r0, lsr r1
   13908:	andeq	r2, r5, r4, lsr r1
   1390c:	push	{fp, lr}
   13910:	add	fp, sp, #4
   13914:	sub	sp, sp, #8
   13918:	str	r0, [fp, #-8]
   1391c:	ldr	r3, [pc, #32]	; 13944 <__assert_fail@plt+0x26d4>
   13920:	ldr	r3, [r3]
   13924:	ldr	r2, [fp, #-8]
   13928:	lsl	r2, r2, #2
   1392c:	mov	r0, r2
   13930:	blx	r3
   13934:	mov	r3, r0
   13938:	mov	r0, r3
   1393c:	sub	sp, fp, #4
   13940:	pop	{fp, pc}
   13944:	andeq	r2, r5, ip, lsr #2
   13948:	push	{fp, lr}
   1394c:	add	fp, sp, #4
   13950:	sub	sp, sp, #16
   13954:	str	r0, [fp, #-8]
   13958:	str	r1, [fp, #-12]
   1395c:	str	r2, [fp, #-16]
   13960:	ldr	r3, [fp, #-16]
   13964:	cmp	r3, #0
   13968:	bgt	13980 <__assert_fail@plt+0x2710>
   1396c:	ldr	r3, [pc, #60]	; 139b0 <__assert_fail@plt+0x2740>
   13970:	mov	r2, #368	; 0x170
   13974:	ldr	r1, [pc, #56]	; 139b4 <__assert_fail@plt+0x2744>
   13978:	ldr	r0, [pc, #56]	; 139b8 <__assert_fail@plt+0x2748>
   1397c:	bl	11270 <__assert_fail@plt>
   13980:	ldr	r3, [pc, #52]	; 139bc <__assert_fail@plt+0x274c>
   13984:	ldr	r3, [r3]
   13988:	ldr	r2, [fp, #-12]
   1398c:	lsl	r1, r2, #2
   13990:	ldr	r2, [fp, #-16]
   13994:	lsl	r2, r2, #2
   13998:	ldr	r0, [fp, #-8]
   1399c:	blx	r3
   139a0:	mov	r3, r0
   139a4:	mov	r0, r3
   139a8:	sub	sp, fp, #4
   139ac:	pop	{fp, pc}
   139b0:	andeq	r0, r4, ip, ror #24
   139b4:	andeq	r0, r4, r8, asr #12
   139b8:	andeq	r0, r4, r8, asr r6
   139bc:	andeq	r2, r5, r0, lsr r1
   139c0:	push	{fp, lr}
   139c4:	add	fp, sp, #4
   139c8:	sub	sp, sp, #8
   139cc:	str	r0, [fp, #-8]
   139d0:	str	r1, [fp, #-12]
   139d4:	ldr	r3, [pc, #32]	; 139fc <__assert_fail@plt+0x278c>
   139d8:	ldr	r3, [r3]
   139dc:	ldr	r2, [fp, #-12]
   139e0:	lsl	r2, r2, #2
   139e4:	mov	r1, r2
   139e8:	ldr	r0, [fp, #-8]
   139ec:	blx	r3
   139f0:	nop			; (mov r0, r0)
   139f4:	sub	sp, fp, #4
   139f8:	pop	{fp, pc}
   139fc:	andeq	r2, r5, r4, lsr r1
   13a00:	push	{fp}		; (str fp, [sp, #-4]!)
   13a04:	add	fp, sp, #0
   13a08:	sub	sp, sp, #28
   13a0c:	str	r0, [fp, #-16]
   13a10:	str	r1, [fp, #-20]	; 0xffffffec
   13a14:	str	r2, [fp, #-24]	; 0xffffffe8
   13a18:	mov	r3, #0
   13a1c:	str	r3, [fp, #-8]
   13a20:	b	13a58 <__assert_fail@plt+0x27e8>
   13a24:	ldr	r3, [fp, #-8]
   13a28:	lsl	r3, r3, #2
   13a2c:	ldr	r2, [fp, #-16]
   13a30:	add	r3, r2, r3
   13a34:	ldr	r2, [fp, #-8]
   13a38:	lsl	r2, r2, #2
   13a3c:	ldr	r1, [fp, #-20]	; 0xffffffec
   13a40:	add	r2, r1, r2
   13a44:	ldr	r2, [r2]
   13a48:	str	r2, [r3]
   13a4c:	ldr	r3, [fp, #-8]
   13a50:	add	r3, r3, #1
   13a54:	str	r3, [fp, #-8]
   13a58:	ldr	r2, [fp, #-8]
   13a5c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13a60:	cmp	r2, r3
   13a64:	blt	13a24 <__assert_fail@plt+0x27b4>
   13a68:	nop			; (mov r0, r0)
   13a6c:	add	sp, fp, #0
   13a70:	pop	{fp}		; (ldr fp, [sp], #4)
   13a74:	bx	lr
   13a78:	push	{fp}		; (str fp, [sp, #-4]!)
   13a7c:	add	fp, sp, #0
   13a80:	sub	sp, sp, #20
   13a84:	str	r0, [fp, #-8]
   13a88:	str	r1, [fp, #-12]
   13a8c:	str	r2, [fp, #-16]
   13a90:	b	13abc <__assert_fail@plt+0x284c>
   13a94:	ldr	r3, [fp, #-16]
   13a98:	lsl	r3, r3, #2
   13a9c:	ldr	r2, [fp, #-8]
   13aa0:	add	r3, r2, r3
   13aa4:	ldr	r2, [fp, #-16]
   13aa8:	lsl	r2, r2, #2
   13aac:	ldr	r1, [fp, #-12]
   13ab0:	add	r2, r1, r2
   13ab4:	ldr	r2, [r2]
   13ab8:	str	r2, [r3]
   13abc:	ldr	r3, [fp, #-16]
   13ac0:	sub	r3, r3, #1
   13ac4:	str	r3, [fp, #-16]
   13ac8:	ldr	r3, [fp, #-16]
   13acc:	cmp	r3, #0
   13ad0:	bge	13a94 <__assert_fail@plt+0x2824>
   13ad4:	nop			; (mov r0, r0)
   13ad8:	add	sp, fp, #0
   13adc:	pop	{fp}		; (ldr fp, [sp], #4)
   13ae0:	bx	lr
   13ae4:	push	{fp}		; (str fp, [sp, #-4]!)
   13ae8:	add	fp, sp, #0
   13aec:	sub	sp, sp, #20
   13af0:	str	r0, [fp, #-8]
   13af4:	str	r1, [fp, #-12]
   13af8:	str	r2, [fp, #-16]
   13afc:	b	13b70 <__assert_fail@plt+0x2900>
   13b00:	ldr	r3, [fp, #-16]
   13b04:	lsl	r3, r3, #2
   13b08:	ldr	r2, [fp, #-8]
   13b0c:	add	r3, r2, r3
   13b10:	ldr	r2, [r3]
   13b14:	ldr	r3, [fp, #-16]
   13b18:	lsl	r3, r3, #2
   13b1c:	ldr	r1, [fp, #-12]
   13b20:	add	r3, r1, r3
   13b24:	ldr	r3, [r3]
   13b28:	cmp	r2, r3
   13b2c:	beq	13b70 <__assert_fail@plt+0x2900>
   13b30:	ldr	r3, [fp, #-16]
   13b34:	lsl	r3, r3, #2
   13b38:	ldr	r2, [fp, #-8]
   13b3c:	add	r3, r2, r3
   13b40:	ldr	r2, [r3]
   13b44:	ldr	r3, [fp, #-16]
   13b48:	lsl	r3, r3, #2
   13b4c:	ldr	r1, [fp, #-12]
   13b50:	add	r3, r1, r3
   13b54:	ldr	r3, [r3]
   13b58:	cmp	r2, r3
   13b5c:	bls	13b68 <__assert_fail@plt+0x28f8>
   13b60:	mov	r3, #1
   13b64:	b	13b8c <__assert_fail@plt+0x291c>
   13b68:	mvn	r3, #0
   13b6c:	b	13b8c <__assert_fail@plt+0x291c>
   13b70:	ldr	r3, [fp, #-16]
   13b74:	sub	r3, r3, #1
   13b78:	str	r3, [fp, #-16]
   13b7c:	ldr	r3, [fp, #-16]
   13b80:	cmp	r3, #0
   13b84:	bge	13b00 <__assert_fail@plt+0x2890>
   13b88:	mov	r3, #0
   13b8c:	mov	r0, r3
   13b90:	add	sp, fp, #0
   13b94:	pop	{fp}		; (ldr fp, [sp], #4)
   13b98:	bx	lr
   13b9c:	push	{fp, lr}
   13ba0:	add	fp, sp, #4
   13ba4:	sub	sp, sp, #16
   13ba8:	str	r0, [fp, #-8]
   13bac:	str	r1, [fp, #-12]
   13bb0:	str	r2, [fp, #-16]
   13bb4:	str	r3, [fp, #-20]	; 0xffffffec
   13bb8:	ldr	r2, [fp, #-12]
   13bbc:	ldr	r3, [fp, #-20]	; 0xffffffec
   13bc0:	cmp	r2, r3
   13bc4:	beq	13be8 <__assert_fail@plt+0x2978>
   13bc8:	ldr	r2, [fp, #-12]
   13bcc:	ldr	r3, [fp, #-20]	; 0xffffffec
   13bd0:	cmp	r2, r3
   13bd4:	bge	13be0 <__assert_fail@plt+0x2970>
   13bd8:	mvn	r3, #0
   13bdc:	b	13bfc <__assert_fail@plt+0x298c>
   13be0:	mov	r3, #1
   13be4:	b	13bfc <__assert_fail@plt+0x298c>
   13be8:	ldr	r2, [fp, #-12]
   13bec:	ldr	r1, [fp, #-16]
   13bf0:	ldr	r0, [fp, #-8]
   13bf4:	bl	13ae4 <__assert_fail@plt+0x2874>
   13bf8:	mov	r3, r0
   13bfc:	mov	r0, r3
   13c00:	sub	sp, fp, #4
   13c04:	pop	{fp, pc}
   13c08:	push	{fp}		; (str fp, [sp, #-4]!)
   13c0c:	add	fp, sp, #0
   13c10:	sub	sp, sp, #12
   13c14:	str	r0, [fp, #-8]
   13c18:	str	r1, [fp, #-12]
   13c1c:	b	13c2c <__assert_fail@plt+0x29bc>
   13c20:	ldr	r3, [fp, #-12]
   13c24:	sub	r3, r3, #1
   13c28:	str	r3, [fp, #-12]
   13c2c:	ldr	r3, [fp, #-12]
   13c30:	cmp	r3, #0
   13c34:	ble	13c58 <__assert_fail@plt+0x29e8>
   13c38:	ldr	r3, [fp, #-12]
   13c3c:	sub	r3, r3, #-1073741823	; 0xc0000001
   13c40:	lsl	r3, r3, #2
   13c44:	ldr	r2, [fp, #-8]
   13c48:	add	r3, r2, r3
   13c4c:	ldr	r3, [r3]
   13c50:	cmp	r3, #0
   13c54:	beq	13c20 <__assert_fail@plt+0x29b0>
   13c58:	ldr	r3, [fp, #-12]
   13c5c:	mov	r0, r3
   13c60:	add	sp, fp, #0
   13c64:	pop	{fp}		; (ldr fp, [sp], #4)
   13c68:	bx	lr
   13c6c:	push	{fp, lr}
   13c70:	add	fp, sp, #4
   13c74:	sub	sp, sp, #8
   13c78:	str	r0, [fp, #-8]
   13c7c:	str	r1, [fp, #-12]
   13c80:	ldr	r1, [fp, #-12]
   13c84:	ldr	r0, [fp, #-8]
   13c88:	bl	13c08 <__assert_fail@plt+0x2998>
   13c8c:	mov	r3, r0
   13c90:	cmp	r3, #0
   13c94:	moveq	r3, #1
   13c98:	movne	r3, #0
   13c9c:	uxtb	r3, r3
   13ca0:	mov	r0, r3
   13ca4:	sub	sp, fp, #4
   13ca8:	pop	{fp, pc}
   13cac:	push	{fp}		; (str fp, [sp, #-4]!)
   13cb0:	add	fp, sp, #0
   13cb4:	sub	sp, sp, #12
   13cb8:	str	r0, [fp, #-8]
   13cbc:	str	r1, [fp, #-12]
   13cc0:	b	13cdc <__assert_fail@plt+0x2a6c>
   13cc4:	ldr	r3, [fp, #-12]
   13cc8:	lsl	r3, r3, #2
   13ccc:	ldr	r2, [fp, #-8]
   13cd0:	add	r3, r2, r3
   13cd4:	mov	r2, #0
   13cd8:	str	r2, [r3]
   13cdc:	ldr	r3, [fp, #-12]
   13ce0:	sub	r3, r3, #1
   13ce4:	str	r3, [fp, #-12]
   13ce8:	ldr	r3, [fp, #-12]
   13cec:	cmp	r3, #0
   13cf0:	bge	13cc4 <__assert_fail@plt+0x2a54>
   13cf4:	nop			; (mov r0, r0)
   13cf8:	add	sp, fp, #0
   13cfc:	pop	{fp}		; (ldr fp, [sp], #4)
   13d00:	bx	lr
   13d04:	push	{fp, lr}
   13d08:	add	fp, sp, #4
   13d0c:	sub	sp, sp, #24
   13d10:	str	r0, [fp, #-16]
   13d14:	str	r1, [fp, #-20]	; 0xffffffec
   13d18:	str	r2, [fp, #-24]	; 0xffffffe8
   13d1c:	str	r3, [fp, #-28]	; 0xffffffe4
   13d20:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13d24:	cmp	r3, #0
   13d28:	bgt	13d40 <__assert_fail@plt+0x2ad0>
   13d2c:	ldr	r3, [pc, #148]	; 13dc8 <__assert_fail@plt+0x2b58>
   13d30:	ldr	r2, [pc, #148]	; 13dcc <__assert_fail@plt+0x2b5c>
   13d34:	ldr	r1, [pc, #148]	; 13dd0 <__assert_fail@plt+0x2b60>
   13d38:	ldr	r0, [pc, #148]	; 13dd4 <__assert_fail@plt+0x2b64>
   13d3c:	bl	11270 <__assert_fail@plt>
   13d40:	mov	r3, #0
   13d44:	str	r3, [fp, #-8]
   13d48:	ldr	r3, [fp, #-8]
   13d4c:	lsl	r3, r3, #2
   13d50:	ldr	r2, [fp, #-20]	; 0xffffffec
   13d54:	add	r3, r2, r3
   13d58:	ldr	r2, [r3]
   13d5c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13d60:	add	r3, r2, r3
   13d64:	str	r3, [fp, #-12]
   13d68:	ldr	r2, [fp, #-12]
   13d6c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13d70:	cmp	r2, r3
   13d74:	movcc	r3, #1
   13d78:	movcs	r3, #0
   13d7c:	uxtb	r3, r3
   13d80:	str	r3, [fp, #-28]	; 0xffffffe4
   13d84:	ldr	r3, [fp, #-8]
   13d88:	lsl	r3, r3, #2
   13d8c:	ldr	r2, [fp, #-16]
   13d90:	add	r3, r2, r3
   13d94:	ldr	r2, [fp, #-12]
   13d98:	str	r2, [r3]
   13d9c:	ldr	r3, [fp, #-8]
   13da0:	add	r3, r3, #1
   13da4:	str	r3, [fp, #-8]
   13da8:	ldr	r2, [fp, #-8]
   13dac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13db0:	cmp	r2, r3
   13db4:	blt	13d48 <__assert_fail@plt+0x2ad8>
   13db8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   13dbc:	mov	r0, r3
   13dc0:	sub	sp, fp, #4
   13dc4:	pop	{fp, pc}
   13dc8:	andeq	r0, r4, r0, lsl #25
   13dcc:			; <UNDEFINED> instruction: 0x000001ba
   13dd0:	andeq	r0, r4, r8, asr #12
   13dd4:	andeq	r0, r4, r4, asr #13
   13dd8:	push	{fp}		; (str fp, [sp, #-4]!)
   13ddc:	add	fp, sp, #0
   13de0:	sub	sp, sp, #44	; 0x2c
   13de4:	str	r0, [fp, #-32]	; 0xffffffe0
   13de8:	str	r1, [fp, #-36]	; 0xffffffdc
   13dec:	str	r2, [fp, #-40]	; 0xffffffd8
   13df0:	str	r3, [fp, #-44]	; 0xffffffd4
   13df4:	mov	r3, #0
   13df8:	str	r3, [fp, #-8]
   13dfc:	mov	r3, #0
   13e00:	str	r3, [fp, #-12]
   13e04:	b	13ec0 <__assert_fail@plt+0x2c50>
   13e08:	ldr	r3, [fp, #-8]
   13e0c:	lsl	r3, r3, #2
   13e10:	ldr	r2, [fp, #-36]	; 0xffffffdc
   13e14:	add	r3, r2, r3
   13e18:	ldr	r3, [r3]
   13e1c:	str	r3, [fp, #-16]
   13e20:	ldr	r3, [fp, #-8]
   13e24:	lsl	r3, r3, #2
   13e28:	ldr	r2, [fp, #-40]	; 0xffffffd8
   13e2c:	add	r3, r2, r3
   13e30:	ldr	r3, [r3]
   13e34:	str	r3, [fp, #-20]	; 0xffffffec
   13e38:	ldr	r2, [fp, #-16]
   13e3c:	ldr	r3, [fp, #-12]
   13e40:	add	r3, r2, r3
   13e44:	str	r3, [fp, #-24]	; 0xffffffe8
   13e48:	ldr	r2, [fp, #-24]	; 0xffffffe8
   13e4c:	ldr	r3, [fp, #-12]
   13e50:	cmp	r2, r3
   13e54:	movcc	r3, #1
   13e58:	movcs	r3, #0
   13e5c:	uxtb	r3, r3
   13e60:	str	r3, [fp, #-12]
   13e64:	ldr	r2, [fp, #-24]	; 0xffffffe8
   13e68:	ldr	r3, [fp, #-20]	; 0xffffffec
   13e6c:	add	r3, r2, r3
   13e70:	str	r3, [fp, #-24]	; 0xffffffe8
   13e74:	ldr	r2, [fp, #-24]	; 0xffffffe8
   13e78:	ldr	r3, [fp, #-20]	; 0xffffffec
   13e7c:	cmp	r2, r3
   13e80:	movcc	r3, #1
   13e84:	movcs	r3, #0
   13e88:	uxtb	r3, r3
   13e8c:	mov	r2, r3
   13e90:	ldr	r3, [fp, #-12]
   13e94:	add	r3, r3, r2
   13e98:	str	r3, [fp, #-12]
   13e9c:	ldr	r3, [fp, #-8]
   13ea0:	lsl	r3, r3, #2
   13ea4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13ea8:	add	r3, r2, r3
   13eac:	ldr	r2, [fp, #-24]	; 0xffffffe8
   13eb0:	str	r2, [r3]
   13eb4:	ldr	r3, [fp, #-8]
   13eb8:	add	r3, r3, #1
   13ebc:	str	r3, [fp, #-8]
   13ec0:	ldr	r2, [fp, #-8]
   13ec4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   13ec8:	cmp	r2, r3
   13ecc:	blt	13e08 <__assert_fail@plt+0x2b98>
   13ed0:	ldr	r3, [fp, #-12]
   13ed4:	mov	r0, r3
   13ed8:	add	sp, fp, #0
   13edc:	pop	{fp}		; (ldr fp, [sp], #4)
   13ee0:	bx	lr
   13ee4:	push	{fp, lr}
   13ee8:	add	fp, sp, #4
   13eec:	sub	sp, sp, #24
   13ef0:	str	r0, [fp, #-16]
   13ef4:	str	r1, [fp, #-20]	; 0xffffffec
   13ef8:	str	r2, [fp, #-24]	; 0xffffffe8
   13efc:	str	r3, [fp, #-28]	; 0xffffffe4
   13f00:	ldr	r2, [fp, #-24]	; 0xffffffe8
   13f04:	ldr	r3, [fp, #4]
   13f08:	cmp	r2, r3
   13f0c:	bge	13f24 <__assert_fail@plt+0x2cb4>
   13f10:	ldr	r3, [pc, #124]	; 13f94 <__assert_fail@plt+0x2d24>
   13f14:	mov	r2, #480	; 0x1e0
   13f18:	ldr	r1, [pc, #120]	; 13f98 <__assert_fail@plt+0x2d28>
   13f1c:	ldr	r0, [pc, #120]	; 13f9c <__assert_fail@plt+0x2d2c>
   13f20:	bl	11270 <__assert_fail@plt>
   13f24:	ldr	r3, [fp, #4]
   13f28:	ldr	r2, [fp, #-28]	; 0xffffffe4
   13f2c:	ldr	r1, [fp, #-20]	; 0xffffffec
   13f30:	ldr	r0, [fp, #-16]
   13f34:	bl	13dd8 <__assert_fail@plt+0x2b68>
   13f38:	str	r0, [fp, #-8]
   13f3c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   13f40:	ldr	r3, [fp, #4]
   13f44:	cmp	r2, r3
   13f48:	ble	13f84 <__assert_fail@plt+0x2d14>
   13f4c:	ldr	r3, [fp, #4]
   13f50:	lsl	r3, r3, #2
   13f54:	ldr	r2, [fp, #-16]
   13f58:	add	r0, r2, r3
   13f5c:	ldr	r3, [fp, #4]
   13f60:	lsl	r3, r3, #2
   13f64:	ldr	r2, [fp, #-20]	; 0xffffffec
   13f68:	add	r1, r2, r3
   13f6c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   13f70:	ldr	r3, [fp, #4]
   13f74:	sub	r2, r2, r3
   13f78:	ldr	r3, [fp, #-8]
   13f7c:	bl	13d04 <__assert_fail@plt+0x2a94>
   13f80:	str	r0, [fp, #-8]
   13f84:	ldr	r3, [fp, #-8]
   13f88:	mov	r0, r3
   13f8c:	sub	sp, fp, #4
   13f90:	pop	{fp, pc}
   13f94:	andeq	r0, r4, ip, lsl #25
   13f98:	andeq	r0, r4, r8, asr #12
   13f9c:	andeq	r0, r4, ip, asr #13
   13fa0:	push	{fp, lr}
   13fa4:	add	fp, sp, #4
   13fa8:	sub	sp, sp, #32
   13fac:	str	r0, [fp, #-24]	; 0xffffffe8
   13fb0:	str	r1, [fp, #-28]	; 0xffffffe4
   13fb4:	str	r2, [fp, #-32]	; 0xffffffe0
   13fb8:	str	r3, [fp, #-36]	; 0xffffffdc
   13fbc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13fc0:	cmp	r3, #0
   13fc4:	bgt	13fdc <__assert_fail@plt+0x2d6c>
   13fc8:	ldr	r3, [pc, #156]	; 1406c <__assert_fail@plt+0x2dfc>
   13fcc:	ldr	r2, [pc, #156]	; 14070 <__assert_fail@plt+0x2e00>
   13fd0:	ldr	r1, [pc, #156]	; 14074 <__assert_fail@plt+0x2e04>
   13fd4:	ldr	r0, [pc, #156]	; 14078 <__assert_fail@plt+0x2e08>
   13fd8:	bl	11270 <__assert_fail@plt>
   13fdc:	mov	r3, #0
   13fe0:	str	r3, [fp, #-8]
   13fe4:	ldr	r3, [fp, #-8]
   13fe8:	lsl	r3, r3, #2
   13fec:	ldr	r2, [fp, #-28]	; 0xffffffe4
   13ff0:	add	r3, r2, r3
   13ff4:	ldr	r3, [r3]
   13ff8:	str	r3, [fp, #-12]
   13ffc:	ldr	r2, [fp, #-12]
   14000:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14004:	cmp	r2, r3
   14008:	movcc	r3, #1
   1400c:	movcs	r3, #0
   14010:	uxtb	r3, r3
   14014:	str	r3, [fp, #-16]
   14018:	ldr	r3, [fp, #-8]
   1401c:	lsl	r3, r3, #2
   14020:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14024:	add	r3, r2, r3
   14028:	ldr	r1, [fp, #-12]
   1402c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   14030:	sub	r2, r1, r2
   14034:	str	r2, [r3]
   14038:	ldr	r3, [fp, #-16]
   1403c:	str	r3, [fp, #-36]	; 0xffffffdc
   14040:	ldr	r3, [fp, #-8]
   14044:	add	r3, r3, #1
   14048:	str	r3, [fp, #-8]
   1404c:	ldr	r2, [fp, #-8]
   14050:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14054:	cmp	r2, r3
   14058:	blt	13fe4 <__assert_fail@plt+0x2d74>
   1405c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14060:	mov	r0, r3
   14064:	sub	sp, fp, #4
   14068:	pop	{fp, pc}
   1406c:	muleq	r4, r4, ip
   14070:	andeq	r0, r0, sp, ror #3
   14074:	andeq	r0, r4, r8, asr #12
   14078:	andeq	r0, r4, r4, asr #13
   1407c:	push	{fp}		; (str fp, [sp, #-4]!)
   14080:	add	fp, sp, #0
   14084:	sub	sp, sp, #36	; 0x24
   14088:	str	r0, [fp, #-24]	; 0xffffffe8
   1408c:	str	r1, [fp, #-28]	; 0xffffffe4
   14090:	str	r2, [fp, #-32]	; 0xffffffe0
   14094:	str	r3, [fp, #-36]	; 0xffffffdc
   14098:	mov	r3, #0
   1409c:	str	r3, [fp, #-8]
   140a0:	mov	r3, #0
   140a4:	str	r3, [fp, #-12]
   140a8:	b	1415c <__assert_fail@plt+0x2eec>
   140ac:	ldr	r3, [fp, #-8]
   140b0:	lsl	r3, r3, #2
   140b4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   140b8:	add	r3, r2, r3
   140bc:	ldr	r3, [r3]
   140c0:	str	r3, [fp, #-16]
   140c4:	ldr	r3, [fp, #-8]
   140c8:	lsl	r3, r3, #2
   140cc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   140d0:	add	r3, r2, r3
   140d4:	ldr	r3, [r3]
   140d8:	str	r3, [fp, #-20]	; 0xffffffec
   140dc:	ldr	r2, [fp, #-20]	; 0xffffffec
   140e0:	ldr	r3, [fp, #-12]
   140e4:	add	r3, r2, r3
   140e8:	str	r3, [fp, #-20]	; 0xffffffec
   140ec:	ldr	r2, [fp, #-20]	; 0xffffffec
   140f0:	ldr	r3, [fp, #-12]
   140f4:	cmp	r2, r3
   140f8:	movcc	r3, #1
   140fc:	movcs	r3, #0
   14100:	uxtb	r3, r3
   14104:	str	r3, [fp, #-12]
   14108:	ldr	r2, [fp, #-16]
   1410c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14110:	cmp	r2, r3
   14114:	movcc	r3, #1
   14118:	movcs	r3, #0
   1411c:	uxtb	r3, r3
   14120:	mov	r2, r3
   14124:	ldr	r3, [fp, #-12]
   14128:	add	r3, r3, r2
   1412c:	str	r3, [fp, #-12]
   14130:	ldr	r3, [fp, #-8]
   14134:	lsl	r3, r3, #2
   14138:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1413c:	add	r3, r2, r3
   14140:	ldr	r1, [fp, #-16]
   14144:	ldr	r2, [fp, #-20]	; 0xffffffec
   14148:	sub	r2, r1, r2
   1414c:	str	r2, [r3]
   14150:	ldr	r3, [fp, #-8]
   14154:	add	r3, r3, #1
   14158:	str	r3, [fp, #-8]
   1415c:	ldr	r2, [fp, #-8]
   14160:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14164:	cmp	r2, r3
   14168:	blt	140ac <__assert_fail@plt+0x2e3c>
   1416c:	ldr	r3, [fp, #-12]
   14170:	mov	r0, r3
   14174:	add	sp, fp, #0
   14178:	pop	{fp}		; (ldr fp, [sp], #4)
   1417c:	bx	lr
   14180:	push	{fp, lr}
   14184:	add	fp, sp, #4
   14188:	sub	sp, sp, #24
   1418c:	str	r0, [fp, #-16]
   14190:	str	r1, [fp, #-20]	; 0xffffffec
   14194:	str	r2, [fp, #-24]	; 0xffffffe8
   14198:	str	r3, [fp, #-28]	; 0xffffffe4
   1419c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   141a0:	ldr	r3, [fp, #4]
   141a4:	cmp	r2, r3
   141a8:	bge	141c0 <__assert_fail@plt+0x2f50>
   141ac:	ldr	r3, [pc, #124]	; 14230 <__assert_fail@plt+0x2fc0>
   141b0:	mov	r2, #532	; 0x214
   141b4:	ldr	r1, [pc, #120]	; 14234 <__assert_fail@plt+0x2fc4>
   141b8:	ldr	r0, [pc, #120]	; 14238 <__assert_fail@plt+0x2fc8>
   141bc:	bl	11270 <__assert_fail@plt>
   141c0:	ldr	r3, [fp, #4]
   141c4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   141c8:	ldr	r1, [fp, #-20]	; 0xffffffec
   141cc:	ldr	r0, [fp, #-16]
   141d0:	bl	1407c <__assert_fail@plt+0x2e0c>
   141d4:	str	r0, [fp, #-8]
   141d8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   141dc:	ldr	r3, [fp, #4]
   141e0:	cmp	r2, r3
   141e4:	ble	14220 <__assert_fail@plt+0x2fb0>
   141e8:	ldr	r3, [fp, #4]
   141ec:	lsl	r3, r3, #2
   141f0:	ldr	r2, [fp, #-16]
   141f4:	add	r0, r2, r3
   141f8:	ldr	r3, [fp, #4]
   141fc:	lsl	r3, r3, #2
   14200:	ldr	r2, [fp, #-20]	; 0xffffffec
   14204:	add	r1, r2, r3
   14208:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1420c:	ldr	r3, [fp, #4]
   14210:	sub	r2, r2, r3
   14214:	ldr	r3, [fp, #-8]
   14218:	bl	13fa0 <__assert_fail@plt+0x2d30>
   1421c:	str	r0, [fp, #-8]
   14220:	ldr	r3, [fp, #-8]
   14224:	mov	r0, r3
   14228:	sub	sp, fp, #4
   1422c:	pop	{fp, pc}
   14230:	andeq	r0, r4, r0, lsr #25
   14234:	andeq	r0, r4, r8, asr #12
   14238:	andeq	r0, r4, ip, asr #13
   1423c:	push	{fp, lr}
   14240:	add	fp, sp, #4
   14244:	sub	sp, sp, #80	; 0x50
   14248:	str	r0, [fp, #-72]	; 0xffffffb8
   1424c:	str	r1, [fp, #-76]	; 0xffffffb4
   14250:	str	r2, [fp, #-80]	; 0xffffffb0
   14254:	str	r3, [fp, #-84]	; 0xffffffac
   14258:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1425c:	cmp	r3, #0
   14260:	bgt	14278 <__assert_fail@plt+0x3008>
   14264:	ldr	r3, [pc, #400]	; 143fc <__assert_fail@plt+0x318c>
   14268:	ldr	r2, [pc, #400]	; 14400 <__assert_fail@plt+0x3190>
   1426c:	ldr	r1, [pc, #400]	; 14404 <__assert_fail@plt+0x3194>
   14270:	ldr	r0, [pc, #400]	; 14408 <__assert_fail@plt+0x3198>
   14274:	bl	11270 <__assert_fail@plt>
   14278:	mov	r3, #0
   1427c:	str	r3, [fp, #-8]
   14280:	ldr	r3, [fp, #-76]	; 0xffffffb4
   14284:	add	r2, r3, #4
   14288:	str	r2, [fp, #-76]	; 0xffffffb4
   1428c:	ldr	r3, [r3]
   14290:	str	r3, [fp, #-16]
   14294:	mov	r3, #32
   14298:	str	r3, [fp, #-20]	; 0xffffffec
   1429c:	ldr	r3, [fp, #-16]
   142a0:	str	r3, [fp, #-24]	; 0xffffffe8
   142a4:	ldr	r3, [fp, #-84]	; 0xffffffac
   142a8:	str	r3, [fp, #-28]	; 0xffffffe4
   142ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   142b0:	uxth	r3, r3
   142b4:	str	r3, [fp, #-32]	; 0xffffffe0
   142b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   142bc:	lsr	r3, r3, #16
   142c0:	str	r3, [fp, #-36]	; 0xffffffdc
   142c4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   142c8:	uxth	r3, r3
   142cc:	str	r3, [fp, #-40]	; 0xffffffd8
   142d0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   142d4:	lsr	r3, r3, #16
   142d8:	str	r3, [fp, #-44]	; 0xffffffd4
   142dc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   142e0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   142e4:	mul	r3, r2, r3
   142e8:	str	r3, [fp, #-48]	; 0xffffffd0
   142ec:	ldr	r3, [fp, #-32]	; 0xffffffe0
   142f0:	ldr	r2, [fp, #-44]	; 0xffffffd4
   142f4:	mul	r3, r2, r3
   142f8:	str	r3, [fp, #-52]	; 0xffffffcc
   142fc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14300:	ldr	r2, [fp, #-40]	; 0xffffffd8
   14304:	mul	r3, r2, r3
   14308:	str	r3, [fp, #-56]	; 0xffffffc8
   1430c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14310:	ldr	r2, [fp, #-44]	; 0xffffffd4
   14314:	mul	r3, r2, r3
   14318:	str	r3, [fp, #-12]
   1431c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   14320:	lsr	r3, r3, #16
   14324:	ldr	r2, [fp, #-52]	; 0xffffffcc
   14328:	add	r3, r2, r3
   1432c:	str	r3, [fp, #-52]	; 0xffffffcc
   14330:	ldr	r2, [fp, #-52]	; 0xffffffcc
   14334:	ldr	r3, [fp, #-56]	; 0xffffffc8
   14338:	add	r3, r2, r3
   1433c:	str	r3, [fp, #-52]	; 0xffffffcc
   14340:	ldr	r2, [fp, #-52]	; 0xffffffcc
   14344:	ldr	r3, [fp, #-56]	; 0xffffffc8
   14348:	cmp	r2, r3
   1434c:	bcs	1435c <__assert_fail@plt+0x30ec>
   14350:	ldr	r3, [fp, #-12]
   14354:	add	r3, r3, #65536	; 0x10000
   14358:	str	r3, [fp, #-12]
   1435c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   14360:	lsr	r2, r3, #16
   14364:	ldr	r3, [fp, #-12]
   14368:	add	r3, r2, r3
   1436c:	str	r3, [fp, #-60]	; 0xffffffc4
   14370:	ldr	r3, [fp, #-52]	; 0xffffffcc
   14374:	lsl	r2, r3, #16
   14378:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1437c:	uxth	r3, r3
   14380:	add	r3, r2, r3
   14384:	str	r3, [fp, #-64]	; 0xffffffc0
   14388:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1438c:	ldr	r3, [fp, #-8]
   14390:	add	r3, r2, r3
   14394:	str	r3, [fp, #-64]	; 0xffffffc0
   14398:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1439c:	ldr	r3, [fp, #-8]
   143a0:	cmp	r2, r3
   143a4:	movcc	r3, #1
   143a8:	movcs	r3, #0
   143ac:	uxtb	r3, r3
   143b0:	mov	r2, r3
   143b4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   143b8:	add	r3, r2, r3
   143bc:	str	r3, [fp, #-8]
   143c0:	ldr	r3, [fp, #-72]	; 0xffffffb8
   143c4:	add	r2, r3, #4
   143c8:	str	r2, [fp, #-72]	; 0xffffffb8
   143cc:	ldr	r2, [fp, #-64]	; 0xffffffc0
   143d0:	str	r2, [r3]
   143d4:	ldr	r3, [fp, #-80]	; 0xffffffb0
   143d8:	sub	r3, r3, #1
   143dc:	str	r3, [fp, #-80]	; 0xffffffb0
   143e0:	ldr	r3, [fp, #-80]	; 0xffffffb0
   143e4:	cmp	r3, #0
   143e8:	bne	14280 <__assert_fail@plt+0x3010>
   143ec:	ldr	r3, [fp, #-8]
   143f0:	mov	r0, r3
   143f4:	sub	sp, fp, #4
   143f8:	pop	{fp, pc}
   143fc:	andeq	r0, r4, r8, lsr #25
   14400:	andeq	r0, r0, r1, lsr #4
   14404:	andeq	r0, r4, r8, asr #12
   14408:	ldrdeq	r0, [r4], -r8
   1440c:	push	{fp, lr}
   14410:	add	fp, sp, #4
   14414:	sub	sp, sp, #80	; 0x50
   14418:	str	r0, [fp, #-72]	; 0xffffffb8
   1441c:	str	r1, [fp, #-76]	; 0xffffffb4
   14420:	str	r2, [fp, #-80]	; 0xffffffb0
   14424:	str	r3, [fp, #-84]	; 0xffffffac
   14428:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1442c:	cmp	r3, #0
   14430:	bgt	14448 <__assert_fail@plt+0x31d8>
   14434:	ldr	r3, [pc, #468]	; 14610 <__assert_fail@plt+0x33a0>
   14438:	mov	r2, #568	; 0x238
   1443c:	ldr	r1, [pc, #464]	; 14614 <__assert_fail@plt+0x33a4>
   14440:	ldr	r0, [pc, #464]	; 14618 <__assert_fail@plt+0x33a8>
   14444:	bl	11270 <__assert_fail@plt>
   14448:	mov	r3, #0
   1444c:	str	r3, [fp, #-8]
   14450:	ldr	r3, [fp, #-76]	; 0xffffffb4
   14454:	add	r2, r3, #4
   14458:	str	r2, [fp, #-76]	; 0xffffffb4
   1445c:	ldr	r3, [r3]
   14460:	str	r3, [fp, #-16]
   14464:	mov	r3, #32
   14468:	str	r3, [fp, #-20]	; 0xffffffec
   1446c:	ldr	r3, [fp, #-16]
   14470:	str	r3, [fp, #-24]	; 0xffffffe8
   14474:	ldr	r3, [fp, #-84]	; 0xffffffac
   14478:	str	r3, [fp, #-28]	; 0xffffffe4
   1447c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14480:	uxth	r3, r3
   14484:	str	r3, [fp, #-32]	; 0xffffffe0
   14488:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1448c:	lsr	r3, r3, #16
   14490:	str	r3, [fp, #-36]	; 0xffffffdc
   14494:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14498:	uxth	r3, r3
   1449c:	str	r3, [fp, #-40]	; 0xffffffd8
   144a0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   144a4:	lsr	r3, r3, #16
   144a8:	str	r3, [fp, #-44]	; 0xffffffd4
   144ac:	ldr	r3, [fp, #-32]	; 0xffffffe0
   144b0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   144b4:	mul	r3, r2, r3
   144b8:	str	r3, [fp, #-48]	; 0xffffffd0
   144bc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   144c0:	ldr	r2, [fp, #-44]	; 0xffffffd4
   144c4:	mul	r3, r2, r3
   144c8:	str	r3, [fp, #-52]	; 0xffffffcc
   144cc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   144d0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   144d4:	mul	r3, r2, r3
   144d8:	str	r3, [fp, #-56]	; 0xffffffc8
   144dc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   144e0:	ldr	r2, [fp, #-44]	; 0xffffffd4
   144e4:	mul	r3, r2, r3
   144e8:	str	r3, [fp, #-12]
   144ec:	ldr	r3, [fp, #-48]	; 0xffffffd0
   144f0:	lsr	r3, r3, #16
   144f4:	ldr	r2, [fp, #-52]	; 0xffffffcc
   144f8:	add	r3, r2, r3
   144fc:	str	r3, [fp, #-52]	; 0xffffffcc
   14500:	ldr	r2, [fp, #-52]	; 0xffffffcc
   14504:	ldr	r3, [fp, #-56]	; 0xffffffc8
   14508:	add	r3, r2, r3
   1450c:	str	r3, [fp, #-52]	; 0xffffffcc
   14510:	ldr	r2, [fp, #-52]	; 0xffffffcc
   14514:	ldr	r3, [fp, #-56]	; 0xffffffc8
   14518:	cmp	r2, r3
   1451c:	bcs	1452c <__assert_fail@plt+0x32bc>
   14520:	ldr	r3, [fp, #-12]
   14524:	add	r3, r3, #65536	; 0x10000
   14528:	str	r3, [fp, #-12]
   1452c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   14530:	lsr	r2, r3, #16
   14534:	ldr	r3, [fp, #-12]
   14538:	add	r3, r2, r3
   1453c:	str	r3, [fp, #-60]	; 0xffffffc4
   14540:	ldr	r3, [fp, #-52]	; 0xffffffcc
   14544:	lsl	r2, r3, #16
   14548:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1454c:	uxth	r3, r3
   14550:	add	r3, r2, r3
   14554:	str	r3, [fp, #-64]	; 0xffffffc0
   14558:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1455c:	ldr	r3, [fp, #-8]
   14560:	add	r3, r2, r3
   14564:	str	r3, [fp, #-64]	; 0xffffffc0
   14568:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1456c:	ldr	r3, [fp, #-8]
   14570:	cmp	r2, r3
   14574:	movcc	r3, #1
   14578:	movcs	r3, #0
   1457c:	uxtb	r3, r3
   14580:	mov	r2, r3
   14584:	ldr	r3, [fp, #-60]	; 0xffffffc4
   14588:	add	r3, r2, r3
   1458c:	str	r3, [fp, #-8]
   14590:	ldr	r3, [fp, #-72]	; 0xffffffb8
   14594:	ldr	r3, [r3]
   14598:	str	r3, [fp, #-68]	; 0xffffffbc
   1459c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   145a0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   145a4:	add	r3, r2, r3
   145a8:	str	r3, [fp, #-64]	; 0xffffffc0
   145ac:	ldr	r2, [fp, #-64]	; 0xffffffc0
   145b0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   145b4:	cmp	r2, r3
   145b8:	movcc	r3, #1
   145bc:	movcs	r3, #0
   145c0:	uxtb	r3, r3
   145c4:	mov	r2, r3
   145c8:	ldr	r3, [fp, #-8]
   145cc:	add	r3, r3, r2
   145d0:	str	r3, [fp, #-8]
   145d4:	ldr	r3, [fp, #-72]	; 0xffffffb8
   145d8:	add	r2, r3, #4
   145dc:	str	r2, [fp, #-72]	; 0xffffffb8
   145e0:	ldr	r2, [fp, #-64]	; 0xffffffc0
   145e4:	str	r2, [r3]
   145e8:	ldr	r3, [fp, #-80]	; 0xffffffb0
   145ec:	sub	r3, r3, #1
   145f0:	str	r3, [fp, #-80]	; 0xffffffb0
   145f4:	ldr	r3, [fp, #-80]	; 0xffffffb0
   145f8:	cmp	r3, #0
   145fc:	bne	14450 <__assert_fail@plt+0x31e0>
   14600:	ldr	r3, [fp, #-8]
   14604:	mov	r0, r3
   14608:	sub	sp, fp, #4
   1460c:	pop	{fp, pc}
   14610:			; <UNDEFINED> instruction: 0x00040cb4
   14614:	andeq	r0, r4, r8, asr #12
   14618:	ldrdeq	r0, [r4], -r8
   1461c:	push	{fp, lr}
   14620:	add	fp, sp, #4
   14624:	sub	sp, sp, #80	; 0x50
   14628:	str	r0, [fp, #-72]	; 0xffffffb8
   1462c:	str	r1, [fp, #-76]	; 0xffffffb4
   14630:	str	r2, [fp, #-80]	; 0xffffffb0
   14634:	str	r3, [fp, #-84]	; 0xffffffac
   14638:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1463c:	cmp	r3, #0
   14640:	bgt	14658 <__assert_fail@plt+0x33e8>
   14644:	ldr	r3, [pc, #468]	; 14820 <__assert_fail@plt+0x35b0>
   14648:	ldr	r2, [pc, #468]	; 14824 <__assert_fail@plt+0x35b4>
   1464c:	ldr	r1, [pc, #468]	; 14828 <__assert_fail@plt+0x35b8>
   14650:	ldr	r0, [pc, #468]	; 1482c <__assert_fail@plt+0x35bc>
   14654:	bl	11270 <__assert_fail@plt>
   14658:	mov	r3, #0
   1465c:	str	r3, [fp, #-8]
   14660:	ldr	r3, [fp, #-76]	; 0xffffffb4
   14664:	add	r2, r3, #4
   14668:	str	r2, [fp, #-76]	; 0xffffffb4
   1466c:	ldr	r3, [r3]
   14670:	str	r3, [fp, #-16]
   14674:	mov	r3, #32
   14678:	str	r3, [fp, #-20]	; 0xffffffec
   1467c:	ldr	r3, [fp, #-16]
   14680:	str	r3, [fp, #-24]	; 0xffffffe8
   14684:	ldr	r3, [fp, #-84]	; 0xffffffac
   14688:	str	r3, [fp, #-28]	; 0xffffffe4
   1468c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14690:	uxth	r3, r3
   14694:	str	r3, [fp, #-32]	; 0xffffffe0
   14698:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1469c:	lsr	r3, r3, #16
   146a0:	str	r3, [fp, #-36]	; 0xffffffdc
   146a4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   146a8:	uxth	r3, r3
   146ac:	str	r3, [fp, #-40]	; 0xffffffd8
   146b0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   146b4:	lsr	r3, r3, #16
   146b8:	str	r3, [fp, #-44]	; 0xffffffd4
   146bc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   146c0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   146c4:	mul	r3, r2, r3
   146c8:	str	r3, [fp, #-48]	; 0xffffffd0
   146cc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   146d0:	ldr	r2, [fp, #-44]	; 0xffffffd4
   146d4:	mul	r3, r2, r3
   146d8:	str	r3, [fp, #-52]	; 0xffffffcc
   146dc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   146e0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   146e4:	mul	r3, r2, r3
   146e8:	str	r3, [fp, #-56]	; 0xffffffc8
   146ec:	ldr	r3, [fp, #-36]	; 0xffffffdc
   146f0:	ldr	r2, [fp, #-44]	; 0xffffffd4
   146f4:	mul	r3, r2, r3
   146f8:	str	r3, [fp, #-12]
   146fc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   14700:	lsr	r3, r3, #16
   14704:	ldr	r2, [fp, #-52]	; 0xffffffcc
   14708:	add	r3, r2, r3
   1470c:	str	r3, [fp, #-52]	; 0xffffffcc
   14710:	ldr	r2, [fp, #-52]	; 0xffffffcc
   14714:	ldr	r3, [fp, #-56]	; 0xffffffc8
   14718:	add	r3, r2, r3
   1471c:	str	r3, [fp, #-52]	; 0xffffffcc
   14720:	ldr	r2, [fp, #-52]	; 0xffffffcc
   14724:	ldr	r3, [fp, #-56]	; 0xffffffc8
   14728:	cmp	r2, r3
   1472c:	bcs	1473c <__assert_fail@plt+0x34cc>
   14730:	ldr	r3, [fp, #-12]
   14734:	add	r3, r3, #65536	; 0x10000
   14738:	str	r3, [fp, #-12]
   1473c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   14740:	lsr	r2, r3, #16
   14744:	ldr	r3, [fp, #-12]
   14748:	add	r3, r2, r3
   1474c:	str	r3, [fp, #-60]	; 0xffffffc4
   14750:	ldr	r3, [fp, #-52]	; 0xffffffcc
   14754:	lsl	r2, r3, #16
   14758:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1475c:	uxth	r3, r3
   14760:	add	r3, r2, r3
   14764:	str	r3, [fp, #-64]	; 0xffffffc0
   14768:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1476c:	ldr	r3, [fp, #-8]
   14770:	add	r3, r2, r3
   14774:	str	r3, [fp, #-64]	; 0xffffffc0
   14778:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1477c:	ldr	r3, [fp, #-8]
   14780:	cmp	r2, r3
   14784:	movcc	r3, #1
   14788:	movcs	r3, #0
   1478c:	uxtb	r3, r3
   14790:	mov	r2, r3
   14794:	ldr	r3, [fp, #-60]	; 0xffffffc4
   14798:	add	r3, r2, r3
   1479c:	str	r3, [fp, #-8]
   147a0:	ldr	r3, [fp, #-72]	; 0xffffffb8
   147a4:	ldr	r3, [r3]
   147a8:	str	r3, [fp, #-68]	; 0xffffffbc
   147ac:	ldr	r2, [fp, #-68]	; 0xffffffbc
   147b0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   147b4:	sub	r3, r2, r3
   147b8:	str	r3, [fp, #-64]	; 0xffffffc0
   147bc:	ldr	r2, [fp, #-64]	; 0xffffffc0
   147c0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   147c4:	cmp	r2, r3
   147c8:	movhi	r3, #1
   147cc:	movls	r3, #0
   147d0:	uxtb	r3, r3
   147d4:	mov	r2, r3
   147d8:	ldr	r3, [fp, #-8]
   147dc:	add	r3, r3, r2
   147e0:	str	r3, [fp, #-8]
   147e4:	ldr	r3, [fp, #-72]	; 0xffffffb8
   147e8:	add	r2, r3, #4
   147ec:	str	r2, [fp, #-72]	; 0xffffffb8
   147f0:	ldr	r2, [fp, #-64]	; 0xffffffc0
   147f4:	str	r2, [r3]
   147f8:	ldr	r3, [fp, #-80]	; 0xffffffb0
   147fc:	sub	r3, r3, #1
   14800:	str	r3, [fp, #-80]	; 0xffffffb0
   14804:	ldr	r3, [fp, #-80]	; 0xffffffb0
   14808:	cmp	r3, #0
   1480c:	bne	14660 <__assert_fail@plt+0x33f0>
   14810:	ldr	r3, [fp, #-8]
   14814:	mov	r0, r3
   14818:	sub	sp, fp, #4
   1481c:	pop	{fp, pc}
   14820:	andeq	r0, r4, r4, asr #25
   14824:	andeq	r0, r0, r2, asr r2
   14828:	andeq	r0, r4, r8, asr #12
   1482c:	ldrdeq	r0, [r4], -r8
   14830:	push	{r4, fp, lr}
   14834:	add	fp, sp, #8
   14838:	sub	sp, sp, #20
   1483c:	str	r0, [fp, #-16]
   14840:	str	r1, [fp, #-20]	; 0xffffffec
   14844:	str	r2, [fp, #-24]	; 0xffffffe8
   14848:	str	r3, [fp, #-28]	; 0xffffffe4
   1484c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14850:	ldr	r3, [fp, #4]
   14854:	cmp	r2, r3
   14858:	bge	14870 <__assert_fail@plt+0x3600>
   1485c:	ldr	r3, [pc, #392]	; 149ec <__assert_fail@plt+0x377c>
   14860:	ldr	r2, [pc, #392]	; 149f0 <__assert_fail@plt+0x3780>
   14864:	ldr	r1, [pc, #392]	; 149f4 <__assert_fail@plt+0x3784>
   14868:	ldr	r0, [pc, #392]	; 149f8 <__assert_fail@plt+0x3788>
   1486c:	bl	11270 <__assert_fail@plt>
   14870:	ldr	r3, [fp, #4]
   14874:	cmp	r3, #0
   14878:	bgt	14890 <__assert_fail@plt+0x3620>
   1487c:	ldr	r3, [pc, #360]	; 149ec <__assert_fail@plt+0x377c>
   14880:	ldr	r2, [pc, #372]	; 149fc <__assert_fail@plt+0x378c>
   14884:	ldr	r1, [pc, #360]	; 149f4 <__assert_fail@plt+0x3784>
   14888:	ldr	r0, [pc, #368]	; 14a00 <__assert_fail@plt+0x3790>
   1488c:	bl	11270 <__assert_fail@plt>
   14890:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14894:	ldr	r3, [fp, #4]
   14898:	add	r3, r2, r3
   1489c:	lsl	r3, r3, #2
   148a0:	ldr	r2, [fp, #-16]
   148a4:	add	r2, r2, r3
   148a8:	ldr	r3, [fp, #-20]	; 0xffffffec
   148ac:	cmp	r2, r3
   148b0:	bls	148e4 <__assert_fail@plt+0x3674>
   148b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   148b8:	lsl	r3, r3, #2
   148bc:	ldr	r2, [fp, #-20]	; 0xffffffec
   148c0:	add	r2, r2, r3
   148c4:	ldr	r3, [fp, #-16]
   148c8:	cmp	r2, r3
   148cc:	bls	148e4 <__assert_fail@plt+0x3674>
   148d0:	ldr	r3, [pc, #276]	; 149ec <__assert_fail@plt+0x377c>
   148d4:	mov	r2, #620	; 0x26c
   148d8:	ldr	r1, [pc, #276]	; 149f4 <__assert_fail@plt+0x3784>
   148dc:	ldr	r0, [pc, #288]	; 14a04 <__assert_fail@plt+0x3794>
   148e0:	bl	11270 <__assert_fail@plt>
   148e4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   148e8:	ldr	r3, [fp, #4]
   148ec:	add	r3, r2, r3
   148f0:	lsl	r3, r3, #2
   148f4:	ldr	r2, [fp, #-16]
   148f8:	add	r2, r2, r3
   148fc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14900:	cmp	r2, r3
   14904:	bls	14938 <__assert_fail@plt+0x36c8>
   14908:	ldr	r3, [fp, #4]
   1490c:	lsl	r3, r3, #2
   14910:	ldr	r2, [fp, #-28]	; 0xffffffe4
   14914:	add	r2, r2, r3
   14918:	ldr	r3, [fp, #-16]
   1491c:	cmp	r2, r3
   14920:	bls	14938 <__assert_fail@plt+0x36c8>
   14924:	ldr	r3, [pc, #192]	; 149ec <__assert_fail@plt+0x377c>
   14928:	ldr	r2, [pc, #216]	; 14a08 <__assert_fail@plt+0x3798>
   1492c:	ldr	r1, [pc, #192]	; 149f4 <__assert_fail@plt+0x3784>
   14930:	ldr	r0, [pc, #212]	; 14a0c <__assert_fail@plt+0x379c>
   14934:	bl	11270 <__assert_fail@plt>
   14938:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1493c:	lsl	r3, r3, #2
   14940:	ldr	r2, [fp, #-16]
   14944:	add	r4, r2, r3
   14948:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1494c:	ldr	r3, [r3]
   14950:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14954:	ldr	r1, [fp, #-20]	; 0xffffffec
   14958:	ldr	r0, [fp, #-16]
   1495c:	bl	1423c <__assert_fail@plt+0x2fcc>
   14960:	mov	r3, r0
   14964:	str	r3, [r4]
   14968:	b	149b4 <__assert_fail@plt+0x3744>
   1496c:	ldr	r3, [fp, #-16]
   14970:	add	r3, r3, #4
   14974:	str	r3, [fp, #-16]
   14978:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1497c:	add	r3, r3, #4
   14980:	str	r3, [fp, #-28]	; 0xffffffe4
   14984:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14988:	lsl	r3, r3, #2
   1498c:	ldr	r2, [fp, #-16]
   14990:	add	r4, r2, r3
   14994:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14998:	ldr	r3, [r3]
   1499c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   149a0:	ldr	r1, [fp, #-20]	; 0xffffffec
   149a4:	ldr	r0, [fp, #-16]
   149a8:	bl	1440c <__assert_fail@plt+0x319c>
   149ac:	mov	r3, r0
   149b0:	str	r3, [r4]
   149b4:	ldr	r3, [fp, #4]
   149b8:	sub	r3, r3, #1
   149bc:	str	r3, [fp, #4]
   149c0:	ldr	r3, [fp, #4]
   149c4:	cmp	r3, #0
   149c8:	bgt	1496c <__assert_fail@plt+0x36fc>
   149cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   149d0:	lsl	r3, r3, #2
   149d4:	ldr	r2, [fp, #-16]
   149d8:	add	r3, r2, r3
   149dc:	ldr	r3, [r3]
   149e0:	mov	r0, r3
   149e4:	sub	sp, fp, #8
   149e8:	pop	{r4, fp, pc}
   149ec:	ldrdeq	r0, [r4], -r4
   149f0:	andeq	r0, r0, sl, ror #4
   149f4:	andeq	r0, r4, r8, asr #12
   149f8:	andeq	r0, r4, r0, ror #13
   149fc:	andeq	r0, r0, fp, ror #4
   14a00:	andeq	r0, r4, ip, ror #13
   14a04:	strdeq	r0, [r4], -r4
   14a08:	andeq	r0, r0, sp, ror #4
   14a0c:	andeq	r0, r4, ip, lsl r7
   14a10:	push	{fp, lr}
   14a14:	add	fp, sp, #4
   14a18:	sub	sp, sp, #24
   14a1c:	str	r0, [fp, #-8]
   14a20:	str	r1, [fp, #-12]
   14a24:	str	r2, [fp, #-16]
   14a28:	str	r3, [fp, #-20]	; 0xffffffec
   14a2c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14a30:	str	r3, [sp]
   14a34:	ldr	r3, [fp, #-16]
   14a38:	ldr	r2, [fp, #-20]	; 0xffffffec
   14a3c:	ldr	r1, [fp, #-12]
   14a40:	ldr	r0, [fp, #-8]
   14a44:	bl	14830 <__assert_fail@plt+0x35c0>
   14a48:	nop			; (mov r0, r0)
   14a4c:	sub	sp, fp, #4
   14a50:	pop	{fp, pc}
   14a54:	push	{fp, lr}
   14a58:	add	fp, sp, #4
   14a5c:	sub	sp, sp, #24
   14a60:	str	r0, [fp, #-8]
   14a64:	str	r1, [fp, #-12]
   14a68:	str	r2, [fp, #-16]
   14a6c:	ldr	r3, [fp, #-16]
   14a70:	str	r3, [sp]
   14a74:	ldr	r3, [fp, #-12]
   14a78:	ldr	r2, [fp, #-16]
   14a7c:	ldr	r1, [fp, #-12]
   14a80:	ldr	r0, [fp, #-8]
   14a84:	bl	14830 <__assert_fail@plt+0x35c0>
   14a88:	nop			; (mov r0, r0)
   14a8c:	sub	sp, fp, #4
   14a90:	pop	{fp, pc}
   14a94:	push	{fp, lr}
   14a98:	add	fp, sp, #4
   14a9c:	sub	sp, sp, #32
   14aa0:	str	r0, [fp, #-24]	; 0xffffffe8
   14aa4:	str	r1, [fp, #-28]	; 0xffffffe4
   14aa8:	str	r2, [fp, #-32]	; 0xffffffe0
   14aac:	str	r3, [fp, #-36]	; 0xffffffdc
   14ab0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14ab4:	cmp	r3, #0
   14ab8:	bgt	14ad0 <__assert_fail@plt+0x3860>
   14abc:	ldr	r3, [pc, #332]	; 14c10 <__assert_fail@plt+0x39a0>
   14ac0:	ldr	r2, [pc, #332]	; 14c14 <__assert_fail@plt+0x39a4>
   14ac4:	ldr	r1, [pc, #332]	; 14c18 <__assert_fail@plt+0x39a8>
   14ac8:	ldr	r0, [pc, #332]	; 14c1c <__assert_fail@plt+0x39ac>
   14acc:	bl	11270 <__assert_fail@plt>
   14ad0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14ad4:	cmp	r3, #0
   14ad8:	bne	14af0 <__assert_fail@plt+0x3880>
   14adc:	ldr	r3, [pc, #300]	; 14c10 <__assert_fail@plt+0x39a0>
   14ae0:	mov	r2, #660	; 0x294
   14ae4:	ldr	r1, [pc, #300]	; 14c18 <__assert_fail@plt+0x39a8>
   14ae8:	ldr	r0, [pc, #304]	; 14c20 <__assert_fail@plt+0x39b0>
   14aec:	bl	11270 <__assert_fail@plt>
   14af0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14af4:	cmp	r3, #31
   14af8:	bls	14b10 <__assert_fail@plt+0x38a0>
   14afc:	ldr	r3, [pc, #268]	; 14c10 <__assert_fail@plt+0x39a0>
   14b00:	ldr	r2, [pc, #284]	; 14c24 <__assert_fail@plt+0x39b4>
   14b04:	ldr	r1, [pc, #268]	; 14c18 <__assert_fail@plt+0x39a8>
   14b08:	ldr	r0, [pc, #280]	; 14c28 <__assert_fail@plt+0x39b8>
   14b0c:	bl	11270 <__assert_fail@plt>
   14b10:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14b14:	lsl	r3, r3, #2
   14b18:	ldr	r2, [fp, #-28]	; 0xffffffe4
   14b1c:	add	r3, r2, r3
   14b20:	str	r3, [fp, #-28]	; 0xffffffe4
   14b24:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14b28:	lsl	r3, r3, #2
   14b2c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   14b30:	add	r3, r2, r3
   14b34:	str	r3, [fp, #-24]	; 0xffffffe8
   14b38:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14b3c:	rsb	r3, r3, #32
   14b40:	str	r3, [fp, #-12]
   14b44:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14b48:	sub	r3, r3, #4
   14b4c:	str	r3, [fp, #-28]	; 0xffffffe4
   14b50:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14b54:	ldr	r3, [r3]
   14b58:	str	r3, [fp, #-16]
   14b5c:	ldr	r2, [fp, #-16]
   14b60:	ldr	r3, [fp, #-12]
   14b64:	lsr	r3, r2, r3
   14b68:	str	r3, [fp, #-20]	; 0xffffffec
   14b6c:	ldr	r2, [fp, #-16]
   14b70:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14b74:	lsl	r3, r2, r3
   14b78:	str	r3, [fp, #-8]
   14b7c:	b	14bd0 <__assert_fail@plt+0x3960>
   14b80:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14b84:	sub	r3, r3, #4
   14b88:	str	r3, [fp, #-28]	; 0xffffffe4
   14b8c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14b90:	ldr	r3, [r3]
   14b94:	str	r3, [fp, #-16]
   14b98:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14b9c:	sub	r3, r3, #4
   14ba0:	str	r3, [fp, #-24]	; 0xffffffe8
   14ba4:	ldr	r2, [fp, #-16]
   14ba8:	ldr	r3, [fp, #-12]
   14bac:	lsr	r2, r2, r3
   14bb0:	ldr	r3, [fp, #-8]
   14bb4:	orr	r2, r2, r3
   14bb8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14bbc:	str	r2, [r3]
   14bc0:	ldr	r2, [fp, #-16]
   14bc4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14bc8:	lsl	r3, r2, r3
   14bcc:	str	r3, [fp, #-8]
   14bd0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14bd4:	sub	r3, r3, #1
   14bd8:	str	r3, [fp, #-32]	; 0xffffffe0
   14bdc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14be0:	cmp	r3, #0
   14be4:	bne	14b80 <__assert_fail@plt+0x3910>
   14be8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14bec:	sub	r3, r3, #4
   14bf0:	str	r3, [fp, #-24]	; 0xffffffe8
   14bf4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14bf8:	ldr	r2, [fp, #-8]
   14bfc:	str	r2, [r3]
   14c00:	ldr	r3, [fp, #-20]	; 0xffffffec
   14c04:	mov	r0, r3
   14c08:	sub	sp, fp, #4
   14c0c:	pop	{fp, pc}
   14c10:	ldrdeq	r0, [r4], -ip
   14c14:	muleq	r0, r3, r2
   14c18:	andeq	r0, r4, r8, asr #12
   14c1c:	ldrdeq	r0, [r4], -r8
   14c20:	andeq	r0, r4, r4, asr #14
   14c24:	muleq	r0, r5, r2
   14c28:	andeq	r0, r4, r0, asr r7
   14c2c:	push	{fp, lr}
   14c30:	add	fp, sp, #4
   14c34:	sub	sp, sp, #32
   14c38:	str	r0, [fp, #-24]	; 0xffffffe8
   14c3c:	str	r1, [fp, #-28]	; 0xffffffe4
   14c40:	str	r2, [fp, #-32]	; 0xffffffe0
   14c44:	str	r3, [fp, #-36]	; 0xffffffdc
   14c48:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14c4c:	cmp	r3, #0
   14c50:	bgt	14c68 <__assert_fail@plt+0x39f8>
   14c54:	ldr	r3, [pc, #268]	; 14d68 <__assert_fail@plt+0x3af8>
   14c58:	ldr	r2, [pc, #268]	; 14d6c <__assert_fail@plt+0x3afc>
   14c5c:	ldr	r1, [pc, #268]	; 14d70 <__assert_fail@plt+0x3b00>
   14c60:	ldr	r0, [pc, #268]	; 14d74 <__assert_fail@plt+0x3b04>
   14c64:	bl	11270 <__assert_fail@plt>
   14c68:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14c6c:	cmp	r3, #0
   14c70:	bne	14c88 <__assert_fail@plt+0x3a18>
   14c74:	ldr	r3, [pc, #236]	; 14d68 <__assert_fail@plt+0x3af8>
   14c78:	ldr	r2, [pc, #248]	; 14d78 <__assert_fail@plt+0x3b08>
   14c7c:	ldr	r1, [pc, #236]	; 14d70 <__assert_fail@plt+0x3b00>
   14c80:	ldr	r0, [pc, #244]	; 14d7c <__assert_fail@plt+0x3b0c>
   14c84:	bl	11270 <__assert_fail@plt>
   14c88:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14c8c:	cmp	r3, #31
   14c90:	bls	14ca8 <__assert_fail@plt+0x3a38>
   14c94:	ldr	r3, [pc, #204]	; 14d68 <__assert_fail@plt+0x3af8>
   14c98:	ldr	r2, [pc, #224]	; 14d80 <__assert_fail@plt+0x3b10>
   14c9c:	ldr	r1, [pc, #204]	; 14d70 <__assert_fail@plt+0x3b00>
   14ca0:	ldr	r0, [pc, #220]	; 14d84 <__assert_fail@plt+0x3b14>
   14ca4:	bl	11270 <__assert_fail@plt>
   14ca8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14cac:	rsb	r3, r3, #32
   14cb0:	str	r3, [fp, #-12]
   14cb4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14cb8:	add	r2, r3, #4
   14cbc:	str	r2, [fp, #-28]	; 0xffffffe4
   14cc0:	ldr	r3, [r3]
   14cc4:	str	r3, [fp, #-16]
   14cc8:	ldr	r2, [fp, #-16]
   14ccc:	ldr	r3, [fp, #-12]
   14cd0:	lsl	r3, r2, r3
   14cd4:	str	r3, [fp, #-20]	; 0xffffffec
   14cd8:	ldr	r2, [fp, #-16]
   14cdc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14ce0:	lsr	r3, r2, r3
   14ce4:	str	r3, [fp, #-8]
   14ce8:	b	14d34 <__assert_fail@plt+0x3ac4>
   14cec:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14cf0:	add	r2, r3, #4
   14cf4:	str	r2, [fp, #-28]	; 0xffffffe4
   14cf8:	ldr	r3, [r3]
   14cfc:	str	r3, [fp, #-16]
   14d00:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14d04:	add	r2, r3, #4
   14d08:	str	r2, [fp, #-24]	; 0xffffffe8
   14d0c:	ldr	r1, [fp, #-16]
   14d10:	ldr	r2, [fp, #-12]
   14d14:	lsl	r1, r1, r2
   14d18:	ldr	r2, [fp, #-8]
   14d1c:	orr	r2, r1, r2
   14d20:	str	r2, [r3]
   14d24:	ldr	r2, [fp, #-16]
   14d28:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14d2c:	lsr	r3, r2, r3
   14d30:	str	r3, [fp, #-8]
   14d34:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14d38:	sub	r3, r3, #1
   14d3c:	str	r3, [fp, #-32]	; 0xffffffe0
   14d40:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14d44:	cmp	r3, #0
   14d48:	bne	14cec <__assert_fail@plt+0x3a7c>
   14d4c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14d50:	ldr	r2, [fp, #-8]
   14d54:	str	r2, [r3]
   14d58:	ldr	r3, [fp, #-20]	; 0xffffffec
   14d5c:	mov	r0, r3
   14d60:	sub	sp, fp, #4
   14d64:	pop	{fp, pc}
   14d68:	andeq	r0, r4, r8, ror #25
   14d6c:			; <UNDEFINED> instruction: 0x000002b1
   14d70:	andeq	r0, r4, r8, asr #12
   14d74:	ldrdeq	r0, [r4], -r8
   14d78:			; <UNDEFINED> instruction: 0x000002b2
   14d7c:	andeq	r0, r4, r4, asr #14
   14d80:			; <UNDEFINED> instruction: 0x000002b3
   14d84:	andeq	r0, r4, r0, asr r7
   14d88:	push	{fp, lr}
   14d8c:	add	fp, sp, #4
   14d90:	sub	sp, sp, #40	; 0x28
   14d94:	str	r0, [fp, #-32]	; 0xffffffe0
   14d98:	str	r1, [fp, #-36]	; 0xffffffdc
   14d9c:	str	r2, [fp, #-40]	; 0xffffffd8
   14da0:	str	r3, [fp, #-44]	; 0xffffffd4
   14da4:	ldr	r3, [fp, #4]
   14da8:	cmp	r3, #0
   14dac:	beq	14dd0 <__assert_fail@plt+0x3b60>
   14db0:	ldr	r3, [fp, #4]
   14db4:	cmn	r3, #1
   14db8:	beq	14dd0 <__assert_fail@plt+0x3b60>
   14dbc:	ldr	r3, [pc, #368]	; 14f34 <__assert_fail@plt+0x3cc4>
   14dc0:	ldr	r2, [pc, #368]	; 14f38 <__assert_fail@plt+0x3cc8>
   14dc4:	ldr	r1, [pc, #368]	; 14f3c <__assert_fail@plt+0x3ccc>
   14dc8:	ldr	r0, [pc, #368]	; 14f40 <__assert_fail@plt+0x3cd0>
   14dcc:	bl	11270 <__assert_fail@plt>
   14dd0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14dd4:	cmp	r3, #0
   14dd8:	blt	14dec <__assert_fail@plt+0x3b7c>
   14ddc:	ldr	r2, [fp, #-36]	; 0xffffffdc
   14de0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   14de4:	cmp	r2, r3
   14de8:	ble	14e00 <__assert_fail@plt+0x3b90>
   14dec:	ldr	r3, [pc, #320]	; 14f34 <__assert_fail@plt+0x3cc4>
   14df0:	mov	r2, #716	; 0x2cc
   14df4:	ldr	r1, [pc, #320]	; 14f3c <__assert_fail@plt+0x3ccc>
   14df8:	ldr	r0, [pc, #324]	; 14f44 <__assert_fail@plt+0x3cd4>
   14dfc:	bl	11270 <__assert_fail@plt>
   14e00:	b	14e60 <__assert_fail@plt+0x3bf0>
   14e04:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14e08:	add	r3, r3, #1
   14e0c:	str	r3, [fp, #-36]	; 0xffffffdc
   14e10:	ldr	r2, [fp, #-36]	; 0xffffffdc
   14e14:	ldr	r3, [fp, #-44]	; 0xffffffd4
   14e18:	cmp	r2, r3
   14e1c:	bne	14e40 <__assert_fail@plt+0x3bd0>
   14e20:	ldr	r3, [fp, #4]
   14e24:	cmp	r3, #0
   14e28:	beq	14e38 <__assert_fail@plt+0x3bc8>
   14e2c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   14e30:	lsl	r3, r3, #5
   14e34:	b	14f28 <__assert_fail@plt+0x3cb8>
   14e38:	mvn	r3, #0
   14e3c:	b	14f28 <__assert_fail@plt+0x3cb8>
   14e40:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14e44:	lsl	r3, r3, #2
   14e48:	ldr	r2, [fp, #-40]	; 0xffffffd8
   14e4c:	add	r3, r2, r3
   14e50:	ldr	r2, [r3]
   14e54:	ldr	r3, [fp, #4]
   14e58:	eor	r3, r3, r2
   14e5c:	str	r3, [fp, #-32]	; 0xffffffe0
   14e60:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14e64:	cmp	r3, #0
   14e68:	beq	14e04 <__assert_fail@plt+0x3b94>
   14e6c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14e70:	str	r3, [fp, #-16]
   14e74:	mov	r3, #0
   14e78:	str	r3, [fp, #-20]	; 0xffffffec
   14e7c:	ldr	r3, [fp, #-16]
   14e80:	rsb	r2, r3, #0
   14e84:	ldr	r3, [fp, #-16]
   14e88:	and	r3, r3, r2
   14e8c:	str	r3, [fp, #-8]
   14e90:	mov	r3, #0
   14e94:	str	r3, [fp, #-12]
   14e98:	mov	r3, #8
   14e9c:	str	r3, [fp, #-24]	; 0xffffffe8
   14ea0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14ea4:	cmp	r3, #31
   14ea8:	bhi	14ef8 <__assert_fail@plt+0x3c88>
   14eac:	b	14ecc <__assert_fail@plt+0x3c5c>
   14eb0:	ldr	r2, [fp, #-8]
   14eb4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14eb8:	lsl	r3, r2, r3
   14ebc:	str	r3, [fp, #-8]
   14ec0:	ldr	r3, [fp, #-12]
   14ec4:	add	r3, r3, #8
   14ec8:	str	r3, [fp, #-12]
   14ecc:	ldr	r3, [fp, #-8]
   14ed0:	and	r3, r3, #-16777216	; 0xff000000
   14ed4:	cmp	r3, #0
   14ed8:	beq	14eb0 <__assert_fail@plt+0x3c40>
   14edc:	b	14ef8 <__assert_fail@plt+0x3c88>
   14ee0:	ldr	r3, [fp, #-8]
   14ee4:	lsl	r3, r3, #1
   14ee8:	str	r3, [fp, #-8]
   14eec:	ldr	r3, [fp, #-12]
   14ef0:	add	r3, r3, #1
   14ef4:	str	r3, [fp, #-12]
   14ef8:	ldr	r3, [fp, #-8]
   14efc:	cmp	r3, #0
   14f00:	bge	14ee0 <__assert_fail@plt+0x3c70>
   14f04:	ldr	r3, [fp, #-12]
   14f08:	str	r3, [fp, #-20]	; 0xffffffec
   14f0c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14f10:	rsb	r3, r3, #31
   14f14:	str	r3, [fp, #-28]	; 0xffffffe4
   14f18:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14f1c:	lsl	r2, r3, #5
   14f20:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14f24:	add	r3, r2, r3
   14f28:	mov	r0, r3
   14f2c:	sub	sp, fp, #4
   14f30:	pop	{fp, pc}
   14f34:	strdeq	r0, [r4], -r4
   14f38:	andeq	r0, r0, fp, asr #5
   14f3c:	andeq	r0, r4, r8, asr #12
   14f40:	andeq	r0, r4, r4, ror #14
   14f44:	andeq	r0, r4, r4, lsl #15
   14f48:	push	{fp, lr}
   14f4c:	add	fp, sp, #4
   14f50:	sub	sp, sp, #24
   14f54:	str	r0, [fp, #-16]
   14f58:	str	r1, [fp, #-20]	; 0xffffffec
   14f5c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14f60:	lsr	r3, r3, #5
   14f64:	str	r3, [fp, #-8]
   14f68:	ldr	r3, [fp, #-8]
   14f6c:	lsl	r3, r3, #2
   14f70:	ldr	r2, [fp, #-16]
   14f74:	add	r3, r2, r3
   14f78:	ldr	r2, [r3]
   14f7c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14f80:	and	r3, r3, #31
   14f84:	mvn	r1, #0
   14f88:	lsl	r3, r1, r3
   14f8c:	and	r0, r2, r3
   14f90:	mov	r3, #0
   14f94:	str	r3, [sp]
   14f98:	ldr	r3, [fp, #-8]
   14f9c:	ldr	r2, [fp, #-16]
   14fa0:	ldr	r1, [fp, #-8]
   14fa4:	bl	14d88 <__assert_fail@plt+0x3b18>
   14fa8:	mov	r3, r0
   14fac:	mov	r0, r3
   14fb0:	sub	sp, fp, #4
   14fb4:	pop	{fp, pc}
   14fb8:	push	{fp, lr}
   14fbc:	add	fp, sp, #4
   14fc0:	sub	sp, sp, #24
   14fc4:	str	r0, [fp, #-16]
   14fc8:	str	r1, [fp, #-20]	; 0xffffffec
   14fcc:	ldr	r3, [fp, #-20]	; 0xffffffec
   14fd0:	lsr	r3, r3, #5
   14fd4:	str	r3, [fp, #-8]
   14fd8:	ldr	r3, [fp, #-8]
   14fdc:	lsl	r3, r3, #2
   14fe0:	ldr	r2, [fp, #-16]
   14fe4:	add	r3, r2, r3
   14fe8:	ldr	r3, [r3]
   14fec:	mvn	r2, r3
   14ff0:	ldr	r3, [fp, #-20]	; 0xffffffec
   14ff4:	and	r3, r3, #31
   14ff8:	mvn	r1, #0
   14ffc:	lsl	r3, r1, r3
   15000:	and	r0, r2, r3
   15004:	mvn	r3, #0
   15008:	str	r3, [sp]
   1500c:	ldr	r3, [fp, #-8]
   15010:	ldr	r2, [fp, #-16]
   15014:	ldr	r1, [fp, #-8]
   15018:	bl	14d88 <__assert_fail@plt+0x3b18>
   1501c:	mov	r3, r0
   15020:	mov	r0, r3
   15024:	sub	sp, fp, #4
   15028:	pop	{fp, pc}
   1502c:	push	{fp}		; (str fp, [sp, #-4]!)
   15030:	add	fp, sp, #0
   15034:	sub	sp, sp, #20
   15038:	str	r0, [fp, #-8]
   1503c:	str	r1, [fp, #-12]
   15040:	str	r2, [fp, #-16]
   15044:	b	1506c <__assert_fail@plt+0x3dfc>
   15048:	ldr	r3, [fp, #-8]
   1504c:	add	r2, r3, #4
   15050:	str	r2, [fp, #-8]
   15054:	ldr	r2, [fp, #-12]
   15058:	add	r1, r2, #4
   1505c:	str	r1, [fp, #-12]
   15060:	ldr	r2, [r2]
   15064:	mvn	r2, r2
   15068:	str	r2, [r3]
   1506c:	ldr	r3, [fp, #-16]
   15070:	sub	r3, r3, #1
   15074:	str	r3, [fp, #-16]
   15078:	ldr	r3, [fp, #-16]
   1507c:	cmp	r3, #0
   15080:	bge	15048 <__assert_fail@plt+0x3dd8>
   15084:	nop			; (mov r0, r0)
   15088:	add	sp, fp, #0
   1508c:	pop	{fp}		; (ldr fp, [sp], #4)
   15090:	bx	lr
   15094:	push	{fp, lr}
   15098:	add	fp, sp, #4
   1509c:	sub	sp, sp, #16
   150a0:	str	r0, [fp, #-8]
   150a4:	str	r1, [fp, #-12]
   150a8:	str	r2, [fp, #-16]
   150ac:	b	150f4 <__assert_fail@plt+0x3e84>
   150b0:	ldr	r3, [fp, #-8]
   150b4:	mov	r2, #0
   150b8:	str	r2, [r3]
   150bc:	ldr	r3, [fp, #-16]
   150c0:	sub	r3, r3, #1
   150c4:	str	r3, [fp, #-16]
   150c8:	ldr	r3, [fp, #-16]
   150cc:	cmp	r3, #0
   150d0:	bne	150dc <__assert_fail@plt+0x3e6c>
   150d4:	mov	r3, #0
   150d8:	b	15150 <__assert_fail@plt+0x3ee0>
   150dc:	ldr	r3, [fp, #-12]
   150e0:	add	r3, r3, #4
   150e4:	str	r3, [fp, #-12]
   150e8:	ldr	r3, [fp, #-8]
   150ec:	add	r3, r3, #4
   150f0:	str	r3, [fp, #-8]
   150f4:	ldr	r3, [fp, #-12]
   150f8:	ldr	r3, [r3]
   150fc:	cmp	r3, #0
   15100:	beq	150b0 <__assert_fail@plt+0x3e40>
   15104:	ldr	r3, [fp, #-12]
   15108:	ldr	r3, [r3]
   1510c:	rsb	r2, r3, #0
   15110:	ldr	r3, [fp, #-8]
   15114:	str	r2, [r3]
   15118:	ldr	r3, [fp, #-8]
   1511c:	add	r3, r3, #4
   15120:	str	r3, [fp, #-8]
   15124:	ldr	r3, [fp, #-12]
   15128:	add	r3, r3, #4
   1512c:	str	r3, [fp, #-12]
   15130:	ldr	r3, [fp, #-16]
   15134:	sub	r3, r3, #1
   15138:	str	r3, [fp, #-16]
   1513c:	ldr	r2, [fp, #-16]
   15140:	ldr	r1, [fp, #-12]
   15144:	ldr	r0, [fp, #-8]
   15148:	bl	1502c <__assert_fail@plt+0x3dbc>
   1514c:	mov	r3, #1
   15150:	mov	r0, r3
   15154:	sub	sp, fp, #4
   15158:	pop	{fp, pc}
   1515c:	push	{fp, lr}
   15160:	add	fp, sp, #4
   15164:	sub	sp, sp, #88	; 0x58
   15168:	str	r0, [fp, #-88]	; 0xffffffa8
   1516c:	str	r1, [fp, #-92]	; 0xffffffa4
   15170:	ldr	r3, [fp, #-88]	; 0xffffffa8
   15174:	uxth	r3, r3
   15178:	str	r3, [fp, #-28]	; 0xffffffe4
   1517c:	ldr	r3, [fp, #-88]	; 0xffffffa8
   15180:	lsr	r3, r3, #16
   15184:	str	r3, [fp, #-32]	; 0xffffffe0
   15188:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1518c:	mvn	r3, r3
   15190:	ldr	r1, [fp, #-32]	; 0xffffffe0
   15194:	mov	r0, r3
   15198:	bl	3f560 <__assert_fail@plt+0x2e2f0>
   1519c:	mov	r3, r0
   151a0:	str	r3, [fp, #-20]	; 0xffffffec
   151a4:	ldr	r3, [fp, #-88]	; 0xffffffa8
   151a8:	mvn	r2, r3
   151ac:	ldr	r3, [fp, #-20]	; 0xffffffec
   151b0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   151b4:	mul	r3, r1, r3
   151b8:	sub	r3, r2, r3
   151bc:	lsl	r3, r3, #16
   151c0:	mvn	r3, r3, lsr #16
   151c4:	mvn	r3, r3, lsl #16
   151c8:	str	r3, [fp, #-8]
   151cc:	ldr	r3, [fp, #-20]	; 0xffffffec
   151d0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   151d4:	mul	r3, r2, r3
   151d8:	str	r3, [fp, #-36]	; 0xffffffdc
   151dc:	ldr	r2, [fp, #-8]
   151e0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   151e4:	cmp	r2, r3
   151e8:	bcs	15244 <__assert_fail@plt+0x3fd4>
   151ec:	ldr	r3, [fp, #-20]	; 0xffffffec
   151f0:	sub	r3, r3, #1
   151f4:	str	r3, [fp, #-20]	; 0xffffffec
   151f8:	ldr	r2, [fp, #-8]
   151fc:	ldr	r3, [fp, #-88]	; 0xffffffa8
   15200:	add	r3, r2, r3
   15204:	str	r3, [fp, #-8]
   15208:	ldr	r2, [fp, #-8]
   1520c:	ldr	r3, [fp, #-88]	; 0xffffffa8
   15210:	cmp	r2, r3
   15214:	bcc	15244 <__assert_fail@plt+0x3fd4>
   15218:	ldr	r2, [fp, #-8]
   1521c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15220:	cmp	r2, r3
   15224:	bcs	15244 <__assert_fail@plt+0x3fd4>
   15228:	ldr	r3, [fp, #-20]	; 0xffffffec
   1522c:	sub	r3, r3, #1
   15230:	str	r3, [fp, #-20]	; 0xffffffec
   15234:	ldr	r2, [fp, #-8]
   15238:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1523c:	add	r3, r2, r3
   15240:	str	r3, [fp, #-8]
   15244:	ldr	r2, [fp, #-8]
   15248:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1524c:	sub	r3, r2, r3
   15250:	str	r3, [fp, #-8]
   15254:	ldr	r3, [fp, #-8]
   15258:	lsr	r3, r3, #16
   1525c:	ldr	r2, [fp, #-20]	; 0xffffffec
   15260:	mul	r2, r2, r3
   15264:	ldr	r3, [fp, #-8]
   15268:	add	r3, r2, r3
   1526c:	str	r3, [fp, #-36]	; 0xffffffdc
   15270:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15274:	lsr	r3, r3, #16
   15278:	add	r3, r3, #1
   1527c:	str	r3, [fp, #-16]
   15280:	ldr	r3, [fp, #-8]
   15284:	lsl	r2, r3, #16
   15288:	ldr	r3, [fp, #-16]
   1528c:	ldr	r1, [fp, #-88]	; 0xffffffa8
   15290:	mul	r3, r1, r3
   15294:	sub	r3, r2, r3
   15298:	add	r3, r3, #65280	; 0xff00
   1529c:	add	r3, r3, #255	; 0xff
   152a0:	str	r3, [fp, #-8]
   152a4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   152a8:	lsl	r2, r3, #16
   152ac:	ldr	r3, [fp, #-8]
   152b0:	cmp	r2, r3
   152b4:	bhi	152d4 <__assert_fail@plt+0x4064>
   152b8:	ldr	r3, [fp, #-16]
   152bc:	sub	r3, r3, #1
   152c0:	str	r3, [fp, #-16]
   152c4:	ldr	r2, [fp, #-8]
   152c8:	ldr	r3, [fp, #-88]	; 0xffffffa8
   152cc:	add	r3, r2, r3
   152d0:	str	r3, [fp, #-8]
   152d4:	ldr	r3, [fp, #-20]	; 0xffffffec
   152d8:	lsl	r2, r3, #16
   152dc:	ldr	r3, [fp, #-16]
   152e0:	add	r3, r2, r3
   152e4:	str	r3, [fp, #-12]
   152e8:	ldr	r2, [fp, #-8]
   152ec:	ldr	r3, [fp, #-88]	; 0xffffffa8
   152f0:	cmp	r2, r3
   152f4:	bcc	15314 <__assert_fail@plt+0x40a4>
   152f8:	ldr	r3, [fp, #-12]
   152fc:	add	r3, r3, #1
   15300:	str	r3, [fp, #-12]
   15304:	ldr	r2, [fp, #-8]
   15308:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1530c:	sub	r3, r2, r3
   15310:	str	r3, [fp, #-8]
   15314:	ldr	r3, [fp, #-92]	; 0xffffffa4
   15318:	cmp	r3, #0
   1531c:	beq	1551c <__assert_fail@plt+0x42ac>
   15320:	ldr	r3, [fp, #-8]
   15324:	mvn	r3, r3
   15328:	str	r3, [fp, #-8]
   1532c:	ldr	r2, [fp, #-8]
   15330:	ldr	r3, [fp, #-92]	; 0xffffffa4
   15334:	add	r3, r2, r3
   15338:	str	r3, [fp, #-8]
   1533c:	ldr	r2, [fp, #-8]
   15340:	ldr	r3, [fp, #-92]	; 0xffffffa4
   15344:	cmp	r2, r3
   15348:	bcs	15394 <__assert_fail@plt+0x4124>
   1534c:	ldr	r3, [fp, #-12]
   15350:	sub	r3, r3, #1
   15354:	str	r3, [fp, #-12]
   15358:	ldr	r2, [fp, #-8]
   1535c:	ldr	r3, [fp, #-88]	; 0xffffffa8
   15360:	cmp	r2, r3
   15364:	bcc	15384 <__assert_fail@plt+0x4114>
   15368:	ldr	r3, [fp, #-12]
   1536c:	sub	r3, r3, #1
   15370:	str	r3, [fp, #-12]
   15374:	ldr	r2, [fp, #-8]
   15378:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1537c:	sub	r3, r2, r3
   15380:	str	r3, [fp, #-8]
   15384:	ldr	r2, [fp, #-8]
   15388:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1538c:	sub	r3, r2, r3
   15390:	str	r3, [fp, #-8]
   15394:	mov	r3, #32
   15398:	str	r3, [fp, #-40]	; 0xffffffd8
   1539c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   153a0:	str	r3, [fp, #-44]	; 0xffffffd4
   153a4:	ldr	r3, [fp, #-12]
   153a8:	str	r3, [fp, #-48]	; 0xffffffd0
   153ac:	ldr	r3, [fp, #-44]	; 0xffffffd4
   153b0:	uxth	r3, r3
   153b4:	str	r3, [fp, #-52]	; 0xffffffcc
   153b8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   153bc:	lsr	r3, r3, #16
   153c0:	str	r3, [fp, #-56]	; 0xffffffc8
   153c4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   153c8:	uxth	r3, r3
   153cc:	str	r3, [fp, #-60]	; 0xffffffc4
   153d0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   153d4:	lsr	r3, r3, #16
   153d8:	str	r3, [fp, #-64]	; 0xffffffc0
   153dc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   153e0:	ldr	r2, [fp, #-60]	; 0xffffffc4
   153e4:	mul	r3, r2, r3
   153e8:	str	r3, [fp, #-68]	; 0xffffffbc
   153ec:	ldr	r3, [fp, #-52]	; 0xffffffcc
   153f0:	ldr	r2, [fp, #-64]	; 0xffffffc0
   153f4:	mul	r3, r2, r3
   153f8:	str	r3, [fp, #-72]	; 0xffffffb8
   153fc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15400:	ldr	r2, [fp, #-60]	; 0xffffffc4
   15404:	mul	r3, r2, r3
   15408:	str	r3, [fp, #-76]	; 0xffffffb4
   1540c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15410:	ldr	r2, [fp, #-64]	; 0xffffffc0
   15414:	mul	r3, r2, r3
   15418:	str	r3, [fp, #-24]	; 0xffffffe8
   1541c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   15420:	lsr	r3, r3, #16
   15424:	ldr	r2, [fp, #-72]	; 0xffffffb8
   15428:	add	r3, r2, r3
   1542c:	str	r3, [fp, #-72]	; 0xffffffb8
   15430:	ldr	r2, [fp, #-72]	; 0xffffffb8
   15434:	ldr	r3, [fp, #-76]	; 0xffffffb4
   15438:	add	r3, r2, r3
   1543c:	str	r3, [fp, #-72]	; 0xffffffb8
   15440:	ldr	r2, [fp, #-72]	; 0xffffffb8
   15444:	ldr	r3, [fp, #-76]	; 0xffffffb4
   15448:	cmp	r2, r3
   1544c:	bcs	1545c <__assert_fail@plt+0x41ec>
   15450:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15454:	add	r3, r3, #65536	; 0x10000
   15458:	str	r3, [fp, #-24]	; 0xffffffe8
   1545c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   15460:	lsr	r2, r3, #16
   15464:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15468:	add	r3, r2, r3
   1546c:	str	r3, [fp, #-80]	; 0xffffffb0
   15470:	ldr	r3, [fp, #-72]	; 0xffffffb8
   15474:	lsl	r2, r3, #16
   15478:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1547c:	uxth	r3, r3
   15480:	add	r3, r2, r3
   15484:	str	r3, [fp, #-84]	; 0xffffffac
   15488:	ldr	r2, [fp, #-8]
   1548c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   15490:	add	r3, r2, r3
   15494:	str	r3, [fp, #-8]
   15498:	ldr	r2, [fp, #-8]
   1549c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   154a0:	cmp	r2, r3
   154a4:	bcs	1551c <__assert_fail@plt+0x42ac>
   154a8:	ldr	r3, [fp, #-12]
   154ac:	sub	r3, r3, #1
   154b0:	str	r3, [fp, #-12]
   154b4:	ldr	r2, [fp, #-8]
   154b8:	ldr	r3, [fp, #-88]	; 0xffffffa8
   154bc:	cmp	r2, r3
   154c0:	movhi	r3, #1
   154c4:	movls	r3, #0
   154c8:	uxtb	r3, r3
   154cc:	mov	r0, r3
   154d0:	ldr	r2, [fp, #-8]
   154d4:	ldr	r3, [fp, #-88]	; 0xffffffa8
   154d8:	cmp	r2, r3
   154dc:	moveq	r3, #1
   154e0:	movne	r3, #0
   154e4:	uxtb	r2, r3
   154e8:	ldr	r1, [fp, #-84]	; 0xffffffac
   154ec:	ldr	r3, [fp, #-92]	; 0xffffffa4
   154f0:	cmp	r1, r3
   154f4:	movhi	r3, #1
   154f8:	movls	r3, #0
   154fc:	uxtb	r3, r3
   15500:	and	r3, r3, r2
   15504:	uxtb	r3, r3
   15508:	orr	r3, r0, r3
   1550c:	mov	r2, r3
   15510:	ldr	r3, [fp, #-12]
   15514:	sub	r3, r3, r2
   15518:	str	r3, [fp, #-12]
   1551c:	ldr	r3, [fp, #-12]
   15520:	mov	r0, r3
   15524:	sub	sp, fp, #4
   15528:	pop	{fp, pc}
   1552c:	push	{fp, lr}
   15530:	add	fp, sp, #4
   15534:	sub	sp, sp, #24
   15538:	str	r0, [fp, #-24]	; 0xffffffe8
   1553c:	str	r1, [fp, #-28]	; 0xffffffe4
   15540:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15544:	cmp	r3, #0
   15548:	bne	15560 <__assert_fail@plt+0x42f0>
   1554c:	ldr	r3, [pc, #220]	; 15630 <__assert_fail@plt+0x43c0>
   15550:	ldr	r2, [pc, #220]	; 15634 <__assert_fail@plt+0x43c4>
   15554:	ldr	r1, [pc, #220]	; 15638 <__assert_fail@plt+0x43c8>
   15558:	ldr	r0, [pc, #220]	; 1563c <__assert_fail@plt+0x43cc>
   1555c:	bl	11270 <__assert_fail@plt>
   15560:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15564:	str	r3, [fp, #-8]
   15568:	mov	r3, #0
   1556c:	str	r3, [fp, #-12]
   15570:	mov	r3, #8
   15574:	str	r3, [fp, #-16]
   15578:	ldr	r3, [fp, #-16]
   1557c:	cmp	r3, #31
   15580:	bhi	155d0 <__assert_fail@plt+0x4360>
   15584:	b	155a4 <__assert_fail@plt+0x4334>
   15588:	ldr	r2, [fp, #-8]
   1558c:	ldr	r3, [fp, #-16]
   15590:	lsl	r3, r2, r3
   15594:	str	r3, [fp, #-8]
   15598:	ldr	r3, [fp, #-12]
   1559c:	add	r3, r3, #8
   155a0:	str	r3, [fp, #-12]
   155a4:	ldr	r3, [fp, #-8]
   155a8:	and	r3, r3, #-16777216	; 0xff000000
   155ac:	cmp	r3, #0
   155b0:	beq	15588 <__assert_fail@plt+0x4318>
   155b4:	b	155d0 <__assert_fail@plt+0x4360>
   155b8:	ldr	r3, [fp, #-8]
   155bc:	lsl	r3, r3, #1
   155c0:	str	r3, [fp, #-8]
   155c4:	ldr	r3, [fp, #-12]
   155c8:	add	r3, r3, #1
   155cc:	str	r3, [fp, #-12]
   155d0:	ldr	r3, [fp, #-8]
   155d4:	cmp	r3, #0
   155d8:	bge	155b8 <__assert_fail@plt+0x4348>
   155dc:	ldr	r3, [fp, #-12]
   155e0:	str	r3, [fp, #-20]	; 0xffffffec
   155e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   155e8:	ldr	r2, [fp, #-20]	; 0xffffffec
   155ec:	str	r2, [r3]
   155f0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   155f4:	ldr	r3, [fp, #-20]	; 0xffffffec
   155f8:	lsl	r2, r2, r3
   155fc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15600:	str	r2, [r3, #4]
   15604:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15608:	ldr	r3, [r3, #4]
   1560c:	mov	r1, #0
   15610:	mov	r0, r3
   15614:	bl	1515c <__assert_fail@plt+0x3eec>
   15618:	mov	r2, r0
   1561c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15620:	str	r2, [r3, #12]
   15624:	nop			; (mov r0, r0)
   15628:	sub	sp, fp, #4
   1562c:	pop	{fp, pc}
   15630:	andeq	r0, r4, r4, lsl #26
   15634:	andeq	r0, r0, r6, lsl #7
   15638:	andeq	r0, r4, r8, asr #12
   1563c:	muleq	r4, r8, r7
   15640:	push	{fp, lr}
   15644:	add	fp, sp, #4
   15648:	sub	sp, sp, #32
   1564c:	str	r0, [fp, #-24]	; 0xffffffe8
   15650:	str	r1, [fp, #-28]	; 0xffffffe4
   15654:	str	r2, [fp, #-32]	; 0xffffffe0
   15658:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1565c:	cmp	r3, #0
   15660:	bne	15678 <__assert_fail@plt+0x4408>
   15664:	ldr	r3, [pc, #280]	; 15784 <__assert_fail@plt+0x4514>
   15668:	ldr	r2, [pc, #280]	; 15788 <__assert_fail@plt+0x4518>
   1566c:	ldr	r1, [pc, #280]	; 1578c <__assert_fail@plt+0x451c>
   15670:	ldr	r0, [pc, #280]	; 15790 <__assert_fail@plt+0x4520>
   15674:	bl	11270 <__assert_fail@plt>
   15678:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1567c:	str	r3, [fp, #-8]
   15680:	mov	r3, #0
   15684:	str	r3, [fp, #-12]
   15688:	mov	r3, #8
   1568c:	str	r3, [fp, #-16]
   15690:	ldr	r3, [fp, #-16]
   15694:	cmp	r3, #31
   15698:	bhi	156e8 <__assert_fail@plt+0x4478>
   1569c:	b	156bc <__assert_fail@plt+0x444c>
   156a0:	ldr	r2, [fp, #-8]
   156a4:	ldr	r3, [fp, #-16]
   156a8:	lsl	r3, r2, r3
   156ac:	str	r3, [fp, #-8]
   156b0:	ldr	r3, [fp, #-12]
   156b4:	add	r3, r3, #8
   156b8:	str	r3, [fp, #-12]
   156bc:	ldr	r3, [fp, #-8]
   156c0:	and	r3, r3, #-16777216	; 0xff000000
   156c4:	cmp	r3, #0
   156c8:	beq	156a0 <__assert_fail@plt+0x4430>
   156cc:	b	156e8 <__assert_fail@plt+0x4478>
   156d0:	ldr	r3, [fp, #-8]
   156d4:	lsl	r3, r3, #1
   156d8:	str	r3, [fp, #-8]
   156dc:	ldr	r3, [fp, #-12]
   156e0:	add	r3, r3, #1
   156e4:	str	r3, [fp, #-12]
   156e8:	ldr	r3, [fp, #-8]
   156ec:	cmp	r3, #0
   156f0:	bge	156d0 <__assert_fail@plt+0x4460>
   156f4:	ldr	r3, [fp, #-12]
   156f8:	str	r3, [fp, #-20]	; 0xffffffec
   156fc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15700:	ldr	r2, [fp, #-20]	; 0xffffffec
   15704:	str	r2, [r3]
   15708:	ldr	r3, [fp, #-20]	; 0xffffffec
   1570c:	cmp	r3, #0
   15710:	beq	15748 <__assert_fail@plt+0x44d8>
   15714:	ldr	r2, [fp, #-28]	; 0xffffffe4
   15718:	ldr	r3, [fp, #-20]	; 0xffffffec
   1571c:	lsl	r2, r2, r3
   15720:	ldr	r3, [fp, #-20]	; 0xffffffec
   15724:	rsb	r3, r3, #32
   15728:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1572c:	lsr	r3, r1, r3
   15730:	orr	r3, r2, r3
   15734:	str	r3, [fp, #-28]	; 0xffffffe4
   15738:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1573c:	ldr	r3, [fp, #-20]	; 0xffffffec
   15740:	lsl	r3, r2, r3
   15744:	str	r3, [fp, #-32]	; 0xffffffe0
   15748:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1574c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   15750:	str	r2, [r3, #4]
   15754:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15758:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1575c:	str	r2, [r3, #8]
   15760:	ldr	r1, [fp, #-32]	; 0xffffffe0
   15764:	ldr	r0, [fp, #-28]	; 0xffffffe4
   15768:	bl	1515c <__assert_fail@plt+0x3eec>
   1576c:	mov	r2, r0
   15770:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15774:	str	r2, [r3, #12]
   15778:	nop			; (mov r0, r0)
   1577c:	sub	sp, fp, #4
   15780:	pop	{fp, pc}
   15784:	andeq	r0, r4, r8, lsl sp
   15788:	muleq	r0, r3, r3
   1578c:	andeq	r0, r4, r8, asr #12
   15790:	andeq	r0, r4, r0, lsr #15
   15794:	push	{fp, lr}
   15798:	add	fp, sp, #4
   1579c:	sub	sp, sp, #40	; 0x28
   157a0:	str	r0, [fp, #-32]	; 0xffffffe0
   157a4:	str	r1, [fp, #-36]	; 0xffffffdc
   157a8:	str	r2, [fp, #-40]	; 0xffffffd8
   157ac:	ldr	r3, [fp, #-40]	; 0xffffffd8
   157b0:	cmp	r3, #0
   157b4:	bgt	157cc <__assert_fail@plt+0x455c>
   157b8:	ldr	r3, [pc, #492]	; 159ac <__assert_fail@plt+0x473c>
   157bc:	mov	r2, #932	; 0x3a4
   157c0:	ldr	r1, [pc, #488]	; 159b0 <__assert_fail@plt+0x4740>
   157c4:	ldr	r0, [pc, #488]	; 159b4 <__assert_fail@plt+0x4744>
   157c8:	bl	11270 <__assert_fail@plt>
   157cc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   157d0:	cmp	r3, #1
   157d4:	bne	157f0 <__assert_fail@plt+0x4580>
   157d8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   157dc:	ldr	r3, [r3]
   157e0:	mov	r1, r3
   157e4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   157e8:	bl	1552c <__assert_fail@plt+0x42bc>
   157ec:	b	159a0 <__assert_fail@plt+0x4730>
   157f0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   157f4:	cmp	r3, #2
   157f8:	bne	15820 <__assert_fail@plt+0x45b0>
   157fc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15800:	add	r3, r3, #4
   15804:	ldr	r1, [r3]
   15808:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1580c:	ldr	r3, [r3]
   15810:	mov	r2, r3
   15814:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15818:	bl	15640 <__assert_fail@plt+0x43d0>
   1581c:	b	159a0 <__assert_fail@plt+0x4730>
   15820:	ldr	r3, [fp, #-40]	; 0xffffffd8
   15824:	sub	r3, r3, #-1073741823	; 0xc0000001
   15828:	lsl	r3, r3, #2
   1582c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   15830:	add	r3, r2, r3
   15834:	ldr	r3, [r3]
   15838:	str	r3, [fp, #-8]
   1583c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   15840:	sub	r3, r3, #-1073741822	; 0xc0000002
   15844:	lsl	r3, r3, #2
   15848:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1584c:	add	r3, r2, r3
   15850:	ldr	r3, [r3]
   15854:	str	r3, [fp, #-12]
   15858:	ldr	r3, [fp, #-8]
   1585c:	cmp	r3, #0
   15860:	bne	15878 <__assert_fail@plt+0x4608>
   15864:	ldr	r3, [pc, #320]	; 159ac <__assert_fail@plt+0x473c>
   15868:	ldr	r2, [pc, #328]	; 159b8 <__assert_fail@plt+0x4748>
   1586c:	ldr	r1, [pc, #316]	; 159b0 <__assert_fail@plt+0x4740>
   15870:	ldr	r0, [pc, #324]	; 159bc <__assert_fail@plt+0x474c>
   15874:	bl	11270 <__assert_fail@plt>
   15878:	ldr	r3, [fp, #-8]
   1587c:	str	r3, [fp, #-16]
   15880:	mov	r3, #0
   15884:	str	r3, [fp, #-20]	; 0xffffffec
   15888:	mov	r3, #8
   1588c:	str	r3, [fp, #-24]	; 0xffffffe8
   15890:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15894:	cmp	r3, #31
   15898:	bhi	158e8 <__assert_fail@plt+0x4678>
   1589c:	b	158bc <__assert_fail@plt+0x464c>
   158a0:	ldr	r2, [fp, #-16]
   158a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   158a8:	lsl	r3, r2, r3
   158ac:	str	r3, [fp, #-16]
   158b0:	ldr	r3, [fp, #-20]	; 0xffffffec
   158b4:	add	r3, r3, #8
   158b8:	str	r3, [fp, #-20]	; 0xffffffec
   158bc:	ldr	r3, [fp, #-16]
   158c0:	and	r3, r3, #-16777216	; 0xff000000
   158c4:	cmp	r3, #0
   158c8:	beq	158a0 <__assert_fail@plt+0x4630>
   158cc:	b	158e8 <__assert_fail@plt+0x4678>
   158d0:	ldr	r3, [fp, #-16]
   158d4:	lsl	r3, r3, #1
   158d8:	str	r3, [fp, #-16]
   158dc:	ldr	r3, [fp, #-20]	; 0xffffffec
   158e0:	add	r3, r3, #1
   158e4:	str	r3, [fp, #-20]	; 0xffffffec
   158e8:	ldr	r3, [fp, #-16]
   158ec:	cmp	r3, #0
   158f0:	bge	158d0 <__assert_fail@plt+0x4660>
   158f4:	ldr	r3, [fp, #-20]	; 0xffffffec
   158f8:	str	r3, [fp, #-28]	; 0xffffffe4
   158fc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15900:	ldr	r2, [fp, #-28]	; 0xffffffe4
   15904:	str	r2, [r3]
   15908:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1590c:	cmp	r3, #0
   15910:	beq	15970 <__assert_fail@plt+0x4700>
   15914:	ldr	r2, [fp, #-8]
   15918:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1591c:	lsl	r2, r2, r3
   15920:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15924:	rsb	r3, r3, #32
   15928:	ldr	r1, [fp, #-12]
   1592c:	lsr	r3, r1, r3
   15930:	orr	r3, r2, r3
   15934:	str	r3, [fp, #-8]
   15938:	ldr	r2, [fp, #-12]
   1593c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15940:	lsl	r2, r2, r3
   15944:	ldr	r3, [fp, #-40]	; 0xffffffd8
   15948:	sub	r3, r3, #-1073741821	; 0xc0000003
   1594c:	lsl	r3, r3, #2
   15950:	ldr	r1, [fp, #-36]	; 0xffffffdc
   15954:	add	r3, r1, r3
   15958:	ldr	r1, [r3]
   1595c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15960:	rsb	r3, r3, #32
   15964:	lsr	r3, r1, r3
   15968:	orr	r3, r2, r3
   1596c:	str	r3, [fp, #-12]
   15970:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15974:	ldr	r2, [fp, #-8]
   15978:	str	r2, [r3, #4]
   1597c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15980:	ldr	r2, [fp, #-12]
   15984:	str	r2, [r3, #8]
   15988:	ldr	r1, [fp, #-12]
   1598c:	ldr	r0, [fp, #-8]
   15990:	bl	1515c <__assert_fail@plt+0x3eec>
   15994:	mov	r2, r0
   15998:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1599c:	str	r2, [r3, #12]
   159a0:	nop			; (mov r0, r0)
   159a4:	sub	sp, fp, #4
   159a8:	pop	{fp, pc}
   159ac:	andeq	r0, r4, ip, lsr #26
   159b0:	andeq	r0, r4, r8, asr #12
   159b4:	andeq	r0, r4, r8, lsr #15
   159b8:			; <UNDEFINED> instruction: 0x000003b1
   159bc:	andeq	r0, r4, r0, lsr #15
   159c0:	push	{fp, lr}
   159c4:	add	fp, sp, #4
   159c8:	sub	sp, sp, #104	; 0x68
   159cc:	str	r0, [fp, #-96]	; 0xffffffa0
   159d0:	str	r1, [fp, #-100]	; 0xffffff9c
   159d4:	str	r2, [fp, #-104]	; 0xffffff98
   159d8:	str	r3, [fp, #-108]	; 0xffffff94
   159dc:	mov	r3, #0
   159e0:	str	r3, [fp, #-12]
   159e4:	mov	r3, #0
   159e8:	str	r3, [fp, #-16]
   159ec:	ldr	r3, [fp, #-108]	; 0xffffff94
   159f0:	ldr	r3, [r3]
   159f4:	cmp	r3, #0
   159f8:	beq	15a4c <__assert_fail@plt+0x47dc>
   159fc:	ldr	r3, [fp, #-96]	; 0xffffffa0
   15a00:	str	r3, [fp, #-12]
   15a04:	ldr	r3, [fp, #-12]
   15a08:	cmp	r3, #0
   15a0c:	bne	15a24 <__assert_fail@plt+0x47b4>
   15a10:	ldr	r3, [fp, #-104]	; 0xffffff98
   15a14:	str	r3, [fp, #-16]
   15a18:	ldr	r0, [fp, #-16]
   15a1c:	bl	1390c <__assert_fail@plt+0x269c>
   15a20:	str	r0, [fp, #-12]
   15a24:	ldr	r3, [fp, #-108]	; 0xffffff94
   15a28:	ldr	r3, [r3]
   15a2c:	ldr	r2, [fp, #-104]	; 0xffffff98
   15a30:	ldr	r1, [fp, #-100]	; 0xffffff9c
   15a34:	ldr	r0, [fp, #-12]
   15a38:	bl	14a94 <__assert_fail@plt+0x3824>
   15a3c:	str	r0, [fp, #-8]
   15a40:	ldr	r3, [fp, #-12]
   15a44:	str	r3, [fp, #-100]	; 0xffffff9c
   15a48:	b	15a54 <__assert_fail@plt+0x47e4>
   15a4c:	mov	r3, #0
   15a50:	str	r3, [fp, #-8]
   15a54:	ldr	r3, [fp, #-108]	; 0xffffff94
   15a58:	ldr	r3, [r3, #4]
   15a5c:	str	r3, [fp, #-32]	; 0xffffffe0
   15a60:	ldr	r3, [fp, #-108]	; 0xffffff94
   15a64:	ldr	r3, [r3, #12]
   15a68:	str	r3, [fp, #-36]	; 0xffffffdc
   15a6c:	b	15c8c <__assert_fail@plt+0x4a1c>
   15a70:	mov	r3, #32
   15a74:	str	r3, [fp, #-40]	; 0xffffffd8
   15a78:	ldr	r3, [fp, #-8]
   15a7c:	str	r3, [fp, #-44]	; 0xffffffd4
   15a80:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15a84:	str	r3, [fp, #-48]	; 0xffffffd0
   15a88:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15a8c:	uxth	r3, r3
   15a90:	str	r3, [fp, #-52]	; 0xffffffcc
   15a94:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15a98:	lsr	r3, r3, #16
   15a9c:	str	r3, [fp, #-56]	; 0xffffffc8
   15aa0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   15aa4:	uxth	r3, r3
   15aa8:	str	r3, [fp, #-60]	; 0xffffffc4
   15aac:	ldr	r3, [fp, #-48]	; 0xffffffd0
   15ab0:	lsr	r3, r3, #16
   15ab4:	str	r3, [fp, #-64]	; 0xffffffc0
   15ab8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   15abc:	ldr	r2, [fp, #-60]	; 0xffffffc4
   15ac0:	mul	r3, r2, r3
   15ac4:	str	r3, [fp, #-68]	; 0xffffffbc
   15ac8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   15acc:	ldr	r2, [fp, #-64]	; 0xffffffc0
   15ad0:	mul	r3, r2, r3
   15ad4:	str	r3, [fp, #-72]	; 0xffffffb8
   15ad8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15adc:	ldr	r2, [fp, #-60]	; 0xffffffc4
   15ae0:	mul	r3, r2, r3
   15ae4:	str	r3, [fp, #-76]	; 0xffffffb4
   15ae8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15aec:	ldr	r2, [fp, #-64]	; 0xffffffc0
   15af0:	mul	r3, r2, r3
   15af4:	str	r3, [fp, #-28]	; 0xffffffe4
   15af8:	ldr	r3, [fp, #-68]	; 0xffffffbc
   15afc:	lsr	r3, r3, #16
   15b00:	ldr	r2, [fp, #-72]	; 0xffffffb8
   15b04:	add	r3, r2, r3
   15b08:	str	r3, [fp, #-72]	; 0xffffffb8
   15b0c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   15b10:	ldr	r3, [fp, #-76]	; 0xffffffb4
   15b14:	add	r3, r2, r3
   15b18:	str	r3, [fp, #-72]	; 0xffffffb8
   15b1c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   15b20:	ldr	r3, [fp, #-76]	; 0xffffffb4
   15b24:	cmp	r2, r3
   15b28:	bcs	15b38 <__assert_fail@plt+0x48c8>
   15b2c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15b30:	add	r3, r3, #65536	; 0x10000
   15b34:	str	r3, [fp, #-28]	; 0xffffffe4
   15b38:	ldr	r3, [fp, #-72]	; 0xffffffb8
   15b3c:	lsr	r2, r3, #16
   15b40:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15b44:	add	r3, r2, r3
   15b48:	str	r3, [fp, #-20]	; 0xffffffec
   15b4c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   15b50:	lsl	r2, r3, #16
   15b54:	ldr	r3, [fp, #-68]	; 0xffffffbc
   15b58:	uxth	r3, r3
   15b5c:	add	r3, r2, r3
   15b60:	str	r3, [fp, #-80]	; 0xffffffb0
   15b64:	ldr	r3, [fp, #-104]	; 0xffffff98
   15b68:	lsl	r3, r3, #2
   15b6c:	ldr	r2, [fp, #-100]	; 0xffffff9c
   15b70:	add	r3, r2, r3
   15b74:	ldr	r2, [r3]
   15b78:	ldr	r3, [fp, #-80]	; 0xffffffb0
   15b7c:	add	r3, r2, r3
   15b80:	str	r3, [fp, #-84]	; 0xffffffac
   15b84:	ldr	r2, [fp, #-8]
   15b88:	ldr	r3, [fp, #-20]	; 0xffffffec
   15b8c:	add	r3, r2, r3
   15b90:	ldr	r1, [fp, #-84]	; 0xffffffac
   15b94:	ldr	r2, [fp, #-80]	; 0xffffffb0
   15b98:	cmp	r1, r2
   15b9c:	movcc	r2, #1
   15ba0:	movcs	r2, #0
   15ba4:	uxtb	r2, r2
   15ba8:	add	r3, r3, r2
   15bac:	add	r3, r3, #1
   15bb0:	str	r3, [fp, #-20]	; 0xffffffec
   15bb4:	ldr	r3, [fp, #-84]	; 0xffffffac
   15bb8:	str	r3, [fp, #-80]	; 0xffffffb0
   15bbc:	ldr	r3, [fp, #-104]	; 0xffffff98
   15bc0:	lsl	r3, r3, #2
   15bc4:	ldr	r2, [fp, #-100]	; 0xffffff9c
   15bc8:	add	r3, r2, r3
   15bcc:	ldr	r2, [r3]
   15bd0:	ldr	r3, [fp, #-20]	; 0xffffffec
   15bd4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   15bd8:	mul	r3, r1, r3
   15bdc:	sub	r3, r2, r3
   15be0:	str	r3, [fp, #-24]	; 0xffffffe8
   15be4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15be8:	ldr	r3, [fp, #-80]	; 0xffffffb0
   15bec:	cmp	r2, r3
   15bf0:	movhi	r3, #1
   15bf4:	movls	r3, #0
   15bf8:	uxtb	r3, r3
   15bfc:	rsb	r3, r3, #0
   15c00:	str	r3, [fp, #-88]	; 0xffffffa8
   15c04:	ldr	r2, [fp, #-20]	; 0xffffffec
   15c08:	ldr	r3, [fp, #-88]	; 0xffffffa8
   15c0c:	add	r3, r2, r3
   15c10:	str	r3, [fp, #-20]	; 0xffffffec
   15c14:	ldr	r2, [fp, #-88]	; 0xffffffa8
   15c18:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15c1c:	and	r3, r3, r2
   15c20:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15c24:	add	r3, r2, r3
   15c28:	str	r3, [fp, #-24]	; 0xffffffe8
   15c2c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15c30:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15c34:	cmp	r2, r3
   15c38:	bcc	15c58 <__assert_fail@plt+0x49e8>
   15c3c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15c40:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15c44:	sub	r3, r2, r3
   15c48:	str	r3, [fp, #-24]	; 0xffffffe8
   15c4c:	ldr	r3, [fp, #-20]	; 0xffffffec
   15c50:	add	r3, r3, #1
   15c54:	str	r3, [fp, #-20]	; 0xffffffec
   15c58:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15c5c:	str	r3, [fp, #-8]
   15c60:	ldr	r3, [fp, #-20]	; 0xffffffec
   15c64:	str	r3, [fp, #-92]	; 0xffffffa4
   15c68:	ldr	r3, [fp, #-96]	; 0xffffffa0
   15c6c:	cmp	r3, #0
   15c70:	beq	15c8c <__assert_fail@plt+0x4a1c>
   15c74:	ldr	r3, [fp, #-104]	; 0xffffff98
   15c78:	lsl	r3, r3, #2
   15c7c:	ldr	r2, [fp, #-96]	; 0xffffffa0
   15c80:	add	r3, r2, r3
   15c84:	ldr	r2, [fp, #-92]	; 0xffffffa4
   15c88:	str	r2, [r3]
   15c8c:	ldr	r3, [fp, #-104]	; 0xffffff98
   15c90:	sub	r3, r3, #1
   15c94:	str	r3, [fp, #-104]	; 0xffffff98
   15c98:	ldr	r3, [fp, #-104]	; 0xffffff98
   15c9c:	cmp	r3, #0
   15ca0:	bge	15a70 <__assert_fail@plt+0x4800>
   15ca4:	ldr	r3, [fp, #-16]
   15ca8:	cmp	r3, #0
   15cac:	beq	15cbc <__assert_fail@plt+0x4a4c>
   15cb0:	ldr	r1, [fp, #-16]
   15cb4:	ldr	r0, [fp, #-12]
   15cb8:	bl	139c0 <__assert_fail@plt+0x2750>
   15cbc:	ldr	r3, [fp, #-108]	; 0xffffff94
   15cc0:	ldr	r3, [r3]
   15cc4:	ldr	r2, [fp, #-8]
   15cc8:	lsr	r3, r2, r3
   15ccc:	mov	r0, r3
   15cd0:	sub	sp, fp, #4
   15cd4:	pop	{fp, pc}
   15cd8:	push	{fp, lr}
   15cdc:	add	fp, sp, #4
   15ce0:	sub	sp, sp, #176	; 0xb0
   15ce4:	str	r0, [fp, #-168]	; 0xffffff58
   15ce8:	str	r1, [fp, #-172]	; 0xffffff54
   15cec:	str	r2, [fp, #-176]	; 0xffffff50
   15cf0:	str	r3, [fp, #-180]	; 0xffffff4c
   15cf4:	ldr	r3, [fp, #-176]	; 0xffffff50
   15cf8:	cmp	r3, #1
   15cfc:	bgt	15d14 <__assert_fail@plt+0x4aa4>
   15d00:	ldr	r3, [pc, #1376]	; 16268 <__assert_fail@plt+0x4ff8>
   15d04:	ldr	r2, [pc, #1376]	; 1626c <__assert_fail@plt+0x4ffc>
   15d08:	ldr	r1, [pc, #1376]	; 16270 <__assert_fail@plt+0x5000>
   15d0c:	ldr	r0, [pc, #1376]	; 16274 <__assert_fail@plt+0x5004>
   15d10:	bl	11270 <__assert_fail@plt>
   15d14:	ldr	r3, [fp, #-180]	; 0xffffff4c
   15d18:	ldr	r3, [r3]
   15d1c:	str	r3, [fp, #-32]	; 0xffffffe0
   15d20:	ldr	r3, [fp, #-180]	; 0xffffff4c
   15d24:	ldr	r3, [r3, #4]
   15d28:	str	r3, [fp, #-36]	; 0xffffffdc
   15d2c:	ldr	r3, [fp, #-180]	; 0xffffff4c
   15d30:	ldr	r3, [r3, #8]
   15d34:	str	r3, [fp, #-40]	; 0xffffffd8
   15d38:	ldr	r3, [fp, #-180]	; 0xffffff4c
   15d3c:	ldr	r3, [r3, #12]
   15d40:	str	r3, [fp, #-44]	; 0xffffffd4
   15d44:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15d48:	cmp	r3, #0
   15d4c:	beq	15d6c <__assert_fail@plt+0x4afc>
   15d50:	ldr	r3, [fp, #-32]	; 0xffffffe0
   15d54:	ldr	r2, [fp, #-176]	; 0xffffff50
   15d58:	ldr	r1, [fp, #-172]	; 0xffffff54
   15d5c:	ldr	r0, [fp, #-172]	; 0xffffff54
   15d60:	bl	14a94 <__assert_fail@plt+0x3824>
   15d64:	str	r0, [fp, #-12]
   15d68:	b	15d74 <__assert_fail@plt+0x4b04>
   15d6c:	mov	r3, #0
   15d70:	str	r3, [fp, #-12]
   15d74:	ldr	r3, [fp, #-176]	; 0xffffff50
   15d78:	sub	r3, r3, #-1073741823	; 0xc0000001
   15d7c:	lsl	r3, r3, #2
   15d80:	ldr	r2, [fp, #-172]	; 0xffffff54
   15d84:	add	r3, r2, r3
   15d88:	ldr	r3, [r3]
   15d8c:	str	r3, [fp, #-16]
   15d90:	ldr	r3, [fp, #-176]	; 0xffffff50
   15d94:	sub	r3, r3, #2
   15d98:	str	r3, [fp, #-8]
   15d9c:	ldr	r3, [fp, #-8]
   15da0:	lsl	r3, r3, #2
   15da4:	ldr	r2, [fp, #-172]	; 0xffffff54
   15da8:	add	r3, r2, r3
   15dac:	ldr	r3, [r3]
   15db0:	str	r3, [fp, #-48]	; 0xffffffd0
   15db4:	mov	r3, #32
   15db8:	str	r3, [fp, #-52]	; 0xffffffcc
   15dbc:	ldr	r3, [fp, #-12]
   15dc0:	str	r3, [fp, #-56]	; 0xffffffc8
   15dc4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15dc8:	str	r3, [fp, #-60]	; 0xffffffc4
   15dcc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15dd0:	uxth	r3, r3
   15dd4:	str	r3, [fp, #-64]	; 0xffffffc0
   15dd8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15ddc:	lsr	r3, r3, #16
   15de0:	str	r3, [fp, #-68]	; 0xffffffbc
   15de4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   15de8:	uxth	r3, r3
   15dec:	str	r3, [fp, #-72]	; 0xffffffb8
   15df0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   15df4:	lsr	r3, r3, #16
   15df8:	str	r3, [fp, #-76]	; 0xffffffb4
   15dfc:	ldr	r3, [fp, #-64]	; 0xffffffc0
   15e00:	ldr	r2, [fp, #-72]	; 0xffffffb8
   15e04:	mul	r3, r2, r3
   15e08:	str	r3, [fp, #-80]	; 0xffffffb0
   15e0c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   15e10:	ldr	r2, [fp, #-76]	; 0xffffffb4
   15e14:	mul	r3, r2, r3
   15e18:	str	r3, [fp, #-84]	; 0xffffffac
   15e1c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   15e20:	ldr	r2, [fp, #-72]	; 0xffffffb8
   15e24:	mul	r3, r2, r3
   15e28:	str	r3, [fp, #-88]	; 0xffffffa8
   15e2c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   15e30:	ldr	r2, [fp, #-76]	; 0xffffffb4
   15e34:	mul	r3, r2, r3
   15e38:	str	r3, [fp, #-24]	; 0xffffffe8
   15e3c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   15e40:	lsr	r3, r3, #16
   15e44:	ldr	r2, [fp, #-84]	; 0xffffffac
   15e48:	add	r3, r2, r3
   15e4c:	str	r3, [fp, #-84]	; 0xffffffac
   15e50:	ldr	r2, [fp, #-84]	; 0xffffffac
   15e54:	ldr	r3, [fp, #-88]	; 0xffffffa8
   15e58:	add	r3, r2, r3
   15e5c:	str	r3, [fp, #-84]	; 0xffffffac
   15e60:	ldr	r2, [fp, #-84]	; 0xffffffac
   15e64:	ldr	r3, [fp, #-88]	; 0xffffffa8
   15e68:	cmp	r2, r3
   15e6c:	bcs	15e7c <__assert_fail@plt+0x4c0c>
   15e70:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15e74:	add	r3, r3, #65536	; 0x10000
   15e78:	str	r3, [fp, #-24]	; 0xffffffe8
   15e7c:	ldr	r3, [fp, #-84]	; 0xffffffac
   15e80:	lsr	r2, r3, #16
   15e84:	ldr	r3, [fp, #-24]	; 0xffffffe8
   15e88:	add	r3, r2, r3
   15e8c:	str	r3, [fp, #-20]	; 0xffffffec
   15e90:	ldr	r3, [fp, #-84]	; 0xffffffac
   15e94:	lsl	r2, r3, #16
   15e98:	ldr	r3, [fp, #-80]	; 0xffffffb0
   15e9c:	uxth	r3, r3
   15ea0:	add	r3, r2, r3
   15ea4:	str	r3, [fp, #-92]	; 0xffffffa4
   15ea8:	ldr	r2, [fp, #-92]	; 0xffffffa4
   15eac:	ldr	r3, [fp, #-16]
   15eb0:	add	r3, r2, r3
   15eb4:	str	r3, [fp, #-96]	; 0xffffffa0
   15eb8:	ldr	r2, [fp, #-20]	; 0xffffffec
   15ebc:	ldr	r3, [fp, #-12]
   15ec0:	add	r3, r2, r3
   15ec4:	ldr	r1, [fp, #-96]	; 0xffffffa0
   15ec8:	ldr	r2, [fp, #-92]	; 0xffffffa4
   15ecc:	cmp	r1, r2
   15ed0:	movcc	r2, #1
   15ed4:	movcs	r2, #0
   15ed8:	uxtb	r2, r2
   15edc:	add	r3, r3, r2
   15ee0:	str	r3, [fp, #-20]	; 0xffffffec
   15ee4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   15ee8:	str	r3, [fp, #-92]	; 0xffffffa4
   15eec:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15ef0:	ldr	r2, [fp, #-20]	; 0xffffffec
   15ef4:	mul	r3, r2, r3
   15ef8:	ldr	r2, [fp, #-16]
   15efc:	sub	r3, r2, r3
   15f00:	str	r3, [fp, #-12]
   15f04:	ldr	r2, [fp, #-48]	; 0xffffffd0
   15f08:	ldr	r3, [fp, #-40]	; 0xffffffd8
   15f0c:	sub	r3, r2, r3
   15f10:	str	r3, [fp, #-100]	; 0xffffff9c
   15f14:	ldr	r2, [fp, #-12]
   15f18:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15f1c:	sub	r3, r2, r3
   15f20:	ldr	r1, [fp, #-48]	; 0xffffffd0
   15f24:	ldr	r2, [fp, #-40]	; 0xffffffd8
   15f28:	cmp	r1, r2
   15f2c:	movcc	r2, #1
   15f30:	movcs	r2, #0
   15f34:	uxtb	r2, r2
   15f38:	sub	r3, r3, r2
   15f3c:	str	r3, [fp, #-12]
   15f40:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15f44:	str	r3, [fp, #-16]
   15f48:	mov	r3, #32
   15f4c:	str	r3, [fp, #-104]	; 0xffffff98
   15f50:	ldr	r3, [fp, #-40]	; 0xffffffd8
   15f54:	str	r3, [fp, #-108]	; 0xffffff94
   15f58:	ldr	r3, [fp, #-20]	; 0xffffffec
   15f5c:	str	r3, [fp, #-112]	; 0xffffff90
   15f60:	ldr	r3, [fp, #-108]	; 0xffffff94
   15f64:	uxth	r3, r3
   15f68:	str	r3, [fp, #-116]	; 0xffffff8c
   15f6c:	ldr	r3, [fp, #-108]	; 0xffffff94
   15f70:	lsr	r3, r3, #16
   15f74:	str	r3, [fp, #-120]	; 0xffffff88
   15f78:	ldr	r3, [fp, #-112]	; 0xffffff90
   15f7c:	uxth	r3, r3
   15f80:	str	r3, [fp, #-124]	; 0xffffff84
   15f84:	ldr	r3, [fp, #-112]	; 0xffffff90
   15f88:	lsr	r3, r3, #16
   15f8c:	str	r3, [fp, #-128]	; 0xffffff80
   15f90:	ldr	r3, [fp, #-116]	; 0xffffff8c
   15f94:	ldr	r2, [fp, #-124]	; 0xffffff84
   15f98:	mul	r3, r2, r3
   15f9c:	str	r3, [fp, #-132]	; 0xffffff7c
   15fa0:	ldr	r3, [fp, #-116]	; 0xffffff8c
   15fa4:	ldr	r2, [fp, #-128]	; 0xffffff80
   15fa8:	mul	r3, r2, r3
   15fac:	str	r3, [fp, #-136]	; 0xffffff78
   15fb0:	ldr	r3, [fp, #-120]	; 0xffffff88
   15fb4:	ldr	r2, [fp, #-124]	; 0xffffff84
   15fb8:	mul	r3, r2, r3
   15fbc:	str	r3, [fp, #-140]	; 0xffffff74
   15fc0:	ldr	r3, [fp, #-120]	; 0xffffff88
   15fc4:	ldr	r2, [fp, #-128]	; 0xffffff80
   15fc8:	mul	r3, r2, r3
   15fcc:	str	r3, [fp, #-28]	; 0xffffffe4
   15fd0:	ldr	r3, [fp, #-132]	; 0xffffff7c
   15fd4:	lsr	r3, r3, #16
   15fd8:	ldr	r2, [fp, #-136]	; 0xffffff78
   15fdc:	add	r3, r2, r3
   15fe0:	str	r3, [fp, #-136]	; 0xffffff78
   15fe4:	ldr	r2, [fp, #-136]	; 0xffffff78
   15fe8:	ldr	r3, [fp, #-140]	; 0xffffff74
   15fec:	add	r3, r2, r3
   15ff0:	str	r3, [fp, #-136]	; 0xffffff78
   15ff4:	ldr	r2, [fp, #-136]	; 0xffffff78
   15ff8:	ldr	r3, [fp, #-140]	; 0xffffff74
   15ffc:	cmp	r2, r3
   16000:	bcs	16010 <__assert_fail@plt+0x4da0>
   16004:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16008:	add	r3, r3, #65536	; 0x10000
   1600c:	str	r3, [fp, #-28]	; 0xffffffe4
   16010:	ldr	r3, [fp, #-136]	; 0xffffff78
   16014:	lsr	r2, r3, #16
   16018:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1601c:	add	r3, r2, r3
   16020:	str	r3, [fp, #-144]	; 0xffffff70
   16024:	ldr	r3, [fp, #-136]	; 0xffffff78
   16028:	lsl	r2, r3, #16
   1602c:	ldr	r3, [fp, #-132]	; 0xffffff7c
   16030:	uxth	r3, r3
   16034:	add	r3, r2, r3
   16038:	str	r3, [fp, #-148]	; 0xffffff6c
   1603c:	ldr	r2, [fp, #-16]
   16040:	ldr	r3, [fp, #-148]	; 0xffffff6c
   16044:	sub	r3, r2, r3
   16048:	str	r3, [fp, #-152]	; 0xffffff68
   1604c:	ldr	r2, [fp, #-12]
   16050:	ldr	r3, [fp, #-144]	; 0xffffff70
   16054:	sub	r3, r2, r3
   16058:	ldr	r1, [fp, #-16]
   1605c:	ldr	r2, [fp, #-148]	; 0xffffff6c
   16060:	cmp	r1, r2
   16064:	movcc	r2, #1
   16068:	movcs	r2, #0
   1606c:	uxtb	r2, r2
   16070:	sub	r3, r3, r2
   16074:	str	r3, [fp, #-12]
   16078:	ldr	r3, [fp, #-152]	; 0xffffff68
   1607c:	str	r3, [fp, #-16]
   16080:	ldr	r3, [fp, #-20]	; 0xffffffec
   16084:	add	r3, r3, #1
   16088:	str	r3, [fp, #-20]	; 0xffffffec
   1608c:	ldr	r2, [fp, #-12]
   16090:	ldr	r3, [fp, #-92]	; 0xffffffa4
   16094:	cmp	r2, r3
   16098:	movcs	r3, #1
   1609c:	movcc	r3, #0
   160a0:	uxtb	r3, r3
   160a4:	rsb	r3, r3, #0
   160a8:	str	r3, [fp, #-156]	; 0xffffff64
   160ac:	ldr	r2, [fp, #-20]	; 0xffffffec
   160b0:	ldr	r3, [fp, #-156]	; 0xffffff64
   160b4:	add	r3, r2, r3
   160b8:	str	r3, [fp, #-20]	; 0xffffffec
   160bc:	ldr	r2, [fp, #-156]	; 0xffffff64
   160c0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   160c4:	and	r2, r2, r3
   160c8:	ldr	r3, [fp, #-16]
   160cc:	add	r3, r2, r3
   160d0:	str	r3, [fp, #-160]	; 0xffffff60
   160d4:	ldr	r2, [fp, #-156]	; 0xffffff64
   160d8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   160dc:	and	r2, r2, r3
   160e0:	ldr	r3, [fp, #-12]
   160e4:	add	r3, r2, r3
   160e8:	ldr	r1, [fp, #-160]	; 0xffffff60
   160ec:	ldr	r2, [fp, #-16]
   160f0:	cmp	r1, r2
   160f4:	movcc	r2, #1
   160f8:	movcs	r2, #0
   160fc:	uxtb	r2, r2
   16100:	add	r3, r3, r2
   16104:	str	r3, [fp, #-12]
   16108:	ldr	r3, [fp, #-160]	; 0xffffff60
   1610c:	str	r3, [fp, #-16]
   16110:	ldr	r2, [fp, #-12]
   16114:	ldr	r3, [fp, #-36]	; 0xffffffdc
   16118:	cmp	r2, r3
   1611c:	bcc	16190 <__assert_fail@plt+0x4f20>
   16120:	ldr	r2, [fp, #-12]
   16124:	ldr	r3, [fp, #-36]	; 0xffffffdc
   16128:	cmp	r2, r3
   1612c:	bhi	16140 <__assert_fail@plt+0x4ed0>
   16130:	ldr	r2, [fp, #-16]
   16134:	ldr	r3, [fp, #-40]	; 0xffffffd8
   16138:	cmp	r2, r3
   1613c:	bcc	16190 <__assert_fail@plt+0x4f20>
   16140:	ldr	r3, [fp, #-20]	; 0xffffffec
   16144:	add	r3, r3, #1
   16148:	str	r3, [fp, #-20]	; 0xffffffec
   1614c:	ldr	r2, [fp, #-16]
   16150:	ldr	r3, [fp, #-40]	; 0xffffffd8
   16154:	sub	r3, r2, r3
   16158:	str	r3, [fp, #-164]	; 0xffffff5c
   1615c:	ldr	r2, [fp, #-12]
   16160:	ldr	r3, [fp, #-36]	; 0xffffffdc
   16164:	sub	r3, r2, r3
   16168:	ldr	r1, [fp, #-16]
   1616c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   16170:	cmp	r1, r2
   16174:	movcc	r2, #1
   16178:	movcs	r2, #0
   1617c:	uxtb	r2, r2
   16180:	sub	r3, r3, r2
   16184:	str	r3, [fp, #-12]
   16188:	ldr	r3, [fp, #-164]	; 0xffffff5c
   1618c:	str	r3, [fp, #-16]
   16190:	ldr	r3, [fp, #-168]	; 0xffffff58
   16194:	cmp	r3, #0
   16198:	beq	161b4 <__assert_fail@plt+0x4f44>
   1619c:	ldr	r3, [fp, #-8]
   161a0:	lsl	r3, r3, #2
   161a4:	ldr	r2, [fp, #-168]	; 0xffffff58
   161a8:	add	r3, r2, r3
   161ac:	ldr	r2, [fp, #-20]	; 0xffffffec
   161b0:	str	r2, [r3]
   161b4:	ldr	r3, [fp, #-8]
   161b8:	sub	r3, r3, #1
   161bc:	str	r3, [fp, #-8]
   161c0:	ldr	r3, [fp, #-8]
   161c4:	cmp	r3, #0
   161c8:	bge	15d9c <__assert_fail@plt+0x4b2c>
   161cc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   161d0:	cmp	r3, #0
   161d4:	beq	16240 <__assert_fail@plt+0x4fd0>
   161d8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   161dc:	rsb	r3, r3, #32
   161e0:	mvn	r2, #0
   161e4:	lsr	r2, r2, r3
   161e8:	ldr	r3, [fp, #-16]
   161ec:	and	r3, r3, r2
   161f0:	cmp	r3, #0
   161f4:	beq	1620c <__assert_fail@plt+0x4f9c>
   161f8:	ldr	r3, [pc, #104]	; 16268 <__assert_fail@plt+0x4ff8>
   161fc:	ldr	r2, [pc, #116]	; 16278 <__assert_fail@plt+0x5008>
   16200:	ldr	r1, [pc, #104]	; 16270 <__assert_fail@plt+0x5000>
   16204:	ldr	r0, [pc, #112]	; 1627c <__assert_fail@plt+0x500c>
   16208:	bl	11270 <__assert_fail@plt>
   1620c:	ldr	r2, [fp, #-16]
   16210:	ldr	r3, [fp, #-32]	; 0xffffffe0
   16214:	lsr	r2, r2, r3
   16218:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1621c:	rsb	r3, r3, #32
   16220:	ldr	r1, [fp, #-12]
   16224:	lsl	r3, r1, r3
   16228:	orr	r3, r2, r3
   1622c:	str	r3, [fp, #-16]
   16230:	ldr	r2, [fp, #-12]
   16234:	ldr	r3, [fp, #-32]	; 0xffffffe0
   16238:	lsr	r3, r2, r3
   1623c:	str	r3, [fp, #-12]
   16240:	ldr	r3, [fp, #-172]	; 0xffffff54
   16244:	add	r3, r3, #4
   16248:	ldr	r2, [fp, #-12]
   1624c:	str	r2, [r3]
   16250:	ldr	r3, [fp, #-172]	; 0xffffff54
   16254:	ldr	r2, [fp, #-16]
   16258:	str	r2, [r3]
   1625c:	nop			; (mov r0, r0)
   16260:	sub	sp, fp, #4
   16264:	pop	{fp, pc}
   16268:	andeq	r0, r4, r0, asr #26
   1626c:	strdeq	r0, [r0], -r1
   16270:	andeq	r0, r4, r8, asr #12
   16274:			; <UNDEFINED> instruction: 0x000407b0
   16278:	andeq	r0, r0, ip, lsl #8
   1627c:			; <UNDEFINED> instruction: 0x000407b8
   16280:	push	{fp, lr}
   16284:	add	fp, sp, #4
   16288:	sub	sp, sp, #168	; 0xa8
   1628c:	str	r0, [fp, #-160]	; 0xffffff60
   16290:	str	r1, [fp, #-164]	; 0xffffff5c
   16294:	str	r2, [fp, #-168]	; 0xffffff58
   16298:	str	r3, [fp, #-172]	; 0xffffff54
   1629c:	ldr	r3, [fp, #8]
   162a0:	cmp	r3, #2
   162a4:	bgt	162bc <__assert_fail@plt+0x504c>
   162a8:	ldr	r3, [pc, #1704]	; 16958 <__assert_fail@plt+0x56e8>
   162ac:	ldr	r2, [pc, #1704]	; 1695c <__assert_fail@plt+0x56ec>
   162b0:	ldr	r1, [pc, #1704]	; 16960 <__assert_fail@plt+0x56f0>
   162b4:	ldr	r0, [pc, #1704]	; 16964 <__assert_fail@plt+0x56f4>
   162b8:	bl	11270 <__assert_fail@plt>
   162bc:	ldr	r2, [fp, #-168]	; 0xffffff58
   162c0:	ldr	r3, [fp, #8]
   162c4:	cmp	r2, r3
   162c8:	bge	162e0 <__assert_fail@plt+0x5070>
   162cc:	ldr	r3, [pc, #1668]	; 16958 <__assert_fail@plt+0x56e8>
   162d0:	ldr	r2, [pc, #1680]	; 16968 <__assert_fail@plt+0x56f8>
   162d4:	ldr	r1, [pc, #1668]	; 16960 <__assert_fail@plt+0x56f0>
   162d8:	ldr	r0, [pc, #1676]	; 1696c <__assert_fail@plt+0x56fc>
   162dc:	bl	11270 <__assert_fail@plt>
   162e0:	ldr	r3, [fp, #8]
   162e4:	sub	r3, r3, #-1073741823	; 0xc0000001
   162e8:	lsl	r3, r3, #2
   162ec:	ldr	r2, [fp, #4]
   162f0:	add	r3, r2, r3
   162f4:	ldr	r3, [r3]
   162f8:	str	r3, [fp, #-28]	; 0xffffffe4
   162fc:	ldr	r3, [fp, #8]
   16300:	sub	r3, r3, #-1073741822	; 0xc0000002
   16304:	lsl	r3, r3, #2
   16308:	ldr	r2, [fp, #4]
   1630c:	add	r3, r2, r3
   16310:	ldr	r3, [r3]
   16314:	str	r3, [fp, #-32]	; 0xffffffe0
   16318:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1631c:	cmp	r3, #0
   16320:	blt	16338 <__assert_fail@plt+0x50c8>
   16324:	ldr	r3, [pc, #1580]	; 16958 <__assert_fail@plt+0x56e8>
   16328:	ldr	r2, [pc, #1600]	; 16970 <__assert_fail@plt+0x5700>
   1632c:	ldr	r1, [pc, #1580]	; 16960 <__assert_fail@plt+0x56f0>
   16330:	ldr	r0, [pc, #1596]	; 16974 <__assert_fail@plt+0x5704>
   16334:	bl	11270 <__assert_fail@plt>
   16338:	ldr	r2, [fp, #-168]	; 0xffffff58
   1633c:	ldr	r3, [fp, #8]
   16340:	sub	r3, r2, r3
   16344:	str	r3, [fp, #-8]
   16348:	ldr	r3, [fp, #8]
   1634c:	sub	r2, r3, #1
   16350:	ldr	r3, [fp, #-8]
   16354:	add	r3, r2, r3
   16358:	lsl	r3, r3, #2
   1635c:	ldr	r2, [fp, #-164]	; 0xffffff5c
   16360:	add	r3, r2, r3
   16364:	ldr	r3, [r3]
   16368:	str	r3, [fp, #-16]
   1636c:	ldr	r2, [fp, #-172]	; 0xffffff54
   16370:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16374:	cmp	r2, r3
   16378:	bne	163dc <__assert_fail@plt+0x516c>
   1637c:	ldr	r2, [fp, #-16]
   16380:	ldr	r3, [fp, #-32]	; 0xffffffe0
   16384:	cmp	r2, r3
   16388:	bne	163dc <__assert_fail@plt+0x516c>
   1638c:	mvn	r3, #0
   16390:	str	r3, [fp, #-12]
   16394:	ldr	r3, [fp, #-8]
   16398:	lsl	r3, r3, #2
   1639c:	ldr	r2, [fp, #-164]	; 0xffffff5c
   163a0:	add	r0, r2, r3
   163a4:	ldr	r3, [fp, #-12]
   163a8:	ldr	r2, [fp, #8]
   163ac:	ldr	r1, [fp, #4]
   163b0:	bl	1461c <__assert_fail@plt+0x33ac>
   163b4:	ldr	r3, [fp, #8]
   163b8:	sub	r2, r3, #1
   163bc:	ldr	r3, [fp, #-8]
   163c0:	add	r3, r2, r3
   163c4:	lsl	r3, r3, #2
   163c8:	ldr	r2, [fp, #-164]	; 0xffffff5c
   163cc:	add	r3, r2, r3
   163d0:	ldr	r3, [r3]
   163d4:	str	r3, [fp, #-172]	; 0xffffff54
   163d8:	b	168f4 <__assert_fail@plt+0x5684>
   163dc:	mov	r3, #32
   163e0:	str	r3, [fp, #-36]	; 0xffffffdc
   163e4:	ldr	r3, [fp, #-172]	; 0xffffff54
   163e8:	str	r3, [fp, #-40]	; 0xffffffd8
   163ec:	ldr	r3, [fp, #12]
   163f0:	str	r3, [fp, #-44]	; 0xffffffd4
   163f4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   163f8:	uxth	r3, r3
   163fc:	str	r3, [fp, #-48]	; 0xffffffd0
   16400:	ldr	r3, [fp, #-40]	; 0xffffffd8
   16404:	lsr	r3, r3, #16
   16408:	str	r3, [fp, #-52]	; 0xffffffcc
   1640c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16410:	uxth	r3, r3
   16414:	str	r3, [fp, #-56]	; 0xffffffc8
   16418:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1641c:	lsr	r3, r3, #16
   16420:	str	r3, [fp, #-60]	; 0xffffffc4
   16424:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16428:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1642c:	mul	r3, r2, r3
   16430:	str	r3, [fp, #-64]	; 0xffffffc0
   16434:	ldr	r3, [fp, #-48]	; 0xffffffd0
   16438:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1643c:	mul	r3, r2, r3
   16440:	str	r3, [fp, #-68]	; 0xffffffbc
   16444:	ldr	r3, [fp, #-52]	; 0xffffffcc
   16448:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1644c:	mul	r3, r2, r3
   16450:	str	r3, [fp, #-72]	; 0xffffffb8
   16454:	ldr	r3, [fp, #-52]	; 0xffffffcc
   16458:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1645c:	mul	r3, r2, r3
   16460:	str	r3, [fp, #-20]	; 0xffffffec
   16464:	ldr	r3, [fp, #-64]	; 0xffffffc0
   16468:	lsr	r3, r3, #16
   1646c:	ldr	r2, [fp, #-68]	; 0xffffffbc
   16470:	add	r3, r2, r3
   16474:	str	r3, [fp, #-68]	; 0xffffffbc
   16478:	ldr	r2, [fp, #-68]	; 0xffffffbc
   1647c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   16480:	add	r3, r2, r3
   16484:	str	r3, [fp, #-68]	; 0xffffffbc
   16488:	ldr	r2, [fp, #-68]	; 0xffffffbc
   1648c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   16490:	cmp	r2, r3
   16494:	bcs	164a4 <__assert_fail@plt+0x5234>
   16498:	ldr	r3, [fp, #-20]	; 0xffffffec
   1649c:	add	r3, r3, #65536	; 0x10000
   164a0:	str	r3, [fp, #-20]	; 0xffffffec
   164a4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   164a8:	lsr	r2, r3, #16
   164ac:	ldr	r3, [fp, #-20]	; 0xffffffec
   164b0:	add	r3, r2, r3
   164b4:	str	r3, [fp, #-12]
   164b8:	ldr	r3, [fp, #-68]	; 0xffffffbc
   164bc:	lsl	r2, r3, #16
   164c0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   164c4:	uxth	r3, r3
   164c8:	add	r3, r2, r3
   164cc:	str	r3, [fp, #-76]	; 0xffffffb4
   164d0:	ldr	r2, [fp, #-76]	; 0xffffffb4
   164d4:	ldr	r3, [fp, #-16]
   164d8:	add	r3, r2, r3
   164dc:	str	r3, [fp, #-80]	; 0xffffffb0
   164e0:	ldr	r2, [fp, #-12]
   164e4:	ldr	r3, [fp, #-172]	; 0xffffff54
   164e8:	add	r3, r2, r3
   164ec:	ldr	r1, [fp, #-80]	; 0xffffffb0
   164f0:	ldr	r2, [fp, #-76]	; 0xffffffb4
   164f4:	cmp	r1, r2
   164f8:	movcc	r2, #1
   164fc:	movcs	r2, #0
   16500:	uxtb	r2, r2
   16504:	add	r3, r3, r2
   16508:	str	r3, [fp, #-12]
   1650c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   16510:	str	r3, [fp, #-76]	; 0xffffffb4
   16514:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16518:	ldr	r2, [fp, #-12]
   1651c:	mul	r3, r2, r3
   16520:	ldr	r2, [fp, #-16]
   16524:	sub	r3, r2, r3
   16528:	str	r3, [fp, #-172]	; 0xffffff54
   1652c:	ldr	r3, [fp, #8]
   16530:	sub	r2, r3, #2
   16534:	ldr	r3, [fp, #-8]
   16538:	add	r3, r2, r3
   1653c:	lsl	r3, r3, #2
   16540:	ldr	r2, [fp, #-164]	; 0xffffff5c
   16544:	add	r3, r2, r3
   16548:	ldr	r2, [r3]
   1654c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   16550:	sub	r3, r2, r3
   16554:	str	r3, [fp, #-84]	; 0xffffffac
   16558:	ldr	r2, [fp, #-172]	; 0xffffff54
   1655c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16560:	sub	r3, r2, r3
   16564:	ldr	r2, [fp, #8]
   16568:	sub	r1, r2, #2
   1656c:	ldr	r2, [fp, #-8]
   16570:	add	r2, r1, r2
   16574:	lsl	r2, r2, #2
   16578:	ldr	r1, [fp, #-164]	; 0xffffff5c
   1657c:	add	r2, r1, r2
   16580:	ldr	r1, [r2]
   16584:	ldr	r2, [fp, #-32]	; 0xffffffe0
   16588:	cmp	r1, r2
   1658c:	movcc	r2, #1
   16590:	movcs	r2, #0
   16594:	uxtb	r2, r2
   16598:	sub	r3, r3, r2
   1659c:	str	r3, [fp, #-172]	; 0xffffff54
   165a0:	ldr	r3, [fp, #-84]	; 0xffffffac
   165a4:	str	r3, [fp, #-16]
   165a8:	mov	r3, #32
   165ac:	str	r3, [fp, #-88]	; 0xffffffa8
   165b0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   165b4:	str	r3, [fp, #-92]	; 0xffffffa4
   165b8:	ldr	r3, [fp, #-12]
   165bc:	str	r3, [fp, #-96]	; 0xffffffa0
   165c0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   165c4:	uxth	r3, r3
   165c8:	str	r3, [fp, #-100]	; 0xffffff9c
   165cc:	ldr	r3, [fp, #-92]	; 0xffffffa4
   165d0:	lsr	r3, r3, #16
   165d4:	str	r3, [fp, #-104]	; 0xffffff98
   165d8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   165dc:	uxth	r3, r3
   165e0:	str	r3, [fp, #-108]	; 0xffffff94
   165e4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   165e8:	lsr	r3, r3, #16
   165ec:	str	r3, [fp, #-112]	; 0xffffff90
   165f0:	ldr	r3, [fp, #-100]	; 0xffffff9c
   165f4:	ldr	r2, [fp, #-108]	; 0xffffff94
   165f8:	mul	r3, r2, r3
   165fc:	str	r3, [fp, #-116]	; 0xffffff8c
   16600:	ldr	r3, [fp, #-100]	; 0xffffff9c
   16604:	ldr	r2, [fp, #-112]	; 0xffffff90
   16608:	mul	r3, r2, r3
   1660c:	str	r3, [fp, #-120]	; 0xffffff88
   16610:	ldr	r3, [fp, #-104]	; 0xffffff98
   16614:	ldr	r2, [fp, #-108]	; 0xffffff94
   16618:	mul	r3, r2, r3
   1661c:	str	r3, [fp, #-124]	; 0xffffff84
   16620:	ldr	r3, [fp, #-104]	; 0xffffff98
   16624:	ldr	r2, [fp, #-112]	; 0xffffff90
   16628:	mul	r3, r2, r3
   1662c:	str	r3, [fp, #-24]	; 0xffffffe8
   16630:	ldr	r3, [fp, #-116]	; 0xffffff8c
   16634:	lsr	r3, r3, #16
   16638:	ldr	r2, [fp, #-120]	; 0xffffff88
   1663c:	add	r3, r2, r3
   16640:	str	r3, [fp, #-120]	; 0xffffff88
   16644:	ldr	r2, [fp, #-120]	; 0xffffff88
   16648:	ldr	r3, [fp, #-124]	; 0xffffff84
   1664c:	add	r3, r2, r3
   16650:	str	r3, [fp, #-120]	; 0xffffff88
   16654:	ldr	r2, [fp, #-120]	; 0xffffff88
   16658:	ldr	r3, [fp, #-124]	; 0xffffff84
   1665c:	cmp	r2, r3
   16660:	bcs	16670 <__assert_fail@plt+0x5400>
   16664:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16668:	add	r3, r3, #65536	; 0x10000
   1666c:	str	r3, [fp, #-24]	; 0xffffffe8
   16670:	ldr	r3, [fp, #-120]	; 0xffffff88
   16674:	lsr	r2, r3, #16
   16678:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1667c:	add	r3, r2, r3
   16680:	str	r3, [fp, #-128]	; 0xffffff80
   16684:	ldr	r3, [fp, #-120]	; 0xffffff88
   16688:	lsl	r2, r3, #16
   1668c:	ldr	r3, [fp, #-116]	; 0xffffff8c
   16690:	uxth	r3, r3
   16694:	add	r3, r2, r3
   16698:	str	r3, [fp, #-132]	; 0xffffff7c
   1669c:	ldr	r2, [fp, #-16]
   166a0:	ldr	r3, [fp, #-132]	; 0xffffff7c
   166a4:	sub	r3, r2, r3
   166a8:	str	r3, [fp, #-136]	; 0xffffff78
   166ac:	ldr	r2, [fp, #-172]	; 0xffffff54
   166b0:	ldr	r3, [fp, #-128]	; 0xffffff80
   166b4:	sub	r3, r2, r3
   166b8:	ldr	r1, [fp, #-16]
   166bc:	ldr	r2, [fp, #-132]	; 0xffffff7c
   166c0:	cmp	r1, r2
   166c4:	movcc	r2, #1
   166c8:	movcs	r2, #0
   166cc:	uxtb	r2, r2
   166d0:	sub	r3, r3, r2
   166d4:	str	r3, [fp, #-172]	; 0xffffff54
   166d8:	ldr	r3, [fp, #-136]	; 0xffffff78
   166dc:	str	r3, [fp, #-16]
   166e0:	ldr	r3, [fp, #-12]
   166e4:	add	r3, r3, #1
   166e8:	str	r3, [fp, #-12]
   166ec:	ldr	r2, [fp, #-172]	; 0xffffff54
   166f0:	ldr	r3, [fp, #-76]	; 0xffffffb4
   166f4:	cmp	r2, r3
   166f8:	movcs	r3, #1
   166fc:	movcc	r3, #0
   16700:	uxtb	r3, r3
   16704:	rsb	r3, r3, #0
   16708:	str	r3, [fp, #-140]	; 0xffffff74
   1670c:	ldr	r2, [fp, #-12]
   16710:	ldr	r3, [fp, #-140]	; 0xffffff74
   16714:	add	r3, r2, r3
   16718:	str	r3, [fp, #-12]
   1671c:	ldr	r2, [fp, #-140]	; 0xffffff74
   16720:	ldr	r3, [fp, #-32]	; 0xffffffe0
   16724:	and	r2, r2, r3
   16728:	ldr	r3, [fp, #-16]
   1672c:	add	r3, r2, r3
   16730:	str	r3, [fp, #-144]	; 0xffffff70
   16734:	ldr	r2, [fp, #-140]	; 0xffffff74
   16738:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1673c:	and	r2, r2, r3
   16740:	ldr	r3, [fp, #-172]	; 0xffffff54
   16744:	add	r3, r2, r3
   16748:	ldr	r1, [fp, #-144]	; 0xffffff70
   1674c:	ldr	r2, [fp, #-16]
   16750:	cmp	r1, r2
   16754:	movcc	r2, #1
   16758:	movcs	r2, #0
   1675c:	uxtb	r2, r2
   16760:	add	r3, r3, r2
   16764:	str	r3, [fp, #-172]	; 0xffffff54
   16768:	ldr	r3, [fp, #-144]	; 0xffffff70
   1676c:	str	r3, [fp, #-16]
   16770:	ldr	r2, [fp, #-172]	; 0xffffff54
   16774:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16778:	cmp	r2, r3
   1677c:	bcc	167f0 <__assert_fail@plt+0x5580>
   16780:	ldr	r2, [fp, #-172]	; 0xffffff54
   16784:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16788:	cmp	r2, r3
   1678c:	bhi	167a0 <__assert_fail@plt+0x5530>
   16790:	ldr	r2, [fp, #-16]
   16794:	ldr	r3, [fp, #-32]	; 0xffffffe0
   16798:	cmp	r2, r3
   1679c:	bcc	167f0 <__assert_fail@plt+0x5580>
   167a0:	ldr	r3, [fp, #-12]
   167a4:	add	r3, r3, #1
   167a8:	str	r3, [fp, #-12]
   167ac:	ldr	r2, [fp, #-16]
   167b0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   167b4:	sub	r3, r2, r3
   167b8:	str	r3, [fp, #-148]	; 0xffffff6c
   167bc:	ldr	r2, [fp, #-172]	; 0xffffff54
   167c0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   167c4:	sub	r3, r2, r3
   167c8:	ldr	r1, [fp, #-16]
   167cc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   167d0:	cmp	r1, r2
   167d4:	movcc	r2, #1
   167d8:	movcs	r2, #0
   167dc:	uxtb	r2, r2
   167e0:	sub	r3, r3, r2
   167e4:	str	r3, [fp, #-172]	; 0xffffff54
   167e8:	ldr	r3, [fp, #-148]	; 0xffffff6c
   167ec:	str	r3, [fp, #-16]
   167f0:	ldr	r3, [fp, #-8]
   167f4:	lsl	r3, r3, #2
   167f8:	ldr	r2, [fp, #-164]	; 0xffffff5c
   167fc:	add	r0, r2, r3
   16800:	ldr	r3, [fp, #8]
   16804:	sub	r2, r3, #2
   16808:	ldr	r3, [fp, #-12]
   1680c:	ldr	r1, [fp, #4]
   16810:	bl	1461c <__assert_fail@plt+0x33ac>
   16814:	str	r0, [fp, #-152]	; 0xffffff68
   16818:	ldr	r2, [fp, #-16]
   1681c:	ldr	r3, [fp, #-152]	; 0xffffff68
   16820:	cmp	r2, r3
   16824:	movcc	r3, #1
   16828:	movcs	r3, #0
   1682c:	uxtb	r3, r3
   16830:	str	r3, [fp, #-156]	; 0xffffff64
   16834:	ldr	r2, [fp, #-16]
   16838:	ldr	r3, [fp, #-152]	; 0xffffff68
   1683c:	sub	r3, r2, r3
   16840:	str	r3, [fp, #-16]
   16844:	ldr	r2, [fp, #-172]	; 0xffffff54
   16848:	ldr	r3, [fp, #-156]	; 0xffffff64
   1684c:	cmp	r2, r3
   16850:	movcc	r3, #1
   16854:	movcs	r3, #0
   16858:	uxtb	r3, r3
   1685c:	str	r3, [fp, #-152]	; 0xffffff68
   16860:	ldr	r2, [fp, #-172]	; 0xffffff54
   16864:	ldr	r3, [fp, #-156]	; 0xffffff64
   16868:	sub	r3, r2, r3
   1686c:	str	r3, [fp, #-172]	; 0xffffff54
   16870:	ldr	r3, [fp, #8]
   16874:	sub	r2, r3, #2
   16878:	ldr	r3, [fp, #-8]
   1687c:	add	r3, r2, r3
   16880:	lsl	r3, r3, #2
   16884:	ldr	r2, [fp, #-164]	; 0xffffff5c
   16888:	add	r3, r2, r3
   1688c:	ldr	r2, [fp, #-16]
   16890:	str	r2, [r3]
   16894:	ldr	r3, [fp, #-152]	; 0xffffff68
   16898:	cmp	r3, #0
   1689c:	beq	168f4 <__assert_fail@plt+0x5684>
   168a0:	ldr	r3, [fp, #-8]
   168a4:	lsl	r3, r3, #2
   168a8:	ldr	r2, [fp, #-164]	; 0xffffff5c
   168ac:	add	r0, r2, r3
   168b0:	ldr	r3, [fp, #-8]
   168b4:	lsl	r3, r3, #2
   168b8:	ldr	r2, [fp, #-164]	; 0xffffff5c
   168bc:	add	r1, r2, r3
   168c0:	ldr	r3, [fp, #8]
   168c4:	sub	r3, r3, #1
   168c8:	ldr	r2, [fp, #4]
   168cc:	bl	13dd8 <__assert_fail@plt+0x2b68>
   168d0:	mov	r2, r0
   168d4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   168d8:	add	r3, r2, r3
   168dc:	ldr	r2, [fp, #-172]	; 0xffffff54
   168e0:	add	r3, r2, r3
   168e4:	str	r3, [fp, #-172]	; 0xffffff54
   168e8:	ldr	r3, [fp, #-12]
   168ec:	sub	r3, r3, #1
   168f0:	str	r3, [fp, #-12]
   168f4:	ldr	r3, [fp, #-160]	; 0xffffff60
   168f8:	cmp	r3, #0
   168fc:	beq	16918 <__assert_fail@plt+0x56a8>
   16900:	ldr	r3, [fp, #-8]
   16904:	lsl	r3, r3, #2
   16908:	ldr	r2, [fp, #-160]	; 0xffffff60
   1690c:	add	r3, r2, r3
   16910:	ldr	r2, [fp, #-12]
   16914:	str	r2, [r3]
   16918:	ldr	r3, [fp, #-8]
   1691c:	sub	r3, r3, #1
   16920:	str	r3, [fp, #-8]
   16924:	ldr	r3, [fp, #-8]
   16928:	cmp	r3, #0
   1692c:	bge	16348 <__assert_fail@plt+0x50d8>
   16930:	ldr	r3, [fp, #8]
   16934:	sub	r3, r3, #-1073741823	; 0xc0000001
   16938:	lsl	r3, r3, #2
   1693c:	ldr	r2, [fp, #-164]	; 0xffffff5c
   16940:	add	r3, r2, r3
   16944:	ldr	r2, [fp, #-172]	; 0xffffff54
   16948:	str	r2, [r3]
   1694c:	nop			; (mov r0, r0)
   16950:	sub	sp, fp, #4
   16954:	pop	{fp, pc}
   16958:	andeq	r0, r4, r4, asr sp
   1695c:	andeq	r0, r0, r1, lsr #8
   16960:	andeq	r0, r4, r8, asr #12
   16964:	strdeq	r0, [r4], -r0	; <UNPREDICTABLE>
   16968:	andeq	r0, r0, r2, lsr #8
   1696c:	strdeq	r0, [r4], -r8
   16970:	andeq	r0, r0, r7, lsr #8
   16974:	andeq	r0, r4, r4, lsl #16
   16978:	push	{fp, lr}
   1697c:	add	fp, sp, #4
   16980:	sub	sp, sp, #48	; 0x30
   16984:	str	r0, [fp, #-24]	; 0xffffffe8
   16988:	str	r1, [fp, #-28]	; 0xffffffe4
   1698c:	str	r2, [fp, #-32]	; 0xffffffe0
   16990:	str	r3, [fp, #-36]	; 0xffffffdc
   16994:	ldr	r3, [fp, #4]
   16998:	cmp	r3, #0
   1699c:	bgt	169b4 <__assert_fail@plt+0x5744>
   169a0:	ldr	r3, [pc, #476]	; 16b84 <__assert_fail@plt+0x5914>
   169a4:	ldr	r2, [pc, #476]	; 16b88 <__assert_fail@plt+0x5918>
   169a8:	ldr	r1, [pc, #476]	; 16b8c <__assert_fail@plt+0x591c>
   169ac:	ldr	r0, [pc, #476]	; 16b90 <__assert_fail@plt+0x5920>
   169b0:	bl	11270 <__assert_fail@plt>
   169b4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   169b8:	ldr	r3, [fp, #4]
   169bc:	cmp	r2, r3
   169c0:	bge	169d8 <__assert_fail@plt+0x5768>
   169c4:	ldr	r3, [pc, #440]	; 16b84 <__assert_fail@plt+0x5914>
   169c8:	ldr	r2, [pc, #452]	; 16b94 <__assert_fail@plt+0x5924>
   169cc:	ldr	r1, [pc, #440]	; 16b8c <__assert_fail@plt+0x591c>
   169d0:	ldr	r0, [pc, #448]	; 16b98 <__assert_fail@plt+0x5928>
   169d4:	bl	11270 <__assert_fail@plt>
   169d8:	ldr	r3, [fp, #4]
   169dc:	cmp	r3, #1
   169e0:	bne	16a08 <__assert_fail@plt+0x5798>
   169e4:	ldr	r3, [fp, #8]
   169e8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   169ec:	ldr	r1, [fp, #-28]	; 0xffffffe4
   169f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   169f4:	bl	159c0 <__assert_fail@plt+0x4750>
   169f8:	mov	r2, r0
   169fc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16a00:	str	r2, [r3]
   16a04:	b	16b78 <__assert_fail@plt+0x5908>
   16a08:	ldr	r3, [fp, #4]
   16a0c:	cmp	r3, #2
   16a10:	bne	16a2c <__assert_fail@plt+0x57bc>
   16a14:	ldr	r3, [fp, #8]
   16a18:	ldr	r2, [fp, #-32]	; 0xffffffe0
   16a1c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16a20:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16a24:	bl	15cd8 <__assert_fail@plt+0x4a68>
   16a28:	b	16b78 <__assert_fail@plt+0x5908>
   16a2c:	ldr	r3, [fp, #8]
   16a30:	ldr	r2, [r3, #4]
   16a34:	ldr	r3, [fp, #4]
   16a38:	sub	r3, r3, #-1073741823	; 0xc0000001
   16a3c:	lsl	r3, r3, #2
   16a40:	ldr	r1, [fp, #-36]	; 0xffffffdc
   16a44:	add	r3, r1, r3
   16a48:	ldr	r3, [r3]
   16a4c:	cmp	r2, r3
   16a50:	beq	16a68 <__assert_fail@plt+0x57f8>
   16a54:	ldr	r3, [pc, #296]	; 16b84 <__assert_fail@plt+0x5914>
   16a58:	ldr	r2, [pc, #316]	; 16b9c <__assert_fail@plt+0x592c>
   16a5c:	ldr	r1, [pc, #296]	; 16b8c <__assert_fail@plt+0x591c>
   16a60:	ldr	r0, [pc, #312]	; 16ba0 <__assert_fail@plt+0x5930>
   16a64:	bl	11270 <__assert_fail@plt>
   16a68:	ldr	r3, [fp, #8]
   16a6c:	ldr	r2, [r3, #8]
   16a70:	ldr	r3, [fp, #4]
   16a74:	sub	r3, r3, #-1073741822	; 0xc0000002
   16a78:	lsl	r3, r3, #2
   16a7c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   16a80:	add	r3, r1, r3
   16a84:	ldr	r3, [r3]
   16a88:	cmp	r2, r3
   16a8c:	beq	16aa4 <__assert_fail@plt+0x5834>
   16a90:	ldr	r3, [pc, #236]	; 16b84 <__assert_fail@plt+0x5914>
   16a94:	ldr	r2, [pc, #264]	; 16ba4 <__assert_fail@plt+0x5934>
   16a98:	ldr	r1, [pc, #236]	; 16b8c <__assert_fail@plt+0x591c>
   16a9c:	ldr	r0, [pc, #260]	; 16ba8 <__assert_fail@plt+0x5938>
   16aa0:	bl	11270 <__assert_fail@plt>
   16aa4:	ldr	r3, [fp, #8]
   16aa8:	ldr	r3, [r3, #4]
   16aac:	cmp	r3, #0
   16ab0:	blt	16ac8 <__assert_fail@plt+0x5858>
   16ab4:	ldr	r3, [pc, #200]	; 16b84 <__assert_fail@plt+0x5914>
   16ab8:	ldr	r2, [pc, #236]	; 16bac <__assert_fail@plt+0x593c>
   16abc:	ldr	r1, [pc, #200]	; 16b8c <__assert_fail@plt+0x591c>
   16ac0:	ldr	r0, [pc, #232]	; 16bb0 <__assert_fail@plt+0x5940>
   16ac4:	bl	11270 <__assert_fail@plt>
   16ac8:	ldr	r3, [fp, #8]
   16acc:	ldr	r3, [r3]
   16ad0:	str	r3, [fp, #-12]
   16ad4:	ldr	r3, [fp, #-12]
   16ad8:	cmp	r3, #0
   16adc:	beq	16afc <__assert_fail@plt+0x588c>
   16ae0:	ldr	r3, [fp, #-12]
   16ae4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   16ae8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16aec:	ldr	r0, [fp, #-28]	; 0xffffffe4
   16af0:	bl	14a94 <__assert_fail@plt+0x3824>
   16af4:	str	r0, [fp, #-8]
   16af8:	b	16b04 <__assert_fail@plt+0x5894>
   16afc:	mov	r3, #0
   16b00:	str	r3, [fp, #-8]
   16b04:	ldr	r3, [fp, #8]
   16b08:	ldr	r3, [r3, #12]
   16b0c:	str	r3, [sp, #8]
   16b10:	ldr	r3, [fp, #4]
   16b14:	str	r3, [sp, #4]
   16b18:	ldr	r3, [fp, #-36]	; 0xffffffdc
   16b1c:	str	r3, [sp]
   16b20:	ldr	r3, [fp, #-8]
   16b24:	ldr	r2, [fp, #-32]	; 0xffffffe0
   16b28:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16b2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16b30:	bl	16280 <__assert_fail@plt+0x5010>
   16b34:	ldr	r3, [fp, #-12]
   16b38:	cmp	r3, #0
   16b3c:	beq	16b78 <__assert_fail@plt+0x5908>
   16b40:	ldr	r3, [fp, #-12]
   16b44:	ldr	r2, [fp, #4]
   16b48:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16b4c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   16b50:	bl	14c2c <__assert_fail@plt+0x39bc>
   16b54:	str	r0, [fp, #-16]
   16b58:	ldr	r3, [fp, #-16]
   16b5c:	cmp	r3, #0
   16b60:	beq	16b78 <__assert_fail@plt+0x5908>
   16b64:	ldr	r3, [pc, #24]	; 16b84 <__assert_fail@plt+0x5914>
   16b68:	ldr	r2, [pc, #68]	; 16bb4 <__assert_fail@plt+0x5944>
   16b6c:	ldr	r1, [pc, #24]	; 16b8c <__assert_fail@plt+0x591c>
   16b70:	ldr	r0, [pc, #64]	; 16bb8 <__assert_fail@plt+0x5948>
   16b74:	bl	11270 <__assert_fail@plt>
   16b78:	nop			; (mov r0, r0)
   16b7c:	sub	sp, fp, #4
   16b80:	pop	{fp, pc}
   16b84:	andeq	r0, r4, r4, ror #26
   16b88:	andeq	r0, r0, r9, asr r4
   16b8c:	andeq	r0, r4, r8, asr #12
   16b90:	andeq	r0, r4, r8, lsr #15
   16b94:	andeq	r0, r0, sl, asr r4
   16b98:	strdeq	r0, [r4], -r8
   16b9c:	andeq	r0, r0, r5, ror #8
   16ba0:	andeq	r0, r4, r4, lsr #16
   16ba4:	andeq	r0, r0, r6, ror #8
   16ba8:	andeq	r0, r4, r8, lsr r8
   16bac:	andeq	r0, r0, r7, ror #8
   16bb0:	andeq	r0, r4, ip, asr #16
   16bb4:	andeq	r0, r0, r2, ror r4
   16bb8:	andeq	r0, r4, r0, ror r8
   16bbc:	push	{fp, lr}
   16bc0:	add	fp, sp, #4
   16bc4:	sub	sp, sp, #48	; 0x30
   16bc8:	str	r0, [fp, #-32]	; 0xffffffe0
   16bcc:	str	r1, [fp, #-36]	; 0xffffffdc
   16bd0:	str	r2, [fp, #-40]	; 0xffffffd8
   16bd4:	str	r3, [fp, #-44]	; 0xffffffd4
   16bd8:	mov	r3, #0
   16bdc:	str	r3, [fp, #-8]
   16be0:	ldr	r3, [fp, #4]
   16be4:	cmp	r3, #0
   16be8:	bgt	16c00 <__assert_fail@plt+0x5990>
   16bec:	ldr	r3, [pc, #240]	; 16ce4 <__assert_fail@plt+0x5a74>
   16bf0:	ldr	r2, [pc, #240]	; 16ce8 <__assert_fail@plt+0x5a78>
   16bf4:	ldr	r1, [pc, #240]	; 16cec <__assert_fail@plt+0x5a7c>
   16bf8:	ldr	r0, [pc, #240]	; 16cf0 <__assert_fail@plt+0x5a80>
   16bfc:	bl	11270 <__assert_fail@plt>
   16c00:	ldr	r2, [fp, #-40]	; 0xffffffd8
   16c04:	ldr	r3, [fp, #4]
   16c08:	cmp	r2, r3
   16c0c:	bge	16c24 <__assert_fail@plt+0x59b4>
   16c10:	ldr	r3, [pc, #204]	; 16ce4 <__assert_fail@plt+0x5a74>
   16c14:	ldr	r2, [pc, #216]	; 16cf4 <__assert_fail@plt+0x5a84>
   16c18:	ldr	r1, [pc, #204]	; 16cec <__assert_fail@plt+0x5a7c>
   16c1c:	ldr	r0, [pc, #212]	; 16cf8 <__assert_fail@plt+0x5a88>
   16c20:	bl	11270 <__assert_fail@plt>
   16c24:	sub	r3, fp, #28
   16c28:	ldr	r2, [fp, #4]
   16c2c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16c30:	mov	r0, r3
   16c34:	bl	15794 <__assert_fail@plt+0x4524>
   16c38:	ldr	r3, [fp, #4]
   16c3c:	cmp	r3, #2
   16c40:	ble	16c9c <__assert_fail@plt+0x5a2c>
   16c44:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16c48:	cmp	r3, #0
   16c4c:	beq	16c9c <__assert_fail@plt+0x5a2c>
   16c50:	ldr	r0, [fp, #4]
   16c54:	bl	1390c <__assert_fail@plt+0x269c>
   16c58:	str	r0, [fp, #-8]
   16c5c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16c60:	ldr	r2, [fp, #4]
   16c64:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16c68:	ldr	r0, [fp, #-8]
   16c6c:	bl	14a94 <__assert_fail@plt+0x3824>
   16c70:	str	r0, [fp, #-12]
   16c74:	ldr	r3, [fp, #-12]
   16c78:	cmp	r3, #0
   16c7c:	beq	16c94 <__assert_fail@plt+0x5a24>
   16c80:	ldr	r3, [pc, #92]	; 16ce4 <__assert_fail@plt+0x5a74>
   16c84:	ldr	r2, [pc, #112]	; 16cfc <__assert_fail@plt+0x5a8c>
   16c88:	ldr	r1, [pc, #92]	; 16cec <__assert_fail@plt+0x5a7c>
   16c8c:	ldr	r0, [pc, #108]	; 16d00 <__assert_fail@plt+0x5a90>
   16c90:	bl	11270 <__assert_fail@plt>
   16c94:	ldr	r3, [fp, #-8]
   16c98:	str	r3, [fp, #-44]	; 0xffffffd4
   16c9c:	sub	r3, fp, #28
   16ca0:	str	r3, [sp, #4]
   16ca4:	ldr	r3, [fp, #4]
   16ca8:	str	r3, [sp]
   16cac:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16cb0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   16cb4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   16cb8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   16cbc:	bl	16978 <__assert_fail@plt+0x5708>
   16cc0:	ldr	r3, [fp, #-8]
   16cc4:	cmp	r3, #0
   16cc8:	beq	16cd8 <__assert_fail@plt+0x5a68>
   16ccc:	ldr	r1, [fp, #4]
   16cd0:	ldr	r0, [fp, #-8]
   16cd4:	bl	139c0 <__assert_fail@plt+0x2750>
   16cd8:	nop			; (mov r0, r0)
   16cdc:	sub	sp, fp, #4
   16ce0:	pop	{fp, pc}
   16ce4:	andeq	r0, r4, r8, ror sp
   16ce8:	andeq	r0, r0, ip, ror r4
   16cec:	andeq	r0, r4, r8, asr #12
   16cf0:	andeq	r0, r4, r8, lsr #15
   16cf4:	andeq	r0, r0, sp, ror r4
   16cf8:	strdeq	r0, [r4], -r8
   16cfc:	andeq	r0, r0, r3, lsl #9
   16d00:	andeq	r0, r4, r0, ror r8
   16d04:	push	{fp}		; (str fp, [sp, #-4]!)
   16d08:	add	fp, sp, #0
   16d0c:	sub	sp, sp, #12
   16d10:	str	r0, [fp, #-8]
   16d14:	ldr	r3, [fp, #-8]
   16d18:	cmp	r3, #16
   16d1c:	beq	16d8c <__assert_fail@plt+0x5b1c>
   16d20:	cmp	r3, #16
   16d24:	bhi	16d44 <__assert_fail@plt+0x5ad4>
   16d28:	cmp	r3, #4
   16d2c:	beq	16d7c <__assert_fail@plt+0x5b0c>
   16d30:	cmp	r3, #8
   16d34:	beq	16d84 <__assert_fail@plt+0x5b14>
   16d38:	cmp	r3, #2
   16d3c:	beq	16d74 <__assert_fail@plt+0x5b04>
   16d40:	b	16db4 <__assert_fail@plt+0x5b44>
   16d44:	cmp	r3, #64	; 0x40
   16d48:	beq	16d9c <__assert_fail@plt+0x5b2c>
   16d4c:	cmp	r3, #64	; 0x40
   16d50:	bhi	16d60 <__assert_fail@plt+0x5af0>
   16d54:	cmp	r3, #32
   16d58:	beq	16d94 <__assert_fail@plt+0x5b24>
   16d5c:	b	16db4 <__assert_fail@plt+0x5b44>
   16d60:	cmp	r3, #128	; 0x80
   16d64:	beq	16da4 <__assert_fail@plt+0x5b34>
   16d68:	cmp	r3, #256	; 0x100
   16d6c:	beq	16dac <__assert_fail@plt+0x5b3c>
   16d70:	b	16db4 <__assert_fail@plt+0x5b44>
   16d74:	mov	r3, #1
   16d78:	b	16db8 <__assert_fail@plt+0x5b48>
   16d7c:	mov	r3, #2
   16d80:	b	16db8 <__assert_fail@plt+0x5b48>
   16d84:	mov	r3, #3
   16d88:	b	16db8 <__assert_fail@plt+0x5b48>
   16d8c:	mov	r3, #4
   16d90:	b	16db8 <__assert_fail@plt+0x5b48>
   16d94:	mov	r3, #5
   16d98:	b	16db8 <__assert_fail@plt+0x5b48>
   16d9c:	mov	r3, #6
   16da0:	b	16db8 <__assert_fail@plt+0x5b48>
   16da4:	mov	r3, #7
   16da8:	b	16db8 <__assert_fail@plt+0x5b48>
   16dac:	mov	r3, #8
   16db0:	b	16db8 <__assert_fail@plt+0x5b48>
   16db4:	mov	r3, #0
   16db8:	mov	r0, r3
   16dbc:	add	sp, fp, #0
   16dc0:	pop	{fp}		; (ldr fp, [sp], #4)
   16dc4:	bx	lr
   16dc8:	push	{fp, lr}
   16dcc:	add	fp, sp, #4
   16dd0:	sub	sp, sp, #24
   16dd4:	str	r0, [fp, #-24]	; 0xffffffe8
   16dd8:	str	r1, [fp, #-28]	; 0xffffffe4
   16ddc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   16de0:	mvn	r0, #0
   16de4:	bl	3f560 <__assert_fail@plt+0x2e2f0>
   16de8:	mov	r3, r0
   16dec:	str	r3, [fp, #-16]
   16df0:	mov	r3, #1
   16df4:	str	r3, [fp, #-12]
   16df8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16dfc:	str	r3, [fp, #-8]
   16e00:	b	16e20 <__assert_fail@plt+0x5bb0>
   16e04:	ldr	r3, [fp, #-8]
   16e08:	ldr	r2, [fp, #-28]	; 0xffffffe4
   16e0c:	mul	r3, r2, r3
   16e10:	str	r3, [fp, #-8]
   16e14:	ldr	r3, [fp, #-12]
   16e18:	add	r3, r3, #1
   16e1c:	str	r3, [fp, #-12]
   16e20:	ldr	r2, [fp, #-8]
   16e24:	ldr	r3, [fp, #-16]
   16e28:	cmp	r2, r3
   16e2c:	bls	16e04 <__assert_fail@plt+0x5b94>
   16e30:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16e34:	ldr	r2, [fp, #-12]
   16e38:	str	r2, [r3]
   16e3c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16e40:	ldr	r2, [fp, #-8]
   16e44:	str	r2, [r3, #4]
   16e48:	nop			; (mov r0, r0)
   16e4c:	sub	sp, fp, #4
   16e50:	pop	{fp, pc}
   16e54:	push	{fp, lr}
   16e58:	add	fp, sp, #4
   16e5c:	sub	sp, sp, #24
   16e60:	str	r0, [fp, #-24]	; 0xffffffe8
   16e64:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16e68:	cmp	r3, #0
   16e6c:	bne	16e84 <__assert_fail@plt+0x5c14>
   16e70:	ldr	r3, [pc, #164]	; 16f1c <__assert_fail@plt+0x5cac>
   16e74:	ldr	r2, [pc, #164]	; 16f20 <__assert_fail@plt+0x5cb0>
   16e78:	ldr	r1, [pc, #164]	; 16f24 <__assert_fail@plt+0x5cb4>
   16e7c:	ldr	r0, [pc, #164]	; 16f28 <__assert_fail@plt+0x5cb8>
   16e80:	bl	11270 <__assert_fail@plt>
   16e84:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16e88:	str	r3, [fp, #-8]
   16e8c:	mov	r3, #0
   16e90:	str	r3, [fp, #-12]
   16e94:	mov	r3, #8
   16e98:	str	r3, [fp, #-16]
   16e9c:	ldr	r3, [fp, #-16]
   16ea0:	cmp	r3, #31
   16ea4:	bhi	16ef4 <__assert_fail@plt+0x5c84>
   16ea8:	b	16ec8 <__assert_fail@plt+0x5c58>
   16eac:	ldr	r2, [fp, #-8]
   16eb0:	ldr	r3, [fp, #-16]
   16eb4:	lsl	r3, r2, r3
   16eb8:	str	r3, [fp, #-8]
   16ebc:	ldr	r3, [fp, #-12]
   16ec0:	add	r3, r3, #8
   16ec4:	str	r3, [fp, #-12]
   16ec8:	ldr	r3, [fp, #-8]
   16ecc:	and	r3, r3, #-16777216	; 0xff000000
   16ed0:	cmp	r3, #0
   16ed4:	beq	16eac <__assert_fail@plt+0x5c3c>
   16ed8:	b	16ef4 <__assert_fail@plt+0x5c84>
   16edc:	ldr	r3, [fp, #-8]
   16ee0:	lsl	r3, r3, #1
   16ee4:	str	r3, [fp, #-8]
   16ee8:	ldr	r3, [fp, #-12]
   16eec:	add	r3, r3, #1
   16ef0:	str	r3, [fp, #-12]
   16ef4:	ldr	r3, [fp, #-8]
   16ef8:	cmp	r3, #0
   16efc:	bge	16edc <__assert_fail@plt+0x5c6c>
   16f00:	ldr	r3, [fp, #-12]
   16f04:	str	r3, [fp, #-20]	; 0xffffffec
   16f08:	ldr	r3, [fp, #-20]	; 0xffffffec
   16f0c:	rsb	r3, r3, #32
   16f10:	mov	r0, r3
   16f14:	sub	sp, fp, #4
   16f18:	pop	{fp, pc}
   16f1c:	andeq	r0, r4, r4, lsl #27
   16f20:			; <UNDEFINED> instruction: 0x000004ba
   16f24:	andeq	r0, r4, r8, asr #12
   16f28:	andeq	r0, r4, ip, ror r8
   16f2c:	push	{r4, fp, lr}
   16f30:	add	fp, sp, #8
   16f34:	sub	sp, sp, #44	; 0x2c
   16f38:	str	r0, [fp, #-40]	; 0xffffffd8
   16f3c:	str	r1, [fp, #-44]	; 0xffffffd4
   16f40:	str	r2, [fp, #-48]	; 0xffffffd0
   16f44:	str	r3, [fp, #-52]	; 0xffffffcc
   16f48:	ldr	r3, [fp, #-52]	; 0xffffffcc
   16f4c:	sub	r3, r3, #1
   16f50:	lsl	r4, r3, #5
   16f54:	ldr	r3, [fp, #-52]	; 0xffffffcc
   16f58:	sub	r3, r3, #-1073741823	; 0xc0000001
   16f5c:	lsl	r3, r3, #2
   16f60:	ldr	r2, [fp, #-48]	; 0xffffffd0
   16f64:	add	r3, r2, r3
   16f68:	ldr	r3, [r3]
   16f6c:	mov	r0, r3
   16f70:	bl	16e54 <__assert_fail@plt+0x5be4>
   16f74:	mov	r3, r0
   16f78:	add	r2, r4, r3
   16f7c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16f80:	add	r3, r2, r3
   16f84:	sub	r3, r3, #1
   16f88:	ldr	r1, [fp, #-44]	; 0xffffffd4
   16f8c:	mov	r0, r3
   16f90:	bl	3f560 <__assert_fail@plt+0x2e2f0>
   16f94:	mov	r3, r0
   16f98:	str	r3, [fp, #-32]	; 0xffffffe0
   16f9c:	mov	r2, #1
   16fa0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16fa4:	lsl	r3, r2, r3
   16fa8:	uxtb	r3, r3
   16fac:	sub	r3, r3, #1
   16fb0:	strb	r3, [fp, #-33]	; 0xffffffdf
   16fb4:	mov	r3, #0
   16fb8:	str	r3, [fp, #-20]	; 0xffffffec
   16fbc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   16fc0:	str	r3, [fp, #-16]
   16fc4:	mov	r3, #0
   16fc8:	str	r3, [fp, #-24]	; 0xffffffe8
   16fcc:	b	17088 <__assert_fail@plt+0x5e18>
   16fd0:	ldr	r3, [fp, #-20]	; 0xffffffec
   16fd4:	lsl	r3, r3, #2
   16fd8:	ldr	r2, [fp, #-48]	; 0xffffffd0
   16fdc:	add	r3, r2, r3
   16fe0:	ldr	r2, [r3]
   16fe4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16fe8:	lsr	r3, r2, r3
   16fec:	strb	r3, [fp, #-25]	; 0xffffffe7
   16ff0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16ff4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   16ff8:	add	r3, r2, r3
   16ffc:	str	r3, [fp, #-24]	; 0xffffffe8
   17000:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17004:	cmp	r3, #31
   17008:	bls	17068 <__assert_fail@plt+0x5df8>
   1700c:	ldr	r3, [fp, #-20]	; 0xffffffec
   17010:	add	r3, r3, #1
   17014:	str	r3, [fp, #-20]	; 0xffffffec
   17018:	ldr	r2, [fp, #-20]	; 0xffffffec
   1701c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   17020:	cmp	r2, r3
   17024:	bge	17068 <__assert_fail@plt+0x5df8>
   17028:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1702c:	sub	r3, r3, #32
   17030:	str	r3, [fp, #-24]	; 0xffffffe8
   17034:	ldr	r3, [fp, #-20]	; 0xffffffec
   17038:	lsl	r3, r3, #2
   1703c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   17040:	add	r3, r2, r3
   17044:	ldr	r2, [r3]
   17048:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1704c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17050:	sub	r3, r1, r3
   17054:	lsl	r3, r2, r3
   17058:	uxtb	r2, r3
   1705c:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   17060:	orr	r3, r2, r3
   17064:	strb	r3, [fp, #-25]	; 0xffffffe7
   17068:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1706c:	ldr	r3, [fp, #-16]
   17070:	add	r3, r2, r3
   17074:	ldrb	r1, [fp, #-25]	; 0xffffffe7
   17078:	ldrb	r2, [fp, #-33]	; 0xffffffdf
   1707c:	and	r2, r2, r1
   17080:	uxtb	r2, r2
   17084:	strb	r2, [r3]
   17088:	ldr	r3, [fp, #-16]
   1708c:	sub	r2, r3, #1
   17090:	str	r2, [fp, #-16]
   17094:	cmp	r3, #0
   17098:	bne	16fd0 <__assert_fail@plt+0x5d60>
   1709c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   170a0:	mov	r0, r3
   170a4:	sub	sp, fp, #8
   170a8:	pop	{r4, fp, pc}
   170ac:	push	{fp, lr}
   170b0:	add	fp, sp, #4
   170b4:	sub	sp, sp, #96	; 0x60
   170b8:	str	r0, [fp, #-88]	; 0xffffffa8
   170bc:	str	r1, [fp, #-92]	; 0xffffffa4
   170c0:	str	r2, [fp, #-96]	; 0xffffffa0
   170c4:	mov	r3, #0
   170c8:	str	r3, [fp, #-8]
   170cc:	b	17358 <__assert_fail@plt+0x60e8>
   170d0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   170d4:	ldr	r3, [r3]
   170d8:	rsb	r3, r3, #32
   170dc:	ldr	r2, [fp, #-92]	; 0xffffffa4
   170e0:	lsr	r3, r2, r3
   170e4:	str	r3, [fp, #-24]	; 0xffffffe8
   170e8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   170ec:	ldr	r3, [r3]
   170f0:	ldr	r2, [fp, #-92]	; 0xffffffa4
   170f4:	lsl	r3, r2, r3
   170f8:	str	r3, [fp, #-28]	; 0xffffffe4
   170fc:	mov	r3, #32
   17100:	str	r3, [fp, #-32]	; 0xffffffe0
   17104:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17108:	str	r3, [fp, #-36]	; 0xffffffdc
   1710c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17110:	ldr	r3, [r3, #12]
   17114:	str	r3, [fp, #-40]	; 0xffffffd8
   17118:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1711c:	uxth	r3, r3
   17120:	str	r3, [fp, #-44]	; 0xffffffd4
   17124:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17128:	lsr	r3, r3, #16
   1712c:	str	r3, [fp, #-48]	; 0xffffffd0
   17130:	ldr	r3, [fp, #-40]	; 0xffffffd8
   17134:	uxth	r3, r3
   17138:	str	r3, [fp, #-52]	; 0xffffffcc
   1713c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   17140:	lsr	r3, r3, #16
   17144:	str	r3, [fp, #-56]	; 0xffffffc8
   17148:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1714c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   17150:	mul	r3, r2, r3
   17154:	str	r3, [fp, #-60]	; 0xffffffc4
   17158:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1715c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   17160:	mul	r3, r2, r3
   17164:	str	r3, [fp, #-64]	; 0xffffffc0
   17168:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1716c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   17170:	mul	r3, r2, r3
   17174:	str	r3, [fp, #-68]	; 0xffffffbc
   17178:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1717c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   17180:	mul	r3, r2, r3
   17184:	str	r3, [fp, #-20]	; 0xffffffec
   17188:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1718c:	lsr	r3, r3, #16
   17190:	ldr	r2, [fp, #-64]	; 0xffffffc0
   17194:	add	r3, r2, r3
   17198:	str	r3, [fp, #-64]	; 0xffffffc0
   1719c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   171a0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   171a4:	add	r3, r2, r3
   171a8:	str	r3, [fp, #-64]	; 0xffffffc0
   171ac:	ldr	r2, [fp, #-64]	; 0xffffffc0
   171b0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   171b4:	cmp	r2, r3
   171b8:	bcs	171c8 <__assert_fail@plt+0x5f58>
   171bc:	ldr	r3, [fp, #-20]	; 0xffffffec
   171c0:	add	r3, r3, #65536	; 0x10000
   171c4:	str	r3, [fp, #-20]	; 0xffffffec
   171c8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   171cc:	lsr	r2, r3, #16
   171d0:	ldr	r3, [fp, #-20]	; 0xffffffec
   171d4:	add	r3, r2, r3
   171d8:	str	r3, [fp, #-12]
   171dc:	ldr	r3, [fp, #-64]	; 0xffffffc0
   171e0:	lsl	r2, r3, #16
   171e4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   171e8:	uxth	r3, r3
   171ec:	add	r3, r2, r3
   171f0:	str	r3, [fp, #-72]	; 0xffffffb8
   171f4:	ldr	r2, [fp, #-72]	; 0xffffffb8
   171f8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   171fc:	add	r3, r2, r3
   17200:	str	r3, [fp, #-76]	; 0xffffffb4
   17204:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17208:	ldr	r3, [fp, #-12]
   1720c:	add	r3, r2, r3
   17210:	ldr	r1, [fp, #-76]	; 0xffffffb4
   17214:	ldr	r2, [fp, #-72]	; 0xffffffb8
   17218:	cmp	r1, r2
   1721c:	movcc	r2, #1
   17220:	movcs	r2, #0
   17224:	uxtb	r2, r2
   17228:	add	r3, r3, r2
   1722c:	add	r3, r3, #1
   17230:	str	r3, [fp, #-12]
   17234:	ldr	r3, [fp, #-76]	; 0xffffffb4
   17238:	str	r3, [fp, #-72]	; 0xffffffb8
   1723c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17240:	ldr	r3, [r3, #4]
   17244:	ldr	r2, [fp, #-12]
   17248:	mul	r3, r2, r3
   1724c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   17250:	sub	r3, r2, r3
   17254:	str	r3, [fp, #-16]
   17258:	ldr	r2, [fp, #-16]
   1725c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   17260:	cmp	r2, r3
   17264:	movhi	r3, #1
   17268:	movls	r3, #0
   1726c:	uxtb	r3, r3
   17270:	rsb	r3, r3, #0
   17274:	str	r3, [fp, #-80]	; 0xffffffb0
   17278:	ldr	r2, [fp, #-12]
   1727c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   17280:	add	r3, r2, r3
   17284:	str	r3, [fp, #-12]
   17288:	ldr	r3, [fp, #-96]	; 0xffffffa0
   1728c:	ldr	r2, [r3, #4]
   17290:	ldr	r3, [fp, #-80]	; 0xffffffb0
   17294:	and	r3, r3, r2
   17298:	ldr	r2, [fp, #-16]
   1729c:	add	r3, r2, r3
   172a0:	str	r3, [fp, #-16]
   172a4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   172a8:	ldr	r2, [r3, #4]
   172ac:	ldr	r3, [fp, #-16]
   172b0:	cmp	r2, r3
   172b4:	bhi	172d8 <__assert_fail@plt+0x6068>
   172b8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   172bc:	ldr	r3, [r3, #4]
   172c0:	ldr	r2, [fp, #-16]
   172c4:	sub	r3, r2, r3
   172c8:	str	r3, [fp, #-16]
   172cc:	ldr	r3, [fp, #-12]
   172d0:	add	r3, r3, #1
   172d4:	str	r3, [fp, #-12]
   172d8:	ldr	r3, [fp, #-16]
   172dc:	str	r3, [fp, #-84]	; 0xffffffac
   172e0:	ldr	r3, [fp, #-12]
   172e4:	str	r3, [fp, #-92]	; 0xffffffa4
   172e8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   172ec:	ldr	r3, [r3]
   172f0:	rsb	r3, r3, #32
   172f4:	mvn	r2, #0
   172f8:	lsr	r2, r2, r3
   172fc:	ldr	r3, [fp, #-84]	; 0xffffffac
   17300:	and	r3, r3, r2
   17304:	cmp	r3, #0
   17308:	beq	17320 <__assert_fail@plt+0x60b0>
   1730c:	ldr	r3, [pc, #96]	; 17374 <__assert_fail@plt+0x6104>
   17310:	ldr	r2, [pc, #96]	; 17378 <__assert_fail@plt+0x6108>
   17314:	ldr	r1, [pc, #96]	; 1737c <__assert_fail@plt+0x610c>
   17318:	ldr	r0, [pc, #96]	; 17380 <__assert_fail@plt+0x6110>
   1731c:	bl	11270 <__assert_fail@plt>
   17320:	ldr	r3, [fp, #-96]	; 0xffffffa0
   17324:	ldr	r3, [r3]
   17328:	ldr	r2, [fp, #-84]	; 0xffffffac
   1732c:	lsr	r3, r2, r3
   17330:	str	r3, [fp, #-84]	; 0xffffffac
   17334:	ldr	r3, [fp, #-8]
   17338:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1733c:	add	r3, r2, r3
   17340:	ldr	r2, [fp, #-84]	; 0xffffffac
   17344:	uxtb	r2, r2
   17348:	strb	r2, [r3]
   1734c:	ldr	r3, [fp, #-8]
   17350:	add	r3, r3, #1
   17354:	str	r3, [fp, #-8]
   17358:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1735c:	cmp	r3, #0
   17360:	bne	170d0 <__assert_fail@plt+0x5e60>
   17364:	ldr	r3, [fp, #-8]
   17368:	mov	r0, r3
   1736c:	sub	sp, fp, #4
   17370:	pop	{fp, pc}
   17374:	muleq	r4, ip, sp
   17378:	andeq	r0, r0, fp, ror #9
   1737c:	andeq	r0, r4, r8, asr #12
   17380:	andeq	r0, r4, r4, lsl #17
   17384:	push	{fp, lr}
   17388:	add	fp, sp, #4
   1738c:	sub	sp, sp, #72	; 0x48
   17390:	str	r0, [fp, #-64]	; 0xffffffc0
   17394:	str	r1, [fp, #-68]	; 0xffffffbc
   17398:	str	r2, [fp, #-72]	; 0xffffffb8
   1739c:	str	r3, [fp, #-76]	; 0xffffffb4
   173a0:	ldr	r2, [fp, #-68]	; 0xffffffbc
   173a4:	sub	r3, fp, #40	; 0x28
   173a8:	mov	r1, r2
   173ac:	mov	r0, r3
   173b0:	bl	1552c <__assert_fail@plt+0x42bc>
   173b4:	mov	r3, #0
   173b8:	str	r3, [fp, #-8]
   173bc:	ldr	r3, [fp, #4]
   173c0:	cmp	r3, #1
   173c4:	ble	174ac <__assert_fail@plt+0x623c>
   173c8:	ldr	r3, [fp, #-72]	; 0xffffffb8
   173cc:	ldr	r2, [r3, #4]
   173d0:	sub	r3, fp, #56	; 0x38
   173d4:	mov	r1, r2
   173d8:	mov	r0, r3
   173dc:	bl	1552c <__assert_fail@plt+0x42bc>
   173e0:	sub	r3, fp, #56	; 0x38
   173e4:	ldr	r2, [fp, #4]
   173e8:	ldr	r1, [fp, #-76]	; 0xffffffb4
   173ec:	ldr	r0, [fp, #-76]	; 0xffffffb4
   173f0:	bl	159c0 <__assert_fail@plt+0x4750>
   173f4:	str	r0, [fp, #-20]	; 0xffffffec
   173f8:	ldr	r3, [fp, #4]
   173fc:	sub	r3, r3, #-1073741823	; 0xc0000001
   17400:	lsl	r3, r3, #2
   17404:	ldr	r2, [fp, #-76]	; 0xffffffb4
   17408:	add	r3, r2, r3
   1740c:	ldr	r3, [r3]
   17410:	cmp	r3, #0
   17414:	moveq	r3, #1
   17418:	movne	r3, #0
   1741c:	uxtb	r3, r3
   17420:	mov	r2, r3
   17424:	ldr	r3, [fp, #4]
   17428:	sub	r3, r3, r2
   1742c:	str	r3, [fp, #4]
   17430:	ldr	r2, [fp, #-64]	; 0xffffffc0
   17434:	ldr	r3, [fp, #-8]
   17438:	add	r3, r2, r3
   1743c:	sub	r2, fp, #40	; 0x28
   17440:	ldr	r1, [fp, #-20]	; 0xffffffec
   17444:	mov	r0, r3
   17448:	bl	170ac <__assert_fail@plt+0x5e3c>
   1744c:	str	r0, [fp, #-16]
   17450:	ldr	r2, [fp, #-8]
   17454:	ldr	r3, [fp, #-16]
   17458:	add	r3, r2, r3
   1745c:	str	r3, [fp, #-8]
   17460:	b	1748c <__assert_fail@plt+0x621c>
   17464:	ldr	r3, [fp, #-8]
   17468:	add	r2, r3, #1
   1746c:	str	r2, [fp, #-8]
   17470:	ldr	r2, [fp, #-64]	; 0xffffffc0
   17474:	add	r3, r2, r3
   17478:	mov	r2, #0
   1747c:	strb	r2, [r3]
   17480:	ldr	r3, [fp, #-16]
   17484:	add	r3, r3, #1
   17488:	str	r3, [fp, #-16]
   1748c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   17490:	ldr	r2, [r3]
   17494:	ldr	r3, [fp, #-16]
   17498:	cmp	r2, r3
   1749c:	bhi	17464 <__assert_fail@plt+0x61f4>
   174a0:	ldr	r3, [fp, #4]
   174a4:	cmp	r3, #1
   174a8:	bgt	173e0 <__assert_fail@plt+0x6170>
   174ac:	ldr	r2, [fp, #-64]	; 0xffffffc0
   174b0:	ldr	r3, [fp, #-8]
   174b4:	add	r0, r2, r3
   174b8:	ldr	r3, [fp, #-76]	; 0xffffffb4
   174bc:	ldr	r3, [r3]
   174c0:	sub	r2, fp, #40	; 0x28
   174c4:	mov	r1, r3
   174c8:	bl	170ac <__assert_fail@plt+0x5e3c>
   174cc:	mov	r2, r0
   174d0:	ldr	r3, [fp, #-8]
   174d4:	add	r3, r3, r2
   174d8:	str	r3, [fp, #-8]
   174dc:	mov	r3, #0
   174e0:	str	r3, [fp, #-12]
   174e4:	b	17554 <__assert_fail@plt+0x62e4>
   174e8:	ldr	r2, [fp, #-64]	; 0xffffffc0
   174ec:	ldr	r3, [fp, #-12]
   174f0:	add	r3, r2, r3
   174f4:	ldrb	r3, [r3]
   174f8:	strb	r3, [fp, #-21]	; 0xffffffeb
   174fc:	ldr	r2, [fp, #-64]	; 0xffffffc0
   17500:	ldr	r3, [fp, #-12]
   17504:	add	r3, r2, r3
   17508:	ldr	r1, [fp, #-8]
   1750c:	ldr	r2, [fp, #-12]
   17510:	sub	r2, r1, r2
   17514:	sub	r2, r2, #1
   17518:	ldr	r1, [fp, #-64]	; 0xffffffc0
   1751c:	add	r2, r1, r2
   17520:	ldrb	r2, [r2]
   17524:	strb	r2, [r3]
   17528:	ldr	r2, [fp, #-8]
   1752c:	ldr	r3, [fp, #-12]
   17530:	sub	r3, r2, r3
   17534:	sub	r3, r3, #1
   17538:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1753c:	add	r3, r2, r3
   17540:	ldrb	r2, [fp, #-21]	; 0xffffffeb
   17544:	strb	r2, [r3]
   17548:	ldr	r3, [fp, #-12]
   1754c:	add	r3, r3, #1
   17550:	str	r3, [fp, #-12]
   17554:	ldr	r3, [fp, #-12]
   17558:	lsl	r3, r3, #1
   1755c:	add	r2, r3, #1
   17560:	ldr	r3, [fp, #-8]
   17564:	cmp	r2, r3
   17568:	bcc	174e8 <__assert_fail@plt+0x6278>
   1756c:	ldr	r3, [fp, #-8]
   17570:	mov	r0, r3
   17574:	sub	sp, fp, #4
   17578:	pop	{fp, pc}
   1757c:	push	{fp, lr}
   17580:	add	fp, sp, #4
   17584:	sub	sp, sp, #40	; 0x28
   17588:	str	r0, [fp, #-24]	; 0xffffffe8
   1758c:	str	r1, [fp, #-28]	; 0xffffffe4
   17590:	str	r2, [fp, #-32]	; 0xffffffe0
   17594:	str	r3, [fp, #-36]	; 0xffffffdc
   17598:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1759c:	cmp	r3, #0
   175a0:	bgt	175b8 <__assert_fail@plt+0x6348>
   175a4:	ldr	r3, [pc, #184]	; 17664 <__assert_fail@plt+0x63f4>
   175a8:	ldr	r2, [pc, #184]	; 17668 <__assert_fail@plt+0x63f8>
   175ac:	ldr	r1, [pc, #184]	; 1766c <__assert_fail@plt+0x63fc>
   175b0:	ldr	r0, [pc, #184]	; 17670 <__assert_fail@plt+0x6400>
   175b4:	bl	11270 <__assert_fail@plt>
   175b8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   175bc:	sub	r3, r3, #-1073741823	; 0xc0000001
   175c0:	lsl	r3, r3, #2
   175c4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   175c8:	add	r3, r2, r3
   175cc:	ldr	r3, [r3]
   175d0:	cmp	r3, #0
   175d4:	bne	175ec <__assert_fail@plt+0x637c>
   175d8:	ldr	r3, [pc, #132]	; 17664 <__assert_fail@plt+0x63f4>
   175dc:	ldr	r2, [pc, #144]	; 17674 <__assert_fail@plt+0x6404>
   175e0:	ldr	r1, [pc, #132]	; 1766c <__assert_fail@plt+0x63fc>
   175e4:	ldr	r0, [pc, #140]	; 17678 <__assert_fail@plt+0x6408>
   175e8:	bl	11270 <__assert_fail@plt>
   175ec:	ldr	r3, [fp, #-28]	; 0xffffffe4
   175f0:	mov	r0, r3
   175f4:	bl	16d04 <__assert_fail@plt+0x5a94>
   175f8:	str	r0, [fp, #-8]
   175fc:	ldr	r3, [fp, #-8]
   17600:	cmp	r3, #0
   17604:	beq	17624 <__assert_fail@plt+0x63b4>
   17608:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1760c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   17610:	ldr	r1, [fp, #-8]
   17614:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17618:	bl	16f2c <__assert_fail@plt+0x5cbc>
   1761c:	mov	r3, r0
   17620:	b	17658 <__assert_fail@plt+0x63e8>
   17624:	ldr	r2, [fp, #-28]	; 0xffffffe4
   17628:	sub	r3, fp, #16
   1762c:	mov	r1, r2
   17630:	mov	r0, r3
   17634:	bl	16dc8 <__assert_fail@plt+0x5b58>
   17638:	sub	r2, fp, #16
   1763c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17640:	str	r3, [sp]
   17644:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17648:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1764c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17650:	bl	17384 <__assert_fail@plt+0x6114>
   17654:	mov	r3, r0
   17658:	mov	r0, r3
   1765c:	sub	sp, fp, #4
   17660:	pop	{fp, pc}
   17664:			; <UNDEFINED> instruction: 0x00040db0
   17668:	andeq	r0, r0, r4, lsr #10
   1766c:	andeq	r0, r4, r8, asr #12
   17670:	andeq	r0, r4, r0, asr #17
   17674:	andeq	r0, r0, r5, lsr #10
   17678:	andeq	r0, r4, r8, asr #17
   1767c:	push	{fp, lr}
   17680:	add	fp, sp, #4
   17684:	sub	sp, sp, #32
   17688:	str	r0, [fp, #-24]	; 0xffffffe8
   1768c:	str	r1, [fp, #-28]	; 0xffffffe4
   17690:	str	r2, [fp, #-32]	; 0xffffffe0
   17694:	str	r3, [fp, #-36]	; 0xffffffdc
   17698:	mov	r3, #0
   1769c:	str	r3, [fp, #-12]
   176a0:	mov	r3, #0
   176a4:	str	r3, [fp, #-8]
   176a8:	mov	r3, #0
   176ac:	str	r3, [fp, #-16]
   176b0:	b	1774c <__assert_fail@plt+0x64dc>
   176b4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   176b8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   176bc:	add	r3, r2, r3
   176c0:	ldrb	r3, [r3]
   176c4:	mov	r2, r3
   176c8:	ldr	r3, [fp, #-16]
   176cc:	lsl	r3, r2, r3
   176d0:	ldr	r2, [fp, #-12]
   176d4:	orr	r3, r2, r3
   176d8:	str	r3, [fp, #-12]
   176dc:	ldr	r2, [fp, #-16]
   176e0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   176e4:	add	r3, r2, r3
   176e8:	str	r3, [fp, #-16]
   176ec:	ldr	r3, [fp, #-16]
   176f0:	cmp	r3, #31
   176f4:	bls	1774c <__assert_fail@plt+0x64dc>
   176f8:	ldr	r3, [fp, #-16]
   176fc:	sub	r3, r3, #32
   17700:	str	r3, [fp, #-16]
   17704:	ldr	r3, [fp, #-8]
   17708:	add	r2, r3, #1
   1770c:	str	r2, [fp, #-8]
   17710:	lsl	r3, r3, #2
   17714:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17718:	add	r3, r2, r3
   1771c:	ldr	r2, [fp, #-12]
   17720:	str	r2, [r3]
   17724:	ldr	r2, [fp, #-28]	; 0xffffffe4
   17728:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1772c:	add	r3, r2, r3
   17730:	ldrb	r3, [r3]
   17734:	mov	r1, r3
   17738:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1773c:	ldr	r3, [fp, #-16]
   17740:	sub	r3, r2, r3
   17744:	lsr	r3, r1, r3
   17748:	str	r3, [fp, #-12]
   1774c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17750:	sub	r2, r3, #1
   17754:	str	r2, [fp, #-32]	; 0xffffffe0
   17758:	cmp	r3, #0
   1775c:	bne	176b4 <__assert_fail@plt+0x6444>
   17760:	ldr	r3, [fp, #-12]
   17764:	cmp	r3, #0
   17768:	beq	17790 <__assert_fail@plt+0x6520>
   1776c:	ldr	r3, [fp, #-8]
   17770:	add	r2, r3, #1
   17774:	str	r2, [fp, #-8]
   17778:	lsl	r3, r3, #2
   1777c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17780:	add	r3, r2, r3
   17784:	ldr	r2, [fp, #-12]
   17788:	str	r2, [r3]
   1778c:	b	177a0 <__assert_fail@plt+0x6530>
   17790:	ldr	r1, [fp, #-8]
   17794:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17798:	bl	13c08 <__assert_fail@plt+0x2998>
   1779c:	str	r0, [fp, #-8]
   177a0:	ldr	r3, [fp, #-8]
   177a4:	mov	r0, r3
   177a8:	sub	sp, fp, #4
   177ac:	pop	{fp, pc}
   177b0:	push	{fp, lr}
   177b4:	add	fp, sp, #4
   177b8:	sub	sp, sp, #40	; 0x28
   177bc:	str	r0, [fp, #-32]	; 0xffffffe0
   177c0:	str	r1, [fp, #-36]	; 0xffffffdc
   177c4:	str	r2, [fp, #-40]	; 0xffffffd8
   177c8:	str	r3, [fp, #-44]	; 0xffffffd4
   177cc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   177d0:	cmp	r3, #0
   177d4:	bne	177ec <__assert_fail@plt+0x657c>
   177d8:	ldr	r3, [pc, #476]	; 179bc <__assert_fail@plt+0x674c>
   177dc:	ldr	r2, [pc, #476]	; 179c0 <__assert_fail@plt+0x6750>
   177e0:	ldr	r1, [pc, #476]	; 179c4 <__assert_fail@plt+0x6754>
   177e4:	ldr	r0, [pc, #476]	; 179c8 <__assert_fail@plt+0x6758>
   177e8:	bl	11270 <__assert_fail@plt>
   177ec:	ldr	r3, [fp, #-40]	; 0xffffffd8
   177f0:	sub	r2, r3, #1
   177f4:	ldr	r3, [fp, #4]
   177f8:	ldr	r3, [r3]
   177fc:	mov	r1, r3
   17800:	mov	r0, r2
   17804:	bl	3f74c <__assert_fail@plt+0x2e4dc>
   17808:	mov	r3, r1
   1780c:	add	r3, r3, #1
   17810:	str	r3, [fp, #-16]
   17814:	mov	r3, #0
   17818:	str	r3, [fp, #-20]	; 0xffffffec
   1781c:	ldr	r3, [fp, #-20]	; 0xffffffec
   17820:	add	r2, r3, #1
   17824:	str	r2, [fp, #-20]	; 0xffffffec
   17828:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1782c:	add	r3, r2, r3
   17830:	ldrb	r3, [r3]
   17834:	str	r3, [fp, #-12]
   17838:	b	17868 <__assert_fail@plt+0x65f8>
   1783c:	ldr	r3, [fp, #-12]
   17840:	ldr	r2, [fp, #-44]	; 0xffffffd4
   17844:	mul	r2, r2, r3
   17848:	ldr	r3, [fp, #-20]	; 0xffffffec
   1784c:	add	r1, r3, #1
   17850:	str	r1, [fp, #-20]	; 0xffffffec
   17854:	ldr	r1, [fp, #-36]	; 0xffffffdc
   17858:	add	r3, r1, r3
   1785c:	ldrb	r3, [r3]
   17860:	add	r3, r2, r3
   17864:	str	r3, [fp, #-12]
   17868:	ldr	r3, [fp, #-16]
   1786c:	sub	r3, r3, #1
   17870:	str	r3, [fp, #-16]
   17874:	ldr	r3, [fp, #-16]
   17878:	cmp	r3, #0
   1787c:	bne	1783c <__assert_fail@plt+0x65cc>
   17880:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17884:	ldr	r2, [fp, #-12]
   17888:	str	r2, [r3]
   1788c:	mov	r3, #1
   17890:	str	r3, [fp, #-8]
   17894:	b	17978 <__assert_fail@plt+0x6708>
   17898:	ldr	r3, [fp, #-20]	; 0xffffffec
   1789c:	add	r2, r3, #1
   178a0:	str	r2, [fp, #-20]	; 0xffffffec
   178a4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   178a8:	add	r3, r2, r3
   178ac:	ldrb	r3, [r3]
   178b0:	str	r3, [fp, #-12]
   178b4:	mov	r3, #1
   178b8:	str	r3, [fp, #-16]
   178bc:	b	178f8 <__assert_fail@plt+0x6688>
   178c0:	ldr	r3, [fp, #-12]
   178c4:	ldr	r2, [fp, #-44]	; 0xffffffd4
   178c8:	mul	r2, r2, r3
   178cc:	ldr	r3, [fp, #-20]	; 0xffffffec
   178d0:	add	r1, r3, #1
   178d4:	str	r1, [fp, #-20]	; 0xffffffec
   178d8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   178dc:	add	r3, r1, r3
   178e0:	ldrb	r3, [r3]
   178e4:	add	r3, r2, r3
   178e8:	str	r3, [fp, #-12]
   178ec:	ldr	r3, [fp, #-16]
   178f0:	add	r3, r3, #1
   178f4:	str	r3, [fp, #-16]
   178f8:	ldr	r3, [fp, #4]
   178fc:	ldr	r2, [r3]
   17900:	ldr	r3, [fp, #-16]
   17904:	cmp	r2, r3
   17908:	bhi	178c0 <__assert_fail@plt+0x6650>
   1790c:	ldr	r3, [fp, #4]
   17910:	ldr	r3, [r3, #4]
   17914:	ldr	r2, [fp, #-8]
   17918:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1791c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17920:	bl	1423c <__assert_fail@plt+0x2fcc>
   17924:	str	r0, [fp, #-24]	; 0xffffffe8
   17928:	ldr	r3, [fp, #-12]
   1792c:	ldr	r2, [fp, #-8]
   17930:	ldr	r1, [fp, #-32]	; 0xffffffe0
   17934:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17938:	bl	13d04 <__assert_fail@plt+0x2a94>
   1793c:	mov	r2, r0
   17940:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17944:	add	r3, r3, r2
   17948:	str	r3, [fp, #-24]	; 0xffffffe8
   1794c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17950:	cmp	r3, #0
   17954:	beq	17978 <__assert_fail@plt+0x6708>
   17958:	ldr	r3, [fp, #-8]
   1795c:	add	r2, r3, #1
   17960:	str	r2, [fp, #-8]
   17964:	lsl	r3, r3, #2
   17968:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1796c:	add	r3, r2, r3
   17970:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17974:	str	r2, [r3]
   17978:	ldr	r2, [fp, #-20]	; 0xffffffec
   1797c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   17980:	cmp	r2, r3
   17984:	bcc	17898 <__assert_fail@plt+0x6628>
   17988:	ldr	r2, [fp, #-20]	; 0xffffffec
   1798c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   17990:	cmp	r2, r3
   17994:	beq	179ac <__assert_fail@plt+0x673c>
   17998:	ldr	r3, [pc, #28]	; 179bc <__assert_fail@plt+0x674c>
   1799c:	ldr	r2, [pc, #40]	; 179cc <__assert_fail@plt+0x675c>
   179a0:	ldr	r1, [pc, #28]	; 179c4 <__assert_fail@plt+0x6754>
   179a4:	ldr	r0, [pc, #36]	; 179d0 <__assert_fail@plt+0x6760>
   179a8:	bl	11270 <__assert_fail@plt>
   179ac:	ldr	r3, [fp, #-8]
   179b0:	mov	r0, r3
   179b4:	sub	sp, fp, #4
   179b8:	pop	{fp, pc}
   179bc:			; <UNDEFINED> instruction: 0x00040dbc
   179c0:	andeq	r0, r0, sl, asr r5
   179c4:	andeq	r0, r4, r8, asr #12
   179c8:	ldrdeq	r0, [r4], -r8
   179cc:	andeq	r0, r0, r2, ror r5
   179d0:	andeq	r0, r4, r0, ror #17
   179d4:	push	{fp, lr}
   179d8:	add	fp, sp, #4
   179dc:	sub	sp, sp, #40	; 0x28
   179e0:	str	r0, [fp, #-24]	; 0xffffffe8
   179e4:	str	r1, [fp, #-28]	; 0xffffffe4
   179e8:	str	r2, [fp, #-32]	; 0xffffffe0
   179ec:	str	r3, [fp, #-36]	; 0xffffffdc
   179f0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   179f4:	cmp	r3, #0
   179f8:	bne	17a04 <__assert_fail@plt+0x6794>
   179fc:	mov	r3, #0
   17a00:	b	17a74 <__assert_fail@plt+0x6804>
   17a04:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17a08:	mov	r0, r3
   17a0c:	bl	16d04 <__assert_fail@plt+0x5a94>
   17a10:	str	r0, [fp, #-8]
   17a14:	ldr	r3, [fp, #-8]
   17a18:	cmp	r3, #0
   17a1c:	beq	17a3c <__assert_fail@plt+0x67cc>
   17a20:	ldr	r3, [fp, #-8]
   17a24:	ldr	r2, [fp, #-32]	; 0xffffffe0
   17a28:	ldr	r1, [fp, #-28]	; 0xffffffe4
   17a2c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17a30:	bl	1767c <__assert_fail@plt+0x640c>
   17a34:	mov	r3, r0
   17a38:	b	17a74 <__assert_fail@plt+0x6804>
   17a3c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   17a40:	sub	r3, fp, #16
   17a44:	mov	r1, r2
   17a48:	mov	r0, r3
   17a4c:	bl	16dc8 <__assert_fail@plt+0x5b58>
   17a50:	ldr	r2, [fp, #-36]	; 0xffffffdc
   17a54:	sub	r3, fp, #16
   17a58:	str	r3, [sp]
   17a5c:	mov	r3, r2
   17a60:	ldr	r2, [fp, #-32]	; 0xffffffe0
   17a64:	ldr	r1, [fp, #-28]	; 0xffffffe4
   17a68:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17a6c:	bl	177b0 <__assert_fail@plt+0x6540>
   17a70:	mov	r3, r0
   17a74:	mov	r0, r3
   17a78:	sub	sp, fp, #4
   17a7c:	pop	{fp, pc}
   17a80:	push	{fp}		; (str fp, [sp, #-4]!)
   17a84:	add	fp, sp, #0
   17a88:	sub	sp, sp, #12
   17a8c:	str	r0, [fp, #-8]
   17a90:	ldr	r3, [fp, #-8]
   17a94:	mov	r2, #0
   17a98:	str	r2, [r3]
   17a9c:	ldr	r3, [fp, #-8]
   17aa0:	mov	r2, #0
   17aa4:	str	r2, [r3, #4]
   17aa8:	ldr	r3, [fp, #-8]
   17aac:	ldr	r2, [pc, #16]	; 17ac4 <__assert_fail@plt+0x6854>
   17ab0:	str	r2, [r3, #8]
   17ab4:	nop			; (mov r0, r0)
   17ab8:	add	sp, fp, #0
   17abc:	pop	{fp}		; (ldr fp, [sp], #4)
   17ac0:	bx	lr
   17ac4:	ldrdeq	r0, [r4], -r0	; <UNPREDICTABLE>
   17ac8:	push	{fp, lr}
   17acc:	add	fp, sp, #4
   17ad0:	sub	sp, sp, #16
   17ad4:	str	r0, [fp, #-16]
   17ad8:	str	r1, [fp, #-20]	; 0xffffffec
   17adc:	ldr	r3, [fp, #-20]	; 0xffffffec
   17ae0:	cmp	r3, #0
   17ae4:	movne	r3, #1
   17ae8:	moveq	r3, #0
   17aec:	uxtb	r3, r3
   17af0:	mov	r2, r3
   17af4:	ldr	r3, [fp, #-20]	; 0xffffffec
   17af8:	sub	r3, r3, r2
   17afc:	str	r3, [fp, #-20]	; 0xffffffec
   17b00:	ldr	r3, [fp, #-20]	; 0xffffffec
   17b04:	lsr	r3, r3, #5
   17b08:	add	r3, r3, #1
   17b0c:	str	r3, [fp, #-8]
   17b10:	ldr	r3, [fp, #-16]
   17b14:	ldr	r2, [fp, #-8]
   17b18:	str	r2, [r3]
   17b1c:	ldr	r3, [fp, #-16]
   17b20:	mov	r2, #0
   17b24:	str	r2, [r3, #4]
   17b28:	ldr	r0, [fp, #-8]
   17b2c:	bl	1390c <__assert_fail@plt+0x269c>
   17b30:	mov	r2, r0
   17b34:	ldr	r3, [fp, #-16]
   17b38:	str	r2, [r3, #8]
   17b3c:	nop			; (mov r0, r0)
   17b40:	sub	sp, fp, #4
   17b44:	pop	{fp, pc}
   17b48:	push	{fp, lr}
   17b4c:	add	fp, sp, #4
   17b50:	sub	sp, sp, #8
   17b54:	str	r0, [fp, #-8]
   17b58:	ldr	r3, [fp, #-8]
   17b5c:	ldr	r3, [r3]
   17b60:	cmp	r3, #0
   17b64:	beq	17b84 <__assert_fail@plt+0x6914>
   17b68:	ldr	r3, [fp, #-8]
   17b6c:	ldr	r2, [r3, #8]
   17b70:	ldr	r3, [fp, #-8]
   17b74:	ldr	r3, [r3]
   17b78:	mov	r1, r3
   17b7c:	mov	r0, r2
   17b80:	bl	139c0 <__assert_fail@plt+0x2750>
   17b84:	nop			; (mov r0, r0)
   17b88:	sub	sp, fp, #4
   17b8c:	pop	{fp, pc}
   17b90:	push	{fp, lr}
   17b94:	add	fp, sp, #4
   17b98:	sub	sp, sp, #8
   17b9c:	str	r0, [fp, #-8]
   17ba0:	str	r1, [fp, #-12]
   17ba4:	ldr	r3, [fp, #-12]
   17ba8:	cmp	r3, #1
   17bac:	movge	r3, r3
   17bb0:	movlt	r3, #1
   17bb4:	str	r3, [fp, #-12]
   17bb8:	ldr	r3, [fp, #-8]
   17bbc:	ldr	r3, [r3]
   17bc0:	cmp	r3, #0
   17bc4:	beq	17bf4 <__assert_fail@plt+0x6984>
   17bc8:	ldr	r3, [fp, #-8]
   17bcc:	ldr	r0, [r3, #8]
   17bd0:	ldr	r3, [fp, #-8]
   17bd4:	ldr	r3, [r3]
   17bd8:	ldr	r2, [fp, #-12]
   17bdc:	mov	r1, r3
   17be0:	bl	13948 <__assert_fail@plt+0x26d8>
   17be4:	mov	r2, r0
   17be8:	ldr	r3, [fp, #-8]
   17bec:	str	r2, [r3, #8]
   17bf0:	b	17c08 <__assert_fail@plt+0x6998>
   17bf4:	ldr	r0, [fp, #-12]
   17bf8:	bl	1390c <__assert_fail@plt+0x269c>
   17bfc:	mov	r2, r0
   17c00:	ldr	r3, [fp, #-8]
   17c04:	str	r2, [r3, #8]
   17c08:	ldr	r3, [fp, #-8]
   17c0c:	ldr	r2, [fp, #-12]
   17c10:	str	r2, [r3]
   17c14:	ldr	r3, [fp, #-8]
   17c18:	ldr	r3, [r3, #4]
   17c1c:	eor	r2, r3, r3, asr #31
   17c20:	sub	r2, r2, r3, asr #31
   17c24:	ldr	r3, [fp, #-12]
   17c28:	cmp	r2, r3
   17c2c:	ble	17c3c <__assert_fail@plt+0x69cc>
   17c30:	ldr	r3, [fp, #-8]
   17c34:	mov	r2, #0
   17c38:	str	r2, [r3, #4]
   17c3c:	ldr	r3, [fp, #-8]
   17c40:	ldr	r3, [r3, #8]
   17c44:	mov	r0, r3
   17c48:	sub	sp, fp, #4
   17c4c:	pop	{fp, pc}
   17c50:	push	{fp, lr}
   17c54:	add	fp, sp, #4
   17c58:	sub	sp, sp, #8
   17c5c:	str	r0, [fp, #-8]
   17c60:	str	r1, [fp, #-12]
   17c64:	ldr	r3, [fp, #-12]
   17c68:	cmp	r3, #0
   17c6c:	blt	17c84 <__assert_fail@plt+0x6a14>
   17c70:	ldr	r3, [fp, #-12]
   17c74:	mov	r1, r3
   17c78:	ldr	r0, [fp, #-8]
   17c7c:	bl	17cd4 <__assert_fail@plt+0x6a64>
   17c80:	b	17cc8 <__assert_fail@plt+0x6a58>
   17c84:	ldr	r3, [fp, #-8]
   17c88:	mvn	r2, #0
   17c8c:	str	r2, [r3, #4]
   17c90:	ldr	r3, [fp, #-8]
   17c94:	ldr	r3, [r3]
   17c98:	cmp	r3, #0
   17c9c:	bgt	17cb4 <__assert_fail@plt+0x6a44>
   17ca0:	mov	r1, #1
   17ca4:	ldr	r0, [fp, #-8]
   17ca8:	bl	17b90 <__assert_fail@plt+0x6920>
   17cac:	mov	r3, r0
   17cb0:	b	17cbc <__assert_fail@plt+0x6a4c>
   17cb4:	ldr	r3, [fp, #-8]
   17cb8:	ldr	r3, [r3, #8]
   17cbc:	ldr	r2, [fp, #-12]
   17cc0:	rsb	r2, r2, #0
   17cc4:	str	r2, [r3]
   17cc8:	nop			; (mov r0, r0)
   17ccc:	sub	sp, fp, #4
   17cd0:	pop	{fp, pc}
   17cd4:	push	{fp, lr}
   17cd8:	add	fp, sp, #4
   17cdc:	sub	sp, sp, #8
   17ce0:	str	r0, [fp, #-8]
   17ce4:	str	r1, [fp, #-12]
   17ce8:	ldr	r3, [fp, #-12]
   17cec:	cmp	r3, #0
   17cf0:	beq	17d38 <__assert_fail@plt+0x6ac8>
   17cf4:	ldr	r3, [fp, #-8]
   17cf8:	mov	r2, #1
   17cfc:	str	r2, [r3, #4]
   17d00:	ldr	r3, [fp, #-8]
   17d04:	ldr	r3, [r3]
   17d08:	cmp	r3, #0
   17d0c:	bgt	17d24 <__assert_fail@plt+0x6ab4>
   17d10:	mov	r1, #1
   17d14:	ldr	r0, [fp, #-8]
   17d18:	bl	17b90 <__assert_fail@plt+0x6920>
   17d1c:	mov	r3, r0
   17d20:	b	17d2c <__assert_fail@plt+0x6abc>
   17d24:	ldr	r3, [fp, #-8]
   17d28:	ldr	r3, [r3, #8]
   17d2c:	ldr	r2, [fp, #-12]
   17d30:	str	r2, [r3]
   17d34:	b	17d44 <__assert_fail@plt+0x6ad4>
   17d38:	ldr	r3, [fp, #-8]
   17d3c:	mov	r2, #0
   17d40:	str	r2, [r3, #4]
   17d44:	nop			; (mov r0, r0)
   17d48:	sub	sp, fp, #4
   17d4c:	pop	{fp, pc}
   17d50:	push	{fp, lr}
   17d54:	add	fp, sp, #4
   17d58:	sub	sp, sp, #16
   17d5c:	str	r0, [fp, #-16]
   17d60:	str	r1, [fp, #-20]	; 0xffffffec
   17d64:	ldr	r2, [fp, #-16]
   17d68:	ldr	r3, [fp, #-20]	; 0xffffffec
   17d6c:	cmp	r2, r3
   17d70:	beq	17de4 <__assert_fail@plt+0x6b74>
   17d74:	ldr	r3, [fp, #-20]	; 0xffffffec
   17d78:	ldr	r3, [r3, #4]
   17d7c:	cmp	r3, #0
   17d80:	rsblt	r3, r3, #0
   17d84:	str	r3, [fp, #-8]
   17d88:	ldr	r3, [fp, #-16]
   17d8c:	ldr	r2, [r3]
   17d90:	ldr	r3, [fp, #-8]
   17d94:	cmp	r2, r3
   17d98:	bge	17db0 <__assert_fail@plt+0x6b40>
   17d9c:	ldr	r1, [fp, #-8]
   17da0:	ldr	r0, [fp, #-16]
   17da4:	bl	17b90 <__assert_fail@plt+0x6920>
   17da8:	mov	r3, r0
   17dac:	b	17db8 <__assert_fail@plt+0x6b48>
   17db0:	ldr	r3, [fp, #-16]
   17db4:	ldr	r3, [r3, #8]
   17db8:	str	r3, [fp, #-12]
   17dbc:	ldr	r3, [fp, #-20]	; 0xffffffec
   17dc0:	ldr	r3, [r3, #8]
   17dc4:	ldr	r2, [fp, #-8]
   17dc8:	mov	r1, r3
   17dcc:	ldr	r0, [fp, #-12]
   17dd0:	bl	13a00 <__assert_fail@plt+0x2790>
   17dd4:	ldr	r3, [fp, #-20]	; 0xffffffec
   17dd8:	ldr	r2, [r3, #4]
   17ddc:	ldr	r3, [fp, #-16]
   17de0:	str	r2, [r3, #4]
   17de4:	nop			; (mov r0, r0)
   17de8:	sub	sp, fp, #4
   17dec:	pop	{fp, pc}
   17df0:	push	{fp, lr}
   17df4:	add	fp, sp, #4
   17df8:	sub	sp, sp, #8
   17dfc:	str	r0, [fp, #-8]
   17e00:	str	r1, [fp, #-12]
   17e04:	ldr	r0, [fp, #-8]
   17e08:	bl	17a80 <__assert_fail@plt+0x6810>
   17e0c:	ldr	r1, [fp, #-12]
   17e10:	ldr	r0, [fp, #-8]
   17e14:	bl	17c50 <__assert_fail@plt+0x69e0>
   17e18:	nop			; (mov r0, r0)
   17e1c:	sub	sp, fp, #4
   17e20:	pop	{fp, pc}
   17e24:	push	{fp, lr}
   17e28:	add	fp, sp, #4
   17e2c:	sub	sp, sp, #8
   17e30:	str	r0, [fp, #-8]
   17e34:	str	r1, [fp, #-12]
   17e38:	ldr	r0, [fp, #-8]
   17e3c:	bl	17a80 <__assert_fail@plt+0x6810>
   17e40:	ldr	r1, [fp, #-12]
   17e44:	ldr	r0, [fp, #-8]
   17e48:	bl	17cd4 <__assert_fail@plt+0x6a64>
   17e4c:	nop			; (mov r0, r0)
   17e50:	sub	sp, fp, #4
   17e54:	pop	{fp, pc}
   17e58:	push	{fp, lr}
   17e5c:	add	fp, sp, #4
   17e60:	sub	sp, sp, #8
   17e64:	str	r0, [fp, #-8]
   17e68:	str	r1, [fp, #-12]
   17e6c:	ldr	r0, [fp, #-8]
   17e70:	bl	17a80 <__assert_fail@plt+0x6810>
   17e74:	ldr	r1, [fp, #-12]
   17e78:	ldr	r0, [fp, #-8]
   17e7c:	bl	17d50 <__assert_fail@plt+0x6ae0>
   17e80:	nop			; (mov r0, r0)
   17e84:	sub	sp, fp, #4
   17e88:	pop	{fp, pc}
   17e8c:	push	{fp, lr}
   17e90:	add	fp, sp, #4
   17e94:	sub	sp, sp, #8
   17e98:	str	r0, [fp, #-8]
   17e9c:	mvn	r1, #-2147483648	; 0x80000000
   17ea0:	ldr	r0, [fp, #-8]
   17ea4:	bl	18be4 <__assert_fail@plt+0x7974>
   17ea8:	mov	r3, r0
   17eac:	cmp	r3, #0
   17eb0:	bgt	17ed4 <__assert_fail@plt+0x6c64>
   17eb4:	mov	r1, #-2147483648	; 0x80000000
   17eb8:	ldr	r0, [fp, #-8]
   17ebc:	bl	18be4 <__assert_fail@plt+0x7974>
   17ec0:	mov	r3, r0
   17ec4:	cmp	r3, #0
   17ec8:	blt	17ed4 <__assert_fail@plt+0x6c64>
   17ecc:	mov	r3, #1
   17ed0:	b	17ed8 <__assert_fail@plt+0x6c68>
   17ed4:	mov	r3, #0
   17ed8:	mov	r0, r3
   17edc:	sub	sp, fp, #4
   17ee0:	pop	{fp, pc}
   17ee4:	push	{fp}		; (str fp, [sp, #-4]!)
   17ee8:	add	fp, sp, #0
   17eec:	sub	sp, sp, #20
   17ef0:	str	r0, [fp, #-16]
   17ef4:	str	r1, [fp, #-20]	; 0xffffffec
   17ef8:	mov	r3, #1
   17efc:	str	r3, [fp, #-8]
   17f00:	mov	r3, #0
   17f04:	str	r3, [fp, #-12]
   17f08:	ldr	r2, [fp, #-20]	; 0xffffffec
   17f0c:	ldr	r3, [fp, #-8]
   17f10:	cmp	r2, r3
   17f14:	ble	17f4c <__assert_fail@plt+0x6cdc>
   17f18:	ldr	r3, [fp, #-8]
   17f1c:	lsl	r3, r3, #2
   17f20:	ldr	r2, [fp, #-16]
   17f24:	add	r3, r2, r3
   17f28:	ldr	r2, [r3]
   17f2c:	ldr	r3, [fp, #-12]
   17f30:	cmp	r2, r3
   17f34:	bcs	17f54 <__assert_fail@plt+0x6ce4>
   17f38:	ldr	r3, [fp, #-8]
   17f3c:	add	r2, r3, #1
   17f40:	ldr	r3, [fp, #-20]	; 0xffffffec
   17f44:	cmp	r2, r3
   17f48:	bne	17f54 <__assert_fail@plt+0x6ce4>
   17f4c:	mov	r3, #1
   17f50:	b	17f58 <__assert_fail@plt+0x6ce8>
   17f54:	mov	r3, #0
   17f58:	mov	r0, r3
   17f5c:	add	sp, fp, #0
   17f60:	pop	{fp}		; (ldr fp, [sp], #4)
   17f64:	bx	lr
   17f68:	push	{fp, lr}
   17f6c:	add	fp, sp, #4
   17f70:	sub	sp, sp, #16
   17f74:	str	r0, [fp, #-16]
   17f78:	ldr	r3, [fp, #-16]
   17f7c:	ldr	r3, [r3, #4]
   17f80:	str	r3, [fp, #-8]
   17f84:	ldr	r3, [fp, #-8]
   17f88:	cmp	r3, #0
   17f8c:	blt	17fb8 <__assert_fail@plt+0x6d48>
   17f90:	ldr	r3, [fp, #-16]
   17f94:	ldr	r3, [r3, #8]
   17f98:	ldr	r1, [fp, #-8]
   17f9c:	mov	r0, r3
   17fa0:	bl	17ee4 <__assert_fail@plt+0x6c74>
   17fa4:	mov	r3, r0
   17fa8:	cmp	r3, #0
   17fac:	beq	17fb8 <__assert_fail@plt+0x6d48>
   17fb0:	mov	r3, #1
   17fb4:	b	17fbc <__assert_fail@plt+0x6d4c>
   17fb8:	mov	r3, #0
   17fbc:	mov	r0, r3
   17fc0:	sub	sp, fp, #4
   17fc4:	pop	{fp, pc}
   17fc8:	push	{fp, lr}
   17fcc:	add	fp, sp, #4
   17fd0:	sub	sp, sp, #8
   17fd4:	str	r0, [fp, #-8]
   17fd8:	mvn	r1, #-2147483648	; 0x80000000
   17fdc:	ldr	r0, [fp, #-8]
   17fe0:	bl	18be4 <__assert_fail@plt+0x7974>
   17fe4:	mov	r3, r0
   17fe8:	cmp	r3, #0
   17fec:	bgt	18010 <__assert_fail@plt+0x6da0>
   17ff0:	mov	r1, #-2147483648	; 0x80000000
   17ff4:	ldr	r0, [fp, #-8]
   17ff8:	bl	18be4 <__assert_fail@plt+0x7974>
   17ffc:	mov	r3, r0
   18000:	cmp	r3, #0
   18004:	blt	18010 <__assert_fail@plt+0x6da0>
   18008:	mov	r3, #1
   1800c:	b	18014 <__assert_fail@plt+0x6da4>
   18010:	mov	r3, #0
   18014:	mov	r0, r3
   18018:	sub	sp, fp, #4
   1801c:	pop	{fp, pc}
   18020:	push	{fp, lr}
   18024:	add	fp, sp, #4
   18028:	sub	sp, sp, #8
   1802c:	str	r0, [fp, #-8]
   18030:	ldr	r3, [fp, #-8]
   18034:	ldr	r3, [r3, #4]
   18038:	cmp	r3, #0
   1803c:	blt	18060 <__assert_fail@plt+0x6df0>
   18040:	mvn	r1, #0
   18044:	ldr	r0, [fp, #-8]
   18048:	bl	18d70 <__assert_fail@plt+0x7b00>
   1804c:	mov	r3, r0
   18050:	cmp	r3, #0
   18054:	bgt	18060 <__assert_fail@plt+0x6df0>
   18058:	mov	r3, #1
   1805c:	b	18064 <__assert_fail@plt+0x6df4>
   18060:	mov	r3, #0
   18064:	mov	r0, r3
   18068:	sub	sp, fp, #4
   1806c:	pop	{fp, pc}
   18070:	push	{fp, lr}
   18074:	add	fp, sp, #4
   18078:	sub	sp, sp, #8
   1807c:	str	r0, [fp, #-8]
   18080:	ldr	r1, [pc, #64]	; 180c8 <__assert_fail@plt+0x6e58>
   18084:	ldr	r0, [fp, #-8]
   18088:	bl	18be4 <__assert_fail@plt+0x7974>
   1808c:	mov	r3, r0
   18090:	cmp	r3, #0
   18094:	bgt	180b8 <__assert_fail@plt+0x6e48>
   18098:	ldr	r1, [pc, #44]	; 180cc <__assert_fail@plt+0x6e5c>
   1809c:	ldr	r0, [fp, #-8]
   180a0:	bl	18be4 <__assert_fail@plt+0x7974>
   180a4:	mov	r3, r0
   180a8:	cmp	r3, #0
   180ac:	blt	180b8 <__assert_fail@plt+0x6e48>
   180b0:	mov	r3, #1
   180b4:	b	180bc <__assert_fail@plt+0x6e4c>
   180b8:	mov	r3, #0
   180bc:	mov	r0, r3
   180c0:	sub	sp, fp, #4
   180c4:	pop	{fp, pc}
   180c8:	strdeq	r7, [r0], -pc	; <UNPREDICTABLE>
   180cc:			; <UNDEFINED> instruction: 0xffff8000
   180d0:	push	{fp, lr}
   180d4:	add	fp, sp, #4
   180d8:	sub	sp, sp, #8
   180dc:	str	r0, [fp, #-8]
   180e0:	ldr	r3, [fp, #-8]
   180e4:	ldr	r3, [r3, #4]
   180e8:	cmp	r3, #0
   180ec:	blt	18110 <__assert_fail@plt+0x6ea0>
   180f0:	ldr	r1, [pc, #40]	; 18120 <__assert_fail@plt+0x6eb0>
   180f4:	ldr	r0, [fp, #-8]
   180f8:	bl	18d70 <__assert_fail@plt+0x7b00>
   180fc:	mov	r3, r0
   18100:	cmp	r3, #0
   18104:	bgt	18110 <__assert_fail@plt+0x6ea0>
   18108:	mov	r3, #1
   1810c:	b	18114 <__assert_fail@plt+0x6ea4>
   18110:	mov	r3, #0
   18114:	mov	r0, r3
   18118:	sub	sp, fp, #4
   1811c:	pop	{fp, pc}
   18120:	strdeq	pc, [r0], -pc	; <UNPREDICTABLE>
   18124:	push	{fp, lr}
   18128:	add	fp, sp, #4
   1812c:	sub	sp, sp, #16
   18130:	str	r0, [fp, #-16]
   18134:	ldr	r0, [fp, #-16]
   18138:	bl	1818c <__assert_fail@plt+0x6f1c>
   1813c:	str	r0, [fp, #-8]
   18140:	mov	r3, #1
   18144:	str	r3, [fp, #-12]
   18148:	ldr	r3, [fp, #-16]
   1814c:	ldr	r3, [r3, #4]
   18150:	cmp	r3, #0
   18154:	bge	18178 <__assert_fail@plt+0x6f08>
   18158:	ldr	r3, [fp, #-12]
   1815c:	rsb	r2, r3, #0
   18160:	ldr	r1, [fp, #-8]
   18164:	ldr	r3, [fp, #-12]
   18168:	sub	r3, r1, r3
   1816c:	bic	r3, r3, #-2147483648	; 0x80000000
   18170:	sub	r3, r2, r3
   18174:	b	18180 <__assert_fail@plt+0x6f10>
   18178:	ldr	r3, [fp, #-8]
   1817c:	bic	r3, r3, #-2147483648	; 0x80000000
   18180:	mov	r0, r3
   18184:	sub	sp, fp, #4
   18188:	pop	{fp, pc}
   1818c:	push	{fp}		; (str fp, [sp, #-4]!)
   18190:	add	fp, sp, #0
   18194:	sub	sp, sp, #12
   18198:	str	r0, [fp, #-8]
   1819c:	ldr	r3, [fp, #-8]
   181a0:	ldr	r3, [r3, #4]
   181a4:	cmp	r3, #0
   181a8:	beq	181bc <__assert_fail@plt+0x6f4c>
   181ac:	ldr	r3, [fp, #-8]
   181b0:	ldr	r3, [r3, #8]
   181b4:	ldr	r3, [r3]
   181b8:	b	181c0 <__assert_fail@plt+0x6f50>
   181bc:	mov	r3, #0
   181c0:	mov	r0, r3
   181c4:	add	sp, fp, #0
   181c8:	pop	{fp}		; (ldr fp, [sp], #4)
   181cc:	bx	lr
   181d0:	push	{fp}		; (str fp, [sp, #-4]!)
   181d4:	add	fp, sp, #0
   181d8:	sub	sp, sp, #12
   181dc:	str	r0, [fp, #-8]
   181e0:	ldr	r3, [fp, #-8]
   181e4:	ldr	r3, [r3, #4]
   181e8:	cmp	r3, #0
   181ec:	rsblt	r3, r3, #0
   181f0:	mov	r0, r3
   181f4:	add	sp, fp, #0
   181f8:	pop	{fp}		; (ldr fp, [sp], #4)
   181fc:	bx	lr
   18200:	push	{fp}		; (str fp, [sp, #-4]!)
   18204:	add	fp, sp, #0
   18208:	sub	sp, sp, #12
   1820c:	str	r0, [fp, #-8]
   18210:	str	r1, [fp, #-12]
   18214:	ldr	r3, [fp, #-12]
   18218:	cmp	r3, #0
   1821c:	blt	18258 <__assert_fail@plt+0x6fe8>
   18220:	ldr	r3, [fp, #-8]
   18224:	ldr	r3, [r3, #4]
   18228:	eor	r2, r3, r3, asr #31
   1822c:	sub	r2, r2, r3, asr #31
   18230:	ldr	r3, [fp, #-12]
   18234:	cmp	r2, r3
   18238:	ble	18258 <__assert_fail@plt+0x6fe8>
   1823c:	ldr	r3, [fp, #-8]
   18240:	ldr	r2, [r3, #8]
   18244:	ldr	r3, [fp, #-12]
   18248:	lsl	r3, r3, #2
   1824c:	add	r3, r2, r3
   18250:	ldr	r3, [r3]
   18254:	b	1825c <__assert_fail@plt+0x6fec>
   18258:	mov	r3, #0
   1825c:	mov	r0, r3
   18260:	add	sp, fp, #0
   18264:	pop	{fp}		; (ldr fp, [sp], #4)
   18268:	bx	lr
   1826c:	push	{fp, lr}
   18270:	add	fp, sp, #4
   18274:	sub	sp, sp, #8
   18278:	str	r0, [fp, #-8]
   1827c:	str	r1, [fp, #-12]
   18280:	ldr	r3, [fp, #-12]
   18284:	cmp	r3, #0
   18288:	movne	r3, #1
   1828c:	moveq	r3, #0
   18290:	uxtb	r3, r3
   18294:	mov	r2, r3
   18298:	ldr	r3, [fp, #-12]
   1829c:	sub	r3, r3, r2
   182a0:	lsr	r3, r3, #5
   182a4:	add	r3, r3, #1
   182a8:	mov	r1, r3
   182ac:	ldr	r0, [fp, #-8]
   182b0:	bl	17b90 <__assert_fail@plt+0x6920>
   182b4:	nop			; (mov r0, r0)
   182b8:	sub	sp, fp, #4
   182bc:	pop	{fp, pc}
   182c0:	push	{fp}		; (str fp, [sp, #-4]!)
   182c4:	add	fp, sp, #0
   182c8:	sub	sp, sp, #12
   182cc:	str	r0, [fp, #-8]
   182d0:	ldr	r3, [fp, #-8]
   182d4:	ldr	r3, [r3, #8]
   182d8:	mov	r0, r3
   182dc:	add	sp, fp, #0
   182e0:	pop	{fp}		; (ldr fp, [sp], #4)
   182e4:	bx	lr
   182e8:	push	{fp, lr}
   182ec:	add	fp, sp, #4
   182f0:	sub	sp, sp, #8
   182f4:	str	r0, [fp, #-8]
   182f8:	str	r1, [fp, #-12]
   182fc:	ldr	r3, [fp, #-12]
   18300:	cmp	r3, #0
   18304:	bgt	1831c <__assert_fail@plt+0x70ac>
   18308:	ldr	r3, [pc, #72]	; 18358 <__assert_fail@plt+0x70e8>
   1830c:	ldr	r2, [pc, #72]	; 1835c <__assert_fail@plt+0x70ec>
   18310:	ldr	r1, [pc, #72]	; 18360 <__assert_fail@plt+0x70f0>
   18314:	ldr	r0, [pc, #72]	; 18364 <__assert_fail@plt+0x70f4>
   18318:	bl	11270 <__assert_fail@plt>
   1831c:	ldr	r3, [fp, #-8]
   18320:	ldr	r2, [r3]
   18324:	ldr	r3, [fp, #-12]
   18328:	cmp	r2, r3
   1832c:	bge	18344 <__assert_fail@plt+0x70d4>
   18330:	ldr	r1, [fp, #-12]
   18334:	ldr	r0, [fp, #-8]
   18338:	bl	17b90 <__assert_fail@plt+0x6920>
   1833c:	mov	r3, r0
   18340:	b	1834c <__assert_fail@plt+0x70dc>
   18344:	ldr	r3, [fp, #-8]
   18348:	ldr	r3, [r3, #8]
   1834c:	mov	r0, r3
   18350:	sub	sp, fp, #4
   18354:	pop	{fp, pc}
   18358:	ldrdeq	r0, [r4], -r4
   1835c:	andeq	r0, r0, pc, ror r6
   18360:	andeq	r0, r4, r8, asr #12
   18364:	andeq	r0, r4, r4, asr #13
   18368:	push	{fp, lr}
   1836c:	add	fp, sp, #4
   18370:	sub	sp, sp, #8
   18374:	str	r0, [fp, #-8]
   18378:	str	r1, [fp, #-12]
   1837c:	ldr	r1, [fp, #-12]
   18380:	ldr	r0, [fp, #-8]
   18384:	bl	182e8 <__assert_fail@plt+0x7078>
   18388:	mov	r3, r0
   1838c:	mov	r0, r3
   18390:	sub	sp, fp, #4
   18394:	pop	{fp, pc}
   18398:	push	{fp, lr}
   1839c:	add	fp, sp, #4
   183a0:	sub	sp, sp, #16
   183a4:	str	r0, [fp, #-16]
   183a8:	str	r1, [fp, #-20]	; 0xffffffec
   183ac:	ldr	r3, [fp, #-16]
   183b0:	ldr	r2, [r3, #8]
   183b4:	ldr	r3, [fp, #-20]	; 0xffffffec
   183b8:	cmp	r3, #0
   183bc:	rsblt	r3, r3, #0
   183c0:	mov	r1, r3
   183c4:	mov	r0, r2
   183c8:	bl	13c08 <__assert_fail@plt+0x2998>
   183cc:	str	r0, [fp, #-8]
   183d0:	ldr	r3, [fp, #-20]	; 0xffffffec
   183d4:	cmp	r3, #0
   183d8:	bge	183e8 <__assert_fail@plt+0x7178>
   183dc:	ldr	r3, [fp, #-8]
   183e0:	rsb	r3, r3, #0
   183e4:	b	183ec <__assert_fail@plt+0x717c>
   183e8:	ldr	r3, [fp, #-8]
   183ec:	ldr	r2, [fp, #-16]
   183f0:	str	r3, [r2, #4]
   183f4:	nop			; (mov r0, r0)
   183f8:	sub	sp, fp, #4
   183fc:	pop	{fp, pc}
   18400:	push	{fp}		; (str fp, [sp, #-4]!)
   18404:	add	fp, sp, #0
   18408:	sub	sp, sp, #20
   1840c:	str	r0, [fp, #-8]
   18410:	str	r1, [fp, #-12]
   18414:	str	r2, [fp, #-16]
   18418:	ldr	r3, [fp, #-8]
   1841c:	mov	r2, #0
   18420:	str	r2, [r3]
   18424:	ldr	r3, [fp, #-8]
   18428:	ldr	r2, [fp, #-12]
   1842c:	str	r2, [r3, #8]
   18430:	ldr	r3, [fp, #-8]
   18434:	ldr	r2, [fp, #-16]
   18438:	str	r2, [r3, #4]
   1843c:	ldr	r3, [fp, #-8]
   18440:	mov	r0, r3
   18444:	add	sp, fp, #0
   18448:	pop	{fp}		; (ldr fp, [sp], #4)
   1844c:	bx	lr
   18450:	push	{fp, lr}
   18454:	add	fp, sp, #4
   18458:	sub	sp, sp, #16
   1845c:	str	r0, [fp, #-8]
   18460:	str	r1, [fp, #-12]
   18464:	str	r2, [fp, #-16]
   18468:	ldr	r2, [fp, #-16]
   1846c:	ldr	r1, [fp, #-12]
   18470:	ldr	r0, [fp, #-8]
   18474:	bl	18400 <__assert_fail@plt+0x7190>
   18478:	ldr	r1, [fp, #-16]
   1847c:	ldr	r0, [fp, #-8]
   18480:	bl	18398 <__assert_fail@plt+0x7128>
   18484:	ldr	r3, [fp, #-8]
   18488:	mov	r0, r3
   1848c:	sub	sp, fp, #4
   18490:	pop	{fp, pc}
   18494:	push	{fp, lr}
   18498:	add	fp, sp, #4
   1849c:	sub	sp, sp, #56	; 0x38
   184a0:	str	r0, [fp, #-48]	; 0xffffffd0
   184a4:	vstr	d0, [fp, #-60]	; 0xffffffc4
   184a8:	vldr	d6, [fp, #-60]	; 0xffffffc4
   184ac:	vldr	d7, [fp, #-60]	; 0xffffffc4
   184b0:	vcmp.f64	d6, d7
   184b4:	vmrs	APSR_nzcv, fpscr
   184b8:	bne	184d8 <__assert_fail@plt+0x7268>
   184bc:	vldr	d7, [fp, #-60]	; 0xffffffc4
   184c0:	vldr	d6, [pc, #568]	; 18700 <__assert_fail@plt+0x7490>
   184c4:	vmul.f64	d6, d7, d6
   184c8:	vldr	d7, [fp, #-60]	; 0xffffffc4
   184cc:	vcmp.f64	d6, d7
   184d0:	vmrs	APSR_nzcv, fpscr
   184d4:	bne	184e8 <__assert_fail@plt+0x7278>
   184d8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   184dc:	mov	r2, #0
   184e0:	str	r2, [r3, #4]
   184e4:	b	186f8 <__assert_fail@plt+0x7488>
   184e8:	vldr	d7, [fp, #-60]	; 0xffffffc4
   184ec:	vcmpe.f64	d7, #0.0
   184f0:	vmrs	APSR_nzcv, fpscr
   184f4:	movmi	r3, #1
   184f8:	movpl	r3, #0
   184fc:	uxtb	r3, r3
   18500:	str	r3, [fp, #-16]
   18504:	ldr	r3, [fp, #-16]
   18508:	cmp	r3, #0
   1850c:	beq	1851c <__assert_fail@plt+0x72ac>
   18510:	vldr	d7, [fp, #-60]	; 0xffffffc4
   18514:	vneg.f64	d7, d7
   18518:	vstr	d7, [fp, #-60]	; 0xffffffc4
   1851c:	vldr	d7, [fp, #-60]	; 0xffffffc4
   18520:	vldr	d6, [pc, #480]	; 18708 <__assert_fail@plt+0x7498>
   18524:	vcmpe.f64	d7, d6
   18528:	vmrs	APSR_nzcv, fpscr
   1852c:	bpl	18540 <__assert_fail@plt+0x72d0>
   18530:	ldr	r3, [fp, #-48]	; 0xffffffd0
   18534:	mov	r2, #0
   18538:	str	r2, [r3, #4]
   1853c:	b	186f8 <__assert_fail@plt+0x7488>
   18540:	mov	r2, #0
   18544:	ldr	r3, [pc, #452]	; 18710 <__assert_fail@plt+0x74a0>
   18548:	strd	r2, [fp, #-28]	; 0xffffffe4
   1854c:	vldr	d5, [pc, #436]	; 18708 <__assert_fail@plt+0x7498>
   18550:	vldr	d6, [fp, #-28]	; 0xffffffe4
   18554:	vdiv.f64	d7, d5, d6
   18558:	vstr	d7, [fp, #-36]	; 0xffffffdc
   1855c:	mov	r3, #1
   18560:	str	r3, [fp, #-8]
   18564:	b	18584 <__assert_fail@plt+0x7314>
   18568:	vldr	d6, [fp, #-60]	; 0xffffffc4
   1856c:	vldr	d7, [fp, #-36]	; 0xffffffdc
   18570:	vmul.f64	d7, d6, d7
   18574:	vstr	d7, [fp, #-60]	; 0xffffffc4
   18578:	ldr	r3, [fp, #-8]
   1857c:	add	r3, r3, #1
   18580:	str	r3, [fp, #-8]
   18584:	vldr	d6, [fp, #-60]	; 0xffffffc4
   18588:	vldr	d7, [fp, #-28]	; 0xffffffe4
   1858c:	vcmpe.f64	d6, d7
   18590:	vmrs	APSR_nzcv, fpscr
   18594:	bge	18568 <__assert_fail@plt+0x72f8>
   18598:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1859c:	ldr	r2, [r3]
   185a0:	ldr	r3, [fp, #-8]
   185a4:	cmp	r2, r3
   185a8:	bge	185c0 <__assert_fail@plt+0x7350>
   185ac:	ldr	r1, [fp, #-8]
   185b0:	ldr	r0, [fp, #-48]	; 0xffffffd0
   185b4:	bl	17b90 <__assert_fail@plt+0x6920>
   185b8:	mov	r3, r0
   185bc:	b	185c8 <__assert_fail@plt+0x7358>
   185c0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   185c4:	ldr	r3, [r3, #8]
   185c8:	str	r3, [fp, #-40]	; 0xffffffd8
   185cc:	vldr	d7, [fp, #-60]	; 0xffffffc4
   185d0:	vcvt.u32.f64	s15, d7
   185d4:	vmov	r3, s15
   185d8:	str	r3, [fp, #-44]	; 0xffffffd4
   185dc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   185e0:	vmov	s15, r3
   185e4:	vcvt.f64.u32	d7, s15
   185e8:	vldr	d6, [fp, #-60]	; 0xffffffc4
   185ec:	vsub.f64	d7, d6, d7
   185f0:	vstr	d7, [fp, #-60]	; 0xffffffc4
   185f4:	vldr	d7, [fp, #-60]	; 0xffffffc4
   185f8:	vldr	d6, [pc, #264]	; 18708 <__assert_fail@plt+0x7498>
   185fc:	vcmpe.f64	d7, d6
   18600:	vmrs	APSR_nzcv, fpscr
   18604:	bmi	1861c <__assert_fail@plt+0x73ac>
   18608:	ldr	r3, [pc, #260]	; 18714 <__assert_fail@plt+0x74a4>
   1860c:	ldr	r2, [pc, #260]	; 18718 <__assert_fail@plt+0x74a8>
   18610:	ldr	r1, [pc, #260]	; 1871c <__assert_fail@plt+0x74ac>
   18614:	ldr	r0, [pc, #260]	; 18720 <__assert_fail@plt+0x74b0>
   18618:	bl	11270 <__assert_fail@plt>
   1861c:	ldr	r3, [fp, #-8]
   18620:	sub	r3, r3, #1
   18624:	str	r3, [fp, #-12]
   18628:	ldr	r3, [fp, #-12]
   1862c:	lsl	r3, r3, #2
   18630:	ldr	r2, [fp, #-40]	; 0xffffffd8
   18634:	add	r3, r2, r3
   18638:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1863c:	str	r2, [r3]
   18640:	b	186bc <__assert_fail@plt+0x744c>
   18644:	vldr	d6, [fp, #-60]	; 0xffffffc4
   18648:	vldr	d7, [fp, #-28]	; 0xffffffe4
   1864c:	vmul.f64	d7, d6, d7
   18650:	vstr	d7, [fp, #-60]	; 0xffffffc4
   18654:	vldr	d7, [fp, #-60]	; 0xffffffc4
   18658:	vcvt.u32.f64	s15, d7
   1865c:	vmov	r3, s15
   18660:	str	r3, [fp, #-44]	; 0xffffffd4
   18664:	ldr	r3, [fp, #-44]	; 0xffffffd4
   18668:	vmov	s15, r3
   1866c:	vcvt.f64.u32	d7, s15
   18670:	vldr	d6, [fp, #-60]	; 0xffffffc4
   18674:	vsub.f64	d7, d6, d7
   18678:	vstr	d7, [fp, #-60]	; 0xffffffc4
   1867c:	vldr	d7, [fp, #-60]	; 0xffffffc4
   18680:	vldr	d6, [pc, #128]	; 18708 <__assert_fail@plt+0x7498>
   18684:	vcmpe.f64	d7, d6
   18688:	vmrs	APSR_nzcv, fpscr
   1868c:	bmi	186a4 <__assert_fail@plt+0x7434>
   18690:	ldr	r3, [pc, #124]	; 18714 <__assert_fail@plt+0x74a4>
   18694:	mov	r2, #1744	; 0x6d0
   18698:	ldr	r1, [pc, #124]	; 1871c <__assert_fail@plt+0x74ac>
   1869c:	ldr	r0, [pc, #124]	; 18720 <__assert_fail@plt+0x74b0>
   186a0:	bl	11270 <__assert_fail@plt>
   186a4:	ldr	r3, [fp, #-12]
   186a8:	lsl	r3, r3, #2
   186ac:	ldr	r2, [fp, #-40]	; 0xffffffd8
   186b0:	add	r3, r2, r3
   186b4:	ldr	r2, [fp, #-44]	; 0xffffffd4
   186b8:	str	r2, [r3]
   186bc:	ldr	r3, [fp, #-12]
   186c0:	sub	r3, r3, #1
   186c4:	str	r3, [fp, #-12]
   186c8:	ldr	r3, [fp, #-12]
   186cc:	cmp	r3, #0
   186d0:	bge	18644 <__assert_fail@plt+0x73d4>
   186d4:	ldr	r3, [fp, #-16]
   186d8:	cmp	r3, #0
   186dc:	beq	186ec <__assert_fail@plt+0x747c>
   186e0:	ldr	r3, [fp, #-8]
   186e4:	rsb	r3, r3, #0
   186e8:	b	186f0 <__assert_fail@plt+0x7480>
   186ec:	ldr	r3, [fp, #-8]
   186f0:	ldr	r2, [fp, #-48]	; 0xffffffd0
   186f4:	str	r3, [r2, #4]
   186f8:	sub	sp, fp, #4
   186fc:	pop	{fp, pc}
   18700:	andeq	r0, r0, r0
   18704:	svccc	0x00e00000
   18708:	andeq	r0, r0, r0
   1870c:	svccc	0x00f00000	; IMB
   18710:	mvnsmi	r0, r0
   18714:	andeq	r0, r4, r8, ror #27
   18718:	andeq	r0, r0, r8, asr #13
   1871c:	andeq	r0, r4, r8, asr #12
   18720:	andeq	r0, r4, r8, ror #17
   18724:	push	{fp, lr}
   18728:	add	fp, sp, #4
   1872c:	sub	sp, sp, #16
   18730:	str	r0, [fp, #-8]
   18734:	vstr	d0, [fp, #-20]	; 0xffffffec
   18738:	ldr	r0, [fp, #-8]
   1873c:	bl	17a80 <__assert_fail@plt+0x6810>
   18740:	vldr	d0, [fp, #-20]	; 0xffffffec
   18744:	ldr	r0, [fp, #-8]
   18748:	bl	18494 <__assert_fail@plt+0x7224>
   1874c:	nop			; (mov r0, r0)
   18750:	sub	sp, fp, #4
   18754:	pop	{fp, pc}
   18758:	push	{fp}		; (str fp, [sp, #-4]!)
   1875c:	add	fp, sp, #0
   18760:	sub	sp, sp, #60	; 0x3c
   18764:	str	r0, [fp, #-56]	; 0xffffffc8
   18768:	mov	r2, #0
   1876c:	ldr	r3, [pc, #496]	; 18964 <__assert_fail@plt+0x76f4>
   18770:	strd	r2, [fp, #-44]	; 0xffffffd4
   18774:	ldr	r3, [fp, #-56]	; 0xffffffc8
   18778:	ldr	r3, [r3, #4]
   1877c:	cmp	r3, #0
   18780:	rsblt	r3, r3, #0
   18784:	str	r3, [fp, #-16]
   18788:	ldr	r3, [fp, #-16]
   1878c:	cmp	r3, #0
   18790:	bne	187a0 <__assert_fail@plt+0x7530>
   18794:	mov	r2, #0
   18798:	mov	r3, #0
   1879c:	b	18950 <__assert_fail@plt+0x76e0>
   187a0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   187a4:	ldr	r2, [r3, #8]
   187a8:	ldr	r3, [fp, #-16]
   187ac:	sub	r3, r3, #1
   187b0:	str	r3, [fp, #-16]
   187b4:	ldr	r3, [fp, #-16]
   187b8:	lsl	r3, r3, #2
   187bc:	add	r3, r2, r3
   187c0:	ldr	r3, [r3]
   187c4:	str	r3, [fp, #-12]
   187c8:	ldr	r3, [fp, #-12]
   187cc:	str	r3, [fp, #-32]	; 0xffffffe0
   187d0:	mov	r3, #0
   187d4:	str	r3, [fp, #-36]	; 0xffffffdc
   187d8:	mov	r3, #8
   187dc:	str	r3, [fp, #-48]	; 0xffffffd0
   187e0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   187e4:	cmp	r3, #31
   187e8:	bhi	18838 <__assert_fail@plt+0x75c8>
   187ec:	b	1880c <__assert_fail@plt+0x759c>
   187f0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   187f4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   187f8:	lsl	r3, r2, r3
   187fc:	str	r3, [fp, #-32]	; 0xffffffe0
   18800:	ldr	r3, [fp, #-36]	; 0xffffffdc
   18804:	add	r3, r3, #8
   18808:	str	r3, [fp, #-36]	; 0xffffffdc
   1880c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18810:	and	r3, r3, #-16777216	; 0xff000000
   18814:	cmp	r3, #0
   18818:	beq	187f0 <__assert_fail@plt+0x7580>
   1881c:	b	18838 <__assert_fail@plt+0x75c8>
   18820:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18824:	lsl	r3, r3, #1
   18828:	str	r3, [fp, #-32]	; 0xffffffe0
   1882c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   18830:	add	r3, r3, #1
   18834:	str	r3, [fp, #-36]	; 0xffffffdc
   18838:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1883c:	cmp	r3, #0
   18840:	bge	18820 <__assert_fail@plt+0x75b0>
   18844:	ldr	r3, [fp, #-36]	; 0xffffffdc
   18848:	str	r3, [fp, #-8]
   1884c:	ldr	r3, [fp, #-8]
   18850:	add	r3, r3, #21
   18854:	str	r3, [fp, #-8]
   18858:	ldr	r3, [fp, #-8]
   1885c:	cmp	r3, #0
   18860:	bge	18880 <__assert_fail@plt+0x7610>
   18864:	ldr	r3, [fp, #-8]
   18868:	rsb	r3, r3, #0
   1886c:	mvn	r2, #0
   18870:	lsl	r3, r2, r3
   18874:	ldr	r2, [fp, #-12]
   18878:	and	r3, r3, r2
   1887c:	str	r3, [fp, #-12]
   18880:	ldr	r3, [fp, #-12]
   18884:	vmov	s15, r3
   18888:	vcvt.f64.u32	d7, s15
   1888c:	vstr	d7, [fp, #-28]	; 0xffffffe4
   18890:	b	18918 <__assert_fail@plt+0x76a8>
   18894:	vldr	d6, [fp, #-28]	; 0xffffffe4
   18898:	vldr	d7, [fp, #-44]	; 0xffffffd4
   1889c:	vmul.f64	d7, d6, d7
   188a0:	vstr	d7, [fp, #-28]	; 0xffffffe4
   188a4:	ldr	r3, [fp, #-8]
   188a8:	cmp	r3, #0
   188ac:	ble	18918 <__assert_fail@plt+0x76a8>
   188b0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   188b4:	ldr	r2, [r3, #8]
   188b8:	ldr	r3, [fp, #-16]
   188bc:	lsl	r3, r3, #2
   188c0:	add	r3, r2, r3
   188c4:	ldr	r3, [r3]
   188c8:	str	r3, [fp, #-12]
   188cc:	ldr	r3, [fp, #-8]
   188d0:	sub	r3, r3, #32
   188d4:	str	r3, [fp, #-8]
   188d8:	ldr	r3, [fp, #-8]
   188dc:	cmp	r3, #0
   188e0:	bge	18900 <__assert_fail@plt+0x7690>
   188e4:	ldr	r3, [fp, #-8]
   188e8:	rsb	r3, r3, #0
   188ec:	mvn	r2, #0
   188f0:	lsl	r3, r2, r3
   188f4:	ldr	r2, [fp, #-12]
   188f8:	and	r3, r3, r2
   188fc:	str	r3, [fp, #-12]
   18900:	ldr	r3, [fp, #-12]
   18904:	vmov	s15, r3
   18908:	vcvt.f64.u32	d7, s15
   1890c:	vldr	d6, [fp, #-28]	; 0xffffffe4
   18910:	vadd.f64	d7, d6, d7
   18914:	vstr	d7, [fp, #-28]	; 0xffffffe4
   18918:	ldr	r3, [fp, #-16]
   1891c:	sub	r3, r3, #1
   18920:	str	r3, [fp, #-16]
   18924:	ldr	r3, [fp, #-16]
   18928:	cmp	r3, #0
   1892c:	bge	18894 <__assert_fail@plt+0x7624>
   18930:	ldr	r3, [fp, #-56]	; 0xffffffc8
   18934:	ldr	r3, [r3, #4]
   18938:	cmp	r3, #0
   1893c:	bge	1894c <__assert_fail@plt+0x76dc>
   18940:	vldr	d7, [fp, #-28]	; 0xffffffe4
   18944:	vneg.f64	d7, d7
   18948:	vstr	d7, [fp, #-28]	; 0xffffffe4
   1894c:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   18950:	vmov	d7, r2, r3
   18954:	vmov.f64	d0, d7
   18958:	add	sp, fp, #0
   1895c:	pop	{fp}		; (ldr fp, [sp], #4)
   18960:	bx	lr
   18964:	mvnsmi	r0, r0
   18968:	push	{fp}		; (str fp, [sp, #-4]!)
   1896c:	add	fp, sp, #0
   18970:	sub	sp, sp, #52	; 0x34
   18974:	str	r0, [fp, #-40]	; 0xffffffd8
   18978:	vstr	d0, [fp, #-52]	; 0xffffffcc
   1897c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   18980:	ldr	r3, [r3, #4]
   18984:	str	r3, [fp, #-12]
   18988:	vldr	d7, [fp, #-52]	; 0xffffffcc
   1898c:	vcmpe.f64	d7, #0.0
   18990:	vmrs	APSR_nzcv, fpscr
   18994:	blt	189a0 <__assert_fail@plt+0x7730>
   18998:	vldr	d7, [fp, #-52]	; 0xffffffcc
   1899c:	b	189a8 <__assert_fail@plt+0x7738>
   189a0:	vldr	d7, [fp, #-52]	; 0xffffffcc
   189a4:	vneg.f64	d7, d7
   189a8:	vstr	d7, [fp, #-52]	; 0xffffffcc
   189ac:	ldr	r3, [fp, #-12]
   189b0:	cmp	r3, #0
   189b4:	beq	18ad4 <__assert_fail@plt+0x7864>
   189b8:	ldr	r3, [fp, #-12]
   189bc:	cmp	r3, #0
   189c0:	rsblt	r3, r3, #0
   189c4:	str	r3, [fp, #-12]
   189c8:	mov	r2, #0
   189cc:	ldr	r3, [pc, #308]	; 18b08 <__assert_fail@plt+0x7898>
   189d0:	strd	r2, [fp, #-20]	; 0xffffffec
   189d4:	vldr	d5, [pc, #292]	; 18b00 <__assert_fail@plt+0x7890>
   189d8:	vldr	d6, [fp, #-20]	; 0xffffffec
   189dc:	vdiv.f64	d7, d5, d6
   189e0:	vstr	d7, [fp, #-28]	; 0xffffffe4
   189e4:	mov	r3, #1
   189e8:	str	r3, [fp, #-8]
   189ec:	b	18a0c <__assert_fail@plt+0x779c>
   189f0:	vldr	d6, [fp, #-52]	; 0xffffffcc
   189f4:	vldr	d7, [fp, #-28]	; 0xffffffe4
   189f8:	vmul.f64	d7, d6, d7
   189fc:	vstr	d7, [fp, #-52]	; 0xffffffcc
   18a00:	ldr	r3, [fp, #-8]
   18a04:	add	r3, r3, #1
   18a08:	str	r3, [fp, #-8]
   18a0c:	ldr	r2, [fp, #-8]
   18a10:	ldr	r3, [fp, #-12]
   18a14:	cmp	r2, r3
   18a18:	blt	189f0 <__assert_fail@plt+0x7780>
   18a1c:	vldr	d6, [fp, #-52]	; 0xffffffcc
   18a20:	vldr	d7, [fp, #-20]	; 0xffffffec
   18a24:	vcmpe.f64	d6, d7
   18a28:	vmrs	APSR_nzcv, fpscr
   18a2c:	blt	18a38 <__assert_fail@plt+0x77c8>
   18a30:	mvn	r3, #0
   18a34:	b	18af0 <__assert_fail@plt+0x7880>
   18a38:	ldr	r3, [fp, #-12]
   18a3c:	str	r3, [fp, #-8]
   18a40:	b	18ac0 <__assert_fail@plt+0x7850>
   18a44:	vldr	d7, [fp, #-52]	; 0xffffffcc
   18a48:	vcvt.u32.f64	s15, d7
   18a4c:	vmov	r3, s15
   18a50:	str	r3, [fp, #-32]	; 0xffffffe0
   18a54:	ldr	r3, [fp, #-40]	; 0xffffffd8
   18a58:	ldr	r2, [r3, #8]
   18a5c:	ldr	r3, [fp, #-8]
   18a60:	lsl	r3, r3, #2
   18a64:	add	r3, r2, r3
   18a68:	ldr	r3, [r3]
   18a6c:	str	r3, [fp, #-36]	; 0xffffffdc
   18a70:	ldr	r2, [fp, #-36]	; 0xffffffdc
   18a74:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18a78:	cmp	r2, r3
   18a7c:	bls	18a88 <__assert_fail@plt+0x7818>
   18a80:	mov	r3, #1
   18a84:	b	18af0 <__assert_fail@plt+0x7880>
   18a88:	ldr	r2, [fp, #-36]	; 0xffffffdc
   18a8c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18a90:	cmp	r2, r3
   18a94:	bcs	18aa0 <__assert_fail@plt+0x7830>
   18a98:	mvn	r3, #0
   18a9c:	b	18af0 <__assert_fail@plt+0x7880>
   18aa0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   18aa4:	vmov	s15, r3
   18aa8:	vcvt.f64.u32	d7, s15
   18aac:	vldr	d6, [fp, #-52]	; 0xffffffcc
   18ab0:	vsub.f64	d6, d6, d7
   18ab4:	vldr	d7, [fp, #-20]	; 0xffffffec
   18ab8:	vmul.f64	d7, d6, d7
   18abc:	vstr	d7, [fp, #-52]	; 0xffffffcc
   18ac0:	ldr	r3, [fp, #-8]
   18ac4:	sub	r2, r3, #1
   18ac8:	str	r2, [fp, #-8]
   18acc:	cmp	r3, #0
   18ad0:	bgt	18a44 <__assert_fail@plt+0x77d4>
   18ad4:	vldr	d7, [fp, #-52]	; 0xffffffcc
   18ad8:	vcmpe.f64	d7, #0.0
   18adc:	vmrs	APSR_nzcv, fpscr
   18ae0:	movgt	r3, #1
   18ae4:	movle	r3, #0
   18ae8:	uxtb	r3, r3
   18aec:	rsb	r3, r3, #0
   18af0:	mov	r0, r3
   18af4:	add	sp, fp, #0
   18af8:	pop	{fp}		; (ldr fp, [sp], #4)
   18afc:	bx	lr
   18b00:	andeq	r0, r0, r0
   18b04:	svccc	0x00f00000	; IMB
   18b08:	mvnsmi	r0, r0
   18b0c:	push	{fp, lr}
   18b10:	add	fp, sp, #4
   18b14:	sub	sp, sp, #16
   18b18:	str	r0, [fp, #-8]
   18b1c:	vstr	d0, [fp, #-20]	; 0xffffffec
   18b20:	ldr	r3, [fp, #-8]
   18b24:	ldr	r3, [r3, #4]
   18b28:	cmp	r3, #0
   18b2c:	bge	18b60 <__assert_fail@plt+0x78f0>
   18b30:	vldr	d7, [fp, #-20]	; 0xffffffec
   18b34:	vcmpe.f64	d7, #0.0
   18b38:	vmrs	APSR_nzcv, fpscr
   18b3c:	blt	18b48 <__assert_fail@plt+0x78d8>
   18b40:	mvn	r3, #0
   18b44:	b	18b88 <__assert_fail@plt+0x7918>
   18b48:	vldr	d0, [fp, #-20]	; 0xffffffec
   18b4c:	ldr	r0, [fp, #-8]
   18b50:	bl	18968 <__assert_fail@plt+0x76f8>
   18b54:	mov	r3, r0
   18b58:	rsb	r3, r3, #0
   18b5c:	b	18b88 <__assert_fail@plt+0x7918>
   18b60:	vldr	d7, [fp, #-20]	; 0xffffffec
   18b64:	vcmpe.f64	d7, #0.0
   18b68:	vmrs	APSR_nzcv, fpscr
   18b6c:	bpl	18b78 <__assert_fail@plt+0x7908>
   18b70:	mov	r3, #1
   18b74:	b	18b88 <__assert_fail@plt+0x7918>
   18b78:	vldr	d0, [fp, #-20]	; 0xffffffec
   18b7c:	ldr	r0, [fp, #-8]
   18b80:	bl	18968 <__assert_fail@plt+0x76f8>
   18b84:	mov	r3, r0
   18b88:	mov	r0, r3
   18b8c:	sub	sp, fp, #4
   18b90:	pop	{fp, pc}
   18b94:	push	{fp}		; (str fp, [sp, #-4]!)
   18b98:	add	fp, sp, #0
   18b9c:	sub	sp, sp, #12
   18ba0:	str	r0, [fp, #-8]
   18ba4:	ldr	r3, [fp, #-8]
   18ba8:	ldr	r3, [r3, #4]
   18bac:	cmp	r3, #0
   18bb0:	movgt	r3, #1
   18bb4:	movle	r3, #0
   18bb8:	uxtb	r3, r3
   18bbc:	mov	r2, r3
   18bc0:	ldr	r3, [fp, #-8]
   18bc4:	ldr	r3, [r3, #4]
   18bc8:	lsr	r3, r3, #31
   18bcc:	uxtb	r3, r3
   18bd0:	sub	r3, r2, r3
   18bd4:	mov	r0, r3
   18bd8:	add	sp, fp, #0
   18bdc:	pop	{fp}		; (ldr fp, [sp], #4)
   18be0:	bx	lr
   18be4:	push	{fp, lr}
   18be8:	add	fp, sp, #4
   18bec:	sub	sp, sp, #16
   18bf0:	str	r0, [fp, #-16]
   18bf4:	str	r1, [fp, #-20]	; 0xffffffec
   18bf8:	ldr	r3, [fp, #-16]
   18bfc:	ldr	r3, [r3, #4]
   18c00:	str	r3, [fp, #-8]
   18c04:	ldr	r3, [fp, #-20]	; 0xffffffec
   18c08:	cmp	r3, #0
   18c0c:	blt	18c28 <__assert_fail@plt+0x79b8>
   18c10:	ldr	r3, [fp, #-20]	; 0xffffffec
   18c14:	mov	r1, r3
   18c18:	ldr	r0, [fp, #-16]
   18c1c:	bl	18c64 <__assert_fail@plt+0x79f4>
   18c20:	mov	r3, r0
   18c24:	b	18c58 <__assert_fail@plt+0x79e8>
   18c28:	ldr	r3, [fp, #-8]
   18c2c:	cmp	r3, #0
   18c30:	blt	18c3c <__assert_fail@plt+0x79cc>
   18c34:	mov	r3, #1
   18c38:	b	18c58 <__assert_fail@plt+0x79e8>
   18c3c:	ldr	r3, [fp, #-20]	; 0xffffffec
   18c40:	rsb	r3, r3, #0
   18c44:	mov	r1, r3
   18c48:	ldr	r0, [fp, #-16]
   18c4c:	bl	18d70 <__assert_fail@plt+0x7b00>
   18c50:	mov	r3, r0
   18c54:	rsb	r3, r3, #0
   18c58:	mov	r0, r3
   18c5c:	sub	sp, fp, #4
   18c60:	pop	{fp, pc}
   18c64:	push	{fp, lr}
   18c68:	add	fp, sp, #4
   18c6c:	sub	sp, sp, #16
   18c70:	str	r0, [fp, #-16]
   18c74:	str	r1, [fp, #-20]	; 0xffffffec
   18c78:	ldr	r3, [fp, #-16]
   18c7c:	ldr	r3, [r3, #4]
   18c80:	str	r3, [fp, #-8]
   18c84:	ldr	r3, [fp, #-8]
   18c88:	cmp	r3, #0
   18c8c:	bge	18c98 <__assert_fail@plt+0x7a28>
   18c90:	mvn	r3, #0
   18c94:	b	18ca8 <__assert_fail@plt+0x7a38>
   18c98:	ldr	r1, [fp, #-20]	; 0xffffffec
   18c9c:	ldr	r0, [fp, #-16]
   18ca0:	bl	18d70 <__assert_fail@plt+0x7b00>
   18ca4:	mov	r3, r0
   18ca8:	mov	r0, r3
   18cac:	sub	sp, fp, #4
   18cb0:	pop	{fp, pc}
   18cb4:	push	{fp, lr}
   18cb8:	add	fp, sp, #4
   18cbc:	sub	sp, sp, #16
   18cc0:	str	r0, [fp, #-16]
   18cc4:	str	r1, [fp, #-20]	; 0xffffffec
   18cc8:	ldr	r3, [fp, #-16]
   18ccc:	ldr	r3, [r3, #4]
   18cd0:	str	r3, [fp, #-8]
   18cd4:	ldr	r3, [fp, #-20]	; 0xffffffec
   18cd8:	ldr	r3, [r3, #4]
   18cdc:	str	r3, [fp, #-12]
   18ce0:	ldr	r2, [fp, #-8]
   18ce4:	ldr	r3, [fp, #-12]
   18ce8:	cmp	r2, r3
   18cec:	beq	18d10 <__assert_fail@plt+0x7aa0>
   18cf0:	ldr	r2, [fp, #-8]
   18cf4:	ldr	r3, [fp, #-12]
   18cf8:	cmp	r2, r3
   18cfc:	bge	18d08 <__assert_fail@plt+0x7a98>
   18d00:	mvn	r3, #0
   18d04:	b	18d64 <__assert_fail@plt+0x7af4>
   18d08:	mov	r3, #1
   18d0c:	b	18d64 <__assert_fail@plt+0x7af4>
   18d10:	ldr	r3, [fp, #-8]
   18d14:	cmp	r3, #0
   18d18:	blt	18d40 <__assert_fail@plt+0x7ad0>
   18d1c:	ldr	r3, [fp, #-16]
   18d20:	ldr	r0, [r3, #8]
   18d24:	ldr	r3, [fp, #-20]	; 0xffffffec
   18d28:	ldr	r3, [r3, #8]
   18d2c:	ldr	r2, [fp, #-8]
   18d30:	mov	r1, r3
   18d34:	bl	13ae4 <__assert_fail@plt+0x2874>
   18d38:	mov	r3, r0
   18d3c:	b	18d64 <__assert_fail@plt+0x7af4>
   18d40:	ldr	r3, [fp, #-20]	; 0xffffffec
   18d44:	ldr	r0, [r3, #8]
   18d48:	ldr	r3, [fp, #-16]
   18d4c:	ldr	r1, [r3, #8]
   18d50:	ldr	r3, [fp, #-8]
   18d54:	rsb	r3, r3, #0
   18d58:	mov	r2, r3
   18d5c:	bl	13ae4 <__assert_fail@plt+0x2874>
   18d60:	mov	r3, r0
   18d64:	mov	r0, r3
   18d68:	sub	sp, fp, #4
   18d6c:	pop	{fp, pc}
   18d70:	push	{fp, lr}
   18d74:	add	fp, sp, #4
   18d78:	sub	sp, sp, #16
   18d7c:	str	r0, [fp, #-16]
   18d80:	str	r1, [fp, #-20]	; 0xffffffec
   18d84:	ldr	r3, [fp, #-16]
   18d88:	ldr	r3, [r3, #4]
   18d8c:	cmp	r3, #0
   18d90:	rsblt	r3, r3, #0
   18d94:	str	r3, [fp, #-8]
   18d98:	ldr	r3, [fp, #-16]
   18d9c:	ldr	r3, [r3, #8]
   18da0:	ldr	r1, [fp, #-8]
   18da4:	mov	r0, r3
   18da8:	bl	17ee4 <__assert_fail@plt+0x6c74>
   18dac:	mov	r3, r0
   18db0:	cmp	r3, #0
   18db4:	bne	18dc0 <__assert_fail@plt+0x7b50>
   18db8:	mov	r3, #1
   18dbc:	b	18e04 <__assert_fail@plt+0x7b94>
   18dc0:	ldr	r0, [fp, #-16]
   18dc4:	bl	1818c <__assert_fail@plt+0x6f1c>
   18dc8:	str	r0, [fp, #-12]
   18dcc:	ldr	r2, [fp, #-12]
   18dd0:	ldr	r3, [fp, #-20]	; 0xffffffec
   18dd4:	cmp	r2, r3
   18dd8:	movhi	r3, #1
   18ddc:	movls	r3, #0
   18de0:	uxtb	r3, r3
   18de4:	mov	r1, r3
   18de8:	ldr	r2, [fp, #-12]
   18dec:	ldr	r3, [fp, #-20]	; 0xffffffec
   18df0:	cmp	r2, r3
   18df4:	movcc	r3, #1
   18df8:	movcs	r3, #0
   18dfc:	uxtb	r3, r3
   18e00:	sub	r3, r1, r3
   18e04:	mov	r0, r3
   18e08:	sub	sp, fp, #4
   18e0c:	pop	{fp, pc}
   18e10:	push	{fp, lr}
   18e14:	add	fp, sp, #4
   18e18:	sub	sp, sp, #8
   18e1c:	str	r0, [fp, #-8]
   18e20:	str	r1, [fp, #-12]
   18e24:	ldr	r3, [fp, #-8]
   18e28:	ldr	r0, [r3, #8]
   18e2c:	ldr	r3, [fp, #-8]
   18e30:	ldr	r3, [r3, #4]
   18e34:	eor	r1, r3, r3, asr #31
   18e38:	sub	r1, r1, r3, asr #31
   18e3c:	ldr	r3, [fp, #-12]
   18e40:	ldr	r2, [r3, #8]
   18e44:	ldr	r3, [fp, #-12]
   18e48:	ldr	r3, [r3, #4]
   18e4c:	cmp	r3, #0
   18e50:	rsblt	r3, r3, #0
   18e54:	bl	13b9c <__assert_fail@plt+0x292c>
   18e58:	mov	r3, r0
   18e5c:	mov	r0, r3
   18e60:	sub	sp, fp, #4
   18e64:	pop	{fp, pc}
   18e68:	push	{fp, lr}
   18e6c:	add	fp, sp, #4
   18e70:	sub	sp, sp, #8
   18e74:	str	r0, [fp, #-8]
   18e78:	str	r1, [fp, #-12]
   18e7c:	ldr	r1, [fp, #-12]
   18e80:	ldr	r0, [fp, #-8]
   18e84:	bl	17d50 <__assert_fail@plt+0x6ae0>
   18e88:	ldr	r3, [fp, #-8]
   18e8c:	ldr	r3, [r3, #4]
   18e90:	eor	r2, r3, r3, asr #31
   18e94:	sub	r2, r2, r3, asr #31
   18e98:	ldr	r3, [fp, #-8]
   18e9c:	str	r2, [r3, #4]
   18ea0:	nop			; (mov r0, r0)
   18ea4:	sub	sp, fp, #4
   18ea8:	pop	{fp, pc}
   18eac:	push	{fp, lr}
   18eb0:	add	fp, sp, #4
   18eb4:	sub	sp, sp, #8
   18eb8:	str	r0, [fp, #-8]
   18ebc:	str	r1, [fp, #-12]
   18ec0:	ldr	r1, [fp, #-12]
   18ec4:	ldr	r0, [fp, #-8]
   18ec8:	bl	17d50 <__assert_fail@plt+0x6ae0>
   18ecc:	ldr	r3, [fp, #-8]
   18ed0:	ldr	r3, [r3, #4]
   18ed4:	rsb	r2, r3, #0
   18ed8:	ldr	r3, [fp, #-8]
   18edc:	str	r2, [r3, #4]
   18ee0:	nop			; (mov r0, r0)
   18ee4:	sub	sp, fp, #4
   18ee8:	pop	{fp, pc}
   18eec:	push	{fp}		; (str fp, [sp, #-4]!)
   18ef0:	add	fp, sp, #0
   18ef4:	sub	sp, sp, #28
   18ef8:	str	r0, [fp, #-24]	; 0xffffffe8
   18efc:	str	r1, [fp, #-28]	; 0xffffffe4
   18f00:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18f04:	ldr	r3, [r3, #4]
   18f08:	str	r3, [fp, #-8]
   18f0c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18f10:	ldr	r2, [r3, #4]
   18f14:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18f18:	str	r2, [r3, #4]
   18f1c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18f20:	ldr	r2, [fp, #-8]
   18f24:	str	r2, [r3, #4]
   18f28:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18f2c:	ldr	r3, [r3]
   18f30:	str	r3, [fp, #-12]
   18f34:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18f38:	ldr	r2, [r3]
   18f3c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18f40:	str	r2, [r3]
   18f44:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18f48:	ldr	r2, [fp, #-12]
   18f4c:	str	r2, [r3]
   18f50:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18f54:	ldr	r3, [r3, #8]
   18f58:	str	r3, [fp, #-16]
   18f5c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18f60:	ldr	r2, [r3, #8]
   18f64:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18f68:	str	r2, [r3, #8]
   18f6c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   18f70:	ldr	r2, [fp, #-16]
   18f74:	str	r2, [r3, #8]
   18f78:	nop			; (mov r0, r0)
   18f7c:	add	sp, fp, #0
   18f80:	pop	{fp}		; (ldr fp, [sp], #4)
   18f84:	bx	lr
   18f88:	push	{fp, lr}
   18f8c:	add	fp, sp, #4
   18f90:	sub	sp, sp, #32
   18f94:	str	r0, [fp, #-24]	; 0xffffffe8
   18f98:	str	r1, [fp, #-28]	; 0xffffffe4
   18f9c:	str	r2, [fp, #-32]	; 0xffffffe0
   18fa0:	sub	r3, fp, #16
   18fa4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   18fa8:	mov	r0, r3
   18fac:	bl	17e24 <__assert_fail@plt+0x6bb4>
   18fb0:	sub	r3, fp, #16
   18fb4:	mov	r2, r3
   18fb8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   18fbc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18fc0:	bl	19340 <__assert_fail@plt+0x80d0>
   18fc4:	sub	r3, fp, #16
   18fc8:	mov	r0, r3
   18fcc:	bl	17b48 <__assert_fail@plt+0x68d8>
   18fd0:	nop			; (mov r0, r0)
   18fd4:	sub	sp, fp, #4
   18fd8:	pop	{fp, pc}
   18fdc:	push	{fp, lr}
   18fe0:	add	fp, sp, #4
   18fe4:	sub	sp, sp, #16
   18fe8:	str	r0, [fp, #-8]
   18fec:	str	r1, [fp, #-12]
   18ff0:	str	r2, [fp, #-16]
   18ff4:	ldr	r2, [fp, #-12]
   18ff8:	ldr	r1, [fp, #-16]
   18ffc:	ldr	r0, [fp, #-8]
   19000:	bl	1901c <__assert_fail@plt+0x7dac>
   19004:	ldr	r1, [fp, #-8]
   19008:	ldr	r0, [fp, #-8]
   1900c:	bl	18eac <__assert_fail@plt+0x7c3c>
   19010:	nop			; (mov r0, r0)
   19014:	sub	sp, fp, #4
   19018:	pop	{fp, pc}
   1901c:	push	{fp, lr}
   19020:	add	fp, sp, #4
   19024:	sub	sp, sp, #16
   19028:	str	r0, [fp, #-8]
   1902c:	str	r1, [fp, #-12]
   19030:	str	r2, [fp, #-16]
   19034:	ldr	r1, [fp, #-16]
   19038:	ldr	r0, [fp, #-8]
   1903c:	bl	18eac <__assert_fail@plt+0x7c3c>
   19040:	ldr	r2, [fp, #-12]
   19044:	ldr	r1, [fp, #-8]
   19048:	ldr	r0, [fp, #-8]
   1904c:	bl	18f88 <__assert_fail@plt+0x7d18>
   19050:	nop			; (mov r0, r0)
   19054:	sub	sp, fp, #4
   19058:	pop	{fp, pc}
   1905c:	push	{fp, lr}
   19060:	add	fp, sp, #4
   19064:	sub	sp, sp, #48	; 0x30
   19068:	str	r0, [fp, #-32]	; 0xffffffe0
   1906c:	str	r1, [fp, #-36]	; 0xffffffdc
   19070:	str	r2, [fp, #-40]	; 0xffffffd8
   19074:	ldr	r3, [fp, #-36]	; 0xffffffdc
   19078:	ldr	r3, [r3, #4]
   1907c:	cmp	r3, #0
   19080:	rsblt	r3, r3, #0
   19084:	str	r3, [fp, #-8]
   19088:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1908c:	ldr	r3, [r3, #4]
   19090:	cmp	r3, #0
   19094:	rsblt	r3, r3, #0
   19098:	str	r3, [fp, #-12]
   1909c:	ldr	r2, [fp, #-8]
   190a0:	ldr	r3, [fp, #-12]
   190a4:	cmp	r2, r3
   190a8:	bge	190dc <__assert_fail@plt+0x7e6c>
   190ac:	ldr	r3, [fp, #-36]	; 0xffffffdc
   190b0:	str	r3, [fp, #-16]
   190b4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   190b8:	str	r3, [fp, #-36]	; 0xffffffdc
   190bc:	ldr	r3, [fp, #-16]
   190c0:	str	r3, [fp, #-40]	; 0xffffffd8
   190c4:	ldr	r3, [fp, #-8]
   190c8:	str	r3, [fp, #-20]	; 0xffffffec
   190cc:	ldr	r3, [fp, #-12]
   190d0:	str	r3, [fp, #-8]
   190d4:	ldr	r3, [fp, #-20]	; 0xffffffec
   190d8:	str	r3, [fp, #-12]
   190dc:	ldr	r3, [fp, #-8]
   190e0:	add	r2, r3, #1
   190e4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   190e8:	ldr	r3, [r3]
   190ec:	cmp	r2, r3
   190f0:	ble	19110 <__assert_fail@plt+0x7ea0>
   190f4:	ldr	r3, [fp, #-8]
   190f8:	add	r3, r3, #1
   190fc:	mov	r1, r3
   19100:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19104:	bl	17b90 <__assert_fail@plt+0x6920>
   19108:	mov	r3, r0
   1910c:	b	19118 <__assert_fail@plt+0x7ea8>
   19110:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19114:	ldr	r3, [r3, #8]
   19118:	str	r3, [fp, #-24]	; 0xffffffe8
   1911c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   19120:	ldr	r1, [r3, #8]
   19124:	ldr	r3, [fp, #-40]	; 0xffffffd8
   19128:	ldr	r2, [r3, #8]
   1912c:	ldr	r3, [fp, #-12]
   19130:	str	r3, [sp]
   19134:	mov	r3, r2
   19138:	ldr	r2, [fp, #-8]
   1913c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19140:	bl	13ee4 <__assert_fail@plt+0x2c74>
   19144:	str	r0, [fp, #-28]	; 0xffffffe4
   19148:	ldr	r3, [fp, #-8]
   1914c:	lsl	r3, r3, #2
   19150:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19154:	add	r3, r2, r3
   19158:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1915c:	str	r2, [r3]
   19160:	ldr	r2, [fp, #-8]
   19164:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19168:	add	r3, r2, r3
   1916c:	mov	r0, r3
   19170:	sub	sp, fp, #4
   19174:	pop	{fp, pc}
   19178:	push	{fp, lr}
   1917c:	add	fp, sp, #4
   19180:	sub	sp, sp, #48	; 0x30
   19184:	str	r0, [fp, #-32]	; 0xffffffe0
   19188:	str	r1, [fp, #-36]	; 0xffffffdc
   1918c:	str	r2, [fp, #-40]	; 0xffffffd8
   19190:	ldr	r3, [fp, #-36]	; 0xffffffdc
   19194:	ldr	r3, [r3, #4]
   19198:	cmp	r3, #0
   1919c:	rsblt	r3, r3, #0
   191a0:	str	r3, [fp, #-8]
   191a4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   191a8:	ldr	r3, [r3, #4]
   191ac:	cmp	r3, #0
   191b0:	rsblt	r3, r3, #0
   191b4:	str	r3, [fp, #-12]
   191b8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   191bc:	ldr	r0, [r3, #8]
   191c0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   191c4:	ldr	r2, [r3, #8]
   191c8:	ldr	r3, [fp, #-12]
   191cc:	ldr	r1, [fp, #-8]
   191d0:	bl	13b9c <__assert_fail@plt+0x292c>
   191d4:	str	r0, [fp, #-16]
   191d8:	ldr	r3, [fp, #-16]
   191dc:	cmp	r3, #0
   191e0:	ble	19278 <__assert_fail@plt+0x8008>
   191e4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   191e8:	ldr	r2, [r3]
   191ec:	ldr	r3, [fp, #-8]
   191f0:	cmp	r2, r3
   191f4:	bge	1920c <__assert_fail@plt+0x7f9c>
   191f8:	ldr	r1, [fp, #-8]
   191fc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19200:	bl	17b90 <__assert_fail@plt+0x6920>
   19204:	mov	r3, r0
   19208:	b	19214 <__assert_fail@plt+0x7fa4>
   1920c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19210:	ldr	r3, [r3, #8]
   19214:	str	r3, [fp, #-20]	; 0xffffffec
   19218:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1921c:	ldr	r1, [r3, #8]
   19220:	ldr	r3, [fp, #-40]	; 0xffffffd8
   19224:	ldr	r2, [r3, #8]
   19228:	ldr	r3, [fp, #-12]
   1922c:	str	r3, [sp]
   19230:	mov	r3, r2
   19234:	ldr	r2, [fp, #-8]
   19238:	ldr	r0, [fp, #-20]	; 0xffffffec
   1923c:	bl	14180 <__assert_fail@plt+0x2f10>
   19240:	str	r0, [fp, #-24]	; 0xffffffe8
   19244:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19248:	cmp	r3, #0
   1924c:	beq	19264 <__assert_fail@plt+0x7ff4>
   19250:	ldr	r3, [pc, #212]	; 1932c <__assert_fail@plt+0x80bc>
   19254:	ldr	r2, [pc, #212]	; 19330 <__assert_fail@plt+0x80c0>
   19258:	ldr	r1, [pc, #212]	; 19334 <__assert_fail@plt+0x80c4>
   1925c:	ldr	r0, [pc, #212]	; 19338 <__assert_fail@plt+0x80c8>
   19260:	bl	11270 <__assert_fail@plt>
   19264:	ldr	r1, [fp, #-8]
   19268:	ldr	r0, [fp, #-20]	; 0xffffffec
   1926c:	bl	13c08 <__assert_fail@plt+0x2998>
   19270:	mov	r3, r0
   19274:	b	19320 <__assert_fail@plt+0x80b0>
   19278:	ldr	r3, [fp, #-16]
   1927c:	cmp	r3, #0
   19280:	bge	1931c <__assert_fail@plt+0x80ac>
   19284:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19288:	ldr	r2, [r3]
   1928c:	ldr	r3, [fp, #-12]
   19290:	cmp	r2, r3
   19294:	bge	192ac <__assert_fail@plt+0x803c>
   19298:	ldr	r1, [fp, #-12]
   1929c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   192a0:	bl	17b90 <__assert_fail@plt+0x6920>
   192a4:	mov	r3, r0
   192a8:	b	192b4 <__assert_fail@plt+0x8044>
   192ac:	ldr	r3, [fp, #-32]	; 0xffffffe0
   192b0:	ldr	r3, [r3, #8]
   192b4:	str	r3, [fp, #-20]	; 0xffffffec
   192b8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   192bc:	ldr	r1, [r3, #8]
   192c0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   192c4:	ldr	r2, [r3, #8]
   192c8:	ldr	r3, [fp, #-8]
   192cc:	str	r3, [sp]
   192d0:	mov	r3, r2
   192d4:	ldr	r2, [fp, #-12]
   192d8:	ldr	r0, [fp, #-20]	; 0xffffffec
   192dc:	bl	14180 <__assert_fail@plt+0x2f10>
   192e0:	str	r0, [fp, #-28]	; 0xffffffe4
   192e4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   192e8:	cmp	r3, #0
   192ec:	beq	19304 <__assert_fail@plt+0x8094>
   192f0:	ldr	r3, [pc, #52]	; 1932c <__assert_fail@plt+0x80bc>
   192f4:	ldr	r2, [pc, #64]	; 1933c <__assert_fail@plt+0x80cc>
   192f8:	ldr	r1, [pc, #52]	; 19334 <__assert_fail@plt+0x80c4>
   192fc:	ldr	r0, [pc, #52]	; 19338 <__assert_fail@plt+0x80c8>
   19300:	bl	11270 <__assert_fail@plt>
   19304:	ldr	r1, [fp, #-12]
   19308:	ldr	r0, [fp, #-20]	; 0xffffffec
   1930c:	bl	13c08 <__assert_fail@plt+0x2998>
   19310:	mov	r3, r0
   19314:	rsb	r3, r3, #0
   19318:	b	19320 <__assert_fail@plt+0x80b0>
   1931c:	mov	r3, #0
   19320:	mov	r0, r3
   19324:	sub	sp, fp, #4
   19328:	pop	{fp, pc}
   1932c:	strdeq	r0, [r4], -r4
   19330:	ldrdeq	r0, [r0], -r6
   19334:	andeq	r0, r4, r8, asr #12
   19338:	andeq	r0, r4, r0, ror r8
   1933c:	ldrdeq	r0, [r0], -ip
   19340:	push	{fp, lr}
   19344:	add	fp, sp, #4
   19348:	sub	sp, sp, #24
   1934c:	str	r0, [fp, #-16]
   19350:	str	r1, [fp, #-20]	; 0xffffffec
   19354:	str	r2, [fp, #-24]	; 0xffffffe8
   19358:	ldr	r3, [fp, #-20]	; 0xffffffec
   1935c:	ldr	r2, [r3, #4]
   19360:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19364:	ldr	r3, [r3, #4]
   19368:	eor	r3, r3, r2
   1936c:	cmp	r3, #0
   19370:	blt	1938c <__assert_fail@plt+0x811c>
   19374:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19378:	ldr	r1, [fp, #-20]	; 0xffffffec
   1937c:	ldr	r0, [fp, #-16]
   19380:	bl	1905c <__assert_fail@plt+0x7dec>
   19384:	str	r0, [fp, #-8]
   19388:	b	193a0 <__assert_fail@plt+0x8130>
   1938c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19390:	ldr	r1, [fp, #-20]	; 0xffffffec
   19394:	ldr	r0, [fp, #-16]
   19398:	bl	19178 <__assert_fail@plt+0x7f08>
   1939c:	str	r0, [fp, #-8]
   193a0:	ldr	r3, [fp, #-20]	; 0xffffffec
   193a4:	ldr	r3, [r3, #4]
   193a8:	cmp	r3, #0
   193ac:	bge	193bc <__assert_fail@plt+0x814c>
   193b0:	ldr	r3, [fp, #-8]
   193b4:	rsb	r3, r3, #0
   193b8:	b	193c0 <__assert_fail@plt+0x8150>
   193bc:	ldr	r3, [fp, #-8]
   193c0:	ldr	r2, [fp, #-16]
   193c4:	str	r3, [r2, #4]
   193c8:	nop			; (mov r0, r0)
   193cc:	sub	sp, fp, #4
   193d0:	pop	{fp, pc}
   193d4:	push	{fp, lr}
   193d8:	add	fp, sp, #4
   193dc:	sub	sp, sp, #24
   193e0:	str	r0, [fp, #-16]
   193e4:	str	r1, [fp, #-20]	; 0xffffffec
   193e8:	str	r2, [fp, #-24]	; 0xffffffe8
   193ec:	ldr	r3, [fp, #-20]	; 0xffffffec
   193f0:	ldr	r2, [r3, #4]
   193f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   193f8:	ldr	r3, [r3, #4]
   193fc:	eor	r3, r3, r2
   19400:	cmp	r3, #0
   19404:	blt	19420 <__assert_fail@plt+0x81b0>
   19408:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1940c:	ldr	r1, [fp, #-20]	; 0xffffffec
   19410:	ldr	r0, [fp, #-16]
   19414:	bl	19178 <__assert_fail@plt+0x7f08>
   19418:	str	r0, [fp, #-8]
   1941c:	b	19434 <__assert_fail@plt+0x81c4>
   19420:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19424:	ldr	r1, [fp, #-20]	; 0xffffffec
   19428:	ldr	r0, [fp, #-16]
   1942c:	bl	1905c <__assert_fail@plt+0x7dec>
   19430:	str	r0, [fp, #-8]
   19434:	ldr	r3, [fp, #-20]	; 0xffffffec
   19438:	ldr	r3, [r3, #4]
   1943c:	cmp	r3, #0
   19440:	bge	19450 <__assert_fail@plt+0x81e0>
   19444:	ldr	r3, [fp, #-8]
   19448:	rsb	r3, r3, #0
   1944c:	b	19454 <__assert_fail@plt+0x81e4>
   19450:	ldr	r3, [fp, #-8]
   19454:	ldr	r2, [fp, #-16]
   19458:	str	r3, [r2, #4]
   1945c:	nop			; (mov r0, r0)
   19460:	sub	sp, fp, #4
   19464:	pop	{fp, pc}
   19468:	push	{fp, lr}
   1946c:	add	fp, sp, #4
   19470:	sub	sp, sp, #16
   19474:	str	r0, [fp, #-8]
   19478:	str	r1, [fp, #-12]
   1947c:	str	r2, [fp, #-16]
   19480:	ldr	r3, [fp, #-16]
   19484:	cmp	r3, #0
   19488:	bge	194b4 <__assert_fail@plt+0x8244>
   1948c:	ldr	r3, [fp, #-16]
   19490:	rsb	r3, r3, #0
   19494:	mov	r2, r3
   19498:	ldr	r1, [fp, #-12]
   1949c:	ldr	r0, [fp, #-8]
   194a0:	bl	194d4 <__assert_fail@plt+0x8264>
   194a4:	ldr	r1, [fp, #-8]
   194a8:	ldr	r0, [fp, #-8]
   194ac:	bl	18eac <__assert_fail@plt+0x7c3c>
   194b0:	b	194c8 <__assert_fail@plt+0x8258>
   194b4:	ldr	r3, [fp, #-16]
   194b8:	mov	r2, r3
   194bc:	ldr	r1, [fp, #-12]
   194c0:	ldr	r0, [fp, #-8]
   194c4:	bl	194d4 <__assert_fail@plt+0x8264>
   194c8:	nop			; (mov r0, r0)
   194cc:	sub	sp, fp, #4
   194d0:	pop	{fp, pc}
   194d4:	push	{fp, lr}
   194d8:	add	fp, sp, #4
   194dc:	sub	sp, sp, #32
   194e0:	str	r0, [fp, #-24]	; 0xffffffe8
   194e4:	str	r1, [fp, #-28]	; 0xffffffe4
   194e8:	str	r2, [fp, #-32]	; 0xffffffe0
   194ec:	sub	r3, fp, #16
   194f0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   194f4:	mov	r0, r3
   194f8:	bl	17e24 <__assert_fail@plt+0x6bb4>
   194fc:	sub	r3, fp, #16
   19500:	mov	r2, r3
   19504:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19508:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1950c:	bl	19528 <__assert_fail@plt+0x82b8>
   19510:	sub	r3, fp, #16
   19514:	mov	r0, r3
   19518:	bl	17b48 <__assert_fail@plt+0x68d8>
   1951c:	nop			; (mov r0, r0)
   19520:	sub	sp, fp, #4
   19524:	pop	{fp, pc}
   19528:	push	{fp, lr}
   1952c:	add	fp, sp, #4
   19530:	sub	sp, sp, #56	; 0x38
   19534:	str	r0, [fp, #-40]	; 0xffffffd8
   19538:	str	r1, [fp, #-44]	; 0xffffffd4
   1953c:	str	r2, [fp, #-48]	; 0xffffffd0
   19540:	ldr	r3, [fp, #-44]	; 0xffffffd4
   19544:	ldr	r3, [r3, #4]
   19548:	str	r3, [fp, #-8]
   1954c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   19550:	ldr	r3, [r3, #4]
   19554:	str	r3, [fp, #-12]
   19558:	ldr	r3, [fp, #-8]
   1955c:	cmp	r3, #0
   19560:	beq	19570 <__assert_fail@plt+0x8300>
   19564:	ldr	r3, [fp, #-12]
   19568:	cmp	r3, #0
   1956c:	bne	19580 <__assert_fail@plt+0x8310>
   19570:	ldr	r3, [fp, #-40]	; 0xffffffd8
   19574:	mov	r2, #0
   19578:	str	r2, [r3, #4]
   1957c:	b	196c8 <__assert_fail@plt+0x8458>
   19580:	ldr	r2, [fp, #-8]
   19584:	ldr	r3, [fp, #-12]
   19588:	eor	r3, r3, r2
   1958c:	lsr	r3, r3, #31
   19590:	uxtb	r3, r3
   19594:	str	r3, [fp, #-16]
   19598:	ldr	r3, [fp, #-8]
   1959c:	cmp	r3, #0
   195a0:	rsblt	r3, r3, #0
   195a4:	str	r3, [fp, #-8]
   195a8:	ldr	r3, [fp, #-12]
   195ac:	cmp	r3, #0
   195b0:	rsblt	r3, r3, #0
   195b4:	str	r3, [fp, #-12]
   195b8:	ldr	r2, [fp, #-8]
   195bc:	ldr	r3, [fp, #-12]
   195c0:	add	r3, r2, r3
   195c4:	lsl	r2, r3, #5
   195c8:	sub	r3, fp, #36	; 0x24
   195cc:	mov	r1, r2
   195d0:	mov	r0, r3
   195d4:	bl	17ac8 <__assert_fail@plt+0x6858>
   195d8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   195dc:	str	r3, [fp, #-20]	; 0xffffffec
   195e0:	ldr	r2, [fp, #-8]
   195e4:	ldr	r3, [fp, #-12]
   195e8:	cmp	r2, r3
   195ec:	blt	1961c <__assert_fail@plt+0x83ac>
   195f0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   195f4:	ldr	r1, [r3, #8]
   195f8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   195fc:	ldr	r2, [r3, #8]
   19600:	ldr	r3, [fp, #-12]
   19604:	str	r3, [sp]
   19608:	mov	r3, r2
   1960c:	ldr	r2, [fp, #-8]
   19610:	ldr	r0, [fp, #-20]	; 0xffffffec
   19614:	bl	14830 <__assert_fail@plt+0x35c0>
   19618:	b	19644 <__assert_fail@plt+0x83d4>
   1961c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   19620:	ldr	r1, [r3, #8]
   19624:	ldr	r3, [fp, #-44]	; 0xffffffd4
   19628:	ldr	r2, [r3, #8]
   1962c:	ldr	r3, [fp, #-8]
   19630:	str	r3, [sp]
   19634:	mov	r3, r2
   19638:	ldr	r2, [fp, #-12]
   1963c:	ldr	r0, [fp, #-20]	; 0xffffffec
   19640:	bl	14830 <__assert_fail@plt+0x35c0>
   19644:	ldr	r2, [fp, #-8]
   19648:	ldr	r3, [fp, #-12]
   1964c:	add	r3, r2, r3
   19650:	str	r3, [fp, #-24]	; 0xffffffe8
   19654:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19658:	sub	r3, r3, #-1073741823	; 0xc0000001
   1965c:	lsl	r3, r3, #2
   19660:	ldr	r2, [fp, #-20]	; 0xffffffec
   19664:	add	r3, r2, r3
   19668:	ldr	r3, [r3]
   1966c:	cmp	r3, #0
   19670:	moveq	r3, #1
   19674:	movne	r3, #0
   19678:	uxtb	r3, r3
   1967c:	mov	r2, r3
   19680:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19684:	sub	r3, r3, r2
   19688:	str	r3, [fp, #-24]	; 0xffffffe8
   1968c:	ldr	r3, [fp, #-16]
   19690:	cmp	r3, #0
   19694:	beq	196a4 <__assert_fail@plt+0x8434>
   19698:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1969c:	rsb	r3, r3, #0
   196a0:	b	196a8 <__assert_fail@plt+0x8438>
   196a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   196a8:	str	r3, [fp, #-32]	; 0xffffffe0
   196ac:	sub	r3, fp, #36	; 0x24
   196b0:	mov	r1, r3
   196b4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   196b8:	bl	18eec <__assert_fail@plt+0x7c7c>
   196bc:	sub	r3, fp, #36	; 0x24
   196c0:	mov	r0, r3
   196c4:	bl	17b48 <__assert_fail@plt+0x68d8>
   196c8:	sub	sp, fp, #4
   196cc:	pop	{fp, pc}
   196d0:	push	{fp, lr}
   196d4:	add	fp, sp, #4
   196d8:	sub	sp, sp, #40	; 0x28
   196dc:	str	r0, [fp, #-32]	; 0xffffffe0
   196e0:	str	r1, [fp, #-36]	; 0xffffffdc
   196e4:	str	r2, [fp, #-40]	; 0xffffffd8
   196e8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   196ec:	ldr	r3, [r3, #4]
   196f0:	cmp	r3, #0
   196f4:	rsblt	r3, r3, #0
   196f8:	str	r3, [fp, #-12]
   196fc:	ldr	r3, [fp, #-12]
   19700:	cmp	r3, #0
   19704:	bne	19718 <__assert_fail@plt+0x84a8>
   19708:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1970c:	mov	r2, #0
   19710:	str	r2, [r3, #4]
   19714:	b	1985c <__assert_fail@plt+0x85ec>
   19718:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1971c:	lsr	r3, r3, #5
   19720:	str	r3, [fp, #-16]
   19724:	ldr	r3, [fp, #-40]	; 0xffffffd8
   19728:	and	r3, r3, #31
   1972c:	str	r3, [fp, #-20]	; 0xffffffec
   19730:	ldr	r2, [fp, #-12]
   19734:	ldr	r3, [fp, #-16]
   19738:	add	r3, r2, r3
   1973c:	ldr	r2, [fp, #-20]	; 0xffffffec
   19740:	cmp	r2, #0
   19744:	movne	r2, #1
   19748:	moveq	r2, #0
   1974c:	uxtb	r2, r2
   19750:	add	r3, r3, r2
   19754:	str	r3, [fp, #-8]
   19758:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1975c:	ldr	r2, [r3]
   19760:	ldr	r3, [fp, #-8]
   19764:	cmp	r2, r3
   19768:	bge	19780 <__assert_fail@plt+0x8510>
   1976c:	ldr	r1, [fp, #-8]
   19770:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19774:	bl	17b90 <__assert_fail@plt+0x6920>
   19778:	mov	r3, r0
   1977c:	b	19788 <__assert_fail@plt+0x8518>
   19780:	ldr	r3, [fp, #-32]	; 0xffffffe0
   19784:	ldr	r3, [r3, #8]
   19788:	str	r3, [fp, #-24]	; 0xffffffe8
   1978c:	ldr	r3, [fp, #-20]	; 0xffffffec
   19790:	cmp	r3, #0
   19794:	beq	19804 <__assert_fail@plt+0x8594>
   19798:	ldr	r3, [fp, #-16]
   1979c:	lsl	r3, r3, #2
   197a0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   197a4:	add	r0, r2, r3
   197a8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   197ac:	ldr	r1, [r3, #8]
   197b0:	ldr	r3, [fp, #-20]	; 0xffffffec
   197b4:	ldr	r2, [fp, #-12]
   197b8:	bl	14a94 <__assert_fail@plt+0x3824>
   197bc:	str	r0, [fp, #-28]	; 0xffffffe4
   197c0:	ldr	r3, [fp, #-8]
   197c4:	sub	r3, r3, #-1073741823	; 0xc0000001
   197c8:	lsl	r3, r3, #2
   197cc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   197d0:	add	r3, r2, r3
   197d4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   197d8:	str	r2, [r3]
   197dc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   197e0:	cmp	r3, #0
   197e4:	moveq	r3, #1
   197e8:	movne	r3, #0
   197ec:	uxtb	r3, r3
   197f0:	mov	r2, r3
   197f4:	ldr	r3, [fp, #-8]
   197f8:	sub	r3, r3, r2
   197fc:	str	r3, [fp, #-8]
   19800:	b	19828 <__assert_fail@plt+0x85b8>
   19804:	ldr	r3, [fp, #-16]
   19808:	lsl	r3, r3, #2
   1980c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   19810:	add	r0, r2, r3
   19814:	ldr	r3, [fp, #-36]	; 0xffffffdc
   19818:	ldr	r3, [r3, #8]
   1981c:	ldr	r2, [fp, #-12]
   19820:	mov	r1, r3
   19824:	bl	13a78 <__assert_fail@plt+0x2808>
   19828:	ldr	r1, [fp, #-16]
   1982c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19830:	bl	13cac <__assert_fail@plt+0x2a3c>
   19834:	ldr	r3, [fp, #-36]	; 0xffffffdc
   19838:	ldr	r3, [r3, #4]
   1983c:	cmp	r3, #0
   19840:	bge	19850 <__assert_fail@plt+0x85e0>
   19844:	ldr	r3, [fp, #-8]
   19848:	rsb	r3, r3, #0
   1984c:	b	19854 <__assert_fail@plt+0x85e4>
   19850:	ldr	r3, [fp, #-8]
   19854:	ldr	r2, [fp, #-32]	; 0xffffffe0
   19858:	str	r3, [r2, #4]
   1985c:	sub	sp, fp, #4
   19860:	pop	{fp, pc}
   19864:	push	{fp, lr}
   19868:	add	fp, sp, #4
   1986c:	sub	sp, sp, #32
   19870:	str	r0, [fp, #-24]	; 0xffffffe8
   19874:	str	r1, [fp, #-28]	; 0xffffffe4
   19878:	str	r2, [fp, #-32]	; 0xffffffe0
   1987c:	sub	r3, fp, #16
   19880:	ldr	r1, [fp, #-32]	; 0xffffffe0
   19884:	mov	r0, r3
   19888:	bl	17e24 <__assert_fail@plt+0x6bb4>
   1988c:	sub	r2, fp, #16
   19890:	sub	r3, fp, #16
   19894:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19898:	mov	r0, r3
   1989c:	bl	19528 <__assert_fail@plt+0x82b8>
   198a0:	sub	r3, fp, #16
   198a4:	mov	r2, r3
   198a8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   198ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   198b0:	bl	19340 <__assert_fail@plt+0x80d0>
   198b4:	sub	r3, fp, #16
   198b8:	mov	r0, r3
   198bc:	bl	17b48 <__assert_fail@plt+0x68d8>
   198c0:	nop			; (mov r0, r0)
   198c4:	sub	sp, fp, #4
   198c8:	pop	{fp, pc}
   198cc:	push	{fp, lr}
   198d0:	add	fp, sp, #4
   198d4:	sub	sp, sp, #32
   198d8:	str	r0, [fp, #-24]	; 0xffffffe8
   198dc:	str	r1, [fp, #-28]	; 0xffffffe4
   198e0:	str	r2, [fp, #-32]	; 0xffffffe0
   198e4:	sub	r3, fp, #16
   198e8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   198ec:	mov	r0, r3
   198f0:	bl	17e24 <__assert_fail@plt+0x6bb4>
   198f4:	sub	r2, fp, #16
   198f8:	sub	r3, fp, #16
   198fc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19900:	mov	r0, r3
   19904:	bl	19528 <__assert_fail@plt+0x82b8>
   19908:	sub	r3, fp, #16
   1990c:	mov	r2, r3
   19910:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19914:	ldr	r0, [fp, #-24]	; 0xffffffe8
   19918:	bl	193d4 <__assert_fail@plt+0x8164>
   1991c:	sub	r3, fp, #16
   19920:	mov	r0, r3
   19924:	bl	17b48 <__assert_fail@plt+0x68d8>
   19928:	nop			; (mov r0, r0)
   1992c:	sub	sp, fp, #4
   19930:	pop	{fp, pc}
   19934:	push	{fp, lr}
   19938:	add	fp, sp, #4
   1993c:	sub	sp, sp, #32
   19940:	str	r0, [fp, #-24]	; 0xffffffe8
   19944:	str	r1, [fp, #-28]	; 0xffffffe4
   19948:	str	r2, [fp, #-32]	; 0xffffffe0
   1994c:	sub	r3, fp, #16
   19950:	mov	r0, r3
   19954:	bl	17a80 <__assert_fail@plt+0x6810>
   19958:	sub	r3, fp, #16
   1995c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   19960:	ldr	r1, [fp, #-28]	; 0xffffffe4
   19964:	mov	r0, r3
   19968:	bl	19528 <__assert_fail@plt+0x82b8>
   1996c:	sub	r3, fp, #16
   19970:	mov	r2, r3
   19974:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19978:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1997c:	bl	19340 <__assert_fail@plt+0x80d0>
   19980:	sub	r3, fp, #16
   19984:	mov	r0, r3
   19988:	bl	17b48 <__assert_fail@plt+0x68d8>
   1998c:	nop			; (mov r0, r0)
   19990:	sub	sp, fp, #4
   19994:	pop	{fp, pc}
   19998:	push	{fp, lr}
   1999c:	add	fp, sp, #4
   199a0:	sub	sp, sp, #32
   199a4:	str	r0, [fp, #-24]	; 0xffffffe8
   199a8:	str	r1, [fp, #-28]	; 0xffffffe4
   199ac:	str	r2, [fp, #-32]	; 0xffffffe0
   199b0:	sub	r3, fp, #16
   199b4:	mov	r0, r3
   199b8:	bl	17a80 <__assert_fail@plt+0x6810>
   199bc:	sub	r3, fp, #16
   199c0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   199c4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   199c8:	mov	r0, r3
   199cc:	bl	19528 <__assert_fail@plt+0x82b8>
   199d0:	sub	r3, fp, #16
   199d4:	mov	r2, r3
   199d8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   199dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   199e0:	bl	193d4 <__assert_fail@plt+0x8164>
   199e4:	sub	r3, fp, #16
   199e8:	mov	r0, r3
   199ec:	bl	17b48 <__assert_fail@plt+0x68d8>
   199f0:	nop			; (mov r0, r0)
   199f4:	sub	sp, fp, #4
   199f8:	pop	{fp, pc}
   199fc:	push	{fp, lr}
   19a00:	add	fp, sp, #4
   19a04:	sub	sp, sp, #88	; 0x58
   19a08:	str	r0, [fp, #-72]	; 0xffffffb8
   19a0c:	str	r1, [fp, #-76]	; 0xffffffb4
   19a10:	str	r2, [fp, #-80]	; 0xffffffb0
   19a14:	str	r3, [fp, #-84]	; 0xffffffac
   19a18:	ldr	r3, [fp, #-80]	; 0xffffffb0
   19a1c:	ldr	r3, [r3, #4]
   19a20:	str	r3, [fp, #-12]
   19a24:	ldr	r3, [fp, #-84]	; 0xffffffac
   19a28:	ldr	r3, [r3, #4]
   19a2c:	str	r3, [fp, #-16]
   19a30:	ldr	r3, [fp, #-16]
   19a34:	cmp	r3, #0
   19a38:	bne	19a44 <__assert_fail@plt+0x87d4>
   19a3c:	ldr	r0, [pc, #948]	; 19df8 <__assert_fail@plt+0x8b88>
   19a40:	bl	136c0 <__assert_fail@plt+0x2450>
   19a44:	ldr	r3, [fp, #-12]
   19a48:	cmp	r3, #0
   19a4c:	bne	19a88 <__assert_fail@plt+0x8818>
   19a50:	ldr	r3, [fp, #-72]	; 0xffffffb8
   19a54:	cmp	r3, #0
   19a58:	beq	19a68 <__assert_fail@plt+0x87f8>
   19a5c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   19a60:	mov	r2, #0
   19a64:	str	r2, [r3, #4]
   19a68:	ldr	r3, [fp, #-76]	; 0xffffffb4
   19a6c:	cmp	r3, #0
   19a70:	beq	19a80 <__assert_fail@plt+0x8810>
   19a74:	ldr	r3, [fp, #-76]	; 0xffffffb4
   19a78:	mov	r2, #0
   19a7c:	str	r2, [r3, #4]
   19a80:	mov	r3, #0
   19a84:	b	19dec <__assert_fail@plt+0x8b7c>
   19a88:	ldr	r3, [fp, #-12]
   19a8c:	cmp	r3, #0
   19a90:	rsblt	r3, r3, #0
   19a94:	str	r3, [fp, #-20]	; 0xffffffec
   19a98:	ldr	r3, [fp, #-16]
   19a9c:	cmp	r3, #0
   19aa0:	rsblt	r3, r3, #0
   19aa4:	str	r3, [fp, #-24]	; 0xffffffe8
   19aa8:	ldr	r2, [fp, #-16]
   19aac:	ldr	r3, [fp, #-12]
   19ab0:	eor	r3, r3, r2
   19ab4:	str	r3, [fp, #-28]	; 0xffffffe4
   19ab8:	ldr	r2, [fp, #-20]	; 0xffffffec
   19abc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19ac0:	cmp	r2, r3
   19ac4:	bge	19ba0 <__assert_fail@plt+0x8930>
   19ac8:	ldr	r3, [fp, #4]
   19acc:	cmp	r3, #1
   19ad0:	bne	19b18 <__assert_fail@plt+0x88a8>
   19ad4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19ad8:	cmp	r3, #0
   19adc:	blt	19b18 <__assert_fail@plt+0x88a8>
   19ae0:	ldr	r3, [fp, #-76]	; 0xffffffb4
   19ae4:	cmp	r3, #0
   19ae8:	beq	19afc <__assert_fail@plt+0x888c>
   19aec:	ldr	r2, [fp, #-84]	; 0xffffffac
   19af0:	ldr	r1, [fp, #-80]	; 0xffffffb0
   19af4:	ldr	r0, [fp, #-76]	; 0xffffffb4
   19af8:	bl	193d4 <__assert_fail@plt+0x8164>
   19afc:	ldr	r3, [fp, #-72]	; 0xffffffb8
   19b00:	cmp	r3, #0
   19b04:	beq	19b98 <__assert_fail@plt+0x8928>
   19b08:	mov	r1, #1
   19b0c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   19b10:	bl	17cd4 <__assert_fail@plt+0x6a64>
   19b14:	b	19b98 <__assert_fail@plt+0x8928>
   19b18:	ldr	r3, [fp, #4]
   19b1c:	cmp	r3, #0
   19b20:	bne	19b68 <__assert_fail@plt+0x88f8>
   19b24:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19b28:	cmp	r3, #0
   19b2c:	bge	19b68 <__assert_fail@plt+0x88f8>
   19b30:	ldr	r3, [fp, #-76]	; 0xffffffb4
   19b34:	cmp	r3, #0
   19b38:	beq	19b4c <__assert_fail@plt+0x88dc>
   19b3c:	ldr	r2, [fp, #-84]	; 0xffffffac
   19b40:	ldr	r1, [fp, #-80]	; 0xffffffb0
   19b44:	ldr	r0, [fp, #-76]	; 0xffffffb4
   19b48:	bl	19340 <__assert_fail@plt+0x80d0>
   19b4c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   19b50:	cmp	r3, #0
   19b54:	beq	19b98 <__assert_fail@plt+0x8928>
   19b58:	mvn	r1, #0
   19b5c:	ldr	r0, [fp, #-72]	; 0xffffffb8
   19b60:	bl	17c50 <__assert_fail@plt+0x69e0>
   19b64:	b	19b98 <__assert_fail@plt+0x8928>
   19b68:	ldr	r3, [fp, #-76]	; 0xffffffb4
   19b6c:	cmp	r3, #0
   19b70:	beq	19b80 <__assert_fail@plt+0x8910>
   19b74:	ldr	r1, [fp, #-80]	; 0xffffffb0
   19b78:	ldr	r0, [fp, #-76]	; 0xffffffb4
   19b7c:	bl	17d50 <__assert_fail@plt+0x6ae0>
   19b80:	ldr	r3, [fp, #-72]	; 0xffffffb8
   19b84:	cmp	r3, #0
   19b88:	beq	19b98 <__assert_fail@plt+0x8928>
   19b8c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   19b90:	mov	r2, #0
   19b94:	str	r2, [r3, #4]
   19b98:	mov	r3, #1
   19b9c:	b	19dec <__assert_fail@plt+0x8b7c>
   19ba0:	sub	r3, fp, #64	; 0x40
   19ba4:	ldr	r1, [fp, #-80]	; 0xffffffb0
   19ba8:	mov	r0, r3
   19bac:	bl	17e58 <__assert_fail@plt+0x6be8>
   19bb0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   19bb4:	str	r3, [fp, #-32]	; 0xffffffe0
   19bb8:	ldr	r2, [fp, #-20]	; 0xffffffec
   19bbc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19bc0:	sub	r3, r2, r3
   19bc4:	add	r3, r3, #1
   19bc8:	str	r3, [fp, #-36]	; 0xffffffdc
   19bcc:	ldr	r3, [fp, #-72]	; 0xffffffb8
   19bd0:	cmp	r3, #0
   19bd4:	beq	19bfc <__assert_fail@plt+0x898c>
   19bd8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   19bdc:	lsl	r2, r3, #5
   19be0:	sub	r3, fp, #52	; 0x34
   19be4:	mov	r1, r2
   19be8:	mov	r0, r3
   19bec:	bl	17ac8 <__assert_fail@plt+0x6858>
   19bf0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   19bf4:	str	r3, [fp, #-8]
   19bf8:	b	19c04 <__assert_fail@plt+0x8994>
   19bfc:	mov	r3, #0
   19c00:	str	r3, [fp, #-8]
   19c04:	ldr	r3, [fp, #-84]	; 0xffffffac
   19c08:	ldr	r2, [r3, #8]
   19c0c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   19c10:	str	r3, [sp]
   19c14:	mov	r3, r2
   19c18:	ldr	r2, [fp, #-20]	; 0xffffffec
   19c1c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   19c20:	ldr	r0, [fp, #-8]
   19c24:	bl	16bbc <__assert_fail@plt+0x594c>
   19c28:	ldr	r3, [fp, #-8]
   19c2c:	cmp	r3, #0
   19c30:	beq	19c8c <__assert_fail@plt+0x8a1c>
   19c34:	ldr	r3, [fp, #-36]	; 0xffffffdc
   19c38:	sub	r3, r3, #-1073741823	; 0xc0000001
   19c3c:	lsl	r3, r3, #2
   19c40:	ldr	r2, [fp, #-8]
   19c44:	add	r3, r2, r3
   19c48:	ldr	r3, [r3]
   19c4c:	cmp	r3, #0
   19c50:	moveq	r3, #1
   19c54:	movne	r3, #0
   19c58:	uxtb	r3, r3
   19c5c:	mov	r2, r3
   19c60:	ldr	r3, [fp, #-36]	; 0xffffffdc
   19c64:	sub	r3, r3, r2
   19c68:	str	r3, [fp, #-36]	; 0xffffffdc
   19c6c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19c70:	cmp	r3, #0
   19c74:	bge	19c84 <__assert_fail@plt+0x8a14>
   19c78:	ldr	r3, [fp, #-36]	; 0xffffffdc
   19c7c:	rsb	r3, r3, #0
   19c80:	b	19c88 <__assert_fail@plt+0x8a18>
   19c84:	ldr	r3, [fp, #-36]	; 0xffffffdc
   19c88:	str	r3, [fp, #-48]	; 0xffffffd0
   19c8c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   19c90:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19c94:	bl	13c08 <__assert_fail@plt+0x2998>
   19c98:	str	r0, [fp, #-40]	; 0xffffffd8
   19c9c:	ldr	r3, [fp, #-12]
   19ca0:	cmp	r3, #0
   19ca4:	bge	19cb4 <__assert_fail@plt+0x8a44>
   19ca8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   19cac:	rsb	r3, r3, #0
   19cb0:	b	19cb8 <__assert_fail@plt+0x8a48>
   19cb4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   19cb8:	str	r3, [fp, #-60]	; 0xffffffc4
   19cbc:	ldr	r3, [fp, #4]
   19cc0:	cmp	r3, #0
   19cc4:	bne	19d24 <__assert_fail@plt+0x8ab4>
   19cc8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19ccc:	cmp	r3, #0
   19cd0:	bge	19d24 <__assert_fail@plt+0x8ab4>
   19cd4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   19cd8:	cmp	r3, #0
   19cdc:	beq	19d24 <__assert_fail@plt+0x8ab4>
   19ce0:	ldr	r3, [fp, #-72]	; 0xffffffb8
   19ce4:	cmp	r3, #0
   19ce8:	beq	19d00 <__assert_fail@plt+0x8a90>
   19cec:	sub	r1, fp, #52	; 0x34
   19cf0:	sub	r3, fp, #52	; 0x34
   19cf4:	mov	r2, #1
   19cf8:	mov	r0, r3
   19cfc:	bl	18fdc <__assert_fail@plt+0x7d6c>
   19d00:	ldr	r3, [fp, #-76]	; 0xffffffb4
   19d04:	cmp	r3, #0
   19d08:	beq	19d88 <__assert_fail@plt+0x8b18>
   19d0c:	sub	r1, fp, #64	; 0x40
   19d10:	sub	r3, fp, #64	; 0x40
   19d14:	ldr	r2, [fp, #-84]	; 0xffffffac
   19d18:	mov	r0, r3
   19d1c:	bl	19340 <__assert_fail@plt+0x80d0>
   19d20:	b	19d88 <__assert_fail@plt+0x8b18>
   19d24:	ldr	r3, [fp, #4]
   19d28:	cmp	r3, #1
   19d2c:	bne	19d88 <__assert_fail@plt+0x8b18>
   19d30:	ldr	r3, [fp, #-28]	; 0xffffffe4
   19d34:	cmp	r3, #0
   19d38:	blt	19d88 <__assert_fail@plt+0x8b18>
   19d3c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   19d40:	cmp	r3, #0
   19d44:	beq	19d88 <__assert_fail@plt+0x8b18>
   19d48:	ldr	r3, [fp, #-72]	; 0xffffffb8
   19d4c:	cmp	r3, #0
   19d50:	beq	19d68 <__assert_fail@plt+0x8af8>
   19d54:	sub	r1, fp, #52	; 0x34
   19d58:	sub	r3, fp, #52	; 0x34
   19d5c:	mov	r2, #1
   19d60:	mov	r0, r3
   19d64:	bl	18f88 <__assert_fail@plt+0x7d18>
   19d68:	ldr	r3, [fp, #-76]	; 0xffffffb4
   19d6c:	cmp	r3, #0
   19d70:	beq	19d88 <__assert_fail@plt+0x8b18>
   19d74:	sub	r1, fp, #64	; 0x40
   19d78:	sub	r3, fp, #64	; 0x40
   19d7c:	ldr	r2, [fp, #-84]	; 0xffffffac
   19d80:	mov	r0, r3
   19d84:	bl	193d4 <__assert_fail@plt+0x8164>
   19d88:	ldr	r3, [fp, #-72]	; 0xffffffb8
   19d8c:	cmp	r3, #0
   19d90:	beq	19db0 <__assert_fail@plt+0x8b40>
   19d94:	sub	r3, fp, #52	; 0x34
   19d98:	ldr	r1, [fp, #-72]	; 0xffffffb8
   19d9c:	mov	r0, r3
   19da0:	bl	18eec <__assert_fail@plt+0x7c7c>
   19da4:	sub	r3, fp, #52	; 0x34
   19da8:	mov	r0, r3
   19dac:	bl	17b48 <__assert_fail@plt+0x68d8>
   19db0:	ldr	r3, [fp, #-76]	; 0xffffffb4
   19db4:	cmp	r3, #0
   19db8:	beq	19dcc <__assert_fail@plt+0x8b5c>
   19dbc:	sub	r3, fp, #64	; 0x40
   19dc0:	ldr	r1, [fp, #-76]	; 0xffffffb4
   19dc4:	mov	r0, r3
   19dc8:	bl	18eec <__assert_fail@plt+0x7c7c>
   19dcc:	sub	r3, fp, #64	; 0x40
   19dd0:	mov	r0, r3
   19dd4:	bl	17b48 <__assert_fail@plt+0x68d8>
   19dd8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   19ddc:	cmp	r3, #0
   19de0:	movne	r3, #1
   19de4:	moveq	r3, #0
   19de8:	uxtb	r3, r3
   19dec:	mov	r0, r3
   19df0:	sub	sp, fp, #4
   19df4:	pop	{fp, pc}
   19df8:	strdeq	r0, [r4], -r0	; <UNPREDICTABLE>
   19dfc:	push	{fp, lr}
   19e00:	add	fp, sp, #4
   19e04:	sub	sp, sp, #24
   19e08:	str	r0, [fp, #-8]
   19e0c:	str	r1, [fp, #-12]
   19e10:	str	r2, [fp, #-16]
   19e14:	str	r3, [fp, #-20]	; 0xffffffec
   19e18:	mov	r3, #1
   19e1c:	str	r3, [sp]
   19e20:	ldr	r3, [fp, #-20]	; 0xffffffec
   19e24:	ldr	r2, [fp, #-16]
   19e28:	ldr	r1, [fp, #-12]
   19e2c:	ldr	r0, [fp, #-8]
   19e30:	bl	199fc <__assert_fail@plt+0x878c>
   19e34:	nop			; (mov r0, r0)
   19e38:	sub	sp, fp, #4
   19e3c:	pop	{fp, pc}
   19e40:	push	{fp, lr}
   19e44:	add	fp, sp, #4
   19e48:	sub	sp, sp, #24
   19e4c:	str	r0, [fp, #-8]
   19e50:	str	r1, [fp, #-12]
   19e54:	str	r2, [fp, #-16]
   19e58:	str	r3, [fp, #-20]	; 0xffffffec
   19e5c:	mov	r3, #0
   19e60:	str	r3, [sp]
   19e64:	ldr	r3, [fp, #-20]	; 0xffffffec
   19e68:	ldr	r2, [fp, #-16]
   19e6c:	ldr	r1, [fp, #-12]
   19e70:	ldr	r0, [fp, #-8]
   19e74:	bl	199fc <__assert_fail@plt+0x878c>
   19e78:	nop			; (mov r0, r0)
   19e7c:	sub	sp, fp, #4
   19e80:	pop	{fp, pc}
   19e84:	push	{fp, lr}
   19e88:	add	fp, sp, #4
   19e8c:	sub	sp, sp, #24
   19e90:	str	r0, [fp, #-8]
   19e94:	str	r1, [fp, #-12]
   19e98:	str	r2, [fp, #-16]
   19e9c:	str	r3, [fp, #-20]	; 0xffffffec
   19ea0:	mov	r3, #2
   19ea4:	str	r3, [sp]
   19ea8:	ldr	r3, [fp, #-20]	; 0xffffffec
   19eac:	ldr	r2, [fp, #-16]
   19eb0:	ldr	r1, [fp, #-12]
   19eb4:	ldr	r0, [fp, #-8]
   19eb8:	bl	199fc <__assert_fail@plt+0x878c>
   19ebc:	nop			; (mov r0, r0)
   19ec0:	sub	sp, fp, #4
   19ec4:	pop	{fp, pc}
   19ec8:	push	{fp, lr}
   19ecc:	add	fp, sp, #4
   19ed0:	sub	sp, sp, #24
   19ed4:	str	r0, [fp, #-8]
   19ed8:	str	r1, [fp, #-12]
   19edc:	str	r2, [fp, #-16]
   19ee0:	mov	r3, #1
   19ee4:	str	r3, [sp]
   19ee8:	ldr	r3, [fp, #-16]
   19eec:	ldr	r2, [fp, #-12]
   19ef0:	mov	r1, #0
   19ef4:	ldr	r0, [fp, #-8]
   19ef8:	bl	199fc <__assert_fail@plt+0x878c>
   19efc:	nop			; (mov r0, r0)
   19f00:	sub	sp, fp, #4
   19f04:	pop	{fp, pc}
   19f08:	push	{fp, lr}
   19f0c:	add	fp, sp, #4
   19f10:	sub	sp, sp, #24
   19f14:	str	r0, [fp, #-8]
   19f18:	str	r1, [fp, #-12]
   19f1c:	str	r2, [fp, #-16]
   19f20:	mov	r3, #0
   19f24:	str	r3, [sp]
   19f28:	ldr	r3, [fp, #-16]
   19f2c:	ldr	r2, [fp, #-12]
   19f30:	mov	r1, #0
   19f34:	ldr	r0, [fp, #-8]
   19f38:	bl	199fc <__assert_fail@plt+0x878c>
   19f3c:	nop			; (mov r0, r0)
   19f40:	sub	sp, fp, #4
   19f44:	pop	{fp, pc}
   19f48:	push	{fp, lr}
   19f4c:	add	fp, sp, #4
   19f50:	sub	sp, sp, #24
   19f54:	str	r0, [fp, #-8]
   19f58:	str	r1, [fp, #-12]
   19f5c:	str	r2, [fp, #-16]
   19f60:	mov	r3, #2
   19f64:	str	r3, [sp]
   19f68:	ldr	r3, [fp, #-16]
   19f6c:	ldr	r2, [fp, #-12]
   19f70:	mov	r1, #0
   19f74:	ldr	r0, [fp, #-8]
   19f78:	bl	199fc <__assert_fail@plt+0x878c>
   19f7c:	nop			; (mov r0, r0)
   19f80:	sub	sp, fp, #4
   19f84:	pop	{fp, pc}
   19f88:	push	{fp, lr}
   19f8c:	add	fp, sp, #4
   19f90:	sub	sp, sp, #24
   19f94:	str	r0, [fp, #-8]
   19f98:	str	r1, [fp, #-12]
   19f9c:	str	r2, [fp, #-16]
   19fa0:	mov	r3, #1
   19fa4:	str	r3, [sp]
   19fa8:	ldr	r3, [fp, #-16]
   19fac:	ldr	r2, [fp, #-12]
   19fb0:	ldr	r1, [fp, #-8]
   19fb4:	mov	r0, #0
   19fb8:	bl	199fc <__assert_fail@plt+0x878c>
   19fbc:	nop			; (mov r0, r0)
   19fc0:	sub	sp, fp, #4
   19fc4:	pop	{fp, pc}
   19fc8:	push	{fp, lr}
   19fcc:	add	fp, sp, #4
   19fd0:	sub	sp, sp, #24
   19fd4:	str	r0, [fp, #-8]
   19fd8:	str	r1, [fp, #-12]
   19fdc:	str	r2, [fp, #-16]
   19fe0:	mov	r3, #0
   19fe4:	str	r3, [sp]
   19fe8:	ldr	r3, [fp, #-16]
   19fec:	ldr	r2, [fp, #-12]
   19ff0:	ldr	r1, [fp, #-8]
   19ff4:	mov	r0, #0
   19ff8:	bl	199fc <__assert_fail@plt+0x878c>
   19ffc:	nop			; (mov r0, r0)
   1a000:	sub	sp, fp, #4
   1a004:	pop	{fp, pc}
   1a008:	push	{fp, lr}
   1a00c:	add	fp, sp, #4
   1a010:	sub	sp, sp, #24
   1a014:	str	r0, [fp, #-8]
   1a018:	str	r1, [fp, #-12]
   1a01c:	str	r2, [fp, #-16]
   1a020:	mov	r3, #2
   1a024:	str	r3, [sp]
   1a028:	ldr	r3, [fp, #-16]
   1a02c:	ldr	r2, [fp, #-12]
   1a030:	ldr	r1, [fp, #-8]
   1a034:	mov	r0, #0
   1a038:	bl	199fc <__assert_fail@plt+0x878c>
   1a03c:	nop			; (mov r0, r0)
   1a040:	sub	sp, fp, #4
   1a044:	pop	{fp, pc}
   1a048:	push	{fp, lr}
   1a04c:	add	fp, sp, #4
   1a050:	sub	sp, sp, #24
   1a054:	str	r0, [fp, #-8]
   1a058:	str	r1, [fp, #-12]
   1a05c:	str	r2, [fp, #-16]
   1a060:	ldr	r3, [fp, #-16]
   1a064:	ldr	r3, [r3, #4]
   1a068:	lsr	r3, r3, #31
   1a06c:	uxtb	r3, r3
   1a070:	str	r3, [sp]
   1a074:	ldr	r3, [fp, #-16]
   1a078:	ldr	r2, [fp, #-12]
   1a07c:	ldr	r1, [fp, #-8]
   1a080:	mov	r0, #0
   1a084:	bl	199fc <__assert_fail@plt+0x878c>
   1a088:	nop			; (mov r0, r0)
   1a08c:	sub	sp, fp, #4
   1a090:	pop	{fp, pc}
   1a094:	push	{fp, lr}
   1a098:	add	fp, sp, #4
   1a09c:	sub	sp, sp, #40	; 0x28
   1a0a0:	str	r0, [fp, #-32]	; 0xffffffe0
   1a0a4:	str	r1, [fp, #-36]	; 0xffffffdc
   1a0a8:	str	r2, [fp, #-40]	; 0xffffffd8
   1a0ac:	str	r3, [fp, #-44]	; 0xffffffd4
   1a0b0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a0b4:	ldr	r3, [r3, #4]
   1a0b8:	str	r3, [fp, #-16]
   1a0bc:	ldr	r3, [fp, #-16]
   1a0c0:	cmp	r3, #0
   1a0c4:	bne	1a0d8 <__assert_fail@plt+0x8e68>
   1a0c8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a0cc:	mov	r2, #0
   1a0d0:	str	r2, [r3, #4]
   1a0d4:	b	1a2c4 <__assert_fail@plt+0x9054>
   1a0d8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a0dc:	lsr	r3, r3, #5
   1a0e0:	str	r3, [fp, #-20]	; 0xffffffec
   1a0e4:	ldr	r3, [fp, #-16]
   1a0e8:	eor	r2, r3, r3, asr #31
   1a0ec:	sub	r2, r2, r3, asr #31
   1a0f0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a0f4:	sub	r3, r2, r3
   1a0f8:	str	r3, [fp, #-8]
   1a0fc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a100:	and	r3, r3, #31
   1a104:	str	r3, [fp, #-40]	; 0xffffffd8
   1a108:	ldr	r3, [fp, #-16]
   1a10c:	cmp	r3, #0
   1a110:	ble	1a11c <__assert_fail@plt+0x8eac>
   1a114:	mov	r2, #1
   1a118:	b	1a120 <__assert_fail@plt+0x8eb0>
   1a11c:	mov	r2, #0
   1a120:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1a124:	cmp	r2, r3
   1a128:	bne	1a1a0 <__assert_fail@plt+0x8f30>
   1a12c:	ldr	r3, [fp, #-8]
   1a130:	cmp	r3, #0
   1a134:	ble	1a18c <__assert_fail@plt+0x8f1c>
   1a138:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a13c:	ldr	r3, [r3, #8]
   1a140:	ldr	r1, [fp, #-20]	; 0xffffffec
   1a144:	mov	r0, r3
   1a148:	bl	13c6c <__assert_fail@plt+0x29fc>
   1a14c:	mov	r3, r0
   1a150:	cmp	r3, #0
   1a154:	beq	1a18c <__assert_fail@plt+0x8f1c>
   1a158:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a15c:	ldr	r2, [r3, #8]
   1a160:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a164:	lsl	r3, r3, #2
   1a168:	add	r3, r2, r3
   1a16c:	ldr	r2, [r3]
   1a170:	mov	r1, #1
   1a174:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a178:	lsl	r3, r1, r3
   1a17c:	sub	r3, r3, #1
   1a180:	and	r3, r3, r2
   1a184:	cmp	r3, #0
   1a188:	beq	1a194 <__assert_fail@plt+0x8f24>
   1a18c:	mov	r3, #1
   1a190:	b	1a198 <__assert_fail@plt+0x8f28>
   1a194:	mov	r3, #0
   1a198:	str	r3, [fp, #-12]
   1a19c:	b	1a1a8 <__assert_fail@plt+0x8f38>
   1a1a0:	mov	r3, #0
   1a1a4:	str	r3, [fp, #-12]
   1a1a8:	ldr	r3, [fp, #-8]
   1a1ac:	cmp	r3, #0
   1a1b0:	bgt	1a1c0 <__assert_fail@plt+0x8f50>
   1a1b4:	mov	r3, #0
   1a1b8:	str	r3, [fp, #-8]
   1a1bc:	b	1a284 <__assert_fail@plt+0x9014>
   1a1c0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a1c4:	ldr	r2, [r3]
   1a1c8:	ldr	r3, [fp, #-8]
   1a1cc:	cmp	r2, r3
   1a1d0:	bge	1a1e8 <__assert_fail@plt+0x8f78>
   1a1d4:	ldr	r1, [fp, #-8]
   1a1d8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a1dc:	bl	17b90 <__assert_fail@plt+0x6920>
   1a1e0:	mov	r3, r0
   1a1e4:	b	1a1f0 <__assert_fail@plt+0x8f80>
   1a1e8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a1ec:	ldr	r3, [r3, #8]
   1a1f0:	str	r3, [fp, #-24]	; 0xffffffe8
   1a1f4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a1f8:	cmp	r3, #0
   1a1fc:	beq	1a260 <__assert_fail@plt+0x8ff0>
   1a200:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a204:	ldr	r2, [r3, #8]
   1a208:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a20c:	lsl	r3, r3, #2
   1a210:	add	r1, r2, r3
   1a214:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a218:	ldr	r2, [fp, #-8]
   1a21c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a220:	bl	14c2c <__assert_fail@plt+0x39bc>
   1a224:	ldr	r3, [fp, #-8]
   1a228:	sub	r3, r3, #-1073741823	; 0xc0000001
   1a22c:	lsl	r3, r3, #2
   1a230:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a234:	add	r3, r2, r3
   1a238:	ldr	r3, [r3]
   1a23c:	cmp	r3, #0
   1a240:	moveq	r3, #1
   1a244:	movne	r3, #0
   1a248:	uxtb	r3, r3
   1a24c:	mov	r2, r3
   1a250:	ldr	r3, [fp, #-8]
   1a254:	sub	r3, r3, r2
   1a258:	str	r3, [fp, #-8]
   1a25c:	b	1a284 <__assert_fail@plt+0x9014>
   1a260:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1a264:	ldr	r2, [r3, #8]
   1a268:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a26c:	lsl	r3, r3, #2
   1a270:	add	r3, r2, r3
   1a274:	ldr	r2, [fp, #-8]
   1a278:	mov	r1, r3
   1a27c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a280:	bl	13a00 <__assert_fail@plt+0x2790>
   1a284:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a288:	ldr	r2, [fp, #-8]
   1a28c:	str	r2, [r3, #4]
   1a290:	ldr	r3, [fp, #-12]
   1a294:	cmp	r3, #0
   1a298:	beq	1a2ac <__assert_fail@plt+0x903c>
   1a29c:	mov	r2, #1
   1a2a0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1a2a4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a2a8:	bl	18f88 <__assert_fail@plt+0x7d18>
   1a2ac:	ldr	r3, [fp, #-16]
   1a2b0:	cmp	r3, #0
   1a2b4:	bge	1a2c4 <__assert_fail@plt+0x9054>
   1a2b8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1a2bc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a2c0:	bl	18eac <__assert_fail@plt+0x7c3c>
   1a2c4:	sub	sp, fp, #4
   1a2c8:	pop	{fp, pc}
   1a2cc:	push	{fp, lr}
   1a2d0:	add	fp, sp, #4
   1a2d4:	sub	sp, sp, #48	; 0x30
   1a2d8:	str	r0, [fp, #-40]	; 0xffffffd8
   1a2dc:	str	r1, [fp, #-44]	; 0xffffffd4
   1a2e0:	str	r2, [fp, #-48]	; 0xffffffd0
   1a2e4:	str	r3, [fp, #-52]	; 0xffffffcc
   1a2e8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1a2ec:	ldr	r3, [r3, #4]
   1a2f0:	str	r3, [fp, #-8]
   1a2f4:	ldr	r3, [fp, #-8]
   1a2f8:	cmp	r3, #0
   1a2fc:	beq	1a30c <__assert_fail@plt+0x909c>
   1a300:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1a304:	cmp	r3, #0
   1a308:	bne	1a31c <__assert_fail@plt+0x90ac>
   1a30c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a310:	mov	r2, #0
   1a314:	str	r2, [r3, #4]
   1a318:	b	1a5e8 <__assert_fail@plt+0x9378>
   1a31c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1a320:	add	r3, r3, #31
   1a324:	lsr	r3, r3, #5
   1a328:	str	r3, [fp, #-12]
   1a32c:	ldr	r3, [fp, #-12]
   1a330:	cmp	r3, #0
   1a334:	bgt	1a34c <__assert_fail@plt+0x90dc>
   1a338:	ldr	r3, [pc, #688]	; 1a5f0 <__assert_fail@plt+0x9380>
   1a33c:	ldr	r2, [pc, #688]	; 1a5f4 <__assert_fail@plt+0x9384>
   1a340:	ldr	r1, [pc, #688]	; 1a5f8 <__assert_fail@plt+0x9388>
   1a344:	ldr	r0, [pc, #688]	; 1a5fc <__assert_fail@plt+0x938c>
   1a348:	bl	11270 <__assert_fail@plt>
   1a34c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a350:	ldr	r2, [r3]
   1a354:	ldr	r3, [fp, #-12]
   1a358:	cmp	r2, r3
   1a35c:	bge	1a374 <__assert_fail@plt+0x9104>
   1a360:	ldr	r1, [fp, #-12]
   1a364:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a368:	bl	17b90 <__assert_fail@plt+0x6920>
   1a36c:	mov	r3, r0
   1a370:	b	1a37c <__assert_fail@plt+0x910c>
   1a374:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1a378:	ldr	r3, [r3, #8]
   1a37c:	str	r3, [fp, #-20]	; 0xffffffec
   1a380:	ldr	r3, [fp, #-8]
   1a384:	cmp	r3, #0
   1a388:	rsblt	r3, r3, #0
   1a38c:	str	r3, [fp, #-24]	; 0xffffffe8
   1a390:	ldr	r3, [fp, #-12]
   1a394:	lsl	r2, r3, #5
   1a398:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1a39c:	sub	r3, r2, r3
   1a3a0:	mvn	r2, #0
   1a3a4:	lsr	r3, r2, r3
   1a3a8:	str	r3, [fp, #-28]	; 0xffffffe4
   1a3ac:	ldr	r2, [fp, #-12]
   1a3b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a3b4:	cmp	r2, r3
   1a3b8:	ble	1a4d4 <__assert_fail@plt+0x9264>
   1a3bc:	ldr	r3, [fp, #-8]
   1a3c0:	cmp	r3, #0
   1a3c4:	ble	1a3d0 <__assert_fail@plt+0x9160>
   1a3c8:	mov	r2, #1
   1a3cc:	b	1a3d4 <__assert_fail@plt+0x9164>
   1a3d0:	mov	r2, #0
   1a3d4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1a3d8:	cmp	r2, r3
   1a3dc:	bne	1a4a0 <__assert_fail@plt+0x9230>
   1a3e0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1a3e4:	ldr	r3, [r3, #8]
   1a3e8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a3ec:	mov	r1, r3
   1a3f0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1a3f4:	bl	15094 <__assert_fail@plt+0x3e24>
   1a3f8:	mov	r3, r0
   1a3fc:	cmp	r3, #0
   1a400:	moveq	r3, #1
   1a404:	movne	r3, #0
   1a408:	uxtb	r3, r3
   1a40c:	str	r3, [fp, #-32]	; 0xffffffe0
   1a410:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1a414:	cmp	r3, #0
   1a418:	beq	1a430 <__assert_fail@plt+0x91c0>
   1a41c:	ldr	r3, [pc, #460]	; 1a5f0 <__assert_fail@plt+0x9380>
   1a420:	ldr	r2, [pc, #472]	; 1a600 <__assert_fail@plt+0x9390>
   1a424:	ldr	r1, [pc, #460]	; 1a5f8 <__assert_fail@plt+0x9388>
   1a428:	ldr	r0, [pc, #468]	; 1a604 <__assert_fail@plt+0x9394>
   1a42c:	bl	11270 <__assert_fail@plt>
   1a430:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a434:	str	r3, [fp, #-16]
   1a438:	b	1a460 <__assert_fail@plt+0x91f0>
   1a43c:	ldr	r3, [fp, #-16]
   1a440:	lsl	r3, r3, #2
   1a444:	ldr	r2, [fp, #-20]	; 0xffffffec
   1a448:	add	r3, r2, r3
   1a44c:	mvn	r2, #0
   1a450:	str	r2, [r3]
   1a454:	ldr	r3, [fp, #-16]
   1a458:	add	r3, r3, #1
   1a45c:	str	r3, [fp, #-16]
   1a460:	ldr	r3, [fp, #-12]
   1a464:	sub	r2, r3, #1
   1a468:	ldr	r3, [fp, #-16]
   1a46c:	cmp	r2, r3
   1a470:	bgt	1a43c <__assert_fail@plt+0x91cc>
   1a474:	ldr	r3, [fp, #-12]
   1a478:	sub	r3, r3, #-1073741823	; 0xc0000001
   1a47c:	lsl	r3, r3, #2
   1a480:	ldr	r2, [fp, #-20]	; 0xffffffec
   1a484:	add	r3, r2, r3
   1a488:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1a48c:	str	r2, [r3]
   1a490:	ldr	r3, [fp, #-8]
   1a494:	rsb	r3, r3, #0
   1a498:	str	r3, [fp, #-8]
   1a49c:	b	1a5b4 <__assert_fail@plt+0x9344>
   1a4a0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1a4a4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1a4a8:	cmp	r2, r3
   1a4ac:	beq	1a4c8 <__assert_fail@plt+0x9258>
   1a4b0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1a4b4:	ldr	r3, [r3, #8]
   1a4b8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1a4bc:	mov	r1, r3
   1a4c0:	ldr	r0, [fp, #-20]	; 0xffffffec
   1a4c4:	bl	13a00 <__assert_fail@plt+0x2790>
   1a4c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a4cc:	str	r3, [fp, #-12]
   1a4d0:	b	1a5b4 <__assert_fail@plt+0x9344>
   1a4d4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1a4d8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1a4dc:	cmp	r2, r3
   1a4e0:	beq	1a500 <__assert_fail@plt+0x9290>
   1a4e4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1a4e8:	ldr	r1, [r3, #8]
   1a4ec:	ldr	r3, [fp, #-12]
   1a4f0:	sub	r3, r3, #1
   1a4f4:	mov	r2, r3
   1a4f8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1a4fc:	bl	13a00 <__assert_fail@plt+0x2790>
   1a500:	ldr	r3, [fp, #-12]
   1a504:	sub	r3, r3, #-1073741823	; 0xc0000001
   1a508:	lsl	r3, r3, #2
   1a50c:	ldr	r2, [fp, #-20]	; 0xffffffec
   1a510:	add	r3, r2, r3
   1a514:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1a518:	ldr	r1, [r2, #8]
   1a51c:	ldr	r2, [fp, #-12]
   1a520:	sub	r2, r2, #-1073741823	; 0xc0000001
   1a524:	lsl	r2, r2, #2
   1a528:	add	r2, r1, r2
   1a52c:	ldr	r1, [r2]
   1a530:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1a534:	and	r2, r2, r1
   1a538:	str	r2, [r3]
   1a53c:	ldr	r3, [fp, #-8]
   1a540:	cmp	r3, #0
   1a544:	ble	1a550 <__assert_fail@plt+0x92e0>
   1a548:	mov	r2, #1
   1a54c:	b	1a554 <__assert_fail@plt+0x92e4>
   1a550:	mov	r2, #0
   1a554:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1a558:	cmp	r2, r3
   1a55c:	bne	1a5b4 <__assert_fail@plt+0x9344>
   1a560:	ldr	r2, [fp, #-12]
   1a564:	ldr	r1, [fp, #-20]	; 0xffffffec
   1a568:	ldr	r0, [fp, #-20]	; 0xffffffec
   1a56c:	bl	15094 <__assert_fail@plt+0x3e24>
   1a570:	ldr	r3, [fp, #-12]
   1a574:	sub	r3, r3, #-1073741823	; 0xc0000001
   1a578:	lsl	r3, r3, #2
   1a57c:	ldr	r2, [fp, #-20]	; 0xffffffec
   1a580:	add	r3, r2, r3
   1a584:	ldr	r2, [fp, #-12]
   1a588:	sub	r2, r2, #-1073741823	; 0xc0000001
   1a58c:	lsl	r2, r2, #2
   1a590:	ldr	r1, [fp, #-20]	; 0xffffffec
   1a594:	add	r2, r1, r2
   1a598:	ldr	r1, [r2]
   1a59c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1a5a0:	and	r2, r2, r1
   1a5a4:	str	r2, [r3]
   1a5a8:	ldr	r3, [fp, #-8]
   1a5ac:	rsb	r3, r3, #0
   1a5b0:	str	r3, [fp, #-8]
   1a5b4:	ldr	r1, [fp, #-12]
   1a5b8:	ldr	r0, [fp, #-20]	; 0xffffffec
   1a5bc:	bl	13c08 <__assert_fail@plt+0x2998>
   1a5c0:	str	r0, [fp, #-12]
   1a5c4:	ldr	r3, [fp, #-8]
   1a5c8:	cmp	r3, #0
   1a5cc:	bge	1a5dc <__assert_fail@plt+0x936c>
   1a5d0:	ldr	r3, [fp, #-12]
   1a5d4:	rsb	r3, r3, #0
   1a5d8:	b	1a5e0 <__assert_fail@plt+0x9370>
   1a5dc:	ldr	r3, [fp, #-12]
   1a5e0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1a5e4:	str	r3, [r2, #4]
   1a5e8:	sub	sp, fp, #4
   1a5ec:	pop	{fp, pc}
   1a5f0:	andeq	r0, r4, r0, lsl #28
   1a5f4:	andeq	r0, r0, fp, ror r9
   1a5f8:	andeq	r0, r4, r8, asr #12
   1a5fc:	andeq	r0, r4, ip, lsl #18
   1a600:	andeq	r0, r0, fp, lsl #19
   1a604:	andeq	r0, r4, r0, ror r8
   1a608:	push	{fp, lr}
   1a60c:	add	fp, sp, #4
   1a610:	sub	sp, sp, #16
   1a614:	str	r0, [fp, #-8]
   1a618:	str	r1, [fp, #-12]
   1a61c:	str	r2, [fp, #-16]
   1a620:	mov	r3, #1
   1a624:	ldr	r2, [fp, #-16]
   1a628:	ldr	r1, [fp, #-12]
   1a62c:	ldr	r0, [fp, #-8]
   1a630:	bl	1a094 <__assert_fail@plt+0x8e24>
   1a634:	nop			; (mov r0, r0)
   1a638:	sub	sp, fp, #4
   1a63c:	pop	{fp, pc}
   1a640:	push	{fp, lr}
   1a644:	add	fp, sp, #4
   1a648:	sub	sp, sp, #16
   1a64c:	str	r0, [fp, #-8]
   1a650:	str	r1, [fp, #-12]
   1a654:	str	r2, [fp, #-16]
   1a658:	mov	r3, #0
   1a65c:	ldr	r2, [fp, #-16]
   1a660:	ldr	r1, [fp, #-12]
   1a664:	ldr	r0, [fp, #-8]
   1a668:	bl	1a094 <__assert_fail@plt+0x8e24>
   1a66c:	nop			; (mov r0, r0)
   1a670:	sub	sp, fp, #4
   1a674:	pop	{fp, pc}
   1a678:	push	{fp, lr}
   1a67c:	add	fp, sp, #4
   1a680:	sub	sp, sp, #16
   1a684:	str	r0, [fp, #-8]
   1a688:	str	r1, [fp, #-12]
   1a68c:	str	r2, [fp, #-16]
   1a690:	mov	r3, #2
   1a694:	ldr	r2, [fp, #-16]
   1a698:	ldr	r1, [fp, #-12]
   1a69c:	ldr	r0, [fp, #-8]
   1a6a0:	bl	1a094 <__assert_fail@plt+0x8e24>
   1a6a4:	nop			; (mov r0, r0)
   1a6a8:	sub	sp, fp, #4
   1a6ac:	pop	{fp, pc}
   1a6b0:	push	{fp, lr}
   1a6b4:	add	fp, sp, #4
   1a6b8:	sub	sp, sp, #16
   1a6bc:	str	r0, [fp, #-8]
   1a6c0:	str	r1, [fp, #-12]
   1a6c4:	str	r2, [fp, #-16]
   1a6c8:	mov	r3, #1
   1a6cc:	ldr	r2, [fp, #-16]
   1a6d0:	ldr	r1, [fp, #-12]
   1a6d4:	ldr	r0, [fp, #-8]
   1a6d8:	bl	1a2cc <__assert_fail@plt+0x905c>
   1a6dc:	nop			; (mov r0, r0)
   1a6e0:	sub	sp, fp, #4
   1a6e4:	pop	{fp, pc}
   1a6e8:	push	{fp, lr}
   1a6ec:	add	fp, sp, #4
   1a6f0:	sub	sp, sp, #16
   1a6f4:	str	r0, [fp, #-8]
   1a6f8:	str	r1, [fp, #-12]
   1a6fc:	str	r2, [fp, #-16]
   1a700:	mov	r3, #0
   1a704:	ldr	r2, [fp, #-16]
   1a708:	ldr	r1, [fp, #-12]
   1a70c:	ldr	r0, [fp, #-8]
   1a710:	bl	1a2cc <__assert_fail@plt+0x905c>
   1a714:	nop			; (mov r0, r0)
   1a718:	sub	sp, fp, #4
   1a71c:	pop	{fp, pc}
   1a720:	push	{fp, lr}
   1a724:	add	fp, sp, #4
   1a728:	sub	sp, sp, #16
   1a72c:	str	r0, [fp, #-8]
   1a730:	str	r1, [fp, #-12]
   1a734:	str	r2, [fp, #-16]
   1a738:	mov	r3, #2
   1a73c:	ldr	r2, [fp, #-16]
   1a740:	ldr	r1, [fp, #-12]
   1a744:	ldr	r0, [fp, #-8]
   1a748:	bl	1a2cc <__assert_fail@plt+0x905c>
   1a74c:	nop			; (mov r0, r0)
   1a750:	sub	sp, fp, #4
   1a754:	pop	{fp, pc}
   1a758:	push	{fp, lr}
   1a75c:	add	fp, sp, #4
   1a760:	sub	sp, sp, #32
   1a764:	str	r0, [fp, #-16]
   1a768:	str	r1, [fp, #-20]	; 0xffffffec
   1a76c:	str	r2, [fp, #-24]	; 0xffffffe8
   1a770:	mov	r3, #2
   1a774:	str	r3, [sp]
   1a778:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1a77c:	ldr	r2, [fp, #-20]	; 0xffffffec
   1a780:	mov	r1, #0
   1a784:	ldr	r0, [fp, #-16]
   1a788:	bl	199fc <__assert_fail@plt+0x878c>
   1a78c:	mov	r3, r0
   1a790:	str	r3, [fp, #-8]
   1a794:	ldr	r3, [fp, #-8]
   1a798:	cmp	r3, #0
   1a79c:	beq	1a7b4 <__assert_fail@plt+0x9544>
   1a7a0:	ldr	r3, [pc, #24]	; 1a7c0 <__assert_fail@plt+0x9550>
   1a7a4:	ldr	r2, [pc, #24]	; 1a7c4 <__assert_fail@plt+0x9554>
   1a7a8:	ldr	r1, [pc, #24]	; 1a7c8 <__assert_fail@plt+0x9558>
   1a7ac:	ldr	r0, [pc, #24]	; 1a7cc <__assert_fail@plt+0x955c>
   1a7b0:	bl	11270 <__assert_fail@plt>
   1a7b4:	nop			; (mov r0, r0)
   1a7b8:	sub	sp, fp, #4
   1a7bc:	pop	{fp, pc}
   1a7c0:	andeq	r0, r4, r0, lsl lr
   1a7c4:	ldrdeq	r0, [r0], -r9
   1a7c8:	andeq	r0, r4, r8, asr #12
   1a7cc:	andeq	r0, r4, r0, ror r8
   1a7d0:	push	{fp, lr}
   1a7d4:	add	fp, sp, #4
   1a7d8:	sub	sp, sp, #16
   1a7dc:	str	r0, [fp, #-8]
   1a7e0:	str	r1, [fp, #-12]
   1a7e4:	mov	r3, #2
   1a7e8:	str	r3, [sp]
   1a7ec:	ldr	r3, [fp, #-12]
   1a7f0:	ldr	r2, [fp, #-8]
   1a7f4:	mov	r1, #0
   1a7f8:	mov	r0, #0
   1a7fc:	bl	199fc <__assert_fail@plt+0x878c>
   1a800:	mov	r3, r0
   1a804:	cmp	r3, #0
   1a808:	moveq	r3, #1
   1a80c:	movne	r3, #0
   1a810:	uxtb	r3, r3
   1a814:	mov	r0, r3
   1a818:	sub	sp, fp, #4
   1a81c:	pop	{fp, pc}
   1a820:	push	{fp, lr}
   1a824:	add	fp, sp, #4
   1a828:	sub	sp, sp, #32
   1a82c:	str	r0, [fp, #-24]	; 0xffffffe8
   1a830:	str	r1, [fp, #-28]	; 0xffffffe4
   1a834:	str	r2, [fp, #-32]	; 0xffffffe0
   1a838:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1a83c:	bl	18b94 <__assert_fail@plt+0x7924>
   1a840:	mov	r3, r0
   1a844:	cmp	r3, #0
   1a848:	bne	1a870 <__assert_fail@plt+0x9600>
   1a84c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1a850:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1a854:	bl	18cb4 <__assert_fail@plt+0x7a44>
   1a858:	mov	r3, r0
   1a85c:	cmp	r3, #0
   1a860:	moveq	r3, #1
   1a864:	movne	r3, #0
   1a868:	uxtb	r3, r3
   1a86c:	b	1a8b4 <__assert_fail@plt+0x9644>
   1a870:	sub	r3, fp, #20
   1a874:	mov	r0, r3
   1a878:	bl	17a80 <__assert_fail@plt+0x6810>
   1a87c:	sub	r3, fp, #20
   1a880:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1a884:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1a888:	mov	r0, r3
   1a88c:	bl	193d4 <__assert_fail@plt+0x8164>
   1a890:	sub	r3, fp, #20
   1a894:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1a898:	mov	r0, r3
   1a89c:	bl	1a7d0 <__assert_fail@plt+0x9560>
   1a8a0:	str	r0, [fp, #-8]
   1a8a4:	sub	r3, fp, #20
   1a8a8:	mov	r0, r3
   1a8ac:	bl	17b48 <__assert_fail@plt+0x68d8>
   1a8b0:	ldr	r3, [fp, #-8]
   1a8b4:	mov	r0, r3
   1a8b8:	sub	sp, fp, #4
   1a8bc:	pop	{fp, pc}
   1a8c0:	push	{fp, lr}
   1a8c4:	add	fp, sp, #4
   1a8c8:	sub	sp, sp, #56	; 0x38
   1a8cc:	str	r0, [fp, #-40]	; 0xffffffd8
   1a8d0:	str	r1, [fp, #-44]	; 0xffffffd4
   1a8d4:	str	r2, [fp, #-48]	; 0xffffffd0
   1a8d8:	str	r3, [fp, #-52]	; 0xffffffcc
   1a8dc:	sub	r3, fp, #20
   1a8e0:	mov	r0, r3
   1a8e4:	bl	17a80 <__assert_fail@plt+0x6810>
   1a8e8:	sub	r3, fp, #32
   1a8ec:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1a8f0:	mov	r0, r3
   1a8f4:	bl	17e24 <__assert_fail@plt+0x6bb4>
   1a8f8:	sub	r2, fp, #32
   1a8fc:	sub	r1, fp, #20
   1a900:	ldr	r3, [fp, #4]
   1a904:	str	r3, [sp]
   1a908:	mov	r3, r2
   1a90c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1a910:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1a914:	bl	199fc <__assert_fail@plt+0x878c>
   1a918:	sub	r3, fp, #32
   1a91c:	mov	r0, r3
   1a920:	bl	17b48 <__assert_fail@plt+0x68d8>
   1a924:	sub	r3, fp, #20
   1a928:	mov	r0, r3
   1a92c:	bl	1818c <__assert_fail@plt+0x6f1c>
   1a930:	str	r0, [fp, #-8]
   1a934:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1a938:	cmp	r3, #0
   1a93c:	beq	1a950 <__assert_fail@plt+0x96e0>
   1a940:	sub	r3, fp, #20
   1a944:	mov	r1, r3
   1a948:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1a94c:	bl	18eec <__assert_fail@plt+0x7c7c>
   1a950:	sub	r3, fp, #20
   1a954:	mov	r0, r3
   1a958:	bl	17b48 <__assert_fail@plt+0x68d8>
   1a95c:	ldr	r3, [fp, #-8]
   1a960:	mov	r0, r3
   1a964:	sub	sp, fp, #4
   1a968:	pop	{fp, pc}
   1a96c:	push	{fp, lr}
   1a970:	add	fp, sp, #4
   1a974:	sub	sp, sp, #24
   1a978:	str	r0, [fp, #-8]
   1a97c:	str	r1, [fp, #-12]
   1a980:	str	r2, [fp, #-16]
   1a984:	str	r3, [fp, #-20]	; 0xffffffec
   1a988:	mov	r3, #1
   1a98c:	str	r3, [sp]
   1a990:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a994:	ldr	r2, [fp, #-16]
   1a998:	ldr	r1, [fp, #-12]
   1a99c:	ldr	r0, [fp, #-8]
   1a9a0:	bl	1a8c0 <__assert_fail@plt+0x9650>
   1a9a4:	mov	r3, r0
   1a9a8:	mov	r0, r3
   1a9ac:	sub	sp, fp, #4
   1a9b0:	pop	{fp, pc}
   1a9b4:	push	{fp, lr}
   1a9b8:	add	fp, sp, #4
   1a9bc:	sub	sp, sp, #24
   1a9c0:	str	r0, [fp, #-8]
   1a9c4:	str	r1, [fp, #-12]
   1a9c8:	str	r2, [fp, #-16]
   1a9cc:	str	r3, [fp, #-20]	; 0xffffffec
   1a9d0:	mov	r3, #0
   1a9d4:	str	r3, [sp]
   1a9d8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1a9dc:	ldr	r2, [fp, #-16]
   1a9e0:	ldr	r1, [fp, #-12]
   1a9e4:	ldr	r0, [fp, #-8]
   1a9e8:	bl	1a8c0 <__assert_fail@plt+0x9650>
   1a9ec:	mov	r3, r0
   1a9f0:	mov	r0, r3
   1a9f4:	sub	sp, fp, #4
   1a9f8:	pop	{fp, pc}
   1a9fc:	push	{fp, lr}
   1aa00:	add	fp, sp, #4
   1aa04:	sub	sp, sp, #24
   1aa08:	str	r0, [fp, #-8]
   1aa0c:	str	r1, [fp, #-12]
   1aa10:	str	r2, [fp, #-16]
   1aa14:	str	r3, [fp, #-20]	; 0xffffffec
   1aa18:	mov	r3, #2
   1aa1c:	str	r3, [sp]
   1aa20:	ldr	r3, [fp, #-20]	; 0xffffffec
   1aa24:	ldr	r2, [fp, #-16]
   1aa28:	ldr	r1, [fp, #-12]
   1aa2c:	ldr	r0, [fp, #-8]
   1aa30:	bl	1a8c0 <__assert_fail@plt+0x9650>
   1aa34:	mov	r3, r0
   1aa38:	mov	r0, r3
   1aa3c:	sub	sp, fp, #4
   1aa40:	pop	{fp, pc}
   1aa44:	push	{fp, lr}
   1aa48:	add	fp, sp, #4
   1aa4c:	sub	sp, sp, #24
   1aa50:	str	r0, [fp, #-8]
   1aa54:	str	r1, [fp, #-12]
   1aa58:	str	r2, [fp, #-16]
   1aa5c:	mov	r3, #1
   1aa60:	str	r3, [sp]
   1aa64:	ldr	r3, [fp, #-16]
   1aa68:	ldr	r2, [fp, #-12]
   1aa6c:	mov	r1, #0
   1aa70:	ldr	r0, [fp, #-8]
   1aa74:	bl	1a8c0 <__assert_fail@plt+0x9650>
   1aa78:	mov	r3, r0
   1aa7c:	mov	r0, r3
   1aa80:	sub	sp, fp, #4
   1aa84:	pop	{fp, pc}
   1aa88:	push	{fp, lr}
   1aa8c:	add	fp, sp, #4
   1aa90:	sub	sp, sp, #24
   1aa94:	str	r0, [fp, #-8]
   1aa98:	str	r1, [fp, #-12]
   1aa9c:	str	r2, [fp, #-16]
   1aaa0:	mov	r3, #0
   1aaa4:	str	r3, [sp]
   1aaa8:	ldr	r3, [fp, #-16]
   1aaac:	ldr	r2, [fp, #-12]
   1aab0:	mov	r1, #0
   1aab4:	ldr	r0, [fp, #-8]
   1aab8:	bl	1a8c0 <__assert_fail@plt+0x9650>
   1aabc:	mov	r3, r0
   1aac0:	mov	r0, r3
   1aac4:	sub	sp, fp, #4
   1aac8:	pop	{fp, pc}
   1aacc:	push	{fp, lr}
   1aad0:	add	fp, sp, #4
   1aad4:	sub	sp, sp, #24
   1aad8:	str	r0, [fp, #-8]
   1aadc:	str	r1, [fp, #-12]
   1aae0:	str	r2, [fp, #-16]
   1aae4:	mov	r3, #2
   1aae8:	str	r3, [sp]
   1aaec:	ldr	r3, [fp, #-16]
   1aaf0:	ldr	r2, [fp, #-12]
   1aaf4:	mov	r1, #0
   1aaf8:	ldr	r0, [fp, #-8]
   1aafc:	bl	1a8c0 <__assert_fail@plt+0x9650>
   1ab00:	mov	r3, r0
   1ab04:	mov	r0, r3
   1ab08:	sub	sp, fp, #4
   1ab0c:	pop	{fp, pc}
   1ab10:	push	{fp, lr}
   1ab14:	add	fp, sp, #4
   1ab18:	sub	sp, sp, #24
   1ab1c:	str	r0, [fp, #-8]
   1ab20:	str	r1, [fp, #-12]
   1ab24:	str	r2, [fp, #-16]
   1ab28:	mov	r3, #1
   1ab2c:	str	r3, [sp]
   1ab30:	ldr	r3, [fp, #-16]
   1ab34:	ldr	r2, [fp, #-12]
   1ab38:	ldr	r1, [fp, #-8]
   1ab3c:	mov	r0, #0
   1ab40:	bl	1a8c0 <__assert_fail@plt+0x9650>
   1ab44:	mov	r3, r0
   1ab48:	mov	r0, r3
   1ab4c:	sub	sp, fp, #4
   1ab50:	pop	{fp, pc}
   1ab54:	push	{fp, lr}
   1ab58:	add	fp, sp, #4
   1ab5c:	sub	sp, sp, #24
   1ab60:	str	r0, [fp, #-8]
   1ab64:	str	r1, [fp, #-12]
   1ab68:	str	r2, [fp, #-16]
   1ab6c:	mov	r3, #0
   1ab70:	str	r3, [sp]
   1ab74:	ldr	r3, [fp, #-16]
   1ab78:	ldr	r2, [fp, #-12]
   1ab7c:	ldr	r1, [fp, #-8]
   1ab80:	mov	r0, #0
   1ab84:	bl	1a8c0 <__assert_fail@plt+0x9650>
   1ab88:	mov	r3, r0
   1ab8c:	mov	r0, r3
   1ab90:	sub	sp, fp, #4
   1ab94:	pop	{fp, pc}
   1ab98:	push	{fp, lr}
   1ab9c:	add	fp, sp, #4
   1aba0:	sub	sp, sp, #24
   1aba4:	str	r0, [fp, #-8]
   1aba8:	str	r1, [fp, #-12]
   1abac:	str	r2, [fp, #-16]
   1abb0:	mov	r3, #2
   1abb4:	str	r3, [sp]
   1abb8:	ldr	r3, [fp, #-16]
   1abbc:	ldr	r2, [fp, #-12]
   1abc0:	ldr	r1, [fp, #-8]
   1abc4:	mov	r0, #0
   1abc8:	bl	1a8c0 <__assert_fail@plt+0x9650>
   1abcc:	mov	r3, r0
   1abd0:	mov	r0, r3
   1abd4:	sub	sp, fp, #4
   1abd8:	pop	{fp, pc}
   1abdc:	push	{fp, lr}
   1abe0:	add	fp, sp, #4
   1abe4:	sub	sp, sp, #16
   1abe8:	str	r0, [fp, #-8]
   1abec:	str	r1, [fp, #-12]
   1abf0:	mov	r3, #1
   1abf4:	str	r3, [sp]
   1abf8:	ldr	r3, [fp, #-12]
   1abfc:	ldr	r2, [fp, #-8]
   1ac00:	mov	r1, #0
   1ac04:	mov	r0, #0
   1ac08:	bl	1a8c0 <__assert_fail@plt+0x9650>
   1ac0c:	mov	r3, r0
   1ac10:	mov	r0, r3
   1ac14:	sub	sp, fp, #4
   1ac18:	pop	{fp, pc}
   1ac1c:	push	{fp, lr}
   1ac20:	add	fp, sp, #4
   1ac24:	sub	sp, sp, #16
   1ac28:	str	r0, [fp, #-8]
   1ac2c:	str	r1, [fp, #-12]
   1ac30:	mov	r3, #0
   1ac34:	str	r3, [sp]
   1ac38:	ldr	r3, [fp, #-12]
   1ac3c:	ldr	r2, [fp, #-8]
   1ac40:	mov	r1, #0
   1ac44:	mov	r0, #0
   1ac48:	bl	1a8c0 <__assert_fail@plt+0x9650>
   1ac4c:	mov	r3, r0
   1ac50:	mov	r0, r3
   1ac54:	sub	sp, fp, #4
   1ac58:	pop	{fp, pc}
   1ac5c:	push	{fp, lr}
   1ac60:	add	fp, sp, #4
   1ac64:	sub	sp, sp, #16
   1ac68:	str	r0, [fp, #-8]
   1ac6c:	str	r1, [fp, #-12]
   1ac70:	mov	r3, #2
   1ac74:	str	r3, [sp]
   1ac78:	ldr	r3, [fp, #-12]
   1ac7c:	ldr	r2, [fp, #-8]
   1ac80:	mov	r1, #0
   1ac84:	mov	r0, #0
   1ac88:	bl	1a8c0 <__assert_fail@plt+0x9650>
   1ac8c:	mov	r3, r0
   1ac90:	mov	r0, r3
   1ac94:	sub	sp, fp, #4
   1ac98:	pop	{fp, pc}
   1ac9c:	push	{fp, lr}
   1aca0:	add	fp, sp, #4
   1aca4:	sub	sp, sp, #24
   1aca8:	str	r0, [fp, #-8]
   1acac:	str	r1, [fp, #-12]
   1acb0:	str	r2, [fp, #-16]
   1acb4:	mov	r3, #0
   1acb8:	str	r3, [sp]
   1acbc:	ldr	r3, [fp, #-16]
   1acc0:	ldr	r2, [fp, #-12]
   1acc4:	ldr	r1, [fp, #-8]
   1acc8:	mov	r0, #0
   1accc:	bl	1a8c0 <__assert_fail@plt+0x9650>
   1acd0:	mov	r3, r0
   1acd4:	mov	r0, r3
   1acd8:	sub	sp, fp, #4
   1acdc:	pop	{fp, pc}
   1ace0:	push	{fp, lr}
   1ace4:	add	fp, sp, #4
   1ace8:	sub	sp, sp, #32
   1acec:	str	r0, [fp, #-16]
   1acf0:	str	r1, [fp, #-20]	; 0xffffffec
   1acf4:	str	r2, [fp, #-24]	; 0xffffffe8
   1acf8:	mov	r3, #2
   1acfc:	str	r3, [sp]
   1ad00:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ad04:	ldr	r2, [fp, #-20]	; 0xffffffec
   1ad08:	mov	r1, #0
   1ad0c:	ldr	r0, [fp, #-16]
   1ad10:	bl	1a8c0 <__assert_fail@plt+0x9650>
   1ad14:	str	r0, [fp, #-8]
   1ad18:	ldr	r3, [fp, #-8]
   1ad1c:	cmp	r3, #0
   1ad20:	beq	1ad38 <__assert_fail@plt+0x9ac8>
   1ad24:	ldr	r3, [pc, #24]	; 1ad44 <__assert_fail@plt+0x9ad4>
   1ad28:	ldr	r2, [pc, #24]	; 1ad48 <__assert_fail@plt+0x9ad8>
   1ad2c:	ldr	r1, [pc, #24]	; 1ad4c <__assert_fail@plt+0x9adc>
   1ad30:	ldr	r0, [pc, #24]	; 1ad50 <__assert_fail@plt+0x9ae0>
   1ad34:	bl	11270 <__assert_fail@plt>
   1ad38:	nop			; (mov r0, r0)
   1ad3c:	sub	sp, fp, #4
   1ad40:	pop	{fp, pc}
   1ad44:	andeq	r0, r4, r0, lsr #28
   1ad48:	andeq	r0, r0, r7, asr sl
   1ad4c:	andeq	r0, r4, r8, asr #12
   1ad50:	andeq	r0, r4, r0, ror r8
   1ad54:	push	{fp, lr}
   1ad58:	add	fp, sp, #4
   1ad5c:	sub	sp, sp, #16
   1ad60:	str	r0, [fp, #-8]
   1ad64:	str	r1, [fp, #-12]
   1ad68:	mov	r3, #2
   1ad6c:	str	r3, [sp]
   1ad70:	ldr	r3, [fp, #-12]
   1ad74:	ldr	r2, [fp, #-8]
   1ad78:	mov	r1, #0
   1ad7c:	mov	r0, #0
   1ad80:	bl	1a8c0 <__assert_fail@plt+0x9650>
   1ad84:	mov	r3, r0
   1ad88:	cmp	r3, #0
   1ad8c:	moveq	r3, #1
   1ad90:	movne	r3, #0
   1ad94:	uxtb	r3, r3
   1ad98:	mov	r0, r3
   1ad9c:	sub	sp, fp, #4
   1ada0:	pop	{fp, pc}
   1ada4:	push	{fp, lr}
   1ada8:	add	fp, sp, #4
   1adac:	sub	sp, sp, #40	; 0x28
   1adb0:	str	r0, [fp, #-40]	; 0xffffffd8
   1adb4:	str	r1, [fp, #-44]	; 0xffffffd4
   1adb8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1adbc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1adc0:	orr	r3, r2, r3
   1adc4:	cmp	r3, #0
   1adc8:	bne	1ade0 <__assert_fail@plt+0x9b70>
   1adcc:	ldr	r3, [pc, #488]	; 1afbc <__assert_fail@plt+0x9d4c>
   1add0:	ldr	r2, [pc, #488]	; 1afc0 <__assert_fail@plt+0x9d50>
   1add4:	ldr	r1, [pc, #488]	; 1afc4 <__assert_fail@plt+0x9d54>
   1add8:	ldr	r0, [pc, #488]	; 1afc8 <__assert_fail@plt+0x9d58>
   1addc:	bl	11270 <__assert_fail@plt>
   1ade0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1ade4:	cmp	r3, #0
   1ade8:	bne	1adf4 <__assert_fail@plt+0x9b84>
   1adec:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1adf0:	b	1afb0 <__assert_fail@plt+0x9d40>
   1adf4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1adf8:	cmp	r3, #0
   1adfc:	bne	1ae08 <__assert_fail@plt+0x9b98>
   1ae00:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1ae04:	b	1afb0 <__assert_fail@plt+0x9d40>
   1ae08:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1ae0c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1ae10:	orr	r3, r2, r3
   1ae14:	str	r3, [fp, #-16]
   1ae18:	mov	r3, #0
   1ae1c:	str	r3, [fp, #-20]	; 0xffffffec
   1ae20:	ldr	r3, [fp, #-16]
   1ae24:	rsb	r2, r3, #0
   1ae28:	ldr	r3, [fp, #-16]
   1ae2c:	and	r3, r3, r2
   1ae30:	str	r3, [fp, #-8]
   1ae34:	mov	r3, #0
   1ae38:	str	r3, [fp, #-12]
   1ae3c:	mov	r3, #8
   1ae40:	str	r3, [fp, #-24]	; 0xffffffe8
   1ae44:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ae48:	cmp	r3, #31
   1ae4c:	bhi	1ae9c <__assert_fail@plt+0x9c2c>
   1ae50:	b	1ae70 <__assert_fail@plt+0x9c00>
   1ae54:	ldr	r2, [fp, #-8]
   1ae58:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ae5c:	lsl	r3, r2, r3
   1ae60:	str	r3, [fp, #-8]
   1ae64:	ldr	r3, [fp, #-12]
   1ae68:	add	r3, r3, #8
   1ae6c:	str	r3, [fp, #-12]
   1ae70:	ldr	r3, [fp, #-8]
   1ae74:	and	r3, r3, #-16777216	; 0xff000000
   1ae78:	cmp	r3, #0
   1ae7c:	beq	1ae54 <__assert_fail@plt+0x9be4>
   1ae80:	b	1ae9c <__assert_fail@plt+0x9c2c>
   1ae84:	ldr	r3, [fp, #-8]
   1ae88:	lsl	r3, r3, #1
   1ae8c:	str	r3, [fp, #-8]
   1ae90:	ldr	r3, [fp, #-12]
   1ae94:	add	r3, r3, #1
   1ae98:	str	r3, [fp, #-12]
   1ae9c:	ldr	r3, [fp, #-8]
   1aea0:	cmp	r3, #0
   1aea4:	bge	1ae84 <__assert_fail@plt+0x9c14>
   1aea8:	ldr	r3, [fp, #-12]
   1aeac:	str	r3, [fp, #-20]	; 0xffffffec
   1aeb0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1aeb4:	rsb	r3, r3, #31
   1aeb8:	str	r3, [fp, #-28]	; 0xffffffe4
   1aebc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1aec0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1aec4:	lsr	r3, r2, r3
   1aec8:	str	r3, [fp, #-40]	; 0xffffffd8
   1aecc:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1aed0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1aed4:	lsr	r3, r2, r3
   1aed8:	str	r3, [fp, #-44]	; 0xffffffd4
   1aedc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1aee0:	and	r3, r3, #1
   1aee4:	cmp	r3, #0
   1aee8:	bne	1af14 <__assert_fail@plt+0x9ca4>
   1aeec:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1aef0:	str	r3, [fp, #-32]	; 0xffffffe0
   1aef4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1aef8:	str	r3, [fp, #-40]	; 0xffffffd8
   1aefc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1af00:	str	r3, [fp, #-44]	; 0xffffffd4
   1af04:	b	1af14 <__assert_fail@plt+0x9ca4>
   1af08:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1af0c:	lsr	r3, r3, #1
   1af10:	str	r3, [fp, #-44]	; 0xffffffd4
   1af14:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1af18:	and	r3, r3, #1
   1af1c:	cmp	r3, #0
   1af20:	beq	1af08 <__assert_fail@plt+0x9c98>
   1af24:	b	1af94 <__assert_fail@plt+0x9d24>
   1af28:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1af2c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1af30:	cmp	r2, r3
   1af34:	bls	1af68 <__assert_fail@plt+0x9cf8>
   1af38:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1af3c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1af40:	sub	r3, r2, r3
   1af44:	str	r3, [fp, #-40]	; 0xffffffd8
   1af48:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1af4c:	lsr	r3, r3, #1
   1af50:	str	r3, [fp, #-40]	; 0xffffffd8
   1af54:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1af58:	and	r3, r3, #1
   1af5c:	cmp	r3, #0
   1af60:	beq	1af48 <__assert_fail@plt+0x9cd8>
   1af64:	b	1af94 <__assert_fail@plt+0x9d24>
   1af68:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1af6c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1af70:	sub	r3, r2, r3
   1af74:	str	r3, [fp, #-44]	; 0xffffffd4
   1af78:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1af7c:	lsr	r3, r3, #1
   1af80:	str	r3, [fp, #-44]	; 0xffffffd4
   1af84:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1af88:	and	r3, r3, #1
   1af8c:	cmp	r3, #0
   1af90:	beq	1af78 <__assert_fail@plt+0x9d08>
   1af94:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1af98:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1af9c:	cmp	r2, r3
   1afa0:	bne	1af28 <__assert_fail@plt+0x9cb8>
   1afa4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1afa8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1afac:	lsl	r3, r2, r3
   1afb0:	mov	r0, r3
   1afb4:	sub	sp, fp, #4
   1afb8:	pop	{fp, pc}
   1afbc:	andeq	r0, r4, r0, lsr lr
   1afc0:	andeq	r0, r0, r7, ror #20
   1afc4:	andeq	r0, r4, r8, asr #12
   1afc8:	andeq	r0, r4, r4, lsl r9
   1afcc:	push	{fp, lr}
   1afd0:	add	fp, sp, #4
   1afd4:	sub	sp, sp, #32
   1afd8:	str	r0, [fp, #-24]	; 0xffffffe8
   1afdc:	str	r1, [fp, #-28]	; 0xffffffe4
   1afe0:	str	r2, [fp, #-32]	; 0xffffffe0
   1afe4:	sub	r3, fp, #16
   1afe8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1afec:	mov	r0, r3
   1aff0:	bl	17e24 <__assert_fail@plt+0x6bb4>
   1aff4:	sub	r2, fp, #16
   1aff8:	sub	r3, fp, #16
   1affc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1b000:	mov	r0, r3
   1b004:	bl	1b0d8 <__assert_fail@plt+0x9e68>
   1b008:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b00c:	cmp	r3, #0
   1b010:	beq	1b024 <__assert_fail@plt+0x9db4>
   1b014:	sub	r3, fp, #16
   1b018:	mov	r0, r3
   1b01c:	bl	1818c <__assert_fail@plt+0x6f1c>
   1b020:	str	r0, [fp, #-32]	; 0xffffffe0
   1b024:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b028:	cmp	r3, #0
   1b02c:	beq	1b040 <__assert_fail@plt+0x9dd0>
   1b030:	sub	r3, fp, #16
   1b034:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1b038:	mov	r0, r3
   1b03c:	bl	18eec <__assert_fail@plt+0x7c7c>
   1b040:	sub	r3, fp, #16
   1b044:	mov	r0, r3
   1b048:	bl	17b48 <__assert_fail@plt+0x68d8>
   1b04c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b050:	mov	r0, r3
   1b054:	sub	sp, fp, #4
   1b058:	pop	{fp, pc}
   1b05c:	push	{fp, lr}
   1b060:	add	fp, sp, #4
   1b064:	sub	sp, sp, #16
   1b068:	str	r0, [fp, #-16]
   1b06c:	ldr	r3, [fp, #-16]
   1b070:	ldr	r3, [r3, #4]
   1b074:	cmp	r3, #0
   1b078:	bgt	1b090 <__assert_fail@plt+0x9e20>
   1b07c:	ldr	r3, [pc, #68]	; 1b0c8 <__assert_fail@plt+0x9e58>
   1b080:	ldr	r2, [pc, #68]	; 1b0cc <__assert_fail@plt+0x9e5c>
   1b084:	ldr	r1, [pc, #68]	; 1b0d0 <__assert_fail@plt+0x9e60>
   1b088:	ldr	r0, [pc, #68]	; 1b0d4 <__assert_fail@plt+0x9e64>
   1b08c:	bl	11270 <__assert_fail@plt>
   1b090:	ldr	r3, [fp, #-16]
   1b094:	ldr	r3, [r3, #8]
   1b098:	mov	r1, #0
   1b09c:	mov	r0, r3
   1b0a0:	bl	14f48 <__assert_fail@plt+0x3cd8>
   1b0a4:	str	r0, [fp, #-8]
   1b0a8:	ldr	r2, [fp, #-8]
   1b0ac:	ldr	r1, [fp, #-16]
   1b0b0:	ldr	r0, [fp, #-16]
   1b0b4:	bl	1a678 <__assert_fail@plt+0x9408>
   1b0b8:	ldr	r3, [fp, #-8]
   1b0bc:	mov	r0, r3
   1b0c0:	sub	sp, fp, #4
   1b0c4:	pop	{fp, pc}
   1b0c8:	andeq	r0, r4, ip, lsr lr
   1b0cc:	andeq	r0, r0, r3, lsr #21
   1b0d0:	andeq	r0, r4, r8, asr #12
   1b0d4:	andeq	r0, r4, r0, lsr #18
   1b0d8:	push	{fp, lr}
   1b0dc:	add	fp, sp, #4
   1b0e0:	sub	sp, sp, #64	; 0x40
   1b0e4:	str	r0, [fp, #-56]	; 0xffffffc8
   1b0e8:	str	r1, [fp, #-60]	; 0xffffffc4
   1b0ec:	str	r2, [fp, #-64]	; 0xffffffc0
   1b0f0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1b0f4:	ldr	r3, [r3, #4]
   1b0f8:	cmp	r3, #0
   1b0fc:	bne	1b110 <__assert_fail@plt+0x9ea0>
   1b100:	ldr	r1, [fp, #-64]	; 0xffffffc0
   1b104:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1b108:	bl	18e68 <__assert_fail@plt+0x7bf8>
   1b10c:	b	1b33c <__assert_fail@plt+0xa0cc>
   1b110:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1b114:	ldr	r3, [r3, #4]
   1b118:	cmp	r3, #0
   1b11c:	bne	1b130 <__assert_fail@plt+0x9ec0>
   1b120:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1b124:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1b128:	bl	18e68 <__assert_fail@plt+0x7bf8>
   1b12c:	b	1b33c <__assert_fail@plt+0xa0cc>
   1b130:	sub	r3, fp, #36	; 0x24
   1b134:	mov	r0, r3
   1b138:	bl	17a80 <__assert_fail@plt+0x6810>
   1b13c:	sub	r3, fp, #48	; 0x30
   1b140:	mov	r0, r3
   1b144:	bl	17a80 <__assert_fail@plt+0x6810>
   1b148:	sub	r3, fp, #36	; 0x24
   1b14c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1b150:	mov	r0, r3
   1b154:	bl	18e68 <__assert_fail@plt+0x7bf8>
   1b158:	sub	r3, fp, #36	; 0x24
   1b15c:	mov	r0, r3
   1b160:	bl	1b05c <__assert_fail@plt+0x9dec>
   1b164:	str	r0, [fp, #-8]
   1b168:	sub	r3, fp, #48	; 0x30
   1b16c:	ldr	r1, [fp, #-64]	; 0xffffffc0
   1b170:	mov	r0, r3
   1b174:	bl	18e68 <__assert_fail@plt+0x7bf8>
   1b178:	sub	r3, fp, #48	; 0x30
   1b17c:	mov	r0, r3
   1b180:	bl	1b05c <__assert_fail@plt+0x9dec>
   1b184:	str	r0, [fp, #-12]
   1b188:	ldr	r2, [fp, #-12]
   1b18c:	ldr	r3, [fp, #-8]
   1b190:	cmp	r2, r3
   1b194:	movcc	r3, r2
   1b198:	movcs	r3, r3
   1b19c:	str	r3, [fp, #-16]
   1b1a0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1b1a4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1b1a8:	cmp	r2, r3
   1b1ac:	bge	1b1c4 <__assert_fail@plt+0x9f54>
   1b1b0:	sub	r2, fp, #48	; 0x30
   1b1b4:	sub	r3, fp, #36	; 0x24
   1b1b8:	mov	r1, r2
   1b1bc:	mov	r0, r3
   1b1c0:	bl	18eec <__assert_fail@plt+0x7c7c>
   1b1c4:	sub	r2, fp, #48	; 0x30
   1b1c8:	sub	r1, fp, #36	; 0x24
   1b1cc:	sub	r3, fp, #36	; 0x24
   1b1d0:	mov	r0, r3
   1b1d4:	bl	1a008 <__assert_fail@plt+0x8d98>
   1b1d8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b1dc:	cmp	r3, #0
   1b1e0:	bne	1b1f8 <__assert_fail@plt+0x9f88>
   1b1e4:	sub	r3, fp, #48	; 0x30
   1b1e8:	mov	r1, r3
   1b1ec:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1b1f0:	bl	18eec <__assert_fail@plt+0x7c7c>
   1b1f4:	b	1b314 <__assert_fail@plt+0xa0a4>
   1b1f8:	sub	r3, fp, #36	; 0x24
   1b1fc:	mov	r0, r3
   1b200:	bl	1b05c <__assert_fail@plt+0x9dec>
   1b204:	sub	r2, fp, #48	; 0x30
   1b208:	sub	r3, fp, #36	; 0x24
   1b20c:	mov	r1, r2
   1b210:	mov	r0, r3
   1b214:	bl	18cb4 <__assert_fail@plt+0x7a44>
   1b218:	str	r0, [fp, #-20]	; 0xffffffec
   1b21c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b220:	cmp	r3, #0
   1b224:	bne	1b23c <__assert_fail@plt+0x9fcc>
   1b228:	sub	r3, fp, #36	; 0x24
   1b22c:	mov	r1, r3
   1b230:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1b234:	bl	18eec <__assert_fail@plt+0x7c7c>
   1b238:	b	1b314 <__assert_fail@plt+0xa0a4>
   1b23c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b240:	cmp	r3, #0
   1b244:	bge	1b25c <__assert_fail@plt+0x9fec>
   1b248:	sub	r2, fp, #48	; 0x30
   1b24c:	sub	r3, fp, #36	; 0x24
   1b250:	mov	r1, r2
   1b254:	mov	r0, r3
   1b258:	bl	18eec <__assert_fail@plt+0x7c7c>
   1b25c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1b260:	cmp	r3, #1
   1b264:	bne	1b2fc <__assert_fail@plt+0xa08c>
   1b268:	sub	r2, fp, #48	; 0x30
   1b26c:	sub	r1, fp, #36	; 0x24
   1b270:	sub	r3, fp, #36	; 0x24
   1b274:	mov	r0, r3
   1b278:	bl	1a008 <__assert_fail@plt+0x8d98>
   1b27c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1b280:	ldr	r3, [r3]
   1b284:	cmp	r3, #0
   1b288:	bgt	1b2a0 <__assert_fail@plt+0xa030>
   1b28c:	mov	r1, #1
   1b290:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1b294:	bl	17b90 <__assert_fail@plt+0x6920>
   1b298:	mov	r3, r0
   1b29c:	b	1b2a8 <__assert_fail@plt+0xa038>
   1b2a0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1b2a4:	ldr	r3, [r3, #8]
   1b2a8:	str	r3, [fp, #-24]	; 0xffffffe8
   1b2ac:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b2b0:	ldr	r2, [r3]
   1b2b4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1b2b8:	ldr	r3, [r3]
   1b2bc:	mov	r1, r3
   1b2c0:	mov	r0, r2
   1b2c4:	bl	1ada4 <__assert_fail@plt+0x9b34>
   1b2c8:	mov	r2, r0
   1b2cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b2d0:	str	r2, [r3]
   1b2d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b2d8:	ldr	r3, [r3]
   1b2dc:	cmp	r3, #0
   1b2e0:	movne	r3, #1
   1b2e4:	moveq	r3, #0
   1b2e8:	uxtb	r3, r3
   1b2ec:	mov	r2, r3
   1b2f0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1b2f4:	str	r2, [r3, #4]
   1b2f8:	b	1b314 <__assert_fail@plt+0xa0a4>
   1b2fc:	sub	r2, fp, #48	; 0x30
   1b300:	sub	r1, fp, #36	; 0x24
   1b304:	sub	r3, fp, #36	; 0x24
   1b308:	mov	r0, r3
   1b30c:	bl	193d4 <__assert_fail@plt+0x8164>
   1b310:	b	1b1f8 <__assert_fail@plt+0x9f88>
   1b314:	sub	r3, fp, #36	; 0x24
   1b318:	mov	r0, r3
   1b31c:	bl	17b48 <__assert_fail@plt+0x68d8>
   1b320:	sub	r3, fp, #48	; 0x30
   1b324:	mov	r0, r3
   1b328:	bl	17b48 <__assert_fail@plt+0x68d8>
   1b32c:	ldr	r2, [fp, #-16]
   1b330:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1b334:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1b338:	bl	196d0 <__assert_fail@plt+0x8460>
   1b33c:	sub	sp, fp, #4
   1b340:	pop	{fp, pc}
   1b344:	push	{fp, lr}
   1b348:	add	fp, sp, #4
   1b34c:	sub	sp, sp, #136	; 0x88
   1b350:	str	r0, [fp, #-128]	; 0xffffff80
   1b354:	str	r1, [fp, #-132]	; 0xffffff7c
   1b358:	str	r2, [fp, #-136]	; 0xffffff78
   1b35c:	str	r3, [fp, #-140]	; 0xffffff74
   1b360:	ldr	r3, [fp, #-140]	; 0xffffff74
   1b364:	ldr	r3, [r3, #4]
   1b368:	cmp	r3, #0
   1b36c:	bne	1b3bc <__assert_fail@plt+0xa14c>
   1b370:	ldr	r0, [fp, #4]
   1b374:	bl	18b94 <__assert_fail@plt+0x7924>
   1b378:	str	r0, [fp, #-48]	; 0xffffffd0
   1b37c:	ldr	r1, [fp, #4]
   1b380:	ldr	r0, [fp, #-128]	; 0xffffff80
   1b384:	bl	18e68 <__assert_fail@plt+0x7bf8>
   1b388:	ldr	r3, [fp, #-132]	; 0xffffff7c
   1b38c:	cmp	r3, #0
   1b390:	beq	1b3a0 <__assert_fail@plt+0xa130>
   1b394:	ldr	r3, [fp, #-132]	; 0xffffff7c
   1b398:	mov	r2, #0
   1b39c:	str	r2, [r3, #4]
   1b3a0:	ldr	r3, [fp, #-136]	; 0xffffff78
   1b3a4:	cmp	r3, #0
   1b3a8:	beq	1b9f8 <__assert_fail@plt+0xa788>
   1b3ac:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1b3b0:	ldr	r0, [fp, #-136]	; 0xffffff78
   1b3b4:	bl	17c50 <__assert_fail@plt+0x69e0>
   1b3b8:	b	1b9f8 <__assert_fail@plt+0xa788>
   1b3bc:	ldr	r3, [fp, #4]
   1b3c0:	ldr	r3, [r3, #4]
   1b3c4:	cmp	r3, #0
   1b3c8:	bne	1b418 <__assert_fail@plt+0xa1a8>
   1b3cc:	ldr	r0, [fp, #-140]	; 0xffffff74
   1b3d0:	bl	18b94 <__assert_fail@plt+0x7924>
   1b3d4:	str	r0, [fp, #-44]	; 0xffffffd4
   1b3d8:	ldr	r1, [fp, #-140]	; 0xffffff74
   1b3dc:	ldr	r0, [fp, #-128]	; 0xffffff80
   1b3e0:	bl	18e68 <__assert_fail@plt+0x7bf8>
   1b3e4:	ldr	r3, [fp, #-132]	; 0xffffff7c
   1b3e8:	cmp	r3, #0
   1b3ec:	beq	1b3fc <__assert_fail@plt+0xa18c>
   1b3f0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1b3f4:	ldr	r0, [fp, #-132]	; 0xffffff7c
   1b3f8:	bl	17c50 <__assert_fail@plt+0x69e0>
   1b3fc:	ldr	r3, [fp, #-136]	; 0xffffff78
   1b400:	cmp	r3, #0
   1b404:	beq	1ba00 <__assert_fail@plt+0xa790>
   1b408:	ldr	r3, [fp, #-136]	; 0xffffff78
   1b40c:	mov	r2, #0
   1b410:	str	r2, [r3, #4]
   1b414:	b	1ba00 <__assert_fail@plt+0xa790>
   1b418:	sub	r3, fp, #60	; 0x3c
   1b41c:	mov	r0, r3
   1b420:	bl	17a80 <__assert_fail@plt+0x6810>
   1b424:	sub	r3, fp, #72	; 0x48
   1b428:	mov	r0, r3
   1b42c:	bl	17a80 <__assert_fail@plt+0x6810>
   1b430:	sub	r3, fp, #84	; 0x54
   1b434:	mov	r0, r3
   1b438:	bl	17a80 <__assert_fail@plt+0x6810>
   1b43c:	sub	r3, fp, #96	; 0x60
   1b440:	mov	r0, r3
   1b444:	bl	17a80 <__assert_fail@plt+0x6810>
   1b448:	sub	r3, fp, #108	; 0x6c
   1b44c:	mov	r0, r3
   1b450:	bl	17a80 <__assert_fail@plt+0x6810>
   1b454:	sub	r3, fp, #120	; 0x78
   1b458:	mov	r0, r3
   1b45c:	bl	17a80 <__assert_fail@plt+0x6810>
   1b460:	sub	r3, fp, #60	; 0x3c
   1b464:	ldr	r1, [fp, #-140]	; 0xffffff74
   1b468:	mov	r0, r3
   1b46c:	bl	18e68 <__assert_fail@plt+0x7bf8>
   1b470:	sub	r3, fp, #60	; 0x3c
   1b474:	mov	r0, r3
   1b478:	bl	1b05c <__assert_fail@plt+0x9dec>
   1b47c:	str	r0, [fp, #-8]
   1b480:	sub	r3, fp, #72	; 0x48
   1b484:	ldr	r1, [fp, #4]
   1b488:	mov	r0, r3
   1b48c:	bl	18e68 <__assert_fail@plt+0x7bf8>
   1b490:	sub	r3, fp, #72	; 0x48
   1b494:	mov	r0, r3
   1b498:	bl	1b05c <__assert_fail@plt+0x9dec>
   1b49c:	str	r0, [fp, #-12]
   1b4a0:	ldr	r2, [fp, #-12]
   1b4a4:	ldr	r3, [fp, #-8]
   1b4a8:	cmp	r2, r3
   1b4ac:	movcc	r3, r2
   1b4b0:	movcs	r3, r3
   1b4b4:	str	r3, [fp, #-24]	; 0xffffffe8
   1b4b8:	ldr	r2, [fp, #-8]
   1b4bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b4c0:	sub	r3, r2, r3
   1b4c4:	str	r3, [fp, #-8]
   1b4c8:	ldr	r2, [fp, #-12]
   1b4cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1b4d0:	sub	r3, r2, r3
   1b4d4:	str	r3, [fp, #-12]
   1b4d8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1b4dc:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1b4e0:	cmp	r2, r3
   1b4e4:	bge	1b544 <__assert_fail@plt+0xa2d4>
   1b4e8:	sub	r2, fp, #72	; 0x48
   1b4ec:	sub	r3, fp, #60	; 0x3c
   1b4f0:	mov	r1, r2
   1b4f4:	mov	r0, r3
   1b4f8:	bl	18eec <__assert_fail@plt+0x7c7c>
   1b4fc:	ldr	r3, [fp, #-140]	; 0xffffff74
   1b500:	str	r3, [fp, #-28]	; 0xffffffe4
   1b504:	ldr	r3, [fp, #4]
   1b508:	str	r3, [fp, #-140]	; 0xffffff74
   1b50c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1b510:	str	r3, [fp, #4]
   1b514:	ldr	r3, [fp, #-132]	; 0xffffff7c
   1b518:	str	r3, [fp, #-32]	; 0xffffffe0
   1b51c:	ldr	r3, [fp, #-136]	; 0xffffff78
   1b520:	str	r3, [fp, #-132]	; 0xffffff7c
   1b524:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1b528:	str	r3, [fp, #-136]	; 0xffffff78
   1b52c:	ldr	r3, [fp, #-8]
   1b530:	str	r3, [fp, #-36]	; 0xffffffdc
   1b534:	ldr	r3, [fp, #-12]
   1b538:	str	r3, [fp, #-8]
   1b53c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1b540:	str	r3, [fp, #-12]
   1b544:	sub	r3, fp, #72	; 0x48
   1b548:	sub	r2, fp, #60	; 0x3c
   1b54c:	sub	r1, fp, #60	; 0x3c
   1b550:	sub	r0, fp, #120	; 0x78
   1b554:	bl	19e84 <__assert_fail@plt+0x8c14>
   1b558:	sub	r1, fp, #120	; 0x78
   1b55c:	sub	r3, fp, #120	; 0x78
   1b560:	ldr	r2, [fp, #-8]
   1b564:	mov	r0, r3
   1b568:	bl	196d0 <__assert_fail@plt+0x8460>
   1b56c:	sub	r3, fp, #96	; 0x60
   1b570:	ldr	r1, [fp, #-12]
   1b574:	mov	r0, r3
   1b578:	bl	1dac4 <__assert_fail@plt+0xc854>
   1b57c:	ldr	r2, [fp, #-8]
   1b580:	ldr	r3, [fp, #-12]
   1b584:	add	r3, r2, r3
   1b588:	str	r3, [fp, #-16]
   1b58c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1b590:	cmp	r3, #0
   1b594:	ble	1b704 <__assert_fail@plt+0xa494>
   1b598:	sub	r3, fp, #60	; 0x3c
   1b59c:	mov	r0, r3
   1b5a0:	bl	1b05c <__assert_fail@plt+0x9dec>
   1b5a4:	str	r0, [fp, #-20]	; 0xffffffec
   1b5a8:	ldr	r2, [fp, #-8]
   1b5ac:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b5b0:	add	r2, r2, r3
   1b5b4:	sub	r3, fp, #108	; 0x6c
   1b5b8:	mov	r1, r2
   1b5bc:	mov	r0, r3
   1b5c0:	bl	1dac4 <__assert_fail@plt+0xc854>
   1b5c4:	ldr	r2, [fp, #-16]
   1b5c8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b5cc:	add	r3, r2, r3
   1b5d0:	str	r3, [fp, #-16]
   1b5d4:	sub	r2, fp, #72	; 0x48
   1b5d8:	sub	r3, fp, #60	; 0x3c
   1b5dc:	mov	r1, r2
   1b5e0:	mov	r0, r3
   1b5e4:	bl	18cb4 <__assert_fail@plt+0x7a44>
   1b5e8:	str	r0, [fp, #-40]	; 0xffffffd8
   1b5ec:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1b5f0:	cmp	r3, #0
   1b5f4:	beq	1b718 <__assert_fail@plt+0xa4a8>
   1b5f8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1b5fc:	cmp	r3, #0
   1b600:	bge	1b67c <__assert_fail@plt+0xa40c>
   1b604:	sub	r2, fp, #60	; 0x3c
   1b608:	sub	r1, fp, #72	; 0x48
   1b60c:	sub	r3, fp, #72	; 0x48
   1b610:	mov	r0, r3
   1b614:	bl	193d4 <__assert_fail@plt+0x8164>
   1b618:	sub	r2, fp, #120	; 0x78
   1b61c:	sub	r1, fp, #108	; 0x6c
   1b620:	sub	r3, fp, #108	; 0x6c
   1b624:	mov	r0, r3
   1b628:	bl	19340 <__assert_fail@plt+0x80d0>
   1b62c:	sub	r2, fp, #96	; 0x60
   1b630:	sub	r1, fp, #84	; 0x54
   1b634:	sub	r3, fp, #84	; 0x54
   1b638:	mov	r0, r3
   1b63c:	bl	19340 <__assert_fail@plt+0x80d0>
   1b640:	sub	r3, fp, #72	; 0x48
   1b644:	mov	r0, r3
   1b648:	bl	1b05c <__assert_fail@plt+0x9dec>
   1b64c:	str	r0, [fp, #-20]	; 0xffffffec
   1b650:	sub	r1, fp, #120	; 0x78
   1b654:	sub	r3, fp, #120	; 0x78
   1b658:	ldr	r2, [fp, #-20]	; 0xffffffec
   1b65c:	mov	r0, r3
   1b660:	bl	196d0 <__assert_fail@plt+0x8460>
   1b664:	sub	r1, fp, #96	; 0x60
   1b668:	sub	r3, fp, #96	; 0x60
   1b66c:	ldr	r2, [fp, #-20]	; 0xffffffec
   1b670:	mov	r0, r3
   1b674:	bl	196d0 <__assert_fail@plt+0x8460>
   1b678:	b	1b6f0 <__assert_fail@plt+0xa480>
   1b67c:	sub	r2, fp, #72	; 0x48
   1b680:	sub	r1, fp, #60	; 0x3c
   1b684:	sub	r3, fp, #60	; 0x3c
   1b688:	mov	r0, r3
   1b68c:	bl	193d4 <__assert_fail@plt+0x8164>
   1b690:	sub	r2, fp, #120	; 0x78
   1b694:	sub	r1, fp, #108	; 0x6c
   1b698:	sub	r3, fp, #120	; 0x78
   1b69c:	mov	r0, r3
   1b6a0:	bl	19340 <__assert_fail@plt+0x80d0>
   1b6a4:	sub	r2, fp, #96	; 0x60
   1b6a8:	sub	r1, fp, #84	; 0x54
   1b6ac:	sub	r3, fp, #96	; 0x60
   1b6b0:	mov	r0, r3
   1b6b4:	bl	19340 <__assert_fail@plt+0x80d0>
   1b6b8:	sub	r3, fp, #60	; 0x3c
   1b6bc:	mov	r0, r3
   1b6c0:	bl	1b05c <__assert_fail@plt+0x9dec>
   1b6c4:	str	r0, [fp, #-20]	; 0xffffffec
   1b6c8:	sub	r1, fp, #108	; 0x6c
   1b6cc:	sub	r3, fp, #108	; 0x6c
   1b6d0:	ldr	r2, [fp, #-20]	; 0xffffffec
   1b6d4:	mov	r0, r3
   1b6d8:	bl	196d0 <__assert_fail@plt+0x8460>
   1b6dc:	sub	r1, fp, #84	; 0x54
   1b6e0:	sub	r3, fp, #84	; 0x54
   1b6e4:	ldr	r2, [fp, #-20]	; 0xffffffec
   1b6e8:	mov	r0, r3
   1b6ec:	bl	196d0 <__assert_fail@plt+0x8460>
   1b6f0:	ldr	r2, [fp, #-16]
   1b6f4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1b6f8:	add	r3, r2, r3
   1b6fc:	str	r3, [fp, #-16]
   1b700:	b	1b5d4 <__assert_fail@plt+0xa364>
   1b704:	sub	r3, fp, #108	; 0x6c
   1b708:	ldr	r1, [fp, #-8]
   1b70c:	mov	r0, r3
   1b710:	bl	1dac4 <__assert_fail@plt+0xc854>
   1b714:	b	1b71c <__assert_fail@plt+0xa4ac>
   1b718:	nop			; (mov r0, r0)
   1b71c:	sub	r1, fp, #72	; 0x48
   1b720:	sub	r3, fp, #72	; 0x48
   1b724:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1b728:	mov	r0, r3
   1b72c:	bl	196d0 <__assert_fail@plt+0x8460>
   1b730:	sub	r2, fp, #84	; 0x54
   1b734:	sub	r3, fp, #84	; 0x54
   1b738:	mov	r1, r2
   1b73c:	mov	r0, r3
   1b740:	bl	18eac <__assert_fail@plt+0x7c3c>
   1b744:	sub	r2, fp, #72	; 0x48
   1b748:	sub	r3, fp, #96	; 0x60
   1b74c:	ldr	r1, [fp, #4]
   1b750:	mov	r0, r3
   1b754:	bl	1a758 <__assert_fail@plt+0x94e8>
   1b758:	sub	r2, fp, #96	; 0x60
   1b75c:	sub	r3, fp, #96	; 0x60
   1b760:	mov	r1, r2
   1b764:	mov	r0, r3
   1b768:	bl	18e68 <__assert_fail@plt+0x7bf8>
   1b76c:	sub	r2, fp, #72	; 0x48
   1b770:	sub	r3, fp, #120	; 0x78
   1b774:	ldr	r1, [fp, #-140]	; 0xffffff74
   1b778:	mov	r0, r3
   1b77c:	bl	1a758 <__assert_fail@plt+0x94e8>
   1b780:	sub	r2, fp, #120	; 0x78
   1b784:	sub	r3, fp, #120	; 0x78
   1b788:	mov	r1, r2
   1b78c:	mov	r0, r3
   1b790:	bl	18e68 <__assert_fail@plt+0x7bf8>
   1b794:	b	1b8ac <__assert_fail@plt+0xa63c>
   1b798:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1b79c:	cmp	r3, #0
   1b7a0:	movne	r3, #1
   1b7a4:	moveq	r3, #0
   1b7a8:	uxtb	r3, r3
   1b7ac:	mov	r2, r3
   1b7b0:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1b7b4:	ldr	r3, [r3]
   1b7b8:	and	r3, r3, r2
   1b7bc:	cmp	r3, #0
   1b7c0:	bne	1b7f0 <__assert_fail@plt+0xa580>
   1b7c4:	ldr	r3, [fp, #-104]	; 0xffffff98
   1b7c8:	cmp	r3, #0
   1b7cc:	movne	r3, #1
   1b7d0:	moveq	r3, #0
   1b7d4:	uxtb	r3, r3
   1b7d8:	mov	r2, r3
   1b7dc:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1b7e0:	ldr	r3, [r3]
   1b7e4:	and	r3, r3, r2
   1b7e8:	cmp	r3, #0
   1b7ec:	beq	1b818 <__assert_fail@plt+0xa5a8>
   1b7f0:	sub	r2, fp, #96	; 0x60
   1b7f4:	sub	r1, fp, #84	; 0x54
   1b7f8:	sub	r3, fp, #84	; 0x54
   1b7fc:	mov	r0, r3
   1b800:	bl	193d4 <__assert_fail@plt+0x8164>
   1b804:	sub	r2, fp, #120	; 0x78
   1b808:	sub	r1, fp, #108	; 0x6c
   1b80c:	sub	r3, fp, #108	; 0x6c
   1b810:	mov	r0, r3
   1b814:	bl	19340 <__assert_fail@plt+0x80d0>
   1b818:	ldr	r3, [fp, #-104]	; 0xffffff98
   1b81c:	cmp	r3, #0
   1b820:	movne	r3, #1
   1b824:	moveq	r3, #0
   1b828:	uxtb	r3, r3
   1b82c:	mov	r2, r3
   1b830:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1b834:	ldr	r3, [r3]
   1b838:	and	r3, r3, r2
   1b83c:	cmp	r3, #0
   1b840:	bne	1b870 <__assert_fail@plt+0xa600>
   1b844:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1b848:	cmp	r3, #0
   1b84c:	movne	r3, #1
   1b850:	moveq	r3, #0
   1b854:	uxtb	r3, r3
   1b858:	mov	r2, r3
   1b85c:	ldr	r3, [fp, #-76]	; 0xffffffb4
   1b860:	ldr	r3, [r3]
   1b864:	and	r3, r3, r2
   1b868:	cmp	r3, #0
   1b86c:	beq	1b884 <__assert_fail@plt+0xa614>
   1b870:	ldr	r3, [pc, #404]	; 1ba0c <__assert_fail@plt+0xa79c>
   1b874:	ldr	r2, [pc, #404]	; 1ba10 <__assert_fail@plt+0xa7a0>
   1b878:	ldr	r1, [pc, #404]	; 1ba14 <__assert_fail@plt+0xa7a4>
   1b87c:	ldr	r0, [pc, #404]	; 1ba18 <__assert_fail@plt+0xa7a8>
   1b880:	bl	11270 <__assert_fail@plt>
   1b884:	sub	r1, fp, #84	; 0x54
   1b888:	sub	r3, fp, #84	; 0x54
   1b88c:	mov	r2, #1
   1b890:	mov	r0, r3
   1b894:	bl	1a678 <__assert_fail@plt+0x9408>
   1b898:	sub	r1, fp, #108	; 0x6c
   1b89c:	sub	r3, fp, #108	; 0x6c
   1b8a0:	mov	r2, #1
   1b8a4:	mov	r0, r3
   1b8a8:	bl	1a678 <__assert_fail@plt+0x9408>
   1b8ac:	ldr	r3, [fp, #-16]
   1b8b0:	sub	r2, r3, #1
   1b8b4:	str	r2, [fp, #-16]
   1b8b8:	cmp	r3, #0
   1b8bc:	bne	1b798 <__assert_fail@plt+0xa528>
   1b8c0:	sub	r2, fp, #96	; 0x60
   1b8c4:	sub	r1, fp, #84	; 0x54
   1b8c8:	sub	r3, fp, #96	; 0x60
   1b8cc:	mov	r0, r3
   1b8d0:	bl	19340 <__assert_fail@plt+0x80d0>
   1b8d4:	sub	r2, fp, #96	; 0x60
   1b8d8:	sub	r3, fp, #84	; 0x54
   1b8dc:	mov	r1, r2
   1b8e0:	mov	r0, r3
   1b8e4:	bl	18e10 <__assert_fail@plt+0x7ba0>
   1b8e8:	mov	r3, r0
   1b8ec:	cmp	r3, #0
   1b8f0:	ble	1b91c <__assert_fail@plt+0xa6ac>
   1b8f4:	sub	r2, fp, #96	; 0x60
   1b8f8:	sub	r3, fp, #84	; 0x54
   1b8fc:	mov	r1, r2
   1b900:	mov	r0, r3
   1b904:	bl	18eec <__assert_fail@plt+0x7c7c>
   1b908:	sub	r2, fp, #120	; 0x78
   1b90c:	sub	r1, fp, #108	; 0x6c
   1b910:	sub	r3, fp, #108	; 0x6c
   1b914:	mov	r0, r3
   1b918:	bl	193d4 <__assert_fail@plt+0x8164>
   1b91c:	ldr	r3, [fp, #-140]	; 0xffffff74
   1b920:	ldr	r3, [r3, #4]
   1b924:	cmp	r3, #0
   1b928:	bge	1b940 <__assert_fail@plt+0xa6d0>
   1b92c:	sub	r2, fp, #84	; 0x54
   1b930:	sub	r3, fp, #84	; 0x54
   1b934:	mov	r1, r2
   1b938:	mov	r0, r3
   1b93c:	bl	18eac <__assert_fail@plt+0x7c3c>
   1b940:	ldr	r3, [fp, #4]
   1b944:	ldr	r3, [r3, #4]
   1b948:	cmp	r3, #0
   1b94c:	bge	1b964 <__assert_fail@plt+0xa6f4>
   1b950:	sub	r2, fp, #108	; 0x6c
   1b954:	sub	r3, fp, #108	; 0x6c
   1b958:	mov	r1, r2
   1b95c:	mov	r0, r3
   1b960:	bl	18eac <__assert_fail@plt+0x7c3c>
   1b964:	sub	r3, fp, #72	; 0x48
   1b968:	mov	r1, r3
   1b96c:	ldr	r0, [fp, #-128]	; 0xffffff80
   1b970:	bl	18eec <__assert_fail@plt+0x7c7c>
   1b974:	ldr	r3, [fp, #-132]	; 0xffffff7c
   1b978:	cmp	r3, #0
   1b97c:	beq	1b990 <__assert_fail@plt+0xa720>
   1b980:	sub	r3, fp, #84	; 0x54
   1b984:	mov	r1, r3
   1b988:	ldr	r0, [fp, #-132]	; 0xffffff7c
   1b98c:	bl	18eec <__assert_fail@plt+0x7c7c>
   1b990:	ldr	r3, [fp, #-136]	; 0xffffff78
   1b994:	cmp	r3, #0
   1b998:	beq	1b9ac <__assert_fail@plt+0xa73c>
   1b99c:	sub	r3, fp, #108	; 0x6c
   1b9a0:	mov	r1, r3
   1b9a4:	ldr	r0, [fp, #-136]	; 0xffffff78
   1b9a8:	bl	18eec <__assert_fail@plt+0x7c7c>
   1b9ac:	sub	r3, fp, #60	; 0x3c
   1b9b0:	mov	r0, r3
   1b9b4:	bl	17b48 <__assert_fail@plt+0x68d8>
   1b9b8:	sub	r3, fp, #72	; 0x48
   1b9bc:	mov	r0, r3
   1b9c0:	bl	17b48 <__assert_fail@plt+0x68d8>
   1b9c4:	sub	r3, fp, #84	; 0x54
   1b9c8:	mov	r0, r3
   1b9cc:	bl	17b48 <__assert_fail@plt+0x68d8>
   1b9d0:	sub	r3, fp, #96	; 0x60
   1b9d4:	mov	r0, r3
   1b9d8:	bl	17b48 <__assert_fail@plt+0x68d8>
   1b9dc:	sub	r3, fp, #108	; 0x6c
   1b9e0:	mov	r0, r3
   1b9e4:	bl	17b48 <__assert_fail@plt+0x68d8>
   1b9e8:	sub	r3, fp, #120	; 0x78
   1b9ec:	mov	r0, r3
   1b9f0:	bl	17b48 <__assert_fail@plt+0x68d8>
   1b9f4:	b	1ba04 <__assert_fail@plt+0xa794>
   1b9f8:	nop			; (mov r0, r0)
   1b9fc:	b	1ba04 <__assert_fail@plt+0xa794>
   1ba00:	nop			; (mov r0, r0)
   1ba04:	sub	sp, fp, #4
   1ba08:	pop	{fp, pc}
   1ba0c:	andeq	r0, r4, ip, asr #28
   1ba10:	andeq	r0, r0, r6, lsl #23
   1ba14:	andeq	r0, r4, r8, asr #12
   1ba18:	andeq	r0, r4, r0, lsr r9
   1ba1c:	push	{fp, lr}
   1ba20:	add	fp, sp, #4
   1ba24:	sub	sp, sp, #32
   1ba28:	str	r0, [fp, #-24]	; 0xffffffe8
   1ba2c:	str	r1, [fp, #-28]	; 0xffffffe4
   1ba30:	str	r2, [fp, #-32]	; 0xffffffe0
   1ba34:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1ba38:	ldr	r3, [r3, #4]
   1ba3c:	cmp	r3, #0
   1ba40:	beq	1ba54 <__assert_fail@plt+0xa7e4>
   1ba44:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1ba48:	ldr	r3, [r3, #4]
   1ba4c:	cmp	r3, #0
   1ba50:	bne	1ba64 <__assert_fail@plt+0xa7f4>
   1ba54:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ba58:	mov	r2, #0
   1ba5c:	str	r2, [r3, #4]
   1ba60:	b	1bac4 <__assert_fail@plt+0xa854>
   1ba64:	sub	r3, fp, #16
   1ba68:	mov	r0, r3
   1ba6c:	bl	17a80 <__assert_fail@plt+0x6810>
   1ba70:	sub	r3, fp, #16
   1ba74:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1ba78:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1ba7c:	mov	r0, r3
   1ba80:	bl	1b0d8 <__assert_fail@plt+0x9e68>
   1ba84:	sub	r2, fp, #16
   1ba88:	sub	r3, fp, #16
   1ba8c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1ba90:	mov	r0, r3
   1ba94:	bl	1a758 <__assert_fail@plt+0x94e8>
   1ba98:	sub	r3, fp, #16
   1ba9c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1baa0:	mov	r1, r3
   1baa4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1baa8:	bl	19528 <__assert_fail@plt+0x82b8>
   1baac:	sub	r3, fp, #16
   1bab0:	mov	r0, r3
   1bab4:	bl	17b48 <__assert_fail@plt+0x68d8>
   1bab8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1babc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bac0:	bl	18e68 <__assert_fail@plt+0x7bf8>
   1bac4:	sub	sp, fp, #4
   1bac8:	pop	{fp, pc}
   1bacc:	push	{fp, lr}
   1bad0:	add	fp, sp, #4
   1bad4:	sub	sp, sp, #16
   1bad8:	str	r0, [fp, #-8]
   1badc:	str	r1, [fp, #-12]
   1bae0:	str	r2, [fp, #-16]
   1bae4:	ldr	r3, [fp, #-16]
   1bae8:	cmp	r3, #0
   1baec:	beq	1bb00 <__assert_fail@plt+0xa890>
   1baf0:	ldr	r3, [fp, #-12]
   1baf4:	ldr	r3, [r3, #4]
   1baf8:	cmp	r3, #0
   1bafc:	bne	1bb10 <__assert_fail@plt+0xa8a0>
   1bb00:	ldr	r3, [fp, #-8]
   1bb04:	mov	r2, #0
   1bb08:	str	r2, [r3, #4]
   1bb0c:	b	1bb54 <__assert_fail@plt+0xa8e4>
   1bb10:	ldr	r2, [fp, #-16]
   1bb14:	ldr	r1, [fp, #-12]
   1bb18:	mov	r0, #0
   1bb1c:	bl	1afcc <__assert_fail@plt+0x9d5c>
   1bb20:	mov	r3, r0
   1bb24:	mov	r1, r3
   1bb28:	ldr	r0, [fp, #-16]
   1bb2c:	bl	3f560 <__assert_fail@plt+0x2e2f0>
   1bb30:	mov	r3, r0
   1bb34:	str	r3, [fp, #-16]
   1bb38:	ldr	r2, [fp, #-16]
   1bb3c:	ldr	r1, [fp, #-12]
   1bb40:	ldr	r0, [fp, #-8]
   1bb44:	bl	194d4 <__assert_fail@plt+0x8264>
   1bb48:	ldr	r1, [fp, #-8]
   1bb4c:	ldr	r0, [fp, #-8]
   1bb50:	bl	18e68 <__assert_fail@plt+0x7bf8>
   1bb54:	sub	sp, fp, #4
   1bb58:	pop	{fp, pc}
   1bb5c:	push	{fp, lr}
   1bb60:	add	fp, sp, #4
   1bb64:	sub	sp, sp, #56	; 0x38
   1bb68:	str	r0, [fp, #-40]	; 0xffffffd8
   1bb6c:	str	r1, [fp, #-44]	; 0xffffffd4
   1bb70:	str	r2, [fp, #-48]	; 0xffffffd0
   1bb74:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1bb78:	ldr	r3, [r3, #4]
   1bb7c:	cmp	r3, #0
   1bb80:	beq	1bb9c <__assert_fail@plt+0xa92c>
   1bb84:	mov	r1, #1
   1bb88:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1bb8c:	bl	18d70 <__assert_fail@plt+0x7b00>
   1bb90:	mov	r3, r0
   1bb94:	cmp	r3, #0
   1bb98:	bgt	1bba4 <__assert_fail@plt+0xa934>
   1bb9c:	mov	r3, #0
   1bba0:	b	1bc80 <__assert_fail@plt+0xaa10>
   1bba4:	sub	r3, fp, #20
   1bba8:	mov	r0, r3
   1bbac:	bl	17a80 <__assert_fail@plt+0x6810>
   1bbb0:	sub	r3, fp, #32
   1bbb4:	mov	r0, r3
   1bbb8:	bl	17a80 <__assert_fail@plt+0x6810>
   1bbbc:	sub	r1, fp, #32
   1bbc0:	sub	r0, fp, #20
   1bbc4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1bbc8:	str	r3, [sp]
   1bbcc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1bbd0:	mov	r2, #0
   1bbd4:	bl	1b344 <__assert_fail@plt+0xa0d4>
   1bbd8:	sub	r3, fp, #20
   1bbdc:	mov	r1, #1
   1bbe0:	mov	r0, r3
   1bbe4:	bl	18c64 <__assert_fail@plt+0x79f4>
   1bbe8:	mov	r3, r0
   1bbec:	cmp	r3, #0
   1bbf0:	moveq	r3, #1
   1bbf4:	movne	r3, #0
   1bbf8:	uxtb	r3, r3
   1bbfc:	str	r3, [fp, #-8]
   1bc00:	ldr	r3, [fp, #-8]
   1bc04:	cmp	r3, #0
   1bc08:	beq	1bc64 <__assert_fail@plt+0xa9f4>
   1bc0c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1bc10:	cmp	r3, #0
   1bc14:	bge	1bc54 <__assert_fail@plt+0xa9e4>
   1bc18:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1bc1c:	ldr	r3, [r3, #4]
   1bc20:	cmp	r3, #0
   1bc24:	blt	1bc40 <__assert_fail@plt+0xa9d0>
   1bc28:	sub	r1, fp, #32
   1bc2c:	sub	r3, fp, #32
   1bc30:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1bc34:	mov	r0, r3
   1bc38:	bl	19340 <__assert_fail@plt+0x80d0>
   1bc3c:	b	1bc54 <__assert_fail@plt+0xa9e4>
   1bc40:	sub	r1, fp, #32
   1bc44:	sub	r3, fp, #32
   1bc48:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1bc4c:	mov	r0, r3
   1bc50:	bl	193d4 <__assert_fail@plt+0x8164>
   1bc54:	sub	r3, fp, #32
   1bc58:	mov	r1, r3
   1bc5c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1bc60:	bl	18eec <__assert_fail@plt+0x7c7c>
   1bc64:	sub	r3, fp, #20
   1bc68:	mov	r0, r3
   1bc6c:	bl	17b48 <__assert_fail@plt+0x68d8>
   1bc70:	sub	r3, fp, #32
   1bc74:	mov	r0, r3
   1bc78:	bl	17b48 <__assert_fail@plt+0x68d8>
   1bc7c:	ldr	r3, [fp, #-8]
   1bc80:	mov	r0, r3
   1bc84:	sub	sp, fp, #4
   1bc88:	pop	{fp, pc}
   1bc8c:	push	{fp, lr}
   1bc90:	add	fp, sp, #4
   1bc94:	sub	sp, sp, #32
   1bc98:	str	r0, [fp, #-24]	; 0xffffffe8
   1bc9c:	str	r1, [fp, #-28]	; 0xffffffe4
   1bca0:	str	r2, [fp, #-32]	; 0xffffffe0
   1bca4:	sub	r3, fp, #20
   1bca8:	mov	r1, #1
   1bcac:	mov	r0, r3
   1bcb0:	bl	17e24 <__assert_fail@plt+0x6bb4>
   1bcb4:	mov	r3, #-2147483648	; 0x80000000
   1bcb8:	str	r3, [fp, #-8]
   1bcbc:	sub	r2, fp, #20
   1bcc0:	sub	r1, fp, #20
   1bcc4:	sub	r3, fp, #20
   1bcc8:	mov	r0, r3
   1bccc:	bl	19528 <__assert_fail@plt+0x82b8>
   1bcd0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1bcd4:	ldr	r3, [fp, #-8]
   1bcd8:	and	r3, r3, r2
   1bcdc:	cmp	r3, #0
   1bce0:	beq	1bcf8 <__assert_fail@plt+0xaa88>
   1bce4:	sub	r1, fp, #20
   1bce8:	sub	r3, fp, #20
   1bcec:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1bcf0:	mov	r0, r3
   1bcf4:	bl	19528 <__assert_fail@plt+0x82b8>
   1bcf8:	ldr	r3, [fp, #-8]
   1bcfc:	lsr	r3, r3, #1
   1bd00:	str	r3, [fp, #-8]
   1bd04:	ldr	r3, [fp, #-8]
   1bd08:	cmp	r3, #0
   1bd0c:	bne	1bcbc <__assert_fail@plt+0xaa4c>
   1bd10:	sub	r3, fp, #20
   1bd14:	mov	r1, r3
   1bd18:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bd1c:	bl	18eec <__assert_fail@plt+0x7c7c>
   1bd20:	sub	r3, fp, #20
   1bd24:	mov	r0, r3
   1bd28:	bl	17b48 <__assert_fail@plt+0x68d8>
   1bd2c:	nop			; (mov r0, r0)
   1bd30:	sub	sp, fp, #4
   1bd34:	pop	{fp, pc}
   1bd38:	push	{fp, lr}
   1bd3c:	add	fp, sp, #4
   1bd40:	sub	sp, sp, #32
   1bd44:	str	r0, [fp, #-24]	; 0xffffffe8
   1bd48:	str	r1, [fp, #-28]	; 0xffffffe4
   1bd4c:	str	r2, [fp, #-32]	; 0xffffffe0
   1bd50:	sub	r3, fp, #16
   1bd54:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1bd58:	mov	r0, r3
   1bd5c:	bl	17e24 <__assert_fail@plt+0x6bb4>
   1bd60:	sub	r3, fp, #16
   1bd64:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1bd68:	mov	r1, r3
   1bd6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1bd70:	bl	1bc8c <__assert_fail@plt+0xaa1c>
   1bd74:	sub	r3, fp, #16
   1bd78:	mov	r0, r3
   1bd7c:	bl	17b48 <__assert_fail@plt+0x68d8>
   1bd80:	nop			; (mov r0, r0)
   1bd84:	sub	sp, fp, #4
   1bd88:	pop	{fp, pc}
   1bd8c:	push	{fp, lr}
   1bd90:	add	fp, sp, #4
   1bd94:	sub	sp, sp, #112	; 0x70
   1bd98:	str	r0, [fp, #-96]	; 0xffffffa0
   1bd9c:	str	r1, [fp, #-100]	; 0xffffff9c
   1bda0:	str	r2, [fp, #-104]	; 0xffffff98
   1bda4:	str	r3, [fp, #-108]	; 0xffffff94
   1bda8:	mov	r3, #0
   1bdac:	str	r3, [fp, #-16]
   1bdb0:	ldr	r3, [fp, #-104]	; 0xffffff98
   1bdb4:	ldr	r3, [r3, #4]
   1bdb8:	cmp	r3, #0
   1bdbc:	rsblt	r3, r3, #0
   1bdc0:	str	r3, [fp, #-8]
   1bdc4:	ldr	r3, [fp, #-108]	; 0xffffff94
   1bdc8:	ldr	r3, [r3, #4]
   1bdcc:	cmp	r3, #0
   1bdd0:	rsblt	r3, r3, #0
   1bdd4:	str	r3, [fp, #-28]	; 0xffffffe4
   1bdd8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1bddc:	cmp	r3, #0
   1bde0:	bne	1bdec <__assert_fail@plt+0xab7c>
   1bde4:	ldr	r0, [pc, #876]	; 1c158 <__assert_fail@plt+0xaee8>
   1bde8:	bl	136c0 <__assert_fail@plt+0x2450>
   1bdec:	ldr	r3, [fp, #-8]
   1bdf0:	cmp	r3, #0
   1bdf4:	bne	1be08 <__assert_fail@plt+0xab98>
   1bdf8:	mov	r1, #1
   1bdfc:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1be00:	bl	17cd4 <__assert_fail@plt+0x6a64>
   1be04:	b	1c150 <__assert_fail@plt+0xaee0>
   1be08:	ldr	r3, [fp, #-108]	; 0xffffff94
   1be0c:	ldr	r3, [r3, #8]
   1be10:	str	r3, [fp, #-12]
   1be14:	sub	r3, fp, #88	; 0x58
   1be18:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1be1c:	ldr	r1, [fp, #-12]
   1be20:	mov	r0, r3
   1be24:	bl	15794 <__assert_fail@plt+0x4524>
   1be28:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1be2c:	str	r3, [fp, #-32]	; 0xffffffe0
   1be30:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1be34:	cmp	r3, #0
   1be38:	beq	1be90 <__assert_fail@plt+0xac20>
   1be3c:	mov	r3, #0
   1be40:	str	r3, [fp, #-88]	; 0xffffffa8
   1be44:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1be48:	bl	1390c <__assert_fail@plt+0x269c>
   1be4c:	str	r0, [fp, #-16]
   1be50:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1be54:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1be58:	ldr	r1, [fp, #-12]
   1be5c:	ldr	r0, [fp, #-16]
   1be60:	bl	14a94 <__assert_fail@plt+0x3824>
   1be64:	str	r0, [fp, #-36]	; 0xffffffdc
   1be68:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1be6c:	cmp	r3, #0
   1be70:	beq	1be88 <__assert_fail@plt+0xac18>
   1be74:	ldr	r3, [pc, #736]	; 1c15c <__assert_fail@plt+0xaeec>
   1be78:	ldr	r2, [pc, #736]	; 1c160 <__assert_fail@plt+0xaef0>
   1be7c:	ldr	r1, [pc, #736]	; 1c164 <__assert_fail@plt+0xaef4>
   1be80:	ldr	r0, [pc, #736]	; 1c168 <__assert_fail@plt+0xaef8>
   1be84:	bl	11270 <__assert_fail@plt>
   1be88:	ldr	r3, [fp, #-16]
   1be8c:	str	r3, [fp, #-12]
   1be90:	sub	r3, fp, #72	; 0x48
   1be94:	mov	r0, r3
   1be98:	bl	17a80 <__assert_fail@plt+0x6810>
   1be9c:	ldr	r3, [fp, #-104]	; 0xffffff98
   1bea0:	ldr	r3, [r3, #4]
   1bea4:	cmp	r3, #0
   1bea8:	bge	1bed8 <__assert_fail@plt+0xac68>
   1beac:	sub	r3, fp, #72	; 0x48
   1beb0:	ldr	r2, [fp, #-108]	; 0xffffff94
   1beb4:	ldr	r1, [fp, #-100]	; 0xffffff9c
   1beb8:	mov	r0, r3
   1bebc:	bl	1bb5c <__assert_fail@plt+0xa8ec>
   1bec0:	mov	r3, r0
   1bec4:	cmp	r3, #0
   1bec8:	bne	1bfcc <__assert_fail@plt+0xad5c>
   1becc:	ldr	r0, [pc, #664]	; 1c16c <__assert_fail@plt+0xaefc>
   1bed0:	bl	136c0 <__assert_fail@plt+0x2450>
   1bed4:	b	1bfcc <__assert_fail@plt+0xad5c>
   1bed8:	sub	r3, fp, #72	; 0x48
   1bedc:	ldr	r1, [fp, #-100]	; 0xffffff9c
   1bee0:	mov	r0, r3
   1bee4:	bl	18e68 <__assert_fail@plt+0x7bf8>
   1bee8:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1beec:	str	r3, [fp, #-20]	; 0xffffffec
   1bef0:	ldr	r2, [fp, #-20]	; 0xffffffec
   1bef4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1bef8:	cmp	r2, r3
   1befc:	blt	1bf2c <__assert_fail@plt+0xacbc>
   1bf00:	ldr	r1, [fp, #-64]	; 0xffffffc0
   1bf04:	ldr	r2, [fp, #-68]	; 0xffffffbc
   1bf08:	sub	r3, fp, #88	; 0x58
   1bf0c:	str	r3, [sp, #4]
   1bf10:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1bf14:	str	r3, [sp]
   1bf18:	ldr	r3, [fp, #-12]
   1bf1c:	mov	r0, #0
   1bf20:	bl	16978 <__assert_fail@plt+0x5708>
   1bf24:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1bf28:	str	r3, [fp, #-20]	; 0xffffffec
   1bf2c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1bf30:	ldr	r3, [r3, #4]
   1bf34:	cmp	r3, #0
   1bf38:	bge	1bfb4 <__assert_fail@plt+0xad44>
   1bf3c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1bf40:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1bf44:	cmp	r2, r3
   1bf48:	bge	1bf64 <__assert_fail@plt+0xacf4>
   1bf4c:	sub	r3, fp, #72	; 0x48
   1bf50:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1bf54:	mov	r0, r3
   1bf58:	bl	17b90 <__assert_fail@plt+0x6920>
   1bf5c:	mov	r3, r0
   1bf60:	b	1bf68 <__assert_fail@plt+0xacf8>
   1bf64:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1bf68:	str	r3, [fp, #-40]	; 0xffffffd8
   1bf6c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1bf70:	str	r3, [sp]
   1bf74:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1bf78:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1bf7c:	ldr	r1, [fp, #-12]
   1bf80:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1bf84:	bl	14180 <__assert_fail@plt+0x2f10>
   1bf88:	str	r0, [fp, #-44]	; 0xffffffd4
   1bf8c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1bf90:	cmp	r3, #0
   1bf94:	beq	1bfac <__assert_fail@plt+0xad3c>
   1bf98:	ldr	r3, [pc, #444]	; 1c15c <__assert_fail@plt+0xaeec>
   1bf9c:	ldr	r2, [pc, #460]	; 1c170 <__assert_fail@plt+0xaf00>
   1bfa0:	ldr	r1, [pc, #444]	; 1c164 <__assert_fail@plt+0xaef4>
   1bfa4:	ldr	r0, [pc, #444]	; 1c168 <__assert_fail@plt+0xaef8>
   1bfa8:	bl	11270 <__assert_fail@plt>
   1bfac:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1bfb0:	str	r3, [fp, #-20]	; 0xffffffec
   1bfb4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1bfb8:	ldr	r1, [fp, #-20]	; 0xffffffec
   1bfbc:	mov	r0, r3
   1bfc0:	bl	13c08 <__assert_fail@plt+0x2998>
   1bfc4:	mov	r3, r0
   1bfc8:	str	r3, [fp, #-68]	; 0xffffffbc
   1bfcc:	sub	r3, fp, #60	; 0x3c
   1bfd0:	mov	r1, #1
   1bfd4:	mov	r0, r3
   1bfd8:	bl	17e24 <__assert_fail@plt+0x6bb4>
   1bfdc:	b	1c0a4 <__assert_fail@plt+0xae34>
   1bfe0:	ldr	r3, [fp, #-104]	; 0xffffff98
   1bfe4:	ldr	r2, [r3, #8]
   1bfe8:	ldr	r3, [fp, #-8]
   1bfec:	lsl	r3, r3, #2
   1bff0:	add	r3, r2, r3
   1bff4:	ldr	r3, [r3]
   1bff8:	str	r3, [fp, #-48]	; 0xffffffd0
   1bffc:	mov	r3, #-2147483648	; 0x80000000
   1c000:	str	r3, [fp, #-24]	; 0xffffffe8
   1c004:	sub	r2, fp, #60	; 0x3c
   1c008:	sub	r1, fp, #60	; 0x3c
   1c00c:	sub	r3, fp, #60	; 0x3c
   1c010:	mov	r0, r3
   1c014:	bl	19528 <__assert_fail@plt+0x82b8>
   1c018:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1c01c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c020:	and	r3, r3, r2
   1c024:	cmp	r3, #0
   1c028:	beq	1c040 <__assert_fail@plt+0xadd0>
   1c02c:	sub	r2, fp, #72	; 0x48
   1c030:	sub	r1, fp, #60	; 0x3c
   1c034:	sub	r3, fp, #60	; 0x3c
   1c038:	mov	r0, r3
   1c03c:	bl	19528 <__assert_fail@plt+0x82b8>
   1c040:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1c044:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c048:	cmp	r2, r3
   1c04c:	ble	1c08c <__assert_fail@plt+0xae1c>
   1c050:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1c054:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1c058:	sub	r3, fp, #88	; 0x58
   1c05c:	str	r3, [sp, #4]
   1c060:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c064:	str	r3, [sp]
   1c068:	ldr	r3, [fp, #-12]
   1c06c:	mov	r0, #0
   1c070:	bl	16978 <__assert_fail@plt+0x5708>
   1c074:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1c078:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1c07c:	mov	r0, r3
   1c080:	bl	13c08 <__assert_fail@plt+0x2998>
   1c084:	mov	r3, r0
   1c088:	str	r3, [fp, #-56]	; 0xffffffc8
   1c08c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c090:	lsr	r3, r3, #1
   1c094:	str	r3, [fp, #-24]	; 0xffffffe8
   1c098:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c09c:	cmp	r3, #0
   1c0a0:	bne	1c004 <__assert_fail@plt+0xad94>
   1c0a4:	ldr	r3, [fp, #-8]
   1c0a8:	sub	r3, r3, #1
   1c0ac:	str	r3, [fp, #-8]
   1c0b0:	ldr	r3, [fp, #-8]
   1c0b4:	cmp	r3, #0
   1c0b8:	bge	1bfe0 <__assert_fail@plt+0xad70>
   1c0bc:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1c0c0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c0c4:	cmp	r2, r3
   1c0c8:	blt	1c110 <__assert_fail@plt+0xaea0>
   1c0cc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c0d0:	str	r3, [fp, #-88]	; 0xffffffa8
   1c0d4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1c0d8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1c0dc:	sub	r3, fp, #88	; 0x58
   1c0e0:	str	r3, [sp, #4]
   1c0e4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c0e8:	str	r3, [sp]
   1c0ec:	ldr	r3, [fp, #-12]
   1c0f0:	mov	r0, #0
   1c0f4:	bl	16978 <__assert_fail@plt+0x5708>
   1c0f8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1c0fc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1c100:	mov	r0, r3
   1c104:	bl	13c08 <__assert_fail@plt+0x2998>
   1c108:	mov	r3, r0
   1c10c:	str	r3, [fp, #-56]	; 0xffffffc8
   1c110:	ldr	r3, [fp, #-16]
   1c114:	cmp	r3, #0
   1c118:	beq	1c128 <__assert_fail@plt+0xaeb8>
   1c11c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1c120:	ldr	r0, [fp, #-16]
   1c124:	bl	139c0 <__assert_fail@plt+0x2750>
   1c128:	sub	r3, fp, #60	; 0x3c
   1c12c:	mov	r1, r3
   1c130:	ldr	r0, [fp, #-96]	; 0xffffffa0
   1c134:	bl	18eec <__assert_fail@plt+0x7c7c>
   1c138:	sub	r3, fp, #60	; 0x3c
   1c13c:	mov	r0, r3
   1c140:	bl	17b48 <__assert_fail@plt+0x68d8>
   1c144:	sub	r3, fp, #72	; 0x48
   1c148:	mov	r0, r3
   1c14c:	bl	17b48 <__assert_fail@plt+0x68d8>
   1c150:	sub	sp, fp, #4
   1c154:	pop	{fp, pc}
   1c158:	andeq	r0, r4, r4, asr r9
   1c15c:	andeq	r0, r4, r8, asr lr
   1c160:	andeq	r0, r0, ip, lsr #24
   1c164:	andeq	r0, r4, r8, asr #12
   1c168:	andeq	r0, r4, r0, ror r8
   1c16c:	andeq	r0, r4, ip, ror #18
   1c170:	andeq	r0, r0, r9, asr #24
   1c174:	push	{fp, lr}
   1c178:	add	fp, sp, #4
   1c17c:	sub	sp, sp, #32
   1c180:	str	r0, [fp, #-24]	; 0xffffffe8
   1c184:	str	r1, [fp, #-28]	; 0xffffffe4
   1c188:	str	r2, [fp, #-32]	; 0xffffffe0
   1c18c:	str	r3, [fp, #-36]	; 0xffffffdc
   1c190:	sub	r3, fp, #16
   1c194:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1c198:	mov	r0, r3
   1c19c:	bl	17e24 <__assert_fail@plt+0x6bb4>
   1c1a0:	sub	r2, fp, #16
   1c1a4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1c1a8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1c1ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c1b0:	bl	1bd8c <__assert_fail@plt+0xab1c>
   1c1b4:	sub	r3, fp, #16
   1c1b8:	mov	r0, r3
   1c1bc:	bl	17b48 <__assert_fail@plt+0x68d8>
   1c1c0:	nop			; (mov r0, r0)
   1c1c4:	sub	sp, fp, #4
   1c1c8:	pop	{fp, pc}
   1c1cc:	push	{fp, lr}
   1c1d0:	add	fp, sp, #4
   1c1d4:	sub	sp, sp, #64	; 0x40
   1c1d8:	str	r0, [fp, #-56]	; 0xffffffc8
   1c1dc:	str	r1, [fp, #-60]	; 0xffffffc4
   1c1e0:	str	r2, [fp, #-64]	; 0xffffffc0
   1c1e4:	str	r3, [fp, #-68]	; 0xffffffbc
   1c1e8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1c1ec:	ldr	r3, [r3, #4]
   1c1f0:	lsr	r3, r3, #31
   1c1f4:	uxtb	r3, r3
   1c1f8:	str	r3, [fp, #-8]
   1c1fc:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1c200:	mvn	r2, r3
   1c204:	ldr	r3, [fp, #-8]
   1c208:	and	r3, r3, r2
   1c20c:	cmp	r3, #0
   1c210:	beq	1c21c <__assert_fail@plt+0xafac>
   1c214:	ldr	r0, [pc, #644]	; 1c4a0 <__assert_fail@plt+0xb230>
   1c218:	bl	136c0 <__assert_fail@plt+0x2450>
   1c21c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1c220:	cmp	r3, #0
   1c224:	bne	1c230 <__assert_fail@plt+0xafc0>
   1c228:	ldr	r0, [pc, #628]	; 1c4a4 <__assert_fail@plt+0xb234>
   1c22c:	bl	136c0 <__assert_fail@plt+0x2450>
   1c230:	mov	r1, #1
   1c234:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1c238:	bl	18d70 <__assert_fail@plt+0x7b00>
   1c23c:	mov	r3, r0
   1c240:	cmp	r3, #0
   1c244:	bgt	1c27c <__assert_fail@plt+0xb00c>
   1c248:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1c24c:	cmp	r3, #0
   1c250:	beq	1c260 <__assert_fail@plt+0xaff0>
   1c254:	ldr	r1, [fp, #-64]	; 0xffffffc0
   1c258:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1c25c:	bl	17d50 <__assert_fail@plt+0x6ae0>
   1c260:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1c264:	cmp	r3, #0
   1c268:	beq	1c494 <__assert_fail@plt+0xb224>
   1c26c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1c270:	mov	r2, #0
   1c274:	str	r2, [r3, #4]
   1c278:	b	1c498 <__assert_fail@plt+0xb228>
   1c27c:	sub	r3, fp, #36	; 0x24
   1c280:	mov	r0, r3
   1c284:	bl	17a80 <__assert_fail@plt+0x6810>
   1c288:	sub	r3, fp, #24
   1c28c:	mov	r0, r3
   1c290:	bl	17a80 <__assert_fail@plt+0x6810>
   1c294:	mov	r1, #2
   1c298:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1c29c:	bl	1ee28 <__assert_fail@plt+0xdbb8>
   1c2a0:	mov	r3, r0
   1c2a4:	sub	r3, r3, #1
   1c2a8:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1c2ac:	mov	r0, r3
   1c2b0:	bl	3f560 <__assert_fail@plt+0x2e2f0>
   1c2b4:	mov	r3, r0
   1c2b8:	add	r3, r3, #1
   1c2bc:	str	r3, [fp, #-12]
   1c2c0:	sub	r3, fp, #24
   1c2c4:	ldr	r1, [fp, #-12]
   1c2c8:	mov	r0, r3
   1c2cc:	bl	1dac4 <__assert_fail@plt+0xc854>
   1c2d0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1c2d4:	cmp	r3, #2
   1c2d8:	bne	1c350 <__assert_fail@plt+0xb0e0>
   1c2dc:	sub	r2, fp, #24
   1c2e0:	sub	r3, fp, #36	; 0x24
   1c2e4:	mov	r1, r2
   1c2e8:	mov	r0, r3
   1c2ec:	bl	18eec <__assert_fail@plt+0x7c7c>
   1c2f0:	sub	r2, fp, #36	; 0x24
   1c2f4:	sub	r3, fp, #24
   1c2f8:	ldr	r1, [fp, #-64]	; 0xffffffc0
   1c2fc:	mov	r0, r3
   1c300:	bl	19f48 <__assert_fail@plt+0x8cd8>
   1c304:	sub	r2, fp, #36	; 0x24
   1c308:	sub	r1, fp, #24
   1c30c:	sub	r3, fp, #24
   1c310:	mov	r0, r3
   1c314:	bl	19340 <__assert_fail@plt+0x80d0>
   1c318:	sub	r1, fp, #24
   1c31c:	sub	r3, fp, #24
   1c320:	mov	r2, #1
   1c324:	mov	r0, r3
   1c328:	bl	1a678 <__assert_fail@plt+0x9408>
   1c32c:	sub	r2, fp, #36	; 0x24
   1c330:	sub	r3, fp, #24
   1c334:	mov	r1, r2
   1c338:	mov	r0, r3
   1c33c:	bl	18e10 <__assert_fail@plt+0x7ba0>
   1c340:	mov	r3, r0
   1c344:	cmp	r3, #0
   1c348:	blt	1c2dc <__assert_fail@plt+0xb06c>
   1c34c:	b	1c428 <__assert_fail@plt+0xb1b8>
   1c350:	sub	r3, fp, #48	; 0x30
   1c354:	mov	r0, r3
   1c358:	bl	17a80 <__assert_fail@plt+0x6810>
   1c35c:	ldr	r3, [fp, #-8]
   1c360:	cmp	r3, #0
   1c364:	beq	1c37c <__assert_fail@plt+0xb10c>
   1c368:	sub	r2, fp, #24
   1c36c:	sub	r3, fp, #24
   1c370:	mov	r1, r2
   1c374:	mov	r0, r3
   1c378:	bl	18eac <__assert_fail@plt+0x7c3c>
   1c37c:	sub	r2, fp, #24
   1c380:	sub	r3, fp, #36	; 0x24
   1c384:	mov	r1, r2
   1c388:	mov	r0, r3
   1c38c:	bl	18eec <__assert_fail@plt+0x7c7c>
   1c390:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1c394:	sub	r2, r3, #1
   1c398:	sub	r1, fp, #36	; 0x24
   1c39c:	sub	r3, fp, #24
   1c3a0:	mov	r0, r3
   1c3a4:	bl	1bc8c <__assert_fail@plt+0xaa1c>
   1c3a8:	sub	r2, fp, #24
   1c3ac:	sub	r3, fp, #24
   1c3b0:	ldr	r1, [fp, #-64]	; 0xffffffc0
   1c3b4:	mov	r0, r3
   1c3b8:	bl	19f48 <__assert_fail@plt+0x8cd8>
   1c3bc:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1c3c0:	sub	r2, r3, #1
   1c3c4:	sub	r1, fp, #36	; 0x24
   1c3c8:	sub	r3, fp, #48	; 0x30
   1c3cc:	mov	r0, r3
   1c3d0:	bl	194d4 <__assert_fail@plt+0x8264>
   1c3d4:	sub	r2, fp, #48	; 0x30
   1c3d8:	sub	r1, fp, #24
   1c3dc:	sub	r3, fp, #24
   1c3e0:	mov	r0, r3
   1c3e4:	bl	19340 <__assert_fail@plt+0x80d0>
   1c3e8:	sub	r1, fp, #24
   1c3ec:	sub	r3, fp, #24
   1c3f0:	ldr	r2, [fp, #-68]	; 0xffffffbc
   1c3f4:	mov	r0, r3
   1c3f8:	bl	1aacc <__assert_fail@plt+0x985c>
   1c3fc:	sub	r2, fp, #36	; 0x24
   1c400:	sub	r3, fp, #24
   1c404:	mov	r1, r2
   1c408:	mov	r0, r3
   1c40c:	bl	18e10 <__assert_fail@plt+0x7ba0>
   1c410:	mov	r3, r0
   1c414:	cmp	r3, #0
   1c418:	blt	1c37c <__assert_fail@plt+0xb10c>
   1c41c:	sub	r3, fp, #48	; 0x30
   1c420:	mov	r0, r3
   1c424:	bl	17b48 <__assert_fail@plt+0x68d8>
   1c428:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1c42c:	cmp	r3, #0
   1c430:	beq	1c45c <__assert_fail@plt+0xb1ec>
   1c434:	sub	r1, fp, #36	; 0x24
   1c438:	sub	r3, fp, #24
   1c43c:	ldr	r2, [fp, #-68]	; 0xffffffbc
   1c440:	mov	r0, r3
   1c444:	bl	1bc8c <__assert_fail@plt+0xaa1c>
   1c448:	sub	r3, fp, #24
   1c44c:	mov	r2, r3
   1c450:	ldr	r1, [fp, #-64]	; 0xffffffc0
   1c454:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1c458:	bl	193d4 <__assert_fail@plt+0x8164>
   1c45c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1c460:	cmp	r3, #0
   1c464:	beq	1c478 <__assert_fail@plt+0xb208>
   1c468:	sub	r3, fp, #36	; 0x24
   1c46c:	mov	r1, r3
   1c470:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1c474:	bl	18eec <__assert_fail@plt+0x7c7c>
   1c478:	sub	r3, fp, #36	; 0x24
   1c47c:	mov	r0, r3
   1c480:	bl	17b48 <__assert_fail@plt+0x68d8>
   1c484:	sub	r3, fp, #24
   1c488:	mov	r0, r3
   1c48c:	bl	17b48 <__assert_fail@plt+0x68d8>
   1c490:	b	1c498 <__assert_fail@plt+0xb228>
   1c494:	nop			; (mov r0, r0)
   1c498:	sub	sp, fp, #4
   1c49c:	pop	{fp, pc}
   1c4a0:	andeq	r0, r4, r4, lsr #19
   1c4a4:	ldrdeq	r0, [r4], -r4
   1c4a8:	push	{fp, lr}
   1c4ac:	add	fp, sp, #4
   1c4b0:	sub	sp, sp, #32
   1c4b4:	str	r0, [fp, #-24]	; 0xffffffe8
   1c4b8:	str	r1, [fp, #-28]	; 0xffffffe4
   1c4bc:	str	r2, [fp, #-32]	; 0xffffffe0
   1c4c0:	sub	r3, fp, #20
   1c4c4:	mov	r0, r3
   1c4c8:	bl	17a80 <__assert_fail@plt+0x6810>
   1c4cc:	sub	r1, fp, #20
   1c4d0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c4d4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1c4d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c4dc:	bl	1c1cc <__assert_fail@plt+0xaf5c>
   1c4e0:	ldr	r3, [fp, #-16]
   1c4e4:	cmp	r3, #0
   1c4e8:	moveq	r3, #1
   1c4ec:	movne	r3, #0
   1c4f0:	uxtb	r3, r3
   1c4f4:	str	r3, [fp, #-8]
   1c4f8:	sub	r3, fp, #20
   1c4fc:	mov	r0, r3
   1c500:	bl	17b48 <__assert_fail@plt+0x68d8>
   1c504:	ldr	r3, [fp, #-8]
   1c508:	mov	r0, r3
   1c50c:	sub	sp, fp, #4
   1c510:	pop	{fp, pc}
   1c514:	push	{fp, lr}
   1c518:	add	fp, sp, #4
   1c51c:	sub	sp, sp, #16
   1c520:	str	r0, [fp, #-8]
   1c524:	str	r1, [fp, #-12]
   1c528:	str	r2, [fp, #-16]
   1c52c:	mov	r3, #2
   1c530:	ldr	r2, [fp, #-16]
   1c534:	ldr	r1, [fp, #-12]
   1c538:	ldr	r0, [fp, #-8]
   1c53c:	bl	1c1cc <__assert_fail@plt+0xaf5c>
   1c540:	nop			; (mov r0, r0)
   1c544:	sub	sp, fp, #4
   1c548:	pop	{fp, pc}
   1c54c:	push	{fp, lr}
   1c550:	add	fp, sp, #4
   1c554:	sub	sp, sp, #8
   1c558:	str	r0, [fp, #-8]
   1c55c:	str	r1, [fp, #-12]
   1c560:	mov	r3, #2
   1c564:	ldr	r2, [fp, #-12]
   1c568:	mov	r1, #0
   1c56c:	ldr	r0, [fp, #-8]
   1c570:	bl	1c1cc <__assert_fail@plt+0xaf5c>
   1c574:	nop			; (mov r0, r0)
   1c578:	sub	sp, fp, #4
   1c57c:	pop	{fp, pc}
   1c580:	push	{fp, lr}
   1c584:	add	fp, sp, #4
   1c588:	sub	sp, sp, #8
   1c58c:	str	r0, [fp, #-8]
   1c590:	ldr	r3, [fp, #-8]
   1c594:	ldr	r3, [r3, #4]
   1c598:	cmp	r3, #0
   1c59c:	bgt	1c5bc <__assert_fail@plt+0xb34c>
   1c5a0:	ldr	r3, [fp, #-8]
   1c5a4:	ldr	r3, [r3, #4]
   1c5a8:	cmp	r3, #0
   1c5ac:	moveq	r3, #1
   1c5b0:	movne	r3, #0
   1c5b4:	uxtb	r3, r3
   1c5b8:	b	1c5d0 <__assert_fail@plt+0xb360>
   1c5bc:	mov	r2, #2
   1c5c0:	ldr	r1, [fp, #-8]
   1c5c4:	mov	r0, #0
   1c5c8:	bl	1c4a8 <__assert_fail@plt+0xb238>
   1c5cc:	mov	r3, r0
   1c5d0:	mov	r0, r3
   1c5d4:	sub	sp, fp, #4
   1c5d8:	pop	{fp, pc}
   1c5dc:	push	{fp, lr}
   1c5e0:	add	fp, sp, #4
   1c5e4:	sub	sp, sp, #24
   1c5e8:	str	r0, [fp, #-24]	; 0xffffffe8
   1c5ec:	str	r1, [fp, #-28]	; 0xffffffe4
   1c5f0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c5f4:	cmp	r3, #0
   1c5f8:	bgt	1c610 <__assert_fail@plt+0xb3a0>
   1c5fc:	ldr	r3, [pc, #120]	; 1c67c <__assert_fail@plt+0xb40c>
   1c600:	ldr	r2, [pc, #120]	; 1c680 <__assert_fail@plt+0xb410>
   1c604:	ldr	r1, [pc, #120]	; 1c684 <__assert_fail@plt+0xb414>
   1c608:	ldr	r0, [pc, #120]	; 1c688 <__assert_fail@plt+0xb418>
   1c60c:	bl	11270 <__assert_fail@plt>
   1c610:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c614:	sub	r3, r3, #-1073741823	; 0xc0000001
   1c618:	lsl	r3, r3, #2
   1c61c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1c620:	add	r3, r2, r3
   1c624:	ldr	r3, [r3]
   1c628:	cmp	r3, #0
   1c62c:	bne	1c644 <__assert_fail@plt+0xb3d4>
   1c630:	ldr	r3, [pc, #68]	; 1c67c <__assert_fail@plt+0xb40c>
   1c634:	ldr	r2, [pc, #80]	; 1c68c <__assert_fail@plt+0xb41c>
   1c638:	ldr	r1, [pc, #68]	; 1c684 <__assert_fail@plt+0xb414>
   1c63c:	ldr	r0, [pc, #76]	; 1c690 <__assert_fail@plt+0xb420>
   1c640:	bl	11270 <__assert_fail@plt>
   1c644:	sub	r3, fp, #16
   1c648:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1c64c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c650:	mov	r0, r3
   1c654:	bl	18400 <__assert_fail@plt+0x7190>
   1c658:	mov	r3, r0
   1c65c:	mov	r2, #2
   1c660:	mov	r1, r3
   1c664:	mov	r0, #0
   1c668:	bl	1c4a8 <__assert_fail@plt+0xb238>
   1c66c:	mov	r3, r0
   1c670:	mov	r0, r3
   1c674:	sub	sp, fp, #4
   1c678:	pop	{fp, pc}
   1c67c:	andeq	r0, r4, r4, ror #28
   1c680:	andeq	r0, r0, r6, ror #25
   1c684:	andeq	r0, r4, r8, asr #12
   1c688:	andeq	r0, r4, r4, asr #13
   1c68c:	andeq	r0, r0, r7, ror #25
   1c690:	strdeq	r0, [r4], -r0	; <UNPREDICTABLE>
   1c694:	push	{fp, lr}
   1c698:	add	fp, sp, #4
   1c69c:	sub	sp, sp, #56	; 0x38
   1c6a0:	str	r0, [fp, #-48]	; 0xffffffd0
   1c6a4:	str	r1, [fp, #-52]	; 0xffffffcc
   1c6a8:	str	r2, [fp, #-56]	; 0xffffffc8
   1c6ac:	str	r3, [fp, #-60]	; 0xffffffc4
   1c6b0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1c6b4:	cmp	r3, #0
   1c6b8:	bgt	1c6d0 <__assert_fail@plt+0xb460>
   1c6bc:	ldr	r3, [pc, #280]	; 1c7dc <__assert_fail@plt+0xb56c>
   1c6c0:	ldr	r2, [pc, #280]	; 1c7e0 <__assert_fail@plt+0xb570>
   1c6c4:	ldr	r1, [pc, #280]	; 1c7e4 <__assert_fail@plt+0xb574>
   1c6c8:	ldr	r0, [pc, #280]	; 1c7e8 <__assert_fail@plt+0xb578>
   1c6cc:	bl	11270 <__assert_fail@plt>
   1c6d0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1c6d4:	sub	r3, r3, #-1073741823	; 0xc0000001
   1c6d8:	lsl	r3, r3, #2
   1c6dc:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1c6e0:	add	r3, r2, r3
   1c6e4:	ldr	r3, [r3]
   1c6e8:	cmp	r3, #0
   1c6ec:	bne	1c704 <__assert_fail@plt+0xb494>
   1c6f0:	ldr	r3, [pc, #228]	; 1c7dc <__assert_fail@plt+0xb56c>
   1c6f4:	ldr	r2, [pc, #240]	; 1c7ec <__assert_fail@plt+0xb57c>
   1c6f8:	ldr	r1, [pc, #228]	; 1c7e4 <__assert_fail@plt+0xb574>
   1c6fc:	ldr	r0, [pc, #236]	; 1c7f0 <__assert_fail@plt+0xb580>
   1c700:	bl	11270 <__assert_fail@plt>
   1c704:	sub	r3, fp, #32
   1c708:	mov	r0, r3
   1c70c:	bl	17a80 <__assert_fail@plt+0x6810>
   1c710:	sub	r3, fp, #20
   1c714:	mov	r0, r3
   1c718:	bl	17a80 <__assert_fail@plt+0x6810>
   1c71c:	sub	r3, fp, #44	; 0x2c
   1c720:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1c724:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1c728:	mov	r0, r3
   1c72c:	bl	18400 <__assert_fail@plt+0x7190>
   1c730:	mov	r2, r0
   1c734:	sub	r1, fp, #32
   1c738:	sub	r0, fp, #20
   1c73c:	mov	r3, #2
   1c740:	bl	1c1cc <__assert_fail@plt+0xaf5c>
   1c744:	ldr	r2, [fp, #-16]
   1c748:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1c74c:	add	r3, r3, #1
   1c750:	lsr	r1, r3, #31
   1c754:	add	r3, r1, r3
   1c758:	asr	r3, r3, #1
   1c75c:	cmp	r2, r3
   1c760:	beq	1c778 <__assert_fail@plt+0xb508>
   1c764:	ldr	r3, [pc, #112]	; 1c7dc <__assert_fail@plt+0xb56c>
   1c768:	ldr	r2, [pc, #132]	; 1c7f4 <__assert_fail@plt+0xb584>
   1c76c:	ldr	r1, [pc, #112]	; 1c7e4 <__assert_fail@plt+0xb574>
   1c770:	ldr	r0, [pc, #128]	; 1c7f8 <__assert_fail@plt+0xb588>
   1c774:	bl	11270 <__assert_fail@plt>
   1c778:	ldr	r3, [fp, #-12]
   1c77c:	ldr	r2, [fp, #-16]
   1c780:	mov	r1, r3
   1c784:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1c788:	bl	13a78 <__assert_fail@plt+0x2808>
   1c78c:	sub	r3, fp, #20
   1c790:	mov	r0, r3
   1c794:	bl	17b48 <__assert_fail@plt+0x68d8>
   1c798:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c79c:	str	r3, [fp, #-8]
   1c7a0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1c7a4:	cmp	r3, #0
   1c7a8:	beq	1c7c0 <__assert_fail@plt+0xb550>
   1c7ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1c7b0:	ldr	r2, [fp, #-8]
   1c7b4:	mov	r1, r3
   1c7b8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1c7bc:	bl	13a78 <__assert_fail@plt+0x2808>
   1c7c0:	sub	r3, fp, #32
   1c7c4:	mov	r0, r3
   1c7c8:	bl	17b48 <__assert_fail@plt+0x68d8>
   1c7cc:	ldr	r3, [fp, #-8]
   1c7d0:	mov	r0, r3
   1c7d4:	sub	sp, fp, #4
   1c7d8:	pop	{fp, pc}
   1c7dc:	andeq	r0, r4, ip, ror lr
   1c7e0:	strdeq	r0, [r0], -r1
   1c7e4:	andeq	r0, r4, r8, asr #12
   1c7e8:	andeq	r0, r4, r4, asr #13
   1c7ec:	strdeq	r0, [r0], -r2
   1c7f0:	strdeq	r0, [r4], -r0	; <UNPREDICTABLE>
   1c7f4:	strdeq	r0, [r0], -r8
   1c7f8:	andeq	r0, r4, r0, lsl #20
   1c7fc:	push	{fp, lr}
   1c800:	add	fp, sp, #4
   1c804:	sub	sp, sp, #16
   1c808:	str	r0, [fp, #-8]
   1c80c:	str	r1, [fp, #-12]
   1c810:	str	r2, [fp, #-16]
   1c814:	ldr	r3, [fp, #-12]
   1c818:	cmp	r3, #0
   1c81c:	moveq	r3, #1
   1c820:	movne	r3, #0
   1c824:	uxtb	r3, r3
   1c828:	mov	r2, r3
   1c82c:	ldr	r3, [fp, #-12]
   1c830:	add	r3, r2, r3
   1c834:	mov	r1, r3
   1c838:	ldr	r0, [fp, #-8]
   1c83c:	bl	17cd4 <__assert_fail@plt+0x6a64>
   1c840:	ldr	r3, [fp, #-16]
   1c844:	add	r3, r3, #1
   1c848:	cmp	r3, #1
   1c84c:	bls	1c88c <__assert_fail@plt+0xb61c>
   1c850:	b	1c874 <__assert_fail@plt+0xb604>
   1c854:	ldr	r2, [fp, #-12]
   1c858:	ldr	r3, [fp, #-16]
   1c85c:	sub	r3, r2, r3
   1c860:	str	r3, [fp, #-12]
   1c864:	ldr	r2, [fp, #-12]
   1c868:	ldr	r1, [fp, #-8]
   1c86c:	ldr	r0, [fp, #-8]
   1c870:	bl	194d4 <__assert_fail@plt+0x8264>
   1c874:	ldr	r3, [fp, #-16]
   1c878:	add	r2, r3, #1
   1c87c:	ldr	r3, [fp, #-12]
   1c880:	cmp	r2, r3
   1c884:	bcc	1c854 <__assert_fail@plt+0xb5e4>
   1c888:	b	1c890 <__assert_fail@plt+0xb620>
   1c88c:	nop			; (mov r0, r0)
   1c890:	sub	sp, fp, #4
   1c894:	pop	{fp, pc}
   1c898:	push	{fp, lr}
   1c89c:	add	fp, sp, #4
   1c8a0:	sub	sp, sp, #8
   1c8a4:	str	r0, [fp, #-8]
   1c8a8:	str	r1, [fp, #-12]
   1c8ac:	mov	r2, #2
   1c8b0:	ldr	r1, [fp, #-12]
   1c8b4:	ldr	r0, [fp, #-8]
   1c8b8:	bl	1c7fc <__assert_fail@plt+0xb58c>
   1c8bc:	nop			; (mov r0, r0)
   1c8c0:	sub	sp, fp, #4
   1c8c4:	pop	{fp, pc}
   1c8c8:	push	{fp, lr}
   1c8cc:	add	fp, sp, #4
   1c8d0:	sub	sp, sp, #8
   1c8d4:	str	r0, [fp, #-8]
   1c8d8:	str	r1, [fp, #-12]
   1c8dc:	mov	r2, #1
   1c8e0:	ldr	r1, [fp, #-12]
   1c8e4:	ldr	r0, [fp, #-8]
   1c8e8:	bl	1c7fc <__assert_fail@plt+0xb58c>
   1c8ec:	nop			; (mov r0, r0)
   1c8f0:	sub	sp, fp, #4
   1c8f4:	pop	{fp, pc}
   1c8f8:	push	{fp, lr}
   1c8fc:	add	fp, sp, #4
   1c900:	sub	sp, sp, #32
   1c904:	str	r0, [fp, #-24]	; 0xffffffe8
   1c908:	str	r1, [fp, #-28]	; 0xffffffe4
   1c90c:	str	r2, [fp, #-32]	; 0xffffffe0
   1c910:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1c914:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c918:	cmp	r2, r3
   1c91c:	movls	r3, #1
   1c920:	movhi	r3, #0
   1c924:	uxtb	r3, r3
   1c928:	mov	r1, r3
   1c92c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c930:	bl	17cd4 <__assert_fail@plt+0x6a64>
   1c934:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c938:	lsr	r2, r3, #1
   1c93c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c940:	cmp	r2, r3
   1c944:	bcs	1c970 <__assert_fail@plt+0xb700>
   1c948:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1c94c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c950:	cmp	r2, r3
   1c954:	bhi	1c968 <__assert_fail@plt+0xb6f8>
   1c958:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1c95c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c960:	sub	r3, r2, r3
   1c964:	b	1c96c <__assert_fail@plt+0xb6fc>
   1c968:	mov	r3, #0
   1c96c:	str	r3, [fp, #-32]	; 0xffffffe0
   1c970:	sub	r3, fp, #16
   1c974:	mov	r0, r3
   1c978:	bl	17a80 <__assert_fail@plt+0x6810>
   1c97c:	sub	r3, fp, #16
   1c980:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1c984:	mov	r0, r3
   1c988:	bl	1c8c8 <__assert_fail@plt+0xb658>
   1c98c:	b	1c9b8 <__assert_fail@plt+0xb748>
   1c990:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1c994:	sub	r2, r3, #1
   1c998:	str	r2, [fp, #-28]	; 0xffffffe4
   1c99c:	mov	r2, r3
   1c9a0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c9a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c9a8:	bl	194d4 <__assert_fail@plt+0x8264>
   1c9ac:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c9b0:	sub	r3, r3, #1
   1c9b4:	str	r3, [fp, #-32]	; 0xffffffe0
   1c9b8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1c9bc:	cmp	r3, #0
   1c9c0:	bne	1c990 <__assert_fail@plt+0xb720>
   1c9c4:	sub	r3, fp, #16
   1c9c8:	mov	r2, r3
   1c9cc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1c9d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1c9d4:	bl	1a758 <__assert_fail@plt+0x94e8>
   1c9d8:	sub	r3, fp, #16
   1c9dc:	mov	r0, r3
   1c9e0:	bl	17b48 <__assert_fail@plt+0x68d8>
   1c9e4:	nop			; (mov r0, r0)
   1c9e8:	sub	sp, fp, #4
   1c9ec:	pop	{fp, pc}
   1c9f0:	push	{fp, lr}
   1c9f4:	add	fp, sp, #4
   1c9f8:	sub	sp, sp, #56	; 0x38
   1c9fc:	str	r0, [fp, #-56]	; 0xffffffc8
   1ca00:	str	r1, [fp, #-60]	; 0xffffffc4
   1ca04:	mov	r3, #0
   1ca08:	str	r3, [fp, #-12]
   1ca0c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1ca10:	and	r3, r3, #1
   1ca14:	cmp	r3, #0
   1ca18:	bne	1ca30 <__assert_fail@plt+0xb7c0>
   1ca1c:	ldr	r3, [pc, #660]	; 1ccb8 <__assert_fail@plt+0xba48>
   1ca20:	ldr	r2, [pc, #660]	; 1ccbc <__assert_fail@plt+0xba4c>
   1ca24:	ldr	r1, [pc, #660]	; 1ccc0 <__assert_fail@plt+0xba50>
   1ca28:	ldr	r0, [pc, #660]	; 1ccc4 <__assert_fail@plt+0xba54>
   1ca2c:	bl	11270 <__assert_fail@plt>
   1ca30:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1ca34:	cmp	r3, #0
   1ca38:	bne	1ca50 <__assert_fail@plt+0xb7e0>
   1ca3c:	ldr	r3, [pc, #628]	; 1ccb8 <__assert_fail@plt+0xba48>
   1ca40:	ldr	r2, [pc, #640]	; 1ccc8 <__assert_fail@plt+0xba58>
   1ca44:	ldr	r1, [pc, #628]	; 1ccc0 <__assert_fail@plt+0xba50>
   1ca48:	ldr	r0, [pc, #636]	; 1cccc <__assert_fail@plt+0xba5c>
   1ca4c:	bl	11270 <__assert_fail@plt>
   1ca50:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1ca54:	lsr	r3, r3, #1
   1ca58:	str	r3, [fp, #-60]	; 0xffffffc4
   1ca5c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1ca60:	str	r3, [fp, #-32]	; 0xffffffe0
   1ca64:	mov	r3, #0
   1ca68:	str	r3, [fp, #-36]	; 0xffffffdc
   1ca6c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1ca70:	rsb	r2, r3, #0
   1ca74:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1ca78:	and	r3, r3, r2
   1ca7c:	str	r3, [fp, #-16]
   1ca80:	mov	r3, #0
   1ca84:	str	r3, [fp, #-20]	; 0xffffffec
   1ca88:	mov	r3, #8
   1ca8c:	str	r3, [fp, #-40]	; 0xffffffd8
   1ca90:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1ca94:	cmp	r3, #31
   1ca98:	bhi	1cae8 <__assert_fail@plt+0xb878>
   1ca9c:	b	1cabc <__assert_fail@plt+0xb84c>
   1caa0:	ldr	r2, [fp, #-16]
   1caa4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1caa8:	lsl	r3, r2, r3
   1caac:	str	r3, [fp, #-16]
   1cab0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1cab4:	add	r3, r3, #8
   1cab8:	str	r3, [fp, #-20]	; 0xffffffec
   1cabc:	ldr	r3, [fp, #-16]
   1cac0:	and	r3, r3, #-16777216	; 0xff000000
   1cac4:	cmp	r3, #0
   1cac8:	beq	1caa0 <__assert_fail@plt+0xb830>
   1cacc:	b	1cae8 <__assert_fail@plt+0xb878>
   1cad0:	ldr	r3, [fp, #-16]
   1cad4:	lsl	r3, r3, #1
   1cad8:	str	r3, [fp, #-16]
   1cadc:	ldr	r3, [fp, #-20]	; 0xffffffec
   1cae0:	add	r3, r3, #1
   1cae4:	str	r3, [fp, #-20]	; 0xffffffec
   1cae8:	ldr	r3, [fp, #-16]
   1caec:	cmp	r3, #0
   1caf0:	bge	1cad0 <__assert_fail@plt+0xb860>
   1caf4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1caf8:	str	r3, [fp, #-36]	; 0xffffffdc
   1cafc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1cb00:	rsb	r3, r3, #31
   1cb04:	str	r3, [fp, #-8]
   1cb08:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1cb0c:	lsr	r3, r3, #1
   1cb10:	str	r3, [fp, #-56]	; 0xffffffc8
   1cb14:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1cb18:	ldr	r3, [fp, #-8]
   1cb1c:	lsr	r3, r2, r3
   1cb20:	str	r3, [fp, #-56]	; 0xffffffc8
   1cb24:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1cb28:	lsr	r2, r3, #1
   1cb2c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1cb30:	eor	r2, r2, r3
   1cb34:	ldr	r3, [fp, #-8]
   1cb38:	and	r2, r2, r3
   1cb3c:	ldr	r3, [fp, #-12]
   1cb40:	eor	r3, r3, r2
   1cb44:	str	r3, [fp, #-12]
   1cb48:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1cb4c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1cb50:	cmp	r2, r3
   1cb54:	bcs	1cbc0 <__assert_fail@plt+0xb950>
   1cb58:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1cb5c:	cmp	r3, #0
   1cb60:	bne	1cb84 <__assert_fail@plt+0xb914>
   1cb64:	ldr	r3, [fp, #-12]
   1cb68:	and	r3, r3, #1
   1cb6c:	cmp	r3, #0
   1cb70:	beq	1cb7c <__assert_fail@plt+0xb90c>
   1cb74:	mvn	r3, #0
   1cb78:	b	1ccac <__assert_fail@plt+0xba3c>
   1cb7c:	mov	r3, #1
   1cb80:	b	1ccac <__assert_fail@plt+0xba3c>
   1cb84:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1cb88:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1cb8c:	and	r2, r2, r3
   1cb90:	ldr	r3, [fp, #-12]
   1cb94:	eor	r3, r3, r2
   1cb98:	str	r3, [fp, #-12]
   1cb9c:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1cba0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1cba4:	sub	r3, r2, r3
   1cba8:	str	r3, [fp, #-56]	; 0xffffffc8
   1cbac:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1cbb0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1cbb4:	sub	r3, r2, r3
   1cbb8:	str	r3, [fp, #-60]	; 0xffffffc4
   1cbbc:	b	1cbf0 <__assert_fail@plt+0xb980>
   1cbc0:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1cbc4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1cbc8:	sub	r3, r2, r3
   1cbcc:	str	r3, [fp, #-56]	; 0xffffffc8
   1cbd0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1cbd4:	cmp	r3, #0
   1cbd8:	bne	1cbf0 <__assert_fail@plt+0xb980>
   1cbdc:	ldr	r3, [pc, #212]	; 1ccb8 <__assert_fail@plt+0xba48>
   1cbe0:	ldr	r2, [pc, #232]	; 1ccd0 <__assert_fail@plt+0xba60>
   1cbe4:	ldr	r1, [pc, #212]	; 1ccc0 <__assert_fail@plt+0xba50>
   1cbe8:	ldr	r0, [pc, #220]	; 1cccc <__assert_fail@plt+0xba5c>
   1cbec:	bl	11270 <__assert_fail@plt>
   1cbf0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1cbf4:	str	r3, [fp, #-44]	; 0xffffffd4
   1cbf8:	mov	r3, #0
   1cbfc:	str	r3, [fp, #-48]	; 0xffffffd0
   1cc00:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1cc04:	rsb	r2, r3, #0
   1cc08:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1cc0c:	and	r3, r3, r2
   1cc10:	str	r3, [fp, #-24]	; 0xffffffe8
   1cc14:	mov	r3, #0
   1cc18:	str	r3, [fp, #-28]	; 0xffffffe4
   1cc1c:	mov	r3, #8
   1cc20:	str	r3, [fp, #-52]	; 0xffffffcc
   1cc24:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1cc28:	cmp	r3, #31
   1cc2c:	bhi	1cc7c <__assert_fail@plt+0xba0c>
   1cc30:	b	1cc50 <__assert_fail@plt+0xb9e0>
   1cc34:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1cc38:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1cc3c:	lsl	r3, r2, r3
   1cc40:	str	r3, [fp, #-24]	; 0xffffffe8
   1cc44:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1cc48:	add	r3, r3, #8
   1cc4c:	str	r3, [fp, #-28]	; 0xffffffe4
   1cc50:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1cc54:	and	r3, r3, #-16777216	; 0xff000000
   1cc58:	cmp	r3, #0
   1cc5c:	beq	1cc34 <__assert_fail@plt+0xb9c4>
   1cc60:	b	1cc7c <__assert_fail@plt+0xba0c>
   1cc64:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1cc68:	lsl	r3, r3, #1
   1cc6c:	str	r3, [fp, #-24]	; 0xffffffe8
   1cc70:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1cc74:	add	r3, r3, #1
   1cc78:	str	r3, [fp, #-28]	; 0xffffffe4
   1cc7c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1cc80:	cmp	r3, #0
   1cc84:	bge	1cc64 <__assert_fail@plt+0xb9f4>
   1cc88:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1cc8c:	str	r3, [fp, #-48]	; 0xffffffd0
   1cc90:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1cc94:	rsb	r3, r3, #31
   1cc98:	str	r3, [fp, #-8]
   1cc9c:	ldr	r3, [fp, #-8]
   1cca0:	add	r3, r3, #1
   1cca4:	str	r3, [fp, #-8]
   1cca8:	b	1cb14 <__assert_fail@plt+0xb8a4>
   1ccac:	mov	r0, r3
   1ccb0:	sub	sp, fp, #4
   1ccb4:	pop	{fp, pc}
   1ccb8:	andeq	r0, r4, r8, lsl #29
   1ccbc:	andeq	r0, r0, r7, lsr sp
   1ccc0:	andeq	r0, r4, r8, asr #12
   1ccc4:	andeq	r0, r4, r8, lsl sl
   1ccc8:	andeq	r0, r0, r8, lsr sp
   1cccc:	andeq	r0, r4, r0, lsr #20
   1ccd0:	andeq	r0, r0, r2, asr sp
   1ccd4:	push	{fp, lr}
   1ccd8:	add	fp, sp, #4
   1ccdc:	sub	sp, sp, #16
   1cce0:	str	r0, [fp, #-8]
   1cce4:	str	r1, [fp, #-12]
   1cce8:	str	r2, [fp, #-16]
   1ccec:	ldr	r2, [fp, #-16]
   1ccf0:	ldr	r1, [fp, #-12]
   1ccf4:	ldr	r0, [fp, #-12]
   1ccf8:	bl	1a048 <__assert_fail@plt+0x8dd8>
   1ccfc:	ldr	r2, [fp, #-8]
   1cd00:	ldr	r1, [fp, #-8]
   1cd04:	ldr	r0, [fp, #-8]
   1cd08:	bl	19528 <__assert_fail@plt+0x82b8>
   1cd0c:	mov	r2, #2
   1cd10:	ldr	r1, [fp, #-12]
   1cd14:	ldr	r0, [fp, #-8]
   1cd18:	bl	198cc <__assert_fail@plt+0x865c>
   1cd1c:	ldr	r2, [fp, #-16]
   1cd20:	ldr	r1, [fp, #-8]
   1cd24:	ldr	r0, [fp, #-8]
   1cd28:	bl	1a008 <__assert_fail@plt+0x8d98>
   1cd2c:	ldr	r2, [fp, #-12]
   1cd30:	ldr	r1, [fp, #-12]
   1cd34:	ldr	r0, [fp, #-12]
   1cd38:	bl	19528 <__assert_fail@plt+0x82b8>
   1cd3c:	nop			; (mov r0, r0)
   1cd40:	sub	sp, fp, #4
   1cd44:	pop	{fp, pc}
   1cd48:	push	{fp, lr}
   1cd4c:	add	fp, sp, #4
   1cd50:	sub	sp, sp, #40	; 0x28
   1cd54:	str	r0, [fp, #-32]	; 0xffffffe0
   1cd58:	str	r1, [fp, #-36]	; 0xffffffdc
   1cd5c:	str	r2, [fp, #-40]	; 0xffffffd8
   1cd60:	str	r3, [fp, #-44]	; 0xffffffd4
   1cd64:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1cd68:	cmp	r3, #0
   1cd6c:	bne	1cd84 <__assert_fail@plt+0xbb14>
   1cd70:	ldr	r3, [pc, #644]	; 1cffc <__assert_fail@plt+0xbd8c>
   1cd74:	ldr	r2, [pc, #644]	; 1d000 <__assert_fail@plt+0xbd90>
   1cd78:	ldr	r1, [pc, #644]	; 1d004 <__assert_fail@plt+0xbd94>
   1cd7c:	ldr	r0, [pc, #644]	; 1d008 <__assert_fail@plt+0xbd98>
   1cd80:	bl	11270 <__assert_fail@plt>
   1cd84:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1cd88:	cmp	r3, #1073741824	; 0x40000000
   1cd8c:	ble	1cda4 <__assert_fail@plt+0xbb34>
   1cd90:	ldr	r3, [pc, #612]	; 1cffc <__assert_fail@plt+0xbd8c>
   1cd94:	ldr	r2, [pc, #624]	; 1d00c <__assert_fail@plt+0xbd9c>
   1cd98:	ldr	r1, [pc, #612]	; 1d004 <__assert_fail@plt+0xbd94>
   1cd9c:	ldr	r0, [pc, #620]	; 1d010 <__assert_fail@plt+0xbda0>
   1cda0:	bl	11270 <__assert_fail@plt>
   1cda4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1cda8:	cmp	r3, #-1073741823	; 0xc0000001
   1cdac:	bge	1cdc4 <__assert_fail@plt+0xbb54>
   1cdb0:	ldr	r3, [pc, #580]	; 1cffc <__assert_fail@plt+0xbd8c>
   1cdb4:	ldr	r2, [pc, #600]	; 1d014 <__assert_fail@plt+0xbda4>
   1cdb8:	ldr	r1, [pc, #580]	; 1d004 <__assert_fail@plt+0xbd94>
   1cdbc:	ldr	r0, [pc, #596]	; 1d018 <__assert_fail@plt+0xbda8>
   1cdc0:	bl	11270 <__assert_fail@plt>
   1cdc4:	mov	r1, #4
   1cdc8:	ldr	r0, [fp, #4]
   1cdcc:	bl	18c64 <__assert_fail@plt+0x79f4>
   1cdd0:	mov	r3, r0
   1cdd4:	cmp	r3, #0
   1cdd8:	bgt	1cdf0 <__assert_fail@plt+0xbb80>
   1cddc:	ldr	r3, [pc, #536]	; 1cffc <__assert_fail@plt+0xbd8c>
   1cde0:	ldr	r2, [pc, #564]	; 1d01c <__assert_fail@plt+0xbdac>
   1cde4:	ldr	r1, [pc, #536]	; 1d004 <__assert_fail@plt+0xbd94>
   1cde8:	ldr	r0, [pc, #560]	; 1d020 <__assert_fail@plt+0xbdb0>
   1cdec:	bl	11270 <__assert_fail@plt>
   1cdf0:	ldr	r3, [fp, #4]
   1cdf4:	ldr	r3, [r3, #4]
   1cdf8:	cmp	r3, #0
   1cdfc:	movne	r3, #1
   1ce00:	moveq	r3, #0
   1ce04:	uxtb	r3, r3
   1ce08:	mov	r2, r3
   1ce0c:	ldr	r3, [fp, #4]
   1ce10:	ldr	r3, [r3, #8]
   1ce14:	ldr	r3, [r3]
   1ce18:	and	r3, r3, r2
   1ce1c:	cmp	r3, #0
   1ce20:	bne	1ce38 <__assert_fail@plt+0xbbc8>
   1ce24:	ldr	r3, [pc, #464]	; 1cffc <__assert_fail@plt+0xbd8c>
   1ce28:	ldr	r2, [pc, #500]	; 1d024 <__assert_fail@plt+0xbdb4>
   1ce2c:	ldr	r1, [pc, #464]	; 1d004 <__assert_fail@plt+0xbd94>
   1ce30:	ldr	r0, [pc, #496]	; 1d028 <__assert_fail@plt+0xbdb8>
   1ce34:	bl	11270 <__assert_fail@plt>
   1ce38:	sub	r3, fp, #24
   1ce3c:	mov	r1, #1
   1ce40:	mov	r0, r3
   1ce44:	bl	17e24 <__assert_fail@plt+0x6bb4>
   1ce48:	mov	r1, #1
   1ce4c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1ce50:	bl	17cd4 <__assert_fail@plt+0x6a64>
   1ce54:	ldr	r1, [fp, #-40]	; 0xffffffd8
   1ce58:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1ce5c:	bl	17c50 <__assert_fail@plt+0x69e0>
   1ce60:	mov	r1, #2
   1ce64:	ldr	r0, [fp, #4]
   1ce68:	bl	1ee28 <__assert_fail@plt+0xdbb8>
   1ce6c:	mov	r3, r0
   1ce70:	sub	r3, r3, #1
   1ce74:	str	r3, [fp, #-8]
   1ce78:	b	1cfac <__assert_fail@plt+0xbd3c>
   1ce7c:	sub	r1, fp, #24
   1ce80:	sub	r3, fp, #24
   1ce84:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1ce88:	mov	r0, r3
   1ce8c:	bl	19528 <__assert_fail@plt+0x82b8>
   1ce90:	ldr	r2, [fp, #4]
   1ce94:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1ce98:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1ce9c:	bl	1ccd4 <__assert_fail@plt+0xba64>
   1cea0:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1cea4:	ldr	r3, [fp, #-8]
   1cea8:	cmp	r2, r3
   1ceac:	beq	1cec8 <__assert_fail@plt+0xbc58>
   1ceb0:	ldr	r1, [fp, #-8]
   1ceb4:	ldr	r0, [fp, #4]
   1ceb8:	bl	1d688 <__assert_fail@plt+0xc418>
   1cebc:	mov	r3, r0
   1cec0:	cmp	r3, #0
   1cec4:	beq	1cf98 <__assert_fail@plt+0xbd28>
   1cec8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1cecc:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1ced0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1ced4:	bl	19468 <__assert_fail@plt+0x81f8>
   1ced8:	sub	r3, fp, #24
   1cedc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1cee0:	mov	r0, r3
   1cee4:	bl	18eec <__assert_fail@plt+0x7c7c>
   1cee8:	sub	r1, fp, #24
   1ceec:	sub	r3, fp, #24
   1cef0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1cef4:	mov	r0, r3
   1cef8:	bl	19340 <__assert_fail@plt+0x80d0>
   1cefc:	ldr	r3, [fp, #-20]	; 0xffffffec
   1cf00:	cmp	r3, #0
   1cf04:	movne	r3, #1
   1cf08:	moveq	r3, #0
   1cf0c:	uxtb	r3, r3
   1cf10:	mov	r2, r3
   1cf14:	ldr	r3, [fp, #-16]
   1cf18:	ldr	r3, [r3]
   1cf1c:	and	r3, r3, r2
   1cf20:	cmp	r3, #0
   1cf24:	beq	1cf3c <__assert_fail@plt+0xbccc>
   1cf28:	sub	r1, fp, #24
   1cf2c:	sub	r3, fp, #24
   1cf30:	ldr	r2, [fp, #4]
   1cf34:	mov	r0, r3
   1cf38:	bl	19340 <__assert_fail@plt+0x80d0>
   1cf3c:	sub	r1, fp, #24
   1cf40:	sub	r3, fp, #24
   1cf44:	mov	r2, #1
   1cf48:	mov	r0, r3
   1cf4c:	bl	1a678 <__assert_fail@plt+0x9408>
   1cf50:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1cf54:	mov	r3, r2
   1cf58:	lsl	r3, r3, #31
   1cf5c:	sub	r3, r3, r2
   1cf60:	lsl	r3, r3, #1
   1cf64:	mov	r2, r3
   1cf68:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1cf6c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1cf70:	bl	19468 <__assert_fail@plt+0x81f8>
   1cf74:	sub	r3, fp, #24
   1cf78:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1cf7c:	mov	r1, r3
   1cf80:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1cf84:	bl	19340 <__assert_fail@plt+0x80d0>
   1cf88:	ldr	r2, [fp, #4]
   1cf8c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1cf90:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1cf94:	bl	1a008 <__assert_fail@plt+0x8d98>
   1cf98:	sub	r1, fp, #24
   1cf9c:	sub	r3, fp, #24
   1cfa0:	ldr	r2, [fp, #4]
   1cfa4:	mov	r0, r3
   1cfa8:	bl	1a008 <__assert_fail@plt+0x8d98>
   1cfac:	ldr	r3, [fp, #-8]
   1cfb0:	sub	r3, r3, #1
   1cfb4:	str	r3, [fp, #-8]
   1cfb8:	ldr	r2, [fp, #-8]
   1cfbc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1cfc0:	cmp	r2, r3
   1cfc4:	bcs	1ce7c <__assert_fail@plt+0xbc0c>
   1cfc8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1cfcc:	cmp	r3, #0
   1cfd0:	moveq	r3, #1
   1cfd4:	movne	r3, #0
   1cfd8:	uxtb	r3, r3
   1cfdc:	str	r3, [fp, #-12]
   1cfe0:	sub	r3, fp, #24
   1cfe4:	mov	r0, r3
   1cfe8:	bl	17b48 <__assert_fail@plt+0x68d8>
   1cfec:	ldr	r3, [fp, #-12]
   1cff0:	mov	r0, r3
   1cff4:	sub	sp, fp, #4
   1cff8:	pop	{fp, pc}
   1cffc:	muleq	r4, ip, lr
   1d000:	andeq	r0, r0, r2, ror sp
   1d004:	andeq	r0, r4, r8, asr #12
   1d008:	andeq	r0, r4, r8, lsr #20
   1d00c:	andeq	r0, r0, r3, ror sp
   1d010:	andeq	r0, r4, r0, lsr sl
   1d014:	andeq	r0, r0, r4, ror sp
   1d018:	andeq	r0, r4, r8, asr #20
   1d01c:	andeq	r0, r0, r5, ror sp
   1d020:	andeq	r0, r4, r0, ror #20
   1d024:	andeq	r0, r0, r6, ror sp
   1d028:	andeq	r0, r4, r8, ror sl
   1d02c:	push	{fp, lr}
   1d030:	add	fp, sp, #4
   1d034:	sub	sp, sp, #64	; 0x40
   1d038:	str	r0, [fp, #-56]	; 0xffffffc8
   1d03c:	str	r1, [fp, #-60]	; 0xffffffc4
   1d040:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1d044:	ldr	r1, [r3, #8]
   1d048:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1d04c:	ldr	r3, [r3, #4]
   1d050:	eor	r2, r3, r3, asr #31
   1d054:	sub	r2, r2, r3, asr #31
   1d058:	sub	r3, fp, #48	; 0x30
   1d05c:	mov	r0, r3
   1d060:	bl	18400 <__assert_fail@plt+0x7190>
   1d064:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1d068:	cmp	r3, #0
   1d06c:	movne	r3, #1
   1d070:	moveq	r3, #0
   1d074:	uxtb	r3, r3
   1d078:	mov	r2, r3
   1d07c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1d080:	ldr	r3, [r3]
   1d084:	and	r3, r3, r2
   1d088:	cmp	r3, #0
   1d08c:	bne	1d0a4 <__assert_fail@plt+0xbe34>
   1d090:	ldr	r3, [pc, #472]	; 1d270 <__assert_fail@plt+0xc000>
   1d094:	mov	r2, #3504	; 0xdb0
   1d098:	ldr	r1, [pc, #468]	; 1d274 <__assert_fail@plt+0xc004>
   1d09c:	ldr	r0, [pc, #468]	; 1d278 <__assert_fail@plt+0xc008>
   1d0a0:	bl	11270 <__assert_fail@plt>
   1d0a4:	sub	r3, fp, #48	; 0x30
   1d0a8:	mov	r2, #2
   1d0ac:	mov	r1, r3
   1d0b0:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1d0b4:	bl	1c4a8 <__assert_fail@plt+0xb238>
   1d0b8:	mov	r3, r0
   1d0bc:	cmp	r3, #0
   1d0c0:	beq	1d0cc <__assert_fail@plt+0xbe5c>
   1d0c4:	mov	r3, #0
   1d0c8:	b	1d264 <__assert_fail@plt+0xbff4>
   1d0cc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1d0d0:	ldr	r3, [r3, #4]
   1d0d4:	cmp	r3, #1
   1d0d8:	bne	1d0f0 <__assert_fail@plt+0xbe80>
   1d0dc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1d0e0:	ldr	r3, [r3, #8]
   1d0e4:	ldr	r3, [r3]
   1d0e8:	sub	r3, r3, #1
   1d0ec:	b	1d0f4 <__assert_fail@plt+0xbe84>
   1d0f0:	mvn	r3, #0
   1d0f4:	str	r3, [fp, #-16]
   1d0f8:	mov	r3, #3
   1d0fc:	str	r3, [fp, #-12]
   1d100:	ldr	r2, [fp, #-12]
   1d104:	ldr	r3, [fp, #-16]
   1d108:	cmp	r2, r3
   1d10c:	bcc	1d12c <__assert_fail@plt+0xbebc>
   1d110:	ldr	r3, [fp, #-12]
   1d114:	cmn	r3, #1
   1d118:	beq	1d124 <__assert_fail@plt+0xbeb4>
   1d11c:	mov	r3, #2
   1d120:	b	1d264 <__assert_fail@plt+0xbff4>
   1d124:	mov	r3, #1
   1d128:	b	1d264 <__assert_fail@plt+0xbff4>
   1d12c:	ldr	r3, [fp, #-12]
   1d130:	add	r3, r3, #2
   1d134:	str	r3, [fp, #-12]
   1d138:	sub	r3, fp, #48	; 0x30
   1d13c:	ldr	r1, [fp, #-12]
   1d140:	mov	r0, r3
   1d144:	bl	1ac5c <__assert_fail@plt+0x99ec>
   1d148:	str	r0, [fp, #-20]	; 0xffffffec
   1d14c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d150:	cmp	r3, #0
   1d154:	bne	1d160 <__assert_fail@plt+0xbef0>
   1d158:	mov	r3, #0
   1d15c:	b	1d264 <__assert_fail@plt+0xbff4>
   1d160:	ldr	r1, [fp, #-12]
   1d164:	ldr	r0, [fp, #-20]	; 0xffffffec
   1d168:	bl	1c9f0 <__assert_fail@plt+0xb780>
   1d16c:	mov	r3, r0
   1d170:	cmp	r3, #1
   1d174:	beq	1d100 <__assert_fail@plt+0xbe90>
   1d178:	sub	r3, fp, #36	; 0x24
   1d17c:	mov	r0, r3
   1d180:	bl	17a80 <__assert_fail@plt+0x6810>
   1d184:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1d188:	ldr	r3, [r3]
   1d18c:	mvn	r0, r3
   1d190:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1d194:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1d198:	mvn	r3, #0
   1d19c:	str	r3, [sp]
   1d1a0:	mov	r3, r1
   1d1a4:	mov	r1, #0
   1d1a8:	bl	14d88 <__assert_fail@plt+0x3b18>
   1d1ac:	str	r0, [fp, #-8]
   1d1b0:	ldr	r3, [fp, #-12]
   1d1b4:	and	r3, r3, #2
   1d1b8:	cmp	r3, #0
   1d1bc:	beq	1d1d0 <__assert_fail@plt+0xbf60>
   1d1c0:	ldr	r3, [fp, #-12]
   1d1c4:	lsr	r3, r3, #2
   1d1c8:	add	r3, r3, #1
   1d1cc:	b	1d1dc <__assert_fail@plt+0xbf6c>
   1d1d0:	ldr	r3, [fp, #-12]
   1d1d4:	lsr	r3, r3, #2
   1d1d8:	rsb	r3, r3, #0
   1d1dc:	str	r3, [fp, #-24]	; 0xffffffe8
   1d1e0:	sub	r0, fp, #36	; 0x24
   1d1e4:	sub	r3, fp, #48	; 0x30
   1d1e8:	str	r3, [sp]
   1d1ec:	ldr	r3, [fp, #-8]
   1d1f0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1d1f4:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1d1f8:	bl	1cd48 <__assert_fail@plt+0xbad8>
   1d1fc:	mov	r3, r0
   1d200:	cmp	r3, #0
   1d204:	bne	1d244 <__assert_fail@plt+0xbfd4>
   1d208:	b	1d220 <__assert_fail@plt+0xbfb0>
   1d20c:	sub	r2, fp, #48	; 0x30
   1d210:	sub	r3, fp, #36	; 0x24
   1d214:	ldr	r1, [fp, #-60]	; 0xffffffc4
   1d218:	mov	r0, r3
   1d21c:	bl	1ccd4 <__assert_fail@plt+0xba64>
   1d220:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d224:	cmp	r3, #0
   1d228:	beq	1d244 <__assert_fail@plt+0xbfd4>
   1d22c:	ldr	r3, [fp, #-8]
   1d230:	sub	r3, r3, #1
   1d234:	str	r3, [fp, #-8]
   1d238:	ldr	r3, [fp, #-8]
   1d23c:	cmp	r3, #0
   1d240:	bne	1d20c <__assert_fail@plt+0xbf9c>
   1d244:	sub	r3, fp, #36	; 0x24
   1d248:	mov	r0, r3
   1d24c:	bl	17b48 <__assert_fail@plt+0x68d8>
   1d250:	ldr	r3, [fp, #-8]
   1d254:	cmp	r3, #0
   1d258:	movne	r3, #1
   1d25c:	moveq	r3, #0
   1d260:	uxtb	r3, r3
   1d264:	mov	r0, r3
   1d268:	sub	sp, fp, #4
   1d26c:	pop	{fp, pc}
   1d270:	andeq	r0, r4, ip, lsr #29
   1d274:	andeq	r0, r4, r8, asr #12
   1d278:	andeq	r0, r4, r8, ror sl
   1d27c:	push	{fp, lr}
   1d280:	add	fp, sp, #4
   1d284:	sub	sp, sp, #16
   1d288:	str	r0, [fp, #-8]
   1d28c:	str	r1, [fp, #-12]
   1d290:	str	r2, [fp, #-16]
   1d294:	str	r3, [fp, #-20]	; 0xffffffec
   1d298:	ldr	r3, [fp, #4]
   1d29c:	cmp	r3, #0
   1d2a0:	bne	1d2b8 <__assert_fail@plt+0xc048>
   1d2a4:	ldr	r3, [pc, #180]	; 1d360 <__assert_fail@plt+0xc0f0>
   1d2a8:	ldr	r2, [pc, #180]	; 1d364 <__assert_fail@plt+0xc0f4>
   1d2ac:	ldr	r1, [pc, #180]	; 1d368 <__assert_fail@plt+0xc0f8>
   1d2b0:	ldr	r0, [pc, #180]	; 1d36c <__assert_fail@plt+0xc0fc>
   1d2b4:	bl	11270 <__assert_fail@plt>
   1d2b8:	ldr	r3, [fp, #-8]
   1d2bc:	ldr	r2, [fp, #-20]	; 0xffffffec
   1d2c0:	ldr	r1, [fp, #-16]
   1d2c4:	ldr	r0, [fp, #-16]
   1d2c8:	bl	1bd8c <__assert_fail@plt+0xab1c>
   1d2cc:	mov	r1, #1
   1d2d0:	ldr	r0, [fp, #-16]
   1d2d4:	bl	18c64 <__assert_fail@plt+0x79f4>
   1d2d8:	mov	r3, r0
   1d2dc:	cmp	r3, #0
   1d2e0:	beq	1d2fc <__assert_fail@plt+0xc08c>
   1d2e4:	ldr	r1, [fp, #-12]
   1d2e8:	ldr	r0, [fp, #-16]
   1d2ec:	bl	18cb4 <__assert_fail@plt+0x7a44>
   1d2f0:	mov	r3, r0
   1d2f4:	cmp	r3, #0
   1d2f8:	bne	1d338 <__assert_fail@plt+0xc0c8>
   1d2fc:	mov	r3, #1
   1d300:	b	1d354 <__assert_fail@plt+0xc0e4>
   1d304:	ldr	r3, [fp, #-8]
   1d308:	mov	r2, #2
   1d30c:	ldr	r1, [fp, #-16]
   1d310:	ldr	r0, [fp, #-16]
   1d314:	bl	1c174 <__assert_fail@plt+0xaf04>
   1d318:	ldr	r1, [fp, #-12]
   1d31c:	ldr	r0, [fp, #-16]
   1d320:	bl	18cb4 <__assert_fail@plt+0x7a44>
   1d324:	mov	r3, r0
   1d328:	cmp	r3, #0
   1d32c:	bne	1d338 <__assert_fail@plt+0xc0c8>
   1d330:	mov	r3, #1
   1d334:	b	1d354 <__assert_fail@plt+0xc0e4>
   1d338:	ldr	r3, [fp, #4]
   1d33c:	sub	r3, r3, #1
   1d340:	str	r3, [fp, #4]
   1d344:	ldr	r3, [fp, #4]
   1d348:	cmp	r3, #0
   1d34c:	bne	1d304 <__assert_fail@plt+0xc094>
   1d350:	mov	r3, #0
   1d354:	mov	r0, r3
   1d358:	sub	sp, fp, #4
   1d35c:	pop	{fp, pc}
   1d360:			; <UNDEFINED> instruction: 0x00040ebc
   1d364:	ldrdeq	r0, [r0], -lr
   1d368:	andeq	r0, r4, r8, asr #12
   1d36c:	andeq	r0, r4, r8, lsl #21
   1d370:	push	{fp, lr}
   1d374:	add	fp, sp, #4
   1d378:	sub	sp, sp, #64	; 0x40
   1d37c:	str	r0, [fp, #-56]	; 0xffffffc8
   1d380:	str	r1, [fp, #-60]	; 0xffffffc4
   1d384:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1d388:	ldr	r3, [r3, #4]
   1d38c:	cmp	r3, #0
   1d390:	movne	r3, #1
   1d394:	moveq	r3, #0
   1d398:	uxtb	r3, r3
   1d39c:	mov	r2, r3
   1d3a0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1d3a4:	ldr	r3, [r3, #8]
   1d3a8:	ldr	r3, [r3]
   1d3ac:	and	r3, r3, r2
   1d3b0:	cmp	r3, #0
   1d3b4:	bne	1d3e0 <__assert_fail@plt+0xc170>
   1d3b8:	mov	r1, #2
   1d3bc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1d3c0:	bl	18d70 <__assert_fail@plt+0x7b00>
   1d3c4:	mov	r3, r0
   1d3c8:	cmp	r3, #0
   1d3cc:	bne	1d3d8 <__assert_fail@plt+0xc168>
   1d3d0:	mov	r3, #2
   1d3d4:	b	1d658 <__assert_fail@plt+0xc3e8>
   1d3d8:	mov	r3, #0
   1d3dc:	b	1d658 <__assert_fail@plt+0xc3e8>
   1d3e0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1d3e4:	ldr	r3, [r3, #4]
   1d3e8:	cmp	r3, #0
   1d3ec:	bne	1d404 <__assert_fail@plt+0xc194>
   1d3f0:	ldr	r3, [pc, #620]	; 1d664 <__assert_fail@plt+0xc3f4>
   1d3f4:	ldr	r2, [pc, #620]	; 1d668 <__assert_fail@plt+0xc3f8>
   1d3f8:	ldr	r1, [pc, #620]	; 1d66c <__assert_fail@plt+0xc3fc>
   1d3fc:	ldr	r0, [pc, #620]	; 1d670 <__assert_fail@plt+0xc400>
   1d400:	bl	11270 <__assert_fail@plt>
   1d404:	mov	r1, #64	; 0x40
   1d408:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1d40c:	bl	18d70 <__assert_fail@plt+0x7b00>
   1d410:	mov	r3, r0
   1d414:	cmp	r3, #0
   1d418:	bge	1d43c <__assert_fail@plt+0xc1cc>
   1d41c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1d420:	ldr	r3, [r3, #8]
   1d424:	ldr	r3, [r3]
   1d428:	lsr	r3, r3, #1
   1d42c:	ldr	r2, [pc, #576]	; 1d674 <__assert_fail@plt+0xc404>
   1d430:	lsr	r3, r2, r3
   1d434:	and	r3, r3, #2
   1d438:	b	1d658 <__assert_fail@plt+0xc3e8>
   1d43c:	ldr	r2, [pc, #564]	; 1d678 <__assert_fail@plt+0xc408>
   1d440:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1d444:	mov	r0, #0
   1d448:	bl	1afcc <__assert_fail@plt+0x9d5c>
   1d44c:	mov	r3, r0
   1d450:	cmp	r3, #1
   1d454:	beq	1d460 <__assert_fail@plt+0xc1f0>
   1d458:	mov	r3, #0
   1d45c:	b	1d658 <__assert_fail@plt+0xc3e8>
   1d460:	ldr	r1, [pc, #532]	; 1d67c <__assert_fail@plt+0xc40c>
   1d464:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1d468:	bl	18d70 <__assert_fail@plt+0x7b00>
   1d46c:	mov	r3, r0
   1d470:	cmp	r3, #0
   1d474:	bge	1d480 <__assert_fail@plt+0xc210>
   1d478:	mov	r3, #2
   1d47c:	b	1d658 <__assert_fail@plt+0xc3e8>
   1d480:	sub	r3, fp, #28
   1d484:	mov	r0, r3
   1d488:	bl	17a80 <__assert_fail@plt+0x6810>
   1d48c:	sub	r3, fp, #40	; 0x28
   1d490:	mov	r0, r3
   1d494:	bl	17a80 <__assert_fail@plt+0x6810>
   1d498:	sub	r3, fp, #28
   1d49c:	ldr	r1, [fp, #-56]	; 0xffffffc8
   1d4a0:	mov	r0, r3
   1d4a4:	bl	18e68 <__assert_fail@plt+0x7bf8>
   1d4a8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d4ac:	ldr	r2, [fp, #-20]	; 0xffffffec
   1d4b0:	ldr	r2, [r2]
   1d4b4:	sub	r2, r2, #1
   1d4b8:	str	r2, [r3]
   1d4bc:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d4c0:	mov	r1, #0
   1d4c4:	mov	r0, r3
   1d4c8:	bl	14f48 <__assert_fail@plt+0x3cd8>
   1d4cc:	str	r0, [fp, #-16]
   1d4d0:	sub	r1, fp, #28
   1d4d4:	sub	r3, fp, #40	; 0x28
   1d4d8:	ldr	r2, [fp, #-16]
   1d4dc:	mov	r0, r3
   1d4e0:	bl	1a678 <__assert_fail@plt+0x9408>
   1d4e4:	sub	r3, fp, #52	; 0x34
   1d4e8:	mov	r1, #2
   1d4ec:	mov	r0, r3
   1d4f0:	bl	17e24 <__assert_fail@plt+0x6bb4>
   1d4f4:	sub	r0, fp, #40	; 0x28
   1d4f8:	sub	r2, fp, #52	; 0x34
   1d4fc:	sub	r1, fp, #28
   1d500:	ldr	r3, [fp, #-16]
   1d504:	str	r3, [sp]
   1d508:	mov	r3, r0
   1d50c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1d510:	bl	1d27c <__assert_fail@plt+0xc00c>
   1d514:	mov	r3, r0
   1d518:	cmp	r3, #0
   1d51c:	beq	1d544 <__assert_fail@plt+0xc2d4>
   1d520:	sub	r3, fp, #52	; 0x34
   1d524:	mov	r1, r3
   1d528:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1d52c:	bl	1d02c <__assert_fail@plt+0xbdbc>
   1d530:	mov	r3, r0
   1d534:	cmp	r3, #0
   1d538:	beq	1d544 <__assert_fail@plt+0xc2d4>
   1d53c:	mov	r3, #1
   1d540:	b	1d548 <__assert_fail@plt+0xc2d8>
   1d544:	mov	r3, #0
   1d548:	str	r3, [fp, #-8]
   1d54c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1d550:	sub	r3, r3, #24
   1d554:	str	r3, [fp, #-60]	; 0xffffffc4
   1d558:	mov	r3, #0
   1d55c:	str	r3, [fp, #-12]
   1d560:	b	1d5fc <__assert_fail@plt+0xc38c>
   1d564:	ldr	r3, [fp, #-12]
   1d568:	ldr	r2, [fp, #-12]
   1d56c:	mul	r2, r2, r3
   1d570:	ldr	r3, [fp, #-12]
   1d574:	add	r3, r2, r3
   1d578:	add	r2, r3, #41	; 0x29
   1d57c:	sub	r3, fp, #52	; 0x34
   1d580:	mov	r1, r2
   1d584:	mov	r0, r3
   1d588:	bl	17cd4 <__assert_fail@plt+0x6a64>
   1d58c:	sub	r2, fp, #28
   1d590:	sub	r3, fp, #52	; 0x34
   1d594:	mov	r1, r2
   1d598:	mov	r0, r3
   1d59c:	bl	18cb4 <__assert_fail@plt+0x7a44>
   1d5a0:	mov	r3, r0
   1d5a4:	cmp	r3, #0
   1d5a8:	blt	1d5cc <__assert_fail@plt+0xc35c>
   1d5ac:	ldr	r3, [fp, #-12]
   1d5b0:	cmp	r3, #29
   1d5b4:	bgt	1d62c <__assert_fail@plt+0xc3bc>
   1d5b8:	ldr	r3, [pc, #164]	; 1d664 <__assert_fail@plt+0xc3f4>
   1d5bc:	ldr	r2, [pc, #188]	; 1d680 <__assert_fail@plt+0xc410>
   1d5c0:	ldr	r1, [pc, #164]	; 1d66c <__assert_fail@plt+0xc3fc>
   1d5c4:	ldr	r0, [pc, #184]	; 1d684 <__assert_fail@plt+0xc414>
   1d5c8:	bl	11270 <__assert_fail@plt>
   1d5cc:	sub	r0, fp, #40	; 0x28
   1d5d0:	sub	r2, fp, #52	; 0x34
   1d5d4:	sub	r1, fp, #28
   1d5d8:	ldr	r3, [fp, #-16]
   1d5dc:	str	r3, [sp]
   1d5e0:	mov	r3, r0
   1d5e4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1d5e8:	bl	1d27c <__assert_fail@plt+0xc00c>
   1d5ec:	str	r0, [fp, #-8]
   1d5f0:	ldr	r3, [fp, #-12]
   1d5f4:	add	r3, r3, #1
   1d5f8:	str	r3, [fp, #-12]
   1d5fc:	ldr	r2, [fp, #-12]
   1d600:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1d604:	cmp	r2, r3
   1d608:	movlt	r3, #1
   1d60c:	movge	r3, #0
   1d610:	uxtb	r3, r3
   1d614:	mov	r2, r3
   1d618:	ldr	r3, [fp, #-8]
   1d61c:	and	r3, r3, r2
   1d620:	cmp	r3, #0
   1d624:	bne	1d564 <__assert_fail@plt+0xc2f4>
   1d628:	b	1d630 <__assert_fail@plt+0xc3c0>
   1d62c:	nop			; (mov r0, r0)
   1d630:	sub	r3, fp, #28
   1d634:	mov	r0, r3
   1d638:	bl	17b48 <__assert_fail@plt+0x68d8>
   1d63c:	sub	r3, fp, #40	; 0x28
   1d640:	mov	r0, r3
   1d644:	bl	17b48 <__assert_fail@plt+0x68d8>
   1d648:	sub	r3, fp, #52	; 0x34
   1d64c:	mov	r0, r3
   1d650:	bl	17b48 <__assert_fail@plt+0x68d8>
   1d654:	ldr	r3, [fp, #-8]
   1d658:	mov	r0, r3
   1d65c:	sub	sp, fp, #4
   1d660:	pop	{fp, pc}
   1d664:	andeq	r0, r4, ip, asr #29
   1d668:	andeq	r0, r0, r6, lsl #28
   1d66c:	andeq	r0, r4, r8, asr #12
   1d670:	muleq	r4, r0, sl
   1d674:	stmdbgt	r9!, {r2, r3, r4, r6, r7, r9, sl, ip, pc}^
   1d678:	smullgt	sp, pc, r7, r7	; <UNPREDICTABLE>
   1d67c:	andeq	r0, r0, r1, asr #7
   1d680:	andeq	r0, r0, sp, lsr #28
   1d684:	andeq	r0, r4, r4, lsr #21
   1d688:	push	{fp}		; (str fp, [sp, #-4]!)
   1d68c:	add	fp, sp, #0
   1d690:	sub	sp, sp, #36	; 0x24
   1d694:	str	r0, [fp, #-32]	; 0xffffffe0
   1d698:	str	r1, [fp, #-36]	; 0xffffffdc
   1d69c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d6a0:	ldr	r3, [r3, #4]
   1d6a4:	str	r3, [fp, #-12]
   1d6a8:	ldr	r3, [fp, #-12]
   1d6ac:	cmp	r3, #0
   1d6b0:	rsblt	r3, r3, #0
   1d6b4:	str	r3, [fp, #-16]
   1d6b8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1d6bc:	lsr	r3, r3, #5
   1d6c0:	str	r3, [fp, #-8]
   1d6c4:	ldr	r2, [fp, #-8]
   1d6c8:	ldr	r3, [fp, #-16]
   1d6cc:	cmp	r2, r3
   1d6d0:	blt	1d6e4 <__assert_fail@plt+0xc474>
   1d6d4:	ldr	r3, [fp, #-12]
   1d6d8:	lsr	r3, r3, #31
   1d6dc:	uxtb	r3, r3
   1d6e0:	b	1d7a4 <__assert_fail@plt+0xc534>
   1d6e4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1d6e8:	and	r3, r3, #31
   1d6ec:	str	r3, [fp, #-20]	; 0xffffffec
   1d6f0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d6f4:	ldr	r2, [r3, #8]
   1d6f8:	ldr	r3, [fp, #-8]
   1d6fc:	lsl	r3, r3, #2
   1d700:	add	r3, r2, r3
   1d704:	ldr	r3, [r3]
   1d708:	str	r3, [fp, #-24]	; 0xffffffe8
   1d70c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1d710:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d714:	lsr	r3, r2, r3
   1d718:	and	r3, r3, #1
   1d71c:	str	r3, [fp, #-28]	; 0xffffffe4
   1d720:	ldr	r3, [fp, #-12]
   1d724:	cmp	r3, #0
   1d728:	bge	1d7a0 <__assert_fail@plt+0xc530>
   1d72c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d730:	cmp	r3, #0
   1d734:	beq	1d788 <__assert_fail@plt+0xc518>
   1d738:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d73c:	rsb	r3, r3, #32
   1d740:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1d744:	lsl	r3, r2, r3
   1d748:	cmp	r3, #0
   1d74c:	beq	1d788 <__assert_fail@plt+0xc518>
   1d750:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d754:	eor	r3, r3, #1
   1d758:	b	1d7a4 <__assert_fail@plt+0xc534>
   1d75c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d760:	ldr	r2, [r3, #8]
   1d764:	ldr	r3, [fp, #-8]
   1d768:	lsl	r3, r3, #2
   1d76c:	add	r3, r2, r3
   1d770:	ldr	r3, [r3]
   1d774:	cmp	r3, #0
   1d778:	beq	1d788 <__assert_fail@plt+0xc518>
   1d77c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d780:	eor	r3, r3, #1
   1d784:	b	1d7a4 <__assert_fail@plt+0xc534>
   1d788:	ldr	r3, [fp, #-8]
   1d78c:	sub	r3, r3, #1
   1d790:	str	r3, [fp, #-8]
   1d794:	ldr	r3, [fp, #-8]
   1d798:	cmp	r3, #0
   1d79c:	bge	1d75c <__assert_fail@plt+0xc4ec>
   1d7a0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d7a4:	mov	r0, r3
   1d7a8:	add	sp, fp, #0
   1d7ac:	pop	{fp}		; (ldr fp, [sp], #4)
   1d7b0:	bx	lr
   1d7b4:	push	{fp, lr}
   1d7b8:	add	fp, sp, #4
   1d7bc:	sub	sp, sp, #32
   1d7c0:	str	r0, [fp, #-32]	; 0xffffffe0
   1d7c4:	str	r1, [fp, #-36]	; 0xffffffdc
   1d7c8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d7cc:	ldr	r3, [r3, #4]
   1d7d0:	cmp	r3, #0
   1d7d4:	rsblt	r3, r3, #0
   1d7d8:	str	r3, [fp, #-8]
   1d7dc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1d7e0:	lsr	r3, r3, #5
   1d7e4:	str	r3, [fp, #-16]
   1d7e8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1d7ec:	and	r3, r3, #31
   1d7f0:	mov	r2, #1
   1d7f4:	lsl	r3, r2, r3
   1d7f8:	str	r3, [fp, #-20]	; 0xffffffec
   1d7fc:	ldr	r2, [fp, #-16]
   1d800:	ldr	r3, [fp, #-8]
   1d804:	cmp	r2, r3
   1d808:	blt	1d8b4 <__assert_fail@plt+0xc644>
   1d80c:	ldr	r3, [fp, #-16]
   1d810:	add	r2, r3, #1
   1d814:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d818:	ldr	r3, [r3]
   1d81c:	cmp	r2, r3
   1d820:	ble	1d840 <__assert_fail@plt+0xc5d0>
   1d824:	ldr	r3, [fp, #-16]
   1d828:	add	r3, r3, #1
   1d82c:	mov	r1, r3
   1d830:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1d834:	bl	17b90 <__assert_fail@plt+0x6920>
   1d838:	mov	r3, r0
   1d83c:	b	1d848 <__assert_fail@plt+0xc5d8>
   1d840:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d844:	ldr	r3, [r3, #8]
   1d848:	str	r3, [fp, #-24]	; 0xffffffe8
   1d84c:	ldr	r3, [fp, #-16]
   1d850:	lsl	r3, r3, #2
   1d854:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1d858:	add	r3, r2, r3
   1d85c:	ldr	r2, [fp, #-20]	; 0xffffffec
   1d860:	str	r2, [r3]
   1d864:	ldr	r3, [fp, #-8]
   1d868:	str	r3, [fp, #-12]
   1d86c:	b	1d894 <__assert_fail@plt+0xc624>
   1d870:	ldr	r3, [fp, #-12]
   1d874:	lsl	r3, r3, #2
   1d878:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1d87c:	add	r3, r2, r3
   1d880:	mov	r2, #0
   1d884:	str	r2, [r3]
   1d888:	ldr	r3, [fp, #-12]
   1d88c:	add	r3, r3, #1
   1d890:	str	r3, [fp, #-12]
   1d894:	ldr	r2, [fp, #-12]
   1d898:	ldr	r3, [fp, #-16]
   1d89c:	cmp	r2, r3
   1d8a0:	blt	1d870 <__assert_fail@plt+0xc600>
   1d8a4:	ldr	r3, [fp, #-16]
   1d8a8:	add	r3, r3, #1
   1d8ac:	str	r3, [fp, #-8]
   1d8b0:	b	1d964 <__assert_fail@plt+0xc6f4>
   1d8b4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d8b8:	ldr	r3, [r3, #8]
   1d8bc:	str	r3, [fp, #-24]	; 0xffffffe8
   1d8c0:	ldr	r3, [fp, #-16]
   1d8c4:	lsl	r3, r3, #2
   1d8c8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1d8cc:	add	r0, r2, r3
   1d8d0:	ldr	r3, [fp, #-16]
   1d8d4:	lsl	r3, r3, #2
   1d8d8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1d8dc:	add	r1, r2, r3
   1d8e0:	ldr	r2, [fp, #-8]
   1d8e4:	ldr	r3, [fp, #-16]
   1d8e8:	sub	r2, r2, r3
   1d8ec:	ldr	r3, [fp, #-20]	; 0xffffffec
   1d8f0:	bl	13d04 <__assert_fail@plt+0x2a94>
   1d8f4:	str	r0, [fp, #-28]	; 0xffffffe4
   1d8f8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1d8fc:	cmp	r3, #0
   1d900:	beq	1d964 <__assert_fail@plt+0xc6f4>
   1d904:	ldr	r3, [fp, #-8]
   1d908:	add	r2, r3, #1
   1d90c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d910:	ldr	r3, [r3]
   1d914:	cmp	r2, r3
   1d918:	ble	1d938 <__assert_fail@plt+0xc6c8>
   1d91c:	ldr	r3, [fp, #-8]
   1d920:	add	r3, r3, #1
   1d924:	mov	r1, r3
   1d928:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1d92c:	bl	17b90 <__assert_fail@plt+0x6920>
   1d930:	mov	r3, r0
   1d934:	b	1d940 <__assert_fail@plt+0xc6d0>
   1d938:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d93c:	ldr	r3, [r3, #8]
   1d940:	str	r3, [fp, #-24]	; 0xffffffe8
   1d944:	ldr	r3, [fp, #-8]
   1d948:	add	r2, r3, #1
   1d94c:	str	r2, [fp, #-8]
   1d950:	lsl	r3, r3, #2
   1d954:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1d958:	add	r3, r2, r3
   1d95c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1d960:	str	r2, [r3]
   1d964:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d968:	ldr	r3, [r3, #4]
   1d96c:	cmp	r3, #0
   1d970:	bge	1d980 <__assert_fail@plt+0xc710>
   1d974:	ldr	r3, [fp, #-8]
   1d978:	rsb	r3, r3, #0
   1d97c:	b	1d984 <__assert_fail@plt+0xc714>
   1d980:	ldr	r3, [fp, #-8]
   1d984:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1d988:	str	r3, [r2, #4]
   1d98c:	nop			; (mov r0, r0)
   1d990:	sub	sp, fp, #4
   1d994:	pop	{fp, pc}
   1d998:	push	{fp, lr}
   1d99c:	add	fp, sp, #4
   1d9a0:	sub	sp, sp, #32
   1d9a4:	str	r0, [fp, #-32]	; 0xffffffe0
   1d9a8:	str	r1, [fp, #-36]	; 0xffffffdc
   1d9ac:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d9b0:	ldr	r3, [r3, #4]
   1d9b4:	cmp	r3, #0
   1d9b8:	rsblt	r3, r3, #0
   1d9bc:	str	r3, [fp, #-8]
   1d9c0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1d9c4:	ldr	r3, [r3, #8]
   1d9c8:	str	r3, [fp, #-12]
   1d9cc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1d9d0:	lsr	r3, r3, #5
   1d9d4:	str	r3, [fp, #-16]
   1d9d8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1d9dc:	and	r3, r3, #31
   1d9e0:	mov	r2, #1
   1d9e4:	lsl	r3, r2, r3
   1d9e8:	str	r3, [fp, #-20]	; 0xffffffec
   1d9ec:	ldr	r2, [fp, #-16]
   1d9f0:	ldr	r3, [fp, #-8]
   1d9f4:	cmp	r2, r3
   1d9f8:	blt	1da10 <__assert_fail@plt+0xc7a0>
   1d9fc:	ldr	r3, [pc, #168]	; 1daac <__assert_fail@plt+0xc83c>
   1da00:	ldr	r2, [pc, #168]	; 1dab0 <__assert_fail@plt+0xc840>
   1da04:	ldr	r1, [pc, #168]	; 1dab4 <__assert_fail@plt+0xc844>
   1da08:	ldr	r0, [pc, #168]	; 1dab8 <__assert_fail@plt+0xc848>
   1da0c:	bl	11270 <__assert_fail@plt>
   1da10:	ldr	r3, [fp, #-16]
   1da14:	lsl	r3, r3, #2
   1da18:	ldr	r2, [fp, #-12]
   1da1c:	add	r0, r2, r3
   1da20:	ldr	r3, [fp, #-16]
   1da24:	lsl	r3, r3, #2
   1da28:	ldr	r2, [fp, #-12]
   1da2c:	add	r1, r2, r3
   1da30:	ldr	r2, [fp, #-8]
   1da34:	ldr	r3, [fp, #-16]
   1da38:	sub	r2, r2, r3
   1da3c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1da40:	bl	13fa0 <__assert_fail@plt+0x2d30>
   1da44:	str	r0, [fp, #-24]	; 0xffffffe8
   1da48:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1da4c:	cmp	r3, #0
   1da50:	beq	1da68 <__assert_fail@plt+0xc7f8>
   1da54:	ldr	r3, [pc, #80]	; 1daac <__assert_fail@plt+0xc83c>
   1da58:	ldr	r2, [pc, #92]	; 1dabc <__assert_fail@plt+0xc84c>
   1da5c:	ldr	r1, [pc, #80]	; 1dab4 <__assert_fail@plt+0xc844>
   1da60:	ldr	r0, [pc, #88]	; 1dac0 <__assert_fail@plt+0xc850>
   1da64:	bl	11270 <__assert_fail@plt>
   1da68:	ldr	r1, [fp, #-8]
   1da6c:	ldr	r0, [fp, #-12]
   1da70:	bl	13c08 <__assert_fail@plt+0x2998>
   1da74:	str	r0, [fp, #-8]
   1da78:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1da7c:	ldr	r3, [r3, #4]
   1da80:	cmp	r3, #0
   1da84:	bge	1da94 <__assert_fail@plt+0xc824>
   1da88:	ldr	r3, [fp, #-8]
   1da8c:	rsb	r3, r3, #0
   1da90:	b	1da98 <__assert_fail@plt+0xc828>
   1da94:	ldr	r3, [fp, #-8]
   1da98:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1da9c:	str	r3, [r2, #4]
   1daa0:	nop			; (mov r0, r0)
   1daa4:	sub	sp, fp, #4
   1daa8:	pop	{fp, pc}
   1daac:	andeq	r0, r4, r0, ror #29
   1dab0:	andeq	r0, r0, r9, lsr #29
   1dab4:	andeq	r0, r4, r8, asr #12
   1dab8:	andeq	r0, r4, ip, lsr #21
   1dabc:	andeq	r0, r0, ip, lsr #29
   1dac0:	andeq	r0, r4, r0, ror r8
   1dac4:	push	{fp, lr}
   1dac8:	add	fp, sp, #4
   1dacc:	sub	sp, sp, #8
   1dad0:	str	r0, [fp, #-8]
   1dad4:	str	r1, [fp, #-12]
   1dad8:	ldr	r1, [fp, #-12]
   1dadc:	ldr	r0, [fp, #-8]
   1dae0:	bl	1d688 <__assert_fail@plt+0xc418>
   1dae4:	mov	r3, r0
   1dae8:	cmp	r3, #0
   1daec:	bne	1db1c <__assert_fail@plt+0xc8ac>
   1daf0:	ldr	r3, [fp, #-8]
   1daf4:	ldr	r3, [r3, #4]
   1daf8:	cmp	r3, #0
   1dafc:	blt	1db10 <__assert_fail@plt+0xc8a0>
   1db00:	ldr	r1, [fp, #-12]
   1db04:	ldr	r0, [fp, #-8]
   1db08:	bl	1d7b4 <__assert_fail@plt+0xc544>
   1db0c:	b	1db1c <__assert_fail@plt+0xc8ac>
   1db10:	ldr	r1, [fp, #-12]
   1db14:	ldr	r0, [fp, #-8]
   1db18:	bl	1d998 <__assert_fail@plt+0xc728>
   1db1c:	nop			; (mov r0, r0)
   1db20:	sub	sp, fp, #4
   1db24:	pop	{fp, pc}
   1db28:	push	{fp, lr}
   1db2c:	add	fp, sp, #4
   1db30:	sub	sp, sp, #8
   1db34:	str	r0, [fp, #-8]
   1db38:	str	r1, [fp, #-12]
   1db3c:	ldr	r1, [fp, #-12]
   1db40:	ldr	r0, [fp, #-8]
   1db44:	bl	1d688 <__assert_fail@plt+0xc418>
   1db48:	mov	r3, r0
   1db4c:	cmp	r3, #0
   1db50:	beq	1db80 <__assert_fail@plt+0xc910>
   1db54:	ldr	r3, [fp, #-8]
   1db58:	ldr	r3, [r3, #4]
   1db5c:	cmp	r3, #0
   1db60:	blt	1db74 <__assert_fail@plt+0xc904>
   1db64:	ldr	r1, [fp, #-12]
   1db68:	ldr	r0, [fp, #-8]
   1db6c:	bl	1d998 <__assert_fail@plt+0xc728>
   1db70:	b	1db80 <__assert_fail@plt+0xc910>
   1db74:	ldr	r1, [fp, #-12]
   1db78:	ldr	r0, [fp, #-8]
   1db7c:	bl	1d7b4 <__assert_fail@plt+0xc544>
   1db80:	nop			; (mov r0, r0)
   1db84:	sub	sp, fp, #4
   1db88:	pop	{fp, pc}
   1db8c:	push	{fp, lr}
   1db90:	add	fp, sp, #4
   1db94:	sub	sp, sp, #8
   1db98:	str	r0, [fp, #-8]
   1db9c:	str	r1, [fp, #-12]
   1dba0:	ldr	r1, [fp, #-12]
   1dba4:	ldr	r0, [fp, #-8]
   1dba8:	bl	1d688 <__assert_fail@plt+0xc418>
   1dbac:	mov	r2, r0
   1dbb0:	ldr	r3, [fp, #-8]
   1dbb4:	ldr	r3, [r3, #4]
   1dbb8:	lsr	r3, r3, #31
   1dbbc:	uxtb	r3, r3
   1dbc0:	cmp	r2, r3
   1dbc4:	beq	1dbd8 <__assert_fail@plt+0xc968>
   1dbc8:	ldr	r1, [fp, #-12]
   1dbcc:	ldr	r0, [fp, #-8]
   1dbd0:	bl	1d998 <__assert_fail@plt+0xc728>
   1dbd4:	b	1dbe4 <__assert_fail@plt+0xc974>
   1dbd8:	ldr	r1, [fp, #-12]
   1dbdc:	ldr	r0, [fp, #-8]
   1dbe0:	bl	1d7b4 <__assert_fail@plt+0xc544>
   1dbe4:	nop			; (mov r0, r0)
   1dbe8:	sub	sp, fp, #4
   1dbec:	pop	{fp, pc}
   1dbf0:	push	{fp, lr}
   1dbf4:	add	fp, sp, #4
   1dbf8:	sub	sp, sp, #8
   1dbfc:	str	r0, [fp, #-8]
   1dc00:	str	r1, [fp, #-12]
   1dc04:	mov	r2, #1
   1dc08:	ldr	r1, [fp, #-12]
   1dc0c:	ldr	r0, [fp, #-8]
   1dc10:	bl	18f88 <__assert_fail@plt+0x7d18>
   1dc14:	ldr	r1, [fp, #-8]
   1dc18:	ldr	r0, [fp, #-8]
   1dc1c:	bl	18eac <__assert_fail@plt+0x7c3c>
   1dc20:	nop			; (mov r0, r0)
   1dc24:	sub	sp, fp, #4
   1dc28:	pop	{fp, pc}
   1dc2c:	push	{fp, lr}
   1dc30:	add	fp, sp, #4
   1dc34:	sub	sp, sp, #88	; 0x58
   1dc38:	str	r0, [fp, #-80]	; 0xffffffb0
   1dc3c:	str	r1, [fp, #-84]	; 0xffffffac
   1dc40:	str	r2, [fp, #-88]	; 0xffffffa8
   1dc44:	ldr	r3, [fp, #-84]	; 0xffffffac
   1dc48:	ldr	r3, [r3, #4]
   1dc4c:	cmp	r3, #0
   1dc50:	rsblt	r3, r3, #0
   1dc54:	str	r3, [fp, #-8]
   1dc58:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1dc5c:	ldr	r3, [r3, #4]
   1dc60:	cmp	r3, #0
   1dc64:	rsblt	r3, r3, #0
   1dc68:	str	r3, [fp, #-12]
   1dc6c:	ldr	r2, [fp, #-8]
   1dc70:	ldr	r3, [fp, #-12]
   1dc74:	cmp	r2, r3
   1dc78:	bge	1dcac <__assert_fail@plt+0xca3c>
   1dc7c:	ldr	r3, [fp, #-84]	; 0xffffffac
   1dc80:	str	r3, [fp, #-36]	; 0xffffffdc
   1dc84:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1dc88:	str	r3, [fp, #-84]	; 0xffffffac
   1dc8c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1dc90:	str	r3, [fp, #-88]	; 0xffffffa8
   1dc94:	ldr	r3, [fp, #-8]
   1dc98:	str	r3, [fp, #-40]	; 0xffffffd8
   1dc9c:	ldr	r3, [fp, #-12]
   1dca0:	str	r3, [fp, #-8]
   1dca4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1dca8:	str	r3, [fp, #-12]
   1dcac:	ldr	r3, [fp, #-12]
   1dcb0:	cmp	r3, #0
   1dcb4:	bne	1dcc8 <__assert_fail@plt+0xca58>
   1dcb8:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1dcbc:	mov	r2, #0
   1dcc0:	str	r2, [r3, #4]
   1dcc4:	b	1dfd8 <__assert_fail@plt+0xcd68>
   1dcc8:	ldr	r3, [fp, #-84]	; 0xffffffac
   1dccc:	ldr	r3, [r3, #4]
   1dcd0:	lsr	r3, r3, #31
   1dcd4:	uxtb	r3, r3
   1dcd8:	str	r3, [fp, #-24]	; 0xffffffe8
   1dcdc:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1dce0:	ldr	r3, [r3, #4]
   1dce4:	lsr	r3, r3, #31
   1dce8:	uxtb	r3, r3
   1dcec:	str	r3, [fp, #-28]	; 0xffffffe4
   1dcf0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1dcf4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1dcf8:	and	r3, r3, r2
   1dcfc:	str	r3, [fp, #-32]	; 0xffffffe0
   1dd00:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1dd04:	rsb	r3, r3, #0
   1dd08:	str	r3, [fp, #-44]	; 0xffffffd4
   1dd0c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1dd10:	rsb	r3, r3, #0
   1dd14:	str	r3, [fp, #-48]	; 0xffffffd0
   1dd18:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1dd1c:	rsb	r3, r3, #0
   1dd20:	str	r3, [fp, #-52]	; 0xffffffcc
   1dd24:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1dd28:	cmp	r3, #0
   1dd2c:	beq	1dd38 <__assert_fail@plt+0xcac8>
   1dd30:	ldr	r3, [fp, #-8]
   1dd34:	b	1dd3c <__assert_fail@plt+0xcacc>
   1dd38:	ldr	r3, [fp, #-12]
   1dd3c:	str	r3, [fp, #-16]
   1dd40:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1dd44:	ldr	r3, [fp, #-16]
   1dd48:	add	r2, r2, r3
   1dd4c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1dd50:	ldr	r3, [r3]
   1dd54:	cmp	r2, r3
   1dd58:	ble	1dd7c <__assert_fail@plt+0xcb0c>
   1dd5c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1dd60:	ldr	r3, [fp, #-16]
   1dd64:	add	r3, r2, r3
   1dd68:	mov	r1, r3
   1dd6c:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1dd70:	bl	17b90 <__assert_fail@plt+0x6920>
   1dd74:	mov	r3, r0
   1dd78:	b	1dd84 <__assert_fail@plt+0xcb14>
   1dd7c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1dd80:	ldr	r3, [r3, #8]
   1dd84:	str	r3, [fp, #-56]	; 0xffffffc8
   1dd88:	ldr	r3, [fp, #-84]	; 0xffffffac
   1dd8c:	ldr	r3, [r3, #8]
   1dd90:	str	r3, [fp, #-60]	; 0xffffffc4
   1dd94:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1dd98:	ldr	r3, [r3, #8]
   1dd9c:	str	r3, [fp, #-64]	; 0xffffffc0
   1dda0:	mov	r3, #0
   1dda4:	str	r3, [fp, #-20]	; 0xffffffec
   1dda8:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ddac:	lsl	r3, r3, #2
   1ddb0:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1ddb4:	add	r3, r2, r3
   1ddb8:	ldr	r2, [r3]
   1ddbc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1ddc0:	eor	r2, r2, r3
   1ddc4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ddc8:	add	r3, r2, r3
   1ddcc:	str	r3, [fp, #-68]	; 0xffffffbc
   1ddd0:	ldr	r2, [fp, #-68]	; 0xffffffbc
   1ddd4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ddd8:	cmp	r2, r3
   1dddc:	movcc	r3, #1
   1dde0:	movcs	r3, #0
   1dde4:	uxtb	r3, r3
   1dde8:	str	r3, [fp, #-24]	; 0xffffffe8
   1ddec:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ddf0:	lsl	r3, r3, #2
   1ddf4:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1ddf8:	add	r3, r2, r3
   1ddfc:	ldr	r2, [r3]
   1de00:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1de04:	eor	r2, r2, r3
   1de08:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1de0c:	add	r3, r2, r3
   1de10:	str	r3, [fp, #-72]	; 0xffffffb8
   1de14:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1de18:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1de1c:	cmp	r2, r3
   1de20:	movcc	r3, #1
   1de24:	movcs	r3, #0
   1de28:	uxtb	r3, r3
   1de2c:	str	r3, [fp, #-28]	; 0xffffffe4
   1de30:	ldr	r2, [fp, #-68]	; 0xffffffbc
   1de34:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1de38:	and	r2, r2, r3
   1de3c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1de40:	eor	r2, r2, r3
   1de44:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1de48:	add	r3, r2, r3
   1de4c:	str	r3, [fp, #-76]	; 0xffffffb4
   1de50:	ldr	r2, [fp, #-76]	; 0xffffffb4
   1de54:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1de58:	cmp	r2, r3
   1de5c:	movcc	r3, #1
   1de60:	movcs	r3, #0
   1de64:	uxtb	r3, r3
   1de68:	str	r3, [fp, #-32]	; 0xffffffe0
   1de6c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1de70:	lsl	r3, r3, #2
   1de74:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1de78:	add	r3, r2, r3
   1de7c:	ldr	r2, [fp, #-76]	; 0xffffffb4
   1de80:	str	r2, [r3]
   1de84:	ldr	r3, [fp, #-20]	; 0xffffffec
   1de88:	add	r3, r3, #1
   1de8c:	str	r3, [fp, #-20]	; 0xffffffec
   1de90:	ldr	r2, [fp, #-20]	; 0xffffffec
   1de94:	ldr	r3, [fp, #-12]
   1de98:	cmp	r2, r3
   1de9c:	blt	1dda8 <__assert_fail@plt+0xcb38>
   1dea0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1dea4:	cmp	r3, #0
   1dea8:	beq	1df64 <__assert_fail@plt+0xccf4>
   1deac:	ldr	r3, [pc, #300]	; 1dfe0 <__assert_fail@plt+0xcd70>
   1deb0:	ldr	r2, [pc, #300]	; 1dfe4 <__assert_fail@plt+0xcd74>
   1deb4:	ldr	r1, [pc, #300]	; 1dfe8 <__assert_fail@plt+0xcd78>
   1deb8:	ldr	r0, [pc, #300]	; 1dfec <__assert_fail@plt+0xcd7c>
   1debc:	bl	11270 <__assert_fail@plt>
   1dec0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1dec4:	lsl	r3, r3, #2
   1dec8:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1decc:	add	r3, r2, r3
   1ded0:	ldr	r2, [r3]
   1ded4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1ded8:	eor	r2, r2, r3
   1dedc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1dee0:	add	r3, r2, r3
   1dee4:	str	r3, [fp, #-68]	; 0xffffffbc
   1dee8:	ldr	r2, [fp, #-68]	; 0xffffffbc
   1deec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1def0:	cmp	r2, r3
   1def4:	movcc	r3, #1
   1def8:	movcs	r3, #0
   1defc:	uxtb	r3, r3
   1df00:	str	r3, [fp, #-24]	; 0xffffffe8
   1df04:	ldr	r2, [fp, #-68]	; 0xffffffbc
   1df08:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1df0c:	and	r2, r2, r3
   1df10:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1df14:	eor	r2, r2, r3
   1df18:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1df1c:	add	r3, r2, r3
   1df20:	str	r3, [fp, #-76]	; 0xffffffb4
   1df24:	ldr	r2, [fp, #-76]	; 0xffffffb4
   1df28:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1df2c:	cmp	r2, r3
   1df30:	movcc	r3, #1
   1df34:	movcs	r3, #0
   1df38:	uxtb	r3, r3
   1df3c:	str	r3, [fp, #-32]	; 0xffffffe0
   1df40:	ldr	r3, [fp, #-20]	; 0xffffffec
   1df44:	lsl	r3, r3, #2
   1df48:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1df4c:	add	r3, r2, r3
   1df50:	ldr	r2, [fp, #-76]	; 0xffffffb4
   1df54:	str	r2, [r3]
   1df58:	ldr	r3, [fp, #-20]	; 0xffffffec
   1df5c:	add	r3, r3, #1
   1df60:	str	r3, [fp, #-20]	; 0xffffffec
   1df64:	ldr	r2, [fp, #-20]	; 0xffffffec
   1df68:	ldr	r3, [fp, #-16]
   1df6c:	cmp	r2, r3
   1df70:	blt	1dec0 <__assert_fail@plt+0xcc50>
   1df74:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1df78:	cmp	r3, #0
   1df7c:	beq	1dfa4 <__assert_fail@plt+0xcd34>
   1df80:	ldr	r3, [fp, #-16]
   1df84:	add	r2, r3, #1
   1df88:	str	r2, [fp, #-16]
   1df8c:	lsl	r3, r3, #2
   1df90:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1df94:	add	r3, r2, r3
   1df98:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1df9c:	str	r2, [r3]
   1dfa0:	b	1dfb4 <__assert_fail@plt+0xcd44>
   1dfa4:	ldr	r1, [fp, #-16]
   1dfa8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1dfac:	bl	13c08 <__assert_fail@plt+0x2998>
   1dfb0:	str	r0, [fp, #-16]
   1dfb4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1dfb8:	cmp	r3, #0
   1dfbc:	beq	1dfcc <__assert_fail@plt+0xcd5c>
   1dfc0:	ldr	r3, [fp, #-16]
   1dfc4:	rsb	r3, r3, #0
   1dfc8:	b	1dfd0 <__assert_fail@plt+0xcd60>
   1dfcc:	ldr	r3, [fp, #-16]
   1dfd0:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1dfd4:	str	r3, [r2, #4]
   1dfd8:	sub	sp, fp, #4
   1dfdc:	pop	{fp, pc}
   1dfe0:	strdeq	r0, [r4], -r0	; <UNPREDICTABLE>
   1dfe4:	andeq	r0, r0, lr, lsl #30
   1dfe8:	andeq	r0, r4, r8, asr #12
   1dfec:			; <UNDEFINED> instruction: 0x00040abc
   1dff0:	push	{fp, lr}
   1dff4:	add	fp, sp, #4
   1dff8:	sub	sp, sp, #88	; 0x58
   1dffc:	str	r0, [fp, #-80]	; 0xffffffb0
   1e000:	str	r1, [fp, #-84]	; 0xffffffac
   1e004:	str	r2, [fp, #-88]	; 0xffffffa8
   1e008:	ldr	r3, [fp, #-84]	; 0xffffffac
   1e00c:	ldr	r3, [r3, #4]
   1e010:	cmp	r3, #0
   1e014:	rsblt	r3, r3, #0
   1e018:	str	r3, [fp, #-8]
   1e01c:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1e020:	ldr	r3, [r3, #4]
   1e024:	cmp	r3, #0
   1e028:	rsblt	r3, r3, #0
   1e02c:	str	r3, [fp, #-12]
   1e030:	ldr	r2, [fp, #-8]
   1e034:	ldr	r3, [fp, #-12]
   1e038:	cmp	r2, r3
   1e03c:	bge	1e070 <__assert_fail@plt+0xce00>
   1e040:	ldr	r3, [fp, #-84]	; 0xffffffac
   1e044:	str	r3, [fp, #-36]	; 0xffffffdc
   1e048:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1e04c:	str	r3, [fp, #-84]	; 0xffffffac
   1e050:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1e054:	str	r3, [fp, #-88]	; 0xffffffa8
   1e058:	ldr	r3, [fp, #-8]
   1e05c:	str	r3, [fp, #-40]	; 0xffffffd8
   1e060:	ldr	r3, [fp, #-12]
   1e064:	str	r3, [fp, #-8]
   1e068:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1e06c:	str	r3, [fp, #-12]
   1e070:	ldr	r3, [fp, #-12]
   1e074:	cmp	r3, #0
   1e078:	bne	1e08c <__assert_fail@plt+0xce1c>
   1e07c:	ldr	r1, [fp, #-84]	; 0xffffffac
   1e080:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1e084:	bl	17d50 <__assert_fail@plt+0x6ae0>
   1e088:	b	1e39c <__assert_fail@plt+0xd12c>
   1e08c:	ldr	r3, [fp, #-84]	; 0xffffffac
   1e090:	ldr	r3, [r3, #4]
   1e094:	lsr	r3, r3, #31
   1e098:	uxtb	r3, r3
   1e09c:	str	r3, [fp, #-24]	; 0xffffffe8
   1e0a0:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1e0a4:	ldr	r3, [r3, #4]
   1e0a8:	lsr	r3, r3, #31
   1e0ac:	uxtb	r3, r3
   1e0b0:	str	r3, [fp, #-28]	; 0xffffffe4
   1e0b4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1e0b8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1e0bc:	orr	r3, r2, r3
   1e0c0:	str	r3, [fp, #-32]	; 0xffffffe0
   1e0c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e0c8:	rsb	r3, r3, #0
   1e0cc:	str	r3, [fp, #-44]	; 0xffffffd4
   1e0d0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1e0d4:	rsb	r3, r3, #0
   1e0d8:	str	r3, [fp, #-48]	; 0xffffffd0
   1e0dc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1e0e0:	rsb	r3, r3, #0
   1e0e4:	str	r3, [fp, #-52]	; 0xffffffcc
   1e0e8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1e0ec:	cmp	r3, #0
   1e0f0:	beq	1e0fc <__assert_fail@plt+0xce8c>
   1e0f4:	ldr	r3, [fp, #-12]
   1e0f8:	b	1e100 <__assert_fail@plt+0xce90>
   1e0fc:	ldr	r3, [fp, #-8]
   1e100:	str	r3, [fp, #-16]
   1e104:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1e108:	ldr	r3, [fp, #-16]
   1e10c:	add	r2, r2, r3
   1e110:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1e114:	ldr	r3, [r3]
   1e118:	cmp	r2, r3
   1e11c:	ble	1e140 <__assert_fail@plt+0xced0>
   1e120:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1e124:	ldr	r3, [fp, #-16]
   1e128:	add	r3, r2, r3
   1e12c:	mov	r1, r3
   1e130:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1e134:	bl	17b90 <__assert_fail@plt+0x6920>
   1e138:	mov	r3, r0
   1e13c:	b	1e148 <__assert_fail@plt+0xced8>
   1e140:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1e144:	ldr	r3, [r3, #8]
   1e148:	str	r3, [fp, #-56]	; 0xffffffc8
   1e14c:	ldr	r3, [fp, #-84]	; 0xffffffac
   1e150:	ldr	r3, [r3, #8]
   1e154:	str	r3, [fp, #-60]	; 0xffffffc4
   1e158:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1e15c:	ldr	r3, [r3, #8]
   1e160:	str	r3, [fp, #-64]	; 0xffffffc0
   1e164:	mov	r3, #0
   1e168:	str	r3, [fp, #-20]	; 0xffffffec
   1e16c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e170:	lsl	r3, r3, #2
   1e174:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1e178:	add	r3, r2, r3
   1e17c:	ldr	r2, [r3]
   1e180:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1e184:	eor	r2, r2, r3
   1e188:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e18c:	add	r3, r2, r3
   1e190:	str	r3, [fp, #-68]	; 0xffffffbc
   1e194:	ldr	r2, [fp, #-68]	; 0xffffffbc
   1e198:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e19c:	cmp	r2, r3
   1e1a0:	movcc	r3, #1
   1e1a4:	movcs	r3, #0
   1e1a8:	uxtb	r3, r3
   1e1ac:	str	r3, [fp, #-24]	; 0xffffffe8
   1e1b0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e1b4:	lsl	r3, r3, #2
   1e1b8:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1e1bc:	add	r3, r2, r3
   1e1c0:	ldr	r2, [r3]
   1e1c4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1e1c8:	eor	r2, r2, r3
   1e1cc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1e1d0:	add	r3, r2, r3
   1e1d4:	str	r3, [fp, #-72]	; 0xffffffb8
   1e1d8:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1e1dc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1e1e0:	cmp	r2, r3
   1e1e4:	movcc	r3, #1
   1e1e8:	movcs	r3, #0
   1e1ec:	uxtb	r3, r3
   1e1f0:	str	r3, [fp, #-28]	; 0xffffffe4
   1e1f4:	ldr	r2, [fp, #-68]	; 0xffffffbc
   1e1f8:	ldr	r3, [fp, #-72]	; 0xffffffb8
   1e1fc:	orr	r2, r2, r3
   1e200:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1e204:	eor	r2, r2, r3
   1e208:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1e20c:	add	r3, r2, r3
   1e210:	str	r3, [fp, #-76]	; 0xffffffb4
   1e214:	ldr	r2, [fp, #-76]	; 0xffffffb4
   1e218:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1e21c:	cmp	r2, r3
   1e220:	movcc	r3, #1
   1e224:	movcs	r3, #0
   1e228:	uxtb	r3, r3
   1e22c:	str	r3, [fp, #-32]	; 0xffffffe0
   1e230:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e234:	lsl	r3, r3, #2
   1e238:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1e23c:	add	r3, r2, r3
   1e240:	ldr	r2, [fp, #-76]	; 0xffffffb4
   1e244:	str	r2, [r3]
   1e248:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e24c:	add	r3, r3, #1
   1e250:	str	r3, [fp, #-20]	; 0xffffffec
   1e254:	ldr	r2, [fp, #-20]	; 0xffffffec
   1e258:	ldr	r3, [fp, #-12]
   1e25c:	cmp	r2, r3
   1e260:	blt	1e16c <__assert_fail@plt+0xcefc>
   1e264:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1e268:	cmp	r3, #0
   1e26c:	beq	1e328 <__assert_fail@plt+0xd0b8>
   1e270:	ldr	r3, [pc, #300]	; 1e3a4 <__assert_fail@plt+0xd134>
   1e274:	ldr	r2, [pc, #300]	; 1e3a8 <__assert_fail@plt+0xd138>
   1e278:	ldr	r1, [pc, #300]	; 1e3ac <__assert_fail@plt+0xd13c>
   1e27c:	ldr	r0, [pc, #300]	; 1e3b0 <__assert_fail@plt+0xd140>
   1e280:	bl	11270 <__assert_fail@plt>
   1e284:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e288:	lsl	r3, r3, #2
   1e28c:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1e290:	add	r3, r2, r3
   1e294:	ldr	r2, [r3]
   1e298:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1e29c:	eor	r2, r2, r3
   1e2a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e2a4:	add	r3, r2, r3
   1e2a8:	str	r3, [fp, #-68]	; 0xffffffbc
   1e2ac:	ldr	r2, [fp, #-68]	; 0xffffffbc
   1e2b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e2b4:	cmp	r2, r3
   1e2b8:	movcc	r3, #1
   1e2bc:	movcs	r3, #0
   1e2c0:	uxtb	r3, r3
   1e2c4:	str	r3, [fp, #-24]	; 0xffffffe8
   1e2c8:	ldr	r2, [fp, #-68]	; 0xffffffbc
   1e2cc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1e2d0:	orr	r2, r2, r3
   1e2d4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1e2d8:	eor	r2, r2, r3
   1e2dc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1e2e0:	add	r3, r2, r3
   1e2e4:	str	r3, [fp, #-76]	; 0xffffffb4
   1e2e8:	ldr	r2, [fp, #-76]	; 0xffffffb4
   1e2ec:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1e2f0:	cmp	r2, r3
   1e2f4:	movcc	r3, #1
   1e2f8:	movcs	r3, #0
   1e2fc:	uxtb	r3, r3
   1e300:	str	r3, [fp, #-32]	; 0xffffffe0
   1e304:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e308:	lsl	r3, r3, #2
   1e30c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1e310:	add	r3, r2, r3
   1e314:	ldr	r2, [fp, #-76]	; 0xffffffb4
   1e318:	str	r2, [r3]
   1e31c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e320:	add	r3, r3, #1
   1e324:	str	r3, [fp, #-20]	; 0xffffffec
   1e328:	ldr	r2, [fp, #-20]	; 0xffffffec
   1e32c:	ldr	r3, [fp, #-16]
   1e330:	cmp	r2, r3
   1e334:	blt	1e284 <__assert_fail@plt+0xd014>
   1e338:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1e33c:	cmp	r3, #0
   1e340:	beq	1e368 <__assert_fail@plt+0xd0f8>
   1e344:	ldr	r3, [fp, #-16]
   1e348:	add	r2, r3, #1
   1e34c:	str	r2, [fp, #-16]
   1e350:	lsl	r3, r3, #2
   1e354:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1e358:	add	r3, r2, r3
   1e35c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1e360:	str	r2, [r3]
   1e364:	b	1e378 <__assert_fail@plt+0xd108>
   1e368:	ldr	r1, [fp, #-16]
   1e36c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1e370:	bl	13c08 <__assert_fail@plt+0x2998>
   1e374:	str	r0, [fp, #-16]
   1e378:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1e37c:	cmp	r3, #0
   1e380:	beq	1e390 <__assert_fail@plt+0xd120>
   1e384:	ldr	r3, [fp, #-16]
   1e388:	rsb	r3, r3, #0
   1e38c:	b	1e394 <__assert_fail@plt+0xd124>
   1e390:	ldr	r3, [fp, #-16]
   1e394:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1e398:	str	r3, [r2, #4]
   1e39c:	sub	sp, fp, #4
   1e3a0:	pop	{fp, pc}
   1e3a4:	strdeq	r0, [r4], -r8
   1e3a8:	andeq	r0, r0, r7, asr pc
   1e3ac:	andeq	r0, r4, r8, asr #12
   1e3b0:			; <UNDEFINED> instruction: 0x00040abc
   1e3b4:	push	{fp, lr}
   1e3b8:	add	fp, sp, #4
   1e3bc:	sub	sp, sp, #88	; 0x58
   1e3c0:	str	r0, [fp, #-80]	; 0xffffffb0
   1e3c4:	str	r1, [fp, #-84]	; 0xffffffac
   1e3c8:	str	r2, [fp, #-88]	; 0xffffffa8
   1e3cc:	ldr	r3, [fp, #-84]	; 0xffffffac
   1e3d0:	ldr	r3, [r3, #4]
   1e3d4:	cmp	r3, #0
   1e3d8:	rsblt	r3, r3, #0
   1e3dc:	str	r3, [fp, #-8]
   1e3e0:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1e3e4:	ldr	r3, [r3, #4]
   1e3e8:	cmp	r3, #0
   1e3ec:	rsblt	r3, r3, #0
   1e3f0:	str	r3, [fp, #-12]
   1e3f4:	ldr	r2, [fp, #-8]
   1e3f8:	ldr	r3, [fp, #-12]
   1e3fc:	cmp	r2, r3
   1e400:	bge	1e434 <__assert_fail@plt+0xd1c4>
   1e404:	ldr	r3, [fp, #-84]	; 0xffffffac
   1e408:	str	r3, [fp, #-32]	; 0xffffffe0
   1e40c:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1e410:	str	r3, [fp, #-84]	; 0xffffffac
   1e414:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1e418:	str	r3, [fp, #-88]	; 0xffffffa8
   1e41c:	ldr	r3, [fp, #-8]
   1e420:	str	r3, [fp, #-36]	; 0xffffffdc
   1e424:	ldr	r3, [fp, #-12]
   1e428:	str	r3, [fp, #-8]
   1e42c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1e430:	str	r3, [fp, #-12]
   1e434:	ldr	r3, [fp, #-12]
   1e438:	cmp	r3, #0
   1e43c:	bne	1e450 <__assert_fail@plt+0xd1e0>
   1e440:	ldr	r1, [fp, #-84]	; 0xffffffac
   1e444:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1e448:	bl	17d50 <__assert_fail@plt+0x6ae0>
   1e44c:	b	1e73c <__assert_fail@plt+0xd4cc>
   1e450:	ldr	r3, [fp, #-84]	; 0xffffffac
   1e454:	ldr	r3, [r3, #4]
   1e458:	lsr	r3, r3, #31
   1e45c:	uxtb	r3, r3
   1e460:	str	r3, [fp, #-20]	; 0xffffffec
   1e464:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1e468:	ldr	r3, [r3, #4]
   1e46c:	lsr	r3, r3, #31
   1e470:	uxtb	r3, r3
   1e474:	str	r3, [fp, #-24]	; 0xffffffe8
   1e478:	ldr	r2, [fp, #-20]	; 0xffffffec
   1e47c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e480:	eor	r3, r3, r2
   1e484:	str	r3, [fp, #-28]	; 0xffffffe4
   1e488:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e48c:	rsb	r3, r3, #0
   1e490:	str	r3, [fp, #-40]	; 0xffffffd8
   1e494:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e498:	rsb	r3, r3, #0
   1e49c:	str	r3, [fp, #-44]	; 0xffffffd4
   1e4a0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1e4a4:	rsb	r3, r3, #0
   1e4a8:	str	r3, [fp, #-48]	; 0xffffffd0
   1e4ac:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1e4b0:	ldr	r3, [fp, #-8]
   1e4b4:	add	r2, r2, r3
   1e4b8:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1e4bc:	ldr	r3, [r3]
   1e4c0:	cmp	r2, r3
   1e4c4:	ble	1e4e8 <__assert_fail@plt+0xd278>
   1e4c8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1e4cc:	ldr	r3, [fp, #-8]
   1e4d0:	add	r3, r2, r3
   1e4d4:	mov	r1, r3
   1e4d8:	ldr	r0, [fp, #-80]	; 0xffffffb0
   1e4dc:	bl	17b90 <__assert_fail@plt+0x6920>
   1e4e0:	mov	r3, r0
   1e4e4:	b	1e4f0 <__assert_fail@plt+0xd280>
   1e4e8:	ldr	r3, [fp, #-80]	; 0xffffffb0
   1e4ec:	ldr	r3, [r3, #8]
   1e4f0:	str	r3, [fp, #-52]	; 0xffffffcc
   1e4f4:	ldr	r3, [fp, #-84]	; 0xffffffac
   1e4f8:	ldr	r3, [r3, #8]
   1e4fc:	str	r3, [fp, #-56]	; 0xffffffc8
   1e500:	ldr	r3, [fp, #-88]	; 0xffffffa8
   1e504:	ldr	r3, [r3, #8]
   1e508:	str	r3, [fp, #-60]	; 0xffffffc4
   1e50c:	mov	r3, #0
   1e510:	str	r3, [fp, #-16]
   1e514:	ldr	r3, [fp, #-16]
   1e518:	lsl	r3, r3, #2
   1e51c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1e520:	add	r3, r2, r3
   1e524:	ldr	r2, [r3]
   1e528:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1e52c:	eor	r2, r2, r3
   1e530:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e534:	add	r3, r2, r3
   1e538:	str	r3, [fp, #-64]	; 0xffffffc0
   1e53c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1e540:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e544:	cmp	r2, r3
   1e548:	movcc	r3, #1
   1e54c:	movcs	r3, #0
   1e550:	uxtb	r3, r3
   1e554:	str	r3, [fp, #-20]	; 0xffffffec
   1e558:	ldr	r3, [fp, #-16]
   1e55c:	lsl	r3, r3, #2
   1e560:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1e564:	add	r3, r2, r3
   1e568:	ldr	r2, [r3]
   1e56c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1e570:	eor	r2, r2, r3
   1e574:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e578:	add	r3, r2, r3
   1e57c:	str	r3, [fp, #-68]	; 0xffffffbc
   1e580:	ldr	r2, [fp, #-68]	; 0xffffffbc
   1e584:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e588:	cmp	r2, r3
   1e58c:	movcc	r3, #1
   1e590:	movcs	r3, #0
   1e594:	uxtb	r3, r3
   1e598:	str	r3, [fp, #-24]	; 0xffffffe8
   1e59c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1e5a0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1e5a4:	eor	r2, r2, r3
   1e5a8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1e5ac:	eor	r2, r2, r3
   1e5b0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1e5b4:	add	r3, r2, r3
   1e5b8:	str	r3, [fp, #-72]	; 0xffffffb8
   1e5bc:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1e5c0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1e5c4:	cmp	r2, r3
   1e5c8:	movcc	r3, #1
   1e5cc:	movcs	r3, #0
   1e5d0:	uxtb	r3, r3
   1e5d4:	str	r3, [fp, #-28]	; 0xffffffe4
   1e5d8:	ldr	r3, [fp, #-16]
   1e5dc:	lsl	r3, r3, #2
   1e5e0:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1e5e4:	add	r3, r2, r3
   1e5e8:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1e5ec:	str	r2, [r3]
   1e5f0:	ldr	r3, [fp, #-16]
   1e5f4:	add	r3, r3, #1
   1e5f8:	str	r3, [fp, #-16]
   1e5fc:	ldr	r2, [fp, #-16]
   1e600:	ldr	r3, [fp, #-12]
   1e604:	cmp	r2, r3
   1e608:	blt	1e514 <__assert_fail@plt+0xd2a4>
   1e60c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e610:	cmp	r3, #0
   1e614:	beq	1e6c8 <__assert_fail@plt+0xd458>
   1e618:	ldr	r3, [pc, #292]	; 1e744 <__assert_fail@plt+0xd4d4>
   1e61c:	ldr	r2, [pc, #292]	; 1e748 <__assert_fail@plt+0xd4d8>
   1e620:	ldr	r1, [pc, #292]	; 1e74c <__assert_fail@plt+0xd4dc>
   1e624:	ldr	r0, [pc, #292]	; 1e750 <__assert_fail@plt+0xd4e0>
   1e628:	bl	11270 <__assert_fail@plt>
   1e62c:	ldr	r3, [fp, #-16]
   1e630:	lsl	r3, r3, #2
   1e634:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1e638:	add	r3, r2, r3
   1e63c:	ldr	r2, [r3]
   1e640:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1e644:	eor	r2, r2, r3
   1e648:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e64c:	add	r3, r2, r3
   1e650:	str	r3, [fp, #-64]	; 0xffffffc0
   1e654:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1e658:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e65c:	cmp	r2, r3
   1e660:	movcc	r3, #1
   1e664:	movcs	r3, #0
   1e668:	uxtb	r3, r3
   1e66c:	str	r3, [fp, #-20]	; 0xffffffec
   1e670:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1e674:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1e678:	eor	r2, r2, r3
   1e67c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1e680:	add	r3, r2, r3
   1e684:	str	r3, [fp, #-72]	; 0xffffffb8
   1e688:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1e68c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1e690:	cmp	r2, r3
   1e694:	movcc	r3, #1
   1e698:	movcs	r3, #0
   1e69c:	uxtb	r3, r3
   1e6a0:	str	r3, [fp, #-28]	; 0xffffffe4
   1e6a4:	ldr	r3, [fp, #-16]
   1e6a8:	lsl	r3, r3, #2
   1e6ac:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1e6b0:	add	r3, r2, r3
   1e6b4:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1e6b8:	str	r2, [r3]
   1e6bc:	ldr	r3, [fp, #-16]
   1e6c0:	add	r3, r3, #1
   1e6c4:	str	r3, [fp, #-16]
   1e6c8:	ldr	r2, [fp, #-16]
   1e6cc:	ldr	r3, [fp, #-8]
   1e6d0:	cmp	r2, r3
   1e6d4:	blt	1e62c <__assert_fail@plt+0xd3bc>
   1e6d8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1e6dc:	cmp	r3, #0
   1e6e0:	beq	1e708 <__assert_fail@plt+0xd498>
   1e6e4:	ldr	r3, [fp, #-8]
   1e6e8:	add	r2, r3, #1
   1e6ec:	str	r2, [fp, #-8]
   1e6f0:	lsl	r3, r3, #2
   1e6f4:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1e6f8:	add	r3, r2, r3
   1e6fc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1e700:	str	r2, [r3]
   1e704:	b	1e718 <__assert_fail@plt+0xd4a8>
   1e708:	ldr	r1, [fp, #-8]
   1e70c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1e710:	bl	13c08 <__assert_fail@plt+0x2998>
   1e714:	str	r0, [fp, #-8]
   1e718:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1e71c:	cmp	r3, #0
   1e720:	beq	1e730 <__assert_fail@plt+0xd4c0>
   1e724:	ldr	r3, [fp, #-8]
   1e728:	rsb	r3, r3, #0
   1e72c:	b	1e734 <__assert_fail@plt+0xd4c4>
   1e730:	ldr	r3, [fp, #-8]
   1e734:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1e738:	str	r3, [r2, #4]
   1e73c:	sub	sp, fp, #4
   1e740:	pop	{fp, pc}
   1e744:	andeq	r0, r4, r0, lsl #30
   1e748:	muleq	r0, ip, pc	; <UNPREDICTABLE>
   1e74c:	andeq	r0, r4, r8, asr #12
   1e750:			; <UNDEFINED> instruction: 0x00040abc
   1e754:	push	{fp}		; (str fp, [sp, #-4]!)
   1e758:	add	fp, sp, #0
   1e75c:	sub	sp, sp, #28
   1e760:	str	r0, [fp, #-24]	; 0xffffffe8
   1e764:	mov	r3, #16
   1e768:	str	r3, [fp, #-12]
   1e76c:	mov	r3, #0
   1e770:	str	r3, [fp, #-8]
   1e774:	b	1e820 <__assert_fail@plt+0xd5b0>
   1e778:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e77c:	lsr	r2, r3, #1
   1e780:	ldr	r3, [pc, #184]	; 1e840 <__assert_fail@plt+0xd5d0>
   1e784:	and	r3, r3, r2
   1e788:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1e78c:	sub	r3, r2, r3
   1e790:	str	r3, [fp, #-16]
   1e794:	ldr	r3, [fp, #-16]
   1e798:	lsr	r3, r3, #2
   1e79c:	ldr	r2, [pc, #160]	; 1e844 <__assert_fail@plt+0xd5d4>
   1e7a0:	and	r2, r2, r3
   1e7a4:	ldr	r1, [fp, #-16]
   1e7a8:	ldr	r3, [pc, #148]	; 1e844 <__assert_fail@plt+0xd5d4>
   1e7ac:	and	r3, r3, r1
   1e7b0:	add	r3, r2, r3
   1e7b4:	str	r3, [fp, #-16]
   1e7b8:	ldr	r3, [fp, #-16]
   1e7bc:	lsr	r3, r3, #4
   1e7c0:	ldr	r2, [fp, #-16]
   1e7c4:	add	r3, r2, r3
   1e7c8:	str	r3, [fp, #-16]
   1e7cc:	ldr	r3, [fp, #-16]
   1e7d0:	lsr	r3, r3, #8
   1e7d4:	and	r2, r3, #15
   1e7d8:	ldr	r3, [fp, #-16]
   1e7dc:	and	r3, r3, #15
   1e7e0:	add	r3, r2, r3
   1e7e4:	str	r3, [fp, #-16]
   1e7e8:	ldr	r2, [fp, #-8]
   1e7ec:	ldr	r3, [fp, #-16]
   1e7f0:	add	r3, r2, r3
   1e7f4:	str	r3, [fp, #-8]
   1e7f8:	ldr	r3, [fp, #-12]
   1e7fc:	cmp	r3, #31
   1e800:	bhi	1e818 <__assert_fail@plt+0xd5a8>
   1e804:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1e808:	ldr	r3, [fp, #-12]
   1e80c:	lsr	r3, r2, r3
   1e810:	str	r3, [fp, #-24]	; 0xffffffe8
   1e814:	b	1e820 <__assert_fail@plt+0xd5b0>
   1e818:	mov	r3, #0
   1e81c:	str	r3, [fp, #-24]	; 0xffffffe8
   1e820:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e824:	cmp	r3, #0
   1e828:	bne	1e778 <__assert_fail@plt+0xd508>
   1e82c:	ldr	r3, [fp, #-8]
   1e830:	mov	r0, r3
   1e834:	add	sp, fp, #0
   1e838:	pop	{fp}		; (ldr fp, [sp], #4)
   1e83c:	bx	lr
   1e840:	andeq	r5, r0, r5, asr r5
   1e844:	andeq	r3, r0, r3, lsr r3
   1e848:	push	{fp, lr}
   1e84c:	add	fp, sp, #4
   1e850:	sub	sp, sp, #16
   1e854:	str	r0, [fp, #-16]
   1e858:	str	r1, [fp, #-20]	; 0xffffffec
   1e85c:	mov	r3, #0
   1e860:	str	r3, [fp, #-12]
   1e864:	mov	r3, #0
   1e868:	str	r3, [fp, #-8]
   1e86c:	b	1e8a8 <__assert_fail@plt+0xd638>
   1e870:	ldr	r3, [fp, #-8]
   1e874:	lsl	r3, r3, #2
   1e878:	ldr	r2, [fp, #-16]
   1e87c:	add	r3, r2, r3
   1e880:	ldr	r3, [r3]
   1e884:	mov	r0, r3
   1e888:	bl	1e754 <__assert_fail@plt+0xd4e4>
   1e88c:	mov	r2, r0
   1e890:	ldr	r3, [fp, #-12]
   1e894:	add	r3, r3, r2
   1e898:	str	r3, [fp, #-12]
   1e89c:	ldr	r3, [fp, #-8]
   1e8a0:	add	r3, r3, #1
   1e8a4:	str	r3, [fp, #-8]
   1e8a8:	ldr	r2, [fp, #-8]
   1e8ac:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e8b0:	cmp	r2, r3
   1e8b4:	blt	1e870 <__assert_fail@plt+0xd600>
   1e8b8:	ldr	r3, [fp, #-12]
   1e8bc:	mov	r0, r3
   1e8c0:	sub	sp, fp, #4
   1e8c4:	pop	{fp, pc}
   1e8c8:	push	{fp, lr}
   1e8cc:	add	fp, sp, #4
   1e8d0:	sub	sp, sp, #16
   1e8d4:	str	r0, [fp, #-16]
   1e8d8:	ldr	r3, [fp, #-16]
   1e8dc:	ldr	r3, [r3, #4]
   1e8e0:	str	r3, [fp, #-8]
   1e8e4:	ldr	r3, [fp, #-8]
   1e8e8:	cmp	r3, #0
   1e8ec:	bge	1e8f8 <__assert_fail@plt+0xd688>
   1e8f0:	mvn	r3, #0
   1e8f4:	b	1e910 <__assert_fail@plt+0xd6a0>
   1e8f8:	ldr	r3, [fp, #-16]
   1e8fc:	ldr	r3, [r3, #8]
   1e900:	ldr	r1, [fp, #-8]
   1e904:	mov	r0, r3
   1e908:	bl	1e848 <__assert_fail@plt+0xd5d8>
   1e90c:	mov	r3, r0
   1e910:	mov	r0, r3
   1e914:	sub	sp, fp, #4
   1e918:	pop	{fp, pc}
   1e91c:	push	{fp, lr}
   1e920:	add	fp, sp, #4
   1e924:	sub	sp, sp, #64	; 0x40
   1e928:	str	r0, [fp, #-64]	; 0xffffffc0
   1e92c:	str	r1, [fp, #-68]	; 0xffffffbc
   1e930:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1e934:	ldr	r3, [r3, #4]
   1e938:	str	r3, [fp, #-8]
   1e93c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1e940:	ldr	r3, [r3, #4]
   1e944:	str	r3, [fp, #-12]
   1e948:	ldr	r2, [fp, #-8]
   1e94c:	ldr	r3, [fp, #-12]
   1e950:	eor	r3, r3, r2
   1e954:	cmp	r3, #0
   1e958:	bge	1e964 <__assert_fail@plt+0xd6f4>
   1e95c:	mvn	r3, #0
   1e960:	b	1eba8 <__assert_fail@plt+0xd938>
   1e964:	ldr	r3, [fp, #-8]
   1e968:	lsr	r3, r3, #31
   1e96c:	uxtb	r3, r3
   1e970:	str	r3, [fp, #-24]	; 0xffffffe8
   1e974:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1e978:	str	r3, [fp, #-20]	; 0xffffffec
   1e97c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e980:	rsb	r3, r3, #0
   1e984:	str	r3, [fp, #-40]	; 0xffffffd8
   1e988:	ldr	r3, [fp, #-20]	; 0xffffffec
   1e98c:	cmp	r3, #0
   1e990:	beq	1e9cc <__assert_fail@plt+0xd75c>
   1e994:	ldr	r3, [fp, #-12]
   1e998:	cmp	r3, #0
   1e99c:	blt	1e9b4 <__assert_fail@plt+0xd744>
   1e9a0:	ldr	r3, [pc, #524]	; 1ebb4 <__assert_fail@plt+0xd944>
   1e9a4:	ldr	r2, [pc, #524]	; 1ebb8 <__assert_fail@plt+0xd948>
   1e9a8:	ldr	r1, [pc, #524]	; 1ebbc <__assert_fail@plt+0xd94c>
   1e9ac:	ldr	r0, [pc, #524]	; 1ebc0 <__assert_fail@plt+0xd950>
   1e9b0:	bl	11270 <__assert_fail@plt>
   1e9b4:	ldr	r3, [fp, #-8]
   1e9b8:	rsb	r3, r3, #0
   1e9bc:	str	r3, [fp, #-8]
   1e9c0:	ldr	r3, [fp, #-12]
   1e9c4:	rsb	r3, r3, #0
   1e9c8:	str	r3, [fp, #-12]
   1e9cc:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1e9d0:	ldr	r3, [r3, #8]
   1e9d4:	str	r3, [fp, #-28]	; 0xffffffe4
   1e9d8:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1e9dc:	ldr	r3, [r3, #8]
   1e9e0:	str	r3, [fp, #-32]	; 0xffffffe0
   1e9e4:	ldr	r2, [fp, #-8]
   1e9e8:	ldr	r3, [fp, #-12]
   1e9ec:	cmp	r2, r3
   1e9f0:	bge	1ea24 <__assert_fail@plt+0xd7b4>
   1e9f4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1e9f8:	str	r3, [fp, #-44]	; 0xffffffd4
   1e9fc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1ea00:	str	r3, [fp, #-28]	; 0xffffffe4
   1ea04:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1ea08:	str	r3, [fp, #-32]	; 0xffffffe0
   1ea0c:	ldr	r3, [fp, #-8]
   1ea10:	str	r3, [fp, #-48]	; 0xffffffd0
   1ea14:	ldr	r3, [fp, #-12]
   1ea18:	str	r3, [fp, #-8]
   1ea1c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1ea20:	str	r3, [fp, #-12]
   1ea24:	mov	r3, #0
   1ea28:	str	r3, [fp, #-16]
   1ea2c:	mov	r3, #0
   1ea30:	str	r3, [fp, #-36]	; 0xffffffdc
   1ea34:	b	1eaf0 <__assert_fail@plt+0xd880>
   1ea38:	ldr	r3, [fp, #-16]
   1ea3c:	lsl	r3, r3, #2
   1ea40:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1ea44:	add	r3, r2, r3
   1ea48:	ldr	r2, [r3]
   1ea4c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1ea50:	eor	r2, r2, r3
   1ea54:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ea58:	add	r3, r2, r3
   1ea5c:	str	r3, [fp, #-52]	; 0xffffffcc
   1ea60:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1ea64:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ea68:	cmp	r2, r3
   1ea6c:	movcc	r3, #1
   1ea70:	movcs	r3, #0
   1ea74:	uxtb	r3, r3
   1ea78:	str	r3, [fp, #-20]	; 0xffffffec
   1ea7c:	ldr	r3, [fp, #-16]
   1ea80:	lsl	r3, r3, #2
   1ea84:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1ea88:	add	r3, r2, r3
   1ea8c:	ldr	r2, [r3]
   1ea90:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1ea94:	eor	r2, r2, r3
   1ea98:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ea9c:	add	r3, r2, r3
   1eaa0:	str	r3, [fp, #-56]	; 0xffffffc8
   1eaa4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1eaa8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1eaac:	cmp	r2, r3
   1eab0:	movcc	r3, #1
   1eab4:	movcs	r3, #0
   1eab8:	uxtb	r3, r3
   1eabc:	str	r3, [fp, #-24]	; 0xffffffe8
   1eac0:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1eac4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1eac8:	eor	r3, r3, r2
   1eacc:	mov	r0, r3
   1ead0:	bl	1e754 <__assert_fail@plt+0xd4e4>
   1ead4:	mov	r2, r0
   1ead8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1eadc:	add	r3, r3, r2
   1eae0:	str	r3, [fp, #-36]	; 0xffffffdc
   1eae4:	ldr	r3, [fp, #-16]
   1eae8:	add	r3, r3, #1
   1eaec:	str	r3, [fp, #-16]
   1eaf0:	ldr	r2, [fp, #-16]
   1eaf4:	ldr	r3, [fp, #-12]
   1eaf8:	cmp	r2, r3
   1eafc:	blt	1ea38 <__assert_fail@plt+0xd7c8>
   1eb00:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1eb04:	cmp	r3, #0
   1eb08:	beq	1eb94 <__assert_fail@plt+0xd924>
   1eb0c:	ldr	r3, [pc, #160]	; 1ebb4 <__assert_fail@plt+0xd944>
   1eb10:	ldr	r2, [pc, #172]	; 1ebc4 <__assert_fail@plt+0xd954>
   1eb14:	ldr	r1, [pc, #160]	; 1ebbc <__assert_fail@plt+0xd94c>
   1eb18:	ldr	r0, [pc, #168]	; 1ebc8 <__assert_fail@plt+0xd958>
   1eb1c:	bl	11270 <__assert_fail@plt>
   1eb20:	ldr	r3, [fp, #-16]
   1eb24:	lsl	r3, r3, #2
   1eb28:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1eb2c:	add	r3, r2, r3
   1eb30:	ldr	r2, [r3]
   1eb34:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1eb38:	eor	r2, r2, r3
   1eb3c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1eb40:	add	r3, r2, r3
   1eb44:	str	r3, [fp, #-52]	; 0xffffffcc
   1eb48:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1eb4c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1eb50:	cmp	r2, r3
   1eb54:	movcc	r3, #1
   1eb58:	movcs	r3, #0
   1eb5c:	uxtb	r3, r3
   1eb60:	str	r3, [fp, #-20]	; 0xffffffec
   1eb64:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1eb68:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1eb6c:	eor	r3, r3, r2
   1eb70:	mov	r0, r3
   1eb74:	bl	1e754 <__assert_fail@plt+0xd4e4>
   1eb78:	mov	r2, r0
   1eb7c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1eb80:	add	r3, r3, r2
   1eb84:	str	r3, [fp, #-36]	; 0xffffffdc
   1eb88:	ldr	r3, [fp, #-16]
   1eb8c:	add	r3, r3, #1
   1eb90:	str	r3, [fp, #-16]
   1eb94:	ldr	r2, [fp, #-16]
   1eb98:	ldr	r3, [fp, #-8]
   1eb9c:	cmp	r2, r3
   1eba0:	blt	1eb20 <__assert_fail@plt+0xd8b0>
   1eba4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1eba8:	mov	r0, r3
   1ebac:	sub	sp, fp, #4
   1ebb0:	pop	{fp, pc}
   1ebb4:	andeq	r0, r4, r8, lsl #30
   1ebb8:	andeq	r0, r0, pc, ror #31
   1ebbc:	andeq	r0, r4, r8, asr #12
   1ebc0:	andeq	r0, r4, r4, asr #21
   1ebc4:	andeq	r1, r0, r4
   1ebc8:			; <UNDEFINED> instruction: 0x00040abc
   1ebcc:	push	{fp, lr}
   1ebd0:	add	fp, sp, #4
   1ebd4:	sub	sp, sp, #40	; 0x28
   1ebd8:	str	r0, [fp, #-32]	; 0xffffffe0
   1ebdc:	str	r1, [fp, #-36]	; 0xffffffdc
   1ebe0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1ebe4:	ldr	r3, [r3, #4]
   1ebe8:	str	r3, [fp, #-16]
   1ebec:	ldr	r3, [fp, #-16]
   1ebf0:	cmp	r3, #0
   1ebf4:	rsblt	r3, r3, #0
   1ebf8:	str	r3, [fp, #-20]	; 0xffffffec
   1ebfc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1ec00:	lsr	r3, r3, #5
   1ec04:	str	r3, [fp, #-24]	; 0xffffffe8
   1ec08:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1ec0c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ec10:	cmp	r2, r3
   1ec14:	blt	1ec34 <__assert_fail@plt+0xd9c4>
   1ec18:	ldr	r3, [fp, #-16]
   1ec1c:	cmp	r3, #0
   1ec20:	bge	1ec2c <__assert_fail@plt+0xd9bc>
   1ec24:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1ec28:	b	1ecfc <__assert_fail@plt+0xda8c>
   1ec2c:	mvn	r3, #0
   1ec30:	b	1ecfc <__assert_fail@plt+0xda8c>
   1ec34:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1ec38:	ldr	r3, [r3, #8]
   1ec3c:	str	r3, [fp, #-28]	; 0xffffffe4
   1ec40:	mov	r3, #0
   1ec44:	str	r3, [fp, #-12]
   1ec48:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ec4c:	lsl	r3, r3, #2
   1ec50:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1ec54:	add	r3, r2, r3
   1ec58:	ldr	r3, [r3]
   1ec5c:	str	r3, [fp, #-8]
   1ec60:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1ec64:	cmp	r3, #0
   1ec68:	beq	1ecdc <__assert_fail@plt+0xda6c>
   1ec6c:	ldr	r3, [fp, #-16]
   1ec70:	cmp	r3, #0
   1ec74:	bge	1ecc0 <__assert_fail@plt+0xda50>
   1ec78:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ec7c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1ec80:	bl	13c6c <__assert_fail@plt+0x29fc>
   1ec84:	mov	r3, r0
   1ec88:	str	r3, [fp, #-12]
   1ec8c:	ldr	r2, [fp, #-12]
   1ec90:	ldr	r3, [fp, #-8]
   1ec94:	sub	r3, r2, r3
   1ec98:	sub	r3, r3, #1
   1ec9c:	str	r3, [fp, #-8]
   1eca0:	ldr	r2, [fp, #-8]
   1eca4:	ldr	r3, [fp, #-12]
   1eca8:	cmp	r2, r3
   1ecac:	movcs	r3, #1
   1ecb0:	movcc	r3, #0
   1ecb4:	uxtb	r3, r3
   1ecb8:	rsb	r3, r3, #0
   1ecbc:	str	r3, [fp, #-12]
   1ecc0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1ecc4:	and	r3, r3, #31
   1ecc8:	mvn	r2, #0
   1eccc:	lsl	r3, r2, r3
   1ecd0:	ldr	r2, [fp, #-8]
   1ecd4:	and	r3, r3, r2
   1ecd8:	str	r3, [fp, #-8]
   1ecdc:	ldr	r3, [fp, #-12]
   1ece0:	str	r3, [sp]
   1ece4:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ece8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1ecec:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ecf0:	ldr	r0, [fp, #-8]
   1ecf4:	bl	14d88 <__assert_fail@plt+0x3b18>
   1ecf8:	mov	r3, r0
   1ecfc:	mov	r0, r3
   1ed00:	sub	sp, fp, #4
   1ed04:	pop	{fp, pc}
   1ed08:	push	{fp, lr}
   1ed0c:	add	fp, sp, #4
   1ed10:	sub	sp, sp, #40	; 0x28
   1ed14:	str	r0, [fp, #-32]	; 0xffffffe0
   1ed18:	str	r1, [fp, #-36]	; 0xffffffdc
   1ed1c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1ed20:	ldr	r3, [r3, #4]
   1ed24:	str	r3, [fp, #-12]
   1ed28:	ldr	r3, [fp, #-12]
   1ed2c:	mvn	r3, r3
   1ed30:	lsr	r3, r3, #31
   1ed34:	uxtb	r3, r3
   1ed38:	rsb	r3, r3, #0
   1ed3c:	str	r3, [fp, #-16]
   1ed40:	ldr	r3, [fp, #-12]
   1ed44:	cmp	r3, #0
   1ed48:	rsblt	r3, r3, #0
   1ed4c:	str	r3, [fp, #-20]	; 0xffffffec
   1ed50:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1ed54:	lsr	r3, r3, #5
   1ed58:	str	r3, [fp, #-24]	; 0xffffffe8
   1ed5c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1ed60:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ed64:	cmp	r2, r3
   1ed68:	blt	1ed88 <__assert_fail@plt+0xdb18>
   1ed6c:	ldr	r3, [fp, #-16]
   1ed70:	cmp	r3, #0
   1ed74:	beq	1ed80 <__assert_fail@plt+0xdb10>
   1ed78:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1ed7c:	b	1ee1c <__assert_fail@plt+0xdbac>
   1ed80:	mvn	r3, #0
   1ed84:	b	1ee1c <__assert_fail@plt+0xdbac>
   1ed88:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1ed8c:	ldr	r3, [r3, #8]
   1ed90:	str	r3, [fp, #-28]	; 0xffffffe4
   1ed94:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ed98:	lsl	r3, r3, #2
   1ed9c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1eda0:	add	r3, r2, r3
   1eda4:	ldr	r2, [r3]
   1eda8:	ldr	r3, [fp, #-16]
   1edac:	eor	r3, r3, r2
   1edb0:	str	r3, [fp, #-8]
   1edb4:	ldr	r3, [fp, #-16]
   1edb8:	cmp	r3, #0
   1edbc:	bne	1ede0 <__assert_fail@plt+0xdb70>
   1edc0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1edc4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1edc8:	bl	13c6c <__assert_fail@plt+0x29fc>
   1edcc:	mov	r3, r0
   1edd0:	mov	r2, r3
   1edd4:	ldr	r3, [fp, #-8]
   1edd8:	sub	r3, r3, r2
   1eddc:	str	r3, [fp, #-8]
   1ede0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1ede4:	and	r3, r3, #31
   1ede8:	mvn	r2, #0
   1edec:	lsl	r3, r2, r3
   1edf0:	ldr	r2, [fp, #-8]
   1edf4:	and	r3, r3, r2
   1edf8:	str	r3, [fp, #-8]
   1edfc:	ldr	r3, [fp, #-16]
   1ee00:	str	r3, [sp]
   1ee04:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ee08:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1ee0c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1ee10:	ldr	r0, [fp, #-8]
   1ee14:	bl	14d88 <__assert_fail@plt+0x3b18>
   1ee18:	mov	r3, r0
   1ee1c:	mov	r0, r3
   1ee20:	sub	sp, fp, #4
   1ee24:	pop	{fp, pc}
   1ee28:	push	{r4, fp, lr}
   1ee2c:	add	fp, sp, #8
   1ee30:	sub	sp, sp, #52	; 0x34
   1ee34:	str	r0, [fp, #-56]	; 0xffffffc8
   1ee38:	str	r1, [fp, #-60]	; 0xffffffc4
   1ee3c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1ee40:	cmp	r3, #1
   1ee44:	bgt	1ee5c <__assert_fail@plt+0xdbec>
   1ee48:	ldr	r3, [pc, #576]	; 1f090 <__assert_fail@plt+0xde20>
   1ee4c:	ldr	r2, [pc, #576]	; 1f094 <__assert_fail@plt+0xde24>
   1ee50:	ldr	r1, [pc, #576]	; 1f098 <__assert_fail@plt+0xde28>
   1ee54:	ldr	r0, [pc, #576]	; 1f09c <__assert_fail@plt+0xde2c>
   1ee58:	bl	11270 <__assert_fail@plt>
   1ee5c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1ee60:	cmp	r3, #62	; 0x3e
   1ee64:	ble	1ee7c <__assert_fail@plt+0xdc0c>
   1ee68:	ldr	r3, [pc, #544]	; 1f090 <__assert_fail@plt+0xde20>
   1ee6c:	ldr	r2, [pc, #556]	; 1f0a0 <__assert_fail@plt+0xde30>
   1ee70:	ldr	r1, [pc, #544]	; 1f098 <__assert_fail@plt+0xde28>
   1ee74:	ldr	r0, [pc, #552]	; 1f0a4 <__assert_fail@plt+0xde34>
   1ee78:	bl	11270 <__assert_fail@plt>
   1ee7c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1ee80:	ldr	r3, [r3, #4]
   1ee84:	cmp	r3, #0
   1ee88:	rsblt	r3, r3, #0
   1ee8c:	str	r3, [fp, #-24]	; 0xffffffe8
   1ee90:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ee94:	cmp	r3, #0
   1ee98:	bne	1eea4 <__assert_fail@plt+0xdc34>
   1ee9c:	mov	r3, #1
   1eea0:	b	1f084 <__assert_fail@plt+0xde14>
   1eea4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1eea8:	ldr	r3, [r3, #8]
   1eeac:	str	r3, [fp, #-28]	; 0xffffffe4
   1eeb0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1eeb4:	sub	r3, r3, #1
   1eeb8:	lsl	r4, r3, #5
   1eebc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1eec0:	sub	r3, r3, #-1073741823	; 0xc0000001
   1eec4:	lsl	r3, r3, #2
   1eec8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1eecc:	add	r3, r2, r3
   1eed0:	ldr	r3, [r3]
   1eed4:	mov	r0, r3
   1eed8:	bl	16e54 <__assert_fail@plt+0x5be4>
   1eedc:	mov	r3, r0
   1eee0:	add	r3, r4, r3
   1eee4:	str	r3, [fp, #-32]	; 0xffffffe0
   1eee8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1eeec:	sub	r3, r3, #2
   1eef0:	cmp	r3, #30
   1eef4:	ldrls	pc, [pc, r3, lsl #2]
   1eef8:	b	1efd0 <__assert_fail@plt+0xdd60>
   1eefc:	andeq	lr, r1, r8, ror pc
   1ef00:	ldrdeq	lr, [r1], -r0
   1ef04:	andeq	lr, r1, r0, lsl #31
   1ef08:	ldrdeq	lr, [r1], -r0
   1ef0c:	ldrdeq	lr, [r1], -r0
   1ef10:	ldrdeq	lr, [r1], -r0
   1ef14:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   1ef18:	ldrdeq	lr, [r1], -r0
   1ef1c:	ldrdeq	lr, [r1], -r0
   1ef20:	ldrdeq	lr, [r1], -r0
   1ef24:	ldrdeq	lr, [r1], -r0
   1ef28:	ldrdeq	lr, [r1], -r0
   1ef2c:	ldrdeq	lr, [r1], -r0
   1ef30:	ldrdeq	lr, [r1], -r0
   1ef34:	andeq	lr, r1, r8, lsr #31
   1ef38:	ldrdeq	lr, [r1], -r0
   1ef3c:	ldrdeq	lr, [r1], -r0
   1ef40:	ldrdeq	lr, [r1], -r0
   1ef44:	ldrdeq	lr, [r1], -r0
   1ef48:	ldrdeq	lr, [r1], -r0
   1ef4c:	ldrdeq	lr, [r1], -r0
   1ef50:	ldrdeq	lr, [r1], -r0
   1ef54:	ldrdeq	lr, [r1], -r0
   1ef58:	ldrdeq	lr, [r1], -r0
   1ef5c:	ldrdeq	lr, [r1], -r0
   1ef60:	ldrdeq	lr, [r1], -r0
   1ef64:	ldrdeq	lr, [r1], -r0
   1ef68:	ldrdeq	lr, [r1], -r0
   1ef6c:	ldrdeq	lr, [r1], -r0
   1ef70:	ldrdeq	lr, [r1], -r0
   1ef74:			; <UNDEFINED> instruction: 0x0001efb8
   1ef78:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1ef7c:	b	1f084 <__assert_fail@plt+0xde14>
   1ef80:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1ef84:	add	r3, r3, #1
   1ef88:	lsr	r3, r3, #1
   1ef8c:	b	1f084 <__assert_fail@plt+0xde14>
   1ef90:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1ef94:	add	r3, r3, #2
   1ef98:	ldr	r2, [pc, #264]	; 1f0a8 <__assert_fail@plt+0xde38>
   1ef9c:	umull	r2, r3, r2, r3
   1efa0:	lsr	r3, r3, #1
   1efa4:	b	1f084 <__assert_fail@plt+0xde14>
   1efa8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1efac:	add	r3, r3, #3
   1efb0:	lsr	r3, r3, #2
   1efb4:	b	1f084 <__assert_fail@plt+0xde14>
   1efb8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1efbc:	add	r3, r3, #4
   1efc0:	ldr	r2, [pc, #228]	; 1f0ac <__assert_fail@plt+0xde3c>
   1efc4:	umull	r2, r3, r2, r3
   1efc8:	lsr	r3, r3, #2
   1efcc:	b	1f084 <__assert_fail@plt+0xde14>
   1efd0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1efd4:	bl	1390c <__assert_fail@plt+0x269c>
   1efd8:	str	r0, [fp, #-36]	; 0xffffffdc
   1efdc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1efe0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1efe4:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1efe8:	bl	13a00 <__assert_fail@plt+0x2790>
   1efec:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1eff0:	sub	r3, fp, #52	; 0x34
   1eff4:	mov	r1, r2
   1eff8:	mov	r0, r3
   1effc:	bl	1552c <__assert_fail@plt+0x42bc>
   1f000:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f004:	str	r3, [fp, #-16]
   1f008:	mov	r3, #0
   1f00c:	str	r3, [fp, #-20]	; 0xffffffec
   1f010:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f014:	add	r3, r3, #1
   1f018:	str	r3, [fp, #-20]	; 0xffffffec
   1f01c:	sub	r3, fp, #52	; 0x34
   1f020:	ldr	r2, [fp, #-16]
   1f024:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1f028:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1f02c:	bl	159c0 <__assert_fail@plt+0x4750>
   1f030:	ldr	r3, [fp, #-16]
   1f034:	sub	r3, r3, #-1073741823	; 0xc0000001
   1f038:	lsl	r3, r3, #2
   1f03c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1f040:	add	r3, r2, r3
   1f044:	ldr	r3, [r3]
   1f048:	cmp	r3, #0
   1f04c:	moveq	r3, #1
   1f050:	movne	r3, #0
   1f054:	uxtb	r3, r3
   1f058:	mov	r2, r3
   1f05c:	ldr	r3, [fp, #-16]
   1f060:	sub	r3, r3, r2
   1f064:	str	r3, [fp, #-16]
   1f068:	ldr	r3, [fp, #-16]
   1f06c:	cmp	r3, #0
   1f070:	bgt	1f010 <__assert_fail@plt+0xdda0>
   1f074:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1f078:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1f07c:	bl	139c0 <__assert_fail@plt+0x2750>
   1f080:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f084:	mov	r0, r3
   1f088:	sub	sp, fp, #8
   1f08c:	pop	{r4, fp, pc}
   1f090:	andeq	r0, r4, r4, lsl pc
   1f094:	andeq	r1, r0, pc, asr r0
   1f098:	andeq	r0, r4, r8, asr #12
   1f09c:	andeq	r0, r4, ip, asr #21
   1f0a0:	andeq	r1, r0, r0, rrx
   1f0a4:	ldrdeq	r0, [r4], -r8
   1f0a8:	bge	feac9b5c <opterr@@GLIBC_2.4+0xfea779cc>
   1f0ac:	stclgt	12, cr12, [ip], {205}	; 0xcd
   1f0b0:	push	{fp, lr}
   1f0b4:	add	fp, sp, #4
   1f0b8:	sub	sp, sp, #64	; 0x40
   1f0bc:	str	r0, [fp, #-48]	; 0xffffffd0
   1f0c0:	str	r1, [fp, #-52]	; 0xffffffcc
   1f0c4:	str	r2, [fp, #-56]	; 0xffffffc8
   1f0c8:	ldr	r3, [pc, #680]	; 1f378 <__assert_fail@plt+0xe108>
   1f0cc:	str	r3, [fp, #-8]
   1f0d0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1f0d4:	cmp	r3, #1
   1f0d8:	ble	1f108 <__assert_fail@plt+0xde98>
   1f0dc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1f0e0:	cmp	r3, #36	; 0x24
   1f0e4:	bgt	1f0f4 <__assert_fail@plt+0xde84>
   1f0e8:	ldr	r3, [pc, #652]	; 1f37c <__assert_fail@plt+0xe10c>
   1f0ec:	str	r3, [fp, #-8]
   1f0f0:	b	1f140 <__assert_fail@plt+0xded0>
   1f0f4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1f0f8:	cmp	r3, #62	; 0x3e
   1f0fc:	ble	1f140 <__assert_fail@plt+0xded0>
   1f100:	mov	r3, #0
   1f104:	b	1f36c <__assert_fail@plt+0xe0fc>
   1f108:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1f10c:	cmn	r3, #1
   1f110:	blt	1f120 <__assert_fail@plt+0xdeb0>
   1f114:	mov	r3, #10
   1f118:	str	r3, [fp, #-52]	; 0xffffffcc
   1f11c:	b	1f140 <__assert_fail@plt+0xded0>
   1f120:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1f124:	rsb	r3, r3, #0
   1f128:	str	r3, [fp, #-52]	; 0xffffffcc
   1f12c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1f130:	cmp	r3, #36	; 0x24
   1f134:	ble	1f140 <__assert_fail@plt+0xded0>
   1f138:	mov	r3, #0
   1f13c:	b	1f36c <__assert_fail@plt+0xe0fc>
   1f140:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1f144:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1f148:	bl	1ee28 <__assert_fail@plt+0xdbb8>
   1f14c:	mov	r3, r0
   1f150:	add	r3, r3, #1
   1f154:	str	r3, [fp, #-16]
   1f158:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1f15c:	cmp	r3, #0
   1f160:	bne	1f188 <__assert_fail@plt+0xdf18>
   1f164:	ldr	r3, [fp, #-16]
   1f168:	add	r3, r3, #1
   1f16c:	str	r3, [fp, #-20]	; 0xffffffec
   1f170:	ldr	r3, [pc, #520]	; 1f380 <__assert_fail@plt+0xe110>
   1f174:	ldr	r3, [r3]
   1f178:	ldr	r0, [fp, #-20]	; 0xffffffec
   1f17c:	blx	r3
   1f180:	str	r0, [fp, #-48]	; 0xffffffd0
   1f184:	b	1f190 <__assert_fail@plt+0xdf20>
   1f188:	mov	r3, #0
   1f18c:	str	r3, [fp, #-20]	; 0xffffffec
   1f190:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1f194:	ldr	r3, [r3, #4]
   1f198:	cmp	r3, #0
   1f19c:	rsblt	r3, r3, #0
   1f1a0:	str	r3, [fp, #-24]	; 0xffffffe8
   1f1a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f1a8:	cmp	r3, #0
   1f1ac:	bne	1f1c8 <__assert_fail@plt+0xdf58>
   1f1b0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1f1b4:	mov	r2, #48	; 0x30
   1f1b8:	strb	r2, [r3]
   1f1bc:	mov	r3, #1
   1f1c0:	str	r3, [fp, #-16]
   1f1c4:	b	1f314 <__assert_fail@plt+0xe0a4>
   1f1c8:	mov	r3, #0
   1f1cc:	str	r3, [fp, #-12]
   1f1d0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1f1d4:	ldr	r3, [r3, #4]
   1f1d8:	cmp	r3, #0
   1f1dc:	bge	1f1fc <__assert_fail@plt+0xdf8c>
   1f1e0:	ldr	r3, [fp, #-12]
   1f1e4:	add	r2, r3, #1
   1f1e8:	str	r2, [fp, #-12]
   1f1ec:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1f1f0:	add	r3, r2, r3
   1f1f4:	mov	r2, #45	; 0x2d
   1f1f8:	strb	r2, [r3]
   1f1fc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1f200:	mov	r0, r3
   1f204:	bl	16d04 <__assert_fail@plt+0x5a94>
   1f208:	str	r0, [fp, #-28]	; 0xffffffe4
   1f20c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1f210:	cmp	r3, #0
   1f214:	beq	1f24c <__assert_fail@plt+0xdfdc>
   1f218:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1f21c:	ldr	r3, [fp, #-12]
   1f220:	add	r0, r2, r3
   1f224:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1f228:	ldr	r2, [r3, #8]
   1f22c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f230:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1f234:	bl	16f2c <__assert_fail@plt+0x5cbc>
   1f238:	mov	r2, r0
   1f23c:	ldr	r3, [fp, #-12]
   1f240:	add	r3, r2, r3
   1f244:	str	r3, [fp, #-16]
   1f248:	b	1f304 <__assert_fail@plt+0xe094>
   1f24c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1f250:	sub	r3, fp, #40	; 0x28
   1f254:	mov	r1, r2
   1f258:	mov	r0, r3
   1f25c:	bl	16dc8 <__assert_fail@plt+0x5b58>
   1f260:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1f264:	bl	1390c <__assert_fail@plt+0x269c>
   1f268:	str	r0, [fp, #-32]	; 0xffffffe0
   1f26c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1f270:	ldr	r3, [r3, #8]
   1f274:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1f278:	mov	r1, r3
   1f27c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1f280:	bl	13a00 <__assert_fail@plt+0x2790>
   1f284:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1f288:	ldr	r3, [fp, #-12]
   1f28c:	add	r0, r2, r3
   1f290:	sub	r2, fp, #40	; 0x28
   1f294:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f298:	str	r3, [sp]
   1f29c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1f2a0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1f2a4:	bl	17384 <__assert_fail@plt+0x6114>
   1f2a8:	mov	r2, r0
   1f2ac:	ldr	r3, [fp, #-12]
   1f2b0:	add	r3, r2, r3
   1f2b4:	str	r3, [fp, #-16]
   1f2b8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1f2bc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1f2c0:	bl	139c0 <__assert_fail@plt+0x2750>
   1f2c4:	b	1f304 <__assert_fail@plt+0xe094>
   1f2c8:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1f2cc:	ldr	r3, [fp, #-12]
   1f2d0:	add	r3, r2, r3
   1f2d4:	ldr	r1, [fp, #-48]	; 0xffffffd0
   1f2d8:	ldr	r2, [fp, #-12]
   1f2dc:	add	r2, r1, r2
   1f2e0:	ldrb	r2, [r2]
   1f2e4:	mov	r1, r2
   1f2e8:	ldr	r2, [fp, #-8]
   1f2ec:	add	r2, r2, r1
   1f2f0:	ldrb	r2, [r2]
   1f2f4:	strb	r2, [r3]
   1f2f8:	ldr	r3, [fp, #-12]
   1f2fc:	add	r3, r3, #1
   1f300:	str	r3, [fp, #-12]
   1f304:	ldr	r2, [fp, #-12]
   1f308:	ldr	r3, [fp, #-16]
   1f30c:	cmp	r2, r3
   1f310:	bcc	1f2c8 <__assert_fail@plt+0xe058>
   1f314:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1f318:	ldr	r3, [fp, #-16]
   1f31c:	add	r3, r2, r3
   1f320:	mov	r2, #0
   1f324:	strb	r2, [r3]
   1f328:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f32c:	cmp	r3, #0
   1f330:	beq	1f368 <__assert_fail@plt+0xe0f8>
   1f334:	ldr	r3, [fp, #-16]
   1f338:	add	r2, r3, #1
   1f33c:	ldr	r3, [fp, #-20]	; 0xffffffec
   1f340:	cmp	r2, r3
   1f344:	beq	1f368 <__assert_fail@plt+0xe0f8>
   1f348:	ldr	r3, [pc, #52]	; 1f384 <__assert_fail@plt+0xe114>
   1f34c:	ldr	r3, [r3]
   1f350:	ldr	r2, [fp, #-16]
   1f354:	add	r2, r2, #1
   1f358:	ldr	r1, [fp, #-20]	; 0xffffffec
   1f35c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   1f360:	blx	r3
   1f364:	str	r0, [fp, #-48]	; 0xffffffd0
   1f368:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1f36c:	mov	r0, r3
   1f370:	sub	sp, fp, #4
   1f374:	pop	{fp, pc}
   1f378:	andeq	r0, r4, r4, ror #21
   1f37c:	andeq	r0, r4, r4, lsr #22
   1f380:	andeq	r2, r5, ip, lsr #2
   1f384:	andeq	r2, r5, r0, lsr r1
   1f388:	push	{fp, lr}
   1f38c:	add	fp, sp, #4
   1f390:	sub	sp, sp, #72	; 0x48
   1f394:	str	r0, [fp, #-56]	; 0xffffffc8
   1f398:	str	r1, [fp, #-60]	; 0xffffffc4
   1f39c:	str	r2, [fp, #-64]	; 0xffffffc0
   1f3a0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1f3a4:	cmp	r3, #0
   1f3a8:	beq	1f3e8 <__assert_fail@plt+0xe178>
   1f3ac:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1f3b0:	cmp	r3, #1
   1f3b4:	ble	1f3c4 <__assert_fail@plt+0xe154>
   1f3b8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1f3bc:	cmp	r3, #62	; 0x3e
   1f3c0:	ble	1f3d8 <__assert_fail@plt+0xe168>
   1f3c4:	ldr	r3, [pc, #1272]	; 1f8c4 <__assert_fail@plt+0xe654>
   1f3c8:	ldr	r2, [pc, #1272]	; 1f8c8 <__assert_fail@plt+0xe658>
   1f3cc:	ldr	r1, [pc, #1272]	; 1f8cc <__assert_fail@plt+0xe65c>
   1f3d0:	ldr	r0, [pc, #1272]	; 1f8d0 <__assert_fail@plt+0xe660>
   1f3d4:	bl	11270 <__assert_fail@plt>
   1f3d8:	b	1f3e8 <__assert_fail@plt+0xe178>
   1f3dc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1f3e0:	add	r3, r3, #1
   1f3e4:	str	r3, [fp, #-60]	; 0xffffffc4
   1f3e8:	bl	11150 <__ctype_b_loc@plt>
   1f3ec:	mov	r3, r0
   1f3f0:	ldr	r2, [r3]
   1f3f4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1f3f8:	ldrb	r3, [r3]
   1f3fc:	lsl	r3, r3, #1
   1f400:	add	r3, r2, r3
   1f404:	ldrh	r3, [r3]
   1f408:	and	r3, r3, #8192	; 0x2000
   1f40c:	cmp	r3, #0
   1f410:	bne	1f3dc <__assert_fail@plt+0xe16c>
   1f414:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1f418:	ldrb	r3, [r3]
   1f41c:	cmp	r3, #45	; 0x2d
   1f420:	moveq	r3, #1
   1f424:	movne	r3, #0
   1f428:	uxtb	r3, r3
   1f42c:	str	r3, [fp, #-24]	; 0xffffffe8
   1f430:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f434:	ldr	r2, [fp, #-60]	; 0xffffffc4
   1f438:	add	r3, r2, r3
   1f43c:	str	r3, [fp, #-60]	; 0xffffffc4
   1f440:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1f444:	cmp	r3, #0
   1f448:	bne	1f4f0 <__assert_fail@plt+0xe280>
   1f44c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1f450:	ldrb	r3, [r3]
   1f454:	cmp	r3, #48	; 0x30
   1f458:	bne	1f4e8 <__assert_fail@plt+0xe278>
   1f45c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1f460:	add	r3, r3, #1
   1f464:	ldrb	r3, [r3]
   1f468:	cmp	r3, #120	; 0x78
   1f46c:	beq	1f484 <__assert_fail@plt+0xe214>
   1f470:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1f474:	add	r3, r3, #1
   1f478:	ldrb	r3, [r3]
   1f47c:	cmp	r3, #88	; 0x58
   1f480:	bne	1f49c <__assert_fail@plt+0xe22c>
   1f484:	mov	r3, #16
   1f488:	str	r3, [fp, #-64]	; 0xffffffc0
   1f48c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1f490:	add	r3, r3, #2
   1f494:	str	r3, [fp, #-60]	; 0xffffffc4
   1f498:	b	1f4f0 <__assert_fail@plt+0xe280>
   1f49c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1f4a0:	add	r3, r3, #1
   1f4a4:	ldrb	r3, [r3]
   1f4a8:	cmp	r3, #98	; 0x62
   1f4ac:	beq	1f4c4 <__assert_fail@plt+0xe254>
   1f4b0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1f4b4:	add	r3, r3, #1
   1f4b8:	ldrb	r3, [r3]
   1f4bc:	cmp	r3, #66	; 0x42
   1f4c0:	bne	1f4dc <__assert_fail@plt+0xe26c>
   1f4c4:	mov	r3, #2
   1f4c8:	str	r3, [fp, #-64]	; 0xffffffc0
   1f4cc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1f4d0:	add	r3, r3, #2
   1f4d4:	str	r3, [fp, #-60]	; 0xffffffc4
   1f4d8:	b	1f4f0 <__assert_fail@plt+0xe280>
   1f4dc:	mov	r3, #8
   1f4e0:	str	r3, [fp, #-64]	; 0xffffffc0
   1f4e4:	b	1f4f0 <__assert_fail@plt+0xe280>
   1f4e8:	mov	r3, #10
   1f4ec:	str	r3, [fp, #-64]	; 0xffffffc0
   1f4f0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1f4f4:	ldrb	r3, [r3]
   1f4f8:	cmp	r3, #0
   1f4fc:	bne	1f514 <__assert_fail@plt+0xe2a4>
   1f500:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1f504:	mov	r2, #0
   1f508:	str	r2, [r3, #4]
   1f50c:	mvn	r3, #0
   1f510:	b	1f8b8 <__assert_fail@plt+0xe648>
   1f514:	ldr	r0, [fp, #-60]	; 0xffffffc4
   1f518:	bl	11174 <strlen@plt>
   1f51c:	str	r0, [fp, #-28]	; 0xffffffe4
   1f520:	ldr	r3, [pc, #940]	; 1f8d4 <__assert_fail@plt+0xe664>
   1f524:	ldr	r3, [r3]
   1f528:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1f52c:	blx	r3
   1f530:	str	r0, [fp, #-32]	; 0xffffffe0
   1f534:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1f538:	cmp	r3, #36	; 0x24
   1f53c:	ble	1f548 <__assert_fail@plt+0xe2d8>
   1f540:	mov	r3, #36	; 0x24
   1f544:	b	1f54c <__assert_fail@plt+0xe2dc>
   1f548:	mov	r3, #10
   1f54c:	str	r3, [fp, #-36]	; 0xffffffdc
   1f550:	mov	r3, #0
   1f554:	str	r3, [fp, #-16]
   1f558:	b	1f6a4 <__assert_fail@plt+0xe434>
   1f55c:	bl	11150 <__ctype_b_loc@plt>
   1f560:	mov	r3, r0
   1f564:	ldr	r2, [r3]
   1f568:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1f56c:	ldrb	r3, [r3]
   1f570:	lsl	r3, r3, #1
   1f574:	add	r3, r2, r3
   1f578:	ldrh	r3, [r3]
   1f57c:	and	r3, r3, #8192	; 0x2000
   1f580:	cmp	r3, #0
   1f584:	bne	1f694 <__assert_fail@plt+0xe424>
   1f588:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1f58c:	ldrb	r3, [r3]
   1f590:	cmp	r3, #47	; 0x2f
   1f594:	bls	1f5bc <__assert_fail@plt+0xe34c>
   1f598:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1f59c:	ldrb	r3, [r3]
   1f5a0:	cmp	r3, #57	; 0x39
   1f5a4:	bhi	1f5bc <__assert_fail@plt+0xe34c>
   1f5a8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1f5ac:	ldrb	r3, [r3]
   1f5b0:	sub	r3, r3, #48	; 0x30
   1f5b4:	str	r3, [fp, #-20]	; 0xffffffec
   1f5b8:	b	1f638 <__assert_fail@plt+0xe3c8>
   1f5bc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1f5c0:	ldrb	r3, [r3]
   1f5c4:	cmp	r3, #96	; 0x60
   1f5c8:	bls	1f5fc <__assert_fail@plt+0xe38c>
   1f5cc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1f5d0:	ldrb	r3, [r3]
   1f5d4:	cmp	r3, #122	; 0x7a
   1f5d8:	bhi	1f5fc <__assert_fail@plt+0xe38c>
   1f5dc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1f5e0:	ldrb	r3, [r3]
   1f5e4:	mov	r2, r3
   1f5e8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1f5ec:	add	r3, r2, r3
   1f5f0:	sub	r3, r3, #97	; 0x61
   1f5f4:	str	r3, [fp, #-20]	; 0xffffffec
   1f5f8:	b	1f638 <__assert_fail@plt+0xe3c8>
   1f5fc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1f600:	ldrb	r3, [r3]
   1f604:	cmp	r3, #64	; 0x40
   1f608:	bls	1f630 <__assert_fail@plt+0xe3c0>
   1f60c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1f610:	ldrb	r3, [r3]
   1f614:	cmp	r3, #90	; 0x5a
   1f618:	bhi	1f630 <__assert_fail@plt+0xe3c0>
   1f61c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1f620:	ldrb	r3, [r3]
   1f624:	sub	r3, r3, #55	; 0x37
   1f628:	str	r3, [fp, #-20]	; 0xffffffec
   1f62c:	b	1f638 <__assert_fail@plt+0xe3c8>
   1f630:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1f634:	str	r3, [fp, #-20]	; 0xffffffec
   1f638:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1f63c:	ldr	r2, [fp, #-20]	; 0xffffffec
   1f640:	cmp	r2, r3
   1f644:	bcc	1f670 <__assert_fail@plt+0xe400>
   1f648:	ldr	r3, [pc, #648]	; 1f8d8 <__assert_fail@plt+0xe668>
   1f64c:	ldr	r3, [r3]
   1f650:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1f654:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1f658:	blx	r3
   1f65c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1f660:	mov	r2, #0
   1f664:	str	r2, [r3, #4]
   1f668:	mvn	r3, #0
   1f66c:	b	1f8b8 <__assert_fail@plt+0xe648>
   1f670:	ldr	r3, [fp, #-16]
   1f674:	add	r2, r3, #1
   1f678:	str	r2, [fp, #-16]
   1f67c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1f680:	add	r3, r2, r3
   1f684:	ldr	r2, [fp, #-20]	; 0xffffffec
   1f688:	uxtb	r2, r2
   1f68c:	strb	r2, [r3]
   1f690:	b	1f698 <__assert_fail@plt+0xe428>
   1f694:	nop			; (mov r0, r0)
   1f698:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1f69c:	add	r3, r3, #1
   1f6a0:	str	r3, [fp, #-60]	; 0xffffffc4
   1f6a4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   1f6a8:	ldrb	r3, [r3]
   1f6ac:	cmp	r3, #0
   1f6b0:	bne	1f55c <__assert_fail@plt+0xe2ec>
   1f6b4:	ldr	r3, [fp, #-16]
   1f6b8:	cmp	r3, #0
   1f6bc:	bne	1f6e8 <__assert_fail@plt+0xe478>
   1f6c0:	ldr	r3, [pc, #528]	; 1f8d8 <__assert_fail@plt+0xe668>
   1f6c4:	ldr	r3, [r3]
   1f6c8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1f6cc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1f6d0:	blx	r3
   1f6d4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1f6d8:	mov	r2, #0
   1f6dc:	str	r2, [r3, #4]
   1f6e0:	mvn	r3, #0
   1f6e4:	b	1f8b8 <__assert_fail@plt+0xe648>
   1f6e8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1f6ec:	mov	r0, r3
   1f6f0:	bl	16d04 <__assert_fail@plt+0x5a94>
   1f6f4:	str	r0, [fp, #-40]	; 0xffffffd8
   1f6f8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1f6fc:	cmp	r3, #0
   1f700:	beq	1f76c <__assert_fail@plt+0xe4fc>
   1f704:	ldr	r3, [fp, #-16]
   1f708:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1f70c:	mul	r3, r2, r3
   1f710:	add	r3, r3, #31
   1f714:	lsr	r3, r3, #5
   1f718:	str	r3, [fp, #-12]
   1f71c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1f720:	ldr	r2, [r3]
   1f724:	ldr	r3, [fp, #-12]
   1f728:	cmp	r2, r3
   1f72c:	bge	1f744 <__assert_fail@plt+0xe4d4>
   1f730:	ldr	r1, [fp, #-12]
   1f734:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1f738:	bl	17b90 <__assert_fail@plt+0x6920>
   1f73c:	mov	r3, r0
   1f740:	b	1f74c <__assert_fail@plt+0xe4dc>
   1f744:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1f748:	ldr	r3, [r3, #8]
   1f74c:	str	r3, [fp, #-44]	; 0xffffffd4
   1f750:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1f754:	ldr	r2, [fp, #-16]
   1f758:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1f75c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1f760:	bl	1767c <__assert_fail@plt+0x640c>
   1f764:	str	r0, [fp, #-8]
   1f768:	b	1f858 <__assert_fail@plt+0xe5e8>
   1f76c:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1f770:	sub	r3, fp, #52	; 0x34
   1f774:	mov	r1, r2
   1f778:	mov	r0, r3
   1f77c:	bl	16dc8 <__assert_fail@plt+0x5b58>
   1f780:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1f784:	ldr	r3, [fp, #-16]
   1f788:	add	r3, r2, r3
   1f78c:	sub	r3, r3, #1
   1f790:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1f794:	mov	r1, r2
   1f798:	mov	r0, r3
   1f79c:	bl	3f560 <__assert_fail@plt+0x2e2f0>
   1f7a0:	mov	r3, r0
   1f7a4:	str	r3, [fp, #-12]
   1f7a8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1f7ac:	ldr	r2, [r3]
   1f7b0:	ldr	r3, [fp, #-12]
   1f7b4:	cmp	r2, r3
   1f7b8:	bge	1f7d0 <__assert_fail@plt+0xe560>
   1f7bc:	ldr	r1, [fp, #-12]
   1f7c0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1f7c4:	bl	17b90 <__assert_fail@plt+0x6920>
   1f7c8:	mov	r3, r0
   1f7cc:	b	1f7d8 <__assert_fail@plt+0xe568>
   1f7d0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1f7d4:	ldr	r3, [r3, #8]
   1f7d8:	str	r3, [fp, #-44]	; 0xffffffd4
   1f7dc:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1f7e0:	sub	r3, fp, #52	; 0x34
   1f7e4:	str	r3, [sp]
   1f7e8:	mov	r3, r2
   1f7ec:	ldr	r2, [fp, #-16]
   1f7f0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1f7f4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1f7f8:	bl	177b0 <__assert_fail@plt+0x6540>
   1f7fc:	str	r0, [fp, #-8]
   1f800:	ldr	r3, [fp, #-8]
   1f804:	cmp	r3, #0
   1f808:	bgt	1f820 <__assert_fail@plt+0xe5b0>
   1f80c:	ldr	r3, [pc, #176]	; 1f8c4 <__assert_fail@plt+0xe654>
   1f810:	ldr	r2, [pc, #196]	; 1f8dc <__assert_fail@plt+0xe66c>
   1f814:	ldr	r1, [pc, #176]	; 1f8cc <__assert_fail@plt+0xe65c>
   1f818:	ldr	r0, [pc, #192]	; 1f8e0 <__assert_fail@plt+0xe670>
   1f81c:	bl	11270 <__assert_fail@plt>
   1f820:	ldr	r3, [fp, #-8]
   1f824:	sub	r3, r3, #-1073741823	; 0xc0000001
   1f828:	lsl	r3, r3, #2
   1f82c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1f830:	add	r3, r2, r3
   1f834:	ldr	r3, [r3]
   1f838:	cmp	r3, #0
   1f83c:	moveq	r3, #1
   1f840:	movne	r3, #0
   1f844:	uxtb	r3, r3
   1f848:	mov	r2, r3
   1f84c:	ldr	r3, [fp, #-8]
   1f850:	sub	r3, r3, r2
   1f854:	str	r3, [fp, #-8]
   1f858:	ldr	r2, [fp, #-8]
   1f85c:	ldr	r3, [fp, #-12]
   1f860:	cmp	r2, r3
   1f864:	ble	1f87c <__assert_fail@plt+0xe60c>
   1f868:	ldr	r3, [pc, #84]	; 1f8c4 <__assert_fail@plt+0xe654>
   1f86c:	ldr	r2, [pc, #112]	; 1f8e4 <__assert_fail@plt+0xe674>
   1f870:	ldr	r1, [pc, #84]	; 1f8cc <__assert_fail@plt+0xe65c>
   1f874:	ldr	r0, [pc, #108]	; 1f8e8 <__assert_fail@plt+0xe678>
   1f878:	bl	11270 <__assert_fail@plt>
   1f87c:	ldr	r3, [pc, #84]	; 1f8d8 <__assert_fail@plt+0xe668>
   1f880:	ldr	r3, [r3]
   1f884:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1f888:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1f88c:	blx	r3
   1f890:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f894:	cmp	r3, #0
   1f898:	beq	1f8a8 <__assert_fail@plt+0xe638>
   1f89c:	ldr	r3, [fp, #-8]
   1f8a0:	rsb	r3, r3, #0
   1f8a4:	b	1f8ac <__assert_fail@plt+0xe63c>
   1f8a8:	ldr	r3, [fp, #-8]
   1f8ac:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1f8b0:	str	r3, [r2, #4]
   1f8b4:	mov	r3, #0
   1f8b8:	mov	r0, r3
   1f8bc:	sub	sp, fp, #4
   1f8c0:	pop	{fp, pc}
   1f8c4:	andeq	r0, r4, r4, lsr #30
   1f8c8:	andeq	r1, r0, r0, ror #1
   1f8cc:	andeq	r0, r4, r8, asr #12
   1f8d0:	andeq	r0, r4, ip, asr #22
   1f8d4:	andeq	r2, r5, ip, lsr #2
   1f8d8:	andeq	r2, r5, r4, lsr r1
   1f8dc:	andeq	r1, r0, r5, lsr r1
   1f8e0:	andeq	r0, r4, ip, lsl #18
   1f8e4:	andeq	r1, r0, r8, lsr r1
   1f8e8:	andeq	r0, r4, r4, ror fp
   1f8ec:	push	{fp, lr}
   1f8f0:	add	fp, sp, #4
   1f8f4:	sub	sp, sp, #16
   1f8f8:	str	r0, [fp, #-8]
   1f8fc:	str	r1, [fp, #-12]
   1f900:	str	r2, [fp, #-16]
   1f904:	ldr	r0, [fp, #-8]
   1f908:	bl	17a80 <__assert_fail@plt+0x6810>
   1f90c:	ldr	r2, [fp, #-16]
   1f910:	ldr	r1, [fp, #-12]
   1f914:	ldr	r0, [fp, #-8]
   1f918:	bl	1f388 <__assert_fail@plt+0xe118>
   1f91c:	mov	r3, r0
   1f920:	mov	r0, r3
   1f924:	sub	sp, fp, #4
   1f928:	pop	{fp, pc}
   1f92c:	push	{fp, lr}
   1f930:	add	fp, sp, #4
   1f934:	sub	sp, sp, #32
   1f938:	str	r0, [fp, #-24]	; 0xffffffe8
   1f93c:	str	r1, [fp, #-28]	; 0xffffffe4
   1f940:	str	r2, [fp, #-32]	; 0xffffffe0
   1f944:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1f948:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1f94c:	mov	r0, #0
   1f950:	bl	1f0b0 <__assert_fail@plt+0xde40>
   1f954:	str	r0, [fp, #-8]
   1f958:	ldr	r3, [fp, #-8]
   1f95c:	cmp	r3, #0
   1f960:	bne	1f96c <__assert_fail@plt+0xe6fc>
   1f964:	mov	r3, #0
   1f968:	b	1f9b0 <__assert_fail@plt+0xe740>
   1f96c:	ldr	r0, [fp, #-8]
   1f970:	bl	11174 <strlen@plt>
   1f974:	str	r0, [fp, #-12]
   1f978:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1f97c:	ldr	r2, [fp, #-12]
   1f980:	mov	r1, #1
   1f984:	ldr	r0, [fp, #-8]
   1f988:	bl	1109c <fwrite@plt>
   1f98c:	str	r0, [fp, #-16]
   1f990:	ldr	r3, [pc, #36]	; 1f9bc <__assert_fail@plt+0xe74c>
   1f994:	ldr	r3, [r3]
   1f998:	ldr	r2, [fp, #-12]
   1f99c:	add	r2, r2, #1
   1f9a0:	mov	r1, r2
   1f9a4:	ldr	r0, [fp, #-8]
   1f9a8:	blx	r3
   1f9ac:	ldr	r3, [fp, #-16]
   1f9b0:	mov	r0, r3
   1f9b4:	sub	sp, fp, #4
   1f9b8:	pop	{fp, pc}
   1f9bc:	andeq	r2, r5, r4, lsr r1
   1f9c0:	push	{fp}		; (str fp, [sp, #-4]!)
   1f9c4:	add	fp, sp, #0
   1f9c8:	sub	sp, sp, #12
   1f9cc:	ldr	r3, [pc, #28]	; 1f9f0 <__assert_fail@plt+0xe780>
   1f9d0:	str	r3, [fp, #-8]
   1f9d4:	ldr	r3, [fp, #-8]
   1f9d8:	ldrb	r3, [r3]
   1f9dc:	rsb	r3, r3, #1
   1f9e0:	mov	r0, r3
   1f9e4:	add	sp, fp, #0
   1f9e8:	pop	{fp}		; (ldr fp, [sp], #4)
   1f9ec:	bx	lr
   1f9f0:	andeq	r0, r4, r0, lsr pc
   1f9f4:	push	{fp, lr}
   1f9f8:	add	fp, sp, #4
   1f9fc:	sub	sp, sp, #48	; 0x30
   1fa00:	str	r0, [fp, #-40]	; 0xffffffd8
   1fa04:	str	r1, [fp, #-44]	; 0xffffffd4
   1fa08:	str	r2, [fp, #-48]	; 0xffffffd0
   1fa0c:	str	r3, [fp, #-52]	; 0xffffffcc
   1fa10:	ldr	r3, [fp, #8]
   1fa14:	cmp	r3, #0
   1fa18:	beq	1fa24 <__assert_fail@plt+0xe7b4>
   1fa1c:	ldr	r0, [pc, #696]	; 1fcdc <__assert_fail@plt+0xea6c>
   1fa20:	bl	136c0 <__assert_fail@plt+0x2450>
   1fa24:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1fa28:	cmp	r3, #1
   1fa2c:	beq	1fa50 <__assert_fail@plt+0xe7e0>
   1fa30:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1fa34:	cmn	r3, #1
   1fa38:	beq	1fa50 <__assert_fail@plt+0xe7e0>
   1fa3c:	ldr	r3, [pc, #668]	; 1fce0 <__assert_fail@plt+0xea70>
   1fa40:	ldr	r2, [pc, #668]	; 1fce4 <__assert_fail@plt+0xea74>
   1fa44:	ldr	r1, [pc, #668]	; 1fce8 <__assert_fail@plt+0xea78>
   1fa48:	ldr	r0, [pc, #668]	; 1fcec <__assert_fail@plt+0xea7c>
   1fa4c:	bl	11270 <__assert_fail@plt>
   1fa50:	ldr	r3, [fp, #4]
   1fa54:	cmn	r3, #1
   1fa58:	blt	1fa68 <__assert_fail@plt+0xe7f8>
   1fa5c:	ldr	r3, [fp, #4]
   1fa60:	cmp	r3, #1
   1fa64:	ble	1fa7c <__assert_fail@plt+0xe80c>
   1fa68:	ldr	r3, [pc, #624]	; 1fce0 <__assert_fail@plt+0xea70>
   1fa6c:	ldr	r2, [pc, #636]	; 1fcf0 <__assert_fail@plt+0xea80>
   1fa70:	ldr	r1, [pc, #624]	; 1fce8 <__assert_fail@plt+0xea78>
   1fa74:	ldr	r0, [pc, #632]	; 1fcf4 <__assert_fail@plt+0xea84>
   1fa78:	bl	11270 <__assert_fail@plt>
   1fa7c:	ldr	r3, [fp, #4]
   1fa80:	cmp	r3, #0
   1fa84:	bne	1fa90 <__assert_fail@plt+0xe820>
   1fa88:	bl	1f9c0 <__assert_fail@plt+0xe750>
   1fa8c:	str	r0, [fp, #4]
   1fa90:	ldr	r3, [fp, #12]
   1fa94:	str	r3, [fp, #-8]
   1fa98:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1fa9c:	ldr	r3, [fp, #4]
   1faa0:	cmp	r2, r3
   1faa4:	beq	1fab4 <__assert_fail@plt+0xe844>
   1faa8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1faac:	lsl	r3, r3, #1
   1fab0:	b	1fab8 <__assert_fail@plt+0xe848>
   1fab4:	mov	r3, #0
   1fab8:	str	r3, [fp, #-12]
   1fabc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1fac0:	cmp	r3, #1
   1fac4:	bne	1faf0 <__assert_fail@plt+0xe880>
   1fac8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1facc:	sub	r3, r3, #1
   1fad0:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1fad4:	mul	r3, r2, r3
   1fad8:	ldr	r2, [fp, #-8]
   1fadc:	add	r3, r2, r3
   1fae0:	str	r3, [fp, #-8]
   1fae4:	ldr	r3, [fp, #-12]
   1fae8:	rsb	r3, r3, #0
   1faec:	str	r3, [fp, #-12]
   1faf0:	ldr	r3, [fp, #4]
   1faf4:	cmp	r3, #1
   1faf8:	bne	1fb10 <__assert_fail@plt+0xe8a0>
   1fafc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1fb00:	sub	r3, r3, #1
   1fb04:	ldr	r2, [fp, #-8]
   1fb08:	add	r3, r2, r3
   1fb0c:	str	r3, [fp, #-8]
   1fb10:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1fb14:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1fb18:	mul	r3, r2, r3
   1fb1c:	add	r3, r3, #3
   1fb20:	lsr	r3, r3, #2
   1fb24:	str	r3, [fp, #-32]	; 0xffffffe0
   1fb28:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1fb2c:	ldr	r2, [r3]
   1fb30:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1fb34:	cmp	r2, r3
   1fb38:	bge	1fb50 <__assert_fail@plt+0xe8e0>
   1fb3c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   1fb40:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1fb44:	bl	17b90 <__assert_fail@plt+0x6920>
   1fb48:	mov	r3, r0
   1fb4c:	b	1fb58 <__assert_fail@plt+0xe8e8>
   1fb50:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1fb54:	ldr	r3, [r3, #8]
   1fb58:	str	r3, [fp, #-36]	; 0xffffffdc
   1fb5c:	mov	r3, #0
   1fb60:	str	r3, [fp, #-16]
   1fb64:	mov	r3, #0
   1fb68:	str	r3, [fp, #-20]	; 0xffffffec
   1fb6c:	mov	r3, #0
   1fb70:	str	r3, [fp, #-24]	; 0xffffffe8
   1fb74:	b	1fc38 <__assert_fail@plt+0xe9c8>
   1fb78:	mov	r3, #0
   1fb7c:	str	r3, [fp, #-28]	; 0xffffffe4
   1fb80:	b	1fc0c <__assert_fail@plt+0xe99c>
   1fb84:	ldr	r3, [fp, #-8]
   1fb88:	ldrb	r3, [r3]
   1fb8c:	mov	r1, r3
   1fb90:	ldr	r3, [fp, #-20]	; 0xffffffec
   1fb94:	add	r2, r3, #1
   1fb98:	str	r2, [fp, #-20]	; 0xffffffec
   1fb9c:	lsl	r3, r3, #3
   1fba0:	lsl	r3, r1, r3
   1fba4:	ldr	r2, [fp, #-16]
   1fba8:	orr	r3, r2, r3
   1fbac:	str	r3, [fp, #-16]
   1fbb0:	ldr	r3, [fp, #-20]	; 0xffffffec
   1fbb4:	cmp	r3, #4
   1fbb8:	bne	1fbec <__assert_fail@plt+0xe97c>
   1fbbc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1fbc0:	add	r2, r3, #1
   1fbc4:	str	r2, [fp, #-24]	; 0xffffffe8
   1fbc8:	lsl	r3, r3, #2
   1fbcc:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1fbd0:	add	r3, r2, r3
   1fbd4:	ldr	r2, [fp, #-16]
   1fbd8:	str	r2, [r3]
   1fbdc:	mov	r3, #0
   1fbe0:	str	r3, [fp, #-20]	; 0xffffffec
   1fbe4:	mov	r3, #0
   1fbe8:	str	r3, [fp, #-16]
   1fbec:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1fbf0:	add	r3, r3, #1
   1fbf4:	str	r3, [fp, #-28]	; 0xffffffe4
   1fbf8:	ldr	r3, [fp, #4]
   1fbfc:	rsb	r3, r3, #0
   1fc00:	ldr	r2, [fp, #-8]
   1fc04:	add	r3, r2, r3
   1fc08:	str	r3, [fp, #-8]
   1fc0c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1fc10:	ldr	r3, [fp, #-52]	; 0xffffffcc
   1fc14:	cmp	r2, r3
   1fc18:	bcc	1fb84 <__assert_fail@plt+0xe914>
   1fc1c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1fc20:	sub	r3, r3, #1
   1fc24:	str	r3, [fp, #-44]	; 0xffffffd4
   1fc28:	ldr	r3, [fp, #-12]
   1fc2c:	ldr	r2, [fp, #-8]
   1fc30:	add	r3, r2, r3
   1fc34:	str	r3, [fp, #-8]
   1fc38:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1fc3c:	cmp	r3, #0
   1fc40:	bne	1fb78 <__assert_fail@plt+0xe908>
   1fc44:	ldr	r3, [fp, #-20]	; 0xffffffec
   1fc48:	cmp	r3, #0
   1fc4c:	movne	r3, #1
   1fc50:	moveq	r3, #0
   1fc54:	uxtb	r3, r3
   1fc58:	mov	r2, r3
   1fc5c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1fc60:	add	r2, r2, r3
   1fc64:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1fc68:	cmp	r2, r3
   1fc6c:	beq	1fc84 <__assert_fail@plt+0xea14>
   1fc70:	ldr	r3, [pc, #104]	; 1fce0 <__assert_fail@plt+0xea70>
   1fc74:	ldr	r2, [pc, #124]	; 1fcf8 <__assert_fail@plt+0xea88>
   1fc78:	ldr	r1, [pc, #104]	; 1fce8 <__assert_fail@plt+0xea78>
   1fc7c:	ldr	r0, [pc, #120]	; 1fcfc <__assert_fail@plt+0xea8c>
   1fc80:	bl	11270 <__assert_fail@plt>
   1fc84:	ldr	r3, [fp, #-16]
   1fc88:	cmp	r3, #0
   1fc8c:	beq	1fcb4 <__assert_fail@plt+0xea44>
   1fc90:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1fc94:	add	r2, r3, #1
   1fc98:	str	r2, [fp, #-24]	; 0xffffffe8
   1fc9c:	lsl	r3, r3, #2
   1fca0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   1fca4:	add	r3, r2, r3
   1fca8:	ldr	r2, [fp, #-16]
   1fcac:	str	r2, [r3]
   1fcb0:	b	1fcc4 <__assert_fail@plt+0xea54>
   1fcb4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1fcb8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   1fcbc:	bl	13c08 <__assert_fail@plt+0x2998>
   1fcc0:	str	r0, [fp, #-24]	; 0xffffffe8
   1fcc4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1fcc8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1fccc:	str	r2, [r3, #4]
   1fcd0:	nop			; (mov r0, r0)
   1fcd4:	sub	sp, fp, #4
   1fcd8:	pop	{fp, pc}
   1fcdc:	andeq	r0, r4, r0, lsl #23
   1fce0:	andeq	r0, r4, r4, lsr pc
   1fce4:	andeq	r1, r0, r4, ror r1
   1fce8:	andeq	r0, r4, r8, asr #12
   1fcec:	andeq	r0, r4, r4, lsr #23
   1fcf0:	andeq	r1, r0, r5, ror r1
   1fcf4:	andeq	r0, r4, r0, asr #23
   1fcf8:	muleq	r0, fp, r1
   1fcfc:	ldrdeq	r0, [r4], -ip
   1fd00:	push	{fp, lr}
   1fd04:	add	fp, sp, #4
   1fd08:	sub	sp, sp, #64	; 0x40
   1fd0c:	str	r0, [fp, #-56]	; 0xffffffc8
   1fd10:	str	r1, [fp, #-60]	; 0xffffffc4
   1fd14:	str	r2, [fp, #-64]	; 0xffffffc0
   1fd18:	str	r3, [fp, #-68]	; 0xffffffbc
   1fd1c:	ldr	r3, [fp, #8]
   1fd20:	cmp	r3, #0
   1fd24:	beq	1fd30 <__assert_fail@plt+0xeac0>
   1fd28:	ldr	r0, [pc, #928]	; 200d0 <__assert_fail@plt+0xee60>
   1fd2c:	bl	136c0 <__assert_fail@plt+0x2450>
   1fd30:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1fd34:	cmp	r3, #1
   1fd38:	beq	1fd5c <__assert_fail@plt+0xeaec>
   1fd3c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1fd40:	cmn	r3, #1
   1fd44:	beq	1fd5c <__assert_fail@plt+0xeaec>
   1fd48:	ldr	r3, [pc, #900]	; 200d4 <__assert_fail@plt+0xee64>
   1fd4c:	ldr	r2, [pc, #900]	; 200d8 <__assert_fail@plt+0xee68>
   1fd50:	ldr	r1, [pc, #900]	; 200dc <__assert_fail@plt+0xee6c>
   1fd54:	ldr	r0, [pc, #900]	; 200e0 <__assert_fail@plt+0xee70>
   1fd58:	bl	11270 <__assert_fail@plt>
   1fd5c:	ldr	r3, [fp, #4]
   1fd60:	cmn	r3, #1
   1fd64:	blt	1fd74 <__assert_fail@plt+0xeb04>
   1fd68:	ldr	r3, [fp, #4]
   1fd6c:	cmp	r3, #1
   1fd70:	ble	1fd88 <__assert_fail@plt+0xeb18>
   1fd74:	ldr	r3, [pc, #856]	; 200d4 <__assert_fail@plt+0xee64>
   1fd78:	ldr	r2, [pc, #868]	; 200e4 <__assert_fail@plt+0xee74>
   1fd7c:	ldr	r1, [pc, #856]	; 200dc <__assert_fail@plt+0xee6c>
   1fd80:	ldr	r0, [pc, #864]	; 200e8 <__assert_fail@plt+0xee78>
   1fd84:	bl	11270 <__assert_fail@plt>
   1fd88:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1fd8c:	cmp	r3, #0
   1fd90:	bne	1fdb8 <__assert_fail@plt+0xeb48>
   1fd94:	ldr	r3, [fp, #12]
   1fd98:	ldr	r3, [r3, #4]
   1fd9c:	cmp	r3, #0
   1fda0:	beq	1fdb8 <__assert_fail@plt+0xeb48>
   1fda4:	ldr	r3, [pc, #808]	; 200d4 <__assert_fail@plt+0xee64>
   1fda8:	ldr	r2, [pc, #828]	; 200ec <__assert_fail@plt+0xee7c>
   1fdac:	ldr	r1, [pc, #808]	; 200dc <__assert_fail@plt+0xee6c>
   1fdb0:	ldr	r0, [pc, #824]	; 200f0 <__assert_fail@plt+0xee80>
   1fdb4:	bl	11270 <__assert_fail@plt>
   1fdb8:	ldr	r3, [fp, #12]
   1fdbc:	ldr	r3, [r3, #4]
   1fdc0:	str	r3, [fp, #-40]	; 0xffffffd8
   1fdc4:	mov	r3, #0
   1fdc8:	str	r3, [fp, #-8]
   1fdcc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1fdd0:	cmp	r3, #0
   1fdd4:	beq	200a8 <__assert_fail@plt+0xee38>
   1fdd8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1fddc:	cmp	r3, #0
   1fde0:	rsblt	r3, r3, #0
   1fde4:	str	r3, [fp, #-40]	; 0xffffffd8
   1fde8:	ldr	r3, [fp, #12]
   1fdec:	ldr	r2, [r3, #8]
   1fdf0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1fdf4:	sub	r3, r3, #-1073741823	; 0xc0000001
   1fdf8:	lsl	r3, r3, #2
   1fdfc:	add	r3, r2, r3
   1fe00:	ldr	r3, [r3]
   1fe04:	str	r3, [fp, #-24]	; 0xffffffe8
   1fe08:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1fe0c:	cmp	r3, #0
   1fe10:	bne	1fe28 <__assert_fail@plt+0xebb8>
   1fe14:	ldr	r3, [pc, #696]	; 200d4 <__assert_fail@plt+0xee64>
   1fe18:	ldr	r2, [pc, #724]	; 200f4 <__assert_fail@plt+0xee84>
   1fe1c:	ldr	r1, [pc, #696]	; 200dc <__assert_fail@plt+0xee6c>
   1fe20:	ldr	r0, [pc, #720]	; 200f8 <__assert_fail@plt+0xee88>
   1fe24:	bl	11270 <__assert_fail@plt>
   1fe28:	mov	r3, #0
   1fe2c:	str	r3, [fp, #-12]
   1fe30:	ldr	r3, [fp, #-12]
   1fe34:	cmp	r3, #0
   1fe38:	bne	1fe6c <__assert_fail@plt+0xebfc>
   1fe3c:	mov	r3, #8
   1fe40:	str	r3, [fp, #-44]	; 0xffffffd4
   1fe44:	ldr	r3, [fp, #-12]
   1fe48:	add	r3, r3, #1
   1fe4c:	str	r3, [fp, #-12]
   1fe50:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1fe54:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1fe58:	lsr	r3, r2, r3
   1fe5c:	str	r3, [fp, #-24]	; 0xffffffe8
   1fe60:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1fe64:	cmp	r3, #0
   1fe68:	bne	1fe3c <__assert_fail@plt+0xebcc>
   1fe6c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1fe70:	sub	r3, r3, #1
   1fe74:	lsl	r2, r3, #2
   1fe78:	ldr	r3, [fp, #-12]
   1fe7c:	add	r2, r2, r3
   1fe80:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1fe84:	add	r3, r2, r3
   1fe88:	sub	r3, r3, #1
   1fe8c:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1fe90:	mov	r0, r3
   1fe94:	bl	3f560 <__assert_fail@plt+0x2e2f0>
   1fe98:	mov	r3, r0
   1fe9c:	str	r3, [fp, #-8]
   1fea0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1fea4:	cmp	r3, #0
   1fea8:	bne	1fecc <__assert_fail@plt+0xec5c>
   1feac:	ldr	r3, [pc, #584]	; 200fc <__assert_fail@plt+0xee8c>
   1feb0:	ldr	r3, [r3]
   1feb4:	ldr	r2, [fp, #-8]
   1feb8:	ldr	r1, [fp, #-68]	; 0xffffffbc
   1febc:	mul	r2, r1, r2
   1fec0:	mov	r0, r2
   1fec4:	blx	r3
   1fec8:	str	r0, [fp, #-56]	; 0xffffffc8
   1fecc:	ldr	r3, [fp, #4]
   1fed0:	cmp	r3, #0
   1fed4:	bne	1fee0 <__assert_fail@plt+0xec70>
   1fed8:	bl	1f9c0 <__assert_fail@plt+0xe750>
   1fedc:	str	r0, [fp, #4]
   1fee0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1fee4:	str	r3, [fp, #-16]
   1fee8:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1feec:	ldr	r3, [fp, #4]
   1fef0:	cmp	r2, r3
   1fef4:	beq	1ff04 <__assert_fail@plt+0xec94>
   1fef8:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1fefc:	lsl	r3, r3, #1
   1ff00:	b	1ff08 <__assert_fail@plt+0xec98>
   1ff04:	mov	r3, #0
   1ff08:	str	r3, [fp, #-20]	; 0xffffffec
   1ff0c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1ff10:	cmp	r3, #1
   1ff14:	bne	1ff40 <__assert_fail@plt+0xecd0>
   1ff18:	ldr	r3, [fp, #-8]
   1ff1c:	sub	r3, r3, #1
   1ff20:	ldr	r2, [fp, #-68]	; 0xffffffbc
   1ff24:	mul	r3, r2, r3
   1ff28:	ldr	r2, [fp, #-16]
   1ff2c:	add	r3, r2, r3
   1ff30:	str	r3, [fp, #-16]
   1ff34:	ldr	r3, [fp, #-20]	; 0xffffffec
   1ff38:	rsb	r3, r3, #0
   1ff3c:	str	r3, [fp, #-20]	; 0xffffffec
   1ff40:	ldr	r3, [fp, #4]
   1ff44:	cmp	r3, #1
   1ff48:	bne	1ff60 <__assert_fail@plt+0xecf0>
   1ff4c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   1ff50:	sub	r3, r3, #1
   1ff54:	ldr	r2, [fp, #-16]
   1ff58:	add	r3, r2, r3
   1ff5c:	str	r3, [fp, #-16]
   1ff60:	mov	r3, #0
   1ff64:	str	r3, [fp, #-28]	; 0xffffffe4
   1ff68:	mov	r3, #0
   1ff6c:	str	r3, [fp, #-32]	; 0xffffffe0
   1ff70:	mov	r3, #0
   1ff74:	str	r3, [fp, #-12]
   1ff78:	b	20050 <__assert_fail@plt+0xede0>
   1ff7c:	mov	r3, #0
   1ff80:	str	r3, [fp, #-36]	; 0xffffffdc
   1ff84:	b	20024 <__assert_fail@plt+0xedb4>
   1ff88:	mov	r3, #8
   1ff8c:	str	r3, [fp, #-48]	; 0xffffffd0
   1ff90:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1ff94:	cmp	r3, #0
   1ff98:	bne	1ffd8 <__assert_fail@plt+0xed68>
   1ff9c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   1ffa0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1ffa4:	cmp	r2, r3
   1ffa8:	bge	1ffd0 <__assert_fail@plt+0xed60>
   1ffac:	ldr	r3, [fp, #12]
   1ffb0:	ldr	r2, [r3, #8]
   1ffb4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1ffb8:	add	r1, r3, #1
   1ffbc:	str	r1, [fp, #-32]	; 0xffffffe0
   1ffc0:	lsl	r3, r3, #2
   1ffc4:	add	r3, r2, r3
   1ffc8:	ldr	r3, [r3]
   1ffcc:	str	r3, [fp, #-24]	; 0xffffffe8
   1ffd0:	mov	r3, #4
   1ffd4:	str	r3, [fp, #-28]	; 0xffffffe4
   1ffd8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1ffdc:	uxtb	r2, r3
   1ffe0:	ldr	r3, [fp, #-16]
   1ffe4:	strb	r2, [r3]
   1ffe8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1ffec:	ldr	r3, [fp, #-48]	; 0xffffffd0
   1fff0:	lsr	r3, r2, r3
   1fff4:	str	r3, [fp, #-24]	; 0xffffffe8
   1fff8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1fffc:	sub	r3, r3, #1
   20000:	str	r3, [fp, #-28]	; 0xffffffe4
   20004:	ldr	r3, [fp, #-36]	; 0xffffffdc
   20008:	add	r3, r3, #1
   2000c:	str	r3, [fp, #-36]	; 0xffffffdc
   20010:	ldr	r3, [fp, #4]
   20014:	rsb	r3, r3, #0
   20018:	ldr	r2, [fp, #-16]
   2001c:	add	r3, r2, r3
   20020:	str	r3, [fp, #-16]
   20024:	ldr	r2, [fp, #-36]	; 0xffffffdc
   20028:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2002c:	cmp	r2, r3
   20030:	bcc	1ff88 <__assert_fail@plt+0xed18>
   20034:	ldr	r3, [fp, #-12]
   20038:	add	r3, r3, #1
   2003c:	str	r3, [fp, #-12]
   20040:	ldr	r3, [fp, #-20]	; 0xffffffec
   20044:	ldr	r2, [fp, #-16]
   20048:	add	r3, r2, r3
   2004c:	str	r3, [fp, #-16]
   20050:	ldr	r2, [fp, #-12]
   20054:	ldr	r3, [fp, #-8]
   20058:	cmp	r2, r3
   2005c:	bcc	1ff7c <__assert_fail@plt+0xed0c>
   20060:	ldr	r2, [fp, #-32]	; 0xffffffe0
   20064:	ldr	r3, [fp, #-40]	; 0xffffffd8
   20068:	cmp	r2, r3
   2006c:	beq	20084 <__assert_fail@plt+0xee14>
   20070:	ldr	r3, [pc, #92]	; 200d4 <__assert_fail@plt+0xee64>
   20074:	ldr	r2, [pc, #132]	; 20100 <__assert_fail@plt+0xee90>
   20078:	ldr	r1, [pc, #92]	; 200dc <__assert_fail@plt+0xee6c>
   2007c:	ldr	r0, [pc, #128]	; 20104 <__assert_fail@plt+0xee94>
   20080:	bl	11270 <__assert_fail@plt>
   20084:	ldr	r2, [fp, #-12]
   20088:	ldr	r3, [fp, #-8]
   2008c:	cmp	r2, r3
   20090:	beq	200a8 <__assert_fail@plt+0xee38>
   20094:	ldr	r3, [pc, #56]	; 200d4 <__assert_fail@plt+0xee64>
   20098:	ldr	r2, [pc, #104]	; 20108 <__assert_fail@plt+0xee98>
   2009c:	ldr	r1, [pc, #56]	; 200dc <__assert_fail@plt+0xee6c>
   200a0:	ldr	r0, [pc, #100]	; 2010c <__assert_fail@plt+0xee9c>
   200a4:	bl	11270 <__assert_fail@plt>
   200a8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   200ac:	cmp	r3, #0
   200b0:	beq	200c0 <__assert_fail@plt+0xee50>
   200b4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   200b8:	ldr	r2, [fp, #-8]
   200bc:	str	r2, [r3]
   200c0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   200c4:	mov	r0, r3
   200c8:	sub	sp, fp, #4
   200cc:	pop	{fp, pc}
   200d0:	strdeq	r0, [r4], -r4
   200d4:	andeq	r0, r4, r0, asr #30
   200d8:	andeq	r1, r0, lr, lsr #3
   200dc:	andeq	r0, r4, r8, asr #12
   200e0:	andeq	r0, r4, r4, lsr #23
   200e4:	andeq	r1, r0, pc, lsr #3
   200e8:	andeq	r0, r4, r0, asr #23
   200ec:			; <UNDEFINED> instruction: 0x000011b0
   200f0:	andeq	r0, r4, r8, lsl ip
   200f4:	andeq	r1, r0, r4, asr #3
   200f8:	andeq	r0, r4, r8, lsr ip
   200fc:	andeq	r2, r5, ip, lsr #2
   20100:	andeq	r1, r0, r3, lsl #4
   20104:	andeq	r0, r4, r4, asr #24
   20108:	andeq	r1, r0, r4, lsl #4
   2010c:	andeq	r0, r4, ip, asr #24
   20110:	push	{fp, lr}
   20114:	add	fp, sp, #4
   20118:	sub	sp, sp, #40	; 0x28
   2011c:	str	r0, [fp, #-24]	; 0xffffffe8
   20120:	str	r1, [fp, #-28]	; 0xffffffe4
   20124:	str	r2, [fp, #-32]	; 0xffffffe0
   20128:	str	r3, [fp, #-36]	; 0xffffffdc
   2012c:	ldr	r3, [pc, #196]	; 201f8 <__assert_fail@plt+0xef88>
   20130:	ldr	r3, [r3]
   20134:	str	r3, [fp, #-8]
   20138:	ldr	r3, [pc, #184]	; 201f8 <__assert_fail@plt+0xef88>
   2013c:	mov	r2, #0
   20140:	str	r2, [r3]
   20144:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20148:	cmp	r3, #2
   2014c:	bne	201d4 <__assert_fail@plt+0xef64>
   20150:	mov	r3, #0
   20154:	str	r3, [sp]
   20158:	ldr	r3, [pc, #156]	; 201fc <__assert_fail@plt+0xef8c>
   2015c:	ldr	r2, [pc, #156]	; 20200 <__assert_fail@plt+0xef90>
   20160:	ldr	r1, [fp, #-28]	; 0xffffffe4
   20164:	ldr	r0, [fp, #-24]	; 0xffffffe8
   20168:	bl	11144 <getopt_long@plt>
   2016c:	str	r0, [fp, #-12]
   20170:	ldr	r3, [fp, #-12]
   20174:	cmn	r3, #1
   20178:	beq	201d4 <__assert_fail@plt+0xef64>
   2017c:	ldr	r3, [fp, #-12]
   20180:	cmp	r3, #104	; 0x68
   20184:	beq	20194 <__assert_fail@plt+0xef24>
   20188:	cmp	r3, #118	; 0x76
   2018c:	beq	201a4 <__assert_fail@plt+0xef34>
   20190:	b	201d4 <__assert_fail@plt+0xef64>
   20194:	ldr	r3, [fp, #8]
   20198:	mov	r0, #0
   2019c:	blx	r3
   201a0:	b	201d4 <__assert_fail@plt+0xef64>
   201a4:	add	r3, fp, #12
   201a8:	str	r3, [fp, #-16]
   201ac:	ldr	r3, [pc, #80]	; 20204 <__assert_fail@plt+0xef94>
   201b0:	ldr	r0, [r3]
   201b4:	ldr	r3, [fp, #-16]
   201b8:	str	r3, [sp]
   201bc:	ldr	r3, [fp, #4]
   201c0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   201c4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   201c8:	bl	3d180 <__assert_fail@plt+0x2bf10>
   201cc:	mov	r0, #0
   201d0:	bl	1115c <exit@plt>
   201d4:	ldr	r2, [pc, #28]	; 201f8 <__assert_fail@plt+0xef88>
   201d8:	ldr	r3, [fp, #-8]
   201dc:	str	r3, [r2]
   201e0:	ldr	r3, [pc, #32]	; 20208 <__assert_fail@plt+0xef98>
   201e4:	mov	r2, #0
   201e8:	str	r2, [r3]
   201ec:	nop			; (mov r0, r0)
   201f0:	sub	sp, fp, #4
   201f4:	pop	{fp, pc}
   201f8:	muleq	r5, r0, r1
   201fc:	andeq	r0, r4, ip, asr pc
   20200:	andeq	r0, r4, ip, lsl #31
   20204:	andeq	r2, r5, ip, lsl #3
   20208:	andeq	r2, r5, r0, lsl #3
   2020c:	push	{fp, lr}
   20210:	add	fp, sp, #4
   20214:	sub	sp, sp, #40	; 0x28
   20218:	str	r0, [fp, #-24]	; 0xffffffe8
   2021c:	str	r1, [fp, #-28]	; 0xffffffe4
   20220:	str	r2, [fp, #-32]	; 0xffffffe0
   20224:	str	r3, [fp, #-36]	; 0xffffffdc
   20228:	ldr	r3, [pc, #224]	; 20310 <__assert_fail@plt+0xf0a0>
   2022c:	ldr	r3, [r3]
   20230:	str	r3, [fp, #-8]
   20234:	ldr	r3, [pc, #212]	; 20310 <__assert_fail@plt+0xf0a0>
   20238:	mov	r2, #1
   2023c:	str	r2, [r3]
   20240:	ldrb	r3, [fp, #8]
   20244:	cmp	r3, #0
   20248:	beq	20254 <__assert_fail@plt+0xefe4>
   2024c:	ldr	r3, [pc, #192]	; 20314 <__assert_fail@plt+0xf0a4>
   20250:	b	20258 <__assert_fail@plt+0xefe8>
   20254:	ldr	r3, [pc, #188]	; 20318 <__assert_fail@plt+0xf0a8>
   20258:	str	r3, [fp, #-12]
   2025c:	mov	r3, #0
   20260:	str	r3, [sp]
   20264:	ldr	r3, [pc, #176]	; 2031c <__assert_fail@plt+0xf0ac>
   20268:	ldr	r2, [fp, #-12]
   2026c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   20270:	ldr	r0, [fp, #-24]	; 0xffffffe8
   20274:	bl	11144 <getopt_long@plt>
   20278:	str	r0, [fp, #-16]
   2027c:	ldr	r3, [fp, #-16]
   20280:	cmn	r3, #1
   20284:	beq	202f8 <__assert_fail@plt+0xf088>
   20288:	ldr	r3, [fp, #-16]
   2028c:	cmp	r3, #104	; 0x68
   20290:	beq	202a0 <__assert_fail@plt+0xf030>
   20294:	cmp	r3, #118	; 0x76
   20298:	beq	202b0 <__assert_fail@plt+0xf040>
   2029c:	b	202e0 <__assert_fail@plt+0xf070>
   202a0:	ldr	r3, [fp, #12]
   202a4:	mov	r0, #0
   202a8:	blx	r3
   202ac:	b	202f8 <__assert_fail@plt+0xf088>
   202b0:	add	r3, fp, #16
   202b4:	str	r3, [fp, #-20]	; 0xffffffec
   202b8:	ldr	r3, [pc, #96]	; 20320 <__assert_fail@plt+0xf0b0>
   202bc:	ldr	r0, [r3]
   202c0:	ldr	r3, [fp, #-20]	; 0xffffffec
   202c4:	str	r3, [sp]
   202c8:	ldr	r3, [fp, #4]
   202cc:	ldr	r2, [fp, #-36]	; 0xffffffdc
   202d0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   202d4:	bl	3d180 <__assert_fail@plt+0x2bf10>
   202d8:	mov	r0, #0
   202dc:	bl	1115c <exit@plt>
   202e0:	ldr	r3, [pc, #60]	; 20324 <__assert_fail@plt+0xf0b4>
   202e4:	ldr	r2, [r3]
   202e8:	ldr	r3, [fp, #12]
   202ec:	mov	r0, r2
   202f0:	blx	r3
   202f4:	nop			; (mov r0, r0)
   202f8:	ldr	r2, [pc, #16]	; 20310 <__assert_fail@plt+0xf0a0>
   202fc:	ldr	r3, [fp, #-8]
   20300:	str	r3, [r2]
   20304:	nop			; (mov r0, r0)
   20308:	sub	sp, fp, #4
   2030c:	pop	{fp, pc}
   20310:	muleq	r5, r0, r1
   20314:	muleq	r4, r0, pc	; <UNPREDICTABLE>
   20318:	andeq	r0, r4, ip, lsl #31
   2031c:	andeq	r0, r4, ip, asr pc
   20320:	andeq	r2, r5, ip, lsl #3
   20324:	andeq	r2, r5, r8, lsr #2
   20328:	push	{fp, lr}
   2032c:	add	fp, sp, #4
   20330:	sub	sp, sp, #64	; 0x40
   20334:	str	r0, [fp, #-64]	; 0xffffffc0
   20338:	str	r1, [fp, #-68]	; 0xffffffbc
   2033c:	bl	110b4 <__ctype_get_mb_cur_max@plt>
   20340:	mov	r3, r0
   20344:	cmp	r3, #1
   20348:	bls	20424 <__assert_fail@plt+0xf1b4>
   2034c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   20350:	uxtb	r3, r3
   20354:	cmp	r3, #47	; 0x2f
   20358:	bls	20424 <__assert_fail@plt+0xf1b4>
   2035c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   20360:	str	r3, [fp, #-44]	; 0xffffffd4
   20364:	mov	r3, #0
   20368:	strb	r3, [fp, #-60]	; 0xffffffc4
   2036c:	sub	r3, fp, #60	; 0x3c
   20370:	add	r3, r3, #4
   20374:	mov	r2, #8
   20378:	mov	r1, #0
   2037c:	mov	r0, r3
   20380:	bl	111bc <memset@plt>
   20384:	mov	r3, #0
   20388:	strb	r3, [fp, #-48]	; 0xffffffd0
   2038c:	sub	r3, fp, #60	; 0x3c
   20390:	mov	r0, r3
   20394:	bl	20520 <__assert_fail@plt+0xf2b0>
   20398:	ldrb	r3, [fp, #-36]	; 0xffffffdc
   2039c:	eor	r3, r3, #1
   203a0:	uxtb	r3, r3
   203a4:	cmp	r3, #0
   203a8:	bne	203b8 <__assert_fail@plt+0xf148>
   203ac:	ldr	r3, [fp, #-32]	; 0xffffffe0
   203b0:	cmp	r3, #0
   203b4:	beq	203c0 <__assert_fail@plt+0xf150>
   203b8:	mov	r3, #1
   203bc:	b	203c4 <__assert_fail@plt+0xf154>
   203c0:	mov	r3, #0
   203c4:	cmp	r3, #0
   203c8:	beq	20418 <__assert_fail@plt+0xf1a8>
   203cc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   203d0:	cmp	r3, #1
   203d4:	bne	203f0 <__assert_fail@plt+0xf180>
   203d8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   203dc:	ldrb	r2, [r3]
   203e0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   203e4:	uxtb	r3, r3
   203e8:	cmp	r2, r3
   203ec:	beq	2040c <__assert_fail@plt+0xf19c>
   203f0:	ldr	r2, [fp, #-44]	; 0xffffffd4
   203f4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   203f8:	add	r3, r2, r3
   203fc:	str	r3, [fp, #-44]	; 0xffffffd4
   20400:	mov	r3, #0
   20404:	strb	r3, [fp, #-48]	; 0xffffffd0
   20408:	b	2038c <__assert_fail@plt+0xf11c>
   2040c:	nop			; (mov r0, r0)
   20410:	ldr	r3, [fp, #-44]	; 0xffffffd4
   20414:	b	20434 <__assert_fail@plt+0xf1c4>
   20418:	nop			; (mov r0, r0)
   2041c:	mov	r3, #0
   20420:	b	20434 <__assert_fail@plt+0xf1c4>
   20424:	ldr	r1, [fp, #-68]	; 0xffffffbc
   20428:	ldr	r0, [fp, #-64]	; 0xffffffc0
   2042c:	bl	11180 <strchr@plt>
   20430:	mov	r3, r0
   20434:	mov	r0, r3
   20438:	sub	sp, fp, #4
   2043c:	pop	{fp, pc}
   20440:	push	{fp, lr}
   20444:	add	fp, sp, #4
   20448:	sub	sp, sp, #72	; 0x48
   2044c:	str	r0, [fp, #-72]	; 0xffffffb8
   20450:	bl	110b4 <__ctype_get_mb_cur_max@plt>
   20454:	mov	r3, r0
   20458:	cmp	r3, #1
   2045c:	bls	20508 <__assert_fail@plt+0xf298>
   20460:	mov	r3, #0
   20464:	str	r3, [fp, #-8]
   20468:	ldr	r3, [fp, #-72]	; 0xffffffb8
   2046c:	str	r3, [fp, #-48]	; 0xffffffd0
   20470:	mov	r3, #0
   20474:	strb	r3, [fp, #-64]	; 0xffffffc0
   20478:	sub	r3, fp, #64	; 0x40
   2047c:	add	r3, r3, #4
   20480:	mov	r2, #8
   20484:	mov	r1, #0
   20488:	mov	r0, r3
   2048c:	bl	111bc <memset@plt>
   20490:	mov	r3, #0
   20494:	strb	r3, [fp, #-52]	; 0xffffffcc
   20498:	b	204c0 <__assert_fail@plt+0xf250>
   2049c:	ldr	r3, [fp, #-8]
   204a0:	add	r3, r3, #1
   204a4:	str	r3, [fp, #-8]
   204a8:	ldr	r2, [fp, #-48]	; 0xffffffd0
   204ac:	ldr	r3, [fp, #-44]	; 0xffffffd4
   204b0:	add	r3, r2, r3
   204b4:	str	r3, [fp, #-48]	; 0xffffffd0
   204b8:	mov	r3, #0
   204bc:	strb	r3, [fp, #-52]	; 0xffffffcc
   204c0:	sub	r3, fp, #64	; 0x40
   204c4:	mov	r0, r3
   204c8:	bl	20520 <__assert_fail@plt+0xf2b0>
   204cc:	ldrb	r3, [fp, #-40]	; 0xffffffd8
   204d0:	eor	r3, r3, #1
   204d4:	uxtb	r3, r3
   204d8:	cmp	r3, #0
   204dc:	bne	204ec <__assert_fail@plt+0xf27c>
   204e0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   204e4:	cmp	r3, #0
   204e8:	beq	204f4 <__assert_fail@plt+0xf284>
   204ec:	mov	r3, #1
   204f0:	b	204f8 <__assert_fail@plt+0xf288>
   204f4:	mov	r3, #0
   204f8:	cmp	r3, #0
   204fc:	bne	2049c <__assert_fail@plt+0xf22c>
   20500:	ldr	r3, [fp, #-8]
   20504:	b	20514 <__assert_fail@plt+0xf2a4>
   20508:	ldr	r0, [fp, #-72]	; 0xffffffb8
   2050c:	bl	11174 <strlen@plt>
   20510:	mov	r3, r0
   20514:	mov	r0, r3
   20518:	sub	sp, fp, #4
   2051c:	pop	{fp, pc}
   20520:	push	{r4, r5, r6, fp, lr}
   20524:	add	fp, sp, #16
   20528:	sub	sp, sp, #12
   2052c:	str	r0, [fp, #-24]	; 0xffffffe8
   20530:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20534:	ldrb	r3, [r3, #12]
   20538:	cmp	r3, #0
   2053c:	bne	2074c <__assert_fail@plt+0xf4dc>
   20540:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20544:	ldrb	r3, [r3]
   20548:	cmp	r3, #0
   2054c:	bne	205e4 <__assert_fail@plt+0xf374>
   20550:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20554:	ldr	r3, [r3, #16]
   20558:	ldrb	r3, [r3]
   2055c:	mov	r0, r3
   20560:	bl	3ecac <__assert_fail@plt+0x2da3c>
   20564:	mov	r3, r0
   20568:	cmp	r3, #0
   2056c:	beq	205a4 <__assert_fail@plt+0xf334>
   20570:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20574:	mov	r2, #1
   20578:	str	r2, [r3, #20]
   2057c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20580:	ldr	r3, [r3, #16]
   20584:	ldrb	r3, [r3]
   20588:	mov	r2, r3
   2058c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20590:	str	r2, [r3, #28]
   20594:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20598:	mov	r2, #1
   2059c:	strb	r2, [r3, #24]
   205a0:	b	2073c <__assert_fail@plt+0xf4cc>
   205a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   205a8:	add	r3, r3, #4
   205ac:	mov	r0, r3
   205b0:	bl	11048 <mbsinit@plt>
   205b4:	mov	r3, r0
   205b8:	cmp	r3, #0
   205bc:	bne	205d4 <__assert_fail@plt+0xf364>
   205c0:	ldr	r3, [pc, #400]	; 20758 <__assert_fail@plt+0xf4e8>
   205c4:	mov	r2, #143	; 0x8f
   205c8:	ldr	r1, [pc, #396]	; 2075c <__assert_fail@plt+0xf4ec>
   205cc:	ldr	r0, [pc, #396]	; 20760 <__assert_fail@plt+0xf4f0>
   205d0:	bl	11270 <__assert_fail@plt>
   205d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   205d8:	mov	r2, #1
   205dc:	strb	r2, [r3]
   205e0:	b	205e8 <__assert_fail@plt+0xf378>
   205e4:	nop			; (mov r0, r0)
   205e8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   205ec:	add	r4, r3, #28
   205f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   205f4:	ldr	r5, [r3, #16]
   205f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   205fc:	ldr	r6, [r3, #16]
   20600:	bl	110b4 <__ctype_get_mb_cur_max@plt>
   20604:	mov	r3, r0
   20608:	mov	r1, r3
   2060c:	mov	r0, r6
   20610:	bl	3c26c <__assert_fail@plt+0x2affc>
   20614:	mov	r2, r0
   20618:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2061c:	add	r3, r3, #4
   20620:	mov	r1, r5
   20624:	mov	r0, r4
   20628:	bl	3ed0c <__assert_fail@plt+0x2da9c>
   2062c:	mov	r2, r0
   20630:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20634:	str	r2, [r3, #20]
   20638:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2063c:	ldr	r3, [r3, #20]
   20640:	cmn	r3, #1
   20644:	bne	20664 <__assert_fail@plt+0xf3f4>
   20648:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2064c:	mov	r2, #1
   20650:	str	r2, [r3, #20]
   20654:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20658:	mov	r2, #0
   2065c:	strb	r2, [r3, #24]
   20660:	b	2073c <__assert_fail@plt+0xf4cc>
   20664:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20668:	ldr	r3, [r3, #20]
   2066c:	cmn	r3, #2
   20670:	bne	206a0 <__assert_fail@plt+0xf430>
   20674:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20678:	ldr	r3, [r3, #16]
   2067c:	mov	r0, r3
   20680:	bl	11174 <strlen@plt>
   20684:	mov	r2, r0
   20688:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2068c:	str	r2, [r3, #20]
   20690:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20694:	mov	r2, #0
   20698:	strb	r2, [r3, #24]
   2069c:	b	2073c <__assert_fail@plt+0xf4cc>
   206a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   206a4:	ldr	r3, [r3, #20]
   206a8:	cmp	r3, #0
   206ac:	bne	20708 <__assert_fail@plt+0xf498>
   206b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   206b4:	mov	r2, #1
   206b8:	str	r2, [r3, #20]
   206bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   206c0:	ldr	r3, [r3, #16]
   206c4:	ldrb	r3, [r3]
   206c8:	cmp	r3, #0
   206cc:	beq	206e4 <__assert_fail@plt+0xf474>
   206d0:	ldr	r3, [pc, #128]	; 20758 <__assert_fail@plt+0xf4e8>
   206d4:	mov	r2, #171	; 0xab
   206d8:	ldr	r1, [pc, #124]	; 2075c <__assert_fail@plt+0xf4ec>
   206dc:	ldr	r0, [pc, #128]	; 20764 <__assert_fail@plt+0xf4f4>
   206e0:	bl	11270 <__assert_fail@plt>
   206e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   206e8:	ldr	r3, [r3, #28]
   206ec:	cmp	r3, #0
   206f0:	beq	20708 <__assert_fail@plt+0xf498>
   206f4:	ldr	r3, [pc, #92]	; 20758 <__assert_fail@plt+0xf4e8>
   206f8:	mov	r2, #172	; 0xac
   206fc:	ldr	r1, [pc, #88]	; 2075c <__assert_fail@plt+0xf4ec>
   20700:	ldr	r0, [pc, #96]	; 20768 <__assert_fail@plt+0xf4f8>
   20704:	bl	11270 <__assert_fail@plt>
   20708:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2070c:	mov	r2, #1
   20710:	strb	r2, [r3, #24]
   20714:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20718:	add	r3, r3, #4
   2071c:	mov	r0, r3
   20720:	bl	11048 <mbsinit@plt>
   20724:	mov	r3, r0
   20728:	cmp	r3, #0
   2072c:	beq	2073c <__assert_fail@plt+0xf4cc>
   20730:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20734:	mov	r2, #0
   20738:	strb	r2, [r3]
   2073c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20740:	mov	r2, #1
   20744:	strb	r2, [r3, #12]
   20748:	b	20750 <__assert_fail@plt+0xf4e0>
   2074c:	nop			; (mov r0, r0)
   20750:	sub	sp, fp, #16
   20754:	pop	{r4, r5, r6, fp, pc}
   20758:	andeq	r0, r4, r8, ror #31
   2075c:	muleq	r4, r4, pc	; <UNPREDICTABLE>
   20760:	andeq	r0, r4, r4, lsr #31
   20764:			; <UNDEFINED> instruction: 0x00040fbc
   20768:	ldrdeq	r0, [r4], -r4
   2076c:	push	{fp}		; (str fp, [sp, #-4]!)
   20770:	add	fp, sp, #0
   20774:	sub	sp, sp, #12
   20778:	str	r0, [fp, #-8]
   2077c:	str	r1, [fp, #-12]
   20780:	ldr	r3, [fp, #-8]
   20784:	ldr	r2, [r3, #16]
   20788:	ldr	r3, [fp, #-12]
   2078c:	add	r2, r2, r3
   20790:	ldr	r3, [fp, #-8]
   20794:	str	r2, [r3, #16]
   20798:	nop			; (mov r0, r0)
   2079c:	add	sp, fp, #0
   207a0:	pop	{fp}		; (ldr fp, [sp], #4)
   207a4:	bx	lr
   207a8:	push	{fp, lr}
   207ac:	add	fp, sp, #4
   207b0:	sub	sp, sp, #8
   207b4:	str	r0, [fp, #-8]
   207b8:	str	r1, [fp, #-12]
   207bc:	ldr	r3, [fp, #-12]
   207c0:	ldrb	r2, [r3]
   207c4:	ldr	r3, [fp, #-8]
   207c8:	strb	r2, [r3]
   207cc:	ldr	r3, [fp, #-8]
   207d0:	ldrb	r3, [r3]
   207d4:	cmp	r3, #0
   207d8:	beq	207fc <__assert_fail@plt+0xf58c>
   207dc:	ldr	r3, [fp, #-8]
   207e0:	add	r0, r3, #4
   207e4:	ldr	r3, [fp, #-12]
   207e8:	add	r3, r3, #4
   207ec:	mov	r2, #8
   207f0:	mov	r1, r3
   207f4:	bl	11018 <memcpy@plt>
   207f8:	b	20814 <__assert_fail@plt+0xf5a4>
   207fc:	ldr	r3, [fp, #-8]
   20800:	add	r3, r3, #4
   20804:	mov	r2, #8
   20808:	mov	r1, #0
   2080c:	mov	r0, r3
   20810:	bl	111bc <memset@plt>
   20814:	ldr	r3, [fp, #-12]
   20818:	ldrb	r2, [r3, #12]
   2081c:	ldr	r3, [fp, #-8]
   20820:	strb	r2, [r3, #12]
   20824:	ldr	r3, [fp, #-8]
   20828:	add	r2, r3, #16
   2082c:	ldr	r3, [fp, #-12]
   20830:	add	r3, r3, #16
   20834:	mov	r1, r3
   20838:	mov	r0, r2
   2083c:	bl	3ebf0 <__assert_fail@plt+0x2d980>
   20840:	nop			; (mov r0, r0)
   20844:	sub	sp, fp, #4
   20848:	pop	{fp, pc}
   2084c:	push	{fp, lr}
   20850:	add	fp, sp, #4
   20854:	sub	sp, sp, #16
   20858:	str	r0, [fp, #-16]
   2085c:	ldr	r3, [fp, #-16]
   20860:	cmp	r3, #0
   20864:	bne	20884 <__assert_fail@plt+0xf614>
   20868:	ldr	r3, [pc, #220]	; 2094c <__assert_fail@plt+0xf6dc>
   2086c:	ldr	r3, [r3]
   20870:	mov	r2, #55	; 0x37
   20874:	mov	r1, #1
   20878:	ldr	r0, [pc, #208]	; 20950 <__assert_fail@plt+0xf6e0>
   2087c:	bl	1109c <fwrite@plt>
   20880:	bl	11258 <abort@plt>
   20884:	mov	r1, #47	; 0x2f
   20888:	ldr	r0, [fp, #-16]
   2088c:	bl	1121c <strrchr@plt>
   20890:	str	r0, [fp, #-8]
   20894:	ldr	r3, [fp, #-8]
   20898:	cmp	r3, #0
   2089c:	beq	208ac <__assert_fail@plt+0xf63c>
   208a0:	ldr	r3, [fp, #-8]
   208a4:	add	r3, r3, #1
   208a8:	b	208b0 <__assert_fail@plt+0xf640>
   208ac:	ldr	r3, [fp, #-16]
   208b0:	str	r3, [fp, #-12]
   208b4:	ldr	r2, [fp, #-12]
   208b8:	ldr	r3, [fp, #-16]
   208bc:	sub	r3, r2, r3
   208c0:	cmp	r3, #6
   208c4:	ble	20928 <__assert_fail@plt+0xf6b8>
   208c8:	ldr	r3, [fp, #-12]
   208cc:	sub	r3, r3, #7
   208d0:	mov	r2, #7
   208d4:	ldr	r1, [pc, #120]	; 20954 <__assert_fail@plt+0xf6e4>
   208d8:	mov	r0, r3
   208dc:	bl	1124c <strncmp@plt>
   208e0:	mov	r3, r0
   208e4:	cmp	r3, #0
   208e8:	bne	20928 <__assert_fail@plt+0xf6b8>
   208ec:	ldr	r3, [fp, #-12]
   208f0:	str	r3, [fp, #-16]
   208f4:	mov	r2, #3
   208f8:	ldr	r1, [pc, #88]	; 20958 <__assert_fail@plt+0xf6e8>
   208fc:	ldr	r0, [fp, #-12]
   20900:	bl	1124c <strncmp@plt>
   20904:	mov	r3, r0
   20908:	cmp	r3, #0
   2090c:	bne	20928 <__assert_fail@plt+0xf6b8>
   20910:	ldr	r3, [fp, #-12]
   20914:	add	r3, r3, #3
   20918:	str	r3, [fp, #-16]
   2091c:	ldr	r2, [pc, #56]	; 2095c <__assert_fail@plt+0xf6ec>
   20920:	ldr	r3, [fp, #-16]
   20924:	str	r3, [r2]
   20928:	ldr	r2, [pc, #48]	; 20960 <__assert_fail@plt+0xf6f0>
   2092c:	ldr	r3, [fp, #-16]
   20930:	str	r3, [r2]
   20934:	ldr	r2, [pc, #40]	; 20964 <__assert_fail@plt+0xf6f4>
   20938:	ldr	r3, [fp, #-16]
   2093c:	str	r3, [r2]
   20940:	nop			; (mov r0, r0)
   20944:	sub	sp, fp, #4
   20948:	pop	{fp, pc}
   2094c:	andeq	r2, r5, r8, lsl #3
   20950:	strdeq	r0, [r4], -ip
   20954:	andeq	r1, r4, r4, lsr r0
   20958:	andeq	r1, r4, ip, lsr r0
   2095c:	andeq	r2, r5, r8, ror r1
   20960:	andeq	r2, r5, r4, lsr #3
   20964:	andeq	r2, r5, ip, ror r1
   20968:	push	{fp, lr}
   2096c:	add	fp, sp, #4
   20970:	sub	sp, sp, #16
   20974:	str	r0, [fp, #-16]
   20978:	bl	11198 <__errno_location@plt>
   2097c:	mov	r3, r0
   20980:	ldr	r3, [r3]
   20984:	str	r3, [fp, #-8]
   20988:	ldr	r3, [fp, #-16]
   2098c:	cmp	r3, #0
   20990:	beq	2099c <__assert_fail@plt+0xf72c>
   20994:	ldr	r3, [fp, #-16]
   20998:	b	209a0 <__assert_fail@plt+0xf730>
   2099c:	ldr	r3, [pc, #48]	; 209d4 <__assert_fail@plt+0xf764>
   209a0:	mov	r1, #48	; 0x30
   209a4:	mov	r0, r3
   209a8:	bl	3dd74 <__assert_fail@plt+0x2cb04>
   209ac:	mov	r3, r0
   209b0:	str	r3, [fp, #-12]
   209b4:	bl	11198 <__errno_location@plt>
   209b8:	mov	r2, r0
   209bc:	ldr	r3, [fp, #-8]
   209c0:	str	r3, [r2]
   209c4:	ldr	r3, [fp, #-12]
   209c8:	mov	r0, r3
   209cc:	sub	sp, fp, #4
   209d0:	pop	{fp, pc}
   209d4:	andeq	r2, r5, r8, lsr #3
   209d8:	push	{fp}		; (str fp, [sp, #-4]!)
   209dc:	add	fp, sp, #0
   209e0:	sub	sp, sp, #12
   209e4:	str	r0, [fp, #-8]
   209e8:	ldr	r3, [fp, #-8]
   209ec:	cmp	r3, #0
   209f0:	beq	209fc <__assert_fail@plt+0xf78c>
   209f4:	ldr	r3, [fp, #-8]
   209f8:	b	20a00 <__assert_fail@plt+0xf790>
   209fc:	ldr	r3, [pc, #16]	; 20a14 <__assert_fail@plt+0xf7a4>
   20a00:	ldr	r3, [r3]
   20a04:	mov	r0, r3
   20a08:	add	sp, fp, #0
   20a0c:	pop	{fp}		; (ldr fp, [sp], #4)
   20a10:	bx	lr
   20a14:	andeq	r2, r5, r8, lsr #3
   20a18:	push	{fp}		; (str fp, [sp, #-4]!)
   20a1c:	add	fp, sp, #0
   20a20:	sub	sp, sp, #12
   20a24:	str	r0, [fp, #-8]
   20a28:	str	r1, [fp, #-12]
   20a2c:	ldr	r3, [fp, #-8]
   20a30:	cmp	r3, #0
   20a34:	beq	20a40 <__assert_fail@plt+0xf7d0>
   20a38:	ldr	r3, [fp, #-8]
   20a3c:	b	20a44 <__assert_fail@plt+0xf7d4>
   20a40:	ldr	r3, [pc, #20]	; 20a5c <__assert_fail@plt+0xf7ec>
   20a44:	ldr	r2, [fp, #-12]
   20a48:	str	r2, [r3]
   20a4c:	nop			; (mov r0, r0)
   20a50:	add	sp, fp, #0
   20a54:	pop	{fp}		; (ldr fp, [sp], #4)
   20a58:	bx	lr
   20a5c:	andeq	r2, r5, r8, lsr #3
   20a60:	push	{fp}		; (str fp, [sp, #-4]!)
   20a64:	add	fp, sp, #0
   20a68:	sub	sp, sp, #36	; 0x24
   20a6c:	str	r0, [fp, #-24]	; 0xffffffe8
   20a70:	mov	r3, r1
   20a74:	str	r2, [fp, #-32]	; 0xffffffe0
   20a78:	strb	r3, [fp, #-25]	; 0xffffffe7
   20a7c:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   20a80:	strb	r3, [fp, #-5]
   20a84:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20a88:	cmp	r3, #0
   20a8c:	beq	20a98 <__assert_fail@plt+0xf828>
   20a90:	ldr	r3, [fp, #-24]	; 0xffffffe8
   20a94:	b	20a9c <__assert_fail@plt+0xf82c>
   20a98:	ldr	r3, [pc, #124]	; 20b1c <__assert_fail@plt+0xf8ac>
   20a9c:	add	r2, r3, #8
   20aa0:	ldrb	r3, [fp, #-5]
   20aa4:	lsr	r3, r3, #5
   20aa8:	uxtb	r3, r3
   20aac:	lsl	r3, r3, #2
   20ab0:	add	r3, r2, r3
   20ab4:	str	r3, [fp, #-12]
   20ab8:	ldrb	r3, [fp, #-5]
   20abc:	and	r3, r3, #31
   20ac0:	str	r3, [fp, #-16]
   20ac4:	ldr	r3, [fp, #-12]
   20ac8:	ldr	r2, [r3]
   20acc:	ldr	r3, [fp, #-16]
   20ad0:	lsr	r3, r2, r3
   20ad4:	and	r3, r3, #1
   20ad8:	str	r3, [fp, #-20]	; 0xffffffec
   20adc:	ldr	r3, [fp, #-12]
   20ae0:	ldr	r3, [r3]
   20ae4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   20ae8:	and	r1, r2, #1
   20aec:	ldr	r2, [fp, #-20]	; 0xffffffec
   20af0:	eor	r1, r1, r2
   20af4:	ldr	r2, [fp, #-16]
   20af8:	lsl	r2, r1, r2
   20afc:	eor	r2, r2, r3
   20b00:	ldr	r3, [fp, #-12]
   20b04:	str	r2, [r3]
   20b08:	ldr	r3, [fp, #-20]	; 0xffffffec
   20b0c:	mov	r0, r3
   20b10:	add	sp, fp, #0
   20b14:	pop	{fp}		; (ldr fp, [sp], #4)
   20b18:	bx	lr
   20b1c:	andeq	r2, r5, r8, lsr #3
   20b20:	push	{fp}		; (str fp, [sp, #-4]!)
   20b24:	add	fp, sp, #0
   20b28:	sub	sp, sp, #20
   20b2c:	str	r0, [fp, #-16]
   20b30:	str	r1, [fp, #-20]	; 0xffffffec
   20b34:	ldr	r3, [fp, #-16]
   20b38:	cmp	r3, #0
   20b3c:	bne	20b48 <__assert_fail@plt+0xf8d8>
   20b40:	ldr	r3, [pc, #44]	; 20b74 <__assert_fail@plt+0xf904>
   20b44:	str	r3, [fp, #-16]
   20b48:	ldr	r3, [fp, #-16]
   20b4c:	ldr	r3, [r3, #4]
   20b50:	str	r3, [fp, #-8]
   20b54:	ldr	r3, [fp, #-16]
   20b58:	ldr	r2, [fp, #-20]	; 0xffffffec
   20b5c:	str	r2, [r3, #4]
   20b60:	ldr	r3, [fp, #-8]
   20b64:	mov	r0, r3
   20b68:	add	sp, fp, #0
   20b6c:	pop	{fp}		; (ldr fp, [sp], #4)
   20b70:	bx	lr
   20b74:	andeq	r2, r5, r8, lsr #3
   20b78:	push	{fp, lr}
   20b7c:	add	fp, sp, #4
   20b80:	sub	sp, sp, #16
   20b84:	str	r0, [fp, #-8]
   20b88:	str	r1, [fp, #-12]
   20b8c:	str	r2, [fp, #-16]
   20b90:	ldr	r3, [fp, #-8]
   20b94:	cmp	r3, #0
   20b98:	bne	20ba4 <__assert_fail@plt+0xf934>
   20b9c:	ldr	r3, [pc, #76]	; 20bf0 <__assert_fail@plt+0xf980>
   20ba0:	str	r3, [fp, #-8]
   20ba4:	ldr	r3, [fp, #-8]
   20ba8:	mov	r2, #10
   20bac:	str	r2, [r3]
   20bb0:	ldr	r3, [fp, #-12]
   20bb4:	cmp	r3, #0
   20bb8:	beq	20bc8 <__assert_fail@plt+0xf958>
   20bbc:	ldr	r3, [fp, #-16]
   20bc0:	cmp	r3, #0
   20bc4:	bne	20bcc <__assert_fail@plt+0xf95c>
   20bc8:	bl	11258 <abort@plt>
   20bcc:	ldr	r3, [fp, #-8]
   20bd0:	ldr	r2, [fp, #-12]
   20bd4:	str	r2, [r3, #40]	; 0x28
   20bd8:	ldr	r3, [fp, #-8]
   20bdc:	ldr	r2, [fp, #-16]
   20be0:	str	r2, [r3, #44]	; 0x2c
   20be4:	nop			; (mov r0, r0)
   20be8:	sub	sp, fp, #4
   20bec:	pop	{fp, pc}
   20bf0:	andeq	r2, r5, r8, lsr #3
   20bf4:	push	{fp, lr}
   20bf8:	add	fp, sp, #4
   20bfc:	sub	sp, sp, #56	; 0x38
   20c00:	str	r0, [fp, #-56]	; 0xffffffc8
   20c04:	str	r1, [fp, #-60]	; 0xffffffc4
   20c08:	sub	r3, fp, #52	; 0x34
   20c0c:	mov	r2, #48	; 0x30
   20c10:	mov	r1, #0
   20c14:	mov	r0, r3
   20c18:	bl	111bc <memset@plt>
   20c1c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   20c20:	cmp	r3, #10
   20c24:	bne	20c2c <__assert_fail@plt+0xf9bc>
   20c28:	bl	11258 <abort@plt>
   20c2c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   20c30:	str	r3, [fp, #-52]	; 0xffffffcc
   20c34:	ldr	r3, [fp, #-56]	; 0xffffffc8
   20c38:	mov	lr, r3
   20c3c:	sub	ip, fp, #52	; 0x34
   20c40:	ldm	ip!, {r0, r1, r2, r3}
   20c44:	stmia	lr!, {r0, r1, r2, r3}
   20c48:	ldm	ip!, {r0, r1, r2, r3}
   20c4c:	stmia	lr!, {r0, r1, r2, r3}
   20c50:	ldm	ip, {r0, r1, r2, r3}
   20c54:	stm	lr, {r0, r1, r2, r3}
   20c58:	ldr	r0, [fp, #-56]	; 0xffffffc8
   20c5c:	sub	sp, fp, #4
   20c60:	pop	{fp, pc}
   20c64:	push	{fp, lr}
   20c68:	add	fp, sp, #4
   20c6c:	sub	sp, sp, #16
   20c70:	str	r0, [fp, #-16]
   20c74:	str	r1, [fp, #-20]	; 0xffffffec
   20c78:	ldr	r0, [fp, #-16]
   20c7c:	bl	11168 <gettext@plt>
   20c80:	str	r0, [fp, #-8]
   20c84:	ldr	r2, [fp, #-8]
   20c88:	ldr	r3, [fp, #-16]
   20c8c:	cmp	r2, r3
   20c90:	beq	20c9c <__assert_fail@plt+0xfa2c>
   20c94:	ldr	r3, [fp, #-8]
   20c98:	b	20d2c <__assert_fail@plt+0xfabc>
   20c9c:	bl	3eb3c <__assert_fail@plt+0x2d8cc>
   20ca0:	str	r0, [fp, #-12]
   20ca4:	ldr	r1, [pc, #140]	; 20d38 <__assert_fail@plt+0xfac8>
   20ca8:	ldr	r0, [fp, #-12]
   20cac:	bl	3e110 <__assert_fail@plt+0x2cea0>
   20cb0:	mov	r3, r0
   20cb4:	cmp	r3, #0
   20cb8:	bne	20cdc <__assert_fail@plt+0xfa6c>
   20cbc:	ldr	r3, [fp, #-16]
   20cc0:	ldrb	r3, [r3]
   20cc4:	cmp	r3, #96	; 0x60
   20cc8:	bne	20cd4 <__assert_fail@plt+0xfa64>
   20ccc:	ldr	r3, [pc, #104]	; 20d3c <__assert_fail@plt+0xfacc>
   20cd0:	b	20d2c <__assert_fail@plt+0xfabc>
   20cd4:	ldr	r3, [pc, #100]	; 20d40 <__assert_fail@plt+0xfad0>
   20cd8:	b	20d2c <__assert_fail@plt+0xfabc>
   20cdc:	ldr	r1, [pc, #96]	; 20d44 <__assert_fail@plt+0xfad4>
   20ce0:	ldr	r0, [fp, #-12]
   20ce4:	bl	3e110 <__assert_fail@plt+0x2cea0>
   20ce8:	mov	r3, r0
   20cec:	cmp	r3, #0
   20cf0:	bne	20d14 <__assert_fail@plt+0xfaa4>
   20cf4:	ldr	r3, [fp, #-16]
   20cf8:	ldrb	r3, [r3]
   20cfc:	cmp	r3, #96	; 0x60
   20d00:	bne	20d0c <__assert_fail@plt+0xfa9c>
   20d04:	ldr	r3, [pc, #60]	; 20d48 <__assert_fail@plt+0xfad8>
   20d08:	b	20d2c <__assert_fail@plt+0xfabc>
   20d0c:	ldr	r3, [pc, #56]	; 20d4c <__assert_fail@plt+0xfadc>
   20d10:	b	20d2c <__assert_fail@plt+0xfabc>
   20d14:	ldr	r3, [fp, #-20]	; 0xffffffec
   20d18:	cmp	r3, #9
   20d1c:	bne	20d28 <__assert_fail@plt+0xfab8>
   20d20:	ldr	r3, [pc, #40]	; 20d50 <__assert_fail@plt+0xfae0>
   20d24:	b	20d2c <__assert_fail@plt+0xfabc>
   20d28:	ldr	r3, [pc, #36]	; 20d54 <__assert_fail@plt+0xfae4>
   20d2c:	mov	r0, r3
   20d30:	sub	sp, fp, #4
   20d34:	pop	{fp, pc}
   20d38:	strdeq	r1, [r4], -ip
   20d3c:	andeq	r1, r4, r4, lsl #2
   20d40:	andeq	r1, r4, r8, lsl #2
   20d44:	andeq	r1, r4, ip, lsl #2
   20d48:	andeq	r1, r4, r4, lsl r1
   20d4c:	andeq	r1, r4, r8, lsl r1
   20d50:	andeq	r1, r4, ip, lsl r1
   20d54:	andeq	r1, r4, r0, lsr #2
   20d58:	push	{r4, fp, lr}
   20d5c:	add	fp, sp, #8
   20d60:	sub	sp, sp, #116	; 0x74
   20d64:	str	r0, [fp, #-88]	; 0xffffffa8
   20d68:	str	r1, [fp, #-92]	; 0xffffffa4
   20d6c:	str	r2, [fp, #-96]	; 0xffffffa0
   20d70:	str	r3, [fp, #-100]	; 0xffffff9c
   20d74:	mov	r3, #0
   20d78:	str	r3, [fp, #-20]	; 0xffffffec
   20d7c:	mov	r3, #0
   20d80:	str	r3, [fp, #-24]	; 0xffffffe8
   20d84:	mov	r3, #0
   20d88:	str	r3, [fp, #-28]	; 0xffffffe4
   20d8c:	mov	r3, #0
   20d90:	str	r3, [fp, #-32]	; 0xffffffe0
   20d94:	mov	r3, #0
   20d98:	strb	r3, [fp, #-33]	; 0xffffffdf
   20d9c:	bl	110b4 <__ctype_get_mb_cur_max@plt>
   20da0:	mov	r3, r0
   20da4:	cmp	r3, #1
   20da8:	moveq	r3, #1
   20dac:	movne	r3, #0
   20db0:	strb	r3, [fp, #-57]	; 0xffffffc7
   20db4:	ldr	r3, [fp, #8]
   20db8:	and	r3, r3, #2
   20dbc:	cmp	r3, #0
   20dc0:	movne	r3, #1
   20dc4:	moveq	r3, #0
   20dc8:	strb	r3, [fp, #-34]	; 0xffffffde
   20dcc:	mov	r3, #0
   20dd0:	strb	r3, [fp, #-35]	; 0xffffffdd
   20dd4:	mov	r3, #0
   20dd8:	strb	r3, [fp, #-36]	; 0xffffffdc
   20ddc:	mov	r3, #1
   20de0:	strb	r3, [fp, #-37]	; 0xffffffdb
   20de4:	ldr	r3, [fp, #4]
   20de8:	cmp	r3, #10
   20dec:	ldrls	pc, [pc, r3, lsl #2]
   20df0:	b	20ff8 <__assert_fail@plt+0xfd88>
   20df4:	andeq	r0, r2, ip, ror #31
   20df8:	andeq	r0, r2, r8, ror #30
   20dfc:	andeq	r0, r2, ip, lsl #31
   20e00:	andeq	r0, r2, r0, ror #30
   20e04:	andeq	r0, r2, r0, ror pc
   20e08:	andeq	r0, r2, r0, lsr lr
   20e0c:	andeq	r0, r2, r0, lsr #28
   20e10:	muleq	r2, r0, lr
   20e14:	andeq	r0, r2, r4, lsr #29
   20e18:	andeq	r0, r2, r4, lsr #29
   20e1c:	andeq	r0, r2, r4, lsr #29
   20e20:	mov	r3, #5
   20e24:	str	r3, [fp, #4]
   20e28:	mov	r3, #1
   20e2c:	strb	r3, [fp, #-34]	; 0xffffffde
   20e30:	ldrb	r3, [fp, #-34]	; 0xffffffde
   20e34:	eor	r3, r3, #1
   20e38:	uxtb	r3, r3
   20e3c:	cmp	r3, #0
   20e40:	beq	20e74 <__assert_fail@plt+0xfc04>
   20e44:	ldr	r2, [fp, #-20]	; 0xffffffec
   20e48:	ldr	r3, [fp, #-92]	; 0xffffffa4
   20e4c:	cmp	r2, r3
   20e50:	bcs	20e68 <__assert_fail@plt+0xfbf8>
   20e54:	ldr	r2, [fp, #-88]	; 0xffffffa8
   20e58:	ldr	r3, [fp, #-20]	; 0xffffffec
   20e5c:	add	r3, r2, r3
   20e60:	mov	r2, #34	; 0x22
   20e64:	strb	r2, [r3]
   20e68:	ldr	r3, [fp, #-20]	; 0xffffffec
   20e6c:	add	r3, r3, #1
   20e70:	str	r3, [fp, #-20]	; 0xffffffec
   20e74:	mov	r3, #1
   20e78:	strb	r3, [fp, #-33]	; 0xffffffdf
   20e7c:	ldr	r3, [pc, #3872]	; 21da4 <__assert_fail@plt+0x10b34>
   20e80:	str	r3, [fp, #-28]	; 0xffffffe4
   20e84:	mov	r3, #1
   20e88:	str	r3, [fp, #-32]	; 0xffffffe0
   20e8c:	b	20ffc <__assert_fail@plt+0xfd8c>
   20e90:	mov	r3, #1
   20e94:	strb	r3, [fp, #-33]	; 0xffffffdf
   20e98:	mov	r3, #0
   20e9c:	strb	r3, [fp, #-34]	; 0xffffffde
   20ea0:	b	20ffc <__assert_fail@plt+0xfd8c>
   20ea4:	ldr	r3, [fp, #4]
   20ea8:	cmp	r3, #10
   20eac:	beq	20ed0 <__assert_fail@plt+0xfc60>
   20eb0:	ldr	r1, [fp, #4]
   20eb4:	ldr	r0, [pc, #3820]	; 21da8 <__assert_fail@plt+0x10b38>
   20eb8:	bl	20c64 <__assert_fail@plt+0xf9f4>
   20ebc:	str	r0, [fp, #16]
   20ec0:	ldr	r1, [fp, #4]
   20ec4:	ldr	r0, [pc, #3808]	; 21dac <__assert_fail@plt+0x10b3c>
   20ec8:	bl	20c64 <__assert_fail@plt+0xf9f4>
   20ecc:	str	r0, [fp, #20]
   20ed0:	ldrb	r3, [fp, #-34]	; 0xffffffde
   20ed4:	eor	r3, r3, #1
   20ed8:	uxtb	r3, r3
   20edc:	cmp	r3, #0
   20ee0:	beq	20f40 <__assert_fail@plt+0xfcd0>
   20ee4:	ldr	r3, [fp, #16]
   20ee8:	str	r3, [fp, #-28]	; 0xffffffe4
   20eec:	b	20f30 <__assert_fail@plt+0xfcc0>
   20ef0:	ldr	r2, [fp, #-20]	; 0xffffffec
   20ef4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   20ef8:	cmp	r2, r3
   20efc:	bcs	20f18 <__assert_fail@plt+0xfca8>
   20f00:	ldr	r2, [fp, #-88]	; 0xffffffa8
   20f04:	ldr	r3, [fp, #-20]	; 0xffffffec
   20f08:	add	r3, r2, r3
   20f0c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   20f10:	ldrb	r2, [r2]
   20f14:	strb	r2, [r3]
   20f18:	ldr	r3, [fp, #-20]	; 0xffffffec
   20f1c:	add	r3, r3, #1
   20f20:	str	r3, [fp, #-20]	; 0xffffffec
   20f24:	ldr	r3, [fp, #-28]	; 0xffffffe4
   20f28:	add	r3, r3, #1
   20f2c:	str	r3, [fp, #-28]	; 0xffffffe4
   20f30:	ldr	r3, [fp, #-28]	; 0xffffffe4
   20f34:	ldrb	r3, [r3]
   20f38:	cmp	r3, #0
   20f3c:	bne	20ef0 <__assert_fail@plt+0xfc80>
   20f40:	mov	r3, #1
   20f44:	strb	r3, [fp, #-33]	; 0xffffffdf
   20f48:	ldr	r3, [fp, #20]
   20f4c:	str	r3, [fp, #-28]	; 0xffffffe4
   20f50:	ldr	r0, [fp, #-28]	; 0xffffffe4
   20f54:	bl	11174 <strlen@plt>
   20f58:	str	r0, [fp, #-32]	; 0xffffffe0
   20f5c:	b	20ffc <__assert_fail@plt+0xfd8c>
   20f60:	mov	r3, #1
   20f64:	strb	r3, [fp, #-33]	; 0xffffffdf
   20f68:	mov	r3, #1
   20f6c:	strb	r3, [fp, #-34]	; 0xffffffde
   20f70:	ldrb	r3, [fp, #-34]	; 0xffffffde
   20f74:	eor	r3, r3, #1
   20f78:	uxtb	r3, r3
   20f7c:	cmp	r3, #0
   20f80:	beq	20f8c <__assert_fail@plt+0xfd1c>
   20f84:	mov	r3, #1
   20f88:	strb	r3, [fp, #-33]	; 0xffffffdf
   20f8c:	mov	r3, #2
   20f90:	str	r3, [fp, #4]
   20f94:	ldrb	r3, [fp, #-34]	; 0xffffffde
   20f98:	eor	r3, r3, #1
   20f9c:	uxtb	r3, r3
   20fa0:	cmp	r3, #0
   20fa4:	beq	20fd8 <__assert_fail@plt+0xfd68>
   20fa8:	ldr	r2, [fp, #-20]	; 0xffffffec
   20fac:	ldr	r3, [fp, #-92]	; 0xffffffa4
   20fb0:	cmp	r2, r3
   20fb4:	bcs	20fcc <__assert_fail@plt+0xfd5c>
   20fb8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   20fbc:	ldr	r3, [fp, #-20]	; 0xffffffec
   20fc0:	add	r3, r2, r3
   20fc4:	mov	r2, #39	; 0x27
   20fc8:	strb	r2, [r3]
   20fcc:	ldr	r3, [fp, #-20]	; 0xffffffec
   20fd0:	add	r3, r3, #1
   20fd4:	str	r3, [fp, #-20]	; 0xffffffec
   20fd8:	ldr	r3, [pc, #3532]	; 21dac <__assert_fail@plt+0x10b3c>
   20fdc:	str	r3, [fp, #-28]	; 0xffffffe4
   20fe0:	mov	r3, #1
   20fe4:	str	r3, [fp, #-32]	; 0xffffffe0
   20fe8:	b	20ffc <__assert_fail@plt+0xfd8c>
   20fec:	mov	r3, #0
   20ff0:	strb	r3, [fp, #-34]	; 0xffffffde
   20ff4:	b	20ffc <__assert_fail@plt+0xfd8c>
   20ff8:	bl	11258 <abort@plt>
   20ffc:	mov	r3, #0
   21000:	str	r3, [fp, #-16]
   21004:	b	22194 <__assert_fail@plt+0x10f24>
   21008:	mov	r3, #0
   2100c:	strb	r3, [fp, #-40]	; 0xffffffd8
   21010:	mov	r3, #0
   21014:	strb	r3, [fp, #-41]	; 0xffffffd7
   21018:	mov	r3, #0
   2101c:	strb	r3, [fp, #-42]	; 0xffffffd6
   21020:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   21024:	cmp	r3, #0
   21028:	beq	210c4 <__assert_fail@plt+0xfe54>
   2102c:	ldr	r3, [fp, #4]
   21030:	cmp	r3, #2
   21034:	beq	210c4 <__assert_fail@plt+0xfe54>
   21038:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2103c:	cmp	r3, #0
   21040:	beq	210c4 <__assert_fail@plt+0xfe54>
   21044:	ldr	r2, [fp, #-16]
   21048:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2104c:	add	r4, r2, r3
   21050:	ldr	r3, [fp, #-100]	; 0xffffff9c
   21054:	cmn	r3, #1
   21058:	bne	2107c <__assert_fail@plt+0xfe0c>
   2105c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   21060:	cmp	r3, #1
   21064:	bls	2107c <__assert_fail@plt+0xfe0c>
   21068:	ldr	r0, [fp, #-96]	; 0xffffffa0
   2106c:	bl	11174 <strlen@plt>
   21070:	str	r0, [fp, #-100]	; 0xffffff9c
   21074:	ldr	r3, [fp, #-100]	; 0xffffff9c
   21078:	b	21080 <__assert_fail@plt+0xfe10>
   2107c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   21080:	cmp	r4, r3
   21084:	bhi	210c4 <__assert_fail@plt+0xfe54>
   21088:	ldr	r2, [fp, #-96]	; 0xffffffa0
   2108c:	ldr	r3, [fp, #-16]
   21090:	add	r3, r2, r3
   21094:	ldr	r2, [fp, #-32]	; 0xffffffe0
   21098:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2109c:	mov	r0, r3
   210a0:	bl	11054 <memcmp@plt>
   210a4:	mov	r3, r0
   210a8:	cmp	r3, #0
   210ac:	bne	210c4 <__assert_fail@plt+0xfe54>
   210b0:	ldrb	r3, [fp, #-34]	; 0xffffffde
   210b4:	cmp	r3, #0
   210b8:	bne	22350 <__assert_fail@plt+0x110e0>
   210bc:	mov	r3, #1
   210c0:	strb	r3, [fp, #-40]	; 0xffffffd8
   210c4:	ldr	r2, [fp, #-96]	; 0xffffffa0
   210c8:	ldr	r3, [fp, #-16]
   210cc:	add	r3, r2, r3
   210d0:	ldrb	r3, [r3]
   210d4:	strb	r3, [fp, #-38]	; 0xffffffda
   210d8:	ldrb	r3, [fp, #-38]	; 0xffffffda
   210dc:	cmp	r3, #126	; 0x7e
   210e0:	ldrls	pc, [pc, r3, lsl #2]
   210e4:	b	21910 <__assert_fail@plt+0x106a0>
   210e8:	andeq	r1, r2, r4, ror #5
   210ec:	andeq	r1, r2, r0, lsl r9
   210f0:	andeq	r1, r2, r0, lsl r9
   210f4:	andeq	r1, r2, r0, lsl r9
   210f8:	andeq	r1, r2, r0, lsl r9
   210fc:	andeq	r1, r2, r0, lsl r9
   21100:	andeq	r1, r2, r0, lsl r9
   21104:	ldrdeq	r1, [r2], -r4
   21108:	andeq	r1, r2, r0, ror #13
   2110c:	andeq	r1, r2, r0, lsl r7
   21110:	strdeq	r1, [r2], -r8
   21114:	andeq	r1, r2, ip, lsl r7
   21118:	andeq	r1, r2, ip, ror #13
   2111c:	andeq	r1, r2, r4, lsl #14
   21120:	andeq	r1, r2, r0, lsl r9
   21124:	andeq	r1, r2, r0, lsl r9
   21128:	andeq	r1, r2, r0, lsl r9
   2112c:	andeq	r1, r2, r0, lsl r9
   21130:	andeq	r1, r2, r0, lsl r9
   21134:	andeq	r1, r2, r0, lsl r9
   21138:	andeq	r1, r2, r0, lsl r9
   2113c:	andeq	r1, r2, r0, lsl r9
   21140:	andeq	r1, r2, r0, lsl r9
   21144:	andeq	r1, r2, r0, lsl r9
   21148:	andeq	r1, r2, r0, lsl r9
   2114c:	andeq	r1, r2, r0, lsl r9
   21150:	andeq	r1, r2, r0, lsl r9
   21154:	andeq	r1, r2, r0, lsl r9
   21158:	andeq	r1, r2, r0, lsl r9
   2115c:	andeq	r1, r2, r0, lsl r9
   21160:	andeq	r1, r2, r0, lsl r9
   21164:	andeq	r1, r2, r0, lsl r9
   21168:	strdeq	r1, [r2], -r4
   2116c:	strdeq	r1, [r2], -ip
   21170:	strdeq	r1, [r2], -ip
   21174:	andeq	r1, r2, r8, ror #15
   21178:	strdeq	r1, [r2], -ip
   2117c:	andeq	r1, r2, r4, lsl #18
   21180:	strdeq	r1, [r2], -ip
   21184:	andeq	r1, r2, r8, lsl r8
   21188:	strdeq	r1, [r2], -ip
   2118c:	strdeq	r1, [r2], -ip
   21190:	strdeq	r1, [r2], -ip
   21194:	andeq	r1, r2, r4, lsl #18
   21198:	andeq	r1, r2, r4, lsl #18
   2119c:	andeq	r1, r2, r4, lsl #18
   211a0:	andeq	r1, r2, r4, lsl #18
   211a4:	andeq	r1, r2, r4, lsl #18
   211a8:	andeq	r1, r2, r4, lsl #18
   211ac:	andeq	r1, r2, r4, lsl #18
   211b0:	andeq	r1, r2, r4, lsl #18
   211b4:	andeq	r1, r2, r4, lsl #18
   211b8:	andeq	r1, r2, r4, lsl #18
   211bc:	andeq	r1, r2, r4, lsl #18
   211c0:	andeq	r1, r2, r4, lsl #18
   211c4:	andeq	r1, r2, r4, lsl #18
   211c8:	andeq	r1, r2, r4, lsl #18
   211cc:	andeq	r1, r2, r4, lsl #18
   211d0:	andeq	r1, r2, r4, lsl #18
   211d4:	strdeq	r1, [r2], -ip
   211d8:	strdeq	r1, [r2], -ip
   211dc:	strdeq	r1, [r2], -ip
   211e0:	strdeq	r1, [r2], -ip
   211e4:	andeq	r1, r2, r4, asr #9
   211e8:	andeq	r1, r2, r0, lsl r9
   211ec:	andeq	r1, r2, r4, lsl #18
   211f0:	andeq	r1, r2, r4, lsl #18
   211f4:	andeq	r1, r2, r4, lsl #18
   211f8:	andeq	r1, r2, r4, lsl #18
   211fc:	andeq	r1, r2, r4, lsl #18
   21200:	andeq	r1, r2, r4, lsl #18
   21204:	andeq	r1, r2, r4, lsl #18
   21208:	andeq	r1, r2, r4, lsl #18
   2120c:	andeq	r1, r2, r4, lsl #18
   21210:	andeq	r1, r2, r4, lsl #18
   21214:	andeq	r1, r2, r4, lsl #18
   21218:	andeq	r1, r2, r4, lsl #18
   2121c:	andeq	r1, r2, r4, lsl #18
   21220:	andeq	r1, r2, r4, lsl #18
   21224:	andeq	r1, r2, r4, lsl #18
   21228:	andeq	r1, r2, r4, lsl #18
   2122c:	andeq	r1, r2, r4, lsl #18
   21230:	andeq	r1, r2, r4, lsl #18
   21234:	andeq	r1, r2, r4, lsl #18
   21238:	andeq	r1, r2, r4, lsl #18
   2123c:	andeq	r1, r2, r4, lsl #18
   21240:	andeq	r1, r2, r4, lsl #18
   21244:	andeq	r1, r2, r4, lsl #18
   21248:	andeq	r1, r2, r4, lsl #18
   2124c:	andeq	r1, r2, r4, lsl #18
   21250:	andeq	r1, r2, r4, lsl #18
   21254:	strdeq	r1, [r2], -ip
   21258:	andeq	r1, r2, r8, lsr #14
   2125c:	andeq	r1, r2, r4, lsl #18
   21260:	strdeq	r1, [r2], -ip
   21264:	andeq	r1, r2, r4, lsl #18
   21268:	strdeq	r1, [r2], -ip
   2126c:	andeq	r1, r2, r4, lsl #18
   21270:	andeq	r1, r2, r4, lsl #18
   21274:	andeq	r1, r2, r4, lsl #18
   21278:	andeq	r1, r2, r4, lsl #18
   2127c:	andeq	r1, r2, r4, lsl #18
   21280:	andeq	r1, r2, r4, lsl #18
   21284:	andeq	r1, r2, r4, lsl #18
   21288:	andeq	r1, r2, r4, lsl #18
   2128c:	andeq	r1, r2, r4, lsl #18
   21290:	andeq	r1, r2, r4, lsl #18
   21294:	andeq	r1, r2, r4, lsl #18
   21298:	andeq	r1, r2, r4, lsl #18
   2129c:	andeq	r1, r2, r4, lsl #18
   212a0:	andeq	r1, r2, r4, lsl #18
   212a4:	andeq	r1, r2, r4, lsl #18
   212a8:	andeq	r1, r2, r4, lsl #18
   212ac:	andeq	r1, r2, r4, lsl #18
   212b0:	andeq	r1, r2, r4, lsl #18
   212b4:	andeq	r1, r2, r4, lsl #18
   212b8:	andeq	r1, r2, r4, lsl #18
   212bc:	andeq	r1, r2, r4, lsl #18
   212c0:	andeq	r1, r2, r4, lsl #18
   212c4:	andeq	r1, r2, r4, lsl #18
   212c8:	andeq	r1, r2, r4, lsl #18
   212cc:	andeq	r1, r2, r4, lsl #18
   212d0:	andeq	r1, r2, r4, lsl #18
   212d4:	andeq	r1, r2, r0, lsr #15
   212d8:	strdeq	r1, [r2], -ip
   212dc:	andeq	r1, r2, r0, lsr #15
   212e0:	andeq	r1, r2, r8, ror #15
   212e4:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   212e8:	cmp	r3, #0
   212ec:	beq	214b0 <__assert_fail@plt+0x10240>
   212f0:	ldrb	r3, [fp, #-34]	; 0xffffffde
   212f4:	cmp	r3, #0
   212f8:	bne	22358 <__assert_fail@plt+0x110e8>
   212fc:	mov	r3, #1
   21300:	strb	r3, [fp, #-41]	; 0xffffffd7
   21304:	ldr	r3, [fp, #4]
   21308:	cmp	r3, #2
   2130c:	bne	213bc <__assert_fail@plt+0x1014c>
   21310:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   21314:	eor	r3, r3, #1
   21318:	uxtb	r3, r3
   2131c:	cmp	r3, #0
   21320:	beq	213bc <__assert_fail@plt+0x1014c>
   21324:	ldr	r2, [fp, #-20]	; 0xffffffec
   21328:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2132c:	cmp	r2, r3
   21330:	bcs	21348 <__assert_fail@plt+0x100d8>
   21334:	ldr	r2, [fp, #-88]	; 0xffffffa8
   21338:	ldr	r3, [fp, #-20]	; 0xffffffec
   2133c:	add	r3, r2, r3
   21340:	mov	r2, #39	; 0x27
   21344:	strb	r2, [r3]
   21348:	ldr	r3, [fp, #-20]	; 0xffffffec
   2134c:	add	r3, r3, #1
   21350:	str	r3, [fp, #-20]	; 0xffffffec
   21354:	ldr	r2, [fp, #-20]	; 0xffffffec
   21358:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2135c:	cmp	r2, r3
   21360:	bcs	21378 <__assert_fail@plt+0x10108>
   21364:	ldr	r2, [fp, #-88]	; 0xffffffa8
   21368:	ldr	r3, [fp, #-20]	; 0xffffffec
   2136c:	add	r3, r2, r3
   21370:	mov	r2, #36	; 0x24
   21374:	strb	r2, [r3]
   21378:	ldr	r3, [fp, #-20]	; 0xffffffec
   2137c:	add	r3, r3, #1
   21380:	str	r3, [fp, #-20]	; 0xffffffec
   21384:	ldr	r2, [fp, #-20]	; 0xffffffec
   21388:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2138c:	cmp	r2, r3
   21390:	bcs	213a8 <__assert_fail@plt+0x10138>
   21394:	ldr	r2, [fp, #-88]	; 0xffffffa8
   21398:	ldr	r3, [fp, #-20]	; 0xffffffec
   2139c:	add	r3, r2, r3
   213a0:	mov	r2, #39	; 0x27
   213a4:	strb	r2, [r3]
   213a8:	ldr	r3, [fp, #-20]	; 0xffffffec
   213ac:	add	r3, r3, #1
   213b0:	str	r3, [fp, #-20]	; 0xffffffec
   213b4:	mov	r3, #1
   213b8:	strb	r3, [fp, #-35]	; 0xffffffdd
   213bc:	ldr	r2, [fp, #-20]	; 0xffffffec
   213c0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   213c4:	cmp	r2, r3
   213c8:	bcs	213e0 <__assert_fail@plt+0x10170>
   213cc:	ldr	r2, [fp, #-88]	; 0xffffffa8
   213d0:	ldr	r3, [fp, #-20]	; 0xffffffec
   213d4:	add	r3, r2, r3
   213d8:	mov	r2, #92	; 0x5c
   213dc:	strb	r2, [r3]
   213e0:	ldr	r3, [fp, #-20]	; 0xffffffec
   213e4:	add	r3, r3, #1
   213e8:	str	r3, [fp, #-20]	; 0xffffffec
   213ec:	ldr	r3, [fp, #4]
   213f0:	cmp	r3, #2
   213f4:	beq	214a4 <__assert_fail@plt+0x10234>
   213f8:	ldr	r3, [fp, #-16]
   213fc:	add	r2, r3, #1
   21400:	ldr	r3, [fp, #-100]	; 0xffffff9c
   21404:	cmp	r2, r3
   21408:	bcs	214a4 <__assert_fail@plt+0x10234>
   2140c:	ldr	r3, [fp, #-16]
   21410:	add	r3, r3, #1
   21414:	ldr	r2, [fp, #-96]	; 0xffffffa0
   21418:	add	r3, r2, r3
   2141c:	ldrb	r3, [r3]
   21420:	cmp	r3, #47	; 0x2f
   21424:	bls	214a4 <__assert_fail@plt+0x10234>
   21428:	ldr	r3, [fp, #-16]
   2142c:	add	r3, r3, #1
   21430:	ldr	r2, [fp, #-96]	; 0xffffffa0
   21434:	add	r3, r2, r3
   21438:	ldrb	r3, [r3]
   2143c:	cmp	r3, #57	; 0x39
   21440:	bhi	214a4 <__assert_fail@plt+0x10234>
   21444:	ldr	r2, [fp, #-20]	; 0xffffffec
   21448:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2144c:	cmp	r2, r3
   21450:	bcs	21468 <__assert_fail@plt+0x101f8>
   21454:	ldr	r2, [fp, #-88]	; 0xffffffa8
   21458:	ldr	r3, [fp, #-20]	; 0xffffffec
   2145c:	add	r3, r2, r3
   21460:	mov	r2, #48	; 0x30
   21464:	strb	r2, [r3]
   21468:	ldr	r3, [fp, #-20]	; 0xffffffec
   2146c:	add	r3, r3, #1
   21470:	str	r3, [fp, #-20]	; 0xffffffec
   21474:	ldr	r2, [fp, #-20]	; 0xffffffec
   21478:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2147c:	cmp	r2, r3
   21480:	bcs	21498 <__assert_fail@plt+0x10228>
   21484:	ldr	r2, [fp, #-88]	; 0xffffffa8
   21488:	ldr	r3, [fp, #-20]	; 0xffffffec
   2148c:	add	r3, r2, r3
   21490:	mov	r2, #48	; 0x30
   21494:	strb	r2, [r3]
   21498:	ldr	r3, [fp, #-20]	; 0xffffffec
   2149c:	add	r3, r3, #1
   214a0:	str	r3, [fp, #-20]	; 0xffffffec
   214a4:	mov	r3, #48	; 0x30
   214a8:	strb	r3, [fp, #-38]	; 0xffffffda
   214ac:	b	21eec <__assert_fail@plt+0x10c7c>
   214b0:	ldr	r3, [fp, #8]
   214b4:	and	r3, r3, #1
   214b8:	cmp	r3, #0
   214bc:	beq	21eec <__assert_fail@plt+0x10c7c>
   214c0:	b	22188 <__assert_fail@plt+0x10f18>
   214c4:	ldr	r3, [fp, #4]
   214c8:	cmp	r3, #2
   214cc:	beq	214dc <__assert_fail@plt+0x1026c>
   214d0:	cmp	r3, #5
   214d4:	beq	214ec <__assert_fail@plt+0x1027c>
   214d8:	b	216d0 <__assert_fail@plt+0x10460>
   214dc:	ldrb	r3, [fp, #-34]	; 0xffffffde
   214e0:	cmp	r3, #0
   214e4:	beq	216c4 <__assert_fail@plt+0x10454>
   214e8:	b	22394 <__assert_fail@plt+0x11124>
   214ec:	ldr	r3, [fp, #8]
   214f0:	and	r3, r3, #4
   214f4:	cmp	r3, #0
   214f8:	beq	216cc <__assert_fail@plt+0x1045c>
   214fc:	ldr	r3, [fp, #-16]
   21500:	add	r2, r3, #2
   21504:	ldr	r3, [fp, #-100]	; 0xffffff9c
   21508:	cmp	r2, r3
   2150c:	bcs	216cc <__assert_fail@plt+0x1045c>
   21510:	ldr	r3, [fp, #-16]
   21514:	add	r3, r3, #1
   21518:	ldr	r2, [fp, #-96]	; 0xffffffa0
   2151c:	add	r3, r2, r3
   21520:	ldrb	r3, [r3]
   21524:	cmp	r3, #63	; 0x3f
   21528:	bne	216cc <__assert_fail@plt+0x1045c>
   2152c:	ldr	r3, [fp, #-16]
   21530:	add	r3, r3, #2
   21534:	ldr	r2, [fp, #-96]	; 0xffffffa0
   21538:	add	r3, r2, r3
   2153c:	ldrb	r3, [r3]
   21540:	sub	r3, r3, #33	; 0x21
   21544:	cmp	r3, #29
   21548:	ldrls	pc, [pc, r3, lsl #2]
   2154c:	b	216bc <__assert_fail@plt+0x1044c>
   21550:	andeq	r1, r2, r8, asr #11
   21554:			; <UNDEFINED> instruction: 0x000216bc
   21558:			; <UNDEFINED> instruction: 0x000216bc
   2155c:			; <UNDEFINED> instruction: 0x000216bc
   21560:			; <UNDEFINED> instruction: 0x000216bc
   21564:			; <UNDEFINED> instruction: 0x000216bc
   21568:	andeq	r1, r2, r8, asr #11
   2156c:	andeq	r1, r2, r8, asr #11
   21570:	andeq	r1, r2, r8, asr #11
   21574:			; <UNDEFINED> instruction: 0x000216bc
   21578:			; <UNDEFINED> instruction: 0x000216bc
   2157c:			; <UNDEFINED> instruction: 0x000216bc
   21580:	andeq	r1, r2, r8, asr #11
   21584:			; <UNDEFINED> instruction: 0x000216bc
   21588:	andeq	r1, r2, r8, asr #11
   2158c:			; <UNDEFINED> instruction: 0x000216bc
   21590:			; <UNDEFINED> instruction: 0x000216bc
   21594:			; <UNDEFINED> instruction: 0x000216bc
   21598:			; <UNDEFINED> instruction: 0x000216bc
   2159c:			; <UNDEFINED> instruction: 0x000216bc
   215a0:			; <UNDEFINED> instruction: 0x000216bc
   215a4:			; <UNDEFINED> instruction: 0x000216bc
   215a8:			; <UNDEFINED> instruction: 0x000216bc
   215ac:			; <UNDEFINED> instruction: 0x000216bc
   215b0:			; <UNDEFINED> instruction: 0x000216bc
   215b4:			; <UNDEFINED> instruction: 0x000216bc
   215b8:			; <UNDEFINED> instruction: 0x000216bc
   215bc:	andeq	r1, r2, r8, asr #11
   215c0:	andeq	r1, r2, r8, asr #11
   215c4:	andeq	r1, r2, r8, asr #11
   215c8:	ldrb	r3, [fp, #-34]	; 0xffffffde
   215cc:	cmp	r3, #0
   215d0:	bne	22360 <__assert_fail@plt+0x110f0>
   215d4:	ldr	r3, [fp, #-16]
   215d8:	add	r3, r3, #2
   215dc:	ldr	r2, [fp, #-96]	; 0xffffffa0
   215e0:	add	r3, r2, r3
   215e4:	ldrb	r3, [r3]
   215e8:	strb	r3, [fp, #-38]	; 0xffffffda
   215ec:	ldr	r3, [fp, #-16]
   215f0:	add	r3, r3, #2
   215f4:	str	r3, [fp, #-16]
   215f8:	ldr	r2, [fp, #-20]	; 0xffffffec
   215fc:	ldr	r3, [fp, #-92]	; 0xffffffa4
   21600:	cmp	r2, r3
   21604:	bcs	2161c <__assert_fail@plt+0x103ac>
   21608:	ldr	r2, [fp, #-88]	; 0xffffffa8
   2160c:	ldr	r3, [fp, #-20]	; 0xffffffec
   21610:	add	r3, r2, r3
   21614:	mov	r2, #63	; 0x3f
   21618:	strb	r2, [r3]
   2161c:	ldr	r3, [fp, #-20]	; 0xffffffec
   21620:	add	r3, r3, #1
   21624:	str	r3, [fp, #-20]	; 0xffffffec
   21628:	ldr	r2, [fp, #-20]	; 0xffffffec
   2162c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   21630:	cmp	r2, r3
   21634:	bcs	2164c <__assert_fail@plt+0x103dc>
   21638:	ldr	r2, [fp, #-88]	; 0xffffffa8
   2163c:	ldr	r3, [fp, #-20]	; 0xffffffec
   21640:	add	r3, r2, r3
   21644:	mov	r2, #34	; 0x22
   21648:	strb	r2, [r3]
   2164c:	ldr	r3, [fp, #-20]	; 0xffffffec
   21650:	add	r3, r3, #1
   21654:	str	r3, [fp, #-20]	; 0xffffffec
   21658:	ldr	r2, [fp, #-20]	; 0xffffffec
   2165c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   21660:	cmp	r2, r3
   21664:	bcs	2167c <__assert_fail@plt+0x1040c>
   21668:	ldr	r2, [fp, #-88]	; 0xffffffa8
   2166c:	ldr	r3, [fp, #-20]	; 0xffffffec
   21670:	add	r3, r2, r3
   21674:	mov	r2, #34	; 0x22
   21678:	strb	r2, [r3]
   2167c:	ldr	r3, [fp, #-20]	; 0xffffffec
   21680:	add	r3, r3, #1
   21684:	str	r3, [fp, #-20]	; 0xffffffec
   21688:	ldr	r2, [fp, #-20]	; 0xffffffec
   2168c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   21690:	cmp	r2, r3
   21694:	bcs	216ac <__assert_fail@plt+0x1043c>
   21698:	ldr	r2, [fp, #-88]	; 0xffffffa8
   2169c:	ldr	r3, [fp, #-20]	; 0xffffffec
   216a0:	add	r3, r2, r3
   216a4:	mov	r2, #63	; 0x3f
   216a8:	strb	r2, [r3]
   216ac:	ldr	r3, [fp, #-20]	; 0xffffffec
   216b0:	add	r3, r3, #1
   216b4:	str	r3, [fp, #-20]	; 0xffffffec
   216b8:	b	216c0 <__assert_fail@plt+0x10450>
   216bc:	nop			; (mov r0, r0)
   216c0:	b	216cc <__assert_fail@plt+0x1045c>
   216c4:	nop			; (mov r0, r0)
   216c8:	b	21f18 <__assert_fail@plt+0x10ca8>
   216cc:	nop			; (mov r0, r0)
   216d0:	b	21f18 <__assert_fail@plt+0x10ca8>
   216d4:	mov	r3, #97	; 0x61
   216d8:	strb	r3, [fp, #-39]	; 0xffffffd9
   216dc:	b	21788 <__assert_fail@plt+0x10518>
   216e0:	mov	r3, #98	; 0x62
   216e4:	strb	r3, [fp, #-39]	; 0xffffffd9
   216e8:	b	21788 <__assert_fail@plt+0x10518>
   216ec:	mov	r3, #102	; 0x66
   216f0:	strb	r3, [fp, #-39]	; 0xffffffd9
   216f4:	b	21788 <__assert_fail@plt+0x10518>
   216f8:	mov	r3, #110	; 0x6e
   216fc:	strb	r3, [fp, #-39]	; 0xffffffd9
   21700:	b	21770 <__assert_fail@plt+0x10500>
   21704:	mov	r3, #114	; 0x72
   21708:	strb	r3, [fp, #-39]	; 0xffffffd9
   2170c:	b	21770 <__assert_fail@plt+0x10500>
   21710:	mov	r3, #116	; 0x74
   21714:	strb	r3, [fp, #-39]	; 0xffffffd9
   21718:	b	21770 <__assert_fail@plt+0x10500>
   2171c:	mov	r3, #118	; 0x76
   21720:	strb	r3, [fp, #-39]	; 0xffffffd9
   21724:	b	21788 <__assert_fail@plt+0x10518>
   21728:	ldrb	r3, [fp, #-38]	; 0xffffffda
   2172c:	strb	r3, [fp, #-39]	; 0xffffffd9
   21730:	ldr	r3, [fp, #4]
   21734:	cmp	r3, #2
   21738:	bne	2174c <__assert_fail@plt+0x104dc>
   2173c:	ldrb	r3, [fp, #-34]	; 0xffffffde
   21740:	cmp	r3, #0
   21744:	beq	220a0 <__assert_fail@plt+0x10e30>
   21748:	b	22394 <__assert_fail@plt+0x11124>
   2174c:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   21750:	cmp	r3, #0
   21754:	beq	21770 <__assert_fail@plt+0x10500>
   21758:	ldrb	r3, [fp, #-34]	; 0xffffffde
   2175c:	cmp	r3, #0
   21760:	beq	21770 <__assert_fail@plt+0x10500>
   21764:	ldr	r3, [fp, #-32]	; 0xffffffe0
   21768:	cmp	r3, #0
   2176c:	bne	220a8 <__assert_fail@plt+0x10e38>
   21770:	ldr	r3, [fp, #4]
   21774:	cmp	r3, #2
   21778:	bne	21788 <__assert_fail@plt+0x10518>
   2177c:	ldrb	r3, [fp, #-34]	; 0xffffffde
   21780:	cmp	r3, #0
   21784:	bne	22368 <__assert_fail@plt+0x110f8>
   21788:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   2178c:	cmp	r3, #0
   21790:	beq	21ef4 <__assert_fail@plt+0x10c84>
   21794:	ldrb	r3, [fp, #-39]	; 0xffffffd9
   21798:	strb	r3, [fp, #-38]	; 0xffffffda
   2179c:	b	21fa0 <__assert_fail@plt+0x10d30>
   217a0:	ldr	r3, [fp, #-100]	; 0xffffff9c
   217a4:	cmn	r3, #1
   217a8:	bne	217cc <__assert_fail@plt+0x1055c>
   217ac:	ldr	r3, [fp, #-96]	; 0xffffffa0
   217b0:	add	r3, r3, #1
   217b4:	ldrb	r3, [r3]
   217b8:	cmp	r3, #0
   217bc:	movne	r3, #1
   217c0:	moveq	r3, #0
   217c4:	uxtb	r3, r3
   217c8:	b	217e0 <__assert_fail@plt+0x10570>
   217cc:	ldr	r3, [fp, #-100]	; 0xffffff9c
   217d0:	cmp	r3, #1
   217d4:	movne	r3, #1
   217d8:	moveq	r3, #0
   217dc:	uxtb	r3, r3
   217e0:	cmp	r3, #0
   217e4:	bne	21efc <__assert_fail@plt+0x10c8c>
   217e8:	ldr	r3, [fp, #-16]
   217ec:	cmp	r3, #0
   217f0:	bne	21f04 <__assert_fail@plt+0x10c94>
   217f4:	mov	r3, #1
   217f8:	strb	r3, [fp, #-42]	; 0xffffffd6
   217fc:	ldr	r3, [fp, #4]
   21800:	cmp	r3, #2
   21804:	bne	21f0c <__assert_fail@plt+0x10c9c>
   21808:	ldrb	r3, [fp, #-34]	; 0xffffffde
   2180c:	cmp	r3, #0
   21810:	beq	21f0c <__assert_fail@plt+0x10c9c>
   21814:	b	22394 <__assert_fail@plt+0x11124>
   21818:	mov	r3, #1
   2181c:	strb	r3, [fp, #-36]	; 0xffffffdc
   21820:	mov	r3, #1
   21824:	strb	r3, [fp, #-42]	; 0xffffffd6
   21828:	ldr	r3, [fp, #4]
   2182c:	cmp	r3, #2
   21830:	bne	21f14 <__assert_fail@plt+0x10ca4>
   21834:	ldrb	r3, [fp, #-34]	; 0xffffffde
   21838:	cmp	r3, #0
   2183c:	bne	22370 <__assert_fail@plt+0x11100>
   21840:	ldr	r3, [fp, #-92]	; 0xffffffa4
   21844:	cmp	r3, #0
   21848:	beq	21868 <__assert_fail@plt+0x105f8>
   2184c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   21850:	cmp	r3, #0
   21854:	bne	21868 <__assert_fail@plt+0x105f8>
   21858:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2185c:	str	r3, [fp, #-24]	; 0xffffffe8
   21860:	mov	r3, #0
   21864:	str	r3, [fp, #-92]	; 0xffffffa4
   21868:	ldr	r2, [fp, #-20]	; 0xffffffec
   2186c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   21870:	cmp	r2, r3
   21874:	bcs	2188c <__assert_fail@plt+0x1061c>
   21878:	ldr	r2, [fp, #-88]	; 0xffffffa8
   2187c:	ldr	r3, [fp, #-20]	; 0xffffffec
   21880:	add	r3, r2, r3
   21884:	mov	r2, #39	; 0x27
   21888:	strb	r2, [r3]
   2188c:	ldr	r3, [fp, #-20]	; 0xffffffec
   21890:	add	r3, r3, #1
   21894:	str	r3, [fp, #-20]	; 0xffffffec
   21898:	ldr	r2, [fp, #-20]	; 0xffffffec
   2189c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   218a0:	cmp	r2, r3
   218a4:	bcs	218bc <__assert_fail@plt+0x1064c>
   218a8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   218ac:	ldr	r3, [fp, #-20]	; 0xffffffec
   218b0:	add	r3, r2, r3
   218b4:	mov	r2, #92	; 0x5c
   218b8:	strb	r2, [r3]
   218bc:	ldr	r3, [fp, #-20]	; 0xffffffec
   218c0:	add	r3, r3, #1
   218c4:	str	r3, [fp, #-20]	; 0xffffffec
   218c8:	ldr	r2, [fp, #-20]	; 0xffffffec
   218cc:	ldr	r3, [fp, #-92]	; 0xffffffa4
   218d0:	cmp	r2, r3
   218d4:	bcs	218ec <__assert_fail@plt+0x1067c>
   218d8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   218dc:	ldr	r3, [fp, #-20]	; 0xffffffec
   218e0:	add	r3, r2, r3
   218e4:	mov	r2, #39	; 0x27
   218e8:	strb	r2, [r3]
   218ec:	ldr	r3, [fp, #-20]	; 0xffffffec
   218f0:	add	r3, r3, #1
   218f4:	str	r3, [fp, #-20]	; 0xffffffec
   218f8:	mov	r3, #0
   218fc:	strb	r3, [fp, #-35]	; 0xffffffdd
   21900:	b	21f14 <__assert_fail@plt+0x10ca4>
   21904:	mov	r3, #1
   21908:	strb	r3, [fp, #-42]	; 0xffffffd6
   2190c:	b	21f18 <__assert_fail@plt+0x10ca8>
   21910:	ldrb	r3, [fp, #-57]	; 0xffffffc7
   21914:	cmp	r3, #0
   21918:	beq	21958 <__assert_fail@plt+0x106e8>
   2191c:	mov	r3, #1
   21920:	str	r3, [fp, #-48]	; 0xffffffd0
   21924:	bl	11150 <__ctype_b_loc@plt>
   21928:	mov	r3, r0
   2192c:	ldr	r2, [r3]
   21930:	ldrb	r3, [fp, #-38]	; 0xffffffda
   21934:	lsl	r3, r3, #1
   21938:	add	r3, r2, r3
   2193c:	ldrh	r3, [r3]
   21940:	and	r3, r3, #16384	; 0x4000
   21944:	cmp	r3, #0
   21948:	movne	r3, #1
   2194c:	moveq	r3, #0
   21950:	strb	r3, [fp, #-49]	; 0xffffffcf
   21954:	b	21ba4 <__assert_fail@plt+0x10934>
   21958:	sub	r3, fp, #76	; 0x4c
   2195c:	mov	r2, #8
   21960:	mov	r1, #0
   21964:	mov	r0, r3
   21968:	bl	111bc <memset@plt>
   2196c:	mov	r3, #0
   21970:	str	r3, [fp, #-48]	; 0xffffffd0
   21974:	mov	r3, #1
   21978:	strb	r3, [fp, #-49]	; 0xffffffcf
   2197c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   21980:	cmn	r3, #1
   21984:	bne	21994 <__assert_fail@plt+0x10724>
   21988:	ldr	r0, [fp, #-96]	; 0xffffffa0
   2198c:	bl	11174 <strlen@plt>
   21990:	str	r0, [fp, #-100]	; 0xffffff9c
   21994:	ldr	r2, [fp, #-16]
   21998:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2199c:	add	r3, r2, r3
   219a0:	ldr	r2, [fp, #-96]	; 0xffffffa0
   219a4:	add	r1, r2, r3
   219a8:	ldr	r2, [fp, #-16]
   219ac:	ldr	r3, [fp, #-48]	; 0xffffffd0
   219b0:	add	r3, r2, r3
   219b4:	ldr	r2, [fp, #-100]	; 0xffffff9c
   219b8:	sub	r2, r2, r3
   219bc:	sub	r3, fp, #76	; 0x4c
   219c0:	sub	r0, fp, #80	; 0x50
   219c4:	bl	3ed0c <__assert_fail@plt+0x2da9c>
   219c8:	str	r0, [fp, #-64]	; 0xffffffc0
   219cc:	ldr	r3, [fp, #-64]	; 0xffffffc0
   219d0:	cmp	r3, #0
   219d4:	beq	21b98 <__assert_fail@plt+0x10928>
   219d8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   219dc:	cmn	r3, #1
   219e0:	bne	219f0 <__assert_fail@plt+0x10780>
   219e4:	mov	r3, #0
   219e8:	strb	r3, [fp, #-49]	; 0xffffffcf
   219ec:	b	21ba4 <__assert_fail@plt+0x10934>
   219f0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   219f4:	cmn	r3, #2
   219f8:	bne	21a50 <__assert_fail@plt+0x107e0>
   219fc:	mov	r3, #0
   21a00:	strb	r3, [fp, #-49]	; 0xffffffcf
   21a04:	b	21a14 <__assert_fail@plt+0x107a4>
   21a08:	ldr	r3, [fp, #-48]	; 0xffffffd0
   21a0c:	add	r3, r3, #1
   21a10:	str	r3, [fp, #-48]	; 0xffffffd0
   21a14:	ldr	r2, [fp, #-16]
   21a18:	ldr	r3, [fp, #-48]	; 0xffffffd0
   21a1c:	add	r2, r2, r3
   21a20:	ldr	r3, [fp, #-100]	; 0xffffff9c
   21a24:	cmp	r2, r3
   21a28:	bcs	21ba0 <__assert_fail@plt+0x10930>
   21a2c:	ldr	r2, [fp, #-16]
   21a30:	ldr	r3, [fp, #-48]	; 0xffffffd0
   21a34:	add	r3, r2, r3
   21a38:	ldr	r2, [fp, #-96]	; 0xffffffa0
   21a3c:	add	r3, r2, r3
   21a40:	ldrb	r3, [r3]
   21a44:	cmp	r3, #0
   21a48:	bne	21a08 <__assert_fail@plt+0x10798>
   21a4c:	b	21ba0 <__assert_fail@plt+0x10930>
   21a50:	ldrb	r3, [fp, #-34]	; 0xffffffde
   21a54:	cmp	r3, #0
   21a58:	beq	21b4c <__assert_fail@plt+0x108dc>
   21a5c:	ldr	r3, [fp, #4]
   21a60:	cmp	r3, #2
   21a64:	bne	21b4c <__assert_fail@plt+0x108dc>
   21a68:	mov	r3, #1
   21a6c:	str	r3, [fp, #-56]	; 0xffffffc8
   21a70:	b	21b3c <__assert_fail@plt+0x108cc>
   21a74:	ldr	r2, [fp, #-16]
   21a78:	ldr	r3, [fp, #-48]	; 0xffffffd0
   21a7c:	add	r2, r2, r3
   21a80:	ldr	r3, [fp, #-56]	; 0xffffffc8
   21a84:	add	r3, r2, r3
   21a88:	ldr	r2, [fp, #-96]	; 0xffffffa0
   21a8c:	add	r3, r2, r3
   21a90:	ldrb	r3, [r3]
   21a94:	sub	r3, r3, #91	; 0x5b
   21a98:	cmp	r3, #33	; 0x21
   21a9c:	ldrls	pc, [pc, r3, lsl #2]
   21aa0:	b	21b2c <__assert_fail@plt+0x108bc>
   21aa4:	andeq	r2, r2, r8, ror r3
   21aa8:	andeq	r2, r2, r8, ror r3
   21aac:	andeq	r1, r2, ip, lsr #22
   21ab0:	andeq	r2, r2, r8, ror r3
   21ab4:	andeq	r1, r2, ip, lsr #22
   21ab8:	andeq	r2, r2, r8, ror r3
   21abc:	andeq	r1, r2, ip, lsr #22
   21ac0:	andeq	r1, r2, ip, lsr #22
   21ac4:	andeq	r1, r2, ip, lsr #22
   21ac8:	andeq	r1, r2, ip, lsr #22
   21acc:	andeq	r1, r2, ip, lsr #22
   21ad0:	andeq	r1, r2, ip, lsr #22
   21ad4:	andeq	r1, r2, ip, lsr #22
   21ad8:	andeq	r1, r2, ip, lsr #22
   21adc:	andeq	r1, r2, ip, lsr #22
   21ae0:	andeq	r1, r2, ip, lsr #22
   21ae4:	andeq	r1, r2, ip, lsr #22
   21ae8:	andeq	r1, r2, ip, lsr #22
   21aec:	andeq	r1, r2, ip, lsr #22
   21af0:	andeq	r1, r2, ip, lsr #22
   21af4:	andeq	r1, r2, ip, lsr #22
   21af8:	andeq	r1, r2, ip, lsr #22
   21afc:	andeq	r1, r2, ip, lsr #22
   21b00:	andeq	r1, r2, ip, lsr #22
   21b04:	andeq	r1, r2, ip, lsr #22
   21b08:	andeq	r1, r2, ip, lsr #22
   21b0c:	andeq	r1, r2, ip, lsr #22
   21b10:	andeq	r1, r2, ip, lsr #22
   21b14:	andeq	r1, r2, ip, lsr #22
   21b18:	andeq	r1, r2, ip, lsr #22
   21b1c:	andeq	r1, r2, ip, lsr #22
   21b20:	andeq	r1, r2, ip, lsr #22
   21b24:	andeq	r1, r2, ip, lsr #22
   21b28:	andeq	r2, r2, r8, ror r3
   21b2c:	nop			; (mov r0, r0)
   21b30:	ldr	r3, [fp, #-56]	; 0xffffffc8
   21b34:	add	r3, r3, #1
   21b38:	str	r3, [fp, #-56]	; 0xffffffc8
   21b3c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   21b40:	ldr	r3, [fp, #-64]	; 0xffffffc0
   21b44:	cmp	r2, r3
   21b48:	bcc	21a74 <__assert_fail@plt+0x10804>
   21b4c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   21b50:	mov	r0, r3
   21b54:	bl	11090 <iswprint@plt>
   21b58:	mov	r3, r0
   21b5c:	cmp	r3, #0
   21b60:	bne	21b6c <__assert_fail@plt+0x108fc>
   21b64:	mov	r3, #0
   21b68:	strb	r3, [fp, #-49]	; 0xffffffcf
   21b6c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   21b70:	ldr	r3, [fp, #-64]	; 0xffffffc0
   21b74:	add	r3, r2, r3
   21b78:	str	r3, [fp, #-48]	; 0xffffffd0
   21b7c:	sub	r3, fp, #76	; 0x4c
   21b80:	mov	r0, r3
   21b84:	bl	11048 <mbsinit@plt>
   21b88:	mov	r3, r0
   21b8c:	cmp	r3, #0
   21b90:	beq	21994 <__assert_fail@plt+0x10724>
   21b94:	b	21ba4 <__assert_fail@plt+0x10934>
   21b98:	nop			; (mov r0, r0)
   21b9c:	b	21ba4 <__assert_fail@plt+0x10934>
   21ba0:	nop			; (mov r0, r0)
   21ba4:	ldrb	r3, [fp, #-49]	; 0xffffffcf
   21ba8:	strb	r3, [fp, #-42]	; 0xffffffd6
   21bac:	ldr	r3, [fp, #-48]	; 0xffffffd0
   21bb0:	cmp	r3, #1
   21bb4:	bhi	21bd8 <__assert_fail@plt+0x10968>
   21bb8:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   21bbc:	cmp	r3, #0
   21bc0:	beq	21f18 <__assert_fail@plt+0x10ca8>
   21bc4:	ldrb	r3, [fp, #-49]	; 0xffffffcf
   21bc8:	eor	r3, r3, #1
   21bcc:	uxtb	r3, r3
   21bd0:	cmp	r3, #0
   21bd4:	beq	21f18 <__assert_fail@plt+0x10ca8>
   21bd8:	ldr	r2, [fp, #-16]
   21bdc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   21be0:	add	r3, r2, r3
   21be4:	str	r3, [fp, #-68]	; 0xffffffbc
   21be8:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   21bec:	cmp	r3, #0
   21bf0:	beq	21db0 <__assert_fail@plt+0x10b40>
   21bf4:	ldrb	r3, [fp, #-49]	; 0xffffffcf
   21bf8:	eor	r3, r3, #1
   21bfc:	uxtb	r3, r3
   21c00:	cmp	r3, #0
   21c04:	beq	21db0 <__assert_fail@plt+0x10b40>
   21c08:	ldrb	r3, [fp, #-34]	; 0xffffffde
   21c0c:	cmp	r3, #0
   21c10:	bne	22380 <__assert_fail@plt+0x11110>
   21c14:	mov	r3, #1
   21c18:	strb	r3, [fp, #-41]	; 0xffffffd7
   21c1c:	ldr	r3, [fp, #4]
   21c20:	cmp	r3, #2
   21c24:	bne	21cd4 <__assert_fail@plt+0x10a64>
   21c28:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   21c2c:	eor	r3, r3, #1
   21c30:	uxtb	r3, r3
   21c34:	cmp	r3, #0
   21c38:	beq	21cd4 <__assert_fail@plt+0x10a64>
   21c3c:	ldr	r2, [fp, #-20]	; 0xffffffec
   21c40:	ldr	r3, [fp, #-92]	; 0xffffffa4
   21c44:	cmp	r2, r3
   21c48:	bcs	21c60 <__assert_fail@plt+0x109f0>
   21c4c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   21c50:	ldr	r3, [fp, #-20]	; 0xffffffec
   21c54:	add	r3, r2, r3
   21c58:	mov	r2, #39	; 0x27
   21c5c:	strb	r2, [r3]
   21c60:	ldr	r3, [fp, #-20]	; 0xffffffec
   21c64:	add	r3, r3, #1
   21c68:	str	r3, [fp, #-20]	; 0xffffffec
   21c6c:	ldr	r2, [fp, #-20]	; 0xffffffec
   21c70:	ldr	r3, [fp, #-92]	; 0xffffffa4
   21c74:	cmp	r2, r3
   21c78:	bcs	21c90 <__assert_fail@plt+0x10a20>
   21c7c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   21c80:	ldr	r3, [fp, #-20]	; 0xffffffec
   21c84:	add	r3, r2, r3
   21c88:	mov	r2, #36	; 0x24
   21c8c:	strb	r2, [r3]
   21c90:	ldr	r3, [fp, #-20]	; 0xffffffec
   21c94:	add	r3, r3, #1
   21c98:	str	r3, [fp, #-20]	; 0xffffffec
   21c9c:	ldr	r2, [fp, #-20]	; 0xffffffec
   21ca0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   21ca4:	cmp	r2, r3
   21ca8:	bcs	21cc0 <__assert_fail@plt+0x10a50>
   21cac:	ldr	r2, [fp, #-88]	; 0xffffffa8
   21cb0:	ldr	r3, [fp, #-20]	; 0xffffffec
   21cb4:	add	r3, r2, r3
   21cb8:	mov	r2, #39	; 0x27
   21cbc:	strb	r2, [r3]
   21cc0:	ldr	r3, [fp, #-20]	; 0xffffffec
   21cc4:	add	r3, r3, #1
   21cc8:	str	r3, [fp, #-20]	; 0xffffffec
   21ccc:	mov	r3, #1
   21cd0:	strb	r3, [fp, #-35]	; 0xffffffdd
   21cd4:	ldr	r2, [fp, #-20]	; 0xffffffec
   21cd8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   21cdc:	cmp	r2, r3
   21ce0:	bcs	21cf8 <__assert_fail@plt+0x10a88>
   21ce4:	ldr	r2, [fp, #-88]	; 0xffffffa8
   21ce8:	ldr	r3, [fp, #-20]	; 0xffffffec
   21cec:	add	r3, r2, r3
   21cf0:	mov	r2, #92	; 0x5c
   21cf4:	strb	r2, [r3]
   21cf8:	ldr	r3, [fp, #-20]	; 0xffffffec
   21cfc:	add	r3, r3, #1
   21d00:	str	r3, [fp, #-20]	; 0xffffffec
   21d04:	ldr	r2, [fp, #-20]	; 0xffffffec
   21d08:	ldr	r3, [fp, #-92]	; 0xffffffa4
   21d0c:	cmp	r2, r3
   21d10:	bcs	21d38 <__assert_fail@plt+0x10ac8>
   21d14:	ldr	r2, [fp, #-88]	; 0xffffffa8
   21d18:	ldr	r3, [fp, #-20]	; 0xffffffec
   21d1c:	add	r3, r2, r3
   21d20:	ldrb	r2, [fp, #-38]	; 0xffffffda
   21d24:	lsr	r2, r2, #6
   21d28:	uxtb	r2, r2
   21d2c:	add	r2, r2, #48	; 0x30
   21d30:	uxtb	r2, r2
   21d34:	strb	r2, [r3]
   21d38:	ldr	r3, [fp, #-20]	; 0xffffffec
   21d3c:	add	r3, r3, #1
   21d40:	str	r3, [fp, #-20]	; 0xffffffec
   21d44:	ldr	r2, [fp, #-20]	; 0xffffffec
   21d48:	ldr	r3, [fp, #-92]	; 0xffffffa4
   21d4c:	cmp	r2, r3
   21d50:	bcs	21d80 <__assert_fail@plt+0x10b10>
   21d54:	ldr	r2, [fp, #-88]	; 0xffffffa8
   21d58:	ldr	r3, [fp, #-20]	; 0xffffffec
   21d5c:	add	r3, r2, r3
   21d60:	ldrb	r2, [fp, #-38]	; 0xffffffda
   21d64:	lsr	r2, r2, #3
   21d68:	uxtb	r2, r2
   21d6c:	and	r2, r2, #7
   21d70:	uxtb	r2, r2
   21d74:	add	r2, r2, #48	; 0x30
   21d78:	uxtb	r2, r2
   21d7c:	strb	r2, [r3]
   21d80:	ldr	r3, [fp, #-20]	; 0xffffffec
   21d84:	add	r3, r3, #1
   21d88:	str	r3, [fp, #-20]	; 0xffffffec
   21d8c:	ldrb	r3, [fp, #-38]	; 0xffffffda
   21d90:	and	r3, r3, #7
   21d94:	uxtb	r3, r3
   21d98:	add	r3, r3, #48	; 0x30
   21d9c:	strb	r3, [fp, #-38]	; 0xffffffda
   21da0:	b	21df4 <__assert_fail@plt+0x10b84>
   21da4:	andeq	r1, r4, ip, lsl r1
   21da8:	andeq	r1, r4, r4, lsr #2
   21dac:	andeq	r1, r4, r0, lsr #2
   21db0:	ldrb	r3, [fp, #-40]	; 0xffffffd8
   21db4:	cmp	r3, #0
   21db8:	beq	21df4 <__assert_fail@plt+0x10b84>
   21dbc:	ldr	r2, [fp, #-20]	; 0xffffffec
   21dc0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   21dc4:	cmp	r2, r3
   21dc8:	bcs	21de0 <__assert_fail@plt+0x10b70>
   21dcc:	ldr	r2, [fp, #-88]	; 0xffffffa8
   21dd0:	ldr	r3, [fp, #-20]	; 0xffffffec
   21dd4:	add	r3, r2, r3
   21dd8:	mov	r2, #92	; 0x5c
   21ddc:	strb	r2, [r3]
   21de0:	ldr	r3, [fp, #-20]	; 0xffffffec
   21de4:	add	r3, r3, #1
   21de8:	str	r3, [fp, #-20]	; 0xffffffec
   21dec:	mov	r3, #0
   21df0:	strb	r3, [fp, #-40]	; 0xffffffd8
   21df4:	ldr	r3, [fp, #-16]
   21df8:	add	r2, r3, #1
   21dfc:	ldr	r3, [fp, #-68]	; 0xffffffbc
   21e00:	cmp	r2, r3
   21e04:	bcs	21ee4 <__assert_fail@plt+0x10c74>
   21e08:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   21e0c:	cmp	r3, #0
   21e10:	beq	21e90 <__assert_fail@plt+0x10c20>
   21e14:	ldrb	r3, [fp, #-41]	; 0xffffffd7
   21e18:	eor	r3, r3, #1
   21e1c:	uxtb	r3, r3
   21e20:	cmp	r3, #0
   21e24:	beq	21e90 <__assert_fail@plt+0x10c20>
   21e28:	ldr	r2, [fp, #-20]	; 0xffffffec
   21e2c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   21e30:	cmp	r2, r3
   21e34:	bcs	21e4c <__assert_fail@plt+0x10bdc>
   21e38:	ldr	r2, [fp, #-88]	; 0xffffffa8
   21e3c:	ldr	r3, [fp, #-20]	; 0xffffffec
   21e40:	add	r3, r2, r3
   21e44:	mov	r2, #39	; 0x27
   21e48:	strb	r2, [r3]
   21e4c:	ldr	r3, [fp, #-20]	; 0xffffffec
   21e50:	add	r3, r3, #1
   21e54:	str	r3, [fp, #-20]	; 0xffffffec
   21e58:	ldr	r2, [fp, #-20]	; 0xffffffec
   21e5c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   21e60:	cmp	r2, r3
   21e64:	bcs	21e7c <__assert_fail@plt+0x10c0c>
   21e68:	ldr	r2, [fp, #-88]	; 0xffffffa8
   21e6c:	ldr	r3, [fp, #-20]	; 0xffffffec
   21e70:	add	r3, r2, r3
   21e74:	mov	r2, #39	; 0x27
   21e78:	strb	r2, [r3]
   21e7c:	ldr	r3, [fp, #-20]	; 0xffffffec
   21e80:	add	r3, r3, #1
   21e84:	str	r3, [fp, #-20]	; 0xffffffec
   21e88:	mov	r3, #0
   21e8c:	strb	r3, [fp, #-35]	; 0xffffffdd
   21e90:	ldr	r2, [fp, #-20]	; 0xffffffec
   21e94:	ldr	r3, [fp, #-92]	; 0xffffffa4
   21e98:	cmp	r2, r3
   21e9c:	bcs	21eb4 <__assert_fail@plt+0x10c44>
   21ea0:	ldr	r2, [fp, #-88]	; 0xffffffa8
   21ea4:	ldr	r3, [fp, #-20]	; 0xffffffec
   21ea8:	add	r3, r2, r3
   21eac:	ldrb	r2, [fp, #-38]	; 0xffffffda
   21eb0:	strb	r2, [r3]
   21eb4:	ldr	r3, [fp, #-20]	; 0xffffffec
   21eb8:	add	r3, r3, #1
   21ebc:	str	r3, [fp, #-20]	; 0xffffffec
   21ec0:	ldr	r3, [fp, #-16]
   21ec4:	add	r3, r3, #1
   21ec8:	str	r3, [fp, #-16]
   21ecc:	ldr	r2, [fp, #-96]	; 0xffffffa0
   21ed0:	ldr	r3, [fp, #-16]
   21ed4:	add	r3, r2, r3
   21ed8:	ldrb	r3, [r3]
   21edc:	strb	r3, [fp, #-38]	; 0xffffffda
   21ee0:	b	21be8 <__assert_fail@plt+0x10978>
   21ee4:	nop			; (mov r0, r0)
   21ee8:	b	220b4 <__assert_fail@plt+0x10e44>
   21eec:	nop			; (mov r0, r0)
   21ef0:	b	21f18 <__assert_fail@plt+0x10ca8>
   21ef4:	nop			; (mov r0, r0)
   21ef8:	b	21f18 <__assert_fail@plt+0x10ca8>
   21efc:	nop			; (mov r0, r0)
   21f00:	b	21f18 <__assert_fail@plt+0x10ca8>
   21f04:	nop			; (mov r0, r0)
   21f08:	b	21f18 <__assert_fail@plt+0x10ca8>
   21f0c:	nop			; (mov r0, r0)
   21f10:	b	21f18 <__assert_fail@plt+0x10ca8>
   21f14:	nop			; (mov r0, r0)
   21f18:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   21f1c:	eor	r3, r3, #1
   21f20:	uxtb	r3, r3
   21f24:	cmp	r3, #0
   21f28:	bne	21f38 <__assert_fail@plt+0x10cc8>
   21f2c:	ldr	r3, [fp, #4]
   21f30:	cmp	r3, #2
   21f34:	bne	21f4c <__assert_fail@plt+0x10cdc>
   21f38:	ldrb	r3, [fp, #-34]	; 0xffffffde
   21f3c:	eor	r3, r3, #1
   21f40:	uxtb	r3, r3
   21f44:	cmp	r3, #0
   21f48:	bne	21f8c <__assert_fail@plt+0x10d1c>
   21f4c:	ldr	r3, [fp, #12]
   21f50:	cmp	r3, #0
   21f54:	beq	21f8c <__assert_fail@plt+0x10d1c>
   21f58:	ldrb	r3, [fp, #-38]	; 0xffffffda
   21f5c:	lsr	r3, r3, #5
   21f60:	uxtb	r3, r3
   21f64:	lsl	r3, r3, #2
   21f68:	ldr	r2, [fp, #12]
   21f6c:	add	r3, r2, r3
   21f70:	ldr	r2, [r3]
   21f74:	ldrb	r3, [fp, #-38]	; 0xffffffda
   21f78:	and	r3, r3, #31
   21f7c:	lsr	r3, r2, r3
   21f80:	and	r3, r3, #1
   21f84:	cmp	r3, #0
   21f88:	bne	21fa0 <__assert_fail@plt+0x10d30>
   21f8c:	ldrb	r3, [fp, #-40]	; 0xffffffd8
   21f90:	eor	r3, r3, #1
   21f94:	uxtb	r3, r3
   21f98:	cmp	r3, #0
   21f9c:	bne	220b0 <__assert_fail@plt+0x10e40>
   21fa0:	ldrb	r3, [fp, #-34]	; 0xffffffde
   21fa4:	cmp	r3, #0
   21fa8:	bne	22388 <__assert_fail@plt+0x11118>
   21fac:	mov	r3, #1
   21fb0:	strb	r3, [fp, #-41]	; 0xffffffd7
   21fb4:	ldr	r3, [fp, #4]
   21fb8:	cmp	r3, #2
   21fbc:	bne	2206c <__assert_fail@plt+0x10dfc>
   21fc0:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   21fc4:	eor	r3, r3, #1
   21fc8:	uxtb	r3, r3
   21fcc:	cmp	r3, #0
   21fd0:	beq	2206c <__assert_fail@plt+0x10dfc>
   21fd4:	ldr	r2, [fp, #-20]	; 0xffffffec
   21fd8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   21fdc:	cmp	r2, r3
   21fe0:	bcs	21ff8 <__assert_fail@plt+0x10d88>
   21fe4:	ldr	r2, [fp, #-88]	; 0xffffffa8
   21fe8:	ldr	r3, [fp, #-20]	; 0xffffffec
   21fec:	add	r3, r2, r3
   21ff0:	mov	r2, #39	; 0x27
   21ff4:	strb	r2, [r3]
   21ff8:	ldr	r3, [fp, #-20]	; 0xffffffec
   21ffc:	add	r3, r3, #1
   22000:	str	r3, [fp, #-20]	; 0xffffffec
   22004:	ldr	r2, [fp, #-20]	; 0xffffffec
   22008:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2200c:	cmp	r2, r3
   22010:	bcs	22028 <__assert_fail@plt+0x10db8>
   22014:	ldr	r2, [fp, #-88]	; 0xffffffa8
   22018:	ldr	r3, [fp, #-20]	; 0xffffffec
   2201c:	add	r3, r2, r3
   22020:	mov	r2, #36	; 0x24
   22024:	strb	r2, [r3]
   22028:	ldr	r3, [fp, #-20]	; 0xffffffec
   2202c:	add	r3, r3, #1
   22030:	str	r3, [fp, #-20]	; 0xffffffec
   22034:	ldr	r2, [fp, #-20]	; 0xffffffec
   22038:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2203c:	cmp	r2, r3
   22040:	bcs	22058 <__assert_fail@plt+0x10de8>
   22044:	ldr	r2, [fp, #-88]	; 0xffffffa8
   22048:	ldr	r3, [fp, #-20]	; 0xffffffec
   2204c:	add	r3, r2, r3
   22050:	mov	r2, #39	; 0x27
   22054:	strb	r2, [r3]
   22058:	ldr	r3, [fp, #-20]	; 0xffffffec
   2205c:	add	r3, r3, #1
   22060:	str	r3, [fp, #-20]	; 0xffffffec
   22064:	mov	r3, #1
   22068:	strb	r3, [fp, #-35]	; 0xffffffdd
   2206c:	ldr	r2, [fp, #-20]	; 0xffffffec
   22070:	ldr	r3, [fp, #-92]	; 0xffffffa4
   22074:	cmp	r2, r3
   22078:	bcs	22090 <__assert_fail@plt+0x10e20>
   2207c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   22080:	ldr	r3, [fp, #-20]	; 0xffffffec
   22084:	add	r3, r2, r3
   22088:	mov	r2, #92	; 0x5c
   2208c:	strb	r2, [r3]
   22090:	ldr	r3, [fp, #-20]	; 0xffffffec
   22094:	add	r3, r3, #1
   22098:	str	r3, [fp, #-20]	; 0xffffffec
   2209c:	b	220b4 <__assert_fail@plt+0x10e44>
   220a0:	nop			; (mov r0, r0)
   220a4:	b	220b4 <__assert_fail@plt+0x10e44>
   220a8:	nop			; (mov r0, r0)
   220ac:	b	220b4 <__assert_fail@plt+0x10e44>
   220b0:	nop			; (mov r0, r0)
   220b4:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   220b8:	cmp	r3, #0
   220bc:	beq	2213c <__assert_fail@plt+0x10ecc>
   220c0:	ldrb	r3, [fp, #-41]	; 0xffffffd7
   220c4:	eor	r3, r3, #1
   220c8:	uxtb	r3, r3
   220cc:	cmp	r3, #0
   220d0:	beq	2213c <__assert_fail@plt+0x10ecc>
   220d4:	ldr	r2, [fp, #-20]	; 0xffffffec
   220d8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   220dc:	cmp	r2, r3
   220e0:	bcs	220f8 <__assert_fail@plt+0x10e88>
   220e4:	ldr	r2, [fp, #-88]	; 0xffffffa8
   220e8:	ldr	r3, [fp, #-20]	; 0xffffffec
   220ec:	add	r3, r2, r3
   220f0:	mov	r2, #39	; 0x27
   220f4:	strb	r2, [r3]
   220f8:	ldr	r3, [fp, #-20]	; 0xffffffec
   220fc:	add	r3, r3, #1
   22100:	str	r3, [fp, #-20]	; 0xffffffec
   22104:	ldr	r2, [fp, #-20]	; 0xffffffec
   22108:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2210c:	cmp	r2, r3
   22110:	bcs	22128 <__assert_fail@plt+0x10eb8>
   22114:	ldr	r2, [fp, #-88]	; 0xffffffa8
   22118:	ldr	r3, [fp, #-20]	; 0xffffffec
   2211c:	add	r3, r2, r3
   22120:	mov	r2, #39	; 0x27
   22124:	strb	r2, [r3]
   22128:	ldr	r3, [fp, #-20]	; 0xffffffec
   2212c:	add	r3, r3, #1
   22130:	str	r3, [fp, #-20]	; 0xffffffec
   22134:	mov	r3, #0
   22138:	strb	r3, [fp, #-35]	; 0xffffffdd
   2213c:	ldr	r2, [fp, #-20]	; 0xffffffec
   22140:	ldr	r3, [fp, #-92]	; 0xffffffa4
   22144:	cmp	r2, r3
   22148:	bcs	22160 <__assert_fail@plt+0x10ef0>
   2214c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   22150:	ldr	r3, [fp, #-20]	; 0xffffffec
   22154:	add	r3, r2, r3
   22158:	ldrb	r2, [fp, #-38]	; 0xffffffda
   2215c:	strb	r2, [r3]
   22160:	ldr	r3, [fp, #-20]	; 0xffffffec
   22164:	add	r3, r3, #1
   22168:	str	r3, [fp, #-20]	; 0xffffffec
   2216c:	ldrb	r3, [fp, #-42]	; 0xffffffd6
   22170:	eor	r3, r3, #1
   22174:	uxtb	r3, r3
   22178:	cmp	r3, #0
   2217c:	beq	22188 <__assert_fail@plt+0x10f18>
   22180:	mov	r3, #0
   22184:	strb	r3, [fp, #-37]	; 0xffffffdb
   22188:	ldr	r3, [fp, #-16]
   2218c:	add	r3, r3, #1
   22190:	str	r3, [fp, #-16]
   22194:	ldr	r3, [fp, #-100]	; 0xffffff9c
   22198:	cmn	r3, #1
   2219c:	bne	221c4 <__assert_fail@plt+0x10f54>
   221a0:	ldr	r2, [fp, #-96]	; 0xffffffa0
   221a4:	ldr	r3, [fp, #-16]
   221a8:	add	r3, r2, r3
   221ac:	ldrb	r3, [r3]
   221b0:	cmp	r3, #0
   221b4:	movne	r3, #1
   221b8:	moveq	r3, #0
   221bc:	uxtb	r3, r3
   221c0:	b	221dc <__assert_fail@plt+0x10f6c>
   221c4:	ldr	r2, [fp, #-16]
   221c8:	ldr	r3, [fp, #-100]	; 0xffffff9c
   221cc:	cmp	r2, r3
   221d0:	movne	r3, #1
   221d4:	moveq	r3, #0
   221d8:	uxtb	r3, r3
   221dc:	cmp	r3, #0
   221e0:	bne	21008 <__assert_fail@plt+0xfd98>
   221e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   221e8:	cmp	r3, #0
   221ec:	bne	22208 <__assert_fail@plt+0x10f98>
   221f0:	ldr	r3, [fp, #4]
   221f4:	cmp	r3, #2
   221f8:	bne	22208 <__assert_fail@plt+0x10f98>
   221fc:	ldrb	r3, [fp, #-34]	; 0xffffffde
   22200:	cmp	r3, #0
   22204:	bne	22390 <__assert_fail@plt+0x11120>
   22208:	ldr	r3, [fp, #4]
   2220c:	cmp	r3, #2
   22210:	bne	222b0 <__assert_fail@plt+0x11040>
   22214:	ldrb	r3, [fp, #-34]	; 0xffffffde
   22218:	eor	r3, r3, #1
   2221c:	uxtb	r3, r3
   22220:	cmp	r3, #0
   22224:	beq	222b0 <__assert_fail@plt+0x11040>
   22228:	ldrb	r3, [fp, #-36]	; 0xffffffdc
   2222c:	cmp	r3, #0
   22230:	beq	222b0 <__assert_fail@plt+0x11040>
   22234:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   22238:	cmp	r3, #0
   2223c:	beq	22284 <__assert_fail@plt+0x11014>
   22240:	ldr	r3, [fp, #20]
   22244:	str	r3, [sp, #16]
   22248:	ldr	r3, [fp, #16]
   2224c:	str	r3, [sp, #12]
   22250:	ldr	r3, [fp, #12]
   22254:	str	r3, [sp, #8]
   22258:	ldr	r3, [fp, #8]
   2225c:	str	r3, [sp, #4]
   22260:	mov	r3, #5
   22264:	str	r3, [sp]
   22268:	ldr	r3, [fp, #-100]	; 0xffffff9c
   2226c:	ldr	r2, [fp, #-96]	; 0xffffffa0
   22270:	ldr	r1, [fp, #-24]	; 0xffffffe8
   22274:	ldr	r0, [fp, #-88]	; 0xffffffa8
   22278:	bl	20d58 <__assert_fail@plt+0xfae8>
   2227c:	mov	r3, r0
   22280:	b	223f8 <__assert_fail@plt+0x11188>
   22284:	ldr	r3, [fp, #-92]	; 0xffffffa4
   22288:	cmp	r3, #0
   2228c:	bne	222b0 <__assert_fail@plt+0x11040>
   22290:	ldr	r3, [fp, #-24]	; 0xffffffe8
   22294:	cmp	r3, #0
   22298:	beq	222b0 <__assert_fail@plt+0x11040>
   2229c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   222a0:	str	r3, [fp, #-92]	; 0xffffffa4
   222a4:	mov	r3, #0
   222a8:	str	r3, [fp, #-20]	; 0xffffffec
   222ac:	b	20de4 <__assert_fail@plt+0xfb74>
   222b0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   222b4:	cmp	r3, #0
   222b8:	beq	22324 <__assert_fail@plt+0x110b4>
   222bc:	ldrb	r3, [fp, #-34]	; 0xffffffde
   222c0:	eor	r3, r3, #1
   222c4:	uxtb	r3, r3
   222c8:	cmp	r3, #0
   222cc:	beq	22324 <__assert_fail@plt+0x110b4>
   222d0:	b	22314 <__assert_fail@plt+0x110a4>
   222d4:	ldr	r2, [fp, #-20]	; 0xffffffec
   222d8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   222dc:	cmp	r2, r3
   222e0:	bcs	222fc <__assert_fail@plt+0x1108c>
   222e4:	ldr	r2, [fp, #-88]	; 0xffffffa8
   222e8:	ldr	r3, [fp, #-20]	; 0xffffffec
   222ec:	add	r3, r2, r3
   222f0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   222f4:	ldrb	r2, [r2]
   222f8:	strb	r2, [r3]
   222fc:	ldr	r3, [fp, #-20]	; 0xffffffec
   22300:	add	r3, r3, #1
   22304:	str	r3, [fp, #-20]	; 0xffffffec
   22308:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2230c:	add	r3, r3, #1
   22310:	str	r3, [fp, #-28]	; 0xffffffe4
   22314:	ldr	r3, [fp, #-28]	; 0xffffffe4
   22318:	ldrb	r3, [r3]
   2231c:	cmp	r3, #0
   22320:	bne	222d4 <__assert_fail@plt+0x11064>
   22324:	ldr	r2, [fp, #-20]	; 0xffffffec
   22328:	ldr	r3, [fp, #-92]	; 0xffffffa4
   2232c:	cmp	r2, r3
   22330:	bcs	22348 <__assert_fail@plt+0x110d8>
   22334:	ldr	r2, [fp, #-88]	; 0xffffffa8
   22338:	ldr	r3, [fp, #-20]	; 0xffffffec
   2233c:	add	r3, r2, r3
   22340:	mov	r2, #0
   22344:	strb	r2, [r3]
   22348:	ldr	r3, [fp, #-20]	; 0xffffffec
   2234c:	b	223f8 <__assert_fail@plt+0x11188>
   22350:	nop			; (mov r0, r0)
   22354:	b	22394 <__assert_fail@plt+0x11124>
   22358:	nop			; (mov r0, r0)
   2235c:	b	22394 <__assert_fail@plt+0x11124>
   22360:	nop			; (mov r0, r0)
   22364:	b	22394 <__assert_fail@plt+0x11124>
   22368:	nop			; (mov r0, r0)
   2236c:	b	22394 <__assert_fail@plt+0x11124>
   22370:	nop			; (mov r0, r0)
   22374:	b	22394 <__assert_fail@plt+0x11124>
   22378:	nop			; (mov r0, r0)
   2237c:	b	22394 <__assert_fail@plt+0x11124>
   22380:	nop			; (mov r0, r0)
   22384:	b	22394 <__assert_fail@plt+0x11124>
   22388:	nop			; (mov r0, r0)
   2238c:	b	22394 <__assert_fail@plt+0x11124>
   22390:	nop			; (mov r0, r0)
   22394:	ldr	r3, [fp, #4]
   22398:	cmp	r3, #2
   2239c:	bne	223b4 <__assert_fail@plt+0x11144>
   223a0:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   223a4:	cmp	r3, #0
   223a8:	beq	223b4 <__assert_fail@plt+0x11144>
   223ac:	mov	r3, #4
   223b0:	str	r3, [fp, #4]
   223b4:	ldr	r3, [fp, #8]
   223b8:	bic	r3, r3, #2
   223bc:	ldr	r2, [fp, #20]
   223c0:	str	r2, [sp, #16]
   223c4:	ldr	r2, [fp, #16]
   223c8:	str	r2, [sp, #12]
   223cc:	mov	r2, #0
   223d0:	str	r2, [sp, #8]
   223d4:	str	r3, [sp, #4]
   223d8:	ldr	r3, [fp, #4]
   223dc:	str	r3, [sp]
   223e0:	ldr	r3, [fp, #-100]	; 0xffffff9c
   223e4:	ldr	r2, [fp, #-96]	; 0xffffffa0
   223e8:	ldr	r1, [fp, #-92]	; 0xffffffa4
   223ec:	ldr	r0, [fp, #-88]	; 0xffffffa8
   223f0:	bl	20d58 <__assert_fail@plt+0xfae8>
   223f4:	mov	r3, r0
   223f8:	mov	r0, r3
   223fc:	sub	sp, fp, #8
   22400:	pop	{r4, fp, pc}
   22404:	push	{fp, lr}
   22408:	add	fp, sp, #4
   2240c:	sub	sp, sp, #56	; 0x38
   22410:	str	r0, [fp, #-24]	; 0xffffffe8
   22414:	str	r1, [fp, #-28]	; 0xffffffe4
   22418:	str	r2, [fp, #-32]	; 0xffffffe0
   2241c:	str	r3, [fp, #-36]	; 0xffffffdc
   22420:	ldr	r3, [fp, #4]
   22424:	cmp	r3, #0
   22428:	beq	22434 <__assert_fail@plt+0x111c4>
   2242c:	ldr	r3, [fp, #4]
   22430:	b	22438 <__assert_fail@plt+0x111c8>
   22434:	ldr	r3, [pc, #132]	; 224c0 <__assert_fail@plt+0x11250>
   22438:	str	r3, [fp, #-8]
   2243c:	bl	11198 <__errno_location@plt>
   22440:	mov	r3, r0
   22444:	ldr	r3, [r3]
   22448:	str	r3, [fp, #-12]
   2244c:	ldr	r3, [fp, #-8]
   22450:	ldr	r3, [r3]
   22454:	ldr	r2, [fp, #-8]
   22458:	ldr	r2, [r2, #4]
   2245c:	ldr	r1, [fp, #-8]
   22460:	add	r1, r1, #8
   22464:	ldr	r0, [fp, #-8]
   22468:	ldr	r0, [r0, #40]	; 0x28
   2246c:	ldr	ip, [fp, #-8]
   22470:	ldr	ip, [ip, #44]	; 0x2c
   22474:	str	ip, [sp, #16]
   22478:	str	r0, [sp, #12]
   2247c:	str	r1, [sp, #8]
   22480:	str	r2, [sp, #4]
   22484:	str	r3, [sp]
   22488:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2248c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   22490:	ldr	r1, [fp, #-28]	; 0xffffffe4
   22494:	ldr	r0, [fp, #-24]	; 0xffffffe8
   22498:	bl	20d58 <__assert_fail@plt+0xfae8>
   2249c:	str	r0, [fp, #-16]
   224a0:	bl	11198 <__errno_location@plt>
   224a4:	mov	r2, r0
   224a8:	ldr	r3, [fp, #-12]
   224ac:	str	r3, [r2]
   224b0:	ldr	r3, [fp, #-16]
   224b4:	mov	r0, r3
   224b8:	sub	sp, fp, #4
   224bc:	pop	{fp, pc}
   224c0:	andeq	r2, r5, r8, lsr #3
   224c4:	push	{fp, lr}
   224c8:	add	fp, sp, #4
   224cc:	sub	sp, sp, #16
   224d0:	str	r0, [fp, #-8]
   224d4:	str	r1, [fp, #-12]
   224d8:	str	r2, [fp, #-16]
   224dc:	ldr	r3, [fp, #-16]
   224e0:	mov	r2, #0
   224e4:	ldr	r1, [fp, #-12]
   224e8:	ldr	r0, [fp, #-8]
   224ec:	bl	22500 <__assert_fail@plt+0x11290>
   224f0:	mov	r3, r0
   224f4:	mov	r0, r3
   224f8:	sub	sp, fp, #4
   224fc:	pop	{fp, pc}
   22500:	push	{fp, lr}
   22504:	add	fp, sp, #4
   22508:	sub	sp, sp, #64	; 0x40
   2250c:	str	r0, [fp, #-32]	; 0xffffffe0
   22510:	str	r1, [fp, #-36]	; 0xffffffdc
   22514:	str	r2, [fp, #-40]	; 0xffffffd8
   22518:	str	r3, [fp, #-44]	; 0xffffffd4
   2251c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   22520:	cmp	r3, #0
   22524:	beq	22530 <__assert_fail@plt+0x112c0>
   22528:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2252c:	b	22534 <__assert_fail@plt+0x112c4>
   22530:	ldr	r3, [pc, #292]	; 2265c <__assert_fail@plt+0x113ec>
   22534:	str	r3, [fp, #-8]
   22538:	bl	11198 <__errno_location@plt>
   2253c:	mov	r3, r0
   22540:	ldr	r3, [r3]
   22544:	str	r3, [fp, #-12]
   22548:	ldr	r3, [fp, #-8]
   2254c:	ldr	r3, [r3, #4]
   22550:	ldr	r2, [fp, #-40]	; 0xffffffd8
   22554:	cmp	r2, #0
   22558:	moveq	r2, #1
   2255c:	movne	r2, #0
   22560:	uxtb	r2, r2
   22564:	orr	r3, r3, r2
   22568:	str	r3, [fp, #-16]
   2256c:	ldr	r3, [fp, #-8]
   22570:	ldr	r3, [r3]
   22574:	ldr	r2, [fp, #-8]
   22578:	add	r2, r2, #8
   2257c:	ldr	r1, [fp, #-8]
   22580:	ldr	r1, [r1, #40]	; 0x28
   22584:	ldr	r0, [fp, #-8]
   22588:	ldr	r0, [r0, #44]	; 0x2c
   2258c:	str	r0, [sp, #16]
   22590:	str	r1, [sp, #12]
   22594:	str	r2, [sp, #8]
   22598:	ldr	r2, [fp, #-16]
   2259c:	str	r2, [sp, #4]
   225a0:	str	r3, [sp]
   225a4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   225a8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   225ac:	mov	r1, #0
   225b0:	mov	r0, #0
   225b4:	bl	20d58 <__assert_fail@plt+0xfae8>
   225b8:	mov	r3, r0
   225bc:	add	r3, r3, #1
   225c0:	str	r3, [fp, #-20]	; 0xffffffec
   225c4:	ldr	r0, [fp, #-20]	; 0xffffffec
   225c8:	bl	3d3e4 <__assert_fail@plt+0x2c174>
   225cc:	mov	r3, r0
   225d0:	str	r3, [fp, #-24]	; 0xffffffe8
   225d4:	ldr	r3, [fp, #-8]
   225d8:	ldr	r3, [r3]
   225dc:	ldr	r2, [fp, #-8]
   225e0:	add	r2, r2, #8
   225e4:	ldr	r1, [fp, #-8]
   225e8:	ldr	r1, [r1, #40]	; 0x28
   225ec:	ldr	r0, [fp, #-8]
   225f0:	ldr	r0, [r0, #44]	; 0x2c
   225f4:	str	r0, [sp, #16]
   225f8:	str	r1, [sp, #12]
   225fc:	str	r2, [sp, #8]
   22600:	ldr	r2, [fp, #-16]
   22604:	str	r2, [sp, #4]
   22608:	str	r3, [sp]
   2260c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   22610:	ldr	r2, [fp, #-32]	; 0xffffffe0
   22614:	ldr	r1, [fp, #-20]	; 0xffffffec
   22618:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2261c:	bl	20d58 <__assert_fail@plt+0xfae8>
   22620:	bl	11198 <__errno_location@plt>
   22624:	mov	r2, r0
   22628:	ldr	r3, [fp, #-12]
   2262c:	str	r3, [r2]
   22630:	ldr	r3, [fp, #-40]	; 0xffffffd8
   22634:	cmp	r3, #0
   22638:	beq	2264c <__assert_fail@plt+0x113dc>
   2263c:	ldr	r3, [fp, #-20]	; 0xffffffec
   22640:	sub	r2, r3, #1
   22644:	ldr	r3, [fp, #-40]	; 0xffffffd8
   22648:	str	r2, [r3]
   2264c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   22650:	mov	r0, r3
   22654:	sub	sp, fp, #4
   22658:	pop	{fp, pc}
   2265c:	andeq	r2, r5, r8, lsr #3
   22660:	push	{fp, lr}
   22664:	add	fp, sp, #4
   22668:	sub	sp, sp, #8
   2266c:	ldr	r3, [pc, #196]	; 22738 <__assert_fail@plt+0x114c8>
   22670:	ldr	r3, [r3]
   22674:	str	r3, [fp, #-12]
   22678:	mov	r3, #1
   2267c:	str	r3, [fp, #-8]
   22680:	b	226ac <__assert_fail@plt+0x1143c>
   22684:	ldr	r3, [fp, #-8]
   22688:	lsl	r3, r3, #3
   2268c:	ldr	r2, [fp, #-12]
   22690:	add	r3, r2, r3
   22694:	ldr	r3, [r3, #4]
   22698:	mov	r0, r3
   2269c:	bl	13630 <__assert_fail@plt+0x23c0>
   226a0:	ldr	r3, [fp, #-8]
   226a4:	add	r3, r3, #1
   226a8:	str	r3, [fp, #-8]
   226ac:	ldr	r3, [pc, #136]	; 2273c <__assert_fail@plt+0x114cc>
   226b0:	ldr	r3, [r3]
   226b4:	ldr	r2, [fp, #-8]
   226b8:	cmp	r2, r3
   226bc:	blt	22684 <__assert_fail@plt+0x11414>
   226c0:	ldr	r3, [fp, #-12]
   226c4:	ldr	r3, [r3, #4]
   226c8:	ldr	r2, [pc, #112]	; 22740 <__assert_fail@plt+0x114d0>
   226cc:	cmp	r3, r2
   226d0:	beq	226fc <__assert_fail@plt+0x1148c>
   226d4:	ldr	r3, [fp, #-12]
   226d8:	ldr	r3, [r3, #4]
   226dc:	mov	r0, r3
   226e0:	bl	13630 <__assert_fail@plt+0x23c0>
   226e4:	ldr	r3, [pc, #88]	; 22744 <__assert_fail@plt+0x114d4>
   226e8:	mov	r2, #256	; 0x100
   226ec:	str	r2, [r3]
   226f0:	ldr	r3, [pc, #76]	; 22744 <__assert_fail@plt+0x114d4>
   226f4:	ldr	r2, [pc, #68]	; 22740 <__assert_fail@plt+0x114d0>
   226f8:	str	r2, [r3, #4]
   226fc:	ldr	r3, [fp, #-12]
   22700:	ldr	r2, [pc, #60]	; 22744 <__assert_fail@plt+0x114d4>
   22704:	cmp	r3, r2
   22708:	beq	22720 <__assert_fail@plt+0x114b0>
   2270c:	ldr	r0, [fp, #-12]
   22710:	bl	13630 <__assert_fail@plt+0x23c0>
   22714:	ldr	r3, [pc, #28]	; 22738 <__assert_fail@plt+0x114c8>
   22718:	ldr	r2, [pc, #36]	; 22744 <__assert_fail@plt+0x114d4>
   2271c:	str	r2, [r3]
   22720:	ldr	r3, [pc, #20]	; 2273c <__assert_fail@plt+0x114cc>
   22724:	mov	r2, #1
   22728:	str	r2, [r3]
   2272c:	nop			; (mov r0, r0)
   22730:	sub	sp, fp, #4
   22734:	pop	{fp, pc}
   22738:	andeq	r2, r5, r4, asr #2
   2273c:	andeq	r2, r5, r8, lsr r1
   22740:	ldrdeq	r2, [r5], -r8
   22744:	andeq	r2, r5, ip, lsr r1
   22748:	push	{r4, fp, lr}
   2274c:	add	fp, sp, #8
   22750:	sub	sp, sp, #84	; 0x54
   22754:	str	r0, [fp, #-56]	; 0xffffffc8
   22758:	str	r1, [fp, #-60]	; 0xffffffc4
   2275c:	str	r2, [fp, #-64]	; 0xffffffc0
   22760:	str	r3, [fp, #-68]	; 0xffffffbc
   22764:	bl	11198 <__errno_location@plt>
   22768:	mov	r3, r0
   2276c:	ldr	r3, [r3]
   22770:	str	r3, [fp, #-24]	; 0xffffffe8
   22774:	ldr	r3, [pc, #640]	; 229fc <__assert_fail@plt+0x1178c>
   22778:	ldr	r3, [r3]
   2277c:	str	r3, [fp, #-16]
   22780:	mvn	r3, #-2147483648	; 0x80000000
   22784:	str	r3, [fp, #-28]	; 0xffffffe4
   22788:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2278c:	cmp	r3, #0
   22790:	blt	227a4 <__assert_fail@plt+0x11534>
   22794:	ldr	r2, [fp, #-56]	; 0xffffffc8
   22798:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2279c:	cmp	r2, r3
   227a0:	blt	227a8 <__assert_fail@plt+0x11538>
   227a4:	bl	11258 <abort@plt>
   227a8:	ldr	r3, [pc, #592]	; 22a00 <__assert_fail@plt+0x11790>
   227ac:	ldr	r2, [r3]
   227b0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   227b4:	cmp	r2, r3
   227b8:	bgt	2288c <__assert_fail@plt+0x1161c>
   227bc:	ldr	r3, [fp, #-16]
   227c0:	ldr	r2, [pc, #572]	; 22a04 <__assert_fail@plt+0x11794>
   227c4:	cmp	r3, r2
   227c8:	moveq	r3, #1
   227cc:	movne	r3, #0
   227d0:	strb	r3, [fp, #-29]	; 0xffffffe3
   227d4:	ldr	r3, [pc, #548]	; 22a00 <__assert_fail@plt+0x11790>
   227d8:	ldr	r3, [r3]
   227dc:	str	r3, [fp, #-48]	; 0xffffffd0
   227e0:	ldrb	r3, [fp, #-29]	; 0xffffffe3
   227e4:	cmp	r3, #0
   227e8:	beq	227f4 <__assert_fail@plt+0x11584>
   227ec:	mov	r0, #0
   227f0:	b	227f8 <__assert_fail@plt+0x11588>
   227f4:	ldr	r0, [fp, #-16]
   227f8:	ldr	r3, [pc, #512]	; 22a00 <__assert_fail@plt+0x11790>
   227fc:	ldr	r3, [r3]
   22800:	ldr	r2, [fp, #-56]	; 0xffffffc8
   22804:	sub	r3, r2, r3
   22808:	add	r2, r3, #1
   2280c:	sub	r1, fp, #48	; 0x30
   22810:	mov	r3, #8
   22814:	str	r3, [sp]
   22818:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2281c:	bl	3d704 <__assert_fail@plt+0x2c494>
   22820:	str	r0, [fp, #-16]
   22824:	ldr	r2, [pc, #464]	; 229fc <__assert_fail@plt+0x1178c>
   22828:	ldr	r3, [fp, #-16]
   2282c:	str	r3, [r2]
   22830:	ldrb	r3, [fp, #-29]	; 0xffffffe3
   22834:	cmp	r3, #0
   22838:	beq	2284c <__assert_fail@plt+0x115dc>
   2283c:	ldr	r3, [fp, #-16]
   22840:	ldr	r2, [pc, #444]	; 22a04 <__assert_fail@plt+0x11794>
   22844:	ldm	r2, {r0, r1}
   22848:	stm	r3, {r0, r1}
   2284c:	ldr	r3, [pc, #428]	; 22a00 <__assert_fail@plt+0x11790>
   22850:	ldr	r3, [r3]
   22854:	lsl	r3, r3, #3
   22858:	ldr	r2, [fp, #-16]
   2285c:	add	r0, r2, r3
   22860:	ldr	r2, [fp, #-48]	; 0xffffffd0
   22864:	ldr	r3, [pc, #404]	; 22a00 <__assert_fail@plt+0x11790>
   22868:	ldr	r3, [r3]
   2286c:	sub	r3, r2, r3
   22870:	lsl	r3, r3, #3
   22874:	mov	r2, r3
   22878:	mov	r1, #0
   2287c:	bl	111bc <memset@plt>
   22880:	ldr	r3, [fp, #-48]	; 0xffffffd0
   22884:	ldr	r2, [pc, #372]	; 22a00 <__assert_fail@plt+0x11790>
   22888:	str	r3, [r2]
   2288c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   22890:	lsl	r3, r3, #3
   22894:	ldr	r2, [fp, #-16]
   22898:	add	r3, r2, r3
   2289c:	ldr	r3, [r3]
   228a0:	str	r3, [fp, #-36]	; 0xffffffdc
   228a4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   228a8:	lsl	r3, r3, #3
   228ac:	ldr	r2, [fp, #-16]
   228b0:	add	r3, r2, r3
   228b4:	ldr	r3, [r3, #4]
   228b8:	str	r3, [fp, #-20]	; 0xffffffec
   228bc:	ldr	r3, [fp, #-68]	; 0xffffffbc
   228c0:	ldr	r3, [r3, #4]
   228c4:	orr	r3, r3, #1
   228c8:	str	r3, [fp, #-40]	; 0xffffffd8
   228cc:	ldr	r3, [fp, #-68]	; 0xffffffbc
   228d0:	ldr	r3, [r3]
   228d4:	ldr	r2, [fp, #-68]	; 0xffffffbc
   228d8:	add	r2, r2, #8
   228dc:	ldr	r1, [fp, #-68]	; 0xffffffbc
   228e0:	ldr	r1, [r1, #40]	; 0x28
   228e4:	ldr	r0, [fp, #-68]	; 0xffffffbc
   228e8:	ldr	r0, [r0, #44]	; 0x2c
   228ec:	str	r0, [sp, #16]
   228f0:	str	r1, [sp, #12]
   228f4:	str	r2, [sp, #8]
   228f8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   228fc:	str	r2, [sp, #4]
   22900:	str	r3, [sp]
   22904:	ldr	r3, [fp, #-64]	; 0xffffffc0
   22908:	ldr	r2, [fp, #-60]	; 0xffffffc4
   2290c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   22910:	ldr	r0, [fp, #-20]	; 0xffffffec
   22914:	bl	20d58 <__assert_fail@plt+0xfae8>
   22918:	str	r0, [fp, #-44]	; 0xffffffd4
   2291c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   22920:	ldr	r3, [fp, #-44]	; 0xffffffd4
   22924:	cmp	r2, r3
   22928:	bhi	229dc <__assert_fail@plt+0x1176c>
   2292c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   22930:	lsl	r3, r3, #3
   22934:	ldr	r2, [fp, #-16]
   22938:	add	r3, r2, r3
   2293c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   22940:	add	r2, r2, #1
   22944:	str	r2, [fp, #-36]	; 0xffffffdc
   22948:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2294c:	str	r2, [r3]
   22950:	ldr	r3, [fp, #-20]	; 0xffffffec
   22954:	ldr	r2, [pc, #172]	; 22a08 <__assert_fail@plt+0x11798>
   22958:	cmp	r3, r2
   2295c:	beq	22968 <__assert_fail@plt+0x116f8>
   22960:	ldr	r0, [fp, #-20]	; 0xffffffec
   22964:	bl	13630 <__assert_fail@plt+0x23c0>
   22968:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2296c:	lsl	r3, r3, #3
   22970:	ldr	r2, [fp, #-16]
   22974:	add	r4, r2, r3
   22978:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2297c:	bl	3d3e4 <__assert_fail@plt+0x2c174>
   22980:	mov	r3, r0
   22984:	str	r3, [fp, #-20]	; 0xffffffec
   22988:	ldr	r3, [fp, #-20]	; 0xffffffec
   2298c:	str	r3, [r4, #4]
   22990:	ldr	r3, [fp, #-68]	; 0xffffffbc
   22994:	ldr	r3, [r3]
   22998:	ldr	r2, [fp, #-68]	; 0xffffffbc
   2299c:	add	r2, r2, #8
   229a0:	ldr	r1, [fp, #-68]	; 0xffffffbc
   229a4:	ldr	r1, [r1, #40]	; 0x28
   229a8:	ldr	r0, [fp, #-68]	; 0xffffffbc
   229ac:	ldr	r0, [r0, #44]	; 0x2c
   229b0:	str	r0, [sp, #16]
   229b4:	str	r1, [sp, #12]
   229b8:	str	r2, [sp, #8]
   229bc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   229c0:	str	r2, [sp, #4]
   229c4:	str	r3, [sp]
   229c8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   229cc:	ldr	r2, [fp, #-60]	; 0xffffffc4
   229d0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   229d4:	ldr	r0, [fp, #-20]	; 0xffffffec
   229d8:	bl	20d58 <__assert_fail@plt+0xfae8>
   229dc:	bl	11198 <__errno_location@plt>
   229e0:	mov	r2, r0
   229e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   229e8:	str	r3, [r2]
   229ec:	ldr	r3, [fp, #-20]	; 0xffffffec
   229f0:	mov	r0, r3
   229f4:	sub	sp, fp, #8
   229f8:	pop	{r4, fp, pc}
   229fc:	andeq	r2, r5, r4, asr #2
   22a00:	andeq	r2, r5, r8, lsr r1
   22a04:	andeq	r2, r5, ip, lsr r1
   22a08:	ldrdeq	r2, [r5], -r8
   22a0c:	push	{fp, lr}
   22a10:	add	fp, sp, #4
   22a14:	sub	sp, sp, #8
   22a18:	str	r0, [fp, #-8]
   22a1c:	str	r1, [fp, #-12]
   22a20:	ldr	r3, [pc, #28]	; 22a44 <__assert_fail@plt+0x117d4>
   22a24:	mvn	r2, #0
   22a28:	ldr	r1, [fp, #-12]
   22a2c:	ldr	r0, [fp, #-8]
   22a30:	bl	22748 <__assert_fail@plt+0x114d8>
   22a34:	mov	r3, r0
   22a38:	mov	r0, r3
   22a3c:	sub	sp, fp, #4
   22a40:	pop	{fp, pc}
   22a44:	andeq	r2, r5, r8, lsr #3
   22a48:	push	{fp, lr}
   22a4c:	add	fp, sp, #4
   22a50:	sub	sp, sp, #16
   22a54:	str	r0, [fp, #-8]
   22a58:	str	r1, [fp, #-12]
   22a5c:	str	r2, [fp, #-16]
   22a60:	ldr	r3, [pc, #28]	; 22a84 <__assert_fail@plt+0x11814>
   22a64:	ldr	r2, [fp, #-16]
   22a68:	ldr	r1, [fp, #-12]
   22a6c:	ldr	r0, [fp, #-8]
   22a70:	bl	22748 <__assert_fail@plt+0x114d8>
   22a74:	mov	r3, r0
   22a78:	mov	r0, r3
   22a7c:	sub	sp, fp, #4
   22a80:	pop	{fp, pc}
   22a84:	andeq	r2, r5, r8, lsr #3
   22a88:	push	{fp, lr}
   22a8c:	add	fp, sp, #4
   22a90:	sub	sp, sp, #8
   22a94:	str	r0, [fp, #-8]
   22a98:	ldr	r1, [fp, #-8]
   22a9c:	mov	r0, #0
   22aa0:	bl	22a0c <__assert_fail@plt+0x1179c>
   22aa4:	mov	r3, r0
   22aa8:	mov	r0, r3
   22aac:	sub	sp, fp, #4
   22ab0:	pop	{fp, pc}
   22ab4:	push	{fp, lr}
   22ab8:	add	fp, sp, #4
   22abc:	sub	sp, sp, #8
   22ac0:	str	r0, [fp, #-8]
   22ac4:	str	r1, [fp, #-12]
   22ac8:	ldr	r2, [fp, #-12]
   22acc:	ldr	r1, [fp, #-8]
   22ad0:	mov	r0, #0
   22ad4:	bl	22a48 <__assert_fail@plt+0x117d8>
   22ad8:	mov	r3, r0
   22adc:	mov	r0, r3
   22ae0:	sub	sp, fp, #4
   22ae4:	pop	{fp, pc}
   22ae8:	push	{fp, lr}
   22aec:	add	fp, sp, #4
   22af0:	sub	sp, sp, #64	; 0x40
   22af4:	str	r0, [fp, #-56]	; 0xffffffc8
   22af8:	str	r1, [fp, #-60]	; 0xffffffc4
   22afc:	str	r2, [fp, #-64]	; 0xffffffc0
   22b00:	sub	r3, fp, #52	; 0x34
   22b04:	ldr	r1, [fp, #-60]	; 0xffffffc4
   22b08:	mov	r0, r3
   22b0c:	bl	20bf4 <__assert_fail@plt+0xf984>
   22b10:	sub	r3, fp, #52	; 0x34
   22b14:	mvn	r2, #0
   22b18:	ldr	r1, [fp, #-64]	; 0xffffffc0
   22b1c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   22b20:	bl	22748 <__assert_fail@plt+0x114d8>
   22b24:	mov	r3, r0
   22b28:	mov	r0, r3
   22b2c:	sub	sp, fp, #4
   22b30:	pop	{fp, pc}
   22b34:	push	{fp, lr}
   22b38:	add	fp, sp, #4
   22b3c:	sub	sp, sp, #64	; 0x40
   22b40:	str	r0, [fp, #-56]	; 0xffffffc8
   22b44:	str	r1, [fp, #-60]	; 0xffffffc4
   22b48:	str	r2, [fp, #-64]	; 0xffffffc0
   22b4c:	str	r3, [fp, #-68]	; 0xffffffbc
   22b50:	sub	r3, fp, #52	; 0x34
   22b54:	ldr	r1, [fp, #-60]	; 0xffffffc4
   22b58:	mov	r0, r3
   22b5c:	bl	20bf4 <__assert_fail@plt+0xf984>
   22b60:	sub	r3, fp, #52	; 0x34
   22b64:	ldr	r2, [fp, #-68]	; 0xffffffbc
   22b68:	ldr	r1, [fp, #-64]	; 0xffffffc0
   22b6c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   22b70:	bl	22748 <__assert_fail@plt+0x114d8>
   22b74:	mov	r3, r0
   22b78:	mov	r0, r3
   22b7c:	sub	sp, fp, #4
   22b80:	pop	{fp, pc}
   22b84:	push	{fp, lr}
   22b88:	add	fp, sp, #4
   22b8c:	sub	sp, sp, #8
   22b90:	str	r0, [fp, #-8]
   22b94:	str	r1, [fp, #-12]
   22b98:	ldr	r2, [fp, #-12]
   22b9c:	ldr	r1, [fp, #-8]
   22ba0:	mov	r0, #0
   22ba4:	bl	22ae8 <__assert_fail@plt+0x11878>
   22ba8:	mov	r3, r0
   22bac:	mov	r0, r3
   22bb0:	sub	sp, fp, #4
   22bb4:	pop	{fp, pc}
   22bb8:	push	{fp, lr}
   22bbc:	add	fp, sp, #4
   22bc0:	sub	sp, sp, #16
   22bc4:	str	r0, [fp, #-8]
   22bc8:	str	r1, [fp, #-12]
   22bcc:	str	r2, [fp, #-16]
   22bd0:	ldr	r3, [fp, #-16]
   22bd4:	ldr	r2, [fp, #-12]
   22bd8:	ldr	r1, [fp, #-8]
   22bdc:	mov	r0, #0
   22be0:	bl	22b34 <__assert_fail@plt+0x118c4>
   22be4:	mov	r3, r0
   22be8:	mov	r0, r3
   22bec:	sub	sp, fp, #4
   22bf0:	pop	{fp, pc}
   22bf4:	push	{fp, lr}
   22bf8:	add	fp, sp, #4
   22bfc:	sub	sp, sp, #64	; 0x40
   22c00:	str	r0, [fp, #-56]	; 0xffffffc8
   22c04:	str	r1, [fp, #-60]	; 0xffffffc4
   22c08:	mov	r3, r2
   22c0c:	strb	r3, [fp, #-61]	; 0xffffffc3
   22c10:	ldr	r3, [pc, #84]	; 22c6c <__assert_fail@plt+0x119fc>
   22c14:	sub	ip, fp, #52	; 0x34
   22c18:	mov	lr, r3
   22c1c:	ldm	lr!, {r0, r1, r2, r3}
   22c20:	stmia	ip!, {r0, r1, r2, r3}
   22c24:	ldm	lr!, {r0, r1, r2, r3}
   22c28:	stmia	ip!, {r0, r1, r2, r3}
   22c2c:	ldm	lr, {r0, r1, r2, r3}
   22c30:	stm	ip, {r0, r1, r2, r3}
   22c34:	ldrb	r1, [fp, #-61]	; 0xffffffc3
   22c38:	sub	r3, fp, #52	; 0x34
   22c3c:	mov	r2, #1
   22c40:	mov	r0, r3
   22c44:	bl	20a60 <__assert_fail@plt+0xf7f0>
   22c48:	sub	r3, fp, #52	; 0x34
   22c4c:	ldr	r2, [fp, #-60]	; 0xffffffc4
   22c50:	ldr	r1, [fp, #-56]	; 0xffffffc8
   22c54:	mov	r0, #0
   22c58:	bl	22748 <__assert_fail@plt+0x114d8>
   22c5c:	mov	r3, r0
   22c60:	mov	r0, r3
   22c64:	sub	sp, fp, #4
   22c68:	pop	{fp, pc}
   22c6c:	andeq	r2, r5, r8, lsr #3
   22c70:	push	{fp, lr}
   22c74:	add	fp, sp, #4
   22c78:	sub	sp, sp, #8
   22c7c:	str	r0, [fp, #-8]
   22c80:	mov	r3, r1
   22c84:	strb	r3, [fp, #-9]
   22c88:	ldrb	r3, [fp, #-9]
   22c8c:	mov	r2, r3
   22c90:	mvn	r1, #0
   22c94:	ldr	r0, [fp, #-8]
   22c98:	bl	22bf4 <__assert_fail@plt+0x11984>
   22c9c:	mov	r3, r0
   22ca0:	mov	r0, r3
   22ca4:	sub	sp, fp, #4
   22ca8:	pop	{fp, pc}
   22cac:	push	{fp, lr}
   22cb0:	add	fp, sp, #4
   22cb4:	sub	sp, sp, #8
   22cb8:	str	r0, [fp, #-8]
   22cbc:	mov	r1, #58	; 0x3a
   22cc0:	ldr	r0, [fp, #-8]
   22cc4:	bl	22c70 <__assert_fail@plt+0x11a00>
   22cc8:	mov	r3, r0
   22ccc:	mov	r0, r3
   22cd0:	sub	sp, fp, #4
   22cd4:	pop	{fp, pc}
   22cd8:	push	{fp, lr}
   22cdc:	add	fp, sp, #4
   22ce0:	sub	sp, sp, #8
   22ce4:	str	r0, [fp, #-8]
   22ce8:	str	r1, [fp, #-12]
   22cec:	mov	r2, #58	; 0x3a
   22cf0:	ldr	r1, [fp, #-12]
   22cf4:	ldr	r0, [fp, #-8]
   22cf8:	bl	22bf4 <__assert_fail@plt+0x11984>
   22cfc:	mov	r3, r0
   22d00:	mov	r0, r3
   22d04:	sub	sp, fp, #4
   22d08:	pop	{fp, pc}
   22d0c:	push	{fp, lr}
   22d10:	add	fp, sp, #4
   22d14:	sub	sp, sp, #112	; 0x70
   22d18:	str	r0, [fp, #-56]	; 0xffffffc8
   22d1c:	str	r1, [fp, #-60]	; 0xffffffc4
   22d20:	str	r2, [fp, #-64]	; 0xffffffc0
   22d24:	sub	r3, fp, #116	; 0x74
   22d28:	ldr	r1, [fp, #-60]	; 0xffffffc4
   22d2c:	mov	r0, r3
   22d30:	bl	20bf4 <__assert_fail@plt+0xf984>
   22d34:	sub	ip, fp, #52	; 0x34
   22d38:	sub	lr, fp, #116	; 0x74
   22d3c:	ldm	lr!, {r0, r1, r2, r3}
   22d40:	stmia	ip!, {r0, r1, r2, r3}
   22d44:	ldm	lr!, {r0, r1, r2, r3}
   22d48:	stmia	ip!, {r0, r1, r2, r3}
   22d4c:	ldm	lr, {r0, r1, r2, r3}
   22d50:	stm	ip, {r0, r1, r2, r3}
   22d54:	sub	r3, fp, #52	; 0x34
   22d58:	mov	r2, #1
   22d5c:	mov	r1, #58	; 0x3a
   22d60:	mov	r0, r3
   22d64:	bl	20a60 <__assert_fail@plt+0xf7f0>
   22d68:	sub	r3, fp, #52	; 0x34
   22d6c:	mvn	r2, #0
   22d70:	ldr	r1, [fp, #-64]	; 0xffffffc0
   22d74:	ldr	r0, [fp, #-56]	; 0xffffffc8
   22d78:	bl	22748 <__assert_fail@plt+0x114d8>
   22d7c:	mov	r3, r0
   22d80:	mov	r0, r3
   22d84:	sub	sp, fp, #4
   22d88:	pop	{fp, pc}
   22d8c:	push	{fp, lr}
   22d90:	add	fp, sp, #4
   22d94:	sub	sp, sp, #24
   22d98:	str	r0, [fp, #-8]
   22d9c:	str	r1, [fp, #-12]
   22da0:	str	r2, [fp, #-16]
   22da4:	str	r3, [fp, #-20]	; 0xffffffec
   22da8:	mvn	r3, #0
   22dac:	str	r3, [sp]
   22db0:	ldr	r3, [fp, #-20]	; 0xffffffec
   22db4:	ldr	r2, [fp, #-16]
   22db8:	ldr	r1, [fp, #-12]
   22dbc:	ldr	r0, [fp, #-8]
   22dc0:	bl	22dd4 <__assert_fail@plt+0x11b64>
   22dc4:	mov	r3, r0
   22dc8:	mov	r0, r3
   22dcc:	sub	sp, fp, #4
   22dd0:	pop	{fp, pc}
   22dd4:	push	{fp, lr}
   22dd8:	add	fp, sp, #4
   22ddc:	sub	sp, sp, #64	; 0x40
   22de0:	str	r0, [fp, #-56]	; 0xffffffc8
   22de4:	str	r1, [fp, #-60]	; 0xffffffc4
   22de8:	str	r2, [fp, #-64]	; 0xffffffc0
   22dec:	str	r3, [fp, #-68]	; 0xffffffbc
   22df0:	ldr	r3, [pc, #84]	; 22e4c <__assert_fail@plt+0x11bdc>
   22df4:	sub	ip, fp, #52	; 0x34
   22df8:	mov	lr, r3
   22dfc:	ldm	lr!, {r0, r1, r2, r3}
   22e00:	stmia	ip!, {r0, r1, r2, r3}
   22e04:	ldm	lr!, {r0, r1, r2, r3}
   22e08:	stmia	ip!, {r0, r1, r2, r3}
   22e0c:	ldm	lr, {r0, r1, r2, r3}
   22e10:	stm	ip, {r0, r1, r2, r3}
   22e14:	sub	r3, fp, #52	; 0x34
   22e18:	ldr	r2, [fp, #-64]	; 0xffffffc0
   22e1c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   22e20:	mov	r0, r3
   22e24:	bl	20b78 <__assert_fail@plt+0xf908>
   22e28:	sub	r3, fp, #52	; 0x34
   22e2c:	ldr	r2, [fp, #4]
   22e30:	ldr	r1, [fp, #-68]	; 0xffffffbc
   22e34:	ldr	r0, [fp, #-56]	; 0xffffffc8
   22e38:	bl	22748 <__assert_fail@plt+0x114d8>
   22e3c:	mov	r3, r0
   22e40:	mov	r0, r3
   22e44:	sub	sp, fp, #4
   22e48:	pop	{fp, pc}
   22e4c:	andeq	r2, r5, r8, lsr #3
   22e50:	push	{fp, lr}
   22e54:	add	fp, sp, #4
   22e58:	sub	sp, sp, #16
   22e5c:	str	r0, [fp, #-8]
   22e60:	str	r1, [fp, #-12]
   22e64:	str	r2, [fp, #-16]
   22e68:	ldr	r3, [fp, #-16]
   22e6c:	ldr	r2, [fp, #-12]
   22e70:	ldr	r1, [fp, #-8]
   22e74:	mov	r0, #0
   22e78:	bl	22d8c <__assert_fail@plt+0x11b1c>
   22e7c:	mov	r3, r0
   22e80:	mov	r0, r3
   22e84:	sub	sp, fp, #4
   22e88:	pop	{fp, pc}
   22e8c:	push	{fp, lr}
   22e90:	add	fp, sp, #4
   22e94:	sub	sp, sp, #24
   22e98:	str	r0, [fp, #-8]
   22e9c:	str	r1, [fp, #-12]
   22ea0:	str	r2, [fp, #-16]
   22ea4:	str	r3, [fp, #-20]	; 0xffffffec
   22ea8:	ldr	r3, [fp, #-20]	; 0xffffffec
   22eac:	str	r3, [sp]
   22eb0:	ldr	r3, [fp, #-16]
   22eb4:	ldr	r2, [fp, #-12]
   22eb8:	ldr	r1, [fp, #-8]
   22ebc:	mov	r0, #0
   22ec0:	bl	22dd4 <__assert_fail@plt+0x11b64>
   22ec4:	mov	r3, r0
   22ec8:	mov	r0, r3
   22ecc:	sub	sp, fp, #4
   22ed0:	pop	{fp, pc}
   22ed4:	push	{fp, lr}
   22ed8:	add	fp, sp, #4
   22edc:	sub	sp, sp, #16
   22ee0:	str	r0, [fp, #-8]
   22ee4:	str	r1, [fp, #-12]
   22ee8:	str	r2, [fp, #-16]
   22eec:	ldr	r3, [pc, #28]	; 22f10 <__assert_fail@plt+0x11ca0>
   22ef0:	ldr	r2, [fp, #-16]
   22ef4:	ldr	r1, [fp, #-12]
   22ef8:	ldr	r0, [fp, #-8]
   22efc:	bl	22748 <__assert_fail@plt+0x114d8>
   22f00:	mov	r3, r0
   22f04:	mov	r0, r3
   22f08:	sub	sp, fp, #4
   22f0c:	pop	{fp, pc}
   22f10:	andeq	r2, r5, r8, asr #2
   22f14:	push	{fp, lr}
   22f18:	add	fp, sp, #4
   22f1c:	sub	sp, sp, #8
   22f20:	str	r0, [fp, #-8]
   22f24:	str	r1, [fp, #-12]
   22f28:	ldr	r2, [fp, #-12]
   22f2c:	ldr	r1, [fp, #-8]
   22f30:	mov	r0, #0
   22f34:	bl	22ed4 <__assert_fail@plt+0x11c64>
   22f38:	mov	r3, r0
   22f3c:	mov	r0, r3
   22f40:	sub	sp, fp, #4
   22f44:	pop	{fp, pc}
   22f48:	push	{fp, lr}
   22f4c:	add	fp, sp, #4
   22f50:	sub	sp, sp, #8
   22f54:	str	r0, [fp, #-8]
   22f58:	str	r1, [fp, #-12]
   22f5c:	mvn	r2, #0
   22f60:	ldr	r1, [fp, #-12]
   22f64:	ldr	r0, [fp, #-8]
   22f68:	bl	22ed4 <__assert_fail@plt+0x11c64>
   22f6c:	mov	r3, r0
   22f70:	mov	r0, r3
   22f74:	sub	sp, fp, #4
   22f78:	pop	{fp, pc}
   22f7c:	push	{fp, lr}
   22f80:	add	fp, sp, #4
   22f84:	sub	sp, sp, #8
   22f88:	str	r0, [fp, #-8]
   22f8c:	ldr	r1, [fp, #-8]
   22f90:	mov	r0, #0
   22f94:	bl	22f48 <__assert_fail@plt+0x11cd8>
   22f98:	mov	r3, r0
   22f9c:	mov	r0, r3
   22fa0:	sub	sp, fp, #4
   22fa4:	pop	{fp, pc}
   22fa8:	push	{fp}		; (str fp, [sp, #-4]!)
   22fac:	add	fp, sp, #0
   22fb0:	mvn	r3, #0
   22fb4:	mov	r0, r3
   22fb8:	add	sp, fp, #0
   22fbc:	pop	{fp}		; (ldr fp, [sp], #4)
   22fc0:	bx	lr
   22fc4:	push	{fp}		; (str fp, [sp, #-4]!)
   22fc8:	add	fp, sp, #0
   22fcc:	sub	sp, sp, #12
   22fd0:	str	r0, [fp, #-8]
   22fd4:	str	r1, [fp, #-12]
   22fd8:	ldr	r3, [fp, #-12]
   22fdc:	add	r2, r3, #31
   22fe0:	cmp	r3, #0
   22fe4:	movlt	r3, r2
   22fe8:	movge	r3, r3
   22fec:	asr	r3, r3, #5
   22ff0:	mov	r0, r3
   22ff4:	mov	r3, r0
   22ff8:	lsl	r3, r3, #2
   22ffc:	ldr	r2, [fp, #-8]
   23000:	add	r1, r2, r3
   23004:	mov	r3, r0
   23008:	lsl	r3, r3, #2
   2300c:	ldr	r2, [fp, #-8]
   23010:	add	r3, r2, r3
   23014:	ldr	r0, [r3]
   23018:	ldr	r2, [fp, #-12]
   2301c:	asr	r3, r2, #31
   23020:	lsr	r3, r3, #27
   23024:	add	r2, r2, r3
   23028:	and	r2, r2, #31
   2302c:	sub	r3, r2, r3
   23030:	mov	r2, r3
   23034:	mov	r3, #1
   23038:	lsl	r3, r3, r2
   2303c:	orr	r3, r0, r3
   23040:	str	r3, [r1]
   23044:	nop			; (mov r0, r0)
   23048:	add	sp, fp, #0
   2304c:	pop	{fp}		; (ldr fp, [sp], #4)
   23050:	bx	lr
   23054:	push	{fp}		; (str fp, [sp, #-4]!)
   23058:	add	fp, sp, #0
   2305c:	sub	sp, sp, #12
   23060:	str	r0, [fp, #-8]
   23064:	str	r1, [fp, #-12]
   23068:	ldr	r3, [fp, #-12]
   2306c:	add	r2, r3, #31
   23070:	cmp	r3, #0
   23074:	movlt	r3, r2
   23078:	movge	r3, r3
   2307c:	asr	r3, r3, #5
   23080:	mov	r0, r3
   23084:	mov	r3, r0
   23088:	lsl	r3, r3, #2
   2308c:	ldr	r2, [fp, #-8]
   23090:	add	r1, r2, r3
   23094:	mov	r3, r0
   23098:	lsl	r3, r3, #2
   2309c:	ldr	r2, [fp, #-8]
   230a0:	add	r3, r2, r3
   230a4:	ldr	r0, [r3]
   230a8:	ldr	r2, [fp, #-12]
   230ac:	asr	r3, r2, #31
   230b0:	lsr	r3, r3, #27
   230b4:	add	r2, r2, r3
   230b8:	and	r2, r2, #31
   230bc:	sub	r3, r2, r3
   230c0:	mov	r2, r3
   230c4:	mov	r3, #1
   230c8:	lsl	r3, r3, r2
   230cc:	mvn	r3, r3
   230d0:	and	r3, r3, r0
   230d4:	str	r3, [r1]
   230d8:	nop			; (mov r0, r0)
   230dc:	add	sp, fp, #0
   230e0:	pop	{fp}		; (ldr fp, [sp], #4)
   230e4:	bx	lr
   230e8:	push	{fp}		; (str fp, [sp, #-4]!)
   230ec:	add	fp, sp, #0
   230f0:	sub	sp, sp, #12
   230f4:	str	r0, [fp, #-8]
   230f8:	str	r1, [fp, #-12]
   230fc:	ldr	r3, [fp, #-12]
   23100:	add	r2, r3, #31
   23104:	cmp	r3, #0
   23108:	movlt	r3, r2
   2310c:	movge	r3, r3
   23110:	asr	r3, r3, #5
   23114:	lsl	r3, r3, #2
   23118:	ldr	r2, [fp, #-8]
   2311c:	add	r3, r2, r3
   23120:	ldr	r1, [r3]
   23124:	ldr	r2, [fp, #-12]
   23128:	asr	r3, r2, #31
   2312c:	lsr	r3, r3, #27
   23130:	add	r2, r2, r3
   23134:	and	r2, r2, #31
   23138:	sub	r3, r2, r3
   2313c:	lsr	r3, r1, r3
   23140:	and	r3, r3, #1
   23144:	cmp	r3, #0
   23148:	movne	r3, #1
   2314c:	moveq	r3, #0
   23150:	uxtb	r3, r3
   23154:	mov	r0, r3
   23158:	add	sp, fp, #0
   2315c:	pop	{fp}		; (ldr fp, [sp], #4)
   23160:	bx	lr
   23164:	push	{fp, lr}
   23168:	add	fp, sp, #4
   2316c:	sub	sp, sp, #8
   23170:	str	r0, [fp, #-8]
   23174:	mov	r2, #32
   23178:	mov	r1, #0
   2317c:	ldr	r0, [fp, #-8]
   23180:	bl	111bc <memset@plt>
   23184:	nop			; (mov r0, r0)
   23188:	sub	sp, fp, #4
   2318c:	pop	{fp, pc}
   23190:	push	{fp, lr}
   23194:	add	fp, sp, #4
   23198:	sub	sp, sp, #8
   2319c:	str	r0, [fp, #-8]
   231a0:	mov	r2, #32
   231a4:	mvn	r1, #0
   231a8:	ldr	r0, [fp, #-8]
   231ac:	bl	111bc <memset@plt>
   231b0:	nop			; (mov r0, r0)
   231b4:	sub	sp, fp, #4
   231b8:	pop	{fp, pc}
   231bc:	push	{fp, lr}
   231c0:	add	fp, sp, #4
   231c4:	sub	sp, sp, #8
   231c8:	str	r0, [fp, #-8]
   231cc:	str	r1, [fp, #-12]
   231d0:	mov	r2, #32
   231d4:	ldr	r1, [fp, #-12]
   231d8:	ldr	r0, [fp, #-8]
   231dc:	bl	11018 <memcpy@plt>
   231e0:	nop			; (mov r0, r0)
   231e4:	sub	sp, fp, #4
   231e8:	pop	{fp, pc}
   231ec:	push	{fp}		; (str fp, [sp, #-4]!)
   231f0:	add	fp, sp, #0
   231f4:	sub	sp, sp, #20
   231f8:	str	r0, [fp, #-16]
   231fc:	mov	r3, #0
   23200:	str	r3, [fp, #-8]
   23204:	b	23240 <__assert_fail@plt+0x11fd0>
   23208:	ldr	r3, [fp, #-8]
   2320c:	lsl	r3, r3, #2
   23210:	ldr	r2, [fp, #-16]
   23214:	add	r3, r2, r3
   23218:	ldr	r2, [fp, #-8]
   2321c:	lsl	r2, r2, #2
   23220:	ldr	r1, [fp, #-16]
   23224:	add	r2, r1, r2
   23228:	ldr	r2, [r2]
   2322c:	mvn	r2, r2
   23230:	str	r2, [r3]
   23234:	ldr	r3, [fp, #-8]
   23238:	add	r3, r3, #1
   2323c:	str	r3, [fp, #-8]
   23240:	ldr	r3, [fp, #-8]
   23244:	cmp	r3, #7
   23248:	ble	23208 <__assert_fail@plt+0x11f98>
   2324c:	nop			; (mov r0, r0)
   23250:	add	sp, fp, #0
   23254:	pop	{fp}		; (ldr fp, [sp], #4)
   23258:	bx	lr
   2325c:	push	{fp}		; (str fp, [sp, #-4]!)
   23260:	add	fp, sp, #0
   23264:	sub	sp, sp, #20
   23268:	str	r0, [fp, #-16]
   2326c:	str	r1, [fp, #-20]	; 0xffffffec
   23270:	mov	r3, #0
   23274:	str	r3, [fp, #-8]
   23278:	b	232c8 <__assert_fail@plt+0x12058>
   2327c:	ldr	r3, [fp, #-8]
   23280:	lsl	r3, r3, #2
   23284:	ldr	r2, [fp, #-16]
   23288:	add	r3, r2, r3
   2328c:	ldr	r2, [fp, #-8]
   23290:	lsl	r2, r2, #2
   23294:	ldr	r1, [fp, #-16]
   23298:	add	r2, r1, r2
   2329c:	ldr	r1, [r2]
   232a0:	ldr	r2, [fp, #-8]
   232a4:	lsl	r2, r2, #2
   232a8:	ldr	r0, [fp, #-20]	; 0xffffffec
   232ac:	add	r2, r0, r2
   232b0:	ldr	r2, [r2]
   232b4:	orr	r2, r1, r2
   232b8:	str	r2, [r3]
   232bc:	ldr	r3, [fp, #-8]
   232c0:	add	r3, r3, #1
   232c4:	str	r3, [fp, #-8]
   232c8:	ldr	r3, [fp, #-8]
   232cc:	cmp	r3, #7
   232d0:	ble	2327c <__assert_fail@plt+0x1200c>
   232d4:	nop			; (mov r0, r0)
   232d8:	add	sp, fp, #0
   232dc:	pop	{fp}		; (ldr fp, [sp], #4)
   232e0:	bx	lr
   232e4:	push	{fp}		; (str fp, [sp, #-4]!)
   232e8:	add	fp, sp, #0
   232ec:	sub	sp, sp, #20
   232f0:	str	r0, [fp, #-16]
   232f4:	str	r1, [fp, #-20]	; 0xffffffec
   232f8:	mov	r3, #0
   232fc:	str	r3, [fp, #-8]
   23300:	b	23350 <__assert_fail@plt+0x120e0>
   23304:	ldr	r3, [fp, #-8]
   23308:	lsl	r3, r3, #2
   2330c:	ldr	r2, [fp, #-16]
   23310:	add	r3, r2, r3
   23314:	ldr	r2, [fp, #-8]
   23318:	lsl	r2, r2, #2
   2331c:	ldr	r1, [fp, #-16]
   23320:	add	r2, r1, r2
   23324:	ldr	r1, [r2]
   23328:	ldr	r2, [fp, #-8]
   2332c:	lsl	r2, r2, #2
   23330:	ldr	r0, [fp, #-20]	; 0xffffffec
   23334:	add	r2, r0, r2
   23338:	ldr	r2, [r2]
   2333c:	and	r2, r2, r1
   23340:	str	r2, [r3]
   23344:	ldr	r3, [fp, #-8]
   23348:	add	r3, r3, #1
   2334c:	str	r3, [fp, #-8]
   23350:	ldr	r3, [fp, #-8]
   23354:	cmp	r3, #7
   23358:	ble	23304 <__assert_fail@plt+0x12094>
   2335c:	nop			; (mov r0, r0)
   23360:	add	sp, fp, #0
   23364:	pop	{fp}		; (ldr fp, [sp], #4)
   23368:	bx	lr
   2336c:	push	{fp}		; (str fp, [sp, #-4]!)
   23370:	add	fp, sp, #0
   23374:	sub	sp, sp, #20
   23378:	str	r0, [fp, #-16]
   2337c:	str	r1, [fp, #-20]	; 0xffffffec
   23380:	ldr	r3, [fp, #-16]
   23384:	ldr	r3, [r3, #80]	; 0x50
   23388:	cmp	r3, #1
   2338c:	bne	23398 <__assert_fail@plt+0x12128>
   23390:	mov	r3, #1
   23394:	b	23400 <__assert_fail@plt+0x12190>
   23398:	mov	r3, #1
   2339c:	str	r3, [fp, #-8]
   233a0:	b	233d8 <__assert_fail@plt+0x12168>
   233a4:	ldr	r3, [fp, #-16]
   233a8:	ldr	r2, [r3, #8]
   233ac:	ldr	r1, [fp, #-20]	; 0xffffffec
   233b0:	ldr	r3, [fp, #-8]
   233b4:	add	r3, r1, r3
   233b8:	lsl	r3, r3, #2
   233bc:	add	r3, r2, r3
   233c0:	ldr	r3, [r3]
   233c4:	cmn	r3, #1
   233c8:	bne	233f8 <__assert_fail@plt+0x12188>
   233cc:	ldr	r3, [fp, #-8]
   233d0:	add	r3, r3, #1
   233d4:	str	r3, [fp, #-8]
   233d8:	ldr	r2, [fp, #-20]	; 0xffffffec
   233dc:	ldr	r3, [fp, #-8]
   233e0:	add	r2, r2, r3
   233e4:	ldr	r3, [fp, #-16]
   233e8:	ldr	r3, [r3, #28]
   233ec:	cmp	r2, r3
   233f0:	blt	233a4 <__assert_fail@plt+0x12134>
   233f4:	b	233fc <__assert_fail@plt+0x1218c>
   233f8:	nop			; (mov r0, r0)
   233fc:	ldr	r3, [fp, #-8]
   23400:	mov	r0, r3
   23404:	add	sp, fp, #0
   23408:	pop	{fp}		; (ldr fp, [sp], #4)
   2340c:	bx	lr
   23410:	push	{fp}		; (str fp, [sp, #-4]!)
   23414:	add	fp, sp, #0
   23418:	sub	sp, sp, #12
   2341c:	str	r0, [fp, #-8]
   23420:	str	r1, [fp, #-12]
   23424:	ldr	r3, [fp, #-8]
   23428:	ldr	r3, [r3, #80]	; 0x50
   2342c:	cmp	r3, #1
   23430:	bne	2344c <__assert_fail@plt+0x121dc>
   23434:	ldr	r3, [fp, #-8]
   23438:	ldr	r2, [r3, #4]
   2343c:	ldr	r3, [fp, #-12]
   23440:	add	r3, r2, r3
   23444:	ldrb	r3, [r3]
   23448:	b	23464 <__assert_fail@plt+0x121f4>
   2344c:	ldr	r3, [fp, #-8]
   23450:	ldr	r2, [r3, #8]
   23454:	ldr	r3, [fp, #-12]
   23458:	lsl	r3, r3, #2
   2345c:	add	r3, r2, r3
   23460:	ldr	r3, [r3]
   23464:	mov	r0, r3
   23468:	add	sp, fp, #0
   2346c:	pop	{fp}		; (ldr fp, [sp], #4)
   23470:	bx	lr
   23474:	push	{fp}		; (str fp, [sp, #-4]!)
   23478:	add	fp, sp, #0
   2347c:	sub	sp, sp, #12
   23480:	str	r0, [fp, #-8]
   23484:	str	r1, [fp, #-12]
   23488:	mov	r3, #1
   2348c:	mov	r0, r3
   23490:	add	sp, fp, #0
   23494:	pop	{fp}		; (ldr fp, [sp], #4)
   23498:	bx	lr
   2349c:	push	{fp, lr}
   234a0:	add	fp, sp, #4
   234a4:	sub	sp, sp, #32
   234a8:	str	r0, [fp, #-16]
   234ac:	str	r1, [fp, #-20]	; 0xffffffec
   234b0:	str	r2, [fp, #-24]	; 0xffffffe8
   234b4:	str	r3, [fp, #-28]	; 0xffffffe4
   234b8:	ldr	r3, [fp, #12]
   234bc:	ldr	r2, [r3, #92]	; 0x5c
   234c0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   234c4:	cmp	r2, r3
   234c8:	ble	234d8 <__assert_fail@plt+0x12268>
   234cc:	ldr	r3, [fp, #12]
   234d0:	ldr	r3, [r3, #92]	; 0x5c
   234d4:	str	r3, [fp, #-28]	; 0xffffffe4
   234d8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   234dc:	add	r2, r3, #1
   234e0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   234e4:	cmp	r2, r3
   234e8:	movlt	r3, r2
   234ec:	movge	r3, r3
   234f0:	str	r3, [fp, #-8]
   234f4:	ldr	r3, [fp, #12]
   234f8:	str	r3, [sp, #4]
   234fc:	ldrb	r3, [fp, #8]
   23500:	str	r3, [sp]
   23504:	ldr	r3, [fp, #4]
   23508:	ldr	r2, [fp, #-16]
   2350c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   23510:	ldr	r0, [fp, #-20]	; 0xffffffec
   23514:	bl	239a8 <__assert_fail@plt+0x12738>
   23518:	ldr	r1, [fp, #-8]
   2351c:	ldr	r0, [fp, #-16]
   23520:	bl	237fc <__assert_fail@plt+0x1258c>
   23524:	str	r0, [fp, #-12]
   23528:	ldr	r3, [fp, #-12]
   2352c:	cmp	r3, #0
   23530:	movne	r3, #1
   23534:	moveq	r3, #0
   23538:	uxtb	r3, r3
   2353c:	cmp	r3, #0
   23540:	beq	2354c <__assert_fail@plt+0x122dc>
   23544:	ldr	r3, [fp, #-12]
   23548:	b	235ec <__assert_fail@plt+0x1237c>
   2354c:	ldr	r3, [fp, #12]
   23550:	add	r2, r3, #96	; 0x60
   23554:	ldr	r3, [fp, #-16]
   23558:	str	r2, [r3, #68]	; 0x44
   2355c:	ldr	r3, [fp, #12]
   23560:	ldrb	r3, [r3, #88]	; 0x58
   23564:	lsr	r3, r3, #4
   23568:	and	r3, r3, #1
   2356c:	uxtb	r3, r3
   23570:	mov	r2, r3
   23574:	ldr	r3, [fp, #-16]
   23578:	strb	r2, [r3, #78]	; 0x4e
   2357c:	ldr	r3, [fp, #-16]
   23580:	ldrb	r3, [r3, #75]	; 0x4b
   23584:	cmp	r3, #0
   23588:	beq	23598 <__assert_fail@plt+0x12328>
   2358c:	ldr	r3, [fp, #-16]
   23590:	ldr	r3, [r3, #4]
   23594:	b	2359c <__assert_fail@plt+0x1232c>
   23598:	ldr	r3, [fp, #-20]	; 0xffffffec
   2359c:	ldr	r2, [fp, #-16]
   235a0:	str	r3, [r2, #4]
   235a4:	ldr	r3, [fp, #-16]
   235a8:	ldrb	r3, [r3, #75]	; 0x4b
   235ac:	cmp	r3, #0
   235b0:	bne	235cc <__assert_fail@plt+0x1235c>
   235b4:	ldr	r3, [fp, #12]
   235b8:	ldr	r3, [r3, #92]	; 0x5c
   235bc:	cmp	r3, #1
   235c0:	bgt	235cc <__assert_fail@plt+0x1235c>
   235c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   235c8:	b	235d0 <__assert_fail@plt+0x12360>
   235cc:	mov	r3, #0
   235d0:	ldr	r2, [fp, #-16]
   235d4:	str	r3, [r2, #28]
   235d8:	ldr	r3, [fp, #-16]
   235dc:	ldr	r2, [r3, #28]
   235e0:	ldr	r3, [fp, #-16]
   235e4:	str	r2, [r3, #32]
   235e8:	mov	r3, #0
   235ec:	mov	r0, r3
   235f0:	sub	sp, fp, #4
   235f4:	pop	{fp, pc}
   235f8:	push	{fp, lr}
   235fc:	add	fp, sp, #4
   23600:	sub	sp, sp, #32
   23604:	str	r0, [fp, #-16]
   23608:	str	r1, [fp, #-20]	; 0xffffffec
   2360c:	str	r2, [fp, #-24]	; 0xffffffe8
   23610:	str	r3, [fp, #-28]	; 0xffffffe4
   23614:	mov	r2, #84	; 0x54
   23618:	mov	r1, #0
   2361c:	ldr	r0, [fp, #-16]
   23620:	bl	111bc <memset@plt>
   23624:	ldr	r3, [fp, #8]
   23628:	str	r3, [sp, #4]
   2362c:	ldrb	r3, [fp, #4]
   23630:	str	r3, [sp]
   23634:	ldr	r3, [fp, #-28]	; 0xffffffe4
   23638:	ldr	r2, [fp, #-16]
   2363c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   23640:	ldr	r0, [fp, #-20]	; 0xffffffec
   23644:	bl	239a8 <__assert_fail@plt+0x12738>
   23648:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2364c:	cmp	r3, #0
   23650:	ble	23690 <__assert_fail@plt+0x12420>
   23654:	ldr	r3, [fp, #-24]	; 0xffffffe8
   23658:	add	r3, r3, #1
   2365c:	mov	r1, r3
   23660:	ldr	r0, [fp, #-16]
   23664:	bl	237fc <__assert_fail@plt+0x1258c>
   23668:	str	r0, [fp, #-8]
   2366c:	ldr	r3, [fp, #-8]
   23670:	cmp	r3, #0
   23674:	movne	r3, #1
   23678:	moveq	r3, #0
   2367c:	uxtb	r3, r3
   23680:	cmp	r3, #0
   23684:	beq	23690 <__assert_fail@plt+0x12420>
   23688:	ldr	r3, [fp, #-8]
   2368c:	b	237f0 <__assert_fail@plt+0x12580>
   23690:	ldr	r3, [fp, #-16]
   23694:	ldrb	r3, [r3, #75]	; 0x4b
   23698:	cmp	r3, #0
   2369c:	beq	236ac <__assert_fail@plt+0x1243c>
   236a0:	ldr	r3, [fp, #-16]
   236a4:	ldr	r3, [r3, #4]
   236a8:	b	236b0 <__assert_fail@plt+0x12440>
   236ac:	ldr	r3, [fp, #-20]	; 0xffffffec
   236b0:	ldr	r2, [fp, #-16]
   236b4:	str	r3, [r2, #4]
   236b8:	ldrb	r3, [fp, #4]
   236bc:	cmp	r3, #0
   236c0:	beq	23788 <__assert_fail@plt+0x12518>
   236c4:	ldr	r3, [fp, #8]
   236c8:	ldr	r3, [r3, #92]	; 0x5c
   236cc:	cmp	r3, #1
   236d0:	ble	2377c <__assert_fail@plt+0x1250c>
   236d4:	ldr	r0, [fp, #-16]
   236d8:	bl	23e28 <__assert_fail@plt+0x12bb8>
   236dc:	str	r0, [fp, #-8]
   236e0:	ldr	r3, [fp, #-8]
   236e4:	cmp	r3, #0
   236e8:	movne	r3, #1
   236ec:	moveq	r3, #0
   236f0:	uxtb	r3, r3
   236f4:	cmp	r3, #0
   236f8:	beq	23704 <__assert_fail@plt+0x12494>
   236fc:	ldr	r3, [fp, #-8]
   23700:	b	237f0 <__assert_fail@plt+0x12580>
   23704:	ldr	r3, [fp, #-16]
   23708:	ldr	r2, [r3, #32]
   2370c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   23710:	cmp	r2, r3
   23714:	bge	237e0 <__assert_fail@plt+0x12570>
   23718:	ldr	r3, [fp, #-16]
   2371c:	ldr	r2, [r3, #36]	; 0x24
   23720:	ldr	r3, [fp, #-16]
   23724:	ldr	r1, [r3, #28]
   23728:	ldr	r3, [fp, #8]
   2372c:	ldr	r3, [r3, #92]	; 0x5c
   23730:	add	r3, r1, r3
   23734:	cmp	r2, r3
   23738:	bgt	237e8 <__assert_fail@plt+0x12578>
   2373c:	ldr	r3, [fp, #-16]
   23740:	ldr	r3, [r3, #36]	; 0x24
   23744:	lsl	r3, r3, #1
   23748:	mov	r1, r3
   2374c:	ldr	r0, [fp, #-16]
   23750:	bl	237fc <__assert_fail@plt+0x1258c>
   23754:	str	r0, [fp, #-8]
   23758:	ldr	r3, [fp, #-8]
   2375c:	cmp	r3, #0
   23760:	movne	r3, #1
   23764:	moveq	r3, #0
   23768:	uxtb	r3, r3
   2376c:	cmp	r3, #0
   23770:	beq	236d4 <__assert_fail@plt+0x12464>
   23774:	ldr	r3, [fp, #-8]
   23778:	b	237f0 <__assert_fail@plt+0x12580>
   2377c:	ldr	r0, [fp, #-16]
   23780:	bl	24af4 <__assert_fail@plt+0x13884>
   23784:	b	237ec <__assert_fail@plt+0x1257c>
   23788:	ldr	r3, [fp, #8]
   2378c:	ldr	r3, [r3, #92]	; 0x5c
   23790:	cmp	r3, #1
   23794:	ble	237a4 <__assert_fail@plt+0x12534>
   23798:	ldr	r0, [fp, #-16]
   2379c:	bl	23ab0 <__assert_fail@plt+0x12840>
   237a0:	b	237ec <__assert_fail@plt+0x1257c>
   237a4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   237a8:	cmp	r3, #0
   237ac:	beq	237bc <__assert_fail@plt+0x1254c>
   237b0:	ldr	r0, [fp, #-16]
   237b4:	bl	24bf4 <__assert_fail@plt+0x13984>
   237b8:	b	237ec <__assert_fail@plt+0x1257c>
   237bc:	ldr	r3, [fp, #-16]
   237c0:	ldr	r2, [r3, #36]	; 0x24
   237c4:	ldr	r3, [fp, #-16]
   237c8:	str	r2, [r3, #28]
   237cc:	ldr	r3, [fp, #-16]
   237d0:	ldr	r2, [r3, #36]	; 0x24
   237d4:	ldr	r3, [fp, #-16]
   237d8:	str	r2, [r3, #32]
   237dc:	b	237ec <__assert_fail@plt+0x1257c>
   237e0:	nop			; (mov r0, r0)
   237e4:	b	237ec <__assert_fail@plt+0x1257c>
   237e8:	nop			; (mov r0, r0)
   237ec:	mov	r3, #0
   237f0:	mov	r0, r3
   237f4:	sub	sp, fp, #4
   237f8:	pop	{fp, pc}
   237fc:	push	{fp, lr}
   23800:	add	fp, sp, #4
   23804:	sub	sp, sp, #24
   23808:	str	r0, [fp, #-24]	; 0xffffffe8
   2380c:	str	r1, [fp, #-28]	; 0xffffffe4
   23810:	ldr	r3, [fp, #-24]	; 0xffffffe8
   23814:	ldr	r3, [r3, #80]	; 0x50
   23818:	cmp	r3, #1
   2381c:	ble	23930 <__assert_fail@plt+0x126c0>
   23820:	mov	r3, #4
   23824:	str	r3, [fp, #-8]
   23828:	ldr	r1, [fp, #-8]
   2382c:	mvn	r0, #0
   23830:	bl	3f560 <__assert_fail@plt+0x2e2f0>
   23834:	mov	r3, r0
   23838:	cmp	r3, #0
   2383c:	blt	23858 <__assert_fail@plt+0x125e8>
   23840:	ldr	r1, [fp, #-8]
   23844:	mvn	r0, #0
   23848:	bl	3f560 <__assert_fail@plt+0x2e2f0>
   2384c:	mov	r3, r0
   23850:	mov	r2, r3
   23854:	b	2385c <__assert_fail@plt+0x125ec>
   23858:	mvn	r2, #-2147483648	; 0x80000000
   2385c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   23860:	cmp	r2, r3
   23864:	movcc	r3, #1
   23868:	movcs	r3, #0
   2386c:	uxtb	r3, r3
   23870:	cmp	r3, #0
   23874:	beq	23880 <__assert_fail@plt+0x12610>
   23878:	mov	r3, #12
   2387c:	b	2399c <__assert_fail@plt+0x1272c>
   23880:	ldr	r3, [fp, #-24]	; 0xffffffe8
   23884:	ldr	r2, [r3, #8]
   23888:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2388c:	lsl	r3, r3, #2
   23890:	mov	r1, r3
   23894:	mov	r0, r2
   23898:	bl	3e040 <__assert_fail@plt+0x2cdd0>
   2389c:	str	r0, [fp, #-12]
   238a0:	ldr	r3, [fp, #-12]
   238a4:	cmp	r3, #0
   238a8:	moveq	r3, #1
   238ac:	movne	r3, #0
   238b0:	uxtb	r3, r3
   238b4:	cmp	r3, #0
   238b8:	beq	238c4 <__assert_fail@plt+0x12654>
   238bc:	mov	r3, #12
   238c0:	b	2399c <__assert_fail@plt+0x1272c>
   238c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   238c8:	ldr	r2, [fp, #-12]
   238cc:	str	r2, [r3, #8]
   238d0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   238d4:	ldr	r3, [r3, #12]
   238d8:	cmp	r3, #0
   238dc:	beq	23930 <__assert_fail@plt+0x126c0>
   238e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   238e4:	ldr	r2, [r3, #12]
   238e8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   238ec:	lsl	r3, r3, #2
   238f0:	mov	r1, r3
   238f4:	mov	r0, r2
   238f8:	bl	3e040 <__assert_fail@plt+0x2cdd0>
   238fc:	str	r0, [fp, #-16]
   23900:	ldr	r3, [fp, #-16]
   23904:	cmp	r3, #0
   23908:	moveq	r3, #1
   2390c:	movne	r3, #0
   23910:	uxtb	r3, r3
   23914:	cmp	r3, #0
   23918:	beq	23924 <__assert_fail@plt+0x126b4>
   2391c:	mov	r3, #12
   23920:	b	2399c <__assert_fail@plt+0x1272c>
   23924:	ldr	r3, [fp, #-24]	; 0xffffffe8
   23928:	ldr	r2, [fp, #-16]
   2392c:	str	r2, [r3, #12]
   23930:	ldr	r3, [fp, #-24]	; 0xffffffe8
   23934:	ldrb	r3, [r3, #75]	; 0x4b
   23938:	cmp	r3, #0
   2393c:	beq	2398c <__assert_fail@plt+0x1271c>
   23940:	ldr	r3, [fp, #-24]	; 0xffffffe8
   23944:	ldr	r3, [r3, #4]
   23948:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2394c:	mov	r1, r2
   23950:	mov	r0, r3
   23954:	bl	3e040 <__assert_fail@plt+0x2cdd0>
   23958:	str	r0, [fp, #-20]	; 0xffffffec
   2395c:	ldr	r3, [fp, #-20]	; 0xffffffec
   23960:	cmp	r3, #0
   23964:	moveq	r3, #1
   23968:	movne	r3, #0
   2396c:	uxtb	r3, r3
   23970:	cmp	r3, #0
   23974:	beq	23980 <__assert_fail@plt+0x12710>
   23978:	mov	r3, #12
   2397c:	b	2399c <__assert_fail@plt+0x1272c>
   23980:	ldr	r3, [fp, #-24]	; 0xffffffe8
   23984:	ldr	r2, [fp, #-20]	; 0xffffffec
   23988:	str	r2, [r3, #4]
   2398c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   23990:	ldr	r2, [fp, #-28]	; 0xffffffe4
   23994:	str	r2, [r3, #36]	; 0x24
   23998:	mov	r3, #0
   2399c:	mov	r0, r3
   239a0:	sub	sp, fp, #4
   239a4:	pop	{fp, pc}
   239a8:	push	{fp}		; (str fp, [sp, #-4]!)
   239ac:	add	fp, sp, #0
   239b0:	sub	sp, sp, #20
   239b4:	str	r0, [fp, #-8]
   239b8:	str	r1, [fp, #-12]
   239bc:	str	r2, [fp, #-16]
   239c0:	str	r3, [fp, #-20]	; 0xffffffec
   239c4:	ldr	r3, [fp, #-16]
   239c8:	ldr	r2, [fp, #-8]
   239cc:	str	r2, [r3]
   239d0:	ldr	r3, [fp, #-16]
   239d4:	ldr	r2, [fp, #-12]
   239d8:	str	r2, [r3, #48]	; 0x30
   239dc:	ldr	r3, [fp, #-16]
   239e0:	ldr	r2, [fp, #-12]
   239e4:	str	r2, [r3, #44]	; 0x2c
   239e8:	ldr	r3, [fp, #-16]
   239ec:	ldr	r2, [fp, #-20]	; 0xffffffec
   239f0:	str	r2, [r3, #64]	; 0x40
   239f4:	ldrb	r2, [fp, #4]
   239f8:	ldr	r3, [fp, #-16]
   239fc:	strb	r2, [r3, #72]	; 0x48
   23a00:	ldr	r3, [fp, #-20]	; 0xffffffec
   23a04:	cmp	r3, #0
   23a08:	bne	23a18 <__assert_fail@plt+0x127a8>
   23a0c:	ldrb	r3, [fp, #4]
   23a10:	cmp	r3, #0
   23a14:	beq	23a20 <__assert_fail@plt+0x127b0>
   23a18:	mov	r3, #1
   23a1c:	b	23a24 <__assert_fail@plt+0x127b4>
   23a20:	mov	r3, #0
   23a24:	uxtb	r2, r3
   23a28:	ldr	r3, [fp, #-16]
   23a2c:	strb	r2, [r3, #75]	; 0x4b
   23a30:	ldr	r3, [fp, #8]
   23a34:	ldr	r2, [r3, #92]	; 0x5c
   23a38:	ldr	r3, [fp, #-16]
   23a3c:	str	r2, [r3, #80]	; 0x50
   23a40:	ldr	r3, [fp, #8]
   23a44:	ldrb	r3, [r3, #88]	; 0x58
   23a48:	lsr	r3, r3, #2
   23a4c:	and	r3, r3, #1
   23a50:	uxtb	r3, r3
   23a54:	mov	r2, r3
   23a58:	ldr	r3, [fp, #-16]
   23a5c:	strb	r2, [r3, #73]	; 0x49
   23a60:	ldr	r3, [fp, #8]
   23a64:	ldrb	r3, [r3, #88]	; 0x58
   23a68:	lsr	r3, r3, #3
   23a6c:	and	r3, r3, #1
   23a70:	uxtb	r3, r3
   23a74:	mov	r2, r3
   23a78:	ldr	r3, [fp, #-16]
   23a7c:	strb	r2, [r3, #74]	; 0x4a
   23a80:	ldr	r3, [fp, #-16]
   23a84:	ldr	r2, [r3, #48]	; 0x30
   23a88:	ldr	r3, [fp, #-16]
   23a8c:	str	r2, [r3, #56]	; 0x38
   23a90:	ldr	r3, [fp, #-16]
   23a94:	ldr	r2, [r3, #56]	; 0x38
   23a98:	ldr	r3, [fp, #-16]
   23a9c:	str	r2, [r3, #52]	; 0x34
   23aa0:	nop			; (mov r0, r0)
   23aa4:	add	sp, fp, #0
   23aa8:	pop	{fp}		; (ldr fp, [sp], #4)
   23aac:	bx	lr
   23ab0:	push	{fp, lr}
   23ab4:	add	fp, sp, #4
   23ab8:	sub	sp, sp, #112	; 0x70
   23abc:	str	r0, [fp, #-112]	; 0xffffff90
   23ac0:	ldr	r3, [fp, #-112]	; 0xffffff90
   23ac4:	ldr	r2, [r3, #36]	; 0x24
   23ac8:	ldr	r3, [fp, #-112]	; 0xffffff90
   23acc:	ldr	r3, [r3, #48]	; 0x30
   23ad0:	cmp	r2, r3
   23ad4:	movlt	r3, r2
   23ad8:	movge	r3, r3
   23adc:	str	r3, [fp, #-24]	; 0xffffffe8
   23ae0:	ldr	r3, [fp, #-112]	; 0xffffff90
   23ae4:	ldr	r3, [r3, #28]
   23ae8:	str	r3, [fp, #-8]
   23aec:	b	23df4 <__assert_fail@plt+0x12b84>
   23af0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   23af4:	ldr	r3, [fp, #-8]
   23af8:	sub	r3, r2, r3
   23afc:	str	r3, [fp, #-28]	; 0xffffffe4
   23b00:	ldr	r2, [fp, #-112]	; 0xffffff90
   23b04:	sub	r3, fp, #104	; 0x68
   23b08:	add	r2, r2, #16
   23b0c:	ldm	r2, {r0, r1}
   23b10:	stm	r3, {r0, r1}
   23b14:	ldr	r3, [fp, #-112]	; 0xffffff90
   23b18:	ldr	r3, [r3, #64]	; 0x40
   23b1c:	cmp	r3, #0
   23b20:	movne	r3, #1
   23b24:	moveq	r3, #0
   23b28:	uxtb	r3, r3
   23b2c:	cmp	r3, #0
   23b30:	beq	23bf0 <__assert_fail@plt+0x12980>
   23b34:	mov	r3, #0
   23b38:	str	r3, [fp, #-20]	; 0xffffffec
   23b3c:	b	23bc0 <__assert_fail@plt+0x12950>
   23b40:	ldr	r3, [fp, #-112]	; 0xffffff90
   23b44:	ldr	r3, [r3]
   23b48:	ldr	r2, [fp, #-112]	; 0xffffff90
   23b4c:	ldr	r1, [r2, #24]
   23b50:	ldr	r2, [fp, #-8]
   23b54:	add	r1, r1, r2
   23b58:	ldr	r2, [fp, #-20]	; 0xffffffec
   23b5c:	add	r2, r1, r2
   23b60:	add	r3, r3, r2
   23b64:	ldrb	r3, [r3]
   23b68:	str	r3, [fp, #-32]	; 0xffffffe0
   23b6c:	ldr	r3, [fp, #-112]	; 0xffffff90
   23b70:	ldr	r3, [r3, #4]
   23b74:	ldr	r1, [fp, #-8]
   23b78:	ldr	r2, [fp, #-20]	; 0xffffffec
   23b7c:	add	r2, r1, r2
   23b80:	add	r3, r3, r2
   23b84:	ldr	r2, [fp, #-112]	; 0xffffff90
   23b88:	ldr	r1, [r2, #64]	; 0x40
   23b8c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   23b90:	add	r2, r1, r2
   23b94:	ldrb	r2, [r2]
   23b98:	strb	r2, [r3]
   23b9c:	ldrb	r1, [r3]
   23ba0:	sub	r2, fp, #96	; 0x60
   23ba4:	ldr	r3, [fp, #-20]	; 0xffffffec
   23ba8:	add	r3, r2, r3
   23bac:	mov	r2, r1
   23bb0:	strb	r2, [r3]
   23bb4:	ldr	r3, [fp, #-20]	; 0xffffffec
   23bb8:	add	r3, r3, #1
   23bbc:	str	r3, [fp, #-20]	; 0xffffffec
   23bc0:	ldr	r3, [fp, #-112]	; 0xffffff90
   23bc4:	ldr	r2, [r3, #80]	; 0x50
   23bc8:	ldr	r3, [fp, #-20]	; 0xffffffec
   23bcc:	cmp	r2, r3
   23bd0:	ble	23be4 <__assert_fail@plt+0x12974>
   23bd4:	ldr	r2, [fp, #-20]	; 0xffffffec
   23bd8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   23bdc:	cmp	r2, r3
   23be0:	blt	23b40 <__assert_fail@plt+0x128d0>
   23be4:	sub	r3, fp, #96	; 0x60
   23be8:	str	r3, [fp, #-16]
   23bec:	b	23c14 <__assert_fail@plt+0x129a4>
   23bf0:	ldr	r3, [fp, #-112]	; 0xffffff90
   23bf4:	ldr	r2, [r3]
   23bf8:	ldr	r3, [fp, #-112]	; 0xffffff90
   23bfc:	ldr	r3, [r3, #24]
   23c00:	mov	r1, r3
   23c04:	ldr	r3, [fp, #-8]
   23c08:	add	r3, r1, r3
   23c0c:	add	r3, r2, r3
   23c10:	str	r3, [fp, #-16]
   23c14:	ldr	r2, [fp, #-28]	; 0xffffffe4
   23c18:	ldr	r3, [fp, #-112]	; 0xffffff90
   23c1c:	add	r3, r3, #16
   23c20:	sub	r0, fp, #108	; 0x6c
   23c24:	ldr	r1, [fp, #-16]
   23c28:	bl	3ed0c <__assert_fail@plt+0x2da9c>
   23c2c:	str	r0, [fp, #-12]
   23c30:	ldr	r3, [fp, #-12]
   23c34:	cmn	r3, #1
   23c38:	moveq	r3, #1
   23c3c:	movne	r3, #0
   23c40:	uxtb	r3, r3
   23c44:	cmp	r3, #0
   23c48:	bne	23c68 <__assert_fail@plt+0x129f8>
   23c4c:	ldr	r3, [fp, #-12]
   23c50:	cmp	r3, #0
   23c54:	moveq	r3, #1
   23c58:	movne	r3, #0
   23c5c:	uxtb	r3, r3
   23c60:	cmp	r3, #0
   23c64:	beq	23c70 <__assert_fail@plt+0x12a00>
   23c68:	mov	r3, #1
   23c6c:	b	23c74 <__assert_fail@plt+0x12a04>
   23c70:	mov	r3, #0
   23c74:	cmp	r3, #0
   23c78:	bne	23cd4 <__assert_fail@plt+0x12a64>
   23c7c:	ldr	r3, [fp, #-12]
   23c80:	cmn	r3, #2
   23c84:	moveq	r3, #1
   23c88:	movne	r3, #0
   23c8c:	uxtb	r3, r3
   23c90:	cmp	r3, #0
   23c94:	beq	23cc8 <__assert_fail@plt+0x12a58>
   23c98:	ldr	r3, [fp, #-112]	; 0xffffff90
   23c9c:	ldr	r2, [r3, #36]	; 0x24
   23ca0:	ldr	r3, [fp, #-112]	; 0xffffff90
   23ca4:	ldr	r3, [r3, #48]	; 0x30
   23ca8:	cmp	r2, r3
   23cac:	movge	r3, #1
   23cb0:	movlt	r3, #0
   23cb4:	uxtb	r3, r3
   23cb8:	cmp	r3, #0
   23cbc:	beq	23cc8 <__assert_fail@plt+0x12a58>
   23cc0:	mov	r3, #1
   23cc4:	b	23ccc <__assert_fail@plt+0x12a5c>
   23cc8:	mov	r3, #0
   23ccc:	cmp	r3, #0
   23cd0:	beq	23d50 <__assert_fail@plt+0x12ae0>
   23cd4:	mov	r3, #1
   23cd8:	str	r3, [fp, #-12]
   23cdc:	ldr	r3, [fp, #-112]	; 0xffffff90
   23ce0:	ldr	r3, [r3]
   23ce4:	ldr	r2, [fp, #-112]	; 0xffffff90
   23ce8:	ldr	r1, [r2, #24]
   23cec:	ldr	r2, [fp, #-8]
   23cf0:	add	r2, r1, r2
   23cf4:	add	r3, r3, r2
   23cf8:	ldrb	r3, [r3]
   23cfc:	str	r3, [fp, #-108]	; 0xffffff94
   23d00:	ldr	r3, [fp, #-112]	; 0xffffff90
   23d04:	ldr	r3, [r3, #64]	; 0x40
   23d08:	cmp	r3, #0
   23d0c:	movne	r3, #1
   23d10:	moveq	r3, #0
   23d14:	uxtb	r3, r3
   23d18:	cmp	r3, #0
   23d1c:	beq	23d38 <__assert_fail@plt+0x12ac8>
   23d20:	ldr	r3, [fp, #-112]	; 0xffffff90
   23d24:	ldr	r2, [r3, #64]	; 0x40
   23d28:	ldr	r3, [fp, #-108]	; 0xffffff94
   23d2c:	add	r3, r2, r3
   23d30:	ldrb	r3, [r3]
   23d34:	str	r3, [fp, #-108]	; 0xffffff94
   23d38:	ldr	r3, [fp, #-112]	; 0xffffff90
   23d3c:	add	r3, r3, #16
   23d40:	sub	r2, fp, #104	; 0x68
   23d44:	ldm	r2, {r0, r1}
   23d48:	stm	r3, {r0, r1}
   23d4c:	b	23d84 <__assert_fail@plt+0x12b14>
   23d50:	ldr	r3, [fp, #-12]
   23d54:	cmn	r3, #2
   23d58:	moveq	r3, #1
   23d5c:	movne	r3, #0
   23d60:	uxtb	r3, r3
   23d64:	cmp	r3, #0
   23d68:	beq	23d84 <__assert_fail@plt+0x12b14>
   23d6c:	ldr	r3, [fp, #-112]	; 0xffffff90
   23d70:	add	r3, r3, #16
   23d74:	sub	r2, fp, #104	; 0x68
   23d78:	ldm	r2, {r0, r1}
   23d7c:	stm	r3, {r0, r1}
   23d80:	b	23e04 <__assert_fail@plt+0x12b94>
   23d84:	ldr	r3, [fp, #-112]	; 0xffffff90
   23d88:	ldr	r2, [r3, #8]
   23d8c:	ldr	r3, [fp, #-8]
   23d90:	add	r1, r3, #1
   23d94:	str	r1, [fp, #-8]
   23d98:	lsl	r3, r3, #2
   23d9c:	add	r3, r2, r3
   23da0:	ldr	r2, [fp, #-108]	; 0xffffff94
   23da4:	str	r2, [r3]
   23da8:	ldr	r2, [fp, #-8]
   23dac:	ldr	r3, [fp, #-12]
   23db0:	add	r3, r2, r3
   23db4:	sub	r3, r3, #1
   23db8:	str	r3, [fp, #-28]	; 0xffffffe4
   23dbc:	b	23de4 <__assert_fail@plt+0x12b74>
   23dc0:	ldr	r3, [fp, #-112]	; 0xffffff90
   23dc4:	ldr	r2, [r3, #8]
   23dc8:	ldr	r3, [fp, #-8]
   23dcc:	add	r1, r3, #1
   23dd0:	str	r1, [fp, #-8]
   23dd4:	lsl	r3, r3, #2
   23dd8:	add	r3, r2, r3
   23ddc:	mvn	r2, #0
   23de0:	str	r2, [r3]
   23de4:	ldr	r2, [fp, #-8]
   23de8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   23dec:	cmp	r2, r3
   23df0:	blt	23dc0 <__assert_fail@plt+0x12b50>
   23df4:	ldr	r2, [fp, #-8]
   23df8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   23dfc:	cmp	r2, r3
   23e00:	blt	23af0 <__assert_fail@plt+0x12880>
   23e04:	ldr	r3, [fp, #-112]	; 0xffffff90
   23e08:	ldr	r2, [fp, #-8]
   23e0c:	str	r2, [r3, #28]
   23e10:	ldr	r3, [fp, #-112]	; 0xffffff90
   23e14:	ldr	r2, [fp, #-8]
   23e18:	str	r2, [r3, #32]
   23e1c:	nop			; (mov r0, r0)
   23e20:	sub	sp, fp, #4
   23e24:	pop	{fp, pc}
   23e28:	push	{fp, lr}
   23e2c:	add	fp, sp, #4
   23e30:	sub	sp, sp, #160	; 0xa0
   23e34:	str	r0, [fp, #-160]	; 0xffffff60
   23e38:	ldr	r3, [fp, #-160]	; 0xffffff60
   23e3c:	ldr	r3, [r3, #28]
   23e40:	str	r3, [fp, #-12]
   23e44:	ldr	r3, [fp, #-160]	; 0xffffff60
   23e48:	ldr	r2, [r3, #36]	; 0x24
   23e4c:	ldr	r3, [fp, #-160]	; 0xffffff60
   23e50:	ldr	r3, [r3, #48]	; 0x30
   23e54:	cmp	r2, r3
   23e58:	movlt	r3, r2
   23e5c:	movge	r3, r3
   23e60:	str	r3, [fp, #-16]
   23e64:	ldr	r3, [fp, #-160]	; 0xffffff60
   23e68:	ldrb	r3, [r3, #74]	; 0x4a
   23e6c:	cmp	r3, #0
   23e70:	bne	24214 <__assert_fail@plt+0x12fa4>
   23e74:	ldr	r3, [fp, #-160]	; 0xffffff60
   23e78:	ldr	r3, [r3, #64]	; 0x40
   23e7c:	cmp	r3, #0
   23e80:	bne	24214 <__assert_fail@plt+0x12fa4>
   23e84:	ldr	r3, [fp, #-160]	; 0xffffff60
   23e88:	ldrb	r3, [r3, #76]	; 0x4c
   23e8c:	cmp	r3, #0
   23e90:	bne	24214 <__assert_fail@plt+0x12fa4>
   23e94:	b	241e4 <__assert_fail@plt+0x12f74>
   23e98:	ldr	r3, [fp, #-160]	; 0xffffff60
   23e9c:	ldr	r3, [r3]
   23ea0:	ldr	r2, [fp, #-160]	; 0xffffff60
   23ea4:	ldr	r1, [r2, #24]
   23ea8:	ldr	r2, [fp, #-12]
   23eac:	add	r2, r1, r2
   23eb0:	add	r3, r3, r2
   23eb4:	ldrb	r3, [r3]
   23eb8:	strb	r3, [fp, #-37]	; 0xffffffdb
   23ebc:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   23ec0:	bic	r3, r3, #127	; 0x7f
   23ec4:	cmp	r3, #0
   23ec8:	bne	23f50 <__assert_fail@plt+0x12ce0>
   23ecc:	ldr	r3, [fp, #-160]	; 0xffffff60
   23ed0:	add	r3, r3, #16
   23ed4:	mov	r0, r3
   23ed8:	bl	11048 <mbsinit@plt>
   23edc:	mov	r3, r0
   23ee0:	cmp	r3, #0
   23ee4:	beq	23f50 <__assert_fail@plt+0x12ce0>
   23ee8:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   23eec:	mov	r0, r3
   23ef0:	bl	11240 <towupper@plt>
   23ef4:	str	r0, [fp, #-44]	; 0xffffffd4
   23ef8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   23efc:	bic	r3, r3, #127	; 0x7f
   23f00:	cmp	r3, #0
   23f04:	bne	23f50 <__assert_fail@plt+0x12ce0>
   23f08:	ldr	r3, [fp, #-160]	; 0xffffff60
   23f0c:	ldr	r2, [r3, #4]
   23f10:	ldr	r3, [fp, #-12]
   23f14:	add	r3, r2, r3
   23f18:	ldr	r2, [fp, #-44]	; 0xffffffd4
   23f1c:	uxtb	r2, r2
   23f20:	strb	r2, [r3]
   23f24:	ldr	r3, [fp, #-160]	; 0xffffff60
   23f28:	ldr	r2, [r3, #8]
   23f2c:	ldr	r3, [fp, #-12]
   23f30:	lsl	r3, r3, #2
   23f34:	add	r3, r2, r3
   23f38:	ldr	r2, [fp, #-44]	; 0xffffffd4
   23f3c:	str	r2, [r3]
   23f40:	ldr	r3, [fp, #-12]
   23f44:	add	r3, r3, #1
   23f48:	str	r3, [fp, #-12]
   23f4c:	b	241e4 <__assert_fail@plt+0x12f74>
   23f50:	ldr	r2, [fp, #-16]
   23f54:	ldr	r3, [fp, #-12]
   23f58:	sub	r3, r2, r3
   23f5c:	str	r3, [fp, #-48]	; 0xffffffd0
   23f60:	ldr	r2, [fp, #-160]	; 0xffffff60
   23f64:	sub	r3, fp, #80	; 0x50
   23f68:	add	r2, r2, #16
   23f6c:	ldm	r2, {r0, r1}
   23f70:	stm	r3, {r0, r1}
   23f74:	ldr	r3, [fp, #-160]	; 0xffffff60
   23f78:	ldr	r2, [r3]
   23f7c:	ldr	r3, [fp, #-160]	; 0xffffff60
   23f80:	ldr	r3, [r3, #24]
   23f84:	mov	r1, r3
   23f88:	ldr	r3, [fp, #-12]
   23f8c:	add	r3, r1, r3
   23f90:	add	r1, r2, r3
   23f94:	ldr	r2, [fp, #-48]	; 0xffffffd0
   23f98:	ldr	r3, [fp, #-160]	; 0xffffff60
   23f9c:	add	r3, r3, #16
   23fa0:	sub	r0, fp, #148	; 0x94
   23fa4:	bl	3ed0c <__assert_fail@plt+0x2da9c>
   23fa8:	str	r0, [fp, #-52]	; 0xffffffcc
   23fac:	ldr	r3, [fp, #-52]	; 0xffffffcc
   23fb0:	cmp	r3, #0
   23fb4:	movne	r3, #1
   23fb8:	moveq	r3, #0
   23fbc:	uxtb	r3, r3
   23fc0:	cmp	r3, #0
   23fc4:	beq	24120 <__assert_fail@plt+0x12eb0>
   23fc8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   23fcc:	cmn	r3, #3
   23fd0:	movls	r3, #1
   23fd4:	movhi	r3, #0
   23fd8:	uxtb	r3, r3
   23fdc:	cmp	r3, #0
   23fe0:	beq	24120 <__assert_fail@plt+0x12eb0>
   23fe4:	ldr	r3, [fp, #-148]	; 0xffffff6c
   23fe8:	mov	r0, r3
   23fec:	bl	11240 <towupper@plt>
   23ff0:	str	r0, [fp, #-56]	; 0xffffffc8
   23ff4:	ldr	r3, [fp, #-148]	; 0xffffff6c
   23ff8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   23ffc:	cmp	r2, r3
   24000:	beq	24070 <__assert_fail@plt+0x12e00>
   24004:	sub	r2, fp, #80	; 0x50
   24008:	sub	r3, fp, #144	; 0x90
   2400c:	ldr	r1, [fp, #-56]	; 0xffffffc8
   24010:	mov	r0, r3
   24014:	bl	10f88 <wcrtomb@plt>
   24018:	str	r0, [fp, #-60]	; 0xffffffc4
   2401c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   24020:	ldr	r3, [fp, #-60]	; 0xffffffc4
   24024:	cmp	r2, r3
   24028:	moveq	r3, #1
   2402c:	movne	r3, #0
   24030:	uxtb	r3, r3
   24034:	cmp	r3, #0
   24038:	beq	24060 <__assert_fail@plt+0x12df0>
   2403c:	ldr	r3, [fp, #-160]	; 0xffffff60
   24040:	ldr	r2, [r3, #4]
   24044:	ldr	r3, [fp, #-12]
   24048:	add	r3, r2, r3
   2404c:	sub	r1, fp, #144	; 0x90
   24050:	ldr	r2, [fp, #-52]	; 0xffffffcc
   24054:	mov	r0, r3
   24058:	bl	11018 <memcpy@plt>
   2405c:	b	240ac <__assert_fail@plt+0x12e3c>
   24060:	ldr	r3, [fp, #-12]
   24064:	str	r3, [fp, #-8]
   24068:	nop			; (mov r0, r0)
   2406c:	b	24224 <__assert_fail@plt+0x12fb4>
   24070:	ldr	r3, [fp, #-160]	; 0xffffff60
   24074:	ldr	r2, [r3, #4]
   24078:	ldr	r3, [fp, #-12]
   2407c:	add	r0, r2, r3
   24080:	ldr	r3, [fp, #-160]	; 0xffffff60
   24084:	ldr	r2, [r3]
   24088:	ldr	r3, [fp, #-160]	; 0xffffff60
   2408c:	ldr	r3, [r3, #24]
   24090:	mov	r1, r3
   24094:	ldr	r3, [fp, #-12]
   24098:	add	r3, r1, r3
   2409c:	add	r3, r2, r3
   240a0:	ldr	r2, [fp, #-52]	; 0xffffffcc
   240a4:	mov	r1, r3
   240a8:	bl	11018 <memcpy@plt>
   240ac:	ldr	r3, [fp, #-160]	; 0xffffff60
   240b0:	ldr	r2, [r3, #8]
   240b4:	ldr	r3, [fp, #-12]
   240b8:	add	r1, r3, #1
   240bc:	str	r1, [fp, #-12]
   240c0:	lsl	r3, r3, #2
   240c4:	add	r3, r2, r3
   240c8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   240cc:	str	r2, [r3]
   240d0:	ldr	r2, [fp, #-12]
   240d4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   240d8:	add	r3, r2, r3
   240dc:	sub	r3, r3, #1
   240e0:	str	r3, [fp, #-48]	; 0xffffffd0
   240e4:	b	2410c <__assert_fail@plt+0x12e9c>
   240e8:	ldr	r3, [fp, #-160]	; 0xffffff60
   240ec:	ldr	r2, [r3, #8]
   240f0:	ldr	r3, [fp, #-12]
   240f4:	add	r1, r3, #1
   240f8:	str	r1, [fp, #-12]
   240fc:	lsl	r3, r3, #2
   24100:	add	r3, r2, r3
   24104:	mvn	r2, #0
   24108:	str	r2, [r3]
   2410c:	ldr	r2, [fp, #-12]
   24110:	ldr	r3, [fp, #-48]	; 0xffffffd0
   24114:	cmp	r2, r3
   24118:	blt	240e8 <__assert_fail@plt+0x12e78>
   2411c:	b	241e4 <__assert_fail@plt+0x12f74>
   24120:	ldr	r3, [fp, #-52]	; 0xffffffcc
   24124:	cmn	r3, #1
   24128:	beq	2415c <__assert_fail@plt+0x12eec>
   2412c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   24130:	cmp	r3, #0
   24134:	beq	2415c <__assert_fail@plt+0x12eec>
   24138:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2413c:	cmn	r3, #2
   24140:	bne	241cc <__assert_fail@plt+0x12f5c>
   24144:	ldr	r3, [fp, #-160]	; 0xffffff60
   24148:	ldr	r2, [r3, #36]	; 0x24
   2414c:	ldr	r3, [fp, #-160]	; 0xffffff60
   24150:	ldr	r3, [r3, #48]	; 0x30
   24154:	cmp	r2, r3
   24158:	blt	241cc <__assert_fail@plt+0x12f5c>
   2415c:	ldr	r3, [fp, #-160]	; 0xffffff60
   24160:	ldr	r2, [r3, #4]
   24164:	ldr	r3, [fp, #-12]
   24168:	add	r3, r2, r3
   2416c:	ldrb	r2, [fp, #-37]	; 0xffffffdb
   24170:	strb	r2, [r3]
   24174:	ldr	r3, [fp, #-160]	; 0xffffff60
   24178:	ldr	r2, [r3, #8]
   2417c:	ldr	r3, [fp, #-12]
   24180:	add	r1, r3, #1
   24184:	str	r1, [fp, #-12]
   24188:	lsl	r3, r3, #2
   2418c:	add	r3, r2, r3
   24190:	ldrb	r2, [fp, #-37]	; 0xffffffdb
   24194:	str	r2, [r3]
   24198:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2419c:	cmn	r3, #1
   241a0:	moveq	r3, #1
   241a4:	movne	r3, #0
   241a8:	uxtb	r3, r3
   241ac:	cmp	r3, #0
   241b0:	beq	241e4 <__assert_fail@plt+0x12f74>
   241b4:	ldr	r3, [fp, #-160]	; 0xffffff60
   241b8:	add	r3, r3, #16
   241bc:	sub	r2, fp, #80	; 0x50
   241c0:	ldm	r2, {r0, r1}
   241c4:	stm	r3, {r0, r1}
   241c8:	b	241e4 <__assert_fail@plt+0x12f74>
   241cc:	ldr	r3, [fp, #-160]	; 0xffffff60
   241d0:	add	r3, r3, #16
   241d4:	sub	r2, fp, #80	; 0x50
   241d8:	ldm	r2, {r0, r1}
   241dc:	stm	r3, {r0, r1}
   241e0:	b	241f4 <__assert_fail@plt+0x12f84>
   241e4:	ldr	r2, [fp, #-12]
   241e8:	ldr	r3, [fp, #-16]
   241ec:	cmp	r2, r3
   241f0:	blt	23e98 <__assert_fail@plt+0x12c28>
   241f4:	ldr	r3, [fp, #-160]	; 0xffffff60
   241f8:	ldr	r2, [fp, #-12]
   241fc:	str	r2, [r3, #28]
   24200:	ldr	r3, [fp, #-160]	; 0xffffff60
   24204:	ldr	r2, [fp, #-12]
   24208:	str	r2, [r3, #32]
   2420c:	mov	r3, #0
   24210:	b	24954 <__assert_fail@plt+0x136e4>
   24214:	ldr	r3, [fp, #-160]	; 0xffffff60
   24218:	ldr	r3, [r3, #32]
   2421c:	str	r3, [fp, #-8]
   24220:	b	24928 <__assert_fail@plt+0x136b8>
   24224:	ldr	r2, [fp, #-16]
   24228:	ldr	r3, [fp, #-12]
   2422c:	sub	r3, r2, r3
   24230:	str	r3, [fp, #-48]	; 0xffffffd0
   24234:	ldr	r2, [fp, #-160]	; 0xffffff60
   24238:	sub	r3, fp, #80	; 0x50
   2423c:	add	r2, r2, #16
   24240:	ldm	r2, {r0, r1}
   24244:	stm	r3, {r0, r1}
   24248:	ldr	r3, [fp, #-160]	; 0xffffff60
   2424c:	ldr	r3, [r3, #64]	; 0x40
   24250:	cmp	r3, #0
   24254:	movne	r3, #1
   24258:	moveq	r3, #0
   2425c:	uxtb	r3, r3
   24260:	cmp	r3, #0
   24264:	beq	24304 <__assert_fail@plt+0x13094>
   24268:	mov	r3, #0
   2426c:	str	r3, [fp, #-24]	; 0xffffffe8
   24270:	b	242d4 <__assert_fail@plt+0x13064>
   24274:	ldr	r3, [fp, #-160]	; 0xffffff60
   24278:	ldr	r3, [r3]
   2427c:	ldr	r2, [fp, #-160]	; 0xffffff60
   24280:	ldr	r1, [r2, #24]
   24284:	ldr	r2, [fp, #-8]
   24288:	add	r1, r1, r2
   2428c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   24290:	add	r2, r1, r2
   24294:	add	r3, r3, r2
   24298:	ldrb	r3, [r3]
   2429c:	str	r3, [fp, #-64]	; 0xffffffc0
   242a0:	ldr	r3, [fp, #-160]	; 0xffffff60
   242a4:	ldr	r2, [r3, #64]	; 0x40
   242a8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   242ac:	add	r3, r2, r3
   242b0:	ldrb	r1, [r3]
   242b4:	sub	r2, fp, #144	; 0x90
   242b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   242bc:	add	r3, r2, r3
   242c0:	mov	r2, r1
   242c4:	strb	r2, [r3]
   242c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   242cc:	add	r3, r3, #1
   242d0:	str	r3, [fp, #-24]	; 0xffffffe8
   242d4:	ldr	r3, [fp, #-160]	; 0xffffff60
   242d8:	ldr	r2, [r3, #80]	; 0x50
   242dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   242e0:	cmp	r2, r3
   242e4:	ble	242f8 <__assert_fail@plt+0x13088>
   242e8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   242ec:	ldr	r3, [fp, #-48]	; 0xffffffd0
   242f0:	cmp	r2, r3
   242f4:	blt	24274 <__assert_fail@plt+0x13004>
   242f8:	sub	r3, fp, #144	; 0x90
   242fc:	str	r3, [fp, #-20]	; 0xffffffec
   24300:	b	24328 <__assert_fail@plt+0x130b8>
   24304:	ldr	r3, [fp, #-160]	; 0xffffff60
   24308:	ldr	r2, [r3]
   2430c:	ldr	r3, [fp, #-160]	; 0xffffff60
   24310:	ldr	r3, [r3, #24]
   24314:	mov	r1, r3
   24318:	ldr	r3, [fp, #-8]
   2431c:	add	r3, r1, r3
   24320:	add	r3, r2, r3
   24324:	str	r3, [fp, #-20]	; 0xffffffec
   24328:	ldr	r2, [fp, #-48]	; 0xffffffd0
   2432c:	ldr	r3, [fp, #-160]	; 0xffffff60
   24330:	add	r3, r3, #16
   24334:	sub	r0, fp, #152	; 0x98
   24338:	ldr	r1, [fp, #-20]	; 0xffffffec
   2433c:	bl	3ed0c <__assert_fail@plt+0x2da9c>
   24340:	str	r0, [fp, #-52]	; 0xffffffcc
   24344:	ldr	r3, [fp, #-52]	; 0xffffffcc
   24348:	cmp	r3, #0
   2434c:	movne	r3, #1
   24350:	moveq	r3, #0
   24354:	uxtb	r3, r3
   24358:	cmp	r3, #0
   2435c:	beq	247b4 <__assert_fail@plt+0x13544>
   24360:	ldr	r3, [fp, #-52]	; 0xffffffcc
   24364:	cmn	r3, #3
   24368:	movls	r3, #1
   2436c:	movhi	r3, #0
   24370:	uxtb	r3, r3
   24374:	cmp	r3, #0
   24378:	beq	247b4 <__assert_fail@plt+0x13544>
   2437c:	ldr	r3, [fp, #-152]	; 0xffffff68
   24380:	mov	r0, r3
   24384:	bl	11240 <towupper@plt>
   24388:	str	r0, [fp, #-68]	; 0xffffffbc
   2438c:	ldr	r3, [fp, #-152]	; 0xffffff68
   24390:	ldr	r2, [fp, #-68]	; 0xffffffbc
   24394:	cmp	r2, r3
   24398:	beq	2469c <__assert_fail@plt+0x1342c>
   2439c:	sub	r2, fp, #80	; 0x50
   243a0:	sub	r3, fp, #144	; 0x90
   243a4:	ldr	r1, [fp, #-68]	; 0xffffffbc
   243a8:	mov	r0, r3
   243ac:	bl	10f88 <wcrtomb@plt>
   243b0:	str	r0, [fp, #-72]	; 0xffffffb8
   243b4:	ldr	r2, [fp, #-52]	; 0xffffffcc
   243b8:	ldr	r3, [fp, #-72]	; 0xffffffb8
   243bc:	cmp	r2, r3
   243c0:	moveq	r3, #1
   243c4:	movne	r3, #0
   243c8:	uxtb	r3, r3
   243cc:	cmp	r3, #0
   243d0:	beq	243f8 <__assert_fail@plt+0x13188>
   243d4:	ldr	r3, [fp, #-160]	; 0xffffff60
   243d8:	ldr	r2, [r3, #4]
   243dc:	ldr	r3, [fp, #-12]
   243e0:	add	r3, r2, r3
   243e4:	sub	r1, fp, #144	; 0x90
   243e8:	ldr	r2, [fp, #-52]	; 0xffffffcc
   243ec:	mov	r0, r3
   243f0:	bl	11018 <memcpy@plt>
   243f4:	b	246bc <__assert_fail@plt+0x1344c>
   243f8:	ldr	r3, [fp, #-72]	; 0xffffffb8
   243fc:	cmn	r3, #1
   24400:	beq	24678 <__assert_fail@plt+0x13408>
   24404:	ldr	r2, [fp, #-12]
   24408:	ldr	r3, [fp, #-72]	; 0xffffffb8
   2440c:	add	r3, r2, r3
   24410:	ldr	r2, [fp, #-160]	; 0xffffff60
   24414:	ldr	r2, [r2, #36]	; 0x24
   24418:	cmp	r3, r2
   2441c:	bls	24438 <__assert_fail@plt+0x131c8>
   24420:	ldr	r3, [fp, #-160]	; 0xffffff60
   24424:	add	r3, r3, #16
   24428:	sub	r2, fp, #80	; 0x50
   2442c:	ldm	r2, {r0, r1}
   24430:	stm	r3, {r0, r1}
   24434:	b	24938 <__assert_fail@plt+0x136c8>
   24438:	ldr	r3, [fp, #-160]	; 0xffffff60
   2443c:	ldr	r3, [r3, #12]
   24440:	cmp	r3, #0
   24444:	bne	24484 <__assert_fail@plt+0x13214>
   24448:	ldr	r3, [fp, #-160]	; 0xffffff60
   2444c:	ldr	r3, [r3, #36]	; 0x24
   24450:	lsl	r3, r3, #2
   24454:	mov	r0, r3
   24458:	bl	3df98 <__assert_fail@plt+0x2cd28>
   2445c:	mov	r3, r0
   24460:	mov	r2, r3
   24464:	ldr	r3, [fp, #-160]	; 0xffffff60
   24468:	str	r2, [r3, #12]
   2446c:	ldr	r3, [fp, #-160]	; 0xffffff60
   24470:	ldr	r3, [r3, #12]
   24474:	cmp	r3, #0
   24478:	bne	24484 <__assert_fail@plt+0x13214>
   2447c:	mov	r3, #12
   24480:	b	24954 <__assert_fail@plt+0x136e4>
   24484:	ldr	r3, [fp, #-160]	; 0xffffff60
   24488:	ldrb	r3, [r3, #76]	; 0x4c
   2448c:	cmp	r3, #0
   24490:	bne	244e4 <__assert_fail@plt+0x13274>
   24494:	mov	r3, #0
   24498:	str	r3, [fp, #-28]	; 0xffffffe4
   2449c:	b	244c8 <__assert_fail@plt+0x13258>
   244a0:	ldr	r3, [fp, #-160]	; 0xffffff60
   244a4:	ldr	r2, [r3, #12]
   244a8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   244ac:	lsl	r3, r3, #2
   244b0:	add	r3, r2, r3
   244b4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   244b8:	str	r2, [r3]
   244bc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   244c0:	add	r3, r3, #1
   244c4:	str	r3, [fp, #-28]	; 0xffffffe4
   244c8:	ldr	r3, [fp, #-12]
   244cc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   244d0:	cmp	r2, r3
   244d4:	bcc	244a0 <__assert_fail@plt+0x13230>
   244d8:	ldr	r3, [fp, #-160]	; 0xffffff60
   244dc:	mov	r2, #1
   244e0:	strb	r2, [r3, #76]	; 0x4c
   244e4:	ldr	r3, [fp, #-160]	; 0xffffff60
   244e8:	ldr	r2, [r3, #4]
   244ec:	ldr	r3, [fp, #-12]
   244f0:	add	r3, r2, r3
   244f4:	sub	r1, fp, #144	; 0x90
   244f8:	ldr	r2, [fp, #-72]	; 0xffffffb8
   244fc:	mov	r0, r3
   24500:	bl	11018 <memcpy@plt>
   24504:	ldr	r3, [fp, #-160]	; 0xffffff60
   24508:	ldr	r2, [r3, #8]
   2450c:	ldr	r3, [fp, #-12]
   24510:	lsl	r3, r3, #2
   24514:	add	r3, r2, r3
   24518:	ldr	r2, [fp, #-68]	; 0xffffffbc
   2451c:	str	r2, [r3]
   24520:	ldr	r3, [fp, #-160]	; 0xffffff60
   24524:	ldr	r2, [r3, #12]
   24528:	ldr	r3, [fp, #-12]
   2452c:	lsl	r3, r3, #2
   24530:	add	r3, r2, r3
   24534:	ldr	r2, [fp, #-8]
   24538:	str	r2, [r3]
   2453c:	mov	r3, #1
   24540:	str	r3, [fp, #-28]	; 0xffffffe4
   24544:	b	245c0 <__assert_fail@plt+0x13350>
   24548:	ldr	r3, [fp, #-160]	; 0xffffff60
   2454c:	ldr	r2, [r3, #12]
   24550:	ldr	r1, [fp, #-12]
   24554:	ldr	r3, [fp, #-28]	; 0xffffffe4
   24558:	add	r3, r1, r3
   2455c:	lsl	r3, r3, #2
   24560:	add	r2, r2, r3
   24564:	ldr	r1, [fp, #-28]	; 0xffffffe4
   24568:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2456c:	cmp	r1, r3
   24570:	bcc	24580 <__assert_fail@plt+0x13310>
   24574:	ldr	r3, [fp, #-52]	; 0xffffffcc
   24578:	sub	r3, r3, #1
   2457c:	b	24584 <__assert_fail@plt+0x13314>
   24580:	ldr	r3, [fp, #-28]	; 0xffffffe4
   24584:	ldr	r1, [fp, #-8]
   24588:	add	r3, r3, r1
   2458c:	str	r3, [r2]
   24590:	ldr	r3, [fp, #-160]	; 0xffffff60
   24594:	ldr	r2, [r3, #8]
   24598:	ldr	r1, [fp, #-12]
   2459c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   245a0:	add	r3, r1, r3
   245a4:	lsl	r3, r3, #2
   245a8:	add	r3, r2, r3
   245ac:	mvn	r2, #0
   245b0:	str	r2, [r3]
   245b4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   245b8:	add	r3, r3, #1
   245bc:	str	r3, [fp, #-28]	; 0xffffffe4
   245c0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   245c4:	ldr	r3, [fp, #-72]	; 0xffffffb8
   245c8:	cmp	r2, r3
   245cc:	bcc	24548 <__assert_fail@plt+0x132d8>
   245d0:	ldr	r3, [fp, #-160]	; 0xffffff60
   245d4:	ldr	r3, [r3, #48]	; 0x30
   245d8:	mov	r1, r3
   245dc:	ldr	r2, [fp, #-72]	; 0xffffffb8
   245e0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   245e4:	sub	r3, r2, r3
   245e8:	add	r3, r1, r3
   245ec:	mov	r2, r3
   245f0:	ldr	r3, [fp, #-160]	; 0xffffff60
   245f4:	str	r2, [r3, #48]	; 0x30
   245f8:	ldr	r3, [fp, #-160]	; 0xffffff60
   245fc:	ldr	r2, [r3, #52]	; 0x34
   24600:	ldr	r3, [fp, #-8]
   24604:	cmp	r2, r3
   24608:	ble	24634 <__assert_fail@plt+0x133c4>
   2460c:	ldr	r3, [fp, #-160]	; 0xffffff60
   24610:	ldr	r3, [r3, #56]	; 0x38
   24614:	mov	r1, r3
   24618:	ldr	r2, [fp, #-72]	; 0xffffffb8
   2461c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   24620:	sub	r3, r2, r3
   24624:	add	r3, r1, r3
   24628:	mov	r2, r3
   2462c:	ldr	r3, [fp, #-160]	; 0xffffff60
   24630:	str	r2, [r3, #56]	; 0x38
   24634:	ldr	r3, [fp, #-160]	; 0xffffff60
   24638:	ldr	r2, [r3, #36]	; 0x24
   2463c:	ldr	r3, [fp, #-160]	; 0xffffff60
   24640:	ldr	r3, [r3, #48]	; 0x30
   24644:	cmp	r2, r3
   24648:	movlt	r3, r2
   2464c:	movge	r3, r3
   24650:	str	r3, [fp, #-16]
   24654:	ldr	r2, [fp, #-12]
   24658:	ldr	r3, [fp, #-72]	; 0xffffffb8
   2465c:	add	r3, r2, r3
   24660:	str	r3, [fp, #-12]
   24664:	ldr	r2, [fp, #-8]
   24668:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2466c:	add	r3, r2, r3
   24670:	str	r3, [fp, #-8]
   24674:	b	24928 <__assert_fail@plt+0x136b8>
   24678:	ldr	r3, [fp, #-160]	; 0xffffff60
   2467c:	ldr	r2, [r3, #4]
   24680:	ldr	r3, [fp, #-12]
   24684:	add	r3, r2, r3
   24688:	ldr	r2, [fp, #-52]	; 0xffffffcc
   2468c:	ldr	r1, [fp, #-20]	; 0xffffffec
   24690:	mov	r0, r3
   24694:	bl	11018 <memcpy@plt>
   24698:	b	246bc <__assert_fail@plt+0x1344c>
   2469c:	ldr	r3, [fp, #-160]	; 0xffffff60
   246a0:	ldr	r2, [r3, #4]
   246a4:	ldr	r3, [fp, #-12]
   246a8:	add	r3, r2, r3
   246ac:	ldr	r2, [fp, #-52]	; 0xffffffcc
   246b0:	ldr	r1, [fp, #-20]	; 0xffffffec
   246b4:	mov	r0, r3
   246b8:	bl	11018 <memcpy@plt>
   246bc:	ldr	r3, [fp, #-160]	; 0xffffff60
   246c0:	ldrb	r3, [r3, #76]	; 0x4c
   246c4:	cmp	r3, #0
   246c8:	movne	r3, #1
   246cc:	moveq	r3, #0
   246d0:	uxtb	r3, r3
   246d4:	cmp	r3, #0
   246d8:	beq	24730 <__assert_fail@plt+0x134c0>
   246dc:	mov	r3, #0
   246e0:	str	r3, [fp, #-32]	; 0xffffffe0
   246e4:	b	24720 <__assert_fail@plt+0x134b0>
   246e8:	ldr	r3, [fp, #-160]	; 0xffffff60
   246ec:	ldr	r2, [r3, #12]
   246f0:	ldr	r1, [fp, #-12]
   246f4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   246f8:	add	r3, r1, r3
   246fc:	lsl	r3, r3, #2
   24700:	add	r3, r2, r3
   24704:	ldr	r1, [fp, #-8]
   24708:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2470c:	add	r2, r1, r2
   24710:	str	r2, [r3]
   24714:	ldr	r3, [fp, #-32]	; 0xffffffe0
   24718:	add	r3, r3, #1
   2471c:	str	r3, [fp, #-32]	; 0xffffffe0
   24720:	ldr	r2, [fp, #-32]	; 0xffffffe0
   24724:	ldr	r3, [fp, #-52]	; 0xffffffcc
   24728:	cmp	r2, r3
   2472c:	bcc	246e8 <__assert_fail@plt+0x13478>
   24730:	ldr	r2, [fp, #-8]
   24734:	ldr	r3, [fp, #-52]	; 0xffffffcc
   24738:	add	r3, r2, r3
   2473c:	str	r3, [fp, #-8]
   24740:	ldr	r3, [fp, #-160]	; 0xffffff60
   24744:	ldr	r2, [r3, #8]
   24748:	ldr	r3, [fp, #-12]
   2474c:	add	r1, r3, #1
   24750:	str	r1, [fp, #-12]
   24754:	lsl	r3, r3, #2
   24758:	add	r3, r2, r3
   2475c:	ldr	r2, [fp, #-68]	; 0xffffffbc
   24760:	str	r2, [r3]
   24764:	ldr	r2, [fp, #-12]
   24768:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2476c:	add	r3, r2, r3
   24770:	sub	r3, r3, #1
   24774:	str	r3, [fp, #-48]	; 0xffffffd0
   24778:	b	247a0 <__assert_fail@plt+0x13530>
   2477c:	ldr	r3, [fp, #-160]	; 0xffffff60
   24780:	ldr	r2, [r3, #8]
   24784:	ldr	r3, [fp, #-12]
   24788:	add	r1, r3, #1
   2478c:	str	r1, [fp, #-12]
   24790:	lsl	r3, r3, #2
   24794:	add	r3, r2, r3
   24798:	mvn	r2, #0
   2479c:	str	r2, [r3]
   247a0:	ldr	r2, [fp, #-12]
   247a4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   247a8:	cmp	r2, r3
   247ac:	blt	2477c <__assert_fail@plt+0x1350c>
   247b0:	b	24928 <__assert_fail@plt+0x136b8>
   247b4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   247b8:	cmn	r3, #1
   247bc:	beq	247f0 <__assert_fail@plt+0x13580>
   247c0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   247c4:	cmp	r3, #0
   247c8:	beq	247f0 <__assert_fail@plt+0x13580>
   247cc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   247d0:	cmn	r3, #2
   247d4:	bne	24908 <__assert_fail@plt+0x13698>
   247d8:	ldr	r3, [fp, #-160]	; 0xffffff60
   247dc:	ldr	r2, [r3, #36]	; 0x24
   247e0:	ldr	r3, [fp, #-160]	; 0xffffff60
   247e4:	ldr	r3, [r3, #48]	; 0x30
   247e8:	cmp	r2, r3
   247ec:	blt	24908 <__assert_fail@plt+0x13698>
   247f0:	ldr	r3, [fp, #-160]	; 0xffffff60
   247f4:	ldr	r3, [r3]
   247f8:	ldr	r2, [fp, #-160]	; 0xffffff60
   247fc:	ldr	r1, [r2, #24]
   24800:	ldr	r2, [fp, #-8]
   24804:	add	r2, r1, r2
   24808:	add	r3, r3, r2
   2480c:	ldrb	r3, [r3]
   24810:	str	r3, [fp, #-36]	; 0xffffffdc
   24814:	ldr	r3, [fp, #-160]	; 0xffffff60
   24818:	ldr	r3, [r3, #64]	; 0x40
   2481c:	cmp	r3, #0
   24820:	movne	r3, #1
   24824:	moveq	r3, #0
   24828:	uxtb	r3, r3
   2482c:	cmp	r3, #0
   24830:	beq	2484c <__assert_fail@plt+0x135dc>
   24834:	ldr	r3, [fp, #-160]	; 0xffffff60
   24838:	ldr	r2, [r3, #64]	; 0x40
   2483c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   24840:	add	r3, r2, r3
   24844:	ldrb	r3, [r3]
   24848:	str	r3, [fp, #-36]	; 0xffffffdc
   2484c:	ldr	r3, [fp, #-160]	; 0xffffff60
   24850:	ldr	r2, [r3, #4]
   24854:	ldr	r3, [fp, #-12]
   24858:	add	r3, r2, r3
   2485c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   24860:	uxtb	r2, r2
   24864:	strb	r2, [r3]
   24868:	ldr	r3, [fp, #-160]	; 0xffffff60
   2486c:	ldrb	r3, [r3, #76]	; 0x4c
   24870:	cmp	r3, #0
   24874:	movne	r3, #1
   24878:	moveq	r3, #0
   2487c:	uxtb	r3, r3
   24880:	cmp	r3, #0
   24884:	beq	248a4 <__assert_fail@plt+0x13634>
   24888:	ldr	r3, [fp, #-160]	; 0xffffff60
   2488c:	ldr	r2, [r3, #12]
   24890:	ldr	r3, [fp, #-12]
   24894:	lsl	r3, r3, #2
   24898:	add	r3, r2, r3
   2489c:	ldr	r2, [fp, #-8]
   248a0:	str	r2, [r3]
   248a4:	ldr	r3, [fp, #-8]
   248a8:	add	r3, r3, #1
   248ac:	str	r3, [fp, #-8]
   248b0:	ldr	r3, [fp, #-160]	; 0xffffff60
   248b4:	ldr	r2, [r3, #8]
   248b8:	ldr	r3, [fp, #-12]
   248bc:	add	r1, r3, #1
   248c0:	str	r1, [fp, #-12]
   248c4:	lsl	r3, r3, #2
   248c8:	add	r3, r2, r3
   248cc:	ldr	r2, [fp, #-36]	; 0xffffffdc
   248d0:	str	r2, [r3]
   248d4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   248d8:	cmn	r3, #1
   248dc:	moveq	r3, #1
   248e0:	movne	r3, #0
   248e4:	uxtb	r3, r3
   248e8:	cmp	r3, #0
   248ec:	beq	24924 <__assert_fail@plt+0x136b4>
   248f0:	ldr	r3, [fp, #-160]	; 0xffffff60
   248f4:	add	r3, r3, #16
   248f8:	sub	r2, fp, #80	; 0x50
   248fc:	ldm	r2, {r0, r1}
   24900:	stm	r3, {r0, r1}
   24904:	b	24924 <__assert_fail@plt+0x136b4>
   24908:	ldr	r3, [fp, #-160]	; 0xffffff60
   2490c:	add	r3, r3, #16
   24910:	sub	r2, fp, #80	; 0x50
   24914:	ldm	r2, {r0, r1}
   24918:	stm	r3, {r0, r1}
   2491c:	nop			; (mov r0, r0)
   24920:	b	24938 <__assert_fail@plt+0x136c8>
   24924:	nop			; (mov r0, r0)
   24928:	ldr	r2, [fp, #-12]
   2492c:	ldr	r3, [fp, #-16]
   24930:	cmp	r2, r3
   24934:	blt	24224 <__assert_fail@plt+0x12fb4>
   24938:	ldr	r3, [fp, #-160]	; 0xffffff60
   2493c:	ldr	r2, [fp, #-12]
   24940:	str	r2, [r3, #28]
   24944:	ldr	r3, [fp, #-160]	; 0xffffff60
   24948:	ldr	r2, [fp, #-8]
   2494c:	str	r2, [r3, #32]
   24950:	mov	r3, #0
   24954:	mov	r0, r3
   24958:	sub	sp, fp, #4
   2495c:	pop	{fp, pc}
   24960:	push	{fp, lr}
   24964:	add	fp, sp, #4
   24968:	sub	sp, sp, #48	; 0x30
   2496c:	str	r0, [fp, #-40]	; 0xffffffd8
   24970:	str	r1, [fp, #-44]	; 0xffffffd4
   24974:	str	r2, [fp, #-48]	; 0xffffffd0
   24978:	mvn	r3, #0
   2497c:	str	r3, [fp, #-16]
   24980:	ldr	r3, [fp, #-40]	; 0xffffffd8
   24984:	ldr	r2, [r3, #24]
   24988:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2498c:	ldr	r3, [r3, #32]
   24990:	add	r3, r2, r3
   24994:	str	r3, [fp, #-8]
   24998:	b	24ac8 <__assert_fail@plt+0x13858>
   2499c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   249a0:	ldr	r2, [r3, #44]	; 0x2c
   249a4:	ldr	r3, [fp, #-8]
   249a8:	sub	r3, r2, r3
   249ac:	str	r3, [fp, #-20]	; 0xffffffec
   249b0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   249b4:	sub	r3, fp, #28
   249b8:	add	r2, r2, #16
   249bc:	ldm	r2, {r0, r1}
   249c0:	stm	r3, {r0, r1}
   249c4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   249c8:	ldr	r2, [r3]
   249cc:	ldr	r3, [fp, #-8]
   249d0:	add	r1, r2, r3
   249d4:	ldr	r2, [fp, #-20]	; 0xffffffec
   249d8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   249dc:	add	r3, r3, #16
   249e0:	sub	r0, fp, #32
   249e4:	bl	3ed0c <__assert_fail@plt+0x2da9c>
   249e8:	str	r0, [fp, #-12]
   249ec:	ldr	r3, [fp, #-12]
   249f0:	cmn	r3, #2
   249f4:	moveq	r3, #1
   249f8:	movne	r3, #0
   249fc:	uxtb	r3, r3
   24a00:	cmp	r3, #0
   24a04:	bne	24a24 <__assert_fail@plt+0x137b4>
   24a08:	ldr	r3, [fp, #-12]
   24a0c:	cmn	r3, #1
   24a10:	moveq	r3, #1
   24a14:	movne	r3, #0
   24a18:	uxtb	r3, r3
   24a1c:	cmp	r3, #0
   24a20:	beq	24a2c <__assert_fail@plt+0x137bc>
   24a24:	mov	r3, #1
   24a28:	b	24a30 <__assert_fail@plt+0x137c0>
   24a2c:	mov	r3, #0
   24a30:	cmp	r3, #0
   24a34:	bne	24a54 <__assert_fail@plt+0x137e4>
   24a38:	ldr	r3, [fp, #-12]
   24a3c:	cmp	r3, #0
   24a40:	moveq	r3, #1
   24a44:	movne	r3, #0
   24a48:	uxtb	r3, r3
   24a4c:	cmp	r3, #0
   24a50:	beq	24ab0 <__assert_fail@plt+0x13840>
   24a54:	ldr	r3, [fp, #-12]
   24a58:	cmp	r3, #0
   24a5c:	beq	24a6c <__assert_fail@plt+0x137fc>
   24a60:	ldr	r3, [fp, #-20]	; 0xffffffec
   24a64:	cmp	r3, #0
   24a68:	bne	24a78 <__assert_fail@plt+0x13808>
   24a6c:	mov	r3, #0
   24a70:	str	r3, [fp, #-16]
   24a74:	b	24a90 <__assert_fail@plt+0x13820>
   24a78:	ldr	r3, [fp, #-40]	; 0xffffffd8
   24a7c:	ldr	r2, [r3]
   24a80:	ldr	r3, [fp, #-8]
   24a84:	add	r3, r2, r3
   24a88:	ldrb	r3, [r3]
   24a8c:	str	r3, [fp, #-16]
   24a90:	mov	r3, #1
   24a94:	str	r3, [fp, #-12]
   24a98:	ldr	r3, [fp, #-40]	; 0xffffffd8
   24a9c:	add	r3, r3, #16
   24aa0:	sub	r2, fp, #28
   24aa4:	ldm	r2, {r0, r1}
   24aa8:	stm	r3, {r0, r1}
   24aac:	b	24ab8 <__assert_fail@plt+0x13848>
   24ab0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   24ab4:	str	r3, [fp, #-16]
   24ab8:	ldr	r2, [fp, #-8]
   24abc:	ldr	r3, [fp, #-12]
   24ac0:	add	r3, r2, r3
   24ac4:	str	r3, [fp, #-8]
   24ac8:	ldr	r2, [fp, #-8]
   24acc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   24ad0:	cmp	r2, r3
   24ad4:	blt	2499c <__assert_fail@plt+0x1372c>
   24ad8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   24adc:	ldr	r2, [fp, #-16]
   24ae0:	str	r2, [r3]
   24ae4:	ldr	r3, [fp, #-8]
   24ae8:	mov	r0, r3
   24aec:	sub	sp, fp, #4
   24af0:	pop	{fp, pc}
   24af4:	push	{r4, fp, lr}
   24af8:	add	fp, sp, #8
   24afc:	sub	sp, sp, #28
   24b00:	str	r0, [fp, #-32]	; 0xffffffe0
   24b04:	ldr	r3, [fp, #-32]	; 0xffffffe0
   24b08:	ldr	r2, [r3, #36]	; 0x24
   24b0c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   24b10:	ldr	r3, [r3, #48]	; 0x30
   24b14:	cmp	r2, r3
   24b18:	movlt	r3, r2
   24b1c:	movge	r3, r3
   24b20:	str	r3, [fp, #-24]	; 0xffffffe8
   24b24:	ldr	r3, [fp, #-32]	; 0xffffffe0
   24b28:	ldr	r3, [r3, #28]
   24b2c:	str	r3, [fp, #-16]
   24b30:	b	24bc0 <__assert_fail@plt+0x13950>
   24b34:	ldr	r3, [fp, #-32]	; 0xffffffe0
   24b38:	ldr	r3, [r3]
   24b3c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   24b40:	ldr	r1, [r2, #24]
   24b44:	ldr	r2, [fp, #-16]
   24b48:	add	r2, r1, r2
   24b4c:	add	r3, r3, r2
   24b50:	ldrb	r3, [r3]
   24b54:	str	r3, [fp, #-20]	; 0xffffffec
   24b58:	ldr	r3, [fp, #-32]	; 0xffffffe0
   24b5c:	ldr	r3, [r3, #64]	; 0x40
   24b60:	cmp	r3, #0
   24b64:	movne	r3, #1
   24b68:	moveq	r3, #0
   24b6c:	uxtb	r3, r3
   24b70:	cmp	r3, #0
   24b74:	beq	24b90 <__assert_fail@plt+0x13920>
   24b78:	ldr	r3, [fp, #-32]	; 0xffffffe0
   24b7c:	ldr	r2, [r3, #64]	; 0x40
   24b80:	ldr	r3, [fp, #-20]	; 0xffffffec
   24b84:	add	r3, r2, r3
   24b88:	ldrb	r3, [r3]
   24b8c:	str	r3, [fp, #-20]	; 0xffffffec
   24b90:	ldr	r3, [fp, #-32]	; 0xffffffe0
   24b94:	ldr	r2, [r3, #4]
   24b98:	ldr	r3, [fp, #-16]
   24b9c:	add	r4, r2, r3
   24ba0:	ldr	r0, [fp, #-20]	; 0xffffffec
   24ba4:	bl	11210 <toupper@plt>
   24ba8:	mov	r3, r0
   24bac:	uxtb	r3, r3
   24bb0:	strb	r3, [r4]
   24bb4:	ldr	r3, [fp, #-16]
   24bb8:	add	r3, r3, #1
   24bbc:	str	r3, [fp, #-16]
   24bc0:	ldr	r2, [fp, #-16]
   24bc4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   24bc8:	cmp	r2, r3
   24bcc:	blt	24b34 <__assert_fail@plt+0x138c4>
   24bd0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   24bd4:	ldr	r2, [fp, #-16]
   24bd8:	str	r2, [r3, #28]
   24bdc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   24be0:	ldr	r2, [fp, #-16]
   24be4:	str	r2, [r3, #32]
   24be8:	nop			; (mov r0, r0)
   24bec:	sub	sp, fp, #8
   24bf0:	pop	{r4, fp, pc}
   24bf4:	push	{fp}		; (str fp, [sp, #-4]!)
   24bf8:	add	fp, sp, #0
   24bfc:	sub	sp, sp, #28
   24c00:	str	r0, [fp, #-24]	; 0xffffffe8
   24c04:	ldr	r3, [fp, #-24]	; 0xffffffe8
   24c08:	ldr	r2, [r3, #36]	; 0x24
   24c0c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   24c10:	ldr	r3, [r3, #48]	; 0x30
   24c14:	cmp	r2, r3
   24c18:	movlt	r3, r2
   24c1c:	movge	r3, r3
   24c20:	str	r3, [fp, #-12]
   24c24:	ldr	r3, [fp, #-24]	; 0xffffffe8
   24c28:	ldr	r3, [r3, #28]
   24c2c:	str	r3, [fp, #-8]
   24c30:	b	24c8c <__assert_fail@plt+0x13a1c>
   24c34:	ldr	r3, [fp, #-24]	; 0xffffffe8
   24c38:	ldr	r3, [r3]
   24c3c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   24c40:	ldr	r1, [r2, #24]
   24c44:	ldr	r2, [fp, #-8]
   24c48:	add	r2, r1, r2
   24c4c:	add	r3, r3, r2
   24c50:	ldrb	r3, [r3]
   24c54:	str	r3, [fp, #-16]
   24c58:	ldr	r3, [fp, #-24]	; 0xffffffe8
   24c5c:	ldr	r2, [r3, #4]
   24c60:	ldr	r3, [fp, #-8]
   24c64:	add	r3, r2, r3
   24c68:	ldr	r2, [fp, #-24]	; 0xffffffe8
   24c6c:	ldr	r1, [r2, #64]	; 0x40
   24c70:	ldr	r2, [fp, #-16]
   24c74:	add	r2, r1, r2
   24c78:	ldrb	r2, [r2]
   24c7c:	strb	r2, [r3]
   24c80:	ldr	r3, [fp, #-8]
   24c84:	add	r3, r3, #1
   24c88:	str	r3, [fp, #-8]
   24c8c:	ldr	r2, [fp, #-8]
   24c90:	ldr	r3, [fp, #-12]
   24c94:	cmp	r2, r3
   24c98:	blt	24c34 <__assert_fail@plt+0x139c4>
   24c9c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   24ca0:	ldr	r2, [fp, #-8]
   24ca4:	str	r2, [r3, #28]
   24ca8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   24cac:	ldr	r2, [fp, #-8]
   24cb0:	str	r2, [r3, #32]
   24cb4:	nop			; (mov r0, r0)
   24cb8:	add	sp, fp, #0
   24cbc:	pop	{fp}		; (ldr fp, [sp], #4)
   24cc0:	bx	lr
   24cc4:	push	{fp, lr}
   24cc8:	add	fp, sp, #4
   24ccc:	sub	sp, sp, #104	; 0x68
   24cd0:	str	r0, [fp, #-96]	; 0xffffffa0
   24cd4:	str	r1, [fp, #-100]	; 0xffffff9c
   24cd8:	str	r2, [fp, #-104]	; 0xffffff98
   24cdc:	ldr	r3, [fp, #-96]	; 0xffffffa0
   24ce0:	ldr	r2, [r3, #24]
   24ce4:	ldr	r3, [fp, #-100]	; 0xffffff9c
   24ce8:	cmp	r2, r3
   24cec:	movle	r3, #1
   24cf0:	movgt	r3, #0
   24cf4:	uxtb	r3, r3
   24cf8:	cmp	r3, #0
   24cfc:	beq	24d18 <__assert_fail@plt+0x13aa8>
   24d00:	ldr	r3, [fp, #-96]	; 0xffffffa0
   24d04:	ldr	r3, [r3, #24]
   24d08:	ldr	r2, [fp, #-100]	; 0xffffff9c
   24d0c:	sub	r3, r2, r3
   24d10:	str	r3, [fp, #-8]
   24d14:	b	24ddc <__assert_fail@plt+0x13b6c>
   24d18:	ldr	r3, [fp, #-96]	; 0xffffffa0
   24d1c:	ldr	r3, [r3, #80]	; 0x50
   24d20:	cmp	r3, #1
   24d24:	ble	24d40 <__assert_fail@plt+0x13ad0>
   24d28:	ldr	r3, [fp, #-96]	; 0xffffffa0
   24d2c:	add	r3, r3, #16
   24d30:	mov	r2, #8
   24d34:	mov	r1, #0
   24d38:	mov	r0, r3
   24d3c:	bl	111bc <memset@plt>
   24d40:	ldr	r3, [fp, #-96]	; 0xffffffa0
   24d44:	ldr	r2, [r3, #44]	; 0x2c
   24d48:	ldr	r3, [fp, #-96]	; 0xffffffa0
   24d4c:	str	r2, [r3, #48]	; 0x30
   24d50:	ldr	r3, [fp, #-96]	; 0xffffffa0
   24d54:	ldr	r2, [r3, #52]	; 0x34
   24d58:	ldr	r3, [fp, #-96]	; 0xffffffa0
   24d5c:	str	r2, [r3, #56]	; 0x38
   24d60:	ldr	r3, [fp, #-96]	; 0xffffffa0
   24d64:	mov	r2, #0
   24d68:	str	r2, [r3, #28]
   24d6c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   24d70:	mov	r2, #0
   24d74:	str	r2, [r3, #24]
   24d78:	ldr	r3, [fp, #-96]	; 0xffffffa0
   24d7c:	mov	r2, #0
   24d80:	str	r2, [r3, #32]
   24d84:	ldr	r3, [fp, #-96]	; 0xffffffa0
   24d88:	mov	r2, #0
   24d8c:	strb	r2, [r3, #76]	; 0x4c
   24d90:	ldr	r3, [fp, #-104]	; 0xffffff98
   24d94:	and	r3, r3, #1
   24d98:	cmp	r3, #0
   24d9c:	beq	24da8 <__assert_fail@plt+0x13b38>
   24da0:	mov	r2, #4
   24da4:	b	24dac <__assert_fail@plt+0x13b3c>
   24da8:	mov	r2, #6
   24dac:	ldr	r3, [fp, #-96]	; 0xffffffa0
   24db0:	str	r2, [r3, #60]	; 0x3c
   24db4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   24db8:	ldrb	r3, [r3, #75]	; 0x4b
   24dbc:	cmp	r3, #0
   24dc0:	bne	24dd4 <__assert_fail@plt+0x13b64>
   24dc4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   24dc8:	ldr	r2, [r3]
   24dcc:	ldr	r3, [fp, #-96]	; 0xffffffa0
   24dd0:	str	r2, [r3, #4]
   24dd4:	ldr	r3, [fp, #-100]	; 0xffffff9c
   24dd8:	str	r3, [fp, #-8]
   24ddc:	ldr	r3, [fp, #-8]
   24de0:	cmp	r3, #0
   24de4:	movne	r3, #1
   24de8:	moveq	r3, #0
   24dec:	uxtb	r3, r3
   24df0:	cmp	r3, #0
   24df4:	beq	25820 <__assert_fail@plt+0x145b0>
   24df8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   24dfc:	ldr	r2, [r3, #32]
   24e00:	ldr	r3, [fp, #-8]
   24e04:	cmp	r2, r3
   24e08:	movgt	r3, #1
   24e0c:	movle	r3, #0
   24e10:	uxtb	r3, r3
   24e14:	cmp	r3, #0
   24e18:	beq	25314 <__assert_fail@plt+0x140a4>
   24e1c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   24e20:	ldrb	r3, [r3, #76]	; 0x4c
   24e24:	cmp	r3, #0
   24e28:	beq	25228 <__assert_fail@plt+0x13fb8>
   24e2c:	mov	r3, #0
   24e30:	str	r3, [fp, #-12]
   24e34:	ldr	r3, [fp, #-96]	; 0xffffffa0
   24e38:	ldr	r3, [r3, #28]
   24e3c:	str	r3, [fp, #-16]
   24e40:	ldr	r2, [fp, #-16]
   24e44:	ldr	r3, [fp, #-12]
   24e48:	add	r3, r2, r3
   24e4c:	lsr	r2, r3, #31
   24e50:	add	r3, r2, r3
   24e54:	asr	r3, r3, #1
   24e58:	str	r3, [fp, #-20]	; 0xffffffec
   24e5c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   24e60:	ldr	r2, [r3, #12]
   24e64:	ldr	r3, [fp, #-20]	; 0xffffffec
   24e68:	lsl	r3, r3, #2
   24e6c:	add	r3, r2, r3
   24e70:	ldr	r2, [r3]
   24e74:	ldr	r3, [fp, #-8]
   24e78:	cmp	r2, r3
   24e7c:	ble	24e8c <__assert_fail@plt+0x13c1c>
   24e80:	ldr	r3, [fp, #-20]	; 0xffffffec
   24e84:	str	r3, [fp, #-16]
   24e88:	b	24ebc <__assert_fail@plt+0x13c4c>
   24e8c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   24e90:	ldr	r2, [r3, #12]
   24e94:	ldr	r3, [fp, #-20]	; 0xffffffec
   24e98:	lsl	r3, r3, #2
   24e9c:	add	r3, r2, r3
   24ea0:	ldr	r2, [r3]
   24ea4:	ldr	r3, [fp, #-8]
   24ea8:	cmp	r2, r3
   24eac:	bge	24ed0 <__assert_fail@plt+0x13c60>
   24eb0:	ldr	r3, [fp, #-20]	; 0xffffffec
   24eb4:	add	r3, r3, #1
   24eb8:	str	r3, [fp, #-12]
   24ebc:	ldr	r2, [fp, #-12]
   24ec0:	ldr	r3, [fp, #-16]
   24ec4:	cmp	r2, r3
   24ec8:	blt	24e40 <__assert_fail@plt+0x13bd0>
   24ecc:	b	24ed4 <__assert_fail@plt+0x13c64>
   24ed0:	nop			; (mov r0, r0)
   24ed4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   24ed8:	ldr	r2, [r3, #12]
   24edc:	ldr	r3, [fp, #-20]	; 0xffffffec
   24ee0:	lsl	r3, r3, #2
   24ee4:	add	r3, r2, r3
   24ee8:	ldr	r2, [r3]
   24eec:	ldr	r3, [fp, #-8]
   24ef0:	cmp	r2, r3
   24ef4:	bge	24f04 <__assert_fail@plt+0x13c94>
   24ef8:	ldr	r3, [fp, #-20]	; 0xffffffec
   24efc:	add	r3, r3, #1
   24f00:	str	r3, [fp, #-20]	; 0xffffffec
   24f04:	ldr	r3, [fp, #-20]	; 0xffffffec
   24f08:	sub	r3, r3, #1
   24f0c:	ldr	r2, [fp, #-104]	; 0xffffff98
   24f10:	mov	r1, r3
   24f14:	ldr	r0, [fp, #-96]	; 0xffffffa0
   24f18:	bl	25d10 <__assert_fail@plt+0x14aa0>
   24f1c:	mov	r2, r0
   24f20:	ldr	r3, [fp, #-96]	; 0xffffffa0
   24f24:	str	r2, [r3, #60]	; 0x3c
   24f28:	ldr	r3, [fp, #-96]	; 0xffffffa0
   24f2c:	ldr	r2, [r3, #28]
   24f30:	ldr	r3, [fp, #-8]
   24f34:	cmp	r2, r3
   24f38:	ble	25078 <__assert_fail@plt+0x13e08>
   24f3c:	ldr	r2, [fp, #-20]	; 0xffffffec
   24f40:	ldr	r3, [fp, #-8]
   24f44:	cmp	r2, r3
   24f48:	bne	25078 <__assert_fail@plt+0x13e08>
   24f4c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   24f50:	ldr	r2, [r3, #12]
   24f54:	ldr	r3, [fp, #-20]	; 0xffffffec
   24f58:	lsl	r3, r3, #2
   24f5c:	add	r3, r2, r3
   24f60:	ldr	r2, [r3]
   24f64:	ldr	r3, [fp, #-8]
   24f68:	cmp	r2, r3
   24f6c:	bne	25078 <__assert_fail@plt+0x13e08>
   24f70:	ldr	r3, [fp, #-96]	; 0xffffffa0
   24f74:	ldr	r0, [r3, #8]
   24f78:	ldr	r3, [fp, #-96]	; 0xffffffa0
   24f7c:	ldr	r2, [r3, #8]
   24f80:	ldr	r3, [fp, #-8]
   24f84:	lsl	r3, r3, #2
   24f88:	add	r1, r2, r3
   24f8c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   24f90:	ldr	r2, [r3, #28]
   24f94:	ldr	r3, [fp, #-8]
   24f98:	sub	r3, r2, r3
   24f9c:	lsl	r3, r3, #2
   24fa0:	mov	r2, r3
   24fa4:	bl	10fe8 <memmove@plt>
   24fa8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   24fac:	ldr	r0, [r3, #4]
   24fb0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   24fb4:	ldr	r2, [r3, #4]
   24fb8:	ldr	r3, [fp, #-8]
   24fbc:	add	r1, r2, r3
   24fc0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   24fc4:	ldr	r2, [r3, #28]
   24fc8:	ldr	r3, [fp, #-8]
   24fcc:	sub	r3, r2, r3
   24fd0:	mov	r2, r3
   24fd4:	bl	10fe8 <memmove@plt>
   24fd8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   24fdc:	ldr	r2, [r3, #28]
   24fe0:	ldr	r3, [fp, #-8]
   24fe4:	sub	r2, r2, r3
   24fe8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   24fec:	str	r2, [r3, #28]
   24ff0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   24ff4:	ldr	r2, [r3, #32]
   24ff8:	ldr	r3, [fp, #-8]
   24ffc:	sub	r2, r2, r3
   25000:	ldr	r3, [fp, #-96]	; 0xffffffa0
   25004:	str	r2, [r3, #32]
   25008:	mov	r3, #0
   2500c:	str	r3, [fp, #-12]
   25010:	b	25060 <__assert_fail@plt+0x13df0>
   25014:	ldr	r3, [fp, #-96]	; 0xffffffa0
   25018:	ldr	r2, [r3, #12]
   2501c:	ldr	r3, [fp, #-12]
   25020:	lsl	r3, r3, #2
   25024:	add	r3, r2, r3
   25028:	ldr	r2, [fp, #-96]	; 0xffffffa0
   2502c:	ldr	r1, [r2, #12]
   25030:	ldr	r0, [fp, #-12]
   25034:	ldr	r2, [fp, #-8]
   25038:	add	r2, r0, r2
   2503c:	lsl	r2, r2, #2
   25040:	add	r2, r1, r2
   25044:	ldr	r1, [r2]
   25048:	ldr	r2, [fp, #-8]
   2504c:	sub	r2, r1, r2
   25050:	str	r2, [r3]
   25054:	ldr	r3, [fp, #-12]
   25058:	add	r3, r3, #1
   2505c:	str	r3, [fp, #-12]
   25060:	ldr	r3, [fp, #-96]	; 0xffffffa0
   25064:	ldr	r2, [r3, #28]
   25068:	ldr	r3, [fp, #-12]
   2506c:	cmp	r2, r3
   25070:	bgt	25014 <__assert_fail@plt+0x13da4>
   25074:	b	257f8 <__assert_fail@plt+0x14588>
   25078:	ldr	r3, [fp, #-96]	; 0xffffffa0
   2507c:	ldr	r2, [r3, #44]	; 0x2c
   25080:	ldr	r3, [fp, #-100]	; 0xffffff9c
   25084:	sub	r2, r2, r3
   25088:	ldr	r3, [fp, #-8]
   2508c:	add	r2, r2, r3
   25090:	ldr	r3, [fp, #-96]	; 0xffffffa0
   25094:	str	r2, [r3, #48]	; 0x30
   25098:	ldr	r3, [fp, #-96]	; 0xffffffa0
   2509c:	ldr	r2, [r3, #52]	; 0x34
   250a0:	ldr	r3, [fp, #-100]	; 0xffffff9c
   250a4:	sub	r2, r2, r3
   250a8:	ldr	r3, [fp, #-8]
   250ac:	add	r2, r2, r3
   250b0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   250b4:	str	r2, [r3, #56]	; 0x38
   250b8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   250bc:	mov	r2, #0
   250c0:	strb	r2, [r3, #76]	; 0x4c
   250c4:	b	250d4 <__assert_fail@plt+0x13e64>
   250c8:	ldr	r3, [fp, #-20]	; 0xffffffec
   250cc:	sub	r3, r3, #1
   250d0:	str	r3, [fp, #-20]	; 0xffffffec
   250d4:	ldr	r3, [fp, #-20]	; 0xffffffec
   250d8:	cmp	r3, #0
   250dc:	ble	25138 <__assert_fail@plt+0x13ec8>
   250e0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   250e4:	ldr	r2, [r3, #12]
   250e8:	ldr	r3, [fp, #-20]	; 0xffffffec
   250ec:	sub	r3, r3, #-1073741823	; 0xc0000001
   250f0:	lsl	r3, r3, #2
   250f4:	add	r3, r2, r3
   250f8:	ldr	r2, [r3]
   250fc:	ldr	r3, [fp, #-8]
   25100:	cmp	r2, r3
   25104:	beq	250c8 <__assert_fail@plt+0x13e58>
   25108:	b	25138 <__assert_fail@plt+0x13ec8>
   2510c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   25110:	ldr	r2, [r3, #8]
   25114:	ldr	r3, [fp, #-20]	; 0xffffffec
   25118:	lsl	r3, r3, #2
   2511c:	add	r3, r2, r3
   25120:	ldr	r3, [r3]
   25124:	cmn	r3, #1
   25128:	bne	25150 <__assert_fail@plt+0x13ee0>
   2512c:	ldr	r3, [fp, #-20]	; 0xffffffec
   25130:	add	r3, r3, #1
   25134:	str	r3, [fp, #-20]	; 0xffffffec
   25138:	ldr	r3, [fp, #-96]	; 0xffffffa0
   2513c:	ldr	r2, [r3, #28]
   25140:	ldr	r3, [fp, #-20]	; 0xffffffec
   25144:	cmp	r2, r3
   25148:	bgt	2510c <__assert_fail@plt+0x13e9c>
   2514c:	b	25154 <__assert_fail@plt+0x13ee4>
   25150:	nop			; (mov r0, r0)
   25154:	ldr	r3, [fp, #-96]	; 0xffffffa0
   25158:	ldr	r2, [r3, #28]
   2515c:	ldr	r3, [fp, #-20]	; 0xffffffec
   25160:	cmp	r2, r3
   25164:	bne	25178 <__assert_fail@plt+0x13f08>
   25168:	ldr	r3, [fp, #-96]	; 0xffffffa0
   2516c:	mov	r2, #0
   25170:	str	r2, [r3, #28]
   25174:	b	25214 <__assert_fail@plt+0x13fa4>
   25178:	ldr	r3, [fp, #-96]	; 0xffffffa0
   2517c:	ldr	r2, [r3, #12]
   25180:	ldr	r3, [fp, #-20]	; 0xffffffec
   25184:	lsl	r3, r3, #2
   25188:	add	r3, r2, r3
   2518c:	ldr	r2, [r3]
   25190:	ldr	r3, [fp, #-8]
   25194:	sub	r2, r2, r3
   25198:	ldr	r3, [fp, #-96]	; 0xffffffa0
   2519c:	str	r2, [r3, #28]
   251a0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   251a4:	ldr	r3, [r3, #28]
   251a8:	cmp	r3, #0
   251ac:	beq	25214 <__assert_fail@plt+0x13fa4>
   251b0:	mov	r3, #0
   251b4:	str	r3, [fp, #-12]
   251b8:	b	251e4 <__assert_fail@plt+0x13f74>
   251bc:	ldr	r3, [fp, #-96]	; 0xffffffa0
   251c0:	ldr	r2, [r3, #8]
   251c4:	ldr	r3, [fp, #-12]
   251c8:	lsl	r3, r3, #2
   251cc:	add	r3, r2, r3
   251d0:	mvn	r2, #0
   251d4:	str	r2, [r3]
   251d8:	ldr	r3, [fp, #-12]
   251dc:	add	r3, r3, #1
   251e0:	str	r3, [fp, #-12]
   251e4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   251e8:	ldr	r2, [r3, #28]
   251ec:	ldr	r3, [fp, #-12]
   251f0:	cmp	r2, r3
   251f4:	bgt	251bc <__assert_fail@plt+0x13f4c>
   251f8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   251fc:	ldr	r0, [r3, #4]
   25200:	ldr	r3, [fp, #-96]	; 0xffffffa0
   25204:	ldr	r3, [r3, #28]
   25208:	mov	r2, r3
   2520c:	mov	r1, #255	; 0xff
   25210:	bl	111bc <memset@plt>
   25214:	ldr	r3, [fp, #-96]	; 0xffffffa0
   25218:	ldr	r2, [r3, #28]
   2521c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   25220:	str	r2, [r3, #32]
   25224:	b	257f8 <__assert_fail@plt+0x14588>
   25228:	ldr	r3, [fp, #-8]
   2522c:	sub	r3, r3, #1
   25230:	ldr	r2, [fp, #-104]	; 0xffffff98
   25234:	mov	r1, r3
   25238:	ldr	r0, [fp, #-96]	; 0xffffffa0
   2523c:	bl	25d10 <__assert_fail@plt+0x14aa0>
   25240:	mov	r2, r0
   25244:	ldr	r3, [fp, #-96]	; 0xffffffa0
   25248:	str	r2, [r3, #60]	; 0x3c
   2524c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   25250:	ldr	r3, [r3, #80]	; 0x50
   25254:	cmp	r3, #1
   25258:	ble	25294 <__assert_fail@plt+0x14024>
   2525c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   25260:	ldr	r0, [r3, #8]
   25264:	ldr	r3, [fp, #-96]	; 0xffffffa0
   25268:	ldr	r2, [r3, #8]
   2526c:	ldr	r3, [fp, #-8]
   25270:	lsl	r3, r3, #2
   25274:	add	r1, r2, r3
   25278:	ldr	r3, [fp, #-96]	; 0xffffffa0
   2527c:	ldr	r2, [r3, #28]
   25280:	ldr	r3, [fp, #-8]
   25284:	sub	r3, r2, r3
   25288:	lsl	r3, r3, #2
   2528c:	mov	r2, r3
   25290:	bl	10fe8 <memmove@plt>
   25294:	ldr	r3, [fp, #-96]	; 0xffffffa0
   25298:	ldrb	r3, [r3, #75]	; 0x4b
   2529c:	cmp	r3, #0
   252a0:	beq	252d4 <__assert_fail@plt+0x14064>
   252a4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   252a8:	ldr	r0, [r3, #4]
   252ac:	ldr	r3, [fp, #-96]	; 0xffffffa0
   252b0:	ldr	r2, [r3, #4]
   252b4:	ldr	r3, [fp, #-8]
   252b8:	add	r1, r2, r3
   252bc:	ldr	r3, [fp, #-96]	; 0xffffffa0
   252c0:	ldr	r2, [r3, #28]
   252c4:	ldr	r3, [fp, #-8]
   252c8:	sub	r3, r2, r3
   252cc:	mov	r2, r3
   252d0:	bl	10fe8 <memmove@plt>
   252d4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   252d8:	ldr	r2, [r3, #28]
   252dc:	ldr	r3, [fp, #-8]
   252e0:	sub	r2, r2, r3
   252e4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   252e8:	str	r2, [r3, #28]
   252ec:	ldr	r3, [fp, #-96]	; 0xffffffa0
   252f0:	ldr	r2, [r3, #32]
   252f4:	ldr	r3, [fp, #-8]
   252f8:	sub	r2, r2, r3
   252fc:	ldr	r3, [fp, #-96]	; 0xffffffa0
   25300:	str	r2, [r3, #32]
   25304:	ldr	r3, [fp, #-96]	; 0xffffffa0
   25308:	ldr	r3, [r3, #28]
   2530c:	cmp	r3, #0
   25310:	b	257f8 <__assert_fail@plt+0x14588>
   25314:	ldr	r3, [fp, #-96]	; 0xffffffa0
   25318:	ldr	r3, [r3, #28]
   2531c:	str	r3, [fp, #-48]	; 0xffffffd0
   25320:	ldr	r3, [fp, #-96]	; 0xffffffa0
   25324:	ldrb	r3, [r3, #76]	; 0x4c
   25328:	cmp	r3, #0
   2532c:	beq	2537c <__assert_fail@plt+0x1410c>
   25330:	ldr	r3, [fp, #-96]	; 0xffffffa0
   25334:	ldr	r2, [r3, #44]	; 0x2c
   25338:	ldr	r3, [fp, #-100]	; 0xffffff9c
   2533c:	sub	r2, r2, r3
   25340:	ldr	r3, [fp, #-8]
   25344:	add	r2, r2, r3
   25348:	ldr	r3, [fp, #-96]	; 0xffffffa0
   2534c:	str	r2, [r3, #48]	; 0x30
   25350:	ldr	r3, [fp, #-96]	; 0xffffffa0
   25354:	ldr	r2, [r3, #52]	; 0x34
   25358:	ldr	r3, [fp, #-100]	; 0xffffff9c
   2535c:	sub	r2, r2, r3
   25360:	ldr	r3, [fp, #-8]
   25364:	add	r2, r2, r3
   25368:	ldr	r3, [fp, #-96]	; 0xffffffa0
   2536c:	str	r2, [r3, #56]	; 0x38
   25370:	ldr	r3, [fp, #-96]	; 0xffffffa0
   25374:	mov	r2, #0
   25378:	strb	r2, [r3, #76]	; 0x4c
   2537c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   25380:	mov	r2, #0
   25384:	str	r2, [r3, #28]
   25388:	ldr	r3, [fp, #-96]	; 0xffffffa0
   2538c:	ldr	r3, [r3, #80]	; 0x50
   25390:	cmp	r3, #1
   25394:	ble	25744 <__assert_fail@plt+0x144d4>
   25398:	mvn	r3, #0
   2539c:	str	r3, [fp, #-68]	; 0xffffffbc
   253a0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   253a4:	ldrb	r3, [r3, #73]	; 0x49
   253a8:	cmp	r3, #0
   253ac:	beq	255c8 <__assert_fail@plt+0x14358>
   253b0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   253b4:	ldr	r3, [r3]
   253b8:	ldr	r2, [fp, #-96]	; 0xffffffa0
   253bc:	ldr	r2, [r2, #24]
   253c0:	add	r3, r3, r2
   253c4:	str	r3, [fp, #-52]	; 0xffffffcc
   253c8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   253cc:	ldr	r3, [r3, #80]	; 0x50
   253d0:	ldr	r2, [fp, #-8]
   253d4:	sub	r3, r2, r3
   253d8:	mov	r2, r3
   253dc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   253e0:	add	r3, r3, r2
   253e4:	str	r3, [fp, #-32]	; 0xffffffe0
   253e8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   253ec:	ldr	r2, [r3]
   253f0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   253f4:	cmp	r2, r3
   253f8:	bls	25408 <__assert_fail@plt+0x14198>
   253fc:	ldr	r3, [fp, #-96]	; 0xffffffa0
   25400:	ldr	r3, [r3]
   25404:	str	r3, [fp, #-32]	; 0xffffffe0
   25408:	ldr	r3, [fp, #-8]
   2540c:	sub	r3, r3, #1
   25410:	ldr	r2, [fp, #-52]	; 0xffffffcc
   25414:	add	r3, r2, r3
   25418:	str	r3, [fp, #-28]	; 0xffffffe4
   2541c:	b	255b0 <__assert_fail@plt+0x14340>
   25420:	ldr	r3, [fp, #-28]	; 0xffffffe4
   25424:	ldrb	r3, [r3]
   25428:	and	r3, r3, #192	; 0xc0
   2542c:	cmp	r3, #128	; 0x80
   25430:	beq	255a4 <__assert_fail@plt+0x14334>
   25434:	ldr	r3, [fp, #-96]	; 0xffffffa0
   25438:	ldr	r3, [r3, #48]	; 0x30
   2543c:	mov	r2, r3
   25440:	ldr	r3, [fp, #-52]	; 0xffffffcc
   25444:	add	r3, r3, r2
   25448:	mov	r2, r3
   2544c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   25450:	sub	r3, r2, r3
   25454:	str	r3, [fp, #-56]	; 0xffffffc8
   25458:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2545c:	str	r3, [fp, #-36]	; 0xffffffdc
   25460:	ldr	r3, [fp, #-96]	; 0xffffffa0
   25464:	ldr	r3, [r3, #64]	; 0x40
   25468:	cmp	r3, #0
   2546c:	movne	r3, #1
   25470:	moveq	r3, #0
   25474:	uxtb	r3, r3
   25478:	cmp	r3, #0
   2547c:	beq	254ec <__assert_fail@plt+0x1427c>
   25480:	ldr	r3, [fp, #-56]	; 0xffffffc8
   25484:	cmp	r3, #6
   25488:	movlt	r3, r3
   2548c:	movge	r3, #6
   25490:	str	r3, [fp, #-40]	; 0xffffffd8
   25494:	b	254cc <__assert_fail@plt+0x1425c>
   25498:	ldr	r3, [fp, #-96]	; 0xffffffa0
   2549c:	ldr	r3, [r3, #64]	; 0x40
   254a0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   254a4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   254a8:	add	r2, r1, r2
   254ac:	ldrb	r2, [r2]
   254b0:	add	r3, r3, r2
   254b4:	ldrb	r1, [r3]
   254b8:	sub	r2, fp, #88	; 0x58
   254bc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   254c0:	add	r3, r2, r3
   254c4:	mov	r2, r1
   254c8:	strb	r2, [r3]
   254cc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   254d0:	sub	r3, r3, #1
   254d4:	str	r3, [fp, #-40]	; 0xffffffd8
   254d8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   254dc:	cmp	r3, #0
   254e0:	bge	25498 <__assert_fail@plt+0x14228>
   254e4:	sub	r3, fp, #88	; 0x58
   254e8:	str	r3, [fp, #-36]	; 0xffffffdc
   254ec:	sub	r3, fp, #76	; 0x4c
   254f0:	mov	r2, #8
   254f4:	mov	r1, #0
   254f8:	mov	r0, r3
   254fc:	bl	111bc <memset@plt>
   25500:	ldr	r2, [fp, #-56]	; 0xffffffc8
   25504:	sub	r3, fp, #76	; 0x4c
   25508:	sub	r0, fp, #80	; 0x50
   2550c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   25510:	bl	3ed0c <__assert_fail@plt+0x2da9c>
   25514:	str	r0, [fp, #-60]	; 0xffffffc4
   25518:	ldr	r3, [fp, #-8]
   2551c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   25520:	add	r3, r2, r3
   25524:	mov	r2, r3
   25528:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2552c:	sub	r3, r2, r3
   25530:	mov	r2, r3
   25534:	ldr	r3, [fp, #-60]	; 0xffffffc4
   25538:	cmp	r2, r3
   2553c:	bhi	255c4 <__assert_fail@plt+0x14354>
   25540:	ldr	r3, [fp, #-60]	; 0xffffffc4
   25544:	cmn	r3, #3
   25548:	bhi	255c4 <__assert_fail@plt+0x14354>
   2554c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   25550:	add	r3, r3, #16
   25554:	mov	r2, #8
   25558:	mov	r1, #0
   2555c:	mov	r0, r3
   25560:	bl	111bc <memset@plt>
   25564:	ldr	r3, [fp, #-8]
   25568:	ldr	r2, [fp, #-52]	; 0xffffffcc
   2556c:	add	r3, r2, r3
   25570:	mov	r2, r3
   25574:	ldr	r3, [fp, #-28]	; 0xffffffe4
   25578:	sub	r3, r2, r3
   2557c:	mov	r2, r3
   25580:	ldr	r3, [fp, #-60]	; 0xffffffc4
   25584:	sub	r3, r3, r2
   25588:	mov	r2, r3
   2558c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   25590:	str	r2, [r3, #28]
   25594:	ldr	r3, [fp, #-80]	; 0xffffffb0
   25598:	str	r3, [fp, #-68]	; 0xffffffbc
   2559c:	nop			; (mov r0, r0)
   255a0:	b	255c4 <__assert_fail@plt+0x14354>
   255a4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   255a8:	sub	r3, r3, #1
   255ac:	str	r3, [fp, #-28]	; 0xffffffe4
   255b0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   255b4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   255b8:	cmp	r2, r3
   255bc:	bcs	25420 <__assert_fail@plt+0x141b0>
   255c0:	b	255c8 <__assert_fail@plt+0x14358>
   255c4:	nop			; (mov r0, r0)
   255c8:	ldr	r3, [fp, #-68]	; 0xffffffbc
   255cc:	cmn	r3, #1
   255d0:	bne	255fc <__assert_fail@plt+0x1438c>
   255d4:	sub	r3, fp, #68	; 0x44
   255d8:	mov	r2, r3
   255dc:	ldr	r1, [fp, #-100]	; 0xffffff9c
   255e0:	ldr	r0, [fp, #-96]	; 0xffffffa0
   255e4:	bl	24960 <__assert_fail@plt+0x136f0>
   255e8:	mov	r2, r0
   255ec:	ldr	r3, [fp, #-100]	; 0xffffff9c
   255f0:	sub	r2, r2, r3
   255f4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   255f8:	str	r2, [r3, #28]
   255fc:	ldr	r3, [fp, #-68]	; 0xffffffbc
   25600:	cmn	r3, #1
   25604:	bne	25630 <__assert_fail@plt+0x143c0>
   25608:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2560c:	sub	r3, r3, #1
   25610:	ldr	r2, [fp, #-104]	; 0xffffff98
   25614:	mov	r1, r3
   25618:	ldr	r0, [fp, #-96]	; 0xffffffa0
   2561c:	bl	25d10 <__assert_fail@plt+0x14aa0>
   25620:	mov	r2, r0
   25624:	ldr	r3, [fp, #-96]	; 0xffffffa0
   25628:	str	r2, [r3, #60]	; 0x3c
   2562c:	b	256ac <__assert_fail@plt+0x1443c>
   25630:	ldr	r3, [fp, #-96]	; 0xffffffa0
   25634:	ldrb	r3, [r3, #78]	; 0x4e
   25638:	cmp	r3, #0
   2563c:	movne	r3, #1
   25640:	moveq	r3, #0
   25644:	uxtb	r3, r3
   25648:	cmp	r3, #0
   2564c:	beq	25674 <__assert_fail@plt+0x14404>
   25650:	ldr	r3, [fp, #-68]	; 0xffffffbc
   25654:	mov	r0, r3
   25658:	bl	111a4 <iswalnum@plt>
   2565c:	mov	r3, r0
   25660:	cmp	r3, #0
   25664:	bne	256a0 <__assert_fail@plt+0x14430>
   25668:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2566c:	cmp	r3, #95	; 0x5f
   25670:	beq	256a0 <__assert_fail@plt+0x14430>
   25674:	ldr	r3, [fp, #-68]	; 0xffffffbc
   25678:	cmp	r3, #10
   2567c:	bne	25698 <__assert_fail@plt+0x14428>
   25680:	ldr	r3, [fp, #-96]	; 0xffffffa0
   25684:	ldrb	r3, [r3, #77]	; 0x4d
   25688:	cmp	r3, #0
   2568c:	beq	25698 <__assert_fail@plt+0x14428>
   25690:	mov	r3, #2
   25694:	b	256a4 <__assert_fail@plt+0x14434>
   25698:	mov	r3, #0
   2569c:	b	256a4 <__assert_fail@plt+0x14434>
   256a0:	mov	r3, #1
   256a4:	ldr	r2, [fp, #-96]	; 0xffffffa0
   256a8:	str	r3, [r2, #60]	; 0x3c
   256ac:	ldr	r3, [fp, #-96]	; 0xffffffa0
   256b0:	ldr	r3, [r3, #28]
   256b4:	cmp	r3, #0
   256b8:	beq	25730 <__assert_fail@plt+0x144c0>
   256bc:	mov	r3, #0
   256c0:	str	r3, [fp, #-24]	; 0xffffffe8
   256c4:	b	256f0 <__assert_fail@plt+0x14480>
   256c8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   256cc:	ldr	r2, [r3, #8]
   256d0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   256d4:	lsl	r3, r3, #2
   256d8:	add	r3, r2, r3
   256dc:	mvn	r2, #0
   256e0:	str	r2, [r3]
   256e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   256e8:	add	r3, r3, #1
   256ec:	str	r3, [fp, #-24]	; 0xffffffe8
   256f0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   256f4:	ldr	r2, [r3, #28]
   256f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   256fc:	cmp	r2, r3
   25700:	bgt	256c8 <__assert_fail@plt+0x14458>
   25704:	ldr	r3, [fp, #-96]	; 0xffffffa0
   25708:	ldrb	r3, [r3, #75]	; 0x4b
   2570c:	cmp	r3, #0
   25710:	beq	25730 <__assert_fail@plt+0x144c0>
   25714:	ldr	r3, [fp, #-96]	; 0xffffffa0
   25718:	ldr	r0, [r3, #4]
   2571c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   25720:	ldr	r3, [r3, #28]
   25724:	mov	r2, r3
   25728:	mov	r1, #255	; 0xff
   2572c:	bl	111bc <memset@plt>
   25730:	ldr	r3, [fp, #-96]	; 0xffffffa0
   25734:	ldr	r2, [r3, #28]
   25738:	ldr	r3, [fp, #-96]	; 0xffffffa0
   2573c:	str	r2, [r3, #32]
   25740:	b	257f8 <__assert_fail@plt+0x14588>
   25744:	ldr	r3, [fp, #-96]	; 0xffffffa0
   25748:	ldr	r2, [r3]
   2574c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   25750:	ldr	r1, [r3, #24]
   25754:	ldr	r3, [fp, #-8]
   25758:	add	r3, r1, r3
   2575c:	sub	r3, r3, #1
   25760:	add	r3, r2, r3
   25764:	ldrb	r3, [r3]
   25768:	str	r3, [fp, #-44]	; 0xffffffd4
   2576c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   25770:	mov	r2, #0
   25774:	str	r2, [r3, #32]
   25778:	ldr	r3, [fp, #-96]	; 0xffffffa0
   2577c:	ldr	r3, [r3, #64]	; 0x40
   25780:	cmp	r3, #0
   25784:	beq	257a0 <__assert_fail@plt+0x14530>
   25788:	ldr	r3, [fp, #-96]	; 0xffffffa0
   2578c:	ldr	r2, [r3, #64]	; 0x40
   25790:	ldr	r3, [fp, #-44]	; 0xffffffd4
   25794:	add	r3, r2, r3
   25798:	ldrb	r3, [r3]
   2579c:	str	r3, [fp, #-44]	; 0xffffffd4
   257a0:	ldr	r3, [fp, #-96]	; 0xffffffa0
   257a4:	ldr	r3, [r3, #68]	; 0x44
   257a8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   257ac:	mov	r0, r3
   257b0:	bl	230e8 <__assert_fail@plt+0x11e78>
   257b4:	mov	r3, r0
   257b8:	cmp	r3, #0
   257bc:	bne	257ec <__assert_fail@plt+0x1457c>
   257c0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   257c4:	cmp	r3, #10
   257c8:	bne	257e4 <__assert_fail@plt+0x14574>
   257cc:	ldr	r3, [fp, #-96]	; 0xffffffa0
   257d0:	ldrb	r3, [r3, #77]	; 0x4d
   257d4:	cmp	r3, #0
   257d8:	beq	257e4 <__assert_fail@plt+0x14574>
   257dc:	mov	r3, #2
   257e0:	b	257f0 <__assert_fail@plt+0x14580>
   257e4:	mov	r3, #0
   257e8:	b	257f0 <__assert_fail@plt+0x14580>
   257ec:	mov	r3, #1
   257f0:	ldr	r2, [fp, #-96]	; 0xffffffa0
   257f4:	str	r3, [r2, #60]	; 0x3c
   257f8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   257fc:	ldrb	r3, [r3, #75]	; 0x4b
   25800:	cmp	r3, #0
   25804:	bne	25820 <__assert_fail@plt+0x145b0>
   25808:	ldr	r3, [fp, #-96]	; 0xffffffa0
   2580c:	ldr	r2, [r3, #4]
   25810:	ldr	r3, [fp, #-8]
   25814:	add	r2, r2, r3
   25818:	ldr	r3, [fp, #-96]	; 0xffffffa0
   2581c:	str	r2, [r3, #4]
   25820:	ldr	r3, [fp, #-96]	; 0xffffffa0
   25824:	ldr	r2, [fp, #-100]	; 0xffffff9c
   25828:	str	r2, [r3, #24]
   2582c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   25830:	ldr	r2, [r3, #48]	; 0x30
   25834:	ldr	r3, [fp, #-8]
   25838:	sub	r2, r2, r3
   2583c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   25840:	str	r2, [r3, #48]	; 0x30
   25844:	ldr	r3, [fp, #-96]	; 0xffffffa0
   25848:	ldr	r2, [r3, #56]	; 0x38
   2584c:	ldr	r3, [fp, #-8]
   25850:	sub	r2, r2, r3
   25854:	ldr	r3, [fp, #-96]	; 0xffffffa0
   25858:	str	r2, [r3, #56]	; 0x38
   2585c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   25860:	ldr	r3, [r3, #80]	; 0x50
   25864:	cmp	r3, #1
   25868:	ble	258b8 <__assert_fail@plt+0x14648>
   2586c:	ldr	r3, [fp, #-96]	; 0xffffffa0
   25870:	ldrb	r3, [r3, #72]	; 0x48
   25874:	cmp	r3, #0
   25878:	beq	258ac <__assert_fail@plt+0x1463c>
   2587c:	ldr	r0, [fp, #-96]	; 0xffffffa0
   25880:	bl	23e28 <__assert_fail@plt+0x12bb8>
   25884:	str	r0, [fp, #-64]	; 0xffffffc0
   25888:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2588c:	cmp	r3, #0
   25890:	movne	r3, #1
   25894:	moveq	r3, #0
   25898:	uxtb	r3, r3
   2589c:	cmp	r3, #0
   258a0:	beq	25910 <__assert_fail@plt+0x146a0>
   258a4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   258a8:	b	25920 <__assert_fail@plt+0x146b0>
   258ac:	ldr	r0, [fp, #-96]	; 0xffffffa0
   258b0:	bl	23ab0 <__assert_fail@plt+0x12840>
   258b4:	b	25910 <__assert_fail@plt+0x146a0>
   258b8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   258bc:	ldrb	r3, [r3, #75]	; 0x4b
   258c0:	cmp	r3, #0
   258c4:	beq	25900 <__assert_fail@plt+0x14690>
   258c8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   258cc:	ldrb	r3, [r3, #72]	; 0x48
   258d0:	cmp	r3, #0
   258d4:	beq	258e4 <__assert_fail@plt+0x14674>
   258d8:	ldr	r0, [fp, #-96]	; 0xffffffa0
   258dc:	bl	24af4 <__assert_fail@plt+0x13884>
   258e0:	b	25910 <__assert_fail@plt+0x146a0>
   258e4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   258e8:	ldr	r3, [r3, #64]	; 0x40
   258ec:	cmp	r3, #0
   258f0:	beq	25910 <__assert_fail@plt+0x146a0>
   258f4:	ldr	r0, [fp, #-96]	; 0xffffffa0
   258f8:	bl	24bf4 <__assert_fail@plt+0x13984>
   258fc:	b	25910 <__assert_fail@plt+0x146a0>
   25900:	ldr	r3, [fp, #-96]	; 0xffffffa0
   25904:	ldr	r2, [r3, #48]	; 0x30
   25908:	ldr	r3, [fp, #-96]	; 0xffffffa0
   2590c:	str	r2, [r3, #28]
   25910:	ldr	r3, [fp, #-96]	; 0xffffffa0
   25914:	mov	r2, #0
   25918:	str	r2, [r3, #40]	; 0x28
   2591c:	mov	r3, #0
   25920:	mov	r0, r3
   25924:	sub	sp, fp, #4
   25928:	pop	{fp, pc}
   2592c:	push	{fp}		; (str fp, [sp, #-4]!)
   25930:	add	fp, sp, #0
   25934:	sub	sp, sp, #20
   25938:	str	r0, [fp, #-16]
   2593c:	str	r1, [fp, #-20]	; 0xffffffec
   25940:	ldr	r3, [fp, #-16]
   25944:	ldrb	r3, [r3, #75]	; 0x4b
   25948:	cmp	r3, #0
   2594c:	moveq	r3, #1
   25950:	movne	r3, #0
   25954:	uxtb	r3, r3
   25958:	cmp	r3, #0
   2595c:	beq	25984 <__assert_fail@plt+0x14714>
   25960:	ldr	r3, [fp, #-16]
   25964:	ldr	r3, [r3, #4]
   25968:	ldr	r2, [fp, #-16]
   2596c:	ldr	r1, [r2, #40]	; 0x28
   25970:	ldr	r2, [fp, #-20]	; 0xffffffec
   25974:	add	r2, r1, r2
   25978:	add	r3, r3, r2
   2597c:	ldrb	r3, [r3]
   25980:	b	25ae8 <__assert_fail@plt+0x14878>
   25984:	ldr	r3, [fp, #-16]
   25988:	ldr	r3, [r3, #80]	; 0x50
   2598c:	cmp	r3, #1
   25990:	ble	25a38 <__assert_fail@plt+0x147c8>
   25994:	ldr	r3, [fp, #-16]
   25998:	ldr	r2, [r3, #8]
   2599c:	ldr	r3, [fp, #-16]
   259a0:	ldr	r1, [r3, #40]	; 0x28
   259a4:	ldr	r3, [fp, #-20]	; 0xffffffec
   259a8:	add	r3, r1, r3
   259ac:	lsl	r3, r3, #2
   259b0:	add	r3, r2, r3
   259b4:	ldr	r3, [r3]
   259b8:	cmn	r3, #1
   259bc:	beq	25a14 <__assert_fail@plt+0x147a4>
   259c0:	ldr	r3, [fp, #-16]
   259c4:	ldr	r2, [r3, #28]
   259c8:	ldr	r3, [fp, #-16]
   259cc:	ldr	r1, [r3, #40]	; 0x28
   259d0:	ldr	r3, [fp, #-20]	; 0xffffffec
   259d4:	add	r3, r1, r3
   259d8:	add	r3, r3, #1
   259dc:	cmp	r2, r3
   259e0:	beq	25a38 <__assert_fail@plt+0x147c8>
   259e4:	ldr	r3, [fp, #-16]
   259e8:	ldr	r2, [r3, #8]
   259ec:	ldr	r3, [fp, #-16]
   259f0:	ldr	r1, [r3, #40]	; 0x28
   259f4:	ldr	r3, [fp, #-20]	; 0xffffffec
   259f8:	add	r3, r1, r3
   259fc:	add	r3, r3, #1
   25a00:	lsl	r3, r3, #2
   25a04:	add	r3, r2, r3
   25a08:	ldr	r3, [r3]
   25a0c:	cmn	r3, #1
   25a10:	bne	25a38 <__assert_fail@plt+0x147c8>
   25a14:	ldr	r3, [fp, #-16]
   25a18:	ldr	r3, [r3, #4]
   25a1c:	ldr	r2, [fp, #-16]
   25a20:	ldr	r1, [r2, #40]	; 0x28
   25a24:	ldr	r2, [fp, #-20]	; 0xffffffec
   25a28:	add	r2, r1, r2
   25a2c:	add	r3, r3, r2
   25a30:	ldrb	r3, [r3]
   25a34:	b	25ae8 <__assert_fail@plt+0x14878>
   25a38:	ldr	r3, [fp, #-16]
   25a3c:	ldr	r2, [r3, #40]	; 0x28
   25a40:	ldr	r3, [fp, #-20]	; 0xffffffec
   25a44:	add	r3, r2, r3
   25a48:	str	r3, [fp, #-8]
   25a4c:	ldr	r3, [fp, #-16]
   25a50:	ldrb	r3, [r3, #76]	; 0x4c
   25a54:	cmp	r3, #0
   25a58:	beq	25a78 <__assert_fail@plt+0x14808>
   25a5c:	ldr	r3, [fp, #-16]
   25a60:	ldr	r2, [r3, #12]
   25a64:	ldr	r3, [fp, #-8]
   25a68:	lsl	r3, r3, #2
   25a6c:	add	r3, r2, r3
   25a70:	ldr	r3, [r3]
   25a74:	str	r3, [fp, #-8]
   25a78:	ldr	r3, [fp, #-16]
   25a7c:	ldr	r3, [r3]
   25a80:	ldr	r2, [fp, #-16]
   25a84:	ldr	r1, [r2, #24]
   25a88:	ldr	r2, [fp, #-8]
   25a8c:	add	r2, r1, r2
   25a90:	add	r3, r3, r2
   25a94:	ldrb	r3, [r3]
   25a98:	str	r3, [fp, #-12]
   25a9c:	ldr	r3, [fp, #-16]
   25aa0:	ldrb	r3, [r3, #76]	; 0x4c
   25aa4:	cmp	r3, #0
   25aa8:	beq	25ae0 <__assert_fail@plt+0x14870>
   25aac:	ldr	r3, [fp, #-12]
   25ab0:	bic	r3, r3, #127	; 0x7f
   25ab4:	cmp	r3, #0
   25ab8:	beq	25ae0 <__assert_fail@plt+0x14870>
   25abc:	ldr	r3, [fp, #-16]
   25ac0:	ldr	r3, [r3, #4]
   25ac4:	ldr	r2, [fp, #-16]
   25ac8:	ldr	r1, [r2, #40]	; 0x28
   25acc:	ldr	r2, [fp, #-20]	; 0xffffffec
   25ad0:	add	r2, r1, r2
   25ad4:	add	r3, r3, r2
   25ad8:	ldrb	r3, [r3]
   25adc:	b	25ae8 <__assert_fail@plt+0x14878>
   25ae0:	ldr	r3, [fp, #-12]
   25ae4:	uxtb	r3, r3
   25ae8:	mov	r0, r3
   25aec:	add	sp, fp, #0
   25af0:	pop	{fp}		; (ldr fp, [sp], #4)
   25af4:	bx	lr
   25af8:	push	{r4, fp, lr}
   25afc:	add	fp, sp, #8
   25b00:	sub	sp, sp, #20
   25b04:	str	r0, [fp, #-24]	; 0xffffffe8
   25b08:	ldr	r3, [fp, #-24]	; 0xffffffe8
   25b0c:	ldrb	r3, [r3, #75]	; 0x4b
   25b10:	cmp	r3, #0
   25b14:	moveq	r3, #1
   25b18:	movne	r3, #0
   25b1c:	uxtb	r3, r3
   25b20:	cmp	r3, #0
   25b24:	beq	25b50 <__assert_fail@plt+0x148e0>
   25b28:	ldr	r3, [fp, #-24]	; 0xffffffe8
   25b2c:	ldr	r2, [r3, #4]
   25b30:	ldr	r3, [fp, #-24]	; 0xffffffe8
   25b34:	ldr	r3, [r3, #40]	; 0x28
   25b38:	add	r0, r3, #1
   25b3c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   25b40:	str	r0, [r1, #40]	; 0x28
   25b44:	add	r3, r2, r3
   25b48:	ldrb	r3, [r3]
   25b4c:	b	25ca8 <__assert_fail@plt+0x14a38>
   25b50:	ldr	r3, [fp, #-24]	; 0xffffffe8
   25b54:	ldrb	r3, [r3, #76]	; 0x4c
   25b58:	cmp	r3, #0
   25b5c:	beq	25c78 <__assert_fail@plt+0x14a08>
   25b60:	ldr	r3, [fp, #-24]	; 0xffffffe8
   25b64:	ldr	r2, [r3, #40]	; 0x28
   25b68:	ldr	r3, [fp, #-24]	; 0xffffffe8
   25b6c:	ldr	r3, [r3, #28]
   25b70:	cmp	r2, r3
   25b74:	beq	25bc4 <__assert_fail@plt+0x14954>
   25b78:	ldr	r3, [fp, #-24]	; 0xffffffe8
   25b7c:	ldr	r2, [r3, #8]
   25b80:	ldr	r3, [fp, #-24]	; 0xffffffe8
   25b84:	ldr	r3, [r3, #40]	; 0x28
   25b88:	lsl	r3, r3, #2
   25b8c:	add	r3, r2, r3
   25b90:	ldr	r3, [r3]
   25b94:	cmn	r3, #1
   25b98:	bne	25bc4 <__assert_fail@plt+0x14954>
   25b9c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   25ba0:	ldr	r2, [r3, #4]
   25ba4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   25ba8:	ldr	r3, [r3, #40]	; 0x28
   25bac:	add	r0, r3, #1
   25bb0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   25bb4:	str	r0, [r1, #40]	; 0x28
   25bb8:	add	r3, r2, r3
   25bbc:	ldrb	r3, [r3]
   25bc0:	b	25ca8 <__assert_fail@plt+0x14a38>
   25bc4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   25bc8:	ldr	r2, [r3, #12]
   25bcc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   25bd0:	ldr	r3, [r3, #40]	; 0x28
   25bd4:	lsl	r3, r3, #2
   25bd8:	add	r3, r2, r3
   25bdc:	ldr	r3, [r3]
   25be0:	str	r3, [fp, #-16]
   25be4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   25be8:	ldr	r3, [r3]
   25bec:	ldr	r2, [fp, #-24]	; 0xffffffe8
   25bf0:	ldr	r1, [r2, #24]
   25bf4:	ldr	r2, [fp, #-16]
   25bf8:	add	r2, r1, r2
   25bfc:	add	r3, r3, r2
   25c00:	ldrb	r3, [r3]
   25c04:	str	r3, [fp, #-20]	; 0xffffffec
   25c08:	ldr	r3, [fp, #-20]	; 0xffffffec
   25c0c:	bic	r3, r3, #127	; 0x7f
   25c10:	cmp	r3, #0
   25c14:	beq	25c40 <__assert_fail@plt+0x149d0>
   25c18:	ldr	r3, [fp, #-24]	; 0xffffffe8
   25c1c:	ldr	r2, [r3, #4]
   25c20:	ldr	r3, [fp, #-24]	; 0xffffffe8
   25c24:	ldr	r3, [r3, #40]	; 0x28
   25c28:	add	r0, r3, #1
   25c2c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   25c30:	str	r0, [r1, #40]	; 0x28
   25c34:	add	r3, r2, r3
   25c38:	ldrb	r3, [r3]
   25c3c:	b	25ca8 <__assert_fail@plt+0x14a38>
   25c40:	ldr	r3, [fp, #-24]	; 0xffffffe8
   25c44:	ldr	r4, [r3, #40]	; 0x28
   25c48:	ldr	r3, [fp, #-24]	; 0xffffffe8
   25c4c:	ldr	r3, [r3, #40]	; 0x28
   25c50:	mov	r1, r3
   25c54:	ldr	r0, [fp, #-24]	; 0xffffffe8
   25c58:	bl	2336c <__assert_fail@plt+0x120fc>
   25c5c:	mov	r3, r0
   25c60:	add	r2, r4, r3
   25c64:	ldr	r3, [fp, #-24]	; 0xffffffe8
   25c68:	str	r2, [r3, #40]	; 0x28
   25c6c:	ldr	r3, [fp, #-20]	; 0xffffffec
   25c70:	uxtb	r3, r3
   25c74:	b	25ca8 <__assert_fail@plt+0x14a38>
   25c78:	ldr	r3, [fp, #-24]	; 0xffffffe8
   25c7c:	ldr	r2, [r3]
   25c80:	ldr	r3, [fp, #-24]	; 0xffffffe8
   25c84:	ldr	r1, [r3, #24]
   25c88:	ldr	r3, [fp, #-24]	; 0xffffffe8
   25c8c:	ldr	r3, [r3, #40]	; 0x28
   25c90:	add	ip, r3, #1
   25c94:	ldr	r0, [fp, #-24]	; 0xffffffe8
   25c98:	str	ip, [r0, #40]	; 0x28
   25c9c:	add	r3, r1, r3
   25ca0:	add	r3, r2, r3
   25ca4:	ldrb	r3, [r3]
   25ca8:	mov	r0, r3
   25cac:	sub	sp, fp, #8
   25cb0:	pop	{r4, fp, pc}
   25cb4:	push	{fp, lr}
   25cb8:	add	fp, sp, #4
   25cbc:	sub	sp, sp, #8
   25cc0:	str	r0, [fp, #-8]
   25cc4:	ldr	r3, [fp, #-8]
   25cc8:	ldr	r3, [r3, #8]
   25ccc:	mov	r0, r3
   25cd0:	bl	13630 <__assert_fail@plt+0x23c0>
   25cd4:	ldr	r3, [fp, #-8]
   25cd8:	ldr	r3, [r3, #12]
   25cdc:	mov	r0, r3
   25ce0:	bl	13630 <__assert_fail@plt+0x23c0>
   25ce4:	ldr	r3, [fp, #-8]
   25ce8:	ldrb	r3, [r3, #75]	; 0x4b
   25cec:	cmp	r3, #0
   25cf0:	beq	25d04 <__assert_fail@plt+0x14a94>
   25cf4:	ldr	r3, [fp, #-8]
   25cf8:	ldr	r3, [r3, #4]
   25cfc:	mov	r0, r3
   25d00:	bl	13630 <__assert_fail@plt+0x23c0>
   25d04:	nop			; (mov r0, r0)
   25d08:	sub	sp, fp, #4
   25d0c:	pop	{fp, pc}
   25d10:	push	{fp, lr}
   25d14:	add	fp, sp, #4
   25d18:	sub	sp, sp, #32
   25d1c:	str	r0, [fp, #-24]	; 0xffffffe8
   25d20:	str	r1, [fp, #-28]	; 0xffffffe4
   25d24:	str	r2, [fp, #-32]	; 0xffffffe0
   25d28:	ldr	r3, [fp, #-28]	; 0xffffffe4
   25d2c:	lsr	r3, r3, #31
   25d30:	uxtb	r3, r3
   25d34:	cmp	r3, #0
   25d38:	beq	25d48 <__assert_fail@plt+0x14ad8>
   25d3c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   25d40:	ldr	r3, [r3, #60]	; 0x3c
   25d44:	b	25eec <__assert_fail@plt+0x14c7c>
   25d48:	ldr	r3, [fp, #-24]	; 0xffffffe8
   25d4c:	ldr	r2, [r3, #48]	; 0x30
   25d50:	ldr	r3, [fp, #-28]	; 0xffffffe4
   25d54:	cmp	r2, r3
   25d58:	moveq	r3, #1
   25d5c:	movne	r3, #0
   25d60:	uxtb	r3, r3
   25d64:	cmp	r3, #0
   25d68:	beq	25d8c <__assert_fail@plt+0x14b1c>
   25d6c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   25d70:	and	r3, r3, #2
   25d74:	cmp	r3, #0
   25d78:	beq	25d84 <__assert_fail@plt+0x14b14>
   25d7c:	mov	r3, #8
   25d80:	b	25eec <__assert_fail@plt+0x14c7c>
   25d84:	mov	r3, #10
   25d88:	b	25eec <__assert_fail@plt+0x14c7c>
   25d8c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   25d90:	ldr	r3, [r3, #80]	; 0x50
   25d94:	cmp	r3, #1
   25d98:	ble	25e84 <__assert_fail@plt+0x14c14>
   25d9c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   25da0:	str	r3, [fp, #-8]
   25da4:	b	25dd4 <__assert_fail@plt+0x14b64>
   25da8:	ldr	r3, [fp, #-8]
   25dac:	cmp	r3, #0
   25db0:	ldr	r3, [fp, #-8]
   25db4:	sub	r3, r3, #1
   25db8:	str	r3, [fp, #-8]
   25dbc:	ldr	r3, [fp, #-8]
   25dc0:	cmp	r3, #0
   25dc4:	bge	25dd4 <__assert_fail@plt+0x14b64>
   25dc8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   25dcc:	ldr	r3, [r3, #60]	; 0x3c
   25dd0:	b	25eec <__assert_fail@plt+0x14c7c>
   25dd4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   25dd8:	ldr	r2, [r3, #8]
   25ddc:	ldr	r3, [fp, #-8]
   25de0:	lsl	r3, r3, #2
   25de4:	add	r3, r2, r3
   25de8:	ldr	r3, [r3]
   25dec:	cmn	r3, #1
   25df0:	beq	25da8 <__assert_fail@plt+0x14b38>
   25df4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   25df8:	ldr	r2, [r3, #8]
   25dfc:	ldr	r3, [fp, #-8]
   25e00:	lsl	r3, r3, #2
   25e04:	add	r3, r2, r3
   25e08:	ldr	r3, [r3]
   25e0c:	str	r3, [fp, #-12]
   25e10:	ldr	r3, [fp, #-24]	; 0xffffffe8
   25e14:	ldrb	r3, [r3, #78]	; 0x4e
   25e18:	cmp	r3, #0
   25e1c:	movne	r3, #1
   25e20:	moveq	r3, #0
   25e24:	uxtb	r3, r3
   25e28:	cmp	r3, #0
   25e2c:	beq	25e58 <__assert_fail@plt+0x14be8>
   25e30:	ldr	r0, [fp, #-12]
   25e34:	bl	111a4 <iswalnum@plt>
   25e38:	mov	r3, r0
   25e3c:	cmp	r3, #0
   25e40:	bne	25e50 <__assert_fail@plt+0x14be0>
   25e44:	ldr	r3, [fp, #-12]
   25e48:	cmp	r3, #95	; 0x5f
   25e4c:	bne	25e58 <__assert_fail@plt+0x14be8>
   25e50:	mov	r3, #1
   25e54:	b	25eec <__assert_fail@plt+0x14c7c>
   25e58:	ldr	r3, [fp, #-12]
   25e5c:	cmp	r3, #10
   25e60:	bne	25e7c <__assert_fail@plt+0x14c0c>
   25e64:	ldr	r3, [fp, #-24]	; 0xffffffe8
   25e68:	ldrb	r3, [r3, #77]	; 0x4d
   25e6c:	cmp	r3, #0
   25e70:	beq	25e7c <__assert_fail@plt+0x14c0c>
   25e74:	mov	r3, #2
   25e78:	b	25eec <__assert_fail@plt+0x14c7c>
   25e7c:	mov	r3, #0
   25e80:	b	25eec <__assert_fail@plt+0x14c7c>
   25e84:	ldr	r3, [fp, #-24]	; 0xffffffe8
   25e88:	ldr	r2, [r3, #4]
   25e8c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   25e90:	add	r3, r2, r3
   25e94:	ldrb	r3, [r3]
   25e98:	str	r3, [fp, #-16]
   25e9c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   25ea0:	ldr	r3, [r3, #68]	; 0x44
   25ea4:	ldr	r1, [fp, #-16]
   25ea8:	mov	r0, r3
   25eac:	bl	230e8 <__assert_fail@plt+0x11e78>
   25eb0:	mov	r3, r0
   25eb4:	cmp	r3, #0
   25eb8:	beq	25ec4 <__assert_fail@plt+0x14c54>
   25ebc:	mov	r3, #1
   25ec0:	b	25eec <__assert_fail@plt+0x14c7c>
   25ec4:	ldr	r3, [fp, #-16]
   25ec8:	cmp	r3, #10
   25ecc:	bne	25ee8 <__assert_fail@plt+0x14c78>
   25ed0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   25ed4:	ldrb	r3, [r3, #77]	; 0x4d
   25ed8:	cmp	r3, #0
   25edc:	beq	25ee8 <__assert_fail@plt+0x14c78>
   25ee0:	mov	r3, #2
   25ee4:	b	25eec <__assert_fail@plt+0x14c7c>
   25ee8:	mov	r3, #0
   25eec:	mov	r0, r3
   25ef0:	sub	sp, fp, #4
   25ef4:	pop	{fp, pc}
   25ef8:	push	{fp, lr}
   25efc:	add	fp, sp, #4
   25f00:	sub	sp, sp, #8
   25f04:	str	r0, [fp, #-8]
   25f08:	str	r1, [fp, #-12]
   25f0c:	ldr	r3, [fp, #-8]
   25f10:	ldr	r2, [fp, #-12]
   25f14:	str	r2, [r3]
   25f18:	ldr	r3, [fp, #-8]
   25f1c:	mov	r2, #0
   25f20:	str	r2, [r3, #4]
   25f24:	ldr	r3, [fp, #-12]
   25f28:	lsl	r3, r3, #2
   25f2c:	mov	r0, r3
   25f30:	bl	3df98 <__assert_fail@plt+0x2cd28>
   25f34:	mov	r3, r0
   25f38:	mov	r2, r3
   25f3c:	ldr	r3, [fp, #-8]
   25f40:	str	r2, [r3, #8]
   25f44:	ldr	r3, [fp, #-8]
   25f48:	ldr	r3, [r3, #8]
   25f4c:	cmp	r3, #0
   25f50:	moveq	r3, #1
   25f54:	movne	r3, #0
   25f58:	uxtb	r3, r3
   25f5c:	cmp	r3, #0
   25f60:	beq	25f6c <__assert_fail@plt+0x14cfc>
   25f64:	mov	r3, #12
   25f68:	b	25f70 <__assert_fail@plt+0x14d00>
   25f6c:	mov	r3, #0
   25f70:	mov	r0, r3
   25f74:	sub	sp, fp, #4
   25f78:	pop	{fp, pc}
   25f7c:	push	{fp, lr}
   25f80:	add	fp, sp, #4
   25f84:	sub	sp, sp, #8
   25f88:	str	r0, [fp, #-8]
   25f8c:	str	r1, [fp, #-12]
   25f90:	ldr	r3, [fp, #-8]
   25f94:	mov	r2, #1
   25f98:	str	r2, [r3]
   25f9c:	ldr	r3, [fp, #-8]
   25fa0:	mov	r2, #1
   25fa4:	str	r2, [r3, #4]
   25fa8:	mov	r0, #4
   25fac:	bl	3df98 <__assert_fail@plt+0x2cd28>
   25fb0:	mov	r3, r0
   25fb4:	mov	r2, r3
   25fb8:	ldr	r3, [fp, #-8]
   25fbc:	str	r2, [r3, #8]
   25fc0:	ldr	r3, [fp, #-8]
   25fc4:	ldr	r3, [r3, #8]
   25fc8:	cmp	r3, #0
   25fcc:	moveq	r3, #1
   25fd0:	movne	r3, #0
   25fd4:	uxtb	r3, r3
   25fd8:	cmp	r3, #0
   25fdc:	beq	26004 <__assert_fail@plt+0x14d94>
   25fe0:	ldr	r3, [fp, #-8]
   25fe4:	mov	r2, #0
   25fe8:	str	r2, [r3, #4]
   25fec:	ldr	r3, [fp, #-8]
   25ff0:	ldr	r2, [r3, #4]
   25ff4:	ldr	r3, [fp, #-8]
   25ff8:	str	r2, [r3]
   25ffc:	mov	r3, #12
   26000:	b	26018 <__assert_fail@plt+0x14da8>
   26004:	ldr	r3, [fp, #-8]
   26008:	ldr	r3, [r3, #8]
   2600c:	ldr	r2, [fp, #-12]
   26010:	str	r2, [r3]
   26014:	mov	r3, #0
   26018:	mov	r0, r3
   2601c:	sub	sp, fp, #4
   26020:	pop	{fp, pc}
   26024:	push	{fp, lr}
   26028:	add	fp, sp, #4
   2602c:	sub	sp, sp, #16
   26030:	str	r0, [fp, #-8]
   26034:	str	r1, [fp, #-12]
   26038:	str	r2, [fp, #-16]
   2603c:	ldr	r3, [fp, #-8]
   26040:	mov	r2, #2
   26044:	str	r2, [r3]
   26048:	mov	r0, #8
   2604c:	bl	3df98 <__assert_fail@plt+0x2cd28>
   26050:	mov	r3, r0
   26054:	mov	r2, r3
   26058:	ldr	r3, [fp, #-8]
   2605c:	str	r2, [r3, #8]
   26060:	ldr	r3, [fp, #-8]
   26064:	ldr	r3, [r3, #8]
   26068:	cmp	r3, #0
   2606c:	moveq	r3, #1
   26070:	movne	r3, #0
   26074:	uxtb	r3, r3
   26078:	cmp	r3, #0
   2607c:	beq	26088 <__assert_fail@plt+0x14e18>
   26080:	mov	r3, #12
   26084:	b	26124 <__assert_fail@plt+0x14eb4>
   26088:	ldr	r2, [fp, #-12]
   2608c:	ldr	r3, [fp, #-16]
   26090:	cmp	r2, r3
   26094:	bne	260b8 <__assert_fail@plt+0x14e48>
   26098:	ldr	r3, [fp, #-8]
   2609c:	mov	r2, #1
   260a0:	str	r2, [r3, #4]
   260a4:	ldr	r3, [fp, #-8]
   260a8:	ldr	r3, [r3, #8]
   260ac:	ldr	r2, [fp, #-12]
   260b0:	str	r2, [r3]
   260b4:	b	26120 <__assert_fail@plt+0x14eb0>
   260b8:	ldr	r3, [fp, #-8]
   260bc:	mov	r2, #2
   260c0:	str	r2, [r3, #4]
   260c4:	ldr	r2, [fp, #-12]
   260c8:	ldr	r3, [fp, #-16]
   260cc:	cmp	r2, r3
   260d0:	bge	260fc <__assert_fail@plt+0x14e8c>
   260d4:	ldr	r3, [fp, #-8]
   260d8:	ldr	r3, [r3, #8]
   260dc:	ldr	r2, [fp, #-12]
   260e0:	str	r2, [r3]
   260e4:	ldr	r3, [fp, #-8]
   260e8:	ldr	r3, [r3, #8]
   260ec:	add	r3, r3, #4
   260f0:	ldr	r2, [fp, #-16]
   260f4:	str	r2, [r3]
   260f8:	b	26120 <__assert_fail@plt+0x14eb0>
   260fc:	ldr	r3, [fp, #-8]
   26100:	ldr	r3, [r3, #8]
   26104:	ldr	r2, [fp, #-16]
   26108:	str	r2, [r3]
   2610c:	ldr	r3, [fp, #-8]
   26110:	ldr	r3, [r3, #8]
   26114:	add	r3, r3, #4
   26118:	ldr	r2, [fp, #-12]
   2611c:	str	r2, [r3]
   26120:	mov	r3, #0
   26124:	mov	r0, r3
   26128:	sub	sp, fp, #4
   2612c:	pop	{fp, pc}
   26130:	push	{fp, lr}
   26134:	add	fp, sp, #4
   26138:	sub	sp, sp, #8
   2613c:	str	r0, [fp, #-8]
   26140:	str	r1, [fp, #-12]
   26144:	ldr	r3, [fp, #-12]
   26148:	ldr	r2, [r3, #4]
   2614c:	ldr	r3, [fp, #-8]
   26150:	str	r2, [r3, #4]
   26154:	ldr	r3, [fp, #-12]
   26158:	ldr	r3, [r3, #4]
   2615c:	cmp	r3, #0
   26160:	ble	26204 <__assert_fail@plt+0x14f94>
   26164:	ldr	r3, [fp, #-8]
   26168:	ldr	r2, [r3, #4]
   2616c:	ldr	r3, [fp, #-8]
   26170:	str	r2, [r3]
   26174:	ldr	r3, [fp, #-8]
   26178:	ldr	r3, [r3]
   2617c:	lsl	r3, r3, #2
   26180:	mov	r0, r3
   26184:	bl	3df98 <__assert_fail@plt+0x2cd28>
   26188:	mov	r3, r0
   2618c:	mov	r2, r3
   26190:	ldr	r3, [fp, #-8]
   26194:	str	r2, [r3, #8]
   26198:	ldr	r3, [fp, #-8]
   2619c:	ldr	r3, [r3, #8]
   261a0:	cmp	r3, #0
   261a4:	moveq	r3, #1
   261a8:	movne	r3, #0
   261ac:	uxtb	r3, r3
   261b0:	cmp	r3, #0
   261b4:	beq	261dc <__assert_fail@plt+0x14f6c>
   261b8:	ldr	r3, [fp, #-8]
   261bc:	mov	r2, #0
   261c0:	str	r2, [r3, #4]
   261c4:	ldr	r3, [fp, #-8]
   261c8:	ldr	r2, [r3, #4]
   261cc:	ldr	r3, [fp, #-8]
   261d0:	str	r2, [r3]
   261d4:	mov	r3, #12
   261d8:	b	26218 <__assert_fail@plt+0x14fa8>
   261dc:	ldr	r3, [fp, #-8]
   261e0:	ldr	r0, [r3, #8]
   261e4:	ldr	r3, [fp, #-12]
   261e8:	ldr	r1, [r3, #8]
   261ec:	ldr	r3, [fp, #-12]
   261f0:	ldr	r3, [r3, #4]
   261f4:	lsl	r3, r3, #2
   261f8:	mov	r2, r3
   261fc:	bl	11018 <memcpy@plt>
   26200:	b	26214 <__assert_fail@plt+0x14fa4>
   26204:	mov	r2, #12
   26208:	mov	r1, #0
   2620c:	ldr	r0, [fp, #-8]
   26210:	bl	111bc <memset@plt>
   26214:	mov	r3, #0
   26218:	mov	r0, r3
   2621c:	sub	sp, fp, #4
   26220:	pop	{fp, pc}
   26224:	push	{fp, lr}
   26228:	add	fp, sp, #4
   2622c:	sub	sp, sp, #48	; 0x30
   26230:	str	r0, [fp, #-40]	; 0xffffffd8
   26234:	str	r1, [fp, #-44]	; 0xffffffd4
   26238:	str	r2, [fp, #-48]	; 0xffffffd0
   2623c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   26240:	ldr	r3, [r3, #4]
   26244:	cmp	r3, #0
   26248:	beq	2625c <__assert_fail@plt+0x14fec>
   2624c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   26250:	ldr	r3, [r3, #4]
   26254:	cmp	r3, #0
   26258:	bne	26264 <__assert_fail@plt+0x14ff4>
   2625c:	mov	r3, #0
   26260:	b	266b0 <__assert_fail@plt+0x15440>
   26264:	ldr	r3, [fp, #-44]	; 0xffffffd4
   26268:	ldr	r2, [r3, #4]
   2626c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   26270:	ldr	r3, [r3, #4]
   26274:	add	r2, r2, r3
   26278:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2627c:	ldr	r3, [r3, #4]
   26280:	add	r2, r2, r3
   26284:	ldr	r3, [fp, #-40]	; 0xffffffd8
   26288:	ldr	r3, [r3]
   2628c:	cmp	r2, r3
   26290:	ble	26314 <__assert_fail@plt+0x150a4>
   26294:	ldr	r3, [fp, #-44]	; 0xffffffd4
   26298:	ldr	r2, [r3, #4]
   2629c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   262a0:	ldr	r3, [r3, #4]
   262a4:	add	r2, r2, r3
   262a8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   262ac:	ldr	r3, [r3]
   262b0:	add	r3, r2, r3
   262b4:	str	r3, [fp, #-32]	; 0xffffffe0
   262b8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   262bc:	ldr	r2, [r3, #8]
   262c0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   262c4:	lsl	r3, r3, #2
   262c8:	mov	r1, r3
   262cc:	mov	r0, r2
   262d0:	bl	3e040 <__assert_fail@plt+0x2cdd0>
   262d4:	str	r0, [fp, #-36]	; 0xffffffdc
   262d8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   262dc:	cmp	r3, #0
   262e0:	moveq	r3, #1
   262e4:	movne	r3, #0
   262e8:	uxtb	r3, r3
   262ec:	cmp	r3, #0
   262f0:	beq	262fc <__assert_fail@plt+0x1508c>
   262f4:	mov	r3, #12
   262f8:	b	266b0 <__assert_fail@plt+0x15440>
   262fc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   26300:	ldr	r2, [fp, #-36]	; 0xffffffdc
   26304:	str	r2, [r3, #8]
   26308:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2630c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   26310:	str	r2, [r3]
   26314:	ldr	r3, [fp, #-40]	; 0xffffffd8
   26318:	ldr	r2, [r3, #4]
   2631c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   26320:	ldr	r3, [r3, #4]
   26324:	add	r2, r2, r3
   26328:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2632c:	ldr	r3, [r3, #4]
   26330:	add	r3, r2, r3
   26334:	str	r3, [fp, #-28]	; 0xffffffe4
   26338:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2633c:	ldr	r3, [r3, #4]
   26340:	sub	r3, r3, #1
   26344:	str	r3, [fp, #-8]
   26348:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2634c:	ldr	r3, [r3, #4]
   26350:	sub	r3, r3, #1
   26354:	str	r3, [fp, #-12]
   26358:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2635c:	ldr	r3, [r3, #4]
   26360:	sub	r3, r3, #1
   26364:	str	r3, [fp, #-20]	; 0xffffffec
   26368:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2636c:	ldr	r2, [r3, #8]
   26370:	ldr	r3, [fp, #-8]
   26374:	lsl	r3, r3, #2
   26378:	add	r3, r2, r3
   2637c:	ldr	r2, [r3]
   26380:	ldr	r3, [fp, #-48]	; 0xffffffd0
   26384:	ldr	r1, [r3, #8]
   26388:	ldr	r3, [fp, #-12]
   2638c:	lsl	r3, r3, #2
   26390:	add	r3, r1, r3
   26394:	ldr	r3, [r3]
   26398:	cmp	r2, r3
   2639c:	bne	264a8 <__assert_fail@plt+0x15238>
   263a0:	b	263b0 <__assert_fail@plt+0x15140>
   263a4:	ldr	r3, [fp, #-20]	; 0xffffffec
   263a8:	sub	r3, r3, #1
   263ac:	str	r3, [fp, #-20]	; 0xffffffec
   263b0:	ldr	r3, [fp, #-20]	; 0xffffffec
   263b4:	cmp	r3, #0
   263b8:	blt	263f4 <__assert_fail@plt+0x15184>
   263bc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   263c0:	ldr	r2, [r3, #8]
   263c4:	ldr	r3, [fp, #-20]	; 0xffffffec
   263c8:	lsl	r3, r3, #2
   263cc:	add	r3, r2, r3
   263d0:	ldr	r2, [r3]
   263d4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   263d8:	ldr	r1, [r3, #8]
   263dc:	ldr	r3, [fp, #-8]
   263e0:	lsl	r3, r3, #2
   263e4:	add	r3, r1, r3
   263e8:	ldr	r3, [r3]
   263ec:	cmp	r2, r3
   263f0:	bgt	263a4 <__assert_fail@plt+0x15134>
   263f4:	ldr	r3, [fp, #-20]	; 0xffffffec
   263f8:	cmp	r3, #0
   263fc:	blt	26438 <__assert_fail@plt+0x151c8>
   26400:	ldr	r3, [fp, #-40]	; 0xffffffd8
   26404:	ldr	r2, [r3, #8]
   26408:	ldr	r3, [fp, #-20]	; 0xffffffec
   2640c:	lsl	r3, r3, #2
   26410:	add	r3, r2, r3
   26414:	ldr	r2, [r3]
   26418:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2641c:	ldr	r1, [r3, #8]
   26420:	ldr	r3, [fp, #-8]
   26424:	lsl	r3, r3, #2
   26428:	add	r3, r1, r3
   2642c:	ldr	r3, [r3]
   26430:	cmp	r2, r3
   26434:	beq	26474 <__assert_fail@plt+0x15204>
   26438:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2643c:	ldr	r2, [r3, #8]
   26440:	ldr	r3, [fp, #-28]	; 0xffffffe4
   26444:	sub	r3, r3, #1
   26448:	str	r3, [fp, #-28]	; 0xffffffe4
   2644c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   26450:	lsl	r3, r3, #2
   26454:	add	r3, r2, r3
   26458:	ldr	r2, [fp, #-44]	; 0xffffffd4
   2645c:	ldr	r1, [r2, #8]
   26460:	ldr	r2, [fp, #-8]
   26464:	lsl	r2, r2, #2
   26468:	add	r2, r1, r2
   2646c:	ldr	r2, [r2]
   26470:	str	r2, [r3]
   26474:	ldr	r3, [fp, #-8]
   26478:	sub	r3, r3, #1
   2647c:	str	r3, [fp, #-8]
   26480:	ldr	r3, [fp, #-8]
   26484:	cmp	r3, #0
   26488:	blt	2651c <__assert_fail@plt+0x152ac>
   2648c:	ldr	r3, [fp, #-12]
   26490:	sub	r3, r3, #1
   26494:	str	r3, [fp, #-12]
   26498:	ldr	r3, [fp, #-12]
   2649c:	cmp	r3, #0
   264a0:	blt	2651c <__assert_fail@plt+0x152ac>
   264a4:	b	26368 <__assert_fail@plt+0x150f8>
   264a8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   264ac:	ldr	r2, [r3, #8]
   264b0:	ldr	r3, [fp, #-8]
   264b4:	lsl	r3, r3, #2
   264b8:	add	r3, r2, r3
   264bc:	ldr	r2, [r3]
   264c0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   264c4:	ldr	r1, [r3, #8]
   264c8:	ldr	r3, [fp, #-12]
   264cc:	lsl	r3, r3, #2
   264d0:	add	r3, r1, r3
   264d4:	ldr	r3, [r3]
   264d8:	cmp	r2, r3
   264dc:	bge	264fc <__assert_fail@plt+0x1528c>
   264e0:	ldr	r3, [fp, #-12]
   264e4:	sub	r3, r3, #1
   264e8:	str	r3, [fp, #-12]
   264ec:	ldr	r3, [fp, #-12]
   264f0:	cmp	r3, #0
   264f4:	bge	26368 <__assert_fail@plt+0x150f8>
   264f8:	b	2651c <__assert_fail@plt+0x152ac>
   264fc:	ldr	r3, [fp, #-8]
   26500:	sub	r3, r3, #1
   26504:	str	r3, [fp, #-8]
   26508:	ldr	r3, [fp, #-8]
   2650c:	cmp	r3, #0
   26510:	blt	26518 <__assert_fail@plt+0x152a8>
   26514:	b	26368 <__assert_fail@plt+0x150f8>
   26518:	nop			; (mov r0, r0)
   2651c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   26520:	ldr	r3, [r3, #4]
   26524:	sub	r3, r3, #1
   26528:	str	r3, [fp, #-20]	; 0xffffffec
   2652c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   26530:	ldr	r2, [r3, #4]
   26534:	ldr	r3, [fp, #-44]	; 0xffffffd4
   26538:	ldr	r3, [r3, #4]
   2653c:	add	r2, r2, r3
   26540:	ldr	r3, [fp, #-48]	; 0xffffffd0
   26544:	ldr	r3, [r3, #4]
   26548:	add	r3, r2, r3
   2654c:	sub	r3, r3, #1
   26550:	str	r3, [fp, #-16]
   26554:	ldr	r2, [fp, #-16]
   26558:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2655c:	sub	r3, r2, r3
   26560:	add	r3, r3, #1
   26564:	str	r3, [fp, #-24]	; 0xffffffe8
   26568:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2656c:	ldr	r2, [r3, #4]
   26570:	ldr	r3, [fp, #-24]	; 0xffffffe8
   26574:	add	r2, r2, r3
   26578:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2657c:	str	r2, [r3, #4]
   26580:	ldr	r3, [fp, #-24]	; 0xffffffe8
   26584:	cmp	r3, #0
   26588:	ble	26680 <__assert_fail@plt+0x15410>
   2658c:	ldr	r3, [fp, #-20]	; 0xffffffec
   26590:	cmp	r3, #0
   26594:	blt	26680 <__assert_fail@plt+0x15410>
   26598:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2659c:	ldr	r2, [r3, #8]
   265a0:	ldr	r3, [fp, #-16]
   265a4:	lsl	r3, r3, #2
   265a8:	add	r3, r2, r3
   265ac:	ldr	r2, [r3]
   265b0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   265b4:	ldr	r1, [r3, #8]
   265b8:	ldr	r3, [fp, #-20]	; 0xffffffec
   265bc:	lsl	r3, r3, #2
   265c0:	add	r3, r1, r3
   265c4:	ldr	r3, [r3]
   265c8:	cmp	r2, r3
   265cc:	ble	26628 <__assert_fail@plt+0x153b8>
   265d0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   265d4:	ldr	r2, [r3, #8]
   265d8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   265dc:	sub	r1, r3, #1
   265e0:	str	r1, [fp, #-24]	; 0xffffffe8
   265e4:	ldr	r1, [fp, #-20]	; 0xffffffec
   265e8:	add	r3, r3, r1
   265ec:	lsl	r3, r3, #2
   265f0:	add	r2, r2, r3
   265f4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   265f8:	ldr	r1, [r3, #8]
   265fc:	ldr	r3, [fp, #-16]
   26600:	sub	r0, r3, #1
   26604:	str	r0, [fp, #-16]
   26608:	lsl	r3, r3, #2
   2660c:	add	r3, r1, r3
   26610:	ldr	r3, [r3]
   26614:	str	r3, [r2]
   26618:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2661c:	cmp	r3, #0
   26620:	bne	26598 <__assert_fail@plt+0x15328>
   26624:	b	26680 <__assert_fail@plt+0x15410>
   26628:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2662c:	ldr	r2, [r3, #8]
   26630:	ldr	r1, [fp, #-20]	; 0xffffffec
   26634:	ldr	r3, [fp, #-24]	; 0xffffffe8
   26638:	add	r3, r1, r3
   2663c:	lsl	r3, r3, #2
   26640:	add	r3, r2, r3
   26644:	ldr	r2, [fp, #-40]	; 0xffffffd8
   26648:	ldr	r1, [r2, #8]
   2664c:	ldr	r2, [fp, #-20]	; 0xffffffec
   26650:	lsl	r2, r2, #2
   26654:	add	r2, r1, r2
   26658:	ldr	r2, [r2]
   2665c:	str	r2, [r3]
   26660:	ldr	r3, [fp, #-20]	; 0xffffffec
   26664:	sub	r3, r3, #1
   26668:	str	r3, [fp, #-20]	; 0xffffffec
   2666c:	ldr	r3, [fp, #-20]	; 0xffffffec
   26670:	cmp	r3, #0
   26674:	blt	2667c <__assert_fail@plt+0x1540c>
   26678:	b	26598 <__assert_fail@plt+0x15328>
   2667c:	nop			; (mov r0, r0)
   26680:	ldr	r3, [fp, #-40]	; 0xffffffd8
   26684:	ldr	r0, [r3, #8]
   26688:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2668c:	ldr	r2, [r3, #8]
   26690:	ldr	r3, [fp, #-28]	; 0xffffffe4
   26694:	lsl	r3, r3, #2
   26698:	add	r1, r2, r3
   2669c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   266a0:	lsl	r3, r3, #2
   266a4:	mov	r2, r3
   266a8:	bl	11018 <memcpy@plt>
   266ac:	mov	r3, #0
   266b0:	mov	r0, r3
   266b4:	sub	sp, fp, #4
   266b8:	pop	{fp, pc}
   266bc:	push	{fp, lr}
   266c0:	add	fp, sp, #4
   266c4:	sub	sp, sp, #32
   266c8:	str	r0, [fp, #-24]	; 0xffffffe8
   266cc:	str	r1, [fp, #-28]	; 0xffffffe4
   266d0:	str	r2, [fp, #-32]	; 0xffffffe0
   266d4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   266d8:	cmp	r3, #0
   266dc:	beq	26774 <__assert_fail@plt+0x15504>
   266e0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   266e4:	ldr	r3, [r3, #4]
   266e8:	cmp	r3, #0
   266ec:	ble	26774 <__assert_fail@plt+0x15504>
   266f0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   266f4:	cmp	r3, #0
   266f8:	beq	26774 <__assert_fail@plt+0x15504>
   266fc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   26700:	ldr	r3, [r3, #4]
   26704:	cmp	r3, #0
   26708:	ble	26774 <__assert_fail@plt+0x15504>
   2670c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   26710:	ldr	r2, [r3, #4]
   26714:	ldr	r3, [fp, #-32]	; 0xffffffe0
   26718:	ldr	r3, [r3, #4]
   2671c:	add	r2, r2, r3
   26720:	ldr	r3, [fp, #-24]	; 0xffffffe8
   26724:	str	r2, [r3]
   26728:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2672c:	ldr	r3, [r3]
   26730:	lsl	r3, r3, #2
   26734:	mov	r0, r3
   26738:	bl	3df98 <__assert_fail@plt+0x2cd28>
   2673c:	mov	r3, r0
   26740:	mov	r2, r3
   26744:	ldr	r3, [fp, #-24]	; 0xffffffe8
   26748:	str	r2, [r3, #8]
   2674c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   26750:	ldr	r3, [r3, #8]
   26754:	cmp	r3, #0
   26758:	moveq	r3, #1
   2675c:	movne	r3, #0
   26760:	uxtb	r3, r3
   26764:	cmp	r3, #0
   26768:	beq	267ec <__assert_fail@plt+0x1557c>
   2676c:	mov	r3, #12
   26770:	b	26a2c <__assert_fail@plt+0x157bc>
   26774:	ldr	r3, [fp, #-28]	; 0xffffffe4
   26778:	cmp	r3, #0
   2677c:	beq	267a4 <__assert_fail@plt+0x15534>
   26780:	ldr	r3, [fp, #-28]	; 0xffffffe4
   26784:	ldr	r3, [r3, #4]
   26788:	cmp	r3, #0
   2678c:	ble	267a4 <__assert_fail@plt+0x15534>
   26790:	ldr	r1, [fp, #-28]	; 0xffffffe4
   26794:	ldr	r0, [fp, #-24]	; 0xffffffe8
   26798:	bl	26130 <__assert_fail@plt+0x14ec0>
   2679c:	mov	r3, r0
   267a0:	b	26a2c <__assert_fail@plt+0x157bc>
   267a4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   267a8:	cmp	r3, #0
   267ac:	beq	267d4 <__assert_fail@plt+0x15564>
   267b0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   267b4:	ldr	r3, [r3, #4]
   267b8:	cmp	r3, #0
   267bc:	ble	267d4 <__assert_fail@plt+0x15564>
   267c0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   267c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   267c8:	bl	26130 <__assert_fail@plt+0x14ec0>
   267cc:	mov	r3, r0
   267d0:	b	26a2c <__assert_fail@plt+0x157bc>
   267d4:	mov	r2, #12
   267d8:	mov	r1, #0
   267dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   267e0:	bl	111bc <memset@plt>
   267e4:	mov	r3, #0
   267e8:	b	26a2c <__assert_fail@plt+0x157bc>
   267ec:	mov	r3, #0
   267f0:	str	r3, [fp, #-16]
   267f4:	ldr	r3, [fp, #-16]
   267f8:	str	r3, [fp, #-12]
   267fc:	ldr	r3, [fp, #-12]
   26800:	str	r3, [fp, #-8]
   26804:	b	26908 <__assert_fail@plt+0x15698>
   26808:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2680c:	ldr	r2, [r3, #8]
   26810:	ldr	r3, [fp, #-8]
   26814:	lsl	r3, r3, #2
   26818:	add	r3, r2, r3
   2681c:	ldr	r2, [r3]
   26820:	ldr	r3, [fp, #-32]	; 0xffffffe0
   26824:	ldr	r1, [r3, #8]
   26828:	ldr	r3, [fp, #-12]
   2682c:	lsl	r3, r3, #2
   26830:	add	r3, r1, r3
   26834:	ldr	r3, [r3]
   26838:	cmp	r2, r3
   2683c:	ble	26884 <__assert_fail@plt+0x15614>
   26840:	ldr	r3, [fp, #-24]	; 0xffffffe8
   26844:	ldr	r2, [r3, #8]
   26848:	ldr	r3, [fp, #-16]
   2684c:	add	r1, r3, #1
   26850:	str	r1, [fp, #-16]
   26854:	lsl	r3, r3, #2
   26858:	add	r2, r2, r3
   2685c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   26860:	ldr	r1, [r3, #8]
   26864:	ldr	r3, [fp, #-12]
   26868:	add	r0, r3, #1
   2686c:	str	r0, [fp, #-12]
   26870:	lsl	r3, r3, #2
   26874:	add	r3, r1, r3
   26878:	ldr	r3, [r3]
   2687c:	str	r3, [r2]
   26880:	b	26908 <__assert_fail@plt+0x15698>
   26884:	ldr	r3, [fp, #-28]	; 0xffffffe4
   26888:	ldr	r2, [r3, #8]
   2688c:	ldr	r3, [fp, #-8]
   26890:	lsl	r3, r3, #2
   26894:	add	r3, r2, r3
   26898:	ldr	r2, [r3]
   2689c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   268a0:	ldr	r1, [r3, #8]
   268a4:	ldr	r3, [fp, #-12]
   268a8:	lsl	r3, r3, #2
   268ac:	add	r3, r1, r3
   268b0:	ldr	r3, [r3]
   268b4:	cmp	r2, r3
   268b8:	bne	268c8 <__assert_fail@plt+0x15658>
   268bc:	ldr	r3, [fp, #-12]
   268c0:	add	r3, r3, #1
   268c4:	str	r3, [fp, #-12]
   268c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   268cc:	ldr	r2, [r3, #8]
   268d0:	ldr	r3, [fp, #-16]
   268d4:	add	r1, r3, #1
   268d8:	str	r1, [fp, #-16]
   268dc:	lsl	r3, r3, #2
   268e0:	add	r2, r2, r3
   268e4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   268e8:	ldr	r1, [r3, #8]
   268ec:	ldr	r3, [fp, #-8]
   268f0:	add	r0, r3, #1
   268f4:	str	r0, [fp, #-8]
   268f8:	lsl	r3, r3, #2
   268fc:	add	r3, r1, r3
   26900:	ldr	r3, [r3]
   26904:	str	r3, [r2]
   26908:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2690c:	ldr	r2, [r3, #4]
   26910:	ldr	r3, [fp, #-8]
   26914:	cmp	r2, r3
   26918:	ble	26930 <__assert_fail@plt+0x156c0>
   2691c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   26920:	ldr	r2, [r3, #4]
   26924:	ldr	r3, [fp, #-12]
   26928:	cmp	r2, r3
   2692c:	bgt	26808 <__assert_fail@plt+0x15598>
   26930:	ldr	r3, [fp, #-28]	; 0xffffffe4
   26934:	ldr	r2, [r3, #4]
   26938:	ldr	r3, [fp, #-8]
   2693c:	cmp	r2, r3
   26940:	ble	269a8 <__assert_fail@plt+0x15738>
   26944:	ldr	r3, [fp, #-24]	; 0xffffffe8
   26948:	ldr	r2, [r3, #8]
   2694c:	ldr	r3, [fp, #-16]
   26950:	lsl	r3, r3, #2
   26954:	add	r0, r2, r3
   26958:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2695c:	ldr	r2, [r3, #8]
   26960:	ldr	r3, [fp, #-8]
   26964:	lsl	r3, r3, #2
   26968:	add	r1, r2, r3
   2696c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   26970:	ldr	r2, [r3, #4]
   26974:	ldr	r3, [fp, #-8]
   26978:	sub	r3, r2, r3
   2697c:	lsl	r3, r3, #2
   26980:	mov	r2, r3
   26984:	bl	11018 <memcpy@plt>
   26988:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2698c:	ldr	r2, [r3, #4]
   26990:	ldr	r3, [fp, #-8]
   26994:	sub	r3, r2, r3
   26998:	ldr	r2, [fp, #-16]
   2699c:	add	r3, r2, r3
   269a0:	str	r3, [fp, #-16]
   269a4:	b	26a1c <__assert_fail@plt+0x157ac>
   269a8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   269ac:	ldr	r2, [r3, #4]
   269b0:	ldr	r3, [fp, #-12]
   269b4:	cmp	r2, r3
   269b8:	ble	26a1c <__assert_fail@plt+0x157ac>
   269bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   269c0:	ldr	r2, [r3, #8]
   269c4:	ldr	r3, [fp, #-16]
   269c8:	lsl	r3, r3, #2
   269cc:	add	r0, r2, r3
   269d0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   269d4:	ldr	r2, [r3, #8]
   269d8:	ldr	r3, [fp, #-12]
   269dc:	lsl	r3, r3, #2
   269e0:	add	r1, r2, r3
   269e4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   269e8:	ldr	r2, [r3, #4]
   269ec:	ldr	r3, [fp, #-12]
   269f0:	sub	r3, r2, r3
   269f4:	lsl	r3, r3, #2
   269f8:	mov	r2, r3
   269fc:	bl	11018 <memcpy@plt>
   26a00:	ldr	r3, [fp, #-32]	; 0xffffffe0
   26a04:	ldr	r2, [r3, #4]
   26a08:	ldr	r3, [fp, #-12]
   26a0c:	sub	r3, r2, r3
   26a10:	ldr	r2, [fp, #-16]
   26a14:	add	r3, r2, r3
   26a18:	str	r3, [fp, #-16]
   26a1c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   26a20:	ldr	r2, [fp, #-16]
   26a24:	str	r2, [r3, #4]
   26a28:	mov	r3, #0
   26a2c:	mov	r0, r3
   26a30:	sub	sp, fp, #4
   26a34:	pop	{fp, pc}
   26a38:	push	{fp, lr}
   26a3c:	add	fp, sp, #4
   26a40:	sub	sp, sp, #32
   26a44:	str	r0, [fp, #-32]	; 0xffffffe0
   26a48:	str	r1, [fp, #-36]	; 0xffffffdc
   26a4c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   26a50:	cmp	r3, #0
   26a54:	beq	26a68 <__assert_fail@plt+0x157f8>
   26a58:	ldr	r3, [fp, #-36]	; 0xffffffdc
   26a5c:	ldr	r3, [r3, #4]
   26a60:	cmp	r3, #0
   26a64:	bne	26a70 <__assert_fail@plt+0x15800>
   26a68:	mov	r3, #0
   26a6c:	b	26e80 <__assert_fail@plt+0x15c10>
   26a70:	ldr	r3, [fp, #-32]	; 0xffffffe0
   26a74:	ldr	r2, [r3]
   26a78:	ldr	r3, [fp, #-36]	; 0xffffffdc
   26a7c:	ldr	r3, [r3, #4]
   26a80:	lsl	r1, r3, #1
   26a84:	ldr	r3, [fp, #-32]	; 0xffffffe0
   26a88:	ldr	r3, [r3, #4]
   26a8c:	add	r3, r1, r3
   26a90:	cmp	r2, r3
   26a94:	bge	26b10 <__assert_fail@plt+0x158a0>
   26a98:	ldr	r3, [fp, #-36]	; 0xffffffdc
   26a9c:	ldr	r2, [r3, #4]
   26aa0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   26aa4:	ldr	r3, [r3]
   26aa8:	add	r3, r2, r3
   26aac:	lsl	r3, r3, #1
   26ab0:	str	r3, [fp, #-24]	; 0xffffffe8
   26ab4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   26ab8:	ldr	r2, [r3, #8]
   26abc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   26ac0:	lsl	r3, r3, #2
   26ac4:	mov	r1, r3
   26ac8:	mov	r0, r2
   26acc:	bl	3e040 <__assert_fail@plt+0x2cdd0>
   26ad0:	str	r0, [fp, #-28]	; 0xffffffe4
   26ad4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   26ad8:	cmp	r3, #0
   26adc:	moveq	r3, #1
   26ae0:	movne	r3, #0
   26ae4:	uxtb	r3, r3
   26ae8:	cmp	r3, #0
   26aec:	beq	26af8 <__assert_fail@plt+0x15888>
   26af0:	mov	r3, #12
   26af4:	b	26e80 <__assert_fail@plt+0x15c10>
   26af8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   26afc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   26b00:	str	r2, [r3, #8]
   26b04:	ldr	r3, [fp, #-32]	; 0xffffffe0
   26b08:	ldr	r2, [fp, #-24]	; 0xffffffe8
   26b0c:	str	r2, [r3]
   26b10:	ldr	r3, [fp, #-32]	; 0xffffffe0
   26b14:	ldr	r3, [r3, #4]
   26b18:	cmp	r3, #0
   26b1c:	moveq	r3, #1
   26b20:	movne	r3, #0
   26b24:	uxtb	r3, r3
   26b28:	cmp	r3, #0
   26b2c:	beq	26b78 <__assert_fail@plt+0x15908>
   26b30:	ldr	r3, [fp, #-32]	; 0xffffffe0
   26b34:	ldr	r3, [r3, #8]
   26b38:	cmp	r3, #0
   26b3c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   26b40:	ldr	r2, [r3, #4]
   26b44:	ldr	r3, [fp, #-32]	; 0xffffffe0
   26b48:	str	r2, [r3, #4]
   26b4c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   26b50:	ldr	r0, [r3, #8]
   26b54:	ldr	r3, [fp, #-36]	; 0xffffffdc
   26b58:	ldr	r1, [r3, #8]
   26b5c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   26b60:	ldr	r3, [r3, #4]
   26b64:	lsl	r3, r3, #2
   26b68:	mov	r2, r3
   26b6c:	bl	11018 <memcpy@plt>
   26b70:	mov	r3, #0
   26b74:	b	26e80 <__assert_fail@plt+0x15c10>
   26b78:	ldr	r3, [fp, #-32]	; 0xffffffe0
   26b7c:	ldr	r2, [r3, #4]
   26b80:	ldr	r3, [fp, #-36]	; 0xffffffdc
   26b84:	ldr	r3, [r3, #4]
   26b88:	lsl	r3, r3, #1
   26b8c:	add	r3, r2, r3
   26b90:	str	r3, [fp, #-16]
   26b94:	ldr	r3, [fp, #-36]	; 0xffffffdc
   26b98:	ldr	r3, [r3, #4]
   26b9c:	sub	r3, r3, #1
   26ba0:	str	r3, [fp, #-8]
   26ba4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   26ba8:	ldr	r3, [r3, #4]
   26bac:	sub	r3, r3, #1
   26bb0:	str	r3, [fp, #-12]
   26bb4:	b	26c98 <__assert_fail@plt+0x15a28>
   26bb8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   26bbc:	ldr	r2, [r3, #8]
   26bc0:	ldr	r3, [fp, #-12]
   26bc4:	lsl	r3, r3, #2
   26bc8:	add	r3, r2, r3
   26bcc:	ldr	r2, [r3]
   26bd0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   26bd4:	ldr	r1, [r3, #8]
   26bd8:	ldr	r3, [fp, #-8]
   26bdc:	lsl	r3, r3, #2
   26be0:	add	r3, r1, r3
   26be4:	ldr	r3, [r3]
   26be8:	cmp	r2, r3
   26bec:	bne	26c0c <__assert_fail@plt+0x1599c>
   26bf0:	ldr	r3, [fp, #-8]
   26bf4:	sub	r3, r3, #1
   26bf8:	str	r3, [fp, #-8]
   26bfc:	ldr	r3, [fp, #-12]
   26c00:	sub	r3, r3, #1
   26c04:	str	r3, [fp, #-12]
   26c08:	b	26c98 <__assert_fail@plt+0x15a28>
   26c0c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   26c10:	ldr	r2, [r3, #8]
   26c14:	ldr	r3, [fp, #-12]
   26c18:	lsl	r3, r3, #2
   26c1c:	add	r3, r2, r3
   26c20:	ldr	r2, [r3]
   26c24:	ldr	r3, [fp, #-36]	; 0xffffffdc
   26c28:	ldr	r1, [r3, #8]
   26c2c:	ldr	r3, [fp, #-8]
   26c30:	lsl	r3, r3, #2
   26c34:	add	r3, r1, r3
   26c38:	ldr	r3, [r3]
   26c3c:	cmp	r2, r3
   26c40:	bge	26c8c <__assert_fail@plt+0x15a1c>
   26c44:	ldr	r3, [fp, #-32]	; 0xffffffe0
   26c48:	ldr	r2, [r3, #8]
   26c4c:	ldr	r3, [fp, #-16]
   26c50:	sub	r3, r3, #1
   26c54:	str	r3, [fp, #-16]
   26c58:	ldr	r3, [fp, #-16]
   26c5c:	lsl	r3, r3, #2
   26c60:	add	r2, r2, r3
   26c64:	ldr	r3, [fp, #-36]	; 0xffffffdc
   26c68:	ldr	r1, [r3, #8]
   26c6c:	ldr	r3, [fp, #-8]
   26c70:	sub	r0, r3, #1
   26c74:	str	r0, [fp, #-8]
   26c78:	lsl	r3, r3, #2
   26c7c:	add	r3, r1, r3
   26c80:	ldr	r3, [r3]
   26c84:	str	r3, [r2]
   26c88:	b	26c98 <__assert_fail@plt+0x15a28>
   26c8c:	ldr	r3, [fp, #-12]
   26c90:	sub	r3, r3, #1
   26c94:	str	r3, [fp, #-12]
   26c98:	ldr	r3, [fp, #-8]
   26c9c:	cmp	r3, #0
   26ca0:	blt	26cb0 <__assert_fail@plt+0x15a40>
   26ca4:	ldr	r3, [fp, #-12]
   26ca8:	cmp	r3, #0
   26cac:	bge	26bb8 <__assert_fail@plt+0x15948>
   26cb0:	ldr	r3, [fp, #-8]
   26cb4:	cmp	r3, #0
   26cb8:	blt	26d00 <__assert_fail@plt+0x15a90>
   26cbc:	ldr	r3, [fp, #-8]
   26cc0:	add	r3, r3, #1
   26cc4:	ldr	r2, [fp, #-16]
   26cc8:	sub	r3, r2, r3
   26ccc:	str	r3, [fp, #-16]
   26cd0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   26cd4:	ldr	r2, [r3, #8]
   26cd8:	ldr	r3, [fp, #-16]
   26cdc:	lsl	r3, r3, #2
   26ce0:	add	r0, r2, r3
   26ce4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   26ce8:	ldr	r1, [r3, #8]
   26cec:	ldr	r3, [fp, #-8]
   26cf0:	add	r3, r3, #1
   26cf4:	lsl	r3, r3, #2
   26cf8:	mov	r2, r3
   26cfc:	bl	11018 <memcpy@plt>
   26d00:	ldr	r3, [fp, #-32]	; 0xffffffe0
   26d04:	ldr	r3, [r3, #4]
   26d08:	sub	r3, r3, #1
   26d0c:	str	r3, [fp, #-12]
   26d10:	ldr	r3, [fp, #-32]	; 0xffffffe0
   26d14:	ldr	r2, [r3, #4]
   26d18:	ldr	r3, [fp, #-36]	; 0xffffffdc
   26d1c:	ldr	r3, [r3, #4]
   26d20:	lsl	r3, r3, #1
   26d24:	add	r3, r2, r3
   26d28:	sub	r3, r3, #1
   26d2c:	str	r3, [fp, #-8]
   26d30:	ldr	r2, [fp, #-8]
   26d34:	ldr	r3, [fp, #-16]
   26d38:	sub	r3, r2, r3
   26d3c:	add	r3, r3, #1
   26d40:	str	r3, [fp, #-20]	; 0xffffffec
   26d44:	ldr	r3, [fp, #-20]	; 0xffffffec
   26d48:	cmp	r3, #0
   26d4c:	bne	26d58 <__assert_fail@plt+0x15ae8>
   26d50:	mov	r3, #0
   26d54:	b	26e80 <__assert_fail@plt+0x15c10>
   26d58:	ldr	r3, [fp, #-32]	; 0xffffffe0
   26d5c:	ldr	r2, [r3, #4]
   26d60:	ldr	r3, [fp, #-20]	; 0xffffffec
   26d64:	add	r2, r2, r3
   26d68:	ldr	r3, [fp, #-32]	; 0xffffffe0
   26d6c:	str	r2, [r3, #4]
   26d70:	ldr	r3, [fp, #-32]	; 0xffffffe0
   26d74:	ldr	r2, [r3, #8]
   26d78:	ldr	r3, [fp, #-8]
   26d7c:	lsl	r3, r3, #2
   26d80:	add	r3, r2, r3
   26d84:	ldr	r2, [r3]
   26d88:	ldr	r3, [fp, #-32]	; 0xffffffe0
   26d8c:	ldr	r1, [r3, #8]
   26d90:	ldr	r3, [fp, #-12]
   26d94:	lsl	r3, r3, #2
   26d98:	add	r3, r1, r3
   26d9c:	ldr	r3, [r3]
   26da0:	cmp	r2, r3
   26da4:	ble	26e00 <__assert_fail@plt+0x15b90>
   26da8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   26dac:	ldr	r2, [r3, #8]
   26db0:	ldr	r3, [fp, #-20]	; 0xffffffec
   26db4:	sub	r1, r3, #1
   26db8:	str	r1, [fp, #-20]	; 0xffffffec
   26dbc:	ldr	r1, [fp, #-12]
   26dc0:	add	r3, r3, r1
   26dc4:	lsl	r3, r3, #2
   26dc8:	add	r2, r2, r3
   26dcc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   26dd0:	ldr	r1, [r3, #8]
   26dd4:	ldr	r3, [fp, #-8]
   26dd8:	sub	r0, r3, #1
   26ddc:	str	r0, [fp, #-8]
   26de0:	lsl	r3, r3, #2
   26de4:	add	r3, r1, r3
   26de8:	ldr	r3, [r3]
   26dec:	str	r3, [r2]
   26df0:	ldr	r3, [fp, #-20]	; 0xffffffec
   26df4:	cmp	r3, #0
   26df8:	bne	26d70 <__assert_fail@plt+0x15b00>
   26dfc:	b	26e7c <__assert_fail@plt+0x15c0c>
   26e00:	ldr	r3, [fp, #-32]	; 0xffffffe0
   26e04:	ldr	r2, [r3, #8]
   26e08:	ldr	r1, [fp, #-12]
   26e0c:	ldr	r3, [fp, #-20]	; 0xffffffec
   26e10:	add	r3, r1, r3
   26e14:	lsl	r3, r3, #2
   26e18:	add	r3, r2, r3
   26e1c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   26e20:	ldr	r1, [r2, #8]
   26e24:	ldr	r2, [fp, #-12]
   26e28:	lsl	r2, r2, #2
   26e2c:	add	r2, r1, r2
   26e30:	ldr	r2, [r2]
   26e34:	str	r2, [r3]
   26e38:	ldr	r3, [fp, #-12]
   26e3c:	sub	r3, r3, #1
   26e40:	str	r3, [fp, #-12]
   26e44:	ldr	r3, [fp, #-12]
   26e48:	cmp	r3, #0
   26e4c:	bge	26d70 <__assert_fail@plt+0x15b00>
   26e50:	ldr	r3, [fp, #-32]	; 0xffffffe0
   26e54:	ldr	r0, [r3, #8]
   26e58:	ldr	r3, [fp, #-32]	; 0xffffffe0
   26e5c:	ldr	r2, [r3, #8]
   26e60:	ldr	r3, [fp, #-16]
   26e64:	lsl	r3, r3, #2
   26e68:	add	r1, r2, r3
   26e6c:	ldr	r3, [fp, #-20]	; 0xffffffec
   26e70:	lsl	r3, r3, #2
   26e74:	mov	r2, r3
   26e78:	bl	11018 <memcpy@plt>
   26e7c:	mov	r3, #0
   26e80:	mov	r0, r3
   26e84:	sub	sp, fp, #4
   26e88:	pop	{fp, pc}
   26e8c:	push	{fp, lr}
   26e90:	add	fp, sp, #4
   26e94:	sub	sp, sp, #16
   26e98:	str	r0, [fp, #-16]
   26e9c:	str	r1, [fp, #-20]	; 0xffffffec
   26ea0:	ldr	r3, [fp, #-16]
   26ea4:	ldr	r3, [r3]
   26ea8:	cmp	r3, #0
   26eac:	bne	26ee4 <__assert_fail@plt+0x15c74>
   26eb0:	ldr	r1, [fp, #-20]	; 0xffffffec
   26eb4:	ldr	r0, [fp, #-16]
   26eb8:	bl	25f7c <__assert_fail@plt+0x14d0c>
   26ebc:	mov	r3, r0
   26ec0:	cmp	r3, #0
   26ec4:	moveq	r3, #1
   26ec8:	movne	r3, #0
   26ecc:	uxtb	r3, r3
   26ed0:	cmp	r3, #0
   26ed4:	movne	r3, #1
   26ed8:	moveq	r3, #0
   26edc:	uxtb	r3, r3
   26ee0:	b	270f4 <__assert_fail@plt+0x15e84>
   26ee4:	ldr	r3, [fp, #-16]
   26ee8:	ldr	r3, [r3, #4]
   26eec:	cmp	r3, #0
   26ef0:	bne	26f2c <__assert_fail@plt+0x15cbc>
   26ef4:	ldr	r3, [fp, #-16]
   26ef8:	ldr	r3, [r3, #8]
   26efc:	cmp	r3, #0
   26f00:	ldr	r3, [fp, #-16]
   26f04:	ldr	r3, [r3, #8]
   26f08:	ldr	r2, [fp, #-20]	; 0xffffffec
   26f0c:	str	r2, [r3]
   26f10:	ldr	r3, [fp, #-16]
   26f14:	ldr	r3, [r3, #4]
   26f18:	add	r2, r3, #1
   26f1c:	ldr	r3, [fp, #-16]
   26f20:	str	r2, [r3, #4]
   26f24:	mov	r3, #1
   26f28:	b	270f4 <__assert_fail@plt+0x15e84>
   26f2c:	ldr	r3, [fp, #-16]
   26f30:	ldr	r2, [r3]
   26f34:	ldr	r3, [fp, #-16]
   26f38:	ldr	r3, [r3, #4]
   26f3c:	cmp	r2, r3
   26f40:	bne	26fac <__assert_fail@plt+0x15d3c>
   26f44:	ldr	r3, [fp, #-16]
   26f48:	ldr	r3, [r3]
   26f4c:	lsl	r2, r3, #1
   26f50:	ldr	r3, [fp, #-16]
   26f54:	str	r2, [r3]
   26f58:	ldr	r3, [fp, #-16]
   26f5c:	ldr	r2, [r3, #8]
   26f60:	ldr	r3, [fp, #-16]
   26f64:	ldr	r3, [r3]
   26f68:	lsl	r3, r3, #2
   26f6c:	mov	r1, r3
   26f70:	mov	r0, r2
   26f74:	bl	3e040 <__assert_fail@plt+0x2cdd0>
   26f78:	str	r0, [fp, #-12]
   26f7c:	ldr	r3, [fp, #-12]
   26f80:	cmp	r3, #0
   26f84:	moveq	r3, #1
   26f88:	movne	r3, #0
   26f8c:	uxtb	r3, r3
   26f90:	cmp	r3, #0
   26f94:	beq	26fa0 <__assert_fail@plt+0x15d30>
   26f98:	mov	r3, #0
   26f9c:	b	270f4 <__assert_fail@plt+0x15e84>
   26fa0:	ldr	r3, [fp, #-16]
   26fa4:	ldr	r2, [fp, #-12]
   26fa8:	str	r2, [r3, #8]
   26fac:	ldr	r3, [fp, #-16]
   26fb0:	ldr	r3, [r3, #8]
   26fb4:	ldr	r2, [r3]
   26fb8:	ldr	r3, [fp, #-20]	; 0xffffffec
   26fbc:	cmp	r2, r3
   26fc0:	ble	27024 <__assert_fail@plt+0x15db4>
   26fc4:	ldr	r3, [fp, #-16]
   26fc8:	ldr	r3, [r3, #4]
   26fcc:	str	r3, [fp, #-8]
   26fd0:	b	27014 <__assert_fail@plt+0x15da4>
   26fd4:	ldr	r3, [fp, #-16]
   26fd8:	ldr	r2, [r3, #8]
   26fdc:	ldr	r3, [fp, #-8]
   26fe0:	lsl	r3, r3, #2
   26fe4:	add	r3, r2, r3
   26fe8:	ldr	r2, [fp, #-16]
   26fec:	ldr	r1, [r2, #8]
   26ff0:	ldr	r2, [fp, #-8]
   26ff4:	sub	r2, r2, #-1073741823	; 0xc0000001
   26ff8:	lsl	r2, r2, #2
   26ffc:	add	r2, r1, r2
   27000:	ldr	r2, [r2]
   27004:	str	r2, [r3]
   27008:	ldr	r3, [fp, #-8]
   2700c:	sub	r3, r3, #1
   27010:	str	r3, [fp, #-8]
   27014:	ldr	r3, [fp, #-8]
   27018:	cmp	r3, #0
   2701c:	bgt	26fd4 <__assert_fail@plt+0x15d64>
   27020:	b	270c0 <__assert_fail@plt+0x15e50>
   27024:	ldr	r3, [fp, #-16]
   27028:	ldr	r3, [r3, #4]
   2702c:	str	r3, [fp, #-8]
   27030:	b	27074 <__assert_fail@plt+0x15e04>
   27034:	ldr	r3, [fp, #-16]
   27038:	ldr	r2, [r3, #8]
   2703c:	ldr	r3, [fp, #-8]
   27040:	lsl	r3, r3, #2
   27044:	add	r3, r2, r3
   27048:	ldr	r2, [fp, #-16]
   2704c:	ldr	r1, [r2, #8]
   27050:	ldr	r2, [fp, #-8]
   27054:	sub	r2, r2, #-1073741823	; 0xc0000001
   27058:	lsl	r2, r2, #2
   2705c:	add	r2, r1, r2
   27060:	ldr	r2, [r2]
   27064:	str	r2, [r3]
   27068:	ldr	r3, [fp, #-8]
   2706c:	sub	r3, r3, #1
   27070:	str	r3, [fp, #-8]
   27074:	ldr	r3, [fp, #-16]
   27078:	ldr	r2, [r3, #8]
   2707c:	ldr	r3, [fp, #-8]
   27080:	sub	r3, r3, #-1073741823	; 0xc0000001
   27084:	lsl	r3, r3, #2
   27088:	add	r3, r2, r3
   2708c:	ldr	r2, [r3]
   27090:	ldr	r3, [fp, #-20]	; 0xffffffec
   27094:	cmp	r2, r3
   27098:	bgt	27034 <__assert_fail@plt+0x15dc4>
   2709c:	ldr	r3, [fp, #-16]
   270a0:	ldr	r2, [r3, #8]
   270a4:	ldr	r3, [fp, #-8]
   270a8:	sub	r3, r3, #-1073741823	; 0xc0000001
   270ac:	lsl	r3, r3, #2
   270b0:	add	r3, r2, r3
   270b4:	ldr	r2, [r3]
   270b8:	ldr	r3, [fp, #-20]	; 0xffffffec
   270bc:	cmp	r2, r3
   270c0:	ldr	r3, [fp, #-16]
   270c4:	ldr	r2, [r3, #8]
   270c8:	ldr	r3, [fp, #-8]
   270cc:	lsl	r3, r3, #2
   270d0:	add	r3, r2, r3
   270d4:	ldr	r2, [fp, #-20]	; 0xffffffec
   270d8:	str	r2, [r3]
   270dc:	ldr	r3, [fp, #-16]
   270e0:	ldr	r3, [r3, #4]
   270e4:	add	r2, r3, #1
   270e8:	ldr	r3, [fp, #-16]
   270ec:	str	r2, [r3, #4]
   270f0:	mov	r3, #1
   270f4:	mov	r0, r3
   270f8:	sub	sp, fp, #4
   270fc:	pop	{fp, pc}
   27100:	push	{fp, lr}
   27104:	add	fp, sp, #4
   27108:	sub	sp, sp, #16
   2710c:	str	r0, [fp, #-16]
   27110:	str	r1, [fp, #-20]	; 0xffffffec
   27114:	ldr	r3, [fp, #-16]
   27118:	ldr	r2, [r3]
   2711c:	ldr	r3, [fp, #-16]
   27120:	ldr	r3, [r3, #4]
   27124:	cmp	r2, r3
   27128:	bne	27198 <__assert_fail@plt+0x15f28>
   2712c:	ldr	r3, [fp, #-16]
   27130:	ldr	r3, [r3]
   27134:	add	r3, r3, #1
   27138:	lsl	r2, r3, #1
   2713c:	ldr	r3, [fp, #-16]
   27140:	str	r2, [r3]
   27144:	ldr	r3, [fp, #-16]
   27148:	ldr	r2, [r3, #8]
   2714c:	ldr	r3, [fp, #-16]
   27150:	ldr	r3, [r3]
   27154:	lsl	r3, r3, #2
   27158:	mov	r1, r3
   2715c:	mov	r0, r2
   27160:	bl	3e040 <__assert_fail@plt+0x2cdd0>
   27164:	str	r0, [fp, #-8]
   27168:	ldr	r3, [fp, #-8]
   2716c:	cmp	r3, #0
   27170:	moveq	r3, #1
   27174:	movne	r3, #0
   27178:	uxtb	r3, r3
   2717c:	cmp	r3, #0
   27180:	beq	2718c <__assert_fail@plt+0x15f1c>
   27184:	mov	r3, #0
   27188:	b	271c8 <__assert_fail@plt+0x15f58>
   2718c:	ldr	r3, [fp, #-16]
   27190:	ldr	r2, [fp, #-8]
   27194:	str	r2, [r3, #8]
   27198:	ldr	r3, [fp, #-16]
   2719c:	ldr	r2, [r3, #8]
   271a0:	ldr	r3, [fp, #-16]
   271a4:	ldr	r3, [r3, #4]
   271a8:	add	r0, r3, #1
   271ac:	ldr	r1, [fp, #-16]
   271b0:	str	r0, [r1, #4]
   271b4:	lsl	r3, r3, #2
   271b8:	add	r3, r2, r3
   271bc:	ldr	r2, [fp, #-20]	; 0xffffffec
   271c0:	str	r2, [r3]
   271c4:	mov	r3, #1
   271c8:	mov	r0, r3
   271cc:	sub	sp, fp, #4
   271d0:	pop	{fp, pc}
   271d4:	push	{fp}		; (str fp, [sp, #-4]!)
   271d8:	add	fp, sp, #0
   271dc:	sub	sp, sp, #20
   271e0:	str	r0, [fp, #-16]
   271e4:	str	r1, [fp, #-20]	; 0xffffffec
   271e8:	ldr	r3, [fp, #-16]
   271ec:	cmp	r3, #0
   271f0:	beq	27218 <__assert_fail@plt+0x15fa8>
   271f4:	ldr	r3, [fp, #-20]	; 0xffffffec
   271f8:	cmp	r3, #0
   271fc:	beq	27218 <__assert_fail@plt+0x15fa8>
   27200:	ldr	r3, [fp, #-16]
   27204:	ldr	r2, [r3, #4]
   27208:	ldr	r3, [fp, #-20]	; 0xffffffec
   2720c:	ldr	r3, [r3, #4]
   27210:	cmp	r2, r3
   27214:	beq	27220 <__assert_fail@plt+0x15fb0>
   27218:	mov	r3, #0
   2721c:	b	2728c <__assert_fail@plt+0x1601c>
   27220:	ldr	r3, [fp, #-16]
   27224:	ldr	r3, [r3, #4]
   27228:	str	r3, [fp, #-8]
   2722c:	b	27270 <__assert_fail@plt+0x16000>
   27230:	ldr	r3, [fp, #-16]
   27234:	ldr	r2, [r3, #8]
   27238:	ldr	r3, [fp, #-8]
   2723c:	lsl	r3, r3, #2
   27240:	add	r3, r2, r3
   27244:	ldr	r2, [r3]
   27248:	ldr	r3, [fp, #-20]	; 0xffffffec
   2724c:	ldr	r1, [r3, #8]
   27250:	ldr	r3, [fp, #-8]
   27254:	lsl	r3, r3, #2
   27258:	add	r3, r1, r3
   2725c:	ldr	r3, [r3]
   27260:	cmp	r2, r3
   27264:	beq	27270 <__assert_fail@plt+0x16000>
   27268:	mov	r3, #0
   2726c:	b	2728c <__assert_fail@plt+0x1601c>
   27270:	ldr	r3, [fp, #-8]
   27274:	sub	r3, r3, #1
   27278:	str	r3, [fp, #-8]
   2727c:	ldr	r3, [fp, #-8]
   27280:	cmp	r3, #0
   27284:	bge	27230 <__assert_fail@plt+0x15fc0>
   27288:	mov	r3, #1
   2728c:	mov	r0, r3
   27290:	add	sp, fp, #0
   27294:	pop	{fp}		; (ldr fp, [sp], #4)
   27298:	bx	lr
   2729c:	push	{fp}		; (str fp, [sp, #-4]!)
   272a0:	add	fp, sp, #0
   272a4:	sub	sp, sp, #28
   272a8:	str	r0, [fp, #-24]	; 0xffffffe8
   272ac:	str	r1, [fp, #-28]	; 0xffffffe4
   272b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   272b4:	ldr	r3, [r3, #4]
   272b8:	cmp	r3, #0
   272bc:	bgt	272c8 <__assert_fail@plt+0x16058>
   272c0:	mov	r3, #0
   272c4:	b	27378 <__assert_fail@plt+0x16108>
   272c8:	mov	r3, #0
   272cc:	str	r3, [fp, #-8]
   272d0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   272d4:	ldr	r3, [r3, #4]
   272d8:	sub	r3, r3, #1
   272dc:	str	r3, [fp, #-12]
   272e0:	b	27334 <__assert_fail@plt+0x160c4>
   272e4:	ldr	r2, [fp, #-8]
   272e8:	ldr	r3, [fp, #-12]
   272ec:	add	r3, r2, r3
   272f0:	lsr	r3, r3, #1
   272f4:	str	r3, [fp, #-16]
   272f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   272fc:	ldr	r2, [r3, #8]
   27300:	ldr	r3, [fp, #-16]
   27304:	lsl	r3, r3, #2
   27308:	add	r3, r2, r3
   2730c:	ldr	r2, [r3]
   27310:	ldr	r3, [fp, #-28]	; 0xffffffe4
   27314:	cmp	r2, r3
   27318:	bge	2732c <__assert_fail@plt+0x160bc>
   2731c:	ldr	r3, [fp, #-16]
   27320:	add	r3, r3, #1
   27324:	str	r3, [fp, #-8]
   27328:	b	27334 <__assert_fail@plt+0x160c4>
   2732c:	ldr	r3, [fp, #-16]
   27330:	str	r3, [fp, #-12]
   27334:	ldr	r2, [fp, #-8]
   27338:	ldr	r3, [fp, #-12]
   2733c:	cmp	r2, r3
   27340:	bcc	272e4 <__assert_fail@plt+0x16074>
   27344:	ldr	r3, [fp, #-24]	; 0xffffffe8
   27348:	ldr	r2, [r3, #8]
   2734c:	ldr	r3, [fp, #-8]
   27350:	lsl	r3, r3, #2
   27354:	add	r3, r2, r3
   27358:	ldr	r2, [r3]
   2735c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   27360:	cmp	r2, r3
   27364:	bne	27374 <__assert_fail@plt+0x16104>
   27368:	ldr	r3, [fp, #-8]
   2736c:	add	r3, r3, #1
   27370:	b	27378 <__assert_fail@plt+0x16108>
   27374:	mov	r3, #0
   27378:	mov	r0, r3
   2737c:	add	sp, fp, #0
   27380:	pop	{fp}		; (ldr fp, [sp], #4)
   27384:	bx	lr
   27388:	push	{fp}		; (str fp, [sp, #-4]!)
   2738c:	add	fp, sp, #0
   27390:	sub	sp, sp, #12
   27394:	str	r0, [fp, #-8]
   27398:	str	r1, [fp, #-12]
   2739c:	ldr	r3, [fp, #-12]
   273a0:	cmp	r3, #0
   273a4:	blt	2742c <__assert_fail@plt+0x161bc>
   273a8:	ldr	r3, [fp, #-8]
   273ac:	ldr	r2, [r3, #4]
   273b0:	ldr	r3, [fp, #-12]
   273b4:	cmp	r2, r3
   273b8:	ble	2742c <__assert_fail@plt+0x161bc>
   273bc:	ldr	r3, [fp, #-8]
   273c0:	ldr	r3, [r3, #4]
   273c4:	sub	r2, r3, #1
   273c8:	ldr	r3, [fp, #-8]
   273cc:	str	r2, [r3, #4]
   273d0:	b	27414 <__assert_fail@plt+0x161a4>
   273d4:	ldr	r3, [fp, #-8]
   273d8:	ldr	r2, [r3, #8]
   273dc:	ldr	r3, [fp, #-12]
   273e0:	lsl	r3, r3, #2
   273e4:	add	r3, r2, r3
   273e8:	ldr	r2, [fp, #-8]
   273ec:	ldr	r1, [r2, #8]
   273f0:	ldr	r2, [fp, #-12]
   273f4:	add	r2, r2, #1
   273f8:	lsl	r2, r2, #2
   273fc:	add	r2, r1, r2
   27400:	ldr	r2, [r2]
   27404:	str	r2, [r3]
   27408:	ldr	r3, [fp, #-12]
   2740c:	add	r3, r3, #1
   27410:	str	r3, [fp, #-12]
   27414:	ldr	r3, [fp, #-8]
   27418:	ldr	r2, [r3, #4]
   2741c:	ldr	r3, [fp, #-12]
   27420:	cmp	r2, r3
   27424:	bgt	273d4 <__assert_fail@plt+0x16164>
   27428:	b	27430 <__assert_fail@plt+0x161c0>
   2742c:	nop			; (mov r0, r0)
   27430:	add	sp, fp, #0
   27434:	pop	{fp}		; (ldr fp, [sp], #4)
   27438:	bx	lr
   2743c:	push	{fp, lr}
   27440:	add	fp, sp, #4
   27444:	sub	sp, sp, #48	; 0x30
   27448:	str	r0, [fp, #-40]	; 0xffffffd8
   2744c:	sub	r3, fp, #48	; 0x30
   27450:	stm	r3, {r1, r2}
   27454:	ldr	r3, [fp, #-40]	; 0xffffffd8
   27458:	ldr	r2, [r3, #8]
   2745c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   27460:	ldr	r3, [r3, #4]
   27464:	cmp	r2, r3
   27468:	movcs	r3, #1
   2746c:	movcc	r3, #0
   27470:	uxtb	r3, r3
   27474:	cmp	r3, #0
   27478:	beq	276c8 <__assert_fail@plt+0x16458>
   2747c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   27480:	ldr	r3, [r3, #4]
   27484:	lsl	r3, r3, #1
   27488:	str	r3, [fp, #-8]
   2748c:	mov	r3, #12
   27490:	str	r3, [fp, #-12]
   27494:	ldr	r1, [fp, #-12]
   27498:	mvn	r0, #0
   2749c:	bl	3f560 <__assert_fail@plt+0x2e2f0>
   274a0:	mov	r3, r0
   274a4:	cmp	r3, #0
   274a8:	blt	274c4 <__assert_fail@plt+0x16254>
   274ac:	ldr	r1, [fp, #-12]
   274b0:	mvn	r0, #0
   274b4:	bl	3f560 <__assert_fail@plt+0x2e2f0>
   274b8:	mov	r3, r0
   274bc:	mov	r2, r3
   274c0:	b	274c8 <__assert_fail@plt+0x16258>
   274c4:	mvn	r2, #-2147483648	; 0x80000000
   274c8:	ldr	r3, [fp, #-8]
   274cc:	cmp	r2, r3
   274d0:	movcc	r3, #1
   274d4:	movcs	r3, #0
   274d8:	uxtb	r3, r3
   274dc:	cmp	r3, #0
   274e0:	beq	274ec <__assert_fail@plt+0x1627c>
   274e4:	mvn	r3, #0
   274e8:	b	27828 <__assert_fail@plt+0x165b8>
   274ec:	ldr	r3, [fp, #-40]	; 0xffffffd8
   274f0:	ldr	r2, [r3]
   274f4:	ldr	r3, [fp, #-8]
   274f8:	lsl	r3, r3, #3
   274fc:	mov	r1, r3
   27500:	mov	r0, r2
   27504:	bl	3e040 <__assert_fail@plt+0x2cdd0>
   27508:	str	r0, [fp, #-16]
   2750c:	ldr	r3, [fp, #-16]
   27510:	cmp	r3, #0
   27514:	moveq	r3, #1
   27518:	movne	r3, #0
   2751c:	uxtb	r3, r3
   27520:	cmp	r3, #0
   27524:	beq	27530 <__assert_fail@plt+0x162c0>
   27528:	mvn	r3, #0
   2752c:	b	27828 <__assert_fail@plt+0x165b8>
   27530:	ldr	r3, [fp, #-40]	; 0xffffffd8
   27534:	ldr	r2, [fp, #-16]
   27538:	str	r2, [r3]
   2753c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   27540:	ldr	r2, [r3, #12]
   27544:	ldr	r3, [fp, #-8]
   27548:	lsl	r3, r3, #2
   2754c:	mov	r1, r3
   27550:	mov	r0, r2
   27554:	bl	3e040 <__assert_fail@plt+0x2cdd0>
   27558:	str	r0, [fp, #-20]	; 0xffffffec
   2755c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   27560:	ldr	r2, [r3, #16]
   27564:	ldr	r3, [fp, #-8]
   27568:	lsl	r3, r3, #2
   2756c:	mov	r1, r3
   27570:	mov	r0, r2
   27574:	bl	3e040 <__assert_fail@plt+0x2cdd0>
   27578:	str	r0, [fp, #-24]	; 0xffffffe8
   2757c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   27580:	ldr	r0, [r3, #20]
   27584:	ldr	r2, [fp, #-8]
   27588:	mov	r3, r2
   2758c:	lsl	r3, r3, #1
   27590:	add	r3, r3, r2
   27594:	lsl	r3, r3, #2
   27598:	mov	r1, r3
   2759c:	bl	3e040 <__assert_fail@plt+0x2cdd0>
   275a0:	str	r0, [fp, #-28]	; 0xffffffe4
   275a4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   275a8:	ldr	r0, [r3, #24]
   275ac:	ldr	r2, [fp, #-8]
   275b0:	mov	r3, r2
   275b4:	lsl	r3, r3, #1
   275b8:	add	r3, r3, r2
   275bc:	lsl	r3, r3, #2
   275c0:	mov	r1, r3
   275c4:	bl	3e040 <__assert_fail@plt+0x2cdd0>
   275c8:	str	r0, [fp, #-32]	; 0xffffffe0
   275cc:	ldr	r3, [fp, #-20]	; 0xffffffec
   275d0:	cmp	r3, #0
   275d4:	moveq	r3, #1
   275d8:	movne	r3, #0
   275dc:	uxtb	r3, r3
   275e0:	cmp	r3, #0
   275e4:	bne	27604 <__assert_fail@plt+0x16394>
   275e8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   275ec:	cmp	r3, #0
   275f0:	moveq	r3, #1
   275f4:	movne	r3, #0
   275f8:	uxtb	r3, r3
   275fc:	cmp	r3, #0
   27600:	beq	2760c <__assert_fail@plt+0x1639c>
   27604:	mov	r3, #1
   27608:	b	27610 <__assert_fail@plt+0x163a0>
   2760c:	mov	r3, #0
   27610:	cmp	r3, #0
   27614:	bne	27634 <__assert_fail@plt+0x163c4>
   27618:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2761c:	cmp	r3, #0
   27620:	moveq	r3, #1
   27624:	movne	r3, #0
   27628:	uxtb	r3, r3
   2762c:	cmp	r3, #0
   27630:	beq	2763c <__assert_fail@plt+0x163cc>
   27634:	mov	r3, #1
   27638:	b	27640 <__assert_fail@plt+0x163d0>
   2763c:	mov	r3, #0
   27640:	cmp	r3, #0
   27644:	bne	27664 <__assert_fail@plt+0x163f4>
   27648:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2764c:	cmp	r3, #0
   27650:	moveq	r3, #1
   27654:	movne	r3, #0
   27658:	uxtb	r3, r3
   2765c:	cmp	r3, #0
   27660:	beq	2768c <__assert_fail@plt+0x1641c>
   27664:	ldr	r0, [fp, #-20]	; 0xffffffec
   27668:	bl	13630 <__assert_fail@plt+0x23c0>
   2766c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   27670:	bl	13630 <__assert_fail@plt+0x23c0>
   27674:	ldr	r0, [fp, #-28]	; 0xffffffe4
   27678:	bl	13630 <__assert_fail@plt+0x23c0>
   2767c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   27680:	bl	13630 <__assert_fail@plt+0x23c0>
   27684:	mvn	r3, #0
   27688:	b	27828 <__assert_fail@plt+0x165b8>
   2768c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   27690:	ldr	r2, [fp, #-20]	; 0xffffffec
   27694:	str	r2, [r3, #12]
   27698:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2769c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   276a0:	str	r2, [r3, #16]
   276a4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   276a8:	ldr	r2, [fp, #-28]	; 0xffffffe4
   276ac:	str	r2, [r3, #20]
   276b0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   276b4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   276b8:	str	r2, [r3, #24]
   276bc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   276c0:	ldr	r2, [fp, #-8]
   276c4:	str	r2, [r3, #4]
   276c8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   276cc:	ldr	r2, [r3]
   276d0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   276d4:	ldr	r3, [r3, #8]
   276d8:	lsl	r3, r3, #3
   276dc:	add	r3, r2, r3
   276e0:	mov	r2, r3
   276e4:	sub	r3, fp, #48	; 0x30
   276e8:	ldm	r3, {r0, r1}
   276ec:	stm	r2, {r0, r1}
   276f0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   276f4:	ldr	r2, [r3]
   276f8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   276fc:	ldr	r3, [r3, #8]
   27700:	lsl	r3, r3, #3
   27704:	add	r2, r2, r3
   27708:	ldr	r3, [r2, #4]
   2770c:	bic	r3, r3, #261120	; 0x3fc00
   27710:	bic	r3, r3, #768	; 0x300
   27714:	str	r3, [r2, #4]
   27718:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2771c:	ldr	r2, [r3]
   27720:	ldr	r3, [fp, #-40]	; 0xffffffd8
   27724:	ldr	r3, [r3, #8]
   27728:	lsl	r3, r3, #3
   2772c:	add	r1, r2, r3
   27730:	ldrb	r3, [fp, #-44]	; 0xffffffd4
   27734:	cmp	r3, #5
   27738:	bne	2774c <__assert_fail@plt+0x164dc>
   2773c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   27740:	ldr	r3, [r3, #92]	; 0x5c
   27744:	cmp	r3, #1
   27748:	bgt	27758 <__assert_fail@plt+0x164e8>
   2774c:	ldrb	r3, [fp, #-44]	; 0xffffffd4
   27750:	cmp	r3, #6
   27754:	bne	27760 <__assert_fail@plt+0x164f0>
   27758:	mov	r3, #1
   2775c:	b	27764 <__assert_fail@plt+0x164f4>
   27760:	mov	r3, #0
   27764:	uxtb	r3, r3
   27768:	and	r3, r3, #1
   2776c:	uxtb	r3, r3
   27770:	ldrb	r2, [r1, #6]
   27774:	and	r3, r3, #1
   27778:	bic	r2, r2, #16
   2777c:	lsl	r3, r3, #4
   27780:	orr	r3, r3, r2
   27784:	mov	r2, r3
   27788:	strb	r2, [r1, #6]
   2778c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   27790:	ldr	r2, [r3, #12]
   27794:	ldr	r3, [fp, #-40]	; 0xffffffd8
   27798:	ldr	r3, [r3, #8]
   2779c:	lsl	r3, r3, #2
   277a0:	add	r3, r2, r3
   277a4:	mvn	r2, #0
   277a8:	str	r2, [r3]
   277ac:	ldr	r3, [fp, #-40]	; 0xffffffd8
   277b0:	ldr	r1, [r3, #20]
   277b4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   277b8:	ldr	r2, [r3, #8]
   277bc:	mov	r3, r2
   277c0:	lsl	r3, r3, #1
   277c4:	add	r3, r3, r2
   277c8:	lsl	r3, r3, #2
   277cc:	add	r3, r1, r3
   277d0:	mov	r2, #12
   277d4:	mov	r1, #0
   277d8:	mov	r0, r3
   277dc:	bl	111bc <memset@plt>
   277e0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   277e4:	ldr	r1, [r3, #24]
   277e8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   277ec:	ldr	r2, [r3, #8]
   277f0:	mov	r3, r2
   277f4:	lsl	r3, r3, #1
   277f8:	add	r3, r3, r2
   277fc:	lsl	r3, r3, #2
   27800:	add	r3, r1, r3
   27804:	mov	r2, #12
   27808:	mov	r1, #0
   2780c:	mov	r0, r3
   27810:	bl	111bc <memset@plt>
   27814:	ldr	r3, [fp, #-40]	; 0xffffffd8
   27818:	ldr	r3, [r3, #8]
   2781c:	add	r1, r3, #1
   27820:	ldr	r2, [fp, #-40]	; 0xffffffd8
   27824:	str	r1, [r2, #8]
   27828:	mov	r0, r3
   2782c:	sub	sp, fp, #4
   27830:	pop	{fp, pc}
   27834:	push	{fp}		; (str fp, [sp, #-4]!)
   27838:	add	fp, sp, #0
   2783c:	sub	sp, sp, #20
   27840:	str	r0, [fp, #-16]
   27844:	str	r1, [fp, #-20]	; 0xffffffec
   27848:	ldr	r3, [fp, #-16]
   2784c:	ldr	r3, [r3, #4]
   27850:	mov	r2, r3
   27854:	ldr	r3, [fp, #-20]	; 0xffffffec
   27858:	add	r3, r2, r3
   2785c:	str	r3, [fp, #-8]
   27860:	mov	r3, #0
   27864:	str	r3, [fp, #-12]
   27868:	b	278a0 <__assert_fail@plt+0x16630>
   2786c:	ldr	r3, [fp, #-16]
   27870:	ldr	r2, [r3, #8]
   27874:	ldr	r3, [fp, #-12]
   27878:	lsl	r3, r3, #2
   2787c:	add	r3, r2, r3
   27880:	ldr	r3, [r3]
   27884:	mov	r2, r3
   27888:	ldr	r3, [fp, #-8]
   2788c:	add	r3, r3, r2
   27890:	str	r3, [fp, #-8]
   27894:	ldr	r3, [fp, #-12]
   27898:	add	r3, r3, #1
   2789c:	str	r3, [fp, #-12]
   278a0:	ldr	r3, [fp, #-16]
   278a4:	ldr	r2, [r3, #4]
   278a8:	ldr	r3, [fp, #-12]
   278ac:	cmp	r2, r3
   278b0:	bgt	2786c <__assert_fail@plt+0x165fc>
   278b4:	ldr	r3, [fp, #-8]
   278b8:	mov	r0, r3
   278bc:	add	sp, fp, #0
   278c0:	pop	{fp}		; (ldr fp, [sp], #4)
   278c4:	bx	lr
   278c8:	push	{fp, lr}
   278cc:	add	fp, sp, #4
   278d0:	sub	sp, sp, #40	; 0x28
   278d4:	str	r0, [fp, #-32]	; 0xffffffe0
   278d8:	str	r1, [fp, #-36]	; 0xffffffdc
   278dc:	str	r2, [fp, #-40]	; 0xffffffd8
   278e0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   278e4:	mov	r2, #0
   278e8:	str	r2, [r3]
   278ec:	ldr	r3, [fp, #-40]	; 0xffffffd8
   278f0:	ldr	r3, [r3, #4]
   278f4:	cmp	r3, #0
   278f8:	moveq	r3, #1
   278fc:	movne	r3, #0
   27900:	uxtb	r3, r3
   27904:	cmp	r3, #0
   27908:	beq	27920 <__assert_fail@plt+0x166b0>
   2790c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   27910:	mov	r2, #0
   27914:	str	r2, [r3]
   27918:	mov	r3, #0
   2791c:	b	27a28 <__assert_fail@plt+0x167b8>
   27920:	mov	r1, #0
   27924:	ldr	r0, [fp, #-40]	; 0xffffffd8
   27928:	bl	27834 <__assert_fail@plt+0x165c4>
   2792c:	str	r0, [fp, #-12]
   27930:	ldr	r3, [fp, #-36]	; 0xffffffdc
   27934:	ldr	r1, [r3, #32]
   27938:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2793c:	ldr	r2, [r3, #68]	; 0x44
   27940:	ldr	r3, [fp, #-12]
   27944:	and	r2, r2, r3
   27948:	mov	r3, r2
   2794c:	lsl	r3, r3, #1
   27950:	add	r3, r3, r2
   27954:	lsl	r3, r3, #2
   27958:	add	r3, r1, r3
   2795c:	str	r3, [fp, #-16]
   27960:	mov	r3, #0
   27964:	str	r3, [fp, #-8]
   27968:	b	279d4 <__assert_fail@plt+0x16764>
   2796c:	ldr	r3, [fp, #-16]
   27970:	ldr	r2, [r3, #8]
   27974:	ldr	r3, [fp, #-8]
   27978:	lsl	r3, r3, #2
   2797c:	add	r3, r2, r3
   27980:	ldr	r3, [r3]
   27984:	str	r3, [fp, #-20]	; 0xffffffec
   27988:	ldr	r3, [fp, #-20]	; 0xffffffec
   2798c:	ldr	r2, [r3]
   27990:	ldr	r3, [fp, #-12]
   27994:	cmp	r2, r3
   27998:	bne	279c4 <__assert_fail@plt+0x16754>
   2799c:	ldr	r3, [fp, #-20]	; 0xffffffec
   279a0:	add	r3, r3, #4
   279a4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   279a8:	mov	r0, r3
   279ac:	bl	271d4 <__assert_fail@plt+0x15f64>
   279b0:	mov	r3, r0
   279b4:	cmp	r3, #0
   279b8:	beq	279c8 <__assert_fail@plt+0x16758>
   279bc:	ldr	r3, [fp, #-20]	; 0xffffffec
   279c0:	b	27a28 <__assert_fail@plt+0x167b8>
   279c4:	nop			; (mov r0, r0)
   279c8:	ldr	r3, [fp, #-8]
   279cc:	add	r3, r3, #1
   279d0:	str	r3, [fp, #-8]
   279d4:	ldr	r3, [fp, #-16]
   279d8:	ldr	r2, [r3]
   279dc:	ldr	r3, [fp, #-8]
   279e0:	cmp	r2, r3
   279e4:	bgt	2796c <__assert_fail@plt+0x166fc>
   279e8:	ldr	r2, [fp, #-12]
   279ec:	ldr	r1, [fp, #-40]	; 0xffffffd8
   279f0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   279f4:	bl	27e6c <__assert_fail@plt+0x16bfc>
   279f8:	str	r0, [fp, #-24]	; 0xffffffe8
   279fc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   27a00:	cmp	r3, #0
   27a04:	moveq	r3, #1
   27a08:	movne	r3, #0
   27a0c:	uxtb	r3, r3
   27a10:	cmp	r3, #0
   27a14:	beq	27a24 <__assert_fail@plt+0x167b4>
   27a18:	ldr	r3, [fp, #-32]	; 0xffffffe0
   27a1c:	mov	r2, #12
   27a20:	str	r2, [r3]
   27a24:	ldr	r3, [fp, #-24]	; 0xffffffe8
   27a28:	mov	r0, r3
   27a2c:	sub	sp, fp, #4
   27a30:	pop	{fp, pc}
   27a34:	push	{fp, lr}
   27a38:	add	fp, sp, #4
   27a3c:	sub	sp, sp, #40	; 0x28
   27a40:	str	r0, [fp, #-32]	; 0xffffffe0
   27a44:	str	r1, [fp, #-36]	; 0xffffffdc
   27a48:	str	r2, [fp, #-40]	; 0xffffffd8
   27a4c:	str	r3, [fp, #-44]	; 0xffffffd4
   27a50:	ldr	r3, [fp, #-32]	; 0xffffffe0
   27a54:	mov	r2, #0
   27a58:	str	r2, [r3]
   27a5c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   27a60:	ldr	r3, [r3, #4]
   27a64:	cmp	r3, #0
   27a68:	bne	27a80 <__assert_fail@plt+0x16810>
   27a6c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   27a70:	mov	r2, #0
   27a74:	str	r2, [r3]
   27a78:	mov	r3, #0
   27a7c:	b	27ba8 <__assert_fail@plt+0x16938>
   27a80:	ldr	r1, [fp, #-44]	; 0xffffffd4
   27a84:	ldr	r0, [fp, #-40]	; 0xffffffd8
   27a88:	bl	27834 <__assert_fail@plt+0x165c4>
   27a8c:	str	r0, [fp, #-12]
   27a90:	ldr	r3, [fp, #-36]	; 0xffffffdc
   27a94:	ldr	r1, [r3, #32]
   27a98:	ldr	r3, [fp, #-36]	; 0xffffffdc
   27a9c:	ldr	r2, [r3, #68]	; 0x44
   27aa0:	ldr	r3, [fp, #-12]
   27aa4:	and	r2, r2, r3
   27aa8:	mov	r3, r2
   27aac:	lsl	r3, r3, #1
   27ab0:	add	r3, r3, r2
   27ab4:	lsl	r3, r3, #2
   27ab8:	add	r3, r1, r3
   27abc:	str	r3, [fp, #-16]
   27ac0:	mov	r3, #0
   27ac4:	str	r3, [fp, #-8]
   27ac8:	b	27b50 <__assert_fail@plt+0x168e0>
   27acc:	ldr	r3, [fp, #-16]
   27ad0:	ldr	r2, [r3, #8]
   27ad4:	ldr	r3, [fp, #-8]
   27ad8:	lsl	r3, r3, #2
   27adc:	add	r3, r2, r3
   27ae0:	ldr	r3, [r3]
   27ae4:	str	r3, [fp, #-20]	; 0xffffffec
   27ae8:	ldr	r3, [fp, #-20]	; 0xffffffec
   27aec:	ldr	r2, [r3]
   27af0:	ldr	r3, [fp, #-12]
   27af4:	cmp	r2, r3
   27af8:	bne	27b44 <__assert_fail@plt+0x168d4>
   27afc:	ldr	r3, [fp, #-20]	; 0xffffffec
   27b00:	ldrb	r3, [r3, #52]	; 0x34
   27b04:	and	r3, r3, #15
   27b08:	uxtb	r3, r3
   27b0c:	mov	r2, r3
   27b10:	ldr	r3, [fp, #-44]	; 0xffffffd4
   27b14:	cmp	r2, r3
   27b18:	bne	27b44 <__assert_fail@plt+0x168d4>
   27b1c:	ldr	r3, [fp, #-20]	; 0xffffffec
   27b20:	ldr	r3, [r3, #40]	; 0x28
   27b24:	ldr	r1, [fp, #-40]	; 0xffffffd8
   27b28:	mov	r0, r3
   27b2c:	bl	271d4 <__assert_fail@plt+0x15f64>
   27b30:	mov	r3, r0
   27b34:	cmp	r3, #0
   27b38:	beq	27b44 <__assert_fail@plt+0x168d4>
   27b3c:	ldr	r3, [fp, #-20]	; 0xffffffec
   27b40:	b	27ba8 <__assert_fail@plt+0x16938>
   27b44:	ldr	r3, [fp, #-8]
   27b48:	add	r3, r3, #1
   27b4c:	str	r3, [fp, #-8]
   27b50:	ldr	r3, [fp, #-16]
   27b54:	ldr	r2, [r3]
   27b58:	ldr	r3, [fp, #-8]
   27b5c:	cmp	r2, r3
   27b60:	bgt	27acc <__assert_fail@plt+0x1685c>
   27b64:	ldr	r3, [fp, #-12]
   27b68:	ldr	r2, [fp, #-44]	; 0xffffffd4
   27b6c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   27b70:	ldr	r0, [fp, #-36]	; 0xffffffdc
   27b74:	bl	280b8 <__assert_fail@plt+0x16e48>
   27b78:	str	r0, [fp, #-24]	; 0xffffffe8
   27b7c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   27b80:	cmp	r3, #0
   27b84:	moveq	r3, #1
   27b88:	movne	r3, #0
   27b8c:	uxtb	r3, r3
   27b90:	cmp	r3, #0
   27b94:	beq	27ba4 <__assert_fail@plt+0x16934>
   27b98:	ldr	r3, [fp, #-32]	; 0xffffffe0
   27b9c:	mov	r2, #12
   27ba0:	str	r2, [r3]
   27ba4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   27ba8:	mov	r0, r3
   27bac:	sub	sp, fp, #4
   27bb0:	pop	{fp, pc}
   27bb4:	push	{fp, lr}
   27bb8:	add	fp, sp, #4
   27bbc:	sub	sp, sp, #40	; 0x28
   27bc0:	str	r0, [fp, #-32]	; 0xffffffe0
   27bc4:	str	r1, [fp, #-36]	; 0xffffffdc
   27bc8:	str	r2, [fp, #-40]	; 0xffffffd8
   27bcc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   27bd0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   27bd4:	str	r2, [r3]
   27bd8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   27bdc:	add	r2, r3, #16
   27be0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   27be4:	ldr	r3, [r3, #8]
   27be8:	mov	r1, r3
   27bec:	mov	r0, r2
   27bf0:	bl	25ef8 <__assert_fail@plt+0x14c88>
   27bf4:	str	r0, [fp, #-12]
   27bf8:	ldr	r3, [fp, #-12]
   27bfc:	cmp	r3, #0
   27c00:	movne	r3, #1
   27c04:	moveq	r3, #0
   27c08:	uxtb	r3, r3
   27c0c:	cmp	r3, #0
   27c10:	beq	27c1c <__assert_fail@plt+0x169ac>
   27c14:	mov	r3, #12
   27c18:	b	27db0 <__assert_fail@plt+0x16b40>
   27c1c:	mov	r3, #0
   27c20:	str	r3, [fp, #-8]
   27c24:	b	27ca4 <__assert_fail@plt+0x16a34>
   27c28:	ldr	r3, [fp, #-36]	; 0xffffffdc
   27c2c:	ldr	r2, [r3, #12]
   27c30:	ldr	r3, [fp, #-8]
   27c34:	lsl	r3, r3, #2
   27c38:	add	r3, r2, r3
   27c3c:	ldr	r3, [r3]
   27c40:	str	r3, [fp, #-16]
   27c44:	ldr	r3, [fp, #-32]	; 0xffffffe0
   27c48:	ldr	r2, [r3]
   27c4c:	ldr	r3, [fp, #-16]
   27c50:	lsl	r3, r3, #3
   27c54:	add	r3, r2, r3
   27c58:	ldrb	r3, [r3, #4]
   27c5c:	and	r3, r3, #8
   27c60:	cmp	r3, #0
   27c64:	bne	27c98 <__assert_fail@plt+0x16a28>
   27c68:	ldr	r3, [fp, #-36]	; 0xffffffdc
   27c6c:	add	r3, r3, #16
   27c70:	ldr	r1, [fp, #-16]
   27c74:	mov	r0, r3
   27c78:	bl	27100 <__assert_fail@plt+0x15e90>
   27c7c:	mov	r3, r0
   27c80:	eor	r3, r3, #1
   27c84:	uxtb	r3, r3
   27c88:	cmp	r3, #0
   27c8c:	beq	27c98 <__assert_fail@plt+0x16a28>
   27c90:	mov	r3, #12
   27c94:	b	27db0 <__assert_fail@plt+0x16b40>
   27c98:	ldr	r3, [fp, #-8]
   27c9c:	add	r3, r3, #1
   27ca0:	str	r3, [fp, #-8]
   27ca4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   27ca8:	ldr	r2, [r3, #8]
   27cac:	ldr	r3, [fp, #-8]
   27cb0:	cmp	r2, r3
   27cb4:	bgt	27c28 <__assert_fail@plt+0x169b8>
   27cb8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   27cbc:	ldr	r1, [r3, #32]
   27cc0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   27cc4:	ldr	r2, [r3, #68]	; 0x44
   27cc8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   27ccc:	and	r2, r2, r3
   27cd0:	mov	r3, r2
   27cd4:	lsl	r3, r3, #1
   27cd8:	add	r3, r3, r2
   27cdc:	lsl	r3, r3, #2
   27ce0:	add	r3, r1, r3
   27ce4:	str	r3, [fp, #-20]	; 0xffffffec
   27ce8:	ldr	r3, [fp, #-20]	; 0xffffffec
   27cec:	ldr	r2, [r3, #4]
   27cf0:	ldr	r3, [fp, #-20]	; 0xffffffec
   27cf4:	ldr	r3, [r3]
   27cf8:	cmp	r2, r3
   27cfc:	movle	r3, #1
   27d00:	movgt	r3, #0
   27d04:	uxtb	r3, r3
   27d08:	cmp	r3, #0
   27d0c:	beq	27d80 <__assert_fail@plt+0x16b10>
   27d10:	ldr	r3, [fp, #-20]	; 0xffffffec
   27d14:	ldr	r3, [r3]
   27d18:	add	r3, r3, #1
   27d1c:	lsl	r3, r3, #1
   27d20:	str	r3, [fp, #-24]	; 0xffffffe8
   27d24:	ldr	r3, [fp, #-20]	; 0xffffffec
   27d28:	ldr	r2, [r3, #8]
   27d2c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   27d30:	lsl	r3, r3, #2
   27d34:	mov	r1, r3
   27d38:	mov	r0, r2
   27d3c:	bl	3e040 <__assert_fail@plt+0x2cdd0>
   27d40:	str	r0, [fp, #-28]	; 0xffffffe4
   27d44:	ldr	r3, [fp, #-28]	; 0xffffffe4
   27d48:	cmp	r3, #0
   27d4c:	moveq	r3, #1
   27d50:	movne	r3, #0
   27d54:	uxtb	r3, r3
   27d58:	cmp	r3, #0
   27d5c:	beq	27d68 <__assert_fail@plt+0x16af8>
   27d60:	mov	r3, #12
   27d64:	b	27db0 <__assert_fail@plt+0x16b40>
   27d68:	ldr	r3, [fp, #-20]	; 0xffffffec
   27d6c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   27d70:	str	r2, [r3, #8]
   27d74:	ldr	r3, [fp, #-20]	; 0xffffffec
   27d78:	ldr	r2, [fp, #-24]	; 0xffffffe8
   27d7c:	str	r2, [r3, #4]
   27d80:	ldr	r3, [fp, #-20]	; 0xffffffec
   27d84:	ldr	r2, [r3, #8]
   27d88:	ldr	r3, [fp, #-20]	; 0xffffffec
   27d8c:	ldr	r3, [r3]
   27d90:	add	r0, r3, #1
   27d94:	ldr	r1, [fp, #-20]	; 0xffffffec
   27d98:	str	r0, [r1]
   27d9c:	lsl	r3, r3, #2
   27da0:	add	r3, r2, r3
   27da4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   27da8:	str	r2, [r3]
   27dac:	mov	r3, #0
   27db0:	mov	r0, r3
   27db4:	sub	sp, fp, #4
   27db8:	pop	{fp, pc}
   27dbc:	push	{fp, lr}
   27dc0:	add	fp, sp, #4
   27dc4:	sub	sp, sp, #8
   27dc8:	str	r0, [fp, #-8]
   27dcc:	ldr	r3, [fp, #-8]
   27dd0:	ldr	r3, [r3, #24]
   27dd4:	mov	r0, r3
   27dd8:	bl	13630 <__assert_fail@plt+0x23c0>
   27ddc:	ldr	r3, [fp, #-8]
   27de0:	ldr	r3, [r3, #36]	; 0x24
   27de4:	mov	r0, r3
   27de8:	bl	13630 <__assert_fail@plt+0x23c0>
   27dec:	ldr	r3, [fp, #-8]
   27df0:	ldr	r2, [r3, #40]	; 0x28
   27df4:	ldr	r3, [fp, #-8]
   27df8:	add	r3, r3, #4
   27dfc:	cmp	r2, r3
   27e00:	beq	27e28 <__assert_fail@plt+0x16bb8>
   27e04:	ldr	r3, [fp, #-8]
   27e08:	ldr	r3, [r3, #40]	; 0x28
   27e0c:	ldr	r3, [r3, #8]
   27e10:	mov	r0, r3
   27e14:	bl	13630 <__assert_fail@plt+0x23c0>
   27e18:	ldr	r3, [fp, #-8]
   27e1c:	ldr	r3, [r3, #40]	; 0x28
   27e20:	mov	r0, r3
   27e24:	bl	13630 <__assert_fail@plt+0x23c0>
   27e28:	ldr	r3, [fp, #-8]
   27e2c:	ldr	r3, [r3, #12]
   27e30:	mov	r0, r3
   27e34:	bl	13630 <__assert_fail@plt+0x23c0>
   27e38:	ldr	r3, [fp, #-8]
   27e3c:	ldr	r3, [r3, #48]	; 0x30
   27e40:	mov	r0, r3
   27e44:	bl	13630 <__assert_fail@plt+0x23c0>
   27e48:	ldr	r3, [fp, #-8]
   27e4c:	ldr	r3, [r3, #44]	; 0x2c
   27e50:	mov	r0, r3
   27e54:	bl	13630 <__assert_fail@plt+0x23c0>
   27e58:	ldr	r0, [fp, #-8]
   27e5c:	bl	13630 <__assert_fail@plt+0x23c0>
   27e60:	nop			; (mov r0, r0)
   27e64:	sub	sp, fp, #4
   27e68:	pop	{fp, pc}
   27e6c:	push	{fp, lr}
   27e70:	add	fp, sp, #4
   27e74:	sub	sp, sp, #40	; 0x28
   27e78:	str	r0, [fp, #-32]	; 0xffffffe0
   27e7c:	str	r1, [fp, #-36]	; 0xffffffdc
   27e80:	str	r2, [fp, #-40]	; 0xffffffd8
   27e84:	mov	r1, #1
   27e88:	mov	r0, #56	; 0x38
   27e8c:	bl	3ded4 <__assert_fail@plt+0x2cc64>
   27e90:	mov	r3, r0
   27e94:	str	r3, [fp, #-12]
   27e98:	ldr	r3, [fp, #-12]
   27e9c:	cmp	r3, #0
   27ea0:	moveq	r3, #1
   27ea4:	movne	r3, #0
   27ea8:	uxtb	r3, r3
   27eac:	cmp	r3, #0
   27eb0:	beq	27ebc <__assert_fail@plt+0x16c4c>
   27eb4:	mov	r3, #0
   27eb8:	b	280a8 <__assert_fail@plt+0x16e38>
   27ebc:	ldr	r3, [fp, #-12]
   27ec0:	add	r3, r3, #4
   27ec4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   27ec8:	mov	r0, r3
   27ecc:	bl	26130 <__assert_fail@plt+0x14ec0>
   27ed0:	str	r0, [fp, #-16]
   27ed4:	ldr	r3, [fp, #-16]
   27ed8:	cmp	r3, #0
   27edc:	movne	r3, #1
   27ee0:	moveq	r3, #0
   27ee4:	uxtb	r3, r3
   27ee8:	cmp	r3, #0
   27eec:	beq	27f00 <__assert_fail@plt+0x16c90>
   27ef0:	ldr	r0, [fp, #-12]
   27ef4:	bl	13630 <__assert_fail@plt+0x23c0>
   27ef8:	mov	r3, #0
   27efc:	b	280a8 <__assert_fail@plt+0x16e38>
   27f00:	ldr	r3, [fp, #-12]
   27f04:	add	r2, r3, #4
   27f08:	ldr	r3, [fp, #-12]
   27f0c:	str	r2, [r3, #40]	; 0x28
   27f10:	mov	r3, #0
   27f14:	str	r3, [fp, #-8]
   27f18:	b	28050 <__assert_fail@plt+0x16de0>
   27f1c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   27f20:	ldr	r2, [r3]
   27f24:	ldr	r3, [fp, #-36]	; 0xffffffdc
   27f28:	ldr	r1, [r3, #8]
   27f2c:	ldr	r3, [fp, #-8]
   27f30:	lsl	r3, r3, #2
   27f34:	add	r3, r1, r3
   27f38:	ldr	r3, [r3]
   27f3c:	lsl	r3, r3, #3
   27f40:	add	r3, r2, r3
   27f44:	str	r3, [fp, #-20]	; 0xffffffec
   27f48:	ldr	r3, [fp, #-20]	; 0xffffffec
   27f4c:	ldrb	r3, [r3, #4]
   27f50:	str	r3, [fp, #-24]	; 0xffffffe8
   27f54:	ldr	r3, [fp, #-24]	; 0xffffffe8
   27f58:	cmp	r3, #1
   27f5c:	bne	27f78 <__assert_fail@plt+0x16d08>
   27f60:	ldr	r3, [fp, #-20]	; 0xffffffec
   27f64:	ldr	r2, [r3, #4]
   27f68:	ldr	r3, [pc, #324]	; 280b4 <__assert_fail@plt+0x16e44>
   27f6c:	and	r3, r3, r2
   27f70:	cmp	r3, #0
   27f74:	beq	28040 <__assert_fail@plt+0x16dd0>
   27f78:	ldr	r3, [fp, #-12]
   27f7c:	ldrb	r3, [r3, #52]	; 0x34
   27f80:	lsr	r3, r3, #5
   27f84:	and	r3, r3, #1
   27f88:	uxtb	r2, r3
   27f8c:	ldr	r3, [fp, #-20]	; 0xffffffec
   27f90:	ldrb	r3, [r3, #6]
   27f94:	lsr	r3, r3, #4
   27f98:	and	r3, r3, #1
   27f9c:	uxtb	r3, r3
   27fa0:	orr	r3, r2, r3
   27fa4:	uxtb	r3, r3
   27fa8:	ldr	r1, [fp, #-12]
   27fac:	ldrb	r2, [r1, #52]	; 0x34
   27fb0:	and	r3, r3, #1
   27fb4:	bic	r2, r2, #32
   27fb8:	lsl	r3, r3, #5
   27fbc:	orr	r3, r3, r2
   27fc0:	mov	r2, r3
   27fc4:	strb	r2, [r1, #52]	; 0x34
   27fc8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   27fcc:	cmp	r3, #2
   27fd0:	bne	27fe8 <__assert_fail@plt+0x16d78>
   27fd4:	ldr	r2, [fp, #-12]
   27fd8:	ldrb	r3, [r2, #52]	; 0x34
   27fdc:	orr	r3, r3, #16
   27fe0:	strb	r3, [r2, #52]	; 0x34
   27fe4:	b	28044 <__assert_fail@plt+0x16dd4>
   27fe8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   27fec:	cmp	r3, #4
   27ff0:	bne	28008 <__assert_fail@plt+0x16d98>
   27ff4:	ldr	r2, [fp, #-12]
   27ff8:	ldrb	r3, [r2, #52]	; 0x34
   27ffc:	orr	r3, r3, #64	; 0x40
   28000:	strb	r3, [r2, #52]	; 0x34
   28004:	b	28044 <__assert_fail@plt+0x16dd4>
   28008:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2800c:	cmp	r3, #12
   28010:	beq	2802c <__assert_fail@plt+0x16dbc>
   28014:	ldr	r3, [fp, #-20]	; 0xffffffec
   28018:	ldr	r2, [r3, #4]
   2801c:	ldr	r3, [pc, #144]	; 280b4 <__assert_fail@plt+0x16e44>
   28020:	and	r3, r3, r2
   28024:	cmp	r3, #0
   28028:	beq	28044 <__assert_fail@plt+0x16dd4>
   2802c:	ldr	r2, [fp, #-12]
   28030:	ldrb	r3, [r2, #52]	; 0x34
   28034:	orr	r3, r3, #128	; 0x80
   28038:	strb	r3, [r2, #52]	; 0x34
   2803c:	b	28044 <__assert_fail@plt+0x16dd4>
   28040:	nop			; (mov r0, r0)
   28044:	ldr	r3, [fp, #-8]
   28048:	add	r3, r3, #1
   2804c:	str	r3, [fp, #-8]
   28050:	ldr	r3, [fp, #-36]	; 0xffffffdc
   28054:	ldr	r2, [r3, #4]
   28058:	ldr	r3, [fp, #-8]
   2805c:	cmp	r2, r3
   28060:	bgt	27f1c <__assert_fail@plt+0x16cac>
   28064:	ldr	r2, [fp, #-40]	; 0xffffffd8
   28068:	ldr	r1, [fp, #-12]
   2806c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   28070:	bl	27bb4 <__assert_fail@plt+0x16944>
   28074:	str	r0, [fp, #-16]
   28078:	ldr	r3, [fp, #-16]
   2807c:	cmp	r3, #0
   28080:	movne	r3, #1
   28084:	moveq	r3, #0
   28088:	uxtb	r3, r3
   2808c:	cmp	r3, #0
   28090:	beq	280a4 <__assert_fail@plt+0x16e34>
   28094:	ldr	r0, [fp, #-12]
   28098:	bl	27dbc <__assert_fail@plt+0x16b4c>
   2809c:	mov	r3, #0
   280a0:	str	r3, [fp, #-12]
   280a4:	ldr	r3, [fp, #-12]
   280a8:	mov	r0, r3
   280ac:	sub	sp, fp, #4
   280b0:	pop	{fp, pc}
   280b4:	andeq	pc, r3, r0, lsl #30
   280b8:	push	{fp, lr}
   280bc:	add	fp, sp, #4
   280c0:	sub	sp, sp, #48	; 0x30
   280c4:	str	r0, [fp, #-40]	; 0xffffffd8
   280c8:	str	r1, [fp, #-44]	; 0xffffffd4
   280cc:	str	r2, [fp, #-48]	; 0xffffffd0
   280d0:	str	r3, [fp, #-52]	; 0xffffffcc
   280d4:	mov	r3, #0
   280d8:	str	r3, [fp, #-12]
   280dc:	mov	r1, #1
   280e0:	mov	r0, #56	; 0x38
   280e4:	bl	3ded4 <__assert_fail@plt+0x2cc64>
   280e8:	mov	r3, r0
   280ec:	str	r3, [fp, #-16]
   280f0:	ldr	r3, [fp, #-16]
   280f4:	cmp	r3, #0
   280f8:	moveq	r3, #1
   280fc:	movne	r3, #0
   28100:	uxtb	r3, r3
   28104:	cmp	r3, #0
   28108:	beq	28114 <__assert_fail@plt+0x16ea4>
   2810c:	mov	r3, #0
   28110:	b	2845c <__assert_fail@plt+0x171ec>
   28114:	ldr	r3, [fp, #-16]
   28118:	add	r3, r3, #4
   2811c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   28120:	mov	r0, r3
   28124:	bl	26130 <__assert_fail@plt+0x14ec0>
   28128:	str	r0, [fp, #-20]	; 0xffffffec
   2812c:	ldr	r3, [fp, #-20]	; 0xffffffec
   28130:	cmp	r3, #0
   28134:	movne	r3, #1
   28138:	moveq	r3, #0
   2813c:	uxtb	r3, r3
   28140:	cmp	r3, #0
   28144:	beq	28158 <__assert_fail@plt+0x16ee8>
   28148:	ldr	r0, [fp, #-16]
   2814c:	bl	13630 <__assert_fail@plt+0x23c0>
   28150:	mov	r3, #0
   28154:	b	2845c <__assert_fail@plt+0x171ec>
   28158:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2815c:	uxtb	r3, r3
   28160:	and	r3, r3, #15
   28164:	uxtb	r1, r3
   28168:	ldr	r2, [fp, #-16]
   2816c:	ldrb	r3, [r2, #52]	; 0x34
   28170:	and	r1, r1, #15
   28174:	bic	r3, r3, #15
   28178:	orr	r3, r1, r3
   2817c:	strb	r3, [r2, #52]	; 0x34
   28180:	ldr	r3, [fp, #-16]
   28184:	add	r2, r3, #4
   28188:	ldr	r3, [fp, #-16]
   2818c:	str	r2, [r3, #40]	; 0x28
   28190:	mov	r3, #0
   28194:	str	r3, [fp, #-8]
   28198:	b	28404 <__assert_fail@plt+0x17194>
   2819c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   281a0:	ldr	r2, [r3]
   281a4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   281a8:	ldr	r1, [r3, #8]
   281ac:	ldr	r3, [fp, #-8]
   281b0:	lsl	r3, r3, #2
   281b4:	add	r3, r1, r3
   281b8:	ldr	r3, [r3]
   281bc:	lsl	r3, r3, #3
   281c0:	add	r3, r2, r3
   281c4:	str	r3, [fp, #-24]	; 0xffffffe8
   281c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   281cc:	ldrb	r3, [r3, #4]
   281d0:	str	r3, [fp, #-28]	; 0xffffffe4
   281d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   281d8:	ldr	r3, [r3, #4]
   281dc:	lsr	r3, r3, #8
   281e0:	lsl	r3, r3, #22
   281e4:	lsr	r3, r3, #22
   281e8:	uxth	r3, r3
   281ec:	str	r3, [fp, #-32]	; 0xffffffe0
   281f0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   281f4:	cmp	r3, #1
   281f8:	bne	28208 <__assert_fail@plt+0x16f98>
   281fc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   28200:	cmp	r3, #0
   28204:	beq	283f4 <__assert_fail@plt+0x17184>
   28208:	ldr	r3, [fp, #-16]
   2820c:	ldrb	r3, [r3, #52]	; 0x34
   28210:	lsr	r3, r3, #5
   28214:	and	r3, r3, #1
   28218:	uxtb	r2, r3
   2821c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   28220:	ldrb	r3, [r3, #6]
   28224:	lsr	r3, r3, #4
   28228:	and	r3, r3, #1
   2822c:	uxtb	r3, r3
   28230:	orr	r3, r2, r3
   28234:	uxtb	r3, r3
   28238:	ldr	r1, [fp, #-16]
   2823c:	ldrb	r2, [r1, #52]	; 0x34
   28240:	and	r3, r3, #1
   28244:	bic	r2, r2, #32
   28248:	lsl	r3, r3, #5
   2824c:	orr	r3, r3, r2
   28250:	mov	r2, r3
   28254:	strb	r2, [r1, #52]	; 0x34
   28258:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2825c:	cmp	r3, #2
   28260:	bne	28278 <__assert_fail@plt+0x17008>
   28264:	ldr	r2, [fp, #-16]
   28268:	ldrb	r3, [r2, #52]	; 0x34
   2826c:	orr	r3, r3, #16
   28270:	strb	r3, [r2, #52]	; 0x34
   28274:	b	28294 <__assert_fail@plt+0x17024>
   28278:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2827c:	cmp	r3, #4
   28280:	bne	28294 <__assert_fail@plt+0x17024>
   28284:	ldr	r2, [fp, #-16]
   28288:	ldrb	r3, [r2, #52]	; 0x34
   2828c:	orr	r3, r3, #64	; 0x40
   28290:	strb	r3, [r2, #52]	; 0x34
   28294:	ldr	r3, [fp, #-32]	; 0xffffffe0
   28298:	cmp	r3, #0
   2829c:	beq	283f8 <__assert_fail@plt+0x17188>
   282a0:	ldr	r3, [fp, #-16]
   282a4:	ldr	r2, [r3, #40]	; 0x28
   282a8:	ldr	r3, [fp, #-16]
   282ac:	add	r3, r3, #4
   282b0:	cmp	r2, r3
   282b4:	bne	28348 <__assert_fail@plt+0x170d8>
   282b8:	mov	r0, #12
   282bc:	bl	3df98 <__assert_fail@plt+0x2cd28>
   282c0:	mov	r3, r0
   282c4:	str	r3, [fp, #-36]	; 0xffffffdc
   282c8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   282cc:	cmp	r3, #0
   282d0:	moveq	r3, #1
   282d4:	movne	r3, #0
   282d8:	uxtb	r3, r3
   282dc:	cmp	r3, #0
   282e0:	beq	282f4 <__assert_fail@plt+0x17084>
   282e4:	ldr	r0, [fp, #-16]
   282e8:	bl	27dbc <__assert_fail@plt+0x16b4c>
   282ec:	mov	r3, #0
   282f0:	b	2845c <__assert_fail@plt+0x171ec>
   282f4:	ldr	r3, [fp, #-16]
   282f8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   282fc:	str	r2, [r3, #40]	; 0x28
   28300:	ldr	r3, [fp, #-16]
   28304:	ldr	r3, [r3, #40]	; 0x28
   28308:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2830c:	mov	r0, r3
   28310:	bl	26130 <__assert_fail@plt+0x14ec0>
   28314:	mov	r3, r0
   28318:	cmp	r3, #0
   2831c:	beq	28330 <__assert_fail@plt+0x170c0>
   28320:	ldr	r0, [fp, #-16]
   28324:	bl	27dbc <__assert_fail@plt+0x16b4c>
   28328:	mov	r3, #0
   2832c:	b	2845c <__assert_fail@plt+0x171ec>
   28330:	mov	r3, #0
   28334:	str	r3, [fp, #-12]
   28338:	ldr	r2, [fp, #-16]
   2833c:	ldrb	r3, [r2, #52]	; 0x34
   28340:	orr	r3, r3, #128	; 0x80
   28344:	strb	r3, [r2, #52]	; 0x34
   28348:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2834c:	and	r3, r3, #1
   28350:	cmp	r3, #0
   28354:	beq	28368 <__assert_fail@plt+0x170f8>
   28358:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2835c:	and	r3, r3, #1
   28360:	cmp	r3, #0
   28364:	beq	283c8 <__assert_fail@plt+0x17158>
   28368:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2836c:	and	r3, r3, #2
   28370:	cmp	r3, #0
   28374:	beq	28388 <__assert_fail@plt+0x17118>
   28378:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2837c:	and	r3, r3, #1
   28380:	cmp	r3, #0
   28384:	bne	283c8 <__assert_fail@plt+0x17158>
   28388:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2838c:	and	r3, r3, #16
   28390:	cmp	r3, #0
   28394:	beq	283a8 <__assert_fail@plt+0x17138>
   28398:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2839c:	and	r3, r3, #2
   283a0:	cmp	r3, #0
   283a4:	beq	283c8 <__assert_fail@plt+0x17158>
   283a8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   283ac:	and	r3, r3, #64	; 0x40
   283b0:	cmp	r3, #0
   283b4:	beq	283f8 <__assert_fail@plt+0x17188>
   283b8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   283bc:	and	r3, r3, #4
   283c0:	cmp	r3, #0
   283c4:	bne	283f8 <__assert_fail@plt+0x17188>
   283c8:	ldr	r3, [fp, #-16]
   283cc:	add	r0, r3, #4
   283d0:	ldr	r2, [fp, #-8]
   283d4:	ldr	r3, [fp, #-12]
   283d8:	sub	r3, r2, r3
   283dc:	mov	r1, r3
   283e0:	bl	27388 <__assert_fail@plt+0x16118>
   283e4:	ldr	r3, [fp, #-12]
   283e8:	add	r3, r3, #1
   283ec:	str	r3, [fp, #-12]
   283f0:	b	283f8 <__assert_fail@plt+0x17188>
   283f4:	nop			; (mov r0, r0)
   283f8:	ldr	r3, [fp, #-8]
   283fc:	add	r3, r3, #1
   28400:	str	r3, [fp, #-8]
   28404:	ldr	r3, [fp, #-44]	; 0xffffffd4
   28408:	ldr	r2, [r3, #4]
   2840c:	ldr	r3, [fp, #-8]
   28410:	cmp	r2, r3
   28414:	bgt	2819c <__assert_fail@plt+0x16f2c>
   28418:	ldr	r2, [fp, #-52]	; 0xffffffcc
   2841c:	ldr	r1, [fp, #-16]
   28420:	ldr	r0, [fp, #-40]	; 0xffffffd8
   28424:	bl	27bb4 <__assert_fail@plt+0x16944>
   28428:	str	r0, [fp, #-20]	; 0xffffffec
   2842c:	ldr	r3, [fp, #-20]	; 0xffffffec
   28430:	cmp	r3, #0
   28434:	movne	r3, #1
   28438:	moveq	r3, #0
   2843c:	uxtb	r3, r3
   28440:	cmp	r3, #0
   28444:	beq	28458 <__assert_fail@plt+0x171e8>
   28448:	ldr	r0, [fp, #-16]
   2844c:	bl	27dbc <__assert_fail@plt+0x16b4c>
   28450:	mov	r3, #0
   28454:	str	r3, [fp, #-16]
   28458:	ldr	r3, [fp, #-16]
   2845c:	mov	r0, r3
   28460:	sub	sp, fp, #4
   28464:	pop	{fp, pc}
   28468:	push	{fp, lr}
   2846c:	add	fp, sp, #4
   28470:	sub	sp, sp, #24
   28474:	str	r0, [fp, #-16]
   28478:	str	r1, [fp, #-20]	; 0xffffffec
   2847c:	str	r2, [fp, #-24]	; 0xffffffe8
   28480:	ldr	r3, [pc, #160]	; 28528 <__assert_fail@plt+0x172b8>
   28484:	ldr	r3, [r3]
   28488:	and	r3, r3, #33554432	; 0x2000000
   2848c:	cmp	r3, #0
   28490:	movne	r3, #1
   28494:	moveq	r3, #0
   28498:	uxtb	r3, r3
   2849c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   284a0:	ldrb	r2, [r1, #28]
   284a4:	and	r3, r3, #1
   284a8:	bic	r2, r2, #16
   284ac:	lsl	r3, r3, #4
   284b0:	orr	r3, r3, r2
   284b4:	mov	r2, r3
   284b8:	strb	r2, [r1, #28]
   284bc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   284c0:	ldrb	r3, [r2, #28]
   284c4:	orr	r3, r3, #128	; 0x80
   284c8:	strb	r3, [r2, #28]
   284cc:	ldr	r3, [pc, #84]	; 28528 <__assert_fail@plt+0x172b8>
   284d0:	ldr	r3, [r3]
   284d4:	ldr	r2, [fp, #-20]	; 0xffffffec
   284d8:	ldr	r1, [fp, #-16]
   284dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   284e0:	bl	29428 <__assert_fail@plt+0x181b8>
   284e4:	str	r0, [fp, #-8]
   284e8:	ldr	r3, [fp, #-8]
   284ec:	cmp	r3, #0
   284f0:	bne	284fc <__assert_fail@plt+0x1728c>
   284f4:	mov	r3, #0
   284f8:	b	2851c <__assert_fail@plt+0x172ac>
   284fc:	ldr	r2, [pc, #40]	; 2852c <__assert_fail@plt+0x172bc>
   28500:	ldr	r3, [fp, #-8]
   28504:	ldr	r3, [r2, r3, lsl #2]
   28508:	ldr	r2, [pc, #32]	; 28530 <__assert_fail@plt+0x172c0>
   2850c:	add	r3, r3, r2
   28510:	mov	r0, r3
   28514:	bl	11168 <gettext@plt>
   28518:	mov	r3, r0
   2851c:	mov	r0, r3
   28520:	sub	sp, fp, #4
   28524:	pop	{fp, pc}
   28528:	ldrdeq	r2, [r5], -r8
   2852c:	andeq	r1, r4, r8, lsr #5
   28530:	andeq	r1, r4, r8, lsr #2
   28534:	push	{fp}		; (str fp, [sp, #-4]!)
   28538:	add	fp, sp, #0
   2853c:	sub	sp, sp, #20
   28540:	str	r0, [fp, #-16]
   28544:	ldr	r3, [pc, #36]	; 28570 <__assert_fail@plt+0x17300>
   28548:	ldr	r3, [r3]
   2854c:	str	r3, [fp, #-8]
   28550:	ldr	r2, [pc, #24]	; 28570 <__assert_fail@plt+0x17300>
   28554:	ldr	r3, [fp, #-16]
   28558:	str	r3, [r2]
   2855c:	ldr	r3, [fp, #-8]
   28560:	mov	r0, r3
   28564:	add	sp, fp, #0
   28568:	pop	{fp}		; (ldr fp, [sp], #4)
   2856c:	bx	lr
   28570:	ldrdeq	r2, [r5], -r8
   28574:	push	{fp, lr}
   28578:	add	fp, sp, #4
   2857c:	sub	sp, sp, #16
   28580:	str	r0, [fp, #-16]
   28584:	ldr	r3, [fp, #-16]
   28588:	ldr	r3, [r3]
   2858c:	str	r3, [fp, #-8]
   28590:	ldr	r3, [fp, #-16]
   28594:	ldr	r3, [r3, #16]
   28598:	str	r3, [fp, #-12]
   2859c:	mov	r2, #256	; 0x100
   285a0:	mov	r1, #0
   285a4:	ldr	r0, [fp, #-12]
   285a8:	bl	111bc <memset@plt>
   285ac:	ldr	r3, [fp, #-8]
   285b0:	ldr	r3, [r3, #36]	; 0x24
   285b4:	ldr	r2, [fp, #-12]
   285b8:	mov	r1, r3
   285bc:	ldr	r0, [fp, #-16]
   285c0:	bl	28674 <__assert_fail@plt+0x17404>
   285c4:	ldr	r3, [fp, #-8]
   285c8:	ldr	r2, [r3, #36]	; 0x24
   285cc:	ldr	r3, [fp, #-8]
   285d0:	ldr	r3, [r3, #40]	; 0x28
   285d4:	cmp	r2, r3
   285d8:	beq	285f4 <__assert_fail@plt+0x17384>
   285dc:	ldr	r3, [fp, #-8]
   285e0:	ldr	r3, [r3, #40]	; 0x28
   285e4:	ldr	r2, [fp, #-12]
   285e8:	mov	r1, r3
   285ec:	ldr	r0, [fp, #-16]
   285f0:	bl	28674 <__assert_fail@plt+0x17404>
   285f4:	ldr	r3, [fp, #-8]
   285f8:	ldr	r2, [r3, #36]	; 0x24
   285fc:	ldr	r3, [fp, #-8]
   28600:	ldr	r3, [r3, #44]	; 0x2c
   28604:	cmp	r2, r3
   28608:	beq	28624 <__assert_fail@plt+0x173b4>
   2860c:	ldr	r3, [fp, #-8]
   28610:	ldr	r3, [r3, #44]	; 0x2c
   28614:	ldr	r2, [fp, #-12]
   28618:	mov	r1, r3
   2861c:	ldr	r0, [fp, #-16]
   28620:	bl	28674 <__assert_fail@plt+0x17404>
   28624:	ldr	r3, [fp, #-8]
   28628:	ldr	r2, [r3, #36]	; 0x24
   2862c:	ldr	r3, [fp, #-8]
   28630:	ldr	r3, [r3, #48]	; 0x30
   28634:	cmp	r2, r3
   28638:	beq	28654 <__assert_fail@plt+0x173e4>
   2863c:	ldr	r3, [fp, #-8]
   28640:	ldr	r3, [r3, #48]	; 0x30
   28644:	ldr	r2, [fp, #-12]
   28648:	mov	r1, r3
   2864c:	ldr	r0, [fp, #-16]
   28650:	bl	28674 <__assert_fail@plt+0x17404>
   28654:	ldr	r2, [fp, #-16]
   28658:	ldrb	r3, [r2, #28]
   2865c:	orr	r3, r3, #8
   28660:	strb	r3, [r2, #28]
   28664:	mov	r3, #0
   28668:	mov	r0, r3
   2866c:	sub	sp, fp, #4
   28670:	pop	{fp, pc}
   28674:	push	{fp, lr}
   28678:	add	fp, sp, #4
   2867c:	sub	sp, sp, #440	; 0x1b8
   28680:	str	r0, [fp, #-432]	; 0xfffffe50
   28684:	str	r1, [fp, #-436]	; 0xfffffe4c
   28688:	str	r2, [fp, #-440]	; 0xfffffe48
   2868c:	ldr	r3, [fp, #-432]	; 0xfffffe50
   28690:	ldr	r3, [r3]
   28694:	str	r3, [fp, #-36]	; 0xffffffdc
   28698:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2869c:	ldr	r3, [r3, #92]	; 0x5c
   286a0:	cmp	r3, #1
   286a4:	bne	286c4 <__assert_fail@plt+0x17454>
   286a8:	ldr	r3, [fp, #-432]	; 0xfffffe50
   286ac:	ldr	r3, [r3, #12]
   286b0:	and	r3, r3, #4194304	; 0x400000
   286b4:	cmp	r3, #0
   286b8:	beq	286c4 <__assert_fail@plt+0x17454>
   286bc:	mov	r3, #1
   286c0:	b	286c8 <__assert_fail@plt+0x17458>
   286c4:	mov	r3, #0
   286c8:	strb	r3, [fp, #-37]	; 0xffffffdb
   286cc:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   286d0:	and	r3, r3, #1
   286d4:	strb	r3, [fp, #-37]	; 0xffffffdb
   286d8:	mov	r3, #0
   286dc:	str	r3, [fp, #-8]
   286e0:	b	28d84 <__assert_fail@plt+0x17b14>
   286e4:	ldr	r3, [fp, #-436]	; 0xfffffe4c
   286e8:	ldr	r2, [r3, #12]
   286ec:	ldr	r3, [fp, #-8]
   286f0:	lsl	r3, r3, #2
   286f4:	add	r3, r2, r3
   286f8:	ldr	r3, [r3]
   286fc:	str	r3, [fp, #-12]
   28700:	ldr	r3, [fp, #-36]	; 0xffffffdc
   28704:	ldr	r2, [r3]
   28708:	ldr	r3, [fp, #-12]
   2870c:	lsl	r3, r3, #3
   28710:	add	r3, r2, r3
   28714:	ldrb	r3, [r3, #4]
   28718:	str	r3, [fp, #-44]	; 0xffffffd4
   2871c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   28720:	cmp	r3, #1
   28724:	bne	28958 <__assert_fail@plt+0x176e8>
   28728:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2872c:	ldr	r2, [r3]
   28730:	ldr	r3, [fp, #-12]
   28734:	lsl	r3, r3, #3
   28738:	add	r3, r2, r3
   2873c:	ldrb	r3, [r3]
   28740:	mov	r2, r3
   28744:	ldr	r3, [fp, #-440]	; 0xfffffe48
   28748:	str	r3, [fp, #-56]	; 0xffffffc8
   2874c:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   28750:	strb	r3, [fp, #-57]	; 0xffffffc7
   28754:	str	r2, [fp, #-64]	; 0xffffffc0
   28758:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2875c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   28760:	add	r3, r2, r3
   28764:	mov	r2, #1
   28768:	strb	r2, [r3]
   2876c:	ldrb	r3, [fp, #-57]	; 0xffffffc7
   28770:	cmp	r3, #0
   28774:	beq	28798 <__assert_fail@plt+0x17528>
   28778:	ldr	r0, [fp, #-64]	; 0xffffffc0
   2877c:	bl	11024 <tolower@plt>
   28780:	mov	r3, r0
   28784:	mov	r2, r3
   28788:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2878c:	add	r3, r3, r2
   28790:	mov	r2, #1
   28794:	strb	r2, [r3]
   28798:	ldr	r3, [fp, #-432]	; 0xfffffe50
   2879c:	ldr	r3, [r3, #12]
   287a0:	and	r3, r3, #4194304	; 0x400000
   287a4:	cmp	r3, #0
   287a8:	beq	28d78 <__assert_fail@plt+0x17b08>
   287ac:	ldr	r3, [fp, #-36]	; 0xffffffdc
   287b0:	ldr	r3, [r3, #92]	; 0x5c
   287b4:	cmp	r3, #1
   287b8:	ble	28d78 <__assert_fail@plt+0x17b08>
   287bc:	sub	r3, fp, #140	; 0x8c
   287c0:	str	r3, [fp, #-16]
   287c4:	ldr	r3, [fp, #-16]
   287c8:	add	r2, r3, #1
   287cc:	str	r2, [fp, #-16]
   287d0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   287d4:	ldr	r1, [r2]
   287d8:	ldr	r2, [fp, #-12]
   287dc:	lsl	r2, r2, #3
   287e0:	add	r2, r1, r2
   287e4:	ldrb	r2, [r2]
   287e8:	strb	r2, [r3]
   287ec:	b	28818 <__assert_fail@plt+0x175a8>
   287f0:	ldr	r3, [fp, #-16]
   287f4:	add	r2, r3, #1
   287f8:	str	r2, [fp, #-16]
   287fc:	ldr	r2, [fp, #-36]	; 0xffffffdc
   28800:	ldr	r1, [r2]
   28804:	ldr	r2, [fp, #-12]
   28808:	lsl	r2, r2, #3
   2880c:	add	r2, r1, r2
   28810:	ldrb	r2, [r2]
   28814:	strb	r2, [r3]
   28818:	ldr	r3, [fp, #-12]
   2881c:	add	r3, r3, #1
   28820:	str	r3, [fp, #-12]
   28824:	ldr	r2, [fp, #-12]
   28828:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2882c:	ldr	r3, [r3, #8]
   28830:	cmp	r2, r3
   28834:	bcs	28880 <__assert_fail@plt+0x17610>
   28838:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2883c:	ldr	r2, [r3]
   28840:	ldr	r3, [fp, #-12]
   28844:	lsl	r3, r3, #3
   28848:	add	r3, r2, r3
   2884c:	ldrb	r3, [r3, #4]
   28850:	cmp	r3, #1
   28854:	bne	28880 <__assert_fail@plt+0x17610>
   28858:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2885c:	ldr	r2, [r3]
   28860:	ldr	r3, [fp, #-12]
   28864:	lsl	r3, r3, #3
   28868:	add	r3, r2, r3
   2886c:	ldrb	r3, [r3, #6]
   28870:	and	r3, r3, #32
   28874:	uxtb	r3, r3
   28878:	cmp	r3, #0
   2887c:	bne	287f0 <__assert_fail@plt+0x17580>
   28880:	sub	r3, fp, #152	; 0x98
   28884:	mov	r2, #8
   28888:	mov	r1, #0
   2888c:	mov	r0, r3
   28890:	bl	111bc <memset@plt>
   28894:	ldr	r2, [fp, #-16]
   28898:	sub	r3, fp, #140	; 0x8c
   2889c:	sub	r3, r2, r3
   288a0:	mov	r2, r3
   288a4:	sub	r3, fp, #152	; 0x98
   288a8:	sub	r1, fp, #140	; 0x8c
   288ac:	sub	r0, fp, #144	; 0x90
   288b0:	bl	3ed0c <__assert_fail@plt+0x2da9c>
   288b4:	mov	r1, r0
   288b8:	ldr	r2, [fp, #-16]
   288bc:	sub	r3, fp, #140	; 0x8c
   288c0:	sub	r3, r2, r3
   288c4:	cmp	r1, r3
   288c8:	bne	28d78 <__assert_fail@plt+0x17b08>
   288cc:	ldr	r3, [fp, #-144]	; 0xffffff70
   288d0:	mov	r0, r3
   288d4:	bl	1103c <towlower@plt>
   288d8:	mov	r1, r0
   288dc:	sub	r2, fp, #152	; 0x98
   288e0:	sub	r3, fp, #140	; 0x8c
   288e4:	mov	r0, r3
   288e8:	bl	10f88 <wcrtomb@plt>
   288ec:	mov	r3, r0
   288f0:	cmn	r3, #1
   288f4:	beq	28d78 <__assert_fail@plt+0x17b08>
   288f8:	ldrb	r3, [fp, #-140]	; 0xffffff74
   288fc:	mov	r2, r3
   28900:	ldr	r3, [fp, #-440]	; 0xfffffe48
   28904:	str	r3, [fp, #-68]	; 0xffffffbc
   28908:	mov	r3, #0
   2890c:	strb	r3, [fp, #-69]	; 0xffffffbb
   28910:	str	r2, [fp, #-76]	; 0xffffffb4
   28914:	ldr	r3, [fp, #-76]	; 0xffffffb4
   28918:	ldr	r2, [fp, #-68]	; 0xffffffbc
   2891c:	add	r3, r2, r3
   28920:	mov	r2, #1
   28924:	strb	r2, [r3]
   28928:	ldrb	r3, [fp, #-69]	; 0xffffffbb
   2892c:	cmp	r3, #0
   28930:	beq	28d78 <__assert_fail@plt+0x17b08>
   28934:	ldr	r0, [fp, #-76]	; 0xffffffb4
   28938:	bl	11024 <tolower@plt>
   2893c:	mov	r3, r0
   28940:	mov	r2, r3
   28944:	ldr	r3, [fp, #-68]	; 0xffffffbc
   28948:	add	r3, r3, r2
   2894c:	mov	r2, #1
   28950:	strb	r2, [r3]
   28954:	b	28d78 <__assert_fail@plt+0x17b08>
   28958:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2895c:	cmp	r3, #3
   28960:	bne	28a60 <__assert_fail@plt+0x177f0>
   28964:	mov	r3, #0
   28968:	str	r3, [fp, #-20]	; 0xffffffec
   2896c:	mov	r3, #0
   28970:	str	r3, [fp, #-24]	; 0xffffffe8
   28974:	b	28a50 <__assert_fail@plt+0x177e0>
   28978:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2897c:	ldr	r2, [r3]
   28980:	ldr	r3, [fp, #-12]
   28984:	lsl	r3, r3, #3
   28988:	add	r3, r2, r3
   2898c:	ldr	r2, [r3]
   28990:	ldr	r3, [fp, #-20]	; 0xffffffec
   28994:	lsl	r3, r3, #2
   28998:	add	r3, r2, r3
   2899c:	ldr	r3, [r3]
   289a0:	str	r3, [fp, #-48]	; 0xffffffd0
   289a4:	mov	r3, #0
   289a8:	str	r3, [fp, #-28]	; 0xffffffe4
   289ac:	b	28a38 <__assert_fail@plt+0x177c8>
   289b0:	ldr	r2, [fp, #-48]	; 0xffffffd0
   289b4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   289b8:	lsr	r3, r2, r3
   289bc:	and	r3, r3, #1
   289c0:	cmp	r3, #0
   289c4:	beq	28a20 <__assert_fail@plt+0x177b0>
   289c8:	ldr	r3, [fp, #-440]	; 0xfffffe48
   289cc:	str	r3, [fp, #-80]	; 0xffffffb0
   289d0:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   289d4:	strb	r3, [fp, #-81]	; 0xffffffaf
   289d8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   289dc:	str	r3, [fp, #-88]	; 0xffffffa8
   289e0:	ldr	r3, [fp, #-88]	; 0xffffffa8
   289e4:	ldr	r2, [fp, #-80]	; 0xffffffb0
   289e8:	add	r3, r2, r3
   289ec:	mov	r2, #1
   289f0:	strb	r2, [r3]
   289f4:	ldrb	r3, [fp, #-81]	; 0xffffffaf
   289f8:	cmp	r3, #0
   289fc:	beq	28a20 <__assert_fail@plt+0x177b0>
   28a00:	ldr	r0, [fp, #-88]	; 0xffffffa8
   28a04:	bl	11024 <tolower@plt>
   28a08:	mov	r3, r0
   28a0c:	mov	r2, r3
   28a10:	ldr	r3, [fp, #-80]	; 0xffffffb0
   28a14:	add	r3, r3, r2
   28a18:	mov	r2, #1
   28a1c:	strb	r2, [r3]
   28a20:	ldr	r3, [fp, #-28]	; 0xffffffe4
   28a24:	add	r3, r3, #1
   28a28:	str	r3, [fp, #-28]	; 0xffffffe4
   28a2c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   28a30:	add	r3, r3, #1
   28a34:	str	r3, [fp, #-24]	; 0xffffffe8
   28a38:	ldr	r3, [fp, #-28]	; 0xffffffe4
   28a3c:	cmp	r3, #31
   28a40:	ble	289b0 <__assert_fail@plt+0x17740>
   28a44:	ldr	r3, [fp, #-20]	; 0xffffffec
   28a48:	add	r3, r3, #1
   28a4c:	str	r3, [fp, #-20]	; 0xffffffec
   28a50:	ldr	r3, [fp, #-20]	; 0xffffffec
   28a54:	cmp	r3, #7
   28a58:	ble	28978 <__assert_fail@plt+0x17708>
   28a5c:	b	28d78 <__assert_fail@plt+0x17b08>
   28a60:	ldr	r3, [fp, #-44]	; 0xffffffd4
   28a64:	cmp	r3, #6
   28a68:	bne	28d24 <__assert_fail@plt+0x17ab4>
   28a6c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   28a70:	ldr	r2, [r3]
   28a74:	ldr	r3, [fp, #-12]
   28a78:	lsl	r3, r3, #3
   28a7c:	add	r3, r2, r3
   28a80:	ldr	r3, [r3]
   28a84:	str	r3, [fp, #-52]	; 0xffffffcc
   28a88:	ldr	r3, [fp, #-36]	; 0xffffffdc
   28a8c:	ldr	r3, [r3, #92]	; 0x5c
   28a90:	cmp	r3, #1
   28a94:	ble	28b88 <__assert_fail@plt+0x17918>
   28a98:	ldr	r3, [fp, #-52]	; 0xffffffcc
   28a9c:	ldr	r3, [r3, #36]	; 0x24
   28aa0:	cmp	r3, #0
   28aa4:	bne	28ad0 <__assert_fail@plt+0x17860>
   28aa8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   28aac:	ldrb	r3, [r3, #16]
   28ab0:	and	r3, r3, #1
   28ab4:	uxtb	r3, r3
   28ab8:	cmp	r3, #0
   28abc:	bne	28ad0 <__assert_fail@plt+0x17860>
   28ac0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   28ac4:	ldr	r3, [r3, #32]
   28ac8:	cmp	r3, #0
   28acc:	beq	28b88 <__assert_fail@plt+0x17918>
   28ad0:	mov	r3, #0
   28ad4:	strb	r3, [fp, #-153]	; 0xffffff67
   28ad8:	sub	r3, fp, #164	; 0xa4
   28adc:	mov	r2, #8
   28ae0:	mov	r1, #0
   28ae4:	mov	r0, r3
   28ae8:	bl	111bc <memset@plt>
   28aec:	sub	r3, fp, #164	; 0xa4
   28af0:	sub	r1, fp, #153	; 0x99
   28af4:	mov	r2, #1
   28af8:	mov	r0, #0
   28afc:	bl	3ed0c <__assert_fail@plt+0x2da9c>
   28b00:	mov	r3, r0
   28b04:	cmn	r3, #2
   28b08:	bne	28b68 <__assert_fail@plt+0x178f8>
   28b0c:	ldrb	r3, [fp, #-153]	; 0xffffff67
   28b10:	mov	r2, r3
   28b14:	ldr	r3, [fp, #-440]	; 0xfffffe48
   28b18:	str	r3, [fp, #-92]	; 0xffffffa4
   28b1c:	mov	r3, #0
   28b20:	strb	r3, [fp, #-93]	; 0xffffffa3
   28b24:	str	r2, [fp, #-100]	; 0xffffff9c
   28b28:	ldr	r3, [fp, #-100]	; 0xffffff9c
   28b2c:	ldr	r2, [fp, #-92]	; 0xffffffa4
   28b30:	add	r3, r2, r3
   28b34:	mov	r2, #1
   28b38:	strb	r2, [r3]
   28b3c:	ldrb	r3, [fp, #-93]	; 0xffffffa3
   28b40:	cmp	r3, #0
   28b44:	beq	28b68 <__assert_fail@plt+0x178f8>
   28b48:	ldr	r0, [fp, #-100]	; 0xffffff9c
   28b4c:	bl	11024 <tolower@plt>
   28b50:	mov	r3, r0
   28b54:	mov	r2, r3
   28b58:	ldr	r3, [fp, #-92]	; 0xffffffa4
   28b5c:	add	r3, r3, r2
   28b60:	mov	r2, #1
   28b64:	strb	r2, [r3]
   28b68:	ldrb	r3, [fp, #-153]	; 0xffffff67
   28b6c:	add	r3, r3, #1
   28b70:	uxtb	r3, r3
   28b74:	strb	r3, [fp, #-153]	; 0xffffff67
   28b78:	ldrb	r3, [fp, #-153]	; 0xffffff67
   28b7c:	cmp	r3, #0
   28b80:	bne	28ad8 <__assert_fail@plt+0x17868>
   28b84:	b	28d78 <__assert_fail@plt+0x17b08>
   28b88:	mov	r3, #0
   28b8c:	str	r3, [fp, #-32]	; 0xffffffe0
   28b90:	b	28d0c <__assert_fail@plt+0x17a9c>
   28b94:	sub	r3, fp, #172	; 0xac
   28b98:	mov	r2, #8
   28b9c:	mov	r1, #0
   28ba0:	mov	r0, r3
   28ba4:	bl	111bc <memset@plt>
   28ba8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   28bac:	ldr	r2, [r3]
   28bb0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   28bb4:	lsl	r3, r3, #2
   28bb8:	add	r3, r2, r3
   28bbc:	ldr	r1, [r3]
   28bc0:	sub	r2, fp, #172	; 0xac
   28bc4:	sub	r3, fp, #428	; 0x1ac
   28bc8:	mov	r0, r3
   28bcc:	bl	10f88 <wcrtomb@plt>
   28bd0:	mov	r3, r0
   28bd4:	cmn	r3, #1
   28bd8:	beq	28c3c <__assert_fail@plt+0x179cc>
   28bdc:	sub	r3, fp, #428	; 0x1ac
   28be0:	ldrb	r3, [r3]
   28be4:	mov	r2, r3
   28be8:	ldr	r3, [fp, #-440]	; 0xfffffe48
   28bec:	str	r3, [fp, #-104]	; 0xffffff98
   28bf0:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   28bf4:	strb	r3, [fp, #-105]	; 0xffffff97
   28bf8:	str	r2, [fp, #-112]	; 0xffffff90
   28bfc:	ldr	r3, [fp, #-112]	; 0xffffff90
   28c00:	ldr	r2, [fp, #-104]	; 0xffffff98
   28c04:	add	r3, r2, r3
   28c08:	mov	r2, #1
   28c0c:	strb	r2, [r3]
   28c10:	ldrb	r3, [fp, #-105]	; 0xffffff97
   28c14:	cmp	r3, #0
   28c18:	beq	28c3c <__assert_fail@plt+0x179cc>
   28c1c:	ldr	r0, [fp, #-112]	; 0xffffff90
   28c20:	bl	11024 <tolower@plt>
   28c24:	mov	r3, r0
   28c28:	mov	r2, r3
   28c2c:	ldr	r3, [fp, #-104]	; 0xffffff98
   28c30:	add	r3, r3, r2
   28c34:	mov	r2, #1
   28c38:	strb	r2, [r3]
   28c3c:	ldr	r3, [fp, #-432]	; 0xfffffe50
   28c40:	ldr	r3, [r3, #12]
   28c44:	and	r3, r3, #4194304	; 0x400000
   28c48:	cmp	r3, #0
   28c4c:	beq	28d00 <__assert_fail@plt+0x17a90>
   28c50:	ldr	r3, [fp, #-36]	; 0xffffffdc
   28c54:	ldr	r3, [r3, #92]	; 0x5c
   28c58:	cmp	r3, #1
   28c5c:	ble	28d00 <__assert_fail@plt+0x17a90>
   28c60:	ldr	r3, [fp, #-52]	; 0xffffffcc
   28c64:	ldr	r2, [r3]
   28c68:	ldr	r3, [fp, #-32]	; 0xffffffe0
   28c6c:	lsl	r3, r3, #2
   28c70:	add	r3, r2, r3
   28c74:	ldr	r3, [r3]
   28c78:	mov	r0, r3
   28c7c:	bl	1103c <towlower@plt>
   28c80:	mov	r1, r0
   28c84:	sub	r2, fp, #172	; 0xac
   28c88:	sub	r3, fp, #428	; 0x1ac
   28c8c:	mov	r0, r3
   28c90:	bl	10f88 <wcrtomb@plt>
   28c94:	mov	r3, r0
   28c98:	cmn	r3, #1
   28c9c:	beq	28d00 <__assert_fail@plt+0x17a90>
   28ca0:	sub	r3, fp, #428	; 0x1ac
   28ca4:	ldrb	r3, [r3]
   28ca8:	mov	r2, r3
   28cac:	ldr	r3, [fp, #-440]	; 0xfffffe48
   28cb0:	str	r3, [fp, #-116]	; 0xffffff8c
   28cb4:	mov	r3, #0
   28cb8:	strb	r3, [fp, #-117]	; 0xffffff8b
   28cbc:	str	r2, [fp, #-124]	; 0xffffff84
   28cc0:	ldr	r3, [fp, #-124]	; 0xffffff84
   28cc4:	ldr	r2, [fp, #-116]	; 0xffffff8c
   28cc8:	add	r3, r2, r3
   28ccc:	mov	r2, #1
   28cd0:	strb	r2, [r3]
   28cd4:	ldrb	r3, [fp, #-117]	; 0xffffff8b
   28cd8:	cmp	r3, #0
   28cdc:	beq	28d00 <__assert_fail@plt+0x17a90>
   28ce0:	ldr	r0, [fp, #-124]	; 0xffffff84
   28ce4:	bl	11024 <tolower@plt>
   28ce8:	mov	r3, r0
   28cec:	mov	r2, r3
   28cf0:	ldr	r3, [fp, #-116]	; 0xffffff8c
   28cf4:	add	r3, r3, r2
   28cf8:	mov	r2, #1
   28cfc:	strb	r2, [r3]
   28d00:	ldr	r3, [fp, #-32]	; 0xffffffe0
   28d04:	add	r3, r3, #1
   28d08:	str	r3, [fp, #-32]	; 0xffffffe0
   28d0c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   28d10:	ldr	r2, [r3, #20]
   28d14:	ldr	r3, [fp, #-32]	; 0xffffffe0
   28d18:	cmp	r2, r3
   28d1c:	bgt	28b94 <__assert_fail@plt+0x17924>
   28d20:	b	28d78 <__assert_fail@plt+0x17b08>
   28d24:	ldr	r3, [fp, #-44]	; 0xffffffd4
   28d28:	cmp	r3, #5
   28d2c:	beq	28d48 <__assert_fail@plt+0x17ad8>
   28d30:	ldr	r3, [fp, #-44]	; 0xffffffd4
   28d34:	cmp	r3, #7
   28d38:	beq	28d48 <__assert_fail@plt+0x17ad8>
   28d3c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   28d40:	cmp	r3, #2
   28d44:	bne	28d78 <__assert_fail@plt+0x17b08>
   28d48:	mov	r2, #256	; 0x100
   28d4c:	mov	r1, #1
   28d50:	ldr	r0, [fp, #-440]	; 0xfffffe48
   28d54:	bl	111bc <memset@plt>
   28d58:	ldr	r3, [fp, #-44]	; 0xffffffd4
   28d5c:	cmp	r3, #2
   28d60:	bne	28d9c <__assert_fail@plt+0x17b2c>
   28d64:	ldr	r2, [fp, #-432]	; 0xfffffe50
   28d68:	ldrb	r3, [r2, #28]
   28d6c:	orr	r3, r3, #1
   28d70:	strb	r3, [r2, #28]
   28d74:	b	28d9c <__assert_fail@plt+0x17b2c>
   28d78:	ldr	r3, [fp, #-8]
   28d7c:	add	r3, r3, #1
   28d80:	str	r3, [fp, #-8]
   28d84:	ldr	r3, [fp, #-436]	; 0xfffffe4c
   28d88:	ldr	r2, [r3, #8]
   28d8c:	ldr	r3, [fp, #-8]
   28d90:	cmp	r2, r3
   28d94:	bgt	286e4 <__assert_fail@plt+0x17474>
   28d98:	b	28da0 <__assert_fail@plt+0x17b30>
   28d9c:	nop			; (mov r0, r0)
   28da0:	sub	sp, fp, #4
   28da4:	pop	{fp, pc}
   28da8:	push	{fp, lr}
   28dac:	add	fp, sp, #4
   28db0:	sub	sp, sp, #24
   28db4:	str	r0, [fp, #-16]
   28db8:	str	r1, [fp, #-20]	; 0xffffffec
   28dbc:	str	r2, [fp, #-24]	; 0xffffffe8
   28dc0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   28dc4:	and	r3, r3, #1
   28dc8:	cmp	r3, #0
   28dcc:	beq	28dd8 <__assert_fail@plt+0x17b68>
   28dd0:	ldr	r3, [pc, #428]	; 28f84 <__assert_fail@plt+0x17d14>
   28dd4:	b	28ddc <__assert_fail@plt+0x17b6c>
   28dd8:	ldr	r3, [pc, #424]	; 28f88 <__assert_fail@plt+0x17d18>
   28ddc:	str	r3, [fp, #-12]
   28de0:	ldr	r3, [fp, #-16]
   28de4:	mov	r2, #0
   28de8:	str	r2, [r3]
   28dec:	ldr	r3, [fp, #-16]
   28df0:	mov	r2, #0
   28df4:	str	r2, [r3, #4]
   28df8:	ldr	r3, [fp, #-16]
   28dfc:	mov	r2, #0
   28e00:	str	r2, [r3, #8]
   28e04:	mov	r0, #256	; 0x100
   28e08:	bl	3df98 <__assert_fail@plt+0x2cd28>
   28e0c:	mov	r3, r0
   28e10:	mov	r2, r3
   28e14:	ldr	r3, [fp, #-16]
   28e18:	str	r2, [r3, #16]
   28e1c:	ldr	r3, [fp, #-16]
   28e20:	ldr	r3, [r3, #16]
   28e24:	cmp	r3, #0
   28e28:	moveq	r3, #1
   28e2c:	movne	r3, #0
   28e30:	uxtb	r3, r3
   28e34:	cmp	r3, #0
   28e38:	beq	28e44 <__assert_fail@plt+0x17bd4>
   28e3c:	mov	r3, #12
   28e40:	b	28f78 <__assert_fail@plt+0x17d08>
   28e44:	ldr	r3, [fp, #-24]	; 0xffffffe8
   28e48:	and	r3, r3, #2
   28e4c:	cmp	r3, #0
   28e50:	beq	28e5c <__assert_fail@plt+0x17bec>
   28e54:	mov	r3, #4194304	; 0x400000
   28e58:	b	28e60 <__assert_fail@plt+0x17bf0>
   28e5c:	mov	r3, #0
   28e60:	ldr	r2, [fp, #-12]
   28e64:	orr	r3, r2, r3
   28e68:	str	r3, [fp, #-12]
   28e6c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   28e70:	and	r3, r3, #4
   28e74:	cmp	r3, #0
   28e78:	beq	28ea8 <__assert_fail@plt+0x17c38>
   28e7c:	ldr	r3, [fp, #-12]
   28e80:	bic	r3, r3, #64	; 0x40
   28e84:	str	r3, [fp, #-12]
   28e88:	ldr	r3, [fp, #-12]
   28e8c:	orr	r3, r3, #256	; 0x100
   28e90:	str	r3, [fp, #-12]
   28e94:	ldr	r2, [fp, #-16]
   28e98:	ldrb	r3, [r2, #28]
   28e9c:	orr	r3, r3, #128	; 0x80
   28ea0:	strb	r3, [r2, #28]
   28ea4:	b	28eb8 <__assert_fail@plt+0x17c48>
   28ea8:	ldr	r2, [fp, #-16]
   28eac:	ldrb	r3, [r2, #28]
   28eb0:	bic	r3, r3, #128	; 0x80
   28eb4:	strb	r3, [r2, #28]
   28eb8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   28ebc:	and	r3, r3, #8
   28ec0:	cmp	r3, #0
   28ec4:	movne	r3, #1
   28ec8:	moveq	r3, #0
   28ecc:	uxtb	r3, r3
   28ed0:	ldr	r1, [fp, #-16]
   28ed4:	ldrb	r2, [r1, #28]
   28ed8:	and	r3, r3, #1
   28edc:	bic	r2, r2, #16
   28ee0:	lsl	r3, r3, #4
   28ee4:	orr	r3, r3, r2
   28ee8:	mov	r2, r3
   28eec:	strb	r2, [r1, #28]
   28ef0:	ldr	r3, [fp, #-16]
   28ef4:	mov	r2, #0
   28ef8:	str	r2, [r3, #20]
   28efc:	ldr	r0, [fp, #-20]	; 0xffffffec
   28f00:	bl	11174 <strlen@plt>
   28f04:	mov	r2, r0
   28f08:	ldr	r3, [fp, #-12]
   28f0c:	ldr	r1, [fp, #-20]	; 0xffffffec
   28f10:	ldr	r0, [fp, #-16]
   28f14:	bl	29428 <__assert_fail@plt+0x181b8>
   28f18:	str	r0, [fp, #-8]
   28f1c:	ldr	r3, [fp, #-8]
   28f20:	cmp	r3, #16
   28f24:	bne	28f30 <__assert_fail@plt+0x17cc0>
   28f28:	mov	r3, #8
   28f2c:	str	r3, [fp, #-8]
   28f30:	ldr	r3, [fp, #-8]
   28f34:	cmp	r3, #0
   28f38:	moveq	r3, #1
   28f3c:	movne	r3, #0
   28f40:	uxtb	r3, r3
   28f44:	cmp	r3, #0
   28f48:	beq	28f58 <__assert_fail@plt+0x17ce8>
   28f4c:	ldr	r0, [fp, #-16]
   28f50:	bl	28574 <__assert_fail@plt+0x17304>
   28f54:	b	28f74 <__assert_fail@plt+0x17d04>
   28f58:	ldr	r3, [fp, #-16]
   28f5c:	ldr	r3, [r3, #16]
   28f60:	mov	r0, r3
   28f64:	bl	13630 <__assert_fail@plt+0x23c0>
   28f68:	ldr	r3, [fp, #-16]
   28f6c:	mov	r2, #0
   28f70:	str	r2, [r3, #16]
   28f74:	ldr	r3, [fp, #-8]
   28f78:	mov	r0, r3
   28f7c:	sub	sp, fp, #4
   28f80:	pop	{fp, pc}
   28f84:	strdeq	fp, [r3], -ip
   28f88:	smlabteq	r1, r6, r2, r0
   28f8c:	push	{fp, lr}
   28f90:	add	fp, sp, #4
   28f94:	sub	sp, sp, #32
   28f98:	str	r0, [fp, #-24]	; 0xffffffe8
   28f9c:	str	r1, [fp, #-28]	; 0xffffffe4
   28fa0:	str	r2, [fp, #-32]	; 0xffffffe0
   28fa4:	str	r3, [fp, #-36]	; 0xffffffdc
   28fa8:	mov	r3, #17
   28fac:	str	r3, [fp, #-12]
   28fb0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   28fb4:	lsr	r3, r3, #31
   28fb8:	uxtb	r3, r3
   28fbc:	cmp	r3, #0
   28fc0:	bne	28fe4 <__assert_fail@plt+0x17d74>
   28fc4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   28fc8:	ldr	r3, [fp, #-12]
   28fcc:	cmp	r2, r3
   28fd0:	movge	r3, #1
   28fd4:	movlt	r3, #0
   28fd8:	uxtb	r3, r3
   28fdc:	cmp	r3, #0
   28fe0:	beq	28fe8 <__assert_fail@plt+0x17d78>
   28fe4:	bl	11258 <abort@plt>
   28fe8:	ldr	r2, [pc, #176]	; 290a0 <__assert_fail@plt+0x17e30>
   28fec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   28ff0:	ldr	r3, [r2, r3, lsl #2]
   28ff4:	ldr	r2, [pc, #168]	; 290a4 <__assert_fail@plt+0x17e34>
   28ff8:	add	r3, r3, r2
   28ffc:	mov	r0, r3
   29000:	bl	11168 <gettext@plt>
   29004:	str	r0, [fp, #-16]
   29008:	ldr	r0, [fp, #-16]
   2900c:	bl	11174 <strlen@plt>
   29010:	mov	r3, r0
   29014:	add	r3, r3, #1
   29018:	str	r3, [fp, #-20]	; 0xffffffec
   2901c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   29020:	cmp	r3, #0
   29024:	movne	r3, #1
   29028:	moveq	r3, #0
   2902c:	uxtb	r3, r3
   29030:	cmp	r3, #0
   29034:	beq	29090 <__assert_fail@plt+0x17e20>
   29038:	ldr	r3, [fp, #-20]	; 0xffffffec
   2903c:	str	r3, [fp, #-8]
   29040:	ldr	r2, [fp, #-20]	; 0xffffffec
   29044:	ldr	r3, [fp, #-36]	; 0xffffffdc
   29048:	cmp	r2, r3
   2904c:	movhi	r3, #1
   29050:	movls	r3, #0
   29054:	uxtb	r3, r3
   29058:	cmp	r3, #0
   2905c:	beq	29080 <__assert_fail@plt+0x17e10>
   29060:	ldr	r3, [fp, #-36]	; 0xffffffdc
   29064:	sub	r3, r3, #1
   29068:	str	r3, [fp, #-8]
   2906c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   29070:	ldr	r3, [fp, #-8]
   29074:	add	r3, r2, r3
   29078:	mov	r2, #0
   2907c:	strb	r2, [r3]
   29080:	ldr	r2, [fp, #-8]
   29084:	ldr	r1, [fp, #-16]
   29088:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2908c:	bl	11018 <memcpy@plt>
   29090:	ldr	r3, [fp, #-20]	; 0xffffffec
   29094:	mov	r0, r3
   29098:	sub	sp, fp, #4
   2909c:	pop	{fp, pc}
   290a0:	andeq	r1, r4, r8, lsr #5
   290a4:	andeq	r1, r4, r8, lsr #2
   290a8:	push	{fp, lr}
   290ac:	add	fp, sp, #4
   290b0:	sub	sp, sp, #24
   290b4:	str	r0, [fp, #-24]	; 0xffffffe8
   290b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   290bc:	ldr	r3, [r3]
   290c0:	cmp	r3, #0
   290c4:	beq	29110 <__assert_fail@plt+0x17ea0>
   290c8:	mov	r3, #0
   290cc:	str	r3, [fp, #-8]
   290d0:	b	290fc <__assert_fail@plt+0x17e8c>
   290d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   290d8:	ldr	r2, [r3]
   290dc:	ldr	r3, [fp, #-8]
   290e0:	lsl	r3, r3, #3
   290e4:	add	r3, r2, r3
   290e8:	mov	r0, r3
   290ec:	bl	3136c <__assert_fail@plt+0x200fc>
   290f0:	ldr	r3, [fp, #-8]
   290f4:	add	r3, r3, #1
   290f8:	str	r3, [fp, #-8]
   290fc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   29100:	ldr	r2, [r3, #8]
   29104:	ldr	r3, [fp, #-8]
   29108:	cmp	r2, r3
   2910c:	bhi	290d4 <__assert_fail@plt+0x17e64>
   29110:	ldr	r3, [fp, #-24]	; 0xffffffe8
   29114:	ldr	r3, [r3, #12]
   29118:	mov	r0, r3
   2911c:	bl	13630 <__assert_fail@plt+0x23c0>
   29120:	mov	r3, #0
   29124:	str	r3, [fp, #-8]
   29128:	b	291ec <__assert_fail@plt+0x17f7c>
   2912c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   29130:	ldr	r3, [r3, #24]
   29134:	cmp	r3, #0
   29138:	beq	29168 <__assert_fail@plt+0x17ef8>
   2913c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   29140:	ldr	r1, [r3, #24]
   29144:	ldr	r2, [fp, #-8]
   29148:	mov	r3, r2
   2914c:	lsl	r3, r3, #1
   29150:	add	r3, r3, r2
   29154:	lsl	r3, r3, #2
   29158:	add	r3, r1, r3
   2915c:	ldr	r3, [r3, #8]
   29160:	mov	r0, r3
   29164:	bl	13630 <__assert_fail@plt+0x23c0>
   29168:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2916c:	ldr	r3, [r3, #28]
   29170:	cmp	r3, #0
   29174:	beq	291a4 <__assert_fail@plt+0x17f34>
   29178:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2917c:	ldr	r1, [r3, #28]
   29180:	ldr	r2, [fp, #-8]
   29184:	mov	r3, r2
   29188:	lsl	r3, r3, #1
   2918c:	add	r3, r3, r2
   29190:	lsl	r3, r3, #2
   29194:	add	r3, r1, r3
   29198:	ldr	r3, [r3, #8]
   2919c:	mov	r0, r3
   291a0:	bl	13630 <__assert_fail@plt+0x23c0>
   291a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   291a8:	ldr	r3, [r3, #20]
   291ac:	cmp	r3, #0
   291b0:	beq	291e0 <__assert_fail@plt+0x17f70>
   291b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   291b8:	ldr	r1, [r3, #20]
   291bc:	ldr	r2, [fp, #-8]
   291c0:	mov	r3, r2
   291c4:	lsl	r3, r3, #1
   291c8:	add	r3, r3, r2
   291cc:	lsl	r3, r3, #2
   291d0:	add	r3, r1, r3
   291d4:	ldr	r3, [r3, #8]
   291d8:	mov	r0, r3
   291dc:	bl	13630 <__assert_fail@plt+0x23c0>
   291e0:	ldr	r3, [fp, #-8]
   291e4:	add	r3, r3, #1
   291e8:	str	r3, [fp, #-8]
   291ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   291f0:	ldr	r2, [r3, #8]
   291f4:	ldr	r3, [fp, #-8]
   291f8:	cmp	r2, r3
   291fc:	bhi	2912c <__assert_fail@plt+0x17ebc>
   29200:	ldr	r3, [fp, #-24]	; 0xffffffe8
   29204:	ldr	r3, [r3, #20]
   29208:	mov	r0, r3
   2920c:	bl	13630 <__assert_fail@plt+0x23c0>
   29210:	ldr	r3, [fp, #-24]	; 0xffffffe8
   29214:	ldr	r3, [r3, #24]
   29218:	mov	r0, r3
   2921c:	bl	13630 <__assert_fail@plt+0x23c0>
   29220:	ldr	r3, [fp, #-24]	; 0xffffffe8
   29224:	ldr	r3, [r3, #28]
   29228:	mov	r0, r3
   2922c:	bl	13630 <__assert_fail@plt+0x23c0>
   29230:	ldr	r3, [fp, #-24]	; 0xffffffe8
   29234:	ldr	r3, [r3]
   29238:	mov	r0, r3
   2923c:	bl	13630 <__assert_fail@plt+0x23c0>
   29240:	ldr	r3, [fp, #-24]	; 0xffffffe8
   29244:	ldr	r3, [r3, #32]
   29248:	cmp	r3, #0
   2924c:	beq	29300 <__assert_fail@plt+0x18090>
   29250:	mov	r3, #0
   29254:	str	r3, [fp, #-8]
   29258:	b	292ec <__assert_fail@plt+0x1807c>
   2925c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   29260:	ldr	r1, [r3, #32]
   29264:	ldr	r2, [fp, #-8]
   29268:	mov	r3, r2
   2926c:	lsl	r3, r3, #1
   29270:	add	r3, r3, r2
   29274:	lsl	r3, r3, #2
   29278:	add	r3, r1, r3
   2927c:	str	r3, [fp, #-16]
   29280:	mov	r3, #0
   29284:	str	r3, [fp, #-12]
   29288:	b	292bc <__assert_fail@plt+0x1804c>
   2928c:	ldr	r3, [fp, #-16]
   29290:	ldr	r2, [r3, #8]
   29294:	ldr	r3, [fp, #-12]
   29298:	lsl	r3, r3, #2
   2929c:	add	r3, r2, r3
   292a0:	ldr	r3, [r3]
   292a4:	str	r3, [fp, #-20]	; 0xffffffec
   292a8:	ldr	r0, [fp, #-20]	; 0xffffffec
   292ac:	bl	27dbc <__assert_fail@plt+0x16b4c>
   292b0:	ldr	r3, [fp, #-12]
   292b4:	add	r3, r3, #1
   292b8:	str	r3, [fp, #-12]
   292bc:	ldr	r3, [fp, #-16]
   292c0:	ldr	r2, [r3]
   292c4:	ldr	r3, [fp, #-12]
   292c8:	cmp	r2, r3
   292cc:	bgt	2928c <__assert_fail@plt+0x1801c>
   292d0:	ldr	r3, [fp, #-16]
   292d4:	ldr	r3, [r3, #8]
   292d8:	mov	r0, r3
   292dc:	bl	13630 <__assert_fail@plt+0x23c0>
   292e0:	ldr	r3, [fp, #-8]
   292e4:	add	r3, r3, #1
   292e8:	str	r3, [fp, #-8]
   292ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   292f0:	ldr	r2, [r3, #68]	; 0x44
   292f4:	ldr	r3, [fp, #-8]
   292f8:	cmp	r2, r3
   292fc:	bcs	2925c <__assert_fail@plt+0x17fec>
   29300:	ldr	r3, [fp, #-24]	; 0xffffffe8
   29304:	ldr	r3, [r3, #32]
   29308:	mov	r0, r3
   2930c:	bl	13630 <__assert_fail@plt+0x23c0>
   29310:	ldr	r3, [fp, #-24]	; 0xffffffe8
   29314:	ldr	r3, [r3, #60]	; 0x3c
   29318:	ldr	r2, [pc, #56]	; 29358 <__assert_fail@plt+0x180e8>
   2931c:	cmp	r3, r2
   29320:	beq	29334 <__assert_fail@plt+0x180c4>
   29324:	ldr	r3, [fp, #-24]	; 0xffffffe8
   29328:	ldr	r3, [r3, #60]	; 0x3c
   2932c:	mov	r0, r3
   29330:	bl	13630 <__assert_fail@plt+0x23c0>
   29334:	ldr	r3, [fp, #-24]	; 0xffffffe8
   29338:	ldr	r3, [r3, #132]	; 0x84
   2933c:	mov	r0, r3
   29340:	bl	13630 <__assert_fail@plt+0x23c0>
   29344:	ldr	r0, [fp, #-24]	; 0xffffffe8
   29348:	bl	13630 <__assert_fail@plt+0x23c0>
   2934c:	nop			; (mov r0, r0)
   29350:	sub	sp, fp, #4
   29354:	pop	{fp, pc}
   29358:	andeq	r1, r4, ip, ror #5
   2935c:	push	{fp, lr}
   29360:	add	fp, sp, #4
   29364:	sub	sp, sp, #16
   29368:	str	r0, [fp, #-16]
   2936c:	ldr	r3, [fp, #-16]
   29370:	ldr	r3, [r3]
   29374:	str	r3, [fp, #-8]
   29378:	ldr	r3, [fp, #-8]
   2937c:	cmp	r3, #0
   29380:	movne	r3, #1
   29384:	moveq	r3, #0
   29388:	uxtb	r3, r3
   2938c:	cmp	r3, #0
   29390:	beq	293c4 <__assert_fail@plt+0x18154>
   29394:	ldr	r3, [pc, #132]	; 29420 <__assert_fail@plt+0x181b0>
   29398:	cmp	r3, #0
   2939c:	bne	293ac <__assert_fail@plt+0x1813c>
   293a0:	ldr	r3, [pc, #124]	; 29424 <__assert_fail@plt+0x181b4>
   293a4:	cmp	r3, #0
   293a8:	beq	293bc <__assert_fail@plt+0x1814c>
   293ac:	ldr	r3, [fp, #-8]
   293b0:	add	r3, r3, #136	; 0x88
   293b4:	mov	r0, r3
   293b8:	bl	10fc4 <pthread_mutex_destroy@plt>
   293bc:	ldr	r0, [fp, #-8]
   293c0:	bl	290a8 <__assert_fail@plt+0x17e38>
   293c4:	ldr	r3, [fp, #-16]
   293c8:	mov	r2, #0
   293cc:	str	r2, [r3]
   293d0:	ldr	r3, [fp, #-16]
   293d4:	mov	r2, #0
   293d8:	str	r2, [r3, #4]
   293dc:	ldr	r3, [fp, #-16]
   293e0:	ldr	r3, [r3, #16]
   293e4:	mov	r0, r3
   293e8:	bl	13630 <__assert_fail@plt+0x23c0>
   293ec:	ldr	r3, [fp, #-16]
   293f0:	mov	r2, #0
   293f4:	str	r2, [r3, #16]
   293f8:	ldr	r3, [fp, #-16]
   293fc:	ldr	r3, [r3, #20]
   29400:	mov	r0, r3
   29404:	bl	13630 <__assert_fail@plt+0x23c0>
   29408:	ldr	r3, [fp, #-16]
   2940c:	mov	r2, #0
   29410:	str	r2, [r3, #20]
   29414:	nop			; (mov r0, r0)
   29418:	sub	sp, fp, #4
   2941c:	pop	{fp, pc}
	...
   29428:	push	{fp, lr}
   2942c:	add	fp, sp, #4
   29430:	sub	sp, sp, #120	; 0x78
   29434:	str	r0, [fp, #-104]	; 0xffffff98
   29438:	str	r1, [fp, #-108]	; 0xffffff94
   2943c:	str	r2, [fp, #-112]	; 0xffffff90
   29440:	str	r3, [fp, #-116]	; 0xffffff8c
   29444:	mov	r3, #0
   29448:	str	r3, [fp, #-12]
   2944c:	ldr	r2, [fp, #-104]	; 0xffffff98
   29450:	ldrb	r3, [r2, #28]
   29454:	bic	r3, r3, #8
   29458:	strb	r3, [r2, #28]
   2945c:	ldr	r3, [fp, #-104]	; 0xffffff98
   29460:	ldr	r2, [fp, #-116]	; 0xffffff8c
   29464:	str	r2, [r3, #12]
   29468:	ldr	r2, [fp, #-104]	; 0xffffff98
   2946c:	ldrb	r3, [r2, #28]
   29470:	bic	r3, r3, #64	; 0x40
   29474:	strb	r3, [r2, #28]
   29478:	ldr	r3, [fp, #-104]	; 0xffffff98
   2947c:	ldrb	r3, [r3, #28]
   29480:	lsr	r3, r3, #6
   29484:	and	r3, r3, #1
   29488:	uxtb	r3, r3
   2948c:	ldr	r1, [fp, #-104]	; 0xffffff98
   29490:	ldrb	r2, [r1, #28]
   29494:	and	r3, r3, #1
   29498:	bic	r2, r2, #32
   2949c:	lsl	r3, r3, #5
   294a0:	orr	r3, r3, r2
   294a4:	mov	r2, r3
   294a8:	strb	r2, [r1, #28]
   294ac:	ldr	r3, [fp, #-104]	; 0xffffff98
   294b0:	mov	r2, #0
   294b4:	str	r2, [r3, #8]
   294b8:	ldr	r3, [fp, #-104]	; 0xffffff98
   294bc:	mov	r2, #0
   294c0:	str	r2, [r3, #24]
   294c4:	ldr	r2, [fp, #-104]	; 0xffffff98
   294c8:	ldrb	r3, [r2, #28]
   294cc:	bic	r3, r3, #1
   294d0:	strb	r3, [r2, #28]
   294d4:	ldr	r2, [fp, #-104]	; 0xffffff98
   294d8:	ldrb	r3, [r2, #28]
   294dc:	bic	r3, r3, #6
   294e0:	strb	r3, [r2, #28]
   294e4:	ldr	r3, [fp, #-104]	; 0xffffff98
   294e8:	ldr	r3, [r3]
   294ec:	str	r3, [fp, #-8]
   294f0:	ldr	r3, [fp, #-104]	; 0xffffff98
   294f4:	ldr	r3, [r3, #4]
   294f8:	cmp	r3, #159	; 0x9f
   294fc:	movls	r3, #1
   29500:	movhi	r3, #0
   29504:	uxtb	r3, r3
   29508:	cmp	r3, #0
   2950c:	beq	29554 <__assert_fail@plt+0x182e4>
   29510:	ldr	r3, [fp, #-104]	; 0xffffff98
   29514:	ldr	r3, [r3]
   29518:	mov	r1, #160	; 0xa0
   2951c:	mov	r0, r3
   29520:	bl	3e040 <__assert_fail@plt+0x2cdd0>
   29524:	str	r0, [fp, #-8]
   29528:	ldr	r3, [fp, #-8]
   2952c:	cmp	r3, #0
   29530:	bne	2953c <__assert_fail@plt+0x182cc>
   29534:	mov	r3, #12
   29538:	b	2986c <__assert_fail@plt+0x185fc>
   2953c:	ldr	r3, [fp, #-104]	; 0xffffff98
   29540:	mov	r2, #160	; 0xa0
   29544:	str	r2, [r3, #4]
   29548:	ldr	r3, [fp, #-104]	; 0xffffff98
   2954c:	ldr	r2, [fp, #-8]
   29550:	str	r2, [r3]
   29554:	ldr	r3, [fp, #-104]	; 0xffffff98
   29558:	mov	r2, #160	; 0xa0
   2955c:	str	r2, [r3, #8]
   29560:	ldr	r1, [fp, #-112]	; 0xffffff90
   29564:	ldr	r0, [fp, #-8]
   29568:	bl	29880 <__assert_fail@plt+0x18610>
   2956c:	mov	r3, r0
   29570:	str	r3, [fp, #-12]
   29574:	ldr	r3, [fp, #-12]
   29578:	cmp	r3, #0
   2957c:	moveq	r3, #1
   29580:	movne	r3, #0
   29584:	uxtb	r3, r3
   29588:	cmp	r3, #0
   2958c:	beq	29608 <__assert_fail@plt+0x18398>
   29590:	ldr	r3, [pc, #736]	; 29878 <__assert_fail@plt+0x18608>
   29594:	cmp	r3, #0
   29598:	bne	295a8 <__assert_fail@plt+0x18338>
   2959c:	ldr	r3, [pc, #728]	; 2987c <__assert_fail@plt+0x1860c>
   295a0:	cmp	r3, #0
   295a4:	beq	295b0 <__assert_fail@plt+0x18340>
   295a8:	mov	r3, #1
   295ac:	b	295b4 <__assert_fail@plt+0x18344>
   295b0:	mov	r3, #0
   295b4:	cmp	r3, #0
   295b8:	beq	295f4 <__assert_fail@plt+0x18384>
   295bc:	ldr	r3, [fp, #-8]
   295c0:	add	r3, r3, #136	; 0x88
   295c4:	mov	r1, #0
   295c8:	mov	r0, r3
   295cc:	bl	11030 <pthread_mutex_init@plt>
   295d0:	mov	r3, r0
   295d4:	cmp	r3, #0
   295d8:	movne	r3, #1
   295dc:	moveq	r3, #0
   295e0:	uxtb	r3, r3
   295e4:	cmp	r3, #0
   295e8:	beq	295f4 <__assert_fail@plt+0x18384>
   295ec:	mov	r3, #1
   295f0:	b	295f8 <__assert_fail@plt+0x18388>
   295f4:	mov	r3, #0
   295f8:	cmp	r3, #0
   295fc:	beq	29608 <__assert_fail@plt+0x18398>
   29600:	mov	r3, #12
   29604:	str	r3, [fp, #-12]
   29608:	ldr	r3, [fp, #-12]
   2960c:	cmp	r3, #0
   29610:	movne	r3, #1
   29614:	moveq	r3, #0
   29618:	uxtb	r3, r3
   2961c:	cmp	r3, #0
   29620:	beq	2964c <__assert_fail@plt+0x183dc>
   29624:	ldr	r0, [fp, #-8]
   29628:	bl	290a8 <__assert_fail@plt+0x17e38>
   2962c:	ldr	r3, [fp, #-104]	; 0xffffff98
   29630:	mov	r2, #0
   29634:	str	r2, [r3]
   29638:	ldr	r3, [fp, #-104]	; 0xffffff98
   2963c:	mov	r2, #0
   29640:	str	r2, [r3, #4]
   29644:	ldr	r3, [fp, #-12]
   29648:	b	2986c <__assert_fail@plt+0x185fc>
   2964c:	ldr	r1, [fp, #-112]	; 0xffffff90
   29650:	ldr	r3, [fp, #-104]	; 0xffffff98
   29654:	ldr	ip, [r3, #20]
   29658:	ldr	r3, [fp, #-116]	; 0xffffff8c
   2965c:	and	r3, r3, #4194304	; 0x400000
   29660:	cmp	r3, #0
   29664:	movne	r3, #1
   29668:	moveq	r3, #0
   2966c:	uxtb	r3, r3
   29670:	sub	r0, fp, #96	; 0x60
   29674:	ldr	r2, [fp, #-8]
   29678:	str	r2, [sp, #4]
   2967c:	str	r3, [sp]
   29680:	mov	r3, ip
   29684:	mov	r2, r1
   29688:	ldr	r1, [fp, #-108]	; 0xffffff94
   2968c:	bl	235f8 <__assert_fail@plt+0x12388>
   29690:	mov	r3, r0
   29694:	str	r3, [fp, #-12]
   29698:	ldr	r3, [fp, #-12]
   2969c:	cmp	r3, #0
   296a0:	movne	r3, #1
   296a4:	moveq	r3, #0
   296a8:	uxtb	r3, r3
   296ac:	cmp	r3, #0
   296b0:	beq	29728 <__assert_fail@plt+0x184b8>
   296b4:	b	296c4 <__assert_fail@plt+0x18454>
   296b8:	nop			; (mov r0, r0)
   296bc:	b	296c4 <__assert_fail@plt+0x18454>
   296c0:	nop			; (mov r0, r0)
   296c4:	ldr	r0, [fp, #-104]	; 0xffffff98
   296c8:	bl	29e9c <__assert_fail@plt+0x18c2c>
   296cc:	sub	r3, fp, #96	; 0x60
   296d0:	mov	r0, r3
   296d4:	bl	25cb4 <__assert_fail@plt+0x14a44>
   296d8:	ldr	r3, [pc, #408]	; 29878 <__assert_fail@plt+0x18608>
   296dc:	cmp	r3, #0
   296e0:	bne	296f0 <__assert_fail@plt+0x18480>
   296e4:	ldr	r3, [pc, #400]	; 2987c <__assert_fail@plt+0x1860c>
   296e8:	cmp	r3, #0
   296ec:	beq	29700 <__assert_fail@plt+0x18490>
   296f0:	ldr	r3, [fp, #-8]
   296f4:	add	r3, r3, #136	; 0x88
   296f8:	mov	r0, r3
   296fc:	bl	10fc4 <pthread_mutex_destroy@plt>
   29700:	ldr	r0, [fp, #-8]
   29704:	bl	290a8 <__assert_fail@plt+0x17e38>
   29708:	ldr	r3, [fp, #-104]	; 0xffffff98
   2970c:	mov	r2, #0
   29710:	str	r2, [r3]
   29714:	ldr	r3, [fp, #-104]	; 0xffffff98
   29718:	mov	r2, #0
   2971c:	str	r2, [r3, #4]
   29720:	ldr	r3, [fp, #-12]
   29724:	b	2986c <__assert_fail@plt+0x185fc>
   29728:	ldr	r3, [fp, #-104]	; 0xffffff98
   2972c:	mov	r2, #0
   29730:	str	r2, [r3, #24]
   29734:	sub	r3, fp, #12
   29738:	sub	r0, fp, #96	; 0x60
   2973c:	ldr	r2, [fp, #-116]	; 0xffffff8c
   29740:	ldr	r1, [fp, #-104]	; 0xffffff98
   29744:	bl	2d584 <__assert_fail@plt+0x1c314>
   29748:	mov	r2, r0
   2974c:	ldr	r3, [fp, #-8]
   29750:	str	r2, [r3, #52]	; 0x34
   29754:	ldr	r3, [fp, #-8]
   29758:	ldr	r3, [r3, #52]	; 0x34
   2975c:	cmp	r3, #0
   29760:	moveq	r3, #1
   29764:	movne	r3, #0
   29768:	uxtb	r3, r3
   2976c:	cmp	r3, #0
   29770:	bne	296b8 <__assert_fail@plt+0x18448>
   29774:	ldr	r0, [fp, #-104]	; 0xffffff98
   29778:	bl	2a640 <__assert_fail@plt+0x193d0>
   2977c:	mov	r3, r0
   29780:	str	r3, [fp, #-12]
   29784:	ldr	r3, [fp, #-12]
   29788:	cmp	r3, #0
   2978c:	movne	r3, #1
   29790:	moveq	r3, #0
   29794:	uxtb	r3, r3
   29798:	cmp	r3, #0
   2979c:	bne	296c0 <__assert_fail@plt+0x18450>
   297a0:	ldr	r3, [fp, #-8]
   297a4:	ldrb	r3, [r3, #88]	; 0x58
   297a8:	and	r3, r3, #4
   297ac:	uxtb	r3, r3
   297b0:	cmp	r3, #0
   297b4:	beq	297e0 <__assert_fail@plt+0x18570>
   297b8:	ldr	r3, [fp, #-116]	; 0xffffff8c
   297bc:	and	r3, r3, #4194304	; 0x400000
   297c0:	cmp	r3, #0
   297c4:	bne	297e0 <__assert_fail@plt+0x18570>
   297c8:	ldr	r3, [fp, #-104]	; 0xffffff98
   297cc:	ldr	r3, [r3, #20]
   297d0:	cmp	r3, #0
   297d4:	bne	297e0 <__assert_fail@plt+0x18570>
   297d8:	ldr	r0, [fp, #-8]
   297dc:	bl	2a320 <__assert_fail@plt+0x190b0>
   297e0:	ldr	r0, [fp, #-8]
   297e4:	bl	29f3c <__assert_fail@plt+0x18ccc>
   297e8:	mov	r3, r0
   297ec:	str	r3, [fp, #-12]
   297f0:	ldr	r0, [fp, #-104]	; 0xffffff98
   297f4:	bl	29e9c <__assert_fail@plt+0x18c2c>
   297f8:	sub	r3, fp, #96	; 0x60
   297fc:	mov	r0, r3
   29800:	bl	25cb4 <__assert_fail@plt+0x14a44>
   29804:	ldr	r3, [fp, #-12]
   29808:	cmp	r3, #0
   2980c:	movne	r3, #1
   29810:	moveq	r3, #0
   29814:	uxtb	r3, r3
   29818:	cmp	r3, #0
   2981c:	beq	29868 <__assert_fail@plt+0x185f8>
   29820:	ldr	r3, [pc, #80]	; 29878 <__assert_fail@plt+0x18608>
   29824:	cmp	r3, #0
   29828:	bne	29838 <__assert_fail@plt+0x185c8>
   2982c:	ldr	r3, [pc, #72]	; 2987c <__assert_fail@plt+0x1860c>
   29830:	cmp	r3, #0
   29834:	beq	29848 <__assert_fail@plt+0x185d8>
   29838:	ldr	r3, [fp, #-8]
   2983c:	add	r3, r3, #136	; 0x88
   29840:	mov	r0, r3
   29844:	bl	10fc4 <pthread_mutex_destroy@plt>
   29848:	ldr	r0, [fp, #-8]
   2984c:	bl	290a8 <__assert_fail@plt+0x17e38>
   29850:	ldr	r3, [fp, #-104]	; 0xffffff98
   29854:	mov	r2, #0
   29858:	str	r2, [r3]
   2985c:	ldr	r3, [fp, #-104]	; 0xffffff98
   29860:	mov	r2, #0
   29864:	str	r2, [r3, #4]
   29868:	ldr	r3, [fp, #-12]
   2986c:	mov	r0, r3
   29870:	sub	sp, fp, #4
   29874:	pop	{fp, pc}
	...
   29880:	push	{fp, lr}
   29884:	add	fp, sp, #4
   29888:	sub	sp, sp, #40	; 0x28
   2988c:	str	r0, [fp, #-40]	; 0xffffffd8
   29890:	str	r1, [fp, #-44]	; 0xffffffd4
   29894:	mov	r3, #4
   29898:	str	r3, [fp, #-24]	; 0xffffffe8
   2989c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   298a0:	cmp	r3, #12
   298a4:	bls	298b4 <__assert_fail@plt+0x18644>
   298a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   298ac:	cmp	r3, #8
   298b0:	bls	29918 <__assert_fail@plt+0x186a8>
   298b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   298b8:	cmp	r3, #12
   298bc:	bls	29918 <__assert_fail@plt+0x186a8>
   298c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   298c4:	cmp	r3, #12
   298c8:	bls	29918 <__assert_fail@plt+0x186a8>
   298cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   298d0:	cmp	r3, #12
   298d4:	bls	298e4 <__assert_fail@plt+0x18674>
   298d8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   298dc:	cmp	r3, #8
   298e0:	bls	2990c <__assert_fail@plt+0x1869c>
   298e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   298e8:	cmp	r3, #12
   298ec:	bls	29904 <__assert_fail@plt+0x18694>
   298f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   298f4:	cmp	r3, #8
   298f8:	movcs	r3, r3
   298fc:	movcc	r3, #8
   29900:	b	29914 <__assert_fail@plt+0x186a4>
   29904:	mov	r3, #12
   29908:	b	29914 <__assert_fail@plt+0x186a4>
   2990c:	mov	r3, #8
   29910:	b	2991c <__assert_fail@plt+0x186ac>
   29914:	b	2991c <__assert_fail@plt+0x186ac>
   29918:	mov	r3, #12
   2991c:	str	r3, [fp, #-28]	; 0xffffffe4
   29920:	mov	r2, #160	; 0xa0
   29924:	mov	r1, #0
   29928:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2992c:	bl	111bc <memset@plt>
   29930:	ldr	r3, [fp, #-40]	; 0xffffffd8
   29934:	mov	r2, #31
   29938:	str	r2, [r3, #64]	; 0x40
   2993c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   29940:	mvn	r0, #0
   29944:	bl	3f560 <__assert_fail@plt+0x2e2f0>
   29948:	mov	r3, r0
   2994c:	cmp	r3, #0
   29950:	blt	2996c <__assert_fail@plt+0x186fc>
   29954:	ldr	r1, [fp, #-28]	; 0xffffffe4
   29958:	mvn	r0, #0
   2995c:	bl	3f560 <__assert_fail@plt+0x2e2f0>
   29960:	mov	r3, r0
   29964:	lsr	r3, r3, #1
   29968:	b	29970 <__assert_fail@plt+0x18700>
   2996c:	mvn	r3, #-1073741824	; 0xc0000000
   29970:	ldr	r2, [fp, #-44]	; 0xffffffd4
   29974:	cmp	r3, r2
   29978:	movls	r3, #1
   2997c:	movhi	r3, #0
   29980:	uxtb	r3, r3
   29984:	cmp	r3, #0
   29988:	beq	29994 <__assert_fail@plt+0x18724>
   2998c:	mov	r3, #12
   29990:	b	29cbc <__assert_fail@plt+0x18a4c>
   29994:	ldr	r3, [fp, #-44]	; 0xffffffd4
   29998:	add	r2, r3, #1
   2999c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   299a0:	str	r2, [r3, #4]
   299a4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   299a8:	ldr	r3, [r3, #4]
   299ac:	lsl	r3, r3, #3
   299b0:	mov	r0, r3
   299b4:	bl	3df98 <__assert_fail@plt+0x2cd28>
   299b8:	mov	r3, r0
   299bc:	mov	r2, r3
   299c0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   299c4:	str	r2, [r3]
   299c8:	mov	r3, #1
   299cc:	str	r3, [fp, #-8]
   299d0:	ldr	r2, [fp, #-8]
   299d4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   299d8:	cmp	r2, r3
   299dc:	bhi	299f0 <__assert_fail@plt+0x18780>
   299e0:	ldr	r3, [fp, #-8]
   299e4:	lsl	r3, r3, #1
   299e8:	str	r3, [fp, #-8]
   299ec:	b	299d0 <__assert_fail@plt+0x18760>
   299f0:	nop			; (mov r0, r0)
   299f4:	ldr	r1, [fp, #-8]
   299f8:	mov	r0, #12
   299fc:	bl	3ded4 <__assert_fail@plt+0x2cc64>
   29a00:	mov	r3, r0
   29a04:	mov	r2, r3
   29a08:	ldr	r3, [fp, #-40]	; 0xffffffd8
   29a0c:	str	r2, [r3, #32]
   29a10:	ldr	r3, [fp, #-8]
   29a14:	sub	r2, r3, #1
   29a18:	ldr	r3, [fp, #-40]	; 0xffffffd8
   29a1c:	str	r2, [r3, #68]	; 0x44
   29a20:	bl	110b4 <__ctype_get_mb_cur_max@plt>
   29a24:	mov	r3, r0
   29a28:	mov	r2, r3
   29a2c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   29a30:	str	r2, [r3, #92]	; 0x5c
   29a34:	mov	r0, #14
   29a38:	bl	11228 <nl_langinfo@plt>
   29a3c:	str	r0, [fp, #-32]	; 0xffffffe0
   29a40:	ldr	r3, [fp, #-32]	; 0xffffffe0
   29a44:	ldrb	r3, [r3]
   29a48:	cmp	r3, #85	; 0x55
   29a4c:	beq	29a60 <__assert_fail@plt+0x187f0>
   29a50:	ldr	r3, [fp, #-32]	; 0xffffffe0
   29a54:	ldrb	r3, [r3]
   29a58:	cmp	r3, #117	; 0x75
   29a5c:	bne	29b00 <__assert_fail@plt+0x18890>
   29a60:	ldr	r3, [fp, #-32]	; 0xffffffe0
   29a64:	add	r3, r3, #1
   29a68:	ldrb	r3, [r3]
   29a6c:	cmp	r3, #84	; 0x54
   29a70:	beq	29a88 <__assert_fail@plt+0x18818>
   29a74:	ldr	r3, [fp, #-32]	; 0xffffffe0
   29a78:	add	r3, r3, #1
   29a7c:	ldrb	r3, [r3]
   29a80:	cmp	r3, #116	; 0x74
   29a84:	bne	29b00 <__assert_fail@plt+0x18890>
   29a88:	ldr	r3, [fp, #-32]	; 0xffffffe0
   29a8c:	add	r3, r3, #2
   29a90:	ldrb	r3, [r3]
   29a94:	cmp	r3, #70	; 0x46
   29a98:	beq	29ab0 <__assert_fail@plt+0x18840>
   29a9c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   29aa0:	add	r3, r3, #2
   29aa4:	ldrb	r3, [r3]
   29aa8:	cmp	r3, #102	; 0x66
   29aac:	bne	29b00 <__assert_fail@plt+0x18890>
   29ab0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   29ab4:	add	r3, r3, #3
   29ab8:	ldrb	r3, [r3]
   29abc:	cmp	r3, #45	; 0x2d
   29ac0:	bne	29acc <__assert_fail@plt+0x1885c>
   29ac4:	mov	r3, #4
   29ac8:	b	29ad0 <__assert_fail@plt+0x18860>
   29acc:	mov	r3, #3
   29ad0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   29ad4:	add	r3, r2, r3
   29ad8:	ldr	r1, [pc, #488]	; 29cc8 <__assert_fail@plt+0x18a58>
   29adc:	mov	r0, r3
   29ae0:	bl	10fa0 <strcmp@plt>
   29ae4:	mov	r3, r0
   29ae8:	cmp	r3, #0
   29aec:	bne	29b00 <__assert_fail@plt+0x18890>
   29af0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   29af4:	ldrb	r3, [r2, #88]	; 0x58
   29af8:	orr	r3, r3, #4
   29afc:	strb	r3, [r2, #88]	; 0x58
   29b00:	ldr	r2, [fp, #-40]	; 0xffffffd8
   29b04:	ldrb	r3, [r2, #88]	; 0x58
   29b08:	bic	r3, r3, #8
   29b0c:	strb	r3, [r2, #88]	; 0x58
   29b10:	ldr	r3, [fp, #-40]	; 0xffffffd8
   29b14:	ldr	r3, [r3, #92]	; 0x5c
   29b18:	cmp	r3, #1
   29b1c:	ble	29c70 <__assert_fail@plt+0x18a00>
   29b20:	ldr	r3, [fp, #-40]	; 0xffffffd8
   29b24:	ldrb	r3, [r3, #88]	; 0x58
   29b28:	and	r3, r3, #4
   29b2c:	uxtb	r3, r3
   29b30:	cmp	r3, #0
   29b34:	beq	29b48 <__assert_fail@plt+0x188d8>
   29b38:	ldr	r3, [fp, #-40]	; 0xffffffd8
   29b3c:	ldr	r2, [pc, #392]	; 29ccc <__assert_fail@plt+0x18a5c>
   29b40:	str	r2, [r3, #60]	; 0x3c
   29b44:	b	29c70 <__assert_fail@plt+0x18a00>
   29b48:	mov	r1, #1
   29b4c:	mov	r0, #32
   29b50:	bl	3ded4 <__assert_fail@plt+0x2cc64>
   29b54:	mov	r3, r0
   29b58:	mov	r2, r3
   29b5c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   29b60:	str	r2, [r3, #60]	; 0x3c
   29b64:	ldr	r3, [fp, #-40]	; 0xffffffd8
   29b68:	ldr	r3, [r3, #60]	; 0x3c
   29b6c:	cmp	r3, #0
   29b70:	moveq	r3, #1
   29b74:	movne	r3, #0
   29b78:	uxtb	r3, r3
   29b7c:	cmp	r3, #0
   29b80:	beq	29b8c <__assert_fail@plt+0x1891c>
   29b84:	mov	r3, #12
   29b88:	b	29cbc <__assert_fail@plt+0x18a4c>
   29b8c:	mov	r3, #0
   29b90:	str	r3, [fp, #-12]
   29b94:	mov	r3, #0
   29b98:	str	r3, [fp, #-20]	; 0xffffffec
   29b9c:	b	29c64 <__assert_fail@plt+0x189f4>
   29ba0:	mov	r3, #0
   29ba4:	str	r3, [fp, #-16]
   29ba8:	b	29c4c <__assert_fail@plt+0x189dc>
   29bac:	ldr	r0, [fp, #-20]	; 0xffffffec
   29bb0:	bl	111c8 <btowc@plt>
   29bb4:	str	r0, [fp, #-36]	; 0xffffffdc
   29bb8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   29bbc:	cmn	r3, #1
   29bc0:	beq	29c04 <__assert_fail@plt+0x18994>
   29bc4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   29bc8:	ldr	r2, [r3, #60]	; 0x3c
   29bcc:	ldr	r3, [fp, #-12]
   29bd0:	lsl	r3, r3, #2
   29bd4:	add	r3, r2, r3
   29bd8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   29bdc:	ldr	r1, [r2, #60]	; 0x3c
   29be0:	ldr	r2, [fp, #-12]
   29be4:	lsl	r2, r2, #2
   29be8:	add	r2, r1, r2
   29bec:	ldr	r1, [r2]
   29bf0:	mov	r0, #1
   29bf4:	ldr	r2, [fp, #-16]
   29bf8:	lsl	r2, r0, r2
   29bfc:	orr	r2, r1, r2
   29c00:	str	r2, [r3]
   29c04:	ldr	r3, [fp, #-20]	; 0xffffffec
   29c08:	bic	r3, r3, #127	; 0x7f
   29c0c:	cmp	r3, #0
   29c10:	bne	29c34 <__assert_fail@plt+0x189c4>
   29c14:	ldr	r3, [fp, #-20]	; 0xffffffec
   29c18:	ldr	r2, [fp, #-36]	; 0xffffffdc
   29c1c:	cmp	r2, r3
   29c20:	beq	29c34 <__assert_fail@plt+0x189c4>
   29c24:	ldr	r2, [fp, #-40]	; 0xffffffd8
   29c28:	ldrb	r3, [r2, #88]	; 0x58
   29c2c:	orr	r3, r3, #8
   29c30:	strb	r3, [r2, #88]	; 0x58
   29c34:	ldr	r3, [fp, #-16]
   29c38:	add	r3, r3, #1
   29c3c:	str	r3, [fp, #-16]
   29c40:	ldr	r3, [fp, #-20]	; 0xffffffec
   29c44:	add	r3, r3, #1
   29c48:	str	r3, [fp, #-20]	; 0xffffffec
   29c4c:	ldr	r3, [fp, #-16]
   29c50:	cmp	r3, #31
   29c54:	ble	29bac <__assert_fail@plt+0x1893c>
   29c58:	ldr	r3, [fp, #-12]
   29c5c:	add	r3, r3, #1
   29c60:	str	r3, [fp, #-12]
   29c64:	ldr	r3, [fp, #-12]
   29c68:	cmp	r3, #7
   29c6c:	ble	29ba0 <__assert_fail@plt+0x18930>
   29c70:	ldr	r3, [fp, #-40]	; 0xffffffd8
   29c74:	ldr	r3, [r3]
   29c78:	cmp	r3, #0
   29c7c:	moveq	r3, #1
   29c80:	movne	r3, #0
   29c84:	uxtb	r3, r3
   29c88:	cmp	r3, #0
   29c8c:	bne	29cb0 <__assert_fail@plt+0x18a40>
   29c90:	ldr	r3, [fp, #-40]	; 0xffffffd8
   29c94:	ldr	r3, [r3, #32]
   29c98:	cmp	r3, #0
   29c9c:	moveq	r3, #1
   29ca0:	movne	r3, #0
   29ca4:	uxtb	r3, r3
   29ca8:	cmp	r3, #0
   29cac:	beq	29cb8 <__assert_fail@plt+0x18a48>
   29cb0:	mov	r3, #12
   29cb4:	b	29cbc <__assert_fail@plt+0x18a4c>
   29cb8:	mov	r3, #0
   29cbc:	mov	r0, r3
   29cc0:	sub	sp, fp, #4
   29cc4:	pop	{fp, pc}
   29cc8:	andeq	r1, r4, ip, lsl #6
   29ccc:	andeq	r1, r4, ip, ror #5
   29cd0:	push	{fp, lr}
   29cd4:	add	fp, sp, #4
   29cd8:	sub	sp, sp, #40	; 0x28
   29cdc:	str	r0, [fp, #-40]	; 0xffffffd8
   29ce0:	mov	r3, #0
   29ce4:	str	r3, [fp, #-8]
   29ce8:	mov	r3, #0
   29cec:	str	r3, [fp, #-16]
   29cf0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   29cf4:	ldrb	r3, [r2, #88]	; 0x58
   29cf8:	orr	r3, r3, #16
   29cfc:	strb	r3, [r2, #88]	; 0x58
   29d00:	ldr	r3, [fp, #-40]	; 0xffffffd8
   29d04:	ldrb	r3, [r3, #88]	; 0x58
   29d08:	and	r3, r3, #8
   29d0c:	uxtb	r3, r3
   29d10:	cmp	r3, #0
   29d14:	moveq	r3, #1
   29d18:	movne	r3, #0
   29d1c:	uxtb	r3, r3
   29d20:	cmp	r3, #0
   29d24:	beq	29e84 <__assert_fail@plt+0x18c14>
   29d28:	mov	r3, #0
   29d2c:	str	r3, [fp, #-20]	; 0xffffffec
   29d30:	ldr	r3, [pc, #352]	; 29e98 <__assert_fail@plt+0x18c28>
   29d34:	str	r3, [fp, #-24]	; 0xffffffe8
   29d38:	mvn	r3, #2013265921	; 0x78000001
   29d3c:	str	r3, [fp, #-28]	; 0xffffffe4
   29d40:	mvn	r3, #-134217727	; 0xf8000001
   29d44:	str	r3, [fp, #-32]	; 0xffffffe0
   29d48:	ldr	r3, [fp, #-40]	; 0xffffffd8
   29d4c:	ldr	r2, [fp, #-20]	; 0xffffffec
   29d50:	str	r2, [r3, #96]	; 0x60
   29d54:	ldr	r3, [fp, #-40]	; 0xffffffd8
   29d58:	ldr	r2, [fp, #-24]	; 0xffffffe8
   29d5c:	str	r2, [r3, #100]	; 0x64
   29d60:	ldr	r3, [fp, #-40]	; 0xffffffd8
   29d64:	ldr	r2, [fp, #-28]	; 0xffffffe4
   29d68:	str	r2, [r3, #104]	; 0x68
   29d6c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   29d70:	ldr	r2, [fp, #-32]	; 0xffffffe0
   29d74:	str	r2, [r3, #108]	; 0x6c
   29d78:	mov	r3, #4
   29d7c:	str	r3, [fp, #-8]
   29d80:	mov	r3, #128	; 0x80
   29d84:	str	r3, [fp, #-16]
   29d88:	ldr	r3, [fp, #-40]	; 0xffffffd8
   29d8c:	ldrb	r3, [r3, #88]	; 0x58
   29d90:	lsr	r3, r3, #2
   29d94:	and	r3, r3, #1
   29d98:	uxtb	r3, r3
   29d9c:	cmp	r3, #0
   29da0:	beq	29e84 <__assert_fail@plt+0x18c14>
   29da4:	ldr	r3, [fp, #-8]
   29da8:	add	r3, r3, #24
   29dac:	lsl	r3, r3, #2
   29db0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   29db4:	add	r0, r2, r3
   29db8:	ldr	r3, [fp, #-16]
   29dbc:	rsb	r3, r3, #256	; 0x100
   29dc0:	add	r2, r3, #7
   29dc4:	cmp	r3, #0
   29dc8:	movlt	r3, r2
   29dcc:	movge	r3, r3
   29dd0:	asr	r3, r3, #3
   29dd4:	mov	r2, r3
   29dd8:	mov	r1, #0
   29ddc:	bl	111bc <memset@plt>
   29de0:	b	29e90 <__assert_fail@plt+0x18c20>
   29de4:	mov	r3, #0
   29de8:	str	r3, [fp, #-12]
   29dec:	b	29e6c <__assert_fail@plt+0x18bfc>
   29df0:	bl	11150 <__ctype_b_loc@plt>
   29df4:	mov	r3, r0
   29df8:	ldr	r2, [r3]
   29dfc:	ldr	r3, [fp, #-16]
   29e00:	lsl	r3, r3, #1
   29e04:	add	r3, r2, r3
   29e08:	ldrh	r3, [r3]
   29e0c:	and	r3, r3, #8
   29e10:	cmp	r3, #0
   29e14:	bne	29e24 <__assert_fail@plt+0x18bb4>
   29e18:	ldr	r3, [fp, #-16]
   29e1c:	cmp	r3, #95	; 0x5f
   29e20:	bne	29e54 <__assert_fail@plt+0x18be4>
   29e24:	ldr	r3, [fp, #-40]	; 0xffffffd8
   29e28:	ldr	r2, [fp, #-8]
   29e2c:	add	r2, r2, #24
   29e30:	ldr	r2, [r3, r2, lsl #2]
   29e34:	mov	r1, #1
   29e38:	ldr	r3, [fp, #-12]
   29e3c:	lsl	r3, r1, r3
   29e40:	orr	r1, r2, r3
   29e44:	ldr	r3, [fp, #-40]	; 0xffffffd8
   29e48:	ldr	r2, [fp, #-8]
   29e4c:	add	r2, r2, #24
   29e50:	str	r1, [r3, r2, lsl #2]
   29e54:	ldr	r3, [fp, #-12]
   29e58:	add	r3, r3, #1
   29e5c:	str	r3, [fp, #-12]
   29e60:	ldr	r3, [fp, #-16]
   29e64:	add	r3, r3, #1
   29e68:	str	r3, [fp, #-16]
   29e6c:	ldr	r3, [fp, #-12]
   29e70:	cmp	r3, #31
   29e74:	ble	29df0 <__assert_fail@plt+0x18b80>
   29e78:	ldr	r3, [fp, #-8]
   29e7c:	add	r3, r3, #1
   29e80:	str	r3, [fp, #-8]
   29e84:	ldr	r3, [fp, #-8]
   29e88:	cmp	r3, #7
   29e8c:	ble	29de4 <__assert_fail@plt+0x18b74>
   29e90:	sub	sp, fp, #4
   29e94:	pop	{fp, pc}
   29e98:	mvnseq	r0, #0
   29e9c:	push	{fp, lr}
   29ea0:	add	fp, sp, #4
   29ea4:	sub	sp, sp, #24
   29ea8:	str	r0, [fp, #-24]	; 0xffffffe8
   29eac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   29eb0:	ldr	r3, [r3]
   29eb4:	str	r3, [fp, #-12]
   29eb8:	ldr	r3, [fp, #-12]
   29ebc:	ldr	r3, [r3, #56]	; 0x38
   29ec0:	str	r3, [fp, #-8]
   29ec4:	b	29ee4 <__assert_fail@plt+0x18c74>
   29ec8:	ldr	r3, [fp, #-8]
   29ecc:	ldr	r3, [r3]
   29ed0:	str	r3, [fp, #-16]
   29ed4:	ldr	r0, [fp, #-8]
   29ed8:	bl	13630 <__assert_fail@plt+0x23c0>
   29edc:	ldr	r3, [fp, #-16]
   29ee0:	str	r3, [fp, #-8]
   29ee4:	ldr	r3, [fp, #-8]
   29ee8:	cmp	r3, #0
   29eec:	bne	29ec8 <__assert_fail@plt+0x18c58>
   29ef0:	ldr	r3, [fp, #-12]
   29ef4:	mov	r2, #0
   29ef8:	str	r2, [r3, #56]	; 0x38
   29efc:	ldr	r3, [fp, #-12]
   29f00:	mov	r2, #31
   29f04:	str	r2, [r3, #64]	; 0x40
   29f08:	ldr	r3, [fp, #-12]
   29f0c:	mov	r2, #0
   29f10:	str	r2, [r3, #52]	; 0x34
   29f14:	ldr	r3, [fp, #-12]
   29f18:	ldr	r3, [r3, #16]
   29f1c:	mov	r0, r3
   29f20:	bl	13630 <__assert_fail@plt+0x23c0>
   29f24:	ldr	r3, [fp, #-12]
   29f28:	mov	r2, #0
   29f2c:	str	r2, [r3, #16]
   29f30:	nop			; (mov r0, r0)
   29f34:	sub	sp, fp, #4
   29f38:	pop	{fp, pc}
   29f3c:	push	{fp, lr}
   29f40:	add	fp, sp, #4
   29f44:	sub	sp, sp, #56	; 0x38
   29f48:	str	r0, [fp, #-56]	; 0xffffffc8
   29f4c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   29f50:	ldr	r3, [r3, #52]	; 0x34
   29f54:	ldr	r3, [r3, #12]
   29f58:	ldr	r3, [r3, #28]
   29f5c:	str	r3, [fp, #-16]
   29f60:	ldr	r3, [fp, #-56]	; 0xffffffc8
   29f64:	ldr	r2, [fp, #-16]
   29f68:	str	r2, [r3, #72]	; 0x48
   29f6c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   29f70:	ldr	r1, [r3, #24]
   29f74:	ldr	r2, [fp, #-16]
   29f78:	mov	r3, r2
   29f7c:	lsl	r3, r3, #1
   29f80:	add	r3, r3, r2
   29f84:	lsl	r3, r3, #2
   29f88:	add	r2, r1, r3
   29f8c:	sub	r3, fp, #52	; 0x34
   29f90:	mov	r1, r2
   29f94:	mov	r0, r3
   29f98:	bl	26130 <__assert_fail@plt+0x14ec0>
   29f9c:	mov	r3, r0
   29fa0:	str	r3, [fp, #-40]	; 0xffffffd8
   29fa4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   29fa8:	cmp	r3, #0
   29fac:	movne	r3, #1
   29fb0:	moveq	r3, #0
   29fb4:	uxtb	r3, r3
   29fb8:	cmp	r3, #0
   29fbc:	beq	29fc8 <__assert_fail@plt+0x18d58>
   29fc0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   29fc4:	b	2a314 <__assert_fail@plt+0x190a4>
   29fc8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   29fcc:	ldr	r3, [r3, #76]	; 0x4c
   29fd0:	cmp	r3, #0
   29fd4:	ble	2a194 <__assert_fail@plt+0x18f24>
   29fd8:	mov	r3, #0
   29fdc:	str	r3, [fp, #-8]
   29fe0:	b	2a184 <__assert_fail@plt+0x18f14>
   29fe4:	ldr	r2, [fp, #-44]	; 0xffffffd4
   29fe8:	ldr	r3, [fp, #-8]
   29fec:	lsl	r3, r3, #2
   29ff0:	add	r3, r2, r3
   29ff4:	ldr	r3, [r3]
   29ff8:	str	r3, [fp, #-20]	; 0xffffffec
   29ffc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2a000:	ldr	r2, [r3]
   2a004:	ldr	r3, [fp, #-20]	; 0xffffffec
   2a008:	lsl	r3, r3, #3
   2a00c:	add	r3, r2, r3
   2a010:	ldrb	r3, [r3, #4]
   2a014:	str	r3, [fp, #-24]	; 0xffffffe8
   2a018:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a01c:	cmp	r3, #4
   2a020:	bne	2a16c <__assert_fail@plt+0x18efc>
   2a024:	mov	r3, #0
   2a028:	str	r3, [fp, #-12]
   2a02c:	b	2a09c <__assert_fail@plt+0x18e2c>
   2a030:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2a034:	ldr	r2, [r3]
   2a038:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2a03c:	ldr	r3, [fp, #-12]
   2a040:	lsl	r3, r3, #2
   2a044:	add	r3, r1, r3
   2a048:	ldr	r3, [r3]
   2a04c:	lsl	r3, r3, #3
   2a050:	add	r3, r2, r3
   2a054:	str	r3, [fp, #-28]	; 0xffffffe4
   2a058:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2a05c:	ldrb	r3, [r3, #4]
   2a060:	cmp	r3, #9
   2a064:	bne	2a090 <__assert_fail@plt+0x18e20>
   2a068:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2a06c:	ldr	r2, [r3]
   2a070:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2a074:	ldr	r1, [r3]
   2a078:	ldr	r3, [fp, #-20]	; 0xffffffec
   2a07c:	lsl	r3, r3, #3
   2a080:	add	r3, r1, r3
   2a084:	ldr	r3, [r3]
   2a088:	cmp	r2, r3
   2a08c:	beq	2a0b0 <__assert_fail@plt+0x18e40>
   2a090:	ldr	r3, [fp, #-12]
   2a094:	add	r3, r3, #1
   2a098:	str	r3, [fp, #-12]
   2a09c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   2a0a0:	ldr	r3, [fp, #-12]
   2a0a4:	cmp	r2, r3
   2a0a8:	bgt	2a030 <__assert_fail@plt+0x18dc0>
   2a0ac:	b	2a0b4 <__assert_fail@plt+0x18e44>
   2a0b0:	nop			; (mov r0, r0)
   2a0b4:	ldr	r2, [fp, #-48]	; 0xffffffd0
   2a0b8:	ldr	r3, [fp, #-12]
   2a0bc:	cmp	r2, r3
   2a0c0:	beq	2a174 <__assert_fail@plt+0x18f04>
   2a0c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a0c8:	cmp	r3, #4
   2a0cc:	bne	2a178 <__assert_fail@plt+0x18f08>
   2a0d0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2a0d4:	ldr	r1, [r3, #20]
   2a0d8:	ldr	r2, [fp, #-20]	; 0xffffffec
   2a0dc:	mov	r3, r2
   2a0e0:	lsl	r3, r3, #1
   2a0e4:	add	r3, r3, r2
   2a0e8:	lsl	r3, r3, #2
   2a0ec:	add	r3, r1, r3
   2a0f0:	ldr	r3, [r3, #8]
   2a0f4:	ldr	r3, [r3]
   2a0f8:	str	r3, [fp, #-32]	; 0xffffffe0
   2a0fc:	sub	r3, fp, #52	; 0x34
   2a100:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2a104:	mov	r0, r3
   2a108:	bl	2729c <__assert_fail@plt+0x1602c>
   2a10c:	mov	r3, r0
   2a110:	cmp	r3, #0
   2a114:	bne	2a178 <__assert_fail@plt+0x18f08>
   2a118:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2a11c:	ldr	r1, [r3, #24]
   2a120:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2a124:	mov	r3, r2
   2a128:	lsl	r3, r3, #1
   2a12c:	add	r3, r3, r2
   2a130:	lsl	r3, r3, #2
   2a134:	add	r2, r1, r3
   2a138:	sub	r3, fp, #52	; 0x34
   2a13c:	mov	r1, r2
   2a140:	mov	r0, r3
   2a144:	bl	26a38 <__assert_fail@plt+0x157c8>
   2a148:	str	r0, [fp, #-36]	; 0xffffffdc
   2a14c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2a150:	cmp	r3, #0
   2a154:	beq	2a160 <__assert_fail@plt+0x18ef0>
   2a158:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2a15c:	b	2a314 <__assert_fail@plt+0x190a4>
   2a160:	mov	r3, #0
   2a164:	str	r3, [fp, #-8]
   2a168:	b	2a178 <__assert_fail@plt+0x18f08>
   2a16c:	nop			; (mov r0, r0)
   2a170:	b	2a178 <__assert_fail@plt+0x18f08>
   2a174:	nop			; (mov r0, r0)
   2a178:	ldr	r3, [fp, #-8]
   2a17c:	add	r3, r3, #1
   2a180:	str	r3, [fp, #-8]
   2a184:	ldr	r2, [fp, #-48]	; 0xffffffd0
   2a188:	ldr	r3, [fp, #-8]
   2a18c:	cmp	r2, r3
   2a190:	bgt	29fe4 <__assert_fail@plt+0x18d74>
   2a194:	sub	r2, fp, #52	; 0x34
   2a198:	sub	r0, fp, #40	; 0x28
   2a19c:	mov	r3, #0
   2a1a0:	ldr	r1, [fp, #-56]	; 0xffffffc8
   2a1a4:	bl	27a34 <__assert_fail@plt+0x167c4>
   2a1a8:	mov	r2, r0
   2a1ac:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2a1b0:	str	r2, [r3, #36]	; 0x24
   2a1b4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2a1b8:	ldr	r3, [r3, #36]	; 0x24
   2a1bc:	cmp	r3, #0
   2a1c0:	moveq	r3, #1
   2a1c4:	movne	r3, #0
   2a1c8:	uxtb	r3, r3
   2a1cc:	cmp	r3, #0
   2a1d0:	beq	2a1dc <__assert_fail@plt+0x18f6c>
   2a1d4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2a1d8:	b	2a314 <__assert_fail@plt+0x190a4>
   2a1dc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2a1e0:	ldr	r3, [r3, #36]	; 0x24
   2a1e4:	ldrb	r3, [r3, #52]	; 0x34
   2a1e8:	bic	r3, r3, #127	; 0x7f
   2a1ec:	uxtb	r3, r3
   2a1f0:	cmp	r3, #0
   2a1f4:	beq	2a2d4 <__assert_fail@plt+0x19064>
   2a1f8:	sub	r2, fp, #52	; 0x34
   2a1fc:	sub	r0, fp, #40	; 0x28
   2a200:	mov	r3, #1
   2a204:	ldr	r1, [fp, #-56]	; 0xffffffc8
   2a208:	bl	27a34 <__assert_fail@plt+0x167c4>
   2a20c:	mov	r2, r0
   2a210:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2a214:	str	r2, [r3, #40]	; 0x28
   2a218:	sub	r2, fp, #52	; 0x34
   2a21c:	sub	r0, fp, #40	; 0x28
   2a220:	mov	r3, #2
   2a224:	ldr	r1, [fp, #-56]	; 0xffffffc8
   2a228:	bl	27a34 <__assert_fail@plt+0x167c4>
   2a22c:	mov	r2, r0
   2a230:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2a234:	str	r2, [r3, #44]	; 0x2c
   2a238:	sub	r2, fp, #52	; 0x34
   2a23c:	sub	r0, fp, #40	; 0x28
   2a240:	mov	r3, #6
   2a244:	ldr	r1, [fp, #-56]	; 0xffffffc8
   2a248:	bl	27a34 <__assert_fail@plt+0x167c4>
   2a24c:	mov	r2, r0
   2a250:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2a254:	str	r2, [r3, #48]	; 0x30
   2a258:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2a25c:	ldr	r3, [r3, #40]	; 0x28
   2a260:	cmp	r3, #0
   2a264:	moveq	r3, #1
   2a268:	movne	r3, #0
   2a26c:	uxtb	r3, r3
   2a270:	cmp	r3, #0
   2a274:	bne	2a298 <__assert_fail@plt+0x19028>
   2a278:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2a27c:	ldr	r3, [r3, #44]	; 0x2c
   2a280:	cmp	r3, #0
   2a284:	moveq	r3, #1
   2a288:	movne	r3, #0
   2a28c:	uxtb	r3, r3
   2a290:	cmp	r3, #0
   2a294:	beq	2a2a0 <__assert_fail@plt+0x19030>
   2a298:	mov	r3, #1
   2a29c:	b	2a2a4 <__assert_fail@plt+0x19034>
   2a2a0:	mov	r3, #0
   2a2a4:	cmp	r3, #0
   2a2a8:	bne	2a2cc <__assert_fail@plt+0x1905c>
   2a2ac:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2a2b0:	ldr	r3, [r3, #48]	; 0x30
   2a2b4:	cmp	r3, #0
   2a2b8:	moveq	r3, #1
   2a2bc:	movne	r3, #0
   2a2c0:	uxtb	r3, r3
   2a2c4:	cmp	r3, #0
   2a2c8:	beq	2a304 <__assert_fail@plt+0x19094>
   2a2cc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2a2d0:	b	2a314 <__assert_fail@plt+0x190a4>
   2a2d4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2a2d8:	ldr	r2, [r3, #36]	; 0x24
   2a2dc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2a2e0:	str	r2, [r3, #48]	; 0x30
   2a2e4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2a2e8:	ldr	r2, [r3, #48]	; 0x30
   2a2ec:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2a2f0:	str	r2, [r3, #44]	; 0x2c
   2a2f4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2a2f8:	ldr	r2, [r3, #44]	; 0x2c
   2a2fc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2a300:	str	r2, [r3, #40]	; 0x28
   2a304:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2a308:	mov	r0, r3
   2a30c:	bl	13630 <__assert_fail@plt+0x23c0>
   2a310:	mov	r3, #0
   2a314:	mov	r0, r3
   2a318:	sub	sp, fp, #4
   2a31c:	pop	{fp, pc}
   2a320:	push	{fp, lr}
   2a324:	add	fp, sp, #4
   2a328:	sub	sp, sp, #24
   2a32c:	str	r0, [fp, #-24]	; 0xffffffe8
   2a330:	mov	r3, #0
   2a334:	strb	r3, [fp, #-13]
   2a338:	mov	r3, #0
   2a33c:	strb	r3, [fp, #-14]
   2a340:	mov	r3, #0
   2a344:	str	r3, [fp, #-8]
   2a348:	b	2a4bc <__assert_fail@plt+0x1924c>
   2a34c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a350:	ldr	r2, [r3]
   2a354:	ldr	r3, [fp, #-8]
   2a358:	lsl	r3, r3, #3
   2a35c:	add	r3, r2, r3
   2a360:	ldrb	r3, [r3, #4]
   2a364:	sub	r3, r3, #1
   2a368:	cmp	r3, #11
   2a36c:	ldrls	pc, [pc, r3, lsl #2]
   2a370:	b	2a4a0 <__assert_fail@plt+0x19230>
   2a374:	andeq	sl, r2, r4, lsr #7
   2a378:	andeq	sl, r2, r4, lsr #9
   2a37c:	andeq	sl, r2, r0, lsr r4
   2a380:	andeq	sl, r2, r4, lsr #9
   2a384:	andeq	sl, r2, r4, lsr #8
   2a388:	andeq	sl, r2, ip, lsr #12
   2a38c:	andeq	sl, r2, r0, lsr #9
   2a390:	andeq	sl, r2, r4, lsr #9
   2a394:	andeq	sl, r2, r4, lsr #9
   2a398:	andeq	sl, r2, r4, lsr #9
   2a39c:	andeq	sl, r2, r4, lsr #9
   2a3a0:	ldrdeq	sl, [r2], -r4
   2a3a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a3a8:	ldr	r2, [r3]
   2a3ac:	ldr	r3, [fp, #-8]
   2a3b0:	lsl	r3, r3, #3
   2a3b4:	add	r3, r2, r3
   2a3b8:	ldrb	r3, [r3]
   2a3bc:	sxtb	r3, r3
   2a3c0:	cmp	r3, #0
   2a3c4:	bge	2a4ac <__assert_fail@plt+0x1923c>
   2a3c8:	mov	r3, #1
   2a3cc:	strb	r3, [fp, #-13]
   2a3d0:	b	2a4ac <__assert_fail@plt+0x1923c>
   2a3d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a3d8:	ldr	r2, [r3]
   2a3dc:	ldr	r3, [fp, #-8]
   2a3e0:	lsl	r3, r3, #3
   2a3e4:	add	r3, r2, r3
   2a3e8:	ldr	r3, [r3]
   2a3ec:	cmp	r3, #32
   2a3f0:	beq	2a41c <__assert_fail@plt+0x191ac>
   2a3f4:	cmp	r3, #32
   2a3f8:	bhi	2a408 <__assert_fail@plt+0x19198>
   2a3fc:	cmp	r3, #16
   2a400:	beq	2a41c <__assert_fail@plt+0x191ac>
   2a404:	b	2a638 <__assert_fail@plt+0x193c8>
   2a408:	cmp	r3, #64	; 0x40
   2a40c:	beq	2a41c <__assert_fail@plt+0x191ac>
   2a410:	cmp	r3, #128	; 0x80
   2a414:	beq	2a41c <__assert_fail@plt+0x191ac>
   2a418:	b	2a638 <__assert_fail@plt+0x193c8>
   2a41c:	nop			; (mov r0, r0)
   2a420:	b	2a4b0 <__assert_fail@plt+0x19240>
   2a424:	mov	r3, #1
   2a428:	strb	r3, [fp, #-14]
   2a42c:	b	2a4b0 <__assert_fail@plt+0x19240>
   2a430:	mov	r3, #0
   2a434:	str	r3, [fp, #-20]	; 0xffffffec
   2a438:	mov	r3, #4
   2a43c:	str	r3, [fp, #-12]
   2a440:	b	2a490 <__assert_fail@plt+0x19220>
   2a444:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a448:	ldr	r2, [r3]
   2a44c:	ldr	r3, [fp, #-8]
   2a450:	lsl	r3, r3, #3
   2a454:	add	r3, r2, r3
   2a458:	ldr	r2, [r3]
   2a45c:	ldr	r3, [fp, #-12]
   2a460:	lsl	r3, r3, #2
   2a464:	add	r3, r2, r3
   2a468:	ldr	r2, [r3]
   2a46c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2a470:	lsr	r3, r2, r3
   2a474:	cmp	r3, #0
   2a478:	bne	2a634 <__assert_fail@plt+0x193c4>
   2a47c:	mov	r3, #0
   2a480:	str	r3, [fp, #-20]	; 0xffffffec
   2a484:	ldr	r3, [fp, #-12]
   2a488:	add	r3, r3, #1
   2a48c:	str	r3, [fp, #-12]
   2a490:	ldr	r3, [fp, #-12]
   2a494:	cmp	r3, #7
   2a498:	ble	2a444 <__assert_fail@plt+0x191d4>
   2a49c:	b	2a4b0 <__assert_fail@plt+0x19240>
   2a4a0:	bl	11258 <abort@plt>
   2a4a4:	nop			; (mov r0, r0)
   2a4a8:	b	2a4b0 <__assert_fail@plt+0x19240>
   2a4ac:	nop			; (mov r0, r0)
   2a4b0:	ldr	r3, [fp, #-8]
   2a4b4:	add	r3, r3, #1
   2a4b8:	str	r3, [fp, #-8]
   2a4bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a4c0:	ldr	r2, [r3, #8]
   2a4c4:	ldr	r3, [fp, #-8]
   2a4c8:	cmp	r2, r3
   2a4cc:	bhi	2a34c <__assert_fail@plt+0x190dc>
   2a4d0:	ldrb	r3, [fp, #-13]
   2a4d4:	cmp	r3, #0
   2a4d8:	bne	2a4e8 <__assert_fail@plt+0x19278>
   2a4dc:	ldrb	r3, [fp, #-14]
   2a4e0:	cmp	r3, #0
   2a4e4:	beq	2a5b8 <__assert_fail@plt+0x19348>
   2a4e8:	mov	r3, #0
   2a4ec:	str	r3, [fp, #-8]
   2a4f0:	b	2a5a4 <__assert_fail@plt+0x19334>
   2a4f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a4f8:	ldr	r2, [r3]
   2a4fc:	ldr	r3, [fp, #-8]
   2a500:	lsl	r3, r3, #3
   2a504:	add	r3, r2, r3
   2a508:	ldrb	r3, [r3, #4]
   2a50c:	cmp	r3, #1
   2a510:	bne	2a55c <__assert_fail@plt+0x192ec>
   2a514:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a518:	ldr	r2, [r3]
   2a51c:	ldr	r3, [fp, #-8]
   2a520:	lsl	r3, r3, #3
   2a524:	add	r3, r2, r3
   2a528:	ldrb	r3, [r3]
   2a52c:	sxtb	r3, r3
   2a530:	cmp	r3, #0
   2a534:	bge	2a55c <__assert_fail@plt+0x192ec>
   2a538:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a53c:	ldr	r2, [r3]
   2a540:	ldr	r3, [fp, #-8]
   2a544:	lsl	r3, r3, #3
   2a548:	add	r2, r2, r3
   2a54c:	ldrb	r3, [r2, #6]
   2a550:	bic	r3, r3, #32
   2a554:	strb	r3, [r2, #6]
   2a558:	b	2a598 <__assert_fail@plt+0x19328>
   2a55c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a560:	ldr	r2, [r3]
   2a564:	ldr	r3, [fp, #-8]
   2a568:	lsl	r3, r3, #3
   2a56c:	add	r3, r2, r3
   2a570:	ldrb	r3, [r3, #4]
   2a574:	cmp	r3, #5
   2a578:	bne	2a598 <__assert_fail@plt+0x19328>
   2a57c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a580:	ldr	r2, [r3]
   2a584:	ldr	r3, [fp, #-8]
   2a588:	lsl	r3, r3, #3
   2a58c:	add	r3, r2, r3
   2a590:	mov	r2, #7
   2a594:	strb	r2, [r3, #4]
   2a598:	ldr	r3, [fp, #-8]
   2a59c:	add	r3, r3, #1
   2a5a0:	str	r3, [fp, #-8]
   2a5a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a5a8:	ldr	r2, [r3, #8]
   2a5ac:	ldr	r3, [fp, #-8]
   2a5b0:	cmp	r2, r3
   2a5b4:	bhi	2a4f4 <__assert_fail@plt+0x19284>
   2a5b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a5bc:	mov	r2, #1
   2a5c0:	str	r2, [r3, #92]	; 0x5c
   2a5c4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2a5c8:	ldrb	r3, [r2, #88]	; 0x58
   2a5cc:	bic	r3, r3, #4
   2a5d0:	strb	r3, [r2, #88]	; 0x58
   2a5d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a5d8:	ldr	r3, [r3, #76]	; 0x4c
   2a5dc:	cmp	r3, #0
   2a5e0:	bgt	2a5f0 <__assert_fail@plt+0x19380>
   2a5e4:	ldrb	r3, [fp, #-14]
   2a5e8:	cmp	r3, #0
   2a5ec:	beq	2a5f8 <__assert_fail@plt+0x19388>
   2a5f0:	mov	r3, #1
   2a5f4:	b	2a5fc <__assert_fail@plt+0x1938c>
   2a5f8:	mov	r3, #0
   2a5fc:	uxtb	r3, r3
   2a600:	and	r3, r3, #1
   2a604:	uxtb	r3, r3
   2a608:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2a60c:	ldrb	r2, [r1, #88]	; 0x58
   2a610:	and	r3, r3, #1
   2a614:	bic	r2, r2, #2
   2a618:	lsl	r3, r3, #1
   2a61c:	orr	r3, r3, r2
   2a620:	mov	r2, r3
   2a624:	strb	r2, [r1, #88]	; 0x58
   2a628:	b	2a638 <__assert_fail@plt+0x193c8>
   2a62c:	nop			; (mov r0, r0)
   2a630:	b	2a638 <__assert_fail@plt+0x193c8>
   2a634:	nop			; (mov r0, r0)
   2a638:	sub	sp, fp, #4
   2a63c:	pop	{fp, pc}
   2a640:	push	{fp, lr}
   2a644:	add	fp, sp, #4
   2a648:	sub	sp, sp, #24
   2a64c:	str	r0, [fp, #-24]	; 0xffffffe8
   2a650:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a654:	ldr	r3, [r3]
   2a658:	str	r3, [fp, #-16]
   2a65c:	ldr	r3, [fp, #-16]
   2a660:	ldr	r3, [r3, #4]
   2a664:	lsl	r3, r3, #2
   2a668:	mov	r0, r3
   2a66c:	bl	3df98 <__assert_fail@plt+0x2cd28>
   2a670:	mov	r3, r0
   2a674:	mov	r2, r3
   2a678:	ldr	r3, [fp, #-16]
   2a67c:	str	r2, [r3, #12]
   2a680:	ldr	r3, [fp, #-16]
   2a684:	ldr	r3, [r3, #4]
   2a688:	lsl	r3, r3, #2
   2a68c:	mov	r0, r3
   2a690:	bl	3df98 <__assert_fail@plt+0x2cd28>
   2a694:	mov	r3, r0
   2a698:	mov	r2, r3
   2a69c:	ldr	r3, [fp, #-16]
   2a6a0:	str	r2, [r3, #16]
   2a6a4:	ldr	r3, [fp, #-16]
   2a6a8:	ldr	r2, [r3, #4]
   2a6ac:	mov	r3, r2
   2a6b0:	lsl	r3, r3, #1
   2a6b4:	add	r3, r3, r2
   2a6b8:	lsl	r3, r3, #2
   2a6bc:	mov	r0, r3
   2a6c0:	bl	3df98 <__assert_fail@plt+0x2cd28>
   2a6c4:	mov	r3, r0
   2a6c8:	mov	r2, r3
   2a6cc:	ldr	r3, [fp, #-16]
   2a6d0:	str	r2, [r3, #20]
   2a6d4:	ldr	r3, [fp, #-16]
   2a6d8:	ldr	r2, [r3, #4]
   2a6dc:	mov	r3, r2
   2a6e0:	lsl	r3, r3, #1
   2a6e4:	add	r3, r3, r2
   2a6e8:	lsl	r3, r3, #2
   2a6ec:	mov	r0, r3
   2a6f0:	bl	3df98 <__assert_fail@plt+0x2cd28>
   2a6f4:	mov	r3, r0
   2a6f8:	mov	r2, r3
   2a6fc:	ldr	r3, [fp, #-16]
   2a700:	str	r2, [r3, #24]
   2a704:	ldr	r3, [fp, #-16]
   2a708:	ldr	r3, [r3, #12]
   2a70c:	cmp	r3, #0
   2a710:	moveq	r3, #1
   2a714:	movne	r3, #0
   2a718:	uxtb	r3, r3
   2a71c:	cmp	r3, #0
   2a720:	bne	2a744 <__assert_fail@plt+0x194d4>
   2a724:	ldr	r3, [fp, #-16]
   2a728:	ldr	r3, [r3, #16]
   2a72c:	cmp	r3, #0
   2a730:	moveq	r3, #1
   2a734:	movne	r3, #0
   2a738:	uxtb	r3, r3
   2a73c:	cmp	r3, #0
   2a740:	beq	2a74c <__assert_fail@plt+0x194dc>
   2a744:	mov	r3, #1
   2a748:	b	2a750 <__assert_fail@plt+0x194e0>
   2a74c:	mov	r3, #0
   2a750:	cmp	r3, #0
   2a754:	bne	2a778 <__assert_fail@plt+0x19508>
   2a758:	ldr	r3, [fp, #-16]
   2a75c:	ldr	r3, [r3, #20]
   2a760:	cmp	r3, #0
   2a764:	moveq	r3, #1
   2a768:	movne	r3, #0
   2a76c:	uxtb	r3, r3
   2a770:	cmp	r3, #0
   2a774:	beq	2a780 <__assert_fail@plt+0x19510>
   2a778:	mov	r3, #1
   2a77c:	b	2a784 <__assert_fail@plt+0x19514>
   2a780:	mov	r3, #0
   2a784:	cmp	r3, #0
   2a788:	bne	2a7ac <__assert_fail@plt+0x1953c>
   2a78c:	ldr	r3, [fp, #-16]
   2a790:	ldr	r3, [r3, #24]
   2a794:	cmp	r3, #0
   2a798:	moveq	r3, #1
   2a79c:	movne	r3, #0
   2a7a0:	uxtb	r3, r3
   2a7a4:	cmp	r3, #0
   2a7a8:	beq	2a7b4 <__assert_fail@plt+0x19544>
   2a7ac:	mov	r3, #12
   2a7b0:	b	2aa90 <__assert_fail@plt+0x19820>
   2a7b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a7b8:	ldr	r3, [r3, #24]
   2a7bc:	lsl	r3, r3, #2
   2a7c0:	mov	r0, r3
   2a7c4:	bl	3df98 <__assert_fail@plt+0x2cd28>
   2a7c8:	mov	r3, r0
   2a7cc:	mov	r2, r3
   2a7d0:	ldr	r3, [fp, #-16]
   2a7d4:	str	r2, [r3, #132]	; 0x84
   2a7d8:	ldr	r3, [fp, #-16]
   2a7dc:	ldr	r3, [r3, #132]	; 0x84
   2a7e0:	cmp	r3, #0
   2a7e4:	beq	2a8d0 <__assert_fail@plt+0x19660>
   2a7e8:	mov	r3, #0
   2a7ec:	str	r3, [fp, #-12]
   2a7f0:	b	2a81c <__assert_fail@plt+0x195ac>
   2a7f4:	ldr	r3, [fp, #-16]
   2a7f8:	ldr	r2, [r3, #132]	; 0x84
   2a7fc:	ldr	r3, [fp, #-12]
   2a800:	lsl	r3, r3, #2
   2a804:	add	r3, r2, r3
   2a808:	ldr	r2, [fp, #-12]
   2a80c:	str	r2, [r3]
   2a810:	ldr	r3, [fp, #-12]
   2a814:	add	r3, r3, #1
   2a818:	str	r3, [fp, #-12]
   2a81c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a820:	ldr	r2, [r3, #24]
   2a824:	ldr	r3, [fp, #-12]
   2a828:	cmp	r2, r3
   2a82c:	bhi	2a7f4 <__assert_fail@plt+0x19584>
   2a830:	ldr	r3, [fp, #-16]
   2a834:	ldr	r3, [r3, #52]	; 0x34
   2a838:	ldr	r2, [fp, #-16]
   2a83c:	ldr	r1, [pc, #600]	; 2aa9c <__assert_fail@plt+0x1982c>
   2a840:	mov	r0, r3
   2a844:	bl	2abc4 <__assert_fail@plt+0x19954>
   2a848:	mov	r3, #0
   2a84c:	str	r3, [fp, #-12]
   2a850:	b	2a884 <__assert_fail@plt+0x19614>
   2a854:	ldr	r3, [fp, #-16]
   2a858:	ldr	r2, [r3, #132]	; 0x84
   2a85c:	ldr	r3, [fp, #-12]
   2a860:	lsl	r3, r3, #2
   2a864:	add	r3, r2, r3
   2a868:	ldr	r2, [r3]
   2a86c:	ldr	r3, [fp, #-12]
   2a870:	cmp	r2, r3
   2a874:	bne	2a89c <__assert_fail@plt+0x1962c>
   2a878:	ldr	r3, [fp, #-12]
   2a87c:	add	r3, r3, #1
   2a880:	str	r3, [fp, #-12]
   2a884:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a888:	ldr	r2, [r3, #24]
   2a88c:	ldr	r3, [fp, #-12]
   2a890:	cmp	r2, r3
   2a894:	bhi	2a854 <__assert_fail@plt+0x195e4>
   2a898:	b	2a8a0 <__assert_fail@plt+0x19630>
   2a89c:	nop			; (mov r0, r0)
   2a8a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a8a4:	ldr	r2, [r3, #24]
   2a8a8:	ldr	r3, [fp, #-12]
   2a8ac:	cmp	r2, r3
   2a8b0:	bne	2a8d0 <__assert_fail@plt+0x19660>
   2a8b4:	ldr	r3, [fp, #-16]
   2a8b8:	ldr	r3, [r3, #132]	; 0x84
   2a8bc:	mov	r0, r3
   2a8c0:	bl	13630 <__assert_fail@plt+0x23c0>
   2a8c4:	ldr	r3, [fp, #-16]
   2a8c8:	mov	r2, #0
   2a8cc:	str	r2, [r3, #132]	; 0x84
   2a8d0:	ldr	r3, [fp, #-16]
   2a8d4:	ldr	r3, [r3, #52]	; 0x34
   2a8d8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2a8dc:	ldr	r1, [pc, #444]	; 2aaa0 <__assert_fail@plt+0x19830>
   2a8e0:	mov	r0, r3
   2a8e4:	bl	2aab0 <__assert_fail@plt+0x19840>
   2a8e8:	str	r0, [fp, #-8]
   2a8ec:	ldr	r3, [fp, #-8]
   2a8f0:	cmp	r3, #0
   2a8f4:	movne	r3, #1
   2a8f8:	moveq	r3, #0
   2a8fc:	uxtb	r3, r3
   2a900:	cmp	r3, #0
   2a904:	beq	2a910 <__assert_fail@plt+0x196a0>
   2a908:	ldr	r3, [fp, #-8]
   2a90c:	b	2aa90 <__assert_fail@plt+0x19820>
   2a910:	ldr	r3, [fp, #-16]
   2a914:	ldr	r3, [r3, #52]	; 0x34
   2a918:	ldr	r2, [fp, #-16]
   2a91c:	ldr	r1, [pc, #384]	; 2aaa4 <__assert_fail@plt+0x19834>
   2a920:	mov	r0, r3
   2a924:	bl	2aab0 <__assert_fail@plt+0x19840>
   2a928:	str	r0, [fp, #-8]
   2a92c:	ldr	r3, [fp, #-8]
   2a930:	cmp	r3, #0
   2a934:	movne	r3, #1
   2a938:	moveq	r3, #0
   2a93c:	uxtb	r3, r3
   2a940:	cmp	r3, #0
   2a944:	beq	2a950 <__assert_fail@plt+0x196e0>
   2a948:	ldr	r3, [fp, #-8]
   2a94c:	b	2aa90 <__assert_fail@plt+0x19820>
   2a950:	ldr	r3, [fp, #-16]
   2a954:	ldr	r3, [r3, #52]	; 0x34
   2a958:	ldr	r2, [fp, #-16]
   2a95c:	ldr	r1, [pc, #324]	; 2aaa8 <__assert_fail@plt+0x19838>
   2a960:	mov	r0, r3
   2a964:	bl	2abc4 <__assert_fail@plt+0x19954>
   2a968:	ldr	r3, [fp, #-16]
   2a96c:	ldr	r3, [r3, #52]	; 0x34
   2a970:	ldr	r2, [fp, #-16]
   2a974:	ldr	r1, [pc, #304]	; 2aaac <__assert_fail@plt+0x1983c>
   2a978:	mov	r0, r3
   2a97c:	bl	2abc4 <__assert_fail@plt+0x19954>
   2a980:	str	r0, [fp, #-8]
   2a984:	ldr	r3, [fp, #-8]
   2a988:	cmp	r3, #0
   2a98c:	movne	r3, #1
   2a990:	moveq	r3, #0
   2a994:	uxtb	r3, r3
   2a998:	cmp	r3, #0
   2a99c:	beq	2a9a8 <__assert_fail@plt+0x19738>
   2a9a0:	ldr	r3, [fp, #-8]
   2a9a4:	b	2aa90 <__assert_fail@plt+0x19820>
   2a9a8:	ldr	r0, [fp, #-16]
   2a9ac:	bl	2bf8c <__assert_fail@plt+0x1ad1c>
   2a9b0:	str	r0, [fp, #-8]
   2a9b4:	ldr	r3, [fp, #-8]
   2a9b8:	cmp	r3, #0
   2a9bc:	movne	r3, #1
   2a9c0:	moveq	r3, #0
   2a9c4:	uxtb	r3, r3
   2a9c8:	cmp	r3, #0
   2a9cc:	beq	2a9d8 <__assert_fail@plt+0x19768>
   2a9d0:	ldr	r3, [fp, #-8]
   2a9d4:	b	2aa90 <__assert_fail@plt+0x19820>
   2a9d8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a9dc:	ldrb	r3, [r3, #28]
   2a9e0:	and	r3, r3, #16
   2a9e4:	uxtb	r3, r3
   2a9e8:	cmp	r3, #0
   2a9ec:	bne	2aa18 <__assert_fail@plt+0x197a8>
   2a9f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2a9f4:	ldr	r3, [r3, #24]
   2a9f8:	cmp	r3, #0
   2a9fc:	beq	2aa18 <__assert_fail@plt+0x197a8>
   2aa00:	ldr	r3, [fp, #-16]
   2aa04:	ldrb	r3, [r3, #88]	; 0x58
   2aa08:	and	r3, r3, #1
   2aa0c:	uxtb	r3, r3
   2aa10:	cmp	r3, #0
   2aa14:	bne	2aa28 <__assert_fail@plt+0x197b8>
   2aa18:	ldr	r3, [fp, #-16]
   2aa1c:	ldr	r3, [r3, #76]	; 0x4c
   2aa20:	cmp	r3, #0
   2aa24:	beq	2aa8c <__assert_fail@plt+0x1981c>
   2aa28:	ldr	r3, [fp, #-16]
   2aa2c:	ldr	r2, [r3, #8]
   2aa30:	mov	r3, r2
   2aa34:	lsl	r3, r3, #1
   2aa38:	add	r3, r3, r2
   2aa3c:	lsl	r3, r3, #2
   2aa40:	mov	r0, r3
   2aa44:	bl	3df98 <__assert_fail@plt+0x2cd28>
   2aa48:	mov	r3, r0
   2aa4c:	mov	r2, r3
   2aa50:	ldr	r3, [fp, #-16]
   2aa54:	str	r2, [r3, #28]
   2aa58:	ldr	r3, [fp, #-16]
   2aa5c:	ldr	r3, [r3, #28]
   2aa60:	cmp	r3, #0
   2aa64:	moveq	r3, #1
   2aa68:	movne	r3, #0
   2aa6c:	uxtb	r3, r3
   2aa70:	cmp	r3, #0
   2aa74:	beq	2aa80 <__assert_fail@plt+0x19810>
   2aa78:	mov	r3, #12
   2aa7c:	b	2aa90 <__assert_fail@plt+0x19820>
   2aa80:	ldr	r0, [fp, #-16]
   2aa84:	bl	2be10 <__assert_fail@plt+0x1aba0>
   2aa88:	str	r0, [fp, #-8]
   2aa8c:	ldr	r3, [fp, #-8]
   2aa90:	mov	r0, r3
   2aa94:	sub	sp, fp, #4
   2aa98:	pop	{fp, pc}
   2aa9c:			; <UNDEFINED> instruction: 0x0002acb0
   2aaa0:	andeq	sl, r2, r0, lsr lr
   2aaa4:	andeq	fp, r2, r4, lsl #3
   2aaa8:	andeq	fp, r2, r4, lsr #5
   2aaac:	andeq	fp, r2, r8, ror r3
   2aab0:	push	{fp, lr}
   2aab4:	add	fp, sp, #4
   2aab8:	sub	sp, sp, #32
   2aabc:	str	r0, [fp, #-24]	; 0xffffffe8
   2aac0:	str	r1, [fp, #-28]	; 0xffffffe4
   2aac4:	str	r2, [fp, #-32]	; 0xffffffe0
   2aac8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2aacc:	str	r3, [fp, #-8]
   2aad0:	b	2ab00 <__assert_fail@plt+0x19890>
   2aad4:	ldr	r3, [fp, #-8]
   2aad8:	ldr	r3, [r3, #4]
   2aadc:	cmp	r3, #0
   2aae0:	beq	2aaf4 <__assert_fail@plt+0x19884>
   2aae4:	ldr	r3, [fp, #-8]
   2aae8:	ldr	r3, [r3, #4]
   2aaec:	str	r3, [fp, #-8]
   2aaf0:	b	2ab00 <__assert_fail@plt+0x19890>
   2aaf4:	ldr	r3, [fp, #-8]
   2aaf8:	ldr	r3, [r3, #8]
   2aafc:	str	r3, [fp, #-8]
   2ab00:	ldr	r3, [fp, #-8]
   2ab04:	ldr	r3, [r3, #4]
   2ab08:	cmp	r3, #0
   2ab0c:	bne	2aad4 <__assert_fail@plt+0x19864>
   2ab10:	ldr	r3, [fp, #-8]
   2ab14:	ldr	r3, [r3, #8]
   2ab18:	cmp	r3, #0
   2ab1c:	bne	2aad4 <__assert_fail@plt+0x19864>
   2ab20:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2ab24:	ldr	r1, [fp, #-8]
   2ab28:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2ab2c:	blx	r3
   2ab30:	str	r0, [fp, #-12]
   2ab34:	ldr	r3, [fp, #-12]
   2ab38:	cmp	r3, #0
   2ab3c:	movne	r3, #1
   2ab40:	moveq	r3, #0
   2ab44:	uxtb	r3, r3
   2ab48:	cmp	r3, #0
   2ab4c:	beq	2ab58 <__assert_fail@plt+0x198e8>
   2ab50:	ldr	r3, [fp, #-12]
   2ab54:	b	2abb8 <__assert_fail@plt+0x19948>
   2ab58:	ldr	r3, [fp, #-8]
   2ab5c:	ldr	r3, [r3]
   2ab60:	cmp	r3, #0
   2ab64:	bne	2ab70 <__assert_fail@plt+0x19900>
   2ab68:	mov	r3, #0
   2ab6c:	b	2abb8 <__assert_fail@plt+0x19948>
   2ab70:	ldr	r3, [fp, #-8]
   2ab74:	str	r3, [fp, #-16]
   2ab78:	ldr	r3, [fp, #-8]
   2ab7c:	ldr	r3, [r3]
   2ab80:	str	r3, [fp, #-8]
   2ab84:	ldr	r3, [fp, #-8]
   2ab88:	ldr	r2, [r3, #8]
   2ab8c:	ldr	r3, [fp, #-16]
   2ab90:	cmp	r2, r3
   2ab94:	beq	2ab20 <__assert_fail@plt+0x198b0>
   2ab98:	ldr	r3, [fp, #-8]
   2ab9c:	ldr	r3, [r3, #8]
   2aba0:	cmp	r3, #0
   2aba4:	beq	2ab20 <__assert_fail@plt+0x198b0>
   2aba8:	ldr	r3, [fp, #-8]
   2abac:	ldr	r3, [r3, #8]
   2abb0:	str	r3, [fp, #-8]
   2abb4:	b	2ab00 <__assert_fail@plt+0x19890>
   2abb8:	mov	r0, r3
   2abbc:	sub	sp, fp, #4
   2abc0:	pop	{fp, pc}
   2abc4:	push	{fp, lr}
   2abc8:	add	fp, sp, #4
   2abcc:	sub	sp, sp, #32
   2abd0:	str	r0, [fp, #-24]	; 0xffffffe8
   2abd4:	str	r1, [fp, #-28]	; 0xffffffe4
   2abd8:	str	r2, [fp, #-32]	; 0xffffffe0
   2abdc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2abe0:	str	r3, [fp, #-8]
   2abe4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2abe8:	ldr	r1, [fp, #-8]
   2abec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2abf0:	blx	r3
   2abf4:	str	r0, [fp, #-16]
   2abf8:	ldr	r3, [fp, #-16]
   2abfc:	cmp	r3, #0
   2ac00:	movne	r3, #1
   2ac04:	moveq	r3, #0
   2ac08:	uxtb	r3, r3
   2ac0c:	cmp	r3, #0
   2ac10:	beq	2ac1c <__assert_fail@plt+0x199ac>
   2ac14:	ldr	r3, [fp, #-16]
   2ac18:	b	2aca4 <__assert_fail@plt+0x19a34>
   2ac1c:	ldr	r3, [fp, #-8]
   2ac20:	ldr	r3, [r3, #4]
   2ac24:	cmp	r3, #0
   2ac28:	beq	2ac3c <__assert_fail@plt+0x199cc>
   2ac2c:	ldr	r3, [fp, #-8]
   2ac30:	ldr	r3, [r3, #4]
   2ac34:	str	r3, [fp, #-8]
   2ac38:	b	2abe4 <__assert_fail@plt+0x19974>
   2ac3c:	mov	r3, #0
   2ac40:	str	r3, [fp, #-12]
   2ac44:	b	2ac70 <__assert_fail@plt+0x19a00>
   2ac48:	ldr	r3, [fp, #-8]
   2ac4c:	str	r3, [fp, #-12]
   2ac50:	ldr	r3, [fp, #-8]
   2ac54:	ldr	r3, [r3]
   2ac58:	str	r3, [fp, #-8]
   2ac5c:	ldr	r3, [fp, #-8]
   2ac60:	cmp	r3, #0
   2ac64:	bne	2ac70 <__assert_fail@plt+0x19a00>
   2ac68:	mov	r3, #0
   2ac6c:	b	2aca4 <__assert_fail@plt+0x19a34>
   2ac70:	ldr	r3, [fp, #-8]
   2ac74:	ldr	r2, [r3, #8]
   2ac78:	ldr	r3, [fp, #-12]
   2ac7c:	cmp	r2, r3
   2ac80:	beq	2ac48 <__assert_fail@plt+0x199d8>
   2ac84:	ldr	r3, [fp, #-8]
   2ac88:	ldr	r3, [r3, #8]
   2ac8c:	cmp	r3, #0
   2ac90:	beq	2ac48 <__assert_fail@plt+0x199d8>
   2ac94:	ldr	r3, [fp, #-8]
   2ac98:	ldr	r3, [r3, #8]
   2ac9c:	str	r3, [fp, #-8]
   2aca0:	b	2abe4 <__assert_fail@plt+0x19974>
   2aca4:	mov	r0, r3
   2aca8:	sub	sp, fp, #4
   2acac:	pop	{fp, pc}
   2acb0:	push	{fp}		; (str fp, [sp, #-4]!)
   2acb4:	add	fp, sp, #0
   2acb8:	sub	sp, sp, #28
   2acbc:	str	r0, [fp, #-24]	; 0xffffffe8
   2acc0:	str	r1, [fp, #-28]	; 0xffffffe4
   2acc4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2acc8:	str	r3, [fp, #-8]
   2accc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2acd0:	ldrb	r3, [r3, #24]
   2acd4:	cmp	r3, #4
   2acd8:	bne	2ad40 <__assert_fail@plt+0x19ad0>
   2acdc:	ldr	r3, [fp, #-8]
   2ace0:	ldr	r3, [r3, #132]	; 0x84
   2ace4:	cmp	r3, #0
   2ace8:	beq	2ad40 <__assert_fail@plt+0x19ad0>
   2acec:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2acf0:	ldr	r3, [r3, #20]
   2acf4:	str	r3, [fp, #-12]
   2acf8:	ldr	r3, [fp, #-8]
   2acfc:	ldr	r2, [r3, #132]	; 0x84
   2ad00:	ldr	r3, [fp, #-12]
   2ad04:	lsl	r3, r3, #2
   2ad08:	add	r3, r2, r3
   2ad0c:	ldr	r2, [r3]
   2ad10:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2ad14:	str	r2, [r3, #20]
   2ad18:	ldr	r3, [fp, #-8]
   2ad1c:	ldr	r3, [r3, #80]	; 0x50
   2ad20:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2ad24:	ldr	r2, [r2, #20]
   2ad28:	mov	r1, #1
   2ad2c:	lsl	r2, r1, r2
   2ad30:	orr	r2, r3, r2
   2ad34:	ldr	r3, [fp, #-8]
   2ad38:	str	r2, [r3, #80]	; 0x50
   2ad3c:	b	2ae1c <__assert_fail@plt+0x19bac>
   2ad40:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2ad44:	ldrb	r3, [r3, #24]
   2ad48:	cmp	r3, #17
   2ad4c:	bne	2ae1c <__assert_fail@plt+0x19bac>
   2ad50:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2ad54:	ldr	r3, [r3, #4]
   2ad58:	cmp	r3, #0
   2ad5c:	beq	2ae1c <__assert_fail@plt+0x19bac>
   2ad60:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2ad64:	ldr	r3, [r3, #4]
   2ad68:	ldrb	r3, [r3, #24]
   2ad6c:	cmp	r3, #17
   2ad70:	bne	2ae1c <__assert_fail@plt+0x19bac>
   2ad74:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2ad78:	ldr	r3, [r3, #4]
   2ad7c:	ldr	r3, [r3, #20]
   2ad80:	str	r3, [fp, #-16]
   2ad84:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2ad88:	ldr	r3, [r3, #4]
   2ad8c:	ldr	r2, [r3, #4]
   2ad90:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2ad94:	str	r2, [r3, #4]
   2ad98:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2ad9c:	ldr	r3, [r3, #4]
   2ada0:	cmp	r3, #0
   2ada4:	beq	2adb8 <__assert_fail@plt+0x19b48>
   2ada8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2adac:	ldr	r3, [r3, #4]
   2adb0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2adb4:	str	r2, [r3]
   2adb8:	ldr	r3, [fp, #-8]
   2adbc:	ldr	r2, [r3, #132]	; 0x84
   2adc0:	ldr	r3, [fp, #-16]
   2adc4:	lsl	r3, r3, #2
   2adc8:	add	r3, r2, r3
   2adcc:	ldr	r2, [fp, #-8]
   2add0:	ldr	r1, [r2, #132]	; 0x84
   2add4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2add8:	ldr	r2, [r2, #20]
   2addc:	lsl	r2, r2, #2
   2ade0:	add	r2, r1, r2
   2ade4:	ldr	r2, [r2]
   2ade8:	str	r2, [r3]
   2adec:	ldr	r3, [fp, #-16]
   2adf0:	cmp	r3, #31
   2adf4:	bgt	2ae1c <__assert_fail@plt+0x19bac>
   2adf8:	ldr	r3, [fp, #-8]
   2adfc:	ldr	r2, [r3, #80]	; 0x50
   2ae00:	mov	r1, #1
   2ae04:	ldr	r3, [fp, #-16]
   2ae08:	lsl	r3, r1, r3
   2ae0c:	mvn	r3, r3
   2ae10:	and	r2, r2, r3
   2ae14:	ldr	r3, [fp, #-8]
   2ae18:	str	r2, [r3, #80]	; 0x50
   2ae1c:	mov	r3, #0
   2ae20:	mov	r0, r3
   2ae24:	add	sp, fp, #0
   2ae28:	pop	{fp}		; (ldr fp, [sp], #4)
   2ae2c:	bx	lr
   2ae30:	push	{fp, lr}
   2ae34:	add	fp, sp, #4
   2ae38:	sub	sp, sp, #16
   2ae3c:	str	r0, [fp, #-16]
   2ae40:	str	r1, [fp, #-20]	; 0xffffffec
   2ae44:	ldr	r3, [fp, #-16]
   2ae48:	str	r3, [fp, #-8]
   2ae4c:	mov	r3, #0
   2ae50:	str	r3, [fp, #-12]
   2ae54:	ldr	r3, [fp, #-20]	; 0xffffffec
   2ae58:	ldr	r3, [r3, #4]
   2ae5c:	cmp	r3, #0
   2ae60:	beq	2aebc <__assert_fail@plt+0x19c4c>
   2ae64:	ldr	r3, [fp, #-20]	; 0xffffffec
   2ae68:	ldr	r3, [r3, #4]
   2ae6c:	ldrb	r3, [r3, #24]
   2ae70:	cmp	r3, #17
   2ae74:	bne	2aebc <__assert_fail@plt+0x19c4c>
   2ae78:	ldr	r3, [fp, #-20]	; 0xffffffec
   2ae7c:	ldr	r2, [r3, #4]
   2ae80:	sub	r3, fp, #12
   2ae84:	ldr	r1, [fp, #-8]
   2ae88:	mov	r0, r3
   2ae8c:	bl	2af34 <__assert_fail@plt+0x19cc4>
   2ae90:	mov	r2, r0
   2ae94:	ldr	r3, [fp, #-20]	; 0xffffffec
   2ae98:	str	r2, [r3, #4]
   2ae9c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2aea0:	ldr	r3, [r3, #4]
   2aea4:	cmp	r3, #0
   2aea8:	beq	2aebc <__assert_fail@plt+0x19c4c>
   2aeac:	ldr	r3, [fp, #-20]	; 0xffffffec
   2aeb0:	ldr	r3, [r3, #4]
   2aeb4:	ldr	r2, [fp, #-20]	; 0xffffffec
   2aeb8:	str	r2, [r3]
   2aebc:	ldr	r3, [fp, #-20]	; 0xffffffec
   2aec0:	ldr	r3, [r3, #8]
   2aec4:	cmp	r3, #0
   2aec8:	beq	2af24 <__assert_fail@plt+0x19cb4>
   2aecc:	ldr	r3, [fp, #-20]	; 0xffffffec
   2aed0:	ldr	r3, [r3, #8]
   2aed4:	ldrb	r3, [r3, #24]
   2aed8:	cmp	r3, #17
   2aedc:	bne	2af24 <__assert_fail@plt+0x19cb4>
   2aee0:	ldr	r3, [fp, #-20]	; 0xffffffec
   2aee4:	ldr	r2, [r3, #8]
   2aee8:	sub	r3, fp, #12
   2aeec:	ldr	r1, [fp, #-8]
   2aef0:	mov	r0, r3
   2aef4:	bl	2af34 <__assert_fail@plt+0x19cc4>
   2aef8:	mov	r2, r0
   2aefc:	ldr	r3, [fp, #-20]	; 0xffffffec
   2af00:	str	r2, [r3, #8]
   2af04:	ldr	r3, [fp, #-20]	; 0xffffffec
   2af08:	ldr	r3, [r3, #8]
   2af0c:	cmp	r3, #0
   2af10:	beq	2af24 <__assert_fail@plt+0x19cb4>
   2af14:	ldr	r3, [fp, #-20]	; 0xffffffec
   2af18:	ldr	r3, [r3, #8]
   2af1c:	ldr	r2, [fp, #-20]	; 0xffffffec
   2af20:	str	r2, [r3]
   2af24:	ldr	r3, [fp, #-12]
   2af28:	mov	r0, r3
   2af2c:	sub	sp, fp, #4
   2af30:	pop	{fp, pc}
   2af34:	push	{fp, lr}
   2af38:	add	fp, sp, #4
   2af3c:	sub	sp, sp, #40	; 0x28
   2af40:	str	r0, [fp, #-32]	; 0xffffffe0
   2af44:	str	r1, [fp, #-36]	; 0xffffffdc
   2af48:	str	r2, [fp, #-40]	; 0xffffffd8
   2af4c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2af50:	ldr	r3, [r3]
   2af54:	str	r3, [fp, #-8]
   2af58:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2af5c:	ldr	r3, [r3, #4]
   2af60:	str	r3, [fp, #-12]
   2af64:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2af68:	ldrb	r3, [r3, #28]
   2af6c:	and	r3, r3, #16
   2af70:	uxtb	r3, r3
   2af74:	cmp	r3, #0
   2af78:	beq	2afc8 <__assert_fail@plt+0x19d58>
   2af7c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2af80:	ldr	r3, [r3, #4]
   2af84:	cmp	r3, #0
   2af88:	beq	2afc8 <__assert_fail@plt+0x19d58>
   2af8c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2af90:	ldr	r3, [r3, #20]
   2af94:	cmp	r3, #31
   2af98:	bgt	2afbc <__assert_fail@plt+0x19d4c>
   2af9c:	ldr	r3, [fp, #-8]
   2afa0:	ldr	r2, [r3, #80]	; 0x50
   2afa4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2afa8:	ldr	r3, [r3, #20]
   2afac:	lsr	r3, r2, r3
   2afb0:	and	r3, r3, #1
   2afb4:	cmp	r3, #0
   2afb8:	bne	2afc8 <__assert_fail@plt+0x19d58>
   2afbc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2afc0:	ldr	r3, [r3, #4]
   2afc4:	b	2b178 <__assert_fail@plt+0x19f08>
   2afc8:	mov	r3, #8
   2afcc:	mov	r2, #0
   2afd0:	mov	r1, #0
   2afd4:	ldr	r0, [fp, #-8]
   2afd8:	bl	3113c <__assert_fail@plt+0x1fecc>
   2afdc:	str	r0, [fp, #-16]
   2afe0:	mov	r3, #9
   2afe4:	mov	r2, #0
   2afe8:	mov	r1, #0
   2afec:	ldr	r0, [fp, #-8]
   2aff0:	bl	3113c <__assert_fail@plt+0x1fecc>
   2aff4:	str	r0, [fp, #-20]	; 0xffffffec
   2aff8:	ldr	r3, [fp, #-12]
   2affc:	cmp	r3, #0
   2b000:	beq	2b020 <__assert_fail@plt+0x19db0>
   2b004:	mov	r3, #16
   2b008:	ldr	r2, [fp, #-20]	; 0xffffffec
   2b00c:	ldr	r1, [fp, #-12]
   2b010:	ldr	r0, [fp, #-8]
   2b014:	bl	3113c <__assert_fail@plt+0x1fecc>
   2b018:	mov	r3, r0
   2b01c:	b	2b024 <__assert_fail@plt+0x19db4>
   2b020:	ldr	r3, [fp, #-20]	; 0xffffffec
   2b024:	str	r3, [fp, #-24]	; 0xffffffe8
   2b028:	mov	r3, #16
   2b02c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2b030:	ldr	r1, [fp, #-16]
   2b034:	ldr	r0, [fp, #-8]
   2b038:	bl	3113c <__assert_fail@plt+0x1fecc>
   2b03c:	str	r0, [fp, #-28]	; 0xffffffe4
   2b040:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2b044:	cmp	r3, #0
   2b048:	moveq	r3, #1
   2b04c:	movne	r3, #0
   2b050:	uxtb	r3, r3
   2b054:	cmp	r3, #0
   2b058:	bne	2b078 <__assert_fail@plt+0x19e08>
   2b05c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2b060:	cmp	r3, #0
   2b064:	moveq	r3, #1
   2b068:	movne	r3, #0
   2b06c:	uxtb	r3, r3
   2b070:	cmp	r3, #0
   2b074:	beq	2b080 <__assert_fail@plt+0x19e10>
   2b078:	mov	r3, #1
   2b07c:	b	2b084 <__assert_fail@plt+0x19e14>
   2b080:	mov	r3, #0
   2b084:	cmp	r3, #0
   2b088:	bne	2b0a8 <__assert_fail@plt+0x19e38>
   2b08c:	ldr	r3, [fp, #-16]
   2b090:	cmp	r3, #0
   2b094:	moveq	r3, #1
   2b098:	movne	r3, #0
   2b09c:	uxtb	r3, r3
   2b0a0:	cmp	r3, #0
   2b0a4:	beq	2b0b0 <__assert_fail@plt+0x19e40>
   2b0a8:	mov	r3, #1
   2b0ac:	b	2b0b4 <__assert_fail@plt+0x19e44>
   2b0b0:	mov	r3, #0
   2b0b4:	cmp	r3, #0
   2b0b8:	bne	2b0d8 <__assert_fail@plt+0x19e68>
   2b0bc:	ldr	r3, [fp, #-20]	; 0xffffffec
   2b0c0:	cmp	r3, #0
   2b0c4:	moveq	r3, #1
   2b0c8:	movne	r3, #0
   2b0cc:	uxtb	r3, r3
   2b0d0:	cmp	r3, #0
   2b0d4:	beq	2b0ec <__assert_fail@plt+0x19e7c>
   2b0d8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2b0dc:	mov	r2, #12
   2b0e0:	str	r2, [r3]
   2b0e4:	mov	r3, #0
   2b0e8:	b	2b178 <__assert_fail@plt+0x19f08>
   2b0ec:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2b0f0:	ldr	r2, [r3, #20]
   2b0f4:	ldr	r3, [fp, #-20]	; 0xffffffec
   2b0f8:	str	r2, [r3, #20]
   2b0fc:	ldr	r3, [fp, #-20]	; 0xffffffec
   2b100:	ldr	r2, [r3, #20]
   2b104:	ldr	r3, [fp, #-16]
   2b108:	str	r2, [r3, #20]
   2b10c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2b110:	ldrb	r3, [r3, #26]
   2b114:	lsr	r3, r3, #3
   2b118:	and	r3, r3, #1
   2b11c:	uxtb	r3, r3
   2b120:	ldr	r1, [fp, #-20]	; 0xffffffec
   2b124:	ldrb	r2, [r1, #26]
   2b128:	and	r3, r3, #1
   2b12c:	bic	r2, r2, #8
   2b130:	lsl	r3, r3, #3
   2b134:	orr	r3, r3, r2
   2b138:	mov	r2, r3
   2b13c:	strb	r2, [r1, #26]
   2b140:	ldr	r3, [fp, #-20]	; 0xffffffec
   2b144:	ldrb	r3, [r3, #26]
   2b148:	lsr	r3, r3, #3
   2b14c:	and	r3, r3, #1
   2b150:	uxtb	r3, r3
   2b154:	ldr	r1, [fp, #-16]
   2b158:	ldrb	r2, [r1, #26]
   2b15c:	and	r3, r3, #1
   2b160:	bic	r2, r2, #8
   2b164:	lsl	r3, r3, #3
   2b168:	orr	r3, r3, r2
   2b16c:	mov	r2, r3
   2b170:	strb	r2, [r1, #26]
   2b174:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2b178:	mov	r0, r3
   2b17c:	sub	sp, fp, #4
   2b180:	pop	{fp, pc}
   2b184:	push	{fp, lr}
   2b188:	add	fp, sp, #4
   2b18c:	sub	sp, sp, #16
   2b190:	str	r0, [fp, #-16]
   2b194:	str	r1, [fp, #-20]	; 0xffffffec
   2b198:	ldr	r3, [fp, #-16]
   2b19c:	str	r3, [fp, #-8]
   2b1a0:	ldr	r3, [fp, #-20]	; 0xffffffec
   2b1a4:	ldrb	r3, [r3, #24]
   2b1a8:	cmp	r3, #16
   2b1ac:	bne	2b1dc <__assert_fail@plt+0x19f6c>
   2b1b0:	ldr	r3, [fp, #-20]	; 0xffffffec
   2b1b4:	ldr	r3, [r3, #4]
   2b1b8:	ldr	r2, [r3, #12]
   2b1bc:	ldr	r3, [fp, #-20]	; 0xffffffec
   2b1c0:	str	r2, [r3, #12]
   2b1c4:	ldr	r3, [fp, #-20]	; 0xffffffec
   2b1c8:	ldr	r3, [r3, #4]
   2b1cc:	ldr	r2, [r3, #28]
   2b1d0:	ldr	r3, [fp, #-20]	; 0xffffffec
   2b1d4:	str	r2, [r3, #28]
   2b1d8:	b	2b290 <__assert_fail@plt+0x1a020>
   2b1dc:	ldr	r3, [fp, #-20]	; 0xffffffec
   2b1e0:	ldr	r2, [fp, #-20]	; 0xffffffec
   2b1e4:	str	r2, [r3, #12]
   2b1e8:	ldr	r3, [fp, #-20]	; 0xffffffec
   2b1ec:	add	r3, r3, #20
   2b1f0:	ldm	r3, {r1, r2}
   2b1f4:	ldr	r0, [fp, #-8]
   2b1f8:	bl	2743c <__assert_fail@plt+0x161cc>
   2b1fc:	mov	r2, r0
   2b200:	ldr	r3, [fp, #-20]	; 0xffffffec
   2b204:	str	r2, [r3, #28]
   2b208:	ldr	r3, [fp, #-20]	; 0xffffffec
   2b20c:	ldr	r3, [r3, #28]
   2b210:	cmn	r3, #1
   2b214:	moveq	r3, #1
   2b218:	movne	r3, #0
   2b21c:	uxtb	r3, r3
   2b220:	cmp	r3, #0
   2b224:	beq	2b230 <__assert_fail@plt+0x19fc0>
   2b228:	mov	r3, #12
   2b22c:	b	2b294 <__assert_fail@plt+0x1a024>
   2b230:	ldr	r3, [fp, #-20]	; 0xffffffec
   2b234:	ldrb	r3, [r3, #24]
   2b238:	cmp	r3, #12
   2b23c:	bne	2b290 <__assert_fail@plt+0x1a020>
   2b240:	ldr	r3, [fp, #-8]
   2b244:	ldr	r2, [r3]
   2b248:	ldr	r3, [fp, #-20]	; 0xffffffec
   2b24c:	ldr	r3, [r3, #28]
   2b250:	lsl	r3, r3, #3
   2b254:	add	r0, r2, r3
   2b258:	ldr	r3, [fp, #-20]	; 0xffffffec
   2b25c:	ldr	r3, [r3, #20]
   2b260:	uxth	r3, r3
   2b264:	lsl	r3, r3, #22
   2b268:	lsr	r3, r3, #22
   2b26c:	uxth	r1, r3
   2b270:	ldr	r2, [r0, #4]
   2b274:	ldr	r3, [pc, #36]	; 2b2a0 <__assert_fail@plt+0x1a030>
   2b278:	and	r1, r1, r3
   2b27c:	lsl	r3, r3, #8
   2b280:	bic	r3, r2, r3
   2b284:	lsl	r1, r1, #8
   2b288:	orr	r2, r1, r3
   2b28c:	str	r2, [r0, #4]
   2b290:	mov	r3, #0
   2b294:	mov	r0, r3
   2b298:	sub	sp, fp, #4
   2b29c:	pop	{fp, pc}
   2b2a0:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   2b2a4:	push	{fp}		; (str fp, [sp, #-4]!)
   2b2a8:	add	fp, sp, #0
   2b2ac:	sub	sp, sp, #12
   2b2b0:	str	r0, [fp, #-8]
   2b2b4:	str	r1, [fp, #-12]
   2b2b8:	ldr	r3, [fp, #-12]
   2b2bc:	ldrb	r3, [r3, #24]
   2b2c0:	cmp	r3, #11
   2b2c4:	beq	2b2d4 <__assert_fail@plt+0x1a064>
   2b2c8:	cmp	r3, #16
   2b2cc:	beq	2b2e8 <__assert_fail@plt+0x1a078>
   2b2d0:	b	2b318 <__assert_fail@plt+0x1a0a8>
   2b2d4:	ldr	r3, [fp, #-12]
   2b2d8:	ldr	r3, [r3, #4]
   2b2dc:	ldr	r2, [fp, #-12]
   2b2e0:	str	r2, [r3, #16]
   2b2e4:	b	2b364 <__assert_fail@plt+0x1a0f4>
   2b2e8:	ldr	r3, [fp, #-12]
   2b2ec:	ldr	r3, [r3, #4]
   2b2f0:	ldr	r2, [fp, #-12]
   2b2f4:	ldr	r2, [r2, #8]
   2b2f8:	ldr	r2, [r2, #12]
   2b2fc:	str	r2, [r3, #16]
   2b300:	ldr	r3, [fp, #-12]
   2b304:	ldr	r3, [r3, #8]
   2b308:	ldr	r2, [fp, #-12]
   2b30c:	ldr	r2, [r2, #16]
   2b310:	str	r2, [r3, #16]
   2b314:	b	2b364 <__assert_fail@plt+0x1a0f4>
   2b318:	ldr	r3, [fp, #-12]
   2b31c:	ldr	r3, [r3, #4]
   2b320:	cmp	r3, #0
   2b324:	beq	2b33c <__assert_fail@plt+0x1a0cc>
   2b328:	ldr	r3, [fp, #-12]
   2b32c:	ldr	r3, [r3, #4]
   2b330:	ldr	r2, [fp, #-12]
   2b334:	ldr	r2, [r2, #16]
   2b338:	str	r2, [r3, #16]
   2b33c:	ldr	r3, [fp, #-12]
   2b340:	ldr	r3, [r3, #8]
   2b344:	cmp	r3, #0
   2b348:	beq	2b360 <__assert_fail@plt+0x1a0f0>
   2b34c:	ldr	r3, [fp, #-12]
   2b350:	ldr	r3, [r3, #8]
   2b354:	ldr	r2, [fp, #-12]
   2b358:	ldr	r2, [r2, #16]
   2b35c:	str	r2, [r3, #16]
   2b360:	nop			; (mov r0, r0)
   2b364:	mov	r3, #0
   2b368:	mov	r0, r3
   2b36c:	add	sp, fp, #0
   2b370:	pop	{fp}		; (ldr fp, [sp], #4)
   2b374:	bx	lr
   2b378:	push	{fp, lr}
   2b37c:	add	fp, sp, #4
   2b380:	sub	sp, sp, #32
   2b384:	str	r0, [fp, #-32]	; 0xffffffe0
   2b388:	str	r1, [fp, #-36]	; 0xffffffdc
   2b38c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2b390:	str	r3, [fp, #-20]	; 0xffffffec
   2b394:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2b398:	ldr	r3, [r3, #28]
   2b39c:	str	r3, [fp, #-24]	; 0xffffffe8
   2b3a0:	mov	r3, #0
   2b3a4:	str	r3, [fp, #-8]
   2b3a8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2b3ac:	ldrb	r3, [r3, #24]
   2b3b0:	sub	r3, r3, #2
   2b3b4:	cmp	r3, #14
   2b3b8:	ldrls	pc, [pc, r3, lsl #2]
   2b3bc:	b	2b590 <__assert_fail@plt+0x1a320>
   2b3c0:	strdeq	fp, [r2], -ip
   2b3c4:	muleq	r2, r0, r5
   2b3c8:	andeq	fp, r2, r4, lsl r5
   2b3cc:	muleq	r2, r0, r5
   2b3d0:	muleq	r2, r0, r5
   2b3d4:	muleq	r2, r0, r5
   2b3d8:	ldrdeq	fp, [r2], -r4
   2b3dc:	ldrdeq	fp, [r2], -r4
   2b3e0:	andeq	fp, r2, ip, lsl #8
   2b3e4:	andeq	fp, r2, ip, lsl #8
   2b3e8:	ldrdeq	fp, [r2], -r4
   2b3ec:	muleq	r2, r0, r5
   2b3f0:	muleq	r2, r0, r5
   2b3f4:	muleq	r2, r0, r5
   2b3f8:	andeq	fp, r2, r8, asr #11
   2b3fc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2b400:	ldr	r3, [r3, #16]
   2b404:	cmp	r3, #0
   2b408:	b	2b5d4 <__assert_fail@plt+0x1a364>
   2b40c:	ldr	r2, [fp, #-20]	; 0xffffffec
   2b410:	ldrb	r3, [r2, #88]	; 0x58
   2b414:	orr	r3, r3, #1
   2b418:	strb	r3, [r2, #88]	; 0x58
   2b41c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2b420:	ldr	r3, [r3, #4]
   2b424:	cmp	r3, #0
   2b428:	beq	2b444 <__assert_fail@plt+0x1a1d4>
   2b42c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2b430:	ldr	r3, [r3, #4]
   2b434:	ldr	r3, [r3, #12]
   2b438:	ldr	r3, [r3, #28]
   2b43c:	str	r3, [fp, #-12]
   2b440:	b	2b454 <__assert_fail@plt+0x1a1e4>
   2b444:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2b448:	ldr	r3, [r3, #16]
   2b44c:	ldr	r3, [r3, #28]
   2b450:	str	r3, [fp, #-12]
   2b454:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2b458:	ldr	r3, [r3, #8]
   2b45c:	cmp	r3, #0
   2b460:	beq	2b47c <__assert_fail@plt+0x1a20c>
   2b464:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2b468:	ldr	r3, [r3, #8]
   2b46c:	ldr	r3, [r3, #12]
   2b470:	ldr	r3, [r3, #28]
   2b474:	str	r3, [fp, #-16]
   2b478:	b	2b48c <__assert_fail@plt+0x1a21c>
   2b47c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2b480:	ldr	r3, [r3, #16]
   2b484:	ldr	r3, [r3, #28]
   2b488:	str	r3, [fp, #-16]
   2b48c:	ldr	r3, [fp, #-12]
   2b490:	cmp	r3, #0
   2b494:	ldr	r3, [fp, #-16]
   2b498:	cmp	r3, #0
   2b49c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2b4a0:	ldr	r1, [r3, #20]
   2b4a4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2b4a8:	mov	r3, r2
   2b4ac:	lsl	r3, r3, #1
   2b4b0:	add	r3, r3, r2
   2b4b4:	lsl	r3, r3, #2
   2b4b8:	add	r3, r1, r3
   2b4bc:	ldr	r2, [fp, #-16]
   2b4c0:	ldr	r1, [fp, #-12]
   2b4c4:	mov	r0, r3
   2b4c8:	bl	26024 <__assert_fail@plt+0x14db4>
   2b4cc:	str	r0, [fp, #-8]
   2b4d0:	b	2b5d4 <__assert_fail@plt+0x1a364>
   2b4d4:	ldr	r3, [fp, #-20]	; 0xffffffec
   2b4d8:	ldr	r1, [r3, #20]
   2b4dc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2b4e0:	mov	r3, r2
   2b4e4:	lsl	r3, r3, #1
   2b4e8:	add	r3, r3, r2
   2b4ec:	lsl	r3, r3, #2
   2b4f0:	add	r2, r1, r3
   2b4f4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2b4f8:	ldr	r3, [r3, #16]
   2b4fc:	ldr	r3, [r3, #28]
   2b500:	mov	r1, r3
   2b504:	mov	r0, r2
   2b508:	bl	25f7c <__assert_fail@plt+0x14d0c>
   2b50c:	str	r0, [fp, #-8]
   2b510:	b	2b5d4 <__assert_fail@plt+0x1a364>
   2b514:	ldr	r3, [fp, #-20]	; 0xffffffec
   2b518:	ldr	r2, [r3, #12]
   2b51c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2b520:	lsl	r3, r3, #2
   2b524:	add	r3, r2, r3
   2b528:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2b52c:	ldr	r2, [r2, #16]
   2b530:	ldr	r2, [r2, #28]
   2b534:	str	r2, [r3]
   2b538:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2b53c:	ldrb	r3, [r3, #24]
   2b540:	cmp	r3, #4
   2b544:	bne	2b5d0 <__assert_fail@plt+0x1a360>
   2b548:	ldr	r3, [fp, #-20]	; 0xffffffec
   2b54c:	ldr	r1, [r3, #20]
   2b550:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2b554:	mov	r3, r2
   2b558:	lsl	r3, r3, #1
   2b55c:	add	r3, r3, r2
   2b560:	lsl	r3, r3, #2
   2b564:	add	r0, r1, r3
   2b568:	ldr	r3, [fp, #-20]	; 0xffffffec
   2b56c:	ldr	r2, [r3, #12]
   2b570:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2b574:	lsl	r3, r3, #2
   2b578:	add	r3, r2, r3
   2b57c:	ldr	r3, [r3]
   2b580:	mov	r1, r3
   2b584:	bl	25f7c <__assert_fail@plt+0x14d0c>
   2b588:	str	r0, [fp, #-8]
   2b58c:	b	2b5d0 <__assert_fail@plt+0x1a360>
   2b590:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2b594:	ldrb	r3, [r3, #24]
   2b598:	and	r3, r3, #8
   2b59c:	cmp	r3, #0
   2b5a0:	ldr	r3, [fp, #-20]	; 0xffffffec
   2b5a4:	ldr	r2, [r3, #12]
   2b5a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2b5ac:	lsl	r3, r3, #2
   2b5b0:	add	r3, r2, r3
   2b5b4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2b5b8:	ldr	r2, [r2, #16]
   2b5bc:	ldr	r2, [r2, #28]
   2b5c0:	str	r2, [r3]
   2b5c4:	b	2b5d4 <__assert_fail@plt+0x1a364>
   2b5c8:	nop			; (mov r0, r0)
   2b5cc:	b	2b5d4 <__assert_fail@plt+0x1a364>
   2b5d0:	nop			; (mov r0, r0)
   2b5d4:	ldr	r3, [fp, #-8]
   2b5d8:	mov	r0, r3
   2b5dc:	sub	sp, fp, #4
   2b5e0:	pop	{fp, pc}
   2b5e4:	push	{fp, lr}
   2b5e8:	add	fp, sp, #4
   2b5ec:	sub	sp, sp, #56	; 0x38
   2b5f0:	str	r0, [fp, #-40]	; 0xffffffd8
   2b5f4:	str	r1, [fp, #-44]	; 0xffffffd4
   2b5f8:	str	r2, [fp, #-48]	; 0xffffffd0
   2b5fc:	str	r3, [fp, #-52]	; 0xffffffcc
   2b600:	ldr	r3, [fp, #4]
   2b604:	str	r3, [fp, #-16]
   2b608:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2b60c:	str	r3, [fp, #-8]
   2b610:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2b614:	str	r3, [fp, #-12]
   2b618:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2b61c:	ldr	r2, [r3]
   2b620:	ldr	r3, [fp, #-8]
   2b624:	lsl	r3, r3, #3
   2b628:	add	r3, r2, r3
   2b62c:	ldrb	r3, [r3, #4]
   2b630:	cmp	r3, #4
   2b634:	bne	2b734 <__assert_fail@plt+0x1a4c4>
   2b638:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2b63c:	ldr	r2, [r3, #12]
   2b640:	ldr	r3, [fp, #-8]
   2b644:	lsl	r3, r3, #2
   2b648:	add	r3, r2, r3
   2b64c:	ldr	r3, [r3]
   2b650:	str	r3, [fp, #-20]	; 0xffffffec
   2b654:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2b658:	ldr	r1, [r3, #20]
   2b65c:	ldr	r2, [fp, #-12]
   2b660:	mov	r3, r2
   2b664:	lsl	r3, r3, #1
   2b668:	add	r3, r3, r2
   2b66c:	lsl	r3, r3, #2
   2b670:	add	r3, r1, r3
   2b674:	mov	r2, #0
   2b678:	str	r2, [r3, #4]
   2b67c:	ldr	r2, [fp, #-16]
   2b680:	ldr	r1, [fp, #-20]	; 0xffffffec
   2b684:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2b688:	bl	2bc94 <__assert_fail@plt+0x1aa24>
   2b68c:	str	r0, [fp, #-24]	; 0xffffffe8
   2b690:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2b694:	cmn	r3, #1
   2b698:	moveq	r3, #1
   2b69c:	movne	r3, #0
   2b6a0:	uxtb	r3, r3
   2b6a4:	cmp	r3, #0
   2b6a8:	beq	2b6b4 <__assert_fail@plt+0x1a444>
   2b6ac:	mov	r3, #12
   2b6b0:	b	2bba4 <__assert_fail@plt+0x1a934>
   2b6b4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2b6b8:	ldr	r2, [r3, #12]
   2b6bc:	ldr	r3, [fp, #-12]
   2b6c0:	lsl	r3, r3, #2
   2b6c4:	add	r3, r2, r3
   2b6c8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2b6cc:	ldr	r1, [r2, #12]
   2b6d0:	ldr	r2, [fp, #-8]
   2b6d4:	lsl	r2, r2, #2
   2b6d8:	add	r2, r1, r2
   2b6dc:	ldr	r2, [r2]
   2b6e0:	str	r2, [r3]
   2b6e4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2b6e8:	ldr	r1, [r3, #20]
   2b6ec:	ldr	r2, [fp, #-12]
   2b6f0:	mov	r3, r2
   2b6f4:	lsl	r3, r3, #1
   2b6f8:	add	r3, r3, r2
   2b6fc:	lsl	r3, r3, #2
   2b700:	add	r3, r1, r3
   2b704:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2b708:	mov	r0, r3
   2b70c:	bl	26e8c <__assert_fail@plt+0x15c1c>
   2b710:	mov	r3, r0
   2b714:	strb	r3, [fp, #-25]	; 0xffffffe7
   2b718:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   2b71c:	eor	r3, r3, #1
   2b720:	uxtb	r3, r3
   2b724:	cmp	r3, #0
   2b728:	beq	2bb88 <__assert_fail@plt+0x1a918>
   2b72c:	mov	r3, #12
   2b730:	b	2bba4 <__assert_fail@plt+0x1a934>
   2b734:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2b738:	ldr	r1, [r3, #20]
   2b73c:	ldr	r2, [fp, #-8]
   2b740:	mov	r3, r2
   2b744:	lsl	r3, r3, #1
   2b748:	add	r3, r3, r2
   2b74c:	lsl	r3, r3, #2
   2b750:	add	r3, r1, r3
   2b754:	ldr	r3, [r3, #4]
   2b758:	cmp	r3, #0
   2b75c:	bne	2b794 <__assert_fail@plt+0x1a524>
   2b760:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2b764:	ldr	r2, [r3, #12]
   2b768:	ldr	r3, [fp, #-12]
   2b76c:	lsl	r3, r3, #2
   2b770:	add	r3, r2, r3
   2b774:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2b778:	ldr	r1, [r2, #12]
   2b77c:	ldr	r2, [fp, #-8]
   2b780:	lsl	r2, r2, #2
   2b784:	add	r2, r1, r2
   2b788:	ldr	r2, [r2]
   2b78c:	str	r2, [r3]
   2b790:	b	2bba0 <__assert_fail@plt+0x1a930>
   2b794:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2b798:	ldr	r1, [r3, #20]
   2b79c:	ldr	r2, [fp, #-8]
   2b7a0:	mov	r3, r2
   2b7a4:	lsl	r3, r3, #1
   2b7a8:	add	r3, r3, r2
   2b7ac:	lsl	r3, r3, #2
   2b7b0:	add	r3, r1, r3
   2b7b4:	ldr	r3, [r3, #4]
   2b7b8:	cmp	r3, #1
   2b7bc:	bne	2b944 <__assert_fail@plt+0x1a6d4>
   2b7c0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2b7c4:	ldr	r1, [r3, #20]
   2b7c8:	ldr	r2, [fp, #-8]
   2b7cc:	mov	r3, r2
   2b7d0:	lsl	r3, r3, #1
   2b7d4:	add	r3, r3, r2
   2b7d8:	lsl	r3, r3, #2
   2b7dc:	add	r3, r1, r3
   2b7e0:	ldr	r3, [r3, #8]
   2b7e4:	ldr	r3, [r3]
   2b7e8:	str	r3, [fp, #-20]	; 0xffffffec
   2b7ec:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2b7f0:	ldr	r1, [r3, #20]
   2b7f4:	ldr	r2, [fp, #-12]
   2b7f8:	mov	r3, r2
   2b7fc:	lsl	r3, r3, #1
   2b800:	add	r3, r3, r2
   2b804:	lsl	r3, r3, #2
   2b808:	add	r3, r1, r3
   2b80c:	mov	r2, #0
   2b810:	str	r2, [r3, #4]
   2b814:	ldr	r2, [fp, #-8]
   2b818:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2b81c:	cmp	r2, r3
   2b820:	bne	2b884 <__assert_fail@plt+0x1a614>
   2b824:	ldr	r2, [fp, #-12]
   2b828:	ldr	r3, [fp, #-8]
   2b82c:	cmp	r2, r3
   2b830:	beq	2b884 <__assert_fail@plt+0x1a614>
   2b834:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2b838:	ldr	r1, [r3, #20]
   2b83c:	ldr	r2, [fp, #-12]
   2b840:	mov	r3, r2
   2b844:	lsl	r3, r3, #1
   2b848:	add	r3, r3, r2
   2b84c:	lsl	r3, r3, #2
   2b850:	add	r3, r1, r3
   2b854:	ldr	r1, [fp, #-20]	; 0xffffffec
   2b858:	mov	r0, r3
   2b85c:	bl	26e8c <__assert_fail@plt+0x15c1c>
   2b860:	mov	r3, r0
   2b864:	strb	r3, [fp, #-25]	; 0xffffffe7
   2b868:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   2b86c:	eor	r3, r3, #1
   2b870:	uxtb	r3, r3
   2b874:	cmp	r3, #0
   2b878:	beq	2bb9c <__assert_fail@plt+0x1a92c>
   2b87c:	mov	r3, #12
   2b880:	b	2bba4 <__assert_fail@plt+0x1a934>
   2b884:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2b888:	ldr	r2, [r3]
   2b88c:	ldr	r3, [fp, #-8]
   2b890:	lsl	r3, r3, #3
   2b894:	add	r3, r2, r3
   2b898:	ldr	r3, [r3, #4]
   2b89c:	lsr	r3, r3, #8
   2b8a0:	lsl	r3, r3, #22
   2b8a4:	lsr	r3, r3, #22
   2b8a8:	uxth	r3, r3
   2b8ac:	mov	r2, r3
   2b8b0:	ldr	r3, [fp, #-16]
   2b8b4:	orr	r3, r3, r2
   2b8b8:	str	r3, [fp, #-16]
   2b8bc:	ldr	r2, [fp, #-16]
   2b8c0:	ldr	r1, [fp, #-20]	; 0xffffffec
   2b8c4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2b8c8:	bl	2bc94 <__assert_fail@plt+0x1aa24>
   2b8cc:	str	r0, [fp, #-24]	; 0xffffffe8
   2b8d0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2b8d4:	cmn	r3, #1
   2b8d8:	moveq	r3, #1
   2b8dc:	movne	r3, #0
   2b8e0:	uxtb	r3, r3
   2b8e4:	cmp	r3, #0
   2b8e8:	beq	2b8f4 <__assert_fail@plt+0x1a684>
   2b8ec:	mov	r3, #12
   2b8f0:	b	2bba4 <__assert_fail@plt+0x1a934>
   2b8f4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2b8f8:	ldr	r1, [r3, #20]
   2b8fc:	ldr	r2, [fp, #-12]
   2b900:	mov	r3, r2
   2b904:	lsl	r3, r3, #1
   2b908:	add	r3, r3, r2
   2b90c:	lsl	r3, r3, #2
   2b910:	add	r3, r1, r3
   2b914:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2b918:	mov	r0, r3
   2b91c:	bl	26e8c <__assert_fail@plt+0x15c1c>
   2b920:	mov	r3, r0
   2b924:	strb	r3, [fp, #-25]	; 0xffffffe7
   2b928:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   2b92c:	eor	r3, r3, #1
   2b930:	uxtb	r3, r3
   2b934:	cmp	r3, #0
   2b938:	beq	2bb88 <__assert_fail@plt+0x1a918>
   2b93c:	mov	r3, #12
   2b940:	b	2bba4 <__assert_fail@plt+0x1a934>
   2b944:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2b948:	ldr	r1, [r3, #20]
   2b94c:	ldr	r2, [fp, #-8]
   2b950:	mov	r3, r2
   2b954:	lsl	r3, r3, #1
   2b958:	add	r3, r3, r2
   2b95c:	lsl	r3, r3, #2
   2b960:	add	r3, r1, r3
   2b964:	ldr	r3, [r3, #8]
   2b968:	ldr	r3, [r3]
   2b96c:	str	r3, [fp, #-20]	; 0xffffffec
   2b970:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2b974:	ldr	r1, [r3, #20]
   2b978:	ldr	r2, [fp, #-12]
   2b97c:	mov	r3, r2
   2b980:	lsl	r3, r3, #1
   2b984:	add	r3, r3, r2
   2b988:	lsl	r3, r3, #2
   2b98c:	add	r3, r1, r3
   2b990:	mov	r2, #0
   2b994:	str	r2, [r3, #4]
   2b998:	ldr	r2, [fp, #-16]
   2b99c:	ldr	r1, [fp, #-20]	; 0xffffffec
   2b9a0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2b9a4:	bl	2bbb0 <__assert_fail@plt+0x1a940>
   2b9a8:	str	r0, [fp, #-24]	; 0xffffffe8
   2b9ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2b9b0:	cmn	r3, #1
   2b9b4:	bne	2ba84 <__assert_fail@plt+0x1a814>
   2b9b8:	ldr	r2, [fp, #-16]
   2b9bc:	ldr	r1, [fp, #-20]	; 0xffffffec
   2b9c0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2b9c4:	bl	2bc94 <__assert_fail@plt+0x1aa24>
   2b9c8:	str	r0, [fp, #-24]	; 0xffffffe8
   2b9cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2b9d0:	cmn	r3, #1
   2b9d4:	moveq	r3, #1
   2b9d8:	movne	r3, #0
   2b9dc:	uxtb	r3, r3
   2b9e0:	cmp	r3, #0
   2b9e4:	beq	2b9f0 <__assert_fail@plt+0x1a780>
   2b9e8:	mov	r3, #12
   2b9ec:	b	2bba4 <__assert_fail@plt+0x1a934>
   2b9f0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2b9f4:	ldr	r1, [r3, #20]
   2b9f8:	ldr	r2, [fp, #-12]
   2b9fc:	mov	r3, r2
   2ba00:	lsl	r3, r3, #1
   2ba04:	add	r3, r3, r2
   2ba08:	lsl	r3, r3, #2
   2ba0c:	add	r3, r1, r3
   2ba10:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2ba14:	mov	r0, r3
   2ba18:	bl	26e8c <__assert_fail@plt+0x15c1c>
   2ba1c:	mov	r3, r0
   2ba20:	strb	r3, [fp, #-25]	; 0xffffffe7
   2ba24:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   2ba28:	eor	r3, r3, #1
   2ba2c:	uxtb	r3, r3
   2ba30:	cmp	r3, #0
   2ba34:	beq	2ba40 <__assert_fail@plt+0x1a7d0>
   2ba38:	mov	r3, #12
   2ba3c:	b	2bba4 <__assert_fail@plt+0x1a934>
   2ba40:	ldr	r3, [fp, #-16]
   2ba44:	str	r3, [sp]
   2ba48:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2ba4c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2ba50:	ldr	r1, [fp, #-20]	; 0xffffffec
   2ba54:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2ba58:	bl	2b5e4 <__assert_fail@plt+0x1a374>
   2ba5c:	str	r0, [fp, #-32]	; 0xffffffe0
   2ba60:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2ba64:	cmp	r3, #0
   2ba68:	movne	r3, #1
   2ba6c:	moveq	r3, #0
   2ba70:	uxtb	r3, r3
   2ba74:	cmp	r3, #0
   2ba78:	beq	2bad4 <__assert_fail@plt+0x1a864>
   2ba7c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2ba80:	b	2bba4 <__assert_fail@plt+0x1a934>
   2ba84:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2ba88:	ldr	r1, [r3, #20]
   2ba8c:	ldr	r2, [fp, #-12]
   2ba90:	mov	r3, r2
   2ba94:	lsl	r3, r3, #1
   2ba98:	add	r3, r3, r2
   2ba9c:	lsl	r3, r3, #2
   2baa0:	add	r3, r1, r3
   2baa4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2baa8:	mov	r0, r3
   2baac:	bl	26e8c <__assert_fail@plt+0x15c1c>
   2bab0:	mov	r3, r0
   2bab4:	strb	r3, [fp, #-25]	; 0xffffffe7
   2bab8:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   2babc:	eor	r3, r3, #1
   2bac0:	uxtb	r3, r3
   2bac4:	cmp	r3, #0
   2bac8:	beq	2bad4 <__assert_fail@plt+0x1a864>
   2bacc:	mov	r3, #12
   2bad0:	b	2bba4 <__assert_fail@plt+0x1a934>
   2bad4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2bad8:	ldr	r1, [r3, #20]
   2badc:	ldr	r2, [fp, #-8]
   2bae0:	mov	r3, r2
   2bae4:	lsl	r3, r3, #1
   2bae8:	add	r3, r3, r2
   2baec:	lsl	r3, r3, #2
   2baf0:	add	r3, r1, r3
   2baf4:	ldr	r3, [r3, #8]
   2baf8:	ldr	r3, [r3, #4]
   2bafc:	str	r3, [fp, #-20]	; 0xffffffec
   2bb00:	ldr	r2, [fp, #-16]
   2bb04:	ldr	r1, [fp, #-20]	; 0xffffffec
   2bb08:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2bb0c:	bl	2bc94 <__assert_fail@plt+0x1aa24>
   2bb10:	str	r0, [fp, #-24]	; 0xffffffe8
   2bb14:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2bb18:	cmn	r3, #1
   2bb1c:	moveq	r3, #1
   2bb20:	movne	r3, #0
   2bb24:	uxtb	r3, r3
   2bb28:	cmp	r3, #0
   2bb2c:	beq	2bb38 <__assert_fail@plt+0x1a8c8>
   2bb30:	mov	r3, #12
   2bb34:	b	2bba4 <__assert_fail@plt+0x1a934>
   2bb38:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2bb3c:	ldr	r1, [r3, #20]
   2bb40:	ldr	r2, [fp, #-12]
   2bb44:	mov	r3, r2
   2bb48:	lsl	r3, r3, #1
   2bb4c:	add	r3, r3, r2
   2bb50:	lsl	r3, r3, #2
   2bb54:	add	r3, r1, r3
   2bb58:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2bb5c:	mov	r0, r3
   2bb60:	bl	26e8c <__assert_fail@plt+0x15c1c>
   2bb64:	mov	r3, r0
   2bb68:	strb	r3, [fp, #-25]	; 0xffffffe7
   2bb6c:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   2bb70:	eor	r3, r3, #1
   2bb74:	uxtb	r3, r3
   2bb78:	cmp	r3, #0
   2bb7c:	beq	2bb88 <__assert_fail@plt+0x1a918>
   2bb80:	mov	r3, #12
   2bb84:	b	2bba4 <__assert_fail@plt+0x1a934>
   2bb88:	ldr	r3, [fp, #-20]	; 0xffffffec
   2bb8c:	str	r3, [fp, #-8]
   2bb90:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2bb94:	str	r3, [fp, #-12]
   2bb98:	b	2b618 <__assert_fail@plt+0x1a3a8>
   2bb9c:	nop			; (mov r0, r0)
   2bba0:	mov	r3, #0
   2bba4:	mov	r0, r3
   2bba8:	sub	sp, fp, #4
   2bbac:	pop	{fp, pc}
   2bbb0:	push	{fp}		; (str fp, [sp, #-4]!)
   2bbb4:	add	fp, sp, #0
   2bbb8:	sub	sp, sp, #28
   2bbbc:	str	r0, [fp, #-16]
   2bbc0:	str	r1, [fp, #-20]	; 0xffffffec
   2bbc4:	str	r2, [fp, #-24]	; 0xffffffe8
   2bbc8:	ldr	r3, [fp, #-16]
   2bbcc:	ldr	r3, [r3, #8]
   2bbd0:	sub	r3, r3, #1
   2bbd4:	str	r3, [fp, #-8]
   2bbd8:	b	2bc4c <__assert_fail@plt+0x1a9dc>
   2bbdc:	ldr	r3, [fp, #-16]
   2bbe0:	ldr	r2, [r3, #16]
   2bbe4:	ldr	r3, [fp, #-8]
   2bbe8:	lsl	r3, r3, #2
   2bbec:	add	r3, r2, r3
   2bbf0:	ldr	r2, [r3]
   2bbf4:	ldr	r3, [fp, #-20]	; 0xffffffec
   2bbf8:	cmp	r2, r3
   2bbfc:	bne	2bc40 <__assert_fail@plt+0x1a9d0>
   2bc00:	ldr	r3, [fp, #-16]
   2bc04:	ldr	r2, [r3]
   2bc08:	ldr	r3, [fp, #-8]
   2bc0c:	lsl	r3, r3, #3
   2bc10:	add	r3, r2, r3
   2bc14:	ldr	r3, [r3, #4]
   2bc18:	lsr	r3, r3, #8
   2bc1c:	lsl	r3, r3, #22
   2bc20:	lsr	r3, r3, #22
   2bc24:	uxth	r3, r3
   2bc28:	mov	r2, r3
   2bc2c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2bc30:	cmp	r2, r3
   2bc34:	bne	2bc40 <__assert_fail@plt+0x1a9d0>
   2bc38:	ldr	r3, [fp, #-8]
   2bc3c:	b	2bc84 <__assert_fail@plt+0x1aa14>
   2bc40:	ldr	r3, [fp, #-8]
   2bc44:	sub	r3, r3, #1
   2bc48:	str	r3, [fp, #-8]
   2bc4c:	ldr	r3, [fp, #-16]
   2bc50:	ldr	r2, [r3]
   2bc54:	ldr	r3, [fp, #-8]
   2bc58:	lsl	r3, r3, #3
   2bc5c:	add	r3, r2, r3
   2bc60:	ldrb	r3, [r3, #6]
   2bc64:	and	r3, r3, #4
   2bc68:	uxtb	r3, r3
   2bc6c:	cmp	r3, #0
   2bc70:	beq	2bc80 <__assert_fail@plt+0x1aa10>
   2bc74:	ldr	r3, [fp, #-8]
   2bc78:	cmp	r3, #0
   2bc7c:	bgt	2bbdc <__assert_fail@plt+0x1a96c>
   2bc80:	mvn	r3, #0
   2bc84:	mov	r0, r3
   2bc88:	add	sp, fp, #0
   2bc8c:	pop	{fp}		; (ldr fp, [sp], #4)
   2bc90:	bx	lr
   2bc94:	push	{fp, lr}
   2bc98:	add	fp, sp, #4
   2bc9c:	sub	sp, sp, #24
   2bca0:	str	r0, [fp, #-16]
   2bca4:	str	r1, [fp, #-20]	; 0xffffffec
   2bca8:	str	r2, [fp, #-24]	; 0xffffffe8
   2bcac:	ldr	r3, [fp, #-16]
   2bcb0:	ldr	r2, [r3]
   2bcb4:	ldr	r3, [fp, #-20]	; 0xffffffec
   2bcb8:	lsl	r3, r3, #3
   2bcbc:	add	r3, r2, r3
   2bcc0:	ldm	r3, {r1, r2}
   2bcc4:	ldr	r0, [fp, #-16]
   2bcc8:	bl	2743c <__assert_fail@plt+0x161cc>
   2bccc:	str	r0, [fp, #-8]
   2bcd0:	ldr	r3, [fp, #-8]
   2bcd4:	cmn	r3, #1
   2bcd8:	movne	r3, #1
   2bcdc:	moveq	r3, #0
   2bce0:	uxtb	r3, r3
   2bce4:	cmp	r3, #0
   2bce8:	beq	2bdfc <__assert_fail@plt+0x1ab8c>
   2bcec:	ldr	r3, [fp, #-16]
   2bcf0:	ldr	r2, [r3]
   2bcf4:	ldr	r3, [fp, #-8]
   2bcf8:	lsl	r3, r3, #3
   2bcfc:	add	r0, r2, r3
   2bd00:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2bd04:	uxth	r3, r3
   2bd08:	lsl	r3, r3, #22
   2bd0c:	lsr	r3, r3, #22
   2bd10:	uxth	r1, r3
   2bd14:	ldr	r2, [r0, #4]
   2bd18:	ldr	r3, [pc, #236]	; 2be0c <__assert_fail@plt+0x1ab9c>
   2bd1c:	and	r1, r1, r3
   2bd20:	lsl	r3, r3, #8
   2bd24:	bic	r3, r2, r3
   2bd28:	lsl	r1, r1, #8
   2bd2c:	orr	r2, r1, r3
   2bd30:	str	r2, [r0, #4]
   2bd34:	ldr	r3, [fp, #-16]
   2bd38:	ldr	r2, [r3]
   2bd3c:	ldr	r3, [fp, #-8]
   2bd40:	lsl	r3, r3, #3
   2bd44:	add	r0, r2, r3
   2bd48:	ldr	r3, [fp, #-16]
   2bd4c:	ldr	r2, [r3]
   2bd50:	ldr	r3, [fp, #-8]
   2bd54:	lsl	r3, r3, #3
   2bd58:	add	r3, r2, r3
   2bd5c:	ldr	r3, [r3, #4]
   2bd60:	lsr	r3, r3, #8
   2bd64:	lsl	r3, r3, #22
   2bd68:	lsr	r3, r3, #22
   2bd6c:	uxth	r2, r3
   2bd70:	ldr	r3, [fp, #-16]
   2bd74:	ldr	r1, [r3]
   2bd78:	ldr	r3, [fp, #-20]	; 0xffffffec
   2bd7c:	lsl	r3, r3, #3
   2bd80:	add	r3, r1, r3
   2bd84:	ldr	r3, [r3, #4]
   2bd88:	lsr	r3, r3, #8
   2bd8c:	lsl	r3, r3, #22
   2bd90:	lsr	r3, r3, #22
   2bd94:	uxth	r3, r3
   2bd98:	orr	r3, r2, r3
   2bd9c:	uxth	r1, r3
   2bda0:	ldr	r2, [r0, #4]
   2bda4:	ldr	r3, [pc, #96]	; 2be0c <__assert_fail@plt+0x1ab9c>
   2bda8:	and	r1, r1, r3
   2bdac:	lsl	r3, r3, #8
   2bdb0:	bic	r3, r2, r3
   2bdb4:	lsl	r1, r1, #8
   2bdb8:	orr	r2, r1, r3
   2bdbc:	str	r2, [r0, #4]
   2bdc0:	ldr	r3, [fp, #-16]
   2bdc4:	ldr	r2, [r3]
   2bdc8:	ldr	r3, [fp, #-8]
   2bdcc:	lsl	r3, r3, #3
   2bdd0:	add	r2, r2, r3
   2bdd4:	ldrb	r3, [r2, #6]
   2bdd8:	orr	r3, r3, #4
   2bddc:	strb	r3, [r2, #6]
   2bde0:	ldr	r3, [fp, #-16]
   2bde4:	ldr	r2, [r3, #16]
   2bde8:	ldr	r3, [fp, #-8]
   2bdec:	lsl	r3, r3, #2
   2bdf0:	add	r3, r2, r3
   2bdf4:	ldr	r2, [fp, #-20]	; 0xffffffec
   2bdf8:	str	r2, [r3]
   2bdfc:	ldr	r3, [fp, #-8]
   2be00:	mov	r0, r3
   2be04:	sub	sp, fp, #4
   2be08:	pop	{fp, pc}
   2be0c:	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>
   2be10:	push	{fp, lr}
   2be14:	add	fp, sp, #4
   2be18:	sub	sp, sp, #24
   2be1c:	str	r0, [fp, #-24]	; 0xffffffe8
   2be20:	mov	r3, #0
   2be24:	str	r3, [fp, #-12]
   2be28:	b	2be68 <__assert_fail@plt+0x1abf8>
   2be2c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2be30:	ldr	r1, [r3, #28]
   2be34:	ldr	r2, [fp, #-12]
   2be38:	mov	r3, r2
   2be3c:	lsl	r3, r3, #1
   2be40:	add	r3, r3, r2
   2be44:	lsl	r3, r3, #2
   2be48:	add	r3, r1, r3
   2be4c:	mov	r2, #12
   2be50:	mov	r1, #0
   2be54:	mov	r0, r3
   2be58:	bl	111bc <memset@plt>
   2be5c:	ldr	r3, [fp, #-12]
   2be60:	add	r3, r3, #1
   2be64:	str	r3, [fp, #-12]
   2be68:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2be6c:	ldr	r2, [r3, #8]
   2be70:	ldr	r3, [fp, #-12]
   2be74:	cmp	r2, r3
   2be78:	bhi	2be2c <__assert_fail@plt+0x1abbc>
   2be7c:	mov	r3, #0
   2be80:	str	r3, [fp, #-8]
   2be84:	b	2bf68 <__assert_fail@plt+0x1acf8>
   2be88:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2be8c:	ldr	r1, [r3, #24]
   2be90:	ldr	r2, [fp, #-8]
   2be94:	mov	r3, r2
   2be98:	lsl	r3, r3, #1
   2be9c:	add	r3, r3, r2
   2bea0:	lsl	r3, r3, #2
   2bea4:	add	r3, r1, r3
   2bea8:	ldr	r3, [r3, #8]
   2beac:	str	r3, [fp, #-16]
   2beb0:	mov	r3, #0
   2beb4:	str	r3, [fp, #-12]
   2beb8:	b	2bf2c <__assert_fail@plt+0x1acbc>
   2bebc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2bec0:	ldr	r2, [r3, #28]
   2bec4:	ldr	r3, [fp, #-12]
   2bec8:	lsl	r3, r3, #2
   2becc:	ldr	r1, [fp, #-16]
   2bed0:	add	r3, r1, r3
   2bed4:	ldr	r3, [r3]
   2bed8:	mov	r1, r3
   2bedc:	mov	r3, r1
   2bee0:	lsl	r3, r3, #1
   2bee4:	add	r3, r3, r1
   2bee8:	lsl	r3, r3, #2
   2beec:	add	r3, r2, r3
   2bef0:	ldr	r1, [fp, #-8]
   2bef4:	mov	r0, r3
   2bef8:	bl	27100 <__assert_fail@plt+0x15e90>
   2befc:	mov	r3, r0
   2bf00:	strb	r3, [fp, #-17]	; 0xffffffef
   2bf04:	ldrb	r3, [fp, #-17]	; 0xffffffef
   2bf08:	eor	r3, r3, #1
   2bf0c:	uxtb	r3, r3
   2bf10:	cmp	r3, #0
   2bf14:	beq	2bf20 <__assert_fail@plt+0x1acb0>
   2bf18:	mov	r3, #12
   2bf1c:	b	2bf80 <__assert_fail@plt+0x1ad10>
   2bf20:	ldr	r3, [fp, #-12]
   2bf24:	add	r3, r3, #1
   2bf28:	str	r3, [fp, #-12]
   2bf2c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2bf30:	ldr	r1, [r3, #24]
   2bf34:	ldr	r2, [fp, #-8]
   2bf38:	mov	r3, r2
   2bf3c:	lsl	r3, r3, #1
   2bf40:	add	r3, r3, r2
   2bf44:	lsl	r3, r3, #2
   2bf48:	add	r3, r1, r3
   2bf4c:	ldr	r2, [r3, #4]
   2bf50:	ldr	r3, [fp, #-12]
   2bf54:	cmp	r2, r3
   2bf58:	bgt	2bebc <__assert_fail@plt+0x1ac4c>
   2bf5c:	ldr	r3, [fp, #-8]
   2bf60:	add	r3, r3, #1
   2bf64:	str	r3, [fp, #-8]
   2bf68:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2bf6c:	ldr	r2, [r3, #8]
   2bf70:	ldr	r3, [fp, #-8]
   2bf74:	cmp	r2, r3
   2bf78:	bhi	2be88 <__assert_fail@plt+0x1ac18>
   2bf7c:	mov	r3, #0
   2bf80:	mov	r0, r3
   2bf84:	sub	sp, fp, #4
   2bf88:	pop	{fp, pc}
   2bf8c:	push	{fp, lr}
   2bf90:	add	fp, sp, #4
   2bf94:	sub	sp, sp, #32
   2bf98:	str	r0, [fp, #-32]	; 0xffffffe0
   2bf9c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2bfa0:	ldr	r3, [r3, #8]
   2bfa4:	cmp	r3, #0
   2bfa8:	mov	r3, #0
   2bfac:	strb	r3, [fp, #-9]
   2bfb0:	mov	r3, #0
   2bfb4:	str	r3, [fp, #-8]
   2bfb8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2bfbc:	ldr	r2, [r3, #8]
   2bfc0:	ldr	r3, [fp, #-8]
   2bfc4:	cmp	r2, r3
   2bfc8:	bne	2bff8 <__assert_fail@plt+0x1ad88>
   2bfcc:	ldrb	r3, [fp, #-9]
   2bfd0:	eor	r3, r3, #1
   2bfd4:	uxtb	r3, r3
   2bfd8:	cmp	r3, #0
   2bfdc:	beq	2bfe8 <__assert_fail@plt+0x1ad78>
   2bfe0:	mov	r3, #0
   2bfe4:	b	2c0e0 <__assert_fail@plt+0x1ae70>
   2bfe8:	mov	r3, #0
   2bfec:	strb	r3, [fp, #-9]
   2bff0:	mov	r3, #0
   2bff4:	str	r3, [fp, #-8]
   2bff8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2bffc:	ldr	r1, [r3, #24]
   2c000:	ldr	r2, [fp, #-8]
   2c004:	mov	r3, r2
   2c008:	lsl	r3, r3, #1
   2c00c:	add	r3, r3, r2
   2c010:	lsl	r3, r3, #2
   2c014:	add	r3, r1, r3
   2c018:	ldr	r3, [r3, #4]
   2c01c:	cmn	r3, #1
   2c020:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2c024:	ldr	r1, [r3, #24]
   2c028:	ldr	r2, [fp, #-8]
   2c02c:	mov	r3, r2
   2c030:	lsl	r3, r3, #1
   2c034:	add	r3, r3, r2
   2c038:	lsl	r3, r3, #2
   2c03c:	add	r3, r1, r3
   2c040:	ldr	r3, [r3, #4]
   2c044:	cmp	r3, #0
   2c048:	bne	2c0cc <__assert_fail@plt+0x1ae5c>
   2c04c:	sub	r0, fp, #28
   2c050:	mov	r3, #1
   2c054:	ldr	r2, [fp, #-8]
   2c058:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2c05c:	bl	2c0ec <__assert_fail@plt+0x1ae7c>
   2c060:	str	r0, [fp, #-16]
   2c064:	ldr	r3, [fp, #-16]
   2c068:	cmp	r3, #0
   2c06c:	movne	r3, #1
   2c070:	moveq	r3, #0
   2c074:	uxtb	r3, r3
   2c078:	cmp	r3, #0
   2c07c:	beq	2c088 <__assert_fail@plt+0x1ae18>
   2c080:	ldr	r3, [fp, #-16]
   2c084:	b	2c0e0 <__assert_fail@plt+0x1ae70>
   2c088:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2c08c:	ldr	r1, [r3, #24]
   2c090:	ldr	r2, [fp, #-8]
   2c094:	mov	r3, r2
   2c098:	lsl	r3, r3, #1
   2c09c:	add	r3, r3, r2
   2c0a0:	lsl	r3, r3, #2
   2c0a4:	add	r3, r1, r3
   2c0a8:	ldr	r3, [r3, #4]
   2c0ac:	cmp	r3, #0
   2c0b0:	bne	2c0d0 <__assert_fail@plt+0x1ae60>
   2c0b4:	mov	r3, #1
   2c0b8:	strb	r3, [fp, #-9]
   2c0bc:	ldr	r3, [fp, #-20]	; 0xffffffec
   2c0c0:	mov	r0, r3
   2c0c4:	bl	13630 <__assert_fail@plt+0x23c0>
   2c0c8:	b	2c0d0 <__assert_fail@plt+0x1ae60>
   2c0cc:	nop			; (mov r0, r0)
   2c0d0:	ldr	r3, [fp, #-8]
   2c0d4:	add	r3, r3, #1
   2c0d8:	str	r3, [fp, #-8]
   2c0dc:	b	2bfb8 <__assert_fail@plt+0x1ad48>
   2c0e0:	mov	r0, r3
   2c0e4:	sub	sp, fp, #4
   2c0e8:	pop	{fp, pc}
   2c0ec:	push	{fp, lr}
   2c0f0:	add	fp, sp, #4
   2c0f4:	sub	sp, sp, #64	; 0x40
   2c0f8:	str	r0, [fp, #-48]	; 0xffffffd0
   2c0fc:	str	r1, [fp, #-52]	; 0xffffffcc
   2c100:	str	r2, [fp, #-56]	; 0xffffffc8
   2c104:	strb	r3, [fp, #-57]	; 0xffffffc7
   2c108:	mov	r3, #0
   2c10c:	strb	r3, [fp, #-9]
   2c110:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2c114:	ldr	r1, [r3, #20]
   2c118:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2c11c:	mov	r3, r2
   2c120:	lsl	r3, r3, #1
   2c124:	add	r3, r3, r2
   2c128:	lsl	r3, r3, #2
   2c12c:	add	r3, r1, r3
   2c130:	ldr	r3, [r3, #4]
   2c134:	add	r2, r3, #1
   2c138:	sub	r3, fp, #32
   2c13c:	mov	r1, r2
   2c140:	mov	r0, r3
   2c144:	bl	25ef8 <__assert_fail@plt+0x14c88>
   2c148:	str	r0, [fp, #-16]
   2c14c:	ldr	r3, [fp, #-16]
   2c150:	cmp	r3, #0
   2c154:	movne	r3, #1
   2c158:	moveq	r3, #0
   2c15c:	uxtb	r3, r3
   2c160:	cmp	r3, #0
   2c164:	beq	2c170 <__assert_fail@plt+0x1af00>
   2c168:	ldr	r3, [fp, #-16]
   2c16c:	b	2c540 <__assert_fail@plt+0x1b2d0>
   2c170:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2c174:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2c178:	add	r1, r3, #1
   2c17c:	str	r1, [fp, #-28]	; 0xffffffe4
   2c180:	lsl	r3, r3, #2
   2c184:	add	r3, r2, r3
   2c188:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2c18c:	str	r2, [r3]
   2c190:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2c194:	ldr	r1, [r3, #24]
   2c198:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2c19c:	mov	r3, r2
   2c1a0:	lsl	r3, r3, #1
   2c1a4:	add	r3, r3, r2
   2c1a8:	lsl	r3, r3, #2
   2c1ac:	add	r3, r1, r3
   2c1b0:	mvn	r2, #0
   2c1b4:	str	r2, [r3, #4]
   2c1b8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2c1bc:	ldr	r2, [r3]
   2c1c0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2c1c4:	lsl	r3, r3, #3
   2c1c8:	add	r3, r2, r3
   2c1cc:	ldr	r2, [r3, #4]
   2c1d0:	ldr	r3, [pc, #884]	; 2c54c <__assert_fail@plt+0x1b2dc>
   2c1d4:	and	r3, r3, r2
   2c1d8:	cmp	r3, #0
   2c1dc:	beq	2c2c0 <__assert_fail@plt+0x1b050>
   2c1e0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2c1e4:	ldr	r1, [r3, #20]
   2c1e8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2c1ec:	mov	r3, r2
   2c1f0:	lsl	r3, r3, #1
   2c1f4:	add	r3, r3, r2
   2c1f8:	lsl	r3, r3, #2
   2c1fc:	add	r3, r1, r3
   2c200:	ldr	r3, [r3, #4]
   2c204:	cmp	r3, #0
   2c208:	beq	2c2c0 <__assert_fail@plt+0x1b050>
   2c20c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2c210:	ldr	r1, [r3]
   2c214:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2c218:	ldr	r0, [r3, #20]
   2c21c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2c220:	mov	r3, r2
   2c224:	lsl	r3, r3, #1
   2c228:	add	r3, r3, r2
   2c22c:	lsl	r3, r3, #2
   2c230:	add	r3, r0, r3
   2c234:	ldr	r3, [r3, #8]
   2c238:	ldr	r3, [r3]
   2c23c:	lsl	r3, r3, #3
   2c240:	add	r3, r1, r3
   2c244:	ldrb	r3, [r3, #6]
   2c248:	and	r3, r3, #4
   2c24c:	uxtb	r3, r3
   2c250:	cmp	r3, #0
   2c254:	bne	2c2c0 <__assert_fail@plt+0x1b050>
   2c258:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2c25c:	ldr	r2, [r3]
   2c260:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2c264:	lsl	r3, r3, #3
   2c268:	add	r3, r2, r3
   2c26c:	ldr	r3, [r3, #4]
   2c270:	lsr	r3, r3, #8
   2c274:	lsl	r3, r3, #22
   2c278:	lsr	r3, r3, #22
   2c27c:	uxth	r3, r3
   2c280:	str	r3, [sp]
   2c284:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2c288:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2c28c:	ldr	r1, [fp, #-56]	; 0xffffffc8
   2c290:	ldr	r0, [fp, #-52]	; 0xffffffcc
   2c294:	bl	2b5e4 <__assert_fail@plt+0x1a374>
   2c298:	str	r0, [fp, #-16]
   2c29c:	ldr	r3, [fp, #-16]
   2c2a0:	cmp	r3, #0
   2c2a4:	movne	r3, #1
   2c2a8:	moveq	r3, #0
   2c2ac:	uxtb	r3, r3
   2c2b0:	cmp	r3, #0
   2c2b4:	beq	2c2c0 <__assert_fail@plt+0x1b050>
   2c2b8:	ldr	r3, [fp, #-16]
   2c2bc:	b	2c540 <__assert_fail@plt+0x1b2d0>
   2c2c0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2c2c4:	ldr	r2, [r3]
   2c2c8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2c2cc:	lsl	r3, r3, #3
   2c2d0:	add	r3, r2, r3
   2c2d4:	ldrb	r3, [r3, #4]
   2c2d8:	and	r3, r3, #8
   2c2dc:	cmp	r3, #0
   2c2e0:	beq	2c4ac <__assert_fail@plt+0x1b23c>
   2c2e4:	mov	r3, #0
   2c2e8:	str	r3, [fp, #-8]
   2c2ec:	b	2c47c <__assert_fail@plt+0x1b20c>
   2c2f0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2c2f4:	ldr	r1, [r3, #20]
   2c2f8:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2c2fc:	mov	r3, r2
   2c300:	lsl	r3, r3, #1
   2c304:	add	r3, r3, r2
   2c308:	lsl	r3, r3, #2
   2c30c:	add	r3, r1, r3
   2c310:	ldr	r2, [r3, #8]
   2c314:	ldr	r3, [fp, #-8]
   2c318:	lsl	r3, r3, #2
   2c31c:	add	r3, r2, r3
   2c320:	ldr	r3, [r3]
   2c324:	str	r3, [fp, #-20]	; 0xffffffec
   2c328:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2c32c:	ldr	r1, [r3, #24]
   2c330:	ldr	r2, [fp, #-20]	; 0xffffffec
   2c334:	mov	r3, r2
   2c338:	lsl	r3, r3, #1
   2c33c:	add	r3, r3, r2
   2c340:	lsl	r3, r3, #2
   2c344:	add	r3, r1, r3
   2c348:	ldr	r3, [r3, #4]
   2c34c:	cmn	r3, #1
   2c350:	bne	2c360 <__assert_fail@plt+0x1b0f0>
   2c354:	mov	r3, #1
   2c358:	strb	r3, [fp, #-9]
   2c35c:	b	2c470 <__assert_fail@plt+0x1b200>
   2c360:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2c364:	ldr	r1, [r3, #24]
   2c368:	ldr	r2, [fp, #-20]	; 0xffffffec
   2c36c:	mov	r3, r2
   2c370:	lsl	r3, r3, #1
   2c374:	add	r3, r3, r2
   2c378:	lsl	r3, r3, #2
   2c37c:	add	r3, r1, r3
   2c380:	ldr	r3, [r3, #4]
   2c384:	cmp	r3, #0
   2c388:	bne	2c3c8 <__assert_fail@plt+0x1b158>
   2c38c:	sub	r0, fp, #44	; 0x2c
   2c390:	mov	r3, #0
   2c394:	ldr	r2, [fp, #-20]	; 0xffffffec
   2c398:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2c39c:	bl	2c0ec <__assert_fail@plt+0x1ae7c>
   2c3a0:	str	r0, [fp, #-16]
   2c3a4:	ldr	r3, [fp, #-16]
   2c3a8:	cmp	r3, #0
   2c3ac:	movne	r3, #1
   2c3b0:	moveq	r3, #0
   2c3b4:	uxtb	r3, r3
   2c3b8:	cmp	r3, #0
   2c3bc:	beq	2c3f4 <__assert_fail@plt+0x1b184>
   2c3c0:	ldr	r3, [fp, #-16]
   2c3c4:	b	2c540 <__assert_fail@plt+0x1b2d0>
   2c3c8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2c3cc:	ldr	r1, [r3, #24]
   2c3d0:	ldr	r2, [fp, #-20]	; 0xffffffec
   2c3d4:	mov	r3, r2
   2c3d8:	lsl	r3, r3, #1
   2c3dc:	add	r3, r3, r2
   2c3e0:	lsl	r3, r3, #2
   2c3e4:	add	r2, r1, r3
   2c3e8:	sub	r3, fp, #44	; 0x2c
   2c3ec:	ldm	r2, {r0, r1, r2}
   2c3f0:	stm	r3, {r0, r1, r2}
   2c3f4:	sub	r2, fp, #44	; 0x2c
   2c3f8:	sub	r3, fp, #32
   2c3fc:	mov	r1, r2
   2c400:	mov	r0, r3
   2c404:	bl	26a38 <__assert_fail@plt+0x157c8>
   2c408:	str	r0, [fp, #-16]
   2c40c:	ldr	r3, [fp, #-16]
   2c410:	cmp	r3, #0
   2c414:	movne	r3, #1
   2c418:	moveq	r3, #0
   2c41c:	uxtb	r3, r3
   2c420:	cmp	r3, #0
   2c424:	beq	2c430 <__assert_fail@plt+0x1b1c0>
   2c428:	ldr	r3, [fp, #-16]
   2c42c:	b	2c540 <__assert_fail@plt+0x1b2d0>
   2c430:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2c434:	ldr	r1, [r3, #24]
   2c438:	ldr	r2, [fp, #-20]	; 0xffffffec
   2c43c:	mov	r3, r2
   2c440:	lsl	r3, r3, #1
   2c444:	add	r3, r3, r2
   2c448:	lsl	r3, r3, #2
   2c44c:	add	r3, r1, r3
   2c450:	ldr	r3, [r3, #4]
   2c454:	cmp	r3, #0
   2c458:	bne	2c470 <__assert_fail@plt+0x1b200>
   2c45c:	mov	r3, #1
   2c460:	strb	r3, [fp, #-9]
   2c464:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2c468:	mov	r0, r3
   2c46c:	bl	13630 <__assert_fail@plt+0x23c0>
   2c470:	ldr	r3, [fp, #-8]
   2c474:	add	r3, r3, #1
   2c478:	str	r3, [fp, #-8]
   2c47c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2c480:	ldr	r1, [r3, #20]
   2c484:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2c488:	mov	r3, r2
   2c48c:	lsl	r3, r3, #1
   2c490:	add	r3, r3, r2
   2c494:	lsl	r3, r3, #2
   2c498:	add	r3, r1, r3
   2c49c:	ldr	r2, [r3, #4]
   2c4a0:	ldr	r3, [fp, #-8]
   2c4a4:	cmp	r2, r3
   2c4a8:	bgt	2c2f0 <__assert_fail@plt+0x1b080>
   2c4ac:	ldrb	r3, [fp, #-9]
   2c4b0:	cmp	r3, #0
   2c4b4:	beq	2c4f8 <__assert_fail@plt+0x1b288>
   2c4b8:	ldrb	r3, [fp, #-57]	; 0xffffffc7
   2c4bc:	eor	r3, r3, #1
   2c4c0:	uxtb	r3, r3
   2c4c4:	cmp	r3, #0
   2c4c8:	beq	2c4f8 <__assert_fail@plt+0x1b288>
   2c4cc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2c4d0:	ldr	r1, [r3, #24]
   2c4d4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2c4d8:	mov	r3, r2
   2c4dc:	lsl	r3, r3, #1
   2c4e0:	add	r3, r3, r2
   2c4e4:	lsl	r3, r3, #2
   2c4e8:	add	r3, r1, r3
   2c4ec:	mov	r2, #0
   2c4f0:	str	r2, [r3, #4]
   2c4f4:	b	2c528 <__assert_fail@plt+0x1b2b8>
   2c4f8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2c4fc:	ldr	r1, [r3, #24]
   2c500:	ldr	r2, [fp, #-56]	; 0xffffffc8
   2c504:	mov	r3, r2
   2c508:	lsl	r3, r3, #1
   2c50c:	add	r3, r3, r2
   2c510:	lsl	r3, r3, #2
   2c514:	add	r3, r1, r3
   2c518:	mov	ip, r3
   2c51c:	sub	r3, fp, #32
   2c520:	ldm	r3, {r0, r1, r2}
   2c524:	stm	ip, {r0, r1, r2}
   2c528:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2c52c:	mov	ip, r3
   2c530:	sub	r3, fp, #32
   2c534:	ldm	r3, {r0, r1, r2}
   2c538:	stm	ip, {r0, r1, r2}
   2c53c:	mov	r3, #0
   2c540:	mov	r0, r3
   2c544:	sub	sp, fp, #4
   2c548:	pop	{fp, pc}
   2c54c:	andeq	pc, r3, r0, lsl #30
   2c550:	push	{fp, lr}
   2c554:	add	fp, sp, #4
   2c558:	sub	sp, sp, #16
   2c55c:	str	r0, [fp, #-8]
   2c560:	str	r1, [fp, #-12]
   2c564:	str	r2, [fp, #-16]
   2c568:	ldr	r2, [fp, #-16]
   2c56c:	ldr	r1, [fp, #-12]
   2c570:	ldr	r0, [fp, #-8]
   2c574:	bl	2c59c <__assert_fail@plt+0x1b32c>
   2c578:	mov	r2, r0
   2c57c:	ldr	r3, [fp, #-12]
   2c580:	ldr	r3, [r3, #40]	; 0x28
   2c584:	add	r2, r3, r2
   2c588:	ldr	r3, [fp, #-12]
   2c58c:	str	r2, [r3, #40]	; 0x28
   2c590:	nop			; (mov r0, r0)
   2c594:	sub	sp, fp, #4
   2c598:	pop	{fp, pc}
   2c59c:	push	{fp, lr}
   2c5a0:	add	fp, sp, #4
   2c5a4:	sub	sp, sp, #40	; 0x28
   2c5a8:	str	r0, [fp, #-32]	; 0xffffffe0
   2c5ac:	str	r1, [fp, #-36]	; 0xffffffdc
   2c5b0:	str	r2, [fp, #-40]	; 0xffffffd8
   2c5b4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2c5b8:	ldr	r2, [r3, #56]	; 0x38
   2c5bc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2c5c0:	ldr	r3, [r3, #40]	; 0x28
   2c5c4:	cmp	r2, r3
   2c5c8:	bgt	2c5e0 <__assert_fail@plt+0x1b370>
   2c5cc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2c5d0:	mov	r2, #2
   2c5d4:	strb	r2, [r3, #4]
   2c5d8:	mov	r3, #0
   2c5dc:	b	2d2c4 <__assert_fail@plt+0x1c054>
   2c5e0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2c5e4:	ldr	r3, [r3, #4]
   2c5e8:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2c5ec:	ldr	r2, [r2, #40]	; 0x28
   2c5f0:	add	r3, r3, r2
   2c5f4:	ldrb	r3, [r3]
   2c5f8:	strb	r3, [fp, #-5]
   2c5fc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2c600:	ldrb	r2, [fp, #-5]
   2c604:	strb	r2, [r3]
   2c608:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2c60c:	ldrb	r3, [r2, #6]
   2c610:	bic	r3, r3, #64	; 0x40
   2c614:	strb	r3, [r2, #6]
   2c618:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2c61c:	ldrb	r3, [r2, #6]
   2c620:	bic	r3, r3, #32
   2c624:	strb	r3, [r2, #6]
   2c628:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2c62c:	ldr	r3, [r3, #80]	; 0x50
   2c630:	cmp	r3, #1
   2c634:	ble	2c698 <__assert_fail@plt+0x1b428>
   2c638:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2c63c:	ldr	r2, [r3, #40]	; 0x28
   2c640:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2c644:	ldr	r3, [r3, #28]
   2c648:	cmp	r2, r3
   2c64c:	beq	2c698 <__assert_fail@plt+0x1b428>
   2c650:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2c654:	ldr	r2, [r3, #8]
   2c658:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2c65c:	ldr	r3, [r3, #40]	; 0x28
   2c660:	lsl	r3, r3, #2
   2c664:	add	r3, r2, r3
   2c668:	ldr	r3, [r3]
   2c66c:	cmn	r3, #1
   2c670:	bne	2c698 <__assert_fail@plt+0x1b428>
   2c674:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2c678:	mov	r2, #1
   2c67c:	strb	r2, [r3, #4]
   2c680:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2c684:	ldrb	r3, [r2, #6]
   2c688:	orr	r3, r3, #32
   2c68c:	strb	r3, [r2, #6]
   2c690:	mov	r3, #1
   2c694:	b	2d2c4 <__assert_fail@plt+0x1c054>
   2c698:	ldrb	r3, [fp, #-5]
   2c69c:	cmp	r3, #92	; 0x5c
   2c6a0:	bne	2ccf0 <__assert_fail@plt+0x1ba80>
   2c6a4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2c6a8:	ldr	r3, [r3, #40]	; 0x28
   2c6ac:	add	r2, r3, #1
   2c6b0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2c6b4:	ldr	r3, [r3, #48]	; 0x30
   2c6b8:	cmp	r2, r3
   2c6bc:	blt	2c6d4 <__assert_fail@plt+0x1b464>
   2c6c0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2c6c4:	mov	r2, #36	; 0x24
   2c6c8:	strb	r2, [r3, #4]
   2c6cc:	mov	r3, #1
   2c6d0:	b	2d2c4 <__assert_fail@plt+0x1c054>
   2c6d4:	mov	r1, #1
   2c6d8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2c6dc:	bl	2592c <__assert_fail@plt+0x146bc>
   2c6e0:	mov	r3, r0
   2c6e4:	strb	r3, [fp, #-6]
   2c6e8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2c6ec:	ldrb	r2, [fp, #-6]
   2c6f0:	strb	r2, [r3]
   2c6f4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2c6f8:	mov	r2, #1
   2c6fc:	strb	r2, [r3, #4]
   2c700:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2c704:	ldr	r3, [r3, #80]	; 0x50
   2c708:	cmp	r3, #1
   2c70c:	ble	2c78c <__assert_fail@plt+0x1b51c>
   2c710:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2c714:	ldr	r3, [r3, #40]	; 0x28
   2c718:	add	r3, r3, #1
   2c71c:	mov	r1, r3
   2c720:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2c724:	bl	23410 <__assert_fail@plt+0x121a0>
   2c728:	str	r0, [fp, #-12]
   2c72c:	ldr	r0, [fp, #-12]
   2c730:	bl	111a4 <iswalnum@plt>
   2c734:	mov	r3, r0
   2c738:	cmp	r3, #0
   2c73c:	bne	2c74c <__assert_fail@plt+0x1b4dc>
   2c740:	ldr	r3, [fp, #-12]
   2c744:	cmp	r3, #95	; 0x5f
   2c748:	bne	2c754 <__assert_fail@plt+0x1b4e4>
   2c74c:	mov	r3, #1
   2c750:	b	2c758 <__assert_fail@plt+0x1b4e8>
   2c754:	mov	r3, #0
   2c758:	cmp	r3, #0
   2c75c:	movne	r3, #1
   2c760:	moveq	r3, #0
   2c764:	uxtb	r3, r3
   2c768:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2c76c:	ldrb	r2, [r1, #6]
   2c770:	and	r3, r3, #1
   2c774:	bic	r2, r2, #64	; 0x40
   2c778:	lsl	r3, r3, #6
   2c77c:	orr	r3, r3, r2
   2c780:	mov	r2, r3
   2c784:	strb	r2, [r1, #6]
   2c788:	b	2c7fc <__assert_fail@plt+0x1b58c>
   2c78c:	bl	11150 <__ctype_b_loc@plt>
   2c790:	mov	r3, r0
   2c794:	ldr	r2, [r3]
   2c798:	ldrb	r3, [fp, #-6]
   2c79c:	lsl	r3, r3, #1
   2c7a0:	add	r3, r2, r3
   2c7a4:	ldrh	r3, [r3]
   2c7a8:	and	r3, r3, #8
   2c7ac:	cmp	r3, #0
   2c7b0:	bne	2c7c0 <__assert_fail@plt+0x1b550>
   2c7b4:	ldrb	r3, [fp, #-6]
   2c7b8:	cmp	r3, #95	; 0x5f
   2c7bc:	bne	2c7c8 <__assert_fail@plt+0x1b558>
   2c7c0:	mov	r3, #1
   2c7c4:	b	2c7cc <__assert_fail@plt+0x1b55c>
   2c7c8:	mov	r3, #0
   2c7cc:	cmp	r3, #0
   2c7d0:	movne	r3, #1
   2c7d4:	moveq	r3, #0
   2c7d8:	uxtb	r3, r3
   2c7dc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2c7e0:	ldrb	r2, [r1, #6]
   2c7e4:	and	r3, r3, #1
   2c7e8:	bic	r2, r2, #64	; 0x40
   2c7ec:	lsl	r3, r3, #6
   2c7f0:	orr	r3, r3, r2
   2c7f4:	mov	r2, r3
   2c7f8:	strb	r2, [r1, #6]
   2c7fc:	ldrb	r3, [fp, #-6]
   2c800:	sub	r3, r3, #39	; 0x27
   2c804:	cmp	r3, #86	; 0x56
   2c808:	ldrls	pc, [pc, r3, lsl #2]
   2c80c:	b	2cc54 <__assert_fail@plt+0x1b9e4>
   2c810:	andeq	ip, r2, r8, lsr #22
   2c814:	andeq	ip, r2, r4, asr fp
   2c818:	andeq	ip, r2, r4, ror fp
   2c81c:	andeq	ip, r2, r4, asr ip
   2c820:	muleq	r2, r4, fp
   2c824:	andeq	ip, r2, r4, asr ip
   2c828:	andeq	ip, r2, r4, asr ip
   2c82c:	andeq	ip, r2, r4, asr ip
   2c830:	andeq	ip, r2, r4, asr ip
   2c834:	andeq	ip, r2, r4, asr ip
   2c838:	muleq	r2, ip, r9
   2c83c:	muleq	r2, ip, r9
   2c840:	muleq	r2, ip, r9
   2c844:	muleq	r2, ip, r9
   2c848:	muleq	r2, ip, r9
   2c84c:	muleq	r2, ip, r9
   2c850:	muleq	r2, ip, r9
   2c854:	muleq	r2, ip, r9
   2c858:	muleq	r2, ip, r9
   2c85c:	andeq	ip, r2, r4, asr ip
   2c860:	andeq	ip, r2, r4, asr ip
   2c864:	andeq	ip, r2, ip, asr #19
   2c868:	andeq	ip, r2, r4, asr ip
   2c86c:	strdeq	ip, [r2], -r8
   2c870:	andeq	ip, r2, r4, asr #23
   2c874:	andeq	ip, r2, r4, asr ip
   2c878:	andeq	ip, r2, r4, asr ip
   2c87c:	andeq	ip, r2, r0, asr sl
   2c880:	andeq	ip, r2, r4, asr ip
   2c884:	andeq	ip, r2, r4, asr ip
   2c888:	andeq	ip, r2, r4, asr ip
   2c88c:	andeq	ip, r2, r4, asr ip
   2c890:	andeq	ip, r2, r4, asr ip
   2c894:	andeq	ip, r2, r4, asr ip
   2c898:	andeq	ip, r2, r4, asr ip
   2c89c:	andeq	ip, r2, r4, asr ip
   2c8a0:	andeq	ip, r2, r4, asr ip
   2c8a4:	andeq	ip, r2, r4, asr ip
   2c8a8:	andeq	ip, r2, r4, asr ip
   2c8ac:	andeq	ip, r2, r4, asr ip
   2c8b0:	andeq	ip, r2, r4, asr ip
   2c8b4:	andeq	ip, r2, r4, asr ip
   2c8b8:	andeq	ip, r2, r4, asr ip
   2c8bc:	andeq	ip, r2, r4, asr ip
   2c8c0:	ldrdeq	ip, [r2], -ip	; <UNPREDICTABLE>
   2c8c4:	andeq	ip, r2, r4, asr ip
   2c8c8:	andeq	ip, r2, r4, asr ip
   2c8cc:	andeq	ip, r2, r4, asr ip
   2c8d0:	muleq	r2, ip, sl
   2c8d4:	andeq	ip, r2, r4, asr ip
   2c8d8:	andeq	ip, r2, r4, asr ip
   2c8dc:	andeq	ip, r2, r4, asr ip
   2c8e0:	andeq	ip, r2, r4, asr ip
   2c8e4:	andeq	ip, r2, r4, asr ip
   2c8e8:	andeq	ip, r2, r4, asr ip
   2c8ec:	andeq	ip, r2, r4, asr ip
   2c8f0:	andeq	ip, r2, r4, asr ip
   2c8f4:	strdeq	ip, [r2], -ip	; <UNPREDICTABLE>
   2c8f8:	andeq	ip, r2, r4, asr ip
   2c8fc:	andeq	ip, r2, r4, lsr #20
   2c900:	andeq	ip, r2, r4, asr ip
   2c904:	andeq	ip, r2, r4, asr ip
   2c908:	andeq	ip, r2, r4, asr ip
   2c90c:	andeq	ip, r2, r4, asr ip
   2c910:	andeq	ip, r2, r4, asr ip
   2c914:	andeq	ip, r2, r4, asr ip
   2c918:	andeq	ip, r2, r4, asr ip
   2c91c:	andeq	ip, r2, r4, asr ip
   2c920:	andeq	ip, r2, r4, asr ip
   2c924:	andeq	ip, r2, r4, asr ip
   2c928:	andeq	ip, r2, r4, asr ip
   2c92c:	andeq	ip, r2, r4, asr ip
   2c930:	andeq	ip, r2, r4, asr ip
   2c934:	andeq	ip, r2, r4, asr ip
   2c938:	andeq	ip, r2, r4, asr ip
   2c93c:	andeq	ip, r2, r4, asr ip
   2c940:			; <UNDEFINED> instruction: 0x0002cabc
   2c944:	andeq	ip, r2, r4, asr ip
   2c948:	andeq	ip, r2, r4, asr ip
   2c94c:	andeq	ip, r2, r4, asr ip
   2c950:	andeq	ip, r2, ip, ror sl
   2c954:	andeq	ip, r2, r4, asr ip
   2c958:	andeq	ip, r2, r4, asr ip
   2c95c:	andeq	ip, r2, r4, asr ip
   2c960:	strdeq	ip, [r2], -r4
   2c964:	andeq	ip, r2, ip, ror #18
   2c968:	andeq	ip, r2, r4, lsr #24
   2c96c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2c970:	and	r3, r3, #1024	; 0x400
   2c974:	cmp	r3, #0
   2c978:	bne	2cc5c <__assert_fail@plt+0x1b9ec>
   2c97c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2c980:	and	r3, r3, #32768	; 0x8000
   2c984:	cmp	r3, #0
   2c988:	bne	2cc5c <__assert_fail@plt+0x1b9ec>
   2c98c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2c990:	mov	r2, #10
   2c994:	strb	r2, [r3, #4]
   2c998:	b	2cc5c <__assert_fail@plt+0x1b9ec>
   2c99c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2c9a0:	and	r3, r3, #16384	; 0x4000
   2c9a4:	cmp	r3, #0
   2c9a8:	bne	2cc64 <__assert_fail@plt+0x1b9f4>
   2c9ac:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2c9b0:	mov	r2, #4
   2c9b4:	strb	r2, [r3, #4]
   2c9b8:	ldrb	r3, [fp, #-6]
   2c9bc:	sub	r2, r3, #49	; 0x31
   2c9c0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2c9c4:	str	r2, [r3]
   2c9c8:	b	2cc64 <__assert_fail@plt+0x1b9f4>
   2c9cc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2c9d0:	and	r3, r3, #524288	; 0x80000
   2c9d4:	cmp	r3, #0
   2c9d8:	bne	2cc6c <__assert_fail@plt+0x1b9fc>
   2c9dc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2c9e0:	mov	r2, #12
   2c9e4:	strb	r2, [r3, #4]
   2c9e8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2c9ec:	mov	r2, #6
   2c9f0:	str	r2, [r3]
   2c9f4:	b	2cc6c <__assert_fail@plt+0x1b9fc>
   2c9f8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2c9fc:	and	r3, r3, #524288	; 0x80000
   2ca00:	cmp	r3, #0
   2ca04:	bne	2cc74 <__assert_fail@plt+0x1ba04>
   2ca08:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2ca0c:	mov	r2, #12
   2ca10:	strb	r2, [r3, #4]
   2ca14:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2ca18:	mov	r2, #9
   2ca1c:	str	r2, [r3]
   2ca20:	b	2cc74 <__assert_fail@plt+0x1ba04>
   2ca24:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2ca28:	and	r3, r3, #524288	; 0x80000
   2ca2c:	cmp	r3, #0
   2ca30:	bne	2cc7c <__assert_fail@plt+0x1ba0c>
   2ca34:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2ca38:	mov	r2, #12
   2ca3c:	strb	r2, [r3, #4]
   2ca40:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2ca44:	mov	r2, #256	; 0x100
   2ca48:	str	r2, [r3]
   2ca4c:	b	2cc7c <__assert_fail@plt+0x1ba0c>
   2ca50:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2ca54:	and	r3, r3, #524288	; 0x80000
   2ca58:	cmp	r3, #0
   2ca5c:	bne	2cc84 <__assert_fail@plt+0x1ba14>
   2ca60:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2ca64:	mov	r2, #12
   2ca68:	strb	r2, [r3, #4]
   2ca6c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2ca70:	mov	r2, #512	; 0x200
   2ca74:	str	r2, [r3]
   2ca78:	b	2cc84 <__assert_fail@plt+0x1ba14>
   2ca7c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2ca80:	and	r3, r3, #524288	; 0x80000
   2ca84:	cmp	r3, #0
   2ca88:	bne	2cc8c <__assert_fail@plt+0x1ba1c>
   2ca8c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2ca90:	mov	r2, #32
   2ca94:	strb	r2, [r3, #4]
   2ca98:	b	2cc8c <__assert_fail@plt+0x1ba1c>
   2ca9c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2caa0:	and	r3, r3, #524288	; 0x80000
   2caa4:	cmp	r3, #0
   2caa8:	bne	2cc94 <__assert_fail@plt+0x1ba24>
   2caac:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2cab0:	mov	r2, #33	; 0x21
   2cab4:	strb	r2, [r3, #4]
   2cab8:	b	2cc94 <__assert_fail@plt+0x1ba24>
   2cabc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2cac0:	and	r3, r3, #524288	; 0x80000
   2cac4:	cmp	r3, #0
   2cac8:	bne	2cc9c <__assert_fail@plt+0x1ba2c>
   2cacc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2cad0:	mov	r2, #34	; 0x22
   2cad4:	strb	r2, [r3, #4]
   2cad8:	b	2cc9c <__assert_fail@plt+0x1ba2c>
   2cadc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2cae0:	and	r3, r3, #524288	; 0x80000
   2cae4:	cmp	r3, #0
   2cae8:	bne	2cca4 <__assert_fail@plt+0x1ba34>
   2caec:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2caf0:	mov	r2, #35	; 0x23
   2caf4:	strb	r2, [r3, #4]
   2caf8:	b	2cca4 <__assert_fail@plt+0x1ba34>
   2cafc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2cb00:	and	r3, r3, #524288	; 0x80000
   2cb04:	cmp	r3, #0
   2cb08:	bne	2ccac <__assert_fail@plt+0x1ba3c>
   2cb0c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2cb10:	mov	r2, #12
   2cb14:	strb	r2, [r3, #4]
   2cb18:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2cb1c:	mov	r2, #64	; 0x40
   2cb20:	str	r2, [r3]
   2cb24:	b	2ccac <__assert_fail@plt+0x1ba3c>
   2cb28:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2cb2c:	and	r3, r3, #524288	; 0x80000
   2cb30:	cmp	r3, #0
   2cb34:	bne	2ccb4 <__assert_fail@plt+0x1ba44>
   2cb38:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2cb3c:	mov	r2, #12
   2cb40:	strb	r2, [r3, #4]
   2cb44:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2cb48:	mov	r2, #128	; 0x80
   2cb4c:	str	r2, [r3]
   2cb50:	b	2ccb4 <__assert_fail@plt+0x1ba44>
   2cb54:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2cb58:	and	r3, r3, #8192	; 0x2000
   2cb5c:	cmp	r3, #0
   2cb60:	bne	2ccbc <__assert_fail@plt+0x1ba4c>
   2cb64:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2cb68:	mov	r2, #8
   2cb6c:	strb	r2, [r3, #4]
   2cb70:	b	2ccbc <__assert_fail@plt+0x1ba4c>
   2cb74:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2cb78:	and	r3, r3, #8192	; 0x2000
   2cb7c:	cmp	r3, #0
   2cb80:	bne	2ccc4 <__assert_fail@plt+0x1ba54>
   2cb84:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2cb88:	mov	r2, #9
   2cb8c:	strb	r2, [r3, #4]
   2cb90:	b	2ccc4 <__assert_fail@plt+0x1ba54>
   2cb94:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2cb98:	and	r3, r3, #1024	; 0x400
   2cb9c:	cmp	r3, #0
   2cba0:	bne	2cccc <__assert_fail@plt+0x1ba5c>
   2cba4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2cba8:	and	r3, r3, #2
   2cbac:	cmp	r3, #0
   2cbb0:	beq	2cccc <__assert_fail@plt+0x1ba5c>
   2cbb4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2cbb8:	mov	r2, #18
   2cbbc:	strb	r2, [r3, #4]
   2cbc0:	b	2cccc <__assert_fail@plt+0x1ba5c>
   2cbc4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2cbc8:	and	r3, r3, #1024	; 0x400
   2cbcc:	cmp	r3, #0
   2cbd0:	bne	2ccd4 <__assert_fail@plt+0x1ba64>
   2cbd4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2cbd8:	and	r3, r3, #2
   2cbdc:	cmp	r3, #0
   2cbe0:	beq	2ccd4 <__assert_fail@plt+0x1ba64>
   2cbe4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2cbe8:	mov	r2, #19
   2cbec:	strb	r2, [r3, #4]
   2cbf0:	b	2ccd4 <__assert_fail@plt+0x1ba64>
   2cbf4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2cbf8:	and	r3, r3, #512	; 0x200
   2cbfc:	cmp	r3, #0
   2cc00:	beq	2ccdc <__assert_fail@plt+0x1ba6c>
   2cc04:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2cc08:	and	r3, r3, #4096	; 0x1000
   2cc0c:	cmp	r3, #0
   2cc10:	bne	2ccdc <__assert_fail@plt+0x1ba6c>
   2cc14:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2cc18:	mov	r2, #23
   2cc1c:	strb	r2, [r3, #4]
   2cc20:	b	2ccdc <__assert_fail@plt+0x1ba6c>
   2cc24:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2cc28:	and	r3, r3, #512	; 0x200
   2cc2c:	cmp	r3, #0
   2cc30:	beq	2cce4 <__assert_fail@plt+0x1ba74>
   2cc34:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2cc38:	and	r3, r3, #4096	; 0x1000
   2cc3c:	cmp	r3, #0
   2cc40:	bne	2cce4 <__assert_fail@plt+0x1ba74>
   2cc44:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2cc48:	mov	r2, #24
   2cc4c:	strb	r2, [r3, #4]
   2cc50:	b	2cce4 <__assert_fail@plt+0x1ba74>
   2cc54:	nop			; (mov r0, r0)
   2cc58:	b	2cce8 <__assert_fail@plt+0x1ba78>
   2cc5c:	nop			; (mov r0, r0)
   2cc60:	b	2cce8 <__assert_fail@plt+0x1ba78>
   2cc64:	nop			; (mov r0, r0)
   2cc68:	b	2cce8 <__assert_fail@plt+0x1ba78>
   2cc6c:	nop			; (mov r0, r0)
   2cc70:	b	2cce8 <__assert_fail@plt+0x1ba78>
   2cc74:	nop			; (mov r0, r0)
   2cc78:	b	2cce8 <__assert_fail@plt+0x1ba78>
   2cc7c:	nop			; (mov r0, r0)
   2cc80:	b	2cce8 <__assert_fail@plt+0x1ba78>
   2cc84:	nop			; (mov r0, r0)
   2cc88:	b	2cce8 <__assert_fail@plt+0x1ba78>
   2cc8c:	nop			; (mov r0, r0)
   2cc90:	b	2cce8 <__assert_fail@plt+0x1ba78>
   2cc94:	nop			; (mov r0, r0)
   2cc98:	b	2cce8 <__assert_fail@plt+0x1ba78>
   2cc9c:	nop			; (mov r0, r0)
   2cca0:	b	2cce8 <__assert_fail@plt+0x1ba78>
   2cca4:	nop			; (mov r0, r0)
   2cca8:	b	2cce8 <__assert_fail@plt+0x1ba78>
   2ccac:	nop			; (mov r0, r0)
   2ccb0:	b	2cce8 <__assert_fail@plt+0x1ba78>
   2ccb4:	nop			; (mov r0, r0)
   2ccb8:	b	2cce8 <__assert_fail@plt+0x1ba78>
   2ccbc:	nop			; (mov r0, r0)
   2ccc0:	b	2cce8 <__assert_fail@plt+0x1ba78>
   2ccc4:	nop			; (mov r0, r0)
   2ccc8:	b	2cce8 <__assert_fail@plt+0x1ba78>
   2cccc:	nop			; (mov r0, r0)
   2ccd0:	b	2cce8 <__assert_fail@plt+0x1ba78>
   2ccd4:	nop			; (mov r0, r0)
   2ccd8:	b	2cce8 <__assert_fail@plt+0x1ba78>
   2ccdc:	nop			; (mov r0, r0)
   2cce0:	b	2cce8 <__assert_fail@plt+0x1ba78>
   2cce4:	nop			; (mov r0, r0)
   2cce8:	mov	r3, #2
   2ccec:	b	2d2c4 <__assert_fail@plt+0x1c054>
   2ccf0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2ccf4:	mov	r2, #1
   2ccf8:	strb	r2, [r3, #4]
   2ccfc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2cd00:	ldr	r3, [r3, #80]	; 0x50
   2cd04:	cmp	r3, #1
   2cd08:	ble	2cd84 <__assert_fail@plt+0x1bb14>
   2cd0c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2cd10:	ldr	r3, [r3, #40]	; 0x28
   2cd14:	mov	r1, r3
   2cd18:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2cd1c:	bl	23410 <__assert_fail@plt+0x121a0>
   2cd20:	str	r0, [fp, #-16]
   2cd24:	ldr	r0, [fp, #-16]
   2cd28:	bl	111a4 <iswalnum@plt>
   2cd2c:	mov	r3, r0
   2cd30:	cmp	r3, #0
   2cd34:	bne	2cd44 <__assert_fail@plt+0x1bad4>
   2cd38:	ldr	r3, [fp, #-16]
   2cd3c:	cmp	r3, #95	; 0x5f
   2cd40:	bne	2cd4c <__assert_fail@plt+0x1badc>
   2cd44:	mov	r3, #1
   2cd48:	b	2cd50 <__assert_fail@plt+0x1bae0>
   2cd4c:	mov	r3, #0
   2cd50:	cmp	r3, #0
   2cd54:	movne	r3, #1
   2cd58:	moveq	r3, #0
   2cd5c:	uxtb	r3, r3
   2cd60:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2cd64:	ldrb	r2, [r1, #6]
   2cd68:	and	r3, r3, #1
   2cd6c:	bic	r2, r2, #64	; 0x40
   2cd70:	lsl	r3, r3, #6
   2cd74:	orr	r3, r3, r2
   2cd78:	mov	r2, r3
   2cd7c:	strb	r2, [r1, #6]
   2cd80:	b	2cdf8 <__assert_fail@plt+0x1bb88>
   2cd84:	bl	11150 <__ctype_b_loc@plt>
   2cd88:	mov	r3, r0
   2cd8c:	ldr	r2, [r3]
   2cd90:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2cd94:	ldrb	r3, [r3]
   2cd98:	lsl	r3, r3, #1
   2cd9c:	add	r3, r2, r3
   2cda0:	ldrh	r3, [r3]
   2cda4:	and	r3, r3, #8
   2cda8:	cmp	r3, #0
   2cdac:	bne	2cdc0 <__assert_fail@plt+0x1bb50>
   2cdb0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2cdb4:	ldrb	r3, [r3]
   2cdb8:	cmp	r3, #95	; 0x5f
   2cdbc:	bne	2cdc8 <__assert_fail@plt+0x1bb58>
   2cdc0:	mov	r3, #1
   2cdc4:	b	2cdcc <__assert_fail@plt+0x1bb5c>
   2cdc8:	mov	r3, #0
   2cdcc:	uxtb	r3, r3
   2cdd0:	and	r3, r3, #1
   2cdd4:	uxtb	r3, r3
   2cdd8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2cddc:	ldrb	r2, [r1, #6]
   2cde0:	and	r3, r3, #1
   2cde4:	bic	r2, r2, #64	; 0x40
   2cde8:	lsl	r3, r3, #6
   2cdec:	orr	r3, r3, r2
   2cdf0:	mov	r2, r3
   2cdf4:	strb	r2, [r1, #6]
   2cdf8:	ldrb	r3, [fp, #-5]
   2cdfc:	sub	r3, r3, #10
   2ce00:	cmp	r3, #115	; 0x73
   2ce04:	ldrls	pc, [pc, r3, lsl #2]
   2ce08:	b	2d274 <__assert_fail@plt+0x1c004>
   2ce0c:	ldrdeq	ip, [r2], -ip	; <UNPREDICTABLE>
   2ce10:	andeq	sp, r2, r4, ror r2
   2ce14:	andeq	sp, r2, r4, ror r2
   2ce18:	andeq	sp, r2, r4, ror r2
   2ce1c:	andeq	sp, r2, r4, ror r2
   2ce20:	andeq	sp, r2, r4, ror r2
   2ce24:	andeq	sp, r2, r4, ror r2
   2ce28:	andeq	sp, r2, r4, ror r2
   2ce2c:	andeq	sp, r2, r4, ror r2
   2ce30:	andeq	sp, r2, r4, ror r2
   2ce34:	andeq	sp, r2, r4, ror r2
   2ce38:	andeq	sp, r2, r4, ror r2
   2ce3c:	andeq	sp, r2, r4, ror r2
   2ce40:	andeq	sp, r2, r4, ror r2
   2ce44:	andeq	sp, r2, r4, ror r2
   2ce48:	andeq	sp, r2, r4, ror r2
   2ce4c:	andeq	sp, r2, r4, ror r2
   2ce50:	andeq	sp, r2, r4, ror r2
   2ce54:	andeq	sp, r2, r4, ror r2
   2ce58:	andeq	sp, r2, r4, ror r2
   2ce5c:	andeq	sp, r2, r4, ror r2
   2ce60:	andeq	sp, r2, r4, ror r2
   2ce64:	andeq	sp, r2, r4, ror r2
   2ce68:	andeq	sp, r2, r4, ror r2
   2ce6c:	andeq	sp, r2, r4, ror r2
   2ce70:	andeq	sp, r2, r4, ror r2
   2ce74:	ldrdeq	sp, [r2], -r8
   2ce78:	andeq	sp, r2, r4, ror r2
   2ce7c:	andeq	sp, r2, r4, ror r2
   2ce80:	andeq	sp, r2, r4, ror r2
   2ce84:	strdeq	sp, [r2], -ip
   2ce88:	andeq	sp, r2, ip, lsl r1
   2ce8c:	andeq	sp, r2, ip, lsr #32
   2ce90:	andeq	sp, r2, ip, lsr r0
   2ce94:	andeq	sp, r2, r4, ror r2
   2ce98:	andeq	sp, r2, r4, ror r2
   2ce9c:	andeq	sp, r2, ip, asr #2
   2cea0:	andeq	sp, r2, r4, ror r2
   2cea4:	andeq	sp, r2, r4, ror r2
   2cea8:	andeq	sp, r2, r4, ror r2
   2ceac:	andeq	sp, r2, r4, ror r2
   2ceb0:	andeq	sp, r2, r4, ror r2
   2ceb4:	andeq	sp, r2, r4, ror r2
   2ceb8:	andeq	sp, r2, r4, ror r2
   2cebc:	andeq	sp, r2, r4, ror r2
   2cec0:	andeq	sp, r2, r4, ror r2
   2cec4:	andeq	sp, r2, r4, ror r2
   2cec8:	andeq	sp, r2, r4, ror r2
   2cecc:	andeq	sp, r2, r4, ror r2
   2ced0:	andeq	sp, r2, r4, ror r2
   2ced4:	andeq	sp, r2, r4, ror r2
   2ced8:	andeq	sp, r2, r4, ror r2
   2cedc:	andeq	sp, r2, r4, ror r2
   2cee0:	andeq	sp, r2, ip, rrx
   2cee4:	andeq	sp, r2, r4, ror r2
   2cee8:	andeq	sp, r2, r4, ror r2
   2ceec:	andeq	sp, r2, r4, ror r2
   2cef0:	andeq	sp, r2, r4, ror r2
   2cef4:	andeq	sp, r2, r4, ror r2
   2cef8:	andeq	sp, r2, r4, ror r2
   2cefc:	andeq	sp, r2, r4, ror r2
   2cf00:	andeq	sp, r2, r4, ror r2
   2cf04:	andeq	sp, r2, r4, ror r2
   2cf08:	andeq	sp, r2, r4, ror r2
   2cf0c:	andeq	sp, r2, r4, ror r2
   2cf10:	andeq	sp, r2, r4, ror r2
   2cf14:	andeq	sp, r2, r4, ror r2
   2cf18:	andeq	sp, r2, r4, ror r2
   2cf1c:	andeq	sp, r2, r4, ror r2
   2cf20:	andeq	sp, r2, r4, ror r2
   2cf24:	andeq	sp, r2, r4, ror r2
   2cf28:	andeq	sp, r2, r4, ror r2
   2cf2c:	andeq	sp, r2, r4, ror r2
   2cf30:	andeq	sp, r2, r4, ror r2
   2cf34:	andeq	sp, r2, r4, ror r2
   2cf38:	andeq	sp, r2, r4, ror r2
   2cf3c:	andeq	sp, r2, r4, ror r2
   2cf40:	andeq	sp, r2, r4, ror r2
   2cf44:	andeq	sp, r2, r4, ror r2
   2cf48:	andeq	sp, r2, r4, ror r2
   2cf4c:	andeq	sp, r2, r4, ror r2
   2cf50:	andeq	sp, r2, ip, lsr r1
   2cf54:	andeq	sp, r2, r4, ror r2
   2cf58:	andeq	sp, r2, r4, ror r2
   2cf5c:	andeq	sp, r2, ip, asr r1
   2cf60:	andeq	sp, r2, r4, ror r2
   2cf64:	andeq	sp, r2, r4, ror r2
   2cf68:	andeq	sp, r2, r4, ror r2
   2cf6c:	andeq	sp, r2, r4, ror r2
   2cf70:	andeq	sp, r2, r4, ror r2
   2cf74:	andeq	sp, r2, r4, ror r2
   2cf78:	andeq	sp, r2, r4, ror r2
   2cf7c:	andeq	sp, r2, r4, ror r2
   2cf80:	andeq	sp, r2, r4, ror r2
   2cf84:	andeq	sp, r2, r4, ror r2
   2cf88:	andeq	sp, r2, r4, ror r2
   2cf8c:	andeq	sp, r2, r4, ror r2
   2cf90:	andeq	sp, r2, r4, ror r2
   2cf94:	andeq	sp, r2, r4, ror r2
   2cf98:	andeq	sp, r2, r4, ror r2
   2cf9c:	andeq	sp, r2, r4, ror r2
   2cfa0:	andeq	sp, r2, r4, ror r2
   2cfa4:	andeq	sp, r2, r4, ror r2
   2cfa8:	andeq	sp, r2, r4, ror r2
   2cfac:	andeq	sp, r2, r4, ror r2
   2cfb0:	andeq	sp, r2, r4, ror r2
   2cfb4:	andeq	sp, r2, r4, ror r2
   2cfb8:	andeq	sp, r2, r4, ror r2
   2cfbc:	andeq	sp, r2, r4, ror r2
   2cfc0:	andeq	sp, r2, r4, ror r2
   2cfc4:	andeq	sp, r2, r4, ror r2
   2cfc8:	andeq	sp, r2, r4, ror r2
   2cfcc:	andeq	sp, r2, r4, ror r2
   2cfd0:	muleq	r2, ip, r0
   2cfd4:	strdeq	ip, [r2], -ip	; <UNPREDICTABLE>
   2cfd8:	andeq	sp, r2, ip, asr #1
   2cfdc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2cfe0:	and	r3, r3, #2048	; 0x800
   2cfe4:	cmp	r3, #0
   2cfe8:	beq	2d27c <__assert_fail@plt+0x1c00c>
   2cfec:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2cff0:	mov	r2, #10
   2cff4:	strb	r2, [r3, #4]
   2cff8:	b	2d27c <__assert_fail@plt+0x1c00c>
   2cffc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2d000:	and	r3, r3, #1024	; 0x400
   2d004:	cmp	r3, #0
   2d008:	bne	2d284 <__assert_fail@plt+0x1c014>
   2d00c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2d010:	and	r3, r3, #32768	; 0x8000
   2d014:	cmp	r3, #0
   2d018:	beq	2d284 <__assert_fail@plt+0x1c014>
   2d01c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2d020:	mov	r2, #10
   2d024:	strb	r2, [r3, #4]
   2d028:	b	2d284 <__assert_fail@plt+0x1c014>
   2d02c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2d030:	mov	r2, #11
   2d034:	strb	r2, [r3, #4]
   2d038:	b	2d2c0 <__assert_fail@plt+0x1c050>
   2d03c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2d040:	and	r3, r3, #1024	; 0x400
   2d044:	cmp	r3, #0
   2d048:	bne	2d28c <__assert_fail@plt+0x1c01c>
   2d04c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2d050:	and	r3, r3, #2
   2d054:	cmp	r3, #0
   2d058:	bne	2d28c <__assert_fail@plt+0x1c01c>
   2d05c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2d060:	mov	r2, #18
   2d064:	strb	r2, [r3, #4]
   2d068:	b	2d28c <__assert_fail@plt+0x1c01c>
   2d06c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2d070:	and	r3, r3, #1024	; 0x400
   2d074:	cmp	r3, #0
   2d078:	bne	2d294 <__assert_fail@plt+0x1c024>
   2d07c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2d080:	and	r3, r3, #2
   2d084:	cmp	r3, #0
   2d088:	bne	2d294 <__assert_fail@plt+0x1c024>
   2d08c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2d090:	mov	r2, #19
   2d094:	strb	r2, [r3, #4]
   2d098:	b	2d294 <__assert_fail@plt+0x1c024>
   2d09c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2d0a0:	and	r3, r3, #512	; 0x200
   2d0a4:	cmp	r3, #0
   2d0a8:	beq	2d29c <__assert_fail@plt+0x1c02c>
   2d0ac:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2d0b0:	and	r3, r3, #4096	; 0x1000
   2d0b4:	cmp	r3, #0
   2d0b8:	beq	2d29c <__assert_fail@plt+0x1c02c>
   2d0bc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2d0c0:	mov	r2, #23
   2d0c4:	strb	r2, [r3, #4]
   2d0c8:	b	2d29c <__assert_fail@plt+0x1c02c>
   2d0cc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2d0d0:	and	r3, r3, #512	; 0x200
   2d0d4:	cmp	r3, #0
   2d0d8:	beq	2d2a4 <__assert_fail@plt+0x1c034>
   2d0dc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2d0e0:	and	r3, r3, #4096	; 0x1000
   2d0e4:	cmp	r3, #0
   2d0e8:	beq	2d2a4 <__assert_fail@plt+0x1c034>
   2d0ec:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2d0f0:	mov	r2, #24
   2d0f4:	strb	r2, [r3, #4]
   2d0f8:	b	2d2a4 <__assert_fail@plt+0x1c034>
   2d0fc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2d100:	and	r3, r3, #8192	; 0x2000
   2d104:	cmp	r3, #0
   2d108:	beq	2d2ac <__assert_fail@plt+0x1c03c>
   2d10c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2d110:	mov	r2, #8
   2d114:	strb	r2, [r3, #4]
   2d118:	b	2d2ac <__assert_fail@plt+0x1c03c>
   2d11c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2d120:	and	r3, r3, #8192	; 0x2000
   2d124:	cmp	r3, #0
   2d128:	beq	2d2b4 <__assert_fail@plt+0x1c044>
   2d12c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2d130:	mov	r2, #9
   2d134:	strb	r2, [r3, #4]
   2d138:	b	2d2b4 <__assert_fail@plt+0x1c044>
   2d13c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2d140:	mov	r2, #20
   2d144:	strb	r2, [r3, #4]
   2d148:	b	2d2c0 <__assert_fail@plt+0x1c050>
   2d14c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2d150:	mov	r2, #5
   2d154:	strb	r2, [r3, #4]
   2d158:	b	2d2c0 <__assert_fail@plt+0x1c050>
   2d15c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2d160:	ldr	r3, [pc, #360]	; 2d2d0 <__assert_fail@plt+0x1c060>
   2d164:	and	r3, r3, r2
   2d168:	cmp	r3, #0
   2d16c:	bne	2d1bc <__assert_fail@plt+0x1bf4c>
   2d170:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2d174:	ldr	r3, [r3, #40]	; 0x28
   2d178:	cmp	r3, #0
   2d17c:	beq	2d1bc <__assert_fail@plt+0x1bf4c>
   2d180:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2d184:	ldr	r2, [r3, #4]
   2d188:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2d18c:	ldr	r3, [r3, #40]	; 0x28
   2d190:	sub	r3, r3, #1
   2d194:	add	r3, r2, r3
   2d198:	ldrb	r3, [r3]
   2d19c:	strb	r3, [fp, #-17]	; 0xffffffef
   2d1a0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2d1a4:	and	r3, r3, #2048	; 0x800
   2d1a8:	cmp	r3, #0
   2d1ac:	beq	2d2c0 <__assert_fail@plt+0x1c050>
   2d1b0:	ldrb	r3, [fp, #-17]	; 0xffffffef
   2d1b4:	cmp	r3, #10
   2d1b8:	bne	2d2c0 <__assert_fail@plt+0x1c050>
   2d1bc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2d1c0:	mov	r2, #12
   2d1c4:	strb	r2, [r3, #4]
   2d1c8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2d1cc:	mov	r2, #16
   2d1d0:	str	r2, [r3]
   2d1d4:	b	2d2c0 <__assert_fail@plt+0x1c050>
   2d1d8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2d1dc:	and	r3, r3, #8
   2d1e0:	cmp	r3, #0
   2d1e4:	bne	2d258 <__assert_fail@plt+0x1bfe8>
   2d1e8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2d1ec:	ldr	r3, [r3, #40]	; 0x28
   2d1f0:	add	r2, r3, #1
   2d1f4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2d1f8:	ldr	r3, [r3, #48]	; 0x30
   2d1fc:	cmp	r2, r3
   2d200:	beq	2d258 <__assert_fail@plt+0x1bfe8>
   2d204:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2d208:	ldr	r3, [r3, #40]	; 0x28
   2d20c:	add	r2, r3, #1
   2d210:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2d214:	str	r2, [r3, #40]	; 0x28
   2d218:	sub	r3, fp, #28
   2d21c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2d220:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2d224:	mov	r0, r3
   2d228:	bl	2c59c <__assert_fail@plt+0x1b32c>
   2d22c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2d230:	ldr	r3, [r3, #40]	; 0x28
   2d234:	sub	r2, r3, #1
   2d238:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2d23c:	str	r2, [r3, #40]	; 0x28
   2d240:	ldrb	r3, [fp, #-24]	; 0xffffffe8
   2d244:	cmp	r3, #10
   2d248:	beq	2d258 <__assert_fail@plt+0x1bfe8>
   2d24c:	ldrb	r3, [fp, #-24]	; 0xffffffe8
   2d250:	cmp	r3, #9
   2d254:	bne	2d2bc <__assert_fail@plt+0x1c04c>
   2d258:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2d25c:	mov	r2, #12
   2d260:	strb	r2, [r3, #4]
   2d264:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2d268:	mov	r2, #32
   2d26c:	str	r2, [r3]
   2d270:	b	2d2c0 <__assert_fail@plt+0x1c050>
   2d274:	nop			; (mov r0, r0)
   2d278:	b	2d2c0 <__assert_fail@plt+0x1c050>
   2d27c:	nop			; (mov r0, r0)
   2d280:	b	2d2c0 <__assert_fail@plt+0x1c050>
   2d284:	nop			; (mov r0, r0)
   2d288:	b	2d2c0 <__assert_fail@plt+0x1c050>
   2d28c:	nop			; (mov r0, r0)
   2d290:	b	2d2c0 <__assert_fail@plt+0x1c050>
   2d294:	nop			; (mov r0, r0)
   2d298:	b	2d2c0 <__assert_fail@plt+0x1c050>
   2d29c:	nop			; (mov r0, r0)
   2d2a0:	b	2d2c0 <__assert_fail@plt+0x1c050>
   2d2a4:	nop			; (mov r0, r0)
   2d2a8:	b	2d2c0 <__assert_fail@plt+0x1c050>
   2d2ac:	nop			; (mov r0, r0)
   2d2b0:	b	2d2c0 <__assert_fail@plt+0x1c050>
   2d2b4:	nop			; (mov r0, r0)
   2d2b8:	b	2d2c0 <__assert_fail@plt+0x1c050>
   2d2bc:	nop			; (mov r0, r0)
   2d2c0:	mov	r3, #1
   2d2c4:	mov	r0, r3
   2d2c8:	sub	sp, fp, #4
   2d2cc:	pop	{fp, pc}
   2d2d0:	addeq	r0, r0, r8
   2d2d4:	push	{fp}		; (str fp, [sp, #-4]!)
   2d2d8:	add	fp, sp, #0
   2d2dc:	sub	sp, sp, #36	; 0x24
   2d2e0:	str	r0, [fp, #-24]	; 0xffffffe8
   2d2e4:	str	r1, [fp, #-28]	; 0xffffffe4
   2d2e8:	str	r2, [fp, #-32]	; 0xffffffe0
   2d2ec:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2d2f0:	ldr	r2, [r3, #56]	; 0x38
   2d2f4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2d2f8:	ldr	r3, [r3, #40]	; 0x28
   2d2fc:	cmp	r2, r3
   2d300:	bgt	2d318 <__assert_fail@plt+0x1c0a8>
   2d304:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d308:	mov	r2, #2
   2d30c:	strb	r2, [r3, #4]
   2d310:	mov	r3, #0
   2d314:	b	2d574 <__assert_fail@plt+0x1c304>
   2d318:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2d31c:	ldr	r3, [r3, #4]
   2d320:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2d324:	ldr	r2, [r2, #40]	; 0x28
   2d328:	add	r3, r3, r2
   2d32c:	ldrb	r3, [r3]
   2d330:	strb	r3, [fp, #-13]
   2d334:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d338:	ldrb	r2, [fp, #-13]
   2d33c:	strb	r2, [r3]
   2d340:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2d344:	ldr	r3, [r3, #80]	; 0x50
   2d348:	cmp	r3, #1
   2d34c:	ble	2d3a0 <__assert_fail@plt+0x1c130>
   2d350:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2d354:	ldr	r2, [r3, #40]	; 0x28
   2d358:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2d35c:	ldr	r3, [r3, #28]
   2d360:	cmp	r2, r3
   2d364:	beq	2d3a0 <__assert_fail@plt+0x1c130>
   2d368:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2d36c:	ldr	r2, [r3, #8]
   2d370:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2d374:	ldr	r3, [r3, #40]	; 0x28
   2d378:	lsl	r3, r3, #2
   2d37c:	add	r3, r2, r3
   2d380:	ldr	r3, [r3]
   2d384:	cmn	r3, #1
   2d388:	bne	2d3a0 <__assert_fail@plt+0x1c130>
   2d38c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d390:	mov	r2, #1
   2d394:	strb	r2, [r3, #4]
   2d398:	mov	r3, #1
   2d39c:	b	2d574 <__assert_fail@plt+0x1c304>
   2d3a0:	ldrb	r3, [fp, #-13]
   2d3a4:	cmp	r3, #92	; 0x5c
   2d3a8:	bne	2d428 <__assert_fail@plt+0x1c1b8>
   2d3ac:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2d3b0:	and	r3, r3, #1
   2d3b4:	cmp	r3, #0
   2d3b8:	beq	2d428 <__assert_fail@plt+0x1c1b8>
   2d3bc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2d3c0:	ldr	r3, [r3, #40]	; 0x28
   2d3c4:	add	r2, r3, #1
   2d3c8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2d3cc:	ldr	r3, [r3, #48]	; 0x30
   2d3d0:	cmp	r2, r3
   2d3d4:	bge	2d428 <__assert_fail@plt+0x1c1b8>
   2d3d8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2d3dc:	ldr	r3, [r3, #40]	; 0x28
   2d3e0:	add	r2, r3, #1
   2d3e4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2d3e8:	str	r2, [r3, #40]	; 0x28
   2d3ec:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2d3f0:	ldr	r3, [r3, #4]
   2d3f4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2d3f8:	ldr	r2, [r2, #40]	; 0x28
   2d3fc:	add	r3, r3, r2
   2d400:	ldrb	r3, [r3]
   2d404:	strb	r3, [fp, #-14]
   2d408:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d40c:	ldrb	r2, [fp, #-14]
   2d410:	strb	r2, [r3]
   2d414:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d418:	mov	r2, #1
   2d41c:	strb	r2, [r3, #4]
   2d420:	mov	r3, #1
   2d424:	b	2d574 <__assert_fail@plt+0x1c304>
   2d428:	ldrb	r3, [fp, #-13]
   2d42c:	cmp	r3, #91	; 0x5b
   2d430:	bne	2d518 <__assert_fail@plt+0x1c2a8>
   2d434:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2d438:	ldr	r3, [r3, #40]	; 0x28
   2d43c:	add	r2, r3, #1
   2d440:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2d444:	ldr	r3, [r3, #48]	; 0x30
   2d448:	cmp	r2, r3
   2d44c:	bge	2d474 <__assert_fail@plt+0x1c204>
   2d450:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2d454:	ldr	r2, [r3, #4]
   2d458:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2d45c:	ldr	r3, [r3, #40]	; 0x28
   2d460:	add	r3, r3, #1
   2d464:	add	r3, r2, r3
   2d468:	ldrb	r3, [r3]
   2d46c:	strb	r3, [fp, #-5]
   2d470:	b	2d47c <__assert_fail@plt+0x1c20c>
   2d474:	mov	r3, #0
   2d478:	strb	r3, [fp, #-5]
   2d47c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d480:	ldrb	r2, [fp, #-5]
   2d484:	strb	r2, [r3]
   2d488:	mov	r3, #2
   2d48c:	str	r3, [fp, #-12]
   2d490:	ldrb	r3, [fp, #-5]
   2d494:	cmp	r3, #58	; 0x3a
   2d498:	beq	2d4cc <__assert_fail@plt+0x1c25c>
   2d49c:	cmp	r3, #61	; 0x3d
   2d4a0:	beq	2d4bc <__assert_fail@plt+0x1c24c>
   2d4a4:	cmp	r3, #46	; 0x2e
   2d4a8:	bne	2d4ec <__assert_fail@plt+0x1c27c>
   2d4ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d4b0:	mov	r2, #26
   2d4b4:	strb	r2, [r3, #4]
   2d4b8:	b	2d510 <__assert_fail@plt+0x1c2a0>
   2d4bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d4c0:	mov	r2, #28
   2d4c4:	strb	r2, [r3, #4]
   2d4c8:	b	2d510 <__assert_fail@plt+0x1c2a0>
   2d4cc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2d4d0:	and	r3, r3, #4
   2d4d4:	cmp	r3, #0
   2d4d8:	beq	2d4ec <__assert_fail@plt+0x1c27c>
   2d4dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d4e0:	mov	r2, #30
   2d4e4:	strb	r2, [r3, #4]
   2d4e8:	b	2d510 <__assert_fail@plt+0x1c2a0>
   2d4ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d4f0:	mov	r2, #1
   2d4f4:	strb	r2, [r3, #4]
   2d4f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d4fc:	ldrb	r2, [fp, #-13]
   2d500:	strb	r2, [r3]
   2d504:	mov	r3, #1
   2d508:	str	r3, [fp, #-12]
   2d50c:	nop			; (mov r0, r0)
   2d510:	ldr	r3, [fp, #-12]
   2d514:	b	2d574 <__assert_fail@plt+0x1c304>
   2d518:	ldrb	r3, [fp, #-13]
   2d51c:	cmp	r3, #93	; 0x5d
   2d520:	beq	2d544 <__assert_fail@plt+0x1c2d4>
   2d524:	cmp	r3, #94	; 0x5e
   2d528:	beq	2d554 <__assert_fail@plt+0x1c2e4>
   2d52c:	cmp	r3, #45	; 0x2d
   2d530:	bne	2d564 <__assert_fail@plt+0x1c2f4>
   2d534:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d538:	mov	r2, #22
   2d53c:	strb	r2, [r3, #4]
   2d540:	b	2d570 <__assert_fail@plt+0x1c300>
   2d544:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d548:	mov	r2, #21
   2d54c:	strb	r2, [r3, #4]
   2d550:	b	2d570 <__assert_fail@plt+0x1c300>
   2d554:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d558:	mov	r2, #25
   2d55c:	strb	r2, [r3, #4]
   2d560:	b	2d570 <__assert_fail@plt+0x1c300>
   2d564:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d568:	mov	r2, #1
   2d56c:	strb	r2, [r3, #4]
   2d570:	mov	r3, #1
   2d574:	mov	r0, r3
   2d578:	add	sp, fp, #0
   2d57c:	pop	{fp}		; (ldr fp, [sp], #4)
   2d580:	bx	lr
   2d584:	push	{fp, lr}
   2d588:	add	fp, sp, #4
   2d58c:	sub	sp, sp, #48	; 0x30
   2d590:	str	r0, [fp, #-32]	; 0xffffffe0
   2d594:	str	r1, [fp, #-36]	; 0xffffffdc
   2d598:	str	r2, [fp, #-40]	; 0xffffffd8
   2d59c:	str	r3, [fp, #-44]	; 0xffffffd4
   2d5a0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2d5a4:	ldr	r3, [r3]
   2d5a8:	str	r3, [fp, #-12]
   2d5ac:	ldr	r3, [fp, #-12]
   2d5b0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2d5b4:	str	r2, [r3, #128]	; 0x80
   2d5b8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2d5bc:	orr	r2, r3, #8388608	; 0x800000
   2d5c0:	sub	r3, fp, #28
   2d5c4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2d5c8:	mov	r0, r3
   2d5cc:	bl	2c550 <__assert_fail@plt+0x1b2e0>
   2d5d0:	sub	r2, fp, #28
   2d5d4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2d5d8:	str	r3, [sp, #4]
   2d5dc:	mov	r3, #0
   2d5e0:	str	r3, [sp]
   2d5e4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2d5e8:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2d5ec:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2d5f0:	bl	2d6e0 <__assert_fail@plt+0x1c470>
   2d5f4:	str	r0, [fp, #-16]
   2d5f8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2d5fc:	ldr	r3, [r3]
   2d600:	cmp	r3, #0
   2d604:	movne	r3, #1
   2d608:	moveq	r3, #0
   2d60c:	uxtb	r3, r3
   2d610:	cmp	r3, #0
   2d614:	beq	2d63c <__assert_fail@plt+0x1c3cc>
   2d618:	ldr	r3, [fp, #-16]
   2d61c:	cmp	r3, #0
   2d620:	moveq	r3, #1
   2d624:	movne	r3, #0
   2d628:	uxtb	r3, r3
   2d62c:	cmp	r3, #0
   2d630:	beq	2d63c <__assert_fail@plt+0x1c3cc>
   2d634:	mov	r3, #0
   2d638:	b	2d6d4 <__assert_fail@plt+0x1c464>
   2d63c:	mov	r3, #2
   2d640:	mov	r2, #0
   2d644:	mov	r1, #0
   2d648:	ldr	r0, [fp, #-12]
   2d64c:	bl	3113c <__assert_fail@plt+0x1fecc>
   2d650:	str	r0, [fp, #-20]	; 0xffffffec
   2d654:	ldr	r3, [fp, #-16]
   2d658:	cmp	r3, #0
   2d65c:	beq	2d67c <__assert_fail@plt+0x1c40c>
   2d660:	mov	r3, #16
   2d664:	ldr	r2, [fp, #-20]	; 0xffffffec
   2d668:	ldr	r1, [fp, #-16]
   2d66c:	ldr	r0, [fp, #-12]
   2d670:	bl	3113c <__assert_fail@plt+0x1fecc>
   2d674:	str	r0, [fp, #-8]
   2d678:	b	2d684 <__assert_fail@plt+0x1c414>
   2d67c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2d680:	str	r3, [fp, #-8]
   2d684:	ldr	r3, [fp, #-20]	; 0xffffffec
   2d688:	cmp	r3, #0
   2d68c:	moveq	r3, #1
   2d690:	movne	r3, #0
   2d694:	uxtb	r3, r3
   2d698:	cmp	r3, #0
   2d69c:	bne	2d6bc <__assert_fail@plt+0x1c44c>
   2d6a0:	ldr	r3, [fp, #-8]
   2d6a4:	cmp	r3, #0
   2d6a8:	moveq	r3, #1
   2d6ac:	movne	r3, #0
   2d6b0:	uxtb	r3, r3
   2d6b4:	cmp	r3, #0
   2d6b8:	beq	2d6d0 <__assert_fail@plt+0x1c460>
   2d6bc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2d6c0:	mov	r2, #12
   2d6c4:	str	r2, [r3]
   2d6c8:	mov	r3, #0
   2d6cc:	b	2d6d4 <__assert_fail@plt+0x1c464>
   2d6d0:	ldr	r3, [fp, #-8]
   2d6d4:	mov	r0, r3
   2d6d8:	sub	sp, fp, #4
   2d6dc:	pop	{fp, pc}
   2d6e0:	push	{fp, lr}
   2d6e4:	add	fp, sp, #4
   2d6e8:	sub	sp, sp, #48	; 0x30
   2d6ec:	str	r0, [fp, #-32]	; 0xffffffe0
   2d6f0:	str	r1, [fp, #-36]	; 0xffffffdc
   2d6f4:	str	r2, [fp, #-40]	; 0xffffffd8
   2d6f8:	str	r3, [fp, #-44]	; 0xffffffd4
   2d6fc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2d700:	ldr	r3, [r3]
   2d704:	str	r3, [fp, #-16]
   2d708:	mov	r3, #0
   2d70c:	str	r3, [fp, #-12]
   2d710:	ldr	r3, [fp, #-16]
   2d714:	ldr	r3, [r3, #84]	; 0x54
   2d718:	str	r3, [fp, #-20]	; 0xffffffec
   2d71c:	ldr	r3, [fp, #8]
   2d720:	str	r3, [sp, #4]
   2d724:	ldr	r3, [fp, #4]
   2d728:	str	r3, [sp]
   2d72c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2d730:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2d734:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2d738:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2d73c:	bl	2d90c <__assert_fail@plt+0x1c69c>
   2d740:	str	r0, [fp, #-8]
   2d744:	ldr	r3, [fp, #8]
   2d748:	ldr	r3, [r3]
   2d74c:	cmp	r3, #0
   2d750:	movne	r3, #1
   2d754:	moveq	r3, #0
   2d758:	uxtb	r3, r3
   2d75c:	cmp	r3, #0
   2d760:	beq	2d8e8 <__assert_fail@plt+0x1c678>
   2d764:	ldr	r3, [fp, #-8]
   2d768:	cmp	r3, #0
   2d76c:	moveq	r3, #1
   2d770:	movne	r3, #0
   2d774:	uxtb	r3, r3
   2d778:	cmp	r3, #0
   2d77c:	beq	2d8e8 <__assert_fail@plt+0x1c678>
   2d780:	mov	r3, #0
   2d784:	b	2d8fc <__assert_fail@plt+0x1c68c>
   2d788:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2d78c:	orr	r3, r3, #8388608	; 0x800000
   2d790:	mov	r2, r3
   2d794:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2d798:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2d79c:	bl	2c550 <__assert_fail@plt+0x1b2e0>
   2d7a0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2d7a4:	ldrb	r3, [r3, #4]
   2d7a8:	cmp	r3, #10
   2d7ac:	beq	2d898 <__assert_fail@plt+0x1c628>
   2d7b0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2d7b4:	ldrb	r3, [r3, #4]
   2d7b8:	cmp	r3, #2
   2d7bc:	beq	2d898 <__assert_fail@plt+0x1c628>
   2d7c0:	ldr	r3, [fp, #4]
   2d7c4:	cmp	r3, #0
   2d7c8:	beq	2d7dc <__assert_fail@plt+0x1c56c>
   2d7cc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2d7d0:	ldrb	r3, [r3, #4]
   2d7d4:	cmp	r3, #9
   2d7d8:	beq	2d898 <__assert_fail@plt+0x1c628>
   2d7dc:	ldr	r3, [fp, #-16]
   2d7e0:	ldr	r3, [r3, #84]	; 0x54
   2d7e4:	str	r3, [fp, #-24]	; 0xffffffe8
   2d7e8:	ldr	r3, [fp, #-16]
   2d7ec:	ldr	r2, [fp, #-20]	; 0xffffffec
   2d7f0:	str	r2, [r3, #84]	; 0x54
   2d7f4:	ldr	r3, [fp, #8]
   2d7f8:	str	r3, [sp, #4]
   2d7fc:	ldr	r3, [fp, #4]
   2d800:	str	r3, [sp]
   2d804:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2d808:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2d80c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2d810:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2d814:	bl	2d90c <__assert_fail@plt+0x1c69c>
   2d818:	str	r0, [fp, #-12]
   2d81c:	ldr	r3, [fp, #8]
   2d820:	ldr	r3, [r3]
   2d824:	cmp	r3, #0
   2d828:	movne	r3, #1
   2d82c:	moveq	r3, #0
   2d830:	uxtb	r3, r3
   2d834:	cmp	r3, #0
   2d838:	beq	2d87c <__assert_fail@plt+0x1c60c>
   2d83c:	ldr	r3, [fp, #-12]
   2d840:	cmp	r3, #0
   2d844:	moveq	r3, #1
   2d848:	movne	r3, #0
   2d84c:	uxtb	r3, r3
   2d850:	cmp	r3, #0
   2d854:	beq	2d87c <__assert_fail@plt+0x1c60c>
   2d858:	ldr	r3, [fp, #-8]
   2d85c:	cmp	r3, #0
   2d860:	beq	2d874 <__assert_fail@plt+0x1c604>
   2d864:	mov	r2, #0
   2d868:	ldr	r1, [pc, #152]	; 2d908 <__assert_fail@plt+0x1c698>
   2d86c:	ldr	r0, [fp, #-8]
   2d870:	bl	2aab0 <__assert_fail@plt+0x19840>
   2d874:	mov	r3, #0
   2d878:	b	2d8fc <__assert_fail@plt+0x1c68c>
   2d87c:	ldr	r3, [fp, #-16]
   2d880:	ldr	r2, [r3, #84]	; 0x54
   2d884:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2d888:	orr	r2, r2, r3
   2d88c:	ldr	r3, [fp, #-16]
   2d890:	str	r2, [r3, #84]	; 0x54
   2d894:	b	2d8a0 <__assert_fail@plt+0x1c630>
   2d898:	mov	r3, #0
   2d89c:	str	r3, [fp, #-12]
   2d8a0:	mov	r3, #10
   2d8a4:	ldr	r2, [fp, #-12]
   2d8a8:	ldr	r1, [fp, #-8]
   2d8ac:	ldr	r0, [fp, #-16]
   2d8b0:	bl	3113c <__assert_fail@plt+0x1fecc>
   2d8b4:	str	r0, [fp, #-8]
   2d8b8:	ldr	r3, [fp, #-8]
   2d8bc:	cmp	r3, #0
   2d8c0:	moveq	r3, #1
   2d8c4:	movne	r3, #0
   2d8c8:	uxtb	r3, r3
   2d8cc:	cmp	r3, #0
   2d8d0:	beq	2d8e8 <__assert_fail@plt+0x1c678>
   2d8d4:	ldr	r3, [fp, #8]
   2d8d8:	mov	r2, #12
   2d8dc:	str	r2, [r3]
   2d8e0:	mov	r3, #0
   2d8e4:	b	2d8fc <__assert_fail@plt+0x1c68c>
   2d8e8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2d8ec:	ldrb	r3, [r3, #4]
   2d8f0:	cmp	r3, #10
   2d8f4:	beq	2d788 <__assert_fail@plt+0x1c518>
   2d8f8:	ldr	r3, [fp, #-8]
   2d8fc:	mov	r0, r3
   2d900:	sub	sp, fp, #4
   2d904:	pop	{fp, pc}
   2d908:	strdeq	r1, [r3], -ip
   2d90c:	push	{fp, lr}
   2d910:	add	fp, sp, #4
   2d914:	sub	sp, sp, #40	; 0x28
   2d918:	str	r0, [fp, #-24]	; 0xffffffe8
   2d91c:	str	r1, [fp, #-28]	; 0xffffffe4
   2d920:	str	r2, [fp, #-32]	; 0xffffffe0
   2d924:	str	r3, [fp, #-36]	; 0xffffffdc
   2d928:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2d92c:	ldr	r3, [r3]
   2d930:	str	r3, [fp, #-12]
   2d934:	ldr	r3, [fp, #8]
   2d938:	str	r3, [sp, #4]
   2d93c:	ldr	r3, [fp, #4]
   2d940:	str	r3, [sp]
   2d944:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2d948:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2d94c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2d950:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2d954:	bl	2db08 <__assert_fail@plt+0x1c898>
   2d958:	str	r0, [fp, #-8]
   2d95c:	ldr	r3, [fp, #8]
   2d960:	ldr	r3, [r3]
   2d964:	cmp	r3, #0
   2d968:	movne	r3, #1
   2d96c:	moveq	r3, #0
   2d970:	uxtb	r3, r3
   2d974:	cmp	r3, #0
   2d978:	beq	2dab8 <__assert_fail@plt+0x1c848>
   2d97c:	ldr	r3, [fp, #-8]
   2d980:	cmp	r3, #0
   2d984:	moveq	r3, #1
   2d988:	movne	r3, #0
   2d98c:	uxtb	r3, r3
   2d990:	cmp	r3, #0
   2d994:	beq	2dab8 <__assert_fail@plt+0x1c848>
   2d998:	mov	r3, #0
   2d99c:	b	2daf8 <__assert_fail@plt+0x1c888>
   2d9a0:	ldr	r3, [fp, #8]
   2d9a4:	str	r3, [sp, #4]
   2d9a8:	ldr	r3, [fp, #4]
   2d9ac:	str	r3, [sp]
   2d9b0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2d9b4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2d9b8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2d9bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2d9c0:	bl	2db08 <__assert_fail@plt+0x1c898>
   2d9c4:	str	r0, [fp, #-16]
   2d9c8:	ldr	r3, [fp, #8]
   2d9cc:	ldr	r3, [r3]
   2d9d0:	cmp	r3, #0
   2d9d4:	movne	r3, #1
   2d9d8:	moveq	r3, #0
   2d9dc:	uxtb	r3, r3
   2d9e0:	cmp	r3, #0
   2d9e4:	beq	2da28 <__assert_fail@plt+0x1c7b8>
   2d9e8:	ldr	r3, [fp, #-16]
   2d9ec:	cmp	r3, #0
   2d9f0:	moveq	r3, #1
   2d9f4:	movne	r3, #0
   2d9f8:	uxtb	r3, r3
   2d9fc:	cmp	r3, #0
   2da00:	beq	2da28 <__assert_fail@plt+0x1c7b8>
   2da04:	ldr	r3, [fp, #-8]
   2da08:	cmp	r3, #0
   2da0c:	beq	2da20 <__assert_fail@plt+0x1c7b0>
   2da10:	mov	r2, #0
   2da14:	ldr	r1, [pc, #232]	; 2db04 <__assert_fail@plt+0x1c894>
   2da18:	ldr	r0, [fp, #-8]
   2da1c:	bl	2aab0 <__assert_fail@plt+0x19840>
   2da20:	mov	r3, #0
   2da24:	b	2daf8 <__assert_fail@plt+0x1c888>
   2da28:	ldr	r3, [fp, #-8]
   2da2c:	cmp	r3, #0
   2da30:	beq	2daa4 <__assert_fail@plt+0x1c834>
   2da34:	ldr	r3, [fp, #-16]
   2da38:	cmp	r3, #0
   2da3c:	beq	2daa4 <__assert_fail@plt+0x1c834>
   2da40:	mov	r3, #16
   2da44:	ldr	r2, [fp, #-16]
   2da48:	ldr	r1, [fp, #-8]
   2da4c:	ldr	r0, [fp, #-12]
   2da50:	bl	3113c <__assert_fail@plt+0x1fecc>
   2da54:	str	r0, [fp, #-20]	; 0xffffffec
   2da58:	ldr	r3, [fp, #-20]	; 0xffffffec
   2da5c:	cmp	r3, #0
   2da60:	bne	2da98 <__assert_fail@plt+0x1c828>
   2da64:	mov	r2, #0
   2da68:	ldr	r1, [pc, #148]	; 2db04 <__assert_fail@plt+0x1c894>
   2da6c:	ldr	r0, [fp, #-16]
   2da70:	bl	2aab0 <__assert_fail@plt+0x19840>
   2da74:	mov	r2, #0
   2da78:	ldr	r1, [pc, #132]	; 2db04 <__assert_fail@plt+0x1c894>
   2da7c:	ldr	r0, [fp, #-8]
   2da80:	bl	2aab0 <__assert_fail@plt+0x19840>
   2da84:	ldr	r3, [fp, #8]
   2da88:	mov	r2, #12
   2da8c:	str	r2, [r3]
   2da90:	mov	r3, #0
   2da94:	b	2daf8 <__assert_fail@plt+0x1c888>
   2da98:	ldr	r3, [fp, #-20]	; 0xffffffec
   2da9c:	str	r3, [fp, #-8]
   2daa0:	b	2dab8 <__assert_fail@plt+0x1c848>
   2daa4:	ldr	r3, [fp, #-8]
   2daa8:	cmp	r3, #0
   2daac:	bne	2dab8 <__assert_fail@plt+0x1c848>
   2dab0:	ldr	r3, [fp, #-16]
   2dab4:	str	r3, [fp, #-8]
   2dab8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2dabc:	ldrb	r3, [r3, #4]
   2dac0:	cmp	r3, #10
   2dac4:	beq	2daf4 <__assert_fail@plt+0x1c884>
   2dac8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2dacc:	ldrb	r3, [r3, #4]
   2dad0:	cmp	r3, #2
   2dad4:	beq	2daf4 <__assert_fail@plt+0x1c884>
   2dad8:	ldr	r3, [fp, #4]
   2dadc:	cmp	r3, #0
   2dae0:	beq	2d9a0 <__assert_fail@plt+0x1c730>
   2dae4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2dae8:	ldrb	r3, [r3, #4]
   2daec:	cmp	r3, #9
   2daf0:	bne	2d9a0 <__assert_fail@plt+0x1c730>
   2daf4:	ldr	r3, [fp, #-8]
   2daf8:	mov	r0, r3
   2dafc:	sub	sp, fp, #4
   2db00:	pop	{fp, pc}
   2db04:	strdeq	r1, [r3], -ip
   2db08:	push	{fp, lr}
   2db0c:	add	fp, sp, #4
   2db10:	sub	sp, sp, #48	; 0x30
   2db14:	str	r0, [fp, #-32]	; 0xffffffe0
   2db18:	str	r1, [fp, #-36]	; 0xffffffdc
   2db1c:	str	r2, [fp, #-40]	; 0xffffffd8
   2db20:	str	r3, [fp, #-44]	; 0xffffffd4
   2db24:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2db28:	ldr	r3, [r3]
   2db2c:	str	r3, [fp, #-16]
   2db30:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2db34:	ldrb	r3, [r3, #4]
   2db38:	sub	r3, r3, #1
   2db3c:	cmp	r3, #35	; 0x23
   2db40:	ldrls	pc, [pc, r3, lsl #2]
   2db44:	b	2e340 <__assert_fail@plt+0x1d0d0>
   2db48:	ldrdeq	sp, [r2], -r8
   2db4c:	andeq	lr, r2, r4, lsr #6
   2db50:	andeq	lr, r2, r0, asr #6
   2db54:	andeq	sp, r2, ip, ror #27
   2db58:			; <UNDEFINED> instruction: 0x0002e1b0
   2db5c:	andeq	lr, r2, r0, asr #6
   2db60:	andeq	lr, r2, r0, asr #6
   2db64:	andeq	sp, r2, r8, lsl sp
   2db68:	andeq	sp, r2, ip, asr #30
   2db6c:	andeq	lr, r2, r4, lsr #6
   2db70:	ldrdeq	sp, [r2], -ip
   2db74:	ldrdeq	sp, [r2], -r4
   2db78:	andeq	lr, r2, r0, asr #6
   2db7c:	andeq	lr, r2, r0, asr #6
   2db80:	andeq	lr, r2, r0, asr #6
   2db84:	andeq	lr, r2, r0, asr #6
   2db88:	andeq	lr, r2, r0, asr #6
   2db8c:	ldrdeq	sp, [r2], -ip
   2db90:	ldrdeq	sp, [r2], -ip
   2db94:	andeq	sp, r2, r8, lsl #27
   2db98:	andeq	lr, r2, r0, asr #6
   2db9c:	andeq	lr, r2, r0, asr #6
   2dba0:			; <UNDEFINED> instruction: 0x0002deb8
   2dba4:	andeq	sp, r2, r0, lsl #31
   2dba8:	andeq	lr, r2, r0, asr #6
   2dbac:	andeq	lr, r2, r0, asr #6
   2dbb0:	andeq	lr, r2, r0, asr #6
   2dbb4:	andeq	lr, r2, r0, asr #6
   2dbb8:	andeq	lr, r2, r0, asr #6
   2dbbc:	andeq	lr, r2, r0, asr #6
   2dbc0:	andeq	lr, r2, r0, asr #6
   2dbc4:	andeq	lr, r2, ip, lsl r2
   2dbc8:	andeq	lr, r2, ip, lsl r2
   2dbcc:	andeq	lr, r2, r0, lsr #5
   2dbd0:	andeq	lr, r2, r0, lsr #5
   2dbd4:	andeq	lr, r2, ip, lsr #6
   2dbd8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2dbdc:	mov	r2, #0
   2dbe0:	mov	r1, #0
   2dbe4:	ldr	r0, [fp, #-16]
   2dbe8:	bl	31198 <__assert_fail@plt+0x1ff28>
   2dbec:	str	r0, [fp, #-8]
   2dbf0:	ldr	r3, [fp, #-8]
   2dbf4:	cmp	r3, #0
   2dbf8:	moveq	r3, #1
   2dbfc:	movne	r3, #0
   2dc00:	uxtb	r3, r3
   2dc04:	cmp	r3, #0
   2dc08:	beq	2dc20 <__assert_fail@plt+0x1c9b0>
   2dc0c:	ldr	r3, [fp, #8]
   2dc10:	mov	r2, #12
   2dc14:	str	r2, [r3]
   2dc18:	mov	r3, #0
   2dc1c:	b	2e4bc <__assert_fail@plt+0x1d24c>
   2dc20:	ldr	r3, [fp, #-16]
   2dc24:	ldr	r3, [r3, #92]	; 0x5c
   2dc28:	cmp	r3, #1
   2dc2c:	ble	2e340 <__assert_fail@plt+0x1d0d0>
   2dc30:	b	2dcc0 <__assert_fail@plt+0x1ca50>
   2dc34:	ldr	r2, [fp, #-44]	; 0xffffffd4
   2dc38:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2dc3c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2dc40:	bl	2c550 <__assert_fail@plt+0x1b2e0>
   2dc44:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2dc48:	mov	r2, #0
   2dc4c:	mov	r1, #0
   2dc50:	ldr	r0, [fp, #-16]
   2dc54:	bl	31198 <__assert_fail@plt+0x1ff28>
   2dc58:	str	r0, [fp, #-20]	; 0xffffffec
   2dc5c:	mov	r3, #16
   2dc60:	ldr	r2, [fp, #-20]	; 0xffffffec
   2dc64:	ldr	r1, [fp, #-8]
   2dc68:	ldr	r0, [fp, #-16]
   2dc6c:	bl	3113c <__assert_fail@plt+0x1fecc>
   2dc70:	str	r0, [fp, #-8]
   2dc74:	ldr	r3, [fp, #-20]	; 0xffffffec
   2dc78:	cmp	r3, #0
   2dc7c:	moveq	r3, #1
   2dc80:	movne	r3, #0
   2dc84:	uxtb	r3, r3
   2dc88:	cmp	r3, #0
   2dc8c:	bne	2dcac <__assert_fail@plt+0x1ca3c>
   2dc90:	ldr	r3, [fp, #-8]
   2dc94:	cmp	r3, #0
   2dc98:	moveq	r3, #1
   2dc9c:	movne	r3, #0
   2dca0:	uxtb	r3, r3
   2dca4:	cmp	r3, #0
   2dca8:	beq	2dcc0 <__assert_fail@plt+0x1ca50>
   2dcac:	ldr	r3, [fp, #8]
   2dcb0:	mov	r2, #12
   2dcb4:	str	r2, [r3]
   2dcb8:	mov	r3, #0
   2dcbc:	b	2e4bc <__assert_fail@plt+0x1d24c>
   2dcc0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2dcc4:	ldr	r2, [r3, #56]	; 0x38
   2dcc8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2dccc:	ldr	r3, [r3, #40]	; 0x28
   2dcd0:	cmp	r2, r3
   2dcd4:	ble	2e340 <__assert_fail@plt+0x1d0d0>
   2dcd8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2dcdc:	ldr	r2, [r3, #40]	; 0x28
   2dce0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2dce4:	ldr	r3, [r3, #28]
   2dce8:	cmp	r2, r3
   2dcec:	beq	2e340 <__assert_fail@plt+0x1d0d0>
   2dcf0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2dcf4:	ldr	r2, [r3, #8]
   2dcf8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2dcfc:	ldr	r3, [r3, #40]	; 0x28
   2dd00:	lsl	r3, r3, #2
   2dd04:	add	r3, r2, r3
   2dd08:	ldr	r3, [r3]
   2dd0c:	cmn	r3, #1
   2dd10:	beq	2dc34 <__assert_fail@plt+0x1c9c4>
   2dd14:	b	2e340 <__assert_fail@plt+0x1d0d0>
   2dd18:	ldr	r3, [fp, #4]
   2dd1c:	add	r3, r3, #1
   2dd20:	ldr	r2, [fp, #8]
   2dd24:	str	r2, [sp, #4]
   2dd28:	str	r3, [sp]
   2dd2c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2dd30:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2dd34:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2dd38:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2dd3c:	bl	2e4e0 <__assert_fail@plt+0x1d270>
   2dd40:	str	r0, [fp, #-8]
   2dd44:	ldr	r3, [fp, #8]
   2dd48:	ldr	r3, [r3]
   2dd4c:	cmp	r3, #0
   2dd50:	movne	r3, #1
   2dd54:	moveq	r3, #0
   2dd58:	uxtb	r3, r3
   2dd5c:	cmp	r3, #0
   2dd60:	beq	2e348 <__assert_fail@plt+0x1d0d8>
   2dd64:	ldr	r3, [fp, #-8]
   2dd68:	cmp	r3, #0
   2dd6c:	moveq	r3, #1
   2dd70:	movne	r3, #0
   2dd74:	uxtb	r3, r3
   2dd78:	cmp	r3, #0
   2dd7c:	beq	2e348 <__assert_fail@plt+0x1d0d8>
   2dd80:	mov	r3, #0
   2dd84:	b	2e4bc <__assert_fail@plt+0x1d24c>
   2dd88:	ldr	r3, [fp, #8]
   2dd8c:	str	r3, [sp]
   2dd90:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2dd94:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2dd98:	ldr	r1, [fp, #-16]
   2dd9c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2dda0:	bl	2f258 <__assert_fail@plt+0x1dfe8>
   2dda4:	str	r0, [fp, #-8]
   2dda8:	ldr	r3, [fp, #8]
   2ddac:	ldr	r3, [r3]
   2ddb0:	cmp	r3, #0
   2ddb4:	movne	r3, #1
   2ddb8:	moveq	r3, #0
   2ddbc:	uxtb	r3, r3
   2ddc0:	cmp	r3, #0
   2ddc4:	beq	2e350 <__assert_fail@plt+0x1d0e0>
   2ddc8:	ldr	r3, [fp, #-8]
   2ddcc:	cmp	r3, #0
   2ddd0:	moveq	r3, #1
   2ddd4:	movne	r3, #0
   2ddd8:	uxtb	r3, r3
   2dddc:	cmp	r3, #0
   2dde0:	beq	2e350 <__assert_fail@plt+0x1d0e0>
   2dde4:	mov	r3, #0
   2dde8:	b	2e4bc <__assert_fail@plt+0x1d24c>
   2ddec:	ldr	r3, [fp, #-16]
   2ddf0:	ldr	r3, [r3, #84]	; 0x54
   2ddf4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2ddf8:	ldr	r2, [r2]
   2ddfc:	mov	r1, #1
   2de00:	lsl	r2, r1, r2
   2de04:	and	r3, r3, r2
   2de08:	cmp	r3, #0
   2de0c:	bne	2de24 <__assert_fail@plt+0x1cbb4>
   2de10:	ldr	r3, [fp, #8]
   2de14:	mov	r2, #6
   2de18:	str	r2, [r3]
   2de1c:	mov	r3, #0
   2de20:	b	2e4bc <__assert_fail@plt+0x1d24c>
   2de24:	ldr	r3, [fp, #-16]
   2de28:	ldr	r3, [r3, #80]	; 0x50
   2de2c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2de30:	ldr	r2, [r2]
   2de34:	mov	r1, #1
   2de38:	lsl	r2, r1, r2
   2de3c:	orr	r2, r3, r2
   2de40:	ldr	r3, [fp, #-16]
   2de44:	str	r2, [r3, #80]	; 0x50
   2de48:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2de4c:	mov	r2, #0
   2de50:	mov	r1, #0
   2de54:	ldr	r0, [fp, #-16]
   2de58:	bl	31198 <__assert_fail@plt+0x1ff28>
   2de5c:	str	r0, [fp, #-8]
   2de60:	ldr	r3, [fp, #-8]
   2de64:	cmp	r3, #0
   2de68:	moveq	r3, #1
   2de6c:	movne	r3, #0
   2de70:	uxtb	r3, r3
   2de74:	cmp	r3, #0
   2de78:	beq	2de90 <__assert_fail@plt+0x1cc20>
   2de7c:	ldr	r3, [fp, #8]
   2de80:	mov	r2, #12
   2de84:	str	r2, [r3]
   2de88:	mov	r3, #0
   2de8c:	b	2e4bc <__assert_fail@plt+0x1d24c>
   2de90:	ldr	r3, [fp, #-16]
   2de94:	ldr	r3, [r3, #76]	; 0x4c
   2de98:	add	r2, r3, #1
   2de9c:	ldr	r3, [fp, #-16]
   2dea0:	str	r2, [r3, #76]	; 0x4c
   2dea4:	ldr	r2, [fp, #-16]
   2dea8:	ldrb	r3, [r2, #88]	; 0x58
   2deac:	orr	r3, r3, #2
   2deb0:	strb	r3, [r2, #88]	; 0x58
   2deb4:	b	2e374 <__assert_fail@plt+0x1d104>
   2deb8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2debc:	and	r3, r3, #16777216	; 0x1000000
   2dec0:	cmp	r3, #0
   2dec4:	beq	2dedc <__assert_fail@plt+0x1cc6c>
   2dec8:	ldr	r3, [fp, #8]
   2decc:	mov	r2, #13
   2ded0:	str	r2, [r3]
   2ded4:	mov	r3, #0
   2ded8:	b	2e4bc <__assert_fail@plt+0x1d24c>
   2dedc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2dee0:	and	r3, r3, #32
   2dee4:	cmp	r3, #0
   2dee8:	beq	2df00 <__assert_fail@plt+0x1cc90>
   2deec:	ldr	r3, [fp, #8]
   2def0:	mov	r2, #13
   2def4:	str	r2, [r3]
   2def8:	mov	r3, #0
   2defc:	b	2e4bc <__assert_fail@plt+0x1d24c>
   2df00:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2df04:	and	r3, r3, #16
   2df08:	cmp	r3, #0
   2df0c:	beq	2df4c <__assert_fail@plt+0x1ccdc>
   2df10:	ldr	r2, [fp, #-44]	; 0xffffffd4
   2df14:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2df18:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2df1c:	bl	2c550 <__assert_fail@plt+0x1b2e0>
   2df20:	ldr	r3, [fp, #8]
   2df24:	str	r3, [sp, #4]
   2df28:	ldr	r3, [fp, #4]
   2df2c:	str	r3, [sp]
   2df30:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2df34:	ldr	r2, [fp, #-40]	; 0xffffffd8
   2df38:	ldr	r1, [fp, #-36]	; 0xffffffdc
   2df3c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2df40:	bl	2db08 <__assert_fail@plt+0x1c898>
   2df44:	mov	r3, r0
   2df48:	b	2e4bc <__assert_fail@plt+0x1d24c>
   2df4c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2df50:	ldrb	r3, [r3, #4]
   2df54:	cmp	r3, #9
   2df58:	bne	2df80 <__assert_fail@plt+0x1cd10>
   2df5c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2df60:	and	r3, r3, #131072	; 0x20000
   2df64:	cmp	r3, #0
   2df68:	bne	2df80 <__assert_fail@plt+0x1cd10>
   2df6c:	ldr	r3, [fp, #8]
   2df70:	mov	r2, #16
   2df74:	str	r2, [r3]
   2df78:	mov	r3, #0
   2df7c:	b	2e4bc <__assert_fail@plt+0x1d24c>
   2df80:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2df84:	mov	r2, #1
   2df88:	strb	r2, [r3, #4]
   2df8c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2df90:	mov	r2, #0
   2df94:	mov	r1, #0
   2df98:	ldr	r0, [fp, #-16]
   2df9c:	bl	31198 <__assert_fail@plt+0x1ff28>
   2dfa0:	str	r0, [fp, #-8]
   2dfa4:	ldr	r3, [fp, #-8]
   2dfa8:	cmp	r3, #0
   2dfac:	moveq	r3, #1
   2dfb0:	movne	r3, #0
   2dfb4:	uxtb	r3, r3
   2dfb8:	cmp	r3, #0
   2dfbc:	beq	2e358 <__assert_fail@plt+0x1d0e8>
   2dfc0:	ldr	r3, [fp, #8]
   2dfc4:	mov	r2, #12
   2dfc8:	str	r2, [r3]
   2dfcc:	mov	r3, #0
   2dfd0:	b	2e4bc <__assert_fail@plt+0x1d24c>
   2dfd4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2dfd8:	ldr	r2, [r3]
   2dfdc:	ldr	r3, [pc, #1252]	; 2e4c8 <__assert_fail@plt+0x1d258>
   2dfe0:	and	r3, r3, r2
   2dfe4:	cmp	r3, #0
   2dfe8:	beq	2e00c <__assert_fail@plt+0x1cd9c>
   2dfec:	ldr	r3, [fp, #-16]
   2dff0:	ldrb	r3, [r3, #88]	; 0x58
   2dff4:	and	r3, r3, #16
   2dff8:	uxtb	r3, r3
   2dffc:	cmp	r3, #0
   2e000:	bne	2e00c <__assert_fail@plt+0x1cd9c>
   2e004:	ldr	r0, [fp, #-16]
   2e008:	bl	29cd0 <__assert_fail@plt+0x18a60>
   2e00c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2e010:	ldr	r3, [r3]
   2e014:	cmp	r3, #256	; 0x100
   2e018:	beq	2e02c <__assert_fail@plt+0x1cdbc>
   2e01c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2e020:	ldr	r3, [r3]
   2e024:	cmp	r3, #512	; 0x200
   2e028:	bne	2e14c <__assert_fail@plt+0x1cedc>
   2e02c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2e030:	ldr	r3, [r3]
   2e034:	cmp	r3, #256	; 0x100
   2e038:	bne	2e070 <__assert_fail@plt+0x1ce00>
   2e03c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2e040:	mov	r2, #6
   2e044:	str	r2, [r3]
   2e048:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2e04c:	mov	r2, #0
   2e050:	mov	r1, #0
   2e054:	ldr	r0, [fp, #-16]
   2e058:	bl	31198 <__assert_fail@plt+0x1ff28>
   2e05c:	str	r0, [fp, #-12]
   2e060:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2e064:	mov	r2, #9
   2e068:	str	r2, [r3]
   2e06c:	b	2e0a0 <__assert_fail@plt+0x1ce30>
   2e070:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2e074:	mov	r2, #5
   2e078:	str	r2, [r3]
   2e07c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2e080:	mov	r2, #0
   2e084:	mov	r1, #0
   2e088:	ldr	r0, [fp, #-16]
   2e08c:	bl	31198 <__assert_fail@plt+0x1ff28>
   2e090:	str	r0, [fp, #-12]
   2e094:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2e098:	mov	r2, #10
   2e09c:	str	r2, [r3]
   2e0a0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2e0a4:	mov	r2, #0
   2e0a8:	mov	r1, #0
   2e0ac:	ldr	r0, [fp, #-16]
   2e0b0:	bl	31198 <__assert_fail@plt+0x1ff28>
   2e0b4:	str	r0, [fp, #-24]	; 0xffffffe8
   2e0b8:	mov	r3, #10
   2e0bc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2e0c0:	ldr	r1, [fp, #-12]
   2e0c4:	ldr	r0, [fp, #-16]
   2e0c8:	bl	3113c <__assert_fail@plt+0x1fecc>
   2e0cc:	str	r0, [fp, #-8]
   2e0d0:	ldr	r3, [fp, #-12]
   2e0d4:	cmp	r3, #0
   2e0d8:	moveq	r3, #1
   2e0dc:	movne	r3, #0
   2e0e0:	uxtb	r3, r3
   2e0e4:	cmp	r3, #0
   2e0e8:	bne	2e108 <__assert_fail@plt+0x1ce98>
   2e0ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e0f0:	cmp	r3, #0
   2e0f4:	moveq	r3, #1
   2e0f8:	movne	r3, #0
   2e0fc:	uxtb	r3, r3
   2e100:	cmp	r3, #0
   2e104:	beq	2e110 <__assert_fail@plt+0x1cea0>
   2e108:	mov	r3, #1
   2e10c:	b	2e114 <__assert_fail@plt+0x1cea4>
   2e110:	mov	r3, #0
   2e114:	cmp	r3, #0
   2e118:	bne	2e138 <__assert_fail@plt+0x1cec8>
   2e11c:	ldr	r3, [fp, #-8]
   2e120:	cmp	r3, #0
   2e124:	moveq	r3, #1
   2e128:	movne	r3, #0
   2e12c:	uxtb	r3, r3
   2e130:	cmp	r3, #0
   2e134:	beq	2e194 <__assert_fail@plt+0x1cf24>
   2e138:	ldr	r3, [fp, #8]
   2e13c:	mov	r2, #12
   2e140:	str	r2, [r3]
   2e144:	mov	r3, #0
   2e148:	b	2e4bc <__assert_fail@plt+0x1d24c>
   2e14c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2e150:	mov	r2, #0
   2e154:	mov	r1, #0
   2e158:	ldr	r0, [fp, #-16]
   2e15c:	bl	31198 <__assert_fail@plt+0x1ff28>
   2e160:	str	r0, [fp, #-8]
   2e164:	ldr	r3, [fp, #-8]
   2e168:	cmp	r3, #0
   2e16c:	moveq	r3, #1
   2e170:	movne	r3, #0
   2e174:	uxtb	r3, r3
   2e178:	cmp	r3, #0
   2e17c:	beq	2e198 <__assert_fail@plt+0x1cf28>
   2e180:	ldr	r3, [fp, #8]
   2e184:	mov	r2, #12
   2e188:	str	r2, [r3]
   2e18c:	mov	r3, #0
   2e190:	b	2e4bc <__assert_fail@plt+0x1d24c>
   2e194:	nop			; (mov r0, r0)
   2e198:	ldr	r2, [fp, #-44]	; 0xffffffd4
   2e19c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2e1a0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2e1a4:	bl	2c550 <__assert_fail@plt+0x1b2e0>
   2e1a8:	ldr	r3, [fp, #-8]
   2e1ac:	b	2e4bc <__assert_fail@plt+0x1d24c>
   2e1b0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2e1b4:	mov	r2, #0
   2e1b8:	mov	r1, #0
   2e1bc:	ldr	r0, [fp, #-16]
   2e1c0:	bl	31198 <__assert_fail@plt+0x1ff28>
   2e1c4:	str	r0, [fp, #-8]
   2e1c8:	ldr	r3, [fp, #-8]
   2e1cc:	cmp	r3, #0
   2e1d0:	moveq	r3, #1
   2e1d4:	movne	r3, #0
   2e1d8:	uxtb	r3, r3
   2e1dc:	cmp	r3, #0
   2e1e0:	beq	2e1f8 <__assert_fail@plt+0x1cf88>
   2e1e4:	ldr	r3, [fp, #8]
   2e1e8:	mov	r2, #12
   2e1ec:	str	r2, [r3]
   2e1f0:	mov	r3, #0
   2e1f4:	b	2e4bc <__assert_fail@plt+0x1d24c>
   2e1f8:	ldr	r3, [fp, #-16]
   2e1fc:	ldr	r3, [r3, #92]	; 0x5c
   2e200:	cmp	r3, #1
   2e204:	ble	2e360 <__assert_fail@plt+0x1d0f0>
   2e208:	ldr	r2, [fp, #-16]
   2e20c:	ldrb	r3, [r2, #88]	; 0x58
   2e210:	orr	r3, r3, #2
   2e214:	strb	r3, [r2, #88]	; 0x58
   2e218:	b	2e360 <__assert_fail@plt+0x1d0f0>
   2e21c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2e220:	ldr	r1, [r3, #64]	; 0x40
   2e224:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2e228:	ldrb	r3, [r3, #4]
   2e22c:	cmp	r3, #33	; 0x21
   2e230:	moveq	r3, #1
   2e234:	movne	r3, #0
   2e238:	uxtb	r3, r3
   2e23c:	ldr	r2, [fp, #8]
   2e240:	str	r2, [sp, #4]
   2e244:	str	r3, [sp]
   2e248:	ldr	r3, [pc, #636]	; 2e4cc <__assert_fail@plt+0x1d25c>
   2e24c:	ldr	r2, [pc, #636]	; 2e4d0 <__assert_fail@plt+0x1d260>
   2e250:	ldr	r0, [fp, #-16]
   2e254:	bl	30cdc <__assert_fail@plt+0x1fa6c>
   2e258:	str	r0, [fp, #-8]
   2e25c:	ldr	r3, [fp, #8]
   2e260:	ldr	r3, [r3]
   2e264:	cmp	r3, #0
   2e268:	movne	r3, #1
   2e26c:	moveq	r3, #0
   2e270:	uxtb	r3, r3
   2e274:	cmp	r3, #0
   2e278:	beq	2e368 <__assert_fail@plt+0x1d0f8>
   2e27c:	ldr	r3, [fp, #-8]
   2e280:	cmp	r3, #0
   2e284:	moveq	r3, #1
   2e288:	movne	r3, #0
   2e28c:	uxtb	r3, r3
   2e290:	cmp	r3, #0
   2e294:	beq	2e368 <__assert_fail@plt+0x1d0f8>
   2e298:	mov	r3, #0
   2e29c:	b	2e4bc <__assert_fail@plt+0x1d24c>
   2e2a0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2e2a4:	ldr	r1, [r3, #64]	; 0x40
   2e2a8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2e2ac:	ldrb	r3, [r3, #4]
   2e2b0:	cmp	r3, #35	; 0x23
   2e2b4:	moveq	r3, #1
   2e2b8:	movne	r3, #0
   2e2bc:	uxtb	r3, r3
   2e2c0:	ldr	r2, [fp, #8]
   2e2c4:	str	r2, [sp, #4]
   2e2c8:	str	r3, [sp]
   2e2cc:	ldr	r3, [pc, #512]	; 2e4d4 <__assert_fail@plt+0x1d264>
   2e2d0:	ldr	r2, [pc, #512]	; 2e4d8 <__assert_fail@plt+0x1d268>
   2e2d4:	ldr	r0, [fp, #-16]
   2e2d8:	bl	30cdc <__assert_fail@plt+0x1fa6c>
   2e2dc:	str	r0, [fp, #-8]
   2e2e0:	ldr	r3, [fp, #8]
   2e2e4:	ldr	r3, [r3]
   2e2e8:	cmp	r3, #0
   2e2ec:	movne	r3, #1
   2e2f0:	moveq	r3, #0
   2e2f4:	uxtb	r3, r3
   2e2f8:	cmp	r3, #0
   2e2fc:	beq	2e370 <__assert_fail@plt+0x1d100>
   2e300:	ldr	r3, [fp, #-8]
   2e304:	cmp	r3, #0
   2e308:	moveq	r3, #1
   2e30c:	movne	r3, #0
   2e310:	uxtb	r3, r3
   2e314:	cmp	r3, #0
   2e318:	beq	2e370 <__assert_fail@plt+0x1d100>
   2e31c:	mov	r3, #0
   2e320:	b	2e4bc <__assert_fail@plt+0x1d24c>
   2e324:	mov	r3, #0
   2e328:	b	2e4bc <__assert_fail@plt+0x1d24c>
   2e32c:	ldr	r3, [fp, #8]
   2e330:	mov	r2, #5
   2e334:	str	r2, [r3]
   2e338:	mov	r3, #0
   2e33c:	b	2e4bc <__assert_fail@plt+0x1d24c>
   2e340:	nop			; (mov r0, r0)
   2e344:	b	2e374 <__assert_fail@plt+0x1d104>
   2e348:	nop			; (mov r0, r0)
   2e34c:	b	2e374 <__assert_fail@plt+0x1d104>
   2e350:	nop			; (mov r0, r0)
   2e354:	b	2e374 <__assert_fail@plt+0x1d104>
   2e358:	nop			; (mov r0, r0)
   2e35c:	b	2e374 <__assert_fail@plt+0x1d104>
   2e360:	nop			; (mov r0, r0)
   2e364:	b	2e374 <__assert_fail@plt+0x1d104>
   2e368:	nop			; (mov r0, r0)
   2e36c:	b	2e374 <__assert_fail@plt+0x1d104>
   2e370:	nop			; (mov r0, r0)
   2e374:	ldr	r2, [fp, #-44]	; 0xffffffd4
   2e378:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2e37c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2e380:	bl	2c550 <__assert_fail@plt+0x1b2e0>
   2e384:	b	2e478 <__assert_fail@plt+0x1d208>
   2e388:	ldr	r3, [fp, #8]
   2e38c:	str	r3, [sp, #4]
   2e390:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2e394:	str	r3, [sp]
   2e398:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2e39c:	ldr	r2, [fp, #-16]
   2e3a0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   2e3a4:	ldr	r0, [fp, #-8]
   2e3a8:	bl	2e6a0 <__assert_fail@plt+0x1d430>
   2e3ac:	str	r0, [fp, #-28]	; 0xffffffe4
   2e3b0:	ldr	r3, [fp, #8]
   2e3b4:	ldr	r3, [r3]
   2e3b8:	cmp	r3, #0
   2e3bc:	movne	r3, #1
   2e3c0:	moveq	r3, #0
   2e3c4:	uxtb	r3, r3
   2e3c8:	cmp	r3, #0
   2e3cc:	beq	2e410 <__assert_fail@plt+0x1d1a0>
   2e3d0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2e3d4:	cmp	r3, #0
   2e3d8:	moveq	r3, #1
   2e3dc:	movne	r3, #0
   2e3e0:	uxtb	r3, r3
   2e3e4:	cmp	r3, #0
   2e3e8:	beq	2e410 <__assert_fail@plt+0x1d1a0>
   2e3ec:	ldr	r3, [fp, #-8]
   2e3f0:	cmp	r3, #0
   2e3f4:	beq	2e408 <__assert_fail@plt+0x1d198>
   2e3f8:	mov	r2, #0
   2e3fc:	ldr	r1, [pc, #216]	; 2e4dc <__assert_fail@plt+0x1d26c>
   2e400:	ldr	r0, [fp, #-8]
   2e404:	bl	2aab0 <__assert_fail@plt+0x19840>
   2e408:	mov	r3, #0
   2e40c:	b	2e4bc <__assert_fail@plt+0x1d24c>
   2e410:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2e414:	str	r3, [fp, #-8]
   2e418:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2e41c:	and	r3, r3, #16777216	; 0x1000000
   2e420:	cmp	r3, #0
   2e424:	beq	2e478 <__assert_fail@plt+0x1d208>
   2e428:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2e42c:	ldrb	r3, [r3, #4]
   2e430:	cmp	r3, #11
   2e434:	beq	2e448 <__assert_fail@plt+0x1d1d8>
   2e438:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2e43c:	ldrb	r3, [r3, #4]
   2e440:	cmp	r3, #23
   2e444:	bne	2e478 <__assert_fail@plt+0x1d208>
   2e448:	ldr	r3, [fp, #-8]
   2e44c:	cmp	r3, #0
   2e450:	beq	2e464 <__assert_fail@plt+0x1d1f4>
   2e454:	mov	r2, #0
   2e458:	ldr	r1, [pc, #124]	; 2e4dc <__assert_fail@plt+0x1d26c>
   2e45c:	ldr	r0, [fp, #-8]
   2e460:	bl	2aab0 <__assert_fail@plt+0x19840>
   2e464:	ldr	r3, [fp, #8]
   2e468:	mov	r2, #13
   2e46c:	str	r2, [r3]
   2e470:	mov	r3, #0
   2e474:	b	2e4bc <__assert_fail@plt+0x1d24c>
   2e478:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2e47c:	ldrb	r3, [r3, #4]
   2e480:	cmp	r3, #11
   2e484:	beq	2e388 <__assert_fail@plt+0x1d118>
   2e488:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2e48c:	ldrb	r3, [r3, #4]
   2e490:	cmp	r3, #18
   2e494:	beq	2e388 <__assert_fail@plt+0x1d118>
   2e498:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2e49c:	ldrb	r3, [r3, #4]
   2e4a0:	cmp	r3, #19
   2e4a4:	beq	2e388 <__assert_fail@plt+0x1d118>
   2e4a8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2e4ac:	ldrb	r3, [r3, #4]
   2e4b0:	cmp	r3, #23
   2e4b4:	beq	2e388 <__assert_fail@plt+0x1d118>
   2e4b8:	ldr	r3, [fp, #-8]
   2e4bc:	mov	r0, r3
   2e4c0:	sub	sp, fp, #4
   2e4c4:	pop	{fp, pc}
   2e4c8:	andeq	r0, r0, pc, lsl #6
   2e4cc:	andeq	r1, r4, r0, lsl r3
   2e4d0:	andeq	r1, r4, r4, lsl r3
   2e4d4:	andeq	r1, r4, ip, lsl r3
   2e4d8:	andeq	r1, r4, r0, lsr #6
   2e4dc:	strdeq	r1, [r3], -ip
   2e4e0:	push	{fp, lr}
   2e4e4:	add	fp, sp, #4
   2e4e8:	sub	sp, sp, #40	; 0x28
   2e4ec:	str	r0, [fp, #-24]	; 0xffffffe8
   2e4f0:	str	r1, [fp, #-28]	; 0xffffffe4
   2e4f4:	str	r2, [fp, #-32]	; 0xffffffe0
   2e4f8:	str	r3, [fp, #-36]	; 0xffffffdc
   2e4fc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2e500:	ldr	r3, [r3]
   2e504:	str	r3, [fp, #-12]
   2e508:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2e50c:	ldr	r3, [r3, #24]
   2e510:	add	r1, r3, #1
   2e514:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2e518:	str	r1, [r2, #24]
   2e51c:	str	r3, [fp, #-16]
   2e520:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2e524:	orr	r3, r3, #8388608	; 0x800000
   2e528:	mov	r2, r3
   2e52c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   2e530:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2e534:	bl	2c550 <__assert_fail@plt+0x1b2e0>
   2e538:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2e53c:	ldrb	r3, [r3, #4]
   2e540:	cmp	r3, #9
   2e544:	bne	2e554 <__assert_fail@plt+0x1d2e4>
   2e548:	mov	r3, #0
   2e54c:	str	r3, [fp, #-8]
   2e550:	b	2e60c <__assert_fail@plt+0x1d39c>
   2e554:	ldr	r3, [fp, #8]
   2e558:	str	r3, [sp, #4]
   2e55c:	ldr	r3, [fp, #4]
   2e560:	str	r3, [sp]
   2e564:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2e568:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2e56c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2e570:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2e574:	bl	2d6e0 <__assert_fail@plt+0x1c470>
   2e578:	str	r0, [fp, #-8]
   2e57c:	ldr	r3, [fp, #8]
   2e580:	ldr	r3, [r3]
   2e584:	cmp	r3, #0
   2e588:	moveq	r3, #1
   2e58c:	movne	r3, #0
   2e590:	uxtb	r3, r3
   2e594:	cmp	r3, #0
   2e598:	beq	2e5e4 <__assert_fail@plt+0x1d374>
   2e59c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2e5a0:	ldrb	r3, [r3, #4]
   2e5a4:	cmp	r3, #9
   2e5a8:	movne	r3, #1
   2e5ac:	moveq	r3, #0
   2e5b0:	uxtb	r3, r3
   2e5b4:	cmp	r3, #0
   2e5b8:	beq	2e5e4 <__assert_fail@plt+0x1d374>
   2e5bc:	ldr	r3, [fp, #-8]
   2e5c0:	cmp	r3, #0
   2e5c4:	beq	2e5d8 <__assert_fail@plt+0x1d368>
   2e5c8:	mov	r2, #0
   2e5cc:	ldr	r1, [pc, #200]	; 2e69c <__assert_fail@plt+0x1d42c>
   2e5d0:	ldr	r0, [fp, #-8]
   2e5d4:	bl	2aab0 <__assert_fail@plt+0x19840>
   2e5d8:	ldr	r3, [fp, #8]
   2e5dc:	mov	r2, #8
   2e5e0:	str	r2, [r3]
   2e5e4:	ldr	r3, [fp, #8]
   2e5e8:	ldr	r3, [r3]
   2e5ec:	cmp	r3, #0
   2e5f0:	movne	r3, #1
   2e5f4:	moveq	r3, #0
   2e5f8:	uxtb	r3, r3
   2e5fc:	cmp	r3, #0
   2e600:	beq	2e60c <__assert_fail@plt+0x1d39c>
   2e604:	mov	r3, #0
   2e608:	b	2e690 <__assert_fail@plt+0x1d420>
   2e60c:	ldr	r3, [fp, #-16]
   2e610:	cmp	r3, #8
   2e614:	bhi	2e638 <__assert_fail@plt+0x1d3c8>
   2e618:	ldr	r3, [fp, #-12]
   2e61c:	ldr	r3, [r3, #84]	; 0x54
   2e620:	mov	r1, #1
   2e624:	ldr	r2, [fp, #-16]
   2e628:	lsl	r2, r1, r2
   2e62c:	orr	r2, r3, r2
   2e630:	ldr	r3, [fp, #-12]
   2e634:	str	r2, [r3, #84]	; 0x54
   2e638:	mov	r3, #17
   2e63c:	mov	r2, #0
   2e640:	ldr	r1, [fp, #-8]
   2e644:	ldr	r0, [fp, #-12]
   2e648:	bl	3113c <__assert_fail@plt+0x1fecc>
   2e64c:	str	r0, [fp, #-8]
   2e650:	ldr	r3, [fp, #-8]
   2e654:	cmp	r3, #0
   2e658:	moveq	r3, #1
   2e65c:	movne	r3, #0
   2e660:	uxtb	r3, r3
   2e664:	cmp	r3, #0
   2e668:	beq	2e680 <__assert_fail@plt+0x1d410>
   2e66c:	ldr	r3, [fp, #8]
   2e670:	mov	r2, #12
   2e674:	str	r2, [r3]
   2e678:	mov	r3, #0
   2e67c:	b	2e690 <__assert_fail@plt+0x1d420>
   2e680:	ldr	r2, [fp, #-16]
   2e684:	ldr	r3, [fp, #-8]
   2e688:	str	r2, [r3, #20]
   2e68c:	ldr	r3, [fp, #-8]
   2e690:	mov	r0, r3
   2e694:	sub	sp, fp, #4
   2e698:	pop	{fp, pc}
   2e69c:	strdeq	r1, [r3], -ip
   2e6a0:	push	{fp, lr}
   2e6a4:	add	fp, sp, #4
   2e6a8:	sub	sp, sp, #56	; 0x38
   2e6ac:	str	r0, [fp, #-48]	; 0xffffffd0
   2e6b0:	str	r1, [fp, #-52]	; 0xffffffcc
   2e6b4:	str	r2, [fp, #-56]	; 0xffffffc8
   2e6b8:	str	r3, [fp, #-60]	; 0xffffffc4
   2e6bc:	mov	r3, #0
   2e6c0:	str	r3, [fp, #-8]
   2e6c4:	mov	r3, #0
   2e6c8:	str	r3, [fp, #-12]
   2e6cc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2e6d0:	ldr	r3, [r3, #40]	; 0x28
   2e6d4:	str	r3, [fp, #-28]	; 0xffffffe4
   2e6d8:	ldr	r2, [fp, #-60]	; 0xffffffc4
   2e6dc:	sub	r3, fp, #40	; 0x28
   2e6e0:	ldm	r2, {r0, r1}
   2e6e4:	stm	r3, {r0, r1}
   2e6e8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2e6ec:	ldrb	r3, [r3, #4]
   2e6f0:	cmp	r3, #23
   2e6f4:	bne	2e974 <__assert_fail@plt+0x1d704>
   2e6f8:	mov	r3, #0
   2e6fc:	str	r3, [fp, #-24]	; 0xffffffe8
   2e700:	ldr	r2, [fp, #4]
   2e704:	ldr	r1, [fp, #-60]	; 0xffffffc4
   2e708:	ldr	r0, [fp, #-52]	; 0xffffffcc
   2e70c:	bl	30fbc <__assert_fail@plt+0x1fd4c>
   2e710:	str	r0, [fp, #-20]	; 0xffffffec
   2e714:	ldr	r3, [fp, #-20]	; 0xffffffec
   2e718:	cmn	r3, #1
   2e71c:	bne	2e760 <__assert_fail@plt+0x1d4f0>
   2e720:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2e724:	ldrb	r3, [r3, #4]
   2e728:	cmp	r3, #1
   2e72c:	bne	2e74c <__assert_fail@plt+0x1d4dc>
   2e730:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2e734:	ldrb	r3, [r3]
   2e738:	cmp	r3, #44	; 0x2c
   2e73c:	bne	2e74c <__assert_fail@plt+0x1d4dc>
   2e740:	mov	r3, #0
   2e744:	str	r3, [fp, #-20]	; 0xffffffec
   2e748:	b	2e760 <__assert_fail@plt+0x1d4f0>
   2e74c:	ldr	r3, [fp, #8]
   2e750:	mov	r2, #10
   2e754:	str	r2, [r3]
   2e758:	mov	r3, #0
   2e75c:	b	2ecc0 <__assert_fail@plt+0x1da50>
   2e760:	ldr	r3, [fp, #-20]	; 0xffffffec
   2e764:	cmn	r3, #2
   2e768:	movne	r3, #1
   2e76c:	moveq	r3, #0
   2e770:	uxtb	r3, r3
   2e774:	cmp	r3, #0
   2e778:	beq	2e7d4 <__assert_fail@plt+0x1d564>
   2e77c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2e780:	ldrb	r3, [r3, #4]
   2e784:	cmp	r3, #24
   2e788:	beq	2e7cc <__assert_fail@plt+0x1d55c>
   2e78c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2e790:	ldrb	r3, [r3, #4]
   2e794:	cmp	r3, #1
   2e798:	bne	2e7c4 <__assert_fail@plt+0x1d554>
   2e79c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2e7a0:	ldrb	r3, [r3]
   2e7a4:	cmp	r3, #44	; 0x2c
   2e7a8:	bne	2e7c4 <__assert_fail@plt+0x1d554>
   2e7ac:	ldr	r2, [fp, #4]
   2e7b0:	ldr	r1, [fp, #-60]	; 0xffffffc4
   2e7b4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   2e7b8:	bl	30fbc <__assert_fail@plt+0x1fd4c>
   2e7bc:	mov	r3, r0
   2e7c0:	b	2e7d0 <__assert_fail@plt+0x1d560>
   2e7c4:	mvn	r3, #1
   2e7c8:	b	2e7d0 <__assert_fail@plt+0x1d560>
   2e7cc:	ldr	r3, [fp, #-20]	; 0xffffffec
   2e7d0:	str	r3, [fp, #-24]	; 0xffffffe8
   2e7d4:	ldr	r3, [fp, #-20]	; 0xffffffec
   2e7d8:	cmn	r3, #2
   2e7dc:	moveq	r3, #1
   2e7e0:	movne	r3, #0
   2e7e4:	uxtb	r3, r3
   2e7e8:	cmp	r3, #0
   2e7ec:	bne	2e80c <__assert_fail@plt+0x1d59c>
   2e7f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e7f4:	cmn	r3, #2
   2e7f8:	moveq	r3, #1
   2e7fc:	movne	r3, #0
   2e800:	uxtb	r3, r3
   2e804:	cmp	r3, #0
   2e808:	beq	2e894 <__assert_fail@plt+0x1d624>
   2e80c:	ldr	r3, [fp, #4]
   2e810:	and	r3, r3, #2097152	; 0x200000
   2e814:	cmp	r3, #0
   2e818:	moveq	r3, #1
   2e81c:	movne	r3, #0
   2e820:	uxtb	r3, r3
   2e824:	cmp	r3, #0
   2e828:	beq	2e860 <__assert_fail@plt+0x1d5f0>
   2e82c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2e830:	ldrb	r3, [r3, #4]
   2e834:	cmp	r3, #2
   2e838:	bne	2e84c <__assert_fail@plt+0x1d5dc>
   2e83c:	ldr	r3, [fp, #8]
   2e840:	mov	r2, #9
   2e844:	str	r2, [r3]
   2e848:	b	2e858 <__assert_fail@plt+0x1d5e8>
   2e84c:	ldr	r3, [fp, #8]
   2e850:	mov	r2, #10
   2e854:	str	r2, [r3]
   2e858:	mov	r3, #0
   2e85c:	b	2ecc0 <__assert_fail@plt+0x1da50>
   2e860:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2e864:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2e868:	str	r2, [r3, #40]	; 0x28
   2e86c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2e870:	mov	r2, r3
   2e874:	sub	r3, fp, #40	; 0x28
   2e878:	ldm	r3, {r0, r1}
   2e87c:	stm	r2, {r0, r1}
   2e880:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2e884:	mov	r2, #1
   2e888:	strb	r2, [r3, #4]
   2e88c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2e890:	b	2ecc0 <__assert_fail@plt+0x1da50>
   2e894:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e898:	cmn	r3, #1
   2e89c:	movne	r3, #1
   2e8a0:	moveq	r3, #0
   2e8a4:	uxtb	r3, r3
   2e8a8:	cmp	r3, #0
   2e8ac:	beq	2e8d8 <__assert_fail@plt+0x1d668>
   2e8b0:	ldr	r2, [fp, #-20]	; 0xffffffec
   2e8b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e8b8:	cmp	r2, r3
   2e8bc:	movgt	r3, #1
   2e8c0:	movle	r3, #0
   2e8c4:	uxtb	r3, r3
   2e8c8:	cmp	r3, #0
   2e8cc:	beq	2e8d8 <__assert_fail@plt+0x1d668>
   2e8d0:	mov	r3, #1
   2e8d4:	b	2e8dc <__assert_fail@plt+0x1d66c>
   2e8d8:	mov	r3, #0
   2e8dc:	cmp	r3, #0
   2e8e0:	bne	2e904 <__assert_fail@plt+0x1d694>
   2e8e4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2e8e8:	ldrb	r3, [r3, #4]
   2e8ec:	cmp	r3, #24
   2e8f0:	movne	r3, #1
   2e8f4:	moveq	r3, #0
   2e8f8:	uxtb	r3, r3
   2e8fc:	cmp	r3, #0
   2e900:	beq	2e918 <__assert_fail@plt+0x1d6a8>
   2e904:	ldr	r3, [fp, #8]
   2e908:	mov	r2, #10
   2e90c:	str	r2, [r3]
   2e910:	mov	r3, #0
   2e914:	b	2ecc0 <__assert_fail@plt+0x1da50>
   2e918:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e91c:	cmn	r3, #1
   2e920:	bne	2e940 <__assert_fail@plt+0x1d6d0>
   2e924:	ldr	r3, [fp, #-20]	; 0xffffffec
   2e928:	ldr	r2, [pc, #924]	; 2eccc <__assert_fail@plt+0x1da5c>
   2e92c:	cmp	r3, r2
   2e930:	movgt	r3, #1
   2e934:	movle	r3, #0
   2e938:	uxtb	r3, r3
   2e93c:	b	2e958 <__assert_fail@plt+0x1d6e8>
   2e940:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2e944:	ldr	r2, [pc, #896]	; 2eccc <__assert_fail@plt+0x1da5c>
   2e948:	cmp	r3, r2
   2e94c:	movgt	r3, #1
   2e950:	movle	r3, #0
   2e954:	uxtb	r3, r3
   2e958:	cmp	r3, #0
   2e95c:	beq	2e9b0 <__assert_fail@plt+0x1d740>
   2e960:	ldr	r3, [fp, #8]
   2e964:	mov	r2, #15
   2e968:	str	r2, [r3]
   2e96c:	mov	r3, #0
   2e970:	b	2ecc0 <__assert_fail@plt+0x1da50>
   2e974:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2e978:	ldrb	r3, [r3, #4]
   2e97c:	cmp	r3, #18
   2e980:	moveq	r3, #1
   2e984:	movne	r3, #0
   2e988:	uxtb	r3, r3
   2e98c:	str	r3, [fp, #-20]	; 0xffffffec
   2e990:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2e994:	ldrb	r3, [r3, #4]
   2e998:	cmp	r3, #19
   2e99c:	bne	2e9a8 <__assert_fail@plt+0x1d738>
   2e9a0:	mov	r3, #1
   2e9a4:	b	2e9ac <__assert_fail@plt+0x1d73c>
   2e9a8:	mvn	r3, #0
   2e9ac:	str	r3, [fp, #-24]	; 0xffffffe8
   2e9b0:	ldr	r2, [fp, #4]
   2e9b4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   2e9b8:	ldr	r0, [fp, #-60]	; 0xffffffc4
   2e9bc:	bl	2c550 <__assert_fail@plt+0x1b2e0>
   2e9c0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2e9c4:	cmp	r3, #0
   2e9c8:	moveq	r3, #1
   2e9cc:	movne	r3, #0
   2e9d0:	uxtb	r3, r3
   2e9d4:	cmp	r3, #0
   2e9d8:	beq	2e9e4 <__assert_fail@plt+0x1d774>
   2e9dc:	mov	r3, #0
   2e9e0:	b	2ecc0 <__assert_fail@plt+0x1da50>
   2e9e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   2e9e8:	cmp	r3, #0
   2e9ec:	moveq	r3, #1
   2e9f0:	movne	r3, #0
   2e9f4:	uxtb	r3, r3
   2e9f8:	cmp	r3, #0
   2e9fc:	beq	2ea34 <__assert_fail@plt+0x1d7c4>
   2ea00:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2ea04:	cmp	r3, #0
   2ea08:	moveq	r3, #1
   2ea0c:	movne	r3, #0
   2ea10:	uxtb	r3, r3
   2ea14:	cmp	r3, #0
   2ea18:	beq	2ea34 <__assert_fail@plt+0x1d7c4>
   2ea1c:	mov	r2, #0
   2ea20:	ldr	r1, [pc, #680]	; 2ecd0 <__assert_fail@plt+0x1da60>
   2ea24:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2ea28:	bl	2aab0 <__assert_fail@plt+0x19840>
   2ea2c:	mov	r3, #0
   2ea30:	b	2ecc0 <__assert_fail@plt+0x1da50>
   2ea34:	ldr	r3, [fp, #-20]	; 0xffffffec
   2ea38:	cmp	r3, #0
   2ea3c:	movgt	r3, #1
   2ea40:	movle	r3, #0
   2ea44:	uxtb	r3, r3
   2ea48:	cmp	r3, #0
   2ea4c:	beq	2eb30 <__assert_fail@plt+0x1d8c0>
   2ea50:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2ea54:	str	r3, [fp, #-8]
   2ea58:	mov	r3, #2
   2ea5c:	str	r3, [fp, #-16]
   2ea60:	b	2ead0 <__assert_fail@plt+0x1d860>
   2ea64:	ldr	r1, [fp, #-56]	; 0xffffffc8
   2ea68:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2ea6c:	bl	31430 <__assert_fail@plt+0x201c0>
   2ea70:	str	r0, [fp, #-48]	; 0xffffffd0
   2ea74:	mov	r3, #16
   2ea78:	ldr	r2, [fp, #-48]	; 0xffffffd0
   2ea7c:	ldr	r1, [fp, #-8]
   2ea80:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2ea84:	bl	3113c <__assert_fail@plt+0x1fecc>
   2ea88:	str	r0, [fp, #-8]
   2ea8c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2ea90:	cmp	r3, #0
   2ea94:	moveq	r3, #1
   2ea98:	movne	r3, #0
   2ea9c:	uxtb	r3, r3
   2eaa0:	cmp	r3, #0
   2eaa4:	bne	2ecb0 <__assert_fail@plt+0x1da40>
   2eaa8:	ldr	r3, [fp, #-8]
   2eaac:	cmp	r3, #0
   2eab0:	moveq	r3, #1
   2eab4:	movne	r3, #0
   2eab8:	uxtb	r3, r3
   2eabc:	cmp	r3, #0
   2eac0:	bne	2ecb0 <__assert_fail@plt+0x1da40>
   2eac4:	ldr	r3, [fp, #-16]
   2eac8:	add	r3, r3, #1
   2eacc:	str	r3, [fp, #-16]
   2ead0:	ldr	r2, [fp, #-16]
   2ead4:	ldr	r3, [fp, #-20]	; 0xffffffec
   2ead8:	cmp	r2, r3
   2eadc:	ble	2ea64 <__assert_fail@plt+0x1d7f4>
   2eae0:	ldr	r2, [fp, #-20]	; 0xffffffec
   2eae4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2eae8:	cmp	r2, r3
   2eaec:	bne	2eaf8 <__assert_fail@plt+0x1d888>
   2eaf0:	ldr	r3, [fp, #-8]
   2eaf4:	b	2ecc0 <__assert_fail@plt+0x1da50>
   2eaf8:	ldr	r1, [fp, #-56]	; 0xffffffc8
   2eafc:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2eb00:	bl	31430 <__assert_fail@plt+0x201c0>
   2eb04:	str	r0, [fp, #-48]	; 0xffffffd0
   2eb08:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2eb0c:	cmp	r3, #0
   2eb10:	moveq	r3, #1
   2eb14:	movne	r3, #0
   2eb18:	uxtb	r3, r3
   2eb1c:	cmp	r3, #0
   2eb20:	bne	2ec9c <__assert_fail@plt+0x1da2c>
   2eb24:	ldr	r3, [fp, #-8]
   2eb28:	str	r3, [fp, #-12]
   2eb2c:	b	2eb38 <__assert_fail@plt+0x1d8c8>
   2eb30:	mov	r3, #0
   2eb34:	str	r3, [fp, #-12]
   2eb38:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2eb3c:	ldrb	r3, [r3, #24]
   2eb40:	cmp	r3, #17
   2eb44:	bne	2eb68 <__assert_fail@plt+0x1d8f8>
   2eb48:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2eb4c:	ldr	r3, [r3, #20]
   2eb50:	str	r3, [fp, #-32]	; 0xffffffe0
   2eb54:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2eb58:	mov	r2, r3
   2eb5c:	ldr	r1, [pc, #368]	; 2ecd4 <__assert_fail@plt+0x1da64>
   2eb60:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2eb64:	bl	2aab0 <__assert_fail@plt+0x19840>
   2eb68:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2eb6c:	cmn	r3, #1
   2eb70:	bne	2eb7c <__assert_fail@plt+0x1d90c>
   2eb74:	mov	r3, #11
   2eb78:	b	2eb80 <__assert_fail@plt+0x1d910>
   2eb7c:	mov	r3, #10
   2eb80:	mov	r2, #0
   2eb84:	ldr	r1, [fp, #-48]	; 0xffffffd0
   2eb88:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2eb8c:	bl	3113c <__assert_fail@plt+0x1fecc>
   2eb90:	str	r0, [fp, #-8]
   2eb94:	ldr	r3, [fp, #-8]
   2eb98:	cmp	r3, #0
   2eb9c:	moveq	r3, #1
   2eba0:	movne	r3, #0
   2eba4:	uxtb	r3, r3
   2eba8:	cmp	r3, #0
   2ebac:	bne	2eca4 <__assert_fail@plt+0x1da34>
   2ebb0:	ldr	r3, [fp, #-20]	; 0xffffffec
   2ebb4:	add	r3, r3, #2
   2ebb8:	str	r3, [fp, #-16]
   2ebbc:	b	2ec60 <__assert_fail@plt+0x1d9f0>
   2ebc0:	ldr	r1, [fp, #-56]	; 0xffffffc8
   2ebc4:	ldr	r0, [fp, #-48]	; 0xffffffd0
   2ebc8:	bl	31430 <__assert_fail@plt+0x201c0>
   2ebcc:	str	r0, [fp, #-48]	; 0xffffffd0
   2ebd0:	mov	r3, #16
   2ebd4:	ldr	r2, [fp, #-48]	; 0xffffffd0
   2ebd8:	ldr	r1, [fp, #-8]
   2ebdc:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2ebe0:	bl	3113c <__assert_fail@plt+0x1fecc>
   2ebe4:	str	r0, [fp, #-8]
   2ebe8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2ebec:	cmp	r3, #0
   2ebf0:	moveq	r3, #1
   2ebf4:	movne	r3, #0
   2ebf8:	uxtb	r3, r3
   2ebfc:	cmp	r3, #0
   2ec00:	bne	2ecb0 <__assert_fail@plt+0x1da40>
   2ec04:	ldr	r3, [fp, #-8]
   2ec08:	cmp	r3, #0
   2ec0c:	moveq	r3, #1
   2ec10:	movne	r3, #0
   2ec14:	uxtb	r3, r3
   2ec18:	cmp	r3, #0
   2ec1c:	bne	2ecb0 <__assert_fail@plt+0x1da40>
   2ec20:	mov	r3, #10
   2ec24:	mov	r2, #0
   2ec28:	ldr	r1, [fp, #-8]
   2ec2c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2ec30:	bl	3113c <__assert_fail@plt+0x1fecc>
   2ec34:	str	r0, [fp, #-8]
   2ec38:	ldr	r3, [fp, #-8]
   2ec3c:	cmp	r3, #0
   2ec40:	moveq	r3, #1
   2ec44:	movne	r3, #0
   2ec48:	uxtb	r3, r3
   2ec4c:	cmp	r3, #0
   2ec50:	bne	2ecac <__assert_fail@plt+0x1da3c>
   2ec54:	ldr	r3, [fp, #-16]
   2ec58:	add	r3, r3, #1
   2ec5c:	str	r3, [fp, #-16]
   2ec60:	ldr	r2, [fp, #-16]
   2ec64:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2ec68:	cmp	r2, r3
   2ec6c:	ble	2ebc0 <__assert_fail@plt+0x1d950>
   2ec70:	ldr	r3, [fp, #-12]
   2ec74:	cmp	r3, #0
   2ec78:	beq	2ec94 <__assert_fail@plt+0x1da24>
   2ec7c:	mov	r3, #16
   2ec80:	ldr	r2, [fp, #-8]
   2ec84:	ldr	r1, [fp, #-12]
   2ec88:	ldr	r0, [fp, #-56]	; 0xffffffc8
   2ec8c:	bl	3113c <__assert_fail@plt+0x1fecc>
   2ec90:	str	r0, [fp, #-8]
   2ec94:	ldr	r3, [fp, #-8]
   2ec98:	b	2ecc0 <__assert_fail@plt+0x1da50>
   2ec9c:	nop			; (mov r0, r0)
   2eca0:	b	2ecb0 <__assert_fail@plt+0x1da40>
   2eca4:	nop			; (mov r0, r0)
   2eca8:	b	2ecb0 <__assert_fail@plt+0x1da40>
   2ecac:	nop			; (mov r0, r0)
   2ecb0:	ldr	r3, [fp, #8]
   2ecb4:	mov	r2, #12
   2ecb8:	str	r2, [r3]
   2ecbc:	mov	r3, #0
   2ecc0:	mov	r0, r3
   2ecc4:	sub	sp, fp, #4
   2ecc8:	pop	{fp, pc}
   2eccc:	strdeq	r7, [r0], -pc	; <UNPREDICTABLE>
   2ecd0:	strdeq	r1, [r3], -ip
   2ecd4:	andeq	r1, r3, r8, lsl #6
   2ecd8:	push	{fp, lr}
   2ecdc:	add	fp, sp, #4
   2ece0:	sub	sp, sp, #8
   2ece4:	mov	r3, r0
   2ece8:	str	r1, [fp, #-12]
   2ecec:	strb	r3, [fp, #-5]
   2ecf0:	ldr	r3, [fp, #-12]
   2ecf4:	ldr	r3, [r3, #92]	; 0x5c
   2ecf8:	cmp	r3, #1
   2ecfc:	ble	2ed14 <__assert_fail@plt+0x1daa4>
   2ed00:	ldrb	r3, [fp, #-5]
   2ed04:	mov	r0, r3
   2ed08:	bl	111c8 <btowc@plt>
   2ed0c:	mov	r3, r0
   2ed10:	b	2ed18 <__assert_fail@plt+0x1daa8>
   2ed14:	ldrb	r3, [fp, #-5]
   2ed18:	mov	r0, r3
   2ed1c:	sub	sp, fp, #4
   2ed20:	pop	{fp, pc}
   2ed24:	push	{fp, lr}
   2ed28:	add	fp, sp, #4
   2ed2c:	sub	sp, sp, #48	; 0x30
   2ed30:	str	r0, [fp, #-40]	; 0xffffffd8
   2ed34:	str	r1, [fp, #-44]	; 0xffffffd4
   2ed38:	str	r2, [fp, #-48]	; 0xffffffd0
   2ed3c:	str	r3, [fp, #-52]	; 0xffffffcc
   2ed40:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2ed44:	ldr	r3, [r3]
   2ed48:	cmp	r3, #2
   2ed4c:	moveq	r3, #1
   2ed50:	movne	r3, #0
   2ed54:	uxtb	r3, r3
   2ed58:	cmp	r3, #0
   2ed5c:	bne	2ed80 <__assert_fail@plt+0x1db10>
   2ed60:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2ed64:	ldr	r3, [r3]
   2ed68:	cmp	r3, #4
   2ed6c:	moveq	r3, #1
   2ed70:	movne	r3, #0
   2ed74:	uxtb	r3, r3
   2ed78:	cmp	r3, #0
   2ed7c:	beq	2ed88 <__assert_fail@plt+0x1db18>
   2ed80:	mov	r3, #1
   2ed84:	b	2ed8c <__assert_fail@plt+0x1db1c>
   2ed88:	mov	r3, #0
   2ed8c:	cmp	r3, #0
   2ed90:	bne	2edb4 <__assert_fail@plt+0x1db44>
   2ed94:	ldr	r3, [fp, #4]
   2ed98:	ldr	r3, [r3]
   2ed9c:	cmp	r3, #2
   2eda0:	moveq	r3, #1
   2eda4:	movne	r3, #0
   2eda8:	uxtb	r3, r3
   2edac:	cmp	r3, #0
   2edb0:	beq	2edbc <__assert_fail@plt+0x1db4c>
   2edb4:	mov	r3, #1
   2edb8:	b	2edc0 <__assert_fail@plt+0x1db50>
   2edbc:	mov	r3, #0
   2edc0:	cmp	r3, #0
   2edc4:	bne	2ede8 <__assert_fail@plt+0x1db78>
   2edc8:	ldr	r3, [fp, #4]
   2edcc:	ldr	r3, [r3]
   2edd0:	cmp	r3, #4
   2edd4:	moveq	r3, #1
   2edd8:	movne	r3, #0
   2eddc:	uxtb	r3, r3
   2ede0:	cmp	r3, #0
   2ede4:	beq	2edf0 <__assert_fail@plt+0x1db80>
   2ede8:	mov	r3, #11
   2edec:	b	2f1dc <__assert_fail@plt+0x1df6c>
   2edf0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2edf4:	ldr	r3, [r3]
   2edf8:	cmp	r3, #3
   2edfc:	moveq	r3, #1
   2ee00:	movne	r3, #0
   2ee04:	uxtb	r3, r3
   2ee08:	cmp	r3, #0
   2ee0c:	beq	2ee44 <__assert_fail@plt+0x1dbd4>
   2ee10:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2ee14:	ldr	r3, [r3, #4]
   2ee18:	mov	r0, r3
   2ee1c:	bl	11174 <strlen@plt>
   2ee20:	mov	r3, r0
   2ee24:	cmp	r3, #1
   2ee28:	movhi	r3, #1
   2ee2c:	movls	r3, #0
   2ee30:	uxtb	r3, r3
   2ee34:	cmp	r3, #0
   2ee38:	beq	2ee44 <__assert_fail@plt+0x1dbd4>
   2ee3c:	mov	r3, #1
   2ee40:	b	2ee48 <__assert_fail@plt+0x1dbd8>
   2ee44:	mov	r3, #0
   2ee48:	cmp	r3, #0
   2ee4c:	bne	2eeb0 <__assert_fail@plt+0x1dc40>
   2ee50:	ldr	r3, [fp, #4]
   2ee54:	ldr	r3, [r3]
   2ee58:	cmp	r3, #3
   2ee5c:	moveq	r3, #1
   2ee60:	movne	r3, #0
   2ee64:	uxtb	r3, r3
   2ee68:	cmp	r3, #0
   2ee6c:	beq	2eea4 <__assert_fail@plt+0x1dc34>
   2ee70:	ldr	r3, [fp, #4]
   2ee74:	ldr	r3, [r3, #4]
   2ee78:	mov	r0, r3
   2ee7c:	bl	11174 <strlen@plt>
   2ee80:	mov	r3, r0
   2ee84:	cmp	r3, #1
   2ee88:	movhi	r3, #1
   2ee8c:	movls	r3, #0
   2ee90:	uxtb	r3, r3
   2ee94:	cmp	r3, #0
   2ee98:	beq	2eea4 <__assert_fail@plt+0x1dc34>
   2ee9c:	mov	r3, #1
   2eea0:	b	2eea8 <__assert_fail@plt+0x1dc38>
   2eea4:	mov	r3, #0
   2eea8:	cmp	r3, #0
   2eeac:	beq	2eeb8 <__assert_fail@plt+0x1dc48>
   2eeb0:	mov	r3, #3
   2eeb4:	b	2f1dc <__assert_fail@plt+0x1df6c>
   2eeb8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2eebc:	ldr	r3, [r3]
   2eec0:	cmp	r3, #0
   2eec4:	bne	2eed4 <__assert_fail@plt+0x1dc64>
   2eec8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2eecc:	ldrb	r3, [r3, #4]
   2eed0:	b	2eef8 <__assert_fail@plt+0x1dc88>
   2eed4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2eed8:	ldr	r3, [r3]
   2eedc:	cmp	r3, #3
   2eee0:	bne	2eef4 <__assert_fail@plt+0x1dc84>
   2eee4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2eee8:	ldr	r3, [r3, #4]
   2eeec:	ldrb	r3, [r3]
   2eef0:	b	2eef8 <__assert_fail@plt+0x1dc88>
   2eef4:	mov	r3, #0
   2eef8:	str	r3, [fp, #-12]
   2eefc:	ldr	r3, [fp, #4]
   2ef00:	ldr	r3, [r3]
   2ef04:	cmp	r3, #0
   2ef08:	bne	2ef18 <__assert_fail@plt+0x1dca8>
   2ef0c:	ldr	r3, [fp, #4]
   2ef10:	ldrb	r3, [r3, #4]
   2ef14:	b	2ef3c <__assert_fail@plt+0x1dccc>
   2ef18:	ldr	r3, [fp, #4]
   2ef1c:	ldr	r3, [r3]
   2ef20:	cmp	r3, #3
   2ef24:	bne	2ef38 <__assert_fail@plt+0x1dcc8>
   2ef28:	ldr	r3, [fp, #4]
   2ef2c:	ldr	r3, [r3, #4]
   2ef30:	ldrb	r3, [r3]
   2ef34:	b	2ef3c <__assert_fail@plt+0x1dccc>
   2ef38:	mov	r3, #0
   2ef3c:	str	r3, [fp, #-16]
   2ef40:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2ef44:	ldr	r3, [r3]
   2ef48:	cmp	r3, #0
   2ef4c:	beq	2ef60 <__assert_fail@plt+0x1dcf0>
   2ef50:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2ef54:	ldr	r3, [r3]
   2ef58:	cmp	r3, #3
   2ef5c:	bne	2ef7c <__assert_fail@plt+0x1dd0c>
   2ef60:	ldr	r3, [fp, #-12]
   2ef64:	uxtb	r3, r3
   2ef68:	ldr	r1, [fp, #8]
   2ef6c:	mov	r0, r3
   2ef70:	bl	2ecd8 <__assert_fail@plt+0x1da68>
   2ef74:	mov	r3, r0
   2ef78:	b	2ef84 <__assert_fail@plt+0x1dd14>
   2ef7c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2ef80:	ldr	r3, [r3, #4]
   2ef84:	str	r3, [fp, #-20]	; 0xffffffec
   2ef88:	ldr	r3, [fp, #4]
   2ef8c:	ldr	r3, [r3]
   2ef90:	cmp	r3, #0
   2ef94:	beq	2efa8 <__assert_fail@plt+0x1dd38>
   2ef98:	ldr	r3, [fp, #4]
   2ef9c:	ldr	r3, [r3]
   2efa0:	cmp	r3, #3
   2efa4:	bne	2efc4 <__assert_fail@plt+0x1dd54>
   2efa8:	ldr	r3, [fp, #-16]
   2efac:	uxtb	r3, r3
   2efb0:	ldr	r1, [fp, #8]
   2efb4:	mov	r0, r3
   2efb8:	bl	2ecd8 <__assert_fail@plt+0x1da68>
   2efbc:	mov	r3, r0
   2efc0:	b	2efcc <__assert_fail@plt+0x1dd5c>
   2efc4:	ldr	r3, [fp, #4]
   2efc8:	ldr	r3, [r3, #4]
   2efcc:	str	r3, [fp, #-24]	; 0xffffffe8
   2efd0:	ldr	r3, [fp, #-20]	; 0xffffffec
   2efd4:	cmn	r3, #1
   2efd8:	beq	2efe8 <__assert_fail@plt+0x1dd78>
   2efdc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2efe0:	cmn	r3, #1
   2efe4:	bne	2eff0 <__assert_fail@plt+0x1dd80>
   2efe8:	mov	r3, #3
   2efec:	b	2f1dc <__assert_fail@plt+0x1df6c>
   2eff0:	ldr	r3, [fp, #12]
   2eff4:	and	r3, r3, #65536	; 0x10000
   2eff8:	cmp	r3, #0
   2effc:	movne	r3, #1
   2f000:	moveq	r3, #0
   2f004:	uxtb	r3, r3
   2f008:	cmp	r3, #0
   2f00c:	beq	2f038 <__assert_fail@plt+0x1ddc8>
   2f010:	ldr	r2, [fp, #-20]	; 0xffffffec
   2f014:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f018:	cmp	r2, r3
   2f01c:	movhi	r3, #1
   2f020:	movls	r3, #0
   2f024:	uxtb	r3, r3
   2f028:	cmp	r3, #0
   2f02c:	beq	2f038 <__assert_fail@plt+0x1ddc8>
   2f030:	mov	r3, #11
   2f034:	b	2f1dc <__assert_fail@plt+0x1df6c>
   2f038:	ldr	r3, [fp, #8]
   2f03c:	ldr	r3, [r3, #92]	; 0x5c
   2f040:	cmp	r3, #1
   2f044:	ble	2f184 <__assert_fail@plt+0x1df14>
   2f048:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2f04c:	ldr	r2, [r3]
   2f050:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2f054:	ldr	r3, [r3, #32]
   2f058:	cmp	r2, r3
   2f05c:	moveq	r3, #1
   2f060:	movne	r3, #0
   2f064:	uxtb	r3, r3
   2f068:	cmp	r3, #0
   2f06c:	beq	2f138 <__assert_fail@plt+0x1dec8>
   2f070:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2f074:	ldr	r3, [r3, #32]
   2f078:	lsl	r3, r3, #1
   2f07c:	add	r3, r3, #1
   2f080:	str	r3, [fp, #-28]	; 0xffffffe4
   2f084:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2f088:	ldr	r2, [r3, #4]
   2f08c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2f090:	lsl	r3, r3, #2
   2f094:	mov	r1, r3
   2f098:	mov	r0, r2
   2f09c:	bl	3e040 <__assert_fail@plt+0x2cdd0>
   2f0a0:	str	r0, [fp, #-32]	; 0xffffffe0
   2f0a4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2f0a8:	ldr	r2, [r3, #8]
   2f0ac:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2f0b0:	lsl	r3, r3, #2
   2f0b4:	mov	r1, r3
   2f0b8:	mov	r0, r2
   2f0bc:	bl	3e040 <__assert_fail@plt+0x2cdd0>
   2f0c0:	str	r0, [fp, #-36]	; 0xffffffdc
   2f0c4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2f0c8:	cmp	r3, #0
   2f0cc:	moveq	r3, #1
   2f0d0:	movne	r3, #0
   2f0d4:	uxtb	r3, r3
   2f0d8:	cmp	r3, #0
   2f0dc:	bne	2f0fc <__assert_fail@plt+0x1de8c>
   2f0e0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2f0e4:	cmp	r3, #0
   2f0e8:	moveq	r3, #1
   2f0ec:	movne	r3, #0
   2f0f0:	uxtb	r3, r3
   2f0f4:	cmp	r3, #0
   2f0f8:	beq	2f114 <__assert_fail@plt+0x1dea4>
   2f0fc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   2f100:	bl	13630 <__assert_fail@plt+0x23c0>
   2f104:	ldr	r0, [fp, #-36]	; 0xffffffdc
   2f108:	bl	13630 <__assert_fail@plt+0x23c0>
   2f10c:	mov	r3, #12
   2f110:	b	2f1dc <__assert_fail@plt+0x1df6c>
   2f114:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2f118:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2f11c:	str	r2, [r3, #4]
   2f120:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2f124:	ldr	r2, [fp, #-36]	; 0xffffffdc
   2f128:	str	r2, [r3, #8]
   2f12c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2f130:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2f134:	str	r2, [r3]
   2f138:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2f13c:	ldr	r2, [r3, #4]
   2f140:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2f144:	ldr	r3, [r3, #32]
   2f148:	lsl	r3, r3, #2
   2f14c:	add	r3, r2, r3
   2f150:	ldr	r2, [fp, #-20]	; 0xffffffec
   2f154:	str	r2, [r3]
   2f158:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2f15c:	ldr	r2, [r3, #8]
   2f160:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2f164:	ldr	r3, [r3, #32]
   2f168:	add	r0, r3, #1
   2f16c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   2f170:	str	r0, [r1, #32]
   2f174:	lsl	r3, r3, #2
   2f178:	add	r3, r2, r3
   2f17c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   2f180:	str	r2, [r3]
   2f184:	mov	r3, #0
   2f188:	str	r3, [fp, #-8]
   2f18c:	b	2f1cc <__assert_fail@plt+0x1df5c>
   2f190:	ldr	r2, [fp, #-20]	; 0xffffffec
   2f194:	ldr	r3, [fp, #-8]
   2f198:	cmp	r2, r3
   2f19c:	bhi	2f1c0 <__assert_fail@plt+0x1df50>
   2f1a0:	ldr	r2, [fp, #-8]
   2f1a4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2f1a8:	cmp	r2, r3
   2f1ac:	bhi	2f1c0 <__assert_fail@plt+0x1df50>
   2f1b0:	ldr	r3, [fp, #-8]
   2f1b4:	mov	r1, r3
   2f1b8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   2f1bc:	bl	22fc4 <__assert_fail@plt+0x11d54>
   2f1c0:	ldr	r3, [fp, #-8]
   2f1c4:	add	r3, r3, #1
   2f1c8:	str	r3, [fp, #-8]
   2f1cc:	ldr	r3, [fp, #-8]
   2f1d0:	cmp	r3, #255	; 0xff
   2f1d4:	bls	2f190 <__assert_fail@plt+0x1df20>
   2f1d8:	mov	r3, #0
   2f1dc:	mov	r0, r3
   2f1e0:	sub	sp, fp, #4
   2f1e4:	pop	{fp, pc}
   2f1e8:	push	{fp, lr}
   2f1ec:	add	fp, sp, #4
   2f1f0:	sub	sp, sp, #24
   2f1f4:	str	r0, [fp, #-16]
   2f1f8:	str	r1, [fp, #-20]	; 0xffffffec
   2f1fc:	str	r2, [fp, #-24]	; 0xffffffe8
   2f200:	str	r3, [fp, #-28]	; 0xffffffe4
   2f204:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2f208:	bl	11174 <strlen@plt>
   2f20c:	str	r0, [fp, #-8]
   2f210:	ldr	r3, [fp, #-8]
   2f214:	cmp	r3, #1
   2f218:	movne	r3, #1
   2f21c:	moveq	r3, #0
   2f220:	uxtb	r3, r3
   2f224:	cmp	r3, #0
   2f228:	beq	2f234 <__assert_fail@plt+0x1dfc4>
   2f22c:	mov	r3, #3
   2f230:	b	2f24c <__assert_fail@plt+0x1dfdc>
   2f234:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2f238:	ldrb	r3, [r3]
   2f23c:	mov	r1, r3
   2f240:	ldr	r0, [fp, #-16]
   2f244:	bl	22fc4 <__assert_fail@plt+0x11d54>
   2f248:	mov	r3, #0
   2f24c:	mov	r0, r3
   2f250:	sub	sp, fp, #4
   2f254:	pop	{fp, pc}
   2f258:	push	{fp, lr}
   2f25c:	add	fp, sp, #4
   2f260:	sub	sp, sp, #248	; 0xf8
   2f264:	str	r0, [fp, #-200]	; 0xffffff38
   2f268:	str	r1, [fp, #-204]	; 0xffffff34
   2f26c:	str	r2, [fp, #-208]	; 0xffffff30
   2f270:	str	r3, [fp, #-212]	; 0xffffff2c
   2f274:	mov	r3, #0
   2f278:	str	r3, [fp, #-40]	; 0xffffffd8
   2f27c:	mov	r3, #0
   2f280:	str	r3, [fp, #-44]	; 0xffffffd4
   2f284:	mov	r3, #0
   2f288:	str	r3, [fp, #-48]	; 0xffffffd0
   2f28c:	mov	r3, #0
   2f290:	str	r3, [fp, #-52]	; 0xffffffcc
   2f294:	mov	r3, #0
   2f298:	str	r3, [fp, #-56]	; 0xffffffc8
   2f29c:	mov	r3, #0
   2f2a0:	str	r3, [fp, #-60]	; 0xffffffc4
   2f2a4:	mov	r3, #0
   2f2a8:	str	r3, [fp, #-92]	; 0xffffffa4
   2f2ac:	mov	r3, #0
   2f2b0:	str	r3, [fp, #-96]	; 0xffffffa0
   2f2b4:	mov	r3, #0
   2f2b8:	str	r3, [fp, #-8]
   2f2bc:	mov	r3, #0
   2f2c0:	str	r3, [fp, #-100]	; 0xffffff9c
   2f2c4:	mov	r3, #0
   2f2c8:	str	r3, [fp, #-104]	; 0xffffff98
   2f2cc:	mov	r3, #0
   2f2d0:	strb	r3, [fp, #-9]
   2f2d4:	mov	r3, #1
   2f2d8:	strb	r3, [fp, #-21]	; 0xffffffeb
   2f2dc:	mov	r1, #1
   2f2e0:	mov	r0, #32
   2f2e4:	bl	3ded4 <__assert_fail@plt+0x2cc64>
   2f2e8:	mov	r3, r0
   2f2ec:	str	r3, [fp, #-64]	; 0xffffffc0
   2f2f0:	mov	r1, #1
   2f2f4:	mov	r0, #40	; 0x28
   2f2f8:	bl	3ded4 <__assert_fail@plt+0x2cc64>
   2f2fc:	mov	r3, r0
   2f300:	str	r3, [fp, #-68]	; 0xffffffbc
   2f304:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2f308:	cmp	r3, #0
   2f30c:	moveq	r3, #1
   2f310:	movne	r3, #0
   2f314:	uxtb	r3, r3
   2f318:	cmp	r3, #0
   2f31c:	bne	2f33c <__assert_fail@plt+0x1e0cc>
   2f320:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2f324:	cmp	r3, #0
   2f328:	moveq	r3, #1
   2f32c:	movne	r3, #0
   2f330:	uxtb	r3, r3
   2f334:	cmp	r3, #0
   2f338:	beq	2f360 <__assert_fail@plt+0x1e0f0>
   2f33c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   2f340:	bl	13630 <__assert_fail@plt+0x23c0>
   2f344:	ldr	r0, [fp, #-68]	; 0xffffffbc
   2f348:	bl	13630 <__assert_fail@plt+0x23c0>
   2f34c:	ldr	r3, [fp, #4]
   2f350:	mov	r2, #12
   2f354:	str	r2, [r3]
   2f358:	mov	r3, #0
   2f35c:	b	2fbe8 <__assert_fail@plt+0x1e978>
   2f360:	ldr	r2, [fp, #-212]	; 0xffffff2c
   2f364:	ldr	r1, [fp, #-200]	; 0xffffff38
   2f368:	ldr	r0, [fp, #-208]	; 0xffffff30
   2f36c:	bl	2d2d4 <__assert_fail@plt+0x1c064>
   2f370:	str	r0, [fp, #-20]	; 0xffffffec
   2f374:	ldr	r3, [fp, #-208]	; 0xffffff30
   2f378:	ldrb	r3, [r3, #4]
   2f37c:	cmp	r3, #2
   2f380:	moveq	r3, #1
   2f384:	movne	r3, #0
   2f388:	uxtb	r3, r3
   2f38c:	cmp	r3, #0
   2f390:	beq	2f3a4 <__assert_fail@plt+0x1e134>
   2f394:	ldr	r3, [fp, #4]
   2f398:	mov	r2, #2
   2f39c:	str	r2, [r3]
   2f3a0:	b	2fbd4 <__assert_fail@plt+0x1e964>
   2f3a4:	ldr	r3, [fp, #-208]	; 0xffffff30
   2f3a8:	ldrb	r3, [r3, #4]
   2f3ac:	cmp	r3, #25
   2f3b0:	bne	2f444 <__assert_fail@plt+0x1e1d4>
   2f3b4:	ldr	r2, [fp, #-68]	; 0xffffffbc
   2f3b8:	ldrb	r3, [r2, #16]
   2f3bc:	orr	r3, r3, #1
   2f3c0:	strb	r3, [r2, #16]
   2f3c4:	mov	r3, #1
   2f3c8:	strb	r3, [fp, #-9]
   2f3cc:	ldr	r3, [fp, #-212]	; 0xffffff2c
   2f3d0:	and	r3, r3, #256	; 0x100
   2f3d4:	cmp	r3, #0
   2f3d8:	beq	2f3e8 <__assert_fail@plt+0x1e178>
   2f3dc:	mov	r1, #10
   2f3e0:	ldr	r0, [fp, #-64]	; 0xffffffc0
   2f3e4:	bl	22fc4 <__assert_fail@plt+0x11d54>
   2f3e8:	ldr	r3, [fp, #-200]	; 0xffffff38
   2f3ec:	ldr	r2, [r3, #40]	; 0x28
   2f3f0:	ldr	r3, [fp, #-20]	; 0xffffffec
   2f3f4:	add	r2, r2, r3
   2f3f8:	ldr	r3, [fp, #-200]	; 0xffffff38
   2f3fc:	str	r2, [r3, #40]	; 0x28
   2f400:	ldr	r2, [fp, #-212]	; 0xffffff2c
   2f404:	ldr	r1, [fp, #-200]	; 0xffffff38
   2f408:	ldr	r0, [fp, #-208]	; 0xffffff30
   2f40c:	bl	2d2d4 <__assert_fail@plt+0x1c064>
   2f410:	str	r0, [fp, #-20]	; 0xffffffec
   2f414:	ldr	r3, [fp, #-208]	; 0xffffff30
   2f418:	ldrb	r3, [r3, #4]
   2f41c:	cmp	r3, #2
   2f420:	moveq	r3, #1
   2f424:	movne	r3, #0
   2f428:	uxtb	r3, r3
   2f42c:	cmp	r3, #0
   2f430:	beq	2f444 <__assert_fail@plt+0x1e1d4>
   2f434:	ldr	r3, [fp, #4]
   2f438:	mov	r2, #2
   2f43c:	str	r2, [r3]
   2f440:	b	2fbd4 <__assert_fail@plt+0x1e964>
   2f444:	ldr	r3, [fp, #-208]	; 0xffffff30
   2f448:	ldrb	r3, [r3, #4]
   2f44c:	cmp	r3, #21
   2f450:	bne	2f460 <__assert_fail@plt+0x1e1f0>
   2f454:	ldr	r3, [fp, #-208]	; 0xffffff30
   2f458:	mov	r2, #1
   2f45c:	strb	r2, [r3, #4]
   2f460:	mov	r3, #0
   2f464:	str	r3, [fp, #-28]	; 0xffffffe4
   2f468:	mov	r3, #0
   2f46c:	strb	r3, [fp, #-29]	; 0xffffffe3
   2f470:	sub	r3, fp, #192	; 0xc0
   2f474:	str	r3, [fp, #-108]	; 0xffffff94
   2f478:	mov	r3, #3
   2f47c:	str	r3, [fp, #-112]	; 0xffffff90
   2f480:	sub	r0, fp, #112	; 0x70
   2f484:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   2f488:	str	r3, [sp, #8]
   2f48c:	ldr	r3, [fp, #-212]	; 0xffffff2c
   2f490:	str	r3, [sp, #4]
   2f494:	ldr	r3, [fp, #-204]	; 0xffffff34
   2f498:	str	r3, [sp]
   2f49c:	ldr	r3, [fp, #-20]	; 0xffffffec
   2f4a0:	ldr	r2, [fp, #-208]	; 0xffffff30
   2f4a4:	ldr	r1, [fp, #-200]	; 0xffffff38
   2f4a8:	bl	2fbf4 <__assert_fail@plt+0x1e984>
   2f4ac:	str	r0, [fp, #-72]	; 0xffffffb8
   2f4b0:	ldr	r3, [fp, #-72]	; 0xffffffb8
   2f4b4:	cmp	r3, #0
   2f4b8:	movne	r3, #1
   2f4bc:	moveq	r3, #0
   2f4c0:	uxtb	r3, r3
   2f4c4:	cmp	r3, #0
   2f4c8:	beq	2f4dc <__assert_fail@plt+0x1e26c>
   2f4cc:	ldr	r3, [fp, #4]
   2f4d0:	ldr	r2, [fp, #-72]	; 0xffffffb8
   2f4d4:	str	r2, [r3]
   2f4d8:	b	2fbd4 <__assert_fail@plt+0x1e964>
   2f4dc:	mov	r3, #0
   2f4e0:	strb	r3, [fp, #-21]	; 0xffffffeb
   2f4e4:	ldr	r2, [fp, #-212]	; 0xffffff2c
   2f4e8:	ldr	r1, [fp, #-200]	; 0xffffff38
   2f4ec:	ldr	r0, [fp, #-208]	; 0xffffff30
   2f4f0:	bl	2d2d4 <__assert_fail@plt+0x1c064>
   2f4f4:	str	r0, [fp, #-20]	; 0xffffffec
   2f4f8:	ldr	r3, [fp, #-112]	; 0xffffff90
   2f4fc:	cmp	r3, #4
   2f500:	beq	2f5e8 <__assert_fail@plt+0x1e378>
   2f504:	ldr	r3, [fp, #-112]	; 0xffffff90
   2f508:	cmp	r3, #2
   2f50c:	beq	2f5e8 <__assert_fail@plt+0x1e378>
   2f510:	ldr	r3, [fp, #-208]	; 0xffffff30
   2f514:	ldrb	r3, [r3, #4]
   2f518:	cmp	r3, #2
   2f51c:	moveq	r3, #1
   2f520:	movne	r3, #0
   2f524:	uxtb	r3, r3
   2f528:	cmp	r3, #0
   2f52c:	beq	2f540 <__assert_fail@plt+0x1e2d0>
   2f530:	ldr	r3, [fp, #4]
   2f534:	mov	r2, #7
   2f538:	str	r2, [r3]
   2f53c:	b	2fbd4 <__assert_fail@plt+0x1e964>
   2f540:	ldr	r3, [fp, #-208]	; 0xffffff30
   2f544:	ldrb	r3, [r3, #4]
   2f548:	cmp	r3, #22
   2f54c:	bne	2f5e8 <__assert_fail@plt+0x1e378>
   2f550:	ldr	r3, [fp, #-200]	; 0xffffff38
   2f554:	ldr	r2, [r3, #40]	; 0x28
   2f558:	ldr	r3, [fp, #-20]	; 0xffffffec
   2f55c:	add	r2, r2, r3
   2f560:	ldr	r3, [fp, #-200]	; 0xffffff38
   2f564:	str	r2, [r3, #40]	; 0x28
   2f568:	sub	r3, fp, #128	; 0x80
   2f56c:	ldr	r2, [fp, #-212]	; 0xffffff2c
   2f570:	ldr	r1, [fp, #-200]	; 0xffffff38
   2f574:	mov	r0, r3
   2f578:	bl	2d2d4 <__assert_fail@plt+0x1c064>
   2f57c:	str	r0, [fp, #-28]	; 0xffffffe4
   2f580:	ldrb	r3, [fp, #-124]	; 0xffffff84
   2f584:	cmp	r3, #2
   2f588:	moveq	r3, #1
   2f58c:	movne	r3, #0
   2f590:	uxtb	r3, r3
   2f594:	cmp	r3, #0
   2f598:	beq	2f5ac <__assert_fail@plt+0x1e33c>
   2f59c:	ldr	r3, [fp, #4]
   2f5a0:	mov	r2, #7
   2f5a4:	str	r2, [r3]
   2f5a8:	b	2fbd4 <__assert_fail@plt+0x1e964>
   2f5ac:	ldrb	r3, [fp, #-124]	; 0xffffff84
   2f5b0:	cmp	r3, #21
   2f5b4:	bne	2f5e0 <__assert_fail@plt+0x1e370>
   2f5b8:	ldr	r3, [fp, #-200]	; 0xffffff38
   2f5bc:	ldr	r2, [r3, #40]	; 0x28
   2f5c0:	ldr	r3, [fp, #-20]	; 0xffffffec
   2f5c4:	sub	r2, r2, r3
   2f5c8:	ldr	r3, [fp, #-200]	; 0xffffff38
   2f5cc:	str	r2, [r3, #40]	; 0x28
   2f5d0:	ldr	r3, [fp, #-208]	; 0xffffff30
   2f5d4:	mov	r2, #1
   2f5d8:	strb	r2, [r3, #4]
   2f5dc:	b	2f5e8 <__assert_fail@plt+0x1e378>
   2f5e0:	mov	r3, #1
   2f5e4:	strb	r3, [fp, #-29]	; 0xffffffe3
   2f5e8:	ldrb	r3, [fp, #-29]	; 0xffffffe3
   2f5ec:	cmp	r3, #0
   2f5f0:	beq	2f704 <__assert_fail@plt+0x1e494>
   2f5f4:	sub	r3, fp, #160	; 0xa0
   2f5f8:	str	r3, [fp, #-116]	; 0xffffff8c
   2f5fc:	mov	r3, #3
   2f600:	str	r3, [fp, #-120]	; 0xffffff88
   2f604:	sub	r2, fp, #128	; 0x80
   2f608:	sub	r0, fp, #120	; 0x78
   2f60c:	mov	r3, #1
   2f610:	str	r3, [sp, #8]
   2f614:	ldr	r3, [fp, #-212]	; 0xffffff2c
   2f618:	str	r3, [sp, #4]
   2f61c:	ldr	r3, [fp, #-204]	; 0xffffff34
   2f620:	str	r3, [sp]
   2f624:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2f628:	ldr	r1, [fp, #-200]	; 0xffffff38
   2f62c:	bl	2fbf4 <__assert_fail@plt+0x1e984>
   2f630:	str	r0, [fp, #-72]	; 0xffffffb8
   2f634:	ldr	r3, [fp, #-72]	; 0xffffffb8
   2f638:	cmp	r3, #0
   2f63c:	movne	r3, #1
   2f640:	moveq	r3, #0
   2f644:	uxtb	r3, r3
   2f648:	cmp	r3, #0
   2f64c:	beq	2f660 <__assert_fail@plt+0x1e3f0>
   2f650:	ldr	r3, [fp, #4]
   2f654:	ldr	r2, [fp, #-72]	; 0xffffffb8
   2f658:	str	r2, [r3]
   2f65c:	b	2fbd4 <__assert_fail@plt+0x1e964>
   2f660:	ldr	r2, [fp, #-212]	; 0xffffff2c
   2f664:	ldr	r1, [fp, #-200]	; 0xffffff38
   2f668:	ldr	r0, [fp, #-208]	; 0xffffff30
   2f66c:	bl	2d2d4 <__assert_fail@plt+0x1c064>
   2f670:	str	r0, [fp, #-20]	; 0xffffffec
   2f674:	sub	r1, fp, #112	; 0x70
   2f678:	sub	r2, fp, #96	; 0x60
   2f67c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2f680:	str	r3, [sp, #32]
   2f684:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2f688:	str	r3, [sp, #28]
   2f68c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2f690:	str	r3, [sp, #24]
   2f694:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2f698:	str	r3, [sp, #20]
   2f69c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   2f6a0:	str	r3, [sp, #16]
   2f6a4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2f6a8:	str	r3, [sp, #12]
   2f6ac:	ldr	r3, [fp, #-212]	; 0xffffff2c
   2f6b0:	str	r3, [sp, #8]
   2f6b4:	ldr	r3, [fp, #-204]	; 0xffffff34
   2f6b8:	str	r3, [sp, #4]
   2f6bc:	sub	r3, fp, #120	; 0x78
   2f6c0:	str	r3, [sp]
   2f6c4:	mov	r3, r1
   2f6c8:	ldr	r1, [fp, #-68]	; 0xffffffbc
   2f6cc:	ldr	r0, [fp, #-64]	; 0xffffffc0
   2f6d0:	bl	2ed24 <__assert_fail@plt+0x1dab4>
   2f6d4:	mov	r2, r0
   2f6d8:	ldr	r3, [fp, #4]
   2f6dc:	str	r2, [r3]
   2f6e0:	ldr	r3, [fp, #4]
   2f6e4:	ldr	r3, [r3]
   2f6e8:	cmp	r3, #0
   2f6ec:	movne	r3, #1
   2f6f0:	moveq	r3, #0
   2f6f4:	uxtb	r3, r3
   2f6f8:	cmp	r3, #0
   2f6fc:	beq	2f908 <__assert_fail@plt+0x1e698>
   2f700:	b	2fbd4 <__assert_fail@plt+0x1e964>
   2f704:	ldr	r3, [fp, #-112]	; 0xffffff90
   2f708:	cmp	r3, #4
   2f70c:	ldrls	pc, [pc, r3, lsl #2]
   2f710:	b	2f8f4 <__assert_fail@plt+0x1e684>
   2f714:	andeq	pc, r2, r8, lsr #14
   2f718:	andeq	pc, r2, ip, lsr r7	; <UNPREDICTABLE>
   2f71c:	andeq	pc, r2, ip, ror #15
   2f720:	andeq	pc, r2, r0, lsr r8	; <UNPREDICTABLE>
   2f724:	muleq	r2, r8, r8
   2f728:	ldrb	r3, [fp, #-108]	; 0xffffff94
   2f72c:	mov	r1, r3
   2f730:	ldr	r0, [fp, #-64]	; 0xffffffc0
   2f734:	bl	22fc4 <__assert_fail@plt+0x11d54>
   2f738:	b	2f908 <__assert_fail@plt+0x1e698>
   2f73c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2f740:	ldr	r2, [r3, #20]
   2f744:	ldr	r3, [fp, #-8]
   2f748:	cmp	r2, r3
   2f74c:	moveq	r3, #1
   2f750:	movne	r3, #0
   2f754:	uxtb	r3, r3
   2f758:	cmp	r3, #0
   2f75c:	beq	2f7bc <__assert_fail@plt+0x1e54c>
   2f760:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2f764:	ldr	r3, [r3, #20]
   2f768:	lsl	r3, r3, #1
   2f76c:	add	r3, r3, #1
   2f770:	str	r3, [fp, #-8]
   2f774:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2f778:	ldr	r2, [r3]
   2f77c:	ldr	r3, [fp, #-8]
   2f780:	lsl	r3, r3, #2
   2f784:	mov	r1, r3
   2f788:	mov	r0, r2
   2f78c:	bl	3e040 <__assert_fail@plt+0x2cdd0>
   2f790:	str	r0, [fp, #-76]	; 0xffffffb4
   2f794:	ldr	r3, [fp, #-76]	; 0xffffffb4
   2f798:	cmp	r3, #0
   2f79c:	moveq	r3, #1
   2f7a0:	movne	r3, #0
   2f7a4:	uxtb	r3, r3
   2f7a8:	cmp	r3, #0
   2f7ac:	bne	2fbac <__assert_fail@plt+0x1e93c>
   2f7b0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2f7b4:	ldr	r2, [fp, #-76]	; 0xffffffb4
   2f7b8:	str	r2, [r3]
   2f7bc:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2f7c0:	ldr	r2, [r3]
   2f7c4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2f7c8:	ldr	r3, [r3, #20]
   2f7cc:	add	r0, r3, #1
   2f7d0:	ldr	r1, [fp, #-68]	; 0xffffffbc
   2f7d4:	str	r0, [r1, #20]
   2f7d8:	lsl	r3, r3, #2
   2f7dc:	add	r3, r2, r3
   2f7e0:	ldr	r2, [fp, #-108]	; 0xffffff94
   2f7e4:	str	r2, [r3]
   2f7e8:	b	2f908 <__assert_fail@plt+0x1e698>
   2f7ec:	ldr	r3, [fp, #-108]	; 0xffffff94
   2f7f0:	sub	r2, fp, #100	; 0x64
   2f7f4:	ldr	r1, [fp, #-68]	; 0xffffffbc
   2f7f8:	ldr	r0, [fp, #-64]	; 0xffffffc0
   2f7fc:	bl	2ff20 <__assert_fail@plt+0x1ecb0>
   2f800:	mov	r2, r0
   2f804:	ldr	r3, [fp, #4]
   2f808:	str	r2, [r3]
   2f80c:	ldr	r3, [fp, #4]
   2f810:	ldr	r3, [r3]
   2f814:	cmp	r3, #0
   2f818:	movne	r3, #1
   2f81c:	moveq	r3, #0
   2f820:	uxtb	r3, r3
   2f824:	cmp	r3, #0
   2f828:	beq	2f8f4 <__assert_fail@plt+0x1e684>
   2f82c:	b	2fbd4 <__assert_fail@plt+0x1e964>
   2f830:	ldr	r1, [fp, #-108]	; 0xffffff94
   2f834:	sub	r2, fp, #92	; 0x5c
   2f838:	ldr	r3, [fp, #-60]	; 0xffffffc4
   2f83c:	str	r3, [sp, #12]
   2f840:	ldr	r3, [fp, #-56]	; 0xffffffc8
   2f844:	str	r3, [sp, #8]
   2f848:	ldr	r3, [fp, #-52]	; 0xffffffcc
   2f84c:	str	r3, [sp, #4]
   2f850:	ldr	r3, [fp, #-48]	; 0xffffffd0
   2f854:	str	r3, [sp]
   2f858:	mov	r3, r1
   2f85c:	ldr	r1, [fp, #-68]	; 0xffffffbc
   2f860:	ldr	r0, [fp, #-64]	; 0xffffffc0
   2f864:	bl	2f1e8 <__assert_fail@plt+0x1df78>
   2f868:	mov	r2, r0
   2f86c:	ldr	r3, [fp, #4]
   2f870:	str	r2, [r3]
   2f874:	ldr	r3, [fp, #4]
   2f878:	ldr	r3, [r3]
   2f87c:	cmp	r3, #0
   2f880:	movne	r3, #1
   2f884:	moveq	r3, #0
   2f888:	uxtb	r3, r3
   2f88c:	cmp	r3, #0
   2f890:	beq	2f8fc <__assert_fail@plt+0x1e68c>
   2f894:	b	2fbd4 <__assert_fail@plt+0x1e964>
   2f898:	ldr	r3, [fp, #-200]	; 0xffffff38
   2f89c:	ldr	r0, [r3, #64]	; 0x40
   2f8a0:	ldr	r3, [fp, #-108]	; 0xffffff94
   2f8a4:	sub	r1, fp, #104	; 0x68
   2f8a8:	ldr	r2, [fp, #-212]	; 0xffffff2c
   2f8ac:	str	r2, [sp, #4]
   2f8b0:	str	r3, [sp]
   2f8b4:	mov	r3, r1
   2f8b8:	ldr	r2, [fp, #-68]	; 0xffffffbc
   2f8bc:	ldr	r1, [fp, #-64]	; 0xffffffc0
   2f8c0:	bl	2ff8c <__assert_fail@plt+0x1ed1c>
   2f8c4:	mov	r2, r0
   2f8c8:	ldr	r3, [fp, #4]
   2f8cc:	str	r2, [r3]
   2f8d0:	ldr	r3, [fp, #4]
   2f8d4:	ldr	r3, [r3]
   2f8d8:	cmp	r3, #0
   2f8dc:	movne	r3, #1
   2f8e0:	moveq	r3, #0
   2f8e4:	uxtb	r3, r3
   2f8e8:	cmp	r3, #0
   2f8ec:	beq	2f904 <__assert_fail@plt+0x1e694>
   2f8f0:	b	2fbd4 <__assert_fail@plt+0x1e964>
   2f8f4:	nop			; (mov r0, r0)
   2f8f8:	b	2f908 <__assert_fail@plt+0x1e698>
   2f8fc:	nop			; (mov r0, r0)
   2f900:	b	2f908 <__assert_fail@plt+0x1e698>
   2f904:	nop			; (mov r0, r0)
   2f908:	ldr	r3, [fp, #-208]	; 0xffffff30
   2f90c:	ldrb	r3, [r3, #4]
   2f910:	cmp	r3, #2
   2f914:	moveq	r3, #1
   2f918:	movne	r3, #0
   2f91c:	uxtb	r3, r3
   2f920:	cmp	r3, #0
   2f924:	beq	2f93c <__assert_fail@plt+0x1e6cc>
   2f928:	ldr	r3, [fp, #4]
   2f92c:	mov	r2, #7
   2f930:	str	r2, [r3]
   2f934:	nop			; (mov r0, r0)
   2f938:	b	2fbd4 <__assert_fail@plt+0x1e964>
   2f93c:	ldr	r3, [fp, #-208]	; 0xffffff30
   2f940:	ldrb	r3, [r3, #4]
   2f944:	cmp	r3, #21
   2f948:	bne	2f460 <__assert_fail@plt+0x1e1f0>
   2f94c:	ldr	r3, [fp, #-200]	; 0xffffff38
   2f950:	ldr	r2, [r3, #40]	; 0x28
   2f954:	ldr	r3, [fp, #-20]	; 0xffffffec
   2f958:	add	r2, r2, r3
   2f95c:	ldr	r3, [fp, #-200]	; 0xffffff38
   2f960:	str	r2, [r3, #40]	; 0x28
   2f964:	ldrb	r3, [fp, #-9]
   2f968:	cmp	r3, #0
   2f96c:	bne	2f974 <__assert_fail@plt+0x1e704>
   2f970:	b	2f97c <__assert_fail@plt+0x1e70c>
   2f974:	ldr	r0, [fp, #-64]	; 0xffffffc0
   2f978:	bl	231ec <__assert_fail@plt+0x11f7c>
   2f97c:	ldr	r3, [fp, #-204]	; 0xffffff34
   2f980:	ldr	r3, [r3, #92]	; 0x5c
   2f984:	cmp	r3, #1
   2f988:	ble	2f9a0 <__assert_fail@plt+0x1e730>
   2f98c:	ldr	r3, [fp, #-204]	; 0xffffff34
   2f990:	ldr	r3, [r3, #60]	; 0x3c
   2f994:	mov	r1, r3
   2f998:	ldr	r0, [fp, #-64]	; 0xffffffc0
   2f99c:	bl	232e4 <__assert_fail@plt+0x12074>
   2f9a0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2f9a4:	ldr	r3, [r3, #20]
   2f9a8:	cmp	r3, #0
   2f9ac:	bne	2fa18 <__assert_fail@plt+0x1e7a8>
   2f9b0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2f9b4:	ldr	r3, [r3, #24]
   2f9b8:	cmp	r3, #0
   2f9bc:	bne	2fa18 <__assert_fail@plt+0x1e7a8>
   2f9c0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2f9c4:	ldr	r3, [r3, #28]
   2f9c8:	cmp	r3, #0
   2f9cc:	bne	2fa18 <__assert_fail@plt+0x1e7a8>
   2f9d0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2f9d4:	ldr	r3, [r3, #32]
   2f9d8:	cmp	r3, #0
   2f9dc:	bne	2fa18 <__assert_fail@plt+0x1e7a8>
   2f9e0:	ldr	r3, [fp, #-204]	; 0xffffff34
   2f9e4:	ldr	r3, [r3, #92]	; 0x5c
   2f9e8:	cmp	r3, #1
   2f9ec:	ble	2fb50 <__assert_fail@plt+0x1e8e0>
   2f9f0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2f9f4:	ldr	r3, [r3, #36]	; 0x24
   2f9f8:	cmp	r3, #0
   2f9fc:	bne	2fa18 <__assert_fail@plt+0x1e7a8>
   2fa00:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2fa04:	ldrb	r3, [r3, #16]
   2fa08:	and	r3, r3, #1
   2fa0c:	uxtb	r3, r3
   2fa10:	cmp	r3, #0
   2fa14:	beq	2fb50 <__assert_fail@plt+0x1e8e0>
   2fa18:	ldr	r2, [fp, #-204]	; 0xffffff34
   2fa1c:	ldrb	r3, [r2, #88]	; 0x58
   2fa20:	orr	r3, r3, #2
   2fa24:	strb	r3, [r2, #88]	; 0x58
   2fa28:	mov	r3, #6
   2fa2c:	strb	r3, [fp, #-84]	; 0xffffffac
   2fa30:	ldr	r3, [fp, #-68]	; 0xffffffbc
   2fa34:	str	r3, [fp, #-88]	; 0xffffffa8
   2fa38:	sub	r3, fp, #88	; 0x58
   2fa3c:	mov	r2, #0
   2fa40:	mov	r1, #0
   2fa44:	ldr	r0, [fp, #-204]	; 0xffffff34
   2fa48:	bl	31198 <__assert_fail@plt+0x1ff28>
   2fa4c:	str	r0, [fp, #-80]	; 0xffffffb0
   2fa50:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2fa54:	cmp	r3, #0
   2fa58:	moveq	r3, #1
   2fa5c:	movne	r3, #0
   2fa60:	uxtb	r3, r3
   2fa64:	cmp	r3, #0
   2fa68:	bne	2fbb4 <__assert_fail@plt+0x1e944>
   2fa6c:	mov	r3, #0
   2fa70:	str	r3, [fp, #-36]	; 0xffffffdc
   2fa74:	b	2faa0 <__assert_fail@plt+0x1e830>
   2fa78:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2fa7c:	lsl	r3, r3, #2
   2fa80:	ldr	r2, [fp, #-64]	; 0xffffffc0
   2fa84:	add	r3, r2, r3
   2fa88:	ldr	r3, [r3]
   2fa8c:	cmp	r3, #0
   2fa90:	bne	2fab0 <__assert_fail@plt+0x1e840>
   2fa94:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2fa98:	add	r3, r3, #1
   2fa9c:	str	r3, [fp, #-36]	; 0xffffffdc
   2faa0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2faa4:	cmp	r3, #7
   2faa8:	ble	2fa78 <__assert_fail@plt+0x1e808>
   2faac:	b	2fab4 <__assert_fail@plt+0x1e844>
   2fab0:	nop			; (mov r0, r0)
   2fab4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2fab8:	cmp	r3, #7
   2fabc:	bgt	2fb3c <__assert_fail@plt+0x1e8cc>
   2fac0:	mov	r3, #3
   2fac4:	strb	r3, [fp, #-84]	; 0xffffffac
   2fac8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2facc:	str	r3, [fp, #-88]	; 0xffffffa8
   2fad0:	sub	r3, fp, #88	; 0x58
   2fad4:	mov	r2, #0
   2fad8:	mov	r1, #0
   2fadc:	ldr	r0, [fp, #-204]	; 0xffffff34
   2fae0:	bl	31198 <__assert_fail@plt+0x1ff28>
   2fae4:	str	r0, [fp, #-16]
   2fae8:	ldr	r3, [fp, #-16]
   2faec:	cmp	r3, #0
   2faf0:	moveq	r3, #1
   2faf4:	movne	r3, #0
   2faf8:	uxtb	r3, r3
   2fafc:	cmp	r3, #0
   2fb00:	bne	2fbbc <__assert_fail@plt+0x1e94c>
   2fb04:	mov	r3, #10
   2fb08:	ldr	r2, [fp, #-80]	; 0xffffffb0
   2fb0c:	ldr	r1, [fp, #-16]
   2fb10:	ldr	r0, [fp, #-204]	; 0xffffff34
   2fb14:	bl	3113c <__assert_fail@plt+0x1fecc>
   2fb18:	str	r0, [fp, #-16]
   2fb1c:	ldr	r3, [fp, #-16]
   2fb20:	cmp	r3, #0
   2fb24:	moveq	r3, #1
   2fb28:	movne	r3, #0
   2fb2c:	uxtb	r3, r3
   2fb30:	cmp	r3, #0
   2fb34:	beq	2fba0 <__assert_fail@plt+0x1e930>
   2fb38:	b	2fbc8 <__assert_fail@plt+0x1e958>
   2fb3c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   2fb40:	bl	13630 <__assert_fail@plt+0x23c0>
   2fb44:	ldr	r3, [fp, #-80]	; 0xffffffb0
   2fb48:	str	r3, [fp, #-16]
   2fb4c:	b	2fba0 <__assert_fail@plt+0x1e930>
   2fb50:	ldr	r0, [fp, #-68]	; 0xffffffbc
   2fb54:	bl	310d8 <__assert_fail@plt+0x1fe68>
   2fb58:	mov	r3, #3
   2fb5c:	strb	r3, [fp, #-84]	; 0xffffffac
   2fb60:	ldr	r3, [fp, #-64]	; 0xffffffc0
   2fb64:	str	r3, [fp, #-88]	; 0xffffffa8
   2fb68:	sub	r3, fp, #88	; 0x58
   2fb6c:	mov	r2, #0
   2fb70:	mov	r1, #0
   2fb74:	ldr	r0, [fp, #-204]	; 0xffffff34
   2fb78:	bl	31198 <__assert_fail@plt+0x1ff28>
   2fb7c:	str	r0, [fp, #-16]
   2fb80:	ldr	r3, [fp, #-16]
   2fb84:	cmp	r3, #0
   2fb88:	moveq	r3, #1
   2fb8c:	movne	r3, #0
   2fb90:	uxtb	r3, r3
   2fb94:	cmp	r3, #0
   2fb98:	bne	2fbc4 <__assert_fail@plt+0x1e954>
   2fb9c:	b	2fba4 <__assert_fail@plt+0x1e934>
   2fba0:	nop			; (mov r0, r0)
   2fba4:	ldr	r3, [fp, #-16]
   2fba8:	b	2fbe8 <__assert_fail@plt+0x1e978>
   2fbac:	nop			; (mov r0, r0)
   2fbb0:	b	2fbc8 <__assert_fail@plt+0x1e958>
   2fbb4:	nop			; (mov r0, r0)
   2fbb8:	b	2fbc8 <__assert_fail@plt+0x1e958>
   2fbbc:	nop			; (mov r0, r0)
   2fbc0:	b	2fbc8 <__assert_fail@plt+0x1e958>
   2fbc4:	nop			; (mov r0, r0)
   2fbc8:	ldr	r3, [fp, #4]
   2fbcc:	mov	r2, #12
   2fbd0:	str	r2, [r3]
   2fbd4:	ldr	r0, [fp, #-64]	; 0xffffffc0
   2fbd8:	bl	13630 <__assert_fail@plt+0x23c0>
   2fbdc:	ldr	r0, [fp, #-68]	; 0xffffffbc
   2fbe0:	bl	310d8 <__assert_fail@plt+0x1fe68>
   2fbe4:	mov	r3, #0
   2fbe8:	mov	r0, r3
   2fbec:	sub	sp, fp, #4
   2fbf0:	pop	{fp, pc}
   2fbf4:	push	{fp, lr}
   2fbf8:	add	fp, sp, #4
   2fbfc:	sub	sp, sp, #32
   2fc00:	str	r0, [fp, #-24]	; 0xffffffe8
   2fc04:	str	r1, [fp, #-28]	; 0xffffffe4
   2fc08:	str	r2, [fp, #-32]	; 0xffffffe0
   2fc0c:	str	r3, [fp, #-36]	; 0xffffffdc
   2fc10:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2fc14:	ldr	r3, [r3, #40]	; 0x28
   2fc18:	mov	r1, r3
   2fc1c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2fc20:	bl	2336c <__assert_fail@plt+0x120fc>
   2fc24:	str	r0, [fp, #-8]
   2fc28:	ldr	r3, [fp, #-8]
   2fc2c:	cmp	r3, #1
   2fc30:	ble	2fc80 <__assert_fail@plt+0x1ea10>
   2fc34:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2fc38:	mov	r2, #1
   2fc3c:	str	r2, [r3]
   2fc40:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2fc44:	ldr	r3, [r3, #40]	; 0x28
   2fc48:	mov	r1, r3
   2fc4c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2fc50:	bl	23410 <__assert_fail@plt+0x121a0>
   2fc54:	mov	r2, r0
   2fc58:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2fc5c:	str	r2, [r3, #4]
   2fc60:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2fc64:	ldr	r2, [r3, #40]	; 0x28
   2fc68:	ldr	r3, [fp, #-8]
   2fc6c:	add	r2, r2, r3
   2fc70:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2fc74:	str	r2, [r3, #40]	; 0x28
   2fc78:	mov	r3, #0
   2fc7c:	b	2fd5c <__assert_fail@plt+0x1eaec>
   2fc80:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2fc84:	ldr	r2, [r3, #40]	; 0x28
   2fc88:	ldr	r3, [fp, #-36]	; 0xffffffdc
   2fc8c:	add	r2, r2, r3
   2fc90:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2fc94:	str	r2, [r3, #40]	; 0x28
   2fc98:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2fc9c:	ldrb	r3, [r3, #4]
   2fca0:	cmp	r3, #26
   2fca4:	beq	2fcc8 <__assert_fail@plt+0x1ea58>
   2fca8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2fcac:	ldrb	r3, [r3, #4]
   2fcb0:	cmp	r3, #30
   2fcb4:	beq	2fcc8 <__assert_fail@plt+0x1ea58>
   2fcb8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2fcbc:	ldrb	r3, [r3, #4]
   2fcc0:	cmp	r3, #28
   2fcc4:	bne	2fce0 <__assert_fail@plt+0x1ea70>
   2fcc8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   2fccc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2fcd0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   2fcd4:	bl	2fd68 <__assert_fail@plt+0x1eaf8>
   2fcd8:	mov	r3, r0
   2fcdc:	b	2fd5c <__assert_fail@plt+0x1eaec>
   2fce0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2fce4:	ldrb	r3, [r3, #4]
   2fce8:	cmp	r3, #22
   2fcec:	moveq	r3, #1
   2fcf0:	movne	r3, #0
   2fcf4:	uxtb	r3, r3
   2fcf8:	cmp	r3, #0
   2fcfc:	beq	2fd3c <__assert_fail@plt+0x1eacc>
   2fd00:	ldrb	r3, [fp, #12]
   2fd04:	eor	r3, r3, #1
   2fd08:	uxtb	r3, r3
   2fd0c:	cmp	r3, #0
   2fd10:	beq	2fd3c <__assert_fail@plt+0x1eacc>
   2fd14:	sub	r3, fp, #16
   2fd18:	ldr	r2, [fp, #8]
   2fd1c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2fd20:	mov	r0, r3
   2fd24:	bl	2d2d4 <__assert_fail@plt+0x1c064>
   2fd28:	ldrb	r3, [fp, #-12]
   2fd2c:	cmp	r3, #21
   2fd30:	beq	2fd3c <__assert_fail@plt+0x1eacc>
   2fd34:	mov	r3, #11
   2fd38:	b	2fd5c <__assert_fail@plt+0x1eaec>
   2fd3c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2fd40:	mov	r2, #0
   2fd44:	str	r2, [r3]
   2fd48:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2fd4c:	ldrb	r2, [r3]
   2fd50:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2fd54:	strb	r2, [r3, #4]
   2fd58:	mov	r3, #0
   2fd5c:	mov	r0, r3
   2fd60:	sub	sp, fp, #4
   2fd64:	pop	{fp, pc}
   2fd68:	push	{fp, lr}
   2fd6c:	add	fp, sp, #4
   2fd70:	sub	sp, sp, #32
   2fd74:	str	r0, [fp, #-24]	; 0xffffffe8
   2fd78:	str	r1, [fp, #-28]	; 0xffffffe4
   2fd7c:	str	r2, [fp, #-32]	; 0xffffffe0
   2fd80:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2fd84:	ldrb	r3, [r3]
   2fd88:	strb	r3, [fp, #-13]
   2fd8c:	mov	r3, #0
   2fd90:	str	r3, [fp, #-12]
   2fd94:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2fd98:	ldr	r2, [r3, #56]	; 0x38
   2fd9c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2fda0:	ldr	r3, [r3, #40]	; 0x28
   2fda4:	cmp	r2, r3
   2fda8:	bgt	2fdb4 <__assert_fail@plt+0x1eb44>
   2fdac:	mov	r3, #7
   2fdb0:	b	2ff14 <__assert_fail@plt+0x1eca4>
   2fdb4:	ldr	r3, [fp, #-12]
   2fdb8:	cmp	r3, #31
   2fdbc:	ble	2fdc8 <__assert_fail@plt+0x1eb58>
   2fdc0:	mov	r3, #7
   2fdc4:	b	2ff14 <__assert_fail@plt+0x1eca4>
   2fdc8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2fdcc:	ldrb	r3, [r3, #4]
   2fdd0:	cmp	r3, #30
   2fdd4:	bne	2fdec <__assert_fail@plt+0x1eb7c>
   2fdd8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   2fddc:	bl	25af8 <__assert_fail@plt+0x14888>
   2fde0:	mov	r3, r0
   2fde4:	strb	r3, [fp, #-5]
   2fde8:	b	2fe14 <__assert_fail@plt+0x1eba4>
   2fdec:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2fdf0:	ldr	r2, [r3, #4]
   2fdf4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2fdf8:	ldr	r3, [r3, #40]	; 0x28
   2fdfc:	add	r0, r3, #1
   2fe00:	ldr	r1, [fp, #-28]	; 0xffffffe4
   2fe04:	str	r0, [r1, #40]	; 0x28
   2fe08:	add	r3, r2, r3
   2fe0c:	ldrb	r3, [r3]
   2fe10:	strb	r3, [fp, #-5]
   2fe14:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2fe18:	ldr	r2, [r3, #56]	; 0x38
   2fe1c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2fe20:	ldr	r3, [r3, #40]	; 0x28
   2fe24:	cmp	r2, r3
   2fe28:	bgt	2fe34 <__assert_fail@plt+0x1ebc4>
   2fe2c:	mov	r3, #7
   2fe30:	b	2ff14 <__assert_fail@plt+0x1eca4>
   2fe34:	ldrb	r2, [fp, #-5]
   2fe38:	ldrb	r3, [fp, #-13]
   2fe3c:	cmp	r2, r3
   2fe40:	bne	2fe64 <__assert_fail@plt+0x1ebf4>
   2fe44:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2fe48:	ldr	r3, [r3, #4]
   2fe4c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   2fe50:	ldr	r2, [r2, #40]	; 0x28
   2fe54:	add	r3, r3, r2
   2fe58:	ldrb	r3, [r3]
   2fe5c:	cmp	r3, #93	; 0x5d
   2fe60:	beq	2fe8c <__assert_fail@plt+0x1ec1c>
   2fe64:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2fe68:	ldr	r2, [r3, #4]
   2fe6c:	ldr	r3, [fp, #-12]
   2fe70:	add	r3, r2, r3
   2fe74:	ldrb	r2, [fp, #-5]
   2fe78:	strb	r2, [r3]
   2fe7c:	ldr	r3, [fp, #-12]
   2fe80:	add	r3, r3, #1
   2fe84:	str	r3, [fp, #-12]
   2fe88:	b	2fdb4 <__assert_fail@plt+0x1eb44>
   2fe8c:	nop			; (mov r0, r0)
   2fe90:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2fe94:	ldr	r3, [r3, #40]	; 0x28
   2fe98:	add	r2, r3, #1
   2fe9c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   2fea0:	str	r2, [r3, #40]	; 0x28
   2fea4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2fea8:	ldr	r2, [r3, #4]
   2feac:	ldr	r3, [fp, #-12]
   2feb0:	add	r3, r2, r3
   2feb4:	mov	r2, #0
   2feb8:	strb	r2, [r3]
   2febc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   2fec0:	ldrb	r3, [r3, #4]
   2fec4:	cmp	r3, #28
   2fec8:	beq	2fef0 <__assert_fail@plt+0x1ec80>
   2fecc:	cmp	r3, #30
   2fed0:	beq	2ff00 <__assert_fail@plt+0x1ec90>
   2fed4:	cmp	r3, #26
   2fed8:	beq	2fee0 <__assert_fail@plt+0x1ec70>
   2fedc:	b	2ff10 <__assert_fail@plt+0x1eca0>
   2fee0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2fee4:	mov	r2, #3
   2fee8:	str	r2, [r3]
   2feec:	b	2ff10 <__assert_fail@plt+0x1eca0>
   2fef0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2fef4:	mov	r2, #2
   2fef8:	str	r2, [r3]
   2fefc:	b	2ff10 <__assert_fail@plt+0x1eca0>
   2ff00:	ldr	r3, [fp, #-24]	; 0xffffffe8
   2ff04:	mov	r2, #4
   2ff08:	str	r2, [r3]
   2ff0c:	nop			; (mov r0, r0)
   2ff10:	mov	r3, #0
   2ff14:	mov	r0, r3
   2ff18:	sub	sp, fp, #4
   2ff1c:	pop	{fp, pc}
   2ff20:	push	{fp, lr}
   2ff24:	add	fp, sp, #4
   2ff28:	sub	sp, sp, #16
   2ff2c:	str	r0, [fp, #-8]
   2ff30:	str	r1, [fp, #-12]
   2ff34:	str	r2, [fp, #-16]
   2ff38:	str	r3, [fp, #-20]	; 0xffffffec
   2ff3c:	ldr	r0, [fp, #-20]	; 0xffffffec
   2ff40:	bl	11174 <strlen@plt>
   2ff44:	mov	r3, r0
   2ff48:	cmp	r3, #1
   2ff4c:	movne	r3, #1
   2ff50:	moveq	r3, #0
   2ff54:	uxtb	r3, r3
   2ff58:	cmp	r3, #0
   2ff5c:	beq	2ff68 <__assert_fail@plt+0x1ecf8>
   2ff60:	mov	r3, #3
   2ff64:	b	2ff80 <__assert_fail@plt+0x1ed10>
   2ff68:	ldr	r3, [fp, #-20]	; 0xffffffec
   2ff6c:	ldrb	r3, [r3]
   2ff70:	mov	r1, r3
   2ff74:	ldr	r0, [fp, #-8]
   2ff78:	bl	22fc4 <__assert_fail@plt+0x11d54>
   2ff7c:	mov	r3, #0
   2ff80:	mov	r0, r3
   2ff84:	sub	sp, fp, #4
   2ff88:	pop	{fp, pc}
   2ff8c:	push	{r4, fp, lr}
   2ff90:	add	fp, sp, #8
   2ff94:	sub	sp, sp, #36	; 0x24
   2ff98:	str	r0, [fp, #-32]	; 0xffffffe0
   2ff9c:	str	r1, [fp, #-36]	; 0xffffffdc
   2ffa0:	str	r2, [fp, #-40]	; 0xffffffd8
   2ffa4:	str	r3, [fp, #-44]	; 0xffffffd4
   2ffa8:	ldr	r3, [fp, #4]
   2ffac:	str	r3, [fp, #-20]	; 0xffffffec
   2ffb0:	ldr	r3, [fp, #8]
   2ffb4:	and	r3, r3, #4194304	; 0x400000
   2ffb8:	cmp	r3, #0
   2ffbc:	beq	2fff8 <__assert_fail@plt+0x1ed88>
   2ffc0:	ldr	r1, [pc, #3300]	; 30cac <__assert_fail@plt+0x1fa3c>
   2ffc4:	ldr	r0, [fp, #-20]	; 0xffffffec
   2ffc8:	bl	10fa0 <strcmp@plt>
   2ffcc:	mov	r3, r0
   2ffd0:	cmp	r3, #0
   2ffd4:	beq	2fff0 <__assert_fail@plt+0x1ed80>
   2ffd8:	ldr	r1, [pc, #3280]	; 30cb0 <__assert_fail@plt+0x1fa40>
   2ffdc:	ldr	r0, [fp, #-20]	; 0xffffffec
   2ffe0:	bl	10fa0 <strcmp@plt>
   2ffe4:	mov	r3, r0
   2ffe8:	cmp	r3, #0
   2ffec:	bne	2fff8 <__assert_fail@plt+0x1ed88>
   2fff0:	ldr	r3, [pc, #3260]	; 30cb4 <__assert_fail@plt+0x1fa44>
   2fff4:	str	r3, [fp, #-20]	; 0xffffffec
   2fff8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   2fffc:	ldr	r2, [r3]
   30000:	ldr	r3, [fp, #-40]	; 0xffffffd8
   30004:	ldr	r3, [r3, #36]	; 0x24
   30008:	cmp	r2, r3
   3000c:	moveq	r3, #1
   30010:	movne	r3, #0
   30014:	uxtb	r3, r3
   30018:	cmp	r3, #0
   3001c:	beq	30090 <__assert_fail@plt+0x1ee20>
   30020:	ldr	r3, [fp, #-40]	; 0xffffffd8
   30024:	ldr	r3, [r3, #36]	; 0x24
   30028:	lsl	r3, r3, #1
   3002c:	add	r3, r3, #1
   30030:	str	r3, [fp, #-24]	; 0xffffffe8
   30034:	ldr	r3, [fp, #-40]	; 0xffffffd8
   30038:	ldr	r2, [r3, #12]
   3003c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30040:	lsl	r3, r3, #2
   30044:	mov	r1, r3
   30048:	mov	r0, r2
   3004c:	bl	3e040 <__assert_fail@plt+0x2cdd0>
   30050:	str	r0, [fp, #-28]	; 0xffffffe4
   30054:	ldr	r3, [fp, #-28]	; 0xffffffe4
   30058:	cmp	r3, #0
   3005c:	moveq	r3, #1
   30060:	movne	r3, #0
   30064:	uxtb	r3, r3
   30068:	cmp	r3, #0
   3006c:	beq	30078 <__assert_fail@plt+0x1ee08>
   30070:	mov	r3, #12
   30074:	b	30ca0 <__assert_fail@plt+0x1fa30>
   30078:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3007c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   30080:	str	r2, [r3, #12]
   30084:	ldr	r3, [fp, #-44]	; 0xffffffd4
   30088:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3008c:	str	r2, [r3]
   30090:	ldr	r3, [fp, #-40]	; 0xffffffd8
   30094:	ldr	r2, [r3, #12]
   30098:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3009c:	ldr	r3, [r3, #36]	; 0x24
   300a0:	add	r0, r3, #1
   300a4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   300a8:	str	r0, [r1, #36]	; 0x24
   300ac:	lsl	r3, r3, #2
   300b0:	add	r4, r2, r3
   300b4:	ldr	r0, [fp, #-20]	; 0xffffffec
   300b8:	bl	10f70 <wctype@plt>
   300bc:	mov	r3, r0
   300c0:	str	r3, [r4]
   300c4:	ldr	r1, [pc, #3052]	; 30cb8 <__assert_fail@plt+0x1fa48>
   300c8:	ldr	r0, [fp, #-20]	; 0xffffffec
   300cc:	bl	10fa0 <strcmp@plt>
   300d0:	mov	r3, r0
   300d4:	cmp	r3, #0
   300d8:	bne	301c0 <__assert_fail@plt+0x1ef50>
   300dc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   300e0:	cmp	r3, #0
   300e4:	movne	r3, #1
   300e8:	moveq	r3, #0
   300ec:	uxtb	r3, r3
   300f0:	cmp	r3, #0
   300f4:	beq	30164 <__assert_fail@plt+0x1eef4>
   300f8:	mov	r3, #0
   300fc:	str	r3, [fp, #-16]
   30100:	b	30154 <__assert_fail@plt+0x1eee4>
   30104:	bl	11150 <__ctype_b_loc@plt>
   30108:	mov	r3, r0
   3010c:	ldr	r2, [r3]
   30110:	ldr	r3, [fp, #-16]
   30114:	lsl	r3, r3, #1
   30118:	add	r3, r2, r3
   3011c:	ldrh	r3, [r3]
   30120:	and	r3, r3, #8
   30124:	cmp	r3, #0
   30128:	beq	30148 <__assert_fail@plt+0x1eed8>
   3012c:	ldr	r3, [fp, #-16]
   30130:	ldr	r2, [fp, #-32]	; 0xffffffe0
   30134:	add	r3, r2, r3
   30138:	ldrb	r3, [r3]
   3013c:	mov	r1, r3
   30140:	ldr	r0, [fp, #-36]	; 0xffffffdc
   30144:	bl	22fc4 <__assert_fail@plt+0x11d54>
   30148:	ldr	r3, [fp, #-16]
   3014c:	add	r3, r3, #1
   30150:	str	r3, [fp, #-16]
   30154:	ldr	r3, [fp, #-16]
   30158:	cmp	r3, #255	; 0xff
   3015c:	ble	30104 <__assert_fail@plt+0x1ee94>
   30160:	b	30c9c <__assert_fail@plt+0x1fa2c>
   30164:	mov	r3, #0
   30168:	str	r3, [fp, #-16]
   3016c:	b	301b0 <__assert_fail@plt+0x1ef40>
   30170:	bl	11150 <__ctype_b_loc@plt>
   30174:	mov	r3, r0
   30178:	ldr	r2, [r3]
   3017c:	ldr	r3, [fp, #-16]
   30180:	lsl	r3, r3, #1
   30184:	add	r3, r2, r3
   30188:	ldrh	r3, [r3]
   3018c:	and	r3, r3, #8
   30190:	cmp	r3, #0
   30194:	beq	301a4 <__assert_fail@plt+0x1ef34>
   30198:	ldr	r1, [fp, #-16]
   3019c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   301a0:	bl	22fc4 <__assert_fail@plt+0x11d54>
   301a4:	ldr	r3, [fp, #-16]
   301a8:	add	r3, r3, #1
   301ac:	str	r3, [fp, #-16]
   301b0:	ldr	r3, [fp, #-16]
   301b4:	cmp	r3, #255	; 0xff
   301b8:	ble	30170 <__assert_fail@plt+0x1ef00>
   301bc:	b	30c9c <__assert_fail@plt+0x1fa2c>
   301c0:	ldr	r1, [pc, #2804]	; 30cbc <__assert_fail@plt+0x1fa4c>
   301c4:	ldr	r0, [fp, #-20]	; 0xffffffec
   301c8:	bl	10fa0 <strcmp@plt>
   301cc:	mov	r3, r0
   301d0:	cmp	r3, #0
   301d4:	bne	302bc <__assert_fail@plt+0x1f04c>
   301d8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   301dc:	cmp	r3, #0
   301e0:	movne	r3, #1
   301e4:	moveq	r3, #0
   301e8:	uxtb	r3, r3
   301ec:	cmp	r3, #0
   301f0:	beq	30260 <__assert_fail@plt+0x1eff0>
   301f4:	mov	r3, #0
   301f8:	str	r3, [fp, #-16]
   301fc:	b	30250 <__assert_fail@plt+0x1efe0>
   30200:	bl	11150 <__ctype_b_loc@plt>
   30204:	mov	r3, r0
   30208:	ldr	r2, [r3]
   3020c:	ldr	r3, [fp, #-16]
   30210:	lsl	r3, r3, #1
   30214:	add	r3, r2, r3
   30218:	ldrh	r3, [r3]
   3021c:	and	r3, r3, #2
   30220:	cmp	r3, #0
   30224:	beq	30244 <__assert_fail@plt+0x1efd4>
   30228:	ldr	r3, [fp, #-16]
   3022c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   30230:	add	r3, r2, r3
   30234:	ldrb	r3, [r3]
   30238:	mov	r1, r3
   3023c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   30240:	bl	22fc4 <__assert_fail@plt+0x11d54>
   30244:	ldr	r3, [fp, #-16]
   30248:	add	r3, r3, #1
   3024c:	str	r3, [fp, #-16]
   30250:	ldr	r3, [fp, #-16]
   30254:	cmp	r3, #255	; 0xff
   30258:	ble	30200 <__assert_fail@plt+0x1ef90>
   3025c:	b	30c9c <__assert_fail@plt+0x1fa2c>
   30260:	mov	r3, #0
   30264:	str	r3, [fp, #-16]
   30268:	b	302ac <__assert_fail@plt+0x1f03c>
   3026c:	bl	11150 <__ctype_b_loc@plt>
   30270:	mov	r3, r0
   30274:	ldr	r2, [r3]
   30278:	ldr	r3, [fp, #-16]
   3027c:	lsl	r3, r3, #1
   30280:	add	r3, r2, r3
   30284:	ldrh	r3, [r3]
   30288:	and	r3, r3, #2
   3028c:	cmp	r3, #0
   30290:	beq	302a0 <__assert_fail@plt+0x1f030>
   30294:	ldr	r1, [fp, #-16]
   30298:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3029c:	bl	22fc4 <__assert_fail@plt+0x11d54>
   302a0:	ldr	r3, [fp, #-16]
   302a4:	add	r3, r3, #1
   302a8:	str	r3, [fp, #-16]
   302ac:	ldr	r3, [fp, #-16]
   302b0:	cmp	r3, #255	; 0xff
   302b4:	ble	3026c <__assert_fail@plt+0x1effc>
   302b8:	b	30c9c <__assert_fail@plt+0x1fa2c>
   302bc:	ldr	r1, [pc, #2540]	; 30cb0 <__assert_fail@plt+0x1fa40>
   302c0:	ldr	r0, [fp, #-20]	; 0xffffffec
   302c4:	bl	10fa0 <strcmp@plt>
   302c8:	mov	r3, r0
   302cc:	cmp	r3, #0
   302d0:	bne	303b8 <__assert_fail@plt+0x1f148>
   302d4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   302d8:	cmp	r3, #0
   302dc:	movne	r3, #1
   302e0:	moveq	r3, #0
   302e4:	uxtb	r3, r3
   302e8:	cmp	r3, #0
   302ec:	beq	3035c <__assert_fail@plt+0x1f0ec>
   302f0:	mov	r3, #0
   302f4:	str	r3, [fp, #-16]
   302f8:	b	3034c <__assert_fail@plt+0x1f0dc>
   302fc:	bl	11150 <__ctype_b_loc@plt>
   30300:	mov	r3, r0
   30304:	ldr	r2, [r3]
   30308:	ldr	r3, [fp, #-16]
   3030c:	lsl	r3, r3, #1
   30310:	add	r3, r2, r3
   30314:	ldrh	r3, [r3]
   30318:	and	r3, r3, #512	; 0x200
   3031c:	cmp	r3, #0
   30320:	beq	30340 <__assert_fail@plt+0x1f0d0>
   30324:	ldr	r3, [fp, #-16]
   30328:	ldr	r2, [fp, #-32]	; 0xffffffe0
   3032c:	add	r3, r2, r3
   30330:	ldrb	r3, [r3]
   30334:	mov	r1, r3
   30338:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3033c:	bl	22fc4 <__assert_fail@plt+0x11d54>
   30340:	ldr	r3, [fp, #-16]
   30344:	add	r3, r3, #1
   30348:	str	r3, [fp, #-16]
   3034c:	ldr	r3, [fp, #-16]
   30350:	cmp	r3, #255	; 0xff
   30354:	ble	302fc <__assert_fail@plt+0x1f08c>
   30358:	b	30c9c <__assert_fail@plt+0x1fa2c>
   3035c:	mov	r3, #0
   30360:	str	r3, [fp, #-16]
   30364:	b	303a8 <__assert_fail@plt+0x1f138>
   30368:	bl	11150 <__ctype_b_loc@plt>
   3036c:	mov	r3, r0
   30370:	ldr	r2, [r3]
   30374:	ldr	r3, [fp, #-16]
   30378:	lsl	r3, r3, #1
   3037c:	add	r3, r2, r3
   30380:	ldrh	r3, [r3]
   30384:	and	r3, r3, #512	; 0x200
   30388:	cmp	r3, #0
   3038c:	beq	3039c <__assert_fail@plt+0x1f12c>
   30390:	ldr	r1, [fp, #-16]
   30394:	ldr	r0, [fp, #-36]	; 0xffffffdc
   30398:	bl	22fc4 <__assert_fail@plt+0x11d54>
   3039c:	ldr	r3, [fp, #-16]
   303a0:	add	r3, r3, #1
   303a4:	str	r3, [fp, #-16]
   303a8:	ldr	r3, [fp, #-16]
   303ac:	cmp	r3, #255	; 0xff
   303b0:	ble	30368 <__assert_fail@plt+0x1f0f8>
   303b4:	b	30c9c <__assert_fail@plt+0x1fa2c>
   303b8:	ldr	r1, [pc, #2304]	; 30cc0 <__assert_fail@plt+0x1fa50>
   303bc:	ldr	r0, [fp, #-20]	; 0xffffffec
   303c0:	bl	10fa0 <strcmp@plt>
   303c4:	mov	r3, r0
   303c8:	cmp	r3, #0
   303cc:	bne	304b4 <__assert_fail@plt+0x1f244>
   303d0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   303d4:	cmp	r3, #0
   303d8:	movne	r3, #1
   303dc:	moveq	r3, #0
   303e0:	uxtb	r3, r3
   303e4:	cmp	r3, #0
   303e8:	beq	30458 <__assert_fail@plt+0x1f1e8>
   303ec:	mov	r3, #0
   303f0:	str	r3, [fp, #-16]
   303f4:	b	30448 <__assert_fail@plt+0x1f1d8>
   303f8:	bl	11150 <__ctype_b_loc@plt>
   303fc:	mov	r3, r0
   30400:	ldr	r2, [r3]
   30404:	ldr	r3, [fp, #-16]
   30408:	lsl	r3, r3, #1
   3040c:	add	r3, r2, r3
   30410:	ldrh	r3, [r3]
   30414:	and	r3, r3, #8192	; 0x2000
   30418:	cmp	r3, #0
   3041c:	beq	3043c <__assert_fail@plt+0x1f1cc>
   30420:	ldr	r3, [fp, #-16]
   30424:	ldr	r2, [fp, #-32]	; 0xffffffe0
   30428:	add	r3, r2, r3
   3042c:	ldrb	r3, [r3]
   30430:	mov	r1, r3
   30434:	ldr	r0, [fp, #-36]	; 0xffffffdc
   30438:	bl	22fc4 <__assert_fail@plt+0x11d54>
   3043c:	ldr	r3, [fp, #-16]
   30440:	add	r3, r3, #1
   30444:	str	r3, [fp, #-16]
   30448:	ldr	r3, [fp, #-16]
   3044c:	cmp	r3, #255	; 0xff
   30450:	ble	303f8 <__assert_fail@plt+0x1f188>
   30454:	b	30c9c <__assert_fail@plt+0x1fa2c>
   30458:	mov	r3, #0
   3045c:	str	r3, [fp, #-16]
   30460:	b	304a4 <__assert_fail@plt+0x1f234>
   30464:	bl	11150 <__ctype_b_loc@plt>
   30468:	mov	r3, r0
   3046c:	ldr	r2, [r3]
   30470:	ldr	r3, [fp, #-16]
   30474:	lsl	r3, r3, #1
   30478:	add	r3, r2, r3
   3047c:	ldrh	r3, [r3]
   30480:	and	r3, r3, #8192	; 0x2000
   30484:	cmp	r3, #0
   30488:	beq	30498 <__assert_fail@plt+0x1f228>
   3048c:	ldr	r1, [fp, #-16]
   30490:	ldr	r0, [fp, #-36]	; 0xffffffdc
   30494:	bl	22fc4 <__assert_fail@plt+0x11d54>
   30498:	ldr	r3, [fp, #-16]
   3049c:	add	r3, r3, #1
   304a0:	str	r3, [fp, #-16]
   304a4:	ldr	r3, [fp, #-16]
   304a8:	cmp	r3, #255	; 0xff
   304ac:	ble	30464 <__assert_fail@plt+0x1f1f4>
   304b0:	b	30c9c <__assert_fail@plt+0x1fa2c>
   304b4:	ldr	r1, [pc, #2040]	; 30cb4 <__assert_fail@plt+0x1fa44>
   304b8:	ldr	r0, [fp, #-20]	; 0xffffffec
   304bc:	bl	10fa0 <strcmp@plt>
   304c0:	mov	r3, r0
   304c4:	cmp	r3, #0
   304c8:	bne	305b0 <__assert_fail@plt+0x1f340>
   304cc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   304d0:	cmp	r3, #0
   304d4:	movne	r3, #1
   304d8:	moveq	r3, #0
   304dc:	uxtb	r3, r3
   304e0:	cmp	r3, #0
   304e4:	beq	30554 <__assert_fail@plt+0x1f2e4>
   304e8:	mov	r3, #0
   304ec:	str	r3, [fp, #-16]
   304f0:	b	30544 <__assert_fail@plt+0x1f2d4>
   304f4:	bl	11150 <__ctype_b_loc@plt>
   304f8:	mov	r3, r0
   304fc:	ldr	r2, [r3]
   30500:	ldr	r3, [fp, #-16]
   30504:	lsl	r3, r3, #1
   30508:	add	r3, r2, r3
   3050c:	ldrh	r3, [r3]
   30510:	and	r3, r3, #1024	; 0x400
   30514:	cmp	r3, #0
   30518:	beq	30538 <__assert_fail@plt+0x1f2c8>
   3051c:	ldr	r3, [fp, #-16]
   30520:	ldr	r2, [fp, #-32]	; 0xffffffe0
   30524:	add	r3, r2, r3
   30528:	ldrb	r3, [r3]
   3052c:	mov	r1, r3
   30530:	ldr	r0, [fp, #-36]	; 0xffffffdc
   30534:	bl	22fc4 <__assert_fail@plt+0x11d54>
   30538:	ldr	r3, [fp, #-16]
   3053c:	add	r3, r3, #1
   30540:	str	r3, [fp, #-16]
   30544:	ldr	r3, [fp, #-16]
   30548:	cmp	r3, #255	; 0xff
   3054c:	ble	304f4 <__assert_fail@plt+0x1f284>
   30550:	b	30c9c <__assert_fail@plt+0x1fa2c>
   30554:	mov	r3, #0
   30558:	str	r3, [fp, #-16]
   3055c:	b	305a0 <__assert_fail@plt+0x1f330>
   30560:	bl	11150 <__ctype_b_loc@plt>
   30564:	mov	r3, r0
   30568:	ldr	r2, [r3]
   3056c:	ldr	r3, [fp, #-16]
   30570:	lsl	r3, r3, #1
   30574:	add	r3, r2, r3
   30578:	ldrh	r3, [r3]
   3057c:	and	r3, r3, #1024	; 0x400
   30580:	cmp	r3, #0
   30584:	beq	30594 <__assert_fail@plt+0x1f324>
   30588:	ldr	r1, [fp, #-16]
   3058c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   30590:	bl	22fc4 <__assert_fail@plt+0x11d54>
   30594:	ldr	r3, [fp, #-16]
   30598:	add	r3, r3, #1
   3059c:	str	r3, [fp, #-16]
   305a0:	ldr	r3, [fp, #-16]
   305a4:	cmp	r3, #255	; 0xff
   305a8:	ble	30560 <__assert_fail@plt+0x1f2f0>
   305ac:	b	30c9c <__assert_fail@plt+0x1fa2c>
   305b0:	ldr	r1, [pc, #1804]	; 30cc4 <__assert_fail@plt+0x1fa54>
   305b4:	ldr	r0, [fp, #-20]	; 0xffffffec
   305b8:	bl	10fa0 <strcmp@plt>
   305bc:	mov	r3, r0
   305c0:	cmp	r3, #0
   305c4:	bne	306ac <__assert_fail@plt+0x1f43c>
   305c8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   305cc:	cmp	r3, #0
   305d0:	movne	r3, #1
   305d4:	moveq	r3, #0
   305d8:	uxtb	r3, r3
   305dc:	cmp	r3, #0
   305e0:	beq	30650 <__assert_fail@plt+0x1f3e0>
   305e4:	mov	r3, #0
   305e8:	str	r3, [fp, #-16]
   305ec:	b	30640 <__assert_fail@plt+0x1f3d0>
   305f0:	bl	11150 <__ctype_b_loc@plt>
   305f4:	mov	r3, r0
   305f8:	ldr	r2, [r3]
   305fc:	ldr	r3, [fp, #-16]
   30600:	lsl	r3, r3, #1
   30604:	add	r3, r2, r3
   30608:	ldrh	r3, [r3]
   3060c:	and	r3, r3, #2048	; 0x800
   30610:	cmp	r3, #0
   30614:	beq	30634 <__assert_fail@plt+0x1f3c4>
   30618:	ldr	r3, [fp, #-16]
   3061c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   30620:	add	r3, r2, r3
   30624:	ldrb	r3, [r3]
   30628:	mov	r1, r3
   3062c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   30630:	bl	22fc4 <__assert_fail@plt+0x11d54>
   30634:	ldr	r3, [fp, #-16]
   30638:	add	r3, r3, #1
   3063c:	str	r3, [fp, #-16]
   30640:	ldr	r3, [fp, #-16]
   30644:	cmp	r3, #255	; 0xff
   30648:	ble	305f0 <__assert_fail@plt+0x1f380>
   3064c:	b	30c9c <__assert_fail@plt+0x1fa2c>
   30650:	mov	r3, #0
   30654:	str	r3, [fp, #-16]
   30658:	b	3069c <__assert_fail@plt+0x1f42c>
   3065c:	bl	11150 <__ctype_b_loc@plt>
   30660:	mov	r3, r0
   30664:	ldr	r2, [r3]
   30668:	ldr	r3, [fp, #-16]
   3066c:	lsl	r3, r3, #1
   30670:	add	r3, r2, r3
   30674:	ldrh	r3, [r3]
   30678:	and	r3, r3, #2048	; 0x800
   3067c:	cmp	r3, #0
   30680:	beq	30690 <__assert_fail@plt+0x1f420>
   30684:	ldr	r1, [fp, #-16]
   30688:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3068c:	bl	22fc4 <__assert_fail@plt+0x11d54>
   30690:	ldr	r3, [fp, #-16]
   30694:	add	r3, r3, #1
   30698:	str	r3, [fp, #-16]
   3069c:	ldr	r3, [fp, #-16]
   306a0:	cmp	r3, #255	; 0xff
   306a4:	ble	3065c <__assert_fail@plt+0x1f3ec>
   306a8:	b	30c9c <__assert_fail@plt+0x1fa2c>
   306ac:	ldr	r1, [pc, #1556]	; 30cc8 <__assert_fail@plt+0x1fa58>
   306b0:	ldr	r0, [fp, #-20]	; 0xffffffec
   306b4:	bl	10fa0 <strcmp@plt>
   306b8:	mov	r3, r0
   306bc:	cmp	r3, #0
   306c0:	bne	307a8 <__assert_fail@plt+0x1f538>
   306c4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   306c8:	cmp	r3, #0
   306cc:	movne	r3, #1
   306d0:	moveq	r3, #0
   306d4:	uxtb	r3, r3
   306d8:	cmp	r3, #0
   306dc:	beq	3074c <__assert_fail@plt+0x1f4dc>
   306e0:	mov	r3, #0
   306e4:	str	r3, [fp, #-16]
   306e8:	b	3073c <__assert_fail@plt+0x1f4cc>
   306ec:	bl	11150 <__ctype_b_loc@plt>
   306f0:	mov	r3, r0
   306f4:	ldr	r2, [r3]
   306f8:	ldr	r3, [fp, #-16]
   306fc:	lsl	r3, r3, #1
   30700:	add	r3, r2, r3
   30704:	ldrh	r3, [r3]
   30708:	and	r3, r3, #16384	; 0x4000
   3070c:	cmp	r3, #0
   30710:	beq	30730 <__assert_fail@plt+0x1f4c0>
   30714:	ldr	r3, [fp, #-16]
   30718:	ldr	r2, [fp, #-32]	; 0xffffffe0
   3071c:	add	r3, r2, r3
   30720:	ldrb	r3, [r3]
   30724:	mov	r1, r3
   30728:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3072c:	bl	22fc4 <__assert_fail@plt+0x11d54>
   30730:	ldr	r3, [fp, #-16]
   30734:	add	r3, r3, #1
   30738:	str	r3, [fp, #-16]
   3073c:	ldr	r3, [fp, #-16]
   30740:	cmp	r3, #255	; 0xff
   30744:	ble	306ec <__assert_fail@plt+0x1f47c>
   30748:	b	30c9c <__assert_fail@plt+0x1fa2c>
   3074c:	mov	r3, #0
   30750:	str	r3, [fp, #-16]
   30754:	b	30798 <__assert_fail@plt+0x1f528>
   30758:	bl	11150 <__ctype_b_loc@plt>
   3075c:	mov	r3, r0
   30760:	ldr	r2, [r3]
   30764:	ldr	r3, [fp, #-16]
   30768:	lsl	r3, r3, #1
   3076c:	add	r3, r2, r3
   30770:	ldrh	r3, [r3]
   30774:	and	r3, r3, #16384	; 0x4000
   30778:	cmp	r3, #0
   3077c:	beq	3078c <__assert_fail@plt+0x1f51c>
   30780:	ldr	r1, [fp, #-16]
   30784:	ldr	r0, [fp, #-36]	; 0xffffffdc
   30788:	bl	22fc4 <__assert_fail@plt+0x11d54>
   3078c:	ldr	r3, [fp, #-16]
   30790:	add	r3, r3, #1
   30794:	str	r3, [fp, #-16]
   30798:	ldr	r3, [fp, #-16]
   3079c:	cmp	r3, #255	; 0xff
   307a0:	ble	30758 <__assert_fail@plt+0x1f4e8>
   307a4:	b	30c9c <__assert_fail@plt+0x1fa2c>
   307a8:	ldr	r1, [pc, #1276]	; 30cac <__assert_fail@plt+0x1fa3c>
   307ac:	ldr	r0, [fp, #-20]	; 0xffffffec
   307b0:	bl	10fa0 <strcmp@plt>
   307b4:	mov	r3, r0
   307b8:	cmp	r3, #0
   307bc:	bne	308a4 <__assert_fail@plt+0x1f634>
   307c0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   307c4:	cmp	r3, #0
   307c8:	movne	r3, #1
   307cc:	moveq	r3, #0
   307d0:	uxtb	r3, r3
   307d4:	cmp	r3, #0
   307d8:	beq	30848 <__assert_fail@plt+0x1f5d8>
   307dc:	mov	r3, #0
   307e0:	str	r3, [fp, #-16]
   307e4:	b	30838 <__assert_fail@plt+0x1f5c8>
   307e8:	bl	11150 <__ctype_b_loc@plt>
   307ec:	mov	r3, r0
   307f0:	ldr	r2, [r3]
   307f4:	ldr	r3, [fp, #-16]
   307f8:	lsl	r3, r3, #1
   307fc:	add	r3, r2, r3
   30800:	ldrh	r3, [r3]
   30804:	and	r3, r3, #256	; 0x100
   30808:	cmp	r3, #0
   3080c:	beq	3082c <__assert_fail@plt+0x1f5bc>
   30810:	ldr	r3, [fp, #-16]
   30814:	ldr	r2, [fp, #-32]	; 0xffffffe0
   30818:	add	r3, r2, r3
   3081c:	ldrb	r3, [r3]
   30820:	mov	r1, r3
   30824:	ldr	r0, [fp, #-36]	; 0xffffffdc
   30828:	bl	22fc4 <__assert_fail@plt+0x11d54>
   3082c:	ldr	r3, [fp, #-16]
   30830:	add	r3, r3, #1
   30834:	str	r3, [fp, #-16]
   30838:	ldr	r3, [fp, #-16]
   3083c:	cmp	r3, #255	; 0xff
   30840:	ble	307e8 <__assert_fail@plt+0x1f578>
   30844:	b	30c9c <__assert_fail@plt+0x1fa2c>
   30848:	mov	r3, #0
   3084c:	str	r3, [fp, #-16]
   30850:	b	30894 <__assert_fail@plt+0x1f624>
   30854:	bl	11150 <__ctype_b_loc@plt>
   30858:	mov	r3, r0
   3085c:	ldr	r2, [r3]
   30860:	ldr	r3, [fp, #-16]
   30864:	lsl	r3, r3, #1
   30868:	add	r3, r2, r3
   3086c:	ldrh	r3, [r3]
   30870:	and	r3, r3, #256	; 0x100
   30874:	cmp	r3, #0
   30878:	beq	30888 <__assert_fail@plt+0x1f618>
   3087c:	ldr	r1, [fp, #-16]
   30880:	ldr	r0, [fp, #-36]	; 0xffffffdc
   30884:	bl	22fc4 <__assert_fail@plt+0x11d54>
   30888:	ldr	r3, [fp, #-16]
   3088c:	add	r3, r3, #1
   30890:	str	r3, [fp, #-16]
   30894:	ldr	r3, [fp, #-16]
   30898:	cmp	r3, #255	; 0xff
   3089c:	ble	30854 <__assert_fail@plt+0x1f5e4>
   308a0:	b	30c9c <__assert_fail@plt+0x1fa2c>
   308a4:	ldr	r1, [pc, #1056]	; 30ccc <__assert_fail@plt+0x1fa5c>
   308a8:	ldr	r0, [fp, #-20]	; 0xffffffec
   308ac:	bl	10fa0 <strcmp@plt>
   308b0:	mov	r3, r0
   308b4:	cmp	r3, #0
   308b8:	bne	309a0 <__assert_fail@plt+0x1f730>
   308bc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   308c0:	cmp	r3, #0
   308c4:	movne	r3, #1
   308c8:	moveq	r3, #0
   308cc:	uxtb	r3, r3
   308d0:	cmp	r3, #0
   308d4:	beq	30944 <__assert_fail@plt+0x1f6d4>
   308d8:	mov	r3, #0
   308dc:	str	r3, [fp, #-16]
   308e0:	b	30934 <__assert_fail@plt+0x1f6c4>
   308e4:	bl	11150 <__ctype_b_loc@plt>
   308e8:	mov	r3, r0
   308ec:	ldr	r2, [r3]
   308f0:	ldr	r3, [fp, #-16]
   308f4:	lsl	r3, r3, #1
   308f8:	add	r3, r2, r3
   308fc:	ldrh	r3, [r3]
   30900:	and	r3, r3, #1
   30904:	cmp	r3, #0
   30908:	beq	30928 <__assert_fail@plt+0x1f6b8>
   3090c:	ldr	r3, [fp, #-16]
   30910:	ldr	r2, [fp, #-32]	; 0xffffffe0
   30914:	add	r3, r2, r3
   30918:	ldrb	r3, [r3]
   3091c:	mov	r1, r3
   30920:	ldr	r0, [fp, #-36]	; 0xffffffdc
   30924:	bl	22fc4 <__assert_fail@plt+0x11d54>
   30928:	ldr	r3, [fp, #-16]
   3092c:	add	r3, r3, #1
   30930:	str	r3, [fp, #-16]
   30934:	ldr	r3, [fp, #-16]
   30938:	cmp	r3, #255	; 0xff
   3093c:	ble	308e4 <__assert_fail@plt+0x1f674>
   30940:	b	30c9c <__assert_fail@plt+0x1fa2c>
   30944:	mov	r3, #0
   30948:	str	r3, [fp, #-16]
   3094c:	b	30990 <__assert_fail@plt+0x1f720>
   30950:	bl	11150 <__ctype_b_loc@plt>
   30954:	mov	r3, r0
   30958:	ldr	r2, [r3]
   3095c:	ldr	r3, [fp, #-16]
   30960:	lsl	r3, r3, #1
   30964:	add	r3, r2, r3
   30968:	ldrh	r3, [r3]
   3096c:	and	r3, r3, #1
   30970:	cmp	r3, #0
   30974:	beq	30984 <__assert_fail@plt+0x1f714>
   30978:	ldr	r1, [fp, #-16]
   3097c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   30980:	bl	22fc4 <__assert_fail@plt+0x11d54>
   30984:	ldr	r3, [fp, #-16]
   30988:	add	r3, r3, #1
   3098c:	str	r3, [fp, #-16]
   30990:	ldr	r3, [fp, #-16]
   30994:	cmp	r3, #255	; 0xff
   30998:	ble	30950 <__assert_fail@plt+0x1f6e0>
   3099c:	b	30c9c <__assert_fail@plt+0x1fa2c>
   309a0:	ldr	r1, [pc, #808]	; 30cd0 <__assert_fail@plt+0x1fa60>
   309a4:	ldr	r0, [fp, #-20]	; 0xffffffec
   309a8:	bl	10fa0 <strcmp@plt>
   309ac:	mov	r3, r0
   309b0:	cmp	r3, #0
   309b4:	bne	30a9c <__assert_fail@plt+0x1f82c>
   309b8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   309bc:	cmp	r3, #0
   309c0:	movne	r3, #1
   309c4:	moveq	r3, #0
   309c8:	uxtb	r3, r3
   309cc:	cmp	r3, #0
   309d0:	beq	30a40 <__assert_fail@plt+0x1f7d0>
   309d4:	mov	r3, #0
   309d8:	str	r3, [fp, #-16]
   309dc:	b	30a30 <__assert_fail@plt+0x1f7c0>
   309e0:	bl	11150 <__ctype_b_loc@plt>
   309e4:	mov	r3, r0
   309e8:	ldr	r2, [r3]
   309ec:	ldr	r3, [fp, #-16]
   309f0:	lsl	r3, r3, #1
   309f4:	add	r3, r2, r3
   309f8:	ldrh	r3, [r3]
   309fc:	sxth	r3, r3
   30a00:	cmp	r3, #0
   30a04:	bge	30a24 <__assert_fail@plt+0x1f7b4>
   30a08:	ldr	r3, [fp, #-16]
   30a0c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   30a10:	add	r3, r2, r3
   30a14:	ldrb	r3, [r3]
   30a18:	mov	r1, r3
   30a1c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   30a20:	bl	22fc4 <__assert_fail@plt+0x11d54>
   30a24:	ldr	r3, [fp, #-16]
   30a28:	add	r3, r3, #1
   30a2c:	str	r3, [fp, #-16]
   30a30:	ldr	r3, [fp, #-16]
   30a34:	cmp	r3, #255	; 0xff
   30a38:	ble	309e0 <__assert_fail@plt+0x1f770>
   30a3c:	b	30c9c <__assert_fail@plt+0x1fa2c>
   30a40:	mov	r3, #0
   30a44:	str	r3, [fp, #-16]
   30a48:	b	30a8c <__assert_fail@plt+0x1f81c>
   30a4c:	bl	11150 <__ctype_b_loc@plt>
   30a50:	mov	r3, r0
   30a54:	ldr	r2, [r3]
   30a58:	ldr	r3, [fp, #-16]
   30a5c:	lsl	r3, r3, #1
   30a60:	add	r3, r2, r3
   30a64:	ldrh	r3, [r3]
   30a68:	sxth	r3, r3
   30a6c:	cmp	r3, #0
   30a70:	bge	30a80 <__assert_fail@plt+0x1f810>
   30a74:	ldr	r1, [fp, #-16]
   30a78:	ldr	r0, [fp, #-36]	; 0xffffffdc
   30a7c:	bl	22fc4 <__assert_fail@plt+0x11d54>
   30a80:	ldr	r3, [fp, #-16]
   30a84:	add	r3, r3, #1
   30a88:	str	r3, [fp, #-16]
   30a8c:	ldr	r3, [fp, #-16]
   30a90:	cmp	r3, #255	; 0xff
   30a94:	ble	30a4c <__assert_fail@plt+0x1f7dc>
   30a98:	b	30c9c <__assert_fail@plt+0x1fa2c>
   30a9c:	ldr	r1, [pc, #560]	; 30cd4 <__assert_fail@plt+0x1fa64>
   30aa0:	ldr	r0, [fp, #-20]	; 0xffffffec
   30aa4:	bl	10fa0 <strcmp@plt>
   30aa8:	mov	r3, r0
   30aac:	cmp	r3, #0
   30ab0:	bne	30b98 <__assert_fail@plt+0x1f928>
   30ab4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   30ab8:	cmp	r3, #0
   30abc:	movne	r3, #1
   30ac0:	moveq	r3, #0
   30ac4:	uxtb	r3, r3
   30ac8:	cmp	r3, #0
   30acc:	beq	30b3c <__assert_fail@plt+0x1f8cc>
   30ad0:	mov	r3, #0
   30ad4:	str	r3, [fp, #-16]
   30ad8:	b	30b2c <__assert_fail@plt+0x1f8bc>
   30adc:	bl	11150 <__ctype_b_loc@plt>
   30ae0:	mov	r3, r0
   30ae4:	ldr	r2, [r3]
   30ae8:	ldr	r3, [fp, #-16]
   30aec:	lsl	r3, r3, #1
   30af0:	add	r3, r2, r3
   30af4:	ldrh	r3, [r3]
   30af8:	and	r3, r3, #4
   30afc:	cmp	r3, #0
   30b00:	beq	30b20 <__assert_fail@plt+0x1f8b0>
   30b04:	ldr	r3, [fp, #-16]
   30b08:	ldr	r2, [fp, #-32]	; 0xffffffe0
   30b0c:	add	r3, r2, r3
   30b10:	ldrb	r3, [r3]
   30b14:	mov	r1, r3
   30b18:	ldr	r0, [fp, #-36]	; 0xffffffdc
   30b1c:	bl	22fc4 <__assert_fail@plt+0x11d54>
   30b20:	ldr	r3, [fp, #-16]
   30b24:	add	r3, r3, #1
   30b28:	str	r3, [fp, #-16]
   30b2c:	ldr	r3, [fp, #-16]
   30b30:	cmp	r3, #255	; 0xff
   30b34:	ble	30adc <__assert_fail@plt+0x1f86c>
   30b38:	b	30c9c <__assert_fail@plt+0x1fa2c>
   30b3c:	mov	r3, #0
   30b40:	str	r3, [fp, #-16]
   30b44:	b	30b88 <__assert_fail@plt+0x1f918>
   30b48:	bl	11150 <__ctype_b_loc@plt>
   30b4c:	mov	r3, r0
   30b50:	ldr	r2, [r3]
   30b54:	ldr	r3, [fp, #-16]
   30b58:	lsl	r3, r3, #1
   30b5c:	add	r3, r2, r3
   30b60:	ldrh	r3, [r3]
   30b64:	and	r3, r3, #4
   30b68:	cmp	r3, #0
   30b6c:	beq	30b7c <__assert_fail@plt+0x1f90c>
   30b70:	ldr	r1, [fp, #-16]
   30b74:	ldr	r0, [fp, #-36]	; 0xffffffdc
   30b78:	bl	22fc4 <__assert_fail@plt+0x11d54>
   30b7c:	ldr	r3, [fp, #-16]
   30b80:	add	r3, r3, #1
   30b84:	str	r3, [fp, #-16]
   30b88:	ldr	r3, [fp, #-16]
   30b8c:	cmp	r3, #255	; 0xff
   30b90:	ble	30b48 <__assert_fail@plt+0x1f8d8>
   30b94:	b	30c9c <__assert_fail@plt+0x1fa2c>
   30b98:	ldr	r1, [pc, #312]	; 30cd8 <__assert_fail@plt+0x1fa68>
   30b9c:	ldr	r0, [fp, #-20]	; 0xffffffec
   30ba0:	bl	10fa0 <strcmp@plt>
   30ba4:	mov	r3, r0
   30ba8:	cmp	r3, #0
   30bac:	bne	30c94 <__assert_fail@plt+0x1fa24>
   30bb0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   30bb4:	cmp	r3, #0
   30bb8:	movne	r3, #1
   30bbc:	moveq	r3, #0
   30bc0:	uxtb	r3, r3
   30bc4:	cmp	r3, #0
   30bc8:	beq	30c38 <__assert_fail@plt+0x1f9c8>
   30bcc:	mov	r3, #0
   30bd0:	str	r3, [fp, #-16]
   30bd4:	b	30c28 <__assert_fail@plt+0x1f9b8>
   30bd8:	bl	11150 <__ctype_b_loc@plt>
   30bdc:	mov	r3, r0
   30be0:	ldr	r2, [r3]
   30be4:	ldr	r3, [fp, #-16]
   30be8:	lsl	r3, r3, #1
   30bec:	add	r3, r2, r3
   30bf0:	ldrh	r3, [r3]
   30bf4:	and	r3, r3, #4096	; 0x1000
   30bf8:	cmp	r3, #0
   30bfc:	beq	30c1c <__assert_fail@plt+0x1f9ac>
   30c00:	ldr	r3, [fp, #-16]
   30c04:	ldr	r2, [fp, #-32]	; 0xffffffe0
   30c08:	add	r3, r2, r3
   30c0c:	ldrb	r3, [r3]
   30c10:	mov	r1, r3
   30c14:	ldr	r0, [fp, #-36]	; 0xffffffdc
   30c18:	bl	22fc4 <__assert_fail@plt+0x11d54>
   30c1c:	ldr	r3, [fp, #-16]
   30c20:	add	r3, r3, #1
   30c24:	str	r3, [fp, #-16]
   30c28:	ldr	r3, [fp, #-16]
   30c2c:	cmp	r3, #255	; 0xff
   30c30:	ble	30bd8 <__assert_fail@plt+0x1f968>
   30c34:	b	30c9c <__assert_fail@plt+0x1fa2c>
   30c38:	mov	r3, #0
   30c3c:	str	r3, [fp, #-16]
   30c40:	b	30c84 <__assert_fail@plt+0x1fa14>
   30c44:	bl	11150 <__ctype_b_loc@plt>
   30c48:	mov	r3, r0
   30c4c:	ldr	r2, [r3]
   30c50:	ldr	r3, [fp, #-16]
   30c54:	lsl	r3, r3, #1
   30c58:	add	r3, r2, r3
   30c5c:	ldrh	r3, [r3]
   30c60:	and	r3, r3, #4096	; 0x1000
   30c64:	cmp	r3, #0
   30c68:	beq	30c78 <__assert_fail@plt+0x1fa08>
   30c6c:	ldr	r1, [fp, #-16]
   30c70:	ldr	r0, [fp, #-36]	; 0xffffffdc
   30c74:	bl	22fc4 <__assert_fail@plt+0x11d54>
   30c78:	ldr	r3, [fp, #-16]
   30c7c:	add	r3, r3, #1
   30c80:	str	r3, [fp, #-16]
   30c84:	ldr	r3, [fp, #-16]
   30c88:	cmp	r3, #255	; 0xff
   30c8c:	ble	30c44 <__assert_fail@plt+0x1f9d4>
   30c90:	b	30c9c <__assert_fail@plt+0x1fa2c>
   30c94:	mov	r3, #4
   30c98:	b	30ca0 <__assert_fail@plt+0x1fa30>
   30c9c:	mov	r3, #0
   30ca0:	mov	r0, r3
   30ca4:	sub	sp, fp, #8
   30ca8:	pop	{r4, fp, pc}
   30cac:	andeq	r1, r4, r8, lsr #6
   30cb0:	andeq	r1, r4, r0, lsr r3
   30cb4:	andeq	r1, r4, r8, lsr r3
   30cb8:	andeq	r1, r4, r4, lsl r3
   30cbc:	andeq	r1, r4, r0, asr #6
   30cc0:	andeq	r1, r4, r0, lsr #6
   30cc4:	andeq	r1, r4, r8, asr #6
   30cc8:	andeq	r1, r4, r0, asr r3
   30ccc:	andeq	r1, r4, r8, asr r3
   30cd0:	andeq	r1, r4, r0, ror #6
   30cd4:	andeq	r1, r4, r8, ror #6
   30cd8:	andeq	r1, r4, r0, ror r3
   30cdc:	push	{fp, lr}
   30ce0:	add	fp, sp, #4
   30ce4:	sub	sp, sp, #56	; 0x38
   30ce8:	str	r0, [fp, #-40]	; 0xffffffd8
   30cec:	str	r1, [fp, #-44]	; 0xffffffd4
   30cf0:	str	r2, [fp, #-48]	; 0xffffffd0
   30cf4:	str	r3, [fp, #-52]	; 0xffffffcc
   30cf8:	mov	r3, #0
   30cfc:	str	r3, [fp, #-28]	; 0xffffffe4
   30d00:	mov	r1, #1
   30d04:	mov	r0, #32
   30d08:	bl	3ded4 <__assert_fail@plt+0x2cc64>
   30d0c:	mov	r3, r0
   30d10:	str	r3, [fp, #-8]
   30d14:	ldr	r3, [fp, #-8]
   30d18:	cmp	r3, #0
   30d1c:	moveq	r3, #1
   30d20:	movne	r3, #0
   30d24:	uxtb	r3, r3
   30d28:	cmp	r3, #0
   30d2c:	beq	30d44 <__assert_fail@plt+0x1fad4>
   30d30:	ldr	r3, [fp, #8]
   30d34:	mov	r2, #12
   30d38:	str	r2, [r3]
   30d3c:	mov	r3, #0
   30d40:	b	30fb0 <__assert_fail@plt+0x1fd40>
   30d44:	mov	r1, #1
   30d48:	mov	r0, #40	; 0x28
   30d4c:	bl	3ded4 <__assert_fail@plt+0x2cc64>
   30d50:	mov	r3, r0
   30d54:	str	r3, [fp, #-12]
   30d58:	ldr	r3, [fp, #-12]
   30d5c:	cmp	r3, #0
   30d60:	moveq	r3, #1
   30d64:	movne	r3, #0
   30d68:	uxtb	r3, r3
   30d6c:	cmp	r3, #0
   30d70:	beq	30d90 <__assert_fail@plt+0x1fb20>
   30d74:	ldr	r0, [fp, #-8]
   30d78:	bl	13630 <__assert_fail@plt+0x23c0>
   30d7c:	ldr	r3, [fp, #8]
   30d80:	mov	r2, #12
   30d84:	str	r2, [r3]
   30d88:	mov	r3, #0
   30d8c:	b	30fb0 <__assert_fail@plt+0x1fd40>
   30d90:	ldr	r2, [fp, #-12]
   30d94:	ldrb	r3, [r2, #16]
   30d98:	ldrb	r1, [fp, #4]
   30d9c:	and	r1, r1, #1
   30da0:	bic	r3, r3, #1
   30da4:	orr	r3, r1, r3
   30da8:	strb	r3, [r2, #16]
   30dac:	sub	r2, fp, #28
   30db0:	mov	r3, #0
   30db4:	str	r3, [sp, #4]
   30db8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   30dbc:	str	r3, [sp]
   30dc0:	mov	r3, r2
   30dc4:	ldr	r2, [fp, #-12]
   30dc8:	ldr	r1, [fp, #-8]
   30dcc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   30dd0:	bl	2ff8c <__assert_fail@plt+0x1ed1c>
   30dd4:	str	r0, [fp, #-16]
   30dd8:	ldr	r3, [fp, #-16]
   30ddc:	cmp	r3, #0
   30de0:	movne	r3, #1
   30de4:	moveq	r3, #0
   30de8:	uxtb	r3, r3
   30dec:	cmp	r3, #0
   30df0:	beq	30e38 <__assert_fail@plt+0x1fbc8>
   30df4:	ldr	r0, [fp, #-8]
   30df8:	bl	13630 <__assert_fail@plt+0x23c0>
   30dfc:	ldr	r0, [fp, #-12]
   30e00:	bl	310d8 <__assert_fail@plt+0x1fe68>
   30e04:	ldr	r3, [fp, #8]
   30e08:	ldr	r2, [fp, #-16]
   30e0c:	str	r2, [r3]
   30e10:	mov	r3, #0
   30e14:	b	30fb0 <__assert_fail@plt+0x1fd40>
   30e18:	ldr	r3, [fp, #-52]	; 0xffffffcc
   30e1c:	ldrb	r3, [r3]
   30e20:	mov	r1, r3
   30e24:	ldr	r0, [fp, #-8]
   30e28:	bl	22fc4 <__assert_fail@plt+0x11d54>
   30e2c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   30e30:	add	r3, r3, #1
   30e34:	str	r3, [fp, #-52]	; 0xffffffcc
   30e38:	ldr	r3, [fp, #-52]	; 0xffffffcc
   30e3c:	ldrb	r3, [r3]
   30e40:	cmp	r3, #0
   30e44:	bne	30e18 <__assert_fail@plt+0x1fba8>
   30e48:	ldrb	r3, [fp, #4]
   30e4c:	cmp	r3, #0
   30e50:	beq	30e5c <__assert_fail@plt+0x1fbec>
   30e54:	ldr	r0, [fp, #-8]
   30e58:	bl	231ec <__assert_fail@plt+0x11f7c>
   30e5c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   30e60:	ldr	r3, [r3, #92]	; 0x5c
   30e64:	cmp	r3, #1
   30e68:	ble	30e80 <__assert_fail@plt+0x1fc10>
   30e6c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   30e70:	ldr	r3, [r3, #60]	; 0x3c
   30e74:	mov	r1, r3
   30e78:	ldr	r0, [fp, #-8]
   30e7c:	bl	232e4 <__assert_fail@plt+0x12074>
   30e80:	sub	r3, fp, #36	; 0x24
   30e84:	mov	r2, #0
   30e88:	str	r2, [r3]
   30e8c:	str	r2, [r3, #4]
   30e90:	ldr	r3, [fp, #-8]
   30e94:	str	r3, [fp, #-36]	; 0xffffffdc
   30e98:	mov	r3, #3
   30e9c:	strb	r3, [fp, #-32]	; 0xffffffe0
   30ea0:	sub	r3, fp, #36	; 0x24
   30ea4:	mov	r2, #0
   30ea8:	mov	r1, #0
   30eac:	ldr	r0, [fp, #-40]	; 0xffffffd8
   30eb0:	bl	31198 <__assert_fail@plt+0x1ff28>
   30eb4:	str	r0, [fp, #-20]	; 0xffffffec
   30eb8:	ldr	r3, [fp, #-20]	; 0xffffffec
   30ebc:	cmp	r3, #0
   30ec0:	moveq	r3, #1
   30ec4:	movne	r3, #0
   30ec8:	uxtb	r3, r3
   30ecc:	cmp	r3, #0
   30ed0:	bne	30f84 <__assert_fail@plt+0x1fd14>
   30ed4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   30ed8:	ldr	r3, [r3, #92]	; 0x5c
   30edc:	cmp	r3, #1
   30ee0:	ble	30f74 <__assert_fail@plt+0x1fd04>
   30ee4:	mov	r3, #6
   30ee8:	strb	r3, [fp, #-32]	; 0xffffffe0
   30eec:	ldr	r3, [fp, #-12]
   30ef0:	str	r3, [fp, #-36]	; 0xffffffdc
   30ef4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   30ef8:	ldrb	r3, [r2, #88]	; 0x58
   30efc:	orr	r3, r3, #2
   30f00:	strb	r3, [r2, #88]	; 0x58
   30f04:	sub	r3, fp, #36	; 0x24
   30f08:	mov	r2, #0
   30f0c:	mov	r1, #0
   30f10:	ldr	r0, [fp, #-40]	; 0xffffffd8
   30f14:	bl	31198 <__assert_fail@plt+0x1ff28>
   30f18:	str	r0, [fp, #-24]	; 0xffffffe8
   30f1c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30f20:	cmp	r3, #0
   30f24:	moveq	r3, #1
   30f28:	movne	r3, #0
   30f2c:	uxtb	r3, r3
   30f30:	cmp	r3, #0
   30f34:	bne	30f8c <__assert_fail@plt+0x1fd1c>
   30f38:	mov	r3, #10
   30f3c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   30f40:	ldr	r1, [fp, #-20]	; 0xffffffec
   30f44:	ldr	r0, [fp, #-40]	; 0xffffffd8
   30f48:	bl	3113c <__assert_fail@plt+0x1fecc>
   30f4c:	str	r0, [fp, #-20]	; 0xffffffec
   30f50:	ldr	r3, [fp, #-24]	; 0xffffffe8
   30f54:	cmp	r3, #0
   30f58:	movne	r3, #1
   30f5c:	moveq	r3, #0
   30f60:	uxtb	r3, r3
   30f64:	cmp	r3, #0
   30f68:	beq	30f90 <__assert_fail@plt+0x1fd20>
   30f6c:	ldr	r3, [fp, #-20]	; 0xffffffec
   30f70:	b	30fb0 <__assert_fail@plt+0x1fd40>
   30f74:	ldr	r0, [fp, #-12]
   30f78:	bl	310d8 <__assert_fail@plt+0x1fe68>
   30f7c:	ldr	r3, [fp, #-20]	; 0xffffffec
   30f80:	b	30fb0 <__assert_fail@plt+0x1fd40>
   30f84:	nop			; (mov r0, r0)
   30f88:	b	30f90 <__assert_fail@plt+0x1fd20>
   30f8c:	nop			; (mov r0, r0)
   30f90:	ldr	r0, [fp, #-8]
   30f94:	bl	13630 <__assert_fail@plt+0x23c0>
   30f98:	ldr	r0, [fp, #-12]
   30f9c:	bl	310d8 <__assert_fail@plt+0x1fe68>
   30fa0:	ldr	r3, [fp, #8]
   30fa4:	mov	r2, #12
   30fa8:	str	r2, [r3]
   30fac:	mov	r3, #0
   30fb0:	mov	r0, r3
   30fb4:	sub	sp, fp, #4
   30fb8:	pop	{fp, pc}
   30fbc:	push	{fp, lr}
   30fc0:	add	fp, sp, #4
   30fc4:	sub	sp, sp, #24
   30fc8:	str	r0, [fp, #-16]
   30fcc:	str	r1, [fp, #-20]	; 0xffffffec
   30fd0:	str	r2, [fp, #-24]	; 0xffffffe8
   30fd4:	mvn	r3, #0
   30fd8:	str	r3, [fp, #-8]
   30fdc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   30fe0:	ldr	r1, [fp, #-16]
   30fe4:	ldr	r0, [fp, #-20]	; 0xffffffec
   30fe8:	bl	2c550 <__assert_fail@plt+0x1b2e0>
   30fec:	ldr	r3, [fp, #-20]	; 0xffffffec
   30ff0:	ldrb	r3, [r3]
   30ff4:	strb	r3, [fp, #-9]
   30ff8:	ldr	r3, [fp, #-20]	; 0xffffffec
   30ffc:	ldrb	r3, [r3, #4]
   31000:	cmp	r3, #2
   31004:	moveq	r3, #1
   31008:	movne	r3, #0
   3100c:	uxtb	r3, r3
   31010:	cmp	r3, #0
   31014:	beq	31020 <__assert_fail@plt+0x1fdb0>
   31018:	mvn	r3, #1
   3101c:	b	310cc <__assert_fail@plt+0x1fe5c>
   31020:	ldr	r3, [fp, #-20]	; 0xffffffec
   31024:	ldrb	r3, [r3, #4]
   31028:	cmp	r3, #24
   3102c:	beq	310c8 <__assert_fail@plt+0x1fe58>
   31030:	ldrb	r3, [fp, #-9]
   31034:	cmp	r3, #44	; 0x2c
   31038:	beq	310c8 <__assert_fail@plt+0x1fe58>
   3103c:	ldr	r3, [fp, #-20]	; 0xffffffec
   31040:	ldrb	r3, [r3, #4]
   31044:	cmp	r3, #1
   31048:	bne	310bc <__assert_fail@plt+0x1fe4c>
   3104c:	ldrb	r3, [fp, #-9]
   31050:	cmp	r3, #47	; 0x2f
   31054:	bls	310bc <__assert_fail@plt+0x1fe4c>
   31058:	ldrb	r3, [fp, #-9]
   3105c:	cmp	r3, #57	; 0x39
   31060:	bhi	310bc <__assert_fail@plt+0x1fe4c>
   31064:	ldr	r3, [fp, #-8]
   31068:	cmn	r3, #2
   3106c:	beq	310bc <__assert_fail@plt+0x1fe4c>
   31070:	ldr	r3, [fp, #-8]
   31074:	cmn	r3, #1
   31078:	bne	31088 <__assert_fail@plt+0x1fe18>
   3107c:	ldrb	r3, [fp, #-9]
   31080:	sub	r3, r3, #48	; 0x30
   31084:	b	310c0 <__assert_fail@plt+0x1fe50>
   31088:	ldr	r2, [fp, #-8]
   3108c:	mov	r3, r2
   31090:	lsl	r3, r3, #2
   31094:	add	r3, r3, r2
   31098:	lsl	r3, r3, #1
   3109c:	mov	r2, r3
   310a0:	ldrb	r3, [fp, #-9]
   310a4:	add	r3, r2, r3
   310a8:	sub	r3, r3, #48	; 0x30
   310ac:	cmp	r3, #32768	; 0x8000
   310b0:	movlt	r3, r3
   310b4:	movge	r3, #32768	; 0x8000
   310b8:	b	310c0 <__assert_fail@plt+0x1fe50>
   310bc:	mvn	r3, #1
   310c0:	str	r3, [fp, #-8]
   310c4:	b	30fdc <__assert_fail@plt+0x1fd6c>
   310c8:	ldr	r3, [fp, #-8]
   310cc:	mov	r0, r3
   310d0:	sub	sp, fp, #4
   310d4:	pop	{fp, pc}
   310d8:	push	{fp, lr}
   310dc:	add	fp, sp, #4
   310e0:	sub	sp, sp, #8
   310e4:	str	r0, [fp, #-8]
   310e8:	ldr	r3, [fp, #-8]
   310ec:	ldr	r3, [r3]
   310f0:	mov	r0, r3
   310f4:	bl	13630 <__assert_fail@plt+0x23c0>
   310f8:	ldr	r3, [fp, #-8]
   310fc:	ldr	r3, [r3, #4]
   31100:	mov	r0, r3
   31104:	bl	13630 <__assert_fail@plt+0x23c0>
   31108:	ldr	r3, [fp, #-8]
   3110c:	ldr	r3, [r3, #8]
   31110:	mov	r0, r3
   31114:	bl	13630 <__assert_fail@plt+0x23c0>
   31118:	ldr	r3, [fp, #-8]
   3111c:	ldr	r3, [r3, #12]
   31120:	mov	r0, r3
   31124:	bl	13630 <__assert_fail@plt+0x23c0>
   31128:	ldr	r0, [fp, #-8]
   3112c:	bl	13630 <__assert_fail@plt+0x23c0>
   31130:	nop			; (mov r0, r0)
   31134:	sub	sp, fp, #4
   31138:	pop	{fp, pc}
   3113c:	push	{fp, lr}
   31140:	add	fp, sp, #4
   31144:	sub	sp, sp, #24
   31148:	str	r0, [fp, #-16]
   3114c:	str	r1, [fp, #-20]	; 0xffffffec
   31150:	str	r2, [fp, #-24]	; 0xffffffe8
   31154:	str	r3, [fp, #-28]	; 0xffffffe4
   31158:	sub	r3, fp, #12
   3115c:	mov	r2, #0
   31160:	str	r2, [r3]
   31164:	str	r2, [r3, #4]
   31168:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3116c:	uxtb	r3, r3
   31170:	strb	r3, [fp, #-8]
   31174:	sub	r3, fp, #12
   31178:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3117c:	ldr	r1, [fp, #-20]	; 0xffffffec
   31180:	ldr	r0, [fp, #-16]
   31184:	bl	31198 <__assert_fail@plt+0x1ff28>
   31188:	mov	r3, r0
   3118c:	mov	r0, r3
   31190:	sub	sp, fp, #4
   31194:	pop	{fp, pc}
   31198:	push	{fp, lr}
   3119c:	add	fp, sp, #4
   311a0:	sub	sp, sp, #24
   311a4:	str	r0, [fp, #-16]
   311a8:	str	r1, [fp, #-20]	; 0xffffffec
   311ac:	str	r2, [fp, #-24]	; 0xffffffe8
   311b0:	str	r3, [fp, #-28]	; 0xffffffe4
   311b4:	ldr	r3, [fp, #-16]
   311b8:	ldr	r3, [r3, #64]	; 0x40
   311bc:	cmp	r3, #31
   311c0:	moveq	r3, #1
   311c4:	movne	r3, #0
   311c8:	uxtb	r3, r3
   311cc:	cmp	r3, #0
   311d0:	beq	31220 <__assert_fail@plt+0x1ffb0>
   311d4:	mov	r0, #996	; 0x3e4
   311d8:	bl	3df98 <__assert_fail@plt+0x2cd28>
   311dc:	mov	r3, r0
   311e0:	str	r3, [fp, #-8]
   311e4:	ldr	r3, [fp, #-8]
   311e8:	cmp	r3, #0
   311ec:	bne	311f8 <__assert_fail@plt+0x1ff88>
   311f0:	mov	r3, #0
   311f4:	b	312fc <__assert_fail@plt+0x2008c>
   311f8:	ldr	r3, [fp, #-16]
   311fc:	ldr	r2, [r3, #56]	; 0x38
   31200:	ldr	r3, [fp, #-8]
   31204:	str	r2, [r3]
   31208:	ldr	r3, [fp, #-16]
   3120c:	ldr	r2, [fp, #-8]
   31210:	str	r2, [r3, #56]	; 0x38
   31214:	ldr	r3, [fp, #-16]
   31218:	mov	r2, #0
   3121c:	str	r2, [r3, #64]	; 0x40
   31220:	ldr	r3, [fp, #-16]
   31224:	ldr	r2, [r3, #56]	; 0x38
   31228:	ldr	r3, [fp, #-16]
   3122c:	ldr	r3, [r3, #64]	; 0x40
   31230:	add	r0, r3, #1
   31234:	ldr	r1, [fp, #-16]
   31238:	str	r0, [r1, #64]	; 0x40
   3123c:	lsl	r3, r3, #5
   31240:	add	r3, r2, r3
   31244:	add	r3, r3, #4
   31248:	str	r3, [fp, #-12]
   3124c:	ldr	r3, [fp, #-12]
   31250:	mov	r2, #0
   31254:	str	r2, [r3]
   31258:	ldr	r3, [fp, #-12]
   3125c:	ldr	r2, [fp, #-20]	; 0xffffffec
   31260:	str	r2, [r3, #4]
   31264:	ldr	r3, [fp, #-12]
   31268:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3126c:	str	r2, [r3, #8]
   31270:	ldr	r3, [fp, #-12]
   31274:	ldr	r2, [fp, #-28]	; 0xffffffe4
   31278:	add	r3, r3, #20
   3127c:	ldm	r2, {r0, r1}
   31280:	stm	r3, {r0, r1}
   31284:	ldr	r2, [fp, #-12]
   31288:	ldrb	r3, [r2, #26]
   3128c:	bic	r3, r3, #4
   31290:	strb	r3, [r2, #26]
   31294:	ldr	r2, [fp, #-12]
   31298:	ldrb	r3, [r2, #26]
   3129c:	bic	r3, r3, #8
   312a0:	strb	r3, [r2, #26]
   312a4:	ldr	r3, [fp, #-12]
   312a8:	mov	r2, #0
   312ac:	str	r2, [r3, #12]
   312b0:	ldr	r3, [fp, #-12]
   312b4:	mov	r2, #0
   312b8:	str	r2, [r3, #16]
   312bc:	ldr	r3, [fp, #-12]
   312c0:	mvn	r2, #0
   312c4:	str	r2, [r3, #28]
   312c8:	ldr	r3, [fp, #-20]	; 0xffffffec
   312cc:	cmp	r3, #0
   312d0:	beq	312e0 <__assert_fail@plt+0x20070>
   312d4:	ldr	r3, [fp, #-20]	; 0xffffffec
   312d8:	ldr	r2, [fp, #-12]
   312dc:	str	r2, [r3]
   312e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   312e4:	cmp	r3, #0
   312e8:	beq	312f8 <__assert_fail@plt+0x20088>
   312ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   312f0:	ldr	r2, [fp, #-12]
   312f4:	str	r2, [r3]
   312f8:	ldr	r3, [fp, #-12]
   312fc:	mov	r0, r3
   31300:	sub	sp, fp, #4
   31304:	pop	{fp, pc}
   31308:	push	{fp}		; (str fp, [sp, #-4]!)
   3130c:	add	fp, sp, #0
   31310:	sub	sp, sp, #20
   31314:	str	r0, [fp, #-16]
   31318:	str	r1, [fp, #-20]	; 0xffffffec
   3131c:	ldr	r3, [fp, #-16]
   31320:	str	r3, [fp, #-8]
   31324:	ldr	r3, [fp, #-20]	; 0xffffffec
   31328:	ldrb	r3, [r3, #24]
   3132c:	cmp	r3, #17
   31330:	bne	31358 <__assert_fail@plt+0x200e8>
   31334:	ldr	r3, [fp, #-20]	; 0xffffffec
   31338:	ldr	r2, [r3, #20]
   3133c:	ldr	r3, [fp, #-8]
   31340:	cmp	r2, r3
   31344:	bne	31358 <__assert_fail@plt+0x200e8>
   31348:	ldr	r2, [fp, #-20]	; 0xffffffec
   3134c:	ldrb	r3, [r2, #26]
   31350:	orr	r3, r3, #8
   31354:	strb	r3, [r2, #26]
   31358:	mov	r3, #0
   3135c:	mov	r0, r3
   31360:	add	sp, fp, #0
   31364:	pop	{fp}		; (ldr fp, [sp], #4)
   31368:	bx	lr
   3136c:	push	{fp, lr}
   31370:	add	fp, sp, #4
   31374:	sub	sp, sp, #8
   31378:	str	r0, [fp, #-8]
   3137c:	ldr	r3, [fp, #-8]
   31380:	ldrb	r3, [r3, #4]
   31384:	cmp	r3, #6
   31388:	bne	313b8 <__assert_fail@plt+0x20148>
   3138c:	ldr	r3, [fp, #-8]
   31390:	ldrb	r3, [r3, #6]
   31394:	and	r3, r3, #4
   31398:	uxtb	r3, r3
   3139c:	cmp	r3, #0
   313a0:	bne	313b8 <__assert_fail@plt+0x20148>
   313a4:	ldr	r3, [fp, #-8]
   313a8:	ldr	r3, [r3]
   313ac:	mov	r0, r3
   313b0:	bl	310d8 <__assert_fail@plt+0x1fe68>
   313b4:	b	313f0 <__assert_fail@plt+0x20180>
   313b8:	ldr	r3, [fp, #-8]
   313bc:	ldrb	r3, [r3, #4]
   313c0:	cmp	r3, #3
   313c4:	bne	313f0 <__assert_fail@plt+0x20180>
   313c8:	ldr	r3, [fp, #-8]
   313cc:	ldrb	r3, [r3, #6]
   313d0:	and	r3, r3, #4
   313d4:	uxtb	r3, r3
   313d8:	cmp	r3, #0
   313dc:	bne	313f0 <__assert_fail@plt+0x20180>
   313e0:	ldr	r3, [fp, #-8]
   313e4:	ldr	r3, [r3]
   313e8:	mov	r0, r3
   313ec:	bl	13630 <__assert_fail@plt+0x23c0>
   313f0:	nop			; (mov r0, r0)
   313f4:	sub	sp, fp, #4
   313f8:	pop	{fp, pc}
   313fc:	push	{fp, lr}
   31400:	add	fp, sp, #4
   31404:	sub	sp, sp, #8
   31408:	str	r0, [fp, #-8]
   3140c:	str	r1, [fp, #-12]
   31410:	ldr	r3, [fp, #-12]
   31414:	add	r3, r3, #20
   31418:	mov	r0, r3
   3141c:	bl	3136c <__assert_fail@plt+0x200fc>
   31420:	mov	r3, #0
   31424:	mov	r0, r3
   31428:	sub	sp, fp, #4
   3142c:	pop	{fp, pc}
   31430:	push	{fp, lr}
   31434:	add	fp, sp, #4
   31438:	sub	sp, sp, #32
   3143c:	str	r0, [fp, #-32]	; 0xffffffe0
   31440:	str	r1, [fp, #-36]	; 0xffffffdc
   31444:	sub	r3, fp, #24
   31448:	str	r3, [fp, #-12]
   3144c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   31450:	ldr	r3, [r3]
   31454:	str	r3, [fp, #-16]
   31458:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3145c:	str	r3, [fp, #-8]
   31460:	ldr	r3, [fp, #-8]
   31464:	add	r3, r3, #20
   31468:	mov	r2, #0
   3146c:	mov	r1, #0
   31470:	ldr	r0, [fp, #-36]	; 0xffffffdc
   31474:	bl	31198 <__assert_fail@plt+0x1ff28>
   31478:	mov	r2, r0
   3147c:	ldr	r3, [fp, #-12]
   31480:	str	r2, [r3]
   31484:	ldr	r3, [fp, #-12]
   31488:	ldr	r3, [r3]
   3148c:	cmp	r3, #0
   31490:	bne	3149c <__assert_fail@plt+0x2022c>
   31494:	mov	r3, #0
   31498:	b	31578 <__assert_fail@plt+0x20308>
   3149c:	ldr	r3, [fp, #-12]
   314a0:	ldr	r3, [r3]
   314a4:	ldr	r2, [fp, #-16]
   314a8:	str	r2, [r3]
   314ac:	ldr	r3, [fp, #-12]
   314b0:	ldr	r2, [r3]
   314b4:	ldrb	r3, [r2, #26]
   314b8:	orr	r3, r3, #4
   314bc:	strb	r3, [r2, #26]
   314c0:	ldr	r3, [fp, #-12]
   314c4:	ldr	r3, [r3]
   314c8:	str	r3, [fp, #-16]
   314cc:	ldr	r3, [fp, #-8]
   314d0:	ldr	r3, [r3, #4]
   314d4:	cmp	r3, #0
   314d8:	beq	314f8 <__assert_fail@plt+0x20288>
   314dc:	ldr	r3, [fp, #-8]
   314e0:	ldr	r3, [r3, #4]
   314e4:	str	r3, [fp, #-8]
   314e8:	ldr	r3, [fp, #-16]
   314ec:	add	r3, r3, #4
   314f0:	str	r3, [fp, #-12]
   314f4:	b	31460 <__assert_fail@plt+0x201f0>
   314f8:	mov	r3, #0
   314fc:	str	r3, [fp, #-20]	; 0xffffffec
   31500:	b	31538 <__assert_fail@plt+0x202c8>
   31504:	ldr	r3, [fp, #-8]
   31508:	str	r3, [fp, #-20]	; 0xffffffec
   3150c:	ldr	r3, [fp, #-8]
   31510:	ldr	r3, [r3]
   31514:	str	r3, [fp, #-8]
   31518:	ldr	r3, [fp, #-16]
   3151c:	ldr	r3, [r3]
   31520:	str	r3, [fp, #-16]
   31524:	ldr	r3, [fp, #-8]
   31528:	cmp	r3, #0
   3152c:	bne	31538 <__assert_fail@plt+0x202c8>
   31530:	ldr	r3, [fp, #-24]	; 0xffffffe8
   31534:	b	31578 <__assert_fail@plt+0x20308>
   31538:	ldr	r3, [fp, #-8]
   3153c:	ldr	r2, [r3, #8]
   31540:	ldr	r3, [fp, #-20]	; 0xffffffec
   31544:	cmp	r2, r3
   31548:	beq	31504 <__assert_fail@plt+0x20294>
   3154c:	ldr	r3, [fp, #-8]
   31550:	ldr	r3, [r3, #8]
   31554:	cmp	r3, #0
   31558:	beq	31504 <__assert_fail@plt+0x20294>
   3155c:	ldr	r3, [fp, #-8]
   31560:	ldr	r3, [r3, #8]
   31564:	str	r3, [fp, #-8]
   31568:	ldr	r3, [fp, #-16]
   3156c:	add	r3, r3, #8
   31570:	str	r3, [fp, #-12]
   31574:	b	31460 <__assert_fail@plt+0x201f0>
   31578:	mov	r0, r3
   3157c:	sub	sp, fp, #4
   31580:	pop	{fp, pc}
   31584:	push	{fp, lr}
   31588:	add	fp, sp, #4
   3158c:	sub	sp, sp, #56	; 0x38
   31590:	str	r0, [fp, #-24]	; 0xffffffe8
   31594:	str	r1, [fp, #-28]	; 0xffffffe4
   31598:	str	r2, [fp, #-32]	; 0xffffffe0
   3159c:	str	r3, [fp, #-36]	; 0xffffffdc
   315a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   315a4:	ldr	r3, [r3]
   315a8:	str	r3, [fp, #-20]	; 0xffffffec
   315ac:	ldr	r3, [fp, #4]
   315b0:	bic	r3, r3, #7
   315b4:	cmp	r3, #0
   315b8:	beq	315c4 <__assert_fail@plt+0x20354>
   315bc:	mov	r3, #2
   315c0:	b	31708 <__assert_fail@plt+0x20498>
   315c4:	ldr	r3, [fp, #4]
   315c8:	and	r3, r3, #4
   315cc:	cmp	r3, #0
   315d0:	beq	315f0 <__assert_fail@plt+0x20380>
   315d4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   315d8:	ldr	r3, [r3]
   315dc:	str	r3, [fp, #-12]
   315e0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   315e4:	ldr	r3, [r3, #4]
   315e8:	str	r3, [fp, #-16]
   315ec:	b	31608 <__assert_fail@plt+0x20398>
   315f0:	mov	r3, #0
   315f4:	str	r3, [fp, #-12]
   315f8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   315fc:	bl	11174 <strlen@plt>
   31600:	mov	r3, r0
   31604:	str	r3, [fp, #-16]
   31608:	ldr	r3, [pc, #260]	; 31714 <__assert_fail@plt+0x204a4>
   3160c:	cmp	r3, #0
   31610:	bne	31620 <__assert_fail@plt+0x203b0>
   31614:	ldr	r3, [pc, #252]	; 31718 <__assert_fail@plt+0x204a8>
   31618:	cmp	r3, #0
   3161c:	beq	31630 <__assert_fail@plt+0x203c0>
   31620:	ldr	r3, [fp, #-20]	; 0xffffffec
   31624:	add	r3, r3, #136	; 0x88
   31628:	mov	r0, r3
   3162c:	bl	11000 <pthread_mutex_lock@plt>
   31630:	ldr	r3, [fp, #-24]	; 0xffffffe8
   31634:	ldrb	r3, [r3, #28]
   31638:	and	r3, r3, #16
   3163c:	uxtb	r3, r3
   31640:	cmp	r3, #0
   31644:	beq	3168c <__assert_fail@plt+0x2041c>
   31648:	ldr	r3, [fp, #4]
   3164c:	str	r3, [sp, #16]
   31650:	mov	r3, #0
   31654:	str	r3, [sp, #12]
   31658:	mov	r3, #0
   3165c:	str	r3, [sp, #8]
   31660:	ldr	r3, [fp, #-16]
   31664:	str	r3, [sp, #4]
   31668:	ldr	r3, [fp, #-16]
   3166c:	str	r3, [sp]
   31670:	ldr	r3, [fp, #-12]
   31674:	ldr	r2, [fp, #-16]
   31678:	ldr	r1, [fp, #-28]	; 0xffffffe4
   3167c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31680:	bl	3235c <__assert_fail@plt+0x210ec>
   31684:	str	r0, [fp, #-8]
   31688:	b	316cc <__assert_fail@plt+0x2045c>
   3168c:	ldr	r3, [fp, #4]
   31690:	str	r3, [sp, #16]
   31694:	ldr	r3, [fp, #-36]	; 0xffffffdc
   31698:	str	r3, [sp, #12]
   3169c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   316a0:	str	r3, [sp, #8]
   316a4:	ldr	r3, [fp, #-16]
   316a8:	str	r3, [sp, #4]
   316ac:	ldr	r3, [fp, #-16]
   316b0:	str	r3, [sp]
   316b4:	ldr	r3, [fp, #-12]
   316b8:	ldr	r2, [fp, #-16]
   316bc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   316c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   316c4:	bl	3235c <__assert_fail@plt+0x210ec>
   316c8:	str	r0, [fp, #-8]
   316cc:	ldr	r3, [pc, #64]	; 31714 <__assert_fail@plt+0x204a4>
   316d0:	cmp	r3, #0
   316d4:	bne	316e4 <__assert_fail@plt+0x20474>
   316d8:	ldr	r3, [pc, #56]	; 31718 <__assert_fail@plt+0x204a8>
   316dc:	cmp	r3, #0
   316e0:	beq	316f4 <__assert_fail@plt+0x20484>
   316e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   316e8:	add	r3, r3, #136	; 0x88
   316ec:	mov	r0, r3
   316f0:	bl	10f4c <pthread_mutex_unlock@plt>
   316f4:	ldr	r3, [fp, #-8]
   316f8:	cmp	r3, #0
   316fc:	movne	r3, #1
   31700:	moveq	r3, #0
   31704:	uxtb	r3, r3
   31708:	mov	r0, r3
   3170c:	sub	sp, fp, #4
   31710:	pop	{fp, pc}
	...
   3171c:	push	{fp, lr}
   31720:	add	fp, sp, #4
   31724:	sub	sp, sp, #32
   31728:	str	r0, [fp, #-8]
   3172c:	str	r1, [fp, #-12]
   31730:	str	r2, [fp, #-16]
   31734:	str	r3, [fp, #-20]	; 0xffffffec
   31738:	mov	r3, #1
   3173c:	str	r3, [sp, #12]
   31740:	ldr	r3, [fp, #4]
   31744:	str	r3, [sp, #8]
   31748:	ldr	r3, [fp, #-16]
   3174c:	str	r3, [sp, #4]
   31750:	mov	r3, #0
   31754:	str	r3, [sp]
   31758:	ldr	r3, [fp, #-20]	; 0xffffffec
   3175c:	ldr	r2, [fp, #-16]
   31760:	ldr	r1, [fp, #-12]
   31764:	ldr	r0, [fp, #-8]
   31768:	bl	31af0 <__assert_fail@plt+0x20880>
   3176c:	mov	r3, r0
   31770:	mov	r0, r3
   31774:	sub	sp, fp, #4
   31778:	pop	{fp, pc}
   3177c:	push	{fp, lr}
   31780:	add	fp, sp, #4
   31784:	sub	sp, sp, #32
   31788:	str	r0, [fp, #-8]
   3178c:	str	r1, [fp, #-12]
   31790:	str	r2, [fp, #-16]
   31794:	str	r3, [fp, #-20]	; 0xffffffec
   31798:	mov	r3, #0
   3179c:	str	r3, [sp, #12]
   317a0:	ldr	r3, [fp, #8]
   317a4:	str	r3, [sp, #8]
   317a8:	ldr	r3, [fp, #-16]
   317ac:	str	r3, [sp, #4]
   317b0:	ldr	r3, [fp, #4]
   317b4:	str	r3, [sp]
   317b8:	ldr	r3, [fp, #-20]	; 0xffffffec
   317bc:	ldr	r2, [fp, #-16]
   317c0:	ldr	r1, [fp, #-12]
   317c4:	ldr	r0, [fp, #-8]
   317c8:	bl	31af0 <__assert_fail@plt+0x20880>
   317cc:	mov	r3, r0
   317d0:	mov	r0, r3
   317d4:	sub	sp, fp, #4
   317d8:	pop	{fp, pc}
   317dc:	push	{fp, lr}
   317e0:	add	fp, sp, #4
   317e4:	sub	sp, sp, #40	; 0x28
   317e8:	str	r0, [fp, #-8]
   317ec:	str	r1, [fp, #-12]
   317f0:	str	r2, [fp, #-16]
   317f4:	str	r3, [fp, #-20]	; 0xffffffec
   317f8:	mov	r3, #1
   317fc:	str	r3, [sp, #20]
   31800:	ldr	r3, [fp, #16]
   31804:	str	r3, [sp, #16]
   31808:	ldr	r3, [fp, #12]
   3180c:	str	r3, [sp, #12]
   31810:	mov	r3, #0
   31814:	str	r3, [sp, #8]
   31818:	ldr	r3, [fp, #8]
   3181c:	str	r3, [sp, #4]
   31820:	ldr	r3, [fp, #4]
   31824:	str	r3, [sp]
   31828:	ldr	r3, [fp, #-20]	; 0xffffffec
   3182c:	ldr	r2, [fp, #-16]
   31830:	ldr	r1, [fp, #-12]
   31834:	ldr	r0, [fp, #-8]
   31838:	bl	318bc <__assert_fail@plt+0x2064c>
   3183c:	mov	r3, r0
   31840:	mov	r0, r3
   31844:	sub	sp, fp, #4
   31848:	pop	{fp, pc}
   3184c:	push	{fp, lr}
   31850:	add	fp, sp, #4
   31854:	sub	sp, sp, #40	; 0x28
   31858:	str	r0, [fp, #-8]
   3185c:	str	r1, [fp, #-12]
   31860:	str	r2, [fp, #-16]
   31864:	str	r3, [fp, #-20]	; 0xffffffec
   31868:	mov	r3, #0
   3186c:	str	r3, [sp, #20]
   31870:	ldr	r3, [fp, #20]
   31874:	str	r3, [sp, #16]
   31878:	ldr	r3, [fp, #16]
   3187c:	str	r3, [sp, #12]
   31880:	ldr	r3, [fp, #12]
   31884:	str	r3, [sp, #8]
   31888:	ldr	r3, [fp, #8]
   3188c:	str	r3, [sp, #4]
   31890:	ldr	r3, [fp, #4]
   31894:	str	r3, [sp]
   31898:	ldr	r3, [fp, #-20]	; 0xffffffec
   3189c:	ldr	r2, [fp, #-16]
   318a0:	ldr	r1, [fp, #-12]
   318a4:	ldr	r0, [fp, #-8]
   318a8:	bl	318bc <__assert_fail@plt+0x2064c>
   318ac:	mov	r3, r0
   318b0:	mov	r0, r3
   318b4:	sub	sp, fp, #4
   318b8:	pop	{fp, pc}
   318bc:	push	{fp, lr}
   318c0:	add	fp, sp, #4
   318c4:	sub	sp, sp, #48	; 0x30
   318c8:	str	r0, [fp, #-24]	; 0xffffffe8
   318cc:	str	r1, [fp, #-28]	; 0xffffffe4
   318d0:	str	r2, [fp, #-32]	; 0xffffffe0
   318d4:	str	r3, [fp, #-36]	; 0xffffffdc
   318d8:	mov	r3, #0
   318dc:	str	r3, [fp, #-12]
   318e0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   318e4:	lsr	r3, r3, #31
   318e8:	uxtb	r3, r3
   318ec:	cmp	r3, #0
   318f0:	bne	31908 <__assert_fail@plt+0x20698>
   318f4:	ldr	r3, [fp, #4]
   318f8:	lsr	r3, r3, #31
   318fc:	uxtb	r3, r3
   31900:	cmp	r3, #0
   31904:	beq	31910 <__assert_fail@plt+0x206a0>
   31908:	mov	r3, #1
   3190c:	b	31914 <__assert_fail@plt+0x206a4>
   31910:	mov	r3, #0
   31914:	cmp	r3, #0
   31918:	bne	31930 <__assert_fail@plt+0x206c0>
   3191c:	ldr	r3, [fp, #20]
   31920:	lsr	r3, r3, #31
   31924:	uxtb	r3, r3
   31928:	cmp	r3, #0
   3192c:	beq	31938 <__assert_fail@plt+0x206c8>
   31930:	mov	r3, #1
   31934:	b	3193c <__assert_fail@plt+0x206cc>
   31938:	mov	r3, #0
   3193c:	cmp	r3, #0
   31940:	bne	319f8 <__assert_fail@plt+0x20788>
   31944:	ldr	r3, [fp, #4]
   31948:	cmp	r3, #0
   3194c:	bge	31970 <__assert_fail@plt+0x20700>
   31950:	ldr	r3, [fp, #4]
   31954:	rsb	r2, r3, #-2147483648	; 0x80000000
   31958:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3195c:	cmp	r2, r3
   31960:	movgt	r3, #1
   31964:	movle	r3, #0
   31968:	uxtb	r3, r3
   3196c:	b	319bc <__assert_fail@plt+0x2074c>
   31970:	ldr	r3, [fp, #-32]	; 0xffffffe0
   31974:	cmp	r3, #0
   31978:	bge	3199c <__assert_fail@plt+0x2072c>
   3197c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   31980:	rsb	r2, r3, #-2147483648	; 0x80000000
   31984:	ldr	r3, [fp, #4]
   31988:	cmp	r2, r3
   3198c:	movgt	r3, #1
   31990:	movle	r3, #0
   31994:	uxtb	r3, r3
   31998:	b	319bc <__assert_fail@plt+0x2074c>
   3199c:	ldr	r2, [fp, #4]
   319a0:	mvn	r3, #-2147483648	; 0x80000000
   319a4:	sub	r3, r3, r2
   319a8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   319ac:	cmp	r3, r2
   319b0:	movlt	r3, #1
   319b4:	movge	r3, #0
   319b8:	uxtb	r3, r3
   319bc:	cmp	r3, #0
   319c0:	beq	319dc <__assert_fail@plt+0x2076c>
   319c4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   319c8:	ldr	r3, [fp, #4]
   319cc:	add	r3, r2, r3
   319d0:	str	r3, [fp, #-20]	; 0xffffffec
   319d4:	mov	r3, #1
   319d8:	b	319f0 <__assert_fail@plt+0x20780>
   319dc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   319e0:	ldr	r3, [fp, #4]
   319e4:	add	r3, r2, r3
   319e8:	str	r3, [fp, #-20]	; 0xffffffec
   319ec:	mov	r3, #0
   319f0:	cmp	r3, #0
   319f4:	beq	31a00 <__assert_fail@plt+0x20790>
   319f8:	mvn	r3, #1
   319fc:	b	31ae4 <__assert_fail@plt+0x20874>
   31a00:	ldr	r3, [fp, #4]
   31a04:	cmp	r3, #0
   31a08:	ble	31a98 <__assert_fail@plt+0x20828>
   31a0c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   31a10:	cmp	r3, #0
   31a14:	ble	31a8c <__assert_fail@plt+0x2081c>
   31a18:	ldr	r3, [fp, #-20]	; 0xffffffec
   31a1c:	mov	r0, r3
   31a20:	bl	3df98 <__assert_fail@plt+0x2cd28>
   31a24:	mov	r3, r0
   31a28:	str	r3, [fp, #-12]
   31a2c:	ldr	r3, [fp, #-12]
   31a30:	cmp	r3, #0
   31a34:	moveq	r3, #1
   31a38:	movne	r3, #0
   31a3c:	uxtb	r3, r3
   31a40:	cmp	r3, #0
   31a44:	beq	31a50 <__assert_fail@plt+0x207e0>
   31a48:	mvn	r3, #1
   31a4c:	b	31ae4 <__assert_fail@plt+0x20874>
   31a50:	ldr	r3, [fp, #-32]	; 0xffffffe0
   31a54:	mov	r2, r3
   31a58:	ldr	r1, [fp, #-28]	; 0xffffffe4
   31a5c:	ldr	r0, [fp, #-12]
   31a60:	bl	11018 <memcpy@plt>
   31a64:	ldr	r3, [fp, #-32]	; 0xffffffe0
   31a68:	ldr	r2, [fp, #-12]
   31a6c:	add	r3, r2, r3
   31a70:	ldr	r2, [fp, #4]
   31a74:	ldr	r1, [fp, #-36]	; 0xffffffdc
   31a78:	mov	r0, r3
   31a7c:	bl	11018 <memcpy@plt>
   31a80:	ldr	r3, [fp, #-12]
   31a84:	str	r3, [fp, #-8]
   31a88:	b	31aa0 <__assert_fail@plt+0x20830>
   31a8c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   31a90:	str	r3, [fp, #-8]
   31a94:	b	31aa0 <__assert_fail@plt+0x20830>
   31a98:	ldr	r3, [fp, #-28]	; 0xffffffe4
   31a9c:	str	r3, [fp, #-8]
   31aa0:	ldr	r2, [fp, #-20]	; 0xffffffec
   31aa4:	ldrb	r3, [fp, #24]
   31aa8:	str	r3, [sp, #12]
   31aac:	ldr	r3, [fp, #16]
   31ab0:	str	r3, [sp, #8]
   31ab4:	ldr	r3, [fp, #20]
   31ab8:	str	r3, [sp, #4]
   31abc:	ldr	r3, [fp, #12]
   31ac0:	str	r3, [sp]
   31ac4:	ldr	r3, [fp, #8]
   31ac8:	ldr	r1, [fp, #-8]
   31acc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   31ad0:	bl	31af0 <__assert_fail@plt+0x20880>
   31ad4:	str	r0, [fp, #-16]
   31ad8:	ldr	r0, [fp, #-12]
   31adc:	bl	13630 <__assert_fail@plt+0x23c0>
   31ae0:	ldr	r3, [fp, #-16]
   31ae4:	mov	r0, r3
   31ae8:	sub	sp, fp, #4
   31aec:	pop	{fp, pc}
   31af0:	push	{fp, lr}
   31af4:	add	fp, sp, #4
   31af8:	sub	sp, sp, #72	; 0x48
   31afc:	str	r0, [fp, #-40]	; 0xffffffd8
   31b00:	str	r1, [fp, #-44]	; 0xffffffd4
   31b04:	str	r2, [fp, #-48]	; 0xffffffd0
   31b08:	str	r3, [fp, #-52]	; 0xffffffcc
   31b0c:	mov	r3, #0
   31b10:	str	r3, [fp, #-20]	; 0xffffffec
   31b14:	ldr	r3, [fp, #-40]	; 0xffffffd8
   31b18:	ldr	r3, [r3]
   31b1c:	str	r3, [fp, #-24]	; 0xffffffe8
   31b20:	ldr	r2, [fp, #-52]	; 0xffffffcc
   31b24:	ldr	r3, [fp, #4]
   31b28:	add	r3, r2, r3
   31b2c:	str	r3, [fp, #-16]
   31b30:	ldr	r3, [fp, #-52]	; 0xffffffcc
   31b34:	lsr	r3, r3, #31
   31b38:	uxtb	r3, r3
   31b3c:	cmp	r3, #0
   31b40:	bne	31b64 <__assert_fail@plt+0x208f4>
   31b44:	ldr	r2, [fp, #-52]	; 0xffffffcc
   31b48:	ldr	r3, [fp, #-48]	; 0xffffffd0
   31b4c:	cmp	r2, r3
   31b50:	movgt	r3, #1
   31b54:	movle	r3, #0
   31b58:	uxtb	r3, r3
   31b5c:	cmp	r3, #0
   31b60:	beq	31b6c <__assert_fail@plt+0x208fc>
   31b64:	mvn	r3, #0
   31b68:	b	31fbc <__assert_fail@plt+0x20d4c>
   31b6c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   31b70:	ldr	r3, [fp, #-16]
   31b74:	cmp	r2, r3
   31b78:	movlt	r3, #1
   31b7c:	movge	r3, #0
   31b80:	uxtb	r3, r3
   31b84:	cmp	r3, #0
   31b88:	bne	31bd8 <__assert_fail@plt+0x20968>
   31b8c:	ldr	r3, [fp, #4]
   31b90:	mvn	r3, r3
   31b94:	lsr	r3, r3, #31
   31b98:	uxtb	r3, r3
   31b9c:	cmp	r3, #0
   31ba0:	beq	31bcc <__assert_fail@plt+0x2095c>
   31ba4:	ldr	r2, [fp, #-16]
   31ba8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   31bac:	cmp	r2, r3
   31bb0:	movlt	r3, #1
   31bb4:	movge	r3, #0
   31bb8:	uxtb	r3, r3
   31bbc:	cmp	r3, #0
   31bc0:	beq	31bcc <__assert_fail@plt+0x2095c>
   31bc4:	mov	r3, #1
   31bc8:	b	31bd0 <__assert_fail@plt+0x20960>
   31bcc:	mov	r3, #0
   31bd0:	cmp	r3, #0
   31bd4:	beq	31be4 <__assert_fail@plt+0x20974>
   31bd8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   31bdc:	str	r3, [fp, #-16]
   31be0:	b	31c48 <__assert_fail@plt+0x209d8>
   31be4:	ldr	r3, [fp, #-16]
   31be8:	lsr	r3, r3, #31
   31bec:	uxtb	r3, r3
   31bf0:	cmp	r3, #0
   31bf4:	bne	31c40 <__assert_fail@plt+0x209d0>
   31bf8:	ldr	r3, [fp, #4]
   31bfc:	lsr	r3, r3, #31
   31c00:	uxtb	r3, r3
   31c04:	cmp	r3, #0
   31c08:	beq	31c34 <__assert_fail@plt+0x209c4>
   31c0c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   31c10:	ldr	r3, [fp, #-16]
   31c14:	cmp	r2, r3
   31c18:	movle	r3, #1
   31c1c:	movgt	r3, #0
   31c20:	uxtb	r3, r3
   31c24:	cmp	r3, #0
   31c28:	beq	31c34 <__assert_fail@plt+0x209c4>
   31c2c:	mov	r3, #1
   31c30:	b	31c38 <__assert_fail@plt+0x209c8>
   31c34:	mov	r3, #0
   31c38:	cmp	r3, #0
   31c3c:	beq	31c48 <__assert_fail@plt+0x209d8>
   31c40:	mov	r3, #0
   31c44:	str	r3, [fp, #-16]
   31c48:	ldr	r3, [pc, #888]	; 31fc8 <__assert_fail@plt+0x20d58>
   31c4c:	cmp	r3, #0
   31c50:	bne	31c60 <__assert_fail@plt+0x209f0>
   31c54:	ldr	r3, [pc, #880]	; 31fcc <__assert_fail@plt+0x20d5c>
   31c58:	cmp	r3, #0
   31c5c:	beq	31c70 <__assert_fail@plt+0x20a00>
   31c60:	ldr	r3, [fp, #-24]	; 0xffffffe8
   31c64:	add	r3, r3, #136	; 0x88
   31c68:	mov	r0, r3
   31c6c:	bl	11000 <pthread_mutex_lock@plt>
   31c70:	ldr	r3, [fp, #-40]	; 0xffffffd8
   31c74:	ldrb	r3, [r3, #28]
   31c78:	and	r3, r3, #32
   31c7c:	uxtb	r3, r3
   31c80:	cmp	r3, #0
   31c84:	movne	r3, #1
   31c88:	moveq	r3, #0
   31c8c:	uxtb	r3, r3
   31c90:	mov	r2, r3
   31c94:	ldr	r3, [fp, #-20]	; 0xffffffec
   31c98:	orr	r3, r3, r2
   31c9c:	str	r3, [fp, #-20]	; 0xffffffec
   31ca0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   31ca4:	ldrb	r3, [r3, #28]
   31ca8:	and	r3, r3, #64	; 0x40
   31cac:	uxtb	r3, r3
   31cb0:	cmp	r3, #0
   31cb4:	beq	31cc0 <__assert_fail@plt+0x20a50>
   31cb8:	mov	r3, #2
   31cbc:	b	31cc4 <__assert_fail@plt+0x20a54>
   31cc0:	mov	r3, #0
   31cc4:	ldr	r2, [fp, #-20]	; 0xffffffec
   31cc8:	orr	r3, r2, r3
   31ccc:	str	r3, [fp, #-20]	; 0xffffffec
   31cd0:	ldr	r2, [fp, #-52]	; 0xffffffcc
   31cd4:	ldr	r3, [fp, #-16]
   31cd8:	cmp	r2, r3
   31cdc:	bge	31d10 <__assert_fail@plt+0x20aa0>
   31ce0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   31ce4:	ldr	r3, [r3, #16]
   31ce8:	cmp	r3, #0
   31cec:	beq	31d10 <__assert_fail@plt+0x20aa0>
   31cf0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   31cf4:	ldrb	r3, [r3, #28]
   31cf8:	and	r3, r3, #8
   31cfc:	uxtb	r3, r3
   31d00:	cmp	r3, #0
   31d04:	bne	31d10 <__assert_fail@plt+0x20aa0>
   31d08:	ldr	r0, [fp, #-40]	; 0xffffffd8
   31d0c:	bl	28574 <__assert_fail@plt+0x17304>
   31d10:	ldr	r3, [fp, #-40]	; 0xffffffd8
   31d14:	ldrb	r3, [r3, #28]
   31d18:	lsr	r3, r3, #4
   31d1c:	and	r3, r3, #1
   31d20:	uxtb	r3, r3
   31d24:	cmp	r3, #0
   31d28:	beq	31d34 <__assert_fail@plt+0x20ac4>
   31d2c:	mov	r3, #0
   31d30:	str	r3, [fp, #12]
   31d34:	ldr	r3, [fp, #12]
   31d38:	cmp	r3, #0
   31d3c:	bne	31d4c <__assert_fail@plt+0x20adc>
   31d40:	mov	r3, #1
   31d44:	str	r3, [fp, #-8]
   31d48:	b	31de8 <__assert_fail@plt+0x20b78>
   31d4c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   31d50:	ldrb	r3, [r3, #28]
   31d54:	and	r3, r3, #6
   31d58:	uxtb	r3, r3
   31d5c:	cmp	r3, #4
   31d60:	moveq	r3, #1
   31d64:	movne	r3, #0
   31d68:	uxtb	r3, r3
   31d6c:	cmp	r3, #0
   31d70:	beq	31dd8 <__assert_fail@plt+0x20b68>
   31d74:	ldr	r3, [fp, #12]
   31d78:	ldr	r2, [r3]
   31d7c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   31d80:	ldr	r3, [r3, #24]
   31d84:	cmp	r2, r3
   31d88:	movls	r3, #1
   31d8c:	movhi	r3, #0
   31d90:	uxtb	r3, r3
   31d94:	cmp	r3, #0
   31d98:	beq	31dd8 <__assert_fail@plt+0x20b68>
   31d9c:	ldr	r3, [fp, #12]
   31da0:	ldr	r3, [r3]
   31da4:	str	r3, [fp, #-8]
   31da8:	ldr	r3, [fp, #-8]
   31dac:	cmp	r3, #0
   31db0:	movle	r3, #1
   31db4:	movgt	r3, #0
   31db8:	uxtb	r3, r3
   31dbc:	cmp	r3, #0
   31dc0:	beq	31de8 <__assert_fail@plt+0x20b78>
   31dc4:	mov	r3, #0
   31dc8:	str	r3, [fp, #12]
   31dcc:	mov	r3, #1
   31dd0:	str	r3, [fp, #-8]
   31dd4:	b	31de8 <__assert_fail@plt+0x20b78>
   31dd8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   31ddc:	ldr	r3, [r3, #24]
   31de0:	add	r3, r3, #1
   31de4:	str	r3, [fp, #-8]
   31de8:	ldr	r3, [fp, #-8]
   31dec:	lsl	r3, r3, #3
   31df0:	mov	r0, r3
   31df4:	bl	3df98 <__assert_fail@plt+0x2cd28>
   31df8:	mov	r3, r0
   31dfc:	str	r3, [fp, #-28]	; 0xffffffe4
   31e00:	ldr	r3, [fp, #-28]	; 0xffffffe4
   31e04:	cmp	r3, #0
   31e08:	moveq	r3, #1
   31e0c:	movne	r3, #0
   31e10:	uxtb	r3, r3
   31e14:	cmp	r3, #0
   31e18:	beq	31e28 <__assert_fail@plt+0x20bb8>
   31e1c:	mvn	r3, #1
   31e20:	str	r3, [fp, #-12]
   31e24:	b	31f90 <__assert_fail@plt+0x20d20>
   31e28:	ldr	r3, [fp, #-8]
   31e2c:	ldr	r2, [fp, #-20]	; 0xffffffec
   31e30:	str	r2, [sp, #16]
   31e34:	ldr	r2, [fp, #-28]	; 0xffffffe4
   31e38:	str	r2, [sp, #12]
   31e3c:	str	r3, [sp, #8]
   31e40:	ldr	r3, [fp, #8]
   31e44:	str	r3, [sp, #4]
   31e48:	ldr	r3, [fp, #-16]
   31e4c:	str	r3, [sp]
   31e50:	ldr	r3, [fp, #-52]	; 0xffffffcc
   31e54:	ldr	r2, [fp, #-48]	; 0xffffffd0
   31e58:	ldr	r1, [fp, #-44]	; 0xffffffd4
   31e5c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   31e60:	bl	3235c <__assert_fail@plt+0x210ec>
   31e64:	str	r0, [fp, #-32]	; 0xffffffe0
   31e68:	mov	r3, #0
   31e6c:	str	r3, [fp, #-12]
   31e70:	ldr	r3, [fp, #-32]	; 0xffffffe0
   31e74:	cmp	r3, #0
   31e78:	beq	31e9c <__assert_fail@plt+0x20c2c>
   31e7c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   31e80:	cmp	r3, #1
   31e84:	bne	31e90 <__assert_fail@plt+0x20c20>
   31e88:	mvn	r3, #0
   31e8c:	b	31e94 <__assert_fail@plt+0x20c24>
   31e90:	mvn	r3, #1
   31e94:	str	r3, [fp, #-12]
   31e98:	b	31f2c <__assert_fail@plt+0x20cbc>
   31e9c:	ldr	r3, [fp, #12]
   31ea0:	cmp	r3, #0
   31ea4:	beq	31f2c <__assert_fail@plt+0x20cbc>
   31ea8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   31eac:	ldrb	r3, [r3, #28]
   31eb0:	lsr	r3, r3, #1
   31eb4:	and	r3, r3, #3
   31eb8:	uxtb	r3, r3
   31ebc:	ldr	r2, [fp, #-8]
   31ec0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   31ec4:	ldr	r0, [fp, #12]
   31ec8:	bl	31fd0 <__assert_fail@plt+0x20d60>
   31ecc:	mov	r3, r0
   31ed0:	uxtb	r3, r3
   31ed4:	and	r3, r3, #3
   31ed8:	uxtb	r3, r3
   31edc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   31ee0:	ldrb	r2, [r1, #28]
   31ee4:	and	r3, r3, #3
   31ee8:	bic	r2, r2, #6
   31eec:	lsl	r3, r3, #1
   31ef0:	orr	r3, r3, r2
   31ef4:	mov	r2, r3
   31ef8:	strb	r2, [r1, #28]
   31efc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   31f00:	ldrb	r3, [r3, #28]
   31f04:	and	r3, r3, #6
   31f08:	uxtb	r3, r3
   31f0c:	cmp	r3, #0
   31f10:	moveq	r3, #1
   31f14:	movne	r3, #0
   31f18:	uxtb	r3, r3
   31f1c:	cmp	r3, #0
   31f20:	beq	31f2c <__assert_fail@plt+0x20cbc>
   31f24:	mvn	r3, #1
   31f28:	str	r3, [fp, #-12]
   31f2c:	ldr	r3, [fp, #-12]
   31f30:	cmp	r3, #0
   31f34:	moveq	r3, #1
   31f38:	movne	r3, #0
   31f3c:	uxtb	r3, r3
   31f40:	cmp	r3, #0
   31f44:	beq	31f88 <__assert_fail@plt+0x20d18>
   31f48:	ldrb	r3, [fp, #16]
   31f4c:	cmp	r3, #0
   31f50:	beq	31f7c <__assert_fail@plt+0x20d0c>
   31f54:	ldr	r3, [fp, #-28]	; 0xffffffe4
   31f58:	ldr	r2, [r3]
   31f5c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   31f60:	cmp	r2, r3
   31f64:	ldr	r3, [fp, #-28]	; 0xffffffe4
   31f68:	ldr	r2, [r3, #4]
   31f6c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   31f70:	sub	r3, r2, r3
   31f74:	str	r3, [fp, #-12]
   31f78:	b	31f88 <__assert_fail@plt+0x20d18>
   31f7c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   31f80:	ldr	r3, [r3]
   31f84:	str	r3, [fp, #-12]
   31f88:	ldr	r0, [fp, #-28]	; 0xffffffe4
   31f8c:	bl	13630 <__assert_fail@plt+0x23c0>
   31f90:	ldr	r3, [pc, #48]	; 31fc8 <__assert_fail@plt+0x20d58>
   31f94:	cmp	r3, #0
   31f98:	bne	31fa8 <__assert_fail@plt+0x20d38>
   31f9c:	ldr	r3, [pc, #40]	; 31fcc <__assert_fail@plt+0x20d5c>
   31fa0:	cmp	r3, #0
   31fa4:	beq	31fb8 <__assert_fail@plt+0x20d48>
   31fa8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   31fac:	add	r3, r3, #136	; 0x88
   31fb0:	mov	r0, r3
   31fb4:	bl	10f4c <pthread_mutex_unlock@plt>
   31fb8:	ldr	r3, [fp, #-12]
   31fbc:	mov	r0, r3
   31fc0:	sub	sp, fp, #4
   31fc4:	pop	{fp, pc}
	...
   31fd0:	push	{fp, lr}
   31fd4:	add	fp, sp, #4
   31fd8:	sub	sp, sp, #40	; 0x28
   31fdc:	str	r0, [fp, #-32]	; 0xffffffe0
   31fe0:	str	r1, [fp, #-36]	; 0xffffffdc
   31fe4:	str	r2, [fp, #-40]	; 0xffffffd8
   31fe8:	str	r3, [fp, #-44]	; 0xffffffd4
   31fec:	mov	r3, #1
   31ff0:	str	r3, [fp, #-8]
   31ff4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   31ff8:	add	r3, r3, #1
   31ffc:	str	r3, [fp, #-16]
   32000:	ldr	r3, [fp, #-44]	; 0xffffffd4
   32004:	cmp	r3, #0
   32008:	bne	320bc <__assert_fail@plt+0x20e4c>
   3200c:	ldr	r3, [fp, #-16]
   32010:	lsl	r3, r3, #2
   32014:	mov	r0, r3
   32018:	bl	3df98 <__assert_fail@plt+0x2cd28>
   3201c:	mov	r3, r0
   32020:	mov	r2, r3
   32024:	ldr	r3, [fp, #-32]	; 0xffffffe0
   32028:	str	r2, [r3, #4]
   3202c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   32030:	ldr	r3, [r3, #4]
   32034:	cmp	r3, #0
   32038:	moveq	r3, #1
   3203c:	movne	r3, #0
   32040:	uxtb	r3, r3
   32044:	cmp	r3, #0
   32048:	beq	32054 <__assert_fail@plt+0x20de4>
   3204c:	mov	r3, #0
   32050:	b	322a4 <__assert_fail@plt+0x21034>
   32054:	ldr	r3, [fp, #-16]
   32058:	lsl	r3, r3, #2
   3205c:	mov	r0, r3
   32060:	bl	3df98 <__assert_fail@plt+0x2cd28>
   32064:	mov	r3, r0
   32068:	mov	r2, r3
   3206c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   32070:	str	r2, [r3, #8]
   32074:	ldr	r3, [fp, #-32]	; 0xffffffe0
   32078:	ldr	r3, [r3, #8]
   3207c:	cmp	r3, #0
   32080:	moveq	r3, #1
   32084:	movne	r3, #0
   32088:	uxtb	r3, r3
   3208c:	cmp	r3, #0
   32090:	beq	320ac <__assert_fail@plt+0x20e3c>
   32094:	ldr	r3, [fp, #-32]	; 0xffffffe0
   32098:	ldr	r3, [r3, #4]
   3209c:	mov	r0, r3
   320a0:	bl	13630 <__assert_fail@plt+0x23c0>
   320a4:	mov	r3, #0
   320a8:	b	322a4 <__assert_fail@plt+0x21034>
   320ac:	ldr	r2, [fp, #-16]
   320b0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   320b4:	str	r2, [r3]
   320b8:	b	321c4 <__assert_fail@plt+0x20f54>
   320bc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   320c0:	cmp	r3, #1
   320c4:	bne	321a4 <__assert_fail@plt+0x20f34>
   320c8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   320cc:	ldr	r2, [r3]
   320d0:	ldr	r3, [fp, #-16]
   320d4:	cmp	r2, r3
   320d8:	movcc	r3, #1
   320dc:	movcs	r3, #0
   320e0:	uxtb	r3, r3
   320e4:	cmp	r3, #0
   320e8:	beq	321c4 <__assert_fail@plt+0x20f54>
   320ec:	ldr	r3, [fp, #-32]	; 0xffffffe0
   320f0:	ldr	r2, [r3, #4]
   320f4:	ldr	r3, [fp, #-16]
   320f8:	lsl	r3, r3, #2
   320fc:	mov	r1, r3
   32100:	mov	r0, r2
   32104:	bl	3e040 <__assert_fail@plt+0x2cdd0>
   32108:	str	r0, [fp, #-20]	; 0xffffffec
   3210c:	ldr	r3, [fp, #-20]	; 0xffffffec
   32110:	cmp	r3, #0
   32114:	moveq	r3, #1
   32118:	movne	r3, #0
   3211c:	uxtb	r3, r3
   32120:	cmp	r3, #0
   32124:	beq	32130 <__assert_fail@plt+0x20ec0>
   32128:	mov	r3, #0
   3212c:	b	322a4 <__assert_fail@plt+0x21034>
   32130:	ldr	r3, [fp, #-32]	; 0xffffffe0
   32134:	ldr	r2, [r3, #8]
   32138:	ldr	r3, [fp, #-16]
   3213c:	lsl	r3, r3, #2
   32140:	mov	r1, r3
   32144:	mov	r0, r2
   32148:	bl	3e040 <__assert_fail@plt+0x2cdd0>
   3214c:	str	r0, [fp, #-24]	; 0xffffffe8
   32150:	ldr	r3, [fp, #-24]	; 0xffffffe8
   32154:	cmp	r3, #0
   32158:	moveq	r3, #1
   3215c:	movne	r3, #0
   32160:	uxtb	r3, r3
   32164:	cmp	r3, #0
   32168:	beq	3217c <__assert_fail@plt+0x20f0c>
   3216c:	ldr	r0, [fp, #-20]	; 0xffffffec
   32170:	bl	13630 <__assert_fail@plt+0x23c0>
   32174:	mov	r3, #0
   32178:	b	322a4 <__assert_fail@plt+0x21034>
   3217c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   32180:	ldr	r2, [fp, #-20]	; 0xffffffec
   32184:	str	r2, [r3, #4]
   32188:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3218c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   32190:	str	r2, [r3, #8]
   32194:	ldr	r2, [fp, #-16]
   32198:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3219c:	str	r2, [r3]
   321a0:	b	321c4 <__assert_fail@plt+0x20f54>
   321a4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   321a8:	cmp	r3, #2
   321ac:	ldr	r3, [fp, #-32]	; 0xffffffe0
   321b0:	ldr	r2, [r3]
   321b4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   321b8:	cmp	r2, r3
   321bc:	mov	r3, #2
   321c0:	str	r3, [fp, #-8]
   321c4:	mov	r3, #0
   321c8:	str	r3, [fp, #-12]
   321cc:	b	32234 <__assert_fail@plt+0x20fc4>
   321d0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   321d4:	ldr	r2, [r3, #4]
   321d8:	ldr	r3, [fp, #-12]
   321dc:	lsl	r3, r3, #2
   321e0:	add	r3, r2, r3
   321e4:	ldr	r2, [fp, #-12]
   321e8:	lsl	r2, r2, #3
   321ec:	ldr	r1, [fp, #-36]	; 0xffffffdc
   321f0:	add	r2, r1, r2
   321f4:	ldr	r2, [r2]
   321f8:	str	r2, [r3]
   321fc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   32200:	ldr	r2, [r3, #8]
   32204:	ldr	r3, [fp, #-12]
   32208:	lsl	r3, r3, #2
   3220c:	add	r3, r2, r3
   32210:	ldr	r2, [fp, #-12]
   32214:	lsl	r2, r2, #3
   32218:	ldr	r1, [fp, #-36]	; 0xffffffdc
   3221c:	add	r2, r1, r2
   32220:	ldr	r2, [r2, #4]
   32224:	str	r2, [r3]
   32228:	ldr	r3, [fp, #-12]
   3222c:	add	r3, r3, #1
   32230:	str	r3, [fp, #-12]
   32234:	ldr	r2, [fp, #-12]
   32238:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3223c:	cmp	r2, r3
   32240:	blt	321d0 <__assert_fail@plt+0x20f60>
   32244:	b	3228c <__assert_fail@plt+0x2101c>
   32248:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3224c:	ldr	r2, [r3, #4]
   32250:	ldr	r3, [fp, #-12]
   32254:	lsl	r3, r3, #2
   32258:	add	r2, r2, r3
   3225c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   32260:	ldr	r1, [r3, #8]
   32264:	ldr	r3, [fp, #-12]
   32268:	lsl	r3, r3, #2
   3226c:	add	r3, r1, r3
   32270:	mvn	r1, #0
   32274:	str	r1, [r3]
   32278:	ldr	r3, [r3]
   3227c:	str	r3, [r2]
   32280:	ldr	r3, [fp, #-12]
   32284:	add	r3, r3, #1
   32288:	str	r3, [fp, #-12]
   3228c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   32290:	ldr	r2, [r3]
   32294:	ldr	r3, [fp, #-12]
   32298:	cmp	r2, r3
   3229c:	bhi	32248 <__assert_fail@plt+0x20fd8>
   322a0:	ldr	r3, [fp, #-8]
   322a4:	mov	r0, r3
   322a8:	sub	sp, fp, #4
   322ac:	pop	{fp, pc}
   322b0:	push	{fp}		; (str fp, [sp, #-4]!)
   322b4:	add	fp, sp, #0
   322b8:	sub	sp, sp, #20
   322bc:	str	r0, [fp, #-8]
   322c0:	str	r1, [fp, #-12]
   322c4:	str	r2, [fp, #-16]
   322c8:	str	r3, [fp, #-20]	; 0xffffffec
   322cc:	ldr	r3, [fp, #-16]
   322d0:	cmp	r3, #0
   322d4:	beq	32314 <__assert_fail@plt+0x210a4>
   322d8:	ldr	r2, [fp, #-8]
   322dc:	ldrb	r3, [r2, #28]
   322e0:	bic	r3, r3, #4
   322e4:	orr	r3, r3, #2
   322e8:	strb	r3, [r2, #28]
   322ec:	ldr	r3, [fp, #-12]
   322f0:	ldr	r2, [fp, #-16]
   322f4:	str	r2, [r3]
   322f8:	ldr	r3, [fp, #-12]
   322fc:	ldr	r2, [fp, #-20]	; 0xffffffec
   32300:	str	r2, [r3, #4]
   32304:	ldr	r3, [fp, #-12]
   32308:	ldr	r2, [fp, #4]
   3230c:	str	r2, [r3, #8]
   32310:	b	3234c <__assert_fail@plt+0x210dc>
   32314:	ldr	r2, [fp, #-8]
   32318:	ldrb	r3, [r2, #28]
   3231c:	bic	r3, r3, #6
   32320:	strb	r3, [r2, #28]
   32324:	ldr	r3, [fp, #-12]
   32328:	mov	r2, #0
   3232c:	str	r2, [r3]
   32330:	ldr	r3, [fp, #-12]
   32334:	mov	r2, #0
   32338:	str	r2, [r3, #8]
   3233c:	ldr	r3, [fp, #-12]
   32340:	ldr	r2, [r3, #8]
   32344:	ldr	r3, [fp, #-12]
   32348:	str	r2, [r3, #4]
   3234c:	nop			; (mov r0, r0)
   32350:	add	sp, fp, #0
   32354:	pop	{fp}		; (ldr fp, [sp], #4)
   32358:	bx	lr
   3235c:	push	{fp, lr}
   32360:	add	fp, sp, #4
   32364:	sub	sp, sp, #240	; 0xf0
   32368:	str	r0, [fp, #-216]	; 0xffffff28
   3236c:	str	r1, [fp, #-220]	; 0xffffff24
   32370:	str	r2, [fp, #-224]	; 0xffffff20
   32374:	str	r3, [fp, #-228]	; 0xffffff1c
   32378:	ldr	r3, [fp, #-216]	; 0xffffff28
   3237c:	ldr	r3, [r3]
   32380:	str	r3, [fp, #-20]	; 0xffffffec
   32384:	mvn	r3, #0
   32388:	str	r3, [fp, #-24]	; 0xffffffe8
   3238c:	sub	r3, fp, #208	; 0xd0
   32390:	mov	r2, #136	; 0x88
   32394:	mov	r1, #0
   32398:	mov	r0, r3
   3239c:	bl	111bc <memset@plt>
   323a0:	ldr	r3, [fp, #-20]	; 0xffffffec
   323a4:	str	r3, [fp, #-124]	; 0xffffff84
   323a8:	ldr	r3, [fp, #-216]	; 0xffffff28
   323ac:	ldr	r3, [r3, #16]
   323b0:	cmp	r3, #0
   323b4:	beq	32404 <__assert_fail@plt+0x21194>
   323b8:	ldr	r3, [fp, #-216]	; 0xffffff28
   323bc:	ldrb	r3, [r3, #28]
   323c0:	and	r3, r3, #8
   323c4:	uxtb	r3, r3
   323c8:	cmp	r3, #0
   323cc:	beq	32404 <__assert_fail@plt+0x21194>
   323d0:	ldr	r2, [fp, #-228]	; 0xffffff1c
   323d4:	ldr	r3, [fp, #4]
   323d8:	cmp	r2, r3
   323dc:	beq	32404 <__assert_fail@plt+0x21194>
   323e0:	ldr	r3, [fp, #-216]	; 0xffffff28
   323e4:	ldrb	r3, [r3, #28]
   323e8:	and	r3, r3, #1
   323ec:	uxtb	r3, r3
   323f0:	cmp	r3, #0
   323f4:	bne	32404 <__assert_fail@plt+0x21194>
   323f8:	ldr	r3, [fp, #-216]	; 0xffffff28
   323fc:	ldr	r3, [r3, #16]
   32400:	b	32408 <__assert_fail@plt+0x21198>
   32404:	mov	r3, #0
   32408:	str	r3, [fp, #-28]	; 0xffffffe4
   3240c:	ldr	r3, [fp, #-216]	; 0xffffff28
   32410:	ldr	r3, [r3, #20]
   32414:	str	r3, [fp, #-32]	; 0xffffffe0
   32418:	ldr	r3, [fp, #-216]	; 0xffffff28
   3241c:	ldr	r2, [r3, #24]
   32420:	ldr	r3, [fp, #12]
   32424:	cmp	r2, r3
   32428:	bcs	32444 <__assert_fail@plt+0x211d4>
   3242c:	ldr	r3, [fp, #-216]	; 0xffffff28
   32430:	ldr	r3, [r3, #24]
   32434:	ldr	r2, [fp, #12]
   32438:	sub	r3, r2, r3
   3243c:	sub	r3, r3, #1
   32440:	b	32448 <__assert_fail@plt+0x211d8>
   32444:	mov	r3, #0
   32448:	str	r3, [fp, #-36]	; 0xffffffdc
   3244c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   32450:	ldr	r2, [fp, #12]
   32454:	sub	r3, r2, r3
   32458:	str	r3, [fp, #12]
   3245c:	ldr	r3, [fp, #-216]	; 0xffffff28
   32460:	ldr	r3, [r3, #8]
   32464:	cmp	r3, #0
   32468:	moveq	r3, #1
   3246c:	movne	r3, #0
   32470:	uxtb	r3, r3
   32474:	cmp	r3, #0
   32478:	bne	3249c <__assert_fail@plt+0x2122c>
   3247c:	ldr	r3, [fp, #-20]	; 0xffffffec
   32480:	ldr	r3, [r3, #36]	; 0x24
   32484:	cmp	r3, #0
   32488:	moveq	r3, #1
   3248c:	movne	r3, #0
   32490:	uxtb	r3, r3
   32494:	cmp	r3, #0
   32498:	beq	324a4 <__assert_fail@plt+0x21234>
   3249c:	mov	r3, #1
   324a0:	b	324a8 <__assert_fail@plt+0x21238>
   324a4:	mov	r3, #0
   324a8:	cmp	r3, #0
   324ac:	bne	324d0 <__assert_fail@plt+0x21260>
   324b0:	ldr	r3, [fp, #-20]	; 0xffffffec
   324b4:	ldr	r3, [r3, #40]	; 0x28
   324b8:	cmp	r3, #0
   324bc:	moveq	r3, #1
   324c0:	movne	r3, #0
   324c4:	uxtb	r3, r3
   324c8:	cmp	r3, #0
   324cc:	beq	324d8 <__assert_fail@plt+0x21268>
   324d0:	mov	r3, #1
   324d4:	b	324dc <__assert_fail@plt+0x2126c>
   324d8:	mov	r3, #0
   324dc:	cmp	r3, #0
   324e0:	bne	32504 <__assert_fail@plt+0x21294>
   324e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   324e8:	ldr	r3, [r3, #44]	; 0x2c
   324ec:	cmp	r3, #0
   324f0:	moveq	r3, #1
   324f4:	movne	r3, #0
   324f8:	uxtb	r3, r3
   324fc:	cmp	r3, #0
   32500:	beq	3250c <__assert_fail@plt+0x2129c>
   32504:	mov	r3, #1
   32508:	b	32510 <__assert_fail@plt+0x212a0>
   3250c:	mov	r3, #0
   32510:	cmp	r3, #0
   32514:	bne	32538 <__assert_fail@plt+0x212c8>
   32518:	ldr	r3, [fp, #-20]	; 0xffffffec
   3251c:	ldr	r3, [r3, #48]	; 0x30
   32520:	cmp	r3, #0
   32524:	moveq	r3, #1
   32528:	movne	r3, #0
   3252c:	uxtb	r3, r3
   32530:	cmp	r3, #0
   32534:	beq	32540 <__assert_fail@plt+0x212d0>
   32538:	mov	r3, #1
   3253c:	b	33260 <__assert_fail@plt+0x21ff0>
   32540:	ldr	r3, [fp, #4]
   32544:	cmp	r3, #0
   32548:	blt	3255c <__assert_fail@plt+0x212ec>
   3254c:	ldr	r2, [fp, #4]
   32550:	ldr	r3, [fp, #-224]	; 0xffffff20
   32554:	cmp	r2, r3
   32558:	ble	3255c <__assert_fail@plt+0x212ec>
   3255c:	ldr	r3, [fp, #-20]	; 0xffffffec
   32560:	ldr	r3, [r3, #36]	; 0x24
   32564:	ldr	r3, [r3, #8]
   32568:	cmp	r3, #0
   3256c:	bne	325e0 <__assert_fail@plt+0x21370>
   32570:	ldr	r3, [fp, #-20]	; 0xffffffec
   32574:	ldr	r3, [r3, #40]	; 0x28
   32578:	ldr	r3, [r3, #8]
   3257c:	cmp	r3, #0
   32580:	bne	325e0 <__assert_fail@plt+0x21370>
   32584:	ldr	r3, [fp, #-20]	; 0xffffffec
   32588:	ldr	r3, [r3, #44]	; 0x2c
   3258c:	ldr	r3, [r3, #8]
   32590:	cmp	r3, #0
   32594:	beq	325b0 <__assert_fail@plt+0x21340>
   32598:	ldr	r3, [fp, #-216]	; 0xffffff28
   3259c:	ldrb	r3, [r3, #28]
   325a0:	bic	r3, r3, #127	; 0x7f
   325a4:	uxtb	r3, r3
   325a8:	cmp	r3, #0
   325ac:	bne	325e0 <__assert_fail@plt+0x21370>
   325b0:	ldr	r3, [fp, #-228]	; 0xffffff1c
   325b4:	cmp	r3, #0
   325b8:	beq	325d0 <__assert_fail@plt+0x21360>
   325bc:	ldr	r3, [fp, #4]
   325c0:	cmp	r3, #0
   325c4:	beq	325d0 <__assert_fail@plt+0x21360>
   325c8:	mov	r3, #1
   325cc:	b	33260 <__assert_fail@plt+0x21ff0>
   325d0:	mov	r3, #0
   325d4:	str	r3, [fp, #4]
   325d8:	ldr	r3, [fp, #4]
   325dc:	str	r3, [fp, #-228]	; 0xffffff1c
   325e0:	ldr	r3, [fp, #12]
   325e4:	cmp	r3, #0
   325e8:	bne	325fc <__assert_fail@plt+0x2138c>
   325ec:	ldr	r3, [fp, #-20]	; 0xffffffec
   325f0:	ldr	r3, [r3, #76]	; 0x4c
   325f4:	cmp	r3, #0
   325f8:	beq	32604 <__assert_fail@plt+0x21394>
   325fc:	mov	r3, #1
   32600:	b	32608 <__assert_fail@plt+0x21398>
   32604:	mov	r3, #0
   32608:	strb	r3, [fp, #-37]	; 0xffffffdb
   3260c:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   32610:	and	r3, r3, #1
   32614:	strb	r3, [fp, #-37]	; 0xffffffdb
   32618:	ldr	r3, [fp, #-20]	; 0xffffffec
   3261c:	ldr	r3, [r3, #8]
   32620:	add	r3, r3, #1
   32624:	mov	ip, r3
   32628:	ldr	r3, [fp, #-216]	; 0xffffff28
   3262c:	ldr	r3, [r3, #20]
   32630:	ldr	r2, [fp, #-216]	; 0xffffff28
   32634:	ldr	r2, [r2, #12]
   32638:	and	r2, r2, #4194304	; 0x400000
   3263c:	cmp	r2, #0
   32640:	movne	r2, #1
   32644:	moveq	r2, #0
   32648:	uxtb	r2, r2
   3264c:	sub	r0, fp, #208	; 0xd0
   32650:	ldr	r1, [fp, #-20]	; 0xffffffec
   32654:	str	r1, [sp, #8]
   32658:	str	r2, [sp, #4]
   3265c:	str	r3, [sp]
   32660:	mov	r3, ip
   32664:	ldr	r2, [fp, #-224]	; 0xffffff20
   32668:	ldr	r1, [fp, #-220]	; 0xffffff24
   3266c:	bl	2349c <__assert_fail@plt+0x1222c>
   32670:	str	r0, [fp, #-8]
   32674:	ldr	r3, [fp, #-8]
   32678:	cmp	r3, #0
   3267c:	movne	r3, #1
   32680:	moveq	r3, #0
   32684:	uxtb	r3, r3
   32688:	cmp	r3, #0
   3268c:	bne	331fc <__assert_fail@plt+0x21f8c>
   32690:	ldr	r3, [fp, #8]
   32694:	str	r3, [fp, #-152]	; 0xffffff68
   32698:	ldr	r3, [fp, #8]
   3269c:	str	r3, [fp, #-156]	; 0xffffff64
   326a0:	ldr	r3, [fp, #-216]	; 0xffffff28
   326a4:	ldrb	r3, [r3, #28]
   326a8:	lsr	r3, r3, #7
   326ac:	uxtb	r3, r3
   326b0:	strb	r3, [fp, #-131]	; 0xffffff7d
   326b4:	ldr	r3, [fp, #-20]	; 0xffffffec
   326b8:	ldr	r3, [r3, #76]	; 0x4c
   326bc:	lsl	r2, r3, #1
   326c0:	sub	r3, fp, #208	; 0xd0
   326c4:	ldr	r1, [fp, #20]
   326c8:	mov	r0, r3
   326cc:	bl	3b854 <__assert_fail@plt+0x2a5e4>
   326d0:	str	r0, [fp, #-8]
   326d4:	ldr	r3, [fp, #-8]
   326d8:	cmp	r3, #0
   326dc:	movne	r3, #1
   326e0:	moveq	r3, #0
   326e4:	uxtb	r3, r3
   326e8:	cmp	r3, #0
   326ec:	bne	33204 <__assert_fail@plt+0x21f94>
   326f0:	ldr	r3, [fp, #12]
   326f4:	cmp	r3, #1
   326f8:	bhi	32714 <__assert_fail@plt+0x214a4>
   326fc:	ldr	r3, [fp, #-20]	; 0xffffffec
   32700:	ldrb	r3, [r3, #88]	; 0x58
   32704:	and	r3, r3, #2
   32708:	uxtb	r3, r3
   3270c:	cmp	r3, #0
   32710:	beq	32780 <__assert_fail@plt+0x21510>
   32714:	ldr	r3, [fp, #-172]	; 0xffffff54
   32718:	cmn	r3, #-1073741822	; 0xc0000002
   3271c:	movhi	r3, #1
   32720:	movls	r3, #0
   32724:	uxtb	r3, r3
   32728:	cmp	r3, #0
   3272c:	beq	3273c <__assert_fail@plt+0x214cc>
   32730:	mov	r3, #12
   32734:	str	r3, [fp, #-8]
   32738:	b	33228 <__assert_fail@plt+0x21fb8>
   3273c:	ldr	r3, [fp, #-172]	; 0xffffff54
   32740:	add	r3, r3, #1
   32744:	lsl	r3, r3, #2
   32748:	mov	r0, r3
   3274c:	bl	3df98 <__assert_fail@plt+0x2cd28>
   32750:	mov	r3, r0
   32754:	str	r3, [fp, #-108]	; 0xffffff94
   32758:	ldr	r3, [fp, #-108]	; 0xffffff94
   3275c:	cmp	r3, #0
   32760:	moveq	r3, #1
   32764:	movne	r3, #0
   32768:	uxtb	r3, r3
   3276c:	cmp	r3, #0
   32770:	beq	32780 <__assert_fail@plt+0x21510>
   32774:	mov	r3, #12
   32778:	str	r3, [fp, #-8]
   3277c:	b	33228 <__assert_fail@plt+0x21fb8>
   32780:	ldr	r3, [fp, #-228]	; 0xffffff1c
   32784:	str	r3, [fp, #-72]	; 0xffffffb8
   32788:	ldr	r3, [fp, #20]
   3278c:	and	r3, r3, #1
   32790:	cmp	r3, #0
   32794:	beq	327a0 <__assert_fail@plt+0x21530>
   32798:	mov	r3, #4
   3279c:	b	327a4 <__assert_fail@plt+0x21534>
   327a0:	mov	r3, #6
   327a4:	str	r3, [fp, #-148]	; 0xffffff6c
   327a8:	ldr	r2, [fp, #4]
   327ac:	ldr	r3, [fp, #-228]	; 0xffffff1c
   327b0:	cmp	r2, r3
   327b4:	bge	327c0 <__assert_fail@plt+0x21550>
   327b8:	mvn	r3, #0
   327bc:	b	327c4 <__assert_fail@plt+0x21554>
   327c0:	mov	r3, #1
   327c4:	str	r3, [fp, #-44]	; 0xffffffd4
   327c8:	ldr	r2, [fp, #-228]	; 0xffffff1c
   327cc:	ldr	r3, [fp, #4]
   327d0:	cmp	r2, r3
   327d4:	movlt	r3, r2
   327d8:	movge	r3, r3
   327dc:	str	r3, [fp, #-48]	; 0xffffffd0
   327e0:	ldr	r2, [fp, #4]
   327e4:	ldr	r3, [fp, #-228]	; 0xffffff1c
   327e8:	cmp	r2, r3
   327ec:	movge	r3, r2
   327f0:	movlt	r3, r3
   327f4:	str	r3, [fp, #-52]	; 0xffffffcc
   327f8:	ldr	r3, [fp, #-20]	; 0xffffffec
   327fc:	ldr	r3, [r3, #92]	; 0x5c
   32800:	cmp	r3, #1
   32804:	moveq	r3, #1
   32808:	movne	r3, #0
   3280c:	strb	r3, [fp, #-53]	; 0xffffffcb
   32810:	ldr	r3, [fp, #-28]	; 0xffffffe4
   32814:	cmp	r3, #0
   32818:	beq	32890 <__assert_fail@plt+0x21620>
   3281c:	ldrb	r3, [fp, #-53]	; 0xffffffcb
   32820:	cmp	r3, #0
   32824:	bne	32848 <__assert_fail@plt+0x215d8>
   32828:	ldr	r3, [fp, #-216]	; 0xffffff28
   3282c:	ldr	r3, [r3, #12]
   32830:	and	r3, r3, #4194304	; 0x400000
   32834:	cmp	r3, #0
   32838:	bne	32850 <__assert_fail@plt+0x215e0>
   3283c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   32840:	cmp	r3, #0
   32844:	bne	32850 <__assert_fail@plt+0x215e0>
   32848:	mov	r2, #4
   3284c:	b	32854 <__assert_fail@plt+0x215e4>
   32850:	mov	r2, #0
   32854:	ldr	r1, [fp, #-228]	; 0xffffff1c
   32858:	ldr	r3, [fp, #4]
   3285c:	cmp	r1, r3
   32860:	bgt	3286c <__assert_fail@plt+0x215fc>
   32864:	mov	r3, #2
   32868:	b	32870 <__assert_fail@plt+0x21600>
   3286c:	mov	r3, #0
   32870:	orr	r3, r2, r3
   32874:	ldr	r2, [fp, #-32]	; 0xffffffe0
   32878:	cmp	r2, #0
   3287c:	movne	r2, #1
   32880:	moveq	r2, #0
   32884:	uxtb	r2, r2
   32888:	orr	r3, r3, r2
   3288c:	b	32894 <__assert_fail@plt+0x21624>
   32890:	mov	r3, #8
   32894:	str	r3, [fp, #-60]	; 0xffffffc4
   32898:	mov	r3, #1
   3289c:	str	r3, [fp, #-8]
   328a0:	ldr	r2, [fp, #-72]	; 0xffffffb8
   328a4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   328a8:	cmp	r2, r3
   328ac:	blt	33228 <__assert_fail@plt+0x21fb8>
   328b0:	ldr	r3, [fp, #-72]	; 0xffffffb8
   328b4:	ldr	r2, [fp, #-52]	; 0xffffffcc
   328b8:	cmp	r2, r3
   328bc:	blt	33228 <__assert_fail@plt+0x21fb8>
   328c0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   328c4:	sub	r3, r3, #4
   328c8:	cmp	r3, #4
   328cc:	ldrls	pc, [pc, r3, lsl #2]
   328d0:	b	32ae0 <__assert_fail@plt+0x21870>
   328d4:			; <UNDEFINED> instruction: 0x00032ab4
   328d8:			; <UNDEFINED> instruction: 0x00032ab4
   328dc:	andeq	r2, r3, r0, ror #18
   328e0:	strdeq	r2, [r3], -r4
   328e4:	andeq	r2, r3, r4, ror #23
   328e8:	ldr	r3, [fp, #-72]	; 0xffffffb8
   328ec:	add	r3, r3, #1
   328f0:	str	r3, [fp, #-72]	; 0xffffffb8
   328f4:	ldr	r2, [fp, #-72]	; 0xffffffb8
   328f8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   328fc:	cmp	r2, r3
   32900:	movlt	r3, #1
   32904:	movge	r3, #0
   32908:	uxtb	r3, r3
   3290c:	cmp	r3, #0
   32910:	beq	329b0 <__assert_fail@plt+0x21740>
   32914:	ldr	r3, [fp, #-72]	; 0xffffffb8
   32918:	mov	r2, r3
   3291c:	ldr	r3, [fp, #-220]	; 0xffffff24
   32920:	add	r3, r3, r2
   32924:	ldrb	r3, [r3]
   32928:	mov	r2, r3
   3292c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   32930:	add	r3, r3, r2
   32934:	ldrb	r3, [r3]
   32938:	mov	r2, r3
   3293c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   32940:	add	r3, r3, r2
   32944:	ldrb	r3, [r3]
   32948:	cmp	r3, #0
   3294c:	beq	328e8 <__assert_fail@plt+0x21678>
   32950:	b	329b0 <__assert_fail@plt+0x21740>
   32954:	ldr	r3, [fp, #-72]	; 0xffffffb8
   32958:	add	r3, r3, #1
   3295c:	str	r3, [fp, #-72]	; 0xffffffb8
   32960:	ldr	r2, [fp, #-72]	; 0xffffffb8
   32964:	ldr	r3, [fp, #-52]	; 0xffffffcc
   32968:	cmp	r2, r3
   3296c:	movlt	r3, #1
   32970:	movge	r3, #0
   32974:	uxtb	r3, r3
   32978:	cmp	r3, #0
   3297c:	beq	329b4 <__assert_fail@plt+0x21744>
   32980:	ldr	r3, [fp, #-72]	; 0xffffffb8
   32984:	mov	r2, r3
   32988:	ldr	r3, [fp, #-220]	; 0xffffff24
   3298c:	add	r3, r3, r2
   32990:	ldrb	r3, [r3]
   32994:	mov	r2, r3
   32998:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3299c:	add	r3, r3, r2
   329a0:	ldrb	r3, [r3]
   329a4:	cmp	r3, #0
   329a8:	beq	32954 <__assert_fail@plt+0x216e4>
   329ac:	b	329b4 <__assert_fail@plt+0x21744>
   329b0:	nop			; (mov r0, r0)
   329b4:	ldr	r2, [fp, #-72]	; 0xffffffb8
   329b8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   329bc:	cmp	r2, r3
   329c0:	moveq	r3, #1
   329c4:	movne	r3, #0
   329c8:	uxtb	r3, r3
   329cc:	cmp	r3, #0
   329d0:	beq	32bec <__assert_fail@plt+0x2197c>
   329d4:	ldr	r2, [fp, #-72]	; 0xffffffb8
   329d8:	ldr	r3, [fp, #-224]	; 0xffffff20
   329dc:	cmp	r2, r3
   329e0:	bge	329fc <__assert_fail@plt+0x2178c>
   329e4:	ldr	r3, [fp, #-72]	; 0xffffffb8
   329e8:	mov	r2, r3
   329ec:	ldr	r3, [fp, #-220]	; 0xffffff24
   329f0:	add	r3, r3, r2
   329f4:	ldrb	r3, [r3]
   329f8:	b	32a00 <__assert_fail@plt+0x21790>
   329fc:	mov	r3, #0
   32a00:	str	r3, [fp, #-64]	; 0xffffffc0
   32a04:	ldr	r3, [fp, #-32]	; 0xffffffe0
   32a08:	cmp	r3, #0
   32a0c:	beq	32a24 <__assert_fail@plt+0x217b4>
   32a10:	ldr	r3, [fp, #-64]	; 0xffffffc0
   32a14:	ldr	r2, [fp, #-32]	; 0xffffffe0
   32a18:	add	r3, r2, r3
   32a1c:	ldrb	r3, [r3]
   32a20:	b	32a28 <__assert_fail@plt+0x217b8>
   32a24:	ldr	r3, [fp, #-64]	; 0xffffffc0
   32a28:	ldr	r2, [fp, #-28]	; 0xffffffe4
   32a2c:	add	r3, r2, r3
   32a30:	ldrb	r3, [r3]
   32a34:	cmp	r3, #0
   32a38:	bne	32bec <__assert_fail@plt+0x2197c>
   32a3c:	b	33228 <__assert_fail@plt+0x21fb8>
   32a40:	ldr	r2, [fp, #-72]	; 0xffffffb8
   32a44:	ldr	r3, [fp, #-224]	; 0xffffff20
   32a48:	cmp	r2, r3
   32a4c:	bge	32a68 <__assert_fail@plt+0x217f8>
   32a50:	ldr	r3, [fp, #-72]	; 0xffffffb8
   32a54:	mov	r2, r3
   32a58:	ldr	r3, [fp, #-220]	; 0xffffff24
   32a5c:	add	r3, r3, r2
   32a60:	ldrb	r3, [r3]
   32a64:	b	32a6c <__assert_fail@plt+0x217fc>
   32a68:	mov	r3, #0
   32a6c:	str	r3, [fp, #-64]	; 0xffffffc0
   32a70:	ldr	r3, [fp, #-32]	; 0xffffffe0
   32a74:	cmp	r3, #0
   32a78:	beq	32a90 <__assert_fail@plt+0x21820>
   32a7c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   32a80:	ldr	r2, [fp, #-32]	; 0xffffffe0
   32a84:	add	r3, r2, r3
   32a88:	ldrb	r3, [r3]
   32a8c:	b	32a94 <__assert_fail@plt+0x21824>
   32a90:	ldr	r3, [fp, #-64]	; 0xffffffc0
   32a94:	ldr	r2, [fp, #-28]	; 0xffffffe4
   32a98:	add	r3, r2, r3
   32a9c:	ldrb	r3, [r3]
   32aa0:	cmp	r3, #0
   32aa4:	bne	32ac8 <__assert_fail@plt+0x21858>
   32aa8:	ldr	r3, [fp, #-72]	; 0xffffffb8
   32aac:	sub	r3, r3, #1
   32ab0:	str	r3, [fp, #-72]	; 0xffffffb8
   32ab4:	ldr	r2, [fp, #-72]	; 0xffffffb8
   32ab8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   32abc:	cmp	r2, r3
   32ac0:	bge	32a40 <__assert_fail@plt+0x217d0>
   32ac4:	b	32acc <__assert_fail@plt+0x2185c>
   32ac8:	nop			; (mov r0, r0)
   32acc:	ldr	r2, [fp, #-72]	; 0xffffffb8
   32ad0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   32ad4:	cmp	r2, r3
   32ad8:	bge	32bf4 <__assert_fail@plt+0x21984>
   32adc:	b	33228 <__assert_fail@plt+0x21fb8>
   32ae0:	ldr	r2, [fp, #-72]	; 0xffffffb8
   32ae4:	ldr	r3, [fp, #-184]	; 0xffffff48
   32ae8:	sub	r3, r2, r3
   32aec:	str	r3, [fp, #-12]
   32af0:	ldr	r3, [fp, #-176]	; 0xffffff50
   32af4:	mov	r2, r3
   32af8:	ldr	r3, [fp, #-12]
   32afc:	cmp	r2, r3
   32b00:	movls	r3, #1
   32b04:	movhi	r3, #0
   32b08:	uxtb	r3, r3
   32b0c:	cmp	r3, #0
   32b10:	beq	32b58 <__assert_fail@plt+0x218e8>
   32b14:	ldr	r1, [fp, #-72]	; 0xffffffb8
   32b18:	sub	r3, fp, #208	; 0xd0
   32b1c:	ldr	r2, [fp, #20]
   32b20:	mov	r0, r3
   32b24:	bl	24cc4 <__assert_fail@plt+0x13a54>
   32b28:	str	r0, [fp, #-8]
   32b2c:	ldr	r3, [fp, #-8]
   32b30:	cmp	r3, #0
   32b34:	movne	r3, #1
   32b38:	moveq	r3, #0
   32b3c:	uxtb	r3, r3
   32b40:	cmp	r3, #0
   32b44:	bne	3320c <__assert_fail@plt+0x21f9c>
   32b48:	ldr	r2, [fp, #-72]	; 0xffffffb8
   32b4c:	ldr	r3, [fp, #-184]	; 0xffffff48
   32b50:	sub	r3, r2, r3
   32b54:	str	r3, [fp, #-12]
   32b58:	ldr	r3, [fp, #-180]	; 0xffffff4c
   32b5c:	mov	r2, r3
   32b60:	ldr	r3, [fp, #-12]
   32b64:	cmp	r2, r3
   32b68:	bls	32b80 <__assert_fail@plt+0x21910>
   32b6c:	ldr	r2, [fp, #-204]	; 0xffffff34
   32b70:	ldr	r3, [fp, #-12]
   32b74:	add	r3, r2, r3
   32b78:	ldrb	r3, [r3]
   32b7c:	b	32b84 <__assert_fail@plt+0x21914>
   32b80:	mov	r3, #0
   32b84:	str	r3, [fp, #-64]	; 0xffffffc0
   32b88:	ldr	r3, [fp, #-64]	; 0xffffffc0
   32b8c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   32b90:	add	r3, r2, r3
   32b94:	ldrb	r3, [r3]
   32b98:	cmp	r3, #0
   32b9c:	bne	32bdc <__assert_fail@plt+0x2196c>
   32ba0:	ldr	r2, [fp, #-72]	; 0xffffffb8
   32ba4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   32ba8:	add	r3, r2, r3
   32bac:	str	r3, [fp, #-72]	; 0xffffffb8
   32bb0:	ldr	r2, [fp, #-72]	; 0xffffffb8
   32bb4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   32bb8:	cmp	r2, r3
   32bbc:	blt	32bd0 <__assert_fail@plt+0x21960>
   32bc0:	ldr	r2, [fp, #-72]	; 0xffffffb8
   32bc4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   32bc8:	cmp	r2, r3
   32bcc:	ble	32ae0 <__assert_fail@plt+0x21870>
   32bd0:	mov	r3, #1
   32bd4:	str	r3, [fp, #-8]
   32bd8:	b	33228 <__assert_fail@plt+0x21fb8>
   32bdc:	nop			; (mov r0, r0)
   32be0:	b	32bf8 <__assert_fail@plt+0x21988>
   32be4:	nop			; (mov r0, r0)
   32be8:	b	32bf8 <__assert_fail@plt+0x21988>
   32bec:	nop			; (mov r0, r0)
   32bf0:	b	32bf8 <__assert_fail@plt+0x21988>
   32bf4:	nop			; (mov r0, r0)
   32bf8:	ldr	r1, [fp, #-72]	; 0xffffffb8
   32bfc:	sub	r3, fp, #208	; 0xd0
   32c00:	ldr	r2, [fp, #20]
   32c04:	mov	r0, r3
   32c08:	bl	24cc4 <__assert_fail@plt+0x13a54>
   32c0c:	str	r0, [fp, #-8]
   32c10:	ldr	r3, [fp, #-8]
   32c14:	cmp	r3, #0
   32c18:	movne	r3, #1
   32c1c:	moveq	r3, #0
   32c20:	uxtb	r3, r3
   32c24:	cmp	r3, #0
   32c28:	bne	33214 <__assert_fail@plt+0x21fa4>
   32c2c:	ldrb	r3, [fp, #-53]	; 0xffffffcb
   32c30:	eor	r3, r3, #1
   32c34:	uxtb	r3, r3
   32c38:	cmp	r3, #0
   32c3c:	beq	32c5c <__assert_fail@plt+0x219ec>
   32c40:	ldr	r3, [fp, #-180]	; 0xffffff4c
   32c44:	cmp	r3, #0
   32c48:	beq	32c5c <__assert_fail@plt+0x219ec>
   32c4c:	ldr	r3, [fp, #-200]	; 0xffffff38
   32c50:	ldr	r3, [r3]
   32c54:	cmn	r3, #1
   32c58:	beq	32de4 <__assert_fail@plt+0x21b74>
   32c5c:	mov	r3, #0
   32c60:	str	r3, [fp, #-88]	; 0xffffffa8
   32c64:	ldr	r3, [fp, #-88]	; 0xffffffa8
   32c68:	str	r3, [fp, #-100]	; 0xffffff9c
   32c6c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   32c70:	str	r3, [fp, #-104]	; 0xffffff98
   32c74:	ldr	r2, [fp, #-228]	; 0xffffff1c
   32c78:	ldr	r3, [fp, #4]
   32c7c:	cmp	r2, r3
   32c80:	bgt	32c8c <__assert_fail@plt+0x21a1c>
   32c84:	sub	r3, fp, #72	; 0x48
   32c88:	b	32c90 <__assert_fail@plt+0x21a20>
   32c8c:	mov	r3, #0
   32c90:	ldrb	r1, [fp, #-37]	; 0xffffffdb
   32c94:	sub	r0, fp, #208	; 0xd0
   32c98:	mov	r2, r3
   32c9c:	bl	335d8 <__assert_fail@plt+0x22368>
   32ca0:	str	r0, [fp, #-24]	; 0xffffffe8
   32ca4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   32ca8:	cmn	r3, #1
   32cac:	beq	32dd4 <__assert_fail@plt+0x21b64>
   32cb0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   32cb4:	cmn	r3, #2
   32cb8:	moveq	r3, #1
   32cbc:	movne	r3, #0
   32cc0:	uxtb	r3, r3
   32cc4:	cmp	r3, #0
   32cc8:	beq	32cd8 <__assert_fail@plt+0x21a68>
   32ccc:	mov	r3, #12
   32cd0:	str	r3, [fp, #-8]
   32cd4:	b	33228 <__assert_fail@plt+0x21fb8>
   32cd8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   32cdc:	str	r3, [fp, #-116]	; 0xffffff8c
   32ce0:	ldr	r3, [fp, #-216]	; 0xffffff28
   32ce4:	ldrb	r3, [r3, #28]
   32ce8:	and	r3, r3, #16
   32cec:	uxtb	r3, r3
   32cf0:	cmp	r3, #0
   32cf4:	bne	32d04 <__assert_fail@plt+0x21a94>
   32cf8:	ldr	r3, [fp, #12]
   32cfc:	cmp	r3, #1
   32d00:	bhi	32d14 <__assert_fail@plt+0x21aa4>
   32d04:	ldr	r3, [fp, #-20]	; 0xffffffec
   32d08:	ldr	r3, [r3, #76]	; 0x4c
   32d0c:	cmp	r3, #0
   32d10:	beq	32d48 <__assert_fail@plt+0x21ad8>
   32d14:	ldr	r2, [fp, #-108]	; 0xffffff94
   32d18:	ldr	r3, [fp, #-24]	; 0xffffffe8
   32d1c:	lsl	r3, r3, #2
   32d20:	add	r3, r2, r3
   32d24:	ldr	r3, [r3]
   32d28:	str	r3, [fp, #-68]	; 0xffffffbc
   32d2c:	sub	r3, fp, #208	; 0xd0
   32d30:	ldr	r2, [fp, #-24]	; 0xffffffe8
   32d34:	ldr	r1, [fp, #-68]	; 0xffffffbc
   32d38:	mov	r0, r3
   32d3c:	bl	33cb8 <__assert_fail@plt+0x22a48>
   32d40:	mov	r3, r0
   32d44:	str	r3, [fp, #-112]	; 0xffffff90
   32d48:	ldr	r3, [fp, #-216]	; 0xffffff28
   32d4c:	ldrb	r3, [r3, #28]
   32d50:	and	r3, r3, #16
   32d54:	uxtb	r3, r3
   32d58:	cmp	r3, #0
   32d5c:	bne	32d84 <__assert_fail@plt+0x21b14>
   32d60:	ldr	r3, [fp, #12]
   32d64:	cmp	r3, #1
   32d68:	bls	32d84 <__assert_fail@plt+0x21b14>
   32d6c:	ldr	r3, [fp, #-20]	; 0xffffffec
   32d70:	ldrb	r3, [r3, #88]	; 0x58
   32d74:	and	r3, r3, #1
   32d78:	uxtb	r3, r3
   32d7c:	cmp	r3, #0
   32d80:	bne	32d94 <__assert_fail@plt+0x21b24>
   32d84:	ldr	r3, [fp, #-20]	; 0xffffffec
   32d88:	ldr	r3, [r3, #76]	; 0x4c
   32d8c:	cmp	r3, #0
   32d90:	beq	32e00 <__assert_fail@plt+0x21b90>
   32d94:	sub	r3, fp, #208	; 0xd0
   32d98:	mov	r0, r3
   32d9c:	bl	3326c <__assert_fail@plt+0x21ffc>
   32da0:	str	r0, [fp, #-8]
   32da4:	ldr	r3, [fp, #-8]
   32da8:	cmp	r3, #0
   32dac:	beq	32dfc <__assert_fail@plt+0x21b8c>
   32db0:	ldr	r3, [fp, #-8]
   32db4:	cmp	r3, #1
   32db8:	movne	r3, #1
   32dbc:	moveq	r3, #0
   32dc0:	uxtb	r3, r3
   32dc4:	cmp	r3, #0
   32dc8:	bne	3321c <__assert_fail@plt+0x21fac>
   32dcc:	mvn	r3, #0
   32dd0:	str	r3, [fp, #-24]	; 0xffffffe8
   32dd4:	sub	r3, fp, #208	; 0xd0
   32dd8:	mov	r0, r3
   32ddc:	bl	3b9b8 <__assert_fail@plt+0x2a748>
   32de0:	b	32de8 <__assert_fail@plt+0x21b78>
   32de4:	nop			; (mov r0, r0)
   32de8:	ldr	r2, [fp, #-72]	; 0xffffffb8
   32dec:	ldr	r3, [fp, #-44]	; 0xffffffd4
   32df0:	add	r3, r2, r3
   32df4:	str	r3, [fp, #-72]	; 0xffffffb8
   32df8:	b	32898 <__assert_fail@plt+0x21628>
   32dfc:	nop			; (mov r0, r0)
   32e00:	ldr	r3, [fp, #-24]	; 0xffffffe8
   32e04:	cmn	r3, #1
   32e08:	ldr	r3, [fp, #-8]
   32e0c:	cmp	r3, #0
   32e10:	ldr	r3, [fp, #12]
   32e14:	cmp	r3, #0
   32e18:	beq	33228 <__assert_fail@plt+0x21fb8>
   32e1c:	mov	r3, #1
   32e20:	str	r3, [fp, #-16]
   32e24:	b	32e64 <__assert_fail@plt+0x21bf4>
   32e28:	ldr	r3, [fp, #-16]
   32e2c:	lsl	r3, r3, #3
   32e30:	ldr	r2, [fp, #16]
   32e34:	add	r2, r2, r3
   32e38:	ldr	r3, [fp, #-16]
   32e3c:	lsl	r3, r3, #3
   32e40:	ldr	r1, [fp, #16]
   32e44:	add	r3, r1, r3
   32e48:	mvn	r1, #0
   32e4c:	str	r1, [r3, #4]
   32e50:	ldr	r3, [r3, #4]
   32e54:	str	r3, [r2]
   32e58:	ldr	r3, [fp, #-16]
   32e5c:	add	r3, r3, #1
   32e60:	str	r3, [fp, #-16]
   32e64:	ldr	r2, [fp, #-16]
   32e68:	ldr	r3, [fp, #12]
   32e6c:	cmp	r2, r3
   32e70:	bcc	32e28 <__assert_fail@plt+0x21bb8>
   32e74:	ldr	r3, [fp, #16]
   32e78:	mov	r2, #0
   32e7c:	str	r2, [r3]
   32e80:	ldr	r2, [fp, #-116]	; 0xffffff8c
   32e84:	ldr	r3, [fp, #16]
   32e88:	str	r2, [r3, #4]
   32e8c:	ldr	r3, [fp, #-216]	; 0xffffff28
   32e90:	ldrb	r3, [r3, #28]
   32e94:	and	r3, r3, #16
   32e98:	uxtb	r3, r3
   32e9c:	cmp	r3, #0
   32ea0:	bne	32f24 <__assert_fail@plt+0x21cb4>
   32ea4:	ldr	r3, [fp, #12]
   32ea8:	cmp	r3, #1
   32eac:	bls	32f24 <__assert_fail@plt+0x21cb4>
   32eb0:	ldr	r3, [fp, #-20]	; 0xffffffec
   32eb4:	ldrb	r3, [r3, #88]	; 0x58
   32eb8:	and	r3, r3, #1
   32ebc:	uxtb	r3, r3
   32ec0:	cmp	r3, #0
   32ec4:	beq	32ee0 <__assert_fail@plt+0x21c70>
   32ec8:	ldr	r3, [fp, #-20]	; 0xffffffec
   32ecc:	ldr	r3, [r3, #76]	; 0x4c
   32ed0:	cmp	r3, #0
   32ed4:	ble	32ee0 <__assert_fail@plt+0x21c70>
   32ed8:	mov	r3, #1
   32edc:	b	32ee4 <__assert_fail@plt+0x21c74>
   32ee0:	mov	r3, #0
   32ee4:	and	r3, r3, #1
   32ee8:	uxtb	r3, r3
   32eec:	sub	r1, fp, #208	; 0xd0
   32ef0:	str	r3, [sp]
   32ef4:	ldr	r3, [fp, #16]
   32ef8:	ldr	r2, [fp, #12]
   32efc:	ldr	r0, [fp, #-216]	; 0xffffff28
   32f00:	bl	34ba8 <__assert_fail@plt+0x23938>
   32f04:	str	r0, [fp, #-8]
   32f08:	ldr	r3, [fp, #-8]
   32f0c:	cmp	r3, #0
   32f10:	movne	r3, #1
   32f14:	moveq	r3, #0
   32f18:	uxtb	r3, r3
   32f1c:	cmp	r3, #0
   32f20:	bne	33224 <__assert_fail@plt+0x21fb4>
   32f24:	mov	r3, #0
   32f28:	str	r3, [fp, #-16]
   32f2c:	b	33094 <__assert_fail@plt+0x21e24>
   32f30:	ldr	r3, [fp, #-16]
   32f34:	lsl	r3, r3, #3
   32f38:	ldr	r2, [fp, #16]
   32f3c:	add	r3, r2, r3
   32f40:	ldr	r3, [r3]
   32f44:	cmn	r3, #1
   32f48:	beq	33088 <__assert_fail@plt+0x21e18>
   32f4c:	ldrb	r3, [fp, #-132]	; 0xffffff7c
   32f50:	cmp	r3, #0
   32f54:	movne	r3, #1
   32f58:	moveq	r3, #0
   32f5c:	uxtb	r3, r3
   32f60:	cmp	r3, #0
   32f64:	beq	33028 <__assert_fail@plt+0x21db8>
   32f68:	ldr	r3, [fp, #-16]
   32f6c:	lsl	r3, r3, #3
   32f70:	ldr	r2, [fp, #16]
   32f74:	add	r2, r2, r3
   32f78:	ldr	r3, [fp, #-16]
   32f7c:	lsl	r3, r3, #3
   32f80:	ldr	r1, [fp, #16]
   32f84:	add	r3, r1, r3
   32f88:	ldr	r1, [r3]
   32f8c:	ldr	r3, [fp, #-180]	; 0xffffff4c
   32f90:	cmp	r1, r3
   32f94:	bne	32fa0 <__assert_fail@plt+0x21d30>
   32f98:	ldr	r3, [fp, #-176]	; 0xffffff50
   32f9c:	b	32fc4 <__assert_fail@plt+0x21d54>
   32fa0:	ldr	r1, [fp, #-196]	; 0xffffff3c
   32fa4:	ldr	r3, [fp, #-16]
   32fa8:	lsl	r3, r3, #3
   32fac:	ldr	r0, [fp, #16]
   32fb0:	add	r3, r0, r3
   32fb4:	ldr	r3, [r3]
   32fb8:	lsl	r3, r3, #2
   32fbc:	add	r3, r1, r3
   32fc0:	ldr	r3, [r3]
   32fc4:	str	r3, [r2]
   32fc8:	ldr	r3, [fp, #-16]
   32fcc:	lsl	r3, r3, #3
   32fd0:	ldr	r2, [fp, #16]
   32fd4:	add	r2, r2, r3
   32fd8:	ldr	r3, [fp, #-16]
   32fdc:	lsl	r3, r3, #3
   32fe0:	ldr	r1, [fp, #16]
   32fe4:	add	r3, r1, r3
   32fe8:	ldr	r1, [r3, #4]
   32fec:	ldr	r3, [fp, #-180]	; 0xffffff4c
   32ff0:	cmp	r1, r3
   32ff4:	bne	33000 <__assert_fail@plt+0x21d90>
   32ff8:	ldr	r3, [fp, #-176]	; 0xffffff50
   32ffc:	b	33024 <__assert_fail@plt+0x21db4>
   33000:	ldr	r1, [fp, #-196]	; 0xffffff3c
   33004:	ldr	r3, [fp, #-16]
   33008:	lsl	r3, r3, #3
   3300c:	ldr	r0, [fp, #16]
   33010:	add	r3, r0, r3
   33014:	ldr	r3, [r3, #4]
   33018:	lsl	r3, r3, #2
   3301c:	add	r3, r1, r3
   33020:	ldr	r3, [r3]
   33024:	str	r3, [r2, #4]
   33028:	ldr	r3, [fp, #-16]
   3302c:	lsl	r3, r3, #3
   33030:	ldr	r2, [fp, #16]
   33034:	add	r3, r2, r3
   33038:	ldr	r2, [fp, #-16]
   3303c:	lsl	r2, r2, #3
   33040:	ldr	r1, [fp, #16]
   33044:	add	r2, r1, r2
   33048:	ldr	r1, [r2]
   3304c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   33050:	add	r2, r1, r2
   33054:	str	r2, [r3]
   33058:	ldr	r3, [fp, #-16]
   3305c:	lsl	r3, r3, #3
   33060:	ldr	r2, [fp, #16]
   33064:	add	r3, r2, r3
   33068:	ldr	r2, [fp, #-16]
   3306c:	lsl	r2, r2, #3
   33070:	ldr	r1, [fp, #16]
   33074:	add	r2, r1, r2
   33078:	ldr	r1, [r2, #4]
   3307c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   33080:	add	r2, r1, r2
   33084:	str	r2, [r3, #4]
   33088:	ldr	r3, [fp, #-16]
   3308c:	add	r3, r3, #1
   33090:	str	r3, [fp, #-16]
   33094:	ldr	r2, [fp, #-16]
   33098:	ldr	r3, [fp, #12]
   3309c:	cmp	r2, r3
   330a0:	bcc	32f30 <__assert_fail@plt+0x21cc0>
   330a4:	mov	r3, #0
   330a8:	str	r3, [fp, #-16]
   330ac:	b	330fc <__assert_fail@plt+0x21e8c>
   330b0:	ldr	r2, [fp, #-16]
   330b4:	ldr	r3, [fp, #12]
   330b8:	add	r3, r2, r3
   330bc:	lsl	r3, r3, #3
   330c0:	ldr	r2, [fp, #16]
   330c4:	add	r3, r2, r3
   330c8:	mvn	r2, #0
   330cc:	str	r2, [r3]
   330d0:	ldr	r2, [fp, #-16]
   330d4:	ldr	r3, [fp, #12]
   330d8:	add	r3, r2, r3
   330dc:	lsl	r3, r3, #3
   330e0:	ldr	r2, [fp, #16]
   330e4:	add	r3, r2, r3
   330e8:	mvn	r2, #0
   330ec:	str	r2, [r3, #4]
   330f0:	ldr	r3, [fp, #-16]
   330f4:	add	r3, r3, #1
   330f8:	str	r3, [fp, #-16]
   330fc:	ldr	r2, [fp, #-16]
   33100:	ldr	r3, [fp, #-36]	; 0xffffffdc
   33104:	cmp	r2, r3
   33108:	blt	330b0 <__assert_fail@plt+0x21e40>
   3310c:	ldr	r3, [fp, #-20]	; 0xffffffec
   33110:	ldr	r3, [r3, #132]	; 0x84
   33114:	cmp	r3, #0
   33118:	beq	33228 <__assert_fail@plt+0x21fb8>
   3311c:	mov	r3, #0
   33120:	str	r3, [fp, #-16]
   33124:	b	331e0 <__assert_fail@plt+0x21f70>
   33128:	ldr	r3, [fp, #-20]	; 0xffffffec
   3312c:	ldr	r2, [r3, #132]	; 0x84
   33130:	ldr	r3, [fp, #-16]
   33134:	lsl	r3, r3, #2
   33138:	add	r3, r2, r3
   3313c:	ldr	r2, [r3]
   33140:	ldr	r3, [fp, #-16]
   33144:	cmp	r2, r3
   33148:	beq	331d4 <__assert_fail@plt+0x21f64>
   3314c:	ldr	r3, [fp, #-16]
   33150:	add	r3, r3, #1
   33154:	lsl	r3, r3, #3
   33158:	ldr	r2, [fp, #16]
   3315c:	add	r3, r2, r3
   33160:	ldr	r2, [fp, #-20]	; 0xffffffec
   33164:	ldr	r1, [r2, #132]	; 0x84
   33168:	ldr	r2, [fp, #-16]
   3316c:	lsl	r2, r2, #2
   33170:	add	r2, r1, r2
   33174:	ldr	r2, [r2]
   33178:	add	r2, r2, #1
   3317c:	lsl	r2, r2, #3
   33180:	ldr	r1, [fp, #16]
   33184:	add	r2, r1, r2
   33188:	ldr	r2, [r2]
   3318c:	str	r2, [r3]
   33190:	ldr	r3, [fp, #-16]
   33194:	add	r3, r3, #1
   33198:	lsl	r3, r3, #3
   3319c:	ldr	r2, [fp, #16]
   331a0:	add	r3, r2, r3
   331a4:	ldr	r2, [fp, #-20]	; 0xffffffec
   331a8:	ldr	r1, [r2, #132]	; 0x84
   331ac:	ldr	r2, [fp, #-16]
   331b0:	lsl	r2, r2, #2
   331b4:	add	r2, r1, r2
   331b8:	ldr	r2, [r2]
   331bc:	add	r2, r2, #1
   331c0:	lsl	r2, r2, #3
   331c4:	ldr	r1, [fp, #16]
   331c8:	add	r2, r1, r2
   331cc:	ldr	r2, [r2, #4]
   331d0:	str	r2, [r3, #4]
   331d4:	ldr	r3, [fp, #-16]
   331d8:	add	r3, r3, #1
   331dc:	str	r3, [fp, #-16]
   331e0:	ldr	r3, [fp, #-16]
   331e4:	add	r3, r3, #1
   331e8:	mov	r2, r3
   331ec:	ldr	r3, [fp, #12]
   331f0:	cmp	r2, r3
   331f4:	bcc	33128 <__assert_fail@plt+0x21eb8>
   331f8:	b	33228 <__assert_fail@plt+0x21fb8>
   331fc:	nop			; (mov r0, r0)
   33200:	b	33228 <__assert_fail@plt+0x21fb8>
   33204:	nop			; (mov r0, r0)
   33208:	b	33228 <__assert_fail@plt+0x21fb8>
   3320c:	nop			; (mov r0, r0)
   33210:	b	33228 <__assert_fail@plt+0x21fb8>
   33214:	nop			; (mov r0, r0)
   33218:	b	33228 <__assert_fail@plt+0x21fb8>
   3321c:	nop			; (mov r0, r0)
   33220:	b	33228 <__assert_fail@plt+0x21fb8>
   33224:	nop			; (mov r0, r0)
   33228:	ldr	r3, [fp, #-108]	; 0xffffff94
   3322c:	mov	r0, r3
   33230:	bl	13630 <__assert_fail@plt+0x23c0>
   33234:	ldr	r3, [fp, #-20]	; 0xffffffec
   33238:	ldr	r3, [r3, #76]	; 0x4c
   3323c:	cmp	r3, #0
   33240:	beq	33250 <__assert_fail@plt+0x21fe0>
   33244:	sub	r3, fp, #208	; 0xd0
   33248:	mov	r0, r3
   3324c:	bl	3bae0 <__assert_fail@plt+0x2a870>
   33250:	sub	r3, fp, #208	; 0xd0
   33254:	mov	r0, r3
   33258:	bl	25cb4 <__assert_fail@plt+0x14a44>
   3325c:	ldr	r3, [fp, #-8]
   33260:	mov	r0, r3
   33264:	sub	sp, fp, #4
   33268:	pop	{fp, pc}
   3326c:	push	{fp, lr}
   33270:	add	fp, sp, #4
   33274:	sub	sp, sp, #72	; 0x48
   33278:	str	r0, [fp, #-64]	; 0xffffffc0
   3327c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   33280:	ldr	r3, [r3, #84]	; 0x54
   33284:	str	r3, [fp, #-28]	; 0xffffffe4
   33288:	mov	r3, #0
   3328c:	str	r3, [fp, #-24]	; 0xffffffe8
   33290:	ldr	r3, [fp, #-64]	; 0xffffffc0
   33294:	ldr	r3, [r3, #100]	; 0x64
   33298:	cmp	r3, #0
   3329c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   332a0:	ldr	r3, [r3, #92]	; 0x5c
   332a4:	str	r3, [fp, #-12]
   332a8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   332ac:	ldr	r3, [r3, #96]	; 0x60
   332b0:	str	r3, [fp, #-8]
   332b4:	ldr	r3, [fp, #-12]
   332b8:	cmn	r3, #-1073741822	; 0xc0000002
   332bc:	movhi	r3, #1
   332c0:	movls	r3, #0
   332c4:	uxtb	r3, r3
   332c8:	cmp	r3, #0
   332cc:	beq	332d8 <__assert_fail@plt+0x22068>
   332d0:	mov	r3, #12
   332d4:	b	335cc <__assert_fail@plt+0x2235c>
   332d8:	ldr	r3, [fp, #-12]
   332dc:	add	r3, r3, #1
   332e0:	lsl	r3, r3, #2
   332e4:	mov	r0, r3
   332e8:	bl	3df98 <__assert_fail@plt+0x2cd28>
   332ec:	mov	r3, r0
   332f0:	str	r3, [fp, #-20]	; 0xffffffec
   332f4:	ldr	r3, [fp, #-20]	; 0xffffffec
   332f8:	cmp	r3, #0
   332fc:	moveq	r3, #1
   33300:	movne	r3, #0
   33304:	uxtb	r3, r3
   33308:	cmp	r3, #0
   3330c:	beq	3331c <__assert_fail@plt+0x220ac>
   33310:	mov	r3, #12
   33314:	str	r3, [fp, #-16]
   33318:	b	335b8 <__assert_fail@plt+0x22348>
   3331c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   33320:	ldr	r3, [r3, #76]	; 0x4c
   33324:	cmp	r3, #0
   33328:	beq	334f0 <__assert_fail@plt+0x22280>
   3332c:	ldr	r3, [fp, #-12]
   33330:	add	r3, r3, #1
   33334:	lsl	r3, r3, #2
   33338:	mov	r0, r3
   3333c:	bl	3df98 <__assert_fail@plt+0x2cd28>
   33340:	mov	r3, r0
   33344:	str	r3, [fp, #-24]	; 0xffffffe8
   33348:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3334c:	cmp	r3, #0
   33350:	moveq	r3, #1
   33354:	movne	r3, #0
   33358:	uxtb	r3, r3
   3335c:	cmp	r3, #0
   33360:	beq	33370 <__assert_fail@plt+0x22100>
   33364:	mov	r3, #12
   33368:	str	r3, [fp, #-16]
   3336c:	b	335b8 <__assert_fail@plt+0x22348>
   33370:	ldr	r3, [fp, #-12]
   33374:	add	r3, r3, #1
   33378:	lsl	r3, r3, #2
   3337c:	mov	r2, r3
   33380:	mov	r1, #0
   33384:	ldr	r0, [fp, #-24]	; 0xffffffe8
   33388:	bl	111bc <memset@plt>
   3338c:	sub	r0, fp, #56	; 0x38
   33390:	ldr	r3, [fp, #-12]
   33394:	str	r3, [sp]
   33398:	ldr	r3, [fp, #-8]
   3339c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   333a0:	ldr	r1, [fp, #-20]	; 0xffffffec
   333a4:	bl	3c1fc <__assert_fail@plt+0x2af8c>
   333a8:	sub	r3, fp, #56	; 0x38
   333ac:	mov	r1, r3
   333b0:	ldr	r0, [fp, #-64]	; 0xffffffc0
   333b4:	bl	351fc <__assert_fail@plt+0x23f8c>
   333b8:	str	r0, [fp, #-16]
   333bc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   333c0:	mov	r0, r3
   333c4:	bl	13630 <__assert_fail@plt+0x23c0>
   333c8:	ldr	r3, [fp, #-16]
   333cc:	cmp	r3, #0
   333d0:	movne	r3, #1
   333d4:	moveq	r3, #0
   333d8:	uxtb	r3, r3
   333dc:	cmp	r3, #0
   333e0:	bne	335ac <__assert_fail@plt+0x2233c>
   333e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   333e8:	ldr	r3, [r3]
   333ec:	cmp	r3, #0
   333f0:	bne	334a4 <__assert_fail@plt+0x22234>
   333f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   333f8:	ldr	r3, [r3]
   333fc:	cmp	r3, #0
   33400:	bne	334a4 <__assert_fail@plt+0x22234>
   33404:	ldr	r3, [fp, #-12]
   33408:	sub	r3, r3, #1
   3340c:	str	r3, [fp, #-12]
   33410:	ldr	r3, [fp, #-12]
   33414:	cmp	r3, #0
   33418:	bge	33428 <__assert_fail@plt+0x221b8>
   3341c:	mov	r3, #1
   33420:	str	r3, [fp, #-16]
   33424:	b	335b8 <__assert_fail@plt+0x22348>
   33428:	ldr	r3, [fp, #-64]	; 0xffffffc0
   3342c:	ldr	r2, [r3, #100]	; 0x64
   33430:	ldr	r3, [fp, #-12]
   33434:	lsl	r3, r3, #2
   33438:	add	r3, r2, r3
   3343c:	ldr	r3, [r3]
   33440:	cmp	r3, #0
   33444:	beq	33404 <__assert_fail@plt+0x22194>
   33448:	ldr	r3, [fp, #-64]	; 0xffffffc0
   3344c:	ldr	r2, [r3, #100]	; 0x64
   33450:	ldr	r3, [fp, #-12]
   33454:	lsl	r3, r3, #2
   33458:	add	r3, r2, r3
   3345c:	ldr	r3, [r3]
   33460:	ldrb	r3, [r3, #52]	; 0x34
   33464:	and	r3, r3, #16
   33468:	uxtb	r3, r3
   3346c:	cmp	r3, #0
   33470:	beq	33404 <__assert_fail@plt+0x22194>
   33474:	ldr	r3, [fp, #-64]	; 0xffffffc0
   33478:	ldr	r2, [r3, #100]	; 0x64
   3347c:	ldr	r3, [fp, #-12]
   33480:	lsl	r3, r3, #2
   33484:	add	r3, r2, r3
   33488:	ldr	r3, [r3]
   3348c:	ldr	r2, [fp, #-12]
   33490:	mov	r1, r3
   33494:	ldr	r0, [fp, #-64]	; 0xffffffc0
   33498:	bl	33cb8 <__assert_fail@plt+0x22a48>
   3349c:	str	r0, [fp, #-8]
   334a0:	b	33370 <__assert_fail@plt+0x22100>
   334a4:	ldr	r3, [fp, #-12]
   334a8:	add	r3, r3, #1
   334ac:	ldr	r2, [fp, #-24]	; 0xffffffe8
   334b0:	ldr	r1, [fp, #-20]	; 0xffffffec
   334b4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   334b8:	bl	357c0 <__assert_fail@plt+0x24550>
   334bc:	str	r0, [fp, #-16]
   334c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   334c4:	bl	13630 <__assert_fail@plt+0x23c0>
   334c8:	mov	r3, #0
   334cc:	str	r3, [fp, #-24]	; 0xffffffe8
   334d0:	ldr	r3, [fp, #-16]
   334d4:	cmp	r3, #0
   334d8:	movne	r3, #1
   334dc:	moveq	r3, #0
   334e0:	uxtb	r3, r3
   334e4:	cmp	r3, #0
   334e8:	beq	33564 <__assert_fail@plt+0x222f4>
   334ec:	b	335b8 <__assert_fail@plt+0x22348>
   334f0:	sub	r0, fp, #56	; 0x38
   334f4:	ldr	r3, [fp, #-12]
   334f8:	str	r3, [sp]
   334fc:	ldr	r3, [fp, #-8]
   33500:	ldr	r2, [fp, #-24]	; 0xffffffe8
   33504:	ldr	r1, [fp, #-20]	; 0xffffffec
   33508:	bl	3c1fc <__assert_fail@plt+0x2af8c>
   3350c:	sub	r3, fp, #56	; 0x38
   33510:	mov	r1, r3
   33514:	ldr	r0, [fp, #-64]	; 0xffffffc0
   33518:	bl	351fc <__assert_fail@plt+0x23f8c>
   3351c:	str	r0, [fp, #-16]
   33520:	ldr	r3, [fp, #-32]	; 0xffffffe0
   33524:	mov	r0, r3
   33528:	bl	13630 <__assert_fail@plt+0x23c0>
   3352c:	ldr	r3, [fp, #-16]
   33530:	cmp	r3, #0
   33534:	movne	r3, #1
   33538:	moveq	r3, #0
   3353c:	uxtb	r3, r3
   33540:	cmp	r3, #0
   33544:	bne	335b4 <__assert_fail@plt+0x22344>
   33548:	ldr	r3, [fp, #-20]	; 0xffffffec
   3354c:	ldr	r3, [r3]
   33550:	cmp	r3, #0
   33554:	bne	33564 <__assert_fail@plt+0x222f4>
   33558:	mov	r3, #1
   3355c:	str	r3, [fp, #-16]
   33560:	b	335b8 <__assert_fail@plt+0x22348>
   33564:	ldr	r3, [fp, #-64]	; 0xffffffc0
   33568:	ldr	r3, [r3, #100]	; 0x64
   3356c:	mov	r0, r3
   33570:	bl	13630 <__assert_fail@plt+0x23c0>
   33574:	ldr	r3, [fp, #-64]	; 0xffffffc0
   33578:	ldr	r2, [fp, #-20]	; 0xffffffec
   3357c:	str	r2, [r3, #100]	; 0x64
   33580:	mov	r3, #0
   33584:	str	r3, [fp, #-20]	; 0xffffffec
   33588:	ldr	r3, [fp, #-64]	; 0xffffffc0
   3358c:	ldr	r2, [fp, #-8]
   33590:	str	r2, [r3, #96]	; 0x60
   33594:	ldr	r3, [fp, #-64]	; 0xffffffc0
   33598:	ldr	r2, [fp, #-12]
   3359c:	str	r2, [r3, #92]	; 0x5c
   335a0:	mov	r3, #0
   335a4:	str	r3, [fp, #-16]
   335a8:	b	335b8 <__assert_fail@plt+0x22348>
   335ac:	nop			; (mov r0, r0)
   335b0:	b	335b8 <__assert_fail@plt+0x22348>
   335b4:	nop			; (mov r0, r0)
   335b8:	ldr	r0, [fp, #-20]	; 0xffffffec
   335bc:	bl	13630 <__assert_fail@plt+0x23c0>
   335c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   335c4:	bl	13630 <__assert_fail@plt+0x23c0>
   335c8:	ldr	r3, [fp, #-16]
   335cc:	mov	r0, r3
   335d0:	sub	sp, fp, #4
   335d4:	pop	{fp, pc}
   335d8:	push	{fp, lr}
   335dc:	add	fp, sp, #4
   335e0:	sub	sp, sp, #80	; 0x50
   335e4:	str	r0, [fp, #-72]	; 0xffffffb8
   335e8:	mov	r3, r1
   335ec:	str	r2, [fp, #-80]	; 0xffffffb0
   335f0:	strb	r3, [fp, #-73]	; 0xffffffb7
   335f4:	ldr	r3, [fp, #-72]	; 0xffffffb8
   335f8:	ldr	r3, [r3, #84]	; 0x54
   335fc:	str	r3, [fp, #-28]	; 0xffffffe4
   33600:	mov	r3, #0
   33604:	str	r3, [fp, #-8]
   33608:	mvn	r3, #0
   3360c:	str	r3, [fp, #-12]
   33610:	ldr	r3, [fp, #-72]	; 0xffffffb8
   33614:	ldr	r3, [r3, #40]	; 0x28
   33618:	str	r3, [fp, #-32]	; 0xffffffe0
   3361c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   33620:	cmp	r3, #0
   33624:	movne	r3, #1
   33628:	moveq	r3, #0
   3362c:	strb	r3, [fp, #-17]	; 0xffffffef
   33630:	ldr	r3, [fp, #-32]	; 0xffffffe0
   33634:	str	r3, [fp, #-24]	; 0xffffffe8
   33638:	mov	r3, #0
   3363c:	str	r3, [fp, #-64]	; 0xffffffc0
   33640:	sub	r3, fp, #64	; 0x40
   33644:	str	r3, [fp, #-44]	; 0xffffffd4
   33648:	ldr	r3, [fp, #-72]	; 0xffffffb8
   3364c:	str	r3, [fp, #-48]	; 0xffffffd0
   33650:	ldr	r3, [fp, #-32]	; 0xffffffe0
   33654:	str	r3, [fp, #-52]	; 0xffffffcc
   33658:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3365c:	ldr	r3, [r3, #84]	; 0x54
   33660:	str	r3, [fp, #-56]	; 0xffffffc8
   33664:	ldr	r3, [fp, #-56]	; 0xffffffc8
   33668:	ldr	r3, [r3, #36]	; 0x24
   3366c:	ldrb	r3, [r3, #52]	; 0x34
   33670:	bic	r3, r3, #127	; 0x7f
   33674:	uxtb	r3, r3
   33678:	cmp	r3, #0
   3367c:	beq	3375c <__assert_fail@plt+0x224ec>
   33680:	ldr	r0, [fp, #-48]	; 0xffffffd0
   33684:	ldr	r3, [fp, #-52]	; 0xffffffcc
   33688:	sub	r1, r3, #1
   3368c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   33690:	ldr	r3, [r3, #88]	; 0x58
   33694:	mov	r2, r3
   33698:	bl	25d10 <__assert_fail@plt+0x14aa0>
   3369c:	str	r0, [fp, #-60]	; 0xffffffc4
   336a0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   336a4:	and	r3, r3, #1
   336a8:	cmp	r3, #0
   336ac:	beq	336bc <__assert_fail@plt+0x2244c>
   336b0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   336b4:	ldr	r3, [r3, #40]	; 0x28
   336b8:	b	33764 <__assert_fail@plt+0x224f4>
   336bc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   336c0:	cmp	r3, #0
   336c4:	bne	336d4 <__assert_fail@plt+0x22464>
   336c8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   336cc:	ldr	r3, [r3, #36]	; 0x24
   336d0:	b	33764 <__assert_fail@plt+0x224f4>
   336d4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   336d8:	and	r3, r3, #4
   336dc:	cmp	r3, #0
   336e0:	beq	33700 <__assert_fail@plt+0x22490>
   336e4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   336e8:	and	r3, r3, #2
   336ec:	cmp	r3, #0
   336f0:	beq	33700 <__assert_fail@plt+0x22490>
   336f4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   336f8:	ldr	r3, [r3, #48]	; 0x30
   336fc:	b	33764 <__assert_fail@plt+0x224f4>
   33700:	ldr	r3, [fp, #-60]	; 0xffffffc4
   33704:	and	r3, r3, #2
   33708:	cmp	r3, #0
   3370c:	beq	3371c <__assert_fail@plt+0x224ac>
   33710:	ldr	r3, [fp, #-56]	; 0xffffffc8
   33714:	ldr	r3, [r3, #44]	; 0x2c
   33718:	b	33764 <__assert_fail@plt+0x224f4>
   3371c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   33720:	and	r3, r3, #4
   33724:	cmp	r3, #0
   33728:	beq	33750 <__assert_fail@plt+0x224e0>
   3372c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   33730:	ldr	r3, [r3, #36]	; 0x24
   33734:	ldr	r2, [r3, #40]	; 0x28
   33738:	ldr	r3, [fp, #-60]	; 0xffffffc4
   3373c:	ldr	r1, [fp, #-56]	; 0xffffffc8
   33740:	ldr	r0, [fp, #-44]	; 0xffffffd4
   33744:	bl	27a34 <__assert_fail@plt+0x167c4>
   33748:	mov	r3, r0
   3374c:	b	33764 <__assert_fail@plt+0x224f4>
   33750:	ldr	r3, [fp, #-56]	; 0xffffffc8
   33754:	ldr	r3, [r3, #36]	; 0x24
   33758:	b	33764 <__assert_fail@plt+0x224f4>
   3375c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   33760:	ldr	r3, [r3, #36]	; 0x24
   33764:	str	r3, [fp, #-16]
   33768:	ldr	r3, [fp, #-16]
   3376c:	cmp	r3, #0
   33770:	moveq	r3, #1
   33774:	movne	r3, #0
   33778:	uxtb	r3, r3
   3377c:	cmp	r3, #0
   33780:	beq	33794 <__assert_fail@plt+0x22524>
   33784:	ldr	r3, [fp, #-64]	; 0xffffffc0
   33788:	cmp	r3, #12
   3378c:	mvn	r3, #1
   33790:	b	33b88 <__assert_fail@plt+0x22918>
   33794:	ldr	r3, [fp, #-72]	; 0xffffffb8
   33798:	ldr	r3, [r3, #100]	; 0x64
   3379c:	cmp	r3, #0
   337a0:	beq	33874 <__assert_fail@plt+0x22604>
   337a4:	ldr	r3, [fp, #-72]	; 0xffffffb8
   337a8:	ldr	r2, [r3, #100]	; 0x64
   337ac:	ldr	r3, [fp, #-32]	; 0xffffffe0
   337b0:	lsl	r3, r3, #2
   337b4:	add	r3, r2, r3
   337b8:	ldr	r2, [fp, #-16]
   337bc:	str	r2, [r3]
   337c0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   337c4:	ldr	r3, [r3, #76]	; 0x4c
   337c8:	cmp	r3, #0
   337cc:	beq	33874 <__assert_fail@plt+0x22604>
   337d0:	mov	r3, #0
   337d4:	strb	r3, [fp, #-17]	; 0xffffffef
   337d8:	ldr	r3, [fp, #-16]
   337dc:	add	r3, r3, #4
   337e0:	mov	r2, #0
   337e4:	mov	r1, r3
   337e8:	ldr	r0, [fp, #-72]	; 0xffffffb8
   337ec:	bl	3740c <__assert_fail@plt+0x2619c>
   337f0:	mov	r3, r0
   337f4:	str	r3, [fp, #-64]	; 0xffffffc0
   337f8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   337fc:	cmp	r3, #0
   33800:	movne	r3, #1
   33804:	moveq	r3, #0
   33808:	uxtb	r3, r3
   3380c:	cmp	r3, #0
   33810:	beq	3381c <__assert_fail@plt+0x225ac>
   33814:	ldr	r3, [fp, #-64]	; 0xffffffc0
   33818:	b	33b88 <__assert_fail@plt+0x22918>
   3381c:	ldr	r3, [fp, #-16]
   33820:	ldrb	r3, [r3, #52]	; 0x34
   33824:	and	r3, r3, #64	; 0x40
   33828:	uxtb	r3, r3
   3382c:	cmp	r3, #0
   33830:	beq	33874 <__assert_fail@plt+0x22604>
   33834:	ldr	r3, [fp, #-16]
   33838:	add	r3, r3, #4
   3383c:	mov	r1, r3
   33840:	ldr	r0, [fp, #-72]	; 0xffffffb8
   33844:	bl	37968 <__assert_fail@plt+0x266f8>
   33848:	mov	r3, r0
   3384c:	str	r3, [fp, #-64]	; 0xffffffc0
   33850:	ldr	r3, [fp, #-64]	; 0xffffffc0
   33854:	cmp	r3, #0
   33858:	movne	r3, #1
   3385c:	moveq	r3, #0
   33860:	uxtb	r3, r3
   33864:	cmp	r3, #0
   33868:	beq	33874 <__assert_fail@plt+0x22604>
   3386c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   33870:	b	33b88 <__assert_fail@plt+0x22918>
   33874:	ldr	r3, [fp, #-16]
   33878:	ldrb	r3, [r3, #52]	; 0x34
   3387c:	lsr	r3, r3, #4
   33880:	and	r3, r3, #1
   33884:	uxtb	r3, r3
   33888:	cmp	r3, #0
   3388c:	beq	33b40 <__assert_fail@plt+0x228d0>
   33890:	ldr	r3, [fp, #-16]
   33894:	ldrb	r3, [r3, #52]	; 0x34
   33898:	bic	r3, r3, #127	; 0x7f
   3389c:	uxtb	r3, r3
   338a0:	cmp	r3, #0
   338a4:	beq	338c4 <__assert_fail@plt+0x22654>
   338a8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   338ac:	ldr	r1, [fp, #-16]
   338b0:	ldr	r0, [fp, #-72]	; 0xffffffb8
   338b4:	bl	33cb8 <__assert_fail@plt+0x22a48>
   338b8:	mov	r3, r0
   338bc:	cmp	r3, #0
   338c0:	beq	33b40 <__assert_fail@plt+0x228d0>
   338c4:	ldrb	r3, [fp, #-73]	; 0xffffffb7
   338c8:	eor	r3, r3, #1
   338cc:	uxtb	r3, r3
   338d0:	cmp	r3, #0
   338d4:	beq	338e0 <__assert_fail@plt+0x22670>
   338d8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   338dc:	b	33b88 <__assert_fail@plt+0x22918>
   338e0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   338e4:	str	r3, [fp, #-12]
   338e8:	mov	r3, #1
   338ec:	str	r3, [fp, #-8]
   338f0:	b	33b40 <__assert_fail@plt+0x228d0>
   338f4:	ldr	r3, [fp, #-16]
   338f8:	str	r3, [fp, #-36]	; 0xffffffdc
   338fc:	ldr	r3, [fp, #-72]	; 0xffffffb8
   33900:	ldr	r3, [r3, #40]	; 0x28
   33904:	add	r3, r3, #1
   33908:	str	r3, [fp, #-40]	; 0xffffffd8
   3390c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   33910:	ldr	r2, [r3, #36]	; 0x24
   33914:	ldr	r3, [fp, #-40]	; 0xffffffd8
   33918:	cmp	r2, r3
   3391c:	movle	r3, #1
   33920:	movgt	r3, #0
   33924:	uxtb	r3, r3
   33928:	cmp	r3, #0
   3392c:	beq	33948 <__assert_fail@plt+0x226d8>
   33930:	ldr	r3, [fp, #-72]	; 0xffffffb8
   33934:	ldr	r2, [r3, #36]	; 0x24
   33938:	ldr	r3, [fp, #-72]	; 0xffffffb8
   3393c:	ldr	r3, [r3, #48]	; 0x30
   33940:	cmp	r2, r3
   33944:	blt	33984 <__assert_fail@plt+0x22714>
   33948:	ldr	r3, [fp, #-72]	; 0xffffffb8
   3394c:	ldr	r2, [r3, #28]
   33950:	ldr	r3, [fp, #-40]	; 0xffffffd8
   33954:	cmp	r2, r3
   33958:	movle	r3, #1
   3395c:	movgt	r3, #0
   33960:	uxtb	r3, r3
   33964:	cmp	r3, #0
   33968:	beq	339cc <__assert_fail@plt+0x2275c>
   3396c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   33970:	ldr	r2, [r3, #28]
   33974:	ldr	r3, [fp, #-72]	; 0xffffffb8
   33978:	ldr	r3, [r3, #48]	; 0x30
   3397c:	cmp	r2, r3
   33980:	bge	339cc <__assert_fail@plt+0x2275c>
   33984:	ldr	r3, [fp, #-40]	; 0xffffffd8
   33988:	add	r3, r3, #1
   3398c:	mov	r1, r3
   33990:	ldr	r0, [fp, #-72]	; 0xffffffb8
   33994:	bl	3b6a4 <__assert_fail@plt+0x2a434>
   33998:	mov	r3, r0
   3399c:	str	r3, [fp, #-64]	; 0xffffffc0
   339a0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   339a4:	cmp	r3, #0
   339a8:	movne	r3, #1
   339ac:	moveq	r3, #0
   339b0:	uxtb	r3, r3
   339b4:	cmp	r3, #0
   339b8:	beq	339cc <__assert_fail@plt+0x2275c>
   339bc:	ldr	r3, [fp, #-64]	; 0xffffffc0
   339c0:	cmp	r3, #12
   339c4:	mvn	r3, #1
   339c8:	b	33b88 <__assert_fail@plt+0x22918>
   339cc:	sub	r3, fp, #64	; 0x40
   339d0:	ldr	r2, [fp, #-16]
   339d4:	ldr	r1, [fp, #-72]	; 0xffffffb8
   339d8:	mov	r0, r3
   339dc:	bl	36ee0 <__assert_fail@plt+0x25c70>
   339e0:	str	r0, [fp, #-16]
   339e4:	ldr	r3, [fp, #-72]	; 0xffffffb8
   339e8:	ldr	r3, [r3, #100]	; 0x64
   339ec:	cmp	r3, #0
   339f0:	beq	33a0c <__assert_fail@plt+0x2279c>
   339f4:	sub	r3, fp, #64	; 0x40
   339f8:	ldr	r2, [fp, #-16]
   339fc:	ldr	r1, [fp, #-72]	; 0xffffffb8
   33a00:	mov	r0, r3
   33a04:	bl	37090 <__assert_fail@plt+0x25e20>
   33a08:	str	r0, [fp, #-16]
   33a0c:	ldr	r3, [fp, #-16]
   33a10:	cmp	r3, #0
   33a14:	bne	33a8c <__assert_fail@plt+0x2281c>
   33a18:	ldr	r3, [fp, #-64]	; 0xffffffc0
   33a1c:	cmp	r3, #0
   33a20:	movne	r3, #1
   33a24:	moveq	r3, #0
   33a28:	uxtb	r3, r3
   33a2c:	cmp	r3, #0
   33a30:	beq	33a3c <__assert_fail@plt+0x227cc>
   33a34:	mvn	r3, #1
   33a38:	b	33b88 <__assert_fail@plt+0x22918>
   33a3c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   33a40:	ldr	r3, [r3, #100]	; 0x64
   33a44:	cmp	r3, #0
   33a48:	beq	33b60 <__assert_fail@plt+0x228f0>
   33a4c:	ldr	r3, [fp, #-8]
   33a50:	cmp	r3, #0
   33a54:	beq	33a6c <__assert_fail@plt+0x227fc>
   33a58:	ldrb	r3, [fp, #-73]	; 0xffffffb7
   33a5c:	eor	r3, r3, #1
   33a60:	uxtb	r3, r3
   33a64:	cmp	r3, #0
   33a68:	bne	33b60 <__assert_fail@plt+0x228f0>
   33a6c:	sub	r3, fp, #64	; 0x40
   33a70:	ldr	r1, [fp, #-72]	; 0xffffffb8
   33a74:	mov	r0, r3
   33a78:	bl	37348 <__assert_fail@plt+0x260d8>
   33a7c:	str	r0, [fp, #-16]
   33a80:	ldr	r3, [fp, #-16]
   33a84:	cmp	r3, #0
   33a88:	beq	33b60 <__assert_fail@plt+0x228f0>
   33a8c:	ldrb	r3, [fp, #-17]	; 0xffffffef
   33a90:	cmp	r3, #0
   33a94:	beq	33abc <__assert_fail@plt+0x2284c>
   33a98:	ldr	r2, [fp, #-36]	; 0xffffffdc
   33a9c:	ldr	r3, [fp, #-16]
   33aa0:	cmp	r2, r3
   33aa4:	bne	33ab4 <__assert_fail@plt+0x22844>
   33aa8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   33aac:	str	r3, [fp, #-24]	; 0xffffffe8
   33ab0:	b	33abc <__assert_fail@plt+0x2284c>
   33ab4:	mov	r3, #0
   33ab8:	strb	r3, [fp, #-17]	; 0xffffffef
   33abc:	ldr	r3, [fp, #-16]
   33ac0:	ldrb	r3, [r3, #52]	; 0x34
   33ac4:	and	r3, r3, #16
   33ac8:	uxtb	r3, r3
   33acc:	cmp	r3, #0
   33ad0:	beq	33b40 <__assert_fail@plt+0x228d0>
   33ad4:	ldr	r3, [fp, #-16]
   33ad8:	ldrb	r3, [r3, #52]	; 0x34
   33adc:	bic	r3, r3, #127	; 0x7f
   33ae0:	uxtb	r3, r3
   33ae4:	cmp	r3, #0
   33ae8:	beq	33b10 <__assert_fail@plt+0x228a0>
   33aec:	ldr	r3, [fp, #-72]	; 0xffffffb8
   33af0:	ldr	r3, [r3, #40]	; 0x28
   33af4:	mov	r2, r3
   33af8:	ldr	r1, [fp, #-16]
   33afc:	ldr	r0, [fp, #-72]	; 0xffffffb8
   33b00:	bl	33cb8 <__assert_fail@plt+0x22a48>
   33b04:	mov	r3, r0
   33b08:	cmp	r3, #0
   33b0c:	beq	33b40 <__assert_fail@plt+0x228d0>
   33b10:	ldr	r3, [fp, #-72]	; 0xffffffb8
   33b14:	ldr	r3, [r3, #40]	; 0x28
   33b18:	str	r3, [fp, #-12]
   33b1c:	mov	r3, #1
   33b20:	str	r3, [fp, #-8]
   33b24:	mov	r3, #0
   33b28:	str	r3, [fp, #-80]	; 0xffffffb0
   33b2c:	ldrb	r3, [fp, #-73]	; 0xffffffb7
   33b30:	eor	r3, r3, #1
   33b34:	uxtb	r3, r3
   33b38:	cmp	r3, #0
   33b3c:	bne	33b5c <__assert_fail@plt+0x228ec>
   33b40:	ldr	r3, [fp, #-72]	; 0xffffffb8
   33b44:	ldr	r2, [r3, #56]	; 0x38
   33b48:	ldr	r3, [fp, #-72]	; 0xffffffb8
   33b4c:	ldr	r3, [r3, #40]	; 0x28
   33b50:	cmp	r2, r3
   33b54:	bgt	338f4 <__assert_fail@plt+0x22684>
   33b58:	b	33b60 <__assert_fail@plt+0x228f0>
   33b5c:	nop			; (mov r0, r0)
   33b60:	ldr	r3, [fp, #-80]	; 0xffffffb0
   33b64:	cmp	r3, #0
   33b68:	beq	33b84 <__assert_fail@plt+0x22914>
   33b6c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   33b70:	ldr	r2, [r3]
   33b74:	ldr	r3, [fp, #-24]	; 0xffffffe8
   33b78:	add	r2, r2, r3
   33b7c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   33b80:	str	r2, [r3]
   33b84:	ldr	r3, [fp, #-12]
   33b88:	mov	r0, r3
   33b8c:	sub	sp, fp, #4
   33b90:	pop	{fp, pc}
   33b94:	push	{fp}		; (str fp, [sp, #-4]!)
   33b98:	add	fp, sp, #0
   33b9c:	sub	sp, sp, #28
   33ba0:	str	r0, [fp, #-16]
   33ba4:	str	r1, [fp, #-20]	; 0xffffffec
   33ba8:	str	r2, [fp, #-24]	; 0xffffffe8
   33bac:	ldr	r3, [fp, #-16]
   33bb0:	ldr	r2, [r3]
   33bb4:	ldr	r3, [fp, #-20]	; 0xffffffec
   33bb8:	lsl	r3, r3, #3
   33bbc:	add	r3, r2, r3
   33bc0:	ldrb	r3, [r3, #4]
   33bc4:	str	r3, [fp, #-8]
   33bc8:	ldr	r3, [fp, #-16]
   33bcc:	ldr	r2, [r3]
   33bd0:	ldr	r3, [fp, #-20]	; 0xffffffec
   33bd4:	lsl	r3, r3, #3
   33bd8:	add	r3, r2, r3
   33bdc:	ldr	r3, [r3, #4]
   33be0:	lsr	r3, r3, #8
   33be4:	lsl	r3, r3, #22
   33be8:	lsr	r3, r3, #22
   33bec:	uxth	r3, r3
   33bf0:	str	r3, [fp, #-12]
   33bf4:	ldr	r3, [fp, #-8]
   33bf8:	cmp	r3, #2
   33bfc:	beq	33c08 <__assert_fail@plt+0x22998>
   33c00:	mov	r3, #0
   33c04:	b	33ca8 <__assert_fail@plt+0x22a38>
   33c08:	ldr	r3, [fp, #-12]
   33c0c:	cmp	r3, #0
   33c10:	bne	33c1c <__assert_fail@plt+0x229ac>
   33c14:	mov	r3, #1
   33c18:	b	33ca8 <__assert_fail@plt+0x22a38>
   33c1c:	ldr	r3, [fp, #-12]
   33c20:	and	r3, r3, #4
   33c24:	cmp	r3, #0
   33c28:	beq	33c3c <__assert_fail@plt+0x229cc>
   33c2c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   33c30:	and	r3, r3, #1
   33c34:	cmp	r3, #0
   33c38:	beq	33c9c <__assert_fail@plt+0x22a2c>
   33c3c:	ldr	r3, [fp, #-12]
   33c40:	and	r3, r3, #8
   33c44:	cmp	r3, #0
   33c48:	beq	33c5c <__assert_fail@plt+0x229ec>
   33c4c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   33c50:	and	r3, r3, #1
   33c54:	cmp	r3, #0
   33c58:	bne	33c9c <__assert_fail@plt+0x22a2c>
   33c5c:	ldr	r3, [fp, #-12]
   33c60:	and	r3, r3, #32
   33c64:	cmp	r3, #0
   33c68:	beq	33c7c <__assert_fail@plt+0x22a0c>
   33c6c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   33c70:	and	r3, r3, #2
   33c74:	cmp	r3, #0
   33c78:	beq	33c9c <__assert_fail@plt+0x22a2c>
   33c7c:	ldr	r3, [fp, #-12]
   33c80:	and	r3, r3, #128	; 0x80
   33c84:	cmp	r3, #0
   33c88:	beq	33ca4 <__assert_fail@plt+0x22a34>
   33c8c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   33c90:	and	r3, r3, #8
   33c94:	cmp	r3, #0
   33c98:	bne	33ca4 <__assert_fail@plt+0x22a34>
   33c9c:	mov	r3, #0
   33ca0:	b	33ca8 <__assert_fail@plt+0x22a38>
   33ca4:	mov	r3, #1
   33ca8:	mov	r0, r3
   33cac:	add	sp, fp, #0
   33cb0:	pop	{fp}		; (ldr fp, [sp], #4)
   33cb4:	bx	lr
   33cb8:	push	{fp, lr}
   33cbc:	add	fp, sp, #4
   33cc0:	sub	sp, sp, #24
   33cc4:	str	r0, [fp, #-16]
   33cc8:	str	r1, [fp, #-20]	; 0xffffffec
   33ccc:	str	r2, [fp, #-24]	; 0xffffffe8
   33cd0:	ldr	r3, [fp, #-20]	; 0xffffffec
   33cd4:	ldrb	r3, [r3, #52]	; 0x34
   33cd8:	and	r3, r3, #16
   33cdc:	uxtb	r3, r3
   33ce0:	cmp	r3, #0
   33ce4:	ldr	r0, [fp, #-16]
   33ce8:	ldr	r3, [fp, #-16]
   33cec:	ldr	r3, [r3, #88]	; 0x58
   33cf0:	mov	r2, r3
   33cf4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   33cf8:	bl	25d10 <__assert_fail@plt+0x14aa0>
   33cfc:	str	r0, [fp, #-12]
   33d00:	mov	r3, #0
   33d04:	str	r3, [fp, #-8]
   33d08:	b	33d6c <__assert_fail@plt+0x22afc>
   33d0c:	ldr	r3, [fp, #-16]
   33d10:	ldr	r0, [r3, #84]	; 0x54
   33d14:	ldr	r3, [fp, #-20]	; 0xffffffec
   33d18:	ldr	r2, [r3, #12]
   33d1c:	ldr	r3, [fp, #-8]
   33d20:	lsl	r3, r3, #2
   33d24:	add	r3, r2, r3
   33d28:	ldr	r3, [r3]
   33d2c:	ldr	r2, [fp, #-12]
   33d30:	mov	r1, r3
   33d34:	bl	33b94 <__assert_fail@plt+0x22924>
   33d38:	mov	r3, r0
   33d3c:	cmp	r3, #0
   33d40:	beq	33d60 <__assert_fail@plt+0x22af0>
   33d44:	ldr	r3, [fp, #-20]	; 0xffffffec
   33d48:	ldr	r2, [r3, #12]
   33d4c:	ldr	r3, [fp, #-8]
   33d50:	lsl	r3, r3, #2
   33d54:	add	r3, r2, r3
   33d58:	ldr	r3, [r3]
   33d5c:	b	33d84 <__assert_fail@plt+0x22b14>
   33d60:	ldr	r3, [fp, #-8]
   33d64:	add	r3, r3, #1
   33d68:	str	r3, [fp, #-8]
   33d6c:	ldr	r3, [fp, #-20]	; 0xffffffec
   33d70:	ldr	r2, [r3, #8]
   33d74:	ldr	r3, [fp, #-8]
   33d78:	cmp	r2, r3
   33d7c:	bgt	33d0c <__assert_fail@plt+0x22a9c>
   33d80:	mov	r3, #0
   33d84:	mov	r0, r3
   33d88:	sub	sp, fp, #4
   33d8c:	pop	{fp, pc}
   33d90:	push	{fp, lr}
   33d94:	add	fp, sp, #4
   33d98:	sub	sp, sp, #88	; 0x58
   33d9c:	str	r0, [fp, #-64]	; 0xffffffc0
   33da0:	str	r1, [fp, #-68]	; 0xffffffbc
   33da4:	str	r2, [fp, #-72]	; 0xffffffb8
   33da8:	str	r3, [fp, #-76]	; 0xffffffb4
   33dac:	ldr	r3, [fp, #-64]	; 0xffffffc0
   33db0:	ldr	r3, [r3, #84]	; 0x54
   33db4:	str	r3, [fp, #-20]	; 0xffffffec
   33db8:	ldr	r3, [fp, #-20]	; 0xffffffec
   33dbc:	ldr	r2, [r3]
   33dc0:	ldr	r3, [fp, #8]
   33dc4:	lsl	r3, r3, #3
   33dc8:	add	r3, r2, r3
   33dcc:	ldrb	r3, [r3, #4]
   33dd0:	and	r3, r3, #8
   33dd4:	cmp	r3, #0
   33dd8:	beq	33f70 <__assert_fail@plt+0x22d00>
   33ddc:	ldr	r3, [fp, #-64]	; 0xffffffc0
   33de0:	ldr	r2, [r3, #100]	; 0x64
   33de4:	ldr	r3, [fp, #4]
   33de8:	ldr	r3, [r3]
   33dec:	lsl	r3, r3, #2
   33df0:	add	r3, r2, r3
   33df4:	ldr	r3, [r3]
   33df8:	add	r3, r3, #4
   33dfc:	str	r3, [fp, #-24]	; 0xffffffe8
   33e00:	ldr	r3, [fp, #-20]	; 0xffffffec
   33e04:	ldr	r1, [r3, #20]
   33e08:	ldr	r2, [fp, #8]
   33e0c:	mov	r3, r2
   33e10:	lsl	r3, r3, #1
   33e14:	add	r3, r3, r2
   33e18:	lsl	r3, r3, #2
   33e1c:	add	r3, r1, r3
   33e20:	str	r3, [fp, #-28]	; 0xffffffe4
   33e24:	ldr	r1, [fp, #8]
   33e28:	ldr	r0, [fp, #12]
   33e2c:	bl	2729c <__assert_fail@plt+0x1602c>
   33e30:	mov	r3, r0
   33e34:	cmp	r3, #0
   33e38:	bne	33e6c <__assert_fail@plt+0x22bfc>
   33e3c:	ldr	r1, [fp, #8]
   33e40:	ldr	r0, [fp, #12]
   33e44:	bl	26e8c <__assert_fail@plt+0x15c1c>
   33e48:	mov	r3, r0
   33e4c:	strb	r3, [fp, #-29]	; 0xffffffe3
   33e50:	ldrb	r3, [fp, #-29]	; 0xffffffe3
   33e54:	eor	r3, r3, #1
   33e58:	uxtb	r3, r3
   33e5c:	cmp	r3, #0
   33e60:	beq	33e6c <__assert_fail@plt+0x22bfc>
   33e64:	mvn	r3, #1
   33e68:	b	34308 <__assert_fail@plt+0x23098>
   33e6c:	mvn	r3, #0
   33e70:	str	r3, [fp, #-8]
   33e74:	mov	r3, #0
   33e78:	str	r3, [fp, #-12]
   33e7c:	b	33f4c <__assert_fail@plt+0x22cdc>
   33e80:	ldr	r3, [fp, #-28]	; 0xffffffe4
   33e84:	ldr	r2, [r3, #8]
   33e88:	ldr	r3, [fp, #-12]
   33e8c:	lsl	r3, r3, #2
   33e90:	add	r3, r2, r3
   33e94:	ldr	r3, [r3]
   33e98:	str	r3, [fp, #-36]	; 0xffffffdc
   33e9c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   33ea0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   33ea4:	bl	2729c <__assert_fail@plt+0x1602c>
   33ea8:	mov	r3, r0
   33eac:	cmp	r3, #0
   33eb0:	beq	33f3c <__assert_fail@plt+0x22ccc>
   33eb4:	ldr	r3, [fp, #-8]
   33eb8:	cmn	r3, #1
   33ebc:	bne	33ecc <__assert_fail@plt+0x22c5c>
   33ec0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   33ec4:	str	r3, [fp, #-8]
   33ec8:	b	33f40 <__assert_fail@plt+0x22cd0>
   33ecc:	ldr	r1, [fp, #-8]
   33ed0:	ldr	r0, [fp, #12]
   33ed4:	bl	2729c <__assert_fail@plt+0x1602c>
   33ed8:	mov	r3, r0
   33edc:	cmp	r3, #0
   33ee0:	beq	33eec <__assert_fail@plt+0x22c7c>
   33ee4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   33ee8:	b	34308 <__assert_fail@plt+0x23098>
   33eec:	ldr	r3, [fp, #16]
   33ef0:	cmp	r3, #0
   33ef4:	beq	33f64 <__assert_fail@plt+0x22cf4>
   33ef8:	ldr	r3, [fp, #4]
   33efc:	ldr	r1, [r3]
   33f00:	ldr	r3, [fp, #12]
   33f04:	str	r3, [sp, #8]
   33f08:	ldr	r3, [fp, #-76]	; 0xffffffb4
   33f0c:	str	r3, [sp, #4]
   33f10:	ldr	r3, [fp, #-72]	; 0xffffffb8
   33f14:	str	r3, [sp]
   33f18:	ldr	r3, [fp, #-68]	; 0xffffffbc
   33f1c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   33f20:	ldr	r0, [fp, #16]
   33f24:	bl	34314 <__assert_fail@plt+0x230a4>
   33f28:	mov	r3, r0
   33f2c:	cmp	r3, #0
   33f30:	beq	33f64 <__assert_fail@plt+0x22cf4>
   33f34:	mvn	r3, #1
   33f38:	b	34308 <__assert_fail@plt+0x23098>
   33f3c:	nop			; (mov r0, r0)
   33f40:	ldr	r3, [fp, #-12]
   33f44:	add	r3, r3, #1
   33f48:	str	r3, [fp, #-12]
   33f4c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   33f50:	ldr	r2, [r3, #4]
   33f54:	ldr	r3, [fp, #-12]
   33f58:	cmp	r2, r3
   33f5c:	bgt	33e80 <__assert_fail@plt+0x22c10>
   33f60:	b	33f68 <__assert_fail@plt+0x22cf8>
   33f64:	nop			; (mov r0, r0)
   33f68:	ldr	r3, [fp, #-8]
   33f6c:	b	34308 <__assert_fail@plt+0x23098>
   33f70:	mov	r3, #0
   33f74:	str	r3, [fp, #-16]
   33f78:	ldr	r3, [fp, #-20]	; 0xffffffec
   33f7c:	ldr	r2, [r3]
   33f80:	ldr	r3, [fp, #8]
   33f84:	lsl	r3, r3, #3
   33f88:	add	r3, r2, r3
   33f8c:	ldrb	r3, [r3, #4]
   33f90:	str	r3, [fp, #-40]	; 0xffffffd8
   33f94:	ldr	r3, [fp, #-20]	; 0xffffffec
   33f98:	ldr	r2, [r3]
   33f9c:	ldr	r3, [fp, #8]
   33fa0:	lsl	r3, r3, #3
   33fa4:	add	r3, r2, r3
   33fa8:	ldrb	r3, [r3, #6]
   33fac:	and	r3, r3, #16
   33fb0:	uxtb	r3, r3
   33fb4:	cmp	r3, #0
   33fb8:	beq	33fdc <__assert_fail@plt+0x22d6c>
   33fbc:	ldr	r2, [fp, #-64]	; 0xffffffc0
   33fc0:	ldr	r3, [fp, #4]
   33fc4:	ldr	r3, [r3]
   33fc8:	ldr	r1, [fp, #8]
   33fcc:	ldr	r0, [fp, #-20]	; 0xffffffec
   33fd0:	bl	3aef0 <__assert_fail@plt+0x29c80>
   33fd4:	str	r0, [fp, #-16]
   33fd8:	b	341d8 <__assert_fail@plt+0x22f68>
   33fdc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   33fe0:	cmp	r3, #4
   33fe4:	bne	341d8 <__assert_fail@plt+0x22f68>
   33fe8:	ldr	r3, [fp, #-20]	; 0xffffffec
   33fec:	ldr	r2, [r3]
   33ff0:	ldr	r3, [fp, #8]
   33ff4:	lsl	r3, r3, #3
   33ff8:	add	r3, r2, r3
   33ffc:	ldr	r3, [r3]
   34000:	add	r3, r3, #1
   34004:	str	r3, [fp, #-44]	; 0xffffffd4
   34008:	ldr	r2, [fp, #-44]	; 0xffffffd4
   3400c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   34010:	cmp	r2, r3
   34014:	bge	34048 <__assert_fail@plt+0x22dd8>
   34018:	ldr	r3, [fp, #-44]	; 0xffffffd4
   3401c:	lsl	r3, r3, #3
   34020:	ldr	r2, [fp, #-72]	; 0xffffffb8
   34024:	add	r3, r2, r3
   34028:	ldr	r2, [r3, #4]
   3402c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   34030:	lsl	r3, r3, #3
   34034:	ldr	r1, [fp, #-72]	; 0xffffffb8
   34038:	add	r3, r1, r3
   3403c:	ldr	r3, [r3]
   34040:	sub	r3, r2, r3
   34044:	str	r3, [fp, #-16]
   34048:	ldr	r3, [fp, #16]
   3404c:	cmp	r3, #0
   34050:	beq	34130 <__assert_fail@plt+0x22ec0>
   34054:	ldr	r2, [fp, #-44]	; 0xffffffd4
   34058:	ldr	r3, [fp, #-68]	; 0xffffffbc
   3405c:	cmp	r2, r3
   34060:	bge	3409c <__assert_fail@plt+0x22e2c>
   34064:	ldr	r3, [fp, #-44]	; 0xffffffd4
   34068:	lsl	r3, r3, #3
   3406c:	ldr	r2, [fp, #-72]	; 0xffffffb8
   34070:	add	r3, r2, r3
   34074:	ldr	r3, [r3]
   34078:	cmn	r3, #1
   3407c:	beq	3409c <__assert_fail@plt+0x22e2c>
   34080:	ldr	r3, [fp, #-44]	; 0xffffffd4
   34084:	lsl	r3, r3, #3
   34088:	ldr	r2, [fp, #-72]	; 0xffffffb8
   3408c:	add	r3, r2, r3
   34090:	ldr	r3, [r3, #4]
   34094:	cmn	r3, #1
   34098:	bne	340a4 <__assert_fail@plt+0x22e34>
   3409c:	mvn	r3, #0
   340a0:	b	34308 <__assert_fail@plt+0x23098>
   340a4:	ldr	r3, [fp, #-16]
   340a8:	cmp	r3, #0
   340ac:	beq	34130 <__assert_fail@plt+0x22ec0>
   340b0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   340b4:	ldr	r3, [r3, #4]
   340b8:	str	r3, [fp, #-48]	; 0xffffffd0
   340bc:	ldr	r3, [fp, #-64]	; 0xffffffc0
   340c0:	ldr	r2, [r3, #28]
   340c4:	ldr	r3, [fp, #4]
   340c8:	ldr	r3, [r3]
   340cc:	sub	r2, r2, r3
   340d0:	ldr	r3, [fp, #-16]
   340d4:	cmp	r2, r3
   340d8:	blt	34128 <__assert_fail@plt+0x22eb8>
   340dc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   340e0:	lsl	r3, r3, #3
   340e4:	ldr	r2, [fp, #-72]	; 0xffffffb8
   340e8:	add	r3, r2, r3
   340ec:	ldr	r3, [r3]
   340f0:	mov	r2, r3
   340f4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   340f8:	add	r0, r3, r2
   340fc:	ldr	r3, [fp, #4]
   34100:	ldr	r3, [r3]
   34104:	mov	r2, r3
   34108:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3410c:	add	r3, r3, r2
   34110:	ldr	r2, [fp, #-16]
   34114:	mov	r1, r3
   34118:	bl	11054 <memcmp@plt>
   3411c:	mov	r3, r0
   34120:	cmp	r3, #0
   34124:	beq	34130 <__assert_fail@plt+0x22ec0>
   34128:	mvn	r3, #0
   3412c:	b	34308 <__assert_fail@plt+0x23098>
   34130:	ldr	r3, [fp, #-16]
   34134:	cmp	r3, #0
   34138:	bne	341d8 <__assert_fail@plt+0x22f68>
   3413c:	ldr	r1, [fp, #8]
   34140:	ldr	r0, [fp, #12]
   34144:	bl	26e8c <__assert_fail@plt+0x15c1c>
   34148:	mov	r3, r0
   3414c:	strb	r3, [fp, #-49]	; 0xffffffcf
   34150:	ldrb	r3, [fp, #-49]	; 0xffffffcf
   34154:	eor	r3, r3, #1
   34158:	uxtb	r3, r3
   3415c:	cmp	r3, #0
   34160:	beq	3416c <__assert_fail@plt+0x22efc>
   34164:	mvn	r3, #1
   34168:	b	34308 <__assert_fail@plt+0x23098>
   3416c:	ldr	r3, [fp, #-20]	; 0xffffffec
   34170:	ldr	r1, [r3, #20]
   34174:	ldr	r2, [fp, #8]
   34178:	mov	r3, r2
   3417c:	lsl	r3, r3, #1
   34180:	add	r3, r3, r2
   34184:	lsl	r3, r3, #2
   34188:	add	r3, r1, r3
   3418c:	ldr	r3, [r3, #8]
   34190:	ldr	r3, [r3]
   34194:	str	r3, [fp, #-56]	; 0xffffffc8
   34198:	ldr	r3, [fp, #-64]	; 0xffffffc0
   3419c:	ldr	r2, [r3, #100]	; 0x64
   341a0:	ldr	r3, [fp, #4]
   341a4:	ldr	r3, [r3]
   341a8:	lsl	r3, r3, #2
   341ac:	add	r3, r2, r3
   341b0:	ldr	r3, [r3]
   341b4:	add	r3, r3, #4
   341b8:	ldr	r1, [fp, #-56]	; 0xffffffc8
   341bc:	mov	r0, r3
   341c0:	bl	2729c <__assert_fail@plt+0x1602c>
   341c4:	mov	r3, r0
   341c8:	cmp	r3, #0
   341cc:	beq	341d8 <__assert_fail@plt+0x22f68>
   341d0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   341d4:	b	34308 <__assert_fail@plt+0x23098>
   341d8:	ldr	r3, [fp, #-16]
   341dc:	cmp	r3, #0
   341e0:	bne	34218 <__assert_fail@plt+0x22fa8>
   341e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   341e8:	ldr	r2, [r3]
   341ec:	ldr	r3, [fp, #8]
   341f0:	lsl	r3, r3, #3
   341f4:	add	r1, r2, r3
   341f8:	ldr	r3, [fp, #4]
   341fc:	ldr	r3, [r3]
   34200:	mov	r2, r3
   34204:	ldr	r0, [fp, #-64]	; 0xffffffc0
   34208:	bl	3b450 <__assert_fail@plt+0x2a1e0>
   3420c:	mov	r3, r0
   34210:	cmp	r3, #0
   34214:	beq	34304 <__assert_fail@plt+0x23094>
   34218:	ldr	r3, [fp, #-20]	; 0xffffffec
   3421c:	ldr	r2, [r3, #12]
   34220:	ldr	r3, [fp, #8]
   34224:	lsl	r3, r3, #2
   34228:	add	r3, r2, r3
   3422c:	ldr	r3, [r3]
   34230:	str	r3, [fp, #-60]	; 0xffffffc4
   34234:	ldr	r3, [fp, #-16]
   34238:	cmp	r3, #0
   3423c:	bne	34250 <__assert_fail@plt+0x22fe0>
   34240:	ldr	r3, [fp, #4]
   34244:	ldr	r3, [r3]
   34248:	add	r3, r3, #1
   3424c:	b	34260 <__assert_fail@plt+0x22ff0>
   34250:	ldr	r3, [fp, #4]
   34254:	ldr	r2, [r3]
   34258:	ldr	r3, [fp, #-16]
   3425c:	add	r3, r2, r3
   34260:	ldr	r2, [fp, #4]
   34264:	str	r3, [r2]
   34268:	ldr	r3, [fp, #16]
   3426c:	cmp	r3, #0
   34270:	beq	342f0 <__assert_fail@plt+0x23080>
   34274:	ldr	r3, [fp, #4]
   34278:	ldr	r2, [r3]
   3427c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   34280:	ldr	r3, [r3, #92]	; 0x5c
   34284:	cmp	r2, r3
   34288:	bgt	342e8 <__assert_fail@plt+0x23078>
   3428c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   34290:	ldr	r2, [r3, #100]	; 0x64
   34294:	ldr	r3, [fp, #4]
   34298:	ldr	r3, [r3]
   3429c:	lsl	r3, r3, #2
   342a0:	add	r3, r2, r3
   342a4:	ldr	r3, [r3]
   342a8:	cmp	r3, #0
   342ac:	beq	342e8 <__assert_fail@plt+0x23078>
   342b0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   342b4:	ldr	r2, [r3, #100]	; 0x64
   342b8:	ldr	r3, [fp, #4]
   342bc:	ldr	r3, [r3]
   342c0:	lsl	r3, r3, #2
   342c4:	add	r3, r2, r3
   342c8:	ldr	r3, [r3]
   342cc:	add	r3, r3, #4
   342d0:	ldr	r1, [fp, #-60]	; 0xffffffc4
   342d4:	mov	r0, r3
   342d8:	bl	2729c <__assert_fail@plt+0x1602c>
   342dc:	mov	r3, r0
   342e0:	cmp	r3, #0
   342e4:	bne	342f0 <__assert_fail@plt+0x23080>
   342e8:	mvn	r3, #0
   342ec:	b	34308 <__assert_fail@plt+0x23098>
   342f0:	ldr	r3, [fp, #12]
   342f4:	mov	r2, #0
   342f8:	str	r2, [r3, #4]
   342fc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   34300:	b	34308 <__assert_fail@plt+0x23098>
   34304:	mvn	r3, #0
   34308:	mov	r0, r3
   3430c:	sub	sp, fp, #4
   34310:	pop	{fp, pc}
   34314:	push	{r4, fp, lr}
   34318:	add	fp, sp, #8
   3431c:	sub	sp, sp, #36	; 0x24
   34320:	str	r0, [fp, #-32]	; 0xffffffe0
   34324:	str	r1, [fp, #-36]	; 0xffffffdc
   34328:	str	r2, [fp, #-40]	; 0xffffffd8
   3432c:	str	r3, [fp, #-44]	; 0xffffffd4
   34330:	ldr	r3, [fp, #-32]	; 0xffffffe0
   34334:	ldr	r3, [r3]
   34338:	add	r1, r3, #1
   3433c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   34340:	str	r1, [r2]
   34344:	str	r3, [fp, #-16]
   34348:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3434c:	ldr	r2, [r3]
   34350:	ldr	r3, [fp, #-32]	; 0xffffffe0
   34354:	ldr	r3, [r3, #4]
   34358:	cmp	r2, r3
   3435c:	bne	343c0 <__assert_fail@plt+0x23150>
   34360:	ldr	r3, [fp, #-32]	; 0xffffffe0
   34364:	ldr	r0, [r3, #8]
   34368:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3436c:	ldr	r2, [r3, #4]
   34370:	mov	r3, r2
   34374:	lsl	r3, r3, #1
   34378:	add	r3, r3, r2
   3437c:	lsl	r3, r3, #4
   34380:	mov	r1, r3
   34384:	bl	3e040 <__assert_fail@plt+0x2cdd0>
   34388:	str	r0, [fp, #-20]	; 0xffffffec
   3438c:	ldr	r3, [fp, #-20]	; 0xffffffec
   34390:	cmp	r3, #0
   34394:	bne	343a0 <__assert_fail@plt+0x23130>
   34398:	mov	r3, #12
   3439c:	b	34530 <__assert_fail@plt+0x232c0>
   343a0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   343a4:	ldr	r3, [r3, #4]
   343a8:	lsl	r2, r3, #1
   343ac:	ldr	r3, [fp, #-32]	; 0xffffffe0
   343b0:	str	r2, [r3, #4]
   343b4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   343b8:	ldr	r2, [fp, #-20]	; 0xffffffec
   343bc:	str	r2, [r3, #8]
   343c0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   343c4:	ldr	r1, [r3, #8]
   343c8:	ldr	r2, [fp, #-16]
   343cc:	mov	r3, r2
   343d0:	lsl	r3, r3, #1
   343d4:	add	r3, r3, r2
   343d8:	lsl	r3, r3, #3
   343dc:	add	r3, r1, r3
   343e0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   343e4:	str	r2, [r3]
   343e8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   343ec:	ldr	r1, [r3, #8]
   343f0:	ldr	r2, [fp, #-16]
   343f4:	mov	r3, r2
   343f8:	lsl	r3, r3, #1
   343fc:	add	r3, r3, r2
   34400:	lsl	r3, r3, #3
   34404:	add	r3, r1, r3
   34408:	ldr	r2, [fp, #-40]	; 0xffffffd8
   3440c:	str	r2, [r3, #4]
   34410:	ldr	r3, [fp, #-32]	; 0xffffffe0
   34414:	ldr	r1, [r3, #8]
   34418:	ldr	r2, [fp, #-16]
   3441c:	mov	r3, r2
   34420:	lsl	r3, r3, #1
   34424:	add	r3, r3, r2
   34428:	lsl	r3, r3, #3
   3442c:	add	r4, r1, r3
   34430:	ldr	r3, [fp, #-44]	; 0xffffffd4
   34434:	lsl	r3, r3, #4
   34438:	mov	r0, r3
   3443c:	bl	3df98 <__assert_fail@plt+0x2cd28>
   34440:	mov	r3, r0
   34444:	str	r3, [r4, #8]
   34448:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3444c:	ldr	r1, [r3, #8]
   34450:	ldr	r2, [fp, #-16]
   34454:	mov	r3, r2
   34458:	lsl	r3, r3, #1
   3445c:	add	r3, r3, r2
   34460:	lsl	r3, r3, #3
   34464:	add	r3, r1, r3
   34468:	ldr	r3, [r3, #8]
   3446c:	cmp	r3, #0
   34470:	bne	3447c <__assert_fail@plt+0x2320c>
   34474:	mov	r3, #12
   34478:	b	34530 <__assert_fail@plt+0x232c0>
   3447c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   34480:	ldr	r1, [r3, #8]
   34484:	ldr	r2, [fp, #-16]
   34488:	mov	r3, r2
   3448c:	lsl	r3, r3, #1
   34490:	add	r3, r3, r2
   34494:	lsl	r3, r3, #3
   34498:	add	r3, r1, r3
   3449c:	ldr	r0, [r3, #8]
   344a0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   344a4:	lsl	r3, r3, #3
   344a8:	mov	r2, r3
   344ac:	ldr	r1, [fp, #4]
   344b0:	bl	11018 <memcpy@plt>
   344b4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   344b8:	ldr	r1, [r3, #8]
   344bc:	ldr	r2, [fp, #-16]
   344c0:	mov	r3, r2
   344c4:	lsl	r3, r3, #1
   344c8:	add	r3, r3, r2
   344cc:	lsl	r3, r3, #3
   344d0:	add	r3, r1, r3
   344d4:	ldr	r2, [r3, #8]
   344d8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   344dc:	lsl	r3, r3, #3
   344e0:	add	r0, r2, r3
   344e4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   344e8:	lsl	r3, r3, #3
   344ec:	mov	r2, r3
   344f0:	ldr	r1, [fp, #8]
   344f4:	bl	11018 <memcpy@plt>
   344f8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   344fc:	ldr	r1, [r3, #8]
   34500:	ldr	r2, [fp, #-16]
   34504:	mov	r3, r2
   34508:	lsl	r3, r3, #1
   3450c:	add	r3, r3, r2
   34510:	lsl	r3, r3, #3
   34514:	add	r3, r1, r3
   34518:	add	r3, r3, #12
   3451c:	ldr	r1, [fp, #12]
   34520:	mov	r0, r3
   34524:	bl	26130 <__assert_fail@plt+0x14ec0>
   34528:	str	r0, [fp, #-24]	; 0xffffffe8
   3452c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   34530:	mov	r0, r3
   34534:	sub	sp, fp, #8
   34538:	pop	{r4, fp, pc}
   3453c:	push	{fp, lr}
   34540:	add	fp, sp, #4
   34544:	sub	sp, sp, #24
   34548:	str	r0, [fp, #-16]
   3454c:	str	r1, [fp, #-20]	; 0xffffffec
   34550:	str	r2, [fp, #-24]	; 0xffffffe8
   34554:	str	r3, [fp, #-28]	; 0xffffffe4
   34558:	ldr	r3, [fp, #-16]
   3455c:	cmp	r3, #0
   34560:	beq	34574 <__assert_fail@plt+0x23304>
   34564:	ldr	r3, [fp, #-16]
   34568:	ldr	r3, [r3]
   3456c:	cmp	r3, #0
   34570:	bne	3457c <__assert_fail@plt+0x2330c>
   34574:	mvn	r3, #0
   34578:	b	34700 <__assert_fail@plt+0x23490>
   3457c:	ldr	r3, [fp, #-16]
   34580:	ldr	r3, [r3]
   34584:	sub	r2, r3, #1
   34588:	ldr	r3, [fp, #-16]
   3458c:	str	r2, [r3]
   34590:	ldr	r3, [fp, #-16]
   34594:	ldr	r3, [r3]
   34598:	str	r3, [fp, #-8]
   3459c:	ldr	r3, [fp, #-16]
   345a0:	ldr	r1, [r3, #8]
   345a4:	ldr	r2, [fp, #-8]
   345a8:	mov	r3, r2
   345ac:	lsl	r3, r3, #1
   345b0:	add	r3, r3, r2
   345b4:	lsl	r3, r3, #3
   345b8:	add	r3, r1, r3
   345bc:	ldr	r2, [r3]
   345c0:	ldr	r3, [fp, #-20]	; 0xffffffec
   345c4:	str	r2, [r3]
   345c8:	ldr	r3, [fp, #-16]
   345cc:	ldr	r1, [r3, #8]
   345d0:	ldr	r2, [fp, #-8]
   345d4:	mov	r3, r2
   345d8:	lsl	r3, r3, #1
   345dc:	add	r3, r3, r2
   345e0:	lsl	r3, r3, #3
   345e4:	add	r3, r1, r3
   345e8:	ldr	r1, [r3, #8]
   345ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   345f0:	lsl	r3, r3, #3
   345f4:	mov	r2, r3
   345f8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   345fc:	bl	11018 <memcpy@plt>
   34600:	ldr	r3, [fp, #-16]
   34604:	ldr	r1, [r3, #8]
   34608:	ldr	r2, [fp, #-8]
   3460c:	mov	r3, r2
   34610:	lsl	r3, r3, #1
   34614:	add	r3, r3, r2
   34618:	lsl	r3, r3, #3
   3461c:	add	r3, r1, r3
   34620:	ldr	r2, [r3, #8]
   34624:	ldr	r3, [fp, #-24]	; 0xffffffe8
   34628:	lsl	r3, r3, #3
   3462c:	add	r1, r2, r3
   34630:	ldr	r3, [fp, #-24]	; 0xffffffe8
   34634:	lsl	r3, r3, #3
   34638:	mov	r2, r3
   3463c:	ldr	r0, [fp, #4]
   34640:	bl	11018 <memcpy@plt>
   34644:	ldr	r3, [fp, #8]
   34648:	ldr	r3, [r3, #8]
   3464c:	mov	r0, r3
   34650:	bl	13630 <__assert_fail@plt+0x23c0>
   34654:	ldr	r3, [fp, #-16]
   34658:	ldr	r1, [r3, #8]
   3465c:	ldr	r2, [fp, #-8]
   34660:	mov	r3, r2
   34664:	lsl	r3, r3, #1
   34668:	add	r3, r3, r2
   3466c:	lsl	r3, r3, #3
   34670:	add	r3, r1, r3
   34674:	ldr	r3, [r3, #8]
   34678:	mov	r0, r3
   3467c:	bl	13630 <__assert_fail@plt+0x23c0>
   34680:	ldr	r3, [fp, #-16]
   34684:	ldr	r1, [r3, #8]
   34688:	ldr	r2, [fp, #-8]
   3468c:	mov	r3, r2
   34690:	lsl	r3, r3, #1
   34694:	add	r3, r3, r2
   34698:	lsl	r3, r3, #3
   3469c:	add	r3, r1, r3
   346a0:	ldr	r2, [fp, #8]
   346a4:	mov	ip, r2
   346a8:	add	r3, r3, #12
   346ac:	ldm	r3, {r0, r1, r2}
   346b0:	stm	ip, {r0, r1, r2}
   346b4:	ldr	r3, [fp, #-16]
   346b8:	ldr	r1, [r3, #8]
   346bc:	ldr	r2, [fp, #-8]
   346c0:	mov	r3, r2
   346c4:	lsl	r3, r3, #1
   346c8:	add	r3, r3, r2
   346cc:	lsl	r3, r3, #3
   346d0:	add	r3, r1, r3
   346d4:	ldr	r3, [r3, #4]
   346d8:	cmp	r3, #0
   346dc:	ldr	r3, [fp, #-16]
   346e0:	ldr	r1, [r3, #8]
   346e4:	ldr	r2, [fp, #-8]
   346e8:	mov	r3, r2
   346ec:	lsl	r3, r3, #1
   346f0:	add	r3, r3, r2
   346f4:	lsl	r3, r3, #3
   346f8:	add	r3, r1, r3
   346fc:	ldr	r3, [r3, #4]
   34700:	mov	r0, r3
   34704:	sub	sp, fp, #4
   34708:	pop	{fp, pc}
   3470c:	push	{fp}		; (str fp, [sp, #-4]!)
   34710:	add	fp, sp, #0
   34714:	sub	sp, sp, #12
   34718:	str	r0, [fp, #-8]
   3471c:	str	r1, [fp, #-12]
   34720:	nop			; (mov r0, r0)
   34724:	add	sp, fp, #0
   34728:	pop	{fp}		; (ldr fp, [sp], #4)
   3472c:	bx	lr
   34730:	push	{fp, lr}
   34734:	add	fp, sp, #4
   34738:	sub	sp, sp, #8
   3473c:	str	r0, [fp, #-8]
   34740:	ldr	r3, [fp, #-8]
   34744:	ldr	r2, [r3, #8]
   34748:	ldr	r3, [fp, #-8]
   3474c:	add	r3, r3, #12
   34750:	cmp	r2, r3
   34754:	beq	34768 <__assert_fail@plt+0x234f8>
   34758:	ldr	r3, [fp, #-8]
   3475c:	ldr	r3, [r3, #8]
   34760:	mov	r0, r3
   34764:	bl	13630 <__assert_fail@plt+0x23c0>
   34768:	nop			; (mov r0, r0)
   3476c:	sub	sp, fp, #4
   34770:	pop	{fp, pc}
   34774:	push	{fp}		; (str fp, [sp, #-4]!)
   34778:	add	fp, sp, #0
   3477c:	sub	sp, sp, #12
   34780:	str	r0, [fp, #-8]
   34784:	ldr	r3, [fp, #-8]
   34788:	mov	r2, #0
   3478c:	str	r2, [r3]
   34790:	ldr	r3, [fp, #-8]
   34794:	mov	r2, #16
   34798:	str	r2, [r3, #4]
   3479c:	ldr	r3, [fp, #-8]
   347a0:	add	r2, r3, #12
   347a4:	ldr	r3, [fp, #-8]
   347a8:	str	r2, [r3, #8]
   347ac:	nop			; (mov r0, r0)
   347b0:	add	sp, fp, #0
   347b4:	pop	{fp}		; (ldr fp, [sp], #4)
   347b8:	bx	lr
   347bc:	push	{fp, lr}
   347c0:	add	fp, sp, #4
   347c4:	sub	sp, sp, #8
   347c8:	str	r0, [fp, #-8]
   347cc:	ldr	r3, [fp, #-8]
   347d0:	ldr	r2, [r3, #8]
   347d4:	ldr	r3, [fp, #-8]
   347d8:	ldr	r3, [r3]
   347dc:	mov	r1, r3
   347e0:	mov	r0, r2
   347e4:	bl	3470c <__assert_fail@plt+0x2349c>
   347e8:	ldr	r0, [fp, #-8]
   347ec:	bl	34730 <__assert_fail@plt+0x234c0>
   347f0:	ldr	r0, [fp, #-8]
   347f4:	bl	34774 <__assert_fail@plt+0x23504>
   347f8:	nop			; (mov r0, r0)
   347fc:	sub	sp, fp, #4
   34800:	pop	{fp, pc}
   34804:	push	{fp, lr}
   34808:	add	fp, sp, #4
   3480c:	sub	sp, sp, #8
   34810:	str	r0, [fp, #-8]
   34814:	ldr	r3, [fp, #-8]
   34818:	ldr	r2, [r3, #8]
   3481c:	ldr	r3, [fp, #-8]
   34820:	ldr	r3, [r3]
   34824:	mov	r1, r3
   34828:	mov	r0, r2
   3482c:	bl	3470c <__assert_fail@plt+0x2349c>
   34830:	ldr	r0, [fp, #-8]
   34834:	bl	34730 <__assert_fail@plt+0x234c0>
   34838:	ldr	r3, [fp, #-8]
   3483c:	add	r2, r3, #12
   34840:	ldr	r3, [fp, #-8]
   34844:	str	r2, [r3, #8]
   34848:	ldr	r3, [fp, #-8]
   3484c:	mov	r2, #0
   34850:	str	r2, [r3]
   34854:	bl	22fa8 <__assert_fail@plt+0x11d38>
   34858:	mov	r2, r0
   3485c:	ldr	r3, [fp, #-8]
   34860:	str	r2, [r3, #4]
   34864:	nop			; (mov r0, r0)
   34868:	sub	sp, fp, #4
   3486c:	pop	{fp, pc}
   34870:	push	{fp}		; (str fp, [sp, #-4]!)
   34874:	add	fp, sp, #0
   34878:	sub	sp, sp, #12
   3487c:	str	r0, [fp, #-8]
   34880:	ldr	r3, [fp, #-8]
   34884:	ldr	r3, [r3, #8]
   34888:	mov	r0, r3
   3488c:	add	sp, fp, #0
   34890:	pop	{fp}		; (ldr fp, [sp], #4)
   34894:	bx	lr
   34898:	push	{fp, lr}
   3489c:	add	fp, sp, #4
   348a0:	sub	sp, sp, #16
   348a4:	str	r0, [fp, #-8]
   348a8:	sub	r3, fp, #16
   348ac:	stm	r3, {r1, r2}
   348b0:	ldr	r0, [fp, #-8]
   348b4:	ldr	r3, [fp, #-8]
   348b8:	add	r3, r3, #12
   348bc:	mov	r2, #8
   348c0:	mov	r1, r3
   348c4:	bl	3e280 <__assert_fail@plt+0x2d010>
   348c8:	mov	r3, r0
   348cc:	eor	r3, r3, #1
   348d0:	uxtb	r3, r3
   348d4:	cmp	r3, #0
   348d8:	beq	348e8 <__assert_fail@plt+0x23678>
   348dc:	ldr	r0, [fp, #-8]
   348e0:	bl	34804 <__assert_fail@plt+0x23594>
   348e4:	b	3491c <__assert_fail@plt+0x236ac>
   348e8:	ldr	r3, [fp, #-8]
   348ec:	ldr	r2, [r3, #8]
   348f0:	ldr	r3, [fp, #-8]
   348f4:	ldr	r3, [r3]
   348f8:	add	r0, r3, #1
   348fc:	ldr	r1, [fp, #-8]
   34900:	str	r0, [r1]
   34904:	lsl	r3, r3, #3
   34908:	add	r3, r2, r3
   3490c:	mov	r2, r3
   34910:	sub	r3, fp, #16
   34914:	ldm	r3, {r0, r1}
   34918:	stm	r2, {r0, r1}
   3491c:	sub	sp, fp, #4
   34920:	pop	{fp, pc}
   34924:	push	{fp}		; (str fp, [sp, #-4]!)
   34928:	add	fp, sp, #0
   3492c:	sub	sp, sp, #20
   34930:	str	r0, [fp, #-16]
   34934:	ldr	r3, [fp, #-16]
   34938:	ldr	r2, [r3, #8]
   3493c:	ldr	r3, [fp, #-16]
   34940:	ldr	r3, [r3]
   34944:	lsl	r3, r3, #3
   34948:	add	r3, r2, r3
   3494c:	str	r3, [fp, #-8]
   34950:	ldr	r3, [fp, #-16]
   34954:	ldr	r3, [r3]
   34958:	add	r2, r3, #1
   3495c:	ldr	r3, [fp, #-16]
   34960:	str	r2, [r3]
   34964:	ldr	r3, [fp, #-8]
   34968:	mov	r0, r3
   3496c:	add	sp, fp, #0
   34970:	pop	{fp}		; (ldr fp, [sp], #4)
   34974:	bx	lr
   34978:	push	{fp, lr}
   3497c:	add	fp, sp, #4
   34980:	sub	sp, sp, #8
   34984:	str	r0, [fp, #-8]
   34988:	ldr	r0, [fp, #-8]
   3498c:	ldr	r3, [fp, #-8]
   34990:	add	r3, r3, #12
   34994:	mov	r2, #8
   34998:	mov	r1, r3
   3499c:	bl	3e280 <__assert_fail@plt+0x2d010>
   349a0:	mov	r3, r0
   349a4:	eor	r3, r3, #1
   349a8:	uxtb	r3, r3
   349ac:	cmp	r3, #0
   349b0:	beq	349c4 <__assert_fail@plt+0x23754>
   349b4:	ldr	r0, [fp, #-8]
   349b8:	bl	34804 <__assert_fail@plt+0x23594>
   349bc:	mov	r3, #0
   349c0:	b	349d0 <__assert_fail@plt+0x23760>
   349c4:	ldr	r0, [fp, #-8]
   349c8:	bl	34924 <__assert_fail@plt+0x236b4>
   349cc:	mov	r3, r0
   349d0:	mov	r0, r3
   349d4:	sub	sp, fp, #4
   349d8:	pop	{fp, pc}
   349dc:	push	{fp, lr}
   349e0:	add	fp, sp, #4
   349e4:	sub	sp, sp, #16
   349e8:	str	r0, [fp, #-16]
   349ec:	str	r1, [fp, #-20]	; 0xffffffec
   349f0:	ldr	r3, [fp, #-16]
   349f4:	ldr	r2, [r3]
   349f8:	ldr	r3, [fp, #-20]	; 0xffffffec
   349fc:	cmp	r2, r3
   34a00:	bcs	34a48 <__assert_fail@plt+0x237d8>
   34a04:	ldr	r0, [fp, #-16]
   34a08:	ldr	r3, [fp, #-16]
   34a0c:	add	r2, r3, #12
   34a10:	mov	r3, #8
   34a14:	ldr	r1, [fp, #-20]	; 0xffffffec
   34a18:	bl	3e5f0 <__assert_fail@plt+0x2d380>
   34a1c:	mov	r3, r0
   34a20:	strb	r3, [fp, #-5]
   34a24:	ldrb	r3, [fp, #-5]
   34a28:	eor	r3, r3, #1
   34a2c:	uxtb	r3, r3
   34a30:	cmp	r3, #0
   34a34:	beq	34a40 <__assert_fail@plt+0x237d0>
   34a38:	ldr	r0, [fp, #-16]
   34a3c:	bl	34804 <__assert_fail@plt+0x23594>
   34a40:	ldrb	r3, [fp, #-5]
   34a44:	b	34a84 <__assert_fail@plt+0x23814>
   34a48:	ldr	r3, [fp, #-16]
   34a4c:	ldr	r2, [r3, #8]
   34a50:	ldr	r3, [fp, #-20]	; 0xffffffec
   34a54:	lsl	r3, r3, #3
   34a58:	add	r0, r2, r3
   34a5c:	ldr	r3, [fp, #-16]
   34a60:	ldr	r2, [r3]
   34a64:	ldr	r3, [fp, #-20]	; 0xffffffec
   34a68:	sub	r3, r2, r3
   34a6c:	mov	r1, r3
   34a70:	bl	3470c <__assert_fail@plt+0x2349c>
   34a74:	ldr	r3, [fp, #-16]
   34a78:	ldr	r2, [fp, #-20]	; 0xffffffec
   34a7c:	str	r2, [r3]
   34a80:	mov	r3, #1
   34a84:	mov	r0, r3
   34a88:	sub	sp, fp, #4
   34a8c:	pop	{fp, pc}
   34a90:	push	{fp}		; (str fp, [sp, #-4]!)
   34a94:	add	fp, sp, #0
   34a98:	sub	sp, sp, #20
   34a9c:	str	r0, [fp, #-16]
   34aa0:	ldr	r3, [fp, #-16]
   34aa4:	ldr	r3, [r3]
   34aa8:	cmp	r3, #0
   34aac:	beq	34acc <__assert_fail@plt+0x2385c>
   34ab0:	ldr	r3, [fp, #-16]
   34ab4:	ldr	r3, [r3]
   34ab8:	sub	r3, r3, #1
   34abc:	str	r3, [fp, #-8]
   34ac0:	ldr	r3, [fp, #-16]
   34ac4:	ldr	r2, [fp, #-8]
   34ac8:	str	r2, [r3]
   34acc:	nop			; (mov r0, r0)
   34ad0:	add	sp, fp, #0
   34ad4:	pop	{fp}		; (ldr fp, [sp], #4)
   34ad8:	bx	lr
   34adc:	push	{fp, lr}
   34ae0:	add	fp, sp, #4
   34ae4:	sub	sp, sp, #8
   34ae8:	str	r0, [fp, #-8]
   34aec:	ldr	r3, [fp, #-8]
   34af0:	ldr	r2, [r3, #8]
   34af4:	ldr	r3, [fp, #-8]
   34af8:	ldr	r3, [r3]
   34afc:	mov	r1, r3
   34b00:	mov	r0, r2
   34b04:	bl	3470c <__assert_fail@plt+0x2349c>
   34b08:	ldr	r3, [fp, #-8]
   34b0c:	mov	r2, #0
   34b10:	str	r2, [r3]
   34b14:	nop			; (mov r0, r0)
   34b18:	sub	sp, fp, #4
   34b1c:	pop	{fp, pc}
   34b20:	push	{fp, lr}
   34b24:	add	fp, sp, #4
   34b28:	sub	sp, sp, #16
   34b2c:	str	r0, [fp, #-16]
   34b30:	str	r1, [fp, #-20]	; 0xffffffec
   34b34:	ldr	r0, [fp, #-16]
   34b38:	ldr	r3, [fp, #-16]
   34b3c:	add	r1, r3, #12
   34b40:	sub	r3, fp, #12
   34b44:	mov	r2, #8
   34b48:	bl	3e4b4 <__assert_fail@plt+0x2d244>
   34b4c:	mov	r3, r0
   34b50:	cmp	r3, #0
   34b54:	beq	34b80 <__assert_fail@plt+0x23910>
   34b58:	ldr	r0, [fp, #-16]
   34b5c:	bl	34774 <__assert_fail@plt+0x23504>
   34b60:	ldr	r3, [fp, #-20]	; 0xffffffec
   34b64:	cmp	r3, #0
   34b68:	beq	34b78 <__assert_fail@plt+0x23908>
   34b6c:	ldr	r2, [fp, #-8]
   34b70:	ldr	r3, [fp, #-20]	; 0xffffffec
   34b74:	str	r2, [r3]
   34b78:	ldr	r3, [fp, #-12]
   34b7c:	b	34b9c <__assert_fail@plt+0x2392c>
   34b80:	ldr	r0, [fp, #-16]
   34b84:	bl	347bc <__assert_fail@plt+0x2354c>
   34b88:	bl	11198 <__errno_location@plt>
   34b8c:	mov	r2, r0
   34b90:	mov	r3, #12
   34b94:	str	r3, [r2]
   34b98:	mov	r3, #0
   34b9c:	mov	r0, r3
   34ba0:	sub	sp, fp, #4
   34ba4:	pop	{fp, pc}
   34ba8:	push	{fp, lr}
   34bac:	add	fp, sp, #4
   34bb0:	sub	sp, sp, #224	; 0xe0
   34bb4:	str	r0, [fp, #-200]	; 0xffffff38
   34bb8:	str	r1, [fp, #-204]	; 0xffffff34
   34bbc:	str	r2, [fp, #-208]	; 0xffffff30
   34bc0:	str	r3, [fp, #-212]	; 0xffffff2c
   34bc4:	ldr	r3, [fp, #-200]	; 0xffffff38
   34bc8:	ldr	r3, [r3]
   34bcc:	str	r3, [fp, #-20]	; 0xffffffec
   34bd0:	mov	r3, #0
   34bd4:	str	r3, [fp, #-52]	; 0xffffffcc
   34bd8:	mov	r3, #2
   34bdc:	str	r3, [fp, #-48]	; 0xffffffd0
   34be0:	mov	r3, #0
   34be4:	str	r3, [fp, #-44]	; 0xffffffd4
   34be8:	sub	r3, fp, #192	; 0xc0
   34bec:	mov	r0, r3
   34bf0:	bl	34774 <__assert_fail@plt+0x23504>
   34bf4:	ldr	r3, [fp, #-208]	; 0xffffff30
   34bf8:	cmp	r3, #1
   34bfc:	ldr	r3, [fp, #-204]	; 0xffffff34
   34c00:	ldr	r3, [r3, #100]	; 0x64
   34c04:	cmp	r3, #0
   34c08:	ldrb	r3, [fp, #4]
   34c0c:	cmp	r3, #0
   34c10:	beq	34c68 <__assert_fail@plt+0x239f8>
   34c14:	sub	r3, fp, #52	; 0x34
   34c18:	str	r3, [fp, #-12]
   34c1c:	ldr	r3, [fp, #-12]
   34c20:	ldr	r3, [r3, #4]
   34c24:	mov	r2, r3
   34c28:	mov	r3, r2
   34c2c:	lsl	r3, r3, #1
   34c30:	add	r3, r3, r2
   34c34:	lsl	r3, r3, #3
   34c38:	mov	r0, r3
   34c3c:	bl	3df98 <__assert_fail@plt+0x2cd28>
   34c40:	mov	r3, r0
   34c44:	mov	r2, r3
   34c48:	ldr	r3, [fp, #-12]
   34c4c:	str	r2, [r3, #8]
   34c50:	ldr	r3, [fp, #-12]
   34c54:	ldr	r3, [r3, #8]
   34c58:	cmp	r3, #0
   34c5c:	bne	34c70 <__assert_fail@plt+0x23a00>
   34c60:	mov	r3, #12
   34c64:	b	34f74 <__assert_fail@plt+0x23d04>
   34c68:	mov	r3, #0
   34c6c:	str	r3, [fp, #-12]
   34c70:	ldr	r3, [fp, #-20]	; 0xffffffec
   34c74:	ldr	r3, [r3, #72]	; 0x48
   34c78:	str	r3, [fp, #-8]
   34c7c:	sub	r3, fp, #40	; 0x28
   34c80:	mov	r2, #12
   34c84:	mov	r1, #0
   34c88:	mov	r0, r3
   34c8c:	bl	111bc <memset@plt>
   34c90:	sub	r3, fp, #192	; 0xc0
   34c94:	ldr	r1, [fp, #-208]	; 0xffffff30
   34c98:	mov	r0, r3
   34c9c:	bl	349dc <__assert_fail@plt+0x2376c>
   34ca0:	mov	r3, r0
   34ca4:	eor	r3, r3, #1
   34ca8:	uxtb	r3, r3
   34cac:	cmp	r3, #0
   34cb0:	beq	34cd0 <__assert_fail@plt+0x23a60>
   34cb4:	sub	r3, fp, #192	; 0xc0
   34cb8:	mov	r0, r3
   34cbc:	bl	347bc <__assert_fail@plt+0x2354c>
   34cc0:	ldr	r0, [fp, #-12]
   34cc4:	bl	34f80 <__assert_fail@plt+0x23d10>
   34cc8:	mov	r3, #12
   34ccc:	b	34f74 <__assert_fail@plt+0x23d04>
   34cd0:	sub	r3, fp, #192	; 0xc0
   34cd4:	mov	r0, r3
   34cd8:	bl	34870 <__assert_fail@plt+0x23600>
   34cdc:	str	r0, [fp, #-24]	; 0xffffffe8
   34ce0:	ldr	r3, [fp, #-208]	; 0xffffff30
   34ce4:	lsl	r3, r3, #3
   34ce8:	mov	r2, r3
   34cec:	ldr	r1, [fp, #-212]	; 0xffffff2c
   34cf0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   34cf4:	bl	11018 <memcpy@plt>
   34cf8:	ldr	r3, [fp, #-212]	; 0xffffff2c
   34cfc:	ldr	r3, [r3]
   34d00:	str	r3, [fp, #-28]	; 0xffffffe4
   34d04:	b	34f3c <__assert_fail@plt+0x23ccc>
   34d08:	ldr	r3, [fp, #-28]	; 0xffffffe4
   34d0c:	ldr	r2, [fp, #-208]	; 0xffffff30
   34d10:	str	r2, [sp, #4]
   34d14:	str	r3, [sp]
   34d18:	ldr	r3, [fp, #-8]
   34d1c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   34d20:	ldr	r1, [fp, #-212]	; 0xffffff2c
   34d24:	ldr	r0, [fp, #-20]	; 0xffffffec
   34d28:	bl	35040 <__assert_fail@plt+0x23dd0>
   34d2c:	ldr	r3, [fp, #-212]	; 0xffffff2c
   34d30:	ldr	r2, [r3, #4]
   34d34:	ldr	r3, [fp, #-28]	; 0xffffffe4
   34d38:	cmp	r2, r3
   34d3c:	bne	34d54 <__assert_fail@plt+0x23ae4>
   34d40:	ldr	r3, [fp, #-204]	; 0xffffff34
   34d44:	ldr	r2, [r3, #96]	; 0x60
   34d48:	ldr	r3, [fp, #-8]
   34d4c:	cmp	r2, r3
   34d50:	beq	34d7c <__assert_fail@plt+0x23b0c>
   34d54:	ldr	r3, [fp, #-12]
   34d58:	cmp	r3, #0
   34d5c:	beq	34e50 <__assert_fail@plt+0x23be0>
   34d60:	sub	r3, fp, #40	; 0x28
   34d64:	ldr	r1, [fp, #-8]
   34d68:	mov	r0, r3
   34d6c:	bl	2729c <__assert_fail@plt+0x1602c>
   34d70:	mov	r3, r0
   34d74:	cmp	r3, #0
   34d78:	beq	34e50 <__assert_fail@plt+0x23be0>
   34d7c:	mvn	r3, #0
   34d80:	str	r3, [fp, #-8]
   34d84:	ldr	r3, [fp, #-12]
   34d88:	cmp	r3, #0
   34d8c:	beq	34e1c <__assert_fail@plt+0x23bac>
   34d90:	mov	r3, #0
   34d94:	str	r3, [fp, #-16]
   34d98:	b	34e0c <__assert_fail@plt+0x23b9c>
   34d9c:	ldr	r3, [fp, #-16]
   34da0:	lsl	r3, r3, #3
   34da4:	ldr	r2, [fp, #-212]	; 0xffffff2c
   34da8:	add	r3, r2, r3
   34dac:	ldr	r3, [r3]
   34db0:	cmp	r3, #0
   34db4:	blt	34e00 <__assert_fail@plt+0x23b90>
   34db8:	ldr	r3, [fp, #-16]
   34dbc:	lsl	r3, r3, #3
   34dc0:	ldr	r2, [fp, #-212]	; 0xffffff2c
   34dc4:	add	r3, r2, r3
   34dc8:	ldr	r3, [r3, #4]
   34dcc:	cmn	r3, #1
   34dd0:	bne	34e00 <__assert_fail@plt+0x23b90>
   34dd4:	ldr	r2, [fp, #-208]	; 0xffffff30
   34dd8:	sub	r1, fp, #28
   34ddc:	sub	r3, fp, #40	; 0x28
   34de0:	str	r3, [sp, #4]
   34de4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   34de8:	str	r3, [sp]
   34dec:	ldr	r3, [fp, #-212]	; 0xffffff2c
   34df0:	ldr	r0, [fp, #-12]
   34df4:	bl	3453c <__assert_fail@plt+0x232cc>
   34df8:	str	r0, [fp, #-8]
   34dfc:	b	34e1c <__assert_fail@plt+0x23bac>
   34e00:	ldr	r3, [fp, #-16]
   34e04:	add	r3, r3, #1
   34e08:	str	r3, [fp, #-16]
   34e0c:	ldr	r2, [fp, #-16]
   34e10:	ldr	r3, [fp, #-208]	; 0xffffff30
   34e14:	cmp	r2, r3
   34e18:	bcc	34d9c <__assert_fail@plt+0x23b2c>
   34e1c:	ldr	r3, [fp, #-8]
   34e20:	cmp	r3, #0
   34e24:	bge	34e50 <__assert_fail@plt+0x23be0>
   34e28:	ldr	r3, [fp, #-32]	; 0xffffffe0
   34e2c:	mov	r0, r3
   34e30:	bl	13630 <__assert_fail@plt+0x23c0>
   34e34:	sub	r3, fp, #192	; 0xc0
   34e38:	mov	r0, r3
   34e3c:	bl	347bc <__assert_fail@plt+0x2354c>
   34e40:	ldr	r0, [fp, #-12]
   34e44:	bl	34f80 <__assert_fail@plt+0x23d10>
   34e48:	mov	r3, r0
   34e4c:	b	34f74 <__assert_fail@plt+0x23d04>
   34e50:	ldr	r1, [fp, #-208]	; 0xffffff30
   34e54:	ldr	r3, [fp, #-12]
   34e58:	str	r3, [sp, #12]
   34e5c:	sub	r3, fp, #40	; 0x28
   34e60:	str	r3, [sp, #8]
   34e64:	ldr	r3, [fp, #-8]
   34e68:	str	r3, [sp, #4]
   34e6c:	sub	r3, fp, #28
   34e70:	str	r3, [sp]
   34e74:	ldr	r3, [fp, #-24]	; 0xffffffe8
   34e78:	ldr	r2, [fp, #-212]	; 0xffffff2c
   34e7c:	ldr	r0, [fp, #-204]	; 0xffffff34
   34e80:	bl	33d90 <__assert_fail@plt+0x22b20>
   34e84:	str	r0, [fp, #-8]
   34e88:	ldr	r3, [fp, #-8]
   34e8c:	lsr	r3, r3, #31
   34e90:	uxtb	r3, r3
   34e94:	cmp	r3, #0
   34e98:	beq	34f3c <__assert_fail@plt+0x23ccc>
   34e9c:	ldr	r3, [fp, #-8]
   34ea0:	cmn	r3, #2
   34ea4:	moveq	r3, #1
   34ea8:	movne	r3, #0
   34eac:	uxtb	r3, r3
   34eb0:	cmp	r3, #0
   34eb4:	beq	34ee0 <__assert_fail@plt+0x23c70>
   34eb8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   34ebc:	mov	r0, r3
   34ec0:	bl	13630 <__assert_fail@plt+0x23c0>
   34ec4:	sub	r3, fp, #192	; 0xc0
   34ec8:	mov	r0, r3
   34ecc:	bl	347bc <__assert_fail@plt+0x2354c>
   34ed0:	ldr	r0, [fp, #-12]
   34ed4:	bl	34f80 <__assert_fail@plt+0x23d10>
   34ed8:	mov	r3, #12
   34edc:	b	34f74 <__assert_fail@plt+0x23d04>
   34ee0:	ldr	r2, [fp, #-208]	; 0xffffff30
   34ee4:	sub	r1, fp, #28
   34ee8:	sub	r3, fp, #40	; 0x28
   34eec:	str	r3, [sp, #4]
   34ef0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   34ef4:	str	r3, [sp]
   34ef8:	ldr	r3, [fp, #-212]	; 0xffffff2c
   34efc:	ldr	r0, [fp, #-12]
   34f00:	bl	3453c <__assert_fail@plt+0x232cc>
   34f04:	str	r0, [fp, #-8]
   34f08:	ldr	r3, [fp, #-8]
   34f0c:	cmp	r3, #0
   34f10:	bge	34f3c <__assert_fail@plt+0x23ccc>
   34f14:	ldr	r3, [fp, #-32]	; 0xffffffe0
   34f18:	mov	r0, r3
   34f1c:	bl	13630 <__assert_fail@plt+0x23c0>
   34f20:	sub	r3, fp, #192	; 0xc0
   34f24:	mov	r0, r3
   34f28:	bl	347bc <__assert_fail@plt+0x2354c>
   34f2c:	ldr	r0, [fp, #-12]
   34f30:	bl	34f80 <__assert_fail@plt+0x23d10>
   34f34:	mov	r3, #1
   34f38:	b	34f74 <__assert_fail@plt+0x23d04>
   34f3c:	ldr	r3, [fp, #-212]	; 0xffffff2c
   34f40:	ldr	r2, [r3, #4]
   34f44:	ldr	r3, [fp, #-28]	; 0xffffffe4
   34f48:	cmp	r2, r3
   34f4c:	bge	34d08 <__assert_fail@plt+0x23a98>
   34f50:	ldr	r3, [fp, #-32]	; 0xffffffe0
   34f54:	mov	r0, r3
   34f58:	bl	13630 <__assert_fail@plt+0x23c0>
   34f5c:	sub	r3, fp, #192	; 0xc0
   34f60:	mov	r0, r3
   34f64:	bl	347bc <__assert_fail@plt+0x2354c>
   34f68:	ldr	r0, [fp, #-12]
   34f6c:	bl	34f80 <__assert_fail@plt+0x23d10>
   34f70:	mov	r3, r0
   34f74:	mov	r0, r3
   34f78:	sub	sp, fp, #4
   34f7c:	pop	{fp, pc}
   34f80:	push	{fp, lr}
   34f84:	add	fp, sp, #4
   34f88:	sub	sp, sp, #16
   34f8c:	str	r0, [fp, #-16]
   34f90:	ldr	r3, [fp, #-16]
   34f94:	cmp	r3, #0
   34f98:	beq	35030 <__assert_fail@plt+0x23dc0>
   34f9c:	mov	r3, #0
   34fa0:	str	r3, [fp, #-8]
   34fa4:	b	3500c <__assert_fail@plt+0x23d9c>
   34fa8:	ldr	r3, [fp, #-16]
   34fac:	ldr	r1, [r3, #8]
   34fb0:	ldr	r2, [fp, #-8]
   34fb4:	mov	r3, r2
   34fb8:	lsl	r3, r3, #1
   34fbc:	add	r3, r3, r2
   34fc0:	lsl	r3, r3, #3
   34fc4:	add	r3, r1, r3
   34fc8:	ldr	r3, [r3, #20]
   34fcc:	mov	r0, r3
   34fd0:	bl	13630 <__assert_fail@plt+0x23c0>
   34fd4:	ldr	r3, [fp, #-16]
   34fd8:	ldr	r1, [r3, #8]
   34fdc:	ldr	r2, [fp, #-8]
   34fe0:	mov	r3, r2
   34fe4:	lsl	r3, r3, #1
   34fe8:	add	r3, r3, r2
   34fec:	lsl	r3, r3, #3
   34ff0:	add	r3, r1, r3
   34ff4:	ldr	r3, [r3, #8]
   34ff8:	mov	r0, r3
   34ffc:	bl	13630 <__assert_fail@plt+0x23c0>
   35000:	ldr	r3, [fp, #-8]
   35004:	add	r3, r3, #1
   35008:	str	r3, [fp, #-8]
   3500c:	ldr	r3, [fp, #-16]
   35010:	ldr	r2, [r3]
   35014:	ldr	r3, [fp, #-8]
   35018:	cmp	r2, r3
   3501c:	bgt	34fa8 <__assert_fail@plt+0x23d38>
   35020:	ldr	r3, [fp, #-16]
   35024:	ldr	r3, [r3, #8]
   35028:	mov	r0, r3
   3502c:	bl	13630 <__assert_fail@plt+0x23c0>
   35030:	mov	r3, #0
   35034:	mov	r0, r3
   35038:	sub	sp, fp, #4
   3503c:	pop	{fp, pc}
   35040:	push	{fp, lr}
   35044:	add	fp, sp, #4
   35048:	sub	sp, sp, #32
   3504c:	str	r0, [fp, #-24]	; 0xffffffe8
   35050:	str	r1, [fp, #-28]	; 0xffffffe4
   35054:	str	r2, [fp, #-32]	; 0xffffffe0
   35058:	str	r3, [fp, #-36]	; 0xffffffdc
   3505c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   35060:	ldr	r2, [r3]
   35064:	ldr	r3, [fp, #-36]	; 0xffffffdc
   35068:	lsl	r3, r3, #3
   3506c:	add	r3, r2, r3
   35070:	ldrb	r3, [r3, #4]
   35074:	str	r3, [fp, #-8]
   35078:	ldr	r3, [fp, #-8]
   3507c:	cmp	r3, #8
   35080:	bne	350e8 <__assert_fail@plt+0x23e78>
   35084:	ldr	r3, [fp, #-24]	; 0xffffffe8
   35088:	ldr	r2, [r3]
   3508c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   35090:	lsl	r3, r3, #3
   35094:	add	r3, r2, r3
   35098:	ldr	r3, [r3]
   3509c:	add	r3, r3, #1
   350a0:	str	r3, [fp, #-12]
   350a4:	ldr	r2, [fp, #-12]
   350a8:	ldr	r3, [fp, #8]
   350ac:	cmp	r2, r3
   350b0:	bge	351f0 <__assert_fail@plt+0x23f80>
   350b4:	ldr	r3, [fp, #-12]
   350b8:	lsl	r3, r3, #3
   350bc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   350c0:	add	r3, r2, r3
   350c4:	ldr	r2, [fp, #4]
   350c8:	str	r2, [r3]
   350cc:	ldr	r3, [fp, #-12]
   350d0:	lsl	r3, r3, #3
   350d4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   350d8:	add	r3, r2, r3
   350dc:	mvn	r2, #0
   350e0:	str	r2, [r3, #4]
   350e4:	b	351f0 <__assert_fail@plt+0x23f80>
   350e8:	ldr	r3, [fp, #-8]
   350ec:	cmp	r3, #9
   350f0:	bne	351f0 <__assert_fail@plt+0x23f80>
   350f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   350f8:	ldr	r2, [r3]
   350fc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   35100:	lsl	r3, r3, #3
   35104:	add	r3, r2, r3
   35108:	ldr	r3, [r3]
   3510c:	add	r3, r3, #1
   35110:	str	r3, [fp, #-16]
   35114:	ldr	r2, [fp, #-16]
   35118:	ldr	r3, [fp, #8]
   3511c:	cmp	r2, r3
   35120:	bge	351f0 <__assert_fail@plt+0x23f80>
   35124:	ldr	r3, [fp, #-16]
   35128:	lsl	r3, r3, #3
   3512c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   35130:	add	r3, r2, r3
   35134:	ldr	r2, [r3]
   35138:	ldr	r3, [fp, #4]
   3513c:	cmp	r2, r3
   35140:	bge	35178 <__assert_fail@plt+0x23f08>
   35144:	ldr	r3, [fp, #-16]
   35148:	lsl	r3, r3, #3
   3514c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   35150:	add	r3, r2, r3
   35154:	ldr	r2, [fp, #4]
   35158:	str	r2, [r3, #4]
   3515c:	ldr	r3, [fp, #8]
   35160:	lsl	r3, r3, #3
   35164:	mov	r2, r3
   35168:	ldr	r1, [fp, #-28]	; 0xffffffe4
   3516c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   35170:	bl	11018 <memcpy@plt>
   35174:	b	351f0 <__assert_fail@plt+0x23f80>
   35178:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3517c:	ldr	r2, [r3]
   35180:	ldr	r3, [fp, #-36]	; 0xffffffdc
   35184:	lsl	r3, r3, #3
   35188:	add	r3, r2, r3
   3518c:	ldrb	r3, [r3, #6]
   35190:	and	r3, r3, #8
   35194:	uxtb	r3, r3
   35198:	cmp	r3, #0
   3519c:	beq	351d8 <__assert_fail@plt+0x23f68>
   351a0:	ldr	r3, [fp, #-16]
   351a4:	lsl	r3, r3, #3
   351a8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   351ac:	add	r3, r2, r3
   351b0:	ldr	r3, [r3]
   351b4:	cmn	r3, #1
   351b8:	beq	351d8 <__assert_fail@plt+0x23f68>
   351bc:	ldr	r3, [fp, #8]
   351c0:	lsl	r3, r3, #3
   351c4:	mov	r2, r3
   351c8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   351cc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   351d0:	bl	11018 <memcpy@plt>
   351d4:	b	351f0 <__assert_fail@plt+0x23f80>
   351d8:	ldr	r3, [fp, #-16]
   351dc:	lsl	r3, r3, #3
   351e0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   351e4:	add	r3, r2, r3
   351e8:	ldr	r2, [fp, #4]
   351ec:	str	r2, [r3, #4]
   351f0:	nop			; (mov r0, r0)
   351f4:	sub	sp, fp, #4
   351f8:	pop	{fp, pc}
   351fc:	push	{fp, lr}
   35200:	add	fp, sp, #4
   35204:	sub	sp, sp, #32
   35208:	str	r0, [fp, #-32]	; 0xffffffe0
   3520c:	str	r1, [fp, #-36]	; 0xffffffdc
   35210:	mov	r3, #0
   35214:	str	r3, [fp, #-12]
   35218:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3521c:	ldr	r3, [r3, #12]
   35220:	str	r3, [fp, #-16]
   35224:	ldr	r3, [fp, #-32]	; 0xffffffe0
   35228:	ldr	r3, [r3, #100]	; 0x64
   3522c:	cmp	r3, #0
   35230:	beq	35254 <__assert_fail@plt+0x23fe4>
   35234:	ldr	r3, [fp, #-32]	; 0xffffffe0
   35238:	ldr	r2, [r3, #100]	; 0x64
   3523c:	ldr	r3, [fp, #-16]
   35240:	lsl	r3, r3, #2
   35244:	add	r3, r2, r3
   35248:	ldr	r3, [r3]
   3524c:	cmp	r3, #0
   35250:	bne	35254 <__assert_fail@plt+0x23fe4>
   35254:	ldr	r3, [fp, #-36]	; 0xffffffdc
   35258:	ldr	r2, [r3, #8]
   3525c:	sub	r3, fp, #28
   35260:	mov	r1, r2
   35264:	mov	r0, r3
   35268:	bl	25f7c <__assert_fail@plt+0x14d0c>
   3526c:	str	r0, [fp, #-8]
   35270:	ldr	r3, [fp, #-8]
   35274:	cmp	r3, #0
   35278:	movne	r3, #1
   3527c:	moveq	r3, #0
   35280:	uxtb	r3, r3
   35284:	cmp	r3, #0
   35288:	beq	35294 <__assert_fail@plt+0x24024>
   3528c:	ldr	r3, [fp, #-8]
   35290:	b	3541c <__assert_fail@plt+0x241ac>
   35294:	sub	r3, fp, #28
   35298:	ldr	r2, [fp, #-16]
   3529c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   352a0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   352a4:	bl	3593c <__assert_fail@plt+0x246cc>
   352a8:	str	r0, [fp, #-8]
   352ac:	ldr	r3, [fp, #-8]
   352b0:	cmp	r3, #0
   352b4:	movne	r3, #1
   352b8:	moveq	r3, #0
   352bc:	uxtb	r3, r3
   352c0:	cmp	r3, #0
   352c4:	bne	353f8 <__assert_fail@plt+0x24188>
   352c8:	b	353e0 <__assert_fail@plt+0x24170>
   352cc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   352d0:	ldr	r2, [r3]
   352d4:	ldr	r3, [fp, #-16]
   352d8:	lsl	r3, r3, #2
   352dc:	add	r3, r2, r3
   352e0:	ldr	r3, [r3]
   352e4:	cmp	r3, #0
   352e8:	bne	352f8 <__assert_fail@plt+0x24088>
   352ec:	ldr	r3, [fp, #-12]
   352f0:	add	r3, r3, #1
   352f4:	b	352fc <__assert_fail@plt+0x2408c>
   352f8:	mov	r3, #0
   352fc:	str	r3, [fp, #-12]
   35300:	ldr	r3, [fp, #-32]	; 0xffffffe0
   35304:	ldr	r2, [r3, #120]	; 0x78
   35308:	ldr	r3, [fp, #-12]
   3530c:	cmp	r2, r3
   35310:	bge	35344 <__assert_fail@plt+0x240d4>
   35314:	ldr	r3, [fp, #-36]	; 0xffffffdc
   35318:	ldr	r0, [r3]
   3531c:	ldr	r3, [fp, #-16]
   35320:	lsl	r3, r3, #2
   35324:	mov	r2, r3
   35328:	mov	r1, #0
   3532c:	bl	111bc <memset@plt>
   35330:	ldr	r3, [fp, #-20]	; 0xffffffec
   35334:	mov	r0, r3
   35338:	bl	13630 <__assert_fail@plt+0x23c0>
   3533c:	mov	r3, #0
   35340:	b	3541c <__assert_fail@plt+0x241ac>
   35344:	mov	r3, #0
   35348:	str	r3, [fp, #-24]	; 0xffffffe8
   3534c:	ldr	r3, [fp, #-16]
   35350:	sub	r3, r3, #1
   35354:	str	r3, [fp, #-16]
   35358:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3535c:	ldr	r2, [r3, #100]	; 0x64
   35360:	ldr	r3, [fp, #-16]
   35364:	lsl	r3, r3, #2
   35368:	add	r3, r2, r3
   3536c:	ldr	r3, [r3]
   35370:	cmp	r3, #0
   35374:	beq	353ac <__assert_fail@plt+0x2413c>
   35378:	sub	r3, fp, #28
   3537c:	ldr	r2, [fp, #-16]
   35380:	ldr	r1, [fp, #-36]	; 0xffffffdc
   35384:	ldr	r0, [fp, #-32]	; 0xffffffe0
   35388:	bl	35428 <__assert_fail@plt+0x241b8>
   3538c:	str	r0, [fp, #-8]
   35390:	ldr	r3, [fp, #-8]
   35394:	cmp	r3, #0
   35398:	movne	r3, #1
   3539c:	moveq	r3, #0
   353a0:	uxtb	r3, r3
   353a4:	cmp	r3, #0
   353a8:	bne	35400 <__assert_fail@plt+0x24190>
   353ac:	sub	r3, fp, #28
   353b0:	ldr	r2, [fp, #-16]
   353b4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   353b8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   353bc:	bl	3593c <__assert_fail@plt+0x246cc>
   353c0:	str	r0, [fp, #-8]
   353c4:	ldr	r3, [fp, #-8]
   353c8:	cmp	r3, #0
   353cc:	movne	r3, #1
   353d0:	moveq	r3, #0
   353d4:	uxtb	r3, r3
   353d8:	cmp	r3, #0
   353dc:	bne	35408 <__assert_fail@plt+0x24198>
   353e0:	ldr	r3, [fp, #-16]
   353e4:	cmp	r3, #0
   353e8:	bgt	352cc <__assert_fail@plt+0x2405c>
   353ec:	mov	r3, #0
   353f0:	str	r3, [fp, #-8]
   353f4:	b	3540c <__assert_fail@plt+0x2419c>
   353f8:	nop			; (mov r0, r0)
   353fc:	b	3540c <__assert_fail@plt+0x2419c>
   35400:	nop			; (mov r0, r0)
   35404:	b	3540c <__assert_fail@plt+0x2419c>
   35408:	nop			; (mov r0, r0)
   3540c:	ldr	r3, [fp, #-20]	; 0xffffffec
   35410:	mov	r0, r3
   35414:	bl	13630 <__assert_fail@plt+0x23c0>
   35418:	ldr	r3, [fp, #-8]
   3541c:	mov	r0, r3
   35420:	sub	sp, fp, #4
   35424:	pop	{fp, pc}
   35428:	push	{fp, lr}
   3542c:	add	fp, sp, #4
   35430:	sub	sp, sp, #56	; 0x38
   35434:	str	r0, [fp, #-40]	; 0xffffffd8
   35438:	str	r1, [fp, #-44]	; 0xffffffd4
   3543c:	str	r2, [fp, #-48]	; 0xffffffd0
   35440:	str	r3, [fp, #-52]	; 0xffffffcc
   35444:	ldr	r3, [fp, #-40]	; 0xffffffd8
   35448:	ldr	r3, [r3, #84]	; 0x54
   3544c:	str	r3, [fp, #-16]
   35450:	ldr	r3, [fp, #-40]	; 0xffffffd8
   35454:	ldr	r2, [r3, #100]	; 0x64
   35458:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3545c:	lsl	r3, r3, #2
   35460:	add	r3, r2, r3
   35464:	ldr	r3, [r3]
   35468:	add	r3, r3, #16
   3546c:	str	r3, [fp, #-20]	; 0xffffffec
   35470:	mov	r3, #0
   35474:	str	r3, [fp, #-8]
   35478:	b	3567c <__assert_fail@plt+0x2440c>
   3547c:	ldr	r3, [fp, #-20]	; 0xffffffec
   35480:	ldr	r2, [r3, #8]
   35484:	ldr	r3, [fp, #-8]
   35488:	lsl	r3, r3, #2
   3548c:	add	r3, r2, r3
   35490:	ldr	r3, [r3]
   35494:	str	r3, [fp, #-24]	; 0xffffffe8
   35498:	mov	r3, #0
   3549c:	str	r3, [fp, #-12]
   354a0:	ldr	r3, [fp, #-16]
   354a4:	ldr	r2, [r3]
   354a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   354ac:	lsl	r3, r3, #3
   354b0:	add	r3, r2, r3
   354b4:	ldrb	r3, [r3, #4]
   354b8:	and	r3, r3, #8
   354bc:	cmp	r3, #0
   354c0:	ldr	r3, [fp, #-16]
   354c4:	ldr	r2, [r3]
   354c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   354cc:	lsl	r3, r3, #3
   354d0:	add	r3, r2, r3
   354d4:	ldrb	r3, [r3, #6]
   354d8:	and	r3, r3, #16
   354dc:	uxtb	r3, r3
   354e0:	cmp	r3, #0
   354e4:	beq	3550c <__assert_fail@plt+0x2429c>
   354e8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   354ec:	ldr	r3, [r3, #12]
   354f0:	str	r3, [sp]
   354f4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   354f8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   354fc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   35500:	ldr	r0, [fp, #-40]	; 0xffffffd8
   35504:	bl	36dec <__assert_fail@plt+0x25b7c>
   35508:	str	r0, [fp, #-12]
   3550c:	ldr	r3, [fp, #-12]
   35510:	cmp	r3, #0
   35514:	bne	355c0 <__assert_fail@plt+0x24350>
   35518:	ldr	r3, [fp, #-16]
   3551c:	ldr	r2, [r3]
   35520:	ldr	r3, [fp, #-24]	; 0xffffffe8
   35524:	lsl	r3, r3, #3
   35528:	add	r3, r2, r3
   3552c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   35530:	mov	r1, r3
   35534:	ldr	r0, [fp, #-40]	; 0xffffffd8
   35538:	bl	3b450 <__assert_fail@plt+0x2a1e0>
   3553c:	mov	r3, r0
   35540:	cmp	r3, #0
   35544:	beq	355c0 <__assert_fail@plt+0x24350>
   35548:	ldr	r3, [fp, #-44]	; 0xffffffd4
   3554c:	ldr	r2, [r3]
   35550:	ldr	r3, [fp, #-48]	; 0xffffffd0
   35554:	add	r3, r3, #1
   35558:	lsl	r3, r3, #2
   3555c:	add	r3, r2, r3
   35560:	ldr	r3, [r3]
   35564:	cmp	r3, #0
   35568:	beq	355c0 <__assert_fail@plt+0x24350>
   3556c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   35570:	ldr	r2, [r3]
   35574:	ldr	r3, [fp, #-48]	; 0xffffffd0
   35578:	add	r3, r3, #1
   3557c:	lsl	r3, r3, #2
   35580:	add	r3, r2, r3
   35584:	ldr	r3, [r3]
   35588:	add	r0, r3, #4
   3558c:	ldr	r3, [fp, #-16]
   35590:	ldr	r2, [r3, #12]
   35594:	ldr	r3, [fp, #-24]	; 0xffffffe8
   35598:	lsl	r3, r3, #2
   3559c:	add	r3, r2, r3
   355a0:	ldr	r3, [r3]
   355a4:	mov	r1, r3
   355a8:	bl	2729c <__assert_fail@plt+0x1602c>
   355ac:	mov	r3, r0
   355b0:	cmp	r3, #0
   355b4:	beq	355c0 <__assert_fail@plt+0x24350>
   355b8:	mov	r3, #1
   355bc:	str	r3, [fp, #-12]
   355c0:	ldr	r3, [fp, #-12]
   355c4:	cmp	r3, #0
   355c8:	beq	35664 <__assert_fail@plt+0x243f4>
   355cc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   355d0:	ldr	r3, [r3, #20]
   355d4:	cmp	r3, #0
   355d8:	beq	35634 <__assert_fail@plt+0x243c4>
   355dc:	ldr	r2, [fp, #-48]	; 0xffffffd0
   355e0:	ldr	r3, [fp, #-12]
   355e4:	add	r3, r2, r3
   355e8:	str	r3, [fp, #-28]	; 0xffffffe4
   355ec:	ldr	r3, [fp, #-44]	; 0xffffffd4
   355f0:	add	r1, r3, #16
   355f4:	ldr	r3, [fp, #-16]
   355f8:	ldr	r2, [r3, #12]
   355fc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   35600:	lsl	r3, r3, #2
   35604:	add	r3, r2, r3
   35608:	ldr	r2, [r3]
   3560c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   35610:	str	r3, [sp, #4]
   35614:	ldr	r3, [fp, #-24]	; 0xffffffe8
   35618:	str	r3, [sp]
   3561c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   35620:	ldr	r0, [fp, #-40]	; 0xffffffd8
   35624:	bl	35fc8 <__assert_fail@plt+0x24d58>
   35628:	mov	r3, r0
   3562c:	cmp	r3, #0
   35630:	bne	3566c <__assert_fail@plt+0x243fc>
   35634:	ldr	r1, [fp, #-24]	; 0xffffffe8
   35638:	ldr	r0, [fp, #-52]	; 0xffffffcc
   3563c:	bl	26e8c <__assert_fail@plt+0x15c1c>
   35640:	mov	r3, r0
   35644:	strb	r3, [fp, #-29]	; 0xffffffe3
   35648:	ldrb	r3, [fp, #-29]	; 0xffffffe3
   3564c:	eor	r3, r3, #1
   35650:	uxtb	r3, r3
   35654:	cmp	r3, #0
   35658:	beq	35670 <__assert_fail@plt+0x24400>
   3565c:	mov	r3, #12
   35660:	b	35694 <__assert_fail@plt+0x24424>
   35664:	nop			; (mov r0, r0)
   35668:	b	35670 <__assert_fail@plt+0x24400>
   3566c:	nop			; (mov r0, r0)
   35670:	ldr	r3, [fp, #-8]
   35674:	add	r3, r3, #1
   35678:	str	r3, [fp, #-8]
   3567c:	ldr	r3, [fp, #-20]	; 0xffffffec
   35680:	ldr	r2, [r3, #4]
   35684:	ldr	r3, [fp, #-8]
   35688:	cmp	r2, r3
   3568c:	bgt	3547c <__assert_fail@plt+0x2420c>
   35690:	mov	r3, #0
   35694:	mov	r0, r3
   35698:	sub	sp, fp, #4
   3569c:	pop	{fp, pc}
   356a0:	push	{fp, lr}
   356a4:	add	fp, sp, #4
   356a8:	sub	sp, sp, #16
   356ac:	str	r0, [fp, #-16]
   356b0:	str	r1, [fp, #-20]	; 0xffffffec
   356b4:	ldr	r3, [fp, #-16]
   356b8:	ldr	r3, [r3, #104]	; 0x68
   356bc:	str	r3, [fp, #-8]
   356c0:	ldr	r3, [fp, #-16]
   356c4:	ldr	r2, [r3, #36]	; 0x24
   356c8:	ldr	r3, [fp, #-20]	; 0xffffffec
   356cc:	cmp	r2, r3
   356d0:	bgt	356ec <__assert_fail@plt+0x2447c>
   356d4:	ldr	r3, [fp, #-16]
   356d8:	ldr	r2, [r3, #36]	; 0x24
   356dc:	ldr	r3, [fp, #-16]
   356e0:	ldr	r3, [r3, #48]	; 0x30
   356e4:	cmp	r2, r3
   356e8:	blt	35718 <__assert_fail@plt+0x244a8>
   356ec:	ldr	r3, [fp, #-16]
   356f0:	ldr	r2, [r3, #28]
   356f4:	ldr	r3, [fp, #-20]	; 0xffffffec
   356f8:	cmp	r2, r3
   356fc:	bgt	35754 <__assert_fail@plt+0x244e4>
   35700:	ldr	r3, [fp, #-16]
   35704:	ldr	r2, [r3, #28]
   35708:	ldr	r3, [fp, #-16]
   3570c:	ldr	r3, [r3, #48]	; 0x30
   35710:	cmp	r2, r3
   35714:	bge	35754 <__assert_fail@plt+0x244e4>
   35718:	ldr	r3, [fp, #-20]	; 0xffffffec
   3571c:	add	r3, r3, #1
   35720:	mov	r1, r3
   35724:	ldr	r0, [fp, #-16]
   35728:	bl	3b6a4 <__assert_fail@plt+0x2a434>
   3572c:	str	r0, [fp, #-12]
   35730:	ldr	r3, [fp, #-12]
   35734:	cmp	r3, #0
   35738:	movne	r3, #1
   3573c:	moveq	r3, #0
   35740:	uxtb	r3, r3
   35744:	cmp	r3, #0
   35748:	beq	35754 <__assert_fail@plt+0x244e4>
   3574c:	ldr	r3, [fp, #-12]
   35750:	b	357b4 <__assert_fail@plt+0x24544>
   35754:	ldr	r2, [fp, #-8]
   35758:	ldr	r3, [fp, #-20]	; 0xffffffec
   3575c:	cmp	r2, r3
   35760:	bge	357b0 <__assert_fail@plt+0x24540>
   35764:	ldr	r3, [fp, #-16]
   35768:	ldr	r3, [r3, #100]	; 0x64
   3576c:	cmp	r3, #0
   35770:	ldr	r3, [fp, #-16]
   35774:	ldr	r2, [r3, #100]	; 0x64
   35778:	ldr	r3, [fp, #-8]
   3577c:	add	r3, r3, #1
   35780:	lsl	r3, r3, #2
   35784:	add	r0, r2, r3
   35788:	ldr	r2, [fp, #-20]	; 0xffffffec
   3578c:	ldr	r3, [fp, #-8]
   35790:	sub	r3, r2, r3
   35794:	lsl	r3, r3, #2
   35798:	mov	r2, r3
   3579c:	mov	r1, #0
   357a0:	bl	111bc <memset@plt>
   357a4:	ldr	r3, [fp, #-16]
   357a8:	ldr	r2, [fp, #-20]	; 0xffffffec
   357ac:	str	r2, [r3, #104]	; 0x68
   357b0:	mov	r3, #0
   357b4:	mov	r0, r3
   357b8:	sub	sp, fp, #4
   357bc:	pop	{fp, pc}
   357c0:	push	{r4, fp, lr}
   357c4:	add	fp, sp, #8
   357c8:	sub	sp, sp, #44	; 0x2c
   357cc:	str	r0, [fp, #-40]	; 0xffffffd8
   357d0:	str	r1, [fp, #-44]	; 0xffffffd4
   357d4:	str	r2, [fp, #-48]	; 0xffffffd0
   357d8:	str	r3, [fp, #-52]	; 0xffffffcc
   357dc:	mov	r3, #0
   357e0:	str	r3, [fp, #-16]
   357e4:	b	3591c <__assert_fail@plt+0x246ac>
   357e8:	ldr	r3, [fp, #-16]
   357ec:	lsl	r3, r3, #2
   357f0:	ldr	r2, [fp, #-44]	; 0xffffffd4
   357f4:	add	r3, r2, r3
   357f8:	ldr	r3, [r3]
   357fc:	cmp	r3, #0
   35800:	bne	35830 <__assert_fail@plt+0x245c0>
   35804:	ldr	r3, [fp, #-16]
   35808:	lsl	r3, r3, #2
   3580c:	ldr	r2, [fp, #-44]	; 0xffffffd4
   35810:	add	r3, r2, r3
   35814:	ldr	r2, [fp, #-16]
   35818:	lsl	r2, r2, #2
   3581c:	ldr	r1, [fp, #-48]	; 0xffffffd0
   35820:	add	r2, r1, r2
   35824:	ldr	r2, [r2]
   35828:	str	r2, [r3]
   3582c:	b	35910 <__assert_fail@plt+0x246a0>
   35830:	ldr	r3, [fp, #-16]
   35834:	lsl	r3, r3, #2
   35838:	ldr	r2, [fp, #-48]	; 0xffffffd0
   3583c:	add	r3, r2, r3
   35840:	ldr	r3, [r3]
   35844:	cmp	r3, #0
   35848:	beq	35910 <__assert_fail@plt+0x246a0>
   3584c:	ldr	r3, [fp, #-16]
   35850:	lsl	r3, r3, #2
   35854:	ldr	r2, [fp, #-44]	; 0xffffffd4
   35858:	add	r3, r2, r3
   3585c:	ldr	r3, [r3]
   35860:	add	r1, r3, #4
   35864:	ldr	r3, [fp, #-16]
   35868:	lsl	r3, r3, #2
   3586c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   35870:	add	r3, r2, r3
   35874:	ldr	r3, [r3]
   35878:	add	r2, r3, #4
   3587c:	sub	r3, fp, #32
   35880:	mov	r0, r3
   35884:	bl	266bc <__assert_fail@plt+0x1544c>
   35888:	mov	r3, r0
   3588c:	str	r3, [fp, #-20]	; 0xffffffec
   35890:	ldr	r3, [fp, #-20]	; 0xffffffec
   35894:	cmp	r3, #0
   35898:	movne	r3, #1
   3589c:	moveq	r3, #0
   358a0:	uxtb	r3, r3
   358a4:	cmp	r3, #0
   358a8:	beq	358b4 <__assert_fail@plt+0x24644>
   358ac:	ldr	r3, [fp, #-20]	; 0xffffffec
   358b0:	b	35930 <__assert_fail@plt+0x246c0>
   358b4:	ldr	r3, [fp, #-16]
   358b8:	lsl	r3, r3, #2
   358bc:	ldr	r2, [fp, #-44]	; 0xffffffd4
   358c0:	add	r4, r2, r3
   358c4:	sub	r2, fp, #32
   358c8:	sub	r3, fp, #20
   358cc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   358d0:	mov	r0, r3
   358d4:	bl	278c8 <__assert_fail@plt+0x16658>
   358d8:	mov	r3, r0
   358dc:	str	r3, [r4]
   358e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   358e4:	mov	r0, r3
   358e8:	bl	13630 <__assert_fail@plt+0x23c0>
   358ec:	ldr	r3, [fp, #-20]	; 0xffffffec
   358f0:	cmp	r3, #0
   358f4:	movne	r3, #1
   358f8:	moveq	r3, #0
   358fc:	uxtb	r3, r3
   35900:	cmp	r3, #0
   35904:	beq	35910 <__assert_fail@plt+0x246a0>
   35908:	ldr	r3, [fp, #-20]	; 0xffffffec
   3590c:	b	35930 <__assert_fail@plt+0x246c0>
   35910:	ldr	r3, [fp, #-16]
   35914:	add	r3, r3, #1
   35918:	str	r3, [fp, #-16]
   3591c:	ldr	r2, [fp, #-16]
   35920:	ldr	r3, [fp, #-52]	; 0xffffffcc
   35924:	cmp	r2, r3
   35928:	blt	357e8 <__assert_fail@plt+0x24578>
   3592c:	mov	r3, #0
   35930:	mov	r0, r3
   35934:	sub	sp, fp, #8
   35938:	pop	{r4, fp, pc}
   3593c:	push	{r4, fp, lr}
   35940:	add	fp, sp, #8
   35944:	sub	sp, sp, #44	; 0x2c
   35948:	str	r0, [fp, #-32]	; 0xffffffe0
   3594c:	str	r1, [fp, #-36]	; 0xffffffdc
   35950:	str	r2, [fp, #-40]	; 0xffffffd8
   35954:	str	r3, [fp, #-44]	; 0xffffffd4
   35958:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3595c:	ldr	r3, [r3, #84]	; 0x54
   35960:	str	r3, [fp, #-16]
   35964:	mov	r3, #0
   35968:	str	r3, [fp, #-24]	; 0xffffffe8
   3596c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   35970:	ldr	r2, [r3, #100]	; 0x64
   35974:	ldr	r3, [fp, #-40]	; 0xffffffd8
   35978:	lsl	r3, r3, #2
   3597c:	add	r3, r2, r3
   35980:	ldr	r3, [r3]
   35984:	cmp	r3, #0
   35988:	beq	359ac <__assert_fail@plt+0x2473c>
   3598c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   35990:	ldr	r2, [r3, #100]	; 0x64
   35994:	ldr	r3, [fp, #-40]	; 0xffffffd8
   35998:	lsl	r3, r3, #2
   3599c:	add	r3, r2, r3
   359a0:	ldr	r3, [r3]
   359a4:	add	r3, r3, #4
   359a8:	b	359b0 <__assert_fail@plt+0x24740>
   359ac:	mov	r3, #0
   359b0:	str	r3, [fp, #-20]	; 0xffffffec
   359b4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   359b8:	ldr	r3, [r3, #4]
   359bc:	cmp	r3, #0
   359c0:	bne	359e4 <__assert_fail@plt+0x24774>
   359c4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   359c8:	ldr	r2, [r3]
   359cc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   359d0:	lsl	r3, r3, #2
   359d4:	add	r3, r2, r3
   359d8:	mov	r2, #0
   359dc:	str	r2, [r3]
   359e0:	b	35aec <__assert_fail@plt+0x2487c>
   359e4:	ldr	r3, [fp, #-20]	; 0xffffffec
   359e8:	cmp	r3, #0
   359ec:	beq	35a98 <__assert_fail@plt+0x24828>
   359f0:	ldr	r2, [fp, #-20]	; 0xffffffec
   359f4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   359f8:	ldr	r0, [fp, #-16]
   359fc:	bl	35b74 <__assert_fail@plt+0x24904>
   35a00:	mov	r3, r0
   35a04:	str	r3, [fp, #-24]	; 0xffffffe8
   35a08:	ldr	r3, [fp, #-24]	; 0xffffffe8
   35a0c:	cmp	r3, #0
   35a10:	movne	r3, #1
   35a14:	moveq	r3, #0
   35a18:	uxtb	r3, r3
   35a1c:	cmp	r3, #0
   35a20:	beq	35a2c <__assert_fail@plt+0x247bc>
   35a24:	ldr	r3, [fp, #-24]	; 0xffffffe8
   35a28:	b	35b68 <__assert_fail@plt+0x248f8>
   35a2c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   35a30:	ldr	r3, [r3, #20]
   35a34:	cmp	r3, #0
   35a38:	beq	35a98 <__assert_fail@plt+0x24828>
   35a3c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   35a40:	add	r1, r3, #16
   35a44:	ldr	r3, [fp, #-32]	; 0xffffffe0
   35a48:	ldr	r3, [r3, #116]	; 0x74
   35a4c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   35a50:	str	r2, [sp, #4]
   35a54:	str	r3, [sp]
   35a58:	mov	r3, r1
   35a5c:	ldr	r2, [fp, #-20]	; 0xffffffec
   35a60:	ldr	r1, [fp, #-44]	; 0xffffffd4
   35a64:	ldr	r0, [fp, #-16]
   35a68:	bl	36534 <__assert_fail@plt+0x252c4>
   35a6c:	mov	r3, r0
   35a70:	str	r3, [fp, #-24]	; 0xffffffe8
   35a74:	ldr	r3, [fp, #-24]	; 0xffffffe8
   35a78:	cmp	r3, #0
   35a7c:	movne	r3, #1
   35a80:	moveq	r3, #0
   35a84:	uxtb	r3, r3
   35a88:	cmp	r3, #0
   35a8c:	beq	35a98 <__assert_fail@plt+0x24828>
   35a90:	ldr	r3, [fp, #-24]	; 0xffffffe8
   35a94:	b	35b68 <__assert_fail@plt+0x248f8>
   35a98:	ldr	r3, [fp, #-36]	; 0xffffffdc
   35a9c:	ldr	r2, [r3]
   35aa0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   35aa4:	lsl	r3, r3, #2
   35aa8:	add	r4, r2, r3
   35aac:	sub	r3, fp, #24
   35ab0:	ldr	r2, [fp, #-44]	; 0xffffffd4
   35ab4:	ldr	r1, [fp, #-16]
   35ab8:	mov	r0, r3
   35abc:	bl	278c8 <__assert_fail@plt+0x16658>
   35ac0:	mov	r3, r0
   35ac4:	str	r3, [r4]
   35ac8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   35acc:	cmp	r3, #0
   35ad0:	movne	r3, #1
   35ad4:	moveq	r3, #0
   35ad8:	uxtb	r3, r3
   35adc:	cmp	r3, #0
   35ae0:	beq	35aec <__assert_fail@plt+0x2487c>
   35ae4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   35ae8:	b	35b68 <__assert_fail@plt+0x248f8>
   35aec:	ldr	r3, [fp, #-20]	; 0xffffffec
   35af0:	cmp	r3, #0
   35af4:	beq	35b64 <__assert_fail@plt+0x248f4>
   35af8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   35afc:	ldr	r2, [r3, #100]	; 0x64
   35b00:	ldr	r3, [fp, #-40]	; 0xffffffd8
   35b04:	lsl	r3, r3, #2
   35b08:	add	r3, r2, r3
   35b0c:	ldr	r3, [r3]
   35b10:	ldrb	r3, [r3, #52]	; 0x34
   35b14:	and	r3, r3, #64	; 0x40
   35b18:	uxtb	r3, r3
   35b1c:	cmp	r3, #0
   35b20:	beq	35b64 <__assert_fail@plt+0x248f4>
   35b24:	ldr	r3, [fp, #-20]	; 0xffffffec
   35b28:	ldr	r2, [fp, #-40]	; 0xffffffd8
   35b2c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   35b30:	ldr	r0, [fp, #-32]	; 0xffffffe0
   35b34:	bl	3694c <__assert_fail@plt+0x256dc>
   35b38:	mov	r3, r0
   35b3c:	str	r3, [fp, #-24]	; 0xffffffe8
   35b40:	ldr	r3, [fp, #-24]	; 0xffffffe8
   35b44:	cmp	r3, #0
   35b48:	movne	r3, #1
   35b4c:	moveq	r3, #0
   35b50:	uxtb	r3, r3
   35b54:	cmp	r3, #0
   35b58:	beq	35b64 <__assert_fail@plt+0x248f4>
   35b5c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   35b60:	b	35b68 <__assert_fail@plt+0x248f8>
   35b64:	mov	r3, #0
   35b68:	mov	r0, r3
   35b6c:	sub	sp, fp, #8
   35b70:	pop	{r4, fp, pc}
   35b74:	push	{fp, lr}
   35b78:	add	fp, sp, #4
   35b7c:	sub	sp, sp, #32
   35b80:	str	r0, [fp, #-24]	; 0xffffffe8
   35b84:	str	r1, [fp, #-28]	; 0xffffffe4
   35b88:	str	r2, [fp, #-32]	; 0xffffffe0
   35b8c:	mov	r3, #0
   35b90:	str	r3, [fp, #-16]
   35b94:	sub	r3, fp, #16
   35b98:	ldr	r2, [fp, #-28]	; 0xffffffe4
   35b9c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   35ba0:	mov	r0, r3
   35ba4:	bl	278c8 <__assert_fail@plt+0x16658>
   35ba8:	str	r0, [fp, #-12]
   35bac:	ldr	r3, [fp, #-16]
   35bb0:	cmp	r3, #0
   35bb4:	movne	r3, #1
   35bb8:	moveq	r3, #0
   35bbc:	uxtb	r3, r3
   35bc0:	cmp	r3, #0
   35bc4:	beq	35bd0 <__assert_fail@plt+0x24960>
   35bc8:	ldr	r3, [fp, #-16]
   35bcc:	b	35ce4 <__assert_fail@plt+0x24a74>
   35bd0:	ldr	r3, [fp, #-12]
   35bd4:	ldr	r3, [r3, #28]
   35bd8:	cmp	r3, #0
   35bdc:	bne	35cc8 <__assert_fail@plt+0x24a58>
   35be0:	ldr	r3, [fp, #-12]
   35be4:	add	r2, r3, #28
   35be8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   35bec:	ldr	r3, [r3, #4]
   35bf0:	mov	r1, r3
   35bf4:	mov	r0, r2
   35bf8:	bl	25ef8 <__assert_fail@plt+0x14c88>
   35bfc:	mov	r3, r0
   35c00:	str	r3, [fp, #-16]
   35c04:	ldr	r3, [fp, #-16]
   35c08:	cmp	r3, #0
   35c0c:	movne	r3, #1
   35c10:	moveq	r3, #0
   35c14:	uxtb	r3, r3
   35c18:	cmp	r3, #0
   35c1c:	beq	35c28 <__assert_fail@plt+0x249b8>
   35c20:	mov	r3, #12
   35c24:	b	35ce4 <__assert_fail@plt+0x24a74>
   35c28:	mov	r3, #0
   35c2c:	str	r3, [fp, #-8]
   35c30:	b	35cb4 <__assert_fail@plt+0x24a44>
   35c34:	ldr	r3, [fp, #-12]
   35c38:	add	r0, r3, #28
   35c3c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   35c40:	ldr	r2, [r3, #28]
   35c44:	ldr	r3, [fp, #-28]	; 0xffffffe4
   35c48:	ldr	r1, [r3, #8]
   35c4c:	ldr	r3, [fp, #-8]
   35c50:	lsl	r3, r3, #2
   35c54:	add	r3, r1, r3
   35c58:	ldr	r3, [r3]
   35c5c:	mov	r1, r3
   35c60:	mov	r3, r1
   35c64:	lsl	r3, r3, #1
   35c68:	add	r3, r3, r1
   35c6c:	lsl	r3, r3, #2
   35c70:	add	r3, r2, r3
   35c74:	mov	r1, r3
   35c78:	bl	26a38 <__assert_fail@plt+0x157c8>
   35c7c:	mov	r3, r0
   35c80:	str	r3, [fp, #-16]
   35c84:	ldr	r3, [fp, #-16]
   35c88:	cmp	r3, #0
   35c8c:	movne	r3, #1
   35c90:	moveq	r3, #0
   35c94:	uxtb	r3, r3
   35c98:	cmp	r3, #0
   35c9c:	beq	35ca8 <__assert_fail@plt+0x24a38>
   35ca0:	mov	r3, #12
   35ca4:	b	35ce4 <__assert_fail@plt+0x24a74>
   35ca8:	ldr	r3, [fp, #-8]
   35cac:	add	r3, r3, #1
   35cb0:	str	r3, [fp, #-8]
   35cb4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   35cb8:	ldr	r2, [r3, #4]
   35cbc:	ldr	r3, [fp, #-8]
   35cc0:	cmp	r2, r3
   35cc4:	bgt	35c34 <__assert_fail@plt+0x249c4>
   35cc8:	ldr	r3, [fp, #-12]
   35ccc:	add	r3, r3, #28
   35cd0:	mov	r2, r3
   35cd4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   35cd8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   35cdc:	bl	26224 <__assert_fail@plt+0x14fb4>
   35ce0:	mov	r3, r0
   35ce4:	mov	r0, r3
   35ce8:	sub	sp, fp, #4
   35cec:	pop	{fp, pc}
   35cf0:	push	{fp, lr}
   35cf4:	add	fp, sp, #4
   35cf8:	sub	sp, sp, #64	; 0x40
   35cfc:	str	r0, [fp, #-56]	; 0xffffffc8
   35d00:	str	r1, [fp, #-60]	; 0xffffffc4
   35d04:	str	r2, [fp, #-64]	; 0xffffffc0
   35d08:	str	r3, [fp, #-68]	; 0xffffffbc
   35d0c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   35d10:	ldr	r1, [r3, #28]
   35d14:	ldr	r2, [fp, #-60]	; 0xffffffc4
   35d18:	mov	r3, r2
   35d1c:	lsl	r3, r3, #1
   35d20:	add	r3, r3, r2
   35d24:	lsl	r3, r3, #2
   35d28:	add	r3, r1, r3
   35d2c:	str	r3, [fp, #-12]
   35d30:	sub	r3, fp, #48	; 0x30
   35d34:	mov	r2, #12
   35d38:	mov	r1, #0
   35d3c:	mov	r0, r3
   35d40:	bl	111bc <memset@plt>
   35d44:	mov	r3, #0
   35d48:	str	r3, [fp, #-8]
   35d4c:	b	35f10 <__assert_fail@plt+0x24ca0>
   35d50:	ldr	r3, [fp, #-12]
   35d54:	ldr	r2, [r3, #8]
   35d58:	ldr	r3, [fp, #-8]
   35d5c:	lsl	r3, r3, #2
   35d60:	add	r3, r2, r3
   35d64:	ldr	r3, [r3]
   35d68:	str	r3, [fp, #-16]
   35d6c:	ldr	r2, [fp, #-16]
   35d70:	ldr	r3, [fp, #-60]	; 0xffffffc4
   35d74:	cmp	r2, r3
   35d78:	beq	35f00 <__assert_fail@plt+0x24c90>
   35d7c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   35d80:	ldr	r2, [r3]
   35d84:	ldr	r3, [fp, #-16]
   35d88:	lsl	r3, r3, #3
   35d8c:	add	r3, r2, r3
   35d90:	ldrb	r3, [r3, #4]
   35d94:	and	r3, r3, #8
   35d98:	cmp	r3, #0
   35d9c:	beq	35f04 <__assert_fail@plt+0x24c94>
   35da0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   35da4:	ldr	r1, [r3, #20]
   35da8:	ldr	r2, [fp, #-16]
   35dac:	mov	r3, r2
   35db0:	lsl	r3, r3, #1
   35db4:	add	r3, r3, r2
   35db8:	lsl	r3, r3, #2
   35dbc:	add	r3, r1, r3
   35dc0:	ldr	r3, [r3, #8]
   35dc4:	ldr	r3, [r3]
   35dc8:	str	r3, [fp, #-20]	; 0xffffffec
   35dcc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   35dd0:	ldr	r1, [r3, #20]
   35dd4:	ldr	r2, [fp, #-16]
   35dd8:	mov	r3, r2
   35ddc:	lsl	r3, r3, #1
   35de0:	add	r3, r3, r2
   35de4:	lsl	r3, r3, #2
   35de8:	add	r3, r1, r3
   35dec:	ldr	r3, [r3, #4]
   35df0:	cmp	r3, #1
   35df4:	ble	35e28 <__assert_fail@plt+0x24bb8>
   35df8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   35dfc:	ldr	r1, [r3, #20]
   35e00:	ldr	r2, [fp, #-16]
   35e04:	mov	r3, r2
   35e08:	lsl	r3, r3, #1
   35e0c:	add	r3, r3, r2
   35e10:	lsl	r3, r3, #2
   35e14:	add	r3, r1, r3
   35e18:	ldr	r3, [r3, #8]
   35e1c:	add	r3, r3, #4
   35e20:	ldr	r3, [r3]
   35e24:	b	35e2c <__assert_fail@plt+0x24bbc>
   35e28:	mvn	r3, #0
   35e2c:	str	r3, [fp, #-24]	; 0xffffffe8
   35e30:	ldr	r1, [fp, #-20]	; 0xffffffec
   35e34:	ldr	r0, [fp, #-12]
   35e38:	bl	2729c <__assert_fail@plt+0x1602c>
   35e3c:	mov	r3, r0
   35e40:	cmp	r3, #0
   35e44:	bne	35e60 <__assert_fail@plt+0x24bf0>
   35e48:	ldr	r1, [fp, #-20]	; 0xffffffec
   35e4c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   35e50:	bl	2729c <__assert_fail@plt+0x1602c>
   35e54:	mov	r3, r0
   35e58:	cmp	r3, #0
   35e5c:	bne	35e9c <__assert_fail@plt+0x24c2c>
   35e60:	ldr	r3, [fp, #-24]	; 0xffffffe8
   35e64:	cmp	r3, #0
   35e68:	ble	35f04 <__assert_fail@plt+0x24c94>
   35e6c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   35e70:	ldr	r0, [fp, #-12]
   35e74:	bl	2729c <__assert_fail@plt+0x1602c>
   35e78:	mov	r3, r0
   35e7c:	cmp	r3, #0
   35e80:	bne	35f04 <__assert_fail@plt+0x24c94>
   35e84:	ldr	r1, [fp, #-24]	; 0xffffffe8
   35e88:	ldr	r0, [fp, #-64]	; 0xffffffc0
   35e8c:	bl	2729c <__assert_fail@plt+0x1602c>
   35e90:	mov	r3, r0
   35e94:	cmp	r3, #0
   35e98:	beq	35f04 <__assert_fail@plt+0x24c94>
   35e9c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   35ea0:	ldr	r1, [r3, #28]
   35ea4:	ldr	r2, [fp, #-16]
   35ea8:	mov	r3, r2
   35eac:	lsl	r3, r3, #1
   35eb0:	add	r3, r3, r2
   35eb4:	lsl	r3, r3, #2
   35eb8:	add	r2, r1, r3
   35ebc:	sub	r3, fp, #48	; 0x30
   35ec0:	ldr	r1, [fp, #-68]	; 0xffffffbc
   35ec4:	mov	r0, r3
   35ec8:	bl	26224 <__assert_fail@plt+0x14fb4>
   35ecc:	str	r0, [fp, #-28]	; 0xffffffe4
   35ed0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   35ed4:	cmp	r3, #0
   35ed8:	movne	r3, #1
   35edc:	moveq	r3, #0
   35ee0:	uxtb	r3, r3
   35ee4:	cmp	r3, #0
   35ee8:	beq	35f04 <__assert_fail@plt+0x24c94>
   35eec:	ldr	r3, [fp, #-40]	; 0xffffffd8
   35ef0:	mov	r0, r3
   35ef4:	bl	13630 <__assert_fail@plt+0x23c0>
   35ef8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   35efc:	b	35fbc <__assert_fail@plt+0x24d4c>
   35f00:	nop			; (mov r0, r0)
   35f04:	ldr	r3, [fp, #-8]
   35f08:	add	r3, r3, #1
   35f0c:	str	r3, [fp, #-8]
   35f10:	ldr	r3, [fp, #-12]
   35f14:	ldr	r2, [r3, #4]
   35f18:	ldr	r3, [fp, #-8]
   35f1c:	cmp	r2, r3
   35f20:	bgt	35d50 <__assert_fail@plt+0x24ae0>
   35f24:	mov	r3, #0
   35f28:	str	r3, [fp, #-8]
   35f2c:	b	35f98 <__assert_fail@plt+0x24d28>
   35f30:	ldr	r3, [fp, #-12]
   35f34:	ldr	r2, [r3, #8]
   35f38:	ldr	r3, [fp, #-8]
   35f3c:	lsl	r3, r3, #2
   35f40:	add	r3, r2, r3
   35f44:	ldr	r3, [r3]
   35f48:	str	r3, [fp, #-32]	; 0xffffffe0
   35f4c:	sub	r3, fp, #48	; 0x30
   35f50:	ldr	r1, [fp, #-32]	; 0xffffffe0
   35f54:	mov	r0, r3
   35f58:	bl	2729c <__assert_fail@plt+0x1602c>
   35f5c:	mov	r3, r0
   35f60:	cmp	r3, #0
   35f64:	bne	35f8c <__assert_fail@plt+0x24d1c>
   35f68:	ldr	r1, [fp, #-32]	; 0xffffffe0
   35f6c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   35f70:	bl	2729c <__assert_fail@plt+0x1602c>
   35f74:	mov	r3, r0
   35f78:	sub	r3, r3, #1
   35f7c:	str	r3, [fp, #-36]	; 0xffffffdc
   35f80:	ldr	r1, [fp, #-36]	; 0xffffffdc
   35f84:	ldr	r0, [fp, #-64]	; 0xffffffc0
   35f88:	bl	27388 <__assert_fail@plt+0x16118>
   35f8c:	ldr	r3, [fp, #-8]
   35f90:	add	r3, r3, #1
   35f94:	str	r3, [fp, #-8]
   35f98:	ldr	r3, [fp, #-12]
   35f9c:	ldr	r2, [r3, #4]
   35fa0:	ldr	r3, [fp, #-8]
   35fa4:	cmp	r2, r3
   35fa8:	bgt	35f30 <__assert_fail@plt+0x24cc0>
   35fac:	ldr	r3, [fp, #-40]	; 0xffffffd8
   35fb0:	mov	r0, r3
   35fb4:	bl	13630 <__assert_fail@plt+0x23c0>
   35fb8:	mov	r3, #0
   35fbc:	mov	r0, r3
   35fc0:	sub	sp, fp, #4
   35fc4:	pop	{fp, pc}
   35fc8:	push	{fp, lr}
   35fcc:	add	fp, sp, #4
   35fd0:	sub	sp, sp, #56	; 0x38
   35fd4:	str	r0, [fp, #-40]	; 0xffffffd8
   35fd8:	str	r1, [fp, #-44]	; 0xffffffd4
   35fdc:	str	r2, [fp, #-48]	; 0xffffffd0
   35fe0:	str	r3, [fp, #-52]	; 0xffffffcc
   35fe4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   35fe8:	ldr	r3, [r3, #84]	; 0x54
   35fec:	str	r3, [fp, #-12]
   35ff0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   35ff4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   35ff8:	bl	3be2c <__assert_fail@plt+0x2abbc>
   35ffc:	str	r0, [fp, #-16]
   36000:	ldr	r1, [fp, #8]
   36004:	ldr	r0, [fp, #-40]	; 0xffffffd8
   36008:	bl	3be2c <__assert_fail@plt+0x2abbc>
   3600c:	str	r0, [fp, #-20]	; 0xffffffec
   36010:	mov	r3, #0
   36014:	str	r3, [fp, #-8]
   36018:	b	36118 <__assert_fail@plt+0x24ea8>
   3601c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   36020:	ldr	r2, [r3, #116]	; 0x74
   36024:	ldr	r3, [fp, #-44]	; 0xffffffd4
   36028:	ldr	r1, [r3, #8]
   3602c:	ldr	r3, [fp, #-8]
   36030:	lsl	r3, r3, #2
   36034:	add	r3, r1, r3
   36038:	ldr	r3, [r3]
   3603c:	mov	r1, r3
   36040:	mov	r3, r1
   36044:	lsl	r3, r3, #1
   36048:	add	r3, r3, r1
   3604c:	lsl	r3, r3, #3
   36050:	add	r3, r2, r3
   36054:	str	r3, [fp, #-24]	; 0xffffffe8
   36058:	ldr	r3, [fp, #-12]
   3605c:	ldr	r2, [r3]
   36060:	ldr	r3, [fp, #-24]	; 0xffffffe8
   36064:	ldr	r3, [r3]
   36068:	lsl	r3, r3, #3
   3606c:	add	r3, r2, r3
   36070:	ldr	r3, [r3]
   36074:	str	r3, [fp, #-28]	; 0xffffffe4
   36078:	ldr	r3, [fp, #-44]	; 0xffffffd4
   3607c:	ldr	r2, [r3, #8]
   36080:	ldr	r3, [fp, #-8]
   36084:	lsl	r3, r3, #2
   36088:	add	r3, r2, r3
   3608c:	ldr	r1, [r3]
   36090:	ldr	r3, [fp, #-16]
   36094:	str	r3, [sp, #4]
   36098:	ldr	r3, [fp, #-52]	; 0xffffffcc
   3609c:	str	r3, [sp]
   360a0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   360a4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   360a8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   360ac:	bl	36430 <__assert_fail@plt+0x251c0>
   360b0:	str	r0, [fp, #-32]	; 0xffffffe0
   360b4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   360b8:	ldr	r2, [r3, #8]
   360bc:	ldr	r3, [fp, #-8]
   360c0:	lsl	r3, r3, #2
   360c4:	add	r3, r2, r3
   360c8:	ldr	r1, [r3]
   360cc:	ldr	r3, [fp, #-20]	; 0xffffffec
   360d0:	str	r3, [sp, #4]
   360d4:	ldr	r3, [fp, #8]
   360d8:	str	r3, [sp]
   360dc:	ldr	r3, [fp, #4]
   360e0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   360e4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   360e8:	bl	36430 <__assert_fail@plt+0x251c0>
   360ec:	str	r0, [fp, #-36]	; 0xffffffdc
   360f0:	ldr	r2, [fp, #-36]	; 0xffffffdc
   360f4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   360f8:	cmp	r2, r3
   360fc:	bne	36110 <__assert_fail@plt+0x24ea0>
   36100:	ldr	r3, [fp, #-8]
   36104:	add	r3, r3, #1
   36108:	str	r3, [fp, #-8]
   3610c:	b	36118 <__assert_fail@plt+0x24ea8>
   36110:	mov	r3, #1
   36114:	b	36130 <__assert_fail@plt+0x24ec0>
   36118:	ldr	r3, [fp, #-44]	; 0xffffffd4
   3611c:	ldr	r2, [r3, #4]
   36120:	ldr	r3, [fp, #-8]
   36124:	cmp	r2, r3
   36128:	bgt	3601c <__assert_fail@plt+0x24dac>
   3612c:	mov	r3, #0
   36130:	mov	r0, r3
   36134:	sub	sp, fp, #4
   36138:	pop	{fp, pc}
   3613c:	push	{fp, lr}
   36140:	add	fp, sp, #4
   36144:	sub	sp, sp, #56	; 0x38
   36148:	str	r0, [fp, #-40]	; 0xffffffd8
   3614c:	str	r1, [fp, #-44]	; 0xffffffd4
   36150:	str	r2, [fp, #-48]	; 0xffffffd0
   36154:	str	r3, [fp, #-52]	; 0xffffffcc
   36158:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3615c:	ldr	r3, [r3, #84]	; 0x54
   36160:	str	r3, [fp, #-16]
   36164:	ldr	r3, [fp, #-16]
   36168:	ldr	r1, [r3, #24]
   3616c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   36170:	mov	r3, r2
   36174:	lsl	r3, r3, #1
   36178:	add	r3, r3, r2
   3617c:	lsl	r3, r3, #2
   36180:	add	r3, r1, r3
   36184:	str	r3, [fp, #-20]	; 0xffffffec
   36188:	mov	r3, #0
   3618c:	str	r3, [fp, #-8]
   36190:	b	363f8 <__assert_fail@plt+0x25188>
   36194:	ldr	r3, [fp, #-20]	; 0xffffffec
   36198:	ldr	r2, [r3, #8]
   3619c:	ldr	r3, [fp, #-8]
   361a0:	lsl	r3, r3, #2
   361a4:	add	r3, r2, r3
   361a8:	ldr	r3, [r3]
   361ac:	str	r3, [fp, #-24]	; 0xffffffe8
   361b0:	ldr	r3, [fp, #-16]
   361b4:	ldr	r2, [r3]
   361b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   361bc:	lsl	r3, r3, #3
   361c0:	add	r3, r2, r3
   361c4:	ldrb	r3, [r3, #4]
   361c8:	cmp	r3, #8
   361cc:	beq	36360 <__assert_fail@plt+0x250f0>
   361d0:	cmp	r3, #9
   361d4:	beq	3639c <__assert_fail@plt+0x2512c>
   361d8:	cmp	r3, #4
   361dc:	beq	361e4 <__assert_fail@plt+0x24f74>
   361e0:	b	363ec <__assert_fail@plt+0x2517c>
   361e4:	ldr	r3, [fp, #4]
   361e8:	cmn	r3, #1
   361ec:	beq	363d8 <__assert_fail@plt+0x25168>
   361f0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   361f4:	ldr	r1, [r3, #116]	; 0x74
   361f8:	ldr	r2, [fp, #4]
   361fc:	mov	r3, r2
   36200:	lsl	r3, r3, #1
   36204:	add	r3, r3, r2
   36208:	lsl	r3, r3, #3
   3620c:	add	r3, r1, r3
   36210:	str	r3, [fp, #-12]
   36214:	ldr	r3, [fp, #-12]
   36218:	ldr	r2, [r3]
   3621c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   36220:	cmp	r2, r3
   36224:	bne	36338 <__assert_fail@plt+0x250c8>
   36228:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3622c:	cmp	r3, #31
   36230:	bgt	36250 <__assert_fail@plt+0x24fe0>
   36234:	ldr	r3, [fp, #-12]
   36238:	ldr	r2, [r3, #16]
   3623c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   36240:	lsr	r3, r2, r3
   36244:	and	r3, r3, #1
   36248:	cmp	r3, #0
   3624c:	beq	36340 <__assert_fail@plt+0x250d0>
   36250:	ldr	r3, [fp, #-16]
   36254:	ldr	r1, [r3, #20]
   36258:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3625c:	mov	r3, r2
   36260:	lsl	r3, r3, #1
   36264:	add	r3, r3, r2
   36268:	lsl	r3, r3, #2
   3626c:	add	r3, r1, r3
   36270:	ldr	r3, [r3, #8]
   36274:	ldr	r3, [r3]
   36278:	str	r3, [fp, #-28]	; 0xffffffe4
   3627c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   36280:	ldr	r3, [fp, #-52]	; 0xffffffcc
   36284:	cmp	r2, r3
   36288:	bne	362ac <__assert_fail@plt+0x2503c>
   3628c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   36290:	and	r3, r3, #1
   36294:	cmp	r3, #0
   36298:	beq	362a4 <__assert_fail@plt+0x25034>
   3629c:	mvn	r3, #0
   362a0:	b	36424 <__assert_fail@plt+0x251b4>
   362a4:	mov	r3, #0
   362a8:	b	36424 <__assert_fail@plt+0x251b4>
   362ac:	ldr	r3, [fp, #4]
   362b0:	str	r3, [sp]
   362b4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   362b8:	ldr	r2, [fp, #-48]	; 0xffffffd0
   362bc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   362c0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   362c4:	bl	3613c <__assert_fail@plt+0x24ecc>
   362c8:	str	r0, [fp, #-32]	; 0xffffffe0
   362cc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   362d0:	cmn	r3, #1
   362d4:	bne	362e0 <__assert_fail@plt+0x25070>
   362d8:	mvn	r3, #0
   362dc:	b	36424 <__assert_fail@plt+0x251b4>
   362e0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   362e4:	cmp	r3, #0
   362e8:	bne	36304 <__assert_fail@plt+0x25094>
   362ec:	ldr	r3, [fp, #-44]	; 0xffffffd4
   362f0:	and	r3, r3, #2
   362f4:	cmp	r3, #0
   362f8:	beq	36304 <__assert_fail@plt+0x25094>
   362fc:	mov	r3, #0
   36300:	b	36424 <__assert_fail@plt+0x251b4>
   36304:	ldr	r3, [fp, #-48]	; 0xffffffd0
   36308:	cmp	r3, #31
   3630c:	bgt	36344 <__assert_fail@plt+0x250d4>
   36310:	ldr	r3, [fp, #-12]
   36314:	ldr	r2, [r3, #16]
   36318:	mov	r1, #1
   3631c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   36320:	lsl	r3, r1, r3
   36324:	mvn	r3, r3
   36328:	and	r2, r2, r3
   3632c:	ldr	r3, [fp, #-12]
   36330:	str	r2, [r3, #16]
   36334:	b	36344 <__assert_fail@plt+0x250d4>
   36338:	nop			; (mov r0, r0)
   3633c:	b	36344 <__assert_fail@plt+0x250d4>
   36340:	nop			; (mov r0, r0)
   36344:	ldr	r3, [fp, #-12]
   36348:	add	r2, r3, #24
   3634c:	str	r2, [fp, #-12]
   36350:	ldrb	r3, [r3, #20]
   36354:	cmp	r3, #0
   36358:	bne	36214 <__assert_fail@plt+0x24fa4>
   3635c:	b	363d8 <__assert_fail@plt+0x25168>
   36360:	ldr	r3, [fp, #-44]	; 0xffffffd4
   36364:	and	r3, r3, #1
   36368:	cmp	r3, #0
   3636c:	beq	363e0 <__assert_fail@plt+0x25170>
   36370:	ldr	r3, [fp, #-16]
   36374:	ldr	r2, [r3]
   36378:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3637c:	lsl	r3, r3, #3
   36380:	add	r3, r2, r3
   36384:	ldr	r2, [r3]
   36388:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3638c:	cmp	r2, r3
   36390:	bne	363e0 <__assert_fail@plt+0x25170>
   36394:	mvn	r3, #0
   36398:	b	36424 <__assert_fail@plt+0x251b4>
   3639c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   363a0:	and	r3, r3, #2
   363a4:	cmp	r3, #0
   363a8:	beq	363e8 <__assert_fail@plt+0x25178>
   363ac:	ldr	r3, [fp, #-16]
   363b0:	ldr	r2, [r3]
   363b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   363b8:	lsl	r3, r3, #3
   363bc:	add	r3, r2, r3
   363c0:	ldr	r2, [r3]
   363c4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   363c8:	cmp	r2, r3
   363cc:	bne	363e8 <__assert_fail@plt+0x25178>
   363d0:	mov	r3, #0
   363d4:	b	36424 <__assert_fail@plt+0x251b4>
   363d8:	nop			; (mov r0, r0)
   363dc:	b	363ec <__assert_fail@plt+0x2517c>
   363e0:	nop			; (mov r0, r0)
   363e4:	b	363ec <__assert_fail@plt+0x2517c>
   363e8:	nop			; (mov r0, r0)
   363ec:	ldr	r3, [fp, #-8]
   363f0:	add	r3, r3, #1
   363f4:	str	r3, [fp, #-8]
   363f8:	ldr	r3, [fp, #-20]	; 0xffffffec
   363fc:	ldr	r2, [r3, #4]
   36400:	ldr	r3, [fp, #-8]
   36404:	cmp	r2, r3
   36408:	bgt	36194 <__assert_fail@plt+0x24f24>
   3640c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   36410:	and	r3, r3, #2
   36414:	cmp	r3, #0
   36418:	movne	r3, #1
   3641c:	moveq	r3, #0
   36420:	uxtb	r3, r3
   36424:	mov	r0, r3
   36428:	sub	sp, fp, #4
   3642c:	pop	{fp, pc}
   36430:	push	{fp, lr}
   36434:	add	fp, sp, #4
   36438:	sub	sp, sp, #32
   3643c:	str	r0, [fp, #-16]
   36440:	str	r1, [fp, #-20]	; 0xffffffec
   36444:	str	r2, [fp, #-24]	; 0xffffffe8
   36448:	str	r3, [fp, #-28]	; 0xffffffe4
   3644c:	ldr	r3, [fp, #-16]
   36450:	ldr	r1, [r3, #116]	; 0x74
   36454:	ldr	r2, [fp, #-20]	; 0xffffffec
   36458:	mov	r3, r2
   3645c:	lsl	r3, r3, #1
   36460:	add	r3, r3, r2
   36464:	lsl	r3, r3, #3
   36468:	add	r3, r1, r3
   3646c:	str	r3, [fp, #-8]
   36470:	ldr	r3, [fp, #-8]
   36474:	ldr	r2, [r3, #8]
   36478:	ldr	r3, [fp, #4]
   3647c:	cmp	r2, r3
   36480:	ble	3648c <__assert_fail@plt+0x2521c>
   36484:	mvn	r3, #0
   36488:	b	36528 <__assert_fail@plt+0x252b8>
   3648c:	ldr	r3, [fp, #-8]
   36490:	ldr	r2, [r3, #12]
   36494:	ldr	r3, [fp, #4]
   36498:	cmp	r2, r3
   3649c:	bge	364a8 <__assert_fail@plt+0x25238>
   364a0:	mov	r3, #1
   364a4:	b	36528 <__assert_fail@plt+0x252b8>
   364a8:	ldr	r3, [fp, #-8]
   364ac:	ldr	r2, [r3, #8]
   364b0:	ldr	r3, [fp, #4]
   364b4:	cmp	r2, r3
   364b8:	moveq	r3, #1
   364bc:	movne	r3, #0
   364c0:	uxtb	r3, r3
   364c4:	str	r3, [fp, #-12]
   364c8:	ldr	r3, [fp, #-8]
   364cc:	ldr	r2, [r3, #12]
   364d0:	ldr	r3, [fp, #4]
   364d4:	cmp	r2, r3
   364d8:	bne	364e4 <__assert_fail@plt+0x25274>
   364dc:	mov	r3, #2
   364e0:	b	364e8 <__assert_fail@plt+0x25278>
   364e4:	mov	r3, #0
   364e8:	ldr	r2, [fp, #-12]
   364ec:	orr	r3, r2, r3
   364f0:	str	r3, [fp, #-12]
   364f4:	ldr	r3, [fp, #-12]
   364f8:	cmp	r3, #0
   364fc:	bne	36508 <__assert_fail@plt+0x25298>
   36500:	mov	r3, #0
   36504:	b	36528 <__assert_fail@plt+0x252b8>
   36508:	ldr	r3, [fp, #8]
   3650c:	str	r3, [sp]
   36510:	ldr	r3, [fp, #-28]	; 0xffffffe4
   36514:	ldr	r2, [fp, #-24]	; 0xffffffe8
   36518:	ldr	r1, [fp, #-12]
   3651c:	ldr	r0, [fp, #-16]
   36520:	bl	3613c <__assert_fail@plt+0x24ecc>
   36524:	mov	r3, r0
   36528:	mov	r0, r3
   3652c:	sub	sp, fp, #4
   36530:	pop	{fp, pc}
   36534:	push	{fp, lr}
   36538:	add	fp, sp, #4
   3653c:	sub	sp, sp, #64	; 0x40
   36540:	str	r0, [fp, #-56]	; 0xffffffc8
   36544:	str	r1, [fp, #-60]	; 0xffffffc4
   36548:	str	r2, [fp, #-64]	; 0xffffffc0
   3654c:	str	r3, [fp, #-68]	; 0xffffffbc
   36550:	mov	r3, #0
   36554:	str	r3, [fp, #-12]
   36558:	b	36928 <__assert_fail@plt+0x256b8>
   3655c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   36560:	ldr	r2, [r3, #8]
   36564:	ldr	r3, [fp, #-12]
   36568:	lsl	r3, r3, #2
   3656c:	add	r3, r2, r3
   36570:	ldr	r3, [r3]
   36574:	mov	r2, r3
   36578:	mov	r3, r2
   3657c:	lsl	r3, r3, #1
   36580:	add	r3, r3, r2
   36584:	lsl	r3, r3, #3
   36588:	mov	r2, r3
   3658c:	ldr	r3, [fp, #4]
   36590:	add	r3, r3, r2
   36594:	str	r3, [fp, #-24]	; 0xffffffe8
   36598:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3659c:	ldr	r2, [r3, #8]
   365a0:	ldr	r3, [fp, #8]
   365a4:	cmp	r2, r3
   365a8:	bge	36918 <__assert_fail@plt+0x256a8>
   365ac:	ldr	r3, [fp, #-24]	; 0xffffffe8
   365b0:	ldr	r2, [r3, #4]
   365b4:	ldr	r3, [fp, #8]
   365b8:	cmp	r2, r3
   365bc:	blt	36918 <__assert_fail@plt+0x256a8>
   365c0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   365c4:	ldr	r2, [r3]
   365c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   365cc:	ldr	r3, [r3]
   365d0:	lsl	r3, r3, #3
   365d4:	add	r3, r2, r3
   365d8:	ldr	r3, [r3]
   365dc:	str	r3, [fp, #-28]	; 0xffffffe4
   365e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   365e4:	ldr	r2, [r3, #12]
   365e8:	ldr	r3, [fp, #8]
   365ec:	cmp	r2, r3
   365f0:	bne	36834 <__assert_fail@plt+0x255c4>
   365f4:	mvn	r3, #0
   365f8:	str	r3, [fp, #-16]
   365fc:	mvn	r3, #0
   36600:	str	r3, [fp, #-20]	; 0xffffffec
   36604:	mov	r3, #0
   36608:	str	r3, [fp, #-8]
   3660c:	b	366c8 <__assert_fail@plt+0x25458>
   36610:	ldr	r3, [fp, #-60]	; 0xffffffc4
   36614:	ldr	r2, [r3, #8]
   36618:	ldr	r3, [fp, #-8]
   3661c:	lsl	r3, r3, #2
   36620:	add	r3, r2, r3
   36624:	ldr	r3, [r3]
   36628:	str	r3, [fp, #-44]	; 0xffffffd4
   3662c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   36630:	ldr	r2, [r3]
   36634:	ldr	r3, [fp, #-44]	; 0xffffffd4
   36638:	lsl	r3, r3, #3
   3663c:	add	r3, r2, r3
   36640:	ldrb	r3, [r3, #4]
   36644:	str	r3, [fp, #-48]	; 0xffffffd0
   36648:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3664c:	cmp	r3, #8
   36650:	bne	36684 <__assert_fail@plt+0x25414>
   36654:	ldr	r3, [fp, #-56]	; 0xffffffc8
   36658:	ldr	r2, [r3]
   3665c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   36660:	lsl	r3, r3, #3
   36664:	add	r3, r2, r3
   36668:	ldr	r2, [r3]
   3666c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   36670:	cmp	r2, r3
   36674:	bne	36684 <__assert_fail@plt+0x25414>
   36678:	ldr	r3, [fp, #-44]	; 0xffffffd4
   3667c:	str	r3, [fp, #-16]
   36680:	b	366bc <__assert_fail@plt+0x2544c>
   36684:	ldr	r3, [fp, #-48]	; 0xffffffd0
   36688:	cmp	r3, #9
   3668c:	bne	366bc <__assert_fail@plt+0x2544c>
   36690:	ldr	r3, [fp, #-56]	; 0xffffffc8
   36694:	ldr	r2, [r3]
   36698:	ldr	r3, [fp, #-44]	; 0xffffffd4
   3669c:	lsl	r3, r3, #3
   366a0:	add	r3, r2, r3
   366a4:	ldr	r2, [r3]
   366a8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   366ac:	cmp	r2, r3
   366b0:	bne	366bc <__assert_fail@plt+0x2544c>
   366b4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   366b8:	str	r3, [fp, #-20]	; 0xffffffec
   366bc:	ldr	r3, [fp, #-8]
   366c0:	add	r3, r3, #1
   366c4:	str	r3, [fp, #-8]
   366c8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   366cc:	ldr	r2, [r3, #4]
   366d0:	ldr	r3, [fp, #-8]
   366d4:	cmp	r2, r3
   366d8:	bgt	36610 <__assert_fail@plt+0x253a0>
   366dc:	ldr	r3, [fp, #-16]
   366e0:	cmp	r3, #0
   366e4:	blt	36724 <__assert_fail@plt+0x254b4>
   366e8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   366ec:	ldr	r2, [fp, #-60]	; 0xffffffc4
   366f0:	ldr	r1, [fp, #-16]
   366f4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   366f8:	bl	35cf0 <__assert_fail@plt+0x24a80>
   366fc:	str	r0, [fp, #-40]	; 0xffffffd8
   36700:	ldr	r3, [fp, #-40]	; 0xffffffd8
   36704:	cmp	r3, #0
   36708:	movne	r3, #1
   3670c:	moveq	r3, #0
   36710:	uxtb	r3, r3
   36714:	cmp	r3, #0
   36718:	beq	36724 <__assert_fail@plt+0x254b4>
   3671c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   36720:	b	36940 <__assert_fail@plt+0x256d0>
   36724:	ldr	r3, [fp, #-20]	; 0xffffffec
   36728:	cmp	r3, #0
   3672c:	blt	3691c <__assert_fail@plt+0x256ac>
   36730:	mov	r3, #0
   36734:	str	r3, [fp, #-8]
   36738:	b	3681c <__assert_fail@plt+0x255ac>
   3673c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   36740:	ldr	r2, [r3, #8]
   36744:	ldr	r3, [fp, #-8]
   36748:	lsl	r3, r3, #2
   3674c:	add	r3, r2, r3
   36750:	ldr	r3, [r3]
   36754:	str	r3, [fp, #-52]	; 0xffffffcc
   36758:	ldr	r3, [fp, #-56]	; 0xffffffc8
   3675c:	ldr	r1, [r3, #28]
   36760:	ldr	r2, [fp, #-52]	; 0xffffffcc
   36764:	mov	r3, r2
   36768:	lsl	r3, r3, #1
   3676c:	add	r3, r3, r2
   36770:	lsl	r3, r3, #2
   36774:	add	r3, r1, r3
   36778:	ldr	r1, [fp, #-20]	; 0xffffffec
   3677c:	mov	r0, r3
   36780:	bl	2729c <__assert_fail@plt+0x1602c>
   36784:	mov	r3, r0
   36788:	cmp	r3, #0
   3678c:	bne	36810 <__assert_fail@plt+0x255a0>
   36790:	ldr	r3, [fp, #-56]	; 0xffffffc8
   36794:	ldr	r1, [r3, #24]
   36798:	ldr	r2, [fp, #-52]	; 0xffffffcc
   3679c:	mov	r3, r2
   367a0:	lsl	r3, r3, #1
   367a4:	add	r3, r3, r2
   367a8:	lsl	r3, r3, #2
   367ac:	add	r3, r1, r3
   367b0:	ldr	r1, [fp, #-20]	; 0xffffffec
   367b4:	mov	r0, r3
   367b8:	bl	2729c <__assert_fail@plt+0x1602c>
   367bc:	mov	r3, r0
   367c0:	cmp	r3, #0
   367c4:	bne	36810 <__assert_fail@plt+0x255a0>
   367c8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   367cc:	ldr	r2, [fp, #-60]	; 0xffffffc4
   367d0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   367d4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   367d8:	bl	35cf0 <__assert_fail@plt+0x24a80>
   367dc:	str	r0, [fp, #-40]	; 0xffffffd8
   367e0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   367e4:	cmp	r3, #0
   367e8:	movne	r3, #1
   367ec:	moveq	r3, #0
   367f0:	uxtb	r3, r3
   367f4:	cmp	r3, #0
   367f8:	beq	36804 <__assert_fail@plt+0x25594>
   367fc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   36800:	b	36940 <__assert_fail@plt+0x256d0>
   36804:	ldr	r3, [fp, #-8]
   36808:	sub	r3, r3, #1
   3680c:	str	r3, [fp, #-8]
   36810:	ldr	r3, [fp, #-8]
   36814:	add	r3, r3, #1
   36818:	str	r3, [fp, #-8]
   3681c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   36820:	ldr	r2, [r3, #4]
   36824:	ldr	r3, [fp, #-8]
   36828:	cmp	r2, r3
   3682c:	bgt	3673c <__assert_fail@plt+0x254cc>
   36830:	b	3691c <__assert_fail@plt+0x256ac>
   36834:	mov	r3, #0
   36838:	str	r3, [fp, #-8]
   3683c:	b	36900 <__assert_fail@plt+0x25690>
   36840:	ldr	r3, [fp, #-60]	; 0xffffffc4
   36844:	ldr	r2, [r3, #8]
   36848:	ldr	r3, [fp, #-8]
   3684c:	lsl	r3, r3, #2
   36850:	add	r3, r2, r3
   36854:	ldr	r3, [r3]
   36858:	str	r3, [fp, #-32]	; 0xffffffe0
   3685c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   36860:	ldr	r2, [r3]
   36864:	ldr	r3, [fp, #-32]	; 0xffffffe0
   36868:	lsl	r3, r3, #3
   3686c:	add	r3, r2, r3
   36870:	ldrb	r3, [r3, #4]
   36874:	str	r3, [fp, #-36]	; 0xffffffdc
   36878:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3687c:	cmp	r3, #9
   36880:	beq	36890 <__assert_fail@plt+0x25620>
   36884:	ldr	r3, [fp, #-36]	; 0xffffffdc
   36888:	cmp	r3, #8
   3688c:	bne	368f4 <__assert_fail@plt+0x25684>
   36890:	ldr	r3, [fp, #-56]	; 0xffffffc8
   36894:	ldr	r2, [r3]
   36898:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3689c:	lsl	r3, r3, #3
   368a0:	add	r3, r2, r3
   368a4:	ldr	r2, [r3]
   368a8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   368ac:	cmp	r2, r3
   368b0:	bne	368f0 <__assert_fail@plt+0x25680>
   368b4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   368b8:	ldr	r2, [fp, #-60]	; 0xffffffc4
   368bc:	ldr	r1, [fp, #-32]	; 0xffffffe0
   368c0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   368c4:	bl	35cf0 <__assert_fail@plt+0x24a80>
   368c8:	str	r0, [fp, #-40]	; 0xffffffd8
   368cc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   368d0:	cmp	r3, #0
   368d4:	movne	r3, #1
   368d8:	moveq	r3, #0
   368dc:	uxtb	r3, r3
   368e0:	cmp	r3, #0
   368e4:	beq	368f4 <__assert_fail@plt+0x25684>
   368e8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   368ec:	b	36940 <__assert_fail@plt+0x256d0>
   368f0:	nop			; (mov r0, r0)
   368f4:	ldr	r3, [fp, #-8]
   368f8:	add	r3, r3, #1
   368fc:	str	r3, [fp, #-8]
   36900:	ldr	r3, [fp, #-60]	; 0xffffffc4
   36904:	ldr	r2, [r3, #4]
   36908:	ldr	r3, [fp, #-8]
   3690c:	cmp	r2, r3
   36910:	bgt	36840 <__assert_fail@plt+0x255d0>
   36914:	b	3691c <__assert_fail@plt+0x256ac>
   36918:	nop			; (mov r0, r0)
   3691c:	ldr	r3, [fp, #-12]
   36920:	add	r3, r3, #1
   36924:	str	r3, [fp, #-12]
   36928:	ldr	r3, [fp, #-68]	; 0xffffffbc
   3692c:	ldr	r2, [r3, #4]
   36930:	ldr	r3, [fp, #-12]
   36934:	cmp	r2, r3
   36938:	bgt	3655c <__assert_fail@plt+0x252ec>
   3693c:	mov	r3, #0
   36940:	mov	r0, r3
   36944:	sub	sp, fp, #4
   36948:	pop	{fp, pc}
   3694c:	push	{fp, lr}
   36950:	add	fp, sp, #4
   36954:	sub	sp, sp, #104	; 0x68
   36958:	str	r0, [fp, #-88]	; 0xffffffa8
   3695c:	str	r1, [fp, #-92]	; 0xffffffa4
   36960:	str	r2, [fp, #-96]	; 0xffffffa0
   36964:	str	r3, [fp, #-100]	; 0xffffff9c
   36968:	ldr	r3, [fp, #-88]	; 0xffffffa8
   3696c:	ldr	r3, [r3, #84]	; 0x54
   36970:	str	r3, [fp, #-24]	; 0xffffffe8
   36974:	ldr	r1, [fp, #-96]	; 0xffffffa0
   36978:	ldr	r0, [fp, #-88]	; 0xffffffa8
   3697c:	bl	3be2c <__assert_fail@plt+0x2abbc>
   36980:	str	r0, [fp, #-28]	; 0xffffffe4
   36984:	ldr	r3, [fp, #-28]	; 0xffffffe4
   36988:	cmn	r3, #1
   3698c:	bne	36998 <__assert_fail@plt+0x25728>
   36990:	mov	r3, #0
   36994:	b	36de0 <__assert_fail@plt+0x25b70>
   36998:	mov	r3, #0
   3699c:	str	r3, [fp, #-84]	; 0xffffffac
   369a0:	mov	r3, #0
   369a4:	str	r3, [fp, #-12]
   369a8:	b	36d90 <__assert_fail@plt+0x25b20>
   369ac:	ldr	r3, [fp, #-100]	; 0xffffff9c
   369b0:	ldr	r2, [r3, #8]
   369b4:	ldr	r3, [fp, #-12]
   369b8:	lsl	r3, r3, #2
   369bc:	add	r3, r2, r3
   369c0:	ldr	r3, [r3]
   369c4:	str	r3, [fp, #-32]	; 0xffffffe0
   369c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   369cc:	ldr	r2, [r3]
   369d0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   369d4:	lsl	r3, r3, #3
   369d8:	add	r3, r2, r3
   369dc:	ldrb	r3, [r3, #4]
   369e0:	str	r3, [fp, #-36]	; 0xffffffdc
   369e4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   369e8:	ldr	r2, [r3, #8]
   369ec:	ldr	r3, [fp, #-32]	; 0xffffffe0
   369f0:	cmp	r2, r3
   369f4:	bne	36a0c <__assert_fail@plt+0x2579c>
   369f8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   369fc:	ldr	r2, [r3, #12]
   36a00:	ldr	r3, [fp, #-96]	; 0xffffffa0
   36a04:	cmp	r2, r3
   36a08:	beq	36d78 <__assert_fail@plt+0x25b08>
   36a0c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   36a10:	cmp	r3, #4
   36a14:	bne	36d80 <__assert_fail@plt+0x25b10>
   36a18:	ldr	r3, [fp, #-88]	; 0xffffffa8
   36a1c:	ldr	r1, [r3, #116]	; 0x74
   36a20:	ldr	r2, [fp, #-28]	; 0xffffffe4
   36a24:	mov	r3, r2
   36a28:	lsl	r3, r3, #1
   36a2c:	add	r3, r3, r2
   36a30:	lsl	r3, r3, #3
   36a34:	add	r3, r1, r3
   36a38:	str	r3, [fp, #-20]	; 0xffffffec
   36a3c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   36a40:	str	r3, [fp, #-16]
   36a44:	ldr	r3, [fp, #-20]	; 0xffffffec
   36a48:	ldr	r2, [r3]
   36a4c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   36a50:	cmp	r2, r3
   36a54:	bne	36d44 <__assert_fail@plt+0x25ad4>
   36a58:	ldr	r3, [fp, #-20]	; 0xffffffec
   36a5c:	ldr	r2, [r3, #12]
   36a60:	ldr	r3, [fp, #-20]	; 0xffffffec
   36a64:	ldr	r3, [r3, #8]
   36a68:	sub	r3, r2, r3
   36a6c:	str	r3, [fp, #-40]	; 0xffffffd8
   36a70:	ldr	r2, [fp, #-96]	; 0xffffffa0
   36a74:	ldr	r3, [fp, #-40]	; 0xffffffd8
   36a78:	add	r3, r2, r3
   36a7c:	str	r3, [fp, #-44]	; 0xffffffd4
   36a80:	ldr	r3, [fp, #-40]	; 0xffffffd8
   36a84:	cmp	r3, #0
   36a88:	beq	36aa8 <__assert_fail@plt+0x25838>
   36a8c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   36a90:	ldr	r2, [r3, #12]
   36a94:	ldr	r3, [fp, #-32]	; 0xffffffe0
   36a98:	lsl	r3, r3, #2
   36a9c:	add	r3, r2, r3
   36aa0:	ldr	r3, [r3]
   36aa4:	b	36ad0 <__assert_fail@plt+0x25860>
   36aa8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   36aac:	ldr	r1, [r3, #20]
   36ab0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   36ab4:	mov	r3, r2
   36ab8:	lsl	r3, r3, #1
   36abc:	add	r3, r3, r2
   36ac0:	lsl	r3, r3, #2
   36ac4:	add	r3, r1, r3
   36ac8:	ldr	r3, [r3, #8]
   36acc:	ldr	r3, [r3]
   36ad0:	str	r3, [fp, #-48]	; 0xffffffd0
   36ad4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   36ad8:	ldr	r2, [r3, #12]
   36adc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   36ae0:	cmp	r2, r3
   36ae4:	blt	36d4c <__assert_fail@plt+0x25adc>
   36ae8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   36aec:	ldr	r2, [r3]
   36af0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   36af4:	lsl	r3, r3, #2
   36af8:	add	r3, r2, r3
   36afc:	ldr	r3, [r3]
   36b00:	cmp	r3, #0
   36b04:	beq	36d4c <__assert_fail@plt+0x25adc>
   36b08:	ldr	r3, [fp, #-92]	; 0xffffffa4
   36b0c:	ldr	r2, [r3]
   36b10:	ldr	r3, [fp, #-44]	; 0xffffffd4
   36b14:	lsl	r3, r3, #2
   36b18:	add	r3, r2, r3
   36b1c:	ldr	r3, [r3]
   36b20:	cmp	r3, #0
   36b24:	beq	36d4c <__assert_fail@plt+0x25adc>
   36b28:	ldr	r3, [fp, #-92]	; 0xffffffa4
   36b2c:	ldr	r2, [r3]
   36b30:	ldr	r3, [fp, #-44]	; 0xffffffd4
   36b34:	lsl	r3, r3, #2
   36b38:	add	r3, r2, r3
   36b3c:	ldr	r3, [r3]
   36b40:	add	r3, r3, #4
   36b44:	ldr	r1, [fp, #-48]	; 0xffffffd0
   36b48:	mov	r0, r3
   36b4c:	bl	2729c <__assert_fail@plt+0x1602c>
   36b50:	mov	r3, r0
   36b54:	cmp	r3, #0
   36b58:	beq	36d4c <__assert_fail@plt+0x25adc>
   36b5c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   36b60:	add	r1, r3, #16
   36b64:	ldr	r3, [fp, #-44]	; 0xffffffd4
   36b68:	str	r3, [sp, #4]
   36b6c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   36b70:	str	r3, [sp]
   36b74:	ldr	r3, [fp, #-96]	; 0xffffffa0
   36b78:	ldr	r2, [fp, #-32]	; 0xffffffe0
   36b7c:	ldr	r0, [fp, #-88]	; 0xffffffa8
   36b80:	bl	35fc8 <__assert_fail@plt+0x24d58>
   36b84:	mov	r3, r0
   36b88:	cmp	r3, #0
   36b8c:	bne	36d4c <__assert_fail@plt+0x25adc>
   36b90:	ldr	r3, [fp, #-84]	; 0xffffffac
   36b94:	cmp	r3, #0
   36b98:	bne	36bf4 <__assert_fail@plt+0x25984>
   36b9c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   36ba0:	sub	ip, fp, #84	; 0x54
   36ba4:	mov	lr, r3
   36ba8:	ldm	lr!, {r0, r1, r2, r3}
   36bac:	stmia	ip!, {r0, r1, r2, r3}
   36bb0:	ldm	lr, {r0, r1, r2}
   36bb4:	stm	ip, {r0, r1, r2}
   36bb8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   36bbc:	add	r2, r3, #16
   36bc0:	sub	r3, fp, #84	; 0x54
   36bc4:	add	r3, r3, #16
   36bc8:	mov	r1, r2
   36bcc:	mov	r0, r3
   36bd0:	bl	26130 <__assert_fail@plt+0x14ec0>
   36bd4:	str	r0, [fp, #-8]
   36bd8:	ldr	r3, [fp, #-8]
   36bdc:	cmp	r3, #0
   36be0:	movne	r3, #1
   36be4:	moveq	r3, #0
   36be8:	uxtb	r3, r3
   36bec:	cmp	r3, #0
   36bf0:	bne	36db0 <__assert_fail@plt+0x25b40>
   36bf4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   36bf8:	str	r3, [fp, #-76]	; 0xffffffb4
   36bfc:	ldr	r3, [fp, #-96]	; 0xffffffa0
   36c00:	str	r3, [fp, #-72]	; 0xffffffb8
   36c04:	sub	r3, fp, #84	; 0x54
   36c08:	add	r3, r3, #16
   36c0c:	ldr	r1, [fp, #-16]
   36c10:	mov	r0, r3
   36c14:	bl	26e8c <__assert_fail@plt+0x15c1c>
   36c18:	mov	r3, r0
   36c1c:	strb	r3, [fp, #-49]	; 0xffffffcf
   36c20:	ldrb	r3, [fp, #-49]	; 0xffffffcf
   36c24:	eor	r3, r3, #1
   36c28:	uxtb	r3, r3
   36c2c:	cmp	r3, #0
   36c30:	beq	36c40 <__assert_fail@plt+0x259d0>
   36c34:	mov	r3, #12
   36c38:	str	r3, [fp, #-8]
   36c3c:	b	36dc4 <__assert_fail@plt+0x25b54>
   36c40:	ldr	r2, [fp, #-84]	; 0xffffffac
   36c44:	ldr	r3, [fp, #-96]	; 0xffffffa0
   36c48:	lsl	r3, r3, #2
   36c4c:	add	r3, r2, r3
   36c50:	ldr	r3, [r3]
   36c54:	str	r3, [fp, #-56]	; 0xffffffc8
   36c58:	sub	r3, fp, #84	; 0x54
   36c5c:	mov	r1, r3
   36c60:	ldr	r0, [fp, #-88]	; 0xffffffa8
   36c64:	bl	351fc <__assert_fail@plt+0x23f8c>
   36c68:	str	r0, [fp, #-8]
   36c6c:	ldr	r3, [fp, #-8]
   36c70:	cmp	r3, #0
   36c74:	movne	r3, #1
   36c78:	moveq	r3, #0
   36c7c:	uxtb	r3, r3
   36c80:	cmp	r3, #0
   36c84:	bne	36db8 <__assert_fail@plt+0x25b48>
   36c88:	ldr	r3, [fp, #-92]	; 0xffffffa4
   36c8c:	ldr	r3, [r3, #4]
   36c90:	cmp	r3, #0
   36c94:	beq	36cd4 <__assert_fail@plt+0x25a64>
   36c98:	ldr	r3, [fp, #-92]	; 0xffffffa4
   36c9c:	ldr	r1, [r3, #4]
   36ca0:	ldr	r2, [fp, #-84]	; 0xffffffac
   36ca4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   36ca8:	add	r3, r3, #1
   36cac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   36cb0:	bl	357c0 <__assert_fail@plt+0x24550>
   36cb4:	str	r0, [fp, #-8]
   36cb8:	ldr	r3, [fp, #-8]
   36cbc:	cmp	r3, #0
   36cc0:	movne	r3, #1
   36cc4:	moveq	r3, #0
   36cc8:	uxtb	r3, r3
   36ccc:	cmp	r3, #0
   36cd0:	bne	36dc0 <__assert_fail@plt+0x25b50>
   36cd4:	ldr	r2, [fp, #-84]	; 0xffffffac
   36cd8:	ldr	r3, [fp, #-96]	; 0xffffffa0
   36cdc:	lsl	r3, r3, #2
   36ce0:	add	r3, r2, r3
   36ce4:	ldr	r2, [fp, #-56]	; 0xffffffc8
   36ce8:	str	r2, [r3]
   36cec:	sub	r3, fp, #84	; 0x54
   36cf0:	add	r3, r3, #16
   36cf4:	ldr	r1, [fp, #-16]
   36cf8:	mov	r0, r3
   36cfc:	bl	2729c <__assert_fail@plt+0x1602c>
   36d00:	mov	r3, r0
   36d04:	sub	r2, r3, #1
   36d08:	sub	r3, fp, #84	; 0x54
   36d0c:	add	r3, r3, #16
   36d10:	mov	r1, r2
   36d14:	mov	r0, r3
   36d18:	bl	27388 <__assert_fail@plt+0x16118>
   36d1c:	ldr	r3, [fp, #-88]	; 0xffffffa8
   36d20:	ldr	r1, [r3, #116]	; 0x74
   36d24:	ldr	r2, [fp, #-16]
   36d28:	mov	r3, r2
   36d2c:	lsl	r3, r3, #1
   36d30:	add	r3, r3, r2
   36d34:	lsl	r3, r3, #3
   36d38:	add	r3, r1, r3
   36d3c:	str	r3, [fp, #-20]	; 0xffffffec
   36d40:	b	36d50 <__assert_fail@plt+0x25ae0>
   36d44:	nop			; (mov r0, r0)
   36d48:	b	36d50 <__assert_fail@plt+0x25ae0>
   36d4c:	nop			; (mov r0, r0)
   36d50:	ldr	r3, [fp, #-16]
   36d54:	add	r3, r3, #1
   36d58:	str	r3, [fp, #-16]
   36d5c:	ldr	r3, [fp, #-20]	; 0xffffffec
   36d60:	add	r2, r3, #24
   36d64:	str	r2, [fp, #-20]	; 0xffffffec
   36d68:	ldrb	r3, [r3, #20]
   36d6c:	cmp	r3, #0
   36d70:	bne	36a44 <__assert_fail@plt+0x257d4>
   36d74:	b	36d84 <__assert_fail@plt+0x25b14>
   36d78:	nop			; (mov r0, r0)
   36d7c:	b	36d84 <__assert_fail@plt+0x25b14>
   36d80:	nop			; (mov r0, r0)
   36d84:	ldr	r3, [fp, #-12]
   36d88:	add	r3, r3, #1
   36d8c:	str	r3, [fp, #-12]
   36d90:	ldr	r3, [fp, #-100]	; 0xffffff9c
   36d94:	ldr	r2, [r3, #4]
   36d98:	ldr	r3, [fp, #-12]
   36d9c:	cmp	r2, r3
   36da0:	bgt	369ac <__assert_fail@plt+0x2573c>
   36da4:	mov	r3, #0
   36da8:	str	r3, [fp, #-8]
   36dac:	b	36dc4 <__assert_fail@plt+0x25b54>
   36db0:	nop			; (mov r0, r0)
   36db4:	b	36dc4 <__assert_fail@plt+0x25b54>
   36db8:	nop			; (mov r0, r0)
   36dbc:	b	36dc4 <__assert_fail@plt+0x25b54>
   36dc0:	nop			; (mov r0, r0)
   36dc4:	ldr	r3, [fp, #-84]	; 0xffffffac
   36dc8:	cmp	r3, #0
   36dcc:	beq	36ddc <__assert_fail@plt+0x25b6c>
   36dd0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   36dd4:	mov	r0, r3
   36dd8:	bl	13630 <__assert_fail@plt+0x23c0>
   36ddc:	ldr	r3, [fp, #-8]
   36de0:	mov	r0, r3
   36de4:	sub	sp, fp, #4
   36de8:	pop	{fp, pc}
   36dec:	push	{fp, lr}
   36df0:	add	fp, sp, #4
   36df4:	sub	sp, sp, #24
   36df8:	str	r0, [fp, #-16]
   36dfc:	str	r1, [fp, #-20]	; 0xffffffec
   36e00:	str	r2, [fp, #-24]	; 0xffffffe8
   36e04:	str	r3, [fp, #-28]	; 0xffffffe4
   36e08:	ldr	r3, [fp, #-16]
   36e0c:	ldr	r3, [r3, #84]	; 0x54
   36e10:	str	r3, [fp, #-12]
   36e14:	ldr	r2, [fp, #-16]
   36e18:	ldr	r3, [fp, #-28]	; 0xffffffe4
   36e1c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   36e20:	ldr	r0, [fp, #-12]
   36e24:	bl	3aef0 <__assert_fail@plt+0x29c80>
   36e28:	str	r0, [fp, #-8]
   36e2c:	ldr	r3, [fp, #-8]
   36e30:	cmp	r3, #0
   36e34:	ble	36ed0 <__assert_fail@plt+0x25c60>
   36e38:	ldr	r2, [fp, #-28]	; 0xffffffe4
   36e3c:	ldr	r3, [fp, #-8]
   36e40:	add	r2, r2, r3
   36e44:	ldr	r3, [fp, #4]
   36e48:	cmp	r2, r3
   36e4c:	bgt	36ed0 <__assert_fail@plt+0x25c60>
   36e50:	ldr	r3, [fp, #-20]	; 0xffffffec
   36e54:	ldr	r2, [r3]
   36e58:	ldr	r1, [fp, #-28]	; 0xffffffe4
   36e5c:	ldr	r3, [fp, #-8]
   36e60:	add	r3, r1, r3
   36e64:	lsl	r3, r3, #2
   36e68:	add	r3, r2, r3
   36e6c:	ldr	r3, [r3]
   36e70:	cmp	r3, #0
   36e74:	beq	36ec8 <__assert_fail@plt+0x25c58>
   36e78:	ldr	r3, [fp, #-20]	; 0xffffffec
   36e7c:	ldr	r2, [r3]
   36e80:	ldr	r1, [fp, #-28]	; 0xffffffe4
   36e84:	ldr	r3, [fp, #-8]
   36e88:	add	r3, r1, r3
   36e8c:	lsl	r3, r3, #2
   36e90:	add	r3, r2, r3
   36e94:	ldr	r3, [r3]
   36e98:	add	r0, r3, #4
   36e9c:	ldr	r3, [fp, #-12]
   36ea0:	ldr	r2, [r3, #12]
   36ea4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   36ea8:	lsl	r3, r3, #2
   36eac:	add	r3, r2, r3
   36eb0:	ldr	r3, [r3]
   36eb4:	mov	r1, r3
   36eb8:	bl	2729c <__assert_fail@plt+0x1602c>
   36ebc:	mov	r3, r0
   36ec0:	cmp	r3, #0
   36ec4:	bne	36ed0 <__assert_fail@plt+0x25c60>
   36ec8:	mov	r3, #0
   36ecc:	str	r3, [fp, #-8]
   36ed0:	ldr	r3, [fp, #-8]
   36ed4:	mov	r0, r3
   36ed8:	sub	sp, fp, #4
   36edc:	pop	{fp, pc}
   36ee0:	push	{fp, lr}
   36ee4:	add	fp, sp, #4
   36ee8:	sub	sp, sp, #32
   36eec:	str	r0, [fp, #-24]	; 0xffffffe8
   36ef0:	str	r1, [fp, #-28]	; 0xffffffe4
   36ef4:	str	r2, [fp, #-32]	; 0xffffffe0
   36ef8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   36efc:	ldrb	r3, [r3, #52]	; 0x34
   36f00:	lsr	r3, r3, #5
   36f04:	and	r3, r3, #1
   36f08:	uxtb	r3, r3
   36f0c:	cmp	r3, #0
   36f10:	beq	36f54 <__assert_fail@plt+0x25ce4>
   36f14:	ldr	r1, [fp, #-32]	; 0xffffffe0
   36f18:	ldr	r0, [fp, #-28]	; 0xffffffe4
   36f1c:	bl	37530 <__assert_fail@plt+0x262c0>
   36f20:	mov	r2, r0
   36f24:	ldr	r3, [fp, #-24]	; 0xffffffe8
   36f28:	str	r2, [r3]
   36f2c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   36f30:	ldr	r3, [r3]
   36f34:	cmp	r3, #0
   36f38:	movne	r3, #1
   36f3c:	moveq	r3, #0
   36f40:	uxtb	r3, r3
   36f44:	cmp	r3, #0
   36f48:	beq	36f54 <__assert_fail@plt+0x25ce4>
   36f4c:	mov	r3, #0
   36f50:	b	37084 <__assert_fail@plt+0x25e14>
   36f54:	ldr	r3, [fp, #-28]	; 0xffffffe4
   36f58:	ldr	r2, [r3, #4]
   36f5c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   36f60:	ldr	r3, [r3, #40]	; 0x28
   36f64:	add	r0, r3, #1
   36f68:	ldr	r1, [fp, #-28]	; 0xffffffe4
   36f6c:	str	r0, [r1, #40]	; 0x28
   36f70:	add	r3, r2, r3
   36f74:	ldrb	r3, [r3]
   36f78:	strb	r3, [fp, #-5]
   36f7c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   36f80:	ldr	r3, [r3, #44]	; 0x2c
   36f84:	str	r3, [fp, #-12]
   36f88:	ldr	r3, [fp, #-12]
   36f8c:	cmp	r3, #0
   36f90:	movne	r3, #1
   36f94:	moveq	r3, #0
   36f98:	uxtb	r3, r3
   36f9c:	cmp	r3, #0
   36fa0:	beq	36fbc <__assert_fail@plt+0x25d4c>
   36fa4:	ldrb	r3, [fp, #-5]
   36fa8:	lsl	r3, r3, #2
   36fac:	ldr	r2, [fp, #-12]
   36fb0:	add	r3, r2, r3
   36fb4:	ldr	r3, [r3]
   36fb8:	b	37084 <__assert_fail@plt+0x25e14>
   36fbc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   36fc0:	ldr	r3, [r3, #48]	; 0x30
   36fc4:	str	r3, [fp, #-12]
   36fc8:	ldr	r3, [fp, #-12]
   36fcc:	cmp	r3, #0
   36fd0:	movne	r3, #1
   36fd4:	moveq	r3, #0
   36fd8:	uxtb	r3, r3
   36fdc:	cmp	r3, #0
   36fe0:	beq	3704c <__assert_fail@plt+0x25ddc>
   36fe4:	ldr	r0, [fp, #-28]	; 0xffffffe4
   36fe8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   36fec:	ldr	r3, [r3, #40]	; 0x28
   36ff0:	sub	r1, r3, #1
   36ff4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   36ff8:	ldr	r3, [r3, #88]	; 0x58
   36ffc:	mov	r2, r3
   37000:	bl	25d10 <__assert_fail@plt+0x14aa0>
   37004:	str	r0, [fp, #-16]
   37008:	ldr	r3, [fp, #-16]
   3700c:	and	r3, r3, #1
   37010:	cmp	r3, #0
   37014:	beq	37034 <__assert_fail@plt+0x25dc4>
   37018:	ldrb	r3, [fp, #-5]
   3701c:	add	r3, r3, #256	; 0x100
   37020:	lsl	r3, r3, #2
   37024:	ldr	r2, [fp, #-12]
   37028:	add	r3, r2, r3
   3702c:	ldr	r3, [r3]
   37030:	b	37084 <__assert_fail@plt+0x25e14>
   37034:	ldrb	r3, [fp, #-5]
   37038:	lsl	r3, r3, #2
   3703c:	ldr	r2, [fp, #-12]
   37040:	add	r3, r2, r3
   37044:	ldr	r3, [r3]
   37048:	b	37084 <__assert_fail@plt+0x25e14>
   3704c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   37050:	ldr	r3, [r3, #84]	; 0x54
   37054:	ldr	r1, [fp, #-32]	; 0xffffffe0
   37058:	mov	r0, r3
   3705c:	bl	39a18 <__assert_fail@plt+0x287a8>
   37060:	mov	r3, r0
   37064:	eor	r3, r3, #1
   37068:	uxtb	r3, r3
   3706c:	cmp	r3, #0
   37070:	beq	36f7c <__assert_fail@plt+0x25d0c>
   37074:	ldr	r3, [fp, #-24]	; 0xffffffe8
   37078:	mov	r2, #12
   3707c:	str	r2, [r3]
   37080:	mov	r3, #0
   37084:	mov	r0, r3
   37088:	sub	sp, fp, #4
   3708c:	pop	{fp, pc}
   37090:	push	{r4, fp, lr}
   37094:	add	fp, sp, #8
   37098:	sub	sp, sp, #60	; 0x3c
   3709c:	str	r0, [fp, #-56]	; 0xffffffc8
   370a0:	str	r1, [fp, #-60]	; 0xffffffc4
   370a4:	str	r2, [fp, #-64]	; 0xffffffc0
   370a8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   370ac:	ldr	r3, [r3, #84]	; 0x54
   370b0:	str	r3, [fp, #-20]	; 0xffffffec
   370b4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   370b8:	ldr	r3, [r3, #40]	; 0x28
   370bc:	str	r3, [fp, #-24]	; 0xffffffe8
   370c0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   370c4:	ldr	r2, [r3, #104]	; 0x68
   370c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   370cc:	cmp	r2, r3
   370d0:	bge	37100 <__assert_fail@plt+0x25e90>
   370d4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   370d8:	ldr	r2, [r3, #100]	; 0x64
   370dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   370e0:	lsl	r3, r3, #2
   370e4:	add	r3, r2, r3
   370e8:	ldr	r2, [fp, #-64]	; 0xffffffc0
   370ec:	str	r2, [r3]
   370f0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   370f4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   370f8:	str	r2, [r3, #104]	; 0x68
   370fc:	b	37254 <__assert_fail@plt+0x25fe4>
   37100:	ldr	r3, [fp, #-60]	; 0xffffffc4
   37104:	ldr	r2, [r3, #100]	; 0x64
   37108:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3710c:	lsl	r3, r3, #2
   37110:	add	r3, r2, r3
   37114:	ldr	r3, [r3]
   37118:	cmp	r3, #0
   3711c:	bne	37140 <__assert_fail@plt+0x25ed0>
   37120:	ldr	r3, [fp, #-60]	; 0xffffffc4
   37124:	ldr	r2, [r3, #100]	; 0x64
   37128:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3712c:	lsl	r3, r3, #2
   37130:	add	r3, r2, r3
   37134:	ldr	r2, [fp, #-64]	; 0xffffffc0
   37138:	str	r2, [r3]
   3713c:	b	37254 <__assert_fail@plt+0x25fe4>
   37140:	mov	r3, #0
   37144:	str	r3, [fp, #-16]
   37148:	ldr	r3, [fp, #-60]	; 0xffffffc4
   3714c:	ldr	r2, [r3, #100]	; 0x64
   37150:	ldr	r3, [fp, #-24]	; 0xffffffe8
   37154:	lsl	r3, r3, #2
   37158:	add	r3, r2, r3
   3715c:	ldr	r3, [r3]
   37160:	str	r3, [fp, #-28]	; 0xffffffe4
   37164:	ldr	r3, [fp, #-28]	; 0xffffffe4
   37168:	ldr	r3, [r3, #40]	; 0x28
   3716c:	str	r3, [fp, #-32]	; 0xffffffe0
   37170:	ldr	r3, [fp, #-64]	; 0xffffffc0
   37174:	cmp	r3, #0
   37178:	beq	371d0 <__assert_fail@plt+0x25f60>
   3717c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   37180:	ldr	r3, [r3, #40]	; 0x28
   37184:	str	r3, [fp, #-16]
   37188:	sub	r3, fp, #48	; 0x30
   3718c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   37190:	ldr	r1, [fp, #-16]
   37194:	mov	r0, r3
   37198:	bl	266bc <__assert_fail@plt+0x1544c>
   3719c:	mov	r2, r0
   371a0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   371a4:	str	r2, [r3]
   371a8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   371ac:	ldr	r3, [r3]
   371b0:	cmp	r3, #0
   371b4:	movne	r3, #1
   371b8:	moveq	r3, #0
   371bc:	uxtb	r3, r3
   371c0:	cmp	r3, #0
   371c4:	beq	371e0 <__assert_fail@plt+0x25f70>
   371c8:	mov	r3, #0
   371cc:	b	3733c <__assert_fail@plt+0x260cc>
   371d0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   371d4:	sub	r3, fp, #48	; 0x30
   371d8:	ldm	r2, {r0, r1, r2}
   371dc:	stm	r3, {r0, r1, r2}
   371e0:	ldr	r0, [fp, #-60]	; 0xffffffc4
   371e4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   371e8:	ldr	r3, [r3, #40]	; 0x28
   371ec:	sub	r1, r3, #1
   371f0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   371f4:	ldr	r3, [r3, #88]	; 0x58
   371f8:	mov	r2, r3
   371fc:	bl	25d10 <__assert_fail@plt+0x14aa0>
   37200:	str	r0, [fp, #-36]	; 0xffffffdc
   37204:	ldr	r3, [fp, #-60]	; 0xffffffc4
   37208:	ldr	r2, [r3, #100]	; 0x64
   3720c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   37210:	lsl	r3, r3, #2
   37214:	add	r4, r2, r3
   37218:	sub	r2, fp, #48	; 0x30
   3721c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   37220:	ldr	r1, [fp, #-20]	; 0xffffffec
   37224:	ldr	r0, [fp, #-56]	; 0xffffffc8
   37228:	bl	27a34 <__assert_fail@plt+0x167c4>
   3722c:	mov	r3, r0
   37230:	str	r3, [r4]
   37234:	ldr	r3, [r4]
   37238:	str	r3, [fp, #-64]	; 0xffffffc0
   3723c:	ldr	r3, [fp, #-16]
   37240:	cmp	r3, #0
   37244:	beq	37254 <__assert_fail@plt+0x25fe4>
   37248:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3724c:	mov	r0, r3
   37250:	bl	13630 <__assert_fail@plt+0x23c0>
   37254:	ldr	r3, [fp, #-20]	; 0xffffffec
   37258:	ldr	r3, [r3, #76]	; 0x4c
   3725c:	cmp	r3, #0
   37260:	beq	37338 <__assert_fail@plt+0x260c8>
   37264:	ldr	r3, [fp, #-64]	; 0xffffffc0
   37268:	cmp	r3, #0
   3726c:	beq	37338 <__assert_fail@plt+0x260c8>
   37270:	ldr	r3, [fp, #-64]	; 0xffffffc0
   37274:	add	r3, r3, #4
   37278:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3727c:	mov	r1, r3
   37280:	ldr	r0, [fp, #-60]	; 0xffffffc4
   37284:	bl	3740c <__assert_fail@plt+0x2619c>
   37288:	mov	r2, r0
   3728c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   37290:	str	r2, [r3]
   37294:	ldr	r3, [fp, #-56]	; 0xffffffc8
   37298:	ldr	r3, [r3]
   3729c:	cmp	r3, #0
   372a0:	movne	r3, #1
   372a4:	moveq	r3, #0
   372a8:	uxtb	r3, r3
   372ac:	cmp	r3, #0
   372b0:	beq	372bc <__assert_fail@plt+0x2604c>
   372b4:	mov	r3, #0
   372b8:	b	3733c <__assert_fail@plt+0x260cc>
   372bc:	ldr	r3, [fp, #-64]	; 0xffffffc0
   372c0:	ldrb	r3, [r3, #52]	; 0x34
   372c4:	and	r3, r3, #64	; 0x40
   372c8:	uxtb	r3, r3
   372cc:	cmp	r3, #0
   372d0:	beq	37338 <__assert_fail@plt+0x260c8>
   372d4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   372d8:	add	r3, r3, #4
   372dc:	mov	r1, r3
   372e0:	ldr	r0, [fp, #-60]	; 0xffffffc4
   372e4:	bl	37968 <__assert_fail@plt+0x266f8>
   372e8:	mov	r2, r0
   372ec:	ldr	r3, [fp, #-56]	; 0xffffffc8
   372f0:	str	r2, [r3]
   372f4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   372f8:	ldr	r3, [r3]
   372fc:	cmp	r3, #0
   37300:	movne	r3, #1
   37304:	moveq	r3, #0
   37308:	uxtb	r3, r3
   3730c:	cmp	r3, #0
   37310:	beq	3731c <__assert_fail@plt+0x260ac>
   37314:	mov	r3, #0
   37318:	b	3733c <__assert_fail@plt+0x260cc>
   3731c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   37320:	ldr	r2, [r3, #100]	; 0x64
   37324:	ldr	r3, [fp, #-24]	; 0xffffffe8
   37328:	lsl	r3, r3, #2
   3732c:	add	r3, r2, r3
   37330:	ldr	r3, [r3]
   37334:	str	r3, [fp, #-64]	; 0xffffffc0
   37338:	ldr	r3, [fp, #-64]	; 0xffffffc0
   3733c:	mov	r0, r3
   37340:	sub	sp, fp, #8
   37344:	pop	{r4, fp, pc}
   37348:	push	{fp, lr}
   3734c:	add	fp, sp, #4
   37350:	sub	sp, sp, #24
   37354:	str	r0, [fp, #-24]	; 0xffffffe8
   37358:	str	r1, [fp, #-28]	; 0xffffffe4
   3735c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   37360:	ldr	r3, [r3, #104]	; 0x68
   37364:	str	r3, [fp, #-12]
   37368:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3736c:	ldr	r3, [r3, #40]	; 0x28
   37370:	str	r3, [fp, #-8]
   37374:	ldr	r3, [fp, #-8]
   37378:	add	r3, r3, #1
   3737c:	str	r3, [fp, #-8]
   37380:	ldr	r2, [fp, #-8]
   37384:	ldr	r3, [fp, #-12]
   37388:	cmp	r2, r3
   3738c:	ble	37398 <__assert_fail@plt+0x26128>
   37390:	mov	r3, #0
   37394:	b	37400 <__assert_fail@plt+0x26190>
   37398:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3739c:	ldr	r3, [r3, #40]	; 0x28
   373a0:	add	r2, r3, #1
   373a4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   373a8:	str	r2, [r3, #40]	; 0x28
   373ac:	ldr	r3, [fp, #-28]	; 0xffffffe4
   373b0:	ldr	r2, [r3, #100]	; 0x64
   373b4:	ldr	r3, [fp, #-8]
   373b8:	lsl	r3, r3, #2
   373bc:	add	r3, r2, r3
   373c0:	ldr	r3, [r3]
   373c4:	cmp	r3, #0
   373c8:	beq	37374 <__assert_fail@plt+0x26104>
   373cc:	mov	r2, #0
   373d0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   373d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   373d8:	bl	37090 <__assert_fail@plt+0x25e20>
   373dc:	str	r0, [fp, #-16]
   373e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   373e4:	ldr	r3, [r3]
   373e8:	cmp	r3, #0
   373ec:	bne	373fc <__assert_fail@plt+0x2618c>
   373f0:	ldr	r3, [fp, #-16]
   373f4:	cmp	r3, #0
   373f8:	beq	3735c <__assert_fail@plt+0x260ec>
   373fc:	ldr	r3, [fp, #-16]
   37400:	mov	r0, r3
   37404:	sub	sp, fp, #4
   37408:	pop	{fp, pc}
   3740c:	push	{fp, lr}
   37410:	add	fp, sp, #4
   37414:	sub	sp, sp, #32
   37418:	str	r0, [fp, #-24]	; 0xffffffe8
   3741c:	str	r1, [fp, #-28]	; 0xffffffe4
   37420:	str	r2, [fp, #-32]	; 0xffffffe0
   37424:	ldr	r3, [fp, #-24]	; 0xffffffe8
   37428:	ldr	r3, [r3, #84]	; 0x54
   3742c:	str	r3, [fp, #-12]
   37430:	mov	r3, #0
   37434:	str	r3, [fp, #-8]
   37438:	b	3750c <__assert_fail@plt+0x2629c>
   3743c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   37440:	ldr	r2, [r3, #8]
   37444:	ldr	r3, [fp, #-8]
   37448:	lsl	r3, r3, #2
   3744c:	add	r3, r2, r3
   37450:	ldr	r3, [r3]
   37454:	str	r3, [fp, #-16]
   37458:	ldr	r3, [fp, #-12]
   3745c:	ldr	r2, [r3]
   37460:	ldr	r3, [fp, #-16]
   37464:	lsl	r3, r3, #3
   37468:	add	r3, r2, r3
   3746c:	ldrb	r3, [r3, #4]
   37470:	cmp	r3, #8
   37474:	bne	37500 <__assert_fail@plt+0x26290>
   37478:	ldr	r3, [fp, #-12]
   3747c:	ldr	r2, [r3]
   37480:	ldr	r3, [fp, #-16]
   37484:	lsl	r3, r3, #3
   37488:	add	r3, r2, r3
   3748c:	ldr	r3, [r3]
   37490:	cmp	r3, #31
   37494:	bgt	37500 <__assert_fail@plt+0x26290>
   37498:	ldr	r3, [fp, #-12]
   3749c:	ldr	r2, [r3, #80]	; 0x50
   374a0:	ldr	r3, [fp, #-12]
   374a4:	ldr	r1, [r3]
   374a8:	ldr	r3, [fp, #-16]
   374ac:	lsl	r3, r3, #3
   374b0:	add	r3, r1, r3
   374b4:	ldr	r3, [r3]
   374b8:	lsr	r3, r2, r3
   374bc:	and	r3, r3, #1
   374c0:	cmp	r3, #0
   374c4:	beq	37500 <__assert_fail@plt+0x26290>
   374c8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   374cc:	ldr	r1, [fp, #-16]
   374d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   374d4:	bl	3bf30 <__assert_fail@plt+0x2acc0>
   374d8:	str	r0, [fp, #-20]	; 0xffffffec
   374dc:	ldr	r3, [fp, #-20]	; 0xffffffec
   374e0:	cmp	r3, #0
   374e4:	movne	r3, #1
   374e8:	moveq	r3, #0
   374ec:	uxtb	r3, r3
   374f0:	cmp	r3, #0
   374f4:	beq	37500 <__assert_fail@plt+0x26290>
   374f8:	ldr	r3, [fp, #-20]	; 0xffffffec
   374fc:	b	37524 <__assert_fail@plt+0x262b4>
   37500:	ldr	r3, [fp, #-8]
   37504:	add	r3, r3, #1
   37508:	str	r3, [fp, #-8]
   3750c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   37510:	ldr	r2, [r3, #4]
   37514:	ldr	r3, [fp, #-8]
   37518:	cmp	r2, r3
   3751c:	bgt	3743c <__assert_fail@plt+0x261cc>
   37520:	mov	r3, #0
   37524:	mov	r0, r3
   37528:	sub	sp, fp, #4
   3752c:	pop	{fp, pc}
   37530:	push	{r4, fp, lr}
   37534:	add	fp, sp, #8
   37538:	sub	sp, sp, #60	; 0x3c
   3753c:	str	r0, [fp, #-64]	; 0xffffffc0
   37540:	str	r1, [fp, #-68]	; 0xffffffbc
   37544:	ldr	r3, [fp, #-64]	; 0xffffffc0
   37548:	ldr	r3, [r3, #84]	; 0x54
   3754c:	str	r3, [fp, #-20]	; 0xffffffec
   37550:	mov	r3, #0
   37554:	str	r3, [fp, #-16]
   37558:	b	37940 <__assert_fail@plt+0x266d0>
   3755c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   37560:	ldr	r2, [r3, #12]
   37564:	ldr	r3, [fp, #-16]
   37568:	lsl	r3, r3, #2
   3756c:	add	r3, r2, r3
   37570:	ldr	r3, [r3]
   37574:	str	r3, [fp, #-24]	; 0xffffffe8
   37578:	ldr	r3, [fp, #-20]	; 0xffffffec
   3757c:	ldr	r2, [r3]
   37580:	ldr	r3, [fp, #-24]	; 0xffffffe8
   37584:	lsl	r3, r3, #3
   37588:	add	r3, r2, r3
   3758c:	ldrb	r3, [r3, #6]
   37590:	and	r3, r3, #16
   37594:	uxtb	r3, r3
   37598:	cmp	r3, #0
   3759c:	beq	37920 <__assert_fail@plt+0x266b0>
   375a0:	ldr	r3, [fp, #-20]	; 0xffffffec
   375a4:	ldr	r2, [r3]
   375a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   375ac:	lsl	r3, r3, #3
   375b0:	add	r3, r2, r3
   375b4:	ldr	r2, [r3, #4]
   375b8:	ldr	r3, [pc, #932]	; 37964 <__assert_fail@plt+0x266f4>
   375bc:	and	r3, r3, r2
   375c0:	cmp	r3, #0
   375c4:	beq	376f8 <__assert_fail@plt+0x26488>
   375c8:	ldr	r0, [fp, #-64]	; 0xffffffc0
   375cc:	ldr	r3, [fp, #-64]	; 0xffffffc0
   375d0:	ldr	r1, [r3, #40]	; 0x28
   375d4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   375d8:	ldr	r3, [r3, #88]	; 0x58
   375dc:	mov	r2, r3
   375e0:	bl	25d10 <__assert_fail@plt+0x14aa0>
   375e4:	str	r0, [fp, #-28]	; 0xffffffe4
   375e8:	ldr	r3, [fp, #-20]	; 0xffffffec
   375ec:	ldr	r2, [r3]
   375f0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   375f4:	lsl	r3, r3, #3
   375f8:	add	r3, r2, r3
   375fc:	ldr	r3, [r3, #4]
   37600:	lsr	r3, r3, #8
   37604:	lsl	r3, r3, #22
   37608:	lsr	r3, r3, #22
   3760c:	uxth	r3, r3
   37610:	and	r3, r3, #4
   37614:	cmp	r3, #0
   37618:	beq	3762c <__assert_fail@plt+0x263bc>
   3761c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   37620:	and	r3, r3, #1
   37624:	cmp	r3, #0
   37628:	beq	37928 <__assert_fail@plt+0x266b8>
   3762c:	ldr	r3, [fp, #-20]	; 0xffffffec
   37630:	ldr	r2, [r3]
   37634:	ldr	r3, [fp, #-24]	; 0xffffffe8
   37638:	lsl	r3, r3, #3
   3763c:	add	r3, r2, r3
   37640:	ldr	r3, [r3, #4]
   37644:	lsr	r3, r3, #8
   37648:	lsl	r3, r3, #22
   3764c:	lsr	r3, r3, #22
   37650:	uxth	r3, r3
   37654:	and	r3, r3, #8
   37658:	cmp	r3, #0
   3765c:	beq	37670 <__assert_fail@plt+0x26400>
   37660:	ldr	r3, [fp, #-28]	; 0xffffffe4
   37664:	and	r3, r3, #1
   37668:	cmp	r3, #0
   3766c:	bne	37928 <__assert_fail@plt+0x266b8>
   37670:	ldr	r3, [fp, #-20]	; 0xffffffec
   37674:	ldr	r2, [r3]
   37678:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3767c:	lsl	r3, r3, #3
   37680:	add	r3, r2, r3
   37684:	ldr	r3, [r3, #4]
   37688:	lsr	r3, r3, #8
   3768c:	lsl	r3, r3, #22
   37690:	lsr	r3, r3, #22
   37694:	uxth	r3, r3
   37698:	and	r3, r3, #32
   3769c:	cmp	r3, #0
   376a0:	beq	376b4 <__assert_fail@plt+0x26444>
   376a4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   376a8:	and	r3, r3, #2
   376ac:	cmp	r3, #0
   376b0:	beq	37928 <__assert_fail@plt+0x266b8>
   376b4:	ldr	r3, [fp, #-20]	; 0xffffffec
   376b8:	ldr	r2, [r3]
   376bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   376c0:	lsl	r3, r3, #3
   376c4:	add	r3, r2, r3
   376c8:	ldr	r3, [r3, #4]
   376cc:	lsr	r3, r3, #8
   376d0:	lsl	r3, r3, #22
   376d4:	lsr	r3, r3, #22
   376d8:	uxth	r3, r3
   376dc:	and	r3, r3, #128	; 0x80
   376e0:	cmp	r3, #0
   376e4:	beq	376f8 <__assert_fail@plt+0x26488>
   376e8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   376ec:	and	r3, r3, #8
   376f0:	cmp	r3, #0
   376f4:	beq	37928 <__assert_fail@plt+0x266b8>
   376f8:	ldr	r2, [fp, #-64]	; 0xffffffc0
   376fc:	ldr	r3, [fp, #-64]	; 0xffffffc0
   37700:	ldr	r3, [r3, #40]	; 0x28
   37704:	ldr	r1, [fp, #-24]	; 0xffffffe8
   37708:	ldr	r0, [fp, #-20]	; 0xffffffec
   3770c:	bl	3aef0 <__assert_fail@plt+0x29c80>
   37710:	str	r0, [fp, #-32]	; 0xffffffe0
   37714:	ldr	r3, [fp, #-32]	; 0xffffffe0
   37718:	cmp	r3, #0
   3771c:	beq	37930 <__assert_fail@plt+0x266c0>
   37720:	ldr	r3, [fp, #-64]	; 0xffffffc0
   37724:	ldr	r2, [r3, #40]	; 0x28
   37728:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3772c:	add	r3, r2, r3
   37730:	str	r3, [fp, #-36]	; 0xffffffdc
   37734:	ldr	r3, [fp, #-64]	; 0xffffffc0
   37738:	ldr	r2, [r3, #120]	; 0x78
   3773c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   37740:	cmp	r2, r3
   37744:	movge	r2, r2
   37748:	movlt	r2, r3
   3774c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   37750:	str	r2, [r3, #120]	; 0x78
   37754:	ldr	r1, [fp, #-36]	; 0xffffffdc
   37758:	ldr	r0, [fp, #-64]	; 0xffffffc0
   3775c:	bl	356a0 <__assert_fail@plt+0x24430>
   37760:	mov	r3, r0
   37764:	str	r3, [fp, #-48]	; 0xffffffd0
   37768:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3776c:	cmp	r3, #0
   37770:	movne	r3, #1
   37774:	moveq	r3, #0
   37778:	uxtb	r3, r3
   3777c:	cmp	r3, #0
   37780:	beq	3778c <__assert_fail@plt+0x2651c>
   37784:	ldr	r3, [fp, #-48]	; 0xffffffd0
   37788:	b	37958 <__assert_fail@plt+0x266e8>
   3778c:	ldr	r3, [fp, #-20]	; 0xffffffec
   37790:	ldr	r2, [r3, #12]
   37794:	ldr	r3, [fp, #-24]	; 0xffffffe8
   37798:	lsl	r3, r3, #2
   3779c:	add	r3, r2, r3
   377a0:	ldr	r3, [r3]
   377a4:	cmn	r3, #1
   377a8:	ldr	r3, [fp, #-20]	; 0xffffffec
   377ac:	ldr	r2, [r3, #24]
   377b0:	ldr	r3, [fp, #-20]	; 0xffffffec
   377b4:	ldr	r1, [r3, #12]
   377b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   377bc:	lsl	r3, r3, #2
   377c0:	add	r3, r1, r3
   377c4:	ldr	r3, [r3]
   377c8:	mov	r1, r3
   377cc:	mov	r3, r1
   377d0:	lsl	r3, r3, #1
   377d4:	add	r3, r3, r1
   377d8:	lsl	r3, r3, #2
   377dc:	add	r3, r2, r3
   377e0:	str	r3, [fp, #-40]	; 0xffffffd8
   377e4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   377e8:	ldr	r2, [r3, #100]	; 0x64
   377ec:	ldr	r3, [fp, #-36]	; 0xffffffdc
   377f0:	lsl	r3, r3, #2
   377f4:	add	r3, r2, r3
   377f8:	ldr	r3, [r3]
   377fc:	str	r3, [fp, #-44]	; 0xffffffd4
   37800:	ldr	r3, [fp, #-44]	; 0xffffffd4
   37804:	cmp	r3, #0
   37808:	bne	37820 <__assert_fail@plt+0x265b0>
   3780c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   37810:	sub	r3, fp, #60	; 0x3c
   37814:	ldm	r2, {r0, r1, r2}
   37818:	stm	r3, {r0, r1, r2}
   3781c:	b	37864 <__assert_fail@plt+0x265f4>
   37820:	ldr	r3, [fp, #-44]	; 0xffffffd4
   37824:	ldr	r1, [r3, #40]	; 0x28
   37828:	sub	r3, fp, #60	; 0x3c
   3782c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   37830:	mov	r0, r3
   37834:	bl	266bc <__assert_fail@plt+0x1544c>
   37838:	mov	r3, r0
   3783c:	str	r3, [fp, #-48]	; 0xffffffd0
   37840:	ldr	r3, [fp, #-48]	; 0xffffffd0
   37844:	cmp	r3, #0
   37848:	movne	r3, #1
   3784c:	moveq	r3, #0
   37850:	uxtb	r3, r3
   37854:	cmp	r3, #0
   37858:	beq	37864 <__assert_fail@plt+0x265f4>
   3785c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   37860:	b	37958 <__assert_fail@plt+0x266e8>
   37864:	ldr	r0, [fp, #-64]	; 0xffffffc0
   37868:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3786c:	sub	r1, r3, #1
   37870:	ldr	r3, [fp, #-64]	; 0xffffffc0
   37874:	ldr	r3, [r3, #88]	; 0x58
   37878:	mov	r2, r3
   3787c:	bl	25d10 <__assert_fail@plt+0x14aa0>
   37880:	str	r0, [fp, #-28]	; 0xffffffe4
   37884:	ldr	r3, [fp, #-64]	; 0xffffffc0
   37888:	ldr	r2, [r3, #100]	; 0x64
   3788c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   37890:	lsl	r3, r3, #2
   37894:	add	r4, r2, r3
   37898:	sub	r2, fp, #60	; 0x3c
   3789c:	sub	r0, fp, #48	; 0x30
   378a0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   378a4:	ldr	r1, [fp, #-20]	; 0xffffffec
   378a8:	bl	27a34 <__assert_fail@plt+0x167c4>
   378ac:	mov	r3, r0
   378b0:	str	r3, [r4]
   378b4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   378b8:	cmp	r3, #0
   378bc:	beq	378cc <__assert_fail@plt+0x2665c>
   378c0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   378c4:	mov	r0, r3
   378c8:	bl	13630 <__assert_fail@plt+0x23c0>
   378cc:	ldr	r3, [fp, #-64]	; 0xffffffc0
   378d0:	ldr	r2, [r3, #100]	; 0x64
   378d4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   378d8:	lsl	r3, r3, #2
   378dc:	add	r3, r2, r3
   378e0:	ldr	r3, [r3]
   378e4:	cmp	r3, #0
   378e8:	moveq	r3, #1
   378ec:	movne	r3, #0
   378f0:	uxtb	r3, r3
   378f4:	cmp	r3, #0
   378f8:	beq	37934 <__assert_fail@plt+0x266c4>
   378fc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   37900:	cmp	r3, #0
   37904:	movne	r3, #1
   37908:	moveq	r3, #0
   3790c:	uxtb	r3, r3
   37910:	cmp	r3, #0
   37914:	beq	37934 <__assert_fail@plt+0x266c4>
   37918:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3791c:	b	37958 <__assert_fail@plt+0x266e8>
   37920:	nop			; (mov r0, r0)
   37924:	b	37934 <__assert_fail@plt+0x266c4>
   37928:	nop			; (mov r0, r0)
   3792c:	b	37934 <__assert_fail@plt+0x266c4>
   37930:	nop			; (mov r0, r0)
   37934:	ldr	r3, [fp, #-16]
   37938:	add	r3, r3, #1
   3793c:	str	r3, [fp, #-16]
   37940:	ldr	r3, [fp, #-68]	; 0xffffffbc
   37944:	ldr	r2, [r3, #8]
   37948:	ldr	r3, [fp, #-16]
   3794c:	cmp	r2, r3
   37950:	bgt	3755c <__assert_fail@plt+0x262ec>
   37954:	mov	r3, #0
   37958:	mov	r0, r3
   3795c:	sub	sp, fp, #8
   37960:	pop	{r4, fp, pc}
   37964:	andeq	pc, r3, r0, lsl #30
   37968:	push	{r4, fp, lr}
   3796c:	add	fp, sp, #8
   37970:	sub	sp, sp, #84	; 0x54
   37974:	str	r0, [fp, #-88]	; 0xffffffa8
   37978:	str	r1, [fp, #-92]	; 0xffffffa4
   3797c:	ldr	r3, [fp, #-88]	; 0xffffffa8
   37980:	ldr	r3, [r3, #84]	; 0x54
   37984:	str	r3, [fp, #-24]	; 0xffffffe8
   37988:	ldr	r3, [fp, #-88]	; 0xffffffa8
   3798c:	ldr	r3, [r3, #40]	; 0x28
   37990:	str	r3, [fp, #-28]	; 0xffffffe4
   37994:	mov	r3, #0
   37998:	str	r3, [fp, #-16]
   3799c:	b	37f28 <__assert_fail@plt+0x26cb8>
   379a0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   379a4:	ldr	r2, [r3, #8]
   379a8:	ldr	r3, [fp, #-16]
   379ac:	lsl	r3, r3, #2
   379b0:	add	r3, r2, r3
   379b4:	ldr	r3, [r3]
   379b8:	str	r3, [fp, #-32]	; 0xffffffe0
   379bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   379c0:	ldr	r2, [r3]
   379c4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   379c8:	lsl	r3, r3, #3
   379cc:	add	r3, r2, r3
   379d0:	str	r3, [fp, #-36]	; 0xffffffdc
   379d4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   379d8:	ldrb	r3, [r3, #4]
   379dc:	cmp	r3, #4
   379e0:	bne	37f10 <__assert_fail@plt+0x26ca0>
   379e4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   379e8:	ldr	r2, [r3, #4]
   379ec:	ldr	r3, [pc, #1400]	; 37f6c <__assert_fail@plt+0x26cfc>
   379f0:	and	r3, r3, r2
   379f4:	cmp	r3, #0
   379f8:	beq	37ae8 <__assert_fail@plt+0x26878>
   379fc:	ldr	r0, [fp, #-88]	; 0xffffffa8
   37a00:	ldr	r3, [fp, #-88]	; 0xffffffa8
   37a04:	ldr	r3, [r3, #88]	; 0x58
   37a08:	mov	r2, r3
   37a0c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   37a10:	bl	25d10 <__assert_fail@plt+0x14aa0>
   37a14:	str	r0, [fp, #-40]	; 0xffffffd8
   37a18:	ldr	r3, [fp, #-36]	; 0xffffffdc
   37a1c:	ldr	r3, [r3, #4]
   37a20:	lsr	r3, r3, #8
   37a24:	lsl	r3, r3, #22
   37a28:	lsr	r3, r3, #22
   37a2c:	uxth	r3, r3
   37a30:	and	r3, r3, #4
   37a34:	cmp	r3, #0
   37a38:	beq	37a4c <__assert_fail@plt+0x267dc>
   37a3c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   37a40:	and	r3, r3, #1
   37a44:	cmp	r3, #0
   37a48:	beq	37f18 <__assert_fail@plt+0x26ca8>
   37a4c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   37a50:	ldr	r3, [r3, #4]
   37a54:	lsr	r3, r3, #8
   37a58:	lsl	r3, r3, #22
   37a5c:	lsr	r3, r3, #22
   37a60:	uxth	r3, r3
   37a64:	and	r3, r3, #8
   37a68:	cmp	r3, #0
   37a6c:	beq	37a80 <__assert_fail@plt+0x26810>
   37a70:	ldr	r3, [fp, #-40]	; 0xffffffd8
   37a74:	and	r3, r3, #1
   37a78:	cmp	r3, #0
   37a7c:	bne	37f18 <__assert_fail@plt+0x26ca8>
   37a80:	ldr	r3, [fp, #-36]	; 0xffffffdc
   37a84:	ldr	r3, [r3, #4]
   37a88:	lsr	r3, r3, #8
   37a8c:	lsl	r3, r3, #22
   37a90:	lsr	r3, r3, #22
   37a94:	uxth	r3, r3
   37a98:	and	r3, r3, #32
   37a9c:	cmp	r3, #0
   37aa0:	beq	37ab4 <__assert_fail@plt+0x26844>
   37aa4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   37aa8:	and	r3, r3, #2
   37aac:	cmp	r3, #0
   37ab0:	beq	37f18 <__assert_fail@plt+0x26ca8>
   37ab4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   37ab8:	ldr	r3, [r3, #4]
   37abc:	lsr	r3, r3, #8
   37ac0:	lsl	r3, r3, #22
   37ac4:	lsr	r3, r3, #22
   37ac8:	uxth	r3, r3
   37acc:	and	r3, r3, #128	; 0x80
   37ad0:	cmp	r3, #0
   37ad4:	beq	37ae8 <__assert_fail@plt+0x26878>
   37ad8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   37adc:	and	r3, r3, #8
   37ae0:	cmp	r3, #0
   37ae4:	beq	37f18 <__assert_fail@plt+0x26ca8>
   37ae8:	ldr	r3, [fp, #-88]	; 0xffffffa8
   37aec:	ldr	r3, [r3, #108]	; 0x6c
   37af0:	str	r3, [fp, #-20]	; 0xffffffec
   37af4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   37af8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   37afc:	ldr	r0, [fp, #-88]	; 0xffffffa8
   37b00:	bl	37f70 <__assert_fail@plt+0x26d00>
   37b04:	mov	r3, r0
   37b08:	str	r3, [fp, #-68]	; 0xffffffbc
   37b0c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   37b10:	cmp	r3, #0
   37b14:	movne	r3, #1
   37b18:	moveq	r3, #0
   37b1c:	uxtb	r3, r3
   37b20:	cmp	r3, #0
   37b24:	bne	37f48 <__assert_fail@plt+0x26cd8>
   37b28:	ldr	r3, [fp, #-24]	; 0xffffffe8
   37b2c:	ldr	r2, [r3, #12]
   37b30:	ldr	r3, [fp, #-32]	; 0xffffffe0
   37b34:	lsl	r3, r3, #2
   37b38:	add	r3, r2, r3
   37b3c:	ldr	r3, [r3]
   37b40:	cmn	r3, #1
   37b44:	b	37ef8 <__assert_fail@plt+0x26c88>
   37b48:	ldr	r3, [fp, #-88]	; 0xffffffa8
   37b4c:	ldr	r1, [r3, #116]	; 0x74
   37b50:	ldr	r2, [fp, #-20]	; 0xffffffec
   37b54:	mov	r3, r2
   37b58:	lsl	r3, r3, #1
   37b5c:	add	r3, r3, r2
   37b60:	lsl	r3, r3, #3
   37b64:	add	r3, r1, r3
   37b68:	str	r3, [fp, #-44]	; 0xffffffd4
   37b6c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   37b70:	ldr	r2, [r3]
   37b74:	ldr	r3, [fp, #-32]	; 0xffffffe0
   37b78:	cmp	r2, r3
   37b7c:	bne	37ee8 <__assert_fail@plt+0x26c78>
   37b80:	ldr	r3, [fp, #-44]	; 0xffffffd4
   37b84:	ldr	r2, [r3, #4]
   37b88:	ldr	r3, [fp, #-28]	; 0xffffffe4
   37b8c:	cmp	r2, r3
   37b90:	bne	37ee8 <__assert_fail@plt+0x26c78>
   37b94:	ldr	r3, [fp, #-44]	; 0xffffffd4
   37b98:	ldr	r2, [r3, #12]
   37b9c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   37ba0:	ldr	r3, [r3, #8]
   37ba4:	sub	r3, r2, r3
   37ba8:	str	r3, [fp, #-48]	; 0xffffffd0
   37bac:	ldr	r3, [fp, #-48]	; 0xffffffd0
   37bb0:	cmp	r3, #0
   37bb4:	bne	37c04 <__assert_fail@plt+0x26994>
   37bb8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   37bbc:	ldr	r1, [r3, #24]
   37bc0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   37bc4:	ldr	r0, [r3, #20]
   37bc8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   37bcc:	mov	r3, r2
   37bd0:	lsl	r3, r3, #1
   37bd4:	add	r3, r3, r2
   37bd8:	lsl	r3, r3, #2
   37bdc:	add	r3, r0, r3
   37be0:	ldr	r3, [r3, #8]
   37be4:	ldr	r3, [r3]
   37be8:	mov	r2, r3
   37bec:	mov	r3, r2
   37bf0:	lsl	r3, r3, #1
   37bf4:	add	r3, r3, r2
   37bf8:	lsl	r3, r3, #2
   37bfc:	add	r3, r1, r3
   37c00:	b	37c3c <__assert_fail@plt+0x269cc>
   37c04:	ldr	r3, [fp, #-24]	; 0xffffffe8
   37c08:	ldr	r2, [r3, #24]
   37c0c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   37c10:	ldr	r1, [r3, #12]
   37c14:	ldr	r3, [fp, #-32]	; 0xffffffe0
   37c18:	lsl	r3, r3, #2
   37c1c:	add	r3, r1, r3
   37c20:	ldr	r3, [r3]
   37c24:	mov	r1, r3
   37c28:	mov	r3, r1
   37c2c:	lsl	r3, r3, #1
   37c30:	add	r3, r3, r1
   37c34:	lsl	r3, r3, #2
   37c38:	add	r3, r2, r3
   37c3c:	str	r3, [fp, #-52]	; 0xffffffcc
   37c40:	ldr	r3, [fp, #-44]	; 0xffffffd4
   37c44:	ldr	r2, [r3, #12]
   37c48:	ldr	r3, [fp, #-28]	; 0xffffffe4
   37c4c:	add	r2, r2, r3
   37c50:	ldr	r3, [fp, #-44]	; 0xffffffd4
   37c54:	ldr	r3, [r3, #8]
   37c58:	sub	r3, r2, r3
   37c5c:	str	r3, [fp, #-56]	; 0xffffffc8
   37c60:	ldr	r0, [fp, #-88]	; 0xffffffa8
   37c64:	ldr	r3, [fp, #-56]	; 0xffffffc8
   37c68:	sub	r1, r3, #1
   37c6c:	ldr	r3, [fp, #-88]	; 0xffffffa8
   37c70:	ldr	r3, [r3, #88]	; 0x58
   37c74:	mov	r2, r3
   37c78:	bl	25d10 <__assert_fail@plt+0x14aa0>
   37c7c:	str	r0, [fp, #-40]	; 0xffffffd8
   37c80:	ldr	r3, [fp, #-88]	; 0xffffffa8
   37c84:	ldr	r2, [r3, #100]	; 0x64
   37c88:	ldr	r3, [fp, #-56]	; 0xffffffc8
   37c8c:	lsl	r3, r3, #2
   37c90:	add	r3, r2, r3
   37c94:	ldr	r3, [r3]
   37c98:	str	r3, [fp, #-60]	; 0xffffffc4
   37c9c:	ldr	r3, [fp, #-88]	; 0xffffffa8
   37ca0:	ldr	r2, [r3, #100]	; 0x64
   37ca4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   37ca8:	lsl	r3, r3, #2
   37cac:	add	r3, r2, r3
   37cb0:	ldr	r3, [r3]
   37cb4:	cmp	r3, #0
   37cb8:	beq	37cdc <__assert_fail@plt+0x26a6c>
   37cbc:	ldr	r3, [fp, #-88]	; 0xffffffa8
   37cc0:	ldr	r2, [r3, #100]	; 0x64
   37cc4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   37cc8:	lsl	r3, r3, #2
   37ccc:	add	r3, r2, r3
   37cd0:	ldr	r3, [r3]
   37cd4:	ldr	r3, [r3, #8]
   37cd8:	b	37ce0 <__assert_fail@plt+0x26a70>
   37cdc:	mov	r3, #0
   37ce0:	str	r3, [fp, #-64]	; 0xffffffc0
   37ce4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   37ce8:	cmp	r3, #0
   37cec:	bne	37d70 <__assert_fail@plt+0x26b00>
   37cf0:	ldr	r3, [fp, #-88]	; 0xffffffa8
   37cf4:	ldr	r2, [r3, #100]	; 0x64
   37cf8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   37cfc:	lsl	r3, r3, #2
   37d00:	add	r4, r2, r3
   37d04:	sub	r0, fp, #68	; 0x44
   37d08:	ldr	r3, [fp, #-40]	; 0xffffffd8
   37d0c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   37d10:	ldr	r1, [fp, #-24]	; 0xffffffe8
   37d14:	bl	27a34 <__assert_fail@plt+0x167c4>
   37d18:	mov	r3, r0
   37d1c:	str	r3, [r4]
   37d20:	ldr	r3, [fp, #-88]	; 0xffffffa8
   37d24:	ldr	r2, [r3, #100]	; 0x64
   37d28:	ldr	r3, [fp, #-56]	; 0xffffffc8
   37d2c:	lsl	r3, r3, #2
   37d30:	add	r3, r2, r3
   37d34:	ldr	r3, [r3]
   37d38:	cmp	r3, #0
   37d3c:	moveq	r3, #1
   37d40:	movne	r3, #0
   37d44:	uxtb	r3, r3
   37d48:	cmp	r3, #0
   37d4c:	beq	37e4c <__assert_fail@plt+0x26bdc>
   37d50:	ldr	r3, [fp, #-68]	; 0xffffffbc
   37d54:	cmp	r3, #0
   37d58:	movne	r3, #1
   37d5c:	moveq	r3, #0
   37d60:	uxtb	r3, r3
   37d64:	cmp	r3, #0
   37d68:	beq	37e4c <__assert_fail@plt+0x26bdc>
   37d6c:	b	37f5c <__assert_fail@plt+0x26cec>
   37d70:	ldr	r3, [fp, #-60]	; 0xffffffc4
   37d74:	ldr	r1, [r3, #40]	; 0x28
   37d78:	sub	r3, fp, #80	; 0x50
   37d7c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   37d80:	mov	r0, r3
   37d84:	bl	266bc <__assert_fail@plt+0x1544c>
   37d88:	mov	r3, r0
   37d8c:	str	r3, [fp, #-68]	; 0xffffffbc
   37d90:	ldr	r3, [fp, #-68]	; 0xffffffbc
   37d94:	cmp	r3, #0
   37d98:	movne	r3, #1
   37d9c:	moveq	r3, #0
   37da0:	uxtb	r3, r3
   37da4:	cmp	r3, #0
   37da8:	beq	37dbc <__assert_fail@plt+0x26b4c>
   37dac:	ldr	r3, [fp, #-72]	; 0xffffffb8
   37db0:	mov	r0, r3
   37db4:	bl	13630 <__assert_fail@plt+0x23c0>
   37db8:	b	37f5c <__assert_fail@plt+0x26cec>
   37dbc:	ldr	r3, [fp, #-88]	; 0xffffffa8
   37dc0:	ldr	r2, [r3, #100]	; 0x64
   37dc4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   37dc8:	lsl	r3, r3, #2
   37dcc:	add	r4, r2, r3
   37dd0:	sub	r2, fp, #80	; 0x50
   37dd4:	sub	r0, fp, #68	; 0x44
   37dd8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   37ddc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   37de0:	bl	27a34 <__assert_fail@plt+0x167c4>
   37de4:	mov	r3, r0
   37de8:	str	r3, [r4]
   37dec:	ldr	r3, [fp, #-72]	; 0xffffffb8
   37df0:	mov	r0, r3
   37df4:	bl	13630 <__assert_fail@plt+0x23c0>
   37df8:	ldr	r3, [fp, #-88]	; 0xffffffa8
   37dfc:	ldr	r2, [r3, #100]	; 0x64
   37e00:	ldr	r3, [fp, #-56]	; 0xffffffc8
   37e04:	lsl	r3, r3, #2
   37e08:	add	r3, r2, r3
   37e0c:	ldr	r3, [r3]
   37e10:	cmp	r3, #0
   37e14:	moveq	r3, #1
   37e18:	movne	r3, #0
   37e1c:	uxtb	r3, r3
   37e20:	cmp	r3, #0
   37e24:	beq	37e4c <__assert_fail@plt+0x26bdc>
   37e28:	ldr	r3, [fp, #-68]	; 0xffffffbc
   37e2c:	cmp	r3, #0
   37e30:	movne	r3, #1
   37e34:	moveq	r3, #0
   37e38:	uxtb	r3, r3
   37e3c:	cmp	r3, #0
   37e40:	beq	37e4c <__assert_fail@plt+0x26bdc>
   37e44:	nop			; (mov r0, r0)
   37e48:	b	37f5c <__assert_fail@plt+0x26cec>
   37e4c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   37e50:	cmp	r3, #0
   37e54:	bne	37eec <__assert_fail@plt+0x26c7c>
   37e58:	ldr	r3, [fp, #-88]	; 0xffffffa8
   37e5c:	ldr	r2, [r3, #100]	; 0x64
   37e60:	ldr	r3, [fp, #-28]	; 0xffffffe4
   37e64:	lsl	r3, r3, #2
   37e68:	add	r3, r2, r3
   37e6c:	ldr	r3, [r3]
   37e70:	ldr	r2, [r3, #8]
   37e74:	ldr	r3, [fp, #-64]	; 0xffffffc0
   37e78:	cmp	r2, r3
   37e7c:	ble	37eec <__assert_fail@plt+0x26c7c>
   37e80:	ldr	r2, [fp, #-28]	; 0xffffffe4
   37e84:	ldr	r1, [fp, #-52]	; 0xffffffcc
   37e88:	ldr	r0, [fp, #-88]	; 0xffffffa8
   37e8c:	bl	3740c <__assert_fail@plt+0x2619c>
   37e90:	mov	r3, r0
   37e94:	str	r3, [fp, #-68]	; 0xffffffbc
   37e98:	ldr	r3, [fp, #-68]	; 0xffffffbc
   37e9c:	cmp	r3, #0
   37ea0:	movne	r3, #1
   37ea4:	moveq	r3, #0
   37ea8:	uxtb	r3, r3
   37eac:	cmp	r3, #0
   37eb0:	bne	37f50 <__assert_fail@plt+0x26ce0>
   37eb4:	ldr	r1, [fp, #-52]	; 0xffffffcc
   37eb8:	ldr	r0, [fp, #-88]	; 0xffffffa8
   37ebc:	bl	37968 <__assert_fail@plt+0x266f8>
   37ec0:	mov	r3, r0
   37ec4:	str	r3, [fp, #-68]	; 0xffffffbc
   37ec8:	ldr	r3, [fp, #-68]	; 0xffffffbc
   37ecc:	cmp	r3, #0
   37ed0:	movne	r3, #1
   37ed4:	moveq	r3, #0
   37ed8:	uxtb	r3, r3
   37edc:	cmp	r3, #0
   37ee0:	bne	37f58 <__assert_fail@plt+0x26ce8>
   37ee4:	b	37eec <__assert_fail@plt+0x26c7c>
   37ee8:	nop			; (mov r0, r0)
   37eec:	ldr	r3, [fp, #-20]	; 0xffffffec
   37ef0:	add	r3, r3, #1
   37ef4:	str	r3, [fp, #-20]	; 0xffffffec
   37ef8:	ldr	r3, [fp, #-88]	; 0xffffffa8
   37efc:	ldr	r2, [r3, #108]	; 0x6c
   37f00:	ldr	r3, [fp, #-20]	; 0xffffffec
   37f04:	cmp	r2, r3
   37f08:	bgt	37b48 <__assert_fail@plt+0x268d8>
   37f0c:	b	37f1c <__assert_fail@plt+0x26cac>
   37f10:	nop			; (mov r0, r0)
   37f14:	b	37f1c <__assert_fail@plt+0x26cac>
   37f18:	nop			; (mov r0, r0)
   37f1c:	ldr	r3, [fp, #-16]
   37f20:	add	r3, r3, #1
   37f24:	str	r3, [fp, #-16]
   37f28:	ldr	r3, [fp, #-92]	; 0xffffffa4
   37f2c:	ldr	r2, [r3, #4]
   37f30:	ldr	r3, [fp, #-16]
   37f34:	cmp	r2, r3
   37f38:	bgt	379a0 <__assert_fail@plt+0x26730>
   37f3c:	mov	r3, #0
   37f40:	str	r3, [fp, #-68]	; 0xffffffbc
   37f44:	b	37f5c <__assert_fail@plt+0x26cec>
   37f48:	nop			; (mov r0, r0)
   37f4c:	b	37f5c <__assert_fail@plt+0x26cec>
   37f50:	nop			; (mov r0, r0)
   37f54:	b	37f5c <__assert_fail@plt+0x26cec>
   37f58:	nop			; (mov r0, r0)
   37f5c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   37f60:	mov	r0, r3
   37f64:	sub	sp, fp, #8
   37f68:	pop	{r4, fp, pc}
   37f6c:	andeq	pc, r3, r0, lsl #30
   37f70:	push	{fp, lr}
   37f74:	add	fp, sp, #4
   37f78:	sub	sp, sp, #96	; 0x60
   37f7c:	str	r0, [fp, #-72]	; 0xffffffb8
   37f80:	str	r1, [fp, #-76]	; 0xffffffb4
   37f84:	str	r2, [fp, #-80]	; 0xffffffb0
   37f88:	ldr	r3, [fp, #-72]	; 0xffffffb8
   37f8c:	ldr	r3, [r3, #84]	; 0x54
   37f90:	str	r3, [fp, #-32]	; 0xffffffe0
   37f94:	ldr	r3, [fp, #-72]	; 0xffffffb8
   37f98:	ldr	r3, [r3, #4]
   37f9c:	str	r3, [fp, #-12]
   37fa0:	ldr	r1, [fp, #-80]	; 0xffffffb0
   37fa4:	ldr	r0, [fp, #-72]	; 0xffffffb8
   37fa8:	bl	3be2c <__assert_fail@plt+0x2abbc>
   37fac:	str	r0, [fp, #-36]	; 0xffffffdc
   37fb0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   37fb4:	cmn	r3, #1
   37fb8:	beq	38014 <__assert_fail@plt+0x26da4>
   37fbc:	ldr	r3, [fp, #-72]	; 0xffffffb8
   37fc0:	ldr	r1, [r3, #116]	; 0x74
   37fc4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   37fc8:	mov	r3, r2
   37fcc:	lsl	r3, r3, #1
   37fd0:	add	r3, r3, r2
   37fd4:	lsl	r3, r3, #3
   37fd8:	add	r3, r1, r3
   37fdc:	str	r3, [fp, #-16]
   37fe0:	ldr	r3, [fp, #-16]
   37fe4:	ldr	r2, [r3]
   37fe8:	ldr	r3, [fp, #-76]	; 0xffffffb4
   37fec:	cmp	r2, r3
   37ff0:	bne	37ffc <__assert_fail@plt+0x26d8c>
   37ff4:	mov	r3, #0
   37ff8:	b	38594 <__assert_fail@plt+0x27324>
   37ffc:	ldr	r3, [fp, #-16]
   38000:	add	r2, r3, #24
   38004:	str	r2, [fp, #-16]
   38008:	ldrb	r3, [r3, #20]
   3800c:	cmp	r3, #0
   38010:	bne	37fe0 <__assert_fail@plt+0x26d70>
   38014:	ldr	r3, [fp, #-32]	; 0xffffffe0
   38018:	ldr	r2, [r3]
   3801c:	ldr	r3, [fp, #-76]	; 0xffffffb4
   38020:	lsl	r3, r3, #3
   38024:	add	r3, r2, r3
   38028:	ldr	r3, [r3]
   3802c:	str	r3, [fp, #-40]	; 0xffffffd8
   38030:	mov	r3, #0
   38034:	str	r3, [fp, #-8]
   38038:	b	3857c <__assert_fail@plt+0x2730c>
   3803c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   38040:	ldr	r2, [r3, #132]	; 0x84
   38044:	ldr	r3, [fp, #-8]
   38048:	lsl	r3, r3, #2
   3804c:	add	r3, r2, r3
   38050:	ldr	r3, [r3]
   38054:	str	r3, [fp, #-44]	; 0xffffffd4
   38058:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3805c:	ldr	r2, [r3]
   38060:	ldr	r3, [fp, #-44]	; 0xffffffd4
   38064:	ldr	r3, [r3, #4]
   38068:	lsl	r3, r3, #3
   3806c:	add	r3, r2, r3
   38070:	ldr	r2, [r3]
   38074:	ldr	r3, [fp, #-40]	; 0xffffffd8
   38078:	cmp	r2, r3
   3807c:	bne	38554 <__assert_fail@plt+0x272e4>
   38080:	ldr	r3, [fp, #-44]	; 0xffffffd4
   38084:	ldr	r3, [r3]
   38088:	str	r3, [fp, #-24]	; 0xffffffe8
   3808c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   38090:	str	r3, [fp, #-28]	; 0xffffffe4
   38094:	mov	r3, #0
   38098:	str	r3, [fp, #-20]	; 0xffffffec
   3809c:	b	3822c <__assert_fail@plt+0x26fbc>
   380a0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   380a4:	ldr	r2, [r3, #20]
   380a8:	ldr	r3, [fp, #-20]	; 0xffffffec
   380ac:	lsl	r3, r3, #2
   380b0:	add	r3, r2, r3
   380b4:	ldr	r3, [r3]
   380b8:	str	r3, [fp, #-64]	; 0xffffffc0
   380bc:	ldr	r3, [fp, #-64]	; 0xffffffc0
   380c0:	ldr	r2, [r3, #4]
   380c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   380c8:	sub	r3, r2, r3
   380cc:	str	r3, [fp, #-68]	; 0xffffffbc
   380d0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   380d4:	cmp	r3, #0
   380d8:	ble	381a0 <__assert_fail@plt+0x26f30>
   380dc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   380e0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   380e4:	add	r2, r2, r3
   380e8:	ldr	r3, [fp, #-72]	; 0xffffffb8
   380ec:	ldr	r3, [r3, #28]
   380f0:	cmp	r2, r3
   380f4:	movgt	r3, #1
   380f8:	movle	r3, #0
   380fc:	uxtb	r3, r3
   38100:	cmp	r3, #0
   38104:	beq	38170 <__assert_fail@plt+0x26f00>
   38108:	ldr	r2, [fp, #-28]	; 0xffffffe4
   3810c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   38110:	add	r2, r2, r3
   38114:	ldr	r3, [fp, #-72]	; 0xffffffb8
   38118:	ldr	r3, [r3, #48]	; 0x30
   3811c:	cmp	r2, r3
   38120:	bgt	38244 <__assert_fail@plt+0x26fd4>
   38124:	ldr	r2, [fp, #-28]	; 0xffffffe4
   38128:	ldr	r3, [fp, #-68]	; 0xffffffbc
   3812c:	add	r3, r2, r3
   38130:	mov	r1, r3
   38134:	ldr	r0, [fp, #-72]	; 0xffffffb8
   38138:	bl	356a0 <__assert_fail@plt+0x24430>
   3813c:	str	r0, [fp, #-60]	; 0xffffffc4
   38140:	ldr	r3, [fp, #-60]	; 0xffffffc4
   38144:	cmp	r3, #0
   38148:	movne	r3, #1
   3814c:	moveq	r3, #0
   38150:	uxtb	r3, r3
   38154:	cmp	r3, #0
   38158:	beq	38164 <__assert_fail@plt+0x26ef4>
   3815c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   38160:	b	38594 <__assert_fail@plt+0x27324>
   38164:	ldr	r3, [fp, #-72]	; 0xffffffb8
   38168:	ldr	r3, [r3, #4]
   3816c:	str	r3, [fp, #-12]
   38170:	ldr	r3, [fp, #-28]	; 0xffffffe4
   38174:	ldr	r2, [fp, #-12]
   38178:	add	r0, r2, r3
   3817c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   38180:	ldr	r2, [fp, #-12]
   38184:	add	r3, r2, r3
   38188:	ldr	r2, [fp, #-68]	; 0xffffffbc
   3818c:	mov	r1, r3
   38190:	bl	11054 <memcmp@plt>
   38194:	mov	r3, r0
   38198:	cmp	r3, #0
   3819c:	bne	3824c <__assert_fail@plt+0x26fdc>
   381a0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   381a4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   381a8:	add	r3, r2, r3
   381ac:	str	r3, [fp, #-28]	; 0xffffffe4
   381b0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   381b4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   381b8:	add	r3, r2, r3
   381bc:	str	r3, [fp, #-24]	; 0xffffffe8
   381c0:	ldr	r3, [fp, #-80]	; 0xffffffb0
   381c4:	str	r3, [sp]
   381c8:	ldr	r3, [fp, #-76]	; 0xffffffb4
   381cc:	ldr	r2, [fp, #-64]	; 0xffffffc0
   381d0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   381d4:	ldr	r0, [fp, #-72]	; 0xffffffb8
   381d8:	bl	385a0 <__assert_fail@plt+0x27330>
   381dc:	str	r0, [fp, #-60]	; 0xffffffc4
   381e0:	ldr	r3, [fp, #-72]	; 0xffffffb8
   381e4:	ldr	r3, [r3, #4]
   381e8:	str	r3, [fp, #-12]
   381ec:	ldr	r3, [fp, #-60]	; 0xffffffc4
   381f0:	cmp	r3, #1
   381f4:	beq	3821c <__assert_fail@plt+0x26fac>
   381f8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   381fc:	cmp	r3, #0
   38200:	movne	r3, #1
   38204:	moveq	r3, #0
   38208:	uxtb	r3, r3
   3820c:	cmp	r3, #0
   38210:	beq	38220 <__assert_fail@plt+0x26fb0>
   38214:	ldr	r3, [fp, #-60]	; 0xffffffc4
   38218:	b	38594 <__assert_fail@plt+0x27324>
   3821c:	nop			; (mov r0, r0)
   38220:	ldr	r3, [fp, #-20]	; 0xffffffec
   38224:	add	r3, r3, #1
   38228:	str	r3, [fp, #-20]	; 0xffffffec
   3822c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   38230:	ldr	r2, [r3, #16]
   38234:	ldr	r3, [fp, #-20]	; 0xffffffec
   38238:	cmp	r2, r3
   3823c:	bgt	380a0 <__assert_fail@plt+0x26e30>
   38240:	b	38250 <__assert_fail@plt+0x26fe0>
   38244:	nop			; (mov r0, r0)
   38248:	b	38250 <__assert_fail@plt+0x26fe0>
   3824c:	nop			; (mov r0, r0)
   38250:	ldr	r3, [fp, #-44]	; 0xffffffd4
   38254:	ldr	r2, [r3, #16]
   38258:	ldr	r3, [fp, #-20]	; 0xffffffec
   3825c:	cmp	r2, r3
   38260:	bgt	3855c <__assert_fail@plt+0x272ec>
   38264:	ldr	r3, [fp, #-20]	; 0xffffffec
   38268:	cmp	r3, #0
   3826c:	ble	38540 <__assert_fail@plt+0x272d0>
   38270:	ldr	r3, [fp, #-24]	; 0xffffffe8
   38274:	add	r3, r3, #1
   38278:	str	r3, [fp, #-24]	; 0xffffffe8
   3827c:	b	38540 <__assert_fail@plt+0x272d0>
   38280:	ldr	r3, [fp, #-44]	; 0xffffffd4
   38284:	ldr	r3, [r3]
   38288:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3828c:	sub	r3, r2, r3
   38290:	str	r3, [fp, #-48]	; 0xffffffd0
   38294:	ldr	r3, [fp, #-48]	; 0xffffffd0
   38298:	cmp	r3, #0
   3829c:	ble	38358 <__assert_fail@plt+0x270e8>
   382a0:	ldr	r3, [fp, #-72]	; 0xffffffb8
   382a4:	ldr	r2, [r3, #28]
   382a8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   382ac:	cmp	r2, r3
   382b0:	movle	r3, #1
   382b4:	movgt	r3, #0
   382b8:	uxtb	r3, r3
   382bc:	cmp	r3, #0
   382c0:	beq	38320 <__assert_fail@plt+0x270b0>
   382c4:	ldr	r3, [fp, #-72]	; 0xffffffb8
   382c8:	ldr	r2, [r3, #48]	; 0x30
   382cc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   382d0:	cmp	r2, r3
   382d4:	ble	38564 <__assert_fail@plt+0x272f4>
   382d8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   382dc:	add	r3, r3, #1
   382e0:	mov	r1, r3
   382e4:	ldr	r0, [fp, #-72]	; 0xffffffb8
   382e8:	bl	3b6a4 <__assert_fail@plt+0x2a434>
   382ec:	str	r0, [fp, #-60]	; 0xffffffc4
   382f0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   382f4:	cmp	r3, #0
   382f8:	movne	r3, #1
   382fc:	moveq	r3, #0
   38300:	uxtb	r3, r3
   38304:	cmp	r3, #0
   38308:	beq	38314 <__assert_fail@plt+0x270a4>
   3830c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   38310:	b	38594 <__assert_fail@plt+0x27324>
   38314:	ldr	r3, [fp, #-72]	; 0xffffffb8
   38318:	ldr	r3, [r3, #4]
   3831c:	str	r3, [fp, #-12]
   38320:	ldr	r3, [fp, #-28]	; 0xffffffe4
   38324:	add	r2, r3, #1
   38328:	str	r2, [fp, #-28]	; 0xffffffe4
   3832c:	mov	r2, r3
   38330:	ldr	r3, [fp, #-12]
   38334:	add	r3, r3, r2
   38338:	ldrb	r2, [r3]
   3833c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   38340:	sub	r3, r3, #1
   38344:	ldr	r1, [fp, #-12]
   38348:	add	r3, r1, r3
   3834c:	ldrb	r3, [r3]
   38350:	cmp	r2, r3
   38354:	bne	3856c <__assert_fail@plt+0x272fc>
   38358:	ldr	r3, [fp, #-72]	; 0xffffffb8
   3835c:	ldr	r2, [r3, #100]	; 0x64
   38360:	ldr	r3, [fp, #-24]	; 0xffffffe8
   38364:	lsl	r3, r3, #2
   38368:	add	r3, r2, r3
   3836c:	ldr	r3, [r3]
   38370:	cmp	r3, #0
   38374:	beq	38518 <__assert_fail@plt+0x272a8>
   38378:	ldr	r3, [fp, #-72]	; 0xffffffb8
   3837c:	ldr	r2, [r3, #100]	; 0x64
   38380:	ldr	r3, [fp, #-24]	; 0xffffffe8
   38384:	lsl	r3, r3, #2
   38388:	add	r3, r2, r3
   3838c:	ldr	r3, [r3]
   38390:	add	r3, r3, #4
   38394:	str	r3, [fp, #-52]	; 0xffffffcc
   38398:	mov	r3, #9
   3839c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   383a0:	ldr	r1, [fp, #-52]	; 0xffffffcc
   383a4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   383a8:	bl	3869c <__assert_fail@plt+0x2742c>
   383ac:	str	r0, [fp, #-56]	; 0xffffffc8
   383b0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   383b4:	cmn	r3, #1
   383b8:	beq	38520 <__assert_fail@plt+0x272b0>
   383bc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   383c0:	ldr	r3, [r3, #8]
   383c4:	cmp	r3, #0
   383c8:	bne	38414 <__assert_fail@plt+0x271a4>
   383cc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   383d0:	ldr	r3, [r3]
   383d4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   383d8:	sub	r3, r2, r3
   383dc:	add	r3, r3, #1
   383e0:	mov	r1, r3
   383e4:	mov	r0, #12
   383e8:	bl	3ded4 <__assert_fail@plt+0x2cc64>
   383ec:	mov	r3, r0
   383f0:	mov	r2, r3
   383f4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   383f8:	str	r2, [r3, #8]
   383fc:	ldr	r3, [fp, #-44]	; 0xffffffd4
   38400:	ldr	r3, [r3, #8]
   38404:	cmp	r3, #0
   38408:	bne	38414 <__assert_fail@plt+0x271a4>
   3840c:	mov	r3, #12
   38410:	b	38594 <__assert_fail@plt+0x27324>
   38414:	ldr	r3, [fp, #-44]	; 0xffffffd4
   38418:	ldr	r1, [r3, #8]
   3841c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   38420:	ldr	r2, [r3, #4]
   38424:	ldr	r3, [fp, #-44]	; 0xffffffd4
   38428:	ldr	r0, [r3]
   3842c:	mov	r3, #9
   38430:	str	r3, [sp, #8]
   38434:	ldr	r3, [fp, #-24]	; 0xffffffe8
   38438:	str	r3, [sp, #4]
   3843c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   38440:	str	r3, [sp]
   38444:	mov	r3, r0
   38448:	ldr	r0, [fp, #-72]	; 0xffffffb8
   3844c:	bl	38760 <__assert_fail@plt+0x274f0>
   38450:	str	r0, [fp, #-60]	; 0xffffffc4
   38454:	ldr	r3, [fp, #-60]	; 0xffffffc4
   38458:	cmp	r3, #1
   3845c:	beq	38528 <__assert_fail@plt+0x272b8>
   38460:	ldr	r3, [fp, #-60]	; 0xffffffc4
   38464:	cmp	r3, #0
   38468:	movne	r3, #1
   3846c:	moveq	r3, #0
   38470:	uxtb	r3, r3
   38474:	cmp	r3, #0
   38478:	beq	38484 <__assert_fail@plt+0x27214>
   3847c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   38480:	b	38594 <__assert_fail@plt+0x27324>
   38484:	ldr	r2, [fp, #-24]	; 0xffffffe8
   38488:	ldr	r1, [fp, #-56]	; 0xffffffc8
   3848c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   38490:	bl	3c0c0 <__assert_fail@plt+0x2ae50>
   38494:	str	r0, [fp, #-64]	; 0xffffffc0
   38498:	ldr	r3, [fp, #-64]	; 0xffffffc0
   3849c:	cmp	r3, #0
   384a0:	moveq	r3, #1
   384a4:	movne	r3, #0
   384a8:	uxtb	r3, r3
   384ac:	cmp	r3, #0
   384b0:	beq	384bc <__assert_fail@plt+0x2724c>
   384b4:	mov	r3, #12
   384b8:	b	38594 <__assert_fail@plt+0x27324>
   384bc:	ldr	r3, [fp, #-80]	; 0xffffffb0
   384c0:	str	r3, [sp]
   384c4:	ldr	r3, [fp, #-76]	; 0xffffffb4
   384c8:	ldr	r2, [fp, #-64]	; 0xffffffc0
   384cc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   384d0:	ldr	r0, [fp, #-72]	; 0xffffffb8
   384d4:	bl	385a0 <__assert_fail@plt+0x27330>
   384d8:	str	r0, [fp, #-60]	; 0xffffffc4
   384dc:	ldr	r3, [fp, #-72]	; 0xffffffb8
   384e0:	ldr	r3, [r3, #4]
   384e4:	str	r3, [fp, #-12]
   384e8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   384ec:	cmp	r3, #1
   384f0:	beq	38530 <__assert_fail@plt+0x272c0>
   384f4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   384f8:	cmp	r3, #0
   384fc:	movne	r3, #1
   38500:	moveq	r3, #0
   38504:	uxtb	r3, r3
   38508:	cmp	r3, #0
   3850c:	beq	38534 <__assert_fail@plt+0x272c4>
   38510:	ldr	r3, [fp, #-60]	; 0xffffffc4
   38514:	b	38594 <__assert_fail@plt+0x27324>
   38518:	nop			; (mov r0, r0)
   3851c:	b	38534 <__assert_fail@plt+0x272c4>
   38520:	nop			; (mov r0, r0)
   38524:	b	38534 <__assert_fail@plt+0x272c4>
   38528:	nop			; (mov r0, r0)
   3852c:	b	38534 <__assert_fail@plt+0x272c4>
   38530:	nop			; (mov r0, r0)
   38534:	ldr	r3, [fp, #-24]	; 0xffffffe8
   38538:	add	r3, r3, #1
   3853c:	str	r3, [fp, #-24]	; 0xffffffe8
   38540:	ldr	r2, [fp, #-24]	; 0xffffffe8
   38544:	ldr	r3, [fp, #-80]	; 0xffffffb0
   38548:	cmp	r2, r3
   3854c:	ble	38280 <__assert_fail@plt+0x27010>
   38550:	b	38570 <__assert_fail@plt+0x27300>
   38554:	nop			; (mov r0, r0)
   38558:	b	38570 <__assert_fail@plt+0x27300>
   3855c:	nop			; (mov r0, r0)
   38560:	b	38570 <__assert_fail@plt+0x27300>
   38564:	nop			; (mov r0, r0)
   38568:	b	38570 <__assert_fail@plt+0x27300>
   3856c:	nop			; (mov r0, r0)
   38570:	ldr	r3, [fp, #-8]
   38574:	add	r3, r3, #1
   38578:	str	r3, [fp, #-8]
   3857c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   38580:	ldr	r2, [r3, #124]	; 0x7c
   38584:	ldr	r3, [fp, #-8]
   38588:	cmp	r2, r3
   3858c:	bgt	3803c <__assert_fail@plt+0x26dcc>
   38590:	mov	r3, #0
   38594:	mov	r0, r3
   38598:	sub	sp, fp, #4
   3859c:	pop	{fp, pc}
   385a0:	push	{fp, lr}
   385a4:	add	fp, sp, #4
   385a8:	sub	sp, sp, #40	; 0x28
   385ac:	str	r0, [fp, #-16]
   385b0:	str	r1, [fp, #-20]	; 0xffffffec
   385b4:	str	r2, [fp, #-24]	; 0xffffffe8
   385b8:	str	r3, [fp, #-28]	; 0xffffffe4
   385bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   385c0:	add	r1, r3, #8
   385c4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   385c8:	ldr	r2, [r3]
   385cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   385d0:	ldr	r0, [r3, #4]
   385d4:	mov	r3, #8
   385d8:	str	r3, [sp, #8]
   385dc:	ldr	r3, [fp, #4]
   385e0:	str	r3, [sp, #4]
   385e4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   385e8:	str	r3, [sp]
   385ec:	mov	r3, r0
   385f0:	ldr	r0, [fp, #-16]
   385f4:	bl	38760 <__assert_fail@plt+0x274f0>
   385f8:	str	r0, [fp, #-8]
   385fc:	ldr	r3, [fp, #-8]
   38600:	cmp	r3, #0
   38604:	beq	38610 <__assert_fail@plt+0x273a0>
   38608:	ldr	r3, [fp, #-8]
   3860c:	b	38690 <__assert_fail@plt+0x27420>
   38610:	ldr	r3, [fp, #-20]	; 0xffffffec
   38614:	ldr	r2, [r3]
   38618:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3861c:	ldr	r3, [r3, #4]
   38620:	str	r3, [sp]
   38624:	mov	r3, r2
   38628:	ldr	r2, [fp, #4]
   3862c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   38630:	ldr	r0, [fp, #-16]
   38634:	bl	3bb24 <__assert_fail@plt+0x2a8b4>
   38638:	str	r0, [fp, #-8]
   3863c:	ldr	r3, [fp, #-8]
   38640:	cmp	r3, #0
   38644:	movne	r3, #1
   38648:	moveq	r3, #0
   3864c:	uxtb	r3, r3
   38650:	cmp	r3, #0
   38654:	beq	38660 <__assert_fail@plt+0x273f0>
   38658:	ldr	r3, [fp, #-8]
   3865c:	b	38690 <__assert_fail@plt+0x27420>
   38660:	ldr	r3, [fp, #-24]	; 0xffffffe8
   38664:	ldr	r2, [r3, #4]
   38668:	ldr	r3, [fp, #4]
   3866c:	add	r2, r2, r3
   38670:	ldr	r3, [fp, #-20]	; 0xffffffec
   38674:	ldr	r3, [r3]
   38678:	sub	r3, r2, r3
   3867c:	str	r3, [fp, #-12]
   38680:	ldr	r1, [fp, #-12]
   38684:	ldr	r0, [fp, #-16]
   38688:	bl	356a0 <__assert_fail@plt+0x24430>
   3868c:	mov	r3, r0
   38690:	mov	r0, r3
   38694:	sub	sp, fp, #4
   38698:	pop	{fp, pc}
   3869c:	push	{fp}		; (str fp, [sp, #-4]!)
   386a0:	add	fp, sp, #0
   386a4:	sub	sp, sp, #36	; 0x24
   386a8:	str	r0, [fp, #-24]	; 0xffffffe8
   386ac:	str	r1, [fp, #-28]	; 0xffffffe4
   386b0:	str	r2, [fp, #-32]	; 0xffffffe0
   386b4:	str	r3, [fp, #-36]	; 0xffffffdc
   386b8:	mov	r3, #0
   386bc:	str	r3, [fp, #-8]
   386c0:	b	38738 <__assert_fail@plt+0x274c8>
   386c4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   386c8:	ldr	r2, [r3, #8]
   386cc:	ldr	r3, [fp, #-8]
   386d0:	lsl	r3, r3, #2
   386d4:	add	r3, r2, r3
   386d8:	ldr	r3, [r3]
   386dc:	str	r3, [fp, #-12]
   386e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   386e4:	ldr	r2, [r3]
   386e8:	ldr	r3, [fp, #-12]
   386ec:	lsl	r3, r3, #3
   386f0:	add	r3, r2, r3
   386f4:	str	r3, [fp, #-16]
   386f8:	ldr	r3, [fp, #-16]
   386fc:	ldrb	r3, [r3, #4]
   38700:	mov	r2, r3
   38704:	ldr	r3, [fp, #-36]	; 0xffffffdc
   38708:	cmp	r2, r3
   3870c:	bne	3872c <__assert_fail@plt+0x274bc>
   38710:	ldr	r3, [fp, #-16]
   38714:	ldr	r2, [r3]
   38718:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3871c:	cmp	r2, r3
   38720:	bne	3872c <__assert_fail@plt+0x274bc>
   38724:	ldr	r3, [fp, #-12]
   38728:	b	38750 <__assert_fail@plt+0x274e0>
   3872c:	ldr	r3, [fp, #-8]
   38730:	add	r3, r3, #1
   38734:	str	r3, [fp, #-8]
   38738:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3873c:	ldr	r2, [r3, #4]
   38740:	ldr	r3, [fp, #-8]
   38744:	cmp	r2, r3
   38748:	bgt	386c4 <__assert_fail@plt+0x27454>
   3874c:	mvn	r3, #0
   38750:	mov	r0, r3
   38754:	add	sp, fp, #0
   38758:	pop	{fp}		; (ldr fp, [sp], #4)
   3875c:	bx	lr
   38760:	push	{fp, lr}
   38764:	add	fp, sp, #4
   38768:	sub	sp, sp, #96	; 0x60
   3876c:	str	r0, [fp, #-80]	; 0xffffffb0
   38770:	str	r1, [fp, #-84]	; 0xffffffac
   38774:	str	r2, [fp, #-88]	; 0xffffffa8
   38778:	str	r3, [fp, #-92]	; 0xffffffa4
   3877c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   38780:	ldr	r3, [r3, #84]	; 0x54
   38784:	str	r3, [fp, #-20]	; 0xffffffec
   38788:	mov	r3, #0
   3878c:	str	r3, [fp, #-60]	; 0xffffffc4
   38790:	mov	r3, #0
   38794:	str	r3, [fp, #-16]
   38798:	ldr	r3, [fp, #-20]	; 0xffffffec
   3879c:	ldr	r2, [r3]
   387a0:	ldr	r3, [fp, #-88]	; 0xffffffa8
   387a4:	lsl	r3, r3, #3
   387a8:	add	r3, r2, r3
   387ac:	ldr	r3, [r3]
   387b0:	str	r3, [fp, #-24]	; 0xffffffe8
   387b4:	ldr	r3, [fp, #-84]	; 0xffffffac
   387b8:	ldr	r2, [r3, #4]
   387bc:	ldr	r3, [fp, #-80]	; 0xffffffb0
   387c0:	ldr	r1, [r3, #120]	; 0x78
   387c4:	ldr	r3, [fp, #8]
   387c8:	add	r3, r1, r3
   387cc:	add	r3, r3, #1
   387d0:	cmp	r2, r3
   387d4:	movlt	r3, #1
   387d8:	movge	r3, #0
   387dc:	uxtb	r3, r3
   387e0:	cmp	r3, #0
   387e4:	beq	388fc <__assert_fail@plt+0x2768c>
   387e8:	ldr	r3, [fp, #-84]	; 0xffffffac
   387ec:	ldr	r3, [r3, #4]
   387f0:	str	r3, [fp, #-28]	; 0xffffffe4
   387f4:	ldr	r3, [fp, #-80]	; 0xffffffb0
   387f8:	ldr	r2, [r3, #120]	; 0x78
   387fc:	ldr	r3, [fp, #8]
   38800:	add	r3, r2, r3
   38804:	add	r3, r3, #1
   38808:	str	r3, [fp, #-32]	; 0xffffffe0
   3880c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   38810:	mvn	r3, #-2147483648	; 0x80000000
   38814:	sub	r3, r3, r2
   38818:	ldr	r2, [fp, #-32]	; 0xffffffe0
   3881c:	cmp	r3, r2
   38820:	movlt	r3, #1
   38824:	movge	r3, #0
   38828:	uxtb	r3, r3
   3882c:	cmp	r3, #0
   38830:	beq	3883c <__assert_fail@plt+0x275cc>
   38834:	mov	r3, #12
   38838:	b	38ef8 <__assert_fail@plt+0x27c88>
   3883c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   38840:	ldr	r3, [fp, #-32]	; 0xffffffe0
   38844:	add	r3, r2, r3
   38848:	str	r3, [fp, #-36]	; 0xffffffdc
   3884c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   38850:	cmn	r3, #-1073741823	; 0xc0000001
   38854:	movhi	r3, #1
   38858:	movls	r3, #0
   3885c:	uxtb	r3, r3
   38860:	cmp	r3, #0
   38864:	beq	38870 <__assert_fail@plt+0x27600>
   38868:	mov	r3, #12
   3886c:	b	38ef8 <__assert_fail@plt+0x27c88>
   38870:	ldr	r3, [fp, #-84]	; 0xffffffac
   38874:	ldr	r2, [r3, #8]
   38878:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3887c:	lsl	r3, r3, #2
   38880:	mov	r1, r3
   38884:	mov	r0, r2
   38888:	bl	3e040 <__assert_fail@plt+0x2cdd0>
   3888c:	str	r0, [fp, #-40]	; 0xffffffd8
   38890:	ldr	r3, [fp, #-40]	; 0xffffffd8
   38894:	cmp	r3, #0
   38898:	moveq	r3, #1
   3889c:	movne	r3, #0
   388a0:	uxtb	r3, r3
   388a4:	cmp	r3, #0
   388a8:	beq	388b4 <__assert_fail@plt+0x27644>
   388ac:	mov	r3, #12
   388b0:	b	38ef8 <__assert_fail@plt+0x27c88>
   388b4:	ldr	r3, [fp, #-84]	; 0xffffffac
   388b8:	ldr	r2, [fp, #-40]	; 0xffffffd8
   388bc:	str	r2, [r3, #8]
   388c0:	ldr	r3, [fp, #-84]	; 0xffffffac
   388c4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   388c8:	str	r2, [r3, #4]
   388cc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   388d0:	lsl	r3, r3, #2
   388d4:	ldr	r2, [fp, #-40]	; 0xffffffd8
   388d8:	add	r0, r2, r3
   388dc:	ldr	r3, [fp, #-84]	; 0xffffffac
   388e0:	ldr	r2, [r3, #4]
   388e4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   388e8:	sub	r3, r2, r3
   388ec:	lsl	r3, r3, #2
   388f0:	mov	r2, r3
   388f4:	mov	r1, #0
   388f8:	bl	111bc <memset@plt>
   388fc:	ldr	r3, [fp, #-84]	; 0xffffffac
   38900:	ldr	r3, [r3]
   38904:	cmp	r3, #0
   38908:	beq	38918 <__assert_fail@plt+0x276a8>
   3890c:	ldr	r3, [fp, #-84]	; 0xffffffac
   38910:	ldr	r3, [r3]
   38914:	b	3891c <__assert_fail@plt+0x276ac>
   38918:	ldr	r3, [fp, #-92]	; 0xffffffa4
   3891c:	str	r3, [fp, #-8]
   38920:	ldr	r3, [fp, #-80]	; 0xffffffb0
   38924:	ldr	r3, [r3, #100]	; 0x64
   38928:	str	r3, [fp, #-44]	; 0xffffffd4
   3892c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   38930:	ldr	r3, [r3, #40]	; 0x28
   38934:	str	r3, [fp, #-48]	; 0xffffffd0
   38938:	ldr	r3, [fp, #-84]	; 0xffffffac
   3893c:	ldr	r2, [r3, #8]
   38940:	ldr	r3, [fp, #-80]	; 0xffffffb0
   38944:	str	r2, [r3, #100]	; 0x64
   38948:	ldr	r3, [fp, #-80]	; 0xffffffb0
   3894c:	ldr	r2, [fp, #-8]
   38950:	str	r2, [r3, #40]	; 0x28
   38954:	ldr	r0, [fp, #-80]	; 0xffffffb0
   38958:	ldr	r3, [fp, #-8]
   3895c:	sub	r1, r3, #1
   38960:	ldr	r3, [fp, #-80]	; 0xffffffb0
   38964:	ldr	r3, [r3, #88]	; 0x58
   38968:	mov	r2, r3
   3896c:	bl	25d10 <__assert_fail@plt+0x14aa0>
   38970:	str	r0, [fp, #-52]	; 0xffffffcc
   38974:	ldr	r2, [fp, #-8]
   38978:	ldr	r3, [fp, #-92]	; 0xffffffa4
   3897c:	cmp	r2, r3
   38980:	bne	38a0c <__assert_fail@plt+0x2779c>
   38984:	sub	r3, fp, #72	; 0x48
   38988:	ldr	r1, [fp, #-88]	; 0xffffffa8
   3898c:	mov	r0, r3
   38990:	bl	25f7c <__assert_fail@plt+0x14d0c>
   38994:	mov	r3, r0
   38998:	str	r3, [fp, #-60]	; 0xffffffc4
   3899c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   389a0:	cmp	r3, #0
   389a4:	movne	r3, #1
   389a8:	moveq	r3, #0
   389ac:	uxtb	r3, r3
   389b0:	cmp	r3, #0
   389b4:	beq	389c0 <__assert_fail@plt+0x27750>
   389b8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   389bc:	b	38ef8 <__assert_fail@plt+0x27c88>
   389c0:	sub	r1, fp, #72	; 0x48
   389c4:	ldr	r3, [fp, #12]
   389c8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   389cc:	ldr	r0, [fp, #-20]	; 0xffffffec
   389d0:	bl	3922c <__assert_fail@plt+0x27fbc>
   389d4:	mov	r3, r0
   389d8:	str	r3, [fp, #-60]	; 0xffffffc4
   389dc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   389e0:	cmp	r3, #0
   389e4:	movne	r3, #1
   389e8:	moveq	r3, #0
   389ec:	uxtb	r3, r3
   389f0:	cmp	r3, #0
   389f4:	beq	38aa4 <__assert_fail@plt+0x27834>
   389f8:	ldr	r3, [fp, #-64]	; 0xffffffc0
   389fc:	mov	r0, r3
   38a00:	bl	13630 <__assert_fail@plt+0x23c0>
   38a04:	ldr	r3, [fp, #-60]	; 0xffffffc4
   38a08:	b	38ef8 <__assert_fail@plt+0x27c88>
   38a0c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   38a10:	ldr	r2, [r3, #100]	; 0x64
   38a14:	ldr	r3, [fp, #-8]
   38a18:	lsl	r3, r3, #2
   38a1c:	add	r3, r2, r3
   38a20:	ldr	r3, [r3]
   38a24:	str	r3, [fp, #-16]
   38a28:	ldr	r3, [fp, #-16]
   38a2c:	cmp	r3, #0
   38a30:	beq	38a90 <__assert_fail@plt+0x27820>
   38a34:	ldr	r3, [fp, #-16]
   38a38:	ldrb	r3, [r3, #52]	; 0x34
   38a3c:	and	r3, r3, #64	; 0x40
   38a40:	uxtb	r3, r3
   38a44:	cmp	r3, #0
   38a48:	beq	38a90 <__assert_fail@plt+0x27820>
   38a4c:	ldr	r3, [fp, #-16]
   38a50:	add	r2, r3, #4
   38a54:	sub	r3, fp, #72	; 0x48
   38a58:	mov	r1, r2
   38a5c:	mov	r0, r3
   38a60:	bl	26130 <__assert_fail@plt+0x14ec0>
   38a64:	mov	r3, r0
   38a68:	str	r3, [fp, #-60]	; 0xffffffc4
   38a6c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   38a70:	cmp	r3, #0
   38a74:	movne	r3, #1
   38a78:	moveq	r3, #0
   38a7c:	uxtb	r3, r3
   38a80:	cmp	r3, #0
   38a84:	beq	38aa4 <__assert_fail@plt+0x27834>
   38a88:	ldr	r3, [fp, #-60]	; 0xffffffc4
   38a8c:	b	38ef8 <__assert_fail@plt+0x27c88>
   38a90:	sub	r3, fp, #72	; 0x48
   38a94:	mov	r2, #12
   38a98:	mov	r1, #0
   38a9c:	mov	r0, r3
   38aa0:	bl	111bc <memset@plt>
   38aa4:	ldr	r2, [fp, #-8]
   38aa8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   38aac:	cmp	r2, r3
   38ab0:	beq	38ad8 <__assert_fail@plt+0x27868>
   38ab4:	ldr	r3, [fp, #-16]
   38ab8:	cmp	r3, #0
   38abc:	beq	38bb8 <__assert_fail@plt+0x27948>
   38ac0:	ldr	r3, [fp, #-16]
   38ac4:	ldrb	r3, [r3, #52]	; 0x34
   38ac8:	and	r3, r3, #64	; 0x40
   38acc:	uxtb	r3, r3
   38ad0:	cmp	r3, #0
   38ad4:	beq	38bb8 <__assert_fail@plt+0x27948>
   38ad8:	ldr	r3, [fp, #-68]	; 0xffffffbc
   38adc:	cmp	r3, #0
   38ae0:	beq	38b38 <__assert_fail@plt+0x278c8>
   38ae4:	sub	r1, fp, #72	; 0x48
   38ae8:	ldr	r3, [fp, #12]
   38aec:	str	r3, [sp]
   38af0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   38af4:	ldr	r2, [fp, #-8]
   38af8:	ldr	r0, [fp, #-80]	; 0xffffffb0
   38afc:	bl	395f4 <__assert_fail@plt+0x28384>
   38b00:	mov	r3, r0
   38b04:	str	r3, [fp, #-60]	; 0xffffffc4
   38b08:	ldr	r3, [fp, #-60]	; 0xffffffc4
   38b0c:	cmp	r3, #0
   38b10:	movne	r3, #1
   38b14:	moveq	r3, #0
   38b18:	uxtb	r3, r3
   38b1c:	cmp	r3, #0
   38b20:	beq	38b38 <__assert_fail@plt+0x278c8>
   38b24:	ldr	r3, [fp, #-64]	; 0xffffffc0
   38b28:	mov	r0, r3
   38b2c:	bl	13630 <__assert_fail@plt+0x23c0>
   38b30:	ldr	r3, [fp, #-60]	; 0xffffffc4
   38b34:	b	38ef8 <__assert_fail@plt+0x27c88>
   38b38:	sub	r2, fp, #72	; 0x48
   38b3c:	sub	r0, fp, #60	; 0x3c
   38b40:	ldr	r3, [fp, #-52]	; 0xffffffcc
   38b44:	ldr	r1, [fp, #-20]	; 0xffffffec
   38b48:	bl	27a34 <__assert_fail@plt+0x167c4>
   38b4c:	str	r0, [fp, #-16]
   38b50:	ldr	r3, [fp, #-16]
   38b54:	cmp	r3, #0
   38b58:	moveq	r3, #1
   38b5c:	movne	r3, #0
   38b60:	uxtb	r3, r3
   38b64:	cmp	r3, #0
   38b68:	beq	38b9c <__assert_fail@plt+0x2792c>
   38b6c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   38b70:	cmp	r3, #0
   38b74:	movne	r3, #1
   38b78:	moveq	r3, #0
   38b7c:	uxtb	r3, r3
   38b80:	cmp	r3, #0
   38b84:	beq	38b9c <__assert_fail@plt+0x2792c>
   38b88:	ldr	r3, [fp, #-64]	; 0xffffffc0
   38b8c:	mov	r0, r3
   38b90:	bl	13630 <__assert_fail@plt+0x23c0>
   38b94:	ldr	r3, [fp, #-60]	; 0xffffffc4
   38b98:	b	38ef8 <__assert_fail@plt+0x27c88>
   38b9c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   38ba0:	ldr	r2, [r3, #100]	; 0x64
   38ba4:	ldr	r3, [fp, #-8]
   38ba8:	lsl	r3, r3, #2
   38bac:	add	r3, r2, r3
   38bb0:	ldr	r2, [fp, #-16]
   38bb4:	str	r2, [r3]
   38bb8:	mov	r3, #0
   38bbc:	str	r3, [fp, #-12]
   38bc0:	b	38e2c <__assert_fail@plt+0x27bbc>
   38bc4:	mov	r3, #0
   38bc8:	str	r3, [fp, #-68]	; 0xffffffbc
   38bcc:	ldr	r3, [fp, #-80]	; 0xffffffb0
   38bd0:	ldr	r2, [r3, #100]	; 0x64
   38bd4:	ldr	r3, [fp, #-8]
   38bd8:	add	r3, r3, #1
   38bdc:	lsl	r3, r3, #2
   38be0:	add	r3, r2, r3
   38be4:	ldr	r3, [r3]
   38be8:	cmp	r3, #0
   38bec:	beq	38c58 <__assert_fail@plt+0x279e8>
   38bf0:	ldr	r3, [fp, #-80]	; 0xffffffb0
   38bf4:	ldr	r2, [r3, #100]	; 0x64
   38bf8:	ldr	r3, [fp, #-8]
   38bfc:	add	r3, r3, #1
   38c00:	lsl	r3, r3, #2
   38c04:	add	r3, r2, r3
   38c08:	ldr	r3, [r3]
   38c0c:	add	r2, r3, #4
   38c10:	sub	r3, fp, #72	; 0x48
   38c14:	mov	r1, r2
   38c18:	mov	r0, r3
   38c1c:	bl	26a38 <__assert_fail@plt+0x157c8>
   38c20:	mov	r3, r0
   38c24:	str	r3, [fp, #-60]	; 0xffffffc4
   38c28:	ldr	r3, [fp, #-60]	; 0xffffffc4
   38c2c:	cmp	r3, #0
   38c30:	movne	r3, #1
   38c34:	moveq	r3, #0
   38c38:	uxtb	r3, r3
   38c3c:	cmp	r3, #0
   38c40:	beq	38c58 <__assert_fail@plt+0x279e8>
   38c44:	ldr	r3, [fp, #-64]	; 0xffffffc0
   38c48:	mov	r0, r3
   38c4c:	bl	13630 <__assert_fail@plt+0x23c0>
   38c50:	ldr	r3, [fp, #-60]	; 0xffffffc4
   38c54:	b	38ef8 <__assert_fail@plt+0x27c88>
   38c58:	ldr	r3, [fp, #-16]
   38c5c:	cmp	r3, #0
   38c60:	beq	38cb4 <__assert_fail@plt+0x27a44>
   38c64:	ldr	r3, [fp, #-16]
   38c68:	add	r2, r3, #16
   38c6c:	sub	r3, fp, #72	; 0x48
   38c70:	ldr	r1, [fp, #-8]
   38c74:	ldr	r0, [fp, #-80]	; 0xffffffb0
   38c78:	bl	38f04 <__assert_fail@plt+0x27c94>
   38c7c:	mov	r3, r0
   38c80:	str	r3, [fp, #-60]	; 0xffffffc4
   38c84:	ldr	r3, [fp, #-60]	; 0xffffffc4
   38c88:	cmp	r3, #0
   38c8c:	movne	r3, #1
   38c90:	moveq	r3, #0
   38c94:	uxtb	r3, r3
   38c98:	cmp	r3, #0
   38c9c:	beq	38cb4 <__assert_fail@plt+0x27a44>
   38ca0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   38ca4:	mov	r0, r3
   38ca8:	bl	13630 <__assert_fail@plt+0x23c0>
   38cac:	ldr	r3, [fp, #-60]	; 0xffffffc4
   38cb0:	b	38ef8 <__assert_fail@plt+0x27c88>
   38cb4:	ldr	r3, [fp, #-8]
   38cb8:	add	r3, r3, #1
   38cbc:	str	r3, [fp, #-8]
   38cc0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   38cc4:	cmp	r3, #0
   38cc8:	beq	38d6c <__assert_fail@plt+0x27afc>
   38ccc:	sub	r1, fp, #72	; 0x48
   38cd0:	ldr	r3, [fp, #12]
   38cd4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   38cd8:	ldr	r0, [fp, #-20]	; 0xffffffec
   38cdc:	bl	3922c <__assert_fail@plt+0x27fbc>
   38ce0:	mov	r3, r0
   38ce4:	str	r3, [fp, #-60]	; 0xffffffc4
   38ce8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   38cec:	cmp	r3, #0
   38cf0:	movne	r3, #1
   38cf4:	moveq	r3, #0
   38cf8:	uxtb	r3, r3
   38cfc:	cmp	r3, #0
   38d00:	beq	38d18 <__assert_fail@plt+0x27aa8>
   38d04:	ldr	r3, [fp, #-64]	; 0xffffffc0
   38d08:	mov	r0, r3
   38d0c:	bl	13630 <__assert_fail@plt+0x23c0>
   38d10:	ldr	r3, [fp, #-60]	; 0xffffffc4
   38d14:	b	38ef8 <__assert_fail@plt+0x27c88>
   38d18:	sub	r1, fp, #72	; 0x48
   38d1c:	ldr	r3, [fp, #12]
   38d20:	str	r3, [sp]
   38d24:	ldr	r3, [fp, #-24]	; 0xffffffe8
   38d28:	ldr	r2, [fp, #-8]
   38d2c:	ldr	r0, [fp, #-80]	; 0xffffffb0
   38d30:	bl	395f4 <__assert_fail@plt+0x28384>
   38d34:	mov	r3, r0
   38d38:	str	r3, [fp, #-60]	; 0xffffffc4
   38d3c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   38d40:	cmp	r3, #0
   38d44:	movne	r3, #1
   38d48:	moveq	r3, #0
   38d4c:	uxtb	r3, r3
   38d50:	cmp	r3, #0
   38d54:	beq	38d6c <__assert_fail@plt+0x27afc>
   38d58:	ldr	r3, [fp, #-64]	; 0xffffffc0
   38d5c:	mov	r0, r3
   38d60:	bl	13630 <__assert_fail@plt+0x23c0>
   38d64:	ldr	r3, [fp, #-60]	; 0xffffffc4
   38d68:	b	38ef8 <__assert_fail@plt+0x27c88>
   38d6c:	ldr	r0, [fp, #-80]	; 0xffffffb0
   38d70:	ldr	r3, [fp, #-8]
   38d74:	sub	r1, r3, #1
   38d78:	ldr	r3, [fp, #-80]	; 0xffffffb0
   38d7c:	ldr	r3, [r3, #88]	; 0x58
   38d80:	mov	r2, r3
   38d84:	bl	25d10 <__assert_fail@plt+0x14aa0>
   38d88:	str	r0, [fp, #-52]	; 0xffffffcc
   38d8c:	sub	r2, fp, #72	; 0x48
   38d90:	sub	r0, fp, #60	; 0x3c
   38d94:	ldr	r3, [fp, #-52]	; 0xffffffcc
   38d98:	ldr	r1, [fp, #-20]	; 0xffffffec
   38d9c:	bl	27a34 <__assert_fail@plt+0x167c4>
   38da0:	str	r0, [fp, #-16]
   38da4:	ldr	r3, [fp, #-16]
   38da8:	cmp	r3, #0
   38dac:	moveq	r3, #1
   38db0:	movne	r3, #0
   38db4:	uxtb	r3, r3
   38db8:	cmp	r3, #0
   38dbc:	beq	38df0 <__assert_fail@plt+0x27b80>
   38dc0:	ldr	r3, [fp, #-60]	; 0xffffffc4
   38dc4:	cmp	r3, #0
   38dc8:	movne	r3, #1
   38dcc:	moveq	r3, #0
   38dd0:	uxtb	r3, r3
   38dd4:	cmp	r3, #0
   38dd8:	beq	38df0 <__assert_fail@plt+0x27b80>
   38ddc:	ldr	r3, [fp, #-64]	; 0xffffffc0
   38de0:	mov	r0, r3
   38de4:	bl	13630 <__assert_fail@plt+0x23c0>
   38de8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   38dec:	b	38ef8 <__assert_fail@plt+0x27c88>
   38df0:	ldr	r3, [fp, #-80]	; 0xffffffb0
   38df4:	ldr	r2, [r3, #100]	; 0x64
   38df8:	ldr	r3, [fp, #-8]
   38dfc:	lsl	r3, r3, #2
   38e00:	add	r3, r2, r3
   38e04:	ldr	r2, [fp, #-16]
   38e08:	str	r2, [r3]
   38e0c:	ldr	r3, [fp, #-16]
   38e10:	cmp	r3, #0
   38e14:	bne	38e24 <__assert_fail@plt+0x27bb4>
   38e18:	ldr	r3, [fp, #-12]
   38e1c:	add	r3, r3, #1
   38e20:	b	38e28 <__assert_fail@plt+0x27bb8>
   38e24:	mov	r3, #0
   38e28:	str	r3, [fp, #-12]
   38e2c:	ldr	r2, [fp, #-8]
   38e30:	ldr	r3, [fp, #8]
   38e34:	cmp	r2, r3
   38e38:	bge	38e50 <__assert_fail@plt+0x27be0>
   38e3c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   38e40:	ldr	r2, [r3, #120]	; 0x78
   38e44:	ldr	r3, [fp, #-12]
   38e48:	cmp	r2, r3
   38e4c:	bge	38bc4 <__assert_fail@plt+0x27954>
   38e50:	ldr	r3, [fp, #-64]	; 0xffffffc0
   38e54:	mov	r0, r3
   38e58:	bl	13630 <__assert_fail@plt+0x23c0>
   38e5c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   38e60:	ldr	r2, [r3, #100]	; 0x64
   38e64:	ldr	r3, [fp, #8]
   38e68:	lsl	r3, r3, #2
   38e6c:	add	r3, r2, r3
   38e70:	ldr	r3, [r3]
   38e74:	cmp	r3, #0
   38e78:	beq	38e9c <__assert_fail@plt+0x27c2c>
   38e7c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   38e80:	ldr	r2, [r3, #100]	; 0x64
   38e84:	ldr	r3, [fp, #8]
   38e88:	lsl	r3, r3, #2
   38e8c:	add	r3, r2, r3
   38e90:	ldr	r3, [r3]
   38e94:	add	r3, r3, #4
   38e98:	b	38ea0 <__assert_fail@plt+0x27c30>
   38e9c:	mov	r3, #0
   38ea0:	str	r3, [fp, #-56]	; 0xffffffc8
   38ea4:	ldr	r3, [fp, #-84]	; 0xffffffac
   38ea8:	ldr	r2, [fp, #-8]
   38eac:	str	r2, [r3]
   38eb0:	ldr	r3, [fp, #-80]	; 0xffffffb0
   38eb4:	ldr	r2, [fp, #-44]	; 0xffffffd4
   38eb8:	str	r2, [r3, #100]	; 0x64
   38ebc:	ldr	r3, [fp, #-80]	; 0xffffffb0
   38ec0:	ldr	r2, [fp, #-48]	; 0xffffffd0
   38ec4:	str	r2, [r3, #40]	; 0x28
   38ec8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   38ecc:	cmp	r3, #0
   38ed0:	beq	38ef4 <__assert_fail@plt+0x27c84>
   38ed4:	ldr	r1, [fp, #4]
   38ed8:	ldr	r0, [fp, #-56]	; 0xffffffc8
   38edc:	bl	2729c <__assert_fail@plt+0x1602c>
   38ee0:	mov	r3, r0
   38ee4:	cmp	r3, #0
   38ee8:	beq	38ef4 <__assert_fail@plt+0x27c84>
   38eec:	mov	r3, #0
   38ef0:	b	38ef8 <__assert_fail@plt+0x27c88>
   38ef4:	mov	r3, #1
   38ef8:	mov	r0, r3
   38efc:	sub	sp, fp, #4
   38f00:	pop	{fp, pc}
   38f04:	push	{r4, fp, lr}
   38f08:	add	fp, sp, #8
   38f0c:	sub	sp, sp, #68	; 0x44
   38f10:	str	r0, [fp, #-64]	; 0xffffffc0
   38f14:	str	r1, [fp, #-68]	; 0xffffffbc
   38f18:	str	r2, [fp, #-72]	; 0xffffffb8
   38f1c:	str	r3, [fp, #-76]	; 0xffffffb4
   38f20:	ldr	r3, [fp, #-64]	; 0xffffffc0
   38f24:	ldr	r3, [r3, #84]	; 0x54
   38f28:	str	r3, [fp, #-24]	; 0xffffffe8
   38f2c:	mov	r3, #0
   38f30:	str	r3, [fp, #-48]	; 0xffffffd0
   38f34:	sub	r3, fp, #60	; 0x3c
   38f38:	mov	r2, #12
   38f3c:	mov	r1, #0
   38f40:	mov	r0, r3
   38f44:	bl	111bc <memset@plt>
   38f48:	mov	r3, #0
   38f4c:	str	r3, [fp, #-16]
   38f50:	b	391fc <__assert_fail@plt+0x27f8c>
   38f54:	mov	r3, #0
   38f58:	str	r3, [fp, #-20]	; 0xffffffec
   38f5c:	ldr	r3, [fp, #-72]	; 0xffffffb8
   38f60:	ldr	r2, [r3, #8]
   38f64:	ldr	r3, [fp, #-16]
   38f68:	lsl	r3, r3, #2
   38f6c:	add	r3, r2, r3
   38f70:	ldr	r3, [r3]
   38f74:	str	r3, [fp, #-28]	; 0xffffffe4
   38f78:	ldr	r3, [fp, #-24]	; 0xffffffe8
   38f7c:	ldr	r2, [r3]
   38f80:	ldr	r3, [fp, #-28]	; 0xffffffe4
   38f84:	lsl	r3, r3, #3
   38f88:	add	r3, r2, r3
   38f8c:	ldrb	r3, [r3, #4]
   38f90:	and	r3, r3, #8
   38f94:	cmp	r3, #0
   38f98:	ldr	r3, [fp, #-24]	; 0xffffffe8
   38f9c:	ldr	r2, [r3]
   38fa0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   38fa4:	lsl	r3, r3, #3
   38fa8:	add	r3, r2, r3
   38fac:	ldrb	r3, [r3, #6]
   38fb0:	and	r3, r3, #16
   38fb4:	uxtb	r3, r3
   38fb8:	cmp	r3, #0
   38fbc:	beq	39160 <__assert_fail@plt+0x27ef0>
   38fc0:	ldr	r2, [fp, #-64]	; 0xffffffc0
   38fc4:	ldr	r3, [fp, #-68]	; 0xffffffbc
   38fc8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   38fcc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   38fd0:	bl	3aef0 <__assert_fail@plt+0x29c80>
   38fd4:	str	r0, [fp, #-20]	; 0xffffffec
   38fd8:	ldr	r3, [fp, #-20]	; 0xffffffec
   38fdc:	cmp	r3, #1
   38fe0:	ble	39160 <__assert_fail@plt+0x27ef0>
   38fe4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   38fe8:	ldr	r2, [r3, #12]
   38fec:	ldr	r3, [fp, #-28]	; 0xffffffe4
   38ff0:	lsl	r3, r3, #2
   38ff4:	add	r3, r2, r3
   38ff8:	ldr	r3, [r3]
   38ffc:	str	r3, [fp, #-36]	; 0xffffffdc
   39000:	ldr	r2, [fp, #-68]	; 0xffffffbc
   39004:	ldr	r3, [fp, #-20]	; 0xffffffec
   39008:	add	r3, r2, r3
   3900c:	str	r3, [fp, #-40]	; 0xffffffd8
   39010:	ldr	r3, [fp, #-64]	; 0xffffffc0
   39014:	ldr	r2, [r3, #100]	; 0x64
   39018:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3901c:	lsl	r3, r3, #2
   39020:	add	r3, r2, r3
   39024:	ldr	r3, [r3]
   39028:	str	r3, [fp, #-44]	; 0xffffffd4
   3902c:	mov	r3, #0
   39030:	str	r3, [fp, #-56]	; 0xffffffc8
   39034:	ldr	r3, [fp, #-44]	; 0xffffffd4
   39038:	cmp	r3, #0
   3903c:	beq	39090 <__assert_fail@plt+0x27e20>
   39040:	ldr	r3, [fp, #-44]	; 0xffffffd4
   39044:	add	r2, r3, #4
   39048:	sub	r3, fp, #60	; 0x3c
   3904c:	mov	r1, r2
   39050:	mov	r0, r3
   39054:	bl	26a38 <__assert_fail@plt+0x157c8>
   39058:	mov	r3, r0
   3905c:	str	r3, [fp, #-48]	; 0xffffffd0
   39060:	ldr	r3, [fp, #-48]	; 0xffffffd0
   39064:	cmp	r3, #0
   39068:	movne	r3, #1
   3906c:	moveq	r3, #0
   39070:	uxtb	r3, r3
   39074:	cmp	r3, #0
   39078:	beq	39090 <__assert_fail@plt+0x27e20>
   3907c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   39080:	mov	r0, r3
   39084:	bl	13630 <__assert_fail@plt+0x23c0>
   39088:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3908c:	b	39220 <__assert_fail@plt+0x27fb0>
   39090:	sub	r3, fp, #60	; 0x3c
   39094:	ldr	r1, [fp, #-36]	; 0xffffffdc
   39098:	mov	r0, r3
   3909c:	bl	26e8c <__assert_fail@plt+0x15c1c>
   390a0:	mov	r3, r0
   390a4:	strb	r3, [fp, #-29]	; 0xffffffe3
   390a8:	ldrb	r3, [fp, #-29]	; 0xffffffe3
   390ac:	eor	r3, r3, #1
   390b0:	uxtb	r3, r3
   390b4:	cmp	r3, #0
   390b8:	beq	390d0 <__assert_fail@plt+0x27e60>
   390bc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   390c0:	mov	r0, r3
   390c4:	bl	13630 <__assert_fail@plt+0x23c0>
   390c8:	mov	r3, #12
   390cc:	b	39220 <__assert_fail@plt+0x27fb0>
   390d0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   390d4:	ldr	r2, [r3, #100]	; 0x64
   390d8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   390dc:	lsl	r3, r3, #2
   390e0:	add	r4, r2, r3
   390e4:	sub	r2, fp, #60	; 0x3c
   390e8:	sub	r3, fp, #48	; 0x30
   390ec:	ldr	r1, [fp, #-24]	; 0xffffffe8
   390f0:	mov	r0, r3
   390f4:	bl	278c8 <__assert_fail@plt+0x16658>
   390f8:	mov	r3, r0
   390fc:	str	r3, [r4]
   39100:	ldr	r3, [fp, #-64]	; 0xffffffc0
   39104:	ldr	r2, [r3, #100]	; 0x64
   39108:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3910c:	lsl	r3, r3, #2
   39110:	add	r3, r2, r3
   39114:	ldr	r3, [r3]
   39118:	cmp	r3, #0
   3911c:	moveq	r3, #1
   39120:	movne	r3, #0
   39124:	uxtb	r3, r3
   39128:	cmp	r3, #0
   3912c:	beq	39160 <__assert_fail@plt+0x27ef0>
   39130:	ldr	r3, [fp, #-48]	; 0xffffffd0
   39134:	cmp	r3, #0
   39138:	movne	r3, #1
   3913c:	moveq	r3, #0
   39140:	uxtb	r3, r3
   39144:	cmp	r3, #0
   39148:	beq	39160 <__assert_fail@plt+0x27ef0>
   3914c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   39150:	mov	r0, r3
   39154:	bl	13630 <__assert_fail@plt+0x23c0>
   39158:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3915c:	b	39220 <__assert_fail@plt+0x27fb0>
   39160:	ldr	r3, [fp, #-20]	; 0xffffffec
   39164:	cmp	r3, #0
   39168:	bne	3919c <__assert_fail@plt+0x27f2c>
   3916c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   39170:	ldr	r2, [r3]
   39174:	ldr	r3, [fp, #-28]	; 0xffffffe4
   39178:	lsl	r3, r3, #3
   3917c:	add	r3, r2, r3
   39180:	ldr	r2, [fp, #-68]	; 0xffffffbc
   39184:	mov	r1, r3
   39188:	ldr	r0, [fp, #-64]	; 0xffffffc0
   3918c:	bl	3b450 <__assert_fail@plt+0x2a1e0>
   39190:	mov	r3, r0
   39194:	cmp	r3, #0
   39198:	beq	391f0 <__assert_fail@plt+0x27f80>
   3919c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   391a0:	ldr	r2, [r3, #12]
   391a4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   391a8:	lsl	r3, r3, #2
   391ac:	add	r3, r2, r3
   391b0:	ldr	r3, [r3]
   391b4:	mov	r1, r3
   391b8:	ldr	r0, [fp, #-76]	; 0xffffffb4
   391bc:	bl	26e8c <__assert_fail@plt+0x15c1c>
   391c0:	mov	r3, r0
   391c4:	strb	r3, [fp, #-29]	; 0xffffffe3
   391c8:	ldrb	r3, [fp, #-29]	; 0xffffffe3
   391cc:	eor	r3, r3, #1
   391d0:	uxtb	r3, r3
   391d4:	cmp	r3, #0
   391d8:	beq	391f0 <__assert_fail@plt+0x27f80>
   391dc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   391e0:	mov	r0, r3
   391e4:	bl	13630 <__assert_fail@plt+0x23c0>
   391e8:	mov	r3, #12
   391ec:	b	39220 <__assert_fail@plt+0x27fb0>
   391f0:	ldr	r3, [fp, #-16]
   391f4:	add	r3, r3, #1
   391f8:	str	r3, [fp, #-16]
   391fc:	ldr	r3, [fp, #-72]	; 0xffffffb8
   39200:	ldr	r2, [r3, #4]
   39204:	ldr	r3, [fp, #-16]
   39208:	cmp	r2, r3
   3920c:	bgt	38f54 <__assert_fail@plt+0x27ce4>
   39210:	ldr	r3, [fp, #-52]	; 0xffffffcc
   39214:	mov	r0, r3
   39218:	bl	13630 <__assert_fail@plt+0x23c0>
   3921c:	mov	r3, #0
   39220:	mov	r0, r3
   39224:	sub	sp, fp, #8
   39228:	pop	{r4, fp, pc}
   3922c:	push	{fp, lr}
   39230:	add	fp, sp, #4
   39234:	sub	sp, sp, #56	; 0x38
   39238:	str	r0, [fp, #-40]	; 0xffffffd8
   3923c:	str	r1, [fp, #-44]	; 0xffffffd4
   39240:	str	r2, [fp, #-48]	; 0xffffffd0
   39244:	str	r3, [fp, #-52]	; 0xffffffcc
   39248:	ldr	r3, [fp, #-44]	; 0xffffffd4
   3924c:	ldr	r3, [r3, #4]
   39250:	cmp	r3, #0
   39254:	ldr	r3, [fp, #-44]	; 0xffffffd4
   39258:	ldr	r2, [r3, #4]
   3925c:	sub	r3, fp, #36	; 0x24
   39260:	mov	r1, r2
   39264:	mov	r0, r3
   39268:	bl	25ef8 <__assert_fail@plt+0x14c88>
   3926c:	str	r0, [fp, #-12]
   39270:	ldr	r3, [fp, #-12]
   39274:	cmp	r3, #0
   39278:	movne	r3, #1
   3927c:	moveq	r3, #0
   39280:	uxtb	r3, r3
   39284:	cmp	r3, #0
   39288:	beq	39294 <__assert_fail@plt+0x28024>
   3928c:	ldr	r3, [fp, #-12]
   39290:	b	393e0 <__assert_fail@plt+0x28170>
   39294:	mov	r3, #0
   39298:	str	r3, [fp, #-8]
   3929c:	b	393a4 <__assert_fail@plt+0x28134>
   392a0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   392a4:	ldr	r2, [r3, #8]
   392a8:	ldr	r3, [fp, #-8]
   392ac:	lsl	r3, r3, #2
   392b0:	add	r3, r2, r3
   392b4:	ldr	r3, [r3]
   392b8:	str	r3, [fp, #-16]
   392bc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   392c0:	ldr	r1, [r3, #24]
   392c4:	ldr	r2, [fp, #-16]
   392c8:	mov	r3, r2
   392cc:	lsl	r3, r3, #1
   392d0:	add	r3, r3, r2
   392d4:	lsl	r3, r3, #2
   392d8:	add	r3, r1, r3
   392dc:	str	r3, [fp, #-20]	; 0xffffffec
   392e0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   392e4:	ldr	r2, [fp, #-48]	; 0xffffffd0
   392e8:	ldr	r1, [fp, #-20]	; 0xffffffec
   392ec:	ldr	r0, [fp, #-40]	; 0xffffffd8
   392f0:	bl	3869c <__assert_fail@plt+0x2742c>
   392f4:	str	r0, [fp, #-24]	; 0xffffffe8
   392f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   392fc:	cmn	r3, #1
   39300:	bne	39348 <__assert_fail@plt+0x280d8>
   39304:	sub	r3, fp, #36	; 0x24
   39308:	ldr	r1, [fp, #-20]	; 0xffffffec
   3930c:	mov	r0, r3
   39310:	bl	26a38 <__assert_fail@plt+0x157c8>
   39314:	str	r0, [fp, #-12]
   39318:	ldr	r3, [fp, #-12]
   3931c:	cmp	r3, #0
   39320:	movne	r3, #1
   39324:	moveq	r3, #0
   39328:	uxtb	r3, r3
   3932c:	cmp	r3, #0
   39330:	beq	39398 <__assert_fail@plt+0x28128>
   39334:	ldr	r3, [fp, #-28]	; 0xffffffe4
   39338:	mov	r0, r3
   3933c:	bl	13630 <__assert_fail@plt+0x23c0>
   39340:	ldr	r3, [fp, #-12]
   39344:	b	393e0 <__assert_fail@plt+0x28170>
   39348:	sub	r1, fp, #36	; 0x24
   3934c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   39350:	str	r3, [sp]
   39354:	ldr	r3, [fp, #-48]	; 0xffffffd0
   39358:	ldr	r2, [fp, #-16]
   3935c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   39360:	bl	393ec <__assert_fail@plt+0x2817c>
   39364:	str	r0, [fp, #-12]
   39368:	ldr	r3, [fp, #-12]
   3936c:	cmp	r3, #0
   39370:	movne	r3, #1
   39374:	moveq	r3, #0
   39378:	uxtb	r3, r3
   3937c:	cmp	r3, #0
   39380:	beq	39398 <__assert_fail@plt+0x28128>
   39384:	ldr	r3, [fp, #-28]	; 0xffffffe4
   39388:	mov	r0, r3
   3938c:	bl	13630 <__assert_fail@plt+0x23c0>
   39390:	ldr	r3, [fp, #-12]
   39394:	b	393e0 <__assert_fail@plt+0x28170>
   39398:	ldr	r3, [fp, #-8]
   3939c:	add	r3, r3, #1
   393a0:	str	r3, [fp, #-8]
   393a4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   393a8:	ldr	r2, [r3, #4]
   393ac:	ldr	r3, [fp, #-8]
   393b0:	cmp	r2, r3
   393b4:	bgt	392a0 <__assert_fail@plt+0x28030>
   393b8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   393bc:	ldr	r3, [r3, #8]
   393c0:	mov	r0, r3
   393c4:	bl	13630 <__assert_fail@plt+0x23c0>
   393c8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   393cc:	mov	ip, r3
   393d0:	sub	r3, fp, #36	; 0x24
   393d4:	ldm	r3, {r0, r1, r2}
   393d8:	stm	ip, {r0, r1, r2}
   393dc:	mov	r3, #0
   393e0:	mov	r0, r3
   393e4:	sub	sp, fp, #4
   393e8:	pop	{fp, pc}
   393ec:	push	{fp, lr}
   393f0:	add	fp, sp, #4
   393f4:	sub	sp, sp, #40	; 0x28
   393f8:	str	r0, [fp, #-24]	; 0xffffffe8
   393fc:	str	r1, [fp, #-28]	; 0xffffffe4
   39400:	str	r2, [fp, #-32]	; 0xffffffe0
   39404:	str	r3, [fp, #-36]	; 0xffffffdc
   39408:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3940c:	str	r3, [fp, #-8]
   39410:	b	395bc <__assert_fail@plt+0x2834c>
   39414:	ldr	r3, [fp, #-24]	; 0xffffffe8
   39418:	ldr	r2, [r3]
   3941c:	ldr	r3, [fp, #-8]
   39420:	lsl	r3, r3, #3
   39424:	add	r3, r2, r3
   39428:	ldrb	r3, [r3, #4]
   3942c:	mov	r2, r3
   39430:	ldr	r3, [fp, #4]
   39434:	cmp	r2, r3
   39438:	bne	3949c <__assert_fail@plt+0x2822c>
   3943c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   39440:	ldr	r2, [r3]
   39444:	ldr	r3, [fp, #-8]
   39448:	lsl	r3, r3, #3
   3944c:	add	r3, r2, r3
   39450:	ldr	r2, [r3]
   39454:	ldr	r3, [fp, #-36]	; 0xffffffdc
   39458:	cmp	r2, r3
   3945c:	bne	3949c <__assert_fail@plt+0x2822c>
   39460:	ldr	r3, [fp, #4]
   39464:	cmp	r3, #9
   39468:	bne	395d8 <__assert_fail@plt+0x28368>
   3946c:	ldr	r1, [fp, #-8]
   39470:	ldr	r0, [fp, #-28]	; 0xffffffe4
   39474:	bl	26e8c <__assert_fail@plt+0x15c1c>
   39478:	mov	r3, r0
   3947c:	strb	r3, [fp, #-9]
   39480:	ldrb	r3, [fp, #-9]
   39484:	eor	r3, r3, #1
   39488:	uxtb	r3, r3
   3948c:	cmp	r3, #0
   39490:	beq	395d8 <__assert_fail@plt+0x28368>
   39494:	mov	r3, #12
   39498:	b	395e8 <__assert_fail@plt+0x28378>
   3949c:	ldr	r1, [fp, #-8]
   394a0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   394a4:	bl	26e8c <__assert_fail@plt+0x15c1c>
   394a8:	mov	r3, r0
   394ac:	strb	r3, [fp, #-9]
   394b0:	ldrb	r3, [fp, #-9]
   394b4:	eor	r3, r3, #1
   394b8:	uxtb	r3, r3
   394bc:	cmp	r3, #0
   394c0:	beq	394cc <__assert_fail@plt+0x2825c>
   394c4:	mov	r3, #12
   394c8:	b	395e8 <__assert_fail@plt+0x28378>
   394cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   394d0:	ldr	r1, [r3, #20]
   394d4:	ldr	r2, [fp, #-8]
   394d8:	mov	r3, r2
   394dc:	lsl	r3, r3, #1
   394e0:	add	r3, r3, r2
   394e4:	lsl	r3, r3, #2
   394e8:	add	r3, r1, r3
   394ec:	ldr	r3, [r3, #4]
   394f0:	cmp	r3, #0
   394f4:	beq	395e0 <__assert_fail@plt+0x28370>
   394f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   394fc:	ldr	r1, [r3, #20]
   39500:	ldr	r2, [fp, #-8]
   39504:	mov	r3, r2
   39508:	lsl	r3, r3, #1
   3950c:	add	r3, r3, r2
   39510:	lsl	r3, r3, #2
   39514:	add	r3, r1, r3
   39518:	ldr	r3, [r3, #4]
   3951c:	cmp	r3, #2
   39520:	bne	39590 <__assert_fail@plt+0x28320>
   39524:	ldr	r3, [fp, #-24]	; 0xffffffe8
   39528:	ldr	r1, [r3, #20]
   3952c:	ldr	r2, [fp, #-8]
   39530:	mov	r3, r2
   39534:	lsl	r3, r3, #1
   39538:	add	r3, r3, r2
   3953c:	lsl	r3, r3, #2
   39540:	add	r3, r1, r3
   39544:	ldr	r3, [r3, #8]
   39548:	add	r3, r3, #4
   3954c:	ldr	r2, [r3]
   39550:	ldr	r3, [fp, #4]
   39554:	str	r3, [sp]
   39558:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3955c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   39560:	ldr	r0, [fp, #-24]	; 0xffffffe8
   39564:	bl	393ec <__assert_fail@plt+0x2817c>
   39568:	str	r0, [fp, #-16]
   3956c:	ldr	r3, [fp, #-16]
   39570:	cmp	r3, #0
   39574:	movne	r3, #1
   39578:	moveq	r3, #0
   3957c:	uxtb	r3, r3
   39580:	cmp	r3, #0
   39584:	beq	39590 <__assert_fail@plt+0x28320>
   39588:	ldr	r3, [fp, #-16]
   3958c:	b	395e8 <__assert_fail@plt+0x28378>
   39590:	ldr	r3, [fp, #-24]	; 0xffffffe8
   39594:	ldr	r1, [r3, #20]
   39598:	ldr	r2, [fp, #-8]
   3959c:	mov	r3, r2
   395a0:	lsl	r3, r3, #1
   395a4:	add	r3, r3, r2
   395a8:	lsl	r3, r3, #2
   395ac:	add	r3, r1, r3
   395b0:	ldr	r3, [r3, #8]
   395b4:	ldr	r3, [r3]
   395b8:	str	r3, [fp, #-8]
   395bc:	ldr	r1, [fp, #-8]
   395c0:	ldr	r0, [fp, #-28]	; 0xffffffe4
   395c4:	bl	2729c <__assert_fail@plt+0x1602c>
   395c8:	mov	r3, r0
   395cc:	cmp	r3, #0
   395d0:	beq	39414 <__assert_fail@plt+0x281a4>
   395d4:	b	395e4 <__assert_fail@plt+0x28374>
   395d8:	nop			; (mov r0, r0)
   395dc:	b	395e4 <__assert_fail@plt+0x28374>
   395e0:	nop			; (mov r0, r0)
   395e4:	mov	r3, #0
   395e8:	mov	r0, r3
   395ec:	sub	sp, fp, #4
   395f0:	pop	{fp, pc}
   395f4:	push	{r4, fp, lr}
   395f8:	add	fp, sp, #8
   395fc:	sub	sp, sp, #84	; 0x54
   39600:	str	r0, [fp, #-80]	; 0xffffffb0
   39604:	str	r1, [fp, #-84]	; 0xffffffac
   39608:	str	r2, [fp, #-88]	; 0xffffffa8
   3960c:	str	r3, [fp, #-92]	; 0xffffffa4
   39610:	ldr	r3, [fp, #-80]	; 0xffffffb0
   39614:	ldr	r3, [r3, #84]	; 0x54
   39618:	str	r3, [fp, #-20]	; 0xffffffec
   3961c:	ldr	r1, [fp, #-88]	; 0xffffffa8
   39620:	ldr	r0, [fp, #-80]	; 0xffffffb0
   39624:	bl	3be2c <__assert_fail@plt+0x2abbc>
   39628:	str	r0, [fp, #-24]	; 0xffffffe8
   3962c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   39630:	cmn	r3, #1
   39634:	bne	39640 <__assert_fail@plt+0x283d0>
   39638:	mov	r3, #0
   3963c:	b	39a0c <__assert_fail@plt+0x2879c>
   39640:	ldr	r3, [fp, #-80]	; 0xffffffb0
   39644:	ldr	r1, [r3, #116]	; 0x74
   39648:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3964c:	mov	r3, r2
   39650:	lsl	r3, r3, #1
   39654:	add	r3, r3, r2
   39658:	lsl	r3, r3, #3
   3965c:	add	r3, r1, r3
   39660:	str	r3, [fp, #-16]
   39664:	ldr	r3, [fp, #-16]
   39668:	ldr	r3, [r3]
   3966c:	mov	r1, r3
   39670:	ldr	r0, [fp, #-84]	; 0xffffffac
   39674:	bl	2729c <__assert_fail@plt+0x1602c>
   39678:	mov	r3, r0
   3967c:	cmp	r3, #0
   39680:	beq	399dc <__assert_fail@plt+0x2876c>
   39684:	ldr	r3, [fp, #-16]
   39688:	ldr	r2, [r3, #12]
   3968c:	ldr	r3, [fp, #-88]	; 0xffffffa8
   39690:	add	r2, r2, r3
   39694:	ldr	r3, [fp, #-16]
   39698:	ldr	r3, [r3, #8]
   3969c:	sub	r3, r2, r3
   396a0:	str	r3, [fp, #-28]	; 0xffffffe4
   396a4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   396a8:	ldr	r3, [fp, #-88]	; 0xffffffa8
   396ac:	cmp	r2, r3
   396b0:	bne	397f0 <__assert_fail@plt+0x28580>
   396b4:	ldr	r3, [fp, #-20]	; 0xffffffec
   396b8:	ldr	r2, [r3, #20]
   396bc:	ldr	r3, [fp, #-16]
   396c0:	ldr	r3, [r3]
   396c4:	mov	r1, r3
   396c8:	mov	r3, r1
   396cc:	lsl	r3, r3, #1
   396d0:	add	r3, r3, r1
   396d4:	lsl	r3, r3, #2
   396d8:	add	r3, r2, r3
   396dc:	ldr	r3, [r3, #8]
   396e0:	ldr	r3, [r3]
   396e4:	str	r3, [fp, #-32]	; 0xffffffe0
   396e8:	ldr	r1, [fp, #-32]	; 0xffffffe0
   396ec:	ldr	r0, [fp, #-84]	; 0xffffffac
   396f0:	bl	2729c <__assert_fail@plt+0x1602c>
   396f4:	mov	r3, r0
   396f8:	cmp	r3, #0
   396fc:	bne	399e4 <__assert_fail@plt+0x28774>
   39700:	sub	r3, fp, #60	; 0x3c
   39704:	ldr	r1, [fp, #-32]	; 0xffffffe0
   39708:	mov	r0, r3
   3970c:	bl	25f7c <__assert_fail@plt+0x14d0c>
   39710:	mov	r3, r0
   39714:	str	r3, [fp, #-48]	; 0xffffffd0
   39718:	sub	r1, fp, #60	; 0x3c
   3971c:	ldr	r3, [fp, #4]
   39720:	ldr	r2, [fp, #-92]	; 0xffffffa4
   39724:	ldr	r0, [fp, #-20]	; 0xffffffec
   39728:	bl	3922c <__assert_fail@plt+0x27fbc>
   3972c:	str	r0, [fp, #-40]	; 0xffffffd8
   39730:	sub	r3, fp, #60	; 0x3c
   39734:	mov	r1, r3
   39738:	ldr	r0, [fp, #-84]	; 0xffffffac
   3973c:	bl	26a38 <__assert_fail@plt+0x157c8>
   39740:	str	r0, [fp, #-44]	; 0xffffffd4
   39744:	ldr	r3, [fp, #-52]	; 0xffffffcc
   39748:	mov	r0, r3
   3974c:	bl	13630 <__assert_fail@plt+0x23c0>
   39750:	ldr	r3, [fp, #-48]	; 0xffffffd0
   39754:	cmp	r3, #0
   39758:	movne	r3, #1
   3975c:	moveq	r3, #0
   39760:	uxtb	r3, r3
   39764:	cmp	r3, #0
   39768:	bne	39788 <__assert_fail@plt+0x28518>
   3976c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   39770:	cmp	r3, #0
   39774:	movne	r3, #1
   39778:	moveq	r3, #0
   3977c:	uxtb	r3, r3
   39780:	cmp	r3, #0
   39784:	beq	39790 <__assert_fail@plt+0x28520>
   39788:	mov	r3, #1
   3978c:	b	39794 <__assert_fail@plt+0x28524>
   39790:	mov	r3, #0
   39794:	cmp	r3, #0
   39798:	bne	397b8 <__assert_fail@plt+0x28548>
   3979c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   397a0:	cmp	r3, #0
   397a4:	movne	r3, #1
   397a8:	moveq	r3, #0
   397ac:	uxtb	r3, r3
   397b0:	cmp	r3, #0
   397b4:	beq	39640 <__assert_fail@plt+0x283d0>
   397b8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   397bc:	cmp	r3, #0
   397c0:	bne	397e0 <__assert_fail@plt+0x28570>
   397c4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   397c8:	cmp	r3, #0
   397cc:	beq	397d8 <__assert_fail@plt+0x28568>
   397d0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   397d4:	b	397e4 <__assert_fail@plt+0x28574>
   397d8:	ldr	r3, [fp, #-44]	; 0xffffffd4
   397dc:	b	397e4 <__assert_fail@plt+0x28574>
   397e0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   397e4:	str	r3, [fp, #-48]	; 0xffffffd0
   397e8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   397ec:	b	39a0c <__assert_fail@plt+0x2879c>
   397f0:	ldr	r3, [fp, #-20]	; 0xffffffec
   397f4:	ldr	r2, [r3, #12]
   397f8:	ldr	r3, [fp, #-16]
   397fc:	ldr	r3, [r3]
   39800:	lsl	r3, r3, #2
   39804:	add	r3, r2, r3
   39808:	ldr	r3, [r3]
   3980c:	str	r3, [fp, #-32]	; 0xffffffe0
   39810:	ldr	r3, [fp, #-80]	; 0xffffffb0
   39814:	ldr	r2, [r3, #100]	; 0x64
   39818:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3981c:	lsl	r3, r3, #2
   39820:	add	r3, r2, r3
   39824:	ldr	r3, [r3]
   39828:	cmp	r3, #0
   3982c:	beq	39910 <__assert_fail@plt+0x286a0>
   39830:	ldr	r3, [fp, #-80]	; 0xffffffb0
   39834:	ldr	r2, [r3, #100]	; 0x64
   39838:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3983c:	lsl	r3, r3, #2
   39840:	add	r3, r2, r3
   39844:	ldr	r3, [r3]
   39848:	add	r3, r3, #4
   3984c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   39850:	mov	r0, r3
   39854:	bl	2729c <__assert_fail@plt+0x1602c>
   39858:	mov	r3, r0
   3985c:	cmp	r3, #0
   39860:	bne	399ec <__assert_fail@plt+0x2877c>
   39864:	ldr	r3, [fp, #-80]	; 0xffffffb0
   39868:	ldr	r2, [r3, #100]	; 0x64
   3986c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   39870:	lsl	r3, r3, #2
   39874:	add	r3, r2, r3
   39878:	ldr	r3, [r3]
   3987c:	add	r2, r3, #4
   39880:	sub	r3, fp, #72	; 0x48
   39884:	mov	r1, r2
   39888:	mov	r0, r3
   3988c:	bl	26130 <__assert_fail@plt+0x14ec0>
   39890:	mov	r3, r0
   39894:	str	r3, [fp, #-48]	; 0xffffffd0
   39898:	sub	r3, fp, #72	; 0x48
   3989c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   398a0:	mov	r0, r3
   398a4:	bl	26e8c <__assert_fail@plt+0x15c1c>
   398a8:	mov	r3, r0
   398ac:	strb	r3, [fp, #-33]	; 0xffffffdf
   398b0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   398b4:	cmp	r3, #0
   398b8:	movne	r3, #1
   398bc:	moveq	r3, #0
   398c0:	uxtb	r3, r3
   398c4:	cmp	r3, #0
   398c8:	bne	398e0 <__assert_fail@plt+0x28670>
   398cc:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   398d0:	eor	r3, r3, #1
   398d4:	uxtb	r3, r3
   398d8:	cmp	r3, #0
   398dc:	beq	3994c <__assert_fail@plt+0x286dc>
   398e0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   398e4:	mov	r0, r3
   398e8:	bl	13630 <__assert_fail@plt+0x23c0>
   398ec:	ldr	r3, [fp, #-48]	; 0xffffffd0
   398f0:	cmp	r3, #0
   398f4:	beq	39900 <__assert_fail@plt+0x28690>
   398f8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   398fc:	b	39904 <__assert_fail@plt+0x28694>
   39900:	mov	r3, #12
   39904:	str	r3, [fp, #-48]	; 0xffffffd0
   39908:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3990c:	b	39a0c <__assert_fail@plt+0x2879c>
   39910:	sub	r3, fp, #72	; 0x48
   39914:	ldr	r1, [fp, #-32]	; 0xffffffe0
   39918:	mov	r0, r3
   3991c:	bl	25f7c <__assert_fail@plt+0x14d0c>
   39920:	mov	r3, r0
   39924:	str	r3, [fp, #-48]	; 0xffffffd0
   39928:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3992c:	cmp	r3, #0
   39930:	movne	r3, #1
   39934:	moveq	r3, #0
   39938:	uxtb	r3, r3
   3993c:	cmp	r3, #0
   39940:	beq	3994c <__assert_fail@plt+0x286dc>
   39944:	ldr	r3, [fp, #-48]	; 0xffffffd0
   39948:	b	39a0c <__assert_fail@plt+0x2879c>
   3994c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   39950:	ldr	r2, [r3, #100]	; 0x64
   39954:	ldr	r3, [fp, #-28]	; 0xffffffe4
   39958:	lsl	r3, r3, #2
   3995c:	add	r4, r2, r3
   39960:	sub	r2, fp, #72	; 0x48
   39964:	sub	r3, fp, #48	; 0x30
   39968:	ldr	r1, [fp, #-20]	; 0xffffffec
   3996c:	mov	r0, r3
   39970:	bl	278c8 <__assert_fail@plt+0x16658>
   39974:	mov	r3, r0
   39978:	str	r3, [r4]
   3997c:	ldr	r3, [fp, #-64]	; 0xffffffc0
   39980:	mov	r0, r3
   39984:	bl	13630 <__assert_fail@plt+0x23c0>
   39988:	ldr	r3, [fp, #-80]	; 0xffffffb0
   3998c:	ldr	r2, [r3, #100]	; 0x64
   39990:	ldr	r3, [fp, #-28]	; 0xffffffe4
   39994:	lsl	r3, r3, #2
   39998:	add	r3, r2, r3
   3999c:	ldr	r3, [r3]
   399a0:	cmp	r3, #0
   399a4:	moveq	r3, #1
   399a8:	movne	r3, #0
   399ac:	uxtb	r3, r3
   399b0:	cmp	r3, #0
   399b4:	beq	399f0 <__assert_fail@plt+0x28780>
   399b8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   399bc:	cmp	r3, #0
   399c0:	movne	r3, #1
   399c4:	moveq	r3, #0
   399c8:	uxtb	r3, r3
   399cc:	cmp	r3, #0
   399d0:	beq	399f0 <__assert_fail@plt+0x28780>
   399d4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   399d8:	b	39a0c <__assert_fail@plt+0x2879c>
   399dc:	nop			; (mov r0, r0)
   399e0:	b	399f0 <__assert_fail@plt+0x28780>
   399e4:	nop			; (mov r0, r0)
   399e8:	b	399f0 <__assert_fail@plt+0x28780>
   399ec:	nop			; (mov r0, r0)
   399f0:	ldr	r3, [fp, #-16]
   399f4:	add	r2, r3, #24
   399f8:	str	r2, [fp, #-16]
   399fc:	ldrb	r3, [r3, #20]
   39a00:	cmp	r3, #0
   39a04:	bne	39664 <__assert_fail@plt+0x283f4>
   39a08:	mov	r3, #0
   39a0c:	mov	r0, r3
   39a10:	sub	sp, fp, #8
   39a14:	pop	{r4, fp, pc}
   39a18:	push	{fp, lr}
   39a1c:	add	fp, sp, #4
   39a20:	sub	sp, sp, #14400	; 0x3840
   39a24:	sub	sp, sp, #32
   39a28:	sub	r3, fp, #12288	; 0x3000
   39a2c:	sub	r3, r3, #4
   39a30:	str	r0, [r3, #-2140]	; 0xfffff7a4
   39a34:	sub	r3, fp, #12288	; 0x3000
   39a38:	sub	r3, r3, #4
   39a3c:	str	r1, [r3, #-2144]	; 0xfffff7a0
   39a40:	mov	r3, #0
   39a44:	strb	r3, [fp, #-17]	; 0xffffffef
   39a48:	sub	r3, fp, #12288	; 0x3000
   39a4c:	sub	r3, r3, #4
   39a50:	ldr	r3, [r3, #-2144]	; 0xfffff7a0
   39a54:	mov	r2, #0
   39a58:	str	r2, [r3, #44]	; 0x2c
   39a5c:	sub	r3, fp, #12288	; 0x3000
   39a60:	sub	r3, r3, #4
   39a64:	ldr	r3, [r3, #-2144]	; 0xfffff7a0
   39a68:	ldr	r2, [r3, #44]	; 0x2c
   39a6c:	sub	r3, fp, #12288	; 0x3000
   39a70:	sub	r3, r3, #4
   39a74:	ldr	r3, [r3, #-2144]	; 0xfffff7a0
   39a78:	str	r2, [r3, #48]	; 0x30
   39a7c:	sub	r3, fp, #14400	; 0x3840
   39a80:	sub	r3, r3, #4
   39a84:	sub	r3, r3, #20
   39a88:	sub	r2, fp, #6208	; 0x1840
   39a8c:	sub	r2, r2, #4
   39a90:	sub	r2, r2, #20
   39a94:	sub	r1, fp, #12288	; 0x3000
   39a98:	sub	r1, r1, #4
   39a9c:	sub	r0, fp, #12288	; 0x3000
   39aa0:	sub	r0, r0, #4
   39aa4:	ldr	r1, [r1, #-2144]	; 0xfffff7a0
   39aa8:	ldr	r0, [r0, #-2140]	; 0xfffff7a4
   39aac:	bl	3a4b4 <__assert_fail@plt+0x29244>
   39ab0:	str	r0, [fp, #-36]	; 0xffffffdc
   39ab4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   39ab8:	cmp	r3, #0
   39abc:	movle	r3, #1
   39ac0:	movgt	r3, #0
   39ac4:	uxtb	r3, r3
   39ac8:	cmp	r3, #0
   39acc:	beq	39b40 <__assert_fail@plt+0x288d0>
   39ad0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   39ad4:	cmp	r3, #0
   39ad8:	bne	39b38 <__assert_fail@plt+0x288c8>
   39adc:	mov	r1, #256	; 0x100
   39ae0:	mov	r0, #4
   39ae4:	bl	3ded4 <__assert_fail@plt+0x2cc64>
   39ae8:	mov	r3, r0
   39aec:	mov	r2, r3
   39af0:	sub	r3, fp, #12288	; 0x3000
   39af4:	sub	r3, r3, #4
   39af8:	ldr	r3, [r3, #-2144]	; 0xfffff7a0
   39afc:	str	r2, [r3, #44]	; 0x2c
   39b00:	sub	r3, fp, #12288	; 0x3000
   39b04:	sub	r3, r3, #4
   39b08:	ldr	r3, [r3, #-2144]	; 0xfffff7a0
   39b0c:	ldr	r3, [r3, #44]	; 0x2c
   39b10:	cmp	r3, #0
   39b14:	moveq	r3, #1
   39b18:	movne	r3, #0
   39b1c:	uxtb	r3, r3
   39b20:	cmp	r3, #0
   39b24:	beq	39b30 <__assert_fail@plt+0x288c0>
   39b28:	mov	r3, #0
   39b2c:	b	3a4a8 <__assert_fail@plt+0x29238>
   39b30:	mov	r3, #1
   39b34:	b	3a4a8 <__assert_fail@plt+0x29238>
   39b38:	mov	r3, #0
   39b3c:	b	3a4a8 <__assert_fail@plt+0x29238>
   39b40:	ldr	r3, [fp, #-36]	; 0xffffffdc
   39b44:	add	r2, r3, #1
   39b48:	sub	r3, fp, #3120	; 0xc30
   39b4c:	sub	r3, r3, #4
   39b50:	sub	r3, r3, #4
   39b54:	mov	r1, r2
   39b58:	mov	r0, r3
   39b5c:	bl	25ef8 <__assert_fail@plt+0x14c88>
   39b60:	mov	r3, r0
   39b64:	str	r3, [fp, #-44]	; 0xffffffd4
   39b68:	ldr	r3, [fp, #-44]	; 0xffffffd4
   39b6c:	cmp	r3, #0
   39b70:	movne	r3, #1
   39b74:	moveq	r3, #0
   39b78:	uxtb	r3, r3
   39b7c:	cmp	r3, #0
   39b80:	beq	39c1c <__assert_fail@plt+0x289ac>
   39b84:	b	39bac <__assert_fail@plt+0x2893c>
   39b88:	nop			; (mov r0, r0)
   39b8c:	b	39bac <__assert_fail@plt+0x2893c>
   39b90:	nop			; (mov r0, r0)
   39b94:	b	39bac <__assert_fail@plt+0x2893c>
   39b98:	nop			; (mov r0, r0)
   39b9c:	b	39bac <__assert_fail@plt+0x2893c>
   39ba0:	nop			; (mov r0, r0)
   39ba4:	b	39bac <__assert_fail@plt+0x2893c>
   39ba8:	nop			; (mov r0, r0)
   39bac:	ldr	r3, [fp, #-3120]	; 0xfffff3d0
   39bb0:	mov	r0, r3
   39bb4:	bl	13630 <__assert_fail@plt+0x23c0>
   39bb8:	mov	r3, #0
   39bbc:	str	r3, [fp, #-8]
   39bc0:	b	39c04 <__assert_fail@plt+0x28994>
   39bc4:	ldr	r2, [fp, #-8]
   39bc8:	mov	r3, r2
   39bcc:	lsl	r3, r3, #1
   39bd0:	add	r3, r3, r2
   39bd4:	lsl	r3, r3, #2
   39bd8:	mov	r2, r3
   39bdc:	sub	r3, fp, #6208	; 0x1840
   39be0:	sub	r3, r3, #4
   39be4:	sub	r3, r3, #20
   39be8:	add	r3, r3, r2
   39bec:	ldr	r3, [r3, #8]
   39bf0:	mov	r0, r3
   39bf4:	bl	13630 <__assert_fail@plt+0x23c0>
   39bf8:	ldr	r3, [fp, #-8]
   39bfc:	add	r3, r3, #1
   39c00:	str	r3, [fp, #-8]
   39c04:	ldr	r2, [fp, #-8]
   39c08:	ldr	r3, [fp, #-36]	; 0xffffffdc
   39c0c:	cmp	r2, r3
   39c10:	blt	39bc4 <__assert_fail@plt+0x28954>
   39c14:	mov	r3, #0
   39c18:	b	3a4a8 <__assert_fail@plt+0x29238>
   39c1c:	sub	r3, fp, #3152	; 0xc50
   39c20:	sub	r3, r3, #4
   39c24:	sub	r3, r3, #4
   39c28:	mov	r0, r3
   39c2c:	bl	23164 <__assert_fail@plt+0x11ef4>
   39c30:	mov	r3, #0
   39c34:	str	r3, [fp, #-8]
   39c38:	b	3a004 <__assert_fail@plt+0x28d94>
   39c3c:	mov	r3, #0
   39c40:	str	r3, [fp, #-3124]	; 0xfffff3cc
   39c44:	mov	r3, #0
   39c48:	str	r3, [fp, #-12]
   39c4c:	b	39d2c <__assert_fail@plt+0x28abc>
   39c50:	sub	r3, fp, #12288	; 0x3000
   39c54:	sub	r3, r3, #4
   39c58:	ldr	r3, [r3, #-2140]	; 0xfffff7a4
   39c5c:	ldr	r1, [r3, #12]
   39c60:	sub	r3, fp, #4096	; 0x1000
   39c64:	sub	r3, r3, #4
   39c68:	mov	r0, r3
   39c6c:	ldr	r2, [fp, #-8]
   39c70:	mov	r3, r2
   39c74:	lsl	r3, r3, #1
   39c78:	add	r3, r3, r2
   39c7c:	lsl	r3, r3, #2
   39c80:	add	r3, r0, r3
   39c84:	sub	r3, r3, #2112	; 0x840
   39c88:	sub	r3, r3, #12
   39c8c:	ldr	r2, [r3]
   39c90:	ldr	r3, [fp, #-12]
   39c94:	lsl	r3, r3, #2
   39c98:	add	r3, r2, r3
   39c9c:	ldr	r3, [r3]
   39ca0:	lsl	r3, r3, #2
   39ca4:	add	r3, r1, r3
   39ca8:	ldr	r3, [r3]
   39cac:	str	r3, [fp, #-40]	; 0xffffffd8
   39cb0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   39cb4:	cmn	r3, #1
   39cb8:	beq	39d20 <__assert_fail@plt+0x28ab0>
   39cbc:	sub	r3, fp, #12288	; 0x3000
   39cc0:	sub	r3, r3, #4
   39cc4:	ldr	r3, [r3, #-2140]	; 0xfffff7a4
   39cc8:	ldr	r1, [r3, #24]
   39ccc:	ldr	r2, [fp, #-40]	; 0xffffffd8
   39cd0:	mov	r3, r2
   39cd4:	lsl	r3, r3, #1
   39cd8:	add	r3, r3, r2
   39cdc:	lsl	r3, r3, #2
   39ce0:	add	r2, r1, r3
   39ce4:	sub	r3, fp, #3120	; 0xc30
   39ce8:	sub	r3, r3, #4
   39cec:	sub	r3, r3, #4
   39cf0:	mov	r1, r2
   39cf4:	mov	r0, r3
   39cf8:	bl	26a38 <__assert_fail@plt+0x157c8>
   39cfc:	mov	r3, r0
   39d00:	str	r3, [fp, #-44]	; 0xffffffd4
   39d04:	ldr	r3, [fp, #-44]	; 0xffffffd4
   39d08:	cmp	r3, #0
   39d0c:	movne	r3, #1
   39d10:	moveq	r3, #0
   39d14:	uxtb	r3, r3
   39d18:	cmp	r3, #0
   39d1c:	bne	39b88 <__assert_fail@plt+0x28918>
   39d20:	ldr	r3, [fp, #-12]
   39d24:	add	r3, r3, #1
   39d28:	str	r3, [fp, #-12]
   39d2c:	sub	r3, fp, #4096	; 0x1000
   39d30:	sub	r3, r3, #4
   39d34:	mov	r1, r3
   39d38:	ldr	r2, [fp, #-8]
   39d3c:	mov	r3, r2
   39d40:	lsl	r3, r3, #1
   39d44:	add	r3, r3, r2
   39d48:	lsl	r3, r3, #2
   39d4c:	add	r3, r1, r3
   39d50:	sub	r3, r3, #2128	; 0x850
   39d54:	ldr	r2, [r3]
   39d58:	ldr	r3, [fp, #-12]
   39d5c:	cmp	r2, r3
   39d60:	bgt	39c50 <__assert_fail@plt+0x289e0>
   39d64:	sub	r2, fp, #3120	; 0xc30
   39d68:	sub	r2, r2, #4
   39d6c:	sub	r2, r2, #4
   39d70:	sub	r3, fp, #12288	; 0x3000
   39d74:	sub	r3, r3, #4
   39d78:	mov	r1, r3
   39d7c:	sub	r0, fp, #44	; 0x2c
   39d80:	mov	r3, #0
   39d84:	ldr	r1, [r1, #-2140]	; 0xfffff7a4
   39d88:	bl	27a34 <__assert_fail@plt+0x167c4>
   39d8c:	mov	r2, r0
   39d90:	ldr	r3, [fp, #-8]
   39d94:	lsl	r3, r3, #2
   39d98:	sub	r1, fp, #4
   39d9c:	add	r3, r1, r3
   39da0:	str	r2, [r3, #-1064]	; 0xfffffbd8
   39da4:	ldr	r3, [fp, #-8]
   39da8:	lsl	r3, r3, #2
   39dac:	sub	r2, fp, #4
   39db0:	add	r3, r2, r3
   39db4:	ldr	r3, [r3, #-1064]	; 0xfffffbd8
   39db8:	cmp	r3, #0
   39dbc:	moveq	r3, #1
   39dc0:	movne	r3, #0
   39dc4:	uxtb	r3, r3
   39dc8:	cmp	r3, #0
   39dcc:	beq	39dec <__assert_fail@plt+0x28b7c>
   39dd0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   39dd4:	cmp	r3, #0
   39dd8:	movne	r3, #1
   39ddc:	moveq	r3, #0
   39de0:	uxtb	r3, r3
   39de4:	cmp	r3, #0
   39de8:	bne	39b90 <__assert_fail@plt+0x28920>
   39dec:	ldr	r3, [fp, #-8]
   39df0:	lsl	r3, r3, #2
   39df4:	sub	r2, fp, #4
   39df8:	add	r3, r2, r3
   39dfc:	ldr	r3, [r3, #-1064]	; 0xfffffbd8
   39e00:	ldrb	r3, [r3, #52]	; 0x34
   39e04:	bic	r3, r3, #127	; 0x7f
   39e08:	uxtb	r3, r3
   39e0c:	cmp	r3, #0
   39e10:	beq	39f78 <__assert_fail@plt+0x28d08>
   39e14:	sub	r2, fp, #3120	; 0xc30
   39e18:	sub	r2, r2, #4
   39e1c:	sub	r2, r2, #4
   39e20:	sub	r3, fp, #12288	; 0x3000
   39e24:	sub	r3, r3, #4
   39e28:	mov	r1, r3
   39e2c:	sub	r0, fp, #44	; 0x2c
   39e30:	mov	r3, #1
   39e34:	ldr	r1, [r1, #-2140]	; 0xfffff7a4
   39e38:	bl	27a34 <__assert_fail@plt+0x167c4>
   39e3c:	mov	r2, r0
   39e40:	ldr	r3, [fp, #-8]
   39e44:	lsl	r3, r3, #2
   39e48:	sub	r1, fp, #4
   39e4c:	add	r3, r1, r3
   39e50:	str	r2, [r3, #-2088]	; 0xfffff7d8
   39e54:	ldr	r3, [fp, #-8]
   39e58:	lsl	r3, r3, #2
   39e5c:	sub	r2, fp, #4
   39e60:	add	r3, r2, r3
   39e64:	ldr	r3, [r3, #-2088]	; 0xfffff7d8
   39e68:	cmp	r3, #0
   39e6c:	moveq	r3, #1
   39e70:	movne	r3, #0
   39e74:	uxtb	r3, r3
   39e78:	cmp	r3, #0
   39e7c:	beq	39e9c <__assert_fail@plt+0x28c2c>
   39e80:	ldr	r3, [fp, #-44]	; 0xffffffd4
   39e84:	cmp	r3, #0
   39e88:	movne	r3, #1
   39e8c:	moveq	r3, #0
   39e90:	uxtb	r3, r3
   39e94:	cmp	r3, #0
   39e98:	bne	39b98 <__assert_fail@plt+0x28928>
   39e9c:	ldr	r3, [fp, #-8]
   39ea0:	lsl	r3, r3, #2
   39ea4:	sub	r2, fp, #4
   39ea8:	add	r3, r2, r3
   39eac:	ldr	r2, [r3, #-1064]	; 0xfffffbd8
   39eb0:	ldr	r3, [fp, #-8]
   39eb4:	lsl	r3, r3, #2
   39eb8:	sub	r1, fp, #4
   39ebc:	add	r3, r1, r3
   39ec0:	ldr	r3, [r3, #-2088]	; 0xfffff7d8
   39ec4:	cmp	r2, r3
   39ec8:	beq	39eec <__assert_fail@plt+0x28c7c>
   39ecc:	sub	r3, fp, #12288	; 0x3000
   39ed0:	sub	r3, r3, #4
   39ed4:	ldr	r3, [r3, #-2140]	; 0xfffff7a4
   39ed8:	ldr	r3, [r3, #92]	; 0x5c
   39edc:	cmp	r3, #1
   39ee0:	ble	39eec <__assert_fail@plt+0x28c7c>
   39ee4:	mov	r3, #1
   39ee8:	strb	r3, [fp, #-17]	; 0xffffffef
   39eec:	sub	r2, fp, #3120	; 0xc30
   39ef0:	sub	r2, r2, #4
   39ef4:	sub	r2, r2, #4
   39ef8:	sub	r3, fp, #12288	; 0x3000
   39efc:	sub	r3, r3, #4
   39f00:	mov	r1, r3
   39f04:	sub	r0, fp, #44	; 0x2c
   39f08:	mov	r3, #2
   39f0c:	ldr	r1, [r1, #-2140]	; 0xfffff7a4
   39f10:	bl	27a34 <__assert_fail@plt+0x167c4>
   39f14:	mov	r2, r0
   39f18:	ldr	r3, [fp, #-8]
   39f1c:	lsl	r3, r3, #2
   39f20:	sub	r1, fp, #4
   39f24:	add	r3, r1, r3
   39f28:	str	r2, [r3, #-3112]	; 0xfffff3d8
   39f2c:	ldr	r3, [fp, #-8]
   39f30:	lsl	r3, r3, #2
   39f34:	sub	r2, fp, #4
   39f38:	add	r3, r2, r3
   39f3c:	ldr	r3, [r3, #-3112]	; 0xfffff3d8
   39f40:	cmp	r3, #0
   39f44:	moveq	r3, #1
   39f48:	movne	r3, #0
   39f4c:	uxtb	r3, r3
   39f50:	cmp	r3, #0
   39f54:	beq	39fc8 <__assert_fail@plt+0x28d58>
   39f58:	ldr	r3, [fp, #-44]	; 0xffffffd4
   39f5c:	cmp	r3, #0
   39f60:	movne	r3, #1
   39f64:	moveq	r3, #0
   39f68:	uxtb	r3, r3
   39f6c:	cmp	r3, #0
   39f70:	beq	39fc8 <__assert_fail@plt+0x28d58>
   39f74:	b	39bac <__assert_fail@plt+0x2893c>
   39f78:	ldr	r3, [fp, #-8]
   39f7c:	lsl	r3, r3, #2
   39f80:	sub	r2, fp, #4
   39f84:	add	r3, r2, r3
   39f88:	ldr	r2, [r3, #-1064]	; 0xfffffbd8
   39f8c:	ldr	r3, [fp, #-8]
   39f90:	lsl	r3, r3, #2
   39f94:	sub	r1, fp, #4
   39f98:	add	r3, r1, r3
   39f9c:	str	r2, [r3, #-2088]	; 0xfffff7d8
   39fa0:	ldr	r3, [fp, #-8]
   39fa4:	lsl	r3, r3, #2
   39fa8:	sub	r2, fp, #4
   39fac:	add	r3, r2, r3
   39fb0:	ldr	r2, [r3, #-1064]	; 0xfffffbd8
   39fb4:	ldr	r3, [fp, #-8]
   39fb8:	lsl	r3, r3, #2
   39fbc:	sub	r1, fp, #4
   39fc0:	add	r3, r1, r3
   39fc4:	str	r2, [r3, #-3112]	; 0xfffff3d8
   39fc8:	sub	r3, fp, #14400	; 0x3840
   39fcc:	sub	r3, r3, #4
   39fd0:	sub	r3, r3, #20
   39fd4:	ldr	r2, [fp, #-8]
   39fd8:	lsl	r2, r2, #5
   39fdc:	add	r2, r3, r2
   39fe0:	sub	r3, fp, #3152	; 0xc50
   39fe4:	sub	r3, r3, #4
   39fe8:	sub	r3, r3, #4
   39fec:	mov	r1, r2
   39ff0:	mov	r0, r3
   39ff4:	bl	2325c <__assert_fail@plt+0x11fec>
   39ff8:	ldr	r3, [fp, #-8]
   39ffc:	add	r3, r3, #1
   3a000:	str	r3, [fp, #-8]
   3a004:	ldr	r2, [fp, #-8]
   3a008:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3a00c:	cmp	r2, r3
   3a010:	blt	39c3c <__assert_fail@plt+0x289cc>
   3a014:	ldrb	r3, [fp, #-17]	; 0xffffffef
   3a018:	cmp	r3, #0
   3a01c:	bne	3a1d8 <__assert_fail@plt+0x28f68>
   3a020:	mov	r1, #256	; 0x100
   3a024:	mov	r0, #4
   3a028:	bl	3ded4 <__assert_fail@plt+0x2cc64>
   3a02c:	mov	r3, r0
   3a030:	mov	r2, r3
   3a034:	sub	r3, fp, #12288	; 0x3000
   3a038:	sub	r3, r3, #4
   3a03c:	ldr	r3, [r3, #-2144]	; 0xfffff7a0
   3a040:	str	r2, [r3, #44]	; 0x2c
   3a044:	sub	r3, fp, #12288	; 0x3000
   3a048:	sub	r3, r3, #4
   3a04c:	ldr	r3, [r3, #-2144]	; 0xfffff7a0
   3a050:	ldr	r3, [r3, #44]	; 0x2c
   3a054:	str	r3, [fp, #-32]	; 0xffffffe0
   3a058:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3a05c:	cmp	r3, #0
   3a060:	moveq	r3, #1
   3a064:	movne	r3, #0
   3a068:	uxtb	r3, r3
   3a06c:	cmp	r3, #0
   3a070:	bne	39ba0 <__assert_fail@plt+0x28930>
   3a074:	mov	r3, #0
   3a078:	str	r3, [fp, #-8]
   3a07c:	b	3a1c8 <__assert_fail@plt+0x28f58>
   3a080:	ldr	r3, [fp, #-8]
   3a084:	lsl	r3, r3, #5
   3a088:	str	r3, [fp, #-16]
   3a08c:	ldr	r3, [fp, #-8]
   3a090:	lsl	r3, r3, #2
   3a094:	sub	r2, fp, #4
   3a098:	add	r3, r2, r3
   3a09c:	ldr	r3, [r3, #-3156]	; 0xfffff3ac
   3a0a0:	str	r3, [fp, #-24]	; 0xffffffe8
   3a0a4:	mov	r3, #1
   3a0a8:	str	r3, [fp, #-28]	; 0xffffffe4
   3a0ac:	b	3a1b0 <__assert_fail@plt+0x28f40>
   3a0b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3a0b4:	and	r3, r3, #1
   3a0b8:	cmp	r3, #0
   3a0bc:	beq	3a18c <__assert_fail@plt+0x28f1c>
   3a0c0:	mov	r3, #0
   3a0c4:	str	r3, [fp, #-12]
   3a0c8:	b	3a0d8 <__assert_fail@plt+0x28e68>
   3a0cc:	ldr	r3, [fp, #-12]
   3a0d0:	add	r3, r3, #1
   3a0d4:	str	r3, [fp, #-12]
   3a0d8:	sub	r3, fp, #12288	; 0x3000
   3a0dc:	sub	r3, r3, #4
   3a0e0:	mov	r1, r3
   3a0e4:	ldr	r3, [fp, #-12]
   3a0e8:	lsl	r2, r3, #3
   3a0ec:	ldr	r3, [fp, #-8]
   3a0f0:	add	r3, r2, r3
   3a0f4:	lsl	r3, r3, #2
   3a0f8:	add	r3, r1, r3
   3a0fc:	ldr	r2, [r3, #-2132]	; 0xfffff7ac
   3a100:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3a104:	and	r3, r3, r2
   3a108:	cmp	r3, #0
   3a10c:	beq	3a0cc <__assert_fail@plt+0x28e5c>
   3a110:	sub	r3, fp, #12288	; 0x3000
   3a114:	sub	r3, r3, #4
   3a118:	ldr	r3, [r3, #-2140]	; 0xfffff7a4
   3a11c:	ldr	r2, [fp, #-8]
   3a120:	add	r2, r2, #24
   3a124:	ldr	r2, [r3, r2, lsl #2]
   3a128:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3a12c:	and	r3, r3, r2
   3a130:	cmp	r3, #0
   3a134:	beq	3a164 <__assert_fail@plt+0x28ef4>
   3a138:	ldr	r3, [fp, #-16]
   3a13c:	lsl	r3, r3, #2
   3a140:	ldr	r2, [fp, #-32]	; 0xffffffe0
   3a144:	add	r2, r2, r3
   3a148:	ldr	r3, [fp, #-12]
   3a14c:	lsl	r3, r3, #2
   3a150:	sub	r1, fp, #4
   3a154:	add	r3, r1, r3
   3a158:	ldr	r3, [r3, #-2088]	; 0xfffff7d8
   3a15c:	str	r3, [r2]
   3a160:	b	3a18c <__assert_fail@plt+0x28f1c>
   3a164:	ldr	r3, [fp, #-16]
   3a168:	lsl	r3, r3, #2
   3a16c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   3a170:	add	r2, r2, r3
   3a174:	ldr	r3, [fp, #-12]
   3a178:	lsl	r3, r3, #2
   3a17c:	sub	r1, fp, #4
   3a180:	add	r3, r1, r3
   3a184:	ldr	r3, [r3, #-1064]	; 0xfffffbd8
   3a188:	str	r3, [r2]
   3a18c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3a190:	lsl	r3, r3, #1
   3a194:	str	r3, [fp, #-28]	; 0xffffffe4
   3a198:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3a19c:	lsr	r3, r3, #1
   3a1a0:	str	r3, [fp, #-24]	; 0xffffffe8
   3a1a4:	ldr	r3, [fp, #-16]
   3a1a8:	add	r3, r3, #1
   3a1ac:	str	r3, [fp, #-16]
   3a1b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3a1b4:	cmp	r3, #0
   3a1b8:	bne	3a0b0 <__assert_fail@plt+0x28e40>
   3a1bc:	ldr	r3, [fp, #-8]
   3a1c0:	add	r3, r3, #1
   3a1c4:	str	r3, [fp, #-8]
   3a1c8:	ldr	r3, [fp, #-8]
   3a1cc:	cmp	r3, #7
   3a1d0:	ble	3a080 <__assert_fail@plt+0x28e10>
   3a1d4:	b	3a364 <__assert_fail@plt+0x290f4>
   3a1d8:	mov	r1, #512	; 0x200
   3a1dc:	mov	r0, #4
   3a1e0:	bl	3ded4 <__assert_fail@plt+0x2cc64>
   3a1e4:	mov	r3, r0
   3a1e8:	mov	r2, r3
   3a1ec:	sub	r3, fp, #12288	; 0x3000
   3a1f0:	sub	r3, r3, #4
   3a1f4:	ldr	r3, [r3, #-2144]	; 0xfffff7a0
   3a1f8:	str	r2, [r3, #48]	; 0x30
   3a1fc:	sub	r3, fp, #12288	; 0x3000
   3a200:	sub	r3, r3, #4
   3a204:	ldr	r3, [r3, #-2144]	; 0xfffff7a0
   3a208:	ldr	r3, [r3, #48]	; 0x30
   3a20c:	str	r3, [fp, #-32]	; 0xffffffe0
   3a210:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3a214:	cmp	r3, #0
   3a218:	moveq	r3, #1
   3a21c:	movne	r3, #0
   3a220:	uxtb	r3, r3
   3a224:	cmp	r3, #0
   3a228:	bne	39ba8 <__assert_fail@plt+0x28938>
   3a22c:	mov	r3, #0
   3a230:	str	r3, [fp, #-8]
   3a234:	b	3a358 <__assert_fail@plt+0x290e8>
   3a238:	ldr	r3, [fp, #-8]
   3a23c:	lsl	r3, r3, #5
   3a240:	str	r3, [fp, #-16]
   3a244:	ldr	r3, [fp, #-8]
   3a248:	lsl	r3, r3, #2
   3a24c:	sub	r2, fp, #4
   3a250:	add	r3, r2, r3
   3a254:	ldr	r3, [r3, #-3156]	; 0xfffff3ac
   3a258:	str	r3, [fp, #-24]	; 0xffffffe8
   3a25c:	mov	r3, #1
   3a260:	str	r3, [fp, #-28]	; 0xffffffe4
   3a264:	b	3a340 <__assert_fail@plt+0x290d0>
   3a268:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3a26c:	and	r3, r3, #1
   3a270:	cmp	r3, #0
   3a274:	beq	3a31c <__assert_fail@plt+0x290ac>
   3a278:	mov	r3, #0
   3a27c:	str	r3, [fp, #-12]
   3a280:	b	3a290 <__assert_fail@plt+0x29020>
   3a284:	ldr	r3, [fp, #-12]
   3a288:	add	r3, r3, #1
   3a28c:	str	r3, [fp, #-12]
   3a290:	sub	r3, fp, #12288	; 0x3000
   3a294:	sub	r3, r3, #4
   3a298:	mov	r1, r3
   3a29c:	ldr	r3, [fp, #-12]
   3a2a0:	lsl	r2, r3, #3
   3a2a4:	ldr	r3, [fp, #-8]
   3a2a8:	add	r3, r2, r3
   3a2ac:	lsl	r3, r3, #2
   3a2b0:	add	r3, r1, r3
   3a2b4:	ldr	r2, [r3, #-2132]	; 0xfffff7ac
   3a2b8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3a2bc:	and	r3, r3, r2
   3a2c0:	cmp	r3, #0
   3a2c4:	beq	3a284 <__assert_fail@plt+0x29014>
   3a2c8:	ldr	r3, [fp, #-16]
   3a2cc:	lsl	r3, r3, #2
   3a2d0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   3a2d4:	add	r2, r2, r3
   3a2d8:	ldr	r3, [fp, #-12]
   3a2dc:	lsl	r3, r3, #2
   3a2e0:	sub	r1, fp, #4
   3a2e4:	add	r3, r1, r3
   3a2e8:	ldr	r3, [r3, #-1064]	; 0xfffffbd8
   3a2ec:	str	r3, [r2]
   3a2f0:	ldr	r3, [fp, #-16]
   3a2f4:	add	r3, r3, #256	; 0x100
   3a2f8:	lsl	r3, r3, #2
   3a2fc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   3a300:	add	r2, r2, r3
   3a304:	ldr	r3, [fp, #-12]
   3a308:	lsl	r3, r3, #2
   3a30c:	sub	r1, fp, #4
   3a310:	add	r3, r1, r3
   3a314:	ldr	r3, [r3, #-2088]	; 0xfffff7d8
   3a318:	str	r3, [r2]
   3a31c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3a320:	lsl	r3, r3, #1
   3a324:	str	r3, [fp, #-28]	; 0xffffffe4
   3a328:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3a32c:	lsr	r3, r3, #1
   3a330:	str	r3, [fp, #-24]	; 0xffffffe8
   3a334:	ldr	r3, [fp, #-16]
   3a338:	add	r3, r3, #1
   3a33c:	str	r3, [fp, #-16]
   3a340:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3a344:	cmp	r3, #0
   3a348:	bne	3a268 <__assert_fail@plt+0x28ff8>
   3a34c:	ldr	r3, [fp, #-8]
   3a350:	add	r3, r3, #1
   3a354:	str	r3, [fp, #-8]
   3a358:	ldr	r3, [fp, #-8]
   3a35c:	cmp	r3, #7
   3a360:	ble	3a238 <__assert_fail@plt+0x28fc8>
   3a364:	sub	r3, fp, #3152	; 0xc50
   3a368:	sub	r3, r3, #4
   3a36c:	sub	r3, r3, #4
   3a370:	mov	r1, #10
   3a374:	mov	r0, r3
   3a378:	bl	230e8 <__assert_fail@plt+0x11e78>
   3a37c:	mov	r3, r0
   3a380:	cmp	r3, #0
   3a384:	beq	3a43c <__assert_fail@plt+0x291cc>
   3a388:	mov	r3, #0
   3a38c:	str	r3, [fp, #-12]
   3a390:	b	3a424 <__assert_fail@plt+0x291b4>
   3a394:	sub	r3, fp, #14400	; 0x3840
   3a398:	sub	r3, r3, #4
   3a39c:	sub	r3, r3, #20
   3a3a0:	ldr	r2, [fp, #-12]
   3a3a4:	lsl	r2, r2, #5
   3a3a8:	add	r3, r3, r2
   3a3ac:	mov	r1, #10
   3a3b0:	mov	r0, r3
   3a3b4:	bl	230e8 <__assert_fail@plt+0x11e78>
   3a3b8:	mov	r3, r0
   3a3bc:	cmp	r3, #0
   3a3c0:	beq	3a418 <__assert_fail@plt+0x291a8>
   3a3c4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3a3c8:	add	r2, r3, #40	; 0x28
   3a3cc:	ldr	r3, [fp, #-12]
   3a3d0:	lsl	r3, r3, #2
   3a3d4:	sub	r1, fp, #4
   3a3d8:	add	r3, r1, r3
   3a3dc:	ldr	r3, [r3, #-3112]	; 0xfffff3d8
   3a3e0:	str	r3, [r2]
   3a3e4:	ldrb	r3, [fp, #-17]	; 0xffffffef
   3a3e8:	cmp	r3, #0
   3a3ec:	beq	3a438 <__assert_fail@plt+0x291c8>
   3a3f0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3a3f4:	add	r3, r3, #1056	; 0x420
   3a3f8:	add	r3, r3, #8
   3a3fc:	ldr	r2, [fp, #-12]
   3a400:	lsl	r2, r2, #2
   3a404:	sub	r1, fp, #4
   3a408:	add	r2, r1, r2
   3a40c:	ldr	r2, [r2, #-3112]	; 0xfffff3d8
   3a410:	str	r2, [r3]
   3a414:	b	3a438 <__assert_fail@plt+0x291c8>
   3a418:	ldr	r3, [fp, #-12]
   3a41c:	add	r3, r3, #1
   3a420:	str	r3, [fp, #-12]
   3a424:	ldr	r2, [fp, #-12]
   3a428:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3a42c:	cmp	r2, r3
   3a430:	blt	3a394 <__assert_fail@plt+0x29124>
   3a434:	b	3a43c <__assert_fail@plt+0x291cc>
   3a438:	nop			; (mov r0, r0)
   3a43c:	ldr	r3, [fp, #-3120]	; 0xfffff3d0
   3a440:	mov	r0, r3
   3a444:	bl	13630 <__assert_fail@plt+0x23c0>
   3a448:	mov	r3, #0
   3a44c:	str	r3, [fp, #-8]
   3a450:	b	3a494 <__assert_fail@plt+0x29224>
   3a454:	ldr	r2, [fp, #-8]
   3a458:	mov	r3, r2
   3a45c:	lsl	r3, r3, #1
   3a460:	add	r3, r3, r2
   3a464:	lsl	r3, r3, #2
   3a468:	mov	r2, r3
   3a46c:	sub	r3, fp, #6208	; 0x1840
   3a470:	sub	r3, r3, #4
   3a474:	sub	r3, r3, #20
   3a478:	add	r3, r3, r2
   3a47c:	ldr	r3, [r3, #8]
   3a480:	mov	r0, r3
   3a484:	bl	13630 <__assert_fail@plt+0x23c0>
   3a488:	ldr	r3, [fp, #-8]
   3a48c:	add	r3, r3, #1
   3a490:	str	r3, [fp, #-8]
   3a494:	ldr	r2, [fp, #-8]
   3a498:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3a49c:	cmp	r2, r3
   3a4a0:	blt	3a454 <__assert_fail@plt+0x291e4>
   3a4a4:	mov	r3, #1
   3a4a8:	mov	r0, r3
   3a4ac:	sub	sp, fp, #4
   3a4b0:	pop	{fp, pc}
   3a4b4:	push	{fp, lr}
   3a4b8:	add	fp, sp, #4
   3a4bc:	sub	sp, sp, #176	; 0xb0
   3a4c0:	str	r0, [fp, #-168]	; 0xffffff58
   3a4c4:	str	r1, [fp, #-172]	; 0xffffff54
   3a4c8:	str	r2, [fp, #-176]	; 0xffffff50
   3a4cc:	str	r3, [fp, #-180]	; 0xffffff4c
   3a4d0:	ldr	r3, [fp, #-172]	; 0xffffff54
   3a4d4:	add	r3, r3, #4
   3a4d8:	str	r3, [fp, #-44]	; 0xffffffd4
   3a4dc:	sub	r3, fp, #100	; 0x64
   3a4e0:	mov	r0, r3
   3a4e4:	bl	23164 <__assert_fail@plt+0x11ef4>
   3a4e8:	mov	r3, #0
   3a4ec:	str	r3, [fp, #-20]	; 0xffffffec
   3a4f0:	mov	r3, #0
   3a4f4:	str	r3, [fp, #-8]
   3a4f8:	b	3ae54 <__assert_fail@plt+0x29be4>
   3a4fc:	ldr	r3, [fp, #-168]	; 0xffffff58
   3a500:	ldr	r2, [r3]
   3a504:	ldr	r3, [fp, #-44]	; 0xffffffd4
   3a508:	ldr	r1, [r3, #8]
   3a50c:	ldr	r3, [fp, #-8]
   3a510:	lsl	r3, r3, #2
   3a514:	add	r3, r1, r3
   3a518:	ldr	r3, [r3]
   3a51c:	lsl	r3, r3, #3
   3a520:	add	r3, r2, r3
   3a524:	str	r3, [fp, #-48]	; 0xffffffd0
   3a528:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3a52c:	ldrb	r3, [r3, #4]
   3a530:	str	r3, [fp, #-52]	; 0xffffffcc
   3a534:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3a538:	ldr	r3, [r3, #4]
   3a53c:	lsr	r3, r3, #8
   3a540:	lsl	r3, r3, #22
   3a544:	lsr	r3, r3, #22
   3a548:	uxth	r3, r3
   3a54c:	str	r3, [fp, #-56]	; 0xffffffc8
   3a550:	ldr	r3, [fp, #-52]	; 0xffffffcc
   3a554:	cmp	r3, #1
   3a558:	bne	3a57c <__assert_fail@plt+0x2930c>
   3a55c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3a560:	ldrb	r3, [r3]
   3a564:	mov	r2, r3
   3a568:	sub	r3, fp, #100	; 0x64
   3a56c:	mov	r1, r2
   3a570:	mov	r0, r3
   3a574:	bl	22fc4 <__assert_fail@plt+0x11d54>
   3a578:	b	3a69c <__assert_fail@plt+0x2942c>
   3a57c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   3a580:	cmp	r3, #3
   3a584:	bne	3a5a4 <__assert_fail@plt+0x29334>
   3a588:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3a58c:	ldr	r2, [r3]
   3a590:	sub	r3, fp, #100	; 0x64
   3a594:	mov	r1, r2
   3a598:	mov	r0, r3
   3a59c:	bl	2325c <__assert_fail@plt+0x11fec>
   3a5a0:	b	3a69c <__assert_fail@plt+0x2942c>
   3a5a4:	ldr	r3, [fp, #-52]	; 0xffffffcc
   3a5a8:	cmp	r3, #5
   3a5ac:	bne	3a634 <__assert_fail@plt+0x293c4>
   3a5b0:	ldr	r3, [fp, #-168]	; 0xffffff58
   3a5b4:	ldr	r3, [r3, #92]	; 0x5c
   3a5b8:	cmp	r3, #1
   3a5bc:	ble	3a5dc <__assert_fail@plt+0x2936c>
   3a5c0:	ldr	r3, [fp, #-168]	; 0xffffff58
   3a5c4:	ldr	r2, [r3, #60]	; 0x3c
   3a5c8:	sub	r3, fp, #100	; 0x64
   3a5cc:	mov	r1, r2
   3a5d0:	mov	r0, r3
   3a5d4:	bl	2325c <__assert_fail@plt+0x11fec>
   3a5d8:	b	3a5e8 <__assert_fail@plt+0x29378>
   3a5dc:	sub	r3, fp, #100	; 0x64
   3a5e0:	mov	r0, r3
   3a5e4:	bl	23190 <__assert_fail@plt+0x11f20>
   3a5e8:	ldr	r3, [fp, #-168]	; 0xffffff58
   3a5ec:	ldr	r3, [r3, #128]	; 0x80
   3a5f0:	and	r3, r3, #64	; 0x40
   3a5f4:	cmp	r3, #0
   3a5f8:	bne	3a60c <__assert_fail@plt+0x2939c>
   3a5fc:	sub	r3, fp, #100	; 0x64
   3a600:	mov	r1, #10
   3a604:	mov	r0, r3
   3a608:	bl	23054 <__assert_fail@plt+0x11de4>
   3a60c:	ldr	r3, [fp, #-168]	; 0xffffff58
   3a610:	ldr	r3, [r3, #128]	; 0x80
   3a614:	and	r3, r3, #128	; 0x80
   3a618:	cmp	r3, #0
   3a61c:	beq	3a69c <__assert_fail@plt+0x2942c>
   3a620:	sub	r3, fp, #100	; 0x64
   3a624:	mov	r1, #0
   3a628:	mov	r0, r3
   3a62c:	bl	23054 <__assert_fail@plt+0x11de4>
   3a630:	b	3a69c <__assert_fail@plt+0x2942c>
   3a634:	ldr	r3, [fp, #-52]	; 0xffffffcc
   3a638:	cmp	r3, #7
   3a63c:	bne	3ae2c <__assert_fail@plt+0x29bbc>
   3a640:	sub	r3, fp, #100	; 0x64
   3a644:	mov	r2, #16
   3a648:	mvn	r1, #0
   3a64c:	mov	r0, r3
   3a650:	bl	111bc <memset@plt>
   3a654:	ldr	r3, [fp, #-168]	; 0xffffff58
   3a658:	ldr	r3, [r3, #128]	; 0x80
   3a65c:	and	r3, r3, #64	; 0x40
   3a660:	cmp	r3, #0
   3a664:	bne	3a678 <__assert_fail@plt+0x29408>
   3a668:	sub	r3, fp, #100	; 0x64
   3a66c:	mov	r1, #10
   3a670:	mov	r0, r3
   3a674:	bl	23054 <__assert_fail@plt+0x11de4>
   3a678:	ldr	r3, [fp, #-168]	; 0xffffff58
   3a67c:	ldr	r3, [r3, #128]	; 0x80
   3a680:	and	r3, r3, #128	; 0x80
   3a684:	cmp	r3, #0
   3a688:	beq	3a69c <__assert_fail@plt+0x2942c>
   3a68c:	sub	r3, fp, #100	; 0x64
   3a690:	mov	r1, #0
   3a694:	mov	r0, r3
   3a698:	bl	23054 <__assert_fail@plt+0x11de4>
   3a69c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   3a6a0:	cmp	r3, #0
   3a6a4:	beq	3aa34 <__assert_fail@plt+0x297c4>
   3a6a8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   3a6ac:	and	r3, r3, #32
   3a6b0:	cmp	r3, #0
   3a6b4:	beq	3a6f8 <__assert_fail@plt+0x29488>
   3a6b8:	sub	r3, fp, #100	; 0x64
   3a6bc:	mov	r1, #10
   3a6c0:	mov	r0, r3
   3a6c4:	bl	230e8 <__assert_fail@plt+0x11e78>
   3a6c8:	mov	r3, r0
   3a6cc:	strb	r3, [fp, #-57]	; 0xffffffc7
   3a6d0:	sub	r3, fp, #100	; 0x64
   3a6d4:	mov	r0, r3
   3a6d8:	bl	23164 <__assert_fail@plt+0x11ef4>
   3a6dc:	ldrb	r3, [fp, #-57]	; 0xffffffc7
   3a6e0:	cmp	r3, #0
   3a6e4:	beq	3ae34 <__assert_fail@plt+0x29bc4>
   3a6e8:	sub	r3, fp, #100	; 0x64
   3a6ec:	mov	r1, #10
   3a6f0:	mov	r0, r3
   3a6f4:	bl	22fc4 <__assert_fail@plt+0x11d54>
   3a6f8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   3a6fc:	and	r3, r3, #128	; 0x80
   3a700:	cmp	r3, #0
   3a704:	beq	3a718 <__assert_fail@plt+0x294a8>
   3a708:	sub	r3, fp, #100	; 0x64
   3a70c:	mov	r0, r3
   3a710:	bl	23164 <__assert_fail@plt+0x11ef4>
   3a714:	b	3ae48 <__assert_fail@plt+0x29bd8>
   3a718:	ldr	r3, [fp, #-56]	; 0xffffffc8
   3a71c:	and	r3, r3, #4
   3a720:	cmp	r3, #0
   3a724:	beq	3a8a4 <__assert_fail@plt+0x29634>
   3a728:	mov	r3, #0
   3a72c:	str	r3, [fp, #-24]	; 0xffffffe8
   3a730:	ldr	r3, [fp, #-52]	; 0xffffffcc
   3a734:	cmp	r3, #1
   3a738:	bne	3a764 <__assert_fail@plt+0x294f4>
   3a73c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3a740:	ldrb	r3, [r3, #6]
   3a744:	and	r3, r3, #64	; 0x40
   3a748:	uxtb	r3, r3
   3a74c:	cmp	r3, #0
   3a750:	bne	3a764 <__assert_fail@plt+0x294f4>
   3a754:	sub	r3, fp, #100	; 0x64
   3a758:	mov	r0, r3
   3a75c:	bl	23164 <__assert_fail@plt+0x11ef4>
   3a760:	b	3ae48 <__assert_fail@plt+0x29bd8>
   3a764:	ldr	r3, [fp, #-168]	; 0xffffff58
   3a768:	ldr	r3, [r3, #92]	; 0x5c
   3a76c:	cmp	r3, #1
   3a770:	ble	3a818 <__assert_fail@plt+0x295a8>
   3a774:	mov	r3, #0
   3a778:	str	r3, [fp, #-12]
   3a77c:	b	3a808 <__assert_fail@plt+0x29598>
   3a780:	ldr	r3, [fp, #-12]
   3a784:	lsl	r3, r3, #2
   3a788:	sub	r2, fp, #4
   3a78c:	add	r3, r2, r3
   3a790:	ldr	r2, [r3, #-96]	; 0xffffffa0
   3a794:	ldr	r3, [fp, #-168]	; 0xffffff58
   3a798:	ldr	r1, [fp, #-12]
   3a79c:	add	r1, r1, #24
   3a7a0:	ldr	r1, [r3, r1, lsl #2]
   3a7a4:	ldr	r3, [fp, #-168]	; 0xffffff58
   3a7a8:	ldr	r0, [r3, #60]	; 0x3c
   3a7ac:	ldr	r3, [fp, #-12]
   3a7b0:	lsl	r3, r3, #2
   3a7b4:	add	r3, r0, r3
   3a7b8:	ldr	r3, [r3]
   3a7bc:	mvn	r3, r3
   3a7c0:	orr	r3, r1, r3
   3a7c4:	and	r2, r2, r3
   3a7c8:	ldr	r3, [fp, #-12]
   3a7cc:	lsl	r3, r3, #2
   3a7d0:	sub	r1, fp, #4
   3a7d4:	add	r3, r1, r3
   3a7d8:	str	r2, [r3, #-96]	; 0xffffffa0
   3a7dc:	ldr	r3, [fp, #-12]
   3a7e0:	lsl	r3, r3, #2
   3a7e4:	sub	r2, fp, #4
   3a7e8:	add	r3, r2, r3
   3a7ec:	ldr	r3, [r3, #-96]	; 0xffffffa0
   3a7f0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3a7f4:	orr	r3, r2, r3
   3a7f8:	str	r3, [fp, #-24]	; 0xffffffe8
   3a7fc:	ldr	r3, [fp, #-12]
   3a800:	add	r3, r3, #1
   3a804:	str	r3, [fp, #-12]
   3a808:	ldr	r3, [fp, #-12]
   3a80c:	cmp	r3, #7
   3a810:	ble	3a780 <__assert_fail@plt+0x29510>
   3a814:	b	3a898 <__assert_fail@plt+0x29628>
   3a818:	mov	r3, #0
   3a81c:	str	r3, [fp, #-12]
   3a820:	b	3a88c <__assert_fail@plt+0x2961c>
   3a824:	ldr	r3, [fp, #-12]
   3a828:	lsl	r3, r3, #2
   3a82c:	sub	r2, fp, #4
   3a830:	add	r3, r2, r3
   3a834:	ldr	r2, [r3, #-96]	; 0xffffffa0
   3a838:	ldr	r3, [fp, #-168]	; 0xffffff58
   3a83c:	ldr	r1, [fp, #-12]
   3a840:	add	r1, r1, #24
   3a844:	ldr	r3, [r3, r1, lsl #2]
   3a848:	and	r2, r2, r3
   3a84c:	ldr	r3, [fp, #-12]
   3a850:	lsl	r3, r3, #2
   3a854:	sub	r1, fp, #4
   3a858:	add	r3, r1, r3
   3a85c:	str	r2, [r3, #-96]	; 0xffffffa0
   3a860:	ldr	r3, [fp, #-12]
   3a864:	lsl	r3, r3, #2
   3a868:	sub	r2, fp, #4
   3a86c:	add	r3, r2, r3
   3a870:	ldr	r3, [r3, #-96]	; 0xffffffa0
   3a874:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3a878:	orr	r3, r2, r3
   3a87c:	str	r3, [fp, #-24]	; 0xffffffe8
   3a880:	ldr	r3, [fp, #-12]
   3a884:	add	r3, r3, #1
   3a888:	str	r3, [fp, #-12]
   3a88c:	ldr	r3, [fp, #-12]
   3a890:	cmp	r3, #7
   3a894:	ble	3a824 <__assert_fail@plt+0x295b4>
   3a898:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3a89c:	cmp	r3, #0
   3a8a0:	beq	3ae3c <__assert_fail@plt+0x29bcc>
   3a8a4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   3a8a8:	and	r3, r3, #8
   3a8ac:	cmp	r3, #0
   3a8b0:	beq	3aa34 <__assert_fail@plt+0x297c4>
   3a8b4:	mov	r3, #0
   3a8b8:	str	r3, [fp, #-28]	; 0xffffffe4
   3a8bc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   3a8c0:	cmp	r3, #1
   3a8c4:	bne	3a8f0 <__assert_fail@plt+0x29680>
   3a8c8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3a8cc:	ldrb	r3, [r3, #6]
   3a8d0:	and	r3, r3, #64	; 0x40
   3a8d4:	uxtb	r3, r3
   3a8d8:	cmp	r3, #0
   3a8dc:	beq	3a8f0 <__assert_fail@plt+0x29680>
   3a8e0:	sub	r3, fp, #100	; 0x64
   3a8e4:	mov	r0, r3
   3a8e8:	bl	23164 <__assert_fail@plt+0x11ef4>
   3a8ec:	b	3ae48 <__assert_fail@plt+0x29bd8>
   3a8f0:	ldr	r3, [fp, #-168]	; 0xffffff58
   3a8f4:	ldr	r3, [r3, #92]	; 0x5c
   3a8f8:	cmp	r3, #1
   3a8fc:	ble	3a9a4 <__assert_fail@plt+0x29734>
   3a900:	mov	r3, #0
   3a904:	str	r3, [fp, #-12]
   3a908:	b	3a994 <__assert_fail@plt+0x29724>
   3a90c:	ldr	r3, [fp, #-12]
   3a910:	lsl	r3, r3, #2
   3a914:	sub	r2, fp, #4
   3a918:	add	r3, r2, r3
   3a91c:	ldr	r2, [r3, #-96]	; 0xffffffa0
   3a920:	ldr	r3, [fp, #-168]	; 0xffffff58
   3a924:	ldr	r1, [fp, #-12]
   3a928:	add	r1, r1, #24
   3a92c:	ldr	r1, [r3, r1, lsl #2]
   3a930:	ldr	r3, [fp, #-168]	; 0xffffff58
   3a934:	ldr	r0, [r3, #60]	; 0x3c
   3a938:	ldr	r3, [fp, #-12]
   3a93c:	lsl	r3, r3, #2
   3a940:	add	r3, r0, r3
   3a944:	ldr	r3, [r3]
   3a948:	and	r3, r3, r1
   3a94c:	mvn	r3, r3
   3a950:	and	r2, r2, r3
   3a954:	ldr	r3, [fp, #-12]
   3a958:	lsl	r3, r3, #2
   3a95c:	sub	r1, fp, #4
   3a960:	add	r3, r1, r3
   3a964:	str	r2, [r3, #-96]	; 0xffffffa0
   3a968:	ldr	r3, [fp, #-12]
   3a96c:	lsl	r3, r3, #2
   3a970:	sub	r2, fp, #4
   3a974:	add	r3, r2, r3
   3a978:	ldr	r3, [r3, #-96]	; 0xffffffa0
   3a97c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   3a980:	orr	r3, r2, r3
   3a984:	str	r3, [fp, #-28]	; 0xffffffe4
   3a988:	ldr	r3, [fp, #-12]
   3a98c:	add	r3, r3, #1
   3a990:	str	r3, [fp, #-12]
   3a994:	ldr	r3, [fp, #-12]
   3a998:	cmp	r3, #7
   3a99c:	ble	3a90c <__assert_fail@plt+0x2969c>
   3a9a0:	b	3aa28 <__assert_fail@plt+0x297b8>
   3a9a4:	mov	r3, #0
   3a9a8:	str	r3, [fp, #-12]
   3a9ac:	b	3aa1c <__assert_fail@plt+0x297ac>
   3a9b0:	ldr	r3, [fp, #-12]
   3a9b4:	lsl	r3, r3, #2
   3a9b8:	sub	r2, fp, #4
   3a9bc:	add	r3, r2, r3
   3a9c0:	ldr	r2, [r3, #-96]	; 0xffffffa0
   3a9c4:	ldr	r3, [fp, #-168]	; 0xffffff58
   3a9c8:	ldr	r1, [fp, #-12]
   3a9cc:	add	r1, r1, #24
   3a9d0:	ldr	r3, [r3, r1, lsl #2]
   3a9d4:	mvn	r3, r3
   3a9d8:	and	r2, r2, r3
   3a9dc:	ldr	r3, [fp, #-12]
   3a9e0:	lsl	r3, r3, #2
   3a9e4:	sub	r1, fp, #4
   3a9e8:	add	r3, r1, r3
   3a9ec:	str	r2, [r3, #-96]	; 0xffffffa0
   3a9f0:	ldr	r3, [fp, #-12]
   3a9f4:	lsl	r3, r3, #2
   3a9f8:	sub	r2, fp, #4
   3a9fc:	add	r3, r2, r3
   3aa00:	ldr	r3, [r3, #-96]	; 0xffffffa0
   3aa04:	ldr	r2, [fp, #-28]	; 0xffffffe4
   3aa08:	orr	r3, r2, r3
   3aa0c:	str	r3, [fp, #-28]	; 0xffffffe4
   3aa10:	ldr	r3, [fp, #-12]
   3aa14:	add	r3, r3, #1
   3aa18:	str	r3, [fp, #-12]
   3aa1c:	ldr	r3, [fp, #-12]
   3aa20:	cmp	r3, #7
   3aa24:	ble	3a9b0 <__assert_fail@plt+0x29740>
   3aa28:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3aa2c:	cmp	r3, #0
   3aa30:	beq	3ae44 <__assert_fail@plt+0x29bd4>
   3aa34:	mov	r3, #0
   3aa38:	str	r3, [fp, #-12]
   3aa3c:	b	3ad68 <__assert_fail@plt+0x29af8>
   3aa40:	ldr	r3, [fp, #-52]	; 0xffffffcc
   3aa44:	cmp	r3, #1
   3aa48:	bne	3aa84 <__assert_fail@plt+0x29814>
   3aa4c:	ldr	r3, [fp, #-12]
   3aa50:	lsl	r3, r3, #5
   3aa54:	ldr	r2, [fp, #-180]	; 0xffffff4c
   3aa58:	add	r2, r2, r3
   3aa5c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3aa60:	ldrb	r3, [r3]
   3aa64:	mov	r1, r3
   3aa68:	mov	r0, r2
   3aa6c:	bl	230e8 <__assert_fail@plt+0x11e78>
   3aa70:	mov	r3, r0
   3aa74:	eor	r3, r3, #1
   3aa78:	uxtb	r3, r3
   3aa7c:	cmp	r3, #0
   3aa80:	bne	3ad50 <__assert_fail@plt+0x29ae0>
   3aa84:	mov	r3, #0
   3aa88:	str	r3, [fp, #-32]	; 0xffffffe0
   3aa8c:	mov	r3, #0
   3aa90:	str	r3, [fp, #-16]
   3aa94:	b	3ab08 <__assert_fail@plt+0x29898>
   3aa98:	ldr	r3, [fp, #-16]
   3aa9c:	lsl	r3, r3, #2
   3aaa0:	sub	r2, fp, #4
   3aaa4:	add	r3, r2, r3
   3aaa8:	ldr	r2, [r3, #-96]	; 0xffffffa0
   3aaac:	ldr	r3, [fp, #-12]
   3aab0:	lsl	r3, r3, #5
   3aab4:	ldr	r1, [fp, #-180]	; 0xffffff4c
   3aab8:	add	r3, r1, r3
   3aabc:	ldr	r1, [fp, #-16]
   3aac0:	ldr	r3, [r3, r1, lsl #2]
   3aac4:	and	r2, r2, r3
   3aac8:	ldr	r3, [fp, #-16]
   3aacc:	lsl	r3, r3, #2
   3aad0:	sub	r1, fp, #4
   3aad4:	add	r3, r1, r3
   3aad8:	str	r2, [r3, #-160]	; 0xffffff60
   3aadc:	ldr	r3, [fp, #-16]
   3aae0:	lsl	r3, r3, #2
   3aae4:	sub	r2, fp, #4
   3aae8:	add	r3, r2, r3
   3aaec:	ldr	r3, [r3, #-160]	; 0xffffff60
   3aaf0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   3aaf4:	orr	r3, r2, r3
   3aaf8:	str	r3, [fp, #-32]	; 0xffffffe0
   3aafc:	ldr	r3, [fp, #-16]
   3ab00:	add	r3, r3, #1
   3ab04:	str	r3, [fp, #-16]
   3ab08:	ldr	r3, [fp, #-16]
   3ab0c:	cmp	r3, #7
   3ab10:	ble	3aa98 <__assert_fail@plt+0x29828>
   3ab14:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3ab18:	cmp	r3, #0
   3ab1c:	beq	3ad58 <__assert_fail@plt+0x29ae8>
   3ab20:	mov	r3, #0
   3ab24:	str	r3, [fp, #-40]	; 0xffffffd8
   3ab28:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3ab2c:	str	r3, [fp, #-36]	; 0xffffffdc
   3ab30:	mov	r3, #0
   3ab34:	str	r3, [fp, #-16]
   3ab38:	b	3ac18 <__assert_fail@plt+0x299a8>
   3ab3c:	ldr	r3, [fp, #-16]
   3ab40:	lsl	r3, r3, #2
   3ab44:	sub	r2, fp, #4
   3ab48:	add	r3, r2, r3
   3ab4c:	ldr	r3, [r3, #-96]	; 0xffffffa0
   3ab50:	mvn	r2, r3
   3ab54:	ldr	r3, [fp, #-12]
   3ab58:	lsl	r3, r3, #5
   3ab5c:	ldr	r1, [fp, #-180]	; 0xffffff4c
   3ab60:	add	r3, r1, r3
   3ab64:	ldr	r1, [fp, #-16]
   3ab68:	ldr	r3, [r3, r1, lsl #2]
   3ab6c:	and	r2, r2, r3
   3ab70:	ldr	r3, [fp, #-16]
   3ab74:	lsl	r3, r3, #2
   3ab78:	sub	r1, fp, #4
   3ab7c:	add	r3, r1, r3
   3ab80:	str	r2, [r3, #-128]	; 0xffffff80
   3ab84:	ldr	r3, [fp, #-16]
   3ab88:	lsl	r3, r3, #2
   3ab8c:	sub	r2, fp, #4
   3ab90:	add	r3, r2, r3
   3ab94:	ldr	r3, [r3, #-128]	; 0xffffff80
   3ab98:	ldr	r2, [fp, #-36]	; 0xffffffdc
   3ab9c:	orr	r3, r2, r3
   3aba0:	str	r3, [fp, #-36]	; 0xffffffdc
   3aba4:	ldr	r3, [fp, #-16]
   3aba8:	lsl	r3, r3, #2
   3abac:	sub	r2, fp, #4
   3abb0:	add	r3, r2, r3
   3abb4:	ldr	r2, [r3, #-96]	; 0xffffffa0
   3abb8:	ldr	r3, [fp, #-12]
   3abbc:	lsl	r3, r3, #5
   3abc0:	ldr	r1, [fp, #-180]	; 0xffffff4c
   3abc4:	add	r3, r1, r3
   3abc8:	ldr	r1, [fp, #-16]
   3abcc:	ldr	r3, [r3, r1, lsl #2]
   3abd0:	mvn	r3, r3
   3abd4:	and	r2, r2, r3
   3abd8:	ldr	r3, [fp, #-16]
   3abdc:	lsl	r3, r3, #2
   3abe0:	sub	r1, fp, #4
   3abe4:	add	r3, r1, r3
   3abe8:	str	r2, [r3, #-96]	; 0xffffffa0
   3abec:	ldr	r3, [fp, #-16]
   3abf0:	lsl	r3, r3, #2
   3abf4:	sub	r2, fp, #4
   3abf8:	add	r3, r2, r3
   3abfc:	ldr	r3, [r3, #-96]	; 0xffffffa0
   3ac00:	ldr	r2, [fp, #-40]	; 0xffffffd8
   3ac04:	orr	r3, r2, r3
   3ac08:	str	r3, [fp, #-40]	; 0xffffffd8
   3ac0c:	ldr	r3, [fp, #-16]
   3ac10:	add	r3, r3, #1
   3ac14:	str	r3, [fp, #-16]
   3ac18:	ldr	r3, [fp, #-16]
   3ac1c:	cmp	r3, #7
   3ac20:	ble	3ab3c <__assert_fail@plt+0x298cc>
   3ac24:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3ac28:	cmp	r3, #0
   3ac2c:	beq	3ace4 <__assert_fail@plt+0x29a74>
   3ac30:	ldr	r3, [fp, #-20]	; 0xffffffec
   3ac34:	lsl	r3, r3, #5
   3ac38:	ldr	r2, [fp, #-180]	; 0xffffff4c
   3ac3c:	add	r3, r2, r3
   3ac40:	sub	r2, fp, #132	; 0x84
   3ac44:	mov	r1, r2
   3ac48:	mov	r0, r3
   3ac4c:	bl	231bc <__assert_fail@plt+0x11f4c>
   3ac50:	ldr	r3, [fp, #-12]
   3ac54:	lsl	r3, r3, #5
   3ac58:	ldr	r2, [fp, #-180]	; 0xffffff4c
   3ac5c:	add	r3, r2, r3
   3ac60:	sub	r2, fp, #164	; 0xa4
   3ac64:	mov	r1, r2
   3ac68:	mov	r0, r3
   3ac6c:	bl	231bc <__assert_fail@plt+0x11f4c>
   3ac70:	ldr	r2, [fp, #-20]	; 0xffffffec
   3ac74:	mov	r3, r2
   3ac78:	lsl	r3, r3, #1
   3ac7c:	add	r3, r3, r2
   3ac80:	lsl	r3, r3, #2
   3ac84:	mov	r2, r3
   3ac88:	ldr	r3, [fp, #-176]	; 0xffffff50
   3ac8c:	add	r0, r3, r2
   3ac90:	ldr	r2, [fp, #-12]
   3ac94:	mov	r3, r2
   3ac98:	lsl	r3, r3, #1
   3ac9c:	add	r3, r3, r2
   3aca0:	lsl	r3, r3, #2
   3aca4:	mov	r2, r3
   3aca8:	ldr	r3, [fp, #-176]	; 0xffffff50
   3acac:	add	r3, r3, r2
   3acb0:	mov	r1, r3
   3acb4:	bl	26130 <__assert_fail@plt+0x14ec0>
   3acb8:	str	r0, [fp, #-64]	; 0xffffffc0
   3acbc:	ldr	r3, [fp, #-64]	; 0xffffffc0
   3acc0:	cmp	r3, #0
   3acc4:	movne	r3, #1
   3acc8:	moveq	r3, #0
   3accc:	uxtb	r3, r3
   3acd0:	cmp	r3, #0
   3acd4:	bne	3ae78 <__assert_fail@plt+0x29c08>
   3acd8:	ldr	r3, [fp, #-20]	; 0xffffffec
   3acdc:	add	r3, r3, #1
   3ace0:	str	r3, [fp, #-20]	; 0xffffffec
   3ace4:	ldr	r2, [fp, #-12]
   3ace8:	mov	r3, r2
   3acec:	lsl	r3, r3, #1
   3acf0:	add	r3, r3, r2
   3acf4:	lsl	r3, r3, #2
   3acf8:	mov	r2, r3
   3acfc:	ldr	r3, [fp, #-176]	; 0xffffff50
   3ad00:	add	r0, r3, r2
   3ad04:	ldr	r3, [fp, #-44]	; 0xffffffd4
   3ad08:	ldr	r2, [r3, #8]
   3ad0c:	ldr	r3, [fp, #-8]
   3ad10:	lsl	r3, r3, #2
   3ad14:	add	r3, r2, r3
   3ad18:	ldr	r3, [r3]
   3ad1c:	mov	r1, r3
   3ad20:	bl	26e8c <__assert_fail@plt+0x15c1c>
   3ad24:	mov	r3, r0
   3ad28:	strb	r3, [fp, #-65]	; 0xffffffbf
   3ad2c:	ldrb	r3, [fp, #-65]	; 0xffffffbf
   3ad30:	eor	r3, r3, #1
   3ad34:	uxtb	r3, r3
   3ad38:	cmp	r3, #0
   3ad3c:	bne	3ae80 <__assert_fail@plt+0x29c10>
   3ad40:	ldr	r3, [fp, #-40]	; 0xffffffd8
   3ad44:	cmp	r3, #0
   3ad48:	beq	3ad7c <__assert_fail@plt+0x29b0c>
   3ad4c:	b	3ad5c <__assert_fail@plt+0x29aec>
   3ad50:	nop			; (mov r0, r0)
   3ad54:	b	3ad5c <__assert_fail@plt+0x29aec>
   3ad58:	nop			; (mov r0, r0)
   3ad5c:	ldr	r3, [fp, #-12]
   3ad60:	add	r3, r3, #1
   3ad64:	str	r3, [fp, #-12]
   3ad68:	ldr	r2, [fp, #-12]
   3ad6c:	ldr	r3, [fp, #-20]	; 0xffffffec
   3ad70:	cmp	r2, r3
   3ad74:	blt	3aa40 <__assert_fail@plt+0x297d0>
   3ad78:	b	3ad80 <__assert_fail@plt+0x29b10>
   3ad7c:	nop			; (mov r0, r0)
   3ad80:	ldr	r2, [fp, #-12]
   3ad84:	ldr	r3, [fp, #-20]	; 0xffffffec
   3ad88:	cmp	r2, r3
   3ad8c:	bne	3ae48 <__assert_fail@plt+0x29bd8>
   3ad90:	ldr	r3, [fp, #-20]	; 0xffffffec
   3ad94:	lsl	r3, r3, #5
   3ad98:	ldr	r2, [fp, #-180]	; 0xffffff4c
   3ad9c:	add	r3, r2, r3
   3ada0:	sub	r2, fp, #100	; 0x64
   3ada4:	mov	r1, r2
   3ada8:	mov	r0, r3
   3adac:	bl	231bc <__assert_fail@plt+0x11f4c>
   3adb0:	ldr	r2, [fp, #-20]	; 0xffffffec
   3adb4:	mov	r3, r2
   3adb8:	lsl	r3, r3, #1
   3adbc:	add	r3, r3, r2
   3adc0:	lsl	r3, r3, #2
   3adc4:	mov	r2, r3
   3adc8:	ldr	r3, [fp, #-176]	; 0xffffff50
   3adcc:	add	r0, r3, r2
   3add0:	ldr	r3, [fp, #-44]	; 0xffffffd4
   3add4:	ldr	r2, [r3, #8]
   3add8:	ldr	r3, [fp, #-8]
   3addc:	lsl	r3, r3, #2
   3ade0:	add	r3, r2, r3
   3ade4:	ldr	r3, [r3]
   3ade8:	mov	r1, r3
   3adec:	bl	25f7c <__assert_fail@plt+0x14d0c>
   3adf0:	str	r0, [fp, #-64]	; 0xffffffc0
   3adf4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   3adf8:	cmp	r3, #0
   3adfc:	movne	r3, #1
   3ae00:	moveq	r3, #0
   3ae04:	uxtb	r3, r3
   3ae08:	cmp	r3, #0
   3ae0c:	bne	3ae88 <__assert_fail@plt+0x29c18>
   3ae10:	ldr	r3, [fp, #-20]	; 0xffffffec
   3ae14:	add	r3, r3, #1
   3ae18:	str	r3, [fp, #-20]	; 0xffffffec
   3ae1c:	sub	r3, fp, #100	; 0x64
   3ae20:	mov	r0, r3
   3ae24:	bl	23164 <__assert_fail@plt+0x11ef4>
   3ae28:	b	3ae48 <__assert_fail@plt+0x29bd8>
   3ae2c:	nop			; (mov r0, r0)
   3ae30:	b	3ae48 <__assert_fail@plt+0x29bd8>
   3ae34:	nop			; (mov r0, r0)
   3ae38:	b	3ae48 <__assert_fail@plt+0x29bd8>
   3ae3c:	nop			; (mov r0, r0)
   3ae40:	b	3ae48 <__assert_fail@plt+0x29bd8>
   3ae44:	nop			; (mov r0, r0)
   3ae48:	ldr	r3, [fp, #-8]
   3ae4c:	add	r3, r3, #1
   3ae50:	str	r3, [fp, #-8]
   3ae54:	ldr	r3, [fp, #-44]	; 0xffffffd4
   3ae58:	ldr	r2, [r3, #4]
   3ae5c:	ldr	r3, [fp, #-8]
   3ae60:	cmp	r2, r3
   3ae64:	bgt	3a4fc <__assert_fail@plt+0x2928c>
   3ae68:	ldr	r3, [fp, #-20]	; 0xffffffec
   3ae6c:	cmp	r3, #256	; 0x100
   3ae70:	ldr	r3, [fp, #-20]	; 0xffffffec
   3ae74:	b	3aee4 <__assert_fail@plt+0x29c74>
   3ae78:	nop			; (mov r0, r0)
   3ae7c:	b	3ae8c <__assert_fail@plt+0x29c1c>
   3ae80:	nop			; (mov r0, r0)
   3ae84:	b	3ae8c <__assert_fail@plt+0x29c1c>
   3ae88:	nop			; (mov r0, r0)
   3ae8c:	mov	r3, #0
   3ae90:	str	r3, [fp, #-12]
   3ae94:	b	3aed0 <__assert_fail@plt+0x29c60>
   3ae98:	ldr	r2, [fp, #-12]
   3ae9c:	mov	r3, r2
   3aea0:	lsl	r3, r3, #1
   3aea4:	add	r3, r3, r2
   3aea8:	lsl	r3, r3, #2
   3aeac:	mov	r2, r3
   3aeb0:	ldr	r3, [fp, #-176]	; 0xffffff50
   3aeb4:	add	r3, r3, r2
   3aeb8:	ldr	r3, [r3, #8]
   3aebc:	mov	r0, r3
   3aec0:	bl	13630 <__assert_fail@plt+0x23c0>
   3aec4:	ldr	r3, [fp, #-12]
   3aec8:	add	r3, r3, #1
   3aecc:	str	r3, [fp, #-12]
   3aed0:	ldr	r2, [fp, #-12]
   3aed4:	ldr	r3, [fp, #-20]	; 0xffffffec
   3aed8:	cmp	r2, r3
   3aedc:	blt	3ae98 <__assert_fail@plt+0x29c28>
   3aee0:	mvn	r3, #0
   3aee4:	mov	r0, r3
   3aee8:	sub	sp, fp, #4
   3aeec:	pop	{fp, pc}
   3aef0:	push	{fp, lr}
   3aef4:	add	fp, sp, #4
   3aef8:	sub	sp, sp, #56	; 0x38
   3aefc:	str	r0, [fp, #-48]	; 0xffffffd0
   3af00:	str	r1, [fp, #-52]	; 0xffffffcc
   3af04:	str	r2, [fp, #-56]	; 0xffffffc8
   3af08:	str	r3, [fp, #-60]	; 0xffffffc4
   3af0c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3af10:	ldr	r2, [r3]
   3af14:	ldr	r3, [fp, #-52]	; 0xffffffcc
   3af18:	lsl	r3, r3, #3
   3af1c:	add	r3, r2, r3
   3af20:	str	r3, [fp, #-20]	; 0xffffffec
   3af24:	ldr	r3, [fp, #-20]	; 0xffffffec
   3af28:	ldrb	r3, [r3, #4]
   3af2c:	cmp	r3, #7
   3af30:	moveq	r3, #1
   3af34:	movne	r3, #0
   3af38:	uxtb	r3, r3
   3af3c:	cmp	r3, #0
   3af40:	beq	3b15c <__assert_fail@plt+0x29eec>
   3af44:	ldr	r3, [fp, #-56]	; 0xffffffc8
   3af48:	ldr	r2, [r3, #4]
   3af4c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   3af50:	add	r3, r2, r3
   3af54:	ldrb	r3, [r3]
   3af58:	strb	r3, [fp, #-21]	; 0xffffffeb
   3af5c:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   3af60:	cmp	r3, #193	; 0xc1
   3af64:	movls	r3, #1
   3af68:	movhi	r3, #0
   3af6c:	uxtb	r3, r3
   3af70:	cmp	r3, #0
   3af74:	beq	3af80 <__assert_fail@plt+0x29d10>
   3af78:	mov	r3, #0
   3af7c:	b	3b444 <__assert_fail@plt+0x2a1d4>
   3af80:	ldr	r3, [fp, #-60]	; 0xffffffc4
   3af84:	add	r2, r3, #2
   3af88:	ldr	r3, [fp, #-56]	; 0xffffffc8
   3af8c:	ldr	r3, [r3, #48]	; 0x30
   3af90:	cmp	r2, r3
   3af94:	ble	3afa0 <__assert_fail@plt+0x29d30>
   3af98:	mov	r3, #0
   3af9c:	b	3b444 <__assert_fail@plt+0x2a1d4>
   3afa0:	ldr	r3, [fp, #-56]	; 0xffffffc8
   3afa4:	ldr	r2, [r3, #4]
   3afa8:	ldr	r3, [fp, #-60]	; 0xffffffc4
   3afac:	add	r3, r3, #1
   3afb0:	add	r3, r2, r3
   3afb4:	ldrb	r3, [r3]
   3afb8:	strb	r3, [fp, #-22]	; 0xffffffea
   3afbc:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   3afc0:	cmp	r3, #223	; 0xdf
   3afc4:	bhi	3aff0 <__assert_fail@plt+0x29d80>
   3afc8:	ldrsb	r3, [fp, #-22]	; 0xffffffea
   3afcc:	cmp	r3, #0
   3afd0:	bge	3afe0 <__assert_fail@plt+0x29d70>
   3afd4:	ldrb	r3, [fp, #-22]	; 0xffffffea
   3afd8:	cmp	r3, #191	; 0xbf
   3afdc:	bls	3afe8 <__assert_fail@plt+0x29d78>
   3afe0:	mov	r3, #0
   3afe4:	b	3b444 <__assert_fail@plt+0x2a1d4>
   3afe8:	mov	r3, #2
   3afec:	b	3b444 <__assert_fail@plt+0x2a1d4>
   3aff0:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   3aff4:	cmp	r3, #239	; 0xef
   3aff8:	bhi	3b024 <__assert_fail@plt+0x29db4>
   3affc:	mov	r3, #3
   3b000:	str	r3, [fp, #-8]
   3b004:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   3b008:	cmp	r3, #224	; 0xe0
   3b00c:	bne	3b0c8 <__assert_fail@plt+0x29e58>
   3b010:	ldrb	r3, [fp, #-22]	; 0xffffffea
   3b014:	cmp	r3, #159	; 0x9f
   3b018:	bhi	3b0c8 <__assert_fail@plt+0x29e58>
   3b01c:	mov	r3, #0
   3b020:	b	3b444 <__assert_fail@plt+0x2a1d4>
   3b024:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   3b028:	cmp	r3, #247	; 0xf7
   3b02c:	bhi	3b058 <__assert_fail@plt+0x29de8>
   3b030:	mov	r3, #4
   3b034:	str	r3, [fp, #-8]
   3b038:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   3b03c:	cmp	r3, #240	; 0xf0
   3b040:	bne	3b0c8 <__assert_fail@plt+0x29e58>
   3b044:	ldrb	r3, [fp, #-22]	; 0xffffffea
   3b048:	cmp	r3, #143	; 0x8f
   3b04c:	bhi	3b0c8 <__assert_fail@plt+0x29e58>
   3b050:	mov	r3, #0
   3b054:	b	3b444 <__assert_fail@plt+0x2a1d4>
   3b058:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   3b05c:	cmp	r3, #251	; 0xfb
   3b060:	bhi	3b08c <__assert_fail@plt+0x29e1c>
   3b064:	mov	r3, #5
   3b068:	str	r3, [fp, #-8]
   3b06c:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   3b070:	cmp	r3, #248	; 0xf8
   3b074:	bne	3b0c8 <__assert_fail@plt+0x29e58>
   3b078:	ldrb	r3, [fp, #-22]	; 0xffffffea
   3b07c:	cmp	r3, #135	; 0x87
   3b080:	bhi	3b0c8 <__assert_fail@plt+0x29e58>
   3b084:	mov	r3, #0
   3b088:	b	3b444 <__assert_fail@plt+0x2a1d4>
   3b08c:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   3b090:	cmp	r3, #253	; 0xfd
   3b094:	bhi	3b0c0 <__assert_fail@plt+0x29e50>
   3b098:	mov	r3, #6
   3b09c:	str	r3, [fp, #-8]
   3b0a0:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   3b0a4:	cmp	r3, #252	; 0xfc
   3b0a8:	bne	3b0c8 <__assert_fail@plt+0x29e58>
   3b0ac:	ldrb	r3, [fp, #-22]	; 0xffffffea
   3b0b0:	cmp	r3, #131	; 0x83
   3b0b4:	bhi	3b0c8 <__assert_fail@plt+0x29e58>
   3b0b8:	mov	r3, #0
   3b0bc:	b	3b444 <__assert_fail@plt+0x2a1d4>
   3b0c0:	mov	r3, #0
   3b0c4:	b	3b444 <__assert_fail@plt+0x2a1d4>
   3b0c8:	ldr	r2, [fp, #-60]	; 0xffffffc4
   3b0cc:	ldr	r3, [fp, #-8]
   3b0d0:	add	r2, r2, r3
   3b0d4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   3b0d8:	ldr	r3, [r3, #48]	; 0x30
   3b0dc:	cmp	r2, r3
   3b0e0:	ble	3b0ec <__assert_fail@plt+0x29e7c>
   3b0e4:	mov	r3, #0
   3b0e8:	b	3b444 <__assert_fail@plt+0x2a1d4>
   3b0ec:	mov	r3, #1
   3b0f0:	str	r3, [fp, #-12]
   3b0f4:	b	3b144 <__assert_fail@plt+0x29ed4>
   3b0f8:	ldr	r3, [fp, #-56]	; 0xffffffc8
   3b0fc:	ldr	r3, [r3, #4]
   3b100:	ldr	r1, [fp, #-60]	; 0xffffffc4
   3b104:	ldr	r2, [fp, #-12]
   3b108:	add	r2, r1, r2
   3b10c:	add	r3, r3, r2
   3b110:	ldrb	r3, [r3]
   3b114:	strb	r3, [fp, #-22]	; 0xffffffea
   3b118:	ldrsb	r3, [fp, #-22]	; 0xffffffea
   3b11c:	cmp	r3, #0
   3b120:	bge	3b130 <__assert_fail@plt+0x29ec0>
   3b124:	ldrb	r3, [fp, #-22]	; 0xffffffea
   3b128:	cmp	r3, #191	; 0xbf
   3b12c:	bls	3b138 <__assert_fail@plt+0x29ec8>
   3b130:	mov	r3, #0
   3b134:	b	3b444 <__assert_fail@plt+0x2a1d4>
   3b138:	ldr	r3, [fp, #-12]
   3b13c:	add	r3, r3, #1
   3b140:	str	r3, [fp, #-12]
   3b144:	ldr	r2, [fp, #-12]
   3b148:	ldr	r3, [fp, #-8]
   3b14c:	cmp	r2, r3
   3b150:	blt	3b0f8 <__assert_fail@plt+0x29e88>
   3b154:	ldr	r3, [fp, #-8]
   3b158:	b	3b444 <__assert_fail@plt+0x2a1d4>
   3b15c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   3b160:	ldr	r0, [fp, #-56]	; 0xffffffc8
   3b164:	bl	2336c <__assert_fail@plt+0x120fc>
   3b168:	str	r0, [fp, #-8]
   3b16c:	ldr	r3, [fp, #-20]	; 0xffffffec
   3b170:	ldrb	r3, [r3, #4]
   3b174:	cmp	r3, #5
   3b178:	bne	3b200 <__assert_fail@plt+0x29f90>
   3b17c:	ldr	r3, [fp, #-8]
   3b180:	cmp	r3, #1
   3b184:	bgt	3b190 <__assert_fail@plt+0x29f20>
   3b188:	mov	r3, #0
   3b18c:	b	3b444 <__assert_fail@plt+0x2a1d4>
   3b190:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3b194:	ldr	r3, [r3, #128]	; 0x80
   3b198:	and	r3, r3, #64	; 0x40
   3b19c:	cmp	r3, #0
   3b1a0:	bne	3b1c0 <__assert_fail@plt+0x29f50>
   3b1a4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   3b1a8:	ldr	r2, [r3, #4]
   3b1ac:	ldr	r3, [fp, #-60]	; 0xffffffc4
   3b1b0:	add	r3, r2, r3
   3b1b4:	ldrb	r3, [r3]
   3b1b8:	cmp	r3, #10
   3b1bc:	beq	3b1f0 <__assert_fail@plt+0x29f80>
   3b1c0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   3b1c4:	ldr	r3, [r3, #128]	; 0x80
   3b1c8:	and	r3, r3, #128	; 0x80
   3b1cc:	cmp	r3, #0
   3b1d0:	beq	3b1f8 <__assert_fail@plt+0x29f88>
   3b1d4:	ldr	r3, [fp, #-56]	; 0xffffffc8
   3b1d8:	ldr	r2, [r3, #4]
   3b1dc:	ldr	r3, [fp, #-60]	; 0xffffffc4
   3b1e0:	add	r3, r2, r3
   3b1e4:	ldrb	r3, [r3]
   3b1e8:	cmp	r3, #0
   3b1ec:	bne	3b1f8 <__assert_fail@plt+0x29f88>
   3b1f0:	mov	r3, #0
   3b1f4:	b	3b444 <__assert_fail@plt+0x2a1d4>
   3b1f8:	ldr	r3, [fp, #-8]
   3b1fc:	b	3b444 <__assert_fail@plt+0x2a1d4>
   3b200:	ldr	r1, [fp, #-60]	; 0xffffffc4
   3b204:	ldr	r0, [fp, #-56]	; 0xffffffc8
   3b208:	bl	23474 <__assert_fail@plt+0x12204>
   3b20c:	str	r0, [fp, #-28]	; 0xffffffe4
   3b210:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3b214:	cmp	r3, #1
   3b218:	bgt	3b228 <__assert_fail@plt+0x29fb8>
   3b21c:	ldr	r3, [fp, #-8]
   3b220:	cmp	r3, #1
   3b224:	ble	3b234 <__assert_fail@plt+0x29fc4>
   3b228:	ldr	r3, [fp, #-8]
   3b22c:	cmp	r3, #0
   3b230:	bne	3b23c <__assert_fail@plt+0x29fcc>
   3b234:	mov	r3, #0
   3b238:	b	3b444 <__assert_fail@plt+0x2a1d4>
   3b23c:	ldr	r3, [fp, #-20]	; 0xffffffec
   3b240:	ldrb	r3, [r3, #4]
   3b244:	cmp	r3, #6
   3b248:	bne	3b440 <__assert_fail@plt+0x2a1d0>
   3b24c:	ldr	r3, [fp, #-20]	; 0xffffffec
   3b250:	ldr	r3, [r3]
   3b254:	str	r3, [fp, #-32]	; 0xffffffe0
   3b258:	mov	r3, #0
   3b25c:	str	r3, [fp, #-16]
   3b260:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3b264:	ldr	r3, [r3, #32]
   3b268:	cmp	r3, #0
   3b26c:	bne	3b290 <__assert_fail@plt+0x2a020>
   3b270:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3b274:	ldr	r3, [r3, #36]	; 0x24
   3b278:	cmp	r3, #0
   3b27c:	bne	3b290 <__assert_fail@plt+0x2a020>
   3b280:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3b284:	ldr	r3, [r3, #20]
   3b288:	cmp	r3, #0
   3b28c:	beq	3b2a4 <__assert_fail@plt+0x2a034>
   3b290:	ldr	r1, [fp, #-60]	; 0xffffffc4
   3b294:	ldr	r0, [fp, #-56]	; 0xffffffc8
   3b298:	bl	23410 <__assert_fail@plt+0x121a0>
   3b29c:	mov	r3, r0
   3b2a0:	b	3b2a8 <__assert_fail@plt+0x2a038>
   3b2a4:	mov	r3, #0
   3b2a8:	str	r3, [fp, #-36]	; 0xffffffdc
   3b2ac:	mov	r3, #0
   3b2b0:	str	r3, [fp, #-12]
   3b2b4:	b	3b2f4 <__assert_fail@plt+0x2a084>
   3b2b8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3b2bc:	ldr	r2, [r3]
   3b2c0:	ldr	r3, [fp, #-12]
   3b2c4:	lsl	r3, r3, #2
   3b2c8:	add	r3, r2, r3
   3b2cc:	ldr	r2, [r3]
   3b2d0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3b2d4:	cmp	r2, r3
   3b2d8:	bne	3b2e8 <__assert_fail@plt+0x2a078>
   3b2dc:	ldr	r3, [fp, #-8]
   3b2e0:	str	r3, [fp, #-16]
   3b2e4:	b	3b3f4 <__assert_fail@plt+0x2a184>
   3b2e8:	ldr	r3, [fp, #-12]
   3b2ec:	add	r3, r3, #1
   3b2f0:	str	r3, [fp, #-12]
   3b2f4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3b2f8:	ldr	r2, [r3, #20]
   3b2fc:	ldr	r3, [fp, #-12]
   3b300:	cmp	r2, r3
   3b304:	bgt	3b2b8 <__assert_fail@plt+0x2a048>
   3b308:	mov	r3, #0
   3b30c:	str	r3, [fp, #-12]
   3b310:	b	3b360 <__assert_fail@plt+0x2a0f0>
   3b314:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3b318:	ldr	r2, [r3, #12]
   3b31c:	ldr	r3, [fp, #-12]
   3b320:	lsl	r3, r3, #2
   3b324:	add	r3, r2, r3
   3b328:	ldr	r3, [r3]
   3b32c:	str	r3, [fp, #-40]	; 0xffffffd8
   3b330:	ldr	r1, [fp, #-40]	; 0xffffffd8
   3b334:	ldr	r0, [fp, #-36]	; 0xffffffdc
   3b338:	bl	10f94 <iswctype@plt>
   3b33c:	mov	r3, r0
   3b340:	cmp	r3, #0
   3b344:	beq	3b354 <__assert_fail@plt+0x2a0e4>
   3b348:	ldr	r3, [fp, #-8]
   3b34c:	str	r3, [fp, #-16]
   3b350:	b	3b3f4 <__assert_fail@plt+0x2a184>
   3b354:	ldr	r3, [fp, #-12]
   3b358:	add	r3, r3, #1
   3b35c:	str	r3, [fp, #-12]
   3b360:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3b364:	ldr	r2, [r3, #36]	; 0x24
   3b368:	ldr	r3, [fp, #-12]
   3b36c:	cmp	r2, r3
   3b370:	bgt	3b314 <__assert_fail@plt+0x2a0a4>
   3b374:	mov	r3, #0
   3b378:	str	r3, [fp, #-12]
   3b37c:	b	3b3e0 <__assert_fail@plt+0x2a170>
   3b380:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3b384:	ldr	r2, [r3, #4]
   3b388:	ldr	r3, [fp, #-12]
   3b38c:	lsl	r3, r3, #2
   3b390:	add	r3, r2, r3
   3b394:	ldr	r2, [r3]
   3b398:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3b39c:	cmp	r2, r3
   3b3a0:	bhi	3b3d4 <__assert_fail@plt+0x2a164>
   3b3a4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3b3a8:	ldr	r2, [r3, #8]
   3b3ac:	ldr	r3, [fp, #-12]
   3b3b0:	lsl	r3, r3, #2
   3b3b4:	add	r3, r2, r3
   3b3b8:	ldr	r2, [r3]
   3b3bc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3b3c0:	cmp	r2, r3
   3b3c4:	bcc	3b3d4 <__assert_fail@plt+0x2a164>
   3b3c8:	ldr	r3, [fp, #-8]
   3b3cc:	str	r3, [fp, #-16]
   3b3d0:	b	3b3f4 <__assert_fail@plt+0x2a184>
   3b3d4:	ldr	r3, [fp, #-12]
   3b3d8:	add	r3, r3, #1
   3b3dc:	str	r3, [fp, #-12]
   3b3e0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3b3e4:	ldr	r2, [r3, #32]
   3b3e8:	ldr	r3, [fp, #-12]
   3b3ec:	cmp	r2, r3
   3b3f0:	bgt	3b380 <__assert_fail@plt+0x2a110>
   3b3f4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3b3f8:	ldrb	r3, [r3, #16]
   3b3fc:	and	r3, r3, #1
   3b400:	uxtb	r3, r3
   3b404:	cmp	r3, #0
   3b408:	bne	3b414 <__assert_fail@plt+0x2a1a4>
   3b40c:	ldr	r3, [fp, #-16]
   3b410:	b	3b444 <__assert_fail@plt+0x2a1d4>
   3b414:	ldr	r3, [fp, #-16]
   3b418:	cmp	r3, #0
   3b41c:	ble	3b428 <__assert_fail@plt+0x2a1b8>
   3b420:	mov	r3, #0
   3b424:	b	3b444 <__assert_fail@plt+0x2a1d4>
   3b428:	ldr	r2, [fp, #-8]
   3b42c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3b430:	cmp	r2, r3
   3b434:	movge	r3, r2
   3b438:	movlt	r3, r3
   3b43c:	b	3b444 <__assert_fail@plt+0x2a1d4>
   3b440:	mov	r3, #0
   3b444:	mov	r0, r3
   3b448:	sub	sp, fp, #4
   3b44c:	pop	{fp, pc}
   3b450:	push	{fp, lr}
   3b454:	add	fp, sp, #4
   3b458:	sub	sp, sp, #24
   3b45c:	str	r0, [fp, #-16]
   3b460:	str	r1, [fp, #-20]	; 0xffffffec
   3b464:	str	r2, [fp, #-24]	; 0xffffffe8
   3b468:	ldr	r3, [fp, #-16]
   3b46c:	ldr	r2, [r3, #4]
   3b470:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3b474:	add	r3, r2, r3
   3b478:	ldrb	r3, [r3]
   3b47c:	strb	r3, [fp, #-5]
   3b480:	ldr	r3, [fp, #-20]	; 0xffffffec
   3b484:	ldrb	r3, [r3, #4]
   3b488:	sub	r3, r3, #1
   3b48c:	cmp	r3, #6
   3b490:	ldrls	pc, [pc, r3, lsl #2]
   3b494:	b	3b568 <__assert_fail@plt+0x2a2f8>
   3b498:			; <UNDEFINED> instruction: 0x0003b4b4
   3b49c:	andeq	fp, r3, r8, ror #10
   3b4a0:	ldrdeq	fp, [r3], -r0
   3b4a4:	andeq	fp, r3, r8, ror #10
   3b4a8:	andeq	fp, r3, r8, lsl r5
   3b4ac:	andeq	fp, r3, r8, ror #10
   3b4b0:	andeq	fp, r3, r4, lsl #10
   3b4b4:	ldr	r3, [fp, #-20]	; 0xffffffec
   3b4b8:	ldrb	r3, [r3]
   3b4bc:	ldrb	r2, [fp, #-5]
   3b4c0:	cmp	r2, r3
   3b4c4:	beq	3b570 <__assert_fail@plt+0x2a300>
   3b4c8:	mov	r3, #0
   3b4cc:	b	3b694 <__assert_fail@plt+0x2a424>
   3b4d0:	ldr	r3, [fp, #-20]	; 0xffffffec
   3b4d4:	ldr	r3, [r3]
   3b4d8:	ldrb	r2, [fp, #-5]
   3b4dc:	mov	r1, r2
   3b4e0:	mov	r0, r3
   3b4e4:	bl	230e8 <__assert_fail@plt+0x11e78>
   3b4e8:	mov	r3, r0
   3b4ec:	eor	r3, r3, #1
   3b4f0:	uxtb	r3, r3
   3b4f4:	cmp	r3, #0
   3b4f8:	beq	3b578 <__assert_fail@plt+0x2a308>
   3b4fc:	mov	r3, #0
   3b500:	b	3b694 <__assert_fail@plt+0x2a424>
   3b504:	ldrsb	r3, [fp, #-5]
   3b508:	cmp	r3, #0
   3b50c:	bge	3b518 <__assert_fail@plt+0x2a2a8>
   3b510:	mov	r3, #0
   3b514:	b	3b694 <__assert_fail@plt+0x2a424>
   3b518:	ldrb	r3, [fp, #-5]
   3b51c:	cmp	r3, #10
   3b520:	bne	3b53c <__assert_fail@plt+0x2a2cc>
   3b524:	ldr	r3, [fp, #-16]
   3b528:	ldr	r3, [r3, #84]	; 0x54
   3b52c:	ldr	r3, [r3, #128]	; 0x80
   3b530:	and	r3, r3, #64	; 0x40
   3b534:	cmp	r3, #0
   3b538:	beq	3b560 <__assert_fail@plt+0x2a2f0>
   3b53c:	ldrb	r3, [fp, #-5]
   3b540:	cmp	r3, #0
   3b544:	bne	3b580 <__assert_fail@plt+0x2a310>
   3b548:	ldr	r3, [fp, #-16]
   3b54c:	ldr	r3, [r3, #84]	; 0x54
   3b550:	ldr	r3, [r3, #128]	; 0x80
   3b554:	and	r3, r3, #128	; 0x80
   3b558:	cmp	r3, #0
   3b55c:	beq	3b580 <__assert_fail@plt+0x2a310>
   3b560:	mov	r3, #0
   3b564:	b	3b694 <__assert_fail@plt+0x2a424>
   3b568:	mov	r3, #0
   3b56c:	b	3b694 <__assert_fail@plt+0x2a424>
   3b570:	nop			; (mov r0, r0)
   3b574:	b	3b584 <__assert_fail@plt+0x2a314>
   3b578:	nop			; (mov r0, r0)
   3b57c:	b	3b584 <__assert_fail@plt+0x2a314>
   3b580:	nop			; (mov r0, r0)
   3b584:	ldr	r3, [fp, #-20]	; 0xffffffec
   3b588:	ldr	r2, [r3, #4]
   3b58c:	ldr	r3, [pc, #268]	; 3b6a0 <__assert_fail@plt+0x2a430>
   3b590:	and	r3, r3, r2
   3b594:	cmp	r3, #0
   3b598:	beq	3b690 <__assert_fail@plt+0x2a420>
   3b59c:	ldr	r0, [fp, #-16]
   3b5a0:	ldr	r3, [fp, #-16]
   3b5a4:	ldr	r3, [r3, #88]	; 0x58
   3b5a8:	mov	r2, r3
   3b5ac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3b5b0:	bl	25d10 <__assert_fail@plt+0x14aa0>
   3b5b4:	str	r0, [fp, #-12]
   3b5b8:	ldr	r3, [fp, #-20]	; 0xffffffec
   3b5bc:	ldr	r3, [r3, #4]
   3b5c0:	lsr	r3, r3, #8
   3b5c4:	lsl	r3, r3, #22
   3b5c8:	lsr	r3, r3, #22
   3b5cc:	uxth	r3, r3
   3b5d0:	and	r3, r3, #4
   3b5d4:	cmp	r3, #0
   3b5d8:	beq	3b5ec <__assert_fail@plt+0x2a37c>
   3b5dc:	ldr	r3, [fp, #-12]
   3b5e0:	and	r3, r3, #1
   3b5e4:	cmp	r3, #0
   3b5e8:	beq	3b688 <__assert_fail@plt+0x2a418>
   3b5ec:	ldr	r3, [fp, #-20]	; 0xffffffec
   3b5f0:	ldr	r3, [r3, #4]
   3b5f4:	lsr	r3, r3, #8
   3b5f8:	lsl	r3, r3, #22
   3b5fc:	lsr	r3, r3, #22
   3b600:	uxth	r3, r3
   3b604:	and	r3, r3, #8
   3b608:	cmp	r3, #0
   3b60c:	beq	3b620 <__assert_fail@plt+0x2a3b0>
   3b610:	ldr	r3, [fp, #-12]
   3b614:	and	r3, r3, #1
   3b618:	cmp	r3, #0
   3b61c:	bne	3b688 <__assert_fail@plt+0x2a418>
   3b620:	ldr	r3, [fp, #-20]	; 0xffffffec
   3b624:	ldr	r3, [r3, #4]
   3b628:	lsr	r3, r3, #8
   3b62c:	lsl	r3, r3, #22
   3b630:	lsr	r3, r3, #22
   3b634:	uxth	r3, r3
   3b638:	and	r3, r3, #32
   3b63c:	cmp	r3, #0
   3b640:	beq	3b654 <__assert_fail@plt+0x2a3e4>
   3b644:	ldr	r3, [fp, #-12]
   3b648:	and	r3, r3, #2
   3b64c:	cmp	r3, #0
   3b650:	beq	3b688 <__assert_fail@plt+0x2a418>
   3b654:	ldr	r3, [fp, #-20]	; 0xffffffec
   3b658:	ldr	r3, [r3, #4]
   3b65c:	lsr	r3, r3, #8
   3b660:	lsl	r3, r3, #22
   3b664:	lsr	r3, r3, #22
   3b668:	uxth	r3, r3
   3b66c:	and	r3, r3, #128	; 0x80
   3b670:	cmp	r3, #0
   3b674:	beq	3b690 <__assert_fail@plt+0x2a420>
   3b678:	ldr	r3, [fp, #-12]
   3b67c:	and	r3, r3, #8
   3b680:	cmp	r3, #0
   3b684:	bne	3b690 <__assert_fail@plt+0x2a420>
   3b688:	mov	r3, #0
   3b68c:	b	3b694 <__assert_fail@plt+0x2a424>
   3b690:	mov	r3, #1
   3b694:	mov	r0, r3
   3b698:	sub	sp, fp, #4
   3b69c:	pop	{fp, pc}
   3b6a0:	andeq	pc, r3, r0, lsl #30
   3b6a4:	push	{fp, lr}
   3b6a8:	add	fp, sp, #4
   3b6ac:	sub	sp, sp, #24
   3b6b0:	str	r0, [fp, #-24]	; 0xffffffe8
   3b6b4:	str	r1, [fp, #-28]	; 0xffffffe4
   3b6b8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3b6bc:	str	r3, [fp, #-8]
   3b6c0:	ldr	r3, [fp, #-8]
   3b6c4:	ldr	r3, [r3, #36]	; 0x24
   3b6c8:	cmn	r3, #-536870910	; 0xe0000002
   3b6cc:	movhi	r3, #1
   3b6d0:	movls	r3, #0
   3b6d4:	uxtb	r3, r3
   3b6d8:	cmp	r3, #0
   3b6dc:	beq	3b6e8 <__assert_fail@plt+0x2a478>
   3b6e0:	mov	r3, #12
   3b6e4:	b	3b848 <__assert_fail@plt+0x2a5d8>
   3b6e8:	ldr	r3, [fp, #-8]
   3b6ec:	ldr	r3, [r3, #36]	; 0x24
   3b6f0:	lsl	r2, r3, #1
   3b6f4:	ldr	r3, [fp, #-8]
   3b6f8:	ldr	r3, [r3, #48]	; 0x30
   3b6fc:	cmp	r2, r3
   3b700:	movlt	r2, r2
   3b704:	movge	r2, r3
   3b708:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3b70c:	cmp	r2, r3
   3b710:	movge	r3, r2
   3b714:	movlt	r3, r3
   3b718:	mov	r1, r3
   3b71c:	ldr	r0, [fp, #-8]
   3b720:	bl	237fc <__assert_fail@plt+0x1258c>
   3b724:	str	r0, [fp, #-12]
   3b728:	ldr	r3, [fp, #-12]
   3b72c:	cmp	r3, #0
   3b730:	movne	r3, #1
   3b734:	moveq	r3, #0
   3b738:	uxtb	r3, r3
   3b73c:	cmp	r3, #0
   3b740:	beq	3b74c <__assert_fail@plt+0x2a4dc>
   3b744:	ldr	r3, [fp, #-12]
   3b748:	b	3b848 <__assert_fail@plt+0x2a5d8>
   3b74c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3b750:	ldr	r3, [r3, #100]	; 0x64
   3b754:	cmp	r3, #0
   3b758:	beq	3b7b4 <__assert_fail@plt+0x2a544>
   3b75c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3b760:	ldr	r2, [r3, #100]	; 0x64
   3b764:	ldr	r3, [fp, #-8]
   3b768:	ldr	r3, [r3, #36]	; 0x24
   3b76c:	add	r3, r3, #1
   3b770:	lsl	r3, r3, #2
   3b774:	mov	r1, r3
   3b778:	mov	r0, r2
   3b77c:	bl	3e040 <__assert_fail@plt+0x2cdd0>
   3b780:	str	r0, [fp, #-16]
   3b784:	ldr	r3, [fp, #-16]
   3b788:	cmp	r3, #0
   3b78c:	moveq	r3, #1
   3b790:	movne	r3, #0
   3b794:	uxtb	r3, r3
   3b798:	cmp	r3, #0
   3b79c:	beq	3b7a8 <__assert_fail@plt+0x2a538>
   3b7a0:	mov	r3, #12
   3b7a4:	b	3b848 <__assert_fail@plt+0x2a5d8>
   3b7a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3b7ac:	ldr	r2, [fp, #-16]
   3b7b0:	str	r2, [r3, #100]	; 0x64
   3b7b4:	ldr	r3, [fp, #-8]
   3b7b8:	ldrb	r3, [r3, #72]	; 0x48
   3b7bc:	cmp	r3, #0
   3b7c0:	beq	3b810 <__assert_fail@plt+0x2a5a0>
   3b7c4:	ldr	r3, [fp, #-8]
   3b7c8:	ldr	r3, [r3, #80]	; 0x50
   3b7cc:	cmp	r3, #1
   3b7d0:	ble	3b804 <__assert_fail@plt+0x2a594>
   3b7d4:	ldr	r0, [fp, #-8]
   3b7d8:	bl	23e28 <__assert_fail@plt+0x12bb8>
   3b7dc:	str	r0, [fp, #-12]
   3b7e0:	ldr	r3, [fp, #-12]
   3b7e4:	cmp	r3, #0
   3b7e8:	movne	r3, #1
   3b7ec:	moveq	r3, #0
   3b7f0:	uxtb	r3, r3
   3b7f4:	cmp	r3, #0
   3b7f8:	beq	3b844 <__assert_fail@plt+0x2a5d4>
   3b7fc:	ldr	r3, [fp, #-12]
   3b800:	b	3b848 <__assert_fail@plt+0x2a5d8>
   3b804:	ldr	r0, [fp, #-8]
   3b808:	bl	24af4 <__assert_fail@plt+0x13884>
   3b80c:	b	3b844 <__assert_fail@plt+0x2a5d4>
   3b810:	ldr	r3, [fp, #-8]
   3b814:	ldr	r3, [r3, #80]	; 0x50
   3b818:	cmp	r3, #1
   3b81c:	ble	3b82c <__assert_fail@plt+0x2a5bc>
   3b820:	ldr	r0, [fp, #-8]
   3b824:	bl	23ab0 <__assert_fail@plt+0x12840>
   3b828:	b	3b844 <__assert_fail@plt+0x2a5d4>
   3b82c:	ldr	r3, [fp, #-8]
   3b830:	ldr	r3, [r3, #64]	; 0x40
   3b834:	cmp	r3, #0
   3b838:	beq	3b844 <__assert_fail@plt+0x2a5d4>
   3b83c:	ldr	r0, [fp, #-8]
   3b840:	bl	24bf4 <__assert_fail@plt+0x13984>
   3b844:	mov	r3, #0
   3b848:	mov	r0, r3
   3b84c:	sub	sp, fp, #4
   3b850:	pop	{fp, pc}
   3b854:	push	{fp, lr}
   3b858:	add	fp, sp, #4
   3b85c:	sub	sp, sp, #24
   3b860:	str	r0, [fp, #-16]
   3b864:	str	r1, [fp, #-20]	; 0xffffffec
   3b868:	str	r2, [fp, #-24]	; 0xffffffe8
   3b86c:	ldr	r3, [fp, #-16]
   3b870:	ldr	r2, [fp, #-20]	; 0xffffffec
   3b874:	str	r2, [r3, #88]	; 0x58
   3b878:	ldr	r3, [fp, #-16]
   3b87c:	mvn	r2, #0
   3b880:	str	r2, [r3, #92]	; 0x5c
   3b884:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3b888:	cmp	r3, #0
   3b88c:	ble	3b984 <__assert_fail@plt+0x2a714>
   3b890:	mov	r3, #24
   3b894:	str	r3, [fp, #-8]
   3b898:	ldr	r1, [fp, #-8]
   3b89c:	mvn	r0, #0
   3b8a0:	bl	3f560 <__assert_fail@plt+0x2e2f0>
   3b8a4:	mov	r3, r0
   3b8a8:	cmp	r3, #0
   3b8ac:	blt	3b8c8 <__assert_fail@plt+0x2a658>
   3b8b0:	ldr	r1, [fp, #-8]
   3b8b4:	mvn	r0, #0
   3b8b8:	bl	3f560 <__assert_fail@plt+0x2e2f0>
   3b8bc:	mov	r3, r0
   3b8c0:	mov	r2, r3
   3b8c4:	b	3b8cc <__assert_fail@plt+0x2a65c>
   3b8c8:	mvn	r2, #-2147483648	; 0x80000000
   3b8cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3b8d0:	cmp	r2, r3
   3b8d4:	movcc	r3, #1
   3b8d8:	movcs	r3, #0
   3b8dc:	uxtb	r3, r3
   3b8e0:	cmp	r3, #0
   3b8e4:	beq	3b8f0 <__assert_fail@plt+0x2a680>
   3b8e8:	mov	r3, #12
   3b8ec:	b	3b9ac <__assert_fail@plt+0x2a73c>
   3b8f0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3b8f4:	mov	r3, r2
   3b8f8:	lsl	r3, r3, #1
   3b8fc:	add	r3, r3, r2
   3b900:	lsl	r3, r3, #3
   3b904:	mov	r0, r3
   3b908:	bl	3df98 <__assert_fail@plt+0x2cd28>
   3b90c:	mov	r3, r0
   3b910:	mov	r2, r3
   3b914:	ldr	r3, [fp, #-16]
   3b918:	str	r2, [r3, #116]	; 0x74
   3b91c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3b920:	lsl	r3, r3, #2
   3b924:	mov	r0, r3
   3b928:	bl	3df98 <__assert_fail@plt+0x2cd28>
   3b92c:	mov	r3, r0
   3b930:	mov	r2, r3
   3b934:	ldr	r3, [fp, #-16]
   3b938:	str	r2, [r3, #132]	; 0x84
   3b93c:	ldr	r3, [fp, #-16]
   3b940:	ldr	r3, [r3, #116]	; 0x74
   3b944:	cmp	r3, #0
   3b948:	moveq	r3, #1
   3b94c:	movne	r3, #0
   3b950:	uxtb	r3, r3
   3b954:	cmp	r3, #0
   3b958:	bne	3b97c <__assert_fail@plt+0x2a70c>
   3b95c:	ldr	r3, [fp, #-16]
   3b960:	ldr	r3, [r3, #132]	; 0x84
   3b964:	cmp	r3, #0
   3b968:	moveq	r3, #1
   3b96c:	movne	r3, #0
   3b970:	uxtb	r3, r3
   3b974:	cmp	r3, #0
   3b978:	beq	3b984 <__assert_fail@plt+0x2a714>
   3b97c:	mov	r3, #12
   3b980:	b	3b9ac <__assert_fail@plt+0x2a73c>
   3b984:	ldr	r3, [fp, #-16]
   3b988:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3b98c:	str	r2, [r3, #112]	; 0x70
   3b990:	ldr	r3, [fp, #-16]
   3b994:	mov	r2, #1
   3b998:	str	r2, [r3, #120]	; 0x78
   3b99c:	ldr	r3, [fp, #-16]
   3b9a0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3b9a4:	str	r2, [r3, #128]	; 0x80
   3b9a8:	mov	r3, #0
   3b9ac:	mov	r0, r3
   3b9b0:	sub	sp, fp, #4
   3b9b4:	pop	{fp, pc}
   3b9b8:	push	{fp, lr}
   3b9bc:	add	fp, sp, #4
   3b9c0:	sub	sp, sp, #24
   3b9c4:	str	r0, [fp, #-24]	; 0xffffffe8
   3b9c8:	mov	r3, #0
   3b9cc:	str	r3, [fp, #-8]
   3b9d0:	b	3baa8 <__assert_fail@plt+0x2a838>
   3b9d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3b9d8:	ldr	r2, [r3, #132]	; 0x84
   3b9dc:	ldr	r3, [fp, #-8]
   3b9e0:	lsl	r3, r3, #2
   3b9e4:	add	r3, r2, r3
   3b9e8:	ldr	r3, [r3]
   3b9ec:	str	r3, [fp, #-16]
   3b9f0:	mov	r3, #0
   3b9f4:	str	r3, [fp, #-12]
   3b9f8:	b	3ba3c <__assert_fail@plt+0x2a7cc>
   3b9fc:	ldr	r3, [fp, #-16]
   3ba00:	ldr	r2, [r3, #20]
   3ba04:	ldr	r3, [fp, #-12]
   3ba08:	lsl	r3, r3, #2
   3ba0c:	add	r3, r2, r3
   3ba10:	ldr	r3, [r3]
   3ba14:	str	r3, [fp, #-20]	; 0xffffffec
   3ba18:	ldr	r3, [fp, #-20]	; 0xffffffec
   3ba1c:	ldr	r3, [r3, #16]
   3ba20:	mov	r0, r3
   3ba24:	bl	13630 <__assert_fail@plt+0x23c0>
   3ba28:	ldr	r0, [fp, #-20]	; 0xffffffec
   3ba2c:	bl	13630 <__assert_fail@plt+0x23c0>
   3ba30:	ldr	r3, [fp, #-12]
   3ba34:	add	r3, r3, #1
   3ba38:	str	r3, [fp, #-12]
   3ba3c:	ldr	r3, [fp, #-16]
   3ba40:	ldr	r2, [r3, #16]
   3ba44:	ldr	r3, [fp, #-12]
   3ba48:	cmp	r2, r3
   3ba4c:	bgt	3b9fc <__assert_fail@plt+0x2a78c>
   3ba50:	ldr	r3, [fp, #-16]
   3ba54:	ldr	r3, [r3, #20]
   3ba58:	mov	r0, r3
   3ba5c:	bl	13630 <__assert_fail@plt+0x23c0>
   3ba60:	ldr	r3, [fp, #-16]
   3ba64:	ldr	r3, [r3, #8]
   3ba68:	cmp	r3, #0
   3ba6c:	beq	3ba94 <__assert_fail@plt+0x2a824>
   3ba70:	ldr	r3, [fp, #-16]
   3ba74:	ldr	r3, [r3, #8]
   3ba78:	ldr	r3, [r3, #8]
   3ba7c:	mov	r0, r3
   3ba80:	bl	13630 <__assert_fail@plt+0x23c0>
   3ba84:	ldr	r3, [fp, #-16]
   3ba88:	ldr	r3, [r3, #8]
   3ba8c:	mov	r0, r3
   3ba90:	bl	13630 <__assert_fail@plt+0x23c0>
   3ba94:	ldr	r0, [fp, #-16]
   3ba98:	bl	13630 <__assert_fail@plt+0x23c0>
   3ba9c:	ldr	r3, [fp, #-8]
   3baa0:	add	r3, r3, #1
   3baa4:	str	r3, [fp, #-8]
   3baa8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3baac:	ldr	r2, [r3, #124]	; 0x7c
   3bab0:	ldr	r3, [fp, #-8]
   3bab4:	cmp	r2, r3
   3bab8:	bgt	3b9d4 <__assert_fail@plt+0x2a764>
   3babc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3bac0:	mov	r2, #0
   3bac4:	str	r2, [r3, #124]	; 0x7c
   3bac8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3bacc:	mov	r2, #0
   3bad0:	str	r2, [r3, #108]	; 0x6c
   3bad4:	nop			; (mov r0, r0)
   3bad8:	sub	sp, fp, #4
   3badc:	pop	{fp, pc}
   3bae0:	push	{fp, lr}
   3bae4:	add	fp, sp, #4
   3bae8:	sub	sp, sp, #8
   3baec:	str	r0, [fp, #-8]
   3baf0:	ldr	r0, [fp, #-8]
   3baf4:	bl	3b9b8 <__assert_fail@plt+0x2a748>
   3baf8:	ldr	r3, [fp, #-8]
   3bafc:	ldr	r3, [r3, #132]	; 0x84
   3bb00:	mov	r0, r3
   3bb04:	bl	13630 <__assert_fail@plt+0x23c0>
   3bb08:	ldr	r3, [fp, #-8]
   3bb0c:	ldr	r3, [r3, #116]	; 0x74
   3bb10:	mov	r0, r3
   3bb14:	bl	13630 <__assert_fail@plt+0x23c0>
   3bb18:	nop			; (mov r0, r0)
   3bb1c:	sub	sp, fp, #4
   3bb20:	pop	{fp, pc}
   3bb24:	push	{fp, lr}
   3bb28:	add	fp, sp, #4
   3bb2c:	sub	sp, sp, #24
   3bb30:	str	r0, [fp, #-16]
   3bb34:	str	r1, [fp, #-20]	; 0xffffffec
   3bb38:	str	r2, [fp, #-24]	; 0xffffffe8
   3bb3c:	str	r3, [fp, #-28]	; 0xffffffe4
   3bb40:	ldr	r3, [fp, #-16]
   3bb44:	ldr	r2, [r3, #108]	; 0x6c
   3bb48:	ldr	r3, [fp, #-16]
   3bb4c:	ldr	r3, [r3, #112]	; 0x70
   3bb50:	cmp	r2, r3
   3bb54:	blt	3bc28 <__assert_fail@plt+0x2a9b8>
   3bb58:	ldr	r3, [fp, #-16]
   3bb5c:	ldr	r0, [r3, #116]	; 0x74
   3bb60:	ldr	r3, [fp, #-16]
   3bb64:	ldr	r2, [r3, #112]	; 0x70
   3bb68:	mov	r3, r2
   3bb6c:	lsl	r3, r3, #1
   3bb70:	add	r3, r3, r2
   3bb74:	lsl	r3, r3, #4
   3bb78:	mov	r1, r3
   3bb7c:	bl	3e040 <__assert_fail@plt+0x2cdd0>
   3bb80:	str	r0, [fp, #-8]
   3bb84:	ldr	r3, [fp, #-8]
   3bb88:	cmp	r3, #0
   3bb8c:	moveq	r3, #1
   3bb90:	movne	r3, #0
   3bb94:	uxtb	r3, r3
   3bb98:	cmp	r3, #0
   3bb9c:	beq	3bbb8 <__assert_fail@plt+0x2a948>
   3bba0:	ldr	r3, [fp, #-16]
   3bba4:	ldr	r3, [r3, #116]	; 0x74
   3bba8:	mov	r0, r3
   3bbac:	bl	13630 <__assert_fail@plt+0x23c0>
   3bbb0:	mov	r3, #12
   3bbb4:	b	3be20 <__assert_fail@plt+0x2abb0>
   3bbb8:	ldr	r3, [fp, #-16]
   3bbbc:	ldr	r2, [fp, #-8]
   3bbc0:	str	r2, [r3, #116]	; 0x74
   3bbc4:	ldr	r3, [fp, #-16]
   3bbc8:	ldr	r2, [r3, #116]	; 0x74
   3bbcc:	ldr	r3, [fp, #-16]
   3bbd0:	ldr	r3, [r3, #108]	; 0x6c
   3bbd4:	mov	r1, r3
   3bbd8:	mov	r3, r1
   3bbdc:	lsl	r3, r3, #1
   3bbe0:	add	r3, r3, r1
   3bbe4:	lsl	r3, r3, #3
   3bbe8:	add	r0, r2, r3
   3bbec:	ldr	r3, [fp, #-16]
   3bbf0:	ldr	r3, [r3, #112]	; 0x70
   3bbf4:	mov	r2, r3
   3bbf8:	mov	r3, r2
   3bbfc:	lsl	r3, r3, #1
   3bc00:	add	r3, r3, r2
   3bc04:	lsl	r3, r3, #3
   3bc08:	mov	r2, r3
   3bc0c:	mov	r1, #0
   3bc10:	bl	111bc <memset@plt>
   3bc14:	ldr	r3, [fp, #-16]
   3bc18:	ldr	r3, [r3, #112]	; 0x70
   3bc1c:	lsl	r2, r3, #1
   3bc20:	ldr	r3, [fp, #-16]
   3bc24:	str	r2, [r3, #112]	; 0x70
   3bc28:	ldr	r3, [fp, #-16]
   3bc2c:	ldr	r3, [r3, #108]	; 0x6c
   3bc30:	cmp	r3, #0
   3bc34:	ble	3bca8 <__assert_fail@plt+0x2aa38>
   3bc38:	ldr	r3, [fp, #-16]
   3bc3c:	ldr	r2, [r3, #116]	; 0x74
   3bc40:	ldr	r3, [fp, #-16]
   3bc44:	ldr	r3, [r3, #108]	; 0x6c
   3bc48:	mov	r1, r3
   3bc4c:	mov	r3, r1
   3bc50:	lsl	r3, r3, #1
   3bc54:	add	r3, r3, r1
   3bc58:	lsl	r3, r3, #3
   3bc5c:	sub	r3, r3, #24
   3bc60:	add	r3, r2, r3
   3bc64:	ldr	r2, [r3, #4]
   3bc68:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3bc6c:	cmp	r2, r3
   3bc70:	bne	3bca8 <__assert_fail@plt+0x2aa38>
   3bc74:	ldr	r3, [fp, #-16]
   3bc78:	ldr	r2, [r3, #116]	; 0x74
   3bc7c:	ldr	r3, [fp, #-16]
   3bc80:	ldr	r3, [r3, #108]	; 0x6c
   3bc84:	mov	r1, r3
   3bc88:	mov	r3, r1
   3bc8c:	lsl	r3, r3, #1
   3bc90:	add	r3, r3, r1
   3bc94:	lsl	r3, r3, #3
   3bc98:	sub	r3, r3, #24
   3bc9c:	add	r3, r2, r3
   3bca0:	mov	r2, #1
   3bca4:	strb	r2, [r3, #20]
   3bca8:	ldr	r3, [fp, #-16]
   3bcac:	ldr	r2, [r3, #116]	; 0x74
   3bcb0:	ldr	r3, [fp, #-16]
   3bcb4:	ldr	r3, [r3, #108]	; 0x6c
   3bcb8:	mov	r1, r3
   3bcbc:	mov	r3, r1
   3bcc0:	lsl	r3, r3, #1
   3bcc4:	add	r3, r3, r1
   3bcc8:	lsl	r3, r3, #3
   3bccc:	add	r3, r2, r3
   3bcd0:	ldr	r2, [fp, #-20]	; 0xffffffec
   3bcd4:	str	r2, [r3]
   3bcd8:	ldr	r3, [fp, #-16]
   3bcdc:	ldr	r2, [r3, #116]	; 0x74
   3bce0:	ldr	r3, [fp, #-16]
   3bce4:	ldr	r3, [r3, #108]	; 0x6c
   3bce8:	mov	r1, r3
   3bcec:	mov	r3, r1
   3bcf0:	lsl	r3, r3, #1
   3bcf4:	add	r3, r3, r1
   3bcf8:	lsl	r3, r3, #3
   3bcfc:	add	r3, r2, r3
   3bd00:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3bd04:	str	r2, [r3, #4]
   3bd08:	ldr	r3, [fp, #-16]
   3bd0c:	ldr	r2, [r3, #116]	; 0x74
   3bd10:	ldr	r3, [fp, #-16]
   3bd14:	ldr	r3, [r3, #108]	; 0x6c
   3bd18:	mov	r1, r3
   3bd1c:	mov	r3, r1
   3bd20:	lsl	r3, r3, #1
   3bd24:	add	r3, r3, r1
   3bd28:	lsl	r3, r3, #3
   3bd2c:	add	r3, r2, r3
   3bd30:	ldr	r2, [fp, #-28]	; 0xffffffe4
   3bd34:	str	r2, [r3, #8]
   3bd38:	ldr	r3, [fp, #-16]
   3bd3c:	ldr	r2, [r3, #116]	; 0x74
   3bd40:	ldr	r3, [fp, #-16]
   3bd44:	ldr	r3, [r3, #108]	; 0x6c
   3bd48:	mov	r1, r3
   3bd4c:	mov	r3, r1
   3bd50:	lsl	r3, r3, #1
   3bd54:	add	r3, r3, r1
   3bd58:	lsl	r3, r3, #3
   3bd5c:	add	r3, r2, r3
   3bd60:	ldr	r2, [fp, #4]
   3bd64:	str	r2, [r3, #12]
   3bd68:	ldr	r3, [fp, #-16]
   3bd6c:	ldr	r2, [r3, #116]	; 0x74
   3bd70:	ldr	r3, [fp, #-16]
   3bd74:	ldr	r3, [r3, #108]	; 0x6c
   3bd78:	mov	r1, r3
   3bd7c:	mov	r3, r1
   3bd80:	lsl	r3, r3, #1
   3bd84:	add	r3, r3, r1
   3bd88:	lsl	r3, r3, #3
   3bd8c:	add	r3, r2, r3
   3bd90:	ldr	r1, [fp, #-28]	; 0xffffffe4
   3bd94:	ldr	r2, [fp, #4]
   3bd98:	cmp	r1, r2
   3bd9c:	bne	3bda8 <__assert_fail@plt+0x2ab38>
   3bda0:	mvn	r2, #0
   3bda4:	b	3bdac <__assert_fail@plt+0x2ab3c>
   3bda8:	mov	r2, #0
   3bdac:	str	r2, [r3, #16]
   3bdb0:	ldr	r3, [fp, #-16]
   3bdb4:	ldr	r2, [r3, #116]	; 0x74
   3bdb8:	ldr	r3, [fp, #-16]
   3bdbc:	ldr	r3, [r3, #108]	; 0x6c
   3bdc0:	add	r0, r3, #1
   3bdc4:	ldr	r1, [fp, #-16]
   3bdc8:	str	r0, [r1, #108]	; 0x6c
   3bdcc:	mov	r1, r3
   3bdd0:	mov	r3, r1
   3bdd4:	lsl	r3, r3, #1
   3bdd8:	add	r3, r3, r1
   3bddc:	lsl	r3, r3, #3
   3bde0:	add	r3, r2, r3
   3bde4:	mov	r2, #0
   3bde8:	strb	r2, [r3, #20]
   3bdec:	ldr	r3, [fp, #-16]
   3bdf0:	ldr	r2, [r3, #120]	; 0x78
   3bdf4:	ldr	r1, [fp, #4]
   3bdf8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3bdfc:	sub	r3, r1, r3
   3be00:	cmp	r2, r3
   3be04:	bge	3be1c <__assert_fail@plt+0x2abac>
   3be08:	ldr	r2, [fp, #4]
   3be0c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3be10:	sub	r2, r2, r3
   3be14:	ldr	r3, [fp, #-16]
   3be18:	str	r2, [r3, #120]	; 0x78
   3be1c:	mov	r3, #0
   3be20:	mov	r0, r3
   3be24:	sub	sp, fp, #4
   3be28:	pop	{fp, pc}
   3be2c:	push	{fp}		; (str fp, [sp, #-4]!)
   3be30:	add	fp, sp, #0
   3be34:	sub	sp, sp, #28
   3be38:	str	r0, [fp, #-24]	; 0xffffffe8
   3be3c:	str	r1, [fp, #-28]	; 0xffffffe4
   3be40:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3be44:	ldr	r3, [r3, #108]	; 0x6c
   3be48:	str	r3, [fp, #-12]
   3be4c:	ldr	r3, [fp, #-12]
   3be50:	str	r3, [fp, #-16]
   3be54:	mov	r3, #0
   3be58:	str	r3, [fp, #-8]
   3be5c:	b	3bec4 <__assert_fail@plt+0x2ac54>
   3be60:	ldr	r2, [fp, #-8]
   3be64:	ldr	r3, [fp, #-12]
   3be68:	add	r3, r2, r3
   3be6c:	lsr	r2, r3, #31
   3be70:	add	r3, r2, r3
   3be74:	asr	r3, r3, #1
   3be78:	str	r3, [fp, #-20]	; 0xffffffec
   3be7c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3be80:	ldr	r1, [r3, #116]	; 0x74
   3be84:	ldr	r2, [fp, #-20]	; 0xffffffec
   3be88:	mov	r3, r2
   3be8c:	lsl	r3, r3, #1
   3be90:	add	r3, r3, r2
   3be94:	lsl	r3, r3, #3
   3be98:	add	r3, r1, r3
   3be9c:	ldr	r2, [r3, #4]
   3bea0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3bea4:	cmp	r2, r3
   3bea8:	bge	3bebc <__assert_fail@plt+0x2ac4c>
   3beac:	ldr	r3, [fp, #-20]	; 0xffffffec
   3beb0:	add	r3, r3, #1
   3beb4:	str	r3, [fp, #-8]
   3beb8:	b	3bec4 <__assert_fail@plt+0x2ac54>
   3bebc:	ldr	r3, [fp, #-20]	; 0xffffffec
   3bec0:	str	r3, [fp, #-12]
   3bec4:	ldr	r2, [fp, #-8]
   3bec8:	ldr	r3, [fp, #-12]
   3becc:	cmp	r2, r3
   3bed0:	blt	3be60 <__assert_fail@plt+0x2abf0>
   3bed4:	ldr	r2, [fp, #-8]
   3bed8:	ldr	r3, [fp, #-16]
   3bedc:	cmp	r2, r3
   3bee0:	bge	3bf1c <__assert_fail@plt+0x2acac>
   3bee4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3bee8:	ldr	r1, [r3, #116]	; 0x74
   3beec:	ldr	r2, [fp, #-8]
   3bef0:	mov	r3, r2
   3bef4:	lsl	r3, r3, #1
   3bef8:	add	r3, r3, r2
   3befc:	lsl	r3, r3, #3
   3bf00:	add	r3, r1, r3
   3bf04:	ldr	r2, [r3, #4]
   3bf08:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3bf0c:	cmp	r2, r3
   3bf10:	bne	3bf1c <__assert_fail@plt+0x2acac>
   3bf14:	ldr	r3, [fp, #-8]
   3bf18:	b	3bf20 <__assert_fail@plt+0x2acb0>
   3bf1c:	mvn	r3, #0
   3bf20:	mov	r0, r3
   3bf24:	add	sp, fp, #0
   3bf28:	pop	{fp}		; (ldr fp, [sp], #4)
   3bf2c:	bx	lr
   3bf30:	push	{r4, fp, lr}
   3bf34:	add	fp, sp, #8
   3bf38:	sub	sp, sp, #28
   3bf3c:	str	r0, [fp, #-24]	; 0xffffffe8
   3bf40:	str	r1, [fp, #-28]	; 0xffffffe4
   3bf44:	str	r2, [fp, #-32]	; 0xffffffe0
   3bf48:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3bf4c:	ldr	r3, [r3, #132]	; 0x84
   3bf50:	cmp	r3, #0
   3bf54:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3bf58:	ldr	r3, [r3, #128]	; 0x80
   3bf5c:	cmp	r3, #0
   3bf60:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3bf64:	ldr	r2, [r3, #124]	; 0x7c
   3bf68:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3bf6c:	ldr	r3, [r3, #128]	; 0x80
   3bf70:	cmp	r2, r3
   3bf74:	moveq	r3, #1
   3bf78:	movne	r3, #0
   3bf7c:	uxtb	r3, r3
   3bf80:	cmp	r3, #0
   3bf84:	beq	3bff4 <__assert_fail@plt+0x2ad84>
   3bf88:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3bf8c:	ldr	r3, [r3, #128]	; 0x80
   3bf90:	lsl	r3, r3, #1
   3bf94:	str	r3, [fp, #-16]
   3bf98:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3bf9c:	ldr	r2, [r3, #132]	; 0x84
   3bfa0:	ldr	r3, [fp, #-16]
   3bfa4:	lsl	r3, r3, #2
   3bfa8:	mov	r1, r3
   3bfac:	mov	r0, r2
   3bfb0:	bl	3e040 <__assert_fail@plt+0x2cdd0>
   3bfb4:	str	r0, [fp, #-20]	; 0xffffffec
   3bfb8:	ldr	r3, [fp, #-20]	; 0xffffffec
   3bfbc:	cmp	r3, #0
   3bfc0:	moveq	r3, #1
   3bfc4:	movne	r3, #0
   3bfc8:	uxtb	r3, r3
   3bfcc:	cmp	r3, #0
   3bfd0:	beq	3bfdc <__assert_fail@plt+0x2ad6c>
   3bfd4:	mov	r3, #12
   3bfd8:	b	3c0b4 <__assert_fail@plt+0x2ae44>
   3bfdc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3bfe0:	ldr	r2, [fp, #-20]	; 0xffffffec
   3bfe4:	str	r2, [r3, #132]	; 0x84
   3bfe8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3bfec:	ldr	r2, [fp, #-16]
   3bff0:	str	r2, [r3, #128]	; 0x80
   3bff4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3bff8:	ldr	r2, [r3, #132]	; 0x84
   3bffc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3c000:	ldr	r3, [r3, #124]	; 0x7c
   3c004:	lsl	r3, r3, #2
   3c008:	add	r4, r2, r3
   3c00c:	mov	r1, #24
   3c010:	mov	r0, #1
   3c014:	bl	3ded4 <__assert_fail@plt+0x2cc64>
   3c018:	mov	r3, r0
   3c01c:	str	r3, [r4]
   3c020:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3c024:	ldr	r2, [r3, #132]	; 0x84
   3c028:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3c02c:	ldr	r3, [r3, #124]	; 0x7c
   3c030:	lsl	r3, r3, #2
   3c034:	add	r3, r2, r3
   3c038:	ldr	r3, [r3]
   3c03c:	cmp	r3, #0
   3c040:	moveq	r3, #1
   3c044:	movne	r3, #0
   3c048:	uxtb	r3, r3
   3c04c:	cmp	r3, #0
   3c050:	beq	3c05c <__assert_fail@plt+0x2adec>
   3c054:	mov	r3, #12
   3c058:	b	3c0b4 <__assert_fail@plt+0x2ae44>
   3c05c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3c060:	ldr	r2, [r3, #132]	; 0x84
   3c064:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3c068:	ldr	r3, [r3, #124]	; 0x7c
   3c06c:	lsl	r3, r3, #2
   3c070:	add	r3, r2, r3
   3c074:	ldr	r3, [r3]
   3c078:	ldr	r2, [fp, #-28]	; 0xffffffe4
   3c07c:	str	r2, [r3, #4]
   3c080:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3c084:	ldr	r2, [r3, #132]	; 0x84
   3c088:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3c08c:	ldr	r3, [r3, #124]	; 0x7c
   3c090:	add	r0, r3, #1
   3c094:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3c098:	str	r0, [r1, #124]	; 0x7c
   3c09c:	lsl	r3, r3, #2
   3c0a0:	add	r3, r2, r3
   3c0a4:	ldr	r3, [r3]
   3c0a8:	ldr	r2, [fp, #-32]	; 0xffffffe0
   3c0ac:	str	r2, [r3]
   3c0b0:	mov	r3, #0
   3c0b4:	mov	r0, r3
   3c0b8:	sub	sp, fp, #8
   3c0bc:	pop	{r4, fp, pc}
   3c0c0:	push	{fp, lr}
   3c0c4:	add	fp, sp, #4
   3c0c8:	sub	sp, sp, #32
   3c0cc:	str	r0, [fp, #-24]	; 0xffffffe8
   3c0d0:	str	r1, [fp, #-28]	; 0xffffffe4
   3c0d4:	str	r2, [fp, #-32]	; 0xffffffe0
   3c0d8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3c0dc:	ldr	r2, [r3, #16]
   3c0e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3c0e4:	ldr	r3, [r3, #12]
   3c0e8:	cmp	r2, r3
   3c0ec:	moveq	r3, #1
   3c0f0:	movne	r3, #0
   3c0f4:	uxtb	r3, r3
   3c0f8:	cmp	r3, #0
   3c0fc:	beq	3c170 <__assert_fail@plt+0x2af00>
   3c100:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3c104:	ldr	r3, [r3, #12]
   3c108:	lsl	r3, r3, #1
   3c10c:	add	r3, r3, #1
   3c110:	str	r3, [fp, #-8]
   3c114:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3c118:	ldr	r2, [r3, #20]
   3c11c:	ldr	r3, [fp, #-8]
   3c120:	lsl	r3, r3, #2
   3c124:	mov	r1, r3
   3c128:	mov	r0, r2
   3c12c:	bl	3e040 <__assert_fail@plt+0x2cdd0>
   3c130:	str	r0, [fp, #-12]
   3c134:	ldr	r3, [fp, #-12]
   3c138:	cmp	r3, #0
   3c13c:	moveq	r3, #1
   3c140:	movne	r3, #0
   3c144:	uxtb	r3, r3
   3c148:	cmp	r3, #0
   3c14c:	beq	3c158 <__assert_fail@plt+0x2aee8>
   3c150:	mov	r3, #0
   3c154:	b	3c1f0 <__assert_fail@plt+0x2af80>
   3c158:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3c15c:	ldr	r2, [fp, #-12]
   3c160:	str	r2, [r3, #20]
   3c164:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3c168:	ldr	r2, [fp, #-8]
   3c16c:	str	r2, [r3, #12]
   3c170:	mov	r1, #20
   3c174:	mov	r0, #1
   3c178:	bl	3ded4 <__assert_fail@plt+0x2cc64>
   3c17c:	mov	r3, r0
   3c180:	str	r3, [fp, #-16]
   3c184:	ldr	r3, [fp, #-16]
   3c188:	cmp	r3, #0
   3c18c:	movne	r3, #1
   3c190:	moveq	r3, #0
   3c194:	uxtb	r3, r3
   3c198:	cmp	r3, #0
   3c19c:	beq	3c1ec <__assert_fail@plt+0x2af7c>
   3c1a0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3c1a4:	ldr	r2, [r3, #20]
   3c1a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3c1ac:	ldr	r3, [r3, #16]
   3c1b0:	lsl	r3, r3, #2
   3c1b4:	add	r3, r2, r3
   3c1b8:	ldr	r2, [fp, #-16]
   3c1bc:	str	r2, [r3]
   3c1c0:	ldr	r3, [fp, #-16]
   3c1c4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   3c1c8:	str	r2, [r3]
   3c1cc:	ldr	r3, [fp, #-16]
   3c1d0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   3c1d4:	str	r2, [r3, #4]
   3c1d8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3c1dc:	ldr	r3, [r3, #16]
   3c1e0:	add	r2, r3, #1
   3c1e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3c1e8:	str	r2, [r3, #16]
   3c1ec:	ldr	r3, [fp, #-16]
   3c1f0:	mov	r0, r3
   3c1f4:	sub	sp, fp, #4
   3c1f8:	pop	{fp, pc}
   3c1fc:	push	{fp, lr}
   3c200:	add	fp, sp, #4
   3c204:	sub	sp, sp, #16
   3c208:	str	r0, [fp, #-8]
   3c20c:	str	r1, [fp, #-12]
   3c210:	str	r2, [fp, #-16]
   3c214:	str	r3, [fp, #-20]	; 0xffffffec
   3c218:	ldr	r3, [fp, #-8]
   3c21c:	ldr	r2, [fp, #-12]
   3c220:	str	r2, [r3]
   3c224:	ldr	r3, [fp, #-8]
   3c228:	ldr	r2, [fp, #-16]
   3c22c:	str	r2, [r3, #4]
   3c230:	ldr	r3, [fp, #-8]
   3c234:	ldr	r2, [fp, #-20]	; 0xffffffec
   3c238:	str	r2, [r3, #8]
   3c23c:	ldr	r3, [fp, #-8]
   3c240:	ldr	r2, [fp, #4]
   3c244:	str	r2, [r3, #12]
   3c248:	ldr	r3, [fp, #-8]
   3c24c:	add	r3, r3, #16
   3c250:	mov	r2, #12
   3c254:	mov	r1, #0
   3c258:	mov	r0, r3
   3c25c:	bl	111bc <memset@plt>
   3c260:	nop			; (mov r0, r0)
   3c264:	sub	sp, fp, #4
   3c268:	pop	{fp, pc}
   3c26c:	push	{fp, lr}
   3c270:	add	fp, sp, #4
   3c274:	sub	sp, sp, #16
   3c278:	str	r0, [fp, #-16]
   3c27c:	str	r1, [fp, #-20]	; 0xffffffec
   3c280:	ldr	r2, [fp, #-20]	; 0xffffffec
   3c284:	mov	r1, #0
   3c288:	ldr	r0, [fp, #-16]
   3c28c:	bl	111e0 <memchr@plt>
   3c290:	str	r0, [fp, #-8]
   3c294:	ldr	r3, [fp, #-8]
   3c298:	cmp	r3, #0
   3c29c:	beq	3c2b4 <__assert_fail@plt+0x2b044>
   3c2a0:	ldr	r2, [fp, #-8]
   3c2a4:	ldr	r3, [fp, #-16]
   3c2a8:	sub	r3, r2, r3
   3c2ac:	add	r3, r3, #1
   3c2b0:	b	3c2b8 <__assert_fail@plt+0x2b048>
   3c2b4:	ldr	r3, [fp, #-20]	; 0xffffffec
   3c2b8:	mov	r0, r3
   3c2bc:	sub	sp, fp, #4
   3c2c0:	pop	{fp, pc}
   3c2c4:	push	{fp}		; (str fp, [sp, #-4]!)
   3c2c8:	add	fp, sp, #0
   3c2cc:	sub	sp, sp, #20
   3c2d0:	str	r0, [fp, #-8]
   3c2d4:	str	r1, [fp, #-12]
   3c2d8:	mov	r3, r2
   3c2dc:	strb	r3, [fp, #-13]
   3c2e0:	ldr	r3, [fp, #-8]
   3c2e4:	ldrb	r3, [r3]
   3c2e8:	ldrb	r2, [fp, #-13]
   3c2ec:	cmp	r2, r3
   3c2f0:	bne	3c3cc <__assert_fail@plt+0x2b15c>
   3c2f4:	ldr	r3, [fp, #-12]
   3c2f8:	ldrb	r3, [r3]
   3c2fc:	ldrb	r2, [fp, #-13]
   3c300:	cmp	r2, r3
   3c304:	bne	3c3cc <__assert_fail@plt+0x2b15c>
   3c308:	b	3c328 <__assert_fail@plt+0x2b0b8>
   3c30c:	ldr	r3, [fp, #-8]
   3c310:	ldrb	r3, [r3]
   3c314:	sub	r3, r3, #48	; 0x30
   3c318:	cmp	r3, #9
   3c31c:	bls	3c328 <__assert_fail@plt+0x2b0b8>
   3c320:	mov	r3, #0
   3c324:	b	3c49c <__assert_fail@plt+0x2b22c>
   3c328:	ldr	r3, [fp, #-8]
   3c32c:	add	r3, r3, #1
   3c330:	str	r3, [fp, #-8]
   3c334:	ldr	r3, [fp, #-8]
   3c338:	ldrb	r2, [r3]
   3c33c:	ldr	r3, [fp, #-12]
   3c340:	add	r3, r3, #1
   3c344:	str	r3, [fp, #-12]
   3c348:	ldr	r3, [fp, #-12]
   3c34c:	ldrb	r3, [r3]
   3c350:	cmp	r2, r3
   3c354:	beq	3c30c <__assert_fail@plt+0x2b09c>
   3c358:	ldr	r3, [fp, #-8]
   3c35c:	ldrb	r3, [r3]
   3c360:	sub	r3, r3, #48	; 0x30
   3c364:	cmp	r3, #9
   3c368:	bhi	3c39c <__assert_fail@plt+0x2b12c>
   3c36c:	ldr	r3, [fp, #-12]
   3c370:	ldrb	r3, [r3]
   3c374:	sub	r3, r3, #48	; 0x30
   3c378:	cmp	r3, #9
   3c37c:	bhi	3c39c <__assert_fail@plt+0x2b12c>
   3c380:	ldr	r3, [fp, #-8]
   3c384:	ldrb	r3, [r3]
   3c388:	mov	r2, r3
   3c38c:	ldr	r3, [fp, #-12]
   3c390:	ldrb	r3, [r3]
   3c394:	sub	r3, r2, r3
   3c398:	b	3c49c <__assert_fail@plt+0x2b22c>
   3c39c:	ldr	r3, [fp, #-8]
   3c3a0:	ldrb	r3, [r3]
   3c3a4:	sub	r3, r3, #48	; 0x30
   3c3a8:	cmp	r3, #9
   3c3ac:	bls	3c3ec <__assert_fail@plt+0x2b17c>
   3c3b0:	ldr	r3, [fp, #-12]
   3c3b4:	ldrb	r3, [r3]
   3c3b8:	sub	r3, r3, #48	; 0x30
   3c3bc:	cmp	r3, #9
   3c3c0:	bls	3c450 <__assert_fail@plt+0x2b1e0>
   3c3c4:	mov	r3, #0
   3c3c8:	b	3c49c <__assert_fail@plt+0x2b22c>
   3c3cc:	ldr	r3, [fp, #-8]
   3c3d0:	add	r2, r3, #1
   3c3d4:	str	r2, [fp, #-8]
   3c3d8:	ldrb	r3, [r3]
   3c3dc:	ldrb	r2, [fp, #-13]
   3c3e0:	cmp	r2, r3
   3c3e4:	bne	3c430 <__assert_fail@plt+0x2b1c0>
   3c3e8:	b	3c400 <__assert_fail@plt+0x2b190>
   3c3ec:	nop			; (mov r0, r0)
   3c3f0:	b	3c400 <__assert_fail@plt+0x2b190>
   3c3f4:	ldr	r3, [fp, #-8]
   3c3f8:	add	r3, r3, #1
   3c3fc:	str	r3, [fp, #-8]
   3c400:	ldr	r3, [fp, #-8]
   3c404:	ldrb	r3, [r3]
   3c408:	cmp	r3, #48	; 0x30
   3c40c:	beq	3c3f4 <__assert_fail@plt+0x2b184>
   3c410:	ldr	r3, [fp, #-8]
   3c414:	ldrb	r3, [r3]
   3c418:	sub	r3, r3, #48	; 0x30
   3c41c:	cmp	r3, #9
   3c420:	movls	r3, #1
   3c424:	movhi	r3, #0
   3c428:	uxtb	r3, r3
   3c42c:	b	3c49c <__assert_fail@plt+0x2b22c>
   3c430:	ldr	r3, [fp, #-12]
   3c434:	add	r2, r3, #1
   3c438:	str	r2, [fp, #-12]
   3c43c:	ldrb	r3, [r3]
   3c440:	ldrb	r2, [fp, #-13]
   3c444:	cmp	r2, r3
   3c448:	bne	3c498 <__assert_fail@plt+0x2b228>
   3c44c:	b	3c464 <__assert_fail@plt+0x2b1f4>
   3c450:	nop			; (mov r0, r0)
   3c454:	b	3c464 <__assert_fail@plt+0x2b1f4>
   3c458:	ldr	r3, [fp, #-12]
   3c45c:	add	r3, r3, #1
   3c460:	str	r3, [fp, #-12]
   3c464:	ldr	r3, [fp, #-12]
   3c468:	ldrb	r3, [r3]
   3c46c:	cmp	r3, #48	; 0x30
   3c470:	beq	3c458 <__assert_fail@plt+0x2b1e8>
   3c474:	ldr	r3, [fp, #-12]
   3c478:	ldrb	r3, [r3]
   3c47c:	sub	r3, r3, #48	; 0x30
   3c480:	cmp	r3, #9
   3c484:	movls	r3, #1
   3c488:	movhi	r3, #0
   3c48c:	uxtb	r3, r3
   3c490:	rsb	r3, r3, #0
   3c494:	b	3c49c <__assert_fail@plt+0x2b22c>
   3c498:	mov	r3, #0
   3c49c:	mov	r0, r3
   3c4a0:	add	sp, fp, #0
   3c4a4:	pop	{fp}		; (ldr fp, [sp], #4)
   3c4a8:	bx	lr
   3c4ac:	push	{fp, lr}
   3c4b0:	add	fp, sp, #4
   3c4b4:	sub	sp, sp, #32
   3c4b8:	str	r0, [fp, #-24]	; 0xffffffe8
   3c4bc:	str	r1, [fp, #-28]	; 0xffffffe4
   3c4c0:	str	r2, [fp, #-32]	; 0xffffffe0
   3c4c4:	str	r3, [fp, #-36]	; 0xffffffdc
   3c4c8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3c4cc:	ldrb	r3, [r3]
   3c4d0:	strb	r3, [fp, #-5]
   3c4d4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3c4d8:	ldrb	r3, [r3]
   3c4dc:	strb	r3, [fp, #-6]
   3c4e0:	ldrb	r3, [fp, #-5]
   3c4e4:	cmp	r3, #45	; 0x2d
   3c4e8:	bne	3c804 <__assert_fail@plt+0x2b594>
   3c4ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3c4f0:	add	r3, r3, #1
   3c4f4:	str	r3, [fp, #-24]	; 0xffffffe8
   3c4f8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3c4fc:	ldrb	r3, [r3]
   3c500:	strb	r3, [fp, #-5]
   3c504:	ldrb	r3, [fp, #-5]
   3c508:	cmp	r3, #48	; 0x30
   3c50c:	beq	3c4ec <__assert_fail@plt+0x2b27c>
   3c510:	ldrb	r2, [fp, #-5]
   3c514:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3c518:	cmp	r2, r3
   3c51c:	beq	3c4ec <__assert_fail@plt+0x2b27c>
   3c520:	ldrb	r3, [fp, #-6]
   3c524:	cmp	r3, #45	; 0x2d
   3c528:	beq	3c600 <__assert_fail@plt+0x2b390>
   3c52c:	ldrb	r2, [fp, #-5]
   3c530:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3c534:	cmp	r2, r3
   3c538:	bne	3c560 <__assert_fail@plt+0x2b2f0>
   3c53c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3c540:	add	r3, r3, #1
   3c544:	str	r3, [fp, #-24]	; 0xffffffe8
   3c548:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3c54c:	ldrb	r3, [r3]
   3c550:	strb	r3, [fp, #-5]
   3c554:	ldrb	r3, [fp, #-5]
   3c558:	cmp	r3, #48	; 0x30
   3c55c:	beq	3c53c <__assert_fail@plt+0x2b2cc>
   3c560:	ldrb	r3, [fp, #-5]
   3c564:	sub	r3, r3, #48	; 0x30
   3c568:	cmp	r3, #9
   3c56c:	bhi	3c590 <__assert_fail@plt+0x2b320>
   3c570:	mvn	r3, #0
   3c574:	b	3cb4c <__assert_fail@plt+0x2b8dc>
   3c578:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3c57c:	add	r3, r3, #1
   3c580:	str	r3, [fp, #-28]	; 0xffffffe4
   3c584:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3c588:	ldrb	r3, [r3]
   3c58c:	strb	r3, [fp, #-6]
   3c590:	ldrb	r3, [fp, #-6]
   3c594:	cmp	r3, #48	; 0x30
   3c598:	beq	3c578 <__assert_fail@plt+0x2b308>
   3c59c:	ldrb	r2, [fp, #-6]
   3c5a0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3c5a4:	cmp	r2, r3
   3c5a8:	beq	3c578 <__assert_fail@plt+0x2b308>
   3c5ac:	ldrb	r2, [fp, #-6]
   3c5b0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3c5b4:	cmp	r2, r3
   3c5b8:	bne	3c5e0 <__assert_fail@plt+0x2b370>
   3c5bc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3c5c0:	add	r3, r3, #1
   3c5c4:	str	r3, [fp, #-28]	; 0xffffffe4
   3c5c8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3c5cc:	ldrb	r3, [r3]
   3c5d0:	strb	r3, [fp, #-6]
   3c5d4:	ldrb	r3, [fp, #-6]
   3c5d8:	cmp	r3, #48	; 0x30
   3c5dc:	beq	3c5bc <__assert_fail@plt+0x2b34c>
   3c5e0:	ldrb	r3, [fp, #-6]
   3c5e4:	sub	r3, r3, #48	; 0x30
   3c5e8:	cmp	r3, #9
   3c5ec:	movls	r3, #1
   3c5f0:	movhi	r3, #0
   3c5f4:	uxtb	r3, r3
   3c5f8:	rsb	r3, r3, #0
   3c5fc:	b	3cb4c <__assert_fail@plt+0x2b8dc>
   3c600:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3c604:	add	r3, r3, #1
   3c608:	str	r3, [fp, #-28]	; 0xffffffe4
   3c60c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3c610:	ldrb	r3, [r3]
   3c614:	strb	r3, [fp, #-6]
   3c618:	ldrb	r3, [fp, #-6]
   3c61c:	cmp	r3, #48	; 0x30
   3c620:	beq	3c600 <__assert_fail@plt+0x2b390>
   3c624:	ldrb	r2, [fp, #-6]
   3c628:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3c62c:	cmp	r2, r3
   3c630:	beq	3c600 <__assert_fail@plt+0x2b390>
   3c634:	b	3c688 <__assert_fail@plt+0x2b418>
   3c638:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3c63c:	add	r3, r3, #1
   3c640:	str	r3, [fp, #-24]	; 0xffffffe8
   3c644:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3c648:	ldrb	r3, [r3]
   3c64c:	strb	r3, [fp, #-5]
   3c650:	ldrb	r2, [fp, #-5]
   3c654:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3c658:	cmp	r2, r3
   3c65c:	beq	3c638 <__assert_fail@plt+0x2b3c8>
   3c660:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3c664:	add	r3, r3, #1
   3c668:	str	r3, [fp, #-28]	; 0xffffffe4
   3c66c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3c670:	ldrb	r3, [r3]
   3c674:	strb	r3, [fp, #-6]
   3c678:	ldrb	r2, [fp, #-6]
   3c67c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3c680:	cmp	r2, r3
   3c684:	beq	3c660 <__assert_fail@plt+0x2b3f0>
   3c688:	ldrb	r2, [fp, #-5]
   3c68c:	ldrb	r3, [fp, #-6]
   3c690:	cmp	r2, r3
   3c694:	bne	3c6a8 <__assert_fail@plt+0x2b438>
   3c698:	ldrb	r3, [fp, #-5]
   3c69c:	sub	r3, r3, #48	; 0x30
   3c6a0:	cmp	r3, #9
   3c6a4:	bls	3c638 <__assert_fail@plt+0x2b3c8>
   3c6a8:	ldrb	r2, [fp, #-5]
   3c6ac:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3c6b0:	cmp	r2, r3
   3c6b4:	bne	3c6c8 <__assert_fail@plt+0x2b458>
   3c6b8:	ldrb	r3, [fp, #-6]
   3c6bc:	sub	r3, r3, #48	; 0x30
   3c6c0:	cmp	r3, #9
   3c6c4:	bhi	3c6e8 <__assert_fail@plt+0x2b478>
   3c6c8:	ldrb	r2, [fp, #-6]
   3c6cc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3c6d0:	cmp	r2, r3
   3c6d4:	bne	3c708 <__assert_fail@plt+0x2b498>
   3c6d8:	ldrb	r3, [fp, #-5]
   3c6dc:	sub	r3, r3, #48	; 0x30
   3c6e0:	cmp	r3, #9
   3c6e4:	bls	3c708 <__assert_fail@plt+0x2b498>
   3c6e8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3c6ec:	uxtb	r3, r3
   3c6f0:	mov	r2, r3
   3c6f4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3c6f8:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3c6fc:	bl	3c2c4 <__assert_fail@plt+0x2b054>
   3c700:	mov	r3, r0
   3c704:	b	3cb4c <__assert_fail@plt+0x2b8dc>
   3c708:	ldrb	r2, [fp, #-6]
   3c70c:	ldrb	r3, [fp, #-5]
   3c710:	sub	r3, r2, r3
   3c714:	str	r3, [fp, #-20]	; 0xffffffec
   3c718:	mov	r3, #0
   3c71c:	str	r3, [fp, #-12]
   3c720:	b	3c758 <__assert_fail@plt+0x2b4e8>
   3c724:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3c728:	add	r3, r3, #1
   3c72c:	str	r3, [fp, #-24]	; 0xffffffe8
   3c730:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3c734:	ldrb	r3, [r3]
   3c738:	strb	r3, [fp, #-5]
   3c73c:	ldrb	r2, [fp, #-5]
   3c740:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3c744:	cmp	r2, r3
   3c748:	beq	3c724 <__assert_fail@plt+0x2b4b4>
   3c74c:	ldr	r3, [fp, #-12]
   3c750:	add	r3, r3, #1
   3c754:	str	r3, [fp, #-12]
   3c758:	ldrb	r3, [fp, #-5]
   3c75c:	sub	r3, r3, #48	; 0x30
   3c760:	cmp	r3, #9
   3c764:	bls	3c724 <__assert_fail@plt+0x2b4b4>
   3c768:	mov	r3, #0
   3c76c:	str	r3, [fp, #-16]
   3c770:	b	3c7a8 <__assert_fail@plt+0x2b538>
   3c774:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3c778:	add	r3, r3, #1
   3c77c:	str	r3, [fp, #-28]	; 0xffffffe4
   3c780:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3c784:	ldrb	r3, [r3]
   3c788:	strb	r3, [fp, #-6]
   3c78c:	ldrb	r2, [fp, #-6]
   3c790:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3c794:	cmp	r2, r3
   3c798:	beq	3c774 <__assert_fail@plt+0x2b504>
   3c79c:	ldr	r3, [fp, #-16]
   3c7a0:	add	r3, r3, #1
   3c7a4:	str	r3, [fp, #-16]
   3c7a8:	ldrb	r3, [fp, #-6]
   3c7ac:	sub	r3, r3, #48	; 0x30
   3c7b0:	cmp	r3, #9
   3c7b4:	bls	3c774 <__assert_fail@plt+0x2b504>
   3c7b8:	ldr	r2, [fp, #-12]
   3c7bc:	ldr	r3, [fp, #-16]
   3c7c0:	cmp	r2, r3
   3c7c4:	beq	3c7e8 <__assert_fail@plt+0x2b578>
   3c7c8:	ldr	r2, [fp, #-12]
   3c7cc:	ldr	r3, [fp, #-16]
   3c7d0:	cmp	r2, r3
   3c7d4:	bcs	3c7e0 <__assert_fail@plt+0x2b570>
   3c7d8:	mov	r3, #1
   3c7dc:	b	3cb4c <__assert_fail@plt+0x2b8dc>
   3c7e0:	mvn	r3, #0
   3c7e4:	b	3cb4c <__assert_fail@plt+0x2b8dc>
   3c7e8:	ldr	r3, [fp, #-12]
   3c7ec:	cmp	r3, #0
   3c7f0:	bne	3c7fc <__assert_fail@plt+0x2b58c>
   3c7f4:	mov	r3, #0
   3c7f8:	b	3cb4c <__assert_fail@plt+0x2b8dc>
   3c7fc:	ldr	r3, [fp, #-20]	; 0xffffffec
   3c800:	b	3cb4c <__assert_fail@plt+0x2b8dc>
   3c804:	ldrb	r3, [fp, #-6]
   3c808:	cmp	r3, #45	; 0x2d
   3c80c:	bne	3c92c <__assert_fail@plt+0x2b6bc>
   3c810:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3c814:	add	r3, r3, #1
   3c818:	str	r3, [fp, #-28]	; 0xffffffe4
   3c81c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3c820:	ldrb	r3, [r3]
   3c824:	strb	r3, [fp, #-6]
   3c828:	ldrb	r3, [fp, #-6]
   3c82c:	cmp	r3, #48	; 0x30
   3c830:	beq	3c810 <__assert_fail@plt+0x2b5a0>
   3c834:	ldrb	r2, [fp, #-6]
   3c838:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3c83c:	cmp	r2, r3
   3c840:	beq	3c810 <__assert_fail@plt+0x2b5a0>
   3c844:	ldrb	r2, [fp, #-6]
   3c848:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3c84c:	cmp	r2, r3
   3c850:	bne	3c878 <__assert_fail@plt+0x2b608>
   3c854:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3c858:	add	r3, r3, #1
   3c85c:	str	r3, [fp, #-28]	; 0xffffffe4
   3c860:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3c864:	ldrb	r3, [r3]
   3c868:	strb	r3, [fp, #-6]
   3c86c:	ldrb	r3, [fp, #-6]
   3c870:	cmp	r3, #48	; 0x30
   3c874:	beq	3c854 <__assert_fail@plt+0x2b5e4>
   3c878:	ldrb	r3, [fp, #-6]
   3c87c:	sub	r3, r3, #48	; 0x30
   3c880:	cmp	r3, #9
   3c884:	bhi	3c8a8 <__assert_fail@plt+0x2b638>
   3c888:	mov	r3, #1
   3c88c:	b	3cb4c <__assert_fail@plt+0x2b8dc>
   3c890:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3c894:	add	r3, r3, #1
   3c898:	str	r3, [fp, #-24]	; 0xffffffe8
   3c89c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3c8a0:	ldrb	r3, [r3]
   3c8a4:	strb	r3, [fp, #-5]
   3c8a8:	ldrb	r3, [fp, #-5]
   3c8ac:	cmp	r3, #48	; 0x30
   3c8b0:	beq	3c890 <__assert_fail@plt+0x2b620>
   3c8b4:	ldrb	r2, [fp, #-5]
   3c8b8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3c8bc:	cmp	r2, r3
   3c8c0:	beq	3c890 <__assert_fail@plt+0x2b620>
   3c8c4:	ldrb	r2, [fp, #-5]
   3c8c8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3c8cc:	cmp	r2, r3
   3c8d0:	bne	3c8f8 <__assert_fail@plt+0x2b688>
   3c8d4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3c8d8:	add	r3, r3, #1
   3c8dc:	str	r3, [fp, #-24]	; 0xffffffe8
   3c8e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3c8e4:	ldrb	r3, [r3]
   3c8e8:	strb	r3, [fp, #-5]
   3c8ec:	ldrb	r3, [fp, #-5]
   3c8f0:	cmp	r3, #48	; 0x30
   3c8f4:	beq	3c8d4 <__assert_fail@plt+0x2b664>
   3c8f8:	ldrb	r3, [fp, #-5]
   3c8fc:	sub	r3, r3, #48	; 0x30
   3c900:	cmp	r3, #9
   3c904:	movls	r3, #1
   3c908:	movhi	r3, #0
   3c90c:	uxtb	r3, r3
   3c910:	b	3cb4c <__assert_fail@plt+0x2b8dc>
   3c914:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3c918:	add	r3, r3, #1
   3c91c:	str	r3, [fp, #-24]	; 0xffffffe8
   3c920:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3c924:	ldrb	r3, [r3]
   3c928:	strb	r3, [fp, #-5]
   3c92c:	ldrb	r3, [fp, #-5]
   3c930:	cmp	r3, #48	; 0x30
   3c934:	beq	3c914 <__assert_fail@plt+0x2b6a4>
   3c938:	ldrb	r2, [fp, #-5]
   3c93c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3c940:	cmp	r2, r3
   3c944:	beq	3c914 <__assert_fail@plt+0x2b6a4>
   3c948:	b	3c964 <__assert_fail@plt+0x2b6f4>
   3c94c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3c950:	add	r3, r3, #1
   3c954:	str	r3, [fp, #-28]	; 0xffffffe4
   3c958:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3c95c:	ldrb	r3, [r3]
   3c960:	strb	r3, [fp, #-6]
   3c964:	ldrb	r3, [fp, #-6]
   3c968:	cmp	r3, #48	; 0x30
   3c96c:	beq	3c94c <__assert_fail@plt+0x2b6dc>
   3c970:	ldrb	r2, [fp, #-6]
   3c974:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3c978:	cmp	r2, r3
   3c97c:	beq	3c94c <__assert_fail@plt+0x2b6dc>
   3c980:	b	3c9d4 <__assert_fail@plt+0x2b764>
   3c984:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3c988:	add	r3, r3, #1
   3c98c:	str	r3, [fp, #-24]	; 0xffffffe8
   3c990:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3c994:	ldrb	r3, [r3]
   3c998:	strb	r3, [fp, #-5]
   3c99c:	ldrb	r2, [fp, #-5]
   3c9a0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3c9a4:	cmp	r2, r3
   3c9a8:	beq	3c984 <__assert_fail@plt+0x2b714>
   3c9ac:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3c9b0:	add	r3, r3, #1
   3c9b4:	str	r3, [fp, #-28]	; 0xffffffe4
   3c9b8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3c9bc:	ldrb	r3, [r3]
   3c9c0:	strb	r3, [fp, #-6]
   3c9c4:	ldrb	r2, [fp, #-6]
   3c9c8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3c9cc:	cmp	r2, r3
   3c9d0:	beq	3c9ac <__assert_fail@plt+0x2b73c>
   3c9d4:	ldrb	r2, [fp, #-5]
   3c9d8:	ldrb	r3, [fp, #-6]
   3c9dc:	cmp	r2, r3
   3c9e0:	bne	3c9f4 <__assert_fail@plt+0x2b784>
   3c9e4:	ldrb	r3, [fp, #-5]
   3c9e8:	sub	r3, r3, #48	; 0x30
   3c9ec:	cmp	r3, #9
   3c9f0:	bls	3c984 <__assert_fail@plt+0x2b714>
   3c9f4:	ldrb	r2, [fp, #-5]
   3c9f8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3c9fc:	cmp	r2, r3
   3ca00:	bne	3ca14 <__assert_fail@plt+0x2b7a4>
   3ca04:	ldrb	r3, [fp, #-6]
   3ca08:	sub	r3, r3, #48	; 0x30
   3ca0c:	cmp	r3, #9
   3ca10:	bhi	3ca34 <__assert_fail@plt+0x2b7c4>
   3ca14:	ldrb	r2, [fp, #-6]
   3ca18:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3ca1c:	cmp	r2, r3
   3ca20:	bne	3ca54 <__assert_fail@plt+0x2b7e4>
   3ca24:	ldrb	r3, [fp, #-5]
   3ca28:	sub	r3, r3, #48	; 0x30
   3ca2c:	cmp	r3, #9
   3ca30:	bls	3ca54 <__assert_fail@plt+0x2b7e4>
   3ca34:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3ca38:	uxtb	r3, r3
   3ca3c:	mov	r2, r3
   3ca40:	ldr	r1, [fp, #-28]	; 0xffffffe4
   3ca44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3ca48:	bl	3c2c4 <__assert_fail@plt+0x2b054>
   3ca4c:	mov	r3, r0
   3ca50:	b	3cb4c <__assert_fail@plt+0x2b8dc>
   3ca54:	ldrb	r2, [fp, #-5]
   3ca58:	ldrb	r3, [fp, #-6]
   3ca5c:	sub	r3, r2, r3
   3ca60:	str	r3, [fp, #-20]	; 0xffffffec
   3ca64:	mov	r3, #0
   3ca68:	str	r3, [fp, #-12]
   3ca6c:	b	3caa4 <__assert_fail@plt+0x2b834>
   3ca70:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3ca74:	add	r3, r3, #1
   3ca78:	str	r3, [fp, #-24]	; 0xffffffe8
   3ca7c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3ca80:	ldrb	r3, [r3]
   3ca84:	strb	r3, [fp, #-5]
   3ca88:	ldrb	r2, [fp, #-5]
   3ca8c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3ca90:	cmp	r2, r3
   3ca94:	beq	3ca70 <__assert_fail@plt+0x2b800>
   3ca98:	ldr	r3, [fp, #-12]
   3ca9c:	add	r3, r3, #1
   3caa0:	str	r3, [fp, #-12]
   3caa4:	ldrb	r3, [fp, #-5]
   3caa8:	sub	r3, r3, #48	; 0x30
   3caac:	cmp	r3, #9
   3cab0:	bls	3ca70 <__assert_fail@plt+0x2b800>
   3cab4:	mov	r3, #0
   3cab8:	str	r3, [fp, #-16]
   3cabc:	b	3caf4 <__assert_fail@plt+0x2b884>
   3cac0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3cac4:	add	r3, r3, #1
   3cac8:	str	r3, [fp, #-28]	; 0xffffffe4
   3cacc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3cad0:	ldrb	r3, [r3]
   3cad4:	strb	r3, [fp, #-6]
   3cad8:	ldrb	r2, [fp, #-6]
   3cadc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3cae0:	cmp	r2, r3
   3cae4:	beq	3cac0 <__assert_fail@plt+0x2b850>
   3cae8:	ldr	r3, [fp, #-16]
   3caec:	add	r3, r3, #1
   3caf0:	str	r3, [fp, #-16]
   3caf4:	ldrb	r3, [fp, #-6]
   3caf8:	sub	r3, r3, #48	; 0x30
   3cafc:	cmp	r3, #9
   3cb00:	bls	3cac0 <__assert_fail@plt+0x2b850>
   3cb04:	ldr	r2, [fp, #-12]
   3cb08:	ldr	r3, [fp, #-16]
   3cb0c:	cmp	r2, r3
   3cb10:	beq	3cb34 <__assert_fail@plt+0x2b8c4>
   3cb14:	ldr	r2, [fp, #-12]
   3cb18:	ldr	r3, [fp, #-16]
   3cb1c:	cmp	r2, r3
   3cb20:	bcs	3cb2c <__assert_fail@plt+0x2b8bc>
   3cb24:	mvn	r3, #0
   3cb28:	b	3cb4c <__assert_fail@plt+0x2b8dc>
   3cb2c:	mov	r3, #1
   3cb30:	b	3cb4c <__assert_fail@plt+0x2b8dc>
   3cb34:	ldr	r3, [fp, #-12]
   3cb38:	cmp	r3, #0
   3cb3c:	bne	3cb48 <__assert_fail@plt+0x2b8d8>
   3cb40:	mov	r3, #0
   3cb44:	b	3cb4c <__assert_fail@plt+0x2b8dc>
   3cb48:	ldr	r3, [fp, #-20]	; 0xffffffec
   3cb4c:	mov	r0, r3
   3cb50:	sub	sp, fp, #4
   3cb54:	pop	{fp, pc}
   3cb58:	push	{fp, lr}
   3cb5c:	add	fp, sp, #4
   3cb60:	sub	sp, sp, #8
   3cb64:	str	r0, [fp, #-8]
   3cb68:	str	r1, [fp, #-12]
   3cb6c:	mov	r3, #256	; 0x100
   3cb70:	mov	r2, #256	; 0x100
   3cb74:	ldr	r1, [fp, #-12]
   3cb78:	ldr	r0, [fp, #-8]
   3cb7c:	bl	3c4ac <__assert_fail@plt+0x2b23c>
   3cb80:	mov	r3, r0
   3cb84:	mov	r0, r3
   3cb88:	sub	sp, fp, #4
   3cb8c:	pop	{fp, pc}
   3cb90:	push	{r4, r5, r6, r7, fp, lr}
   3cb94:	add	fp, sp, #20
   3cb98:	sub	sp, sp, #48	; 0x30
   3cb9c:	str	r0, [fp, #-24]	; 0xffffffe8
   3cba0:	str	r1, [fp, #-28]	; 0xffffffe4
   3cba4:	str	r2, [fp, #-32]	; 0xffffffe0
   3cba8:	str	r3, [fp, #-36]	; 0xffffffdc
   3cbac:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3cbb0:	cmp	r3, #0
   3cbb4:	beq	3cbd8 <__assert_fail@plt+0x2b968>
   3cbb8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3cbbc:	str	r3, [sp]
   3cbc0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3cbc4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   3cbc8:	ldr	r1, [pc, #1260]	; 3d0bc <__assert_fail@plt+0x2be4c>
   3cbcc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3cbd0:	bl	1118c <fprintf@plt>
   3cbd4:	b	3cbec <__assert_fail@plt+0x2b97c>
   3cbd8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3cbdc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   3cbe0:	ldr	r1, [pc, #1240]	; 3d0c0 <__assert_fail@plt+0x2be50>
   3cbe4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3cbe8:	bl	1118c <fprintf@plt>
   3cbec:	ldr	r0, [pc, #1232]	; 3d0c4 <__assert_fail@plt+0x2be54>
   3cbf0:	bl	11168 <gettext@plt>
   3cbf4:	mov	r2, r0
   3cbf8:	ldr	r3, [pc, #1224]	; 3d0c8 <__assert_fail@plt+0x2be58>
   3cbfc:	ldr	r1, [pc, #1224]	; 3d0cc <__assert_fail@plt+0x2be5c>
   3cc00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3cc04:	bl	1118c <fprintf@plt>
   3cc08:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3cc0c:	mov	r0, #10
   3cc10:	bl	11060 <fputc_unlocked@plt>
   3cc14:	ldr	r0, [pc, #1204]	; 3d0d0 <__assert_fail@plt+0x2be60>
   3cc18:	bl	11168 <gettext@plt>
   3cc1c:	mov	r3, r0
   3cc20:	ldr	r2, [pc, #1196]	; 3d0d4 <__assert_fail@plt+0x2be64>
   3cc24:	mov	r1, r3
   3cc28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3cc2c:	bl	1118c <fprintf@plt>
   3cc30:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3cc34:	mov	r0, #10
   3cc38:	bl	11060 <fputc_unlocked@plt>
   3cc3c:	ldr	r3, [fp, #8]
   3cc40:	cmp	r3, #9
   3cc44:	ldrls	pc, [pc, r3, lsl #2]
   3cc48:	b	3d004 <__assert_fail@plt+0x2bd94>
   3cc4c:	andeq	sp, r3, ip, lsr #1
   3cc50:	andeq	ip, r3, r4, ror ip
   3cc54:	muleq	r3, r8, ip
   3cc58:	andeq	ip, r3, r4, asr #25
   3cc5c:	andeq	ip, r3, r4, lsl #26
   3cc60:	andeq	ip, r3, ip, asr sp
   3cc64:	andeq	ip, r3, r4, asr #27
   3cc68:	andeq	ip, r3, ip, lsr lr
   3cc6c:	andeq	ip, r3, r4, asr #29
   3cc70:	andeq	ip, r3, ip, asr pc
   3cc74:	ldr	r0, [pc, #1116]	; 3d0d8 <__assert_fail@plt+0x2be68>
   3cc78:	bl	11168 <gettext@plt>
   3cc7c:	mov	r1, r0
   3cc80:	ldr	r3, [fp, #4]
   3cc84:	ldr	r3, [r3]
   3cc88:	mov	r2, r3
   3cc8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3cc90:	bl	1118c <fprintf@plt>
   3cc94:	b	3d0b0 <__assert_fail@plt+0x2be40>
   3cc98:	ldr	r0, [pc, #1084]	; 3d0dc <__assert_fail@plt+0x2be6c>
   3cc9c:	bl	11168 <gettext@plt>
   3cca0:	mov	r1, r0
   3cca4:	ldr	r3, [fp, #4]
   3cca8:	ldr	r2, [r3]
   3ccac:	ldr	r3, [fp, #4]
   3ccb0:	add	r3, r3, #4
   3ccb4:	ldr	r3, [r3]
   3ccb8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3ccbc:	bl	1118c <fprintf@plt>
   3ccc0:	b	3d0b0 <__assert_fail@plt+0x2be40>
   3ccc4:	ldr	r0, [pc, #1044]	; 3d0e0 <__assert_fail@plt+0x2be70>
   3ccc8:	bl	11168 <gettext@plt>
   3cccc:	ldr	r3, [fp, #4]
   3ccd0:	ldr	r2, [r3]
   3ccd4:	ldr	r3, [fp, #4]
   3ccd8:	add	r3, r3, #4
   3ccdc:	ldr	r1, [r3]
   3cce0:	ldr	r3, [fp, #4]
   3cce4:	add	r3, r3, #8
   3cce8:	ldr	r3, [r3]
   3ccec:	str	r3, [sp]
   3ccf0:	mov	r3, r1
   3ccf4:	mov	r1, r0
   3ccf8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3ccfc:	bl	1118c <fprintf@plt>
   3cd00:	b	3d0b0 <__assert_fail@plt+0x2be40>
   3cd04:	ldr	r0, [pc, #984]	; 3d0e4 <__assert_fail@plt+0x2be74>
   3cd08:	bl	11168 <gettext@plt>
   3cd0c:	mov	ip, r0
   3cd10:	ldr	r3, [fp, #4]
   3cd14:	ldr	r1, [r3]
   3cd18:	ldr	r3, [fp, #4]
   3cd1c:	add	r3, r3, #4
   3cd20:	ldr	r0, [r3]
   3cd24:	ldr	r3, [fp, #4]
   3cd28:	add	r3, r3, #8
   3cd2c:	ldr	r3, [r3]
   3cd30:	ldr	r2, [fp, #4]
   3cd34:	add	r2, r2, #12
   3cd38:	ldr	r2, [r2]
   3cd3c:	str	r2, [sp, #4]
   3cd40:	str	r3, [sp]
   3cd44:	mov	r3, r0
   3cd48:	mov	r2, r1
   3cd4c:	mov	r1, ip
   3cd50:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3cd54:	bl	1118c <fprintf@plt>
   3cd58:	b	3d0b0 <__assert_fail@plt+0x2be40>
   3cd5c:	ldr	r0, [pc, #900]	; 3d0e8 <__assert_fail@plt+0x2be78>
   3cd60:	bl	11168 <gettext@plt>
   3cd64:	mov	lr, r0
   3cd68:	ldr	r3, [fp, #4]
   3cd6c:	ldr	r0, [r3]
   3cd70:	ldr	r3, [fp, #4]
   3cd74:	add	r3, r3, #4
   3cd78:	ldr	ip, [r3]
   3cd7c:	ldr	r3, [fp, #4]
   3cd80:	add	r3, r3, #8
   3cd84:	ldr	r3, [r3]
   3cd88:	ldr	r2, [fp, #4]
   3cd8c:	add	r2, r2, #12
   3cd90:	ldr	r2, [r2]
   3cd94:	ldr	r1, [fp, #4]
   3cd98:	add	r1, r1, #16
   3cd9c:	ldr	r1, [r1]
   3cda0:	str	r1, [sp, #8]
   3cda4:	str	r2, [sp, #4]
   3cda8:	str	r3, [sp]
   3cdac:	mov	r3, ip
   3cdb0:	mov	r2, r0
   3cdb4:	mov	r1, lr
   3cdb8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3cdbc:	bl	1118c <fprintf@plt>
   3cdc0:	b	3d0b0 <__assert_fail@plt+0x2be40>
   3cdc4:	ldr	r0, [pc, #800]	; 3d0ec <__assert_fail@plt+0x2be7c>
   3cdc8:	bl	11168 <gettext@plt>
   3cdcc:	mov	r4, r0
   3cdd0:	ldr	r3, [fp, #4]
   3cdd4:	ldr	ip, [r3]
   3cdd8:	ldr	r3, [fp, #4]
   3cddc:	add	r3, r3, #4
   3cde0:	ldr	lr, [r3]
   3cde4:	ldr	r3, [fp, #4]
   3cde8:	add	r3, r3, #8
   3cdec:	ldr	r3, [r3]
   3cdf0:	ldr	r2, [fp, #4]
   3cdf4:	add	r2, r2, #12
   3cdf8:	ldr	r2, [r2]
   3cdfc:	ldr	r1, [fp, #4]
   3ce00:	add	r1, r1, #16
   3ce04:	ldr	r1, [r1]
   3ce08:	ldr	r0, [fp, #4]
   3ce0c:	add	r0, r0, #20
   3ce10:	ldr	r0, [r0]
   3ce14:	str	r0, [sp, #12]
   3ce18:	str	r1, [sp, #8]
   3ce1c:	str	r2, [sp, #4]
   3ce20:	str	r3, [sp]
   3ce24:	mov	r3, lr
   3ce28:	mov	r2, ip
   3ce2c:	mov	r1, r4
   3ce30:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3ce34:	bl	1118c <fprintf@plt>
   3ce38:	b	3d0b0 <__assert_fail@plt+0x2be40>
   3ce3c:	ldr	r0, [pc, #684]	; 3d0f0 <__assert_fail@plt+0x2be80>
   3ce40:	bl	11168 <gettext@plt>
   3ce44:	mov	r5, r0
   3ce48:	ldr	r3, [fp, #4]
   3ce4c:	ldr	lr, [r3]
   3ce50:	ldr	r3, [fp, #4]
   3ce54:	add	r3, r3, #4
   3ce58:	ldr	r4, [r3]
   3ce5c:	ldr	r3, [fp, #4]
   3ce60:	add	r3, r3, #8
   3ce64:	ldr	r3, [r3]
   3ce68:	ldr	r2, [fp, #4]
   3ce6c:	add	r2, r2, #12
   3ce70:	ldr	r2, [r2]
   3ce74:	ldr	r1, [fp, #4]
   3ce78:	add	r1, r1, #16
   3ce7c:	ldr	r1, [r1]
   3ce80:	ldr	r0, [fp, #4]
   3ce84:	add	r0, r0, #20
   3ce88:	ldr	r0, [r0]
   3ce8c:	ldr	ip, [fp, #4]
   3ce90:	add	ip, ip, #24
   3ce94:	ldr	ip, [ip]
   3ce98:	str	ip, [sp, #16]
   3ce9c:	str	r0, [sp, #12]
   3cea0:	str	r1, [sp, #8]
   3cea4:	str	r2, [sp, #4]
   3cea8:	str	r3, [sp]
   3ceac:	mov	r3, r4
   3ceb0:	mov	r2, lr
   3ceb4:	mov	r1, r5
   3ceb8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3cebc:	bl	1118c <fprintf@plt>
   3cec0:	b	3d0b0 <__assert_fail@plt+0x2be40>
   3cec4:	ldr	r0, [pc, #552]	; 3d0f4 <__assert_fail@plt+0x2be84>
   3cec8:	bl	11168 <gettext@plt>
   3cecc:	mov	r6, r0
   3ced0:	ldr	r3, [fp, #4]
   3ced4:	ldr	r4, [r3]
   3ced8:	ldr	r3, [fp, #4]
   3cedc:	add	r3, r3, #4
   3cee0:	ldr	r5, [r3]
   3cee4:	ldr	r3, [fp, #4]
   3cee8:	add	r3, r3, #8
   3ceec:	ldr	r3, [r3]
   3cef0:	ldr	r2, [fp, #4]
   3cef4:	add	r2, r2, #12
   3cef8:	ldr	r2, [r2]
   3cefc:	ldr	r1, [fp, #4]
   3cf00:	add	r1, r1, #16
   3cf04:	ldr	r1, [r1]
   3cf08:	ldr	r0, [fp, #4]
   3cf0c:	add	r0, r0, #20
   3cf10:	ldr	r0, [r0]
   3cf14:	ldr	ip, [fp, #4]
   3cf18:	add	ip, ip, #24
   3cf1c:	ldr	ip, [ip]
   3cf20:	ldr	lr, [fp, #4]
   3cf24:	add	lr, lr, #28
   3cf28:	ldr	lr, [lr]
   3cf2c:	str	lr, [sp, #20]
   3cf30:	str	ip, [sp, #16]
   3cf34:	str	r0, [sp, #12]
   3cf38:	str	r1, [sp, #8]
   3cf3c:	str	r2, [sp, #4]
   3cf40:	str	r3, [sp]
   3cf44:	mov	r3, r5
   3cf48:	mov	r2, r4
   3cf4c:	mov	r1, r6
   3cf50:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3cf54:	bl	1118c <fprintf@plt>
   3cf58:	b	3d0b0 <__assert_fail@plt+0x2be40>
   3cf5c:	ldr	r0, [pc, #404]	; 3d0f8 <__assert_fail@plt+0x2be88>
   3cf60:	bl	11168 <gettext@plt>
   3cf64:	mov	r7, r0
   3cf68:	ldr	r3, [fp, #4]
   3cf6c:	ldr	r5, [r3]
   3cf70:	ldr	r3, [fp, #4]
   3cf74:	add	r3, r3, #4
   3cf78:	ldr	r6, [r3]
   3cf7c:	ldr	r3, [fp, #4]
   3cf80:	add	r3, r3, #8
   3cf84:	ldr	r3, [r3]
   3cf88:	ldr	r2, [fp, #4]
   3cf8c:	add	r2, r2, #12
   3cf90:	ldr	r2, [r2]
   3cf94:	ldr	r1, [fp, #4]
   3cf98:	add	r1, r1, #16
   3cf9c:	ldr	r1, [r1]
   3cfa0:	ldr	r0, [fp, #4]
   3cfa4:	add	r0, r0, #20
   3cfa8:	ldr	r0, [r0]
   3cfac:	ldr	ip, [fp, #4]
   3cfb0:	add	ip, ip, #24
   3cfb4:	ldr	ip, [ip]
   3cfb8:	ldr	lr, [fp, #4]
   3cfbc:	add	lr, lr, #28
   3cfc0:	ldr	lr, [lr]
   3cfc4:	ldr	r4, [fp, #4]
   3cfc8:	add	r4, r4, #32
   3cfcc:	ldr	r4, [r4]
   3cfd0:	str	r4, [sp, #24]
   3cfd4:	str	lr, [sp, #20]
   3cfd8:	str	ip, [sp, #16]
   3cfdc:	str	r0, [sp, #12]
   3cfe0:	str	r1, [sp, #8]
   3cfe4:	str	r2, [sp, #4]
   3cfe8:	str	r3, [sp]
   3cfec:	mov	r3, r6
   3cff0:	mov	r2, r5
   3cff4:	mov	r1, r7
   3cff8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3cffc:	bl	1118c <fprintf@plt>
   3d000:	b	3d0b0 <__assert_fail@plt+0x2be40>
   3d004:	ldr	r0, [pc, #240]	; 3d0fc <__assert_fail@plt+0x2be8c>
   3d008:	bl	11168 <gettext@plt>
   3d00c:	mov	r7, r0
   3d010:	ldr	r3, [fp, #4]
   3d014:	ldr	r5, [r3]
   3d018:	ldr	r3, [fp, #4]
   3d01c:	add	r3, r3, #4
   3d020:	ldr	r6, [r3]
   3d024:	ldr	r3, [fp, #4]
   3d028:	add	r3, r3, #8
   3d02c:	ldr	r3, [r3]
   3d030:	ldr	r2, [fp, #4]
   3d034:	add	r2, r2, #12
   3d038:	ldr	r2, [r2]
   3d03c:	ldr	r1, [fp, #4]
   3d040:	add	r1, r1, #16
   3d044:	ldr	r1, [r1]
   3d048:	ldr	r0, [fp, #4]
   3d04c:	add	r0, r0, #20
   3d050:	ldr	r0, [r0]
   3d054:	ldr	ip, [fp, #4]
   3d058:	add	ip, ip, #24
   3d05c:	ldr	ip, [ip]
   3d060:	ldr	lr, [fp, #4]
   3d064:	add	lr, lr, #28
   3d068:	ldr	lr, [lr]
   3d06c:	ldr	r4, [fp, #4]
   3d070:	add	r4, r4, #32
   3d074:	ldr	r4, [r4]
   3d078:	str	r4, [sp, #24]
   3d07c:	str	lr, [sp, #20]
   3d080:	str	ip, [sp, #16]
   3d084:	str	r0, [sp, #12]
   3d088:	str	r1, [sp, #8]
   3d08c:	str	r2, [sp, #4]
   3d090:	str	r3, [sp]
   3d094:	mov	r3, r6
   3d098:	mov	r2, r5
   3d09c:	mov	r1, r7
   3d0a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3d0a4:	bl	1118c <fprintf@plt>
   3d0a8:	b	3d0b0 <__assert_fail@plt+0x2be40>
   3d0ac:	nop			; (mov r0, r0)
   3d0b0:	nop			; (mov r0, r0)
   3d0b4:	sub	sp, fp, #20
   3d0b8:	pop	{r4, r5, r6, r7, fp, pc}
   3d0bc:	andeq	r1, r4, r8, ror r3
   3d0c0:	andeq	r1, r4, r4, lsl #7
   3d0c4:	andeq	r1, r4, ip, lsl #7
   3d0c8:	andeq	r0, r0, r6, ror #15
   3d0cc:	muleq	r4, ip, r6
   3d0d0:	muleq	r4, r0, r3
   3d0d4:	andeq	r1, r4, ip, lsr r4
   3d0d8:	andeq	r1, r4, r0, ror #8
   3d0dc:	andeq	r1, r4, r0, ror r4
   3d0e0:	andeq	r1, r4, r8, lsl #9
   3d0e4:	andeq	r1, r4, r4, lsr #9
   3d0e8:	andeq	r1, r4, r4, asr #9
   3d0ec:	andeq	r1, r4, r8, ror #9
   3d0f0:	andeq	r1, r4, r0, lsl r5
   3d0f4:	andeq	r1, r4, ip, lsr r5
   3d0f8:	andeq	r1, r4, ip, ror #10
   3d0fc:	andeq	r1, r4, r0, lsr #11
   3d100:	push	{fp, lr}
   3d104:	add	fp, sp, #4
   3d108:	sub	sp, sp, #32
   3d10c:	str	r0, [fp, #-16]
   3d110:	str	r1, [fp, #-20]	; 0xffffffec
   3d114:	str	r2, [fp, #-24]	; 0xffffffe8
   3d118:	str	r3, [fp, #-28]	; 0xffffffe4
   3d11c:	mov	r3, #0
   3d120:	str	r3, [fp, #-8]
   3d124:	b	3d134 <__assert_fail@plt+0x2bec4>
   3d128:	ldr	r3, [fp, #-8]
   3d12c:	add	r3, r3, #1
   3d130:	str	r3, [fp, #-8]
   3d134:	ldr	r3, [fp, #-8]
   3d138:	lsl	r3, r3, #2
   3d13c:	ldr	r2, [fp, #4]
   3d140:	add	r3, r2, r3
   3d144:	ldr	r3, [r3]
   3d148:	cmp	r3, #0
   3d14c:	bne	3d128 <__assert_fail@plt+0x2beb8>
   3d150:	ldr	r3, [fp, #-8]
   3d154:	str	r3, [sp, #4]
   3d158:	ldr	r3, [fp, #4]
   3d15c:	str	r3, [sp]
   3d160:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3d164:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3d168:	ldr	r1, [fp, #-20]	; 0xffffffec
   3d16c:	ldr	r0, [fp, #-16]
   3d170:	bl	3cb90 <__assert_fail@plt+0x2b920>
   3d174:	nop			; (mov r0, r0)
   3d178:	sub	sp, fp, #4
   3d17c:	pop	{fp, pc}
   3d180:	push	{fp, lr}
   3d184:	add	fp, sp, #4
   3d188:	sub	sp, sp, #72	; 0x48
   3d18c:	str	r0, [fp, #-56]	; 0xffffffc8
   3d190:	str	r1, [fp, #-60]	; 0xffffffc4
   3d194:	str	r2, [fp, #-64]	; 0xffffffc0
   3d198:	str	r3, [fp, #-68]	; 0xffffffbc
   3d19c:	mov	r3, #0
   3d1a0:	str	r3, [fp, #-8]
   3d1a4:	b	3d1b4 <__assert_fail@plt+0x2bf44>
   3d1a8:	ldr	r3, [fp, #-8]
   3d1ac:	add	r3, r3, #1
   3d1b0:	str	r3, [fp, #-8]
   3d1b4:	ldr	r3, [fp, #-8]
   3d1b8:	cmp	r3, #9
   3d1bc:	bhi	3d200 <__assert_fail@plt+0x2bf90>
   3d1c0:	ldr	r3, [fp, #4]
   3d1c4:	add	r2, r3, #4
   3d1c8:	str	r2, [fp, #4]
   3d1cc:	ldr	r2, [r3]
   3d1d0:	ldr	r3, [fp, #-8]
   3d1d4:	lsl	r3, r3, #2
   3d1d8:	sub	r1, fp, #4
   3d1dc:	add	r3, r1, r3
   3d1e0:	str	r2, [r3, #-44]	; 0xffffffd4
   3d1e4:	ldr	r3, [fp, #-8]
   3d1e8:	lsl	r3, r3, #2
   3d1ec:	sub	r2, fp, #4
   3d1f0:	add	r3, r2, r3
   3d1f4:	ldr	r3, [r3, #-44]	; 0xffffffd4
   3d1f8:	cmp	r3, #0
   3d1fc:	bne	3d1a8 <__assert_fail@plt+0x2bf38>
   3d200:	ldr	r3, [fp, #-8]
   3d204:	str	r3, [sp, #4]
   3d208:	sub	r3, fp, #48	; 0x30
   3d20c:	str	r3, [sp]
   3d210:	ldr	r3, [fp, #-68]	; 0xffffffbc
   3d214:	ldr	r2, [fp, #-64]	; 0xffffffc0
   3d218:	ldr	r1, [fp, #-60]	; 0xffffffc4
   3d21c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   3d220:	bl	3cb90 <__assert_fail@plt+0x2b920>
   3d224:	nop			; (mov r0, r0)
   3d228:	sub	sp, fp, #4
   3d22c:	pop	{fp, pc}
   3d230:	push	{r3}		; (str r3, [sp, #-4]!)
   3d234:	push	{fp, lr}
   3d238:	add	fp, sp, #4
   3d23c:	sub	sp, sp, #36	; 0x24
   3d240:	str	r0, [fp, #-20]	; 0xffffffec
   3d244:	str	r1, [fp, #-24]	; 0xffffffe8
   3d248:	str	r2, [fp, #-28]	; 0xffffffe4
   3d24c:	add	r3, fp, #8
   3d250:	str	r3, [fp, #-12]
   3d254:	ldr	r3, [fp, #-12]
   3d258:	str	r3, [sp]
   3d25c:	ldr	r3, [fp, #4]
   3d260:	ldr	r2, [fp, #-28]	; 0xffffffe4
   3d264:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3d268:	ldr	r0, [fp, #-20]	; 0xffffffec
   3d26c:	bl	3d180 <__assert_fail@plt+0x2bf10>
   3d270:	nop			; (mov r0, r0)
   3d274:	sub	sp, fp, #4
   3d278:	pop	{fp, lr}
   3d27c:	add	sp, sp, #4
   3d280:	bx	lr
   3d284:	push	{fp, lr}
   3d288:	add	fp, sp, #4
   3d28c:	ldr	r3, [pc, #96]	; 3d2f4 <__assert_fail@plt+0x2c084>
   3d290:	ldr	r3, [r3]
   3d294:	mov	r1, r3
   3d298:	mov	r0, #10
   3d29c:	bl	11060 <fputc_unlocked@plt>
   3d2a0:	ldr	r0, [pc, #80]	; 3d2f8 <__assert_fail@plt+0x2c088>
   3d2a4:	bl	11168 <gettext@plt>
   3d2a8:	mov	r3, r0
   3d2ac:	ldr	r1, [pc, #72]	; 3d2fc <__assert_fail@plt+0x2c08c>
   3d2b0:	mov	r0, r3
   3d2b4:	bl	10fb8 <printf@plt>
   3d2b8:	ldr	r0, [pc, #64]	; 3d300 <__assert_fail@plt+0x2c090>
   3d2bc:	bl	11168 <gettext@plt>
   3d2c0:	mov	r3, r0
   3d2c4:	ldr	r2, [pc, #56]	; 3d304 <__assert_fail@plt+0x2c094>
   3d2c8:	ldr	r1, [pc, #56]	; 3d308 <__assert_fail@plt+0x2c098>
   3d2cc:	mov	r0, r3
   3d2d0:	bl	10fb8 <printf@plt>
   3d2d4:	ldr	r0, [pc, #48]	; 3d30c <__assert_fail@plt+0x2c09c>
   3d2d8:	bl	11168 <gettext@plt>
   3d2dc:	mov	r3, r0
   3d2e0:	ldr	r1, [pc, #40]	; 3d310 <__assert_fail@plt+0x2c0a0>
   3d2e4:	mov	r0, r3
   3d2e8:	bl	10fb8 <printf@plt>
   3d2ec:	nop			; (mov r0, r0)
   3d2f0:	pop	{fp, pc}
   3d2f4:	andeq	r2, r5, ip, lsl #3
   3d2f8:	ldrdeq	r1, [r4], -ip
   3d2fc:	strdeq	r1, [r4], -r0
   3d300:	andeq	r1, r4, r8, lsl #12
   3d304:	andeq	r1, r4, ip, lsl r6
   3d308:	andeq	r1, r4, r4, asr #12
   3d30c:	andeq	r1, r4, r4, asr r6
   3d310:	andeq	r1, r4, ip, ror r6
   3d314:	push	{fp, lr}
   3d318:	add	fp, sp, #4
   3d31c:	sub	sp, sp, #16
   3d320:	str	r0, [fp, #-8]
   3d324:	str	r1, [fp, #-12]
   3d328:	str	r2, [fp, #-16]
   3d32c:	ldr	r2, [fp, #-16]
   3d330:	ldr	r1, [fp, #-12]
   3d334:	ldr	r0, [fp, #-8]
   3d338:	bl	3d4a4 <__assert_fail@plt+0x2c234>
   3d33c:	mov	r3, r0
   3d340:	mov	r0, r3
   3d344:	sub	sp, fp, #4
   3d348:	pop	{fp, pc}
   3d34c:	push	{fp, lr}
   3d350:	add	fp, sp, #4
   3d354:	sub	sp, sp, #8
   3d358:	str	r0, [fp, #-8]
   3d35c:	ldr	r3, [fp, #-8]
   3d360:	cmp	r3, #0
   3d364:	bne	3d36c <__assert_fail@plt+0x2c0fc>
   3d368:	bl	3de98 <__assert_fail@plt+0x2cc28>
   3d36c:	ldr	r3, [fp, #-8]
   3d370:	mov	r0, r3
   3d374:	sub	sp, fp, #4
   3d378:	pop	{fp, pc}
   3d37c:	push	{fp, lr}
   3d380:	add	fp, sp, #4
   3d384:	sub	sp, sp, #8
   3d388:	str	r0, [fp, #-8]
   3d38c:	ldr	r0, [fp, #-8]
   3d390:	bl	3df98 <__assert_fail@plt+0x2cd28>
   3d394:	mov	r3, r0
   3d398:	mov	r0, r3
   3d39c:	bl	3d34c <__assert_fail@plt+0x2c0dc>
   3d3a0:	mov	r3, r0
   3d3a4:	mov	r0, r3
   3d3a8:	sub	sp, fp, #4
   3d3ac:	pop	{fp, pc}
   3d3b0:	push	{fp, lr}
   3d3b4:	add	fp, sp, #4
   3d3b8:	sub	sp, sp, #8
   3d3bc:	str	r0, [fp, #-8]
   3d3c0:	ldr	r0, [fp, #-8]
   3d3c4:	bl	3ea24 <__assert_fail@plt+0x2d7b4>
   3d3c8:	mov	r3, r0
   3d3cc:	mov	r0, r3
   3d3d0:	bl	3d34c <__assert_fail@plt+0x2c0dc>
   3d3d4:	mov	r3, r0
   3d3d8:	mov	r0, r3
   3d3dc:	sub	sp, fp, #4
   3d3e0:	pop	{fp, pc}
   3d3e4:	push	{fp, lr}
   3d3e8:	add	fp, sp, #4
   3d3ec:	sub	sp, sp, #8
   3d3f0:	str	r0, [fp, #-8]
   3d3f4:	ldr	r0, [fp, #-8]
   3d3f8:	bl	3d37c <__assert_fail@plt+0x2c10c>
   3d3fc:	mov	r3, r0
   3d400:	mov	r0, r3
   3d404:	sub	sp, fp, #4
   3d408:	pop	{fp, pc}
   3d40c:	push	{fp, lr}
   3d410:	add	fp, sp, #4
   3d414:	sub	sp, sp, #16
   3d418:	str	r0, [fp, #-16]
   3d41c:	str	r1, [fp, #-20]	; 0xffffffec
   3d420:	ldr	r1, [fp, #-20]	; 0xffffffec
   3d424:	ldr	r0, [fp, #-16]
   3d428:	bl	3e040 <__assert_fail@plt+0x2cdd0>
   3d42c:	str	r0, [fp, #-8]
   3d430:	ldr	r3, [fp, #-8]
   3d434:	cmp	r3, #0
   3d438:	bne	3d458 <__assert_fail@plt+0x2c1e8>
   3d43c:	ldr	r3, [fp, #-16]
   3d440:	cmp	r3, #0
   3d444:	beq	3d454 <__assert_fail@plt+0x2c1e4>
   3d448:	ldr	r3, [fp, #-20]	; 0xffffffec
   3d44c:	cmp	r3, #0
   3d450:	beq	3d458 <__assert_fail@plt+0x2c1e8>
   3d454:	bl	3de98 <__assert_fail@plt+0x2cc28>
   3d458:	ldr	r3, [fp, #-8]
   3d45c:	mov	r0, r3
   3d460:	sub	sp, fp, #4
   3d464:	pop	{fp, pc}
   3d468:	push	{fp, lr}
   3d46c:	add	fp, sp, #4
   3d470:	sub	sp, sp, #8
   3d474:	str	r0, [fp, #-8]
   3d478:	str	r1, [fp, #-12]
   3d47c:	ldr	r1, [fp, #-12]
   3d480:	ldr	r0, [fp, #-8]
   3d484:	bl	3ea50 <__assert_fail@plt+0x2d7e0>
   3d488:	mov	r3, r0
   3d48c:	mov	r0, r3
   3d490:	bl	3d34c <__assert_fail@plt+0x2c0dc>
   3d494:	mov	r3, r0
   3d498:	mov	r0, r3
   3d49c:	sub	sp, fp, #4
   3d4a0:	pop	{fp, pc}
   3d4a4:	push	{fp, lr}
   3d4a8:	add	fp, sp, #4
   3d4ac:	sub	sp, sp, #24
   3d4b0:	str	r0, [fp, #-16]
   3d4b4:	str	r1, [fp, #-20]	; 0xffffffec
   3d4b8:	str	r2, [fp, #-24]	; 0xffffffe8
   3d4bc:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3d4c0:	ldr	r1, [fp, #-20]	; 0xffffffec
   3d4c4:	ldr	r0, [fp, #-16]
   3d4c8:	bl	3edb8 <__assert_fail@plt+0x2db48>
   3d4cc:	str	r0, [fp, #-8]
   3d4d0:	ldr	r3, [fp, #-8]
   3d4d4:	cmp	r3, #0
   3d4d8:	bne	3d504 <__assert_fail@plt+0x2c294>
   3d4dc:	ldr	r3, [fp, #-16]
   3d4e0:	cmp	r3, #0
   3d4e4:	beq	3d500 <__assert_fail@plt+0x2c290>
   3d4e8:	ldr	r3, [fp, #-20]	; 0xffffffec
   3d4ec:	cmp	r3, #0
   3d4f0:	beq	3d504 <__assert_fail@plt+0x2c294>
   3d4f4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3d4f8:	cmp	r3, #0
   3d4fc:	beq	3d504 <__assert_fail@plt+0x2c294>
   3d500:	bl	3de98 <__assert_fail@plt+0x2cc28>
   3d504:	ldr	r3, [fp, #-8]
   3d508:	mov	r0, r3
   3d50c:	sub	sp, fp, #4
   3d510:	pop	{fp, pc}
   3d514:	push	{fp, lr}
   3d518:	add	fp, sp, #4
   3d51c:	sub	sp, sp, #16
   3d520:	str	r0, [fp, #-8]
   3d524:	str	r1, [fp, #-12]
   3d528:	str	r2, [fp, #-16]
   3d52c:	ldr	r2, [fp, #-16]
   3d530:	ldr	r1, [fp, #-12]
   3d534:	ldr	r0, [fp, #-8]
   3d538:	bl	3ead8 <__assert_fail@plt+0x2d868>
   3d53c:	mov	r3, r0
   3d540:	mov	r0, r3
   3d544:	bl	3d34c <__assert_fail@plt+0x2c0dc>
   3d548:	mov	r3, r0
   3d54c:	mov	r0, r3
   3d550:	sub	sp, fp, #4
   3d554:	pop	{fp, pc}
   3d558:	push	{fp, lr}
   3d55c:	add	fp, sp, #4
   3d560:	sub	sp, sp, #8
   3d564:	str	r0, [fp, #-8]
   3d568:	str	r1, [fp, #-12]
   3d56c:	ldr	r2, [fp, #-12]
   3d570:	ldr	r1, [fp, #-8]
   3d574:	mov	r0, #0
   3d578:	bl	3d4a4 <__assert_fail@plt+0x2c234>
   3d57c:	mov	r3, r0
   3d580:	mov	r0, r3
   3d584:	sub	sp, fp, #4
   3d588:	pop	{fp, pc}
   3d58c:	push	{fp, lr}
   3d590:	add	fp, sp, #4
   3d594:	sub	sp, sp, #8
   3d598:	str	r0, [fp, #-8]
   3d59c:	str	r1, [fp, #-12]
   3d5a0:	ldr	r2, [fp, #-12]
   3d5a4:	ldr	r1, [fp, #-8]
   3d5a8:	mov	r0, #0
   3d5ac:	bl	3d514 <__assert_fail@plt+0x2c2a4>
   3d5b0:	mov	r3, r0
   3d5b4:	mov	r0, r3
   3d5b8:	sub	sp, fp, #4
   3d5bc:	pop	{fp, pc}
   3d5c0:	push	{fp, lr}
   3d5c4:	add	fp, sp, #4
   3d5c8:	sub	sp, sp, #8
   3d5cc:	str	r0, [fp, #-8]
   3d5d0:	str	r1, [fp, #-12]
   3d5d4:	mov	r2, #1
   3d5d8:	ldr	r1, [fp, #-12]
   3d5dc:	ldr	r0, [fp, #-8]
   3d5e0:	bl	3d5f4 <__assert_fail@plt+0x2c384>
   3d5e4:	mov	r3, r0
   3d5e8:	mov	r0, r3
   3d5ec:	sub	sp, fp, #4
   3d5f0:	pop	{fp, pc}
   3d5f4:	push	{fp, lr}
   3d5f8:	add	fp, sp, #4
   3d5fc:	sub	sp, sp, #24
   3d600:	str	r0, [fp, #-16]
   3d604:	str	r1, [fp, #-20]	; 0xffffffec
   3d608:	str	r2, [fp, #-24]	; 0xffffffe8
   3d60c:	ldr	r3, [fp, #-20]	; 0xffffffec
   3d610:	ldr	r3, [r3]
   3d614:	str	r3, [fp, #-8]
   3d618:	ldr	r3, [fp, #-16]
   3d61c:	cmp	r3, #0
   3d620:	bne	3d66c <__assert_fail@plt+0x2c3fc>
   3d624:	ldr	r3, [fp, #-8]
   3d628:	cmp	r3, #0
   3d62c:	bne	3d6d0 <__assert_fail@plt+0x2c460>
   3d630:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3d634:	mov	r0, #64	; 0x40
   3d638:	bl	3f560 <__assert_fail@plt+0x2e2f0>
   3d63c:	mov	r3, r0
   3d640:	str	r3, [fp, #-8]
   3d644:	ldr	r3, [fp, #-8]
   3d648:	cmp	r3, #0
   3d64c:	moveq	r3, #1
   3d650:	movne	r3, #0
   3d654:	uxtb	r3, r3
   3d658:	mov	r2, r3
   3d65c:	ldr	r3, [fp, #-8]
   3d660:	add	r3, r2, r3
   3d664:	str	r3, [fp, #-8]
   3d668:	b	3d6d0 <__assert_fail@plt+0x2c460>
   3d66c:	ldr	r3, [fp, #-8]
   3d670:	lsr	r3, r3, #1
   3d674:	add	r3, r3, #1
   3d678:	mvn	r2, r3
   3d67c:	ldr	r3, [fp, #-8]
   3d680:	cmp	r2, r3
   3d684:	bcs	3d6a8 <__assert_fail@plt+0x2c438>
   3d688:	ldr	r3, [fp, #-8]
   3d68c:	lsr	r2, r3, #1
   3d690:	ldr	r3, [fp, #-8]
   3d694:	add	r3, r2, r3
   3d698:	add	r3, r3, #1
   3d69c:	str	r3, [fp, #-8]
   3d6a0:	mov	r3, #1
   3d6a4:	b	3d6c4 <__assert_fail@plt+0x2c454>
   3d6a8:	ldr	r3, [fp, #-8]
   3d6ac:	lsr	r2, r3, #1
   3d6b0:	ldr	r3, [fp, #-8]
   3d6b4:	add	r3, r2, r3
   3d6b8:	add	r3, r3, #1
   3d6bc:	str	r3, [fp, #-8]
   3d6c0:	mov	r3, #0
   3d6c4:	cmp	r3, #0
   3d6c8:	beq	3d6d0 <__assert_fail@plt+0x2c460>
   3d6cc:	bl	3de98 <__assert_fail@plt+0x2cc28>
   3d6d0:	ldr	r3, [fp, #-8]
   3d6d4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3d6d8:	mov	r1, r3
   3d6dc:	ldr	r0, [fp, #-16]
   3d6e0:	bl	3d4a4 <__assert_fail@plt+0x2c234>
   3d6e4:	str	r0, [fp, #-16]
   3d6e8:	ldr	r2, [fp, #-8]
   3d6ec:	ldr	r3, [fp, #-20]	; 0xffffffec
   3d6f0:	str	r2, [r3]
   3d6f4:	ldr	r3, [fp, #-16]
   3d6f8:	mov	r0, r3
   3d6fc:	sub	sp, fp, #4
   3d700:	pop	{fp, pc}
   3d704:	push	{fp, lr}
   3d708:	add	fp, sp, #4
   3d70c:	sub	sp, sp, #32
   3d710:	str	r0, [fp, #-24]	; 0xffffffe8
   3d714:	str	r1, [fp, #-28]	; 0xffffffe4
   3d718:	str	r2, [fp, #-32]	; 0xffffffe0
   3d71c:	str	r3, [fp, #-36]	; 0xffffffdc
   3d720:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3d724:	ldr	r3, [r3]
   3d728:	str	r3, [fp, #-8]
   3d72c:	ldr	r3, [fp, #-8]
   3d730:	asr	r3, r3, #1
   3d734:	cmp	r3, #0
   3d738:	bge	3d760 <__assert_fail@plt+0x2c4f0>
   3d73c:	ldr	r3, [fp, #-8]
   3d740:	asr	r3, r3, #1
   3d744:	rsb	r2, r3, #-2147483648	; 0x80000000
   3d748:	ldr	r3, [fp, #-8]
   3d74c:	cmp	r2, r3
   3d750:	movgt	r3, #1
   3d754:	movle	r3, #0
   3d758:	uxtb	r3, r3
   3d75c:	b	3d7b4 <__assert_fail@plt+0x2c544>
   3d760:	ldr	r3, [fp, #-8]
   3d764:	cmp	r3, #0
   3d768:	bge	3d790 <__assert_fail@plt+0x2c520>
   3d76c:	ldr	r3, [fp, #-8]
   3d770:	asr	r2, r3, #1
   3d774:	ldr	r3, [fp, #-8]
   3d778:	rsb	r3, r3, #-2147483648	; 0x80000000
   3d77c:	cmp	r2, r3
   3d780:	movlt	r3, #1
   3d784:	movge	r3, #0
   3d788:	uxtb	r3, r3
   3d78c:	b	3d7b4 <__assert_fail@plt+0x2c544>
   3d790:	ldr	r3, [fp, #-8]
   3d794:	asr	r2, r3, #1
   3d798:	mvn	r3, #-2147483648	; 0x80000000
   3d79c:	sub	r3, r3, r2
   3d7a0:	ldr	r2, [fp, #-8]
   3d7a4:	cmp	r3, r2
   3d7a8:	movlt	r3, #1
   3d7ac:	movge	r3, #0
   3d7b0:	uxtb	r3, r3
   3d7b4:	cmp	r3, #0
   3d7b8:	beq	3d7dc <__assert_fail@plt+0x2c56c>
   3d7bc:	ldr	r3, [fp, #-8]
   3d7c0:	asr	r3, r3, #1
   3d7c4:	mov	r2, r3
   3d7c8:	ldr	r3, [fp, #-8]
   3d7cc:	add	r3, r2, r3
   3d7d0:	str	r3, [fp, #-16]
   3d7d4:	mov	r3, #1
   3d7d8:	b	3d7f8 <__assert_fail@plt+0x2c588>
   3d7dc:	ldr	r3, [fp, #-8]
   3d7e0:	asr	r3, r3, #1
   3d7e4:	mov	r2, r3
   3d7e8:	ldr	r3, [fp, #-8]
   3d7ec:	add	r3, r2, r3
   3d7f0:	str	r3, [fp, #-16]
   3d7f4:	mov	r3, #0
   3d7f8:	cmp	r3, #0
   3d7fc:	beq	3d808 <__assert_fail@plt+0x2c598>
   3d800:	mvn	r3, #-2147483648	; 0x80000000
   3d804:	str	r3, [fp, #-16]
   3d808:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3d80c:	cmp	r3, #0
   3d810:	blt	3d82c <__assert_fail@plt+0x2c5bc>
   3d814:	ldr	r3, [fp, #-16]
   3d818:	ldr	r2, [fp, #-36]	; 0xffffffdc
   3d81c:	cmp	r2, r3
   3d820:	bge	3d82c <__assert_fail@plt+0x2c5bc>
   3d824:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3d828:	str	r3, [fp, #-16]
   3d82c:	ldr	r3, [fp, #4]
   3d830:	cmp	r3, #0
   3d834:	bge	3d8c4 <__assert_fail@plt+0x2c654>
   3d838:	ldr	r3, [fp, #-16]
   3d83c:	cmp	r3, #0
   3d840:	bge	3d870 <__assert_fail@plt+0x2c600>
   3d844:	ldr	r1, [fp, #4]
   3d848:	mvn	r0, #-2147483648	; 0x80000000
   3d84c:	bl	3f76c <__assert_fail@plt+0x2e4fc>
   3d850:	mov	r3, r0
   3d854:	mov	r2, r3
   3d858:	ldr	r3, [fp, #-16]
   3d85c:	cmp	r2, r3
   3d860:	movgt	r3, #1
   3d864:	movle	r3, #0
   3d868:	uxtb	r3, r3
   3d86c:	b	3d964 <__assert_fail@plt+0x2c6f4>
   3d870:	ldr	r3, [fp, #4]
   3d874:	cmn	r3, #1
   3d878:	bne	3d898 <__assert_fail@plt+0x2c628>
   3d87c:	ldr	r3, [fp, #-16]
   3d880:	add	r3, r3, #-2147483648	; 0x80000000
   3d884:	cmp	r3, #0
   3d888:	movgt	r3, #1
   3d88c:	movle	r3, #0
   3d890:	uxtb	r3, r3
   3d894:	b	3d964 <__assert_fail@plt+0x2c6f4>
   3d898:	ldr	r1, [fp, #4]
   3d89c:	mov	r0, #-2147483648	; 0x80000000
   3d8a0:	bl	3f76c <__assert_fail@plt+0x2e4fc>
   3d8a4:	mov	r3, r0
   3d8a8:	mov	r2, r3
   3d8ac:	ldr	r3, [fp, #-16]
   3d8b0:	cmp	r2, r3
   3d8b4:	movlt	r3, #1
   3d8b8:	movge	r3, #0
   3d8bc:	uxtb	r3, r3
   3d8c0:	b	3d964 <__assert_fail@plt+0x2c6f4>
   3d8c4:	ldr	r3, [fp, #4]
   3d8c8:	cmp	r3, #0
   3d8cc:	beq	3d960 <__assert_fail@plt+0x2c6f0>
   3d8d0:	ldr	r3, [fp, #-16]
   3d8d4:	cmp	r3, #0
   3d8d8:	bge	3d934 <__assert_fail@plt+0x2c6c4>
   3d8dc:	ldr	r3, [fp, #-16]
   3d8e0:	cmn	r3, #1
   3d8e4:	bne	3d904 <__assert_fail@plt+0x2c694>
   3d8e8:	ldr	r3, [fp, #4]
   3d8ec:	add	r3, r3, #-2147483648	; 0x80000000
   3d8f0:	cmp	r3, #0
   3d8f4:	movgt	r3, #1
   3d8f8:	movle	r3, #0
   3d8fc:	uxtb	r3, r3
   3d900:	b	3d964 <__assert_fail@plt+0x2c6f4>
   3d904:	ldr	r3, [fp, #-16]
   3d908:	mov	r1, r3
   3d90c:	mov	r0, #-2147483648	; 0x80000000
   3d910:	bl	3f76c <__assert_fail@plt+0x2e4fc>
   3d914:	mov	r3, r0
   3d918:	mov	r2, r3
   3d91c:	ldr	r3, [fp, #4]
   3d920:	cmp	r2, r3
   3d924:	movlt	r3, #1
   3d928:	movge	r3, #0
   3d92c:	uxtb	r3, r3
   3d930:	b	3d964 <__assert_fail@plt+0x2c6f4>
   3d934:	ldr	r1, [fp, #4]
   3d938:	mvn	r0, #-2147483648	; 0x80000000
   3d93c:	bl	3f76c <__assert_fail@plt+0x2e4fc>
   3d940:	mov	r3, r0
   3d944:	mov	r2, r3
   3d948:	ldr	r3, [fp, #-16]
   3d94c:	cmp	r2, r3
   3d950:	movlt	r3, #1
   3d954:	movge	r3, #0
   3d958:	uxtb	r3, r3
   3d95c:	b	3d964 <__assert_fail@plt+0x2c6f4>
   3d960:	mov	r3, #0
   3d964:	cmp	r3, #0
   3d968:	beq	3d988 <__assert_fail@plt+0x2c718>
   3d96c:	ldr	r3, [fp, #-16]
   3d970:	mov	r2, r3
   3d974:	ldr	r3, [fp, #4]
   3d978:	mul	r3, r3, r2
   3d97c:	str	r3, [fp, #-20]	; 0xffffffec
   3d980:	mov	r3, #1
   3d984:	b	3d9a0 <__assert_fail@plt+0x2c730>
   3d988:	ldr	r3, [fp, #-16]
   3d98c:	mov	r2, r3
   3d990:	ldr	r3, [fp, #4]
   3d994:	mul	r3, r3, r2
   3d998:	str	r3, [fp, #-20]	; 0xffffffec
   3d99c:	mov	r3, #0
   3d9a0:	cmp	r3, #0
   3d9a4:	beq	3d9b0 <__assert_fail@plt+0x2c740>
   3d9a8:	mvn	r3, #-2147483648	; 0x80000000
   3d9ac:	b	3d9c8 <__assert_fail@plt+0x2c758>
   3d9b0:	ldr	r3, [fp, #-20]	; 0xffffffec
   3d9b4:	cmp	r3, #63	; 0x3f
   3d9b8:	bgt	3d9c4 <__assert_fail@plt+0x2c754>
   3d9bc:	mov	r3, #64	; 0x40
   3d9c0:	b	3d9c8 <__assert_fail@plt+0x2c758>
   3d9c4:	mov	r3, #0
   3d9c8:	str	r3, [fp, #-12]
   3d9cc:	ldr	r3, [fp, #-12]
   3d9d0:	cmp	r3, #0
   3d9d4:	beq	3da10 <__assert_fail@plt+0x2c7a0>
   3d9d8:	ldr	r1, [fp, #4]
   3d9dc:	ldr	r0, [fp, #-12]
   3d9e0:	bl	3f76c <__assert_fail@plt+0x2e4fc>
   3d9e4:	mov	r3, r0
   3d9e8:	str	r3, [fp, #-16]
   3d9ec:	ldr	r3, [fp, #-12]
   3d9f0:	ldr	r1, [fp, #4]
   3d9f4:	mov	r0, r3
   3d9f8:	bl	3f98c <__assert_fail@plt+0x2e71c>
   3d9fc:	mov	r3, r1
   3da00:	mov	r2, r3
   3da04:	ldr	r3, [fp, #-12]
   3da08:	sub	r3, r3, r2
   3da0c:	str	r3, [fp, #-20]	; 0xffffffec
   3da10:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3da14:	cmp	r3, #0
   3da18:	bne	3da28 <__assert_fail@plt+0x2c7b8>
   3da1c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3da20:	mov	r2, #0
   3da24:	str	r2, [r3]
   3da28:	ldr	r2, [fp, #-16]
   3da2c:	ldr	r3, [fp, #-8]
   3da30:	sub	r2, r2, r3
   3da34:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3da38:	cmp	r2, r3
   3da3c:	bge	3dc74 <__assert_fail@plt+0x2ca04>
   3da40:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3da44:	cmp	r3, #0
   3da48:	bge	3da6c <__assert_fail@plt+0x2c7fc>
   3da4c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3da50:	rsb	r2, r3, #-2147483648	; 0x80000000
   3da54:	ldr	r3, [fp, #-8]
   3da58:	cmp	r2, r3
   3da5c:	movgt	r3, #1
   3da60:	movle	r3, #0
   3da64:	uxtb	r3, r3
   3da68:	b	3dab8 <__assert_fail@plt+0x2c848>
   3da6c:	ldr	r3, [fp, #-8]
   3da70:	cmp	r3, #0
   3da74:	bge	3da98 <__assert_fail@plt+0x2c828>
   3da78:	ldr	r3, [fp, #-8]
   3da7c:	rsb	r2, r3, #-2147483648	; 0x80000000
   3da80:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3da84:	cmp	r2, r3
   3da88:	movgt	r3, #1
   3da8c:	movle	r3, #0
   3da90:	uxtb	r3, r3
   3da94:	b	3dab8 <__assert_fail@plt+0x2c848>
   3da98:	ldr	r2, [fp, #-32]	; 0xffffffe0
   3da9c:	mvn	r3, #-2147483648	; 0x80000000
   3daa0:	sub	r3, r3, r2
   3daa4:	ldr	r2, [fp, #-8]
   3daa8:	cmp	r3, r2
   3daac:	movlt	r3, #1
   3dab0:	movge	r3, #0
   3dab4:	uxtb	r3, r3
   3dab8:	cmp	r3, #0
   3dabc:	beq	3dad4 <__assert_fail@plt+0x2c864>
   3dac0:	ldr	r2, [fp, #-8]
   3dac4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3dac8:	add	r3, r2, r3
   3dacc:	str	r3, [fp, #-16]
   3dad0:	b	3dc70 <__assert_fail@plt+0x2ca00>
   3dad4:	ldr	r2, [fp, #-8]
   3dad8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3dadc:	add	r3, r2, r3
   3dae0:	str	r3, [fp, #-16]
   3dae4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3dae8:	cmp	r3, #0
   3daec:	blt	3db00 <__assert_fail@plt+0x2c890>
   3daf0:	ldr	r3, [fp, #-16]
   3daf4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   3daf8:	cmp	r2, r3
   3dafc:	blt	3dc70 <__assert_fail@plt+0x2ca00>
   3db00:	ldr	r3, [fp, #4]
   3db04:	cmp	r3, #0
   3db08:	bge	3db98 <__assert_fail@plt+0x2c928>
   3db0c:	ldr	r3, [fp, #-16]
   3db10:	cmp	r3, #0
   3db14:	bge	3db44 <__assert_fail@plt+0x2c8d4>
   3db18:	ldr	r1, [fp, #4]
   3db1c:	mvn	r0, #-2147483648	; 0x80000000
   3db20:	bl	3f76c <__assert_fail@plt+0x2e4fc>
   3db24:	mov	r3, r0
   3db28:	mov	r2, r3
   3db2c:	ldr	r3, [fp, #-16]
   3db30:	cmp	r2, r3
   3db34:	movgt	r3, #1
   3db38:	movle	r3, #0
   3db3c:	uxtb	r3, r3
   3db40:	b	3dc38 <__assert_fail@plt+0x2c9c8>
   3db44:	ldr	r3, [fp, #4]
   3db48:	cmn	r3, #1
   3db4c:	bne	3db6c <__assert_fail@plt+0x2c8fc>
   3db50:	ldr	r3, [fp, #-16]
   3db54:	add	r3, r3, #-2147483648	; 0x80000000
   3db58:	cmp	r3, #0
   3db5c:	movgt	r3, #1
   3db60:	movle	r3, #0
   3db64:	uxtb	r3, r3
   3db68:	b	3dc38 <__assert_fail@plt+0x2c9c8>
   3db6c:	ldr	r1, [fp, #4]
   3db70:	mov	r0, #-2147483648	; 0x80000000
   3db74:	bl	3f76c <__assert_fail@plt+0x2e4fc>
   3db78:	mov	r3, r0
   3db7c:	mov	r2, r3
   3db80:	ldr	r3, [fp, #-16]
   3db84:	cmp	r2, r3
   3db88:	movlt	r3, #1
   3db8c:	movge	r3, #0
   3db90:	uxtb	r3, r3
   3db94:	b	3dc38 <__assert_fail@plt+0x2c9c8>
   3db98:	ldr	r3, [fp, #4]
   3db9c:	cmp	r3, #0
   3dba0:	beq	3dc34 <__assert_fail@plt+0x2c9c4>
   3dba4:	ldr	r3, [fp, #-16]
   3dba8:	cmp	r3, #0
   3dbac:	bge	3dc08 <__assert_fail@plt+0x2c998>
   3dbb0:	ldr	r3, [fp, #-16]
   3dbb4:	cmn	r3, #1
   3dbb8:	bne	3dbd8 <__assert_fail@plt+0x2c968>
   3dbbc:	ldr	r3, [fp, #4]
   3dbc0:	add	r3, r3, #-2147483648	; 0x80000000
   3dbc4:	cmp	r3, #0
   3dbc8:	movgt	r3, #1
   3dbcc:	movle	r3, #0
   3dbd0:	uxtb	r3, r3
   3dbd4:	b	3dc38 <__assert_fail@plt+0x2c9c8>
   3dbd8:	ldr	r3, [fp, #-16]
   3dbdc:	mov	r1, r3
   3dbe0:	mov	r0, #-2147483648	; 0x80000000
   3dbe4:	bl	3f76c <__assert_fail@plt+0x2e4fc>
   3dbe8:	mov	r3, r0
   3dbec:	mov	r2, r3
   3dbf0:	ldr	r3, [fp, #4]
   3dbf4:	cmp	r2, r3
   3dbf8:	movlt	r3, #1
   3dbfc:	movge	r3, #0
   3dc00:	uxtb	r3, r3
   3dc04:	b	3dc38 <__assert_fail@plt+0x2c9c8>
   3dc08:	ldr	r1, [fp, #4]
   3dc0c:	mvn	r0, #-2147483648	; 0x80000000
   3dc10:	bl	3f76c <__assert_fail@plt+0x2e4fc>
   3dc14:	mov	r3, r0
   3dc18:	mov	r2, r3
   3dc1c:	ldr	r3, [fp, #-16]
   3dc20:	cmp	r2, r3
   3dc24:	movlt	r3, #1
   3dc28:	movge	r3, #0
   3dc2c:	uxtb	r3, r3
   3dc30:	b	3dc38 <__assert_fail@plt+0x2c9c8>
   3dc34:	mov	r3, #0
   3dc38:	cmp	r3, #0
   3dc3c:	beq	3dc58 <__assert_fail@plt+0x2c9e8>
   3dc40:	ldr	r3, [fp, #-16]
   3dc44:	mov	r2, r3
   3dc48:	ldr	r3, [fp, #4]
   3dc4c:	mul	r3, r3, r2
   3dc50:	str	r3, [fp, #-20]	; 0xffffffec
   3dc54:	b	3dc70 <__assert_fail@plt+0x2ca00>
   3dc58:	ldr	r3, [fp, #-16]
   3dc5c:	mov	r2, r3
   3dc60:	ldr	r3, [fp, #4]
   3dc64:	mul	r3, r3, r2
   3dc68:	str	r3, [fp, #-20]	; 0xffffffec
   3dc6c:	b	3dc74 <__assert_fail@plt+0x2ca04>
   3dc70:	bl	3de98 <__assert_fail@plt+0x2cc28>
   3dc74:	ldr	r3, [fp, #-20]	; 0xffffffec
   3dc78:	mov	r1, r3
   3dc7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3dc80:	bl	3d40c <__assert_fail@plt+0x2c19c>
   3dc84:	str	r0, [fp, #-24]	; 0xffffffe8
   3dc88:	ldr	r2, [fp, #-16]
   3dc8c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3dc90:	str	r2, [r3]
   3dc94:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3dc98:	mov	r0, r3
   3dc9c:	sub	sp, fp, #4
   3dca0:	pop	{fp, pc}
   3dca4:	push	{fp, lr}
   3dca8:	add	fp, sp, #4
   3dcac:	sub	sp, sp, #8
   3dcb0:	str	r0, [fp, #-8]
   3dcb4:	mov	r1, #1
   3dcb8:	ldr	r0, [fp, #-8]
   3dcbc:	bl	3dcfc <__assert_fail@plt+0x2ca8c>
   3dcc0:	mov	r3, r0
   3dcc4:	mov	r0, r3
   3dcc8:	sub	sp, fp, #4
   3dccc:	pop	{fp, pc}
   3dcd0:	push	{fp, lr}
   3dcd4:	add	fp, sp, #4
   3dcd8:	sub	sp, sp, #8
   3dcdc:	str	r0, [fp, #-8]
   3dce0:	mov	r1, #1
   3dce4:	ldr	r0, [fp, #-8]
   3dce8:	bl	3dd38 <__assert_fail@plt+0x2cac8>
   3dcec:	mov	r3, r0
   3dcf0:	mov	r0, r3
   3dcf4:	sub	sp, fp, #4
   3dcf8:	pop	{fp, pc}
   3dcfc:	push	{fp, lr}
   3dd00:	add	fp, sp, #4
   3dd04:	sub	sp, sp, #8
   3dd08:	str	r0, [fp, #-8]
   3dd0c:	str	r1, [fp, #-12]
   3dd10:	ldr	r1, [fp, #-12]
   3dd14:	ldr	r0, [fp, #-8]
   3dd18:	bl	3ded4 <__assert_fail@plt+0x2cc64>
   3dd1c:	mov	r3, r0
   3dd20:	mov	r0, r3
   3dd24:	bl	3d34c <__assert_fail@plt+0x2c0dc>
   3dd28:	mov	r3, r0
   3dd2c:	mov	r0, r3
   3dd30:	sub	sp, fp, #4
   3dd34:	pop	{fp, pc}
   3dd38:	push	{fp, lr}
   3dd3c:	add	fp, sp, #4
   3dd40:	sub	sp, sp, #8
   3dd44:	str	r0, [fp, #-8]
   3dd48:	str	r1, [fp, #-12]
   3dd4c:	ldr	r1, [fp, #-12]
   3dd50:	ldr	r0, [fp, #-8]
   3dd54:	bl	3eaa0 <__assert_fail@plt+0x2d830>
   3dd58:	mov	r3, r0
   3dd5c:	mov	r0, r3
   3dd60:	bl	3d34c <__assert_fail@plt+0x2c0dc>
   3dd64:	mov	r3, r0
   3dd68:	mov	r0, r3
   3dd6c:	sub	sp, fp, #4
   3dd70:	pop	{fp, pc}
   3dd74:	push	{fp, lr}
   3dd78:	add	fp, sp, #4
   3dd7c:	sub	sp, sp, #8
   3dd80:	str	r0, [fp, #-8]
   3dd84:	str	r1, [fp, #-12]
   3dd88:	ldr	r0, [fp, #-12]
   3dd8c:	bl	3d37c <__assert_fail@plt+0x2c10c>
   3dd90:	mov	r3, r0
   3dd94:	ldr	r2, [fp, #-12]
   3dd98:	ldr	r1, [fp, #-8]
   3dd9c:	mov	r0, r3
   3dda0:	bl	11018 <memcpy@plt>
   3dda4:	mov	r3, r0
   3dda8:	mov	r0, r3
   3ddac:	sub	sp, fp, #4
   3ddb0:	pop	{fp, pc}
   3ddb4:	push	{fp, lr}
   3ddb8:	add	fp, sp, #4
   3ddbc:	sub	sp, sp, #8
   3ddc0:	str	r0, [fp, #-8]
   3ddc4:	str	r1, [fp, #-12]
   3ddc8:	ldr	r0, [fp, #-12]
   3ddcc:	bl	3d3b0 <__assert_fail@plt+0x2c140>
   3ddd0:	mov	r3, r0
   3ddd4:	mov	r0, r3
   3ddd8:	ldr	r3, [fp, #-12]
   3dddc:	mov	r2, r3
   3dde0:	ldr	r1, [fp, #-8]
   3dde4:	bl	11018 <memcpy@plt>
   3dde8:	mov	r3, r0
   3ddec:	mov	r0, r3
   3ddf0:	sub	sp, fp, #4
   3ddf4:	pop	{fp, pc}
   3ddf8:	push	{fp, lr}
   3ddfc:	add	fp, sp, #4
   3de00:	sub	sp, sp, #16
   3de04:	str	r0, [fp, #-16]
   3de08:	str	r1, [fp, #-20]	; 0xffffffec
   3de0c:	ldr	r3, [fp, #-20]	; 0xffffffec
   3de10:	add	r3, r3, #1
   3de14:	mov	r0, r3
   3de18:	bl	3d3b0 <__assert_fail@plt+0x2c140>
   3de1c:	mov	r3, r0
   3de20:	str	r3, [fp, #-8]
   3de24:	ldr	r3, [fp, #-20]	; 0xffffffec
   3de28:	ldr	r2, [fp, #-8]
   3de2c:	add	r3, r2, r3
   3de30:	mov	r2, #0
   3de34:	strb	r2, [r3]
   3de38:	ldr	r3, [fp, #-20]	; 0xffffffec
   3de3c:	mov	r2, r3
   3de40:	ldr	r1, [fp, #-16]
   3de44:	ldr	r0, [fp, #-8]
   3de48:	bl	11018 <memcpy@plt>
   3de4c:	mov	r3, r0
   3de50:	mov	r0, r3
   3de54:	sub	sp, fp, #4
   3de58:	pop	{fp, pc}
   3de5c:	push	{fp, lr}
   3de60:	add	fp, sp, #4
   3de64:	sub	sp, sp, #8
   3de68:	str	r0, [fp, #-8]
   3de6c:	ldr	r0, [fp, #-8]
   3de70:	bl	11174 <strlen@plt>
   3de74:	mov	r3, r0
   3de78:	add	r3, r3, #1
   3de7c:	mov	r1, r3
   3de80:	ldr	r0, [fp, #-8]
   3de84:	bl	3dd74 <__assert_fail@plt+0x2cb04>
   3de88:	mov	r3, r0
   3de8c:	mov	r0, r3
   3de90:	sub	sp, fp, #4
   3de94:	pop	{fp, pc}
   3de98:	push	{r4, r5, fp, lr}
   3de9c:	add	fp, sp, #12
   3dea0:	ldr	r3, [pc, #32]	; 3dec8 <__assert_fail@plt+0x2cc58>
   3dea4:	ldr	r4, [r3]
   3dea8:	ldr	r0, [pc, #28]	; 3decc <__assert_fail@plt+0x2cc5c>
   3deac:	bl	11168 <gettext@plt>
   3deb0:	mov	r3, r0
   3deb4:	ldr	r2, [pc, #20]	; 3ded0 <__assert_fail@plt+0x2cc60>
   3deb8:	mov	r1, #0
   3debc:	mov	r0, r4
   3dec0:	bl	110e4 <error@plt>
   3dec4:	bl	11258 <abort@plt>
   3dec8:	andeq	r2, r5, r8, lsr #2
   3decc:	andeq	r1, r4, ip, asr #13
   3ded0:	andeq	r1, r4, r0, ror #13
   3ded4:	push	{r4, r5, fp, lr}
   3ded8:	add	fp, sp, #12
   3dedc:	sub	sp, sp, #16
   3dee0:	str	r0, [fp, #-24]	; 0xffffffe8
   3dee4:	str	r1, [fp, #-28]	; 0xffffffe4
   3dee8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3deec:	cmp	r3, #0
   3def0:	beq	3df00 <__assert_fail@plt+0x2cc90>
   3def4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3def8:	cmp	r3, #0
   3defc:	bne	3df10 <__assert_fail@plt+0x2cca0>
   3df00:	mov	r3, #1
   3df04:	str	r3, [fp, #-28]	; 0xffffffe4
   3df08:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3df0c:	str	r3, [fp, #-24]	; 0xffffffe8
   3df10:	mov	r1, #0
   3df14:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3df18:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3df1c:	umull	r2, r3, r2, r3
   3df20:	mov	r4, r3
   3df24:	mov	r5, #0
   3df28:	cmp	r4, #0
   3df2c:	beq	3df34 <__assert_fail@plt+0x2ccc4>
   3df30:	mov	r1, #1
   3df34:	cmp	r2, #0
   3df38:	bge	3df40 <__assert_fail@plt+0x2ccd0>
   3df3c:	mov	r1, #1
   3df40:	mov	r3, r2
   3df44:	str	r3, [fp, #-20]	; 0xffffffec
   3df48:	mov	r3, r1
   3df4c:	and	r3, r3, #1
   3df50:	uxtb	r3, r3
   3df54:	cmp	r3, #0
   3df58:	beq	3df74 <__assert_fail@plt+0x2cd04>
   3df5c:	bl	11198 <__errno_location@plt>
   3df60:	mov	r2, r0
   3df64:	mov	r3, #12
   3df68:	str	r3, [r2]
   3df6c:	mov	r3, #0
   3df70:	b	3df8c <__assert_fail@plt+0x2cd1c>
   3df74:	ldr	r1, [fp, #-28]	; 0xffffffe4
   3df78:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3df7c:	bl	10f58 <calloc@plt>
   3df80:	mov	r3, r0
   3df84:	str	r3, [fp, #-16]
   3df88:	ldr	r3, [fp, #-16]
   3df8c:	mov	r0, r3
   3df90:	sub	sp, fp, #12
   3df94:	pop	{r4, r5, fp, pc}
   3df98:	push	{r4, r5, fp, lr}
   3df9c:	add	fp, sp, #12
   3dfa0:	sub	sp, sp, #16
   3dfa4:	str	r0, [fp, #-24]	; 0xffffffe8
   3dfa8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3dfac:	cmp	r3, #0
   3dfb0:	bne	3dfbc <__assert_fail@plt+0x2cd4c>
   3dfb4:	mov	r3, #1
   3dfb8:	str	r3, [fp, #-24]	; 0xffffffe8
   3dfbc:	mov	r1, #0
   3dfc0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3dfc4:	mov	r2, r3
   3dfc8:	mov	r3, #0
   3dfcc:	mov	r4, r3
   3dfd0:	mov	r5, #0
   3dfd4:	cmp	r4, #0
   3dfd8:	beq	3dfe0 <__assert_fail@plt+0x2cd70>
   3dfdc:	mov	r1, #1
   3dfe0:	cmp	r2, #0
   3dfe4:	bge	3dfec <__assert_fail@plt+0x2cd7c>
   3dfe8:	mov	r1, #1
   3dfec:	mov	r3, r2
   3dff0:	str	r3, [fp, #-20]	; 0xffffffec
   3dff4:	mov	r3, r1
   3dff8:	and	r3, r3, #1
   3dffc:	uxtb	r3, r3
   3e000:	cmp	r3, #0
   3e004:	beq	3e020 <__assert_fail@plt+0x2cdb0>
   3e008:	bl	11198 <__errno_location@plt>
   3e00c:	mov	r2, r0
   3e010:	mov	r3, #12
   3e014:	str	r3, [r2]
   3e018:	mov	r3, #0
   3e01c:	b	3e034 <__assert_fail@plt+0x2cdc4>
   3e020:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3e024:	bl	11108 <malloc@plt>
   3e028:	mov	r3, r0
   3e02c:	str	r3, [fp, #-16]
   3e030:	ldr	r3, [fp, #-16]
   3e034:	mov	r0, r3
   3e038:	sub	sp, fp, #12
   3e03c:	pop	{r4, r5, fp, pc}
   3e040:	push	{r4, r5, fp, lr}
   3e044:	add	fp, sp, #12
   3e048:	sub	sp, sp, #16
   3e04c:	str	r0, [fp, #-24]	; 0xffffffe8
   3e050:	str	r1, [fp, #-28]	; 0xffffffe4
   3e054:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3e058:	cmp	r3, #0
   3e05c:	bne	3e070 <__assert_fail@plt+0x2ce00>
   3e060:	ldr	r0, [fp, #-28]	; 0xffffffe4
   3e064:	bl	3df98 <__assert_fail@plt+0x2cd28>
   3e068:	mov	r3, r0
   3e06c:	b	3e104 <__assert_fail@plt+0x2ce94>
   3e070:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3e074:	cmp	r3, #0
   3e078:	bne	3e08c <__assert_fail@plt+0x2ce1c>
   3e07c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3e080:	bl	13630 <__assert_fail@plt+0x23c0>
   3e084:	mov	r3, #0
   3e088:	b	3e104 <__assert_fail@plt+0x2ce94>
   3e08c:	mov	r1, #0
   3e090:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3e094:	mov	r2, r3
   3e098:	mov	r3, #0
   3e09c:	mov	r4, r3
   3e0a0:	mov	r5, #0
   3e0a4:	cmp	r4, #0
   3e0a8:	beq	3e0b0 <__assert_fail@plt+0x2ce40>
   3e0ac:	mov	r1, #1
   3e0b0:	cmp	r2, #0
   3e0b4:	bge	3e0bc <__assert_fail@plt+0x2ce4c>
   3e0b8:	mov	r1, #1
   3e0bc:	mov	r3, r2
   3e0c0:	str	r3, [fp, #-20]	; 0xffffffec
   3e0c4:	mov	r3, r1
   3e0c8:	and	r3, r3, #1
   3e0cc:	uxtb	r3, r3
   3e0d0:	cmp	r3, #0
   3e0d4:	beq	3e0f0 <__assert_fail@plt+0x2ce80>
   3e0d8:	bl	11198 <__errno_location@plt>
   3e0dc:	mov	r2, r0
   3e0e0:	mov	r3, #12
   3e0e4:	str	r3, [r2]
   3e0e8:	mov	r3, #0
   3e0ec:	b	3e104 <__assert_fail@plt+0x2ce94>
   3e0f0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   3e0f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3e0f8:	bl	1106c <realloc@plt>
   3e0fc:	str	r0, [fp, #-16]
   3e100:	ldr	r3, [fp, #-16]
   3e104:	mov	r0, r3
   3e108:	sub	sp, fp, #12
   3e10c:	pop	{r4, r5, fp, pc}
   3e110:	push	{r4, r5, fp, lr}
   3e114:	add	fp, sp, #12
   3e118:	sub	sp, sp, #16
   3e11c:	str	r0, [fp, #-24]	; 0xffffffe8
   3e120:	str	r1, [fp, #-28]	; 0xffffffe4
   3e124:	ldr	r5, [fp, #-24]	; 0xffffffe8
   3e128:	ldr	r4, [fp, #-28]	; 0xffffffe4
   3e12c:	cmp	r5, r4
   3e130:	bne	3e13c <__assert_fail@plt+0x2cecc>
   3e134:	mov	r3, #0
   3e138:	b	3e19c <__assert_fail@plt+0x2cf2c>
   3e13c:	ldrb	r3, [r5]
   3e140:	mov	r0, r3
   3e144:	bl	3f2dc <__assert_fail@plt+0x2e06c>
   3e148:	mov	r3, r0
   3e14c:	strb	r3, [fp, #-13]
   3e150:	ldrb	r3, [r4]
   3e154:	mov	r0, r3
   3e158:	bl	3f2dc <__assert_fail@plt+0x2e06c>
   3e15c:	mov	r3, r0
   3e160:	strb	r3, [fp, #-14]
   3e164:	ldrb	r3, [fp, #-13]
   3e168:	cmp	r3, #0
   3e16c:	beq	3e18c <__assert_fail@plt+0x2cf1c>
   3e170:	add	r5, r5, #1
   3e174:	add	r4, r4, #1
   3e178:	ldrb	r2, [fp, #-13]
   3e17c:	ldrb	r3, [fp, #-14]
   3e180:	cmp	r2, r3
   3e184:	beq	3e13c <__assert_fail@plt+0x2cecc>
   3e188:	b	3e190 <__assert_fail@plt+0x2cf20>
   3e18c:	nop			; (mov r0, r0)
   3e190:	ldrb	r2, [fp, #-13]
   3e194:	ldrb	r3, [fp, #-14]
   3e198:	sub	r3, r2, r3
   3e19c:	mov	r0, r3
   3e1a0:	sub	sp, fp, #12
   3e1a4:	pop	{r4, r5, fp, pc}
   3e1a8:	push	{fp, lr}
   3e1ac:	add	fp, sp, #4
   3e1b0:	sub	sp, sp, #16
   3e1b4:	str	r0, [fp, #-16]
   3e1b8:	ldr	r0, [fp, #-16]
   3e1bc:	bl	110c0 <__fpending@plt>
   3e1c0:	mov	r3, r0
   3e1c4:	cmp	r3, #0
   3e1c8:	movne	r3, #1
   3e1cc:	moveq	r3, #0
   3e1d0:	strb	r3, [fp, #-5]
   3e1d4:	ldr	r0, [fp, #-16]
   3e1d8:	bl	110cc <ferror_unlocked@plt>
   3e1dc:	mov	r3, r0
   3e1e0:	cmp	r3, #0
   3e1e4:	movne	r3, #1
   3e1e8:	moveq	r3, #0
   3e1ec:	strb	r3, [fp, #-6]
   3e1f0:	ldr	r0, [fp, #-16]
   3e1f4:	bl	3e77c <__assert_fail@plt+0x2d50c>
   3e1f8:	mov	r3, r0
   3e1fc:	cmp	r3, #0
   3e200:	movne	r3, #1
   3e204:	moveq	r3, #0
   3e208:	strb	r3, [fp, #-7]
   3e20c:	ldrb	r3, [fp, #-6]
   3e210:	cmp	r3, #0
   3e214:	bne	3e244 <__assert_fail@plt+0x2cfd4>
   3e218:	ldrb	r3, [fp, #-7]
   3e21c:	cmp	r3, #0
   3e220:	beq	3e270 <__assert_fail@plt+0x2d000>
   3e224:	ldrb	r3, [fp, #-5]
   3e228:	cmp	r3, #0
   3e22c:	bne	3e244 <__assert_fail@plt+0x2cfd4>
   3e230:	bl	11198 <__errno_location@plt>
   3e234:	mov	r3, r0
   3e238:	ldr	r3, [r3]
   3e23c:	cmp	r3, #9
   3e240:	beq	3e270 <__assert_fail@plt+0x2d000>
   3e244:	ldrb	r3, [fp, #-7]
   3e248:	eor	r3, r3, #1
   3e24c:	uxtb	r3, r3
   3e250:	cmp	r3, #0
   3e254:	beq	3e268 <__assert_fail@plt+0x2cff8>
   3e258:	bl	11198 <__errno_location@plt>
   3e25c:	mov	r2, r0
   3e260:	mov	r3, #0
   3e264:	str	r3, [r2]
   3e268:	mvn	r3, #0
   3e26c:	b	3e274 <__assert_fail@plt+0x2d004>
   3e270:	mov	r3, #0
   3e274:	mov	r0, r3
   3e278:	sub	sp, fp, #4
   3e27c:	pop	{fp, pc}
   3e280:	push	{fp, lr}
   3e284:	add	fp, sp, #4
   3e288:	sub	sp, sp, #32
   3e28c:	str	r0, [fp, #-24]	; 0xffffffe8
   3e290:	str	r1, [fp, #-28]	; 0xffffffe4
   3e294:	str	r2, [fp, #-32]	; 0xffffffe0
   3e298:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3e29c:	ldr	r3, [r3, #4]
   3e2a0:	cmp	r3, #0
   3e2a4:	bne	3e2e4 <__assert_fail@plt+0x2d074>
   3e2a8:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3e2ac:	cmp	r3, #3
   3e2b0:	bhi	3e2c0 <__assert_fail@plt+0x2d050>
   3e2b4:	mov	r3, #16
   3e2b8:	str	r3, [fp, #-8]
   3e2bc:	b	3e330 <__assert_fail@plt+0x2d0c0>
   3e2c0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3e2c4:	cmp	r3, #7
   3e2c8:	bhi	3e2d8 <__assert_fail@plt+0x2d068>
   3e2cc:	mov	r3, #8
   3e2d0:	str	r3, [fp, #-8]
   3e2d4:	b	3e330 <__assert_fail@plt+0x2d0c0>
   3e2d8:	mov	r3, #4
   3e2dc:	str	r3, [fp, #-8]
   3e2e0:	b	3e330 <__assert_fail@plt+0x2d0c0>
   3e2e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3e2e8:	ldr	r2, [r3, #4]
   3e2ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3e2f0:	ldr	r3, [r3, #4]
   3e2f4:	lsr	r3, r3, #1
   3e2f8:	add	r3, r2, r3
   3e2fc:	add	r3, r3, #1
   3e300:	str	r3, [fp, #-8]
   3e304:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3e308:	ldr	r2, [r3, #4]
   3e30c:	ldr	r3, [fp, #-8]
   3e310:	cmp	r2, r3
   3e314:	bcc	3e330 <__assert_fail@plt+0x2d0c0>
   3e318:	bl	11198 <__errno_location@plt>
   3e31c:	mov	r2, r0
   3e320:	mov	r3, #12
   3e324:	str	r3, [r2]
   3e328:	mov	r3, #0
   3e32c:	b	3e450 <__assert_fail@plt+0x2d1e0>
   3e330:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3e334:	cmp	r3, #0
   3e338:	beq	3e374 <__assert_fail@plt+0x2d104>
   3e33c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   3e340:	mvn	r0, #0
   3e344:	bl	3f560 <__assert_fail@plt+0x2e2f0>
   3e348:	mov	r3, r0
   3e34c:	mov	r2, r3
   3e350:	ldr	r3, [fp, #-8]
   3e354:	cmp	r2, r3
   3e358:	bcs	3e374 <__assert_fail@plt+0x2d104>
   3e35c:	ldr	r3, [fp, #-8]
   3e360:	ldr	r2, [fp, #-32]	; 0xffffffe0
   3e364:	mul	r3, r2, r3
   3e368:	str	r3, [fp, #-16]
   3e36c:	mov	r3, #1
   3e370:	b	3e388 <__assert_fail@plt+0x2d118>
   3e374:	ldr	r3, [fp, #-8]
   3e378:	ldr	r2, [fp, #-32]	; 0xffffffe0
   3e37c:	mul	r3, r2, r3
   3e380:	str	r3, [fp, #-16]
   3e384:	mov	r3, #0
   3e388:	cmp	r3, #0
   3e38c:	beq	3e398 <__assert_fail@plt+0x2d128>
   3e390:	mov	r3, #0
   3e394:	b	3e450 <__assert_fail@plt+0x2d1e0>
   3e398:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3e39c:	ldr	r2, [r3, #8]
   3e3a0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3e3a4:	cmp	r2, r3
   3e3a8:	bne	3e404 <__assert_fail@plt+0x2d194>
   3e3ac:	ldr	r3, [fp, #-16]
   3e3b0:	mov	r0, r3
   3e3b4:	bl	3df98 <__assert_fail@plt+0x2cd28>
   3e3b8:	mov	r3, r0
   3e3bc:	str	r3, [fp, #-12]
   3e3c0:	ldr	r3, [fp, #-12]
   3e3c4:	cmp	r3, #0
   3e3c8:	beq	3e420 <__assert_fail@plt+0x2d1b0>
   3e3cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3e3d0:	ldr	r3, [r3, #8]
   3e3d4:	cmp	r3, #0
   3e3d8:	beq	3e420 <__assert_fail@plt+0x2d1b0>
   3e3dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3e3e0:	ldr	r1, [r3, #8]
   3e3e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3e3e8:	ldr	r3, [r3]
   3e3ec:	ldr	r2, [fp, #-32]	; 0xffffffe0
   3e3f0:	mul	r3, r2, r3
   3e3f4:	mov	r2, r3
   3e3f8:	ldr	r0, [fp, #-12]
   3e3fc:	bl	11018 <memcpy@plt>
   3e400:	b	3e420 <__assert_fail@plt+0x2d1b0>
   3e404:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3e408:	ldr	r3, [r3, #8]
   3e40c:	ldr	r2, [fp, #-16]
   3e410:	mov	r1, r2
   3e414:	mov	r0, r3
   3e418:	bl	3e040 <__assert_fail@plt+0x2cdd0>
   3e41c:	str	r0, [fp, #-12]
   3e420:	ldr	r3, [fp, #-12]
   3e424:	cmp	r3, #0
   3e428:	bne	3e434 <__assert_fail@plt+0x2d1c4>
   3e42c:	mov	r3, #0
   3e430:	b	3e450 <__assert_fail@plt+0x2d1e0>
   3e434:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3e438:	ldr	r2, [fp, #-12]
   3e43c:	str	r2, [r3, #8]
   3e440:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3e444:	ldr	r2, [fp, #-8]
   3e448:	str	r2, [r3, #4]
   3e44c:	mov	r3, #1
   3e450:	mov	r0, r3
   3e454:	sub	sp, fp, #4
   3e458:	pop	{fp, pc}
   3e45c:	push	{fp}		; (str fp, [sp, #-4]!)
   3e460:	add	fp, sp, #0
   3e464:	mvn	r3, #0
   3e468:	mov	r0, r3
   3e46c:	add	sp, fp, #0
   3e470:	pop	{fp}		; (ldr fp, [sp], #4)
   3e474:	bx	lr
   3e478:	push	{r4, fp, lr}
   3e47c:	add	fp, sp, #8
   3e480:	sub	sp, sp, #12
   3e484:	str	r0, [fp, #-16]
   3e488:	ldr	r3, [fp, #-16]
   3e48c:	ldr	r4, [r3, #4]
   3e490:	bl	3e45c <__assert_fail@plt+0x2d1ec>
   3e494:	mov	r3, r0
   3e498:	cmp	r4, r3
   3e49c:	moveq	r3, #1
   3e4a0:	movne	r3, #0
   3e4a4:	uxtb	r3, r3
   3e4a8:	mov	r0, r3
   3e4ac:	sub	sp, fp, #8
   3e4b0:	pop	{r4, fp, pc}
   3e4b4:	push	{fp, lr}
   3e4b8:	add	fp, sp, #4
   3e4bc:	sub	sp, sp, #32
   3e4c0:	str	r0, [fp, #-24]	; 0xffffffe8
   3e4c4:	str	r1, [fp, #-28]	; 0xffffffe4
   3e4c8:	str	r2, [fp, #-32]	; 0xffffffe0
   3e4cc:	str	r3, [fp, #-36]	; 0xffffffdc
   3e4d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3e4d4:	bl	3e478 <__assert_fail@plt+0x2d208>
   3e4d8:	mov	r3, r0
   3e4dc:	cmp	r3, #0
   3e4e0:	beq	3e4ec <__assert_fail@plt+0x2d27c>
   3e4e4:	mov	r3, #0
   3e4e8:	b	3e5e4 <__assert_fail@plt+0x2d374>
   3e4ec:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3e4f0:	ldr	r3, [r3]
   3e4f4:	str	r3, [fp, #-8]
   3e4f8:	ldr	r3, [fp, #-8]
   3e4fc:	cmp	r3, #0
   3e500:	bne	3e548 <__assert_fail@plt+0x2d2d8>
   3e504:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3e508:	ldr	r2, [r3, #8]
   3e50c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3e510:	cmp	r2, r3
   3e514:	beq	3e528 <__assert_fail@plt+0x2d2b8>
   3e518:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3e51c:	ldr	r3, [r3, #8]
   3e520:	mov	r0, r3
   3e524:	bl	13630 <__assert_fail@plt+0x23c0>
   3e528:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3e52c:	mov	r2, #0
   3e530:	str	r2, [r3]
   3e534:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3e538:	mov	r2, #0
   3e53c:	str	r2, [r3, #4]
   3e540:	mov	r3, #1
   3e544:	b	3e5e4 <__assert_fail@plt+0x2d374>
   3e548:	ldr	r3, [fp, #-8]
   3e54c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   3e550:	mul	r3, r2, r3
   3e554:	str	r3, [fp, #-12]
   3e558:	ldr	r0, [fp, #-12]
   3e55c:	bl	3df98 <__assert_fail@plt+0x2cd28>
   3e560:	mov	r3, r0
   3e564:	str	r3, [fp, #-16]
   3e568:	ldr	r3, [fp, #-16]
   3e56c:	cmp	r3, #0
   3e570:	beq	3e5e0 <__assert_fail@plt+0x2d370>
   3e574:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3e578:	ldr	r3, [r3, #8]
   3e57c:	cmp	r3, #0
   3e580:	beq	3e59c <__assert_fail@plt+0x2d32c>
   3e584:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3e588:	ldr	r3, [r3, #8]
   3e58c:	ldr	r2, [fp, #-12]
   3e590:	mov	r1, r3
   3e594:	ldr	r0, [fp, #-16]
   3e598:	bl	11018 <memcpy@plt>
   3e59c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3e5a0:	ldr	r2, [r3, #8]
   3e5a4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3e5a8:	cmp	r2, r3
   3e5ac:	beq	3e5c0 <__assert_fail@plt+0x2d350>
   3e5b0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3e5b4:	ldr	r3, [r3, #8]
   3e5b8:	mov	r0, r3
   3e5bc:	bl	13630 <__assert_fail@plt+0x23c0>
   3e5c0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3e5c4:	ldr	r2, [fp, #-16]
   3e5c8:	str	r2, [r3]
   3e5cc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3e5d0:	ldr	r2, [fp, #-8]
   3e5d4:	str	r2, [r3, #4]
   3e5d8:	mov	r3, #1
   3e5dc:	b	3e5e4 <__assert_fail@plt+0x2d374>
   3e5e0:	mov	r3, #0
   3e5e4:	mov	r0, r3
   3e5e8:	sub	sp, fp, #4
   3e5ec:	pop	{fp, pc}
   3e5f0:	push	{fp, lr}
   3e5f4:	add	fp, sp, #4
   3e5f8:	sub	sp, sp, #24
   3e5fc:	str	r0, [fp, #-16]
   3e600:	str	r1, [fp, #-20]	; 0xffffffec
   3e604:	str	r2, [fp, #-24]	; 0xffffffe8
   3e608:	str	r3, [fp, #-28]	; 0xffffffe4
   3e60c:	ldr	r3, [fp, #-16]
   3e610:	ldr	r2, [r3, #4]
   3e614:	ldr	r3, [fp, #-20]	; 0xffffffec
   3e618:	cmp	r2, r3
   3e61c:	bcc	3e634 <__assert_fail@plt+0x2d3c4>
   3e620:	ldr	r3, [fp, #-16]
   3e624:	ldr	r2, [fp, #-20]	; 0xffffffec
   3e628:	str	r2, [r3]
   3e62c:	mov	r3, #1
   3e630:	b	3e770 <__assert_fail@plt+0x2d500>
   3e634:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3e638:	cmp	r3, #0
   3e63c:	beq	3e678 <__assert_fail@plt+0x2d408>
   3e640:	ldr	r1, [fp, #-28]	; 0xffffffe4
   3e644:	mvn	r0, #0
   3e648:	bl	3f560 <__assert_fail@plt+0x2e2f0>
   3e64c:	mov	r3, r0
   3e650:	mov	r2, r3
   3e654:	ldr	r3, [fp, #-20]	; 0xffffffec
   3e658:	cmp	r2, r3
   3e65c:	bcs	3e678 <__assert_fail@plt+0x2d408>
   3e660:	ldr	r3, [fp, #-20]	; 0xffffffec
   3e664:	ldr	r2, [fp, #-28]	; 0xffffffe4
   3e668:	mul	r3, r2, r3
   3e66c:	str	r3, [fp, #-12]
   3e670:	mov	r3, #1
   3e674:	b	3e68c <__assert_fail@plt+0x2d41c>
   3e678:	ldr	r3, [fp, #-20]	; 0xffffffec
   3e67c:	ldr	r2, [fp, #-28]	; 0xffffffe4
   3e680:	mul	r3, r2, r3
   3e684:	str	r3, [fp, #-12]
   3e688:	mov	r3, #0
   3e68c:	cmp	r3, #0
   3e690:	beq	3e6ac <__assert_fail@plt+0x2d43c>
   3e694:	bl	11198 <__errno_location@plt>
   3e698:	mov	r2, r0
   3e69c:	mov	r3, #12
   3e6a0:	str	r3, [r2]
   3e6a4:	mov	r3, #0
   3e6a8:	b	3e770 <__assert_fail@plt+0x2d500>
   3e6ac:	ldr	r3, [fp, #-16]
   3e6b0:	ldr	r2, [r3, #8]
   3e6b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3e6b8:	cmp	r2, r3
   3e6bc:	bne	3e718 <__assert_fail@plt+0x2d4a8>
   3e6c0:	ldr	r3, [fp, #-12]
   3e6c4:	mov	r0, r3
   3e6c8:	bl	3df98 <__assert_fail@plt+0x2cd28>
   3e6cc:	mov	r3, r0
   3e6d0:	str	r3, [fp, #-8]
   3e6d4:	ldr	r3, [fp, #-8]
   3e6d8:	cmp	r3, #0
   3e6dc:	beq	3e734 <__assert_fail@plt+0x2d4c4>
   3e6e0:	ldr	r3, [fp, #-16]
   3e6e4:	ldr	r3, [r3, #8]
   3e6e8:	cmp	r3, #0
   3e6ec:	beq	3e734 <__assert_fail@plt+0x2d4c4>
   3e6f0:	ldr	r3, [fp, #-16]
   3e6f4:	ldr	r1, [r3, #8]
   3e6f8:	ldr	r3, [fp, #-16]
   3e6fc:	ldr	r3, [r3]
   3e700:	ldr	r2, [fp, #-28]	; 0xffffffe4
   3e704:	mul	r3, r2, r3
   3e708:	mov	r2, r3
   3e70c:	ldr	r0, [fp, #-8]
   3e710:	bl	11018 <memcpy@plt>
   3e714:	b	3e734 <__assert_fail@plt+0x2d4c4>
   3e718:	ldr	r3, [fp, #-16]
   3e71c:	ldr	r3, [r3, #8]
   3e720:	ldr	r2, [fp, #-12]
   3e724:	mov	r1, r2
   3e728:	mov	r0, r3
   3e72c:	bl	3e040 <__assert_fail@plt+0x2cdd0>
   3e730:	str	r0, [fp, #-8]
   3e734:	ldr	r3, [fp, #-8]
   3e738:	cmp	r3, #0
   3e73c:	bne	3e748 <__assert_fail@plt+0x2d4d8>
   3e740:	mov	r3, #0
   3e744:	b	3e770 <__assert_fail@plt+0x2d500>
   3e748:	ldr	r3, [fp, #-16]
   3e74c:	ldr	r2, [fp, #-8]
   3e750:	str	r2, [r3, #8]
   3e754:	ldr	r3, [fp, #-16]
   3e758:	ldr	r2, [fp, #-20]	; 0xffffffec
   3e75c:	str	r2, [r3, #4]
   3e760:	ldr	r3, [fp, #-16]
   3e764:	ldr	r2, [fp, #-20]	; 0xffffffec
   3e768:	str	r2, [r3]
   3e76c:	mov	r3, #1
   3e770:	mov	r0, r3
   3e774:	sub	sp, fp, #4
   3e778:	pop	{fp, pc}
   3e77c:	push	{fp, lr}
   3e780:	add	fp, sp, #4
   3e784:	sub	sp, sp, #32
   3e788:	str	r0, [fp, #-24]	; 0xffffffe8
   3e78c:	mov	r3, #0
   3e790:	str	r3, [fp, #-8]
   3e794:	mov	r3, #0
   3e798:	str	r3, [fp, #-12]
   3e79c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3e7a0:	bl	111d4 <fileno@plt>
   3e7a4:	str	r0, [fp, #-16]
   3e7a8:	ldr	r3, [fp, #-16]
   3e7ac:	cmp	r3, #0
   3e7b0:	bge	3e7c4 <__assert_fail@plt+0x2d554>
   3e7b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3e7b8:	bl	111ec <fclose@plt>
   3e7bc:	mov	r3, r0
   3e7c0:	b	3e868 <__assert_fail@plt+0x2d5f8>
   3e7c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3e7c8:	bl	11120 <__freading@plt>
   3e7cc:	mov	r3, r0
   3e7d0:	cmp	r3, #0
   3e7d4:	beq	3e810 <__assert_fail@plt+0x2d5a0>
   3e7d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3e7dc:	bl	111d4 <fileno@plt>
   3e7e0:	mov	r1, r0
   3e7e4:	mov	r3, #1
   3e7e8:	str	r3, [sp]
   3e7ec:	mov	r2, #0
   3e7f0:	mov	r3, #0
   3e7f4:	mov	r0, r1
   3e7f8:	bl	110a8 <lseek64@plt>
   3e7fc:	mvn	r2, #0
   3e800:	mvn	r3, #0
   3e804:	cmp	r1, r3
   3e808:	cmpeq	r0, r2
   3e80c:	beq	3e834 <__assert_fail@plt+0x2d5c4>
   3e810:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3e814:	bl	3e8bc <__assert_fail@plt+0x2d64c>
   3e818:	mov	r3, r0
   3e81c:	cmp	r3, #0
   3e820:	beq	3e834 <__assert_fail@plt+0x2d5c4>
   3e824:	bl	11198 <__errno_location@plt>
   3e828:	mov	r3, r0
   3e82c:	ldr	r3, [r3]
   3e830:	str	r3, [fp, #-8]
   3e834:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3e838:	bl	111ec <fclose@plt>
   3e83c:	str	r0, [fp, #-12]
   3e840:	ldr	r3, [fp, #-8]
   3e844:	cmp	r3, #0
   3e848:	beq	3e864 <__assert_fail@plt+0x2d5f4>
   3e84c:	bl	11198 <__errno_location@plt>
   3e850:	mov	r2, r0
   3e854:	ldr	r3, [fp, #-8]
   3e858:	str	r3, [r2]
   3e85c:	mvn	r3, #0
   3e860:	str	r3, [fp, #-12]
   3e864:	ldr	r3, [fp, #-12]
   3e868:	mov	r0, r3
   3e86c:	sub	sp, fp, #4
   3e870:	pop	{fp, pc}
   3e874:	push	{fp, lr}
   3e878:	add	fp, sp, #4
   3e87c:	sub	sp, sp, #16
   3e880:	str	r0, [fp, #-8]
   3e884:	ldr	r3, [fp, #-8]
   3e888:	ldr	r3, [r3]
   3e88c:	and	r3, r3, #256	; 0x100
   3e890:	cmp	r3, #0
   3e894:	beq	3e8b0 <__assert_fail@plt+0x2d640>
   3e898:	mov	r3, #1
   3e89c:	str	r3, [sp]
   3e8a0:	mov	r2, #0
   3e8a4:	mov	r3, #0
   3e8a8:	ldr	r0, [fp, #-8]
   3e8ac:	bl	3e91c <__assert_fail@plt+0x2d6ac>
   3e8b0:	nop			; (mov r0, r0)
   3e8b4:	sub	sp, fp, #4
   3e8b8:	pop	{fp, pc}
   3e8bc:	push	{fp, lr}
   3e8c0:	add	fp, sp, #4
   3e8c4:	sub	sp, sp, #8
   3e8c8:	str	r0, [fp, #-8]
   3e8cc:	ldr	r3, [fp, #-8]
   3e8d0:	cmp	r3, #0
   3e8d4:	beq	3e8ec <__assert_fail@plt+0x2d67c>
   3e8d8:	ldr	r0, [fp, #-8]
   3e8dc:	bl	11120 <__freading@plt>
   3e8e0:	mov	r3, r0
   3e8e4:	cmp	r3, #0
   3e8e8:	bne	3e8fc <__assert_fail@plt+0x2d68c>
   3e8ec:	ldr	r0, [fp, #-8]
   3e8f0:	bl	10fd0 <fflush@plt>
   3e8f4:	mov	r3, r0
   3e8f8:	b	3e910 <__assert_fail@plt+0x2d6a0>
   3e8fc:	ldr	r0, [fp, #-8]
   3e900:	bl	3e874 <__assert_fail@plt+0x2d604>
   3e904:	ldr	r0, [fp, #-8]
   3e908:	bl	10fd0 <fflush@plt>
   3e90c:	mov	r3, r0
   3e910:	mov	r0, r3
   3e914:	sub	sp, fp, #4
   3e918:	pop	{fp, pc}
   3e91c:	push	{fp, lr}
   3e920:	add	fp, sp, #4
   3e924:	sub	sp, sp, #32
   3e928:	str	r0, [fp, #-16]
   3e92c:	strd	r2, [fp, #-28]	; 0xffffffe4
   3e930:	ldr	r3, [fp, #-16]
   3e934:	ldr	r2, [r3, #8]
   3e938:	ldr	r3, [fp, #-16]
   3e93c:	ldr	r3, [r3, #4]
   3e940:	cmp	r2, r3
   3e944:	bne	3e9dc <__assert_fail@plt+0x2d76c>
   3e948:	ldr	r3, [fp, #-16]
   3e94c:	ldr	r2, [r3, #20]
   3e950:	ldr	r3, [fp, #-16]
   3e954:	ldr	r3, [r3, #16]
   3e958:	cmp	r2, r3
   3e95c:	bne	3e9dc <__assert_fail@plt+0x2d76c>
   3e960:	ldr	r3, [fp, #-16]
   3e964:	ldr	r3, [r3, #36]	; 0x24
   3e968:	cmp	r3, #0
   3e96c:	bne	3e9dc <__assert_fail@plt+0x2d76c>
   3e970:	ldr	r0, [fp, #-16]
   3e974:	bl	111d4 <fileno@plt>
   3e978:	mov	r1, r0
   3e97c:	ldr	r3, [fp, #4]
   3e980:	str	r3, [sp]
   3e984:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   3e988:	mov	r0, r1
   3e98c:	bl	110a8 <lseek64@plt>
   3e990:	strd	r0, [fp, #-12]
   3e994:	ldrd	r2, [fp, #-12]
   3e998:	mvn	r0, #0
   3e99c:	mvn	r1, #0
   3e9a0:	cmp	r3, r1
   3e9a4:	cmpeq	r2, r0
   3e9a8:	bne	3e9b4 <__assert_fail@plt+0x2d744>
   3e9ac:	mvn	r3, #0
   3e9b0:	b	3e9f4 <__assert_fail@plt+0x2d784>
   3e9b4:	ldr	r3, [fp, #-16]
   3e9b8:	ldr	r3, [r3]
   3e9bc:	bic	r2, r3, #16
   3e9c0:	ldr	r3, [fp, #-16]
   3e9c4:	str	r2, [r3]
   3e9c8:	ldr	r1, [fp, #-16]
   3e9cc:	ldrd	r2, [fp, #-12]
   3e9d0:	strd	r2, [r1, #80]	; 0x50
   3e9d4:	mov	r3, #0
   3e9d8:	b	3e9f4 <__assert_fail@plt+0x2d784>
   3e9dc:	ldr	r3, [fp, #4]
   3e9e0:	str	r3, [sp]
   3e9e4:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   3e9e8:	ldr	r0, [fp, #-16]
   3e9ec:	bl	111f8 <fseeko64@plt>
   3e9f0:	mov	r3, r0
   3e9f4:	mov	r0, r3
   3e9f8:	sub	sp, fp, #4
   3e9fc:	pop	{fp, pc}
   3ea00:	push	{fp, lr}
   3ea04:	add	fp, sp, #4
   3ea08:	bl	11198 <__errno_location@plt>
   3ea0c:	mov	r2, r0
   3ea10:	mov	r3, #12
   3ea14:	str	r3, [r2]
   3ea18:	mov	r3, #0
   3ea1c:	mov	r0, r3
   3ea20:	pop	{fp, pc}
   3ea24:	push	{fp, lr}
   3ea28:	add	fp, sp, #4
   3ea2c:	sub	sp, sp, #8
   3ea30:	str	r0, [fp, #-8]
   3ea34:	ldr	r3, [fp, #-8]
   3ea38:	mov	r0, r3
   3ea3c:	bl	3df98 <__assert_fail@plt+0x2cd28>
   3ea40:	mov	r3, r0
   3ea44:	mov	r0, r3
   3ea48:	sub	sp, fp, #4
   3ea4c:	pop	{fp, pc}
   3ea50:	push	{fp, lr}
   3ea54:	add	fp, sp, #4
   3ea58:	sub	sp, sp, #8
   3ea5c:	str	r0, [fp, #-8]
   3ea60:	str	r1, [fp, #-12]
   3ea64:	ldr	r3, [fp, #-12]
   3ea68:	cmp	r3, #0
   3ea6c:	moveq	r3, #1
   3ea70:	movne	r3, #0
   3ea74:	uxtb	r3, r3
   3ea78:	mov	r2, r3
   3ea7c:	ldr	r3, [fp, #-12]
   3ea80:	orr	r3, r2, r3
   3ea84:	mov	r1, r3
   3ea88:	ldr	r0, [fp, #-8]
   3ea8c:	bl	3e040 <__assert_fail@plt+0x2cdd0>
   3ea90:	mov	r3, r0
   3ea94:	mov	r0, r3
   3ea98:	sub	sp, fp, #4
   3ea9c:	pop	{fp, pc}
   3eaa0:	push	{fp, lr}
   3eaa4:	add	fp, sp, #4
   3eaa8:	sub	sp, sp, #8
   3eaac:	str	r0, [fp, #-8]
   3eab0:	str	r1, [fp, #-12]
   3eab4:	ldr	r3, [fp, #-8]
   3eab8:	ldr	r2, [fp, #-12]
   3eabc:	mov	r1, r2
   3eac0:	mov	r0, r3
   3eac4:	bl	3ded4 <__assert_fail@plt+0x2cc64>
   3eac8:	mov	r3, r0
   3eacc:	mov	r0, r3
   3ead0:	sub	sp, fp, #4
   3ead4:	pop	{fp, pc}
   3ead8:	push	{fp, lr}
   3eadc:	add	fp, sp, #4
   3eae0:	sub	sp, sp, #16
   3eae4:	str	r0, [fp, #-8]
   3eae8:	str	r1, [fp, #-12]
   3eaec:	str	r2, [fp, #-16]
   3eaf0:	ldr	r3, [fp, #-12]
   3eaf4:	cmp	r3, #0
   3eaf8:	beq	3eb08 <__assert_fail@plt+0x2d898>
   3eafc:	ldr	r3, [fp, #-16]
   3eb00:	cmp	r3, #0
   3eb04:	bne	3eb18 <__assert_fail@plt+0x2d8a8>
   3eb08:	mov	r3, #1
   3eb0c:	str	r3, [fp, #-16]
   3eb10:	ldr	r3, [fp, #-16]
   3eb14:	str	r3, [fp, #-12]
   3eb18:	ldr	r3, [fp, #-12]
   3eb1c:	ldr	r2, [fp, #-16]
   3eb20:	mov	r1, r3
   3eb24:	ldr	r0, [fp, #-8]
   3eb28:	bl	3edb8 <__assert_fail@plt+0x2db48>
   3eb2c:	mov	r3, r0
   3eb30:	mov	r0, r3
   3eb34:	sub	sp, fp, #4
   3eb38:	pop	{fp, pc}
   3eb3c:	push	{fp, lr}
   3eb40:	add	fp, sp, #4
   3eb44:	sub	sp, sp, #8
   3eb48:	mov	r0, #14
   3eb4c:	bl	11228 <nl_langinfo@plt>
   3eb50:	str	r0, [fp, #-8]
   3eb54:	ldr	r3, [fp, #-8]
   3eb58:	cmp	r3, #0
   3eb5c:	bne	3eb68 <__assert_fail@plt+0x2d8f8>
   3eb60:	ldr	r3, [pc, #40]	; 3eb90 <__assert_fail@plt+0x2d920>
   3eb64:	str	r3, [fp, #-8]
   3eb68:	ldr	r3, [fp, #-8]
   3eb6c:	ldrb	r3, [r3]
   3eb70:	cmp	r3, #0
   3eb74:	bne	3eb80 <__assert_fail@plt+0x2d910>
   3eb78:	ldr	r3, [pc, #20]	; 3eb94 <__assert_fail@plt+0x2d924>
   3eb7c:	str	r3, [fp, #-8]
   3eb80:	ldr	r3, [fp, #-8]
   3eb84:	mov	r0, r3
   3eb88:	sub	sp, fp, #4
   3eb8c:	pop	{fp, pc}
   3eb90:	andeq	r1, r4, r4, ror #13
   3eb94:	andeq	r1, r4, r8, ror #13
   3eb98:	push	{fp, lr}
   3eb9c:	add	fp, sp, #4
   3eba0:	sub	sp, sp, #16
   3eba4:	str	r0, [fp, #-16]
   3eba8:	ldr	r0, [fp, #-16]
   3ebac:	bl	10fdc <wcwidth@plt>
   3ebb0:	str	r0, [fp, #-8]
   3ebb4:	ldr	r3, [fp, #-8]
   3ebb8:	cmp	r3, #0
   3ebbc:	bge	3ebe0 <__assert_fail@plt+0x2d970>
   3ebc0:	ldr	r0, [fp, #-16]
   3ebc4:	bl	11084 <iswcntrl@plt>
   3ebc8:	mov	r3, r0
   3ebcc:	cmp	r3, #0
   3ebd0:	moveq	r3, #1
   3ebd4:	movne	r3, #0
   3ebd8:	uxtb	r3, r3
   3ebdc:	b	3ebe4 <__assert_fail@plt+0x2d974>
   3ebe0:	ldr	r3, [fp, #-8]
   3ebe4:	mov	r0, r3
   3ebe8:	sub	sp, fp, #4
   3ebec:	pop	{fp, pc}
   3ebf0:	push	{fp, lr}
   3ebf4:	add	fp, sp, #4
   3ebf8:	sub	sp, sp, #8
   3ebfc:	str	r0, [fp, #-8]
   3ec00:	str	r1, [fp, #-12]
   3ec04:	ldr	r3, [fp, #-12]
   3ec08:	ldr	r2, [r3]
   3ec0c:	ldr	r3, [fp, #-12]
   3ec10:	add	r3, r3, #16
   3ec14:	cmp	r2, r3
   3ec18:	bne	3ec50 <__assert_fail@plt+0x2d9e0>
   3ec1c:	ldr	r3, [fp, #-8]
   3ec20:	add	r0, r3, #16
   3ec24:	ldr	r3, [fp, #-12]
   3ec28:	add	r1, r3, #16
   3ec2c:	ldr	r3, [fp, #-12]
   3ec30:	ldr	r3, [r3, #4]
   3ec34:	mov	r2, r3
   3ec38:	bl	11018 <memcpy@plt>
   3ec3c:	ldr	r3, [fp, #-8]
   3ec40:	add	r2, r3, #16
   3ec44:	ldr	r3, [fp, #-8]
   3ec48:	str	r2, [r3]
   3ec4c:	b	3ec60 <__assert_fail@plt+0x2d9f0>
   3ec50:	ldr	r3, [fp, #-12]
   3ec54:	ldr	r2, [r3]
   3ec58:	ldr	r3, [fp, #-8]
   3ec5c:	str	r2, [r3]
   3ec60:	ldr	r3, [fp, #-12]
   3ec64:	ldr	r2, [r3, #4]
   3ec68:	ldr	r3, [fp, #-8]
   3ec6c:	str	r2, [r3, #4]
   3ec70:	ldr	r3, [fp, #-12]
   3ec74:	ldrb	r2, [r3, #8]
   3ec78:	ldr	r3, [fp, #-8]
   3ec7c:	strb	r2, [r3, #8]
   3ec80:	ldr	r3, [fp, #-8]
   3ec84:	ldrb	r3, [r3, #8]
   3ec88:	cmp	r3, #0
   3ec8c:	beq	3eca0 <__assert_fail@plt+0x2da30>
   3ec90:	ldr	r3, [fp, #-12]
   3ec94:	ldr	r2, [r3, #12]
   3ec98:	ldr	r3, [fp, #-8]
   3ec9c:	str	r2, [r3, #12]
   3eca0:	nop			; (mov r0, r0)
   3eca4:	sub	sp, fp, #4
   3eca8:	pop	{fp, pc}
   3ecac:	push	{fp}		; (str fp, [sp, #-4]!)
   3ecb0:	add	fp, sp, #0
   3ecb4:	sub	sp, sp, #12
   3ecb8:	mov	r3, r0
   3ecbc:	strb	r3, [fp, #-5]
   3ecc0:	ldrb	r3, [fp, #-5]
   3ecc4:	lsr	r3, r3, #5
   3ecc8:	uxtb	r3, r3
   3eccc:	mov	r2, r3
   3ecd0:	ldr	r3, [pc, #48]	; 3ed08 <__assert_fail@plt+0x2da98>
   3ecd4:	ldr	r2, [r3, r2, lsl #2]
   3ecd8:	ldrb	r3, [fp, #-5]
   3ecdc:	and	r3, r3, #31
   3ece0:	lsr	r3, r2, r3
   3ece4:	and	r3, r3, #1
   3ece8:	cmp	r3, #0
   3ecec:	movne	r3, #1
   3ecf0:	moveq	r3, #0
   3ecf4:	uxtb	r3, r3
   3ecf8:	mov	r0, r3
   3ecfc:	add	sp, fp, #0
   3ed00:	pop	{fp}		; (ldr fp, [sp], #4)
   3ed04:	bx	lr
   3ed08:	strdeq	r1, [r4], -r0
   3ed0c:	push	{fp, lr}
   3ed10:	add	fp, sp, #4
   3ed14:	sub	sp, sp, #32
   3ed18:	str	r0, [fp, #-24]	; 0xffffffe8
   3ed1c:	str	r1, [fp, #-28]	; 0xffffffe4
   3ed20:	str	r2, [fp, #-32]	; 0xffffffe0
   3ed24:	str	r3, [fp, #-36]	; 0xffffffdc
   3ed28:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3ed2c:	cmp	r3, #0
   3ed30:	bne	3ed3c <__assert_fail@plt+0x2dacc>
   3ed34:	sub	r3, fp, #16
   3ed38:	str	r3, [fp, #-24]	; 0xffffffe8
   3ed3c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   3ed40:	ldr	r2, [fp, #-32]	; 0xffffffe0
   3ed44:	ldr	r1, [fp, #-28]	; 0xffffffe4
   3ed48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   3ed4c:	bl	110d8 <mbrtowc@plt>
   3ed50:	str	r0, [fp, #-8]
   3ed54:	ldr	r3, [fp, #-8]
   3ed58:	cmn	r3, #3
   3ed5c:	bls	3eda8 <__assert_fail@plt+0x2db38>
   3ed60:	ldr	r3, [fp, #-32]	; 0xffffffe0
   3ed64:	cmp	r3, #0
   3ed68:	beq	3eda8 <__assert_fail@plt+0x2db38>
   3ed6c:	mov	r0, #0
   3ed70:	bl	3f35c <__assert_fail@plt+0x2e0ec>
   3ed74:	mov	r3, r0
   3ed78:	eor	r3, r3, #1
   3ed7c:	uxtb	r3, r3
   3ed80:	cmp	r3, #0
   3ed84:	beq	3eda8 <__assert_fail@plt+0x2db38>
   3ed88:	ldr	r3, [fp, #-28]	; 0xffffffe4
   3ed8c:	ldrb	r3, [r3]
   3ed90:	strb	r3, [fp, #-9]
   3ed94:	ldrb	r2, [fp, #-9]
   3ed98:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3ed9c:	str	r2, [r3]
   3eda0:	mov	r3, #1
   3eda4:	b	3edac <__assert_fail@plt+0x2db3c>
   3eda8:	ldr	r3, [fp, #-8]
   3edac:	mov	r0, r3
   3edb0:	sub	sp, fp, #4
   3edb4:	pop	{fp, pc}
   3edb8:	push	{fp, lr}
   3edbc:	add	fp, sp, #4
   3edc0:	sub	sp, sp, #24
   3edc4:	str	r0, [fp, #-16]
   3edc8:	str	r1, [fp, #-20]	; 0xffffffec
   3edcc:	str	r2, [fp, #-24]	; 0xffffffe8
   3edd0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3edd4:	cmp	r3, #0
   3edd8:	beq	3ee14 <__assert_fail@plt+0x2dba4>
   3eddc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   3ede0:	mvn	r0, #0
   3ede4:	bl	3f560 <__assert_fail@plt+0x2e2f0>
   3ede8:	mov	r3, r0
   3edec:	mov	r2, r3
   3edf0:	ldr	r3, [fp, #-20]	; 0xffffffec
   3edf4:	cmp	r2, r3
   3edf8:	bcs	3ee14 <__assert_fail@plt+0x2dba4>
   3edfc:	ldr	r3, [fp, #-20]	; 0xffffffec
   3ee00:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3ee04:	mul	r3, r2, r3
   3ee08:	str	r3, [fp, #-8]
   3ee0c:	mov	r3, #1
   3ee10:	b	3ee28 <__assert_fail@plt+0x2dbb8>
   3ee14:	ldr	r3, [fp, #-20]	; 0xffffffec
   3ee18:	ldr	r2, [fp, #-24]	; 0xffffffe8
   3ee1c:	mul	r3, r2, r3
   3ee20:	str	r3, [fp, #-8]
   3ee24:	mov	r3, #0
   3ee28:	cmp	r3, #0
   3ee2c:	beq	3ee48 <__assert_fail@plt+0x2dbd8>
   3ee30:	bl	11198 <__errno_location@plt>
   3ee34:	mov	r2, r0
   3ee38:	mov	r3, #12
   3ee3c:	str	r3, [r2]
   3ee40:	mov	r3, #0
   3ee44:	b	3ee5c <__assert_fail@plt+0x2dbec>
   3ee48:	ldr	r3, [fp, #-8]
   3ee4c:	mov	r1, r3
   3ee50:	ldr	r0, [fp, #-16]
   3ee54:	bl	3e040 <__assert_fail@plt+0x2cdd0>
   3ee58:	mov	r3, r0
   3ee5c:	mov	r0, r3
   3ee60:	sub	sp, fp, #4
   3ee64:	pop	{fp, pc}
   3ee68:	push	{fp}		; (str fp, [sp, #-4]!)
   3ee6c:	add	fp, sp, #0
   3ee70:	sub	sp, sp, #12
   3ee74:	str	r0, [fp, #-8]
   3ee78:	ldr	r3, [fp, #-8]
   3ee7c:	cmp	r3, #90	; 0x5a
   3ee80:	bgt	3ee9c <__assert_fail@plt+0x2dc2c>
   3ee84:	cmp	r3, #65	; 0x41
   3ee88:	bge	3eea8 <__assert_fail@plt+0x2dc38>
   3ee8c:	sub	r3, r3, #48	; 0x30
   3ee90:	cmp	r3, #9
   3ee94:	bhi	3eeb0 <__assert_fail@plt+0x2dc40>
   3ee98:	b	3eea8 <__assert_fail@plt+0x2dc38>
   3ee9c:	sub	r3, r3, #97	; 0x61
   3eea0:	cmp	r3, #25
   3eea4:	bhi	3eeb0 <__assert_fail@plt+0x2dc40>
   3eea8:	mov	r3, #1
   3eeac:	b	3eeb4 <__assert_fail@plt+0x2dc44>
   3eeb0:	mov	r3, #0
   3eeb4:	mov	r0, r3
   3eeb8:	add	sp, fp, #0
   3eebc:	pop	{fp}		; (ldr fp, [sp], #4)
   3eec0:	bx	lr
   3eec4:	push	{fp}		; (str fp, [sp, #-4]!)
   3eec8:	add	fp, sp, #0
   3eecc:	sub	sp, sp, #12
   3eed0:	str	r0, [fp, #-8]
   3eed4:	ldr	r3, [fp, #-8]
   3eed8:	cmp	r3, #65	; 0x41
   3eedc:	blt	3eefc <__assert_fail@plt+0x2dc8c>
   3eee0:	cmp	r3, #90	; 0x5a
   3eee4:	ble	3eef4 <__assert_fail@plt+0x2dc84>
   3eee8:	sub	r3, r3, #97	; 0x61
   3eeec:	cmp	r3, #25
   3eef0:	bhi	3eefc <__assert_fail@plt+0x2dc8c>
   3eef4:	mov	r3, #1
   3eef8:	b	3ef00 <__assert_fail@plt+0x2dc90>
   3eefc:	mov	r3, #0
   3ef00:	mov	r0, r3
   3ef04:	add	sp, fp, #0
   3ef08:	pop	{fp}		; (ldr fp, [sp], #4)
   3ef0c:	bx	lr
   3ef10:	push	{fp}		; (str fp, [sp, #-4]!)
   3ef14:	add	fp, sp, #0
   3ef18:	sub	sp, sp, #12
   3ef1c:	str	r0, [fp, #-8]
   3ef20:	ldr	r3, [fp, #-8]
   3ef24:	add	r3, r3, #0
   3ef28:	cmp	r3, #127	; 0x7f
   3ef2c:	bhi	3ef38 <__assert_fail@plt+0x2dcc8>
   3ef30:	mov	r3, #1
   3ef34:	b	3ef3c <__assert_fail@plt+0x2dccc>
   3ef38:	mov	r3, #0
   3ef3c:	mov	r0, r3
   3ef40:	add	sp, fp, #0
   3ef44:	pop	{fp}		; (ldr fp, [sp], #4)
   3ef48:	bx	lr
   3ef4c:	push	{fp}		; (str fp, [sp, #-4]!)
   3ef50:	add	fp, sp, #0
   3ef54:	sub	sp, sp, #12
   3ef58:	str	r0, [fp, #-8]
   3ef5c:	ldr	r3, [fp, #-8]
   3ef60:	cmp	r3, #32
   3ef64:	beq	3ef74 <__assert_fail@plt+0x2dd04>
   3ef68:	ldr	r3, [fp, #-8]
   3ef6c:	cmp	r3, #9
   3ef70:	bne	3ef7c <__assert_fail@plt+0x2dd0c>
   3ef74:	mov	r3, #1
   3ef78:	b	3ef80 <__assert_fail@plt+0x2dd10>
   3ef7c:	mov	r3, #0
   3ef80:	and	r3, r3, #1
   3ef84:	uxtb	r3, r3
   3ef88:	mov	r0, r3
   3ef8c:	add	sp, fp, #0
   3ef90:	pop	{fp}		; (ldr fp, [sp], #4)
   3ef94:	bx	lr
   3ef98:	push	{fp}		; (str fp, [sp, #-4]!)
   3ef9c:	add	fp, sp, #0
   3efa0:	sub	sp, sp, #12
   3efa4:	str	r0, [fp, #-8]
   3efa8:	ldr	r3, [fp, #-8]
   3efac:	cmp	r3, #0
   3efb0:	blt	3efcc <__assert_fail@plt+0x2dd5c>
   3efb4:	cmp	r3, #31
   3efb8:	ble	3efc4 <__assert_fail@plt+0x2dd54>
   3efbc:	cmp	r3, #127	; 0x7f
   3efc0:	bne	3efcc <__assert_fail@plt+0x2dd5c>
   3efc4:	mov	r3, #1
   3efc8:	b	3efd0 <__assert_fail@plt+0x2dd60>
   3efcc:	mov	r3, #0
   3efd0:	mov	r0, r3
   3efd4:	add	sp, fp, #0
   3efd8:	pop	{fp}		; (ldr fp, [sp], #4)
   3efdc:	bx	lr
   3efe0:	push	{fp}		; (str fp, [sp, #-4]!)
   3efe4:	add	fp, sp, #0
   3efe8:	sub	sp, sp, #12
   3efec:	str	r0, [fp, #-8]
   3eff0:	ldr	r3, [fp, #-8]
   3eff4:	sub	r3, r3, #48	; 0x30
   3eff8:	cmp	r3, #9
   3effc:	bhi	3f008 <__assert_fail@plt+0x2dd98>
   3f000:	mov	r3, #1
   3f004:	b	3f00c <__assert_fail@plt+0x2dd9c>
   3f008:	mov	r3, #0
   3f00c:	mov	r0, r3
   3f010:	add	sp, fp, #0
   3f014:	pop	{fp}		; (ldr fp, [sp], #4)
   3f018:	bx	lr
   3f01c:	push	{fp}		; (str fp, [sp, #-4]!)
   3f020:	add	fp, sp, #0
   3f024:	sub	sp, sp, #12
   3f028:	str	r0, [fp, #-8]
   3f02c:	ldr	r3, [fp, #-8]
   3f030:	sub	r3, r3, #33	; 0x21
   3f034:	cmp	r3, #93	; 0x5d
   3f038:	bhi	3f044 <__assert_fail@plt+0x2ddd4>
   3f03c:	mov	r3, #1
   3f040:	b	3f048 <__assert_fail@plt+0x2ddd8>
   3f044:	mov	r3, #0
   3f048:	mov	r0, r3
   3f04c:	add	sp, fp, #0
   3f050:	pop	{fp}		; (ldr fp, [sp], #4)
   3f054:	bx	lr
   3f058:	push	{fp}		; (str fp, [sp, #-4]!)
   3f05c:	add	fp, sp, #0
   3f060:	sub	sp, sp, #12
   3f064:	str	r0, [fp, #-8]
   3f068:	ldr	r3, [fp, #-8]
   3f06c:	sub	r3, r3, #97	; 0x61
   3f070:	cmp	r3, #25
   3f074:	bhi	3f080 <__assert_fail@plt+0x2de10>
   3f078:	mov	r3, #1
   3f07c:	b	3f084 <__assert_fail@plt+0x2de14>
   3f080:	mov	r3, #0
   3f084:	mov	r0, r3
   3f088:	add	sp, fp, #0
   3f08c:	pop	{fp}		; (ldr fp, [sp], #4)
   3f090:	bx	lr
   3f094:	push	{fp}		; (str fp, [sp, #-4]!)
   3f098:	add	fp, sp, #0
   3f09c:	sub	sp, sp, #12
   3f0a0:	str	r0, [fp, #-8]
   3f0a4:	ldr	r3, [fp, #-8]
   3f0a8:	sub	r3, r3, #32
   3f0ac:	cmp	r3, #94	; 0x5e
   3f0b0:	bhi	3f0bc <__assert_fail@plt+0x2de4c>
   3f0b4:	mov	r3, #1
   3f0b8:	b	3f0c0 <__assert_fail@plt+0x2de50>
   3f0bc:	mov	r3, #0
   3f0c0:	mov	r0, r3
   3f0c4:	add	sp, fp, #0
   3f0c8:	pop	{fp}		; (ldr fp, [sp], #4)
   3f0cc:	bx	lr
   3f0d0:	push	{fp}		; (str fp, [sp, #-4]!)
   3f0d4:	add	fp, sp, #0
   3f0d8:	sub	sp, sp, #12
   3f0dc:	str	r0, [fp, #-8]
   3f0e0:	ldr	r3, [fp, #-8]
   3f0e4:	cmp	r3, #64	; 0x40
   3f0e8:	bgt	3f104 <__assert_fail@plt+0x2de94>
   3f0ec:	cmp	r3, #58	; 0x3a
   3f0f0:	bge	3f120 <__assert_fail@plt+0x2deb0>
   3f0f4:	sub	r3, r3, #33	; 0x21
   3f0f8:	cmp	r3, #14
   3f0fc:	bhi	3f128 <__assert_fail@plt+0x2deb8>
   3f100:	b	3f120 <__assert_fail@plt+0x2deb0>
   3f104:	cmp	r3, #91	; 0x5b
   3f108:	blt	3f128 <__assert_fail@plt+0x2deb8>
   3f10c:	cmp	r3, #96	; 0x60
   3f110:	ble	3f120 <__assert_fail@plt+0x2deb0>
   3f114:	sub	r3, r3, #123	; 0x7b
   3f118:	cmp	r3, #3
   3f11c:	bhi	3f128 <__assert_fail@plt+0x2deb8>
   3f120:	mov	r3, #1
   3f124:	b	3f12c <__assert_fail@plt+0x2debc>
   3f128:	mov	r3, #0
   3f12c:	mov	r0, r3
   3f130:	add	sp, fp, #0
   3f134:	pop	{fp}		; (ldr fp, [sp], #4)
   3f138:	bx	lr
   3f13c:	push	{fp}		; (str fp, [sp, #-4]!)
   3f140:	add	fp, sp, #0
   3f144:	sub	sp, sp, #12
   3f148:	str	r0, [fp, #-8]
   3f14c:	ldr	r3, [fp, #-8]
   3f150:	cmp	r3, #9
   3f154:	blt	3f170 <__assert_fail@plt+0x2df00>
   3f158:	cmp	r3, #13
   3f15c:	ble	3f168 <__assert_fail@plt+0x2def8>
   3f160:	cmp	r3, #32
   3f164:	bne	3f170 <__assert_fail@plt+0x2df00>
   3f168:	mov	r3, #1
   3f16c:	b	3f174 <__assert_fail@plt+0x2df04>
   3f170:	mov	r3, #0
   3f174:	mov	r0, r3
   3f178:	add	sp, fp, #0
   3f17c:	pop	{fp}		; (ldr fp, [sp], #4)
   3f180:	bx	lr
   3f184:	push	{fp}		; (str fp, [sp, #-4]!)
   3f188:	add	fp, sp, #0
   3f18c:	sub	sp, sp, #12
   3f190:	str	r0, [fp, #-8]
   3f194:	ldr	r3, [fp, #-8]
   3f198:	sub	r3, r3, #65	; 0x41
   3f19c:	cmp	r3, #25
   3f1a0:	bhi	3f1ac <__assert_fail@plt+0x2df3c>
   3f1a4:	mov	r3, #1
   3f1a8:	b	3f1b0 <__assert_fail@plt+0x2df40>
   3f1ac:	mov	r3, #0
   3f1b0:	mov	r0, r3
   3f1b4:	add	sp, fp, #0
   3f1b8:	pop	{fp}		; (ldr fp, [sp], #4)
   3f1bc:	bx	lr
   3f1c0:	push	{fp}		; (str fp, [sp, #-4]!)
   3f1c4:	add	fp, sp, #0
   3f1c8:	sub	sp, sp, #12
   3f1cc:	str	r0, [fp, #-8]
   3f1d0:	ldr	r3, [fp, #-8]
   3f1d4:	sub	r3, r3, #48	; 0x30
   3f1d8:	cmp	r3, #54	; 0x36
   3f1dc:	addls	pc, pc, r3, lsl #2
   3f1e0:	b	3f2c8 <__assert_fail@plt+0x2e058>
   3f1e4:	b	3f2c0 <__assert_fail@plt+0x2e050>
   3f1e8:	b	3f2c0 <__assert_fail@plt+0x2e050>
   3f1ec:	b	3f2c0 <__assert_fail@plt+0x2e050>
   3f1f0:	b	3f2c0 <__assert_fail@plt+0x2e050>
   3f1f4:	b	3f2c0 <__assert_fail@plt+0x2e050>
   3f1f8:	b	3f2c0 <__assert_fail@plt+0x2e050>
   3f1fc:	b	3f2c0 <__assert_fail@plt+0x2e050>
   3f200:	b	3f2c0 <__assert_fail@plt+0x2e050>
   3f204:	b	3f2c0 <__assert_fail@plt+0x2e050>
   3f208:	b	3f2c0 <__assert_fail@plt+0x2e050>
   3f20c:	b	3f2c8 <__assert_fail@plt+0x2e058>
   3f210:	b	3f2c8 <__assert_fail@plt+0x2e058>
   3f214:	b	3f2c8 <__assert_fail@plt+0x2e058>
   3f218:	b	3f2c8 <__assert_fail@plt+0x2e058>
   3f21c:	b	3f2c8 <__assert_fail@plt+0x2e058>
   3f220:	b	3f2c8 <__assert_fail@plt+0x2e058>
   3f224:	b	3f2c8 <__assert_fail@plt+0x2e058>
   3f228:	b	3f2c0 <__assert_fail@plt+0x2e050>
   3f22c:	b	3f2c0 <__assert_fail@plt+0x2e050>
   3f230:	b	3f2c0 <__assert_fail@plt+0x2e050>
   3f234:	b	3f2c0 <__assert_fail@plt+0x2e050>
   3f238:	b	3f2c0 <__assert_fail@plt+0x2e050>
   3f23c:	b	3f2c0 <__assert_fail@plt+0x2e050>
   3f240:	b	3f2c8 <__assert_fail@plt+0x2e058>
   3f244:	b	3f2c8 <__assert_fail@plt+0x2e058>
   3f248:	b	3f2c8 <__assert_fail@plt+0x2e058>
   3f24c:	b	3f2c8 <__assert_fail@plt+0x2e058>
   3f250:	b	3f2c8 <__assert_fail@plt+0x2e058>
   3f254:	b	3f2c8 <__assert_fail@plt+0x2e058>
   3f258:	b	3f2c8 <__assert_fail@plt+0x2e058>
   3f25c:	b	3f2c8 <__assert_fail@plt+0x2e058>
   3f260:	b	3f2c8 <__assert_fail@plt+0x2e058>
   3f264:	b	3f2c8 <__assert_fail@plt+0x2e058>
   3f268:	b	3f2c8 <__assert_fail@plt+0x2e058>
   3f26c:	b	3f2c8 <__assert_fail@plt+0x2e058>
   3f270:	b	3f2c8 <__assert_fail@plt+0x2e058>
   3f274:	b	3f2c8 <__assert_fail@plt+0x2e058>
   3f278:	b	3f2c8 <__assert_fail@plt+0x2e058>
   3f27c:	b	3f2c8 <__assert_fail@plt+0x2e058>
   3f280:	b	3f2c8 <__assert_fail@plt+0x2e058>
   3f284:	b	3f2c8 <__assert_fail@plt+0x2e058>
   3f288:	b	3f2c8 <__assert_fail@plt+0x2e058>
   3f28c:	b	3f2c8 <__assert_fail@plt+0x2e058>
   3f290:	b	3f2c8 <__assert_fail@plt+0x2e058>
   3f294:	b	3f2c8 <__assert_fail@plt+0x2e058>
   3f298:	b	3f2c8 <__assert_fail@plt+0x2e058>
   3f29c:	b	3f2c8 <__assert_fail@plt+0x2e058>
   3f2a0:	b	3f2c8 <__assert_fail@plt+0x2e058>
   3f2a4:	b	3f2c8 <__assert_fail@plt+0x2e058>
   3f2a8:	b	3f2c0 <__assert_fail@plt+0x2e050>
   3f2ac:	b	3f2c0 <__assert_fail@plt+0x2e050>
   3f2b0:	b	3f2c0 <__assert_fail@plt+0x2e050>
   3f2b4:	b	3f2c0 <__assert_fail@plt+0x2e050>
   3f2b8:	b	3f2c0 <__assert_fail@plt+0x2e050>
   3f2bc:	b	3f2c0 <__assert_fail@plt+0x2e050>
   3f2c0:	mov	r3, #1
   3f2c4:	b	3f2cc <__assert_fail@plt+0x2e05c>
   3f2c8:	mov	r3, #0
   3f2cc:	mov	r0, r3
   3f2d0:	add	sp, fp, #0
   3f2d4:	pop	{fp}		; (ldr fp, [sp], #4)
   3f2d8:	bx	lr
   3f2dc:	push	{fp}		; (str fp, [sp, #-4]!)
   3f2e0:	add	fp, sp, #0
   3f2e4:	sub	sp, sp, #12
   3f2e8:	str	r0, [fp, #-8]
   3f2ec:	ldr	r3, [fp, #-8]
   3f2f0:	sub	r3, r3, #65	; 0x41
   3f2f4:	cmp	r3, #25
   3f2f8:	bhi	3f308 <__assert_fail@plt+0x2e098>
   3f2fc:	ldr	r3, [fp, #-8]
   3f300:	add	r3, r3, #32
   3f304:	b	3f30c <__assert_fail@plt+0x2e09c>
   3f308:	ldr	r3, [fp, #-8]
   3f30c:	mov	r0, r3
   3f310:	add	sp, fp, #0
   3f314:	pop	{fp}		; (ldr fp, [sp], #4)
   3f318:	bx	lr
   3f31c:	push	{fp}		; (str fp, [sp, #-4]!)
   3f320:	add	fp, sp, #0
   3f324:	sub	sp, sp, #12
   3f328:	str	r0, [fp, #-8]
   3f32c:	ldr	r3, [fp, #-8]
   3f330:	sub	r3, r3, #97	; 0x61
   3f334:	cmp	r3, #25
   3f338:	bhi	3f348 <__assert_fail@plt+0x2e0d8>
   3f33c:	ldr	r3, [fp, #-8]
   3f340:	sub	r3, r3, #32
   3f344:	b	3f34c <__assert_fail@plt+0x2e0dc>
   3f348:	ldr	r3, [fp, #-8]
   3f34c:	mov	r0, r3
   3f350:	add	sp, fp, #0
   3f354:	pop	{fp}		; (ldr fp, [sp], #4)
   3f358:	bx	lr
   3f35c:	push	{fp, lr}
   3f360:	add	fp, sp, #4
   3f364:	sub	sp, sp, #272	; 0x110
   3f368:	str	r0, [fp, #-272]	; 0xfffffef0
   3f36c:	sub	r3, fp, #264	; 0x108
   3f370:	ldr	r2, [pc, #116]	; 3f3ec <__assert_fail@plt+0x2e17c>
   3f374:	mov	r1, r3
   3f378:	ldr	r0, [fp, #-272]	; 0xfffffef0
   3f37c:	bl	3f500 <__assert_fail@plt+0x2e290>
   3f380:	mov	r3, r0
   3f384:	cmp	r3, #0
   3f388:	beq	3f394 <__assert_fail@plt+0x2e124>
   3f38c:	mov	r3, #0
   3f390:	b	3f3e0 <__assert_fail@plt+0x2e170>
   3f394:	sub	r3, fp, #264	; 0x108
   3f398:	ldr	r1, [pc, #80]	; 3f3f0 <__assert_fail@plt+0x2e180>
   3f39c:	mov	r0, r3
   3f3a0:	bl	10fa0 <strcmp@plt>
   3f3a4:	mov	r3, r0
   3f3a8:	cmp	r3, #0
   3f3ac:	beq	3f3d4 <__assert_fail@plt+0x2e164>
   3f3b0:	sub	r3, fp, #264	; 0x108
   3f3b4:	ldr	r1, [pc, #56]	; 3f3f4 <__assert_fail@plt+0x2e184>
   3f3b8:	mov	r0, r3
   3f3bc:	bl	10fa0 <strcmp@plt>
   3f3c0:	mov	r3, r0
   3f3c4:	cmp	r3, #0
   3f3c8:	beq	3f3d4 <__assert_fail@plt+0x2e164>
   3f3cc:	mov	r3, #1
   3f3d0:	b	3f3d8 <__assert_fail@plt+0x2e168>
   3f3d4:	mov	r3, #0
   3f3d8:	and	r3, r3, #1
   3f3dc:	uxtb	r3, r3
   3f3e0:	mov	r0, r3
   3f3e4:	sub	sp, fp, #4
   3f3e8:	pop	{fp, pc}
   3f3ec:	andeq	r0, r0, r1, lsl #2
   3f3f0:	andeq	r1, r4, r0, lsl r7
   3f3f4:	andeq	r1, r4, r4, lsl r7
   3f3f8:	push	{fp, lr}
   3f3fc:	add	fp, sp, #4
   3f400:	sub	sp, sp, #16
   3f404:	str	r0, [fp, #-16]
   3f408:	mov	r1, #0
   3f40c:	ldr	r0, [fp, #-16]
   3f410:	bl	11204 <setlocale@plt>
   3f414:	str	r0, [fp, #-8]
   3f418:	ldr	r3, [fp, #-8]
   3f41c:	mov	r0, r3
   3f420:	sub	sp, fp, #4
   3f424:	pop	{fp, pc}
   3f428:	push	{fp, lr}
   3f42c:	add	fp, sp, #4
   3f430:	sub	sp, sp, #24
   3f434:	str	r0, [fp, #-16]
   3f438:	str	r1, [fp, #-20]	; 0xffffffec
   3f43c:	str	r2, [fp, #-24]	; 0xffffffe8
   3f440:	ldr	r0, [fp, #-16]
   3f444:	bl	3f3f8 <__assert_fail@plt+0x2e188>
   3f448:	str	r0, [fp, #-8]
   3f44c:	ldr	r3, [fp, #-8]
   3f450:	cmp	r3, #0
   3f454:	bne	3f478 <__assert_fail@plt+0x2e208>
   3f458:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3f45c:	cmp	r3, #0
   3f460:	beq	3f470 <__assert_fail@plt+0x2e200>
   3f464:	ldr	r3, [fp, #-20]	; 0xffffffec
   3f468:	mov	r2, #0
   3f46c:	strb	r2, [r3]
   3f470:	mov	r3, #22
   3f474:	b	3f4f4 <__assert_fail@plt+0x2e284>
   3f478:	ldr	r0, [fp, #-8]
   3f47c:	bl	11174 <strlen@plt>
   3f480:	str	r0, [fp, #-12]
   3f484:	ldr	r2, [fp, #-12]
   3f488:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3f48c:	cmp	r2, r3
   3f490:	bcs	3f4b4 <__assert_fail@plt+0x2e244>
   3f494:	ldr	r3, [fp, #-12]
   3f498:	add	r3, r3, #1
   3f49c:	mov	r2, r3
   3f4a0:	ldr	r1, [fp, #-8]
   3f4a4:	ldr	r0, [fp, #-20]	; 0xffffffec
   3f4a8:	bl	11018 <memcpy@plt>
   3f4ac:	mov	r3, #0
   3f4b0:	b	3f4f4 <__assert_fail@plt+0x2e284>
   3f4b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3f4b8:	cmp	r3, #0
   3f4bc:	beq	3f4f0 <__assert_fail@plt+0x2e280>
   3f4c0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3f4c4:	sub	r3, r3, #1
   3f4c8:	mov	r2, r3
   3f4cc:	ldr	r1, [fp, #-8]
   3f4d0:	ldr	r0, [fp, #-20]	; 0xffffffec
   3f4d4:	bl	11018 <memcpy@plt>
   3f4d8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   3f4dc:	sub	r3, r3, #1
   3f4e0:	ldr	r2, [fp, #-20]	; 0xffffffec
   3f4e4:	add	r3, r2, r3
   3f4e8:	mov	r2, #0
   3f4ec:	strb	r2, [r3]
   3f4f0:	mov	r3, #34	; 0x22
   3f4f4:	mov	r0, r3
   3f4f8:	sub	sp, fp, #4
   3f4fc:	pop	{fp, pc}
   3f500:	push	{fp, lr}
   3f504:	add	fp, sp, #4
   3f508:	sub	sp, sp, #16
   3f50c:	str	r0, [fp, #-8]
   3f510:	str	r1, [fp, #-12]
   3f514:	str	r2, [fp, #-16]
   3f518:	ldr	r2, [fp, #-16]
   3f51c:	ldr	r1, [fp, #-12]
   3f520:	ldr	r0, [fp, #-8]
   3f524:	bl	3f428 <__assert_fail@plt+0x2e1b8>
   3f528:	mov	r3, r0
   3f52c:	mov	r0, r3
   3f530:	sub	sp, fp, #4
   3f534:	pop	{fp, pc}
   3f538:	push	{fp, lr}
   3f53c:	add	fp, sp, #4
   3f540:	sub	sp, sp, #8
   3f544:	str	r0, [fp, #-8]
   3f548:	ldr	r0, [fp, #-8]
   3f54c:	bl	3f3f8 <__assert_fail@plt+0x2e188>
   3f550:	mov	r3, r0
   3f554:	mov	r0, r3
   3f558:	sub	sp, fp, #4
   3f55c:	pop	{fp, pc}
   3f560:	subs	r2, r1, #1
   3f564:	bxeq	lr
   3f568:	bcc	3f740 <__assert_fail@plt+0x2e4d0>
   3f56c:	cmp	r0, r1
   3f570:	bls	3f724 <__assert_fail@plt+0x2e4b4>
   3f574:	tst	r1, r2
   3f578:	beq	3f730 <__assert_fail@plt+0x2e4c0>
   3f57c:	clz	r3, r0
   3f580:	clz	r2, r1
   3f584:	sub	r3, r2, r3
   3f588:	rsbs	r3, r3, #31
   3f58c:	addne	r3, r3, r3, lsl #1
   3f590:	mov	r2, #0
   3f594:	addne	pc, pc, r3, lsl #2
   3f598:	nop			; (mov r0, r0)
   3f59c:	cmp	r0, r1, lsl #31
   3f5a0:	adc	r2, r2, r2
   3f5a4:	subcs	r0, r0, r1, lsl #31
   3f5a8:	cmp	r0, r1, lsl #30
   3f5ac:	adc	r2, r2, r2
   3f5b0:	subcs	r0, r0, r1, lsl #30
   3f5b4:	cmp	r0, r1, lsl #29
   3f5b8:	adc	r2, r2, r2
   3f5bc:	subcs	r0, r0, r1, lsl #29
   3f5c0:	cmp	r0, r1, lsl #28
   3f5c4:	adc	r2, r2, r2
   3f5c8:	subcs	r0, r0, r1, lsl #28
   3f5cc:	cmp	r0, r1, lsl #27
   3f5d0:	adc	r2, r2, r2
   3f5d4:	subcs	r0, r0, r1, lsl #27
   3f5d8:	cmp	r0, r1, lsl #26
   3f5dc:	adc	r2, r2, r2
   3f5e0:	subcs	r0, r0, r1, lsl #26
   3f5e4:	cmp	r0, r1, lsl #25
   3f5e8:	adc	r2, r2, r2
   3f5ec:	subcs	r0, r0, r1, lsl #25
   3f5f0:	cmp	r0, r1, lsl #24
   3f5f4:	adc	r2, r2, r2
   3f5f8:	subcs	r0, r0, r1, lsl #24
   3f5fc:	cmp	r0, r1, lsl #23
   3f600:	adc	r2, r2, r2
   3f604:	subcs	r0, r0, r1, lsl #23
   3f608:	cmp	r0, r1, lsl #22
   3f60c:	adc	r2, r2, r2
   3f610:	subcs	r0, r0, r1, lsl #22
   3f614:	cmp	r0, r1, lsl #21
   3f618:	adc	r2, r2, r2
   3f61c:	subcs	r0, r0, r1, lsl #21
   3f620:	cmp	r0, r1, lsl #20
   3f624:	adc	r2, r2, r2
   3f628:	subcs	r0, r0, r1, lsl #20
   3f62c:	cmp	r0, r1, lsl #19
   3f630:	adc	r2, r2, r2
   3f634:	subcs	r0, r0, r1, lsl #19
   3f638:	cmp	r0, r1, lsl #18
   3f63c:	adc	r2, r2, r2
   3f640:	subcs	r0, r0, r1, lsl #18
   3f644:	cmp	r0, r1, lsl #17
   3f648:	adc	r2, r2, r2
   3f64c:	subcs	r0, r0, r1, lsl #17
   3f650:	cmp	r0, r1, lsl #16
   3f654:	adc	r2, r2, r2
   3f658:	subcs	r0, r0, r1, lsl #16
   3f65c:	cmp	r0, r1, lsl #15
   3f660:	adc	r2, r2, r2
   3f664:	subcs	r0, r0, r1, lsl #15
   3f668:	cmp	r0, r1, lsl #14
   3f66c:	adc	r2, r2, r2
   3f670:	subcs	r0, r0, r1, lsl #14
   3f674:	cmp	r0, r1, lsl #13
   3f678:	adc	r2, r2, r2
   3f67c:	subcs	r0, r0, r1, lsl #13
   3f680:	cmp	r0, r1, lsl #12
   3f684:	adc	r2, r2, r2
   3f688:	subcs	r0, r0, r1, lsl #12
   3f68c:	cmp	r0, r1, lsl #11
   3f690:	adc	r2, r2, r2
   3f694:	subcs	r0, r0, r1, lsl #11
   3f698:	cmp	r0, r1, lsl #10
   3f69c:	adc	r2, r2, r2
   3f6a0:	subcs	r0, r0, r1, lsl #10
   3f6a4:	cmp	r0, r1, lsl #9
   3f6a8:	adc	r2, r2, r2
   3f6ac:	subcs	r0, r0, r1, lsl #9
   3f6b0:	cmp	r0, r1, lsl #8
   3f6b4:	adc	r2, r2, r2
   3f6b8:	subcs	r0, r0, r1, lsl #8
   3f6bc:	cmp	r0, r1, lsl #7
   3f6c0:	adc	r2, r2, r2
   3f6c4:	subcs	r0, r0, r1, lsl #7
   3f6c8:	cmp	r0, r1, lsl #6
   3f6cc:	adc	r2, r2, r2
   3f6d0:	subcs	r0, r0, r1, lsl #6
   3f6d4:	cmp	r0, r1, lsl #5
   3f6d8:	adc	r2, r2, r2
   3f6dc:	subcs	r0, r0, r1, lsl #5
   3f6e0:	cmp	r0, r1, lsl #4
   3f6e4:	adc	r2, r2, r2
   3f6e8:	subcs	r0, r0, r1, lsl #4
   3f6ec:	cmp	r0, r1, lsl #3
   3f6f0:	adc	r2, r2, r2
   3f6f4:	subcs	r0, r0, r1, lsl #3
   3f6f8:	cmp	r0, r1, lsl #2
   3f6fc:	adc	r2, r2, r2
   3f700:	subcs	r0, r0, r1, lsl #2
   3f704:	cmp	r0, r1, lsl #1
   3f708:	adc	r2, r2, r2
   3f70c:	subcs	r0, r0, r1, lsl #1
   3f710:	cmp	r0, r1
   3f714:	adc	r2, r2, r2
   3f718:	subcs	r0, r0, r1
   3f71c:	mov	r0, r2
   3f720:	bx	lr
   3f724:	moveq	r0, #1
   3f728:	movne	r0, #0
   3f72c:	bx	lr
   3f730:	clz	r2, r1
   3f734:	rsb	r2, r2, #31
   3f738:	lsr	r0, r0, r2
   3f73c:	bx	lr
   3f740:	cmp	r0, #0
   3f744:	mvnne	r0, #0
   3f748:	b	3f9ac <__assert_fail@plt+0x2e73c>
   3f74c:	cmp	r1, #0
   3f750:	beq	3f740 <__assert_fail@plt+0x2e4d0>
   3f754:	push	{r0, r1, lr}
   3f758:	bl	3f560 <__assert_fail@plt+0x2e2f0>
   3f75c:	pop	{r1, r2, lr}
   3f760:	mul	r3, r2, r0
   3f764:	sub	r1, r1, r3
   3f768:	bx	lr
   3f76c:	cmp	r1, #0
   3f770:	beq	3f97c <__assert_fail@plt+0x2e70c>
   3f774:	eor	ip, r0, r1
   3f778:	rsbmi	r1, r1, #0
   3f77c:	subs	r2, r1, #1
   3f780:	beq	3f948 <__assert_fail@plt+0x2e6d8>
   3f784:	movs	r3, r0
   3f788:	rsbmi	r3, r0, #0
   3f78c:	cmp	r3, r1
   3f790:	bls	3f954 <__assert_fail@plt+0x2e6e4>
   3f794:	tst	r1, r2
   3f798:	beq	3f964 <__assert_fail@plt+0x2e6f4>
   3f79c:	clz	r2, r3
   3f7a0:	clz	r0, r1
   3f7a4:	sub	r2, r0, r2
   3f7a8:	rsbs	r2, r2, #31
   3f7ac:	addne	r2, r2, r2, lsl #1
   3f7b0:	mov	r0, #0
   3f7b4:	addne	pc, pc, r2, lsl #2
   3f7b8:	nop			; (mov r0, r0)
   3f7bc:	cmp	r3, r1, lsl #31
   3f7c0:	adc	r0, r0, r0
   3f7c4:	subcs	r3, r3, r1, lsl #31
   3f7c8:	cmp	r3, r1, lsl #30
   3f7cc:	adc	r0, r0, r0
   3f7d0:	subcs	r3, r3, r1, lsl #30
   3f7d4:	cmp	r3, r1, lsl #29
   3f7d8:	adc	r0, r0, r0
   3f7dc:	subcs	r3, r3, r1, lsl #29
   3f7e0:	cmp	r3, r1, lsl #28
   3f7e4:	adc	r0, r0, r0
   3f7e8:	subcs	r3, r3, r1, lsl #28
   3f7ec:	cmp	r3, r1, lsl #27
   3f7f0:	adc	r0, r0, r0
   3f7f4:	subcs	r3, r3, r1, lsl #27
   3f7f8:	cmp	r3, r1, lsl #26
   3f7fc:	adc	r0, r0, r0
   3f800:	subcs	r3, r3, r1, lsl #26
   3f804:	cmp	r3, r1, lsl #25
   3f808:	adc	r0, r0, r0
   3f80c:	subcs	r3, r3, r1, lsl #25
   3f810:	cmp	r3, r1, lsl #24
   3f814:	adc	r0, r0, r0
   3f818:	subcs	r3, r3, r1, lsl #24
   3f81c:	cmp	r3, r1, lsl #23
   3f820:	adc	r0, r0, r0
   3f824:	subcs	r3, r3, r1, lsl #23
   3f828:	cmp	r3, r1, lsl #22
   3f82c:	adc	r0, r0, r0
   3f830:	subcs	r3, r3, r1, lsl #22
   3f834:	cmp	r3, r1, lsl #21
   3f838:	adc	r0, r0, r0
   3f83c:	subcs	r3, r3, r1, lsl #21
   3f840:	cmp	r3, r1, lsl #20
   3f844:	adc	r0, r0, r0
   3f848:	subcs	r3, r3, r1, lsl #20
   3f84c:	cmp	r3, r1, lsl #19
   3f850:	adc	r0, r0, r0
   3f854:	subcs	r3, r3, r1, lsl #19
   3f858:	cmp	r3, r1, lsl #18
   3f85c:	adc	r0, r0, r0
   3f860:	subcs	r3, r3, r1, lsl #18
   3f864:	cmp	r3, r1, lsl #17
   3f868:	adc	r0, r0, r0
   3f86c:	subcs	r3, r3, r1, lsl #17
   3f870:	cmp	r3, r1, lsl #16
   3f874:	adc	r0, r0, r0
   3f878:	subcs	r3, r3, r1, lsl #16
   3f87c:	cmp	r3, r1, lsl #15
   3f880:	adc	r0, r0, r0
   3f884:	subcs	r3, r3, r1, lsl #15
   3f888:	cmp	r3, r1, lsl #14
   3f88c:	adc	r0, r0, r0
   3f890:	subcs	r3, r3, r1, lsl #14
   3f894:	cmp	r3, r1, lsl #13
   3f898:	adc	r0, r0, r0
   3f89c:	subcs	r3, r3, r1, lsl #13
   3f8a0:	cmp	r3, r1, lsl #12
   3f8a4:	adc	r0, r0, r0
   3f8a8:	subcs	r3, r3, r1, lsl #12
   3f8ac:	cmp	r3, r1, lsl #11
   3f8b0:	adc	r0, r0, r0
   3f8b4:	subcs	r3, r3, r1, lsl #11
   3f8b8:	cmp	r3, r1, lsl #10
   3f8bc:	adc	r0, r0, r0
   3f8c0:	subcs	r3, r3, r1, lsl #10
   3f8c4:	cmp	r3, r1, lsl #9
   3f8c8:	adc	r0, r0, r0
   3f8cc:	subcs	r3, r3, r1, lsl #9
   3f8d0:	cmp	r3, r1, lsl #8
   3f8d4:	adc	r0, r0, r0
   3f8d8:	subcs	r3, r3, r1, lsl #8
   3f8dc:	cmp	r3, r1, lsl #7
   3f8e0:	adc	r0, r0, r0
   3f8e4:	subcs	r3, r3, r1, lsl #7
   3f8e8:	cmp	r3, r1, lsl #6
   3f8ec:	adc	r0, r0, r0
   3f8f0:	subcs	r3, r3, r1, lsl #6
   3f8f4:	cmp	r3, r1, lsl #5
   3f8f8:	adc	r0, r0, r0
   3f8fc:	subcs	r3, r3, r1, lsl #5
   3f900:	cmp	r3, r1, lsl #4
   3f904:	adc	r0, r0, r0
   3f908:	subcs	r3, r3, r1, lsl #4
   3f90c:	cmp	r3, r1, lsl #3
   3f910:	adc	r0, r0, r0
   3f914:	subcs	r3, r3, r1, lsl #3
   3f918:	cmp	r3, r1, lsl #2
   3f91c:	adc	r0, r0, r0
   3f920:	subcs	r3, r3, r1, lsl #2
   3f924:	cmp	r3, r1, lsl #1
   3f928:	adc	r0, r0, r0
   3f92c:	subcs	r3, r3, r1, lsl #1
   3f930:	cmp	r3, r1
   3f934:	adc	r0, r0, r0
   3f938:	subcs	r3, r3, r1
   3f93c:	cmp	ip, #0
   3f940:	rsbmi	r0, r0, #0
   3f944:	bx	lr
   3f948:	teq	ip, r0
   3f94c:	rsbmi	r0, r0, #0
   3f950:	bx	lr
   3f954:	movcc	r0, #0
   3f958:	asreq	r0, ip, #31
   3f95c:	orreq	r0, r0, #1
   3f960:	bx	lr
   3f964:	clz	r2, r1
   3f968:	rsb	r2, r2, #31
   3f96c:	cmp	ip, #0
   3f970:	lsr	r0, r3, r2
   3f974:	rsbmi	r0, r0, #0
   3f978:	bx	lr
   3f97c:	cmp	r0, #0
   3f980:	mvngt	r0, #-2147483648	; 0x80000000
   3f984:	movlt	r0, #-2147483648	; 0x80000000
   3f988:	b	3f9ac <__assert_fail@plt+0x2e73c>
   3f98c:	cmp	r1, #0
   3f990:	beq	3f97c <__assert_fail@plt+0x2e70c>
   3f994:	push	{r0, r1, lr}
   3f998:	bl	3f774 <__assert_fail@plt+0x2e504>
   3f99c:	pop	{r1, r2, lr}
   3f9a0:	mul	r3, r2, r0
   3f9a4:	sub	r1, r1, r3
   3f9a8:	bx	lr
   3f9ac:	push	{r1, lr}
   3f9b0:	mov	r0, #8
   3f9b4:	bl	10f7c <raise@plt>
   3f9b8:	pop	{r1, pc}
   3f9bc:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   3f9c0:	mov	r7, r0
   3f9c4:	ldr	r6, [pc, #72]	; 3fa14 <__assert_fail@plt+0x2e7a4>
   3f9c8:	ldr	r5, [pc, #72]	; 3fa18 <__assert_fail@plt+0x2e7a8>
   3f9cc:	add	r6, pc, r6
   3f9d0:	add	r5, pc, r5
   3f9d4:	sub	r6, r6, r5
   3f9d8:	mov	r8, r1
   3f9dc:	mov	r9, r2
   3f9e0:	bl	10f2c <pthread_mutex_unlock@plt-0x20>
   3f9e4:	asrs	r6, r6, #2
   3f9e8:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   3f9ec:	mov	r4, #0
   3f9f0:	add	r4, r4, #1
   3f9f4:	ldr	r3, [r5], #4
   3f9f8:	mov	r2, r9
   3f9fc:	mov	r1, r8
   3fa00:	mov	r0, r7
   3fa04:	blx	r3
   3fa08:	cmp	r6, r4
   3fa0c:	bne	3f9f0 <__assert_fail@plt+0x2e780>
   3fa10:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   3fa14:	andeq	r2, r1, ip, lsr r5
   3fa18:	andeq	r2, r1, r4, lsr r5
   3fa1c:	bx	lr
   3fa20:	ldr	r3, [pc, #12]	; 3fa34 <__assert_fail@plt+0x2e7c4>
   3fa24:	mov	r1, #0
   3fa28:	add	r3, pc, r3
   3fa2c:	ldr	r2, [r3]
   3fa30:	b	111b0 <__cxa_atexit@plt>
   3fa34:	strdeq	r2, [r1], -r4

Disassembly of section .fini:

0003fa38 <.fini>:
   3fa38:	push	{r3, lr}
   3fa3c:	pop	{r3, pc}
