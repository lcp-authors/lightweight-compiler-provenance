
../repos/charybdis/extensions/.libs/helpops.so:     file format elf32-littlearm


Disassembly of section .init:

000006c8 <_init>:
 6c8:	push	{r3, lr}
 6cc:	bl	79c <call_weak_fn>
 6d0:	pop	{r3, pc}

Disassembly of section .plt:

000006d4 <.plt>:
 6d4:	push	{lr}		; (str lr, [sp, #-4]!)
 6d8:	ldr	lr, [pc, #4]	; 6e4 <.plt+0x10>
 6dc:	add	lr, pc, lr
 6e0:	ldr	pc, [lr, #8]!
 6e4:	.word	0x0001191c

000006e8 <__cxa_finalize@plt>:
 6e8:	add	ip, pc, #0, 12
 6ec:	add	ip, ip, #69632	; 0x11000
 6f0:	ldr	pc, [ip, #2332]!	; 0x91c

000006f4 <sendto_one@plt>:
 6f4:	add	ip, pc, #0, 12
 6f8:	add	ip, ip, #69632	; 0x11000
 6fc:	ldr	pc, [ip, #2324]!	; 0x914

00000700 <user_mode@plt>:
 700:	add	ip, pc, #0, 12
 704:	add	ip, ip, #69632	; 0x11000
 708:	ldr	pc, [ip, #2316]!	; 0x90c

0000070c <sendto_realops_snomask@plt>:
 70c:	add	ip, pc, #0, 12
 710:	add	ip, ip, #69632	; 0x11000
 714:	ldr	pc, [ip, #2308]!	; 0x904

00000718 <find_umode_slot@plt>:
 718:	add	ip, pc, #0, 12
 71c:	add	ip, ip, #69632	; 0x11000
 720:	ldr	pc, [ip, #2300]!	; 0x8fc

00000724 <rb_free_rb_dlink_node@plt>:
 724:	add	ip, pc, #0, 12
 728:	add	ip, ip, #69632	; 0x11000
 72c:	ldr	pc, [ip, #2292]!	; 0x8f4

00000730 <__gmon_start__@plt>:
 730:	add	ip, pc, #0, 12
 734:	add	ip, ip, #69632	; 0x11000
 738:	ldr	pc, [ip, #2284]!	; 0x8ec

0000073c <rb_make_rb_dlink_node@plt>:
 73c:	add	ip, pc, #0, 12
 740:	add	ip, ip, #69632	; 0x11000
 744:	ldr	pc, [ip, #2276]!	; 0x8e4

00000748 <sendto_one_numeric@plt>:
 748:	add	ip, pc, #0, 12
 74c:	add	ip, ip, #69632	; 0x11000
 750:	ldr	pc, [ip, #2268]!	; 0x8dc

00000754 <find_person@plt>:
 754:	add	ip, pc, #0, 12
 758:	add	ip, ip, #69632	; 0x11000
 75c:	ldr	pc, [ip, #2260]!	; 0x8d4

00000760 <sendto_one_notice@plt>:
 760:	add	ip, pc, #0, 12
 764:	add	ip, ip, #69632	; 0x11000
 768:	ldr	pc, [ip, #2252]!	; 0x8cc

0000076c <find_named_person@plt>:
 76c:	add	ip, pc, #0, 12
 770:	add	ip, ip, #69632	; 0x11000
 774:	ldr	pc, [ip, #2244]!	; 0x8c4

00000778 <privilegeset_in_set@plt>:
 778:	add	ip, pc, #0, 12
 77c:	add	ip, ip, #69632	; 0x11000
 780:	ldr	pc, [ip, #2236]!	; 0x8bc

00000784 <__assert_fail@plt>:
 784:	add	ip, pc, #0, 12
 788:	add	ip, ip, #69632	; 0x11000
 78c:	ldr	pc, [ip, #2228]!	; 0x8b4

00000790 <construct_umodebuf@plt>:
 790:	add	ip, pc, #0, 12
 794:	add	ip, ip, #69632	; 0x11000
 798:	ldr	pc, [ip, #2220]!	; 0x8ac

Disassembly of section .text:

0000079c <call_weak_fn>:
     79c:	ldr	r3, [pc, #20]	; 7b8 <call_weak_fn+0x1c>
     7a0:	ldr	r2, [pc, #20]	; 7bc <call_weak_fn+0x20>
     7a4:	add	r3, pc, r3
     7a8:	ldr	r2, [r3, r2]
     7ac:	cmp	r2, #0
     7b0:	bxeq	lr
     7b4:	b	730 <__gmon_start__@plt>
     7b8:	.word	0x00011854
     7bc:	.word	0x00000054

000007c0 <deregister_tm_clones>:
     7c0:	ldr	r0, [pc, #44]	; 7f4 <deregister_tm_clones+0x34>
     7c4:	ldr	r3, [pc, #44]	; 7f8 <deregister_tm_clones+0x38>
     7c8:	add	r0, pc, r0
     7cc:	add	r3, pc, r3
     7d0:	cmp	r3, r0
     7d4:	ldr	r3, [pc, #32]	; 7fc <deregister_tm_clones+0x3c>
     7d8:	add	r3, pc, r3
     7dc:	bxeq	lr
     7e0:	ldr	r2, [pc, #24]	; 800 <deregister_tm_clones+0x40>
     7e4:	ldr	r3, [r3, r2]
     7e8:	cmp	r3, #0
     7ec:	bxeq	lr
     7f0:	bx	r3
     7f4:	.word	0x00011960
     7f8:	.word	0x0001195c
     7fc:	.word	0x00011820
     800:	.word	0x0000004c

00000804 <register_tm_clones>:
     804:	ldr	r0, [pc, #56]	; 844 <register_tm_clones+0x40>
     808:	ldr	r3, [pc, #56]	; 848 <register_tm_clones+0x44>
     80c:	add	r0, pc, r0
     810:	add	r3, pc, r3
     814:	sub	r1, r3, r0
     818:	ldr	r3, [pc, #44]	; 84c <register_tm_clones+0x48>
     81c:	asr	r1, r1, #2
     820:	add	r3, pc, r3
     824:	add	r1, r1, r1, lsr #31
     828:	asrs	r1, r1, #1
     82c:	bxeq	lr
     830:	ldr	r2, [pc, #24]	; 850 <register_tm_clones+0x4c>
     834:	ldr	r3, [r3, r2]
     838:	cmp	r3, #0
     83c:	bxeq	lr
     840:	bx	r3
     844:	.word	0x0001191c
     848:	.word	0x00011918
     84c:	.word	0x000117d8
     850:	.word	0x0000005c

00000854 <__do_global_dtors_aux>:
     854:	ldr	r3, [pc, #76]	; 8a8 <__do_global_dtors_aux+0x54>
     858:	ldr	r2, [pc, #76]	; 8ac <__do_global_dtors_aux+0x58>
     85c:	add	r3, pc, r3
     860:	add	r2, pc, r2
     864:	ldrb	r3, [r3]
     868:	cmp	r3, #0
     86c:	bxne	lr
     870:	ldr	r3, [pc, #56]	; 8b0 <__do_global_dtors_aux+0x5c>
     874:	push	{r4, lr}
     878:	ldr	r3, [r2, r3]
     87c:	cmp	r3, #0
     880:	beq	890 <__do_global_dtors_aux+0x3c>
     884:	ldr	r3, [pc, #40]	; 8b4 <__do_global_dtors_aux+0x60>
     888:	ldr	r0, [pc, r3]
     88c:	bl	6e8 <__cxa_finalize@plt>
     890:	bl	7c0 <deregister_tm_clones>
     894:	ldr	r3, [pc, #28]	; 8b8 <__do_global_dtors_aux+0x64>
     898:	mov	r2, #1
     89c:	add	r3, pc, r3
     8a0:	strb	r2, [r3]
     8a4:	pop	{r4, pc}
     8a8:	.word	0x000118cc
     8ac:	.word	0x00011798
     8b0:	.word	0x00000048
     8b4:	.word	0x000117d4
     8b8:	.word	0x0001188c

000008bc <frame_dummy>:
     8bc:	b	804 <register_tm_clones>

000008c0 <h_hdl_whois>:
     8c0:	ldr	r2, [pc, #100]	; 92c <h_hdl_whois+0x6c>
     8c4:	add	r2, pc, r2
     8c8:	ldr	r3, [r0, #4]
     8cc:	ldr	r1, [pc, #92]	; 930 <h_hdl_whois+0x70>
     8d0:	ldr	r2, [r2, r1]
     8d4:	ldr	r1, [r3, #56]	; 0x38
     8d8:	ldr	r2, [r2, #288]	; 0x120
     8dc:	tst	r1, r2
     8e0:	bxeq	lr
     8e4:	ldr	r2, [r3, #24]
     8e8:	ldr	r2, [r2, #24]
     8ec:	cmp	r2, #0
     8f0:	beq	900 <h_hdl_whois+0x40>
     8f4:	ldrb	r2, [r2]
     8f8:	cmp	r2, #0
     8fc:	bxne	lr
     900:	str	r4, [sp, #-8]!
     904:	str	lr, [sp, #4]
     908:	add	r3, r3, #88	; 0x58
     90c:	ldr	r2, [pc, #32]	; 934 <h_hdl_whois+0x74>
     910:	add	r2, pc, r2
     914:	movw	r1, #310	; 0x136
     918:	ldr	r0, [r0]
     91c:	bl	748 <sendto_one_numeric@plt>
     920:	ldr	r4, [sp]
     924:	add	sp, sp, #4
     928:	pop	{pc}		; (ldr pc, [sp], #4)
     92c:	.word	0x00011734
     930:	.word	0x00000050
     934:	.word	0x000009fc

00000938 <h_hdl_stats_request>:
     938:	ldr	r3, [r0, #8]
     93c:	cmp	r3, #112	; 0x70
     940:	bxne	lr
     944:	strd	r4, [sp, #-24]!	; 0xffffffe8
     948:	strd	r6, [sp, #8]
     94c:	str	r8, [sp, #16]
     950:	str	lr, [sp, #20]
     954:	sub	sp, sp, #8
     958:	mov	r5, r0
     95c:	ldr	r3, [pc, #168]	; a0c <h_hdl_stats_request+0xd4>
     960:	add	r3, pc, r3
     964:	ldr	r4, [r3]
     968:	cmp	r4, #0
     96c:	beq	9d0 <h_hdl_stats_request+0x98>
     970:	mov	r6, #0
     974:	ldr	r8, [pc, #148]	; a10 <h_hdl_stats_request+0xd8>
     978:	add	r8, pc, r8
     97c:	mov	r7, #249	; 0xf9
     980:	b	9b8 <h_hdl_stats_request+0x80>
     984:	add	r6, r6, #1
     988:	add	r2, r3, #163	; 0xa3
     98c:	str	r2, [sp, #4]
     990:	add	r2, r3, #152	; 0x98
     994:	str	r2, [sp]
     998:	add	r3, r3, #88	; 0x58
     99c:	mov	r2, r8
     9a0:	mov	r1, r7
     9a4:	ldr	r0, [r5]
     9a8:	bl	748 <sendto_one_numeric@plt>
     9ac:	ldr	r4, [r4, #8]
     9b0:	cmp	r4, #0
     9b4:	beq	9d4 <h_hdl_stats_request+0x9c>
     9b8:	ldr	r3, [r4]
     9bc:	ldr	r2, [r3, #24]
     9c0:	ldr	r2, [r2, #24]
     9c4:	cmp	r2, #0
     9c8:	bne	9ac <h_hdl_stats_request+0x74>
     9cc:	b	984 <h_hdl_stats_request+0x4c>
     9d0:	mov	r6, #0
     9d4:	mov	r3, r6
     9d8:	ldr	r2, [pc, #52]	; a14 <h_hdl_stats_request+0xdc>
     9dc:	add	r2, pc, r2
     9e0:	mov	r1, #249	; 0xf9
     9e4:	ldr	r0, [r5]
     9e8:	bl	748 <sendto_one_numeric@plt>
     9ec:	mov	r3, #1
     9f0:	str	r3, [r5, #12]
     9f4:	add	sp, sp, #8
     9f8:	ldrd	r4, [sp]
     9fc:	ldrd	r6, [sp, #8]
     a00:	ldr	r8, [sp, #16]
     a04:	add	sp, sp, #20
     a08:	pop	{pc}		; (ldr pc, [sp], #4)
     a0c:	.word	0x000117cc
     a10:	.word	0x000009b0
     a14:	.word	0x0000095c

00000a18 <do_dehelper>:
     a18:	ldr	r3, [pc, #168]	; ac8 <do_dehelper+0xb0>
     a1c:	add	r3, pc, r3
     a20:	ldr	r2, [pc, #164]	; acc <do_dehelper+0xb4>
     a24:	ldr	r3, [r3, r2]
     a28:	ldr	r2, [r1, #56]	; 0x38
     a2c:	ldr	r3, [r3, #288]	; 0x120
     a30:	tst	r2, r3
     a34:	bxeq	lr
     a38:	strd	r4, [sp, #-16]!
     a3c:	str	r6, [sp, #8]
     a40:	str	lr, [sp, #12]
     a44:	sub	sp, sp, #24
     a48:	mov	r4, r1
     a4c:	add	r5, r0, #88	; 0x58
     a50:	add	r6, r1, #88	; 0x58
     a54:	str	r6, [sp]
     a58:	mov	r3, r5
     a5c:	ldr	r2, [pc, #108]	; ad0 <do_dehelper+0xb8>
     a60:	add	r2, pc, r2
     a64:	mov	r1, #256	; 0x100
     a68:	mov	r0, r1
     a6c:	bl	70c <sendto_realops_snomask@plt>
     a70:	mov	r2, r5
     a74:	ldr	r1, [pc, #88]	; ad4 <do_dehelper+0xbc>
     a78:	add	r1, pc, r1
     a7c:	mov	r0, r4
     a80:	bl	760 <sendto_one_notice@plt>
     a84:	str	r6, [sp, #12]
     a88:	str	r6, [sp, #8]
     a8c:	ldr	r3, [pc, #68]	; ad8 <do_dehelper+0xc0>
     a90:	add	r3, pc, r3
     a94:	str	r3, [sp, #16]
     a98:	mov	r3, #0
     a9c:	str	r3, [sp, #20]
     aa0:	add	r3, sp, #8
     aa4:	mov	r2, #3
     aa8:	mov	r1, r4
     aac:	mov	r0, r4
     ab0:	bl	700 <user_mode@plt>
     ab4:	add	sp, sp, #24
     ab8:	ldrd	r4, [sp]
     abc:	ldr	r6, [sp, #8]
     ac0:	add	sp, sp, #12
     ac4:	pop	{pc}		; (ldr pc, [sp], #4)
     ac8:	.word	0x000115dc
     acc:	.word	0x00000050
     ad0:	.word	0x000008ec
     ad4:	.word	0x000008f0
     ad8:	.word	0x000008fc

00000adc <mo_dehelper>:
     adc:	strd	r4, [sp, #-12]!
     ae0:	str	lr, [sp, #8]
     ae4:	sub	sp, sp, #12
     ae8:	mov	r4, r2
     aec:	ldr	r5, [pc, #264]	; bfc <mo_dehelper+0x120>
     af0:	add	r5, pc, r5
     af4:	ldr	r3, [r2, #24]
     af8:	cmp	r3, #0
     afc:	beq	b20 <mo_dehelper+0x44>
     b00:	ldr	r0, [r3, #36]	; 0x24
     b04:	cmp	r0, #0
     b08:	beq	b20 <mo_dehelper+0x44>
     b0c:	ldr	r1, [pc, #236]	; c00 <mo_dehelper+0x124>
     b10:	add	r1, pc, r1
     b14:	bl	778 <privilegeset_in_set@plt>
     b18:	cmp	r0, #0
     b1c:	bne	b5c <mo_dehelper+0x80>
     b20:	ldr	r3, [pc, #220]	; c04 <mo_dehelper+0x128>
     b24:	ldr	r2, [r5, r3]
     b28:	ldr	r3, [pc, #216]	; c08 <mo_dehelper+0x12c>
     b2c:	add	r3, pc, r3
     b30:	str	r3, [sp]
     b34:	add	r3, r4, #88	; 0x58
     b38:	add	r2, r2, #88	; 0x58
     b3c:	ldr	r1, [pc, #200]	; c0c <mo_dehelper+0x130>
     b40:	add	r1, pc, r1
     b44:	mov	r0, r4
     b48:	bl	6f4 <sendto_one@plt>
     b4c:	add	sp, sp, #12
     b50:	ldrd	r4, [sp]
     b54:	add	sp, sp, #8
     b58:	pop	{pc}		; (ldr pc, [sp], #4)
     b5c:	ldr	r3, [sp, #24]
     b60:	ldr	r0, [r3, #4]
     b64:	bl	76c <find_named_person@plt>
     b68:	cmp	r0, #0
     b6c:	beq	bcc <mo_dehelper+0xf0>
     b70:	ldr	r1, [r0, #64]	; 0x40
     b74:	and	r2, r1, #8192	; 0x2000
     b78:	mov	r3, #0
     b7c:	orrs	r3, r2, r3
     b80:	beq	b90 <mo_dehelper+0xb4>
     b84:	ldrh	r3, [r0, #80]	; 0x50
     b88:	cmp	r3, #64	; 0x40
     b8c:	beq	bec <mo_dehelper+0x110>
     b90:	ldrb	r3, [r4, #396]	; 0x18c
     b94:	cmp	r3, #0
     b98:	addne	r2, r4, #396	; 0x18c
     b9c:	addeq	r2, r4, #88	; 0x58
     ba0:	ldr	r3, [r0, #32]
     ba4:	add	r3, r3, #88	; 0x58
     ba8:	ldrb	r1, [r0, #396]	; 0x18c
     bac:	cmp	r1, #0
     bb0:	addne	r1, r0, #396	; 0x18c
     bb4:	addeq	r1, r0, #88	; 0x58
     bb8:	str	r1, [sp]
     bbc:	ldr	r1, [pc, #76]	; c10 <mo_dehelper+0x134>
     bc0:	add	r1, pc, r1
     bc4:	bl	6f4 <sendto_one@plt>
     bc8:	b	b4c <mo_dehelper+0x70>
     bcc:	ldr	r3, [sp, #24]
     bd0:	ldr	r3, [r3, #4]
     bd4:	ldr	r2, [pc, #56]	; c14 <mo_dehelper+0x138>
     bd8:	add	r2, pc, r2
     bdc:	movw	r1, #401	; 0x191
     be0:	mov	r0, r4
     be4:	bl	748 <sendto_one_numeric@plt>
     be8:	b	b4c <mo_dehelper+0x70>
     bec:	mov	r1, r0
     bf0:	mov	r0, r4
     bf4:	bl	a18 <do_dehelper>
     bf8:	b	b4c <mo_dehelper+0x70>
     bfc:	.word	0x00011508
     c00:	.word	0x00000880
     c04:	.word	0x00000060
     c08:	.word	0x0000089c
     c0c:	.word	0x00000860
     c10:	.word	0x00000830
     c14:	.word	0x000007fc

00000c18 <me_dehelper>:
     c18:	strd	r4, [sp, #-16]!
     c1c:	str	r6, [sp, #8]
     c20:	str	lr, [sp, #12]
     c24:	mov	r5, r2
     c28:	ldr	r4, [sp, #16]
     c2c:	ldr	r0, [r4, #4]
     c30:	bl	754 <find_person@plt>
     c34:	subs	r1, r0, #0
     c38:	beq	c6c <me_dehelper+0x54>
     c3c:	ldr	r0, [r1, #64]	; 0x40
     c40:	and	r2, r0, #8192	; 0x2000
     c44:	mov	r3, #0
     c48:	orrs	r3, r2, r3
     c4c:	beq	c5c <me_dehelper+0x44>
     c50:	ldrh	r3, [r1, #80]	; 0x50
     c54:	cmp	r3, #64	; 0x40
     c58:	beq	c88 <me_dehelper+0x70>
     c5c:	ldrd	r4, [sp]
     c60:	ldr	r6, [sp, #8]
     c64:	add	sp, sp, #12
     c68:	pop	{pc}		; (ldr pc, [sp], #4)
     c6c:	ldr	r3, [r4, #4]
     c70:	ldr	r2, [pc, #28]	; c94 <me_dehelper+0x7c>
     c74:	add	r2, pc, r2
     c78:	movw	r1, #401	; 0x191
     c7c:	mov	r0, r5
     c80:	bl	748 <sendto_one_numeric@plt>
     c84:	b	c5c <me_dehelper+0x44>
     c88:	mov	r0, r5
     c8c:	bl	a18 <do_dehelper>
     c90:	b	c5c <me_dehelper+0x44>
     c94:	.word	0x00000760

00000c98 <_moddeinit>:
     c98:	strd	r4, [sp, #-24]!	; 0xffffffe8
     c9c:	strd	r6, [sp, #8]
     ca0:	str	r8, [sp, #16]
     ca4:	str	lr, [sp, #20]
     ca8:	ldr	r3, [pc, #184]	; d68 <_moddeinit+0xd0>
     cac:	add	r3, pc, r3
     cb0:	ldr	r2, [pc, #180]	; d6c <_moddeinit+0xd4>
     cb4:	ldr	r3, [r3, r2]
     cb8:	mov	r2, #0
     cbc:	str	r2, [r3, #288]	; 0x120
     cc0:	bl	790 <construct_umodebuf@plt>
     cc4:	ldr	r3, [pc, #164]	; d70 <_moddeinit+0xd8>
     cc8:	add	r3, pc, r3
     ccc:	ldr	r0, [r3]
     cd0:	cmp	r0, #0
     cd4:	beq	d54 <_moddeinit+0xbc>
     cd8:	ldr	r4, [r0, #8]
     cdc:	ldr	r7, [pc, #144]	; d74 <_moddeinit+0xdc>
     ce0:	add	r7, pc, r7
     ce4:	ldr	r6, [pc, #140]	; d78 <_moddeinit+0xe0>
     ce8:	add	r6, pc, r6
     cec:	ldr	r5, [pc, #136]	; d7c <_moddeinit+0xe4>
     cf0:	add	r5, pc, r5
     cf4:	ldr	r3, [r0, #8]
     cf8:	cmp	r3, #0
     cfc:	ldrne	r2, [r0, #4]
     d00:	strne	r2, [r3, #4]
     d04:	ldreq	r3, [r0, #4]
     d08:	streq	r3, [r7, #4]
     d0c:	ldr	r3, [r0, #4]
     d10:	cmp	r3, #0
     d14:	ldrne	r2, [r0, #8]
     d18:	strne	r2, [r3, #8]
     d1c:	ldreq	r3, [r0, #8]
     d20:	streq	r3, [r6]
     d24:	mov	r3, #0
     d28:	str	r3, [r0, #4]
     d2c:	str	r3, [r0, #8]
     d30:	ldr	r3, [r5, #8]
     d34:	sub	r3, r3, #1
     d38:	str	r3, [r5, #8]
     d3c:	bl	724 <rb_free_rb_dlink_node@plt>
     d40:	cmp	r4, #0
     d44:	beq	d54 <_moddeinit+0xbc>
     d48:	mov	r0, r4
     d4c:	ldr	r4, [r4, #8]
     d50:	b	cf4 <_moddeinit+0x5c>
     d54:	ldrd	r4, [sp]
     d58:	ldrd	r6, [sp, #8]
     d5c:	ldr	r8, [sp, #16]
     d60:	add	sp, sp, #20
     d64:	pop	{pc}		; (ldr pc, [sp], #4)
     d68:	.word	0x0001134c
     d6c:	.word	0x00000050
     d70:	.word	0x00011464
     d74:	.word	0x0001144c
     d78:	.word	0x00011444
     d7c:	.word	0x0001143c

00000d80 <helper_delete>:
     d80:	str	r4, [sp, #-8]!
     d84:	str	lr, [sp, #4]
     d88:	subs	r3, r0, #0
     d8c:	beq	e20 <helper_delete+0xa0>
     d90:	ldr	r2, [pc, #208]	; e68 <helper_delete+0xe8>
     d94:	add	r2, pc, r2
     d98:	ldr	r0, [r2]
     d9c:	cmp	r0, #0
     da0:	beq	e14 <helper_delete+0x94>
     da4:	ldr	r2, [r0]
     da8:	cmp	r3, r2
     dac:	beq	dc8 <helper_delete+0x48>
     db0:	ldr	r0, [r0, #8]
     db4:	cmp	r0, #0
     db8:	beq	e14 <helper_delete+0x94>
     dbc:	ldr	r2, [r0]
     dc0:	cmp	r3, r2
     dc4:	bne	db0 <helper_delete+0x30>
     dc8:	ldr	r3, [r0, #8]
     dcc:	cmp	r3, #0
     dd0:	beq	e40 <helper_delete+0xc0>
     dd4:	ldr	r2, [r0, #4]
     dd8:	str	r2, [r3, #4]
     ddc:	ldr	r3, [r0, #4]
     de0:	cmp	r3, #0
     de4:	beq	e54 <helper_delete+0xd4>
     de8:	ldr	r2, [r0, #8]
     dec:	str	r2, [r3, #8]
     df0:	mov	r3, #0
     df4:	str	r3, [r0, #4]
     df8:	str	r3, [r0, #8]
     dfc:	ldr	r2, [pc, #104]	; e6c <helper_delete+0xec>
     e00:	add	r2, pc, r2
     e04:	ldr	r3, [r2, #8]
     e08:	sub	r3, r3, #1
     e0c:	str	r3, [r2, #8]
     e10:	bl	724 <rb_free_rb_dlink_node@plt>
     e14:	ldr	r4, [sp]
     e18:	add	sp, sp, #4
     e1c:	pop	{pc}		; (ldr pc, [sp], #4)
     e20:	ldr	r3, [pc, #72]	; e70 <helper_delete+0xf0>
     e24:	add	r3, pc, r3
     e28:	mov	r2, #288	; 0x120
     e2c:	ldr	r1, [pc, #64]	; e74 <helper_delete+0xf4>
     e30:	add	r1, pc, r1
     e34:	ldr	r0, [pc, #60]	; e78 <helper_delete+0xf8>
     e38:	add	r0, pc, r0
     e3c:	bl	784 <__assert_fail@plt>
     e40:	ldr	r2, [r0, #4]
     e44:	ldr	r3, [pc, #48]	; e7c <helper_delete+0xfc>
     e48:	add	r3, pc, r3
     e4c:	str	r2, [r3, #4]
     e50:	b	ddc <helper_delete+0x5c>
     e54:	ldr	r2, [r0, #8]
     e58:	ldr	r3, [pc, #32]	; e80 <helper_delete+0x100>
     e5c:	add	r3, pc, r3
     e60:	str	r2, [r3]
     e64:	b	df0 <helper_delete+0x70>
     e68:	.word	0x00011398
     e6c:	.word	0x0001132c
     e70:	.word	0x00000490
     e74:	.word	0x000005dc
     e78:	.word	0x000005f0
     e7c:	.word	0x000112e4
     e80:	.word	0x000112d0

00000e84 <recurse_client_exit>:
     e84:	strd	r4, [sp, #-16]!
     e88:	str	r6, [sp, #8]
     e8c:	str	lr, [sp, #12]
     e90:	mov	r5, r0
     e94:	ldr	r2, [pc, #156]	; f38 <recurse_client_exit+0xb4>
     e98:	add	r2, pc, r2
     e9c:	ldrh	r3, [r0, #80]	; 0x50
     ea0:	cmp	r3, #64	; 0x40
     ea4:	beq	ec0 <recurse_client_exit+0x3c>
     ea8:	cmp	r3, #32
     eac:	beq	eec <recurse_client_exit+0x68>
     eb0:	ldrd	r4, [sp]
     eb4:	ldr	r6, [sp, #8]
     eb8:	add	sp, sp, #12
     ebc:	pop	{pc}		; (ldr pc, [sp], #4)
     ec0:	ldr	r3, [r0, #24]
     ec4:	cmp	r3, #0
     ec8:	beq	eb0 <recurse_client_exit+0x2c>
     ecc:	ldr	r3, [pc, #104]	; f3c <recurse_client_exit+0xb8>
     ed0:	ldr	r3, [r2, r3]
     ed4:	ldr	r2, [r0, #56]	; 0x38
     ed8:	ldr	r3, [r3, #288]	; 0x120
     edc:	tst	r2, r3
     ee0:	beq	eb0 <recurse_client_exit+0x2c>
     ee4:	bl	d80 <helper_delete>
     ee8:	b	eb0 <recurse_client_exit+0x2c>
     eec:	ldr	r3, [r0, #28]
     ef0:	ldr	r4, [r3, #48]	; 0x30
     ef4:	cmp	r4, #0
     ef8:	beq	f10 <recurse_client_exit+0x8c>
     efc:	ldr	r0, [r4]
     f00:	bl	e84 <recurse_client_exit>
     f04:	ldr	r4, [r4, #8]
     f08:	cmp	r4, #0
     f0c:	bne	efc <recurse_client_exit+0x78>
     f10:	ldr	r3, [r5, #28]
     f14:	ldr	r4, [r3, #36]	; 0x24
     f18:	cmp	r4, #0
     f1c:	beq	eb0 <recurse_client_exit+0x2c>
     f20:	ldr	r0, [r4]
     f24:	bl	e84 <recurse_client_exit>
     f28:	ldr	r4, [r4, #8]
     f2c:	cmp	r4, #0
     f30:	bne	f20 <recurse_client_exit+0x9c>
     f34:	b	eb0 <recurse_client_exit+0x2c>
     f38:	.word	0x00011160
     f3c:	.word	0x00000050

00000f40 <h_hdl_client_exit>:
     f40:	str	r4, [sp, #-8]!
     f44:	str	lr, [sp, #4]
     f48:	ldr	r0, [r0, #4]
     f4c:	bl	e84 <recurse_client_exit>
     f50:	ldr	r4, [sp]
     f54:	add	sp, sp, #4
     f58:	pop	{pc}		; (ldr pc, [sp], #4)

00000f5c <helper_add>:
     f5c:	str	r4, [sp, #-8]!
     f60:	str	lr, [sp, #4]
     f64:	subs	r4, r0, #0
     f68:	beq	fb0 <helper_add+0x54>
     f6c:	ldr	r3, [pc, #248]	; 106c <helper_add+0x110>
     f70:	add	r3, pc, r3
     f74:	ldr	r3, [r3]
     f78:	cmp	r3, #0
     f7c:	beq	101c <helper_add+0xc0>
     f80:	ldr	r2, [r3]
     f84:	cmp	r4, r2
     f88:	beq	fa4 <helper_add+0x48>
     f8c:	ldr	r3, [r3, #8]
     f90:	cmp	r3, #0
     f94:	beq	101c <helper_add+0xc0>
     f98:	ldr	r2, [r3]
     f9c:	cmp	r4, r2
     fa0:	bne	f8c <helper_add+0x30>
     fa4:	ldr	r4, [sp]
     fa8:	add	sp, sp, #4
     fac:	pop	{pc}		; (ldr pc, [sp], #4)
     fb0:	ldr	r3, [pc, #184]	; 1070 <helper_add+0x114>
     fb4:	add	r3, pc, r3
     fb8:	add	r3, r3, #20
     fbc:	movw	r2, #311	; 0x137
     fc0:	ldr	r1, [pc, #172]	; 1074 <helper_add+0x118>
     fc4:	add	r1, pc, r1
     fc8:	ldr	r0, [pc, #168]	; 1078 <helper_add+0x11c>
     fcc:	add	r0, pc, r0
     fd0:	bl	784 <__assert_fail@plt>
     fd4:	ldr	r3, [pc, #160]	; 107c <helper_add+0x120>
     fd8:	add	r3, pc, r3
     fdc:	add	r3, r3, #36	; 0x24
     fe0:	mov	r2, #144	; 0x90
     fe4:	ldr	r1, [pc, #148]	; 1080 <helper_add+0x124>
     fe8:	add	r1, pc, r1
     fec:	ldr	r0, [pc, #144]	; 1084 <helper_add+0x128>
     ff0:	add	r0, pc, r0
     ff4:	bl	784 <__assert_fail@plt>
     ff8:	ldr	r3, [pc, #136]	; 1088 <helper_add+0x12c>
     ffc:	add	r3, pc, r3
    1000:	ldr	r3, [r3, #4]
    1004:	cmp	r3, #0
    1008:	bne	1050 <helper_add+0xf4>
    100c:	ldr	r3, [pc, #120]	; 108c <helper_add+0x130>
    1010:	add	r3, pc, r3
    1014:	str	r0, [r3, #4]
    1018:	b	1050 <helper_add+0xf4>
    101c:	bl	73c <rb_make_rb_dlink_node@plt>
    1020:	cmp	r0, #0
    1024:	beq	fd4 <helper_add+0x78>
    1028:	str	r4, [r0]
    102c:	mov	r3, #0
    1030:	str	r3, [r0, #4]
    1034:	ldr	r3, [pc, #84]	; 1090 <helper_add+0x134>
    1038:	add	r3, pc, r3
    103c:	ldr	r3, [r3]
    1040:	str	r3, [r0, #8]
    1044:	cmp	r3, #0
    1048:	strne	r0, [r3, #4]
    104c:	beq	ff8 <helper_add+0x9c>
    1050:	ldr	r3, [pc, #60]	; 1094 <helper_add+0x138>
    1054:	add	r3, pc, r3
    1058:	str	r0, [r3]
    105c:	ldr	r2, [r3, #8]
    1060:	add	r2, r2, #1
    1064:	str	r2, [r3, #8]
    1068:	b	fa4 <helper_add+0x48>
    106c:	.word	0x000111bc
    1070:	.word	0x00000300
    1074:	.word	0x00000448
    1078:	.word	0x0000045c
    107c:	.word	0x000002dc
    1080:	.word	0x00000424
    1084:	.word	0x00000448
    1088:	.word	0x00011130
    108c:	.word	0x0001111c
    1090:	.word	0x000110f4
    1094:	.word	0x000110d8

00001098 <h_hdl_new_remote_user>:
    1098:	ldr	r3, [pc, #48]	; 10d0 <h_hdl_new_remote_user+0x38>
    109c:	add	r3, pc, r3
    10a0:	ldr	r2, [pc, #44]	; 10d4 <h_hdl_new_remote_user+0x3c>
    10a4:	ldr	r3, [r3, r2]
    10a8:	ldr	r2, [r0, #56]	; 0x38
    10ac:	ldr	r3, [r3, #288]	; 0x120
    10b0:	tst	r2, r3
    10b4:	bxeq	lr
    10b8:	str	r4, [sp, #-8]!
    10bc:	str	lr, [sp, #4]
    10c0:	bl	f5c <helper_add>
    10c4:	ldr	r4, [sp]
    10c8:	add	sp, sp, #4
    10cc:	pop	{pc}		; (ldr pc, [sp], #4)
    10d0:	.word	0x00010f5c
    10d4:	.word	0x00000050

000010d8 <h_hdl_umode_changed>:
    10d8:	strd	r4, [sp, #-16]!
    10dc:	str	r6, [sp, #8]
    10e0:	str	lr, [sp, #12]
    10e4:	sub	sp, sp, #8
    10e8:	ldr	r6, [pc, #264]	; 11f8 <h_hdl_umode_changed+0x120>
    10ec:	add	r6, pc, r6
    10f0:	ldr	r5, [r0]
    10f4:	ldr	r1, [r5, #56]	; 0x38
    10f8:	ldr	r3, [pc, #252]	; 11fc <h_hdl_umode_changed+0x124>
    10fc:	ldr	r3, [r6, r3]
    1100:	ldr	r2, [r3, #288]	; 0x120
    1104:	ldr	r3, [r0, #4]
    1108:	eor	r3, r3, r1
    110c:	and	r4, r3, r2
    1110:	tst	r1, r2
    1114:	beq	11d0 <h_hdl_umode_changed+0xf8>
    1118:	ldr	r1, [r5, #64]	; 0x40
    111c:	and	r2, r1, #8192	; 0x2000
    1120:	mov	r3, #0
    1124:	orrs	r3, r2, r3
    1128:	beq	1138 <h_hdl_umode_changed+0x60>
    112c:	ldrh	r3, [r5, #80]	; 0x50
    1130:	cmp	r3, #64	; 0x40
    1134:	beq	114c <h_hdl_umode_changed+0x74>
    1138:	cmp	r4, #0
    113c:	beq	11d8 <h_hdl_umode_changed+0x100>
    1140:	mov	r0, r5
    1144:	bl	f5c <helper_add>
    1148:	b	11d8 <h_hdl_umode_changed+0x100>
    114c:	ldr	r3, [r5, #24]
    1150:	cmp	r3, #0
    1154:	beq	1178 <h_hdl_umode_changed+0xa0>
    1158:	ldr	r0, [r3, #36]	; 0x24
    115c:	cmp	r0, #0
    1160:	beq	1178 <h_hdl_umode_changed+0xa0>
    1164:	ldr	r1, [pc, #148]	; 1200 <h_hdl_umode_changed+0x128>
    1168:	add	r1, pc, r1
    116c:	bl	778 <privilegeset_in_set@plt>
    1170:	cmp	r0, #0
    1174:	bne	1138 <h_hdl_umode_changed+0x60>
    1178:	ldr	r3, [pc, #124]	; 11fc <h_hdl_umode_changed+0x124>
    117c:	ldr	r3, [r6, r3]
    1180:	ldr	r2, [r3, #288]	; 0x120
    1184:	ldr	r3, [r5, #56]	; 0x38
    1188:	bic	r3, r3, r2
    118c:	str	r3, [r5, #56]	; 0x38
    1190:	ldr	r3, [pc, #108]	; 1204 <h_hdl_umode_changed+0x12c>
    1194:	ldr	r2, [r6, r3]
    1198:	ldr	r3, [pc, #104]	; 1208 <h_hdl_umode_changed+0x130>
    119c:	add	r3, pc, r3
    11a0:	str	r3, [sp]
    11a4:	add	r3, r5, #88	; 0x58
    11a8:	add	r2, r2, #88	; 0x58
    11ac:	ldr	r1, [pc, #88]	; 120c <h_hdl_umode_changed+0x134>
    11b0:	add	r1, pc, r1
    11b4:	mov	r0, r5
    11b8:	bl	6f4 <sendto_one@plt>
    11bc:	cmp	r4, #0
    11c0:	bne	11d8 <h_hdl_umode_changed+0x100>
    11c4:	mov	r0, r5
    11c8:	bl	d80 <helper_delete>
    11cc:	b	11d8 <h_hdl_umode_changed+0x100>
    11d0:	cmp	r4, #0
    11d4:	bne	11ec <h_hdl_umode_changed+0x114>
    11d8:	add	sp, sp, #8
    11dc:	ldrd	r4, [sp]
    11e0:	ldr	r6, [sp, #8]
    11e4:	add	sp, sp, #12
    11e8:	pop	{pc}		; (ldr pc, [sp], #4)
    11ec:	mov	r0, r5
    11f0:	bl	d80 <helper_delete>
    11f4:	b	11d8 <h_hdl_umode_changed+0x100>
    11f8:	.word	0x00010f0c
    11fc:	.word	0x00000050
    1200:	.word	0x000002dc
    1204:	.word	0x00000060
    1208:	.word	0x000002a8
    120c:	.word	0x000001f0

00001210 <_modinit>:
    1210:	strd	r4, [sp, #-16]!
    1214:	str	r6, [sp, #8]
    1218:	str	lr, [sp, #12]
    121c:	ldr	r5, [pc, #132]	; 12a8 <_modinit+0x98>
    1220:	add	r5, pc, r5
    1224:	bl	718 <find_umode_slot@plt>
    1228:	ldr	r3, [pc, #124]	; 12ac <_modinit+0x9c>
    122c:	ldr	r3, [r5, r3]
    1230:	str	r0, [r3, #288]	; 0x120
    1234:	bl	790 <construct_umodebuf@plt>
    1238:	ldr	r3, [pc, #112]	; 12b0 <_modinit+0xa0>
    123c:	ldr	r3, [r5, r3]
    1240:	ldr	r4, [r3]
    1244:	cmp	r4, #0
    1248:	bne	1270 <_modinit+0x60>
    124c:	mov	r0, #0
    1250:	ldrd	r4, [sp]
    1254:	ldr	r6, [sp, #8]
    1258:	add	sp, sp, #12
    125c:	pop	{pc}		; (ldr pc, [sp], #4)
    1260:	bl	f5c <helper_add>
    1264:	ldr	r4, [r4, #8]
    1268:	cmp	r4, #0
    126c:	beq	124c <_modinit+0x3c>
    1270:	ldr	r0, [r4]
    1274:	ldrh	r3, [r0, #80]	; 0x50
    1278:	cmp	r3, #64	; 0x40
    127c:	bne	1264 <_modinit+0x54>
    1280:	ldr	r3, [r0, #24]
    1284:	cmp	r3, #0
    1288:	beq	1264 <_modinit+0x54>
    128c:	ldr	r3, [pc, #24]	; 12ac <_modinit+0x9c>
    1290:	ldr	r3, [r5, r3]
    1294:	ldr	r2, [r0, #56]	; 0x38
    1298:	ldr	r3, [r3, #288]	; 0x120
    129c:	tst	r2, r3
    12a0:	beq	1264 <_modinit+0x54>
    12a4:	b	1260 <_modinit+0x50>
    12a8:	.word	0x00010dd8
    12ac:	.word	0x00000050
    12b0:	.word	0x00000058

Disassembly of section .fini:

000012b4 <_fini>:
    12b4:	push	{r3, lr}
    12b8:	pop	{r3, pc}
