
../repos/prog2/4:     file format elf32-littlearm


Disassembly of section .init:

00010938 <.init>:
   10938:	push	{r3, lr}
   1093c:	bl	10a30 <_start@@Base+0x3c>
   10940:	pop	{r3, pc}

Disassembly of section .plt:

00010944 <strcmp@plt-0x14>:
   10944:	push	{lr}		; (str lr, [sp, #-4]!)
   10948:	ldr	lr, [pc, #4]	; 10954 <strcmp@plt-0x4>
   1094c:	add	lr, pc, lr
   10950:	ldr	pc, [lr, #8]!
   10954:	andeq	r2, r1, ip, lsr #13

00010958 <strcmp@plt>:
   10958:	add	ip, pc, #0, 12
   1095c:	add	ip, ip, #73728	; 0x12000
   10960:	ldr	pc, [ip, #1708]!	; 0x6ac

00010964 <printf@plt>:
   10964:	add	ip, pc, #0, 12
   10968:	add	ip, ip, #73728	; 0x12000
   1096c:	ldr	pc, [ip, #1700]!	; 0x6a4

00010970 <free@plt>:
   10970:	add	ip, pc, #0, 12
   10974:	add	ip, ip, #73728	; 0x12000
   10978:	ldr	pc, [ip, #1692]!	; 0x69c

0001097c <strdup@plt>:
   1097c:	add	ip, pc, #0, 12
   10980:	add	ip, ip, #73728	; 0x12000
   10984:	ldr	pc, [ip, #1684]!	; 0x694

00010988 <strcpy@plt>:
   10988:	add	ip, pc, #0, 12
   1098c:	add	ip, ip, #73728	; 0x12000
   10990:	ldr	pc, [ip, #1676]!	; 0x68c

00010994 <puts@plt>:
   10994:	add	ip, pc, #0, 12
   10998:	add	ip, ip, #73728	; 0x12000
   1099c:	ldr	pc, [ip, #1668]!	; 0x684

000109a0 <malloc@plt>:
   109a0:	add	ip, pc, #0, 12
   109a4:	add	ip, ip, #73728	; 0x12000
   109a8:	ldr	pc, [ip, #1660]!	; 0x67c

000109ac <__libc_start_main@plt>:
   109ac:	add	ip, pc, #0, 12
   109b0:	add	ip, ip, #73728	; 0x12000
   109b4:	ldr	pc, [ip, #1652]!	; 0x674

000109b8 <__gmon_start__@plt>:
   109b8:	add	ip, pc, #0, 12
   109bc:	add	ip, ip, #73728	; 0x12000
   109c0:	ldr	pc, [ip, #1644]!	; 0x66c

000109c4 <strlen@plt>:
   109c4:	add	ip, pc, #0, 12
   109c8:	add	ip, ip, #73728	; 0x12000
   109cc:	ldr	pc, [ip, #1636]!	; 0x664

000109d0 <setvbuf@plt>:
   109d0:	add	ip, pc, #0, 12
   109d4:	add	ip, ip, #73728	; 0x12000
   109d8:	ldr	pc, [ip, #1628]!	; 0x65c

000109dc <putchar@plt>:
   109dc:	add	ip, pc, #0, 12
   109e0:	add	ip, ip, #73728	; 0x12000
   109e4:	ldr	pc, [ip, #1620]!	; 0x654

000109e8 <abort@plt>:
   109e8:	add	ip, pc, #0, 12
   109ec:	add	ip, ip, #73728	; 0x12000
   109f0:	ldr	pc, [ip, #1612]!	; 0x64c

Disassembly of section .text:

000109f4 <_start@@Base>:
   109f4:	mov	fp, #0
   109f8:	mov	lr, #0
   109fc:	pop	{r1}		; (ldr r1, [sp], #4)
   10a00:	mov	r2, sp
   10a04:	push	{r2}		; (str r2, [sp, #-4]!)
   10a08:	push	{r0}		; (str r0, [sp, #-4]!)
   10a0c:	ldr	ip, [pc, #16]	; 10a24 <_start@@Base+0x30>
   10a10:	push	{ip}		; (str ip, [sp, #-4]!)
   10a14:	ldr	r0, [pc, #12]	; 10a28 <_start@@Base+0x34>
   10a18:	ldr	r3, [pc, #12]	; 10a2c <_start@@Base+0x38>
   10a1c:	bl	109ac <__libc_start_main@plt>
   10a20:	bl	109e8 <abort@plt>
   10a24:	andeq	r1, r1, r8, asr sp
   10a28:	ldrdeq	r1, [r1], -r4
   10a2c:	strdeq	r1, [r1], -r8
   10a30:	ldr	r3, [pc, #20]	; 10a4c <_start@@Base+0x58>
   10a34:	ldr	r2, [pc, #20]	; 10a50 <_start@@Base+0x5c>
   10a38:	add	r3, pc, r3
   10a3c:	ldr	r2, [r3, r2]
   10a40:	cmp	r2, #0
   10a44:	bxeq	lr
   10a48:	b	109b8 <__gmon_start__@plt>
   10a4c:	andeq	r2, r1, r0, asr #11
   10a50:	andeq	r0, r0, r0, asr #32
   10a54:	ldr	r0, [pc, #24]	; 10a74 <_start@@Base+0x80>
   10a58:	ldr	r3, [pc, #24]	; 10a78 <_start@@Base+0x84>
   10a5c:	cmp	r3, r0
   10a60:	bxeq	lr
   10a64:	ldr	r3, [pc, #16]	; 10a7c <_start@@Base+0x88>
   10a68:	cmp	r3, #0
   10a6c:	bxeq	lr
   10a70:	bx	r3
   10a74:	andeq	r3, r2, ip, asr #32
   10a78:	andeq	r3, r2, ip, asr #32
   10a7c:	andeq	r0, r0, r0
   10a80:	ldr	r0, [pc, #36]	; 10aac <_start@@Base+0xb8>
   10a84:	ldr	r1, [pc, #36]	; 10ab0 <_start@@Base+0xbc>
   10a88:	sub	r1, r1, r0
   10a8c:	asr	r1, r1, #2
   10a90:	add	r1, r1, r1, lsr #31
   10a94:	asrs	r1, r1, #1
   10a98:	bxeq	lr
   10a9c:	ldr	r3, [pc, #16]	; 10ab4 <_start@@Base+0xc0>
   10aa0:	cmp	r3, #0
   10aa4:	bxeq	lr
   10aa8:	bx	r3
   10aac:	andeq	r3, r2, ip, asr #32
   10ab0:	andeq	r3, r2, ip, asr #32
   10ab4:	andeq	r0, r0, r0
   10ab8:	push	{r4, lr}
   10abc:	ldr	r4, [pc, #24]	; 10adc <_start@@Base+0xe8>
   10ac0:	ldrb	r3, [r4]
   10ac4:	cmp	r3, #0
   10ac8:	popne	{r4, pc}
   10acc:	bl	10a54 <_start@@Base+0x60>
   10ad0:	mov	r3, #1
   10ad4:	strb	r3, [r4]
   10ad8:	pop	{r4, pc}
   10adc:	andeq	r3, r2, r8, asr r0
   10ae0:	b	10a80 <_start@@Base+0x8c>

00010ae4 <_l@@Base>:
   10ae4:	push	{r0, r1, r2, r3}
   10ae8:	strd	r4, [sp, #-32]!	; 0xffffffe0
   10aec:	strd	r6, [sp, #8]
   10af0:	strd	r8, [sp, #16]
   10af4:	str	sl, [sp, #24]
   10af8:	str	lr, [sp, #28]
   10afc:	sub	sp, sp, #8
   10b00:	ldr	r7, [sp, #40]	; 0x28
   10b04:	mov	r0, #12
   10b08:	bl	109a0 <malloc@plt>
   10b0c:	mov	r9, r0
   10b10:	mov	r3, #0
   10b14:	str	r3, [r0]
   10b18:	str	r3, [r0, #4]
   10b1c:	str	r7, [r0, #8]
   10b20:	add	r3, sp, #44	; 0x2c
   10b24:	str	r3, [sp, #4]
   10b28:	cmp	r7, #0
   10b2c:	ble	10bac <_l@@Base+0xc8>
   10b30:	mov	r5, #0
   10b34:	mov	r8, #12
   10b38:	mov	sl, r5
   10b3c:	b	10b7c <_l@@Base+0x98>
   10b40:	mov	r0, r8
   10b44:	bl	109a0 <malloc@plt>
   10b48:	mov	r4, r0
   10b4c:	str	r0, [r9]
   10b50:	str	sl, [r0, #8]
   10b54:	mov	r0, r6
   10b58:	bl	109c4 <strlen@plt>
   10b5c:	add	r0, r0, #1
   10b60:	bl	109a0 <malloc@plt>
   10b64:	str	r0, [r4]
   10b68:	mov	r1, r6
   10b6c:	bl	10988 <strcpy@plt>
   10b70:	add	r5, r5, #1
   10b74:	cmp	r7, r5
   10b78:	beq	10bac <_l@@Base+0xc8>
   10b7c:	ldr	r3, [sp, #4]
   10b80:	add	r2, r3, #4
   10b84:	str	r2, [sp, #4]
   10b88:	ldr	r6, [r3]
   10b8c:	cmp	r5, #0
   10b90:	beq	10b40 <_l@@Base+0x5c>
   10b94:	mov	r0, r8
   10b98:	bl	109a0 <malloc@plt>
   10b9c:	str	r0, [r4, #4]
   10ba0:	str	r4, [r0, #8]
   10ba4:	ldr	r4, [r4, #4]
   10ba8:	b	10b54 <_l@@Base+0x70>
   10bac:	mov	r3, #0
   10bb0:	str	r3, [r4, #4]
   10bb4:	str	r4, [r9, #4]
   10bb8:	mov	r0, r9
   10bbc:	add	sp, sp, #8
   10bc0:	ldrd	r4, [sp]
   10bc4:	ldrd	r6, [sp, #8]
   10bc8:	ldrd	r8, [sp, #16]
   10bcc:	ldr	sl, [sp, #24]
   10bd0:	ldr	lr, [sp, #28]
   10bd4:	add	sp, sp, #32
   10bd8:	add	sp, sp, #16
   10bdc:	bx	lr

00010be0 <_f@@Base>:
   10be0:	cmp	r0, #0
   10be4:	beq	10c20 <_f@@Base+0x40>
   10be8:	ldr	r3, [r0]
   10bec:	cmp	r3, #0
   10bf0:	cmpne	r1, #0
   10bf4:	ble	10c24 <_f@@Base+0x44>
   10bf8:	mov	r2, #0
   10bfc:	ldr	r3, [r3, #4]
   10c00:	add	r2, r2, #1
   10c04:	cmp	r3, #0
   10c08:	cmpne	r1, r2
   10c0c:	bgt	10bfc <_f@@Base+0x1c>
   10c10:	cmp	r1, r2
   10c14:	movwne	r0, #8500	; 0x2134
   10c18:	movtne	r0, #1
   10c1c:	beq	10c2c <_f@@Base+0x4c>
   10c20:	bx	lr
   10c24:	mov	r2, #0
   10c28:	b	10c10 <_f@@Base+0x30>
   10c2c:	ldr	r0, [r3]
   10c30:	bx	lr

00010c34 <teste_lista_nova@@Base>:
   10c34:	strd	r4, [sp, #-16]!
   10c38:	str	r6, [sp, #8]
   10c3c:	str	lr, [sp, #12]
   10c40:	movw	r0, #7528	; 0x1d68
   10c44:	movt	r0, #1
   10c48:	bl	10964 <printf@plt>
   10c4c:	bl	11874 <lista_nova@@Base>
   10c50:	subs	r5, r0, #0
   10c54:	beq	10c8c <teste_lista_nova@@Base+0x58>
   10c58:	ldr	r4, [r5, #8]
   10c5c:	cmp	r4, #0
   10c60:	bne	10ca8 <teste_lista_nova@@Base+0x74>
   10c64:	mov	r0, r5
   10c68:	bl	1189c <lista_apaga@@Base>
   10c6c:	movw	r0, #7604	; 0x1db4
   10c70:	movt	r0, #1
   10c74:	bl	10994 <puts@plt>
   10c78:	mov	r0, r4
   10c7c:	ldrd	r4, [sp]
   10c80:	ldr	r6, [sp, #8]
   10c84:	add	sp, sp, #12
   10c88:	pop	{pc}		; (ldr pc, [sp], #4)
   10c8c:	movw	r0, #7544	; 0x1d78
   10c90:	movt	r0, #1
   10c94:	bl	10964 <printf@plt>
   10c98:	mov	r0, #10
   10c9c:	bl	109dc <putchar@plt>
   10ca0:	mov	r4, #1
   10ca4:	b	10c78 <teste_lista_nova@@Base+0x44>
   10ca8:	movw	r0, #7568	; 0x1d90
   10cac:	movt	r0, #1
   10cb0:	bl	10964 <printf@plt>
   10cb4:	mov	r0, r5
   10cb8:	bl	1189c <lista_apaga@@Base>
   10cbc:	mov	r0, #10
   10cc0:	bl	109dc <putchar@plt>
   10cc4:	mov	r4, #1
   10cc8:	b	10c78 <teste_lista_nova@@Base+0x44>

00010ccc <teste_lista_insere@@Base>:
   10ccc:	strd	r4, [sp, #-16]!
   10cd0:	str	r6, [sp, #8]
   10cd4:	str	lr, [sp, #12]
   10cd8:	movw	r1, #7608	; 0x1db8
   10cdc:	movt	r1, #1
   10ce0:	mov	r2, r1
   10ce4:	mov	r0, #2
   10ce8:	bl	10ae4 <_l@@Base>
   10cec:	mov	r4, r0
   10cf0:	movw	r0, #7612	; 0x1dbc
   10cf4:	movt	r0, #1
   10cf8:	bl	10964 <printf@plt>
   10cfc:	ldr	r3, [r4]
   10d00:	ldr	r2, [r3, #4]
   10d04:	movw	r1, #7632	; 0x1dd0
   10d08:	movt	r1, #1
   10d0c:	mov	r0, r4
   10d10:	bl	11940 <lista_insere@@Base>
   10d14:	cmp	r0, #0
   10d18:	movne	r5, #0
   10d1c:	beq	10f10 <teste_lista_insere@@Base+0x244>
   10d20:	ldr	r3, [r4, #8]
   10d24:	cmp	r3, #3
   10d28:	bne	10f24 <teste_lista_insere@@Base+0x258>
   10d2c:	ldr	r6, [r4]
   10d30:	movw	r1, #7608	; 0x1db8
   10d34:	movt	r1, #1
   10d38:	ldr	r0, [r6]
   10d3c:	bl	10958 <strcmp@plt>
   10d40:	cmp	r0, #0
   10d44:	bne	10d80 <teste_lista_insere@@Base+0xb4>
   10d48:	ldr	r6, [r6, #4]
   10d4c:	movw	r1, #7632	; 0x1dd0
   10d50:	movt	r1, #1
   10d54:	ldr	r0, [r6]
   10d58:	bl	10958 <strcmp@plt>
   10d5c:	cmp	r0, #0
   10d60:	bne	10d80 <teste_lista_insere@@Base+0xb4>
   10d64:	ldr	r3, [r6, #4]
   10d68:	movw	r1, #7608	; 0x1db8
   10d6c:	movt	r1, #1
   10d70:	ldr	r0, [r3]
   10d74:	bl	10958 <strcmp@plt>
   10d78:	cmp	r0, #0
   10d7c:	beq	10d90 <teste_lista_insere@@Base+0xc4>
   10d80:	movw	r0, #7744	; 0x1e40
   10d84:	movt	r0, #1
   10d88:	bl	10964 <printf@plt>
   10d8c:	add	r5, r5, #1
   10d90:	ldr	r2, [r4]
   10d94:	movw	r1, #7632	; 0x1dd0
   10d98:	movt	r1, #1
   10d9c:	mov	r0, r4
   10da0:	bl	11940 <lista_insere@@Base>
   10da4:	ldr	r3, [r4]
   10da8:	cmp	r3, r0
   10dac:	beq	10dc0 <teste_lista_insere@@Base+0xf4>
   10db0:	movw	r0, #7800	; 0x1e78
   10db4:	movt	r0, #1
   10db8:	bl	10964 <printf@plt>
   10dbc:	add	r5, r5, #1
   10dc0:	ldr	r3, [r4, #8]
   10dc4:	cmp	r3, #4
   10dc8:	bne	10f5c <teste_lista_insere@@Base+0x290>
   10dcc:	ldr	r6, [r4]
   10dd0:	movw	r1, #7632	; 0x1dd0
   10dd4:	movt	r1, #1
   10dd8:	ldr	r0, [r6]
   10ddc:	bl	10958 <strcmp@plt>
   10de0:	cmp	r0, #0
   10de4:	bne	10e3c <teste_lista_insere@@Base+0x170>
   10de8:	ldr	r6, [r6, #4]
   10dec:	movw	r1, #7608	; 0x1db8
   10df0:	movt	r1, #1
   10df4:	ldr	r0, [r6]
   10df8:	bl	10958 <strcmp@plt>
   10dfc:	cmp	r0, #0
   10e00:	bne	10e3c <teste_lista_insere@@Base+0x170>
   10e04:	ldr	r6, [r6, #4]
   10e08:	movw	r1, #7632	; 0x1dd0
   10e0c:	movt	r1, #1
   10e10:	ldr	r0, [r6]
   10e14:	bl	10958 <strcmp@plt>
   10e18:	cmp	r0, #0
   10e1c:	bne	10e3c <teste_lista_insere@@Base+0x170>
   10e20:	ldr	r3, [r6, #4]
   10e24:	movw	r1, #7608	; 0x1db8
   10e28:	movt	r1, #1
   10e2c:	ldr	r0, [r3]
   10e30:	bl	10958 <strcmp@plt>
   10e34:	cmp	r0, #0
   10e38:	beq	10e4c <teste_lista_insere@@Base+0x180>
   10e3c:	movw	r0, #7744	; 0x1e40
   10e40:	movt	r0, #1
   10e44:	bl	10964 <printf@plt>
   10e48:	add	r5, r5, #1
   10e4c:	mov	r2, #0
   10e50:	movw	r1, #7632	; 0x1dd0
   10e54:	movt	r1, #1
   10e58:	mov	r0, r4
   10e5c:	bl	11940 <lista_insere@@Base>
   10e60:	ldr	r3, [r4, #8]
   10e64:	cmp	r3, #5
   10e68:	bne	10f84 <teste_lista_insere@@Base+0x2b8>
   10e6c:	ldr	r3, [r4]
   10e70:	ldr	r3, [r3, #4]
   10e74:	ldr	r3, [r3, #4]
   10e78:	ldr	r3, [r3, #4]
   10e7c:	ldr	r3, [r3, #4]
   10e80:	movw	r1, #7632	; 0x1dd0
   10e84:	movt	r1, #1
   10e88:	ldr	r0, [r3]
   10e8c:	bl	10958 <strcmp@plt>
   10e90:	cmp	r0, #0
   10e94:	bne	10fac <teste_lista_insere@@Base+0x2e0>
   10e98:	mov	r0, r4
   10e9c:	bl	1189c <lista_apaga@@Base>
   10ea0:	bl	11874 <lista_nova@@Base>
   10ea4:	mov	r4, r0
   10ea8:	mov	r2, #0
   10eac:	movw	r1, #7632	; 0x1dd0
   10eb0:	movt	r1, #1
   10eb4:	bl	11940 <lista_insere@@Base>
   10eb8:	ldr	r3, [r4, #8]
   10ebc:	cmp	r3, #1
   10ec0:	bne	10fc0 <teste_lista_insere@@Base+0x2f4>
   10ec4:	mov	r0, r4
   10ec8:	bl	11918 <lista_tamanho@@Base>
   10ecc:	cmp	r0, #1
   10ed0:	bne	10fec <teste_lista_insere@@Base+0x320>
   10ed4:	ldr	r3, [r4]
   10ed8:	movw	r1, #7632	; 0x1dd0
   10edc:	movt	r1, #1
   10ee0:	ldr	r0, [r3]
   10ee4:	bl	10958 <strcmp@plt>
   10ee8:	cmp	r0, #0
   10eec:	bne	1102c <teste_lista_insere@@Base+0x360>
   10ef0:	mov	r0, r4
   10ef4:	bl	1189c <lista_apaga@@Base>
   10ef8:	cmp	r5, #0
   10efc:	bne	11044 <teste_lista_insere@@Base+0x378>
   10f00:	movw	r0, #7604	; 0x1db4
   10f04:	movt	r0, #1
   10f08:	bl	10994 <puts@plt>
   10f0c:	b	10f48 <teste_lista_insere@@Base+0x27c>
   10f10:	movw	r0, #7640	; 0x1dd8
   10f14:	movt	r0, #1
   10f18:	bl	10964 <printf@plt>
   10f1c:	mov	r5, #1
   10f20:	b	10d20 <teste_lista_insere@@Base+0x54>
   10f24:	movw	r0, #7684	; 0x1e04
   10f28:	movt	r0, #1
   10f2c:	bl	10964 <printf@plt>
   10f30:	add	r5, r5, #1
   10f34:	ldr	r3, [r4, #8]
   10f38:	cmp	r3, #3
   10f3c:	beq	10d2c <teste_lista_insere@@Base+0x60>
   10f40:	mov	r0, #10
   10f44:	bl	109dc <putchar@plt>
   10f48:	mov	r0, r5
   10f4c:	ldrd	r4, [sp]
   10f50:	ldr	r6, [sp, #8]
   10f54:	add	sp, sp, #12
   10f58:	pop	{pc}		; (ldr pc, [sp], #4)
   10f5c:	movw	r0, #7848	; 0x1ea8
   10f60:	movt	r0, #1
   10f64:	bl	10964 <printf@plt>
   10f68:	add	r5, r5, #1
   10f6c:	ldr	r3, [r4, #8]
   10f70:	cmp	r3, #4
   10f74:	beq	10dcc <teste_lista_insere@@Base+0x100>
   10f78:	mov	r0, #10
   10f7c:	bl	109dc <putchar@plt>
   10f80:	b	10f48 <teste_lista_insere@@Base+0x27c>
   10f84:	movw	r0, #7908	; 0x1ee4
   10f88:	movt	r0, #1
   10f8c:	bl	10964 <printf@plt>
   10f90:	add	r5, r5, #1
   10f94:	ldr	r3, [r4, #8]
   10f98:	cmp	r3, #5
   10f9c:	beq	10e6c <teste_lista_insere@@Base+0x1a0>
   10fa0:	mov	r0, #10
   10fa4:	bl	109dc <putchar@plt>
   10fa8:	b	10f48 <teste_lista_insere@@Base+0x27c>
   10fac:	movw	r0, #7744	; 0x1e40
   10fb0:	movt	r0, #1
   10fb4:	bl	10964 <printf@plt>
   10fb8:	add	r5, r5, #1
   10fbc:	b	10e98 <teste_lista_insere@@Base+0x1cc>
   10fc0:	movw	r0, #7968	; 0x1f20
   10fc4:	movt	r0, #1
   10fc8:	bl	10964 <printf@plt>
   10fcc:	add	r5, r5, #1
   10fd0:	mov	r0, r4
   10fd4:	bl	11918 <lista_tamanho@@Base>
   10fd8:	cmp	r0, #1
   10fdc:	beq	11010 <teste_lista_insere@@Base+0x344>
   10fe0:	mov	r0, #10
   10fe4:	bl	109dc <putchar@plt>
   10fe8:	b	10f48 <teste_lista_insere@@Base+0x27c>
   10fec:	cmp	r5, #0
   10ff0:	bne	10fe0 <teste_lista_insere@@Base+0x314>
   10ff4:	movw	r0, #7604	; 0x1db4
   10ff8:	movt	r0, #1
   10ffc:	bl	10994 <puts@plt>
   11000:	b	10f48 <teste_lista_insere@@Base+0x27c>
   11004:	mov	r0, r4
   11008:	bl	1189c <lista_apaga@@Base>
   1100c:	b	11044 <teste_lista_insere@@Base+0x378>
   11010:	ldr	r3, [r4]
   11014:	movw	r1, #7632	; 0x1dd0
   11018:	movt	r1, #1
   1101c:	ldr	r0, [r3]
   11020:	bl	10958 <strcmp@plt>
   11024:	cmp	r0, #0
   11028:	beq	11004 <teste_lista_insere@@Base+0x338>
   1102c:	movw	r0, #7744	; 0x1e40
   11030:	movt	r0, #1
   11034:	bl	10964 <printf@plt>
   11038:	add	r5, r5, #1
   1103c:	mov	r0, r4
   11040:	bl	1189c <lista_apaga@@Base>
   11044:	mov	r0, #10
   11048:	bl	109dc <putchar@plt>
   1104c:	b	10f48 <teste_lista_insere@@Base+0x27c>

00011050 <teste_lista_remove@@Base>:
   11050:	strd	r4, [sp, #-16]!
   11054:	str	r6, [sp, #8]
   11058:	str	lr, [sp, #12]
   1105c:	sub	sp, sp, #8
   11060:	movw	r3, #8040	; 0x1f68
   11064:	movt	r3, #1
   11068:	str	r3, [sp, #4]
   1106c:	movw	r3, #8044	; 0x1f6c
   11070:	movt	r3, #1
   11074:	str	r3, [sp]
   11078:	movw	r3, #8028	; 0x1f5c
   1107c:	movt	r3, #1
   11080:	movw	r2, #8032	; 0x1f60
   11084:	movt	r2, #1
   11088:	movw	r1, #8036	; 0x1f64
   1108c:	movt	r1, #1
   11090:	mov	r0, #5
   11094:	bl	10ae4 <_l@@Base>
   11098:	mov	r4, r0
   1109c:	movw	r0, #8048	; 0x1f70
   110a0:	movt	r0, #1
   110a4:	bl	10964 <printf@plt>
   110a8:	ldr	r3, [r4]
   110ac:	ldr	r3, [r3, #4]
   110b0:	ldr	r3, [r3, #4]
   110b4:	ldr	r1, [r3, #4]
   110b8:	mov	r0, r4
   110bc:	bl	11a24 <lista_remove@@Base>
   110c0:	ldr	r3, [r4, #4]
   110c4:	cmp	r3, r0
   110c8:	moveq	r5, #0
   110cc:	beq	110e0 <teste_lista_remove@@Base+0x90>
   110d0:	movw	r0, #8068	; 0x1f84
   110d4:	movt	r0, #1
   110d8:	bl	10964 <printf@plt>
   110dc:	mov	r5, #1
   110e0:	ldr	r3, [r4, #8]
   110e4:	cmp	r3, #4
   110e8:	bne	111a4 <teste_lista_remove@@Base+0x154>
   110ec:	ldr	r6, [r4]
   110f0:	movw	r1, #8036	; 0x1f64
   110f4:	movt	r1, #1
   110f8:	ldr	r0, [r6]
   110fc:	bl	10958 <strcmp@plt>
   11100:	cmp	r0, #0
   11104:	bne	1115c <teste_lista_remove@@Base+0x10c>
   11108:	ldr	r6, [r6, #4]
   1110c:	movw	r1, #8032	; 0x1f60
   11110:	movt	r1, #1
   11114:	ldr	r0, [r6]
   11118:	bl	10958 <strcmp@plt>
   1111c:	cmp	r0, #0
   11120:	bne	1115c <teste_lista_remove@@Base+0x10c>
   11124:	ldr	r6, [r6, #4]
   11128:	movw	r1, #8028	; 0x1f5c
   1112c:	movt	r1, #1
   11130:	ldr	r0, [r6]
   11134:	bl	10958 <strcmp@plt>
   11138:	cmp	r0, #0
   1113c:	bne	1115c <teste_lista_remove@@Base+0x10c>
   11140:	ldr	r3, [r6, #4]
   11144:	movw	r1, #8040	; 0x1f68
   11148:	movt	r1, #1
   1114c:	ldr	r0, [r3]
   11150:	bl	10958 <strcmp@plt>
   11154:	cmp	r0, #0
   11158:	beq	111b8 <teste_lista_remove@@Base+0x168>
   1115c:	movw	r0, #8188	; 0x1ffc
   11160:	movt	r0, #1
   11164:	bl	10964 <printf@plt>
   11168:	add	r5, r5, #1
   1116c:	mov	r1, #0
   11170:	mov	r0, r4
   11174:	bl	11a24 <lista_remove@@Base>
   11178:	cmp	r0, #0
   1117c:	beq	11200 <teste_lista_remove@@Base+0x1b0>
   11180:	movw	r0, #8244	; 0x2034
   11184:	movt	r0, #1
   11188:	bl	10964 <printf@plt>
   1118c:	add	r5, r5, #1
   11190:	mov	r0, r4
   11194:	bl	1189c <lista_apaga@@Base>
   11198:	mov	r0, #10
   1119c:	bl	109dc <putchar@plt>
   111a0:	b	111e8 <teste_lista_remove@@Base+0x198>
   111a4:	movw	r0, #8128	; 0x1fc0
   111a8:	movt	r0, #1
   111ac:	bl	10964 <printf@plt>
   111b0:	add	r5, r5, #1
   111b4:	b	110ec <teste_lista_remove@@Base+0x9c>
   111b8:	mov	r1, #0
   111bc:	mov	r0, r4
   111c0:	bl	11a24 <lista_remove@@Base>
   111c4:	cmp	r0, #0
   111c8:	bne	11180 <teste_lista_remove@@Base+0x130>
   111cc:	mov	r0, r4
   111d0:	bl	1189c <lista_apaga@@Base>
   111d4:	cmp	r5, #0
   111d8:	bne	11198 <teste_lista_remove@@Base+0x148>
   111dc:	movw	r0, #7604	; 0x1db4
   111e0:	movt	r0, #1
   111e4:	bl	10994 <puts@plt>
   111e8:	mov	r0, r5
   111ec:	add	sp, sp, #8
   111f0:	ldrd	r4, [sp]
   111f4:	ldr	r6, [sp, #8]
   111f8:	add	sp, sp, #12
   111fc:	pop	{pc}		; (ldr pc, [sp], #4)
   11200:	mov	r0, r4
   11204:	bl	1189c <lista_apaga@@Base>
   11208:	b	11198 <teste_lista_remove@@Base+0x148>

0001120c <teste_lista_pesquisa@@Base>:
   1120c:	strd	r4, [sp, #-12]!
   11210:	str	lr, [sp, #8]
   11214:	sub	sp, sp, #20
   11218:	movw	r1, #7608	; 0x1db8
   1121c:	movt	r1, #1
   11220:	str	r1, [sp, #12]
   11224:	str	r1, [sp, #8]
   11228:	movw	r5, #8296	; 0x2068
   1122c:	movt	r5, #1
   11230:	str	r5, [sp, #4]
   11234:	str	r1, [sp]
   11238:	mov	r3, r1
   1123c:	mov	r2, r1
   11240:	mov	r0, #7
   11244:	bl	10ae4 <_l@@Base>
   11248:	mov	r4, r0
   1124c:	movw	r0, #8300	; 0x206c
   11250:	movt	r0, #1
   11254:	bl	10964 <printf@plt>
   11258:	mov	r2, #0
   1125c:	mov	r1, r5
   11260:	mov	r0, r4
   11264:	bl	11acc <lista_pesquisa@@Base>
   11268:	ldr	r3, [r4]
   1126c:	ldr	r3, [r3, #4]
   11270:	ldr	r3, [r3, #4]
   11274:	ldr	r3, [r3, #4]
   11278:	ldr	r3, [r3, #4]
   1127c:	cmp	r3, r0
   11280:	moveq	r5, #0
   11284:	beq	11298 <teste_lista_pesquisa@@Base+0x8c>
   11288:	movw	r0, #8320	; 0x2080
   1128c:	movt	r0, #1
   11290:	bl	10964 <printf@plt>
   11294:	mov	r5, #1
   11298:	mov	r2, #0
   1129c:	movw	r1, #8392	; 0x20c8
   112a0:	movt	r1, #1
   112a4:	mov	r0, r4
   112a8:	bl	11acc <lista_pesquisa@@Base>
   112ac:	cmp	r0, #0
   112b0:	beq	112c4 <teste_lista_pesquisa@@Base+0xb8>
   112b4:	movw	r0, #8400	; 0x20d0
   112b8:	movt	r0, #1
   112bc:	bl	10964 <printf@plt>
   112c0:	add	r5, r5, #1
   112c4:	mov	r2, #1
   112c8:	movw	r1, #7608	; 0x1db8
   112cc:	movt	r1, #1
   112d0:	mov	r0, r4
   112d4:	bl	11acc <lista_pesquisa@@Base>
   112d8:	ldr	r3, [r4]
   112dc:	ldr	r3, [r3, #4]
   112e0:	ldr	r3, [r3, #4]
   112e4:	ldr	r3, [r3, #4]
   112e8:	ldr	r3, [r3, #4]
   112ec:	ldr	r3, [r3, #4]
   112f0:	ldr	r3, [r3, #4]
   112f4:	cmp	r3, r0
   112f8:	beq	1134c <teste_lista_pesquisa@@Base+0x140>
   112fc:	movw	r0, #8320	; 0x2080
   11300:	movt	r0, #1
   11304:	bl	10964 <printf@plt>
   11308:	add	r5, r5, #1
   1130c:	mov	r2, #1
   11310:	movw	r1, #8392	; 0x20c8
   11314:	movt	r1, #1
   11318:	mov	r0, r4
   1131c:	bl	11acc <lista_pesquisa@@Base>
   11320:	cmp	r0, #0
   11324:	beq	11398 <teste_lista_pesquisa@@Base+0x18c>
   11328:	movw	r0, #8400	; 0x20d0
   1132c:	movt	r0, #1
   11330:	bl	10964 <printf@plt>
   11334:	add	r5, r5, #1
   11338:	mov	r0, r4
   1133c:	bl	1189c <lista_apaga@@Base>
   11340:	mov	r0, #10
   11344:	bl	109dc <putchar@plt>
   11348:	b	11384 <teste_lista_pesquisa@@Base+0x178>
   1134c:	mov	r2, #1
   11350:	movw	r1, #8392	; 0x20c8
   11354:	movt	r1, #1
   11358:	mov	r0, r4
   1135c:	bl	11acc <lista_pesquisa@@Base>
   11360:	cmp	r0, #0
   11364:	bne	11328 <teste_lista_pesquisa@@Base+0x11c>
   11368:	mov	r0, r4
   1136c:	bl	1189c <lista_apaga@@Base>
   11370:	cmp	r5, #0
   11374:	bne	11340 <teste_lista_pesquisa@@Base+0x134>
   11378:	movw	r0, #7604	; 0x1db4
   1137c:	movt	r0, #1
   11380:	bl	10994 <puts@plt>
   11384:	mov	r0, r5
   11388:	add	sp, sp, #20
   1138c:	ldrd	r4, [sp]
   11390:	add	sp, sp, #8
   11394:	pop	{pc}		; (ldr pc, [sp], #4)
   11398:	mov	r0, r4
   1139c:	bl	1189c <lista_apaga@@Base>
   113a0:	b	11340 <teste_lista_pesquisa@@Base+0x134>

000113a4 <teste_lista_ordena@@Base>:
   113a4:	strd	r4, [sp, #-16]!
   113a8:	str	r6, [sp, #8]
   113ac:	str	lr, [sp, #12]
   113b0:	sub	sp, sp, #8
   113b4:	movw	r3, #8476	; 0x211c
   113b8:	movt	r3, #1
   113bc:	str	r3, [sp, #4]
   113c0:	movw	r3, #8480	; 0x2120
   113c4:	movt	r3, #1
   113c8:	str	r3, [sp]
   113cc:	movw	r3, #8464	; 0x2110
   113d0:	movt	r3, #1
   113d4:	movw	r2, #8468	; 0x2114
   113d8:	movt	r2, #1
   113dc:	movw	r1, #8472	; 0x2118
   113e0:	movt	r1, #1
   113e4:	mov	r0, #5
   113e8:	bl	10ae4 <_l@@Base>
   113ec:	mov	r5, r0
   113f0:	movw	r0, #8484	; 0x2124
   113f4:	movt	r0, #1
   113f8:	bl	10964 <printf@plt>
   113fc:	mov	r0, #0
   11400:	bl	11ba8 <lista_ordena@@Base>
   11404:	cmn	r0, #1
   11408:	moveq	r4, #0
   1140c:	bne	11564 <teste_lista_ordena@@Base+0x1c0>
   11410:	mov	r0, r5
   11414:	bl	11ba8 <lista_ordena@@Base>
   11418:	ldr	r6, [r5]
   1141c:	movw	r1, #8472	; 0x2118
   11420:	movt	r1, #1
   11424:	ldr	r0, [r6]
   11428:	bl	10958 <strcmp@plt>
   1142c:	cmp	r0, #0
   11430:	bne	114a4 <teste_lista_ordena@@Base+0x100>
   11434:	ldr	r6, [r6, #4]
   11438:	movw	r1, #8468	; 0x2114
   1143c:	movt	r1, #1
   11440:	ldr	r0, [r6]
   11444:	bl	10958 <strcmp@plt>
   11448:	cmp	r0, #0
   1144c:	bne	114a4 <teste_lista_ordena@@Base+0x100>
   11450:	ldr	r6, [r6, #4]
   11454:	movw	r1, #8480	; 0x2120
   11458:	movt	r1, #1
   1145c:	ldr	r0, [r6]
   11460:	bl	10958 <strcmp@plt>
   11464:	cmp	r0, #0
   11468:	bne	114a4 <teste_lista_ordena@@Base+0x100>
   1146c:	ldr	r6, [r6, #4]
   11470:	movw	r1, #8476	; 0x211c
   11474:	movt	r1, #1
   11478:	ldr	r0, [r6]
   1147c:	bl	10958 <strcmp@plt>
   11480:	cmp	r0, #0
   11484:	bne	114a4 <teste_lista_ordena@@Base+0x100>
   11488:	ldr	r3, [r6, #4]
   1148c:	movw	r1, #8464	; 0x2110
   11490:	movt	r1, #1
   11494:	ldr	r0, [r3]
   11498:	bl	10958 <strcmp@plt>
   1149c:	cmp	r0, #0
   114a0:	beq	114b4 <teste_lista_ordena@@Base+0x110>
   114a4:	movw	r0, #8552	; 0x2168
   114a8:	movt	r0, #1
   114ac:	bl	10964 <printf@plt>
   114b0:	add	r4, r4, #1
   114b4:	ldr	r6, [r5, #4]
   114b8:	movw	r1, #8464	; 0x2110
   114bc:	movt	r1, #1
   114c0:	ldr	r0, [r6]
   114c4:	bl	10958 <strcmp@plt>
   114c8:	cmp	r0, #0
   114cc:	bne	11540 <teste_lista_ordena@@Base+0x19c>
   114d0:	ldr	r6, [r6, #8]
   114d4:	movw	r1, #8476	; 0x211c
   114d8:	movt	r1, #1
   114dc:	ldr	r0, [r6]
   114e0:	bl	10958 <strcmp@plt>
   114e4:	cmp	r0, #0
   114e8:	bne	11540 <teste_lista_ordena@@Base+0x19c>
   114ec:	ldr	r6, [r6, #8]
   114f0:	movw	r1, #8480	; 0x2120
   114f4:	movt	r1, #1
   114f8:	ldr	r0, [r6]
   114fc:	bl	10958 <strcmp@plt>
   11500:	cmp	r0, #0
   11504:	bne	11540 <teste_lista_ordena@@Base+0x19c>
   11508:	ldr	r6, [r6, #8]
   1150c:	movw	r1, #8468	; 0x2114
   11510:	movt	r1, #1
   11514:	ldr	r0, [r6]
   11518:	bl	10958 <strcmp@plt>
   1151c:	cmp	r0, #0
   11520:	bne	11540 <teste_lista_ordena@@Base+0x19c>
   11524:	ldr	r3, [r6, #8]
   11528:	movw	r1, #8472	; 0x2118
   1152c:	movt	r1, #1
   11530:	ldr	r0, [r3]
   11534:	bl	10958 <strcmp@plt>
   11538:	cmp	r0, #0
   1153c:	beq	11578 <teste_lista_ordena@@Base+0x1d4>
   11540:	movw	r0, #8616	; 0x21a8
   11544:	movt	r0, #1
   11548:	bl	10964 <printf@plt>
   1154c:	add	r4, r4, #1
   11550:	mov	r0, r5
   11554:	bl	1189c <lista_apaga@@Base>
   11558:	mov	r0, #10
   1155c:	bl	109dc <putchar@plt>
   11560:	b	11594 <teste_lista_ordena@@Base+0x1f0>
   11564:	movw	r0, #8504	; 0x2138
   11568:	movt	r0, #1
   1156c:	bl	10964 <printf@plt>
   11570:	mov	r4, #1
   11574:	b	11410 <teste_lista_ordena@@Base+0x6c>
   11578:	mov	r0, r5
   1157c:	bl	1189c <lista_apaga@@Base>
   11580:	cmp	r4, #0
   11584:	bne	11558 <teste_lista_ordena@@Base+0x1b4>
   11588:	movw	r0, #7604	; 0x1db4
   1158c:	movt	r0, #1
   11590:	bl	10994 <puts@plt>
   11594:	mov	r0, r4
   11598:	add	sp, sp, #8
   1159c:	ldrd	r4, [sp]
   115a0:	ldr	r6, [sp, #8]
   115a4:	add	sp, sp, #12
   115a8:	pop	{pc}		; (ldr pc, [sp], #4)

000115ac <teste_lista_inverte@@Base>:
   115ac:	strd	r4, [sp, #-16]!
   115b0:	str	r6, [sp, #8]
   115b4:	str	lr, [sp, #12]
   115b8:	sub	sp, sp, #8
   115bc:	movw	r3, #8476	; 0x211c
   115c0:	movt	r3, #1
   115c4:	str	r3, [sp, #4]
   115c8:	movw	r3, #8480	; 0x2120
   115cc:	movt	r3, #1
   115d0:	str	r3, [sp]
   115d4:	movw	r3, #8464	; 0x2110
   115d8:	movt	r3, #1
   115dc:	movw	r2, #8468	; 0x2114
   115e0:	movt	r2, #1
   115e4:	movw	r1, #8472	; 0x2118
   115e8:	movt	r1, #1
   115ec:	mov	r0, #5
   115f0:	bl	10ae4 <_l@@Base>
   115f4:	mov	r5, r0
   115f8:	movw	r0, #8680	; 0x21e8
   115fc:	movt	r0, #1
   11600:	bl	10964 <printf@plt>
   11604:	mov	r0, #0
   11608:	bl	11c58 <lista_inverte@@Base>
   1160c:	cmn	r0, #1
   11610:	moveq	r4, #0
   11614:	bne	11778 <teste_lista_inverte@@Base+0x1cc>
   11618:	mov	r0, r5
   1161c:	bl	11c58 <lista_inverte@@Base>
   11620:	ldr	r3, [r5, #8]
   11624:	cmp	r3, #5
   11628:	bne	1178c <teste_lista_inverte@@Base+0x1e0>
   1162c:	ldr	r6, [r5]
   11630:	movw	r1, #8476	; 0x211c
   11634:	movt	r1, #1
   11638:	ldr	r0, [r6]
   1163c:	bl	10958 <strcmp@plt>
   11640:	cmp	r0, #0
   11644:	bne	116b8 <teste_lista_inverte@@Base+0x10c>
   11648:	ldr	r6, [r6, #4]
   1164c:	movw	r1, #8480	; 0x2120
   11650:	movt	r1, #1
   11654:	ldr	r0, [r6]
   11658:	bl	10958 <strcmp@plt>
   1165c:	cmp	r0, #0
   11660:	bne	116b8 <teste_lista_inverte@@Base+0x10c>
   11664:	ldr	r6, [r6, #4]
   11668:	movw	r1, #8464	; 0x2110
   1166c:	movt	r1, #1
   11670:	ldr	r0, [r6]
   11674:	bl	10958 <strcmp@plt>
   11678:	cmp	r0, #0
   1167c:	bne	116b8 <teste_lista_inverte@@Base+0x10c>
   11680:	ldr	r6, [r6, #4]
   11684:	movw	r1, #8468	; 0x2114
   11688:	movt	r1, #1
   1168c:	ldr	r0, [r6]
   11690:	bl	10958 <strcmp@plt>
   11694:	cmp	r0, #0
   11698:	bne	116b8 <teste_lista_inverte@@Base+0x10c>
   1169c:	ldr	r3, [r6, #4]
   116a0:	movw	r1, #8472	; 0x2118
   116a4:	movt	r1, #1
   116a8:	ldr	r0, [r3]
   116ac:	bl	10958 <strcmp@plt>
   116b0:	cmp	r0, #0
   116b4:	beq	116c8 <teste_lista_inverte@@Base+0x11c>
   116b8:	movw	r0, #8744	; 0x2228
   116bc:	movt	r0, #1
   116c0:	bl	10964 <printf@plt>
   116c4:	add	r4, r4, #1
   116c8:	ldr	r6, [r5, #4]
   116cc:	movw	r1, #8472	; 0x2118
   116d0:	movt	r1, #1
   116d4:	ldr	r0, [r6]
   116d8:	bl	10958 <strcmp@plt>
   116dc:	cmp	r0, #0
   116e0:	bne	11754 <teste_lista_inverte@@Base+0x1a8>
   116e4:	ldr	r6, [r6, #8]
   116e8:	movw	r1, #8468	; 0x2114
   116ec:	movt	r1, #1
   116f0:	ldr	r0, [r6]
   116f4:	bl	10958 <strcmp@plt>
   116f8:	cmp	r0, #0
   116fc:	bne	11754 <teste_lista_inverte@@Base+0x1a8>
   11700:	ldr	r6, [r6, #8]
   11704:	movw	r1, #8464	; 0x2110
   11708:	movt	r1, #1
   1170c:	ldr	r0, [r6]
   11710:	bl	10958 <strcmp@plt>
   11714:	cmp	r0, #0
   11718:	bne	11754 <teste_lista_inverte@@Base+0x1a8>
   1171c:	ldr	r6, [r6, #8]
   11720:	movw	r1, #8480	; 0x2120
   11724:	movt	r1, #1
   11728:	ldr	r0, [r6]
   1172c:	bl	10958 <strcmp@plt>
   11730:	cmp	r0, #0
   11734:	bne	11754 <teste_lista_inverte@@Base+0x1a8>
   11738:	ldr	r3, [r6, #8]
   1173c:	movw	r1, #8476	; 0x211c
   11740:	movt	r1, #1
   11744:	ldr	r0, [r3]
   11748:	bl	10958 <strcmp@plt>
   1174c:	cmp	r0, #0
   11750:	beq	117a0 <teste_lista_inverte@@Base+0x1f4>
   11754:	movw	r0, #8616	; 0x21a8
   11758:	movt	r0, #1
   1175c:	bl	10964 <printf@plt>
   11760:	add	r4, r4, #1
   11764:	mov	r0, r5
   11768:	bl	1189c <lista_apaga@@Base>
   1176c:	mov	r0, #10
   11770:	bl	109dc <putchar@plt>
   11774:	b	117bc <teste_lista_inverte@@Base+0x210>
   11778:	movw	r0, #8504	; 0x2138
   1177c:	movt	r0, #1
   11780:	bl	10964 <printf@plt>
   11784:	mov	r4, #1
   11788:	b	11618 <teste_lista_inverte@@Base+0x6c>
   1178c:	movw	r0, #8700	; 0x21fc
   11790:	movt	r0, #1
   11794:	bl	10964 <printf@plt>
   11798:	add	r4, r4, #1
   1179c:	b	1162c <teste_lista_inverte@@Base+0x80>
   117a0:	mov	r0, r5
   117a4:	bl	1189c <lista_apaga@@Base>
   117a8:	cmp	r4, #0
   117ac:	bne	1176c <teste_lista_inverte@@Base+0x1c0>
   117b0:	movw	r0, #7604	; 0x1db4
   117b4:	movt	r0, #1
   117b8:	bl	10994 <puts@plt>
   117bc:	mov	r0, r4
   117c0:	add	sp, sp, #8
   117c4:	ldrd	r4, [sp]
   117c8:	ldr	r6, [sp, #8]
   117cc:	add	sp, sp, #12
   117d0:	pop	{pc}		; (ldr pc, [sp], #4)

000117d4 <main@@Base>:
   117d4:	str	r4, [sp, #-8]!
   117d8:	str	lr, [sp, #4]
   117dc:	movw	r0, #12372	; 0x3054
   117e0:	movt	r0, #2
   117e4:	mov	r3, #0
   117e8:	mov	r2, #2
   117ec:	mov	r1, r3
   117f0:	ldr	r0, [r0]
   117f4:	bl	109d0 <setvbuf@plt>
   117f8:	movw	r0, #12368	; 0x3050
   117fc:	movt	r0, #2
   11800:	mov	r3, #0
   11804:	mov	r2, #2
   11808:	mov	r1, r3
   1180c:	ldr	r0, [r0]
   11810:	bl	109d0 <setvbuf@plt>
   11814:	bl	10c34 <teste_lista_nova@@Base>
   11818:	mov	r4, r0
   1181c:	bl	10ccc <teste_lista_insere@@Base>
   11820:	add	r4, r4, r0
   11824:	bl	11050 <teste_lista_remove@@Base>
   11828:	add	r4, r4, r0
   1182c:	bl	1120c <teste_lista_pesquisa@@Base>
   11830:	add	r4, r4, r0
   11834:	bl	113a4 <teste_lista_ordena@@Base>
   11838:	add	r4, r4, r0
   1183c:	bl	115ac <teste_lista_inverte@@Base>
   11840:	adds	r1, r4, r0
   11844:	bne	11864 <main@@Base+0x90>
   11848:	movw	r0, #8808	; 0x2268
   1184c:	movt	r0, #1
   11850:	bl	10994 <puts@plt>
   11854:	mov	r0, #0
   11858:	ldr	r4, [sp]
   1185c:	add	sp, sp, #4
   11860:	pop	{pc}		; (ldr pc, [sp], #4)
   11864:	movw	r0, #8832	; 0x2280
   11868:	movt	r0, #1
   1186c:	bl	10964 <printf@plt>
   11870:	b	11854 <main@@Base+0x80>

00011874 <lista_nova@@Base>:
   11874:	str	r4, [sp, #-8]!
   11878:	str	lr, [sp, #4]
   1187c:	mov	r0, #12
   11880:	bl	109a0 <malloc@plt>
   11884:	cmp	r0, #0
   11888:	movne	r3, #0
   1188c:	strne	r3, [r0, #8]
   11890:	ldr	r4, [sp]
   11894:	add	sp, sp, #4
   11898:	pop	{pc}		; (ldr pc, [sp], #4)

0001189c <lista_apaga@@Base>:
   1189c:	strd	r4, [sp, #-16]!
   118a0:	str	r6, [sp, #8]
   118a4:	str	lr, [sp, #12]
   118a8:	subs	r6, r0, #0
   118ac:	beq	118fc <lista_apaga@@Base+0x60>
   118b0:	ldr	r3, [r6, #8]
   118b4:	cmp	r3, #0
   118b8:	beq	1190c <lista_apaga@@Base+0x70>
   118bc:	ldr	r4, [r6]
   118c0:	cmp	r4, #0
   118c4:	beq	118f4 <lista_apaga@@Base+0x58>
   118c8:	ldr	r3, [r4, #4]
   118cc:	cmp	r3, #0
   118d0:	beq	118f4 <lista_apaga@@Base+0x58>
   118d4:	ldr	r5, [r4, #4]
   118d8:	ldr	r0, [r4]
   118dc:	bl	10970 <free@plt>
   118e0:	mov	r0, r4
   118e4:	bl	10970 <free@plt>
   118e8:	mov	r4, r5
   118ec:	cmp	r5, #0
   118f0:	bne	118d4 <lista_apaga@@Base+0x38>
   118f4:	mov	r0, r6
   118f8:	bl	10970 <free@plt>
   118fc:	ldrd	r4, [sp]
   11900:	ldr	r6, [sp, #8]
   11904:	add	sp, sp, #12
   11908:	pop	{pc}		; (ldr pc, [sp], #4)
   1190c:	mov	r0, r6
   11910:	bl	10970 <free@plt>
   11914:	b	118fc <lista_apaga@@Base+0x60>

00011918 <lista_tamanho@@Base>:
   11918:	cmp	r0, #0
   1191c:	ldrne	r0, [r0, #8]
   11920:	mvneq	r0, #0
   11924:	bx	lr

00011928 <lista_inicio@@Base>:
   11928:	cmp	r0, #0
   1192c:	ldrne	r0, [r0]
   11930:	bx	lr

00011934 <lista_fim@@Base>:
   11934:	cmp	r0, #0
   11938:	ldrne	r0, [r0, #4]
   1193c:	bx	lr

00011940 <lista_insere@@Base>:
   11940:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11944:	strd	r6, [sp, #8]
   11948:	str	r8, [sp, #16]
   1194c:	str	lr, [sp, #20]
   11950:	subs	r4, r0, #0
   11954:	moveq	r5, r4
   11958:	beq	119b4 <lista_insere@@Base+0x74>
   1195c:	mov	r7, r2
   11960:	mov	r6, r1
   11964:	mov	r0, #12
   11968:	bl	109a0 <malloc@plt>
   1196c:	mov	r5, r0
   11970:	mov	r0, r6
   11974:	bl	109c4 <strlen@plt>
   11978:	add	r0, r0, #1
   1197c:	bl	109a0 <malloc@plt>
   11980:	str	r0, [r5]
   11984:	mov	r1, r6
   11988:	bl	10988 <strcpy@plt>
   1198c:	ldr	r3, [r4, #8]
   11990:	cmp	r3, #0
   11994:	bne	119cc <lista_insere@@Base+0x8c>
   11998:	str	r3, [r5, #8]
   1199c:	str	r3, [r5, #4]
   119a0:	str	r5, [r4]
   119a4:	str	r5, [r4, #4]
   119a8:	ldr	r3, [r4, #8]
   119ac:	add	r3, r3, #1
   119b0:	str	r3, [r4, #8]
   119b4:	mov	r0, r5
   119b8:	ldrd	r4, [sp]
   119bc:	ldrd	r6, [sp, #8]
   119c0:	ldr	r8, [sp, #16]
   119c4:	add	sp, sp, #20
   119c8:	pop	{pc}		; (ldr pc, [sp], #4)
   119cc:	cmp	r7, #0
   119d0:	beq	11a08 <lista_insere@@Base+0xc8>
   119d4:	ldr	r3, [r4]
   119d8:	cmp	r3, r7
   119dc:	streq	r7, [r5, #4]
   119e0:	streq	r5, [r4]
   119e4:	streq	r5, [r5, #8]
   119e8:	beq	119a8 <lista_insere@@Base+0x68>
   119ec:	ldr	r3, [r7, #8]
   119f0:	str	r5, [r3, #4]
   119f4:	ldr	r3, [r7, #8]
   119f8:	str	r3, [r5, #8]
   119fc:	str	r7, [r5, #4]
   11a00:	str	r5, [r7, #8]
   11a04:	b	119a8 <lista_insere@@Base+0x68>
   11a08:	mov	r3, #0
   11a0c:	str	r3, [r5, #4]
   11a10:	ldr	r3, [r4, #4]
   11a14:	str	r3, [r5, #8]
   11a18:	str	r5, [r3, #4]
   11a1c:	str	r5, [r4, #4]
   11a20:	b	119a8 <lista_insere@@Base+0x68>

00011a24 <lista_remove@@Base>:
   11a24:	strd	r4, [sp, #-16]!
   11a28:	str	r6, [sp, #8]
   11a2c:	str	lr, [sp, #12]
   11a30:	subs	r4, r1, #0
   11a34:	beq	11ac4 <lista_remove@@Base+0xa0>
   11a38:	ldr	r6, [r4, #4]
   11a3c:	ldr	r3, [r0]
   11a40:	cmp	r3, r4
   11a44:	beq	11a98 <lista_remove@@Base+0x74>
   11a48:	ldr	r3, [r0, #4]
   11a4c:	cmp	r3, r4
   11a50:	beq	11aac <lista_remove@@Base+0x88>
   11a54:	ldr	r3, [r4, #8]
   11a58:	str	r6, [r3, #4]
   11a5c:	ldr	r3, [r4, #8]
   11a60:	str	r3, [r6, #8]
   11a64:	mov	r5, r0
   11a68:	ldr	r0, [r4]
   11a6c:	bl	10970 <free@plt>
   11a70:	mov	r0, r4
   11a74:	bl	10970 <free@plt>
   11a78:	ldr	r3, [r5, #8]
   11a7c:	sub	r3, r3, #1
   11a80:	str	r3, [r5, #8]
   11a84:	mov	r0, r6
   11a88:	ldrd	r4, [sp]
   11a8c:	ldr	r6, [sp, #8]
   11a90:	add	sp, sp, #12
   11a94:	pop	{pc}		; (ldr pc, [sp], #4)
   11a98:	mov	r3, #0
   11a9c:	str	r3, [r6, #8]
   11aa0:	ldr	r3, [r4, #4]
   11aa4:	str	r3, [r0]
   11aa8:	b	11a64 <lista_remove@@Base+0x40>
   11aac:	ldr	r3, [r4, #8]
   11ab0:	mov	r2, #0
   11ab4:	str	r2, [r3, #4]
   11ab8:	ldr	r3, [r4, #8]
   11abc:	str	r3, [r0, #4]
   11ac0:	b	11a64 <lista_remove@@Base+0x40>
   11ac4:	mov	r6, r4
   11ac8:	b	11a84 <lista_remove@@Base+0x60>

00011acc <lista_pesquisa@@Base>:
   11acc:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11ad0:	strd	r6, [sp, #8]
   11ad4:	str	r8, [sp, #16]
   11ad8:	str	lr, [sp, #20]
   11adc:	cmp	r0, #0
   11ae0:	beq	11b90 <lista_pesquisa@@Base+0xc4>
   11ae4:	mov	r6, r1
   11ae8:	mov	r5, r2
   11aec:	cmp	r2, #0
   11af0:	bne	11b44 <lista_pesquisa@@Base+0x78>
   11af4:	ldr	r4, [r0]
   11af8:	ldr	r7, [r0, #8]
   11afc:	cmp	r7, #0
   11b00:	ble	11b98 <lista_pesquisa@@Base+0xcc>
   11b04:	mov	r1, r6
   11b08:	ldr	r0, [r4]
   11b0c:	bl	10958 <strcmp@plt>
   11b10:	cmp	r0, #0
   11b14:	beq	11b2c <lista_pesquisa@@Base+0x60>
   11b18:	ldr	r4, [r4, #4]
   11b1c:	add	r5, r5, #1
   11b20:	cmp	r5, r7
   11b24:	bne	11b04 <lista_pesquisa@@Base+0x38>
   11b28:	mov	r4, #0
   11b2c:	mov	r0, r4
   11b30:	ldrd	r4, [sp]
   11b34:	ldrd	r6, [sp, #8]
   11b38:	ldr	r8, [sp, #16]
   11b3c:	add	sp, sp, #20
   11b40:	pop	{pc}		; (ldr pc, [sp], #4)
   11b44:	cmp	r2, #1
   11b48:	movne	r4, #0
   11b4c:	bne	11b2c <lista_pesquisa@@Base+0x60>
   11b50:	ldr	r4, [r0, #4]
   11b54:	ldr	r7, [r0, #8]
   11b58:	cmp	r7, #0
   11b5c:	ble	11ba0 <lista_pesquisa@@Base+0xd4>
   11b60:	mov	r5, #0
   11b64:	mov	r1, r6
   11b68:	ldr	r0, [r4]
   11b6c:	bl	10958 <strcmp@plt>
   11b70:	cmp	r0, #0
   11b74:	beq	11b2c <lista_pesquisa@@Base+0x60>
   11b78:	ldr	r4, [r4, #8]
   11b7c:	add	r5, r5, #1
   11b80:	cmp	r5, r7
   11b84:	bne	11b64 <lista_pesquisa@@Base+0x98>
   11b88:	mov	r4, #0
   11b8c:	b	11b2c <lista_pesquisa@@Base+0x60>
   11b90:	mov	r4, r0
   11b94:	b	11b2c <lista_pesquisa@@Base+0x60>
   11b98:	mov	r4, #0
   11b9c:	b	11b2c <lista_pesquisa@@Base+0x60>
   11ba0:	mov	r4, #0
   11ba4:	b	11b2c <lista_pesquisa@@Base+0x60>

00011ba8 <lista_ordena@@Base>:
   11ba8:	strd	r4, [sp, #-32]!	; 0xffffffe0
   11bac:	strd	r6, [sp, #8]
   11bb0:	strd	r8, [sp, #16]
   11bb4:	str	sl, [sp, #24]
   11bb8:	str	lr, [sp, #28]
   11bbc:	subs	r8, r0, #0
   11bc0:	beq	11c34 <lista_ordena@@Base+0x8c>
   11bc4:	ldr	r0, [r8, #8]
   11bc8:	cmp	r0, #0
   11bcc:	beq	11c40 <lista_ordena@@Base+0x98>
   11bd0:	ldr	r9, [r8]
   11bd4:	ldr	r3, [r8, #4]
   11bd8:	cmp	r9, r3
   11bdc:	moveq	r0, #0
   11be0:	bne	11bf8 <lista_ordena@@Base+0x50>
   11be4:	b	11c40 <lista_ordena@@Base+0x98>
   11be8:	ldr	r9, [r9, #4]
   11bec:	ldr	r3, [r8, #4]
   11bf0:	cmp	r3, r9
   11bf4:	beq	11c3c <lista_ordena@@Base+0x94>
   11bf8:	mov	r4, r9
   11bfc:	ldr	r5, [r4]
   11c00:	ldr	r7, [r4, #4]
   11c04:	ldr	r6, [r7]
   11c08:	mov	r1, r6
   11c0c:	mov	r0, r5
   11c10:	bl	10958 <strcmp@plt>
   11c14:	cmp	r0, #0
   11c18:	ble	11be8 <lista_ordena@@Base+0x40>
   11c1c:	str	r6, [r4]
   11c20:	str	r5, [r7]
   11c24:	ldr	r3, [r8]
   11c28:	cmp	r3, r4
   11c2c:	ldrne	r4, [r4, #8]
   11c30:	b	11bfc <lista_ordena@@Base+0x54>
   11c34:	mvn	r0, #0
   11c38:	b	11c40 <lista_ordena@@Base+0x98>
   11c3c:	mov	r0, #0
   11c40:	ldrd	r4, [sp]
   11c44:	ldrd	r6, [sp, #8]
   11c48:	ldrd	r8, [sp, #16]
   11c4c:	ldr	sl, [sp, #24]
   11c50:	add	sp, sp, #28
   11c54:	pop	{pc}		; (ldr pc, [sp], #4)

00011c58 <lista_inverte@@Base>:
   11c58:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11c5c:	strd	r6, [sp, #8]
   11c60:	str	r8, [sp, #16]
   11c64:	str	lr, [sp, #20]
   11c68:	subs	r8, r0, #0
   11c6c:	beq	11ce8 <lista_inverte@@Base+0x90>
   11c70:	ldr	r0, [r8, #8]
   11c74:	cmp	r0, #0
   11c78:	beq	11cd4 <lista_inverte@@Base+0x7c>
   11c7c:	ldr	r4, [r8]
   11c80:	ldr	r5, [r8, #4]
   11c84:	cmp	r0, #1
   11c88:	ble	11cf0 <lista_inverte@@Base+0x98>
   11c8c:	mov	r6, #0
   11c90:	ldr	r0, [r4]
   11c94:	bl	1097c <strdup@plt>
   11c98:	mov	r7, r0
   11c9c:	ldr	r0, [r5]
   11ca0:	bl	1097c <strdup@plt>
   11ca4:	str	r0, [r4]
   11ca8:	mov	r0, r7
   11cac:	bl	1097c <strdup@plt>
   11cb0:	str	r0, [r5]
   11cb4:	ldr	r4, [r4, #4]
   11cb8:	ldr	r5, [r5, #8]
   11cbc:	add	r6, r6, #1
   11cc0:	ldr	r3, [r8, #8]
   11cc4:	add	r3, r3, r3, lsr #31
   11cc8:	cmp	r6, r3, asr #1
   11ccc:	blt	11c90 <lista_inverte@@Base+0x38>
   11cd0:	mov	r0, #0
   11cd4:	ldrd	r4, [sp]
   11cd8:	ldrd	r6, [sp, #8]
   11cdc:	ldr	r8, [sp, #16]
   11ce0:	add	sp, sp, #20
   11ce4:	pop	{pc}		; (ldr pc, [sp], #4)
   11ce8:	mvn	r0, #0
   11cec:	b	11cd4 <lista_inverte@@Base+0x7c>
   11cf0:	mov	r0, #0
   11cf4:	b	11cd4 <lista_inverte@@Base+0x7c>

00011cf8 <__libc_csu_init@@Base>:
   11cf8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11cfc:	mov	r7, r0
   11d00:	ldr	r6, [pc, #72]	; 11d50 <__libc_csu_init@@Base+0x58>
   11d04:	ldr	r5, [pc, #72]	; 11d54 <__libc_csu_init@@Base+0x5c>
   11d08:	add	r6, pc, r6
   11d0c:	add	r5, pc, r5
   11d10:	sub	r6, r6, r5
   11d14:	mov	r8, r1
   11d18:	mov	r9, r2
   11d1c:	bl	10938 <strcmp@plt-0x20>
   11d20:	asrs	r6, r6, #2
   11d24:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   11d28:	mov	r4, #0
   11d2c:	add	r4, r4, #1
   11d30:	ldr	r3, [r5], #4
   11d34:	mov	r2, r9
   11d38:	mov	r1, r8
   11d3c:	mov	r0, r7
   11d40:	blx	r3
   11d44:	cmp	r6, r4
   11d48:	bne	11d2c <__libc_csu_init@@Base+0x34>
   11d4c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11d50:	andeq	r1, r1, r4, lsl #4
   11d54:	strdeq	r1, [r1], -ip

00011d58 <__libc_csu_fini@@Base>:
   11d58:	bx	lr

Disassembly of section .fini:

00011d5c <.fini>:
   11d5c:	push	{r3, lr}
   11d60:	pop	{r3, pc}
