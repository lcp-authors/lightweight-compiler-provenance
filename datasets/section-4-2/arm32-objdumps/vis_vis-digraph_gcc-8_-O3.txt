
../repos/vis/vis-digraph:     file format elf32-littlearm


Disassembly of section .init:

000105c4 <.init>:
   105c4:	push	{r3, lr}
   105c8:	bl	10a90 <tcgetattr@plt+0x3e0>
   105cc:	pop	{r3, pc}

Disassembly of section .plt:

000105d0 <calloc@plt-0x14>:
   105d0:	push	{lr}		; (str lr, [sp, #-4]!)
   105d4:	ldr	lr, [pc, #4]	; 105e0 <calloc@plt-0x4>
   105d8:	add	lr, pc, lr
   105dc:	ldr	pc, [lr, #8]!
   105e0:	andeq	r5, r2, r4, asr #19

000105e4 <calloc@plt>:
   105e4:	add	ip, pc, #0, 12
   105e8:	add	ip, ip, #151552	; 0x25000
   105ec:	ldr	pc, [ip, #2500]!	; 0x9c4

000105f0 <strcmp@plt>:
   105f0:	add	ip, pc, #0, 12
   105f4:	add	ip, ip, #151552	; 0x25000
   105f8:	ldr	pc, [ip, #2492]!	; 0x9bc

000105fc <read@plt>:
   105fc:	add	ip, pc, #0, 12
   10600:	add	ip, ip, #151552	; 0x25000
   10604:	ldr	pc, [ip, #2484]!	; 0x9b4

00010608 <__stack_chk_fail@plt>:
   10608:	add	ip, pc, #0, 12
   1060c:	add	ip, ip, #151552	; 0x25000
   10610:	ldr	pc, [ip, #2476]!	; 0x9ac

00010614 <perror@plt>:
   10614:	add	ip, pc, #0, 12
   10618:	add	ip, ip, #151552	; 0x25000
   1061c:	ldr	pc, [ip, #2468]!	; 0x9a4

00010620 <putwchar@plt>:
   10620:	add	ip, pc, #0, 12
   10624:	add	ip, ip, #151552	; 0x25000
   10628:	ldr	pc, [ip, #2460]!	; 0x99c

0001062c <fwrite@plt>:
   1062c:	add	ip, pc, #0, 12
   10630:	add	ip, ip, #151552	; 0x25000
   10634:	ldr	pc, [ip, #2452]!	; 0x994

00010638 <tcsetattr@plt>:
   10638:	add	ip, pc, #0, 12
   1063c:	add	ip, ip, #151552	; 0x25000
   10640:	ldr	pc, [ip, #2444]!	; 0x98c

00010644 <__libc_start_main@plt>:
   10644:	add	ip, pc, #0, 12
   10648:	add	ip, ip, #151552	; 0x25000
   1064c:	ldr	pc, [ip, #2436]!	; 0x984

00010650 <__gmon_start__@plt>:
   10650:	add	ip, pc, #0, 12
   10654:	add	ip, ip, #151552	; 0x25000
   10658:	ldr	pc, [ip, #2428]!	; 0x97c

0001065c <strlen@plt>:
   1065c:	add	ip, pc, #0, 12
   10660:	add	ip, ip, #151552	; 0x25000
   10664:	ldr	pc, [ip, #2420]!	; 0x974

00010668 <__errno_location@plt>:
   10668:	add	ip, pc, #0, 12
   1066c:	add	ip, ip, #151552	; 0x25000
   10670:	ldr	pc, [ip, #2412]!	; 0x96c

00010674 <__fprintf_chk@plt>:
   10674:	add	ip, pc, #0, 12
   10678:	add	ip, ip, #151552	; 0x25000
   1067c:	ldr	pc, [ip, #2404]!	; 0x964

00010680 <setlocale@plt>:
   10680:	add	ip, pc, #0, 12
   10684:	add	ip, ip, #151552	; 0x25000
   10688:	ldr	pc, [ip, #2396]!	; 0x95c

0001068c <__wprintf_chk@plt>:
   1068c:	add	ip, pc, #0, 12
   10690:	add	ip, ip, #151552	; 0x25000
   10694:	ldr	pc, [ip, #2388]!	; 0x954

00010698 <strncmp@plt>:
   10698:	add	ip, pc, #0, 12
   1069c:	add	ip, ip, #151552	; 0x25000
   106a0:	ldr	pc, [ip, #2380]!	; 0x94c

000106a4 <abort@plt>:
   106a4:	add	ip, pc, #0, 12
   106a8:	add	ip, ip, #151552	; 0x25000
   106ac:	ldr	pc, [ip, #2372]!	; 0x944

000106b0 <tcgetattr@plt>:
   106b0:	add	ip, pc, #0, 12
   106b4:	add	ip, ip, #151552	; 0x25000
   106b8:	ldr	pc, [ip, #2364]!	; 0x93c

Disassembly of section .text:

000106bc <.text>:
   106bc:	strd	r4, [sp, #-36]!	; 0xffffffdc
   106c0:	strd	r6, [sp, #8]
   106c4:	mov	r7, r1
   106c8:	movw	r1, #19424	; 0x4be0
   106cc:	movt	r1, #2
   106d0:	strd	r8, [sp, #16]
   106d4:	movw	r9, #24224	; 0x5ea0
   106d8:	movt	r9, #3
   106dc:	strd	sl, [sp, #24]
   106e0:	mov	r8, r0
   106e4:	ldr	r3, [r9]
   106e8:	mov	r0, #6
   106ec:	str	lr, [sp, #32]
   106f0:	sub	sp, sp, #36	; 0x24
   106f4:	str	r3, [sp, #28]
   106f8:	bl	10680 <setlocale@plt>
   106fc:	cmp	r8, #1
   10700:	beq	109e4 <tcgetattr@plt+0x334>
   10704:	movw	r1, #33312	; 0x8220
   10708:	movt	r1, #1
   1070c:	ldr	r0, [r7, #4]
   10710:	bl	105f0 <strcmp@plt>
   10714:	subs	r6, r0, #0
   10718:	beq	107d8 <tcgetattr@plt+0x128>
   1071c:	sub	r3, r8, #1
   10720:	mov	r1, #4
   10724:	mov	r0, r3
   10728:	str	r3, [sp, #12]
   1072c:	bl	105e4 <calloc@plt>
   10730:	subs	r3, r0, #0
   10734:	str	r3, [sp, #8]
   10738:	beq	10a44 <tcgetattr@plt+0x394>
   1073c:	cmp	r8, #1
   10740:	ldrgt	r3, [sp, #8]
   10744:	movgt	r6, #1
   10748:	subgt	fp, r3, #4
   1074c:	ble	108f4 <tcgetattr@plt+0x244>
   10750:	ldr	r5, [r7, #4]!
   10754:	movw	r4, #2992	; 0xbb0
   10758:	movt	r4, #1
   1075c:	mov	r0, r5
   10760:	bl	1065c <strlen@plt>
   10764:	mov	sl, r0
   10768:	b	10778 <tcgetattr@plt+0xc8>
   1076c:	ldrb	r3, [r4, #16]!
   10770:	cmp	r3, #0
   10774:	beq	10990 <tcgetattr@plt+0x2e0>
   10778:	mov	r2, sl
   1077c:	mov	r1, r4
   10780:	mov	r0, r5
   10784:	bl	10698 <strncmp@plt>
   10788:	cmp	r0, #0
   1078c:	bne	1076c <tcgetattr@plt+0xbc>
   10790:	ldrb	r2, [r4, sl]
   10794:	ldr	r3, [r4, #8]
   10798:	cmp	r2, #0
   1079c:	str	r3, [fp, #4]!
   107a0:	beq	108e8 <tcgetattr@plt+0x238>
   107a4:	mov	r6, #2
   107a8:	ldr	r2, [sp, #28]
   107ac:	mov	r0, r6
   107b0:	ldr	r3, [r9]
   107b4:	cmp	r2, r3
   107b8:	bne	10a50 <tcgetattr@plt+0x3a0>
   107bc:	add	sp, sp, #36	; 0x24
   107c0:	ldrd	r4, [sp]
   107c4:	ldrd	r6, [sp, #8]
   107c8:	ldrd	r8, [sp, #16]
   107cc:	ldrd	sl, [sp, #24]
   107d0:	add	sp, sp, #32
   107d4:	pop	{pc}		; (ldr pc, [sp], #4)
   107d8:	movw	r5, #24644	; 0x6044
   107dc:	movt	r5, #3
   107e0:	mov	r1, r5
   107e4:	bl	106b0 <tcgetattr@plt>
   107e8:	movw	ip, #24584	; 0x6008
   107ec:	movt	ip, #3
   107f0:	ldm	r5, {r1, r4}
   107f4:	mov	r0, #1
   107f8:	ldrd	r2, [r5, #8]
   107fc:	bic	r1, r1, #1504	; 0x5e0
   10800:	bic	r1, r1, #10
   10804:	strd	r2, [ip, #8]
   10808:	ldr	r7, [ip, #8]
   1080c:	stm	ip, {r1, r4}
   10810:	add	r4, sp, #20
   10814:	ldrd	r2, [r5, #16]
   10818:	ldr	lr, [ip, #12]
   1081c:	strd	r2, [ip, #16]
   10820:	bic	r3, r7, #304	; 0x130
   10824:	add	r7, sp, #27
   10828:	orr	r3, r3, #48	; 0x30
   1082c:	bic	lr, lr, #32768	; 0x8000
   10830:	str	r3, [ip, #8]
   10834:	bic	lr, lr, #75	; 0x4b
   10838:	strb	r0, [ip, #23]
   1083c:	ldrd	r0, [r5, #24]
   10840:	str	lr, [ip, #12]
   10844:	ldrd	r2, [r5, #32]
   10848:	ldr	lr, [r5, #56]	; 0x38
   1084c:	strd	r0, [ip, #24]
   10850:	ldrd	r0, [r5, #48]	; 0x30
   10854:	strd	r2, [ip, #32]
   10858:	ldrd	r2, [r5, #40]	; 0x28
   1085c:	str	lr, [ip, #56]	; 0x38
   10860:	strd	r2, [ip, #40]	; 0x28
   10864:	mov	r2, ip
   10868:	strd	r0, [ip, #48]	; 0x30
   1086c:	mov	r1, r6
   10870:	mov	r0, r6
   10874:	bl	10638 <tcsetattr@plt>
   10878:	str	r6, [sp, #20]
   1087c:	str	r6, [sp, #24]
   10880:	mov	r2, #1
   10884:	mov	r1, r4
   10888:	mov	r0, #0
   1088c:	bl	105fc <read@plt>
   10890:	cmn	r0, #1
   10894:	mov	r8, r0
   10898:	bne	10928 <tcgetattr@plt+0x278>
   1089c:	bl	10668 <__errno_location@plt>
   108a0:	ldr	r3, [r0]
   108a4:	cmp	r3, #4
   108a8:	beq	10880 <tcgetattr@plt+0x1d0>
   108ac:	mov	r1, #0
   108b0:	movw	r2, #24644	; 0x6044
   108b4:	movt	r2, #3
   108b8:	mov	r0, r1
   108bc:	bl	10638 <tcsetattr@plt>
   108c0:	movw	r3, #24576	; 0x6000
   108c4:	movt	r3, #3
   108c8:	movw	r0, #33340	; 0x823c
   108cc:	movt	r0, #1
   108d0:	ldr	r3, [r3]
   108d4:	mov	r2, #9
   108d8:	mov	r1, #1
   108dc:	mov	r6, #3
   108e0:	bl	1062c <fwrite@plt>
   108e4:	b	107a8 <tcgetattr@plt+0xf8>
   108e8:	add	r6, r6, #1
   108ec:	cmp	r8, r6
   108f0:	bne	10750 <tcgetattr@plt+0xa0>
   108f4:	ldr	r3, [sp, #12]
   108f8:	cmp	r3, #0
   108fc:	ldrgt	r3, [sp, #8]
   10900:	addgt	r8, r3, r8, lsl #2
   10904:	subgt	sl, r3, #4
   10908:	subgt	r8, r8, #8
   1090c:	ble	10920 <tcgetattr@plt+0x270>
   10910:	ldr	r0, [sl, #4]!
   10914:	bl	10620 <putwchar@plt>
   10918:	cmp	sl, r8
   1091c:	bne	10910 <tcgetattr@plt+0x260>
   10920:	mov	r6, #0
   10924:	b	107a8 <tcgetattr@plt+0xf8>
   10928:	add	r0, sp, #20
   1092c:	movw	r5, #2992	; 0xbb0
   10930:	movt	r5, #1
   10934:	bl	1065c <strlen@plt>
   10938:	mov	sl, r0
   1093c:	b	1094c <tcgetattr@plt+0x29c>
   10940:	ldrb	r3, [r5, #16]!
   10944:	cmp	r3, #0
   10948:	beq	10a20 <tcgetattr@plt+0x370>
   1094c:	mov	r2, sl
   10950:	mov	r1, r5
   10954:	add	r0, sp, #20
   10958:	bl	10698 <strncmp@plt>
   1095c:	subs	r6, r0, #0
   10960:	bne	10940 <tcgetattr@plt+0x290>
   10964:	ldrb	r3, [r5, sl]
   10968:	cmp	r3, #0
   1096c:	bne	109b8 <tcgetattr@plt+0x308>
   10970:	ldr	r4, [r5, #8]
   10974:	mov	r1, r6
   10978:	movw	r2, #24644	; 0x6044
   1097c:	movt	r2, #3
   10980:	bl	10638 <tcsetattr@plt>
   10984:	mov	r0, r4
   10988:	bl	10620 <putwchar@plt>
   1098c:	b	107a8 <tcgetattr@plt+0xf8>
   10990:	movw	r0, #24576	; 0x6000
   10994:	movt	r0, #3
   10998:	mov	r3, r5
   1099c:	movw	r2, #33316	; 0x8224
   109a0:	movt	r2, #1
   109a4:	ldr	r0, [r0]
   109a8:	mov	r1, #1
   109ac:	mov	r6, #1
   109b0:	bl	10674 <__fprintf_chk@plt>
   109b4:	b	107a8 <tcgetattr@plt+0xf8>
   109b8:	cmp	r8, #0
   109bc:	beq	10a20 <tcgetattr@plt+0x370>
   109c0:	add	r4, r4, #1
   109c4:	cmp	r7, r4
   109c8:	bne	10880 <tcgetattr@plt+0x1d0>
   109cc:	mov	r1, r6
   109d0:	movw	r2, #24644	; 0x6044
   109d4:	movt	r2, #3
   109d8:	mov	r6, #1
   109dc:	bl	10638 <tcsetattr@plt>
   109e0:	b	107a8 <tcgetattr@plt+0xf8>
   109e4:	movw	r4, #2992	; 0xbb0
   109e8:	movt	r4, #1
   109ec:	movw	r5, #33352	; 0x8248
   109f0:	movt	r5, #1
   109f4:	mov	r2, r4
   109f8:	mov	r1, r5
   109fc:	ldr	r3, [r4, #8]
   10a00:	mov	r0, #1
   10a04:	ldr	ip, [r4, #12]
   10a08:	str	ip, [sp]
   10a0c:	bl	1068c <__wprintf_chk@plt>
   10a10:	ldrb	r3, [r4, #16]!
   10a14:	cmp	r3, #0
   10a18:	bne	109f4 <tcgetattr@plt+0x344>
   10a1c:	b	10920 <tcgetattr@plt+0x270>
   10a20:	mov	r1, #0
   10a24:	movw	r2, #24644	; 0x6044
   10a28:	movt	r2, #3
   10a2c:	mov	r0, r1
   10a30:	bl	10638 <tcsetattr@plt>
   10a34:	movw	r0, #24576	; 0x6000
   10a38:	movt	r0, #3
   10a3c:	add	r3, sp, #20
   10a40:	b	1099c <tcgetattr@plt+0x2ec>
   10a44:	bl	10614 <perror@plt>
   10a48:	mov	r6, #1
   10a4c:	b	107a8 <tcgetattr@plt+0xf8>
   10a50:	bl	10608 <__stack_chk_fail@plt>
   10a54:	mov	fp, #0
   10a58:	mov	lr, #0
   10a5c:	pop	{r1}		; (ldr r1, [sp], #4)
   10a60:	mov	r2, sp
   10a64:	push	{r2}		; (str r2, [sp, #-4]!)
   10a68:	push	{r0}		; (str r0, [sp, #-4]!)
   10a6c:	ldr	ip, [pc, #16]	; 10a84 <tcgetattr@plt+0x3d4>
   10a70:	push	{ip}		; (str ip, [sp, #-4]!)
   10a74:	ldr	r0, [pc, #12]	; 10a88 <tcgetattr@plt+0x3d8>
   10a78:	ldr	r3, [pc, #12]	; 10a8c <tcgetattr@plt+0x3dc>
   10a7c:	bl	10644 <__libc_start_main@plt>
   10a80:	bl	106a4 <abort@plt>
   10a84:	andeq	r0, r1, r4, lsr #23
   10a88:			; <UNDEFINED> instruction: 0x000106bc
   10a8c:	andeq	r0, r1, r4, asr #22
   10a90:	ldr	r3, [pc, #20]	; 10aac <tcgetattr@plt+0x3fc>
   10a94:	ldr	r2, [pc, #20]	; 10ab0 <tcgetattr@plt+0x400>
   10a98:	add	r3, pc, r3
   10a9c:	ldr	r2, [r3, r2]
   10aa0:	cmp	r2, #0
   10aa4:	bxeq	lr
   10aa8:	b	10650 <__gmon_start__@plt>
   10aac:	andeq	r5, r2, r4, lsl #10
   10ab0:	andeq	r0, r0, r4, asr r0
   10ab4:	ldr	r0, [pc, #24]	; 10ad4 <tcgetattr@plt+0x424>
   10ab8:	ldr	r3, [pc, #24]	; 10ad8 <tcgetattr@plt+0x428>
   10abc:	cmp	r3, r0
   10ac0:	bxeq	lr
   10ac4:	ldr	r3, [pc, #16]	; 10adc <tcgetattr@plt+0x42c>
   10ac8:	cmp	r3, #0
   10acc:	bxeq	lr
   10ad0:	bx	r3
   10ad4:	andeq	r6, r3, r0
   10ad8:	andeq	r6, r3, r0
   10adc:	andeq	r0, r0, r0
   10ae0:	ldr	r0, [pc, #36]	; 10b0c <tcgetattr@plt+0x45c>
   10ae4:	ldr	r1, [pc, #36]	; 10b10 <tcgetattr@plt+0x460>
   10ae8:	sub	r1, r1, r0
   10aec:	asr	r1, r1, #2
   10af0:	add	r1, r1, r1, lsr #31
   10af4:	asrs	r1, r1, #1
   10af8:	bxeq	lr
   10afc:	ldr	r3, [pc, #16]	; 10b14 <tcgetattr@plt+0x464>
   10b00:	cmp	r3, #0
   10b04:	bxeq	lr
   10b08:	bx	r3
   10b0c:	andeq	r6, r3, r0
   10b10:	andeq	r6, r3, r0
   10b14:	andeq	r0, r0, r0
   10b18:	push	{r4, lr}
   10b1c:	ldr	r4, [pc, #24]	; 10b3c <tcgetattr@plt+0x48c>
   10b20:	ldrb	r3, [r4]
   10b24:	cmp	r3, #0
   10b28:	popne	{r4, pc}
   10b2c:	bl	10ab4 <tcgetattr@plt+0x404>
   10b30:	mov	r3, #1
   10b34:	strb	r3, [r4]
   10b38:	pop	{r4, pc}
   10b3c:	andeq	r6, r3, r4
   10b40:	b	10ae0 <tcgetattr@plt+0x430>
   10b44:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10b48:	mov	r7, r0
   10b4c:	ldr	r6, [pc, #72]	; 10b9c <tcgetattr@plt+0x4ec>
   10b50:	ldr	r5, [pc, #72]	; 10ba0 <tcgetattr@plt+0x4f0>
   10b54:	add	r6, pc, r6
   10b58:	add	r5, pc, r5
   10b5c:	sub	r6, r6, r5
   10b60:	mov	r8, r1
   10b64:	mov	r9, r2
   10b68:	bl	105c4 <calloc@plt-0x20>
   10b6c:	asrs	r6, r6, #2
   10b70:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10b74:	mov	r4, #0
   10b78:	add	r4, r4, #1
   10b7c:	ldr	r3, [r5], #4
   10b80:	mov	r2, r9
   10b84:	mov	r1, r8
   10b88:	mov	r0, r7
   10b8c:	blx	r3
   10b90:	cmp	r6, r4
   10b94:	bne	10b78 <tcgetattr@plt+0x4c8>
   10b98:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10b9c:	andeq	r5, r2, r0, asr #6
   10ba0:	andeq	r5, r2, r8, lsr r3
   10ba4:	bx	lr

Disassembly of section .fini:

00010ba8 <.fini>:
   10ba8:	push	{r3, lr}
   10bac:	pop	{r3, pc}
