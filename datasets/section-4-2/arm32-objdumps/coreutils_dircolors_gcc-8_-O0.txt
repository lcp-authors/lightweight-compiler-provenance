
../repos/coreutils/src/dircolors:     file format elf32-littlearm


Disassembly of section .init:

00010d30 <.init>:
   10d30:	push	{r3, lr}
   10d34:	bl	10ffc <close@plt+0x48>
   10d38:	pop	{r3, pc}

Disassembly of section .plt:

00010d3c <calloc@plt-0x14>:
   10d3c:	push	{lr}		; (str lr, [sp, #-4]!)
   10d40:	ldr	lr, [pc, #4]	; 10d4c <calloc@plt-0x4>
   10d44:	add	lr, pc, lr
   10d48:	ldr	pc, [lr, #8]!
   10d4c:			; <UNDEFINED> instruction: 0x0001a2b4

00010d50 <calloc@plt>:
   10d50:	add	ip, pc, #0, 12
   10d54:	add	ip, ip, #106496	; 0x1a000
   10d58:	ldr	pc, [ip, #692]!	; 0x2b4

00010d5c <fputs_unlocked@plt>:
   10d5c:	add	ip, pc, #0, 12
   10d60:	add	ip, ip, #106496	; 0x1a000
   10d64:	ldr	pc, [ip, #684]!	; 0x2ac

00010d68 <strcmp@plt>:
   10d68:	add	ip, pc, #0, 12
   10d6c:	add	ip, ip, #106496	; 0x1a000
   10d70:	ldr	pc, [ip, #676]!	; 0x2a4

00010d74 <printf@plt>:
   10d74:	add	ip, pc, #0, 12
   10d78:	add	ip, ip, #106496	; 0x1a000
   10d7c:	ldr	pc, [ip, #668]!	; 0x29c

00010d80 <fflush@plt>:
   10d80:	add	ip, pc, #0, 12
   10d84:	add	ip, ip, #106496	; 0x1a000
   10d88:	ldr	pc, [ip, #660]!	; 0x294

00010d8c <free@plt>:
   10d8c:	add	ip, pc, #0, 12
   10d90:	add	ip, ip, #106496	; 0x1a000
   10d94:	ldr	pc, [ip, #652]!	; 0x28c

00010d98 <_exit@plt>:
   10d98:	add	ip, pc, #0, 12
   10d9c:	add	ip, ip, #106496	; 0x1a000
   10da0:	ldr	pc, [ip, #644]!	; 0x284

00010da4 <memcpy@plt>:
   10da4:	add	ip, pc, #0, 12
   10da8:	add	ip, ip, #106496	; 0x1a000
   10dac:	ldr	pc, [ip, #636]!	; 0x27c

00010db0 <mbsinit@plt>:
   10db0:	add	ip, pc, #0, 12
   10db4:	add	ip, ip, #106496	; 0x1a000
   10db8:	ldr	pc, [ip, #628]!	; 0x274

00010dbc <fwrite_unlocked@plt>:
   10dbc:	add	ip, pc, #0, 12
   10dc0:	add	ip, ip, #106496	; 0x1a000
   10dc4:	ldr	pc, [ip, #620]!	; 0x26c

00010dc8 <memcmp@plt>:
   10dc8:	add	ip, pc, #0, 12
   10dcc:	add	ip, ip, #106496	; 0x1a000
   10dd0:	ldr	pc, [ip, #612]!	; 0x264

00010dd4 <fputc_unlocked@plt>:
   10dd4:	add	ip, pc, #0, 12
   10dd8:	add	ip, ip, #106496	; 0x1a000
   10ddc:	ldr	pc, [ip, #604]!	; 0x25c

00010de0 <dup2@plt>:
   10de0:	add	ip, pc, #0, 12
   10de4:	add	ip, ip, #106496	; 0x1a000
   10de8:	ldr	pc, [ip, #596]!	; 0x254

00010dec <realloc@plt>:
   10dec:	add	ip, pc, #0, 12
   10df0:	add	ip, ip, #106496	; 0x1a000
   10df4:	ldr	pc, [ip, #588]!	; 0x24c

00010df8 <textdomain@plt>:
   10df8:	add	ip, pc, #0, 12
   10dfc:	add	ip, ip, #106496	; 0x1a000
   10e00:	ldr	pc, [ip, #580]!	; 0x244

00010e04 <iswprint@plt>:
   10e04:	add	ip, pc, #0, 12
   10e08:	add	ip, ip, #106496	; 0x1a000
   10e0c:	ldr	pc, [ip, #572]!	; 0x23c

00010e10 <fwrite@plt>:
   10e10:	add	ip, pc, #0, 12
   10e14:	add	ip, ip, #106496	; 0x1a000
   10e18:	ldr	pc, [ip, #564]!	; 0x234

00010e1c <lseek64@plt>:
   10e1c:	add	ip, pc, #0, 12
   10e20:	add	ip, ip, #106496	; 0x1a000
   10e24:	ldr	pc, [ip, #556]!	; 0x22c

00010e28 <__ctype_get_mb_cur_max@plt>:
   10e28:	add	ip, pc, #0, 12
   10e2c:	add	ip, ip, #106496	; 0x1a000
   10e30:	ldr	pc, [ip, #548]!	; 0x224

00010e34 <__fpending@plt>:
   10e34:	add	ip, pc, #0, 12
   10e38:	add	ip, ip, #106496	; 0x1a000
   10e3c:	ldr	pc, [ip, #540]!	; 0x21c

00010e40 <ferror_unlocked@plt>:
   10e40:	add	ip, pc, #0, 12
   10e44:	add	ip, ip, #106496	; 0x1a000
   10e48:	ldr	pc, [ip, #532]!	; 0x214

00010e4c <mbrtowc@plt>:
   10e4c:	add	ip, pc, #0, 12
   10e50:	add	ip, ip, #106496	; 0x1a000
   10e54:	ldr	pc, [ip, #524]!	; 0x20c

00010e58 <error@plt>:
   10e58:	add	ip, pc, #0, 12
   10e5c:	add	ip, ip, #106496	; 0x1a000
   10e60:	ldr	pc, [ip, #516]!	; 0x204

00010e64 <fnmatch@plt>:
   10e64:	add	ip, pc, #0, 12
   10e68:	add	ip, ip, #106496	; 0x1a000
   10e6c:	ldr	pc, [ip, #508]!	; 0x1fc

00010e70 <open64@plt>:
   10e70:	add	ip, pc, #0, 12
   10e74:	add	ip, ip, #106496	; 0x1a000
   10e78:	ldr	pc, [ip, #500]!	; 0x1f4

00010e7c <getenv@plt>:
   10e7c:	add	ip, pc, #0, 12
   10e80:	add	ip, ip, #106496	; 0x1a000
   10e84:	ldr	pc, [ip, #492]!	; 0x1ec

00010e88 <puts@plt>:
   10e88:	add	ip, pc, #0, 12
   10e8c:	add	ip, ip, #106496	; 0x1a000
   10e90:	ldr	pc, [ip, #484]!	; 0x1e4

00010e94 <malloc@plt>:
   10e94:	add	ip, pc, #0, 12
   10e98:	add	ip, ip, #106496	; 0x1a000
   10e9c:	ldr	pc, [ip, #476]!	; 0x1dc

00010ea0 <__libc_start_main@plt>:
   10ea0:	add	ip, pc, #0, 12
   10ea4:	add	ip, ip, #106496	; 0x1a000
   10ea8:	ldr	pc, [ip, #468]!	; 0x1d4

00010eac <__freading@plt>:
   10eac:	add	ip, pc, #0, 12
   10eb0:	add	ip, ip, #106496	; 0x1a000
   10eb4:	ldr	pc, [ip, #460]!	; 0x1cc

00010eb8 <__gmon_start__@plt>:
   10eb8:	add	ip, pc, #0, 12
   10ebc:	add	ip, ip, #106496	; 0x1a000
   10ec0:	ldr	pc, [ip, #452]!	; 0x1c4

00010ec4 <freopen64@plt>:
   10ec4:	add	ip, pc, #0, 12
   10ec8:	add	ip, ip, #106496	; 0x1a000
   10ecc:	ldr	pc, [ip, #444]!	; 0x1bc

00010ed0 <getopt_long@plt>:
   10ed0:	add	ip, pc, #0, 12
   10ed4:	add	ip, ip, #106496	; 0x1a000
   10ed8:	ldr	pc, [ip, #436]!	; 0x1b4

00010edc <__ctype_b_loc@plt>:
   10edc:	add	ip, pc, #0, 12
   10ee0:	add	ip, ip, #106496	; 0x1a000
   10ee4:	ldr	pc, [ip, #428]!	; 0x1ac

00010ee8 <exit@plt>:
   10ee8:	add	ip, pc, #0, 12
   10eec:	add	ip, ip, #106496	; 0x1a000
   10ef0:	ldr	pc, [ip, #420]!	; 0x1a4

00010ef4 <gettext@plt>:
   10ef4:	add	ip, pc, #0, 12
   10ef8:	add	ip, ip, #106496	; 0x1a000
   10efc:	ldr	pc, [ip, #412]!	; 0x19c

00010f00 <strlen@plt>:
   10f00:	add	ip, pc, #0, 12
   10f04:	add	ip, ip, #106496	; 0x1a000
   10f08:	ldr	pc, [ip, #404]!	; 0x194

00010f0c <fprintf@plt>:
   10f0c:	add	ip, pc, #0, 12
   10f10:	add	ip, ip, #106496	; 0x1a000
   10f14:	ldr	pc, [ip, #396]!	; 0x18c

00010f18 <__errno_location@plt>:
   10f18:	add	ip, pc, #0, 12
   10f1c:	add	ip, ip, #106496	; 0x1a000
   10f20:	ldr	pc, [ip, #388]!	; 0x184

00010f24 <__cxa_atexit@plt>:
   10f24:	add	ip, pc, #0, 12
   10f28:	add	ip, ip, #106496	; 0x1a000
   10f2c:	ldr	pc, [ip, #380]!	; 0x17c

00010f30 <memset@plt>:
   10f30:	add	ip, pc, #0, 12
   10f34:	add	ip, ip, #106496	; 0x1a000
   10f38:	ldr	pc, [ip, #372]!	; 0x174

00010f3c <fileno@plt>:
   10f3c:	add	ip, pc, #0, 12
   10f40:	add	ip, ip, #106496	; 0x1a000
   10f44:	ldr	pc, [ip, #364]!	; 0x16c

00010f48 <fclose@plt>:
   10f48:	add	ip, pc, #0, 12
   10f4c:	add	ip, ip, #106496	; 0x1a000
   10f50:	ldr	pc, [ip, #356]!	; 0x164

00010f54 <fseeko64@plt>:
   10f54:	add	ip, pc, #0, 12
   10f58:	add	ip, ip, #106496	; 0x1a000
   10f5c:	ldr	pc, [ip, #348]!	; 0x15c

00010f60 <setlocale@plt>:
   10f60:	add	ip, pc, #0, 12
   10f64:	add	ip, ip, #106496	; 0x1a000
   10f68:	ldr	pc, [ip, #340]!	; 0x154

00010f6c <strrchr@plt>:
   10f6c:	add	ip, pc, #0, 12
   10f70:	add	ip, ip, #106496	; 0x1a000
   10f74:	ldr	pc, [ip, #332]!	; 0x14c

00010f78 <nl_langinfo@plt>:
   10f78:	add	ip, pc, #0, 12
   10f7c:	add	ip, ip, #106496	; 0x1a000
   10f80:	ldr	pc, [ip, #324]!	; 0x144

00010f84 <bindtextdomain@plt>:
   10f84:	add	ip, pc, #0, 12
   10f88:	add	ip, ip, #106496	; 0x1a000
   10f8c:	ldr	pc, [ip, #316]!	; 0x13c

00010f90 <getline@plt>:
   10f90:	add	ip, pc, #0, 12
   10f94:	add	ip, ip, #106496	; 0x1a000
   10f98:	ldr	pc, [ip, #308]!	; 0x134

00010f9c <strncmp@plt>:
   10f9c:	add	ip, pc, #0, 12
   10fa0:	add	ip, ip, #106496	; 0x1a000
   10fa4:	ldr	pc, [ip, #300]!	; 0x12c

00010fa8 <abort@plt>:
   10fa8:	add	ip, pc, #0, 12
   10fac:	add	ip, ip, #106496	; 0x1a000
   10fb0:	ldr	pc, [ip, #292]!	; 0x124

00010fb4 <close@plt>:
   10fb4:	add	ip, pc, #0, 12
   10fb8:	add	ip, ip, #106496	; 0x1a000
   10fbc:	ldr	pc, [ip, #284]!	; 0x11c

Disassembly of section .text:

00010fc0 <_obstack_begin@@Base-0x23b0>:
   10fc0:	mov	fp, #0
   10fc4:	mov	lr, #0
   10fc8:	pop	{r1}		; (ldr r1, [sp], #4)
   10fcc:	mov	r2, sp
   10fd0:	push	{r2}		; (str r2, [sp, #-4]!)
   10fd4:	push	{r0}		; (str r0, [sp, #-4]!)
   10fd8:	ldr	ip, [pc, #16]	; 10ff0 <close@plt+0x3c>
   10fdc:	push	{ip}		; (str ip, [sp, #-4]!)
   10fe0:	ldr	r0, [pc, #12]	; 10ff4 <close@plt+0x40>
   10fe4:	ldr	r3, [pc, #12]	; 10ff8 <close@plt+0x44>
   10fe8:	bl	10ea0 <__libc_start_main@plt>
   10fec:	bl	10fa8 <abort@plt>
   10ff0:	andeq	r8, r1, ip, ror r1
   10ff4:	andeq	r2, r1, ip, ror #4
   10ff8:	andeq	r8, r1, ip, lsl r1
   10ffc:	ldr	r3, [pc, #20]	; 11018 <close@plt+0x64>
   11000:	ldr	r2, [pc, #20]	; 1101c <close@plt+0x68>
   11004:	add	r3, pc, r3
   11008:	ldr	r2, [r3, r2]
   1100c:	cmp	r2, #0
   11010:	bxeq	lr
   11014:	b	10eb8 <__gmon_start__@plt>
   11018:	strdeq	r9, [r1], -r4
   1101c:	ldrdeq	r0, [r0], -ip
   11020:	ldr	r0, [pc, #24]	; 11040 <close@plt+0x8c>
   11024:	ldr	r3, [pc, #24]	; 11044 <close@plt+0x90>
   11028:	cmp	r3, r0
   1102c:	bxeq	lr
   11030:	ldr	r3, [pc, #16]	; 11048 <close@plt+0x94>
   11034:	cmp	r3, #0
   11038:	bxeq	lr
   1103c:	bx	r3
   11040:	andeq	fp, r2, r4, lsr r1
   11044:	andeq	fp, r2, r4, lsr r1
   11048:	andeq	r0, r0, r0
   1104c:	ldr	r0, [pc, #36]	; 11078 <close@plt+0xc4>
   11050:	ldr	r1, [pc, #36]	; 1107c <close@plt+0xc8>
   11054:	sub	r1, r1, r0
   11058:	asr	r1, r1, #2
   1105c:	add	r1, r1, r1, lsr #31
   11060:	asrs	r1, r1, #1
   11064:	bxeq	lr
   11068:	ldr	r3, [pc, #16]	; 11080 <close@plt+0xcc>
   1106c:	cmp	r3, #0
   11070:	bxeq	lr
   11074:	bx	r3
   11078:	andeq	fp, r2, r4, lsr r1
   1107c:	andeq	fp, r2, r4, lsr r1
   11080:	andeq	r0, r0, r0
   11084:	push	{r4, lr}
   11088:	ldr	r4, [pc, #24]	; 110a8 <close@plt+0xf4>
   1108c:	ldrb	r3, [r4]
   11090:	cmp	r3, #0
   11094:	popne	{r4, pc}
   11098:	bl	11020 <close@plt+0x6c>
   1109c:	mov	r3, #1
   110a0:	strb	r3, [r4]
   110a4:	pop	{r4, pc}
   110a8:	andeq	fp, r2, r8, asr r1
   110ac:	b	1104c <close@plt+0x98>
   110b0:	push	{fp}		; (str fp, [sp, #-4]!)
   110b4:	add	fp, sp, #0
   110b8:	sub	sp, sp, #12
   110bc:	mov	r3, r0
   110c0:	strb	r3, [fp, #-5]
   110c4:	ldrb	r3, [fp, #-5]
   110c8:	mov	r0, r3
   110cc:	add	sp, fp, #0
   110d0:	pop	{fp}		; (ldr fp, [sp], #4)
   110d4:	bx	lr
   110d8:	str	fp, [sp, #-8]!
   110dc:	str	lr, [sp, #4]
   110e0:	add	fp, sp, #4
   110e4:	sub	sp, sp, #80	; 0x50
   110e8:	str	r0, [fp, #-80]	; 0xffffffb0
   110ec:	movw	r2, #33560	; 0x8318
   110f0:	movt	r2, #1
   110f4:	sub	r3, fp, #72	; 0x48
   110f8:	ldrd	r0, [r2]
   110fc:	strd	r0, [r3]
   11100:	ldrd	r0, [r2, #8]
   11104:	strd	r0, [r3, #8]
   11108:	ldrd	r0, [r2, #16]
   1110c:	strd	r0, [r3, #16]
   11110:	ldrd	r0, [r2, #24]
   11114:	strd	r0, [r3, #24]
   11118:	ldrd	r0, [r2, #32]
   1111c:	strd	r0, [r3, #32]
   11120:	ldrd	r0, [r2, #40]	; 0x28
   11124:	strd	r0, [r3, #40]	; 0x28
   11128:	ldrd	r0, [r2, #48]	; 0x30
   1112c:	strd	r0, [r3, #48]	; 0x30
   11130:	ldr	r3, [fp, #-80]	; 0xffffffb0
   11134:	str	r3, [fp, #-8]
   11138:	sub	r3, fp, #72	; 0x48
   1113c:	str	r3, [fp, #-12]
   11140:	b	11150 <close@plt+0x19c>
   11144:	ldr	r3, [fp, #-12]
   11148:	add	r3, r3, #8
   1114c:	str	r3, [fp, #-12]
   11150:	ldr	r3, [fp, #-12]
   11154:	ldr	r3, [r3]
   11158:	cmp	r3, #0
   1115c:	beq	11180 <close@plt+0x1cc>
   11160:	ldr	r3, [fp, #-12]
   11164:	ldr	r3, [r3]
   11168:	mov	r1, r3
   1116c:	ldr	r0, [fp, #-80]	; 0xffffffb0
   11170:	bl	10d68 <strcmp@plt>
   11174:	mov	r3, r0
   11178:	cmp	r3, #0
   1117c:	bne	11144 <close@plt+0x190>
   11180:	ldr	r3, [fp, #-12]
   11184:	ldr	r3, [r3, #4]
   11188:	cmp	r3, #0
   1118c:	beq	1119c <close@plt+0x1e8>
   11190:	ldr	r3, [fp, #-12]
   11194:	ldr	r3, [r3, #4]
   11198:	str	r3, [fp, #-8]
   1119c:	movw	r0, #33188	; 0x81a4
   111a0:	movt	r0, #1
   111a4:	bl	10ef4 <gettext@plt>
   111a8:	mov	r3, r0
   111ac:	movw	r2, #33212	; 0x81bc
   111b0:	movt	r2, #1
   111b4:	movw	r1, #33252	; 0x81e4
   111b8:	movt	r1, #1
   111bc:	mov	r0, r3
   111c0:	bl	10d74 <printf@plt>
   111c4:	mov	r1, #0
   111c8:	mov	r0, #5
   111cc:	bl	10f60 <setlocale@plt>
   111d0:	str	r0, [fp, #-16]
   111d4:	ldr	r3, [fp, #-16]
   111d8:	cmp	r3, #0
   111dc:	beq	11228 <close@plt+0x274>
   111e0:	mov	r2, #3
   111e4:	movw	r1, #33268	; 0x81f4
   111e8:	movt	r1, #1
   111ec:	ldr	r0, [fp, #-16]
   111f0:	bl	10f9c <strncmp@plt>
   111f4:	mov	r3, r0
   111f8:	cmp	r3, #0
   111fc:	beq	11228 <close@plt+0x274>
   11200:	movw	r0, #33272	; 0x81f8
   11204:	movt	r0, #1
   11208:	bl	10ef4 <gettext@plt>
   1120c:	mov	r2, r0
   11210:	movw	r3, #45396	; 0xb154
   11214:	movt	r3, #2
   11218:	ldr	r3, [r3]
   1121c:	mov	r1, r3
   11220:	mov	r0, r2
   11224:	bl	10d5c <fputs_unlocked@plt>
   11228:	movw	r0, #33344	; 0x8240
   1122c:	movt	r0, #1
   11230:	bl	10ef4 <gettext@plt>
   11234:	mov	r3, r0
   11238:	ldr	r2, [fp, #-80]	; 0xffffffb0
   1123c:	movw	r1, #33212	; 0x81bc
   11240:	movt	r1, #1
   11244:	mov	r0, r3
   11248:	bl	10d74 <printf@plt>
   1124c:	movw	r0, #33372	; 0x825c
   11250:	movt	r0, #1
   11254:	bl	10ef4 <gettext@plt>
   11258:	ldr	r2, [fp, #-8]
   1125c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   11260:	cmp	r2, r3
   11264:	bne	11274 <close@plt+0x2c0>
   11268:	movw	r3, #33424	; 0x8290
   1126c:	movt	r3, #1
   11270:	b	1127c <close@plt+0x2c8>
   11274:	movw	r3, #33436	; 0x829c
   11278:	movt	r3, #1
   1127c:	mov	r2, r3
   11280:	ldr	r1, [fp, #-8]
   11284:	bl	10d74 <printf@plt>
   11288:	nop	{0}
   1128c:	sub	sp, fp, #4
   11290:	ldr	fp, [sp]
   11294:	add	sp, sp, #4
   11298:	pop	{pc}		; (ldr pc, [sp], #4)
   1129c:	str	r4, [sp, #-12]!
   112a0:	str	fp, [sp, #4]
   112a4:	str	lr, [sp, #8]
   112a8:	add	fp, sp, #8
   112ac:	sub	sp, sp, #12
   112b0:	str	r0, [fp, #-16]
   112b4:	ldr	r3, [fp, #-16]
   112b8:	cmp	r3, #0
   112bc:	beq	112f8 <close@plt+0x344>
   112c0:	movw	r3, #45384	; 0xb148
   112c4:	movt	r3, #2
   112c8:	ldr	r4, [r3]
   112cc:	movw	r0, #38836	; 0x97b4
   112d0:	movt	r0, #1
   112d4:	bl	10ef4 <gettext@plt>
   112d8:	mov	r1, r0
   112dc:	movw	r3, #45456	; 0xb190
   112e0:	movt	r3, #2
   112e4:	ldr	r3, [r3]
   112e8:	mov	r2, r3
   112ec:	mov	r0, r4
   112f0:	bl	10f0c <fprintf@plt>
   112f4:	b	113cc <close@plt+0x418>
   112f8:	movw	r0, #38876	; 0x97dc
   112fc:	movt	r0, #1
   11300:	bl	10ef4 <gettext@plt>
   11304:	mov	r2, r0
   11308:	movw	r3, #45456	; 0xb190
   1130c:	movt	r3, #2
   11310:	ldr	r3, [r3]
   11314:	mov	r1, r3
   11318:	mov	r0, r2
   1131c:	bl	10d74 <printf@plt>
   11320:	movw	r0, #38908	; 0x97fc
   11324:	movt	r0, #1
   11328:	bl	10ef4 <gettext@plt>
   1132c:	mov	r2, r0
   11330:	movw	r3, #45396	; 0xb154
   11334:	movt	r3, #2
   11338:	ldr	r3, [r3]
   1133c:	mov	r1, r3
   11340:	mov	r0, r2
   11344:	bl	10d5c <fputs_unlocked@plt>
   11348:	movw	r0, #39184	; 0x9910
   1134c:	movt	r0, #1
   11350:	bl	10ef4 <gettext@plt>
   11354:	mov	r2, r0
   11358:	movw	r3, #45396	; 0xb154
   1135c:	movt	r3, #2
   11360:	ldr	r3, [r3]
   11364:	mov	r1, r3
   11368:	mov	r0, r2
   1136c:	bl	10d5c <fputs_unlocked@plt>
   11370:	movw	r0, #39232	; 0x9940
   11374:	movt	r0, #1
   11378:	bl	10ef4 <gettext@plt>
   1137c:	mov	r2, r0
   11380:	movw	r3, #45396	; 0xb154
   11384:	movt	r3, #2
   11388:	ldr	r3, [r3]
   1138c:	mov	r1, r3
   11390:	mov	r0, r2
   11394:	bl	10d5c <fputs_unlocked@plt>
   11398:	movw	r0, #39288	; 0x9978
   1139c:	movt	r0, #1
   113a0:	bl	10ef4 <gettext@plt>
   113a4:	mov	r2, r0
   113a8:	movw	r3, #45396	; 0xb154
   113ac:	movt	r3, #2
   113b0:	ldr	r3, [r3]
   113b4:	mov	r1, r3
   113b8:	mov	r0, r2
   113bc:	bl	10d5c <fputs_unlocked@plt>
   113c0:	movw	r0, #39512	; 0x9a58
   113c4:	movt	r0, #1
   113c8:	bl	110d8 <close@plt+0x124>
   113cc:	ldr	r0, [fp, #-16]
   113d0:	bl	10ee8 <exit@plt>
   113d4:	str	fp, [sp, #-8]!
   113d8:	str	lr, [sp, #4]
   113dc:	add	fp, sp, #4
   113e0:	sub	sp, sp, #8
   113e4:	movw	r0, #39524	; 0x9a64
   113e8:	movt	r0, #1
   113ec:	bl	10e7c <getenv@plt>
   113f0:	str	r0, [fp, #-8]
   113f4:	ldr	r3, [fp, #-8]
   113f8:	cmp	r3, #0
   113fc:	beq	11410 <close@plt+0x45c>
   11400:	ldr	r3, [fp, #-8]
   11404:	ldrb	r3, [r3]
   11408:	cmp	r3, #0
   1140c:	bne	11418 <close@plt+0x464>
   11410:	mov	r3, #2
   11414:	b	11468 <close@plt+0x4b4>
   11418:	ldr	r0, [fp, #-8]
   1141c:	bl	127d4 <close@plt+0x1820>
   11420:	str	r0, [fp, #-8]
   11424:	movw	r1, #38664	; 0x9708
   11428:	movt	r1, #1
   1142c:	ldr	r0, [fp, #-8]
   11430:	bl	10d68 <strcmp@plt>
   11434:	mov	r3, r0
   11438:	cmp	r3, #0
   1143c:	beq	1145c <close@plt+0x4a8>
   11440:	movw	r1, #39532	; 0x9a6c
   11444:	movt	r1, #1
   11448:	ldr	r0, [fp, #-8]
   1144c:	bl	10d68 <strcmp@plt>
   11450:	mov	r3, r0
   11454:	cmp	r3, #0
   11458:	bne	11464 <close@plt+0x4b0>
   1145c:	mov	r3, #1
   11460:	b	11468 <close@plt+0x4b4>
   11464:	mov	r3, #0
   11468:	mov	r0, r3
   1146c:	sub	sp, fp, #4
   11470:	ldr	fp, [sp]
   11474:	add	sp, sp, #4
   11478:	pop	{pc}		; (ldr pc, [sp], #4)
   1147c:	str	r4, [sp, #-12]!
   11480:	str	fp, [sp, #4]
   11484:	str	lr, [sp, #8]
   11488:	add	fp, sp, #8
   1148c:	sub	sp, sp, #36	; 0x24
   11490:	str	r0, [fp, #-32]	; 0xffffffe0
   11494:	str	r1, [fp, #-36]	; 0xffffffdc
   11498:	str	r2, [fp, #-40]	; 0xffffffd8
   1149c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   114a0:	mov	r2, #0
   114a4:	str	r2, [r3]
   114a8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   114ac:	mov	r2, #0
   114b0:	str	r2, [r3]
   114b4:	ldr	r3, [fp, #-32]	; 0xffffffe0
   114b8:	str	r3, [fp, #-16]
   114bc:	b	114cc <close@plt+0x518>
   114c0:	ldr	r3, [fp, #-16]
   114c4:	add	r3, r3, #1
   114c8:	str	r3, [fp, #-16]
   114cc:	bl	10edc <__ctype_b_loc@plt>
   114d0:	mov	r3, r0
   114d4:	ldr	r4, [r3]
   114d8:	ldr	r3, [fp, #-16]
   114dc:	ldrb	r3, [r3]
   114e0:	mov	r0, r3
   114e4:	bl	110b0 <close@plt+0xfc>
   114e8:	mov	r3, r0
   114ec:	lsl	r3, r3, #1
   114f0:	add	r3, r4, r3
   114f4:	ldrh	r3, [r3]
   114f8:	and	r3, r3, #8192	; 0x2000
   114fc:	cmp	r3, #0
   11500:	bne	114c0 <close@plt+0x50c>
   11504:	ldr	r3, [fp, #-16]
   11508:	ldrb	r3, [r3]
   1150c:	cmp	r3, #0
   11510:	beq	116e4 <close@plt+0x730>
   11514:	ldr	r3, [fp, #-16]
   11518:	ldrb	r3, [r3]
   1151c:	cmp	r3, #35	; 0x23
   11520:	beq	116e4 <close@plt+0x730>
   11524:	ldr	r3, [fp, #-16]
   11528:	str	r3, [fp, #-20]	; 0xffffffec
   1152c:	b	1153c <close@plt+0x588>
   11530:	ldr	r3, [fp, #-16]
   11534:	add	r3, r3, #1
   11538:	str	r3, [fp, #-16]
   1153c:	bl	10edc <__ctype_b_loc@plt>
   11540:	mov	r3, r0
   11544:	ldr	r4, [r3]
   11548:	ldr	r3, [fp, #-16]
   1154c:	ldrb	r3, [r3]
   11550:	mov	r0, r3
   11554:	bl	110b0 <close@plt+0xfc>
   11558:	mov	r3, r0
   1155c:	lsl	r3, r3, #1
   11560:	add	r3, r4, r3
   11564:	ldrh	r3, [r3]
   11568:	and	r3, r3, #8192	; 0x2000
   1156c:	cmp	r3, #0
   11570:	bne	11584 <close@plt+0x5d0>
   11574:	ldr	r3, [fp, #-16]
   11578:	ldrb	r3, [r3]
   1157c:	cmp	r3, #0
   11580:	bne	11530 <close@plt+0x57c>
   11584:	ldr	r2, [fp, #-16]
   11588:	ldr	r3, [fp, #-20]	; 0xffffffec
   1158c:	sub	r3, r2, r3
   11590:	mov	r1, r3
   11594:	ldr	r0, [fp, #-20]	; 0xffffffec
   11598:	bl	17280 <_obstack_memory_used@@Base+0x3a6c>
   1159c:	mov	r3, r0
   115a0:	mov	r2, r3
   115a4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   115a8:	str	r2, [r3]
   115ac:	ldr	r3, [fp, #-16]
   115b0:	ldrb	r3, [r3]
   115b4:	cmp	r3, #0
   115b8:	beq	116ec <close@plt+0x738>
   115bc:	ldr	r3, [fp, #-16]
   115c0:	add	r3, r3, #1
   115c4:	str	r3, [fp, #-16]
   115c8:	bl	10edc <__ctype_b_loc@plt>
   115cc:	mov	r3, r0
   115d0:	ldr	r4, [r3]
   115d4:	ldr	r3, [fp, #-16]
   115d8:	ldrb	r3, [r3]
   115dc:	mov	r0, r3
   115e0:	bl	110b0 <close@plt+0xfc>
   115e4:	mov	r3, r0
   115e8:	lsl	r3, r3, #1
   115ec:	add	r3, r4, r3
   115f0:	ldrh	r3, [r3]
   115f4:	and	r3, r3, #8192	; 0x2000
   115f8:	cmp	r3, #0
   115fc:	bne	115bc <close@plt+0x608>
   11600:	ldr	r3, [fp, #-16]
   11604:	ldrb	r3, [r3]
   11608:	cmp	r3, #0
   1160c:	beq	116f4 <close@plt+0x740>
   11610:	ldr	r3, [fp, #-16]
   11614:	ldrb	r3, [r3]
   11618:	cmp	r3, #35	; 0x23
   1161c:	beq	116f4 <close@plt+0x740>
   11620:	ldr	r3, [fp, #-16]
   11624:	str	r3, [fp, #-24]	; 0xffffffe8
   11628:	b	11638 <close@plt+0x684>
   1162c:	ldr	r3, [fp, #-16]
   11630:	add	r3, r3, #1
   11634:	str	r3, [fp, #-16]
   11638:	ldr	r3, [fp, #-16]
   1163c:	ldrb	r3, [r3]
   11640:	cmp	r3, #0
   11644:	beq	11658 <close@plt+0x6a4>
   11648:	ldr	r3, [fp, #-16]
   1164c:	ldrb	r3, [r3]
   11650:	cmp	r3, #35	; 0x23
   11654:	bne	1162c <close@plt+0x678>
   11658:	ldr	r3, [fp, #-16]
   1165c:	sub	r3, r3, #1
   11660:	str	r3, [fp, #-16]
   11664:	b	11674 <close@plt+0x6c0>
   11668:	ldr	r3, [fp, #-16]
   1166c:	sub	r3, r3, #1
   11670:	str	r3, [fp, #-16]
   11674:	bl	10edc <__ctype_b_loc@plt>
   11678:	mov	r3, r0
   1167c:	ldr	r4, [r3]
   11680:	ldr	r3, [fp, #-16]
   11684:	ldrb	r3, [r3]
   11688:	mov	r0, r3
   1168c:	bl	110b0 <close@plt+0xfc>
   11690:	mov	r3, r0
   11694:	lsl	r3, r3, #1
   11698:	add	r3, r4, r3
   1169c:	ldrh	r3, [r3]
   116a0:	and	r3, r3, #8192	; 0x2000
   116a4:	cmp	r3, #0
   116a8:	bne	11668 <close@plt+0x6b4>
   116ac:	ldr	r3, [fp, #-16]
   116b0:	add	r3, r3, #1
   116b4:	str	r3, [fp, #-16]
   116b8:	ldr	r2, [fp, #-16]
   116bc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   116c0:	sub	r3, r2, r3
   116c4:	mov	r1, r3
   116c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   116cc:	bl	17280 <_obstack_memory_used@@Base+0x3a6c>
   116d0:	mov	r3, r0
   116d4:	mov	r2, r3
   116d8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   116dc:	str	r2, [r3]
   116e0:	b	116f8 <close@plt+0x744>
   116e4:	nop	{0}
   116e8:	b	116f8 <close@plt+0x744>
   116ec:	nop	{0}
   116f0:	b	116f8 <close@plt+0x744>
   116f4:	nop	{0}
   116f8:	sub	sp, fp, #8
   116fc:	ldr	r4, [sp]
   11700:	ldr	fp, [sp, #4]
   11704:	add	sp, sp, #8
   11708:	pop	{pc}		; (ldr pc, [sp], #4)
   1170c:	str	fp, [sp, #-8]!
   11710:	str	lr, [sp, #4]
   11714:	add	fp, sp, #4
   11718:	sub	sp, sp, #56	; 0x38
   1171c:	str	r0, [fp, #-56]	; 0xffffffc8
   11720:	mov	r3, #1
   11724:	strb	r3, [fp, #-5]
   11728:	b	11988 <close@plt+0x9d4>
   1172c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   11730:	ldrb	r3, [r3]
   11734:	cmp	r3, #61	; 0x3d
   11738:	beq	118b0 <close@plt+0x8fc>
   1173c:	cmp	r3, #61	; 0x3d
   11740:	bgt	11758 <close@plt+0x7a4>
   11744:	cmp	r3, #39	; 0x27
   11748:	beq	1176c <close@plt+0x7b8>
   1174c:	cmp	r3, #58	; 0x3a
   11750:	beq	118b0 <close@plt+0x8fc>
   11754:	b	11914 <close@plt+0x960>
   11758:	cmp	r3, #92	; 0x5c
   1175c:	beq	11880 <close@plt+0x8cc>
   11760:	cmp	r3, #94	; 0x5e
   11764:	beq	11880 <close@plt+0x8cc>
   11768:	b	11914 <close@plt+0x960>
   1176c:	movw	r3, #45404	; 0xb15c
   11770:	movt	r3, #2
   11774:	str	r3, [fp, #-12]
   11778:	ldr	r3, [fp, #-12]
   1177c:	str	r3, [fp, #-16]
   11780:	ldr	r3, [fp, #-16]
   11784:	ldr	r2, [r3, #16]
   11788:	ldr	r3, [fp, #-16]
   1178c:	ldr	r3, [r3, #12]
   11790:	sub	r3, r2, r3
   11794:	cmp	r3, #0
   11798:	bne	117a8 <close@plt+0x7f4>
   1179c:	mov	r1, #1
   117a0:	ldr	r0, [fp, #-12]
   117a4:	bl	1345c <_obstack_newchunk@@Base>
   117a8:	ldr	r3, [fp, #-12]
   117ac:	ldr	r3, [r3, #12]
   117b0:	add	r1, r3, #1
   117b4:	ldr	r2, [fp, #-12]
   117b8:	str	r1, [r2, #12]
   117bc:	mov	r2, #39	; 0x27
   117c0:	strb	r2, [r3]
   117c4:	movw	r3, #45404	; 0xb15c
   117c8:	movt	r3, #2
   117cc:	str	r3, [fp, #-20]	; 0xffffffec
   117d0:	ldr	r3, [fp, #-20]	; 0xffffffec
   117d4:	str	r3, [fp, #-24]	; 0xffffffe8
   117d8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   117dc:	ldr	r2, [r3, #16]
   117e0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   117e4:	ldr	r3, [r3, #12]
   117e8:	sub	r3, r2, r3
   117ec:	cmp	r3, #0
   117f0:	bne	11800 <close@plt+0x84c>
   117f4:	mov	r1, #1
   117f8:	ldr	r0, [fp, #-20]	; 0xffffffec
   117fc:	bl	1345c <_obstack_newchunk@@Base>
   11800:	ldr	r3, [fp, #-20]	; 0xffffffec
   11804:	ldr	r3, [r3, #12]
   11808:	add	r1, r3, #1
   1180c:	ldr	r2, [fp, #-20]	; 0xffffffec
   11810:	str	r1, [r2, #12]
   11814:	mov	r2, #92	; 0x5c
   11818:	strb	r2, [r3]
   1181c:	movw	r3, #45404	; 0xb15c
   11820:	movt	r3, #2
   11824:	str	r3, [fp, #-28]	; 0xffffffe4
   11828:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1182c:	str	r3, [fp, #-32]	; 0xffffffe0
   11830:	ldr	r3, [fp, #-32]	; 0xffffffe0
   11834:	ldr	r2, [r3, #16]
   11838:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1183c:	ldr	r3, [r3, #12]
   11840:	sub	r3, r2, r3
   11844:	cmp	r3, #0
   11848:	bne	11858 <close@plt+0x8a4>
   1184c:	mov	r1, #1
   11850:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11854:	bl	1345c <_obstack_newchunk@@Base>
   11858:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1185c:	ldr	r3, [r3, #12]
   11860:	add	r1, r3, #1
   11864:	ldr	r2, [fp, #-28]	; 0xffffffe4
   11868:	str	r1, [r2, #12]
   1186c:	mov	r2, #39	; 0x27
   11870:	strb	r2, [r3]
   11874:	mov	r3, #1
   11878:	strb	r3, [fp, #-5]
   1187c:	b	11920 <close@plt+0x96c>
   11880:	ldrb	r3, [fp, #-5]
   11884:	cmp	r3, #0
   11888:	movne	r3, #1
   1188c:	moveq	r3, #0
   11890:	uxtb	r3, r3
   11894:	eor	r3, r3, #1
   11898:	uxtb	r3, r3
   1189c:	strb	r3, [fp, #-5]
   118a0:	ldrb	r3, [fp, #-5]
   118a4:	and	r3, r3, #1
   118a8:	strb	r3, [fp, #-5]
   118ac:	b	11920 <close@plt+0x96c>
   118b0:	ldrb	r3, [fp, #-5]
   118b4:	cmp	r3, #0
   118b8:	beq	11914 <close@plt+0x960>
   118bc:	movw	r3, #45404	; 0xb15c
   118c0:	movt	r3, #2
   118c4:	str	r3, [fp, #-36]	; 0xffffffdc
   118c8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   118cc:	str	r3, [fp, #-40]	; 0xffffffd8
   118d0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   118d4:	ldr	r2, [r3, #16]
   118d8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   118dc:	ldr	r3, [r3, #12]
   118e0:	sub	r3, r2, r3
   118e4:	cmp	r3, #0
   118e8:	bne	118f8 <close@plt+0x944>
   118ec:	mov	r1, #1
   118f0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   118f4:	bl	1345c <_obstack_newchunk@@Base>
   118f8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   118fc:	ldr	r3, [r3, #12]
   11900:	add	r1, r3, #1
   11904:	ldr	r2, [fp, #-36]	; 0xffffffdc
   11908:	str	r1, [r2, #12]
   1190c:	mov	r2, #92	; 0x5c
   11910:	strb	r2, [r3]
   11914:	mov	r3, #1
   11918:	strb	r3, [fp, #-5]
   1191c:	nop	{0}
   11920:	movw	r3, #45404	; 0xb15c
   11924:	movt	r3, #2
   11928:	str	r3, [fp, #-44]	; 0xffffffd4
   1192c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   11930:	str	r3, [fp, #-48]	; 0xffffffd0
   11934:	ldr	r3, [fp, #-48]	; 0xffffffd0
   11938:	ldr	r2, [r3, #16]
   1193c:	ldr	r3, [fp, #-48]	; 0xffffffd0
   11940:	ldr	r3, [r3, #12]
   11944:	sub	r3, r2, r3
   11948:	cmp	r3, #0
   1194c:	bne	1195c <close@plt+0x9a8>
   11950:	mov	r1, #1
   11954:	ldr	r0, [fp, #-44]	; 0xffffffd4
   11958:	bl	1345c <_obstack_newchunk@@Base>
   1195c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   11960:	ldr	r3, [r3, #12]
   11964:	add	r1, r3, #1
   11968:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1196c:	str	r1, [r2, #12]
   11970:	ldr	r2, [fp, #-56]	; 0xffffffc8
   11974:	ldrb	r2, [r2]
   11978:	strb	r2, [r3]
   1197c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   11980:	add	r3, r3, #1
   11984:	str	r3, [fp, #-56]	; 0xffffffc8
   11988:	ldr	r3, [fp, #-56]	; 0xffffffc8
   1198c:	ldrb	r3, [r3]
   11990:	cmp	r3, #0
   11994:	bne	1172c <close@plt+0x778>
   11998:	nop	{0}
   1199c:	sub	sp, fp, #4
   119a0:	ldr	fp, [sp]
   119a4:	add	sp, sp, #4
   119a8:	pop	{pc}		; (ldr pc, [sp], #4)
   119ac:	str	r4, [sp, #-12]!
   119b0:	str	fp, [sp, #4]
   119b4:	str	lr, [sp, #8]
   119b8:	add	fp, sp, #8
   119bc:	sub	sp, sp, #140	; 0x8c
   119c0:	str	r0, [fp, #-136]	; 0xffffff78
   119c4:	str	r1, [fp, #-140]	; 0xffffff74
   119c8:	mov	r3, #0
   119cc:	str	r3, [fp, #-16]
   119d0:	movw	r3, #33616	; 0x8350
   119d4:	movt	r3, #1
   119d8:	str	r3, [fp, #-20]	; 0xffffffec
   119dc:	mov	r3, #0
   119e0:	str	r3, [fp, #-120]	; 0xffffff88
   119e4:	mov	r3, #0
   119e8:	str	r3, [fp, #-124]	; 0xffffff84
   119ec:	mov	r3, #1
   119f0:	strb	r3, [fp, #-29]	; 0xffffffe3
   119f4:	mov	r3, #3
   119f8:	str	r3, [fp, #-36]	; 0xffffffdc
   119fc:	movw	r0, #39540	; 0x9a74
   11a00:	movt	r0, #1
   11a04:	bl	10e7c <getenv@plt>
   11a08:	str	r0, [fp, #-28]	; 0xffffffe4
   11a0c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   11a10:	cmp	r3, #0
   11a14:	beq	11a28 <close@plt+0xa74>
   11a18:	ldr	r3, [fp, #-28]	; 0xffffffe4
   11a1c:	ldrb	r3, [r3]
   11a20:	cmp	r3, #0
   11a24:	bne	11a34 <close@plt+0xa80>
   11a28:	movw	r3, #39548	; 0x9a7c
   11a2c:	movt	r3, #1
   11a30:	str	r3, [fp, #-28]	; 0xffffffe4
   11a34:	ldr	r3, [fp, #-16]
   11a38:	add	r3, r3, #1
   11a3c:	str	r3, [fp, #-16]
   11a40:	ldr	r3, [fp, #-136]	; 0xffffff78
   11a44:	cmp	r3, #0
   11a48:	beq	11a88 <close@plt+0xad4>
   11a4c:	sub	r1, fp, #124	; 0x7c
   11a50:	sub	r3, fp, #120	; 0x78
   11a54:	ldr	r2, [fp, #-136]	; 0xffffff78
   11a58:	mov	r0, r3
   11a5c:	bl	10f90 <getline@plt>
   11a60:	mov	r3, r0
   11a64:	cmp	r3, #0
   11a68:	bgt	11a7c <close@plt+0xac8>
   11a6c:	ldr	r3, [fp, #-120]	; 0xffffff88
   11a70:	mov	r0, r3
   11a74:	bl	12d24 <close@plt+0x1d70>
   11a78:	b	1210c <close@plt+0x1158>
   11a7c:	ldr	r3, [fp, #-120]	; 0xffffff88
   11a80:	str	r3, [fp, #-24]	; 0xffffffe8
   11a84:	b	11abc <close@plt+0xb08>
   11a88:	ldr	r2, [pc, #1700]	; 12134 <close@plt+0x1180>
   11a8c:	ldr	r3, [fp, #-20]	; 0xffffffec
   11a90:	cmp	r3, r2
   11a94:	beq	12108 <close@plt+0x1154>
   11a98:	ldr	r3, [fp, #-20]	; 0xffffffec
   11a9c:	str	r3, [fp, #-24]	; 0xffffffe8
   11aa0:	ldr	r0, [fp, #-20]	; 0xffffffec
   11aa4:	bl	10f00 <strlen@plt>
   11aa8:	mov	r3, r0
   11aac:	add	r3, r3, #1
   11ab0:	ldr	r2, [fp, #-20]	; 0xffffffec
   11ab4:	add	r3, r2, r3
   11ab8:	str	r3, [fp, #-20]	; 0xffffffec
   11abc:	sub	r2, fp, #132	; 0x84
   11ac0:	sub	r3, fp, #128	; 0x80
   11ac4:	mov	r1, r3
   11ac8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11acc:	bl	1147c <close@plt+0x4c8>
   11ad0:	ldr	r3, [fp, #-128]	; 0xffffff80
   11ad4:	cmp	r3, #0
   11ad8:	beq	12114 <close@plt+0x1160>
   11adc:	ldr	r3, [fp, #-132]	; 0xffffff7c
   11ae0:	cmp	r3, #0
   11ae4:	bne	11b40 <close@plt+0xb8c>
   11ae8:	movw	r0, #39556	; 0x9a84
   11aec:	movt	r0, #1
   11af0:	bl	10ef4 <gettext@plt>
   11af4:	mov	r4, r0
   11af8:	ldr	r2, [fp, #-140]	; 0xffffff74
   11afc:	mov	r1, #3
   11b00:	mov	r0, #0
   11b04:	bl	15f40 <_obstack_memory_used@@Base+0x272c>
   11b08:	mov	r2, r0
   11b0c:	ldr	r3, [fp, #-16]
   11b10:	str	r3, [sp]
   11b14:	mov	r3, r2
   11b18:	mov	r2, r4
   11b1c:	mov	r1, #0
   11b20:	mov	r0, #0
   11b24:	bl	10e58 <error@plt>
   11b28:	mov	r3, #0
   11b2c:	strb	r3, [fp, #-29]	; 0xffffffe3
   11b30:	ldr	r3, [fp, #-128]	; 0xffffff80
   11b34:	mov	r0, r3
   11b38:	bl	12d24 <close@plt+0x1d70>
   11b3c:	b	12118 <close@plt+0x1164>
   11b40:	mov	r3, #0
   11b44:	strb	r3, [fp, #-37]	; 0xffffffdb
   11b48:	ldr	r3, [fp, #-128]	; 0xffffff80
   11b4c:	movw	r1, #39540	; 0x9a74
   11b50:	movt	r1, #1
   11b54:	mov	r0, r3
   11b58:	bl	12900 <close@plt+0x194c>
   11b5c:	mov	r3, r0
   11b60:	cmp	r3, #0
   11b64:	bne	11bac <close@plt+0xbf8>
   11b68:	ldr	r3, [fp, #-132]	; 0xffffff7c
   11b6c:	mov	r2, #0
   11b70:	ldr	r1, [fp, #-28]	; 0xffffffe4
   11b74:	mov	r0, r3
   11b78:	bl	10e64 <fnmatch@plt>
   11b7c:	mov	r3, r0
   11b80:	cmp	r3, #0
   11b84:	bne	11b94 <close@plt+0xbe0>
   11b88:	mov	r3, #2
   11b8c:	str	r3, [fp, #-36]	; 0xffffffdc
   11b90:	b	12058 <close@plt+0x10a4>
   11b94:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11b98:	cmp	r3, #2
   11b9c:	beq	12058 <close@plt+0x10a4>
   11ba0:	mov	r3, #0
   11ba4:	str	r3, [fp, #-36]	; 0xffffffdc
   11ba8:	b	12058 <close@plt+0x10a4>
   11bac:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11bb0:	cmp	r3, #2
   11bb4:	bne	11bc0 <close@plt+0xc0c>
   11bb8:	mov	r3, #1
   11bbc:	str	r3, [fp, #-36]	; 0xffffffdc
   11bc0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   11bc4:	cmp	r3, #0
   11bc8:	beq	12050 <close@plt+0x109c>
   11bcc:	ldr	r3, [fp, #-128]	; 0xffffff80
   11bd0:	ldrb	r3, [r3]
   11bd4:	cmp	r3, #46	; 0x2e
   11bd8:	bne	11d00 <close@plt+0xd4c>
   11bdc:	movw	r3, #45404	; 0xb15c
   11be0:	movt	r3, #2
   11be4:	str	r3, [fp, #-48]	; 0xffffffd0
   11be8:	ldr	r3, [fp, #-48]	; 0xffffffd0
   11bec:	str	r3, [fp, #-52]	; 0xffffffcc
   11bf0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   11bf4:	ldr	r2, [r3, #16]
   11bf8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   11bfc:	ldr	r3, [r3, #12]
   11c00:	sub	r3, r2, r3
   11c04:	cmp	r3, #0
   11c08:	bne	11c18 <close@plt+0xc64>
   11c0c:	mov	r1, #1
   11c10:	ldr	r0, [fp, #-48]	; 0xffffffd0
   11c14:	bl	1345c <_obstack_newchunk@@Base>
   11c18:	ldr	r3, [fp, #-48]	; 0xffffffd0
   11c1c:	ldr	r3, [r3, #12]
   11c20:	add	r1, r3, #1
   11c24:	ldr	r2, [fp, #-48]	; 0xffffffd0
   11c28:	str	r1, [r2, #12]
   11c2c:	mov	r2, #42	; 0x2a
   11c30:	strb	r2, [r3]
   11c34:	ldr	r3, [fp, #-128]	; 0xffffff80
   11c38:	mov	r0, r3
   11c3c:	bl	1170c <close@plt+0x758>
   11c40:	movw	r3, #45404	; 0xb15c
   11c44:	movt	r3, #2
   11c48:	str	r3, [fp, #-56]	; 0xffffffc8
   11c4c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   11c50:	str	r3, [fp, #-60]	; 0xffffffc4
   11c54:	ldr	r3, [fp, #-60]	; 0xffffffc4
   11c58:	ldr	r2, [r3, #16]
   11c5c:	ldr	r3, [fp, #-60]	; 0xffffffc4
   11c60:	ldr	r3, [r3, #12]
   11c64:	sub	r3, r2, r3
   11c68:	cmp	r3, #0
   11c6c:	bne	11c7c <close@plt+0xcc8>
   11c70:	mov	r1, #1
   11c74:	ldr	r0, [fp, #-56]	; 0xffffffc8
   11c78:	bl	1345c <_obstack_newchunk@@Base>
   11c7c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   11c80:	ldr	r3, [r3, #12]
   11c84:	add	r1, r3, #1
   11c88:	ldr	r2, [fp, #-56]	; 0xffffffc8
   11c8c:	str	r1, [r2, #12]
   11c90:	mov	r2, #61	; 0x3d
   11c94:	strb	r2, [r3]
   11c98:	ldr	r3, [fp, #-132]	; 0xffffff7c
   11c9c:	mov	r0, r3
   11ca0:	bl	1170c <close@plt+0x758>
   11ca4:	movw	r3, #45404	; 0xb15c
   11ca8:	movt	r3, #2
   11cac:	str	r3, [fp, #-64]	; 0xffffffc0
   11cb0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   11cb4:	str	r3, [fp, #-68]	; 0xffffffbc
   11cb8:	ldr	r3, [fp, #-68]	; 0xffffffbc
   11cbc:	ldr	r2, [r3, #16]
   11cc0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   11cc4:	ldr	r3, [r3, #12]
   11cc8:	sub	r3, r2, r3
   11ccc:	cmp	r3, #0
   11cd0:	bne	11ce0 <close@plt+0xd2c>
   11cd4:	mov	r1, #1
   11cd8:	ldr	r0, [fp, #-64]	; 0xffffffc0
   11cdc:	bl	1345c <_obstack_newchunk@@Base>
   11ce0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   11ce4:	ldr	r3, [r3, #12]
   11ce8:	add	r1, r3, #1
   11cec:	ldr	r2, [fp, #-64]	; 0xffffffc0
   11cf0:	str	r1, [r2, #12]
   11cf4:	mov	r2, #58	; 0x3a
   11cf8:	strb	r2, [r3]
   11cfc:	b	12058 <close@plt+0x10a4>
   11d00:	ldr	r3, [fp, #-128]	; 0xffffff80
   11d04:	ldrb	r3, [r3]
   11d08:	cmp	r3, #42	; 0x2a
   11d0c:	bne	11ddc <close@plt+0xe28>
   11d10:	ldr	r3, [fp, #-128]	; 0xffffff80
   11d14:	mov	r0, r3
   11d18:	bl	1170c <close@plt+0x758>
   11d1c:	movw	r3, #45404	; 0xb15c
   11d20:	movt	r3, #2
   11d24:	str	r3, [fp, #-72]	; 0xffffffb8
   11d28:	ldr	r3, [fp, #-72]	; 0xffffffb8
   11d2c:	str	r3, [fp, #-76]	; 0xffffffb4
   11d30:	ldr	r3, [fp, #-76]	; 0xffffffb4
   11d34:	ldr	r2, [r3, #16]
   11d38:	ldr	r3, [fp, #-76]	; 0xffffffb4
   11d3c:	ldr	r3, [r3, #12]
   11d40:	sub	r3, r2, r3
   11d44:	cmp	r3, #0
   11d48:	bne	11d58 <close@plt+0xda4>
   11d4c:	mov	r1, #1
   11d50:	ldr	r0, [fp, #-72]	; 0xffffffb8
   11d54:	bl	1345c <_obstack_newchunk@@Base>
   11d58:	ldr	r3, [fp, #-72]	; 0xffffffb8
   11d5c:	ldr	r3, [r3, #12]
   11d60:	add	r1, r3, #1
   11d64:	ldr	r2, [fp, #-72]	; 0xffffffb8
   11d68:	str	r1, [r2, #12]
   11d6c:	mov	r2, #61	; 0x3d
   11d70:	strb	r2, [r3]
   11d74:	ldr	r3, [fp, #-132]	; 0xffffff7c
   11d78:	mov	r0, r3
   11d7c:	bl	1170c <close@plt+0x758>
   11d80:	movw	r3, #45404	; 0xb15c
   11d84:	movt	r3, #2
   11d88:	str	r3, [fp, #-80]	; 0xffffffb0
   11d8c:	ldr	r3, [fp, #-80]	; 0xffffffb0
   11d90:	str	r3, [fp, #-84]	; 0xffffffac
   11d94:	ldr	r3, [fp, #-84]	; 0xffffffac
   11d98:	ldr	r2, [r3, #16]
   11d9c:	ldr	r3, [fp, #-84]	; 0xffffffac
   11da0:	ldr	r3, [r3, #12]
   11da4:	sub	r3, r2, r3
   11da8:	cmp	r3, #0
   11dac:	bne	11dbc <close@plt+0xe08>
   11db0:	mov	r1, #1
   11db4:	ldr	r0, [fp, #-80]	; 0xffffffb0
   11db8:	bl	1345c <_obstack_newchunk@@Base>
   11dbc:	ldr	r3, [fp, #-80]	; 0xffffffb0
   11dc0:	ldr	r3, [r3, #12]
   11dc4:	add	r1, r3, #1
   11dc8:	ldr	r2, [fp, #-80]	; 0xffffffb0
   11dcc:	str	r1, [r2, #12]
   11dd0:	mov	r2, #58	; 0x3a
   11dd4:	strb	r2, [r3]
   11dd8:	b	12058 <close@plt+0x10a4>
   11ddc:	ldr	r3, [fp, #-128]	; 0xffffff80
   11de0:	movw	r1, #39600	; 0x9ab0
   11de4:	movt	r1, #1
   11de8:	mov	r0, r3
   11dec:	bl	12900 <close@plt+0x194c>
   11df0:	mov	r3, r0
   11df4:	cmp	r3, #0
   11df8:	beq	12058 <close@plt+0x10a4>
   11dfc:	ldr	r3, [fp, #-128]	; 0xffffff80
   11e00:	movw	r1, #39608	; 0x9ab8
   11e04:	movt	r1, #1
   11e08:	mov	r0, r3
   11e0c:	bl	12900 <close@plt+0x194c>
   11e10:	mov	r3, r0
   11e14:	cmp	r3, #0
   11e18:	beq	12058 <close@plt+0x10a4>
   11e1c:	ldr	r3, [fp, #-128]	; 0xffffff80
   11e20:	movw	r1, #39616	; 0x9ac0
   11e24:	movt	r1, #1
   11e28:	mov	r0, r3
   11e2c:	bl	12900 <close@plt+0x194c>
   11e30:	mov	r3, r0
   11e34:	cmp	r3, #0
   11e38:	beq	12058 <close@plt+0x10a4>
   11e3c:	mov	r3, #0
   11e40:	str	r3, [fp, #-44]	; 0xffffffd4
   11e44:	b	11e7c <close@plt+0xec8>
   11e48:	ldr	r0, [fp, #-128]	; 0xffffff80
   11e4c:	movw	r3, #38244	; 0x9564
   11e50:	movt	r3, #1
   11e54:	ldr	r2, [fp, #-44]	; 0xffffffd4
   11e58:	ldr	r3, [r3, r2, lsl #2]
   11e5c:	mov	r1, r3
   11e60:	bl	12900 <close@plt+0x194c>
   11e64:	mov	r3, r0
   11e68:	cmp	r3, #0
   11e6c:	beq	11e98 <close@plt+0xee4>
   11e70:	ldr	r3, [fp, #-44]	; 0xffffffd4
   11e74:	add	r3, r3, #1
   11e78:	str	r3, [fp, #-44]	; 0xffffffd4
   11e7c:	movw	r3, #38244	; 0x9564
   11e80:	movt	r3, #1
   11e84:	ldr	r2, [fp, #-44]	; 0xffffffd4
   11e88:	ldr	r3, [r3, r2, lsl #2]
   11e8c:	cmp	r3, #0
   11e90:	bne	11e48 <close@plt+0xe94>
   11e94:	b	11e9c <close@plt+0xee8>
   11e98:	nop	{0}
   11e9c:	movw	r3, #38244	; 0x9564
   11ea0:	movt	r3, #1
   11ea4:	ldr	r2, [fp, #-44]	; 0xffffffd4
   11ea8:	ldr	r3, [r3, r2, lsl #2]
   11eac:	cmp	r3, #0
   11eb0:	beq	12044 <close@plt+0x1090>
   11eb4:	movw	r3, #45404	; 0xb15c
   11eb8:	movt	r3, #2
   11ebc:	str	r3, [fp, #-88]	; 0xffffffa8
   11ec0:	ldr	r3, [fp, #-88]	; 0xffffffa8
   11ec4:	str	r3, [fp, #-92]	; 0xffffffa4
   11ec8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   11ecc:	ldr	r2, [r3, #16]
   11ed0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   11ed4:	ldr	r3, [r3, #12]
   11ed8:	sub	r3, r2, r3
   11edc:	cmp	r3, #0
   11ee0:	bne	11ef0 <close@plt+0xf3c>
   11ee4:	mov	r1, #1
   11ee8:	ldr	r0, [fp, #-88]	; 0xffffffa8
   11eec:	bl	1345c <_obstack_newchunk@@Base>
   11ef0:	movw	r3, #38492	; 0x965c
   11ef4:	movt	r3, #1
   11ef8:	ldr	r2, [fp, #-44]	; 0xffffffd4
   11efc:	ldr	r2, [r3, r2, lsl #2]
   11f00:	ldr	r3, [fp, #-88]	; 0xffffffa8
   11f04:	ldr	r3, [r3, #12]
   11f08:	add	r0, r3, #1
   11f0c:	ldr	r1, [fp, #-88]	; 0xffffffa8
   11f10:	str	r0, [r1, #12]
   11f14:	ldrb	r2, [r2]
   11f18:	strb	r2, [r3]
   11f1c:	movw	r3, #45404	; 0xb15c
   11f20:	movt	r3, #2
   11f24:	str	r3, [fp, #-96]	; 0xffffffa0
   11f28:	ldr	r3, [fp, #-96]	; 0xffffffa0
   11f2c:	str	r3, [fp, #-100]	; 0xffffff9c
   11f30:	ldr	r3, [fp, #-100]	; 0xffffff9c
   11f34:	ldr	r2, [r3, #16]
   11f38:	ldr	r3, [fp, #-100]	; 0xffffff9c
   11f3c:	ldr	r3, [r3, #12]
   11f40:	sub	r3, r2, r3
   11f44:	cmp	r3, #0
   11f48:	bne	11f58 <close@plt+0xfa4>
   11f4c:	mov	r1, #1
   11f50:	ldr	r0, [fp, #-96]	; 0xffffffa0
   11f54:	bl	1345c <_obstack_newchunk@@Base>
   11f58:	movw	r3, #38492	; 0x965c
   11f5c:	movt	r3, #1
   11f60:	ldr	r2, [fp, #-44]	; 0xffffffd4
   11f64:	ldr	r2, [r3, r2, lsl #2]
   11f68:	ldr	r3, [fp, #-96]	; 0xffffffa0
   11f6c:	ldr	r3, [r3, #12]
   11f70:	add	r0, r3, #1
   11f74:	ldr	r1, [fp, #-96]	; 0xffffffa0
   11f78:	str	r0, [r1, #12]
   11f7c:	ldrb	r2, [r2, #1]
   11f80:	strb	r2, [r3]
   11f84:	movw	r3, #45404	; 0xb15c
   11f88:	movt	r3, #2
   11f8c:	str	r3, [fp, #-104]	; 0xffffff98
   11f90:	ldr	r3, [fp, #-104]	; 0xffffff98
   11f94:	str	r3, [fp, #-108]	; 0xffffff94
   11f98:	ldr	r3, [fp, #-108]	; 0xffffff94
   11f9c:	ldr	r2, [r3, #16]
   11fa0:	ldr	r3, [fp, #-108]	; 0xffffff94
   11fa4:	ldr	r3, [r3, #12]
   11fa8:	sub	r3, r2, r3
   11fac:	cmp	r3, #0
   11fb0:	bne	11fc0 <close@plt+0x100c>
   11fb4:	mov	r1, #1
   11fb8:	ldr	r0, [fp, #-104]	; 0xffffff98
   11fbc:	bl	1345c <_obstack_newchunk@@Base>
   11fc0:	ldr	r3, [fp, #-104]	; 0xffffff98
   11fc4:	ldr	r3, [r3, #12]
   11fc8:	add	r1, r3, #1
   11fcc:	ldr	r2, [fp, #-104]	; 0xffffff98
   11fd0:	str	r1, [r2, #12]
   11fd4:	mov	r2, #61	; 0x3d
   11fd8:	strb	r2, [r3]
   11fdc:	ldr	r3, [fp, #-132]	; 0xffffff7c
   11fe0:	mov	r0, r3
   11fe4:	bl	1170c <close@plt+0x758>
   11fe8:	movw	r3, #45404	; 0xb15c
   11fec:	movt	r3, #2
   11ff0:	str	r3, [fp, #-112]	; 0xffffff90
   11ff4:	ldr	r3, [fp, #-112]	; 0xffffff90
   11ff8:	str	r3, [fp, #-116]	; 0xffffff8c
   11ffc:	ldr	r3, [fp, #-116]	; 0xffffff8c
   12000:	ldr	r2, [r3, #16]
   12004:	ldr	r3, [fp, #-116]	; 0xffffff8c
   12008:	ldr	r3, [r3, #12]
   1200c:	sub	r3, r2, r3
   12010:	cmp	r3, #0
   12014:	bne	12024 <close@plt+0x1070>
   12018:	mov	r1, #1
   1201c:	ldr	r0, [fp, #-112]	; 0xffffff90
   12020:	bl	1345c <_obstack_newchunk@@Base>
   12024:	ldr	r3, [fp, #-112]	; 0xffffff90
   12028:	ldr	r3, [r3, #12]
   1202c:	add	r1, r3, #1
   12030:	ldr	r2, [fp, #-112]	; 0xffffff90
   12034:	str	r1, [r2, #12]
   12038:	mov	r2, #58	; 0x3a
   1203c:	strb	r2, [r3]
   12040:	b	12058 <close@plt+0x10a4>
   12044:	mov	r3, #1
   12048:	strb	r3, [fp, #-37]	; 0xffffffdb
   1204c:	b	12058 <close@plt+0x10a4>
   12050:	mov	r3, #1
   12054:	strb	r3, [fp, #-37]	; 0xffffffdb
   12058:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   1205c:	cmp	r3, #0
   12060:	beq	120ec <close@plt+0x1138>
   12064:	ldr	r3, [fp, #-36]	; 0xffffffdc
   12068:	cmp	r3, #2
   1206c:	beq	1207c <close@plt+0x10c8>
   12070:	ldr	r3, [fp, #-36]	; 0xffffffdc
   12074:	cmp	r3, #1
   12078:	bne	120ec <close@plt+0x1138>
   1207c:	movw	r0, #39628	; 0x9acc
   12080:	movt	r0, #1
   12084:	bl	10ef4 <gettext@plt>
   12088:	mov	r4, r0
   1208c:	ldr	r3, [fp, #-140]	; 0xffffff74
   12090:	cmp	r3, #0
   12094:	beq	120b0 <close@plt+0x10fc>
   12098:	ldr	r2, [fp, #-140]	; 0xffffff74
   1209c:	mov	r1, #3
   120a0:	mov	r0, #0
   120a4:	bl	15f40 <_obstack_memory_used@@Base+0x272c>
   120a8:	mov	r2, r0
   120ac:	b	120c0 <close@plt+0x110c>
   120b0:	movw	r0, #39660	; 0x9aec
   120b4:	movt	r0, #1
   120b8:	bl	10ef4 <gettext@plt>
   120bc:	mov	r2, r0
   120c0:	ldr	r3, [fp, #-128]	; 0xffffff80
   120c4:	str	r3, [sp, #4]
   120c8:	ldr	r3, [fp, #-16]
   120cc:	str	r3, [sp]
   120d0:	mov	r3, r2
   120d4:	mov	r2, r4
   120d8:	mov	r1, #0
   120dc:	mov	r0, #0
   120e0:	bl	10e58 <error@plt>
   120e4:	mov	r3, #0
   120e8:	strb	r3, [fp, #-29]	; 0xffffffe3
   120ec:	ldr	r3, [fp, #-128]	; 0xffffff80
   120f0:	mov	r0, r3
   120f4:	bl	12d24 <close@plt+0x1d70>
   120f8:	ldr	r3, [fp, #-132]	; 0xffffff7c
   120fc:	mov	r0, r3
   12100:	bl	12d24 <close@plt+0x1d70>
   12104:	b	11a34 <close@plt+0xa80>
   12108:	nop	{0}
   1210c:	ldrb	r3, [fp, #-29]	; 0xffffffe3
   12110:	b	1211c <close@plt+0x1168>
   12114:	nop	{0}
   12118:	b	11a34 <close@plt+0xa80>
   1211c:	mov	r0, r3
   12120:	sub	sp, fp, #8
   12124:	ldr	r4, [sp]
   12128:	ldr	fp, [sp, #4]
   1212c:	add	sp, sp, #8
   12130:	pop	{pc}		; (ldr pc, [sp], #4)
   12134:	andeq	r9, r1, r6, lsr #8
   12138:	str	r4, [sp, #-12]!
   1213c:	str	fp, [sp, #4]
   12140:	str	lr, [sp, #8]
   12144:	add	fp, sp, #8
   12148:	sub	sp, sp, #20
   1214c:	str	r0, [fp, #-24]	; 0xffffffe8
   12150:	movw	r1, #39672	; 0x9af8
   12154:	movt	r1, #1
   12158:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1215c:	bl	10d68 <strcmp@plt>
   12160:	mov	r3, r0
   12164:	cmp	r3, #0
   12168:	beq	121d4 <close@plt+0x1220>
   1216c:	movw	r3, #45392	; 0xb150
   12170:	movt	r3, #2
   12174:	ldr	r3, [r3]
   12178:	mov	r2, r3
   1217c:	movw	r1, #39676	; 0x9afc
   12180:	movt	r1, #1
   12184:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12188:	bl	12e44 <close@plt+0x1e90>
   1218c:	mov	r3, r0
   12190:	cmp	r3, #0
   12194:	bne	121d4 <close@plt+0x1220>
   12198:	bl	10f18 <__errno_location@plt>
   1219c:	mov	r3, r0
   121a0:	ldr	r4, [r3]
   121a4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   121a8:	mov	r1, #3
   121ac:	mov	r0, #0
   121b0:	bl	15f40 <_obstack_memory_used@@Base+0x272c>
   121b4:	mov	r3, r0
   121b8:	movw	r2, #39680	; 0x9b00
   121bc:	movt	r2, #1
   121c0:	mov	r1, r4
   121c4:	mov	r0, #0
   121c8:	bl	10e58 <error@plt>
   121cc:	mov	r3, #0
   121d0:	b	12254 <close@plt+0x12a0>
   121d4:	movw	r3, #45392	; 0xb150
   121d8:	movt	r3, #2
   121dc:	ldr	r3, [r3]
   121e0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   121e4:	mov	r0, r3
   121e8:	bl	119ac <close@plt+0x9f8>
   121ec:	mov	r3, r0
   121f0:	strb	r3, [fp, #-13]
   121f4:	movw	r3, #45392	; 0xb150
   121f8:	movt	r3, #2
   121fc:	ldr	r3, [r3]
   12200:	mov	r0, r3
   12204:	bl	12b60 <close@plt+0x1bac>
   12208:	mov	r3, r0
   1220c:	cmp	r3, #0
   12210:	beq	12250 <close@plt+0x129c>
   12214:	bl	10f18 <__errno_location@plt>
   12218:	mov	r3, r0
   1221c:	ldr	r4, [r3]
   12220:	ldr	r2, [fp, #-24]	; 0xffffffe8
   12224:	mov	r1, #3
   12228:	mov	r0, #0
   1222c:	bl	15f40 <_obstack_memory_used@@Base+0x272c>
   12230:	mov	r3, r0
   12234:	movw	r2, #39680	; 0x9b00
   12238:	movt	r2, #1
   1223c:	mov	r1, r4
   12240:	mov	r0, #0
   12244:	bl	10e58 <error@plt>
   12248:	mov	r3, #0
   1224c:	b	12254 <close@plt+0x12a0>
   12250:	ldrb	r3, [fp, #-13]
   12254:	mov	r0, r3
   12258:	sub	sp, fp, #8
   1225c:	ldr	r4, [sp]
   12260:	ldr	fp, [sp, #4]
   12264:	add	sp, sp, #8
   12268:	pop	{pc}		; (ldr pc, [sp], #4)
   1226c:	str	r4, [sp, #-12]!
   12270:	str	fp, [sp, #4]
   12274:	str	lr, [sp, #8]
   12278:	add	fp, sp, #8
   1227c:	sub	sp, sp, #68	; 0x44
   12280:	str	r0, [fp, #-64]	; 0xffffffc0
   12284:	str	r1, [fp, #-68]	; 0xffffffbc
   12288:	mov	r3, #1
   1228c:	strb	r3, [fp, #-13]
   12290:	mov	r3, #2
   12294:	str	r3, [fp, #-20]	; 0xffffffec
   12298:	mov	r3, #0
   1229c:	strb	r3, [fp, #-21]	; 0xffffffeb
   122a0:	ldr	r3, [fp, #-68]	; 0xffffffbc
   122a4:	ldr	r3, [r3]
   122a8:	mov	r0, r3
   122ac:	bl	138dc <_obstack_memory_used@@Base+0xc8>
   122b0:	movw	r1, #33436	; 0x829c
   122b4:	movt	r1, #1
   122b8:	mov	r0, #6
   122bc:	bl	10f60 <setlocale@plt>
   122c0:	movw	r1, #39684	; 0x9b04
   122c4:	movt	r1, #1
   122c8:	movw	r0, #33460	; 0x82b4
   122cc:	movt	r0, #1
   122d0:	bl	10f84 <bindtextdomain@plt>
   122d4:	movw	r0, #33460	; 0x82b4
   122d8:	movt	r0, #1
   122dc:	bl	10df8 <textdomain@plt>
   122e0:	movw	r0, #10768	; 0x2a10
   122e4:	movt	r0, #1
   122e8:	bl	18180 <_obstack_memory_used@@Base+0x496c>
   122ec:	b	123c0 <close@plt+0x140c>
   122f0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   122f4:	cmp	r3, #98	; 0x62
   122f8:	beq	12340 <close@plt+0x138c>
   122fc:	ldr	r3, [fp, #-40]	; 0xffffffd8
   12300:	cmp	r3, #98	; 0x62
   12304:	bgt	12324 <close@plt+0x1370>
   12308:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1230c:	cmn	r3, #3
   12310:	beq	1236c <close@plt+0x13b8>
   12314:	ldr	r3, [fp, #-40]	; 0xffffffd8
   12318:	cmn	r3, #2
   1231c:	beq	12364 <close@plt+0x13b0>
   12320:	b	123b8 <close@plt+0x1404>
   12324:	ldr	r3, [fp, #-40]	; 0xffffffd8
   12328:	cmp	r3, #99	; 0x63
   1232c:	beq	1234c <close@plt+0x1398>
   12330:	ldr	r3, [fp, #-40]	; 0xffffffd8
   12334:	cmp	r3, #112	; 0x70
   12338:	beq	12358 <close@plt+0x13a4>
   1233c:	b	123b8 <close@plt+0x1404>
   12340:	mov	r3, #0
   12344:	str	r3, [fp, #-20]	; 0xffffffec
   12348:	b	123c0 <close@plt+0x140c>
   1234c:	mov	r3, #1
   12350:	str	r3, [fp, #-20]	; 0xffffffec
   12354:	b	123c0 <close@plt+0x140c>
   12358:	mov	r3, #1
   1235c:	strb	r3, [fp, #-21]	; 0xffffffeb
   12360:	b	123c0 <close@plt+0x140c>
   12364:	mov	r0, #0
   12368:	bl	1129c <close@plt+0x2e8>
   1236c:	movw	r3, #45396	; 0xb154
   12370:	movt	r3, #2
   12374:	ldr	r0, [r3]
   12378:	movw	r3, #45288	; 0xb0e8
   1237c:	movt	r3, #2
   12380:	ldr	r2, [r3]
   12384:	mov	r3, #0
   12388:	str	r3, [sp, #4]
   1238c:	movw	r3, #39708	; 0x9b1c
   12390:	movt	r3, #1
   12394:	str	r3, [sp]
   12398:	mov	r3, r2
   1239c:	movw	r2, #33252	; 0x81e4
   123a0:	movt	r2, #1
   123a4:	movw	r1, #39512	; 0x9a58
   123a8:	movt	r1, #1
   123ac:	bl	16944 <_obstack_memory_used@@Base+0x3130>
   123b0:	mov	r0, #0
   123b4:	bl	10ee8 <exit@plt>
   123b8:	mov	r0, #1
   123bc:	bl	1129c <close@plt+0x2e8>
   123c0:	mov	r3, #0
   123c4:	str	r3, [sp]
   123c8:	movw	r3, #38708	; 0x9734
   123cc:	movt	r3, #1
   123d0:	movw	r2, #39724	; 0x9b2c
   123d4:	movt	r2, #1
   123d8:	ldr	r1, [fp, #-68]	; 0xffffffbc
   123dc:	ldr	r0, [fp, #-64]	; 0xffffffc0
   123e0:	bl	10ed0 <getopt_long@plt>
   123e4:	str	r0, [fp, #-40]	; 0xffffffd8
   123e8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   123ec:	cmn	r3, #1
   123f0:	bne	122f0 <close@plt+0x133c>
   123f4:	movw	r3, #45376	; 0xb140
   123f8:	movt	r3, #2
   123fc:	ldr	r3, [r3]
   12400:	ldr	r2, [fp, #-64]	; 0xffffffc0
   12404:	sub	r3, r2, r3
   12408:	str	r3, [fp, #-64]	; 0xffffffc0
   1240c:	movw	r3, #45376	; 0xb140
   12410:	movt	r3, #2
   12414:	ldr	r3, [r3]
   12418:	lsl	r3, r3, #2
   1241c:	ldr	r2, [fp, #-68]	; 0xffffffbc
   12420:	add	r3, r2, r3
   12424:	str	r3, [fp, #-68]	; 0xffffffbc
   12428:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   1242c:	cmp	r3, #0
   12430:	beq	12468 <close@plt+0x14b4>
   12434:	ldr	r3, [fp, #-20]	; 0xffffffec
   12438:	cmp	r3, #2
   1243c:	beq	12468 <close@plt+0x14b4>
   12440:	movw	r0, #39728	; 0x9b30
   12444:	movt	r0, #1
   12448:	bl	10ef4 <gettext@plt>
   1244c:	mov	r3, r0
   12450:	mov	r2, r3
   12454:	mov	r1, #0
   12458:	mov	r0, #0
   1245c:	bl	10e58 <error@plt>
   12460:	mov	r0, #1
   12464:	bl	1129c <close@plt+0x2e8>
   12468:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   1246c:	eor	r3, r3, #1
   12470:	uxtb	r3, r3
   12474:	mov	r2, r3
   12478:	ldr	r3, [fp, #-64]	; 0xffffffc0
   1247c:	cmp	r3, r2
   12480:	ble	12520 <close@plt+0x156c>
   12484:	movw	r0, #39832	; 0x9b98
   12488:	movt	r0, #1
   1248c:	bl	10ef4 <gettext@plt>
   12490:	mov	r4, r0
   12494:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   12498:	eor	r3, r3, #1
   1249c:	uxtb	r3, r3
   124a0:	cmp	r3, #0
   124a4:	beq	124b0 <close@plt+0x14fc>
   124a8:	mov	r3, #4
   124ac:	b	124b4 <close@plt+0x1500>
   124b0:	mov	r3, #0
   124b4:	ldr	r2, [fp, #-68]	; 0xffffffbc
   124b8:	add	r3, r2, r3
   124bc:	ldr	r3, [r3]
   124c0:	mov	r0, r3
   124c4:	bl	1623c <_obstack_memory_used@@Base+0x2a28>
   124c8:	mov	r3, r0
   124cc:	mov	r2, r4
   124d0:	mov	r1, #0
   124d4:	mov	r0, #0
   124d8:	bl	10e58 <error@plt>
   124dc:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   124e0:	cmp	r3, #0
   124e4:	beq	12518 <close@plt+0x1564>
   124e8:	movw	r3, #45384	; 0xb148
   124ec:	movt	r3, #2
   124f0:	ldr	r4, [r3]
   124f4:	movw	r0, #39852	; 0x9bac
   124f8:	movt	r0, #1
   124fc:	bl	10ef4 <gettext@plt>
   12500:	mov	r3, r0
   12504:	mov	r2, r3
   12508:	movw	r1, #39912	; 0x9be8
   1250c:	movt	r1, #1
   12510:	mov	r0, r4
   12514:	bl	10f0c <fprintf@plt>
   12518:	mov	r0, #1
   1251c:	bl	1129c <close@plt+0x2e8>
   12520:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   12524:	cmp	r3, #0
   12528:	beq	12584 <close@plt+0x15d0>
   1252c:	movw	r3, #33616	; 0x8350
   12530:	movt	r3, #1
   12534:	str	r3, [fp, #-28]	; 0xffffffe4
   12538:	b	12560 <close@plt+0x15ac>
   1253c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12540:	bl	10e88 <puts@plt>
   12544:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12548:	bl	10f00 <strlen@plt>
   1254c:	mov	r3, r0
   12550:	add	r3, r3, #1
   12554:	ldr	r2, [fp, #-28]	; 0xffffffe4
   12558:	add	r3, r2, r3
   1255c:	str	r3, [fp, #-28]	; 0xffffffe4
   12560:	ldr	r2, [fp, #-28]	; 0xffffffe4
   12564:	movw	r3, #33616	; 0x8350
   12568:	movt	r3, #1
   1256c:	sub	r3, r2, r3
   12570:	mov	r2, r3
   12574:	movw	r3, #4309	; 0x10d5
   12578:	cmp	r2, r3
   1257c:	bls	1253c <close@plt+0x1588>
   12580:	b	127b0 <close@plt+0x17fc>
   12584:	ldr	r3, [fp, #-20]	; 0xffffffec
   12588:	cmp	r3, #2
   1258c:	bne	125c4 <close@plt+0x1610>
   12590:	bl	113d4 <close@plt+0x420>
   12594:	str	r0, [fp, #-20]	; 0xffffffec
   12598:	ldr	r3, [fp, #-20]	; 0xffffffec
   1259c:	cmp	r3, #2
   125a0:	bne	125c4 <close@plt+0x1610>
   125a4:	movw	r0, #39916	; 0x9bec
   125a8:	movt	r0, #1
   125ac:	bl	10ef4 <gettext@plt>
   125b0:	mov	r3, r0
   125b4:	mov	r2, r3
   125b8:	mov	r1, #0
   125bc:	mov	r0, #1
   125c0:	bl	10e58 <error@plt>
   125c4:	movw	r3, #11556	; 0x2d24
   125c8:	movt	r3, #1
   125cc:	str	r3, [sp]
   125d0:	movw	r3, #29772	; 0x744c
   125d4:	movt	r3, #1
   125d8:	mov	r2, #0
   125dc:	mov	r1, #0
   125e0:	movw	r0, #45404	; 0xb15c
   125e4:	movt	r0, #2
   125e8:	bl	13370 <_obstack_begin@@Base>
   125ec:	ldr	r3, [fp, #-64]	; 0xffffffc0
   125f0:	cmp	r3, #0
   125f4:	bne	12610 <close@plt+0x165c>
   125f8:	mov	r1, #0
   125fc:	mov	r0, #0
   12600:	bl	119ac <close@plt+0x9f8>
   12604:	mov	r3, r0
   12608:	strb	r3, [fp, #-13]
   1260c:	b	12628 <close@plt+0x1674>
   12610:	ldr	r3, [fp, #-68]	; 0xffffffbc
   12614:	ldr	r3, [r3]
   12618:	mov	r0, r3
   1261c:	bl	12138 <close@plt+0x1184>
   12620:	mov	r3, r0
   12624:	strb	r3, [fp, #-13]
   12628:	ldrb	r3, [fp, #-13]
   1262c:	cmp	r3, #0
   12630:	beq	127b0 <close@plt+0x17fc>
   12634:	movw	r3, #45404	; 0xb15c
   12638:	movt	r3, #2
   1263c:	str	r3, [fp, #-44]	; 0xffffffd4
   12640:	ldr	r3, [fp, #-44]	; 0xffffffd4
   12644:	ldr	r2, [r3, #12]
   12648:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1264c:	ldr	r3, [r3, #8]
   12650:	sub	r3, r2, r3
   12654:	str	r3, [fp, #-48]	; 0xffffffd0
   12658:	movw	r3, #45404	; 0xb15c
   1265c:	movt	r3, #2
   12660:	str	r3, [fp, #-52]	; 0xffffffcc
   12664:	ldr	r3, [fp, #-52]	; 0xffffffcc
   12668:	ldr	r3, [r3, #8]
   1266c:	str	r3, [fp, #-56]	; 0xffffffc8
   12670:	ldr	r3, [fp, #-52]	; 0xffffffcc
   12674:	ldr	r3, [r3, #12]
   12678:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1267c:	cmp	r2, r3
   12680:	bne	12694 <close@plt+0x16e0>
   12684:	ldr	r2, [fp, #-52]	; 0xffffffcc
   12688:	ldrb	r3, [r2, #40]	; 0x28
   1268c:	orr	r3, r3, #2
   12690:	strb	r3, [r2, #40]	; 0x28
   12694:	ldr	r3, [fp, #-52]	; 0xffffffcc
   12698:	ldr	r3, [r3, #12]
   1269c:	mov	r2, r3
   126a0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   126a4:	ldr	r3, [r3, #24]
   126a8:	add	r2, r2, r3
   126ac:	ldr	r3, [fp, #-52]	; 0xffffffcc
   126b0:	ldr	r3, [r3, #24]
   126b4:	mvn	r3, r3
   126b8:	and	r3, r3, r2
   126bc:	mov	r2, r3
   126c0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   126c4:	str	r2, [r3, #12]
   126c8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   126cc:	ldr	r2, [r3, #12]
   126d0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   126d4:	ldr	r3, [r3, #4]
   126d8:	sub	r3, r2, r3
   126dc:	mov	r1, r3
   126e0:	ldr	r3, [fp, #-52]	; 0xffffffcc
   126e4:	ldr	r2, [r3, #16]
   126e8:	ldr	r3, [fp, #-52]	; 0xffffffcc
   126ec:	ldr	r3, [r3, #4]
   126f0:	sub	r3, r2, r3
   126f4:	cmp	r1, r3
   126f8:	bls	1270c <close@plt+0x1758>
   126fc:	ldr	r3, [fp, #-52]	; 0xffffffcc
   12700:	ldr	r2, [r3, #16]
   12704:	ldr	r3, [fp, #-52]	; 0xffffffcc
   12708:	str	r2, [r3, #12]
   1270c:	ldr	r3, [fp, #-52]	; 0xffffffcc
   12710:	ldr	r2, [r3, #12]
   12714:	ldr	r3, [fp, #-52]	; 0xffffffcc
   12718:	str	r2, [r3, #8]
   1271c:	ldr	r3, [fp, #-56]	; 0xffffffc8
   12720:	str	r3, [fp, #-60]	; 0xffffffc4
   12724:	ldr	r3, [fp, #-20]	; 0xffffffec
   12728:	cmp	r3, #0
   1272c:	bne	1274c <close@plt+0x1798>
   12730:	movw	r3, #39980	; 0x9c2c
   12734:	movt	r3, #1
   12738:	str	r3, [fp, #-32]	; 0xffffffe0
   1273c:	movw	r3, #39992	; 0x9c38
   12740:	movt	r3, #1
   12744:	str	r3, [fp, #-36]	; 0xffffffdc
   12748:	b	12764 <close@plt+0x17b0>
   1274c:	movw	r3, #40016	; 0x9c50
   12750:	movt	r3, #1
   12754:	str	r3, [fp, #-32]	; 0xffffffe0
   12758:	movw	r3, #40036	; 0x9c64
   1275c:	movt	r3, #1
   12760:	str	r3, [fp, #-36]	; 0xffffffdc
   12764:	movw	r3, #45396	; 0xb154
   12768:	movt	r3, #2
   1276c:	ldr	r3, [r3]
   12770:	mov	r1, r3
   12774:	ldr	r0, [fp, #-32]	; 0xffffffe0
   12778:	bl	10d5c <fputs_unlocked@plt>
   1277c:	movw	r3, #45396	; 0xb154
   12780:	movt	r3, #2
   12784:	ldr	r3, [r3]
   12788:	ldr	r2, [fp, #-48]	; 0xffffffd0
   1278c:	mov	r1, #1
   12790:	ldr	r0, [fp, #-60]	; 0xffffffc4
   12794:	bl	10dbc <fwrite_unlocked@plt>
   12798:	movw	r3, #45396	; 0xb154
   1279c:	movt	r3, #2
   127a0:	ldr	r3, [r3]
   127a4:	mov	r1, r3
   127a8:	ldr	r0, [fp, #-36]	; 0xffffffdc
   127ac:	bl	10d5c <fputs_unlocked@plt>
   127b0:	ldrb	r3, [fp, #-13]
   127b4:	eor	r3, r3, #1
   127b8:	uxtb	r3, r3
   127bc:	mov	r0, r3
   127c0:	sub	sp, fp, #8
   127c4:	ldr	r4, [sp]
   127c8:	ldr	fp, [sp, #4]
   127cc:	add	sp, sp, #8
   127d0:	pop	{pc}		; (ldr pc, [sp], #4)
   127d4:	push	{fp}		; (str fp, [sp, #-4]!)
   127d8:	add	fp, sp, #0
   127dc:	sub	sp, sp, #28
   127e0:	str	r0, [fp, #-24]	; 0xffffffe8
   127e4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   127e8:	str	r3, [fp, #-8]
   127ec:	mov	r3, #0
   127f0:	strb	r3, [fp, #-13]
   127f4:	b	12804 <close@plt+0x1850>
   127f8:	ldr	r3, [fp, #-8]
   127fc:	add	r3, r3, #1
   12800:	str	r3, [fp, #-8]
   12804:	ldr	r3, [fp, #-8]
   12808:	ldrb	r3, [r3]
   1280c:	cmp	r3, #47	; 0x2f
   12810:	beq	127f8 <close@plt+0x1844>
   12814:	ldr	r3, [fp, #-8]
   12818:	str	r3, [fp, #-12]
   1281c:	b	12864 <close@plt+0x18b0>
   12820:	ldr	r3, [fp, #-12]
   12824:	ldrb	r3, [r3]
   12828:	cmp	r3, #47	; 0x2f
   1282c:	bne	1283c <close@plt+0x1888>
   12830:	mov	r3, #1
   12834:	strb	r3, [fp, #-13]
   12838:	b	12858 <close@plt+0x18a4>
   1283c:	ldrb	r3, [fp, #-13]
   12840:	cmp	r3, #0
   12844:	beq	12858 <close@plt+0x18a4>
   12848:	ldr	r3, [fp, #-12]
   1284c:	str	r3, [fp, #-8]
   12850:	mov	r3, #0
   12854:	strb	r3, [fp, #-13]
   12858:	ldr	r3, [fp, #-12]
   1285c:	add	r3, r3, #1
   12860:	str	r3, [fp, #-12]
   12864:	ldr	r3, [fp, #-12]
   12868:	ldrb	r3, [r3]
   1286c:	cmp	r3, #0
   12870:	bne	12820 <close@plt+0x186c>
   12874:	ldr	r3, [fp, #-8]
   12878:	mov	r0, r3
   1287c:	add	sp, fp, #0
   12880:	pop	{fp}		; (ldr fp, [sp], #4)
   12884:	bx	lr
   12888:	str	fp, [sp, #-8]!
   1288c:	str	lr, [sp, #4]
   12890:	add	fp, sp, #4
   12894:	sub	sp, sp, #16
   12898:	str	r0, [fp, #-16]
   1289c:	mov	r3, #0
   128a0:	str	r3, [fp, #-12]
   128a4:	ldr	r0, [fp, #-16]
   128a8:	bl	10f00 <strlen@plt>
   128ac:	str	r0, [fp, #-8]
   128b0:	b	128c0 <close@plt+0x190c>
   128b4:	ldr	r3, [fp, #-8]
   128b8:	sub	r3, r3, #1
   128bc:	str	r3, [fp, #-8]
   128c0:	ldr	r3, [fp, #-8]
   128c4:	cmp	r3, #1
   128c8:	bls	128e8 <close@plt+0x1934>
   128cc:	ldr	r3, [fp, #-8]
   128d0:	sub	r3, r3, #1
   128d4:	ldr	r2, [fp, #-16]
   128d8:	add	r3, r2, r3
   128dc:	ldrb	r3, [r3]
   128e0:	cmp	r3, #47	; 0x2f
   128e4:	beq	128b4 <close@plt+0x1900>
   128e8:	ldr	r3, [fp, #-8]
   128ec:	mov	r0, r3
   128f0:	sub	sp, fp, #4
   128f4:	ldr	fp, [sp]
   128f8:	add	sp, sp, #4
   128fc:	pop	{pc}		; (ldr pc, [sp], #4)
   12900:	strd	r4, [sp, #-16]!
   12904:	str	fp, [sp, #8]
   12908:	str	lr, [sp, #12]
   1290c:	add	fp, sp, #12
   12910:	sub	sp, sp, #16
   12914:	str	r0, [fp, #-24]	; 0xffffffe8
   12918:	str	r1, [fp, #-28]	; 0xffffffe4
   1291c:	ldr	r5, [fp, #-24]	; 0xffffffe8
   12920:	ldr	r4, [fp, #-28]	; 0xffffffe4
   12924:	cmp	r5, r4
   12928:	bne	12934 <close@plt+0x1980>
   1292c:	mov	r3, #0
   12930:	b	12994 <close@plt+0x19e0>
   12934:	ldrb	r3, [r5]
   12938:	mov	r0, r3
   1293c:	bl	17a3c <_obstack_memory_used@@Base+0x4228>
   12940:	mov	r3, r0
   12944:	strb	r3, [fp, #-13]
   12948:	ldrb	r3, [r4]
   1294c:	mov	r0, r3
   12950:	bl	17a3c <_obstack_memory_used@@Base+0x4228>
   12954:	mov	r3, r0
   12958:	strb	r3, [fp, #-14]
   1295c:	ldrb	r3, [fp, #-13]
   12960:	cmp	r3, #0
   12964:	beq	12984 <close@plt+0x19d0>
   12968:	add	r5, r5, #1
   1296c:	add	r4, r4, #1
   12970:	ldrb	r2, [fp, #-13]
   12974:	ldrb	r3, [fp, #-14]
   12978:	cmp	r2, r3
   1297c:	beq	12934 <close@plt+0x1980>
   12980:	b	12988 <close@plt+0x19d4>
   12984:	nop	{0}
   12988:	ldrb	r2, [fp, #-13]
   1298c:	ldrb	r3, [fp, #-14]
   12990:	sub	r3, r2, r3
   12994:	mov	r0, r3
   12998:	sub	sp, fp, #12
   1299c:	ldrd	r4, [sp]
   129a0:	ldr	fp, [sp, #8]
   129a4:	add	sp, sp, #12
   129a8:	pop	{pc}		; (ldr pc, [sp], #4)
   129ac:	push	{fp}		; (str fp, [sp, #-4]!)
   129b0:	add	fp, sp, #0
   129b4:	sub	sp, sp, #12
   129b8:	str	r0, [fp, #-8]
   129bc:	movw	r3, #45448	; 0xb188
   129c0:	movt	r3, #2
   129c4:	ldr	r2, [fp, #-8]
   129c8:	str	r2, [r3]
   129cc:	nop	{0}
   129d0:	add	sp, fp, #0
   129d4:	pop	{fp}		; (ldr fp, [sp], #4)
   129d8:	bx	lr
   129dc:	push	{fp}		; (str fp, [sp, #-4]!)
   129e0:	add	fp, sp, #0
   129e4:	sub	sp, sp, #12
   129e8:	mov	r3, r0
   129ec:	strb	r3, [fp, #-5]
   129f0:	movw	r3, #45452	; 0xb18c
   129f4:	movt	r3, #2
   129f8:	ldrb	r2, [fp, #-5]
   129fc:	strb	r2, [r3]
   12a00:	nop	{0}
   12a04:	add	sp, fp, #0
   12a08:	pop	{fp}		; (ldr fp, [sp], #4)
   12a0c:	bx	lr
   12a10:	str	r4, [sp, #-12]!
   12a14:	str	fp, [sp, #4]
   12a18:	str	lr, [sp, #8]
   12a1c:	add	fp, sp, #8
   12a20:	sub	sp, sp, #20
   12a24:	movw	r3, #45396	; 0xb154
   12a28:	movt	r3, #2
   12a2c:	ldr	r3, [r3]
   12a30:	mov	r0, r3
   12a34:	bl	17abc <_obstack_memory_used@@Base+0x42a8>
   12a38:	mov	r3, r0
   12a3c:	cmp	r3, #0
   12a40:	beq	12b14 <close@plt+0x1b60>
   12a44:	movw	r3, #45452	; 0xb18c
   12a48:	movt	r3, #2
   12a4c:	ldrb	r3, [r3]
   12a50:	eor	r3, r3, #1
   12a54:	uxtb	r3, r3
   12a58:	cmp	r3, #0
   12a5c:	bne	12a74 <close@plt+0x1ac0>
   12a60:	bl	10f18 <__errno_location@plt>
   12a64:	mov	r3, r0
   12a68:	ldr	r3, [r3]
   12a6c:	cmp	r3, #32
   12a70:	beq	12b14 <close@plt+0x1b60>
   12a74:	movw	r0, #40056	; 0x9c78
   12a78:	movt	r0, #1
   12a7c:	bl	10ef4 <gettext@plt>
   12a80:	str	r0, [fp, #-16]
   12a84:	movw	r3, #45448	; 0xb188
   12a88:	movt	r3, #2
   12a8c:	ldr	r3, [r3]
   12a90:	cmp	r3, #0
   12a94:	beq	12ae0 <close@plt+0x1b2c>
   12a98:	bl	10f18 <__errno_location@plt>
   12a9c:	mov	r3, r0
   12aa0:	ldr	r4, [r3]
   12aa4:	movw	r3, #45448	; 0xb188
   12aa8:	movt	r3, #2
   12aac:	ldr	r3, [r3]
   12ab0:	mov	r0, r3
   12ab4:	bl	15ec8 <_obstack_memory_used@@Base+0x26b4>
   12ab8:	mov	r2, r0
   12abc:	ldr	r3, [fp, #-16]
   12ac0:	str	r3, [sp]
   12ac4:	mov	r3, r2
   12ac8:	movw	r2, #40068	; 0x9c84
   12acc:	movt	r2, #1
   12ad0:	mov	r1, r4
   12ad4:	mov	r0, #0
   12ad8:	bl	10e58 <error@plt>
   12adc:	b	12b00 <close@plt+0x1b4c>
   12ae0:	bl	10f18 <__errno_location@plt>
   12ae4:	mov	r3, r0
   12ae8:	ldr	r1, [r3]
   12aec:	ldr	r3, [fp, #-16]
   12af0:	movw	r2, #40076	; 0x9c8c
   12af4:	movt	r2, #1
   12af8:	mov	r0, #0
   12afc:	bl	10e58 <error@plt>
   12b00:	movw	r3, #45292	; 0xb0ec
   12b04:	movt	r3, #2
   12b08:	ldr	r3, [r3]
   12b0c:	mov	r0, r3
   12b10:	bl	10d98 <_exit@plt>
   12b14:	movw	r3, #45384	; 0xb148
   12b18:	movt	r3, #2
   12b1c:	ldr	r3, [r3]
   12b20:	mov	r0, r3
   12b24:	bl	17abc <_obstack_memory_used@@Base+0x42a8>
   12b28:	mov	r3, r0
   12b2c:	cmp	r3, #0
   12b30:	beq	12b48 <close@plt+0x1b94>
   12b34:	movw	r3, #45292	; 0xb0ec
   12b38:	movt	r3, #2
   12b3c:	ldr	r3, [r3]
   12b40:	mov	r0, r3
   12b44:	bl	10d98 <_exit@plt>
   12b48:	nop	{0}
   12b4c:	sub	sp, fp, #8
   12b50:	ldr	r4, [sp]
   12b54:	ldr	fp, [sp, #4]
   12b58:	add	sp, sp, #8
   12b5c:	pop	{pc}		; (ldr pc, [sp], #4)
   12b60:	str	fp, [sp, #-8]!
   12b64:	str	lr, [sp, #4]
   12b68:	add	fp, sp, #4
   12b6c:	sub	sp, sp, #32
   12b70:	str	r0, [fp, #-24]	; 0xffffffe8
   12b74:	mov	r3, #0
   12b78:	str	r3, [fp, #-8]
   12b7c:	mov	r3, #0
   12b80:	str	r3, [fp, #-12]
   12b84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12b88:	bl	10f3c <fileno@plt>
   12b8c:	str	r0, [fp, #-16]
   12b90:	ldr	r3, [fp, #-16]
   12b94:	cmp	r3, #0
   12b98:	bge	12bac <close@plt+0x1bf8>
   12b9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12ba0:	bl	10f48 <fclose@plt>
   12ba4:	mov	r3, r0
   12ba8:	b	12c50 <close@plt+0x1c9c>
   12bac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12bb0:	bl	10eac <__freading@plt>
   12bb4:	mov	r3, r0
   12bb8:	cmp	r3, #0
   12bbc:	beq	12bf8 <close@plt+0x1c44>
   12bc0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12bc4:	bl	10f3c <fileno@plt>
   12bc8:	mov	r1, r0
   12bcc:	mov	r3, #1
   12bd0:	str	r3, [sp]
   12bd4:	mov	r2, #0
   12bd8:	mov	r3, #0
   12bdc:	mov	r0, r1
   12be0:	bl	10e1c <lseek64@plt>
   12be4:	mvn	r2, #0
   12be8:	mvn	r3, #0
   12bec:	cmp	r1, r3
   12bf0:	cmpeq	r0, r2
   12bf4:	beq	12c1c <close@plt+0x1c68>
   12bf8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12bfc:	bl	12cb8 <close@plt+0x1d04>
   12c00:	mov	r3, r0
   12c04:	cmp	r3, #0
   12c08:	beq	12c1c <close@plt+0x1c68>
   12c0c:	bl	10f18 <__errno_location@plt>
   12c10:	mov	r3, r0
   12c14:	ldr	r3, [r3]
   12c18:	str	r3, [fp, #-8]
   12c1c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12c20:	bl	10f48 <fclose@plt>
   12c24:	str	r0, [fp, #-12]
   12c28:	ldr	r3, [fp, #-8]
   12c2c:	cmp	r3, #0
   12c30:	beq	12c4c <close@plt+0x1c98>
   12c34:	bl	10f18 <__errno_location@plt>
   12c38:	mov	r2, r0
   12c3c:	ldr	r3, [fp, #-8]
   12c40:	str	r3, [r2]
   12c44:	mvn	r3, #0
   12c48:	str	r3, [fp, #-12]
   12c4c:	ldr	r3, [fp, #-12]
   12c50:	mov	r0, r3
   12c54:	sub	sp, fp, #4
   12c58:	ldr	fp, [sp]
   12c5c:	add	sp, sp, #4
   12c60:	pop	{pc}		; (ldr pc, [sp], #4)
   12c64:	str	fp, [sp, #-8]!
   12c68:	str	lr, [sp, #4]
   12c6c:	add	fp, sp, #4
   12c70:	sub	sp, sp, #16
   12c74:	str	r0, [fp, #-8]
   12c78:	ldr	r3, [fp, #-8]
   12c7c:	ldr	r3, [r3]
   12c80:	and	r3, r3, #256	; 0x100
   12c84:	cmp	r3, #0
   12c88:	beq	12ca4 <close@plt+0x1cf0>
   12c8c:	mov	r3, #1
   12c90:	str	r3, [sp]
   12c94:	mov	r2, #0
   12c98:	mov	r3, #0
   12c9c:	ldr	r0, [fp, #-8]
   12ca0:	bl	13030 <close@plt+0x207c>
   12ca4:	nop	{0}
   12ca8:	sub	sp, fp, #4
   12cac:	ldr	fp, [sp]
   12cb0:	add	sp, sp, #4
   12cb4:	pop	{pc}		; (ldr pc, [sp], #4)
   12cb8:	str	fp, [sp, #-8]!
   12cbc:	str	lr, [sp, #4]
   12cc0:	add	fp, sp, #4
   12cc4:	sub	sp, sp, #8
   12cc8:	str	r0, [fp, #-8]
   12ccc:	ldr	r3, [fp, #-8]
   12cd0:	cmp	r3, #0
   12cd4:	beq	12cec <close@plt+0x1d38>
   12cd8:	ldr	r0, [fp, #-8]
   12cdc:	bl	10eac <__freading@plt>
   12ce0:	mov	r3, r0
   12ce4:	cmp	r3, #0
   12ce8:	bne	12cfc <close@plt+0x1d48>
   12cec:	ldr	r0, [fp, #-8]
   12cf0:	bl	10d80 <fflush@plt>
   12cf4:	mov	r3, r0
   12cf8:	b	12d10 <close@plt+0x1d5c>
   12cfc:	ldr	r0, [fp, #-8]
   12d00:	bl	12c64 <close@plt+0x1cb0>
   12d04:	ldr	r0, [fp, #-8]
   12d08:	bl	10d80 <fflush@plt>
   12d0c:	mov	r3, r0
   12d10:	mov	r0, r3
   12d14:	sub	sp, fp, #4
   12d18:	ldr	fp, [sp]
   12d1c:	add	sp, sp, #4
   12d20:	pop	{pc}		; (ldr pc, [sp], #4)
   12d24:	str	r4, [sp, #-12]!
   12d28:	str	fp, [sp, #4]
   12d2c:	str	lr, [sp, #8]
   12d30:	add	fp, sp, #8
   12d34:	sub	sp, sp, #20
   12d38:	str	r0, [fp, #-24]	; 0xffffffe8
   12d3c:	bl	10f18 <__errno_location@plt>
   12d40:	mov	r3, r0
   12d44:	ldr	r3, [r3]
   12d48:	str	r3, [fp, #-20]	; 0xffffffec
   12d4c:	bl	10f18 <__errno_location@plt>
   12d50:	mov	r3, r0
   12d54:	ldr	r3, [r3]
   12d58:	str	r3, [fp, #-16]
   12d5c:	bl	10f18 <__errno_location@plt>
   12d60:	mov	r2, r0
   12d64:	mov	r3, #0
   12d68:	str	r3, [r2]
   12d6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12d70:	bl	10d8c <free@plt>
   12d74:	bl	10f18 <__errno_location@plt>
   12d78:	mov	r3, r0
   12d7c:	ldr	r3, [r3]
   12d80:	cmp	r3, #0
   12d84:	moveq	r3, #1
   12d88:	movne	r3, #0
   12d8c:	uxtb	r3, r3
   12d90:	mov	r4, r3
   12d94:	bl	10f18 <__errno_location@plt>
   12d98:	mov	r2, r0
   12d9c:	lsl	r3, r4, #2
   12da0:	sub	r1, fp, #12
   12da4:	add	r3, r1, r3
   12da8:	ldr	r3, [r3, #-8]
   12dac:	str	r3, [r2]
   12db0:	nop	{0}
   12db4:	sub	sp, fp, #8
   12db8:	ldr	r4, [sp]
   12dbc:	ldr	fp, [sp, #4]
   12dc0:	add	sp, sp, #8
   12dc4:	pop	{pc}		; (ldr pc, [sp], #4)
   12dc8:	str	fp, [sp, #-8]!
   12dcc:	str	lr, [sp, #4]
   12dd0:	add	fp, sp, #4
   12dd4:	sub	sp, sp, #16
   12dd8:	str	r0, [fp, #-16]
   12ddc:	mov	r1, #0
   12de0:	movw	r0, #40080	; 0x9c90
   12de4:	movt	r0, #1
   12de8:	bl	10e70 <open64@plt>
   12dec:	str	r0, [fp, #-8]
   12df0:	ldr	r2, [fp, #-8]
   12df4:	ldr	r3, [fp, #-16]
   12df8:	cmp	r2, r3
   12dfc:	beq	12e2c <close@plt+0x1e78>
   12e00:	ldr	r3, [fp, #-8]
   12e04:	cmp	r3, #0
   12e08:	blt	12e24 <close@plt+0x1e70>
   12e0c:	ldr	r0, [fp, #-8]
   12e10:	bl	10fb4 <close@plt>
   12e14:	bl	10f18 <__errno_location@plt>
   12e18:	mov	r2, r0
   12e1c:	mov	r3, #9
   12e20:	str	r3, [r2]
   12e24:	mov	r3, #0
   12e28:	b	12e30 <close@plt+0x1e7c>
   12e2c:	mov	r3, #1
   12e30:	mov	r0, r3
   12e34:	sub	sp, fp, #4
   12e38:	ldr	fp, [sp]
   12e3c:	add	sp, sp, #4
   12e40:	pop	{pc}		; (ldr pc, [sp], #4)
   12e44:	str	fp, [sp, #-8]!
   12e48:	str	lr, [sp, #4]
   12e4c:	add	fp, sp, #4
   12e50:	sub	sp, sp, #24
   12e54:	str	r0, [fp, #-16]
   12e58:	str	r1, [fp, #-20]	; 0xffffffec
   12e5c:	str	r2, [fp, #-24]	; 0xffffffe8
   12e60:	mov	r3, #0
   12e64:	strb	r3, [fp, #-5]
   12e68:	mov	r3, #0
   12e6c:	strb	r3, [fp, #-6]
   12e70:	mov	r3, #0
   12e74:	strb	r3, [fp, #-7]
   12e78:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12e7c:	bl	10f3c <fileno@plt>
   12e80:	mov	r3, r0
   12e84:	cmp	r3, #1
   12e88:	beq	12edc <close@plt+0x1f28>
   12e8c:	cmp	r3, #2
   12e90:	beq	12ebc <close@plt+0x1f08>
   12e94:	cmp	r3, #0
   12e98:	beq	12efc <close@plt+0x1f48>
   12e9c:	mov	r1, #2
   12ea0:	mov	r0, #2
   12ea4:	bl	10de0 <dup2@plt>
   12ea8:	mov	r3, r0
   12eac:	cmp	r3, #2
   12eb0:	beq	12ebc <close@plt+0x1f08>
   12eb4:	mov	r3, #1
   12eb8:	strb	r3, [fp, #-7]
   12ebc:	mov	r1, #1
   12ec0:	mov	r0, #1
   12ec4:	bl	10de0 <dup2@plt>
   12ec8:	mov	r3, r0
   12ecc:	cmp	r3, #1
   12ed0:	beq	12edc <close@plt+0x1f28>
   12ed4:	mov	r3, #1
   12ed8:	strb	r3, [fp, #-6]
   12edc:	mov	r1, #0
   12ee0:	mov	r0, #0
   12ee4:	bl	10de0 <dup2@plt>
   12ee8:	mov	r3, r0
   12eec:	cmp	r3, #0
   12ef0:	beq	12efc <close@plt+0x1f48>
   12ef4:	mov	r3, #1
   12ef8:	strb	r3, [fp, #-5]
   12efc:	nop	{0}
   12f00:	ldrb	r3, [fp, #-5]
   12f04:	cmp	r3, #0
   12f08:	beq	12f34 <close@plt+0x1f80>
   12f0c:	mov	r0, #0
   12f10:	bl	12dc8 <close@plt+0x1e14>
   12f14:	mov	r3, r0
   12f18:	eor	r3, r3, #1
   12f1c:	uxtb	r3, r3
   12f20:	cmp	r3, #0
   12f24:	beq	12f34 <close@plt+0x1f80>
   12f28:	mov	r3, #0
   12f2c:	str	r3, [fp, #-24]	; 0xffffffe8
   12f30:	b	12fb0 <close@plt+0x1ffc>
   12f34:	ldrb	r3, [fp, #-6]
   12f38:	cmp	r3, #0
   12f3c:	beq	12f68 <close@plt+0x1fb4>
   12f40:	mov	r0, #1
   12f44:	bl	12dc8 <close@plt+0x1e14>
   12f48:	mov	r3, r0
   12f4c:	eor	r3, r3, #1
   12f50:	uxtb	r3, r3
   12f54:	cmp	r3, #0
   12f58:	beq	12f68 <close@plt+0x1fb4>
   12f5c:	mov	r3, #0
   12f60:	str	r3, [fp, #-24]	; 0xffffffe8
   12f64:	b	12fb0 <close@plt+0x1ffc>
   12f68:	ldrb	r3, [fp, #-7]
   12f6c:	cmp	r3, #0
   12f70:	beq	12f9c <close@plt+0x1fe8>
   12f74:	mov	r0, #2
   12f78:	bl	12dc8 <close@plt+0x1e14>
   12f7c:	mov	r3, r0
   12f80:	eor	r3, r3, #1
   12f84:	uxtb	r3, r3
   12f88:	cmp	r3, #0
   12f8c:	beq	12f9c <close@plt+0x1fe8>
   12f90:	mov	r3, #0
   12f94:	str	r3, [fp, #-24]	; 0xffffffe8
   12f98:	b	12fb0 <close@plt+0x1ffc>
   12f9c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   12fa0:	ldr	r1, [fp, #-20]	; 0xffffffec
   12fa4:	ldr	r0, [fp, #-16]
   12fa8:	bl	10ec4 <freopen64@plt>
   12fac:	str	r0, [fp, #-24]	; 0xffffffe8
   12fb0:	bl	10f18 <__errno_location@plt>
   12fb4:	mov	r3, r0
   12fb8:	ldr	r3, [r3]
   12fbc:	str	r3, [fp, #-12]
   12fc0:	ldrb	r3, [fp, #-7]
   12fc4:	cmp	r3, #0
   12fc8:	beq	12fd4 <close@plt+0x2020>
   12fcc:	mov	r0, #2
   12fd0:	bl	10fb4 <close@plt>
   12fd4:	ldrb	r3, [fp, #-6]
   12fd8:	cmp	r3, #0
   12fdc:	beq	12fe8 <close@plt+0x2034>
   12fe0:	mov	r0, #1
   12fe4:	bl	10fb4 <close@plt>
   12fe8:	ldrb	r3, [fp, #-5]
   12fec:	cmp	r3, #0
   12ff0:	beq	12ffc <close@plt+0x2048>
   12ff4:	mov	r0, #0
   12ff8:	bl	10fb4 <close@plt>
   12ffc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13000:	cmp	r3, #0
   13004:	bne	13018 <close@plt+0x2064>
   13008:	bl	10f18 <__errno_location@plt>
   1300c:	mov	r2, r0
   13010:	ldr	r3, [fp, #-12]
   13014:	str	r3, [r2]
   13018:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1301c:	mov	r0, r3
   13020:	sub	sp, fp, #4
   13024:	ldr	fp, [sp]
   13028:	add	sp, sp, #4
   1302c:	pop	{pc}		; (ldr pc, [sp], #4)
   13030:	str	fp, [sp, #-8]!
   13034:	str	lr, [sp, #4]
   13038:	add	fp, sp, #4
   1303c:	sub	sp, sp, #32
   13040:	str	r0, [fp, #-16]
   13044:	strd	r2, [fp, #-28]	; 0xffffffe4
   13048:	ldr	r3, [fp, #-16]
   1304c:	ldr	r2, [r3, #8]
   13050:	ldr	r3, [fp, #-16]
   13054:	ldr	r3, [r3, #4]
   13058:	cmp	r2, r3
   1305c:	bne	130f4 <close@plt+0x2140>
   13060:	ldr	r3, [fp, #-16]
   13064:	ldr	r2, [r3, #20]
   13068:	ldr	r3, [fp, #-16]
   1306c:	ldr	r3, [r3, #16]
   13070:	cmp	r2, r3
   13074:	bne	130f4 <close@plt+0x2140>
   13078:	ldr	r3, [fp, #-16]
   1307c:	ldr	r3, [r3, #36]	; 0x24
   13080:	cmp	r3, #0
   13084:	bne	130f4 <close@plt+0x2140>
   13088:	ldr	r0, [fp, #-16]
   1308c:	bl	10f3c <fileno@plt>
   13090:	mov	r1, r0
   13094:	ldr	r3, [fp, #4]
   13098:	str	r3, [sp]
   1309c:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   130a0:	mov	r0, r1
   130a4:	bl	10e1c <lseek64@plt>
   130a8:	strd	r0, [fp, #-12]
   130ac:	ldrd	r2, [fp, #-12]
   130b0:	mvn	r0, #0
   130b4:	mvn	r1, #0
   130b8:	cmp	r3, r1
   130bc:	cmpeq	r2, r0
   130c0:	bne	130cc <close@plt+0x2118>
   130c4:	mvn	r3, #0
   130c8:	b	1310c <close@plt+0x2158>
   130cc:	ldr	r3, [fp, #-16]
   130d0:	ldr	r3, [r3]
   130d4:	bic	r2, r3, #16
   130d8:	ldr	r3, [fp, #-16]
   130dc:	str	r2, [r3]
   130e0:	ldr	r1, [fp, #-16]
   130e4:	ldrd	r2, [fp, #-12]
   130e8:	strd	r2, [r1, #80]	; 0x50
   130ec:	mov	r3, #0
   130f0:	b	1310c <close@plt+0x2158>
   130f4:	ldr	r3, [fp, #4]
   130f8:	str	r3, [sp]
   130fc:	ldrd	r2, [fp, #-28]	; 0xffffffe4
   13100:	ldr	r0, [fp, #-16]
   13104:	bl	10f54 <fseeko64@plt>
   13108:	mov	r3, r0
   1310c:	mov	r0, r3
   13110:	sub	sp, fp, #4
   13114:	ldr	fp, [sp]
   13118:	add	sp, sp, #4
   1311c:	pop	{pc}		; (ldr pc, [sp], #4)
   13120:	str	fp, [sp, #-8]!
   13124:	str	lr, [sp, #4]
   13128:	add	fp, sp, #4
   1312c:	sub	sp, sp, #8
   13130:	str	r0, [fp, #-8]
   13134:	str	r1, [fp, #-12]
   13138:	ldr	r3, [fp, #-8]
   1313c:	ldrb	r3, [r3, #40]	; 0x28
   13140:	and	r3, r3, #1
   13144:	uxtb	r3, r3
   13148:	cmp	r3, #0
   1314c:	beq	13174 <close@plt+0x21c0>
   13150:	ldr	r3, [fp, #-8]
   13154:	ldr	r3, [r3, #28]
   13158:	ldr	r2, [fp, #-8]
   1315c:	ldr	r2, [r2, #36]	; 0x24
   13160:	ldr	r1, [fp, #-12]
   13164:	mov	r0, r2
   13168:	blx	r3
   1316c:	mov	r3, r0
   13170:	b	13188 <close@plt+0x21d4>
   13174:	ldr	r3, [fp, #-8]
   13178:	ldr	r3, [r3, #28]
   1317c:	ldr	r0, [fp, #-12]
   13180:	blx	r3
   13184:	mov	r3, r0
   13188:	mov	r0, r3
   1318c:	sub	sp, fp, #4
   13190:	ldr	fp, [sp]
   13194:	add	sp, sp, #4
   13198:	pop	{pc}		; (ldr pc, [sp], #4)
   1319c:	str	fp, [sp, #-8]!
   131a0:	str	lr, [sp, #4]
   131a4:	add	fp, sp, #4
   131a8:	sub	sp, sp, #8
   131ac:	str	r0, [fp, #-8]
   131b0:	str	r1, [fp, #-12]
   131b4:	ldr	r3, [fp, #-8]
   131b8:	ldrb	r3, [r3, #40]	; 0x28
   131bc:	and	r3, r3, #1
   131c0:	uxtb	r3, r3
   131c4:	cmp	r3, #0
   131c8:	beq	131ec <close@plt+0x2238>
   131cc:	ldr	r3, [fp, #-8]
   131d0:	ldr	r3, [r3, #32]
   131d4:	ldr	r2, [fp, #-8]
   131d8:	ldr	r2, [r2, #36]	; 0x24
   131dc:	ldr	r1, [fp, #-12]
   131e0:	mov	r0, r2
   131e4:	blx	r3
   131e8:	b	131fc <close@plt+0x2248>
   131ec:	ldr	r3, [fp, #-8]
   131f0:	ldr	r3, [r3, #32]
   131f4:	ldr	r0, [fp, #-12]
   131f8:	blx	r3
   131fc:	nop	{0}
   13200:	sub	sp, fp, #4
   13204:	ldr	fp, [sp]
   13208:	add	sp, sp, #4
   1320c:	pop	{pc}		; (ldr pc, [sp], #4)
   13210:	str	fp, [sp, #-8]!
   13214:	str	lr, [sp, #4]
   13218:	add	fp, sp, #4
   1321c:	sub	sp, sp, #24
   13220:	str	r0, [fp, #-16]
   13224:	str	r1, [fp, #-20]	; 0xffffffec
   13228:	str	r2, [fp, #-24]	; 0xffffffe8
   1322c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13230:	cmp	r3, #0
   13234:	bne	13240 <close@plt+0x228c>
   13238:	mov	r3, #8
   1323c:	str	r3, [fp, #-24]	; 0xffffffe8
   13240:	ldr	r3, [fp, #-20]	; 0xffffffec
   13244:	cmp	r3, #0
   13248:	bne	13260 <close@plt+0x22ac>
   1324c:	mov	r3, #24
   13250:	str	r3, [fp, #-8]
   13254:	ldr	r3, [fp, #-8]
   13258:	rsb	r3, r3, #4096	; 0x1000
   1325c:	str	r3, [fp, #-20]	; 0xffffffec
   13260:	ldr	r3, [fp, #-16]
   13264:	ldr	r2, [fp, #-20]	; 0xffffffec
   13268:	str	r2, [r3]
   1326c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13270:	sub	r2, r3, #1
   13274:	ldr	r3, [fp, #-16]
   13278:	str	r2, [r3, #24]
   1327c:	ldr	r3, [fp, #-16]
   13280:	ldr	r3, [r3]
   13284:	mov	r1, r3
   13288:	ldr	r0, [fp, #-16]
   1328c:	bl	13120 <close@plt+0x216c>
   13290:	mov	r2, r0
   13294:	ldr	r3, [fp, #-16]
   13298:	str	r2, [r3, #4]
   1329c:	ldr	r3, [fp, #-16]
   132a0:	ldr	r3, [r3, #4]
   132a4:	str	r3, [fp, #-12]
   132a8:	ldr	r3, [fp, #-12]
   132ac:	cmp	r3, #0
   132b0:	bne	132c4 <close@plt+0x2310>
   132b4:	movw	r3, #45296	; 0xb0f0
   132b8:	movt	r3, #2
   132bc:	ldr	r3, [r3]
   132c0:	blx	r3
   132c4:	ldr	r3, [fp, #-12]
   132c8:	add	r3, r3, #8
   132cc:	mov	r2, r3
   132d0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   132d4:	add	r3, r2, r3
   132d8:	sub	r2, r3, #1
   132dc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   132e0:	rsb	r3, r3, #0
   132e4:	and	r3, r3, r2
   132e8:	mov	r2, r3
   132ec:	ldr	r3, [fp, #-16]
   132f0:	str	r2, [r3, #8]
   132f4:	ldr	r3, [fp, #-16]
   132f8:	ldr	r2, [r3, #8]
   132fc:	ldr	r3, [fp, #-16]
   13300:	str	r2, [r3, #12]
   13304:	ldr	r3, [fp, #-16]
   13308:	ldr	r3, [r3]
   1330c:	ldr	r2, [fp, #-12]
   13310:	add	r2, r2, r3
   13314:	ldr	r3, [fp, #-12]
   13318:	str	r2, [r3]
   1331c:	ldr	r3, [fp, #-12]
   13320:	ldr	r2, [r3]
   13324:	ldr	r3, [fp, #-16]
   13328:	str	r2, [r3, #16]
   1332c:	ldr	r3, [fp, #-12]
   13330:	mov	r2, #0
   13334:	str	r2, [r3, #4]
   13338:	ldr	r2, [fp, #-16]
   1333c:	ldrb	r3, [r2, #40]	; 0x28
   13340:	bfc	r3, #1, #1
   13344:	strb	r3, [r2, #40]	; 0x28
   13348:	ldr	r2, [fp, #-16]
   1334c:	ldrb	r3, [r2, #40]	; 0x28
   13350:	bfc	r3, #2, #1
   13354:	strb	r3, [r2, #40]	; 0x28
   13358:	mov	r3, #1
   1335c:	mov	r0, r3
   13360:	sub	sp, fp, #4
   13364:	ldr	fp, [sp]
   13368:	add	sp, sp, #4
   1336c:	pop	{pc}		; (ldr pc, [sp], #4)

00013370 <_obstack_begin@@Base>:
   13370:	str	fp, [sp, #-8]!
   13374:	str	lr, [sp, #4]
   13378:	add	fp, sp, #4
   1337c:	sub	sp, sp, #16
   13380:	str	r0, [fp, #-8]
   13384:	str	r1, [fp, #-12]
   13388:	str	r2, [fp, #-16]
   1338c:	str	r3, [fp, #-20]	; 0xffffffec
   13390:	ldr	r3, [fp, #-8]
   13394:	ldr	r2, [fp, #-20]	; 0xffffffec
   13398:	str	r2, [r3, #28]
   1339c:	ldr	r3, [fp, #-8]
   133a0:	ldr	r2, [fp, #4]
   133a4:	str	r2, [r3, #32]
   133a8:	ldr	r2, [fp, #-8]
   133ac:	ldrb	r3, [r2, #40]	; 0x28
   133b0:	bfc	r3, #0, #1
   133b4:	strb	r3, [r2, #40]	; 0x28
   133b8:	ldr	r2, [fp, #-16]
   133bc:	ldr	r1, [fp, #-12]
   133c0:	ldr	r0, [fp, #-8]
   133c4:	bl	13210 <close@plt+0x225c>
   133c8:	mov	r3, r0
   133cc:	mov	r0, r3
   133d0:	sub	sp, fp, #4
   133d4:	ldr	fp, [sp]
   133d8:	add	sp, sp, #4
   133dc:	pop	{pc}		; (ldr pc, [sp], #4)

000133e0 <_obstack_begin_1@@Base>:
   133e0:	str	fp, [sp, #-8]!
   133e4:	str	lr, [sp, #4]
   133e8:	add	fp, sp, #4
   133ec:	sub	sp, sp, #16
   133f0:	str	r0, [fp, #-8]
   133f4:	str	r1, [fp, #-12]
   133f8:	str	r2, [fp, #-16]
   133fc:	str	r3, [fp, #-20]	; 0xffffffec
   13400:	ldr	r3, [fp, #-8]
   13404:	ldr	r2, [fp, #-20]	; 0xffffffec
   13408:	str	r2, [r3, #28]
   1340c:	ldr	r3, [fp, #-8]
   13410:	ldr	r2, [fp, #4]
   13414:	str	r2, [r3, #32]
   13418:	ldr	r3, [fp, #-8]
   1341c:	ldr	r2, [fp, #8]
   13420:	str	r2, [r3, #36]	; 0x24
   13424:	ldr	r2, [fp, #-8]
   13428:	ldrb	r3, [r2, #40]	; 0x28
   1342c:	orr	r3, r3, #1
   13430:	strb	r3, [r2, #40]	; 0x28
   13434:	ldr	r2, [fp, #-16]
   13438:	ldr	r1, [fp, #-12]
   1343c:	ldr	r0, [fp, #-8]
   13440:	bl	13210 <close@plt+0x225c>
   13444:	mov	r3, r0
   13448:	mov	r0, r3
   1344c:	sub	sp, fp, #4
   13450:	ldr	fp, [sp]
   13454:	add	sp, sp, #4
   13458:	pop	{pc}		; (ldr pc, [sp], #4)

0001345c <_obstack_newchunk@@Base>:
   1345c:	str	fp, [sp, #-8]!
   13460:	str	lr, [sp, #4]
   13464:	add	fp, sp, #4
   13468:	sub	sp, sp, #40	; 0x28
   1346c:	str	r0, [fp, #-40]	; 0xffffffd8
   13470:	str	r1, [fp, #-44]	; 0xffffffd4
   13474:	ldr	r3, [fp, #-40]	; 0xffffffd8
   13478:	ldr	r3, [r3, #4]
   1347c:	str	r3, [fp, #-16]
   13480:	mov	r3, #0
   13484:	str	r3, [fp, #-8]
   13488:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1348c:	ldr	r2, [r3, #12]
   13490:	ldr	r3, [fp, #-40]	; 0xffffffd8
   13494:	ldr	r3, [r3, #8]
   13498:	sub	r3, r2, r3
   1349c:	str	r3, [fp, #-20]	; 0xffffffec
   134a0:	ldr	r2, [fp, #-20]	; 0xffffffec
   134a4:	ldr	r3, [fp, #-44]	; 0xffffffd4
   134a8:	add	r3, r2, r3
   134ac:	str	r3, [fp, #-24]	; 0xffffffe8
   134b0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   134b4:	ldr	r3, [r3, #24]
   134b8:	ldr	r2, [fp, #-24]	; 0xffffffe8
   134bc:	add	r3, r2, r3
   134c0:	str	r3, [fp, #-28]	; 0xffffffe4
   134c4:	ldr	r3, [fp, #-20]	; 0xffffffec
   134c8:	lsr	r2, r3, #3
   134cc:	ldr	r3, [fp, #-28]	; 0xffffffe4
   134d0:	add	r3, r2, r3
   134d4:	add	r3, r3, #100	; 0x64
   134d8:	str	r3, [fp, #-12]
   134dc:	ldr	r2, [fp, #-12]
   134e0:	ldr	r3, [fp, #-28]	; 0xffffffe4
   134e4:	cmp	r2, r3
   134e8:	bcs	134f4 <_obstack_newchunk@@Base+0x98>
   134ec:	ldr	r3, [fp, #-28]	; 0xffffffe4
   134f0:	str	r3, [fp, #-12]
   134f4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   134f8:	ldr	r3, [r3]
   134fc:	ldr	r2, [fp, #-12]
   13500:	cmp	r2, r3
   13504:	bcs	13514 <_obstack_newchunk@@Base+0xb8>
   13508:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1350c:	ldr	r3, [r3]
   13510:	str	r3, [fp, #-12]
   13514:	ldr	r2, [fp, #-20]	; 0xffffffec
   13518:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1351c:	cmp	r2, r3
   13520:	bhi	13544 <_obstack_newchunk@@Base+0xe8>
   13524:	ldr	r2, [fp, #-24]	; 0xffffffe8
   13528:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1352c:	cmp	r2, r3
   13530:	bhi	13544 <_obstack_newchunk@@Base+0xe8>
   13534:	ldr	r1, [fp, #-12]
   13538:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1353c:	bl	13120 <close@plt+0x216c>
   13540:	str	r0, [fp, #-8]
   13544:	ldr	r3, [fp, #-8]
   13548:	cmp	r3, #0
   1354c:	bne	13560 <_obstack_newchunk@@Base+0x104>
   13550:	movw	r3, #45296	; 0xb0f0
   13554:	movt	r3, #2
   13558:	ldr	r3, [r3]
   1355c:	blx	r3
   13560:	ldr	r3, [fp, #-40]	; 0xffffffd8
   13564:	ldr	r2, [fp, #-8]
   13568:	str	r2, [r3, #4]
   1356c:	ldr	r3, [fp, #-8]
   13570:	ldr	r2, [fp, #-16]
   13574:	str	r2, [r3, #4]
   13578:	ldr	r2, [fp, #-8]
   1357c:	ldr	r3, [fp, #-12]
   13580:	add	r2, r2, r3
   13584:	ldr	r3, [fp, #-40]	; 0xffffffd8
   13588:	str	r2, [r3, #16]
   1358c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   13590:	ldr	r2, [r3, #16]
   13594:	ldr	r3, [fp, #-8]
   13598:	str	r2, [r3]
   1359c:	ldr	r3, [fp, #-8]
   135a0:	add	r3, r3, #8
   135a4:	mov	r2, r3
   135a8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   135ac:	ldr	r3, [r3, #24]
   135b0:	add	r2, r2, r3
   135b4:	ldr	r3, [fp, #-40]	; 0xffffffd8
   135b8:	ldr	r3, [r3, #24]
   135bc:	mvn	r3, r3
   135c0:	and	r3, r3, r2
   135c4:	str	r3, [fp, #-32]	; 0xffffffe0
   135c8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   135cc:	ldr	r3, [r3, #8]
   135d0:	ldr	r2, [fp, #-20]	; 0xffffffec
   135d4:	mov	r1, r3
   135d8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   135dc:	bl	10da4 <memcpy@plt>
   135e0:	ldr	r3, [fp, #-40]	; 0xffffffd8
   135e4:	ldrb	r3, [r3, #40]	; 0x28
   135e8:	and	r3, r3, #2
   135ec:	uxtb	r3, r3
   135f0:	cmp	r3, #0
   135f4:	bne	1364c <_obstack_newchunk@@Base+0x1f0>
   135f8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   135fc:	ldr	r3, [r3, #8]
   13600:	ldr	r2, [fp, #-16]
   13604:	add	r2, r2, #8
   13608:	mov	r1, r2
   1360c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   13610:	ldr	r2, [r2, #24]
   13614:	add	r1, r1, r2
   13618:	ldr	r2, [fp, #-40]	; 0xffffffd8
   1361c:	ldr	r2, [r2, #24]
   13620:	mvn	r2, r2
   13624:	and	r2, r2, r1
   13628:	cmp	r3, r2
   1362c:	bne	1364c <_obstack_newchunk@@Base+0x1f0>
   13630:	ldr	r3, [fp, #-16]
   13634:	ldr	r2, [r3, #4]
   13638:	ldr	r3, [fp, #-8]
   1363c:	str	r2, [r3, #4]
   13640:	ldr	r1, [fp, #-16]
   13644:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13648:	bl	1319c <close@plt+0x21e8>
   1364c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   13650:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13654:	str	r2, [r3, #8]
   13658:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1365c:	ldr	r2, [r3, #8]
   13660:	ldr	r3, [fp, #-20]	; 0xffffffec
   13664:	add	r2, r2, r3
   13668:	ldr	r3, [fp, #-40]	; 0xffffffd8
   1366c:	str	r2, [r3, #12]
   13670:	ldr	r2, [fp, #-40]	; 0xffffffd8
   13674:	ldrb	r3, [r2, #40]	; 0x28
   13678:	bfc	r3, #1, #1
   1367c:	strb	r3, [r2, #40]	; 0x28
   13680:	nop	{0}
   13684:	sub	sp, fp, #4
   13688:	ldr	fp, [sp]
   1368c:	add	sp, sp, #4
   13690:	pop	{pc}		; (ldr pc, [sp], #4)

00013694 <_obstack_allocated_p@@Base>:
   13694:	push	{fp}		; (str fp, [sp, #-4]!)
   13698:	add	fp, sp, #0
   1369c:	sub	sp, sp, #20
   136a0:	str	r0, [fp, #-16]
   136a4:	str	r1, [fp, #-20]	; 0xffffffec
   136a8:	ldr	r3, [fp, #-16]
   136ac:	ldr	r3, [r3, #4]
   136b0:	str	r3, [fp, #-8]
   136b4:	b	136cc <_obstack_allocated_p@@Base+0x38>
   136b8:	ldr	r3, [fp, #-8]
   136bc:	ldr	r3, [r3, #4]
   136c0:	str	r3, [fp, #-12]
   136c4:	ldr	r3, [fp, #-12]
   136c8:	str	r3, [fp, #-8]
   136cc:	ldr	r3, [fp, #-8]
   136d0:	cmp	r3, #0
   136d4:	beq	136fc <_obstack_allocated_p@@Base+0x68>
   136d8:	ldr	r2, [fp, #-8]
   136dc:	ldr	r3, [fp, #-20]	; 0xffffffec
   136e0:	cmp	r2, r3
   136e4:	bcs	136b8 <_obstack_allocated_p@@Base+0x24>
   136e8:	ldr	r3, [fp, #-8]
   136ec:	ldr	r3, [r3]
   136f0:	ldr	r2, [fp, #-20]	; 0xffffffec
   136f4:	cmp	r2, r3
   136f8:	bhi	136b8 <_obstack_allocated_p@@Base+0x24>
   136fc:	ldr	r3, [fp, #-8]
   13700:	cmp	r3, #0
   13704:	movne	r3, #1
   13708:	moveq	r3, #0
   1370c:	uxtb	r3, r3
   13710:	mov	r0, r3
   13714:	add	sp, fp, #0
   13718:	pop	{fp}		; (ldr fp, [sp], #4)
   1371c:	bx	lr

00013720 <_obstack_free@@Base>:
   13720:	str	fp, [sp, #-8]!
   13724:	str	lr, [sp, #4]
   13728:	add	fp, sp, #4
   1372c:	sub	sp, sp, #16
   13730:	str	r0, [fp, #-16]
   13734:	str	r1, [fp, #-20]	; 0xffffffec
   13738:	ldr	r3, [fp, #-16]
   1373c:	ldr	r3, [r3, #4]
   13740:	str	r3, [fp, #-8]
   13744:	b	13778 <_obstack_free@@Base+0x58>
   13748:	ldr	r3, [fp, #-8]
   1374c:	ldr	r3, [r3, #4]
   13750:	str	r3, [fp, #-12]
   13754:	ldr	r1, [fp, #-8]
   13758:	ldr	r0, [fp, #-16]
   1375c:	bl	1319c <close@plt+0x21e8>
   13760:	ldr	r3, [fp, #-12]
   13764:	str	r3, [fp, #-8]
   13768:	ldr	r2, [fp, #-16]
   1376c:	ldrb	r3, [r2, #40]	; 0x28
   13770:	orr	r3, r3, #2
   13774:	strb	r3, [r2, #40]	; 0x28
   13778:	ldr	r3, [fp, #-8]
   1377c:	cmp	r3, #0
   13780:	beq	137a8 <_obstack_free@@Base+0x88>
   13784:	ldr	r2, [fp, #-8]
   13788:	ldr	r3, [fp, #-20]	; 0xffffffec
   1378c:	cmp	r2, r3
   13790:	bcs	13748 <_obstack_free@@Base+0x28>
   13794:	ldr	r3, [fp, #-8]
   13798:	ldr	r3, [r3]
   1379c:	ldr	r2, [fp, #-20]	; 0xffffffec
   137a0:	cmp	r2, r3
   137a4:	bhi	13748 <_obstack_free@@Base+0x28>
   137a8:	ldr	r3, [fp, #-8]
   137ac:	cmp	r3, #0
   137b0:	beq	137f0 <_obstack_free@@Base+0xd0>
   137b4:	ldr	r3, [fp, #-16]
   137b8:	ldr	r2, [fp, #-20]	; 0xffffffec
   137bc:	str	r2, [r3, #12]
   137c0:	ldr	r3, [fp, #-16]
   137c4:	ldr	r2, [r3, #12]
   137c8:	ldr	r3, [fp, #-16]
   137cc:	str	r2, [r3, #8]
   137d0:	ldr	r3, [fp, #-8]
   137d4:	ldr	r2, [r3]
   137d8:	ldr	r3, [fp, #-16]
   137dc:	str	r2, [r3, #16]
   137e0:	ldr	r3, [fp, #-16]
   137e4:	ldr	r2, [fp, #-8]
   137e8:	str	r2, [r3, #4]
   137ec:	b	13800 <_obstack_free@@Base+0xe0>
   137f0:	ldr	r3, [fp, #-20]	; 0xffffffec
   137f4:	cmp	r3, #0
   137f8:	beq	13800 <_obstack_free@@Base+0xe0>
   137fc:	bl	10fa8 <abort@plt>
   13800:	nop	{0}
   13804:	sub	sp, fp, #4
   13808:	ldr	fp, [sp]
   1380c:	add	sp, sp, #4
   13810:	pop	{pc}		; (ldr pc, [sp], #4)

00013814 <_obstack_memory_used@@Base>:
   13814:	push	{fp}		; (str fp, [sp, #-4]!)
   13818:	add	fp, sp, #0
   1381c:	sub	sp, sp, #20
   13820:	str	r0, [fp, #-16]
   13824:	mov	r3, #0
   13828:	str	r3, [fp, #-12]
   1382c:	ldr	r3, [fp, #-16]
   13830:	ldr	r3, [r3, #4]
   13834:	str	r3, [fp, #-8]
   13838:	b	13868 <_obstack_memory_used@@Base+0x54>
   1383c:	ldr	r3, [fp, #-8]
   13840:	ldr	r2, [r3]
   13844:	ldr	r3, [fp, #-8]
   13848:	sub	r3, r2, r3
   1384c:	mov	r2, r3
   13850:	ldr	r3, [fp, #-12]
   13854:	add	r3, r3, r2
   13858:	str	r3, [fp, #-12]
   1385c:	ldr	r3, [fp, #-8]
   13860:	ldr	r3, [r3, #4]
   13864:	str	r3, [fp, #-8]
   13868:	ldr	r3, [fp, #-8]
   1386c:	cmp	r3, #0
   13870:	bne	1383c <_obstack_memory_used@@Base+0x28>
   13874:	ldr	r3, [fp, #-12]
   13878:	mov	r0, r3
   1387c:	add	sp, fp, #0
   13880:	pop	{fp}		; (ldr fp, [sp], #4)
   13884:	bx	lr
   13888:	strd	r4, [sp, #-16]!
   1388c:	str	fp, [sp, #8]
   13890:	str	lr, [sp, #12]
   13894:	add	fp, sp, #12
   13898:	movw	r3, #45384	; 0xb148
   1389c:	movt	r3, #2
   138a0:	ldr	r4, [r3]
   138a4:	movw	r0, #40092	; 0x9c9c
   138a8:	movt	r0, #1
   138ac:	bl	10ef4 <gettext@plt>
   138b0:	mov	r3, r0
   138b4:	mov	r2, r3
   138b8:	movw	r1, #40112	; 0x9cb0
   138bc:	movt	r1, #1
   138c0:	mov	r0, r4
   138c4:	bl	10f0c <fprintf@plt>
   138c8:	movw	r3, #45292	; 0xb0ec
   138cc:	movt	r3, #2
   138d0:	ldr	r3, [r3]
   138d4:	mov	r0, r3
   138d8:	bl	10ee8 <exit@plt>
   138dc:	str	fp, [sp, #-8]!
   138e0:	str	lr, [sp, #4]
   138e4:	add	fp, sp, #4
   138e8:	sub	sp, sp, #16
   138ec:	str	r0, [fp, #-16]
   138f0:	ldr	r3, [fp, #-16]
   138f4:	cmp	r3, #0
   138f8:	bne	13920 <_obstack_memory_used@@Base+0x10c>
   138fc:	movw	r3, #45384	; 0xb148
   13900:	movt	r3, #2
   13904:	ldr	r3, [r3]
   13908:	mov	r2, #55	; 0x37
   1390c:	mov	r1, #1
   13910:	movw	r0, #40116	; 0x9cb4
   13914:	movt	r0, #1
   13918:	bl	10e10 <fwrite@plt>
   1391c:	bl	10fa8 <abort@plt>
   13920:	mov	r1, #47	; 0x2f
   13924:	ldr	r0, [fp, #-16]
   13928:	bl	10f6c <strrchr@plt>
   1392c:	str	r0, [fp, #-8]
   13930:	ldr	r3, [fp, #-8]
   13934:	cmp	r3, #0
   13938:	beq	13948 <_obstack_memory_used@@Base+0x134>
   1393c:	ldr	r3, [fp, #-8]
   13940:	add	r3, r3, #1
   13944:	b	1394c <_obstack_memory_used@@Base+0x138>
   13948:	ldr	r3, [fp, #-16]
   1394c:	str	r3, [fp, #-12]
   13950:	ldr	r2, [fp, #-12]
   13954:	ldr	r3, [fp, #-16]
   13958:	sub	r3, r2, r3
   1395c:	cmp	r3, #6
   13960:	ble	139d0 <_obstack_memory_used@@Base+0x1bc>
   13964:	ldr	r3, [fp, #-12]
   13968:	sub	r3, r3, #7
   1396c:	mov	r2, #7
   13970:	movw	r1, #40172	; 0x9cec
   13974:	movt	r1, #1
   13978:	mov	r0, r3
   1397c:	bl	10f9c <strncmp@plt>
   13980:	mov	r3, r0
   13984:	cmp	r3, #0
   13988:	bne	139d0 <_obstack_memory_used@@Base+0x1bc>
   1398c:	ldr	r3, [fp, #-12]
   13990:	str	r3, [fp, #-16]
   13994:	mov	r2, #3
   13998:	movw	r1, #40180	; 0x9cf4
   1399c:	movt	r1, #1
   139a0:	ldr	r0, [fp, #-12]
   139a4:	bl	10f9c <strncmp@plt>
   139a8:	mov	r3, r0
   139ac:	cmp	r3, #0
   139b0:	bne	139d0 <_obstack_memory_used@@Base+0x1bc>
   139b4:	ldr	r3, [fp, #-12]
   139b8:	add	r3, r3, #3
   139bc:	str	r3, [fp, #-16]
   139c0:	movw	r3, #45368	; 0xb138
   139c4:	movt	r3, #2
   139c8:	ldr	r2, [fp, #-16]
   139cc:	str	r2, [r3]
   139d0:	movw	r3, #45456	; 0xb190
   139d4:	movt	r3, #2
   139d8:	ldr	r2, [fp, #-16]
   139dc:	str	r2, [r3]
   139e0:	movw	r3, #45372	; 0xb13c
   139e4:	movt	r3, #2
   139e8:	ldr	r2, [fp, #-16]
   139ec:	str	r2, [r3]
   139f0:	nop	{0}
   139f4:	sub	sp, fp, #4
   139f8:	ldr	fp, [sp]
   139fc:	add	sp, sp, #4
   13a00:	pop	{pc}		; (ldr pc, [sp], #4)
   13a04:	str	fp, [sp, #-8]!
   13a08:	str	lr, [sp, #4]
   13a0c:	add	fp, sp, #4
   13a10:	sub	sp, sp, #16
   13a14:	str	r0, [fp, #-16]
   13a18:	bl	10f18 <__errno_location@plt>
   13a1c:	mov	r3, r0
   13a20:	ldr	r3, [r3]
   13a24:	str	r3, [fp, #-8]
   13a28:	ldr	r3, [fp, #-16]
   13a2c:	cmp	r3, #0
   13a30:	beq	13a3c <_obstack_memory_used@@Base+0x228>
   13a34:	ldr	r3, [fp, #-16]
   13a38:	b	13a44 <_obstack_memory_used@@Base+0x230>
   13a3c:	movw	r3, #45460	; 0xb194
   13a40:	movt	r3, #2
   13a44:	mov	r1, #48	; 0x30
   13a48:	mov	r0, r3
   13a4c:	bl	171e4 <_obstack_memory_used@@Base+0x39d0>
   13a50:	mov	r3, r0
   13a54:	str	r3, [fp, #-12]
   13a58:	bl	10f18 <__errno_location@plt>
   13a5c:	mov	r2, r0
   13a60:	ldr	r3, [fp, #-8]
   13a64:	str	r3, [r2]
   13a68:	ldr	r3, [fp, #-12]
   13a6c:	mov	r0, r3
   13a70:	sub	sp, fp, #4
   13a74:	ldr	fp, [sp]
   13a78:	add	sp, sp, #4
   13a7c:	pop	{pc}		; (ldr pc, [sp], #4)
   13a80:	push	{fp}		; (str fp, [sp, #-4]!)
   13a84:	add	fp, sp, #0
   13a88:	sub	sp, sp, #12
   13a8c:	str	r0, [fp, #-8]
   13a90:	ldr	r3, [fp, #-8]
   13a94:	cmp	r3, #0
   13a98:	beq	13aa4 <_obstack_memory_used@@Base+0x290>
   13a9c:	ldr	r3, [fp, #-8]
   13aa0:	b	13aac <_obstack_memory_used@@Base+0x298>
   13aa4:	movw	r3, #45460	; 0xb194
   13aa8:	movt	r3, #2
   13aac:	ldr	r3, [r3]
   13ab0:	mov	r0, r3
   13ab4:	add	sp, fp, #0
   13ab8:	pop	{fp}		; (ldr fp, [sp], #4)
   13abc:	bx	lr
   13ac0:	push	{fp}		; (str fp, [sp, #-4]!)
   13ac4:	add	fp, sp, #0
   13ac8:	sub	sp, sp, #12
   13acc:	str	r0, [fp, #-8]
   13ad0:	str	r1, [fp, #-12]
   13ad4:	ldr	r3, [fp, #-8]
   13ad8:	cmp	r3, #0
   13adc:	beq	13ae8 <_obstack_memory_used@@Base+0x2d4>
   13ae0:	ldr	r3, [fp, #-8]
   13ae4:	b	13af0 <_obstack_memory_used@@Base+0x2dc>
   13ae8:	movw	r3, #45460	; 0xb194
   13aec:	movt	r3, #2
   13af0:	ldr	r2, [fp, #-12]
   13af4:	str	r2, [r3]
   13af8:	nop	{0}
   13afc:	add	sp, fp, #0
   13b00:	pop	{fp}		; (ldr fp, [sp], #4)
   13b04:	bx	lr
   13b08:	push	{fp}		; (str fp, [sp, #-4]!)
   13b0c:	add	fp, sp, #0
   13b10:	sub	sp, sp, #36	; 0x24
   13b14:	str	r0, [fp, #-24]	; 0xffffffe8
   13b18:	mov	r3, r1
   13b1c:	str	r2, [fp, #-32]	; 0xffffffe0
   13b20:	strb	r3, [fp, #-25]	; 0xffffffe7
   13b24:	ldrb	r3, [fp, #-25]	; 0xffffffe7
   13b28:	strb	r3, [fp, #-5]
   13b2c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13b30:	cmp	r3, #0
   13b34:	beq	13b40 <_obstack_memory_used@@Base+0x32c>
   13b38:	ldr	r3, [fp, #-24]	; 0xffffffe8
   13b3c:	b	13b48 <_obstack_memory_used@@Base+0x334>
   13b40:	movw	r3, #45460	; 0xb194
   13b44:	movt	r3, #2
   13b48:	add	r2, r3, #8
   13b4c:	ldrb	r3, [fp, #-5]
   13b50:	lsr	r3, r3, #5
   13b54:	uxtb	r3, r3
   13b58:	lsl	r3, r3, #2
   13b5c:	add	r3, r2, r3
   13b60:	str	r3, [fp, #-12]
   13b64:	ldrb	r3, [fp, #-5]
   13b68:	and	r3, r3, #31
   13b6c:	str	r3, [fp, #-16]
   13b70:	ldr	r3, [fp, #-12]
   13b74:	ldr	r2, [r3]
   13b78:	ldr	r3, [fp, #-16]
   13b7c:	lsr	r3, r2, r3
   13b80:	and	r3, r3, #1
   13b84:	str	r3, [fp, #-20]	; 0xffffffec
   13b88:	ldr	r3, [fp, #-12]
   13b8c:	ldr	r3, [r3]
   13b90:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13b94:	and	r1, r2, #1
   13b98:	ldr	r2, [fp, #-20]	; 0xffffffec
   13b9c:	eor	r1, r1, r2
   13ba0:	ldr	r2, [fp, #-16]
   13ba4:	lsl	r2, r1, r2
   13ba8:	eor	r2, r2, r3
   13bac:	ldr	r3, [fp, #-12]
   13bb0:	str	r2, [r3]
   13bb4:	ldr	r3, [fp, #-20]	; 0xffffffec
   13bb8:	mov	r0, r3
   13bbc:	add	sp, fp, #0
   13bc0:	pop	{fp}		; (ldr fp, [sp], #4)
   13bc4:	bx	lr
   13bc8:	push	{fp}		; (str fp, [sp, #-4]!)
   13bcc:	add	fp, sp, #0
   13bd0:	sub	sp, sp, #20
   13bd4:	str	r0, [fp, #-16]
   13bd8:	str	r1, [fp, #-20]	; 0xffffffec
   13bdc:	ldr	r3, [fp, #-16]
   13be0:	cmp	r3, #0
   13be4:	bne	13bf4 <_obstack_memory_used@@Base+0x3e0>
   13be8:	movw	r3, #45460	; 0xb194
   13bec:	movt	r3, #2
   13bf0:	str	r3, [fp, #-16]
   13bf4:	ldr	r3, [fp, #-16]
   13bf8:	ldr	r3, [r3, #4]
   13bfc:	str	r3, [fp, #-8]
   13c00:	ldr	r3, [fp, #-16]
   13c04:	ldr	r2, [fp, #-20]	; 0xffffffec
   13c08:	str	r2, [r3, #4]
   13c0c:	ldr	r3, [fp, #-8]
   13c10:	mov	r0, r3
   13c14:	add	sp, fp, #0
   13c18:	pop	{fp}		; (ldr fp, [sp], #4)
   13c1c:	bx	lr
   13c20:	str	fp, [sp, #-8]!
   13c24:	str	lr, [sp, #4]
   13c28:	add	fp, sp, #4
   13c2c:	sub	sp, sp, #16
   13c30:	str	r0, [fp, #-8]
   13c34:	str	r1, [fp, #-12]
   13c38:	str	r2, [fp, #-16]
   13c3c:	ldr	r3, [fp, #-8]
   13c40:	cmp	r3, #0
   13c44:	bne	13c54 <_obstack_memory_used@@Base+0x440>
   13c48:	movw	r3, #45460	; 0xb194
   13c4c:	movt	r3, #2
   13c50:	str	r3, [fp, #-8]
   13c54:	ldr	r3, [fp, #-8]
   13c58:	mov	r2, #10
   13c5c:	str	r2, [r3]
   13c60:	ldr	r3, [fp, #-12]
   13c64:	cmp	r3, #0
   13c68:	beq	13c78 <_obstack_memory_used@@Base+0x464>
   13c6c:	ldr	r3, [fp, #-16]
   13c70:	cmp	r3, #0
   13c74:	bne	13c7c <_obstack_memory_used@@Base+0x468>
   13c78:	bl	10fa8 <abort@plt>
   13c7c:	ldr	r3, [fp, #-8]
   13c80:	ldr	r2, [fp, #-12]
   13c84:	str	r2, [r3, #40]	; 0x28
   13c88:	ldr	r3, [fp, #-8]
   13c8c:	ldr	r2, [fp, #-16]
   13c90:	str	r2, [r3, #44]	; 0x2c
   13c94:	nop	{0}
   13c98:	sub	sp, fp, #4
   13c9c:	ldr	fp, [sp]
   13ca0:	add	sp, sp, #4
   13ca4:	pop	{pc}		; (ldr pc, [sp], #4)
   13ca8:	str	fp, [sp, #-8]!
   13cac:	str	lr, [sp, #4]
   13cb0:	add	fp, sp, #4
   13cb4:	sub	sp, sp, #56	; 0x38
   13cb8:	str	r0, [fp, #-56]	; 0xffffffc8
   13cbc:	str	r1, [fp, #-60]	; 0xffffffc4
   13cc0:	sub	r1, fp, #52	; 0x34
   13cc4:	mov	r2, #0
   13cc8:	mov	r3, #0
   13ccc:	strd	r2, [r1]
   13cd0:	strd	r2, [r1, #8]
   13cd4:	strd	r2, [r1, #16]
   13cd8:	strd	r2, [r1, #24]
   13cdc:	strd	r2, [r1, #32]
   13ce0:	strd	r2, [r1, #40]	; 0x28
   13ce4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   13ce8:	cmp	r3, #10
   13cec:	bne	13cf4 <_obstack_memory_used@@Base+0x4e0>
   13cf0:	bl	10fa8 <abort@plt>
   13cf4:	ldr	r3, [fp, #-60]	; 0xffffffc4
   13cf8:	str	r3, [fp, #-52]	; 0xffffffcc
   13cfc:	ldr	r3, [fp, #-56]	; 0xffffffc8
   13d00:	mov	r2, r3
   13d04:	sub	r3, fp, #52	; 0x34
   13d08:	ldrd	r0, [r3]
   13d0c:	strd	r0, [r2]
   13d10:	ldrd	r0, [r3, #8]
   13d14:	strd	r0, [r2, #8]
   13d18:	ldrd	r0, [r3, #16]
   13d1c:	strd	r0, [r2, #16]
   13d20:	ldrd	r0, [r3, #24]
   13d24:	strd	r0, [r2, #24]
   13d28:	ldrd	r0, [r3, #32]
   13d2c:	strd	r0, [r2, #32]
   13d30:	ldrd	r0, [r3, #40]	; 0x28
   13d34:	strd	r0, [r2, #40]	; 0x28
   13d38:	ldr	r0, [fp, #-56]	; 0xffffffc8
   13d3c:	sub	sp, fp, #4
   13d40:	ldr	fp, [sp]
   13d44:	add	sp, sp, #4
   13d48:	pop	{pc}		; (ldr pc, [sp], #4)
   13d4c:	str	fp, [sp, #-8]!
   13d50:	str	lr, [sp, #4]
   13d54:	add	fp, sp, #4
   13d58:	sub	sp, sp, #16
   13d5c:	str	r0, [fp, #-16]
   13d60:	str	r1, [fp, #-20]	; 0xffffffec
   13d64:	ldr	r0, [fp, #-16]
   13d68:	bl	10ef4 <gettext@plt>
   13d6c:	str	r0, [fp, #-8]
   13d70:	ldr	r2, [fp, #-8]
   13d74:	ldr	r3, [fp, #-16]
   13d78:	cmp	r2, r3
   13d7c:	beq	13d88 <_obstack_memory_used@@Base+0x574>
   13d80:	ldr	r3, [fp, #-8]
   13d84:	b	13e38 <_obstack_memory_used@@Base+0x624>
   13d88:	bl	17d1c <_obstack_memory_used@@Base+0x4508>
   13d8c:	str	r0, [fp, #-12]
   13d90:	movw	r1, #40372	; 0x9db4
   13d94:	movt	r1, #1
   13d98:	ldr	r0, [fp, #-12]
   13d9c:	bl	12900 <close@plt+0x194c>
   13da0:	mov	r3, r0
   13da4:	cmp	r3, #0
   13da8:	bne	13dd4 <_obstack_memory_used@@Base+0x5c0>
   13dac:	ldr	r3, [fp, #-16]
   13db0:	ldrb	r3, [r3]
   13db4:	cmp	r3, #96	; 0x60
   13db8:	bne	13dc8 <_obstack_memory_used@@Base+0x5b4>
   13dbc:	movw	r3, #40380	; 0x9dbc
   13dc0:	movt	r3, #1
   13dc4:	b	13e38 <_obstack_memory_used@@Base+0x624>
   13dc8:	movw	r3, #40384	; 0x9dc0
   13dcc:	movt	r3, #1
   13dd0:	b	13e38 <_obstack_memory_used@@Base+0x624>
   13dd4:	movw	r1, #40388	; 0x9dc4
   13dd8:	movt	r1, #1
   13ddc:	ldr	r0, [fp, #-12]
   13de0:	bl	12900 <close@plt+0x194c>
   13de4:	mov	r3, r0
   13de8:	cmp	r3, #0
   13dec:	bne	13e18 <_obstack_memory_used@@Base+0x604>
   13df0:	ldr	r3, [fp, #-16]
   13df4:	ldrb	r3, [r3]
   13df8:	cmp	r3, #96	; 0x60
   13dfc:	bne	13e0c <_obstack_memory_used@@Base+0x5f8>
   13e00:	movw	r3, #40396	; 0x9dcc
   13e04:	movt	r3, #1
   13e08:	b	13e38 <_obstack_memory_used@@Base+0x624>
   13e0c:	movw	r3, #40400	; 0x9dd0
   13e10:	movt	r3, #1
   13e14:	b	13e38 <_obstack_memory_used@@Base+0x624>
   13e18:	ldr	r3, [fp, #-20]	; 0xffffffec
   13e1c:	cmp	r3, #9
   13e20:	bne	13e30 <_obstack_memory_used@@Base+0x61c>
   13e24:	movw	r3, #40404	; 0x9dd4
   13e28:	movt	r3, #1
   13e2c:	b	13e38 <_obstack_memory_used@@Base+0x624>
   13e30:	movw	r3, #40408	; 0x9dd8
   13e34:	movt	r3, #1
   13e38:	mov	r0, r3
   13e3c:	sub	sp, fp, #4
   13e40:	ldr	fp, [sp]
   13e44:	add	sp, sp, #4
   13e48:	pop	{pc}		; (ldr pc, [sp], #4)
   13e4c:	str	r4, [sp, #-12]!
   13e50:	str	fp, [sp, #4]
   13e54:	str	lr, [sp, #8]
   13e58:	add	fp, sp, #8
   13e5c:	sub	sp, sp, #116	; 0x74
   13e60:	str	r0, [fp, #-88]	; 0xffffffa8
   13e64:	str	r1, [fp, #-92]	; 0xffffffa4
   13e68:	str	r2, [fp, #-96]	; 0xffffffa0
   13e6c:	str	r3, [fp, #-100]	; 0xffffff9c
   13e70:	mov	r3, #0
   13e74:	str	r3, [fp, #-20]	; 0xffffffec
   13e78:	mov	r3, #0
   13e7c:	str	r3, [fp, #-24]	; 0xffffffe8
   13e80:	mov	r3, #0
   13e84:	str	r3, [fp, #-28]	; 0xffffffe4
   13e88:	mov	r3, #0
   13e8c:	str	r3, [fp, #-32]	; 0xffffffe0
   13e90:	mov	r3, #0
   13e94:	strb	r3, [fp, #-33]	; 0xffffffdf
   13e98:	bl	10e28 <__ctype_get_mb_cur_max@plt>
   13e9c:	mov	r3, r0
   13ea0:	cmp	r3, #1
   13ea4:	moveq	r3, #1
   13ea8:	movne	r3, #0
   13eac:	strb	r3, [fp, #-57]	; 0xffffffc7
   13eb0:	ldr	r3, [fp, #8]
   13eb4:	and	r3, r3, #2
   13eb8:	cmp	r3, #0
   13ebc:	movne	r3, #1
   13ec0:	moveq	r3, #0
   13ec4:	strb	r3, [fp, #-34]	; 0xffffffde
   13ec8:	mov	r3, #0
   13ecc:	strb	r3, [fp, #-35]	; 0xffffffdd
   13ed0:	mov	r3, #0
   13ed4:	strb	r3, [fp, #-36]	; 0xffffffdc
   13ed8:	mov	r3, #1
   13edc:	strb	r3, [fp, #-37]	; 0xffffffdb
   13ee0:	ldr	r3, [fp, #4]
   13ee4:	cmp	r3, #10
   13ee8:	ldrls	pc, [pc, r3, lsl #2]
   13eec:	b	14104 <_obstack_memory_used@@Base+0x8f0>
   13ef0:	strdeq	r4, [r1], -r8
   13ef4:	andeq	r4, r1, r0, ror r0
   13ef8:	muleq	r1, r4, r0
   13efc:	andeq	r4, r1, r8, rrx
   13f00:	andeq	r4, r1, r8, ror r0
   13f04:	andeq	r3, r1, ip, lsr #30
   13f08:	andeq	r3, r1, ip, lsl pc
   13f0c:	muleq	r1, r0, pc	; <UNPREDICTABLE>
   13f10:	andeq	r3, r1, r4, lsr #31
   13f14:	andeq	r3, r1, r4, lsr #31
   13f18:	andeq	r3, r1, r4, lsr #31
   13f1c:	mov	r3, #5
   13f20:	str	r3, [fp, #4]
   13f24:	mov	r3, #1
   13f28:	strb	r3, [fp, #-34]	; 0xffffffde
   13f2c:	ldrb	r3, [fp, #-34]	; 0xffffffde
   13f30:	eor	r3, r3, #1
   13f34:	uxtb	r3, r3
   13f38:	cmp	r3, #0
   13f3c:	beq	13f70 <_obstack_memory_used@@Base+0x75c>
   13f40:	ldr	r2, [fp, #-20]	; 0xffffffec
   13f44:	ldr	r3, [fp, #-92]	; 0xffffffa4
   13f48:	cmp	r2, r3
   13f4c:	bcs	13f64 <_obstack_memory_used@@Base+0x750>
   13f50:	ldr	r2, [fp, #-88]	; 0xffffffa8
   13f54:	ldr	r3, [fp, #-20]	; 0xffffffec
   13f58:	add	r3, r2, r3
   13f5c:	mov	r2, #34	; 0x22
   13f60:	strb	r2, [r3]
   13f64:	ldr	r3, [fp, #-20]	; 0xffffffec
   13f68:	add	r3, r3, #1
   13f6c:	str	r3, [fp, #-20]	; 0xffffffec
   13f70:	mov	r3, #1
   13f74:	strb	r3, [fp, #-33]	; 0xffffffdf
   13f78:	movw	r3, #40404	; 0x9dd4
   13f7c:	movt	r3, #1
   13f80:	str	r3, [fp, #-28]	; 0xffffffe4
   13f84:	mov	r3, #1
   13f88:	str	r3, [fp, #-32]	; 0xffffffe0
   13f8c:	b	14108 <_obstack_memory_used@@Base+0x8f4>
   13f90:	mov	r3, #1
   13f94:	strb	r3, [fp, #-33]	; 0xffffffdf
   13f98:	mov	r3, #0
   13f9c:	strb	r3, [fp, #-34]	; 0xffffffde
   13fa0:	b	14108 <_obstack_memory_used@@Base+0x8f4>
   13fa4:	ldr	r3, [fp, #4]
   13fa8:	cmp	r3, #10
   13fac:	beq	13fd8 <_obstack_memory_used@@Base+0x7c4>
   13fb0:	ldr	r1, [fp, #4]
   13fb4:	movw	r0, #40412	; 0x9ddc
   13fb8:	movt	r0, #1
   13fbc:	bl	13d4c <_obstack_memory_used@@Base+0x538>
   13fc0:	str	r0, [fp, #16]
   13fc4:	ldr	r1, [fp, #4]
   13fc8:	movw	r0, #40408	; 0x9dd8
   13fcc:	movt	r0, #1
   13fd0:	bl	13d4c <_obstack_memory_used@@Base+0x538>
   13fd4:	str	r0, [fp, #20]
   13fd8:	ldrb	r3, [fp, #-34]	; 0xffffffde
   13fdc:	eor	r3, r3, #1
   13fe0:	uxtb	r3, r3
   13fe4:	cmp	r3, #0
   13fe8:	beq	14048 <_obstack_memory_used@@Base+0x834>
   13fec:	ldr	r3, [fp, #16]
   13ff0:	str	r3, [fp, #-28]	; 0xffffffe4
   13ff4:	b	14038 <_obstack_memory_used@@Base+0x824>
   13ff8:	ldr	r2, [fp, #-20]	; 0xffffffec
   13ffc:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14000:	cmp	r2, r3
   14004:	bcs	14020 <_obstack_memory_used@@Base+0x80c>
   14008:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1400c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14010:	add	r3, r2, r3
   14014:	ldr	r2, [fp, #-28]	; 0xffffffe4
   14018:	ldrb	r2, [r2]
   1401c:	strb	r2, [r3]
   14020:	ldr	r3, [fp, #-20]	; 0xffffffec
   14024:	add	r3, r3, #1
   14028:	str	r3, [fp, #-20]	; 0xffffffec
   1402c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   14030:	add	r3, r3, #1
   14034:	str	r3, [fp, #-28]	; 0xffffffe4
   14038:	ldr	r3, [fp, #-28]	; 0xffffffe4
   1403c:	ldrb	r3, [r3]
   14040:	cmp	r3, #0
   14044:	bne	13ff8 <_obstack_memory_used@@Base+0x7e4>
   14048:	mov	r3, #1
   1404c:	strb	r3, [fp, #-33]	; 0xffffffdf
   14050:	ldr	r3, [fp, #20]
   14054:	str	r3, [fp, #-28]	; 0xffffffe4
   14058:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1405c:	bl	10f00 <strlen@plt>
   14060:	str	r0, [fp, #-32]	; 0xffffffe0
   14064:	b	14108 <_obstack_memory_used@@Base+0x8f4>
   14068:	mov	r3, #1
   1406c:	strb	r3, [fp, #-33]	; 0xffffffdf
   14070:	mov	r3, #1
   14074:	strb	r3, [fp, #-34]	; 0xffffffde
   14078:	ldrb	r3, [fp, #-34]	; 0xffffffde
   1407c:	eor	r3, r3, #1
   14080:	uxtb	r3, r3
   14084:	cmp	r3, #0
   14088:	beq	14094 <_obstack_memory_used@@Base+0x880>
   1408c:	mov	r3, #1
   14090:	strb	r3, [fp, #-33]	; 0xffffffdf
   14094:	mov	r3, #2
   14098:	str	r3, [fp, #4]
   1409c:	ldrb	r3, [fp, #-34]	; 0xffffffde
   140a0:	eor	r3, r3, #1
   140a4:	uxtb	r3, r3
   140a8:	cmp	r3, #0
   140ac:	beq	140e0 <_obstack_memory_used@@Base+0x8cc>
   140b0:	ldr	r2, [fp, #-20]	; 0xffffffec
   140b4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   140b8:	cmp	r2, r3
   140bc:	bcs	140d4 <_obstack_memory_used@@Base+0x8c0>
   140c0:	ldr	r2, [fp, #-88]	; 0xffffffa8
   140c4:	ldr	r3, [fp, #-20]	; 0xffffffec
   140c8:	add	r3, r2, r3
   140cc:	mov	r2, #39	; 0x27
   140d0:	strb	r2, [r3]
   140d4:	ldr	r3, [fp, #-20]	; 0xffffffec
   140d8:	add	r3, r3, #1
   140dc:	str	r3, [fp, #-20]	; 0xffffffec
   140e0:	movw	r3, #40408	; 0x9dd8
   140e4:	movt	r3, #1
   140e8:	str	r3, [fp, #-28]	; 0xffffffe4
   140ec:	mov	r3, #1
   140f0:	str	r3, [fp, #-32]	; 0xffffffe0
   140f4:	b	14108 <_obstack_memory_used@@Base+0x8f4>
   140f8:	mov	r3, #0
   140fc:	strb	r3, [fp, #-34]	; 0xffffffde
   14100:	b	14108 <_obstack_memory_used@@Base+0x8f4>
   14104:	bl	10fa8 <abort@plt>
   14108:	mov	r3, #0
   1410c:	str	r3, [fp, #-16]
   14110:	b	152ac <_obstack_memory_used@@Base+0x1a98>
   14114:	mov	r3, #0
   14118:	strb	r3, [fp, #-40]	; 0xffffffd8
   1411c:	mov	r3, #0
   14120:	strb	r3, [fp, #-41]	; 0xffffffd7
   14124:	mov	r3, #0
   14128:	strb	r3, [fp, #-42]	; 0xffffffd6
   1412c:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   14130:	cmp	r3, #0
   14134:	beq	141d0 <_obstack_memory_used@@Base+0x9bc>
   14138:	ldr	r3, [fp, #4]
   1413c:	cmp	r3, #2
   14140:	beq	141d0 <_obstack_memory_used@@Base+0x9bc>
   14144:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14148:	cmp	r3, #0
   1414c:	beq	141d0 <_obstack_memory_used@@Base+0x9bc>
   14150:	ldr	r2, [fp, #-16]
   14154:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14158:	add	r4, r2, r3
   1415c:	ldr	r3, [fp, #-100]	; 0xffffff9c
   14160:	cmn	r3, #1
   14164:	bne	14188 <_obstack_memory_used@@Base+0x974>
   14168:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1416c:	cmp	r3, #1
   14170:	bls	14188 <_obstack_memory_used@@Base+0x974>
   14174:	ldr	r0, [fp, #-96]	; 0xffffffa0
   14178:	bl	10f00 <strlen@plt>
   1417c:	str	r0, [fp, #-100]	; 0xffffff9c
   14180:	ldr	r3, [fp, #-100]	; 0xffffff9c
   14184:	b	1418c <_obstack_memory_used@@Base+0x978>
   14188:	ldr	r3, [fp, #-100]	; 0xffffff9c
   1418c:	cmp	r3, r4
   14190:	bcc	141d0 <_obstack_memory_used@@Base+0x9bc>
   14194:	ldr	r2, [fp, #-96]	; 0xffffffa0
   14198:	ldr	r3, [fp, #-16]
   1419c:	add	r3, r2, r3
   141a0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   141a4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   141a8:	mov	r0, r3
   141ac:	bl	10dc8 <memcmp@plt>
   141b0:	mov	r3, r0
   141b4:	cmp	r3, #0
   141b8:	bne	141d0 <_obstack_memory_used@@Base+0x9bc>
   141bc:	ldrb	r3, [fp, #-34]	; 0xffffffde
   141c0:	cmp	r3, #0
   141c4:	bne	15468 <_obstack_memory_used@@Base+0x1c54>
   141c8:	mov	r3, #1
   141cc:	strb	r3, [fp, #-40]	; 0xffffffd8
   141d0:	ldr	r2, [fp, #-96]	; 0xffffffa0
   141d4:	ldr	r3, [fp, #-16]
   141d8:	add	r3, r2, r3
   141dc:	ldrb	r3, [r3]
   141e0:	strb	r3, [fp, #-38]	; 0xffffffda
   141e4:	ldrb	r3, [fp, #-38]	; 0xffffffda
   141e8:	cmp	r3, #126	; 0x7e
   141ec:	ldrls	pc, [pc, r3, lsl #2]
   141f0:	b	14a28 <_obstack_memory_used@@Base+0x1214>
   141f4:	strdeq	r4, [r1], -r0
   141f8:	andeq	r4, r1, r8, lsr #20
   141fc:	andeq	r4, r1, r8, lsr #20
   14200:	andeq	r4, r1, r8, lsr #20
   14204:	andeq	r4, r1, r8, lsr #20
   14208:	andeq	r4, r1, r8, lsr #20
   1420c:	andeq	r4, r1, r8, lsr #20
   14210:	andeq	r4, r1, r4, ror #15
   14214:	strdeq	r4, [r1], -r0
   14218:	andeq	r4, r1, r0, lsr #16
   1421c:	andeq	r4, r1, r8, lsl #16
   14220:	andeq	r4, r1, ip, lsr #16
   14224:	strdeq	r4, [r1], -ip
   14228:	andeq	r4, r1, r4, lsl r8
   1422c:	andeq	r4, r1, r8, lsr #20
   14230:	andeq	r4, r1, r8, lsr #20
   14234:	andeq	r4, r1, r8, lsr #20
   14238:	andeq	r4, r1, r8, lsr #20
   1423c:	andeq	r4, r1, r8, lsr #20
   14240:	andeq	r4, r1, r8, lsr #20
   14244:	andeq	r4, r1, r8, lsr #20
   14248:	andeq	r4, r1, r8, lsr #20
   1424c:	andeq	r4, r1, r8, lsr #20
   14250:	andeq	r4, r1, r8, lsr #20
   14254:	andeq	r4, r1, r8, lsr #20
   14258:	andeq	r4, r1, r8, lsr #20
   1425c:	andeq	r4, r1, r8, lsr #20
   14260:	andeq	r4, r1, r8, lsr #20
   14264:	andeq	r4, r1, r8, lsr #20
   14268:	andeq	r4, r1, r8, lsr #20
   1426c:	andeq	r4, r1, r8, lsr #20
   14270:	andeq	r4, r1, r8, lsr #20
   14274:	andeq	r4, r1, ip, lsl #18
   14278:	andeq	r4, r1, r4, lsl r9
   1427c:	andeq	r4, r1, r4, lsl r9
   14280:	andeq	r4, r1, r0, lsl #18
   14284:	andeq	r4, r1, r4, lsl r9
   14288:	andeq	r4, r1, ip, lsl sl
   1428c:	andeq	r4, r1, r4, lsl r9
   14290:	andeq	r4, r1, r0, lsr r9
   14294:	andeq	r4, r1, r4, lsl r9
   14298:	andeq	r4, r1, r4, lsl r9
   1429c:	andeq	r4, r1, r4, lsl r9
   142a0:	andeq	r4, r1, ip, lsl sl
   142a4:	andeq	r4, r1, ip, lsl sl
   142a8:	andeq	r4, r1, ip, lsl sl
   142ac:	andeq	r4, r1, ip, lsl sl
   142b0:	andeq	r4, r1, ip, lsl sl
   142b4:	andeq	r4, r1, ip, lsl sl
   142b8:	andeq	r4, r1, ip, lsl sl
   142bc:	andeq	r4, r1, ip, lsl sl
   142c0:	andeq	r4, r1, ip, lsl sl
   142c4:	andeq	r4, r1, ip, lsl sl
   142c8:	andeq	r4, r1, ip, lsl sl
   142cc:	andeq	r4, r1, ip, lsl sl
   142d0:	andeq	r4, r1, ip, lsl sl
   142d4:	andeq	r4, r1, ip, lsl sl
   142d8:	andeq	r4, r1, ip, lsl sl
   142dc:	andeq	r4, r1, ip, lsl sl
   142e0:	andeq	r4, r1, r4, lsl r9
   142e4:	andeq	r4, r1, r4, lsl r9
   142e8:	andeq	r4, r1, r4, lsl r9
   142ec:	andeq	r4, r1, r4, lsl r9
   142f0:	ldrdeq	r4, [r1], -r0
   142f4:	andeq	r4, r1, r8, lsr #20
   142f8:	andeq	r4, r1, ip, lsl sl
   142fc:	andeq	r4, r1, ip, lsl sl
   14300:	andeq	r4, r1, ip, lsl sl
   14304:	andeq	r4, r1, ip, lsl sl
   14308:	andeq	r4, r1, ip, lsl sl
   1430c:	andeq	r4, r1, ip, lsl sl
   14310:	andeq	r4, r1, ip, lsl sl
   14314:	andeq	r4, r1, ip, lsl sl
   14318:	andeq	r4, r1, ip, lsl sl
   1431c:	andeq	r4, r1, ip, lsl sl
   14320:	andeq	r4, r1, ip, lsl sl
   14324:	andeq	r4, r1, ip, lsl sl
   14328:	andeq	r4, r1, ip, lsl sl
   1432c:	andeq	r4, r1, ip, lsl sl
   14330:	andeq	r4, r1, ip, lsl sl
   14334:	andeq	r4, r1, ip, lsl sl
   14338:	andeq	r4, r1, ip, lsl sl
   1433c:	andeq	r4, r1, ip, lsl sl
   14340:	andeq	r4, r1, ip, lsl sl
   14344:	andeq	r4, r1, ip, lsl sl
   14348:	andeq	r4, r1, ip, lsl sl
   1434c:	andeq	r4, r1, ip, lsl sl
   14350:	andeq	r4, r1, ip, lsl sl
   14354:	andeq	r4, r1, ip, lsl sl
   14358:	andeq	r4, r1, ip, lsl sl
   1435c:	andeq	r4, r1, ip, lsl sl
   14360:	andeq	r4, r1, r4, lsl r9
   14364:	andeq	r4, r1, r8, lsr r8
   14368:	andeq	r4, r1, ip, lsl sl
   1436c:	andeq	r4, r1, r4, lsl r9
   14370:	andeq	r4, r1, ip, lsl sl
   14374:	andeq	r4, r1, r4, lsl r9
   14378:	andeq	r4, r1, ip, lsl sl
   1437c:	andeq	r4, r1, ip, lsl sl
   14380:	andeq	r4, r1, ip, lsl sl
   14384:	andeq	r4, r1, ip, lsl sl
   14388:	andeq	r4, r1, ip, lsl sl
   1438c:	andeq	r4, r1, ip, lsl sl
   14390:	andeq	r4, r1, ip, lsl sl
   14394:	andeq	r4, r1, ip, lsl sl
   14398:	andeq	r4, r1, ip, lsl sl
   1439c:	andeq	r4, r1, ip, lsl sl
   143a0:	andeq	r4, r1, ip, lsl sl
   143a4:	andeq	r4, r1, ip, lsl sl
   143a8:	andeq	r4, r1, ip, lsl sl
   143ac:	andeq	r4, r1, ip, lsl sl
   143b0:	andeq	r4, r1, ip, lsl sl
   143b4:	andeq	r4, r1, ip, lsl sl
   143b8:	andeq	r4, r1, ip, lsl sl
   143bc:	andeq	r4, r1, ip, lsl sl
   143c0:	andeq	r4, r1, ip, lsl sl
   143c4:	andeq	r4, r1, ip, lsl sl
   143c8:	andeq	r4, r1, ip, lsl sl
   143cc:	andeq	r4, r1, ip, lsl sl
   143d0:	andeq	r4, r1, ip, lsl sl
   143d4:	andeq	r4, r1, ip, lsl sl
   143d8:	andeq	r4, r1, ip, lsl sl
   143dc:	andeq	r4, r1, ip, lsl sl
   143e0:			; <UNDEFINED> instruction: 0x000148b8
   143e4:	andeq	r4, r1, r4, lsl r9
   143e8:			; <UNDEFINED> instruction: 0x000148b8
   143ec:	andeq	r4, r1, r0, lsl #18
   143f0:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   143f4:	cmp	r3, #0
   143f8:	beq	145bc <_obstack_memory_used@@Base+0xda8>
   143fc:	ldrb	r3, [fp, #-34]	; 0xffffffde
   14400:	cmp	r3, #0
   14404:	bne	15470 <_obstack_memory_used@@Base+0x1c5c>
   14408:	mov	r3, #1
   1440c:	strb	r3, [fp, #-41]	; 0xffffffd7
   14410:	ldr	r3, [fp, #4]
   14414:	cmp	r3, #2
   14418:	bne	144c8 <_obstack_memory_used@@Base+0xcb4>
   1441c:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   14420:	eor	r3, r3, #1
   14424:	uxtb	r3, r3
   14428:	cmp	r3, #0
   1442c:	beq	144c8 <_obstack_memory_used@@Base+0xcb4>
   14430:	ldr	r2, [fp, #-20]	; 0xffffffec
   14434:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14438:	cmp	r2, r3
   1443c:	bcs	14454 <_obstack_memory_used@@Base+0xc40>
   14440:	ldr	r2, [fp, #-88]	; 0xffffffa8
   14444:	ldr	r3, [fp, #-20]	; 0xffffffec
   14448:	add	r3, r2, r3
   1444c:	mov	r2, #39	; 0x27
   14450:	strb	r2, [r3]
   14454:	ldr	r3, [fp, #-20]	; 0xffffffec
   14458:	add	r3, r3, #1
   1445c:	str	r3, [fp, #-20]	; 0xffffffec
   14460:	ldr	r2, [fp, #-20]	; 0xffffffec
   14464:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14468:	cmp	r2, r3
   1446c:	bcs	14484 <_obstack_memory_used@@Base+0xc70>
   14470:	ldr	r2, [fp, #-88]	; 0xffffffa8
   14474:	ldr	r3, [fp, #-20]	; 0xffffffec
   14478:	add	r3, r2, r3
   1447c:	mov	r2, #36	; 0x24
   14480:	strb	r2, [r3]
   14484:	ldr	r3, [fp, #-20]	; 0xffffffec
   14488:	add	r3, r3, #1
   1448c:	str	r3, [fp, #-20]	; 0xffffffec
   14490:	ldr	r2, [fp, #-20]	; 0xffffffec
   14494:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14498:	cmp	r2, r3
   1449c:	bcs	144b4 <_obstack_memory_used@@Base+0xca0>
   144a0:	ldr	r2, [fp, #-88]	; 0xffffffa8
   144a4:	ldr	r3, [fp, #-20]	; 0xffffffec
   144a8:	add	r3, r2, r3
   144ac:	mov	r2, #39	; 0x27
   144b0:	strb	r2, [r3]
   144b4:	ldr	r3, [fp, #-20]	; 0xffffffec
   144b8:	add	r3, r3, #1
   144bc:	str	r3, [fp, #-20]	; 0xffffffec
   144c0:	mov	r3, #1
   144c4:	strb	r3, [fp, #-35]	; 0xffffffdd
   144c8:	ldr	r2, [fp, #-20]	; 0xffffffec
   144cc:	ldr	r3, [fp, #-92]	; 0xffffffa4
   144d0:	cmp	r2, r3
   144d4:	bcs	144ec <_obstack_memory_used@@Base+0xcd8>
   144d8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   144dc:	ldr	r3, [fp, #-20]	; 0xffffffec
   144e0:	add	r3, r2, r3
   144e4:	mov	r2, #92	; 0x5c
   144e8:	strb	r2, [r3]
   144ec:	ldr	r3, [fp, #-20]	; 0xffffffec
   144f0:	add	r3, r3, #1
   144f4:	str	r3, [fp, #-20]	; 0xffffffec
   144f8:	ldr	r3, [fp, #4]
   144fc:	cmp	r3, #2
   14500:	beq	145b0 <_obstack_memory_used@@Base+0xd9c>
   14504:	ldr	r3, [fp, #-16]
   14508:	add	r3, r3, #1
   1450c:	ldr	r2, [fp, #-100]	; 0xffffff9c
   14510:	cmp	r2, r3
   14514:	bls	145b0 <_obstack_memory_used@@Base+0xd9c>
   14518:	ldr	r3, [fp, #-16]
   1451c:	add	r3, r3, #1
   14520:	ldr	r2, [fp, #-96]	; 0xffffffa0
   14524:	add	r3, r2, r3
   14528:	ldrb	r3, [r3]
   1452c:	cmp	r3, #47	; 0x2f
   14530:	bls	145b0 <_obstack_memory_used@@Base+0xd9c>
   14534:	ldr	r3, [fp, #-16]
   14538:	add	r3, r3, #1
   1453c:	ldr	r2, [fp, #-96]	; 0xffffffa0
   14540:	add	r3, r2, r3
   14544:	ldrb	r3, [r3]
   14548:	cmp	r3, #57	; 0x39
   1454c:	bhi	145b0 <_obstack_memory_used@@Base+0xd9c>
   14550:	ldr	r2, [fp, #-20]	; 0xffffffec
   14554:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14558:	cmp	r2, r3
   1455c:	bcs	14574 <_obstack_memory_used@@Base+0xd60>
   14560:	ldr	r2, [fp, #-88]	; 0xffffffa8
   14564:	ldr	r3, [fp, #-20]	; 0xffffffec
   14568:	add	r3, r2, r3
   1456c:	mov	r2, #48	; 0x30
   14570:	strb	r2, [r3]
   14574:	ldr	r3, [fp, #-20]	; 0xffffffec
   14578:	add	r3, r3, #1
   1457c:	str	r3, [fp, #-20]	; 0xffffffec
   14580:	ldr	r2, [fp, #-20]	; 0xffffffec
   14584:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14588:	cmp	r2, r3
   1458c:	bcs	145a4 <_obstack_memory_used@@Base+0xd90>
   14590:	ldr	r2, [fp, #-88]	; 0xffffffa8
   14594:	ldr	r3, [fp, #-20]	; 0xffffffec
   14598:	add	r3, r2, r3
   1459c:	mov	r2, #48	; 0x30
   145a0:	strb	r2, [r3]
   145a4:	ldr	r3, [fp, #-20]	; 0xffffffec
   145a8:	add	r3, r3, #1
   145ac:	str	r3, [fp, #-20]	; 0xffffffec
   145b0:	mov	r3, #48	; 0x30
   145b4:	strb	r3, [fp, #-38]	; 0xffffffda
   145b8:	b	14ff8 <_obstack_memory_used@@Base+0x17e4>
   145bc:	ldr	r3, [fp, #8]
   145c0:	and	r3, r3, #1
   145c4:	cmp	r3, #0
   145c8:	beq	14ff8 <_obstack_memory_used@@Base+0x17e4>
   145cc:	b	152a0 <_obstack_memory_used@@Base+0x1a8c>
   145d0:	ldr	r3, [fp, #4]
   145d4:	cmp	r3, #2
   145d8:	beq	145ec <_obstack_memory_used@@Base+0xdd8>
   145dc:	ldr	r3, [fp, #4]
   145e0:	cmp	r3, #5
   145e4:	beq	145fc <_obstack_memory_used@@Base+0xde8>
   145e8:	b	147e0 <_obstack_memory_used@@Base+0xfcc>
   145ec:	ldrb	r3, [fp, #-34]	; 0xffffffde
   145f0:	cmp	r3, #0
   145f4:	beq	147d4 <_obstack_memory_used@@Base+0xfc0>
   145f8:	b	154a4 <_obstack_memory_used@@Base+0x1c90>
   145fc:	ldr	r3, [fp, #8]
   14600:	and	r3, r3, #4
   14604:	cmp	r3, #0
   14608:	beq	147dc <_obstack_memory_used@@Base+0xfc8>
   1460c:	ldr	r3, [fp, #-16]
   14610:	add	r3, r3, #2
   14614:	ldr	r2, [fp, #-100]	; 0xffffff9c
   14618:	cmp	r2, r3
   1461c:	bls	147dc <_obstack_memory_used@@Base+0xfc8>
   14620:	ldr	r3, [fp, #-16]
   14624:	add	r3, r3, #1
   14628:	ldr	r2, [fp, #-96]	; 0xffffffa0
   1462c:	add	r3, r2, r3
   14630:	ldrb	r3, [r3]
   14634:	cmp	r3, #63	; 0x3f
   14638:	bne	147dc <_obstack_memory_used@@Base+0xfc8>
   1463c:	ldr	r3, [fp, #-16]
   14640:	add	r3, r3, #2
   14644:	ldr	r2, [fp, #-96]	; 0xffffffa0
   14648:	add	r3, r2, r3
   1464c:	ldrb	r3, [r3]
   14650:	sub	r3, r3, #33	; 0x21
   14654:	cmp	r3, #29
   14658:	ldrls	pc, [pc, r3, lsl #2]
   1465c:	b	147cc <_obstack_memory_used@@Base+0xfb8>
   14660:	ldrdeq	r4, [r1], -r8
   14664:	andeq	r4, r1, ip, asr #15
   14668:	andeq	r4, r1, ip, asr #15
   1466c:	andeq	r4, r1, ip, asr #15
   14670:	andeq	r4, r1, ip, asr #15
   14674:	andeq	r4, r1, ip, asr #15
   14678:	ldrdeq	r4, [r1], -r8
   1467c:	ldrdeq	r4, [r1], -r8
   14680:	ldrdeq	r4, [r1], -r8
   14684:	andeq	r4, r1, ip, asr #15
   14688:	andeq	r4, r1, ip, asr #15
   1468c:	andeq	r4, r1, ip, asr #15
   14690:	ldrdeq	r4, [r1], -r8
   14694:	andeq	r4, r1, ip, asr #15
   14698:	ldrdeq	r4, [r1], -r8
   1469c:	andeq	r4, r1, ip, asr #15
   146a0:	andeq	r4, r1, ip, asr #15
   146a4:	andeq	r4, r1, ip, asr #15
   146a8:	andeq	r4, r1, ip, asr #15
   146ac:	andeq	r4, r1, ip, asr #15
   146b0:	andeq	r4, r1, ip, asr #15
   146b4:	andeq	r4, r1, ip, asr #15
   146b8:	andeq	r4, r1, ip, asr #15
   146bc:	andeq	r4, r1, ip, asr #15
   146c0:	andeq	r4, r1, ip, asr #15
   146c4:	andeq	r4, r1, ip, asr #15
   146c8:	andeq	r4, r1, ip, asr #15
   146cc:	ldrdeq	r4, [r1], -r8
   146d0:	ldrdeq	r4, [r1], -r8
   146d4:	ldrdeq	r4, [r1], -r8
   146d8:	ldrb	r3, [fp, #-34]	; 0xffffffde
   146dc:	cmp	r3, #0
   146e0:	bne	15478 <_obstack_memory_used@@Base+0x1c64>
   146e4:	ldr	r3, [fp, #-16]
   146e8:	add	r3, r3, #2
   146ec:	ldr	r2, [fp, #-96]	; 0xffffffa0
   146f0:	add	r3, r2, r3
   146f4:	ldrb	r3, [r3]
   146f8:	strb	r3, [fp, #-38]	; 0xffffffda
   146fc:	ldr	r3, [fp, #-16]
   14700:	add	r3, r3, #2
   14704:	str	r3, [fp, #-16]
   14708:	ldr	r2, [fp, #-20]	; 0xffffffec
   1470c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14710:	cmp	r2, r3
   14714:	bcs	1472c <_obstack_memory_used@@Base+0xf18>
   14718:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1471c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14720:	add	r3, r2, r3
   14724:	mov	r2, #63	; 0x3f
   14728:	strb	r2, [r3]
   1472c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14730:	add	r3, r3, #1
   14734:	str	r3, [fp, #-20]	; 0xffffffec
   14738:	ldr	r2, [fp, #-20]	; 0xffffffec
   1473c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14740:	cmp	r2, r3
   14744:	bcs	1475c <_obstack_memory_used@@Base+0xf48>
   14748:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1474c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14750:	add	r3, r2, r3
   14754:	mov	r2, #34	; 0x22
   14758:	strb	r2, [r3]
   1475c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14760:	add	r3, r3, #1
   14764:	str	r3, [fp, #-20]	; 0xffffffec
   14768:	ldr	r2, [fp, #-20]	; 0xffffffec
   1476c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14770:	cmp	r2, r3
   14774:	bcs	1478c <_obstack_memory_used@@Base+0xf78>
   14778:	ldr	r2, [fp, #-88]	; 0xffffffa8
   1477c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14780:	add	r3, r2, r3
   14784:	mov	r2, #34	; 0x22
   14788:	strb	r2, [r3]
   1478c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14790:	add	r3, r3, #1
   14794:	str	r3, [fp, #-20]	; 0xffffffec
   14798:	ldr	r2, [fp, #-20]	; 0xffffffec
   1479c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   147a0:	cmp	r2, r3
   147a4:	bcs	147bc <_obstack_memory_used@@Base+0xfa8>
   147a8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   147ac:	ldr	r3, [fp, #-20]	; 0xffffffec
   147b0:	add	r3, r2, r3
   147b4:	mov	r2, #63	; 0x3f
   147b8:	strb	r2, [r3]
   147bc:	ldr	r3, [fp, #-20]	; 0xffffffec
   147c0:	add	r3, r3, #1
   147c4:	str	r3, [fp, #-20]	; 0xffffffec
   147c8:	b	147d0 <_obstack_memory_used@@Base+0xfbc>
   147cc:	nop	{0}
   147d0:	b	147dc <_obstack_memory_used@@Base+0xfc8>
   147d4:	nop	{0}
   147d8:	b	1502c <_obstack_memory_used@@Base+0x1818>
   147dc:	nop	{0}
   147e0:	b	1502c <_obstack_memory_used@@Base+0x1818>
   147e4:	mov	r3, #97	; 0x61
   147e8:	strb	r3, [fp, #-39]	; 0xffffffd9
   147ec:	b	148a0 <_obstack_memory_used@@Base+0x108c>
   147f0:	mov	r3, #98	; 0x62
   147f4:	strb	r3, [fp, #-39]	; 0xffffffd9
   147f8:	b	148a0 <_obstack_memory_used@@Base+0x108c>
   147fc:	mov	r3, #102	; 0x66
   14800:	strb	r3, [fp, #-39]	; 0xffffffd9
   14804:	b	148a0 <_obstack_memory_used@@Base+0x108c>
   14808:	mov	r3, #110	; 0x6e
   1480c:	strb	r3, [fp, #-39]	; 0xffffffd9
   14810:	b	14884 <_obstack_memory_used@@Base+0x1070>
   14814:	mov	r3, #114	; 0x72
   14818:	strb	r3, [fp, #-39]	; 0xffffffd9
   1481c:	b	14884 <_obstack_memory_used@@Base+0x1070>
   14820:	mov	r3, #116	; 0x74
   14824:	strb	r3, [fp, #-39]	; 0xffffffd9
   14828:	b	14884 <_obstack_memory_used@@Base+0x1070>
   1482c:	mov	r3, #118	; 0x76
   14830:	strb	r3, [fp, #-39]	; 0xffffffd9
   14834:	b	148a0 <_obstack_memory_used@@Base+0x108c>
   14838:	ldrb	r3, [fp, #-38]	; 0xffffffda
   1483c:	strb	r3, [fp, #-39]	; 0xffffffd9
   14840:	ldr	r3, [fp, #4]
   14844:	cmp	r3, #2
   14848:	bne	1485c <_obstack_memory_used@@Base+0x1048>
   1484c:	ldrb	r3, [fp, #-34]	; 0xffffffde
   14850:	cmp	r3, #0
   14854:	beq	151b8 <_obstack_memory_used@@Base+0x19a4>
   14858:	b	154a4 <_obstack_memory_used@@Base+0x1c90>
   1485c:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   14860:	cmp	r3, #0
   14864:	beq	14880 <_obstack_memory_used@@Base+0x106c>
   14868:	ldrb	r3, [fp, #-34]	; 0xffffffde
   1486c:	cmp	r3, #0
   14870:	beq	14880 <_obstack_memory_used@@Base+0x106c>
   14874:	ldr	r3, [fp, #-32]	; 0xffffffe0
   14878:	cmp	r3, #0
   1487c:	bne	151c0 <_obstack_memory_used@@Base+0x19ac>
   14880:	nop	{0}
   14884:	ldr	r3, [fp, #4]
   14888:	cmp	r3, #2
   1488c:	bne	1489c <_obstack_memory_used@@Base+0x1088>
   14890:	ldrb	r3, [fp, #-34]	; 0xffffffde
   14894:	cmp	r3, #0
   14898:	bne	15480 <_obstack_memory_used@@Base+0x1c6c>
   1489c:	nop	{0}
   148a0:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   148a4:	cmp	r3, #0
   148a8:	beq	15000 <_obstack_memory_used@@Base+0x17ec>
   148ac:	ldrb	r3, [fp, #-39]	; 0xffffffd9
   148b0:	strb	r3, [fp, #-38]	; 0xffffffda
   148b4:	b	150b8 <_obstack_memory_used@@Base+0x18a4>
   148b8:	ldr	r3, [fp, #-100]	; 0xffffff9c
   148bc:	cmn	r3, #1
   148c0:	bne	148e4 <_obstack_memory_used@@Base+0x10d0>
   148c4:	ldr	r3, [fp, #-96]	; 0xffffffa0
   148c8:	add	r3, r3, #1
   148cc:	ldrb	r3, [r3]
   148d0:	cmp	r3, #0
   148d4:	movne	r3, #1
   148d8:	moveq	r3, #0
   148dc:	uxtb	r3, r3
   148e0:	b	148f8 <_obstack_memory_used@@Base+0x10e4>
   148e4:	ldr	r3, [fp, #-100]	; 0xffffff9c
   148e8:	cmp	r3, #1
   148ec:	movne	r3, #1
   148f0:	moveq	r3, #0
   148f4:	uxtb	r3, r3
   148f8:	cmp	r3, #0
   148fc:	bne	15008 <_obstack_memory_used@@Base+0x17f4>
   14900:	ldr	r3, [fp, #-16]
   14904:	cmp	r3, #0
   14908:	bne	15010 <_obstack_memory_used@@Base+0x17fc>
   1490c:	mov	r3, #1
   14910:	strb	r3, [fp, #-42]	; 0xffffffd6
   14914:	ldr	r3, [fp, #4]
   14918:	cmp	r3, #2
   1491c:	bne	15018 <_obstack_memory_used@@Base+0x1804>
   14920:	ldrb	r3, [fp, #-34]	; 0xffffffde
   14924:	cmp	r3, #0
   14928:	beq	15018 <_obstack_memory_used@@Base+0x1804>
   1492c:	b	154a4 <_obstack_memory_used@@Base+0x1c90>
   14930:	mov	r3, #1
   14934:	strb	r3, [fp, #-36]	; 0xffffffdc
   14938:	mov	r3, #1
   1493c:	strb	r3, [fp, #-42]	; 0xffffffd6
   14940:	ldr	r3, [fp, #4]
   14944:	cmp	r3, #2
   14948:	bne	15020 <_obstack_memory_used@@Base+0x180c>
   1494c:	ldrb	r3, [fp, #-34]	; 0xffffffde
   14950:	cmp	r3, #0
   14954:	bne	15488 <_obstack_memory_used@@Base+0x1c74>
   14958:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1495c:	cmp	r3, #0
   14960:	beq	14980 <_obstack_memory_used@@Base+0x116c>
   14964:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14968:	cmp	r3, #0
   1496c:	bne	14980 <_obstack_memory_used@@Base+0x116c>
   14970:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14974:	str	r3, [fp, #-24]	; 0xffffffe8
   14978:	mov	r3, #0
   1497c:	str	r3, [fp, #-92]	; 0xffffffa4
   14980:	ldr	r2, [fp, #-20]	; 0xffffffec
   14984:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14988:	cmp	r2, r3
   1498c:	bcs	149a4 <_obstack_memory_used@@Base+0x1190>
   14990:	ldr	r2, [fp, #-88]	; 0xffffffa8
   14994:	ldr	r3, [fp, #-20]	; 0xffffffec
   14998:	add	r3, r2, r3
   1499c:	mov	r2, #39	; 0x27
   149a0:	strb	r2, [r3]
   149a4:	ldr	r3, [fp, #-20]	; 0xffffffec
   149a8:	add	r3, r3, #1
   149ac:	str	r3, [fp, #-20]	; 0xffffffec
   149b0:	ldr	r2, [fp, #-20]	; 0xffffffec
   149b4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   149b8:	cmp	r2, r3
   149bc:	bcs	149d4 <_obstack_memory_used@@Base+0x11c0>
   149c0:	ldr	r2, [fp, #-88]	; 0xffffffa8
   149c4:	ldr	r3, [fp, #-20]	; 0xffffffec
   149c8:	add	r3, r2, r3
   149cc:	mov	r2, #92	; 0x5c
   149d0:	strb	r2, [r3]
   149d4:	ldr	r3, [fp, #-20]	; 0xffffffec
   149d8:	add	r3, r3, #1
   149dc:	str	r3, [fp, #-20]	; 0xffffffec
   149e0:	ldr	r2, [fp, #-20]	; 0xffffffec
   149e4:	ldr	r3, [fp, #-92]	; 0xffffffa4
   149e8:	cmp	r2, r3
   149ec:	bcs	14a04 <_obstack_memory_used@@Base+0x11f0>
   149f0:	ldr	r2, [fp, #-88]	; 0xffffffa8
   149f4:	ldr	r3, [fp, #-20]	; 0xffffffec
   149f8:	add	r3, r2, r3
   149fc:	mov	r2, #39	; 0x27
   14a00:	strb	r2, [r3]
   14a04:	ldr	r3, [fp, #-20]	; 0xffffffec
   14a08:	add	r3, r3, #1
   14a0c:	str	r3, [fp, #-20]	; 0xffffffec
   14a10:	mov	r3, #0
   14a14:	strb	r3, [fp, #-35]	; 0xffffffdd
   14a18:	b	15020 <_obstack_memory_used@@Base+0x180c>
   14a1c:	mov	r3, #1
   14a20:	strb	r3, [fp, #-42]	; 0xffffffd6
   14a24:	b	1502c <_obstack_memory_used@@Base+0x1818>
   14a28:	ldrb	r3, [fp, #-57]	; 0xffffffc7
   14a2c:	cmp	r3, #0
   14a30:	beq	14a70 <_obstack_memory_used@@Base+0x125c>
   14a34:	mov	r3, #1
   14a38:	str	r3, [fp, #-48]	; 0xffffffd0
   14a3c:	bl	10edc <__ctype_b_loc@plt>
   14a40:	mov	r3, r0
   14a44:	ldr	r2, [r3]
   14a48:	ldrb	r3, [fp, #-38]	; 0xffffffda
   14a4c:	lsl	r3, r3, #1
   14a50:	add	r3, r2, r3
   14a54:	ldrh	r3, [r3]
   14a58:	and	r3, r3, #16384	; 0x4000
   14a5c:	cmp	r3, #0
   14a60:	movne	r3, #1
   14a64:	moveq	r3, #0
   14a68:	strb	r3, [fp, #-49]	; 0xffffffcf
   14a6c:	b	14cbc <_obstack_memory_used@@Base+0x14a8>
   14a70:	sub	r3, fp, #76	; 0x4c
   14a74:	mov	r2, #8
   14a78:	mov	r1, #0
   14a7c:	mov	r0, r3
   14a80:	bl	10f30 <memset@plt>
   14a84:	mov	r3, #0
   14a88:	str	r3, [fp, #-48]	; 0xffffffd0
   14a8c:	mov	r3, #1
   14a90:	strb	r3, [fp, #-49]	; 0xffffffcf
   14a94:	ldr	r3, [fp, #-100]	; 0xffffff9c
   14a98:	cmn	r3, #1
   14a9c:	bne	14aac <_obstack_memory_used@@Base+0x1298>
   14aa0:	ldr	r0, [fp, #-96]	; 0xffffffa0
   14aa4:	bl	10f00 <strlen@plt>
   14aa8:	str	r0, [fp, #-100]	; 0xffffff9c
   14aac:	ldr	r2, [fp, #-16]
   14ab0:	ldr	r3, [fp, #-48]	; 0xffffffd0
   14ab4:	add	r3, r2, r3
   14ab8:	ldr	r2, [fp, #-96]	; 0xffffffa0
   14abc:	add	r1, r2, r3
   14ac0:	ldr	r2, [fp, #-16]
   14ac4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   14ac8:	add	r3, r2, r3
   14acc:	ldr	r2, [fp, #-100]	; 0xffffff9c
   14ad0:	sub	r2, r2, r3
   14ad4:	sub	r3, fp, #76	; 0x4c
   14ad8:	sub	r0, fp, #80	; 0x50
   14adc:	bl	17d84 <_obstack_memory_used@@Base+0x4570>
   14ae0:	str	r0, [fp, #-64]	; 0xffffffc0
   14ae4:	ldr	r3, [fp, #-64]	; 0xffffffc0
   14ae8:	cmp	r3, #0
   14aec:	beq	14cb0 <_obstack_memory_used@@Base+0x149c>
   14af0:	ldr	r3, [fp, #-64]	; 0xffffffc0
   14af4:	cmn	r3, #1
   14af8:	bne	14b08 <_obstack_memory_used@@Base+0x12f4>
   14afc:	mov	r3, #0
   14b00:	strb	r3, [fp, #-49]	; 0xffffffcf
   14b04:	b	14cbc <_obstack_memory_used@@Base+0x14a8>
   14b08:	ldr	r3, [fp, #-64]	; 0xffffffc0
   14b0c:	cmn	r3, #2
   14b10:	bne	14b68 <_obstack_memory_used@@Base+0x1354>
   14b14:	mov	r3, #0
   14b18:	strb	r3, [fp, #-49]	; 0xffffffcf
   14b1c:	b	14b2c <_obstack_memory_used@@Base+0x1318>
   14b20:	ldr	r3, [fp, #-48]	; 0xffffffd0
   14b24:	add	r3, r3, #1
   14b28:	str	r3, [fp, #-48]	; 0xffffffd0
   14b2c:	ldr	r2, [fp, #-16]
   14b30:	ldr	r3, [fp, #-48]	; 0xffffffd0
   14b34:	add	r3, r2, r3
   14b38:	ldr	r2, [fp, #-100]	; 0xffffff9c
   14b3c:	cmp	r2, r3
   14b40:	bls	14cb8 <_obstack_memory_used@@Base+0x14a4>
   14b44:	ldr	r2, [fp, #-16]
   14b48:	ldr	r3, [fp, #-48]	; 0xffffffd0
   14b4c:	add	r3, r2, r3
   14b50:	ldr	r2, [fp, #-96]	; 0xffffffa0
   14b54:	add	r3, r2, r3
   14b58:	ldrb	r3, [r3]
   14b5c:	cmp	r3, #0
   14b60:	bne	14b20 <_obstack_memory_used@@Base+0x130c>
   14b64:	b	14cb8 <_obstack_memory_used@@Base+0x14a4>
   14b68:	ldrb	r3, [fp, #-34]	; 0xffffffde
   14b6c:	cmp	r3, #0
   14b70:	beq	14c64 <_obstack_memory_used@@Base+0x1450>
   14b74:	ldr	r3, [fp, #4]
   14b78:	cmp	r3, #2
   14b7c:	bne	14c64 <_obstack_memory_used@@Base+0x1450>
   14b80:	mov	r3, #1
   14b84:	str	r3, [fp, #-56]	; 0xffffffc8
   14b88:	b	14c54 <_obstack_memory_used@@Base+0x1440>
   14b8c:	ldr	r2, [fp, #-16]
   14b90:	ldr	r3, [fp, #-48]	; 0xffffffd0
   14b94:	add	r2, r2, r3
   14b98:	ldr	r3, [fp, #-56]	; 0xffffffc8
   14b9c:	add	r3, r2, r3
   14ba0:	ldr	r2, [fp, #-96]	; 0xffffffa0
   14ba4:	add	r3, r2, r3
   14ba8:	ldrb	r3, [r3]
   14bac:	sub	r3, r3, #91	; 0x5b
   14bb0:	cmp	r3, #33	; 0x21
   14bb4:	ldrls	pc, [pc, r3, lsl #2]
   14bb8:	b	14c44 <_obstack_memory_used@@Base+0x1430>
   14bbc:	andeq	r5, r1, r4, lsr #9
   14bc0:	andeq	r5, r1, r4, lsr #9
   14bc4:	andeq	r4, r1, r4, asr #24
   14bc8:	andeq	r5, r1, r4, lsr #9
   14bcc:	andeq	r4, r1, r4, asr #24
   14bd0:	andeq	r5, r1, r4, lsr #9
   14bd4:	andeq	r4, r1, r4, asr #24
   14bd8:	andeq	r4, r1, r4, asr #24
   14bdc:	andeq	r4, r1, r4, asr #24
   14be0:	andeq	r4, r1, r4, asr #24
   14be4:	andeq	r4, r1, r4, asr #24
   14be8:	andeq	r4, r1, r4, asr #24
   14bec:	andeq	r4, r1, r4, asr #24
   14bf0:	andeq	r4, r1, r4, asr #24
   14bf4:	andeq	r4, r1, r4, asr #24
   14bf8:	andeq	r4, r1, r4, asr #24
   14bfc:	andeq	r4, r1, r4, asr #24
   14c00:	andeq	r4, r1, r4, asr #24
   14c04:	andeq	r4, r1, r4, asr #24
   14c08:	andeq	r4, r1, r4, asr #24
   14c0c:	andeq	r4, r1, r4, asr #24
   14c10:	andeq	r4, r1, r4, asr #24
   14c14:	andeq	r4, r1, r4, asr #24
   14c18:	andeq	r4, r1, r4, asr #24
   14c1c:	andeq	r4, r1, r4, asr #24
   14c20:	andeq	r4, r1, r4, asr #24
   14c24:	andeq	r4, r1, r4, asr #24
   14c28:	andeq	r4, r1, r4, asr #24
   14c2c:	andeq	r4, r1, r4, asr #24
   14c30:	andeq	r4, r1, r4, asr #24
   14c34:	andeq	r4, r1, r4, asr #24
   14c38:	andeq	r4, r1, r4, asr #24
   14c3c:	andeq	r4, r1, r4, asr #24
   14c40:	andeq	r5, r1, r4, lsr #9
   14c44:	nop	{0}
   14c48:	ldr	r3, [fp, #-56]	; 0xffffffc8
   14c4c:	add	r3, r3, #1
   14c50:	str	r3, [fp, #-56]	; 0xffffffc8
   14c54:	ldr	r2, [fp, #-56]	; 0xffffffc8
   14c58:	ldr	r3, [fp, #-64]	; 0xffffffc0
   14c5c:	cmp	r2, r3
   14c60:	bcc	14b8c <_obstack_memory_used@@Base+0x1378>
   14c64:	ldr	r3, [fp, #-80]	; 0xffffffb0
   14c68:	mov	r0, r3
   14c6c:	bl	10e04 <iswprint@plt>
   14c70:	mov	r3, r0
   14c74:	cmp	r3, #0
   14c78:	bne	14c84 <_obstack_memory_used@@Base+0x1470>
   14c7c:	mov	r3, #0
   14c80:	strb	r3, [fp, #-49]	; 0xffffffcf
   14c84:	ldr	r2, [fp, #-48]	; 0xffffffd0
   14c88:	ldr	r3, [fp, #-64]	; 0xffffffc0
   14c8c:	add	r3, r2, r3
   14c90:	str	r3, [fp, #-48]	; 0xffffffd0
   14c94:	sub	r3, fp, #76	; 0x4c
   14c98:	mov	r0, r3
   14c9c:	bl	10db0 <mbsinit@plt>
   14ca0:	mov	r3, r0
   14ca4:	cmp	r3, #0
   14ca8:	beq	14aac <_obstack_memory_used@@Base+0x1298>
   14cac:	b	14cbc <_obstack_memory_used@@Base+0x14a8>
   14cb0:	nop	{0}
   14cb4:	b	14cbc <_obstack_memory_used@@Base+0x14a8>
   14cb8:	nop	{0}
   14cbc:	ldrb	r3, [fp, #-49]	; 0xffffffcf
   14cc0:	strb	r3, [fp, #-42]	; 0xffffffd6
   14cc4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   14cc8:	cmp	r3, #1
   14ccc:	bhi	14cf0 <_obstack_memory_used@@Base+0x14dc>
   14cd0:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   14cd4:	cmp	r3, #0
   14cd8:	beq	15028 <_obstack_memory_used@@Base+0x1814>
   14cdc:	ldrb	r3, [fp, #-49]	; 0xffffffcf
   14ce0:	eor	r3, r3, #1
   14ce4:	uxtb	r3, r3
   14ce8:	cmp	r3, #0
   14cec:	beq	15028 <_obstack_memory_used@@Base+0x1814>
   14cf0:	ldr	r2, [fp, #-16]
   14cf4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   14cf8:	add	r3, r2, r3
   14cfc:	str	r3, [fp, #-68]	; 0xffffffbc
   14d00:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   14d04:	cmp	r3, #0
   14d08:	beq	14ebc <_obstack_memory_used@@Base+0x16a8>
   14d0c:	ldrb	r3, [fp, #-49]	; 0xffffffcf
   14d10:	eor	r3, r3, #1
   14d14:	uxtb	r3, r3
   14d18:	cmp	r3, #0
   14d1c:	beq	14ebc <_obstack_memory_used@@Base+0x16a8>
   14d20:	ldrb	r3, [fp, #-34]	; 0xffffffde
   14d24:	cmp	r3, #0
   14d28:	bne	15490 <_obstack_memory_used@@Base+0x1c7c>
   14d2c:	mov	r3, #1
   14d30:	strb	r3, [fp, #-41]	; 0xffffffd7
   14d34:	ldr	r3, [fp, #4]
   14d38:	cmp	r3, #2
   14d3c:	bne	14dec <_obstack_memory_used@@Base+0x15d8>
   14d40:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   14d44:	eor	r3, r3, #1
   14d48:	uxtb	r3, r3
   14d4c:	cmp	r3, #0
   14d50:	beq	14dec <_obstack_memory_used@@Base+0x15d8>
   14d54:	ldr	r2, [fp, #-20]	; 0xffffffec
   14d58:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14d5c:	cmp	r2, r3
   14d60:	bcs	14d78 <_obstack_memory_used@@Base+0x1564>
   14d64:	ldr	r2, [fp, #-88]	; 0xffffffa8
   14d68:	ldr	r3, [fp, #-20]	; 0xffffffec
   14d6c:	add	r3, r2, r3
   14d70:	mov	r2, #39	; 0x27
   14d74:	strb	r2, [r3]
   14d78:	ldr	r3, [fp, #-20]	; 0xffffffec
   14d7c:	add	r3, r3, #1
   14d80:	str	r3, [fp, #-20]	; 0xffffffec
   14d84:	ldr	r2, [fp, #-20]	; 0xffffffec
   14d88:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14d8c:	cmp	r2, r3
   14d90:	bcs	14da8 <_obstack_memory_used@@Base+0x1594>
   14d94:	ldr	r2, [fp, #-88]	; 0xffffffa8
   14d98:	ldr	r3, [fp, #-20]	; 0xffffffec
   14d9c:	add	r3, r2, r3
   14da0:	mov	r2, #36	; 0x24
   14da4:	strb	r2, [r3]
   14da8:	ldr	r3, [fp, #-20]	; 0xffffffec
   14dac:	add	r3, r3, #1
   14db0:	str	r3, [fp, #-20]	; 0xffffffec
   14db4:	ldr	r2, [fp, #-20]	; 0xffffffec
   14db8:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14dbc:	cmp	r2, r3
   14dc0:	bcs	14dd8 <_obstack_memory_used@@Base+0x15c4>
   14dc4:	ldr	r2, [fp, #-88]	; 0xffffffa8
   14dc8:	ldr	r3, [fp, #-20]	; 0xffffffec
   14dcc:	add	r3, r2, r3
   14dd0:	mov	r2, #39	; 0x27
   14dd4:	strb	r2, [r3]
   14dd8:	ldr	r3, [fp, #-20]	; 0xffffffec
   14ddc:	add	r3, r3, #1
   14de0:	str	r3, [fp, #-20]	; 0xffffffec
   14de4:	mov	r3, #1
   14de8:	strb	r3, [fp, #-35]	; 0xffffffdd
   14dec:	ldr	r2, [fp, #-20]	; 0xffffffec
   14df0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14df4:	cmp	r2, r3
   14df8:	bcs	14e10 <_obstack_memory_used@@Base+0x15fc>
   14dfc:	ldr	r2, [fp, #-88]	; 0xffffffa8
   14e00:	ldr	r3, [fp, #-20]	; 0xffffffec
   14e04:	add	r3, r2, r3
   14e08:	mov	r2, #92	; 0x5c
   14e0c:	strb	r2, [r3]
   14e10:	ldr	r3, [fp, #-20]	; 0xffffffec
   14e14:	add	r3, r3, #1
   14e18:	str	r3, [fp, #-20]	; 0xffffffec
   14e1c:	ldr	r2, [fp, #-20]	; 0xffffffec
   14e20:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14e24:	cmp	r2, r3
   14e28:	bcs	14e50 <_obstack_memory_used@@Base+0x163c>
   14e2c:	ldrb	r3, [fp, #-38]	; 0xffffffda
   14e30:	lsr	r3, r3, #6
   14e34:	uxtb	r2, r3
   14e38:	ldr	r1, [fp, #-88]	; 0xffffffa8
   14e3c:	ldr	r3, [fp, #-20]	; 0xffffffec
   14e40:	add	r3, r1, r3
   14e44:	add	r2, r2, #48	; 0x30
   14e48:	uxtb	r2, r2
   14e4c:	strb	r2, [r3]
   14e50:	ldr	r3, [fp, #-20]	; 0xffffffec
   14e54:	add	r3, r3, #1
   14e58:	str	r3, [fp, #-20]	; 0xffffffec
   14e5c:	ldr	r2, [fp, #-20]	; 0xffffffec
   14e60:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14e64:	cmp	r2, r3
   14e68:	bcs	14e98 <_obstack_memory_used@@Base+0x1684>
   14e6c:	ldrb	r3, [fp, #-38]	; 0xffffffda
   14e70:	lsr	r3, r3, #3
   14e74:	uxtb	r3, r3
   14e78:	and	r3, r3, #7
   14e7c:	uxtb	r2, r3
   14e80:	ldr	r1, [fp, #-88]	; 0xffffffa8
   14e84:	ldr	r3, [fp, #-20]	; 0xffffffec
   14e88:	add	r3, r1, r3
   14e8c:	add	r2, r2, #48	; 0x30
   14e90:	uxtb	r2, r2
   14e94:	strb	r2, [r3]
   14e98:	ldr	r3, [fp, #-20]	; 0xffffffec
   14e9c:	add	r3, r3, #1
   14ea0:	str	r3, [fp, #-20]	; 0xffffffec
   14ea4:	ldrb	r3, [fp, #-38]	; 0xffffffda
   14ea8:	and	r3, r3, #7
   14eac:	uxtb	r3, r3
   14eb0:	add	r3, r3, #48	; 0x30
   14eb4:	strb	r3, [fp, #-38]	; 0xffffffda
   14eb8:	b	14f00 <_obstack_memory_used@@Base+0x16ec>
   14ebc:	ldrb	r3, [fp, #-40]	; 0xffffffd8
   14ec0:	cmp	r3, #0
   14ec4:	beq	14f00 <_obstack_memory_used@@Base+0x16ec>
   14ec8:	ldr	r2, [fp, #-20]	; 0xffffffec
   14ecc:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14ed0:	cmp	r2, r3
   14ed4:	bcs	14eec <_obstack_memory_used@@Base+0x16d8>
   14ed8:	ldr	r2, [fp, #-88]	; 0xffffffa8
   14edc:	ldr	r3, [fp, #-20]	; 0xffffffec
   14ee0:	add	r3, r2, r3
   14ee4:	mov	r2, #92	; 0x5c
   14ee8:	strb	r2, [r3]
   14eec:	ldr	r3, [fp, #-20]	; 0xffffffec
   14ef0:	add	r3, r3, #1
   14ef4:	str	r3, [fp, #-20]	; 0xffffffec
   14ef8:	mov	r3, #0
   14efc:	strb	r3, [fp, #-40]	; 0xffffffd8
   14f00:	ldr	r3, [fp, #-16]
   14f04:	add	r3, r3, #1
   14f08:	ldr	r2, [fp, #-68]	; 0xffffffbc
   14f0c:	cmp	r2, r3
   14f10:	bls	14ff0 <_obstack_memory_used@@Base+0x17dc>
   14f14:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   14f18:	cmp	r3, #0
   14f1c:	beq	14f9c <_obstack_memory_used@@Base+0x1788>
   14f20:	ldrb	r3, [fp, #-41]	; 0xffffffd7
   14f24:	eor	r3, r3, #1
   14f28:	uxtb	r3, r3
   14f2c:	cmp	r3, #0
   14f30:	beq	14f9c <_obstack_memory_used@@Base+0x1788>
   14f34:	ldr	r2, [fp, #-20]	; 0xffffffec
   14f38:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14f3c:	cmp	r2, r3
   14f40:	bcs	14f58 <_obstack_memory_used@@Base+0x1744>
   14f44:	ldr	r2, [fp, #-88]	; 0xffffffa8
   14f48:	ldr	r3, [fp, #-20]	; 0xffffffec
   14f4c:	add	r3, r2, r3
   14f50:	mov	r2, #39	; 0x27
   14f54:	strb	r2, [r3]
   14f58:	ldr	r3, [fp, #-20]	; 0xffffffec
   14f5c:	add	r3, r3, #1
   14f60:	str	r3, [fp, #-20]	; 0xffffffec
   14f64:	ldr	r2, [fp, #-20]	; 0xffffffec
   14f68:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14f6c:	cmp	r2, r3
   14f70:	bcs	14f88 <_obstack_memory_used@@Base+0x1774>
   14f74:	ldr	r2, [fp, #-88]	; 0xffffffa8
   14f78:	ldr	r3, [fp, #-20]	; 0xffffffec
   14f7c:	add	r3, r2, r3
   14f80:	mov	r2, #39	; 0x27
   14f84:	strb	r2, [r3]
   14f88:	ldr	r3, [fp, #-20]	; 0xffffffec
   14f8c:	add	r3, r3, #1
   14f90:	str	r3, [fp, #-20]	; 0xffffffec
   14f94:	mov	r3, #0
   14f98:	strb	r3, [fp, #-35]	; 0xffffffdd
   14f9c:	ldr	r2, [fp, #-20]	; 0xffffffec
   14fa0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   14fa4:	cmp	r2, r3
   14fa8:	bcs	14fc0 <_obstack_memory_used@@Base+0x17ac>
   14fac:	ldr	r2, [fp, #-88]	; 0xffffffa8
   14fb0:	ldr	r3, [fp, #-20]	; 0xffffffec
   14fb4:	add	r3, r2, r3
   14fb8:	ldrb	r2, [fp, #-38]	; 0xffffffda
   14fbc:	strb	r2, [r3]
   14fc0:	ldr	r3, [fp, #-20]	; 0xffffffec
   14fc4:	add	r3, r3, #1
   14fc8:	str	r3, [fp, #-20]	; 0xffffffec
   14fcc:	ldr	r3, [fp, #-16]
   14fd0:	add	r3, r3, #1
   14fd4:	str	r3, [fp, #-16]
   14fd8:	ldr	r2, [fp, #-96]	; 0xffffffa0
   14fdc:	ldr	r3, [fp, #-16]
   14fe0:	add	r3, r2, r3
   14fe4:	ldrb	r3, [r3]
   14fe8:	strb	r3, [fp, #-38]	; 0xffffffda
   14fec:	b	14d00 <_obstack_memory_used@@Base+0x14ec>
   14ff0:	nop	{0}
   14ff4:	b	151cc <_obstack_memory_used@@Base+0x19b8>
   14ff8:	nop	{0}
   14ffc:	b	1502c <_obstack_memory_used@@Base+0x1818>
   15000:	nop	{0}
   15004:	b	1502c <_obstack_memory_used@@Base+0x1818>
   15008:	nop	{0}
   1500c:	b	1502c <_obstack_memory_used@@Base+0x1818>
   15010:	nop	{0}
   15014:	b	1502c <_obstack_memory_used@@Base+0x1818>
   15018:	nop	{0}
   1501c:	b	1502c <_obstack_memory_used@@Base+0x1818>
   15020:	nop	{0}
   15024:	b	1502c <_obstack_memory_used@@Base+0x1818>
   15028:	nop	{0}
   1502c:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   15030:	eor	r3, r3, #1
   15034:	uxtb	r3, r3
   15038:	cmp	r3, #0
   1503c:	bne	1504c <_obstack_memory_used@@Base+0x1838>
   15040:	ldr	r3, [fp, #4]
   15044:	cmp	r3, #2
   15048:	bne	15060 <_obstack_memory_used@@Base+0x184c>
   1504c:	ldrb	r3, [fp, #-34]	; 0xffffffde
   15050:	eor	r3, r3, #1
   15054:	uxtb	r3, r3
   15058:	cmp	r3, #0
   1505c:	bne	150a0 <_obstack_memory_used@@Base+0x188c>
   15060:	ldr	r3, [fp, #12]
   15064:	cmp	r3, #0
   15068:	beq	150a0 <_obstack_memory_used@@Base+0x188c>
   1506c:	ldrb	r3, [fp, #-38]	; 0xffffffda
   15070:	lsr	r3, r3, #5
   15074:	uxtb	r3, r3
   15078:	lsl	r3, r3, #2
   1507c:	ldr	r2, [fp, #12]
   15080:	add	r3, r2, r3
   15084:	ldr	r2, [r3]
   15088:	ldrb	r3, [fp, #-38]	; 0xffffffda
   1508c:	and	r3, r3, #31
   15090:	lsr	r3, r2, r3
   15094:	and	r3, r3, #1
   15098:	cmp	r3, #0
   1509c:	bne	150b4 <_obstack_memory_used@@Base+0x18a0>
   150a0:	ldrb	r3, [fp, #-40]	; 0xffffffd8
   150a4:	eor	r3, r3, #1
   150a8:	uxtb	r3, r3
   150ac:	cmp	r3, #0
   150b0:	bne	151c8 <_obstack_memory_used@@Base+0x19b4>
   150b4:	nop	{0}
   150b8:	ldrb	r3, [fp, #-34]	; 0xffffffde
   150bc:	cmp	r3, #0
   150c0:	bne	15498 <_obstack_memory_used@@Base+0x1c84>
   150c4:	mov	r3, #1
   150c8:	strb	r3, [fp, #-41]	; 0xffffffd7
   150cc:	ldr	r3, [fp, #4]
   150d0:	cmp	r3, #2
   150d4:	bne	15184 <_obstack_memory_used@@Base+0x1970>
   150d8:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   150dc:	eor	r3, r3, #1
   150e0:	uxtb	r3, r3
   150e4:	cmp	r3, #0
   150e8:	beq	15184 <_obstack_memory_used@@Base+0x1970>
   150ec:	ldr	r2, [fp, #-20]	; 0xffffffec
   150f0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   150f4:	cmp	r2, r3
   150f8:	bcs	15110 <_obstack_memory_used@@Base+0x18fc>
   150fc:	ldr	r2, [fp, #-88]	; 0xffffffa8
   15100:	ldr	r3, [fp, #-20]	; 0xffffffec
   15104:	add	r3, r2, r3
   15108:	mov	r2, #39	; 0x27
   1510c:	strb	r2, [r3]
   15110:	ldr	r3, [fp, #-20]	; 0xffffffec
   15114:	add	r3, r3, #1
   15118:	str	r3, [fp, #-20]	; 0xffffffec
   1511c:	ldr	r2, [fp, #-20]	; 0xffffffec
   15120:	ldr	r3, [fp, #-92]	; 0xffffffa4
   15124:	cmp	r2, r3
   15128:	bcs	15140 <_obstack_memory_used@@Base+0x192c>
   1512c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   15130:	ldr	r3, [fp, #-20]	; 0xffffffec
   15134:	add	r3, r2, r3
   15138:	mov	r2, #36	; 0x24
   1513c:	strb	r2, [r3]
   15140:	ldr	r3, [fp, #-20]	; 0xffffffec
   15144:	add	r3, r3, #1
   15148:	str	r3, [fp, #-20]	; 0xffffffec
   1514c:	ldr	r2, [fp, #-20]	; 0xffffffec
   15150:	ldr	r3, [fp, #-92]	; 0xffffffa4
   15154:	cmp	r2, r3
   15158:	bcs	15170 <_obstack_memory_used@@Base+0x195c>
   1515c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   15160:	ldr	r3, [fp, #-20]	; 0xffffffec
   15164:	add	r3, r2, r3
   15168:	mov	r2, #39	; 0x27
   1516c:	strb	r2, [r3]
   15170:	ldr	r3, [fp, #-20]	; 0xffffffec
   15174:	add	r3, r3, #1
   15178:	str	r3, [fp, #-20]	; 0xffffffec
   1517c:	mov	r3, #1
   15180:	strb	r3, [fp, #-35]	; 0xffffffdd
   15184:	ldr	r2, [fp, #-20]	; 0xffffffec
   15188:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1518c:	cmp	r2, r3
   15190:	bcs	151a8 <_obstack_memory_used@@Base+0x1994>
   15194:	ldr	r2, [fp, #-88]	; 0xffffffa8
   15198:	ldr	r3, [fp, #-20]	; 0xffffffec
   1519c:	add	r3, r2, r3
   151a0:	mov	r2, #92	; 0x5c
   151a4:	strb	r2, [r3]
   151a8:	ldr	r3, [fp, #-20]	; 0xffffffec
   151ac:	add	r3, r3, #1
   151b0:	str	r3, [fp, #-20]	; 0xffffffec
   151b4:	b	151cc <_obstack_memory_used@@Base+0x19b8>
   151b8:	nop	{0}
   151bc:	b	151cc <_obstack_memory_used@@Base+0x19b8>
   151c0:	nop	{0}
   151c4:	b	151cc <_obstack_memory_used@@Base+0x19b8>
   151c8:	nop	{0}
   151cc:	ldrb	r3, [fp, #-35]	; 0xffffffdd
   151d0:	cmp	r3, #0
   151d4:	beq	15254 <_obstack_memory_used@@Base+0x1a40>
   151d8:	ldrb	r3, [fp, #-41]	; 0xffffffd7
   151dc:	eor	r3, r3, #1
   151e0:	uxtb	r3, r3
   151e4:	cmp	r3, #0
   151e8:	beq	15254 <_obstack_memory_used@@Base+0x1a40>
   151ec:	ldr	r2, [fp, #-20]	; 0xffffffec
   151f0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   151f4:	cmp	r2, r3
   151f8:	bcs	15210 <_obstack_memory_used@@Base+0x19fc>
   151fc:	ldr	r2, [fp, #-88]	; 0xffffffa8
   15200:	ldr	r3, [fp, #-20]	; 0xffffffec
   15204:	add	r3, r2, r3
   15208:	mov	r2, #39	; 0x27
   1520c:	strb	r2, [r3]
   15210:	ldr	r3, [fp, #-20]	; 0xffffffec
   15214:	add	r3, r3, #1
   15218:	str	r3, [fp, #-20]	; 0xffffffec
   1521c:	ldr	r2, [fp, #-20]	; 0xffffffec
   15220:	ldr	r3, [fp, #-92]	; 0xffffffa4
   15224:	cmp	r2, r3
   15228:	bcs	15240 <_obstack_memory_used@@Base+0x1a2c>
   1522c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   15230:	ldr	r3, [fp, #-20]	; 0xffffffec
   15234:	add	r3, r2, r3
   15238:	mov	r2, #39	; 0x27
   1523c:	strb	r2, [r3]
   15240:	ldr	r3, [fp, #-20]	; 0xffffffec
   15244:	add	r3, r3, #1
   15248:	str	r3, [fp, #-20]	; 0xffffffec
   1524c:	mov	r3, #0
   15250:	strb	r3, [fp, #-35]	; 0xffffffdd
   15254:	ldr	r2, [fp, #-20]	; 0xffffffec
   15258:	ldr	r3, [fp, #-92]	; 0xffffffa4
   1525c:	cmp	r2, r3
   15260:	bcs	15278 <_obstack_memory_used@@Base+0x1a64>
   15264:	ldr	r2, [fp, #-88]	; 0xffffffa8
   15268:	ldr	r3, [fp, #-20]	; 0xffffffec
   1526c:	add	r3, r2, r3
   15270:	ldrb	r2, [fp, #-38]	; 0xffffffda
   15274:	strb	r2, [r3]
   15278:	ldr	r3, [fp, #-20]	; 0xffffffec
   1527c:	add	r3, r3, #1
   15280:	str	r3, [fp, #-20]	; 0xffffffec
   15284:	ldrb	r3, [fp, #-42]	; 0xffffffd6
   15288:	eor	r3, r3, #1
   1528c:	uxtb	r3, r3
   15290:	cmp	r3, #0
   15294:	beq	152a0 <_obstack_memory_used@@Base+0x1a8c>
   15298:	mov	r3, #0
   1529c:	strb	r3, [fp, #-37]	; 0xffffffdb
   152a0:	ldr	r3, [fp, #-16]
   152a4:	add	r3, r3, #1
   152a8:	str	r3, [fp, #-16]
   152ac:	ldr	r3, [fp, #-100]	; 0xffffff9c
   152b0:	cmn	r3, #1
   152b4:	bne	152dc <_obstack_memory_used@@Base+0x1ac8>
   152b8:	ldr	r2, [fp, #-96]	; 0xffffffa0
   152bc:	ldr	r3, [fp, #-16]
   152c0:	add	r3, r2, r3
   152c4:	ldrb	r3, [r3]
   152c8:	cmp	r3, #0
   152cc:	movne	r3, #1
   152d0:	moveq	r3, #0
   152d4:	uxtb	r3, r3
   152d8:	b	152f4 <_obstack_memory_used@@Base+0x1ae0>
   152dc:	ldr	r2, [fp, #-16]
   152e0:	ldr	r3, [fp, #-100]	; 0xffffff9c
   152e4:	cmp	r2, r3
   152e8:	movne	r3, #1
   152ec:	moveq	r3, #0
   152f0:	uxtb	r3, r3
   152f4:	cmp	r3, #0
   152f8:	bne	14114 <_obstack_memory_used@@Base+0x900>
   152fc:	ldr	r3, [fp, #-20]	; 0xffffffec
   15300:	cmp	r3, #0
   15304:	bne	15320 <_obstack_memory_used@@Base+0x1b0c>
   15308:	ldr	r3, [fp, #4]
   1530c:	cmp	r3, #2
   15310:	bne	15320 <_obstack_memory_used@@Base+0x1b0c>
   15314:	ldrb	r3, [fp, #-34]	; 0xffffffde
   15318:	cmp	r3, #0
   1531c:	bne	154a0 <_obstack_memory_used@@Base+0x1c8c>
   15320:	ldr	r3, [fp, #4]
   15324:	cmp	r3, #2
   15328:	bne	153c8 <_obstack_memory_used@@Base+0x1bb4>
   1532c:	ldrb	r3, [fp, #-34]	; 0xffffffde
   15330:	eor	r3, r3, #1
   15334:	uxtb	r3, r3
   15338:	cmp	r3, #0
   1533c:	beq	153c8 <_obstack_memory_used@@Base+0x1bb4>
   15340:	ldrb	r3, [fp, #-36]	; 0xffffffdc
   15344:	cmp	r3, #0
   15348:	beq	153c8 <_obstack_memory_used@@Base+0x1bb4>
   1534c:	ldrb	r3, [fp, #-37]	; 0xffffffdb
   15350:	cmp	r3, #0
   15354:	beq	1539c <_obstack_memory_used@@Base+0x1b88>
   15358:	ldr	r3, [fp, #20]
   1535c:	str	r3, [sp, #16]
   15360:	ldr	r3, [fp, #16]
   15364:	str	r3, [sp, #12]
   15368:	ldr	r3, [fp, #12]
   1536c:	str	r3, [sp, #8]
   15370:	ldr	r3, [fp, #8]
   15374:	str	r3, [sp, #4]
   15378:	mov	r3, #5
   1537c:	str	r3, [sp]
   15380:	ldr	r3, [fp, #-100]	; 0xffffff9c
   15384:	ldr	r2, [fp, #-96]	; 0xffffffa0
   15388:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1538c:	ldr	r0, [fp, #-88]	; 0xffffffa8
   15390:	bl	13e4c <_obstack_memory_used@@Base+0x638>
   15394:	mov	r3, r0
   15398:	b	15508 <_obstack_memory_used@@Base+0x1cf4>
   1539c:	ldr	r3, [fp, #-92]	; 0xffffffa4
   153a0:	cmp	r3, #0
   153a4:	bne	153c8 <_obstack_memory_used@@Base+0x1bb4>
   153a8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   153ac:	cmp	r3, #0
   153b0:	beq	153c8 <_obstack_memory_used@@Base+0x1bb4>
   153b4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   153b8:	str	r3, [fp, #-92]	; 0xffffffa4
   153bc:	mov	r3, #0
   153c0:	str	r3, [fp, #-20]	; 0xffffffec
   153c4:	b	13ee0 <_obstack_memory_used@@Base+0x6cc>
   153c8:	ldr	r3, [fp, #-28]	; 0xffffffe4
   153cc:	cmp	r3, #0
   153d0:	beq	1543c <_obstack_memory_used@@Base+0x1c28>
   153d4:	ldrb	r3, [fp, #-34]	; 0xffffffde
   153d8:	eor	r3, r3, #1
   153dc:	uxtb	r3, r3
   153e0:	cmp	r3, #0
   153e4:	beq	1543c <_obstack_memory_used@@Base+0x1c28>
   153e8:	b	1542c <_obstack_memory_used@@Base+0x1c18>
   153ec:	ldr	r2, [fp, #-20]	; 0xffffffec
   153f0:	ldr	r3, [fp, #-92]	; 0xffffffa4
   153f4:	cmp	r2, r3
   153f8:	bcs	15414 <_obstack_memory_used@@Base+0x1c00>
   153fc:	ldr	r2, [fp, #-88]	; 0xffffffa8
   15400:	ldr	r3, [fp, #-20]	; 0xffffffec
   15404:	add	r3, r2, r3
   15408:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1540c:	ldrb	r2, [r2]
   15410:	strb	r2, [r3]
   15414:	ldr	r3, [fp, #-20]	; 0xffffffec
   15418:	add	r3, r3, #1
   1541c:	str	r3, [fp, #-20]	; 0xffffffec
   15420:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15424:	add	r3, r3, #1
   15428:	str	r3, [fp, #-28]	; 0xffffffe4
   1542c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15430:	ldrb	r3, [r3]
   15434:	cmp	r3, #0
   15438:	bne	153ec <_obstack_memory_used@@Base+0x1bd8>
   1543c:	ldr	r2, [fp, #-20]	; 0xffffffec
   15440:	ldr	r3, [fp, #-92]	; 0xffffffa4
   15444:	cmp	r2, r3
   15448:	bcs	15460 <_obstack_memory_used@@Base+0x1c4c>
   1544c:	ldr	r2, [fp, #-88]	; 0xffffffa8
   15450:	ldr	r3, [fp, #-20]	; 0xffffffec
   15454:	add	r3, r2, r3
   15458:	mov	r2, #0
   1545c:	strb	r2, [r3]
   15460:	ldr	r3, [fp, #-20]	; 0xffffffec
   15464:	b	15508 <_obstack_memory_used@@Base+0x1cf4>
   15468:	nop	{0}
   1546c:	b	154a4 <_obstack_memory_used@@Base+0x1c90>
   15470:	nop	{0}
   15474:	b	154a4 <_obstack_memory_used@@Base+0x1c90>
   15478:	nop	{0}
   1547c:	b	154a4 <_obstack_memory_used@@Base+0x1c90>
   15480:	nop	{0}
   15484:	b	154a4 <_obstack_memory_used@@Base+0x1c90>
   15488:	nop	{0}
   1548c:	b	154a4 <_obstack_memory_used@@Base+0x1c90>
   15490:	nop	{0}
   15494:	b	154a4 <_obstack_memory_used@@Base+0x1c90>
   15498:	nop	{0}
   1549c:	b	154a4 <_obstack_memory_used@@Base+0x1c90>
   154a0:	nop	{0}
   154a4:	ldr	r3, [fp, #4]
   154a8:	cmp	r3, #2
   154ac:	bne	154c4 <_obstack_memory_used@@Base+0x1cb0>
   154b0:	ldrb	r3, [fp, #-33]	; 0xffffffdf
   154b4:	cmp	r3, #0
   154b8:	beq	154c4 <_obstack_memory_used@@Base+0x1cb0>
   154bc:	mov	r3, #4
   154c0:	str	r3, [fp, #4]
   154c4:	ldr	r3, [fp, #8]
   154c8:	bic	r3, r3, #2
   154cc:	ldr	r2, [fp, #20]
   154d0:	str	r2, [sp, #16]
   154d4:	ldr	r2, [fp, #16]
   154d8:	str	r2, [sp, #12]
   154dc:	mov	r2, #0
   154e0:	str	r2, [sp, #8]
   154e4:	str	r3, [sp, #4]
   154e8:	ldr	r3, [fp, #4]
   154ec:	str	r3, [sp]
   154f0:	ldr	r3, [fp, #-100]	; 0xffffff9c
   154f4:	ldr	r2, [fp, #-96]	; 0xffffffa0
   154f8:	ldr	r1, [fp, #-92]	; 0xffffffa4
   154fc:	ldr	r0, [fp, #-88]	; 0xffffffa8
   15500:	bl	13e4c <_obstack_memory_used@@Base+0x638>
   15504:	mov	r3, r0
   15508:	mov	r0, r3
   1550c:	sub	sp, fp, #8
   15510:	ldr	r4, [sp]
   15514:	ldr	fp, [sp, #4]
   15518:	add	sp, sp, #8
   1551c:	pop	{pc}		; (ldr pc, [sp], #4)
   15520:	str	fp, [sp, #-8]!
   15524:	str	lr, [sp, #4]
   15528:	add	fp, sp, #4
   1552c:	sub	sp, sp, #56	; 0x38
   15530:	str	r0, [fp, #-24]	; 0xffffffe8
   15534:	str	r1, [fp, #-28]	; 0xffffffe4
   15538:	str	r2, [fp, #-32]	; 0xffffffe0
   1553c:	str	r3, [fp, #-36]	; 0xffffffdc
   15540:	ldr	r3, [fp, #4]
   15544:	cmp	r3, #0
   15548:	beq	15554 <_obstack_memory_used@@Base+0x1d40>
   1554c:	ldr	r3, [fp, #4]
   15550:	b	1555c <_obstack_memory_used@@Base+0x1d48>
   15554:	movw	r3, #45460	; 0xb194
   15558:	movt	r3, #2
   1555c:	str	r3, [fp, #-8]
   15560:	bl	10f18 <__errno_location@plt>
   15564:	mov	r3, r0
   15568:	ldr	r3, [r3]
   1556c:	str	r3, [fp, #-12]
   15570:	ldr	r3, [fp, #-8]
   15574:	ldr	r3, [r3]
   15578:	ldr	r2, [fp, #-8]
   1557c:	ldr	r2, [r2, #4]
   15580:	ldr	r1, [fp, #-8]
   15584:	add	r1, r1, #8
   15588:	ldr	r0, [fp, #-8]
   1558c:	ldr	r0, [r0, #40]	; 0x28
   15590:	ldr	ip, [fp, #-8]
   15594:	ldr	ip, [ip, #44]	; 0x2c
   15598:	str	ip, [sp, #16]
   1559c:	str	r0, [sp, #12]
   155a0:	str	r1, [sp, #8]
   155a4:	str	r2, [sp, #4]
   155a8:	str	r3, [sp]
   155ac:	ldr	r3, [fp, #-36]	; 0xffffffdc
   155b0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   155b4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   155b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   155bc:	bl	13e4c <_obstack_memory_used@@Base+0x638>
   155c0:	str	r0, [fp, #-16]
   155c4:	bl	10f18 <__errno_location@plt>
   155c8:	mov	r2, r0
   155cc:	ldr	r3, [fp, #-12]
   155d0:	str	r3, [r2]
   155d4:	ldr	r3, [fp, #-16]
   155d8:	mov	r0, r3
   155dc:	sub	sp, fp, #4
   155e0:	ldr	fp, [sp]
   155e4:	add	sp, sp, #4
   155e8:	pop	{pc}		; (ldr pc, [sp], #4)
   155ec:	str	fp, [sp, #-8]!
   155f0:	str	lr, [sp, #4]
   155f4:	add	fp, sp, #4
   155f8:	sub	sp, sp, #16
   155fc:	str	r0, [fp, #-8]
   15600:	str	r1, [fp, #-12]
   15604:	str	r2, [fp, #-16]
   15608:	ldr	r3, [fp, #-16]
   1560c:	mov	r2, #0
   15610:	ldr	r1, [fp, #-12]
   15614:	ldr	r0, [fp, #-8]
   15618:	bl	15634 <_obstack_memory_used@@Base+0x1e20>
   1561c:	mov	r3, r0
   15620:	mov	r0, r3
   15624:	sub	sp, fp, #4
   15628:	ldr	fp, [sp]
   1562c:	add	sp, sp, #4
   15630:	pop	{pc}		; (ldr pc, [sp], #4)
   15634:	str	fp, [sp, #-8]!
   15638:	str	lr, [sp, #4]
   1563c:	add	fp, sp, #4
   15640:	sub	sp, sp, #64	; 0x40
   15644:	str	r0, [fp, #-32]	; 0xffffffe0
   15648:	str	r1, [fp, #-36]	; 0xffffffdc
   1564c:	str	r2, [fp, #-40]	; 0xffffffd8
   15650:	str	r3, [fp, #-44]	; 0xffffffd4
   15654:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15658:	cmp	r3, #0
   1565c:	beq	15668 <_obstack_memory_used@@Base+0x1e54>
   15660:	ldr	r3, [fp, #-44]	; 0xffffffd4
   15664:	b	15670 <_obstack_memory_used@@Base+0x1e5c>
   15668:	movw	r3, #45460	; 0xb194
   1566c:	movt	r3, #2
   15670:	str	r3, [fp, #-8]
   15674:	bl	10f18 <__errno_location@plt>
   15678:	mov	r3, r0
   1567c:	ldr	r3, [r3]
   15680:	str	r3, [fp, #-12]
   15684:	ldr	r3, [fp, #-8]
   15688:	ldr	r3, [r3, #4]
   1568c:	ldr	r2, [fp, #-40]	; 0xffffffd8
   15690:	cmp	r2, #0
   15694:	moveq	r2, #1
   15698:	movne	r2, #0
   1569c:	uxtb	r2, r2
   156a0:	orr	r3, r3, r2
   156a4:	str	r3, [fp, #-16]
   156a8:	ldr	r3, [fp, #-8]
   156ac:	ldr	r3, [r3]
   156b0:	ldr	r2, [fp, #-8]
   156b4:	add	r2, r2, #8
   156b8:	ldr	r1, [fp, #-8]
   156bc:	ldr	r1, [r1, #40]	; 0x28
   156c0:	ldr	r0, [fp, #-8]
   156c4:	ldr	r0, [r0, #44]	; 0x2c
   156c8:	str	r0, [sp, #16]
   156cc:	str	r1, [sp, #12]
   156d0:	str	r2, [sp, #8]
   156d4:	ldr	r2, [fp, #-16]
   156d8:	str	r2, [sp, #4]
   156dc:	str	r3, [sp]
   156e0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   156e4:	ldr	r2, [fp, #-32]	; 0xffffffe0
   156e8:	mov	r1, #0
   156ec:	mov	r0, #0
   156f0:	bl	13e4c <_obstack_memory_used@@Base+0x638>
   156f4:	mov	r3, r0
   156f8:	add	r3, r3, #1
   156fc:	str	r3, [fp, #-20]	; 0xffffffec
   15700:	ldr	r0, [fp, #-20]	; 0xffffffec
   15704:	bl	16b44 <_obstack_memory_used@@Base+0x3330>
   15708:	mov	r3, r0
   1570c:	str	r3, [fp, #-24]	; 0xffffffe8
   15710:	ldr	r3, [fp, #-8]
   15714:	ldr	r3, [r3]
   15718:	ldr	r2, [fp, #-8]
   1571c:	add	r2, r2, #8
   15720:	ldr	r1, [fp, #-8]
   15724:	ldr	r1, [r1, #40]	; 0x28
   15728:	ldr	r0, [fp, #-8]
   1572c:	ldr	r0, [r0, #44]	; 0x2c
   15730:	str	r0, [sp, #16]
   15734:	str	r1, [sp, #12]
   15738:	str	r2, [sp, #8]
   1573c:	ldr	r2, [fp, #-16]
   15740:	str	r2, [sp, #4]
   15744:	str	r3, [sp]
   15748:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1574c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   15750:	ldr	r1, [fp, #-20]	; 0xffffffec
   15754:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15758:	bl	13e4c <_obstack_memory_used@@Base+0x638>
   1575c:	bl	10f18 <__errno_location@plt>
   15760:	mov	r2, r0
   15764:	ldr	r3, [fp, #-12]
   15768:	str	r3, [r2]
   1576c:	ldr	r3, [fp, #-40]	; 0xffffffd8
   15770:	cmp	r3, #0
   15774:	beq	15788 <_obstack_memory_used@@Base+0x1f74>
   15778:	ldr	r3, [fp, #-20]	; 0xffffffec
   1577c:	sub	r2, r3, #1
   15780:	ldr	r3, [fp, #-40]	; 0xffffffd8
   15784:	str	r2, [r3]
   15788:	ldr	r3, [fp, #-24]	; 0xffffffe8
   1578c:	mov	r0, r3
   15790:	sub	sp, fp, #4
   15794:	ldr	fp, [sp]
   15798:	add	sp, sp, #4
   1579c:	pop	{pc}		; (ldr pc, [sp], #4)
   157a0:	str	fp, [sp, #-8]!
   157a4:	str	lr, [sp, #4]
   157a8:	add	fp, sp, #4
   157ac:	sub	sp, sp, #8
   157b0:	movw	r3, #45312	; 0xb100
   157b4:	movt	r3, #2
   157b8:	ldr	r3, [r3]
   157bc:	str	r3, [fp, #-12]
   157c0:	mov	r3, #1
   157c4:	str	r3, [fp, #-8]
   157c8:	b	157f4 <_obstack_memory_used@@Base+0x1fe0>
   157cc:	ldr	r3, [fp, #-8]
   157d0:	lsl	r3, r3, #3
   157d4:	ldr	r2, [fp, #-12]
   157d8:	add	r3, r2, r3
   157dc:	ldr	r3, [r3, #4]
   157e0:	mov	r0, r3
   157e4:	bl	12d24 <close@plt+0x1d70>
   157e8:	ldr	r3, [fp, #-8]
   157ec:	add	r3, r3, #1
   157f0:	str	r3, [fp, #-8]
   157f4:	movw	r3, #45300	; 0xb0f4
   157f8:	movt	r3, #2
   157fc:	ldr	r3, [r3]
   15800:	ldr	r2, [fp, #-8]
   15804:	cmp	r2, r3
   15808:	blt	157cc <_obstack_memory_used@@Base+0x1fb8>
   1580c:	ldr	r3, [fp, #-12]
   15810:	ldr	r2, [r3, #4]
   15814:	movw	r3, #45508	; 0xb1c4
   15818:	movt	r3, #2
   1581c:	cmp	r2, r3
   15820:	beq	15858 <_obstack_memory_used@@Base+0x2044>
   15824:	ldr	r3, [fp, #-12]
   15828:	ldr	r3, [r3, #4]
   1582c:	mov	r0, r3
   15830:	bl	12d24 <close@plt+0x1d70>
   15834:	movw	r3, #45304	; 0xb0f8
   15838:	movt	r3, #2
   1583c:	mov	r2, #256	; 0x100
   15840:	str	r2, [r3]
   15844:	movw	r3, #45304	; 0xb0f8
   15848:	movt	r3, #2
   1584c:	movw	r2, #45508	; 0xb1c4
   15850:	movt	r2, #2
   15854:	str	r2, [r3, #4]
   15858:	ldr	r2, [fp, #-12]
   1585c:	movw	r3, #45304	; 0xb0f8
   15860:	movt	r3, #2
   15864:	cmp	r2, r3
   15868:	beq	15888 <_obstack_memory_used@@Base+0x2074>
   1586c:	ldr	r0, [fp, #-12]
   15870:	bl	12d24 <close@plt+0x1d70>
   15874:	movw	r3, #45312	; 0xb100
   15878:	movt	r3, #2
   1587c:	movw	r2, #45304	; 0xb0f8
   15880:	movt	r2, #2
   15884:	str	r2, [r3]
   15888:	movw	r3, #45300	; 0xb0f4
   1588c:	movt	r3, #2
   15890:	mov	r2, #1
   15894:	str	r2, [r3]
   15898:	nop	{0}
   1589c:	sub	sp, fp, #4
   158a0:	ldr	fp, [sp]
   158a4:	add	sp, sp, #4
   158a8:	pop	{pc}		; (ldr pc, [sp], #4)
   158ac:	str	fp, [sp, #-8]!
   158b0:	str	lr, [sp, #4]
   158b4:	add	fp, sp, #4
   158b8:	sub	sp, sp, #80	; 0x50
   158bc:	str	r0, [fp, #-48]	; 0xffffffd0
   158c0:	str	r1, [fp, #-52]	; 0xffffffcc
   158c4:	str	r2, [fp, #-56]	; 0xffffffc8
   158c8:	str	r3, [fp, #-60]	; 0xffffffc4
   158cc:	bl	10f18 <__errno_location@plt>
   158d0:	mov	r3, r0
   158d4:	ldr	r3, [r3]
   158d8:	str	r3, [fp, #-16]
   158dc:	movw	r3, #45312	; 0xb100
   158e0:	movt	r3, #2
   158e4:	ldr	r3, [r3]
   158e8:	str	r3, [fp, #-8]
   158ec:	mvn	r3, #-2147483648	; 0x80000000
   158f0:	str	r3, [fp, #-20]	; 0xffffffec
   158f4:	ldr	r3, [fp, #-48]	; 0xffffffd0
   158f8:	cmp	r3, #0
   158fc:	blt	15910 <_obstack_memory_used@@Base+0x20fc>
   15900:	ldr	r2, [fp, #-48]	; 0xffffffd0
   15904:	ldr	r3, [fp, #-20]	; 0xffffffec
   15908:	cmp	r2, r3
   1590c:	blt	15914 <_obstack_memory_used@@Base+0x2100>
   15910:	bl	10fa8 <abort@plt>
   15914:	movw	r3, #45300	; 0xb0f4
   15918:	movt	r3, #2
   1591c:	ldr	r3, [r3]
   15920:	ldr	r2, [fp, #-48]	; 0xffffffd0
   15924:	cmp	r2, r3
   15928:	blt	15a20 <_obstack_memory_used@@Base+0x220c>
   1592c:	ldr	r2, [fp, #-8]
   15930:	movw	r3, #45304	; 0xb0f8
   15934:	movt	r3, #2
   15938:	cmp	r2, r3
   1593c:	moveq	r3, #1
   15940:	movne	r3, #0
   15944:	strb	r3, [fp, #-21]	; 0xffffffeb
   15948:	movw	r3, #45300	; 0xb0f4
   1594c:	movt	r3, #2
   15950:	ldr	r3, [r3]
   15954:	str	r3, [fp, #-40]	; 0xffffffd8
   15958:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   1595c:	cmp	r3, #0
   15960:	beq	1596c <_obstack_memory_used@@Base+0x2158>
   15964:	mov	r0, #0
   15968:	b	15970 <_obstack_memory_used@@Base+0x215c>
   1596c:	ldr	r0, [fp, #-8]
   15970:	movw	r3, #45300	; 0xb0f4
   15974:	movt	r3, #2
   15978:	ldr	r3, [r3]
   1597c:	ldr	r2, [fp, #-48]	; 0xffffffd0
   15980:	sub	r3, r2, r3
   15984:	add	r2, r3, #1
   15988:	sub	r1, fp, #40	; 0x28
   1598c:	mov	r3, #8
   15990:	str	r3, [sp]
   15994:	ldr	r3, [fp, #-20]	; 0xffffffec
   15998:	bl	16ea4 <_obstack_memory_used@@Base+0x3690>
   1599c:	str	r0, [fp, #-8]
   159a0:	movw	r3, #45312	; 0xb100
   159a4:	movt	r3, #2
   159a8:	ldr	r2, [fp, #-8]
   159ac:	str	r2, [r3]
   159b0:	ldrb	r3, [fp, #-21]	; 0xffffffeb
   159b4:	cmp	r3, #0
   159b8:	beq	159d4 <_obstack_memory_used@@Base+0x21c0>
   159bc:	ldr	r2, [fp, #-8]
   159c0:	movw	r3, #45304	; 0xb0f8
   159c4:	movt	r3, #2
   159c8:	mov	r1, r2
   159cc:	ldrd	r2, [r3]
   159d0:	strd	r2, [r1]
   159d4:	movw	r3, #45300	; 0xb0f4
   159d8:	movt	r3, #2
   159dc:	ldr	r3, [r3]
   159e0:	lsl	r3, r3, #3
   159e4:	ldr	r2, [fp, #-8]
   159e8:	add	r0, r2, r3
   159ec:	ldr	r2, [fp, #-40]	; 0xffffffd8
   159f0:	movw	r3, #45300	; 0xb0f4
   159f4:	movt	r3, #2
   159f8:	ldr	r3, [r3]
   159fc:	sub	r3, r2, r3
   15a00:	lsl	r3, r3, #3
   15a04:	mov	r2, r3
   15a08:	mov	r1, #0
   15a0c:	bl	10f30 <memset@plt>
   15a10:	ldr	r2, [fp, #-40]	; 0xffffffd8
   15a14:	movw	r3, #45300	; 0xb0f4
   15a18:	movt	r3, #2
   15a1c:	str	r2, [r3]
   15a20:	ldr	r3, [fp, #-48]	; 0xffffffd0
   15a24:	lsl	r3, r3, #3
   15a28:	ldr	r2, [fp, #-8]
   15a2c:	add	r3, r2, r3
   15a30:	ldr	r3, [r3]
   15a34:	str	r3, [fp, #-28]	; 0xffffffe4
   15a38:	ldr	r3, [fp, #-48]	; 0xffffffd0
   15a3c:	lsl	r3, r3, #3
   15a40:	ldr	r2, [fp, #-8]
   15a44:	add	r3, r2, r3
   15a48:	ldr	r3, [r3, #4]
   15a4c:	str	r3, [fp, #-12]
   15a50:	ldr	r3, [fp, #-60]	; 0xffffffc4
   15a54:	ldr	r3, [r3, #4]
   15a58:	orr	r3, r3, #1
   15a5c:	str	r3, [fp, #-32]	; 0xffffffe0
   15a60:	ldr	r3, [fp, #-60]	; 0xffffffc4
   15a64:	ldr	r3, [r3]
   15a68:	ldr	r2, [fp, #-60]	; 0xffffffc4
   15a6c:	add	r2, r2, #8
   15a70:	ldr	r1, [fp, #-60]	; 0xffffffc4
   15a74:	ldr	r1, [r1, #40]	; 0x28
   15a78:	ldr	r0, [fp, #-60]	; 0xffffffc4
   15a7c:	ldr	r0, [r0, #44]	; 0x2c
   15a80:	str	r0, [sp, #16]
   15a84:	str	r1, [sp, #12]
   15a88:	str	r2, [sp, #8]
   15a8c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   15a90:	str	r2, [sp, #4]
   15a94:	str	r3, [sp]
   15a98:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15a9c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   15aa0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15aa4:	ldr	r0, [fp, #-12]
   15aa8:	bl	13e4c <_obstack_memory_used@@Base+0x638>
   15aac:	str	r0, [fp, #-36]	; 0xffffffdc
   15ab0:	ldr	r2, [fp, #-28]	; 0xffffffe4
   15ab4:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15ab8:	cmp	r2, r3
   15abc:	bhi	15b74 <_obstack_memory_used@@Base+0x2360>
   15ac0:	ldr	r3, [fp, #-36]	; 0xffffffdc
   15ac4:	add	r3, r3, #1
   15ac8:	str	r3, [fp, #-28]	; 0xffffffe4
   15acc:	ldr	r3, [fp, #-48]	; 0xffffffd0
   15ad0:	lsl	r3, r3, #3
   15ad4:	ldr	r2, [fp, #-8]
   15ad8:	add	r3, r2, r3
   15adc:	ldr	r2, [fp, #-28]	; 0xffffffe4
   15ae0:	str	r2, [r3]
   15ae4:	ldr	r2, [fp, #-12]
   15ae8:	movw	r3, #45508	; 0xb1c4
   15aec:	movt	r3, #2
   15af0:	cmp	r2, r3
   15af4:	beq	15b00 <_obstack_memory_used@@Base+0x22ec>
   15af8:	ldr	r0, [fp, #-12]
   15afc:	bl	12d24 <close@plt+0x1d70>
   15b00:	ldr	r0, [fp, #-28]	; 0xffffffe4
   15b04:	bl	16b44 <_obstack_memory_used@@Base+0x3330>
   15b08:	mov	r3, r0
   15b0c:	str	r3, [fp, #-12]
   15b10:	ldr	r3, [fp, #-48]	; 0xffffffd0
   15b14:	lsl	r3, r3, #3
   15b18:	ldr	r2, [fp, #-8]
   15b1c:	add	r3, r2, r3
   15b20:	ldr	r2, [fp, #-12]
   15b24:	str	r2, [r3, #4]
   15b28:	ldr	r3, [fp, #-60]	; 0xffffffc4
   15b2c:	ldr	r3, [r3]
   15b30:	ldr	r2, [fp, #-60]	; 0xffffffc4
   15b34:	add	r2, r2, #8
   15b38:	ldr	r1, [fp, #-60]	; 0xffffffc4
   15b3c:	ldr	r1, [r1, #40]	; 0x28
   15b40:	ldr	r0, [fp, #-60]	; 0xffffffc4
   15b44:	ldr	r0, [r0, #44]	; 0x2c
   15b48:	str	r0, [sp, #16]
   15b4c:	str	r1, [sp, #12]
   15b50:	str	r2, [sp, #8]
   15b54:	ldr	r2, [fp, #-32]	; 0xffffffe0
   15b58:	str	r2, [sp, #4]
   15b5c:	str	r3, [sp]
   15b60:	ldr	r3, [fp, #-56]	; 0xffffffc8
   15b64:	ldr	r2, [fp, #-52]	; 0xffffffcc
   15b68:	ldr	r1, [fp, #-28]	; 0xffffffe4
   15b6c:	ldr	r0, [fp, #-12]
   15b70:	bl	13e4c <_obstack_memory_used@@Base+0x638>
   15b74:	bl	10f18 <__errno_location@plt>
   15b78:	mov	r2, r0
   15b7c:	ldr	r3, [fp, #-16]
   15b80:	str	r3, [r2]
   15b84:	ldr	r3, [fp, #-12]
   15b88:	mov	r0, r3
   15b8c:	sub	sp, fp, #4
   15b90:	ldr	fp, [sp]
   15b94:	add	sp, sp, #4
   15b98:	pop	{pc}		; (ldr pc, [sp], #4)
   15b9c:	str	fp, [sp, #-8]!
   15ba0:	str	lr, [sp, #4]
   15ba4:	add	fp, sp, #4
   15ba8:	sub	sp, sp, #8
   15bac:	str	r0, [fp, #-8]
   15bb0:	str	r1, [fp, #-12]
   15bb4:	movw	r3, #45460	; 0xb194
   15bb8:	movt	r3, #2
   15bbc:	mvn	r2, #0
   15bc0:	ldr	r1, [fp, #-12]
   15bc4:	ldr	r0, [fp, #-8]
   15bc8:	bl	158ac <_obstack_memory_used@@Base+0x2098>
   15bcc:	mov	r3, r0
   15bd0:	mov	r0, r3
   15bd4:	sub	sp, fp, #4
   15bd8:	ldr	fp, [sp]
   15bdc:	add	sp, sp, #4
   15be0:	pop	{pc}		; (ldr pc, [sp], #4)
   15be4:	str	fp, [sp, #-8]!
   15be8:	str	lr, [sp, #4]
   15bec:	add	fp, sp, #4
   15bf0:	sub	sp, sp, #16
   15bf4:	str	r0, [fp, #-8]
   15bf8:	str	r1, [fp, #-12]
   15bfc:	str	r2, [fp, #-16]
   15c00:	movw	r3, #45460	; 0xb194
   15c04:	movt	r3, #2
   15c08:	ldr	r2, [fp, #-16]
   15c0c:	ldr	r1, [fp, #-12]
   15c10:	ldr	r0, [fp, #-8]
   15c14:	bl	158ac <_obstack_memory_used@@Base+0x2098>
   15c18:	mov	r3, r0
   15c1c:	mov	r0, r3
   15c20:	sub	sp, fp, #4
   15c24:	ldr	fp, [sp]
   15c28:	add	sp, sp, #4
   15c2c:	pop	{pc}		; (ldr pc, [sp], #4)
   15c30:	str	fp, [sp, #-8]!
   15c34:	str	lr, [sp, #4]
   15c38:	add	fp, sp, #4
   15c3c:	sub	sp, sp, #8
   15c40:	str	r0, [fp, #-8]
   15c44:	ldr	r1, [fp, #-8]
   15c48:	mov	r0, #0
   15c4c:	bl	15b9c <_obstack_memory_used@@Base+0x2388>
   15c50:	mov	r3, r0
   15c54:	mov	r0, r3
   15c58:	sub	sp, fp, #4
   15c5c:	ldr	fp, [sp]
   15c60:	add	sp, sp, #4
   15c64:	pop	{pc}		; (ldr pc, [sp], #4)
   15c68:	str	fp, [sp, #-8]!
   15c6c:	str	lr, [sp, #4]
   15c70:	add	fp, sp, #4
   15c74:	sub	sp, sp, #8
   15c78:	str	r0, [fp, #-8]
   15c7c:	str	r1, [fp, #-12]
   15c80:	ldr	r2, [fp, #-12]
   15c84:	ldr	r1, [fp, #-8]
   15c88:	mov	r0, #0
   15c8c:	bl	15be4 <_obstack_memory_used@@Base+0x23d0>
   15c90:	mov	r3, r0
   15c94:	mov	r0, r3
   15c98:	sub	sp, fp, #4
   15c9c:	ldr	fp, [sp]
   15ca0:	add	sp, sp, #4
   15ca4:	pop	{pc}		; (ldr pc, [sp], #4)
   15ca8:	str	fp, [sp, #-8]!
   15cac:	str	lr, [sp, #4]
   15cb0:	add	fp, sp, #4
   15cb4:	sub	sp, sp, #64	; 0x40
   15cb8:	str	r0, [fp, #-56]	; 0xffffffc8
   15cbc:	str	r1, [fp, #-60]	; 0xffffffc4
   15cc0:	str	r2, [fp, #-64]	; 0xffffffc0
   15cc4:	sub	r3, fp, #52	; 0x34
   15cc8:	ldr	r1, [fp, #-60]	; 0xffffffc4
   15ccc:	mov	r0, r3
   15cd0:	bl	13ca8 <_obstack_memory_used@@Base+0x494>
   15cd4:	sub	r3, fp, #52	; 0x34
   15cd8:	mvn	r2, #0
   15cdc:	ldr	r1, [fp, #-64]	; 0xffffffc0
   15ce0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15ce4:	bl	158ac <_obstack_memory_used@@Base+0x2098>
   15ce8:	mov	r3, r0
   15cec:	mov	r0, r3
   15cf0:	sub	sp, fp, #4
   15cf4:	ldr	fp, [sp]
   15cf8:	add	sp, sp, #4
   15cfc:	pop	{pc}		; (ldr pc, [sp], #4)
   15d00:	str	fp, [sp, #-8]!
   15d04:	str	lr, [sp, #4]
   15d08:	add	fp, sp, #4
   15d0c:	sub	sp, sp, #64	; 0x40
   15d10:	str	r0, [fp, #-56]	; 0xffffffc8
   15d14:	str	r1, [fp, #-60]	; 0xffffffc4
   15d18:	str	r2, [fp, #-64]	; 0xffffffc0
   15d1c:	str	r3, [fp, #-68]	; 0xffffffbc
   15d20:	sub	r3, fp, #52	; 0x34
   15d24:	ldr	r1, [fp, #-60]	; 0xffffffc4
   15d28:	mov	r0, r3
   15d2c:	bl	13ca8 <_obstack_memory_used@@Base+0x494>
   15d30:	sub	r3, fp, #52	; 0x34
   15d34:	ldr	r2, [fp, #-68]	; 0xffffffbc
   15d38:	ldr	r1, [fp, #-64]	; 0xffffffc0
   15d3c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15d40:	bl	158ac <_obstack_memory_used@@Base+0x2098>
   15d44:	mov	r3, r0
   15d48:	mov	r0, r3
   15d4c:	sub	sp, fp, #4
   15d50:	ldr	fp, [sp]
   15d54:	add	sp, sp, #4
   15d58:	pop	{pc}		; (ldr pc, [sp], #4)
   15d5c:	str	fp, [sp, #-8]!
   15d60:	str	lr, [sp, #4]
   15d64:	add	fp, sp, #4
   15d68:	sub	sp, sp, #8
   15d6c:	str	r0, [fp, #-8]
   15d70:	str	r1, [fp, #-12]
   15d74:	ldr	r2, [fp, #-12]
   15d78:	ldr	r1, [fp, #-8]
   15d7c:	mov	r0, #0
   15d80:	bl	15ca8 <_obstack_memory_used@@Base+0x2494>
   15d84:	mov	r3, r0
   15d88:	mov	r0, r3
   15d8c:	sub	sp, fp, #4
   15d90:	ldr	fp, [sp]
   15d94:	add	sp, sp, #4
   15d98:	pop	{pc}		; (ldr pc, [sp], #4)
   15d9c:	str	fp, [sp, #-8]!
   15da0:	str	lr, [sp, #4]
   15da4:	add	fp, sp, #4
   15da8:	sub	sp, sp, #16
   15dac:	str	r0, [fp, #-8]
   15db0:	str	r1, [fp, #-12]
   15db4:	str	r2, [fp, #-16]
   15db8:	ldr	r3, [fp, #-16]
   15dbc:	ldr	r2, [fp, #-12]
   15dc0:	ldr	r1, [fp, #-8]
   15dc4:	mov	r0, #0
   15dc8:	bl	15d00 <_obstack_memory_used@@Base+0x24ec>
   15dcc:	mov	r3, r0
   15dd0:	mov	r0, r3
   15dd4:	sub	sp, fp, #4
   15dd8:	ldr	fp, [sp]
   15ddc:	add	sp, sp, #4
   15de0:	pop	{pc}		; (ldr pc, [sp], #4)
   15de4:	str	fp, [sp, #-8]!
   15de8:	str	lr, [sp, #4]
   15dec:	add	fp, sp, #4
   15df0:	sub	sp, sp, #64	; 0x40
   15df4:	str	r0, [fp, #-56]	; 0xffffffc8
   15df8:	str	r1, [fp, #-60]	; 0xffffffc4
   15dfc:	mov	r3, r2
   15e00:	strb	r3, [fp, #-61]	; 0xffffffc3
   15e04:	movw	r2, #45460	; 0xb194
   15e08:	movt	r2, #2
   15e0c:	sub	r3, fp, #52	; 0x34
   15e10:	ldrd	r0, [r2]
   15e14:	strd	r0, [r3]
   15e18:	ldrd	r0, [r2, #8]
   15e1c:	strd	r0, [r3, #8]
   15e20:	ldrd	r0, [r2, #16]
   15e24:	strd	r0, [r3, #16]
   15e28:	ldrd	r0, [r2, #24]
   15e2c:	strd	r0, [r3, #24]
   15e30:	ldrd	r0, [r2, #32]
   15e34:	strd	r0, [r3, #32]
   15e38:	ldrd	r0, [r2, #40]	; 0x28
   15e3c:	strd	r0, [r3, #40]	; 0x28
   15e40:	ldrb	r1, [fp, #-61]	; 0xffffffc3
   15e44:	sub	r3, fp, #52	; 0x34
   15e48:	mov	r2, #1
   15e4c:	mov	r0, r3
   15e50:	bl	13b08 <_obstack_memory_used@@Base+0x2f4>
   15e54:	sub	r3, fp, #52	; 0x34
   15e58:	ldr	r2, [fp, #-60]	; 0xffffffc4
   15e5c:	ldr	r1, [fp, #-56]	; 0xffffffc8
   15e60:	mov	r0, #0
   15e64:	bl	158ac <_obstack_memory_used@@Base+0x2098>
   15e68:	mov	r3, r0
   15e6c:	mov	r0, r3
   15e70:	sub	sp, fp, #4
   15e74:	ldr	fp, [sp]
   15e78:	add	sp, sp, #4
   15e7c:	pop	{pc}		; (ldr pc, [sp], #4)
   15e80:	str	fp, [sp, #-8]!
   15e84:	str	lr, [sp, #4]
   15e88:	add	fp, sp, #4
   15e8c:	sub	sp, sp, #8
   15e90:	str	r0, [fp, #-8]
   15e94:	mov	r3, r1
   15e98:	strb	r3, [fp, #-9]
   15e9c:	ldrb	r3, [fp, #-9]
   15ea0:	mov	r2, r3
   15ea4:	mvn	r1, #0
   15ea8:	ldr	r0, [fp, #-8]
   15eac:	bl	15de4 <_obstack_memory_used@@Base+0x25d0>
   15eb0:	mov	r3, r0
   15eb4:	mov	r0, r3
   15eb8:	sub	sp, fp, #4
   15ebc:	ldr	fp, [sp]
   15ec0:	add	sp, sp, #4
   15ec4:	pop	{pc}		; (ldr pc, [sp], #4)
   15ec8:	str	fp, [sp, #-8]!
   15ecc:	str	lr, [sp, #4]
   15ed0:	add	fp, sp, #4
   15ed4:	sub	sp, sp, #8
   15ed8:	str	r0, [fp, #-8]
   15edc:	mov	r1, #58	; 0x3a
   15ee0:	ldr	r0, [fp, #-8]
   15ee4:	bl	15e80 <_obstack_memory_used@@Base+0x266c>
   15ee8:	mov	r3, r0
   15eec:	mov	r0, r3
   15ef0:	sub	sp, fp, #4
   15ef4:	ldr	fp, [sp]
   15ef8:	add	sp, sp, #4
   15efc:	pop	{pc}		; (ldr pc, [sp], #4)
   15f00:	str	fp, [sp, #-8]!
   15f04:	str	lr, [sp, #4]
   15f08:	add	fp, sp, #4
   15f0c:	sub	sp, sp, #8
   15f10:	str	r0, [fp, #-8]
   15f14:	str	r1, [fp, #-12]
   15f18:	mov	r2, #58	; 0x3a
   15f1c:	ldr	r1, [fp, #-12]
   15f20:	ldr	r0, [fp, #-8]
   15f24:	bl	15de4 <_obstack_memory_used@@Base+0x25d0>
   15f28:	mov	r3, r0
   15f2c:	mov	r0, r3
   15f30:	sub	sp, fp, #4
   15f34:	ldr	fp, [sp]
   15f38:	add	sp, sp, #4
   15f3c:	pop	{pc}		; (ldr pc, [sp], #4)
   15f40:	str	fp, [sp, #-8]!
   15f44:	str	lr, [sp, #4]
   15f48:	add	fp, sp, #4
   15f4c:	sub	sp, sp, #112	; 0x70
   15f50:	str	r0, [fp, #-56]	; 0xffffffc8
   15f54:	str	r1, [fp, #-60]	; 0xffffffc4
   15f58:	str	r2, [fp, #-64]	; 0xffffffc0
   15f5c:	sub	r3, fp, #116	; 0x74
   15f60:	ldr	r1, [fp, #-60]	; 0xffffffc4
   15f64:	mov	r0, r3
   15f68:	bl	13ca8 <_obstack_memory_used@@Base+0x494>
   15f6c:	sub	r3, fp, #52	; 0x34
   15f70:	sub	r2, fp, #116	; 0x74
   15f74:	ldrd	r0, [r2]
   15f78:	strd	r0, [r3]
   15f7c:	ldrd	r0, [r2, #8]
   15f80:	strd	r0, [r3, #8]
   15f84:	ldrd	r0, [r2, #16]
   15f88:	strd	r0, [r3, #16]
   15f8c:	ldrd	r0, [r2, #24]
   15f90:	strd	r0, [r3, #24]
   15f94:	ldrd	r0, [r2, #32]
   15f98:	strd	r0, [r3, #32]
   15f9c:	ldrd	r0, [r2, #40]	; 0x28
   15fa0:	strd	r0, [r3, #40]	; 0x28
   15fa4:	sub	r3, fp, #52	; 0x34
   15fa8:	mov	r2, #1
   15fac:	mov	r1, #58	; 0x3a
   15fb0:	mov	r0, r3
   15fb4:	bl	13b08 <_obstack_memory_used@@Base+0x2f4>
   15fb8:	sub	r3, fp, #52	; 0x34
   15fbc:	mvn	r2, #0
   15fc0:	ldr	r1, [fp, #-64]	; 0xffffffc0
   15fc4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   15fc8:	bl	158ac <_obstack_memory_used@@Base+0x2098>
   15fcc:	mov	r3, r0
   15fd0:	mov	r0, r3
   15fd4:	sub	sp, fp, #4
   15fd8:	ldr	fp, [sp]
   15fdc:	add	sp, sp, #4
   15fe0:	pop	{pc}		; (ldr pc, [sp], #4)
   15fe4:	str	fp, [sp, #-8]!
   15fe8:	str	lr, [sp, #4]
   15fec:	add	fp, sp, #4
   15ff0:	sub	sp, sp, #24
   15ff4:	str	r0, [fp, #-8]
   15ff8:	str	r1, [fp, #-12]
   15ffc:	str	r2, [fp, #-16]
   16000:	str	r3, [fp, #-20]	; 0xffffffec
   16004:	mvn	r3, #0
   16008:	str	r3, [sp]
   1600c:	ldr	r3, [fp, #-20]	; 0xffffffec
   16010:	ldr	r2, [fp, #-16]
   16014:	ldr	r1, [fp, #-12]
   16018:	ldr	r0, [fp, #-8]
   1601c:	bl	16038 <_obstack_memory_used@@Base+0x2824>
   16020:	mov	r3, r0
   16024:	mov	r0, r3
   16028:	sub	sp, fp, #4
   1602c:	ldr	fp, [sp]
   16030:	add	sp, sp, #4
   16034:	pop	{pc}		; (ldr pc, [sp], #4)
   16038:	str	fp, [sp, #-8]!
   1603c:	str	lr, [sp, #4]
   16040:	add	fp, sp, #4
   16044:	sub	sp, sp, #64	; 0x40
   16048:	str	r0, [fp, #-56]	; 0xffffffc8
   1604c:	str	r1, [fp, #-60]	; 0xffffffc4
   16050:	str	r2, [fp, #-64]	; 0xffffffc0
   16054:	str	r3, [fp, #-68]	; 0xffffffbc
   16058:	movw	r2, #45460	; 0xb194
   1605c:	movt	r2, #2
   16060:	sub	r3, fp, #52	; 0x34
   16064:	ldrd	r0, [r2]
   16068:	strd	r0, [r3]
   1606c:	ldrd	r0, [r2, #8]
   16070:	strd	r0, [r3, #8]
   16074:	ldrd	r0, [r2, #16]
   16078:	strd	r0, [r3, #16]
   1607c:	ldrd	r0, [r2, #24]
   16080:	strd	r0, [r3, #24]
   16084:	ldrd	r0, [r2, #32]
   16088:	strd	r0, [r3, #32]
   1608c:	ldrd	r0, [r2, #40]	; 0x28
   16090:	strd	r0, [r3, #40]	; 0x28
   16094:	sub	r3, fp, #52	; 0x34
   16098:	ldr	r2, [fp, #-64]	; 0xffffffc0
   1609c:	ldr	r1, [fp, #-60]	; 0xffffffc4
   160a0:	mov	r0, r3
   160a4:	bl	13c20 <_obstack_memory_used@@Base+0x40c>
   160a8:	sub	r3, fp, #52	; 0x34
   160ac:	ldr	r2, [fp, #4]
   160b0:	ldr	r1, [fp, #-68]	; 0xffffffbc
   160b4:	ldr	r0, [fp, #-56]	; 0xffffffc8
   160b8:	bl	158ac <_obstack_memory_used@@Base+0x2098>
   160bc:	mov	r3, r0
   160c0:	mov	r0, r3
   160c4:	sub	sp, fp, #4
   160c8:	ldr	fp, [sp]
   160cc:	add	sp, sp, #4
   160d0:	pop	{pc}		; (ldr pc, [sp], #4)
   160d4:	str	fp, [sp, #-8]!
   160d8:	str	lr, [sp, #4]
   160dc:	add	fp, sp, #4
   160e0:	sub	sp, sp, #16
   160e4:	str	r0, [fp, #-8]
   160e8:	str	r1, [fp, #-12]
   160ec:	str	r2, [fp, #-16]
   160f0:	ldr	r3, [fp, #-16]
   160f4:	ldr	r2, [fp, #-12]
   160f8:	ldr	r1, [fp, #-8]
   160fc:	mov	r0, #0
   16100:	bl	15fe4 <_obstack_memory_used@@Base+0x27d0>
   16104:	mov	r3, r0
   16108:	mov	r0, r3
   1610c:	sub	sp, fp, #4
   16110:	ldr	fp, [sp]
   16114:	add	sp, sp, #4
   16118:	pop	{pc}		; (ldr pc, [sp], #4)
   1611c:	str	fp, [sp, #-8]!
   16120:	str	lr, [sp, #4]
   16124:	add	fp, sp, #4
   16128:	sub	sp, sp, #24
   1612c:	str	r0, [fp, #-8]
   16130:	str	r1, [fp, #-12]
   16134:	str	r2, [fp, #-16]
   16138:	str	r3, [fp, #-20]	; 0xffffffec
   1613c:	ldr	r3, [fp, #-20]	; 0xffffffec
   16140:	str	r3, [sp]
   16144:	ldr	r3, [fp, #-16]
   16148:	ldr	r2, [fp, #-12]
   1614c:	ldr	r1, [fp, #-8]
   16150:	mov	r0, #0
   16154:	bl	16038 <_obstack_memory_used@@Base+0x2824>
   16158:	mov	r3, r0
   1615c:	mov	r0, r3
   16160:	sub	sp, fp, #4
   16164:	ldr	fp, [sp]
   16168:	add	sp, sp, #4
   1616c:	pop	{pc}		; (ldr pc, [sp], #4)
   16170:	str	fp, [sp, #-8]!
   16174:	str	lr, [sp, #4]
   16178:	add	fp, sp, #4
   1617c:	sub	sp, sp, #16
   16180:	str	r0, [fp, #-8]
   16184:	str	r1, [fp, #-12]
   16188:	str	r2, [fp, #-16]
   1618c:	movw	r3, #45316	; 0xb104
   16190:	movt	r3, #2
   16194:	ldr	r2, [fp, #-16]
   16198:	ldr	r1, [fp, #-12]
   1619c:	ldr	r0, [fp, #-8]
   161a0:	bl	158ac <_obstack_memory_used@@Base+0x2098>
   161a4:	mov	r3, r0
   161a8:	mov	r0, r3
   161ac:	sub	sp, fp, #4
   161b0:	ldr	fp, [sp]
   161b4:	add	sp, sp, #4
   161b8:	pop	{pc}		; (ldr pc, [sp], #4)
   161bc:	str	fp, [sp, #-8]!
   161c0:	str	lr, [sp, #4]
   161c4:	add	fp, sp, #4
   161c8:	sub	sp, sp, #8
   161cc:	str	r0, [fp, #-8]
   161d0:	str	r1, [fp, #-12]
   161d4:	ldr	r2, [fp, #-12]
   161d8:	ldr	r1, [fp, #-8]
   161dc:	mov	r0, #0
   161e0:	bl	16170 <_obstack_memory_used@@Base+0x295c>
   161e4:	mov	r3, r0
   161e8:	mov	r0, r3
   161ec:	sub	sp, fp, #4
   161f0:	ldr	fp, [sp]
   161f4:	add	sp, sp, #4
   161f8:	pop	{pc}		; (ldr pc, [sp], #4)
   161fc:	str	fp, [sp, #-8]!
   16200:	str	lr, [sp, #4]
   16204:	add	fp, sp, #4
   16208:	sub	sp, sp, #8
   1620c:	str	r0, [fp, #-8]
   16210:	str	r1, [fp, #-12]
   16214:	mvn	r2, #0
   16218:	ldr	r1, [fp, #-12]
   1621c:	ldr	r0, [fp, #-8]
   16220:	bl	16170 <_obstack_memory_used@@Base+0x295c>
   16224:	mov	r3, r0
   16228:	mov	r0, r3
   1622c:	sub	sp, fp, #4
   16230:	ldr	fp, [sp]
   16234:	add	sp, sp, #4
   16238:	pop	{pc}		; (ldr pc, [sp], #4)
   1623c:	str	fp, [sp, #-8]!
   16240:	str	lr, [sp, #4]
   16244:	add	fp, sp, #4
   16248:	sub	sp, sp, #8
   1624c:	str	r0, [fp, #-8]
   16250:	ldr	r1, [fp, #-8]
   16254:	mov	r0, #0
   16258:	bl	161fc <_obstack_memory_used@@Base+0x29e8>
   1625c:	mov	r3, r0
   16260:	mov	r0, r3
   16264:	sub	sp, fp, #4
   16268:	ldr	fp, [sp]
   1626c:	add	sp, sp, #4
   16270:	pop	{pc}		; (ldr pc, [sp], #4)
   16274:	strd	r4, [sp, #-24]!	; 0xffffffe8
   16278:	strd	r6, [sp, #8]
   1627c:	str	fp, [sp, #16]
   16280:	str	lr, [sp, #20]
   16284:	add	fp, sp, #20
   16288:	sub	sp, sp, #48	; 0x30
   1628c:	str	r0, [fp, #-24]	; 0xffffffe8
   16290:	str	r1, [fp, #-28]	; 0xffffffe4
   16294:	str	r2, [fp, #-32]	; 0xffffffe0
   16298:	str	r3, [fp, #-36]	; 0xffffffdc
   1629c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   162a0:	cmp	r3, #0
   162a4:	beq	162cc <_obstack_memory_used@@Base+0x2ab8>
   162a8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   162ac:	str	r3, [sp]
   162b0:	ldr	r3, [fp, #-32]	; 0xffffffe0
   162b4:	ldr	r2, [fp, #-28]	; 0xffffffe4
   162b8:	movw	r1, #40416	; 0x9de0
   162bc:	movt	r1, #1
   162c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   162c4:	bl	10f0c <fprintf@plt>
   162c8:	b	162e4 <_obstack_memory_used@@Base+0x2ad0>
   162cc:	ldr	r3, [fp, #-36]	; 0xffffffdc
   162d0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   162d4:	movw	r1, #40428	; 0x9dec
   162d8:	movt	r1, #1
   162dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   162e0:	bl	10f0c <fprintf@plt>
   162e4:	movw	r0, #40436	; 0x9df4
   162e8:	movt	r0, #1
   162ec:	bl	10ef4 <gettext@plt>
   162f0:	mov	r2, r0
   162f4:	movw	r3, #2022	; 0x7e6
   162f8:	movw	r1, #41220	; 0xa104
   162fc:	movt	r1, #1
   16300:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16304:	bl	10f0c <fprintf@plt>
   16308:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1630c:	mov	r0, #10
   16310:	bl	10dd4 <fputc_unlocked@plt>
   16314:	movw	r0, #40440	; 0x9df8
   16318:	movt	r0, #1
   1631c:	bl	10ef4 <gettext@plt>
   16320:	mov	r3, r0
   16324:	movw	r2, #40612	; 0x9ea4
   16328:	movt	r2, #1
   1632c:	mov	r1, r3
   16330:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16334:	bl	10f0c <fprintf@plt>
   16338:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1633c:	mov	r0, #10
   16340:	bl	10dd4 <fputc_unlocked@plt>
   16344:	ldr	r3, [fp, #8]
   16348:	cmp	r3, #9
   1634c:	ldrls	pc, [pc, r3, lsl #2]
   16350:	b	16730 <_obstack_memory_used@@Base+0x2f1c>
   16354:	ldrdeq	r6, [r1], -ip
   16358:	andeq	r6, r1, ip, ror r3
   1635c:	andeq	r6, r1, r4, lsr #7
   16360:	ldrdeq	r6, [r1], -r4
   16364:	andeq	r6, r1, r8, lsl r4
   16368:	andeq	r6, r1, r4, ror r4
   1636c:	andeq	r6, r1, r0, ror #9
   16370:	andeq	r6, r1, ip, asr r5
   16374:	andeq	r6, r1, r8, ror #11
   16378:	andeq	r6, r1, r4, lsl #13
   1637c:	movw	r0, #40648	; 0x9ec8
   16380:	movt	r0, #1
   16384:	bl	10ef4 <gettext@plt>
   16388:	mov	r1, r0
   1638c:	ldr	r3, [fp, #4]
   16390:	ldr	r3, [r3]
   16394:	mov	r2, r3
   16398:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1639c:	bl	10f0c <fprintf@plt>
   163a0:	b	167e0 <_obstack_memory_used@@Base+0x2fcc>
   163a4:	movw	r0, #40664	; 0x9ed8
   163a8:	movt	r0, #1
   163ac:	bl	10ef4 <gettext@plt>
   163b0:	mov	r1, r0
   163b4:	ldr	r3, [fp, #4]
   163b8:	ldr	r2, [r3]
   163bc:	ldr	r3, [fp, #4]
   163c0:	add	r3, r3, #4
   163c4:	ldr	r3, [r3]
   163c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   163cc:	bl	10f0c <fprintf@plt>
   163d0:	b	167e0 <_obstack_memory_used@@Base+0x2fcc>
   163d4:	movw	r0, #40688	; 0x9ef0
   163d8:	movt	r0, #1
   163dc:	bl	10ef4 <gettext@plt>
   163e0:	ldr	r3, [fp, #4]
   163e4:	ldr	r2, [r3]
   163e8:	ldr	r3, [fp, #4]
   163ec:	add	r3, r3, #4
   163f0:	ldr	r1, [r3]
   163f4:	ldr	r3, [fp, #4]
   163f8:	add	r3, r3, #8
   163fc:	ldr	r3, [r3]
   16400:	str	r3, [sp]
   16404:	mov	r3, r1
   16408:	mov	r1, r0
   1640c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16410:	bl	10f0c <fprintf@plt>
   16414:	b	167e0 <_obstack_memory_used@@Base+0x2fcc>
   16418:	movw	r0, #40716	; 0x9f0c
   1641c:	movt	r0, #1
   16420:	bl	10ef4 <gettext@plt>
   16424:	mov	ip, r0
   16428:	ldr	r3, [fp, #4]
   1642c:	ldr	r1, [r3]
   16430:	ldr	r3, [fp, #4]
   16434:	add	r3, r3, #4
   16438:	ldr	r0, [r3]
   1643c:	ldr	r3, [fp, #4]
   16440:	add	r3, r3, #8
   16444:	ldr	r3, [r3]
   16448:	ldr	r2, [fp, #4]
   1644c:	add	r2, r2, #12
   16450:	ldr	r2, [r2]
   16454:	str	r2, [sp, #4]
   16458:	str	r3, [sp]
   1645c:	mov	r3, r0
   16460:	mov	r2, r1
   16464:	mov	r1, ip
   16468:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1646c:	bl	10f0c <fprintf@plt>
   16470:	b	167e0 <_obstack_memory_used@@Base+0x2fcc>
   16474:	movw	r0, #40748	; 0x9f2c
   16478:	movt	r0, #1
   1647c:	bl	10ef4 <gettext@plt>
   16480:	mov	lr, r0
   16484:	ldr	r3, [fp, #4]
   16488:	ldr	r0, [r3]
   1648c:	ldr	r3, [fp, #4]
   16490:	add	r3, r3, #4
   16494:	ldr	ip, [r3]
   16498:	ldr	r3, [fp, #4]
   1649c:	add	r3, r3, #8
   164a0:	ldr	r3, [r3]
   164a4:	ldr	r2, [fp, #4]
   164a8:	add	r2, r2, #12
   164ac:	ldr	r2, [r2]
   164b0:	ldr	r1, [fp, #4]
   164b4:	add	r1, r1, #16
   164b8:	ldr	r1, [r1]
   164bc:	str	r1, [sp, #8]
   164c0:	str	r2, [sp, #4]
   164c4:	str	r3, [sp]
   164c8:	mov	r3, ip
   164cc:	mov	r2, r0
   164d0:	mov	r1, lr
   164d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   164d8:	bl	10f0c <fprintf@plt>
   164dc:	b	167e0 <_obstack_memory_used@@Base+0x2fcc>
   164e0:	movw	r0, #40784	; 0x9f50
   164e4:	movt	r0, #1
   164e8:	bl	10ef4 <gettext@plt>
   164ec:	mov	r4, r0
   164f0:	ldr	r3, [fp, #4]
   164f4:	ldr	ip, [r3]
   164f8:	ldr	r3, [fp, #4]
   164fc:	add	r3, r3, #4
   16500:	ldr	lr, [r3]
   16504:	ldr	r3, [fp, #4]
   16508:	add	r3, r3, #8
   1650c:	ldr	r3, [r3]
   16510:	ldr	r2, [fp, #4]
   16514:	add	r2, r2, #12
   16518:	ldr	r2, [r2]
   1651c:	ldr	r1, [fp, #4]
   16520:	add	r1, r1, #16
   16524:	ldr	r1, [r1]
   16528:	ldr	r0, [fp, #4]
   1652c:	add	r0, r0, #20
   16530:	ldr	r0, [r0]
   16534:	str	r0, [sp, #12]
   16538:	str	r1, [sp, #8]
   1653c:	str	r2, [sp, #4]
   16540:	str	r3, [sp]
   16544:	mov	r3, lr
   16548:	mov	r2, ip
   1654c:	mov	r1, r4
   16550:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16554:	bl	10f0c <fprintf@plt>
   16558:	b	167e0 <_obstack_memory_used@@Base+0x2fcc>
   1655c:	movw	r0, #40824	; 0x9f78
   16560:	movt	r0, #1
   16564:	bl	10ef4 <gettext@plt>
   16568:	mov	r5, r0
   1656c:	ldr	r3, [fp, #4]
   16570:	ldr	lr, [r3]
   16574:	ldr	r3, [fp, #4]
   16578:	add	r3, r3, #4
   1657c:	ldr	r4, [r3]
   16580:	ldr	r3, [fp, #4]
   16584:	add	r3, r3, #8
   16588:	ldr	r3, [r3]
   1658c:	ldr	r2, [fp, #4]
   16590:	add	r2, r2, #12
   16594:	ldr	r2, [r2]
   16598:	ldr	r1, [fp, #4]
   1659c:	add	r1, r1, #16
   165a0:	ldr	r1, [r1]
   165a4:	ldr	r0, [fp, #4]
   165a8:	add	r0, r0, #20
   165ac:	ldr	r0, [r0]
   165b0:	ldr	ip, [fp, #4]
   165b4:	add	ip, ip, #24
   165b8:	ldr	ip, [ip]
   165bc:	str	ip, [sp, #16]
   165c0:	str	r0, [sp, #12]
   165c4:	str	r1, [sp, #8]
   165c8:	str	r2, [sp, #4]
   165cc:	str	r3, [sp]
   165d0:	mov	r3, r4
   165d4:	mov	r2, lr
   165d8:	mov	r1, r5
   165dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   165e0:	bl	10f0c <fprintf@plt>
   165e4:	b	167e0 <_obstack_memory_used@@Base+0x2fcc>
   165e8:	movw	r0, #40868	; 0x9fa4
   165ec:	movt	r0, #1
   165f0:	bl	10ef4 <gettext@plt>
   165f4:	mov	r6, r0
   165f8:	ldr	r3, [fp, #4]
   165fc:	ldr	r4, [r3]
   16600:	ldr	r3, [fp, #4]
   16604:	add	r3, r3, #4
   16608:	ldr	r5, [r3]
   1660c:	ldr	r3, [fp, #4]
   16610:	add	r3, r3, #8
   16614:	ldr	r3, [r3]
   16618:	ldr	r2, [fp, #4]
   1661c:	add	r2, r2, #12
   16620:	ldr	r2, [r2]
   16624:	ldr	r1, [fp, #4]
   16628:	add	r1, r1, #16
   1662c:	ldr	r1, [r1]
   16630:	ldr	r0, [fp, #4]
   16634:	add	r0, r0, #20
   16638:	ldr	r0, [r0]
   1663c:	ldr	ip, [fp, #4]
   16640:	add	ip, ip, #24
   16644:	ldr	ip, [ip]
   16648:	ldr	lr, [fp, #4]
   1664c:	add	lr, lr, #28
   16650:	ldr	lr, [lr]
   16654:	str	lr, [sp, #20]
   16658:	str	ip, [sp, #16]
   1665c:	str	r0, [sp, #12]
   16660:	str	r1, [sp, #8]
   16664:	str	r2, [sp, #4]
   16668:	str	r3, [sp]
   1666c:	mov	r3, r5
   16670:	mov	r2, r4
   16674:	mov	r1, r6
   16678:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1667c:	bl	10f0c <fprintf@plt>
   16680:	b	167e0 <_obstack_memory_used@@Base+0x2fcc>
   16684:	movw	r0, #40916	; 0x9fd4
   16688:	movt	r0, #1
   1668c:	bl	10ef4 <gettext@plt>
   16690:	mov	r7, r0
   16694:	ldr	r3, [fp, #4]
   16698:	ldr	r5, [r3]
   1669c:	ldr	r3, [fp, #4]
   166a0:	add	r3, r3, #4
   166a4:	ldr	r6, [r3]
   166a8:	ldr	r3, [fp, #4]
   166ac:	add	r3, r3, #8
   166b0:	ldr	r3, [r3]
   166b4:	ldr	r2, [fp, #4]
   166b8:	add	r2, r2, #12
   166bc:	ldr	r2, [r2]
   166c0:	ldr	r1, [fp, #4]
   166c4:	add	r1, r1, #16
   166c8:	ldr	r1, [r1]
   166cc:	ldr	r0, [fp, #4]
   166d0:	add	r0, r0, #20
   166d4:	ldr	r0, [r0]
   166d8:	ldr	ip, [fp, #4]
   166dc:	add	ip, ip, #24
   166e0:	ldr	ip, [ip]
   166e4:	ldr	lr, [fp, #4]
   166e8:	add	lr, lr, #28
   166ec:	ldr	lr, [lr]
   166f0:	ldr	r4, [fp, #4]
   166f4:	add	r4, r4, #32
   166f8:	ldr	r4, [r4]
   166fc:	str	r4, [sp, #24]
   16700:	str	lr, [sp, #20]
   16704:	str	ip, [sp, #16]
   16708:	str	r0, [sp, #12]
   1670c:	str	r1, [sp, #8]
   16710:	str	r2, [sp, #4]
   16714:	str	r3, [sp]
   16718:	mov	r3, r6
   1671c:	mov	r2, r5
   16720:	mov	r1, r7
   16724:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16728:	bl	10f0c <fprintf@plt>
   1672c:	b	167e0 <_obstack_memory_used@@Base+0x2fcc>
   16730:	movw	r0, #40968	; 0xa008
   16734:	movt	r0, #1
   16738:	bl	10ef4 <gettext@plt>
   1673c:	mov	r7, r0
   16740:	ldr	r3, [fp, #4]
   16744:	ldr	r5, [r3]
   16748:	ldr	r3, [fp, #4]
   1674c:	add	r3, r3, #4
   16750:	ldr	r6, [r3]
   16754:	ldr	r3, [fp, #4]
   16758:	add	r3, r3, #8
   1675c:	ldr	r3, [r3]
   16760:	ldr	r2, [fp, #4]
   16764:	add	r2, r2, #12
   16768:	ldr	r2, [r2]
   1676c:	ldr	r1, [fp, #4]
   16770:	add	r1, r1, #16
   16774:	ldr	r1, [r1]
   16778:	ldr	r0, [fp, #4]
   1677c:	add	r0, r0, #20
   16780:	ldr	r0, [r0]
   16784:	ldr	ip, [fp, #4]
   16788:	add	ip, ip, #24
   1678c:	ldr	ip, [ip]
   16790:	ldr	lr, [fp, #4]
   16794:	add	lr, lr, #28
   16798:	ldr	lr, [lr]
   1679c:	ldr	r4, [fp, #4]
   167a0:	add	r4, r4, #32
   167a4:	ldr	r4, [r4]
   167a8:	str	r4, [sp, #24]
   167ac:	str	lr, [sp, #20]
   167b0:	str	ip, [sp, #16]
   167b4:	str	r0, [sp, #12]
   167b8:	str	r1, [sp, #8]
   167bc:	str	r2, [sp, #4]
   167c0:	str	r3, [sp]
   167c4:	mov	r3, r6
   167c8:	mov	r2, r5
   167cc:	mov	r1, r7
   167d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   167d4:	bl	10f0c <fprintf@plt>
   167d8:	b	167e0 <_obstack_memory_used@@Base+0x2fcc>
   167dc:	nop	{0}
   167e0:	nop	{0}
   167e4:	sub	sp, fp, #20
   167e8:	ldrd	r4, [sp]
   167ec:	ldrd	r6, [sp, #8]
   167f0:	ldr	fp, [sp, #16]
   167f4:	add	sp, sp, #20
   167f8:	pop	{pc}		; (ldr pc, [sp], #4)
   167fc:	str	fp, [sp, #-8]!
   16800:	str	lr, [sp, #4]
   16804:	add	fp, sp, #4
   16808:	sub	sp, sp, #32
   1680c:	str	r0, [fp, #-16]
   16810:	str	r1, [fp, #-20]	; 0xffffffec
   16814:	str	r2, [fp, #-24]	; 0xffffffe8
   16818:	str	r3, [fp, #-28]	; 0xffffffe4
   1681c:	mov	r3, #0
   16820:	str	r3, [fp, #-8]
   16824:	b	16834 <_obstack_memory_used@@Base+0x3020>
   16828:	ldr	r3, [fp, #-8]
   1682c:	add	r3, r3, #1
   16830:	str	r3, [fp, #-8]
   16834:	ldr	r3, [fp, #-8]
   16838:	lsl	r3, r3, #2
   1683c:	ldr	r2, [fp, #4]
   16840:	add	r3, r2, r3
   16844:	ldr	r3, [r3]
   16848:	cmp	r3, #0
   1684c:	bne	16828 <_obstack_memory_used@@Base+0x3014>
   16850:	ldr	r3, [fp, #-8]
   16854:	str	r3, [sp, #4]
   16858:	ldr	r3, [fp, #4]
   1685c:	str	r3, [sp]
   16860:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16864:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16868:	ldr	r1, [fp, #-20]	; 0xffffffec
   1686c:	ldr	r0, [fp, #-16]
   16870:	bl	16274 <_obstack_memory_used@@Base+0x2a60>
   16874:	nop	{0}
   16878:	sub	sp, fp, #4
   1687c:	ldr	fp, [sp]
   16880:	add	sp, sp, #4
   16884:	pop	{pc}		; (ldr pc, [sp], #4)
   16888:	str	fp, [sp, #-8]!
   1688c:	str	lr, [sp, #4]
   16890:	add	fp, sp, #4
   16894:	sub	sp, sp, #72	; 0x48
   16898:	str	r0, [fp, #-56]	; 0xffffffc8
   1689c:	str	r1, [fp, #-60]	; 0xffffffc4
   168a0:	str	r2, [fp, #-64]	; 0xffffffc0
   168a4:	str	r3, [fp, #-68]	; 0xffffffbc
   168a8:	mov	r3, #0
   168ac:	str	r3, [fp, #-8]
   168b0:	b	168c0 <_obstack_memory_used@@Base+0x30ac>
   168b4:	ldr	r3, [fp, #-8]
   168b8:	add	r3, r3, #1
   168bc:	str	r3, [fp, #-8]
   168c0:	ldr	r3, [fp, #-8]
   168c4:	cmp	r3, #9
   168c8:	bhi	1690c <_obstack_memory_used@@Base+0x30f8>
   168cc:	ldr	r3, [fp, #4]
   168d0:	add	r2, r3, #4
   168d4:	str	r2, [fp, #4]
   168d8:	ldr	r2, [r3]
   168dc:	ldr	r3, [fp, #-8]
   168e0:	lsl	r3, r3, #2
   168e4:	sub	r1, fp, #4
   168e8:	add	r3, r1, r3
   168ec:	str	r2, [r3, #-44]	; 0xffffffd4
   168f0:	ldr	r3, [fp, #-8]
   168f4:	lsl	r3, r3, #2
   168f8:	sub	r2, fp, #4
   168fc:	add	r3, r2, r3
   16900:	ldr	r3, [r3, #-44]	; 0xffffffd4
   16904:	cmp	r3, #0
   16908:	bne	168b4 <_obstack_memory_used@@Base+0x30a0>
   1690c:	ldr	r3, [fp, #-8]
   16910:	str	r3, [sp, #4]
   16914:	sub	r3, fp, #48	; 0x30
   16918:	str	r3, [sp]
   1691c:	ldr	r3, [fp, #-68]	; 0xffffffbc
   16920:	ldr	r2, [fp, #-64]	; 0xffffffc0
   16924:	ldr	r1, [fp, #-60]	; 0xffffffc4
   16928:	ldr	r0, [fp, #-56]	; 0xffffffc8
   1692c:	bl	16274 <_obstack_memory_used@@Base+0x2a60>
   16930:	nop	{0}
   16934:	sub	sp, fp, #4
   16938:	ldr	fp, [sp]
   1693c:	add	sp, sp, #4
   16940:	pop	{pc}		; (ldr pc, [sp], #4)
   16944:	push	{r3}		; (str r3, [sp, #-4]!)
   16948:	str	fp, [sp, #-8]!
   1694c:	str	lr, [sp, #4]
   16950:	add	fp, sp, #4
   16954:	sub	sp, sp, #36	; 0x24
   16958:	str	r0, [fp, #-20]	; 0xffffffec
   1695c:	str	r1, [fp, #-24]	; 0xffffffe8
   16960:	str	r2, [fp, #-28]	; 0xffffffe4
   16964:	add	r3, fp, #8
   16968:	str	r3, [fp, #-12]
   1696c:	ldr	r3, [fp, #-12]
   16970:	str	r3, [sp]
   16974:	ldr	r3, [fp, #4]
   16978:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1697c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16980:	ldr	r0, [fp, #-20]	; 0xffffffec
   16984:	bl	16888 <_obstack_memory_used@@Base+0x3074>
   16988:	nop	{0}
   1698c:	sub	sp, fp, #4
   16990:	ldr	fp, [sp]
   16994:	ldr	lr, [sp, #4]
   16998:	add	sp, sp, #8
   1699c:	add	sp, sp, #4
   169a0:	bx	lr
   169a4:	str	fp, [sp, #-8]!
   169a8:	str	lr, [sp, #4]
   169ac:	add	fp, sp, #4
   169b0:	movw	r3, #45396	; 0xb154
   169b4:	movt	r3, #2
   169b8:	ldr	r3, [r3]
   169bc:	mov	r1, r3
   169c0:	mov	r0, #10
   169c4:	bl	10dd4 <fputc_unlocked@plt>
   169c8:	movw	r0, #41028	; 0xa044
   169cc:	movt	r0, #1
   169d0:	bl	10ef4 <gettext@plt>
   169d4:	mov	r3, r0
   169d8:	movw	r1, #41048	; 0xa058
   169dc:	movt	r1, #1
   169e0:	mov	r0, r3
   169e4:	bl	10d74 <printf@plt>
   169e8:	movw	r0, #41072	; 0xa070
   169ec:	movt	r0, #1
   169f0:	bl	10ef4 <gettext@plt>
   169f4:	mov	r3, r0
   169f8:	movw	r2, #41092	; 0xa084
   169fc:	movt	r2, #1
   16a00:	movw	r1, #41132	; 0xa0ac
   16a04:	movt	r1, #1
   16a08:	mov	r0, r3
   16a0c:	bl	10d74 <printf@plt>
   16a10:	movw	r0, #41148	; 0xa0bc
   16a14:	movt	r0, #1
   16a18:	bl	10ef4 <gettext@plt>
   16a1c:	mov	r3, r0
   16a20:	movw	r1, #41188	; 0xa0e4
   16a24:	movt	r1, #1
   16a28:	mov	r0, r3
   16a2c:	bl	10d74 <printf@plt>
   16a30:	nop	{0}
   16a34:	sub	sp, fp, #4
   16a38:	ldr	fp, [sp]
   16a3c:	add	sp, sp, #4
   16a40:	pop	{pc}		; (ldr pc, [sp], #4)
   16a44:	str	fp, [sp, #-8]!
   16a48:	str	lr, [sp, #4]
   16a4c:	add	fp, sp, #4
   16a50:	sub	sp, sp, #16
   16a54:	str	r0, [fp, #-8]
   16a58:	str	r1, [fp, #-12]
   16a5c:	str	r2, [fp, #-16]
   16a60:	ldr	r2, [fp, #-16]
   16a64:	ldr	r1, [fp, #-12]
   16a68:	ldr	r0, [fp, #-8]
   16a6c:	bl	16c28 <_obstack_memory_used@@Base+0x3414>
   16a70:	mov	r3, r0
   16a74:	mov	r0, r3
   16a78:	sub	sp, fp, #4
   16a7c:	ldr	fp, [sp]
   16a80:	add	sp, sp, #4
   16a84:	pop	{pc}		; (ldr pc, [sp], #4)
   16a88:	str	fp, [sp, #-8]!
   16a8c:	str	lr, [sp, #4]
   16a90:	add	fp, sp, #4
   16a94:	sub	sp, sp, #8
   16a98:	str	r0, [fp, #-8]
   16a9c:	ldr	r3, [fp, #-8]
   16aa0:	cmp	r3, #0
   16aa4:	bne	16aac <_obstack_memory_used@@Base+0x3298>
   16aa8:	bl	17338 <_obstack_memory_used@@Base+0x3b24>
   16aac:	ldr	r3, [fp, #-8]
   16ab0:	mov	r0, r3
   16ab4:	sub	sp, fp, #4
   16ab8:	ldr	fp, [sp]
   16abc:	add	sp, sp, #4
   16ac0:	pop	{pc}		; (ldr pc, [sp], #4)
   16ac4:	str	fp, [sp, #-8]!
   16ac8:	str	lr, [sp, #4]
   16acc:	add	fp, sp, #4
   16ad0:	sub	sp, sp, #8
   16ad4:	str	r0, [fp, #-8]
   16ad8:	ldr	r0, [fp, #-8]
   16adc:	bl	1744c <_obstack_memory_used@@Base+0x3c38>
   16ae0:	mov	r3, r0
   16ae4:	mov	r0, r3
   16ae8:	bl	16a88 <_obstack_memory_used@@Base+0x3274>
   16aec:	mov	r3, r0
   16af0:	mov	r0, r3
   16af4:	sub	sp, fp, #4
   16af8:	ldr	fp, [sp]
   16afc:	add	sp, sp, #4
   16b00:	pop	{pc}		; (ldr pc, [sp], #4)
   16b04:	str	fp, [sp, #-8]!
   16b08:	str	lr, [sp, #4]
   16b0c:	add	fp, sp, #4
   16b10:	sub	sp, sp, #8
   16b14:	str	r0, [fp, #-8]
   16b18:	ldr	r0, [fp, #-8]
   16b1c:	bl	17bd4 <_obstack_memory_used@@Base+0x43c0>
   16b20:	mov	r3, r0
   16b24:	mov	r0, r3
   16b28:	bl	16a88 <_obstack_memory_used@@Base+0x3274>
   16b2c:	mov	r3, r0
   16b30:	mov	r0, r3
   16b34:	sub	sp, fp, #4
   16b38:	ldr	fp, [sp]
   16b3c:	add	sp, sp, #4
   16b40:	pop	{pc}		; (ldr pc, [sp], #4)
   16b44:	str	fp, [sp, #-8]!
   16b48:	str	lr, [sp, #4]
   16b4c:	add	fp, sp, #4
   16b50:	sub	sp, sp, #8
   16b54:	str	r0, [fp, #-8]
   16b58:	ldr	r0, [fp, #-8]
   16b5c:	bl	16ac4 <_obstack_memory_used@@Base+0x32b0>
   16b60:	mov	r3, r0
   16b64:	mov	r0, r3
   16b68:	sub	sp, fp, #4
   16b6c:	ldr	fp, [sp]
   16b70:	add	sp, sp, #4
   16b74:	pop	{pc}		; (ldr pc, [sp], #4)
   16b78:	str	fp, [sp, #-8]!
   16b7c:	str	lr, [sp, #4]
   16b80:	add	fp, sp, #4
   16b84:	sub	sp, sp, #16
   16b88:	str	r0, [fp, #-16]
   16b8c:	str	r1, [fp, #-20]	; 0xffffffec
   16b90:	ldr	r1, [fp, #-20]	; 0xffffffec
   16b94:	ldr	r0, [fp, #-16]
   16b98:	bl	174dc <_obstack_memory_used@@Base+0x3cc8>
   16b9c:	str	r0, [fp, #-8]
   16ba0:	ldr	r3, [fp, #-8]
   16ba4:	cmp	r3, #0
   16ba8:	bne	16bc8 <_obstack_memory_used@@Base+0x33b4>
   16bac:	ldr	r3, [fp, #-16]
   16bb0:	cmp	r3, #0
   16bb4:	beq	16bc4 <_obstack_memory_used@@Base+0x33b0>
   16bb8:	ldr	r3, [fp, #-20]	; 0xffffffec
   16bbc:	cmp	r3, #0
   16bc0:	beq	16bc8 <_obstack_memory_used@@Base+0x33b4>
   16bc4:	bl	17338 <_obstack_memory_used@@Base+0x3b24>
   16bc8:	ldr	r3, [fp, #-8]
   16bcc:	mov	r0, r3
   16bd0:	sub	sp, fp, #4
   16bd4:	ldr	fp, [sp]
   16bd8:	add	sp, sp, #4
   16bdc:	pop	{pc}		; (ldr pc, [sp], #4)
   16be0:	str	fp, [sp, #-8]!
   16be4:	str	lr, [sp, #4]
   16be8:	add	fp, sp, #4
   16bec:	sub	sp, sp, #8
   16bf0:	str	r0, [fp, #-8]
   16bf4:	str	r1, [fp, #-12]
   16bf8:	ldr	r1, [fp, #-12]
   16bfc:	ldr	r0, [fp, #-8]
   16c00:	bl	17c0c <_obstack_memory_used@@Base+0x43f8>
   16c04:	mov	r3, r0
   16c08:	mov	r0, r3
   16c0c:	bl	16a88 <_obstack_memory_used@@Base+0x3274>
   16c10:	mov	r3, r0
   16c14:	mov	r0, r3
   16c18:	sub	sp, fp, #4
   16c1c:	ldr	fp, [sp]
   16c20:	add	sp, sp, #4
   16c24:	pop	{pc}		; (ldr pc, [sp], #4)
   16c28:	str	fp, [sp, #-8]!
   16c2c:	str	lr, [sp, #4]
   16c30:	add	fp, sp, #4
   16c34:	sub	sp, sp, #24
   16c38:	str	r0, [fp, #-16]
   16c3c:	str	r1, [fp, #-20]	; 0xffffffec
   16c40:	str	r2, [fp, #-24]	; 0xffffffe8
   16c44:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16c48:	ldr	r1, [fp, #-20]	; 0xffffffec
   16c4c:	ldr	r0, [fp, #-16]
   16c50:	bl	17e3c <_obstack_memory_used@@Base+0x4628>
   16c54:	str	r0, [fp, #-8]
   16c58:	ldr	r3, [fp, #-8]
   16c5c:	cmp	r3, #0
   16c60:	bne	16c8c <_obstack_memory_used@@Base+0x3478>
   16c64:	ldr	r3, [fp, #-16]
   16c68:	cmp	r3, #0
   16c6c:	beq	16c88 <_obstack_memory_used@@Base+0x3474>
   16c70:	ldr	r3, [fp, #-20]	; 0xffffffec
   16c74:	cmp	r3, #0
   16c78:	beq	16c8c <_obstack_memory_used@@Base+0x3478>
   16c7c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16c80:	cmp	r3, #0
   16c84:	beq	16c8c <_obstack_memory_used@@Base+0x3478>
   16c88:	bl	17338 <_obstack_memory_used@@Base+0x3b24>
   16c8c:	ldr	r3, [fp, #-8]
   16c90:	mov	r0, r3
   16c94:	sub	sp, fp, #4
   16c98:	ldr	fp, [sp]
   16c9c:	add	sp, sp, #4
   16ca0:	pop	{pc}		; (ldr pc, [sp], #4)
   16ca4:	str	fp, [sp, #-8]!
   16ca8:	str	lr, [sp, #4]
   16cac:	add	fp, sp, #4
   16cb0:	sub	sp, sp, #16
   16cb4:	str	r0, [fp, #-8]
   16cb8:	str	r1, [fp, #-12]
   16cbc:	str	r2, [fp, #-16]
   16cc0:	ldr	r2, [fp, #-16]
   16cc4:	ldr	r1, [fp, #-12]
   16cc8:	ldr	r0, [fp, #-8]
   16ccc:	bl	17cac <_obstack_memory_used@@Base+0x4498>
   16cd0:	mov	r3, r0
   16cd4:	mov	r0, r3
   16cd8:	bl	16a88 <_obstack_memory_used@@Base+0x3274>
   16cdc:	mov	r3, r0
   16ce0:	mov	r0, r3
   16ce4:	sub	sp, fp, #4
   16ce8:	ldr	fp, [sp]
   16cec:	add	sp, sp, #4
   16cf0:	pop	{pc}		; (ldr pc, [sp], #4)
   16cf4:	str	fp, [sp, #-8]!
   16cf8:	str	lr, [sp, #4]
   16cfc:	add	fp, sp, #4
   16d00:	sub	sp, sp, #8
   16d04:	str	r0, [fp, #-8]
   16d08:	str	r1, [fp, #-12]
   16d0c:	ldr	r2, [fp, #-12]
   16d10:	ldr	r1, [fp, #-8]
   16d14:	mov	r0, #0
   16d18:	bl	16c28 <_obstack_memory_used@@Base+0x3414>
   16d1c:	mov	r3, r0
   16d20:	mov	r0, r3
   16d24:	sub	sp, fp, #4
   16d28:	ldr	fp, [sp]
   16d2c:	add	sp, sp, #4
   16d30:	pop	{pc}		; (ldr pc, [sp], #4)
   16d34:	str	fp, [sp, #-8]!
   16d38:	str	lr, [sp, #4]
   16d3c:	add	fp, sp, #4
   16d40:	sub	sp, sp, #8
   16d44:	str	r0, [fp, #-8]
   16d48:	str	r1, [fp, #-12]
   16d4c:	ldr	r2, [fp, #-12]
   16d50:	ldr	r1, [fp, #-8]
   16d54:	mov	r0, #0
   16d58:	bl	16ca4 <_obstack_memory_used@@Base+0x3490>
   16d5c:	mov	r3, r0
   16d60:	mov	r0, r3
   16d64:	sub	sp, fp, #4
   16d68:	ldr	fp, [sp]
   16d6c:	add	sp, sp, #4
   16d70:	pop	{pc}		; (ldr pc, [sp], #4)
   16d74:	str	fp, [sp, #-8]!
   16d78:	str	lr, [sp, #4]
   16d7c:	add	fp, sp, #4
   16d80:	sub	sp, sp, #8
   16d84:	str	r0, [fp, #-8]
   16d88:	str	r1, [fp, #-12]
   16d8c:	mov	r2, #1
   16d90:	ldr	r1, [fp, #-12]
   16d94:	ldr	r0, [fp, #-8]
   16d98:	bl	16db4 <_obstack_memory_used@@Base+0x35a0>
   16d9c:	mov	r3, r0
   16da0:	mov	r0, r3
   16da4:	sub	sp, fp, #4
   16da8:	ldr	fp, [sp]
   16dac:	add	sp, sp, #4
   16db0:	pop	{pc}		; (ldr pc, [sp], #4)
   16db4:	str	fp, [sp, #-8]!
   16db8:	str	lr, [sp, #4]
   16dbc:	add	fp, sp, #4
   16dc0:	sub	sp, sp, #24
   16dc4:	str	r0, [fp, #-16]
   16dc8:	str	r1, [fp, #-20]	; 0xffffffec
   16dcc:	str	r2, [fp, #-24]	; 0xffffffe8
   16dd0:	ldr	r3, [fp, #-20]	; 0xffffffec
   16dd4:	ldr	r3, [r3]
   16dd8:	str	r3, [fp, #-8]
   16ddc:	ldr	r3, [fp, #-16]
   16de0:	cmp	r3, #0
   16de4:	bne	16e2c <_obstack_memory_used@@Base+0x3618>
   16de8:	ldr	r3, [fp, #-8]
   16dec:	cmp	r3, #0
   16df0:	bne	16e68 <_obstack_memory_used@@Base+0x3654>
   16df4:	mov	r2, #64	; 0x40
   16df8:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16dfc:	udiv	r3, r2, r3
   16e00:	str	r3, [fp, #-8]
   16e04:	ldr	r3, [fp, #-8]
   16e08:	cmp	r3, #0
   16e0c:	moveq	r3, #1
   16e10:	movne	r3, #0
   16e14:	uxtb	r3, r3
   16e18:	mov	r2, r3
   16e1c:	ldr	r3, [fp, #-8]
   16e20:	add	r3, r2, r3
   16e24:	str	r3, [fp, #-8]
   16e28:	b	16e68 <_obstack_memory_used@@Base+0x3654>
   16e2c:	ldr	r2, [fp, #-8]
   16e30:	ldr	r3, [fp, #-8]
   16e34:	lsr	r3, r3, #1
   16e38:	add	r3, r3, #1
   16e3c:	mov	r1, #0
   16e40:	adds	r3, r2, r3
   16e44:	bcc	16e4c <_obstack_memory_used@@Base+0x3638>
   16e48:	mov	r1, #1
   16e4c:	str	r3, [fp, #-8]
   16e50:	mov	r3, r1
   16e54:	and	r3, r3, #1
   16e58:	uxtb	r3, r3
   16e5c:	cmp	r3, #0
   16e60:	beq	16e68 <_obstack_memory_used@@Base+0x3654>
   16e64:	bl	17338 <_obstack_memory_used@@Base+0x3b24>
   16e68:	ldr	r3, [fp, #-8]
   16e6c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   16e70:	mov	r1, r3
   16e74:	ldr	r0, [fp, #-16]
   16e78:	bl	16c28 <_obstack_memory_used@@Base+0x3414>
   16e7c:	str	r0, [fp, #-16]
   16e80:	ldr	r2, [fp, #-8]
   16e84:	ldr	r3, [fp, #-20]	; 0xffffffec
   16e88:	str	r2, [r3]
   16e8c:	ldr	r3, [fp, #-16]
   16e90:	mov	r0, r3
   16e94:	sub	sp, fp, #4
   16e98:	ldr	fp, [sp]
   16e9c:	add	sp, sp, #4
   16ea0:	pop	{pc}		; (ldr pc, [sp], #4)
   16ea4:	str	fp, [sp, #-8]!
   16ea8:	str	lr, [sp, #4]
   16eac:	add	fp, sp, #4
   16eb0:	sub	sp, sp, #32
   16eb4:	str	r0, [fp, #-24]	; 0xffffffe8
   16eb8:	str	r1, [fp, #-28]	; 0xffffffe4
   16ebc:	str	r2, [fp, #-32]	; 0xffffffe0
   16ec0:	str	r3, [fp, #-36]	; 0xffffffdc
   16ec4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16ec8:	ldr	r3, [r3]
   16ecc:	str	r3, [fp, #-8]
   16ed0:	ldr	r3, [fp, #-8]
   16ed4:	asr	r3, r3, #1
   16ed8:	mov	r1, #0
   16edc:	ldr	r2, [fp, #-8]
   16ee0:	adds	r3, r2, r3
   16ee4:	bvc	16eec <_obstack_memory_used@@Base+0x36d8>
   16ee8:	mov	r1, #1
   16eec:	str	r3, [fp, #-16]
   16ef0:	mov	r3, r1
   16ef4:	and	r3, r3, #1
   16ef8:	uxtb	r3, r3
   16efc:	cmp	r3, #0
   16f00:	beq	16f0c <_obstack_memory_used@@Base+0x36f8>
   16f04:	mvn	r3, #-2147483648	; 0x80000000
   16f08:	str	r3, [fp, #-16]
   16f0c:	ldr	r3, [fp, #-36]	; 0xffffffdc
   16f10:	cmp	r3, #0
   16f14:	blt	16f30 <_obstack_memory_used@@Base+0x371c>
   16f18:	ldr	r3, [fp, #-16]
   16f1c:	ldr	r2, [fp, #-36]	; 0xffffffdc
   16f20:	cmp	r2, r3
   16f24:	bge	16f30 <_obstack_memory_used@@Base+0x371c>
   16f28:	ldr	r3, [fp, #-36]	; 0xffffffdc
   16f2c:	str	r3, [fp, #-16]
   16f30:	ldr	r2, [fp, #-16]
   16f34:	mov	lr, #0
   16f38:	ldr	r3, [fp, #4]
   16f3c:	smull	r2, r3, r2, r3
   16f40:	mov	r0, #0
   16f44:	mov	r1, #0
   16f48:	mov	r0, r3
   16f4c:	asr	r1, r3, #31
   16f50:	asr	ip, r2, #31
   16f54:	cmp	ip, r0
   16f58:	beq	16f60 <_obstack_memory_used@@Base+0x374c>
   16f5c:	mov	lr, #1
   16f60:	mov	r3, r2
   16f64:	str	r3, [fp, #-20]	; 0xffffffec
   16f68:	mov	r3, lr
   16f6c:	and	r3, r3, #1
   16f70:	uxtb	r3, r3
   16f74:	cmp	r3, #0
   16f78:	beq	16f84 <_obstack_memory_used@@Base+0x3770>
   16f7c:	mvn	r3, #-2147483648	; 0x80000000
   16f80:	b	16f9c <_obstack_memory_used@@Base+0x3788>
   16f84:	ldr	r3, [fp, #-20]	; 0xffffffec
   16f88:	cmp	r3, #63	; 0x3f
   16f8c:	bgt	16f98 <_obstack_memory_used@@Base+0x3784>
   16f90:	mov	r3, #64	; 0x40
   16f94:	b	16f9c <_obstack_memory_used@@Base+0x3788>
   16f98:	mov	r3, #0
   16f9c:	str	r3, [fp, #-12]
   16fa0:	ldr	r3, [fp, #-12]
   16fa4:	cmp	r3, #0
   16fa8:	beq	16fe0 <_obstack_memory_used@@Base+0x37cc>
   16fac:	ldr	r2, [fp, #-12]
   16fb0:	ldr	r3, [fp, #4]
   16fb4:	sdiv	r3, r2, r3
   16fb8:	str	r3, [fp, #-16]
   16fbc:	ldr	r3, [fp, #-12]
   16fc0:	ldr	r2, [fp, #4]
   16fc4:	sdiv	r2, r3, r2
   16fc8:	ldr	r1, [fp, #4]
   16fcc:	mul	r2, r1, r2
   16fd0:	sub	r3, r3, r2
   16fd4:	ldr	r2, [fp, #-12]
   16fd8:	sub	r3, r2, r3
   16fdc:	str	r3, [fp, #-20]	; 0xffffffec
   16fe0:	ldr	r3, [fp, #-24]	; 0xffffffe8
   16fe4:	cmp	r3, #0
   16fe8:	bne	16ff8 <_obstack_memory_used@@Base+0x37e4>
   16fec:	ldr	r3, [fp, #-28]	; 0xffffffe4
   16ff0:	mov	r2, #0
   16ff4:	str	r2, [r3]
   16ff8:	ldr	r2, [fp, #-16]
   16ffc:	ldr	r3, [fp, #-8]
   17000:	sub	r3, r2, r3
   17004:	ldr	r2, [fp, #-32]	; 0xffffffe0
   17008:	cmp	r2, r3
   1700c:	ble	170ac <_obstack_memory_used@@Base+0x3898>
   17010:	mov	r1, #0
   17014:	ldr	r2, [fp, #-8]
   17018:	ldr	r3, [fp, #-32]	; 0xffffffe0
   1701c:	adds	r3, r2, r3
   17020:	bvc	17028 <_obstack_memory_used@@Base+0x3814>
   17024:	mov	r1, #1
   17028:	str	r3, [fp, #-16]
   1702c:	mov	r3, r1
   17030:	and	r3, r3, #1
   17034:	uxtb	r3, r3
   17038:	cmp	r3, #0
   1703c:	bne	170a8 <_obstack_memory_used@@Base+0x3894>
   17040:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17044:	cmp	r3, #0
   17048:	blt	1705c <_obstack_memory_used@@Base+0x3848>
   1704c:	ldr	r3, [fp, #-16]
   17050:	ldr	r2, [fp, #-36]	; 0xffffffdc
   17054:	cmp	r2, r3
   17058:	blt	170a8 <_obstack_memory_used@@Base+0x3894>
   1705c:	ldr	r2, [fp, #-16]
   17060:	mov	lr, #0
   17064:	ldr	r3, [fp, #4]
   17068:	smull	r2, r3, r2, r3
   1706c:	mov	r0, #0
   17070:	mov	r1, #0
   17074:	mov	r0, r3
   17078:	asr	r1, r3, #31
   1707c:	asr	ip, r2, #31
   17080:	cmp	ip, r0
   17084:	beq	1708c <_obstack_memory_used@@Base+0x3878>
   17088:	mov	lr, #1
   1708c:	mov	r3, r2
   17090:	str	r3, [fp, #-20]	; 0xffffffec
   17094:	mov	r3, lr
   17098:	and	r3, r3, #1
   1709c:	uxtb	r3, r3
   170a0:	cmp	r3, #0
   170a4:	beq	170ac <_obstack_memory_used@@Base+0x3898>
   170a8:	bl	17338 <_obstack_memory_used@@Base+0x3b24>
   170ac:	ldr	r3, [fp, #-20]	; 0xffffffec
   170b0:	mov	r1, r3
   170b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   170b8:	bl	16b78 <_obstack_memory_used@@Base+0x3364>
   170bc:	str	r0, [fp, #-24]	; 0xffffffe8
   170c0:	ldr	r2, [fp, #-16]
   170c4:	ldr	r3, [fp, #-28]	; 0xffffffe4
   170c8:	str	r2, [r3]
   170cc:	ldr	r3, [fp, #-24]	; 0xffffffe8
   170d0:	mov	r0, r3
   170d4:	sub	sp, fp, #4
   170d8:	ldr	fp, [sp]
   170dc:	add	sp, sp, #4
   170e0:	pop	{pc}		; (ldr pc, [sp], #4)
   170e4:	str	fp, [sp, #-8]!
   170e8:	str	lr, [sp, #4]
   170ec:	add	fp, sp, #4
   170f0:	sub	sp, sp, #8
   170f4:	str	r0, [fp, #-8]
   170f8:	mov	r1, #1
   170fc:	ldr	r0, [fp, #-8]
   17100:	bl	17154 <_obstack_memory_used@@Base+0x3940>
   17104:	mov	r3, r0
   17108:	mov	r0, r3
   1710c:	sub	sp, fp, #4
   17110:	ldr	fp, [sp]
   17114:	add	sp, sp, #4
   17118:	pop	{pc}		; (ldr pc, [sp], #4)
   1711c:	str	fp, [sp, #-8]!
   17120:	str	lr, [sp, #4]
   17124:	add	fp, sp, #4
   17128:	sub	sp, sp, #8
   1712c:	str	r0, [fp, #-8]
   17130:	mov	r1, #1
   17134:	ldr	r0, [fp, #-8]
   17138:	bl	1719c <_obstack_memory_used@@Base+0x3988>
   1713c:	mov	r3, r0
   17140:	mov	r0, r3
   17144:	sub	sp, fp, #4
   17148:	ldr	fp, [sp]
   1714c:	add	sp, sp, #4
   17150:	pop	{pc}		; (ldr pc, [sp], #4)
   17154:	str	fp, [sp, #-8]!
   17158:	str	lr, [sp, #4]
   1715c:	add	fp, sp, #4
   17160:	sub	sp, sp, #8
   17164:	str	r0, [fp, #-8]
   17168:	str	r1, [fp, #-12]
   1716c:	ldr	r1, [fp, #-12]
   17170:	ldr	r0, [fp, #-8]
   17174:	bl	1737c <_obstack_memory_used@@Base+0x3b68>
   17178:	mov	r3, r0
   1717c:	mov	r0, r3
   17180:	bl	16a88 <_obstack_memory_used@@Base+0x3274>
   17184:	mov	r3, r0
   17188:	mov	r0, r3
   1718c:	sub	sp, fp, #4
   17190:	ldr	fp, [sp]
   17194:	add	sp, sp, #4
   17198:	pop	{pc}		; (ldr pc, [sp], #4)
   1719c:	str	fp, [sp, #-8]!
   171a0:	str	lr, [sp, #4]
   171a4:	add	fp, sp, #4
   171a8:	sub	sp, sp, #8
   171ac:	str	r0, [fp, #-8]
   171b0:	str	r1, [fp, #-12]
   171b4:	ldr	r1, [fp, #-12]
   171b8:	ldr	r0, [fp, #-8]
   171bc:	bl	17c68 <_obstack_memory_used@@Base+0x4454>
   171c0:	mov	r3, r0
   171c4:	mov	r0, r3
   171c8:	bl	16a88 <_obstack_memory_used@@Base+0x3274>
   171cc:	mov	r3, r0
   171d0:	mov	r0, r3
   171d4:	sub	sp, fp, #4
   171d8:	ldr	fp, [sp]
   171dc:	add	sp, sp, #4
   171e0:	pop	{pc}		; (ldr pc, [sp], #4)
   171e4:	str	fp, [sp, #-8]!
   171e8:	str	lr, [sp, #4]
   171ec:	add	fp, sp, #4
   171f0:	sub	sp, sp, #8
   171f4:	str	r0, [fp, #-8]
   171f8:	str	r1, [fp, #-12]
   171fc:	ldr	r0, [fp, #-12]
   17200:	bl	16ac4 <_obstack_memory_used@@Base+0x32b0>
   17204:	mov	r3, r0
   17208:	ldr	r2, [fp, #-12]
   1720c:	ldr	r1, [fp, #-8]
   17210:	mov	r0, r3
   17214:	bl	10da4 <memcpy@plt>
   17218:	mov	r3, r0
   1721c:	mov	r0, r3
   17220:	sub	sp, fp, #4
   17224:	ldr	fp, [sp]
   17228:	add	sp, sp, #4
   1722c:	pop	{pc}		; (ldr pc, [sp], #4)
   17230:	str	fp, [sp, #-8]!
   17234:	str	lr, [sp, #4]
   17238:	add	fp, sp, #4
   1723c:	sub	sp, sp, #8
   17240:	str	r0, [fp, #-8]
   17244:	str	r1, [fp, #-12]
   17248:	ldr	r0, [fp, #-12]
   1724c:	bl	16b04 <_obstack_memory_used@@Base+0x32f0>
   17250:	mov	r3, r0
   17254:	mov	r0, r3
   17258:	ldr	r3, [fp, #-12]
   1725c:	mov	r2, r3
   17260:	ldr	r1, [fp, #-8]
   17264:	bl	10da4 <memcpy@plt>
   17268:	mov	r3, r0
   1726c:	mov	r0, r3
   17270:	sub	sp, fp, #4
   17274:	ldr	fp, [sp]
   17278:	add	sp, sp, #4
   1727c:	pop	{pc}		; (ldr pc, [sp], #4)
   17280:	str	fp, [sp, #-8]!
   17284:	str	lr, [sp, #4]
   17288:	add	fp, sp, #4
   1728c:	sub	sp, sp, #16
   17290:	str	r0, [fp, #-16]
   17294:	str	r1, [fp, #-20]	; 0xffffffec
   17298:	ldr	r3, [fp, #-20]	; 0xffffffec
   1729c:	add	r3, r3, #1
   172a0:	mov	r0, r3
   172a4:	bl	16b04 <_obstack_memory_used@@Base+0x32f0>
   172a8:	mov	r3, r0
   172ac:	str	r3, [fp, #-8]
   172b0:	ldr	r3, [fp, #-20]	; 0xffffffec
   172b4:	ldr	r2, [fp, #-8]
   172b8:	add	r3, r2, r3
   172bc:	mov	r2, #0
   172c0:	strb	r2, [r3]
   172c4:	ldr	r3, [fp, #-20]	; 0xffffffec
   172c8:	mov	r2, r3
   172cc:	ldr	r1, [fp, #-16]
   172d0:	ldr	r0, [fp, #-8]
   172d4:	bl	10da4 <memcpy@plt>
   172d8:	mov	r3, r0
   172dc:	mov	r0, r3
   172e0:	sub	sp, fp, #4
   172e4:	ldr	fp, [sp]
   172e8:	add	sp, sp, #4
   172ec:	pop	{pc}		; (ldr pc, [sp], #4)
   172f0:	str	fp, [sp, #-8]!
   172f4:	str	lr, [sp, #4]
   172f8:	add	fp, sp, #4
   172fc:	sub	sp, sp, #8
   17300:	str	r0, [fp, #-8]
   17304:	ldr	r0, [fp, #-8]
   17308:	bl	10f00 <strlen@plt>
   1730c:	mov	r3, r0
   17310:	add	r3, r3, #1
   17314:	mov	r1, r3
   17318:	ldr	r0, [fp, #-8]
   1731c:	bl	171e4 <_obstack_memory_used@@Base+0x39d0>
   17320:	mov	r3, r0
   17324:	mov	r0, r3
   17328:	sub	sp, fp, #4
   1732c:	ldr	fp, [sp]
   17330:	add	sp, sp, #4
   17334:	pop	{pc}		; (ldr pc, [sp], #4)
   17338:	strd	r4, [sp, #-16]!
   1733c:	str	fp, [sp, #8]
   17340:	str	lr, [sp, #12]
   17344:	add	fp, sp, #12
   17348:	movw	r3, #45292	; 0xb0ec
   1734c:	movt	r3, #2
   17350:	ldr	r4, [r3]
   17354:	movw	r0, #41268	; 0xa134
   17358:	movt	r0, #1
   1735c:	bl	10ef4 <gettext@plt>
   17360:	mov	r3, r0
   17364:	movw	r2, #41288	; 0xa148
   17368:	movt	r2, #1
   1736c:	mov	r1, #0
   17370:	mov	r0, r4
   17374:	bl	10e58 <error@plt>
   17378:	bl	10fa8 <abort@plt>
   1737c:	str	fp, [sp, #-8]!
   17380:	str	lr, [sp, #4]
   17384:	add	fp, sp, #4
   17388:	sub	sp, sp, #16
   1738c:	str	r0, [fp, #-16]
   17390:	str	r1, [fp, #-20]	; 0xffffffec
   17394:	ldr	r3, [fp, #-16]
   17398:	cmp	r3, #0
   1739c:	beq	173ac <_obstack_memory_used@@Base+0x3b98>
   173a0:	ldr	r3, [fp, #-20]	; 0xffffffec
   173a4:	cmp	r3, #0
   173a8:	bne	173bc <_obstack_memory_used@@Base+0x3ba8>
   173ac:	mov	r3, #1
   173b0:	str	r3, [fp, #-20]	; 0xffffffec
   173b4:	ldr	r3, [fp, #-20]	; 0xffffffec
   173b8:	str	r3, [fp, #-16]
   173bc:	mov	ip, #0
   173c0:	ldr	r2, [fp, #-16]
   173c4:	ldr	r3, [fp, #-20]	; 0xffffffec
   173c8:	umull	r0, r1, r2, r3
   173cc:	mov	r2, #0
   173d0:	mov	r3, #0
   173d4:	mov	r2, r1
   173d8:	mov	r3, #0
   173dc:	cmp	r2, #0
   173e0:	beq	173e8 <_obstack_memory_used@@Base+0x3bd4>
   173e4:	mov	ip, #1
   173e8:	cmp	r0, #0
   173ec:	bge	173f4 <_obstack_memory_used@@Base+0x3be0>
   173f0:	mov	ip, #1
   173f4:	mov	r3, ip
   173f8:	and	r3, r3, #1
   173fc:	uxtb	r3, r3
   17400:	cmp	r3, #0
   17404:	beq	17420 <_obstack_memory_used@@Base+0x3c0c>
   17408:	bl	10f18 <__errno_location@plt>
   1740c:	mov	r2, r0
   17410:	mov	r3, #12
   17414:	str	r3, [r2]
   17418:	mov	r3, #0
   1741c:	b	17438 <_obstack_memory_used@@Base+0x3c24>
   17420:	ldr	r1, [fp, #-20]	; 0xffffffec
   17424:	ldr	r0, [fp, #-16]
   17428:	bl	10d50 <calloc@plt>
   1742c:	mov	r3, r0
   17430:	str	r3, [fp, #-8]
   17434:	ldr	r3, [fp, #-8]
   17438:	mov	r0, r3
   1743c:	sub	sp, fp, #4
   17440:	ldr	fp, [sp]
   17444:	add	sp, sp, #4
   17448:	pop	{pc}		; (ldr pc, [sp], #4)
   1744c:	str	fp, [sp, #-8]!
   17450:	str	lr, [sp, #4]
   17454:	add	fp, sp, #4
   17458:	sub	sp, sp, #16
   1745c:	str	r0, [fp, #-16]
   17460:	ldr	r3, [fp, #-16]
   17464:	cmp	r3, #0
   17468:	bne	17474 <_obstack_memory_used@@Base+0x3c60>
   1746c:	mov	r3, #1
   17470:	str	r3, [fp, #-16]
   17474:	mov	r2, #0
   17478:	ldr	r3, [fp, #-16]
   1747c:	cmp	r3, #0
   17480:	bge	17488 <_obstack_memory_used@@Base+0x3c74>
   17484:	mov	r2, #1
   17488:	mov	r3, r2
   1748c:	and	r3, r3, #1
   17490:	uxtb	r3, r3
   17494:	cmp	r3, #0
   17498:	beq	174b4 <_obstack_memory_used@@Base+0x3ca0>
   1749c:	bl	10f18 <__errno_location@plt>
   174a0:	mov	r2, r0
   174a4:	mov	r3, #12
   174a8:	str	r3, [r2]
   174ac:	mov	r3, #0
   174b0:	b	174c8 <_obstack_memory_used@@Base+0x3cb4>
   174b4:	ldr	r0, [fp, #-16]
   174b8:	bl	10e94 <malloc@plt>
   174bc:	mov	r3, r0
   174c0:	str	r3, [fp, #-8]
   174c4:	ldr	r3, [fp, #-8]
   174c8:	mov	r0, r3
   174cc:	sub	sp, fp, #4
   174d0:	ldr	fp, [sp]
   174d4:	add	sp, sp, #4
   174d8:	pop	{pc}		; (ldr pc, [sp], #4)
   174dc:	str	fp, [sp, #-8]!
   174e0:	str	lr, [sp, #4]
   174e4:	add	fp, sp, #4
   174e8:	sub	sp, sp, #16
   174ec:	str	r0, [fp, #-16]
   174f0:	str	r1, [fp, #-20]	; 0xffffffec
   174f4:	ldr	r3, [fp, #-16]
   174f8:	cmp	r3, #0
   174fc:	bne	17510 <_obstack_memory_used@@Base+0x3cfc>
   17500:	ldr	r0, [fp, #-20]	; 0xffffffec
   17504:	bl	1744c <_obstack_memory_used@@Base+0x3c38>
   17508:	mov	r3, r0
   1750c:	b	17580 <_obstack_memory_used@@Base+0x3d6c>
   17510:	ldr	r3, [fp, #-20]	; 0xffffffec
   17514:	cmp	r3, #0
   17518:	bne	1752c <_obstack_memory_used@@Base+0x3d18>
   1751c:	ldr	r0, [fp, #-16]
   17520:	bl	12d24 <close@plt+0x1d70>
   17524:	mov	r3, #0
   17528:	b	17580 <_obstack_memory_used@@Base+0x3d6c>
   1752c:	mov	r2, #0
   17530:	ldr	r3, [fp, #-20]	; 0xffffffec
   17534:	cmp	r3, #0
   17538:	bge	17540 <_obstack_memory_used@@Base+0x3d2c>
   1753c:	mov	r2, #1
   17540:	mov	r3, r2
   17544:	and	r3, r3, #1
   17548:	uxtb	r3, r3
   1754c:	cmp	r3, #0
   17550:	beq	1756c <_obstack_memory_used@@Base+0x3d58>
   17554:	bl	10f18 <__errno_location@plt>
   17558:	mov	r2, r0
   1755c:	mov	r3, #12
   17560:	str	r3, [r2]
   17564:	mov	r3, #0
   17568:	b	17580 <_obstack_memory_used@@Base+0x3d6c>
   1756c:	ldr	r1, [fp, #-20]	; 0xffffffec
   17570:	ldr	r0, [fp, #-16]
   17574:	bl	10dec <realloc@plt>
   17578:	str	r0, [fp, #-8]
   1757c:	ldr	r3, [fp, #-8]
   17580:	mov	r0, r3
   17584:	sub	sp, fp, #4
   17588:	ldr	fp, [sp]
   1758c:	add	sp, sp, #4
   17590:	pop	{pc}		; (ldr pc, [sp], #4)
   17594:	push	{fp}		; (str fp, [sp, #-4]!)
   17598:	add	fp, sp, #0
   1759c:	sub	sp, sp, #12
   175a0:	str	r0, [fp, #-8]
   175a4:	ldr	r3, [fp, #-8]
   175a8:	cmp	r3, #90	; 0x5a
   175ac:	bgt	175d0 <_obstack_memory_used@@Base+0x3dbc>
   175b0:	ldr	r3, [fp, #-8]
   175b4:	cmp	r3, #65	; 0x41
   175b8:	bge	175e0 <_obstack_memory_used@@Base+0x3dcc>
   175bc:	ldr	r3, [fp, #-8]
   175c0:	sub	r3, r3, #48	; 0x30
   175c4:	cmp	r3, #9
   175c8:	bhi	175e8 <_obstack_memory_used@@Base+0x3dd4>
   175cc:	b	175e0 <_obstack_memory_used@@Base+0x3dcc>
   175d0:	ldr	r3, [fp, #-8]
   175d4:	sub	r3, r3, #97	; 0x61
   175d8:	cmp	r3, #25
   175dc:	bhi	175e8 <_obstack_memory_used@@Base+0x3dd4>
   175e0:	mov	r3, #1
   175e4:	b	175ec <_obstack_memory_used@@Base+0x3dd8>
   175e8:	mov	r3, #0
   175ec:	mov	r0, r3
   175f0:	add	sp, fp, #0
   175f4:	pop	{fp}		; (ldr fp, [sp], #4)
   175f8:	bx	lr
   175fc:	push	{fp}		; (str fp, [sp, #-4]!)
   17600:	add	fp, sp, #0
   17604:	sub	sp, sp, #12
   17608:	str	r0, [fp, #-8]
   1760c:	ldr	r3, [fp, #-8]
   17610:	cmp	r3, #65	; 0x41
   17614:	blt	1763c <_obstack_memory_used@@Base+0x3e28>
   17618:	ldr	r3, [fp, #-8]
   1761c:	cmp	r3, #90	; 0x5a
   17620:	ble	17634 <_obstack_memory_used@@Base+0x3e20>
   17624:	ldr	r3, [fp, #-8]
   17628:	sub	r3, r3, #97	; 0x61
   1762c:	cmp	r3, #25
   17630:	bhi	1763c <_obstack_memory_used@@Base+0x3e28>
   17634:	mov	r3, #1
   17638:	b	17640 <_obstack_memory_used@@Base+0x3e2c>
   1763c:	mov	r3, #0
   17640:	mov	r0, r3
   17644:	add	sp, fp, #0
   17648:	pop	{fp}		; (ldr fp, [sp], #4)
   1764c:	bx	lr
   17650:	push	{fp}		; (str fp, [sp, #-4]!)
   17654:	add	fp, sp, #0
   17658:	sub	sp, sp, #12
   1765c:	str	r0, [fp, #-8]
   17660:	ldr	r3, [fp, #-8]
   17664:	cmp	r3, #127	; 0x7f
   17668:	bhi	17674 <_obstack_memory_used@@Base+0x3e60>
   1766c:	mov	r3, #1
   17670:	b	17678 <_obstack_memory_used@@Base+0x3e64>
   17674:	mov	r3, #0
   17678:	mov	r0, r3
   1767c:	add	sp, fp, #0
   17680:	pop	{fp}		; (ldr fp, [sp], #4)
   17684:	bx	lr
   17688:	push	{fp}		; (str fp, [sp, #-4]!)
   1768c:	add	fp, sp, #0
   17690:	sub	sp, sp, #12
   17694:	str	r0, [fp, #-8]
   17698:	ldr	r3, [fp, #-8]
   1769c:	cmp	r3, #32
   176a0:	beq	176b0 <_obstack_memory_used@@Base+0x3e9c>
   176a4:	ldr	r3, [fp, #-8]
   176a8:	cmp	r3, #9
   176ac:	bne	176b8 <_obstack_memory_used@@Base+0x3ea4>
   176b0:	mov	r3, #1
   176b4:	b	176bc <_obstack_memory_used@@Base+0x3ea8>
   176b8:	mov	r3, #0
   176bc:	and	r3, r3, #1
   176c0:	uxtb	r3, r3
   176c4:	mov	r0, r3
   176c8:	add	sp, fp, #0
   176cc:	pop	{fp}		; (ldr fp, [sp], #4)
   176d0:	bx	lr
   176d4:	push	{fp}		; (str fp, [sp, #-4]!)
   176d8:	add	fp, sp, #0
   176dc:	sub	sp, sp, #12
   176e0:	str	r0, [fp, #-8]
   176e4:	ldr	r3, [fp, #-8]
   176e8:	cmp	r3, #0
   176ec:	blt	17710 <_obstack_memory_used@@Base+0x3efc>
   176f0:	ldr	r3, [fp, #-8]
   176f4:	cmp	r3, #31
   176f8:	ble	17708 <_obstack_memory_used@@Base+0x3ef4>
   176fc:	ldr	r3, [fp, #-8]
   17700:	cmp	r3, #127	; 0x7f
   17704:	bne	17710 <_obstack_memory_used@@Base+0x3efc>
   17708:	mov	r3, #1
   1770c:	b	17714 <_obstack_memory_used@@Base+0x3f00>
   17710:	mov	r3, #0
   17714:	mov	r0, r3
   17718:	add	sp, fp, #0
   1771c:	pop	{fp}		; (ldr fp, [sp], #4)
   17720:	bx	lr
   17724:	push	{fp}		; (str fp, [sp, #-4]!)
   17728:	add	fp, sp, #0
   1772c:	sub	sp, sp, #12
   17730:	str	r0, [fp, #-8]
   17734:	ldr	r3, [fp, #-8]
   17738:	sub	r3, r3, #48	; 0x30
   1773c:	cmp	r3, #9
   17740:	bhi	1774c <_obstack_memory_used@@Base+0x3f38>
   17744:	mov	r3, #1
   17748:	b	17750 <_obstack_memory_used@@Base+0x3f3c>
   1774c:	mov	r3, #0
   17750:	mov	r0, r3
   17754:	add	sp, fp, #0
   17758:	pop	{fp}		; (ldr fp, [sp], #4)
   1775c:	bx	lr
   17760:	push	{fp}		; (str fp, [sp, #-4]!)
   17764:	add	fp, sp, #0
   17768:	sub	sp, sp, #12
   1776c:	str	r0, [fp, #-8]
   17770:	ldr	r3, [fp, #-8]
   17774:	sub	r3, r3, #33	; 0x21
   17778:	cmp	r3, #93	; 0x5d
   1777c:	bhi	17788 <_obstack_memory_used@@Base+0x3f74>
   17780:	mov	r3, #1
   17784:	b	1778c <_obstack_memory_used@@Base+0x3f78>
   17788:	mov	r3, #0
   1778c:	mov	r0, r3
   17790:	add	sp, fp, #0
   17794:	pop	{fp}		; (ldr fp, [sp], #4)
   17798:	bx	lr
   1779c:	push	{fp}		; (str fp, [sp, #-4]!)
   177a0:	add	fp, sp, #0
   177a4:	sub	sp, sp, #12
   177a8:	str	r0, [fp, #-8]
   177ac:	ldr	r3, [fp, #-8]
   177b0:	sub	r3, r3, #97	; 0x61
   177b4:	cmp	r3, #25
   177b8:	bhi	177c4 <_obstack_memory_used@@Base+0x3fb0>
   177bc:	mov	r3, #1
   177c0:	b	177c8 <_obstack_memory_used@@Base+0x3fb4>
   177c4:	mov	r3, #0
   177c8:	mov	r0, r3
   177cc:	add	sp, fp, #0
   177d0:	pop	{fp}		; (ldr fp, [sp], #4)
   177d4:	bx	lr
   177d8:	push	{fp}		; (str fp, [sp, #-4]!)
   177dc:	add	fp, sp, #0
   177e0:	sub	sp, sp, #12
   177e4:	str	r0, [fp, #-8]
   177e8:	ldr	r3, [fp, #-8]
   177ec:	sub	r3, r3, #32
   177f0:	cmp	r3, #94	; 0x5e
   177f4:	bhi	17800 <_obstack_memory_used@@Base+0x3fec>
   177f8:	mov	r3, #1
   177fc:	b	17804 <_obstack_memory_used@@Base+0x3ff0>
   17800:	mov	r3, #0
   17804:	mov	r0, r3
   17808:	add	sp, fp, #0
   1780c:	pop	{fp}		; (ldr fp, [sp], #4)
   17810:	bx	lr
   17814:	push	{fp}		; (str fp, [sp, #-4]!)
   17818:	add	fp, sp, #0
   1781c:	sub	sp, sp, #12
   17820:	str	r0, [fp, #-8]
   17824:	ldr	r3, [fp, #-8]
   17828:	cmp	r3, #64	; 0x40
   1782c:	bgt	17850 <_obstack_memory_used@@Base+0x403c>
   17830:	ldr	r3, [fp, #-8]
   17834:	cmp	r3, #58	; 0x3a
   17838:	bge	17878 <_obstack_memory_used@@Base+0x4064>
   1783c:	ldr	r3, [fp, #-8]
   17840:	sub	r3, r3, #33	; 0x21
   17844:	cmp	r3, #14
   17848:	bhi	17880 <_obstack_memory_used@@Base+0x406c>
   1784c:	b	17878 <_obstack_memory_used@@Base+0x4064>
   17850:	ldr	r3, [fp, #-8]
   17854:	cmp	r3, #91	; 0x5b
   17858:	blt	17880 <_obstack_memory_used@@Base+0x406c>
   1785c:	ldr	r3, [fp, #-8]
   17860:	cmp	r3, #96	; 0x60
   17864:	ble	17878 <_obstack_memory_used@@Base+0x4064>
   17868:	ldr	r3, [fp, #-8]
   1786c:	sub	r3, r3, #123	; 0x7b
   17870:	cmp	r3, #3
   17874:	bhi	17880 <_obstack_memory_used@@Base+0x406c>
   17878:	mov	r3, #1
   1787c:	b	17884 <_obstack_memory_used@@Base+0x4070>
   17880:	mov	r3, #0
   17884:	mov	r0, r3
   17888:	add	sp, fp, #0
   1788c:	pop	{fp}		; (ldr fp, [sp], #4)
   17890:	bx	lr
   17894:	push	{fp}		; (str fp, [sp, #-4]!)
   17898:	add	fp, sp, #0
   1789c:	sub	sp, sp, #12
   178a0:	str	r0, [fp, #-8]
   178a4:	ldr	r3, [fp, #-8]
   178a8:	cmp	r3, #9
   178ac:	blt	178d0 <_obstack_memory_used@@Base+0x40bc>
   178b0:	ldr	r3, [fp, #-8]
   178b4:	cmp	r3, #13
   178b8:	ble	178c8 <_obstack_memory_used@@Base+0x40b4>
   178bc:	ldr	r3, [fp, #-8]
   178c0:	cmp	r3, #32
   178c4:	bne	178d0 <_obstack_memory_used@@Base+0x40bc>
   178c8:	mov	r3, #1
   178cc:	b	178d4 <_obstack_memory_used@@Base+0x40c0>
   178d0:	mov	r3, #0
   178d4:	mov	r0, r3
   178d8:	add	sp, fp, #0
   178dc:	pop	{fp}		; (ldr fp, [sp], #4)
   178e0:	bx	lr
   178e4:	push	{fp}		; (str fp, [sp, #-4]!)
   178e8:	add	fp, sp, #0
   178ec:	sub	sp, sp, #12
   178f0:	str	r0, [fp, #-8]
   178f4:	ldr	r3, [fp, #-8]
   178f8:	sub	r3, r3, #65	; 0x41
   178fc:	cmp	r3, #25
   17900:	bhi	1790c <_obstack_memory_used@@Base+0x40f8>
   17904:	mov	r3, #1
   17908:	b	17910 <_obstack_memory_used@@Base+0x40fc>
   1790c:	mov	r3, #0
   17910:	mov	r0, r3
   17914:	add	sp, fp, #0
   17918:	pop	{fp}		; (ldr fp, [sp], #4)
   1791c:	bx	lr
   17920:	push	{fp}		; (str fp, [sp, #-4]!)
   17924:	add	fp, sp, #0
   17928:	sub	sp, sp, #12
   1792c:	str	r0, [fp, #-8]
   17930:	ldr	r3, [fp, #-8]
   17934:	sub	r3, r3, #48	; 0x30
   17938:	cmp	r3, #54	; 0x36
   1793c:	ldrls	pc, [pc, r3, lsl #2]
   17940:	b	17a28 <_obstack_memory_used@@Base+0x4214>
   17944:	andeq	r7, r1, r0, lsr #20
   17948:	andeq	r7, r1, r0, lsr #20
   1794c:	andeq	r7, r1, r0, lsr #20
   17950:	andeq	r7, r1, r0, lsr #20
   17954:	andeq	r7, r1, r0, lsr #20
   17958:	andeq	r7, r1, r0, lsr #20
   1795c:	andeq	r7, r1, r0, lsr #20
   17960:	andeq	r7, r1, r0, lsr #20
   17964:	andeq	r7, r1, r0, lsr #20
   17968:	andeq	r7, r1, r0, lsr #20
   1796c:	andeq	r7, r1, r8, lsr #20
   17970:	andeq	r7, r1, r8, lsr #20
   17974:	andeq	r7, r1, r8, lsr #20
   17978:	andeq	r7, r1, r8, lsr #20
   1797c:	andeq	r7, r1, r8, lsr #20
   17980:	andeq	r7, r1, r8, lsr #20
   17984:	andeq	r7, r1, r8, lsr #20
   17988:	andeq	r7, r1, r0, lsr #20
   1798c:	andeq	r7, r1, r0, lsr #20
   17990:	andeq	r7, r1, r0, lsr #20
   17994:	andeq	r7, r1, r0, lsr #20
   17998:	andeq	r7, r1, r0, lsr #20
   1799c:	andeq	r7, r1, r0, lsr #20
   179a0:	andeq	r7, r1, r8, lsr #20
   179a4:	andeq	r7, r1, r8, lsr #20
   179a8:	andeq	r7, r1, r8, lsr #20
   179ac:	andeq	r7, r1, r8, lsr #20
   179b0:	andeq	r7, r1, r8, lsr #20
   179b4:	andeq	r7, r1, r8, lsr #20
   179b8:	andeq	r7, r1, r8, lsr #20
   179bc:	andeq	r7, r1, r8, lsr #20
   179c0:	andeq	r7, r1, r8, lsr #20
   179c4:	andeq	r7, r1, r8, lsr #20
   179c8:	andeq	r7, r1, r8, lsr #20
   179cc:	andeq	r7, r1, r8, lsr #20
   179d0:	andeq	r7, r1, r8, lsr #20
   179d4:	andeq	r7, r1, r8, lsr #20
   179d8:	andeq	r7, r1, r8, lsr #20
   179dc:	andeq	r7, r1, r8, lsr #20
   179e0:	andeq	r7, r1, r8, lsr #20
   179e4:	andeq	r7, r1, r8, lsr #20
   179e8:	andeq	r7, r1, r8, lsr #20
   179ec:	andeq	r7, r1, r8, lsr #20
   179f0:	andeq	r7, r1, r8, lsr #20
   179f4:	andeq	r7, r1, r8, lsr #20
   179f8:	andeq	r7, r1, r8, lsr #20
   179fc:	andeq	r7, r1, r8, lsr #20
   17a00:	andeq	r7, r1, r8, lsr #20
   17a04:	andeq	r7, r1, r8, lsr #20
   17a08:	andeq	r7, r1, r0, lsr #20
   17a0c:	andeq	r7, r1, r0, lsr #20
   17a10:	andeq	r7, r1, r0, lsr #20
   17a14:	andeq	r7, r1, r0, lsr #20
   17a18:	andeq	r7, r1, r0, lsr #20
   17a1c:	andeq	r7, r1, r0, lsr #20
   17a20:	mov	r3, #1
   17a24:	b	17a2c <_obstack_memory_used@@Base+0x4218>
   17a28:	mov	r3, #0
   17a2c:	mov	r0, r3
   17a30:	add	sp, fp, #0
   17a34:	pop	{fp}		; (ldr fp, [sp], #4)
   17a38:	bx	lr
   17a3c:	push	{fp}		; (str fp, [sp, #-4]!)
   17a40:	add	fp, sp, #0
   17a44:	sub	sp, sp, #12
   17a48:	str	r0, [fp, #-8]
   17a4c:	ldr	r3, [fp, #-8]
   17a50:	sub	r3, r3, #65	; 0x41
   17a54:	cmp	r3, #25
   17a58:	bhi	17a68 <_obstack_memory_used@@Base+0x4254>
   17a5c:	ldr	r3, [fp, #-8]
   17a60:	add	r3, r3, #32
   17a64:	b	17a6c <_obstack_memory_used@@Base+0x4258>
   17a68:	ldr	r3, [fp, #-8]
   17a6c:	mov	r0, r3
   17a70:	add	sp, fp, #0
   17a74:	pop	{fp}		; (ldr fp, [sp], #4)
   17a78:	bx	lr
   17a7c:	push	{fp}		; (str fp, [sp, #-4]!)
   17a80:	add	fp, sp, #0
   17a84:	sub	sp, sp, #12
   17a88:	str	r0, [fp, #-8]
   17a8c:	ldr	r3, [fp, #-8]
   17a90:	sub	r3, r3, #97	; 0x61
   17a94:	cmp	r3, #25
   17a98:	bhi	17aa8 <_obstack_memory_used@@Base+0x4294>
   17a9c:	ldr	r3, [fp, #-8]
   17aa0:	sub	r3, r3, #32
   17aa4:	b	17aac <_obstack_memory_used@@Base+0x4298>
   17aa8:	ldr	r3, [fp, #-8]
   17aac:	mov	r0, r3
   17ab0:	add	sp, fp, #0
   17ab4:	pop	{fp}		; (ldr fp, [sp], #4)
   17ab8:	bx	lr
   17abc:	str	fp, [sp, #-8]!
   17ac0:	str	lr, [sp, #4]
   17ac4:	add	fp, sp, #4
   17ac8:	sub	sp, sp, #16
   17acc:	str	r0, [fp, #-16]
   17ad0:	ldr	r0, [fp, #-16]
   17ad4:	bl	10e34 <__fpending@plt>
   17ad8:	mov	r3, r0
   17adc:	cmp	r3, #0
   17ae0:	movne	r3, #1
   17ae4:	moveq	r3, #0
   17ae8:	strb	r3, [fp, #-5]
   17aec:	ldr	r0, [fp, #-16]
   17af0:	bl	10e40 <ferror_unlocked@plt>
   17af4:	mov	r3, r0
   17af8:	cmp	r3, #0
   17afc:	movne	r3, #1
   17b00:	moveq	r3, #0
   17b04:	strb	r3, [fp, #-6]
   17b08:	ldr	r0, [fp, #-16]
   17b0c:	bl	12b60 <close@plt+0x1bac>
   17b10:	mov	r3, r0
   17b14:	cmp	r3, #0
   17b18:	movne	r3, #1
   17b1c:	moveq	r3, #0
   17b20:	strb	r3, [fp, #-7]
   17b24:	ldrb	r3, [fp, #-6]
   17b28:	cmp	r3, #0
   17b2c:	bne	17b5c <_obstack_memory_used@@Base+0x4348>
   17b30:	ldrb	r3, [fp, #-7]
   17b34:	cmp	r3, #0
   17b38:	beq	17b88 <_obstack_memory_used@@Base+0x4374>
   17b3c:	ldrb	r3, [fp, #-5]
   17b40:	cmp	r3, #0
   17b44:	bne	17b5c <_obstack_memory_used@@Base+0x4348>
   17b48:	bl	10f18 <__errno_location@plt>
   17b4c:	mov	r3, r0
   17b50:	ldr	r3, [r3]
   17b54:	cmp	r3, #9
   17b58:	beq	17b88 <_obstack_memory_used@@Base+0x4374>
   17b5c:	ldrb	r3, [fp, #-7]
   17b60:	eor	r3, r3, #1
   17b64:	uxtb	r3, r3
   17b68:	cmp	r3, #0
   17b6c:	beq	17b80 <_obstack_memory_used@@Base+0x436c>
   17b70:	bl	10f18 <__errno_location@plt>
   17b74:	mov	r2, r0
   17b78:	mov	r3, #0
   17b7c:	str	r3, [r2]
   17b80:	mvn	r3, #0
   17b84:	b	17b8c <_obstack_memory_used@@Base+0x4378>
   17b88:	mov	r3, #0
   17b8c:	mov	r0, r3
   17b90:	sub	sp, fp, #4
   17b94:	ldr	fp, [sp]
   17b98:	add	sp, sp, #4
   17b9c:	pop	{pc}		; (ldr pc, [sp], #4)
   17ba0:	str	fp, [sp, #-8]!
   17ba4:	str	lr, [sp, #4]
   17ba8:	add	fp, sp, #4
   17bac:	bl	10f18 <__errno_location@plt>
   17bb0:	mov	r2, r0
   17bb4:	mov	r3, #12
   17bb8:	str	r3, [r2]
   17bbc:	mov	r3, #0
   17bc0:	mov	r0, r3
   17bc4:	sub	sp, fp, #4
   17bc8:	ldr	fp, [sp]
   17bcc:	add	sp, sp, #4
   17bd0:	pop	{pc}		; (ldr pc, [sp], #4)
   17bd4:	str	fp, [sp, #-8]!
   17bd8:	str	lr, [sp, #4]
   17bdc:	add	fp, sp, #4
   17be0:	sub	sp, sp, #8
   17be4:	str	r0, [fp, #-8]
   17be8:	ldr	r3, [fp, #-8]
   17bec:	mov	r0, r3
   17bf0:	bl	1744c <_obstack_memory_used@@Base+0x3c38>
   17bf4:	mov	r3, r0
   17bf8:	mov	r0, r3
   17bfc:	sub	sp, fp, #4
   17c00:	ldr	fp, [sp]
   17c04:	add	sp, sp, #4
   17c08:	pop	{pc}		; (ldr pc, [sp], #4)
   17c0c:	str	fp, [sp, #-8]!
   17c10:	str	lr, [sp, #4]
   17c14:	add	fp, sp, #4
   17c18:	sub	sp, sp, #8
   17c1c:	str	r0, [fp, #-8]
   17c20:	str	r1, [fp, #-12]
   17c24:	ldr	r3, [fp, #-12]
   17c28:	cmp	r3, #0
   17c2c:	moveq	r3, #1
   17c30:	movne	r3, #0
   17c34:	uxtb	r3, r3
   17c38:	mov	r2, r3
   17c3c:	ldr	r3, [fp, #-12]
   17c40:	orr	r3, r2, r3
   17c44:	mov	r1, r3
   17c48:	ldr	r0, [fp, #-8]
   17c4c:	bl	174dc <_obstack_memory_used@@Base+0x3cc8>
   17c50:	mov	r3, r0
   17c54:	mov	r0, r3
   17c58:	sub	sp, fp, #4
   17c5c:	ldr	fp, [sp]
   17c60:	add	sp, sp, #4
   17c64:	pop	{pc}		; (ldr pc, [sp], #4)
   17c68:	str	fp, [sp, #-8]!
   17c6c:	str	lr, [sp, #4]
   17c70:	add	fp, sp, #4
   17c74:	sub	sp, sp, #8
   17c78:	str	r0, [fp, #-8]
   17c7c:	str	r1, [fp, #-12]
   17c80:	ldr	r3, [fp, #-8]
   17c84:	ldr	r2, [fp, #-12]
   17c88:	mov	r1, r2
   17c8c:	mov	r0, r3
   17c90:	bl	1737c <_obstack_memory_used@@Base+0x3b68>
   17c94:	mov	r3, r0
   17c98:	mov	r0, r3
   17c9c:	sub	sp, fp, #4
   17ca0:	ldr	fp, [sp]
   17ca4:	add	sp, sp, #4
   17ca8:	pop	{pc}		; (ldr pc, [sp], #4)
   17cac:	str	fp, [sp, #-8]!
   17cb0:	str	lr, [sp, #4]
   17cb4:	add	fp, sp, #4
   17cb8:	sub	sp, sp, #16
   17cbc:	str	r0, [fp, #-8]
   17cc0:	str	r1, [fp, #-12]
   17cc4:	str	r2, [fp, #-16]
   17cc8:	ldr	r3, [fp, #-12]
   17ccc:	cmp	r3, #0
   17cd0:	beq	17ce0 <_obstack_memory_used@@Base+0x44cc>
   17cd4:	ldr	r3, [fp, #-16]
   17cd8:	cmp	r3, #0
   17cdc:	bne	17cf0 <_obstack_memory_used@@Base+0x44dc>
   17ce0:	mov	r3, #1
   17ce4:	str	r3, [fp, #-16]
   17ce8:	ldr	r3, [fp, #-16]
   17cec:	str	r3, [fp, #-12]
   17cf0:	ldr	r3, [fp, #-12]
   17cf4:	ldr	r2, [fp, #-16]
   17cf8:	mov	r1, r3
   17cfc:	ldr	r0, [fp, #-8]
   17d00:	bl	17e3c <_obstack_memory_used@@Base+0x4628>
   17d04:	mov	r3, r0
   17d08:	mov	r0, r3
   17d0c:	sub	sp, fp, #4
   17d10:	ldr	fp, [sp]
   17d14:	add	sp, sp, #4
   17d18:	pop	{pc}		; (ldr pc, [sp], #4)
   17d1c:	str	fp, [sp, #-8]!
   17d20:	str	lr, [sp, #4]
   17d24:	add	fp, sp, #4
   17d28:	sub	sp, sp, #8
   17d2c:	mov	r0, #14
   17d30:	bl	10f78 <nl_langinfo@plt>
   17d34:	str	r0, [fp, #-8]
   17d38:	ldr	r3, [fp, #-8]
   17d3c:	cmp	r3, #0
   17d40:	bne	17d50 <_obstack_memory_used@@Base+0x453c>
   17d44:	movw	r3, #41292	; 0xa14c
   17d48:	movt	r3, #1
   17d4c:	str	r3, [fp, #-8]
   17d50:	ldr	r3, [fp, #-8]
   17d54:	ldrb	r3, [r3]
   17d58:	cmp	r3, #0
   17d5c:	bne	17d6c <_obstack_memory_used@@Base+0x4558>
   17d60:	movw	r3, #41296	; 0xa150
   17d64:	movt	r3, #1
   17d68:	str	r3, [fp, #-8]
   17d6c:	ldr	r3, [fp, #-8]
   17d70:	mov	r0, r3
   17d74:	sub	sp, fp, #4
   17d78:	ldr	fp, [sp]
   17d7c:	add	sp, sp, #4
   17d80:	pop	{pc}		; (ldr pc, [sp], #4)
   17d84:	str	fp, [sp, #-8]!
   17d88:	str	lr, [sp, #4]
   17d8c:	add	fp, sp, #4
   17d90:	sub	sp, sp, #32
   17d94:	str	r0, [fp, #-24]	; 0xffffffe8
   17d98:	str	r1, [fp, #-28]	; 0xffffffe4
   17d9c:	str	r2, [fp, #-32]	; 0xffffffe0
   17da0:	str	r3, [fp, #-36]	; 0xffffffdc
   17da4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17da8:	cmp	r3, #0
   17dac:	bne	17db8 <_obstack_memory_used@@Base+0x45a4>
   17db0:	sub	r3, fp, #16
   17db4:	str	r3, [fp, #-24]	; 0xffffffe8
   17db8:	ldr	r3, [fp, #-36]	; 0xffffffdc
   17dbc:	ldr	r2, [fp, #-32]	; 0xffffffe0
   17dc0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   17dc4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17dc8:	bl	10e4c <mbrtowc@plt>
   17dcc:	str	r0, [fp, #-8]
   17dd0:	ldr	r3, [fp, #-8]
   17dd4:	cmn	r3, #3
   17dd8:	bls	17e24 <_obstack_memory_used@@Base+0x4610>
   17ddc:	ldr	r3, [fp, #-32]	; 0xffffffe0
   17de0:	cmp	r3, #0
   17de4:	beq	17e24 <_obstack_memory_used@@Base+0x4610>
   17de8:	mov	r0, #0
   17dec:	bl	17ee0 <_obstack_memory_used@@Base+0x46cc>
   17df0:	mov	r3, r0
   17df4:	eor	r3, r3, #1
   17df8:	uxtb	r3, r3
   17dfc:	cmp	r3, #0
   17e00:	beq	17e24 <_obstack_memory_used@@Base+0x4610>
   17e04:	ldr	r3, [fp, #-28]	; 0xffffffe4
   17e08:	ldrb	r3, [r3]
   17e0c:	strb	r3, [fp, #-9]
   17e10:	ldrb	r2, [fp, #-9]
   17e14:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17e18:	str	r2, [r3]
   17e1c:	mov	r3, #1
   17e20:	b	17e28 <_obstack_memory_used@@Base+0x4614>
   17e24:	ldr	r3, [fp, #-8]
   17e28:	mov	r0, r3
   17e2c:	sub	sp, fp, #4
   17e30:	ldr	fp, [sp]
   17e34:	add	sp, sp, #4
   17e38:	pop	{pc}		; (ldr pc, [sp], #4)
   17e3c:	str	fp, [sp, #-8]!
   17e40:	str	lr, [sp, #4]
   17e44:	add	fp, sp, #4
   17e48:	sub	sp, sp, #24
   17e4c:	str	r0, [fp, #-16]
   17e50:	str	r1, [fp, #-20]	; 0xffffffec
   17e54:	str	r2, [fp, #-24]	; 0xffffffe8
   17e58:	mov	ip, #0
   17e5c:	ldr	r2, [fp, #-20]	; 0xffffffec
   17e60:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17e64:	umull	r0, r1, r2, r3
   17e68:	mov	r2, #0
   17e6c:	mov	r3, #0
   17e70:	mov	r2, r1
   17e74:	mov	r3, #0
   17e78:	cmp	r2, #0
   17e7c:	beq	17e84 <_obstack_memory_used@@Base+0x4670>
   17e80:	mov	ip, #1
   17e84:	mov	r3, r0
   17e88:	str	r3, [fp, #-8]
   17e8c:	mov	r3, ip
   17e90:	and	r3, r3, #1
   17e94:	uxtb	r3, r3
   17e98:	cmp	r3, #0
   17e9c:	beq	17eb8 <_obstack_memory_used@@Base+0x46a4>
   17ea0:	bl	10f18 <__errno_location@plt>
   17ea4:	mov	r2, r0
   17ea8:	mov	r3, #12
   17eac:	str	r3, [r2]
   17eb0:	mov	r3, #0
   17eb4:	b	17ecc <_obstack_memory_used@@Base+0x46b8>
   17eb8:	ldr	r3, [fp, #-8]
   17ebc:	mov	r1, r3
   17ec0:	ldr	r0, [fp, #-16]
   17ec4:	bl	174dc <_obstack_memory_used@@Base+0x3cc8>
   17ec8:	mov	r3, r0
   17ecc:	mov	r0, r3
   17ed0:	sub	sp, fp, #4
   17ed4:	ldr	fp, [sp]
   17ed8:	add	sp, sp, #4
   17edc:	pop	{pc}		; (ldr pc, [sp], #4)
   17ee0:	str	fp, [sp, #-8]!
   17ee4:	str	lr, [sp, #4]
   17ee8:	add	fp, sp, #4
   17eec:	sub	sp, sp, #272	; 0x110
   17ef0:	str	r0, [fp, #-272]	; 0xfffffef0
   17ef4:	sub	r3, fp, #264	; 0x108
   17ef8:	movw	r2, #257	; 0x101
   17efc:	mov	r1, r3
   17f00:	ldr	r0, [fp, #-272]	; 0xfffffef0
   17f04:	bl	180a4 <_obstack_memory_used@@Base+0x4890>
   17f08:	mov	r3, r0
   17f0c:	cmp	r3, #0
   17f10:	beq	17f1c <_obstack_memory_used@@Base+0x4708>
   17f14:	mov	r3, #0
   17f18:	b	17f70 <_obstack_memory_used@@Base+0x475c>
   17f1c:	sub	r3, fp, #264	; 0x108
   17f20:	movw	r1, #41304	; 0xa158
   17f24:	movt	r1, #1
   17f28:	mov	r0, r3
   17f2c:	bl	10d68 <strcmp@plt>
   17f30:	mov	r3, r0
   17f34:	cmp	r3, #0
   17f38:	beq	17f64 <_obstack_memory_used@@Base+0x4750>
   17f3c:	sub	r3, fp, #264	; 0x108
   17f40:	movw	r1, #41308	; 0xa15c
   17f44:	movt	r1, #1
   17f48:	mov	r0, r3
   17f4c:	bl	10d68 <strcmp@plt>
   17f50:	mov	r3, r0
   17f54:	cmp	r3, #0
   17f58:	beq	17f64 <_obstack_memory_used@@Base+0x4750>
   17f5c:	mov	r3, #1
   17f60:	b	17f68 <_obstack_memory_used@@Base+0x4754>
   17f64:	mov	r3, #0
   17f68:	and	r3, r3, #1
   17f6c:	uxtb	r3, r3
   17f70:	mov	r0, r3
   17f74:	sub	sp, fp, #4
   17f78:	ldr	fp, [sp]
   17f7c:	add	sp, sp, #4
   17f80:	pop	{pc}		; (ldr pc, [sp], #4)
   17f84:	str	fp, [sp, #-8]!
   17f88:	str	lr, [sp, #4]
   17f8c:	add	fp, sp, #4
   17f90:	sub	sp, sp, #16
   17f94:	str	r0, [fp, #-16]
   17f98:	mov	r1, #0
   17f9c:	ldr	r0, [fp, #-16]
   17fa0:	bl	10f60 <setlocale@plt>
   17fa4:	str	r0, [fp, #-8]
   17fa8:	ldr	r3, [fp, #-8]
   17fac:	mov	r0, r3
   17fb0:	sub	sp, fp, #4
   17fb4:	ldr	fp, [sp]
   17fb8:	add	sp, sp, #4
   17fbc:	pop	{pc}		; (ldr pc, [sp], #4)
   17fc0:	str	fp, [sp, #-8]!
   17fc4:	str	lr, [sp, #4]
   17fc8:	add	fp, sp, #4
   17fcc:	sub	sp, sp, #24
   17fd0:	str	r0, [fp, #-16]
   17fd4:	str	r1, [fp, #-20]	; 0xffffffec
   17fd8:	str	r2, [fp, #-24]	; 0xffffffe8
   17fdc:	ldr	r0, [fp, #-16]
   17fe0:	bl	17f84 <_obstack_memory_used@@Base+0x4770>
   17fe4:	str	r0, [fp, #-8]
   17fe8:	ldr	r3, [fp, #-8]
   17fec:	cmp	r3, #0
   17ff0:	bne	18014 <_obstack_memory_used@@Base+0x4800>
   17ff4:	ldr	r3, [fp, #-24]	; 0xffffffe8
   17ff8:	cmp	r3, #0
   17ffc:	beq	1800c <_obstack_memory_used@@Base+0x47f8>
   18000:	ldr	r3, [fp, #-20]	; 0xffffffec
   18004:	mov	r2, #0
   18008:	strb	r2, [r3]
   1800c:	mov	r3, #22
   18010:	b	18090 <_obstack_memory_used@@Base+0x487c>
   18014:	ldr	r0, [fp, #-8]
   18018:	bl	10f00 <strlen@plt>
   1801c:	str	r0, [fp, #-12]
   18020:	ldr	r2, [fp, #-12]
   18024:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18028:	cmp	r2, r3
   1802c:	bcs	18050 <_obstack_memory_used@@Base+0x483c>
   18030:	ldr	r3, [fp, #-12]
   18034:	add	r3, r3, #1
   18038:	mov	r2, r3
   1803c:	ldr	r1, [fp, #-8]
   18040:	ldr	r0, [fp, #-20]	; 0xffffffec
   18044:	bl	10da4 <memcpy@plt>
   18048:	mov	r3, #0
   1804c:	b	18090 <_obstack_memory_used@@Base+0x487c>
   18050:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18054:	cmp	r3, #0
   18058:	beq	1808c <_obstack_memory_used@@Base+0x4878>
   1805c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18060:	sub	r3, r3, #1
   18064:	mov	r2, r3
   18068:	ldr	r1, [fp, #-8]
   1806c:	ldr	r0, [fp, #-20]	; 0xffffffec
   18070:	bl	10da4 <memcpy@plt>
   18074:	ldr	r3, [fp, #-24]	; 0xffffffe8
   18078:	sub	r3, r3, #1
   1807c:	ldr	r2, [fp, #-20]	; 0xffffffec
   18080:	add	r3, r2, r3
   18084:	mov	r2, #0
   18088:	strb	r2, [r3]
   1808c:	mov	r3, #34	; 0x22
   18090:	mov	r0, r3
   18094:	sub	sp, fp, #4
   18098:	ldr	fp, [sp]
   1809c:	add	sp, sp, #4
   180a0:	pop	{pc}		; (ldr pc, [sp], #4)
   180a4:	str	fp, [sp, #-8]!
   180a8:	str	lr, [sp, #4]
   180ac:	add	fp, sp, #4
   180b0:	sub	sp, sp, #16
   180b4:	str	r0, [fp, #-8]
   180b8:	str	r1, [fp, #-12]
   180bc:	str	r2, [fp, #-16]
   180c0:	ldr	r2, [fp, #-16]
   180c4:	ldr	r1, [fp, #-12]
   180c8:	ldr	r0, [fp, #-8]
   180cc:	bl	17fc0 <_obstack_memory_used@@Base+0x47ac>
   180d0:	mov	r3, r0
   180d4:	mov	r0, r3
   180d8:	sub	sp, fp, #4
   180dc:	ldr	fp, [sp]
   180e0:	add	sp, sp, #4
   180e4:	pop	{pc}		; (ldr pc, [sp], #4)
   180e8:	str	fp, [sp, #-8]!
   180ec:	str	lr, [sp, #4]
   180f0:	add	fp, sp, #4
   180f4:	sub	sp, sp, #8
   180f8:	str	r0, [fp, #-8]
   180fc:	ldr	r0, [fp, #-8]
   18100:	bl	17f84 <_obstack_memory_used@@Base+0x4770>
   18104:	mov	r3, r0
   18108:	mov	r0, r3
   1810c:	sub	sp, fp, #4
   18110:	ldr	fp, [sp]
   18114:	add	sp, sp, #4
   18118:	pop	{pc}		; (ldr pc, [sp], #4)
   1811c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   18120:	mov	r7, r0
   18124:	ldr	r6, [pc, #72]	; 18174 <_obstack_memory_used@@Base+0x4960>
   18128:	ldr	r5, [pc, #72]	; 18178 <_obstack_memory_used@@Base+0x4964>
   1812c:	add	r6, pc, r6
   18130:	add	r5, pc, r5
   18134:	sub	r6, r6, r5
   18138:	mov	r8, r1
   1813c:	mov	r9, r2
   18140:	bl	10d30 <calloc@plt-0x20>
   18144:	asrs	r6, r6, #2
   18148:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1814c:	mov	r4, #0
   18150:	add	r4, r4, #1
   18154:	ldr	r3, [r5], #4
   18158:	mov	r2, r9
   1815c:	mov	r1, r8
   18160:	mov	r0, r7
   18164:	blx	r3
   18168:	cmp	r6, r4
   1816c:	bne	18150 <_obstack_memory_used@@Base+0x493c>
   18170:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   18174:	andeq	r2, r1, r0, ror #27
   18178:	ldrdeq	r2, [r1], -r8
   1817c:	bx	lr
   18180:	ldr	r3, [pc, #12]	; 18194 <_obstack_memory_used@@Base+0x4980>
   18184:	mov	r1, #0
   18188:	add	r3, pc, r3
   1818c:	ldr	r2, [r3]
   18190:	b	10f24 <__cxa_atexit@plt>
   18194:	andeq	r2, r1, r4, asr pc

Disassembly of section .fini:

00018198 <.fini>:
   18198:	push	{r3, lr}
   1819c:	pop	{r3, pc}
