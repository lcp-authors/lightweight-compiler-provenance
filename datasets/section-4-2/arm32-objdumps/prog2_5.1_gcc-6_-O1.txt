
../repos/prog2/5.1:     file format elf32-littlearm


Disassembly of section .init:

00010a08 <.init>:
   10a08:	push	{r3, lr}
   10a0c:	bl	10ae8 <_start@@Base+0x3c>
   10a10:	pop	{r3, pc}

Disassembly of section .plt:

00010a14 <calloc@plt-0x14>:
   10a14:	push	{lr}		; (str lr, [sp, #-4]!)
   10a18:	ldr	lr, [pc, #4]	; 10a24 <calloc@plt-0x4>
   10a1c:	add	lr, pc, lr
   10a20:	ldr	pc, [lr, #8]!
   10a24:	ldrdeq	r1, [r1], -ip

00010a28 <calloc@plt>:
   10a28:	add	ip, pc, #0, 12
   10a2c:	add	ip, ip, #69632	; 0x11000
   10a30:	ldr	pc, [ip, #1500]!	; 0x5dc

00010a34 <printf@plt>:
   10a34:	add	ip, pc, #0, 12
   10a38:	add	ip, ip, #69632	; 0x11000
   10a3c:	ldr	pc, [ip, #1492]!	; 0x5d4

00010a40 <free@plt>:
   10a40:	add	ip, pc, #0, 12
   10a44:	add	ip, ip, #69632	; 0x11000
   10a48:	ldr	pc, [ip, #1484]!	; 0x5cc

00010a4c <strcpy@plt>:
   10a4c:	add	ip, pc, #0, 12
   10a50:	add	ip, ip, #69632	; 0x11000
   10a54:	ldr	pc, [ip, #1476]!	; 0x5c4

00010a58 <puts@plt>:
   10a58:	add	ip, pc, #0, 12
   10a5c:	add	ip, ip, #69632	; 0x11000
   10a60:	ldr	pc, [ip, #1468]!	; 0x5bc

00010a64 <malloc@plt>:
   10a64:	add	ip, pc, #0, 12
   10a68:	add	ip, ip, #69632	; 0x11000
   10a6c:	ldr	pc, [ip, #1460]!	; 0x5b4

00010a70 <__libc_start_main@plt>:
   10a70:	add	ip, pc, #0, 12
   10a74:	add	ip, ip, #69632	; 0x11000
   10a78:	ldr	pc, [ip, #1452]!	; 0x5ac

00010a7c <__gmon_start__@plt>:
   10a7c:	add	ip, pc, #0, 12
   10a80:	add	ip, ip, #69632	; 0x11000
   10a84:	ldr	pc, [ip, #1444]!	; 0x5a4

00010a88 <strlen@plt>:
   10a88:	add	ip, pc, #0, 12
   10a8c:	add	ip, ip, #69632	; 0x11000
   10a90:	ldr	pc, [ip, #1436]!	; 0x59c

00010a94 <putchar@plt>:
   10a94:	add	ip, pc, #0, 12
   10a98:	add	ip, ip, #69632	; 0x11000
   10a9c:	ldr	pc, [ip, #1428]!	; 0x594

00010aa0 <abort@plt>:
   10aa0:	add	ip, pc, #0, 12
   10aa4:	add	ip, ip, #69632	; 0x11000
   10aa8:	ldr	pc, [ip, #1420]!	; 0x58c

Disassembly of section .text:

00010aac <_start@@Base>:
   10aac:	mov	fp, #0
   10ab0:	mov	lr, #0
   10ab4:	pop	{r1}		; (ldr r1, [sp], #4)
   10ab8:	mov	r2, sp
   10abc:	push	{r2}		; (str r2, [sp, #-4]!)
   10ac0:	push	{r0}		; (str r0, [sp, #-4]!)
   10ac4:	ldr	ip, [pc, #16]	; 10adc <_start@@Base+0x30>
   10ac8:	push	{ip}		; (str ip, [sp, #-4]!)
   10acc:	ldr	r0, [pc, #12]	; 10ae0 <_start@@Base+0x34>
   10ad0:	ldr	r3, [pc, #12]	; 10ae4 <_start@@Base+0x38>
   10ad4:	bl	10a70 <__libc_start_main@plt>
   10ad8:	bl	10aa0 <abort@plt>
   10adc:	andeq	r1, r1, ip, lsl #15
   10ae0:	andeq	r0, r1, ip, ror #25
   10ae4:	andeq	r1, r1, ip, lsr #14
   10ae8:	ldr	r3, [pc, #20]	; 10b04 <_start@@Base+0x58>
   10aec:	ldr	r2, [pc, #20]	; 10b08 <_start@@Base+0x5c>
   10af0:	add	r3, pc, r3
   10af4:	ldr	r2, [r3, r2]
   10af8:	cmp	r2, #0
   10afc:	bxeq	lr
   10b00:	b	10a7c <__gmon_start__@plt>
   10b04:	andeq	r1, r1, r8, lsl #10
   10b08:	andeq	r0, r0, r8, lsr r0
   10b0c:	ldr	r3, [pc, #28]	; 10b30 <_start@@Base+0x84>
   10b10:	ldr	r0, [pc, #28]	; 10b34 <_start@@Base+0x88>
   10b14:	sub	r3, r3, r0
   10b18:	cmp	r3, #6
   10b1c:	bxls	lr
   10b20:	ldr	r3, [pc, #16]	; 10b38 <_start@@Base+0x8c>
   10b24:	cmp	r3, #0
   10b28:	bxeq	lr
   10b2c:	bx	r3
   10b30:	andeq	r2, r2, r7, asr #32
   10b34:	andeq	r2, r2, r4, asr #32
   10b38:	andeq	r0, r0, r0
   10b3c:	ldr	r1, [pc, #36]	; 10b68 <_start@@Base+0xbc>
   10b40:	ldr	r0, [pc, #36]	; 10b6c <_start@@Base+0xc0>
   10b44:	sub	r1, r1, r0
   10b48:	asr	r1, r1, #2
   10b4c:	add	r1, r1, r1, lsr #31
   10b50:	asrs	r1, r1, #1
   10b54:	bxeq	lr
   10b58:	ldr	r3, [pc, #16]	; 10b70 <_start@@Base+0xc4>
   10b5c:	cmp	r3, #0
   10b60:	bxeq	lr
   10b64:	bx	r3
   10b68:	andeq	r2, r2, r4, asr #32
   10b6c:	andeq	r2, r2, r4, asr #32
   10b70:	andeq	r0, r0, r0
   10b74:	push	{r4, lr}
   10b78:	ldr	r4, [pc, #24]	; 10b98 <_start@@Base+0xec>
   10b7c:	ldrb	r3, [r4]
   10b80:	cmp	r3, #0
   10b84:	popne	{r4, pc}
   10b88:	bl	10b0c <_start@@Base+0x60>
   10b8c:	mov	r3, #1
   10b90:	strb	r3, [r4]
   10b94:	pop	{r4, pc}
   10b98:	andeq	r2, r2, r4, asr #32
   10b9c:	ldr	r0, [pc, #40]	; 10bcc <_start@@Base+0x120>
   10ba0:	ldr	r3, [r0]
   10ba4:	cmp	r3, #0
   10ba8:	bne	10bb0 <_start@@Base+0x104>
   10bac:	b	10b3c <_start@@Base+0x90>
   10bb0:	ldr	r3, [pc, #24]	; 10bd0 <_start@@Base+0x124>
   10bb4:	cmp	r3, #0
   10bb8:	beq	10bac <_start@@Base+0x100>
   10bbc:	push	{r4, lr}
   10bc0:	blx	r3
   10bc4:	pop	{r4, lr}
   10bc8:	b	10b3c <_start@@Base+0x90>
   10bcc:	andeq	r1, r2, r4, lsl pc
   10bd0:	andeq	r0, r0, r0

00010bd4 <imprimeArmazem@@Base>:
   10bd4:	push	{r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10bd8:	subs	sl, r0, #0
   10bdc:	popeq	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10be0:	ldr	r4, [sl, #8]
   10be4:	cmp	r4, #0
   10be8:	popeq	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10bec:	ldr	r7, [r4, #4]
   10bf0:	mov	r1, #4
   10bf4:	mov	r0, r7
   10bf8:	bl	10a28 <calloc@plt>
   10bfc:	mov	fp, r0
   10c00:	ldr	r3, [r4]
   10c04:	cmp	r3, #0
   10c08:	beq	10c28 <imprimeArmazem@@Base+0x54>
   10c0c:	sub	r2, r0, #4
   10c10:	ldr	r1, [r3]
   10c14:	ldr	r1, [r1, #4]
   10c18:	str	r1, [r2, #4]!
   10c1c:	ldr	r3, [r3, #4]
   10c20:	cmp	r3, #0
   10c24:	bne	10c10 <imprimeArmazem@@Base+0x3c>
   10c28:	mov	r0, #10
   10c2c:	bl	10a94 <putchar@plt>
   10c30:	ldr	r6, [sl, #4]
   10c34:	cmp	r6, #0
   10c38:	ble	10c8c <imprimeArmazem@@Base+0xb8>
   10c3c:	ldr	r9, [pc, #144]	; 10cd4 <imprimeArmazem@@Base+0x100>
   10c40:	ldr	r8, [pc, #144]	; 10cd8 <imprimeArmazem@@Base+0x104>
   10c44:	ldr	r0, [pc, #144]	; 10cdc <imprimeArmazem@@Base+0x108>
   10c48:	bl	10a34 <printf@plt>
   10c4c:	cmp	r7, #0
   10c50:	ble	10c7c <imprimeArmazem@@Base+0xa8>
   10c54:	sub	r5, fp, #4
   10c58:	mov	r4, #0
   10c5c:	ldr	r3, [r5, #4]!
   10c60:	cmp	r3, r6
   10c64:	movge	r0, r8
   10c68:	movlt	r0, r9
   10c6c:	bl	10a34 <printf@plt>
   10c70:	add	r4, r4, #1
   10c74:	cmp	r7, r4
   10c78:	bne	10c5c <imprimeArmazem@@Base+0x88>
   10c7c:	mov	r0, #10
   10c80:	bl	10a94 <putchar@plt>
   10c84:	subs	r6, r6, #1
   10c88:	bne	10c44 <imprimeArmazem@@Base+0x70>
   10c8c:	ldr	r0, [pc, #76]	; 10ce0 <imprimeArmazem@@Base+0x10c>
   10c90:	bl	10a34 <printf@plt>
   10c94:	ldr	r3, [sl]
   10c98:	cmp	r3, #0
   10c9c:	ble	10cc0 <imprimeArmazem@@Base+0xec>
   10ca0:	mov	r4, #0
   10ca4:	ldr	r5, [pc, #56]	; 10ce4 <imprimeArmazem@@Base+0x110>
   10ca8:	mov	r0, r5
   10cac:	bl	10a34 <printf@plt>
   10cb0:	add	r4, r4, #1
   10cb4:	ldr	r3, [sl]
   10cb8:	cmp	r3, r4
   10cbc:	bgt	10ca8 <imprimeArmazem@@Base+0xd4>
   10cc0:	ldr	r0, [pc, #32]	; 10ce8 <imprimeArmazem@@Base+0x114>
   10cc4:	bl	10a58 <puts@plt>
   10cc8:	mov	r0, fp
   10ccc:	bl	10a40 <free@plt>
   10cd0:	pop	{r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10cd4:	andeq	r1, r1, r8, lsr #15
   10cd8:	andeq	r1, r1, r0, lsr #15
   10cdc:	muleq	r1, ip, r7
   10ce0:			; <UNDEFINED> instruction: 0x000117b0
   10ce4:			; <UNDEFINED> instruction: 0x000117b4
   10ce8:	andeq	r1, r1, r4, lsr #17

00010cec <main@@Base>:
   10cec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   10cf0:	vpush	{d8}
   10cf4:	sub	sp, sp, #28
   10cf8:	mov	r1, #3
   10cfc:	mov	r0, #4
   10d00:	bl	1117c <armazem_novo@@Base>
   10d04:	mov	r4, r0
   10d08:	ldr	r0, [pc, #1012]	; 11104 <main@@Base+0x418>
   10d0c:	bl	10a58 <puts@plt>
   10d10:	vldr	s0, [pc, #956]	; 110d4 <main@@Base+0x3e8>
   10d14:	ldr	r0, [pc, #1004]	; 11108 <main@@Base+0x41c>
   10d18:	bl	1135c <contentor_novo@@Base>
   10d1c:	mov	fp, r0
   10d20:	vldr	s0, [pc, #944]	; 110d8 <main@@Base+0x3ec>
   10d24:	ldr	r0, [pc, #992]	; 1110c <main@@Base+0x420>
   10d28:	bl	1135c <contentor_novo@@Base>
   10d2c:	mov	sl, r0
   10d30:	vldr	s0, [pc, #932]	; 110dc <main@@Base+0x3f0>
   10d34:	ldr	r0, [pc, #980]	; 11110 <main@@Base+0x424>
   10d38:	bl	1135c <contentor_novo@@Base>
   10d3c:	mov	r5, r0
   10d40:	vldr	s0, [pc, #920]	; 110e0 <main@@Base+0x3f4>
   10d44:	ldr	r0, [pc, #968]	; 11114 <main@@Base+0x428>
   10d48:	bl	1135c <contentor_novo@@Base>
   10d4c:	str	r0, [sp]
   10d50:	vldr	s16, [pc, #908]	; 110e4 <main@@Base+0x3f8>
   10d54:	vmov.f32	s0, s16
   10d58:	ldr	r0, [pc, #952]	; 11118 <main@@Base+0x42c>
   10d5c:	bl	1135c <contentor_novo@@Base>
   10d60:	str	r0, [sp, #4]
   10d64:	vldr	s0, [pc, #892]	; 110e8 <main@@Base+0x3fc>
   10d68:	ldr	r0, [pc, #940]	; 1111c <main@@Base+0x430>
   10d6c:	bl	1135c <contentor_novo@@Base>
   10d70:	str	r0, [sp, #8]
   10d74:	vldr	s0, [pc, #880]	; 110ec <main@@Base+0x400>
   10d78:	ldr	r0, [pc, #928]	; 11120 <main@@Base+0x434>
   10d7c:	bl	1135c <contentor_novo@@Base>
   10d80:	str	r0, [sp, #12]
   10d84:	vldr	s0, [pc, #868]	; 110f0 <main@@Base+0x404>
   10d88:	ldr	r0, [pc, #916]	; 11124 <main@@Base+0x438>
   10d8c:	bl	1135c <contentor_novo@@Base>
   10d90:	str	r0, [sp, #16]
   10d94:	vmov.f32	s0, s16
   10d98:	ldr	r0, [pc, #904]	; 11128 <main@@Base+0x43c>
   10d9c:	bl	1135c <contentor_novo@@Base>
   10da0:	mov	r9, r0
   10da4:	vldr	s0, [pc, #840]	; 110f4 <main@@Base+0x408>
   10da8:	ldr	r0, [pc, #892]	; 1112c <main@@Base+0x440>
   10dac:	bl	1135c <contentor_novo@@Base>
   10db0:	mov	r8, r0
   10db4:	vldr	s0, [pc, #828]	; 110f8 <main@@Base+0x40c>
   10db8:	ldr	r0, [pc, #880]	; 11130 <main@@Base+0x444>
   10dbc:	bl	1135c <contentor_novo@@Base>
   10dc0:	mov	r7, r0
   10dc4:	vldr	s0, [pc, #816]	; 110fc <main@@Base+0x410>
   10dc8:	ldr	r0, [pc, #868]	; 11134 <main@@Base+0x448>
   10dcc:	bl	1135c <contentor_novo@@Base>
   10dd0:	mov	r6, r0
   10dd4:	vldr	s0, [pc, #804]	; 11100 <main@@Base+0x414>
   10dd8:	ldr	r0, [pc, #856]	; 11138 <main@@Base+0x44c>
   10ddc:	bl	1135c <contentor_novo@@Base>
   10de0:	str	r0, [sp, #20]
   10de4:	ldr	r0, [pc, #848]	; 1113c <main@@Base+0x450>
   10de8:	bl	10a58 <puts@plt>
   10dec:	mov	r0, r4
   10df0:	bl	10bd4 <imprimeArmazem@@Base>
   10df4:	ldr	r0, [pc, #836]	; 11140 <main@@Base+0x454>
   10df8:	bl	10a58 <puts@plt>
   10dfc:	mov	r1, fp
   10e00:	mov	r0, r4
   10e04:	bl	11228 <armazenar_contentor@@Base>
   10e08:	cmp	r0, #0
   10e0c:	bne	10ff0 <main@@Base+0x304>
   10e10:	mov	r1, sl
   10e14:	mov	r0, r4
   10e18:	bl	11228 <armazenar_contentor@@Base>
   10e1c:	cmp	r0, #0
   10e20:	bne	11000 <main@@Base+0x314>
   10e24:	mov	r1, r5
   10e28:	mov	r0, r4
   10e2c:	bl	11228 <armazenar_contentor@@Base>
   10e30:	cmp	r0, #0
   10e34:	bne	11010 <main@@Base+0x324>
   10e38:	ldr	r1, [sp]
   10e3c:	mov	r0, r4
   10e40:	bl	11228 <armazenar_contentor@@Base>
   10e44:	cmp	r0, #0
   10e48:	bne	11020 <main@@Base+0x334>
   10e4c:	ldr	r0, [pc, #752]	; 11144 <main@@Base+0x458>
   10e50:	bl	10a58 <puts@plt>
   10e54:	mov	r0, r4
   10e58:	bl	10bd4 <imprimeArmazem@@Base>
   10e5c:	ldr	r0, [pc, #740]	; 11148 <main@@Base+0x45c>
   10e60:	bl	10a58 <puts@plt>
   10e64:	ldr	r1, [sp, #4]
   10e68:	mov	r0, r4
   10e6c:	bl	11228 <armazenar_contentor@@Base>
   10e70:	cmp	r0, #0
   10e74:	bne	11034 <main@@Base+0x348>
   10e78:	ldr	r1, [sp, #8]
   10e7c:	mov	r0, r4
   10e80:	bl	11228 <armazenar_contentor@@Base>
   10e84:	cmp	r0, #0
   10e88:	bne	11048 <main@@Base+0x35c>
   10e8c:	ldr	r1, [sp, #12]
   10e90:	mov	r0, r4
   10e94:	bl	11228 <armazenar_contentor@@Base>
   10e98:	cmp	r0, #0
   10e9c:	bne	1105c <main@@Base+0x370>
   10ea0:	ldr	r1, [sp, #16]
   10ea4:	mov	r0, r4
   10ea8:	bl	11228 <armazenar_contentor@@Base>
   10eac:	cmp	r0, #0
   10eb0:	bne	11070 <main@@Base+0x384>
   10eb4:	mov	r1, r9
   10eb8:	mov	r0, r4
   10ebc:	bl	11228 <armazenar_contentor@@Base>
   10ec0:	cmp	r0, #0
   10ec4:	bne	11084 <main@@Base+0x398>
   10ec8:	mov	r1, r8
   10ecc:	mov	r0, r4
   10ed0:	bl	11228 <armazenar_contentor@@Base>
   10ed4:	cmp	r0, #0
   10ed8:	bne	11094 <main@@Base+0x3a8>
   10edc:	mov	r1, r7
   10ee0:	mov	r0, r4
   10ee4:	bl	11228 <armazenar_contentor@@Base>
   10ee8:	cmp	r0, #0
   10eec:	bne	110a4 <main@@Base+0x3b8>
   10ef0:	mov	r1, r6
   10ef4:	mov	r0, r4
   10ef8:	bl	11228 <armazenar_contentor@@Base>
   10efc:	cmp	r0, #0
   10f00:	bne	110b4 <main@@Base+0x3c8>
   10f04:	ldr	r0, [pc, #576]	; 1114c <main@@Base+0x460>
   10f08:	bl	10a58 <puts@plt>
   10f0c:	mov	r0, r4
   10f10:	bl	10bd4 <imprimeArmazem@@Base>
   10f14:	mov	r0, r4
   10f18:	bl	111d4 <armazem_cheio@@Base>
   10f1c:	cmp	r0, #0
   10f20:	ldrne	r0, [pc, #552]	; 11150 <main@@Base+0x464>
   10f24:	ldreq	r0, [pc, #552]	; 11154 <main@@Base+0x468>
   10f28:	bl	10a58 <puts@plt>
   10f2c:	ldr	r1, [sp, #20]
   10f30:	mov	r0, r4
   10f34:	bl	11228 <armazenar_contentor@@Base>
   10f38:	cmp	r0, #0
   10f3c:	bne	110c4 <main@@Base+0x3d8>
   10f40:	ldr	r0, [pc, #528]	; 11158 <main@@Base+0x46c>
   10f44:	bl	10a58 <puts@plt>
   10f48:	mov	r5, #8
   10f4c:	ldr	r7, [pc, #520]	; 1115c <main@@Base+0x470>
   10f50:	mov	r0, r4
   10f54:	bl	112d0 <expedir_contentor@@Base>
   10f58:	mov	r6, r0
   10f5c:	mov	r0, r7
   10f60:	bl	10a58 <puts@plt>
   10f64:	mov	r0, r6
   10f68:	bl	113c0 <contentor_imprime@@Base>
   10f6c:	subs	r5, r5, #1
   10f70:	bne	10f50 <main@@Base+0x264>
   10f74:	ldr	r0, [pc, #484]	; 11160 <main@@Base+0x474>
   10f78:	bl	10a58 <puts@plt>
   10f7c:	mov	r0, r4
   10f80:	bl	10bd4 <imprimeArmazem@@Base>
   10f84:	ldr	r0, [pc, #472]	; 11164 <main@@Base+0x478>
   10f88:	bl	10a58 <puts@plt>
   10f8c:	mov	r5, #4
   10f90:	ldr	r7, [pc, #452]	; 1115c <main@@Base+0x470>
   10f94:	mov	r0, r4
   10f98:	bl	112d0 <expedir_contentor@@Base>
   10f9c:	mov	r6, r0
   10fa0:	mov	r0, r7
   10fa4:	bl	10a58 <puts@plt>
   10fa8:	mov	r0, r6
   10fac:	bl	113c0 <contentor_imprime@@Base>
   10fb0:	subs	r5, r5, #1
   10fb4:	bne	10f94 <main@@Base+0x2a8>
   10fb8:	ldr	r0, [pc, #424]	; 11168 <main@@Base+0x47c>
   10fbc:	bl	10a58 <puts@plt>
   10fc0:	mov	r0, r4
   10fc4:	bl	10bd4 <imprimeArmazem@@Base>
   10fc8:	mov	r0, r4
   10fcc:	bl	111ac <armazem_vazio@@Base>
   10fd0:	cmp	r0, #0
   10fd4:	ldrne	r0, [pc, #400]	; 1116c <main@@Base+0x480>
   10fd8:	ldreq	r0, [pc, #400]	; 11170 <main@@Base+0x484>
   10fdc:	bl	10a58 <puts@plt>
   10fe0:	mov	r0, #0
   10fe4:	add	sp, sp, #28
   10fe8:	vpop	{d8}
   10fec:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   10ff0:	ldr	r1, [fp]
   10ff4:	ldr	r0, [pc, #376]	; 11174 <main@@Base+0x488>
   10ff8:	bl	10a34 <printf@plt>
   10ffc:	b	10e10 <main@@Base+0x124>
   11000:	ldr	r1, [sl]
   11004:	ldr	r0, [pc, #360]	; 11174 <main@@Base+0x488>
   11008:	bl	10a34 <printf@plt>
   1100c:	b	10e24 <main@@Base+0x138>
   11010:	ldr	r1, [r5]
   11014:	ldr	r0, [pc, #344]	; 11174 <main@@Base+0x488>
   11018:	bl	10a34 <printf@plt>
   1101c:	b	10e38 <main@@Base+0x14c>
   11020:	ldr	r3, [sp]
   11024:	ldr	r1, [r3]
   11028:	ldr	r0, [pc, #324]	; 11174 <main@@Base+0x488>
   1102c:	bl	10a34 <printf@plt>
   11030:	b	10e4c <main@@Base+0x160>
   11034:	ldr	r3, [sp, #4]
   11038:	ldr	r1, [r3]
   1103c:	ldr	r0, [pc, #304]	; 11174 <main@@Base+0x488>
   11040:	bl	10a34 <printf@plt>
   11044:	b	10e78 <main@@Base+0x18c>
   11048:	ldr	r3, [sp, #8]
   1104c:	ldr	r1, [r3]
   11050:	ldr	r0, [pc, #284]	; 11174 <main@@Base+0x488>
   11054:	bl	10a34 <printf@plt>
   11058:	b	10e8c <main@@Base+0x1a0>
   1105c:	ldr	r3, [sp, #12]
   11060:	ldr	r1, [r3]
   11064:	ldr	r0, [pc, #264]	; 11174 <main@@Base+0x488>
   11068:	bl	10a34 <printf@plt>
   1106c:	b	10ea0 <main@@Base+0x1b4>
   11070:	ldr	r3, [sp, #16]
   11074:	ldr	r1, [r3]
   11078:	ldr	r0, [pc, #244]	; 11174 <main@@Base+0x488>
   1107c:	bl	10a34 <printf@plt>
   11080:	b	10eb4 <main@@Base+0x1c8>
   11084:	ldr	r1, [r9]
   11088:	ldr	r0, [pc, #228]	; 11174 <main@@Base+0x488>
   1108c:	bl	10a34 <printf@plt>
   11090:	b	10ec8 <main@@Base+0x1dc>
   11094:	ldr	r1, [r8]
   11098:	ldr	r0, [pc, #212]	; 11174 <main@@Base+0x488>
   1109c:	bl	10a34 <printf@plt>
   110a0:	b	10edc <main@@Base+0x1f0>
   110a4:	ldr	r1, [r7]
   110a8:	ldr	r0, [pc, #196]	; 11174 <main@@Base+0x488>
   110ac:	bl	10a34 <printf@plt>
   110b0:	b	10ef0 <main@@Base+0x204>
   110b4:	ldr	r1, [r6]
   110b8:	ldr	r0, [pc, #180]	; 11174 <main@@Base+0x488>
   110bc:	bl	10a34 <printf@plt>
   110c0:	b	10f04 <main@@Base+0x218>
   110c4:	ldr	r1, [r5]
   110c8:	ldr	r0, [pc, #168]	; 11178 <main@@Base+0x48c>
   110cc:	bl	10a34 <printf@plt>
   110d0:	b	10f40 <main@@Base+0x254>
   110d4:	cmnmi	r6, #0
   110d8:	cmnmi	sl, #0
   110dc:	strmi	r8, [r4], #-0
   110e0:	ldrtmi	r8, [r1], #-0
   110e4:			; <UNDEFINED> instruction: 0x43be0000
   110e8:	bicmi	r0, r3, #0
   110ec:	sbcmi	r0, r8, #0
   110f0:	adcmi	r0, r0, #0
   110f4:	tstmi	r6, #0
   110f8:	orrmi	r0, r7, #0
   110fc:	bicsmi	r0, r7, #0
   11100:	movtmi	r0, #32768	; 0x8000
   11104:			; <UNDEFINED> instruction: 0x000117bc
   11108:	ldrdeq	r1, [r1], -r0
   1110c:	ldrdeq	r1, [r1], -r8
   11110:	ldrdeq	r1, [r1], -ip
   11114:	andeq	r1, r1, r4, ror #15
   11118:	andeq	r1, r1, ip, ror #15
   1111c:	strdeq	r1, [r1], -r4
   11120:	strdeq	r1, [r1], -ip
   11124:	andeq	r1, r1, r8, lsl #16
   11128:	andeq	r1, r1, r0, lsl r8
   1112c:	andeq	r1, r1, ip, lsl r8
   11130:	andeq	r1, r1, r4, lsr #16
   11134:	andeq	r1, r1, r0, lsr r8
   11138:	andeq	r1, r1, r8, lsr r8
   1113c:	andeq	r1, r1, r0, asr #16
   11140:	andeq	r1, r1, ip, asr r8
   11144:	andeq	r1, r1, r8, lsr #17
   11148:	andeq	r1, r1, r4, asr #17
   1114c:	andeq	r1, r1, r8, ror #17
   11150:	andeq	r1, r1, r4, lsl #18
   11154:	andeq	r1, r1, r4, lsl r9
   11158:	andeq	r1, r1, r8, lsl #19
   1115c:	andeq	r1, r1, ip, lsr #19
   11160:	andeq	r1, r1, ip, asr #19
   11164:	andeq	r1, r1, r8, ror #19
   11168:	andeq	r1, r1, ip, lsl #20
   1116c:	andeq	r1, r1, r8, lsr #20
   11170:	andeq	r1, r1, r8, lsr sl
   11174:	andeq	r1, r1, r0, lsl #17
   11178:	andeq	r1, r1, ip, lsr r9

0001117c <armazem_novo@@Base>:
   1117c:	push	{r4, r5, r6, lr}
   11180:	mov	r6, r0
   11184:	mov	r5, r1
   11188:	mov	r0, #12
   1118c:	bl	10a64 <malloc@plt>
   11190:	mov	r4, r0
   11194:	str	r6, [r0]
   11198:	str	r5, [r0, #4]
   1119c:	bl	11438 <fila_nova@@Base>
   111a0:	str	r0, [r4, #8]
   111a4:	mov	r0, r4
   111a8:	pop	{r4, r5, r6, pc}

000111ac <armazem_vazio@@Base>:
   111ac:	cmp	r0, #0
   111b0:	beq	111cc <armazem_vazio@@Base+0x20>
   111b4:	push	{r4, lr}
   111b8:	ldr	r0, [r0, #8]
   111bc:	bl	114a0 <fila_tamanho@@Base>
   111c0:	clz	r0, r0
   111c4:	lsr	r0, r0, #5
   111c8:	pop	{r4, pc}
   111cc:	mov	r0, #1
   111d0:	bx	lr

000111d4 <armazem_cheio@@Base>:
   111d4:	push	{r4, r5, r6, lr}
   111d8:	mov	r5, r0
   111dc:	bl	111ac <armazem_vazio@@Base>
   111e0:	subs	r4, r0, #0
   111e4:	movne	r4, #0
   111e8:	beq	111f4 <armazem_cheio@@Base+0x20>
   111ec:	mov	r0, r4
   111f0:	pop	{r4, r5, r6, pc}
   111f4:	ldr	r0, [r5, #8]
   111f8:	bl	114a0 <fila_tamanho@@Base>
   111fc:	ldr	r3, [r5]
   11200:	cmp	r0, r3
   11204:	bne	111ec <armazem_cheio@@Base+0x18>
   11208:	ldr	r0, [r5, #8]
   1120c:	bl	114e0 <fila_back@@Base>
   11210:	ldr	r4, [r0, #4]
   11214:	ldr	r3, [r5, #4]
   11218:	cmp	r4, r3
   1121c:	movne	r4, #0
   11220:	moveq	r4, #1
   11224:	b	111ec <armazem_cheio@@Base+0x18>

00011228 <armazenar_contentor@@Base>:
   11228:	push	{r4, r5, r6, r7, r8, lr}
   1122c:	mov	r4, r0
   11230:	mov	r5, r1
   11234:	bl	11608 <pilha_nova@@Base>
   11238:	cmp	r5, #0
   1123c:	cmpne	r4, #0
   11240:	bne	1124c <armazenar_contentor@@Base+0x24>
   11244:	mov	r0, #0
   11248:	pop	{r4, r5, r6, r7, r8, pc}
   1124c:	mov	r6, r0
   11250:	mov	r0, r4
   11254:	bl	111d4 <armazem_cheio@@Base>
   11258:	cmp	r0, #0
   1125c:	beq	11268 <armazenar_contentor@@Base+0x40>
   11260:	mov	r0, #0
   11264:	pop	{r4, r5, r6, r7, r8, pc}
   11268:	mov	r0, r4
   1126c:	bl	111ac <armazem_vazio@@Base>
   11270:	cmp	r0, #0
   11274:	bne	112a8 <armazenar_contentor@@Base+0x80>
   11278:	ldr	r0, [r4, #8]
   1127c:	bl	114e0 <fila_back@@Base>
   11280:	ldr	r2, [r0, #4]
   11284:	ldr	r3, [r4, #4]
   11288:	cmp	r2, r3
   1128c:	beq	112c0 <armazenar_contentor@@Base+0x98>
   11290:	ldr	r0, [r4, #8]
   11294:	bl	114e0 <fila_back@@Base>
   11298:	mov	r1, r5
   1129c:	bl	116b0 <pilha_push@@Base>
   112a0:	mov	r0, #1
   112a4:	pop	{r4, r5, r6, r7, r8, pc}
   112a8:	ldr	r7, [r4, #8]
   112ac:	bl	11608 <pilha_nova@@Base>
   112b0:	mov	r1, r0
   112b4:	mov	r0, r7
   112b8:	bl	11524 <fila_push@@Base>
   112bc:	b	11278 <armazenar_contentor@@Base+0x50>
   112c0:	mov	r1, r6
   112c4:	ldr	r0, [r4, #8]
   112c8:	bl	11524 <fila_push@@Base>
   112cc:	b	11290 <armazenar_contentor@@Base+0x68>

000112d0 <expedir_contentor@@Base>:
   112d0:	push	{r4, r5, r6, lr}
   112d4:	mov	r4, r0
   112d8:	bl	111ac <armazem_vazio@@Base>
   112dc:	cmp	r0, #0
   112e0:	movne	r5, #0
   112e4:	bne	11348 <expedir_contentor@@Base+0x78>
   112e8:	ldr	r0, [r4, #8]
   112ec:	bl	114b0 <fila_front@@Base>
   112f0:	bl	11680 <pilha_top@@Base>
   112f4:	subs	r5, r0, #0
   112f8:	beq	11348 <expedir_contentor@@Base+0x78>
   112fc:	ldr	r0, [r4, #8]
   11300:	bl	114b0 <fila_front@@Base>
   11304:	bl	11680 <pilha_top@@Base>
   11308:	ldr	r5, [r0]
   1130c:	ldr	r0, [r4, #8]
   11310:	bl	114b0 <fila_front@@Base>
   11314:	bl	11680 <pilha_top@@Base>
   11318:	vldr	s0, [r0, #4]
   1131c:	mov	r0, r5
   11320:	bl	1135c <contentor_novo@@Base>
   11324:	mov	r5, r0
   11328:	ldr	r0, [r4, #8]
   1132c:	bl	114b0 <fila_front@@Base>
   11330:	ldr	r3, [r0, #4]
   11334:	cmp	r3, #1
   11338:	ble	11350 <expedir_contentor@@Base+0x80>
   1133c:	ldr	r0, [r4, #8]
   11340:	bl	114b0 <fila_front@@Base>
   11344:	bl	116ec <pilha_pop@@Base>
   11348:	mov	r0, r5
   1134c:	pop	{r4, r5, r6, pc}
   11350:	ldr	r0, [r4, #8]
   11354:	bl	11578 <fila_pop@@Base>
   11358:	b	11348 <expedir_contentor@@Base+0x78>

0001135c <contentor_novo@@Base>:
   1135c:	push	{r4, r5, r6, lr}
   11360:	vpush	{d8}
   11364:	mov	r5, r0
   11368:	vmov.f32	s16, s0
   1136c:	mov	r0, #8
   11370:	bl	10a64 <malloc@plt>
   11374:	mov	r4, r0
   11378:	mov	r0, r5
   1137c:	bl	10a88 <strlen@plt>
   11380:	add	r0, r0, #1
   11384:	bl	10a64 <malloc@plt>
   11388:	str	r0, [r4]
   1138c:	mov	r1, r5
   11390:	bl	10a4c <strcpy@plt>
   11394:	vstr	s16, [r4, #4]
   11398:	mov	r0, r4
   1139c:	vpop	{d8}
   113a0:	pop	{r4, r5, r6, pc}

000113a4 <contentor_apaga@@Base>:
   113a4:	push	{r4, lr}
   113a8:	mov	r4, r0
   113ac:	ldr	r0, [r0]
   113b0:	bl	10a40 <free@plt>
   113b4:	mov	r0, r4
   113b8:	bl	10a40 <free@plt>
   113bc:	pop	{r4, pc}

000113c0 <contentor_imprime@@Base>:
   113c0:	push	{r4, lr}
   113c4:	cmp	r0, #0
   113c8:	beq	113e8 <contentor_imprime@@Base+0x28>
   113cc:	vldr	s15, [r0, #4]
   113d0:	vcvt.f64.f32	d7, s15
   113d4:	vmov	r2, r3, d7
   113d8:	ldr	r1, [r0]
   113dc:	ldr	r0, [pc, #16]	; 113f4 <contentor_imprime@@Base+0x34>
   113e0:	bl	10a34 <printf@plt>
   113e4:	pop	{r4, pc}
   113e8:	ldr	r0, [pc, #8]	; 113f8 <contentor_imprime@@Base+0x38>
   113ec:	bl	10a58 <puts@plt>
   113f0:	pop	{r4, pc}
   113f4:	andeq	r1, r1, r0, ror sl
   113f8:	andeq	r1, r1, r0, ror #20

000113fc <fila_novo_elemento@@Base>:
   113fc:	push	{r4, lr}
   11400:	mov	r4, r0
   11404:	mov	r0, #8
   11408:	bl	10a64 <malloc@plt>
   1140c:	cmp	r0, #0
   11410:	popeq	{r4, pc}
   11414:	str	r4, [r0]
   11418:	cmp	r4, #0
   1141c:	beq	1142c <fila_novo_elemento@@Base+0x30>
   11420:	mov	r3, #0
   11424:	str	r3, [r0, #4]
   11428:	pop	{r4, pc}
   1142c:	bl	10a40 <free@plt>
   11430:	mov	r0, #0
   11434:	pop	{r4, pc}

00011438 <fila_nova@@Base>:
   11438:	push	{r4, lr}
   1143c:	mov	r0, #8
   11440:	bl	10a64 <malloc@plt>
   11444:	cmp	r0, #0
   11448:	movne	r3, #0
   1144c:	strne	r3, [r0]
   11450:	strne	r3, [r0, #4]
   11454:	pop	{r4, pc}

00011458 <fila_apaga@@Base>:
   11458:	push	{r4, r5, r6, lr}
   1145c:	subs	r5, r0, #0
   11460:	popeq	{r4, r5, r6, pc}
   11464:	ldr	r4, [r5]
   11468:	cmp	r4, #0
   1146c:	beq	11494 <fila_apaga@@Base+0x3c>
   11470:	ldr	r3, [r4, #4]
   11474:	str	r3, [r5]
   11478:	ldr	r0, [r4]
   1147c:	bl	11628 <pilha_apaga@@Base>
   11480:	mov	r0, r4
   11484:	bl	10a40 <free@plt>
   11488:	ldr	r4, [r5]
   1148c:	cmp	r4, #0
   11490:	bne	11470 <fila_apaga@@Base+0x18>
   11494:	mov	r0, r5
   11498:	bl	10a40 <free@plt>
   1149c:	pop	{r4, r5, r6, pc}

000114a0 <fila_tamanho@@Base>:
   114a0:	cmp	r0, #0
   114a4:	ldrne	r0, [r0, #4]
   114a8:	mvneq	r0, #0
   114ac:	bx	lr

000114b0 <fila_front@@Base>:
   114b0:	cmp	r0, #0
   114b4:	beq	114d0 <fila_front@@Base+0x20>
   114b8:	ldr	r3, [r0, #4]
   114bc:	cmp	r3, #0
   114c0:	beq	114d8 <fila_front@@Base+0x28>
   114c4:	ldr	r3, [r0]
   114c8:	ldr	r0, [r3]
   114cc:	bx	lr
   114d0:	mov	r0, #0
   114d4:	bx	lr
   114d8:	mov	r0, #0
   114dc:	bx	lr

000114e0 <fila_back@@Base>:
   114e0:	cmp	r0, #0
   114e4:	beq	11514 <fila_back@@Base+0x34>
   114e8:	ldr	r3, [r0, #4]
   114ec:	cmp	r3, #0
   114f0:	beq	1151c <fila_back@@Base+0x3c>
   114f4:	ldr	r2, [r0]
   114f8:	b	11500 <fila_back@@Base+0x20>
   114fc:	mov	r2, r3
   11500:	ldr	r3, [r2, #4]
   11504:	cmp	r3, #0
   11508:	bne	114fc <fila_back@@Base+0x1c>
   1150c:	ldr	r0, [r2]
   11510:	bx	lr
   11514:	mov	r0, #0
   11518:	bx	lr
   1151c:	mov	r0, #0
   11520:	bx	lr

00011524 <fila_push@@Base>:
   11524:	push	{r4, r5, r6, lr}
   11528:	subs	r5, r0, #0
   1152c:	popeq	{r4, r5, r6, pc}
   11530:	mov	r0, r1
   11534:	ldr	r4, [r5]
   11538:	bl	113fc <fila_novo_elemento@@Base>
   1153c:	cmp	r0, #0
   11540:	popeq	{r4, r5, r6, pc}
   11544:	ldr	r3, [r5, #4]
   11548:	add	r3, r3, #1
   1154c:	str	r3, [r5, #4]
   11550:	cmp	r4, #0
   11554:	bne	11564 <fila_push@@Base+0x40>
   11558:	str	r0, [r5]
   1155c:	pop	{r4, r5, r6, pc}
   11560:	mov	r4, r3
   11564:	ldr	r3, [r4, #4]
   11568:	cmp	r3, #0
   1156c:	bne	11560 <fila_push@@Base+0x3c>
   11570:	str	r0, [r4, #4]
   11574:	pop	{r4, r5, r6, pc}

00011578 <fila_pop@@Base>:
   11578:	cmp	r0, #0
   1157c:	bxeq	lr
   11580:	ldr	r3, [r0, #4]
   11584:	cmp	r3, #0
   11588:	bxeq	lr
   1158c:	push	{r4, lr}
   11590:	ldr	r4, [r0]
   11594:	sub	r3, r3, #1
   11598:	str	r3, [r0, #4]
   1159c:	ldr	r3, [r4, #4]
   115a0:	str	r3, [r0]
   115a4:	ldr	r0, [r4]
   115a8:	bl	11628 <pilha_apaga@@Base>
   115ac:	mov	r0, r4
   115b0:	bl	10a40 <free@plt>
   115b4:	pop	{r4, pc}

000115b8 <pilha_novo_elemento@@Base>:
   115b8:	push	{r4, r5, r6, lr}
   115bc:	mov	r5, r0
   115c0:	mov	r0, #8
   115c4:	bl	10a64 <malloc@plt>
   115c8:	subs	r4, r0, #0
   115cc:	beq	115f0 <pilha_novo_elemento@@Base+0x38>
   115d0:	vldr	s0, [r5, #4]
   115d4:	ldr	r0, [r5]
   115d8:	bl	1135c <contentor_novo@@Base>
   115dc:	str	r0, [r4]
   115e0:	cmp	r0, #0
   115e4:	movne	r3, #0
   115e8:	strne	r3, [r4, #4]
   115ec:	beq	115f8 <pilha_novo_elemento@@Base+0x40>
   115f0:	mov	r0, r4
   115f4:	pop	{r4, r5, r6, pc}
   115f8:	mov	r0, r4
   115fc:	bl	10a40 <free@plt>
   11600:	mov	r4, #0
   11604:	b	115f0 <pilha_novo_elemento@@Base+0x38>

00011608 <pilha_nova@@Base>:
   11608:	push	{r4, lr}
   1160c:	mov	r0, #8
   11610:	bl	10a64 <malloc@plt>
   11614:	cmp	r0, #0
   11618:	movne	r3, #0
   1161c:	strne	r3, [r0]
   11620:	strne	r3, [r0, #4]
   11624:	pop	{r4, pc}

00011628 <pilha_apaga@@Base>:
   11628:	push	{r4, r5, r6, lr}
   1162c:	subs	r5, r0, #0
   11630:	popeq	{r4, r5, r6, pc}
   11634:	ldr	r4, [r5]
   11638:	cmp	r4, #0
   1163c:	beq	11664 <pilha_apaga@@Base+0x3c>
   11640:	ldr	r3, [r4, #4]
   11644:	str	r3, [r5]
   11648:	ldr	r0, [r4]
   1164c:	bl	113a4 <contentor_apaga@@Base>
   11650:	mov	r0, r4
   11654:	bl	10a40 <free@plt>
   11658:	ldr	r4, [r5]
   1165c:	cmp	r4, #0
   11660:	bne	11640 <pilha_apaga@@Base+0x18>
   11664:	mov	r0, r5
   11668:	bl	10a40 <free@plt>
   1166c:	pop	{r4, r5, r6, pc}

00011670 <pilha_tamanho@@Base>:
   11670:	cmp	r0, #0
   11674:	ldrne	r0, [r0, #4]
   11678:	mvneq	r0, #0
   1167c:	bx	lr

00011680 <pilha_top@@Base>:
   11680:	cmp	r0, #0
   11684:	beq	116a0 <pilha_top@@Base+0x20>
   11688:	ldr	r3, [r0, #4]
   1168c:	cmp	r3, #0
   11690:	beq	116a8 <pilha_top@@Base+0x28>
   11694:	ldr	r3, [r0]
   11698:	ldr	r0, [r3]
   1169c:	bx	lr
   116a0:	mov	r0, #0
   116a4:	bx	lr
   116a8:	mov	r0, #0
   116ac:	bx	lr

000116b0 <pilha_push@@Base>:
   116b0:	push	{r4, lr}
   116b4:	subs	r4, r0, #0
   116b8:	popeq	{r4, pc}
   116bc:	mov	r0, r1
   116c0:	bl	115b8 <pilha_novo_elemento@@Base>
   116c4:	cmp	r0, #0
   116c8:	popeq	{r4, pc}
   116cc:	ldr	r3, [r4, #4]
   116d0:	add	r3, r3, #1
   116d4:	str	r3, [r4, #4]
   116d8:	ldr	r3, [r4]
   116dc:	cmp	r3, #0
   116e0:	strne	r3, [r0, #4]
   116e4:	str	r0, [r4]
   116e8:	pop	{r4, pc}

000116ec <pilha_pop@@Base>:
   116ec:	cmp	r0, #0
   116f0:	bxeq	lr
   116f4:	ldr	r3, [r0, #4]
   116f8:	cmp	r3, #0
   116fc:	bxeq	lr
   11700:	push	{r4, lr}
   11704:	ldr	r4, [r0]
   11708:	ldr	r2, [r4, #4]
   1170c:	str	r2, [r0]
   11710:	sub	r3, r3, #1
   11714:	str	r3, [r0, #4]
   11718:	ldr	r0, [r4]
   1171c:	bl	113a4 <contentor_apaga@@Base>
   11720:	mov	r0, r4
   11724:	bl	10a40 <free@plt>
   11728:	pop	{r4, pc}

0001172c <__libc_csu_init@@Base>:
   1172c:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   11730:	mov	r7, r0
   11734:	ldr	r6, [pc, #72]	; 11784 <__libc_csu_init@@Base+0x58>
   11738:	ldr	r5, [pc, #72]	; 11788 <__libc_csu_init@@Base+0x5c>
   1173c:	add	r6, pc, r6
   11740:	add	r5, pc, r5
   11744:	sub	r6, r6, r5
   11748:	mov	r8, r1
   1174c:	mov	r9, r2
   11750:	bl	10a08 <calloc@plt-0x20>
   11754:	asrs	r6, r6, #2
   11758:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1175c:	mov	r4, #0
   11760:	add	r4, r4, #1
   11764:	ldr	r3, [r5], #4
   11768:	mov	r2, r9
   1176c:	mov	r1, r8
   11770:	mov	r0, r7
   11774:	blx	r3
   11778:	cmp	r6, r4
   1177c:	bne	11760 <__libc_csu_init@@Base+0x34>
   11780:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   11784:	andeq	r0, r1, ip, asr #15
   11788:	andeq	r0, r1, r4, asr #15

0001178c <__libc_csu_fini@@Base>:
   1178c:	bx	lr

Disassembly of section .fini:

00011790 <.fini>:
   11790:	push	{r3, lr}
   11794:	pop	{r3, pc}
