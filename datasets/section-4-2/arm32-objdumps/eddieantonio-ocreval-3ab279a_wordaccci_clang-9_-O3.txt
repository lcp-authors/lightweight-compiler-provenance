
../repos/eddieantonio-ocreval-3ab279a/wordaccci/wordaccci:     file format elf32-littlearm


Disassembly of section .init:

00010854 <.init>:
   10854:	push	{r3, lr}
   10858:	bl	109ec <abort@plt+0x4c>
   1085c:	pop	{r3, pc}

Disassembly of section .plt:

00010860 <calloc@plt-0x14>:
   10860:	push	{lr}		; (str lr, [sp, #-4]!)
   10864:	ldr	lr, [pc, #4]	; 10870 <calloc@plt-0x4>
   10868:	add	lr, pc, lr
   1086c:	ldr	pc, [lr, #8]!
   10870:	muleq	r1, r0, r7

00010874 <calloc@plt>:
   10874:	add	ip, pc, #0, 12
   10878:	add	ip, ip, #73728	; 0x12000
   1087c:	ldr	pc, [ip, #1936]!	; 0x790

00010880 <strcmp@plt>:
   10880:	add	ip, pc, #0, 12
   10884:	add	ip, ip, #73728	; 0x12000
   10888:	ldr	pc, [ip, #1928]!	; 0x788

0001088c <strtol@plt>:
   1088c:	add	ip, pc, #0, 12
   10890:	add	ip, ip, #73728	; 0x12000
   10894:	ldr	pc, [ip, #1920]!	; 0x780

00010898 <printf@plt>:
   10898:	add	ip, pc, #0, 12
   1089c:	add	ip, ip, #73728	; 0x12000
   108a0:	ldr	pc, [ip, #1912]!	; 0x778

000108a4 <fopen@plt>:
   108a4:	add	ip, pc, #0, 12
   108a8:	add	ip, ip, #73728	; 0x12000
   108ac:	ldr	pc, [ip, #1904]!	; 0x770

000108b0 <free@plt>:
   108b0:	add	ip, pc, #0, 12
   108b4:	add	ip, ip, #73728	; 0x12000
   108b8:	ldr	pc, [ip, #1896]!	; 0x768

000108bc <fgets@plt>:
   108bc:	add	ip, pc, #0, 12
   108c0:	add	ip, ip, #73728	; 0x12000
   108c4:	ldr	pc, [ip, #1888]!	; 0x760

000108c8 <strdup@plt>:
   108c8:	add	ip, pc, #0, 12
   108cc:	add	ip, ip, #73728	; 0x12000
   108d0:	ldr	pc, [ip, #1880]!	; 0x758

000108d4 <unlink@plt>:
   108d4:	add	ip, pc, #0, 12
   108d8:	add	ip, ip, #73728	; 0x12000
   108dc:	ldr	pc, [ip, #1872]!	; 0x750

000108e0 <__xstat@plt>:
   108e0:	add	ip, pc, #0, 12
   108e4:	add	ip, ip, #73728	; 0x12000
   108e8:	ldr	pc, [ip, #1864]!	; 0x748

000108ec <fwrite@plt>:
   108ec:	add	ip, pc, #0, 12
   108f0:	add	ip, ip, #73728	; 0x12000
   108f4:	ldr	pc, [ip, #1856]!	; 0x740

000108f8 <__libc_start_main@plt>:
   108f8:	add	ip, pc, #0, 12
   108fc:	add	ip, ip, #73728	; 0x12000
   10900:	ldr	pc, [ip, #1848]!	; 0x738

00010904 <__sysv_signal@plt>:
   10904:	add	ip, pc, #0, 12
   10908:	add	ip, ip, #73728	; 0x12000
   1090c:	ldr	pc, [ip, #1840]!	; 0x730

00010910 <__gmon_start__@plt>:
   10910:	add	ip, pc, #0, 12
   10914:	add	ip, ip, #73728	; 0x12000
   10918:	ldr	pc, [ip, #1832]!	; 0x728

0001091c <getpid@plt>:
   1091c:	add	ip, pc, #0, 12
   10920:	add	ip, ip, #73728	; 0x12000
   10924:	ldr	pc, [ip, #1824]!	; 0x720

00010928 <exit@plt>:
   10928:	add	ip, pc, #0, 12
   1092c:	add	ip, ip, #73728	; 0x12000
   10930:	ldr	pc, [ip, #1816]!	; 0x718

00010934 <bcmp@plt>:
   10934:	add	ip, pc, #0, 12
   10938:	add	ip, ip, #73728	; 0x12000
   1093c:	ldr	pc, [ip, #1808]!	; 0x710

00010940 <strlen@plt>:
   10940:	add	ip, pc, #0, 12
   10944:	add	ip, ip, #73728	; 0x12000
   10948:	ldr	pc, [ip, #1800]!	; 0x708

0001094c <fprintf@plt>:
   1094c:	add	ip, pc, #0, 12
   10950:	add	ip, ip, #73728	; 0x12000
   10954:	ldr	pc, [ip, #1792]!	; 0x700

00010958 <sqrt@plt>:
   10958:	add	ip, pc, #0, 12
   1095c:	add	ip, ip, #73728	; 0x12000
   10960:	ldr	pc, [ip, #1784]!	; 0x6f8

00010964 <__isoc99_sscanf@plt>:
   10964:	add	ip, pc, #0, 12
   10968:	add	ip, ip, #73728	; 0x12000
   1096c:	ldr	pc, [ip, #1776]!	; 0x6f0

00010970 <fclose@plt>:
   10970:	add	ip, pc, #0, 12
   10974:	add	ip, ip, #73728	; 0x12000
   10978:	ldr	pc, [ip, #1768]!	; 0x6e8

0001097c <fputc@plt>:
   1097c:	add	ip, pc, #0, 12
   10980:	add	ip, ip, #73728	; 0x12000
   10984:	ldr	pc, [ip, #1760]!	; 0x6e0

00010988 <sprintf@plt>:
   10988:	add	ip, pc, #0, 12
   1098c:	add	ip, ip, #73728	; 0x12000
   10990:	ldr	pc, [ip, #1752]!	; 0x6d8

00010994 <strncmp@plt>:
   10994:	add	ip, pc, #0, 12
   10998:	add	ip, ip, #73728	; 0x12000
   1099c:	ldr	pc, [ip, #1744]!	; 0x6d0

000109a0 <abort@plt>:
   109a0:	add	ip, pc, #0, 12
   109a4:	add	ip, ip, #73728	; 0x12000
   109a8:	ldr	pc, [ip, #1736]!	; 0x6c8

Disassembly of section .text:

000109b0 <error@@Base-0x1868>:
   109b0:	mov	fp, #0
   109b4:	mov	lr, #0
   109b8:	pop	{r1}		; (ldr r1, [sp], #4)
   109bc:	mov	r2, sp
   109c0:	push	{r2}		; (str r2, [sp, #-4]!)
   109c4:	push	{r0}		; (str r0, [sp, #-4]!)
   109c8:	ldr	ip, [pc, #16]	; 109e0 <abort@plt+0x40>
   109cc:	push	{ip}		; (str ip, [sp, #-4]!)
   109d0:	ldr	r0, [pc, #12]	; 109e4 <abort@plt+0x44>
   109d4:	ldr	r3, [pc, #12]	; 109e8 <abort@plt+0x48>
   109d8:	bl	108f8 <__libc_start_main@plt>
   109dc:	bl	109a0 <abort@plt>
   109e0:	andeq	r2, r1, ip, asr #16
   109e4:	andeq	r0, r1, r8, lsr #23
   109e8:	andeq	r2, r1, ip, ror #15
   109ec:	ldr	r3, [pc, #20]	; 10a08 <abort@plt+0x68>
   109f0:	ldr	r2, [pc, #20]	; 10a0c <abort@plt+0x6c>
   109f4:	add	r3, pc, r3
   109f8:	ldr	r2, [r3, r2]
   109fc:	cmp	r2, #0
   10a00:	bxeq	lr
   10a04:	b	10910 <__gmon_start__@plt>
   10a08:	andeq	r2, r1, r4, lsl #12
   10a0c:	andeq	r0, r0, r4, ror r0
   10a10:	ldr	r0, [pc, #24]	; 10a30 <abort@plt+0x90>
   10a14:	ldr	r3, [pc, #24]	; 10a34 <abort@plt+0x94>
   10a18:	cmp	r3, r0
   10a1c:	bxeq	lr
   10a20:	ldr	r3, [pc, #16]	; 10a38 <abort@plt+0x98>
   10a24:	cmp	r3, #0
   10a28:	bxeq	lr
   10a2c:	bx	r3
   10a30:	andeq	r3, r2, r8, lsl #1
   10a34:	andeq	r3, r2, r8, lsl #1
   10a38:	andeq	r0, r0, r0
   10a3c:	ldr	r0, [pc, #36]	; 10a68 <abort@plt+0xc8>
   10a40:	ldr	r1, [pc, #36]	; 10a6c <abort@plt+0xcc>
   10a44:	sub	r1, r1, r0
   10a48:	asr	r1, r1, #2
   10a4c:	add	r1, r1, r1, lsr #31
   10a50:	asrs	r1, r1, #1
   10a54:	bxeq	lr
   10a58:	ldr	r3, [pc, #16]	; 10a70 <abort@plt+0xd0>
   10a5c:	cmp	r3, #0
   10a60:	bxeq	lr
   10a64:	bx	r3
   10a68:	andeq	r3, r2, r8, lsl #1
   10a6c:	andeq	r3, r2, r8, lsl #1
   10a70:	andeq	r0, r0, r0
   10a74:	push	{r4, lr}
   10a78:	ldr	r4, [pc, #24]	; 10a98 <abort@plt+0xf8>
   10a7c:	ldrb	r3, [r4]
   10a80:	cmp	r3, #0
   10a84:	popne	{r4, pc}
   10a88:	bl	10a10 <abort@plt+0x70>
   10a8c:	mov	r3, #1
   10a90:	strb	r3, [r4]
   10a94:	pop	{r4, pc}
   10a98:	muleq	r2, r8, r0
   10a9c:	b	10a3c <abort@plt+0x9c>
   10aa0:	push	{r4, r5, r6, sl, fp, lr}
   10aa4:	add	fp, sp, #16
   10aa8:	movw	r4, #12560	; 0x3110
   10aac:	mov	r1, r0
   10ab0:	movt	r4, #2
   10ab4:	ldm	r4, {r5, r6}
   10ab8:	mov	r0, r4
   10abc:	bl	10ef0 <abort@plt+0x550>
   10ac0:	ldm	r4, {r0, r2}
   10ac4:	sub	r2, r2, r6
   10ac8:	sub	r1, r0, r5
   10acc:	movw	r0, #29664	; 0x73e0
   10ad0:	movt	r0, #2
   10ad4:	pop	{r4, r5, r6, sl, fp, lr}
   10ad8:	b	10c40 <abort@plt+0x2a0>
   10adc:	nop	{0}
   10ae0:	push	{r4, sl, fp, lr}
   10ae4:	add	fp, sp, #8
   10ae8:	sub	sp, sp, #32
   10aec:	movw	r4, #29664	; 0x73e0
   10af0:	sub	r1, fp, #16
   10af4:	add	r2, sp, #16
   10af8:	movt	r4, #2
   10afc:	mov	r0, r4
   10b00:	bl	10c90 <abort@plt+0x2f0>
   10b04:	ldr	r1, [r4, #12]
   10b08:	movw	r0, #10332	; 0x285c
   10b0c:	movt	r0, #1
   10b10:	bl	10898 <printf@plt>
   10b14:	movw	r4, #12560	; 0x3110
   10b18:	movw	r0, #10354	; 0x2872
   10b1c:	movt	r4, #2
   10b20:	movt	r0, #1
   10b24:	ldr	r1, [r4]
   10b28:	bl	10898 <printf@plt>
   10b2c:	ldr	r1, [r4, #4]
   10b30:	movw	r0, #10369	; 0x2881
   10b34:	movt	r0, #1
   10b38:	bl	10898 <printf@plt>
   10b3c:	ldm	r4, {r0, r1}
   10b40:	vldr	d16, [pc, #88]	; 10ba0 <abort@plt+0x200>
   10b44:	sub	r1, r0, r1
   10b48:	vmov	s2, r0
   10b4c:	movw	r0, #10392	; 0x2898
   10b50:	vmov	s0, r1
   10b54:	movt	r0, #1
   10b58:	vcvt.f64.s32	d17, s0
   10b5c:	vcvt.f64.s32	d18, s2
   10b60:	vmul.f64	d16, d17, d16
   10b64:	vdiv.f64	d16, d16, d18
   10b68:	vmov	r2, r3, d16
   10b6c:	bl	10898 <printf@plt>
   10b70:	vldr	d16, [fp, #-16]
   10b74:	movw	r0, #10433	; 0x28c1
   10b78:	vldr	d17, [sp, #16]
   10b7c:	movt	r0, #1
   10b80:	str	r0, [sp, #8]
   10b84:	movw	r0, #10412	; 0x28ac
   10b88:	movt	r0, #1
   10b8c:	vmov	r2, r3, d16
   10b90:	vstr	d17, [sp]
   10b94:	bl	10898 <printf@plt>
   10b98:	sub	sp, fp, #8
   10b9c:	pop	{r4, sl, fp, pc}
   10ba0:	andeq	r0, r0, r0
   10ba4:	subsmi	r0, r9, r0
   10ba8:	push	{fp, lr}
   10bac:	mov	fp, sp
   10bb0:	sub	sp, sp, #8
   10bb4:	movw	r2, #10482	; 0x28f2
   10bb8:	str	r0, [sp, #4]
   10bbc:	add	r0, sp, #4
   10bc0:	mov	r3, #0
   10bc4:	mov	r9, r1
   10bc8:	mov	r7, #0
   10bcc:	movt	r2, #1
   10bd0:	bl	11f00 <abort@plt+0x1560>
   10bd4:	ldr	r0, [sp, #4]
   10bd8:	cmp	r0, #2
   10bdc:	blt	10c30 <abort@plt+0x290>
   10be0:	movw	r5, #12560	; 0x3110
   10be4:	movw	r8, #29664	; 0x73e0
   10be8:	movt	r5, #2
   10bec:	movt	r8, #2
   10bf0:	ldr	r1, [r9, r7, lsl #2]
   10bf4:	ldr	r6, [r5]
   10bf8:	ldr	r4, [r5, #4]
   10bfc:	mov	r0, r5
   10c00:	bl	10ef0 <abort@plt+0x550>
   10c04:	ldm	r5, {r0, r2}
   10c08:	sub	r2, r2, r4
   10c0c:	sub	r1, r0, r6
   10c10:	mov	r0, r8
   10c14:	bl	10c40 <abort@plt+0x2a0>
   10c18:	ldr	r0, [sp, #4]
   10c1c:	add	r7, r7, #1
   10c20:	cmp	r7, r0
   10c24:	blt	10bf0 <abort@plt+0x250>
   10c28:	bl	10ae0 <abort@plt+0x140>
   10c2c:	bl	121d8 <abort@plt+0x1838>
   10c30:	movw	r0, #10530	; 0x2922
   10c34:	movt	r0, #1
   10c38:	bl	12218 <error@@Base>
   10c3c:	andeq	r0, r0, r0
   10c40:	push	{r4, r5, r6, sl, fp, lr}
   10c44:	add	fp, sp, #16
   10c48:	mov	r6, r1
   10c4c:	mov	r4, r0
   10c50:	mov	r0, #1
   10c54:	mov	r1, #32
   10c58:	mov	r5, r2
   10c5c:	bl	11ce0 <abort@plt+0x1340>
   10c60:	mov	r1, r0
   10c64:	str	r6, [r1, #8]
   10c68:	str	r5, [r1, #12]
   10c6c:	ldr	r0, [r4, #24]
   10c70:	ldr	r3, [r4, #28]
   10c74:	add	r0, r0, r6
   10c78:	add	r3, r3, r5
   10c7c:	str	r0, [r4, #24]
   10c80:	str	r3, [r4, #28]
   10c84:	mov	r0, r4
   10c88:	pop	{r4, r5, r6, sl, fp, lr}
   10c8c:	b	1244c <error@@Base+0x234>
   10c90:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   10c94:	add	fp, sp, #24
   10c98:	vpush	{d8}
   10c9c:	mov	r5, r0
   10ca0:	ldr	r0, [r0]
   10ca4:	cmp	r0, #0
   10ca8:	beq	10e54 <abort@plt+0x4b4>
   10cac:	mov	r8, r2
   10cb0:	mov	r9, r1
   10cb4:	mov	r1, #0
   10cb8:	mov	r2, r0
   10cbc:	ldr	r3, [r2, #4]
   10cc0:	ldr	r2, [r2, #8]
   10cc4:	cmp	r2, #0
   10cc8:	mov	r2, r3
   10ccc:	addgt	r1, r1, #1
   10cd0:	cmp	r3, #0
   10cd4:	bne	10cbc <abort@plt+0x31c>
   10cd8:	cmp	r1, #1
   10cdc:	bls	10e54 <abort@plt+0x4b4>
   10ce0:	ldrd	r2, [r5, #24]
   10ce4:	ldr	r1, [r5, #12]
   10ce8:	vldr	d8, [pc, #368]	; 10e60 <abort@plt+0x4c0>
   10cec:	vmov.i32	d19, #0	; 0x00000000
   10cf0:	sub	r4, r2, r3
   10cf4:	vmov	s2, r2
   10cf8:	vmov	s0, r4
   10cfc:	sub	r4, r1, #1
   10d00:	vcvt.f64.s32	d16, s0
   10d04:	vcvt.f64.s32	d17, s2
   10d08:	vmov	s0, r1
   10d0c:	mov	r1, r0
   10d10:	vmul.f64	d18, d16, d8
   10d14:	vcvt.f64.s32	d16, s0
   10d18:	vmov	s0, r4
   10d1c:	vdiv.f64	d20, d18, d17
   10d20:	vcvt.f64.s32	d17, s0
   10d24:	vmul.f64	d18, d20, d16
   10d28:	vstr	d20, [r5, #32]
   10d2c:	ldr	r6, [r1, #12]
   10d30:	ldmib	r1, {r4, r7}
   10d34:	sub	r7, r2, r7
   10d38:	vmov	s2, r7
   10d3c:	cmp	r4, #0
   10d40:	sub	r6, r6, r3
   10d44:	add	r6, r6, r7
   10d48:	vmov	s0, r6
   10d4c:	vcvt.f64.s32	d20, s0
   10d50:	vcvt.f64.s32	d21, s2
   10d54:	vmul.f64	d20, d20, d8
   10d58:	vdiv.f64	d20, d20, d21
   10d5c:	vmov.f64	d21, d18
   10d60:	vmls.f64	d21, d20, d17
   10d64:	vstr	d20, [r1, #16]
   10d68:	vadd.f64	d19, d19, d20
   10d6c:	vstr	d21, [r1, #24]
   10d70:	mov	r1, r4
   10d74:	bne	10d2c <abort@plt+0x38c>
   10d78:	vmul.f64	d19, d19, d17
   10d7c:	vdiv.f64	d19, d19, d16
   10d80:	vsub.f64	d19, d18, d19
   10d84:	vmov.i32	d18, #0	; 0x00000000
   10d88:	vstr	d19, [r5, #40]	; 0x28
   10d8c:	vldr	d20, [r0, #24]
   10d90:	ldr	r0, [r0, #4]
   10d94:	cmp	r0, #0
   10d98:	vsub.f64	d20, d20, d19
   10d9c:	vmla.f64	d18, d20, d20
   10da0:	bne	10d8c <abort@plt+0x3ec>
   10da4:	vdiv.f64	d17, d18, d17
   10da8:	vdiv.f64	d16, d17, d16
   10dac:	vsqrt.f64	d0, d16
   10db0:	vcmpe.f64	d0, d0
   10db4:	vmrs	APSR_nzcv, fpscr
   10db8:	bvc	10dc4 <abort@plt+0x424>
   10dbc:	vmov.f64	d0, d16
   10dc0:	bl	10958 <sqrt@plt>
   10dc4:	vldr	d16, [pc, #156]	; 10e68 <abort@plt+0x4c8>
   10dc8:	vldr	d17, [r5, #40]	; 0x28
   10dcc:	vmov.i32	d18, #0	; 0x00000000
   10dd0:	vmov.f64	d20, d8
   10dd4:	vmul.f64	d16, d0, d16
   10dd8:	vsub.f64	d17, d17, d16
   10ddc:	vcmpe.f64	d17, d8
   10de0:	vmrs	APSR_nzcv, fpscr
   10de4:	vcmpe.f64	d17, #0.0
   10de8:	vselgt.f64	d19, d8, d18
   10dec:	vmrs	APSR_nzcv, fpscr
   10df0:	vcmpe.f64	d17, d8
   10df4:	vmovmi.f64	d20, d19
   10df8:	vmrs	APSR_nzcv, fpscr
   10dfc:	vcmpe.f64	d17, #0.0
   10e00:	vselgt.f64	d19, d20, d17
   10e04:	vmrs	APSR_nzcv, fpscr
   10e08:	vmovmi.f64	d19, d20
   10e0c:	vstr	d19, [r9]
   10e10:	vldr	d17, [r5, #40]	; 0x28
   10e14:	vadd.f64	d16, d16, d17
   10e18:	vcmpe.f64	d16, d8
   10e1c:	vmrs	APSR_nzcv, fpscr
   10e20:	vcmpe.f64	d16, #0.0
   10e24:	vselgt.f64	d17, d8, d18
   10e28:	vmrs	APSR_nzcv, fpscr
   10e2c:	vcmpe.f64	d16, d8
   10e30:	vmovmi.f64	d8, d17
   10e34:	vmrs	APSR_nzcv, fpscr
   10e38:	vcmpe.f64	d16, #0.0
   10e3c:	vselgt.f64	d17, d8, d16
   10e40:	vmrs	APSR_nzcv, fpscr
   10e44:	vmovmi.f64	d17, d8
   10e48:	vstr	d17, [r8]
   10e4c:	vpop	{d8}
   10e50:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   10e54:	movw	r0, #10553	; 0x2939
   10e58:	movt	r0, #1
   10e5c:	bl	12218 <error@@Base>
   10e60:	andeq	r0, r0, r0
   10e64:	subsmi	r0, r9, r0
   10e68:			; <UNDEFINED> instruction: 0xf5c28f5c
   10e6c:	svccc	0x00ff5c28
   10e70:	ldm	r0, {r3, ip}
   10e74:	add	r2, ip, r2
   10e78:	add	r1, r3, r1
   10e7c:	stm	r0, {r1, r2}
   10e80:	bx	lr
   10e84:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   10e88:	add	fp, sp, #24
   10e8c:	mov	r8, r3
   10e90:	mov	r5, r2
   10e94:	mov	r4, r1
   10e98:	mov	r6, r0
   10e9c:	bl	11a60 <abort@plt+0x10c0>
   10ea0:	mov	r7, r0
   10ea4:	cmp	r0, #0
   10ea8:	bne	10ed4 <abort@plt+0x534>
   10eac:	mov	r0, #1
   10eb0:	mov	r1, #20
   10eb4:	bl	11ce0 <abort@plt+0x1340>
   10eb8:	mov	r7, r0
   10ebc:	mov	r0, r4
   10ec0:	bl	108c8 <strdup@plt>
   10ec4:	str	r0, [r7, #8]
   10ec8:	mov	r0, r6
   10ecc:	mov	r1, r7
   10ed0:	bl	11af0 <abort@plt+0x1150>
   10ed4:	ldr	r0, [r7, #12]
   10ed8:	ldr	r1, [r7, #16]
   10edc:	add	r0, r0, r5
   10ee0:	add	r1, r1, r8
   10ee4:	str	r0, [r7, #12]
   10ee8:	str	r1, [r7, #16]
   10eec:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   10ef0:	push	{r4, r5, r6, r7, fp, lr}
   10ef4:	add	fp, sp, #16
   10ef8:	sub	sp, sp, #8
   10efc:	mov	r6, r1
   10f00:	movw	r1, #10577	; 0x2951
   10f04:	mov	r5, r0
   10f08:	movt	r1, #1
   10f0c:	mov	r0, r6
   10f10:	bl	11d84 <abort@plt+0x13e4>
   10f14:	mov	r4, r0
   10f18:	movw	r0, #12441	; 0x3099
   10f1c:	mov	r1, #99	; 0x63
   10f20:	movt	r0, #2
   10f24:	mov	r2, r4
   10f28:	bl	108bc <fgets@plt>
   10f2c:	cmp	r0, #0
   10f30:	beq	110d0 <abort@plt+0x730>
   10f34:	movw	r0, #12441	; 0x3099
   10f38:	movw	r1, #10579	; 0x2953
   10f3c:	mov	r2, #45	; 0x2d
   10f40:	movt	r0, #2
   10f44:	movt	r1, #1
   10f48:	bl	10934 <bcmp@plt>
   10f4c:	cmp	r0, #0
   10f50:	bne	110d0 <abort@plt+0x730>
   10f54:	movw	r0, #12441	; 0x3099
   10f58:	mov	r1, #99	; 0x63
   10f5c:	mov	r2, r4
   10f60:	movt	r0, #2
   10f64:	bl	108bc <fgets@plt>
   10f68:	cmp	r0, #0
   10f6c:	beq	110d0 <abort@plt+0x730>
   10f70:	movw	r0, #12441	; 0x3099
   10f74:	movw	r1, #10627	; 0x2983
   10f78:	mov	r2, #48	; 0x30
   10f7c:	movt	r0, #2
   10f80:	movt	r1, #1
   10f84:	bl	10934 <bcmp@plt>
   10f88:	cmp	r0, #0
   10f8c:	bne	110d0 <abort@plt+0x730>
   10f90:	movw	r0, #12441	; 0x3099
   10f94:	mov	r1, #99	; 0x63
   10f98:	mov	r2, r4
   10f9c:	movt	r0, #2
   10fa0:	bl	108bc <fgets@plt>
   10fa4:	cmp	r0, #0
   10fa8:	beq	110d0 <abort@plt+0x730>
   10fac:	movw	r0, #12441	; 0x3099
   10fb0:	movw	r1, #10795	; 0x2a2b
   10fb4:	add	r2, sp, #4
   10fb8:	movt	r0, #2
   10fbc:	movt	r1, #1
   10fc0:	bl	10964 <__isoc99_sscanf@plt>
   10fc4:	cmp	r0, #1
   10fc8:	bne	110d0 <abort@plt+0x730>
   10fcc:	movw	r0, #12441	; 0x3099
   10fd0:	mov	r1, #99	; 0x63
   10fd4:	mov	r2, r4
   10fd8:	movt	r0, #2
   10fdc:	bl	108bc <fgets@plt>
   10fe0:	cmp	r0, #0
   10fe4:	beq	110d0 <abort@plt+0x730>
   10fe8:	movw	r0, #12441	; 0x3099
   10fec:	movw	r1, #10795	; 0x2a2b
   10ff0:	mov	r2, sp
   10ff4:	movt	r0, #2
   10ff8:	movt	r1, #1
   10ffc:	bl	10964 <__isoc99_sscanf@plt>
   11000:	cmp	r0, #1
   11004:	bne	110d0 <abort@plt+0x730>
   11008:	movw	r0, #12441	; 0x3099
   1100c:	mov	r1, #99	; 0x63
   11010:	mov	r2, r4
   11014:	movt	r0, #2
   11018:	bl	108bc <fgets@plt>
   1101c:	cmp	r0, #0
   11020:	beq	110d0 <abort@plt+0x730>
   11024:	movw	r0, #12441	; 0x3099
   11028:	mov	r1, #99	; 0x63
   1102c:	mov	r2, r4
   11030:	movt	r0, #2
   11034:	bl	108bc <fgets@plt>
   11038:	cmp	r0, #0
   1103c:	beq	110d0 <abort@plt+0x730>
   11040:	ldr	r2, [sp, #4]
   11044:	ldm	r5, {r0, r1}
   11048:	add	r0, r0, r2
   1104c:	ldr	r2, [sp]
   11050:	add	r1, r1, r2
   11054:	stm	r5, {r0, r1}
   11058:	add	r1, r5, #8
   1105c:	mov	r0, r4
   11060:	bl	110ec <abort@plt+0x74c>
   11064:	mov	r7, r0
   11068:	add	r1, r5, #416	; 0x1a0
   1106c:	mov	r0, r4
   11070:	bl	110ec <abort@plt+0x74c>
   11074:	mov	r6, r0
   11078:	add	r1, r5, #824	; 0x338
   1107c:	mov	r0, r4
   11080:	bl	110ec <abort@plt+0x74c>
   11084:	ldr	r0, [sp, #4]
   11088:	cmp	r0, #1
   1108c:	blt	110c0 <abort@plt+0x720>
   11090:	add	r1, r5, #920	; 0x398
   11094:	mov	r0, r4
   11098:	bl	110ec <abort@plt+0x74c>
   1109c:	cmp	r7, #1
   110a0:	addge	r1, r5, #992	; 0x3e0
   110a4:	movge	r0, r4
   110a8:	blge	11218 <abort@plt+0x878>
   110ac:	cmp	r6, #1
   110b0:	movwge	r0, #9048	; 0x2358
   110b4:	addge	r1, r5, r0
   110b8:	movge	r0, r4
   110bc:	blge	11218 <abort@plt+0x878>
   110c0:	mov	r0, r4
   110c4:	bl	11dfc <abort@plt+0x145c>
   110c8:	sub	sp, fp, #16
   110cc:	pop	{r4, r5, r6, r7, fp, pc}
   110d0:	movw	r0, #10675	; 0x29b3
   110d4:	movw	r1, #10693	; 0x29c5
   110d8:	cmp	r6, #0
   110dc:	movt	r0, #1
   110e0:	movt	r1, #1
   110e4:	movne	r1, r6
   110e8:	bl	12258 <error@@Base+0x40>
   110ec:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   110f0:	add	fp, sp, #28
   110f4:	sub	sp, sp, #12
   110f8:	mov	r5, r0
   110fc:	movw	r0, #12441	; 0x3099
   11100:	mov	r4, r1
   11104:	mov	r1, #99	; 0x63
   11108:	movt	r0, #2
   1110c:	mov	r2, r5
   11110:	bl	108bc <fgets@plt>
   11114:	mov	r6, #0
   11118:	cmp	r0, #0
   1111c:	beq	1120c <abort@plt+0x86c>
   11120:	movw	r0, #12441	; 0x3099
   11124:	mov	r1, #99	; 0x63
   11128:	mov	r2, r5
   1112c:	movt	r0, #2
   11130:	bl	108bc <fgets@plt>
   11134:	cmp	r0, #0
   11138:	beq	1120c <abort@plt+0x86c>
   1113c:	movw	r7, #12441	; 0x3099
   11140:	mov	r1, #99	; 0x63
   11144:	mov	r2, r5
   11148:	movt	r7, #2
   1114c:	mov	r0, r7
   11150:	bl	108bc <fgets@plt>
   11154:	cmp	r0, #0
   11158:	beq	1120c <abort@plt+0x86c>
   1115c:	mov	r6, #0
   11160:	add	r9, sp, #8
   11164:	add	sl, sp, #4
   11168:	add	r8, r7, #29
   1116c:	b	111cc <abort@plt+0x82c>
   11170:	movw	r1, #10783	; 0x2a1f
   11174:	mov	r0, r8
   11178:	mov	r2, #8
   1117c:	movt	r1, #1
   11180:	bl	10934 <bcmp@plt>
   11184:	ldr	r1, [sp, #8]
   11188:	cmp	r0, #0
   1118c:	movwne	r0, #11
   11190:	moveq	r6, r1
   11194:	mov	r2, r4
   11198:	ldr	r0, [r2, r0, lsl #3]!
   1119c:	add	r0, r0, r1
   111a0:	ldr	r1, [sp, #4]
   111a4:	str	r0, [r2]
   111a8:	ldr	r0, [r2, #4]
   111ac:	add	r0, r0, r1
   111b0:	mov	r1, #99	; 0x63
   111b4:	str	r0, [r2, #4]
   111b8:	mov	r0, r7
   111bc:	mov	r2, r5
   111c0:	bl	108bc <fgets@plt>
   111c4:	cmp	r0, #0
   111c8:	beq	1120c <abort@plt+0x86c>
   111cc:	movw	r1, #10791	; 0x2a27
   111d0:	mov	r0, r7
   111d4:	mov	r2, r9
   111d8:	mov	r3, sl
   111dc:	movt	r1, #1
   111e0:	bl	10964 <__isoc99_sscanf@plt>
   111e4:	cmp	r0, #2
   111e8:	bne	1120c <abort@plt+0x86c>
   111ec:	mov	r0, r8
   111f0:	mov	r1, #0
   111f4:	mov	r2, #10
   111f8:	bl	1088c <strtol@plt>
   111fc:	cmp	r0, #0
   11200:	beq	11170 <abort@plt+0x7d0>
   11204:	ldr	r1, [sp, #8]
   11208:	b	11194 <abort@plt+0x7f4>
   1120c:	mov	r0, r6
   11210:	sub	sp, fp, #28
   11214:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11218:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1121c:	add	fp, sp, #28
   11220:	sub	sp, sp, #12
   11224:	mov	r5, r0
   11228:	movw	r0, #12441	; 0x3099
   1122c:	mov	r4, r1
   11230:	mov	r1, #99	; 0x63
   11234:	movt	r0, #2
   11238:	mov	r2, r5
   1123c:	bl	108bc <fgets@plt>
   11240:	cmp	r0, #0
   11244:	beq	1133c <abort@plt+0x99c>
   11248:	movw	r0, #12441	; 0x3099
   1124c:	mov	r1, #99	; 0x63
   11250:	mov	r2, r5
   11254:	movt	r0, #2
   11258:	bl	108bc <fgets@plt>
   1125c:	cmp	r0, #0
   11260:	beq	1133c <abort@plt+0x99c>
   11264:	movw	r6, #12441	; 0x3099
   11268:	mov	r1, #99	; 0x63
   1126c:	mov	r2, r5
   11270:	movt	r6, #2
   11274:	mov	r0, r6
   11278:	bl	108bc <fgets@plt>
   1127c:	cmp	r0, #0
   11280:	beq	1133c <abort@plt+0x99c>
   11284:	add	r7, r6, #29
   11288:	b	112bc <abort@plt+0x91c>
   1128c:	ldr	r0, [r8, #12]
   11290:	ldr	r1, [r8, #16]
   11294:	mov	r2, r5
   11298:	add	r0, r0, r9
   1129c:	add	r1, r1, sl
   112a0:	str	r0, [r8, #12]
   112a4:	str	r1, [r8, #16]
   112a8:	mov	r0, r6
   112ac:	mov	r1, #99	; 0x63
   112b0:	bl	108bc <fgets@plt>
   112b4:	cmp	r0, #0
   112b8:	beq	1133c <abort@plt+0x99c>
   112bc:	movw	r1, #10791	; 0x2a27
   112c0:	mov	r0, r6
   112c4:	add	r2, sp, #8
   112c8:	add	r3, sp, #4
   112cc:	movt	r1, #1
   112d0:	bl	10964 <__isoc99_sscanf@plt>
   112d4:	cmp	r0, #2
   112d8:	bne	1133c <abort@plt+0x99c>
   112dc:	mov	r0, r6
   112e0:	bl	10940 <strlen@plt>
   112e4:	ldr	r9, [sp, #8]
   112e8:	ldr	sl, [sp, #4]
   112ec:	add	r0, r0, r6
   112f0:	mov	r1, #0
   112f4:	strb	r1, [r0, #-1]
   112f8:	mov	r0, r4
   112fc:	mov	r1, r7
   11300:	bl	11a60 <abort@plt+0x10c0>
   11304:	mov	r8, r0
   11308:	cmp	r0, #0
   1130c:	bne	1128c <abort@plt+0x8ec>
   11310:	mov	r0, #1
   11314:	mov	r1, #20
   11318:	bl	11ce0 <abort@plt+0x1340>
   1131c:	mov	r8, r0
   11320:	mov	r0, r7
   11324:	bl	108c8 <strdup@plt>
   11328:	str	r0, [r8, #8]
   1132c:	mov	r0, r4
   11330:	mov	r1, r8
   11334:	bl	11af0 <abort@plt+0x1150>
   11338:	b	1128c <abort@plt+0x8ec>
   1133c:	sub	sp, fp, #28
   11340:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11344:	nop	{0}
   11348:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   1134c:	add	fp, sp, #24
   11350:	sub	sp, sp, #8
   11354:	mov	r2, r1
   11358:	movw	r1, #10699	; 0x29cb
   1135c:	mov	r5, r0
   11360:	movt	r1, #1
   11364:	mov	r0, r2
   11368:	bl	11d84 <abort@plt+0x13e4>
   1136c:	movw	r1, #10701	; 0x29cd
   11370:	movw	r2, #10579	; 0x2953
   11374:	movw	r3, #10627	; 0x2983
   11378:	mov	r4, r0
   1137c:	movt	r1, #1
   11380:	movt	r2, #1
   11384:	movt	r3, #1
   11388:	bl	1094c <fprintf@plt>
   1138c:	ldr	r2, [r5]
   11390:	movw	r1, #10706	; 0x29d2
   11394:	mov	r0, r4
   11398:	movt	r1, #1
   1139c:	bl	1094c <fprintf@plt>
   113a0:	ldr	r2, [r5, #4]
   113a4:	movw	r1, #10720	; 0x29e0
   113a8:	mov	r0, r4
   113ac:	movt	r1, #1
   113b0:	bl	1094c <fprintf@plt>
   113b4:	ldr	r0, [r5]
   113b8:	cmp	r0, #0
   113bc:	beq	113fc <abort@plt+0xa5c>
   113c0:	ldr	r1, [r5, #4]
   113c4:	vldr	d16, [pc, #332]	; 11518 <abort@plt+0xb78>
   113c8:	vmov	s2, r0
   113cc:	sub	r1, r0, r1
   113d0:	mov	r0, r4
   113d4:	vmov	s0, r1
   113d8:	movw	r1, #10808	; 0x2a38
   113dc:	movt	r1, #1
   113e0:	vcvt.f64.s32	d17, s0
   113e4:	vcvt.f64.s32	d18, s2
   113e8:	vmul.f64	d16, d17, d16
   113ec:	vdiv.f64	d16, d16, d18
   113f0:	vmov	r2, r3, d16
   113f4:	bl	1094c <fprintf@plt>
   113f8:	b	11414 <abort@plt+0xa74>
   113fc:	movw	r0, #10799	; 0x2a2f
   11400:	mov	r1, #8
   11404:	mov	r2, #1
   11408:	mov	r3, r4
   1140c:	movt	r0, #1
   11410:	bl	108ec <fwrite@plt>
   11414:	movw	r0, #10399	; 0x289f
   11418:	mov	r1, #12
   1141c:	mov	r2, #1
   11420:	mov	r3, r4
   11424:	mov	r7, #1
   11428:	movt	r0, #1
   1142c:	bl	108ec <fwrite@plt>
   11430:	movw	r3, #10742	; 0x29f6
   11434:	mov	r8, #0
   11438:	add	r1, r5, #8
   1143c:	mov	r0, r4
   11440:	mov	r2, #50	; 0x32
   11444:	str	r7, [sp, #4]
   11448:	movt	r3, #1
   1144c:	str	r8, [sp]
   11450:	bl	11520 <abort@plt+0xb80>
   11454:	movw	r3, #10761	; 0x2a09
   11458:	add	r6, r5, #416	; 0x1a0
   1145c:	mov	r0, r4
   11460:	mov	r2, #50	; 0x32
   11464:	str	r8, [sp]
   11468:	str	r7, [sp, #4]
   1146c:	movt	r3, #1
   11470:	mov	r1, r6
   11474:	bl	11520 <abort@plt+0xb80>
   11478:	movw	r3, #10752	; 0x2a00
   1147c:	add	r1, r5, #824	; 0x338
   11480:	mov	r0, r4
   11484:	mov	r2, #10
   11488:	str	r7, [sp]
   1148c:	str	r7, [sp, #4]
   11490:	movt	r3, #1
   11494:	bl	11520 <abort@plt+0xb80>
   11498:	ldr	r0, [r5]
   1149c:	cmp	r0, #1
   114a0:	blt	11508 <abort@plt+0xb68>
   114a4:	movw	r3, #10775	; 0x2a17
   114a8:	add	r1, r5, #920	; 0x398
   114ac:	mov	r0, r4
   114b0:	mov	r2, #8
   114b4:	str	r8, [sp]
   114b8:	str	r8, [sp, #4]
   114bc:	movt	r3, #1
   114c0:	bl	11520 <abort@plt+0xb80>
   114c4:	ldr	r0, [r5, #8]
   114c8:	cmp	r0, #1
   114cc:	blt	114e4 <abort@plt+0xb44>
   114d0:	movw	r2, #10742	; 0x29f6
   114d4:	add	r1, r5, #992	; 0x3e0
   114d8:	mov	r0, r4
   114dc:	movt	r2, #1
   114e0:	bl	11890 <abort@plt+0xef0>
   114e4:	ldr	r0, [r6]
   114e8:	cmp	r0, #1
   114ec:	blt	11508 <abort@plt+0xb68>
   114f0:	movw	r2, #10761	; 0x2a09
   114f4:	movw	r0, #9048	; 0x2358
   114f8:	movt	r2, #1
   114fc:	add	r1, r5, r0
   11500:	mov	r0, r4
   11504:	bl	11890 <abort@plt+0xef0>
   11508:	mov	r0, r4
   1150c:	sub	sp, fp, #24
   11510:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   11514:	b	11dfc <abort@plt+0x145c>
   11518:	andeq	r0, r0, r0
   1151c:	subsmi	r0, r9, r0
   11520:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11524:	add	fp, sp, #28
   11528:	sub	sp, sp, #4
   1152c:	vpush	{d8}
   11530:	sub	sp, sp, #8
   11534:	mov	r5, r1
   11538:	movw	r1, #10814	; 0x2a3e
   1153c:	mov	r8, r2
   11540:	mov	r2, r3
   11544:	mov	r4, r0
   11548:	movt	r1, #1
   1154c:	bl	1094c <fprintf@plt>
   11550:	movw	r0, #10862	; 0x2a6e
   11554:	mov	r1, #26
   11558:	mov	r2, #1
   1155c:	mov	r3, r4
   11560:	mov	r7, #1
   11564:	movt	r0, #1
   11568:	bl	108ec <fwrite@plt>
   1156c:	movw	r0, #10889	; 0x2a89
   11570:	mov	r1, #3
   11574:	mov	r2, #1
   11578:	mov	r3, r4
   1157c:	movt	r0, #1
   11580:	bl	108ec <fwrite@plt>
   11584:	ldrb	r1, [fp, #8]
   11588:	movw	r0, #10819	; 0x2a43
   1158c:	movw	r2, #10826	; 0x2a4a
   11590:	movt	r0, #1
   11594:	movt	r2, #1
   11598:	cmp	r1, #0
   1159c:	str	r1, [sp]
   115a0:	movw	r1, #10815	; 0x2a3f
   115a4:	movt	r1, #1
   115a8:	movne	r2, r0
   115ac:	mov	r0, r4
   115b0:	bl	1094c <fprintf@plt>
   115b4:	ldr	r1, [fp, #12]
   115b8:	lsl	r0, r8, #16
   115bc:	sxth	r6, r8
   115c0:	cmp	r0, #65536	; 0x10000
   115c4:	str	r1, [sp, #4]
   115c8:	blt	116c4 <abort@plt+0xd24>
   115cc:	vldr	d8, [pc, #692]	; 11888 <abort@plt+0xee8>
   115d0:	movw	sl, #10833	; 0x2a51
   115d4:	mov	r8, #1
   115d8:	movt	sl, #1
   115dc:	mov	r0, r5
   115e0:	ldr	r2, [r0, r7, lsl #3]!
   115e4:	cmp	r2, #1
   115e8:	bge	11650 <abort@plt+0xcb0>
   115ec:	b	11630 <abort@plt+0xc90>
   115f0:	movw	r0, #10862	; 0x2a6e
   115f4:	mov	r1, #26
   115f8:	movt	r0, #1
   115fc:	mov	r2, #1
   11600:	mov	r3, r4
   11604:	bl	108ec <fwrite@plt>
   11608:	movw	r0, #10889	; 0x2a89
   1160c:	mov	r1, #3
   11610:	mov	r2, #1
   11614:	mov	r3, r4
   11618:	movt	r0, #1
   1161c:	bl	108ec <fwrite@plt>
   11620:	mov	r0, r4
   11624:	mov	r1, sl
   11628:	mov	r2, r7
   1162c:	bl	1094c <fprintf@plt>
   11630:	add	r8, r8, #1
   11634:	sxth	r7, r8
   11638:	cmp	r6, r7
   1163c:	blt	116c4 <abort@plt+0xd24>
   11640:	mov	r0, r5
   11644:	ldr	r2, [r0, r7, lsl #3]!
   11648:	cmp	r2, #1
   1164c:	blt	11630 <abort@plt+0xc90>
   11650:	cmp	r0, #0
   11654:	beq	115f0 <abort@plt+0xc50>
   11658:	add	r9, r5, r7, lsl #3
   1165c:	movw	r1, #10851	; 0x2a63
   11660:	mov	r0, r4
   11664:	movt	r1, #1
   11668:	ldr	r3, [r9, #4]!
   1166c:	bl	1094c <fprintf@plt>
   11670:	ldr	r0, [r5, r7, lsl #3]
   11674:	cmp	r0, #0
   11678:	beq	116b4 <abort@plt+0xd14>
   1167c:	ldr	r1, [r9]
   11680:	vmov	s2, r0
   11684:	sub	r1, r0, r1
   11688:	mov	r0, r4
   1168c:	vmov	s0, r1
   11690:	movw	r1, #10808	; 0x2a38
   11694:	movt	r1, #1
   11698:	vcvt.f64.s32	d16, s0
   1169c:	vcvt.f64.s32	d17, s2
   116a0:	vmul.f64	d16, d16, d8
   116a4:	vdiv.f64	d16, d16, d17
   116a8:	vmov	r2, r3, d16
   116ac:	bl	1094c <fprintf@plt>
   116b0:	b	11608 <abort@plt+0xc68>
   116b4:	movw	r0, #10799	; 0x2a2f
   116b8:	mov	r1, #8
   116bc:	movt	r0, #1
   116c0:	b	115fc <abort@plt+0xc5c>
   116c4:	ldr	r0, [sp]
   116c8:	cmp	r0, #0
   116cc:	beq	117a0 <abort@plt+0xe00>
   116d0:	add	r7, r6, #1
   116d4:	mov	r0, r5
   116d8:	ldr	r2, [r0, r7, lsl #3]!
   116dc:	cmp	r2, #1
   116e0:	blt	117a0 <abort@plt+0xe00>
   116e4:	cmp	r0, #0
   116e8:	beq	1174c <abort@plt+0xdac>
   116ec:	add	r8, r5, r7, lsl #3
   116f0:	movw	r1, #10851	; 0x2a63
   116f4:	mov	r0, r4
   116f8:	movt	r1, #1
   116fc:	ldr	r3, [r8, #4]!
   11700:	bl	1094c <fprintf@plt>
   11704:	ldr	r0, [r5, r7, lsl #3]
   11708:	cmp	r0, #0
   1170c:	beq	1175c <abort@plt+0xdbc>
   11710:	ldr	r1, [r8]
   11714:	vldr	d16, [pc, #364]	; 11888 <abort@plt+0xee8>
   11718:	vmov	s2, r0
   1171c:	sub	r1, r0, r1
   11720:	mov	r0, r4
   11724:	vmov	s0, r1
   11728:	movw	r1, #10808	; 0x2a38
   1172c:	movt	r1, #1
   11730:	vcvt.f64.s32	d17, s0
   11734:	vcvt.f64.s32	d18, s2
   11738:	vmul.f64	d16, d17, d16
   1173c:	vdiv.f64	d16, d16, d18
   11740:	vmov	r2, r3, d16
   11744:	bl	1094c <fprintf@plt>
   11748:	b	11774 <abort@plt+0xdd4>
   1174c:	movw	r0, #10862	; 0x2a6e
   11750:	mov	r1, #26
   11754:	movt	r0, #1
   11758:	b	11768 <abort@plt+0xdc8>
   1175c:	movw	r0, #10799	; 0x2a2f
   11760:	mov	r1, #8
   11764:	movt	r0, #1
   11768:	mov	r2, #1
   1176c:	mov	r3, r4
   11770:	bl	108ec <fwrite@plt>
   11774:	movw	r0, #10889	; 0x2a89
   11778:	mov	r1, #3
   1177c:	mov	r2, #1
   11780:	mov	r3, r4
   11784:	movt	r0, #1
   11788:	bl	108ec <fwrite@plt>
   1178c:	movw	r1, #10842	; 0x2a5a
   11790:	mov	r0, r4
   11794:	mov	r2, r6
   11798:	movt	r1, #1
   1179c:	bl	1094c <fprintf@plt>
   117a0:	ldr	r0, [sp, #4]
   117a4:	tst	r0, #255	; 0xff
   117a8:	beq	11810 <abort@plt+0xe70>
   117ac:	cmp	r5, #0
   117b0:	beq	11820 <abort@plt+0xe80>
   117b4:	movw	r1, #10851	; 0x2a63
   117b8:	ldm	r5, {r2, r3}
   117bc:	mov	r0, r4
   117c0:	movt	r1, #1
   117c4:	bl	1094c <fprintf@plt>
   117c8:	ldr	r0, [r5]
   117cc:	cmp	r0, #0
   117d0:	beq	11830 <abort@plt+0xe90>
   117d4:	ldr	r1, [r5, #4]
   117d8:	vldr	d16, [pc, #168]	; 11888 <abort@plt+0xee8>
   117dc:	vmov	s2, r0
   117e0:	sub	r1, r0, r1
   117e4:	mov	r0, r4
   117e8:	vmov	s0, r1
   117ec:	movw	r1, #10808	; 0x2a38
   117f0:	movt	r1, #1
   117f4:	vcvt.f64.s32	d17, s0
   117f8:	vcvt.f64.s32	d18, s2
   117fc:	vmul.f64	d16, d17, d16
   11800:	vdiv.f64	d16, d16, d18
   11804:	vmov	r2, r3, d16
   11808:	bl	1094c <fprintf@plt>
   1180c:	b	11848 <abort@plt+0xea8>
   11810:	sub	sp, fp, #40	; 0x28
   11814:	vpop	{d8}
   11818:	add	sp, sp, #4
   1181c:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11820:	movw	r0, #10862	; 0x2a6e
   11824:	mov	r1, #26
   11828:	movt	r0, #1
   1182c:	b	1183c <abort@plt+0xe9c>
   11830:	movw	r0, #10799	; 0x2a2f
   11834:	mov	r1, #8
   11838:	movt	r0, #1
   1183c:	mov	r2, #1
   11840:	mov	r3, r4
   11844:	bl	108ec <fwrite@plt>
   11848:	movw	r0, #10889	; 0x2a89
   1184c:	mov	r1, #3
   11850:	mov	r2, #1
   11854:	mov	r3, r4
   11858:	movt	r0, #1
   1185c:	bl	108ec <fwrite@plt>
   11860:	movw	r0, #10783	; 0x2a1f
   11864:	mov	r1, #7
   11868:	mov	r2, #1
   1186c:	mov	r3, r4
   11870:	movt	r0, #1
   11874:	sub	sp, fp, #40	; 0x28
   11878:	vpop	{d8}
   1187c:	add	sp, sp, #4
   11880:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11884:	b	108ec <fwrite@plt>
   11888:	andeq	r0, r0, r0
   1188c:	subsmi	r0, r9, r0
   11890:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11894:	add	fp, sp, #28
   11898:	sub	sp, sp, #4
   1189c:	vpush	{d8}
   118a0:	mov	r5, r0
   118a4:	mov	r0, r1
   118a8:	mov	r6, r2
   118ac:	mov	r4, r1
   118b0:	bl	11c00 <abort@plt+0x1260>
   118b4:	movw	r0, #8048	; 0x1f70
   118b8:	movw	r2, #6680	; 0x1a18
   118bc:	ldr	r1, [r4, r0]!
   118c0:	movt	r2, #1
   118c4:	ldr	r0, [r4, #4]
   118c8:	bl	126b4 <error@@Base+0x49c>
   118cc:	movw	r1, #10814	; 0x2a3e
   118d0:	mov	r0, r5
   118d4:	mov	r2, r6
   118d8:	movt	r1, #1
   118dc:	bl	1094c <fprintf@plt>
   118e0:	movw	r0, #10862	; 0x2a6e
   118e4:	mov	r1, #26
   118e8:	mov	r2, #1
   118ec:	mov	r3, r5
   118f0:	movt	r0, #1
   118f4:	bl	108ec <fwrite@plt>
   118f8:	movw	r0, #10889	; 0x2a89
   118fc:	mov	r1, #3
   11900:	mov	r2, #1
   11904:	mov	r3, r5
   11908:	movt	r0, #1
   1190c:	bl	108ec <fwrite@plt>
   11910:	mov	r0, #10
   11914:	mov	r1, r5
   11918:	bl	1097c <fputc@plt>
   1191c:	ldr	r0, [r4, #4]
   11920:	cmp	r0, #1
   11924:	blt	11a00 <abort@plt+0x1060>
   11928:	vldr	d8, [pc, #224]	; 11a10 <abort@plt+0x1070>
   1192c:	movw	r9, #10851	; 0x2a63
   11930:	movw	r7, #10889	; 0x2a89
   11934:	movw	r6, #10815	; 0x2a3f
   11938:	mov	r8, #0
   1193c:	movt	r9, #1
   11940:	movt	r7, #1
   11944:	movt	r6, #1
   11948:	b	119bc <abort@plt+0x101c>
   1194c:	ldr	r1, [sl, #16]
   11950:	vmov	s2, r0
   11954:	sub	r1, r0, r1
   11958:	mov	r0, r5
   1195c:	vmov	s0, r1
   11960:	movw	r1, #10808	; 0x2a38
   11964:	movt	r1, #1
   11968:	vcvt.f64.s32	d16, s0
   1196c:	vcvt.f64.s32	d17, s2
   11970:	vmul.f64	d16, d16, d8
   11974:	vdiv.f64	d16, d16, d17
   11978:	vmov	r2, r3, d16
   1197c:	bl	1094c <fprintf@plt>
   11980:	mov	r0, r7
   11984:	mov	r1, #3
   11988:	mov	r2, #1
   1198c:	mov	r3, r5
   11990:	bl	108ec <fwrite@plt>
   11994:	ldr	r0, [r4]
   11998:	mov	r1, r6
   1199c:	ldr	r0, [r0, r8, lsl #2]
   119a0:	ldr	r2, [r0, #8]
   119a4:	mov	r0, r5
   119a8:	bl	1094c <fprintf@plt>
   119ac:	ldr	r0, [r4, #4]
   119b0:	add	r8, r8, #1
   119b4:	cmp	r8, r0
   119b8:	bge	11a00 <abort@plt+0x1060>
   119bc:	ldr	r0, [r4]
   119c0:	mov	r1, r9
   119c4:	ldr	sl, [r0, r8, lsl #2]
   119c8:	mov	r0, r5
   119cc:	ldr	r2, [sl, #12]
   119d0:	ldr	r3, [sl, #16]
   119d4:	bl	1094c <fprintf@plt>
   119d8:	ldr	r0, [sl, #12]
   119dc:	cmp	r0, #0
   119e0:	bne	1194c <abort@plt+0xfac>
   119e4:	movw	r0, #10799	; 0x2a2f
   119e8:	mov	r1, #8
   119ec:	mov	r2, #1
   119f0:	mov	r3, r5
   119f4:	movt	r0, #1
   119f8:	bl	108ec <fwrite@plt>
   119fc:	b	11980 <abort@plt+0xfe0>
   11a00:	vpop	{d8}
   11a04:	add	sp, sp, #4
   11a08:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11a0c:	nop	{0}
   11a10:	andeq	r0, r0, r0
   11a14:	subsmi	r0, r9, r0
   11a18:	ldr	r1, [r1, #8]
   11a1c:	ldr	r0, [r0, #8]
   11a20:	b	11d00 <abort@plt+0x1360>
   11a24:	push	{r4, r5, r6, sl, fp, lr}
   11a28:	add	fp, sp, #16
   11a2c:	mov	r4, r0
   11a30:	movw	r0, #8048	; 0x1f70
   11a34:	movw	r6, #503	; 0x1f7
   11a38:	add	r5, r4, r0
   11a3c:	mov	r0, r4
   11a40:	bl	123f0 <error@@Base+0x1d8>
   11a44:	subs	r6, r6, #1
   11a48:	add	r4, r4, #16
   11a4c:	bne	11a3c <abort@plt+0x109c>
   11a50:	mov	r0, #0
   11a54:	str	r0, [r5]
   11a58:	str	r0, [r5, #4]
   11a5c:	pop	{r4, r5, r6, sl, fp, pc}
   11a60:	push	{r4, r5, r6, sl, fp, lr}
   11a64:	add	fp, sp, #16
   11a68:	mov	r5, r1
   11a6c:	ldrb	r1, [r1]
   11a70:	mov	r4, #0
   11a74:	mov	r2, #0
   11a78:	cmp	r1, #0
   11a7c:	beq	11ab0 <abort@plt+0x1110>
   11a80:	add	r3, r5, #1
   11a84:	mov	r2, #0
   11a88:	uxtab	r2, r2, r1
   11a8c:	ldrb	r1, [r3], #1
   11a90:	cmp	r1, #0
   11a94:	bne	11a88 <abort@plt+0x10e8>
   11a98:	movw	r1, #20065	; 0x4e61
   11a9c:	movt	r1, #33354	; 0x824a
   11aa0:	umull	r1, r3, r2, r1
   11aa4:	lsr	r1, r3, #8
   11aa8:	movw	r3, #503	; 0x1f7
   11aac:	mls	r2, r1, r3, r2
   11ab0:	ldr	r6, [r0, r2, lsl #4]
   11ab4:	cmp	r6, #0
   11ab8:	beq	11adc <abort@plt+0x113c>
   11abc:	ldr	r1, [r6, #8]
   11ac0:	mov	r0, r5
   11ac4:	bl	10880 <strcmp@plt>
   11ac8:	cmp	r0, #0
   11acc:	beq	11ae4 <abort@plt+0x1144>
   11ad0:	ldr	r6, [r6, #4]
   11ad4:	cmp	r6, #0
   11ad8:	bne	11abc <abort@plt+0x111c>
   11adc:	mov	r0, r4
   11ae0:	pop	{r4, r5, r6, sl, fp, pc}
   11ae4:	mov	r4, r6
   11ae8:	mov	r0, r4
   11aec:	pop	{r4, r5, r6, sl, fp, pc}
   11af0:	push	{r4, r5, fp, lr}
   11af4:	add	fp, sp, #8
   11af8:	movw	r2, #8048	; 0x1f70
   11afc:	add	r5, r0, r2
   11b00:	ldr	r2, [r1, #8]
   11b04:	ldrb	r3, [r2]
   11b08:	cmp	r3, #0
   11b0c:	beq	11b44 <abort@plt+0x11a4>
   11b10:	add	r4, r2, #1
   11b14:	mov	r2, #0
   11b18:	uxtab	r2, r2, r3
   11b1c:	ldrb	r3, [r4], #1
   11b20:	cmp	r3, #0
   11b24:	bne	11b18 <abort@plt+0x1178>
   11b28:	movw	r3, #20065	; 0x4e61
   11b2c:	movt	r3, #33354	; 0x824a
   11b30:	umull	r3, r4, r2, r3
   11b34:	lsr	r3, r4, #8
   11b38:	movw	r4, #503	; 0x1f7
   11b3c:	mls	r2, r3, r4, r2
   11b40:	b	11b48 <abort@plt+0x11a8>
   11b44:	mov	r2, #0
   11b48:	add	r0, r0, r2, lsl #4
   11b4c:	bl	123fc <error@@Base+0x1e4>
   11b50:	ldr	r0, [r5]
   11b54:	cmp	r0, #0
   11b58:	beq	11b68 <abort@plt+0x11c8>
   11b5c:	bl	108b0 <free@plt>
   11b60:	mov	r0, #0
   11b64:	str	r0, [r5]
   11b68:	ldr	r0, [r5, #4]
   11b6c:	add	r0, r0, #1
   11b70:	str	r0, [r5, #4]
   11b74:	pop	{r4, r5, fp, pc}
   11b78:	push	{r4, r5, fp, lr}
   11b7c:	add	fp, sp, #8
   11b80:	movw	r2, #8048	; 0x1f70
   11b84:	add	r5, r0, r2
   11b88:	ldr	r2, [r1, #8]
   11b8c:	ldrb	r3, [r2]
   11b90:	cmp	r3, #0
   11b94:	beq	11bcc <abort@plt+0x122c>
   11b98:	add	r4, r2, #1
   11b9c:	mov	r2, #0
   11ba0:	uxtab	r2, r2, r3
   11ba4:	ldrb	r3, [r4], #1
   11ba8:	cmp	r3, #0
   11bac:	bne	11ba0 <abort@plt+0x1200>
   11bb0:	movw	r3, #20065	; 0x4e61
   11bb4:	movt	r3, #33354	; 0x824a
   11bb8:	umull	r3, r4, r2, r3
   11bbc:	lsr	r3, r4, #8
   11bc0:	movw	r4, #503	; 0x1f7
   11bc4:	mls	r2, r3, r4, r2
   11bc8:	b	11bd0 <abort@plt+0x1230>
   11bcc:	mov	r2, #0
   11bd0:	add	r0, r0, r2, lsl #4
   11bd4:	bl	12544 <error@@Base+0x32c>
   11bd8:	ldr	r0, [r5]
   11bdc:	cmp	r0, #0
   11be0:	beq	11bf0 <abort@plt+0x1250>
   11be4:	bl	108b0 <free@plt>
   11be8:	mov	r0, #0
   11bec:	str	r0, [r5]
   11bf0:	ldr	r0, [r5, #4]
   11bf4:	sub	r0, r0, #1
   11bf8:	str	r0, [r5, #4]
   11bfc:	pop	{r4, r5, fp, pc}
   11c00:	push	{r4, r5, fp, lr}
   11c04:	add	fp, sp, #8
   11c08:	mov	r4, r0
   11c0c:	movw	r0, #8048	; 0x1f70
   11c10:	mov	r5, r4
   11c14:	ldr	r0, [r5, r0]!
   11c18:	cmp	r0, #0
   11c1c:	bne	11c84 <abort@plt+0x12e4>
   11c20:	ldr	r0, [r5, #4]
   11c24:	cmp	r0, #0
   11c28:	popeq	{r4, r5, fp, pc}
   11c2c:	mov	r1, #4
   11c30:	bl	11ce0 <abort@plt+0x1340>
   11c34:	str	r0, [r5]
   11c38:	mov	r0, #0
   11c3c:	movw	ip, #503	; 0x1f7
   11c40:	mov	r2, #0
   11c44:	ldr	r3, [r4, r2, lsl #4]
   11c48:	cmp	r3, #0
   11c4c:	bne	11c68 <abort@plt+0x12c8>
   11c50:	add	r2, r2, #1
   11c54:	cmp	r2, ip
   11c58:	beq	11c84 <abort@plt+0x12e4>
   11c5c:	ldr	r3, [r4, r2, lsl #4]
   11c60:	cmp	r3, #0
   11c64:	beq	11c50 <abort@plt+0x12b0>
   11c68:	ldr	r1, [r5]
   11c6c:	str	r3, [r1, r0, lsl #2]
   11c70:	add	r0, r0, #1
   11c74:	ldr	r3, [r3, #4]
   11c78:	cmp	r3, #0
   11c7c:	bne	11c68 <abort@plt+0x12c8>
   11c80:	b	11c50 <abort@plt+0x12b0>
   11c84:	pop	{r4, r5, fp, pc}
   11c88:	push	{r4, r5, r6, r7, fp, lr}
   11c8c:	add	fp, sp, #16
   11c90:	mov	r5, r0
   11c94:	movw	r0, #8048	; 0x1f70
   11c98:	mov	r4, r1
   11c9c:	movw	r7, #503	; 0x1f7
   11ca0:	add	r6, r5, r0
   11ca4:	mov	r0, r5
   11ca8:	mov	r1, r4
   11cac:	bl	12618 <error@@Base+0x400>
   11cb0:	subs	r7, r7, #1
   11cb4:	add	r5, r5, #16
   11cb8:	bne	11ca4 <abort@plt+0x1304>
   11cbc:	ldr	r0, [r6]
   11cc0:	cmp	r0, #0
   11cc4:	beq	11cd4 <abort@plt+0x1334>
   11cc8:	bl	108b0 <free@plt>
   11ccc:	mov	r0, #0
   11cd0:	str	r0, [r6]
   11cd4:	mov	r0, #0
   11cd8:	str	r0, [r6, #4]
   11cdc:	pop	{r4, r5, r6, r7, fp, pc}
   11ce0:	push	{fp, lr}
   11ce4:	mov	fp, sp
   11ce8:	bl	10874 <calloc@plt>
   11cec:	cmp	r0, #0
   11cf0:	popne	{fp, pc}
   11cf4:	movw	r0, #10893	; 0x2a8d
   11cf8:	movt	r0, #1
   11cfc:	bl	12218 <error@@Base>
   11d00:	push	{r4, r5, r6, sl, fp, lr}
   11d04:	add	fp, sp, #16
   11d08:	ldrb	r3, [r0]
   11d0c:	ldrb	ip, [r1]
   11d10:	mov	r2, r0
   11d14:	mov	r0, #0
   11d18:	cmp	r3, #0
   11d1c:	beq	11d5c <abort@plt+0x13bc>
   11d20:	add	r6, r2, #1
   11d24:	add	lr, r1, #1
   11d28:	mov	r2, #0
   11d2c:	uxtb	r4, ip
   11d30:	uxtb	r5, r3
   11d34:	cmp	r5, r4
   11d38:	bne	11d6c <abort@plt+0x13cc>
   11d3c:	ldrb	r3, [r6, r2]
   11d40:	ldrb	ip, [lr, r2]
   11d44:	add	r2, r2, #1
   11d48:	cmp	r3, #0
   11d4c:	bne	11d2c <abort@plt+0x138c>
   11d50:	cmp	ip, #0
   11d54:	bne	11d68 <abort@plt+0x13c8>
   11d58:	pop	{r4, r5, r6, sl, fp, pc}
   11d5c:	mov	r2, #0
   11d60:	cmp	ip, #0
   11d64:	beq	11d58 <abort@plt+0x13b8>
   11d68:	mov	r3, #0
   11d6c:	ldrb	r1, [r1, r2]
   11d70:	uxtb	r2, r3
   11d74:	mov	r0, #1
   11d78:	cmp	r2, r1
   11d7c:	mvncc	r0, #0
   11d80:	pop	{r4, r5, r6, sl, fp, pc}
   11d84:	push	{r4, r5, fp, lr}
   11d88:	add	fp, sp, #8
   11d8c:	mov	r5, r1
   11d90:	cmp	r0, #0
   11d94:	beq	11dc8 <abort@plt+0x1428>
   11d98:	mov	r1, r5
   11d9c:	mov	r4, r0
   11da0:	bl	108a4 <fopen@plt>
   11da4:	cmp	r0, #0
   11da8:	popne	{r4, r5, fp, pc}
   11dac:	ldrb	r0, [r5]
   11db0:	cmp	r0, #119	; 0x77
   11db4:	bne	11dec <abort@plt+0x144c>
   11db8:	movw	r0, #10919	; 0x2aa7
   11dbc:	mov	r1, r4
   11dc0:	movt	r0, #1
   11dc4:	bl	12258 <error@@Base+0x40>
   11dc8:	ldrb	r0, [r5]
   11dcc:	movw	r1, #12432	; 0x3090
   11dd0:	movw	r2, #12436	; 0x3094
   11dd4:	movt	r1, #2
   11dd8:	movt	r2, #2
   11ddc:	cmp	r0, #114	; 0x72
   11de0:	moveq	r2, r1
   11de4:	ldr	r0, [r2]
   11de8:	pop	{r4, r5, fp, pc}
   11dec:	movw	r0, #10941	; 0x2abd
   11df0:	mov	r1, r4
   11df4:	movt	r0, #1
   11df8:	bl	12258 <error@@Base+0x40>
   11dfc:	movw	r1, #12432	; 0x3090
   11e00:	movt	r1, #2
   11e04:	ldr	r1, [r1]
   11e08:	cmp	r1, r0
   11e0c:	bxeq	lr
   11e10:	movw	r1, #12436	; 0x3094
   11e14:	movt	r1, #2
   11e18:	ldr	r1, [r1]
   11e1c:	cmp	r1, r0
   11e20:	beq	11e28 <abort@plt+0x1488>
   11e24:	b	10970 <fclose@plt>
   11e28:	bx	lr
   11e2c:	push	{fp, lr}
   11e30:	mov	fp, sp
   11e34:	sub	sp, sp, #88	; 0x58
   11e38:	mov	r1, r0
   11e3c:	mov	r2, sp
   11e40:	mov	r0, #3
   11e44:	bl	108e0 <__xstat@plt>
   11e48:	clz	r0, r0
   11e4c:	lsr	r0, r0, #5
   11e50:	mov	sp, fp
   11e54:	pop	{fp, pc}
   11e58:	push	{r4, r5, fp, lr}
   11e5c:	add	fp, sp, #8
   11e60:	sub	sp, sp, #104	; 0x68
   11e64:	movw	r0, #12542	; 0x30fe
   11e68:	movt	r0, #2
   11e6c:	ldrh	r1, [r0]
   11e70:	add	r5, r1, #1
   11e74:	strh	r5, [r0]
   11e78:	movw	r0, #29716	; 0x7414
   11e7c:	movt	r0, #2
   11e80:	ldr	r4, [r0]
   11e84:	bl	1091c <getpid@plt>
   11e88:	movw	r1, #10982	; 0x2ae6
   11e8c:	mov	r3, r0
   11e90:	sxth	r0, r5
   11e94:	add	r5, sp, #4
   11e98:	mov	r2, r4
   11e9c:	movt	r1, #1
   11ea0:	str	r0, [sp]
   11ea4:	mov	r0, r5
   11ea8:	bl	10988 <sprintf@plt>
   11eac:	mov	r0, r5
   11eb0:	bl	108c8 <strdup@plt>
   11eb4:	mov	r4, r0
   11eb8:	bl	108d4 <unlink@plt>
   11ebc:	mov	r0, r4
   11ec0:	sub	sp, fp, #8
   11ec4:	pop	{r4, r5, fp, pc}
   11ec8:	push	{r4, sl, fp, lr}
   11ecc:	add	fp, sp, #8
   11ed0:	mov	r4, r0
   11ed4:	bl	10940 <strlen@plt>
   11ed8:	sub	r0, r0, #1
   11edc:	sxth	r0, r0
   11ee0:	cmp	r0, #0
   11ee4:	bmi	11ef4 <abort@plt+0x1554>
   11ee8:	ldrb	r1, [r4, r0]
   11eec:	cmp	r1, #47	; 0x2f
   11ef0:	bne	11ed8 <abort@plt+0x1538>
   11ef4:	add	r0, r0, r4
   11ef8:	add	r0, r0, #1
   11efc:	pop	{r4, sl, fp, pc}
   11f00:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11f04:	add	fp, sp, #28
   11f08:	sub	sp, sp, #12
   11f0c:	ldr	r4, [r1]
   11f10:	str	r0, [sp, #8]
   11f14:	mov	r7, r3
   11f18:	str	r2, [sp]
   11f1c:	str	r1, [sp, #4]
   11f20:	mov	r0, r4
   11f24:	bl	10940 <strlen@plt>
   11f28:	sub	r0, r0, #1
   11f2c:	sxth	r0, r0
   11f30:	cmp	r0, #0
   11f34:	bmi	11f44 <abort@plt+0x15a4>
   11f38:	ldrb	r1, [r4, r0]
   11f3c:	cmp	r1, #47	; 0x2f
   11f40:	bne	11f28 <abort@plt+0x1588>
   11f44:	add	r0, r0, r4
   11f48:	movw	r1, #29716	; 0x7414
   11f4c:	movw	r4, #8928	; 0x22e0
   11f50:	movt	r1, #2
   11f54:	movt	r4, #1
   11f58:	add	r0, r0, #1
   11f5c:	str	r0, [r1]
   11f60:	mov	r0, #2
   11f64:	mov	r1, r4
   11f68:	bl	10904 <__sysv_signal@plt>
   11f6c:	mov	r0, #15
   11f70:	mov	r1, r4
   11f74:	bl	10904 <__sysv_signal@plt>
   11f78:	ldr	r0, [sp, #8]
   11f7c:	ldr	r6, [r0]
   11f80:	cmp	r6, #1
   11f84:	bne	11f9c <abort@plt+0x15fc>
   11f88:	movw	r0, #12416	; 0x3080
   11f8c:	movt	r0, #2
   11f90:	ldrb	r0, [r0]
   11f94:	cmp	r0, #0
   11f98:	bne	1219c <abort@plt+0x17fc>
   11f9c:	ldr	ip, [sp, #4]
   11fa0:	mov	r8, #0
   11fa4:	cmp	r6, #2
   11fa8:	blt	121a4 <abort@plt+0x1804>
   11fac:	cmp	r7, #0
   11fb0:	beq	12124 <abort@plt+0x1784>
   11fb4:	mov	r8, #0
   11fb8:	mov	r5, #1
   11fbc:	mov	r9, #1
   11fc0:	ldr	r4, [ip, r5, lsl #2]
   11fc4:	ldrb	r0, [r4]
   11fc8:	cmp	r0, #45	; 0x2d
   11fcc:	beq	11ffc <abort@plt+0x165c>
   11fd0:	sxth	r0, r8
   11fd4:	add	r8, r8, #1
   11fd8:	str	r4, [ip, r0, lsl #2]
   11fdc:	add	r9, r9, #1
   11fe0:	sxth	r5, r9
   11fe4:	cmp	r6, r5
   11fe8:	ble	121a4 <abort@plt+0x1804>
   11fec:	ldr	r4, [ip, r5, lsl #2]
   11ff0:	ldrb	r0, [r4]
   11ff4:	cmp	r0, #45	; 0x2d
   11ff8:	bne	11fd0 <abort@plt+0x1630>
   11ffc:	ldrb	sl, [r4, #1]
   12000:	cmp	sl, #0
   12004:	beq	11fd0 <abort@plt+0x1630>
   12008:	mov	r0, r4
   1200c:	bl	10940 <strlen@plt>
   12010:	mov	r2, r0
   12014:	movw	r0, #11011	; 0x2b03
   12018:	mov	r1, r4
   1201c:	movt	r0, #1
   12020:	bl	10994 <strncmp@plt>
   12024:	cmp	r0, #0
   12028:	beq	1219c <abort@plt+0x17fc>
   1202c:	ldr	ip, [sp, #4]
   12030:	add	r1, r5, #1
   12034:	ldrb	r2, [r7]
   12038:	mov	r0, #0
   1203c:	cmp	r1, r6
   12040:	ldrlt	r0, [ip, r1, lsl #2]
   12044:	cmp	r2, #0
   12048:	beq	121b8 <abort@plt+0x1818>
   1204c:	mov	r1, #0
   12050:	cmp	sl, r2
   12054:	beq	1207c <abort@plt+0x16dc>
   12058:	mov	r2, #1
   1205c:	sxth	r1, r2
   12060:	add	r3, r1, r1, lsl #1
   12064:	ldrb	r3, [r7, r3, lsl #2]
   12068:	cmp	r3, #0
   1206c:	beq	121b8 <abort@plt+0x1818>
   12070:	add	r2, r2, #1
   12074:	cmp	sl, r3
   12078:	bne	1205c <abort@plt+0x16bc>
   1207c:	add	r1, r1, r1, lsl #1
   12080:	add	r3, r7, r1, lsl #2
   12084:	ldr	r1, [r3, #4]
   12088:	cmp	r1, #0
   1208c:	beq	120dc <abort@plt+0x173c>
   12090:	mov	r2, r4
   12094:	cmp	r0, #0
   12098:	ldrb	r5, [r2, #2]!
   1209c:	cmpeq	r5, #0
   120a0:	beq	120dc <abort@plt+0x173c>
   120a4:	ldr	r3, [r1]
   120a8:	cmp	r3, #0
   120ac:	bne	121c8 <abort@plt+0x1828>
   120b0:	cmp	r5, #0
   120b4:	movne	r0, r2
   120b8:	str	r0, [r1]
   120bc:	ldrb	r0, [r2]
   120c0:	cmp	r0, #0
   120c4:	addeq	r9, r9, #1
   120c8:	add	r9, r9, #1
   120cc:	sxth	r5, r9
   120d0:	cmp	r6, r5
   120d4:	bgt	11fec <abort@plt+0x164c>
   120d8:	b	121a4 <abort@plt+0x1804>
   120dc:	ldr	r0, [r3, #8]
   120e0:	cmp	r0, #0
   120e4:	beq	121b8 <abort@plt+0x1818>
   120e8:	ldrb	r1, [r4, #2]
   120ec:	cmp	r1, #0
   120f0:	bne	121b8 <abort@plt+0x1818>
   120f4:	ldrb	r1, [r0]
   120f8:	cmp	r1, #0
   120fc:	bne	121c8 <abort@plt+0x1828>
   12100:	mov	r1, #1
   12104:	strb	r1, [r0]
   12108:	ldr	r0, [sp, #8]
   1210c:	ldr	r6, [r0]
   12110:	add	r9, r9, #1
   12114:	sxth	r5, r9
   12118:	cmp	r6, r5
   1211c:	bgt	11fec <abort@plt+0x164c>
   12120:	b	121a4 <abort@plt+0x1804>
   12124:	mov	r1, #1
   12128:	mov	r8, #0
   1212c:	mov	r0, #1
   12130:	ldr	r4, [ip, r1, lsl #2]
   12134:	ldrb	r1, [r4]
   12138:	cmp	r1, #45	; 0x2d
   1213c:	beq	1216c <abort@plt+0x17cc>
   12140:	sxth	r1, r8
   12144:	add	r0, r0, #1
   12148:	add	r8, r8, #1
   1214c:	str	r4, [ip, r1, lsl #2]
   12150:	sxth	r1, r0
   12154:	cmp	r6, r1
   12158:	ble	121a4 <abort@plt+0x1804>
   1215c:	ldr	r4, [ip, r1, lsl #2]
   12160:	ldrb	r1, [r4]
   12164:	cmp	r1, #45	; 0x2d
   12168:	bne	12140 <abort@plt+0x17a0>
   1216c:	ldrb	r1, [r4, #1]
   12170:	cmp	r1, #0
   12174:	beq	12140 <abort@plt+0x17a0>
   12178:	mov	r0, r4
   1217c:	bl	10940 <strlen@plt>
   12180:	mov	r2, r0
   12184:	movw	r0, #11011	; 0x2b03
   12188:	mov	r1, r4
   1218c:	movt	r0, #1
   12190:	bl	10994 <strncmp@plt>
   12194:	cmp	r0, #0
   12198:	bne	121b8 <abort@plt+0x1818>
   1219c:	ldr	r0, [sp]
   121a0:	bl	12310 <error@@Base+0xf8>
   121a4:	ldr	r1, [sp, #8]
   121a8:	sxth	r0, r8
   121ac:	str	r0, [r1]
   121b0:	sub	sp, fp, #28
   121b4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   121b8:	movw	r0, #11032	; 0x2b18
   121bc:	mov	r1, r4
   121c0:	movt	r0, #1
   121c4:	bl	12258 <error@@Base+0x40>
   121c8:	movw	r0, #11047	; 0x2b27
   121cc:	mov	r1, r4
   121d0:	movt	r0, #1
   121d4:	bl	12258 <error@@Base+0x40>
   121d8:	push	{fp, lr}
   121dc:	mov	fp, sp
   121e0:	mov	r0, #0
   121e4:	bl	121e8 <abort@plt+0x1848>
   121e8:	push	{fp, lr}
   121ec:	mov	fp, sp
   121f0:	mov	r4, r0
   121f4:	movw	r0, #29720	; 0x7418
   121f8:	movt	r0, #2
   121fc:	ldr	r0, [r0]
   12200:	cmp	r0, #0
   12204:	beq	1220c <abort@plt+0x186c>
   12208:	blx	r0
   1220c:	bl	12360 <error@@Base+0x148>
   12210:	mov	r0, r4
   12214:	bl	10928 <exit@plt>

00012218 <error@@Base>:
   12218:	push	{fp, lr}
   1221c:	mov	fp, sp
   12220:	mov	r3, r0
   12224:	movw	r0, #29716	; 0x7414
   12228:	movw	r1, #10961	; 0x2ad1
   1222c:	movt	r0, #2
   12230:	movt	r1, #1
   12234:	ldr	r2, [r0]
   12238:	movw	r0, #12424	; 0x3088
   1223c:	movt	r0, #2
   12240:	ldr	r0, [r0]
   12244:	bl	1094c <fprintf@plt>
   12248:	movw	r0, #12420	; 0x3084
   1224c:	movt	r0, #2
   12250:	ldr	r0, [r0]
   12254:	bl	121e8 <abort@plt+0x1848>
   12258:	push	{fp, lr}
   1225c:	mov	fp, sp
   12260:	sub	sp, sp, #8
   12264:	mov	r3, r0
   12268:	movw	r0, #29716	; 0x7414
   1226c:	str	r1, [sp]
   12270:	movw	r1, #10969	; 0x2ad9
   12274:	movt	r0, #2
   12278:	movt	r1, #1
   1227c:	ldr	r2, [r0]
   12280:	movw	r0, #12424	; 0x3088
   12284:	movt	r0, #2
   12288:	ldr	r0, [r0]
   1228c:	bl	1094c <fprintf@plt>
   12290:	movw	r0, #12420	; 0x3084
   12294:	movt	r0, #2
   12298:	ldr	r0, [r0]
   1229c:	bl	121e8 <abort@plt+0x1848>
   122a0:	push	{fp, lr}
   122a4:	mov	fp, sp
   122a8:	sub	sp, sp, #8
   122ac:	mov	r3, r0
   122b0:	movw	r0, #29716	; 0x7414
   122b4:	str	r1, [sp]
   122b8:	movw	r1, #10969	; 0x2ad9
   122bc:	movt	r0, #2
   122c0:	movt	r1, #1
   122c4:	ldr	r2, [r0]
   122c8:	movw	r0, #12424	; 0x3088
   122cc:	movt	r0, #2
   122d0:	ldr	r0, [r0]
   122d4:	bl	1094c <fprintf@plt>
   122d8:	mov	sp, fp
   122dc:	pop	{fp, pc}
   122e0:	push	{fp, lr}
   122e4:	mov	fp, sp
   122e8:	movw	r0, #12544	; 0x3100
   122ec:	movt	r0, #2
   122f0:	ldrb	r1, [r0]
   122f4:	cmp	r1, #1
   122f8:	popeq	{fp, pc}
   122fc:	mov	r1, #1
   12300:	strb	r1, [r0]
   12304:	movw	r0, #10996	; 0x2af4
   12308:	movt	r0, #1
   1230c:	bl	12218 <error@@Base>
   12310:	push	{fp, lr}
   12314:	mov	fp, sp
   12318:	mov	r3, r0
   1231c:	movw	r0, #29712	; 0x7410
   12320:	movt	r0, #2
   12324:	ldr	r0, [r0]
   12328:	cmp	r0, #0
   1232c:	bne	12358 <error@@Base+0x140>
   12330:	movw	r0, #29716	; 0x7414
   12334:	movw	r1, #11017	; 0x2b09
   12338:	movt	r0, #2
   1233c:	movt	r1, #1
   12340:	ldr	r2, [r0]
   12344:	movw	r0, #12424	; 0x3088
   12348:	movt	r0, #2
   1234c:	ldr	r0, [r0]
   12350:	bl	1094c <fprintf@plt>
   12354:	bl	121d8 <abort@plt+0x1838>
   12358:	blx	r0
   1235c:	bl	121d8 <abort@plt+0x1838>
   12360:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   12364:	add	fp, sp, #24
   12368:	sub	sp, sp, #104	; 0x68
   1236c:	movw	r8, #12542	; 0x30fe
   12370:	movt	r8, #2
   12374:	ldrsh	r0, [r8]
   12378:	cmp	r0, #1
   1237c:	blt	123e8 <error@@Base+0x1d0>
   12380:	movw	r9, #29716	; 0x7414
   12384:	movw	r5, #10982	; 0x2ae6
   12388:	mov	r7, #1
   1238c:	add	r4, sp, #4
   12390:	movt	r9, #2
   12394:	movt	r5, #1
   12398:	ldr	r6, [r9]
   1239c:	bl	1091c <getpid@plt>
   123a0:	mov	r3, r0
   123a4:	sxth	r0, r7
   123a8:	mov	r1, r5
   123ac:	mov	r2, r6
   123b0:	str	r0, [sp]
   123b4:	mov	r0, r4
   123b8:	bl	10988 <sprintf@plt>
   123bc:	mov	r0, r4
   123c0:	bl	108c8 <strdup@plt>
   123c4:	mov	r6, r0
   123c8:	bl	108d4 <unlink@plt>
   123cc:	mov	r0, r6
   123d0:	bl	108b0 <free@plt>
   123d4:	add	r0, r7, #1
   123d8:	sxth	r7, r0
   123dc:	ldrsh	r0, [r8]
   123e0:	cmp	r7, r0
   123e4:	ble	12398 <error@@Base+0x180>
   123e8:	sub	sp, fp, #24
   123ec:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   123f0:	vmov.i32	q8, #0	; 0x00000000
   123f4:	vst1.32	{d16-d17}, [r0]
   123f8:	bx	lr
   123fc:	push	{r4, r5, fp, lr}
   12400:	add	fp, sp, #8
   12404:	mov	r4, r0
   12408:	ldr	r0, [r0]
   1240c:	mov	r5, #0
   12410:	str	r5, [r1]
   12414:	cmp	r0, #0
   12418:	str	r0, [r1, #4]
   1241c:	str	r1, [r4]
   12420:	addeq	r0, r4, #4
   12424:	str	r1, [r0]
   12428:	ldr	r0, [r4, #8]
   1242c:	cmp	r0, #0
   12430:	beq	1243c <error@@Base+0x224>
   12434:	bl	108b0 <free@plt>
   12438:	str	r5, [r4, #8]
   1243c:	ldr	r0, [r4, #12]
   12440:	add	r0, r0, #1
   12444:	str	r0, [r4, #12]
   12448:	pop	{r4, r5, fp, pc}
   1244c:	push	{r4, r5, fp, lr}
   12450:	add	fp, sp, #8
   12454:	mov	r4, r0
   12458:	ldr	r0, [r0, #4]
   1245c:	mov	r5, #0
   12460:	mov	r2, r4
   12464:	cmp	r0, #0
   12468:	stm	r1, {r0, r5}
   1246c:	addne	r2, r0, #4
   12470:	str	r1, [r2]
   12474:	str	r1, [r4, #4]
   12478:	ldr	r0, [r4, #8]
   1247c:	cmp	r0, #0
   12480:	beq	1248c <error@@Base+0x274>
   12484:	bl	108b0 <free@plt>
   12488:	str	r5, [r4, #8]
   1248c:	ldr	r0, [r4, #12]
   12490:	add	r0, r0, #1
   12494:	str	r0, [r4, #12]
   12498:	pop	{r4, r5, fp, pc}
   1249c:	push	{r4, sl, fp, lr}
   124a0:	add	fp, sp, #8
   124a4:	mov	r4, r0
   124a8:	ldr	r0, [r2]
   124ac:	mov	r3, r4
   124b0:	cmp	r0, #0
   124b4:	stm	r1, {r0, r2}
   124b8:	addne	r3, r0, #4
   124bc:	str	r1, [r3]
   124c0:	str	r1, [r2]
   124c4:	ldr	r0, [r4, #8]
   124c8:	cmp	r0, #0
   124cc:	beq	124dc <error@@Base+0x2c4>
   124d0:	bl	108b0 <free@plt>
   124d4:	mov	r0, #0
   124d8:	str	r0, [r4, #8]
   124dc:	ldr	r0, [r4, #12]
   124e0:	add	r0, r0, #1
   124e4:	str	r0, [r4, #12]
   124e8:	pop	{r4, sl, fp, pc}
   124ec:	push	{r4, sl, fp, lr}
   124f0:	add	fp, sp, #8
   124f4:	mov	r4, r0
   124f8:	mov	r0, r1
   124fc:	cmp	r1, #0
   12500:	ldr	r3, [r0, #4]!
   12504:	moveq	r0, r4
   12508:	stm	r2, {r1, r3}
   1250c:	str	r2, [r0]
   12510:	cmp	r3, #0
   12514:	addeq	r3, r4, #4
   12518:	str	r2, [r3]
   1251c:	ldr	r0, [r4, #8]
   12520:	cmp	r0, #0
   12524:	beq	12534 <error@@Base+0x31c>
   12528:	bl	108b0 <free@plt>
   1252c:	mov	r0, #0
   12530:	str	r0, [r4, #8]
   12534:	ldr	r0, [r4, #12]
   12538:	add	r0, r0, #1
   1253c:	str	r0, [r4, #12]
   12540:	pop	{r4, sl, fp, pc}
   12544:	push	{r4, r5, fp, lr}
   12548:	add	fp, sp, #8
   1254c:	mov	r4, r0
   12550:	ldm	r1, {r0, r2}
   12554:	cmp	r0, #0
   12558:	beq	12568 <error@@Base+0x350>
   1255c:	str	r2, [r0, #4]
   12560:	ldr	r2, [r1, #4]
   12564:	b	1256c <error@@Base+0x354>
   12568:	str	r2, [r4]
   1256c:	cmp	r2, #0
   12570:	mov	r5, #0
   12574:	addeq	r2, r4, #4
   12578:	str	r0, [r2]
   1257c:	str	r5, [r1]
   12580:	str	r5, [r1, #4]
   12584:	ldr	r0, [r4, #8]
   12588:	cmp	r0, #0
   1258c:	beq	12598 <error@@Base+0x380>
   12590:	bl	108b0 <free@plt>
   12594:	str	r5, [r4, #8]
   12598:	ldr	r0, [r4, #12]
   1259c:	sub	r0, r0, #1
   125a0:	str	r0, [r4, #12]
   125a4:	pop	{r4, r5, fp, pc}
   125a8:	push	{r4, sl, fp, lr}
   125ac:	add	fp, sp, #8
   125b0:	mov	r4, r0
   125b4:	ldr	r0, [r0, #8]
   125b8:	cmp	r0, #0
   125bc:	beq	125c4 <error@@Base+0x3ac>
   125c0:	pop	{r4, sl, fp, pc}
   125c4:	ldr	r0, [r4, #12]
   125c8:	cmp	r0, #0
   125cc:	beq	125c0 <error@@Base+0x3a8>
   125d0:	mov	r1, #4
   125d4:	bl	11ce0 <abort@plt+0x1340>
   125d8:	str	r0, [r4, #8]
   125dc:	ldr	r1, [r4]
   125e0:	cmp	r1, #0
   125e4:	beq	125c0 <error@@Base+0x3a8>
   125e8:	str	r1, [r0]
   125ec:	ldr	r0, [r1, #4]
   125f0:	cmp	r0, #0
   125f4:	popeq	{r4, sl, fp, pc}
   125f8:	mov	r1, #4
   125fc:	ldr	r2, [r4, #8]
   12600:	str	r0, [r2, r1]
   12604:	add	r1, r1, #4
   12608:	ldr	r0, [r0, #4]
   1260c:	cmp	r0, #0
   12610:	bne	125fc <error@@Base+0x3e4>
   12614:	b	125c0 <error@@Base+0x3a8>
   12618:	push	{r4, r5, r6, r7, fp, lr}
   1261c:	add	fp, sp, #16
   12620:	ldr	r6, [r0]
   12624:	cmp	r6, #0
   12628:	beq	126b0 <error@@Base+0x498>
   1262c:	mov	r4, r1
   12630:	mov	r5, r0
   12634:	mov	r7, #0
   12638:	ldm	r6, {r0, r1}
   1263c:	cmp	r0, #0
   12640:	bne	12674 <error@@Base+0x45c>
   12644:	b	12680 <error@@Base+0x468>
   12648:	ldr	r0, [r5, #12]
   1264c:	sub	r0, r0, #1
   12650:	str	r0, [r5, #12]
   12654:	mov	r0, r6
   12658:	blx	r4
   1265c:	ldr	r6, [r5]
   12660:	cmp	r6, #0
   12664:	beq	126b0 <error@@Base+0x498>
   12668:	ldm	r6, {r0, r1}
   1266c:	cmp	r0, #0
   12670:	beq	12680 <error@@Base+0x468>
   12674:	str	r1, [r0, #4]
   12678:	ldr	r1, [r6, #4]
   1267c:	b	12684 <error@@Base+0x46c>
   12680:	str	r1, [r5]
   12684:	cmp	r1, #0
   12688:	addeq	r1, r5, #4
   1268c:	str	r0, [r1]
   12690:	str	r7, [r6]
   12694:	str	r7, [r6, #4]
   12698:	ldr	r0, [r5, #8]
   1269c:	cmp	r0, #0
   126a0:	beq	12648 <error@@Base+0x430>
   126a4:	bl	108b0 <free@plt>
   126a8:	str	r7, [r5, #8]
   126ac:	b	12648 <error@@Base+0x430>
   126b0:	pop	{r4, r5, r6, r7, fp, pc}
   126b4:	cmp	r0, #2
   126b8:	bxlt	lr
   126bc:	movw	r3, #12548	; 0x3104
   126c0:	movt	r3, #2
   126c4:	stm	r3, {r1, r2}
   126c8:	sub	r1, r0, #1
   126cc:	mov	r0, #0
   126d0:	b	126d4 <error@@Base+0x4bc>
   126d4:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   126d8:	add	fp, sp, #24
   126dc:	movw	r7, #12548	; 0x3104
   126e0:	mov	r8, r1
   126e4:	mov	r9, r0
   126e8:	movt	r7, #2
   126ec:	b	12718 <error@@Base+0x500>
   126f0:	mov	r4, r5
   126f4:	ldr	r0, [r7]
   126f8:	sub	r1, r5, #1
   126fc:	str	r6, [r0, r5, lsl #2]
   12700:	cmp	r1, r9
   12704:	movgt	r0, r9
   12708:	blgt	126d4 <error@@Base+0x4bc>
   1270c:	add	r9, r4, #1
   12710:	cmp	r9, r8
   12714:	bge	127e8 <error@@Base+0x5d0>
   12718:	ldr	r0, [r7]
   1271c:	cmp	r9, r8
   12720:	mov	r5, r8
   12724:	mov	r4, r9
   12728:	ldr	r6, [r0, r9, lsl #2]
   1272c:	bge	126f8 <error@@Base+0x4e0>
   12730:	mov	r4, r9
   12734:	mov	r5, r8
   12738:	cmp	r4, r5
   1273c:	blt	12754 <error@@Base+0x53c>
   12740:	b	12778 <error@@Base+0x560>
   12744:	cmp	r4, r5
   12748:	bge	126f4 <error@@Base+0x4dc>
   1274c:	cmp	r4, r5
   12750:	bge	12778 <error@@Base+0x560>
   12754:	ldm	r7, {r0, r2}
   12758:	ldr	r1, [r0, r5, lsl #2]
   1275c:	mov	r0, r6
   12760:	blx	r2
   12764:	cmn	r0, #1
   12768:	bgt	12778 <error@@Base+0x560>
   1276c:	sub	r5, r5, #1
   12770:	cmp	r4, r5
   12774:	blt	12754 <error@@Base+0x53c>
   12778:	cmp	r4, r5
   1277c:	bne	1278c <error@@Base+0x574>
   12780:	cmp	r4, r5
   12784:	blt	127a4 <error@@Base+0x58c>
   12788:	b	127cc <error@@Base+0x5b4>
   1278c:	ldr	r0, [r7]
   12790:	ldr	r1, [r0, r5, lsl #2]
   12794:	str	r1, [r0, r4, lsl #2]
   12798:	add	r4, r4, #1
   1279c:	cmp	r4, r5
   127a0:	bge	127cc <error@@Base+0x5b4>
   127a4:	ldm	r7, {r0, r2}
   127a8:	ldr	r1, [r0, r4, lsl #2]
   127ac:	mov	r0, r6
   127b0:	blx	r2
   127b4:	cmp	r0, #1
   127b8:	blt	127cc <error@@Base+0x5b4>
   127bc:	add	r4, r4, #1
   127c0:	cmp	r5, r4
   127c4:	bne	127a4 <error@@Base+0x58c>
   127c8:	b	126f0 <error@@Base+0x4d8>
   127cc:	cmp	r4, r5
   127d0:	beq	12744 <error@@Base+0x52c>
   127d4:	ldr	r0, [r7]
   127d8:	ldr	r1, [r0, r4, lsl #2]
   127dc:	str	r1, [r0, r5, lsl #2]
   127e0:	sub	r5, r5, #1
   127e4:	b	12744 <error@@Base+0x52c>
   127e8:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   127ec:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   127f0:	mov	r7, r0
   127f4:	ldr	r6, [pc, #72]	; 12844 <error@@Base+0x62c>
   127f8:	ldr	r5, [pc, #72]	; 12848 <error@@Base+0x630>
   127fc:	add	r6, pc, r6
   12800:	add	r5, pc, r5
   12804:	sub	r6, r6, r5
   12808:	mov	r8, r1
   1280c:	mov	r9, r2
   12810:	bl	10854 <calloc@plt-0x20>
   12814:	asrs	r6, r6, #2
   12818:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1281c:	mov	r4, #0
   12820:	add	r4, r4, #1
   12824:	ldr	r3, [r5], #4
   12828:	mov	r2, r9
   1282c:	mov	r1, r8
   12830:	mov	r0, r7
   12834:	blx	r3
   12838:	cmp	r6, r4
   1283c:	bne	12820 <error@@Base+0x608>
   12840:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12844:	strdeq	r0, [r1], -r8
   12848:	strdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   1284c:	bx	lr

Disassembly of section .fini:

00012850 <.fini>:
   12850:	push	{r3, lr}
   12854:	pop	{r3, pc}
