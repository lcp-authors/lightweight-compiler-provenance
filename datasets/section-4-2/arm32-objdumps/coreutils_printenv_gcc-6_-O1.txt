
../repos/coreutils/src/printenv:     file format elf32-littlearm


Disassembly of section .init:

00010b28 <.init>:
   10b28:	push	{r3, lr}
   10b2c:	bl	10d94 <abort@plt+0x48>
   10b30:	pop	{r3, pc}

Disassembly of section .plt:

00010b34 <calloc@plt-0x14>:
   10b34:	push	{lr}		; (str lr, [sp, #-4]!)
   10b38:	ldr	lr, [pc, #4]	; 10b44 <calloc@plt-0x4>
   10b3c:	add	lr, pc, lr
   10b40:	ldr	pc, [lr, #8]!
   10b44:			; <UNDEFINED> instruction: 0x000154bc

00010b48 <calloc@plt>:
   10b48:	add	ip, pc, #0, 12
   10b4c:	add	ip, ip, #86016	; 0x15000
   10b50:	ldr	pc, [ip, #1212]!	; 0x4bc

00010b54 <fputs_unlocked@plt>:
   10b54:	add	ip, pc, #0, 12
   10b58:	add	ip, ip, #86016	; 0x15000
   10b5c:	ldr	pc, [ip, #1204]!	; 0x4b4

00010b60 <raise@plt>:
   10b60:	add	ip, pc, #0, 12
   10b64:	add	ip, ip, #86016	; 0x15000
   10b68:	ldr	pc, [ip, #1196]!	; 0x4ac

00010b6c <strcmp@plt>:
   10b6c:	add	ip, pc, #0, 12
   10b70:	add	ip, ip, #86016	; 0x15000
   10b74:	ldr	pc, [ip, #1188]!	; 0x4a4

00010b78 <fflush@plt>:
   10b78:	add	ip, pc, #0, 12
   10b7c:	add	ip, ip, #86016	; 0x15000
   10b80:	ldr	pc, [ip, #1180]!	; 0x49c

00010b84 <free@plt>:
   10b84:	add	ip, pc, #0, 12
   10b88:	add	ip, ip, #86016	; 0x15000
   10b8c:	ldr	pc, [ip, #1172]!	; 0x494

00010b90 <_exit@plt>:
   10b90:	add	ip, pc, #0, 12
   10b94:	add	ip, ip, #86016	; 0x15000
   10b98:	ldr	pc, [ip, #1164]!	; 0x48c

00010b9c <memcpy@plt>:
   10b9c:	add	ip, pc, #0, 12
   10ba0:	add	ip, ip, #86016	; 0x15000
   10ba4:	ldr	pc, [ip, #1156]!	; 0x484

00010ba8 <mbsinit@plt>:
   10ba8:	add	ip, pc, #0, 12
   10bac:	add	ip, ip, #86016	; 0x15000
   10bb0:	ldr	pc, [ip, #1148]!	; 0x47c

00010bb4 <memcmp@plt>:
   10bb4:	add	ip, pc, #0, 12
   10bb8:	add	ip, ip, #86016	; 0x15000
   10bbc:	ldr	pc, [ip, #1140]!	; 0x474

00010bc0 <fputc_unlocked@plt>:
   10bc0:	add	ip, pc, #0, 12
   10bc4:	add	ip, ip, #86016	; 0x15000
   10bc8:	ldr	pc, [ip, #1132]!	; 0x46c

00010bcc <dcgettext@plt>:
   10bcc:	add	ip, pc, #0, 12
   10bd0:	add	ip, ip, #86016	; 0x15000
   10bd4:	ldr	pc, [ip, #1124]!	; 0x464

00010bd8 <realloc@plt>:
   10bd8:	add	ip, pc, #0, 12
   10bdc:	add	ip, ip, #86016	; 0x15000
   10be0:	ldr	pc, [ip, #1116]!	; 0x45c

00010be4 <textdomain@plt>:
   10be4:	add	ip, pc, #0, 12
   10be8:	add	ip, ip, #86016	; 0x15000
   10bec:	ldr	pc, [ip, #1108]!	; 0x454

00010bf0 <iswprint@plt>:
   10bf0:	add	ip, pc, #0, 12
   10bf4:	add	ip, ip, #86016	; 0x15000
   10bf8:	ldr	pc, [ip, #1100]!	; 0x44c

00010bfc <fwrite@plt>:
   10bfc:	add	ip, pc, #0, 12
   10c00:	add	ip, ip, #86016	; 0x15000
   10c04:	ldr	pc, [ip, #1092]!	; 0x444

00010c08 <lseek64@plt>:
   10c08:	add	ip, pc, #0, 12
   10c0c:	add	ip, ip, #86016	; 0x15000
   10c10:	ldr	pc, [ip, #1084]!	; 0x43c

00010c14 <__ctype_get_mb_cur_max@plt>:
   10c14:	add	ip, pc, #0, 12
   10c18:	add	ip, ip, #86016	; 0x15000
   10c1c:	ldr	pc, [ip, #1076]!	; 0x434

00010c20 <__fpending@plt>:
   10c20:	add	ip, pc, #0, 12
   10c24:	add	ip, ip, #86016	; 0x15000
   10c28:	ldr	pc, [ip, #1068]!	; 0x42c

00010c2c <mbrtowc@plt>:
   10c2c:	add	ip, pc, #0, 12
   10c30:	add	ip, ip, #86016	; 0x15000
   10c34:	ldr	pc, [ip, #1060]!	; 0x424

00010c38 <error@plt>:
   10c38:	add	ip, pc, #0, 12
   10c3c:	add	ip, ip, #86016	; 0x15000
   10c40:	ldr	pc, [ip, #1052]!	; 0x41c

00010c44 <malloc@plt>:
   10c44:	add	ip, pc, #0, 12
   10c48:	add	ip, ip, #86016	; 0x15000
   10c4c:	ldr	pc, [ip, #1044]!	; 0x414

00010c50 <__libc_start_main@plt>:
   10c50:	add	ip, pc, #0, 12
   10c54:	add	ip, ip, #86016	; 0x15000
   10c58:	ldr	pc, [ip, #1036]!	; 0x40c

00010c5c <__freading@plt>:
   10c5c:	add	ip, pc, #0, 12
   10c60:	add	ip, ip, #86016	; 0x15000
   10c64:	ldr	pc, [ip, #1028]!	; 0x404

00010c68 <__gmon_start__@plt>:
   10c68:	add	ip, pc, #0, 12
   10c6c:	add	ip, ip, #86016	; 0x15000
   10c70:	ldr	pc, [ip, #1020]!	; 0x3fc

00010c74 <getopt_long@plt>:
   10c74:	add	ip, pc, #0, 12
   10c78:	add	ip, ip, #86016	; 0x15000
   10c7c:	ldr	pc, [ip, #1012]!	; 0x3f4

00010c80 <__ctype_b_loc@plt>:
   10c80:	add	ip, pc, #0, 12
   10c84:	add	ip, ip, #86016	; 0x15000
   10c88:	ldr	pc, [ip, #1004]!	; 0x3ec

00010c8c <exit@plt>:
   10c8c:	add	ip, pc, #0, 12
   10c90:	add	ip, ip, #86016	; 0x15000
   10c94:	ldr	pc, [ip, #996]!	; 0x3e4

00010c98 <strlen@plt>:
   10c98:	add	ip, pc, #0, 12
   10c9c:	add	ip, ip, #86016	; 0x15000
   10ca0:	ldr	pc, [ip, #988]!	; 0x3dc

00010ca4 <strchr@plt>:
   10ca4:	add	ip, pc, #0, 12
   10ca8:	add	ip, ip, #86016	; 0x15000
   10cac:	ldr	pc, [ip, #980]!	; 0x3d4

00010cb0 <__errno_location@plt>:
   10cb0:	add	ip, pc, #0, 12
   10cb4:	add	ip, ip, #86016	; 0x15000
   10cb8:	ldr	pc, [ip, #972]!	; 0x3cc

00010cbc <__cxa_atexit@plt>:
   10cbc:	add	ip, pc, #0, 12
   10cc0:	add	ip, ip, #86016	; 0x15000
   10cc4:	ldr	pc, [ip, #964]!	; 0x3c4

00010cc8 <memset@plt>:
   10cc8:	add	ip, pc, #0, 12
   10ccc:	add	ip, ip, #86016	; 0x15000
   10cd0:	ldr	pc, [ip, #956]!	; 0x3bc

00010cd4 <__printf_chk@plt>:
   10cd4:	add	ip, pc, #0, 12
   10cd8:	add	ip, ip, #86016	; 0x15000
   10cdc:	ldr	pc, [ip, #948]!	; 0x3b4

00010ce0 <fileno@plt>:
   10ce0:	add	ip, pc, #0, 12
   10ce4:	add	ip, ip, #86016	; 0x15000
   10ce8:	ldr	pc, [ip, #940]!	; 0x3ac

00010cec <__fprintf_chk@plt>:
   10cec:	add	ip, pc, #0, 12
   10cf0:	add	ip, ip, #86016	; 0x15000
   10cf4:	ldr	pc, [ip, #932]!	; 0x3a4

00010cf8 <fclose@plt>:
   10cf8:	add	ip, pc, #0, 12
   10cfc:	add	ip, ip, #86016	; 0x15000
   10d00:	ldr	pc, [ip, #924]!	; 0x39c

00010d04 <fseeko64@plt>:
   10d04:	add	ip, pc, #0, 12
   10d08:	add	ip, ip, #86016	; 0x15000
   10d0c:	ldr	pc, [ip, #916]!	; 0x394

00010d10 <setlocale@plt>:
   10d10:	add	ip, pc, #0, 12
   10d14:	add	ip, ip, #86016	; 0x15000
   10d18:	ldr	pc, [ip, #908]!	; 0x38c

00010d1c <strrchr@plt>:
   10d1c:	add	ip, pc, #0, 12
   10d20:	add	ip, ip, #86016	; 0x15000
   10d24:	ldr	pc, [ip, #900]!	; 0x384

00010d28 <nl_langinfo@plt>:
   10d28:	add	ip, pc, #0, 12
   10d2c:	add	ip, ip, #86016	; 0x15000
   10d30:	ldr	pc, [ip, #892]!	; 0x37c

00010d34 <bindtextdomain@plt>:
   10d34:	add	ip, pc, #0, 12
   10d38:	add	ip, ip, #86016	; 0x15000
   10d3c:	ldr	pc, [ip, #884]!	; 0x374

00010d40 <strncmp@plt>:
   10d40:	add	ip, pc, #0, 12
   10d44:	add	ip, ip, #86016	; 0x15000
   10d48:	ldr	pc, [ip, #876]!	; 0x36c

00010d4c <abort@plt>:
   10d4c:	add	ip, pc, #0, 12
   10d50:	add	ip, ip, #86016	; 0x15000
   10d54:	ldr	pc, [ip, #868]!	; 0x364

Disassembly of section .text:

00010d58 <.text>:
   10d58:	mov	fp, #0
   10d5c:	mov	lr, #0
   10d60:	pop	{r1}		; (ldr r1, [sp], #4)
   10d64:	mov	r2, sp
   10d68:	push	{r2}		; (str r2, [sp, #-4]!)
   10d6c:	push	{r0}		; (str r0, [sp, #-4]!)
   10d70:	ldr	ip, [pc, #16]	; 10d88 <abort@plt+0x3c>
   10d74:	push	{ip}		; (str ip, [sp, #-4]!)
   10d78:	ldr	r0, [pc, #12]	; 10d8c <abort@plt+0x40>
   10d7c:	ldr	r3, [pc, #12]	; 10d90 <abort@plt+0x44>
   10d80:	bl	10c50 <__libc_start_main@plt>
   10d84:	bl	10d4c <abort@plt>
   10d88:	andeq	r4, r1, r4, ror #11
   10d8c:			; <UNDEFINED> instruction: 0x000111b0
   10d90:	andeq	r4, r1, r4, lsl #11
   10d94:	ldr	r3, [pc, #20]	; 10db0 <abort@plt+0x64>
   10d98:	ldr	r2, [pc, #20]	; 10db4 <abort@plt+0x68>
   10d9c:	add	r3, pc, r3
   10da0:	ldr	r2, [r3, r2]
   10da4:	cmp	r2, #0
   10da8:	bxeq	lr
   10dac:	b	10c68 <__gmon_start__@plt>
   10db0:	andeq	r5, r1, ip, asr r2
   10db4:	strheq	r0, [r0], -ip
   10db8:	ldr	r3, [pc, #28]	; 10ddc <abort@plt+0x90>
   10dbc:	ldr	r0, [pc, #28]	; 10de0 <abort@plt+0x94>
   10dc0:	sub	r3, r3, r0
   10dc4:	cmp	r3, #6
   10dc8:	bxls	lr
   10dcc:	ldr	r3, [pc, #16]	; 10de4 <abort@plt+0x98>
   10dd0:	cmp	r3, #0
   10dd4:	bxeq	lr
   10dd8:	bx	r3
   10ddc:	andeq	r6, r2, r3, lsl r1
   10de0:	andeq	r6, r2, r0, lsl r1
   10de4:	andeq	r0, r0, r0
   10de8:	ldr	r1, [pc, #36]	; 10e14 <abort@plt+0xc8>
   10dec:	ldr	r0, [pc, #36]	; 10e18 <abort@plt+0xcc>
   10df0:	sub	r1, r1, r0
   10df4:	asr	r1, r1, #2
   10df8:	add	r1, r1, r1, lsr #31
   10dfc:	asrs	r1, r1, #1
   10e00:	bxeq	lr
   10e04:	ldr	r3, [pc, #16]	; 10e1c <abort@plt+0xd0>
   10e08:	cmp	r3, #0
   10e0c:	bxeq	lr
   10e10:	bx	r3
   10e14:	andeq	r6, r2, r0, lsl r1
   10e18:	andeq	r6, r2, r0, lsl r1
   10e1c:	andeq	r0, r0, r0
   10e20:	push	{r4, lr}
   10e24:	ldr	r4, [pc, #24]	; 10e44 <abort@plt+0xf8>
   10e28:	ldrb	r3, [r4]
   10e2c:	cmp	r3, #0
   10e30:	popne	{r4, pc}
   10e34:	bl	10db8 <abort@plt+0x6c>
   10e38:	mov	r3, #1
   10e3c:	strb	r3, [r4]
   10e40:	pop	{r4, pc}
   10e44:	andeq	r6, r2, r0, lsr r1
   10e48:	ldr	r0, [pc, #40]	; 10e78 <abort@plt+0x12c>
   10e4c:	ldr	r3, [r0]
   10e50:	cmp	r3, #0
   10e54:	bne	10e5c <abort@plt+0x110>
   10e58:	b	10de8 <abort@plt+0x9c>
   10e5c:	ldr	r3, [pc, #24]	; 10e7c <abort@plt+0x130>
   10e60:	cmp	r3, #0
   10e64:	beq	10e58 <abort@plt+0x10c>
   10e68:	push	{r4, lr}
   10e6c:	blx	r3
   10e70:	pop	{r4, lr}
   10e74:	b	10de8 <abort@plt+0x9c>
   10e78:	andeq	r5, r2, r4, lsl pc
   10e7c:	andeq	r0, r0, r0
   10e80:	push	{lr}		; (str lr, [sp, #-4]!)
   10e84:	sub	sp, sp, #60	; 0x3c
   10e88:	subs	r6, r0, #0
   10e8c:	beq	10ec8 <abort@plt+0x17c>
   10e90:	ldr	r3, [pc, #712]	; 11160 <abort@plt+0x414>
   10e94:	ldr	r4, [r3]
   10e98:	mov	r2, #5
   10e9c:	ldr	r1, [pc, #704]	; 11164 <abort@plt+0x418>
   10ea0:	mov	r0, #0
   10ea4:	bl	10bcc <dcgettext@plt>
   10ea8:	ldr	r3, [pc, #696]	; 11168 <abort@plt+0x41c>
   10eac:	ldr	r3, [r3]
   10eb0:	mov	r2, r0
   10eb4:	mov	r1, #1
   10eb8:	mov	r0, r4
   10ebc:	bl	10cec <__fprintf_chk@plt>
   10ec0:	mov	r0, r6
   10ec4:	bl	10c8c <exit@plt>
   10ec8:	mov	r2, #5
   10ecc:	ldr	r1, [pc, #664]	; 1116c <abort@plt+0x420>
   10ed0:	mov	r0, #0
   10ed4:	bl	10bcc <dcgettext@plt>
   10ed8:	ldr	r3, [pc, #648]	; 11168 <abort@plt+0x41c>
   10edc:	ldr	r2, [r3]
   10ee0:	mov	r1, r0
   10ee4:	mov	r0, #1
   10ee8:	bl	10cd4 <__printf_chk@plt>
   10eec:	mov	r2, #5
   10ef0:	ldr	r1, [pc, #632]	; 11170 <abort@plt+0x424>
   10ef4:	mov	r0, #0
   10ef8:	bl	10bcc <dcgettext@plt>
   10efc:	ldr	r4, [pc, #624]	; 11174 <abort@plt+0x428>
   10f00:	ldr	r1, [r4]
   10f04:	bl	10b54 <fputs_unlocked@plt>
   10f08:	mov	r2, #5
   10f0c:	ldr	r1, [pc, #612]	; 11178 <abort@plt+0x42c>
   10f10:	mov	r0, #0
   10f14:	bl	10bcc <dcgettext@plt>
   10f18:	ldr	r1, [r4]
   10f1c:	bl	10b54 <fputs_unlocked@plt>
   10f20:	mov	r2, #5
   10f24:	ldr	r1, [pc, #592]	; 1117c <abort@plt+0x430>
   10f28:	mov	r0, #0
   10f2c:	bl	10bcc <dcgettext@plt>
   10f30:	ldr	r1, [r4]
   10f34:	bl	10b54 <fputs_unlocked@plt>
   10f38:	mov	r2, #5
   10f3c:	ldr	r1, [pc, #572]	; 11180 <abort@plt+0x434>
   10f40:	mov	r0, #0
   10f44:	bl	10bcc <dcgettext@plt>
   10f48:	ldr	r2, [pc, #564]	; 11184 <abort@plt+0x438>
   10f4c:	mov	r1, r0
   10f50:	mov	r0, #1
   10f54:	bl	10cd4 <__printf_chk@plt>
   10f58:	mov	ip, sp
   10f5c:	ldr	lr, [pc, #548]	; 11188 <abort@plt+0x43c>
   10f60:	ldm	lr!, {r0, r1, r2, r3}
   10f64:	stmia	ip!, {r0, r1, r2, r3}
   10f68:	ldm	lr!, {r0, r1, r2, r3}
   10f6c:	stmia	ip!, {r0, r1, r2, r3}
   10f70:	ldm	lr!, {r0, r1, r2, r3}
   10f74:	stmia	ip!, {r0, r1, r2, r3}
   10f78:	ldm	lr, {r0, r1}
   10f7c:	stm	ip, {r0, r1}
   10f80:	ldr	r1, [sp]
   10f84:	cmp	r1, #0
   10f88:	moveq	r4, sp
   10f8c:	beq	10fb4 <abort@plt+0x268>
   10f90:	mov	r4, sp
   10f94:	ldr	r5, [pc, #488]	; 11184 <abort@plt+0x438>
   10f98:	mov	r0, r5
   10f9c:	bl	10b6c <strcmp@plt>
   10fa0:	cmp	r0, #0
   10fa4:	beq	10fb4 <abort@plt+0x268>
   10fa8:	ldr	r1, [r4, #8]!
   10fac:	cmp	r1, #0
   10fb0:	bne	10f98 <abort@plt+0x24c>
   10fb4:	ldr	r4, [r4, #4]
   10fb8:	cmp	r4, #0
   10fbc:	beq	110d0 <abort@plt+0x384>
   10fc0:	mov	r2, #5
   10fc4:	ldr	r1, [pc, #448]	; 1118c <abort@plt+0x440>
   10fc8:	mov	r0, #0
   10fcc:	bl	10bcc <dcgettext@plt>
   10fd0:	ldr	r3, [pc, #440]	; 11190 <abort@plt+0x444>
   10fd4:	ldr	r2, [pc, #440]	; 11194 <abort@plt+0x448>
   10fd8:	mov	r1, r0
   10fdc:	mov	r0, #1
   10fe0:	bl	10cd4 <__printf_chk@plt>
   10fe4:	mov	r1, #0
   10fe8:	mov	r0, #5
   10fec:	bl	10d10 <setlocale@plt>
   10ff0:	cmp	r0, #0
   10ff4:	beq	1100c <abort@plt+0x2c0>
   10ff8:	mov	r2, #3
   10ffc:	ldr	r1, [pc, #404]	; 11198 <abort@plt+0x44c>
   11000:	bl	10d40 <strncmp@plt>
   11004:	cmp	r0, #0
   11008:	bne	1106c <abort@plt+0x320>
   1100c:	mov	r2, #5
   11010:	ldr	r1, [pc, #388]	; 1119c <abort@plt+0x450>
   11014:	mov	r0, #0
   11018:	bl	10bcc <dcgettext@plt>
   1101c:	ldr	r5, [pc, #352]	; 11184 <abort@plt+0x438>
   11020:	mov	r3, r5
   11024:	ldr	r2, [pc, #356]	; 11190 <abort@plt+0x444>
   11028:	mov	r1, r0
   1102c:	mov	r0, #1
   11030:	bl	10cd4 <__printf_chk@plt>
   11034:	mov	r2, #5
   11038:	ldr	r1, [pc, #352]	; 111a0 <abort@plt+0x454>
   1103c:	mov	r0, #0
   11040:	bl	10bcc <dcgettext@plt>
   11044:	mov	r1, r0
   11048:	ldr	r2, [pc, #340]	; 111a4 <abort@plt+0x458>
   1104c:	ldr	r3, [pc, #340]	; 111a8 <abort@plt+0x45c>
   11050:	cmp	r4, r5
   11054:	movne	r3, r2
   11058:	mov	r2, r4
   1105c:	mov	r0, #1
   11060:	bl	10cd4 <__printf_chk@plt>
   11064:	b	10ec0 <abort@plt+0x174>
   11068:	ldr	r4, [pc, #276]	; 11184 <abort@plt+0x438>
   1106c:	mov	r2, #5
   11070:	ldr	r1, [pc, #308]	; 111ac <abort@plt+0x460>
   11074:	mov	r0, #0
   11078:	bl	10bcc <dcgettext@plt>
   1107c:	ldr	r3, [pc, #240]	; 11174 <abort@plt+0x428>
   11080:	ldr	r1, [r3]
   11084:	bl	10b54 <fputs_unlocked@plt>
   11088:	b	1100c <abort@plt+0x2c0>
   1108c:	mov	r2, #5
   11090:	ldr	r1, [pc, #260]	; 1119c <abort@plt+0x450>
   11094:	mov	r0, #0
   11098:	bl	10bcc <dcgettext@plt>
   1109c:	ldr	r4, [pc, #224]	; 11184 <abort@plt+0x438>
   110a0:	mov	r3, r4
   110a4:	ldr	r2, [pc, #228]	; 11190 <abort@plt+0x444>
   110a8:	mov	r1, r0
   110ac:	mov	r0, #1
   110b0:	bl	10cd4 <__printf_chk@plt>
   110b4:	mov	r2, #5
   110b8:	ldr	r1, [pc, #224]	; 111a0 <abort@plt+0x454>
   110bc:	mov	r0, #0
   110c0:	bl	10bcc <dcgettext@plt>
   110c4:	mov	r1, r0
   110c8:	ldr	r3, [pc, #216]	; 111a8 <abort@plt+0x45c>
   110cc:	b	11058 <abort@plt+0x30c>
   110d0:	mov	r2, #5
   110d4:	ldr	r1, [pc, #176]	; 1118c <abort@plt+0x440>
   110d8:	mov	r0, #0
   110dc:	bl	10bcc <dcgettext@plt>
   110e0:	ldr	r3, [pc, #168]	; 11190 <abort@plt+0x444>
   110e4:	ldr	r2, [pc, #168]	; 11194 <abort@plt+0x448>
   110e8:	mov	r1, r0
   110ec:	mov	r0, #1
   110f0:	bl	10cd4 <__printf_chk@plt>
   110f4:	mov	r1, #0
   110f8:	mov	r0, #5
   110fc:	bl	10d10 <setlocale@plt>
   11100:	cmp	r0, #0
   11104:	beq	1108c <abort@plt+0x340>
   11108:	mov	r2, #3
   1110c:	ldr	r1, [pc, #132]	; 11198 <abort@plt+0x44c>
   11110:	bl	10d40 <strncmp@plt>
   11114:	cmp	r0, #0
   11118:	bne	11068 <abort@plt+0x31c>
   1111c:	mov	r2, #5
   11120:	ldr	r1, [pc, #116]	; 1119c <abort@plt+0x450>
   11124:	mov	r0, #0
   11128:	bl	10bcc <dcgettext@plt>
   1112c:	ldr	r4, [pc, #80]	; 11184 <abort@plt+0x438>
   11130:	mov	r3, r4
   11134:	ldr	r2, [pc, #84]	; 11190 <abort@plt+0x444>
   11138:	mov	r1, r0
   1113c:	mov	r0, #1
   11140:	bl	10cd4 <__printf_chk@plt>
   11144:	mov	r2, #5
   11148:	ldr	r1, [pc, #80]	; 111a0 <abort@plt+0x454>
   1114c:	mov	r0, #0
   11150:	bl	10bcc <dcgettext@plt>
   11154:	mov	r1, r0
   11158:	ldr	r3, [pc, #72]	; 111a8 <abort@plt+0x45c>
   1115c:	b	11058 <abort@plt+0x30c>
   11160:	andeq	r6, r2, r8, lsr #2
   11164:	muleq	r1, r0, r6
   11168:	andeq	r6, r2, ip, lsr r1
   1116c:			; <UNDEFINED> instruction: 0x000146b8
   11170:	andeq	r4, r1, r0, ror #14
   11174:	andeq	r6, r2, ip, lsr #2
   11178:	andeq	r4, r1, r0, lsr #15
   1117c:	ldrdeq	r4, [r1], -r0
   11180:	andeq	r4, r1, r8, lsl #16
   11184:	andeq	r4, r1, r4, lsl #13
   11188:	andeq	r4, r1, ip, lsl #12
   1118c:	andeq	r4, r1, r8, asr #17
   11190:	andeq	r4, r1, r0, ror #17
   11194:	andeq	r4, r1, r8, lsl #18
   11198:	andeq	r4, r1, r8, lsl r9
   1119c:	andeq	r4, r1, r4, ror #18
   111a0:	andeq	r4, r1, r0, lsl #19
   111a4:	muleq	r1, ip, r7
   111a8:	andeq	r4, r1, r8, lsl #20
   111ac:	andeq	r4, r1, ip, lsl r9
   111b0:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   111b4:	sub	sp, sp, #20
   111b8:	mov	r5, r0
   111bc:	mov	r4, r1
   111c0:	ldr	r0, [r1]
   111c4:	bl	11528 <abort@plt+0x7dc>
   111c8:	ldr	r1, [pc, #516]	; 113d4 <abort@plt+0x688>
   111cc:	mov	r0, #6
   111d0:	bl	10d10 <setlocale@plt>
   111d4:	ldr	r6, [pc, #508]	; 113d8 <abort@plt+0x68c>
   111d8:	ldr	r1, [pc, #508]	; 113dc <abort@plt+0x690>
   111dc:	mov	r0, r6
   111e0:	bl	10d34 <bindtextdomain@plt>
   111e4:	mov	r0, r6
   111e8:	bl	10be4 <textdomain@plt>
   111ec:	mov	r2, #2
   111f0:	ldr	r3, [pc, #488]	; 113e0 <abort@plt+0x694>
   111f4:	str	r2, [r3]
   111f8:	ldr	r0, [pc, #484]	; 113e4 <abort@plt+0x698>
   111fc:	bl	145e8 <abort@plt+0x389c>
   11200:	mov	r7, #0
   11204:	ldr	r9, [pc, #476]	; 113e8 <abort@plt+0x69c>
   11208:	ldr	r8, [pc, #476]	; 113ec <abort@plt+0x6a0>
   1120c:	mov	r6, r7
   11210:	mov	sl, #1
   11214:	str	r6, [sp]
   11218:	mov	r3, r9
   1121c:	mov	r2, r8
   11220:	mov	r1, r4
   11224:	mov	r0, r5
   11228:	bl	10c74 <getopt_long@plt>
   1122c:	cmn	r0, #1
   11230:	beq	1129c <abort@plt+0x550>
   11234:	mov	r7, sl
   11238:	cmn	r0, #2
   1123c:	beq	11258 <abort@plt+0x50c>
   11240:	cmp	r0, #48	; 0x30
   11244:	beq	11214 <abort@plt+0x4c8>
   11248:	cmn	r0, #3
   1124c:	beq	11260 <abort@plt+0x514>
   11250:	mov	r0, #2
   11254:	bl	10e80 <abort@plt+0x134>
   11258:	mov	r0, #0
   1125c:	bl	10e80 <abort@plt+0x134>
   11260:	mov	r4, #0
   11264:	str	r4, [sp, #8]
   11268:	ldr	r3, [pc, #384]	; 113f0 <abort@plt+0x6a4>
   1126c:	str	r3, [sp, #4]
   11270:	ldr	r3, [pc, #380]	; 113f4 <abort@plt+0x6a8>
   11274:	str	r3, [sp]
   11278:	ldr	r3, [pc, #376]	; 113f8 <abort@plt+0x6ac>
   1127c:	ldr	r3, [r3]
   11280:	ldr	r2, [pc, #372]	; 113fc <abort@plt+0x6b0>
   11284:	ldr	r1, [pc, #372]	; 11400 <abort@plt+0x6b4>
   11288:	ldr	r0, [pc, #372]	; 11404 <abort@plt+0x6b8>
   1128c:	ldr	r0, [r0]
   11290:	bl	13544 <abort@plt+0x27f8>
   11294:	mov	r0, r4
   11298:	bl	10c8c <exit@plt>
   1129c:	ldr	r3, [pc, #356]	; 11408 <abort@plt+0x6bc>
   112a0:	ldr	r6, [r3]
   112a4:	cmp	r5, r6
   112a8:	bgt	11300 <abort@plt+0x5b4>
   112ac:	sxtb	r5, r7
   112b0:	cmp	r5, #0
   112b4:	moveq	r5, #10
   112b8:	movne	r5, #0
   112bc:	ldr	r3, [pc, #328]	; 1140c <abort@plt+0x6c0>
   112c0:	ldr	r4, [r3]
   112c4:	sub	r4, r4, #4
   112c8:	ldr	r7, [pc, #320]	; 11410 <abort@plt+0x6c4>
   112cc:	mov	r6, #1
   112d0:	b	112e4 <abort@plt+0x598>
   112d4:	mov	r3, r5
   112d8:	mov	r1, r7
   112dc:	mov	r0, r6
   112e0:	bl	10cd4 <__printf_chk@plt>
   112e4:	ldr	r2, [r4, #4]!
   112e8:	cmp	r2, #0
   112ec:	bne	112d4 <abort@plt+0x588>
   112f0:	mov	r0, #1
   112f4:	eor	r0, r0, #1
   112f8:	add	sp, sp, #20
   112fc:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11300:	sxtb	r7, r7
   11304:	cmp	r7, #0
   11308:	moveq	sl, #10
   1130c:	movne	sl, #0
   11310:	mov	r9, #0
   11314:	ldr	fp, [pc, #240]	; 1140c <abort@plt+0x6c0>
   11318:	b	1132c <abort@plt+0x5e0>
   1131c:	add	r9, r9, ip
   11320:	add	r6, r6, #1
   11324:	cmp	r5, r6
   11328:	beq	113b8 <abort@plt+0x66c>
   1132c:	mov	r8, r6
   11330:	mov	r1, #61	; 0x3d
   11334:	ldr	r0, [r4, r6, lsl #2]
   11338:	bl	10ca4 <strchr@plt>
   1133c:	cmp	r0, #0
   11340:	bne	11320 <abort@plt+0x5d4>
   11344:	ldr	r7, [fp]
   11348:	sub	r7, r7, #4
   1134c:	mov	ip, #0
   11350:	ldr	r3, [r7, #4]!
   11354:	cmp	r3, #0
   11358:	beq	1131c <abort@plt+0x5d0>
   1135c:	ldr	lr, [r4, r8, lsl #2]
   11360:	mov	r2, r3
   11364:	ldrb	r1, [r3], #1
   11368:	cmp	r1, #0
   1136c:	beq	11350 <abort@plt+0x604>
   11370:	ldrb	r0, [lr], #1
   11374:	cmp	r0, #0
   11378:	beq	11350 <abort@plt+0x604>
   1137c:	cmp	r1, r0
   11380:	bne	11350 <abort@plt+0x604>
   11384:	ldrb	r1, [r3]
   11388:	cmp	r1, #61	; 0x3d
   1138c:	bne	11360 <abort@plt+0x614>
   11390:	ldrb	r1, [lr]
   11394:	cmp	r1, #0
   11398:	bne	11360 <abort@plt+0x614>
   1139c:	mov	r3, sl
   113a0:	add	r2, r2, #2
   113a4:	ldr	r1, [pc, #100]	; 11410 <abort@plt+0x6c4>
   113a8:	mov	r0, #1
   113ac:	bl	10cd4 <__printf_chk@plt>
   113b0:	mov	ip, #1
   113b4:	b	11350 <abort@plt+0x604>
   113b8:	ldr	r3, [pc, #72]	; 11408 <abort@plt+0x6bc>
   113bc:	ldr	r0, [r3]
   113c0:	sub	r0, r6, r0
   113c4:	cmp	r0, r9
   113c8:	movne	r0, #0
   113cc:	moveq	r0, #1
   113d0:	b	112f4 <abort@plt+0x5a8>
   113d4:	muleq	r1, ip, r7
   113d8:	andeq	r4, r1, ip, lsl #18
   113dc:			; <UNDEFINED> instruction: 0x000149b4
   113e0:	andeq	r6, r2, ip, asr #1
   113e4:	andeq	r1, r1, r4, lsr r4
   113e8:	andeq	r4, r1, r4, asr #12
   113ec:	strdeq	r4, [r1], -r0
   113f0:	andeq	r4, r1, ip, asr #19
   113f4:	andeq	r4, r1, r0, ror #19
   113f8:	andeq	r6, r2, r8, asr #1
   113fc:	andeq	r4, r1, r8, lsl #18
   11400:	andeq	r4, r1, r4, lsl #13
   11404:	andeq	r6, r2, ip, lsr #2
   11408:	andeq	r6, r2, r0, lsr #2
   1140c:	andeq	r6, r2, r4, lsl r1
   11410:	strdeq	r4, [r1], -r8
   11414:	ldr	r3, [pc, #4]	; 11420 <abort@plt+0x6d4>
   11418:	str	r0, [r3]
   1141c:	bx	lr
   11420:	andeq	r6, r2, r4, lsr r1
   11424:	ldr	r3, [pc, #4]	; 11430 <abort@plt+0x6e4>
   11428:	strb	r0, [r3, #4]
   1142c:	bx	lr
   11430:	andeq	r6, r2, r4, lsr r1
   11434:	push	{r4, r5, r6, lr}
   11438:	sub	sp, sp, #8
   1143c:	ldr	r3, [pc, #200]	; 1150c <abort@plt+0x7c0>
   11440:	ldr	r0, [r3]
   11444:	bl	13cc4 <abort@plt+0x2f78>
   11448:	cmp	r0, #0
   1144c:	beq	11470 <abort@plt+0x724>
   11450:	ldr	r3, [pc, #184]	; 11510 <abort@plt+0x7c4>
   11454:	ldrb	r3, [r3, #4]
   11458:	cmp	r3, #0
   1145c:	beq	1148c <abort@plt+0x740>
   11460:	bl	10cb0 <__errno_location@plt>
   11464:	ldr	r3, [r0]
   11468:	cmp	r3, #32
   1146c:	bne	1148c <abort@plt+0x740>
   11470:	ldr	r3, [pc, #156]	; 11514 <abort@plt+0x7c8>
   11474:	ldr	r0, [r3]
   11478:	bl	13cc4 <abort@plt+0x2f78>
   1147c:	cmp	r0, #0
   11480:	bne	11500 <abort@plt+0x7b4>
   11484:	add	sp, sp, #8
   11488:	pop	{r4, r5, r6, pc}
   1148c:	mov	r2, #5
   11490:	ldr	r1, [pc, #128]	; 11518 <abort@plt+0x7cc>
   11494:	mov	r0, #0
   11498:	bl	10bcc <dcgettext@plt>
   1149c:	mov	r4, r0
   114a0:	ldr	r3, [pc, #104]	; 11510 <abort@plt+0x7c4>
   114a4:	ldr	r5, [r3]
   114a8:	cmp	r5, #0
   114ac:	beq	114e4 <abort@plt+0x798>
   114b0:	bl	10cb0 <__errno_location@plt>
   114b4:	ldr	r6, [r0]
   114b8:	mov	r0, r5
   114bc:	bl	12ef0 <abort@plt+0x21a4>
   114c0:	str	r4, [sp]
   114c4:	mov	r3, r0
   114c8:	ldr	r2, [pc, #76]	; 1151c <abort@plt+0x7d0>
   114cc:	mov	r1, r6
   114d0:	mov	r0, #0
   114d4:	bl	10c38 <error@plt>
   114d8:	ldr	r3, [pc, #64]	; 11520 <abort@plt+0x7d4>
   114dc:	ldr	r0, [r3]
   114e0:	bl	10b90 <_exit@plt>
   114e4:	bl	10cb0 <__errno_location@plt>
   114e8:	mov	r3, r4
   114ec:	ldr	r2, [pc, #48]	; 11524 <abort@plt+0x7d8>
   114f0:	ldr	r1, [r0]
   114f4:	mov	r0, #0
   114f8:	bl	10c38 <error@plt>
   114fc:	b	114d8 <abort@plt+0x78c>
   11500:	ldr	r3, [pc, #24]	; 11520 <abort@plt+0x7d4>
   11504:	ldr	r0, [r3]
   11508:	bl	10b90 <_exit@plt>
   1150c:	andeq	r6, r2, ip, lsr #2
   11510:	andeq	r6, r2, r4, lsr r1
   11514:	andeq	r6, r2, r8, lsr #2
   11518:	muleq	r1, r4, sl
   1151c:	andeq	r4, r1, r0, lsr #21
   11520:	andeq	r6, r2, ip, asr #1
   11524:	andeq	r4, r1, r4, lsr #21
   11528:	push	{r4, r5, r6, lr}
   1152c:	subs	r4, r0, #0
   11530:	beq	115a8 <abort@plt+0x85c>
   11534:	mov	r1, #47	; 0x2f
   11538:	mov	r0, r4
   1153c:	bl	10d1c <strrchr@plt>
   11540:	cmp	r0, #0
   11544:	addne	r5, r0, #1
   11548:	moveq	r5, r4
   1154c:	sub	r3, r5, r4
   11550:	cmp	r3, #6
   11554:	ble	11594 <abort@plt+0x848>
   11558:	mov	r2, #7
   1155c:	ldr	r1, [pc, #96]	; 115c4 <abort@plt+0x878>
   11560:	sub	r0, r5, #7
   11564:	bl	10d40 <strncmp@plt>
   11568:	cmp	r0, #0
   1156c:	bne	11594 <abort@plt+0x848>
   11570:	mov	r2, #3
   11574:	ldr	r1, [pc, #76]	; 115c8 <abort@plt+0x87c>
   11578:	mov	r0, r5
   1157c:	bl	10d40 <strncmp@plt>
   11580:	cmp	r0, #0
   11584:	addeq	r4, r5, #3
   11588:	ldreq	r3, [pc, #60]	; 115cc <abort@plt+0x880>
   1158c:	streq	r4, [r3]
   11590:	movne	r4, r5
   11594:	ldr	r3, [pc, #52]	; 115d0 <abort@plt+0x884>
   11598:	str	r4, [r3]
   1159c:	ldr	r3, [pc, #48]	; 115d4 <abort@plt+0x888>
   115a0:	str	r4, [r3]
   115a4:	pop	{r4, r5, r6, pc}
   115a8:	ldr	r3, [pc, #40]	; 115d8 <abort@plt+0x88c>
   115ac:	ldr	r3, [r3]
   115b0:	mov	r2, #55	; 0x37
   115b4:	mov	r1, #1
   115b8:	ldr	r0, [pc, #28]	; 115dc <abort@plt+0x890>
   115bc:	bl	10bfc <fwrite@plt>
   115c0:	bl	10d4c <abort@plt>
   115c4:	andeq	r4, r1, r0, ror #21
   115c8:	andeq	r4, r1, r8, ror #21
   115cc:	andeq	r6, r2, r0, lsl r1
   115d0:	andeq	r6, r2, ip, lsr r1
   115d4:	andeq	r6, r2, r8, lsl r1
   115d8:	andeq	r6, r2, r8, lsr #2
   115dc:	andeq	r4, r1, r8, lsr #21
   115e0:	push	{r4, r5, r6, lr}
   115e4:	mov	r5, r0
   115e8:	mov	r4, r1
   115ec:	mov	r2, #48	; 0x30
   115f0:	mov	r1, #0
   115f4:	bl	10cc8 <memset@plt>
   115f8:	cmp	r4, #10
   115fc:	beq	1160c <abort@plt+0x8c0>
   11600:	str	r4, [r5]
   11604:	mov	r0, r5
   11608:	pop	{r4, r5, r6, pc}
   1160c:	bl	10d4c <abort@plt>
   11610:	push	{r4, r5, r6, lr}
   11614:	mov	r4, r0
   11618:	mov	r5, r1
   1161c:	mov	r2, #5
   11620:	mov	r1, r0
   11624:	mov	r0, #0
   11628:	bl	10bcc <dcgettext@plt>
   1162c:	cmp	r4, r0
   11630:	popne	{r4, r5, r6, pc}
   11634:	bl	13f48 <abort@plt+0x31fc>
   11638:	ldrb	r3, [r0]
   1163c:	bic	r3, r3, #32
   11640:	cmp	r3, #85	; 0x55
   11644:	beq	116c0 <abort@plt+0x974>
   11648:	cmp	r3, #71	; 0x47
   1164c:	bne	1171c <abort@plt+0x9d0>
   11650:	ldrb	r3, [r0, #1]
   11654:	bic	r3, r3, #32
   11658:	cmp	r3, #66	; 0x42
   1165c:	bne	1171c <abort@plt+0x9d0>
   11660:	ldrb	r3, [r0, #2]
   11664:	cmp	r3, #49	; 0x31
   11668:	bne	1171c <abort@plt+0x9d0>
   1166c:	ldrb	r3, [r0, #3]
   11670:	cmp	r3, #56	; 0x38
   11674:	bne	1171c <abort@plt+0x9d0>
   11678:	ldrb	r3, [r0, #4]
   1167c:	cmp	r3, #48	; 0x30
   11680:	bne	1171c <abort@plt+0x9d0>
   11684:	ldrb	r3, [r0, #5]
   11688:	cmp	r3, #51	; 0x33
   1168c:	bne	1171c <abort@plt+0x9d0>
   11690:	ldrb	r3, [r0, #6]
   11694:	cmp	r3, #48	; 0x30
   11698:	bne	1171c <abort@plt+0x9d0>
   1169c:	ldrb	r3, [r0, #7]
   116a0:	cmp	r3, #0
   116a4:	bne	1171c <abort@plt+0x9d0>
   116a8:	ldrb	r2, [r4]
   116ac:	ldr	r3, [pc, #124]	; 11730 <abort@plt+0x9e4>
   116b0:	ldr	r0, [pc, #124]	; 11734 <abort@plt+0x9e8>
   116b4:	cmp	r2, #96	; 0x60
   116b8:	movne	r0, r3
   116bc:	pop	{r4, r5, r6, pc}
   116c0:	ldrb	r3, [r0, #1]
   116c4:	bic	r3, r3, #32
   116c8:	cmp	r3, #84	; 0x54
   116cc:	bne	1171c <abort@plt+0x9d0>
   116d0:	ldrb	r3, [r0, #2]
   116d4:	bic	r3, r3, #32
   116d8:	cmp	r3, #70	; 0x46
   116dc:	bne	1171c <abort@plt+0x9d0>
   116e0:	ldrb	r3, [r0, #3]
   116e4:	cmp	r3, #45	; 0x2d
   116e8:	bne	1171c <abort@plt+0x9d0>
   116ec:	ldrb	r3, [r0, #4]
   116f0:	cmp	r3, #56	; 0x38
   116f4:	bne	1171c <abort@plt+0x9d0>
   116f8:	ldrb	r3, [r0, #5]
   116fc:	cmp	r3, #0
   11700:	bne	1171c <abort@plt+0x9d0>
   11704:	ldrb	r2, [r4]
   11708:	ldr	r3, [pc, #40]	; 11738 <abort@plt+0x9ec>
   1170c:	ldr	r0, [pc, #40]	; 1173c <abort@plt+0x9f0>
   11710:	cmp	r2, #96	; 0x60
   11714:	movne	r0, r3
   11718:	pop	{r4, r5, r6, pc}
   1171c:	ldr	r3, [pc, #28]	; 11740 <abort@plt+0x9f4>
   11720:	ldr	r0, [pc, #28]	; 11744 <abort@plt+0x9f8>
   11724:	cmp	r5, #9
   11728:	movne	r0, r3
   1172c:	pop	{r4, r5, r6, pc}
   11730:	andeq	r4, r1, r4, asr #22
   11734:	andeq	r4, r1, r0, asr fp
   11738:	andeq	r4, r1, r0, asr #22
   1173c:	andeq	r4, r1, r4, asr fp
   11740:	andeq	r4, r1, r8, asr #22
   11744:	andeq	r4, r1, ip, asr #22
   11748:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1174c:	sub	sp, sp, #116	; 0x74
   11750:	str	r0, [sp, #36]	; 0x24
   11754:	mov	sl, r1
   11758:	str	r2, [sp, #52]	; 0x34
   1175c:	str	r3, [sp, #28]
   11760:	ldr	r8, [sp, #152]	; 0x98
   11764:	bl	10c14 <__ctype_get_mb_cur_max@plt>
   11768:	str	r0, [sp, #84]	; 0x54
   1176c:	ldr	r3, [sp, #156]	; 0x9c
   11770:	lsr	r3, r3, #1
   11774:	and	r3, r3, #1
   11778:	str	r3, [sp, #32]
   1177c:	mov	r3, #1
   11780:	str	r3, [sp, #40]	; 0x28
   11784:	mov	r3, #0
   11788:	str	r3, [sp, #80]	; 0x50
   1178c:	str	r3, [sp, #44]	; 0x2c
   11790:	str	r3, [sp, #48]	; 0x30
   11794:	str	r3, [sp, #60]	; 0x3c
   11798:	str	r3, [sp, #72]	; 0x48
   1179c:	str	r3, [sp, #76]	; 0x4c
   117a0:	mov	r7, sl
   117a4:	mov	sl, r8
   117a8:	cmp	sl, #10
   117ac:	ldrls	pc, [pc, sl, lsl #2]
   117b0:	b	11968 <abort@plt+0xc1c>
   117b4:	andeq	r1, r1, r8, lsl r8
   117b8:	andeq	r1, r1, r8, ror #15
   117bc:	andeq	r1, r1, r4, asr #18
   117c0:	andeq	r1, r1, r0, ror #15
   117c4:	strdeq	r1, [r1], -r8
   117c8:	andeq	r1, r1, r8, lsr #16
   117cc:	muleq	r1, r4, r8
   117d0:	andeq	r1, r1, ip, ror #18
   117d4:	andeq	r1, r1, r4, ror #16
   117d8:	andeq	r1, r1, r4, ror #16
   117dc:	andeq	r1, r1, r4, ror #16
   117e0:	mov	r3, #1
   117e4:	str	r3, [sp, #48]	; 0x30
   117e8:	mov	r3, #1
   117ec:	str	r3, [sp, #32]
   117f0:	str	r3, [sp, #60]	; 0x3c
   117f4:	ldr	r3, [pc, #4068]	; 127e0 <abort@plt+0x1a94>
   117f8:	str	r3, [sp, #72]	; 0x48
   117fc:	mov	fp, #0
   11800:	mov	sl, #2
   11804:	mov	r6, #0
   11808:	ldr	r3, [sp, #48]	; 0x30
   1180c:	eor	r3, r3, #1
   11810:	str	r3, [sp, #68]	; 0x44
   11814:	b	120fc <abort@plt+0x13b0>
   11818:	mov	r3, #0
   1181c:	str	r3, [sp, #32]
   11820:	mov	fp, r3
   11824:	b	11804 <abort@plt+0xab8>
   11828:	ldr	r3, [sp, #32]
   1182c:	cmp	r3, #0
   11830:	bne	11984 <abort@plt+0xc38>
   11834:	cmp	r7, #0
   11838:	beq	119a4 <abort@plt+0xc58>
   1183c:	ldr	r3, [sp, #36]	; 0x24
   11840:	mov	r2, #34	; 0x22
   11844:	strb	r2, [r3]
   11848:	mov	r3, #1
   1184c:	str	r3, [sp, #48]	; 0x30
   11850:	str	r3, [sp, #60]	; 0x3c
   11854:	ldr	r3, [pc, #3980]	; 127e8 <abort@plt+0x1a9c>
   11858:	str	r3, [sp, #72]	; 0x48
   1185c:	mov	fp, #1
   11860:	b	11804 <abort@plt+0xab8>
   11864:	cmp	sl, #10
   11868:	beq	1188c <abort@plt+0xb40>
   1186c:	mov	r1, sl
   11870:	ldr	r0, [pc, #3948]	; 127e4 <abort@plt+0x1a98>
   11874:	bl	11610 <abort@plt+0x8c4>
   11878:	str	r0, [sp, #164]	; 0xa4
   1187c:	mov	r1, sl
   11880:	ldr	r0, [pc, #3928]	; 127e0 <abort@plt+0x1a94>
   11884:	bl	11610 <abort@plt+0x8c4>
   11888:	str	r0, [sp, #168]	; 0xa8
   1188c:	ldr	r3, [sp, #32]
   11890:	cmp	r3, #0
   11894:	movne	fp, #0
   11898:	bne	118d0 <abort@plt+0xb84>
   1189c:	ldr	r3, [sp, #164]	; 0xa4
   118a0:	ldrb	r3, [r3]
   118a4:	cmp	r3, #0
   118a8:	beq	118f0 <abort@plt+0xba4>
   118ac:	ldr	r2, [sp, #164]	; 0xa4
   118b0:	mov	fp, #0
   118b4:	ldr	r1, [sp, #36]	; 0x24
   118b8:	cmp	r7, fp
   118bc:	strbhi	r3, [r1, fp]
   118c0:	add	fp, fp, #1
   118c4:	ldrb	r3, [r2, #1]!
   118c8:	cmp	r3, #0
   118cc:	bne	118b8 <abort@plt+0xb6c>
   118d0:	ldr	r0, [sp, #168]	; 0xa8
   118d4:	bl	10c98 <strlen@plt>
   118d8:	str	r0, [sp, #60]	; 0x3c
   118dc:	ldr	r3, [sp, #168]	; 0xa8
   118e0:	str	r3, [sp, #72]	; 0x48
   118e4:	mov	r3, #1
   118e8:	str	r3, [sp, #48]	; 0x30
   118ec:	b	11804 <abort@plt+0xab8>
   118f0:	mov	fp, #0
   118f4:	b	118d0 <abort@plt+0xb84>
   118f8:	ldr	r3, [sp, #32]
   118fc:	cmp	r3, #0
   11900:	bne	119c0 <abort@plt+0xc74>
   11904:	mov	r3, #1
   11908:	str	r3, [sp, #48]	; 0x30
   1190c:	cmp	r7, #0
   11910:	beq	119dc <abort@plt+0xc90>
   11914:	ldr	r3, [sp, #36]	; 0x24
   11918:	mov	r2, #39	; 0x27
   1191c:	strb	r2, [r3]
   11920:	mov	r3, #0
   11924:	str	r3, [sp, #32]
   11928:	mov	r3, #1
   1192c:	str	r3, [sp, #60]	; 0x3c
   11930:	ldr	r3, [pc, #3752]	; 127e0 <abort@plt+0x1a94>
   11934:	str	r3, [sp, #72]	; 0x48
   11938:	mov	fp, #1
   1193c:	mov	sl, #2
   11940:	b	11804 <abort@plt+0xab8>
   11944:	ldr	r3, [sp, #32]
   11948:	cmp	r3, #0
   1194c:	beq	1190c <abort@plt+0xbc0>
   11950:	mov	r3, #1
   11954:	str	r3, [sp, #60]	; 0x3c
   11958:	ldr	r3, [pc, #3712]	; 127e0 <abort@plt+0x1a94>
   1195c:	str	r3, [sp, #72]	; 0x48
   11960:	mov	fp, #0
   11964:	b	11804 <abort@plt+0xab8>
   11968:	bl	10d4c <abort@plt>
   1196c:	mov	r3, #0
   11970:	str	r3, [sp, #32]
   11974:	mov	r3, #1
   11978:	str	r3, [sp, #48]	; 0x30
   1197c:	mov	fp, #0
   11980:	b	11804 <abort@plt+0xab8>
   11984:	ldr	r3, [sp, #32]
   11988:	str	r3, [sp, #48]	; 0x30
   1198c:	mov	r3, #1
   11990:	str	r3, [sp, #60]	; 0x3c
   11994:	ldr	r3, [pc, #3660]	; 127e8 <abort@plt+0x1a9c>
   11998:	str	r3, [sp, #72]	; 0x48
   1199c:	mov	fp, #0
   119a0:	b	11804 <abort@plt+0xab8>
   119a4:	mov	r3, #1
   119a8:	str	r3, [sp, #48]	; 0x30
   119ac:	str	r3, [sp, #60]	; 0x3c
   119b0:	ldr	r3, [pc, #3632]	; 127e8 <abort@plt+0x1a9c>
   119b4:	str	r3, [sp, #72]	; 0x48
   119b8:	mov	fp, #1
   119bc:	b	11804 <abort@plt+0xab8>
   119c0:	mov	r3, #1
   119c4:	str	r3, [sp, #60]	; 0x3c
   119c8:	ldr	r3, [pc, #3600]	; 127e0 <abort@plt+0x1a94>
   119cc:	str	r3, [sp, #72]	; 0x48
   119d0:	mov	fp, #0
   119d4:	mov	sl, #2
   119d8:	b	11804 <abort@plt+0xab8>
   119dc:	mov	r3, #0
   119e0:	str	r3, [sp, #32]
   119e4:	mov	r3, #1
   119e8:	str	r3, [sp, #60]	; 0x3c
   119ec:	ldr	r3, [pc, #3564]	; 127e0 <abort@plt+0x1a94>
   119f0:	str	r3, [sp, #72]	; 0x48
   119f4:	mov	fp, #1
   119f8:	mov	sl, #2
   119fc:	b	11804 <abort@plt+0xab8>
   11a00:	mov	r3, #0
   11a04:	str	r3, [sp, #56]	; 0x38
   11a08:	ldr	r3, [sp, #52]	; 0x34
   11a0c:	add	r2, r3, r6
   11a10:	str	r2, [sp, #64]	; 0x40
   11a14:	ldrb	r4, [r3, r6]
   11a18:	cmp	r4, #126	; 0x7e
   11a1c:	ldrls	pc, [pc, r4, lsl #2]
   11a20:	b	1225c <abort@plt+0x1510>
   11a24:	andeq	r1, r1, ip, lsr ip
   11a28:	andeq	r2, r1, ip, asr r2
   11a2c:	andeq	r2, r1, ip, asr r2
   11a30:	andeq	r2, r1, ip, asr r2
   11a34:	andeq	r2, r1, ip, asr r2
   11a38:	andeq	r2, r1, ip, asr r2
   11a3c:	andeq	r2, r1, ip, asr r2
   11a40:	muleq	r1, r8, pc	; <UNPREDICTABLE>
   11a44:	andeq	r1, r1, r4, lsr ip
   11a48:	andeq	r1, r1, r0, asr pc
   11a4c:	andeq	r1, r1, r8, asr #30
   11a50:			; <UNDEFINED> instruction: 0x00011eb8
   11a54:			; <UNDEFINED> instruction: 0x00011eb0
   11a58:	andeq	r1, r1, ip, lsr #24
   11a5c:	andeq	r2, r1, ip, asr r2
   11a60:	andeq	r2, r1, ip, asr r2
   11a64:	andeq	r2, r1, ip, asr r2
   11a68:	andeq	r2, r1, ip, asr r2
   11a6c:	andeq	r2, r1, ip, asr r2
   11a70:	andeq	r2, r1, ip, asr r2
   11a74:	andeq	r2, r1, ip, asr r2
   11a78:	andeq	r2, r1, ip, asr r2
   11a7c:	andeq	r2, r1, ip, asr r2
   11a80:	andeq	r2, r1, ip, asr r2
   11a84:	andeq	r2, r1, ip, asr r2
   11a88:	andeq	r2, r1, ip, asr r2
   11a8c:	andeq	r2, r1, ip, asr r2
   11a90:	andeq	r2, r1, ip, asr r2
   11a94:	andeq	r2, r1, ip, asr r2
   11a98:	andeq	r2, r1, ip, asr r2
   11a9c:	andeq	r2, r1, ip, asr r2
   11aa0:	andeq	r2, r1, ip, asr r2
   11aa4:	andeq	r1, r1, ip, ror #31
   11aa8:	andeq	r1, r1, r8, ror #31
   11aac:	andeq	r1, r1, r8, ror #31
   11ab0:	andeq	r1, r1, r0, asr #31
   11ab4:	andeq	r1, r1, r8, ror #31
   11ab8:	andeq	r2, r1, r0, lsr r6
   11abc:	andeq	r1, r1, r8, ror #31
   11ac0:	andeq	r2, r1, r0, asr #3
   11ac4:	andeq	r1, r1, r8, ror #31
   11ac8:	andeq	r1, r1, r8, ror #31
   11acc:	andeq	r1, r1, r8, ror #31
   11ad0:	andeq	r2, r1, r0, lsr r6
   11ad4:	andeq	r2, r1, r0, lsr r6
   11ad8:	andeq	r2, r1, r0, lsr r6
   11adc:	andeq	r2, r1, r0, lsr r6
   11ae0:	andeq	r2, r1, r0, lsr r6
   11ae4:	andeq	r2, r1, r0, lsr r6
   11ae8:	andeq	r2, r1, r0, lsr r6
   11aec:	andeq	r2, r1, r0, lsr r6
   11af0:	andeq	r2, r1, r0, lsr r6
   11af4:	andeq	r2, r1, r0, lsr r6
   11af8:	andeq	r2, r1, r0, lsr r6
   11afc:	andeq	r2, r1, r0, lsr r6
   11b00:	andeq	r2, r1, r0, lsr r6
   11b04:	andeq	r2, r1, r0, lsr r6
   11b08:	andeq	r2, r1, r0, lsr r6
   11b0c:	andeq	r2, r1, r0, lsr r6
   11b10:	andeq	r1, r1, r8, ror #31
   11b14:	andeq	r1, r1, r8, ror #31
   11b18:	andeq	r1, r1, r8, ror #31
   11b1c:	andeq	r1, r1, r8, ror #31
   11b20:	andeq	r1, r1, r4, asr #26
   11b24:	andeq	r2, r1, ip, asr r2
   11b28:	andeq	r2, r1, r0, lsr r6
   11b2c:	andeq	r2, r1, r0, lsr r6
   11b30:	andeq	r2, r1, r0, lsr r6
   11b34:	andeq	r2, r1, r0, lsr r6
   11b38:	andeq	r2, r1, r0, lsr r6
   11b3c:	andeq	r2, r1, r0, lsr r6
   11b40:	andeq	r2, r1, r0, lsr r6
   11b44:	andeq	r2, r1, r0, lsr r6
   11b48:	andeq	r2, r1, r0, lsr r6
   11b4c:	andeq	r2, r1, r0, lsr r6
   11b50:	andeq	r2, r1, r0, lsr r6
   11b54:	andeq	r2, r1, r0, lsr r6
   11b58:	andeq	r2, r1, r0, lsr r6
   11b5c:	andeq	r2, r1, r0, lsr r6
   11b60:	andeq	r2, r1, r0, lsr r6
   11b64:	andeq	r2, r1, r0, lsr r6
   11b68:	andeq	r2, r1, r0, lsr r6
   11b6c:	andeq	r2, r1, r0, lsr r6
   11b70:	andeq	r2, r1, r0, lsr r6
   11b74:	andeq	r2, r1, r0, lsr r6
   11b78:	andeq	r2, r1, r0, lsr r6
   11b7c:	andeq	r2, r1, r0, lsr r6
   11b80:	andeq	r2, r1, r0, lsr r6
   11b84:	andeq	r2, r1, r0, lsr r6
   11b88:	andeq	r2, r1, r0, lsr r6
   11b8c:	andeq	r2, r1, r0, lsr r6
   11b90:	andeq	r1, r1, r8, ror #31
   11b94:	andeq	r1, r1, r0, asr #29
   11b98:	andeq	r2, r1, r0, lsr r6
   11b9c:	andeq	r1, r1, r8, ror #31
   11ba0:	andeq	r2, r1, r0, lsr r6
   11ba4:	andeq	r1, r1, r8, ror #31
   11ba8:	andeq	r2, r1, r0, lsr r6
   11bac:	andeq	r2, r1, r0, lsr r6
   11bb0:	andeq	r2, r1, r0, lsr r6
   11bb4:	andeq	r2, r1, r0, lsr r6
   11bb8:	andeq	r2, r1, r0, lsr r6
   11bbc:	andeq	r2, r1, r0, lsr r6
   11bc0:	andeq	r2, r1, r0, lsr r6
   11bc4:	andeq	r2, r1, r0, lsr r6
   11bc8:	andeq	r2, r1, r0, lsr r6
   11bcc:	andeq	r2, r1, r0, lsr r6
   11bd0:	andeq	r2, r1, r0, lsr r6
   11bd4:	andeq	r2, r1, r0, lsr r6
   11bd8:	andeq	r2, r1, r0, lsr r6
   11bdc:	andeq	r2, r1, r0, lsr r6
   11be0:	andeq	r2, r1, r0, lsr r6
   11be4:	andeq	r2, r1, r0, lsr r6
   11be8:	andeq	r2, r1, r0, lsr r6
   11bec:	andeq	r2, r1, r0, lsr r6
   11bf0:	andeq	r2, r1, r0, lsr r6
   11bf4:	andeq	r2, r1, r0, lsr r6
   11bf8:	andeq	r2, r1, r0, lsr r6
   11bfc:	andeq	r2, r1, r0, lsr r6
   11c00:	andeq	r2, r1, r0, lsr r6
   11c04:	andeq	r2, r1, r0, lsr r6
   11c08:	andeq	r2, r1, r0, lsr r6
   11c0c:	andeq	r2, r1, r0, lsr r6
   11c10:	andeq	r1, r1, r0, lsr #31
   11c14:	andeq	r1, r1, r8, ror #31
   11c18:	andeq	r1, r1, r0, lsr #31
   11c1c:	andeq	r1, r1, r0, asr #31
   11c20:	mov	r3, #0
   11c24:	str	r3, [sp, #56]	; 0x38
   11c28:	b	11a08 <abort@plt+0xcbc>
   11c2c:	mov	r3, #114	; 0x72
   11c30:	b	11f54 <abort@plt+0x1208>
   11c34:	mov	r3, #98	; 0x62
   11c38:	b	11f6c <abort@plt+0x1220>
   11c3c:	ldr	r3, [sp, #48]	; 0x30
   11c40:	cmp	r3, #0
   11c44:	beq	11d2c <abort@plt+0xfe0>
   11c48:	ldr	r3, [sp, #32]
   11c4c:	cmp	r3, #0
   11c50:	bne	127b4 <abort@plt+0x1a68>
   11c54:	ldr	r3, [sp, #44]	; 0x2c
   11c58:	eor	r3, r3, #1
   11c5c:	cmp	sl, #2
   11c60:	movne	r3, #0
   11c64:	andeq	r3, r3, #1
   11c68:	cmp	r3, #0
   11c6c:	moveq	r2, fp
   11c70:	beq	11cb4 <abort@plt+0xf68>
   11c74:	cmp	r7, fp
   11c78:	ldrhi	r2, [sp, #36]	; 0x24
   11c7c:	movhi	r1, #39	; 0x27
   11c80:	strbhi	r1, [r2, fp]
   11c84:	add	r2, fp, #1
   11c88:	cmp	r7, r2
   11c8c:	ldrhi	r1, [sp, #36]	; 0x24
   11c90:	movhi	r0, #36	; 0x24
   11c94:	strbhi	r0, [r1, r2]
   11c98:	add	r2, fp, #2
   11c9c:	cmp	r7, r2
   11ca0:	ldrhi	r1, [sp, #36]	; 0x24
   11ca4:	movhi	r0, #39	; 0x27
   11ca8:	strbhi	r0, [r1, r2]
   11cac:	add	r2, fp, #3
   11cb0:	str	r3, [sp, #44]	; 0x2c
   11cb4:	cmp	r7, r2
   11cb8:	ldrhi	r3, [sp, #36]	; 0x24
   11cbc:	movhi	r1, #92	; 0x5c
   11cc0:	strbhi	r1, [r3, r2]
   11cc4:	add	fp, r2, #1
   11cc8:	cmp	r5, #0
   11ccc:	beq	12638 <abort@plt+0x18ec>
   11cd0:	add	r3, r6, #1
   11cd4:	ldr	r1, [sp, #28]
   11cd8:	cmp	r1, r3
   11cdc:	bls	12648 <abort@plt+0x18fc>
   11ce0:	ldr	r1, [sp, #52]	; 0x34
   11ce4:	ldrb	r3, [r1, r3]
   11ce8:	sub	r3, r3, #48	; 0x30
   11cec:	uxtb	r3, r3
   11cf0:	cmp	r3, #9
   11cf4:	bhi	12654 <abort@plt+0x1908>
   11cf8:	cmp	r7, fp
   11cfc:	movhi	r3, #48	; 0x30
   11d00:	ldrhi	r1, [sp, #36]	; 0x24
   11d04:	strbhi	r3, [r1, fp]
   11d08:	add	r3, r2, #2
   11d0c:	cmp	r7, r3
   11d10:	movhi	r1, #48	; 0x30
   11d14:	ldrhi	r0, [sp, #36]	; 0x24
   11d18:	strbhi	r1, [r0, r3]
   11d1c:	add	fp, r2, #3
   11d20:	ldr	r8, [sp, #32]
   11d24:	mov	r4, #48	; 0x30
   11d28:	b	12004 <abort@plt+0x12b8>
   11d2c:	ldr	r3, [sp, #156]	; 0x9c
   11d30:	tst	r3, #1
   11d34:	bne	120f8 <abort@plt+0x13ac>
   11d38:	ldr	r5, [sp, #48]	; 0x30
   11d3c:	mov	r8, r5
   11d40:	b	12004 <abort@plt+0x12b8>
   11d44:	cmp	sl, #2
   11d48:	beq	11d60 <abort@plt+0x1014>
   11d4c:	cmp	sl, #5
   11d50:	beq	11d78 <abort@plt+0x102c>
   11d54:	mov	r8, #0
   11d58:	mov	r5, r8
   11d5c:	b	12004 <abort@plt+0x12b8>
   11d60:	ldr	r3, [sp, #32]
   11d64:	cmp	r3, #0
   11d68:	bne	127c8 <abort@plt+0x1a7c>
   11d6c:	mov	r8, r3
   11d70:	mov	r5, r3
   11d74:	b	12004 <abort@plt+0x12b8>
   11d78:	ldr	r3, [sp, #156]	; 0x9c
   11d7c:	tst	r3, #4
   11d80:	beq	12660 <abort@plt+0x1914>
   11d84:	add	r3, r6, #2
   11d88:	ldr	r2, [sp, #28]
   11d8c:	cmp	r2, r3
   11d90:	bls	1266c <abort@plt+0x1920>
   11d94:	ldr	r2, [sp, #52]	; 0x34
   11d98:	add	r2, r2, r6
   11d9c:	ldrb	r2, [r2, #1]
   11da0:	cmp	r2, #63	; 0x3f
   11da4:	movne	r8, #0
   11da8:	movne	r5, r8
   11dac:	bne	12004 <abort@plt+0x12b8>
   11db0:	ldr	r2, [sp, #52]	; 0x34
   11db4:	ldrb	r2, [r2, r3]
   11db8:	sub	r1, r2, #33	; 0x21
   11dbc:	cmp	r1, #29
   11dc0:	ldrls	pc, [pc, r1, lsl #2]
   11dc4:	b	12678 <abort@plt+0x192c>
   11dc8:	andeq	r1, r1, r0, asr #28
   11dcc:	andeq	r2, r1, r8, ror r6
   11dd0:	andeq	r2, r1, r8, ror r6
   11dd4:	andeq	r2, r1, r8, ror r6
   11dd8:	andeq	r2, r1, r8, ror r6
   11ddc:	andeq	r2, r1, r8, ror r6
   11de0:	andeq	r1, r1, r0, asr #28
   11de4:	andeq	r1, r1, r0, asr #28
   11de8:	andeq	r1, r1, r0, asr #28
   11dec:	andeq	r2, r1, r8, ror r6
   11df0:	andeq	r2, r1, r8, ror r6
   11df4:	andeq	r2, r1, r8, ror r6
   11df8:	andeq	r1, r1, r0, asr #28
   11dfc:	andeq	r2, r1, r8, ror r6
   11e00:	andeq	r1, r1, r0, asr #28
   11e04:	andeq	r2, r1, r8, ror r6
   11e08:	andeq	r2, r1, r8, ror r6
   11e0c:	andeq	r2, r1, r8, ror r6
   11e10:	andeq	r2, r1, r8, ror r6
   11e14:	andeq	r2, r1, r8, ror r6
   11e18:	andeq	r2, r1, r8, ror r6
   11e1c:	andeq	r2, r1, r8, ror r6
   11e20:	andeq	r2, r1, r8, ror r6
   11e24:	andeq	r2, r1, r8, ror r6
   11e28:	andeq	r2, r1, r8, ror r6
   11e2c:	andeq	r2, r1, r8, ror r6
   11e30:	andeq	r2, r1, r8, ror r6
   11e34:	andeq	r1, r1, r0, asr #28
   11e38:	andeq	r1, r1, r0, asr #28
   11e3c:	andeq	r1, r1, r0, asr #28
   11e40:	ldr	r1, [sp, #32]
   11e44:	cmp	r1, #0
   11e48:	bne	12888 <abort@plt+0x1b3c>
   11e4c:	cmp	r7, fp
   11e50:	movhi	r1, #63	; 0x3f
   11e54:	ldrhi	r0, [sp, #36]	; 0x24
   11e58:	strbhi	r1, [r0, fp]
   11e5c:	add	r1, fp, #1
   11e60:	cmp	r7, r1
   11e64:	ldrhi	r0, [sp, #36]	; 0x24
   11e68:	movhi	ip, #34	; 0x22
   11e6c:	strbhi	ip, [r0, r1]
   11e70:	add	r1, fp, #2
   11e74:	cmp	r7, r1
   11e78:	ldrhi	r0, [sp, #36]	; 0x24
   11e7c:	movhi	ip, #34	; 0x22
   11e80:	strbhi	ip, [r0, r1]
   11e84:	add	r1, fp, #3
   11e88:	cmp	r7, r1
   11e8c:	movhi	r0, #63	; 0x3f
   11e90:	ldrhi	ip, [sp, #36]	; 0x24
   11e94:	strbhi	r0, [ip, r1]
   11e98:	add	fp, fp, #4
   11e9c:	ldr	r5, [sp, #32]
   11ea0:	mov	r8, r5
   11ea4:	mov	r4, r2
   11ea8:	mov	r6, r3
   11eac:	b	12004 <abort@plt+0x12b8>
   11eb0:	mov	r3, #102	; 0x66
   11eb4:	b	11f6c <abort@plt+0x1220>
   11eb8:	mov	r3, #118	; 0x76
   11ebc:	b	11f6c <abort@plt+0x1220>
   11ec0:	cmp	sl, #2
   11ec4:	beq	11f30 <abort@plt+0x11e4>
   11ec8:	ldr	r3, [sp, #48]	; 0x30
   11ecc:	ldr	r2, [sp, #32]
   11ed0:	and	r3, r3, r2
   11ed4:	tst	r9, r3
   11ed8:	moveq	r3, r4
   11edc:	beq	11f6c <abort@plt+0x1220>
   11ee0:	mov	r8, #0
   11ee4:	mov	r5, r8
   11ee8:	eor	r5, r5, #1
   11eec:	ldr	r3, [sp, #44]	; 0x2c
   11ef0:	and	r5, r5, r3
   11ef4:	tst	r5, #255	; 0xff
   11ef8:	beq	120d8 <abort@plt+0x138c>
   11efc:	cmp	r7, fp
   11f00:	ldrhi	r3, [sp, #36]	; 0x24
   11f04:	movhi	r2, #39	; 0x27
   11f08:	strbhi	r2, [r3, fp]
   11f0c:	add	r3, fp, #1
   11f10:	cmp	r7, r3
   11f14:	ldrhi	r2, [sp, #36]	; 0x24
   11f18:	movhi	r1, #39	; 0x27
   11f1c:	strbhi	r1, [r2, r3]
   11f20:	add	fp, fp, #2
   11f24:	mov	r3, #0
   11f28:	str	r3, [sp, #44]	; 0x2c
   11f2c:	b	120d8 <abort@plt+0x138c>
   11f30:	ldr	r3, [sp, #32]
   11f34:	cmp	r3, #0
   11f38:	bne	127d4 <abort@plt+0x1a88>
   11f3c:	mov	r8, r3
   11f40:	mov	r5, r3
   11f44:	b	11ee8 <abort@plt+0x119c>
   11f48:	mov	r3, #110	; 0x6e
   11f4c:	b	11f54 <abort@plt+0x1208>
   11f50:	mov	r3, #116	; 0x74
   11f54:	ldr	r2, [sp, #32]
   11f58:	cmp	sl, #2
   11f5c:	movne	r2, #0
   11f60:	andeq	r2, r2, #1
   11f64:	cmp	r2, #0
   11f68:	bne	11f8c <abort@plt+0x1240>
   11f6c:	ldr	r2, [sp, #48]	; 0x30
   11f70:	cmp	r2, #0
   11f74:	moveq	r8, r2
   11f78:	moveq	r5, r2
   11f7c:	beq	12004 <abort@plt+0x12b8>
   11f80:	mov	r4, r3
   11f84:	mov	r8, #0
   11f88:	b	1205c <abort@plt+0x1310>
   11f8c:	mov	r8, sl
   11f90:	mov	sl, r7
   11f94:	b	12800 <abort@plt+0x1ab4>
   11f98:	mov	r3, #97	; 0x61
   11f9c:	b	11f6c <abort@plt+0x1220>
   11fa0:	ldr	r3, [sp, #28]
   11fa4:	cmn	r3, #1
   11fa8:	beq	11fd4 <abort@plt+0x1288>
   11fac:	ldr	r3, [sp, #28]
   11fb0:	subs	r3, r3, #1
   11fb4:	movne	r3, #1
   11fb8:	cmp	r3, #0
   11fbc:	bne	12684 <abort@plt+0x1938>
   11fc0:	cmp	r6, #0
   11fc4:	beq	11fec <abort@plt+0x12a0>
   11fc8:	mov	r8, #0
   11fcc:	mov	r5, r8
   11fd0:	b	12004 <abort@plt+0x12b8>
   11fd4:	ldr	r3, [sp, #52]	; 0x34
   11fd8:	ldrb	r3, [r3, #1]
   11fdc:	adds	r3, r3, #0
   11fe0:	movne	r3, #1
   11fe4:	b	11fb8 <abort@plt+0x126c>
   11fe8:	mov	r8, #0
   11fec:	ldr	r5, [sp, #32]
   11ff0:	cmp	sl, #2
   11ff4:	movne	r5, #0
   11ff8:	andeq	r5, r5, #1
   11ffc:	cmp	r5, #0
   12000:	bne	121b4 <abort@plt+0x1468>
   12004:	ldr	r3, [sp, #68]	; 0x44
   12008:	cmp	sl, #2
   1200c:	orreq	r3, r3, #1
   12010:	eor	r3, r3, #1
   12014:	ldr	r2, [sp, #32]
   12018:	orr	r3, r2, r3
   1201c:	tst	r3, #255	; 0xff
   12020:	beq	12050 <abort@plt+0x1304>
   12024:	ldr	r3, [sp, #160]	; 0xa0
   12028:	cmp	r3, #0
   1202c:	beq	12050 <abort@plt+0x1304>
   12030:	lsr	r2, r4, #5
   12034:	uxtb	r2, r2
   12038:	and	r3, r4, #31
   1203c:	ldr	r1, [sp, #160]	; 0xa0
   12040:	ldr	r2, [r1, r2, lsl #2]
   12044:	lsr	r3, r2, r3
   12048:	tst	r3, #1
   1204c:	bne	1205c <abort@plt+0x1310>
   12050:	ldr	r3, [sp, #56]	; 0x38
   12054:	cmp	r3, #0
   12058:	beq	11ee8 <abort@plt+0x119c>
   1205c:	ldr	r3, [sp, #32]
   12060:	cmp	r3, #0
   12064:	bne	12870 <abort@plt+0x1b24>
   12068:	ldr	r3, [sp, #44]	; 0x2c
   1206c:	eor	r3, r3, #1
   12070:	cmp	sl, #2
   12074:	movne	r3, #0
   12078:	andeq	r3, r3, #1
   1207c:	cmp	r3, #0
   12080:	beq	120c4 <abort@plt+0x1378>
   12084:	cmp	r7, fp
   12088:	ldrhi	r2, [sp, #36]	; 0x24
   1208c:	movhi	r1, #39	; 0x27
   12090:	strbhi	r1, [r2, fp]
   12094:	add	r2, fp, #1
   12098:	cmp	r7, r2
   1209c:	ldrhi	r1, [sp, #36]	; 0x24
   120a0:	movhi	r0, #36	; 0x24
   120a4:	strbhi	r0, [r1, r2]
   120a8:	add	r2, fp, #2
   120ac:	cmp	r7, r2
   120b0:	ldrhi	r1, [sp, #36]	; 0x24
   120b4:	movhi	r0, #39	; 0x27
   120b8:	strbhi	r0, [r1, r2]
   120bc:	add	fp, fp, #3
   120c0:	str	r3, [sp, #44]	; 0x2c
   120c4:	cmp	r7, fp
   120c8:	ldrhi	r3, [sp, #36]	; 0x24
   120cc:	movhi	r2, #92	; 0x5c
   120d0:	strbhi	r2, [r3, fp]
   120d4:	add	fp, fp, #1
   120d8:	cmp	fp, r7
   120dc:	ldrcc	r3, [sp, #36]	; 0x24
   120e0:	strbcc	r4, [r3, fp]
   120e4:	add	fp, fp, #1
   120e8:	ldr	r3, [sp, #40]	; 0x28
   120ec:	cmp	r8, #0
   120f0:	moveq	r3, #0
   120f4:	str	r3, [sp, #40]	; 0x28
   120f8:	add	r6, r6, #1
   120fc:	ldr	r3, [sp, #28]
   12100:	cmn	r3, #1
   12104:	beq	12690 <abort@plt+0x1944>
   12108:	ldr	r3, [sp, #28]
   1210c:	subs	r8, r3, r6
   12110:	movne	r8, #1
   12114:	cmp	r8, #0
   12118:	beq	126a4 <abort@plt+0x1958>
   1211c:	ldr	r5, [sp, #48]	; 0x30
   12120:	cmp	sl, #2
   12124:	moveq	r5, #0
   12128:	andne	r5, r5, #1
   1212c:	ldr	r3, [sp, #60]	; 0x3c
   12130:	adds	r9, r3, #0
   12134:	movne	r9, #1
   12138:	ands	r2, r5, r9
   1213c:	str	r2, [sp, #56]	; 0x38
   12140:	beq	11a08 <abort@plt+0xcbc>
   12144:	add	r4, r6, r3
   12148:	ldr	r2, [sp, #28]
   1214c:	cmp	r3, #1
   12150:	movls	r3, #0
   12154:	movhi	r3, #1
   12158:	cmn	r2, #1
   1215c:	movne	r3, #0
   12160:	cmp	r3, #0
   12164:	beq	12174 <abort@plt+0x1428>
   12168:	ldr	r0, [sp, #52]	; 0x34
   1216c:	bl	10c98 <strlen@plt>
   12170:	str	r0, [sp, #28]
   12174:	ldr	r3, [sp, #28]
   12178:	cmp	r3, r4
   1217c:	bcc	11a00 <abort@plt+0xcb4>
   12180:	ldr	r2, [sp, #60]	; 0x3c
   12184:	ldr	r1, [sp, #72]	; 0x48
   12188:	ldr	r3, [sp, #52]	; 0x34
   1218c:	add	r0, r3, r6
   12190:	bl	10bb4 <memcmp@plt>
   12194:	cmp	r0, #0
   12198:	bne	11c20 <abort@plt+0xed4>
   1219c:	ldr	r3, [sp, #32]
   121a0:	cmp	r3, #0
   121a4:	beq	11a08 <abort@plt+0xcbc>
   121a8:	mov	r8, sl
   121ac:	mov	sl, r7
   121b0:	b	12800 <abort@plt+0x1ab4>
   121b4:	mov	r8, sl
   121b8:	mov	sl, r7
   121bc:	b	12800 <abort@plt+0x1ab4>
   121c0:	cmp	sl, #2
   121c4:	strne	r8, [sp, #80]	; 0x50
   121c8:	movne	r5, #0
   121cc:	bne	12004 <abort@plt+0x12b8>
   121d0:	ldr	r3, [sp, #32]
   121d4:	cmp	r3, #0
   121d8:	bne	127ec <abort@plt+0x1aa0>
   121dc:	ldr	r2, [sp, #76]	; 0x4c
   121e0:	adds	r3, r7, #0
   121e4:	movne	r3, #1
   121e8:	cmp	r2, #0
   121ec:	movne	r3, #0
   121f0:	cmp	r3, #0
   121f4:	movne	r3, #0
   121f8:	bne	12228 <abort@plt+0x14dc>
   121fc:	cmp	r7, fp
   12200:	ldrhi	r3, [sp, #36]	; 0x24
   12204:	movhi	r2, #39	; 0x27
   12208:	strbhi	r2, [r3, fp]
   1220c:	add	r3, fp, #1
   12210:	cmp	r7, r3
   12214:	ldrhi	r2, [sp, #36]	; 0x24
   12218:	movhi	r1, #92	; 0x5c
   1221c:	strbhi	r1, [r2, r3]
   12220:	mov	r3, r7
   12224:	ldr	r7, [sp, #76]	; 0x4c
   12228:	add	r2, fp, #2
   1222c:	cmp	r2, r3
   12230:	ldrcc	r1, [sp, #36]	; 0x24
   12234:	movcc	r0, #39	; 0x27
   12238:	strbcc	r0, [r1, r2]
   1223c:	add	fp, fp, #3
   12240:	ldr	r2, [sp, #32]
   12244:	mov	r5, r2
   12248:	str	r8, [sp, #80]	; 0x50
   1224c:	str	r2, [sp, #44]	; 0x2c
   12250:	str	r7, [sp, #76]	; 0x4c
   12254:	mov	r7, r3
   12258:	b	12004 <abort@plt+0x12b8>
   1225c:	ldr	r5, [sp, #84]	; 0x54
   12260:	cmp	r5, #1
   12264:	beq	12294 <abort@plt+0x1548>
   12268:	mov	r3, #0
   1226c:	str	r3, [sp, #104]	; 0x68
   12270:	str	r3, [sp, #108]	; 0x6c
   12274:	ldr	r3, [sp, #28]
   12278:	cmn	r3, #1
   1227c:	beq	122c8 <abort@plt+0x157c>
   12280:	mov	r3, #0
   12284:	str	r4, [sp, #88]	; 0x58
   12288:	str	fp, [sp, #92]	; 0x5c
   1228c:	mov	fp, r3
   12290:	b	123f0 <abort@plt+0x16a4>
   12294:	bl	10c80 <__ctype_b_loc@plt>
   12298:	ldr	r2, [r0]
   1229c:	lsl	r3, r4, #1
   122a0:	ldrh	r8, [r2, r3]
   122a4:	lsr	r8, r8, #14
   122a8:	and	r8, r8, #1
   122ac:	mov	r2, r5
   122b0:	eor	r5, r8, #1
   122b4:	ldr	r3, [sp, #48]	; 0x30
   122b8:	and	r5, r5, r3
   122bc:	ands	r5, r5, #255	; 0xff
   122c0:	beq	12004 <abort@plt+0x12b8>
   122c4:	b	12488 <abort@plt+0x173c>
   122c8:	ldr	r0, [sp, #52]	; 0x34
   122cc:	bl	10c98 <strlen@plt>
   122d0:	str	r0, [sp, #28]
   122d4:	b	12280 <abort@plt+0x1534>
   122d8:	mov	r2, fp
   122dc:	mov	r1, r4
   122e0:	ldr	r4, [sp, #88]	; 0x58
   122e4:	ldr	fp, [sp, #92]	; 0x5c
   122e8:	ldr	r0, [sp, #28]
   122ec:	cmp	r0, r5
   122f0:	bls	124bc <abort@plt+0x1770>
   122f4:	ldrb	r3, [r1]
   122f8:	cmp	r3, #0
   122fc:	beq	124c4 <abort@plt+0x1778>
   12300:	mov	r3, r1
   12304:	add	r2, r2, #1
   12308:	add	r1, r6, r2
   1230c:	cmp	r0, r1
   12310:	bls	124cc <abort@plt+0x1780>
   12314:	ldrb	r1, [r3, #1]!
   12318:	cmp	r1, #0
   1231c:	bne	12304 <abort@plt+0x15b8>
   12320:	mov	r8, #0
   12324:	b	12480 <abort@plt+0x1734>
   12328:	cmp	r4, r5
   1232c:	beq	123cc <abort@plt+0x1680>
   12330:	ldrb	r3, [r4, #1]!
   12334:	sub	r3, r3, #91	; 0x5b
   12338:	cmp	r3, #33	; 0x21
   1233c:	ldrls	pc, [pc, r3, lsl #2]
   12340:	b	12328 <abort@plt+0x15dc>
   12344:	strdeq	r2, [r1], -r8
   12348:	strdeq	r2, [r1], -r8
   1234c:	andeq	r2, r1, r8, lsr #6
   12350:	strdeq	r2, [r1], -r8
   12354:	andeq	r2, r1, r8, lsr #6
   12358:	strdeq	r2, [r1], -r8
   1235c:	andeq	r2, r1, r8, lsr #6
   12360:	andeq	r2, r1, r8, lsr #6
   12364:	andeq	r2, r1, r8, lsr #6
   12368:	andeq	r2, r1, r8, lsr #6
   1236c:	andeq	r2, r1, r8, lsr #6
   12370:	andeq	r2, r1, r8, lsr #6
   12374:	andeq	r2, r1, r8, lsr #6
   12378:	andeq	r2, r1, r8, lsr #6
   1237c:	andeq	r2, r1, r8, lsr #6
   12380:	andeq	r2, r1, r8, lsr #6
   12384:	andeq	r2, r1, r8, lsr #6
   12388:	andeq	r2, r1, r8, lsr #6
   1238c:	andeq	r2, r1, r8, lsr #6
   12390:	andeq	r2, r1, r8, lsr #6
   12394:	andeq	r2, r1, r8, lsr #6
   12398:	andeq	r2, r1, r8, lsr #6
   1239c:	andeq	r2, r1, r8, lsr #6
   123a0:	andeq	r2, r1, r8, lsr #6
   123a4:	andeq	r2, r1, r8, lsr #6
   123a8:	andeq	r2, r1, r8, lsr #6
   123ac:	andeq	r2, r1, r8, lsr #6
   123b0:	andeq	r2, r1, r8, lsr #6
   123b4:	andeq	r2, r1, r8, lsr #6
   123b8:	andeq	r2, r1, r8, lsr #6
   123bc:	andeq	r2, r1, r8, lsr #6
   123c0:	andeq	r2, r1, r8, lsr #6
   123c4:	andeq	r2, r1, r8, lsr #6
   123c8:	strdeq	r2, [r1], -r8
   123cc:	ldr	r0, [sp, #100]	; 0x64
   123d0:	bl	10bf0 <iswprint@plt>
   123d4:	cmp	r0, #0
   123d8:	moveq	r8, #0
   123dc:	add	fp, fp, r9
   123e0:	add	r0, sp, #104	; 0x68
   123e4:	bl	10ba8 <mbsinit@plt>
   123e8:	cmp	r0, #0
   123ec:	bne	12460 <abort@plt+0x1714>
   123f0:	add	r5, r6, fp
   123f4:	ldr	r3, [sp, #52]	; 0x34
   123f8:	add	r4, r3, r5
   123fc:	add	r3, sp, #104	; 0x68
   12400:	ldr	r2, [sp, #28]
   12404:	sub	r2, r2, r5
   12408:	mov	r1, r4
   1240c:	add	r0, sp, #100	; 0x64
   12410:	bl	13f7c <abort@plt+0x3230>
   12414:	subs	r9, r0, #0
   12418:	beq	124d4 <abort@plt+0x1788>
   1241c:	cmn	r9, #1
   12420:	beq	12470 <abort@plt+0x1724>
   12424:	cmn	r9, #2
   12428:	beq	122d8 <abort@plt+0x158c>
   1242c:	ldr	r3, [sp, #32]
   12430:	cmp	sl, #2
   12434:	movne	r3, #0
   12438:	andeq	r3, r3, #1
   1243c:	cmp	r3, #0
   12440:	beq	123cc <abort@plt+0x1680>
   12444:	cmp	r9, #1
   12448:	bls	123cc <abort@plt+0x1680>
   1244c:	sub	r3, r9, #1
   12450:	add	r5, r3, r5
   12454:	ldr	r3, [sp, #52]	; 0x34
   12458:	add	r5, r3, r5
   1245c:	b	12330 <abort@plt+0x15e4>
   12460:	ldr	r4, [sp, #88]	; 0x58
   12464:	mov	r2, fp
   12468:	ldr	fp, [sp, #92]	; 0x5c
   1246c:	b	12480 <abort@plt+0x1734>
   12470:	ldr	r4, [sp, #88]	; 0x58
   12474:	mov	r2, fp
   12478:	ldr	fp, [sp, #92]	; 0x5c
   1247c:	mov	r8, #0
   12480:	cmp	r2, #1
   12484:	bls	122b0 <abort@plt+0x1564>
   12488:	add	r1, r6, r2
   1248c:	ldr	ip, [sp, #64]	; 0x40
   12490:	mov	r5, #0
   12494:	eor	r3, r8, #1
   12498:	ldr	r2, [sp, #48]	; 0x30
   1249c:	and	r3, r3, r2
   124a0:	uxtb	r3, r3
   124a4:	ldr	r9, [sp, #32]
   124a8:	ldr	lr, [sp, #44]	; 0x2c
   124ac:	ldr	r2, [sp, #56]	; 0x38
   124b0:	str	r8, [sp, #56]	; 0x38
   124b4:	ldr	r0, [sp, #36]	; 0x24
   124b8:	b	12554 <abort@plt+0x1808>
   124bc:	mov	r8, #0
   124c0:	b	12480 <abort@plt+0x1734>
   124c4:	mov	r8, #0
   124c8:	b	12480 <abort@plt+0x1734>
   124cc:	mov	r8, #0
   124d0:	b	12480 <abort@plt+0x1734>
   124d4:	ldr	r4, [sp, #88]	; 0x58
   124d8:	mov	r2, fp
   124dc:	ldr	fp, [sp, #92]	; 0x5c
   124e0:	b	12480 <abort@plt+0x1734>
   124e4:	cmp	r2, #0
   124e8:	beq	124fc <abort@plt+0x17b0>
   124ec:	cmp	r7, fp
   124f0:	movhi	r2, #92	; 0x5c
   124f4:	strbhi	r2, [r0, fp]
   124f8:	add	fp, fp, #1
   124fc:	add	r8, r6, #1
   12500:	cmp	r1, r8
   12504:	bls	1260c <abort@plt+0x18c0>
   12508:	eor	r2, r5, #1
   1250c:	and	r2, r2, lr
   12510:	ands	r2, r2, #255	; 0xff
   12514:	beq	12628 <abort@plt+0x18dc>
   12518:	cmp	r7, fp
   1251c:	movhi	r2, #39	; 0x27
   12520:	strbhi	r2, [r0, fp]
   12524:	add	r2, fp, #1
   12528:	cmp	r7, r2
   1252c:	movhi	lr, #39	; 0x27
   12530:	strbhi	lr, [r0, r2]
   12534:	add	fp, fp, #2
   12538:	mov	r6, r8
   1253c:	mov	r2, r3
   12540:	mov	lr, r3
   12544:	cmp	r7, fp
   12548:	strbhi	r4, [r0, fp]
   1254c:	add	fp, fp, #1
   12550:	ldrb	r4, [ip, #1]!
   12554:	cmp	r3, #0
   12558:	beq	124e4 <abort@plt+0x1798>
   1255c:	cmp	r9, #0
   12560:	bne	12864 <abort@plt+0x1b18>
   12564:	eor	r5, lr, #1
   12568:	cmp	sl, #2
   1256c:	movne	r5, #0
   12570:	andeq	r5, r5, #1
   12574:	cmp	r5, #0
   12578:	beq	125b0 <abort@plt+0x1864>
   1257c:	cmp	r7, fp
   12580:	movhi	lr, #39	; 0x27
   12584:	strbhi	lr, [r0, fp]
   12588:	add	lr, fp, #1
   1258c:	cmp	r7, lr
   12590:	movhi	r8, #36	; 0x24
   12594:	strbhi	r8, [r0, lr]
   12598:	add	lr, fp, #2
   1259c:	cmp	r7, lr
   125a0:	movhi	r8, #39	; 0x27
   125a4:	strbhi	r8, [r0, lr]
   125a8:	add	fp, fp, #3
   125ac:	mov	lr, r5
   125b0:	cmp	r7, fp
   125b4:	movhi	r5, #92	; 0x5c
   125b8:	strbhi	r5, [r0, fp]
   125bc:	add	r5, fp, #1
   125c0:	cmp	r7, r5
   125c4:	lsrhi	r8, r4, #6
   125c8:	addhi	r8, r8, #48	; 0x30
   125cc:	strbhi	r8, [r0, r5]
   125d0:	add	r8, fp, #2
   125d4:	cmp	r7, r8
   125d8:	lsrhi	r5, r4, #3
   125dc:	andhi	r5, r5, #7
   125e0:	addhi	r5, r5, #48	; 0x30
   125e4:	strbhi	r5, [r0, r8]
   125e8:	add	fp, fp, #3
   125ec:	and	r4, r4, #7
   125f0:	add	r4, r4, #48	; 0x30
   125f4:	add	r5, r6, #1
   125f8:	cmp	r1, r5
   125fc:	bls	12618 <abort@plt+0x18cc>
   12600:	mov	r6, r5
   12604:	mov	r5, r3
   12608:	b	12544 <abort@plt+0x17f8>
   1260c:	str	lr, [sp, #44]	; 0x2c
   12610:	ldr	r8, [sp, #56]	; 0x38
   12614:	b	11ee8 <abort@plt+0x119c>
   12618:	str	lr, [sp, #44]	; 0x2c
   1261c:	ldr	r8, [sp, #56]	; 0x38
   12620:	mov	r5, r3
   12624:	b	11ee8 <abort@plt+0x119c>
   12628:	mov	r6, r8
   1262c:	b	12544 <abort@plt+0x17f8>
   12630:	mov	r5, #0
   12634:	b	12004 <abort@plt+0x12b8>
   12638:	mov	r8, r5
   1263c:	ldr	r5, [sp, #48]	; 0x30
   12640:	mov	r4, #48	; 0x30
   12644:	b	12004 <abort@plt+0x12b8>
   12648:	ldr	r8, [sp, #32]
   1264c:	mov	r4, #48	; 0x30
   12650:	b	12004 <abort@plt+0x12b8>
   12654:	ldr	r8, [sp, #32]
   12658:	mov	r4, #48	; 0x30
   1265c:	b	12004 <abort@plt+0x12b8>
   12660:	mov	r8, #0
   12664:	mov	r5, r8
   12668:	b	12004 <abort@plt+0x12b8>
   1266c:	mov	r8, #0
   12670:	mov	r5, r8
   12674:	b	12004 <abort@plt+0x12b8>
   12678:	mov	r8, #0
   1267c:	mov	r5, r8
   12680:	b	12004 <abort@plt+0x12b8>
   12684:	mov	r8, #0
   12688:	mov	r5, r8
   1268c:	b	12004 <abort@plt+0x12b8>
   12690:	ldr	r3, [sp, #52]	; 0x34
   12694:	ldrb	r8, [r3, r6]
   12698:	adds	r8, r8, #0
   1269c:	movne	r8, #1
   126a0:	b	12114 <abort@plt+0x13c8>
   126a4:	cmp	sl, #2
   126a8:	movne	r3, #0
   126ac:	moveq	r3, #1
   126b0:	ldr	r1, [sp, #32]
   126b4:	mov	r2, r1
   126b8:	and	r2, r2, r3
   126bc:	cmp	fp, #0
   126c0:	movne	r2, #0
   126c4:	andeq	r2, r2, #1
   126c8:	cmp	r2, #0
   126cc:	bne	1287c <abort@plt+0x1b30>
   126d0:	eor	r2, r1, #1
   126d4:	and	r3, r3, r2
   126d8:	ldr	r1, [sp, #80]	; 0x50
   126dc:	tst	r1, r3
   126e0:	beq	12758 <abort@plt+0x1a0c>
   126e4:	ldr	r3, [sp, #40]	; 0x28
   126e8:	cmp	r3, #0
   126ec:	bne	12714 <abort@plt+0x19c8>
   126f0:	ldr	r1, [sp, #76]	; 0x4c
   126f4:	clz	r3, r7
   126f8:	lsr	r3, r3, #5
   126fc:	cmp	r1, #0
   12700:	moveq	r3, #0
   12704:	cmp	r3, #0
   12708:	beq	12758 <abort@plt+0x1a0c>
   1270c:	ldr	r7, [sp, #76]	; 0x4c
   12710:	b	117a8 <abort@plt+0xa5c>
   12714:	ldr	r3, [sp, #168]	; 0xa8
   12718:	str	r3, [sp, #16]
   1271c:	ldr	r3, [sp, #164]	; 0xa4
   12720:	str	r3, [sp, #12]
   12724:	ldr	r3, [sp, #160]	; 0xa0
   12728:	str	r3, [sp, #8]
   1272c:	ldr	r3, [sp, #156]	; 0x9c
   12730:	str	r3, [sp, #4]
   12734:	mov	r3, #5
   12738:	str	r3, [sp]
   1273c:	ldr	r3, [sp, #28]
   12740:	ldr	r2, [sp, #52]	; 0x34
   12744:	ldr	r1, [sp, #76]	; 0x4c
   12748:	ldr	r0, [sp, #36]	; 0x24
   1274c:	bl	11748 <abort@plt+0x9fc>
   12750:	mov	fp, r0
   12754:	b	12858 <abort@plt+0x1b0c>
   12758:	mov	sl, r7
   1275c:	ldr	r3, [sp, #72]	; 0x48
   12760:	cmp	r3, #0
   12764:	moveq	r2, #0
   12768:	andne	r2, r2, #1
   1276c:	cmp	r2, #0
   12770:	beq	127a0 <abort@plt+0x1a54>
   12774:	mov	r2, r3
   12778:	ldrb	r3, [r3]
   1277c:	cmp	r3, #0
   12780:	beq	127a0 <abort@plt+0x1a54>
   12784:	ldr	r1, [sp, #36]	; 0x24
   12788:	cmp	sl, fp
   1278c:	strbhi	r3, [r1, fp]
   12790:	add	fp, fp, #1
   12794:	ldrb	r3, [r2, #1]!
   12798:	cmp	r3, #0
   1279c:	bne	12788 <abort@plt+0x1a3c>
   127a0:	cmp	sl, fp
   127a4:	movhi	r3, #0
   127a8:	ldrhi	r2, [sp, #36]	; 0x24
   127ac:	strbhi	r3, [r2, fp]
   127b0:	b	12858 <abort@plt+0x1b0c>
   127b4:	mov	r8, sl
   127b8:	mov	sl, r7
   127bc:	ldr	r3, [sp, #32]
   127c0:	str	r3, [sp, #48]	; 0x30
   127c4:	b	12800 <abort@plt+0x1ab4>
   127c8:	mov	r8, sl
   127cc:	mov	sl, r7
   127d0:	b	12800 <abort@plt+0x1ab4>
   127d4:	mov	r8, sl
   127d8:	mov	sl, r7
   127dc:	b	12800 <abort@plt+0x1ab4>
   127e0:	andeq	r4, r1, r8, asr #22
   127e4:	andeq	r4, r1, r8, asr fp
   127e8:	andeq	r4, r1, ip, asr #22
   127ec:	mov	r8, sl
   127f0:	mov	sl, r7
   127f4:	b	12800 <abort@plt+0x1ab4>
   127f8:	mov	r8, sl
   127fc:	mov	sl, r7
   12800:	ldr	r3, [sp, #48]	; 0x30
   12804:	cmp	r8, #2
   12808:	movne	r3, #0
   1280c:	andeq	r3, r3, #1
   12810:	cmp	r3, #0
   12814:	movne	r8, #4
   12818:	ldr	r3, [sp, #168]	; 0xa8
   1281c:	str	r3, [sp, #16]
   12820:	ldr	r3, [sp, #164]	; 0xa4
   12824:	str	r3, [sp, #12]
   12828:	mov	r3, #0
   1282c:	str	r3, [sp, #8]
   12830:	ldr	r3, [sp, #156]	; 0x9c
   12834:	bic	r3, r3, #2
   12838:	str	r3, [sp, #4]
   1283c:	str	r8, [sp]
   12840:	ldr	r3, [sp, #28]
   12844:	ldr	r2, [sp, #52]	; 0x34
   12848:	mov	r1, sl
   1284c:	ldr	r0, [sp, #36]	; 0x24
   12850:	bl	11748 <abort@plt+0x9fc>
   12854:	mov	fp, r0
   12858:	mov	r0, fp
   1285c:	add	sp, sp, #116	; 0x74
   12860:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12864:	mov	r8, sl
   12868:	mov	sl, r7
   1286c:	b	12800 <abort@plt+0x1ab4>
   12870:	mov	r8, sl
   12874:	mov	sl, r7
   12878:	b	12800 <abort@plt+0x1ab4>
   1287c:	mov	r8, sl
   12880:	mov	sl, r7
   12884:	b	12800 <abort@plt+0x1ab4>
   12888:	mov	r8, sl
   1288c:	mov	sl, r7
   12890:	b	12818 <abort@plt+0x1acc>
   12894:	mov	r3, #1
   12898:	str	r3, [sp, #32]
   1289c:	str	r3, [sp, #48]	; 0x30
   128a0:	str	r3, [sp, #60]	; 0x3c
   128a4:	ldr	r3, [pc, #-196]	; 127e8 <abort@plt+0x1a9c>
   128a8:	str	r3, [sp, #72]	; 0x48
   128ac:	mov	fp, #0
   128b0:	mov	sl, #5
   128b4:	b	11804 <abort@plt+0xab8>
   128b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   128bc:	sub	sp, sp, #52	; 0x34
   128c0:	mov	r5, r0
   128c4:	str	r1, [sp, #24]
   128c8:	str	r2, [sp, #28]
   128cc:	mov	r4, r3
   128d0:	bl	10cb0 <__errno_location@plt>
   128d4:	str	r0, [sp, #32]
   128d8:	ldr	r3, [r0]
   128dc:	str	r3, [sp, #36]	; 0x24
   128e0:	ldr	r3, [pc, #396]	; 12a74 <abort@plt+0x1d28>
   128e4:	ldr	r6, [r3]
   128e8:	cmn	r5, #-2147483647	; 0x80000001
   128ec:	movne	r3, #0
   128f0:	moveq	r3, #1
   128f4:	orrs	r3, r3, r5, lsr #31
   128f8:	bne	12a38 <abort@plt+0x1cec>
   128fc:	ldr	r3, [pc, #368]	; 12a74 <abort@plt+0x1d28>
   12900:	ldr	r2, [r3, #4]
   12904:	cmp	r5, r2
   12908:	blt	12970 <abort@plt+0x1c24>
   1290c:	str	r2, [sp, #44]	; 0x2c
   12910:	add	r3, r3, #8
   12914:	cmp	r6, r3
   12918:	beq	12a3c <abort@plt+0x1cf0>
   1291c:	sub	r2, r5, r2
   12920:	mov	r3, #8
   12924:	str	r3, [sp]
   12928:	mvn	r3, #-2147483648	; 0x80000000
   1292c:	add	r2, r2, #1
   12930:	add	r1, sp, #44	; 0x2c
   12934:	mov	r0, r6
   12938:	bl	137bc <abort@plt+0x2a70>
   1293c:	mov	r6, r0
   12940:	ldr	r3, [pc, #300]	; 12a74 <abort@plt+0x1d28>
   12944:	str	r0, [r3]
   12948:	ldr	r7, [pc, #292]	; 12a74 <abort@plt+0x1d28>
   1294c:	ldr	r0, [r7, #4]
   12950:	ldr	r2, [sp, #44]	; 0x2c
   12954:	sub	r2, r2, r0
   12958:	lsl	r2, r2, #3
   1295c:	mov	r1, #0
   12960:	add	r0, r6, r0, lsl #3
   12964:	bl	10cc8 <memset@plt>
   12968:	ldr	r3, [sp, #44]	; 0x2c
   1296c:	str	r3, [r7, #4]
   12970:	add	fp, r6, r5, lsl #3
   12974:	ldr	r8, [r6, r5, lsl #3]
   12978:	ldr	r7, [fp, #4]
   1297c:	ldr	r9, [r4, #4]
   12980:	orr	r9, r9, #1
   12984:	add	sl, r4, #8
   12988:	ldr	r3, [r4, #44]	; 0x2c
   1298c:	str	r3, [sp, #16]
   12990:	ldr	r3, [r4, #40]	; 0x28
   12994:	str	r3, [sp, #12]
   12998:	str	sl, [sp, #8]
   1299c:	str	r9, [sp, #4]
   129a0:	ldr	r3, [r4]
   129a4:	str	r3, [sp]
   129a8:	ldr	r3, [sp, #28]
   129ac:	ldr	r2, [sp, #24]
   129b0:	mov	r1, r8
   129b4:	mov	r0, r7
   129b8:	bl	11748 <abort@plt+0x9fc>
   129bc:	cmp	r8, r0
   129c0:	bhi	12a20 <abort@plt+0x1cd4>
   129c4:	add	r8, r0, #1
   129c8:	str	r8, [r6, r5, lsl #3]
   129cc:	ldr	r3, [pc, #164]	; 12a78 <abort@plt+0x1d2c>
   129d0:	cmp	r7, r3
   129d4:	beq	129e0 <abort@plt+0x1c94>
   129d8:	mov	r0, r7
   129dc:	bl	13e48 <abort@plt+0x30fc>
   129e0:	mov	r0, r8
   129e4:	bl	13638 <abort@plt+0x28ec>
   129e8:	mov	r7, r0
   129ec:	str	r0, [fp, #4]
   129f0:	ldr	r3, [r4, #44]	; 0x2c
   129f4:	str	r3, [sp, #16]
   129f8:	ldr	r3, [r4, #40]	; 0x28
   129fc:	str	r3, [sp, #12]
   12a00:	str	sl, [sp, #8]
   12a04:	str	r9, [sp, #4]
   12a08:	ldr	r3, [r4]
   12a0c:	str	r3, [sp]
   12a10:	ldr	r3, [sp, #28]
   12a14:	ldr	r2, [sp, #24]
   12a18:	mov	r1, r8
   12a1c:	bl	11748 <abort@plt+0x9fc>
   12a20:	ldr	r3, [sp, #32]
   12a24:	ldr	r2, [sp, #36]	; 0x24
   12a28:	str	r2, [r3]
   12a2c:	mov	r0, r7
   12a30:	add	sp, sp, #52	; 0x34
   12a34:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12a38:	bl	10d4c <abort@plt>
   12a3c:	sub	r2, r5, r2
   12a40:	mov	r3, #8
   12a44:	str	r3, [sp]
   12a48:	mvn	r3, #-2147483648	; 0x80000000
   12a4c:	add	r2, r2, #1
   12a50:	add	r1, sp, #44	; 0x2c
   12a54:	mov	r0, #0
   12a58:	bl	137bc <abort@plt+0x2a70>
   12a5c:	mov	r6, r0
   12a60:	ldr	r3, [pc, #12]	; 12a74 <abort@plt+0x1d28>
   12a64:	str	r0, [r3], #8
   12a68:	ldm	r3, {r0, r1}
   12a6c:	stm	r6, {r0, r1}
   12a70:	b	12948 <abort@plt+0x1bfc>
   12a74:	ldrdeq	r6, [r2], -r0
   12a78:	andeq	r6, r2, r0, asr #2
   12a7c:	push	{r4, r5, r6, lr}
   12a80:	mov	r4, r0
   12a84:	bl	10cb0 <__errno_location@plt>
   12a88:	mov	r5, r0
   12a8c:	ldr	r6, [r0]
   12a90:	cmp	r4, #0
   12a94:	ldr	r3, [pc, #20]	; 12ab0 <abort@plt+0x1d64>
   12a98:	moveq	r4, r3
   12a9c:	mov	r1, #48	; 0x30
   12aa0:	mov	r0, r4
   12aa4:	bl	13b24 <abort@plt+0x2dd8>
   12aa8:	str	r6, [r5]
   12aac:	pop	{r4, r5, r6, pc}
   12ab0:	andeq	r6, r2, r0, asr #4
   12ab4:	subs	r3, r0, #0
   12ab8:	ldr	r2, [pc, #8]	; 12ac8 <abort@plt+0x1d7c>
   12abc:	moveq	r3, r2
   12ac0:	ldr	r0, [r3]
   12ac4:	bx	lr
   12ac8:	andeq	r6, r2, r0, asr #4
   12acc:	subs	r3, r0, #0
   12ad0:	ldr	r2, [pc, #8]	; 12ae0 <abort@plt+0x1d94>
   12ad4:	moveq	r3, r2
   12ad8:	str	r1, [r3]
   12adc:	bx	lr
   12ae0:	andeq	r6, r2, r0, asr #4
   12ae4:	push	{lr}		; (str lr, [sp, #-4]!)
   12ae8:	subs	r3, r0, #0
   12aec:	ldr	r0, [pc, #44]	; 12b20 <abort@plt+0x1dd4>
   12af0:	moveq	r3, r0
   12af4:	add	r3, r3, #8
   12af8:	lsr	lr, r1, #5
   12afc:	and	r1, r1, #31
   12b00:	ldr	ip, [r3, lr, lsl #2]
   12b04:	lsr	r0, ip, r1
   12b08:	eor	r2, r2, r0
   12b0c:	and	r2, r2, #1
   12b10:	eor	r1, ip, r2, lsl r1
   12b14:	str	r1, [r3, lr, lsl #2]
   12b18:	and	r0, r0, #1
   12b1c:	pop	{pc}		; (ldr pc, [sp], #4)
   12b20:	andeq	r6, r2, r0, asr #4
   12b24:	subs	r3, r0, #0
   12b28:	ldr	r2, [pc, #12]	; 12b3c <abort@plt+0x1df0>
   12b2c:	moveq	r3, r2
   12b30:	ldr	r0, [r3, #4]
   12b34:	str	r1, [r3, #4]
   12b38:	bx	lr
   12b3c:	andeq	r6, r2, r0, asr #4
   12b40:	subs	r3, r0, #0
   12b44:	ldr	r0, [pc, #40]	; 12b74 <abort@plt+0x1e28>
   12b48:	moveq	r3, r0
   12b4c:	mov	r0, #10
   12b50:	str	r0, [r3]
   12b54:	cmp	r2, #0
   12b58:	cmpne	r1, #0
   12b5c:	beq	12b6c <abort@plt+0x1e20>
   12b60:	str	r1, [r3, #40]	; 0x28
   12b64:	str	r2, [r3, #44]	; 0x2c
   12b68:	bx	lr
   12b6c:	push	{r4, lr}
   12b70:	bl	10d4c <abort@plt>
   12b74:	andeq	r6, r2, r0, asr #4
   12b78:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12b7c:	sub	sp, sp, #24
   12b80:	mov	r7, r0
   12b84:	mov	r8, r1
   12b88:	mov	r9, r2
   12b8c:	mov	sl, r3
   12b90:	ldr	r4, [sp, #56]	; 0x38
   12b94:	cmp	r4, #0
   12b98:	ldr	r3, [pc, #84]	; 12bf4 <abort@plt+0x1ea8>
   12b9c:	moveq	r4, r3
   12ba0:	bl	10cb0 <__errno_location@plt>
   12ba4:	mov	r5, r0
   12ba8:	ldr	r6, [r0]
   12bac:	ldr	r3, [r4, #44]	; 0x2c
   12bb0:	str	r3, [sp, #16]
   12bb4:	ldr	r3, [r4, #40]	; 0x28
   12bb8:	str	r3, [sp, #12]
   12bbc:	add	r3, r4, #8
   12bc0:	str	r3, [sp, #8]
   12bc4:	ldr	r3, [r4, #4]
   12bc8:	str	r3, [sp, #4]
   12bcc:	ldr	r3, [r4]
   12bd0:	str	r3, [sp]
   12bd4:	mov	r3, sl
   12bd8:	mov	r2, r9
   12bdc:	mov	r1, r8
   12be0:	mov	r0, r7
   12be4:	bl	11748 <abort@plt+0x9fc>
   12be8:	str	r6, [r5]
   12bec:	add	sp, sp, #24
   12bf0:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12bf4:	andeq	r6, r2, r0, asr #4
   12bf8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12bfc:	sub	sp, sp, #44	; 0x2c
   12c00:	str	r0, [sp, #28]
   12c04:	str	r1, [sp, #32]
   12c08:	mov	r6, r2
   12c0c:	subs	r4, r3, #0
   12c10:	ldr	r3, [pc, #172]	; 12cc4 <abort@plt+0x1f78>
   12c14:	moveq	r4, r3
   12c18:	bl	10cb0 <__errno_location@plt>
   12c1c:	mov	r7, r0
   12c20:	ldr	fp, [r0]
   12c24:	ldr	r5, [r4, #4]
   12c28:	cmp	r6, #0
   12c2c:	orreq	r5, r5, #1
   12c30:	add	r9, r4, #8
   12c34:	ldr	r3, [r4, #44]	; 0x2c
   12c38:	str	r3, [sp, #16]
   12c3c:	ldr	r3, [r4, #40]	; 0x28
   12c40:	str	r3, [sp, #12]
   12c44:	str	r9, [sp, #8]
   12c48:	str	r5, [sp, #4]
   12c4c:	ldr	r3, [r4]
   12c50:	str	r3, [sp]
   12c54:	ldr	r3, [sp, #32]
   12c58:	ldr	r2, [sp, #28]
   12c5c:	mov	r1, #0
   12c60:	mov	r0, r1
   12c64:	bl	11748 <abort@plt+0x9fc>
   12c68:	mov	sl, r0
   12c6c:	add	r8, r0, #1
   12c70:	mov	r0, r8
   12c74:	bl	13638 <abort@plt+0x28ec>
   12c78:	str	r0, [sp, #36]	; 0x24
   12c7c:	ldr	r3, [r4, #44]	; 0x2c
   12c80:	str	r3, [sp, #16]
   12c84:	ldr	r3, [r4, #40]	; 0x28
   12c88:	str	r3, [sp, #12]
   12c8c:	str	r9, [sp, #8]
   12c90:	str	r5, [sp, #4]
   12c94:	ldr	r3, [r4]
   12c98:	str	r3, [sp]
   12c9c:	ldr	r3, [sp, #32]
   12ca0:	ldr	r2, [sp, #28]
   12ca4:	mov	r1, r8
   12ca8:	bl	11748 <abort@plt+0x9fc>
   12cac:	str	fp, [r7]
   12cb0:	cmp	r6, #0
   12cb4:	strne	sl, [r6]
   12cb8:	ldr	r0, [sp, #36]	; 0x24
   12cbc:	add	sp, sp, #44	; 0x2c
   12cc0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12cc4:	andeq	r6, r2, r0, asr #4
   12cc8:	push	{r4, lr}
   12ccc:	mov	r3, r2
   12cd0:	mov	r2, #0
   12cd4:	bl	12bf8 <abort@plt+0x1eac>
   12cd8:	pop	{r4, pc}
   12cdc:	push	{r4, r5, r6, r7, r8, lr}
   12ce0:	ldr	r3, [pc, #140]	; 12d74 <abort@plt+0x2028>
   12ce4:	ldr	r7, [r3]
   12ce8:	ldr	r3, [r3, #4]
   12cec:	cmp	r3, #1
   12cf0:	ble	12d1c <abort@plt+0x1fd0>
   12cf4:	mov	r5, r7
   12cf8:	mov	r4, #1
   12cfc:	ldr	r6, [pc, #112]	; 12d74 <abort@plt+0x2028>
   12d00:	ldr	r0, [r5, #12]
   12d04:	bl	13e48 <abort@plt+0x30fc>
   12d08:	add	r4, r4, #1
   12d0c:	add	r5, r5, #8
   12d10:	ldr	r3, [r6, #4]
   12d14:	cmp	r3, r4
   12d18:	bgt	12d00 <abort@plt+0x1fb4>
   12d1c:	ldr	r0, [r7, #4]
   12d20:	ldr	r3, [pc, #80]	; 12d78 <abort@plt+0x202c>
   12d24:	cmp	r0, r3
   12d28:	beq	12d44 <abort@plt+0x1ff8>
   12d2c:	bl	13e48 <abort@plt+0x30fc>
   12d30:	ldr	r3, [pc, #60]	; 12d74 <abort@plt+0x2028>
   12d34:	mov	r2, #256	; 0x100
   12d38:	str	r2, [r3, #8]
   12d3c:	ldr	r2, [pc, #52]	; 12d78 <abort@plt+0x202c>
   12d40:	str	r2, [r3, #12]
   12d44:	ldr	r3, [pc, #48]	; 12d7c <abort@plt+0x2030>
   12d48:	cmp	r7, r3
   12d4c:	beq	12d64 <abort@plt+0x2018>
   12d50:	mov	r0, r7
   12d54:	bl	13e48 <abort@plt+0x30fc>
   12d58:	ldr	r3, [pc, #20]	; 12d74 <abort@plt+0x2028>
   12d5c:	add	r2, r3, #8
   12d60:	str	r2, [r3]
   12d64:	mov	r2, #1
   12d68:	ldr	r3, [pc, #4]	; 12d74 <abort@plt+0x2028>
   12d6c:	str	r2, [r3, #4]
   12d70:	pop	{r4, r5, r6, r7, r8, pc}
   12d74:	ldrdeq	r6, [r2], -r0
   12d78:	andeq	r6, r2, r0, asr #2
   12d7c:	ldrdeq	r6, [r2], -r8
   12d80:	push	{r4, lr}
   12d84:	ldr	r3, [pc, #8]	; 12d94 <abort@plt+0x2048>
   12d88:	mvn	r2, #0
   12d8c:	bl	128b8 <abort@plt+0x1b6c>
   12d90:	pop	{r4, pc}
   12d94:	andeq	r6, r2, r0, asr #4
   12d98:	push	{r4, lr}
   12d9c:	ldr	r3, [pc, #4]	; 12da8 <abort@plt+0x205c>
   12da0:	bl	128b8 <abort@plt+0x1b6c>
   12da4:	pop	{r4, pc}
   12da8:	andeq	r6, r2, r0, asr #4
   12dac:	push	{r4, lr}
   12db0:	mov	r1, r0
   12db4:	mov	r0, #0
   12db8:	bl	12d80 <abort@plt+0x2034>
   12dbc:	pop	{r4, pc}
   12dc0:	push	{r4, lr}
   12dc4:	mov	r2, r1
   12dc8:	mov	r1, r0
   12dcc:	mov	r0, #0
   12dd0:	bl	12d98 <abort@plt+0x204c>
   12dd4:	pop	{r4, pc}
   12dd8:	push	{r4, r5, lr}
   12ddc:	sub	sp, sp, #52	; 0x34
   12de0:	mov	r4, r0
   12de4:	mov	r5, r2
   12de8:	mov	r0, sp
   12dec:	bl	115e0 <abort@plt+0x894>
   12df0:	mov	r3, sp
   12df4:	mvn	r2, #0
   12df8:	mov	r1, r5
   12dfc:	mov	r0, r4
   12e00:	bl	128b8 <abort@plt+0x1b6c>
   12e04:	add	sp, sp, #52	; 0x34
   12e08:	pop	{r4, r5, pc}
   12e0c:	push	{r4, r5, r6, lr}
   12e10:	sub	sp, sp, #48	; 0x30
   12e14:	mov	r4, r0
   12e18:	mov	r5, r2
   12e1c:	mov	r6, r3
   12e20:	mov	r0, sp
   12e24:	bl	115e0 <abort@plt+0x894>
   12e28:	mov	r3, sp
   12e2c:	mov	r2, r6
   12e30:	mov	r1, r5
   12e34:	mov	r0, r4
   12e38:	bl	128b8 <abort@plt+0x1b6c>
   12e3c:	add	sp, sp, #48	; 0x30
   12e40:	pop	{r4, r5, r6, pc}
   12e44:	push	{r4, lr}
   12e48:	mov	r2, r1
   12e4c:	mov	r1, r0
   12e50:	mov	r0, #0
   12e54:	bl	12dd8 <abort@plt+0x208c>
   12e58:	pop	{r4, pc}
   12e5c:	push	{r4, lr}
   12e60:	mov	r3, r2
   12e64:	mov	r2, r1
   12e68:	mov	r1, r0
   12e6c:	mov	r0, #0
   12e70:	bl	12e0c <abort@plt+0x20c0>
   12e74:	pop	{r4, pc}
   12e78:	push	{r4, r5, r6, lr}
   12e7c:	sub	sp, sp, #48	; 0x30
   12e80:	mov	r4, r0
   12e84:	mov	r5, r1
   12e88:	mov	r6, r2
   12e8c:	mov	ip, sp
   12e90:	ldr	lr, [pc, #64]	; 12ed8 <abort@plt+0x218c>
   12e94:	ldm	lr!, {r0, r1, r2, r3}
   12e98:	stmia	ip!, {r0, r1, r2, r3}
   12e9c:	ldm	lr!, {r0, r1, r2, r3}
   12ea0:	stmia	ip!, {r0, r1, r2, r3}
   12ea4:	ldm	lr, {r0, r1, r2, r3}
   12ea8:	stm	ip, {r0, r1, r2, r3}
   12eac:	mov	r2, #1
   12eb0:	mov	r1, r6
   12eb4:	mov	r0, sp
   12eb8:	bl	12ae4 <abort@plt+0x1d98>
   12ebc:	mov	r3, sp
   12ec0:	mov	r2, r5
   12ec4:	mov	r1, r4
   12ec8:	mov	r0, #0
   12ecc:	bl	128b8 <abort@plt+0x1b6c>
   12ed0:	add	sp, sp, #48	; 0x30
   12ed4:	pop	{r4, r5, r6, pc}
   12ed8:	andeq	r6, r2, r0, asr #4
   12edc:	push	{r4, lr}
   12ee0:	mov	r2, r1
   12ee4:	mvn	r1, #0
   12ee8:	bl	12e78 <abort@plt+0x212c>
   12eec:	pop	{r4, pc}
   12ef0:	push	{r4, lr}
   12ef4:	mov	r1, #58	; 0x3a
   12ef8:	bl	12edc <abort@plt+0x2190>
   12efc:	pop	{r4, pc}
   12f00:	push	{r4, lr}
   12f04:	mov	r2, #58	; 0x3a
   12f08:	bl	12e78 <abort@plt+0x212c>
   12f0c:	pop	{r4, pc}
   12f10:	push	{r4, r5, lr}
   12f14:	sub	sp, sp, #100	; 0x64
   12f18:	mov	r4, r0
   12f1c:	mov	r5, r2
   12f20:	mov	r0, sp
   12f24:	bl	115e0 <abort@plt+0x894>
   12f28:	add	lr, sp, #48	; 0x30
   12f2c:	mov	ip, sp
   12f30:	ldm	ip!, {r0, r1, r2, r3}
   12f34:	stmia	lr!, {r0, r1, r2, r3}
   12f38:	ldm	ip!, {r0, r1, r2, r3}
   12f3c:	stmia	lr!, {r0, r1, r2, r3}
   12f40:	ldm	ip, {r0, r1, r2, r3}
   12f44:	stm	lr, {r0, r1, r2, r3}
   12f48:	mov	r2, #1
   12f4c:	mov	r1, #58	; 0x3a
   12f50:	add	r0, sp, #48	; 0x30
   12f54:	bl	12ae4 <abort@plt+0x1d98>
   12f58:	add	r3, sp, #48	; 0x30
   12f5c:	mvn	r2, #0
   12f60:	mov	r1, r5
   12f64:	mov	r0, r4
   12f68:	bl	128b8 <abort@plt+0x1b6c>
   12f6c:	add	sp, sp, #100	; 0x64
   12f70:	pop	{r4, r5, pc}
   12f74:	push	{r4, r5, r6, r7, lr}
   12f78:	sub	sp, sp, #52	; 0x34
   12f7c:	mov	r4, r0
   12f80:	mov	r6, r1
   12f84:	mov	r7, r2
   12f88:	mov	r5, r3
   12f8c:	mov	ip, sp
   12f90:	ldr	lr, [pc, #64]	; 12fd8 <abort@plt+0x228c>
   12f94:	ldm	lr!, {r0, r1, r2, r3}
   12f98:	stmia	ip!, {r0, r1, r2, r3}
   12f9c:	ldm	lr!, {r0, r1, r2, r3}
   12fa0:	stmia	ip!, {r0, r1, r2, r3}
   12fa4:	ldm	lr, {r0, r1, r2, r3}
   12fa8:	stm	ip, {r0, r1, r2, r3}
   12fac:	mov	r2, r7
   12fb0:	mov	r1, r6
   12fb4:	mov	r0, sp
   12fb8:	bl	12b40 <abort@plt+0x1df4>
   12fbc:	mov	r3, sp
   12fc0:	ldr	r2, [sp, #72]	; 0x48
   12fc4:	mov	r1, r5
   12fc8:	mov	r0, r4
   12fcc:	bl	128b8 <abort@plt+0x1b6c>
   12fd0:	add	sp, sp, #52	; 0x34
   12fd4:	pop	{r4, r5, r6, r7, pc}
   12fd8:	andeq	r6, r2, r0, asr #4
   12fdc:	push	{lr}		; (str lr, [sp, #-4]!)
   12fe0:	sub	sp, sp, #12
   12fe4:	mvn	ip, #0
   12fe8:	str	ip, [sp]
   12fec:	bl	12f74 <abort@plt+0x2228>
   12ff0:	add	sp, sp, #12
   12ff4:	pop	{pc}		; (ldr pc, [sp], #4)
   12ff8:	push	{r4, lr}
   12ffc:	mov	r3, r2
   13000:	mov	r2, r1
   13004:	mov	r1, r0
   13008:	mov	r0, #0
   1300c:	bl	12fdc <abort@plt+0x2290>
   13010:	pop	{r4, pc}
   13014:	push	{lr}		; (str lr, [sp, #-4]!)
   13018:	sub	sp, sp, #12
   1301c:	str	r3, [sp]
   13020:	mov	r3, r2
   13024:	mov	r2, r1
   13028:	mov	r1, r0
   1302c:	mov	r0, #0
   13030:	bl	12f74 <abort@plt+0x2228>
   13034:	add	sp, sp, #12
   13038:	pop	{pc}		; (ldr pc, [sp], #4)
   1303c:	push	{r4, lr}
   13040:	ldr	r3, [pc, #4]	; 1304c <abort@plt+0x2300>
   13044:	bl	128b8 <abort@plt+0x1b6c>
   13048:	pop	{r4, pc}
   1304c:	andeq	r6, r2, r0, ror #1
   13050:	push	{r4, lr}
   13054:	mov	r2, r1
   13058:	mov	r1, r0
   1305c:	mov	r0, #0
   13060:	bl	1303c <abort@plt+0x22f0>
   13064:	pop	{r4, pc}
   13068:	push	{r4, lr}
   1306c:	mvn	r2, #0
   13070:	bl	1303c <abort@plt+0x22f0>
   13074:	pop	{r4, pc}
   13078:	push	{r4, lr}
   1307c:	mov	r1, r0
   13080:	mov	r0, #0
   13084:	bl	13068 <abort@plt+0x231c>
   13088:	pop	{r4, pc}
   1308c:	push	{r4, r5, r6, lr}
   13090:	sub	sp, sp, #32
   13094:	mov	r4, r0
   13098:	ldr	r5, [sp, #48]	; 0x30
   1309c:	ldr	r6, [sp, #52]	; 0x34
   130a0:	cmp	r1, #0
   130a4:	beq	1315c <abort@plt+0x2410>
   130a8:	str	r3, [sp, #4]
   130ac:	str	r2, [sp]
   130b0:	mov	r3, r1
   130b4:	ldr	r2, [pc, #940]	; 13468 <abort@plt+0x271c>
   130b8:	mov	r1, #1
   130bc:	bl	10cec <__fprintf_chk@plt>
   130c0:	mov	r2, #5
   130c4:	ldr	r1, [pc, #928]	; 1346c <abort@plt+0x2720>
   130c8:	mov	r0, #0
   130cc:	bl	10bcc <dcgettext@plt>
   130d0:	ldr	r3, [pc, #920]	; 13470 <abort@plt+0x2724>
   130d4:	str	r3, [sp]
   130d8:	mov	r3, r0
   130dc:	ldr	r2, [pc, #912]	; 13474 <abort@plt+0x2728>
   130e0:	mov	r1, #1
   130e4:	mov	r0, r4
   130e8:	bl	10cec <__fprintf_chk@plt>
   130ec:	mov	r1, r4
   130f0:	mov	r0, #10
   130f4:	bl	10bc0 <fputc_unlocked@plt>
   130f8:	mov	r2, #5
   130fc:	ldr	r1, [pc, #884]	; 13478 <abort@plt+0x272c>
   13100:	mov	r0, #0
   13104:	bl	10bcc <dcgettext@plt>
   13108:	ldr	r3, [pc, #876]	; 1347c <abort@plt+0x2730>
   1310c:	mov	r2, r0
   13110:	mov	r1, #1
   13114:	mov	r0, r4
   13118:	bl	10cec <__fprintf_chk@plt>
   1311c:	mov	r1, r4
   13120:	mov	r0, #10
   13124:	bl	10bc0 <fputc_unlocked@plt>
   13128:	cmp	r6, #9
   1312c:	ldrls	pc, [pc, r6, lsl #2]
   13130:	b	13400 <abort@plt+0x26b4>
   13134:	muleq	r1, r8, r1
   13138:	andeq	r3, r1, r4, ror r1
   1313c:	andeq	r3, r1, r0, lsr #3
   13140:	ldrdeq	r3, [r1], -r0
   13144:	andeq	r3, r1, r8, lsl #4
   13148:	andeq	r3, r1, r8, asr #4
   1314c:	muleq	r1, r0, r2
   13150:	andeq	r3, r1, r0, ror #5
   13154:	andeq	r3, r1, r8, lsr r3
   13158:	muleq	r1, r8, r3
   1315c:	str	r3, [sp]
   13160:	mov	r3, r2
   13164:	ldr	r2, [pc, #788]	; 13480 <abort@plt+0x2734>
   13168:	mov	r1, #1
   1316c:	bl	10cec <__fprintf_chk@plt>
   13170:	b	130c0 <abort@plt+0x2374>
   13174:	mov	r2, #5
   13178:	ldr	r1, [pc, #772]	; 13484 <abort@plt+0x2738>
   1317c:	mov	r0, #0
   13180:	bl	10bcc <dcgettext@plt>
   13184:	ldr	r3, [r5]
   13188:	mov	r2, r0
   1318c:	mov	r1, #1
   13190:	mov	r0, r4
   13194:	bl	10cec <__fprintf_chk@plt>
   13198:	add	sp, sp, #32
   1319c:	pop	{r4, r5, r6, pc}
   131a0:	mov	r2, #5
   131a4:	ldr	r1, [pc, #732]	; 13488 <abort@plt+0x273c>
   131a8:	mov	r0, #0
   131ac:	bl	10bcc <dcgettext@plt>
   131b0:	ldr	r3, [r5]
   131b4:	ldr	r2, [r5, #4]
   131b8:	str	r2, [sp]
   131bc:	mov	r2, r0
   131c0:	mov	r1, #1
   131c4:	mov	r0, r4
   131c8:	bl	10cec <__fprintf_chk@plt>
   131cc:	b	13198 <abort@plt+0x244c>
   131d0:	mov	r2, #5
   131d4:	ldr	r1, [pc, #688]	; 1348c <abort@plt+0x2740>
   131d8:	mov	r0, #0
   131dc:	bl	10bcc <dcgettext@plt>
   131e0:	ldr	r3, [r5]
   131e4:	ldr	r2, [r5, #8]
   131e8:	str	r2, [sp, #4]
   131ec:	ldr	r2, [r5, #4]
   131f0:	str	r2, [sp]
   131f4:	mov	r2, r0
   131f8:	mov	r1, #1
   131fc:	mov	r0, r4
   13200:	bl	10cec <__fprintf_chk@plt>
   13204:	b	13198 <abort@plt+0x244c>
   13208:	mov	r2, #5
   1320c:	ldr	r1, [pc, #636]	; 13490 <abort@plt+0x2744>
   13210:	mov	r0, #0
   13214:	bl	10bcc <dcgettext@plt>
   13218:	ldr	r3, [r5]
   1321c:	ldr	r2, [r5, #12]
   13220:	str	r2, [sp, #8]
   13224:	ldr	r2, [r5, #8]
   13228:	str	r2, [sp, #4]
   1322c:	ldr	r2, [r5, #4]
   13230:	str	r2, [sp]
   13234:	mov	r2, r0
   13238:	mov	r1, #1
   1323c:	mov	r0, r4
   13240:	bl	10cec <__fprintf_chk@plt>
   13244:	b	13198 <abort@plt+0x244c>
   13248:	mov	r2, #5
   1324c:	ldr	r1, [pc, #576]	; 13494 <abort@plt+0x2748>
   13250:	mov	r0, #0
   13254:	bl	10bcc <dcgettext@plt>
   13258:	ldr	r3, [r5]
   1325c:	ldr	r2, [r5, #16]
   13260:	str	r2, [sp, #12]
   13264:	ldr	r2, [r5, #12]
   13268:	str	r2, [sp, #8]
   1326c:	ldr	r2, [r5, #8]
   13270:	str	r2, [sp, #4]
   13274:	ldr	r2, [r5, #4]
   13278:	str	r2, [sp]
   1327c:	mov	r2, r0
   13280:	mov	r1, #1
   13284:	mov	r0, r4
   13288:	bl	10cec <__fprintf_chk@plt>
   1328c:	b	13198 <abort@plt+0x244c>
   13290:	mov	r2, #5
   13294:	ldr	r1, [pc, #508]	; 13498 <abort@plt+0x274c>
   13298:	mov	r0, #0
   1329c:	bl	10bcc <dcgettext@plt>
   132a0:	ldr	r3, [r5]
   132a4:	ldr	r2, [r5, #20]
   132a8:	str	r2, [sp, #16]
   132ac:	ldr	r2, [r5, #16]
   132b0:	str	r2, [sp, #12]
   132b4:	ldr	r2, [r5, #12]
   132b8:	str	r2, [sp, #8]
   132bc:	ldr	r2, [r5, #8]
   132c0:	str	r2, [sp, #4]
   132c4:	ldr	r2, [r5, #4]
   132c8:	str	r2, [sp]
   132cc:	mov	r2, r0
   132d0:	mov	r1, #1
   132d4:	mov	r0, r4
   132d8:	bl	10cec <__fprintf_chk@plt>
   132dc:	b	13198 <abort@plt+0x244c>
   132e0:	mov	r2, #5
   132e4:	ldr	r1, [pc, #432]	; 1349c <abort@plt+0x2750>
   132e8:	mov	r0, #0
   132ec:	bl	10bcc <dcgettext@plt>
   132f0:	ldr	r3, [r5]
   132f4:	ldr	r2, [r5, #24]
   132f8:	str	r2, [sp, #20]
   132fc:	ldr	r2, [r5, #20]
   13300:	str	r2, [sp, #16]
   13304:	ldr	r2, [r5, #16]
   13308:	str	r2, [sp, #12]
   1330c:	ldr	r2, [r5, #12]
   13310:	str	r2, [sp, #8]
   13314:	ldr	r2, [r5, #8]
   13318:	str	r2, [sp, #4]
   1331c:	ldr	r2, [r5, #4]
   13320:	str	r2, [sp]
   13324:	mov	r2, r0
   13328:	mov	r1, #1
   1332c:	mov	r0, r4
   13330:	bl	10cec <__fprintf_chk@plt>
   13334:	b	13198 <abort@plt+0x244c>
   13338:	mov	r2, #5
   1333c:	ldr	r1, [pc, #348]	; 134a0 <abort@plt+0x2754>
   13340:	mov	r0, #0
   13344:	bl	10bcc <dcgettext@plt>
   13348:	ldr	r3, [r5]
   1334c:	ldr	r2, [r5, #28]
   13350:	str	r2, [sp, #24]
   13354:	ldr	r2, [r5, #24]
   13358:	str	r2, [sp, #20]
   1335c:	ldr	r2, [r5, #20]
   13360:	str	r2, [sp, #16]
   13364:	ldr	r2, [r5, #16]
   13368:	str	r2, [sp, #12]
   1336c:	ldr	r2, [r5, #12]
   13370:	str	r2, [sp, #8]
   13374:	ldr	r2, [r5, #8]
   13378:	str	r2, [sp, #4]
   1337c:	ldr	r2, [r5, #4]
   13380:	str	r2, [sp]
   13384:	mov	r2, r0
   13388:	mov	r1, #1
   1338c:	mov	r0, r4
   13390:	bl	10cec <__fprintf_chk@plt>
   13394:	b	13198 <abort@plt+0x244c>
   13398:	mov	r2, #5
   1339c:	ldr	r1, [pc, #256]	; 134a4 <abort@plt+0x2758>
   133a0:	mov	r0, #0
   133a4:	bl	10bcc <dcgettext@plt>
   133a8:	ldr	r3, [r5]
   133ac:	ldr	r2, [r5, #32]
   133b0:	str	r2, [sp, #28]
   133b4:	ldr	r2, [r5, #28]
   133b8:	str	r2, [sp, #24]
   133bc:	ldr	r2, [r5, #24]
   133c0:	str	r2, [sp, #20]
   133c4:	ldr	r2, [r5, #20]
   133c8:	str	r2, [sp, #16]
   133cc:	ldr	r2, [r5, #16]
   133d0:	str	r2, [sp, #12]
   133d4:	ldr	r2, [r5, #12]
   133d8:	str	r2, [sp, #8]
   133dc:	ldr	r2, [r5, #8]
   133e0:	str	r2, [sp, #4]
   133e4:	ldr	r2, [r5, #4]
   133e8:	str	r2, [sp]
   133ec:	mov	r2, r0
   133f0:	mov	r1, #1
   133f4:	mov	r0, r4
   133f8:	bl	10cec <__fprintf_chk@plt>
   133fc:	b	13198 <abort@plt+0x244c>
   13400:	mov	r2, #5
   13404:	ldr	r1, [pc, #156]	; 134a8 <abort@plt+0x275c>
   13408:	mov	r0, #0
   1340c:	bl	10bcc <dcgettext@plt>
   13410:	ldr	r3, [r5]
   13414:	ldr	r2, [r5, #32]
   13418:	str	r2, [sp, #28]
   1341c:	ldr	r2, [r5, #28]
   13420:	str	r2, [sp, #24]
   13424:	ldr	r2, [r5, #24]
   13428:	str	r2, [sp, #20]
   1342c:	ldr	r2, [r5, #20]
   13430:	str	r2, [sp, #16]
   13434:	ldr	r2, [r5, #16]
   13438:	str	r2, [sp, #12]
   1343c:	ldr	r2, [r5, #12]
   13440:	str	r2, [sp, #8]
   13444:	ldr	r2, [r5, #8]
   13448:	str	r2, [sp, #4]
   1344c:	ldr	r2, [r5, #4]
   13450:	str	r2, [sp]
   13454:	mov	r2, r0
   13458:	mov	r1, #1
   1345c:	mov	r0, r4
   13460:	bl	10cec <__fprintf_chk@plt>
   13464:	b	13198 <abort@plt+0x244c>
   13468:	andeq	r4, r1, r4, asr #23
   1346c:	ldrdeq	r4, [r1], -r8
   13470:	andeq	r0, r0, r6, ror #15
   13474:			; <UNDEFINED> instruction: 0x00014eb0
   13478:	ldrdeq	r4, [r1], -ip
   1347c:	andeq	r4, r1, r8, lsl #25
   13480:	ldrdeq	r4, [r1], -r0
   13484:	andeq	r4, r1, ip, lsr #25
   13488:			; <UNDEFINED> instruction: 0x00014cbc
   1348c:	ldrdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   13490:	strdeq	r4, [r1], -r0
   13494:	andeq	r4, r1, r0, lsl sp
   13498:	andeq	r4, r1, r4, lsr sp
   1349c:	andeq	r4, r1, ip, asr sp
   134a0:	andeq	r4, r1, r8, lsl #27
   134a4:			; <UNDEFINED> instruction: 0x00014db8
   134a8:	andeq	r4, r1, ip, ror #27
   134ac:	push	{r4, r5, lr}
   134b0:	sub	sp, sp, #12
   134b4:	ldr	r5, [sp, #24]
   134b8:	ldr	ip, [r5]
   134bc:	cmp	ip, #0
   134c0:	beq	134f0 <abort@plt+0x27a4>
   134c4:	mov	lr, r5
   134c8:	mov	ip, #0
   134cc:	add	ip, ip, #1
   134d0:	ldr	r4, [lr, #4]!
   134d4:	cmp	r4, #0
   134d8:	bne	134cc <abort@plt+0x2780>
   134dc:	str	ip, [sp, #4]
   134e0:	str	r5, [sp]
   134e4:	bl	1308c <abort@plt+0x2340>
   134e8:	add	sp, sp, #12
   134ec:	pop	{r4, r5, pc}
   134f0:	mov	ip, #0
   134f4:	b	134dc <abort@plt+0x2790>
   134f8:	push	{r4, r5, lr}
   134fc:	sub	sp, sp, #52	; 0x34
   13500:	ldr	r4, [sp, #64]	; 0x40
   13504:	sub	r4, r4, #4
   13508:	add	r5, sp, #4
   1350c:	mov	ip, #0
   13510:	ldr	lr, [r4, #4]!
   13514:	str	lr, [r5, #4]!
   13518:	cmp	lr, #0
   1351c:	beq	1352c <abort@plt+0x27e0>
   13520:	add	ip, ip, #1
   13524:	cmp	ip, #10
   13528:	bne	13510 <abort@plt+0x27c4>
   1352c:	str	ip, [sp, #4]
   13530:	add	ip, sp, #8
   13534:	str	ip, [sp]
   13538:	bl	1308c <abort@plt+0x2340>
   1353c:	add	sp, sp, #52	; 0x34
   13540:	pop	{r4, r5, pc}
   13544:	push	{r3}		; (str r3, [sp, #-4]!)
   13548:	push	{lr}		; (str lr, [sp, #-4]!)
   1354c:	sub	sp, sp, #16
   13550:	add	r3, sp, #24
   13554:	str	r3, [sp, #12]
   13558:	str	r3, [sp]
   1355c:	ldr	r3, [sp, #20]
   13560:	bl	134f8 <abort@plt+0x27ac>
   13564:	add	sp, sp, #16
   13568:	pop	{lr}		; (ldr lr, [sp], #4)
   1356c:	add	sp, sp, #4
   13570:	bx	lr
   13574:	push	{r4, lr}
   13578:	ldr	r3, [pc, #112]	; 135f0 <abort@plt+0x28a4>
   1357c:	ldr	r1, [r3]
   13580:	mov	r0, #10
   13584:	bl	10bc0 <fputc_unlocked@plt>
   13588:	mov	r2, #5
   1358c:	ldr	r1, [pc, #96]	; 135f4 <abort@plt+0x28a8>
   13590:	mov	r0, #0
   13594:	bl	10bcc <dcgettext@plt>
   13598:	ldr	r2, [pc, #88]	; 135f8 <abort@plt+0x28ac>
   1359c:	mov	r1, r0
   135a0:	mov	r0, #1
   135a4:	bl	10cd4 <__printf_chk@plt>
   135a8:	mov	r2, #5
   135ac:	ldr	r1, [pc, #72]	; 135fc <abort@plt+0x28b0>
   135b0:	mov	r0, #0
   135b4:	bl	10bcc <dcgettext@plt>
   135b8:	ldr	r3, [pc, #64]	; 13600 <abort@plt+0x28b4>
   135bc:	ldr	r2, [pc, #64]	; 13604 <abort@plt+0x28b8>
   135c0:	mov	r1, r0
   135c4:	mov	r0, #1
   135c8:	bl	10cd4 <__printf_chk@plt>
   135cc:	mov	r2, #5
   135d0:	ldr	r1, [pc, #48]	; 13608 <abort@plt+0x28bc>
   135d4:	mov	r0, #0
   135d8:	bl	10bcc <dcgettext@plt>
   135dc:	ldr	r2, [pc, #40]	; 1360c <abort@plt+0x28c0>
   135e0:	mov	r1, r0
   135e4:	mov	r0, #1
   135e8:	bl	10cd4 <__printf_chk@plt>
   135ec:	pop	{r4, pc}
   135f0:	andeq	r6, r2, ip, lsr #2
   135f4:	andeq	r4, r1, r8, lsr #28
   135f8:	andeq	r4, r1, ip, lsr lr
   135fc:	andeq	r4, r1, r4, asr lr
   13600:	andeq	r4, r1, r0, ror #17
   13604:	andeq	r4, r1, r8, lsl #18
   13608:	andeq	r4, r1, r8, ror #28
   1360c:	muleq	r1, r0, lr
   13610:	push	{r4, lr}
   13614:	bl	13c44 <abort@plt+0x2ef8>
   13618:	cmp	r0, #0
   1361c:	popne	{r4, pc}
   13620:	bl	13bb4 <abort@plt+0x2e68>
   13624:	push	{r4, lr}
   13628:	bl	13c44 <abort@plt+0x2ef8>
   1362c:	cmp	r0, #0
   13630:	popne	{r4, pc}
   13634:	bl	13bb4 <abort@plt+0x2e68>
   13638:	push	{r4, lr}
   1363c:	bl	13610 <abort@plt+0x28c4>
   13640:	pop	{r4, pc}
   13644:	push	{r4, r5, r6, lr}
   13648:	mov	r5, r0
   1364c:	mov	r4, r1
   13650:	bl	13c74 <abort@plt+0x2f28>
   13654:	cmp	r0, #0
   13658:	popne	{r4, r5, r6, pc}
   1365c:	adds	r4, r4, #0
   13660:	movne	r4, #1
   13664:	cmp	r5, #0
   13668:	orreq	r4, r4, #1
   1366c:	cmp	r4, #0
   13670:	popeq	{r4, r5, r6, pc}
   13674:	bl	13bb4 <abort@plt+0x2e68>
   13678:	push	{r4, lr}
   1367c:	cmp	r1, #0
   13680:	orreq	r1, r1, #1
   13684:	bl	13c74 <abort@plt+0x2f28>
   13688:	cmp	r0, #0
   1368c:	popne	{r4, pc}
   13690:	bl	13bb4 <abort@plt+0x2e68>
   13694:	push	{r4, r5, r6, lr}
   13698:	mov	r6, r0
   1369c:	mov	r5, r1
   136a0:	mov	r4, r2
   136a4:	bl	13fd4 <abort@plt+0x3288>
   136a8:	cmp	r0, #0
   136ac:	popne	{r4, r5, r6, pc}
   136b0:	cmp	r6, #0
   136b4:	beq	136c4 <abort@plt+0x2978>
   136b8:	cmp	r5, #0
   136bc:	cmpne	r4, #0
   136c0:	popeq	{r4, r5, r6, pc}
   136c4:	bl	13bb4 <abort@plt+0x2e68>
   136c8:	push	{r4, lr}
   136cc:	bl	13694 <abort@plt+0x2948>
   136d0:	pop	{r4, pc}
   136d4:	push	{r4, lr}
   136d8:	mov	ip, r1
   136dc:	mov	r3, r2
   136e0:	cmp	r2, #0
   136e4:	cmpne	r1, #0
   136e8:	moveq	r3, #1
   136ec:	moveq	ip, r3
   136f0:	mov	r2, r3
   136f4:	mov	r1, ip
   136f8:	bl	13fd4 <abort@plt+0x3288>
   136fc:	cmp	r0, #0
   13700:	popne	{r4, pc}
   13704:	bl	13bb4 <abort@plt+0x2e68>
   13708:	push	{r4, lr}
   1370c:	mov	r2, r1
   13710:	mov	r1, r0
   13714:	mov	r0, #0
   13718:	bl	13694 <abort@plt+0x2948>
   1371c:	pop	{r4, pc}
   13720:	push	{r4, lr}
   13724:	mov	r2, r1
   13728:	mov	r1, r0
   1372c:	mov	r0, #0
   13730:	bl	136d4 <abort@plt+0x2988>
   13734:	pop	{r4, pc}
   13738:	push	{r4, r5, r6, r7, r8, lr}
   1373c:	mov	r5, r1
   13740:	mov	r6, r2
   13744:	ldr	r4, [r1]
   13748:	subs	r7, r0, #0
   1374c:	beq	13768 <abort@plt+0x2a1c>
   13750:	lsr	r2, r4, #1
   13754:	add	r3, r2, #1
   13758:	mvn	r3, r3
   1375c:	cmp	r4, r3
   13760:	bls	1378c <abort@plt+0x2a40>
   13764:	bl	13bb4 <abort@plt+0x2e68>
   13768:	cmp	r4, #0
   1376c:	bne	13794 <abort@plt+0x2a48>
   13770:	mov	r1, r2
   13774:	mov	r0, #64	; 0x40
   13778:	bl	14128 <abort@plt+0x33dc>
   1377c:	cmp	r0, #0
   13780:	movne	r4, r0
   13784:	addeq	r4, r0, #1
   13788:	b	13794 <abort@plt+0x2a48>
   1378c:	add	r4, r4, #1
   13790:	add	r4, r4, r2
   13794:	mov	r2, r6
   13798:	mov	r1, r4
   1379c:	mov	r0, r7
   137a0:	bl	13694 <abort@plt+0x2948>
   137a4:	str	r4, [r5]
   137a8:	pop	{r4, r5, r6, r7, r8, pc}
   137ac:	push	{r4, lr}
   137b0:	mov	r2, #1
   137b4:	bl	13738 <abort@plt+0x29ec>
   137b8:	pop	{r4, pc}
   137bc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   137c0:	sub	sp, sp, #12
   137c4:	mov	fp, r0
   137c8:	mov	sl, r1
   137cc:	mov	r9, r2
   137d0:	mov	r7, r3
   137d4:	ldr	r6, [sp, #48]	; 0x30
   137d8:	ldr	r5, [r1]
   137dc:	asrs	r4, r5, #1
   137e0:	bmi	1393c <abort@plt+0x2bf0>
   137e4:	cmp	r5, #0
   137e8:	blt	13950 <abort@plt+0x2c04>
   137ec:	mvn	r3, #-2147483648	; 0x80000000
   137f0:	sub	r3, r3, r4
   137f4:	cmp	r5, r3
   137f8:	movle	r3, #0
   137fc:	movgt	r3, #1
   13800:	cmp	r3, #0
   13804:	addeq	r4, r4, r5
   13808:	mvnne	r4, #-2147483648	; 0x80000000
   1380c:	mvn	r8, r7
   13810:	lsr	r8, r8, #31
   13814:	cmp	r7, r4
   13818:	movge	r3, #0
   1381c:	andlt	r3, r8, #1
   13820:	cmp	r3, #0
   13824:	movne	r4, r7
   13828:	cmp	r6, #0
   1382c:	blt	13964 <abort@plt+0x2c18>
   13830:	cmp	r6, #0
   13834:	beq	13a10 <abort@plt+0x2cc4>
   13838:	cmp	r4, #0
   1383c:	blt	139c0 <abort@plt+0x2c74>
   13840:	mov	r1, r6
   13844:	mvn	r0, #-2147483648	; 0x80000000
   13848:	bl	14334 <abort@plt+0x35e8>
   1384c:	cmp	r0, r4
   13850:	movge	r0, #0
   13854:	movlt	r0, #1
   13858:	cmp	r0, #0
   1385c:	mvnne	r3, #-2147483648	; 0x80000000
   13860:	strne	r3, [sp, #4]
   13864:	beq	139f8 <abort@plt+0x2cac>
   13868:	mov	r1, r6
   1386c:	ldr	r0, [sp, #4]
   13870:	bl	14334 <abort@plt+0x35e8>
   13874:	mov	r4, r0
   13878:	mov	r1, r6
   1387c:	ldr	r0, [sp, #4]
   13880:	bl	14554 <abort@plt+0x3808>
   13884:	ldr	r3, [sp, #4]
   13888:	sub	r1, r3, r1
   1388c:	cmp	fp, #0
   13890:	moveq	r3, #0
   13894:	streq	r3, [sl]
   13898:	sub	r3, r4, r5
   1389c:	cmp	r3, r9
   138a0:	bge	13928 <abort@plt+0x2bdc>
   138a4:	cmp	r9, #0
   138a8:	blt	13a1c <abort@plt+0x2cd0>
   138ac:	cmp	r5, #0
   138b0:	blt	13a30 <abort@plt+0x2ce4>
   138b4:	mvn	r3, #-2147483648	; 0x80000000
   138b8:	sub	r3, r3, r9
   138bc:	cmp	r5, r3
   138c0:	movle	r3, #0
   138c4:	movgt	r3, #1
   138c8:	cmp	r3, #0
   138cc:	bne	13ad8 <abort@plt+0x2d8c>
   138d0:	add	r5, r5, r9
   138d4:	mov	r4, r5
   138d8:	cmp	r7, r5
   138dc:	movge	r7, #0
   138e0:	andlt	r7, r8, #1
   138e4:	cmp	r7, #0
   138e8:	bne	13ad8 <abort@plt+0x2d8c>
   138ec:	cmp	r6, #0
   138f0:	blt	13a44 <abort@plt+0x2cf8>
   138f4:	cmp	r6, #0
   138f8:	beq	13924 <abort@plt+0x2bd8>
   138fc:	cmp	r5, #0
   13900:	blt	13aa0 <abort@plt+0x2d54>
   13904:	mov	r1, r6
   13908:	mvn	r0, #-2147483648	; 0x80000000
   1390c:	bl	14334 <abort@plt+0x35e8>
   13910:	cmp	r5, r0
   13914:	movle	r0, #0
   13918:	movgt	r0, #1
   1391c:	cmp	r0, #0
   13920:	bne	13ad8 <abort@plt+0x2d8c>
   13924:	mul	r1, r5, r6
   13928:	mov	r0, fp
   1392c:	bl	13644 <abort@plt+0x28f8>
   13930:	str	r4, [sl]
   13934:	add	sp, sp, #12
   13938:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1393c:	rsb	r3, r4, #-2147483648	; 0x80000000
   13940:	cmp	r5, r3
   13944:	movge	r3, #0
   13948:	movlt	r3, #1
   1394c:	b	13800 <abort@plt+0x2ab4>
   13950:	rsb	r3, r5, #-2147483648	; 0x80000000
   13954:	cmp	r4, r3
   13958:	movge	r3, #0
   1395c:	movlt	r3, #1
   13960:	b	13800 <abort@plt+0x2ab4>
   13964:	cmp	r4, #0
   13968:	blt	13990 <abort@plt+0x2c44>
   1396c:	cmn	r6, #1
   13970:	beq	139ac <abort@plt+0x2c60>
   13974:	mov	r1, r6
   13978:	mov	r0, #-2147483648	; 0x80000000
   1397c:	bl	14334 <abort@plt+0x35e8>
   13980:	cmp	r0, r4
   13984:	movge	r0, #0
   13988:	movlt	r0, #1
   1398c:	b	13858 <abort@plt+0x2b0c>
   13990:	mov	r1, r6
   13994:	mvn	r0, #-2147483648	; 0x80000000
   13998:	bl	14334 <abort@plt+0x35e8>
   1399c:	cmp	r0, r4
   139a0:	movle	r0, #0
   139a4:	movgt	r0, #1
   139a8:	b	13858 <abort@plt+0x2b0c>
   139ac:	add	r0, r4, #-2147483648	; 0x80000000
   139b0:	cmp	r0, #0
   139b4:	movle	r0, #0
   139b8:	movgt	r0, #1
   139bc:	b	13858 <abort@plt+0x2b0c>
   139c0:	cmn	r4, #1
   139c4:	beq	139e4 <abort@plt+0x2c98>
   139c8:	mov	r1, r4
   139cc:	mov	r0, #-2147483648	; 0x80000000
   139d0:	bl	14334 <abort@plt+0x35e8>
   139d4:	cmp	r6, r0
   139d8:	movle	r0, #0
   139dc:	movgt	r0, #1
   139e0:	b	13858 <abort@plt+0x2b0c>
   139e4:	add	r0, r6, #-2147483648	; 0x80000000
   139e8:	cmp	r0, #0
   139ec:	movle	r0, #0
   139f0:	movgt	r0, #1
   139f4:	b	13858 <abort@plt+0x2b0c>
   139f8:	mul	r1, r6, r4
   139fc:	cmp	r1, #63	; 0x3f
   13a00:	movle	r3, #64	; 0x40
   13a04:	strle	r3, [sp, #4]
   13a08:	bgt	1388c <abort@plt+0x2b40>
   13a0c:	b	13868 <abort@plt+0x2b1c>
   13a10:	mov	r3, #64	; 0x40
   13a14:	str	r3, [sp, #4]
   13a18:	b	13868 <abort@plt+0x2b1c>
   13a1c:	rsb	r3, r9, #-2147483648	; 0x80000000
   13a20:	cmp	r5, r3
   13a24:	movge	r3, #0
   13a28:	movlt	r3, #1
   13a2c:	b	138c8 <abort@plt+0x2b7c>
   13a30:	rsb	r3, r5, #-2147483648	; 0x80000000
   13a34:	cmp	r9, r3
   13a38:	movge	r3, #0
   13a3c:	movlt	r3, #1
   13a40:	b	138c8 <abort@plt+0x2b7c>
   13a44:	cmp	r5, #0
   13a48:	blt	13a70 <abort@plt+0x2d24>
   13a4c:	cmn	r6, #1
   13a50:	beq	13a8c <abort@plt+0x2d40>
   13a54:	mov	r1, r6
   13a58:	mov	r0, #-2147483648	; 0x80000000
   13a5c:	bl	14334 <abort@plt+0x35e8>
   13a60:	cmp	r5, r0
   13a64:	movle	r0, #0
   13a68:	movgt	r0, #1
   13a6c:	b	1391c <abort@plt+0x2bd0>
   13a70:	mov	r1, r6
   13a74:	mvn	r0, #-2147483648	; 0x80000000
   13a78:	bl	14334 <abort@plt+0x35e8>
   13a7c:	cmp	r5, r0
   13a80:	movge	r0, #0
   13a84:	movlt	r0, #1
   13a88:	b	1391c <abort@plt+0x2bd0>
   13a8c:	add	r0, r5, #-2147483648	; 0x80000000
   13a90:	cmp	r0, #0
   13a94:	movle	r0, #0
   13a98:	movgt	r0, #1
   13a9c:	b	1391c <abort@plt+0x2bd0>
   13aa0:	cmn	r5, #1
   13aa4:	beq	13ac4 <abort@plt+0x2d78>
   13aa8:	mov	r1, r5
   13aac:	mov	r0, #-2147483648	; 0x80000000
   13ab0:	bl	14334 <abort@plt+0x35e8>
   13ab4:	cmp	r6, r0
   13ab8:	movle	r0, #0
   13abc:	movgt	r0, #1
   13ac0:	b	1391c <abort@plt+0x2bd0>
   13ac4:	add	r0, r6, #-2147483648	; 0x80000000
   13ac8:	cmp	r0, #0
   13acc:	movle	r0, #0
   13ad0:	movgt	r0, #1
   13ad4:	b	1391c <abort@plt+0x2bd0>
   13ad8:	bl	13bb4 <abort@plt+0x2e68>
   13adc:	push	{r4, lr}
   13ae0:	bl	13bf4 <abort@plt+0x2ea8>
   13ae4:	cmp	r0, #0
   13ae8:	popne	{r4, pc}
   13aec:	bl	13bb4 <abort@plt+0x2e68>
   13af0:	push	{r4, lr}
   13af4:	mov	r1, #1
   13af8:	bl	13adc <abort@plt+0x2d90>
   13afc:	pop	{r4, pc}
   13b00:	push	{r4, lr}
   13b04:	bl	13bf4 <abort@plt+0x2ea8>
   13b08:	cmp	r0, #0
   13b0c:	popne	{r4, pc}
   13b10:	bl	13bb4 <abort@plt+0x2e68>
   13b14:	push	{r4, lr}
   13b18:	mov	r1, #1
   13b1c:	bl	13b00 <abort@plt+0x2db4>
   13b20:	pop	{r4, pc}
   13b24:	push	{r4, r5, r6, lr}
   13b28:	mov	r5, r0
   13b2c:	mov	r4, r1
   13b30:	mov	r0, r1
   13b34:	bl	13610 <abort@plt+0x28c4>
   13b38:	mov	r2, r4
   13b3c:	mov	r1, r5
   13b40:	bl	10b9c <memcpy@plt>
   13b44:	pop	{r4, r5, r6, pc}
   13b48:	push	{r4, r5, r6, lr}
   13b4c:	mov	r5, r0
   13b50:	mov	r4, r1
   13b54:	mov	r0, r1
   13b58:	bl	13624 <abort@plt+0x28d8>
   13b5c:	mov	r2, r4
   13b60:	mov	r1, r5
   13b64:	bl	10b9c <memcpy@plt>
   13b68:	pop	{r4, r5, r6, pc}
   13b6c:	push	{r4, r5, r6, lr}
   13b70:	mov	r5, r0
   13b74:	mov	r4, r1
   13b78:	add	r0, r1, #1
   13b7c:	bl	13624 <abort@plt+0x28d8>
   13b80:	mov	r2, #0
   13b84:	strb	r2, [r0, r4]
   13b88:	mov	r2, r4
   13b8c:	mov	r1, r5
   13b90:	bl	10b9c <memcpy@plt>
   13b94:	pop	{r4, r5, r6, pc}
   13b98:	push	{r4, lr}
   13b9c:	mov	r4, r0
   13ba0:	bl	10c98 <strlen@plt>
   13ba4:	add	r1, r0, #1
   13ba8:	mov	r0, r4
   13bac:	bl	13b24 <abort@plt+0x2dd8>
   13bb0:	pop	{r4, pc}
   13bb4:	push	{r4, lr}
   13bb8:	ldr	r3, [pc, #40]	; 13be8 <abort@plt+0x2e9c>
   13bbc:	ldr	r4, [r3]
   13bc0:	mov	r2, #5
   13bc4:	ldr	r1, [pc, #32]	; 13bec <abort@plt+0x2ea0>
   13bc8:	mov	r0, #0
   13bcc:	bl	10bcc <dcgettext@plt>
   13bd0:	mov	r3, r0
   13bd4:	ldr	r2, [pc, #20]	; 13bf0 <abort@plt+0x2ea4>
   13bd8:	mov	r1, #0
   13bdc:	mov	r0, r4
   13be0:	bl	10c38 <error@plt>
   13be4:	bl	10d4c <abort@plt>
   13be8:	andeq	r6, r2, ip, asr #1
   13bec:	andeq	r4, r1, r0, ror #29
   13bf0:	andeq	r4, r1, r4, lsr #21
   13bf4:	push	{r4, lr}
   13bf8:	mov	r2, r0
   13bfc:	mov	r3, r1
   13c00:	cmp	r1, #0
   13c04:	cmpne	r0, #0
   13c08:	moveq	r3, #1
   13c0c:	moveq	r2, r3
   13c10:	umull	r0, r1, r2, r3
   13c14:	cmp	r0, #0
   13c18:	cmpge	r1, #0
   13c1c:	bne	13c30 <abort@plt+0x2ee4>
   13c20:	mov	r1, r3
   13c24:	mov	r0, r2
   13c28:	bl	10b48 <calloc@plt>
   13c2c:	pop	{r4, pc}
   13c30:	bl	10cb0 <__errno_location@plt>
   13c34:	mov	r3, #12
   13c38:	str	r3, [r0]
   13c3c:	mov	r0, #0
   13c40:	pop	{r4, pc}
   13c44:	push	{r4, lr}
   13c48:	cmp	r0, #0
   13c4c:	moveq	r0, #1
   13c50:	cmp	r0, #0
   13c54:	blt	13c60 <abort@plt+0x2f14>
   13c58:	bl	10c44 <malloc@plt>
   13c5c:	pop	{r4, pc}
   13c60:	bl	10cb0 <__errno_location@plt>
   13c64:	mov	r3, #12
   13c68:	str	r3, [r0]
   13c6c:	mov	r0, #0
   13c70:	pop	{r4, pc}
   13c74:	push	{r4, lr}
   13c78:	cmp	r0, #0
   13c7c:	beq	13c98 <abort@plt+0x2f4c>
   13c80:	cmp	r1, #0
   13c84:	beq	13ca4 <abort@plt+0x2f58>
   13c88:	cmp	r1, #0
   13c8c:	blt	13cb0 <abort@plt+0x2f64>
   13c90:	bl	10bd8 <realloc@plt>
   13c94:	pop	{r4, pc}
   13c98:	mov	r0, r1
   13c9c:	bl	13c44 <abort@plt+0x2ef8>
   13ca0:	pop	{r4, pc}
   13ca4:	bl	13e48 <abort@plt+0x30fc>
   13ca8:	mov	r0, #0
   13cac:	pop	{r4, pc}
   13cb0:	bl	10cb0 <__errno_location@plt>
   13cb4:	mov	r3, #12
   13cb8:	str	r3, [r0]
   13cbc:	mov	r0, #0
   13cc0:	pop	{r4, pc}
   13cc4:	push	{r4, r5, r6, lr}
   13cc8:	mov	r5, r0
   13ccc:	bl	10c20 <__fpending@plt>
   13cd0:	mov	r6, r0
   13cd4:	ldr	r4, [r5]
   13cd8:	and	r4, r4, #32
   13cdc:	mov	r0, r5
   13ce0:	bl	13d3c <abort@plt+0x2ff0>
   13ce4:	cmp	r4, #0
   13ce8:	bne	13d10 <abort@plt+0x2fc4>
   13cec:	cmp	r0, #0
   13cf0:	popeq	{r4, r5, r6, pc}
   13cf4:	cmp	r6, #0
   13cf8:	bne	13d2c <abort@plt+0x2fe0>
   13cfc:	bl	10cb0 <__errno_location@plt>
   13d00:	ldr	r0, [r0]
   13d04:	subs	r0, r0, #9
   13d08:	mvnne	r0, #0
   13d0c:	pop	{r4, r5, r6, pc}
   13d10:	cmp	r0, #0
   13d14:	bne	13d34 <abort@plt+0x2fe8>
   13d18:	bl	10cb0 <__errno_location@plt>
   13d1c:	mov	r3, #0
   13d20:	str	r3, [r0]
   13d24:	mvn	r0, #0
   13d28:	pop	{r4, r5, r6, pc}
   13d2c:	mvn	r0, #0
   13d30:	pop	{r4, r5, r6, pc}
   13d34:	mvn	r0, #0
   13d38:	pop	{r4, r5, r6, pc}
   13d3c:	push	{r4, r5, r6, lr}
   13d40:	sub	sp, sp, #8
   13d44:	mov	r4, r0
   13d48:	bl	10ce0 <fileno@plt>
   13d4c:	cmp	r0, #0
   13d50:	blt	13dc8 <abort@plt+0x307c>
   13d54:	mov	r0, r4
   13d58:	bl	10c5c <__freading@plt>
   13d5c:	cmp	r0, #0
   13d60:	beq	13d94 <abort@plt+0x3048>
   13d64:	mov	r0, r4
   13d68:	bl	10ce0 <fileno@plt>
   13d6c:	mov	r3, #1
   13d70:	str	r3, [sp]
   13d74:	mov	r2, #0
   13d78:	mov	r3, #0
   13d7c:	bl	10c08 <lseek64@plt>
   13d80:	mvn	r2, #0
   13d84:	mvn	r3, #0
   13d88:	cmp	r1, r3
   13d8c:	cmpeq	r0, r2
   13d90:	beq	13dd4 <abort@plt+0x3088>
   13d94:	mov	r0, r4
   13d98:	bl	13de4 <abort@plt+0x3098>
   13d9c:	cmp	r0, #0
   13da0:	beq	13dd4 <abort@plt+0x3088>
   13da4:	bl	10cb0 <__errno_location@plt>
   13da8:	mov	r5, r0
   13dac:	ldr	r6, [r0]
   13db0:	mov	r0, r4
   13db4:	bl	10cf8 <fclose@plt>
   13db8:	cmp	r6, #0
   13dbc:	strne	r6, [r5]
   13dc0:	mvnne	r0, #0
   13dc4:	b	13ddc <abort@plt+0x3090>
   13dc8:	mov	r0, r4
   13dcc:	bl	10cf8 <fclose@plt>
   13dd0:	b	13ddc <abort@plt+0x3090>
   13dd4:	mov	r0, r4
   13dd8:	bl	10cf8 <fclose@plt>
   13ddc:	add	sp, sp, #8
   13de0:	pop	{r4, r5, r6, pc}
   13de4:	push	{r4, lr}
   13de8:	sub	sp, sp, #8
   13dec:	subs	r4, r0, #0
   13df0:	beq	13e04 <abort@plt+0x30b8>
   13df4:	mov	r0, r4
   13df8:	bl	10c5c <__freading@plt>
   13dfc:	cmp	r0, #0
   13e00:	bne	13e14 <abort@plt+0x30c8>
   13e04:	mov	r0, r4
   13e08:	bl	10b78 <fflush@plt>
   13e0c:	add	sp, sp, #8
   13e10:	pop	{r4, pc}
   13e14:	ldr	r3, [r4]
   13e18:	tst	r3, #256	; 0x100
   13e1c:	bne	13e2c <abort@plt+0x30e0>
   13e20:	mov	r0, r4
   13e24:	bl	10b78 <fflush@plt>
   13e28:	b	13e0c <abort@plt+0x30c0>
   13e2c:	mov	r3, #1
   13e30:	str	r3, [sp]
   13e34:	mov	r2, #0
   13e38:	mov	r3, #0
   13e3c:	mov	r0, r4
   13e40:	bl	13ea0 <abort@plt+0x3154>
   13e44:	b	13e20 <abort@plt+0x30d4>
   13e48:	push	{r4, r5, lr}
   13e4c:	sub	sp, sp, #12
   13e50:	mov	r5, r0
   13e54:	bl	10cb0 <__errno_location@plt>
   13e58:	mov	r4, r0
   13e5c:	ldr	r3, [r0]
   13e60:	str	r3, [sp]
   13e64:	str	r3, [sp, #4]
   13e68:	mov	r3, #0
   13e6c:	str	r3, [r0]
   13e70:	mov	r0, r5
   13e74:	bl	10b84 <free@plt>
   13e78:	ldr	r3, [r4]
   13e7c:	cmp	r3, #0
   13e80:	moveq	r3, #4
   13e84:	movne	r3, #0
   13e88:	add	r2, sp, #8
   13e8c:	add	r3, r2, r3
   13e90:	ldr	r3, [r3, #-8]
   13e94:	str	r3, [r4]
   13e98:	add	sp, sp, #12
   13e9c:	pop	{r4, r5, pc}
   13ea0:	push	{r4, r5, r6, r7, lr}
   13ea4:	sub	sp, sp, #12
   13ea8:	mov	r4, r0
   13eac:	mov	r6, r2
   13eb0:	mov	r7, r3
   13eb4:	ldr	r5, [sp, #32]
   13eb8:	ldr	r2, [r0, #8]
   13ebc:	ldr	r3, [r0, #4]
   13ec0:	cmp	r2, r3
   13ec4:	beq	13ee4 <abort@plt+0x3198>
   13ec8:	str	r5, [sp]
   13ecc:	mov	r2, r6
   13ed0:	mov	r3, r7
   13ed4:	mov	r0, r4
   13ed8:	bl	10d04 <fseeko64@plt>
   13edc:	add	sp, sp, #12
   13ee0:	pop	{r4, r5, r6, r7, pc}
   13ee4:	ldr	r2, [r0, #20]
   13ee8:	ldr	r3, [r0, #16]
   13eec:	cmp	r2, r3
   13ef0:	bne	13ec8 <abort@plt+0x317c>
   13ef4:	ldr	r3, [r0, #36]	; 0x24
   13ef8:	cmp	r3, #0
   13efc:	bne	13ec8 <abort@plt+0x317c>
   13f00:	bl	10ce0 <fileno@plt>
   13f04:	str	r5, [sp]
   13f08:	mov	r2, r6
   13f0c:	mov	r3, r7
   13f10:	bl	10c08 <lseek64@plt>
   13f14:	mvn	r2, #0
   13f18:	mvn	r3, #0
   13f1c:	cmp	r1, r3
   13f20:	cmpeq	r0, r2
   13f24:	beq	13f40 <abort@plt+0x31f4>
   13f28:	ldr	r3, [r4]
   13f2c:	bic	r3, r3, #16
   13f30:	str	r3, [r4]
   13f34:	strd	r0, [r4, #80]	; 0x50
   13f38:	mov	r0, #0
   13f3c:	b	13edc <abort@plt+0x3190>
   13f40:	mvn	r0, #0
   13f44:	b	13edc <abort@plt+0x3190>
   13f48:	push	{r4, lr}
   13f4c:	mov	r0, #14
   13f50:	bl	10d28 <nl_langinfo@plt>
   13f54:	cmp	r0, #0
   13f58:	beq	13f70 <abort@plt+0x3224>
   13f5c:	ldrb	r2, [r0]
   13f60:	ldr	r3, [pc, #16]	; 13f78 <abort@plt+0x322c>
   13f64:	cmp	r2, #0
   13f68:	moveq	r0, r3
   13f6c:	pop	{r4, pc}
   13f70:	ldr	r0, [pc]	; 13f78 <abort@plt+0x322c>
   13f74:	pop	{r4, pc}
   13f78:	strdeq	r4, [r1], -r4	; <UNPREDICTABLE>
   13f7c:	push	{r4, r5, r6, r7, lr}
   13f80:	sub	sp, sp, #12
   13f84:	mov	r7, r1
   13f88:	mov	r5, r2
   13f8c:	subs	r6, r0, #0
   13f90:	addeq	r6, sp, #4
   13f94:	mov	r0, r6
   13f98:	bl	10c2c <mbrtowc@plt>
   13f9c:	mov	r4, r0
   13fa0:	cmp	r5, #0
   13fa4:	cmnne	r0, #3
   13fa8:	bhi	13fb8 <abort@plt+0x326c>
   13fac:	mov	r0, r4
   13fb0:	add	sp, sp, #12
   13fb4:	pop	{r4, r5, r6, r7, pc}
   13fb8:	mov	r0, #0
   13fbc:	bl	14020 <abort@plt+0x32d4>
   13fc0:	cmp	r0, #0
   13fc4:	ldrbeq	r3, [r7]
   13fc8:	streq	r3, [r6]
   13fcc:	moveq	r4, #1
   13fd0:	b	13fac <abort@plt+0x3260>
   13fd4:	push	{r4, r5, r6, lr}
   13fd8:	mov	r6, r0
   13fdc:	mov	r5, r1
   13fe0:	subs	r4, r2, #0
   13fe4:	beq	14010 <abort@plt+0x32c4>
   13fe8:	mov	r1, r4
   13fec:	mvn	r0, #0
   13ff0:	bl	14128 <abort@plt+0x33dc>
   13ff4:	cmp	r0, r5
   13ff8:	bcs	14010 <abort@plt+0x32c4>
   13ffc:	bl	10cb0 <__errno_location@plt>
   14000:	mov	r3, #12
   14004:	str	r3, [r0]
   14008:	mov	r0, #0
   1400c:	pop	{r4, r5, r6, pc}
   14010:	mul	r1, r5, r4
   14014:	mov	r0, r6
   14018:	bl	13c74 <abort@plt+0x2f28>
   1401c:	pop	{r4, r5, r6, pc}
   14020:	push	{lr}		; (str lr, [sp, #-4]!)
   14024:	sub	sp, sp, #268	; 0x10c
   14028:	ldr	r2, [pc, #68]	; 14074 <abort@plt+0x3328>
   1402c:	add	r1, sp, #4
   14030:	bl	14080 <abort@plt+0x3334>
   14034:	cmp	r0, #0
   14038:	movne	r0, #0
   1403c:	bne	1406c <abort@plt+0x3320>
   14040:	ldr	r1, [pc, #48]	; 14078 <abort@plt+0x332c>
   14044:	add	r0, sp, #4
   14048:	bl	10b6c <strcmp@plt>
   1404c:	cmp	r0, #0
   14050:	moveq	r0, #0
   14054:	beq	1406c <abort@plt+0x3320>
   14058:	ldr	r1, [pc, #28]	; 1407c <abort@plt+0x3330>
   1405c:	add	r0, sp, #4
   14060:	bl	10b6c <strcmp@plt>
   14064:	adds	r0, r0, #0
   14068:	movne	r0, #1
   1406c:	add	sp, sp, #268	; 0x10c
   14070:	pop	{pc}		; (ldr pc, [sp], #4)
   14074:	andeq	r0, r0, r1, lsl #2
   14078:	strdeq	r4, [r1], -ip
   1407c:	andeq	r4, r1, r0, lsl #30
   14080:	push	{r4, r5, r6, lr}
   14084:	mov	r6, r1
   14088:	mov	r4, r2
   1408c:	mov	r1, #0
   14090:	bl	10d10 <setlocale@plt>
   14094:	subs	r5, r0, #0
   14098:	beq	140bc <abort@plt+0x3370>
   1409c:	mov	r0, r5
   140a0:	bl	10c98 <strlen@plt>
   140a4:	cmp	r4, r0
   140a8:	bhi	140d4 <abort@plt+0x3388>
   140ac:	cmp	r4, #0
   140b0:	bne	140ec <abort@plt+0x33a0>
   140b4:	mov	r0, #34	; 0x22
   140b8:	pop	{r4, r5, r6, pc}
   140bc:	cmp	r4, #0
   140c0:	beq	14110 <abort@plt+0x33c4>
   140c4:	mov	r3, #0
   140c8:	strb	r3, [r6]
   140cc:	mov	r0, #22
   140d0:	pop	{r4, r5, r6, pc}
   140d4:	add	r2, r0, #1
   140d8:	mov	r1, r5
   140dc:	mov	r0, r6
   140e0:	bl	10b9c <memcpy@plt>
   140e4:	mov	r0, #0
   140e8:	pop	{r4, r5, r6, pc}
   140ec:	sub	r4, r4, #1
   140f0:	mov	r2, r4
   140f4:	mov	r1, r5
   140f8:	mov	r0, r6
   140fc:	bl	10b9c <memcpy@plt>
   14100:	mov	r3, #0
   14104:	strb	r3, [r6, r4]
   14108:	mov	r0, #34	; 0x22
   1410c:	pop	{r4, r5, r6, pc}
   14110:	mov	r0, #22
   14114:	pop	{r4, r5, r6, pc}
   14118:	push	{r4, lr}
   1411c:	mov	r1, #0
   14120:	bl	10d10 <setlocale@plt>
   14124:	pop	{r4, pc}
   14128:	subs	r2, r1, #1
   1412c:	bxeq	lr
   14130:	bcc	14308 <abort@plt+0x35bc>
   14134:	cmp	r0, r1
   14138:	bls	142ec <abort@plt+0x35a0>
   1413c:	tst	r1, r2
   14140:	beq	142f8 <abort@plt+0x35ac>
   14144:	clz	r3, r0
   14148:	clz	r2, r1
   1414c:	sub	r3, r2, r3
   14150:	rsbs	r3, r3, #31
   14154:	addne	r3, r3, r3, lsl #1
   14158:	mov	r2, #0
   1415c:	addne	pc, pc, r3, lsl #2
   14160:	nop			; (mov r0, r0)
   14164:	cmp	r0, r1, lsl #31
   14168:	adc	r2, r2, r2
   1416c:	subcs	r0, r0, r1, lsl #31
   14170:	cmp	r0, r1, lsl #30
   14174:	adc	r2, r2, r2
   14178:	subcs	r0, r0, r1, lsl #30
   1417c:	cmp	r0, r1, lsl #29
   14180:	adc	r2, r2, r2
   14184:	subcs	r0, r0, r1, lsl #29
   14188:	cmp	r0, r1, lsl #28
   1418c:	adc	r2, r2, r2
   14190:	subcs	r0, r0, r1, lsl #28
   14194:	cmp	r0, r1, lsl #27
   14198:	adc	r2, r2, r2
   1419c:	subcs	r0, r0, r1, lsl #27
   141a0:	cmp	r0, r1, lsl #26
   141a4:	adc	r2, r2, r2
   141a8:	subcs	r0, r0, r1, lsl #26
   141ac:	cmp	r0, r1, lsl #25
   141b0:	adc	r2, r2, r2
   141b4:	subcs	r0, r0, r1, lsl #25
   141b8:	cmp	r0, r1, lsl #24
   141bc:	adc	r2, r2, r2
   141c0:	subcs	r0, r0, r1, lsl #24
   141c4:	cmp	r0, r1, lsl #23
   141c8:	adc	r2, r2, r2
   141cc:	subcs	r0, r0, r1, lsl #23
   141d0:	cmp	r0, r1, lsl #22
   141d4:	adc	r2, r2, r2
   141d8:	subcs	r0, r0, r1, lsl #22
   141dc:	cmp	r0, r1, lsl #21
   141e0:	adc	r2, r2, r2
   141e4:	subcs	r0, r0, r1, lsl #21
   141e8:	cmp	r0, r1, lsl #20
   141ec:	adc	r2, r2, r2
   141f0:	subcs	r0, r0, r1, lsl #20
   141f4:	cmp	r0, r1, lsl #19
   141f8:	adc	r2, r2, r2
   141fc:	subcs	r0, r0, r1, lsl #19
   14200:	cmp	r0, r1, lsl #18
   14204:	adc	r2, r2, r2
   14208:	subcs	r0, r0, r1, lsl #18
   1420c:	cmp	r0, r1, lsl #17
   14210:	adc	r2, r2, r2
   14214:	subcs	r0, r0, r1, lsl #17
   14218:	cmp	r0, r1, lsl #16
   1421c:	adc	r2, r2, r2
   14220:	subcs	r0, r0, r1, lsl #16
   14224:	cmp	r0, r1, lsl #15
   14228:	adc	r2, r2, r2
   1422c:	subcs	r0, r0, r1, lsl #15
   14230:	cmp	r0, r1, lsl #14
   14234:	adc	r2, r2, r2
   14238:	subcs	r0, r0, r1, lsl #14
   1423c:	cmp	r0, r1, lsl #13
   14240:	adc	r2, r2, r2
   14244:	subcs	r0, r0, r1, lsl #13
   14248:	cmp	r0, r1, lsl #12
   1424c:	adc	r2, r2, r2
   14250:	subcs	r0, r0, r1, lsl #12
   14254:	cmp	r0, r1, lsl #11
   14258:	adc	r2, r2, r2
   1425c:	subcs	r0, r0, r1, lsl #11
   14260:	cmp	r0, r1, lsl #10
   14264:	adc	r2, r2, r2
   14268:	subcs	r0, r0, r1, lsl #10
   1426c:	cmp	r0, r1, lsl #9
   14270:	adc	r2, r2, r2
   14274:	subcs	r0, r0, r1, lsl #9
   14278:	cmp	r0, r1, lsl #8
   1427c:	adc	r2, r2, r2
   14280:	subcs	r0, r0, r1, lsl #8
   14284:	cmp	r0, r1, lsl #7
   14288:	adc	r2, r2, r2
   1428c:	subcs	r0, r0, r1, lsl #7
   14290:	cmp	r0, r1, lsl #6
   14294:	adc	r2, r2, r2
   14298:	subcs	r0, r0, r1, lsl #6
   1429c:	cmp	r0, r1, lsl #5
   142a0:	adc	r2, r2, r2
   142a4:	subcs	r0, r0, r1, lsl #5
   142a8:	cmp	r0, r1, lsl #4
   142ac:	adc	r2, r2, r2
   142b0:	subcs	r0, r0, r1, lsl #4
   142b4:	cmp	r0, r1, lsl #3
   142b8:	adc	r2, r2, r2
   142bc:	subcs	r0, r0, r1, lsl #3
   142c0:	cmp	r0, r1, lsl #2
   142c4:	adc	r2, r2, r2
   142c8:	subcs	r0, r0, r1, lsl #2
   142cc:	cmp	r0, r1, lsl #1
   142d0:	adc	r2, r2, r2
   142d4:	subcs	r0, r0, r1, lsl #1
   142d8:	cmp	r0, r1
   142dc:	adc	r2, r2, r2
   142e0:	subcs	r0, r0, r1
   142e4:	mov	r0, r2
   142e8:	bx	lr
   142ec:	moveq	r0, #1
   142f0:	movne	r0, #0
   142f4:	bx	lr
   142f8:	clz	r2, r1
   142fc:	rsb	r2, r2, #31
   14300:	lsr	r0, r0, r2
   14304:	bx	lr
   14308:	cmp	r0, #0
   1430c:	mvnne	r0, #0
   14310:	b	14574 <abort@plt+0x3828>
   14314:	cmp	r1, #0
   14318:	beq	14308 <abort@plt+0x35bc>
   1431c:	push	{r0, r1, lr}
   14320:	bl	14128 <abort@plt+0x33dc>
   14324:	pop	{r1, r2, lr}
   14328:	mul	r3, r2, r0
   1432c:	sub	r1, r1, r3
   14330:	bx	lr
   14334:	cmp	r1, #0
   14338:	beq	14544 <abort@plt+0x37f8>
   1433c:	eor	ip, r0, r1
   14340:	rsbmi	r1, r1, #0
   14344:	subs	r2, r1, #1
   14348:	beq	14510 <abort@plt+0x37c4>
   1434c:	movs	r3, r0
   14350:	rsbmi	r3, r0, #0
   14354:	cmp	r3, r1
   14358:	bls	1451c <abort@plt+0x37d0>
   1435c:	tst	r1, r2
   14360:	beq	1452c <abort@plt+0x37e0>
   14364:	clz	r2, r3
   14368:	clz	r0, r1
   1436c:	sub	r2, r0, r2
   14370:	rsbs	r2, r2, #31
   14374:	addne	r2, r2, r2, lsl #1
   14378:	mov	r0, #0
   1437c:	addne	pc, pc, r2, lsl #2
   14380:	nop			; (mov r0, r0)
   14384:	cmp	r3, r1, lsl #31
   14388:	adc	r0, r0, r0
   1438c:	subcs	r3, r3, r1, lsl #31
   14390:	cmp	r3, r1, lsl #30
   14394:	adc	r0, r0, r0
   14398:	subcs	r3, r3, r1, lsl #30
   1439c:	cmp	r3, r1, lsl #29
   143a0:	adc	r0, r0, r0
   143a4:	subcs	r3, r3, r1, lsl #29
   143a8:	cmp	r3, r1, lsl #28
   143ac:	adc	r0, r0, r0
   143b0:	subcs	r3, r3, r1, lsl #28
   143b4:	cmp	r3, r1, lsl #27
   143b8:	adc	r0, r0, r0
   143bc:	subcs	r3, r3, r1, lsl #27
   143c0:	cmp	r3, r1, lsl #26
   143c4:	adc	r0, r0, r0
   143c8:	subcs	r3, r3, r1, lsl #26
   143cc:	cmp	r3, r1, lsl #25
   143d0:	adc	r0, r0, r0
   143d4:	subcs	r3, r3, r1, lsl #25
   143d8:	cmp	r3, r1, lsl #24
   143dc:	adc	r0, r0, r0
   143e0:	subcs	r3, r3, r1, lsl #24
   143e4:	cmp	r3, r1, lsl #23
   143e8:	adc	r0, r0, r0
   143ec:	subcs	r3, r3, r1, lsl #23
   143f0:	cmp	r3, r1, lsl #22
   143f4:	adc	r0, r0, r0
   143f8:	subcs	r3, r3, r1, lsl #22
   143fc:	cmp	r3, r1, lsl #21
   14400:	adc	r0, r0, r0
   14404:	subcs	r3, r3, r1, lsl #21
   14408:	cmp	r3, r1, lsl #20
   1440c:	adc	r0, r0, r0
   14410:	subcs	r3, r3, r1, lsl #20
   14414:	cmp	r3, r1, lsl #19
   14418:	adc	r0, r0, r0
   1441c:	subcs	r3, r3, r1, lsl #19
   14420:	cmp	r3, r1, lsl #18
   14424:	adc	r0, r0, r0
   14428:	subcs	r3, r3, r1, lsl #18
   1442c:	cmp	r3, r1, lsl #17
   14430:	adc	r0, r0, r0
   14434:	subcs	r3, r3, r1, lsl #17
   14438:	cmp	r3, r1, lsl #16
   1443c:	adc	r0, r0, r0
   14440:	subcs	r3, r3, r1, lsl #16
   14444:	cmp	r3, r1, lsl #15
   14448:	adc	r0, r0, r0
   1444c:	subcs	r3, r3, r1, lsl #15
   14450:	cmp	r3, r1, lsl #14
   14454:	adc	r0, r0, r0
   14458:	subcs	r3, r3, r1, lsl #14
   1445c:	cmp	r3, r1, lsl #13
   14460:	adc	r0, r0, r0
   14464:	subcs	r3, r3, r1, lsl #13
   14468:	cmp	r3, r1, lsl #12
   1446c:	adc	r0, r0, r0
   14470:	subcs	r3, r3, r1, lsl #12
   14474:	cmp	r3, r1, lsl #11
   14478:	adc	r0, r0, r0
   1447c:	subcs	r3, r3, r1, lsl #11
   14480:	cmp	r3, r1, lsl #10
   14484:	adc	r0, r0, r0
   14488:	subcs	r3, r3, r1, lsl #10
   1448c:	cmp	r3, r1, lsl #9
   14490:	adc	r0, r0, r0
   14494:	subcs	r3, r3, r1, lsl #9
   14498:	cmp	r3, r1, lsl #8
   1449c:	adc	r0, r0, r0
   144a0:	subcs	r3, r3, r1, lsl #8
   144a4:	cmp	r3, r1, lsl #7
   144a8:	adc	r0, r0, r0
   144ac:	subcs	r3, r3, r1, lsl #7
   144b0:	cmp	r3, r1, lsl #6
   144b4:	adc	r0, r0, r0
   144b8:	subcs	r3, r3, r1, lsl #6
   144bc:	cmp	r3, r1, lsl #5
   144c0:	adc	r0, r0, r0
   144c4:	subcs	r3, r3, r1, lsl #5
   144c8:	cmp	r3, r1, lsl #4
   144cc:	adc	r0, r0, r0
   144d0:	subcs	r3, r3, r1, lsl #4
   144d4:	cmp	r3, r1, lsl #3
   144d8:	adc	r0, r0, r0
   144dc:	subcs	r3, r3, r1, lsl #3
   144e0:	cmp	r3, r1, lsl #2
   144e4:	adc	r0, r0, r0
   144e8:	subcs	r3, r3, r1, lsl #2
   144ec:	cmp	r3, r1, lsl #1
   144f0:	adc	r0, r0, r0
   144f4:	subcs	r3, r3, r1, lsl #1
   144f8:	cmp	r3, r1
   144fc:	adc	r0, r0, r0
   14500:	subcs	r3, r3, r1
   14504:	cmp	ip, #0
   14508:	rsbmi	r0, r0, #0
   1450c:	bx	lr
   14510:	teq	ip, r0
   14514:	rsbmi	r0, r0, #0
   14518:	bx	lr
   1451c:	movcc	r0, #0
   14520:	asreq	r0, ip, #31
   14524:	orreq	r0, r0, #1
   14528:	bx	lr
   1452c:	clz	r2, r1
   14530:	rsb	r2, r2, #31
   14534:	cmp	ip, #0
   14538:	lsr	r0, r3, r2
   1453c:	rsbmi	r0, r0, #0
   14540:	bx	lr
   14544:	cmp	r0, #0
   14548:	mvngt	r0, #-2147483648	; 0x80000000
   1454c:	movlt	r0, #-2147483648	; 0x80000000
   14550:	b	14574 <abort@plt+0x3828>
   14554:	cmp	r1, #0
   14558:	beq	14544 <abort@plt+0x37f8>
   1455c:	push	{r0, r1, lr}
   14560:	bl	1433c <abort@plt+0x35f0>
   14564:	pop	{r1, r2, lr}
   14568:	mul	r3, r2, r0
   1456c:	sub	r1, r1, r3
   14570:	bx	lr
   14574:	push	{r1, lr}
   14578:	mov	r0, #8
   1457c:	bl	10b60 <raise@plt>
   14580:	pop	{r1, pc}
   14584:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   14588:	mov	r7, r0
   1458c:	ldr	r6, [pc, #72]	; 145dc <abort@plt+0x3890>
   14590:	ldr	r5, [pc, #72]	; 145e0 <abort@plt+0x3894>
   14594:	add	r6, pc, r6
   14598:	add	r5, pc, r5
   1459c:	sub	r6, r6, r5
   145a0:	mov	r8, r1
   145a4:	mov	r9, r2
   145a8:	bl	10b28 <calloc@plt-0x20>
   145ac:	asrs	r6, r6, #2
   145b0:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   145b4:	mov	r4, #0
   145b8:	add	r4, r4, #1
   145bc:	ldr	r3, [r5], #4
   145c0:	mov	r2, r9
   145c4:	mov	r1, r8
   145c8:	mov	r0, r7
   145cc:	blx	r3
   145d0:	cmp	r6, r4
   145d4:	bne	145b8 <abort@plt+0x386c>
   145d8:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   145dc:	andeq	r1, r1, r4, ror r9
   145e0:	andeq	r1, r1, ip, ror #18
   145e4:	bx	lr
   145e8:	ldr	r3, [pc, #12]	; 145fc <abort@plt+0x38b0>
   145ec:	mov	r1, #0
   145f0:	add	r3, pc, r3
   145f4:	ldr	r2, [r3]
   145f8:	b	10cbc <__cxa_atexit@plt>
   145fc:	andeq	r1, r1, ip, asr #21

Disassembly of section .fini:

00014600 <.fini>:
   14600:	push	{r3, lr}
   14604:	pop	{r3, pc}
