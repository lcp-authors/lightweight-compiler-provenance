
../repos/daq-2.0.7/sfbpf/.libs/libsfbpf.so.0.0.1:     file format elf32-littlearm


Disassembly of section .init:

00000cc8 <_init>:
 cc8:	push	{r3, lr}
 ccc:	bl	ed4 <call_weak_fn>
 cd0:	pop	{r3, pc}

Disassembly of section .plt:

00000cd4 <.plt>:
 cd4:	push	{lr}		; (str lr, [sp, #-4]!)
 cd8:	ldr	lr, [pc, #4]	; ce4 <.plt+0x10>
 cdc:	add	lr, pc, lr
 ce0:	ldr	pc, [lr, #8]!
 ce4:	.word	0x0003031c

00000ce8 <calloc@plt>:
 ce8:	add	ip, pc, #0, 12
 cec:	add	ip, ip, #48, 20	; 0x30000
 cf0:	ldr	pc, [ip, #796]!	; 0x31c

00000cf4 <strcmp@plt>:
 cf4:	add	ip, pc, #0, 12
 cf8:	add	ip, ip, #48, 20	; 0x30000
 cfc:	ldr	pc, [ip, #788]!	; 0x314

00000d00 <__cxa_finalize@plt>:
 d00:	add	ip, pc, #0, 12
 d04:	add	ip, ip, #48, 20	; 0x30000
 d08:	ldr	pc, [ip, #780]!	; 0x30c

00000d0c <printf@plt>:
 d0c:	add	ip, pc, #0, 12
 d10:	add	ip, ip, #48, 20	; 0x30000
 d14:	ldr	pc, [ip, #772]!	; 0x304

00000d18 <fopen@plt>:
 d18:	add	ip, pc, #0, 12
 d1c:	add	ip, ip, #48, 20	; 0x30000
 d20:	ldr	pc, [ip, #764]!	; 0x2fc

00000d24 <getprotobyname@plt>:
 d24:	add	ip, pc, #0, 12
 d28:	add	ip, ip, #48, 20	; 0x30000
 d2c:	ldr	pc, [ip, #756]!	; 0x2f4

00000d30 <longjmp@plt>:
 d30:	add	ip, pc, #0, 12
 d34:	add	ip, ip, #48, 20	; 0x30000
 d38:	ldr	pc, [ip, #748]!	; 0x2ec

00000d3c <_setjmp@plt>:
 d3c:	add	ip, pc, #0, 12
 d40:	add	ip, ip, #48, 20	; 0x30000
 d44:	ldr	pc, [ip, #740]!	; 0x2e4

00000d48 <free@plt>:
 d48:	add	ip, pc, #0, 12
 d4c:	add	ip, ip, #48, 20	; 0x30000
 d50:	ldr	pc, [ip, #732]!	; 0x2dc

00000d54 <getnetbyname@plt>:
 d54:	add	ip, pc, #0, 12
 d58:	add	ip, ip, #48, 20	; 0x30000
 d5c:	ldr	pc, [ip, #724]!	; 0x2d4

00000d60 <ferror@plt>:
 d60:	add	ip, pc, #0, 12
 d64:	add	ip, ip, #48, 20	; 0x30000
 d68:	ldr	pc, [ip, #716]!	; 0x2cc

00000d6c <memcpy@plt>:
 d6c:	add	ip, pc, #0, 12
 d70:	add	ip, ip, #48, 20	; 0x30000
 d74:	ldr	pc, [ip, #708]!	; 0x2c4

00000d78 <strdup@plt>:
 d78:	add	ip, pc, #0, 12
 d7c:	add	ip, ip, #48, 20	; 0x30000
 d80:	ldr	pc, [ip, #700]!	; 0x2bc

00000d84 <rewind@plt>:
 d84:	add	ip, pc, #0, 12
 d88:	add	ip, ip, #48, 20	; 0x30000
 d8c:	ldr	pc, [ip, #692]!	; 0x2b4

00000d90 <realloc@plt>:
 d90:	add	ip, pc, #0, 12
 d94:	add	ip, ip, #48, 20	; 0x30000
 d98:	ldr	pc, [ip, #684]!	; 0x2ac

00000d9c <fwrite@plt>:
 d9c:	add	ip, pc, #0, 12
 da0:	add	ip, ip, #48, 20	; 0x30000
 da4:	ldr	pc, [ip, #676]!	; 0x2a4

00000da8 <fread@plt>:
 da8:	add	ip, pc, #0, 12
 dac:	add	ip, ip, #48, 20	; 0x30000
 db0:	ldr	pc, [ip, #668]!	; 0x29c

00000db4 <puts@plt>:
 db4:	add	ip, pc, #0, 12
 db8:	add	ip, ip, #48, 20	; 0x30000
 dbc:	ldr	pc, [ip, #660]!	; 0x294

00000dc0 <malloc@plt>:
 dc0:	add	ip, pc, #0, 12
 dc4:	add	ip, ip, #48, 20	; 0x30000
 dc8:	ldr	pc, [ip, #652]!	; 0x28c

00000dcc <__gmon_start__@plt>:
 dcc:	add	ip, pc, #0, 12
 dd0:	add	ip, ip, #48, 20	; 0x30000
 dd4:	ldr	pc, [ip, #644]!	; 0x284

00000dd8 <__ctype_b_loc@plt>:
 dd8:	add	ip, pc, #0, 12
 ddc:	add	ip, ip, #48, 20	; 0x30000
 de0:	ldr	pc, [ip, #636]!	; 0x27c

00000de4 <exit@plt>:
 de4:	add	ip, pc, #0, 12
 de8:	add	ip, ip, #48, 20	; 0x30000
 dec:	ldr	pc, [ip, #628]!	; 0x274

00000df0 <strlen@plt>:
 df0:	add	ip, pc, #0, 12
 df4:	add	ip, ip, #48, 20	; 0x30000
 df8:	ldr	pc, [ip, #620]!	; 0x26c

00000dfc <strchr@plt>:
 dfc:	add	ip, pc, #0, 12
 e00:	add	ip, ip, #48, 20	; 0x30000
 e04:	ldr	pc, [ip, #612]!	; 0x264

00000e08 <fprintf@plt>:
 e08:	add	ip, pc, #0, 12
 e0c:	add	ip, ip, #48, 20	; 0x30000
 e10:	ldr	pc, [ip, #604]!	; 0x25c

00000e14 <__errno_location@plt>:
 e14:	add	ip, pc, #0, 12
 e18:	add	ip, ip, #48, 20	; 0x30000
 e1c:	ldr	pc, [ip, #596]!	; 0x254

00000e20 <getservbyname@plt>:
 e20:	add	ip, pc, #0, 12
 e24:	add	ip, ip, #48, 20	; 0x30000
 e28:	ldr	pc, [ip, #588]!	; 0x24c

00000e2c <memset@plt>:
 e2c:	add	ip, pc, #0, 12
 e30:	add	ip, ip, #48, 20	; 0x30000
 e34:	ldr	pc, [ip, #580]!	; 0x244

00000e38 <putchar@plt>:
 e38:	add	ip, pc, #0, 12
 e3c:	add	ip, ip, #48, 20	; 0x30000
 e40:	ldr	pc, [ip, #572]!	; 0x23c

00000e44 <strncpy@plt>:
 e44:	add	ip, pc, #0, 12
 e48:	add	ip, ip, #48, 20	; 0x30000
 e4c:	ldr	pc, [ip, #564]!	; 0x234

00000e50 <fileno@plt>:
 e50:	add	ip, pc, #0, 12
 e54:	add	ip, ip, #48, 20	; 0x30000
 e58:	ldr	pc, [ip, #556]!	; 0x22c

00000e5c <sscanf@plt>:
 e5c:	add	ip, pc, #0, 12
 e60:	add	ip, ip, #48, 20	; 0x30000
 e64:	ldr	pc, [ip, #548]!	; 0x224

00000e68 <clearerr@plt>:
 e68:	add	ip, pc, #0, 12
 e6c:	add	ip, ip, #48, 20	; 0x30000
 e70:	ldr	pc, [ip, #540]!	; 0x21c

00000e74 <vsnprintf@plt>:
 e74:	add	ip, pc, #0, 12
 e78:	add	ip, ip, #48, 20	; 0x30000
 e7c:	ldr	pc, [ip, #532]!	; 0x214

00000e80 <freeaddrinfo@plt>:
 e80:	add	ip, pc, #0, 12
 e84:	add	ip, ip, #48, 20	; 0x30000
 e88:	ldr	pc, [ip, #524]!	; 0x20c

00000e8c <getaddrinfo@plt>:
 e8c:	add	ip, pc, #0, 12
 e90:	add	ip, ip, #48, 20	; 0x30000
 e94:	ldr	pc, [ip, #516]!	; 0x204

00000e98 <ffs@plt>:
 e98:	add	ip, pc, #0, 12
 e9c:	add	ip, ip, #48, 20	; 0x30000
 ea0:	ldr	pc, [ip, #508]!	; 0x1fc

00000ea4 <gethostbyname@plt>:
 ea4:	add	ip, pc, #0, 12
 ea8:	add	ip, ip, #48, 20	; 0x30000
 eac:	ldr	pc, [ip, #500]!	; 0x1f4

00000eb0 <isatty@plt>:
 eb0:	add	ip, pc, #0, 12
 eb4:	add	ip, ip, #48, 20	; 0x30000
 eb8:	ldr	pc, [ip, #492]!	; 0x1ec

00000ebc <abort@plt>:
 ebc:	add	ip, pc, #0, 12
 ec0:	add	ip, ip, #48, 20	; 0x30000
 ec4:	ldr	pc, [ip, #484]!	; 0x1e4

00000ec8 <getc@plt>:
 ec8:	add	ip, pc, #0, 12
 ecc:	add	ip, ip, #48, 20	; 0x30000
 ed0:	ldr	pc, [ip, #476]!	; 0x1dc

Disassembly of section .text:

00000ed4 <call_weak_fn>:
     ed4:	ldr	r3, [pc, #20]	; ef0 <call_weak_fn+0x1c>
     ed8:	ldr	r2, [pc, #20]	; ef4 <call_weak_fn+0x20>
     edc:	add	r3, pc, r3
     ee0:	ldr	r2, [r3, r2]
     ee4:	cmp	r2, #0
     ee8:	bxeq	lr
     eec:	b	dcc <__gmon_start__@plt>
     ef0:	.word	0x0003011c
     ef4:	.word	0x000000dc

00000ef8 <deregister_tm_clones>:
     ef8:	ldr	r0, [pc, #44]	; f2c <deregister_tm_clones+0x34>
     efc:	ldr	r3, [pc, #44]	; f30 <deregister_tm_clones+0x38>
     f00:	add	r0, pc, r0
     f04:	add	r3, pc, r3
     f08:	cmp	r3, r0
     f0c:	ldr	r3, [pc, #32]	; f34 <deregister_tm_clones+0x3c>
     f10:	add	r3, pc, r3
     f14:	bxeq	lr
     f18:	ldr	r2, [pc, #24]	; f38 <deregister_tm_clones+0x40>
     f1c:	ldr	r3, [r3, r2]
     f20:	cmp	r3, #0
     f24:	bxeq	lr
     f28:	bx	r3
     f2c:	.word	0x00030454
     f30:	.word	0x00030450
     f34:	.word	0x000300e8
     f38:	.word	0x000000bc

00000f3c <register_tm_clones>:
     f3c:	ldr	r0, [pc, #56]	; f7c <register_tm_clones+0x40>
     f40:	ldr	r3, [pc, #56]	; f80 <register_tm_clones+0x44>
     f44:	add	r0, pc, r0
     f48:	add	r3, pc, r3
     f4c:	sub	r1, r3, r0
     f50:	ldr	r3, [pc, #44]	; f84 <register_tm_clones+0x48>
     f54:	asr	r1, r1, #2
     f58:	add	r3, pc, r3
     f5c:	add	r1, r1, r1, lsr #31
     f60:	asrs	r1, r1, #1
     f64:	bxeq	lr
     f68:	ldr	r2, [pc, #24]	; f88 <register_tm_clones+0x4c>
     f6c:	ldr	r3, [r3, r2]
     f70:	cmp	r3, #0
     f74:	bxeq	lr
     f78:	bx	r3
     f7c:	.word	0x00030410
     f80:	.word	0x0003040c
     f84:	.word	0x000300a0
     f88:	.word	0x000000f8

00000f8c <__do_global_dtors_aux>:
     f8c:	ldr	r3, [pc, #76]	; fe0 <__do_global_dtors_aux+0x54>
     f90:	ldr	r2, [pc, #76]	; fe4 <__do_global_dtors_aux+0x58>
     f94:	add	r3, pc, r3
     f98:	add	r2, pc, r2
     f9c:	ldrb	r3, [r3]
     fa0:	cmp	r3, #0
     fa4:	bxne	lr
     fa8:	ldr	r3, [pc, #56]	; fe8 <__do_global_dtors_aux+0x5c>
     fac:	push	{r4, lr}
     fb0:	ldr	r3, [r2, r3]
     fb4:	cmp	r3, #0
     fb8:	beq	fc8 <__do_global_dtors_aux+0x3c>
     fbc:	ldr	r3, [pc, #40]	; fec <__do_global_dtors_aux+0x60>
     fc0:	ldr	r0, [pc, r3]
     fc4:	bl	d00 <__cxa_finalize@plt>
     fc8:	bl	ef8 <deregister_tm_clones>
     fcc:	ldr	r3, [pc, #28]	; ff0 <__do_global_dtors_aux+0x64>
     fd0:	mov	r2, #1
     fd4:	add	r3, pc, r3
     fd8:	strb	r2, [r3]
     fdc:	pop	{r4, pc}
     fe0:	.word	0x000303c4
     fe4:	.word	0x00030060
     fe8:	.word	0x000000b8
     fec:	.word	0x0003013c
     ff0:	.word	0x00030384

00000ff4 <frame_dummy>:
     ff4:	b	f3c <register_tm_clones>

00000ff8 <sfbpf_filter>:
     ff8:	cmp	r0, #0
     ffc:	bne	1008 <sfbpf_filter+0x10>
    1000:	mvn	r0, #0
    1004:	bx	lr
    1008:	strd	r4, [sp, #-16]!
    100c:	mov	r4, #0
    1010:	sub	ip, r0, #8
    1014:	mov	r0, r4
    1018:	str	r6, [sp, #8]
    101c:	str	lr, [sp, #12]
    1020:	sub	sp, sp, #64	; 0x40
    1024:	ldrh	lr, [ip, #8]
    1028:	add	r5, ip, #8
    102c:	cmp	lr, #177	; 0xb1
    1030:	addls	pc, pc, lr, lsl #2
    1034:	b	1618 <sfbpf_filter+0x620>
    1038:	b	14ac <sfbpf_filter+0x4b4>
    103c:	b	14a0 <sfbpf_filter+0x4a8>
    1040:	b	1488 <sfbpf_filter+0x490>
    1044:	b	1470 <sfbpf_filter+0x478>
    1048:	b	1460 <sfbpf_filter+0x468>
    104c:	b	1454 <sfbpf_filter+0x45c>
    1050:	b	144c <sfbpf_filter+0x454>
    1054:	b	14ec <sfbpf_filter+0x4f4>
    1058:	b	1618 <sfbpf_filter+0x620>
    105c:	b	1618 <sfbpf_filter+0x620>
    1060:	b	1618 <sfbpf_filter+0x620>
    1064:	b	1618 <sfbpf_filter+0x620>
    1068:	b	14e0 <sfbpf_filter+0x4e8>
    106c:	b	1618 <sfbpf_filter+0x620>
    1070:	b	1618 <sfbpf_filter+0x620>
    1074:	b	1618 <sfbpf_filter+0x620>
    1078:	b	1618 <sfbpf_filter+0x620>
    107c:	b	1618 <sfbpf_filter+0x620>
    1080:	b	1618 <sfbpf_filter+0x620>
    1084:	b	1618 <sfbpf_filter+0x620>
    1088:	b	14d0 <sfbpf_filter+0x4d8>
    108c:	b	14b8 <sfbpf_filter+0x4c0>
    1090:	b	130c <sfbpf_filter+0x314>
    1094:	b	1618 <sfbpf_filter+0x620>
    1098:	b	1618 <sfbpf_filter+0x620>
    109c:	b	1618 <sfbpf_filter+0x620>
    10a0:	b	1618 <sfbpf_filter+0x620>
    10a4:	b	1618 <sfbpf_filter+0x620>
    10a8:	b	1504 <sfbpf_filter+0x50c>
    10ac:	b	14f8 <sfbpf_filter+0x500>
    10b0:	b	1618 <sfbpf_filter+0x620>
    10b4:	b	1618 <sfbpf_filter+0x620>
    10b8:	b	142c <sfbpf_filter+0x434>
    10bc:	b	1618 <sfbpf_filter+0x620>
    10c0:	b	1618 <sfbpf_filter+0x620>
    10c4:	b	1618 <sfbpf_filter+0x620>
    10c8:	b	141c <sfbpf_filter+0x424>
    10cc:	b	15dc <sfbpf_filter+0x5e4>
    10d0:	b	1618 <sfbpf_filter+0x620>
    10d4:	b	1618 <sfbpf_filter+0x620>
    10d8:	b	15c8 <sfbpf_filter+0x5d0>
    10dc:	b	1618 <sfbpf_filter+0x620>
    10e0:	b	1618 <sfbpf_filter+0x620>
    10e4:	b	1618 <sfbpf_filter+0x620>
    10e8:	b	15ec <sfbpf_filter+0x5f4>
    10ec:	b	158c <sfbpf_filter+0x594>
    10f0:	b	1618 <sfbpf_filter+0x620>
    10f4:	b	1618 <sfbpf_filter+0x620>
    10f8:	b	15a8 <sfbpf_filter+0x5b0>
    10fc:	b	1618 <sfbpf_filter+0x620>
    1100:	b	1618 <sfbpf_filter+0x620>
    1104:	b	1618 <sfbpf_filter+0x620>
    1108:	b	1598 <sfbpf_filter+0x5a0>
    110c:	b	15b8 <sfbpf_filter+0x5c0>
    1110:	b	1618 <sfbpf_filter+0x620>
    1114:	b	1618 <sfbpf_filter+0x620>
    1118:	b	1618 <sfbpf_filter+0x620>
    111c:	b	1618 <sfbpf_filter+0x620>
    1120:	b	1618 <sfbpf_filter+0x620>
    1124:	b	1618 <sfbpf_filter+0x620>
    1128:	b	1300 <sfbpf_filter+0x308>
    112c:	b	1548 <sfbpf_filter+0x550>
    1130:	b	1618 <sfbpf_filter+0x620>
    1134:	b	1618 <sfbpf_filter+0x620>
    1138:	b	1530 <sfbpf_filter+0x538>
    113c:	b	1618 <sfbpf_filter+0x620>
    1140:	b	1618 <sfbpf_filter+0x620>
    1144:	b	1618 <sfbpf_filter+0x620>
    1148:	b	1520 <sfbpf_filter+0x528>
    114c:	b	1510 <sfbpf_filter+0x518>
    1150:	b	1618 <sfbpf_filter+0x620>
    1154:	b	1618 <sfbpf_filter+0x620>
    1158:	b	1560 <sfbpf_filter+0x568>
    115c:	b	1618 <sfbpf_filter+0x620>
    1160:	b	1618 <sfbpf_filter+0x620>
    1164:	b	1618 <sfbpf_filter+0x620>
    1168:	b	1554 <sfbpf_filter+0x55c>
    116c:	b	1404 <sfbpf_filter+0x40c>
    1170:	b	1618 <sfbpf_filter+0x620>
    1174:	b	1618 <sfbpf_filter+0x620>
    1178:	b	13e8 <sfbpf_filter+0x3f0>
    117c:	b	1618 <sfbpf_filter+0x620>
    1180:	b	1618 <sfbpf_filter+0x620>
    1184:	b	1618 <sfbpf_filter+0x620>
    1188:	b	13d8 <sfbpf_filter+0x3e0>
    118c:	b	1618 <sfbpf_filter+0x620>
    1190:	b	1618 <sfbpf_filter+0x620>
    1194:	b	1618 <sfbpf_filter+0x620>
    1198:	b	1618 <sfbpf_filter+0x620>
    119c:	b	1618 <sfbpf_filter+0x620>
    11a0:	b	1618 <sfbpf_filter+0x620>
    11a4:	b	1618 <sfbpf_filter+0x620>
    11a8:	b	13cc <sfbpf_filter+0x3d4>
    11ac:	b	1618 <sfbpf_filter+0x620>
    11b0:	b	1618 <sfbpf_filter+0x620>
    11b4:	b	1618 <sfbpf_filter+0x620>
    11b8:	b	13b4 <sfbpf_filter+0x3bc>
    11bc:	b	139c <sfbpf_filter+0x3a4>
    11c0:	b	1618 <sfbpf_filter+0x620>
    11c4:	b	1618 <sfbpf_filter+0x620>
    11c8:	b	138c <sfbpf_filter+0x394>
    11cc:	b	1618 <sfbpf_filter+0x620>
    11d0:	b	1618 <sfbpf_filter+0x620>
    11d4:	b	1618 <sfbpf_filter+0x620>
    11d8:	b	1618 <sfbpf_filter+0x620>
    11dc:	b	1618 <sfbpf_filter+0x620>
    11e0:	b	1618 <sfbpf_filter+0x620>
    11e4:	b	1618 <sfbpf_filter+0x620>
    11e8:	b	1380 <sfbpf_filter+0x388>
    11ec:	b	1618 <sfbpf_filter+0x620>
    11f0:	b	1618 <sfbpf_filter+0x620>
    11f4:	b	1618 <sfbpf_filter+0x620>
    11f8:	b	1618 <sfbpf_filter+0x620>
    11fc:	b	1618 <sfbpf_filter+0x620>
    1200:	b	1618 <sfbpf_filter+0x620>
    1204:	b	1618 <sfbpf_filter+0x620>
    1208:	b	1370 <sfbpf_filter+0x378>
    120c:	b	1618 <sfbpf_filter+0x620>
    1210:	b	1618 <sfbpf_filter+0x620>
    1214:	b	1618 <sfbpf_filter+0x620>
    1218:	b	1618 <sfbpf_filter+0x620>
    121c:	b	1618 <sfbpf_filter+0x620>
    1220:	b	1618 <sfbpf_filter+0x620>
    1224:	b	1618 <sfbpf_filter+0x620>
    1228:	b	1364 <sfbpf_filter+0x36c>
    122c:	b	1618 <sfbpf_filter+0x620>
    1230:	b	1618 <sfbpf_filter+0x620>
    1234:	b	1618 <sfbpf_filter+0x620>
    1238:	b	134c <sfbpf_filter+0x354>
    123c:	b	1340 <sfbpf_filter+0x348>
    1240:	b	1618 <sfbpf_filter+0x620>
    1244:	b	1618 <sfbpf_filter+0x620>
    1248:	b	1358 <sfbpf_filter+0x360>
    124c:	b	1618 <sfbpf_filter+0x620>
    1250:	b	1618 <sfbpf_filter+0x620>
    1254:	b	1334 <sfbpf_filter+0x33c>
    1258:	b	1618 <sfbpf_filter+0x620>
    125c:	b	1618 <sfbpf_filter+0x620>
    1260:	b	1618 <sfbpf_filter+0x620>
    1264:	b	1618 <sfbpf_filter+0x620>
    1268:	b	1618 <sfbpf_filter+0x620>
    126c:	b	1618 <sfbpf_filter+0x620>
    1270:	b	1618 <sfbpf_filter+0x620>
    1274:	b	1618 <sfbpf_filter+0x620>
    1278:	b	1618 <sfbpf_filter+0x620>
    127c:	b	1618 <sfbpf_filter+0x620>
    1280:	b	1618 <sfbpf_filter+0x620>
    1284:	b	1618 <sfbpf_filter+0x620>
    1288:	b	1618 <sfbpf_filter+0x620>
    128c:	b	1618 <sfbpf_filter+0x620>
    1290:	b	1618 <sfbpf_filter+0x620>
    1294:	b	1618 <sfbpf_filter+0x620>
    1298:	b	1618 <sfbpf_filter+0x620>
    129c:	b	1618 <sfbpf_filter+0x620>
    12a0:	b	1618 <sfbpf_filter+0x620>
    12a4:	b	1618 <sfbpf_filter+0x620>
    12a8:	b	1618 <sfbpf_filter+0x620>
    12ac:	b	1618 <sfbpf_filter+0x620>
    12b0:	b	1618 <sfbpf_filter+0x620>
    12b4:	b	1618 <sfbpf_filter+0x620>
    12b8:	b	1618 <sfbpf_filter+0x620>
    12bc:	b	1618 <sfbpf_filter+0x620>
    12c0:	b	1618 <sfbpf_filter+0x620>
    12c4:	b	1618 <sfbpf_filter+0x620>
    12c8:	b	1618 <sfbpf_filter+0x620>
    12cc:	b	1618 <sfbpf_filter+0x620>
    12d0:	b	1618 <sfbpf_filter+0x620>
    12d4:	b	1618 <sfbpf_filter+0x620>
    12d8:	b	1618 <sfbpf_filter+0x620>
    12dc:	b	1618 <sfbpf_filter+0x620>
    12e0:	b	1618 <sfbpf_filter+0x620>
    12e4:	b	1618 <sfbpf_filter+0x620>
    12e8:	b	1618 <sfbpf_filter+0x620>
    12ec:	b	1618 <sfbpf_filter+0x620>
    12f0:	b	1618 <sfbpf_filter+0x620>
    12f4:	b	1618 <sfbpf_filter+0x620>
    12f8:	b	1618 <sfbpf_filter+0x620>
    12fc:	b	1320 <sfbpf_filter+0x328>
    1300:	cmp	r4, #0
    1304:	bne	160c <sfbpf_filter+0x614>
    1308:	mov	r0, r4
    130c:	add	sp, sp, #64	; 0x40
    1310:	ldrd	r4, [sp]
    1314:	ldr	r6, [sp, #8]
    1318:	add	sp, sp, #12
    131c:	pop	{pc}		; (ldr pc, [sp], #4)
    1320:	ldr	ip, [ip, #12]
    1324:	cmp	ip, r3
    1328:	bcc	15f8 <sfbpf_filter+0x600>
    132c:	mov	r0, #0
    1330:	b	130c <sfbpf_filter+0x314>
    1334:	mov	ip, r5
    1338:	mov	r0, r4
    133c:	b	1024 <sfbpf_filter+0x2c>
    1340:	mov	ip, r5
    1344:	mov	r4, r2
    1348:	b	1024 <sfbpf_filter+0x2c>
    134c:	mov	ip, r5
    1350:	mov	r0, r2
    1354:	b	1024 <sfbpf_filter+0x2c>
    1358:	rsb	r0, r0, #0
    135c:	mov	ip, r5
    1360:	b	1024 <sfbpf_filter+0x2c>
    1364:	lsr	r0, r0, r4
    1368:	mov	ip, r5
    136c:	b	1024 <sfbpf_filter+0x2c>
    1370:	ldr	lr, [ip, #12]
    1374:	mov	ip, r5
    1378:	lsr	r0, r0, lr
    137c:	b	1024 <sfbpf_filter+0x2c>
    1380:	lsl	r0, r0, r4
    1384:	mov	ip, r5
    1388:	b	1024 <sfbpf_filter+0x2c>
    138c:	ldr	lr, [ip, #12]
    1390:	mov	ip, r5
    1394:	lsl	r0, r0, lr
    1398:	b	1024 <sfbpf_filter+0x2c>
    139c:	ldr	lr, [ip, #12]
    13a0:	add	r4, sp, #64	; 0x40
    13a4:	mov	ip, r5
    13a8:	add	lr, r4, lr, lsl #2
    13ac:	ldr	r4, [lr, #-64]	; 0xffffffc0
    13b0:	b	1024 <sfbpf_filter+0x2c>
    13b4:	ldr	r0, [ip, #12]
    13b8:	add	lr, sp, #64	; 0x40
    13bc:	mov	ip, r5
    13c0:	add	r0, lr, r0, lsl #2
    13c4:	ldr	r0, [r0, #-64]	; 0xffffffc0
    13c8:	b	1024 <sfbpf_filter+0x2c>
    13cc:	and	r0, r0, r4
    13d0:	mov	ip, r5
    13d4:	b	1024 <sfbpf_filter+0x2c>
    13d8:	ldr	lr, [ip, #12]
    13dc:	mov	ip, r5
    13e0:	and	r0, r0, lr
    13e4:	b	1024 <sfbpf_filter+0x2c>
    13e8:	ldr	r0, [ip, #12]
    13ec:	add	r0, r4, r0
    13f0:	cmp	r0, r3
    13f4:	bcs	132c <sfbpf_filter+0x334>
    13f8:	ldrb	r0, [r1, r0]
    13fc:	mov	ip, r5
    1400:	b	1024 <sfbpf_filter+0x2c>
    1404:	tst	r0, r4
    1408:	bne	14c4 <sfbpf_filter+0x4cc>
    140c:	ldrb	ip, [ip, #11]
    1410:	lsl	ip, ip, #3
    1414:	add	ip, r5, ip
    1418:	b	1024 <sfbpf_filter+0x2c>
    141c:	ldr	lr, [ip, #12]
    1420:	mov	ip, r5
    1424:	mul	r0, lr, r0
    1428:	b	1024 <sfbpf_filter+0x2c>
    142c:	ldr	r0, [ip, #12]
    1430:	add	ip, r0, #4
    1434:	cmp	ip, r3
    1438:	bhi	132c <sfbpf_filter+0x334>
    143c:	ldr	r0, [r1, r0]
    1440:	mov	ip, r5
    1444:	rev	r0, r0
    1448:	b	1024 <sfbpf_filter+0x2c>
    144c:	ldr	r0, [ip, #12]
    1450:	b	130c <sfbpf_filter+0x314>
    1454:	ldr	ip, [ip, #12]
    1458:	add	ip, r5, ip, lsl #3
    145c:	b	1024 <sfbpf_filter+0x2c>
    1460:	ldr	lr, [ip, #12]
    1464:	mov	ip, r5
    1468:	add	r0, r0, lr
    146c:	b	1024 <sfbpf_filter+0x2c>
    1470:	ldr	lr, [ip, #12]
    1474:	mov	ip, r5
    1478:	add	r5, sp, #64	; 0x40
    147c:	add	lr, r5, lr, lsl #2
    1480:	str	r4, [lr, #-64]	; 0xffffffc0
    1484:	b	1024 <sfbpf_filter+0x2c>
    1488:	ldr	lr, [ip, #12]
    148c:	mov	ip, r5
    1490:	add	r5, sp, #64	; 0x40
    1494:	add	lr, r5, lr, lsl #2
    1498:	str	r0, [lr, #-64]	; 0xffffffc0
    149c:	b	1024 <sfbpf_filter+0x2c>
    14a0:	ldr	r4, [ip, #12]
    14a4:	mov	ip, r5
    14a8:	b	1024 <sfbpf_filter+0x2c>
    14ac:	ldr	r0, [ip, #12]
    14b0:	mov	ip, r5
    14b4:	b	1024 <sfbpf_filter+0x2c>
    14b8:	ldr	lr, [ip, #12]
    14bc:	cmp	lr, r0
    14c0:	bne	140c <sfbpf_filter+0x414>
    14c4:	ldrb	ip, [ip, #10]
    14c8:	lsl	ip, ip, #3
    14cc:	b	1414 <sfbpf_filter+0x41c>
    14d0:	ldr	lr, [ip, #12]
    14d4:	mov	ip, r5
    14d8:	sub	r0, r0, lr
    14dc:	b	1024 <sfbpf_filter+0x2c>
    14e0:	add	r0, r0, r4
    14e4:	mov	ip, r5
    14e8:	b	1024 <sfbpf_filter+0x2c>
    14ec:	mov	ip, r5
    14f0:	mov	r4, r0
    14f4:	b	1024 <sfbpf_filter+0x2c>
    14f8:	cmp	r0, r4
    14fc:	bne	140c <sfbpf_filter+0x414>
    1500:	b	14c4 <sfbpf_filter+0x4cc>
    1504:	sub	r0, r0, r4
    1508:	mov	ip, r5
    150c:	b	1024 <sfbpf_filter+0x2c>
    1510:	ldr	lr, [ip, #12]
    1514:	tst	r0, lr
    1518:	beq	140c <sfbpf_filter+0x414>
    151c:	b	14c4 <sfbpf_filter+0x4cc>
    1520:	ldr	lr, [ip, #12]
    1524:	mov	ip, r5
    1528:	orr	r0, r0, lr
    152c:	b	1024 <sfbpf_filter+0x2c>
    1530:	ldr	r0, [ip, #12]
    1534:	add	r0, r4, r0
    1538:	add	ip, r0, #4
    153c:	cmp	ip, r3
    1540:	bhi	132c <sfbpf_filter+0x334>
    1544:	b	143c <sfbpf_filter+0x444>
    1548:	cmp	r0, r4
    154c:	bcc	140c <sfbpf_filter+0x414>
    1550:	b	14c4 <sfbpf_filter+0x4cc>
    1554:	orr	r0, r0, r4
    1558:	mov	ip, r5
    155c:	b	1024 <sfbpf_filter+0x2c>
    1560:	ldr	r0, [ip, #12]
    1564:	add	r0, r4, r0
    1568:	add	ip, r0, #2
    156c:	cmp	ip, r3
    1570:	bhi	132c <sfbpf_filter+0x334>
    1574:	add	r6, r1, r0
    1578:	ldrb	lr, [r1, r0]
    157c:	mov	ip, r5
    1580:	ldrb	r0, [r6, #1]
    1584:	orr	r0, r0, lr, lsl #8
    1588:	b	1024 <sfbpf_filter+0x2c>
    158c:	cmp	r0, r4
    1590:	bls	140c <sfbpf_filter+0x414>
    1594:	b	14c4 <sfbpf_filter+0x4cc>
    1598:	ldr	lr, [ip, #12]
    159c:	mov	ip, r5
    15a0:	udiv	r0, r0, lr
    15a4:	b	1024 <sfbpf_filter+0x2c>
    15a8:	ldr	r0, [ip, #12]
    15ac:	cmp	r0, r3
    15b0:	bcs	132c <sfbpf_filter+0x334>
    15b4:	b	13f8 <sfbpf_filter+0x400>
    15b8:	ldr	lr, [ip, #12]
    15bc:	cmp	lr, r0
    15c0:	bhi	140c <sfbpf_filter+0x414>
    15c4:	b	14c4 <sfbpf_filter+0x4cc>
    15c8:	ldr	r0, [ip, #12]
    15cc:	add	ip, r0, #2
    15d0:	cmp	ip, r3
    15d4:	bhi	132c <sfbpf_filter+0x334>
    15d8:	b	1574 <sfbpf_filter+0x57c>
    15dc:	ldr	lr, [ip, #12]
    15e0:	cmp	lr, r0
    15e4:	bcs	140c <sfbpf_filter+0x414>
    15e8:	b	14c4 <sfbpf_filter+0x4cc>
    15ec:	mul	r0, r4, r0
    15f0:	mov	ip, r5
    15f4:	b	1024 <sfbpf_filter+0x2c>
    15f8:	ldrb	r4, [r1, ip]
    15fc:	mov	ip, r5
    1600:	lsl	r4, r4, #2
    1604:	and	r4, r4, #60	; 0x3c
    1608:	b	1024 <sfbpf_filter+0x2c>
    160c:	udiv	r0, r0, r4
    1610:	mov	ip, r5
    1614:	b	1024 <sfbpf_filter+0x2c>
    1618:	bl	ebc <abort@plt>

0000161c <sfbpf_validate>:
    161c:	cmp	r1, #0
    1620:	ble	17b4 <sfbpf_validate+0x198>
    1624:	mov	ip, #0
    1628:	push	{lr}		; (str lr, [sp, #-4]!)
    162c:	mov	lr, r0
    1630:	ldrh	r2, [lr]
    1634:	and	r3, r2, #7
    1638:	sub	r3, r3, #2
    163c:	cmp	r3, #5
    1640:	addls	pc, pc, r3, lsl #2
    1644:	b	1700 <sfbpf_validate+0xe4>
    1648:	b	1728 <sfbpf_validate+0x10c>
    164c:	b	1728 <sfbpf_validate+0x10c>
    1650:	b	1660 <sfbpf_validate+0x44>
    1654:	b	16d0 <sfbpf_validate+0xb4>
    1658:	b	16a0 <sfbpf_validate+0x84>
    165c:	b	16a0 <sfbpf_validate+0x84>
    1660:	and	r3, r2, #240	; 0xf0
    1664:	cmp	r3, #64	; 0x40
    1668:	beq	16a0 <sfbpf_validate+0x84>
    166c:	bhi	1788 <sfbpf_validate+0x16c>
    1670:	cmp	r3, #16
    1674:	beq	16a0 <sfbpf_validate+0x84>
    1678:	bls	177c <sfbpf_validate+0x160>
    167c:	cmp	r3, #32
    1680:	beq	16a0 <sfbpf_validate+0x84>
    1684:	cmp	r3, #48	; 0x30
    1688:	bne	1740 <sfbpf_validate+0x124>
    168c:	tst	r2, #24
    1690:	bne	16a0 <sfbpf_validate+0x84>
    1694:	ldr	r3, [lr, #4]
    1698:	cmp	r3, #0
    169c:	beq	1740 <sfbpf_validate+0x124>
    16a0:	add	r3, ip, #1
    16a4:	cmp	r1, r3
    16a8:	mov	ip, r3
    16ac:	add	lr, lr, #8
    16b0:	bhi	1630 <sfbpf_validate+0x14>
    16b4:	add	r1, r0, r1, lsl #3
    16b8:	ldrh	r0, [r1, #-8]
    16bc:	and	r0, r0, #7
    16c0:	sub	r0, r0, #6
    16c4:	clz	r0, r0
    16c8:	lsr	r0, r0, #5
    16cc:	b	1744 <sfbpf_validate+0x128>
    16d0:	and	r2, r2, #240	; 0xf0
    16d4:	add	r3, ip, #1
    16d8:	cmp	r2, #32
    16dc:	beq	1758 <sfbpf_validate+0x13c>
    16e0:	bhi	1748 <sfbpf_validate+0x12c>
    16e4:	cmp	r2, #0
    16e8:	bne	1738 <sfbpf_validate+0x11c>
    16ec:	ldr	ip, [lr, #4]
    16f0:	add	ip, r3, ip
    16f4:	cmp	ip, r1
    16f8:	bcc	16a4 <sfbpf_validate+0x88>
    16fc:	b	1740 <sfbpf_validate+0x124>
    1700:	and	r2, r2, #224	; 0xe0
    1704:	cmp	r2, #64	; 0x40
    1708:	beq	16a0 <sfbpf_validate+0x84>
    170c:	bls	17bc <sfbpf_validate+0x1a0>
    1710:	cmp	r2, #128	; 0x80
    1714:	beq	16a0 <sfbpf_validate+0x84>
    1718:	cmp	r2, #160	; 0xa0
    171c:	beq	16a0 <sfbpf_validate+0x84>
    1720:	cmp	r2, #96	; 0x60
    1724:	bne	1740 <sfbpf_validate+0x124>
    1728:	ldr	r3, [lr, #4]
    172c:	cmp	r3, #15
    1730:	bls	16a0 <sfbpf_validate+0x84>
    1734:	b	1740 <sfbpf_validate+0x124>
    1738:	cmp	r2, #16
    173c:	beq	1758 <sfbpf_validate+0x13c>
    1740:	mov	r0, #0
    1744:	pop	{pc}		; (ldr pc, [sp], #4)
    1748:	cmp	r2, #48	; 0x30
    174c:	beq	1758 <sfbpf_validate+0x13c>
    1750:	cmp	r2, #64	; 0x40
    1754:	bne	1740 <sfbpf_validate+0x124>
    1758:	ldrb	r2, [lr, #2]
    175c:	add	r2, r2, r3
    1760:	cmp	r2, r1
    1764:	bcs	1740 <sfbpf_validate+0x124>
    1768:	ldrb	r2, [lr, #3]
    176c:	add	r2, r2, r3
    1770:	cmp	r2, r1
    1774:	bcc	16a4 <sfbpf_validate+0x88>
    1778:	b	1740 <sfbpf_validate+0x124>
    177c:	cmp	r3, #0
    1780:	bne	1740 <sfbpf_validate+0x124>
    1784:	b	16a0 <sfbpf_validate+0x84>
    1788:	cmp	r3, #96	; 0x60
    178c:	beq	16a0 <sfbpf_validate+0x84>
    1790:	bls	17a8 <sfbpf_validate+0x18c>
    1794:	cmp	r3, #112	; 0x70
    1798:	beq	16a0 <sfbpf_validate+0x84>
    179c:	cmp	r3, #128	; 0x80
    17a0:	bne	1740 <sfbpf_validate+0x124>
    17a4:	b	16a0 <sfbpf_validate+0x84>
    17a8:	cmp	r3, #80	; 0x50
    17ac:	bne	1740 <sfbpf_validate+0x124>
    17b0:	b	16a0 <sfbpf_validate+0x84>
    17b4:	mov	r0, #0
    17b8:	bx	lr
    17bc:	cmp	r2, #0
    17c0:	beq	16a0 <sfbpf_validate+0x84>
    17c4:	cmp	r2, #32
    17c8:	bne	1740 <sfbpf_validate+0x124>
    17cc:	b	16a0 <sfbpf_validate+0x84>

000017d0 <sfbpf_print>:
    17d0:	strd	r4, [sp, #-36]!	; 0xffffffdc
    17d4:	mov	r5, r0
    17d8:	ldr	r0, [pc, #2124]	; 202c <sfbpf_print+0x85c>
    17dc:	strd	r6, [sp, #8]
    17e0:	mov	r6, r1
    17e4:	strd	r8, [sp, #16]
    17e8:	strd	sl, [sp, #24]
    17ec:	str	lr, [sp, #32]
    17f0:	sub	sp, sp, #12
    17f4:	add	r0, pc, r0
    17f8:	bl	db4 <puts@plt>
    17fc:	ldr	r3, [r5]
    1800:	cmp	r3, #0
    1804:	beq	1944 <sfbpf_print+0x174>
    1808:	ldr	r7, [pc, #2080]	; 2030 <sfbpf_print+0x860>
    180c:	mov	r4, #0
    1810:	ldr	r8, [pc, #2076]	; 2034 <sfbpf_print+0x864>
    1814:	ldr	r3, [pc, #2076]	; 2038 <sfbpf_print+0x868>
    1818:	add	r7, pc, r7
    181c:	add	r8, pc, r8
    1820:	add	r3, pc, r3
    1824:	str	r3, [sp, #4]
    1828:	ldr	r9, [r5, #4]
    182c:	mov	r1, r4
    1830:	lsl	fp, r4, #3
    1834:	mov	r0, r7
    1838:	add	r4, r4, #1
    183c:	bl	d0c <printf@plt>
    1840:	cmp	r6, #0
    1844:	add	sl, r9, fp
    1848:	beq	1b7c <sfbpf_print+0x3ac>
    184c:	ldr	r3, [pc, #2024]	; 203c <sfbpf_print+0x86c>
    1850:	ldrh	r0, [r9, fp]
    1854:	add	r3, pc, r3
    1858:	ldr	r1, [r3, #4]
    185c:	and	r0, r0, #7
    1860:	cmp	r1, #0
    1864:	beq	1890 <sfbpf_print+0xc0>
    1868:	ldr	ip, [r3]
    186c:	cmp	r0, ip
    1870:	bne	1884 <sfbpf_print+0xb4>
    1874:	b	1890 <sfbpf_print+0xc0>
    1878:	ldr	ip, [r3, #8]!
    187c:	cmp	r0, ip
    1880:	beq	1890 <sfbpf_print+0xc0>
    1884:	ldr	r1, [r3, #12]
    1888:	cmp	r1, #0
    188c:	bne	1878 <sfbpf_print+0xa8>
    1890:	ldr	r0, [pc, #1960]	; 2040 <sfbpf_print+0x870>
    1894:	add	r0, pc, r0
    1898:	bl	d0c <printf@plt>
    189c:	ldrh	r3, [r9, fp]
    18a0:	and	r2, r3, #7
    18a4:	cmp	r2, #7
    18a8:	addls	pc, pc, r2, lsl #2
    18ac:	b	1920 <sfbpf_print+0x150>
    18b0:	b	1ae4 <sfbpf_print+0x314>
    18b4:	b	1ae4 <sfbpf_print+0x314>
    18b8:	b	1920 <sfbpf_print+0x150>
    18bc:	b	1920 <sfbpf_print+0x150>
    18c0:	b	1a4c <sfbpf_print+0x27c>
    18c4:	b	19b4 <sfbpf_print+0x1e4>
    18c8:	b	1960 <sfbpf_print+0x190>
    18cc:	b	18d0 <sfbpf_print+0x100>
    18d0:	ldr	r2, [pc, #1900]	; 2044 <sfbpf_print+0x874>
    18d4:	and	r3, r3, #248	; 0xf8
    18d8:	add	r2, pc, r2
    18dc:	ldr	r1, [r2, #348]	; 0x15c
    18e0:	cmp	r1, #0
    18e4:	beq	1914 <sfbpf_print+0x144>
    18e8:	ldr	r0, [r2, #344]	; 0x158
    18ec:	cmp	r3, r0
    18f0:	beq	1914 <sfbpf_print+0x144>
    18f4:	add	r2, r2, #344	; 0x158
    18f8:	b	1908 <sfbpf_print+0x138>
    18fc:	ldr	r0, [r2, #8]!
    1900:	cmp	r3, r0
    1904:	beq	1914 <sfbpf_print+0x144>
    1908:	ldr	r1, [r2, #12]
    190c:	cmp	r1, #0
    1910:	bne	18fc <sfbpf_print+0x12c>
    1914:	ldr	r0, [pc, #1836]	; 2048 <sfbpf_print+0x878>
    1918:	add	r0, pc, r0
    191c:	bl	d0c <printf@plt>
    1920:	ldr	r0, [pc, #1828]	; 204c <sfbpf_print+0x87c>
    1924:	ldrb	r2, [sl, #3]
    1928:	ldrb	r1, [sl, #2]
    192c:	add	r0, pc, r0
    1930:	ldr	r3, [sl, #4]
    1934:	bl	d0c <printf@plt>
    1938:	ldr	r3, [r5]
    193c:	cmp	r3, r4
    1940:	bhi	1828 <sfbpf_print+0x58>
    1944:	add	sp, sp, #12
    1948:	ldrd	r4, [sp]
    194c:	ldrd	r6, [sp, #8]
    1950:	ldrd	r8, [sp, #16]
    1954:	ldrd	sl, [sp, #24]
    1958:	add	sp, sp, #32
    195c:	pop	{pc}		; (ldr pc, [sp], #4)
    1960:	ldr	r2, [pc, #1768]	; 2050 <sfbpf_print+0x880>
    1964:	and	r3, r3, #24
    1968:	add	r2, pc, r2
    196c:	ldr	r1, [r2, #316]	; 0x13c
    1970:	cmp	r1, #0
    1974:	beq	19a4 <sfbpf_print+0x1d4>
    1978:	ldr	r0, [r2, #312]	; 0x138
    197c:	cmp	r3, r0
    1980:	beq	19a4 <sfbpf_print+0x1d4>
    1984:	add	r2, r2, #312	; 0x138
    1988:	b	1998 <sfbpf_print+0x1c8>
    198c:	ldr	r0, [r2, #8]!
    1990:	cmp	r3, r0
    1994:	beq	19a4 <sfbpf_print+0x1d4>
    1998:	ldr	r1, [r2, #12]
    199c:	cmp	r1, #0
    19a0:	bne	198c <sfbpf_print+0x1bc>
    19a4:	ldr	r0, [pc, #1704]	; 2054 <sfbpf_print+0x884>
    19a8:	add	r0, pc, r0
    19ac:	bl	d0c <printf@plt>
    19b0:	b	1920 <sfbpf_print+0x150>
    19b4:	ldr	r2, [pc, #1692]	; 2058 <sfbpf_print+0x888>
    19b8:	and	ip, r3, #240	; 0xf0
    19bc:	add	r2, pc, r2
    19c0:	ldr	r1, [r2, #268]	; 0x10c
    19c4:	cmp	r1, #0
    19c8:	beq	19f8 <sfbpf_print+0x228>
    19cc:	ldr	r0, [r2, #264]	; 0x108
    19d0:	cmp	ip, r0
    19d4:	beq	19f8 <sfbpf_print+0x228>
    19d8:	add	r2, r2, #264	; 0x108
    19dc:	b	19ec <sfbpf_print+0x21c>
    19e0:	ldr	r0, [r2, #8]!
    19e4:	cmp	ip, r0
    19e8:	beq	19f8 <sfbpf_print+0x228>
    19ec:	ldr	r1, [r2, #12]
    19f0:	cmp	r1, #0
    19f4:	bne	19e0 <sfbpf_print+0x210>
    19f8:	ldr	r0, [pc, #1628]	; 205c <sfbpf_print+0x88c>
    19fc:	and	r3, r3, #8
    1a00:	add	r0, pc, r0
    1a04:	ldr	r2, [r0, #244]	; 0xf4
    1a08:	cmp	r2, #0
    1a0c:	beq	1a3c <sfbpf_print+0x26c>
    1a10:	ldr	ip, [r0, #240]	; 0xf0
    1a14:	cmp	r3, ip
    1a18:	beq	1a3c <sfbpf_print+0x26c>
    1a1c:	add	r0, r0, #240	; 0xf0
    1a20:	b	1a30 <sfbpf_print+0x260>
    1a24:	ldr	ip, [r0, #8]!
    1a28:	cmp	r3, ip
    1a2c:	beq	1a3c <sfbpf_print+0x26c>
    1a30:	ldr	r2, [r0, #12]
    1a34:	cmp	r2, #0
    1a38:	bne	1a24 <sfbpf_print+0x254>
    1a3c:	ldr	r0, [pc, #1564]	; 2060 <sfbpf_print+0x890>
    1a40:	add	r0, pc, r0
    1a44:	bl	d0c <printf@plt>
    1a48:	b	1920 <sfbpf_print+0x150>
    1a4c:	ldr	r2, [pc, #1552]	; 2064 <sfbpf_print+0x894>
    1a50:	and	ip, r3, #240	; 0xf0
    1a54:	add	r2, pc, r2
    1a58:	ldr	r1, [r2, #164]	; 0xa4
    1a5c:	cmp	r1, #0
    1a60:	beq	1a90 <sfbpf_print+0x2c0>
    1a64:	ldr	r0, [r2, #160]	; 0xa0
    1a68:	cmp	ip, r0
    1a6c:	beq	1a90 <sfbpf_print+0x2c0>
    1a70:	add	r2, r2, #160	; 0xa0
    1a74:	b	1a84 <sfbpf_print+0x2b4>
    1a78:	ldr	r0, [r2, #8]!
    1a7c:	cmp	ip, r0
    1a80:	beq	1a90 <sfbpf_print+0x2c0>
    1a84:	ldr	r1, [r2, #12]
    1a88:	cmp	r1, #0
    1a8c:	bne	1a78 <sfbpf_print+0x2a8>
    1a90:	ldr	r0, [pc, #1488]	; 2068 <sfbpf_print+0x898>
    1a94:	and	r3, r3, #8
    1a98:	add	r0, pc, r0
    1a9c:	ldr	r2, [r0, #244]	; 0xf4
    1aa0:	cmp	r2, #0
    1aa4:	beq	1ad4 <sfbpf_print+0x304>
    1aa8:	ldr	ip, [r0, #240]	; 0xf0
    1aac:	cmp	r3, ip
    1ab0:	beq	1ad4 <sfbpf_print+0x304>
    1ab4:	add	r0, r0, #240	; 0xf0
    1ab8:	b	1ac8 <sfbpf_print+0x2f8>
    1abc:	ldr	ip, [r0, #8]!
    1ac0:	cmp	r3, ip
    1ac4:	beq	1ad4 <sfbpf_print+0x304>
    1ac8:	ldr	r2, [r0, #12]
    1acc:	cmp	r2, #0
    1ad0:	bne	1abc <sfbpf_print+0x2ec>
    1ad4:	ldr	r0, [pc, #1424]	; 206c <sfbpf_print+0x89c>
    1ad8:	add	r0, pc, r0
    1adc:	bl	d0c <printf@plt>
    1ae0:	b	1920 <sfbpf_print+0x150>
    1ae4:	ldr	r2, [pc, #1412]	; 2070 <sfbpf_print+0x8a0>
    1ae8:	and	ip, r3, #24
    1aec:	add	r2, pc, r2
    1af0:	ldr	r1, [r2, #76]	; 0x4c
    1af4:	cmp	r1, #0
    1af8:	beq	1b28 <sfbpf_print+0x358>
    1afc:	ldr	r0, [r2, #72]	; 0x48
    1b00:	cmp	ip, r0
    1b04:	beq	1b28 <sfbpf_print+0x358>
    1b08:	add	r2, r2, #72	; 0x48
    1b0c:	b	1b1c <sfbpf_print+0x34c>
    1b10:	ldr	r0, [r2, #8]!
    1b14:	cmp	ip, r0
    1b18:	beq	1b28 <sfbpf_print+0x358>
    1b1c:	ldr	r1, [r2, #12]
    1b20:	cmp	r1, #0
    1b24:	bne	1b10 <sfbpf_print+0x340>
    1b28:	ldr	r0, [pc, #1348]	; 2074 <sfbpf_print+0x8a4>
    1b2c:	and	r3, r3, #224	; 0xe0
    1b30:	add	r0, pc, r0
    1b34:	ldr	r2, [r0, #108]	; 0x6c
    1b38:	cmp	r2, #0
    1b3c:	beq	1b6c <sfbpf_print+0x39c>
    1b40:	ldr	ip, [r0, #104]	; 0x68
    1b44:	cmp	r3, ip
    1b48:	beq	1b6c <sfbpf_print+0x39c>
    1b4c:	add	r0, r0, #104	; 0x68
    1b50:	b	1b60 <sfbpf_print+0x390>
    1b54:	ldr	ip, [r0, #8]!
    1b58:	cmp	r3, ip
    1b5c:	beq	1b6c <sfbpf_print+0x39c>
    1b60:	ldr	r2, [r0, #12]
    1b64:	cmp	r2, #0
    1b68:	bne	1b54 <sfbpf_print+0x384>
    1b6c:	ldr	r0, [pc, #1284]	; 2078 <sfbpf_print+0x8a8>
    1b70:	add	r0, pc, r0
    1b74:	bl	d0c <printf@plt>
    1b78:	b	1920 <sfbpf_print+0x150>
    1b7c:	ldrh	r1, [r9, fp]
    1b80:	and	r3, r1, #7
    1b84:	sub	r3, r3, #1
    1b88:	cmp	r3, #6
    1b8c:	addls	pc, pc, r3, lsl #2
    1b90:	b	1e30 <sfbpf_print+0x660>
    1b94:	b	1cf8 <sfbpf_print+0x528>
    1b98:	b	1ce4 <sfbpf_print+0x514>
    1b9c:	b	1cd0 <sfbpf_print+0x500>
    1ba0:	b	1c68 <sfbpf_print+0x498>
    1ba4:	b	1bf8 <sfbpf_print+0x428>
    1ba8:	b	1bb0 <sfbpf_print+0x3e0>
    1bac:	b	1d3c <sfbpf_print+0x56c>
    1bb0:	ldr	r0, [pc, #1220]	; 207c <sfbpf_print+0x8ac>
    1bb4:	add	r0, pc, r0
    1bb8:	bl	d0c <printf@plt>
    1bbc:	ldrh	r3, [r9, fp]
    1bc0:	and	r3, r3, #24
    1bc4:	cmp	r3, #8
    1bc8:	beq	1ef8 <sfbpf_print+0x728>
    1bcc:	cmp	r3, #16
    1bd0:	beq	1eec <sfbpf_print+0x71c>
    1bd4:	cmp	r3, #0
    1bd8:	beq	1ed8 <sfbpf_print+0x708>
    1bdc:	ldr	r0, [pc, #1180]	; 2080 <sfbpf_print+0x8b0>
    1be0:	add	r0, pc, r0
    1be4:	bl	d0c <printf@plt>
    1be8:	ldr	r0, [pc, #1172]	; 2084 <sfbpf_print+0x8b4>
    1bec:	add	r0, pc, r0
    1bf0:	bl	db4 <puts@plt>
    1bf4:	b	1938 <sfbpf_print+0x168>
    1bf8:	and	r1, r1, #240	; 0xf0
    1bfc:	cmp	r1, #32
    1c00:	beq	1f64 <sfbpf_print+0x794>
    1c04:	bhi	1dd4 <sfbpf_print+0x604>
    1c08:	cmp	r1, #0
    1c0c:	beq	1f4c <sfbpf_print+0x77c>
    1c10:	cmp	r1, #16
    1c14:	bne	1dc8 <sfbpf_print+0x5f8>
    1c18:	ldr	r1, [pc, #1128]	; 2088 <sfbpf_print+0x8b8>
    1c1c:	add	r1, pc, r1
    1c20:	ldr	r0, [pc, #1124]	; 208c <sfbpf_print+0x8bc>
    1c24:	add	r0, pc, r0
    1c28:	bl	d0c <printf@plt>
    1c2c:	ldrh	r3, [r9, fp]
    1c30:	ands	r3, r3, #8
    1c34:	beq	1ec4 <sfbpf_print+0x6f4>
    1c38:	cmp	r3, #8
    1c3c:	bne	1e70 <sfbpf_print+0x6a0>
    1c40:	mov	r0, #88	; 0x58
    1c44:	bl	e38 <putchar@plt>
    1c48:	ldrb	r2, [sl, #3]
    1c4c:	ldrb	r1, [sl, #2]
    1c50:	ldr	r0, [pc, #1080]	; 2090 <sfbpf_print+0x8c0>
    1c54:	add	r2, r2, r4
    1c58:	add	r1, r1, r4
    1c5c:	add	r0, pc, r0
    1c60:	bl	d0c <printf@plt>
    1c64:	b	1938 <sfbpf_print+0x168>
    1c68:	and	r1, r1, #240	; 0xf0
    1c6c:	cmp	r1, #64	; 0x40
    1c70:	beq	1f70 <sfbpf_print+0x7a0>
    1c74:	bhi	1d7c <sfbpf_print+0x5ac>
    1c78:	cmp	r1, #16
    1c7c:	beq	1f04 <sfbpf_print+0x734>
    1c80:	bls	1d68 <sfbpf_print+0x598>
    1c84:	cmp	r1, #32
    1c88:	beq	1e8c <sfbpf_print+0x6bc>
    1c8c:	cmp	r1, #48	; 0x30
    1c90:	bne	1e08 <sfbpf_print+0x638>
    1c94:	ldr	r1, [pc, #1016]	; 2094 <sfbpf_print+0x8c4>
    1c98:	add	r1, pc, r1
    1c9c:	ldr	r0, [pc, #1012]	; 2098 <sfbpf_print+0x8c8>
    1ca0:	add	r0, pc, r0
    1ca4:	bl	d0c <printf@plt>
    1ca8:	ldrh	r3, [r9, fp]
    1cac:	ands	r3, r3, #8
    1cb0:	beq	1eb0 <sfbpf_print+0x6e0>
    1cb4:	cmp	r3, #8
    1cb8:	bne	1e60 <sfbpf_print+0x690>
    1cbc:	mov	r0, #88	; 0x58
    1cc0:	bl	e38 <putchar@plt>
    1cc4:	mov	r0, #10
    1cc8:	bl	e38 <putchar@plt>
    1ccc:	b	1938 <sfbpf_print+0x168>
    1cd0:	ldr	r0, [pc, #964]	; 209c <sfbpf_print+0x8cc>
    1cd4:	ldr	r1, [sl, #4]
    1cd8:	add	r0, pc, r0
    1cdc:	bl	d0c <printf@plt>
    1ce0:	b	1938 <sfbpf_print+0x168>
    1ce4:	ldr	r0, [pc, #948]	; 20a0 <sfbpf_print+0x8d0>
    1ce8:	ldr	r1, [sl, #4]
    1cec:	add	r0, pc, r0
    1cf0:	bl	d0c <printf@plt>
    1cf4:	b	1938 <sfbpf_print+0x168>
    1cf8:	ldr	r0, [pc, #932]	; 20a4 <sfbpf_print+0x8d4>
    1cfc:	add	r0, pc, r0
    1d00:	bl	d0c <printf@plt>
    1d04:	ldrh	r3, [r9, fp]
    1d08:	and	r3, r3, #224	; 0xe0
    1d0c:	cmp	r3, #96	; 0x60
    1d10:	beq	1f2c <sfbpf_print+0x75c>
    1d14:	bls	1e14 <sfbpf_print+0x644>
    1d18:	cmp	r3, #128	; 0x80
    1d1c:	beq	1f1c <sfbpf_print+0x74c>
    1d20:	cmp	r3, #160	; 0xa0
    1d24:	bne	1cc4 <sfbpf_print+0x4f4>
    1d28:	ldr	r0, [pc, #888]	; 20a8 <sfbpf_print+0x8d8>
    1d2c:	ldr	r1, [sl, #4]
    1d30:	add	r0, pc, r0
    1d34:	bl	d0c <printf@plt>
    1d38:	b	1cc4 <sfbpf_print+0x4f4>
    1d3c:	mov	r0, r8
    1d40:	bl	d0c <printf@plt>
    1d44:	ldrh	r3, [r9, fp]
    1d48:	ands	r3, r3, #248	; 0xf8
    1d4c:	beq	1ea4 <sfbpf_print+0x6d4>
    1d50:	cmp	r3, #128	; 0x80
    1d54:	bne	1e60 <sfbpf_print+0x690>
    1d58:	ldr	r0, [pc, #844]	; 20ac <sfbpf_print+0x8dc>
    1d5c:	add	r0, pc, r0
    1d60:	bl	d0c <printf@plt>
    1d64:	b	1cc4 <sfbpf_print+0x4f4>
    1d68:	cmp	r1, #0
    1d6c:	bne	1da8 <sfbpf_print+0x5d8>
    1d70:	ldr	r1, [pc, #824]	; 20b0 <sfbpf_print+0x8e0>
    1d74:	add	r1, pc, r1
    1d78:	b	1c9c <sfbpf_print+0x4cc>
    1d7c:	cmp	r1, #96	; 0x60
    1d80:	beq	1f10 <sfbpf_print+0x740>
    1d84:	bls	1db4 <sfbpf_print+0x5e4>
    1d88:	cmp	r1, #112	; 0x70
    1d8c:	beq	1e80 <sfbpf_print+0x6b0>
    1d90:	cmp	r1, #128	; 0x80
    1d94:	bne	1f40 <sfbpf_print+0x770>
    1d98:	ldr	r0, [pc, #788]	; 20b4 <sfbpf_print+0x8e4>
    1d9c:	add	r0, pc, r0
    1da0:	bl	db4 <puts@plt>
    1da4:	b	1938 <sfbpf_print+0x168>
    1da8:	ldr	r1, [pc, #776]	; 20b8 <sfbpf_print+0x8e8>
    1dac:	add	r1, pc, r1
    1db0:	b	1c9c <sfbpf_print+0x4cc>
    1db4:	cmp	r1, #80	; 0x50
    1db8:	bne	1df0 <sfbpf_print+0x620>
    1dbc:	ldr	r1, [pc, #760]	; 20bc <sfbpf_print+0x8ec>
    1dc0:	add	r1, pc, r1
    1dc4:	b	1c9c <sfbpf_print+0x4cc>
    1dc8:	ldr	r1, [pc, #752]	; 20c0 <sfbpf_print+0x8f0>
    1dcc:	add	r1, pc, r1
    1dd0:	b	1c20 <sfbpf_print+0x450>
    1dd4:	cmp	r1, #48	; 0x30
    1dd8:	beq	1e98 <sfbpf_print+0x6c8>
    1ddc:	cmp	r1, #64	; 0x40
    1de0:	bne	1dfc <sfbpf_print+0x62c>
    1de4:	ldr	r1, [pc, #728]	; 20c4 <sfbpf_print+0x8f4>
    1de8:	add	r1, pc, r1
    1dec:	b	1c20 <sfbpf_print+0x450>
    1df0:	ldr	r1, [pc, #720]	; 20c8 <sfbpf_print+0x8f8>
    1df4:	add	r1, pc, r1
    1df8:	b	1c9c <sfbpf_print+0x4cc>
    1dfc:	ldr	r1, [pc, #712]	; 20cc <sfbpf_print+0x8fc>
    1e00:	add	r1, pc, r1
    1e04:	b	1c20 <sfbpf_print+0x450>
    1e08:	ldr	r1, [pc, #704]	; 20d0 <sfbpf_print+0x900>
    1e0c:	add	r1, pc, r1
    1e10:	b	1c9c <sfbpf_print+0x4cc>
    1e14:	cmp	r3, #0
    1e18:	bne	1cc4 <sfbpf_print+0x4f4>
    1e1c:	ldr	r0, [pc, #688]	; 20d4 <sfbpf_print+0x904>
    1e20:	ldr	r1, [sl, #4]
    1e24:	add	r0, pc, r0
    1e28:	bl	d0c <printf@plt>
    1e2c:	b	1cc4 <sfbpf_print+0x4f4>
    1e30:	ldr	r0, [pc, #672]	; 20d8 <sfbpf_print+0x908>
    1e34:	add	r0, pc, r0
    1e38:	bl	d0c <printf@plt>
    1e3c:	ldrh	r3, [r9, fp]
    1e40:	and	r2, r3, #224	; 0xe0
    1e44:	cmp	r2, #64	; 0x40
    1e48:	beq	1f7c <sfbpf_print+0x7ac>
    1e4c:	bhi	1fb0 <sfbpf_print+0x7e0>
    1e50:	cmp	r2, #0
    1e54:	beq	1fe4 <sfbpf_print+0x814>
    1e58:	cmp	r2, #32
    1e5c:	beq	1ff8 <sfbpf_print+0x828>
    1e60:	ldr	r0, [pc, #628]	; 20dc <sfbpf_print+0x90c>
    1e64:	add	r0, pc, r0
    1e68:	bl	d0c <printf@plt>
    1e6c:	b	1cc4 <sfbpf_print+0x4f4>
    1e70:	ldr	r0, [pc, #616]	; 20e0 <sfbpf_print+0x910>
    1e74:	add	r0, pc, r0
    1e78:	bl	d0c <printf@plt>
    1e7c:	b	1c48 <sfbpf_print+0x478>
    1e80:	ldr	r1, [pc, #604]	; 20e4 <sfbpf_print+0x914>
    1e84:	add	r1, pc, r1
    1e88:	b	1c9c <sfbpf_print+0x4cc>
    1e8c:	ldr	r1, [pc, #596]	; 20e8 <sfbpf_print+0x918>
    1e90:	add	r1, pc, r1
    1e94:	b	1c9c <sfbpf_print+0x4cc>
    1e98:	ldr	r1, [pc, #588]	; 20ec <sfbpf_print+0x91c>
    1e9c:	add	r1, pc, r1
    1ea0:	b	1c20 <sfbpf_print+0x450>
    1ea4:	ldr	r0, [sp, #4]
    1ea8:	bl	d0c <printf@plt>
    1eac:	b	1cc4 <sfbpf_print+0x4f4>
    1eb0:	ldr	r0, [pc, #568]	; 20f0 <sfbpf_print+0x920>
    1eb4:	ldr	r1, [sl, #4]
    1eb8:	add	r0, pc, r0
    1ebc:	bl	d0c <printf@plt>
    1ec0:	b	1cc4 <sfbpf_print+0x4f4>
    1ec4:	ldr	r0, [pc, #552]	; 20f4 <sfbpf_print+0x924>
    1ec8:	ldr	r1, [sl, #4]
    1ecc:	add	r0, pc, r0
    1ed0:	bl	d0c <printf@plt>
    1ed4:	b	1c48 <sfbpf_print+0x478>
    1ed8:	ldr	r0, [pc, #536]	; 20f8 <sfbpf_print+0x928>
    1edc:	ldr	r1, [sl, #4]
    1ee0:	add	r0, pc, r0
    1ee4:	bl	d0c <printf@plt>
    1ee8:	b	1be8 <sfbpf_print+0x418>
    1eec:	mov	r0, #65	; 0x41
    1ef0:	bl	e38 <putchar@plt>
    1ef4:	b	1be8 <sfbpf_print+0x418>
    1ef8:	mov	r0, #88	; 0x58
    1efc:	bl	e38 <putchar@plt>
    1f00:	b	1be8 <sfbpf_print+0x418>
    1f04:	ldr	r1, [pc, #496]	; 20fc <sfbpf_print+0x92c>
    1f08:	add	r1, pc, r1
    1f0c:	b	1c9c <sfbpf_print+0x4cc>
    1f10:	ldr	r1, [pc, #488]	; 2100 <sfbpf_print+0x930>
    1f14:	add	r1, pc, r1
    1f18:	b	1c9c <sfbpf_print+0x4cc>
    1f1c:	ldr	r0, [pc, #480]	; 2104 <sfbpf_print+0x934>
    1f20:	add	r0, pc, r0
    1f24:	bl	d0c <printf@plt>
    1f28:	b	1cc4 <sfbpf_print+0x4f4>
    1f2c:	ldr	r0, [pc, #468]	; 2108 <sfbpf_print+0x938>
    1f30:	ldr	r1, [sl, #4]
    1f34:	add	r0, pc, r0
    1f38:	bl	d0c <printf@plt>
    1f3c:	b	1cc4 <sfbpf_print+0x4f4>
    1f40:	ldr	r1, [pc, #452]	; 210c <sfbpf_print+0x93c>
    1f44:	add	r1, pc, r1
    1f48:	b	1c9c <sfbpf_print+0x4cc>
    1f4c:	ldr	r0, [pc, #444]	; 2110 <sfbpf_print+0x940>
    1f50:	ldr	r1, [sl, #4]
    1f54:	add	r0, pc, r0
    1f58:	add	r1, r4, r1
    1f5c:	bl	d0c <printf@plt>
    1f60:	b	1938 <sfbpf_print+0x168>
    1f64:	ldr	r1, [pc, #424]	; 2114 <sfbpf_print+0x944>
    1f68:	add	r1, pc, r1
    1f6c:	b	1c20 <sfbpf_print+0x450>
    1f70:	ldr	r1, [pc, #416]	; 2118 <sfbpf_print+0x948>
    1f74:	add	r1, pc, r1
    1f78:	b	1c9c <sfbpf_print+0x4cc>
    1f7c:	ands	r3, r3, #24
    1f80:	ldr	r1, [sl, #4]
    1f84:	moveq	r2, #4
    1f88:	beq	1fa0 <sfbpf_print+0x7d0>
    1f8c:	cmp	r3, #8
    1f90:	subne	r2, r3, #16
    1f94:	moveq	r2, #2
    1f98:	clzne	r2, r2
    1f9c:	lsrne	r2, r2, #5
    1fa0:	ldr	r0, [pc, #372]	; 211c <sfbpf_print+0x94c>
    1fa4:	add	r0, pc, r0
    1fa8:	bl	d0c <printf@plt>
    1fac:	b	1cc4 <sfbpf_print+0x4f4>
    1fb0:	cmp	r2, #96	; 0x60
    1fb4:	beq	1fd0 <sfbpf_print+0x800>
    1fb8:	cmp	r2, #128	; 0x80
    1fbc:	bne	1e60 <sfbpf_print+0x690>
    1fc0:	ldr	r0, [pc, #344]	; 2120 <sfbpf_print+0x950>
    1fc4:	add	r0, pc, r0
    1fc8:	bl	d0c <printf@plt>
    1fcc:	b	1cc4 <sfbpf_print+0x4f4>
    1fd0:	ldr	r0, [pc, #332]	; 2124 <sfbpf_print+0x954>
    1fd4:	ldr	r1, [sl, #4]
    1fd8:	add	r0, pc, r0
    1fdc:	bl	d0c <printf@plt>
    1fe0:	b	1cc4 <sfbpf_print+0x4f4>
    1fe4:	ldr	r0, [pc, #316]	; 2128 <sfbpf_print+0x958>
    1fe8:	ldr	r1, [sl, #4]
    1fec:	add	r0, pc, r0
    1ff0:	bl	d0c <printf@plt>
    1ff4:	b	1cc4 <sfbpf_print+0x4f4>
    1ff8:	ands	r3, r3, #24
    1ffc:	ldr	r1, [sl, #4]
    2000:	moveq	r2, #4
    2004:	beq	201c <sfbpf_print+0x84c>
    2008:	cmp	r3, #8
    200c:	subne	r2, r3, #16
    2010:	moveq	r2, #2
    2014:	clzne	r2, r2
    2018:	lsrne	r2, r2, #5
    201c:	ldr	r0, [pc, #264]	; 212c <sfbpf_print+0x95c>
    2020:	add	r0, pc, r0
    2024:	bl	d0c <printf@plt>
    2028:	b	1cc4 <sfbpf_print+0x4f4>
    202c:	.word	0x000116a0
    2030:	.word	0x0001168c
    2034:	.word	0x000117b4
    2038:	.word	0x000117b8
    203c:	.word	0x0002f8ac
    2040:	.word	0x00011710
    2044:	.word	0x0002f828
    2048:	.word	0x000115c4
    204c:	.word	0x000115b8
    2050:	.word	0x0002f798
    2054:	.word	0x00011528
    2058:	.word	0x0002f744
    205c:	.word	0x0002f700
    2060:	.word	0x00011480
    2064:	.word	0x0002f6ac
    2068:	.word	0x0002f668
    206c:	.word	0x000113e8
    2070:	.word	0x0002f614
    2074:	.word	0x0002f5d0
    2078:	.word	0x0001133c
    207c:	.word	0x00011404
    2080:	.word	0x00011284
    2084:	.word	0x000113dc
    2088:	.word	0x0001126c
    208c:	.word	0x00011378
    2090:	.word	0x0001134c
    2094:	.word	0x000111d8
    2098:	.word	0x000112dc
    209c:	.word	0x00011288
    20a0:	.word	0x00011260
    20a4:	.word	0x00011234
    20a8:	.word	0x0001120c
    20ac:	.word	0x00011284
    20b0:	.word	0x000110f4
    20b4:	.word	0x000111d8
    20b8:	.word	0x000110b8
    20bc:	.word	0x000110b8
    20c0:	.word	0x00011098
    20c4:	.word	0x00011090
    20c8:	.word	0x00011070
    20cc:	.word	0x00011064
    20d0:	.word	0x00011058
    20d4:	.word	0x00011100
    20d8:	.word	0x000110c8
    20dc:	.word	0x00011000
    20e0:	.word	0x00010ff0
    20e4:	.word	0x00010ffc
    20e8:	.word	0x00010fdc
    20ec:	.word	0x00010ff0
    20f0:	.word	0x0001106c
    20f4:	.word	0x00011058
    20f8:	.word	0x00011044
    20fc:	.word	0x00010f7c
    2100:	.word	0x00010f68
    2104:	.word	0x00011000
    2108:	.word	0x00010ff4
    210c:	.word	0x00010f20
    2110:	.word	0x0001103c
    2114:	.word	0x00010f28
    2118:	.word	0x00010f00
    211c:	.word	0x00010f70
    2120:	.word	0x00010f5c
    2124:	.word	0x00010f50
    2128:	.word	0x00010f38
    212c:	.word	0x00010ee8

00002130 <ethertype_to_ppptype>:
    2130:	cmp	r0, #1536	; 0x600
    2134:	beq	21b0 <ethertype_to_ppptype+0x80>
    2138:	ble	2168 <ethertype_to_ppptype+0x38>
    213c:	movw	r3, #24579	; 0x6003
    2140:	cmp	r0, r3
    2144:	beq	21a8 <ethertype_to_ppptype+0x78>
    2148:	ble	2184 <ethertype_to_ppptype+0x54>
    214c:	movw	r3, #32923	; 0x809b
    2150:	cmp	r0, r3
    2154:	beq	2190 <ethertype_to_ppptype+0x60>
    2158:	movw	r3, #34525	; 0x86dd
    215c:	cmp	r0, r3
    2160:	moveq	r0, #87	; 0x57
    2164:	bx	lr
    2168:	cmp	r0, #224	; 0xe0
    216c:	beq	21a0 <ethertype_to_ppptype+0x70>
    2170:	cmp	r0, #254	; 0xfe
    2174:	beq	2198 <ethertype_to_ppptype+0x68>
    2178:	cmp	r0, #66	; 0x42
    217c:	moveq	r0, #49	; 0x31
    2180:	bx	lr
    2184:	cmp	r0, #2048	; 0x800
    2188:	moveq	r0, #33	; 0x21
    218c:	bx	lr
    2190:	mov	r0, #41	; 0x29
    2194:	bx	lr
    2198:	mov	r0, #35	; 0x23
    219c:	bx	lr
    21a0:	mov	r0, #43	; 0x2b
    21a4:	bx	lr
    21a8:	mov	r0, #39	; 0x27
    21ac:	bx	lr
    21b0:	mov	r0, #37	; 0x25
    21b4:	bx	lr

000021b8 <freechunks>:
    21b8:	strd	r4, [sp, #-16]!
    21bc:	mov	r3, #0
    21c0:	ldr	r4, [pc, #68]	; 220c <freechunks+0x54>
    21c4:	str	r6, [sp, #8]
    21c8:	mov	r6, r3
    21cc:	str	lr, [sp, #12]
    21d0:	add	r4, pc, r4
    21d4:	add	r5, r4, #132	; 0x84
    21d8:	str	r3, [r4], #4
    21dc:	ldr	r0, [r4, #4]
    21e0:	cmp	r0, #0
    21e4:	beq	21f0 <freechunks+0x38>
    21e8:	bl	d48 <free@plt>
    21ec:	str	r6, [r4, #4]
    21f0:	add	r4, r4, #8
    21f4:	cmp	r4, r5
    21f8:	bne	21dc <freechunks+0x24>
    21fc:	ldrd	r4, [sp]
    2200:	ldr	r6, [sp, #8]
    2204:	add	sp, sp, #12
    2208:	pop	{pc}		; (ldr pc, [sp], #4)
    220c:	.word	0x0002f190

00002210 <sf_bpf_error>:
    2210:	ldr	r4, [pc, #52]	; 224c <sf_bpf_error+0x3c>
    2214:	push	{r0, r1, r2, r3}
    2218:	mov	r1, #256	; 0x100
    221c:	push	{lr}		; (str lr, [sp, #-4]!)
    2220:	sub	sp, sp, #12
    2224:	add	r0, sp, #20
    2228:	add	r4, pc, r4
    222c:	ldr	r2, [sp, #16]
    2230:	mov	r3, r0
    2234:	str	r0, [sp, #4]
    2238:	add	r0, r4, #132	; 0x84
    223c:	bl	e74 <vsnprintf@plt>
    2240:	add	r0, r4, #392	; 0x188
    2244:	mov	r1, #1
    2248:	bl	d30 <longjmp@plt>
    224c:	.word	0x0002f138

00002250 <newchunk>:
    2250:	ldr	r1, [pc, #176]	; 2308 <newchunk+0xb8>
    2254:	add	r0, r0, #3
    2258:	strd	r4, [sp, #-24]!	; 0xffffffe8
    225c:	strd	r6, [sp, #8]
    2260:	bic	r6, r0, #3
    2264:	str	r8, [sp, #16]
    2268:	str	lr, [sp, #20]
    226c:	add	r1, pc, r1
    2270:	mov	r2, r1
    2274:	ldr	r3, [r2], #4
    2278:	lsl	r5, r3, #3
    227c:	add	r0, r1, r5
    2280:	add	r5, r2, r5
    2284:	ldr	r0, [r0, #4]
    2288:	cmp	r0, r6
    228c:	bcs	22dc <newchunk+0x8c>
    2290:	add	r4, r3, #1
    2294:	add	r7, r5, #8
    2298:	cmp	r4, #15
    229c:	str	r4, [r1]
    22a0:	bgt	22d0 <newchunk+0x80>
    22a4:	mov	r3, #1024	; 0x400
    22a8:	mov	r1, #1
    22ac:	lsl	r4, r3, r4
    22b0:	mov	r0, r4
    22b4:	bl	ce8 <calloc@plt>
    22b8:	cmp	r0, #0
    22bc:	str	r0, [r5, #12]
    22c0:	beq	22d0 <newchunk+0x80>
    22c4:	cmp	r6, r4
    22c8:	str	r4, [r5, #8]
    22cc:	bls	22e8 <newchunk+0x98>
    22d0:	ldr	r0, [pc, #52]	; 230c <newchunk+0xbc>
    22d4:	add	r0, pc, r0
    22d8:	bl	2210 <sf_bpf_error>
    22dc:	ldr	r4, [r2, r3, lsl #3]
    22e0:	mov	r7, r5
    22e4:	ldr	r0, [r5, #4]
    22e8:	sub	r4, r4, r6
    22ec:	add	r0, r0, r4
    22f0:	str	r4, [r7]
    22f4:	ldrd	r4, [sp]
    22f8:	ldrd	r6, [sp, #8]
    22fc:	ldr	r8, [sp, #16]
    2300:	add	sp, sp, #20
    2304:	pop	{pc}		; (ldr pc, [sp], #4)
    2308:	.word	0x0002f0f4
    230c:	.word	0x00010dd8

00002310 <gen_uncond>:
    2310:	strd	r4, [sp, #-16]!
    2314:	mov	r5, r0
    2318:	mov	r0, #20
    231c:	str	r6, [sp, #8]
    2320:	eor	r5, r5, #1
    2324:	str	lr, [sp, #12]
    2328:	bl	2250 <newchunk>
    232c:	mov	r4, r0
    2330:	mov	r3, #0
    2334:	mov	r0, #208	; 0xd0
    2338:	str	r3, [r4]
    233c:	str	r5, [r4, #12]
    2340:	bl	2250 <newchunk>
    2344:	mov	r3, r0
    2348:	mov	r2, #21
    234c:	str	r4, [r0, #4]
    2350:	str	r2, [r0, #8]
    2354:	str	r0, [r3, #96]	; 0x60
    2358:	ldrd	r4, [sp]
    235c:	ldr	r6, [sp, #8]
    2360:	add	sp, sp, #12
    2364:	pop	{pc}		; (ldr pc, [sp], #4)

00002368 <gen_load_ppi_llprefixlen>:
    2368:	ldr	r3, [pc, #380]	; 24ec <gen_load_ppi_llprefixlen+0x184>
    236c:	strd	r4, [sp, #-16]!
    2370:	str	r6, [sp, #8]
    2374:	str	lr, [sp, #12]
    2378:	add	r3, pc, r3
    237c:	ldr	r5, [r3, #784]	; 0x310
    2380:	cmn	r5, #1
    2384:	moveq	r4, #0
    2388:	beq	24d8 <gen_load_ppi_llprefixlen+0x170>
    238c:	mov	r0, #20
    2390:	bl	2250 <newchunk>
    2394:	mov	r4, r0
    2398:	mov	r2, #48	; 0x30
    239c:	mov	r3, #3
    23a0:	mov	r0, #20
    23a4:	str	r2, [r4]
    23a8:	str	r3, [r4, #12]
    23ac:	bl	2250 <newchunk>
    23b0:	mov	r3, #100	; 0x64
    23b4:	mov	r1, r0
    23b8:	mov	r2, r4
    23bc:	str	r3, [r0]
    23c0:	b	23c8 <gen_load_ppi_llprefixlen+0x60>
    23c4:	mov	r2, r3
    23c8:	ldr	r3, [r2, #16]
    23cc:	cmp	r3, #0
    23d0:	bne	23c4 <gen_load_ppi_llprefixlen+0x5c>
    23d4:	mov	r3, #8
    23d8:	mov	r0, #20
    23dc:	str	r1, [r2, #16]
    23e0:	str	r3, [r1, #12]
    23e4:	bl	2250 <newchunk>
    23e8:	mov	r3, #7
    23ec:	mov	r1, r0
    23f0:	mov	r2, r4
    23f4:	str	r3, [r0]
    23f8:	b	2400 <gen_load_ppi_llprefixlen+0x98>
    23fc:	mov	r2, r3
    2400:	ldr	r3, [r2, #16]
    2404:	cmp	r3, #0
    2408:	bne	23fc <gen_load_ppi_llprefixlen+0x94>
    240c:	mov	r0, #20
    2410:	str	r1, [r2, #16]
    2414:	bl	2250 <newchunk>
    2418:	mov	r3, #48	; 0x30
    241c:	mov	r1, r0
    2420:	mov	r2, r4
    2424:	str	r3, [r0]
    2428:	b	2430 <gen_load_ppi_llprefixlen+0xc8>
    242c:	mov	r2, r3
    2430:	ldr	r3, [r2, #16]
    2434:	cmp	r3, #0
    2438:	bne	242c <gen_load_ppi_llprefixlen+0xc4>
    243c:	mov	r3, #2
    2440:	mov	r0, #20
    2444:	str	r1, [r2, #16]
    2448:	str	r3, [r1, #12]
    244c:	bl	2250 <newchunk>
    2450:	mov	r3, #76	; 0x4c
    2454:	mov	r1, r0
    2458:	mov	r2, r4
    245c:	str	r3, [r0]
    2460:	b	2468 <gen_load_ppi_llprefixlen+0x100>
    2464:	mov	r2, r3
    2468:	ldr	r3, [r2, #16]
    246c:	cmp	r3, #0
    2470:	bne	2464 <gen_load_ppi_llprefixlen+0xfc>
    2474:	mov	r0, #20
    2478:	str	r1, [r2, #16]
    247c:	bl	2250 <newchunk>
    2480:	mov	r3, #2
    2484:	mov	r1, r0
    2488:	mov	r2, r4
    248c:	str	r3, [r0]
    2490:	str	r5, [r0, #12]
    2494:	b	249c <gen_load_ppi_llprefixlen+0x134>
    2498:	mov	r2, r3
    249c:	ldr	r3, [r2, #16]
    24a0:	cmp	r3, #0
    24a4:	bne	2498 <gen_load_ppi_llprefixlen+0x130>
    24a8:	mov	r0, #20
    24ac:	str	r1, [r2, #16]
    24b0:	bl	2250 <newchunk>
    24b4:	mov	r3, #7
    24b8:	mov	r2, r4
    24bc:	str	r3, [r0]
    24c0:	b	24c8 <gen_load_ppi_llprefixlen+0x160>
    24c4:	mov	r2, r3
    24c8:	ldr	r3, [r2, #16]
    24cc:	cmp	r3, #0
    24d0:	bne	24c4 <gen_load_ppi_llprefixlen+0x15c>
    24d4:	str	r0, [r2, #16]
    24d8:	mov	r0, r4
    24dc:	ldrd	r4, [sp]
    24e0:	ldr	r6, [sp, #8]
    24e4:	add	sp, sp, #12
    24e8:	pop	{pc}		; (ldr pc, [sp], #4)
    24ec:	.word	0x0002efe8

000024f0 <alloc_reg>:
    24f0:	ldr	r0, [pc, #180]	; 25ac <alloc_reg+0xbc>
    24f4:	str	r4, [sp, #-8]!
    24f8:	str	lr, [sp, #4]
    24fc:	add	r0, pc, r0
    2500:	ldr	r3, [r0, #788]	; 0x314
    2504:	lsl	r2, r3, #2
    2508:	add	r1, r0, r2
    250c:	ldr	r1, [r1, #792]	; 0x318
    2510:	cmp	r1, #0
    2514:	beq	2588 <alloc_reg+0x98>
    2518:	add	r3, r3, #1
    251c:	mov	ip, r0
    2520:	rsbs	r2, r3, #0
    2524:	mov	r1, #15
    2528:	and	r2, r2, #15
    252c:	and	r3, r3, #15
    2530:	mov	lr, #0
    2534:	rsbpl	r3, r2, #0
    2538:	str	r3, [r0, #788]	; 0x314
    253c:	lsl	r2, r3, #2
    2540:	add	r0, ip, r2
    2544:	ldr	r0, [r0, #792]	; 0x318
    2548:	cmp	r0, #0
    254c:	beq	2580 <alloc_reg+0x90>
    2550:	add	r3, r3, #1
    2554:	mov	lr, #1
    2558:	rsbs	r2, r3, #0
    255c:	and	r3, r3, #15
    2560:	and	r2, r2, #15
    2564:	rsbpl	r3, r2, #0
    2568:	subs	r1, r1, #1
    256c:	bne	253c <alloc_reg+0x4c>
    2570:	ldr	r0, [pc, #56]	; 25b0 <alloc_reg+0xc0>
    2574:	str	r3, [ip, #788]	; 0x314
    2578:	add	r0, pc, r0
    257c:	bl	2210 <sf_bpf_error>
    2580:	cmp	lr, #0
    2584:	strne	r3, [ip, #788]	; 0x314
    2588:	ldr	r1, [pc, #36]	; 25b4 <alloc_reg+0xc4>
    258c:	mov	r0, #1
    2590:	add	r1, pc, r1
    2594:	add	r2, r1, r2
    2598:	str	r0, [r2, #792]	; 0x318
    259c:	mov	r0, r3
    25a0:	ldr	r4, [sp]
    25a4:	add	sp, sp, #4
    25a8:	pop	{pc}		; (ldr pc, [sp], #4)
    25ac:	.word	0x0002ee64
    25b0:	.word	0x00010b44
    25b4:	.word	0x0002edd0

000025b8 <gen_avs_llprefixlen>:
    25b8:	strd	r4, [sp, #-16]!
    25bc:	ldr	r5, [pc, #72]	; 260c <gen_avs_llprefixlen+0x54>
    25c0:	str	r6, [sp, #8]
    25c4:	str	lr, [sp, #12]
    25c8:	add	r5, pc, r5
    25cc:	ldr	r4, [r5, #784]	; 0x310
    25d0:	cmn	r4, #1
    25d4:	beq	25fc <gen_avs_llprefixlen+0x44>
    25d8:	mov	r0, #20
    25dc:	bl	2250 <newchunk>
    25e0:	mov	r2, #97	; 0x61
    25e4:	str	r2, [r0]
    25e8:	str	r4, [r0, #12]
    25ec:	ldrd	r4, [sp]
    25f0:	ldr	r6, [sp, #8]
    25f4:	add	sp, sp, #12
    25f8:	pop	{pc}		; (ldr pc, [sp], #4)
    25fc:	bl	24f0 <alloc_reg>
    2600:	mov	r4, r0
    2604:	str	r0, [r5, #784]	; 0x310
    2608:	b	25d8 <gen_avs_llprefixlen+0x20>
    260c:	.word	0x0002ed98

00002610 <gen_llprefixlen>:
    2610:	ldr	r3, [pc, #64]	; 2658 <gen_llprefixlen+0x48>
    2614:	add	r3, pc, r3
    2618:	ldr	r3, [r3, #856]	; 0x358
    261c:	cmp	r3, #127	; 0x7f
    2620:	beq	2648 <gen_llprefixlen+0x38>
    2624:	ble	263c <gen_llprefixlen+0x2c>
    2628:	cmp	r3, #163	; 0xa3
    262c:	beq	264c <gen_llprefixlen+0x3c>
    2630:	cmp	r3, #192	; 0xc0
    2634:	bne	2650 <gen_llprefixlen+0x40>
    2638:	b	25b8 <gen_avs_llprefixlen>
    263c:	cmp	r3, #119	; 0x77
    2640:	bne	2650 <gen_llprefixlen+0x40>
    2644:	b	25b8 <gen_avs_llprefixlen>
    2648:	b	25b8 <gen_avs_llprefixlen>
    264c:	b	25b8 <gen_avs_llprefixlen>
    2650:	mov	r0, #0
    2654:	bx	lr
    2658:	.word	0x0002ed4c

0000265c <gen_load_llrel>:
    265c:	strd	r4, [sp, #-16]!
    2660:	mov	r4, r1
    2664:	str	r6, [sp, #8]
    2668:	mov	r6, r0
    266c:	str	lr, [sp, #12]
    2670:	bl	2610 <gen_llprefixlen>
    2674:	subs	r5, r0, #0
    2678:	mov	r0, #20
    267c:	beq	26c0 <gen_load_llrel+0x64>
    2680:	orr	r4, r4, #64	; 0x40
    2684:	bl	2250 <newchunk>
    2688:	mov	r2, r5
    268c:	str	r4, [r0]
    2690:	str	r6, [r0, #12]
    2694:	b	269c <gen_load_llrel+0x40>
    2698:	mov	r2, r3
    269c:	ldr	r3, [r2, #16]
    26a0:	cmp	r3, #0
    26a4:	bne	2698 <gen_load_llrel+0x3c>
    26a8:	str	r0, [r2, #16]
    26ac:	mov	r0, r5
    26b0:	ldrd	r4, [sp]
    26b4:	ldr	r6, [sp, #8]
    26b8:	add	sp, sp, #12
    26bc:	pop	{pc}		; (ldr pc, [sp], #4)
    26c0:	bl	2250 <newchunk>
    26c4:	ldr	r3, [pc, #28]	; 26e8 <gen_load_llrel+0x8c>
    26c8:	orr	r4, r4, #32
    26cc:	mov	r5, r0
    26d0:	str	r4, [r0]
    26d4:	add	r3, pc, r3
    26d8:	ldr	r3, [r3, #860]	; 0x35c
    26dc:	add	r6, r3, r6
    26e0:	str	r6, [r0, #12]
    26e4:	b	26ac <gen_load_llrel+0x50>
    26e8:	.word	0x0002ec8c

000026ec <gen_mac_multicast>:
    26ec:	mov	r1, #16
    26f0:	str	r4, [sp, #-8]!
    26f4:	str	lr, [sp, #4]
    26f8:	bl	265c <gen_load_llrel>
    26fc:	mov	r4, r0
    2700:	mov	r0, #208	; 0xd0
    2704:	bl	2250 <newchunk>
    2708:	mov	r3, r0
    270c:	mov	r1, #69	; 0x45
    2710:	str	r4, [r0, #4]
    2714:	mov	r2, #1
    2718:	str	r1, [r0, #8]
    271c:	str	r2, [r0, #20]
    2720:	str	r0, [r3, #96]	; 0x60
    2724:	ldr	r4, [sp]
    2728:	add	sp, sp, #4
    272c:	pop	{pc}		; (ldr pc, [sp], #4)

00002730 <gen_cmp_gt.constprop.10>:
    2730:	strd	r4, [sp, #-16]!
    2734:	mov	r4, r2
    2738:	str	r6, [sp, #8]
    273c:	str	lr, [sp, #12]
    2740:	bl	265c <gen_load_llrel>
    2744:	mov	r5, r0
    2748:	mov	r0, #208	; 0xd0
    274c:	bl	2250 <newchunk>
    2750:	mov	r3, r0
    2754:	mov	r2, #37	; 0x25
    2758:	str	r5, [r0, #4]
    275c:	str	r2, [r0, #8]
    2760:	str	r4, [r0, #20]
    2764:	str	r0, [r3, #96]	; 0x60
    2768:	ldrd	r4, [sp]
    276c:	ldr	r6, [sp, #8]
    2770:	add	sp, sp, #12
    2774:	pop	{pc}		; (ldr pc, [sp], #4)

00002778 <gen_off_macpl>:
    2778:	strd	r4, [sp, #-16]!
    277c:	ldr	r4, [pc, #84]	; 27d8 <gen_off_macpl+0x60>
    2780:	str	r6, [sp, #8]
    2784:	str	lr, [sp, #12]
    2788:	add	r4, pc, r4
    278c:	ldr	r0, [r4, #864]	; 0x360
    2790:	cmp	r0, #0
    2794:	beq	27b8 <gen_off_macpl+0x40>
    2798:	ldr	r5, [r4, #868]	; 0x364
    279c:	cmn	r5, #1
    27a0:	beq	27c8 <gen_off_macpl+0x50>
    27a4:	mov	r0, #20
    27a8:	bl	2250 <newchunk>
    27ac:	mov	r3, #97	; 0x61
    27b0:	str	r3, [r0]
    27b4:	str	r5, [r0, #12]
    27b8:	ldrd	r4, [sp]
    27bc:	ldr	r6, [sp, #8]
    27c0:	add	sp, sp, #12
    27c4:	pop	{pc}		; (ldr pc, [sp], #4)
    27c8:	bl	24f0 <alloc_reg>
    27cc:	mov	r5, r0
    27d0:	str	r0, [r4, #868]	; 0x364
    27d4:	b	27a4 <gen_off_macpl+0x2c>
    27d8:	.word	0x0002ebd8

000027dc <gen_loadx_iphdrlen>:
    27dc:	strd	r4, [sp, #-16]!
    27e0:	ldr	r5, [pc, #332]	; 2934 <gen_loadx_iphdrlen+0x158>
    27e4:	str	r6, [sp, #8]
    27e8:	str	lr, [sp, #12]
    27ec:	bl	2778 <gen_off_macpl>
    27f0:	subs	r4, r0, #0
    27f4:	mov	r0, #20
    27f8:	add	r5, pc, r5
    27fc:	ldr	r6, [r5, #872]	; 0x368
    2800:	beq	2914 <gen_loadx_iphdrlen+0x138>
    2804:	bl	2250 <newchunk>
    2808:	mov	r3, #80	; 0x50
    280c:	mov	r1, r0
    2810:	mov	r2, r4
    2814:	str	r3, [r0]
    2818:	str	r6, [r0, #12]
    281c:	b	2824 <gen_loadx_iphdrlen+0x48>
    2820:	mov	r2, r3
    2824:	ldr	r3, [r2, #16]
    2828:	cmp	r3, #0
    282c:	bne	2820 <gen_loadx_iphdrlen+0x44>
    2830:	mov	r0, #20
    2834:	str	r1, [r2, #16]
    2838:	bl	2250 <newchunk>
    283c:	mov	r1, r0
    2840:	mov	r3, #15
    2844:	mov	r0, #84	; 0x54
    2848:	mov	r2, r4
    284c:	str	r0, [r1]
    2850:	str	r3, [r1, #12]
    2854:	b	285c <gen_loadx_iphdrlen+0x80>
    2858:	mov	r2, r3
    285c:	ldr	r3, [r2, #16]
    2860:	cmp	r3, #0
    2864:	bne	2858 <gen_loadx_iphdrlen+0x7c>
    2868:	mov	r0, #20
    286c:	str	r1, [r2, #16]
    2870:	bl	2250 <newchunk>
    2874:	mov	r1, r0
    2878:	mov	r3, #2
    287c:	mov	r0, #100	; 0x64
    2880:	mov	r2, r4
    2884:	str	r0, [r1]
    2888:	str	r3, [r1, #12]
    288c:	b	2894 <gen_loadx_iphdrlen+0xb8>
    2890:	mov	r2, r3
    2894:	ldr	r3, [r2, #16]
    2898:	cmp	r3, #0
    289c:	bne	2890 <gen_loadx_iphdrlen+0xb4>
    28a0:	mov	r0, #20
    28a4:	str	r1, [r2, #16]
    28a8:	bl	2250 <newchunk>
    28ac:	mov	r3, #12
    28b0:	mov	r1, r0
    28b4:	mov	r2, r4
    28b8:	str	r3, [r0]
    28bc:	b	28c4 <gen_loadx_iphdrlen+0xe8>
    28c0:	mov	r2, r3
    28c4:	ldr	r3, [r2, #16]
    28c8:	cmp	r3, #0
    28cc:	bne	28c0 <gen_loadx_iphdrlen+0xe4>
    28d0:	mov	r0, #20
    28d4:	str	r1, [r2, #16]
    28d8:	bl	2250 <newchunk>
    28dc:	mov	r3, #7
    28e0:	mov	r2, r4
    28e4:	str	r3, [r0]
    28e8:	b	28f0 <gen_loadx_iphdrlen+0x114>
    28ec:	mov	r2, r3
    28f0:	ldr	r3, [r2, #16]
    28f4:	cmp	r3, #0
    28f8:	bne	28ec <gen_loadx_iphdrlen+0x110>
    28fc:	str	r0, [r2, #16]
    2900:	mov	r0, r4
    2904:	ldrd	r4, [sp]
    2908:	ldr	r6, [sp, #8]
    290c:	add	sp, sp, #12
    2910:	pop	{pc}		; (ldr pc, [sp], #4)
    2914:	bl	2250 <newchunk>
    2918:	ldr	r3, [r5, #876]	; 0x36c
    291c:	mov	r2, #177	; 0xb1
    2920:	mov	r4, r0
    2924:	str	r2, [r0]
    2928:	add	r6, r3, r6
    292c:	str	r6, [r0, #12]
    2930:	b	2900 <gen_loadx_iphdrlen+0x124>
    2934:	.word	0x0002eb68

00002938 <gen_load_macplrel>:
    2938:	strd	r4, [sp, #-16]!
    293c:	mov	r4, r1
    2940:	str	r6, [sp, #8]
    2944:	mov	r6, r0
    2948:	str	lr, [sp, #12]
    294c:	bl	2778 <gen_off_macpl>
    2950:	subs	r5, r0, #0
    2954:	mov	r0, #20
    2958:	beq	299c <gen_load_macplrel+0x64>
    295c:	orr	r4, r4, #64	; 0x40
    2960:	bl	2250 <newchunk>
    2964:	mov	r2, r5
    2968:	str	r4, [r0]
    296c:	str	r6, [r0, #12]
    2970:	b	2978 <gen_load_macplrel+0x40>
    2974:	mov	r2, r3
    2978:	ldr	r3, [r2, #16]
    297c:	cmp	r3, #0
    2980:	bne	2974 <gen_load_macplrel+0x3c>
    2984:	str	r0, [r2, #16]
    2988:	mov	r0, r5
    298c:	ldrd	r4, [sp]
    2990:	ldr	r6, [sp, #8]
    2994:	add	sp, sp, #12
    2998:	pop	{pc}		; (ldr pc, [sp], #4)
    299c:	bl	2250 <newchunk>
    29a0:	ldr	r3, [pc, #28]	; 29c4 <gen_load_macplrel+0x8c>
    29a4:	orr	r4, r4, #32
    29a8:	mov	r5, r0
    29ac:	str	r4, [r0]
    29b0:	add	r3, pc, r3
    29b4:	ldr	r3, [r3, #876]	; 0x36c
    29b8:	add	r6, r3, r6
    29bc:	str	r6, [r0, #12]
    29c0:	b	2988 <gen_load_macplrel+0x50>
    29c4:	.word	0x0002e9b0

000029c8 <gen_load_a>:
    29c8:	sub	r0, r0, #1
    29cc:	strd	r4, [sp, #-12]!
    29d0:	mov	r4, r1
    29d4:	str	lr, [sp, #8]
    29d8:	sub	sp, sp, #12
    29dc:	cmp	r0, #5
    29e0:	addls	pc, pc, r0, lsl #2
    29e4:	b	2ae8 <gen_load_a+0x120>
    29e8:	b	2a98 <gen_load_a+0xd0>
    29ec:	b	2ab4 <gen_load_a+0xec>
    29f0:	b	2ac0 <gen_load_a+0xf8>
    29f4:	b	2ad4 <gen_load_a+0x10c>
    29f8:	b	2a00 <gen_load_a+0x38>
    29fc:	b	2a6c <gen_load_a+0xa4>
    2a00:	str	r2, [sp, #4]
    2a04:	bl	27dc <gen_loadx_iphdrlen>
    2a08:	mov	r5, r0
    2a0c:	mov	r0, #20
    2a10:	bl	2250 <newchunk>
    2a14:	ldr	r3, [pc, #240]	; 2b0c <gen_load_a+0x144>
    2a18:	mov	ip, r5
    2a1c:	ldr	r2, [sp, #4]
    2a20:	add	r3, pc, r3
    2a24:	ldr	r1, [r3, #872]	; 0x368
    2a28:	orr	r2, r2, #64	; 0x40
    2a2c:	ldr	r3, [r3, #876]	; 0x36c
    2a30:	str	r2, [r0]
    2a34:	add	r3, r3, r1
    2a38:	add	r4, r3, r4
    2a3c:	str	r4, [r0, #12]
    2a40:	b	2a48 <gen_load_a+0x80>
    2a44:	mov	ip, r3
    2a48:	ldr	r3, [ip, #16]
    2a4c:	cmp	r3, #0
    2a50:	bne	2a44 <gen_load_a+0x7c>
    2a54:	str	r0, [ip, #16]
    2a58:	mov	r0, r5
    2a5c:	add	sp, sp, #12
    2a60:	ldrd	r4, [sp]
    2a64:	add	sp, sp, #8
    2a68:	pop	{pc}		; (ldr pc, [sp], #4)
    2a6c:	ldr	r3, [pc, #156]	; 2b10 <gen_load_a+0x148>
    2a70:	mov	r1, r2
    2a74:	add	r3, pc, r3
    2a78:	ldr	r0, [r3, #872]	; 0x368
    2a7c:	add	r0, r0, #40	; 0x28
    2a80:	add	r0, r0, r4
    2a84:	add	sp, sp, #12
    2a88:	ldrd	r4, [sp]
    2a8c:	ldr	lr, [sp, #8]
    2a90:	add	sp, sp, #12
    2a94:	b	2938 <gen_load_macplrel>
    2a98:	mov	r1, r2
    2a9c:	mov	r0, r4
    2aa0:	add	sp, sp, #12
    2aa4:	ldrd	r4, [sp]
    2aa8:	ldr	lr, [sp, #8]
    2aac:	add	sp, sp, #12
    2ab0:	b	265c <gen_load_llrel>
    2ab4:	mov	r1, r2
    2ab8:	mov	r0, r4
    2abc:	b	2a84 <gen_load_a+0xbc>
    2ac0:	ldr	r3, [pc, #76]	; 2b14 <gen_load_a+0x14c>
    2ac4:	mov	r1, r2
    2ac8:	add	r3, pc, r3
    2acc:	ldr	r0, [r3, #872]	; 0x368
    2ad0:	b	2a80 <gen_load_a+0xb8>
    2ad4:	ldr	r3, [pc, #60]	; 2b18 <gen_load_a+0x150>
    2ad8:	mov	r1, r2
    2adc:	add	r3, pc, r3
    2ae0:	ldr	r0, [r3, #880]	; 0x370
    2ae4:	b	2a80 <gen_load_a+0xb8>
    2ae8:	mov	r0, #20
    2aec:	str	r2, [sp, #4]
    2af0:	bl	2250 <newchunk>
    2af4:	ldr	r2, [sp, #4]
    2af8:	mov	r5, r0
    2afc:	str	r4, [r0, #12]
    2b00:	orr	r2, r2, #32
    2b04:	str	r2, [r0]
    2b08:	b	2a58 <gen_load_a+0x90>
    2b0c:	.word	0x0002e940
    2b10:	.word	0x0002e8ec
    2b14:	.word	0x0002e898
    2b18:	.word	0x0002e884

00002b1c <gen_ipfrag>:
    2b1c:	mov	r2, #8
    2b20:	mov	r1, #6
    2b24:	str	r4, [sp, #-8]!
    2b28:	mov	r0, #3
    2b2c:	str	lr, [sp, #4]
    2b30:	bl	29c8 <gen_load_a>
    2b34:	mov	r4, r0
    2b38:	mov	r0, #208	; 0xd0
    2b3c:	bl	2250 <newchunk>
    2b40:	ldr	r2, [r0, #44]	; 0x2c
    2b44:	mov	r3, r0
    2b48:	mov	ip, #69	; 0x45
    2b4c:	movw	r1, #8191	; 0x1fff
    2b50:	stmib	r0, {r4, ip}
    2b54:	str	r1, [r0, #20]
    2b58:	clz	r2, r2
    2b5c:	lsr	r2, r2, #5
    2b60:	str	r2, [r0, #44]	; 0x2c
    2b64:	str	r0, [r3, #96]	; 0x60
    2b68:	ldr	r4, [sp]
    2b6c:	add	sp, sp, #4
    2b70:	pop	{pc}		; (ldr pc, [sp], #4)

00002b74 <gen_ncmp>:
    2b74:	strd	r4, [sp, #-24]!	; 0xffffffe8
    2b78:	strd	r6, [sp, #8]
    2b7c:	mov	r6, r3
    2b80:	str	r8, [sp, #16]
    2b84:	str	lr, [sp, #20]
    2b88:	ldr	r4, [sp, #24]
    2b8c:	ldr	r8, [sp, #28]
    2b90:	ldr	r7, [sp, #32]
    2b94:	bl	29c8 <gen_load_a>
    2b98:	cmn	r6, #1
    2b9c:	mov	r5, r0
    2ba0:	bne	2bf8 <gen_ncmp+0x84>
    2ba4:	mov	r0, #208	; 0xd0
    2ba8:	bl	2250 <newchunk>
    2bac:	orr	r3, r4, #5
    2bb0:	cmp	r8, #0
    2bb4:	str	r5, [r0, #4]
    2bb8:	str	r3, [r0, #8]
    2bbc:	str	r7, [r0, #20]
    2bc0:	str	r0, [r0, #96]	; 0x60
    2bc4:	beq	2be4 <gen_ncmp+0x70>
    2bc8:	bic	r4, r4, #16
    2bcc:	cmp	r4, #32
    2bd0:	bne	2be4 <gen_ncmp+0x70>
    2bd4:	ldr	r3, [r0, #44]	; 0x2c
    2bd8:	clz	r3, r3
    2bdc:	lsr	r3, r3, #5
    2be0:	str	r3, [r0, #44]	; 0x2c
    2be4:	ldrd	r4, [sp]
    2be8:	ldrd	r6, [sp, #8]
    2bec:	ldr	r8, [sp, #16]
    2bf0:	add	sp, sp, #20
    2bf4:	pop	{pc}		; (ldr pc, [sp], #4)
    2bf8:	mov	r0, #20
    2bfc:	bl	2250 <newchunk>
    2c00:	mov	r3, #84	; 0x54
    2c04:	mov	r2, r5
    2c08:	str	r3, [r0]
    2c0c:	str	r6, [r0, #12]
    2c10:	b	2c18 <gen_ncmp+0xa4>
    2c14:	mov	r2, r3
    2c18:	ldr	r3, [r2, #16]
    2c1c:	cmp	r3, #0
    2c20:	bne	2c14 <gen_ncmp+0xa0>
    2c24:	str	r0, [r2, #16]
    2c28:	b	2ba4 <gen_ncmp+0x30>

00002c2c <gen_cmp>:
    2c2c:	strd	r4, [sp, #-16]!
    2c30:	mov	r4, r3
    2c34:	str	r6, [sp, #8]
    2c38:	str	lr, [sp, #12]
    2c3c:	bl	29c8 <gen_load_a>
    2c40:	mov	r5, r0
    2c44:	mov	r0, #208	; 0xd0
    2c48:	bl	2250 <newchunk>
    2c4c:	mov	r2, r0
    2c50:	mov	r3, #21
    2c54:	str	r5, [r0, #4]
    2c58:	str	r3, [r0, #8]
    2c5c:	str	r4, [r0, #20]
    2c60:	str	r0, [r2, #96]	; 0x60
    2c64:	ldrd	r4, [sp]
    2c68:	ldr	r6, [sp, #8]
    2c6c:	add	sp, sp, #12
    2c70:	pop	{pc}		; (ldr pc, [sp], #4)

00002c74 <gen_cmp_ge>:
    2c74:	strd	r4, [sp, #-16]!
    2c78:	mov	r4, r3
    2c7c:	str	r6, [sp, #8]
    2c80:	str	lr, [sp, #12]
    2c84:	bl	29c8 <gen_load_a>
    2c88:	mov	r5, r0
    2c8c:	mov	r0, #208	; 0xd0
    2c90:	bl	2250 <newchunk>
    2c94:	mov	r2, r0
    2c98:	mov	r3, #53	; 0x35
    2c9c:	str	r5, [r0, #4]
    2ca0:	str	r3, [r0, #8]
    2ca4:	str	r4, [r0, #20]
    2ca8:	str	r0, [r2, #96]	; 0x60
    2cac:	ldrd	r4, [sp]
    2cb0:	ldr	r6, [sp, #8]
    2cb4:	add	sp, sp, #12
    2cb8:	pop	{pc}		; (ldr pc, [sp], #4)

00002cbc <lookup_proto>:
    2cbc:	str	r4, [sp, #-8]!
    2cc0:	mov	r4, r0
    2cc4:	str	lr, [sp, #4]
    2cc8:	cmp	r1, #24
    2ccc:	addls	pc, pc, r1, lsl #2
    2cd0:	b	2dd4 <lookup_proto+0x118>
    2cd4:	b	2dbc <lookup_proto+0x100>
    2cd8:	b	2d90 <lookup_proto+0xd4>
    2cdc:	b	2dbc <lookup_proto+0x100>
    2ce0:	b	2dd4 <lookup_proto+0x118>
    2ce4:	b	2dd4 <lookup_proto+0x118>
    2ce8:	b	2dd4 <lookup_proto+0x118>
    2cec:	b	2dd4 <lookup_proto+0x118>
    2cf0:	b	2dd4 <lookup_proto+0x118>
    2cf4:	b	2dd4 <lookup_proto+0x118>
    2cf8:	b	2dd4 <lookup_proto+0x118>
    2cfc:	b	2dd4 <lookup_proto+0x118>
    2d00:	b	2dd4 <lookup_proto+0x118>
    2d04:	b	2dd4 <lookup_proto+0x118>
    2d08:	b	2dd4 <lookup_proto+0x118>
    2d0c:	b	2dd4 <lookup_proto+0x118>
    2d10:	b	2dd4 <lookup_proto+0x118>
    2d14:	b	2dd4 <lookup_proto+0x118>
    2d18:	b	2dbc <lookup_proto+0x100>
    2d1c:	b	2dd4 <lookup_proto+0x118>
    2d20:	b	2dd4 <lookup_proto+0x118>
    2d24:	b	2dd4 <lookup_proto+0x118>
    2d28:	b	2dd4 <lookup_proto+0x118>
    2d2c:	b	2dd4 <lookup_proto+0x118>
    2d30:	b	2dd4 <lookup_proto+0x118>
    2d34:	b	2d38 <lookup_proto+0x7c>
    2d38:	ldr	r1, [pc, #196]	; 2e04 <lookup_proto+0x148>
    2d3c:	add	r1, pc, r1
    2d40:	bl	cf4 <strcmp@plt>
    2d44:	cmp	r0, #0
    2d48:	beq	2de4 <lookup_proto+0x128>
    2d4c:	ldr	r1, [pc, #180]	; 2e08 <lookup_proto+0x14c>
    2d50:	mov	r0, r4
    2d54:	add	r1, pc, r1
    2d58:	bl	cf4 <strcmp@plt>
    2d5c:	cmp	r0, #0
    2d60:	beq	2dec <lookup_proto+0x130>
    2d64:	ldr	r1, [pc, #160]	; 2e0c <lookup_proto+0x150>
    2d68:	mov	r0, r4
    2d6c:	add	r1, pc, r1
    2d70:	bl	cf4 <strcmp@plt>
    2d74:	cmp	r0, #0
    2d78:	moveq	r0, #129	; 0x81
    2d7c:	beq	2dc8 <lookup_proto+0x10c>
    2d80:	ldr	r0, [pc, #136]	; 2e10 <lookup_proto+0x154>
    2d84:	mov	r1, r4
    2d88:	add	r0, pc, r0
    2d8c:	bl	2210 <sf_bpf_error>
    2d90:	bl	bf0c <pcap_nametoeproto>
    2d94:	cmn	r0, #1
    2d98:	bne	2dc8 <lookup_proto+0x10c>
    2d9c:	mov	r0, r4
    2da0:	bl	bf7c <pcap_nametollc>
    2da4:	cmn	r0, #1
    2da8:	bne	2dc8 <lookup_proto+0x10c>
    2dac:	ldr	r0, [pc, #96]	; 2e14 <lookup_proto+0x158>
    2db0:	mov	r1, r4
    2db4:	add	r0, pc, r0
    2db8:	bl	2210 <sf_bpf_error>
    2dbc:	bl	bee8 <pcap_nametoproto>
    2dc0:	cmn	r0, #1
    2dc4:	beq	2df4 <lookup_proto+0x138>
    2dc8:	ldr	r4, [sp]
    2dcc:	add	sp, sp, #4
    2dd0:	pop	{pc}		; (ldr pc, [sp], #4)
    2dd4:	ldr	r4, [sp]
    2dd8:	add	sp, sp, #4
    2ddc:	mvn	r0, #0
    2de0:	pop	{pc}		; (ldr pc, [sp], #4)
    2de4:	mov	r0, #130	; 0x82
    2de8:	b	2dc8 <lookup_proto+0x10c>
    2dec:	mov	r0, #131	; 0x83
    2df0:	b	2dc8 <lookup_proto+0x10c>
    2df4:	ldr	r0, [pc, #28]	; 2e18 <lookup_proto+0x15c>
    2df8:	mov	r1, r4
    2dfc:	add	r0, pc, r0
    2e00:	bl	2210 <sf_bpf_error>
    2e04:	.word	0x000103e8
    2e08:	.word	0x000103d8
    2e0c:	.word	0x000103c8
    2e10:	.word	0x000103b4
    2e14:	.word	0x00010354
    2e18:	.word	0x000102f4

00002e1c <sf_sdup>:
    2e1c:	strd	r4, [sp, #-16]!
    2e20:	str	r6, [sp, #8]
    2e24:	mov	r6, r0
    2e28:	str	lr, [sp, #12]
    2e2c:	bl	df0 <strlen@plt>
    2e30:	add	r5, r0, #1
    2e34:	mov	r4, r0
    2e38:	mov	r0, r5
    2e3c:	bl	2250 <newchunk>
    2e40:	mov	r2, r5
    2e44:	mov	r1, r6
    2e48:	bl	e44 <strncpy@plt>
    2e4c:	mov	r2, #0
    2e50:	strb	r2, [r0, r4]
    2e54:	ldrd	r4, [sp]
    2e58:	ldr	r6, [sp, #8]
    2e5c:	add	sp, sp, #12
    2e60:	pop	{pc}		; (ldr pc, [sp], #4)

00002e64 <sfbpf_compile>:
    2e64:	strd	r4, [sp, #-16]!
    2e68:	mov	ip, #0
    2e6c:	str	r6, [sp, #8]
    2e70:	str	lr, [sp, #12]
    2e74:	sub	sp, sp, #24
    2e78:	ldr	lr, [pc, #2796]	; 396c <sfbpf_compile+0xb08>
    2e7c:	strd	r0, [sp, #4]
    2e80:	mov	r1, ip
    2e84:	ldr	r0, [pc, #2788]	; 3970 <sfbpf_compile+0xb0c>
    2e88:	str	r2, [sp, #12]
    2e8c:	mov	r2, #64	; 0x40
    2e90:	str	r3, [sp, #16]
    2e94:	add	lr, pc, lr
    2e98:	ldr	r3, [pc, #2772]	; 3974 <sfbpf_compile+0xb10>
    2e9c:	str	lr, [sp]
    2ea0:	ldr	r0, [lr, r0]
    2ea4:	ldr	r4, [pc, #2764]	; 3978 <sfbpf_compile+0xb14>
    2ea8:	str	ip, [r0]
    2eac:	ldr	r3, [lr, r3]
    2eb0:	add	r4, pc, r4
    2eb4:	add	r0, r4, #792	; 0x318
    2eb8:	str	ip, [r4, #788]	; 0x314
    2ebc:	str	ip, [r4, #884]	; 0x374
    2ec0:	str	ip, [r3]
    2ec4:	bl	e2c <memset@plt>
    2ec8:	add	r0, r4, #392	; 0x188
    2ecc:	bl	d3c <_setjmp@plt>
    2ed0:	cmp	r0, #0
    2ed4:	beq	2f1c <sfbpf_compile+0xb8>
    2ed8:	ldr	r4, [pc, #2716]	; 397c <sfbpf_compile+0xb18>
    2edc:	add	r4, pc, r4
    2ee0:	ldr	r0, [r4, #888]	; 0x378
    2ee4:	cmp	r0, #0
    2ee8:	beq	2ef8 <sfbpf_compile+0x94>
    2eec:	bl	e80 <freeaddrinfo@plt>
    2ef0:	mov	r3, #0
    2ef4:	str	r3, [r4, #888]	; 0x378
    2ef8:	bl	12e18 <sf_lex_cleanup>
    2efc:	bl	21b8 <freechunks>
    2f00:	mvn	r4, #0
    2f04:	mov	r0, r4
    2f08:	add	sp, sp, #24
    2f0c:	ldrd	r4, [sp]
    2f10:	ldr	r6, [sp, #8]
    2f14:	add	sp, sp, #12
    2f18:	pop	{pc}		; (ldr pc, [sp], #4)
    2f1c:	ldr	r3, [pc, #2652]	; 3980 <sfbpf_compile+0xb1c>
    2f20:	ldr	r2, [sp, #4]
    2f24:	ldr	r1, [sp, #44]	; 0x2c
    2f28:	add	r3, pc, r3
    2f2c:	cmp	r2, #0
    2f30:	str	r1, [r3, #892]	; 0x37c
    2f34:	str	r2, [r3, #896]	; 0x380
    2f38:	beq	3404 <sfbpf_compile+0x5a0>
    2f3c:	ldr	r3, [sp, #16]
    2f40:	cmp	r3, #0
    2f44:	beq	343c <sfbpf_compile+0x5d8>
    2f48:	ldr	r0, [sp, #16]
    2f4c:	bl	12de0 <sf_lex_init>
    2f50:	ldr	r3, [pc, #2604]	; 3984 <sfbpf_compile+0xb20>
    2f54:	mvn	r2, #0
    2f58:	mov	r1, #0
    2f5c:	ldr	r0, [pc, #2596]	; 3988 <sfbpf_compile+0xb24>
    2f60:	ldr	ip, [sp, #8]
    2f64:	add	r3, pc, r3
    2f68:	add	r0, pc, r0
    2f6c:	str	r2, [r3, #784]	; 0x310
    2f70:	str	r2, [r0]
    2f74:	str	r1, [r0, #4]
    2f78:	str	ip, [r3, #856]	; 0x358
    2f7c:	str	r1, [r3, #860]	; 0x35c
    2f80:	str	r1, [r3, #864]	; 0x360
    2f84:	str	r2, [r3, #868]	; 0x364
    2f88:	str	r1, [r3, #876]	; 0x36c
    2f8c:	str	r1, [r3, #900]	; 0x384
    2f90:	str	r1, [r3, #904]	; 0x388
    2f94:	str	r1, [r3, #908]	; 0x38c
    2f98:	str	r2, [r3, #912]	; 0x390
    2f9c:	str	r2, [r3, #916]	; 0x394
    2fa0:	str	r2, [r3, #920]	; 0x398
    2fa4:	str	r2, [r3, #924]	; 0x39c
    2fa8:	str	r1, [r3, #928]	; 0x3a0
    2fac:	str	r2, [r3, #932]	; 0x3a4
    2fb0:	str	r2, [r3, #936]	; 0x3a8
    2fb4:	str	r2, [r3, #940]	; 0x3ac
    2fb8:	str	r2, [r3, #944]	; 0x3b0
    2fbc:	str	r2, [r3, #948]	; 0x3b4
    2fc0:	cmp	ip, #229	; 0xe5
    2fc4:	addls	pc, pc, ip, lsl #2
    2fc8:	b	3950 <sfbpf_compile+0xaec>
    2fcc:	b	375c <sfbpf_compile+0x8f8>
    2fd0:	b	376c <sfbpf_compile+0x908>
    2fd4:	b	3950 <sfbpf_compile+0xaec>
    2fd8:	b	3950 <sfbpf_compile+0xaec>
    2fdc:	b	3950 <sfbpf_compile+0xaec>
    2fe0:	b	3950 <sfbpf_compile+0xaec>
    2fe4:	b	3578 <sfbpf_compile+0x714>
    2fe8:	b	35a0 <sfbpf_compile+0x73c>
    2fec:	b	35b4 <sfbpf_compile+0x750>
    2ff0:	b	35c8 <sfbpf_compile+0x764>
    2ff4:	b	35dc <sfbpf_compile+0x778>
    2ff8:	b	3604 <sfbpf_compile+0x7a0>
    2ffc:	b	34ac <sfbpf_compile+0x648>
    3000:	b	3950 <sfbpf_compile+0xaec>
    3004:	b	3950 <sfbpf_compile+0xaec>
    3008:	b	3628 <sfbpf_compile+0x7c4>
    300c:	b	3550 <sfbpf_compile+0x6ec>
    3010:	b	3950 <sfbpf_compile+0xaec>
    3014:	b	3950 <sfbpf_compile+0xaec>
    3018:	b	3604 <sfbpf_compile+0x7a0>
    301c:	b	3950 <sfbpf_compile+0xaec>
    3020:	b	3950 <sfbpf_compile+0xaec>
    3024:	b	3950 <sfbpf_compile+0xaec>
    3028:	b	3950 <sfbpf_compile+0xaec>
    302c:	b	3950 <sfbpf_compile+0xaec>
    3030:	b	3950 <sfbpf_compile+0xaec>
    3034:	b	3950 <sfbpf_compile+0xaec>
    3038:	b	3950 <sfbpf_compile+0xaec>
    303c:	b	3950 <sfbpf_compile+0xaec>
    3040:	b	3950 <sfbpf_compile+0xaec>
    3044:	b	3950 <sfbpf_compile+0xaec>
    3048:	b	3950 <sfbpf_compile+0xaec>
    304c:	b	3950 <sfbpf_compile+0xaec>
    3050:	b	3950 <sfbpf_compile+0xaec>
    3054:	b	3950 <sfbpf_compile+0xaec>
    3058:	b	3950 <sfbpf_compile+0xaec>
    305c:	b	3950 <sfbpf_compile+0xaec>
    3060:	b	3950 <sfbpf_compile+0xaec>
    3064:	b	3950 <sfbpf_compile+0xaec>
    3068:	b	3950 <sfbpf_compile+0xaec>
    306c:	b	3950 <sfbpf_compile+0xaec>
    3070:	b	3950 <sfbpf_compile+0xaec>
    3074:	b	3950 <sfbpf_compile+0xaec>
    3078:	b	3950 <sfbpf_compile+0xaec>
    307c:	b	3950 <sfbpf_compile+0xaec>
    3080:	b	3950 <sfbpf_compile+0xaec>
    3084:	b	3950 <sfbpf_compile+0xaec>
    3088:	b	3950 <sfbpf_compile+0xaec>
    308c:	b	3950 <sfbpf_compile+0xaec>
    3090:	b	3950 <sfbpf_compile+0xaec>
    3094:	b	35c8 <sfbpf_compile+0x764>
    3098:	b	3564 <sfbpf_compile+0x700>
    309c:	b	3950 <sfbpf_compile+0xaec>
    30a0:	b	3950 <sfbpf_compile+0xaec>
    30a4:	b	3950 <sfbpf_compile+0xaec>
    30a8:	b	3950 <sfbpf_compile+0xaec>
    30ac:	b	3950 <sfbpf_compile+0xaec>
    30b0:	b	3950 <sfbpf_compile+0xaec>
    30b4:	b	3950 <sfbpf_compile+0xaec>
    30b8:	b	3950 <sfbpf_compile+0xaec>
    30bc:	b	3950 <sfbpf_compile+0xaec>
    30c0:	b	3950 <sfbpf_compile+0xaec>
    30c4:	b	3950 <sfbpf_compile+0xaec>
    30c8:	b	3950 <sfbpf_compile+0xaec>
    30cc:	b	3950 <sfbpf_compile+0xaec>
    30d0:	b	3950 <sfbpf_compile+0xaec>
    30d4:	b	3950 <sfbpf_compile+0xaec>
    30d8:	b	3950 <sfbpf_compile+0xaec>
    30dc:	b	3950 <sfbpf_compile+0xaec>
    30e0:	b	3950 <sfbpf_compile+0xaec>
    30e4:	b	3950 <sfbpf_compile+0xaec>
    30e8:	b	3950 <sfbpf_compile+0xaec>
    30ec:	b	3950 <sfbpf_compile+0xaec>
    30f0:	b	3950 <sfbpf_compile+0xaec>
    30f4:	b	3950 <sfbpf_compile+0xaec>
    30f8:	b	3950 <sfbpf_compile+0xaec>
    30fc:	b	3950 <sfbpf_compile+0xaec>
    3100:	b	3950 <sfbpf_compile+0xaec>
    3104:	b	3950 <sfbpf_compile+0xaec>
    3108:	b	3950 <sfbpf_compile+0xaec>
    310c:	b	3950 <sfbpf_compile+0xaec>
    3110:	b	3950 <sfbpf_compile+0xaec>
    3114:	b	3950 <sfbpf_compile+0xaec>
    3118:	b	3950 <sfbpf_compile+0xaec>
    311c:	b	3950 <sfbpf_compile+0xaec>
    3120:	b	3950 <sfbpf_compile+0xaec>
    3124:	b	3950 <sfbpf_compile+0xaec>
    3128:	b	3950 <sfbpf_compile+0xaec>
    312c:	b	3950 <sfbpf_compile+0xaec>
    3130:	b	3950 <sfbpf_compile+0xaec>
    3134:	b	3950 <sfbpf_compile+0xaec>
    3138:	b	3950 <sfbpf_compile+0xaec>
    313c:	b	3950 <sfbpf_compile+0xaec>
    3140:	b	3950 <sfbpf_compile+0xaec>
    3144:	b	3950 <sfbpf_compile+0xaec>
    3148:	b	3950 <sfbpf_compile+0xaec>
    314c:	b	3950 <sfbpf_compile+0xaec>
    3150:	b	3950 <sfbpf_compile+0xaec>
    3154:	b	3950 <sfbpf_compile+0xaec>
    3158:	b	3528 <sfbpf_compile+0x6c4>
    315c:	b	3950 <sfbpf_compile+0xaec>
    3160:	b	3950 <sfbpf_compile+0xaec>
    3164:	b	3950 <sfbpf_compile+0xaec>
    3168:	b	3950 <sfbpf_compile+0xaec>
    316c:	b	35c8 <sfbpf_compile+0x764>
    3170:	b	34fc <sfbpf_compile+0x698>
    3174:	b	3950 <sfbpf_compile+0xaec>
    3178:	b	34ac <sfbpf_compile+0x648>
    317c:	b	375c <sfbpf_compile+0x8f8>
    3180:	b	3714 <sfbpf_compile+0x8b0>
    3184:	b	3950 <sfbpf_compile+0xaec>
    3188:	b	3950 <sfbpf_compile+0xaec>
    318c:	b	3950 <sfbpf_compile+0xaec>
    3190:	b	3738 <sfbpf_compile+0x8d4>
    3194:	b	34ac <sfbpf_compile+0x648>
    3198:	b	3950 <sfbpf_compile+0xaec>
    319c:	b	3950 <sfbpf_compile+0xaec>
    31a0:	b	3950 <sfbpf_compile+0xaec>
    31a4:	b	3950 <sfbpf_compile+0xaec>
    31a8:	b	34fc <sfbpf_compile+0x698>
    31ac:	b	3950 <sfbpf_compile+0xaec>
    31b0:	b	3950 <sfbpf_compile+0xaec>
    31b4:	b	3800 <sfbpf_compile+0x99c>
    31b8:	b	3828 <sfbpf_compile+0x9c4>
    31bc:	b	3950 <sfbpf_compile+0xaec>
    31c0:	b	3950 <sfbpf_compile+0xaec>
    31c4:	b	3950 <sfbpf_compile+0xaec>
    31c8:	b	34fc <sfbpf_compile+0x698>
    31cc:	b	3950 <sfbpf_compile+0xaec>
    31d0:	b	3878 <sfbpf_compile+0xa14>
    31d4:	b	3888 <sfbpf_compile+0xa24>
    31d8:	b	3888 <sfbpf_compile+0xa24>
    31dc:	b	38b0 <sfbpf_compile+0xa4c>
    31e0:	b	38c0 <sfbpf_compile+0xa5c>
    31e4:	b	3888 <sfbpf_compile+0xa24>
    31e8:	b	38d4 <sfbpf_compile+0xa70>
    31ec:	b	38fc <sfbpf_compile+0xa98>
    31f0:	b	390c <sfbpf_compile+0xaa8>
    31f4:	b	3920 <sfbpf_compile+0xabc>
    31f8:	b	3934 <sfbpf_compile+0xad0>
    31fc:	b	363c <sfbpf_compile+0x7d8>
    3200:	b	3950 <sfbpf_compile+0xaec>
    3204:	b	3950 <sfbpf_compile+0xaec>
    3208:	b	34f0 <sfbpf_compile+0x68c>
    320c:	b	34f0 <sfbpf_compile+0x68c>
    3210:	b	3950 <sfbpf_compile+0xaec>
    3214:	b	3950 <sfbpf_compile+0xaec>
    3218:	b	3950 <sfbpf_compile+0xaec>
    321c:	b	3950 <sfbpf_compile+0xaec>
    3220:	b	3950 <sfbpf_compile+0xaec>
    3224:	b	3950 <sfbpf_compile+0xaec>
    3228:	b	3950 <sfbpf_compile+0xaec>
    322c:	b	3950 <sfbpf_compile+0xaec>
    3230:	b	3950 <sfbpf_compile+0xaec>
    3234:	b	3950 <sfbpf_compile+0xaec>
    3238:	b	3950 <sfbpf_compile+0xaec>
    323c:	b	3950 <sfbpf_compile+0xaec>
    3240:	b	3950 <sfbpf_compile+0xaec>
    3244:	b	3950 <sfbpf_compile+0xaec>
    3248:	b	3950 <sfbpf_compile+0xaec>
    324c:	b	3950 <sfbpf_compile+0xaec>
    3250:	b	3950 <sfbpf_compile+0xaec>
    3254:	b	3950 <sfbpf_compile+0xaec>
    3258:	b	34fc <sfbpf_compile+0x698>
    325c:	b	3680 <sfbpf_compile+0x81c>
    3260:	b	3950 <sfbpf_compile+0xaec>
    3264:	b	35c8 <sfbpf_compile+0x764>
    3268:	b	36a8 <sfbpf_compile+0x844>
    326c:	b	36d4 <sfbpf_compile+0x870>
    3270:	b	3950 <sfbpf_compile+0xaec>
    3274:	b	3950 <sfbpf_compile+0xaec>
    3278:	b	3950 <sfbpf_compile+0xaec>
    327c:	b	3950 <sfbpf_compile+0xaec>
    3280:	b	3950 <sfbpf_compile+0xaec>
    3284:	b	3950 <sfbpf_compile+0xaec>
    3288:	b	3950 <sfbpf_compile+0xaec>
    328c:	b	3950 <sfbpf_compile+0xaec>
    3290:	b	3364 <sfbpf_compile+0x500>
    3294:	b	36a8 <sfbpf_compile+0x844>
    3298:	b	3888 <sfbpf_compile+0xa24>
    329c:	b	3888 <sfbpf_compile+0xa24>
    32a0:	b	3888 <sfbpf_compile+0xa24>
    32a4:	b	37c0 <sfbpf_compile+0x95c>
    32a8:	b	34cc <sfbpf_compile+0x668>
    32ac:	b	3950 <sfbpf_compile+0xaec>
    32b0:	b	3950 <sfbpf_compile+0xaec>
    32b4:	b	3364 <sfbpf_compile+0x500>
    32b8:	b	3364 <sfbpf_compile+0x500>
    32bc:	b	3950 <sfbpf_compile+0xaec>
    32c0:	b	3364 <sfbpf_compile+0x500>
    32c4:	b	3364 <sfbpf_compile+0x500>
    32c8:	b	3364 <sfbpf_compile+0x500>
    32cc:	b	34fc <sfbpf_compile+0x698>
    32d0:	b	3364 <sfbpf_compile+0x500>
    32d4:	b	374c <sfbpf_compile+0x8e8>
    32d8:	b	3364 <sfbpf_compile+0x500>
    32dc:	b	3364 <sfbpf_compile+0x500>
    32e0:	b	37e4 <sfbpf_compile+0x980>
    32e4:	b	3364 <sfbpf_compile+0x500>
    32e8:	b	3364 <sfbpf_compile+0x500>
    32ec:	b	34cc <sfbpf_compile+0x668>
    32f0:	b	3364 <sfbpf_compile+0x500>
    32f4:	b	3798 <sfbpf_compile+0x934>
    32f8:	b	3950 <sfbpf_compile+0xaec>
    32fc:	b	3950 <sfbpf_compile+0xaec>
    3300:	b	3950 <sfbpf_compile+0xaec>
    3304:	b	3950 <sfbpf_compile+0xaec>
    3308:	b	3950 <sfbpf_compile+0xaec>
    330c:	b	3950 <sfbpf_compile+0xaec>
    3310:	b	3950 <sfbpf_compile+0xaec>
    3314:	b	3950 <sfbpf_compile+0xaec>
    3318:	b	3950 <sfbpf_compile+0xaec>
    331c:	b	3950 <sfbpf_compile+0xaec>
    3320:	b	3950 <sfbpf_compile+0xaec>
    3324:	b	3950 <sfbpf_compile+0xaec>
    3328:	b	3364 <sfbpf_compile+0x500>
    332c:	b	3950 <sfbpf_compile+0xaec>
    3330:	b	3950 <sfbpf_compile+0xaec>
    3334:	b	3950 <sfbpf_compile+0xaec>
    3338:	b	3364 <sfbpf_compile+0x500>
    333c:	b	3364 <sfbpf_compile+0x500>
    3340:	b	3950 <sfbpf_compile+0xaec>
    3344:	b	3950 <sfbpf_compile+0xaec>
    3348:	b	3950 <sfbpf_compile+0xaec>
    334c:	b	3950 <sfbpf_compile+0xaec>
    3350:	b	3950 <sfbpf_compile+0xaec>
    3354:	b	3700 <sfbpf_compile+0x89c>
    3358:	b	3364 <sfbpf_compile+0x500>
    335c:	b	34ac <sfbpf_compile+0x648>
    3360:	b	34ac <sfbpf_compile+0x648>
    3364:	ldr	r3, [pc, #1568]	; 398c <sfbpf_compile+0xb28>
    3368:	add	r3, pc, r3
    336c:	mvn	r2, #0
    3370:	str	r2, [r3, #872]	; 0x368
    3374:	str	r2, [r3, #876]	; 0x36c
    3378:	str	r2, [r3, #880]	; 0x370
    337c:	str	r2, [r3, #952]	; 0x3b8
    3380:	bl	f594 <sfbpf_parse>
    3384:	ldr	r3, [pc, #1512]	; 3974 <sfbpf_compile+0xb10>
    3388:	ldr	r2, [sp]
    338c:	ldr	r3, [r2, r3]
    3390:	ldr	r4, [r3]
    3394:	cmp	r4, #0
    3398:	bne	3960 <sfbpf_compile+0xafc>
    339c:	ldr	r5, [pc, #1516]	; 3990 <sfbpf_compile+0xb2c>
    33a0:	add	r5, pc, r5
    33a4:	ldr	r3, [r5, #884]	; 0x374
    33a8:	cmp	r3, #0
    33ac:	beq	3488 <sfbpf_compile+0x624>
    33b0:	ldr	r3, [sp, #40]	; 0x28
    33b4:	cmp	r3, #0
    33b8:	beq	33d4 <sfbpf_compile+0x570>
    33bc:	ldr	r3, [pc, #1452]	; 3970 <sfbpf_compile+0xb0c>
    33c0:	ldr	r2, [sp]
    33c4:	ldr	r3, [r2, r3]
    33c8:	ldr	r3, [r3]
    33cc:	cmp	r3, #0
    33d0:	beq	3448 <sfbpf_compile+0x5e4>
    33d4:	ldr	r3, [pc, #1464]	; 3994 <sfbpf_compile+0xb30>
    33d8:	add	r3, pc, r3
    33dc:	ldr	r0, [r3, #884]	; 0x374
    33e0:	add	r1, sp, #20
    33e4:	bl	f1d4 <sf_icode_to_fcode>
    33e8:	ldr	r2, [sp, #12]
    33ec:	ldr	r3, [sp, #20]
    33f0:	str	r3, [r2]
    33f4:	str	r0, [r2, #4]
    33f8:	bl	12e18 <sf_lex_cleanup>
    33fc:	bl	21b8 <freechunks>
    3400:	b	2f04 <sfbpf_compile+0xa0>
    3404:	ldr	ip, [pc, #1420]	; 3998 <sfbpf_compile+0xb34>
    3408:	add	lr, r3, #132	; 0x84
    340c:	add	ip, pc, ip
    3410:	ldrd	r4, [ip]
    3414:	ldrb	r6, [ip, #32]
    3418:	ldrd	r0, [ip, #8]
    341c:	strd	r4, [r3, #132]	; 0x84
    3420:	ldrd	r2, [ip, #16]
    3424:	ldrd	r4, [ip, #24]
    3428:	strd	r0, [lr, #8]
    342c:	strb	r6, [lr, #32]
    3430:	strd	r2, [lr, #16]
    3434:	strd	r4, [lr, #24]
    3438:	b	2f00 <sfbpf_compile+0x9c>
    343c:	ldr	r0, [pc, #1368]	; 399c <sfbpf_compile+0xb38>
    3440:	add	r0, pc, r0
    3444:	b	2f4c <sfbpf_compile+0xe8>
    3448:	ldr	r5, [pc, #1360]	; 39a0 <sfbpf_compile+0xb3c>
    344c:	add	r5, pc, r5
    3450:	add	r0, r5, #884	; 0x374
    3454:	bl	eb00 <sf_bpf_optimize>
    3458:	ldr	r0, [r5, #884]	; 0x374
    345c:	cmp	r0, #0
    3460:	beq	347c <sfbpf_compile+0x618>
    3464:	ldr	r3, [r0, #8]
    3468:	cmp	r3, #6
    346c:	bne	33e0 <sfbpf_compile+0x57c>
    3470:	ldr	r3, [r0, #20]
    3474:	cmp	r3, #0
    3478:	bne	33e0 <sfbpf_compile+0x57c>
    347c:	ldr	r0, [pc, #1312]	; 39a4 <sfbpf_compile+0xb40>
    3480:	add	r0, pc, r0
    3484:	bl	2210 <sf_bpf_error>
    3488:	ldr	r6, [r5, #896]	; 0x380
    348c:	mov	r0, #208	; 0xd0
    3490:	bl	2250 <newchunk>
    3494:	mov	r3, #6
    3498:	str	r0, [r5, #884]	; 0x374
    349c:	str	r3, [r0, #8]
    34a0:	str	r6, [r0, #20]
    34a4:	str	r0, [r0, #96]	; 0x60
    34a8:	b	33b0 <sfbpf_compile+0x54c>
    34ac:	ldr	r3, [pc, #1268]	; 39a8 <sfbpf_compile+0xb44>
    34b0:	mov	r2, #0
    34b4:	mvn	r1, #0
    34b8:	add	r3, pc, r3
    34bc:	str	r2, [r3, #872]	; 0x368
    34c0:	str	r2, [r3, #880]	; 0x370
    34c4:	str	r1, [r3, #952]	; 0x3b8
    34c8:	b	3380 <sfbpf_compile+0x51c>
    34cc:	ldr	r3, [pc, #1240]	; 39ac <sfbpf_compile+0xb48>
    34d0:	mov	r1, #18
    34d4:	add	r3, pc, r3
    34d8:	mvn	r2, #0
    34dc:	str	r2, [r3, #872]	; 0x368
    34e0:	str	r2, [r3, #876]	; 0x36c
    34e4:	str	r2, [r3, #880]	; 0x370
    34e8:	str	r1, [r3, #952]	; 0x3b8
    34ec:	b	3380 <sfbpf_compile+0x51c>
    34f0:	ldr	r3, [pc, #1208]	; 39b0 <sfbpf_compile+0xb4c>
    34f4:	add	r3, pc, r3
    34f8:	b	336c <sfbpf_compile+0x508>
    34fc:	ldr	r3, [pc, #1200]	; 39b4 <sfbpf_compile+0xb50>
    3500:	mov	r2, #24
    3504:	mov	ip, #1
    3508:	mov	r0, #8
    350c:	mov	r1, #3
    3510:	add	r3, pc, r3
    3514:	str	ip, [r3, #864]	; 0x360
    3518:	str	r0, [r3, #872]	; 0x368
    351c:	str	r1, [r3, #880]	; 0x370
    3520:	str	r2, [r3, #952]	; 0x3b8
    3524:	b	3380 <sfbpf_compile+0x51c>
    3528:	ldr	r3, [pc, #1160]	; 39b8 <sfbpf_compile+0xb54>
    352c:	mov	r1, #6
    3530:	mov	r0, #44	; 0x2c
    3534:	add	r3, pc, r3
    3538:	mov	r2, #0
    353c:	str	r2, [r3, #872]	; 0x368
    3540:	str	r0, [r3, #876]	; 0x36c
    3544:	str	r2, [r3, #880]	; 0x370
    3548:	str	r1, [r3, #952]	; 0x3b8
    354c:	b	3380 <sfbpf_compile+0x51c>
    3550:	ldr	r3, [pc, #1124]	; 39bc <sfbpf_compile+0xb58>
    3554:	mov	r1, #5
    3558:	mov	r0, #24
    355c:	add	r3, pc, r3
    3560:	b	3538 <sfbpf_compile+0x6d4>
    3564:	ldr	r3, [pc, #1108]	; 39c0 <sfbpf_compile+0xb5c>
    3568:	mov	r1, #6
    356c:	add	r3, pc, r3
    3570:	mov	r0, #8
    3574:	b	3538 <sfbpf_compile+0x6d4>
    3578:	ldr	r3, [pc, #1092]	; 39c4 <sfbpf_compile+0xb60>
    357c:	mov	r2, #14
    3580:	mov	r0, #8
    3584:	mov	r1, #3
    3588:	add	r3, pc, r3
    358c:	str	r0, [r3, #872]	; 0x368
    3590:	str	r2, [r3, #876]	; 0x36c
    3594:	str	r1, [r3, #880]	; 0x370
    3598:	str	r2, [r3, #952]	; 0x3b8
    359c:	b	3380 <sfbpf_compile+0x51c>
    35a0:	ldr	r3, [pc, #1056]	; 39c8 <sfbpf_compile+0xb64>
    35a4:	mov	r1, #2
    35a8:	mov	r0, #6
    35ac:	add	r3, pc, r3
    35b0:	b	3538 <sfbpf_compile+0x6d4>
    35b4:	ldr	r3, [pc, #1040]	; 39cc <sfbpf_compile+0xb68>
    35b8:	mvn	r1, #0
    35bc:	mov	r0, #16
    35c0:	add	r3, pc, r3
    35c4:	b	3538 <sfbpf_compile+0x6d4>
    35c8:	ldr	r3, [pc, #1024]	; 39d0 <sfbpf_compile+0xb6c>
    35cc:	mov	r1, #2
    35d0:	mov	r0, #4
    35d4:	add	r3, pc, r3
    35d8:	b	3538 <sfbpf_compile+0x6d4>
    35dc:	ldr	r3, [pc, #1008]	; 39d4 <sfbpf_compile+0xb70>
    35e0:	mov	r2, #13
    35e4:	mov	r0, #8
    35e8:	mov	r1, #3
    35ec:	add	r3, pc, r3
    35f0:	str	r0, [r3, #872]	; 0x368
    35f4:	str	r2, [r3, #876]	; 0x36c
    35f8:	str	r1, [r3, #880]	; 0x370
    35fc:	str	r2, [r3, #952]	; 0x3b8
    3600:	b	3380 <sfbpf_compile+0x51c>
    3604:	ldr	r3, [pc, #972]	; 39d8 <sfbpf_compile+0xb74>
    3608:	mov	r2, #0
    360c:	mov	r0, #8
    3610:	mov	r1, #3
    3614:	add	r3, pc, r3
    3618:	str	r0, [r3, #872]	; 0x368
    361c:	str	r1, [r3, #880]	; 0x370
    3620:	str	r2, [r3, #952]	; 0x3b8
    3624:	b	3380 <sfbpf_compile+0x51c>
    3628:	ldr	r3, [pc, #940]	; 39dc <sfbpf_compile+0xb78>
    362c:	mvn	r1, #0
    3630:	mov	r0, #24
    3634:	add	r3, pc, r3
    3638:	b	3538 <sfbpf_compile+0x6d4>
    363c:	ldr	r3, [pc, #924]	; 39e0 <sfbpf_compile+0xb7c>
    3640:	mov	lr, #2
    3644:	mov	ip, #3
    3648:	mov	r0, #7
    364c:	mov	r1, #4
    3650:	add	r3, pc, r3
    3654:	mvn	r2, #0
    3658:	str	r2, [r3, #872]	; 0x368
    365c:	str	r2, [r3, #876]	; 0x36c
    3660:	str	r2, [r3, #880]	; 0x370
    3664:	str	lr, [r3, #932]	; 0x3a4
    3668:	str	ip, [r3, #936]	; 0x3a8
    366c:	str	r1, [r3, #940]	; 0x3ac
    3670:	str	r1, [r3, #944]	; 0x3b0
    3674:	str	r0, [r3, #948]	; 0x3b4
    3678:	str	r2, [r3, #952]	; 0x3b8
    367c:	b	3380 <sfbpf_compile+0x51c>
    3680:	ldr	r3, [pc, #860]	; 39e4 <sfbpf_compile+0xb80>
    3684:	mov	r2, #12
    3688:	mov	r0, #0
    368c:	mvn	r1, #0
    3690:	add	r3, pc, r3
    3694:	str	r0, [r3, #872]	; 0x368
    3698:	str	r2, [r3, #876]	; 0x36c
    369c:	str	r1, [r3, #880]	; 0x370
    36a0:	str	r2, [r3, #952]	; 0x3b8
    36a4:	b	3380 <sfbpf_compile+0x51c>
    36a8:	ldr	r3, [pc, #824]	; 39e8 <sfbpf_compile+0xb84>
    36ac:	mov	r0, #14
    36b0:	mov	r2, #16
    36b4:	mov	ip, #18
    36b8:	mov	r1, #21
    36bc:	add	r3, pc, r3
    36c0:	str	ip, [r3, #872]	; 0x368
    36c4:	str	r0, [r3, #876]	; 0x36c
    36c8:	str	r1, [r3, #880]	; 0x370
    36cc:	str	r2, [r3, #952]	; 0x3b8
    36d0:	b	3380 <sfbpf_compile+0x51c>
    36d4:	ldr	r3, [pc, #784]	; 39ec <sfbpf_compile+0xb88>
    36d8:	mov	r2, #4
    36dc:	mov	r0, #6
    36e0:	add	r3, pc, r3
    36e4:	mov	ip, #0
    36e8:	mvn	r1, #0
    36ec:	str	ip, [r3, #872]	; 0x368
    36f0:	str	r0, [r3, #876]	; 0x36c
    36f4:	str	r1, [r3, #880]	; 0x370
    36f8:	str	r2, [r3, #952]	; 0x3b8
    36fc:	b	3380 <sfbpf_compile+0x51c>
    3700:	ldr	r3, [pc, #744]	; 39f0 <sfbpf_compile+0xb8c>
    3704:	mov	r2, #1
    3708:	mov	r0, #24
    370c:	add	r3, pc, r3
    3710:	b	36e4 <sfbpf_compile+0x880>
    3714:	ldr	r3, [pc, #728]	; 39f4 <sfbpf_compile+0xb90>
    3718:	mov	r1, #12
    371c:	add	r3, pc, r3
    3720:	mov	r2, #0
    3724:	str	r2, [r3, #872]	; 0x368
    3728:	str	r1, [r3, #876]	; 0x36c
    372c:	str	r2, [r3, #880]	; 0x370
    3730:	str	r2, [r3, #952]	; 0x3b8
    3734:	b	3380 <sfbpf_compile+0x51c>
    3738:	ldr	r3, [pc, #696]	; 39f8 <sfbpf_compile+0xb94>
    373c:	mov	r1, #14
    3740:	mov	r0, #16
    3744:	add	r3, pc, r3
    3748:	b	3538 <sfbpf_compile+0x6d4>
    374c:	ldr	r3, [pc, #680]	; 39fc <sfbpf_compile+0xb98>
    3750:	mov	r1, #8
    3754:	add	r3, pc, r3
    3758:	b	34d8 <sfbpf_compile+0x674>
    375c:	ldr	r3, [pc, #668]	; 3a00 <sfbpf_compile+0xb9c>
    3760:	mov	r1, #4
    3764:	add	r3, pc, r3
    3768:	b	3720 <sfbpf_compile+0x8bc>
    376c:	ldr	r3, [pc, #656]	; 3a04 <sfbpf_compile+0xba0>
    3770:	mov	r2, #12
    3774:	mov	r0, #14
    3778:	mov	ip, #0
    377c:	mov	r1, #3
    3780:	add	r3, pc, r3
    3784:	str	ip, [r3, #872]	; 0x368
    3788:	str	r0, [r3, #876]	; 0x36c
    378c:	str	r1, [r3, #880]	; 0x370
    3790:	str	r2, [r3, #952]	; 0x3b8
    3794:	b	3380 <sfbpf_compile+0x51c>
    3798:	ldr	r3, [pc, #616]	; 3a08 <sfbpf_compile+0xba4>
    379c:	mvn	r2, #0
    37a0:	mov	r1, #1
    37a4:	add	r3, pc, r3
    37a8:	str	r2, [r3, #872]	; 0x368
    37ac:	str	r2, [r3, #876]	; 0x36c
    37b0:	str	r2, [r3, #880]	; 0x370
    37b4:	str	r1, [r3, #900]	; 0x384
    37b8:	str	r2, [r3, #952]	; 0x3b8
    37bc:	b	3380 <sfbpf_compile+0x51c>
    37c0:	ldr	r3, [pc, #580]	; 3a0c <sfbpf_compile+0xba8>
    37c4:	mvn	r2, #0
    37c8:	mov	r0, #4
    37cc:	mov	r1, #0
    37d0:	add	r3, pc, r3
    37d4:	str	r0, [r3, #872]	; 0x368
    37d8:	str	r1, [r3, #880]	; 0x370
    37dc:	str	r2, [r3, #952]	; 0x3b8
    37e0:	b	3380 <sfbpf_compile+0x51c>
    37e4:	ldr	r3, [pc, #548]	; 3a10 <sfbpf_compile+0xbac>
    37e8:	mov	lr, #22
    37ec:	mov	ip, #23
    37f0:	mov	r0, #27
    37f4:	mov	r1, #24
    37f8:	add	r3, pc, r3
    37fc:	b	3654 <sfbpf_compile+0x7f0>
    3800:	ldr	r3, [pc, #524]	; 3a14 <sfbpf_compile+0xbb0>
    3804:	mov	r2, #16
    3808:	mov	r0, #8
    380c:	mov	r1, #3
    3810:	add	r3, pc, r3
    3814:	str	r0, [r3, #872]	; 0x368
    3818:	str	r2, [r3, #876]	; 0x36c
    381c:	str	r1, [r3, #880]	; 0x370
    3820:	str	r2, [r3, #952]	; 0x3b8
    3824:	b	3380 <sfbpf_compile+0x51c>
    3828:	ldr	r3, [pc, #488]	; 3a18 <sfbpf_compile+0xbb4>
    382c:	mov	r2, #3
    3830:	mov	r1, #1
    3834:	mov	ip, #2
    3838:	mov	r0, #0
    383c:	mvn	lr, #0
    3840:	mov	r4, #8
    3844:	add	r3, pc, r3
    3848:	str	r4, [r3, #872]	; 0x368
    384c:	str	r2, [r3, #880]	; 0x370
    3850:	mov	r2, #4
    3854:	str	r2, [r3, #876]	; 0x36c
    3858:	str	lr, [r3, #900]	; 0x384
    385c:	str	r1, [r3, #904]	; 0x388
    3860:	str	r1, [r3, #912]	; 0x390
    3864:	str	ip, [r3, #916]	; 0x394
    3868:	str	r0, [r3, #920]	; 0x398
    386c:	str	r2, [r3, #924]	; 0x39c
    3870:	str	r2, [r3, #952]	; 0x3b8
    3874:	b	3380 <sfbpf_compile+0x51c>
    3878:	ldr	r3, [pc, #412]	; 3a1c <sfbpf_compile+0xbb8>
    387c:	mov	r1, #4
    3880:	add	r3, pc, r3
    3884:	b	3570 <sfbpf_compile+0x70c>
    3888:	ldr	r3, [pc, #400]	; 3a20 <sfbpf_compile+0xbbc>
    388c:	mov	r0, #0
    3890:	mvn	r1, #0
    3894:	add	r3, pc, r3
    3898:	mov	r2, #4
    389c:	str	r0, [r3, #872]	; 0x368
    38a0:	str	r2, [r3, #876]	; 0x36c
    38a4:	str	r1, [r3, #880]	; 0x370
    38a8:	str	r2, [r3, #952]	; 0x3b8
    38ac:	b	3380 <sfbpf_compile+0x51c>
    38b0:	ldr	r3, [pc, #364]	; 3a24 <sfbpf_compile+0xbc0>
    38b4:	mov	r1, #6
    38b8:	add	r3, pc, r3
    38bc:	b	34d8 <sfbpf_compile+0x674>
    38c0:	ldr	r3, [pc, #352]	; 3a28 <sfbpf_compile+0xbc4>
    38c4:	mov	r2, #6
    38c8:	mov	r0, #12
    38cc:	add	r3, pc, r3
    38d0:	b	36e4 <sfbpf_compile+0x880>
    38d4:	ldr	r3, [pc, #336]	; 3a2c <sfbpf_compile+0xbc8>
    38d8:	mov	r2, #8
    38dc:	mov	r0, #0
    38e0:	mov	r1, #10
    38e4:	add	r3, pc, r3
    38e8:	str	r0, [r3, #872]	; 0x368
    38ec:	str	r2, [r3, #876]	; 0x36c
    38f0:	str	r1, [r3, #880]	; 0x370
    38f4:	str	r2, [r3, #952]	; 0x3b8
    38f8:	b	3380 <sfbpf_compile+0x51c>
    38fc:	ldr	r3, [pc, #300]	; 3a30 <sfbpf_compile+0xbcc>
    3900:	mov	r1, #12
    3904:	add	r3, pc, r3
    3908:	b	34d8 <sfbpf_compile+0x674>
    390c:	ldr	r3, [pc, #288]	; 3a34 <sfbpf_compile+0xbd0>
    3910:	mov	r0, #0
    3914:	mov	r1, #10
    3918:	add	r3, pc, r3
    391c:	b	3898 <sfbpf_compile+0xa34>
    3920:	ldr	r3, [pc, #272]	; 3a38 <sfbpf_compile+0xbd4>
    3924:	mov	r1, #16
    3928:	mov	r0, #18
    392c:	add	r3, pc, r3
    3930:	b	3538 <sfbpf_compile+0x6d4>
    3934:	ldr	r3, [pc, #256]	; 3a3c <sfbpf_compile+0xbd8>
    3938:	mov	lr, #6
    393c:	mov	ip, #7
    3940:	mov	r0, #11
    3944:	mov	r1, #8
    3948:	add	r3, pc, r3
    394c:	b	3654 <sfbpf_compile+0x7f0>
    3950:	ldr	r0, [pc, #232]	; 3a40 <sfbpf_compile+0xbdc>
    3954:	ldr	r1, [sp, #8]
    3958:	add	r0, pc, r0
    395c:	bl	2210 <sf_bpf_error>
    3960:	ldr	r0, [pc, #220]	; 3a44 <sfbpf_compile+0xbe0>
    3964:	add	r0, pc, r0
    3968:	bl	2210 <sf_bpf_error>
    396c:	.word	0x0002e164
    3970:	.word	0x000000fc
    3974:	.word	0x000000d4
    3978:	.word	0x0002e4b0
    397c:	.word	0x0002e484
    3980:	.word	0x0002e438
    3984:	.word	0x0002e3fc
    3988:	.word	0x0002e308
    398c:	.word	0x0002dff8
    3990:	.word	0x0002dfc0
    3994:	.word	0x0002df88
    3998:	.word	0x0000fd48
    399c:	.word	0x0000fb4c
    39a0:	.word	0x0002df14
    39a4:	.word	0x0000fd38
    39a8:	.word	0x0002dea8
    39ac:	.word	0x0002de8c
    39b0:	.word	0x0002de6c
    39b4:	.word	0x0002de50
    39b8:	.word	0x0002de2c
    39bc:	.word	0x0002de04
    39c0:	.word	0x0002ddf4
    39c4:	.word	0x0002ddd8
    39c8:	.word	0x0002ddb4
    39cc:	.word	0x0002dda0
    39d0:	.word	0x0002dd8c
    39d4:	.word	0x0002dd74
    39d8:	.word	0x0002dd4c
    39dc:	.word	0x0002dd2c
    39e0:	.word	0x0002dd10
    39e4:	.word	0x0002dcd0
    39e8:	.word	0x0002dca4
    39ec:	.word	0x0002dc80
    39f0:	.word	0x0002dc54
    39f4:	.word	0x0002dc44
    39f8:	.word	0x0002dc1c
    39fc:	.word	0x0002dc0c
    3a00:	.word	0x0002dbfc
    3a04:	.word	0x0002dbe0
    3a08:	.word	0x0002dbbc
    3a0c:	.word	0x0002db90
    3a10:	.word	0x0002db68
    3a14:	.word	0x0002db50
    3a18:	.word	0x0002db1c
    3a1c:	.word	0x0002dae0
    3a20:	.word	0x0002dacc
    3a24:	.word	0x0002daa8
    3a28:	.word	0x0002da94
    3a2c:	.word	0x0002da7c
    3a30:	.word	0x0002da5c
    3a34:	.word	0x0002da48
    3a38:	.word	0x0002da34
    3a3c:	.word	0x0002da18
    3a40:	.word	0x0000f820
    3a44:	.word	0x0000f830

00003a48 <sfbpf_freecode>:
    3a48:	strd	r4, [sp, #-16]!
    3a4c:	mov	r5, #0
    3a50:	str	r6, [sp, #8]
    3a54:	str	lr, [sp, #12]
    3a58:	ldr	r3, [r0, #4]
    3a5c:	str	r5, [r0]
    3a60:	cmp	r3, r5
    3a64:	beq	3a78 <sfbpf_freecode+0x30>
    3a68:	mov	r4, r0
    3a6c:	mov	r0, r3
    3a70:	bl	d48 <free@plt>
    3a74:	str	r5, [r4, #4]
    3a78:	ldrd	r4, [sp]
    3a7c:	ldr	r6, [sp, #8]
    3a80:	add	sp, sp, #12
    3a84:	pop	{pc}		; (ldr pc, [sp], #4)

00003a88 <sf_gen_and>:
    3a88:	cmp	r0, #0
    3a8c:	ldr	ip, [r1, #96]	; 0x60
    3a90:	movne	r3, r0
    3a94:	beq	3abc <sf_gen_and+0x34>
    3a98:	ldr	r2, [r3, #44]	; 0x2c
    3a9c:	cmp	r2, #0
    3aa0:	ldreq	r2, [r3, #60]	; 0x3c
    3aa4:	streq	ip, [r3, #60]	; 0x3c
    3aa8:	ldrne	r2, [r3, #84]	; 0x54
    3aac:	strne	ip, [r3, #84]	; 0x54
    3ab0:	cmp	r2, #0
    3ab4:	mov	r3, r2
    3ab8:	bne	3a98 <sf_gen_and+0x10>
    3abc:	ldr	r2, [r0, #44]	; 0x2c
    3ac0:	mov	r3, r1
    3ac4:	clz	r2, r2
    3ac8:	lsr	r2, r2, #5
    3acc:	str	r2, [r0, #44]	; 0x2c
    3ad0:	ldr	r2, [r1, #44]	; 0x2c
    3ad4:	clz	r2, r2
    3ad8:	lsr	r2, r2, #5
    3adc:	str	r2, [r1, #44]	; 0x2c
    3ae0:	ldr	ip, [r3, #44]	; 0x2c
    3ae4:	add	r2, r3, #84	; 0x54
    3ae8:	cmp	ip, #0
    3aec:	addeq	r2, r3, #60	; 0x3c
    3af0:	ldr	r3, [r2]
    3af4:	cmp	r3, #0
    3af8:	bne	3ae0 <sf_gen_and+0x58>
    3afc:	str	r0, [r2]
    3b00:	ldr	r3, [r1, #44]	; 0x2c
    3b04:	clz	r3, r3
    3b08:	lsr	r3, r3, #5
    3b0c:	str	r3, [r1, #44]	; 0x2c
    3b10:	ldr	r3, [r0, #96]	; 0x60
    3b14:	str	r3, [r1, #96]	; 0x60
    3b18:	bx	lr

00003b1c <sf_finish_parse>:
    3b1c:	ldr	r3, [pc, #2484]	; 44d8 <sf_finish_parse+0x9bc>
    3b20:	strd	r4, [sp, #-36]!	; 0xffffffdc
    3b24:	mov	r5, r0
    3b28:	strd	r6, [sp, #8]
    3b2c:	strd	r8, [sp, #16]
    3b30:	strd	sl, [sp, #24]
    3b34:	add	r3, pc, r3
    3b38:	str	lr, [sp, #32]
    3b3c:	sub	sp, sp, #12
    3b40:	ldr	r4, [r3, #856]	; 0x358
    3b44:	ldr	fp, [pc, #2448]	; 44dc <sf_finish_parse+0x9c0>
    3b48:	ldr	r8, [r0, #96]	; 0x60
    3b4c:	cmp	r4, #127	; 0x7f
    3b50:	add	fp, pc, fp
    3b54:	beq	4188 <sf_finish_parse+0x66c>
    3b58:	ble	3b78 <sf_finish_parse+0x5c>
    3b5c:	cmp	r4, #163	; 0xa3
    3b60:	beq	4100 <sf_finish_parse+0x5e4>
    3b64:	cmp	r4, #192	; 0xc0
    3b68:	bne	4004 <sf_finish_parse+0x4e8>
    3b6c:	bl	2368 <gen_load_ppi_llprefixlen>
    3b70:	mov	r7, r0
    3b74:	b	4190 <sf_finish_parse+0x674>
    3b78:	cmp	r4, #119	; 0x77
    3b7c:	bne	400c <sf_finish_parse+0x4f0>
    3b80:	ldr	r0, [r3, #784]	; 0x310
    3b84:	mov	r1, #1
    3b88:	ldr	r2, [pc, #2384]	; 44e0 <sf_finish_parse+0x9c4>
    3b8c:	ldr	sl, [r3, #868]	; 0x364
    3b90:	str	r0, [sp]
    3b94:	cmn	r0, #1
    3b98:	ldr	r3, [fp, r2]
    3b9c:	str	r1, [r3]
    3ba0:	beq	41c4 <sf_finish_parse+0x6a8>
    3ba4:	mov	r0, #20
    3ba8:	bl	2250 <newchunk>
    3bac:	mov	r7, r0
    3bb0:	mov	r2, #32
    3bb4:	mov	r3, #0
    3bb8:	mov	r0, #20
    3bbc:	str	r2, [r7]
    3bc0:	str	r3, [r7, #12]
    3bc4:	bl	2250 <newchunk>
    3bc8:	mov	r2, #84	; 0x54
    3bcc:	mov	r3, #61440	; 0xf000
    3bd0:	movt	r3, #65535	; 0xffff
    3bd4:	str	r2, [r0]
    3bd8:	mov	r2, r7
    3bdc:	str	r3, [r0, #12]
    3be0:	b	3be8 <sf_finish_parse+0xcc>
    3be4:	mov	r2, r3
    3be8:	ldr	r3, [r2, #16]
    3bec:	cmp	r3, #0
    3bf0:	bne	3be4 <sf_finish_parse+0xc8>
    3bf4:	str	r0, [r2, #16]
    3bf8:	mov	r0, #20
    3bfc:	bl	2250 <newchunk>
    3c00:	mov	r2, #21
    3c04:	mov	r3, #4096	; 0x1000
    3c08:	movt	r3, #32801	; 0x8021
    3c0c:	mov	r9, r0
    3c10:	str	r2, [r0]
    3c14:	mov	r2, r7
    3c18:	str	r3, [r0, #12]
    3c1c:	b	3c24 <sf_finish_parse+0x108>
    3c20:	mov	r2, r3
    3c24:	ldr	r3, [r2, #16]
    3c28:	cmp	r3, #0
    3c2c:	bne	3c20 <sf_finish_parse+0x104>
    3c30:	mov	r0, #20
    3c34:	str	r9, [r2, #16]
    3c38:	bl	2250 <newchunk>
    3c3c:	mov	r2, #32
    3c40:	mov	r3, #4
    3c44:	mov	ip, r0
    3c48:	str	r2, [r0]
    3c4c:	mov	r2, r7
    3c50:	str	r3, [r0, #12]
    3c54:	b	3c5c <sf_finish_parse+0x140>
    3c58:	mov	r2, r3
    3c5c:	ldr	r3, [r2, #16]
    3c60:	cmp	r3, #0
    3c64:	bne	3c58 <sf_finish_parse+0x13c>
    3c68:	mov	r0, #20
    3c6c:	str	ip, [r2, #16]
    3c70:	str	ip, [r9, #4]
    3c74:	bl	2250 <newchunk>
    3c78:	mov	r2, r0
    3c7c:	mov	r3, #5
    3c80:	mov	r0, #1
    3c84:	str	r3, [r2]
    3c88:	mov	r3, r7
    3c8c:	str	r0, [r2, #12]
    3c90:	b	3c98 <sf_finish_parse+0x17c>
    3c94:	mov	r3, r6
    3c98:	ldr	r6, [r3, #16]
    3c9c:	cmp	r6, #0
    3ca0:	bne	3c94 <sf_finish_parse+0x178>
    3ca4:	mov	r0, #20
    3ca8:	str	r2, [r3, #16]
    3cac:	str	r2, [sp, #4]
    3cb0:	bl	2250 <newchunk>
    3cb4:	mov	ip, r0
    3cb8:	mov	r3, #144	; 0x90
    3cbc:	ldr	r2, [sp, #4]
    3cc0:	mov	r0, r7
    3cc4:	str	r6, [ip]
    3cc8:	str	r3, [ip, #12]
    3ccc:	b	3cd4 <sf_finish_parse+0x1b8>
    3cd0:	mov	r0, r3
    3cd4:	ldr	r3, [r0, #16]
    3cd8:	cmp	r3, #0
    3cdc:	bne	3cd0 <sf_finish_parse+0x1b4>
    3ce0:	str	ip, [r0, #16]
    3ce4:	mov	r0, #20
    3ce8:	str	ip, [r9, #8]
    3cec:	str	r2, [sp, #4]
    3cf0:	bl	2250 <newchunk>
    3cf4:	mov	r3, #2
    3cf8:	mov	ip, r0
    3cfc:	ldr	r2, [sp, #4]
    3d00:	mov	r1, r7
    3d04:	str	r3, [r0]
    3d08:	ldr	r3, [sp]
    3d0c:	str	r3, [r0, #12]
    3d10:	b	3d18 <sf_finish_parse+0x1fc>
    3d14:	mov	r1, r3
    3d18:	ldr	r3, [r1, #16]
    3d1c:	cmp	r3, #0
    3d20:	bne	3d14 <sf_finish_parse+0x1f8>
    3d24:	mov	r0, #20
    3d28:	str	ip, [r1, #16]
    3d2c:	str	ip, [r2, #8]
    3d30:	bl	2250 <newchunk>
    3d34:	mov	r3, #7
    3d38:	mov	r2, r7
    3d3c:	str	r3, [r0]
    3d40:	b	3d48 <sf_finish_parse+0x22c>
    3d44:	mov	r2, r3
    3d48:	ldr	r3, [r2, #16]
    3d4c:	cmp	r3, #0
    3d50:	bne	3d44 <sf_finish_parse+0x228>
    3d54:	cmn	sl, #1
    3d58:	str	r0, [r2, #16]
    3d5c:	ldr	r9, [r8, #4]
    3d60:	beq	3f94 <sf_finish_parse+0x478>
    3d64:	mov	r2, #1
    3d68:	ldr	r3, [pc, #1904]	; 44e0 <sf_finish_parse+0x9c4>
    3d6c:	ldr	r3, [fp, r3]
    3d70:	str	r2, [r3]
    3d74:	mov	r0, #20
    3d78:	bl	2250 <newchunk>
    3d7c:	mov	r3, #135	; 0x87
    3d80:	mov	r2, r7
    3d84:	str	r3, [r0]
    3d88:	b	3d90 <sf_finish_parse+0x274>
    3d8c:	mov	r2, r3
    3d90:	ldr	r3, [r2, #16]
    3d94:	cmp	r3, #0
    3d98:	bne	3d8c <sf_finish_parse+0x270>
    3d9c:	str	r0, [r2, #16]
    3da0:	mov	r0, #20
    3da4:	bl	2250 <newchunk>
    3da8:	mov	r2, #4
    3dac:	mov	r3, #24
    3db0:	str	r2, [r0]
    3db4:	mov	r2, r7
    3db8:	str	r3, [r0, #12]
    3dbc:	b	3dc4 <sf_finish_parse+0x2a8>
    3dc0:	mov	r2, r3
    3dc4:	ldr	r3, [r2, #16]
    3dc8:	cmp	r3, #0
    3dcc:	bne	3dc0 <sf_finish_parse+0x2a4>
    3dd0:	str	r0, [r2, #16]
    3dd4:	mov	r0, #20
    3dd8:	bl	2250 <newchunk>
    3ddc:	mov	r2, #2
    3de0:	mov	r3, r7
    3de4:	str	r2, [r0]
    3de8:	str	sl, [r0, #12]
    3dec:	b	3df4 <sf_finish_parse+0x2d8>
    3df0:	mov	r3, r6
    3df4:	ldr	r6, [r3, #16]
    3df8:	cmp	r6, #0
    3dfc:	bne	3df0 <sf_finish_parse+0x2d4>
    3e00:	str	r0, [r3, #16]
    3e04:	mov	r0, #20
    3e08:	bl	2250 <newchunk>
    3e0c:	mov	r3, #80	; 0x50
    3e10:	mov	r2, r7
    3e14:	str	r3, [r0]
    3e18:	str	r6, [r0, #12]
    3e1c:	b	3e24 <sf_finish_parse+0x308>
    3e20:	mov	r2, r3
    3e24:	ldr	r3, [r2, #16]
    3e28:	cmp	r3, #0
    3e2c:	bne	3e20 <sf_finish_parse+0x304>
    3e30:	str	r0, [r2, #16]
    3e34:	mov	r0, #20
    3e38:	bl	2250 <newchunk>
    3e3c:	mov	r2, #69	; 0x45
    3e40:	mov	r3, #8
    3e44:	mov	r6, r0
    3e48:	str	r2, [r0]
    3e4c:	mov	r2, r7
    3e50:	str	r3, [r0, #12]
    3e54:	b	3e5c <sf_finish_parse+0x340>
    3e58:	mov	r2, r3
    3e5c:	ldr	r3, [r2, #16]
    3e60:	cmp	r3, #0
    3e64:	bne	3e58 <sf_finish_parse+0x33c>
    3e68:	mov	r0, #20
    3e6c:	str	r6, [r2, #16]
    3e70:	bl	2250 <newchunk>
    3e74:	mov	r2, #69	; 0x45
    3e78:	mov	r3, #4
    3e7c:	mov	fp, r0
    3e80:	str	r2, [r0]
    3e84:	mov	r2, r7
    3e88:	str	r0, [r6, #4]
    3e8c:	str	r3, [r0, #12]
    3e90:	b	3e98 <sf_finish_parse+0x37c>
    3e94:	mov	r2, r3
    3e98:	ldr	r3, [r2, #16]
    3e9c:	cmp	r3, #0
    3ea0:	bne	3e94 <sf_finish_parse+0x378>
    3ea4:	mov	r0, #20
    3ea8:	str	fp, [r2, #16]
    3eac:	str	r9, [r6, #8]
    3eb0:	str	r9, [fp, #4]
    3eb4:	bl	2250 <newchunk>
    3eb8:	mov	r2, #69	; 0x45
    3ebc:	mov	r3, #128	; 0x80
    3ec0:	mov	r6, r0
    3ec4:	str	r2, [r0]
    3ec8:	mov	r2, r7
    3ecc:	str	r0, [fp, #8]
    3ed0:	str	r3, [r0, #12]
    3ed4:	b	3edc <sf_finish_parse+0x3c0>
    3ed8:	mov	r2, r3
    3edc:	ldr	r3, [r2, #16]
    3ee0:	cmp	r3, #0
    3ee4:	bne	3ed8 <sf_finish_parse+0x3bc>
    3ee8:	mov	r0, #20
    3eec:	str	r6, [r2, #16]
    3ef0:	bl	2250 <newchunk>
    3ef4:	mov	r3, #96	; 0x60
    3ef8:	mov	r2, r7
    3efc:	str	r3, [r0]
    3f00:	str	r0, [r6, #4]
    3f04:	str	sl, [r0, #12]
    3f08:	b	3f10 <sf_finish_parse+0x3f4>
    3f0c:	mov	r2, r3
    3f10:	ldr	r3, [r2, #16]
    3f14:	cmp	r3, #0
    3f18:	bne	3f0c <sf_finish_parse+0x3f0>
    3f1c:	str	r0, [r2, #16]
    3f20:	mov	r0, #20
    3f24:	bl	2250 <newchunk>
    3f28:	mov	r2, #4
    3f2c:	mov	r3, #2
    3f30:	str	r2, [r0]
    3f34:	mov	r2, r7
    3f38:	str	r3, [r0, #12]
    3f3c:	b	3f44 <sf_finish_parse+0x428>
    3f40:	mov	r2, r3
    3f44:	ldr	r3, [r2, #16]
    3f48:	cmp	r3, #0
    3f4c:	bne	3f40 <sf_finish_parse+0x424>
    3f50:	str	r0, [r2, #16]
    3f54:	mov	r0, #20
    3f58:	bl	2250 <newchunk>
    3f5c:	mov	r3, #2
    3f60:	mov	r2, r7
    3f64:	str	r3, [r0]
    3f68:	str	sl, [r0, #12]
    3f6c:	b	3f74 <sf_finish_parse+0x458>
    3f70:	mov	r2, r3
    3f74:	ldr	r3, [r2, #16]
    3f78:	cmp	r3, #0
    3f7c:	bne	3f70 <sf_finish_parse+0x454>
    3f80:	cmp	r4, #127	; 0x7f
    3f84:	str	r0, [r2, #16]
    3f88:	beq	4218 <sf_finish_parse+0x6fc>
    3f8c:	str	r9, [r6, #8]
    3f90:	ldr	r9, [r8, #4]
    3f94:	mov	r2, r7
    3f98:	b	3fa0 <sf_finish_parse+0x484>
    3f9c:	mov	r2, r3
    3fa0:	ldr	r3, [r2, #16]
    3fa4:	cmp	r3, #0
    3fa8:	bne	3f9c <sf_finish_parse+0x480>
    3fac:	cmp	r4, #192	; 0xc0
    3fb0:	str	r9, [r2, #16]
    3fb4:	str	r7, [r8, #4]
    3fb8:	bne	4024 <sf_finish_parse+0x508>
    3fbc:	mov	r0, #20
    3fc0:	bl	2250 <newchunk>
    3fc4:	mov	r4, r0
    3fc8:	mov	r2, #32
    3fcc:	mov	r3, #4
    3fd0:	mov	r0, #208	; 0xd0
    3fd4:	str	r2, [r4]
    3fd8:	str	r3, [r4, #12]
    3fdc:	bl	2250 <newchunk>
    3fe0:	mov	r3, r0
    3fe4:	mov	ip, #21
    3fe8:	mov	r2, #1761607680	; 0x69000000
    3fec:	mov	r1, r5
    3ff0:	stmib	r0, {r4, ip}
    3ff4:	str	r2, [r0, #20]
    3ff8:	str	r0, [r3, #96]	; 0x60
    3ffc:	bl	3a88 <sf_gen_and>
    4000:	b	4024 <sf_finish_parse+0x508>
    4004:	cmp	r4, #119	; 0x77
    4008:	beq	44ac <sf_finish_parse+0x990>
    400c:	cmp	r4, #119	; 0x77
    4010:	ble	40ec <sf_finish_parse+0x5d0>
    4014:	cmp	r4, #163	; 0xa3
    4018:	beq	44ac <sf_finish_parse+0x990>
    401c:	cmp	r4, #192	; 0xc0
    4020:	beq	44ac <sf_finish_parse+0x990>
    4024:	ldr	r3, [pc, #1208]	; 44e4 <sf_finish_parse+0x9c8>
    4028:	mov	r0, #208	; 0xd0
    402c:	mov	r4, r5
    4030:	add	r3, pc, r3
    4034:	ldr	r6, [r3, #896]	; 0x380
    4038:	bl	2250 <newchunk>
    403c:	mov	r3, #6
    4040:	str	r3, [r0, #8]
    4044:	str	r6, [r0, #20]
    4048:	str	r0, [r0, #96]	; 0x60
    404c:	ldr	r3, [r4, #44]	; 0x2c
    4050:	cmp	r3, #0
    4054:	ldreq	r3, [r4, #60]	; 0x3c
    4058:	streq	r0, [r4, #60]	; 0x3c
    405c:	ldrne	r3, [r4, #84]	; 0x54
    4060:	strne	r0, [r4, #84]	; 0x54
    4064:	cmp	r3, #0
    4068:	mov	r4, r3
    406c:	bne	404c <sf_finish_parse+0x530>
    4070:	ldr	r3, [r5, #44]	; 0x2c
    4074:	mov	r0, #208	; 0xd0
    4078:	clz	r3, r3
    407c:	lsr	r3, r3, #5
    4080:	str	r3, [r5, #44]	; 0x2c
    4084:	bl	2250 <newchunk>
    4088:	mov	r2, #6
    408c:	mov	r3, r5
    4090:	str	r2, [r0, #8]
    4094:	str	r4, [r0, #20]
    4098:	str	r0, [r0, #96]	; 0x60
    409c:	ldr	r2, [r3, #44]	; 0x2c
    40a0:	cmp	r2, #0
    40a4:	ldreq	r2, [r3, #60]	; 0x3c
    40a8:	streq	r0, [r3, #60]	; 0x3c
    40ac:	ldrne	r2, [r3, #84]	; 0x54
    40b0:	strne	r0, [r3, #84]	; 0x54
    40b4:	cmp	r2, #0
    40b8:	mov	r3, r2
    40bc:	bne	409c <sf_finish_parse+0x580>
    40c0:	ldr	r3, [pc, #1056]	; 44e8 <sf_finish_parse+0x9cc>
    40c4:	ldr	r2, [r5, #96]	; 0x60
    40c8:	add	r3, pc, r3
    40cc:	str	r2, [r3, #884]	; 0x374
    40d0:	add	sp, sp, #12
    40d4:	ldrd	r4, [sp]
    40d8:	ldrd	r6, [sp, #8]
    40dc:	ldrd	r8, [sp, #16]
    40e0:	ldrd	sl, [sp, #24]
    40e4:	add	sp, sp, #32
    40e8:	pop	{pc}		; (ldr pc, [sp], #4)
    40ec:	cmp	r4, #105	; 0x69
    40f0:	beq	44ac <sf_finish_parse+0x990>
    40f4:	cmp	r4, #192	; 0xc0
    40f8:	beq	3fbc <sf_finish_parse+0x4a0>
    40fc:	b	4024 <sf_finish_parse+0x508>
    4100:	ldr	r6, [r3, #784]	; 0x310
    4104:	ldr	sl, [r3, #868]	; 0x364
    4108:	cmn	r6, #1
    410c:	beq	41d4 <sf_finish_parse+0x6b8>
    4110:	mov	r0, #20
    4114:	bl	2250 <newchunk>
    4118:	mov	r7, r0
    411c:	mov	r2, #32
    4120:	mov	r3, #4
    4124:	mov	r0, #20
    4128:	str	r2, [r7]
    412c:	str	r3, [r7, #12]
    4130:	bl	2250 <newchunk>
    4134:	mov	r3, #2
    4138:	mov	r2, r7
    413c:	str	r3, [r0]
    4140:	str	r6, [r0, #12]
    4144:	b	414c <sf_finish_parse+0x630>
    4148:	mov	r2, r3
    414c:	ldr	r3, [r2, #16]
    4150:	cmp	r3, #0
    4154:	bne	4148 <sf_finish_parse+0x62c>
    4158:	str	r0, [r2, #16]
    415c:	mov	r0, #20
    4160:	bl	2250 <newchunk>
    4164:	mov	r3, #7
    4168:	mov	r2, r7
    416c:	str	r3, [r0]
    4170:	b	4178 <sf_finish_parse+0x65c>
    4174:	mov	r2, r3
    4178:	ldr	r3, [r2, #16]
    417c:	cmp	r3, #0
    4180:	bne	4174 <sf_finish_parse+0x658>
    4184:	b	3d54 <sf_finish_parse+0x238>
    4188:	bl	2368 <gen_load_ppi_llprefixlen>
    418c:	mov	r7, r0
    4190:	ldr	r3, [pc, #852]	; 44ec <sf_finish_parse+0x9d0>
    4194:	add	r3, pc, r3
    4198:	ldr	sl, [r3, #868]	; 0x364
    419c:	cmn	sl, #1
    41a0:	beq	449c <sf_finish_parse+0x980>
    41a4:	ldr	r3, [pc, #820]	; 44e0 <sf_finish_parse+0x9c4>
    41a8:	mov	r2, #1
    41ac:	cmp	r7, #0
    41b0:	ldr	r9, [r8, #4]
    41b4:	ldr	r3, [fp, r3]
    41b8:	str	r2, [r3]
    41bc:	bne	3d74 <sf_finish_parse+0x258>
    41c0:	b	41f0 <sf_finish_parse+0x6d4>
    41c4:	cmn	sl, #1
    41c8:	beq	4024 <sf_finish_parse+0x508>
    41cc:	ldr	r9, [r8, #4]
    41d0:	b	41e8 <sf_finish_parse+0x6cc>
    41d4:	cmn	sl, #1
    41d8:	beq	4024 <sf_finish_parse+0x508>
    41dc:	ldr	r3, [pc, #764]	; 44e0 <sf_finish_parse+0x9c4>
    41e0:	ldr	r9, [r8, #4]
    41e4:	ldr	r3, [fp, r3]
    41e8:	mov	r2, #1
    41ec:	str	r2, [r3]
    41f0:	mov	r0, #20
    41f4:	bl	2250 <newchunk>
    41f8:	ldr	r3, [pc, #752]	; 44f0 <sf_finish_parse+0x9d4>
    41fc:	mov	r2, #1
    4200:	mov	r7, r0
    4204:	str	r2, [r0]
    4208:	add	r3, pc, r3
    420c:	ldr	r3, [r3, #860]	; 0x35c
    4210:	str	r3, [r0, #12]
    4214:	b	3d74 <sf_finish_parse+0x258>
    4218:	mov	r0, #20
    421c:	bl	2250 <newchunk>
    4220:	mov	r2, #32
    4224:	mov	r3, #4
    4228:	str	r2, [r0]
    422c:	mov	r2, r7
    4230:	str	r0, [r6, #8]
    4234:	str	r3, [r0, #12]
    4238:	b	4240 <sf_finish_parse+0x724>
    423c:	mov	r2, r3
    4240:	ldr	r3, [r2, #16]
    4244:	cmp	r3, #0
    4248:	bne	423c <sf_finish_parse+0x720>
    424c:	str	r0, [r2, #16]
    4250:	mov	r0, #20
    4254:	bl	2250 <newchunk>
    4258:	mov	r2, #69	; 0x45
    425c:	mov	r3, #33554432	; 0x2000000
    4260:	mov	fp, r0
    4264:	str	r2, [r0]
    4268:	mov	r2, r7
    426c:	str	r3, [r0, #12]
    4270:	b	4278 <sf_finish_parse+0x75c>
    4274:	mov	r2, r3
    4278:	ldr	r3, [r2, #16]
    427c:	cmp	r3, #0
    4280:	bne	4274 <sf_finish_parse+0x758>
    4284:	mov	r0, #20
    4288:	str	fp, [r2, #16]
    428c:	str	r9, [fp, #8]
    4290:	bl	2250 <newchunk>
    4294:	mov	r2, #69	; 0x45
    4298:	mov	r3, #16777216	; 0x1000000
    429c:	mov	r6, r0
    42a0:	str	r2, [r0]
    42a4:	mov	r2, r7
    42a8:	str	r0, [fp, #4]
    42ac:	str	r3, [r0, #12]
    42b0:	b	42b8 <sf_finish_parse+0x79c>
    42b4:	mov	r2, r3
    42b8:	ldr	r3, [r2, #16]
    42bc:	cmp	r3, #0
    42c0:	bne	42b4 <sf_finish_parse+0x798>
    42c4:	mov	r0, #20
    42c8:	str	r6, [r2, #16]
    42cc:	bl	2250 <newchunk>
    42d0:	mov	r2, #48	; 0x30
    42d4:	mov	r3, #16
    42d8:	str	r2, [r0]
    42dc:	mov	r2, r7
    42e0:	str	r0, [r6, #4]
    42e4:	str	r3, [r0, #12]
    42e8:	b	42f0 <sf_finish_parse+0x7d4>
    42ec:	mov	r2, r3
    42f0:	ldr	r3, [r2, #16]
    42f4:	cmp	r3, #0
    42f8:	bne	42ec <sf_finish_parse+0x7d0>
    42fc:	str	r0, [r2, #16]
    4300:	mov	r0, #20
    4304:	bl	2250 <newchunk>
    4308:	mov	r2, #69	; 0x45
    430c:	mov	r3, #32
    4310:	mov	fp, r0
    4314:	str	r2, [r0]
    4318:	mov	r2, r7
    431c:	str	r3, [r0, #12]
    4320:	b	4328 <sf_finish_parse+0x80c>
    4324:	mov	r2, r3
    4328:	ldr	r3, [r2, #16]
    432c:	cmp	r3, #0
    4330:	bne	4324 <sf_finish_parse+0x808>
    4334:	mov	r0, #20
    4338:	str	fp, [r2, #16]
    433c:	bl	2250 <newchunk>
    4340:	mov	r2, #48	; 0x30
    4344:	mov	r3, #8
    4348:	str	r2, [r0]
    434c:	mov	r2, r7
    4350:	str	r0, [r6, #8]
    4354:	str	r3, [r0, #12]
    4358:	b	4360 <sf_finish_parse+0x844>
    435c:	mov	r2, r3
    4360:	ldr	r3, [r2, #16]
    4364:	cmp	r3, #0
    4368:	bne	435c <sf_finish_parse+0x840>
    436c:	str	r0, [r2, #16]
    4370:	mov	r0, #20
    4374:	bl	2250 <newchunk>
    4378:	mov	r2, #69	; 0x45
    437c:	mov	r3, #32
    4380:	mov	r6, r0
    4384:	str	r2, [r0]
    4388:	mov	r2, r7
    438c:	str	r3, [r0, #12]
    4390:	b	4398 <sf_finish_parse+0x87c>
    4394:	mov	r2, r3
    4398:	ldr	r3, [r2, #16]
    439c:	cmp	r3, #0
    43a0:	bne	4394 <sf_finish_parse+0x878>
    43a4:	mov	r0, #20
    43a8:	str	r6, [r2, #16]
    43ac:	bl	2250 <newchunk>
    43b0:	mov	r3, #96	; 0x60
    43b4:	mov	r2, r0
    43b8:	mov	r1, r7
    43bc:	str	r3, [r0]
    43c0:	str	sl, [r0, #12]
    43c4:	b	43cc <sf_finish_parse+0x8b0>
    43c8:	mov	r1, r3
    43cc:	ldr	r3, [r1, #16]
    43d0:	cmp	r3, #0
    43d4:	bne	43c8 <sf_finish_parse+0x8ac>
    43d8:	mov	r0, #20
    43dc:	str	r2, [r1, #16]
    43e0:	str	r2, [sp]
    43e4:	bl	2250 <newchunk>
    43e8:	mov	r1, #4
    43ec:	mov	r3, #3
    43f0:	ldr	r2, [sp]
    43f4:	str	r1, [r0]
    43f8:	mov	r1, r7
    43fc:	str	r3, [r0, #12]
    4400:	b	4408 <sf_finish_parse+0x8ec>
    4404:	mov	r1, r3
    4408:	ldr	r3, [r1, #16]
    440c:	cmp	r3, #0
    4410:	bne	4404 <sf_finish_parse+0x8e8>
    4414:	str	r0, [r1, #16]
    4418:	mov	r0, #20
    441c:	str	r2, [sp]
    4420:	bl	2250 <newchunk>
    4424:	mov	r1, #84	; 0x54
    4428:	mvn	r3, #3
    442c:	ldr	r2, [sp]
    4430:	str	r1, [r0]
    4434:	mov	r1, r7
    4438:	str	r3, [r0, #12]
    443c:	b	4444 <sf_finish_parse+0x928>
    4440:	mov	r1, r3
    4444:	ldr	r3, [r1, #16]
    4448:	cmp	r3, #0
    444c:	bne	4440 <sf_finish_parse+0x924>
    4450:	str	r0, [r1, #16]
    4454:	mov	r0, #20
    4458:	str	r2, [sp]
    445c:	bl	2250 <newchunk>
    4460:	mov	r3, #2
    4464:	mov	r1, r7
    4468:	ldr	r2, [sp]
    446c:	str	r3, [r0]
    4470:	str	sl, [r0, #12]
    4474:	b	447c <sf_finish_parse+0x960>
    4478:	mov	r1, r3
    447c:	ldr	r3, [r1, #16]
    4480:	cmp	r3, #0
    4484:	bne	4478 <sf_finish_parse+0x95c>
    4488:	str	r0, [r1, #16]
    448c:	stmib	fp, {r2, r9}
    4490:	stmib	r6, {r2, r9}
    4494:	ldr	r9, [r8, #4]
    4498:	b	3f94 <sf_finish_parse+0x478>
    449c:	cmp	r7, #0
    44a0:	beq	40f4 <sf_finish_parse+0x5d8>
    44a4:	ldr	r9, [r8, #4]
    44a8:	b	3f94 <sf_finish_parse+0x478>
    44ac:	ldr	r3, [pc, #64]	; 44f4 <sf_finish_parse+0x9d8>
    44b0:	add	r3, pc, r3
    44b4:	ldr	sl, [r3, #868]	; 0x364
    44b8:	cmn	sl, #1
    44bc:	beq	40f4 <sf_finish_parse+0x5d8>
    44c0:	ldr	r3, [pc, #24]	; 44e0 <sf_finish_parse+0x9c4>
    44c4:	mov	r2, #1
    44c8:	ldr	r9, [r8, #4]
    44cc:	ldr	r3, [fp, r3]
    44d0:	str	r2, [r3]
    44d4:	b	41f0 <sf_finish_parse+0x6d4>
    44d8:	.word	0x0002d82c
    44dc:	.word	0x0002d4a8
    44e0:	.word	0x000000fc
    44e4:	.word	0x0002d330
    44e8:	.word	0x0002d298
    44ec:	.word	0x0002d1cc
    44f0:	.word	0x0002d158
    44f4:	.word	0x0002ceb0

000044f8 <gen_bcmp>:
    44f8:	strd	r4, [sp, #-36]!	; 0xffffffdc
    44fc:	cmp	r2, #3
    4500:	strd	r6, [sp, #8]
    4504:	strd	r8, [sp, #16]
    4508:	mov	r9, r2
    450c:	mov	r8, r0
    4510:	strd	sl, [sp, #24]
    4514:	mov	sl, r3
    4518:	str	lr, [sp, #32]
    451c:	sub	sp, sp, #12
    4520:	str	r1, [sp, #4]
    4524:	bls	463c <gen_bcmp+0x144>
    4528:	sub	r4, r2, #4
    452c:	sub	r7, r3, #8
    4530:	add	r7, r7, r2
    4534:	bic	r3, r4, #3
    4538:	sub	r7, r7, r3
    453c:	add	r4, sl, r4
    4540:	mov	r6, #0
    4544:	sub	fp, r1, sl
    4548:	mov	r1, r4
    454c:	mov	r2, #0
    4550:	ldr	r3, [r1], fp
    4554:	mov	r0, r8
    4558:	sub	r4, r4, #4
    455c:	rev	r3, r3
    4560:	bl	2c2c <gen_cmp>
    4564:	mov	r5, r0
    4568:	cmp	r6, #0
    456c:	mov	r0, r6
    4570:	mov	r1, r5
    4574:	beq	457c <gen_bcmp+0x84>
    4578:	bl	3a88 <sf_gen_and>
    457c:	cmp	r4, r7
    4580:	mov	r6, r5
    4584:	bne	4548 <gen_bcmp+0x50>
    4588:	tst	r9, #2
    458c:	and	r1, r9, #3
    4590:	moveq	r4, r5
    4594:	moveq	r6, r1
    4598:	beq	45dc <gen_bcmp+0xe4>
    459c:	ldr	r3, [sp, #4]
    45a0:	sub	r6, r1, #2
    45a4:	mov	r0, r8
    45a8:	sub	r2, r3, #2
    45ac:	ldrh	r3, [sl, r6]
    45b0:	add	r1, r2, r1
    45b4:	mov	r2, #8
    45b8:	rev16	r3, r3
    45bc:	uxth	r3, r3
    45c0:	bl	2c2c <gen_cmp>
    45c4:	cmp	r5, #0
    45c8:	mov	r4, r0
    45cc:	beq	45dc <gen_bcmp+0xe4>
    45d0:	mov	r0, r5
    45d4:	mov	r1, r4
    45d8:	bl	3a88 <sf_gen_and>
    45dc:	cmp	r6, #0
    45e0:	bne	4604 <gen_bcmp+0x10c>
    45e4:	mov	r0, r4
    45e8:	add	sp, sp, #12
    45ec:	ldrd	r4, [sp]
    45f0:	ldrd	r6, [sp, #8]
    45f4:	ldrd	r8, [sp, #16]
    45f8:	ldrd	sl, [sp, #24]
    45fc:	add	sp, sp, #32
    4600:	pop	{pc}		; (ldr pc, [sp], #4)
    4604:	ldrb	r3, [sl]
    4608:	mov	r0, r8
    460c:	mov	r2, #16
    4610:	ldr	r1, [sp, #4]
    4614:	bl	2c2c <gen_cmp>
    4618:	cmp	r4, #0
    461c:	mov	r5, r0
    4620:	moveq	r4, r0
    4624:	beq	45e4 <gen_bcmp+0xec>
    4628:	mov	r0, r4
    462c:	mov	r1, r5
    4630:	bl	3a88 <sf_gen_and>
    4634:	mov	r4, r5
    4638:	b	45e4 <gen_bcmp+0xec>
    463c:	cmp	r2, #1
    4640:	moveq	r4, #0
    4644:	beq	4604 <gen_bcmp+0x10c>
    4648:	ldr	r3, [sp, #4]
    464c:	sub	r6, r9, #2
    4650:	mov	r2, #8
    4654:	sub	r1, r3, #2
    4658:	ldrh	r3, [sl, r6]
    465c:	add	r1, r1, r9
    4660:	rev16	r3, r3
    4664:	uxth	r3, r3
    4668:	bl	2c2c <gen_cmp>
    466c:	mov	r4, r0
    4670:	b	45dc <gen_bcmp+0xe4>

00004674 <gen_snap>:
    4674:	mov	r2, #3
    4678:	movw	r3, #43690	; 0xaaaa
    467c:	movt	r3, #65535	; 0xffff
    4680:	str	r4, [sp, #-8]!
    4684:	lsr	r4, r0, #16
    4688:	str	lr, [sp, #4]
    468c:	sub	sp, sp, #8
    4690:	mov	ip, #0
    4694:	rev16	lr, r1
    4698:	mov	r1, ip
    469c:	strh	r3, [sp]
    46a0:	mov	r3, sp
    46a4:	strb	r2, [sp, #2]
    46a8:	mov	r2, #8
    46ac:	strb	r4, [sp, #3]
    46b0:	strb	r0, [sp, #5]
    46b4:	mov	r0, #2
    46b8:	strb	ip, [sp, #4]
    46bc:	strh	lr, [sp, #6]
    46c0:	bl	44f8 <gen_bcmp>
    46c4:	add	sp, sp, #8
    46c8:	ldr	r4, [sp]
    46cc:	add	sp, sp, #4
    46d0:	pop	{pc}		; (ldr pc, [sp], #4)

000046d4 <gen_llc_linktype>:
    46d4:	cmp	r0, #240	; 0xf0
    46d8:	beq	4728 <gen_llc_linktype+0x54>
    46dc:	bgt	4704 <gen_llc_linktype+0x30>
    46e0:	cmp	r0, #6
    46e4:	beq	4728 <gen_llc_linktype+0x54>
    46e8:	cmp	r0, #224	; 0xe0
    46ec:	bne	473c <gen_llc_linktype+0x68>
    46f0:	mov	r3, r0
    46f4:	mov	r2, #16
    46f8:	mov	r1, #0
    46fc:	mov	r0, #2
    4700:	b	2c2c <gen_cmp>
    4704:	cmp	r0, #254	; 0xfe
    4708:	beq	4728 <gen_llc_linktype+0x54>
    470c:	movw	r3, #32923	; 0x809b
    4710:	cmp	r0, r3
    4714:	bne	473c <gen_llc_linktype+0x68>
    4718:	mov	r1, r0
    471c:	mov	r0, #7
    4720:	movt	r0, #8
    4724:	b	4674 <gen_snap>
    4728:	orr	r3, r0, r0, lsl #8
    472c:	mov	r2, #8
    4730:	mov	r1, #0
    4734:	mov	r0, #2
    4738:	b	2c2c <gen_cmp>
    473c:	movw	r3, #1500	; 0x5dc
    4740:	cmp	r0, r3
    4744:	mov	r3, r0
    4748:	bgt	475c <gen_llc_linktype+0x88>
    474c:	mov	r2, #16
    4750:	mov	r1, #0
    4754:	mov	r0, #2
    4758:	b	2c2c <gen_cmp>
    475c:	mov	r2, #8
    4760:	mov	r1, #6
    4764:	mov	r0, #2
    4768:	b	2c2c <gen_cmp>

0000476c <gen_portrangeatom>:
    476c:	cmp	r1, r2
    4770:	mov	ip, r2
    4774:	strd	r4, [sp, #-16]!
    4778:	movle	r3, r1
    477c:	movgt	r3, r2
    4780:	str	r6, [sp, #8]
    4784:	mov	r4, r1
    4788:	mov	r5, r0
    478c:	str	lr, [sp, #12]
    4790:	mov	r1, r0
    4794:	sub	sp, sp, #16
    4798:	mov	r2, #8
    479c:	mov	r0, #5
    47a0:	movle	r4, ip
    47a4:	bl	2c74 <gen_cmp_ge>
    47a8:	mov	r6, r0
    47ac:	mov	ip, #32
    47b0:	mov	r0, #1
    47b4:	mov	r1, r5
    47b8:	mvn	r3, #0
    47bc:	mov	r2, #8
    47c0:	str	ip, [sp]
    47c4:	stmib	sp, {r0, r4}
    47c8:	mov	r0, #5
    47cc:	bl	2b74 <gen_ncmp>
    47d0:	mov	r4, r0
    47d4:	mov	r1, r0
    47d8:	mov	r0, r6
    47dc:	bl	3a88 <sf_gen_and>
    47e0:	mov	r0, r4
    47e4:	add	sp, sp, #16
    47e8:	ldrd	r4, [sp]
    47ec:	ldr	r6, [sp, #8]
    47f0:	add	sp, sp, #12
    47f4:	pop	{pc}		; (ldr pc, [sp], #4)

000047f8 <gen_portrangeatom6>:
    47f8:	cmp	r1, r2
    47fc:	mov	ip, r2
    4800:	strd	r4, [sp, #-16]!
    4804:	movle	r3, r1
    4808:	movgt	r3, r2
    480c:	str	r6, [sp, #8]
    4810:	mov	r4, r1
    4814:	mov	r5, r0
    4818:	str	lr, [sp, #12]
    481c:	mov	r1, r0
    4820:	sub	sp, sp, #16
    4824:	mov	r2, #8
    4828:	mov	r0, #6
    482c:	movle	r4, ip
    4830:	bl	2c74 <gen_cmp_ge>
    4834:	mov	r6, r0
    4838:	mov	ip, #32
    483c:	mov	r0, #1
    4840:	mov	r1, r5
    4844:	mvn	r3, #0
    4848:	mov	r2, #8
    484c:	str	ip, [sp]
    4850:	stmib	sp, {r0, r4}
    4854:	mov	r0, #6
    4858:	bl	2b74 <gen_ncmp>
    485c:	mov	r4, r0
    4860:	mov	r1, r0
    4864:	mov	r0, r6
    4868:	bl	3a88 <sf_gen_and>
    486c:	mov	r0, r4
    4870:	add	sp, sp, #16
    4874:	ldrd	r4, [sp]
    4878:	ldr	r6, [sp, #8]
    487c:	add	sp, sp, #12
    4880:	pop	{pc}		; (ldr pc, [sp], #4)

00004884 <sf_gen_or>:
    4884:	ldr	r2, [r0, #44]	; 0x2c
    4888:	mov	r3, r0
    488c:	clz	r2, r2
    4890:	lsr	r2, r2, #5
    4894:	str	r2, [r0, #44]	; 0x2c
    4898:	ldr	ip, [r1, #96]	; 0x60
    489c:	b	48a4 <sf_gen_or+0x20>
    48a0:	ldr	r2, [r2, #44]	; 0x2c
    48a4:	cmp	r2, #0
    48a8:	ldreq	r2, [r3, #60]	; 0x3c
    48ac:	streq	ip, [r3, #60]	; 0x3c
    48b0:	ldrne	r2, [r3, #84]	; 0x54
    48b4:	strne	ip, [r3, #84]	; 0x54
    48b8:	cmp	r2, #0
    48bc:	mov	r3, r2
    48c0:	bne	48a0 <sf_gen_or+0x1c>
    48c4:	ldr	r2, [r0, #44]	; 0x2c
    48c8:	mov	r3, r1
    48cc:	clz	r2, r2
    48d0:	lsr	r2, r2, #5
    48d4:	str	r2, [r0, #44]	; 0x2c
    48d8:	ldr	ip, [r3, #44]	; 0x2c
    48dc:	add	r2, r3, #84	; 0x54
    48e0:	cmp	ip, #0
    48e4:	addeq	r2, r3, #60	; 0x3c
    48e8:	ldr	r3, [r2]
    48ec:	cmp	r3, #0
    48f0:	bne	48d8 <sf_gen_or+0x54>
    48f4:	str	r0, [r2]
    48f8:	ldr	r3, [r0, #96]	; 0x60
    48fc:	str	r3, [r1, #96]	; 0x60
    4900:	bx	lr

00004904 <gen_fhostop>:
    4904:	strd	r4, [sp, #-16]!
    4908:	mov	r4, r0
    490c:	str	r6, [sp, #8]
    4910:	str	lr, [sp, #12]
    4914:	cmp	r1, #4
    4918:	addls	pc, pc, r1, lsl #2
    491c:	b	49d4 <gen_fhostop+0xd0>
    4920:	b	49a8 <gen_fhostop+0xa4>
    4924:	b	4994 <gen_fhostop+0x90>
    4928:	b	4970 <gen_fhostop+0x6c>
    492c:	b	49a8 <gen_fhostop+0xa4>
    4930:	b	4934 <gen_fhostop+0x30>
    4934:	mov	r1, #1
    4938:	bl	4904 <gen_fhostop>
    493c:	mov	r5, r0
    4940:	mov	r1, #2
    4944:	mov	r0, r4
    4948:	bl	4904 <gen_fhostop>
    494c:	mov	r4, r0
    4950:	mov	r1, r0
    4954:	mov	r0, r5
    4958:	bl	3a88 <sf_gen_and>
    495c:	mov	r0, r4
    4960:	ldrd	r4, [sp]
    4964:	ldr	r6, [sp, #8]
    4968:	add	sp, sp, #12
    496c:	pop	{pc}		; (ldr pc, [sp], #4)
    4970:	mov	r1, #1
    4974:	mov	r3, r0
    4978:	mov	r2, #6
    497c:	mov	r0, r1
    4980:	ldrd	r4, [sp]
    4984:	ldr	r6, [sp, #8]
    4988:	ldr	lr, [sp, #12]
    498c:	add	sp, sp, #16
    4990:	b	44f8 <gen_bcmp>
    4994:	mov	r3, r0
    4998:	mov	r2, #6
    499c:	mov	r1, #7
    49a0:	mov	r0, #1
    49a4:	b	4980 <gen_fhostop+0x7c>
    49a8:	mov	r1, #1
    49ac:	bl	4904 <gen_fhostop>
    49b0:	mov	r5, r0
    49b4:	mov	r1, #2
    49b8:	mov	r0, r4
    49bc:	bl	4904 <gen_fhostop>
    49c0:	mov	r4, r0
    49c4:	mov	r1, r0
    49c8:	mov	r0, r5
    49cc:	bl	4884 <sf_gen_or>
    49d0:	b	495c <gen_fhostop+0x58>
    49d4:	bl	ebc <abort@plt>

000049d8 <gen_thostop>:
    49d8:	strd	r4, [sp, #-16]!
    49dc:	mov	r4, r0
    49e0:	str	r6, [sp, #8]
    49e4:	str	lr, [sp, #12]
    49e8:	cmp	r1, #4
    49ec:	addls	pc, pc, r1, lsl #2
    49f0:	b	4aa4 <gen_thostop+0xcc>
    49f4:	b	4a78 <gen_thostop+0xa0>
    49f8:	b	4a68 <gen_thostop+0x90>
    49fc:	b	4a44 <gen_thostop+0x6c>
    4a00:	b	4a78 <gen_thostop+0xa0>
    4a04:	b	4a08 <gen_thostop+0x30>
    4a08:	mov	r1, #1
    4a0c:	bl	49d8 <gen_thostop>
    4a10:	mov	r5, r0
    4a14:	mov	r1, #2
    4a18:	mov	r0, r4
    4a1c:	bl	49d8 <gen_thostop>
    4a20:	mov	r4, r0
    4a24:	mov	r1, r0
    4a28:	mov	r0, r5
    4a2c:	bl	3a88 <sf_gen_and>
    4a30:	mov	r0, r4
    4a34:	ldrd	r4, [sp]
    4a38:	ldr	r6, [sp, #8]
    4a3c:	add	sp, sp, #12
    4a40:	pop	{pc}		; (ldr pc, [sp], #4)
    4a44:	mov	r3, r0
    4a48:	mov	r2, #6
    4a4c:	mov	r1, #2
    4a50:	mov	r0, #1
    4a54:	ldrd	r4, [sp]
    4a58:	ldr	r6, [sp, #8]
    4a5c:	ldr	lr, [sp, #12]
    4a60:	add	sp, sp, #16
    4a64:	b	44f8 <gen_bcmp>
    4a68:	mov	r3, r0
    4a6c:	mov	r2, #6
    4a70:	mov	r1, #8
    4a74:	b	4a50 <gen_thostop+0x78>
    4a78:	mov	r1, #1
    4a7c:	bl	49d8 <gen_thostop>
    4a80:	mov	r5, r0
    4a84:	mov	r1, #2
    4a88:	mov	r0, r4
    4a8c:	bl	49d8 <gen_thostop>
    4a90:	mov	r4, r0
    4a94:	mov	r1, r0
    4a98:	mov	r0, r5
    4a9c:	bl	4884 <sf_gen_or>
    4aa0:	b	4a30 <gen_thostop+0x58>
    4aa4:	bl	ebc <abort@plt>

00004aa8 <gen_ipfchostop>:
    4aa8:	strd	r4, [sp, #-16]!
    4aac:	mov	r4, r0
    4ab0:	str	r6, [sp, #8]
    4ab4:	str	lr, [sp, #12]
    4ab8:	cmp	r1, #4
    4abc:	addls	pc, pc, r1, lsl #2
    4ac0:	b	4b74 <gen_ipfchostop+0xcc>
    4ac4:	b	4b48 <gen_ipfchostop+0xa0>
    4ac8:	b	4b38 <gen_ipfchostop+0x90>
    4acc:	b	4b14 <gen_ipfchostop+0x6c>
    4ad0:	b	4b48 <gen_ipfchostop+0xa0>
    4ad4:	b	4ad8 <gen_ipfchostop+0x30>
    4ad8:	mov	r1, #1
    4adc:	bl	4aa8 <gen_ipfchostop>
    4ae0:	mov	r5, r0
    4ae4:	mov	r1, #2
    4ae8:	mov	r0, r4
    4aec:	bl	4aa8 <gen_ipfchostop>
    4af0:	mov	r4, r0
    4af4:	mov	r1, r0
    4af8:	mov	r0, r5
    4afc:	bl	3a88 <sf_gen_and>
    4b00:	mov	r0, r4
    4b04:	ldrd	r4, [sp]
    4b08:	ldr	r6, [sp, #8]
    4b0c:	add	sp, sp, #12
    4b10:	pop	{pc}		; (ldr pc, [sp], #4)
    4b14:	mov	r3, r0
    4b18:	mov	r2, #6
    4b1c:	mov	r1, #2
    4b20:	mov	r0, #1
    4b24:	ldrd	r4, [sp]
    4b28:	ldr	r6, [sp, #8]
    4b2c:	ldr	lr, [sp, #12]
    4b30:	add	sp, sp, #16
    4b34:	b	44f8 <gen_bcmp>
    4b38:	mov	r3, r0
    4b3c:	mov	r2, #6
    4b40:	mov	r1, #10
    4b44:	b	4b20 <gen_ipfchostop+0x78>
    4b48:	mov	r1, #1
    4b4c:	bl	4aa8 <gen_ipfchostop>
    4b50:	mov	r5, r0
    4b54:	mov	r1, #2
    4b58:	mov	r0, r4
    4b5c:	bl	4aa8 <gen_ipfchostop>
    4b60:	mov	r4, r0
    4b64:	mov	r1, r0
    4b68:	mov	r0, r5
    4b6c:	bl	4884 <sf_gen_or>
    4b70:	b	4b00 <gen_ipfchostop+0x58>
    4b74:	bl	ebc <abort@plt>

00004b78 <gen_ehostop>:
    4b78:	strd	r4, [sp, #-16]!
    4b7c:	mov	r4, r0
    4b80:	str	r6, [sp, #8]
    4b84:	str	lr, [sp, #12]
    4b88:	cmp	r1, #4
    4b8c:	addls	pc, pc, r1, lsl #2
    4b90:	b	4c5c <gen_ehostop+0xe4>
    4b94:	b	4c30 <gen_ehostop+0xb8>
    4b98:	b	4c10 <gen_ehostop+0x98>
    4b9c:	b	4be4 <gen_ehostop+0x6c>
    4ba0:	b	4c30 <gen_ehostop+0xb8>
    4ba4:	b	4ba8 <gen_ehostop+0x30>
    4ba8:	mov	r1, #1
    4bac:	bl	4b78 <gen_ehostop>
    4bb0:	mov	r5, r0
    4bb4:	mov	r1, #2
    4bb8:	mov	r0, r4
    4bbc:	bl	4b78 <gen_ehostop>
    4bc0:	mov	r4, r0
    4bc4:	mov	r1, r0
    4bc8:	mov	r0, r5
    4bcc:	bl	3a88 <sf_gen_and>
    4bd0:	mov	r0, r4
    4bd4:	ldrd	r4, [sp]
    4bd8:	ldr	r6, [sp, #8]
    4bdc:	add	sp, sp, #12
    4be0:	pop	{pc}		; (ldr pc, [sp], #4)
    4be4:	ldr	r1, [pc, #116]	; 4c60 <gen_ehostop+0xe8>
    4be8:	mov	r3, r0
    4bec:	mov	r2, #6
    4bf0:	mov	r0, #1
    4bf4:	add	r1, pc, r1
    4bf8:	ldr	r1, [r1, #900]	; 0x384
    4bfc:	ldrd	r4, [sp]
    4c00:	ldr	r6, [sp, #8]
    4c04:	ldr	lr, [sp, #12]
    4c08:	add	sp, sp, #16
    4c0c:	b	44f8 <gen_bcmp>
    4c10:	ldr	r1, [pc, #76]	; 4c64 <gen_ehostop+0xec>
    4c14:	mov	r2, #6
    4c18:	mov	r3, r0
    4c1c:	mov	r0, #1
    4c20:	add	r1, pc, r1
    4c24:	ldr	r1, [r1, #900]	; 0x384
    4c28:	add	r1, r1, r2
    4c2c:	b	4bfc <gen_ehostop+0x84>
    4c30:	mov	r1, #1
    4c34:	bl	4b78 <gen_ehostop>
    4c38:	mov	r5, r0
    4c3c:	mov	r1, #2
    4c40:	mov	r0, r4
    4c44:	bl	4b78 <gen_ehostop>
    4c48:	mov	r4, r0
    4c4c:	mov	r1, r0
    4c50:	mov	r0, r5
    4c54:	bl	4884 <sf_gen_or>
    4c58:	b	4bd0 <gen_ehostop+0x58>
    4c5c:	bl	ebc <abort@plt>
    4c60:	.word	0x0002c76c
    4c64:	.word	0x0002c740

00004c68 <gen_ahostop>:
    4c68:	strd	r4, [sp, #-16]!
    4c6c:	mov	r4, r0
    4c70:	str	r6, [sp, #8]
    4c74:	str	lr, [sp, #12]
    4c78:	cmp	r1, #4
    4c7c:	addls	pc, pc, r1, lsl #2
    4c80:	b	4d38 <gen_ahostop+0xd0>
    4c84:	b	4d0c <gen_ahostop+0xa4>
    4c88:	b	4cf8 <gen_ahostop+0x90>
    4c8c:	b	4cd4 <gen_ahostop+0x6c>
    4c90:	b	4d0c <gen_ahostop+0xa4>
    4c94:	b	4c98 <gen_ahostop+0x30>
    4c98:	mov	r1, #1
    4c9c:	bl	4c68 <gen_ahostop>
    4ca0:	mov	r5, r0
    4ca4:	mov	r1, #2
    4ca8:	mov	r0, r4
    4cac:	bl	4c68 <gen_ahostop>
    4cb0:	mov	r4, r0
    4cb4:	mov	r1, r0
    4cb8:	mov	r0, r5
    4cbc:	bl	3a88 <sf_gen_and>
    4cc0:	mov	r0, r4
    4cc4:	ldrd	r4, [sp]
    4cc8:	ldr	r6, [sp, #8]
    4ccc:	add	sp, sp, #12
    4cd0:	pop	{pc}		; (ldr pc, [sp], #4)
    4cd4:	mov	r2, #1
    4cd8:	mov	r3, r0
    4cdc:	mov	r1, r2
    4ce0:	mov	r0, r2
    4ce4:	ldrd	r4, [sp]
    4ce8:	ldr	r6, [sp, #8]
    4cec:	ldr	lr, [sp, #12]
    4cf0:	add	sp, sp, #16
    4cf4:	b	44f8 <gen_bcmp>
    4cf8:	mov	r2, #1
    4cfc:	mov	r3, r0
    4d00:	mov	r1, #0
    4d04:	mov	r0, r2
    4d08:	b	4ce4 <gen_ahostop+0x7c>
    4d0c:	mov	r1, #1
    4d10:	bl	4c68 <gen_ahostop>
    4d14:	mov	r5, r0
    4d18:	mov	r1, #2
    4d1c:	mov	r0, r4
    4d20:	bl	4c68 <gen_ahostop>
    4d24:	mov	r4, r0
    4d28:	mov	r1, r0
    4d2c:	mov	r0, r5
    4d30:	bl	4884 <sf_gen_or>
    4d34:	b	4cc0 <gen_ahostop+0x58>
    4d38:	bl	ebc <abort@plt>

00004d3c <gen_ether_linktype>:
    4d3c:	ldr	r3, [pc, #568]	; 4f7c <gen_ether_linktype+0x240>
    4d40:	cmp	r0, #240	; 0xf0
    4d44:	strd	r4, [sp, #-24]!	; 0xffffffe8
    4d48:	mov	r4, r0
    4d4c:	strd	r6, [sp, #8]
    4d50:	str	r8, [sp, #16]
    4d54:	str	lr, [sp, #20]
    4d58:	add	r3, pc, r3
    4d5c:	ldr	r6, [r3, #952]	; 0x3b8
    4d60:	beq	4e98 <gen_ether_linktype+0x15c>
    4d64:	bgt	4e24 <gen_ether_linktype+0xe8>
    4d68:	cmp	r0, #6
    4d6c:	beq	4e98 <gen_ether_linktype+0x15c>
    4d70:	cmp	r0, #224	; 0xe0
    4d74:	bne	4e44 <gen_ether_linktype+0x108>
    4d78:	mov	r3, r0
    4d7c:	mov	r2, #16
    4d80:	mov	r1, #0
    4d84:	mov	r0, #2
    4d88:	bl	2c2c <gen_cmp>
    4d8c:	mov	r4, r0
    4d90:	movw	r3, #65535	; 0xffff
    4d94:	mov	r2, #8
    4d98:	mov	r1, #0
    4d9c:	mov	r0, #2
    4da0:	bl	2c2c <gen_cmp>
    4da4:	mov	r5, r0
    4da8:	mov	r1, r0
    4dac:	mov	r0, r4
    4db0:	bl	4884 <sf_gen_or>
    4db4:	movw	r1, #33079	; 0x8137
    4db8:	mov	r0, #0
    4dbc:	bl	4674 <gen_snap>
    4dc0:	mov	r1, r5
    4dc4:	bl	4884 <sf_gen_or>
    4dc8:	movw	r2, #1500	; 0x5dc
    4dcc:	mov	r1, #8
    4dd0:	mov	r0, r6
    4dd4:	bl	2730 <gen_cmp_gt.constprop.10>
    4dd8:	ldr	r3, [r0, #44]	; 0x2c
    4ddc:	mov	r1, r5
    4de0:	clz	r3, r3
    4de4:	lsr	r3, r3, #5
    4de8:	str	r3, [r0, #44]	; 0x2c
    4dec:	bl	3a88 <sf_gen_and>
    4df0:	mov	r1, r6
    4df4:	movw	r3, #33079	; 0x8137
    4df8:	mov	r2, #8
    4dfc:	mov	r0, #1
    4e00:	bl	2c2c <gen_cmp>
    4e04:	mov	r1, r5
    4e08:	bl	4884 <sf_gen_or>
    4e0c:	mov	r0, r5
    4e10:	ldrd	r4, [sp]
    4e14:	ldrd	r6, [sp, #8]
    4e18:	ldr	r8, [sp, #16]
    4e1c:	add	sp, sp, #20
    4e20:	pop	{pc}		; (ldr pc, [sp], #4)
    4e24:	movw	r3, #32923	; 0x809b
    4e28:	cmp	r0, r3
    4e2c:	beq	4ee4 <gen_ether_linktype+0x1a8>
    4e30:	movw	r3, #33011	; 0x80f3
    4e34:	cmp	r0, r3
    4e38:	beq	4ee4 <gen_ether_linktype+0x1a8>
    4e3c:	cmp	r0, #254	; 0xfe
    4e40:	beq	4e98 <gen_ether_linktype+0x15c>
    4e44:	movw	r2, #1500	; 0x5dc
    4e48:	cmp	r4, r2
    4e4c:	bgt	4f3c <gen_ether_linktype+0x200>
    4e50:	mov	r1, #8
    4e54:	mov	r0, r6
    4e58:	bl	2730 <gen_cmp_gt.constprop.10>
    4e5c:	mov	r7, r0
    4e60:	add	r1, r6, #2
    4e64:	ldr	ip, [r7, #44]	; 0x2c
    4e68:	mov	r3, r4
    4e6c:	mov	r2, #16
    4e70:	mov	r0, #1
    4e74:	clz	ip, ip
    4e78:	lsr	ip, ip, #5
    4e7c:	str	ip, [r7, #44]	; 0x2c
    4e80:	bl	2c2c <gen_cmp>
    4e84:	mov	r5, r0
    4e88:	mov	r1, r0
    4e8c:	mov	r0, r7
    4e90:	bl	3a88 <sf_gen_and>
    4e94:	b	4e0c <gen_ether_linktype+0xd0>
    4e98:	mov	r0, r6
    4e9c:	movw	r2, #1500	; 0x5dc
    4ea0:	mov	r1, #8
    4ea4:	bl	2730 <gen_cmp_gt.constprop.10>
    4ea8:	mov	r6, r0
    4eac:	orr	r3, r4, r4, lsl #8
    4eb0:	mov	r2, #8
    4eb4:	ldr	ip, [r6, #44]	; 0x2c
    4eb8:	mov	r1, #0
    4ebc:	mov	r0, #2
    4ec0:	clz	ip, ip
    4ec4:	lsr	ip, ip, #5
    4ec8:	str	ip, [r6, #44]	; 0x2c
    4ecc:	bl	2c2c <gen_cmp>
    4ed0:	mov	r5, r0
    4ed4:	mov	r1, r0
    4ed8:	mov	r0, r6
    4edc:	bl	3a88 <sf_gen_and>
    4ee0:	b	4e0c <gen_ether_linktype+0xd0>
    4ee4:	movw	r2, #1500	; 0x5dc
    4ee8:	mov	r1, #8
    4eec:	mov	r0, r6
    4ef0:	bl	2730 <gen_cmp_gt.constprop.10>
    4ef4:	ldr	r3, [r0, #44]	; 0x2c
    4ef8:	movw	r2, #32923	; 0x809b
    4efc:	mov	r7, r0
    4f00:	cmp	r4, r2
    4f04:	clz	r3, r3
    4f08:	lsr	r3, r3, #5
    4f0c:	str	r3, [r0, #44]	; 0x2c
    4f10:	beq	4f64 <gen_ether_linktype+0x228>
    4f14:	movw	r1, #33011	; 0x80f3
    4f18:	mov	r0, #0
    4f1c:	bl	4674 <gen_snap>
    4f20:	mov	r5, r0
    4f24:	mov	r1, r5
    4f28:	mov	r0, r7
    4f2c:	bl	3a88 <sf_gen_and>
    4f30:	mov	r3, r4
    4f34:	mov	r1, r6
    4f38:	b	4df8 <gen_ether_linktype+0xbc>
    4f3c:	mov	r3, r4
    4f40:	mov	r1, r6
    4f44:	ldrd	r4, [sp]
    4f48:	mov	r2, #8
    4f4c:	mov	r0, #1
    4f50:	ldrd	r6, [sp, #8]
    4f54:	ldr	r8, [sp, #16]
    4f58:	ldr	lr, [sp, #20]
    4f5c:	add	sp, sp, #24
    4f60:	b	2c2c <gen_cmp>
    4f64:	mov	r0, #7
    4f68:	movt	r0, #8
    4f6c:	mov	r1, r4
    4f70:	bl	4674 <gen_snap>
    4f74:	mov	r5, r0
    4f78:	b	4f24 <gen_ether_linktype+0x1e8>
    4f7c:	.word	0x0002c608

00004f80 <gen_wlanhostop>:
    4f80:	strd	r4, [sp, #-36]!	; 0xffffffdc
    4f84:	mov	r5, r0
    4f88:	strd	r6, [sp, #8]
    4f8c:	strd	r8, [sp, #16]
    4f90:	strd	sl, [sp, #24]
    4f94:	str	lr, [sp, #32]
    4f98:	sub	sp, sp, #20
    4f9c:	cmp	r1, #8
    4fa0:	addls	pc, pc, r1, lsl #2
    4fa4:	b	5574 <gen_wlanhostop+0x5f4>
    4fa8:	b	5038 <gen_wlanhostop+0xb8>
    4fac:	b	5064 <gen_wlanhostop+0xe4>
    4fb0:	b	52ac <gen_wlanhostop+0x32c>
    4fb4:	b	5038 <gen_wlanhostop+0xb8>
    4fb8:	b	5400 <gen_wlanhostop+0x480>
    4fbc:	b	542c <gen_wlanhostop+0x4ac>
    4fc0:	b	545c <gen_wlanhostop+0x4dc>
    4fc4:	b	5524 <gen_wlanhostop+0x5a4>
    4fc8:	b	4fcc <gen_wlanhostop+0x4c>
    4fcc:	mov	ip, #3
    4fd0:	mov	r0, #16
    4fd4:	mov	r3, #0
    4fd8:	mov	r1, #1
    4fdc:	mov	r2, r0
    4fe0:	stm	sp, {r0, r3, ip}
    4fe4:	mov	r3, ip
    4fe8:	mov	r0, r1
    4fec:	bl	2b74 <gen_ncmp>
    4ff0:	mov	r6, r0
    4ff4:	mov	r3, r5
    4ff8:	mov	r2, #6
    4ffc:	mov	r1, #24
    5000:	mov	r0, #1
    5004:	bl	44f8 <gen_bcmp>
    5008:	mov	r4, r0
    500c:	mov	r1, r0
    5010:	mov	r0, r6
    5014:	bl	3a88 <sf_gen_and>
    5018:	mov	r0, r4
    501c:	add	sp, sp, #20
    5020:	ldrd	r4, [sp]
    5024:	ldrd	r6, [sp, #8]
    5028:	ldrd	r8, [sp, #16]
    502c:	ldrd	sl, [sp, #24]
    5030:	add	sp, sp, #32
    5034:	pop	{pc}		; (ldr pc, [sp], #4)
    5038:	mov	r1, #1
    503c:	bl	4f80 <gen_wlanhostop>
    5040:	mov	r6, r0
    5044:	mov	r1, #2
    5048:	mov	r0, r5
    504c:	bl	4f80 <gen_wlanhostop>
    5050:	mov	r4, r0
    5054:	mov	r1, r0
    5058:	mov	r0, r6
    505c:	bl	4884 <sf_gen_or>
    5060:	b	5018 <gen_wlanhostop+0x98>
    5064:	mov	r1, #16
    5068:	mov	r0, #1
    506c:	bl	265c <gen_load_llrel>
    5070:	mov	r4, r0
    5074:	mov	r0, #208	; 0xd0
    5078:	bl	2250 <newchunk>
    507c:	mov	r6, #1
    5080:	mov	r7, r0
    5084:	mov	r8, #69	; 0x45
    5088:	mov	r3, r5
    508c:	mov	r2, #6
    5090:	mov	r1, #24
    5094:	mov	r0, r6
    5098:	stmib	r7, {r4, r8}
    509c:	mov	sl, #2
    50a0:	str	r6, [r7, #20]
    50a4:	str	r7, [r7, #96]	; 0x60
    50a8:	bl	44f8 <gen_bcmp>
    50ac:	mov	r4, r0
    50b0:	mov	r1, r0
    50b4:	mov	r0, r7
    50b8:	bl	3a88 <sf_gen_and>
    50bc:	mov	r1, #16
    50c0:	mov	r0, r6
    50c4:	bl	265c <gen_load_llrel>
    50c8:	mov	r9, r0
    50cc:	mov	r0, #208	; 0xd0
    50d0:	bl	2250 <newchunk>
    50d4:	mov	r7, r0
    50d8:	mov	r2, #6
    50dc:	ldr	ip, [r7, #44]	; 0x2c
    50e0:	mov	r3, r5
    50e4:	mov	r1, #16
    50e8:	mov	r0, r6
    50ec:	str	r9, [r7, #4]
    50f0:	mov	r9, #8
    50f4:	str	r8, [r7, #8]
    50f8:	str	r6, [r7, #20]
    50fc:	str	r7, [r7, #96]	; 0x60
    5100:	clz	ip, ip
    5104:	lsr	ip, ip, #5
    5108:	str	ip, [r7, #44]	; 0x2c
    510c:	bl	44f8 <gen_bcmp>
    5110:	mov	fp, r0
    5114:	mov	r1, r0
    5118:	mov	r0, r7
    511c:	bl	3a88 <sf_gen_and>
    5120:	mov	r0, fp
    5124:	mov	r1, r4
    5128:	bl	4884 <sf_gen_or>
    512c:	mov	r1, #16
    5130:	mov	r0, r6
    5134:	bl	265c <gen_load_llrel>
    5138:	mov	r7, r0
    513c:	mov	r0, #208	; 0xd0
    5140:	bl	2250 <newchunk>
    5144:	mov	r3, r0
    5148:	mov	r1, r4
    514c:	stmib	r0, {r7, r8}
    5150:	str	sl, [r0, #20]
    5154:	str	r0, [r3, #96]	; 0x60
    5158:	bl	3a88 <sf_gen_and>
    515c:	mov	r1, #16
    5160:	mov	r0, r6
    5164:	bl	265c <gen_load_llrel>
    5168:	mov	fp, r0
    516c:	mov	r0, #208	; 0xd0
    5170:	bl	2250 <newchunk>
    5174:	mov	r7, r0
    5178:	mov	r2, #6
    517c:	ldr	ip, [r7, #44]	; 0x2c
    5180:	mov	r3, r5
    5184:	mov	r1, #10
    5188:	mov	r0, r6
    518c:	str	fp, [r7, #4]
    5190:	str	r8, [r7, #8]
    5194:	str	sl, [r7, #20]
    5198:	str	r7, [r7, #96]	; 0x60
    519c:	clz	ip, ip
    51a0:	lsr	ip, ip, #5
    51a4:	str	ip, [r7, #44]	; 0x2c
    51a8:	bl	44f8 <gen_bcmp>
    51ac:	mov	sl, r0
    51b0:	mov	r1, r0
    51b4:	mov	r0, r7
    51b8:	bl	3a88 <sf_gen_and>
    51bc:	mov	r0, sl
    51c0:	mov	r1, r4
    51c4:	bl	4884 <sf_gen_or>
    51c8:	mov	r1, #16
    51cc:	mov	r0, #0
    51d0:	bl	265c <gen_load_llrel>
    51d4:	mov	r7, r0
    51d8:	mov	r0, #208	; 0xd0
    51dc:	bl	2250 <newchunk>
    51e0:	mov	r3, r0
    51e4:	mov	r1, r4
    51e8:	stmib	r0, {r7, r8}
    51ec:	str	r9, [r0, #20]
    51f0:	str	r0, [r3, #96]	; 0x60
    51f4:	bl	3a88 <sf_gen_and>
    51f8:	mov	r1, #16
    51fc:	mov	r0, #0
    5200:	bl	265c <gen_load_llrel>
    5204:	mov	sl, r0
    5208:	mov	r0, #208	; 0xd0
    520c:	bl	2250 <newchunk>
    5210:	mov	r7, r0
    5214:	mov	r3, r5
    5218:	ldr	ip, [r7, #44]	; 0x2c
    521c:	mov	r1, #10
    5220:	mov	r0, r6
    5224:	mov	r2, #6
    5228:	str	sl, [r7, #4]
    522c:	str	r8, [r7, #8]
    5230:	str	r9, [r7, #20]
    5234:	str	r7, [r7, #96]	; 0x60
    5238:	clz	ip, ip
    523c:	lsr	ip, ip, #5
    5240:	str	ip, [r7, #44]	; 0x2c
    5244:	bl	44f8 <gen_bcmp>
    5248:	mov	r5, r0
    524c:	mov	r1, r0
    5250:	mov	r0, r7
    5254:	bl	3a88 <sf_gen_and>
    5258:	mov	r1, r4
    525c:	mov	r0, r5
    5260:	bl	4884 <sf_gen_or>
    5264:	mov	r1, #16
    5268:	mov	r0, #0
    526c:	bl	265c <gen_load_llrel>
    5270:	mov	r5, r0
    5274:	mov	r0, #208	; 0xd0
    5278:	bl	2250 <newchunk>
    527c:	ldr	r2, [r0, #44]	; 0x2c
    5280:	mov	r3, r0
    5284:	mov	ip, #4
    5288:	mov	r1, r4
    528c:	stmib	r0, {r5, r8}
    5290:	str	ip, [r0, #20]
    5294:	clz	r2, r2
    5298:	lsr	r2, r2, #5
    529c:	str	r2, [r0, #44]	; 0x2c
    52a0:	str	r0, [r3, #96]	; 0x60
    52a4:	bl	3a88 <sf_gen_and>
    52a8:	b	5018 <gen_wlanhostop+0x98>
    52ac:	mov	r1, #16
    52b0:	mov	r0, #1
    52b4:	bl	265c <gen_load_llrel>
    52b8:	mov	r4, r0
    52bc:	mov	r0, #208	; 0xd0
    52c0:	bl	2250 <newchunk>
    52c4:	mov	r6, r0
    52c8:	mov	r7, #1
    52cc:	mov	r8, #69	; 0x45
    52d0:	mov	r3, r5
    52d4:	mov	r2, #6
    52d8:	mov	r1, #16
    52dc:	mov	r0, r7
    52e0:	stmib	r6, {r4, r8}
    52e4:	mov	r9, #8
    52e8:	str	r7, [r6, #20]
    52ec:	str	r6, [r6, #96]	; 0x60
    52f0:	bl	44f8 <gen_bcmp>
    52f4:	mov	r4, r0
    52f8:	mov	r1, r0
    52fc:	mov	r0, r6
    5300:	bl	3a88 <sf_gen_and>
    5304:	mov	r1, #16
    5308:	mov	r0, r7
    530c:	bl	265c <gen_load_llrel>
    5310:	mov	sl, r0
    5314:	mov	r0, #208	; 0xd0
    5318:	bl	2250 <newchunk>
    531c:	mov	r6, r0
    5320:	mov	r2, #6
    5324:	ldr	ip, [r6, #44]	; 0x2c
    5328:	mov	r3, r5
    532c:	mov	r1, #4
    5330:	mov	r0, r7
    5334:	str	sl, [r6, #4]
    5338:	str	r8, [r6, #8]
    533c:	str	r7, [r6, #20]
    5340:	str	r6, [r6, #96]	; 0x60
    5344:	clz	ip, ip
    5348:	lsr	ip, ip, #5
    534c:	str	ip, [r6, #44]	; 0x2c
    5350:	bl	44f8 <gen_bcmp>
    5354:	mov	sl, r0
    5358:	mov	r1, r0
    535c:	mov	r0, r6
    5360:	bl	3a88 <sf_gen_and>
    5364:	mov	r0, sl
    5368:	mov	r1, r4
    536c:	bl	4884 <sf_gen_or>
    5370:	mov	r1, #16
    5374:	mov	r0, #0
    5378:	bl	265c <gen_load_llrel>
    537c:	mov	r6, r0
    5380:	mov	r0, #208	; 0xd0
    5384:	bl	2250 <newchunk>
    5388:	mov	r3, r0
    538c:	mov	r1, r4
    5390:	stmib	r0, {r6, r8}
    5394:	str	r9, [r0, #20]
    5398:	str	r0, [r3, #96]	; 0x60
    539c:	bl	3a88 <sf_gen_and>
    53a0:	mov	r1, #16
    53a4:	mov	r0, #0
    53a8:	bl	265c <gen_load_llrel>
    53ac:	mov	sl, r0
    53b0:	mov	r0, #208	; 0xd0
    53b4:	bl	2250 <newchunk>
    53b8:	mov	r6, r0
    53bc:	mov	r3, r5
    53c0:	ldr	ip, [r6, #44]	; 0x2c
    53c4:	mov	r1, #4
    53c8:	mov	r0, r7
    53cc:	mov	r2, #6
    53d0:	str	sl, [r6, #4]
    53d4:	str	r8, [r6, #8]
    53d8:	str	r9, [r6, #20]
    53dc:	str	r6, [r6, #96]	; 0x60
    53e0:	clz	ip, ip
    53e4:	lsr	ip, ip, #5
    53e8:	str	ip, [r6, #44]	; 0x2c
    53ec:	bl	44f8 <gen_bcmp>
    53f0:	mov	r5, r0
    53f4:	mov	r1, r0
    53f8:	mov	r0, r6
    53fc:	b	5254 <gen_wlanhostop+0x2d4>
    5400:	mov	r1, #1
    5404:	bl	4f80 <gen_wlanhostop>
    5408:	mov	r6, r0
    540c:	mov	r1, #2
    5410:	mov	r0, r5
    5414:	bl	4f80 <gen_wlanhostop>
    5418:	mov	r4, r0
    541c:	mov	r1, r0
    5420:	mov	r0, r6
    5424:	bl	3a88 <sf_gen_and>
    5428:	b	5018 <gen_wlanhostop+0x98>
    542c:	mov	r3, r0
    5430:	mov	r2, #6
    5434:	mov	r1, #4
    5438:	mov	r0, #1
    543c:	add	sp, sp, #20
    5440:	ldrd	r4, [sp]
    5444:	ldrd	r6, [sp, #8]
    5448:	ldrd	r8, [sp, #16]
    544c:	ldrd	sl, [sp, #24]
    5450:	ldr	lr, [sp, #32]
    5454:	add	sp, sp, #36	; 0x24
    5458:	b	44f8 <gen_bcmp>
    545c:	mov	r6, #16
    5460:	mov	r4, #0
    5464:	mov	ip, #4
    5468:	mov	r2, r6
    546c:	mov	r1, r4
    5470:	mov	r3, #12
    5474:	str	r6, [sp]
    5478:	mov	r0, #1
    547c:	stmib	sp, {r4, ip}
    5480:	bl	2b74 <gen_ncmp>
    5484:	mov	r7, r0
    5488:	mov	lr, #192	; 0xc0
    548c:	ldr	ip, [r7, #44]	; 0x2c
    5490:	mov	r2, r6
    5494:	mov	r1, r4
    5498:	mov	r3, #240	; 0xf0
    549c:	mov	r0, #1
    54a0:	clz	ip, ip
    54a4:	lsr	ip, ip, #5
    54a8:	str	ip, [r7, #44]	; 0x2c
    54ac:	str	r6, [sp]
    54b0:	stmib	sp, {r4, lr}
    54b4:	bl	2b74 <gen_ncmp>
    54b8:	mov	r8, r0
    54bc:	mov	lr, #208	; 0xd0
    54c0:	ldr	ip, [r8, #44]	; 0x2c
    54c4:	mov	r2, r6
    54c8:	mov	r1, r4
    54cc:	mov	r3, #240	; 0xf0
    54d0:	mov	r0, #1
    54d4:	clz	ip, ip
    54d8:	lsr	ip, ip, #5
    54dc:	str	ip, [r8, #44]	; 0x2c
    54e0:	str	r6, [sp]
    54e4:	stmib	sp, {r4, lr}
    54e8:	bl	2b74 <gen_ncmp>
    54ec:	mov	r6, r0
    54f0:	mov	r0, r8
    54f4:	ldr	r3, [r6, #44]	; 0x2c
    54f8:	mov	r1, r6
    54fc:	clz	r3, r3
    5500:	lsr	r3, r3, #5
    5504:	str	r3, [r6, #44]	; 0x2c
    5508:	bl	3a88 <sf_gen_and>
    550c:	mov	r0, r7
    5510:	bl	4884 <sf_gen_or>
    5514:	mov	r3, r5
    5518:	mov	r2, #6
    551c:	mov	r1, #10
    5520:	b	5000 <gen_wlanhostop+0x80>
    5524:	mov	ip, #4
    5528:	mov	r3, #0
    552c:	mov	r4, #16
    5530:	mov	r1, r3
    5534:	mov	r2, r4
    5538:	mov	r0, #1
    553c:	str	r4, [sp]
    5540:	stmib	sp, {r3, ip}
    5544:	mov	r3, #12
    5548:	bl	2b74 <gen_ncmp>
    554c:	mov	r6, r0
    5550:	mov	r1, r4
    5554:	ldr	ip, [r6, #44]	; 0x2c
    5558:	mov	r3, r5
    555c:	mov	r2, #6
    5560:	mov	r0, #1
    5564:	clz	ip, ip
    5568:	lsr	ip, ip, #5
    556c:	str	ip, [r6, #44]	; 0x2c
    5570:	b	5004 <gen_wlanhostop+0x84>
    5574:	bl	ebc <abort@plt>

00005578 <sf_gen_not>:
    5578:	ldr	r3, [r0, #44]	; 0x2c
    557c:	clz	r3, r3
    5580:	lsr	r3, r3, #5
    5584:	str	r3, [r0, #44]	; 0x2c
    5588:	bx	lr

0000558c <sf_gen_portop>:
    558c:	mov	r3, r1
    5590:	mov	r1, #9
    5594:	strd	r4, [sp, #-24]!	; 0xffffffe8
    5598:	mov	r4, r2
    559c:	mov	r2, #16
    55a0:	strd	r6, [sp, #8]
    55a4:	mov	r6, r0
    55a8:	mov	r0, #3
    55ac:	str	r8, [sp, #16]
    55b0:	str	lr, [sp, #20]
    55b4:	bl	2c2c <gen_cmp>
    55b8:	mov	r7, r0
    55bc:	bl	2b1c <gen_ipfrag>
    55c0:	mov	r5, r0
    55c4:	mov	r1, r0
    55c8:	mov	r0, r7
    55cc:	bl	3a88 <sf_gen_and>
    55d0:	cmp	r4, #4
    55d4:	addls	pc, pc, r4, lsl #2
    55d8:	b	56c8 <sf_gen_portop+0x13c>
    55dc:	b	5688 <sf_gen_portop+0xfc>
    55e0:	b	566c <sf_gen_portop+0xe0>
    55e4:	b	5650 <sf_gen_portop+0xc4>
    55e8:	b	5688 <sf_gen_portop+0xfc>
    55ec:	b	55f0 <sf_gen_portop+0x64>
    55f0:	mov	r3, r6
    55f4:	mov	r2, #8
    55f8:	mov	r1, #0
    55fc:	mov	r0, #5
    5600:	bl	2c2c <gen_cmp>
    5604:	mov	r7, r0
    5608:	mov	r1, #2
    560c:	mov	r3, r6
    5610:	mov	r2, #8
    5614:	mov	r0, #5
    5618:	bl	2c2c <gen_cmp>
    561c:	mov	r4, r0
    5620:	mov	r1, r0
    5624:	mov	r0, r7
    5628:	bl	3a88 <sf_gen_and>
    562c:	mov	r0, r5
    5630:	mov	r1, r4
    5634:	bl	3a88 <sf_gen_and>
    5638:	mov	r0, r4
    563c:	ldrd	r4, [sp]
    5640:	ldrd	r6, [sp, #8]
    5644:	ldr	r8, [sp, #16]
    5648:	add	sp, sp, #20
    564c:	pop	{pc}		; (ldr pc, [sp], #4)
    5650:	mov	r3, r6
    5654:	mov	r2, #8
    5658:	mov	r1, #2
    565c:	mov	r0, #5
    5660:	bl	2c2c <gen_cmp>
    5664:	mov	r4, r0
    5668:	b	562c <sf_gen_portop+0xa0>
    566c:	mov	r3, r6
    5670:	mov	r2, #8
    5674:	mov	r1, #0
    5678:	mov	r0, #5
    567c:	bl	2c2c <gen_cmp>
    5680:	mov	r4, r0
    5684:	b	562c <sf_gen_portop+0xa0>
    5688:	mov	r3, r6
    568c:	mov	r2, #8
    5690:	mov	r1, #0
    5694:	mov	r0, #5
    5698:	bl	2c2c <gen_cmp>
    569c:	mov	r7, r0
    56a0:	mov	r3, r6
    56a4:	mov	r2, #8
    56a8:	mov	r1, #2
    56ac:	mov	r0, #5
    56b0:	bl	2c2c <gen_cmp>
    56b4:	mov	r4, r0
    56b8:	mov	r1, r0
    56bc:	mov	r0, r7
    56c0:	bl	4884 <sf_gen_or>
    56c4:	b	562c <sf_gen_portop+0xa0>
    56c8:	bl	ebc <abort@plt>

000056cc <sf_gen_portop6>:
    56cc:	mov	r3, r1
    56d0:	mov	r1, #6
    56d4:	strd	r4, [sp, #-24]!	; 0xffffffe8
    56d8:	mov	r5, r0
    56dc:	mov	r4, r2
    56e0:	strd	r6, [sp, #8]
    56e4:	mov	r2, #16
    56e8:	mov	r0, #3
    56ec:	str	r8, [sp, #16]
    56f0:	str	lr, [sp, #20]
    56f4:	bl	2c2c <gen_cmp>
    56f8:	mov	r6, r0
    56fc:	cmp	r4, #4
    5700:	addls	pc, pc, r4, lsl #2
    5704:	b	57f4 <sf_gen_portop6+0x128>
    5708:	b	57b4 <sf_gen_portop6+0xe8>
    570c:	b	5798 <sf_gen_portop6+0xcc>
    5710:	b	577c <sf_gen_portop6+0xb0>
    5714:	b	57b4 <sf_gen_portop6+0xe8>
    5718:	b	571c <sf_gen_portop6+0x50>
    571c:	mov	r3, r5
    5720:	mov	r2, #8
    5724:	mov	r1, #0
    5728:	mov	r0, #6
    572c:	bl	2c2c <gen_cmp>
    5730:	mov	r7, r0
    5734:	mov	r1, #2
    5738:	mov	r3, r5
    573c:	mov	r2, #8
    5740:	mov	r0, #6
    5744:	bl	2c2c <gen_cmp>
    5748:	mov	r4, r0
    574c:	mov	r1, r0
    5750:	mov	r0, r7
    5754:	bl	3a88 <sf_gen_and>
    5758:	mov	r0, r6
    575c:	mov	r1, r4
    5760:	bl	3a88 <sf_gen_and>
    5764:	mov	r0, r4
    5768:	ldrd	r4, [sp]
    576c:	ldrd	r6, [sp, #8]
    5770:	ldr	r8, [sp, #16]
    5774:	add	sp, sp, #20
    5778:	pop	{pc}		; (ldr pc, [sp], #4)
    577c:	mov	r3, r5
    5780:	mov	r2, #8
    5784:	mov	r1, #2
    5788:	mov	r0, #6
    578c:	bl	2c2c <gen_cmp>
    5790:	mov	r4, r0
    5794:	b	5758 <sf_gen_portop6+0x8c>
    5798:	mov	r3, r5
    579c:	mov	r2, #8
    57a0:	mov	r1, #0
    57a4:	mov	r0, #6
    57a8:	bl	2c2c <gen_cmp>
    57ac:	mov	r4, r0
    57b0:	b	5758 <sf_gen_portop6+0x8c>
    57b4:	mov	r3, r5
    57b8:	mov	r2, #8
    57bc:	mov	r1, #0
    57c0:	mov	r0, #6
    57c4:	bl	2c2c <gen_cmp>
    57c8:	mov	r7, r0
    57cc:	mov	r3, r5
    57d0:	mov	r2, #8
    57d4:	mov	r1, #2
    57d8:	mov	r0, #6
    57dc:	bl	2c2c <gen_cmp>
    57e0:	mov	r4, r0
    57e4:	mov	r1, r0
    57e8:	mov	r0, r7
    57ec:	bl	4884 <sf_gen_or>
    57f0:	b	5758 <sf_gen_portop6+0x8c>
    57f4:	bl	ebc <abort@plt>

000057f8 <sf_gen_portrangeop>:
    57f8:	strd	r4, [sp, #-24]!	; 0xffffffe8
    57fc:	mov	r4, r3
    5800:	mov	r3, r2
    5804:	mov	r2, #16
    5808:	strd	r6, [sp, #8]
    580c:	mov	r6, r0
    5810:	mov	r7, r1
    5814:	mov	r0, #3
    5818:	str	r8, [sp, #16]
    581c:	mov	r1, #9
    5820:	str	lr, [sp, #20]
    5824:	bl	2c2c <gen_cmp>
    5828:	mov	r8, r0
    582c:	bl	2b1c <gen_ipfrag>
    5830:	mov	r5, r0
    5834:	mov	r1, r0
    5838:	mov	r0, r8
    583c:	bl	3a88 <sf_gen_and>
    5840:	cmp	r4, #4
    5844:	addls	pc, pc, r4, lsl #2
    5848:	b	5920 <sf_gen_portrangeop+0x128>
    584c:	b	58e8 <sf_gen_portrangeop+0xf0>
    5850:	b	58d0 <sf_gen_portrangeop+0xd8>
    5854:	b	58b8 <sf_gen_portrangeop+0xc0>
    5858:	b	58e8 <sf_gen_portrangeop+0xf0>
    585c:	b	5860 <sf_gen_portrangeop+0x68>
    5860:	mov	r2, r7
    5864:	mov	r1, r6
    5868:	mov	r0, #0
    586c:	bl	476c <gen_portrangeatom>
    5870:	mov	r8, r0
    5874:	mov	r1, r6
    5878:	mov	r2, r7
    587c:	mov	r0, #2
    5880:	bl	476c <gen_portrangeatom>
    5884:	mov	r4, r0
    5888:	mov	r1, r0
    588c:	mov	r0, r8
    5890:	bl	3a88 <sf_gen_and>
    5894:	mov	r0, r5
    5898:	mov	r1, r4
    589c:	bl	3a88 <sf_gen_and>
    58a0:	mov	r0, r4
    58a4:	ldrd	r4, [sp]
    58a8:	ldrd	r6, [sp, #8]
    58ac:	ldr	r8, [sp, #16]
    58b0:	add	sp, sp, #20
    58b4:	pop	{pc}		; (ldr pc, [sp], #4)
    58b8:	mov	r2, r7
    58bc:	mov	r1, r6
    58c0:	mov	r0, #2
    58c4:	bl	476c <gen_portrangeatom>
    58c8:	mov	r4, r0
    58cc:	b	5894 <sf_gen_portrangeop+0x9c>
    58d0:	mov	r2, r7
    58d4:	mov	r1, r6
    58d8:	mov	r0, #0
    58dc:	bl	476c <gen_portrangeatom>
    58e0:	mov	r4, r0
    58e4:	b	5894 <sf_gen_portrangeop+0x9c>
    58e8:	mov	r2, r7
    58ec:	mov	r1, r6
    58f0:	mov	r0, #0
    58f4:	bl	476c <gen_portrangeatom>
    58f8:	mov	r8, r0
    58fc:	mov	r1, r6
    5900:	mov	r2, r7
    5904:	mov	r0, #2
    5908:	bl	476c <gen_portrangeatom>
    590c:	mov	r4, r0
    5910:	mov	r1, r0
    5914:	mov	r0, r8
    5918:	bl	4884 <sf_gen_or>
    591c:	b	5894 <sf_gen_portrangeop+0x9c>
    5920:	bl	ebc <abort@plt>

00005924 <sf_gen_portrangeop6>:
    5924:	strd	r4, [sp, #-24]!	; 0xffffffe8
    5928:	mov	r4, r3
    592c:	mov	r5, r0
    5930:	mov	r3, r2
    5934:	mov	r0, #3
    5938:	strd	r6, [sp, #8]
    593c:	mov	r2, #16
    5940:	mov	r6, r1
    5944:	str	r8, [sp, #16]
    5948:	mov	r1, #6
    594c:	str	lr, [sp, #20]
    5950:	bl	2c2c <gen_cmp>
    5954:	mov	r7, r0
    5958:	cmp	r4, #4
    595c:	addls	pc, pc, r4, lsl #2
    5960:	b	5a38 <sf_gen_portrangeop6+0x114>
    5964:	b	5a00 <sf_gen_portrangeop6+0xdc>
    5968:	b	59e8 <sf_gen_portrangeop6+0xc4>
    596c:	b	59d0 <sf_gen_portrangeop6+0xac>
    5970:	b	5a00 <sf_gen_portrangeop6+0xdc>
    5974:	b	5978 <sf_gen_portrangeop6+0x54>
    5978:	mov	r2, r6
    597c:	mov	r1, r5
    5980:	mov	r0, #0
    5984:	bl	47f8 <gen_portrangeatom6>
    5988:	mov	r8, r0
    598c:	mov	r1, r5
    5990:	mov	r2, r6
    5994:	mov	r0, #2
    5998:	bl	47f8 <gen_portrangeatom6>
    599c:	mov	r4, r0
    59a0:	mov	r1, r0
    59a4:	mov	r0, r8
    59a8:	bl	3a88 <sf_gen_and>
    59ac:	mov	r0, r7
    59b0:	mov	r1, r4
    59b4:	bl	3a88 <sf_gen_and>
    59b8:	mov	r0, r4
    59bc:	ldrd	r4, [sp]
    59c0:	ldrd	r6, [sp, #8]
    59c4:	ldr	r8, [sp, #16]
    59c8:	add	sp, sp, #20
    59cc:	pop	{pc}		; (ldr pc, [sp], #4)
    59d0:	mov	r2, r6
    59d4:	mov	r1, r5
    59d8:	mov	r0, #2
    59dc:	bl	47f8 <gen_portrangeatom6>
    59e0:	mov	r4, r0
    59e4:	b	59ac <sf_gen_portrangeop6+0x88>
    59e8:	mov	r2, r6
    59ec:	mov	r1, r5
    59f0:	mov	r0, #0
    59f4:	bl	47f8 <gen_portrangeatom6>
    59f8:	mov	r4, r0
    59fc:	b	59ac <sf_gen_portrangeop6+0x88>
    5a00:	mov	r2, r6
    5a04:	mov	r1, r5
    5a08:	mov	r0, #0
    5a0c:	bl	47f8 <gen_portrangeatom6>
    5a10:	mov	r8, r0
    5a14:	mov	r1, r5
    5a18:	mov	r2, r6
    5a1c:	mov	r0, #2
    5a20:	bl	47f8 <gen_portrangeatom6>
    5a24:	mov	r4, r0
    5a28:	mov	r1, r0
    5a2c:	mov	r0, r8
    5a30:	bl	4884 <sf_gen_or>
    5a34:	b	59ac <sf_gen_portrangeop6+0x88>
    5a38:	bl	ebc <abort@plt>

00005a3c <sf_gen_ecode>:
    5a3c:	uxtb	r3, r1
    5a40:	strd	r4, [sp, #-16]!
    5a44:	ubfx	r4, r1, #16, #8
    5a48:	str	r6, [sp, #8]
    5a4c:	cmp	r3, #1
    5a50:	str	lr, [sp, #12]
    5a54:	sub	sp, sp, #8
    5a58:	str	r1, [sp, #4]
    5a5c:	bhi	5bdc <sf_gen_ecode+0x1a0>
    5a60:	ldrb	r2, [sp, #5]
    5a64:	cmp	r2, #1
    5a68:	bne	5bdc <sf_gen_ecode+0x1a0>
    5a6c:	ldr	r1, [pc, #372]	; 5be8 <sf_gen_ecode+0x1ac>
    5a70:	mov	r5, r0
    5a74:	add	r1, pc, r1
    5a78:	ldr	r3, [r1, #856]	; 0x358
    5a7c:	cmp	r3, #119	; 0x77
    5a80:	beq	5b4c <sf_gen_ecode+0x110>
    5a84:	bgt	5ab8 <sf_gen_ecode+0x7c>
    5a88:	cmp	r3, #6
    5a8c:	beq	5bc0 <sf_gen_ecode+0x184>
    5a90:	ble	5b80 <sf_gen_ecode+0x144>
    5a94:	cmp	r3, #10
    5a98:	bne	5b6c <sf_gen_ecode+0x130>
    5a9c:	mov	r1, r4
    5aa0:	add	sp, sp, #8
    5aa4:	ldrd	r4, [sp]
    5aa8:	ldr	r6, [sp, #8]
    5aac:	ldr	lr, [sp, #12]
    5ab0:	add	sp, sp, #16
    5ab4:	b	4904 <gen_fhostop>
    5ab8:	cmp	r3, #127	; 0x7f
    5abc:	beq	5b4c <sf_gen_ecode+0x110>
    5ac0:	bgt	5b3c <sf_gen_ecode+0x100>
    5ac4:	cmp	r3, #122	; 0x7a
    5ac8:	beq	5ba4 <sf_gen_ecode+0x168>
    5acc:	cmp	r3, #123	; 0x7b
    5ad0:	bne	5b74 <sf_gen_ecode+0x138>
    5ad4:	ldr	r3, [r1, #908]	; 0x38c
    5ad8:	cmp	r3, #0
    5adc:	beq	5bdc <sf_gen_ecode+0x1a0>
    5ae0:	mov	r0, r2
    5ae4:	mov	r3, #65280	; 0xff00
    5ae8:	mov	r2, #8
    5aec:	mov	r1, #4
    5af0:	bl	2c2c <gen_cmp>
    5af4:	mov	r6, r0
    5af8:	mov	r1, r4
    5afc:	ldr	r3, [r6, #44]	; 0x2c
    5b00:	mov	r0, r5
    5b04:	clz	r3, r3
    5b08:	lsr	r3, r3, #5
    5b0c:	str	r3, [r6, #44]	; 0x2c
    5b10:	bl	4b78 <gen_ehostop>
    5b14:	mov	r4, r0
    5b18:	mov	r1, r0
    5b1c:	mov	r0, r6
    5b20:	bl	3a88 <sf_gen_and>
    5b24:	mov	r0, r4
    5b28:	add	sp, sp, #8
    5b2c:	ldrd	r4, [sp]
    5b30:	ldr	r6, [sp, #8]
    5b34:	add	sp, sp, #12
    5b38:	pop	{pc}		; (ldr pc, [sp], #4)
    5b3c:	cmp	r3, #163	; 0xa3
    5b40:	beq	5b4c <sf_gen_ecode+0x110>
    5b44:	cmp	r3, #192	; 0xc0
    5b48:	bne	5b74 <sf_gen_ecode+0x138>
    5b4c:	mov	r1, r4
    5b50:	mov	r0, r5
    5b54:	add	sp, sp, #8
    5b58:	ldrd	r4, [sp]
    5b5c:	ldr	r6, [sp, #8]
    5b60:	ldr	lr, [sp, #12]
    5b64:	add	sp, sp, #16
    5b68:	b	4f80 <gen_wlanhostop>
    5b6c:	cmp	r3, #105	; 0x69
    5b70:	beq	5b4c <sf_gen_ecode+0x110>
    5b74:	ldr	r0, [pc, #112]	; 5bec <sf_gen_ecode+0x1b0>
    5b78:	add	r0, pc, r0
    5b7c:	bl	2210 <sf_bpf_error>
    5b80:	cmp	r3, #1
    5b84:	bne	5b74 <sf_gen_ecode+0x138>
    5b88:	mov	r1, r4
    5b8c:	add	sp, sp, #8
    5b90:	ldrd	r4, [sp]
    5b94:	ldr	r6, [sp, #8]
    5b98:	ldr	lr, [sp, #12]
    5b9c:	add	sp, sp, #16
    5ba0:	b	4b78 <gen_ehostop>
    5ba4:	mov	r1, r4
    5ba8:	add	sp, sp, #8
    5bac:	ldrd	r4, [sp]
    5bb0:	ldr	r6, [sp, #8]
    5bb4:	ldr	lr, [sp, #12]
    5bb8:	add	sp, sp, #16
    5bbc:	b	4aa8 <gen_ipfchostop>
    5bc0:	mov	r1, r4
    5bc4:	add	sp, sp, #8
    5bc8:	ldrd	r4, [sp]
    5bcc:	ldr	r6, [sp, #8]
    5bd0:	ldr	lr, [sp, #12]
    5bd4:	add	sp, sp, #16
    5bd8:	b	49d8 <gen_thostop>
    5bdc:	ldr	r0, [pc, #12]	; 5bf0 <sf_gen_ecode+0x1b4>
    5be0:	add	r0, pc, r0
    5be4:	bl	2210 <sf_bpf_error>
    5be8:	.word	0x0002b8ec
    5bec:	.word	0x0000d660
    5bf0:	.word	0x0000d654

00005bf4 <sf_append>:
    5bf4:	b	5bfc <sf_append+0x8>
    5bf8:	mov	r0, r3
    5bfc:	ldr	r3, [r0, #16]
    5c00:	cmp	r3, #0
    5c04:	bne	5bf8 <sf_append+0x4>
    5c08:	str	r1, [r0, #16]
    5c0c:	bx	lr

00005c10 <sf_gen_relation>:
    5c10:	strd	r4, [sp, #-32]!	; 0xffffffe0
    5c14:	mov	r5, r1
    5c18:	strd	r6, [sp, #8]
    5c1c:	mov	r6, r2
    5c20:	str	sl, [sp, #24]
    5c24:	mov	sl, r0
    5c28:	mov	r0, #20
    5c2c:	strd	r8, [sp, #16]
    5c30:	mov	r9, r3
    5c34:	str	lr, [sp, #28]
    5c38:	bl	2250 <newchunk>
    5c3c:	mov	r7, r0
    5c40:	mov	r3, #97	; 0x61
    5c44:	mov	r0, #20
    5c48:	str	r3, [r7]
    5c4c:	ldr	r3, [r6, #8]
    5c50:	str	r3, [r7, #12]
    5c54:	bl	2250 <newchunk>
    5c58:	mov	r3, #96	; 0x60
    5c5c:	cmp	sl, #16
    5c60:	mov	r8, r0
    5c64:	str	r3, [r0]
    5c68:	ldr	r3, [r5, #8]
    5c6c:	str	r3, [r0, #12]
    5c70:	beq	5d7c <sf_gen_relation+0x16c>
    5c74:	mov	r0, #208	; 0xd0
    5c78:	orr	sl, sl, #13
    5c7c:	bl	2250 <newchunk>
    5c80:	mov	r4, r0
    5c84:	str	sl, [r0, #8]
    5c88:	str	r0, [r4, #96]	; 0x60
    5c8c:	cmp	r9, #0
    5c90:	beq	5ca4 <sf_gen_relation+0x94>
    5c94:	ldr	r3, [r4, #44]	; 0x2c
    5c98:	clz	r3, r3
    5c9c:	lsr	r3, r3, #5
    5ca0:	str	r3, [r4, #44]	; 0x2c
    5ca4:	mov	r0, r7
    5ca8:	b	5cb0 <sf_gen_relation+0xa0>
    5cac:	mov	r0, r3
    5cb0:	ldr	r3, [r0, #16]
    5cb4:	cmp	r3, #0
    5cb8:	bne	5cac <sf_gen_relation+0x9c>
    5cbc:	str	r8, [r0, #16]
    5cc0:	ldr	r0, [r6, #4]
    5cc4:	b	5ccc <sf_gen_relation+0xbc>
    5cc8:	mov	r0, r3
    5ccc:	ldr	r3, [r0, #16]
    5cd0:	cmp	r3, #0
    5cd4:	bne	5cc8 <sf_gen_relation+0xb8>
    5cd8:	str	r7, [r0, #16]
    5cdc:	ldr	r0, [r5, #4]
    5ce0:	ldr	r2, [r6, #4]
    5ce4:	b	5cec <sf_gen_relation+0xdc>
    5ce8:	mov	r0, r3
    5cec:	ldr	r3, [r0, #16]
    5cf0:	cmp	r3, #0
    5cf4:	bne	5ce8 <sf_gen_relation+0xd8>
    5cf8:	str	r2, [r0, #16]
    5cfc:	ldr	r1, [r5, #4]
    5d00:	ldr	r2, [pc, #192]	; 5dc8 <sf_gen_relation+0x1b8>
    5d04:	str	r1, [r4, #4]
    5d08:	ldr	r1, [r5, #8]
    5d0c:	add	r2, pc, r2
    5d10:	add	r1, r2, r1, lsl #2
    5d14:	str	r3, [r1, #792]	; 0x318
    5d18:	ldr	r1, [r6, #8]
    5d1c:	add	r2, r2, r1, lsl #2
    5d20:	str	r3, [r2, #792]	; 0x318
    5d24:	ldr	r0, [r5]
    5d28:	cmp	r0, #0
    5d2c:	beq	5d6c <sf_gen_relation+0x15c>
    5d30:	ldr	r5, [r6]
    5d34:	cmp	r5, #0
    5d38:	beq	5d48 <sf_gen_relation+0x138>
    5d3c:	mov	r1, r5
    5d40:	bl	3a88 <sf_gen_and>
    5d44:	mov	r0, r5
    5d48:	mov	r1, r4
    5d4c:	bl	3a88 <sf_gen_and>
    5d50:	mov	r0, r4
    5d54:	ldrd	r4, [sp]
    5d58:	ldrd	r6, [sp, #8]
    5d5c:	ldrd	r8, [sp, #16]
    5d60:	ldr	sl, [sp, #24]
    5d64:	add	sp, sp, #28
    5d68:	pop	{pc}		; (ldr pc, [sp], #4)
    5d6c:	ldr	r0, [r6]
    5d70:	cmp	r0, #0
    5d74:	beq	5d50 <sf_gen_relation+0x140>
    5d78:	b	5d48 <sf_gen_relation+0x138>
    5d7c:	mov	r0, #20
    5d80:	bl	2250 <newchunk>
    5d84:	mov	sl, r0
    5d88:	mov	r3, #28
    5d8c:	mov	r0, #208	; 0xd0
    5d90:	str	r3, [sl]
    5d94:	bl	2250 <newchunk>
    5d98:	mov	r4, r0
    5d9c:	mov	r3, #21
    5da0:	mov	r2, r8
    5da4:	str	r3, [r0, #8]
    5da8:	str	r0, [r4, #96]	; 0x60
    5dac:	b	5db4 <sf_gen_relation+0x1a4>
    5db0:	mov	r2, r3
    5db4:	ldr	r3, [r2, #16]
    5db8:	cmp	r3, #0
    5dbc:	bne	5db0 <sf_gen_relation+0x1a0>
    5dc0:	str	sl, [r2, #16]
    5dc4:	b	5c8c <sf_gen_relation+0x7c>
    5dc8:	.word	0x0002b654

00005dcc <sf_gen_loadlen>:
    5dcc:	strd	r4, [sp, #-16]!
    5dd0:	str	r6, [sp, #8]
    5dd4:	str	lr, [sp, #12]
    5dd8:	bl	24f0 <alloc_reg>
    5ddc:	mov	r6, r0
    5de0:	mov	r0, #12
    5de4:	bl	2250 <newchunk>
    5de8:	mov	r4, r0
    5dec:	mov	r0, #20
    5df0:	bl	2250 <newchunk>
    5df4:	mov	r5, r0
    5df8:	mov	r3, #128	; 0x80
    5dfc:	mov	r0, #20
    5e00:	str	r3, [r5]
    5e04:	bl	2250 <newchunk>
    5e08:	mov	r3, r0
    5e0c:	mov	r2, #2
    5e10:	mov	r0, r4
    5e14:	str	r2, [r3]
    5e18:	str	r3, [r5, #16]
    5e1c:	str	r6, [r3, #12]
    5e20:	stmib	r4, {r5, r6}
    5e24:	ldrd	r4, [sp]
    5e28:	ldr	r6, [sp, #8]
    5e2c:	add	sp, sp, #12
    5e30:	pop	{pc}		; (ldr pc, [sp], #4)

00005e34 <sf_gen_loadi>:
    5e34:	strd	r4, [sp, #-24]!	; 0xffffffe8
    5e38:	strd	r6, [sp, #8]
    5e3c:	mov	r7, r0
    5e40:	mov	r0, #12
    5e44:	str	r8, [sp, #16]
    5e48:	str	lr, [sp, #20]
    5e4c:	bl	2250 <newchunk>
    5e50:	mov	r5, r0
    5e54:	bl	24f0 <alloc_reg>
    5e58:	mov	r6, r0
    5e5c:	mov	r0, #20
    5e60:	bl	2250 <newchunk>
    5e64:	mov	r4, r0
    5e68:	mov	r3, #0
    5e6c:	mov	r0, #20
    5e70:	str	r3, [r4]
    5e74:	str	r7, [r4, #12]
    5e78:	bl	2250 <newchunk>
    5e7c:	mov	r3, r0
    5e80:	mov	r2, #2
    5e84:	mov	r0, r5
    5e88:	str	r2, [r3]
    5e8c:	str	r3, [r4, #16]
    5e90:	str	r6, [r3, #12]
    5e94:	stmib	r5, {r4, r6}
    5e98:	ldrd	r4, [sp]
    5e9c:	ldrd	r6, [sp, #8]
    5ea0:	ldr	r8, [sp, #16]
    5ea4:	add	sp, sp, #20
    5ea8:	pop	{pc}		; (ldr pc, [sp], #4)

00005eac <sf_gen_neg>:
    5eac:	strd	r4, [sp, #-16]!
    5eb0:	mov	r5, r0
    5eb4:	mov	r0, #20
    5eb8:	str	r6, [sp, #8]
    5ebc:	str	lr, [sp, #12]
    5ec0:	bl	2250 <newchunk>
    5ec4:	mov	r3, #96	; 0x60
    5ec8:	mov	r2, r0
    5ecc:	str	r3, [r0]
    5ed0:	ldr	r3, [r5, #8]
    5ed4:	str	r3, [r0, #12]
    5ed8:	ldr	r3, [r5, #4]
    5edc:	b	5ee4 <sf_gen_neg+0x38>
    5ee0:	mov	r3, r4
    5ee4:	ldr	r4, [r3, #16]
    5ee8:	cmp	r4, #0
    5eec:	bne	5ee0 <sf_gen_neg+0x34>
    5ef0:	mov	r0, #20
    5ef4:	str	r2, [r3, #16]
    5ef8:	bl	2250 <newchunk>
    5efc:	mov	r3, #132	; 0x84
    5f00:	mov	r1, r0
    5f04:	str	r3, [r0]
    5f08:	str	r4, [r0, #12]
    5f0c:	ldr	r2, [r5, #4]
    5f10:	b	5f18 <sf_gen_neg+0x6c>
    5f14:	mov	r2, r3
    5f18:	ldr	r3, [r2, #16]
    5f1c:	cmp	r3, #0
    5f20:	bne	5f14 <sf_gen_neg+0x68>
    5f24:	mov	r0, #20
    5f28:	str	r1, [r2, #16]
    5f2c:	bl	2250 <newchunk>
    5f30:	mov	r3, #2
    5f34:	mov	r1, r0
    5f38:	str	r3, [r0]
    5f3c:	ldr	r3, [r5, #8]
    5f40:	str	r3, [r0, #12]
    5f44:	ldr	r2, [r5, #4]
    5f48:	b	5f50 <sf_gen_neg+0xa4>
    5f4c:	mov	r2, r3
    5f50:	ldr	r3, [r2, #16]
    5f54:	cmp	r3, #0
    5f58:	bne	5f4c <sf_gen_neg+0xa0>
    5f5c:	str	r1, [r2, #16]
    5f60:	mov	r0, r5
    5f64:	ldrd	r4, [sp]
    5f68:	ldr	r6, [sp, #8]
    5f6c:	add	sp, sp, #12
    5f70:	pop	{pc}		; (ldr pc, [sp], #4)

00005f74 <sf_gen_arth>:
    5f74:	strd	r4, [sp, #-24]!	; 0xffffffe8
    5f78:	mov	r4, r1
    5f7c:	mov	r5, r2
    5f80:	strd	r6, [sp, #8]
    5f84:	str	r8, [sp, #16]
    5f88:	mov	r8, r0
    5f8c:	mov	r0, #20
    5f90:	str	lr, [sp, #20]
    5f94:	orr	r8, r8, #12
    5f98:	bl	2250 <newchunk>
    5f9c:	mov	r6, r0
    5fa0:	mov	r3, #97	; 0x61
    5fa4:	mov	r0, #20
    5fa8:	str	r3, [r6]
    5fac:	ldr	r3, [r5, #8]
    5fb0:	str	r3, [r6, #12]
    5fb4:	bl	2250 <newchunk>
    5fb8:	mov	r7, r0
    5fbc:	mov	r3, #96	; 0x60
    5fc0:	mov	r0, #20
    5fc4:	str	r3, [r7]
    5fc8:	ldr	r3, [r4, #8]
    5fcc:	str	r3, [r7, #12]
    5fd0:	bl	2250 <newchunk>
    5fd4:	mov	r1, r7
    5fd8:	str	r8, [r0]
    5fdc:	b	5fe4 <sf_gen_arth+0x70>
    5fe0:	mov	r1, r3
    5fe4:	ldr	r3, [r1, #16]
    5fe8:	cmp	r3, #0
    5fec:	bne	5fe0 <sf_gen_arth+0x6c>
    5ff0:	str	r0, [r1, #16]
    5ff4:	mov	r0, r6
    5ff8:	b	6000 <sf_gen_arth+0x8c>
    5ffc:	mov	r0, r3
    6000:	ldr	r3, [r0, #16]
    6004:	cmp	r3, #0
    6008:	bne	5ffc <sf_gen_arth+0x88>
    600c:	str	r7, [r0, #16]
    6010:	ldr	r0, [r5, #4]
    6014:	b	601c <sf_gen_arth+0xa8>
    6018:	mov	r0, r3
    601c:	ldr	r3, [r0, #16]
    6020:	cmp	r3, #0
    6024:	bne	6018 <sf_gen_arth+0xa4>
    6028:	str	r6, [r0, #16]
    602c:	ldr	r0, [r4, #4]
    6030:	ldr	r2, [r5, #4]
    6034:	b	603c <sf_gen_arth+0xc8>
    6038:	mov	r0, r3
    603c:	ldr	r3, [r0, #16]
    6040:	cmp	r3, #0
    6044:	bne	6038 <sf_gen_arth+0xc4>
    6048:	ldr	r1, [pc, #112]	; 60c0 <sf_gen_arth+0x14c>
    604c:	str	r2, [r0, #16]
    6050:	mov	r0, #20
    6054:	ldr	r2, [r4, #8]
    6058:	add	r1, pc, r1
    605c:	add	r2, r1, r2, lsl #2
    6060:	str	r3, [r2, #792]	; 0x318
    6064:	ldr	r2, [r5, #8]
    6068:	add	r1, r1, r2, lsl #2
    606c:	str	r3, [r1, #792]	; 0x318
    6070:	bl	2250 <newchunk>
    6074:	mov	r3, #2
    6078:	mov	r5, r0
    607c:	str	r3, [r0]
    6080:	bl	24f0 <alloc_reg>
    6084:	str	r0, [r5, #12]
    6088:	str	r0, [r4, #8]
    608c:	ldr	r2, [r4, #4]
    6090:	b	6098 <sf_gen_arth+0x124>
    6094:	mov	r2, r3
    6098:	ldr	r3, [r2, #16]
    609c:	cmp	r3, #0
    60a0:	bne	6094 <sf_gen_arth+0x120>
    60a4:	str	r5, [r2, #16]
    60a8:	mov	r0, r4
    60ac:	ldrd	r4, [sp]
    60b0:	ldrd	r6, [sp, #8]
    60b4:	ldr	r8, [sp, #16]
    60b8:	add	sp, sp, #20
    60bc:	pop	{pc}		; (ldr pc, [sp], #4)
    60c0:	.word	0x0002b308

000060c4 <sf_gen_greater>:
    60c4:	strd	r4, [sp, #-16]!
    60c8:	mov	r5, r0
    60cc:	mov	r0, #20
    60d0:	str	r6, [sp, #8]
    60d4:	str	lr, [sp, #12]
    60d8:	bl	2250 <newchunk>
    60dc:	mov	r4, r0
    60e0:	mov	r3, #128	; 0x80
    60e4:	mov	r0, #208	; 0xd0
    60e8:	str	r3, [r4]
    60ec:	bl	2250 <newchunk>
    60f0:	mov	r3, r0
    60f4:	mov	r2, #53	; 0x35
    60f8:	str	r4, [r0, #4]
    60fc:	str	r2, [r0, #8]
    6100:	str	r5, [r0, #20]
    6104:	str	r0, [r3, #96]	; 0x60
    6108:	ldrd	r4, [sp]
    610c:	ldr	r6, [sp, #8]
    6110:	add	sp, sp, #12
    6114:	pop	{pc}		; (ldr pc, [sp], #4)

00006118 <sf_gen_less>:
    6118:	strd	r4, [sp, #-16]!
    611c:	mov	r5, r0
    6120:	mov	r0, #20
    6124:	str	r6, [sp, #8]
    6128:	str	lr, [sp, #12]
    612c:	bl	2250 <newchunk>
    6130:	mov	r4, r0
    6134:	mov	r3, #128	; 0x80
    6138:	mov	r0, #208	; 0xd0
    613c:	str	r3, [r4]
    6140:	bl	2250 <newchunk>
    6144:	ldr	r2, [r0, #44]	; 0x2c
    6148:	mov	r3, r0
    614c:	mov	r1, #37	; 0x25
    6150:	str	r4, [r0, #4]
    6154:	str	r1, [r0, #8]
    6158:	str	r5, [r0, #20]
    615c:	clz	r2, r2
    6160:	lsr	r2, r2, #5
    6164:	str	r2, [r0, #44]	; 0x2c
    6168:	str	r0, [r3, #96]	; 0x60
    616c:	ldrd	r4, [sp]
    6170:	ldr	r6, [sp, #8]
    6174:	add	sp, sp, #12
    6178:	pop	{pc}		; (ldr pc, [sp], #4)

0000617c <sf_gen_byteop>:
    617c:	cmp	r0, #61	; 0x3d
    6180:	strd	r4, [sp, #-12]!
    6184:	mov	r4, r2
    6188:	str	lr, [sp, #8]
    618c:	sub	sp, sp, #20
    6190:	beq	626c <sf_gen_byteop+0xf0>
    6194:	bgt	61f0 <sf_gen_byteop+0x74>
    6198:	cmp	r0, #38	; 0x26
    619c:	bne	6214 <sf_gen_byteop+0x98>
    61a0:	mov	r0, #20
    61a4:	bl	2250 <newchunk>
    61a8:	mov	r5, r0
    61ac:	mov	r3, #84	; 0x54
    61b0:	str	r3, [r0]
    61b4:	mov	r0, #208	; 0xd0
    61b8:	str	r4, [r5, #12]
    61bc:	bl	2250 <newchunk>
    61c0:	ldr	r3, [r0, #44]	; 0x2c
    61c4:	mov	r2, #21
    61c8:	str	r5, [r0, #4]
    61cc:	str	r2, [r0, #8]
    61d0:	str	r0, [r0, #96]	; 0x60
    61d4:	clz	r3, r3
    61d8:	lsr	r3, r3, #5
    61dc:	str	r3, [r0, #44]	; 0x2c
    61e0:	add	sp, sp, #20
    61e4:	ldrd	r4, [sp]
    61e8:	add	sp, sp, #8
    61ec:	pop	{pc}		; (ldr pc, [sp], #4)
    61f0:	cmp	r0, #62	; 0x3e
    61f4:	bne	624c <sf_gen_byteop+0xd0>
    61f8:	mov	r0, r1
    61fc:	mov	r1, #16
    6200:	add	sp, sp, #20
    6204:	ldrd	r4, [sp]
    6208:	ldr	lr, [sp, #8]
    620c:	add	sp, sp, #12
    6210:	b	2730 <gen_cmp_gt.constprop.10>
    6214:	cmp	r0, #60	; 0x3c
    6218:	bne	628c <sf_gen_byteop+0x110>
    621c:	mov	ip, #1
    6220:	mov	r2, #48	; 0x30
    6224:	mov	r0, ip
    6228:	mvn	r3, #0
    622c:	stm	sp, {r2, ip}
    6230:	mov	r2, #16
    6234:	str	r4, [sp, #8]
    6238:	bl	2b74 <gen_ncmp>
    623c:	add	sp, sp, #20
    6240:	ldrd	r4, [sp]
    6244:	add	sp, sp, #8
    6248:	pop	{pc}		; (ldr pc, [sp], #4)
    624c:	cmp	r0, #124	; 0x7c
    6250:	bne	628c <sf_gen_byteop+0x110>
    6254:	mov	r0, #20
    6258:	bl	2250 <newchunk>
    625c:	mov	r3, #68	; 0x44
    6260:	mov	r5, r0
    6264:	str	r3, [r0]
    6268:	b	61b4 <sf_gen_byteop+0x38>
    626c:	mov	r3, r2
    6270:	mov	r0, #1
    6274:	mov	r2, #16
    6278:	add	sp, sp, #20
    627c:	ldrd	r4, [sp]
    6280:	ldr	lr, [sp, #8]
    6284:	add	sp, sp, #12
    6288:	b	2c2c <gen_cmp>
    628c:	bl	ebc <abort@plt>

00006290 <sf_gen_pf_ifname>:
    6290:	ldr	r0, [pc, #12]	; 62a4 <sf_gen_pf_ifname+0x14>
    6294:	str	r4, [sp, #-8]!
    6298:	str	lr, [sp, #4]
    629c:	add	r0, pc, r0
    62a0:	bl	2210 <sf_bpf_error>
    62a4:	.word	0x0000cfc8

000062a8 <sf_gen_pf_ruleset>:
    62a8:	ldr	r0, [pc, #12]	; 62bc <sf_gen_pf_ruleset+0x14>
    62ac:	str	r4, [sp, #-8]!
    62b0:	str	lr, [sp, #4]
    62b4:	add	r0, pc, r0
    62b8:	bl	2210 <sf_bpf_error>
    62bc:	.word	0x0000cfd8

000062c0 <sf_gen_pf_rnr>:
    62c0:	ldr	r0, [pc, #12]	; 62d4 <sf_gen_pf_rnr+0x14>
    62c4:	str	r4, [sp, #-8]!
    62c8:	str	lr, [sp, #4]
    62cc:	add	r0, pc, r0
    62d0:	bl	2210 <sf_bpf_error>
    62d4:	.word	0x0000cfc0

000062d8 <sf_gen_pf_srnr>:
    62d8:	ldr	r0, [pc, #12]	; 62ec <sf_gen_pf_srnr+0x14>
    62dc:	str	r4, [sp, #-8]!
    62e0:	str	lr, [sp, #4]
    62e4:	add	r0, pc, r0
    62e8:	bl	2210 <sf_bpf_error>
    62ec:	.word	0x0000cfa8

000062f0 <sf_gen_pf_reason>:
    62f0:	ldr	r0, [pc, #12]	; 6304 <sf_gen_pf_reason+0x14>
    62f4:	str	r4, [sp, #-8]!
    62f8:	str	lr, [sp, #4]
    62fc:	add	r0, pc, r0
    6300:	bl	2210 <sf_bpf_error>
    6304:	.word	0x0000cf90

00006308 <sf_gen_pf_action>:
    6308:	ldr	r0, [pc, #12]	; 631c <sf_gen_pf_action+0x14>
    630c:	str	r4, [sp, #-8]!
    6310:	str	lr, [sp, #4]
    6314:	add	r0, pc, r0
    6318:	bl	2210 <sf_bpf_error>
    631c:	.word	0x0000cf78

00006320 <sf_gen_p80211_type>:
    6320:	ldr	r2, [pc, #108]	; 6394 <sf_gen_p80211_type+0x74>
    6324:	push	{lr}		; (str lr, [sp, #-4]!)
    6328:	sub	sp, sp, #20
    632c:	add	r2, pc, r2
    6330:	ldr	r2, [r2, #856]	; 0x358
    6334:	cmp	r2, #119	; 0x77
    6338:	beq	6350 <sf_gen_p80211_type+0x30>
    633c:	ble	6380 <sf_gen_p80211_type+0x60>
    6340:	cmp	r2, #127	; 0x7f
    6344:	beq	6350 <sf_gen_p80211_type+0x30>
    6348:	cmp	r2, #163	; 0xa3
    634c:	bne	6388 <sf_gen_p80211_type+0x68>
    6350:	mov	ip, #0
    6354:	mov	lr, #16
    6358:	mov	r3, r1
    635c:	mov	r2, lr
    6360:	mov	r1, ip
    6364:	str	lr, [sp]
    6368:	str	ip, [sp, #4]
    636c:	str	r0, [sp, #8]
    6370:	mov	r0, #1
    6374:	bl	2b74 <gen_ncmp>
    6378:	add	sp, sp, #20
    637c:	pop	{pc}		; (ldr pc, [sp], #4)
    6380:	cmp	r2, #105	; 0x69
    6384:	beq	6350 <sf_gen_p80211_type+0x30>
    6388:	ldr	r0, [pc, #8]	; 6398 <sf_gen_p80211_type+0x78>
    638c:	add	r0, pc, r0
    6390:	bl	2210 <sf_bpf_error>
    6394:	.word	0x0002b034
    6398:	.word	0x0000cf38

0000639c <sf_gen_p80211_fcdir>:
    639c:	ldr	r3, [pc, #104]	; 640c <sf_gen_p80211_fcdir+0x70>
    63a0:	push	{lr}		; (str lr, [sp, #-4]!)
    63a4:	sub	sp, sp, #20
    63a8:	add	r3, pc, r3
    63ac:	ldr	r3, [r3, #856]	; 0x358
    63b0:	cmp	r3, #119	; 0x77
    63b4:	beq	63cc <sf_gen_p80211_fcdir+0x30>
    63b8:	ble	63f8 <sf_gen_p80211_fcdir+0x5c>
    63bc:	cmp	r3, #127	; 0x7f
    63c0:	beq	63cc <sf_gen_p80211_fcdir+0x30>
    63c4:	cmp	r3, #163	; 0xa3
    63c8:	bne	6400 <sf_gen_p80211_fcdir+0x64>
    63cc:	mov	ip, #0
    63d0:	mov	r3, #16
    63d4:	mov	r1, #1
    63d8:	mov	r2, r3
    63dc:	stm	sp, {r3, ip}
    63e0:	mov	r3, #3
    63e4:	str	r0, [sp, #8]
    63e8:	mov	r0, r1
    63ec:	bl	2b74 <gen_ncmp>
    63f0:	add	sp, sp, #20
    63f4:	pop	{pc}		; (ldr pc, [sp], #4)
    63f8:	cmp	r3, #105	; 0x69
    63fc:	beq	63cc <sf_gen_p80211_fcdir+0x30>
    6400:	ldr	r0, [pc, #8]	; 6410 <sf_gen_p80211_fcdir+0x74>
    6404:	add	r0, pc, r0
    6408:	bl	2210 <sf_bpf_error>
    640c:	.word	0x0002afb8
    6410:	.word	0x0000cef4

00006414 <sf_gen_acode>:
    6414:	ldr	r3, [pc, #96]	; 647c <sf_gen_acode+0x68>
    6418:	push	{lr}		; (str lr, [sp, #-4]!)
    641c:	sub	sp, sp, #12
    6420:	str	r1, [sp, #4]
    6424:	add	r3, pc, r3
    6428:	ldr	r3, [r3, #856]	; 0x358
    642c:	cmp	r3, #7
    6430:	beq	643c <sf_gen_acode+0x28>
    6434:	cmp	r3, #129	; 0x81
    6438:	bne	6470 <sf_gen_acode+0x5c>
    643c:	ldrb	r3, [sp, #4]
    6440:	cmp	r3, #1
    6444:	bhi	6464 <sf_gen_acode+0x50>
    6448:	ldrb	r3, [sp, #5]
    644c:	cmp	r3, #1
    6450:	bne	6464 <sf_gen_acode+0x50>
    6454:	ldrb	r1, [sp, #6]
    6458:	add	sp, sp, #12
    645c:	pop	{lr}		; (ldr lr, [sp], #4)
    6460:	b	4c68 <gen_ahostop>
    6464:	ldr	r0, [pc, #20]	; 6480 <sf_gen_acode+0x6c>
    6468:	add	r0, pc, r0
    646c:	bl	2210 <sf_bpf_error>
    6470:	ldr	r0, [pc, #12]	; 6484 <sf_gen_acode+0x70>
    6474:	add	r0, pc, r0
    6478:	bl	2210 <sf_bpf_error>
    647c:	.word	0x0002af3c
    6480:	.word	0x0000cec4
    6484:	.word	0x0000cee4

00006488 <sf_gen_vlan>:
    6488:	ldr	r2, [pc, #216]	; 6568 <sf_gen_vlan+0xe0>
    648c:	strd	r4, [sp, #-20]!	; 0xffffffec
    6490:	strd	r6, [sp, #8]
    6494:	str	lr, [sp, #16]
    6498:	sub	sp, sp, #20
    649c:	add	r2, pc, r2
    64a0:	ldr	r5, [r2, #4]
    64a4:	cmp	r5, #0
    64a8:	bne	655c <sf_gen_vlan+0xd4>
    64ac:	ldr	r3, [pc, #184]	; 656c <sf_gen_vlan+0xe4>
    64b0:	mov	r7, r0
    64b4:	add	r3, pc, r3
    64b8:	ldr	r0, [r3, #856]	; 0x358
    64bc:	ldr	r1, [r3, #872]	; 0x368
    64c0:	cmp	r0, #1
    64c4:	str	r1, [r2]
    64c8:	bne	654c <sf_gen_vlan+0xc4>
    64cc:	ldr	r4, [r3, #952]	; 0x3b8
    64d0:	mov	r2, #8
    64d4:	mov	r3, #33024	; 0x8100
    64d8:	mov	r1, r4
    64dc:	bl	2c2c <gen_cmp>
    64e0:	cmp	r7, #0
    64e4:	mov	r6, r0
    64e8:	blt	6518 <sf_gen_vlan+0x90>
    64ec:	mov	r0, #16
    64f0:	mov	r1, r5
    64f4:	movw	r3, #4095	; 0xfff
    64f8:	mov	r2, #8
    64fc:	stm	sp, {r0, r5, r7}
    6500:	mov	r0, #2
    6504:	bl	2b74 <gen_ncmp>
    6508:	mov	r1, r0
    650c:	mov	r0, r6
    6510:	mov	r6, r1
    6514:	bl	3a88 <sf_gen_and>
    6518:	ldr	r3, [pc, #80]	; 6570 <sf_gen_vlan+0xe8>
    651c:	add	r4, r4, #4
    6520:	mov	r0, r6
    6524:	add	r3, pc, r3
    6528:	ldr	r2, [r3, #876]	; 0x36c
    652c:	str	r4, [r3, #952]	; 0x3b8
    6530:	add	r2, r2, #4
    6534:	str	r2, [r3, #876]	; 0x36c
    6538:	add	sp, sp, #20
    653c:	ldrd	r4, [sp]
    6540:	ldrd	r6, [sp, #8]
    6544:	add	sp, sp, #16
    6548:	pop	{pc}		; (ldr pc, [sp], #4)
    654c:	mov	r1, r0
    6550:	ldr	r0, [pc, #28]	; 6574 <sf_gen_vlan+0xec>
    6554:	add	r0, pc, r0
    6558:	bl	2210 <sf_bpf_error>
    655c:	ldr	r0, [pc, #20]	; 6578 <sf_gen_vlan+0xf0>
    6560:	add	r0, pc, r0
    6564:	bl	2210 <sf_bpf_error>
    6568:	.word	0x0002add4
    656c:	.word	0x0002aeac
    6570:	.word	0x0002ae3c
    6574:	.word	0x0000ce40
    6578:	.word	0x0000ce18

0000657c <sf_gen_atmfield_code>:
    657c:	sub	r0, r0, #51	; 0x33
    6580:	mov	ip, r1
    6584:	push	{lr}		; (str lr, [sp, #-4]!)
    6588:	mov	lr, r3
    658c:	sub	sp, sp, #20
    6590:	cmp	r0, #4
    6594:	addls	pc, pc, r0, lsl #2
    6598:	b	6610 <sf_gen_atmfield_code+0x94>
    659c:	b	65f0 <sf_gen_atmfield_code+0x74>
    65a0:	b	6614 <sf_gen_atmfield_code+0x98>
    65a4:	b	6654 <sf_gen_atmfield_code+0xd8>
    65a8:	b	6670 <sf_gen_atmfield_code+0xf4>
    65ac:	b	65b0 <sf_gen_atmfield_code+0x34>
    65b0:	ldr	r3, [pc, #248]	; 66b0 <sf_gen_atmfield_code+0x134>
    65b4:	add	r3, pc, r3
    65b8:	ldr	r1, [r3, #904]	; 0x388
    65bc:	cmp	r1, #0
    65c0:	beq	668c <sf_gen_atmfield_code+0x110>
    65c4:	ldr	r1, [r3, #920]	; 0x398
    65c8:	cmn	r1, #1
    65cc:	beq	6610 <sf_gen_atmfield_code+0x94>
    65d0:	mvn	r3, #0
    65d4:	mov	r0, #1
    65d8:	stm	sp, {r2, lr}
    65dc:	mov	r2, #16
    65e0:	str	ip, [sp, #8]
    65e4:	bl	2b74 <gen_ncmp>
    65e8:	add	sp, sp, #20
    65ec:	pop	{pc}		; (ldr pc, [sp], #4)
    65f0:	ldr	r3, [pc, #188]	; 66b4 <sf_gen_atmfield_code+0x138>
    65f4:	add	r3, pc, r3
    65f8:	ldr	r1, [r3, #904]	; 0x388
    65fc:	cmp	r1, #0
    6600:	beq	66a4 <sf_gen_atmfield_code+0x128>
    6604:	ldr	r1, [r3, #912]	; 0x390
    6608:	cmn	r1, #1
    660c:	bne	65d0 <sf_gen_atmfield_code+0x54>
    6610:	bl	ebc <abort@plt>
    6614:	ldr	r3, [pc, #156]	; 66b8 <sf_gen_atmfield_code+0x13c>
    6618:	add	r3, pc, r3
    661c:	ldr	r1, [r3, #904]	; 0x388
    6620:	cmp	r1, #0
    6624:	beq	6698 <sf_gen_atmfield_code+0x11c>
    6628:	ldr	r1, [r3, #916]	; 0x394
    662c:	cmn	r1, #1
    6630:	beq	6610 <sf_gen_atmfield_code+0x94>
    6634:	mvn	r3, #0
    6638:	mov	r0, #1
    663c:	stm	sp, {r2, lr}
    6640:	mov	r2, #8
    6644:	str	ip, [sp, #8]
    6648:	bl	2b74 <gen_ncmp>
    664c:	add	sp, sp, #20
    6650:	pop	{pc}		; (ldr pc, [sp], #4)
    6654:	ldr	r3, [pc, #96]	; 66bc <sf_gen_atmfield_code+0x140>
    6658:	add	r3, pc, r3
    665c:	ldr	r1, [r3, #920]	; 0x398
    6660:	cmn	r1, #1
    6664:	beq	6610 <sf_gen_atmfield_code+0x94>
    6668:	mov	r3, #15
    666c:	b	65d4 <sf_gen_atmfield_code+0x58>
    6670:	ldr	r3, [pc, #72]	; 66c0 <sf_gen_atmfield_code+0x144>
    6674:	add	r3, pc, r3
    6678:	ldr	r1, [r3, #924]	; 0x39c
    667c:	cmn	r1, #1
    6680:	beq	6610 <sf_gen_atmfield_code+0x94>
    6684:	add	r1, r1, #5
    6688:	b	65d0 <sf_gen_atmfield_code+0x54>
    668c:	ldr	r0, [pc, #48]	; 66c4 <sf_gen_atmfield_code+0x148>
    6690:	add	r0, pc, r0
    6694:	bl	2210 <sf_bpf_error>
    6698:	ldr	r0, [pc, #40]	; 66c8 <sf_gen_atmfield_code+0x14c>
    669c:	add	r0, pc, r0
    66a0:	bl	2210 <sf_bpf_error>
    66a4:	ldr	r0, [pc, #32]	; 66cc <sf_gen_atmfield_code+0x150>
    66a8:	add	r0, pc, r0
    66ac:	bl	2210 <sf_bpf_error>
    66b0:	.word	0x0002adac
    66b4:	.word	0x0002ad6c
    66b8:	.word	0x0002ad48
    66bc:	.word	0x0002ad08
    66c0:	.word	0x0002acec
    66c4:	.word	0x0000cd6c
    66c8:	.word	0x0000cd40
    66cc:	.word	0x0000cd14

000066d0 <gen_linktype>:
    66d0:	ldr	r3, [pc, #3188]	; 734c <gen_linktype+0xc7c>
    66d4:	strd	r4, [sp, #-20]!	; 0xffffffec
    66d8:	mov	r4, r0
    66dc:	strd	r6, [sp, #8]
    66e0:	str	lr, [sp, #16]
    66e4:	sub	sp, sp, #20
    66e8:	add	r3, pc, r3
    66ec:	ldr	r3, [r3, #4]
    66f0:	cmp	r3, #0
    66f4:	beq	67c0 <gen_linktype+0xf0>
    66f8:	cmp	r0, #87	; 0x57
    66fc:	beq	678c <gen_linktype+0xbc>
    6700:	ble	6b7c <gen_linktype+0x4ac>
    6704:	cmp	r0, #2048	; 0x800
    6708:	bne	6780 <gen_linktype+0xb0>
    670c:	mov	ip, #1
    6710:	mov	r4, #16
    6714:	mov	r5, #0
    6718:	mov	r3, ip
    671c:	mov	r2, r4
    6720:	mvn	r1, #1
    6724:	mov	r0, #3
    6728:	strd	r4, [sp]
    672c:	str	ip, [sp, #8]
    6730:	bl	2b74 <gen_ncmp>
    6734:	mov	r6, r0
    6738:	mov	ip, #64	; 0x40
    673c:	mov	r1, r5
    6740:	mov	r2, r4
    6744:	strd	r4, [sp]
    6748:	mov	r3, #240	; 0xf0
    674c:	mov	r0, #3
    6750:	str	ip, [sp, #8]
    6754:	bl	2b74 <gen_ncmp>
    6758:	mov	r5, r0
    675c:	mov	r1, r0
    6760:	mov	r0, r6
    6764:	bl	3a88 <sf_gen_and>
    6768:	mov	r0, r5
    676c:	add	sp, sp, #20
    6770:	ldrd	r4, [sp]
    6774:	ldrd	r6, [sp, #8]
    6778:	add	sp, sp, #16
    677c:	pop	{pc}		; (ldr pc, [sp], #4)
    6780:	movw	r3, #34525	; 0x86dd
    6784:	cmp	r0, r3
    6788:	bne	6b84 <gen_linktype+0x4b4>
    678c:	mov	ip, #1
    6790:	mov	r4, #16
    6794:	mov	r5, #0
    6798:	mov	r3, ip
    679c:	mov	r2, r4
    67a0:	mvn	r1, #1
    67a4:	mov	r0, #3
    67a8:	strd	r4, [sp]
    67ac:	str	ip, [sp, #8]
    67b0:	bl	2b74 <gen_ncmp>
    67b4:	mov	r6, r0
    67b8:	mov	ip, #96	; 0x60
    67bc:	b	673c <gen_linktype+0x6c>
    67c0:	ldr	r1, [pc, #2952]	; 7350 <gen_linktype+0xc80>
    67c4:	add	r1, pc, r1
    67c8:	ldr	r3, [r1, #928]	; 0x3a0
    67cc:	cmp	r3, #0
    67d0:	bne	6ba8 <gen_linktype+0x4d8>
    67d4:	ldr	r2, [r1, #856]	; 0x358
    67d8:	cmp	r2, #229	; 0xe5
    67dc:	addls	pc, pc, r2, lsl #2
    67e0:	b	7008 <gen_linktype+0x938>
    67e4:	b	6f00 <gen_linktype+0x830>
    67e8:	b	6f30 <gen_linktype+0x860>
    67ec:	b	7008 <gen_linktype+0x938>
    67f0:	b	7008 <gen_linktype+0x938>
    67f4:	b	7008 <gen_linktype+0x938>
    67f8:	b	7008 <gen_linktype+0x938>
    67fc:	b	6b90 <gen_linktype+0x4c0>
    6800:	b	6f48 <gen_linktype+0x878>
    6804:	b	6fb8 <gen_linktype+0x8e8>
    6808:	b	6bd4 <gen_linktype+0x504>
    680c:	b	6b90 <gen_linktype+0x4c0>
    6810:	b	6b90 <gen_linktype+0x4c0>
    6814:	b	6fb8 <gen_linktype+0x8e8>
    6818:	b	7008 <gen_linktype+0x938>
    681c:	b	7008 <gen_linktype+0x938>
    6820:	b	6fb8 <gen_linktype+0x8e8>
    6824:	b	6c18 <gen_linktype+0x548>
    6828:	b	7008 <gen_linktype+0x938>
    682c:	b	7008 <gen_linktype+0x938>
    6830:	b	6b90 <gen_linktype+0x4c0>
    6834:	b	7008 <gen_linktype+0x938>
    6838:	b	7008 <gen_linktype+0x938>
    683c:	b	7008 <gen_linktype+0x938>
    6840:	b	7008 <gen_linktype+0x938>
    6844:	b	7008 <gen_linktype+0x938>
    6848:	b	7008 <gen_linktype+0x938>
    684c:	b	7008 <gen_linktype+0x938>
    6850:	b	7008 <gen_linktype+0x938>
    6854:	b	7008 <gen_linktype+0x938>
    6858:	b	7008 <gen_linktype+0x938>
    685c:	b	7008 <gen_linktype+0x938>
    6860:	b	7008 <gen_linktype+0x938>
    6864:	b	7008 <gen_linktype+0x938>
    6868:	b	7008 <gen_linktype+0x938>
    686c:	b	7008 <gen_linktype+0x938>
    6870:	b	7008 <gen_linktype+0x938>
    6874:	b	7008 <gen_linktype+0x938>
    6878:	b	7008 <gen_linktype+0x938>
    687c:	b	7008 <gen_linktype+0x938>
    6880:	b	7008 <gen_linktype+0x938>
    6884:	b	7008 <gen_linktype+0x938>
    6888:	b	7008 <gen_linktype+0x938>
    688c:	b	7008 <gen_linktype+0x938>
    6890:	b	7008 <gen_linktype+0x938>
    6894:	b	7008 <gen_linktype+0x938>
    6898:	b	7008 <gen_linktype+0x938>
    689c:	b	7008 <gen_linktype+0x938>
    68a0:	b	7008 <gen_linktype+0x938>
    68a4:	b	7008 <gen_linktype+0x938>
    68a8:	b	7008 <gen_linktype+0x938>
    68ac:	b	6bd4 <gen_linktype+0x504>
    68b0:	b	6bd4 <gen_linktype+0x504>
    68b4:	b	7008 <gen_linktype+0x938>
    68b8:	b	7008 <gen_linktype+0x938>
    68bc:	b	7008 <gen_linktype+0x938>
    68c0:	b	7008 <gen_linktype+0x938>
    68c4:	b	7008 <gen_linktype+0x938>
    68c8:	b	7008 <gen_linktype+0x938>
    68cc:	b	7008 <gen_linktype+0x938>
    68d0:	b	7008 <gen_linktype+0x938>
    68d4:	b	7008 <gen_linktype+0x938>
    68d8:	b	7008 <gen_linktype+0x938>
    68dc:	b	7008 <gen_linktype+0x938>
    68e0:	b	7008 <gen_linktype+0x938>
    68e4:	b	7008 <gen_linktype+0x938>
    68e8:	b	7008 <gen_linktype+0x938>
    68ec:	b	7008 <gen_linktype+0x938>
    68f0:	b	7008 <gen_linktype+0x938>
    68f4:	b	7008 <gen_linktype+0x938>
    68f8:	b	7008 <gen_linktype+0x938>
    68fc:	b	7008 <gen_linktype+0x938>
    6900:	b	7008 <gen_linktype+0x938>
    6904:	b	7008 <gen_linktype+0x938>
    6908:	b	7008 <gen_linktype+0x938>
    690c:	b	7008 <gen_linktype+0x938>
    6910:	b	7008 <gen_linktype+0x938>
    6914:	b	7008 <gen_linktype+0x938>
    6918:	b	7008 <gen_linktype+0x938>
    691c:	b	7008 <gen_linktype+0x938>
    6920:	b	7008 <gen_linktype+0x938>
    6924:	b	7008 <gen_linktype+0x938>
    6928:	b	7008 <gen_linktype+0x938>
    692c:	b	7008 <gen_linktype+0x938>
    6930:	b	7008 <gen_linktype+0x938>
    6934:	b	7008 <gen_linktype+0x938>
    6938:	b	7008 <gen_linktype+0x938>
    693c:	b	7008 <gen_linktype+0x938>
    6940:	b	7008 <gen_linktype+0x938>
    6944:	b	7008 <gen_linktype+0x938>
    6948:	b	7008 <gen_linktype+0x938>
    694c:	b	7008 <gen_linktype+0x938>
    6950:	b	7008 <gen_linktype+0x938>
    6954:	b	7008 <gen_linktype+0x938>
    6958:	b	7008 <gen_linktype+0x938>
    695c:	b	7008 <gen_linktype+0x938>
    6960:	b	7008 <gen_linktype+0x938>
    6964:	b	7008 <gen_linktype+0x938>
    6968:	b	7008 <gen_linktype+0x938>
    696c:	b	7008 <gen_linktype+0x938>
    6970:	b	7008 <gen_linktype+0x938>
    6974:	b	7008 <gen_linktype+0x938>
    6978:	b	7008 <gen_linktype+0x938>
    697c:	b	7008 <gen_linktype+0x938>
    6980:	b	7008 <gen_linktype+0x938>
    6984:	b	6c44 <gen_linktype+0x574>
    6988:	b	6c68 <gen_linktype+0x598>
    698c:	b	7008 <gen_linktype+0x938>
    6990:	b	6d00 <gen_linktype+0x630>
    6994:	b	6f00 <gen_linktype+0x830>
    6998:	b	6f00 <gen_linktype+0x830>
    699c:	b	7008 <gen_linktype+0x938>
    69a0:	b	7008 <gen_linktype+0x938>
    69a4:	b	7008 <gen_linktype+0x938>
    69a8:	b	6d7c <gen_linktype+0x6ac>
    69ac:	b	6e30 <gen_linktype+0x760>
    69b0:	b	7008 <gen_linktype+0x938>
    69b4:	b	7008 <gen_linktype+0x938>
    69b8:	b	7008 <gen_linktype+0x938>
    69bc:	b	7008 <gen_linktype+0x938>
    69c0:	b	6c68 <gen_linktype+0x598>
    69c4:	b	7008 <gen_linktype+0x938>
    69c8:	b	7008 <gen_linktype+0x938>
    69cc:	b	6b90 <gen_linktype+0x4c0>
    69d0:	b	6e44 <gen_linktype+0x774>
    69d4:	b	7008 <gen_linktype+0x938>
    69d8:	b	7008 <gen_linktype+0x938>
    69dc:	b	7008 <gen_linktype+0x938>
    69e0:	b	6c68 <gen_linktype+0x598>
    69e4:	b	7008 <gen_linktype+0x938>
    69e8:	b	6f48 <gen_linktype+0x878>
    69ec:	b	6e9c <gen_linktype+0x7cc>
    69f0:	b	6e9c <gen_linktype+0x7cc>
    69f4:	b	6e9c <gen_linktype+0x7cc>
    69f8:	b	6e9c <gen_linktype+0x7cc>
    69fc:	b	6e9c <gen_linktype+0x7cc>
    6a00:	b	6e9c <gen_linktype+0x7cc>
    6a04:	b	6e9c <gen_linktype+0x7cc>
    6a08:	b	6e9c <gen_linktype+0x7cc>
    6a0c:	b	7008 <gen_linktype+0x938>
    6a10:	b	70cc <gen_linktype+0x9fc>
    6a14:	b	70cc <gen_linktype+0x9fc>
    6a18:	b	7008 <gen_linktype+0x938>
    6a1c:	b	7008 <gen_linktype+0x938>
    6a20:	b	70b4 <gen_linktype+0x9e4>
    6a24:	b	70c0 <gen_linktype+0x9f0>
    6a28:	b	7008 <gen_linktype+0x938>
    6a2c:	b	7008 <gen_linktype+0x938>
    6a30:	b	7008 <gen_linktype+0x938>
    6a34:	b	7008 <gen_linktype+0x938>
    6a38:	b	7008 <gen_linktype+0x938>
    6a3c:	b	7008 <gen_linktype+0x938>
    6a40:	b	7008 <gen_linktype+0x938>
    6a44:	b	7008 <gen_linktype+0x938>
    6a48:	b	7008 <gen_linktype+0x938>
    6a4c:	b	7008 <gen_linktype+0x938>
    6a50:	b	7008 <gen_linktype+0x938>
    6a54:	b	7008 <gen_linktype+0x938>
    6a58:	b	7008 <gen_linktype+0x938>
    6a5c:	b	7008 <gen_linktype+0x938>
    6a60:	b	7008 <gen_linktype+0x938>
    6a64:	b	7008 <gen_linktype+0x938>
    6a68:	b	7008 <gen_linktype+0x938>
    6a6c:	b	7008 <gen_linktype+0x938>
    6a70:	b	6c68 <gen_linktype+0x598>
    6a74:	b	6e9c <gen_linktype+0x7cc>
    6a78:	b	7008 <gen_linktype+0x938>
    6a7c:	b	6bd4 <gen_linktype+0x504>
    6a80:	b	6e9c <gen_linktype+0x7cc>
    6a84:	b	6e9c <gen_linktype+0x7cc>
    6a88:	b	7008 <gen_linktype+0x938>
    6a8c:	b	7008 <gen_linktype+0x938>
    6a90:	b	7008 <gen_linktype+0x938>
    6a94:	b	7008 <gen_linktype+0x938>
    6a98:	b	7008 <gen_linktype+0x938>
    6a9c:	b	7008 <gen_linktype+0x938>
    6aa0:	b	7008 <gen_linktype+0x938>
    6aa4:	b	7008 <gen_linktype+0x938>
    6aa8:	b	7084 <gen_linktype+0x9b4>
    6aac:	b	6e9c <gen_linktype+0x7cc>
    6ab0:	b	6e9c <gen_linktype+0x7cc>
    6ab4:	b	6e9c <gen_linktype+0x7cc>
    6ab8:	b	6e9c <gen_linktype+0x7cc>
    6abc:	b	7090 <gen_linktype+0x9c0>
    6ac0:	b	6e9c <gen_linktype+0x7cc>
    6ac4:	b	7008 <gen_linktype+0x938>
    6ac8:	b	7008 <gen_linktype+0x938>
    6acc:	b	709c <gen_linktype+0x9cc>
    6ad0:	b	70a8 <gen_linktype+0x9d8>
    6ad4:	b	7008 <gen_linktype+0x938>
    6ad8:	b	709c <gen_linktype+0x9cc>
    6adc:	b	7024 <gen_linktype+0x954>
    6ae0:	b	7030 <gen_linktype+0x960>
    6ae4:	b	6c68 <gen_linktype+0x598>
    6ae8:	b	703c <gen_linktype+0x96c>
    6aec:	b	6e9c <gen_linktype+0x7cc>
    6af0:	b	7030 <gen_linktype+0x960>
    6af4:	b	7048 <gen_linktype+0x978>
    6af8:	b	7054 <gen_linktype+0x984>
    6afc:	b	7060 <gen_linktype+0x990>
    6b00:	b	706c <gen_linktype+0x99c>
    6b04:	b	6e9c <gen_linktype+0x7cc>
    6b08:	b	70a8 <gen_linktype+0x9d8>
    6b0c:	b	7078 <gen_linktype+0x9a8>
    6b10:	b	7008 <gen_linktype+0x938>
    6b14:	b	7008 <gen_linktype+0x938>
    6b18:	b	7008 <gen_linktype+0x938>
    6b1c:	b	7008 <gen_linktype+0x938>
    6b20:	b	7008 <gen_linktype+0x938>
    6b24:	b	7008 <gen_linktype+0x938>
    6b28:	b	7008 <gen_linktype+0x938>
    6b2c:	b	7008 <gen_linktype+0x938>
    6b30:	b	7008 <gen_linktype+0x938>
    6b34:	b	7008 <gen_linktype+0x938>
    6b38:	b	7008 <gen_linktype+0x938>
    6b3c:	b	7008 <gen_linktype+0x938>
    6b40:	b	7030 <gen_linktype+0x960>
    6b44:	b	7008 <gen_linktype+0x938>
    6b48:	b	7008 <gen_linktype+0x938>
    6b4c:	b	7008 <gen_linktype+0x938>
    6b50:	b	7008 <gen_linktype+0x938>
    6b54:	b	709c <gen_linktype+0x9cc>
    6b58:	b	7008 <gen_linktype+0x938>
    6b5c:	b	7008 <gen_linktype+0x938>
    6b60:	b	7008 <gen_linktype+0x938>
    6b64:	b	7008 <gen_linktype+0x938>
    6b68:	b	7008 <gen_linktype+0x938>
    6b6c:	b	6ed0 <gen_linktype+0x800>
    6b70:	b	7024 <gen_linktype+0x954>
    6b74:	b	6bf4 <gen_linktype+0x524>
    6b78:	b	6ff8 <gen_linktype+0x928>
    6b7c:	cmp	r0, #33	; 0x21
    6b80:	beq	670c <gen_linktype+0x3c>
    6b84:	ldr	r0, [pc, #1992]	; 7354 <gen_linktype+0xc84>
    6b88:	add	r0, pc, r0
    6b8c:	bl	2210 <sf_bpf_error>
    6b90:	add	sp, sp, #20
    6b94:	ldrd	r4, [sp]
    6b98:	ldrd	r6, [sp, #8]
    6b9c:	ldr	lr, [sp, #16]
    6ba0:	add	sp, sp, #20
    6ba4:	b	46d4 <gen_llc_linktype>
    6ba8:	bl	2130 <ethertype_to_ppptype>
    6bac:	ldr	r1, [r1, #952]	; 0x3b8
    6bb0:	mov	r3, r0
    6bb4:	mov	r2, #8
    6bb8:	mov	r0, #2
    6bbc:	add	sp, sp, #20
    6bc0:	ldrd	r4, [sp]
    6bc4:	ldrd	r6, [sp, #8]
    6bc8:	ldr	lr, [sp, #16]
    6bcc:	add	sp, sp, #20
    6bd0:	b	2c2c <gen_cmp>
    6bd4:	bl	2130 <ethertype_to_ppptype>
    6bd8:	ldr	r1, [pc, #1912]	; 7358 <gen_linktype+0xc88>
    6bdc:	mov	r3, r0
    6be0:	mov	r2, #8
    6be4:	mov	r0, #1
    6be8:	add	r1, pc, r1
    6bec:	ldr	r1, [r1, #952]	; 0x3b8
    6bf0:	b	6bbc <gen_linktype+0x4ec>
    6bf4:	cmp	r0, #2048	; 0x800
    6bf8:	beq	6e3c <gen_linktype+0x76c>
    6bfc:	mov	r0, #0
    6c00:	add	sp, sp, #20
    6c04:	ldrd	r4, [sp]
    6c08:	ldrd	r6, [sp, #8]
    6c0c:	ldr	lr, [sp, #16]
    6c10:	add	sp, sp, #20
    6c14:	b	2310 <gen_uncond>
    6c18:	ldr	r3, [pc, #1852]	; 735c <gen_linktype+0xc8c>
    6c1c:	cmp	r0, #2048	; 0x800
    6c20:	add	r3, pc, r3
    6c24:	ldr	r5, [r3, #952]	; 0x3b8
    6c28:	beq	7198 <gen_linktype+0xac8>
    6c2c:	bl	2130 <ethertype_to_ppptype>
    6c30:	mov	r3, r0
    6c34:	mov	r1, r5
    6c38:	mov	r2, #8
    6c3c:	mov	r0, #1
    6c40:	b	6bbc <gen_linktype+0x4ec>
    6c44:	ldr	r1, [pc, #1812]	; 7360 <gen_linktype+0xc90>
    6c48:	cmp	r0, #254	; 0xfe
    6c4c:	movw	r3, #65278	; 0xfefe
    6c50:	mov	r2, #8
    6c54:	movne	r3, r0
    6c58:	mov	r0, #1
    6c5c:	add	r1, pc, r1
    6c60:	ldr	r1, [r1, #952]	; 0x3b8
    6c64:	b	6bbc <gen_linktype+0x4ec>
    6c68:	mov	r1, #16
    6c6c:	mov	r0, #0
    6c70:	bl	265c <gen_load_llrel>
    6c74:	mov	r7, r0
    6c78:	mov	r0, #208	; 0xd0
    6c7c:	bl	2250 <newchunk>
    6c80:	mov	r6, r0
    6c84:	mov	r3, #8
    6c88:	mov	r5, #69	; 0x45
    6c8c:	mov	r1, #16
    6c90:	mov	r0, #0
    6c94:	str	r7, [r6, #4]
    6c98:	str	r5, [r6, #8]
    6c9c:	str	r3, [r6, #20]
    6ca0:	str	r6, [r6, #96]	; 0x60
    6ca4:	bl	265c <gen_load_llrel>
    6ca8:	mov	r7, r0
    6cac:	mov	r0, #208	; 0xd0
    6cb0:	bl	2250 <newchunk>
    6cb4:	ldr	r2, [r0, #44]	; 0x2c
    6cb8:	mov	r3, r0
    6cbc:	mov	ip, #4
    6cc0:	mov	r1, r6
    6cc4:	str	r7, [r0, #4]
    6cc8:	str	r5, [r0, #8]
    6ccc:	str	ip, [r0, #20]
    6cd0:	clz	r2, r2
    6cd4:	lsr	r2, r2, #5
    6cd8:	str	r2, [r0, #44]	; 0x2c
    6cdc:	str	r0, [r3, #96]	; 0x60
    6ce0:	bl	3a88 <sf_gen_and>
    6ce4:	mov	r0, r4
    6ce8:	bl	46d4 <gen_llc_linktype>
    6cec:	mov	r5, r0
    6cf0:	mov	r1, r0
    6cf4:	mov	r0, r6
    6cf8:	bl	3a88 <sf_gen_and>
    6cfc:	b	6768 <gen_linktype+0x98>
    6d00:	cmp	r0, #2048	; 0x800
    6d04:	beq	72b0 <gen_linktype+0xbe0>
    6d08:	movw	r3, #34525	; 0x86dd
    6d0c:	cmp	r0, r3
    6d10:	beq	72a0 <gen_linktype+0xbd0>
    6d14:	cmp	r0, #254	; 0xfe
    6d18:	bne	6bfc <gen_linktype+0x52c>
    6d1c:	movw	r3, #897	; 0x381
    6d20:	mov	r2, #8
    6d24:	mov	r1, #2
    6d28:	mov	r0, #1
    6d2c:	bl	2c2c <gen_cmp>
    6d30:	mov	r4, r0
    6d34:	movw	r3, #898	; 0x382
    6d38:	mov	r2, #8
    6d3c:	mov	r1, #2
    6d40:	mov	r0, #1
    6d44:	bl	2c2c <gen_cmp>
    6d48:	mov	r6, r0
    6d4c:	movw	r3, #899	; 0x383
    6d50:	mov	r2, #8
    6d54:	mov	r1, #2
    6d58:	mov	r0, #1
    6d5c:	bl	2c2c <gen_cmp>
    6d60:	mov	r1, r0
    6d64:	mov	r5, r0
    6d68:	mov	r0, r6
    6d6c:	bl	4884 <sf_gen_or>
    6d70:	mov	r0, r4
    6d74:	bl	4884 <sf_gen_or>
    6d78:	b	6768 <gen_linktype+0x98>
    6d7c:	ldr	r3, [pc, #1504]	; 7364 <gen_linktype+0xc94>
    6d80:	cmp	r0, #240	; 0xf0
    6d84:	add	r3, pc, r3
    6d88:	ldr	r6, [r3, #952]	; 0x3b8
    6d8c:	beq	7228 <gen_linktype+0xb58>
    6d90:	bgt	70d8 <gen_linktype+0xa08>
    6d94:	cmp	r0, #6
    6d98:	beq	7228 <gen_linktype+0xb58>
    6d9c:	cmp	r0, #224	; 0xe0
    6da0:	bne	70f8 <gen_linktype+0xa28>
    6da4:	mov	r3, r0
    6da8:	mov	r2, #16
    6dac:	mov	r1, #0
    6db0:	mov	r0, #2
    6db4:	bl	2c2c <gen_cmp>
    6db8:	mov	r4, r0
    6dbc:	movw	r1, #33079	; 0x8137
    6dc0:	mov	r0, #0
    6dc4:	bl	4674 <gen_snap>
    6dc8:	mov	r5, r0
    6dcc:	mov	r1, r0
    6dd0:	mov	r0, r4
    6dd4:	bl	4884 <sf_gen_or>
    6dd8:	mov	r3, #4
    6ddc:	mov	r2, #8
    6de0:	mov	r1, r6
    6de4:	mov	r0, #1
    6de8:	bl	2c2c <gen_cmp>
    6dec:	mov	r1, r5
    6df0:	bl	3a88 <sf_gen_and>
    6df4:	mov	r3, #1
    6df8:	mov	r2, #8
    6dfc:	mov	r0, r3
    6e00:	mov	r1, r6
    6e04:	bl	2c2c <gen_cmp>
    6e08:	mov	r1, r5
    6e0c:	bl	4884 <sf_gen_or>
    6e10:	mov	r1, r6
    6e14:	movw	r3, #33079	; 0x8137
    6e18:	mov	r2, #8
    6e1c:	mov	r0, #1
    6e20:	bl	2c2c <gen_cmp>
    6e24:	mov	r1, r5
    6e28:	bl	4884 <sf_gen_or>
    6e2c:	b	6768 <gen_linktype+0x98>
    6e30:	movw	r3, #32923	; 0x809b
    6e34:	cmp	r0, r3
    6e38:	bne	6bfc <gen_linktype+0x52c>
    6e3c:	mov	r0, #1
    6e40:	b	6c00 <gen_linktype+0x530>
    6e44:	ldr	r3, [pc, #1308]	; 7368 <gen_linktype+0xc98>
    6e48:	add	r3, pc, r3
    6e4c:	ldr	r3, [r3, #908]	; 0x38c
    6e50:	cmp	r3, #0
    6e54:	beq	7180 <gen_linktype+0xab0>
    6e58:	mov	r2, #8
    6e5c:	mov	r1, #4
    6e60:	mov	r3, #65280	; 0xff00
    6e64:	mov	r0, #1
    6e68:	bl	2c2c <gen_cmp>
    6e6c:	mov	r6, r0
    6e70:	mov	r0, r4
    6e74:	ldr	r3, [r6, #44]	; 0x2c
    6e78:	clz	r3, r3
    6e7c:	lsr	r3, r3, #5
    6e80:	str	r3, [r6, #44]	; 0x2c
    6e84:	bl	4d3c <gen_ether_linktype>
    6e88:	mov	r5, r0
    6e8c:	mov	r1, r0
    6e90:	mov	r0, r6
    6e94:	bl	3a88 <sf_gen_and>
    6e98:	b	6768 <gen_linktype+0x98>
    6e9c:	mov	ip, #0
    6ea0:	mov	r0, #16
    6ea4:	mov	r3, #17152	; 0x4300
    6ea8:	movt	r3, #19783	; 0x4d47
    6eac:	mov	r2, ip
    6eb0:	mov	r1, ip
    6eb4:	stm	sp, {r0, ip}
    6eb8:	mov	r0, #1
    6ebc:	str	r3, [sp, #8]
    6ec0:	mvn	r3, #255	; 0xff
    6ec4:	bl	2b74 <gen_ncmp>
    6ec8:	mov	r5, r0
    6ecc:	b	6768 <gen_linktype+0x98>
    6ed0:	cmp	r0, #2048	; 0x800
    6ed4:	beq	720c <gen_linktype+0xb3c>
    6ed8:	movw	r3, #34525	; 0x86dd
    6edc:	cmp	r0, r3
    6ee0:	bne	6bfc <gen_linktype+0x52c>
    6ee4:	ldr	r1, [pc, #1152]	; 736c <gen_linktype+0xc9c>
    6ee8:	mov	r3, #26
    6eec:	mov	r2, #16
    6ef0:	mov	r0, #1
    6ef4:	add	r1, pc, r1
    6ef8:	ldr	r1, [r1, #952]	; 0x3b8
    6efc:	b	6bbc <gen_linktype+0x4ec>
    6f00:	cmp	r0, #2048	; 0x800
    6f04:	beq	71fc <gen_linktype+0xb2c>
    6f08:	movw	r3, #34525	; 0x86dd
    6f0c:	cmp	r0, r3
    6f10:	moveq	r3, #10
    6f14:	bne	6bfc <gen_linktype+0x52c>
    6f18:	cmp	r2, #109	; 0x6d
    6f1c:	cmpne	r2, #0
    6f20:	mov	r2, #0
    6f24:	reveq	r3, r3
    6f28:	mov	r1, r2
    6f2c:	b	6c3c <gen_linktype+0x56c>
    6f30:	add	sp, sp, #20
    6f34:	ldrd	r4, [sp]
    6f38:	ldrd	r6, [sp, #8]
    6f3c:	ldr	lr, [sp, #16]
    6f40:	add	sp, sp, #20
    6f44:	b	4d3c <gen_ether_linktype>
    6f48:	movw	r3, #32821	; 0x8035
    6f4c:	cmp	r0, r3
    6f50:	beq	730c <gen_linktype+0xc3c>
    6f54:	bgt	714c <gen_linktype+0xa7c>
    6f58:	cmp	r0, #2048	; 0x800
    6f5c:	beq	72dc <gen_linktype+0xc0c>
    6f60:	movw	r3, #2054	; 0x806
    6f64:	cmp	r0, r3
    6f68:	bne	6bfc <gen_linktype+0x52c>
    6f6c:	ldr	r1, [pc, #1020]	; 7370 <gen_linktype+0xca0>
    6f70:	mov	r3, #213	; 0xd5
    6f74:	mov	r2, #16
    6f78:	mov	r0, #1
    6f7c:	add	r1, pc, r1
    6f80:	ldr	r4, [r1, #952]	; 0x3b8
    6f84:	mov	r1, r4
    6f88:	bl	2c2c <gen_cmp>
    6f8c:	mov	r6, r0
    6f90:	mov	r1, r4
    6f94:	mov	r3, #241	; 0xf1
    6f98:	mov	r2, #16
    6f9c:	mov	r0, #1
    6fa0:	bl	2c2c <gen_cmp>
    6fa4:	mov	r5, r0
    6fa8:	mov	r1, r0
    6fac:	mov	r0, r6
    6fb0:	bl	4884 <sf_gen_or>
    6fb4:	b	6768 <gen_linktype+0x98>
    6fb8:	cmp	r0, #2048	; 0x800
    6fbc:	beq	7204 <gen_linktype+0xb34>
    6fc0:	movw	r3, #34525	; 0x86dd
    6fc4:	cmp	r0, r3
    6fc8:	bne	6bfc <gen_linktype+0x52c>
    6fcc:	mov	ip, #96	; 0x60
    6fd0:	mov	r3, #0
    6fd4:	mov	r0, #16
    6fd8:	mov	r1, r3
    6fdc:	mov	r2, r0
    6fe0:	stm	sp, {r0, r3, ip}
    6fe4:	mov	r3, #240	; 0xf0
    6fe8:	mov	r0, #1
    6fec:	bl	2b74 <gen_ncmp>
    6ff0:	mov	r5, r0
    6ff4:	b	6768 <gen_linktype+0x98>
    6ff8:	movw	r3, #34525	; 0x86dd
    6ffc:	cmp	r0, r3
    7000:	bne	6bfc <gen_linktype+0x52c>
    7004:	b	6e3c <gen_linktype+0x76c>
    7008:	ldr	r3, [pc, #868]	; 7374 <gen_linktype+0xca4>
    700c:	add	r3, pc, r3
    7010:	ldr	r1, [r3, #952]	; 0x3b8
    7014:	cmn	r1, #1
    7018:	movne	r3, r0
    701c:	bne	6c38 <gen_linktype+0x568>
    7020:	bl	ebc <abort@plt>
    7024:	ldr	r0, [pc, #844]	; 7378 <gen_linktype+0xca8>
    7028:	add	r0, pc, r0
    702c:	bl	2210 <sf_bpf_error>
    7030:	ldr	r0, [pc, #836]	; 737c <gen_linktype+0xcac>
    7034:	add	r0, pc, r0
    7038:	bl	2210 <sf_bpf_error>
    703c:	ldr	r0, [pc, #828]	; 7380 <gen_linktype+0xcb0>
    7040:	add	r0, pc, r0
    7044:	bl	2210 <sf_bpf_error>
    7048:	ldr	r0, [pc, #820]	; 7384 <gen_linktype+0xcb4>
    704c:	add	r0, pc, r0
    7050:	bl	2210 <sf_bpf_error>
    7054:	ldr	r0, [pc, #812]	; 7388 <gen_linktype+0xcb8>
    7058:	add	r0, pc, r0
    705c:	bl	2210 <sf_bpf_error>
    7060:	ldr	r0, [pc, #804]	; 738c <gen_linktype+0xcbc>
    7064:	add	r0, pc, r0
    7068:	bl	2210 <sf_bpf_error>
    706c:	ldr	r0, [pc, #796]	; 7390 <gen_linktype+0xcc0>
    7070:	add	r0, pc, r0
    7074:	bl	2210 <sf_bpf_error>
    7078:	ldr	r0, [pc, #788]	; 7394 <gen_linktype+0xcc4>
    707c:	add	r0, pc, r0
    7080:	bl	2210 <sf_bpf_error>
    7084:	ldr	r0, [pc, #780]	; 7398 <gen_linktype+0xcc8>
    7088:	add	r0, pc, r0
    708c:	bl	2210 <sf_bpf_error>
    7090:	ldr	r0, [pc, #772]	; 739c <gen_linktype+0xccc>
    7094:	add	r0, pc, r0
    7098:	bl	2210 <sf_bpf_error>
    709c:	ldr	r0, [pc, #764]	; 73a0 <gen_linktype+0xcd0>
    70a0:	add	r0, pc, r0
    70a4:	bl	2210 <sf_bpf_error>
    70a8:	ldr	r0, [pc, #756]	; 73a4 <gen_linktype+0xcd4>
    70ac:	add	r0, pc, r0
    70b0:	bl	2210 <sf_bpf_error>
    70b4:	ldr	r0, [pc, #748]	; 73a8 <gen_linktype+0xcd8>
    70b8:	add	r0, pc, r0
    70bc:	bl	2210 <sf_bpf_error>
    70c0:	ldr	r0, [pc, #740]	; 73ac <gen_linktype+0xcdc>
    70c4:	add	r0, pc, r0
    70c8:	bl	2210 <sf_bpf_error>
    70cc:	ldr	r0, [pc, #732]	; 73b0 <gen_linktype+0xce0>
    70d0:	add	r0, pc, r0
    70d4:	bl	2210 <sf_bpf_error>
    70d8:	movw	r3, #32923	; 0x809b
    70dc:	cmp	r0, r3
    70e0:	beq	7254 <gen_linktype+0xb84>
    70e4:	movw	r3, #33011	; 0x80f3
    70e8:	cmp	r0, r3
    70ec:	beq	7254 <gen_linktype+0xb84>
    70f0:	cmp	r0, #254	; 0xfe
    70f4:	beq	7228 <gen_linktype+0xb58>
    70f8:	movw	r3, #1500	; 0x5dc
    70fc:	cmp	r4, r3
    7100:	bgt	7328 <gen_linktype+0xc58>
    7104:	mov	r1, r6
    7108:	mov	r3, #4
    710c:	mov	r2, #8
    7110:	mov	r0, #1
    7114:	bl	2c2c <gen_cmp>
    7118:	ldr	r1, [pc, #660]	; 73b4 <gen_linktype+0xce4>
    711c:	mov	r6, r0
    7120:	mov	r3, r4
    7124:	mov	r2, #16
    7128:	mov	r0, #1
    712c:	add	r1, pc, r1
    7130:	ldr	r1, [r1, #876]	; 0x36c
    7134:	bl	2c2c <gen_cmp>
    7138:	mov	r5, r0
    713c:	mov	r1, r0
    7140:	mov	r0, r6
    7144:	bl	3a88 <sf_gen_and>
    7148:	b	6768 <gen_linktype+0x98>
    714c:	movw	r3, #32923	; 0x809b
    7150:	cmp	r0, r3
    7154:	beq	72c0 <gen_linktype+0xbf0>
    7158:	movw	r3, #34525	; 0x86dd
    715c:	cmp	r0, r3
    7160:	bne	6bfc <gen_linktype+0x52c>
    7164:	ldr	r1, [pc, #588]	; 73b8 <gen_linktype+0xce8>
    7168:	mov	r3, #196	; 0xc4
    716c:	mov	r2, #16
    7170:	mov	r0, #1
    7174:	add	r1, pc, r1
    7178:	ldr	r1, [r1, #952]	; 0x3b8
    717c:	b	6bbc <gen_linktype+0x4ec>
    7180:	mov	r2, #16
    7184:	mov	r1, #2
    7188:	mov	r0, #53	; 0x35
    718c:	bl	657c <sf_gen_atmfield_code>
    7190:	mov	r6, r0
    7194:	b	6ce4 <gen_linktype+0x614>
    7198:	mov	r1, r5
    719c:	mov	r3, #33	; 0x21
    71a0:	mov	r2, #8
    71a4:	mov	r0, #1
    71a8:	bl	2c2c <gen_cmp>
    71ac:	mov	r6, r0
    71b0:	mov	r3, #45	; 0x2d
    71b4:	mov	r2, #8
    71b8:	mov	r1, r5
    71bc:	mov	r0, #1
    71c0:	bl	2c2c <gen_cmp>
    71c4:	mov	r4, r0
    71c8:	mov	r1, r0
    71cc:	mov	r0, r6
    71d0:	bl	4884 <sf_gen_or>
    71d4:	mov	r1, r5
    71d8:	mov	r3, #47	; 0x2f
    71dc:	mov	r2, #8
    71e0:	mov	r0, #1
    71e4:	bl	2c2c <gen_cmp>
    71e8:	mov	r5, r0
    71ec:	mov	r1, r0
    71f0:	mov	r0, r4
    71f4:	bl	4884 <sf_gen_or>
    71f8:	b	6768 <gen_linktype+0x98>
    71fc:	mov	r3, #2
    7200:	b	6f18 <gen_linktype+0x848>
    7204:	mov	ip, #64	; 0x40
    7208:	b	6fd0 <gen_linktype+0x900>
    720c:	ldr	r1, [pc, #424]	; 73bc <gen_linktype+0xcec>
    7210:	mov	r3, #2
    7214:	mov	r2, #16
    7218:	mov	r0, #1
    721c:	add	r1, pc, r1
    7220:	ldr	r1, [r1, #952]	; 0x3b8
    7224:	b	6bbc <gen_linktype+0x4ec>
    7228:	mov	r1, r6
    722c:	mov	r3, #4
    7230:	mov	r2, #8
    7234:	mov	r0, #1
    7238:	bl	2c2c <gen_cmp>
    723c:	mov	r6, r0
    7240:	orr	r3, r4, r4, lsl #8
    7244:	mov	r2, #8
    7248:	mov	r1, #0
    724c:	mov	r0, #2
    7250:	b	7134 <gen_linktype+0xa64>
    7254:	mov	r3, #4
    7258:	mov	r2, #8
    725c:	mov	r1, r6
    7260:	mov	r0, #1
    7264:	bl	2c2c <gen_cmp>
    7268:	movw	r3, #32923	; 0x809b
    726c:	mov	r7, r0
    7270:	cmp	r4, r3
    7274:	beq	7334 <gen_linktype+0xc64>
    7278:	movw	r1, #33011	; 0x80f3
    727c:	mov	r0, #0
    7280:	bl	4674 <gen_snap>
    7284:	mov	r5, r0
    7288:	mov	r1, r5
    728c:	mov	r0, r7
    7290:	bl	3a88 <sf_gen_and>
    7294:	mov	r3, r4
    7298:	mov	r1, r6
    729c:	b	6e18 <gen_linktype+0x748>
    72a0:	movw	r3, #910	; 0x38e
    72a4:	mov	r2, #8
    72a8:	mov	r1, #2
    72ac:	b	6c3c <gen_linktype+0x56c>
    72b0:	mov	r3, #972	; 0x3cc
    72b4:	mov	r2, #8
    72b8:	mov	r1, #2
    72bc:	b	6c3c <gen_linktype+0x56c>
    72c0:	ldr	r1, [pc, #248]	; 73c0 <gen_linktype+0xcf0>
    72c4:	mov	r3, #221	; 0xdd
    72c8:	mov	r2, #16
    72cc:	mov	r0, #1
    72d0:	add	r1, pc, r1
    72d4:	ldr	r1, [r1, #952]	; 0x3b8
    72d8:	b	6bbc <gen_linktype+0x4ec>
    72dc:	ldr	r1, [pc, #224]	; 73c4 <gen_linktype+0xcf4>
    72e0:	mov	r3, #212	; 0xd4
    72e4:	mov	r2, #16
    72e8:	mov	r0, #1
    72ec:	add	r1, pc, r1
    72f0:	ldr	r4, [r1, #952]	; 0x3b8
    72f4:	mov	r1, r4
    72f8:	bl	2c2c <gen_cmp>
    72fc:	mov	r6, r0
    7300:	mov	r1, r4
    7304:	mov	r3, #240	; 0xf0
    7308:	b	6f98 <gen_linktype+0x8c8>
    730c:	ldr	r1, [pc, #180]	; 73c8 <gen_linktype+0xcf8>
    7310:	mov	r3, #214	; 0xd6
    7314:	mov	r2, #16
    7318:	mov	r0, #1
    731c:	add	r1, pc, r1
    7320:	ldr	r1, [r1, #952]	; 0x3b8
    7324:	b	6bbc <gen_linktype+0x4ec>
    7328:	mov	r3, r4
    732c:	mov	r1, r6
    7330:	b	6c38 <gen_linktype+0x568>
    7334:	mov	r0, #7
    7338:	movt	r0, #8
    733c:	mov	r1, r4
    7340:	bl	4674 <gen_snap>
    7344:	mov	r5, r0
    7348:	b	7288 <gen_linktype+0xbb8>
    734c:	.word	0x0002ab88
    7350:	.word	0x0002ab9c
    7354:	.word	0x0000c898
    7358:	.word	0x0002a778
    735c:	.word	0x0002a740
    7360:	.word	0x0002a704
    7364:	.word	0x0002a5dc
    7368:	.word	0x0002a518
    736c:	.word	0x0002a46c
    7370:	.word	0x0002a3e4
    7374:	.word	0x0002a354
    7378:	.word	0x0000c5b4
    737c:	.word	0x0000c5d8
    7380:	.word	0x0000c604
    7384:	.word	0x0000c630
    7388:	.word	0x0000c4c0
    738c:	.word	0x0000c648
    7390:	.word	0x0000c66c
    7394:	.word	0x0000c690
    7398:	.word	0x0000c4c0
    739c:	.word	0x0000c3ac
    73a0:	.word	0x0000c4d8
    73a4:	.word	0x0000c4fc
    73a8:	.word	0x0000c3fc
    73ac:	.word	0x0000c3c0
    73b0:	.word	0x0000c418
    73b4:	.word	0x0002a234
    73b8:	.word	0x0002a1ec
    73bc:	.word	0x0002a144
    73c0:	.word	0x0002a090
    73c4:	.word	0x0002a074
    73c8:	.word	0x0002a044

000073cc <gen_proto>:
    73cc:	cmp	r2, #0
    73d0:	strd	r4, [sp, #-16]!
    73d4:	str	r6, [sp, #8]
    73d8:	str	lr, [sp, #12]
    73dc:	bne	76ec <gen_proto+0x320>
    73e0:	mov	r4, r0
    73e4:	cmp	r1, #40	; 0x28
    73e8:	addls	pc, pc, r1, lsl #2
    73ec:	b	76f8 <gen_proto+0x32c>
    73f0:	b	74e0 <gen_proto+0x114>
    73f4:	b	7514 <gen_proto+0x148>
    73f8:	b	7528 <gen_proto+0x15c>
    73fc:	b	7620 <gen_proto+0x254>
    7400:	b	7614 <gen_proto+0x248>
    7404:	b	7608 <gen_proto+0x23c>
    7408:	b	76e0 <gen_proto+0x314>
    740c:	b	76d4 <gen_proto+0x308>
    7410:	b	76c8 <gen_proto+0x2fc>
    7414:	b	76bc <gen_proto+0x2f0>
    7418:	b	76b0 <gen_proto+0x2e4>
    741c:	b	765c <gen_proto+0x290>
    7420:	b	7650 <gen_proto+0x284>
    7424:	b	7644 <gen_proto+0x278>
    7428:	b	7638 <gen_proto+0x26c>
    742c:	b	7680 <gen_proto+0x2b4>
    7430:	b	7674 <gen_proto+0x2a8>
    7434:	b	7548 <gen_proto+0x17c>
    7438:	b	7668 <gen_proto+0x29c>
    743c:	b	75e4 <gen_proto+0x218>
    7440:	b	75e4 <gen_proto+0x218>
    7444:	b	762c <gen_proto+0x260>
    7448:	b	75fc <gen_proto+0x230>
    744c:	b	76f8 <gen_proto+0x32c>
    7450:	b	7564 <gen_proto+0x198>
    7454:	b	76f8 <gen_proto+0x32c>
    7458:	b	7494 <gen_proto+0xc8>
    745c:	b	76f8 <gen_proto+0x32c>
    7460:	b	76a4 <gen_proto+0x2d8>
    7464:	b	7698 <gen_proto+0x2cc>
    7468:	b	768c <gen_proto+0x2c0>
    746c:	b	76f8 <gen_proto+0x32c>
    7470:	b	76f8 <gen_proto+0x32c>
    7474:	b	76f8 <gen_proto+0x32c>
    7478:	b	76f8 <gen_proto+0x32c>
    747c:	b	76f8 <gen_proto+0x32c>
    7480:	b	76f8 <gen_proto+0x32c>
    7484:	b	76f8 <gen_proto+0x32c>
    7488:	b	76f8 <gen_proto+0x32c>
    748c:	b	76f8 <gen_proto+0x32c>
    7490:	b	75f0 <gen_proto+0x224>
    7494:	mov	r2, #0
    7498:	mov	r1, #24
    749c:	mov	r0, #131	; 0x83
    74a0:	bl	73cc <gen_proto>
    74a4:	mov	r1, #4
    74a8:	mov	r5, r0
    74ac:	mov	r3, r4
    74b0:	mov	r2, #16
    74b4:	mov	r0, r1
    74b8:	bl	2c2c <gen_cmp>
    74bc:	mov	r4, r0
    74c0:	mov	r1, r0
    74c4:	mov	r0, r5
    74c8:	bl	3a88 <sf_gen_and>
    74cc:	mov	r0, r4
    74d0:	ldrd	r4, [sp]
    74d4:	ldr	r6, [sp, #8]
    74d8:	add	sp, sp, #12
    74dc:	pop	{pc}		; (ldr pc, [sp], #4)
    74e0:	mov	r2, #0
    74e4:	mov	r1, #2
    74e8:	bl	73cc <gen_proto>
    74ec:	mov	r5, r0
    74f0:	mov	r2, #0
    74f4:	mov	r0, r4
    74f8:	mov	r1, #17
    74fc:	bl	73cc <gen_proto>
    7500:	mov	r4, r0
    7504:	mov	r1, r0
    7508:	mov	r0, r5
    750c:	bl	4884 <sf_gen_or>
    7510:	b	74cc <gen_proto+0x100>
    7514:	ldrd	r4, [sp]
    7518:	ldr	r6, [sp, #8]
    751c:	ldr	lr, [sp, #12]
    7520:	add	sp, sp, #16
    7524:	b	66d0 <gen_linktype>
    7528:	mov	r0, #2048	; 0x800
    752c:	bl	66d0 <gen_linktype>
    7530:	mov	r5, r0
    7534:	mov	r3, r4
    7538:	mov	r2, #16
    753c:	mov	r1, #9
    7540:	mov	r0, #3
    7544:	b	74b8 <gen_proto+0xec>
    7548:	movw	r0, #34525	; 0x86dd
    754c:	bl	66d0 <gen_linktype>
    7550:	mov	r5, r0
    7554:	mov	r3, r4
    7558:	mov	r2, #16
    755c:	mov	r1, #6
    7560:	b	7540 <gen_proto+0x174>
    7564:	ldr	r3, [pc, #400]	; 76fc <gen_proto+0x330>
    7568:	add	r3, pc, r3
    756c:	ldr	r3, [r3, #856]	; 0x358
    7570:	cmp	r3, #104	; 0x68
    7574:	beq	75c4 <gen_proto+0x1f8>
    7578:	cmp	r3, #107	; 0x6b
    757c:	bne	75a4 <gen_proto+0x1d8>
    7580:	orr	r3, r0, #768	; 0x300
    7584:	mov	r2, #8
    7588:	ldrd	r4, [sp]
    758c:	mov	r1, #2
    7590:	mov	r0, #1
    7594:	ldr	r6, [sp, #8]
    7598:	ldr	lr, [sp, #12]
    759c:	add	sp, sp, #16
    75a0:	b	2c2c <gen_cmp>
    75a4:	mov	r0, #254	; 0xfe
    75a8:	bl	66d0 <gen_linktype>
    75ac:	mov	r5, r0
    75b0:	mov	r3, r4
    75b4:	mov	r2, #16
    75b8:	mov	r1, #0
    75bc:	mov	r0, #4
    75c0:	b	74b8 <gen_proto+0xec>
    75c4:	movw	r0, #65278	; 0xfefe
    75c8:	bl	66d0 <gen_linktype>
    75cc:	mov	r5, r0
    75d0:	mov	r3, r4
    75d4:	mov	r2, #16
    75d8:	mov	r1, #1
    75dc:	mov	r0, #4
    75e0:	b	74b8 <gen_proto+0xec>
    75e4:	ldr	r0, [pc, #276]	; 7700 <gen_proto+0x334>
    75e8:	add	r0, pc, r0
    75ec:	bl	2210 <sf_bpf_error>
    75f0:	ldr	r0, [pc, #268]	; 7704 <gen_proto+0x338>
    75f4:	add	r0, pc, r0
    75f8:	bl	2210 <sf_bpf_error>
    75fc:	ldr	r0, [pc, #260]	; 7708 <gen_proto+0x33c>
    7600:	add	r0, pc, r0
    7604:	bl	2210 <sf_bpf_error>
    7608:	ldr	r0, [pc, #252]	; 770c <gen_proto+0x340>
    760c:	add	r0, pc, r0
    7610:	bl	2210 <sf_bpf_error>
    7614:	ldr	r0, [pc, #244]	; 7710 <gen_proto+0x344>
    7618:	add	r0, pc, r0
    761c:	bl	2210 <sf_bpf_error>
    7620:	ldr	r0, [pc, #236]	; 7714 <gen_proto+0x348>
    7624:	add	r0, pc, r0
    7628:	bl	2210 <sf_bpf_error>
    762c:	ldr	r0, [pc, #228]	; 7718 <gen_proto+0x34c>
    7630:	add	r0, pc, r0
    7634:	bl	2210 <sf_bpf_error>
    7638:	ldr	r0, [pc, #220]	; 771c <gen_proto+0x350>
    763c:	add	r0, pc, r0
    7640:	bl	2210 <sf_bpf_error>
    7644:	ldr	r0, [pc, #212]	; 7720 <gen_proto+0x354>
    7648:	add	r0, pc, r0
    764c:	bl	2210 <sf_bpf_error>
    7650:	ldr	r0, [pc, #204]	; 7724 <gen_proto+0x358>
    7654:	add	r0, pc, r0
    7658:	bl	2210 <sf_bpf_error>
    765c:	ldr	r0, [pc, #196]	; 7728 <gen_proto+0x35c>
    7660:	add	r0, pc, r0
    7664:	bl	2210 <sf_bpf_error>
    7668:	ldr	r0, [pc, #188]	; 772c <gen_proto+0x360>
    766c:	add	r0, pc, r0
    7670:	bl	2210 <sf_bpf_error>
    7674:	ldr	r0, [pc, #180]	; 7730 <gen_proto+0x364>
    7678:	add	r0, pc, r0
    767c:	bl	2210 <sf_bpf_error>
    7680:	ldr	r0, [pc, #172]	; 7734 <gen_proto+0x368>
    7684:	add	r0, pc, r0
    7688:	bl	2210 <sf_bpf_error>
    768c:	ldr	r0, [pc, #164]	; 7738 <gen_proto+0x36c>
    7690:	add	r0, pc, r0
    7694:	bl	2210 <sf_bpf_error>
    7698:	ldr	r0, [pc, #156]	; 773c <gen_proto+0x370>
    769c:	add	r0, pc, r0
    76a0:	bl	2210 <sf_bpf_error>
    76a4:	ldr	r0, [pc, #148]	; 7740 <gen_proto+0x374>
    76a8:	add	r0, pc, r0
    76ac:	bl	2210 <sf_bpf_error>
    76b0:	ldr	r0, [pc, #140]	; 7744 <gen_proto+0x378>
    76b4:	add	r0, pc, r0
    76b8:	bl	2210 <sf_bpf_error>
    76bc:	ldr	r0, [pc, #132]	; 7748 <gen_proto+0x37c>
    76c0:	add	r0, pc, r0
    76c4:	bl	2210 <sf_bpf_error>
    76c8:	ldr	r0, [pc, #124]	; 774c <gen_proto+0x380>
    76cc:	add	r0, pc, r0
    76d0:	bl	2210 <sf_bpf_error>
    76d4:	ldr	r0, [pc, #116]	; 7750 <gen_proto+0x384>
    76d8:	add	r0, pc, r0
    76dc:	bl	2210 <sf_bpf_error>
    76e0:	ldr	r0, [pc, #108]	; 7754 <gen_proto+0x388>
    76e4:	add	r0, pc, r0
    76e8:	bl	2210 <sf_bpf_error>
    76ec:	ldr	r0, [pc, #100]	; 7758 <gen_proto+0x38c>
    76f0:	add	r0, pc, r0
    76f4:	bl	2210 <sf_bpf_error>
    76f8:	bl	ebc <abort@plt>
    76fc:	.word	0x00029df8
    7700:	.word	0x0000c3a4
    7704:	.word	0x0000c3f8
    7708:	.word	0x0000c35c
    770c:	.word	0x0000c2d8
    7710:	.word	0x0000c170
    7714:	.word	0x0000c138
    7718:	.word	0x0000c314
    771c:	.word	0x0000c1c8
    7720:	.word	0x0000c1e8
    7724:	.word	0x0000c188
    7728:	.word	0x0000c154
    772c:	.word	0x0000c308
    7730:	.word	0x0000c210
    7734:	.word	0x0000c1d8
    7738:	.word	0x0000c340
    773c:	.word	0x0000c31c
    7740:	.word	0x0000c2f8
    7744:	.word	0x0000c278
    7748:	.word	0x0000c254
    774c:	.word	0x0000c230
    7750:	.word	0x0000c1dc
    7754:	.word	0x0000c1e8
    7758:	.word	0x0000c04c

0000775c <sf_gen_proto_abbrev>:
    775c:	sub	r0, r0, #1
    7760:	strd	r4, [sp, #-16]!
    7764:	str	r6, [sp, #8]
    7768:	str	lr, [sp, #12]
    776c:	cmp	r0, #39	; 0x27
    7770:	addls	pc, pc, r0, lsl #2
    7774:	b	7c8c <sf_gen_proto_abbrev+0x530>
    7778:	b	7c74 <sf_gen_proto_abbrev+0x518>
    777c:	b	7c6c <sf_gen_proto_abbrev+0x510>
    7780:	b	7c64 <sf_gen_proto_abbrev+0x508>
    7784:	b	7c5c <sf_gen_proto_abbrev+0x500>
    7788:	b	7c2c <sf_gen_proto_abbrev+0x4d0>
    778c:	b	7bfc <sf_gen_proto_abbrev+0x4a0>
    7790:	b	7bcc <sf_gen_proto_abbrev+0x470>
    7794:	b	7bbc <sf_gen_proto_abbrev+0x460>
    7798:	b	7bac <sf_gen_proto_abbrev+0x450>
    779c:	b	7b9c <sf_gen_proto_abbrev+0x440>
    77a0:	b	7b94 <sf_gen_proto_abbrev+0x438>
    77a4:	b	7b8c <sf_gen_proto_abbrev+0x430>
    77a8:	b	7b84 <sf_gen_proto_abbrev+0x428>
    77ac:	b	7b7c <sf_gen_proto_abbrev+0x420>
    77b0:	b	7b74 <sf_gen_proto_abbrev+0x418>
    77b4:	b	7b6c <sf_gen_proto_abbrev+0x410>
    77b8:	b	7b64 <sf_gen_proto_abbrev+0x408>
    77bc:	b	7b54 <sf_gen_proto_abbrev+0x3f8>
    77c0:	b	7b24 <sf_gen_proto_abbrev+0x3c8>
    77c4:	b	7af4 <sf_gen_proto_abbrev+0x398>
    77c8:	b	7ac4 <sf_gen_proto_abbrev+0x368>
    77cc:	b	7ab4 <sf_gen_proto_abbrev+0x358>
    77d0:	b	7aac <sf_gen_proto_abbrev+0x350>
    77d4:	b	7aa4 <sf_gen_proto_abbrev+0x348>
    77d8:	b	7a94 <sf_gen_proto_abbrev+0x338>
    77dc:	b	7a84 <sf_gen_proto_abbrev+0x328>
    77e0:	b	7a64 <sf_gen_proto_abbrev+0x308>
    77e4:	b	7a5c <sf_gen_proto_abbrev+0x300>
    77e8:	b	7a54 <sf_gen_proto_abbrev+0x2f8>
    77ec:	b	7a3c <sf_gen_proto_abbrev+0x2e0>
    77f0:	b	79bc <sf_gen_proto_abbrev+0x260>
    77f4:	b	7960 <sf_gen_proto_abbrev+0x204>
    77f8:	b	7910 <sf_gen_proto_abbrev+0x1b4>
    77fc:	b	7c8c <sf_gen_proto_abbrev+0x530>
    7800:	b	7c8c <sf_gen_proto_abbrev+0x530>
    7804:	b	78a8 <sf_gen_proto_abbrev+0x14c>
    7808:	b	7884 <sf_gen_proto_abbrev+0x128>
    780c:	b	7860 <sf_gen_proto_abbrev+0x104>
    7810:	b	7818 <sf_gen_proto_abbrev+0xbc>
    7814:	b	7c80 <sf_gen_proto_abbrev+0x524>
    7818:	mov	r2, #0
    781c:	mov	r1, #26
    7820:	mov	r0, #18
    7824:	bl	73cc <gen_proto>
    7828:	mov	r5, r0
    782c:	mov	r2, #0
    7830:	mov	r1, #26
    7834:	mov	r0, #20
    7838:	bl	73cc <gen_proto>
    783c:	mov	r4, r0
    7840:	mov	r1, r0
    7844:	mov	r0, r5
    7848:	bl	4884 <sf_gen_or>
    784c:	mov	r0, r4
    7850:	ldrd	r4, [sp]
    7854:	ldr	r6, [sp, #8]
    7858:	add	sp, sp, #12
    785c:	pop	{pc}		; (ldr pc, [sp], #4)
    7860:	mov	r1, #26
    7864:	mov	r2, #0
    7868:	mov	r0, r1
    786c:	bl	73cc <gen_proto>
    7870:	mov	r5, r0
    7874:	mov	r2, #0
    7878:	mov	r1, #26
    787c:	mov	r0, #27
    7880:	b	7838 <sf_gen_proto_abbrev+0xdc>
    7884:	mov	r2, #0
    7888:	mov	r1, #26
    788c:	mov	r0, #24
    7890:	bl	73cc <gen_proto>
    7894:	mov	r5, r0
    7898:	mov	r2, #0
    789c:	mov	r1, #26
    78a0:	mov	r0, #25
    78a4:	b	7838 <sf_gen_proto_abbrev+0xdc>
    78a8:	mov	r2, #0
    78ac:	mov	r1, #26
    78b0:	mov	r0, #24
    78b4:	bl	73cc <gen_proto>
    78b8:	mov	r5, r0
    78bc:	mov	r2, #0
    78c0:	mov	r1, #26
    78c4:	mov	r0, #25
    78c8:	bl	73cc <gen_proto>
    78cc:	mov	r1, r0
    78d0:	mov	r4, r0
    78d4:	mov	r0, r5
    78d8:	bl	4884 <sf_gen_or>
    78dc:	mov	r1, #26
    78e0:	mov	r2, #0
    78e4:	mov	r0, r1
    78e8:	bl	73cc <gen_proto>
    78ec:	mov	r1, r4
    78f0:	bl	4884 <sf_gen_or>
    78f4:	mov	r2, #0
    78f8:	mov	r1, #26
    78fc:	mov	r0, #27
    7900:	bl	73cc <gen_proto>
    7904:	mov	r1, r4
    7908:	bl	4884 <sf_gen_or>
    790c:	b	784c <sf_gen_proto_abbrev+0xf0>
    7910:	mov	r2, #0
    7914:	mov	r1, #26
    7918:	mov	r0, #15
    791c:	bl	73cc <gen_proto>
    7920:	mov	r5, r0
    7924:	mov	r2, #0
    7928:	mov	r1, #26
    792c:	mov	r0, #16
    7930:	bl	73cc <gen_proto>
    7934:	mov	r4, r0
    7938:	mov	r1, r0
    793c:	mov	r0, r5
    7940:	bl	4884 <sf_gen_or>
    7944:	mov	r2, #0
    7948:	mov	r1, #26
    794c:	mov	r0, #17
    7950:	bl	73cc <gen_proto>
    7954:	mov	r1, r4
    7958:	bl	4884 <sf_gen_or>
    795c:	b	784c <sf_gen_proto_abbrev+0xf0>
    7960:	mov	r2, #0
    7964:	mov	r1, #26
    7968:	mov	r0, #16
    796c:	bl	73cc <gen_proto>
    7970:	mov	r5, r0
    7974:	mov	r2, #0
    7978:	mov	r1, #26
    797c:	mov	r0, #17
    7980:	bl	73cc <gen_proto>
    7984:	mov	r1, r0
    7988:	mov	r4, r0
    798c:	mov	r0, r5
    7990:	bl	4884 <sf_gen_or>
    7994:	mov	r2, #0
    7998:	mov	r1, #26
    799c:	mov	r0, #20
    79a0:	bl	73cc <gen_proto>
    79a4:	mov	r1, r4
    79a8:	bl	4884 <sf_gen_or>
    79ac:	mov	r2, #0
    79b0:	mov	r1, #26
    79b4:	mov	r0, #25
    79b8:	b	78e8 <sf_gen_proto_abbrev+0x18c>
    79bc:	mov	r2, #0
    79c0:	mov	r1, #26
    79c4:	mov	r0, #15
    79c8:	bl	73cc <gen_proto>
    79cc:	mov	r5, r0
    79d0:	mov	r2, #0
    79d4:	mov	r1, #26
    79d8:	mov	r0, #17
    79dc:	bl	73cc <gen_proto>
    79e0:	mov	r4, r0
    79e4:	mov	r1, r0
    79e8:	mov	r0, r5
    79ec:	bl	4884 <sf_gen_or>
    79f0:	mov	r2, #0
    79f4:	mov	r1, #26
    79f8:	mov	r0, #18
    79fc:	bl	73cc <gen_proto>
    7a00:	mov	r1, r4
    7a04:	bl	4884 <sf_gen_or>
    7a08:	mov	r2, #0
    7a0c:	mov	r1, #26
    7a10:	mov	r0, #24
    7a14:	bl	73cc <gen_proto>
    7a18:	mov	r1, r4
    7a1c:	bl	4884 <sf_gen_or>
    7a20:	mov	r1, #26
    7a24:	mov	r2, #0
    7a28:	mov	r0, r1
    7a2c:	bl	73cc <gen_proto>
    7a30:	mov	r1, r4
    7a34:	bl	4884 <sf_gen_or>
    7a38:	b	784c <sf_gen_proto_abbrev+0xf0>
    7a3c:	mov	r0, #240	; 0xf0
    7a40:	ldrd	r4, [sp]
    7a44:	ldr	r6, [sp, #8]
    7a48:	ldr	lr, [sp, #12]
    7a4c:	add	sp, sp, #16
    7a50:	b	66d0 <gen_linktype>
    7a54:	mov	r0, #224	; 0xe0
    7a58:	b	7a40 <sf_gen_proto_abbrev+0x2e4>
    7a5c:	mov	r0, #66	; 0x42
    7a60:	b	7a40 <sf_gen_proto_abbrev+0x2e4>
    7a64:	mov	r2, #0
    7a68:	mov	r1, #24
    7a6c:	mov	r0, #129	; 0x81
    7a70:	ldrd	r4, [sp]
    7a74:	ldr	r6, [sp, #8]
    7a78:	ldr	lr, [sp, #12]
    7a7c:	add	sp, sp, #16
    7a80:	b	73cc <gen_proto>
    7a84:	mov	r2, #0
    7a88:	mov	r1, #24
    7a8c:	mov	r0, #131	; 0x83
    7a90:	b	7a70 <sf_gen_proto_abbrev+0x314>
    7a94:	mov	r2, #0
    7a98:	mov	r1, #24
    7a9c:	mov	r0, #130	; 0x82
    7aa0:	b	7a70 <sf_gen_proto_abbrev+0x314>
    7aa4:	mov	r0, #254	; 0xfe
    7aa8:	b	7a40 <sf_gen_proto_abbrev+0x2e4>
    7aac:	movw	r0, #33011	; 0x80f3
    7ab0:	b	7a40 <sf_gen_proto_abbrev+0x2e4>
    7ab4:	mov	r2, #0
    7ab8:	mov	r1, #2
    7abc:	mov	r0, #112	; 0x70
    7ac0:	b	7a70 <sf_gen_proto_abbrev+0x314>
    7ac4:	mov	r2, #0
    7ac8:	mov	r1, #2
    7acc:	mov	r0, #103	; 0x67
    7ad0:	bl	73cc <gen_proto>
    7ad4:	mov	r4, r0
    7ad8:	mov	r2, #0
    7adc:	mov	r1, #17
    7ae0:	mov	r0, #103	; 0x67
    7ae4:	bl	73cc <gen_proto>
    7ae8:	mov	r1, r4
    7aec:	bl	4884 <sf_gen_or>
    7af0:	b	784c <sf_gen_proto_abbrev+0xf0>
    7af4:	mov	r2, #0
    7af8:	mov	r1, #2
    7afc:	mov	r0, #50	; 0x32
    7b00:	bl	73cc <gen_proto>
    7b04:	mov	r4, r0
    7b08:	mov	r2, #0
    7b0c:	mov	r1, #17
    7b10:	mov	r0, #50	; 0x32
    7b14:	bl	73cc <gen_proto>
    7b18:	mov	r1, r4
    7b1c:	bl	4884 <sf_gen_or>
    7b20:	b	784c <sf_gen_proto_abbrev+0xf0>
    7b24:	mov	r2, #0
    7b28:	mov	r1, #2
    7b2c:	mov	r0, #51	; 0x33
    7b30:	bl	73cc <gen_proto>
    7b34:	mov	r4, r0
    7b38:	mov	r2, #0
    7b3c:	mov	r1, #17
    7b40:	mov	r0, #51	; 0x33
    7b44:	bl	73cc <gen_proto>
    7b48:	mov	r1, r4
    7b4c:	bl	4884 <sf_gen_or>
    7b50:	b	784c <sf_gen_proto_abbrev+0xf0>
    7b54:	mov	r2, #0
    7b58:	mov	r1, #17
    7b5c:	mov	r0, #58	; 0x3a
    7b60:	b	7a70 <sf_gen_proto_abbrev+0x314>
    7b64:	movw	r0, #34525	; 0x86dd
    7b68:	b	7a40 <sf_gen_proto_abbrev+0x2e4>
    7b6c:	movw	r0, #24577	; 0x6001
    7b70:	b	7a40 <sf_gen_proto_abbrev+0x2e4>
    7b74:	movw	r0, #24578	; 0x6002
    7b78:	b	7a40 <sf_gen_proto_abbrev+0x2e4>
    7b7c:	movw	r0, #24583	; 0x6007
    7b80:	b	7a40 <sf_gen_proto_abbrev+0x2e4>
    7b84:	movw	r0, #24580	; 0x6004
    7b88:	b	7a40 <sf_gen_proto_abbrev+0x2e4>
    7b8c:	movw	r0, #24579	; 0x6003
    7b90:	b	7a40 <sf_gen_proto_abbrev+0x2e4>
    7b94:	movw	r0, #32923	; 0x809b
    7b98:	b	7a40 <sf_gen_proto_abbrev+0x2e4>
    7b9c:	mov	r2, #0
    7ba0:	mov	r1, #2
    7ba4:	mov	r0, #9
    7ba8:	b	7a70 <sf_gen_proto_abbrev+0x314>
    7bac:	mov	r1, #2
    7bb0:	mov	r2, #0
    7bb4:	mov	r0, r1
    7bb8:	b	7a70 <sf_gen_proto_abbrev+0x314>
    7bbc:	mov	r2, #0
    7bc0:	mov	r1, #2
    7bc4:	mov	r0, #1
    7bc8:	b	7a70 <sf_gen_proto_abbrev+0x314>
    7bcc:	mov	r2, #0
    7bd0:	mov	r1, #2
    7bd4:	mov	r0, #17
    7bd8:	bl	73cc <gen_proto>
    7bdc:	mov	r1, #17
    7be0:	mov	r4, r0
    7be4:	mov	r2, #0
    7be8:	mov	r0, r1
    7bec:	bl	73cc <gen_proto>
    7bf0:	mov	r1, r4
    7bf4:	bl	4884 <sf_gen_or>
    7bf8:	b	784c <sf_gen_proto_abbrev+0xf0>
    7bfc:	mov	r2, #0
    7c00:	mov	r1, #2
    7c04:	mov	r0, #6
    7c08:	bl	73cc <gen_proto>
    7c0c:	mov	r4, r0
    7c10:	mov	r2, #0
    7c14:	mov	r1, #17
    7c18:	mov	r0, #6
    7c1c:	bl	73cc <gen_proto>
    7c20:	mov	r1, r4
    7c24:	bl	4884 <sf_gen_or>
    7c28:	b	784c <sf_gen_proto_abbrev+0xf0>
    7c2c:	mov	r2, #0
    7c30:	mov	r1, #2
    7c34:	mov	r0, #132	; 0x84
    7c38:	bl	73cc <gen_proto>
    7c3c:	mov	r4, r0
    7c40:	mov	r2, #0
    7c44:	mov	r1, #17
    7c48:	mov	r0, #132	; 0x84
    7c4c:	bl	73cc <gen_proto>
    7c50:	mov	r1, r4
    7c54:	bl	4884 <sf_gen_or>
    7c58:	b	784c <sf_gen_proto_abbrev+0xf0>
    7c5c:	movw	r0, #32821	; 0x8035
    7c60:	b	7a40 <sf_gen_proto_abbrev+0x2e4>
    7c64:	movw	r0, #2054	; 0x806
    7c68:	b	7a40 <sf_gen_proto_abbrev+0x2e4>
    7c6c:	mov	r0, #2048	; 0x800
    7c70:	b	7a40 <sf_gen_proto_abbrev+0x2e4>
    7c74:	ldr	r0, [pc, #20]	; 7c90 <sf_gen_proto_abbrev+0x534>
    7c78:	add	r0, pc, r0
    7c7c:	bl	2210 <sf_bpf_error>
    7c80:	ldr	r0, [pc, #12]	; 7c94 <sf_gen_proto_abbrev+0x538>
    7c84:	add	r0, pc, r0
    7c88:	bl	2210 <sf_bpf_error>
    7c8c:	bl	ebc <abort@plt>
    7c90:	.word	0x0000bd8c
    7c94:	.word	0x0000bda4

00007c98 <sf_gen_load>:
    7c98:	strd	r4, [sp, #-24]!	; 0xffffffe8
    7c9c:	mov	r4, r1
    7ca0:	mov	r5, #0
    7ca4:	strd	r6, [sp, #8]
    7ca8:	mov	r7, r0
    7cac:	str	r8, [sp, #16]
    7cb0:	mov	r8, r2
    7cb4:	str	lr, [sp, #20]
    7cb8:	bl	24f0 <alloc_reg>
    7cbc:	ldr	r3, [pc, #1384]	; 822c <sf_gen_load+0x594>
    7cc0:	cmp	r8, #2
    7cc4:	mov	r6, r0
    7cc8:	ldr	r2, [r4, #8]
    7ccc:	add	r3, pc, r3
    7cd0:	add	r3, r3, r2, lsl #2
    7cd4:	str	r5, [r3, #792]	; 0x318
    7cd8:	beq	7cf8 <sf_gen_load+0x60>
    7cdc:	cmp	r8, #4
    7ce0:	beq	7cfc <sf_gen_load+0x64>
    7ce4:	cmp	r8, #1
    7ce8:	beq	81c8 <sf_gen_load+0x530>
    7cec:	ldr	r0, [pc, #1340]	; 8230 <sf_gen_load+0x598>
    7cf0:	add	r0, pc, r0
    7cf4:	bl	2210 <sf_bpf_error>
    7cf8:	mov	r5, #8
    7cfc:	sub	r3, r7, #1
    7d00:	cmp	r3, #39	; 0x27
    7d04:	addls	pc, pc, r3, lsl #2
    7d08:	b	8214 <sf_gen_load+0x57c>
    7d0c:	b	80d8 <sf_gen_load+0x440>
    7d10:	b	7fb8 <sf_gen_load+0x320>
    7d14:	b	7fb8 <sf_gen_load+0x320>
    7d18:	b	7fb8 <sf_gen_load+0x320>
    7d1c:	b	7e7c <sf_gen_load+0x1e4>
    7d20:	b	7e7c <sf_gen_load+0x1e4>
    7d24:	b	7e7c <sf_gen_load+0x1e4>
    7d28:	b	7e7c <sf_gen_load+0x1e4>
    7d2c:	b	7e7c <sf_gen_load+0x1e4>
    7d30:	b	7e7c <sf_gen_load+0x1e4>
    7d34:	b	7fb8 <sf_gen_load+0x320>
    7d38:	b	7fb8 <sf_gen_load+0x320>
    7d3c:	b	7fb8 <sf_gen_load+0x320>
    7d40:	b	7fb8 <sf_gen_load+0x320>
    7d44:	b	7fb8 <sf_gen_load+0x320>
    7d48:	b	7fb8 <sf_gen_load+0x320>
    7d4c:	b	7fb8 <sf_gen_load+0x320>
    7d50:	b	8208 <sf_gen_load+0x570>
    7d54:	b	8214 <sf_gen_load+0x57c>
    7d58:	b	8214 <sf_gen_load+0x57c>
    7d5c:	b	7e7c <sf_gen_load+0x1e4>
    7d60:	b	7e7c <sf_gen_load+0x1e4>
    7d64:	b	8214 <sf_gen_load+0x57c>
    7d68:	b	8214 <sf_gen_load+0x57c>
    7d6c:	b	8214 <sf_gen_load+0x57c>
    7d70:	b	8214 <sf_gen_load+0x57c>
    7d74:	b	8214 <sf_gen_load+0x57c>
    7d78:	b	8214 <sf_gen_load+0x57c>
    7d7c:	b	8214 <sf_gen_load+0x57c>
    7d80:	b	8214 <sf_gen_load+0x57c>
    7d84:	b	8214 <sf_gen_load+0x57c>
    7d88:	b	8214 <sf_gen_load+0x57c>
    7d8c:	b	8214 <sf_gen_load+0x57c>
    7d90:	b	8214 <sf_gen_load+0x57c>
    7d94:	b	8214 <sf_gen_load+0x57c>
    7d98:	b	8214 <sf_gen_load+0x57c>
    7d9c:	b	8214 <sf_gen_load+0x57c>
    7da0:	b	8214 <sf_gen_load+0x57c>
    7da4:	b	8214 <sf_gen_load+0x57c>
    7da8:	b	7dac <sf_gen_load+0x114>
    7dac:	ldr	r3, [pc, #1152]	; 8234 <sf_gen_load+0x59c>
    7db0:	add	r3, pc, r3
    7db4:	ldr	r3, [r3, #856]	; 0x358
    7db8:	bic	r2, r3, #8
    7dbc:	cmp	r2, #119	; 0x77
    7dc0:	cmpne	r3, #163	; 0xa3
    7dc4:	bne	8220 <sf_gen_load+0x588>
    7dc8:	mov	r0, #20
    7dcc:	orr	r5, r5, #64	; 0x40
    7dd0:	bl	2250 <newchunk>
    7dd4:	mov	r7, r0
    7dd8:	mov	r3, #97	; 0x61
    7ddc:	mov	r0, #20
    7de0:	str	r3, [r7]
    7de4:	ldr	r3, [r4, #8]
    7de8:	str	r3, [r7, #12]
    7dec:	bl	2250 <newchunk>
    7df0:	mov	r2, r7
    7df4:	str	r5, [r0]
    7df8:	b	7e00 <sf_gen_load+0x168>
    7dfc:	mov	r2, r3
    7e00:	ldr	r3, [r2, #16]
    7e04:	cmp	r3, #0
    7e08:	bne	7dfc <sf_gen_load+0x164>
    7e0c:	str	r0, [r2, #16]
    7e10:	ldr	r2, [r4, #4]
    7e14:	b	7e1c <sf_gen_load+0x184>
    7e18:	mov	r2, r3
    7e1c:	ldr	r3, [r2, #16]
    7e20:	cmp	r3, #0
    7e24:	bne	7e18 <sf_gen_load+0x180>
    7e28:	str	r7, [r2, #16]
    7e2c:	mov	r0, #20
    7e30:	str	r6, [r4, #8]
    7e34:	bl	2250 <newchunk>
    7e38:	mov	r3, #2
    7e3c:	mov	r1, r0
    7e40:	str	r3, [r0]
    7e44:	str	r6, [r0, #12]
    7e48:	ldr	r2, [r4, #4]
    7e4c:	b	7e54 <sf_gen_load+0x1bc>
    7e50:	mov	r2, r3
    7e54:	ldr	r3, [r2, #16]
    7e58:	cmp	r3, #0
    7e5c:	bne	7e50 <sf_gen_load+0x1b8>
    7e60:	str	r1, [r2, #16]
    7e64:	mov	r0, r4
    7e68:	ldrd	r4, [sp]
    7e6c:	ldrd	r6, [sp, #8]
    7e70:	ldr	r8, [sp, #16]
    7e74:	add	sp, sp, #20
    7e78:	pop	{pc}		; (ldr pc, [sp], #4)
    7e7c:	bl	27dc <gen_loadx_iphdrlen>
    7e80:	mov	r8, r0
    7e84:	mov	r0, #20
    7e88:	bl	2250 <newchunk>
    7e8c:	mov	r3, #96	; 0x60
    7e90:	mov	r2, r8
    7e94:	str	r3, [r0]
    7e98:	ldr	r3, [r4, #8]
    7e9c:	str	r3, [r0, #12]
    7ea0:	b	7ea8 <sf_gen_load+0x210>
    7ea4:	mov	r2, r3
    7ea8:	ldr	r3, [r2, #16]
    7eac:	cmp	r3, #0
    7eb0:	bne	7ea4 <sf_gen_load+0x20c>
    7eb4:	str	r0, [r2, #16]
    7eb8:	mov	r0, #20
    7ebc:	bl	2250 <newchunk>
    7ec0:	mov	r3, #12
    7ec4:	mov	r2, r8
    7ec8:	str	r3, [r0]
    7ecc:	b	7ed4 <sf_gen_load+0x23c>
    7ed0:	mov	r2, r3
    7ed4:	ldr	r3, [r2, #16]
    7ed8:	cmp	r3, #0
    7edc:	bne	7ed0 <sf_gen_load+0x238>
    7ee0:	str	r0, [r2, #16]
    7ee4:	mov	r0, #20
    7ee8:	bl	2250 <newchunk>
    7eec:	mov	r3, #7
    7ef0:	mov	r2, r8
    7ef4:	str	r3, [r0]
    7ef8:	b	7f00 <sf_gen_load+0x268>
    7efc:	mov	r2, r3
    7f00:	ldr	r3, [r2, #16]
    7f04:	cmp	r3, #0
    7f08:	bne	7efc <sf_gen_load+0x264>
    7f0c:	orr	r5, r5, #64	; 0x40
    7f10:	str	r0, [r2, #16]
    7f14:	mov	r0, #20
    7f18:	bl	2250 <newchunk>
    7f1c:	mov	r2, r8
    7f20:	str	r5, [r0]
    7f24:	b	7f2c <sf_gen_load+0x294>
    7f28:	mov	r2, r3
    7f2c:	ldr	r3, [r2, #16]
    7f30:	cmp	r3, #0
    7f34:	bne	7f28 <sf_gen_load+0x290>
    7f38:	ldr	r3, [pc, #760]	; 8238 <sf_gen_load+0x5a0>
    7f3c:	str	r0, [r2, #16]
    7f40:	add	r3, pc, r3
    7f44:	ldr	r2, [r3, #872]	; 0x368
    7f48:	ldr	r3, [r3, #876]	; 0x36c
    7f4c:	add	r3, r3, r2
    7f50:	str	r3, [r0, #12]
    7f54:	ldr	r2, [r4, #4]
    7f58:	b	7f60 <sf_gen_load+0x2c8>
    7f5c:	mov	r2, r3
    7f60:	ldr	r3, [r2, #16]
    7f64:	cmp	r3, #0
    7f68:	bne	7f5c <sf_gen_load+0x2c4>
    7f6c:	mov	r0, r7
    7f70:	str	r8, [r2, #16]
    7f74:	bl	775c <sf_gen_proto_abbrev>
    7f78:	mov	r7, r0
    7f7c:	bl	2b1c <gen_ipfrag>
    7f80:	mov	r1, r0
    7f84:	mov	r5, r0
    7f88:	mov	r0, r7
    7f8c:	bl	3a88 <sf_gen_and>
    7f90:	ldr	r0, [r4]
    7f94:	cmp	r0, #0
    7f98:	beq	7fa0 <sf_gen_load+0x308>
    7f9c:	bl	3a88 <sf_gen_and>
    7fa0:	mov	r0, #2
    7fa4:	bl	775c <sf_gen_proto_abbrev>
    7fa8:	mov	r1, r5
    7fac:	bl	3a88 <sf_gen_and>
    7fb0:	str	r5, [r4]
    7fb4:	b	7e2c <sf_gen_load+0x194>
    7fb8:	bl	2778 <gen_off_macpl>
    7fbc:	subs	r8, r0, #0
    7fc0:	mov	r0, #20
    7fc4:	beq	81d0 <sf_gen_load+0x538>
    7fc8:	bl	2250 <newchunk>
    7fcc:	mov	r3, #96	; 0x60
    7fd0:	mov	r2, r8
    7fd4:	str	r3, [r0]
    7fd8:	ldr	r3, [r4, #8]
    7fdc:	str	r3, [r0, #12]
    7fe0:	b	7fe8 <sf_gen_load+0x350>
    7fe4:	mov	r2, r3
    7fe8:	ldr	r3, [r2, #16]
    7fec:	cmp	r3, #0
    7ff0:	bne	7fe4 <sf_gen_load+0x34c>
    7ff4:	str	r0, [r2, #16]
    7ff8:	mov	r0, #20
    7ffc:	bl	2250 <newchunk>
    8000:	mov	r3, #12
    8004:	mov	r2, r8
    8008:	str	r3, [r0]
    800c:	b	8014 <sf_gen_load+0x37c>
    8010:	mov	r2, r3
    8014:	ldr	r3, [r2, #16]
    8018:	cmp	r3, #0
    801c:	bne	8010 <sf_gen_load+0x378>
    8020:	str	r0, [r2, #16]
    8024:	mov	r0, #20
    8028:	bl	2250 <newchunk>
    802c:	mov	r3, #7
    8030:	mov	r2, r8
    8034:	str	r3, [r0]
    8038:	b	8040 <sf_gen_load+0x3a8>
    803c:	mov	r2, r3
    8040:	ldr	r3, [r2, #16]
    8044:	cmp	r3, #0
    8048:	bne	803c <sf_gen_load+0x3a4>
    804c:	str	r0, [r2, #16]
    8050:	mov	r0, #20
    8054:	orr	r5, r5, #64	; 0x40
    8058:	bl	2250 <newchunk>
    805c:	ldr	r3, [pc, #472]	; 823c <sf_gen_load+0x5a4>
    8060:	mov	r2, r8
    8064:	str	r5, [r0]
    8068:	add	r3, pc, r3
    806c:	ldr	r1, [r3, #872]	; 0x368
    8070:	ldr	r3, [r3, #876]	; 0x36c
    8074:	add	r3, r3, r1
    8078:	str	r3, [r0, #12]
    807c:	b	8084 <sf_gen_load+0x3ec>
    8080:	mov	r2, r3
    8084:	ldr	r3, [r2, #16]
    8088:	cmp	r3, #0
    808c:	bne	8080 <sf_gen_load+0x3e8>
    8090:	str	r0, [r2, #16]
    8094:	ldr	r2, [r4, #4]
    8098:	b	80a0 <sf_gen_load+0x408>
    809c:	mov	r2, r3
    80a0:	ldr	r3, [r2, #16]
    80a4:	cmp	r3, #0
    80a8:	bne	809c <sf_gen_load+0x404>
    80ac:	mov	r0, r7
    80b0:	str	r8, [r2, #16]
    80b4:	bl	775c <sf_gen_proto_abbrev>
    80b8:	mov	r5, r0
    80bc:	ldr	r0, [r4]
    80c0:	cmp	r0, #0
    80c4:	beq	80d0 <sf_gen_load+0x438>
    80c8:	mov	r1, r5
    80cc:	bl	3a88 <sf_gen_and>
    80d0:	str	r5, [r4]
    80d4:	b	7e2c <sf_gen_load+0x194>
    80d8:	bl	2610 <gen_llprefixlen>
    80dc:	subs	r7, r0, #0
    80e0:	mov	r0, #20
    80e4:	beq	81ec <sf_gen_load+0x554>
    80e8:	bl	2250 <newchunk>
    80ec:	mov	r3, #96	; 0x60
    80f0:	mov	r2, r7
    80f4:	str	r3, [r0]
    80f8:	ldr	r3, [r4, #8]
    80fc:	str	r3, [r0, #12]
    8100:	b	8108 <sf_gen_load+0x470>
    8104:	mov	r2, r3
    8108:	ldr	r3, [r2, #16]
    810c:	cmp	r3, #0
    8110:	bne	8104 <sf_gen_load+0x46c>
    8114:	str	r0, [r2, #16]
    8118:	mov	r0, #20
    811c:	bl	2250 <newchunk>
    8120:	mov	r3, #12
    8124:	mov	r2, r7
    8128:	str	r3, [r0]
    812c:	b	8134 <sf_gen_load+0x49c>
    8130:	mov	r2, r3
    8134:	ldr	r3, [r2, #16]
    8138:	cmp	r3, #0
    813c:	bne	8130 <sf_gen_load+0x498>
    8140:	str	r0, [r2, #16]
    8144:	mov	r0, #20
    8148:	bl	2250 <newchunk>
    814c:	mov	r3, #7
    8150:	mov	r2, r7
    8154:	str	r3, [r0]
    8158:	b	8160 <sf_gen_load+0x4c8>
    815c:	mov	r2, r3
    8160:	ldr	r3, [r2, #16]
    8164:	cmp	r3, #0
    8168:	bne	815c <sf_gen_load+0x4c4>
    816c:	str	r0, [r2, #16]
    8170:	mov	r0, #20
    8174:	orr	r5, r5, #64	; 0x40
    8178:	bl	2250 <newchunk>
    817c:	ldr	r3, [pc, #188]	; 8240 <sf_gen_load+0x5a8>
    8180:	mov	r2, r7
    8184:	str	r5, [r0]
    8188:	add	r3, pc, r3
    818c:	ldr	r3, [r3, #860]	; 0x35c
    8190:	str	r3, [r0, #12]
    8194:	b	819c <sf_gen_load+0x504>
    8198:	mov	r2, r3
    819c:	ldr	r3, [r2, #16]
    81a0:	cmp	r3, #0
    81a4:	bne	8198 <sf_gen_load+0x500>
    81a8:	str	r0, [r2, #16]
    81ac:	ldr	r2, [r4, #4]
    81b0:	b	81b8 <sf_gen_load+0x520>
    81b4:	mov	r2, r3
    81b8:	ldr	r3, [r2, #16]
    81bc:	cmp	r3, #0
    81c0:	bne	81b4 <sf_gen_load+0x51c>
    81c4:	b	7e28 <sf_gen_load+0x190>
    81c8:	mov	r5, #16
    81cc:	b	7cfc <sf_gen_load+0x64>
    81d0:	bl	2250 <newchunk>
    81d4:	mov	r3, #97	; 0x61
    81d8:	mov	r8, r0
    81dc:	str	r3, [r0]
    81e0:	ldr	r3, [r4, #8]
    81e4:	str	r3, [r0, #12]
    81e8:	b	8050 <sf_gen_load+0x3b8>
    81ec:	bl	2250 <newchunk>
    81f0:	mov	r3, #97	; 0x61
    81f4:	mov	r7, r0
    81f8:	str	r3, [r0]
    81fc:	ldr	r3, [r4, #8]
    8200:	str	r3, [r0, #12]
    8204:	b	8170 <sf_gen_load+0x4d8>
    8208:	ldr	r0, [pc, #52]	; 8244 <sf_gen_load+0x5ac>
    820c:	add	r0, pc, r0
    8210:	bl	2210 <sf_bpf_error>
    8214:	ldr	r0, [pc, #44]	; 8248 <sf_gen_load+0x5b0>
    8218:	add	r0, pc, r0
    821c:	bl	2210 <sf_bpf_error>
    8220:	ldr	r0, [pc, #36]	; 824c <sf_gen_load+0x5b4>
    8224:	add	r0, pc, r0
    8228:	bl	2210 <sf_bpf_error>
    822c:	.word	0x00029694
    8230:	.word	0x0000bd60
    8234:	.word	0x000295b0
    8238:	.word	0x00029420
    823c:	.word	0x000292f8
    8240:	.word	0x000291d8
    8244:	.word	0x0000b8ac
    8248:	.word	0x0000b858
    824c:	.word	0x0000b868

00008250 <sf_gen_inbound>:
    8250:	ldr	r2, [pc, #460]	; 8424 <sf_gen_inbound+0x1d4>
    8254:	strd	r4, [sp, #-12]!
    8258:	mov	r4, r0
    825c:	str	lr, [sp, #8]
    8260:	sub	sp, sp, #20
    8264:	add	r2, pc, r2
    8268:	ldr	r1, [r2, #856]	; 0x358
    826c:	cmp	r1, #168	; 0xa8
    8270:	bgt	82c8 <sf_gen_inbound+0x78>
    8274:	cmp	r1, #167	; 0xa7
    8278:	bge	834c <sf_gen_inbound+0xfc>
    827c:	cmp	r1, #137	; 0x89
    8280:	bgt	8300 <sf_gen_inbound+0xb0>
    8284:	cmp	r1, #130	; 0x82
    8288:	bge	834c <sf_gen_inbound+0xfc>
    828c:	cmp	r1, #8
    8290:	beq	83dc <sf_gen_inbound+0x18c>
    8294:	cmp	r1, #113	; 0x71
    8298:	bne	8334 <sf_gen_inbound+0xe4>
    829c:	cmp	r0, #0
    82a0:	beq	8384 <sf_gen_inbound+0x134>
    82a4:	mov	r3, #4
    82a8:	mov	r2, #8
    82ac:	mov	r1, #0
    82b0:	mov	r0, #1
    82b4:	add	sp, sp, #20
    82b8:	ldrd	r4, [sp]
    82bc:	ldr	lr, [sp, #8]
    82c0:	add	sp, sp, #12
    82c4:	b	2c2c <gen_cmp>
    82c8:	cmp	r1, #183	; 0xb7
    82cc:	beq	834c <sf_gen_inbound+0xfc>
    82d0:	ble	8340 <sf_gen_inbound+0xf0>
    82d4:	cmp	r1, #200	; 0xc8
    82d8:	beq	834c <sf_gen_inbound+0xfc>
    82dc:	cmp	r1, #226	; 0xe2
    82e0:	bne	832c <sf_gen_inbound+0xdc>
    82e4:	cmp	r0, #0
    82e8:	beq	8394 <sf_gen_inbound+0x144>
    82ec:	mov	r3, #1
    82f0:	mov	r2, #8
    82f4:	mov	r0, r3
    82f8:	mov	r1, #2
    82fc:	b	82b4 <sf_gen_inbound+0x64>
    8300:	cmp	r1, #164	; 0xa4
    8304:	beq	834c <sf_gen_inbound+0xfc>
    8308:	cmp	r1, #166	; 0xa6
    830c:	bne	8334 <sf_gen_inbound+0xe4>
    8310:	cmp	r0, #0
    8314:	beq	83a4 <sf_gen_inbound+0x154>
    8318:	mov	r3, #1
    831c:	mov	r2, #16
    8320:	mov	r0, r3
    8324:	mov	r1, #0
    8328:	b	82b4 <sf_gen_inbound+0x64>
    832c:	cmp	r1, #194	; 0xc2
    8330:	beq	834c <sf_gen_inbound+0xfc>
    8334:	ldr	r0, [pc, #236]	; 8428 <sf_gen_inbound+0x1d8>
    8338:	add	r0, pc, r0
    833c:	bl	2210 <sf_bpf_error>
    8340:	sub	r3, r1, #178	; 0xb2
    8344:	cmp	r3, #3
    8348:	bhi	8334 <sf_gen_inbound+0xe4>
    834c:	cmp	r4, #0
    8350:	bne	83b4 <sf_gen_inbound+0x164>
    8354:	mov	ip, #1
    8358:	mov	r1, #16
    835c:	mov	r2, r1
    8360:	mov	r3, ip
    8364:	mov	r0, ip
    8368:	stm	sp, {r1, r4, ip}
    836c:	mov	r1, #3
    8370:	bl	2b74 <gen_ncmp>
    8374:	add	sp, sp, #20
    8378:	ldrd	r4, [sp]
    837c:	add	sp, sp, #8
    8380:	pop	{pc}		; (ldr pc, [sp], #4)
    8384:	mov	r3, r0
    8388:	mov	r1, r0
    838c:	mov	r2, #8
    8390:	b	82b0 <sf_gen_inbound+0x60>
    8394:	mov	r3, #2
    8398:	mov	r2, #8
    839c:	mov	r1, r3
    83a0:	b	82b0 <sf_gen_inbound+0x60>
    83a4:	mov	r3, r0
    83a8:	mov	r1, r0
    83ac:	mov	r2, #16
    83b0:	b	82b0 <sf_gen_inbound+0x60>
    83b4:	mov	ip, #0
    83b8:	mov	r1, #16
    83bc:	mov	r3, #1
    83c0:	mov	r2, r1
    83c4:	mov	r0, r3
    83c8:	stm	sp, {r1, ip}
    83cc:	mov	r1, #3
    83d0:	str	ip, [sp, #8]
    83d4:	bl	2b74 <gen_ncmp>
    83d8:	b	8374 <sf_gen_inbound+0x124>
    83dc:	mov	r0, #0
    83e0:	bl	5e34 <sf_gen_loadi>
    83e4:	mov	r2, #1
    83e8:	mov	r1, r0
    83ec:	mov	r0, r2
    83f0:	bl	7c98 <sf_gen_load>
    83f4:	mov	r5, r0
    83f8:	mov	r0, #0
    83fc:	bl	5e34 <sf_gen_loadi>
    8400:	mov	r2, r0
    8404:	mov	r3, r4
    8408:	mov	r1, r5
    840c:	mov	r0, #16
    8410:	add	sp, sp, #20
    8414:	ldrd	r4, [sp]
    8418:	ldr	lr, [sp, #8]
    841c:	add	sp, sp, #12
    8420:	b	5c10 <sf_gen_relation>
    8424:	.word	0x000290fc
    8428:	.word	0x0000b7b8

0000842c <gen_hostop>:
    842c:	strd	r4, [sp, #-28]!	; 0xffffffe4
    8430:	mov	r5, r1
    8434:	strd	r6, [sp, #8]
    8438:	mov	r6, r0
    843c:	mov	r7, r3
    8440:	strd	r8, [sp, #16]
    8444:	str	lr, [sp, #24]
    8448:	sub	sp, sp, #20
    844c:	ldr	r4, [sp, #48]	; 0x30
    8450:	ldr	r8, [sp, #52]	; 0x34
    8454:	cmp	r2, #4
    8458:	addls	pc, pc, r2, lsl #2
    845c:	b	8544 <gen_hostop+0x118>
    8460:	b	84cc <gen_hostop+0xa0>
    8464:	b	8478 <gen_hostop+0x4c>
    8468:	b	8474 <gen_hostop+0x48>
    846c:	b	84cc <gen_hostop+0xa0>
    8470:	b	8508 <gen_hostop+0xdc>
    8474:	mov	r4, r8
    8478:	mov	r0, r7
    847c:	bl	66d0 <gen_linktype>
    8480:	mov	r7, r0
    8484:	mov	r2, #0
    8488:	mov	r0, #16
    848c:	mov	r1, r4
    8490:	mov	r3, r5
    8494:	stm	sp, {r0, r2, r6}
    8498:	mov	r0, #3
    849c:	bl	2b74 <gen_ncmp>
    84a0:	mov	r4, r0
    84a4:	mov	r1, r0
    84a8:	mov	r0, r7
    84ac:	bl	3a88 <sf_gen_and>
    84b0:	mov	r0, r4
    84b4:	add	sp, sp, #20
    84b8:	ldrd	r4, [sp]
    84bc:	ldrd	r6, [sp, #8]
    84c0:	ldrd	r8, [sp, #16]
    84c4:	add	sp, sp, #24
    84c8:	pop	{pc}		; (ldr pc, [sp], #4)
    84cc:	mov	r2, #1
    84d0:	stm	sp, {r4, r8}
    84d4:	bl	842c <gen_hostop>
    84d8:	mov	r9, r0
    84dc:	mov	r1, r5
    84e0:	stm	sp, {r4, r8}
    84e4:	mov	r3, r7
    84e8:	mov	r0, r6
    84ec:	mov	r2, #2
    84f0:	bl	842c <gen_hostop>
    84f4:	mov	r4, r0
    84f8:	mov	r1, r0
    84fc:	mov	r0, r9
    8500:	bl	4884 <sf_gen_or>
    8504:	b	84b0 <gen_hostop+0x84>
    8508:	mov	r2, #1
    850c:	stm	sp, {r4, r8}
    8510:	bl	842c <gen_hostop>
    8514:	mov	r9, r0
    8518:	mov	r1, r5
    851c:	stm	sp, {r4, r8}
    8520:	mov	r3, r7
    8524:	mov	r0, r6
    8528:	mov	r2, #2
    852c:	bl	842c <gen_hostop>
    8530:	mov	r4, r0
    8534:	mov	r1, r0
    8538:	mov	r0, r9
    853c:	bl	3a88 <sf_gen_and>
    8540:	b	84b0 <gen_hostop+0x84>
    8544:	bl	ebc <abort@plt>

00008548 <gen_dnhostop>:
    8548:	strd	r4, [sp, #-36]!	; 0xffffffdc
    854c:	mov	r4, r0
    8550:	strd	r6, [sp, #8]
    8554:	strd	r8, [sp, #16]
    8558:	strd	sl, [sp, #24]
    855c:	str	lr, [sp, #32]
    8560:	sub	sp, sp, #28
    8564:	cmp	r1, #24
    8568:	addls	pc, pc, r1, lsl #2
    856c:	b	87ec <gen_dnhostop+0x2a4>
    8570:	b	8788 <gen_dnhostop+0x240>
    8574:	b	8770 <gen_dnhostop+0x228>
    8578:	b	85d4 <gen_dnhostop+0x8c>
    857c:	b	8788 <gen_dnhostop+0x240>
    8580:	b	87b4 <gen_dnhostop+0x26c>
    8584:	b	87ec <gen_dnhostop+0x2a4>
    8588:	b	87ec <gen_dnhostop+0x2a4>
    858c:	b	87ec <gen_dnhostop+0x2a4>
    8590:	b	87ec <gen_dnhostop+0x2a4>
    8594:	b	87ec <gen_dnhostop+0x2a4>
    8598:	b	87ec <gen_dnhostop+0x2a4>
    859c:	b	87ec <gen_dnhostop+0x2a4>
    85a0:	b	87ec <gen_dnhostop+0x2a4>
    85a4:	b	87ec <gen_dnhostop+0x2a4>
    85a8:	b	87ec <gen_dnhostop+0x2a4>
    85ac:	b	87ec <gen_dnhostop+0x2a4>
    85b0:	b	87ec <gen_dnhostop+0x2a4>
    85b4:	b	87ec <gen_dnhostop+0x2a4>
    85b8:	b	87ec <gen_dnhostop+0x2a4>
    85bc:	b	87ec <gen_dnhostop+0x2a4>
    85c0:	b	87ec <gen_dnhostop+0x2a4>
    85c4:	b	87ec <gen_dnhostop+0x2a4>
    85c8:	b	87ec <gen_dnhostop+0x2a4>
    85cc:	b	87ec <gen_dnhostop+0x2a4>
    85d0:	b	87e0 <gen_dnhostop+0x298>
    85d4:	mov	r3, #3
    85d8:	mov	sl, #4
    85dc:	mov	fp, #9
    85e0:	mov	r5, #10
    85e4:	str	r3, [sp, #20]
    85e8:	movw	r0, #24579	; 0x6003
    85ec:	mov	r6, #16
    85f0:	bl	66d0 <gen_linktype>
    85f4:	mov	r7, #0
    85f8:	mov	r8, r0
    85fc:	movw	r0, #33030	; 0x8106
    8600:	movw	r3, #65287	; 0xff07
    8604:	mov	r2, #8
    8608:	mov	r1, #2
    860c:	strd	r6, [sp]
    8610:	rev16	r4, r4
    8614:	str	r0, [sp, #8]
    8618:	mov	r0, #3
    861c:	bl	2b74 <gen_ncmp>
    8620:	uxth	r4, r4
    8624:	mov	r9, r0
    8628:	mov	r3, r4
    862c:	mov	r1, r5
    8630:	mov	r2, #8
    8634:	mov	r0, #3
    8638:	bl	2c2c <gen_cmp>
    863c:	mov	r5, r0
    8640:	mov	r1, r0
    8644:	mov	r0, r9
    8648:	bl	3a88 <sf_gen_and>
    864c:	mov	r0, #6
    8650:	mov	r2, r6
    8654:	strd	r6, [sp]
    8658:	mov	r3, #7
    865c:	mov	r1, #2
    8660:	str	r0, [sp, #8]
    8664:	mov	r0, #3
    8668:	bl	2b74 <gen_ncmp>
    866c:	mov	r9, r0
    8670:	mov	r3, r4
    8674:	mov	r2, #8
    8678:	mov	r1, fp
    867c:	mov	r0, #3
    8680:	bl	2c2c <gen_cmp>
    8684:	mov	r1, r0
    8688:	mov	fp, r0
    868c:	mov	r0, r9
    8690:	bl	3a88 <sf_gen_and>
    8694:	mov	r1, r5
    8698:	mov	r0, fp
    869c:	bl	4884 <sf_gen_or>
    86a0:	movw	ip, #33026	; 0x8102
    86a4:	movw	r3, #65287	; 0xff07
    86a8:	strd	r6, [sp]
    86ac:	mov	r2, #8
    86b0:	mov	r1, #2
    86b4:	mov	r0, #3
    86b8:	str	ip, [sp, #8]
    86bc:	bl	2b74 <gen_ncmp>
    86c0:	mov	r9, r0
    86c4:	mov	r3, r4
    86c8:	mov	r2, #8
    86cc:	mov	r1, sl
    86d0:	mov	r0, #3
    86d4:	bl	2c2c <gen_cmp>
    86d8:	mov	r1, r0
    86dc:	mov	sl, r0
    86e0:	mov	r0, r9
    86e4:	bl	3a88 <sf_gen_and>
    86e8:	mov	r1, r5
    86ec:	mov	r0, sl
    86f0:	bl	4884 <sf_gen_or>
    86f4:	mov	ip, #2
    86f8:	mov	r2, r6
    86fc:	strd	r6, [sp]
    8700:	mov	r1, ip
    8704:	mov	r3, #7
    8708:	mov	r0, #3
    870c:	str	ip, [sp, #8]
    8710:	bl	2b74 <gen_ncmp>
    8714:	mov	r6, r0
    8718:	mov	r3, r4
    871c:	ldr	r1, [sp, #20]
    8720:	mov	r2, #8
    8724:	mov	r0, #3
    8728:	bl	2c2c <gen_cmp>
    872c:	mov	r1, r0
    8730:	mov	r4, r0
    8734:	mov	r0, r6
    8738:	bl	3a88 <sf_gen_and>
    873c:	mov	r0, r4
    8740:	mov	r1, r5
    8744:	bl	4884 <sf_gen_or>
    8748:	mov	r0, r8
    874c:	bl	3a88 <sf_gen_and>
    8750:	mov	r0, r5
    8754:	add	sp, sp, #28
    8758:	ldrd	r4, [sp]
    875c:	ldrd	r6, [sp, #8]
    8760:	ldrd	r8, [sp, #16]
    8764:	ldrd	sl, [sp, #24]
    8768:	add	sp, sp, #32
    876c:	pop	{pc}		; (ldr pc, [sp], #4)
    8770:	mov	r3, #5
    8774:	mov	sl, #6
    8778:	mov	fp, #17
    877c:	mov	r5, #18
    8780:	str	r3, [sp, #20]
    8784:	b	85e8 <gen_dnhostop+0xa0>
    8788:	mov	r1, #1
    878c:	bl	8548 <gen_dnhostop>
    8790:	mov	r6, r0
    8794:	mov	r1, #2
    8798:	mov	r0, r4
    879c:	bl	8548 <gen_dnhostop>
    87a0:	mov	r5, r0
    87a4:	mov	r1, r0
    87a8:	mov	r0, r6
    87ac:	bl	4884 <sf_gen_or>
    87b0:	b	8750 <gen_dnhostop+0x208>
    87b4:	mov	r1, #1
    87b8:	bl	8548 <gen_dnhostop>
    87bc:	mov	r6, r0
    87c0:	mov	r1, #2
    87c4:	mov	r0, r4
    87c8:	bl	8548 <gen_dnhostop>
    87cc:	mov	r5, r0
    87d0:	mov	r1, r0
    87d4:	mov	r0, r6
    87d8:	bl	3a88 <sf_gen_and>
    87dc:	b	8750 <gen_dnhostop+0x208>
    87e0:	ldr	r0, [pc, #8]	; 87f0 <gen_dnhostop+0x2a8>
    87e4:	add	r0, pc, r0
    87e8:	bl	2210 <sf_bpf_error>
    87ec:	bl	ebc <abort@plt>
    87f0:	.word	0x0000b33c

000087f4 <gen_host>:
    87f4:	strd	r4, [sp, #-28]!	; 0xffffffe4
    87f8:	mov	r5, r0
    87fc:	strd	r6, [sp, #8]
    8800:	mov	r7, r1
    8804:	mov	r6, r3
    8808:	strd	r8, [sp, #16]
    880c:	str	lr, [sp, #24]
    8810:	sub	sp, sp, #12
    8814:	ldr	r4, [sp, #40]	; 0x28
    8818:	cmp	r4, #2
    881c:	beq	88d8 <gen_host+0xe4>
    8820:	ldr	r1, [pc, #820]	; 8b5c <gen_host+0x368>
    8824:	add	r1, pc, r1
    8828:	cmp	r2, #40	; 0x28
    882c:	addls	pc, pc, r2, lsl #2
    8830:	b	8b58 <gen_host+0x364>
    8834:	b	8908 <gen_host+0x114>
    8838:	b	8b58 <gen_host+0x364>
    883c:	b	8954 <gen_host+0x160>
    8840:	b	897c <gen_host+0x188>
    8844:	b	89a4 <gen_host+0x1b0>
    8848:	b	8a2c <gen_host+0x238>
    884c:	b	8a44 <gen_host+0x250>
    8850:	b	8a38 <gen_host+0x244>
    8854:	b	8ab0 <gen_host+0x2bc>
    8858:	b	8aa4 <gen_host+0x2b0>
    885c:	b	8a98 <gen_host+0x2a4>
    8860:	b	8a8c <gen_host+0x298>
    8864:	b	88e4 <gen_host+0xf0>
    8868:	b	8ac8 <gen_host+0x2d4>
    886c:	b	8abc <gen_host+0x2c8>
    8870:	b	8a20 <gen_host+0x22c>
    8874:	b	8b4c <gen_host+0x358>
    8878:	b	8b40 <gen_host+0x34c>
    887c:	b	8b34 <gen_host+0x340>
    8880:	b	8b28 <gen_host+0x334>
    8884:	b	8b1c <gen_host+0x328>
    8888:	b	8b10 <gen_host+0x31c>
    888c:	b	8b04 <gen_host+0x310>
    8890:	b	8af8 <gen_host+0x304>
    8894:	b	8aec <gen_host+0x2f8>
    8898:	b	8ae0 <gen_host+0x2ec>
    889c:	b	8ad4 <gen_host+0x2e0>
    88a0:	b	8a80 <gen_host+0x28c>
    88a4:	b	8a74 <gen_host+0x280>
    88a8:	b	8a68 <gen_host+0x274>
    88ac:	b	8a5c <gen_host+0x268>
    88b0:	b	8b58 <gen_host+0x364>
    88b4:	b	8b58 <gen_host+0x364>
    88b8:	b	8b58 <gen_host+0x364>
    88bc:	b	8b58 <gen_host+0x364>
    88c0:	b	8b58 <gen_host+0x364>
    88c4:	b	8b58 <gen_host+0x364>
    88c8:	b	8b58 <gen_host+0x364>
    88cc:	b	8b58 <gen_host+0x364>
    88d0:	b	8b58 <gen_host+0x364>
    88d4:	b	8a50 <gen_host+0x25c>
    88d8:	ldr	r1, [pc, #640]	; 8b60 <gen_host+0x36c>
    88dc:	add	r1, pc, r1
    88e0:	b	8828 <gen_host+0x34>
    88e4:	mov	r1, r6
    88e8:	mov	r0, r5
    88ec:	add	sp, sp, #12
    88f0:	ldrd	r4, [sp]
    88f4:	ldrd	r6, [sp, #8]
    88f8:	ldrd	r8, [sp, #16]
    88fc:	ldr	lr, [sp, #24]
    8900:	add	sp, sp, #28
    8904:	b	8548 <gen_dnhostop>
    8908:	mov	r3, r6
    890c:	mov	r2, #2
    8910:	str	r4, [sp]
    8914:	mov	r1, r7
    8918:	mov	r0, r5
    891c:	bl	87f4 <gen_host>
    8920:	ldr	r3, [pc, #572]	; 8b64 <gen_host+0x370>
    8924:	mov	r8, r0
    8928:	add	r3, pc, r3
    892c:	ldr	r3, [r3, #4]
    8930:	cmp	r3, #0
    8934:	beq	89cc <gen_host+0x1d8>
    8938:	mov	r0, r8
    893c:	add	sp, sp, #12
    8940:	ldrd	r4, [sp]
    8944:	ldrd	r6, [sp, #8]
    8948:	ldrd	r8, [sp, #16]
    894c:	add	sp, sp, #24
    8950:	pop	{pc}		; (ldr pc, [sp], #4)
    8954:	mov	ip, #16
    8958:	mov	r3, #12
    895c:	mov	r2, r6
    8960:	mov	r1, r7
    8964:	mov	r0, r5
    8968:	stm	sp, {r3, ip}
    896c:	mov	r3, #2048	; 0x800
    8970:	bl	842c <gen_hostop>
    8974:	mov	r8, r0
    8978:	b	8938 <gen_host+0x144>
    897c:	mov	ip, #24
    8980:	mov	r3, #14
    8984:	mov	r2, r6
    8988:	mov	r1, r7
    898c:	mov	r0, r5
    8990:	stm	sp, {r3, ip}
    8994:	movw	r3, #2054	; 0x806
    8998:	bl	842c <gen_hostop>
    899c:	mov	r8, r0
    89a0:	b	8938 <gen_host+0x144>
    89a4:	mov	ip, #24
    89a8:	mov	r3, #14
    89ac:	mov	r2, r6
    89b0:	mov	r1, r7
    89b4:	mov	r0, r5
    89b8:	stm	sp, {r3, ip}
    89bc:	movw	r3, #32821	; 0x8035
    89c0:	bl	842c <gen_hostop>
    89c4:	mov	r8, r0
    89c8:	b	8938 <gen_host+0x144>
    89cc:	mov	r3, r6
    89d0:	mov	r2, #3
    89d4:	str	r4, [sp]
    89d8:	mov	r1, r7
    89dc:	mov	r0, r5
    89e0:	bl	87f4 <gen_host>
    89e4:	mov	r9, r0
    89e8:	mov	r1, r0
    89ec:	mov	r0, r8
    89f0:	bl	4884 <sf_gen_or>
    89f4:	mov	r1, r7
    89f8:	mov	r3, r6
    89fc:	str	r4, [sp]
    8a00:	mov	r0, r5
    8a04:	mov	r2, #4
    8a08:	bl	87f4 <gen_host>
    8a0c:	mov	r8, r0
    8a10:	mov	r1, r0
    8a14:	mov	r0, r9
    8a18:	bl	4884 <sf_gen_or>
    8a1c:	b	8938 <gen_host+0x144>
    8a20:	ldr	r0, [pc, #320]	; 8b68 <gen_host+0x374>
    8a24:	add	r0, pc, r0
    8a28:	bl	2210 <sf_bpf_error>
    8a2c:	ldr	r0, [pc, #312]	; 8b6c <gen_host+0x378>
    8a30:	add	r0, pc, r0
    8a34:	bl	2210 <sf_bpf_error>
    8a38:	ldr	r0, [pc, #304]	; 8b70 <gen_host+0x37c>
    8a3c:	add	r0, pc, r0
    8a40:	bl	2210 <sf_bpf_error>
    8a44:	ldr	r0, [pc, #296]	; 8b74 <gen_host+0x380>
    8a48:	add	r0, pc, r0
    8a4c:	bl	2210 <sf_bpf_error>
    8a50:	ldr	r0, [pc, #288]	; 8b78 <gen_host+0x384>
    8a54:	add	r0, pc, r0
    8a58:	bl	2210 <sf_bpf_error>
    8a5c:	ldr	r0, [pc, #280]	; 8b7c <gen_host+0x388>
    8a60:	add	r0, pc, r0
    8a64:	bl	2210 <sf_bpf_error>
    8a68:	ldr	r0, [pc, #272]	; 8b80 <gen_host+0x38c>
    8a6c:	add	r0, pc, r0
    8a70:	bl	2210 <sf_bpf_error>
    8a74:	ldr	r0, [pc, #264]	; 8b84 <gen_host+0x390>
    8a78:	add	r0, pc, r0
    8a7c:	bl	2210 <sf_bpf_error>
    8a80:	ldr	r0, [pc, #256]	; 8b88 <gen_host+0x394>
    8a84:	add	r0, pc, r0
    8a88:	bl	2210 <sf_bpf_error>
    8a8c:	ldr	r0, [pc, #248]	; 8b8c <gen_host+0x398>
    8a90:	add	r0, pc, r0
    8a94:	bl	2210 <sf_bpf_error>
    8a98:	ldr	r0, [pc, #240]	; 8b90 <gen_host+0x39c>
    8a9c:	add	r0, pc, r0
    8aa0:	bl	2210 <sf_bpf_error>
    8aa4:	ldr	r0, [pc, #232]	; 8b94 <gen_host+0x3a0>
    8aa8:	add	r0, pc, r0
    8aac:	bl	2210 <sf_bpf_error>
    8ab0:	ldr	r0, [pc, #224]	; 8b98 <gen_host+0x3a4>
    8ab4:	add	r0, pc, r0
    8ab8:	bl	2210 <sf_bpf_error>
    8abc:	ldr	r0, [pc, #216]	; 8b9c <gen_host+0x3a8>
    8ac0:	add	r0, pc, r0
    8ac4:	bl	2210 <sf_bpf_error>
    8ac8:	ldr	r0, [pc, #208]	; 8ba0 <gen_host+0x3ac>
    8acc:	add	r0, pc, r0
    8ad0:	bl	2210 <sf_bpf_error>
    8ad4:	ldr	r0, [pc, #200]	; 8ba4 <gen_host+0x3b0>
    8ad8:	add	r0, pc, r0
    8adc:	bl	2210 <sf_bpf_error>
    8ae0:	ldr	r0, [pc, #192]	; 8ba8 <gen_host+0x3b4>
    8ae4:	add	r0, pc, r0
    8ae8:	bl	2210 <sf_bpf_error>
    8aec:	ldr	r0, [pc, #184]	; 8bac <gen_host+0x3b8>
    8af0:	add	r0, pc, r0
    8af4:	bl	2210 <sf_bpf_error>
    8af8:	ldr	r0, [pc, #176]	; 8bb0 <gen_host+0x3bc>
    8afc:	add	r0, pc, r0
    8b00:	bl	2210 <sf_bpf_error>
    8b04:	ldr	r0, [pc, #168]	; 8bb4 <gen_host+0x3c0>
    8b08:	add	r0, pc, r0
    8b0c:	bl	2210 <sf_bpf_error>
    8b10:	ldr	r0, [pc, #160]	; 8bb8 <gen_host+0x3c4>
    8b14:	add	r0, pc, r0
    8b18:	bl	2210 <sf_bpf_error>
    8b1c:	ldr	r0, [pc, #152]	; 8bbc <gen_host+0x3c8>
    8b20:	add	r0, pc, r0
    8b24:	bl	2210 <sf_bpf_error>
    8b28:	ldr	r0, [pc, #144]	; 8bc0 <gen_host+0x3cc>
    8b2c:	add	r0, pc, r0
    8b30:	bl	2210 <sf_bpf_error>
    8b34:	ldr	r0, [pc, #136]	; 8bc4 <gen_host+0x3d0>
    8b38:	add	r0, pc, r0
    8b3c:	bl	2210 <sf_bpf_error>
    8b40:	ldr	r0, [pc, #128]	; 8bc8 <gen_host+0x3d4>
    8b44:	add	r0, pc, r0
    8b48:	bl	2210 <sf_bpf_error>
    8b4c:	ldr	r0, [pc, #120]	; 8bcc <gen_host+0x3d8>
    8b50:	add	r0, pc, r0
    8b54:	bl	2210 <sf_bpf_error>
    8b58:	bl	ebc <abort@plt>
    8b5c:	.word	0x0000d458
    8b60:	.word	0x0000b268
    8b64:	.word	0x00028948
    8b68:	.word	0x0000b2e0
    8b6c:	.word	0x0000b138
    8b70:	.word	0x0000b14c
    8b74:	.word	0x0000b100
    8b78:	.word	0x0000b420
    8b7c:	.word	0x0000b3f0
    8b80:	.word	0x0000b3c0
    8b84:	.word	0x0000b394
    8b88:	.word	0x0000b368
    8b8c:	.word	0x0000b1b8
    8b90:	.word	0x0000b14c
    8b94:	.word	0x0000b120
    8b98:	.word	0x0000b0f4
    8b9c:	.word	0x0000b1d4
    8ba0:	.word	0x0000b1ec
    8ba4:	.word	0x0000b2f4
    8ba8:	.word	0x0000b2c8
    8bac:	.word	0x0000b030
    8bb0:	.word	0x0000b174
    8bb4:	.word	0x0000b120
    8bb8:	.word	0x0000b0f4
    8bbc:	.word	0x0000b26c
    8bc0:	.word	0x0000b244
    8bc4:	.word	0x0000b218
    8bc8:	.word	0x0000b1e8
    8bcc:	.word	0x0000b18c

00008bd0 <sf_gen_mcode>:
    8bd0:	strd	r4, [sp, #-20]!	; 0xffffffec
    8bd4:	mov	r5, r1
    8bd8:	uxtb	r4, r3
    8bdc:	strd	r6, [sp, #8]
    8be0:	mov	r7, r2
    8be4:	mov	r6, r0
    8be8:	str	lr, [sp, #16]
    8bec:	sub	sp, sp, #28
    8bf0:	add	r1, sp, #16
    8bf4:	str	r3, [sp, #12]
    8bf8:	bl	bff0 <__pcap_atoin>
    8bfc:	ldr	r3, [sp, #16]
    8c00:	rsb	r0, r0, #32
    8c04:	cmp	r5, #0
    8c08:	lsl	r0, r3, r0
    8c0c:	str	r0, [sp, #16]
    8c10:	beq	8c70 <sf_gen_mcode+0xa0>
    8c14:	add	r1, sp, #20
    8c18:	mov	r0, r5
    8c1c:	bl	bff0 <__pcap_atoin>
    8c20:	ldr	r3, [sp, #16]
    8c24:	rsb	r0, r0, #32
    8c28:	ldr	r2, [sp, #20]
    8c2c:	lsl	r0, r2, r0
    8c30:	bics	r2, r3, r0
    8c34:	str	r0, [sp, #20]
    8c38:	bne	8cc4 <sf_gen_mcode+0xf4>
    8c3c:	cmp	r4, #2
    8c40:	bne	8cb8 <sf_gen_mcode+0xe8>
    8c44:	mov	r0, r3
    8c48:	ldrb	r2, [sp, #13]
    8c4c:	str	r4, [sp]
    8c50:	ldrb	r3, [sp, #14]
    8c54:	ldr	r1, [sp, #20]
    8c58:	bl	87f4 <gen_host>
    8c5c:	add	sp, sp, #28
    8c60:	ldrd	r4, [sp]
    8c64:	ldrd	r6, [sp, #8]
    8c68:	add	sp, sp, #16
    8c6c:	pop	{pc}		; (ldr pc, [sp], #4)
    8c70:	cmp	r7, #32
    8c74:	bgt	8cd8 <sf_gen_mcode+0x108>
    8c78:	cmp	r7, #0
    8c7c:	mov	r3, r0
    8c80:	moveq	r2, r7
    8c84:	beq	8c98 <sf_gen_mcode+0xc8>
    8c88:	rsb	r1, r7, #32
    8c8c:	mvn	r2, #0
    8c90:	lsl	r2, r2, r1
    8c94:	bic	r0, r0, r2
    8c98:	cmp	r0, #0
    8c9c:	str	r2, [sp, #20]
    8ca0:	beq	8c3c <sf_gen_mcode+0x6c>
    8ca4:	ldr	r0, [pc, #56]	; 8ce4 <sf_gen_mcode+0x114>
    8ca8:	mov	r2, r7
    8cac:	mov	r1, r6
    8cb0:	add	r0, pc, r0
    8cb4:	bl	2210 <sf_bpf_error>
    8cb8:	ldr	r0, [pc, #40]	; 8ce8 <sf_gen_mcode+0x118>
    8cbc:	add	r0, pc, r0
    8cc0:	bl	2210 <sf_bpf_error>
    8cc4:	ldr	r0, [pc, #32]	; 8cec <sf_gen_mcode+0x11c>
    8cc8:	mov	r2, r5
    8ccc:	mov	r1, r6
    8cd0:	add	r0, pc, r0
    8cd4:	bl	2210 <sf_bpf_error>
    8cd8:	ldr	r0, [pc, #16]	; 8cf0 <sf_gen_mcode+0x120>
    8cdc:	add	r0, pc, r0
    8ce0:	bl	2210 <sf_bpf_error>
    8ce4:	.word	0x0000b228
    8ce8:	.word	0x0000b23c
    8cec:	.word	0x0000b1c4
    8cf0:	.word	0x0000b1e0

00008cf4 <gen_port>:
    8cf4:	strd	r4, [sp, #-24]!	; 0xffffffe8
    8cf8:	mov	r4, r1
    8cfc:	mov	r5, r0
    8d00:	mov	r0, #2048	; 0x800
    8d04:	strd	r6, [sp, #8]
    8d08:	mov	r6, r2
    8d0c:	str	r8, [sp, #16]
    8d10:	str	lr, [sp, #20]
    8d14:	bl	66d0 <gen_linktype>
    8d18:	cmp	r4, #6
    8d1c:	mov	r7, r0
    8d20:	beq	8da8 <gen_port+0xb4>
    8d24:	bgt	8da0 <gen_port+0xac>
    8d28:	cmn	r4, #1
    8d2c:	bne	8dc8 <gen_port+0xd4>
    8d30:	mov	r2, r6
    8d34:	mov	r1, #6
    8d38:	mov	r0, r5
    8d3c:	bl	558c <sf_gen_portop>
    8d40:	mov	r8, r0
    8d44:	mov	r2, r6
    8d48:	mov	r1, #17
    8d4c:	mov	r0, r5
    8d50:	bl	558c <sf_gen_portop>
    8d54:	mov	r1, r0
    8d58:	mov	r4, r0
    8d5c:	mov	r0, r8
    8d60:	bl	4884 <sf_gen_or>
    8d64:	mov	r1, #132	; 0x84
    8d68:	mov	r2, r6
    8d6c:	mov	r0, r5
    8d70:	bl	558c <sf_gen_portop>
    8d74:	mov	r1, r4
    8d78:	bl	4884 <sf_gen_or>
    8d7c:	mov	r0, r7
    8d80:	mov	r1, r4
    8d84:	bl	3a88 <sf_gen_and>
    8d88:	mov	r0, r4
    8d8c:	ldrd	r4, [sp]
    8d90:	ldrd	r6, [sp, #8]
    8d94:	ldr	r8, [sp, #16]
    8d98:	add	sp, sp, #20
    8d9c:	pop	{pc}		; (ldr pc, [sp], #4)
    8da0:	cmp	r4, #17
    8da4:	bne	8dc0 <gen_port+0xcc>
    8da8:	mov	r1, r4
    8dac:	mov	r2, r6
    8db0:	mov	r0, r5
    8db4:	bl	558c <sf_gen_portop>
    8db8:	mov	r4, r0
    8dbc:	b	8d7c <gen_port+0x88>
    8dc0:	cmp	r4, #132	; 0x84
    8dc4:	beq	8da8 <gen_port+0xb4>
    8dc8:	bl	ebc <abort@plt>

00008dcc <gen_port6>:
    8dcc:	strd	r4, [sp, #-24]!	; 0xffffffe8
    8dd0:	mov	r4, r1
    8dd4:	mov	r5, r0
    8dd8:	movw	r0, #34525	; 0x86dd
    8ddc:	strd	r6, [sp, #8]
    8de0:	mov	r6, r2
    8de4:	str	r8, [sp, #16]
    8de8:	str	lr, [sp, #20]
    8dec:	bl	66d0 <gen_linktype>
    8df0:	cmp	r4, #6
    8df4:	mov	r7, r0
    8df8:	beq	8e80 <gen_port6+0xb4>
    8dfc:	bgt	8e78 <gen_port6+0xac>
    8e00:	cmn	r4, #1
    8e04:	bne	8ea0 <gen_port6+0xd4>
    8e08:	mov	r2, r6
    8e0c:	mov	r1, #6
    8e10:	mov	r0, r5
    8e14:	bl	56cc <sf_gen_portop6>
    8e18:	mov	r8, r0
    8e1c:	mov	r2, r6
    8e20:	mov	r1, #17
    8e24:	mov	r0, r5
    8e28:	bl	56cc <sf_gen_portop6>
    8e2c:	mov	r1, r0
    8e30:	mov	r4, r0
    8e34:	mov	r0, r8
    8e38:	bl	4884 <sf_gen_or>
    8e3c:	mov	r1, #132	; 0x84
    8e40:	mov	r2, r6
    8e44:	mov	r0, r5
    8e48:	bl	56cc <sf_gen_portop6>
    8e4c:	mov	r1, r4
    8e50:	bl	4884 <sf_gen_or>
    8e54:	mov	r0, r7
    8e58:	mov	r1, r4
    8e5c:	bl	3a88 <sf_gen_and>
    8e60:	mov	r0, r4
    8e64:	ldrd	r4, [sp]
    8e68:	ldrd	r6, [sp, #8]
    8e6c:	ldr	r8, [sp, #16]
    8e70:	add	sp, sp, #20
    8e74:	pop	{pc}		; (ldr pc, [sp], #4)
    8e78:	cmp	r4, #17
    8e7c:	bne	8e98 <gen_port6+0xcc>
    8e80:	mov	r1, r4
    8e84:	mov	r2, r6
    8e88:	mov	r0, r5
    8e8c:	bl	56cc <sf_gen_portop6>
    8e90:	mov	r4, r0
    8e94:	b	8e54 <gen_port6+0x88>
    8e98:	cmp	r4, #132	; 0x84
    8e9c:	beq	8e80 <gen_port6+0xb4>
    8ea0:	bl	ebc <abort@plt>

00008ea4 <gen_portrange>:
    8ea4:	strd	r4, [sp, #-32]!	; 0xffffffe0
    8ea8:	mov	r4, r2
    8eac:	mov	r5, r0
    8eb0:	mov	r0, #2048	; 0x800
    8eb4:	strd	r6, [sp, #8]
    8eb8:	mov	r6, r1
    8ebc:	mov	r7, r3
    8ec0:	strd	r8, [sp, #16]
    8ec4:	str	sl, [sp, #24]
    8ec8:	str	lr, [sp, #28]
    8ecc:	bl	66d0 <gen_linktype>
    8ed0:	cmp	r4, #6
    8ed4:	mov	r8, r0
    8ed8:	beq	8f70 <gen_portrange+0xcc>
    8edc:	bgt	8f68 <gen_portrange+0xc4>
    8ee0:	cmn	r4, #1
    8ee4:	bne	8f94 <gen_portrange+0xf0>
    8ee8:	mov	r3, r7
    8eec:	mov	r2, #6
    8ef0:	mov	r1, r6
    8ef4:	mov	r0, r5
    8ef8:	bl	57f8 <sf_gen_portrangeop>
    8efc:	mov	r9, r0
    8f00:	mov	r3, r7
    8f04:	mov	r2, #17
    8f08:	mov	r1, r6
    8f0c:	mov	r0, r5
    8f10:	bl	57f8 <sf_gen_portrangeop>
    8f14:	mov	r1, r0
    8f18:	mov	r4, r0
    8f1c:	mov	r0, r9
    8f20:	bl	4884 <sf_gen_or>
    8f24:	mov	r1, r6
    8f28:	mov	r3, r7
    8f2c:	mov	r0, r5
    8f30:	mov	r2, #132	; 0x84
    8f34:	bl	57f8 <sf_gen_portrangeop>
    8f38:	mov	r1, r4
    8f3c:	bl	4884 <sf_gen_or>
    8f40:	mov	r0, r8
    8f44:	mov	r1, r4
    8f48:	bl	3a88 <sf_gen_and>
    8f4c:	mov	r0, r4
    8f50:	ldrd	r4, [sp]
    8f54:	ldrd	r6, [sp, #8]
    8f58:	ldrd	r8, [sp, #16]
    8f5c:	ldr	sl, [sp, #24]
    8f60:	add	sp, sp, #28
    8f64:	pop	{pc}		; (ldr pc, [sp], #4)
    8f68:	cmp	r4, #17
    8f6c:	bne	8f8c <gen_portrange+0xe8>
    8f70:	mov	r2, r4
    8f74:	mov	r3, r7
    8f78:	mov	r1, r6
    8f7c:	mov	r0, r5
    8f80:	bl	57f8 <sf_gen_portrangeop>
    8f84:	mov	r4, r0
    8f88:	b	8f40 <gen_portrange+0x9c>
    8f8c:	cmp	r4, #132	; 0x84
    8f90:	beq	8f70 <gen_portrange+0xcc>
    8f94:	bl	ebc <abort@plt>

00008f98 <gen_portrange6>:
    8f98:	strd	r4, [sp, #-32]!	; 0xffffffe0
    8f9c:	mov	r4, r2
    8fa0:	mov	r5, r0
    8fa4:	movw	r0, #34525	; 0x86dd
    8fa8:	strd	r6, [sp, #8]
    8fac:	mov	r6, r1
    8fb0:	mov	r7, r3
    8fb4:	strd	r8, [sp, #16]
    8fb8:	str	sl, [sp, #24]
    8fbc:	str	lr, [sp, #28]
    8fc0:	bl	66d0 <gen_linktype>
    8fc4:	cmp	r4, #6
    8fc8:	mov	r8, r0
    8fcc:	beq	9064 <gen_portrange6+0xcc>
    8fd0:	bgt	905c <gen_portrange6+0xc4>
    8fd4:	cmn	r4, #1
    8fd8:	bne	9088 <gen_portrange6+0xf0>
    8fdc:	mov	r3, r7
    8fe0:	mov	r2, #6
    8fe4:	mov	r1, r6
    8fe8:	mov	r0, r5
    8fec:	bl	5924 <sf_gen_portrangeop6>
    8ff0:	mov	r9, r0
    8ff4:	mov	r3, r7
    8ff8:	mov	r2, #17
    8ffc:	mov	r1, r6
    9000:	mov	r0, r5
    9004:	bl	5924 <sf_gen_portrangeop6>
    9008:	mov	r1, r0
    900c:	mov	r4, r0
    9010:	mov	r0, r9
    9014:	bl	4884 <sf_gen_or>
    9018:	mov	r1, r6
    901c:	mov	r3, r7
    9020:	mov	r0, r5
    9024:	mov	r2, #132	; 0x84
    9028:	bl	5924 <sf_gen_portrangeop6>
    902c:	mov	r1, r4
    9030:	bl	4884 <sf_gen_or>
    9034:	mov	r0, r8
    9038:	mov	r1, r4
    903c:	bl	3a88 <sf_gen_and>
    9040:	mov	r0, r4
    9044:	ldrd	r4, [sp]
    9048:	ldrd	r6, [sp, #8]
    904c:	ldrd	r8, [sp, #16]
    9050:	ldr	sl, [sp, #24]
    9054:	add	sp, sp, #28
    9058:	pop	{pc}		; (ldr pc, [sp], #4)
    905c:	cmp	r4, #17
    9060:	bne	9080 <gen_portrange6+0xe8>
    9064:	mov	r2, r4
    9068:	mov	r3, r7
    906c:	mov	r1, r6
    9070:	mov	r0, r5
    9074:	bl	5924 <sf_gen_portrangeop6>
    9078:	mov	r4, r0
    907c:	b	9034 <gen_portrange6+0x9c>
    9080:	cmp	r4, #132	; 0x84
    9084:	beq	9064 <gen_portrange6+0xcc>
    9088:	bl	ebc <abort@plt>

0000908c <gen_protochain>:
    908c:	strd	r4, [sp, #-36]!	; 0xffffffdc
    9090:	mov	r4, r0
    9094:	strd	r6, [sp, #8]
    9098:	mov	r6, r1
    909c:	mov	r7, r2
    90a0:	strd	r8, [sp, #16]
    90a4:	strd	sl, [sp, #24]
    90a8:	str	lr, [sp, #32]
    90ac:	sub	sp, sp, #468	; 0x1d4
    90b0:	add	r9, sp, #64	; 0x40
    90b4:	ldr	r8, [pc, #2124]	; 9908 <gen_protochain+0x87c>
    90b8:	str	r9, [sp, #8]
    90bc:	bl	24f0 <alloc_reg>
    90c0:	mov	r5, r0
    90c4:	mov	r2, #400	; 0x190
    90c8:	mov	r0, r9
    90cc:	mov	r1, #0
    90d0:	bl	e2c <memset@plt>
    90d4:	cmp	r6, #2
    90d8:	add	r8, pc, r8
    90dc:	beq	9144 <gen_protochain+0xb8>
    90e0:	cmp	r6, #17
    90e4:	beq	9144 <gen_protochain+0xb8>
    90e8:	cmp	r6, #0
    90ec:	bne	98fc <gen_protochain+0x870>
    90f0:	mov	r2, r7
    90f4:	mov	r1, #2
    90f8:	mov	r0, r4
    90fc:	bl	908c <gen_protochain>
    9100:	mov	r5, r0
    9104:	mov	r1, #17
    9108:	mov	r2, r7
    910c:	mov	r0, r4
    9110:	bl	908c <gen_protochain>
    9114:	mov	r6, r0
    9118:	mov	r1, r0
    911c:	mov	r0, r5
    9120:	bl	4884 <sf_gen_or>
    9124:	mov	r0, r6
    9128:	add	sp, sp, #468	; 0x1d4
    912c:	ldrd	r4, [sp]
    9130:	ldrd	r6, [sp, #8]
    9134:	ldrd	r8, [sp, #16]
    9138:	ldrd	sl, [sp, #24]
    913c:	add	sp, sp, #32
    9140:	pop	{pc}		; (ldr pc, [sp], #4)
    9144:	ldr	r3, [pc, #1984]	; 990c <gen_protochain+0x880>
    9148:	add	r3, pc, r3
    914c:	ldr	r3, [r3, #856]	; 0x358
    9150:	cmp	r3, #127	; 0x7f
    9154:	beq	9590 <gen_protochain+0x504>
    9158:	bgt	9580 <gen_protochain+0x4f4>
    915c:	cmp	r3, #105	; 0x69
    9160:	beq	9590 <gen_protochain+0x504>
    9164:	cmp	r3, #119	; 0x77
    9168:	beq	9590 <gen_protochain+0x504>
    916c:	ldr	r3, [pc, #1948]	; 9910 <gen_protochain+0x884>
    9170:	mov	r9, #1
    9174:	mov	r0, #20
    9178:	mov	r7, #0
    917c:	ldr	r3, [r8, r3]
    9180:	str	r9, [r3]
    9184:	bl	2250 <newchunk>
    9188:	cmp	r6, #2
    918c:	str	r7, [r0]
    9190:	str	r0, [sp, #64]	; 0x40
    9194:	bne	959c <gen_protochain+0x510>
    9198:	mov	r0, #2048	; 0x800
    919c:	mov	r6, #9
    91a0:	bl	66d0 <gen_linktype>
    91a4:	str	r0, [sp, #20]
    91a8:	mov	r0, #20
    91ac:	mov	sl, #21
    91b0:	bl	2250 <newchunk>
    91b4:	mov	r1, r0
    91b8:	mov	r3, #48	; 0x30
    91bc:	ldr	r2, [pc, #1872]	; 9914 <gen_protochain+0x888>
    91c0:	mov	ip, #19
    91c4:	mov	r0, #20
    91c8:	str	r3, [r1]
    91cc:	mov	r3, #18
    91d0:	mov	r8, #8
    91d4:	str	ip, [sp, #24]
    91d8:	mov	r9, #7
    91dc:	str	r3, [sp, #44]	; 0x2c
    91e0:	mov	r3, #17
    91e4:	add	r2, pc, r2
    91e8:	str	r3, [sp, #48]	; 0x30
    91ec:	mov	r3, #16
    91f0:	ldr	ip, [r2, #872]	; 0x368
    91f4:	str	r3, [sp, #36]	; 0x24
    91f8:	mov	r3, #15
    91fc:	str	r3, [sp, #40]	; 0x28
    9200:	mov	r3, #14
    9204:	str	r1, [sp, #68]	; 0x44
    9208:	str	r3, [sp, #52]	; 0x34
    920c:	mov	r3, #13
    9210:	str	r3, [sp, #56]	; 0x38
    9214:	mov	r3, #12
    9218:	str	r3, [sp, #12]
    921c:	mov	r3, #11
    9220:	str	r3, [sp, #16]
    9224:	mov	r3, #10
    9228:	str	r3, [sp, #32]
    922c:	ldr	r3, [r2, #876]	; 0x36c
    9230:	mvn	r2, #15
    9234:	str	r2, [sp, #28]
    9238:	add	r3, r3, ip
    923c:	add	r2, r3, r6
    9240:	mov	fp, r3
    9244:	str	r3, [sp, #4]
    9248:	str	r2, [r1, #12]
    924c:	bl	2250 <newchunk>
    9250:	mov	r3, r0
    9254:	mov	r2, #177	; 0xb1
    9258:	mov	r0, #20
    925c:	str	r2, [r3]
    9260:	str	fp, [r3, #12]
    9264:	str	r3, [sp, #72]	; 0x48
    9268:	bl	2250 <newchunk>
    926c:	mov	r3, r0
    9270:	mov	r0, #20
    9274:	str	sl, [r3]
    9278:	str	r7, [r3, #4]
    927c:	str	r7, [r3, #8]
    9280:	str	r4, [r3, #12]
    9284:	str	r3, [sp, #60]	; 0x3c
    9288:	str	r3, [sp, #76]	; 0x4c
    928c:	bl	2250 <newchunk>
    9290:	ldr	r3, [sp, #60]	; 0x3c
    9294:	mov	fp, r0
    9298:	mov	r2, #59	; 0x3b
    929c:	mov	r0, #20
    92a0:	str	sl, [fp]
    92a4:	str	r7, [fp, #4]
    92a8:	str	r7, [fp, #8]
    92ac:	str	r2, [fp, #12]
    92b0:	str	fp, [r3, #8]
    92b4:	str	fp, [sp, #80]	; 0x50
    92b8:	bl	2250 <newchunk>
    92bc:	mov	r3, #4
    92c0:	str	r0, [sp, #84]	; 0x54
    92c4:	str	r3, [r0]
    92c8:	str	r7, [r0, #12]
    92cc:	str	r0, [fp, #8]
    92d0:	mov	r0, #20
    92d4:	bl	2250 <newchunk>
    92d8:	mov	r3, #51	; 0x33
    92dc:	mov	r1, #6
    92e0:	str	sl, [r0]
    92e4:	str	r7, [r0, #4]
    92e8:	str	r7, [r0, #8]
    92ec:	str	r3, [r0, #12]
    92f0:	str	r0, [sp, #88]	; 0x58
    92f4:	add	r3, sp, #464	; 0x1d0
    92f8:	mov	r0, #20
    92fc:	add	sl, r3, r1, lsl #2
    9300:	mov	fp, #135	; 0x87
    9304:	mov	r7, #4
    9308:	bl	2250 <newchunk>
    930c:	add	r2, sp, #464	; 0x1d0
    9310:	mov	r3, r0
    9314:	add	r9, r2, r9, lsl #2
    9318:	mov	r0, #20
    931c:	add	r6, r2, r6, lsl #2
    9320:	str	fp, [r3]
    9324:	str	r3, [r9, #-400]	; 0xfffffe70
    9328:	mov	r9, #2
    932c:	ldr	r2, [sl, #-400]	; 0xfffffe70
    9330:	str	r3, [r2, #4]
    9334:	bl	2250 <newchunk>
    9338:	ldr	ip, [sp, #4]
    933c:	add	r2, sp, #464	; 0x1d0
    9340:	mov	r3, r0
    9344:	add	r8, r2, r8, lsl r9
    9348:	mov	r2, #80	; 0x50
    934c:	mov	r0, #20
    9350:	str	r2, [r3]
    9354:	str	r3, [r8, #-400]	; 0xfffffe70
    9358:	mov	r8, #7
    935c:	str	ip, [r3, #12]
    9360:	bl	2250 <newchunk>
    9364:	mov	r3, r0
    9368:	mov	r0, #20
    936c:	str	r9, [r3]
    9370:	str	r5, [r3, #12]
    9374:	str	r3, [r6, #-400]	; 0xfffffe70
    9378:	bl	2250 <newchunk>
    937c:	mov	r2, r0
    9380:	ldr	r0, [sp, #32]
    9384:	add	r3, sp, #464	; 0x1d0
    9388:	str	fp, [r2]
    938c:	add	r3, r3, r0, lsl r9
    9390:	mov	r0, #20
    9394:	str	r2, [r3, #-400]	; 0xfffffe70
    9398:	ldr	r3, [r6, #-400]	; 0xfffffe70
    939c:	str	r2, [r3, #4]
    93a0:	bl	2250 <newchunk>
    93a4:	mov	r2, r0
    93a8:	ldr	r0, [sp, #16]
    93ac:	add	r3, sp, #464	; 0x1d0
    93b0:	mov	ip, #1
    93b4:	str	r7, [r2]
    93b8:	str	ip, [r2, #12]
    93bc:	add	r3, r3, r0, lsl r9
    93c0:	mov	r0, #20
    93c4:	str	r2, [r3, #-400]	; 0xfffffe70
    93c8:	bl	2250 <newchunk>
    93cc:	mov	r2, r0
    93d0:	ldr	r0, [sp, #12]
    93d4:	add	r3, sp, #464	; 0x1d0
    93d8:	str	r8, [r2]
    93dc:	add	r3, r3, r0, lsl r9
    93e0:	mov	r0, #20
    93e4:	str	r2, [r3, #-400]	; 0xfffffe70
    93e8:	bl	2250 <newchunk>
    93ec:	mov	r2, r0
    93f0:	ldr	ip, [sp, #4]
    93f4:	add	r3, sp, #464	; 0x1d0
    93f8:	mov	r1, #80	; 0x50
    93fc:	ldr	r0, [sp, #56]	; 0x38
    9400:	str	r1, [r2]
    9404:	str	ip, [r2, #12]
    9408:	add	r3, r3, r0, lsl r9
    940c:	mov	r0, #20
    9410:	str	r2, [r3, #-400]	; 0xfffffe70
    9414:	bl	2250 <newchunk>
    9418:	ldr	r1, [sp, #52]	; 0x34
    941c:	add	r3, sp, #464	; 0x1d0
    9420:	mov	r2, r0
    9424:	mov	r0, #20
    9428:	str	r7, [r2]
    942c:	str	r9, [r2, #12]
    9430:	add	r3, r3, r1, lsl r9
    9434:	str	r2, [r3, #-400]	; 0xfffffe70
    9438:	bl	2250 <newchunk>
    943c:	ldr	r1, [sp, #40]	; 0x28
    9440:	add	r3, sp, #464	; 0x1d0
    9444:	mov	r2, r0
    9448:	mov	ip, #36	; 0x24
    944c:	mov	r0, #20
    9450:	str	ip, [r2]
    9454:	str	r7, [r2, #12]
    9458:	add	r3, r3, r1, lsl r9
    945c:	str	r2, [r3, #-400]	; 0xfffffe70
    9460:	bl	2250 <newchunk>
    9464:	ldr	r1, [sp, #36]	; 0x24
    9468:	add	r3, sp, #464	; 0x1d0
    946c:	mov	r2, r0
    9470:	mov	r0, #20
    9474:	str	r8, [r2]
    9478:	add	r3, r3, r1, lsl r9
    947c:	str	r2, [r3, #-400]	; 0xfffffe70
    9480:	bl	2250 <newchunk>
    9484:	ldr	r1, [sp, #48]	; 0x30
    9488:	add	r3, sp, #464	; 0x1d0
    948c:	mov	r2, r0
    9490:	mov	ip, #96	; 0x60
    9494:	mov	r0, #20
    9498:	str	ip, [r2]
    949c:	str	r5, [r2, #12]
    94a0:	add	r3, r3, r1, lsl r9
    94a4:	str	r2, [r3, #-400]	; 0xfffffe70
    94a8:	bl	2250 <newchunk>
    94ac:	ldr	r1, [sp, #44]	; 0x2c
    94b0:	add	r3, sp, #464	; 0x1d0
    94b4:	mov	r2, r0
    94b8:	mov	ip, #5
    94bc:	mov	r0, #20
    94c0:	str	ip, [r2]
    94c4:	add	r3, r3, r1, lsl r9
    94c8:	ldr	r1, [sp, #28]
    94cc:	str	r2, [r3, #-400]	; 0xfffffe70
    94d0:	str	r1, [r2, #12]
    94d4:	bl	2250 <newchunk>
    94d8:	ldr	r3, [sp, #24]
    94dc:	add	r2, sp, #464	; 0x1d0
    94e0:	mov	lr, r0
    94e4:	mov	r0, #0
    94e8:	str	r7, [lr]
    94ec:	str	r0, [lr, #12]
    94f0:	lsl	ip, r3, r9
    94f4:	ldr	r3, [sp, #8]
    94f8:	add	r2, r2, ip
    94fc:	str	lr, [r2, #-400]	; 0xfffffe70
    9500:	ldr	r1, [sl, #-400]	; 0xfffffe70
    9504:	add	ip, r3, ip
    9508:	ldr	r0, [sp, #64]	; 0x40
    950c:	ldr	r2, [sp, #76]	; 0x4c
    9510:	ldr	r6, [sp, #80]	; 0x50
    9514:	str	lr, [r6, #4]
    9518:	str	lr, [r1, #8]
    951c:	str	lr, [r2, #4]
    9520:	ldr	r2, [r3, #4]!
    9524:	cmp	ip, r3
    9528:	str	r2, [r0, #16]
    952c:	mov	r0, r2
    9530:	bne	9520 <gen_protochain+0x494>
    9534:	mov	r7, #0
    9538:	mov	r0, #208	; 0xd0
    953c:	str	r7, [lr, #16]
    9540:	bl	2250 <newchunk>
    9544:	ldr	r3, [pc, #972]	; 9918 <gen_protochain+0x88c>
    9548:	mov	r6, r0
    954c:	mov	r1, #21
    9550:	str	r1, [r6, #8]
    9554:	mov	r1, r6
    9558:	ldr	r2, [sp, #68]	; 0x44
    955c:	add	r3, pc, r3
    9560:	ldr	r0, [sp, #20]
    9564:	add	r5, r3, r5, lsl #2
    9568:	str	r2, [r6, #4]
    956c:	str	r4, [r6, #20]
    9570:	str	r6, [r6, #96]	; 0x60
    9574:	str	r7, [r5, #792]	; 0x318
    9578:	bl	3a88 <sf_gen_and>
    957c:	b	9124 <gen_protochain+0x98>
    9580:	cmp	r3, #163	; 0xa3
    9584:	beq	9590 <gen_protochain+0x504>
    9588:	cmp	r3, #192	; 0xc0
    958c:	bne	916c <gen_protochain+0xe0>
    9590:	ldr	r0, [pc, #900]	; 991c <gen_protochain+0x890>
    9594:	add	r0, pc, r0
    9598:	bl	2210 <sf_bpf_error>
    959c:	cmp	r6, #17
    95a0:	bne	98f0 <gen_protochain+0x864>
    95a4:	movw	r0, #34525	; 0x86dd
    95a8:	mov	r8, #21
    95ac:	bl	66d0 <gen_linktype>
    95b0:	str	r0, [sp, #20]
    95b4:	mov	r0, #20
    95b8:	bl	2250 <newchunk>
    95bc:	ldr	r2, [pc, #860]	; 9920 <gen_protochain+0x894>
    95c0:	mov	ip, r0
    95c4:	mov	r3, #48	; 0x30
    95c8:	mov	r0, #20
    95cc:	str	r8, [sp, #60]	; 0x3c
    95d0:	str	r3, [ip]
    95d4:	mov	r3, #34	; 0x22
    95d8:	str	r3, [sp, #24]
    95dc:	add	r2, pc, r2
    95e0:	str	ip, [sp, #68]	; 0x44
    95e4:	ldr	lr, [r2, #872]	; 0x368
    95e8:	ldr	r3, [r2, #876]	; 0x36c
    95ec:	mov	r2, #33	; 0x21
    95f0:	str	r2, [sp, #44]	; 0x2c
    95f4:	mov	r2, #32
    95f8:	str	r2, [sp, #48]	; 0x30
    95fc:	mov	r2, #31
    9600:	add	r3, r3, lr
    9604:	str	r2, [sp, #36]	; 0x24
    9608:	add	r2, r3, #6
    960c:	str	r3, [sp, #4]
    9610:	str	r2, [ip, #12]
    9614:	bl	2250 <newchunk>
    9618:	mov	r3, r0
    961c:	mov	r2, #40	; 0x28
    9620:	mov	r0, #20
    9624:	str	r9, [r3]
    9628:	str	r2, [r3, #12]
    962c:	str	r3, [sp, #72]	; 0x48
    9630:	bl	2250 <newchunk>
    9634:	mov	sl, r0
    9638:	mov	r0, #20
    963c:	str	r8, [sl]
    9640:	str	r7, [sl, #4]
    9644:	str	r7, [sl, #8]
    9648:	str	r4, [sl, #12]
    964c:	str	sl, [sp, #76]	; 0x4c
    9650:	bl	2250 <newchunk>
    9654:	mov	r6, r0
    9658:	mov	r3, #59	; 0x3b
    965c:	mov	r0, #20
    9660:	str	r8, [r6]
    9664:	str	r7, [r6, #4]
    9668:	str	r7, [r6, #8]
    966c:	str	r3, [r6, #12]
    9670:	str	r6, [sl, #8]
    9674:	str	r6, [sp, #80]	; 0x50
    9678:	bl	2250 <newchunk>
    967c:	mov	r2, r0
    9680:	mov	r0, #20
    9684:	str	r8, [r2]
    9688:	str	r7, [r2, #4]
    968c:	str	r7, [r2, #8]
    9690:	str	r7, [r2, #12]
    9694:	str	r2, [r6, #8]
    9698:	str	r2, [sp, #12]
    969c:	str	r2, [sp, #84]	; 0x54
    96a0:	bl	2250 <newchunk>
    96a4:	ldr	r2, [sp, #12]
    96a8:	mov	fp, r0
    96ac:	mov	r3, #60	; 0x3c
    96b0:	mov	r0, #20
    96b4:	str	r8, [fp]
    96b8:	str	fp, [r2, #8]
    96bc:	str	r7, [fp, #4]
    96c0:	str	r7, [fp, #8]
    96c4:	str	r3, [fp, #12]
    96c8:	str	r2, [sp, #16]
    96cc:	str	fp, [sp, #88]	; 0x58
    96d0:	bl	2250 <newchunk>
    96d4:	mov	r6, r0
    96d8:	mov	r3, #43	; 0x2b
    96dc:	mov	r0, #20
    96e0:	str	r8, [r6]
    96e4:	str	r6, [fp, #8]
    96e8:	str	r7, [r6, #4]
    96ec:	str	r7, [r6, #8]
    96f0:	str	r3, [r6, #12]
    96f4:	str	r6, [sp, #92]	; 0x5c
    96f8:	bl	2250 <newchunk>
    96fc:	mov	sl, r0
    9700:	mov	r3, #44	; 0x2c
    9704:	mov	r0, #20
    9708:	str	r8, [sl]
    970c:	str	sl, [r6, #8]
    9710:	str	r7, [sl, #4]
    9714:	str	r7, [sl, #8]
    9718:	str	r3, [sl, #12]
    971c:	str	sl, [sp, #96]	; 0x60
    9720:	bl	2250 <newchunk>
    9724:	mov	r3, r0
    9728:	mov	r2, #135	; 0x87
    972c:	mov	r0, #20
    9730:	str	r2, [r3]
    9734:	str	r3, [sp, #12]
    9738:	str	r3, [sp, #100]	; 0x64
    973c:	bl	2250 <newchunk>
    9740:	ldr	r3, [sp, #4]
    9744:	mov	r1, #80	; 0x50
    9748:	mov	ip, r0
    974c:	mov	r0, #20
    9750:	str	r1, [ip]
    9754:	str	ip, [sp, #104]	; 0x68
    9758:	str	r3, [ip, #12]
    975c:	bl	2250 <newchunk>
    9760:	mov	ip, #2
    9764:	str	r0, [sp, #108]	; 0x6c
    9768:	str	ip, [r0]
    976c:	str	r5, [r0, #12]
    9770:	mov	r0, #20
    9774:	bl	2250 <newchunk>
    9778:	mov	r2, #135	; 0x87
    977c:	str	r0, [sp, #112]	; 0x70
    9780:	str	r2, [r0]
    9784:	mov	r0, #20
    9788:	bl	2250 <newchunk>
    978c:	mov	ip, r0
    9790:	mov	r2, #4
    9794:	mov	r0, #20
    9798:	str	r2, [ip]
    979c:	str	r9, [ip, #12]
    97a0:	str	ip, [sp, #116]	; 0x74
    97a4:	bl	2250 <newchunk>
    97a8:	mov	ip, r0
    97ac:	mov	lr, #7
    97b0:	mov	r0, #20
    97b4:	str	lr, [ip]
    97b8:	str	ip, [sp, #120]	; 0x78
    97bc:	bl	2250 <newchunk>
    97c0:	ldr	r3, [sp, #4]
    97c4:	mov	r1, #80	; 0x50
    97c8:	mov	ip, r0
    97cc:	mov	r0, #20
    97d0:	str	r1, [ip]
    97d4:	str	ip, [sp, #124]	; 0x7c
    97d8:	str	r3, [ip, #12]
    97dc:	bl	2250 <newchunk>
    97e0:	mov	ip, r0
    97e4:	mov	r2, #4
    97e8:	mov	r3, #30
    97ec:	mov	r0, #20
    97f0:	str	r2, [ip]
    97f4:	str	r9, [ip, #12]
    97f8:	str	r3, [sp, #40]	; 0x28
    97fc:	str	ip, [sp, #128]	; 0x80
    9800:	bl	2250 <newchunk>
    9804:	mov	ip, r0
    9808:	mov	lr, #36	; 0x24
    980c:	mov	r0, #8
    9810:	str	lr, [ip]
    9814:	str	r0, [ip, #12]
    9818:	mov	r0, #20
    981c:	str	ip, [sp, #132]	; 0x84
    9820:	bl	2250 <newchunk>
    9824:	mov	ip, r0
    9828:	mov	lr, #7
    982c:	mov	r0, #20
    9830:	str	lr, [ip]
    9834:	str	ip, [sp, #136]	; 0x88
    9838:	bl	2250 <newchunk>
    983c:	mov	r9, r0
    9840:	mov	ip, #96	; 0x60
    9844:	mov	r0, #20
    9848:	str	ip, [r9]
    984c:	str	r5, [r9, #12]
    9850:	str	r9, [sp, #140]	; 0x8c
    9854:	bl	2250 <newchunk>
    9858:	mov	r3, #29
    985c:	ldr	r2, [sp, #16]
    9860:	mov	ip, r0
    9864:	mov	lr, #5
    9868:	mvn	r0, #17
    986c:	str	r3, [sp, #52]	; 0x34
    9870:	ldr	r3, [sp, #12]
    9874:	str	lr, [ip]
    9878:	str	r0, [ip, #12]
    987c:	mov	r0, #20
    9880:	str	ip, [r9, #8]
    9884:	mov	r9, #22
    9888:	str	ip, [sp, #144]	; 0x90
    988c:	str	r3, [r2, #4]
    9890:	mov	r2, #28
    9894:	str	r3, [fp, #4]
    9898:	str	r3, [r6, #4]
    989c:	mov	r6, #24
    98a0:	str	r3, [sl, #4]
    98a4:	mov	r3, #25
    98a8:	str	r3, [sp, #32]
    98ac:	mov	r3, #26
    98b0:	str	r2, [sp, #56]	; 0x38
    98b4:	mov	r2, #27
    98b8:	strd	r2, [sp, #12]
    98bc:	bl	2250 <newchunk>
    98c0:	mov	r3, #51	; 0x33
    98c4:	str	r8, [r0]
    98c8:	mov	r8, #23
    98cc:	str	r7, [r0, #4]
    98d0:	str	r7, [r0, #8]
    98d4:	str	r3, [r0, #12]
    98d8:	mvn	r3, #30
    98dc:	str	r0, [sl, #8]
    98e0:	str	r3, [sp, #28]
    98e4:	str	r0, [sp, #148]	; 0x94
    98e8:	ldr	r1, [sp, #60]	; 0x3c
    98ec:	b	92f4 <gen_protochain+0x268>
    98f0:	ldr	r0, [pc, #44]	; 9924 <gen_protochain+0x898>
    98f4:	add	r0, pc, r0
    98f8:	bl	2210 <sf_bpf_error>
    98fc:	ldr	r0, [pc, #36]	; 9928 <gen_protochain+0x89c>
    9900:	add	r0, pc, r0
    9904:	bl	2210 <sf_bpf_error>
    9908:	.word	0x00027f20
    990c:	.word	0x00028218
    9910:	.word	0x000000fc
    9914:	.word	0x0002817c
    9918:	.word	0x00027e04
    991c:	.word	0x0000a9ac
    9920:	.word	0x00027d84
    9924:	.word	0x0000a674
    9928:	.word	0x0000a618

0000992c <sf_gen_ncode>:
    992c:	strd	r4, [sp, #-16]!
    9930:	cmp	r0, #0
    9934:	uxtb	r4, r2
    9938:	str	r6, [sp, #8]
    993c:	ubfx	r5, r2, #8, #8
    9940:	str	lr, [sp, #12]
    9944:	sub	sp, sp, #16
    9948:	ubfx	r6, r2, #16, #8
    994c:	str	r2, [sp, #8]
    9950:	str	r1, [sp, #12]
    9954:	beq	9a88 <sf_gen_ncode+0x15c>
    9958:	cmp	r5, #12
    995c:	add	r1, sp, #12
    9960:	beq	99ac <sf_gen_ncode+0x80>
    9964:	bl	bff0 <__pcap_atoin>
    9968:	cmp	r4, #4
    996c:	beq	9bc0 <sf_gen_ncode+0x294>
    9970:	bls	9a68 <sf_gen_ncode+0x13c>
    9974:	cmp	r4, #6
    9978:	beq	9b40 <sf_gen_ncode+0x214>
    997c:	bcs	9a04 <sf_gen_ncode+0xd8>
    9980:	mov	r2, r6
    9984:	mov	r1, r5
    9988:	ldr	r0, [sp, #12]
    998c:	bl	73cc <gen_proto>
    9990:	mov	r4, r0
    9994:	mov	r0, r4
    9998:	add	sp, sp, #16
    999c:	ldrd	r4, [sp]
    99a0:	ldr	r6, [sp, #8]
    99a4:	add	sp, sp, #12
    99a8:	pop	{pc}		; (ldr pc, [sp], #4)
    99ac:	bl	c06c <__pcap_atodn>
    99b0:	cmp	r4, #4
    99b4:	beq	9bc0 <sf_gen_ncode+0x294>
    99b8:	bls	99dc <sf_gen_ncode+0xb0>
    99bc:	cmp	r4, #6
    99c0:	beq	9b40 <sf_gen_ncode+0x214>
    99c4:	bcc	9980 <sf_gen_ncode+0x54>
    99c8:	cmp	r4, #7
    99cc:	bne	99f0 <sf_gen_ncode+0xc4>
    99d0:	ldr	r0, [pc, #504]	; 9bd0 <sf_gen_ncode+0x2a4>
    99d4:	add	r0, pc, r0
    99d8:	bl	2210 <sf_bpf_error>
    99dc:	cmp	r4, #2
    99e0:	bls	9b58 <sf_gen_ncode+0x22c>
    99e4:	ldr	r0, [pc, #488]	; 9bd4 <sf_gen_ncode+0x2a8>
    99e8:	add	r0, pc, r0
    99ec:	bl	2210 <sf_bpf_error>
    99f0:	cmp	r4, #255	; 0xff
    99f4:	bne	9bcc <sf_gen_ncode+0x2a0>
    99f8:	ldr	r0, [pc, #472]	; 9bd8 <sf_gen_ncode+0x2ac>
    99fc:	add	r0, pc, r0
    9a00:	bl	2210 <sf_bpf_error>
    9a04:	cmp	r4, #7
    9a08:	bne	99f0 <sf_gen_ncode+0xc4>
    9a0c:	cmp	r5, #7
    9a10:	beq	9b78 <sf_gen_ncode+0x24c>
    9a14:	cmp	r5, #6
    9a18:	beq	9a30 <sf_gen_ncode+0x104>
    9a1c:	cmp	r5, #5
    9a20:	beq	9b88 <sf_gen_ncode+0x25c>
    9a24:	cmp	r5, #0
    9a28:	mvneq	r5, #0
    9a2c:	bne	99d0 <sf_gen_ncode+0xa4>
    9a30:	ldr	r1, [sp, #12]
    9a34:	mov	r3, r6
    9a38:	mov	r2, r5
    9a3c:	mov	r0, r1
    9a40:	bl	8ea4 <gen_portrange>
    9a44:	ldr	r1, [sp, #12]
    9a48:	mov	r4, r0
    9a4c:	mov	r3, r6
    9a50:	mov	r2, r5
    9a54:	mov	r0, r1
    9a58:	bl	8f98 <gen_portrange6>
    9a5c:	mov	r1, r4
    9a60:	bl	4884 <sf_gen_or>
    9a64:	b	9994 <sf_gen_ncode+0x68>
    9a68:	cmp	r4, #2
    9a6c:	bhi	9aec <sf_gen_ncode+0x1c0>
    9a70:	cmp	r5, #1
    9a74:	ldrne	ip, [sp, #12]
    9a78:	bne	9abc <sf_gen_ncode+0x190>
    9a7c:	ldr	r0, [pc, #344]	; 9bdc <sf_gen_ncode+0x2b0>
    9a80:	add	r0, pc, r0
    9a84:	bl	2210 <sf_bpf_error>
    9a88:	cmp	r4, #4
    9a8c:	beq	9bc0 <sf_gen_ncode+0x294>
    9a90:	bhi	9974 <sf_gen_ncode+0x48>
    9a94:	cmp	r4, #2
    9a98:	bhi	9aec <sf_gen_ncode+0x1c0>
    9a9c:	cmp	r5, #12
    9aa0:	beq	9b58 <sf_gen_ncode+0x22c>
    9aa4:	cmp	r5, #1
    9aa8:	beq	9a7c <sf_gen_ncode+0x150>
    9aac:	cmp	r4, #2
    9ab0:	mov	ip, r1
    9ab4:	movne	r0, #32
    9ab8:	beq	9b98 <sf_gen_ncode+0x26c>
    9abc:	rsb	r0, r0, #32
    9ac0:	mvn	r1, #0
    9ac4:	lsl	ip, ip, r0
    9ac8:	lsl	r1, r1, r0
    9acc:	str	ip, [sp, #12]
    9ad0:	mov	r3, r6
    9ad4:	mov	r2, r5
    9ad8:	str	r4, [sp]
    9adc:	mov	r0, ip
    9ae0:	bl	87f4 <gen_host>
    9ae4:	mov	r4, r0
    9ae8:	b	9994 <sf_gen_ncode+0x68>
    9aec:	cmp	r5, #7
    9af0:	beq	9b80 <sf_gen_ncode+0x254>
    9af4:	cmp	r5, #6
    9af8:	beq	9b10 <sf_gen_ncode+0x1e4>
    9afc:	cmp	r5, #5
    9b00:	beq	9b90 <sf_gen_ncode+0x264>
    9b04:	cmp	r5, #0
    9b08:	mvneq	r5, #0
    9b0c:	bne	99e4 <sf_gen_ncode+0xb8>
    9b10:	mov	r2, r6
    9b14:	mov	r1, r5
    9b18:	ldr	r0, [sp, #12]
    9b1c:	bl	8cf4 <gen_port>
    9b20:	mov	r4, r0
    9b24:	mov	r1, r5
    9b28:	ldr	r0, [sp, #12]
    9b2c:	mov	r2, r6
    9b30:	bl	8dcc <gen_port6>
    9b34:	mov	r1, r4
    9b38:	bl	4884 <sf_gen_or>
    9b3c:	b	9994 <sf_gen_ncode+0x68>
    9b40:	mov	r2, r6
    9b44:	mov	r1, r5
    9b48:	ldr	r0, [sp, #12]
    9b4c:	bl	908c <gen_protochain>
    9b50:	mov	r4, r0
    9b54:	b	9994 <sf_gen_ncode+0x68>
    9b58:	mov	r3, r6
    9b5c:	mov	r2, #12
    9b60:	str	r4, [sp]
    9b64:	mov	r1, #0
    9b68:	ldr	r0, [sp, #12]
    9b6c:	bl	87f4 <gen_host>
    9b70:	mov	r4, r0
    9b74:	b	9994 <sf_gen_ncode+0x68>
    9b78:	mov	r5, #17
    9b7c:	b	9a30 <sf_gen_ncode+0x104>
    9b80:	mov	r5, #17
    9b84:	b	9b10 <sf_gen_ncode+0x1e4>
    9b88:	mov	r5, #132	; 0x84
    9b8c:	b	9a30 <sf_gen_ncode+0x104>
    9b90:	mov	r5, #132	; 0x84
    9b94:	b	9b10 <sf_gen_ncode+0x1e4>
    9b98:	cmp	ip, #0
    9b9c:	mvn	r1, #0
    9ba0:	beq	9ad0 <sf_gen_ncode+0x1a4>
    9ba4:	tst	ip, #-16777216	; 0xff000000
    9ba8:	bne	9ad0 <sf_gen_ncode+0x1a4>
    9bac:	lsl	ip, ip, #8
    9bb0:	lsl	r1, r1, #8
    9bb4:	tst	ip, #-16777216	; 0xff000000
    9bb8:	beq	9bac <sf_gen_ncode+0x280>
    9bbc:	b	9acc <sf_gen_ncode+0x1a0>
    9bc0:	ldr	r0, [pc, #24]	; 9be0 <sf_gen_ncode+0x2b4>
    9bc4:	add	r0, pc, r0
    9bc8:	bl	2210 <sf_bpf_error>
    9bcc:	bl	ebc <abort@plt>
    9bd0:	.word	0x0000a5f0
    9bd4:	.word	0x0000a5c0
    9bd8:	.word	0x00009798
    9bdc:	.word	0x0000a50c
    9be0:	.word	0x0000a424

00009be4 <sf_gen_broadcast>:
    9be4:	cmp	r0, #0
    9be8:	strd	r4, [sp, #-24]!	; 0xffffffe8
    9bec:	strd	r6, [sp, #8]
    9bf0:	str	r8, [sp, #16]
    9bf4:	str	lr, [sp, #20]
    9bf8:	sub	sp, sp, #16
    9bfc:	blt	9e9c <sf_gen_broadcast+0x2b8>
    9c00:	cmp	r0, #1
    9c04:	ble	9cb4 <sf_gen_broadcast+0xd0>
    9c08:	cmp	r0, #2
    9c0c:	bne	9e9c <sf_gen_broadcast+0x2b8>
    9c10:	ldr	r3, [pc, #668]	; 9eb4 <sf_gen_broadcast+0x2d0>
    9c14:	add	r3, pc, r3
    9c18:	ldr	r4, [r3, #892]	; 0x37c
    9c1c:	cmn	r4, #1
    9c20:	beq	9e90 <sf_gen_broadcast+0x2ac>
    9c24:	mov	r5, #0
    9c28:	mov	r6, #16
    9c2c:	mov	r0, #2048	; 0x800
    9c30:	mvn	r4, r4
    9c34:	bl	66d0 <gen_linktype>
    9c38:	mov	r7, r0
    9c3c:	mov	r3, r4
    9c40:	str	r6, [sp]
    9c44:	mov	r2, r5
    9c48:	mov	r1, r6
    9c4c:	str	r5, [sp, #4]
    9c50:	mov	r0, #3
    9c54:	str	r5, [sp, #8]
    9c58:	bl	2b74 <gen_ncmp>
    9c5c:	mov	r8, r0
    9c60:	mov	r3, r4
    9c64:	str	r6, [sp]
    9c68:	mov	r2, r5
    9c6c:	mov	r1, r6
    9c70:	str	r5, [sp, #4]
    9c74:	mov	r0, #3
    9c78:	str	r4, [sp, #8]
    9c7c:	bl	2b74 <gen_ncmp>
    9c80:	mov	r1, r0
    9c84:	mov	r4, r0
    9c88:	mov	r0, r8
    9c8c:	bl	4884 <sf_gen_or>
    9c90:	mov	r0, r7
    9c94:	bl	3a88 <sf_gen_and>
    9c98:	mov	r0, r4
    9c9c:	add	sp, sp, #16
    9ca0:	ldrd	r4, [sp]
    9ca4:	ldrd	r6, [sp, #8]
    9ca8:	ldr	r8, [sp, #16]
    9cac:	add	sp, sp, #20
    9cb0:	pop	{pc}		; (ldr pc, [sp], #4)
    9cb4:	ldr	r2, [pc, #508]	; 9eb8 <sf_gen_broadcast+0x2d4>
    9cb8:	add	r2, pc, r2
    9cbc:	ldr	r3, [r2, #856]	; 0x358
    9cc0:	cmp	r3, #119	; 0x77
    9cc4:	beq	9e64 <sf_gen_broadcast+0x280>
    9cc8:	bgt	9d0c <sf_gen_broadcast+0x128>
    9ccc:	cmp	r3, #7
    9cd0:	beq	9e30 <sf_gen_broadcast+0x24c>
    9cd4:	bgt	9d80 <sf_gen_broadcast+0x19c>
    9cd8:	cmp	r3, #1
    9cdc:	bne	9d4c <sf_gen_broadcast+0x168>
    9ce0:	ldr	r0, [pc, #468]	; 9ebc <sf_gen_broadcast+0x2d8>
    9ce4:	mov	r1, #2
    9ce8:	add	r0, pc, r0
    9cec:	add	r0, r0, #8
    9cf0:	add	sp, sp, #16
    9cf4:	ldrd	r4, [sp]
    9cf8:	ldrd	r6, [sp, #8]
    9cfc:	ldr	r8, [sp, #16]
    9d00:	ldr	lr, [sp, #20]
    9d04:	add	sp, sp, #24
    9d08:	b	4b78 <gen_ehostop>
    9d0c:	cmp	r3, #127	; 0x7f
    9d10:	beq	9e64 <sf_gen_broadcast+0x280>
    9d14:	bgt	9e18 <sf_gen_broadcast+0x234>
    9d18:	cmp	r3, #122	; 0x7a
    9d1c:	bne	9db4 <sf_gen_broadcast+0x1d0>
    9d20:	ldr	r0, [pc, #408]	; 9ec0 <sf_gen_broadcast+0x2dc>
    9d24:	mov	r1, #2
    9d28:	add	r0, pc, r0
    9d2c:	add	r0, r0, #8
    9d30:	add	sp, sp, #16
    9d34:	ldrd	r4, [sp]
    9d38:	ldrd	r6, [sp, #8]
    9d3c:	ldr	r8, [sp, #16]
    9d40:	ldr	lr, [sp, #20]
    9d44:	add	sp, sp, #24
    9d48:	b	4aa8 <gen_ipfchostop>
    9d4c:	cmp	r3, #6
    9d50:	bne	9ea8 <sf_gen_broadcast+0x2c4>
    9d54:	ldr	r0, [pc, #360]	; 9ec4 <sf_gen_broadcast+0x2e0>
    9d58:	mov	r1, #2
    9d5c:	add	r0, pc, r0
    9d60:	add	r0, r0, #8
    9d64:	add	sp, sp, #16
    9d68:	ldrd	r4, [sp]
    9d6c:	ldrd	r6, [sp, #8]
    9d70:	ldr	r8, [sp, #16]
    9d74:	ldr	lr, [sp, #20]
    9d78:	add	sp, sp, #24
    9d7c:	b	49d8 <gen_thostop>
    9d80:	cmp	r3, #10
    9d84:	bne	9e5c <sf_gen_broadcast+0x278>
    9d88:	ldr	r0, [pc, #312]	; 9ec8 <sf_gen_broadcast+0x2e4>
    9d8c:	mov	r1, #2
    9d90:	add	r0, pc, r0
    9d94:	add	r0, r0, #8
    9d98:	add	sp, sp, #16
    9d9c:	ldrd	r4, [sp]
    9da0:	ldrd	r6, [sp, #8]
    9da4:	ldr	r8, [sp, #16]
    9da8:	ldr	lr, [sp, #20]
    9dac:	add	sp, sp, #24
    9db0:	b	4904 <gen_fhostop>
    9db4:	cmp	r3, #123	; 0x7b
    9db8:	bne	9ea8 <sf_gen_broadcast+0x2c4>
    9dbc:	ldr	r3, [r2, #908]	; 0x38c
    9dc0:	cmp	r3, #0
    9dc4:	beq	9e9c <sf_gen_broadcast+0x2b8>
    9dc8:	mov	r2, #8
    9dcc:	mov	r3, #65280	; 0xff00
    9dd0:	mov	r1, #4
    9dd4:	mov	r0, #1
    9dd8:	bl	2c2c <gen_cmp>
    9ddc:	mov	r5, r0
    9de0:	ldr	r0, [pc, #228]	; 9ecc <sf_gen_broadcast+0x2e8>
    9de4:	mov	r1, #2
    9de8:	ldr	r3, [r5, #44]	; 0x2c
    9dec:	add	r0, pc, r0
    9df0:	add	r0, r0, #8
    9df4:	clz	r3, r3
    9df8:	lsr	r3, r3, #5
    9dfc:	str	r3, [r5, #44]	; 0x2c
    9e00:	bl	4b78 <gen_ehostop>
    9e04:	mov	r4, r0
    9e08:	mov	r1, r0
    9e0c:	mov	r0, r5
    9e10:	bl	3a88 <sf_gen_and>
    9e14:	b	9c98 <sf_gen_broadcast+0xb4>
    9e18:	cmp	r3, #163	; 0xa3
    9e1c:	beq	9e64 <sf_gen_broadcast+0x280>
    9e20:	cmp	r3, #192	; 0xc0
    9e24:	beq	9e64 <sf_gen_broadcast+0x280>
    9e28:	cmp	r3, #129	; 0x81
    9e2c:	bne	9ea8 <sf_gen_broadcast+0x2c4>
    9e30:	ldr	r0, [pc, #152]	; 9ed0 <sf_gen_broadcast+0x2ec>
    9e34:	mov	r1, #2
    9e38:	add	r0, pc, r0
    9e3c:	add	r0, r0, #956	; 0x3bc
    9e40:	add	sp, sp, #16
    9e44:	ldrd	r4, [sp]
    9e48:	ldrd	r6, [sp, #8]
    9e4c:	ldr	r8, [sp, #16]
    9e50:	ldr	lr, [sp, #20]
    9e54:	add	sp, sp, #24
    9e58:	b	4c68 <gen_ahostop>
    9e5c:	cmp	r3, #105	; 0x69
    9e60:	bne	9ea8 <sf_gen_broadcast+0x2c4>
    9e64:	ldr	r0, [pc, #104]	; 9ed4 <sf_gen_broadcast+0x2f0>
    9e68:	mov	r1, #2
    9e6c:	add	r0, pc, r0
    9e70:	add	r0, r0, #8
    9e74:	add	sp, sp, #16
    9e78:	ldrd	r4, [sp]
    9e7c:	ldrd	r6, [sp, #8]
    9e80:	ldr	r8, [sp, #16]
    9e84:	ldr	lr, [sp, #20]
    9e88:	add	sp, sp, #24
    9e8c:	b	4f80 <gen_wlanhostop>
    9e90:	ldr	r0, [pc, #64]	; 9ed8 <sf_gen_broadcast+0x2f4>
    9e94:	add	r0, pc, r0
    9e98:	bl	2210 <sf_bpf_error>
    9e9c:	ldr	r0, [pc, #56]	; 9edc <sf_gen_broadcast+0x2f8>
    9ea0:	add	r0, pc, r0
    9ea4:	bl	2210 <sf_bpf_error>
    9ea8:	ldr	r0, [pc, #48]	; 9ee0 <sf_gen_broadcast+0x2fc>
    9eac:	add	r0, pc, r0
    9eb0:	bl	2210 <sf_bpf_error>
    9eb4:	.word	0x0002774c
    9eb8:	.word	0x000276a8
    9ebc:	.word	0x00027588
    9ec0:	.word	0x00027548
    9ec4:	.word	0x00027514
    9ec8:	.word	0x000274e0
    9ecc:	.word	0x00027484
    9ed0:	.word	0x00027528
    9ed4:	.word	0x00027404
    9ed8:	.word	0x0000a188
    9edc:	.word	0x0000a1b0
    9ee0:	.word	0x0000a158

00009ee4 <sf_gen_multicast>:
    9ee4:	strd	r4, [sp, #-32]!	; 0xffffffe0
    9ee8:	strd	r6, [sp, #8]
    9eec:	strd	r8, [sp, #16]
    9ef0:	str	sl, [sp, #24]
    9ef4:	str	lr, [sp, #28]
    9ef8:	cmp	r0, #17
    9efc:	addls	pc, pc, r0, lsl #2
    9f00:	b	a274 <sf_gen_multicast+0x390>
    9f04:	b	9fcc <sf_gen_multicast+0xe8>
    9f08:	b	9fcc <sf_gen_multicast+0xe8>
    9f0c:	b	9f98 <sf_gen_multicast+0xb4>
    9f10:	b	a274 <sf_gen_multicast+0x390>
    9f14:	b	a274 <sf_gen_multicast+0x390>
    9f18:	b	a274 <sf_gen_multicast+0x390>
    9f1c:	b	a274 <sf_gen_multicast+0x390>
    9f20:	b	a274 <sf_gen_multicast+0x390>
    9f24:	b	a274 <sf_gen_multicast+0x390>
    9f28:	b	a274 <sf_gen_multicast+0x390>
    9f2c:	b	a274 <sf_gen_multicast+0x390>
    9f30:	b	a274 <sf_gen_multicast+0x390>
    9f34:	b	a274 <sf_gen_multicast+0x390>
    9f38:	b	a274 <sf_gen_multicast+0x390>
    9f3c:	b	a274 <sf_gen_multicast+0x390>
    9f40:	b	a274 <sf_gen_multicast+0x390>
    9f44:	b	a274 <sf_gen_multicast+0x390>
    9f48:	b	9f4c <sf_gen_multicast+0x68>
    9f4c:	movw	r0, #34525	; 0x86dd
    9f50:	bl	66d0 <gen_linktype>
    9f54:	mov	r5, r0
    9f58:	mov	r1, #24
    9f5c:	mov	r3, #255	; 0xff
    9f60:	mov	r2, #16
    9f64:	mov	r0, #3
    9f68:	bl	2c2c <gen_cmp>
    9f6c:	mov	r4, r0
    9f70:	mov	r1, r0
    9f74:	mov	r0, r5
    9f78:	bl	3a88 <sf_gen_and>
    9f7c:	mov	r0, r4
    9f80:	ldrd	r4, [sp]
    9f84:	ldrd	r6, [sp, #8]
    9f88:	ldrd	r8, [sp, #16]
    9f8c:	ldr	sl, [sp, #24]
    9f90:	add	sp, sp, #28
    9f94:	pop	{pc}		; (ldr pc, [sp], #4)
    9f98:	mov	r0, #2048	; 0x800
    9f9c:	bl	66d0 <gen_linktype>
    9fa0:	mov	r2, #16
    9fa4:	mov	r5, r0
    9fa8:	mov	r1, r2
    9fac:	mov	r3, #224	; 0xe0
    9fb0:	mov	r0, #3
    9fb4:	bl	2c74 <gen_cmp_ge>
    9fb8:	mov	r4, r0
    9fbc:	mov	r1, r0
    9fc0:	mov	r0, r5
    9fc4:	bl	3a88 <sf_gen_and>
    9fc8:	b	9f7c <sf_gen_multicast+0x98>
    9fcc:	ldr	r4, [pc, #684]	; a280 <sf_gen_multicast+0x39c>
    9fd0:	add	r4, pc, r4
    9fd4:	ldr	r3, [r4, #856]	; 0x358
    9fd8:	cmp	r3, #119	; 0x77
    9fdc:	beq	a0e8 <sf_gen_multicast+0x204>
    9fe0:	bgt	a008 <sf_gen_multicast+0x124>
    9fe4:	cmp	r3, #7
    9fe8:	beq	a08c <sf_gen_multicast+0x1a8>
    9fec:	bgt	a0b8 <sf_gen_multicast+0x1d4>
    9ff0:	cmp	r3, #1
    9ff4:	beq	a26c <sf_gen_multicast+0x388>
    9ff8:	cmp	r3, #6
    9ffc:	bne	a274 <sf_gen_multicast+0x390>
    a000:	mov	r0, #2
    a004:	b	a0c4 <sf_gen_multicast+0x1e0>
    a008:	cmp	r3, #127	; 0x7f
    a00c:	beq	a0e8 <sf_gen_multicast+0x204>
    a010:	bgt	a074 <sf_gen_multicast+0x190>
    a014:	cmp	r3, #122	; 0x7a
    a018:	beq	a000 <sf_gen_multicast+0x11c>
    a01c:	cmp	r3, #123	; 0x7b
    a020:	bne	a274 <sf_gen_multicast+0x390>
    a024:	ldr	r3, [r4, #908]	; 0x38c
    a028:	cmp	r3, #0
    a02c:	beq	a274 <sf_gen_multicast+0x390>
    a030:	mov	r2, #8
    a034:	mov	r1, #4
    a038:	mov	r3, #65280	; 0xff00
    a03c:	mov	r0, #1
    a040:	bl	2c2c <gen_cmp>
    a044:	mov	r5, r0
    a048:	ldr	r0, [r4, #900]	; 0x384
    a04c:	ldr	r3, [r5, #44]	; 0x2c
    a050:	clz	r3, r3
    a054:	lsr	r3, r3, #5
    a058:	str	r3, [r5, #44]	; 0x2c
    a05c:	bl	26ec <gen_mac_multicast>
    a060:	mov	r4, r0
    a064:	mov	r1, r0
    a068:	mov	r0, r5
    a06c:	bl	3a88 <sf_gen_and>
    a070:	b	9f7c <sf_gen_multicast+0x98>
    a074:	cmp	r3, #163	; 0xa3
    a078:	beq	a0e8 <sf_gen_multicast+0x204>
    a07c:	cmp	r3, #192	; 0xc0
    a080:	beq	a0e8 <sf_gen_multicast+0x204>
    a084:	cmp	r3, #129	; 0x81
    a088:	bne	a274 <sf_gen_multicast+0x390>
    a08c:	ldr	r0, [pc, #496]	; a284 <sf_gen_multicast+0x3a0>
    a090:	mov	r1, #2
    a094:	ldrd	r4, [sp]
    a098:	ldrd	r6, [sp, #8]
    a09c:	add	r0, pc, r0
    a0a0:	add	r0, r0, #956	; 0x3bc
    a0a4:	ldrd	r8, [sp, #16]
    a0a8:	ldr	sl, [sp, #24]
    a0ac:	ldr	lr, [sp, #28]
    a0b0:	add	sp, sp, #32
    a0b4:	b	4c68 <gen_ahostop>
    a0b8:	cmp	r3, #10
    a0bc:	moveq	r0, #1
    a0c0:	bne	a0e0 <sf_gen_multicast+0x1fc>
    a0c4:	ldrd	r4, [sp]
    a0c8:	ldrd	r6, [sp, #8]
    a0cc:	ldrd	r8, [sp, #16]
    a0d0:	ldr	sl, [sp, #24]
    a0d4:	ldr	lr, [sp, #28]
    a0d8:	add	sp, sp, #32
    a0dc:	b	26ec <gen_mac_multicast>
    a0e0:	cmp	r3, #105	; 0x69
    a0e4:	bne	a274 <sf_gen_multicast+0x390>
    a0e8:	mov	r1, #16
    a0ec:	mov	r0, #1
    a0f0:	bl	265c <gen_load_llrel>
    a0f4:	mov	r4, r0
    a0f8:	mov	r0, #208	; 0xd0
    a0fc:	bl	2250 <newchunk>
    a100:	mov	r5, r0
    a104:	mov	r6, #69	; 0x45
    a108:	mov	r8, #1
    a10c:	mov	r0, #16
    a110:	stmib	r5, {r4, r6}
    a114:	mov	r7, #8
    a118:	str	r8, [r5, #20]
    a11c:	str	r5, [r5, #96]	; 0x60
    a120:	bl	26ec <gen_mac_multicast>
    a124:	mov	r4, r0
    a128:	mov	r1, r0
    a12c:	mov	r0, r5
    a130:	bl	3a88 <sf_gen_and>
    a134:	mov	r1, #16
    a138:	mov	r0, r8
    a13c:	bl	265c <gen_load_llrel>
    a140:	mov	r9, r0
    a144:	mov	r0, #208	; 0xd0
    a148:	bl	2250 <newchunk>
    a14c:	mov	r5, r0
    a150:	mov	r0, #4
    a154:	ldr	r3, [r5, #44]	; 0x2c
    a158:	str	r9, [r5, #4]
    a15c:	str	r6, [r5, #8]
    a160:	str	r8, [r5, #20]
    a164:	str	r5, [r5, #96]	; 0x60
    a168:	clz	r3, r3
    a16c:	lsr	r3, r3, #5
    a170:	str	r3, [r5, #44]	; 0x2c
    a174:	bl	26ec <gen_mac_multicast>
    a178:	mov	r8, r0
    a17c:	mov	r1, r0
    a180:	mov	r0, r5
    a184:	bl	3a88 <sf_gen_and>
    a188:	mov	r1, r4
    a18c:	mov	r0, r8
    a190:	bl	4884 <sf_gen_or>
    a194:	mov	r1, #16
    a198:	mov	r0, #0
    a19c:	bl	265c <gen_load_llrel>
    a1a0:	mov	r5, r0
    a1a4:	mov	r0, #208	; 0xd0
    a1a8:	bl	2250 <newchunk>
    a1ac:	mov	r3, r0
    a1b0:	mov	r1, r4
    a1b4:	stmib	r0, {r5, r6}
    a1b8:	str	r7, [r0, #20]
    a1bc:	str	r0, [r3, #96]	; 0x60
    a1c0:	bl	3a88 <sf_gen_and>
    a1c4:	mov	r1, #16
    a1c8:	mov	r0, #0
    a1cc:	bl	265c <gen_load_llrel>
    a1d0:	mov	r8, r0
    a1d4:	mov	r0, #208	; 0xd0
    a1d8:	bl	2250 <newchunk>
    a1dc:	mov	r5, r0
    a1e0:	mov	r0, #4
    a1e4:	ldr	r3, [r5, #44]	; 0x2c
    a1e8:	str	r8, [r5, #4]
    a1ec:	str	r6, [r5, #8]
    a1f0:	str	r7, [r5, #20]
    a1f4:	str	r5, [r5, #96]	; 0x60
    a1f8:	clz	r3, r3
    a1fc:	lsr	r3, r3, #5
    a200:	str	r3, [r5, #44]	; 0x2c
    a204:	bl	26ec <gen_mac_multicast>
    a208:	mov	r7, r0
    a20c:	mov	r1, r0
    a210:	mov	r0, r5
    a214:	bl	3a88 <sf_gen_and>
    a218:	mov	r1, r4
    a21c:	mov	r0, r7
    a220:	bl	4884 <sf_gen_or>
    a224:	mov	r1, #16
    a228:	mov	r0, #0
    a22c:	bl	265c <gen_load_llrel>
    a230:	mov	r5, r0
    a234:	mov	r0, #208	; 0xd0
    a238:	bl	2250 <newchunk>
    a23c:	ldr	r2, [r0, #44]	; 0x2c
    a240:	mov	r3, r0
    a244:	mov	ip, #4
    a248:	mov	r1, r4
    a24c:	stmib	r0, {r5, r6}
    a250:	str	ip, [r0, #20]
    a254:	clz	r2, r2
    a258:	lsr	r2, r2, #5
    a25c:	str	r2, [r0, #44]	; 0x2c
    a260:	str	r0, [r3, #96]	; 0x60
    a264:	bl	3a88 <sf_gen_and>
    a268:	b	9f7c <sf_gen_multicast+0x98>
    a26c:	mov	r0, #0
    a270:	b	a0c4 <sf_gen_multicast+0x1e0>
    a274:	ldr	r0, [pc, #12]	; a288 <sf_gen_multicast+0x3a4>
    a278:	add	r0, pc, r0
    a27c:	bl	2210 <sf_bpf_error>
    a280:	.word	0x00027390
    a284:	.word	0x000272c4
    a288:	.word	0x00009e08

0000a28c <sf_gen_mpls>:
    a28c:	ldr	r3, [pc, #296]	; a3bc <sf_gen_mpls+0x130>
    a290:	strd	r4, [sp, #-20]!	; 0xffffffec
    a294:	ldr	r2, [pc, #292]	; a3c0 <sf_gen_mpls+0x134>
    a298:	strd	r6, [sp, #8]
    a29c:	mov	r6, r0
    a2a0:	str	lr, [sp, #16]
    a2a4:	sub	sp, sp, #20
    a2a8:	add	r3, pc, r3
    a2ac:	ldr	r5, [r3, #4]
    a2b0:	add	r2, pc, r2
    a2b4:	ldr	r4, [r2, #872]	; 0x368
    a2b8:	cmp	r5, #0
    a2bc:	str	r4, [r3]
    a2c0:	bne	a390 <sf_gen_mpls+0x104>
    a2c4:	ldr	r1, [r2, #856]	; 0x358
    a2c8:	cmp	r1, #9
    a2cc:	beq	a2ec <sf_gen_mpls+0x60>
    a2d0:	cmp	r1, #104	; 0x68
    a2d4:	beq	a380 <sf_gen_mpls+0xf4>
    a2d8:	cmp	r1, #1
    a2dc:	beq	a380 <sf_gen_mpls+0xf4>
    a2e0:	ldr	r0, [pc, #220]	; a3c4 <sf_gen_mpls+0x138>
    a2e4:	add	r0, pc, r0
    a2e8:	bl	2210 <sf_bpf_error>
    a2ec:	movw	r0, #641	; 0x281
    a2f0:	bl	66d0 <gen_linktype>
    a2f4:	mov	r7, r0
    a2f8:	cmp	r6, #0
    a2fc:	blt	a33c <sf_gen_mpls+0xb0>
    a300:	lsl	r6, r6, #12
    a304:	mov	r0, #0
    a308:	mov	r1, #16
    a30c:	mov	r2, r0
    a310:	mov	r3, #61440	; 0xf000
    a314:	movt	r3, #65535	; 0xffff
    a318:	str	r1, [sp]
    a31c:	mov	r1, r4
    a320:	stmib	sp, {r0, r6}
    a324:	mov	r0, #2
    a328:	bl	2b74 <gen_ncmp>
    a32c:	mov	r1, r0
    a330:	mov	r0, r7
    a334:	mov	r7, r1
    a338:	bl	3a88 <sf_gen_and>
    a33c:	ldr	r3, [pc, #132]	; a3c8 <sf_gen_mpls+0x13c>
    a340:	add	r4, r4, #4
    a344:	add	r5, r5, #1
    a348:	mov	r0, r7
    a34c:	ldr	r1, [pc, #120]	; a3cc <sf_gen_mpls+0x140>
    a350:	add	r3, pc, r3
    a354:	ldr	r2, [r3, #880]	; 0x370
    a358:	add	r1, pc, r1
    a35c:	str	r4, [r3, #872]	; 0x368
    a360:	str	r5, [r1, #4]
    a364:	add	r2, r2, #4
    a368:	str	r2, [r3, #880]	; 0x370
    a36c:	add	sp, sp, #20
    a370:	ldrd	r4, [sp]
    a374:	ldrd	r6, [sp, #8]
    a378:	add	sp, sp, #16
    a37c:	pop	{pc}		; (ldr pc, [sp], #4)
    a380:	movw	r0, #34887	; 0x8847
    a384:	bl	66d0 <gen_linktype>
    a388:	mov	r7, r0
    a38c:	b	a2f8 <sf_gen_mpls+0x6c>
    a390:	mov	ip, #0
    a394:	mov	r1, #16
    a398:	mov	r2, r1
    a39c:	mov	r3, #1
    a3a0:	mov	r0, #2
    a3a4:	stm	sp, {r1, ip}
    a3a8:	sub	r1, r4, #2
    a3ac:	str	ip, [sp, #8]
    a3b0:	bl	2b74 <gen_ncmp>
    a3b4:	mov	r7, r0
    a3b8:	b	a2f8 <sf_gen_mpls+0x6c>
    a3bc:	.word	0x00026fc8
    a3c0:	.word	0x000270b0
    a3c4:	.word	0x00009e0c
    a3c8:	.word	0x00027010
    a3cc:	.word	0x00026f18

0000a3d0 <sf_gen_pppoed>:
    a3d0:	movw	r0, #34915	; 0x8863
    a3d4:	b	66d0 <gen_linktype>

0000a3d8 <sf_gen_pppoes>:
    a3d8:	movw	r0, #34916	; 0x8864
    a3dc:	str	r4, [sp, #-8]!
    a3e0:	str	lr, [sp, #4]
    a3e4:	bl	66d0 <gen_linktype>
    a3e8:	ldr	r3, [pc, #56]	; a428 <sf_gen_pppoes+0x50>
    a3ec:	mov	r1, #8
    a3f0:	mov	lr, #1
    a3f4:	ldr	ip, [pc, #48]	; a42c <sf_gen_pppoes+0x54>
    a3f8:	add	r3, pc, r3
    a3fc:	ldr	r2, [r3, #872]	; 0x368
    a400:	add	ip, pc, ip
    a404:	str	r1, [r3, #872]	; 0x368
    a408:	str	r1, [r3, #880]	; 0x370
    a40c:	str	lr, [r3, #928]	; 0x3a0
    a410:	add	r1, r2, #6
    a414:	str	r2, [ip]
    a418:	str	r1, [r3, #952]	; 0x3b8
    a41c:	ldr	r4, [sp]
    a420:	add	sp, sp, #4
    a424:	pop	{pc}		; (ldr pc, [sp], #4)
    a428:	.word	0x00026f68
    a42c:	.word	0x00026e70

0000a430 <gen_hostop6.constprop.8>:
    a430:	strd	r4, [sp, #-36]!	; 0xffffffdc
    a434:	strd	r6, [sp, #8]
    a438:	mov	r7, r0
    a43c:	mov	r6, r1
    a440:	strd	r8, [sp, #16]
    a444:	strd	sl, [sp, #24]
    a448:	str	lr, [sp, #32]
    a44c:	sub	sp, sp, #20
    a450:	cmp	r2, #4
    a454:	addls	pc, pc, r2, lsl #2
    a458:	b	a5e4 <gen_hostop6.constprop.8+0x1b4>
    a45c:	b	a570 <gen_hostop6.constprop.8+0x140>
    a460:	b	a470 <gen_hostop6.constprop.8+0x40>
    a464:	b	a5d0 <gen_hostop6.constprop.8+0x1a0>
    a468:	b	a570 <gen_hostop6.constprop.8+0x140>
    a46c:	b	a5a0 <gen_hostop6.constprop.8+0x170>
    a470:	mov	sl, #12
    a474:	mov	fp, #16
    a478:	mov	r1, #20
    a47c:	mov	r9, #8
    a480:	ldr	ip, [r7, #12]
    a484:	mov	r4, #0
    a488:	mov	r8, #16
    a48c:	mov	r2, r4
    a490:	mov	r0, #3
    a494:	ldr	r3, [r6, #12]
    a498:	str	r8, [sp]
    a49c:	rev	ip, ip
    a4a0:	rev	r3, r3
    a4a4:	stmib	sp, {r4, ip}
    a4a8:	bl	2b74 <gen_ncmp>
    a4ac:	ldr	ip, [r7, #8]
    a4b0:	mov	r5, r0
    a4b4:	mov	r2, r4
    a4b8:	str	r8, [sp]
    a4bc:	mov	r1, fp
    a4c0:	mov	r0, #3
    a4c4:	ldr	r3, [r6, #8]
    a4c8:	rev	ip, ip
    a4cc:	rev	r3, r3
    a4d0:	stmib	sp, {r4, ip}
    a4d4:	bl	2b74 <gen_ncmp>
    a4d8:	mov	r1, r5
    a4dc:	bl	3a88 <sf_gen_and>
    a4e0:	ldr	ip, [r7, #4]
    a4e4:	mov	r2, r4
    a4e8:	mov	r1, sl
    a4ec:	str	r8, [sp]
    a4f0:	mov	r0, #3
    a4f4:	ldr	r3, [r6, #4]
    a4f8:	rev	ip, ip
    a4fc:	rev	r3, r3
    a500:	stmib	sp, {r4, ip}
    a504:	bl	2b74 <gen_ncmp>
    a508:	mov	r1, r5
    a50c:	bl	3a88 <sf_gen_and>
    a510:	ldr	ip, [r7]
    a514:	mov	r2, r4
    a518:	mov	r1, r9
    a51c:	str	r8, [sp]
    a520:	mov	r0, #3
    a524:	ldr	r3, [r6]
    a528:	rev	ip, ip
    a52c:	rev	r3, r3
    a530:	stmib	sp, {r4, ip}
    a534:	bl	2b74 <gen_ncmp>
    a538:	mov	r1, r5
    a53c:	bl	3a88 <sf_gen_and>
    a540:	movw	r0, #34525	; 0x86dd
    a544:	bl	66d0 <gen_linktype>
    a548:	mov	r1, r5
    a54c:	bl	3a88 <sf_gen_and>
    a550:	mov	r0, r5
    a554:	add	sp, sp, #20
    a558:	ldrd	r4, [sp]
    a55c:	ldrd	r6, [sp, #8]
    a560:	ldrd	r8, [sp, #16]
    a564:	ldrd	sl, [sp, #24]
    a568:	add	sp, sp, #32
    a56c:	pop	{pc}		; (ldr pc, [sp], #4)
    a570:	mov	r2, #1
    a574:	bl	a430 <gen_hostop6.constprop.8>
    a578:	mov	r4, r0
    a57c:	mov	r1, r6
    a580:	mov	r0, r7
    a584:	mov	r2, #2
    a588:	bl	a430 <gen_hostop6.constprop.8>
    a58c:	mov	r5, r0
    a590:	mov	r1, r0
    a594:	mov	r0, r4
    a598:	bl	4884 <sf_gen_or>
    a59c:	b	a550 <gen_hostop6.constprop.8+0x120>
    a5a0:	mov	r2, #1
    a5a4:	bl	a430 <gen_hostop6.constprop.8>
    a5a8:	mov	r4, r0
    a5ac:	mov	r1, r6
    a5b0:	mov	r0, r7
    a5b4:	mov	r2, #2
    a5b8:	bl	a430 <gen_hostop6.constprop.8>
    a5bc:	mov	r5, r0
    a5c0:	mov	r1, r0
    a5c4:	mov	r0, r4
    a5c8:	bl	3a88 <sf_gen_and>
    a5cc:	b	a550 <gen_hostop6.constprop.8+0x120>
    a5d0:	mov	sl, #28
    a5d4:	mov	fp, #32
    a5d8:	mov	r1, #36	; 0x24
    a5dc:	mov	r9, #24
    a5e0:	b	a480 <gen_hostop6.constprop.8+0x50>
    a5e4:	bl	ebc <abort@plt>

0000a5e8 <gen_host6>:
    a5e8:	str	r4, [sp, #-8]!
    a5ec:	str	lr, [sp, #4]
    a5f0:	ldr	lr, [pc, #652]	; a884 <gen_host6+0x29c>
    a5f4:	ldr	r4, [sp, #8]
    a5f8:	ldr	ip, [pc, #648]	; a888 <gen_host6+0x2a0>
    a5fc:	add	lr, pc, lr
    a600:	cmp	r4, #2
    a604:	add	ip, pc, ip
    a608:	movne	ip, lr
    a60c:	cmp	r2, #40	; 0x28
    a610:	addls	pc, pc, r2, lsl #2
    a614:	b	a880 <gen_host6+0x298>
    a618:	b	a6bc <gen_host6+0xd4>
    a61c:	b	a880 <gen_host6+0x298>
    a620:	b	a860 <gen_host6+0x278>
    a624:	b	a850 <gen_host6+0x268>
    a628:	b	a840 <gen_host6+0x258>
    a62c:	b	a830 <gen_host6+0x248>
    a630:	b	a820 <gen_host6+0x238>
    a634:	b	a810 <gen_host6+0x228>
    a638:	b	a800 <gen_host6+0x218>
    a63c:	b	a7f0 <gen_host6+0x208>
    a640:	b	a7e0 <gen_host6+0x1f8>
    a644:	b	a7d4 <gen_host6+0x1ec>
    a648:	b	a7c4 <gen_host6+0x1dc>
    a64c:	b	a7b8 <gen_host6+0x1d0>
    a650:	b	a7ac <gen_host6+0x1c4>
    a654:	b	a7a0 <gen_host6+0x1b8>
    a658:	b	a794 <gen_host6+0x1ac>
    a65c:	b	a6bc <gen_host6+0xd4>
    a660:	b	a784 <gen_host6+0x19c>
    a664:	b	a774 <gen_host6+0x18c>
    a668:	b	a764 <gen_host6+0x17c>
    a66c:	b	a754 <gen_host6+0x16c>
    a670:	b	a744 <gen_host6+0x15c>
    a674:	b	a738 <gen_host6+0x150>
    a678:	b	a72c <gen_host6+0x144>
    a67c:	b	a71c <gen_host6+0x134>
    a680:	b	a70c <gen_host6+0x124>
    a684:	b	a6fc <gen_host6+0x114>
    a688:	b	a6ec <gen_host6+0x104>
    a68c:	b	a6e0 <gen_host6+0xf8>
    a690:	b	a6d0 <gen_host6+0xe8>
    a694:	b	a880 <gen_host6+0x298>
    a698:	b	a880 <gen_host6+0x298>
    a69c:	b	a880 <gen_host6+0x298>
    a6a0:	b	a880 <gen_host6+0x298>
    a6a4:	b	a880 <gen_host6+0x298>
    a6a8:	b	a880 <gen_host6+0x298>
    a6ac:	b	a880 <gen_host6+0x298>
    a6b0:	b	a880 <gen_host6+0x298>
    a6b4:	b	a880 <gen_host6+0x298>
    a6b8:	b	a870 <gen_host6+0x288>
    a6bc:	mov	r2, r3
    a6c0:	ldr	r4, [sp]
    a6c4:	ldr	lr, [sp, #4]
    a6c8:	add	sp, sp, #8
    a6cc:	b	a430 <gen_hostop6.constprop.8>
    a6d0:	ldr	r0, [pc, #436]	; a88c <gen_host6+0x2a4>
    a6d4:	mov	r1, ip
    a6d8:	add	r0, pc, r0
    a6dc:	bl	2210 <sf_bpf_error>
    a6e0:	ldr	r0, [pc, #424]	; a890 <gen_host6+0x2a8>
    a6e4:	add	r0, pc, r0
    a6e8:	bl	2210 <sf_bpf_error>
    a6ec:	ldr	r0, [pc, #416]	; a894 <gen_host6+0x2ac>
    a6f0:	mov	r1, ip
    a6f4:	add	r0, pc, r0
    a6f8:	bl	2210 <sf_bpf_error>
    a6fc:	ldr	r0, [pc, #404]	; a898 <gen_host6+0x2b0>
    a700:	mov	r1, ip
    a704:	add	r0, pc, r0
    a708:	bl	2210 <sf_bpf_error>
    a70c:	ldr	r0, [pc, #392]	; a89c <gen_host6+0x2b4>
    a710:	mov	r1, ip
    a714:	add	r0, pc, r0
    a718:	bl	2210 <sf_bpf_error>
    a71c:	ldr	r0, [pc, #380]	; a8a0 <gen_host6+0x2b8>
    a720:	mov	r1, ip
    a724:	add	r0, pc, r0
    a728:	bl	2210 <sf_bpf_error>
    a72c:	ldr	r0, [pc, #368]	; a8a4 <gen_host6+0x2bc>
    a730:	add	r0, pc, r0
    a734:	bl	2210 <sf_bpf_error>
    a738:	ldr	r0, [pc, #360]	; a8a8 <gen_host6+0x2c0>
    a73c:	add	r0, pc, r0
    a740:	bl	2210 <sf_bpf_error>
    a744:	ldr	r0, [pc, #352]	; a8ac <gen_host6+0x2c4>
    a748:	mov	r1, ip
    a74c:	add	r0, pc, r0
    a750:	bl	2210 <sf_bpf_error>
    a754:	ldr	r0, [pc, #340]	; a8b0 <gen_host6+0x2c8>
    a758:	mov	r1, ip
    a75c:	add	r0, pc, r0
    a760:	bl	2210 <sf_bpf_error>
    a764:	ldr	r0, [pc, #328]	; a8b4 <gen_host6+0x2cc>
    a768:	mov	r1, ip
    a76c:	add	r0, pc, r0
    a770:	bl	2210 <sf_bpf_error>
    a774:	ldr	r0, [pc, #316]	; a8b8 <gen_host6+0x2d0>
    a778:	mov	r1, ip
    a77c:	add	r0, pc, r0
    a780:	bl	2210 <sf_bpf_error>
    a784:	ldr	r0, [pc, #304]	; a8bc <gen_host6+0x2d4>
    a788:	mov	r1, ip
    a78c:	add	r0, pc, r0
    a790:	bl	2210 <sf_bpf_error>
    a794:	ldr	r0, [pc, #292]	; a8c0 <gen_host6+0x2d8>
    a798:	add	r0, pc, r0
    a79c:	bl	2210 <sf_bpf_error>
    a7a0:	ldr	r0, [pc, #284]	; a8c4 <gen_host6+0x2dc>
    a7a4:	add	r0, pc, r0
    a7a8:	bl	2210 <sf_bpf_error>
    a7ac:	ldr	r0, [pc, #276]	; a8c8 <gen_host6+0x2e0>
    a7b0:	add	r0, pc, r0
    a7b4:	bl	2210 <sf_bpf_error>
    a7b8:	ldr	r0, [pc, #268]	; a8cc <gen_host6+0x2e4>
    a7bc:	add	r0, pc, r0
    a7c0:	bl	2210 <sf_bpf_error>
    a7c4:	ldr	r0, [pc, #260]	; a8d0 <gen_host6+0x2e8>
    a7c8:	mov	r1, ip
    a7cc:	add	r0, pc, r0
    a7d0:	bl	2210 <sf_bpf_error>
    a7d4:	ldr	r0, [pc, #248]	; a8d4 <gen_host6+0x2ec>
    a7d8:	add	r0, pc, r0
    a7dc:	bl	2210 <sf_bpf_error>
    a7e0:	ldr	r0, [pc, #240]	; a8d8 <gen_host6+0x2f0>
    a7e4:	mov	r1, ip
    a7e8:	add	r0, pc, r0
    a7ec:	bl	2210 <sf_bpf_error>
    a7f0:	ldr	r0, [pc, #228]	; a8dc <gen_host6+0x2f4>
    a7f4:	mov	r1, ip
    a7f8:	add	r0, pc, r0
    a7fc:	bl	2210 <sf_bpf_error>
    a800:	ldr	r0, [pc, #216]	; a8e0 <gen_host6+0x2f8>
    a804:	mov	r1, ip
    a808:	add	r0, pc, r0
    a80c:	bl	2210 <sf_bpf_error>
    a810:	ldr	r0, [pc, #204]	; a8e4 <gen_host6+0x2fc>
    a814:	mov	r1, ip
    a818:	add	r0, pc, r0
    a81c:	bl	2210 <sf_bpf_error>
    a820:	ldr	r0, [pc, #192]	; a8e8 <gen_host6+0x300>
    a824:	mov	r1, ip
    a828:	add	r0, pc, r0
    a82c:	bl	2210 <sf_bpf_error>
    a830:	ldr	r0, [pc, #180]	; a8ec <gen_host6+0x304>
    a834:	mov	r1, ip
    a838:	add	r0, pc, r0
    a83c:	bl	2210 <sf_bpf_error>
    a840:	ldr	r0, [pc, #168]	; a8f0 <gen_host6+0x308>
    a844:	mov	r1, ip
    a848:	add	r0, pc, r0
    a84c:	bl	2210 <sf_bpf_error>
    a850:	ldr	r0, [pc, #156]	; a8f4 <gen_host6+0x30c>
    a854:	mov	r1, ip
    a858:	add	r0, pc, r0
    a85c:	bl	2210 <sf_bpf_error>
    a860:	ldr	r0, [pc, #144]	; a8f8 <gen_host6+0x310>
    a864:	mov	r1, ip
    a868:	add	r0, pc, r0
    a86c:	bl	2210 <sf_bpf_error>
    a870:	ldr	r0, [pc, #132]	; a8fc <gen_host6+0x314>
    a874:	mov	r1, ip
    a878:	add	r0, pc, r0
    a87c:	bl	2210 <sf_bpf_error>
    a880:	bl	ebc <abort@plt>
    a884:	.word	0x0000b680
    a888:	.word	0x00009540
    a88c:	.word	0x00009778
    a890:	.word	0x00009748
    a894:	.word	0x00009718
    a898:	.word	0x000096e8
    a89c:	.word	0x000096b8
    a8a0:	.word	0x00009688
    a8a4:	.word	0x000093f0
    a8a8:	.word	0x00009534
    a8ac:	.word	0x000094dc
    a8b0:	.word	0x000094ac
    a8b4:	.word	0x00009620
    a8b8:	.word	0x000095f4
    a8bc:	.word	0x000095c4
    a8c0:	.word	0x00009544
    a8c4:	.word	0x00009560
    a8c8:	.word	0x000094e4
    a8cc:	.word	0x000094fc
    a8d0:	.word	0x000099b4
    a8d4:	.word	0x00009470
    a8d8:	.word	0x00009400
    a8dc:	.word	0x000093d0
    a8e0:	.word	0x000093a0
    a8e4:	.word	0x00009370
    a8e8:	.word	0x00009320
    a8ec:	.word	0x00009330
    a8f0:	.word	0x000098f0
    a8f4:	.word	0x00009904
    a8f8:	.word	0x000098b0
    a8fc:	.word	0x000095fc

0000a900 <sf_gen_mcode6>:
    a900:	strd	r4, [sp, #-36]!	; 0xffffffdc
    a904:	cmp	r1, #0
    a908:	strd	r6, [sp, #8]
    a90c:	strd	r8, [sp, #16]
    a910:	strd	sl, [sp, #24]
    a914:	str	lr, [sp, #32]
    a918:	sub	sp, sp, #36	; 0x24
    a91c:	str	r0, [sp, #8]
    a920:	str	r3, [sp, #12]
    a924:	bne	aa9c <sf_gen_mcode6+0x19c>
    a928:	mov	r5, r2
    a92c:	uxtb	r7, r3
    a930:	bl	bc60 <pcap_nametoaddrinfo>
    a934:	subs	r6, r0, #0
    a938:	beq	aab8 <sf_gen_mcode6+0x1b8>
    a93c:	ldr	r3, [pc, #388]	; aac8 <sf_gen_mcode6+0x1c8>
    a940:	ldr	r2, [r6, #28]
    a944:	add	r3, pc, r3
    a948:	cmp	r2, #0
    a94c:	str	r6, [r3, #888]	; 0x378
    a950:	bne	aaa8 <sf_gen_mcode6+0x1a8>
    a954:	ldr	r4, [r6, #20]
    a958:	cmp	r5, #128	; 0x80
    a95c:	add	sl, r4, #8
    a960:	bhi	aa8c <sf_gen_mcode6+0x18c>
    a964:	asr	fp, r5, #3
    a968:	add	r3, sp, #16
    a96c:	mov	r8, #0
    a970:	mov	r9, #0
    a974:	mov	r0, r3
    a978:	mov	r2, fp
    a97c:	mov	r1, #255	; 0xff
    a980:	strd	r8, [sp, #16]
    a984:	strd	r8, [sp, #24]
    a988:	bl	e2c <memset@plt>
    a98c:	ands	r2, r5, #7
    a990:	mov	r3, r0
    a994:	bne	aa3c <sf_gen_mcode6+0x13c>
    a998:	ldr	r2, [r4, #8]
    a99c:	ldr	r1, [sp, #16]
    a9a0:	bics	r2, r2, r1
    a9a4:	bne	aa6c <sf_gen_mcode6+0x16c>
    a9a8:	ldr	r2, [r4, #12]
    a9ac:	ldr	r1, [sp, #20]
    a9b0:	bics	r2, r2, r1
    a9b4:	bne	aa6c <sf_gen_mcode6+0x16c>
    a9b8:	ldr	r2, [r4, #16]
    a9bc:	ldr	r1, [sp, #24]
    a9c0:	bics	r2, r2, r1
    a9c4:	bne	aa6c <sf_gen_mcode6+0x16c>
    a9c8:	ldr	r2, [r4, #20]
    a9cc:	ldr	r1, [sp, #28]
    a9d0:	bics	r2, r2, r1
    a9d4:	bne	aa6c <sf_gen_mcode6+0x16c>
    a9d8:	cmp	r7, #1
    a9dc:	bls	aa58 <sf_gen_mcode6+0x158>
    a9e0:	cmp	r7, #2
    a9e4:	bne	aa80 <sf_gen_mcode6+0x180>
    a9e8:	mov	r1, r3
    a9ec:	ldrb	r2, [sp, #13]
    a9f0:	mov	r0, sl
    a9f4:	str	r7, [sp]
    a9f8:	ldrb	r3, [sp, #14]
    a9fc:	bl	a5e8 <gen_host6>
    aa00:	ldr	r3, [pc, #196]	; aacc <sf_gen_mcode6+0x1cc>
    aa04:	mov	r2, #0
    aa08:	mov	r4, r0
    aa0c:	mov	r0, r6
    aa10:	add	r3, pc, r3
    aa14:	str	r2, [r3, #888]	; 0x378
    aa18:	bl	e80 <freeaddrinfo@plt>
    aa1c:	mov	r0, r4
    aa20:	add	sp, sp, #36	; 0x24
    aa24:	ldrd	r4, [sp]
    aa28:	ldrd	r6, [sp, #8]
    aa2c:	ldrd	r8, [sp, #16]
    aa30:	ldrd	sl, [sp, #24]
    aa34:	add	sp, sp, #32
    aa38:	pop	{pc}		; (ldr pc, [sp], #4)
    aa3c:	mov	r1, #255	; 0xff
    aa40:	rsb	r2, r2, #8
    aa44:	lsl	r2, r1, r2
    aa48:	add	r1, sp, #32
    aa4c:	add	fp, r1, fp
    aa50:	strb	r2, [fp, #-16]
    aa54:	b	a998 <sf_gen_mcode6+0x98>
    aa58:	cmp	r5, #128	; 0x80
    aa5c:	beq	a9e8 <sf_gen_mcode6+0xe8>
    aa60:	ldr	r0, [pc, #104]	; aad0 <sf_gen_mcode6+0x1d0>
    aa64:	add	r0, pc, r0
    aa68:	bl	2210 <sf_bpf_error>
    aa6c:	ldr	r0, [pc, #96]	; aad4 <sf_gen_mcode6+0x1d4>
    aa70:	mov	r2, r5
    aa74:	ldr	r1, [sp, #8]
    aa78:	add	r0, pc, r0
    aa7c:	bl	2210 <sf_bpf_error>
    aa80:	ldr	r0, [pc, #80]	; aad8 <sf_gen_mcode6+0x1d8>
    aa84:	add	r0, pc, r0
    aa88:	bl	2210 <sf_bpf_error>
    aa8c:	ldr	r0, [pc, #72]	; aadc <sf_gen_mcode6+0x1dc>
    aa90:	mov	r1, #128	; 0x80
    aa94:	add	r0, pc, r0
    aa98:	bl	2210 <sf_bpf_error>
    aa9c:	ldr	r0, [pc, #60]	; aae0 <sf_gen_mcode6+0x1e0>
    aaa0:	add	r0, pc, r0
    aaa4:	bl	2210 <sf_bpf_error>
    aaa8:	ldr	r0, [pc, #52]	; aae4 <sf_gen_mcode6+0x1e4>
    aaac:	ldr	r1, [sp, #8]
    aab0:	add	r0, pc, r0
    aab4:	bl	2210 <sf_bpf_error>
    aab8:	ldr	r0, [pc, #40]	; aae8 <sf_gen_mcode6+0x1e8>
    aabc:	ldr	r1, [sp, #8]
    aac0:	add	r0, pc, r0
    aac4:	bl	2210 <sf_bpf_error>
    aac8:	.word	0x00026a1c
    aacc:	.word	0x00026950
    aad0:	.word	0x00009494
    aad4:	.word	0x00009460
    aad8:	.word	0x0000978c
    aadc:	.word	0x00009760
    aae0:	.word	0x00009704
    aae4:	.word	0x00009724
    aae8:	.word	0x000096fc

0000aaec <sf_gen_scode>:
    aaec:	strd	r4, [sp, #-36]!	; 0xffffffdc
    aaf0:	uxtb	r4, r1
    aaf4:	ubfx	r5, r1, #8, #8
    aaf8:	strd	r6, [sp, #8]
    aafc:	cmp	r4, #4
    ab00:	strd	r8, [sp, #16]
    ab04:	ubfx	r8, r1, #16, #8
    ab08:	strd	sl, [sp, #24]
    ab0c:	str	lr, [sp, #32]
    ab10:	sub	sp, sp, #52	; 0x34
    ab14:	str	r1, [sp, #20]
    ab18:	beq	b138 <sf_gen_scode+0x64c>
    ab1c:	mov	r9, r0
    ab20:	bls	abd4 <sf_gen_scode+0xe8>
    ab24:	cmp	r4, #6
    ab28:	beq	af58 <sf_gen_scode+0x46c>
    ab2c:	bcc	aeb4 <sf_gen_scode+0x3c8>
    ab30:	cmp	r4, #7
    ab34:	bne	acfc <sf_gen_scode+0x210>
    ab38:	cmp	r5, #0
    ab3c:	cmpne	r5, #7
    ab40:	beq	ad60 <sf_gen_scode+0x274>
    ab44:	sub	r3, r5, #5
    ab48:	cmp	r3, #1
    ab4c:	bhi	b210 <sf_gen_scode+0x724>
    ab50:	add	r3, sp, #24
    ab54:	add	r2, sp, #32
    ab58:	add	r1, sp, #28
    ab5c:	bl	bdd4 <pcap_nametoportrange>
    ab60:	cmp	r0, #0
    ab64:	beq	b118 <sf_gen_scode+0x62c>
    ab68:	cmp	r5, #6
    ab6c:	bne	b004 <sf_gen_scode+0x518>
    ab70:	ldr	r3, [sp, #24]
    ab74:	cmp	r3, #17
    ab78:	beq	b200 <sf_gen_scode+0x714>
    ab7c:	cmp	r3, #132	; 0x84
    ab80:	beq	ada0 <sf_gen_scode+0x2b4>
    ab84:	str	r5, [sp, #24]
    ab88:	mov	r2, r5
    ab8c:	mov	r3, r8
    ab90:	ldrd	r0, [sp, #28]
    ab94:	bl	8ea4 <gen_portrange>
    ab98:	mov	r7, r0
    ab9c:	mov	r3, r8
    aba0:	ldr	r2, [sp, #24]
    aba4:	ldrd	r0, [sp, #28]
    aba8:	bl	8f98 <gen_portrange6>
    abac:	mov	r1, r7
    abb0:	bl	4884 <sf_gen_or>
    abb4:	mov	r0, r7
    abb8:	add	sp, sp, #52	; 0x34
    abbc:	ldrd	r4, [sp]
    abc0:	ldrd	r6, [sp, #8]
    abc4:	ldrd	r8, [sp, #16]
    abc8:	ldrd	sl, [sp, #24]
    abcc:	add	sp, sp, #32
    abd0:	pop	{pc}		; (ldr pc, [sp], #4)
    abd4:	cmp	r4, #2
    abd8:	beq	af80 <sf_gen_scode+0x494>
    abdc:	bhi	aedc <sf_gen_scode+0x3f0>
    abe0:	cmp	r5, #1
    abe4:	beq	ad10 <sf_gen_scode+0x224>
    abe8:	cmp	r5, #12
    abec:	beq	b0f8 <sf_gen_scode+0x60c>
    abf0:	add	r3, sp, #32
    abf4:	mvn	r2, #0
    abf8:	mov	r1, r3
    abfc:	mvn	r3, #0
    ac00:	str	r1, [sp, #12]
    ac04:	strd	r2, [sp, #32]
    ac08:	strd	r2, [r1, #8]
    ac0c:	bl	bc60 <pcap_nametoaddrinfo>
    ac10:	subs	r3, r0, #0
    ac14:	str	r3, [sp, #8]
    ac18:	beq	b1b0 <sf_gen_scode+0x6c4>
    ac1c:	ldr	r2, [pc, #1544]	; b22c <sf_gen_scode+0x740>
    ac20:	mov	r7, #0
    ac24:	str	r5, [sp, #16]
    ac28:	ldr	r1, [sp, #8]
    ac2c:	add	r2, pc, r2
    ac30:	ldr	r3, [r2, #952]	; 0x3b8
    ac34:	mov	r6, r1
    ac38:	str	r1, [r2, #888]	; 0x378
    ac3c:	cmn	r3, #1
    ac40:	movne	r3, #0
    ac44:	moveq	r3, #1
    ac48:	cmp	r5, r7
    ac4c:	movne	r3, r7
    ac50:	cmp	r3, r7
    ac54:	moveq	fp, r5
    ac58:	movne	fp, #17
    ac5c:	moveq	sl, r5
    ac60:	movne	sl, #2
    ac64:	b	acc0 <sf_gen_scode+0x1d4>
    ac68:	cmp	r3, #10
    ac6c:	bne	acb4 <sf_gen_scode+0x1c8>
    ac70:	cmp	fp, #2
    ac74:	beq	acb4 <sf_gen_scode+0x1c8>
    ac78:	ldr	r0, [r6, #20]
    ac7c:	mov	r3, r8
    ac80:	mov	r2, fp
    ac84:	str	r4, [sp]
    ac88:	ldr	r1, [sp, #12]
    ac8c:	add	r0, r0, #8
    ac90:	bl	a5e8 <gen_host6>
    ac94:	mov	r5, r0
    ac98:	cmp	r7, #0
    ac9c:	moveq	r7, r5
    aca0:	beq	acb4 <sf_gen_scode+0x1c8>
    aca4:	mov	r0, r7
    aca8:	mov	r1, r5
    acac:	mov	r7, r5
    acb0:	bl	4884 <sf_gen_or>
    acb4:	ldr	r6, [r6, #28]
    acb8:	cmp	r6, #0
    acbc:	beq	afc4 <sf_gen_scode+0x4d8>
    acc0:	ldr	r3, [r6, #4]
    acc4:	cmp	r3, #2
    acc8:	bne	ac68 <sf_gen_scode+0x17c>
    accc:	cmp	sl, #17
    acd0:	beq	acb4 <sf_gen_scode+0x1c8>
    acd4:	ldr	r0, [r6, #20]
    acd8:	mov	r3, r8
    acdc:	mov	r2, sl
    ace0:	mvn	r1, #0
    ace4:	ldr	r0, [r0, #4]
    ace8:	str	r4, [sp]
    acec:	rev	r0, r0
    acf0:	bl	87f4 <gen_host>
    acf4:	mov	r5, r0
    acf8:	b	ac98 <sf_gen_scode+0x1ac>
    acfc:	cmp	r4, #255	; 0xff
    ad00:	bne	b228 <sf_gen_scode+0x73c>
    ad04:	ldr	r0, [pc, #1316]	; b230 <sf_gen_scode+0x744>
    ad08:	add	r0, pc, r0
    ad0c:	bl	2210 <sf_bpf_error>
    ad10:	ldr	r3, [pc, #1308]	; b234 <sf_gen_scode+0x748>
    ad14:	add	r3, pc, r3
    ad18:	ldr	r3, [r3, #856]	; 0x358
    ad1c:	cmp	r3, #119	; 0x77
    ad20:	beq	ae70 <sf_gen_scode+0x384>
    ad24:	bgt	addc <sf_gen_scode+0x2f0>
    ad28:	cmp	r3, #6
    ad2c:	beq	b0d4 <sf_gen_scode+0x5e8>
    ad30:	ble	adb0 <sf_gen_scode+0x2c4>
    ad34:	cmp	r3, #10
    ad38:	bne	ae68 <sf_gen_scode+0x37c>
    ad3c:	bl	c1bc <pcap_ether_hostton>
    ad40:	subs	r4, r0, #0
    ad44:	beq	b1c0 <sf_gen_scode+0x6d4>
    ad48:	mov	r1, r8
    ad4c:	bl	4904 <gen_fhostop>
    ad50:	mov	r7, r0
    ad54:	mov	r0, r4
    ad58:	bl	d48 <free@plt>
    ad5c:	b	abb4 <sf_gen_scode+0xc8>
    ad60:	add	r3, sp, #24
    ad64:	add	r2, sp, #32
    ad68:	add	r1, sp, #28
    ad6c:	bl	bdd4 <pcap_nametoportrange>
    ad70:	cmp	r0, #0
    ad74:	beq	b118 <sf_gen_scode+0x62c>
    ad78:	cmp	r5, #7
    ad7c:	bne	ab68 <sf_gen_scode+0x7c>
    ad80:	ldr	r3, [sp, #24]
    ad84:	cmp	r3, #6
    ad88:	beq	b1e0 <sf_gen_scode+0x6f4>
    ad8c:	cmp	r3, #132	; 0x84
    ad90:	movne	r3, #17
    ad94:	movne	r5, r3
    ad98:	strne	r3, [sp, #24]
    ad9c:	bne	ab88 <sf_gen_scode+0x9c>
    ada0:	ldr	r0, [pc, #1168]	; b238 <sf_gen_scode+0x74c>
    ada4:	mov	r1, r9
    ada8:	add	r0, pc, r0
    adac:	bl	2210 <sf_bpf_error>
    adb0:	cmp	r3, #1
    adb4:	bne	aea8 <sf_gen_scode+0x3bc>
    adb8:	bl	c1bc <pcap_ether_hostton>
    adbc:	subs	r4, r0, #0
    adc0:	beq	b1d0 <sf_gen_scode+0x6e4>
    adc4:	mov	r1, r8
    adc8:	bl	4b78 <gen_ehostop>
    adcc:	mov	r7, r0
    add0:	mov	r0, r4
    add4:	bl	d48 <free@plt>
    add8:	b	abb4 <sf_gen_scode+0xc8>
    addc:	cmp	r3, #127	; 0x7f
    ade0:	beq	ae70 <sf_gen_scode+0x384>
    ade4:	bgt	ae98 <sf_gen_scode+0x3ac>
    ade8:	cmp	r3, #122	; 0x7a
    adec:	beq	b0b0 <sf_gen_scode+0x5c4>
    adf0:	cmp	r3, #123	; 0x7b
    adf4:	bne	aea8 <sf_gen_scode+0x3bc>
    adf8:	ldr	r3, [pc, #1084]	; b23c <sf_gen_scode+0x750>
    adfc:	add	r3, pc, r3
    ae00:	ldr	r3, [r3, #908]	; 0x38c
    ae04:	cmp	r3, #0
    ae08:	beq	aea8 <sf_gen_scode+0x3bc>
    ae0c:	mov	r3, #65280	; 0xff00
    ae10:	mov	r2, #8
    ae14:	mov	r1, #4
    ae18:	mov	r0, #1
    ae1c:	bl	2c2c <gen_cmp>
    ae20:	mov	r4, r0
    ae24:	mov	r0, r9
    ae28:	ldr	r3, [r4, #44]	; 0x2c
    ae2c:	clz	r3, r3
    ae30:	lsr	r3, r3, #5
    ae34:	str	r3, [r4, #44]	; 0x2c
    ae38:	bl	c1bc <pcap_ether_hostton>
    ae3c:	subs	r5, r0, #0
    ae40:	beq	b1d0 <sf_gen_scode+0x6e4>
    ae44:	mov	r1, r8
    ae48:	bl	4b78 <gen_ehostop>
    ae4c:	mov	r1, r0
    ae50:	mov	r7, r0
    ae54:	mov	r0, r4
    ae58:	bl	3a88 <sf_gen_and>
    ae5c:	mov	r0, r5
    ae60:	bl	d48 <free@plt>
    ae64:	b	abb4 <sf_gen_scode+0xc8>
    ae68:	cmp	r3, #105	; 0x69
    ae6c:	bne	aea8 <sf_gen_scode+0x3bc>
    ae70:	mov	r0, r9
    ae74:	bl	c1bc <pcap_ether_hostton>
    ae78:	subs	r4, r0, #0
    ae7c:	beq	b170 <sf_gen_scode+0x684>
    ae80:	mov	r1, r8
    ae84:	bl	4f80 <gen_wlanhostop>
    ae88:	mov	r7, r0
    ae8c:	mov	r0, r4
    ae90:	bl	d48 <free@plt>
    ae94:	b	abb4 <sf_gen_scode+0xc8>
    ae98:	cmp	r3, #163	; 0xa3
    ae9c:	beq	ae70 <sf_gen_scode+0x384>
    aea0:	cmp	r3, #192	; 0xc0
    aea4:	beq	ae70 <sf_gen_scode+0x384>
    aea8:	ldr	r0, [pc, #912]	; b240 <sf_gen_scode+0x754>
    aeac:	add	r0, pc, r0
    aeb0:	bl	2210 <sf_bpf_error>
    aeb4:	mov	r1, r5
    aeb8:	bl	2cbc <lookup_proto>
    aebc:	cmp	r0, #0
    aec0:	str	r0, [sp, #24]
    aec4:	blt	b144 <sf_gen_scode+0x658>
    aec8:	mov	r2, r8
    aecc:	mov	r1, r5
    aed0:	bl	73cc <gen_proto>
    aed4:	mov	r7, r0
    aed8:	b	abb4 <sf_gen_scode+0xc8>
    aedc:	cmp	r5, #0
    aee0:	cmpne	r5, #7
    aee4:	beq	b064 <sf_gen_scode+0x578>
    aee8:	sub	r3, r5, #5
    aeec:	cmp	r3, #1
    aef0:	bhi	b154 <sf_gen_scode+0x668>
    aef4:	add	r2, sp, #24
    aef8:	add	r1, sp, #32
    aefc:	bl	bce0 <pcap_nametoport>
    af00:	cmp	r0, #0
    af04:	beq	b128 <sf_gen_scode+0x63c>
    af08:	cmp	r5, #6
    af0c:	bne	b034 <sf_gen_scode+0x548>
    af10:	ldr	r3, [sp, #24]
    af14:	cmp	r3, #17
    af18:	beq	b190 <sf_gen_scode+0x6a4>
    af1c:	cmp	r3, #132	; 0x84
    af20:	beq	b0a0 <sf_gen_scode+0x5b4>
    af24:	str	r5, [sp, #24]
    af28:	mov	r1, r5
    af2c:	mov	r2, r8
    af30:	ldr	r0, [sp, #32]
    af34:	bl	8cf4 <gen_port>
    af38:	mov	r7, r0
    af3c:	mov	r2, r8
    af40:	ldr	r1, [sp, #24]
    af44:	ldr	r0, [sp, #32]
    af48:	bl	8dcc <gen_port6>
    af4c:	mov	r1, r7
    af50:	bl	4884 <sf_gen_or>
    af54:	b	abb4 <sf_gen_scode+0xc8>
    af58:	mov	r1, r5
    af5c:	bl	2cbc <lookup_proto>
    af60:	cmp	r0, #0
    af64:	str	r0, [sp, #24]
    af68:	blt	b144 <sf_gen_scode+0x658>
    af6c:	mov	r2, r8
    af70:	mov	r1, r5
    af74:	bl	908c <gen_protochain>
    af78:	mov	r7, r0
    af7c:	b	abb4 <sf_gen_scode+0xc8>
    af80:	bl	bcc0 <pcap_nametonetaddr>
    af84:	cmp	r0, #0
    af88:	beq	b160 <sf_gen_scode+0x674>
    af8c:	tst	r0, #-16777216	; 0xff000000
    af90:	mvn	r1, #0
    af94:	bne	afa8 <sf_gen_scode+0x4bc>
    af98:	lsl	r0, r0, #8
    af9c:	lsl	r1, r1, #8
    afa0:	tst	r0, #-16777216	; 0xff000000
    afa4:	beq	af98 <sf_gen_scode+0x4ac>
    afa8:	mov	ip, #2
    afac:	mov	r3, r8
    afb0:	mov	r2, r5
    afb4:	str	ip, [sp]
    afb8:	bl	87f4 <gen_host>
    afbc:	mov	r7, r0
    afc0:	b	abb4 <sf_gen_scode+0xc8>
    afc4:	ldr	r3, [pc, #632]	; b244 <sf_gen_scode+0x758>
    afc8:	ldr	r0, [sp, #8]
    afcc:	ldr	r5, [sp, #16]
    afd0:	add	r3, pc, r3
    afd4:	str	r6, [r3, #888]	; 0x378
    afd8:	bl	e80 <freeaddrinfo@plt>
    afdc:	cmp	r7, #0
    afe0:	bne	abb4 <sf_gen_scode+0xc8>
    afe4:	cmp	r5, #0
    afe8:	beq	b21c <sf_gen_scode+0x730>
    afec:	ldr	r2, [pc, #596]	; b248 <sf_gen_scode+0x75c>
    aff0:	add	r2, pc, r2
    aff4:	ldr	r0, [pc, #592]	; b24c <sf_gen_scode+0x760>
    aff8:	mov	r1, r9
    affc:	add	r0, pc, r0
    b000:	bl	2210 <sf_bpf_error>
    b004:	cmp	r5, #5
    b008:	ldrne	r5, [sp, #24]
    b00c:	bne	ab88 <sf_gen_scode+0x9c>
    b010:	ldr	r3, [sp, #24]
    b014:	cmp	r3, #17
    b018:	beq	b200 <sf_gen_scode+0x714>
    b01c:	cmp	r3, #6
    b020:	beq	b1e0 <sf_gen_scode+0x6f4>
    b024:	mov	r3, #132	; 0x84
    b028:	mov	r5, r3
    b02c:	str	r3, [sp, #24]
    b030:	b	ab88 <sf_gen_scode+0x9c>
    b034:	cmp	r5, #5
    b038:	ldrne	r5, [sp, #24]
    b03c:	bne	af28 <sf_gen_scode+0x43c>
    b040:	ldr	r3, [sp, #24]
    b044:	cmp	r3, #17
    b048:	beq	b190 <sf_gen_scode+0x6a4>
    b04c:	cmp	r3, #6
    b050:	beq	b1a0 <sf_gen_scode+0x6b4>
    b054:	mov	r3, #132	; 0x84
    b058:	mov	r5, r3
    b05c:	str	r3, [sp, #24]
    b060:	b	af28 <sf_gen_scode+0x43c>
    b064:	add	r2, sp, #24
    b068:	add	r1, sp, #32
    b06c:	bl	bce0 <pcap_nametoport>
    b070:	cmp	r0, #0
    b074:	beq	b128 <sf_gen_scode+0x63c>
    b078:	cmp	r5, #7
    b07c:	bne	af08 <sf_gen_scode+0x41c>
    b080:	ldr	r3, [sp, #24]
    b084:	cmp	r3, #6
    b088:	beq	b1a0 <sf_gen_scode+0x6b4>
    b08c:	cmp	r3, #132	; 0x84
    b090:	movne	r3, #17
    b094:	movne	r5, r3
    b098:	strne	r3, [sp, #24]
    b09c:	bne	af28 <sf_gen_scode+0x43c>
    b0a0:	ldr	r0, [pc, #424]	; b250 <sf_gen_scode+0x764>
    b0a4:	mov	r1, r9
    b0a8:	add	r0, pc, r0
    b0ac:	bl	2210 <sf_bpf_error>
    b0b0:	bl	c1bc <pcap_ether_hostton>
    b0b4:	subs	r4, r0, #0
    b0b8:	beq	b1f0 <sf_gen_scode+0x704>
    b0bc:	mov	r1, r8
    b0c0:	bl	4aa8 <gen_ipfchostop>
    b0c4:	mov	r7, r0
    b0c8:	mov	r0, r4
    b0cc:	bl	d48 <free@plt>
    b0d0:	b	abb4 <sf_gen_scode+0xc8>
    b0d4:	bl	c1bc <pcap_ether_hostton>
    b0d8:	subs	r4, r0, #0
    b0dc:	beq	b180 <sf_gen_scode+0x694>
    b0e0:	mov	r1, r8
    b0e4:	bl	49d8 <gen_thostop>
    b0e8:	mov	r7, r0
    b0ec:	mov	r0, r4
    b0f0:	bl	d48 <free@plt>
    b0f4:	b	abb4 <sf_gen_scode+0xc8>
    b0f8:	bl	c2a8 <__pcap_nametodnaddr>
    b0fc:	mov	r3, r8
    b100:	mov	r2, r5
    b104:	str	r4, [sp]
    b108:	mov	r1, #0
    b10c:	bl	87f4 <gen_host>
    b110:	mov	r7, r0
    b114:	b	abb4 <sf_gen_scode+0xc8>
    b118:	ldr	r0, [pc, #308]	; b254 <sf_gen_scode+0x768>
    b11c:	mov	r1, r9
    b120:	add	r0, pc, r0
    b124:	bl	2210 <sf_bpf_error>
    b128:	ldr	r0, [pc, #296]	; b258 <sf_gen_scode+0x76c>
    b12c:	mov	r1, r9
    b130:	add	r0, pc, r0
    b134:	bl	2210 <sf_bpf_error>
    b138:	ldr	r0, [pc, #284]	; b25c <sf_gen_scode+0x770>
    b13c:	add	r0, pc, r0
    b140:	bl	2210 <sf_bpf_error>
    b144:	ldr	r0, [pc, #276]	; b260 <sf_gen_scode+0x774>
    b148:	mov	r1, r9
    b14c:	add	r0, pc, r0
    b150:	bl	2210 <sf_bpf_error>
    b154:	ldr	r0, [pc, #264]	; b264 <sf_gen_scode+0x778>
    b158:	add	r0, pc, r0
    b15c:	bl	2210 <sf_bpf_error>
    b160:	ldr	r0, [pc, #256]	; b268 <sf_gen_scode+0x77c>
    b164:	mov	r1, r9
    b168:	add	r0, pc, r0
    b16c:	bl	2210 <sf_bpf_error>
    b170:	ldr	r0, [pc, #244]	; b26c <sf_gen_scode+0x780>
    b174:	mov	r1, r9
    b178:	add	r0, pc, r0
    b17c:	bl	2210 <sf_bpf_error>
    b180:	ldr	r0, [pc, #232]	; b270 <sf_gen_scode+0x784>
    b184:	mov	r1, r9
    b188:	add	r0, pc, r0
    b18c:	bl	2210 <sf_bpf_error>
    b190:	ldr	r0, [pc, #220]	; b274 <sf_gen_scode+0x788>
    b194:	mov	r1, r9
    b198:	add	r0, pc, r0
    b19c:	bl	2210 <sf_bpf_error>
    b1a0:	ldr	r0, [pc, #208]	; b278 <sf_gen_scode+0x78c>
    b1a4:	mov	r1, r9
    b1a8:	add	r0, pc, r0
    b1ac:	bl	2210 <sf_bpf_error>
    b1b0:	ldr	r0, [pc, #196]	; b27c <sf_gen_scode+0x790>
    b1b4:	mov	r1, r9
    b1b8:	add	r0, pc, r0
    b1bc:	bl	2210 <sf_bpf_error>
    b1c0:	ldr	r0, [pc, #184]	; b280 <sf_gen_scode+0x794>
    b1c4:	mov	r1, r9
    b1c8:	add	r0, pc, r0
    b1cc:	bl	2210 <sf_bpf_error>
    b1d0:	ldr	r0, [pc, #172]	; b284 <sf_gen_scode+0x798>
    b1d4:	mov	r1, r9
    b1d8:	add	r0, pc, r0
    b1dc:	bl	2210 <sf_bpf_error>
    b1e0:	ldr	r0, [pc, #160]	; b288 <sf_gen_scode+0x79c>
    b1e4:	mov	r1, r9
    b1e8:	add	r0, pc, r0
    b1ec:	bl	2210 <sf_bpf_error>
    b1f0:	ldr	r0, [pc, #148]	; b28c <sf_gen_scode+0x7a0>
    b1f4:	mov	r1, r9
    b1f8:	add	r0, pc, r0
    b1fc:	bl	2210 <sf_bpf_error>
    b200:	ldr	r0, [pc, #136]	; b290 <sf_gen_scode+0x7a4>
    b204:	mov	r1, r9
    b208:	add	r0, pc, r0
    b20c:	bl	2210 <sf_bpf_error>
    b210:	ldr	r0, [pc, #124]	; b294 <sf_gen_scode+0x7a8>
    b214:	add	r0, pc, r0
    b218:	bl	2210 <sf_bpf_error>
    b21c:	ldr	r2, [pc, #116]	; b298 <sf_gen_scode+0x7ac>
    b220:	add	r2, pc, r2
    b224:	b	aff4 <sf_gen_scode+0x508>
    b228:	bl	ebc <abort@plt>
    b22c:	.word	0x00026734
    b230:	.word	0x0000848c
    b234:	.word	0x0002664c
    b238:	.word	0x00009660
    b23c:	.word	0x00026564
    b240:	.word	0x00009450
    b244:	.word	0x00026390
    b248:	.word	0x00009248
    b24c:	.word	0x00009370
    b250:	.word	0x00009300
    b254:	.word	0x000092b0
    b258:	.word	0x00009250
    b25c:	.word	0x00009304
    b260:	.word	0x00009324
    b264:	.word	0x00008e50
    b268:	.word	0x000090f0
    b26c:	.word	0x00009148
    b270:	.word	0x00009118
    b274:	.word	0x00009224
    b278:	.word	0x000091ec
    b27c:	.word	0x000091a0
    b280:	.word	0x000090c0
    b284:	.word	0x00009098
    b288:	.word	0x00009204
    b28c:	.word	0x000090e4
    b290:	.word	0x0000921c
    b294:	.word	0x00008db0
    b298:	.word	0x00007d6c

0000b29c <sf_gen_atmtype_abbrev>:
    b29c:	sub	r0, r0, #22
    b2a0:	strd	r4, [sp, #-16]!
    b2a4:	str	r6, [sp, #8]
    b2a8:	str	lr, [sp, #12]
    b2ac:	cmp	r0, #9
    b2b0:	addls	pc, pc, r0, lsl #2
    b2b4:	b	b56c <sf_gen_atmtype_abbrev+0x2d0>
    b2b8:	b	b328 <sf_gen_atmtype_abbrev+0x8c>
    b2bc:	b	b37c <sf_gen_atmtype_abbrev+0xe0>
    b2c0:	b	b3b8 <sf_gen_atmtype_abbrev+0x11c>
    b2c4:	b	b3f4 <sf_gen_atmtype_abbrev+0x158>
    b2c8:	b	b430 <sf_gen_atmtype_abbrev+0x194>
    b2cc:	b	b46c <sf_gen_atmtype_abbrev+0x1d0>
    b2d0:	b	b56c <sf_gen_atmtype_abbrev+0x2d0>
    b2d4:	b	b56c <sf_gen_atmtype_abbrev+0x2d0>
    b2d8:	b	b4a8 <sf_gen_atmtype_abbrev+0x20c>
    b2dc:	b	b2e0 <sf_gen_atmtype_abbrev+0x44>
    b2e0:	ldr	r5, [pc, #648]	; b570 <sf_gen_atmtype_abbrev+0x2d4>
    b2e4:	add	r5, pc, r5
    b2e8:	ldr	r3, [r5, #904]	; 0x388
    b2ec:	cmp	r3, #0
    b2f0:	beq	b50c <sf_gen_atmtype_abbrev+0x270>
    b2f4:	mov	r3, #0
    b2f8:	mov	r2, #16
    b2fc:	mov	r1, #2
    b300:	mov	r0, #53	; 0x35
    b304:	bl	657c <sf_gen_atmfield_code>
    b308:	mov	r4, r0
    b30c:	mov	r3, #0
    b310:	str	r3, [r5, #908]	; 0x38c
    b314:	mov	r0, r4
    b318:	ldrd	r4, [sp]
    b31c:	ldr	r6, [sp, #8]
    b320:	add	sp, sp, #12
    b324:	pop	{pc}		; (ldr pc, [sp], #4)
    b328:	ldr	r3, [pc, #580]	; b574 <sf_gen_atmtype_abbrev+0x2d8>
    b32c:	add	r3, pc, r3
    b330:	ldr	r3, [r3, #904]	; 0x388
    b334:	cmp	r3, #0
    b338:	beq	b560 <sf_gen_atmtype_abbrev+0x2c4>
    b33c:	mov	r3, #0
    b340:	mov	r2, #16
    b344:	mov	r1, r3
    b348:	mov	r0, #51	; 0x33
    b34c:	bl	657c <sf_gen_atmfield_code>
    b350:	mov	r5, r0
    b354:	mov	r3, #0
    b358:	mov	r2, #16
    b35c:	mov	r1, #1
    b360:	mov	r0, #52	; 0x34
    b364:	bl	657c <sf_gen_atmfield_code>
    b368:	mov	r4, r0
    b36c:	mov	r1, r0
    b370:	mov	r0, r5
    b374:	bl	3a88 <sf_gen_and>
    b378:	b	b314 <sf_gen_atmtype_abbrev+0x78>
    b37c:	ldr	r3, [pc, #500]	; b578 <sf_gen_atmtype_abbrev+0x2dc>
    b380:	add	r3, pc, r3
    b384:	ldr	r3, [r3, #904]	; 0x388
    b388:	cmp	r3, #0
    b38c:	beq	b554 <sf_gen_atmtype_abbrev+0x2b8>
    b390:	mov	r3, #0
    b394:	mov	r2, #16
    b398:	mov	r1, r3
    b39c:	mov	r0, #51	; 0x33
    b3a0:	bl	657c <sf_gen_atmfield_code>
    b3a4:	mov	r5, r0
    b3a8:	mov	r3, #0
    b3ac:	mov	r2, #16
    b3b0:	mov	r1, #2
    b3b4:	b	b360 <sf_gen_atmtype_abbrev+0xc4>
    b3b8:	ldr	r3, [pc, #444]	; b57c <sf_gen_atmtype_abbrev+0x2e0>
    b3bc:	add	r3, pc, r3
    b3c0:	ldr	r3, [r3, #904]	; 0x388
    b3c4:	cmp	r3, #0
    b3c8:	beq	b548 <sf_gen_atmtype_abbrev+0x2ac>
    b3cc:	mov	r3, #0
    b3d0:	mov	r2, #16
    b3d4:	mov	r1, r3
    b3d8:	mov	r0, #51	; 0x33
    b3dc:	bl	657c <sf_gen_atmfield_code>
    b3e0:	mov	r5, r0
    b3e4:	mov	r3, #0
    b3e8:	mov	r2, #16
    b3ec:	mov	r1, #3
    b3f0:	b	b360 <sf_gen_atmtype_abbrev+0xc4>
    b3f4:	ldr	r3, [pc, #388]	; b580 <sf_gen_atmtype_abbrev+0x2e4>
    b3f8:	add	r3, pc, r3
    b3fc:	ldr	r3, [r3, #904]	; 0x388
    b400:	cmp	r3, #0
    b404:	beq	b53c <sf_gen_atmtype_abbrev+0x2a0>
    b408:	mov	r3, #0
    b40c:	mov	r2, #16
    b410:	mov	r1, r3
    b414:	mov	r0, #51	; 0x33
    b418:	bl	657c <sf_gen_atmfield_code>
    b41c:	mov	r5, r0
    b420:	mov	r3, #0
    b424:	mov	r2, #16
    b428:	mov	r1, #4
    b42c:	b	b360 <sf_gen_atmtype_abbrev+0xc4>
    b430:	ldr	r3, [pc, #332]	; b584 <sf_gen_atmtype_abbrev+0x2e8>
    b434:	add	r3, pc, r3
    b438:	ldr	r3, [r3, #904]	; 0x388
    b43c:	cmp	r3, #0
    b440:	beq	b530 <sf_gen_atmtype_abbrev+0x294>
    b444:	mov	r3, #0
    b448:	mov	r2, #16
    b44c:	mov	r1, r3
    b450:	mov	r0, #51	; 0x33
    b454:	bl	657c <sf_gen_atmfield_code>
    b458:	mov	r5, r0
    b45c:	mov	r3, #0
    b460:	mov	r2, #16
    b464:	mov	r1, #5
    b468:	b	b360 <sf_gen_atmtype_abbrev+0xc4>
    b46c:	ldr	r3, [pc, #276]	; b588 <sf_gen_atmtype_abbrev+0x2ec>
    b470:	add	r3, pc, r3
    b474:	ldr	r3, [r3, #904]	; 0x388
    b478:	cmp	r3, #0
    b47c:	beq	b524 <sf_gen_atmtype_abbrev+0x288>
    b480:	mov	r3, #0
    b484:	mov	r2, #16
    b488:	mov	r1, r3
    b48c:	mov	r0, #51	; 0x33
    b490:	bl	657c <sf_gen_atmfield_code>
    b494:	mov	r2, #16
    b498:	mov	r5, r0
    b49c:	mov	r1, r2
    b4a0:	mov	r3, #0
    b4a4:	b	b360 <sf_gen_atmtype_abbrev+0xc4>
    b4a8:	ldr	r5, [pc, #220]	; b58c <sf_gen_atmtype_abbrev+0x2f0>
    b4ac:	add	r5, pc, r5
    b4b0:	ldr	r3, [r5, #904]	; 0x388
    b4b4:	cmp	r3, #0
    b4b8:	beq	b518 <sf_gen_atmtype_abbrev+0x27c>
    b4bc:	mov	r3, #0
    b4c0:	mov	r2, #16
    b4c4:	mov	r1, #1
    b4c8:	mov	r0, #53	; 0x35
    b4cc:	bl	657c <sf_gen_atmfield_code>
    b4d0:	ldr	r3, [r5, #924]	; 0x39c
    b4d4:	mov	r1, #0
    b4d8:	mov	r2, #3
    b4dc:	mov	r4, r0
    b4e0:	mov	r0, #1
    b4e4:	str	r1, [r5, #872]	; 0x368
    b4e8:	str	r2, [r5, #880]	; 0x370
    b4ec:	str	r0, [r5, #908]	; 0x38c
    b4f0:	add	r1, r3, #2
    b4f4:	add	r2, r3, #14
    b4f8:	add	r3, r3, #16
    b4fc:	str	r3, [r5, #876]	; 0x36c
    b500:	str	r1, [r5, #900]	; 0x384
    b504:	str	r2, [r5, #952]	; 0x3b8
    b508:	b	b314 <sf_gen_atmtype_abbrev+0x78>
    b50c:	ldr	r0, [pc, #124]	; b590 <sf_gen_atmtype_abbrev+0x2f4>
    b510:	add	r0, pc, r0
    b514:	bl	2210 <sf_bpf_error>
    b518:	ldr	r0, [pc, #116]	; b594 <sf_gen_atmtype_abbrev+0x2f8>
    b51c:	add	r0, pc, r0
    b520:	bl	2210 <sf_bpf_error>
    b524:	ldr	r0, [pc, #108]	; b598 <sf_gen_atmtype_abbrev+0x2fc>
    b528:	add	r0, pc, r0
    b52c:	bl	2210 <sf_bpf_error>
    b530:	ldr	r0, [pc, #100]	; b59c <sf_gen_atmtype_abbrev+0x300>
    b534:	add	r0, pc, r0
    b538:	bl	2210 <sf_bpf_error>
    b53c:	ldr	r0, [pc, #92]	; b5a0 <sf_gen_atmtype_abbrev+0x304>
    b540:	add	r0, pc, r0
    b544:	bl	2210 <sf_bpf_error>
    b548:	ldr	r0, [pc, #84]	; b5a4 <sf_gen_atmtype_abbrev+0x308>
    b54c:	add	r0, pc, r0
    b550:	bl	2210 <sf_bpf_error>
    b554:	ldr	r0, [pc, #76]	; b5a8 <sf_gen_atmtype_abbrev+0x30c>
    b558:	add	r0, pc, r0
    b55c:	bl	2210 <sf_bpf_error>
    b560:	ldr	r0, [pc, #68]	; b5ac <sf_gen_atmtype_abbrev+0x310>
    b564:	add	r0, pc, r0
    b568:	bl	2210 <sf_bpf_error>
    b56c:	bl	ebc <abort@plt>
    b570:	.word	0x0002607c
    b574:	.word	0x00026034
    b578:	.word	0x00025fe0
    b57c:	.word	0x00025fa4
    b580:	.word	0x00025f68
    b584:	.word	0x00025f2c
    b588:	.word	0x00025ef0
    b58c:	.word	0x00025eb4
    b590:	.word	0x0000906c
    b594:	.word	0x0000903c
    b598:	.word	0x0000900c
    b59c:	.word	0x00008fe0
    b5a0:	.word	0x00008fb0
    b5a4:	.word	0x00008f80
    b5a8:	.word	0x00008f54
    b5ac:	.word	0x00008f24

0000b5b0 <sf_gen_mtp2type_abbrev>:
    b5b0:	cmp	r0, #23
    b5b4:	strd	r4, [sp, #-20]!	; 0xffffffec
    b5b8:	strd	r6, [sp, #8]
    b5bc:	str	lr, [sp, #16]
    b5c0:	sub	sp, sp, #20
    b5c4:	beq	b640 <sf_gen_mtp2type_abbrev+0x90>
    b5c8:	cmp	r0, #24
    b5cc:	bne	b634 <sf_gen_mtp2type_abbrev+0x84>
    b5d0:	ldr	r1, [pc, #352]	; b738 <sf_gen_mtp2type_abbrev+0x188>
    b5d4:	add	r1, pc, r1
    b5d8:	ldr	r2, [r1, #856]	; 0x358
    b5dc:	sub	r3, r2, #139	; 0x8b
    b5e0:	cmp	r2, #197	; 0xc5
    b5e4:	cmpne	r3, #1
    b5e8:	movhi	r3, #1
    b5ec:	movls	r3, #0
    b5f0:	bhi	b714 <sf_gen_mtp2type_abbrev+0x164>
    b5f4:	mov	ip, #2
    b5f8:	mov	r2, #32
    b5fc:	ldr	r1, [r1, #932]	; 0x3a4
    b600:	mov	r0, r3
    b604:	strd	r2, [sp]
    b608:	mov	r3, #63	; 0x3f
    b60c:	mov	r2, #16
    b610:	str	ip, [sp, #8]
    b614:	bl	2b74 <gen_ncmp>
    b618:	mov	r5, r0
    b61c:	mov	r0, r5
    b620:	add	sp, sp, #20
    b624:	ldrd	r4, [sp]
    b628:	ldrd	r6, [sp, #8]
    b62c:	add	sp, sp, #16
    b630:	pop	{pc}		; (ldr pc, [sp], #4)
    b634:	cmp	r0, #22
    b638:	beq	b6c4 <sf_gen_mtp2type_abbrev+0x114>
    b63c:	bl	ebc <abort@plt>
    b640:	ldr	r2, [pc, #244]	; b73c <sf_gen_mtp2type_abbrev+0x18c>
    b644:	add	r2, pc, r2
    b648:	ldr	r3, [r2, #856]	; 0x358
    b64c:	sub	r4, r3, #139	; 0x8b
    b650:	cmp	r3, #197	; 0xc5
    b654:	cmpne	r4, #1
    b658:	movhi	r4, #1
    b65c:	movls	r4, #0
    b660:	bhi	b720 <sf_gen_mtp2type_abbrev+0x170>
    b664:	ldr	r7, [r2, #932]	; 0x3a4
    b668:	mov	r6, #32
    b66c:	mov	r1, #2
    b670:	mov	r2, #1
    b674:	mov	r3, #63	; 0x3f
    b678:	mov	r0, r4
    b67c:	str	r6, [sp]
    b680:	str	r2, [sp, #4]
    b684:	mov	r2, #16
    b688:	str	r1, [sp, #8]
    b68c:	mov	r1, r7
    b690:	bl	2b74 <gen_ncmp>
    b694:	mov	r5, r0
    b698:	mov	r1, r7
    b69c:	str	r6, [sp]
    b6a0:	mov	r0, r4
    b6a4:	mov	r3, #63	; 0x3f
    b6a8:	str	r4, [sp, #4]
    b6ac:	mov	r2, #16
    b6b0:	str	r4, [sp, #8]
    b6b4:	bl	2b74 <gen_ncmp>
    b6b8:	mov	r1, r5
    b6bc:	bl	3a88 <sf_gen_and>
    b6c0:	b	b61c <sf_gen_mtp2type_abbrev+0x6c>
    b6c4:	ldr	r2, [pc, #116]	; b740 <sf_gen_mtp2type_abbrev+0x190>
    b6c8:	add	r2, pc, r2
    b6cc:	ldr	r3, [r2, #856]	; 0x358
    b6d0:	sub	ip, r3, #139	; 0x8b
    b6d4:	cmp	r3, #197	; 0xc5
    b6d8:	cmpne	ip, #1
    b6dc:	movhi	ip, #1
    b6e0:	movls	ip, #0
    b6e4:	bhi	b72c <sf_gen_mtp2type_abbrev+0x17c>
    b6e8:	mov	lr, #16
    b6ec:	mov	r0, ip
    b6f0:	ldr	r1, [r2, #932]	; 0x3a4
    b6f4:	mov	r3, #63	; 0x3f
    b6f8:	mov	r2, lr
    b6fc:	str	lr, [sp]
    b700:	str	ip, [sp, #4]
    b704:	str	ip, [sp, #8]
    b708:	bl	2b74 <gen_ncmp>
    b70c:	mov	r5, r0
    b710:	b	b61c <sf_gen_mtp2type_abbrev+0x6c>
    b714:	ldr	r0, [pc, #40]	; b744 <sf_gen_mtp2type_abbrev+0x194>
    b718:	add	r0, pc, r0
    b71c:	bl	2210 <sf_bpf_error>
    b720:	ldr	r0, [pc, #32]	; b748 <sf_gen_mtp2type_abbrev+0x198>
    b724:	add	r0, pc, r0
    b728:	bl	2210 <sf_bpf_error>
    b72c:	ldr	r0, [pc, #24]	; b74c <sf_gen_mtp2type_abbrev+0x19c>
    b730:	add	r0, pc, r0
    b734:	bl	2210 <sf_bpf_error>
    b738:	.word	0x00025d8c
    b73c:	.word	0x00025d1c
    b740:	.word	0x00025c98
    b744:	.word	0x00008ec4
    b748:	.word	0x00008e98
    b74c:	.word	0x00008e6c

0000b750 <sf_gen_mtp3field_code>:
    b750:	sub	r0, r0, #1
    b754:	mov	ip, r1
    b758:	str	r4, [sp, #-8]!
    b75c:	str	lr, [sp, #4]
    b760:	sub	sp, sp, #16
    b764:	mov	lr, r3
    b768:	cmp	r0, #3
    b76c:	addls	pc, pc, r0, lsl #2
    b770:	b	b934 <sf_gen_mtp3field_code+0x1e4>
    b774:	b	b880 <sf_gen_mtp3field_code+0x130>
    b778:	b	b820 <sf_gen_mtp3field_code+0xd0>
    b77c:	b	b7cc <sf_gen_mtp3field_code+0x7c>
    b780:	b	b784 <sf_gen_mtp3field_code+0x34>
    b784:	ldr	r3, [pc, #428]	; b938 <sf_gen_mtp3field_code+0x1e8>
    b788:	add	r3, pc, r3
    b78c:	ldr	r1, [r3, #948]	; 0x3b4
    b790:	cmn	r1, #1
    b794:	beq	b8c4 <sf_gen_mtp3field_code+0x174>
    b798:	cmp	ip, #15
    b79c:	bhi	b8d0 <sf_gen_mtp3field_code+0x180>
    b7a0:	lsl	ip, ip, #4
    b7a4:	mov	r3, #240	; 0xf0
    b7a8:	mov	r0, #0
    b7ac:	stm	sp, {r2, lr}
    b7b0:	mov	r2, #16
    b7b4:	str	ip, [sp, #8]
    b7b8:	bl	2b74 <gen_ncmp>
    b7bc:	add	sp, sp, #16
    b7c0:	ldr	r4, [sp]
    b7c4:	add	sp, sp, #4
    b7c8:	pop	{pc}		; (ldr pc, [sp], #4)
    b7cc:	ldr	r3, [pc, #360]	; b93c <sf_gen_mtp3field_code+0x1ec>
    b7d0:	add	r3, pc, r3
    b7d4:	ldr	r1, [r3, #944]	; 0x3b0
    b7d8:	cmn	r1, #1
    b7dc:	beq	b8e0 <sf_gen_mtp3field_code+0x190>
    b7e0:	cmp	ip, #16384	; 0x4000
    b7e4:	bcs	b8ec <sf_gen_mtp3field_code+0x19c>
    b7e8:	lsl	r0, ip, #8
    b7ec:	stm	sp, {r2, lr}
    b7f0:	mov	r2, #0
    b7f4:	mov	r3, r2
    b7f8:	and	r0, r0, #4128768	; 0x3f0000
    b7fc:	movt	r3, #65343	; 0xff3f
    b800:	add	ip, r0, ip, lsl #24
    b804:	mov	r0, r2
    b808:	str	ip, [sp, #8]
    b80c:	bl	2b74 <gen_ncmp>
    b810:	add	sp, sp, #16
    b814:	ldr	r4, [sp]
    b818:	add	sp, sp, #4
    b81c:	pop	{pc}		; (ldr pc, [sp], #4)
    b820:	ldr	r3, [pc, #280]	; b940 <sf_gen_mtp3field_code+0x1f0>
    b824:	add	r3, pc, r3
    b828:	ldr	r1, [r3, #940]	; 0x3ac
    b82c:	cmn	r1, #1
    b830:	beq	b8fc <sf_gen_mtp3field_code+0x1ac>
    b834:	cmp	ip, #16384	; 0x4000
    b838:	bcs	b908 <sf_gen_mtp3field_code+0x1b8>
    b83c:	lsl	r3, ip, #6
    b840:	stm	sp, {r2, lr}
    b844:	mov	r2, #0
    b848:	lsl	r4, ip, #22
    b84c:	mov	r0, r2
    b850:	and	r3, r3, #65280	; 0xff00
    b854:	orr	ip, r3, ip, lsr #10
    b858:	and	lr, r4, #12582912	; 0xc00000
    b85c:	movw	r3, #65295	; 0xff0f
    b860:	movt	r3, #192	; 0xc0
    b864:	add	ip, ip, lr
    b868:	str	ip, [sp, #8]
    b86c:	bl	2b74 <gen_ncmp>
    b870:	add	sp, sp, #16
    b874:	ldr	r4, [sp]
    b878:	add	sp, sp, #4
    b87c:	pop	{pc}		; (ldr pc, [sp], #4)
    b880:	ldr	r3, [pc, #188]	; b944 <sf_gen_mtp3field_code+0x1f4>
    b884:	add	r3, pc, r3
    b888:	ldr	r1, [r3, #936]	; 0x3a8
    b88c:	cmn	r1, #1
    b890:	beq	b918 <sf_gen_mtp3field_code+0x1c8>
    b894:	cmp	ip, #255	; 0xff
    b898:	bhi	b924 <sf_gen_mtp3field_code+0x1d4>
    b89c:	mvn	r3, #0
    b8a0:	mov	r0, #0
    b8a4:	stm	sp, {r2, lr}
    b8a8:	mov	r2, #16
    b8ac:	str	ip, [sp, #8]
    b8b0:	bl	2b74 <gen_ncmp>
    b8b4:	add	sp, sp, #16
    b8b8:	ldr	r4, [sp]
    b8bc:	add	sp, sp, #4
    b8c0:	pop	{pc}		; (ldr pc, [sp], #4)
    b8c4:	ldr	r0, [pc, #124]	; b948 <sf_gen_mtp3field_code+0x1f8>
    b8c8:	add	r0, pc, r0
    b8cc:	bl	2210 <sf_bpf_error>
    b8d0:	ldr	r0, [pc, #116]	; b94c <sf_gen_mtp3field_code+0x1fc>
    b8d4:	mov	r1, ip
    b8d8:	add	r0, pc, r0
    b8dc:	bl	2210 <sf_bpf_error>
    b8e0:	ldr	r0, [pc, #104]	; b950 <sf_gen_mtp3field_code+0x200>
    b8e4:	add	r0, pc, r0
    b8e8:	bl	2210 <sf_bpf_error>
    b8ec:	ldr	r0, [pc, #96]	; b954 <sf_gen_mtp3field_code+0x204>
    b8f0:	mov	r1, ip
    b8f4:	add	r0, pc, r0
    b8f8:	bl	2210 <sf_bpf_error>
    b8fc:	ldr	r0, [pc, #84]	; b958 <sf_gen_mtp3field_code+0x208>
    b900:	add	r0, pc, r0
    b904:	bl	2210 <sf_bpf_error>
    b908:	ldr	r0, [pc, #76]	; b95c <sf_gen_mtp3field_code+0x20c>
    b90c:	mov	r1, ip
    b910:	add	r0, pc, r0
    b914:	bl	2210 <sf_bpf_error>
    b918:	ldr	r0, [pc, #64]	; b960 <sf_gen_mtp3field_code+0x210>
    b91c:	add	r0, pc, r0
    b920:	bl	2210 <sf_bpf_error>
    b924:	ldr	r0, [pc, #56]	; b964 <sf_gen_mtp3field_code+0x214>
    b928:	mov	r1, ip
    b92c:	add	r0, pc, r0
    b930:	bl	2210 <sf_bpf_error>
    b934:	bl	ebc <abort@plt>
    b938:	.word	0x00025bd8
    b93c:	.word	0x00025b90
    b940:	.word	0x00025b3c
    b944:	.word	0x00025adc
    b948:	.word	0x00008e00
    b94c:	.word	0x00008e0c
    b950:	.word	0x00008da0
    b954:	.word	0x00008dac
    b958:	.word	0x00008d40
    b95c:	.word	0x00008d4c
    b960:	.word	0x00008ce0
    b964:	.word	0x00008cec

0000b968 <sf_gen_atmmulti_abbrev>:
    b968:	cmp	r0, #29
    b96c:	strd	r4, [sp, #-16]!
    b970:	str	r6, [sp, #8]
    b974:	str	lr, [sp, #12]
    b978:	beq	bbc8 <sf_gen_atmmulti_abbrev+0x260>
    b97c:	ble	ba5c <sf_gen_atmmulti_abbrev+0xf4>
    b980:	cmp	r0, #70	; 0x46
    b984:	bne	bad4 <sf_gen_atmmulti_abbrev+0x16c>
    b988:	ldr	r3, [pc, #604]	; bbec <sf_gen_atmmulti_abbrev+0x284>
    b98c:	add	r3, pc, r3
    b990:	ldr	r3, [r3, #904]	; 0x388
    b994:	cmp	r3, #0
    b998:	beq	bbbc <sf_gen_atmmulti_abbrev+0x254>
    b99c:	mov	r3, #0
    b9a0:	mov	r2, #16
    b9a4:	mov	r1, #5
    b9a8:	mov	r0, #54	; 0x36
    b9ac:	bl	657c <sf_gen_atmfield_code>
    b9b0:	mov	r5, r0
    b9b4:	mov	r3, #0
    b9b8:	mov	r2, #16
    b9bc:	mov	r1, #2
    b9c0:	mov	r0, #54	; 0x36
    b9c4:	bl	657c <sf_gen_atmfield_code>
    b9c8:	mov	r4, r0
    b9cc:	mov	r1, r0
    b9d0:	mov	r0, r5
    b9d4:	bl	4884 <sf_gen_or>
    b9d8:	mov	r3, #0
    b9dc:	mov	r2, #16
    b9e0:	mov	r1, #7
    b9e4:	mov	r0, #54	; 0x36
    b9e8:	bl	657c <sf_gen_atmfield_code>
    b9ec:	mov	r1, r4
    b9f0:	bl	4884 <sf_gen_or>
    b9f4:	mov	r3, #0
    b9f8:	mov	r2, #16
    b9fc:	mov	r1, #15
    ba00:	mov	r0, #54	; 0x36
    ba04:	bl	657c <sf_gen_atmfield_code>
    ba08:	mov	r1, r4
    ba0c:	bl	4884 <sf_gen_or>
    ba10:	mov	r3, #0
    ba14:	mov	r2, #16
    ba18:	mov	r1, #77	; 0x4d
    ba1c:	mov	r0, #54	; 0x36
    ba20:	bl	657c <sf_gen_atmfield_code>
    ba24:	mov	r1, r4
    ba28:	bl	4884 <sf_gen_or>
    ba2c:	mov	r3, #0
    ba30:	mov	r2, #16
    ba34:	mov	r1, #90	; 0x5a
    ba38:	mov	r0, #54	; 0x36
    ba3c:	bl	657c <sf_gen_atmfield_code>
    ba40:	mov	r1, r4
    ba44:	bl	4884 <sf_gen_or>
    ba48:	mov	r0, #26
    ba4c:	bl	b29c <sf_gen_atmtype_abbrev>
    ba50:	mov	r1, r4
    ba54:	bl	3a88 <sf_gen_and>
    ba58:	b	bb90 <sf_gen_atmmulti_abbrev+0x228>
    ba5c:	cmp	r0, #28
    ba60:	bne	bbe8 <sf_gen_atmmulti_abbrev+0x280>
    ba64:	ldr	r3, [pc, #388]	; bbf0 <sf_gen_atmmulti_abbrev+0x288>
    ba68:	add	r3, pc, r3
    ba6c:	ldr	r3, [r3, #904]	; 0x388
    ba70:	cmp	r3, #0
    ba74:	beq	bbb0 <sf_gen_atmmulti_abbrev+0x248>
    ba78:	mov	r3, #0
    ba7c:	mov	r2, #16
    ba80:	mov	r1, #3
    ba84:	mov	r0, #52	; 0x34
    ba88:	bl	657c <sf_gen_atmfield_code>
    ba8c:	mov	r5, r0
    ba90:	mov	r3, #0
    ba94:	mov	r2, #16
    ba98:	mov	r1, #4
    ba9c:	mov	r0, #52	; 0x34
    baa0:	bl	657c <sf_gen_atmfield_code>
    baa4:	mov	r4, r0
    baa8:	mov	r1, r0
    baac:	mov	r0, r5
    bab0:	bl	4884 <sf_gen_or>
    bab4:	mov	r3, #0
    bab8:	mov	r2, #16
    babc:	mov	r1, r3
    bac0:	mov	r0, #51	; 0x33
    bac4:	bl	657c <sf_gen_atmfield_code>
    bac8:	mov	r1, r4
    bacc:	bl	3a88 <sf_gen_and>
    bad0:	b	bb90 <sf_gen_atmmulti_abbrev+0x228>
    bad4:	cmp	r0, #71	; 0x47
    bad8:	bne	bbe8 <sf_gen_atmmulti_abbrev+0x280>
    badc:	ldr	r3, [pc, #272]	; bbf4 <sf_gen_atmmulti_abbrev+0x28c>
    bae0:	add	r3, pc, r3
    bae4:	ldr	r3, [r3, #904]	; 0x388
    bae8:	cmp	r3, #0
    baec:	beq	bba4 <sf_gen_atmmulti_abbrev+0x23c>
    baf0:	mov	r3, #0
    baf4:	mov	r2, #16
    baf8:	mov	r1, #5
    bafc:	mov	r0, #54	; 0x36
    bb00:	bl	657c <sf_gen_atmfield_code>
    bb04:	mov	r5, r0
    bb08:	mov	r3, #0
    bb0c:	mov	r2, #16
    bb10:	mov	r1, #2
    bb14:	mov	r0, #54	; 0x36
    bb18:	bl	657c <sf_gen_atmfield_code>
    bb1c:	mov	r4, r0
    bb20:	mov	r1, r0
    bb24:	mov	r0, r5
    bb28:	bl	4884 <sf_gen_or>
    bb2c:	mov	r3, #0
    bb30:	mov	r2, #16
    bb34:	mov	r1, #7
    bb38:	mov	r0, #54	; 0x36
    bb3c:	bl	657c <sf_gen_atmfield_code>
    bb40:	mov	r1, r4
    bb44:	bl	4884 <sf_gen_or>
    bb48:	mov	r3, #0
    bb4c:	mov	r2, #16
    bb50:	mov	r1, #77	; 0x4d
    bb54:	mov	r0, #54	; 0x36
    bb58:	bl	657c <sf_gen_atmfield_code>
    bb5c:	mov	r1, r4
    bb60:	bl	4884 <sf_gen_or>
    bb64:	mov	r3, #0
    bb68:	mov	r2, #16
    bb6c:	mov	r1, #90	; 0x5a
    bb70:	mov	r0, #54	; 0x36
    bb74:	bl	657c <sf_gen_atmfield_code>
    bb78:	mov	r1, r4
    bb7c:	bl	4884 <sf_gen_or>
    bb80:	mov	r0, #22
    bb84:	bl	b29c <sf_gen_atmtype_abbrev>
    bb88:	mov	r1, r4
    bb8c:	bl	3a88 <sf_gen_and>
    bb90:	mov	r0, r4
    bb94:	ldrd	r4, [sp]
    bb98:	ldr	r6, [sp, #8]
    bb9c:	add	sp, sp, #12
    bba0:	pop	{pc}		; (ldr pc, [sp], #4)
    bba4:	ldr	r0, [pc, #76]	; bbf8 <sf_gen_atmmulti_abbrev+0x290>
    bba8:	add	r0, pc, r0
    bbac:	bl	2210 <sf_bpf_error>
    bbb0:	ldr	r0, [pc, #68]	; bbfc <sf_gen_atmmulti_abbrev+0x294>
    bbb4:	add	r0, pc, r0
    bbb8:	bl	2210 <sf_bpf_error>
    bbbc:	ldr	r0, [pc, #60]	; bc00 <sf_gen_atmmulti_abbrev+0x298>
    bbc0:	add	r0, pc, r0
    bbc4:	bl	2210 <sf_bpf_error>
    bbc8:	ldr	r3, [pc, #52]	; bc04 <sf_gen_atmmulti_abbrev+0x29c>
    bbcc:	add	r3, pc, r3
    bbd0:	ldr	r3, [r3, #904]	; 0x388
    bbd4:	cmp	r3, #0
    bbd8:	bne	ba78 <sf_gen_atmmulti_abbrev+0x110>
    bbdc:	ldr	r0, [pc, #36]	; bc08 <sf_gen_atmmulti_abbrev+0x2a0>
    bbe0:	add	r0, pc, r0
    bbe4:	bl	2210 <sf_bpf_error>
    bbe8:	bl	ebc <abort@plt>
    bbec:	.word	0x000259d4
    bbf0:	.word	0x000258f8
    bbf4:	.word	0x00025880
    bbf8:	.word	0x00008bd0
    bbfc:	.word	0x00008b58
    bc00:	.word	0x00008b90
    bc04:	.word	0x00025794
    bc08:	.word	0x00008b4c

0000bc0c <pcap_nametoaddr>:
    bc0c:	str	r4, [sp, #-8]!
    bc10:	str	lr, [sp, #4]
    bc14:	bl	ea4 <gethostbyname@plt>
    bc18:	cmp	r0, #0
    bc1c:	beq	bc4c <pcap_nametoaddr+0x40>
    bc20:	ldr	r1, [r0, #16]
    bc24:	ldr	r3, [r1]
    bc28:	cmp	r3, #0
    bc2c:	beq	bc58 <pcap_nametoaddr+0x4c>
    bc30:	ldr	r2, [r3]
    bc34:	rev	r2, r2
    bc38:	str	r2, [r3]
    bc3c:	ldr	r3, [r1, #4]!
    bc40:	cmp	r3, #0
    bc44:	bne	bc30 <pcap_nametoaddr+0x24>
    bc48:	ldr	r0, [r0, #16]
    bc4c:	ldr	r4, [sp]
    bc50:	add	sp, sp, #4
    bc54:	pop	{pc}		; (ldr pc, [sp], #4)
    bc58:	mov	r0, r1
    bc5c:	b	bc4c <pcap_nametoaddr+0x40>

0000bc60 <pcap_nametoaddrinfo>:
    bc60:	mov	r3, #1
    bc64:	mov	r1, #6
    bc68:	strd	r4, [sp, #-12]!
    bc6c:	str	lr, [sp, #8]
    bc70:	sub	sp, sp, #44	; 0x2c
    bc74:	mov	r4, #0
    bc78:	mov	r5, #0
    bc7c:	add	ip, sp, #8
    bc80:	mov	r2, ip
    bc84:	strd	r4, [sp, #8]
    bc88:	str	r3, [sp, #16]
    bc8c:	add	r3, sp, #4
    bc90:	str	r1, [sp, #20]
    bc94:	mov	r1, #0
    bc98:	strd	r4, [sp, #24]
    bc9c:	strd	r4, [sp, #32]
    bca0:	bl	e8c <getaddrinfo@plt>
    bca4:	cmp	r0, #0
    bca8:	ldreq	r0, [sp, #4]
    bcac:	movne	r0, #0
    bcb0:	add	sp, sp, #44	; 0x2c
    bcb4:	ldrd	r4, [sp]
    bcb8:	add	sp, sp, #8
    bcbc:	pop	{pc}		; (ldr pc, [sp], #4)

0000bcc0 <pcap_nametonetaddr>:
    bcc0:	str	r4, [sp, #-8]!
    bcc4:	str	lr, [sp, #4]
    bcc8:	bl	d54 <getnetbyname@plt>
    bccc:	cmp	r0, #0
    bcd0:	ldr	r4, [sp]
    bcd4:	add	sp, sp, #4
    bcd8:	ldrne	r0, [r0, #12]
    bcdc:	pop	{pc}		; (ldr pc, [sp], #4)

0000bce0 <pcap_nametoport>:
    bce0:	strd	r4, [sp, #-24]!	; 0xffffffe8
    bce4:	mov	r5, r1
    bce8:	ldr	r1, [pc, #216]	; bdc8 <pcap_nametoport+0xe8>
    bcec:	strd	r6, [sp, #8]
    bcf0:	mov	r6, r2
    bcf4:	mov	r7, r0
    bcf8:	str	r8, [sp, #16]
    bcfc:	str	lr, [sp, #20]
    bd00:	add	r1, pc, r1
    bd04:	bl	e20 <getservbyname@plt>
    bd08:	cmp	r0, #0
    bd0c:	beq	bd80 <pcap_nametoport+0xa0>
    bd10:	ldr	r1, [pc, #180]	; bdcc <pcap_nametoport+0xec>
    bd14:	ldr	r4, [r0, #8]
    bd18:	mov	r0, r7
    bd1c:	add	r1, pc, r1
    bd20:	bl	e20 <getservbyname@plt>
    bd24:	rev16	r4, r4
    bd28:	cmp	r0, #0
    bd2c:	uxth	r4, r4
    bd30:	bne	bd58 <pcap_nametoport+0x78>
    bd34:	mov	r3, #6
    bd38:	mov	r0, #1
    bd3c:	str	r4, [r5]
    bd40:	str	r3, [r6]
    bd44:	ldrd	r4, [sp]
    bd48:	ldrd	r6, [sp, #8]
    bd4c:	ldr	r8, [sp, #16]
    bd50:	add	sp, sp, #20
    bd54:	pop	{pc}		; (ldr pc, [sp], #4)
    bd58:	ldr	r3, [r0, #8]
    bd5c:	str	r4, [r5]
    bd60:	rev16	r3, r3
    bd64:	uxth	r3, r3
    bd68:	cmp	r4, r3
    bd6c:	beq	bdb8 <pcap_nametoport+0xd8>
    bd70:	mov	r3, #6
    bd74:	mov	r0, #1
    bd78:	str	r3, [r6]
    bd7c:	b	bd44 <pcap_nametoport+0x64>
    bd80:	ldr	r1, [pc, #72]	; bdd0 <pcap_nametoport+0xf0>
    bd84:	mov	r0, r7
    bd88:	add	r1, pc, r1
    bd8c:	bl	e20 <getservbyname@plt>
    bd90:	cmp	r0, #0
    bd94:	beq	bd44 <pcap_nametoport+0x64>
    bd98:	ldr	r3, [r0, #8]
    bd9c:	mov	r2, #17
    bda0:	mov	r0, #1
    bda4:	rev16	r3, r3
    bda8:	uxth	r3, r3
    bdac:	str	r3, [r5]
    bdb0:	str	r2, [r6]
    bdb4:	b	bd44 <pcap_nametoport+0x64>
    bdb8:	mvn	r3, #0
    bdbc:	mov	r0, #1
    bdc0:	str	r3, [r6]
    bdc4:	b	bd44 <pcap_nametoport+0x64>
    bdc8:	.word	0x00008aa0
    bdcc:	.word	0x00008a88
    bdd0:	.word	0x00008a1c

0000bdd4 <pcap_nametoportrange>:
    bdd4:	strd	r4, [sp, #-28]!	; 0xffffffe4
    bdd8:	mov	r4, r3
    bddc:	mov	r5, r0
    bde0:	strd	r6, [sp, #8]
    bde4:	mov	r6, r1
    bde8:	mov	r7, r2
    bdec:	ldr	r1, [pc, #240]	; bee4 <pcap_nametoportrange+0x110>
    bdf0:	strd	r8, [sp, #16]
    bdf4:	str	lr, [sp, #24]
    bdf8:	sub	sp, sp, #12
    bdfc:	mov	r2, sp
    be00:	add	r3, sp, #4
    be04:	add	r1, pc, r1
    be08:	bl	e5c <sscanf@plt>
    be0c:	cmp	r0, #2
    be10:	bne	be48 <pcap_nametoportrange+0x74>
    be14:	ldm	sp, {r1, r2}
    be18:	mvn	r3, #0
    be1c:	mov	r5, #1
    be20:	str	r1, [r6]
    be24:	str	r2, [r7]
    be28:	str	r3, [r4]
    be2c:	mov	r0, r5
    be30:	add	sp, sp, #12
    be34:	ldrd	r4, [sp]
    be38:	ldrd	r6, [sp, #8]
    be3c:	ldrd	r8, [sp, #16]
    be40:	add	sp, sp, #24
    be44:	pop	{pc}		; (ldr pc, [sp], #4)
    be48:	mov	r0, r5
    be4c:	bl	d78 <strdup@plt>
    be50:	subs	r8, r0, #0
    be54:	moveq	r5, r8
    be58:	beq	be2c <pcap_nametoportrange+0x58>
    be5c:	mov	r1, #45	; 0x2d
    be60:	bl	dfc <strchr@plt>
    be64:	subs	r9, r0, #0
    be68:	beq	bed4 <pcap_nametoportrange+0x100>
    be6c:	mov	r3, #0
    be70:	mov	r1, r6
    be74:	mov	r2, r4
    be78:	mov	r0, r8
    be7c:	strb	r3, [r9]
    be80:	bl	bce0 <pcap_nametoport>
    be84:	subs	r5, r0, #0
    be88:	beq	bec8 <pcap_nametoportrange+0xf4>
    be8c:	mov	r1, r7
    be90:	add	r0, r9, #1
    be94:	ldr	r6, [r4]
    be98:	mov	r2, r4
    be9c:	bl	bce0 <pcap_nametoport>
    bea0:	subs	r5, r0, #0
    bea4:	beq	bec8 <pcap_nametoportrange+0xf4>
    bea8:	ldr	r3, [r4]
    beac:	cmp	r3, r6
    beb0:	moveq	r5, #1
    beb4:	beq	be2c <pcap_nametoportrange+0x58>
    beb8:	mvn	r3, #0
    bebc:	mov	r5, #1
    bec0:	str	r3, [r4]
    bec4:	b	be2c <pcap_nametoportrange+0x58>
    bec8:	mov	r0, r8
    becc:	bl	d48 <free@plt>
    bed0:	b	be2c <pcap_nametoportrange+0x58>
    bed4:	mov	r0, r8
    bed8:	mov	r5, r9
    bedc:	bl	d48 <free@plt>
    bee0:	b	be2c <pcap_nametoportrange+0x58>
    bee4:	.word	0x000089a4

0000bee8 <pcap_nametoproto>:
    bee8:	str	r4, [sp, #-8]!
    beec:	str	lr, [sp, #4]
    bef0:	bl	d24 <getprotobyname@plt>
    bef4:	cmp	r0, #0
    bef8:	ldr	r4, [sp]
    befc:	add	sp, sp, #4
    bf00:	mvneq	r0, #0
    bf04:	ldrne	r0, [r0, #8]
    bf08:	pop	{pc}		; (ldr pc, [sp], #4)

0000bf0c <pcap_nametoeproto>:
    bf0c:	strd	r4, [sp, #-16]!
    bf10:	mov	r5, r0
    bf14:	ldr	r4, [pc, #92]	; bf78 <pcap_nametoeproto+0x6c>
    bf18:	str	r6, [sp, #8]
    bf1c:	str	lr, [sp, #12]
    bf20:	add	r4, pc, r4
    bf24:	ldr	r0, [r4]
    bf28:	cmp	r0, #0
    bf2c:	bne	bf40 <pcap_nametoeproto+0x34>
    bf30:	b	bf64 <pcap_nametoeproto+0x58>
    bf34:	ldr	r0, [r4, #8]!
    bf38:	cmp	r0, #0
    bf3c:	beq	bf64 <pcap_nametoeproto+0x58>
    bf40:	mov	r1, r5
    bf44:	bl	cf4 <strcmp@plt>
    bf48:	cmp	r0, #0
    bf4c:	bne	bf34 <pcap_nametoeproto+0x28>
    bf50:	ldrh	r0, [r4, #4]
    bf54:	ldrd	r4, [sp]
    bf58:	ldr	r6, [sp, #8]
    bf5c:	add	sp, sp, #12
    bf60:	pop	{pc}		; (ldr pc, [sp], #4)
    bf64:	ldrd	r4, [sp]
    bf68:	mvn	r0, #0
    bf6c:	ldr	r6, [sp, #8]
    bf70:	add	sp, sp, #12
    bf74:	pop	{pc}		; (ldr pc, [sp], #4)
    bf78:	.word	0x00025360

0000bf7c <pcap_nametollc>:
    bf7c:	strd	r4, [sp, #-16]!
    bf80:	mov	r5, r0
    bf84:	ldr	r4, [pc, #96]	; bfec <pcap_nametollc+0x70>
    bf88:	str	r6, [sp, #8]
    bf8c:	str	lr, [sp, #12]
    bf90:	add	r4, pc, r4
    bf94:	ldr	r0, [r4, #168]	; 0xa8
    bf98:	cmp	r0, #0
    bf9c:	beq	bfd8 <pcap_nametollc+0x5c>
    bfa0:	add	r4, r4, #168	; 0xa8
    bfa4:	b	bfb4 <pcap_nametollc+0x38>
    bfa8:	ldr	r0, [r4, #8]!
    bfac:	cmp	r0, #0
    bfb0:	beq	bfd8 <pcap_nametollc+0x5c>
    bfb4:	mov	r1, r5
    bfb8:	bl	cf4 <strcmp@plt>
    bfbc:	cmp	r0, #0
    bfc0:	bne	bfa8 <pcap_nametollc+0x2c>
    bfc4:	ldrh	r0, [r4, #4]
    bfc8:	ldrd	r4, [sp]
    bfcc:	ldr	r6, [sp, #8]
    bfd0:	add	sp, sp, #12
    bfd4:	pop	{pc}		; (ldr pc, [sp], #4)
    bfd8:	ldrd	r4, [sp]
    bfdc:	mvn	r0, #0
    bfe0:	ldr	r6, [sp, #8]
    bfe4:	add	sp, sp, #12
    bfe8:	pop	{pc}		; (ldr pc, [sp], #4)
    bfec:	.word	0x000252f0

0000bff0 <__pcap_atoin>:
    bff0:	mov	r3, #0
    bff4:	push	{lr}		; (str lr, [sp, #-4]!)
    bff8:	mov	ip, r3
    bffc:	mov	lr, r3
    c000:	str	r3, [r1]
    c004:	ldrb	r2, [r0]
    c008:	subs	r3, r2, #46	; 0x2e
    c00c:	movne	r3, #1
    c010:	cmp	r2, #0
    c014:	moveq	r3, #0
    c018:	cmp	r3, #0
    c01c:	beq	c044 <__pcap_atoin+0x54>
    c020:	mov	r3, #0
    c024:	add	r3, r3, r3, lsl #2
    c028:	add	r3, r2, r3, lsl #1
    c02c:	ldrb	r2, [r0, #1]!
    c030:	sub	r3, r3, #48	; 0x30
    c034:	cmp	r2, #0
    c038:	cmpne	r2, #46	; 0x2e
    c03c:	bne	c024 <__pcap_atoin+0x34>
    c040:	uxtb	r3, r3
    c044:	orr	ip, r3, ip, lsl #8
    c048:	add	lr, lr, #8
    c04c:	str	ip, [r1]
    c050:	ldrb	r3, [r0]
    c054:	cmp	r3, #0
    c058:	beq	c064 <__pcap_atoin+0x74>
    c05c:	add	r0, r0, #1
    c060:	b	c004 <__pcap_atoin+0x14>
    c064:	mov	r0, lr
    c068:	pop	{pc}		; (ldr pc, [sp], #4)

0000c06c <__pcap_atodn>:
    c06c:	strd	r4, [sp, #-12]!
    c070:	mov	r4, r1
    c074:	mov	r5, r0
    c078:	ldr	r1, [pc, #88]	; c0d8 <__pcap_atodn+0x6c>
    c07c:	str	lr, [sp, #8]
    c080:	sub	sp, sp, #12
    c084:	mov	r3, sp
    c088:	add	r2, sp, #4
    c08c:	add	r1, pc, r1
    c090:	bl	e5c <sscanf@plt>
    c094:	cmp	r0, #2
    c098:	bne	c0c8 <__pcap_atodn+0x5c>
    c09c:	ldrd	r2, [sp]
    c0a0:	mov	r0, #32
    c0a4:	lsl	r3, r3, #10
    c0a8:	ubfx	r2, r2, #0, #10
    c0ac:	uxth	r3, r3
    c0b0:	orr	r3, r3, r2
    c0b4:	str	r3, [r4]
    c0b8:	add	sp, sp, #12
    c0bc:	ldrd	r4, [sp]
    c0c0:	add	sp, sp, #8
    c0c4:	pop	{pc}		; (ldr pc, [sp], #4)
    c0c8:	ldr	r0, [pc, #12]	; c0dc <__pcap_atodn+0x70>
    c0cc:	mov	r1, r5
    c0d0:	add	r0, pc, r0
    c0d4:	bl	2210 <sf_bpf_error>
    c0d8:	.word	0x00008724
    c0dc:	.word	0x000086e8

0000c0e0 <pcap_ether_aton>:
    c0e0:	strd	r4, [sp, #-16]!
    c0e4:	mov	r5, r0
    c0e8:	mov	r0, #6
    c0ec:	str	r6, [sp, #8]
    c0f0:	str	lr, [sp, #12]
    c0f4:	bl	dc0 <malloc@plt>
    c0f8:	subs	r6, r0, #0
    c0fc:	beq	c1a8 <pcap_ether_aton+0xc8>
    c100:	ldrb	r4, [r5]
    c104:	cmp	r4, #0
    c108:	beq	c1a8 <pcap_ether_aton+0xc8>
    c10c:	bl	dd8 <__ctype_b_loc@plt>
    c110:	ldr	lr, [r0]
    c114:	mov	ip, r6
    c118:	sub	r3, r4, #45	; 0x2d
    c11c:	add	r2, r5, #1
    c120:	cmp	r4, #58	; 0x3a
    c124:	cmpne	r3, #1
    c128:	movhi	r3, r2
    c12c:	movhi	r2, r5
    c130:	movhi	r5, r3
    c134:	ldrb	r3, [r2]
    c138:	addls	r5, r5, #2
    c13c:	lsl	r1, r3, #1
    c140:	ldrh	r1, [lr, r1]
    c144:	tst	r1, #2048	; 0x800
    c148:	subne	r3, r3, #48	; 0x30
    c14c:	bne	c15c <pcap_ether_aton+0x7c>
    c150:	tst	r1, #512	; 0x200
    c154:	subne	r3, r3, #87	; 0x57
    c158:	subeq	r3, r3, #55	; 0x37
    c15c:	ldrb	r4, [r2, #1]
    c160:	mov	r1, r3
    c164:	lsl	r0, r4, #1
    c168:	ldrh	r0, [lr, r0]
    c16c:	tst	r0, #4096	; 0x1000
    c170:	beq	c19c <pcap_ether_aton+0xbc>
    c174:	tst	r0, #2048	; 0x800
    c178:	lsl	r3, r3, #4
    c17c:	add	r5, r2, #2
    c180:	subne	r1, r4, #48	; 0x30
    c184:	bne	c194 <pcap_ether_aton+0xb4>
    c188:	tst	r0, #512	; 0x200
    c18c:	subne	r1, r4, #87	; 0x57
    c190:	subeq	r1, r4, #55	; 0x37
    c194:	ldrb	r4, [r2, #2]
    c198:	orr	r1, r1, r3
    c19c:	cmp	r4, #0
    c1a0:	strb	r1, [ip], #1
    c1a4:	bne	c118 <pcap_ether_aton+0x38>
    c1a8:	mov	r0, r6
    c1ac:	ldrd	r4, [sp]
    c1b0:	ldr	r6, [sp, #8]
    c1b4:	add	sp, sp, #12
    c1b8:	pop	{pc}		; (ldr pc, [sp], #4)

0000c1bc <pcap_ether_hostton>:
    c1bc:	strd	r4, [sp, #-16]!
    c1c0:	mov	r5, r0
    c1c4:	ldr	r4, [pc, #204]	; c298 <pcap_ether_hostton+0xdc>
    c1c8:	str	r6, [sp, #8]
    c1cc:	str	lr, [sp, #12]
    c1d0:	add	r4, pc, r4
    c1d4:	ldr	r3, [r4]
    c1d8:	cmp	r3, #0
    c1dc:	beq	c268 <pcap_ether_hostton+0xac>
    c1e0:	ldr	r0, [r4, #4]
    c1e4:	cmp	r0, #0
    c1e8:	beq	c224 <pcap_ether_hostton+0x68>
    c1ec:	bl	d84 <rewind@plt>
    c1f0:	ldr	r0, [r4, #4]
    c1f4:	ldr	r6, [pc, #160]	; c29c <pcap_ether_hostton+0xe0>
    c1f8:	add	r6, pc, r6
    c1fc:	b	c210 <pcap_ether_hostton+0x54>
    c200:	bl	cf4 <strcmp@plt>
    c204:	cmp	r0, #0
    c208:	beq	c238 <pcap_ether_hostton+0x7c>
    c20c:	ldr	r0, [r6, #4]
    c210:	bl	f2c8 <pcap_next_etherent>
    c214:	subs	r4, r0, #0
    c218:	mov	r1, r5
    c21c:	add	r0, r4, #6
    c220:	bne	c200 <pcap_ether_hostton+0x44>
    c224:	mov	r0, #0
    c228:	ldrd	r4, [sp]
    c22c:	ldr	r6, [sp, #8]
    c230:	add	sp, sp, #12
    c234:	pop	{pc}		; (ldr pc, [sp], #4)
    c238:	mov	r0, #6
    c23c:	bl	dc0 <malloc@plt>
    c240:	cmp	r0, #0
    c244:	beq	c228 <pcap_ether_hostton+0x6c>
    c248:	ldr	r3, [r4]
    c24c:	str	r3, [r0]
    c250:	ldrh	r3, [r4, #4]
    c254:	strh	r3, [r0, #4]
    c258:	ldrd	r4, [sp]
    c25c:	ldr	r6, [sp, #8]
    c260:	add	sp, sp, #12
    c264:	pop	{pc}		; (ldr pc, [sp], #4)
    c268:	ldr	r1, [pc, #48]	; c2a0 <pcap_ether_hostton+0xe4>
    c26c:	ldr	r0, [pc, #48]	; c2a4 <pcap_ether_hostton+0xe8>
    c270:	add	r1, pc, r1
    c274:	add	r0, pc, r0
    c278:	bl	d18 <fopen@plt>
    c27c:	ldr	r3, [r4]
    c280:	cmp	r0, #0
    c284:	str	r0, [r4, #4]
    c288:	add	r3, r3, #1
    c28c:	str	r3, [r4]
    c290:	bne	c1f4 <pcap_ether_hostton+0x38>
    c294:	b	c224 <pcap_ether_hostton+0x68>
    c298:	.word	0x00025550
    c29c:	.word	0x00025528
    c2a0:	.word	0x00008568
    c2a4:	.word	0x00008568

0000c2a8 <__pcap_nametodnaddr>:
    c2a8:	mov	r1, r0
    c2ac:	ldr	r0, [pc, #12]	; c2c0 <__pcap_nametodnaddr+0x18>
    c2b0:	str	r4, [sp, #-8]!
    c2b4:	str	lr, [sp, #4]
    c2b8:	add	r0, pc, r0
    c2bc:	bl	2210 <sf_bpf_error>
    c2c0:	.word	0x00008530

0000c2c4 <find_levels_r>:
    c2c4:	ldr	r3, [pc, #156]	; c368 <find_levels_r+0xa4>
    c2c8:	strd	r4, [sp, #-16]!
    c2cc:	str	r6, [sp, #8]
    c2d0:	str	lr, [sp, #12]
    c2d4:	ldr	r2, [r0, #24]
    c2d8:	add	r3, pc, r3
    c2dc:	ldr	r3, [r3]
    c2e0:	ldr	r5, [pc, #132]	; c36c <find_levels_r+0xa8>
    c2e4:	cmp	r2, r3
    c2e8:	add	r5, pc, r5
    c2ec:	beq	c358 <find_levels_r+0x94>
    c2f0:	mov	r4, r0
    c2f4:	ldr	r0, [r0, #60]	; 0x3c
    c2f8:	mov	r2, #0
    c2fc:	str	r3, [r4, #24]
    c300:	str	r2, [r4, #100]	; 0x64
    c304:	cmp	r0, r2
    c308:	moveq	r3, r0
    c30c:	beq	c33c <find_levels_r+0x78>
    c310:	bl	c2c4 <find_levels_r>
    c314:	ldr	r0, [r4, #84]	; 0x54
    c318:	bl	c2c4 <find_levels_r>
    c31c:	ldr	r2, [r4, #60]	; 0x3c
    c320:	ldr	r3, [r4, #84]	; 0x54
    c324:	ldr	r2, [r2, #36]	; 0x24
    c328:	ldr	r3, [r3, #36]	; 0x24
    c32c:	cmp	r3, r2
    c330:	movlt	r3, r2
    c334:	add	r3, r3, #1
    c338:	lsl	r0, r3, #2
    c33c:	ldr	r2, [pc, #44]	; c370 <find_levels_r+0xac>
    c340:	str	r3, [r4, #36]	; 0x24
    c344:	ldr	r3, [r5, r2]
    c348:	ldr	r3, [r3]
    c34c:	ldr	r2, [r3, r0]
    c350:	str	r2, [r4, #100]	; 0x64
    c354:	str	r4, [r3, r0]
    c358:	ldrd	r4, [sp]
    c35c:	ldr	r6, [sp, #8]
    c360:	add	sp, sp, #12
    c364:	pop	{pc}		; (ldr pc, [sp], #4)
    c368:	.word	0x00025450
    c36c:	.word	0x00024d10
    c370:	.word	0x000000c4

0000c374 <propedom>:
    c374:	str	r4, [sp, #-8]!
    c378:	str	lr, [sp, #4]
    c37c:	mov	lr, #1
    c380:	ldr	r3, [r0]
    c384:	ldr	r1, [r0, #8]
    c388:	lsr	ip, r3, #5
    c38c:	and	r3, r3, #31
    c390:	ldr	r2, [r1, ip, lsl #2]
    c394:	orr	r3, r2, lr, lsl r3
    c398:	str	r3, [r1, ip, lsl #2]
    c39c:	ldr	r2, [r0, #12]
    c3a0:	cmp	r2, #0
    c3a4:	beq	c40c <propedom+0x98>
    c3a8:	ldr	r3, [pc, #104]	; c418 <propedom+0xa4>
    c3ac:	ldr	r1, [r2, #56]	; 0x38
    c3b0:	ldr	lr, [r0, #8]
    c3b4:	add	r3, pc, r3
    c3b8:	ldr	r2, [r3, #4]
    c3bc:	subs	r2, r2, #1
    c3c0:	bmi	c40c <propedom+0x98>
    c3c4:	mov	ip, r2
    c3c8:	ldr	r3, [r1], #4
    c3cc:	sub	ip, ip, #1
    c3d0:	cmn	ip, #1
    c3d4:	ldr	r4, [lr], #4
    c3d8:	and	r3, r3, r4
    c3dc:	str	r3, [r1, #-4]
    c3e0:	bne	c3c8 <propedom+0x54>
    c3e4:	ldr	r3, [r0, #12]
    c3e8:	ldr	r0, [r0, #8]
    c3ec:	ldr	r1, [r3, #80]	; 0x50
    c3f0:	sub	r2, r2, #1
    c3f4:	ldr	r3, [r1], #4
    c3f8:	cmn	r2, #1
    c3fc:	ldr	ip, [r0], #4
    c400:	and	r3, r3, ip
    c404:	str	r3, [r1, #-4]
    c408:	bne	c3f0 <propedom+0x7c>
    c40c:	ldr	r4, [sp]
    c410:	add	sp, sp, #4
    c414:	pop	{pc}		; (ldr pc, [sp], #4)
    c418:	.word	0x00025374

0000c41c <F>:
    c41c:	strd	r4, [sp, #-16]!
    c420:	movw	r3, #8923	; 0x22db
    c424:	movt	r3, #39383	; 0x99d7
    c428:	str	r6, [sp, #8]
    c42c:	mov	r4, #213	; 0xd5
    c430:	str	lr, [sp, #12]
    c434:	mov	lr, r0
    c438:	eor	ip, lr, r2, lsl #8
    c43c:	ldr	r0, [pc, #236]	; c530 <F+0x114>
    c440:	eor	ip, ip, r1, lsl #4
    c444:	ldr	r5, [pc, #232]	; c534 <F+0x118>
    c448:	umull	r6, r3, r3, ip
    c44c:	add	r0, pc, r0
    c450:	add	r5, pc, r5
    c454:	lsr	r3, r3, #7
    c458:	mls	r3, r4, r3, ip
    c45c:	lsl	r4, r3, #2
    c460:	add	r0, r0, r4
    c464:	ldr	r3, [r0, #8]
    c468:	cmp	r3, #0
    c46c:	bne	c480 <F+0x64>
    c470:	b	c4ac <F+0x90>
    c474:	ldr	r3, [r3, #16]
    c478:	cmp	r3, #0
    c47c:	beq	c4ac <F+0x90>
    c480:	ldr	ip, [r3]
    c484:	cmp	ip, lr
    c488:	bne	c474 <F+0x58>
    c48c:	ldr	r0, [r3, #4]
    c490:	cmp	r0, r1
    c494:	bne	c474 <F+0x58>
    c498:	ldr	r0, [r3, #8]
    c49c:	cmp	r0, r2
    c4a0:	bne	c474 <F+0x58>
    c4a4:	ldr	r0, [r3, #12]
    c4a8:	b	c500 <F+0xe4>
    c4ac:	ldr	r3, [pc, #132]	; c538 <F+0x11c>
    c4b0:	tst	lr, #230	; 0xe6
    c4b4:	add	r3, pc, r3
    c4b8:	ldr	r0, [r3, #860]	; 0x35c
    c4bc:	add	r0, r0, #1
    c4c0:	str	r0, [r3, #860]	; 0x35c
    c4c4:	beq	c510 <F+0xf4>
    c4c8:	ldr	ip, [pc, #108]	; c53c <F+0x120>
    c4cc:	ldr	r3, [pc, #108]	; c540 <F+0x124>
    c4d0:	ldr	r5, [r5, ip]
    c4d4:	add	r3, pc, r3
    c4d8:	add	r3, r3, r4
    c4dc:	ldr	ip, [r5]
    c4e0:	add	r4, ip, #20
    c4e4:	stmib	ip, {r1, r2}
    c4e8:	str	r0, [ip, #12]
    c4ec:	str	r4, [r5]
    c4f0:	str	lr, [ip]
    c4f4:	ldr	r2, [r3, #8]
    c4f8:	str	r2, [ip, #16]
    c4fc:	str	ip, [r3, #8]
    c500:	ldrd	r4, [sp]
    c504:	ldr	r6, [sp, #8]
    c508:	add	sp, sp, #12
    c50c:	pop	{pc}		; (ldr pc, [sp], #4)
    c510:	ldr	r3, [pc, #44]	; c544 <F+0x128>
    c514:	mov	ip, #1
    c518:	ldr	r3, [r5, r3]
    c51c:	ldr	r3, [r3]
    c520:	add	r6, r3, r0, lsl #3
    c524:	str	r1, [r6, #4]
    c528:	str	ip, [r3, r0, lsl #3]
    c52c:	b	c4c8 <F+0xac>
    c530:	.word	0x000252dc
    c534:	.word	0x00024ba8
    c538:	.word	0x00025274
    c53c:	.word	0x000000ec
    c540:	.word	0x00025254
    c544:	.word	0x00000100

0000c548 <make_marks>:
    c548:	ldr	r3, [pc, #92]	; c5ac <make_marks+0x64>
    c54c:	strd	r4, [sp, #-16]!
    c550:	str	r6, [sp, #8]
    c554:	str	lr, [sp, #12]
    c558:	ldr	r2, [r0, #24]
    c55c:	add	r3, pc, r3
    c560:	ldr	r5, [r3]
    c564:	cmp	r2, r5
    c568:	beq	c59c <make_marks+0x54>
    c56c:	mov	r4, r0
    c570:	ldr	r3, [r4, #8]
    c574:	str	r5, [r4, #24]
    c578:	and	r3, r3, #7
    c57c:	cmp	r3, #6
    c580:	beq	c59c <make_marks+0x54>
    c584:	ldr	r0, [r4, #60]	; 0x3c
    c588:	bl	c548 <make_marks>
    c58c:	ldr	r4, [r4, #84]	; 0x54
    c590:	ldr	r3, [r4, #24]
    c594:	cmp	r3, r5
    c598:	bne	c570 <make_marks+0x28>
    c59c:	ldrd	r4, [sp]
    c5a0:	ldr	r6, [sp, #8]
    c5a4:	add	sp, sp, #12
    c5a8:	pop	{pc}		; (ldr pc, [sp], #4)
    c5ac:	.word	0x000251cc

0000c5b0 <count_blocks>:
    c5b0:	strd	r4, [sp, #-16]!
    c5b4:	subs	r4, r0, #0
    c5b8:	str	r6, [sp, #8]
    c5bc:	str	lr, [sp, #12]
    c5c0:	beq	c620 <count_blocks+0x70>
    c5c4:	ldr	r3, [pc, #92]	; c628 <count_blocks+0x78>
    c5c8:	mov	r5, #0
    c5cc:	ldr	r2, [r4, #24]
    c5d0:	add	r3, pc, r3
    c5d4:	ldr	r6, [r3]
    c5d8:	cmp	r2, r6
    c5dc:	beq	c60c <count_blocks+0x5c>
    c5e0:	str	r6, [r4, #24]
    c5e4:	ldr	r0, [r4, #60]	; 0x3c
    c5e8:	bl	c5b0 <count_blocks>
    c5ec:	ldr	r4, [r4, #84]	; 0x54
    c5f0:	add	r0, r0, #1
    c5f4:	add	r5, r5, r0
    c5f8:	cmp	r4, #0
    c5fc:	beq	c60c <count_blocks+0x5c>
    c600:	ldr	r3, [r4, #24]
    c604:	cmp	r3, r6
    c608:	bne	c5e0 <count_blocks+0x30>
    c60c:	mov	r0, r5
    c610:	ldrd	r4, [sp]
    c614:	ldr	r6, [sp, #8]
    c618:	add	sp, sp, #12
    c61c:	pop	{pc}		; (ldr pc, [sp], #4)
    c620:	mov	r5, r4
    c624:	b	c60c <count_blocks+0x5c>
    c628:	.word	0x00025158

0000c62c <number_blks_r>:
    c62c:	ldr	r2, [pc, #136]	; c6bc <number_blks_r+0x90>
    c630:	strd	r4, [sp, #-24]!	; 0xffffffe8
    c634:	subs	r4, r0, #0
    c638:	strd	r6, [sp, #8]
    c63c:	str	r8, [sp, #16]
    c640:	str	lr, [sp, #20]
    c644:	add	r2, pc, r2
    c648:	beq	c6a8 <number_blks_r+0x7c>
    c64c:	ldr	r5, [pc, #108]	; c6c0 <number_blks_r+0x94>
    c650:	ldr	r3, [r4, #24]
    c654:	add	r5, pc, r5
    c658:	ldr	r6, [r5]
    c65c:	cmp	r3, r6
    c660:	beq	c6a8 <number_blks_r+0x7c>
    c664:	ldr	r3, [pc, #88]	; c6c4 <number_blks_r+0x98>
    c668:	ldr	r7, [r2, r3]
    c66c:	str	r6, [r4, #24]
    c670:	ldr	r3, [r5, #864]	; 0x360
    c674:	str	r3, [r4]
    c678:	add	r1, r3, #1
    c67c:	ldr	r2, [r7]
    c680:	str	r1, [r5, #864]	; 0x360
    c684:	str	r4, [r2, r3, lsl #2]
    c688:	ldr	r0, [r4, #60]	; 0x3c
    c68c:	bl	c62c <number_blks_r>
    c690:	ldr	r4, [r4, #84]	; 0x54
    c694:	cmp	r4, #0
    c698:	beq	c6a8 <number_blks_r+0x7c>
    c69c:	ldr	r3, [r4, #24]
    c6a0:	cmp	r3, r6
    c6a4:	bne	c66c <number_blks_r+0x40>
    c6a8:	ldrd	r4, [sp]
    c6ac:	ldrd	r6, [sp, #8]
    c6b0:	ldr	r8, [sp, #16]
    c6b4:	add	sp, sp, #20
    c6b8:	pop	{pc}		; (ldr pc, [sp], #4)
    c6bc:	.word	0x000249b4
    c6c0:	.word	0x000250d4
    c6c4:	.word	0x000000cc

0000c6c8 <count_stmts>:
    c6c8:	strd	r4, [sp, #-16]!
    c6cc:	subs	r4, r0, #0
    c6d0:	str	r6, [sp, #8]
    c6d4:	str	lr, [sp, #12]
    c6d8:	beq	c760 <count_stmts+0x98>
    c6dc:	ldr	r3, [pc, #144]	; c774 <count_stmts+0xac>
    c6e0:	ldr	r2, [r4, #24]
    c6e4:	add	r3, pc, r3
    c6e8:	ldr	r3, [r3]
    c6ec:	cmp	r2, r3
    c6f0:	beq	c760 <count_stmts+0x98>
    c6f4:	str	r3, [r4, #24]
    c6f8:	ldr	r0, [r4, #60]	; 0x3c
    c6fc:	bl	c6c8 <count_stmts>
    c700:	mov	r5, r0
    c704:	ldr	r0, [r4, #84]	; 0x54
    c708:	bl	c6c8 <count_stmts>
    c70c:	ldr	r3, [r4, #4]
    c710:	add	r0, r5, r0
    c714:	cmp	r3, #0
    c718:	beq	c73c <count_stmts+0x74>
    c71c:	mov	r1, #0
    c720:	ldr	r2, [r3]
    c724:	ldr	r3, [r3, #16]
    c728:	cmn	r2, #1
    c72c:	addne	r1, r1, #1
    c730:	cmp	r3, #0
    c734:	bne	c720 <count_stmts+0x58>
    c738:	add	r0, r0, r1
    c73c:	ldr	r3, [r4, #28]
    c740:	add	r0, r0, #1
    c744:	ldr	r4, [r4, #32]
    c748:	ldr	r6, [sp, #8]
    c74c:	add	r0, r0, r3
    c750:	add	r0, r0, r4
    c754:	ldrd	r4, [sp]
    c758:	add	sp, sp, #12
    c75c:	pop	{pc}		; (ldr pc, [sp], #4)
    c760:	ldrd	r4, [sp]
    c764:	mov	r0, #0
    c768:	ldr	r6, [sp, #8]
    c76c:	add	sp, sp, #12
    c770:	pop	{pc}		; (ldr pc, [sp], #4)
    c774:	.word	0x00025044

0000c778 <convert_code_r>:
    c778:	strd	r4, [sp, #-36]!	; 0xffffffdc
    c77c:	strd	r6, [sp, #8]
    c780:	strd	r8, [sp, #16]
    c784:	subs	r9, r0, #0
    c788:	strd	sl, [sp, #24]
    c78c:	str	lr, [sp, #32]
    c790:	sub	sp, sp, #4
    c794:	beq	c7cc <convert_code_r+0x54>
    c798:	ldr	r5, [pc, #900]	; cb24 <convert_code_r+0x3ac>
    c79c:	ldr	r2, [r9, #24]
    c7a0:	add	r5, pc, r5
    c7a4:	ldr	r3, [r5]
    c7a8:	cmp	r2, r3
    c7ac:	beq	c7cc <convert_code_r+0x54>
    c7b0:	str	r3, [r9, #24]
    c7b4:	ldr	r0, [r9, #84]	; 0x54
    c7b8:	bl	c778 <convert_code_r>
    c7bc:	cmp	r0, #0
    c7c0:	bne	c7ec <convert_code_r+0x74>
    c7c4:	mov	r0, #0
    c7c8:	b	c7d0 <convert_code_r+0x58>
    c7cc:	mov	r0, #1
    c7d0:	add	sp, sp, #4
    c7d4:	ldrd	r4, [sp]
    c7d8:	ldrd	r6, [sp, #8]
    c7dc:	ldrd	r8, [sp, #16]
    c7e0:	ldrd	sl, [sp, #24]
    c7e4:	add	sp, sp, #32
    c7e8:	pop	{pc}		; (ldr pc, [sp], #4)
    c7ec:	ldr	r0, [r9, #60]	; 0x3c
    c7f0:	bl	c778 <convert_code_r>
    c7f4:	cmp	r0, #0
    c7f8:	beq	c7c4 <convert_code_r+0x4c>
    c7fc:	ldr	r4, [r9, #4]
    c800:	ldr	ip, [r9, #28]
    c804:	ldr	lr, [r9, #32]
    c808:	cmp	r4, #0
    c80c:	ldr	r6, [r5, #868]	; 0x364
    c810:	ldr	r1, [r5, #872]	; 0x368
    c814:	beq	cab8 <convert_code_r+0x340>
    c818:	mov	r0, r4
    c81c:	mov	r7, #0
    c820:	ldr	r2, [r0]
    c824:	add	r3, r7, #1
    c828:	cmn	r2, #1
    c82c:	beq	c83c <convert_code_r+0xc4>
    c830:	add	r2, r7, #2
    c834:	mov	r7, r3
    c838:	mov	r3, r2
    c83c:	ldr	r0, [r0, #16]
    c840:	cmp	r0, #0
    c844:	bne	c820 <convert_code_r+0xa8>
    c848:	add	r3, ip, r3
    c84c:	ldr	r2, [pc, #724]	; cb28 <convert_code_r+0x3b0>
    c850:	cmp	r7, #0
    c854:	add	r3, r3, lr
    c858:	sub	r6, r6, r3, lsl #3
    c85c:	sub	r3, r6, r1
    c860:	asr	r3, r3, #3
    c864:	add	r2, pc, r2
    c868:	str	r6, [r2, #868]	; 0x364
    c86c:	str	r3, [r9, #40]	; 0x28
    c870:	bne	ca10 <convert_code_r+0x298>
    c874:	mov	r2, #0
    c878:	sub	fp, r7, #2
    c87c:	b	c894 <convert_code_r+0x11c>
    c880:	add	r6, r6, #8
    c884:	add	r2, r2, #1
    c888:	ldr	r4, [r4, #16]
    c88c:	cmp	r4, #0
    c890:	beq	c998 <convert_code_r+0x220>
    c894:	ldr	r3, [r4]
    c898:	cmn	r3, #1
    c89c:	beq	c888 <convert_code_r+0x110>
    c8a0:	strh	r3, [r6]
    c8a4:	ldr	r3, [r4, #12]
    c8a8:	str	r3, [r6, #4]
    c8ac:	ldr	r3, [r4]
    c8b0:	sub	r5, r3, #5
    c8b4:	and	r1, r3, #7
    c8b8:	clz	r5, r5
    c8bc:	lsr	r5, r5, #5
    c8c0:	cmp	r1, #5
    c8c4:	orrne	r5, r5, #1
    c8c8:	cmp	r5, #0
    c8cc:	bne	c880 <convert_code_r+0x108>
    c8d0:	cmp	fp, r2
    c8d4:	beq	c880 <convert_code_r+0x108>
    c8d8:	ldr	ip, [r4, #4]
    c8dc:	cmp	ip, #0
    c8e0:	beq	cb10 <convert_code_r+0x398>
    c8e4:	ldr	r3, [r4, #8]
    c8e8:	cmp	r3, #0
    c8ec:	beq	cb10 <convert_code_r+0x398>
    c8f0:	cmp	r7, #0
    c8f4:	beq	c984 <convert_code_r+0x20c>
    c8f8:	sub	lr, r0, #4
    c8fc:	mov	r8, r5
    c900:	mov	r3, r5
    c904:	mvn	sl, r2
    c908:	b	c928 <convert_code_r+0x1b0>
    c90c:	ldr	ip, [r4, #8]
    c910:	cmp	r1, ip
    c914:	beq	c954 <convert_code_r+0x1dc>
    c918:	add	r3, r3, #1
    c91c:	cmp	r3, r7
    c920:	beq	c974 <convert_code_r+0x1fc>
    c924:	ldr	ip, [r4, #4]
    c928:	ldr	r1, [lr, #4]!
    c92c:	cmp	r1, ip
    c930:	bne	c90c <convert_code_r+0x194>
    c934:	cmp	r8, #0
    c938:	bne	caf0 <convert_code_r+0x378>
    c93c:	add	ip, sl, r3
    c940:	mov	r8, #1
    c944:	strb	ip, [r6, #2]
    c948:	ldr	ip, [r4, #8]
    c94c:	cmp	r1, ip
    c950:	bne	c918 <convert_code_r+0x1a0>
    c954:	cmp	r5, #0
    c958:	bne	cadc <convert_code_r+0x364>
    c95c:	add	r1, sl, r3
    c960:	add	r3, r3, #1
    c964:	cmp	r3, r7
    c968:	mov	r5, #1
    c96c:	strb	r1, [r6, #3]
    c970:	bne	c924 <convert_code_r+0x1ac>
    c974:	eor	r8, r8, #1
    c978:	eor	r5, r5, #1
    c97c:	orrs	r3, r8, r5
    c980:	beq	c880 <convert_code_r+0x108>
    c984:	ldr	r1, [pc, #416]	; cb2c <convert_code_r+0x3b4>
    c988:	ldr	r0, [pc, #416]	; cb30 <convert_code_r+0x3b8>
    c98c:	add	r1, pc, r1
    c990:	add	r0, pc, r0
    c994:	bl	2210 <sf_bpf_error>
    c998:	cmp	r0, #0
    c99c:	beq	c9a4 <convert_code_r+0x22c>
    c9a0:	bl	d48 <free@plt>
    c9a4:	ldr	r3, [r9, #8]
    c9a8:	strh	r3, [r6]
    c9ac:	ldr	r3, [r9, #20]
    c9b0:	str	r3, [r6, #4]
    c9b4:	ldr	r3, [r9, #60]	; 0x3c
    c9b8:	cmp	r3, #0
    c9bc:	beq	c7cc <convert_code_r+0x54>
    c9c0:	ldr	r2, [r9, #40]	; 0x28
    c9c4:	ldr	r3, [r3, #40]	; 0x28
    c9c8:	add	r2, r7, r2
    c9cc:	sub	r3, r3, r2
    c9d0:	sub	r2, r3, #1
    c9d4:	cmp	r2, #255	; 0xff
    c9d8:	bls	ca4c <convert_code_r+0x2d4>
    c9dc:	ldr	r0, [r9, #28]
    c9e0:	cmp	r0, #0
    c9e4:	moveq	r3, #1
    c9e8:	streq	r3, [r9, #28]
    c9ec:	beq	c7d0 <convert_code_r+0x58>
    c9f0:	mov	r1, #0
    c9f4:	sub	r3, r3, #2
    c9f8:	mov	r2, #5
    c9fc:	strb	r1, [r6, #2]
    ca00:	mov	r1, #1
    ca04:	strh	r2, [r6, #8]
    ca08:	str	r3, [r6, #12]
    ca0c:	b	ca54 <convert_code_r+0x2dc>
    ca10:	mov	r1, #4
    ca14:	mov	r0, r7
    ca18:	bl	ce8 <calloc@plt>
    ca1c:	cmp	r0, #0
    ca20:	subne	r1, r0, #4
    ca24:	movne	r3, r4
    ca28:	movne	r2, #0
    ca2c:	beq	cb04 <convert_code_r+0x38c>
    ca30:	str	r3, [r1, #4]!
    ca34:	add	r2, r2, #1
    ca38:	ldr	r3, [r3, #16]
    ca3c:	cmp	r3, #0
    ca40:	cmpne	r7, r2
    ca44:	bhi	ca30 <convert_code_r+0x2b8>
    ca48:	b	c874 <convert_code_r+0xfc>
    ca4c:	mov	r1, #0
    ca50:	strb	r2, [r6, #2]
    ca54:	ldr	r2, [r9, #40]	; 0x28
    ca58:	ldr	r3, [r9, #84]	; 0x54
    ca5c:	add	r7, r7, r2
    ca60:	ldr	r3, [r3, #40]	; 0x28
    ca64:	sub	r3, r3, r7
    ca68:	sub	r3, r3, #1
    ca6c:	cmp	r3, #255	; 0xff
    ca70:	movls	r0, #1
    ca74:	strbls	r3, [r6, #3]
    ca78:	bls	c7d0 <convert_code_r+0x58>
    ca7c:	ldr	r0, [r9, #32]
    ca80:	cmp	r0, #0
    ca84:	moveq	r3, #1
    ca88:	streq	r3, [r9, #32]
    ca8c:	beq	c7d0 <convert_code_r+0x58>
    ca90:	add	r0, r1, #1
    ca94:	mov	ip, #5
    ca98:	strb	r1, [r6, #3]
    ca9c:	lsl	r2, r0, #3
    caa0:	sub	r3, r3, r0
    caa4:	mov	r0, #1
    caa8:	add	r1, r6, r2
    caac:	strh	ip, [r6, r2]
    cab0:	str	r3, [r1, #4]
    cab4:	b	c7d0 <convert_code_r+0x58>
    cab8:	add	r3, ip, #1
    cabc:	mov	r7, r4
    cac0:	add	r3, r3, lr
    cac4:	sub	r6, r6, r3, lsl #3
    cac8:	sub	r3, r6, r1
    cacc:	asr	r3, r3, #3
    cad0:	str	r6, [r5, #868]	; 0x364
    cad4:	str	r3, [r9, #40]	; 0x28
    cad8:	b	c9a4 <convert_code_r+0x22c>
    cadc:	ldr	r1, [pc, #80]	; cb34 <convert_code_r+0x3bc>
    cae0:	ldr	r0, [pc, #80]	; cb38 <convert_code_r+0x3c0>
    cae4:	add	r1, pc, r1
    cae8:	add	r0, pc, r0
    caec:	bl	2210 <sf_bpf_error>
    caf0:	ldr	r1, [pc, #68]	; cb3c <convert_code_r+0x3c4>
    caf4:	ldr	r0, [pc, #68]	; cb40 <convert_code_r+0x3c8>
    caf8:	add	r1, pc, r1
    cafc:	add	r0, pc, r0
    cb00:	bl	2210 <sf_bpf_error>
    cb04:	ldr	r0, [pc, #56]	; cb44 <convert_code_r+0x3cc>
    cb08:	add	r0, pc, r0
    cb0c:	bl	2210 <sf_bpf_error>
    cb10:	ldr	r1, [pc, #48]	; cb48 <convert_code_r+0x3d0>
    cb14:	ldr	r0, [pc, #48]	; cb4c <convert_code_r+0x3d4>
    cb18:	add	r1, pc, r1
    cb1c:	add	r0, pc, r0
    cb20:	bl	2210 <sf_bpf_error>
    cb24:	.word	0x00024f88
    cb28:	.word	0x00024ec4
    cb2c:	.word	0x00007f50
    cb30:	.word	0x00007f64
    cb34:	.word	0x00007e50
    cb38:	.word	0x00007e0c
    cb3c:	.word	0x00007e3c
    cb40:	.word	0x00007df8
    cb44:	.word	0x00007dc4
    cb48:	.word	0x00007e08
    cb4c:	.word	0x00007dd8

0000cb50 <atomdef.isra.1>:
    cb50:	cmn	r0, #1
    cb54:	beq	cb8c <atomdef.isra.1+0x3c>
    cb58:	and	r3, r0, #7
    cb5c:	cmp	r3, #7
    cb60:	addls	pc, pc, r3, lsl #2
    cb64:	b	cbb0 <atomdef.isra.1+0x60>
    cb68:	b	cb88 <atomdef.isra.1+0x38>
    cb6c:	b	cba0 <atomdef.isra.1+0x50>
    cb70:	b	cba8 <atomdef.isra.1+0x58>
    cb74:	b	cba8 <atomdef.isra.1+0x58>
    cb78:	b	cb88 <atomdef.isra.1+0x38>
    cb7c:	b	cbb0 <atomdef.isra.1+0x60>
    cb80:	b	cbb0 <atomdef.isra.1+0x60>
    cb84:	b	cb90 <atomdef.isra.1+0x40>
    cb88:	mov	r0, #16
    cb8c:	bx	lr
    cb90:	tst	r0, #248	; 0xf8
    cb94:	moveq	r0, #17
    cb98:	movne	r0, #16
    cb9c:	bx	lr
    cba0:	mov	r0, #17
    cba4:	bx	lr
    cba8:	ldr	r0, [r1]
    cbac:	bx	lr
    cbb0:	mvn	r0, #0
    cbb4:	bx	lr

0000cbb8 <find_inedges.isra.6>:
    cbb8:	ldr	r3, [pc, #176]	; cc70 <find_inedges.isra.6+0xb8>
    cbbc:	str	r4, [sp, #-8]!
    cbc0:	str	lr, [sp, #4]
    cbc4:	ldr	r4, [pc, #168]	; cc74 <find_inedges.isra.6+0xbc>
    cbc8:	add	r3, pc, r3
    cbcc:	ldr	r1, [r3, #864]	; 0x360
    cbd0:	add	r4, pc, r4
    cbd4:	cmp	r1, #0
    cbd8:	ble	cc00 <find_inedges.isra.6+0x48>
    cbdc:	ldr	r3, [pc, #148]	; cc78 <find_inedges.isra.6+0xc0>
    cbe0:	mov	ip, #0
    cbe4:	ldr	r3, [r4, r3]
    cbe8:	ldr	r3, [r3]
    cbec:	add	r1, r3, r1, lsl #2
    cbf0:	ldr	r2, [r3], #4
    cbf4:	cmp	r3, r1
    cbf8:	str	ip, [r2, #112]	; 0x70
    cbfc:	bne	cbf0 <find_inedges.isra.6+0x38>
    cc00:	ldr	lr, [r0]
    cc04:	cmp	lr, #0
    cc08:	ble	cc64 <find_inedges.isra.6+0xac>
    cc0c:	ldr	r3, [pc, #104]	; cc7c <find_inedges.isra.6+0xc4>
    cc10:	ldr	r3, [r4, r3]
    cc14:	ldr	r4, [r3]
    cc18:	add	lr, r4, lr, lsl #2
    cc1c:	ldr	r3, [lr], #-4
    cc20:	cmp	r3, #0
    cc24:	beq	cc5c <find_inedges.isra.6+0xa4>
    cc28:	ldr	r2, [r3, #60]	; 0x3c
    cc2c:	add	r0, r3, #48	; 0x30
    cc30:	add	r1, r3, #72	; 0x48
    cc34:	ldr	ip, [r2, #112]	; 0x70
    cc38:	str	ip, [r3, #68]	; 0x44
    cc3c:	str	r0, [r2, #112]	; 0x70
    cc40:	ldr	r2, [r3, #84]	; 0x54
    cc44:	ldr	r0, [r2, #112]	; 0x70
    cc48:	str	r0, [r3, #92]	; 0x5c
    cc4c:	str	r1, [r2, #112]	; 0x70
    cc50:	ldr	r3, [r3, #100]	; 0x64
    cc54:	cmp	r3, #0
    cc58:	bne	cc28 <find_inedges.isra.6+0x70>
    cc5c:	cmp	r4, lr
    cc60:	bne	cc1c <find_inedges.isra.6+0x64>
    cc64:	ldr	r4, [sp]
    cc68:	add	sp, sp, #4
    cc6c:	pop	{pc}		; (ldr pc, [sp], #4)
    cc70:	.word	0x00024b60
    cc74:	.word	0x00024428
    cc78:	.word	0x000000cc
    cc7c:	.word	0x000000c4

0000cc80 <atomuse.isra.8>:
    cc80:	cmn	r0, #1
    cc84:	beq	cccc <atomuse.isra.8+0x4c>
    cc88:	and	r3, r0, #7
    cc8c:	sub	r3, r3, #2
    cc90:	cmp	r3, #5
    cc94:	addls	pc, pc, r3, lsl #2
    cc98:	b	ccb4 <atomuse.isra.8+0x34>
    cc9c:	b	ccd0 <atomuse.isra.8+0x50>
    cca0:	b	ccd8 <atomuse.isra.8+0x58>
    cca4:	b	cce0 <atomuse.isra.8+0x60>
    cca8:	b	cce0 <atomuse.isra.8+0x60>
    ccac:	b	ccf0 <atomuse.isra.8+0x70>
    ccb0:	b	cd0c <atomuse.isra.8+0x8c>
    ccb4:	and	r0, r0, #224	; 0xe0
    ccb8:	cmp	r0, #64	; 0x40
    ccbc:	beq	ccd8 <atomuse.isra.8+0x58>
    ccc0:	cmp	r0, #96	; 0x60
    ccc4:	beq	cd20 <atomuse.isra.8+0xa0>
    ccc8:	mvn	r0, #0
    cccc:	bx	lr
    ccd0:	mov	r0, #16
    ccd4:	bx	lr
    ccd8:	mov	r0, #17
    ccdc:	bx	lr
    cce0:	tst	r0, #8
    cce4:	moveq	r0, #16
    cce8:	movne	r0, #18
    ccec:	bx	lr
    ccf0:	and	r0, r0, #24
    ccf4:	cmp	r0, #16
    ccf8:	beq	cccc <atomuse.isra.8+0x4c>
    ccfc:	cmp	r0, #8
    cd00:	mvnne	r0, #0
    cd04:	moveq	r0, #17
    cd08:	bx	lr
    cd0c:	and	r0, r0, #248	; 0xf8
    cd10:	cmp	r0, #128	; 0x80
    cd14:	movne	r0, #16
    cd18:	moveq	r0, #17
    cd1c:	bx	lr
    cd20:	ldr	r0, [r1]
    cd24:	bx	lr

0000cd28 <deadstmt>:
    cd28:	mov	r2, r0
    cd2c:	strd	r4, [sp, #-16]!
    cd30:	mov	r5, r0
    cd34:	str	r6, [sp, #8]
    cd38:	mov	r6, r1
    cd3c:	str	lr, [sp, #12]
    cd40:	ldr	r4, [r2], #12
    cd44:	mov	r1, r2
    cd48:	mov	r0, r4
    cd4c:	bl	cc80 <atomuse.isra.8>
    cd50:	cmp	r0, #0
    cd54:	blt	cd70 <deadstmt+0x48>
    cd58:	mov	r3, #0
    cd5c:	cmp	r0, #18
    cd60:	streq	r3, [r6, #64]	; 0x40
    cd64:	streq	r3, [r6, #68]	; 0x44
    cd68:	strne	r3, [r6, r0, lsl #2]
    cd6c:	ldr	r4, [r5]
    cd70:	mov	r1, r2
    cd74:	mov	r0, r4
    cd78:	bl	cb50 <atomdef.isra.1>
    cd7c:	cmp	r0, #0
    cd80:	blt	cdac <deadstmt+0x84>
    cd84:	ldr	r2, [r6, r0, lsl #2]
    cd88:	cmp	r2, #0
    cd8c:	beq	cda8 <deadstmt+0x80>
    cd90:	ldr	r3, [pc, #36]	; cdbc <deadstmt+0x94>
    cd94:	mov	r1, #0
    cd98:	mvn	ip, #0
    cd9c:	str	ip, [r2]
    cda0:	add	r3, pc, r3
    cda4:	str	r1, [r3, #876]	; 0x36c
    cda8:	str	r5, [r6, r0, lsl #2]
    cdac:	ldrd	r4, [sp]
    cdb0:	ldr	r6, [sp, #8]
    cdb4:	add	sp, sp, #12
    cdb8:	pop	{pc}		; (ldr pc, [sp], #4)
    cdbc:	.word	0x00024988

0000cdc0 <fold_op.isra.10>:
    cdc0:	str	r4, [sp, #-8]!
    cdc4:	str	lr, [sp, #4]
    cdc8:	ldr	lr, [pc, #244]	; cec4 <fold_op.isra.10+0x104>
    cdcc:	ldr	r4, [pc, #244]	; cec8 <fold_op.isra.10+0x108>
    cdd0:	ldr	ip, [r0]
    cdd4:	add	lr, pc, lr
    cdd8:	ldr	lr, [lr, r4]
    cddc:	and	ip, ip, #240	; 0xf0
    cde0:	cmp	ip, #64	; 0x40
    cde4:	ldr	lr, [lr]
    cde8:	add	r2, lr, r2, lsl #3
    cdec:	add	r3, lr, r3, lsl #3
    cdf0:	ldr	r2, [r2, #4]
    cdf4:	ldr	r3, [r3, #4]
    cdf8:	beq	cea8 <fold_op.isra.10+0xe8>
    cdfc:	bgt	ce64 <fold_op.isra.10+0xa4>
    ce00:	cmp	ip, #16
    ce04:	beq	ceb0 <fold_op.isra.10+0xf0>
    ce08:	ble	ce54 <fold_op.isra.10+0x94>
    ce0c:	cmp	ip, #32
    ce10:	bne	ce3c <fold_op.isra.10+0x7c>
    ce14:	mul	r2, r3, r2
    ce18:	ldr	r3, [pc, #172]	; cecc <fold_op.isra.10+0x10c>
    ce1c:	mov	ip, #0
    ce20:	str	r2, [r1]
    ce24:	str	ip, [r0]
    ce28:	add	r3, pc, r3
    ce2c:	str	ip, [r3, #876]	; 0x36c
    ce30:	ldr	r4, [sp]
    ce34:	add	sp, sp, #4
    ce38:	pop	{pc}		; (ldr pc, [sp], #4)
    ce3c:	cmp	ip, #48	; 0x30
    ce40:	bne	ce60 <fold_op.isra.10+0xa0>
    ce44:	cmp	r3, #0
    ce48:	beq	ceb8 <fold_op.isra.10+0xf8>
    ce4c:	udiv	r2, r2, r3
    ce50:	b	ce18 <fold_op.isra.10+0x58>
    ce54:	cmp	ip, #0
    ce58:	addeq	r2, r2, r3
    ce5c:	beq	ce18 <fold_op.isra.10+0x58>
    ce60:	bl	ebc <abort@plt>
    ce64:	cmp	ip, #96	; 0x60
    ce68:	beq	cea0 <fold_op.isra.10+0xe0>
    ce6c:	ble	ce80 <fold_op.isra.10+0xc0>
    ce70:	cmp	ip, #112	; 0x70
    ce74:	bne	ce90 <fold_op.isra.10+0xd0>
    ce78:	lsr	r2, r2, r3
    ce7c:	b	ce18 <fold_op.isra.10+0x58>
    ce80:	cmp	ip, #80	; 0x50
    ce84:	andeq	r2, r2, r3
    ce88:	beq	ce18 <fold_op.isra.10+0x58>
    ce8c:	b	ce60 <fold_op.isra.10+0xa0>
    ce90:	cmp	ip, #128	; 0x80
    ce94:	rsbeq	r2, r2, #0
    ce98:	beq	ce18 <fold_op.isra.10+0x58>
    ce9c:	b	ce60 <fold_op.isra.10+0xa0>
    cea0:	lsl	r2, r2, r3
    cea4:	b	ce18 <fold_op.isra.10+0x58>
    cea8:	orr	r2, r2, r3
    ceac:	b	ce18 <fold_op.isra.10+0x58>
    ceb0:	sub	r2, r2, r3
    ceb4:	b	ce18 <fold_op.isra.10+0x58>
    ceb8:	ldr	r0, [pc, #16]	; ced0 <fold_op.isra.10+0x110>
    cebc:	add	r0, pc, r0
    cec0:	bl	2210 <sf_bpf_error>
    cec4:	.word	0x00024224
    cec8:	.word	0x00000100
    cecc:	.word	0x00024900
    ced0:	.word	0x00007a8c

0000ced4 <opt_j>:
    ced4:	ldr	r3, [r0, #12]
    ced8:	ldr	r1, [pc, #640]	; d160 <opt_j+0x28c>
    cedc:	ldr	r2, [r3, #60]	; 0x3c
    cee0:	add	r1, pc, r1
    cee4:	cmp	r2, #0
    cee8:	bxeq	lr
    ceec:	strd	r4, [sp, #-36]!	; 0xffffffdc
    cef0:	strd	r6, [sp, #8]
    cef4:	strd	r8, [sp, #16]
    cef8:	strd	sl, [sp, #24]
    cefc:	str	lr, [sp, #32]
    cf00:	sub	sp, sp, #28
    cf04:	ldr	r3, [r3, #84]	; 0x54
    cf08:	cmp	r2, r3
    cf0c:	beq	d100 <opt_j+0x22c>
    cf10:	ldr	r3, [pc, #588]	; d164 <opt_j+0x290>
    cf14:	add	r3, pc, r3
    cf18:	ldr	r3, [r3, #876]	; 0x36c
    cf1c:	str	r3, [sp, #20]
    cf20:	ldr	r2, [pc, #576]	; d168 <opt_j+0x294>
    cf24:	mov	r3, #0
    cf28:	mov	r8, r0
    cf2c:	mov	r4, #1
    cf30:	str	r3, [sp, #16]
    cf34:	ldr	r3, [pc, #560]	; d16c <opt_j+0x298>
    cf38:	ldr	r2, [r1, r2]
    cf3c:	add	r3, pc, r3
    cf40:	ldr	r3, [r3, #4]
    cf44:	ldr	r9, [r2]
    cf48:	str	r3, [sp, #12]
    cf4c:	ldr	r3, [sp, #12]
    cf50:	cmp	r3, #0
    cf54:	ble	d0e0 <opt_j+0x20c>
    cf58:	ldr	r3, [r8, #8]
    cf5c:	mov	r2, #0
    cf60:	str	r2, [sp, #8]
    cf64:	sub	r3, r3, #4
    cf68:	str	r3, [sp, #4]
    cf6c:	ldr	r3, [sp, #4]
    cf70:	ldr	r5, [r3, #4]!
    cf74:	cmp	r5, #0
    cf78:	str	r3, [sp, #4]
    cf7c:	beq	d098 <opt_j+0x1c4>
    cf80:	ldr	sl, [r8, #12]
    cf84:	ldr	r3, [sp, #8]
    cf88:	ldr	r6, [sl, #8]
    cf8c:	lsl	r7, r3, #5
    cf90:	mov	r0, r5
    cf94:	bl	e98 <ffs@plt>
    cf98:	sub	r0, r0, #1
    cf9c:	add	r3, r0, r7
    cfa0:	bic	r5, r5, r4, lsl r0
    cfa4:	ldr	r2, [r9, r3, lsl #2]
    cfa8:	ldr	r3, [r2, #4]
    cfac:	cmp	r3, #0
    cfb0:	rsblt	r3, r3, #0
    cfb4:	movlt	r1, #0
    cfb8:	movge	r1, #1
    cfbc:	cmp	r6, r3
    cfc0:	bne	d090 <opt_j+0x1bc>
    cfc4:	ldr	r3, [r2, #16]
    cfc8:	ldr	r0, [sl, #200]	; 0xc8
    cfcc:	ldr	r2, [r3, #200]	; 0xc8
    cfd0:	cmp	r0, r2
    cfd4:	bne	d090 <opt_j+0x1bc>
    cfd8:	ldr	r3, [r3, #132]	; 0x84
    cfdc:	ldr	r2, [sl, #132]	; 0x84
    cfe0:	cmp	r2, r3
    cfe4:	beq	d0d0 <opt_j+0x1fc>
    cfe8:	cmp	r6, #21
    cfec:	movne	r1, #0
    cff0:	andeq	r1, r1, #1
    cff4:	cmp	r1, #0
    cff8:	beq	d090 <opt_j+0x1bc>
    cffc:	ldr	fp, [sl, #84]	; 0x54
    d000:	cmp	fp, #0
    d004:	beq	d090 <opt_j+0x1bc>
    d008:	ldr	r2, [fp, #128]	; 0x80
    d00c:	cmp	r2, #0
    d010:	beq	d048 <opt_j+0x174>
    d014:	ldr	ip, [r8, #16]
    d018:	mov	r3, #0
    d01c:	add	lr, fp, #136	; 0x88
    d020:	add	ip, ip, #136	; 0x88
    d024:	ands	r1, r2, r4, lsl r3
    d028:	beq	d03c <opt_j+0x168>
    d02c:	ldr	r0, [ip, r3, lsl #2]
    d030:	ldr	r1, [lr, r3, lsl #2]
    d034:	cmp	r0, r1
    d038:	bne	d090 <opt_j+0x1bc>
    d03c:	add	r3, r3, #1
    d040:	cmp	r3, #18
    d044:	bne	d024 <opt_j+0x150>
    d048:	mov	r3, #0
    d04c:	str	fp, [r8, #12]
    d050:	str	r3, [sp, #20]
    d054:	mov	r3, #1
    d058:	str	r3, [sp, #16]
    d05c:	ldr	r3, [fp, #60]	; 0x3c
    d060:	cmp	r3, #0
    d064:	bne	cf4c <opt_j+0x78>
    d068:	ldr	r2, [pc, #256]	; d170 <opt_j+0x29c>
    d06c:	add	r2, pc, r2
    d070:	str	r3, [r2, #876]	; 0x36c
    d074:	add	sp, sp, #28
    d078:	ldrd	r4, [sp]
    d07c:	ldrd	r6, [sp, #8]
    d080:	ldrd	r8, [sp, #16]
    d084:	ldrd	sl, [sp, #24]
    d088:	add	sp, sp, #32
    d08c:	pop	{pc}		; (ldr pc, [sp], #4)
    d090:	cmp	r5, #0
    d094:	bne	cf90 <opt_j+0xbc>
    d098:	ldr	r3, [sp, #8]
    d09c:	ldr	r2, [sp, #12]
    d0a0:	add	r3, r3, #1
    d0a4:	cmp	r3, r2
    d0a8:	str	r3, [sp, #8]
    d0ac:	bne	cf6c <opt_j+0x98>
    d0b0:	ldr	r3, [sp, #16]
    d0b4:	cmp	r3, #0
    d0b8:	beq	d074 <opt_j+0x1a0>
    d0bc:	ldr	r3, [pc, #176]	; d174 <opt_j+0x2a0>
    d0c0:	ldr	r2, [sp, #20]
    d0c4:	add	r3, pc, r3
    d0c8:	str	r2, [r3, #876]	; 0x36c
    d0cc:	b	d074 <opt_j+0x1a0>
    d0d0:	cmp	r1, #0
    d0d4:	beq	cffc <opt_j+0x128>
    d0d8:	ldr	fp, [sl, #60]	; 0x3c
    d0dc:	b	d000 <opt_j+0x12c>
    d0e0:	ldr	r3, [sp, #16]
    d0e4:	cmp	r3, #0
    d0e8:	beq	d074 <opt_j+0x1a0>
    d0ec:	ldr	r3, [pc, #132]	; d178 <opt_j+0x2a4>
    d0f0:	ldr	r2, [sp, #20]
    d0f4:	add	r3, pc, r3
    d0f8:	str	r2, [r3, #876]	; 0x36c
    d0fc:	b	d074 <opt_j+0x1a0>
    d100:	ldr	ip, [r2, #128]	; 0x80
    d104:	cmp	ip, #0
    d108:	beq	d144 <opt_j+0x270>
    d10c:	ldr	r6, [r0, #16]
    d110:	mov	r3, #0
    d114:	mov	lr, #1
    d118:	add	r7, r2, #136	; 0x88
    d11c:	add	r6, r6, #136	; 0x88
    d120:	ands	r4, ip, lr, lsl r3
    d124:	beq	d138 <opt_j+0x264>
    d128:	ldr	r5, [r6, r3, lsl #2]
    d12c:	ldr	r4, [r7, r3, lsl #2]
    d130:	cmp	r5, r4
    d134:	bne	cf10 <opt_j+0x3c>
    d138:	add	r3, r3, #1
    d13c:	cmp	r3, #18
    d140:	bne	d120 <opt_j+0x24c>
    d144:	ldr	r3, [pc, #48]	; d17c <opt_j+0x2a8>
    d148:	mov	ip, #0
    d14c:	str	r2, [r0, #12]
    d150:	str	ip, [sp, #20]
    d154:	add	r3, pc, r3
    d158:	str	ip, [r3, #876]	; 0x36c
    d15c:	b	cf20 <opt_j+0x4c>
    d160:	.word	0x00024118
    d164:	.word	0x00024814
    d168:	.word	0x000000e4
    d16c:	.word	0x000247ec
    d170:	.word	0x000246bc
    d174:	.word	0x00024664
    d178:	.word	0x00024634
    d17c:	.word	0x000245d4

0000d180 <opt_loop>:
    d180:	strd	r4, [sp, #-36]!	; 0xffffffdc
    d184:	strd	r6, [sp, #8]
    d188:	strd	sl, [sp, #24]
    d18c:	mov	fp, r1
    d190:	ldr	r1, [pc, #4068]	; e17c <opt_loop+0xffc>
    d194:	mov	sl, fp
    d198:	strd	r8, [sp, #16]
    d19c:	str	lr, [sp, #32]
    d1a0:	sub	sp, sp, #124	; 0x7c
    d1a4:	ldr	r2, [pc, #4052]	; e180 <opt_loop+0x1000>
    d1a8:	str	r0, [sp, #4]
    d1ac:	add	r1, pc, r1
    d1b0:	ldr	r3, [pc, #4044]	; e184 <opt_loop+0x1004>
    d1b4:	str	r1, [sp, #40]	; 0x28
    d1b8:	ldr	r1, [pc, #4040]	; e188 <opt_loop+0x1008>
    d1bc:	add	r2, pc, r2
    d1c0:	str	r2, [sp, #44]	; 0x2c
    d1c4:	add	r1, pc, r1
    d1c8:	str	r1, [sp, #32]
    d1cc:	ldr	r3, [r2, r3]
    d1d0:	str	r3, [sp]
    d1d4:	ldr	r4, [sp, #40]	; 0x28
    d1d8:	mov	r3, #1
    d1dc:	mov	r1, #0
    d1e0:	str	r3, [r4, #876]	; 0x36c
    d1e4:	ldr	r3, [sp]
    d1e8:	ldr	r5, [r4, #864]	; 0x360
    d1ec:	ldr	r0, [r3]
    d1f0:	lsl	r2, r5, #2
    d1f4:	bl	e2c <memset@plt>
    d1f8:	ldr	r3, [r4]
    d1fc:	ldr	r0, [sp, #4]
    d200:	add	r3, r3, #1
    d204:	str	r3, [r4]
    d208:	bl	c2c4 <find_levels_r>
    d20c:	ldr	r1, [r4, #880]	; 0x370
    d210:	ldr	r4, [r4, #884]	; 0x374
    d214:	mul	r2, r5, r4
    d218:	subs	r3, r2, #1
    d21c:	bmi	d234 <opt_loop+0xb4>
    d220:	mvn	r0, #0
    d224:	sub	r3, r3, #1
    d228:	str	r0, [r1], #4
    d22c:	cmn	r3, #1
    d230:	bne	d224 <opt_loop+0xa4>
    d234:	subs	r4, r4, #1
    d238:	bmi	d258 <opt_loop+0xd8>
    d23c:	ldr	ip, [sp, #4]
    d240:	mov	r3, r4
    d244:	mov	r0, #0
    d248:	ldr	r1, [ip, #104]	; 0x68
    d24c:	str	r0, [r1, r3, lsl #2]
    d250:	subs	r3, r3, #1
    d254:	bcs	d248 <opt_loop+0xc8>
    d258:	ldr	r3, [sp, #4]
    d25c:	ldr	r1, [r3, #36]	; 0x24
    d260:	cmp	r1, #0
    d264:	ldrge	lr, [sp]
    d268:	blt	d318 <opt_loop+0x198>
    d26c:	ldr	r3, [lr]
    d270:	ldr	r3, [r3, r1, lsl #2]
    d274:	cmp	r3, #0
    d278:	beq	d310 <opt_loop+0x190>
    d27c:	ldr	r0, [r3]
    d280:	mov	r7, #1
    d284:	ldr	r5, [r3, #104]	; 0x68
    d288:	lsr	r6, r0, #5
    d28c:	and	r0, r0, #31
    d290:	ldr	ip, [r5, r6, lsl #2]
    d294:	orr	r0, ip, r7, lsl r0
    d298:	str	r0, [r5, r6, lsl #2]
    d29c:	ldr	r0, [r3, #60]	; 0x3c
    d2a0:	cmp	r0, #0
    d2a4:	beq	d304 <opt_loop+0x184>
    d2a8:	cmp	r4, #0
    d2ac:	ldr	ip, [r0, #104]	; 0x68
    d2b0:	ldr	r6, [r3, #104]	; 0x68
    d2b4:	blt	d304 <opt_loop+0x184>
    d2b8:	mov	r0, r4
    d2bc:	ldr	r5, [ip], #4
    d2c0:	sub	r0, r0, #1
    d2c4:	cmn	r0, #1
    d2c8:	ldr	r7, [r6], #4
    d2cc:	and	r5, r5, r7
    d2d0:	str	r5, [ip, #-4]
    d2d4:	bne	d2bc <opt_loop+0x13c>
    d2d8:	ldr	r0, [r3, #84]	; 0x54
    d2dc:	mov	ip, r4
    d2e0:	ldr	r6, [r3, #104]	; 0x68
    d2e4:	ldr	r0, [r0, #104]	; 0x68
    d2e8:	sub	ip, ip, #1
    d2ec:	ldr	r5, [r0], #4
    d2f0:	cmn	ip, #1
    d2f4:	ldr	r7, [r6], #4
    d2f8:	and	r5, r5, r7
    d2fc:	str	r5, [r0, #-4]
    d300:	bne	d2e8 <opt_loop+0x168>
    d304:	ldr	r3, [r3, #100]	; 0x64
    d308:	cmp	r3, #0
    d30c:	bne	d27c <opt_loop+0xfc>
    d310:	subs	r1, r1, #1
    d314:	bcs	d26c <opt_loop+0xec>
    d318:	ldr	r3, [pc, #3692]	; e18c <opt_loop+0x100c>
    d31c:	lsl	r2, r2, #2
    d320:	mov	r1, #0
    d324:	add	r3, pc, r3
    d328:	ldr	r0, [r3, #888]	; 0x378
    d32c:	bl	e2c <memset@plt>
    d330:	ldr	r3, [sp, #4]
    d334:	ldr	r2, [r3, #36]	; 0x24
    d338:	cmp	r2, #0
    d33c:	ldrge	lr, [sp]
    d340:	blt	d584 <opt_loop+0x404>
    d344:	ldr	r3, [lr]
    d348:	ldr	r3, [r3, r2, lsl #2]
    d34c:	cmp	r3, #0
    d350:	beq	d3e8 <opt_loop+0x268>
    d354:	ldr	r1, [r3]
    d358:	mov	r6, #1
    d35c:	ldr	ip, [r3, #108]	; 0x6c
    d360:	lsr	r5, r1, #5
    d364:	and	r1, r1, #31
    d368:	ldr	r0, [ip, r5, lsl #2]
    d36c:	orr	r1, r0, r6, lsl r1
    d370:	str	r1, [ip, r5, lsl #2]
    d374:	ldr	r1, [r3, #60]	; 0x3c
    d378:	cmp	r1, #0
    d37c:	beq	d3dc <opt_loop+0x25c>
    d380:	cmp	r4, #0
    d384:	ldr	r0, [r1, #108]	; 0x6c
    d388:	ldr	r5, [r3, #108]	; 0x6c
    d38c:	blt	d3dc <opt_loop+0x25c>
    d390:	mov	r1, r4
    d394:	ldr	ip, [r0], #4
    d398:	sub	r1, r1, #1
    d39c:	cmn	r1, #1
    d3a0:	ldr	r6, [r5], #4
    d3a4:	orr	ip, ip, r6
    d3a8:	str	ip, [r0, #-4]
    d3ac:	bne	d394 <opt_loop+0x214>
    d3b0:	ldr	r1, [r3, #84]	; 0x54
    d3b4:	mov	r0, r4
    d3b8:	ldr	r5, [r3, #108]	; 0x6c
    d3bc:	ldr	r1, [r1, #108]	; 0x6c
    d3c0:	sub	r0, r0, #1
    d3c4:	ldr	ip, [r1], #4
    d3c8:	cmn	r0, #1
    d3cc:	ldr	r6, [r5], #4
    d3d0:	orr	ip, ip, r6
    d3d4:	str	ip, [r1, #-4]
    d3d8:	bne	d3c0 <opt_loop+0x240>
    d3dc:	ldr	r3, [r3, #100]	; 0x64
    d3e0:	cmp	r3, #0
    d3e4:	bne	d354 <opt_loop+0x1d4>
    d3e8:	subs	r2, r2, #1
    d3ec:	bcs	d344 <opt_loop+0x1c4>
    d3f0:	ldr	r3, [sp, #4]
    d3f4:	ldr	r9, [r3, #36]	; 0x24
    d3f8:	cmp	r9, #0
    d3fc:	str	r9, [sp, #8]
    d400:	blt	d584 <opt_loop+0x404>
    d404:	ldr	r3, [sp]
    d408:	lsl	r2, r9, #2
    d40c:	str	r2, [sp, #12]
    d410:	str	sl, [sp, #16]
    d414:	ldr	r3, [r3]
    d418:	add	fp, r3, r2
    d41c:	ldr	r4, [fp], #-4
    d420:	cmp	r4, #0
    d424:	beq	d508 <opt_loop+0x388>
    d428:	ldr	r7, [r4, #4]
    d42c:	cmp	r7, #0
    d430:	beq	d4d0 <opt_loop+0x350>
    d434:	mov	r6, #0
    d438:	mov	r2, r6
    d43c:	mov	r5, r6
    d440:	b	d490 <opt_loop+0x310>
    d444:	cmp	r0, #17
    d448:	bgt	eafc <opt_loop+0x197c>
    d44c:	mov	r3, #1
    d450:	lsl	r0, r3, r0
    d454:	tst	r0, r5
    d458:	orreq	r2, r2, r0
    d45c:	mov	r1, sl
    d460:	mov	r0, r8
    d464:	bl	cb50 <atomdef.isra.1>
    d468:	cmp	r0, #0
    d46c:	blt	d484 <opt_loop+0x304>
    d470:	mov	r3, #1
    d474:	lsl	r0, r3, r0
    d478:	tst	r0, r2
    d47c:	orr	r5, r5, r0
    d480:	orreq	r6, r6, r0
    d484:	ldr	r7, [r7, #16]
    d488:	cmp	r7, #0
    d48c:	beq	d4dc <opt_loop+0x35c>
    d490:	ldr	r8, [r7]
    d494:	cmn	r8, #1
    d498:	beq	d484 <opt_loop+0x304>
    d49c:	add	sl, r7, #12
    d4a0:	mov	r0, r8
    d4a4:	mov	r1, sl
    d4a8:	bl	cc80 <atomuse.isra.8>
    d4ac:	cmp	r0, #0
    d4b0:	blt	d45c <opt_loop+0x2dc>
    d4b4:	cmp	r0, #18
    d4b8:	bne	d444 <opt_loop+0x2c4>
    d4bc:	tst	r5, #131072	; 0x20000
    d4c0:	orreq	r2, r2, #131072	; 0x20000
    d4c4:	tst	r5, #65536	; 0x10000
    d4c8:	orreq	r2, r2, #65536	; 0x10000
    d4cc:	b	d45c <opt_loop+0x2dc>
    d4d0:	mov	r6, r7
    d4d4:	mov	r2, r7
    d4d8:	mov	r5, r7
    d4dc:	ldr	r0, [r4, #8]
    d4e0:	and	r3, r0, #7
    d4e4:	cmp	r3, #5
    d4e8:	beq	e0b0 <opt_loop+0xf30>
    d4ec:	mov	r3, #0
    d4f0:	str	r5, [r4, #116]	; 0x74
    d4f4:	str	r6, [r4, #120]	; 0x78
    d4f8:	strd	r2, [r4, #124]	; 0x7c
    d4fc:	ldr	r4, [r4, #100]	; 0x64
    d500:	cmp	r4, r3
    d504:	bne	d428 <opt_loop+0x2a8>
    d508:	subs	r9, r9, #1
    d50c:	bcs	d41c <opt_loop+0x29c>
    d510:	ldr	r3, [sp, #8]
    d514:	ldr	sl, [sp, #16]
    d518:	cmp	r3, #0
    d51c:	ble	d584 <opt_loop+0x404>
    d520:	ldr	r3, [sp]
    d524:	ldr	r0, [r3]
    d528:	ldr	r3, [sp, #12]
    d52c:	add	ip, r3, r0
    d530:	ldr	r3, [r0, #4]!
    d534:	cmp	r3, #0
    d538:	beq	d57c <opt_loop+0x3fc>
    d53c:	ldr	r2, [r3, #60]	; 0x3c
    d540:	ldr	r1, [r3, #84]	; 0x54
    d544:	ldr	lr, [r3, #120]	; 0x78
    d548:	ldr	r2, [r2, #124]	; 0x7c
    d54c:	ldr	r5, [r1, #124]	; 0x7c
    d550:	ldr	r4, [r3, #128]	; 0x80
    d554:	ldr	r1, [r3, #124]	; 0x7c
    d558:	orr	r2, r2, r5
    d55c:	orr	r2, r2, r4
    d560:	bic	lr, r2, lr
    d564:	str	r2, [r3, #128]	; 0x80
    d568:	orr	r2, r1, lr
    d56c:	str	r2, [r3, #124]	; 0x7c
    d570:	ldr	r3, [r3, #100]	; 0x64
    d574:	cmp	r3, #0
    d578:	bne	d53c <opt_loop+0x3bc>
    d57c:	cmp	ip, r0
    d580:	bne	d530 <opt_loop+0x3b0>
    d584:	ldr	r2, [pc, #3076]	; e190 <opt_loop+0x1010>
    d588:	add	r2, pc, r2
    d58c:	ldr	r4, [r2, #4]
    d590:	ldr	r3, [r2, #896]	; 0x380
    d594:	ldr	r2, [r2, #892]	; 0x37c
    d598:	mul	r3, r3, r4
    d59c:	cmp	r3, #0
    d5a0:	addgt	r3, r2, r3, lsl #2
    d5a4:	mvngt	r1, #0
    d5a8:	ble	d5b8 <opt_loop+0x438>
    d5ac:	str	r1, [r3, #-4]!
    d5b0:	cmp	r2, r3
    d5b4:	bne	d5ac <opt_loop+0x42c>
    d5b8:	ldr	r5, [sp, #4]
    d5bc:	lsl	r4, r4, #2
    d5c0:	mov	r1, #0
    d5c4:	mov	r2, r4
    d5c8:	ldr	r0, [r5, #56]	; 0x38
    d5cc:	bl	e2c <memset@plt>
    d5d0:	mov	r2, r4
    d5d4:	mov	r1, #0
    d5d8:	ldr	r0, [r5, #80]	; 0x50
    d5dc:	bl	e2c <memset@plt>
    d5e0:	ldr	r5, [r5, #36]	; 0x24
    d5e4:	cmp	r5, #0
    d5e8:	ldrge	r6, [sp]
    d5ec:	blt	d624 <opt_loop+0x4a4>
    d5f0:	ldr	r3, [r6]
    d5f4:	ldr	r4, [r3, r5, lsl #2]
    d5f8:	cmp	r4, #0
    d5fc:	beq	d61c <opt_loop+0x49c>
    d600:	add	r0, r4, #48	; 0x30
    d604:	bl	c374 <propedom>
    d608:	add	r0, r4, #72	; 0x48
    d60c:	bl	c374 <propedom>
    d610:	ldr	r4, [r4, #100]	; 0x64
    d614:	cmp	r4, #0
    d618:	bne	d600 <opt_loop+0x480>
    d61c:	subs	r5, r5, #1
    d620:	bcs	d5f0 <opt_loop+0x470>
    d624:	ldr	r4, [pc, #2920]	; e194 <opt_loop+0x1014>
    d628:	mov	r5, #0
    d62c:	mov	r1, r5
    d630:	ldr	r0, [pc, #2912]	; e198 <opt_loop+0x1018>
    d634:	ldr	r2, [pc, #2912]	; e19c <opt_loop+0x101c>
    d638:	add	r4, pc, r4
    d63c:	ldr	lr, [sp, #44]	; 0x2c
    d640:	str	r5, [r4, #860]	; 0x35c
    d644:	ldr	r3, [pc, #2900]	; e1a0 <opt_loop+0x1020>
    d648:	ldr	r6, [sp, #4]
    d64c:	ldr	r0, [lr, r0]
    d650:	ldr	ip, [lr, r2]
    d654:	ldr	r2, [r4, #900]	; 0x384
    d658:	ldr	r0, [r0]
    d65c:	lsl	r2, r2, #3
    d660:	str	r0, [ip]
    d664:	ldr	r9, [lr, r3]
    d668:	ldr	r0, [r9]
    d66c:	bl	e2c <memset@plt>
    d670:	mov	r1, r5
    d674:	add	r0, r4, #8
    d678:	mov	r2, #852	; 0x354
    d67c:	bl	e2c <memset@plt>
    d680:	ldr	r4, [r6, #36]!	; 0x24
    d684:	mov	r0, r6
    d688:	str	r4, [sp, #28]
    d68c:	str	r6, [sp, #36]	; 0x24
    d690:	bl	cbb8 <find_inedges.isra.6>
    d694:	cmp	r4, r5
    d698:	blt	eac4 <opt_loop+0x1944>
    d69c:	ldr	r3, [pc, #2816]	; e1a4 <opt_loop+0x1024>
    d6a0:	add	r3, pc, r3
    d6a4:	str	r3, [sp, #20]
    d6a8:	ldr	r3, [sp, #28]
    d6ac:	str	r3, [sp, #8]
    d6b0:	ldr	r3, [pc, #2800]	; e1a8 <opt_loop+0x1028>
    d6b4:	add	r3, pc, r3
    d6b8:	str	r3, [sp, #24]
    d6bc:	ldr	r3, [sp]
    d6c0:	ldr	r2, [sp, #8]
    d6c4:	ldr	r3, [r3]
    d6c8:	ldr	r4, [r3, r2, lsl #2]
    d6cc:	cmp	r4, #0
    d6d0:	beq	dc70 <opt_loop+0xaf0>
    d6d4:	mov	r8, #0
    d6d8:	ldr	r5, [r4, #112]	; 0x70
    d6dc:	add	r6, r4, #136	; 0x88
    d6e0:	cmp	r5, #0
    d6e4:	beq	e004 <opt_loop+0xe84>
    d6e8:	ldr	r1, [r5, #16]
    d6ec:	mov	r2, #72	; 0x48
    d6f0:	mov	r0, r6
    d6f4:	add	r1, r1, #136	; 0x88
    d6f8:	bl	d6c <memcpy@plt>
    d6fc:	b	d72c <opt_loop+0x5ac>
    d700:	add	r2, r4, #132	; 0x84
    d704:	mov	r3, #0
    d708:	ldr	ip, [r5, #16]
    d70c:	add	r1, r3, #34	; 0x22
    d710:	add	r3, r3, #1
    d714:	ldr	r0, [r2, #4]!
    d718:	ldr	r1, [ip, r1, lsl #2]
    d71c:	cmp	r0, r1
    d720:	strne	r8, [r2]
    d724:	cmp	r3, #18
    d728:	bne	d708 <opt_loop+0x588>
    d72c:	ldr	r5, [r5, #20]
    d730:	cmp	r5, #0
    d734:	bne	d700 <opt_loop+0x580>
    d738:	ldr	r5, [r4, #4]
    d73c:	ldr	r0, [r4, #200]	; 0xc8
    d740:	ldr	r3, [r4, #204]	; 0xcc
    d744:	cmp	r5, #0
    d748:	str	r3, [sp, #12]
    d74c:	beq	e3b8 <opt_loop+0x1238>
    d750:	mov	fp, r0
    d754:	ldr	r3, [r5]
    d758:	cmp	r3, #177	; 0xb1
    d75c:	addls	pc, pc, r3, lsl #2
    d760:	b	da54 <opt_loop+0x8d4>
    d764:	b	de8c <opt_loop+0xd0c>
    d768:	b	de70 <opt_loop+0xcf0>
    d76c:	b	df5c <opt_loop+0xddc>
    d770:	b	df38 <opt_loop+0xdb8>
    d774:	b	deb8 <opt_loop+0xd38>
    d778:	b	da54 <opt_loop+0x8d4>
    d77c:	b	da54 <opt_loop+0x8d4>
    d780:	b	dea8 <opt_loop+0xd28>
    d784:	b	da54 <opt_loop+0x8d4>
    d788:	b	da54 <opt_loop+0x8d4>
    d78c:	b	da54 <opt_loop+0x8d4>
    d790:	b	da54 <opt_loop+0x8d4>
    d794:	b	df70 <opt_loop+0xdf0>
    d798:	b	da54 <opt_loop+0x8d4>
    d79c:	b	da54 <opt_loop+0x8d4>
    d7a0:	b	da54 <opt_loop+0x8d4>
    d7a4:	b	da54 <opt_loop+0x8d4>
    d7a8:	b	da54 <opt_loop+0x8d4>
    d7ac:	b	da54 <opt_loop+0x8d4>
    d7b0:	b	da54 <opt_loop+0x8d4>
    d7b4:	b	deb8 <opt_loop+0xd38>
    d7b8:	b	da54 <opt_loop+0x8d4>
    d7bc:	b	da54 <opt_loop+0x8d4>
    d7c0:	b	da54 <opt_loop+0x8d4>
    d7c4:	b	da54 <opt_loop+0x8d4>
    d7c8:	b	da54 <opt_loop+0x8d4>
    d7cc:	b	da54 <opt_loop+0x8d4>
    d7d0:	b	da54 <opt_loop+0x8d4>
    d7d4:	b	df70 <opt_loop+0xdf0>
    d7d8:	b	da54 <opt_loop+0x8d4>
    d7dc:	b	da54 <opt_loop+0x8d4>
    d7e0:	b	da54 <opt_loop+0x8d4>
    d7e4:	b	dd9c <opt_loop+0xc1c>
    d7e8:	b	da54 <opt_loop+0x8d4>
    d7ec:	b	da54 <opt_loop+0x8d4>
    d7f0:	b	da54 <opt_loop+0x8d4>
    d7f4:	b	deb8 <opt_loop+0xd38>
    d7f8:	b	da54 <opt_loop+0x8d4>
    d7fc:	b	da54 <opt_loop+0x8d4>
    d800:	b	da54 <opt_loop+0x8d4>
    d804:	b	dd9c <opt_loop+0xc1c>
    d808:	b	da54 <opt_loop+0x8d4>
    d80c:	b	da54 <opt_loop+0x8d4>
    d810:	b	da54 <opt_loop+0x8d4>
    d814:	b	df70 <opt_loop+0xdf0>
    d818:	b	da54 <opt_loop+0x8d4>
    d81c:	b	da54 <opt_loop+0x8d4>
    d820:	b	da54 <opt_loop+0x8d4>
    d824:	b	dd9c <opt_loop+0xc1c>
    d828:	b	da54 <opt_loop+0x8d4>
    d82c:	b	da54 <opt_loop+0x8d4>
    d830:	b	da54 <opt_loop+0x8d4>
    d834:	b	deb8 <opt_loop+0xd38>
    d838:	b	da54 <opt_loop+0x8d4>
    d83c:	b	da54 <opt_loop+0x8d4>
    d840:	b	da54 <opt_loop+0x8d4>
    d844:	b	da54 <opt_loop+0x8d4>
    d848:	b	da54 <opt_loop+0x8d4>
    d84c:	b	da54 <opt_loop+0x8d4>
    d850:	b	da54 <opt_loop+0x8d4>
    d854:	b	df70 <opt_loop+0xdf0>
    d858:	b	da54 <opt_loop+0x8d4>
    d85c:	b	da54 <opt_loop+0x8d4>
    d860:	b	da54 <opt_loop+0x8d4>
    d864:	b	dd5c <opt_loop+0xbdc>
    d868:	b	da54 <opt_loop+0x8d4>
    d86c:	b	da54 <opt_loop+0x8d4>
    d870:	b	da54 <opt_loop+0x8d4>
    d874:	b	deb8 <opt_loop+0xd38>
    d878:	b	da54 <opt_loop+0x8d4>
    d87c:	b	da54 <opt_loop+0x8d4>
    d880:	b	da54 <opt_loop+0x8d4>
    d884:	b	dd5c <opt_loop+0xbdc>
    d888:	b	da54 <opt_loop+0x8d4>
    d88c:	b	da54 <opt_loop+0x8d4>
    d890:	b	da54 <opt_loop+0x8d4>
    d894:	b	df70 <opt_loop+0xdf0>
    d898:	b	da54 <opt_loop+0x8d4>
    d89c:	b	da54 <opt_loop+0x8d4>
    d8a0:	b	da54 <opt_loop+0x8d4>
    d8a4:	b	dd5c <opt_loop+0xbdc>
    d8a8:	b	da54 <opt_loop+0x8d4>
    d8ac:	b	da54 <opt_loop+0x8d4>
    d8b0:	b	da54 <opt_loop+0x8d4>
    d8b4:	b	deb8 <opt_loop+0xd38>
    d8b8:	b	da54 <opt_loop+0x8d4>
    d8bc:	b	da54 <opt_loop+0x8d4>
    d8c0:	b	da54 <opt_loop+0x8d4>
    d8c4:	b	da54 <opt_loop+0x8d4>
    d8c8:	b	da54 <opt_loop+0x8d4>
    d8cc:	b	da54 <opt_loop+0x8d4>
    d8d0:	b	da54 <opt_loop+0x8d4>
    d8d4:	b	df70 <opt_loop+0xdf0>
    d8d8:	b	da54 <opt_loop+0x8d4>
    d8dc:	b	da54 <opt_loop+0x8d4>
    d8e0:	b	da54 <opt_loop+0x8d4>
    d8e4:	b	dd04 <opt_loop+0xb84>
    d8e8:	b	dde8 <opt_loop+0xc68>
    d8ec:	b	da54 <opt_loop+0x8d4>
    d8f0:	b	da54 <opt_loop+0x8d4>
    d8f4:	b	deb8 <opt_loop+0xd38>
    d8f8:	b	da54 <opt_loop+0x8d4>
    d8fc:	b	da54 <opt_loop+0x8d4>
    d900:	b	da54 <opt_loop+0x8d4>
    d904:	b	da54 <opt_loop+0x8d4>
    d908:	b	da54 <opt_loop+0x8d4>
    d90c:	b	da54 <opt_loop+0x8d4>
    d910:	b	da54 <opt_loop+0x8d4>
    d914:	b	df70 <opt_loop+0xdf0>
    d918:	b	da54 <opt_loop+0x8d4>
    d91c:	b	da54 <opt_loop+0x8d4>
    d920:	b	da54 <opt_loop+0x8d4>
    d924:	b	da54 <opt_loop+0x8d4>
    d928:	b	da54 <opt_loop+0x8d4>
    d92c:	b	da54 <opt_loop+0x8d4>
    d930:	b	da54 <opt_loop+0x8d4>
    d934:	b	deb8 <opt_loop+0xd38>
    d938:	b	da54 <opt_loop+0x8d4>
    d93c:	b	da54 <opt_loop+0x8d4>
    d940:	b	da54 <opt_loop+0x8d4>
    d944:	b	da54 <opt_loop+0x8d4>
    d948:	b	da54 <opt_loop+0x8d4>
    d94c:	b	da54 <opt_loop+0x8d4>
    d950:	b	da54 <opt_loop+0x8d4>
    d954:	b	df70 <opt_loop+0xdf0>
    d958:	b	da54 <opt_loop+0x8d4>
    d95c:	b	da54 <opt_loop+0x8d4>
    d960:	b	da54 <opt_loop+0x8d4>
    d964:	b	ddcc <opt_loop+0xc4c>
    d968:	b	da54 <opt_loop+0x8d4>
    d96c:	b	da54 <opt_loop+0x8d4>
    d970:	b	da54 <opt_loop+0x8d4>
    d974:	b	de40 <opt_loop+0xcc0>
    d978:	b	da54 <opt_loop+0x8d4>
    d97c:	b	da54 <opt_loop+0x8d4>
    d980:	b	dce4 <opt_loop+0xb64>
    d984:	b	da54 <opt_loop+0x8d4>
    d988:	b	da54 <opt_loop+0x8d4>
    d98c:	b	da54 <opt_loop+0x8d4>
    d990:	b	da54 <opt_loop+0x8d4>
    d994:	b	da54 <opt_loop+0x8d4>
    d998:	b	da54 <opt_loop+0x8d4>
    d99c:	b	da54 <opt_loop+0x8d4>
    d9a0:	b	da54 <opt_loop+0x8d4>
    d9a4:	b	da54 <opt_loop+0x8d4>
    d9a8:	b	da54 <opt_loop+0x8d4>
    d9ac:	b	da54 <opt_loop+0x8d4>
    d9b0:	b	da54 <opt_loop+0x8d4>
    d9b4:	b	da54 <opt_loop+0x8d4>
    d9b8:	b	da54 <opt_loop+0x8d4>
    d9bc:	b	da54 <opt_loop+0x8d4>
    d9c0:	b	da54 <opt_loop+0x8d4>
    d9c4:	b	da54 <opt_loop+0x8d4>
    d9c8:	b	da54 <opt_loop+0x8d4>
    d9cc:	b	da54 <opt_loop+0x8d4>
    d9d0:	b	da54 <opt_loop+0x8d4>
    d9d4:	b	da54 <opt_loop+0x8d4>
    d9d8:	b	da54 <opt_loop+0x8d4>
    d9dc:	b	da54 <opt_loop+0x8d4>
    d9e0:	b	da54 <opt_loop+0x8d4>
    d9e4:	b	da54 <opt_loop+0x8d4>
    d9e8:	b	da54 <opt_loop+0x8d4>
    d9ec:	b	da54 <opt_loop+0x8d4>
    d9f0:	b	da54 <opt_loop+0x8d4>
    d9f4:	b	da54 <opt_loop+0x8d4>
    d9f8:	b	da54 <opt_loop+0x8d4>
    d9fc:	b	da54 <opt_loop+0x8d4>
    da00:	b	da54 <opt_loop+0x8d4>
    da04:	b	da54 <opt_loop+0x8d4>
    da08:	b	da54 <opt_loop+0x8d4>
    da0c:	b	da54 <opt_loop+0x8d4>
    da10:	b	da54 <opt_loop+0x8d4>
    da14:	b	da54 <opt_loop+0x8d4>
    da18:	b	da54 <opt_loop+0x8d4>
    da1c:	b	da54 <opt_loop+0x8d4>
    da20:	b	da54 <opt_loop+0x8d4>
    da24:	b	da54 <opt_loop+0x8d4>
    da28:	b	da2c <opt_loop+0x8ac>
    da2c:	mov	r2, #0
    da30:	mov	r0, #177	; 0xb1
    da34:	ldr	r1, [r5, #12]
    da38:	bl	c41c <F>
    da3c:	cmp	sl, #0
    da40:	beq	da50 <opt_loop+0x8d0>
    da44:	ldr	r3, [r4, #204]	; 0xcc
    da48:	cmp	r0, r3
    da4c:	beq	dd50 <opt_loop+0xbd0>
    da50:	str	r0, [r4, #204]	; 0xcc
    da54:	ldr	r5, [r5, #16]
    da58:	cmp	r5, #0
    da5c:	bne	d754 <opt_loop+0x5d4>
    da60:	cmp	sl, #0
    da64:	mov	r0, fp
    da68:	ldr	r5, [r4, #4]
    da6c:	beq	da9c <opt_loop+0x91c>
    da70:	adds	r2, r0, #0
    da74:	ldr	r3, [r4, #8]
    da78:	movne	r2, #1
    da7c:	ldr	r1, [r4, #128]	; 0x80
    da80:	cmp	r1, #0
    da84:	movne	r2, #0
    da88:	cmp	r2, #0
    da8c:	bne	e36c <opt_loop+0x11ec>
    da90:	and	r2, r3, #7
    da94:	cmp	r2, #6
    da98:	beq	e39c <opt_loop+0x121c>
    da9c:	cmp	r5, #0
    daa0:	beq	db9c <opt_loop+0xa1c>
    daa4:	ldr	r2, [pc, #1792]	; e1ac <opt_loop+0x102c>
    daa8:	mov	r6, #0
    daac:	mvn	fp, #0
    dab0:	ldr	r0, [r5]
    dab4:	ldr	r3, [r5, #16]
    dab8:	add	r2, pc, r2
    dabc:	ldr	lr, [r2, #876]	; 0x36c
    dac0:	mov	r2, r0
    dac4:	mov	r7, r5
    dac8:	cmn	r2, #1
    dacc:	bne	e23c <opt_loop+0x10bc>
    dad0:	cmp	r3, #0
    dad4:	bne	e228 <opt_loop+0x10a8>
    dad8:	cmp	r6, #0
    dadc:	beq	daec <opt_loop+0x96c>
    dae0:	ldr	r3, [pc, #1736]	; e1b0 <opt_loop+0x1030>
    dae4:	add	r3, pc, r3
    dae8:	str	lr, [r3, #876]	; 0x36c
    daec:	ldr	r2, [r4, #8]
    daf0:	cmp	r2, #21
    daf4:	beq	e1f4 <opt_loop+0x1074>
    daf8:	ldr	r3, [r9]
    dafc:	cmp	r2, #69	; 0x45
    db00:	ldr	r0, [r4, #204]	; 0xcc
    db04:	add	r1, r3, r0, lsl #3
    db08:	beq	e150 <opt_loop+0xfd0>
    db0c:	ldr	r0, [r3, r0, lsl #3]
    db10:	cmp	r0, #0
    db14:	ldr	ip, [r4, #200]	; 0xc8
    db18:	add	r3, r3, ip, lsl #3
    db1c:	beq	e134 <opt_loop+0xfb4>
    db20:	tst	r2, #8
    db24:	beq	db38 <opt_loop+0x9b8>
    db28:	ldr	r1, [r1, #4]
    db2c:	bic	r2, r2, #8
    db30:	str	r2, [r4, #8]
    db34:	str	r1, [r4, #20]
    db38:	ldr	r2, [r3]
    db3c:	cmp	r2, #0
    db40:	beq	db9c <opt_loop+0xa1c>
    db44:	ldr	r2, [r4, #8]
    db48:	and	r2, r2, #240	; 0xf0
    db4c:	cmp	r2, #32
    db50:	ldr	r3, [r3, #4]
    db54:	beq	e118 <opt_loop+0xf98>
    db58:	ble	e0fc <opt_loop+0xf7c>
    db5c:	cmp	r2, #48	; 0x30
    db60:	bne	e30c <opt_loop+0x118c>
    db64:	ldr	r2, [r4, #20]
    db68:	cmp	r2, r3
    db6c:	movhi	r3, #0
    db70:	movls	r3, #1
    db74:	ldr	r1, [r4, #60]	; 0x3c
    db78:	ldr	r2, [r4, #84]	; 0x54
    db7c:	cmp	r2, r1
    db80:	beq	db90 <opt_loop+0xa10>
    db84:	ldr	r0, [pc, #1576]	; e1b4 <opt_loop+0x1034>
    db88:	add	r0, pc, r0
    db8c:	str	r8, [r0, #876]	; 0x36c
    db90:	cmp	r3, #0
    db94:	strne	r1, [r4, #84]	; 0x54
    db98:	streq	r2, [r4, #60]	; 0x3c
    db9c:	add	r6, sp, #48	; 0x30
    dba0:	mov	r2, #72	; 0x48
    dba4:	mov	r0, r6
    dba8:	mov	r1, #0
    dbac:	bl	e2c <memset@plt>
    dbb0:	ldr	r5, [r4, #4]
    dbb4:	cmp	r5, #0
    dbb8:	beq	dbd4 <opt_loop+0xa54>
    dbbc:	mov	r0, r5
    dbc0:	mov	r1, r6
    dbc4:	bl	cd28 <deadstmt>
    dbc8:	ldr	r5, [r5, #16]
    dbcc:	cmp	r5, #0
    dbd0:	bne	dbbc <opt_loop+0xa3c>
    dbd4:	mov	r1, r6
    dbd8:	add	r0, r4, #8
    dbdc:	bl	cd28 <deadstmt>
    dbe0:	ldr	r2, [pc, #1488]	; e1b8 <opt_loop+0x1038>
    dbe4:	mov	r1, #0
    dbe8:	add	ip, sp, #44	; 0x2c
    dbec:	mov	r3, r1
    dbf0:	mvn	r5, #0
    dbf4:	add	r2, pc, r2
    dbf8:	ldr	r0, [r2, #876]	; 0x36c
    dbfc:	ldr	lr, [ip, #4]!
    dc00:	cmp	lr, #0
    dc04:	beq	dc24 <opt_loop+0xaa4>
    dc08:	ldr	r2, [r4, #128]	; 0x80
    dc0c:	mov	r6, #1
    dc10:	ands	r2, r2, r6, lsl r3
    dc14:	bne	dc24 <opt_loop+0xaa4>
    dc18:	mov	r0, r2
    dc1c:	mov	r1, r6
    dc20:	str	r5, [lr]
    dc24:	add	r3, r3, #1
    dc28:	cmp	r3, #18
    dc2c:	bne	dbfc <opt_loop+0xa7c>
    dc30:	cmp	r1, #0
    dc34:	beq	dc44 <opt_loop+0xac4>
    dc38:	ldr	r3, [pc, #1404]	; e1bc <opt_loop+0x103c>
    dc3c:	add	r3, pc, r3
    dc40:	str	r0, [r3, #876]	; 0x36c
    dc44:	ldr	r3, [r4, #8]
    dc48:	ands	r2, r3, #8
    dc4c:	beq	e2f4 <opt_loop+0x1174>
    dc50:	ldr	r2, [r4, #204]	; 0xcc
    dc54:	str	r2, [r4, #132]	; 0x84
    dc58:	rsb	r2, r3, #0
    dc5c:	str	r3, [r4, #52]	; 0x34
    dc60:	str	r2, [r4, #76]	; 0x4c
    dc64:	ldr	r4, [r4, #100]	; 0x64
    dc68:	cmp	r4, #0
    dc6c:	bne	d6d8 <opt_loop+0x558>
    dc70:	ldr	r3, [sp, #8]
    dc74:	sub	r3, r3, #1
    dc78:	cmn	r3, #1
    dc7c:	str	r3, [sp, #8]
    dc80:	bne	d6bc <opt_loop+0x53c>
    dc84:	cmp	sl, #0
    dc88:	bne	ea8c <opt_loop+0x190c>
    dc8c:	ldr	r3, [sp, #28]
    dc90:	cmp	r3, #0
    dc94:	beq	eacc <opt_loop+0x194c>
    dc98:	ldr	r7, [sp]
    dc9c:	add	r4, r3, #1
    dca0:	mov	r6, #1
    dca4:	ldr	r3, [r7]
    dca8:	ldr	r5, [r3, r6, lsl #2]
    dcac:	cmp	r5, #0
    dcb0:	beq	dcd0 <opt_loop+0xb50>
    dcb4:	add	r0, r5, #48	; 0x30
    dcb8:	bl	ced4 <opt_j>
    dcbc:	add	r0, r5, #72	; 0x48
    dcc0:	bl	ced4 <opt_j>
    dcc4:	ldr	r5, [r5, #100]	; 0x64
    dcc8:	cmp	r5, #0
    dccc:	bne	dcb4 <opt_loop+0xb34>
    dcd0:	add	r3, r6, #1
    dcd4:	cmp	r3, r4
    dcd8:	beq	e668 <opt_loop+0x14e8>
    dcdc:	mov	r6, r3
    dce0:	b	dca4 <opt_loop+0xb24>
    dce4:	cmp	sl, #0
    dce8:	ldr	r3, [r4, #204]	; 0xcc
    dcec:	beq	dcfc <opt_loop+0xb7c>
    dcf0:	ldr	r2, [r4, #200]	; 0xc8
    dcf4:	cmp	r3, r2
    dcf8:	beq	dd50 <opt_loop+0xbd0>
    dcfc:	str	r3, [r4, #200]	; 0xc8
    dd00:	b	da54 <opt_loop+0x8d4>
    dd04:	ldr	r3, [r5, #12]
    dd08:	cmp	sl, #0
    dd0c:	ldr	r3, [r6, r3, lsl #2]
    dd10:	beq	dcfc <opt_loop+0xb7c>
    dd14:	lsl	r1, r3, #3
    dd18:	ldr	r2, [r9]
    dd1c:	ldr	r2, [r2, r3, lsl #3]
    dd20:	cmp	r2, #0
    dd24:	beq	dcf0 <opt_loop+0xb70>
    dd28:	str	r8, [r5]
    dd2c:	ldr	r2, [r9]
    dd30:	ldr	r0, [sp, #20]
    dd34:	add	r2, r2, r1
    dd38:	ldr	r2, [r2, #4]
    dd3c:	str	r8, [r0, #876]	; 0x36c
    dd40:	str	r2, [r5, #12]
    dd44:	ldr	r2, [r4, #200]	; 0xc8
    dd48:	cmp	r3, r2
    dd4c:	bne	dcfc <opt_loop+0xb7c>
    dd50:	mvn	r3, #0
    dd54:	str	r3, [r5]
    dd58:	b	da54 <opt_loop+0x8d4>
    dd5c:	cmp	sl, #0
    dd60:	ldr	r1, [r5, #12]
    dd64:	ldr	r2, [r4, #204]	; 0xcc
    dd68:	beq	e360 <opt_loop+0x11e0>
    dd6c:	lsl	ip, r2, #3
    dd70:	ldr	r0, [r9]
    dd74:	ldr	r0, [r0, r2, lsl #3]
    dd78:	cmp	r0, #0
    dd7c:	bne	e320 <opt_loop+0x11a0>
    dd80:	mov	r0, r3
    dd84:	bl	c41c <F>
    dd88:	ldr	r3, [r4, #200]	; 0xc8
    dd8c:	cmp	r3, r0
    dd90:	beq	dd50 <opt_loop+0xbd0>
    dd94:	str	r0, [r4, #200]	; 0xc8
    dd98:	b	da54 <opt_loop+0x8d4>
    dd9c:	mov	r0, r3
    dda0:	mov	r2, #0
    dda4:	ldr	r1, [r5, #12]
    dda8:	bl	c41c <F>
    ddac:	cmp	sl, #0
    ddb0:	beq	dd94 <opt_loop+0xc14>
    ddb4:	ldr	r3, [r4, #200]	; 0xc8
    ddb8:	cmp	r0, r3
    ddbc:	bne	dd94 <opt_loop+0xc14>
    ddc0:	mvn	r3, #0
    ddc4:	str	r3, [r5]
    ddc8:	b	da54 <opt_loop+0x8d4>
    ddcc:	mov	r2, #0
    ddd0:	mov	r0, #128	; 0x80
    ddd4:	mov	r1, r2
    ddd8:	bl	c41c <F>
    dddc:	cmp	sl, #0
    dde0:	beq	dd94 <opt_loop+0xc14>
    dde4:	b	ddb4 <opt_loop+0xc34>
    dde8:	ldr	r3, [r5, #12]
    ddec:	cmp	sl, #0
    ddf0:	ldr	r3, [r6, r3, lsl #2]
    ddf4:	beq	de38 <opt_loop+0xcb8>
    ddf8:	lsl	r1, r3, #3
    ddfc:	ldr	r2, [r9]
    de00:	ldr	r2, [r2, r3, lsl #3]
    de04:	cmp	r2, #0
    de08:	beq	de2c <opt_loop+0xcac>
    de0c:	mov	r2, #1
    de10:	ldr	r0, [sp, #32]
    de14:	str	r2, [r5]
    de18:	ldr	r2, [r9]
    de1c:	str	r8, [r0, #876]	; 0x36c
    de20:	add	r2, r2, r1
    de24:	ldr	r2, [r2, #4]
    de28:	str	r2, [r5, #12]
    de2c:	ldr	r2, [r4, #204]	; 0xcc
    de30:	cmp	r3, r2
    de34:	beq	dd50 <opt_loop+0xbd0>
    de38:	str	r3, [r4, #204]	; 0xcc
    de3c:	b	da54 <opt_loop+0x8d4>
    de40:	cmp	sl, #0
    de44:	ldr	r1, [r4, #200]	; 0xc8
    de48:	beq	de5c <opt_loop+0xcdc>
    de4c:	ldr	r3, [r9]
    de50:	ldr	r3, [r3, r1, lsl #3]
    de54:	cmp	r3, #0
    de58:	bne	dfd0 <opt_loop+0xe50>
    de5c:	mov	r2, #0
    de60:	mov	r0, #132	; 0x84
    de64:	bl	c41c <F>
    de68:	str	r0, [r4, #200]	; 0xc8
    de6c:	b	da54 <opt_loop+0x8d4>
    de70:	mov	r2, #0
    de74:	ldr	r1, [r5, #12]
    de78:	mov	r0, r2
    de7c:	bl	c41c <F>
    de80:	cmp	sl, #0
    de84:	beq	da50 <opt_loop+0x8d0>
    de88:	b	da44 <opt_loop+0x8c4>
    de8c:	mov	r2, #0
    de90:	ldr	r1, [r5, #12]
    de94:	mov	r0, r2
    de98:	bl	c41c <F>
    de9c:	cmp	sl, #0
    dea0:	beq	dd94 <opt_loop+0xc14>
    dea4:	b	ddb4 <opt_loop+0xc34>
    dea8:	cmp	sl, #0
    deac:	ldr	r3, [r4, #200]	; 0xc8
    deb0:	beq	de38 <opt_loop+0xcb8>
    deb4:	b	de2c <opt_loop+0xcac>
    deb8:	cmp	sl, #0
    debc:	ldr	r1, [r5, #12]
    dec0:	beq	e018 <opt_loop+0xe98>
    dec4:	cmp	r1, #0
    dec8:	bne	def8 <opt_loop+0xd78>
    decc:	and	r2, r3, #224	; 0xe0
    ded0:	and	r0, r3, #176	; 0xb0
    ded4:	cmp	r0, #0
    ded8:	cmpne	r2, #96	; 0x60
    dedc:	moveq	r2, #1
    dee0:	movne	r2, #0
    dee4:	beq	dd50 <opt_loop+0xbd0>
    dee8:	and	r0, r3, #240	; 0xf0
    deec:	cmp	r0, #80	; 0x50
    def0:	cmpne	r0, #32
    def4:	beq	e650 <opt_loop+0x14d0>
    def8:	ldr	r2, [r9]
    defc:	ldr	r7, [r4, #200]	; 0xc8
    df00:	ldr	r2, [r2, r7, lsl #3]
    df04:	cmp	r2, #0
    df08:	bne	e0e4 <opt_loop+0xf64>
    df0c:	mov	r2, #0
    df10:	str	r3, [sp, #16]
    df14:	mov	r0, r2
    df18:	bl	c41c <F>
    df1c:	ldr	r3, [sp, #16]
    df20:	mov	r2, r0
    df24:	mov	r1, r7
    df28:	mov	r0, r3
    df2c:	bl	c41c <F>
    df30:	str	r0, [r4, #200]	; 0xc8
    df34:	b	da54 <opt_loop+0x8d4>
    df38:	cmp	sl, #0
    df3c:	ldr	r3, [r5, #12]
    df40:	ldr	r2, [r4, #204]	; 0xcc
    df44:	beq	df54 <opt_loop+0xdd4>
    df48:	ldr	r1, [r6, r3, lsl #2]
    df4c:	cmp	r2, r1
    df50:	beq	dd50 <opt_loop+0xbd0>
    df54:	str	r2, [r6, r3, lsl #2]
    df58:	b	da54 <opt_loop+0x8d4>
    df5c:	cmp	sl, #0
    df60:	ldr	r3, [r5, #12]
    df64:	ldr	r2, [r4, #200]	; 0xc8
    df68:	beq	df54 <opt_loop+0xdd4>
    df6c:	b	df48 <opt_loop+0xdc8>
    df70:	cmp	sl, #0
    df74:	ldr	r1, [r4, #200]	; 0xc8
    df78:	ldr	r2, [r4, #204]	; 0xcc
    df7c:	beq	e360 <opt_loop+0x11e0>
    df80:	and	r7, r3, #240	; 0xf0
    df84:	ldr	r0, [r9]
    df88:	ldr	lr, [r0, r2, lsl #3]
    df8c:	add	ip, r0, r1, lsl #3
    df90:	ldr	r0, [r0, r1, lsl #3]
    df94:	cmp	lr, #0
    df98:	beq	e074 <opt_loop+0xef4>
    df9c:	cmp	r0, #0
    dfa0:	beq	e020 <opt_loop+0xea0>
    dfa4:	mov	r3, r2
    dfa8:	mov	r2, r1
    dfac:	add	r1, r5, #12
    dfb0:	mov	r0, r5
    dfb4:	bl	cdc0 <fold_op.isra.10>
    dfb8:	mov	r2, #0
    dfbc:	ldr	r1, [r5, #12]
    dfc0:	mov	r0, r2
    dfc4:	bl	c41c <F>
    dfc8:	str	r0, [r4, #200]	; 0xc8
    dfcc:	b	da54 <opt_loop+0x8d4>
    dfd0:	str	r8, [r5]
    dfd4:	mov	r2, #0
    dfd8:	ldr	r3, [r9]
    dfdc:	mov	r0, r2
    dfe0:	ldr	r1, [r4, #200]	; 0xc8
    dfe4:	add	r3, r3, r1, lsl #3
    dfe8:	ldr	r3, [r3, #4]
    dfec:	rsb	r3, r3, #0
    dff0:	mov	r1, r3
    dff4:	str	r3, [r5, #12]
    dff8:	bl	c41c <F>
    dffc:	str	r0, [r4, #200]	; 0xc8
    e000:	b	da54 <opt_loop+0x8d4>
    e004:	mov	r1, r5
    e008:	mov	r2, #72	; 0x48
    e00c:	mov	r0, r6
    e010:	bl	e2c <memset@plt>
    e014:	b	d738 <opt_loop+0x5b8>
    e018:	ldr	r7, [r4, #200]	; 0xc8
    e01c:	b	df0c <opt_loop+0xd8c>
    e020:	ldr	r3, [sp, #24]
    e024:	orr	r7, r7, #4
    e028:	mov	r2, r0
    e02c:	str	r7, [r5]
    e030:	ldr	r1, [r4, #204]	; 0xcc
    e034:	str	r0, [r3, #876]	; 0x36c
    e038:	ldr	r3, [r9]
    e03c:	add	r3, r3, r1, lsl #3
    e040:	ldr	r3, [r3, #4]
    e044:	mov	r1, r3
    e048:	str	r3, [r5, #12]
    e04c:	ldr	r3, [r4, #200]	; 0xc8
    e050:	str	r3, [sp, #16]
    e054:	bl	c41c <F>
    e058:	ldr	r3, [sp, #16]
    e05c:	mov	r2, r0
    e060:	mov	r0, r7
    e064:	mov	r1, r3
    e068:	bl	c41c <F>
    e06c:	str	r0, [r4, #200]	; 0xc8
    e070:	b	da54 <opt_loop+0x8d4>
    e074:	cmp	r0, #0
    e078:	beq	e360 <opt_loop+0x11e0>
    e07c:	ldr	r0, [ip, #4]
    e080:	cmp	r0, #0
    e084:	bne	e360 <opt_loop+0x11e0>
    e088:	tst	r3, #176	; 0xb0
    e08c:	bne	e568 <opt_loop+0x13e8>
    e090:	mov	r3, #135	; 0x87
    e094:	str	r3, [r5]
    e098:	ldrd	r2, [r4, #200]	; 0xc8
    e09c:	cmp	r3, r2
    e0a0:	bne	dcfc <opt_loop+0xb7c>
    e0a4:	mvn	r3, #0
    e0a8:	str	r3, [r5]
    e0ac:	b	da54 <opt_loop+0x8d4>
    e0b0:	add	r1, r4, #20
    e0b4:	bl	cc80 <atomuse.isra.8>
    e0b8:	cmp	r0, #0
    e0bc:	blt	d4ec <opt_loop+0x36c>
    e0c0:	cmp	r0, #18
    e0c4:	beq	e3c4 <opt_loop+0x1244>
    e0c8:	cmp	r0, #17
    e0cc:	bgt	eafc <opt_loop+0x197c>
    e0d0:	mov	r3, #1
    e0d4:	lsl	r0, r3, r0
    e0d8:	tst	r0, r5
    e0dc:	orreq	r2, r2, r0
    e0e0:	b	d4ec <opt_loop+0x36c>
    e0e4:	mov	r2, #0
    e0e8:	mov	r0, r2
    e0ec:	bl	c41c <F>
    e0f0:	mov	r3, r0
    e0f4:	mov	r2, r7
    e0f8:	b	dfac <opt_loop+0xe2c>
    e0fc:	cmp	r2, #16
    e100:	bne	eafc <opt_loop+0x197c>
    e104:	ldr	r2, [r4, #20]
    e108:	sub	r3, r2, r3
    e10c:	clz	r3, r3
    e110:	lsr	r3, r3, #5
    e114:	b	db74 <opt_loop+0x9f4>
    e118:	ldr	r2, [r4, #20]
    e11c:	cmp	r2, r3
    e120:	movcs	r3, #0
    e124:	movcc	r3, #1
    e128:	b	db74 <opt_loop+0x9f4>
    e12c:	ldr	r2, [r4, #200]	; 0xc8
    e130:	add	r3, r3, r2, lsl #3
    e134:	ldr	r2, [r3]
    e138:	cmp	r2, #0
    e13c:	beq	db9c <opt_loop+0xa1c>
    e140:	ldr	r2, [r4, #8]
    e144:	tst	r2, #8
    e148:	bne	db9c <opt_loop+0xa1c>
    e14c:	b	db48 <opt_loop+0x9c8>
    e150:	ldr	r2, [r4, #20]
    e154:	cmp	r2, #0
    e158:	bne	e2e0 <opt_loop+0x1160>
    e15c:	ldr	r2, [r4, #84]	; 0x54
    e160:	str	r2, [r4, #60]	; 0x3c
    e164:	ldr	r2, [r1]
    e168:	cmp	r2, #0
    e16c:	ldr	r1, [r4, #200]	; 0xc8
    e170:	add	r3, r3, r1, lsl #3
    e174:	bne	db38 <opt_loop+0x9b8>
    e178:	b	e134 <opt_loop+0xfb4>
    e17c:	.word	0x0002457c
    e180:	.word	0x00023e3c
    e184:	.word	0x000000c4
    e188:	.word	0x00024564
    e18c:	.word	0x00024404
    e190:	.word	0x000241a0
    e194:	.word	0x000240f0
    e198:	.word	0x000000f4
    e19c:	.word	0x000000ec
    e1a0:	.word	0x00000100
    e1a4:	.word	0x00024088
    e1a8:	.word	0x00024074
    e1ac:	.word	0x00023c70
    e1b0:	.word	0x00023c44
    e1b4:	.word	0x00023ba0
    e1b8:	.word	0x00023b34
    e1bc:	.word	0x00023aec
    e1c0:	.word	0x000233d4
    e1c4:	.word	0x0002337c
    e1c8:	.word	0x00023234
    e1cc:	.word	0x000231f4
    e1d0:	.word	0x000231cc
    e1d4:	.word	0x00023174
    e1d8:	.word	0x00023138
    e1dc:	.word	0x000230f4
    e1e0:	.word	0x000230a0
    e1e4:	.word	0x00022db0
    e1e8:	.word	0x00022c98
    e1ec:	.word	0x00022c84
    e1f0:	.word	0x00022c50
    e1f4:	ldr	r3, [r4, #128]	; 0x80
    e1f8:	ands	r1, r3, #65536	; 0x10000
    e1fc:	bne	e218 <opt_loop+0x1098>
    e200:	cmp	r0, #28
    e204:	beq	e50c <opt_loop+0x138c>
    e208:	cmp	r0, #20
    e20c:	beq	e5a0 <opt_loop+0x1420>
    e210:	cmp	r0, #84	; 0x54
    e214:	beq	e608 <opt_loop+0x1488>
    e218:	ldr	r3, [r9]
    e21c:	ldr	r0, [r4, #204]	; 0xcc
    e220:	add	r1, r3, r0, lsl #3
    e224:	b	db0c <opt_loop+0x98c>
    e228:	ldr	r2, [r3]
    e22c:	mov	r7, r3
    e230:	ldr	r3, [r3, #16]
    e234:	cmn	r2, #1
    e238:	beq	dad0 <opt_loop+0x950>
    e23c:	cmp	r3, #0
    e240:	bne	e254 <opt_loop+0x10d4>
    e244:	b	e4e8 <opt_loop+0x1368>
    e248:	ldr	r3, [r3, #16]
    e24c:	cmp	r3, #0
    e250:	beq	e550 <opt_loop+0x13d0>
    e254:	ldr	r1, [r3]
    e258:	cmn	r1, #1
    e25c:	beq	e248 <opt_loop+0x10c8>
    e260:	cmp	r2, #2
    e264:	beq	e478 <opt_loop+0x12f8>
    e268:	cmp	r2, #0
    e26c:	bne	e2cc <opt_loop+0x114c>
    e270:	cmp	r1, #7
    e274:	beq	e4a4 <opt_loop+0x1324>
    e278:	ldr	r2, [r4, #128]	; 0x80
    e27c:	tst	r2, #131072	; 0x20000
    e280:	bne	e2cc <opt_loop+0x114c>
    e284:	cmp	r1, #177	; 0xb1
    e288:	movne	r0, r1
    e28c:	movne	ip, r3
    e290:	beq	e43c <opt_loop+0x12bc>
    e294:	cmp	r0, #12
    e298:	bne	e2cc <opt_loop+0x114c>
    e29c:	ldr	r2, [ip, #16]
    e2a0:	cmp	r2, #0
    e2a4:	bne	e2b8 <opt_loop+0x1138>
    e2a8:	b	e2cc <opt_loop+0x114c>
    e2ac:	ldr	r2, [r2, #16]
    e2b0:	cmp	r2, #0
    e2b4:	beq	e2cc <opt_loop+0x114c>
    e2b8:	ldr	r0, [r2]
    e2bc:	cmn	r0, #1
    e2c0:	beq	e2ac <opt_loop+0x112c>
    e2c4:	cmp	r0, #7
    e2c8:	beq	e3d8 <opt_loop+0x1258>
    e2cc:	ldr	r2, [r3, #16]
    e2d0:	mov	r5, r3
    e2d4:	mov	r0, r1
    e2d8:	mov	r3, r2
    e2dc:	b	dac0 <opt_loop+0x940>
    e2e0:	cmn	r2, #1
    e2e4:	ldreq	r2, [r4, #60]	; 0x3c
    e2e8:	streq	r2, [r4, #84]	; 0x54
    e2ec:	ldr	r2, [r1]
    e2f0:	b	e168 <opt_loop+0xfe8>
    e2f4:	mov	r0, r2
    e2f8:	ldr	r1, [r4, #20]
    e2fc:	bl	c41c <F>
    e300:	str	r0, [r4, #132]	; 0x84
    e304:	ldr	r3, [r4, #8]
    e308:	b	dc58 <opt_loop+0xad8>
    e30c:	cmp	r2, #64	; 0x40
    e310:	bne	eafc <opt_loop+0x197c>
    e314:	ldr	r2, [r4, #20]
    e318:	and	r3, r3, r2
    e31c:	b	db74 <opt_loop+0x9f4>
    e320:	and	r3, r3, #24
    e324:	mov	r2, #0
    e328:	orr	r3, r3, #32
    e32c:	mov	r0, r3
    e330:	str	r3, [r5]
    e334:	ldr	r3, [r9]
    e338:	add	ip, r3, ip
    e33c:	ldr	r3, [ip, #4]
    e340:	add	r3, r1, r3
    e344:	mov	r1, r3
    e348:	str	r3, [r5, #12]
    e34c:	bl	c41c <F>
    e350:	ldr	r3, [pc, #-408]	; e1c0 <opt_loop+0x1040>
    e354:	add	r3, pc, r3
    e358:	str	r8, [r3, #876]	; 0x36c
    e35c:	b	dd88 <opt_loop+0xc08>
    e360:	mov	r0, r3
    e364:	bl	c41c <F>
    e368:	b	dd94 <opt_loop+0xc14>
    e36c:	ldr	r2, [r4, #200]	; 0xc8
    e370:	ldr	r1, [sp, #12]
    e374:	sub	fp, r2, r0
    e378:	clz	fp, fp
    e37c:	lsr	fp, fp, #5
    e380:	cmp	r1, #0
    e384:	moveq	fp, #0
    e388:	cmp	fp, #0
    e38c:	beq	da90 <opt_loop+0x910>
    e390:	ldr	r2, [r4, #204]	; 0xcc
    e394:	cmp	r1, r2
    e398:	bne	da90 <opt_loop+0x910>
    e39c:	cmp	r5, #0
    e3a0:	beq	dc48 <opt_loop+0xac8>
    e3a4:	ldr	r2, [pc, #-488]	; e1c4 <opt_loop+0x1044>
    e3a8:	str	r8, [r4, #4]
    e3ac:	add	r2, pc, r2
    e3b0:	str	r8, [r2, #876]	; 0x36c
    e3b4:	b	dc48 <opt_loop+0xac8>
    e3b8:	cmp	sl, #0
    e3bc:	bne	da70 <opt_loop+0x8f0>
    e3c0:	b	db9c <opt_loop+0xa1c>
    e3c4:	tst	r5, #131072	; 0x20000
    e3c8:	orreq	r2, r2, #131072	; 0x20000
    e3cc:	tst	r5, #65536	; 0x10000
    e3d0:	orreq	r2, r2, #65536	; 0x10000
    e3d4:	b	d4ec <opt_loop+0x36c>
    e3d8:	ldr	r0, [r2, #16]
    e3dc:	cmp	r0, #0
    e3e0:	bne	e3f4 <opt_loop+0x1274>
    e3e4:	b	e2cc <opt_loop+0x114c>
    e3e8:	ldr	r0, [r0, #16]
    e3ec:	cmp	r0, #0
    e3f0:	beq	e2cc <opt_loop+0x114c>
    e3f4:	ldr	r5, [r0]
    e3f8:	cmn	r5, #1
    e3fc:	beq	e3e8 <opt_loop+0x1268>
    e400:	and	r5, r5, #231	; 0xe7
    e404:	cmp	r5, #64	; 0x40
    e408:	bne	e2cc <opt_loop+0x114c>
    e40c:	ldr	r1, [r0, #12]
    e410:	mov	lr, #0
    e414:	mov	r6, #1
    e418:	ldr	r5, [r7, #12]
    e41c:	add	r1, r1, r5
    e420:	str	r1, [r0, #12]
    e424:	str	fp, [r7]
    e428:	str	fp, [ip]
    e42c:	str	fp, [r2]
    e430:	ldr	r1, [r3]
    e434:	ldr	r2, [r3, #16]
    e438:	b	e2d0 <opt_loop+0x1150>
    e43c:	ldr	r2, [r3, #16]
    e440:	cmp	r2, #0
    e444:	beq	e2d0 <opt_loop+0x1150>
    e448:	ldr	r0, [r2]
    e44c:	mov	ip, r2
    e450:	cmn	r0, #1
    e454:	beq	e468 <opt_loop+0x12e8>
    e458:	b	e294 <opt_loop+0x1114>
    e45c:	ldr	r0, [ip]
    e460:	cmn	r0, #1
    e464:	bne	e294 <opt_loop+0x1114>
    e468:	ldr	ip, [ip, #16]
    e46c:	cmp	ip, #0
    e470:	bne	e45c <opt_loop+0x12dc>
    e474:	b	e2d0 <opt_loop+0x1150>
    e478:	cmp	r1, #97	; 0x61
    e47c:	bne	e2cc <opt_loop+0x114c>
    e480:	ldr	r2, [r3, #12]
    e484:	ldr	r0, [r7, #12]
    e488:	cmp	r0, r2
    e48c:	bne	e2cc <opt_loop+0x114c>
    e490:	mov	r2, #7
    e494:	str	r2, [r3]
    e498:	ldr	r2, [r7]
    e49c:	cmp	r2, #0
    e4a0:	bne	e4d8 <opt_loop+0x1358>
    e4a4:	mov	r2, #1
    e4a8:	str	r2, [r7]
    e4ac:	mov	r2, #135	; 0x87
    e4b0:	str	r2, [r3]
    e4b4:	ldr	lr, [r7]
    e4b8:	cmp	lr, #0
    e4bc:	bne	eae8 <opt_loop+0x1968>
    e4c0:	ldr	r2, [r4, #128]	; 0x80
    e4c4:	tst	r2, #131072	; 0x20000
    e4c8:	bne	e500 <opt_loop+0x1380>
    e4cc:	mov	r6, #1
    e4d0:	mov	r1, #135	; 0x87
    e4d4:	b	e2cc <opt_loop+0x114c>
    e4d8:	mov	r1, #7
    e4dc:	mov	r6, #1
    e4e0:	mov	lr, #0
    e4e4:	b	e2cc <opt_loop+0x114c>
    e4e8:	cmp	r6, #0
    e4ec:	beq	daec <opt_loop+0x96c>
    e4f0:	ldr	r3, [pc, #-816]	; e1c8 <opt_loop+0x1048>
    e4f4:	add	r3, pc, r3
    e4f8:	str	lr, [r3, #876]	; 0x36c
    e4fc:	b	daec <opt_loop+0x96c>
    e500:	mov	r1, #135	; 0x87
    e504:	mov	r6, #1
    e508:	b	e2cc <opt_loop+0x114c>
    e50c:	ldr	r3, [r9]
    e510:	ldr	r0, [r4, #20]
    e514:	ldr	r2, [r4, #204]	; 0xcc
    e518:	ldr	ip, [r3, r2, lsl #3]
    e51c:	add	r2, r3, r2, lsl #3
    e520:	cmp	ip, #0
    e524:	beq	e5cc <opt_loop+0x144c>
    e528:	ldr	r3, [pc, #-868]	; e1cc <opt_loop+0x104c>
    e52c:	mvn	ip, #0
    e530:	ldr	r2, [r2, #4]
    e534:	add	r3, pc, r3
    e538:	add	r0, r2, r0
    e53c:	str	r1, [r3, #876]	; 0x36c
    e540:	str	r0, [r4, #20]
    e544:	str	ip, [r5]
    e548:	ldr	r2, [r4, #8]
    e54c:	b	daf8 <opt_loop+0x978>
    e550:	cmp	r6, #0
    e554:	beq	daec <opt_loop+0x96c>
    e558:	ldr	r3, [pc, #-912]	; e1d0 <opt_loop+0x1050>
    e55c:	add	r3, pc, r3
    e560:	str	lr, [r3, #876]	; 0x36c
    e564:	b	daec <opt_loop+0x96c>
    e568:	and	r0, r3, #224	; 0xe0
    e56c:	cmp	r0, #32
    e570:	beq	e584 <opt_loop+0x1404>
    e574:	and	r0, r3, #208	; 0xd0
    e578:	cmp	r7, #96	; 0x60
    e57c:	cmpne	r0, #80	; 0x50
    e580:	bne	e360 <opt_loop+0x11e0>
    e584:	mov	r2, #0
    e588:	str	r8, [r5]
    e58c:	mov	r1, r2
    e590:	mov	r0, r2
    e594:	str	r8, [r5, #12]
    e598:	bl	c41c <F>
    e59c:	b	ddb4 <opt_loop+0xc34>
    e5a0:	mvn	r3, #0
    e5a4:	ldr	r2, [r5, #12]
    e5a8:	str	r3, [r5]
    e5ac:	ldr	r3, [pc, #-992]	; e1d4 <opt_loop+0x1054>
    e5b0:	ldr	r0, [r4, #20]
    e5b4:	add	r3, pc, r3
    e5b8:	add	r0, r0, r2
    e5bc:	str	r1, [r3, #876]	; 0x36c
    e5c0:	ldr	r2, [r4, #8]
    e5c4:	str	r0, [r4, #20]
    e5c8:	b	daf8 <opt_loop+0x978>
    e5cc:	cmp	r0, #0
    e5d0:	bne	e12c <opt_loop+0xfac>
    e5d4:	mov	ip, #29
    e5d8:	mvn	r3, #0
    e5dc:	ldr	r1, [pc, #-1036]	; e1d8 <opt_loop+0x1058>
    e5e0:	mov	r2, ip
    e5e4:	str	r3, [r5]
    e5e8:	str	ip, [r4, #8]
    e5ec:	ldr	r3, [r9]
    e5f0:	add	r1, pc, r1
    e5f4:	ldr	ip, [r4, #204]	; 0xcc
    e5f8:	str	r0, [r1, #876]	; 0x36c
    e5fc:	add	r1, r3, ip, lsl #3
    e600:	ldr	r0, [r3, ip, lsl #3]
    e604:	b	db10 <opt_loop+0x990>
    e608:	ldr	r3, [r4, #20]
    e60c:	cmp	r3, #0
    e610:	bne	e218 <opt_loop+0x1098>
    e614:	mov	r2, #69	; 0x45
    e618:	ldr	r0, [r5, #12]
    e61c:	mvn	r1, #0
    e620:	str	r2, [r4, #8]
    e624:	ldr	r2, [pc, #-1104]	; e1dc <opt_loop+0x105c>
    e628:	str	r0, [r4, #20]
    e62c:	str	r1, [r5]
    e630:	ldr	r1, [r4, #60]	; 0x3c
    e634:	add	r2, pc, r2
    e638:	str	r3, [r2, #876]	; 0x36c
    e63c:	ldr	r2, [r4, #8]
    e640:	ldr	r3, [r4, #84]	; 0x54
    e644:	str	r3, [r4, #60]	; 0x3c
    e648:	str	r1, [r4, #84]	; 0x54
    e64c:	b	daf8 <opt_loop+0x978>
    e650:	mov	r1, r2
    e654:	mov	r0, r2
    e658:	str	r2, [r5]
    e65c:	bl	c41c <F>
    e660:	str	r0, [r4, #200]	; 0xc8
    e664:	b	da54 <opt_loop+0x8d4>
    e668:	ldr	r0, [sp, #36]	; 0x24
    e66c:	mov	fp, #1
    e670:	bl	cbb8 <find_inedges.isra.6>
    e674:	ldr	r3, [pc, #-1180]	; e1e0 <opt_loop+0x1060>
    e678:	mov	r2, #0
    e67c:	str	r2, [sp, #12]
    e680:	str	r6, [sp, #16]
    e684:	str	sl, [sp, #20]
    e688:	add	r3, pc, r3
    e68c:	ldr	r3, [r3, #876]	; 0x36c
    e690:	str	r3, [sp, #8]
    e694:	ldr	r3, [sp]
    e698:	ldr	r3, [r3]
    e69c:	ldr	r3, [r3, fp, lsl #2]
    e6a0:	cmp	r3, #0
    e6a4:	beq	e950 <opt_loop+0x17d0>
    e6a8:	ldr	r2, [r3, #112]	; 0x70
    e6ac:	cmp	r2, #0
    e6b0:	beq	e944 <opt_loop+0x17c4>
    e6b4:	ldr	ip, [r2, #20]
    e6b8:	ldr	r2, [r2, #16]
    e6bc:	cmp	ip, #0
    e6c0:	ldr	lr, [r2, #200]	; 0xc8
    e6c4:	beq	e6fc <opt_loop+0x157c>
    e6c8:	ldr	r1, [ip, #16]
    e6cc:	ldr	r1, [r1, #200]	; 0xc8
    e6d0:	cmp	lr, r1
    e6d4:	bne	e814 <opt_loop+0x1694>
    e6d8:	mov	r1, ip
    e6dc:	b	e6f0 <opt_loop+0x1570>
    e6e0:	ldr	r0, [r1, #16]
    e6e4:	ldr	r0, [r0, #200]	; 0xc8
    e6e8:	cmp	lr, r0
    e6ec:	bne	e814 <opt_loop+0x1694>
    e6f0:	ldr	r1, [r1, #20]
    e6f4:	cmp	r1, #0
    e6f8:	bne	e6e0 <opt_loop+0x1560>
    e6fc:	ldr	r1, [r2, #60]	; 0x3c
    e700:	cmp	r1, r3
    e704:	addeq	r7, r2, #60	; 0x3c
    e708:	moveq	r1, r3
    e70c:	beq	e720 <opt_loop+0x15a0>
    e710:	ldr	r1, [r2, #84]	; 0x54
    e714:	add	r7, r2, #84	; 0x54
    e718:	cmp	r1, #0
    e71c:	beq	e828 <opt_loop+0x16a8>
    e720:	ldr	r0, [r1, #60]	; 0x3c
    e724:	ldr	r6, [r3, #60]	; 0x3c
    e728:	cmp	r6, r0
    e72c:	bne	e828 <opt_loop+0x16a8>
    e730:	ldr	r4, [r3]
    e734:	mov	r8, #1
    e738:	ldr	r0, [r1, #104]	; 0x68
    e73c:	lsr	r5, r4, #5
    e740:	and	r4, r4, #31
    e744:	lsl	r4, r8, r4
    e748:	ldr	r0, [r0, r5, lsl #2]
    e74c:	lsl	r8, r5, #2
    e750:	tst	r4, r0
    e754:	beq	e828 <opt_loop+0x16a8>
    e758:	mov	r9, #1
    e75c:	b	e790 <opt_loop+0x1610>
    e760:	cmp	r0, #0
    e764:	beq	e828 <opt_loop+0x16a8>
    e768:	ldr	r7, [r0, #60]	; 0x3c
    e76c:	cmp	r7, r6
    e770:	bne	e828 <opt_loop+0x16a8>
    e774:	ldr	sl, [r0, #104]	; 0x68
    e778:	mov	r7, r1
    e77c:	mov	r1, r0
    e780:	mov	r9, #0
    e784:	ldr	r0, [sl, r8]
    e788:	tst	r4, r0
    e78c:	beq	e828 <opt_loop+0x16a8>
    e790:	ldr	sl, [r1, #200]	; 0xc8
    e794:	ldr	r0, [r1, #84]!	; 0x54
    e798:	cmp	lr, sl
    e79c:	beq	e760 <opt_loop+0x15e0>
    e7a0:	cmp	r0, #0
    e7a4:	beq	e828 <opt_loop+0x16a8>
    e7a8:	ldr	sl, [r0, #60]	; 0x3c
    e7ac:	cmp	sl, r6
    e7b0:	bne	e828 <opt_loop+0x16a8>
    e7b4:	ldr	sl, [r0, #104]	; 0x68
    e7b8:	ldr	r5, [sl, r5, lsl #2]
    e7bc:	tst	r4, r5
    e7c0:	beq	e828 <opt_loop+0x16a8>
    e7c4:	ldr	r5, [r0, #200]	; 0xc8
    e7c8:	cmp	r5, lr
    e7cc:	bne	e800 <opt_loop+0x1680>
    e7d0:	b	eabc <opt_loop+0x193c>
    e7d4:	ldr	r1, [r5, #60]	; 0x3c
    e7d8:	cmp	r1, r6
    e7dc:	bne	e828 <opt_loop+0x16a8>
    e7e0:	ldr	r1, [r5, #104]	; 0x68
    e7e4:	ldr	r1, [r1, r8]
    e7e8:	tst	r4, r1
    e7ec:	beq	e828 <opt_loop+0x16a8>
    e7f0:	ldr	r1, [r5, #200]	; 0xc8
    e7f4:	cmp	lr, r1
    e7f8:	beq	ea10 <opt_loop+0x1890>
    e7fc:	mov	r0, r5
    e800:	ldr	r5, [r0, #84]	; 0x54
    e804:	cmp	r5, #0
    e808:	bne	e7d4 <opt_loop+0x1654>
    e80c:	cmp	ip, #0
    e810:	beq	e830 <opt_loop+0x16b0>
    e814:	ldr	r1, [ip, #16]
    e818:	ldr	r1, [r1, #200]	; 0xc8
    e81c:	cmp	r1, lr
    e820:	bne	e944 <opt_loop+0x17c4>
    e824:	ldr	ip, [ip, #20]
    e828:	cmp	ip, #0
    e82c:	bne	e814 <opt_loop+0x1694>
    e830:	ldr	r1, [r2, #60]	; 0x3c
    e834:	cmp	r1, r3
    e838:	addeq	r2, r2, #60	; 0x3c
    e83c:	moveq	r1, r3
    e840:	beq	e854 <opt_loop+0x16d4>
    e844:	ldr	r1, [r2, #84]	; 0x54
    e848:	add	r2, r2, #84	; 0x54
    e84c:	cmp	r1, #0
    e850:	beq	e944 <opt_loop+0x17c4>
    e854:	ldr	r0, [r1, #84]	; 0x54
    e858:	ldr	r5, [r3, #84]	; 0x54
    e85c:	cmp	r5, r0
    e860:	bne	e944 <opt_loop+0x17c4>
    e864:	ldr	r4, [r3]
    e868:	mov	ip, #1
    e86c:	ldr	r0, [r1, #104]	; 0x68
    e870:	lsr	r6, r4, #5
    e874:	and	r4, r4, #31
    e878:	lsl	r4, ip, r4
    e87c:	ldr	r0, [r0, r6, lsl #2]
    e880:	lsl	r7, r6, #2
    e884:	tst	r4, r0
    e888:	beq	e944 <opt_loop+0x17c4>
    e88c:	mov	r8, ip
    e890:	mov	r0, r1
    e894:	b	e8c8 <opt_loop+0x1748>
    e898:	cmp	ip, #0
    e89c:	beq	e944 <opt_loop+0x17c4>
    e8a0:	ldr	r2, [ip, #84]	; 0x54
    e8a4:	cmp	r2, r5
    e8a8:	bne	e944 <opt_loop+0x17c4>
    e8ac:	ldr	r1, [ip, #104]	; 0x68
    e8b0:	mov	r2, r0
    e8b4:	mov	r8, #0
    e8b8:	mov	r0, ip
    e8bc:	ldr	r1, [r1, r7]
    e8c0:	tst	r4, r1
    e8c4:	beq	e944 <opt_loop+0x17c4>
    e8c8:	ldr	r1, [r0, #200]	; 0xc8
    e8cc:	ldr	ip, [r0, #60]!	; 0x3c
    e8d0:	cmp	r1, lr
    e8d4:	beq	e898 <opt_loop+0x1718>
    e8d8:	cmp	ip, #0
    e8dc:	beq	e944 <opt_loop+0x17c4>
    e8e0:	ldr	r1, [ip, #84]	; 0x54
    e8e4:	cmp	r1, r5
    e8e8:	bne	e944 <opt_loop+0x17c4>
    e8ec:	ldr	r1, [ip, #104]	; 0x68
    e8f0:	ldr	r1, [r1, r6, lsl #2]
    e8f4:	tst	r4, r1
    e8f8:	beq	e944 <opt_loop+0x17c4>
    e8fc:	ldr	r1, [ip, #200]	; 0xc8
    e900:	cmp	r1, lr
    e904:	bne	e938 <opt_loop+0x17b8>
    e908:	b	eab4 <opt_loop+0x1934>
    e90c:	ldr	r0, [r1, #84]	; 0x54
    e910:	cmp	r0, r5
    e914:	bne	e944 <opt_loop+0x17c4>
    e918:	ldr	r0, [r1, #104]	; 0x68
    e91c:	ldr	r0, [r0, r7]
    e920:	tst	r4, r0
    e924:	beq	e944 <opt_loop+0x17c4>
    e928:	ldr	r0, [r1, #200]	; 0xc8
    e92c:	cmp	r0, lr
    e930:	beq	e9a8 <opt_loop+0x1828>
    e934:	mov	ip, r1
    e938:	ldr	r1, [ip, #60]	; 0x3c
    e93c:	cmp	r1, #0
    e940:	bne	e90c <opt_loop+0x178c>
    e944:	ldr	r3, [r3, #100]	; 0x64
    e948:	cmp	r3, #0
    e94c:	bne	e6a8 <opt_loop+0x1528>
    e950:	ldr	r3, [sp, #16]
    e954:	cmp	r3, fp
    e958:	add	fp, fp, #1
    e95c:	bne	e694 <opt_loop+0x1514>
    e960:	ldr	r3, [sp, #12]
    e964:	ldr	sl, [sp, #20]
    e968:	cmp	r3, #0
    e96c:	beq	eaa0 <opt_loop+0x1920>
    e970:	ldr	r3, [pc, #-1940]	; e1e4 <opt_loop+0x1064>
    e974:	ldr	r2, [sp, #8]
    e978:	add	r3, pc, r3
    e97c:	str	r2, [r3, #876]	; 0x36c
    e980:	ldr	r3, [sp, #8]
    e984:	cmp	r3, #0
    e988:	beq	d1d4 <opt_loop+0x54>
    e98c:	add	sp, sp, #124	; 0x7c
    e990:	ldrd	r4, [sp]
    e994:	ldrd	r6, [sp, #8]
    e998:	ldrd	r8, [sp, #16]
    e99c:	ldrd	sl, [sp, #24]
    e9a0:	add	sp, sp, #32
    e9a4:	pop	{pc}		; (ldr pc, [sp], #4)
    e9a8:	add	r0, ip, #60	; 0x3c
    e9ac:	ldr	ip, [r1, #60]	; 0x3c
    e9b0:	cmp	r8, #0
    e9b4:	str	ip, [r0]
    e9b8:	ldr	r0, [r2]
    e9bc:	str	r0, [r1, #60]	; 0x3c
    e9c0:	streq	r1, [r2]
    e9c4:	beq	e9f4 <opt_loop+0x1874>
    e9c8:	ldr	r2, [r3, #112]	; 0x70
    e9cc:	cmp	r2, #0
    e9d0:	beq	e9f4 <opt_loop+0x1874>
    e9d4:	ldr	r0, [r2, #16]
    e9d8:	ldr	ip, [r0, #60]	; 0x3c
    e9dc:	cmp	ip, r3
    e9e0:	streq	r1, [r0, #60]	; 0x3c
    e9e4:	strne	r1, [r0, #84]	; 0x54
    e9e8:	ldr	r2, [r2, #20]
    e9ec:	cmp	r2, #0
    e9f0:	bne	e9d4 <opt_loop+0x1854>
    e9f4:	ldr	r3, [r3, #100]	; 0x64
    e9f8:	mov	r0, #0
    e9fc:	mov	r1, #1
    ea00:	strd	r0, [sp, #8]
    ea04:	cmp	r3, #0
    ea08:	bne	e6a8 <opt_loop+0x1528>
    ea0c:	b	e950 <opt_loop+0x17d0>
    ea10:	add	r1, r0, #84	; 0x54
    ea14:	ldr	r2, [r5, #84]	; 0x54
    ea18:	cmp	r9, #0
    ea1c:	str	r2, [r1]
    ea20:	ldr	r2, [r7]
    ea24:	str	r2, [r5, #84]	; 0x54
    ea28:	beq	ea84 <opt_loop+0x1904>
    ea2c:	ldr	r2, [r3, #112]	; 0x70
    ea30:	cmp	r2, #0
    ea34:	beq	e9f4 <opt_loop+0x1874>
    ea38:	ldr	r1, [r2, #16]
    ea3c:	ldr	r0, [r1, #60]	; 0x3c
    ea40:	cmp	r0, r3
    ea44:	streq	r5, [r1, #60]	; 0x3c
    ea48:	strne	r5, [r1, #84]	; 0x54
    ea4c:	ldr	r2, [r2, #20]
    ea50:	cmp	r2, #0
    ea54:	bne	ea38 <opt_loop+0x18b8>
    ea58:	ldr	r1, [r3, #112]	; 0x70
    ea5c:	cmp	r1, #0
    ea60:	beq	e9f4 <opt_loop+0x1874>
    ea64:	ldr	r2, [r1, #16]
    ea68:	mov	r0, #0
    ea6c:	str	r0, [sp, #8]
    ea70:	mov	r0, #1
    ea74:	ldr	ip, [r1, #20]
    ea78:	str	r0, [sp, #12]
    ea7c:	ldr	lr, [r2, #200]	; 0xc8
    ea80:	b	e828 <opt_loop+0x16a8>
    ea84:	str	r5, [r7]
    ea88:	b	ea58 <opt_loop+0x18d8>
    ea8c:	ldr	r3, [pc, #-2220]	; e1e8 <opt_loop+0x1068>
    ea90:	add	r3, pc, r3
    ea94:	ldr	r3, [r3, #876]	; 0x36c
    ea98:	str	r3, [sp, #8]
    ea9c:	b	e980 <opt_loop+0x1800>
    eaa0:	ldr	r3, [pc, #-2236]	; e1ec <opt_loop+0x106c>
    eaa4:	add	r3, pc, r3
    eaa8:	ldr	r3, [r3, #876]	; 0x36c
    eaac:	str	r3, [sp, #8]
    eab0:	b	e980 <opt_loop+0x1800>
    eab4:	mov	r1, ip
    eab8:	b	e9ac <opt_loop+0x182c>
    eabc:	mov	r5, r0
    eac0:	b	ea14 <opt_loop+0x1894>
    eac4:	cmp	sl, #0
    eac8:	bne	e98c <opt_loop+0x180c>
    eacc:	ldr	r0, [sp, #36]	; 0x24
    ead0:	bl	cbb8 <find_inedges.isra.6>
    ead4:	ldr	r3, [pc, #-2284]	; e1f0 <opt_loop+0x1070>
    ead8:	add	r3, pc, r3
    eadc:	ldr	r3, [r3, #876]	; 0x36c
    eae0:	str	r3, [sp, #8]
    eae4:	b	e980 <opt_loop+0x1800>
    eae8:	mov	r1, #135	; 0x87
    eaec:	mov	r6, #1
    eaf0:	ldr	r2, [r3, #16]
    eaf4:	mov	lr, #0
    eaf8:	b	e2d0 <opt_loop+0x1150>
    eafc:	bl	ebc <abort@plt>

0000eb00 <sf_bpf_optimize>:
    eb00:	strd	r4, [sp, #-36]!	; 0xffffffdc
    eb04:	strd	r6, [sp, #8]
    eb08:	strd	sl, [sp, #24]
    eb0c:	ldr	fp, [pc, #1680]	; f1a4 <sf_bpf_optimize+0x6a4>
    eb10:	strd	r8, [sp, #16]
    eb14:	mov	r9, r0
    eb18:	str	lr, [sp, #32]
    eb1c:	sub	sp, sp, #52	; 0x34
    eb20:	ldr	r3, [r0]
    eb24:	add	fp, pc, fp
    eb28:	ldr	r7, [pc, #1656]	; f1a8 <sf_bpf_optimize+0x6a8>
    eb2c:	ldr	r4, [fp]
    eb30:	mov	r0, r3
    eb34:	str	r3, [sp, #8]
    eb38:	add	r7, pc, r7
    eb3c:	add	r3, r4, #1
    eb40:	str	r3, [fp]
    eb44:	bl	c5b0 <count_blocks>
    eb48:	mov	r1, #4
    eb4c:	str	r0, [sp, #4]
    eb50:	bl	ce8 <calloc@plt>
    eb54:	ldr	r3, [pc, #1616]	; f1ac <sf_bpf_optimize+0x6ac>
    eb58:	cmp	r0, #0
    eb5c:	ldr	r3, [r7, r3]
    eb60:	str	r0, [r3]
    eb64:	str	r3, [sp]
    eb68:	beq	f198 <sf_bpf_optimize+0x698>
    eb6c:	mov	r3, #0
    eb70:	add	r4, r4, #2
    eb74:	ldr	r0, [sp, #8]
    eb78:	str	r4, [fp]
    eb7c:	str	r3, [fp, #864]	; 0x360
    eb80:	bl	c62c <number_blks_r>
    eb84:	ldr	r4, [fp, #864]	; 0x360
    eb88:	mov	r1, #4
    eb8c:	lsl	sl, r4, #1
    eb90:	mov	r0, sl
    eb94:	str	sl, [fp, #896]	; 0x380
    eb98:	bl	ce8 <calloc@plt>
    eb9c:	ldr	r2, [pc, #1548]	; f1b0 <sf_bpf_optimize+0x6b0>
    eba0:	cmp	r0, #0
    eba4:	mov	r8, r0
    eba8:	ldr	r3, [r7, r2]
    ebac:	str	r0, [r3]
    ebb0:	str	r3, [sp, #12]
    ebb4:	beq	f198 <sf_bpf_optimize+0x698>
    ebb8:	mov	r1, #4
    ebbc:	mov	r0, r4
    ebc0:	bl	ce8 <calloc@plt>
    ebc4:	ldr	r2, [pc, #1512]	; f1b4 <sf_bpf_optimize+0x6b4>
    ebc8:	cmp	r0, #0
    ebcc:	ldr	r3, [r7, r2]
    ebd0:	str	r0, [r3]
    ebd4:	str	r3, [sp, #32]
    ebd8:	beq	f198 <sf_bpf_optimize+0x698>
    ebdc:	lsr	r6, sl, #5
    ebe0:	lsr	r5, r4, #5
    ebe4:	add	r6, r6, #1
    ebe8:	add	r5, r5, #1
    ebec:	mul	r3, r6, sl
    ebf0:	str	r6, [fp, #4]
    ebf4:	mul	r0, r5, r4
    ebf8:	str	r5, [fp, #884]	; 0x374
    ebfc:	add	r0, r3, r0, lsl #1
    ec00:	lsl	r0, r0, #2
    ec04:	bl	dc0 <malloc@plt>
    ec08:	ldr	r3, [pc, #1448]	; f1b8 <sf_bpf_optimize+0x6b8>
    ec0c:	cmp	r0, #0
    ec10:	ldr	r3, [r7, r3]
    ec14:	str	r0, [r3]
    ec18:	str	r3, [sp, #36]	; 0x24
    ec1c:	beq	f198 <sf_bpf_optimize+0x698>
    ec20:	ldr	r2, [sp, #4]
    ec24:	str	r0, [fp, #880]	; 0x370
    ec28:	cmp	r2, #0
    ec2c:	ble	f16c <sf_bpf_optimize+0x66c>
    ec30:	ldr	r3, [sp]
    ec34:	lsl	r2, r2, #2
    ec38:	mov	sl, r0
    ec3c:	lsl	r5, r5, #2
    ec40:	ldr	r3, [r3]
    ec44:	mov	r1, r3
    ec48:	add	lr, r2, r3
    ec4c:	mov	ip, r3
    ec50:	ldr	fp, [ip], #4
    ec54:	cmp	lr, ip
    ec58:	str	sl, [fp, #104]	; 0x68
    ec5c:	add	sl, sl, r5
    ec60:	bne	ec50 <sf_bpf_optimize+0x150>
    ec64:	ldr	ip, [sp, #4]
    ec68:	mul	sl, r5, ip
    ec6c:	ldr	ip, [pc, #1352]	; f1bc <sf_bpf_optimize+0x6bc>
    ec70:	add	r0, r0, sl
    ec74:	mov	fp, r0
    ec78:	add	ip, pc, ip
    ec7c:	str	r0, [ip, #888]	; 0x378
    ec80:	ldr	ip, [r1], #4
    ec84:	cmp	r1, lr
    ec88:	str	fp, [ip, #108]	; 0x6c
    ec8c:	add	fp, fp, r5
    ec90:	bne	ec80 <sf_bpf_optimize+0x180>
    ec94:	ldr	lr, [pc, #1316]	; f1c0 <sf_bpf_optimize+0x6c0>
    ec98:	add	r0, r0, sl
    ec9c:	lsl	r5, r6, #2
    eca0:	mov	ip, r4
    eca4:	lsl	r6, r6, #3
    eca8:	mov	r1, #0
    ecac:	ldr	fp, [sp, #12]
    ecb0:	add	lr, pc, lr
    ecb4:	str	r0, [lr, #892]	; 0x37c
    ecb8:	b	ecc4 <sf_bpf_optimize+0x1c4>
    ecbc:	ldr	r3, [r3]
    ecc0:	ldr	r8, [fp]
    ecc4:	add	lr, r0, r5
    ecc8:	ldr	r3, [r3, r1, lsl #2]
    eccc:	mov	sl, r3
    ecd0:	str	r0, [r3, #56]	; 0x38
    ecd4:	add	r0, r6, r0
    ecd8:	str	lr, [r3, #80]	; 0x50
    ecdc:	mov	lr, r3
    ece0:	str	r1, [sl, #48]!	; 0x30
    ece4:	str	sl, [r8, r1, lsl #2]
    ece8:	add	r1, r1, #1
    ecec:	ldr	sl, [sp, #4]
    ecf0:	str	ip, [lr, #72]!	; 0x48
    ecf4:	ldr	r8, [fp]
    ecf8:	cmp	sl, r1
    ecfc:	str	lr, [r8, ip, lsl #2]
    ed00:	add	ip, ip, #1
    ed04:	str	r3, [r3, #64]	; 0x40
    ed08:	str	r3, [r3, #88]	; 0x58
    ed0c:	ldr	r3, [sp]
    ed10:	bne	ecbc <sf_bpf_optimize+0x1bc>
    ed14:	ldr	ip, [r3]
    ed18:	mov	r3, #0
    ed1c:	add	r2, ip, r2
    ed20:	ldr	r1, [ip], #4
    ed24:	ldr	r1, [r1, #4]
    ed28:	cmp	r1, #0
    ed2c:	beq	f0ec <sf_bpf_optimize+0x5ec>
    ed30:	mov	lr, #0
    ed34:	ldr	r5, [r1]
    ed38:	add	r0, lr, #1
    ed3c:	cmn	r5, #1
    ed40:	beq	ed50 <sf_bpf_optimize+0x250>
    ed44:	add	r5, lr, #2
    ed48:	mov	lr, r0
    ed4c:	mov	r0, r5
    ed50:	ldr	r1, [r1, #16]
    ed54:	cmp	r1, #0
    ed58:	bne	ed34 <sf_bpf_optimize+0x234>
    ed5c:	cmp	r2, ip
    ed60:	add	r3, r3, r0
    ed64:	bne	ed20 <sf_bpf_optimize+0x220>
    ed68:	add	r3, r3, r3, lsl #1
    ed6c:	mov	sl, r3
    ed70:	ldr	r6, [pc, #1100]	; f1c4 <sf_bpf_optimize+0x6c4>
    ed74:	mov	r1, #8
    ed78:	mov	r0, sl
    ed7c:	add	r6, pc, r6
    ed80:	str	r3, [r6, #900]	; 0x384
    ed84:	bl	ce8 <calloc@plt>
    ed88:	ldr	r3, [pc, #1080]	; f1c8 <sf_bpf_optimize+0x6c8>
    ed8c:	mov	r5, r0
    ed90:	mov	r1, #20
    ed94:	mov	r0, sl
    ed98:	ldr	r3, [r7, r3]
    ed9c:	str	r5, [r3]
    eda0:	str	r3, [sp, #40]	; 0x28
    eda4:	bl	ce8 <calloc@plt>
    eda8:	ldr	r3, [pc, #1052]	; f1cc <sf_bpf_optimize+0x6cc>
    edac:	clz	r8, r0
    edb0:	cmp	r5, #0
    edb4:	lsr	r8, r8, #5
    edb8:	moveq	r8, #1
    edbc:	cmp	r8, #0
    edc0:	ldr	r3, [r7, r3]
    edc4:	str	r0, [r3]
    edc8:	str	r3, [sp, #44]	; 0x2c
    edcc:	bne	f198 <sf_bpf_optimize+0x698>
    edd0:	ldr	r5, [sp, #8]
    edd4:	mov	r1, r8
    edd8:	lsl	fp, r4, #2
    eddc:	mov	sl, r9
    ede0:	mov	r0, r5
    ede4:	bl	d180 <opt_loop>
    ede8:	mov	r0, r5
    edec:	mov	r1, #1
    edf0:	bl	d180 <opt_loop>
    edf4:	ldr	r5, [r6]
    edf8:	sub	r3, fp, #4
    edfc:	str	r3, [sp, #16]
    ee00:	sub	r3, r4, #1
    ee04:	str	r6, [sp, #24]
    ee08:	str	r3, [sp, #20]
    ee0c:	add	r5, r5, #1
    ee10:	str	r8, [sp, #28]
    ee14:	cmp	r4, #0
    ee18:	ble	ee3c <sf_bpf_optimize+0x33c>
    ee1c:	ldr	r3, [sp]
    ee20:	ldr	r3, [r3]
    ee24:	add	r2, fp, r3
    ee28:	ldr	r1, [r3], #4
    ee2c:	ldr	r0, [sp, #28]
    ee30:	cmp	r2, r3
    ee34:	str	r0, [r1, #100]	; 0x64
    ee38:	bne	ee28 <sf_bpf_optimize+0x328>
    ee3c:	ldr	r0, [sp, #8]
    ee40:	ldr	r3, [sp, #24]
    ee44:	str	r5, [r3]
    ee48:	bl	c548 <make_marks>
    ee4c:	ldr	r3, [sp]
    ee50:	ldr	ip, [sp, #20]
    ee54:	ldr	r0, [r3]
    ee58:	ldr	r3, [sp, #16]
    ee5c:	add	r6, r0, r3
    ee60:	b	ee6c <sf_bpf_optimize+0x36c>
    ee64:	mov	ip, r7
    ee68:	mov	r6, r9
    ee6c:	subs	r7, ip, #1
    ee70:	bmi	ef98 <sf_bpf_optimize+0x498>
    ee74:	ldr	lr, [r6, #-4]
    ee78:	sub	r9, r6, #4
    ee7c:	ldr	r3, [lr, #24]
    ee80:	cmp	r5, r3
    ee84:	bne	ee64 <sf_bpf_optimize+0x364>
    ee88:	cmp	ip, r4
    ee8c:	blt	eea0 <sf_bpf_optimize+0x3a0>
    ee90:	b	ee64 <sf_bpf_optimize+0x364>
    ee94:	add	ip, ip, #1
    ee98:	cmp	ip, r4
    ee9c:	beq	ee64 <sf_bpf_optimize+0x364>
    eea0:	ldr	r1, [r6], #4
    eea4:	ldr	r3, [r1, #24]
    eea8:	cmp	r5, r3
    eeac:	bne	ee94 <sf_bpf_optimize+0x394>
    eeb0:	ldr	r3, [r1, #8]
    eeb4:	ldr	r2, [lr, #8]
    eeb8:	cmp	r2, r3
    eebc:	bne	ee94 <sf_bpf_optimize+0x394>
    eec0:	ldr	r3, [r1, #20]
    eec4:	ldr	r2, [lr, #20]
    eec8:	cmp	r2, r3
    eecc:	bne	ee94 <sf_bpf_optimize+0x394>
    eed0:	ldr	r3, [r1, #60]	; 0x3c
    eed4:	ldr	r2, [lr, #60]	; 0x3c
    eed8:	cmp	r2, r3
    eedc:	bne	ee94 <sf_bpf_optimize+0x394>
    eee0:	ldr	r3, [r1, #84]	; 0x54
    eee4:	ldr	r2, [lr, #84]	; 0x54
    eee8:	cmp	r2, r3
    eeec:	bne	ee94 <sf_bpf_optimize+0x394>
    eef0:	ldr	r3, [lr, #4]
    eef4:	mov	r8, r1
    eef8:	str	r8, [sp, #4]
    eefc:	ldr	r2, [r1, #4]
    ef00:	mov	r1, ip
    ef04:	cmp	r3, #0
    ef08:	beq	f13c <sf_bpf_optimize+0x63c>
    ef0c:	ldr	r8, [r3]
    ef10:	cmn	r8, #1
    ef14:	bne	f15c <sf_bpf_optimize+0x65c>
    ef18:	ldr	ip, [sp, #4]
    ef1c:	b	ef2c <sf_bpf_optimize+0x42c>
    ef20:	ldr	r8, [r3]
    ef24:	cmn	r8, #1
    ef28:	bne	f158 <sf_bpf_optimize+0x658>
    ef2c:	ldr	r3, [r3, #16]
    ef30:	cmp	r3, #0
    ef34:	bne	ef20 <sf_bpf_optimize+0x420>
    ef38:	cmp	r2, #0
    ef3c:	str	ip, [sp, #4]
    ef40:	beq	f188 <sf_bpf_optimize+0x688>
    ef44:	ldr	r8, [r2]
    ef48:	cmn	r8, #1
    ef4c:	bne	f104 <sf_bpf_optimize+0x604>
    ef50:	ldr	ip, [sp, #4]
    ef54:	b	ef64 <sf_bpf_optimize+0x464>
    ef58:	ldr	r8, [r2]
    ef5c:	cmn	r8, #1
    ef60:	bne	f100 <sf_bpf_optimize+0x600>
    ef64:	ldr	r2, [r2, #16]
    ef68:	cmp	r2, #0
    ef6c:	bne	ef58 <sf_bpf_optimize+0x458>
    ef70:	mov	r2, ip
    ef74:	cmp	r3, #0
    ef78:	mov	ip, r1
    ef7c:	mov	r1, r2
    ef80:	bne	ee94 <sf_bpf_optimize+0x394>
    ef84:	ldr	r3, [r1, #100]	; 0x64
    ef88:	cmp	r3, #0
    ef8c:	moveq	r3, r1
    ef90:	str	r3, [lr, #100]	; 0x64
    ef94:	b	ee64 <sf_bpf_optimize+0x364>
    ef98:	cmp	r4, #0
    ef9c:	ble	eff0 <sf_bpf_optimize+0x4f0>
    efa0:	mov	r2, #1
    efa4:	add	ip, r0, fp
    efa8:	ldr	r3, [r0], #4
    efac:	ldr	r1, [r3, #60]	; 0x3c
    efb0:	cmp	r1, #0
    efb4:	beq	efdc <sf_bpf_optimize+0x4dc>
    efb8:	ldr	r1, [r1, #100]	; 0x64
    efbc:	cmp	r1, #0
    efc0:	movne	r2, #0
    efc4:	strne	r1, [r3, #60]	; 0x3c
    efc8:	ldr	r1, [r3, #84]	; 0x54
    efcc:	ldr	r1, [r1, #100]	; 0x64
    efd0:	cmp	r1, #0
    efd4:	movne	r2, #0
    efd8:	strne	r1, [r3, #84]	; 0x54
    efdc:	cmp	ip, r0
    efe0:	bne	efa8 <sf_bpf_optimize+0x4a8>
    efe4:	cmp	r2, #0
    efe8:	add	r5, r5, #1
    efec:	beq	ee14 <sf_bpf_optimize+0x314>
    eff0:	ldr	r3, [sl]
    eff4:	mov	r2, #0
    eff8:	mov	r9, sl
    effc:	ldr	r4, [r3, #4]
    f000:	str	r2, [r3, #4]
    f004:	ldr	r2, [sl]
    f008:	ldr	r3, [r2, #8]
    f00c:	and	r3, r3, #7
    f010:	cmp	r3, #5
    f014:	bne	f180 <sf_bpf_optimize+0x680>
    f018:	ldr	r3, [r2, #60]	; 0x3c
    f01c:	ldr	r1, [r2, #84]	; 0x54
    f020:	cmp	r1, r3
    f024:	beq	f040 <sf_bpf_optimize+0x540>
    f028:	b	f180 <sf_bpf_optimize+0x680>
    f02c:	ldr	r2, [r3, #60]	; 0x3c
    f030:	ldr	r1, [r3, #84]	; 0x54
    f034:	cmp	r2, r1
    f038:	bne	f054 <sf_bpf_optimize+0x554>
    f03c:	mov	r3, r2
    f040:	str	r3, [r9]
    f044:	ldr	r2, [r3, #8]
    f048:	and	r2, r2, #7
    f04c:	cmp	r2, #5
    f050:	beq	f02c <sf_bpf_optimize+0x52c>
    f054:	ldr	r1, [r3, #4]
    f058:	cmp	r1, #0
    f05c:	beq	f068 <sf_bpf_optimize+0x568>
    f060:	mov	r0, r4
    f064:	bl	5bf4 <sf_append>
    f068:	ldr	r3, [r9]
    f06c:	str	r4, [r3, #4]
    f070:	ldr	r2, [r9]
    f074:	ldr	r3, [r2, #8]
    f078:	and	r3, r3, #7
    f07c:	cmp	r3, #6
    f080:	moveq	r3, #0
    f084:	streq	r3, [r2, #4]
    f088:	ldr	r3, [sp, #44]	; 0x2c
    f08c:	ldr	r0, [r3]
    f090:	bl	d48 <free@plt>
    f094:	ldr	r3, [sp, #40]	; 0x28
    f098:	ldr	r0, [r3]
    f09c:	bl	d48 <free@plt>
    f0a0:	ldr	r3, [sp, #12]
    f0a4:	ldr	r0, [r3]
    f0a8:	bl	d48 <free@plt>
    f0ac:	ldr	r3, [sp, #36]	; 0x24
    f0b0:	ldr	r0, [r3]
    f0b4:	bl	d48 <free@plt>
    f0b8:	ldr	r3, [sp, #32]
    f0bc:	ldr	r0, [r3]
    f0c0:	bl	d48 <free@plt>
    f0c4:	ldr	r3, [sp]
    f0c8:	ldr	r0, [r3]
    f0cc:	add	sp, sp, #52	; 0x34
    f0d0:	ldrd	r4, [sp]
    f0d4:	ldrd	r6, [sp, #8]
    f0d8:	ldrd	r8, [sp, #16]
    f0dc:	ldrd	sl, [sp, #24]
    f0e0:	ldr	lr, [sp, #32]
    f0e4:	add	sp, sp, #36	; 0x24
    f0e8:	b	d48 <free@plt>
    f0ec:	mov	r0, #1
    f0f0:	cmp	r2, ip
    f0f4:	add	r3, r3, r0
    f0f8:	bne	ed20 <sf_bpf_optimize+0x220>
    f0fc:	b	ed68 <sf_bpf_optimize+0x268>
    f100:	str	ip, [sp, #4]
    f104:	cmp	r3, #0
    f108:	beq	f150 <sf_bpf_optimize+0x650>
    f10c:	ldr	ip, [r2]
    f110:	ldr	r8, [r3]
    f114:	cmp	r8, ip
    f118:	bne	f150 <sf_bpf_optimize+0x650>
    f11c:	ldr	r8, [r2, #12]
    f120:	ldr	ip, [r3, #12]
    f124:	cmp	ip, r8
    f128:	bne	f150 <sf_bpf_optimize+0x650>
    f12c:	ldr	r3, [r3, #16]
    f130:	ldr	r2, [r2, #16]
    f134:	cmp	r3, #0
    f138:	bne	ef0c <sf_bpf_optimize+0x40c>
    f13c:	cmp	r2, #0
    f140:	beq	f190 <sf_bpf_optimize+0x690>
    f144:	ldr	ip, [r2]
    f148:	cmn	ip, #1
    f14c:	beq	ef50 <sf_bpf_optimize+0x450>
    f150:	mov	ip, r1
    f154:	b	ee94 <sf_bpf_optimize+0x394>
    f158:	str	ip, [sp, #4]
    f15c:	cmp	r2, #0
    f160:	bne	ef44 <sf_bpf_optimize+0x444>
    f164:	mov	ip, r1
    f168:	b	ee94 <sf_bpf_optimize+0x394>
    f16c:	mov	sl, #0
    f170:	str	r0, [fp, #888]	; 0x378
    f174:	mov	r3, sl
    f178:	str	r0, [fp, #892]	; 0x37c
    f17c:	b	ed70 <sf_bpf_optimize+0x270>
    f180:	mov	r3, r2
    f184:	b	f054 <sf_bpf_optimize+0x554>
    f188:	mov	r1, ip
    f18c:	b	ef84 <sf_bpf_optimize+0x484>
    f190:	ldr	r1, [sp, #4]
    f194:	b	ef84 <sf_bpf_optimize+0x484>
    f198:	ldr	r0, [pc, #48]	; f1d0 <sf_bpf_optimize+0x6d0>
    f19c:	add	r0, pc, r0
    f1a0:	bl	2210 <sf_bpf_error>
    f1a4:	.word	0x00022c04
    f1a8:	.word	0x000224c0
    f1ac:	.word	0x000000cc
    f1b0:	.word	0x000000e4
    f1b4:	.word	0x000000c4
    f1b8:	.word	0x000000b4
    f1bc:	.word	0x00022ab0
    f1c0:	.word	0x00022a78
    f1c4:	.word	0x000229ac
    f1c8:	.word	0x00000100
    f1cc:	.word	0x000000f4
    f1d0:	.word	0x000057c0

0000f1d4 <sf_icode_to_fcode>:
    f1d4:	strd	r4, [sp, #-32]!	; 0xffffffe0
    f1d8:	ldr	r5, [pc, #160]	; f280 <sf_icode_to_fcode+0xac>
    f1dc:	strd	r6, [sp, #8]
    f1e0:	strd	r8, [sp, #16]
    f1e4:	mov	r8, r0
    f1e8:	mov	r9, r1
    f1ec:	str	sl, [sp, #24]
    f1f0:	str	lr, [sp, #28]
    f1f4:	add	r5, pc, r5
    f1f8:	ldr	r6, [r5]
    f1fc:	add	r6, r6, #1
    f200:	b	f208 <sf_icode_to_fcode+0x34>
    f204:	bl	d48 <free@plt>
    f208:	mov	r0, r8
    f20c:	str	r6, [r5]
    f210:	bl	c6c8 <count_stmts>
    f214:	lsl	r4, r0, #3
    f218:	mov	r1, #1
    f21c:	str	r0, [r9]
    f220:	mov	r0, r4
    f224:	bl	ce8 <calloc@plt>
    f228:	subs	r7, r0, #0
    f22c:	beq	f274 <sf_icode_to_fcode+0xa0>
    f230:	add	r3, r6, #1
    f234:	add	r4, r7, r4
    f238:	mov	r0, r8
    f23c:	add	r6, r6, #2
    f240:	str	r3, [r5]
    f244:	str	r4, [r5, #868]	; 0x364
    f248:	str	r7, [r5, #872]	; 0x368
    f24c:	bl	c778 <convert_code_r>
    f250:	cmp	r0, #0
    f254:	mov	r0, r7
    f258:	beq	f204 <sf_icode_to_fcode+0x30>
    f25c:	ldrd	r4, [sp]
    f260:	ldrd	r6, [sp, #8]
    f264:	ldrd	r8, [sp, #16]
    f268:	ldr	sl, [sp, #24]
    f26c:	add	sp, sp, #28
    f270:	pop	{pc}		; (ldr pc, [sp], #4)
    f274:	ldr	r0, [pc, #8]	; f284 <sf_icode_to_fcode+0xb0>
    f278:	add	r0, pc, r0
    f27c:	bl	2210 <sf_bpf_error>
    f280:	.word	0x00022534
    f284:	.word	0x000056e4

0000f288 <sfbpf_strcasecmp>:
    f288:	ldr	r3, [pc, #52]	; f2c4 <sfbpf_strcasecmp+0x3c>
    f28c:	sub	r2, r0, #1
    f290:	push	{lr}		; (str lr, [sp, #-4]!)
    f294:	add	r3, pc, r3
    f298:	b	f2a4 <sfbpf_strcasecmp+0x1c>
    f29c:	cmp	r0, #0
    f2a0:	beq	f2c0 <sfbpf_strcasecmp+0x38>
    f2a4:	ldrb	r0, [r2, #1]!
    f2a8:	ldrb	ip, [r1], #1
    f2ac:	ldrb	lr, [r3, r0]
    f2b0:	ldrb	ip, [r3, ip]
    f2b4:	cmp	lr, ip
    f2b8:	beq	f29c <sfbpf_strcasecmp+0x14>
    f2bc:	sub	r0, lr, ip
    f2c0:	pop	{pc}		; (ldr pc, [sp], #4)
    f2c4:	.word	0x000056d0

0000f2c8 <pcap_next_etherent>:
    f2c8:	strd	r4, [sp, #-24]!	; 0xffffffe8
    f2cc:	mov	r4, r0
    f2d0:	mov	r2, #128	; 0x80
    f2d4:	ldr	r0, [pc, #568]	; f514 <pcap_next_etherent+0x24c>
    f2d8:	mov	r1, #0
    f2dc:	strd	r6, [sp, #8]
    f2e0:	str	r8, [sp, #16]
    f2e4:	str	lr, [sp, #20]
    f2e8:	add	r0, pc, r0
    f2ec:	bl	e2c <memset@plt>
    f2f0:	bl	dd8 <__ctype_b_loc@plt>
    f2f4:	mov	r5, r0
    f2f8:	mov	r0, r4
    f2fc:	bl	ec8 <getc@plt>
    f300:	ldr	r2, [r5]
    f304:	lsl	r3, r0, #1
    f308:	ldrh	r3, [r2, r3]
    f30c:	tst	r3, #8192	; 0x2000
    f310:	bne	f2f8 <pcap_next_etherent+0x30>
    f314:	cmp	r0, #10
    f318:	beq	f2f8 <pcap_next_etherent+0x30>
    f31c:	tst	r3, #4096	; 0x1000
    f320:	beq	f39c <pcap_next_etherent+0xd4>
    f324:	ldr	r6, [pc, #492]	; f518 <pcap_next_etherent+0x250>
    f328:	tst	r3, #2048	; 0x800
    f32c:	subne	r7, r0, #48	; 0x30
    f330:	add	r6, pc, r6
    f334:	add	r8, r6, #6
    f338:	bne	f348 <pcap_next_etherent+0x80>
    f33c:	tst	r3, #512	; 0x200
    f340:	subne	r7, r0, #87	; 0x57
    f344:	subeq	r7, r0, #55	; 0x37
    f348:	mov	r0, r4
    f34c:	bl	ec8 <getc@plt>
    f350:	ldr	r2, [r5]
    f354:	lsl	r3, r0, #1
    f358:	ldrh	r3, [r2, r3]
    f35c:	tst	r3, #4096	; 0x1000
    f360:	bne	f3c0 <pcap_next_etherent+0xf8>
    f364:	cmp	r0, #58	; 0x3a
    f368:	strb	r7, [r6], #1
    f36c:	bne	f3f4 <pcap_next_etherent+0x12c>
    f370:	mov	r0, r4
    f374:	bl	ec8 <getc@plt>
    f378:	cmp	r6, r8
    f37c:	beq	f3f4 <pcap_next_etherent+0x12c>
    f380:	ldr	r2, [r5]
    f384:	lsl	r3, r0, #1
    f388:	ldrh	r3, [r2, r3]
    f38c:	tst	r3, #2048	; 0x800
    f390:	subne	r7, r0, #48	; 0x30
    f394:	beq	f33c <pcap_next_etherent+0x74>
    f398:	b	f348 <pcap_next_etherent+0x80>
    f39c:	mov	r0, r4
    f3a0:	bl	ec8 <getc@plt>
    f3a4:	cmp	r0, #10
    f3a8:	cmnne	r0, #1
    f3ac:	bne	f39c <pcap_next_etherent+0xd4>
    f3b0:	cmn	r0, #1
    f3b4:	bne	f2f8 <pcap_next_etherent+0x30>
    f3b8:	mov	r0, #0
    f3bc:	b	f4b4 <pcap_next_etherent+0x1ec>
    f3c0:	tst	r3, #2048	; 0x800
    f3c4:	lsl	r7, r7, #4
    f3c8:	subne	r3, r0, #48	; 0x30
    f3cc:	bne	f3dc <pcap_next_etherent+0x114>
    f3d0:	tst	r3, #512	; 0x200
    f3d4:	subne	r3, r0, #87	; 0x57
    f3d8:	subeq	r3, r0, #55	; 0x37
    f3dc:	mov	r0, r4
    f3e0:	orr	r7, r7, r3
    f3e4:	bl	ec8 <getc@plt>
    f3e8:	cmp	r0, #58	; 0x3a
    f3ec:	strb	r7, [r6], #1
    f3f0:	beq	f370 <pcap_next_etherent+0xa8>
    f3f4:	cmn	r0, #1
    f3f8:	beq	f3b8 <pcap_next_etherent+0xf0>
    f3fc:	ldr	r3, [r5]
    f400:	lsl	r0, r0, #1
    f404:	ldrh	r3, [r3, r0]
    f408:	tst	r3, #8192	; 0x2000
    f40c:	bne	f41c <pcap_next_etherent+0x154>
    f410:	b	f4c8 <pcap_next_etherent+0x200>
    f414:	cmp	r0, #10
    f418:	beq	f2f8 <pcap_next_etherent+0x30>
    f41c:	mov	r0, r4
    f420:	bl	ec8 <getc@plt>
    f424:	ldr	r1, [r5]
    f428:	lsl	r2, r0, #1
    f42c:	mov	r3, r0
    f430:	ldrh	r2, [r1, r2]
    f434:	tst	r2, #8192	; 0x2000
    f438:	bne	f414 <pcap_next_etherent+0x14c>
    f43c:	cmp	r0, #10
    f440:	beq	f2f8 <pcap_next_etherent+0x30>
    f444:	cmp	r0, #35	; 0x23
    f448:	beq	f4e0 <pcap_next_etherent+0x218>
    f44c:	ldr	r6, [pc, #200]	; f51c <pcap_next_etherent+0x254>
    f450:	ldr	r7, [pc, #200]	; f520 <pcap_next_etherent+0x258>
    f454:	add	r6, pc, r6
    f458:	add	r6, r6, #6
    f45c:	add	r7, pc, r7
    f460:	add	r7, r7, #127	; 0x7f
    f464:	b	f478 <pcap_next_etherent+0x1b0>
    f468:	cmn	r0, #1
    f46c:	beq	f4f8 <pcap_next_etherent+0x230>
    f470:	cmp	r6, r7
    f474:	beq	f49c <pcap_next_etherent+0x1d4>
    f478:	mov	r0, r4
    f47c:	strb	r3, [r6], #1
    f480:	bl	ec8 <getc@plt>
    f484:	ldr	r1, [r5]
    f488:	lsl	r2, r0, #1
    f48c:	mov	r3, r0
    f490:	ldrh	r2, [r1, r2]
    f494:	ands	r2, r2, #8192	; 0x2000
    f498:	beq	f468 <pcap_next_etherent+0x1a0>
    f49c:	mov	r2, #0
    f4a0:	cmp	r3, #10
    f4a4:	strb	r2, [r6]
    f4a8:	bne	f4fc <pcap_next_etherent+0x234>
    f4ac:	ldr	r0, [pc, #112]	; f524 <pcap_next_etherent+0x25c>
    f4b0:	add	r0, pc, r0
    f4b4:	ldrd	r4, [sp]
    f4b8:	ldrd	r6, [sp, #8]
    f4bc:	ldr	r8, [sp, #16]
    f4c0:	add	sp, sp, #20
    f4c4:	pop	{pc}		; (ldr pc, [sp], #4)
    f4c8:	mov	r0, r4
    f4cc:	bl	ec8 <getc@plt>
    f4d0:	cmp	r0, #10
    f4d4:	cmnne	r0, #1
    f4d8:	bne	f4c8 <pcap_next_etherent+0x200>
    f4dc:	b	f3b0 <pcap_next_etherent+0xe8>
    f4e0:	mov	r0, r4
    f4e4:	bl	ec8 <getc@plt>
    f4e8:	cmp	r0, #10
    f4ec:	cmnne	r0, #1
    f4f0:	bne	f4e0 <pcap_next_etherent+0x218>
    f4f4:	b	f3b0 <pcap_next_etherent+0xe8>
    f4f8:	strb	r2, [r6]
    f4fc:	mov	r0, r4
    f500:	bl	ec8 <getc@plt>
    f504:	cmp	r0, #10
    f508:	cmnne	r0, #1
    f50c:	bne	f4fc <pcap_next_etherent+0x234>
    f510:	b	f4ac <pcap_next_etherent+0x1e4>
    f514:	.word	0x000227c8
    f518:	.word	0x00022780
    f51c:	.word	0x0002265c
    f520:	.word	0x00022654
    f524:	.word	0x00022600

0000f528 <str2tok>:
    f528:	strd	r4, [sp, #-16]!
    f52c:	mov	r5, r0
    f530:	str	r6, [sp, #8]
    f534:	str	lr, [sp, #12]
    f538:	ldr	r0, [r1, #4]
    f53c:	cmp	r0, #0
    f540:	beq	f580 <str2tok+0x58>
    f544:	mov	r4, r1
    f548:	b	f55c <str2tok+0x34>
    f54c:	add	r4, r4, #8
    f550:	ldr	r0, [r4, #4]
    f554:	cmp	r0, #0
    f558:	beq	f580 <str2tok+0x58>
    f55c:	mov	r1, r5
    f560:	bl	f288 <sfbpf_strcasecmp>
    f564:	cmp	r0, #0
    f568:	bne	f54c <str2tok+0x24>
    f56c:	ldr	r0, [r4]
    f570:	ldrd	r4, [sp]
    f574:	ldr	r6, [sp, #8]
    f578:	add	sp, sp, #12
    f57c:	pop	{pc}		; (ldr pc, [sp], #4)
    f580:	ldrd	r4, [sp]
    f584:	mvn	r0, #0
    f588:	ldr	r6, [sp, #8]
    f58c:	add	sp, sp, #12
    f590:	pop	{pc}		; (ldr pc, [sp], #4)

0000f594 <sfbpf_parse>:
    f594:	strd	r4, [sp, #-36]!	; 0xffffffdc
    f598:	mov	r3, #0
    f59c:	mvn	r0, #1
    f5a0:	ldr	r2, [pc, #4076]	; 10594 <sfbpf_parse+0x1000>
    f5a4:	str	lr, [sp, #32]
    f5a8:	ldr	lr, [pc, #4072]	; 10598 <sfbpf_parse+0x1004>
    f5ac:	strd	r6, [sp, #8]
    f5b0:	mov	r6, r3
    f5b4:	ldr	ip, [pc, #4064]	; 1059c <sfbpf_parse+0x1008>
    f5b8:	strd	r8, [sp, #16]
    f5bc:	mov	r9, #200	; 0xc8
    f5c0:	strd	sl, [sp, #24]
    f5c4:	sub	sp, sp, #3664	; 0xe50
    f5c8:	sub	sp, sp, #4
    f5cc:	add	lr, pc, lr
    f5d0:	ldr	r1, [pc, #4040]	; 105a0 <sfbpf_parse+0x100c>
    f5d4:	add	r5, sp, #64	; 0x40
    f5d8:	add	r7, sp, #464	; 0x1d0
    f5dc:	add	ip, pc, ip
    f5e0:	mov	r4, r5
    f5e4:	str	r7, [sp, #12]
    f5e8:	sub	ip, ip, #3888	; 0xf30
    f5ec:	mov	fp, r5
    f5f0:	str	r5, [sp, #20]
    f5f4:	sub	ip, ip, #12
    f5f8:	str	lr, [sp, #24]
    f5fc:	ldr	r8, [lr, r2]
    f600:	str	ip, [sp, #16]
    f604:	ldr	r2, [pc, #3992]	; 105a4 <sfbpf_parse+0x1010>
    f608:	str	r3, [r8]
    f60c:	str	r8, [sp, #32]
    f610:	ldr	r1, [lr, r1]
    f614:	add	r2, pc, r2
    f618:	add	r2, r2, #400	; 0x190
    f61c:	str	r9, [sp, #4]
    f620:	strh	r3, [sp, #64]	; 0x40
    f624:	str	r0, [r1]
    f628:	str	r1, [sp, #8]
    f62c:	str	r2, [sp, #28]
    f630:	b	f7b0 <sfbpf_parse+0x21c>
    f634:	movw	r3, #365	; 0x16d
    f638:	cmp	r0, r3
    f63c:	addgt	r5, r5, #2
    f640:	movgt	r2, #2
    f644:	bgt	f65c <sfbpf_parse+0xc8>
    f648:	ldr	r3, [pc, #3928]	; 105a8 <sfbpf_parse+0x1014>
    f64c:	add	r3, pc, r3
    f650:	add	r0, r3, r0
    f654:	ldrb	r2, [r0, #548]	; 0x224
    f658:	add	r5, r5, r2
    f65c:	movw	r3, #669	; 0x29d
    f660:	cmp	r5, r3
    f664:	bhi	f7fc <sfbpf_parse+0x268>
    f668:	ldr	r3, [pc, #3900]	; 105ac <sfbpf_parse+0x1018>
    f66c:	lsl	r5, r5, #1
    f670:	add	r3, pc, r3
    f674:	add	r1, r3, #916	; 0x394
    f678:	ldrsh	r1, [r1, r5]
    f67c:	cmp	r1, r2
    f680:	bne	f7fc <sfbpf_parse+0x268>
    f684:	add	r3, r3, #2256	; 0x8d0
    f688:	ldrsh	r6, [r3, r5]
    f68c:	cmp	r6, #0
    f690:	mov	r1, r6
    f694:	rsble	r6, r6, #0
    f698:	ble	f814 <sfbpf_parse+0x280>
    f69c:	ldr	ip, [sp, #8]
    f6a0:	mvn	r2, #1
    f6a4:	add	r0, r7, #16
    f6a8:	ldr	r3, [pc, #3840]	; 105b0 <sfbpf_parse+0x101c>
    f6ac:	str	r2, [ip]
    f6b0:	ldr	r2, [sp, #24]
    f6b4:	ldr	r3, [r2, r3]
    f6b8:	ldrd	r8, [r3]
    f6bc:	ldrd	r2, [r3, #8]
    f6c0:	strd	r8, [r7, #16]
    f6c4:	mov	r7, r0
    f6c8:	strd	r2, [r0, #8]
    f6cc:	ldr	r0, [sp, #4]
    f6d0:	add	r4, r4, #2
    f6d4:	strh	r1, [r4]
    f6d8:	sub	r3, r0, #-2147483647	; 0x80000001
    f6dc:	lsl	r3, r3, #1
    f6e0:	add	r2, fp, r3
    f6e4:	cmp	r4, r2
    f6e8:	bcc	f7a8 <sfbpf_parse+0x214>
    f6ec:	sub	r5, r4, fp
    f6f0:	movw	r2, #9999	; 0x270f
    f6f4:	asr	r5, r5, #1
    f6f8:	cmp	r0, r2
    f6fc:	add	r5, r5, #1
    f700:	bhi	10d1c <sfbpf_parse+0x1788>
    f704:	add	r3, r3, #2
    f708:	movw	r9, #10000	; 0x2710
    f70c:	cmp	r3, r9
    f710:	movcc	r7, r3
    f714:	movcs	r7, r9
    f718:	add	r0, r7, r7, lsl #3
    f71c:	str	r7, [sp, #4]
    f720:	lsl	r0, r0, #1
    f724:	add	r0, r0, #15
    f728:	bl	dc0 <malloc@plt>
    f72c:	subs	sl, r0, #0
    f730:	beq	10d1c <sfbpf_parse+0x1788>
    f734:	lsl	r7, r7, #1
    f738:	mov	r1, fp
    f73c:	mov	r9, sl
    f740:	lsl	r4, r5, #1
    f744:	add	r8, r7, #15
    f748:	lsl	r5, r5, #4
    f74c:	bic	r8, r8, #15
    f750:	mov	r2, r4
    f754:	add	r8, sl, r8
    f758:	bl	d6c <memcpy@plt>
    f75c:	mov	r2, r5
    f760:	mov	r0, r8
    f764:	ldr	r1, [sp, #12]
    f768:	bl	d6c <memcpy@plt>
    f76c:	ldr	r3, [sp, #20]
    f770:	cmp	fp, r3
    f774:	beq	f780 <sfbpf_parse+0x1ec>
    f778:	mov	r0, fp
    f77c:	bl	d48 <free@plt>
    f780:	sub	r4, r4, #2
    f784:	sub	r7, r7, #2
    f788:	add	r7, sl, r7
    f78c:	add	r4, sl, r4
    f790:	cmp	r4, r7
    f794:	sub	r5, r5, #16
    f798:	add	r7, r8, r5
    f79c:	bcs	fdac <sfbpf_parse+0x818>
    f7a0:	mov	fp, sl
    f7a4:	str	r8, [sp, #12]
    f7a8:	cmp	r6, #3
    f7ac:	beq	fc74 <sfbpf_parse+0x6e0>
    f7b0:	ldr	r3, [pc, #3580]	; 105b4 <sfbpf_parse+0x1020>
    f7b4:	lsl	r2, r6, #1
    f7b8:	add	r3, pc, r3
    f7bc:	ldrsh	r5, [r3, r2]
    f7c0:	cmn	r5, #198	; 0xc6
    f7c4:	beq	f7fc <sfbpf_parse+0x268>
    f7c8:	ldr	r3, [sp, #8]
    f7cc:	ldr	r0, [r3]
    f7d0:	cmn	r0, #2
    f7d4:	beq	fc54 <sfbpf_parse+0x6c0>
    f7d8:	cmp	r0, #0
    f7dc:	bgt	f634 <sfbpf_parse+0xa0>
    f7e0:	ldr	r1, [sp, #8]
    f7e4:	mov	r3, #0
    f7e8:	mov	r2, r3
    f7ec:	str	r3, [r1]
    f7f0:	movw	r3, #669	; 0x29d
    f7f4:	cmp	r5, r3
    f7f8:	bls	f668 <sfbpf_parse+0xd4>
    f7fc:	ldr	r3, [pc, #3508]	; 105b8 <sfbpf_parse+0x1024>
    f800:	add	r3, pc, r3
    f804:	add	r6, r3, r6
    f808:	ldrb	r6, [r6, #3596]	; 0xe0c
    f80c:	cmp	r6, #0
    f810:	beq	10ce4 <sfbpf_parse+0x1750>
    f814:	ldr	r3, [pc, #3488]	; 105bc <sfbpf_parse+0x1028>
    f818:	add	r8, sp, #48	; 0x30
    f81c:	sub	ip, r6, #2
    f820:	add	r3, pc, r3
    f824:	add	r3, r3, r6
    f828:	ldrb	r5, [r3, #3872]	; 0xf20
    f82c:	rsb	r3, r5, #1
    f830:	lsl	r3, r3, #4
    f834:	add	lr, r7, r3
    f838:	ldrd	r2, [r3, r7]
    f83c:	ldrd	r0, [lr, #8]
    f840:	ldr	sl, [lr, #8]
    f844:	strd	r2, [r8]
    f848:	ldr	r3, [lr, #4]
    f84c:	strd	r0, [r8, #8]
    f850:	str	r3, [sp]
    f854:	ldr	r3, [lr, #12]
    f858:	cmp	ip, #200	; 0xc8
    f85c:	addls	pc, pc, ip, lsl #2
    f860:	b	fbc4 <sfbpf_parse+0x630>
    f864:	b	10af0 <sfbpf_parse+0x155c>
    f868:	b	fbc4 <sfbpf_parse+0x630>
    f86c:	b	10b04 <sfbpf_parse+0x1570>
    f870:	b	fbc4 <sfbpf_parse+0x630>
    f874:	b	10b18 <sfbpf_parse+0x1584>
    f878:	b	10b4c <sfbpf_parse+0x15b8>
    f87c:	b	10b80 <sfbpf_parse+0x15ec>
    f880:	b	10bb4 <sfbpf_parse+0x1620>
    f884:	b	10be8 <sfbpf_parse+0x1654>
    f888:	b	10c0c <sfbpf_parse+0x1678>
    f88c:	b	fbc4 <sfbpf_parse+0x630>
    f890:	b	fd68 <sfbpf_parse+0x7d4>
    f894:	b	10c98 <sfbpf_parse+0x1704>
    f898:	b	10cbc <sfbpf_parse+0x1728>
    f89c:	b	10214 <sfbpf_parse+0xc80>
    f8a0:	b	10238 <sfbpf_parse+0xca4>
    f8a4:	b	fb88 <sfbpf_parse+0x5f4>
    f8a8:	b	1025c <sfbpf_parse+0xcc8>
    f8ac:	b	10280 <sfbpf_parse+0xcec>
    f8b0:	b	102a4 <sfbpf_parse+0xd10>
    f8b4:	b	102dc <sfbpf_parse+0xd48>
    f8b8:	b	10314 <sfbpf_parse+0xd80>
    f8bc:	b	10344 <sfbpf_parse+0xdb0>
    f8c0:	b	10368 <sfbpf_parse+0xdd4>
    f8c4:	b	fbc4 <sfbpf_parse+0x630>
    f8c8:	b	1038c <sfbpf_parse+0xdf8>
    f8cc:	b	103c0 <sfbpf_parse+0xe2c>
    f8d0:	b	fd68 <sfbpf_parse+0x7d4>
    f8d4:	b	fbc4 <sfbpf_parse+0x630>
    f8d8:	b	fbc4 <sfbpf_parse+0x630>
    f8dc:	b	10004 <sfbpf_parse+0xa70>
    f8e0:	b	10034 <sfbpf_parse+0xaa0>
    f8e4:	b	10050 <sfbpf_parse+0xabc>
    f8e8:	b	fd34 <sfbpf_parse+0x7a0>
    f8ec:	b	10c54 <sfbpf_parse+0x16c0>
    f8f0:	b	10c70 <sfbpf_parse+0x16dc>
    f8f4:	b	fd34 <sfbpf_parse+0x7a0>
    f8f8:	b	109ec <sfbpf_parse+0x1458>
    f8fc:	b	101b8 <sfbpf_parse+0xc24>
    f900:	b	101c8 <sfbpf_parse+0xc34>
    f904:	b	101e8 <sfbpf_parse+0xc54>
    f908:	b	ff74 <sfbpf_parse+0x9e0>
    f90c:	b	ffa0 <sfbpf_parse+0xa0c>
    f910:	b	ffb8 <sfbpf_parse+0xa24>
    f914:	b	ffd8 <sfbpf_parse+0xa44>
    f918:	b	fd1c <sfbpf_parse+0x788>
    f91c:	b	10654 <sfbpf_parse+0x10c0>
    f920:	b	fd1c <sfbpf_parse+0x788>
    f924:	b	fbc4 <sfbpf_parse+0x630>
    f928:	b	10674 <sfbpf_parse+0x10e0>
    f92c:	b	fcd4 <sfbpf_parse+0x740>
    f930:	b	fcc8 <sfbpf_parse+0x734>
    f934:	b	fcbc <sfbpf_parse+0x728>
    f938:	b	fcbc <sfbpf_parse+0x728>
    f93c:	b	fcb0 <sfbpf_parse+0x71c>
    f940:	b	fcb0 <sfbpf_parse+0x71c>
    f944:	b	10548 <sfbpf_parse+0xfb4>
    f948:	b	10554 <sfbpf_parse+0xfc0>
    f94c:	b	fce0 <sfbpf_parse+0x74c>
    f950:	b	ff44 <sfbpf_parse+0x9b0>
    f954:	b	fcd4 <sfbpf_parse+0x740>
    f958:	b	fcc8 <sfbpf_parse+0x734>
    f95c:	b	fcbc <sfbpf_parse+0x728>
    f960:	b	fce0 <sfbpf_parse+0x74c>
    f964:	b	fcb0 <sfbpf_parse+0x71c>
    f968:	b	fcd4 <sfbpf_parse+0x740>
    f96c:	b	fcc8 <sfbpf_parse+0x734>
    f970:	b	fcbc <sfbpf_parse+0x728>
    f974:	b	fcb0 <sfbpf_parse+0x71c>
    f978:	b	1077c <sfbpf_parse+0x11e8>
    f97c:	b	10788 <sfbpf_parse+0x11f4>
    f980:	b	fce0 <sfbpf_parse+0x74c>
    f984:	b	10794 <sfbpf_parse+0x1200>
    f988:	b	1074c <sfbpf_parse+0x11b8>
    f98c:	b	10758 <sfbpf_parse+0x11c4>
    f990:	b	10764 <sfbpf_parse+0x11d0>
    f994:	b	10770 <sfbpf_parse+0x11dc>
    f998:	b	106ec <sfbpf_parse+0x1158>
    f99c:	b	106f8 <sfbpf_parse+0x1164>
    f9a0:	b	10704 <sfbpf_parse+0x1170>
    f9a4:	b	10710 <sfbpf_parse+0x117c>
    f9a8:	b	1071c <sfbpf_parse+0x1188>
    f9ac:	b	10728 <sfbpf_parse+0x1194>
    f9b0:	b	10734 <sfbpf_parse+0x11a0>
    f9b4:	b	10740 <sfbpf_parse+0x11ac>
    f9b8:	b	fe70 <sfbpf_parse+0x8dc>
    f9bc:	b	fe7c <sfbpf_parse+0x8e8>
    f9c0:	b	fe88 <sfbpf_parse+0x8f4>
    f9c4:	b	fe94 <sfbpf_parse+0x900>
    f9c8:	b	fea0 <sfbpf_parse+0x90c>
    f9cc:	b	feac <sfbpf_parse+0x918>
    f9d0:	b	feb8 <sfbpf_parse+0x924>
    f9d4:	b	fec4 <sfbpf_parse+0x930>
    f9d8:	b	fed0 <sfbpf_parse+0x93c>
    f9dc:	b	fedc <sfbpf_parse+0x948>
    f9e0:	b	fee8 <sfbpf_parse+0x954>
    f9e4:	b	fef4 <sfbpf_parse+0x960>
    f9e8:	b	ff00 <sfbpf_parse+0x96c>
    f9ec:	b	ff0c <sfbpf_parse+0x978>
    f9f0:	b	ff18 <sfbpf_parse+0x984>
    f9f4:	b	106e0 <sfbpf_parse+0x114c>
    f9f8:	b	107bc <sfbpf_parse+0x1228>
    f9fc:	b	107c8 <sfbpf_parse+0x1234>
    fa00:	b	107d4 <sfbpf_parse+0x1240>
    fa04:	b	107ec <sfbpf_parse+0x1258>
    fa08:	b	10804 <sfbpf_parse+0x1270>
    fa0c:	b	1081c <sfbpf_parse+0x1288>
    fa10:	b	10834 <sfbpf_parse+0x12a0>
    fa14:	b	10854 <sfbpf_parse+0x12c0>
    fa18:	b	1086c <sfbpf_parse+0x12d8>
    fa1c:	b	10884 <sfbpf_parse+0x12f0>
    fa20:	b	1089c <sfbpf_parse+0x1308>
    fa24:	b	108b4 <sfbpf_parse+0x1320>
    fa28:	b	108cc <sfbpf_parse+0x1338>
    fa2c:	b	108e4 <sfbpf_parse+0x1350>
    fa30:	b	108f8 <sfbpf_parse+0x1364>
    fa34:	b	fd50 <sfbpf_parse+0x7bc>
    fa38:	b	fd50 <sfbpf_parse+0x7bc>
    fa3c:	b	109d4 <sfbpf_parse+0x1440>
    fa40:	b	109a4 <sfbpf_parse+0x1410>
    fa44:	b	109bc <sfbpf_parse+0x1428>
    fa48:	b	10938 <sfbpf_parse+0x13a4>
    fa4c:	b	10950 <sfbpf_parse+0x13bc>
    fa50:	b	10968 <sfbpf_parse+0x13d4>
    fa54:	b	10980 <sfbpf_parse+0x13ec>
    fa58:	b	10a10 <sfbpf_parse+0x147c>
    fa5c:	b	10a2c <sfbpf_parse+0x1498>
    fa60:	b	10a48 <sfbpf_parse+0x14b4>
    fa64:	b	fbc4 <sfbpf_parse+0x630>
    fa68:	b	10a60 <sfbpf_parse+0x14cc>
    fa6c:	b	fbc4 <sfbpf_parse+0x630>
    fa70:	b	fe48 <sfbpf_parse+0x8b4>
    fa74:	b	fdbc <sfbpf_parse+0x828>
    fa78:	b	fbc4 <sfbpf_parse+0x630>
    fa7c:	b	10104 <sfbpf_parse+0xb70>
    fa80:	b	101ac <sfbpf_parse+0xc18>
    fa84:	b	10cd8 <sfbpf_parse+0x1744>
    fa88:	b	10cd8 <sfbpf_parse+0x1744>
    fa8c:	b	fda0 <sfbpf_parse+0x80c>
    fa90:	b	fd94 <sfbpf_parse+0x800>
    fa94:	b	fd88 <sfbpf_parse+0x7f4>
    fa98:	b	fda0 <sfbpf_parse+0x80c>
    fa9c:	b	fd94 <sfbpf_parse+0x800>
    faa0:	b	fd88 <sfbpf_parse+0x7f4>
    faa4:	b	10424 <sfbpf_parse+0xe90>
    faa8:	b	fbc4 <sfbpf_parse+0x630>
    faac:	b	1043c <sfbpf_parse+0xea8>
    fab0:	b	1045c <sfbpf_parse+0xec8>
    fab4:	b	1047c <sfbpf_parse+0xee8>
    fab8:	b	1049c <sfbpf_parse+0xf08>
    fabc:	b	104bc <sfbpf_parse+0xf28>
    fac0:	b	104dc <sfbpf_parse+0xf48>
    fac4:	b	104fc <sfbpf_parse+0xf68>
    fac8:	b	10680 <sfbpf_parse+0x10ec>
    facc:	b	106a0 <sfbpf_parse+0x110c>
    fad0:	b	106c0 <sfbpf_parse+0x112c>
    fad4:	b	1006c <sfbpf_parse+0xad8>
    fad8:	b	10084 <sfbpf_parse+0xaf0>
    fadc:	b	10090 <sfbpf_parse+0xafc>
    fae0:	b	100a4 <sfbpf_parse+0xb10>
    fae4:	b	100b0 <sfbpf_parse+0xb1c>
    fae8:	b	100bc <sfbpf_parse+0xb28>
    faec:	b	100c8 <sfbpf_parse+0xb34>
    faf0:	b	100d4 <sfbpf_parse+0xb40>
    faf4:	b	fbc4 <sfbpf_parse+0x630>
    faf8:	b	100e0 <sfbpf_parse+0xb4c>
    fafc:	b	100ec <sfbpf_parse+0xb58>
    fb00:	b	100f8 <sfbpf_parse+0xb64>
    fb04:	b	fd5c <sfbpf_parse+0x7c8>
    fb08:	b	fcec <sfbpf_parse+0x758>
    fb0c:	b	10c30 <sfbpf_parse+0x169c>
    fb10:	b	fcf8 <sfbpf_parse+0x764>
    fb14:	b	10c48 <sfbpf_parse+0x16b4>
    fb18:	b	10c8c <sfbpf_parse+0x16f8>
    fb1c:	b	ff38 <sfbpf_parse+0x9a4>
    fb20:	b	10ac8 <sfbpf_parse+0x1534>
    fb24:	b	fff8 <sfbpf_parse+0xa64>
    fb28:	b	10c3c <sfbpf_parse+0x16a8>
    fb2c:	b	fe3c <sfbpf_parse+0x8a8>
    fb30:	b	ff2c <sfbpf_parse+0x998>
    fb34:	b	fbc4 <sfbpf_parse+0x630>
    fb38:	b	107a0 <sfbpf_parse+0x120c>
    fb3c:	b	10ad4 <sfbpf_parse+0x1540>
    fb40:	b	fd04 <sfbpf_parse+0x770>
    fb44:	b	103f4 <sfbpf_parse+0xe60>
    fb48:	b	fbc4 <sfbpf_parse+0x630>
    fb4c:	b	10560 <sfbpf_parse+0xfcc>
    fb50:	b	fd5c <sfbpf_parse+0x7c8>
    fb54:	b	fcec <sfbpf_parse+0x758>
    fb58:	b	fcf8 <sfbpf_parse+0x764>
    fb5c:	b	ff24 <sfbpf_parse+0x990>
    fb60:	b	10540 <sfbpf_parse+0xfac>
    fb64:	b	10538 <sfbpf_parse+0xfa4>
    fb68:	b	ff6c <sfbpf_parse+0x9d8>
    fb6c:	b	fbc4 <sfbpf_parse+0x630>
    fb70:	b	1051c <sfbpf_parse+0xf88>
    fb74:	b	ff50 <sfbpf_parse+0x9bc>
    fb78:	b	fd04 <sfbpf_parse+0x770>
    fb7c:	b	1090c <sfbpf_parse+0x1378>
    fb80:	b	fbc4 <sfbpf_parse+0x630>
    fb84:	b	10a94 <sfbpf_parse+0x1500>
    fb88:	ldr	r2, [r7, #-16]
    fb8c:	uxtb	r3, r2
    fb90:	str	r2, [sp, #48]	; 0x30
    fb94:	cmp	r3, #3
    fb98:	beq	10dc4 <sfbpf_parse+0x1830>
    fb9c:	cmp	r3, #7
    fba0:	beq	10db8 <sfbpf_parse+0x1824>
    fba4:	cmp	r3, #5
    fba8:	beq	10dac <sfbpf_parse+0x1818>
    fbac:	cmp	r3, #6
    fbb0:	beq	10da0 <sfbpf_parse+0x180c>
    fbb4:	mov	r1, #0
    fbb8:	ldr	r0, [r7]
    fbbc:	bl	992c <sf_gen_ncode>
    fbc0:	mov	r3, r0
    fbc4:	ldr	r1, [sp]
    fbc8:	sxth	r5, r5
    fbcc:	movw	lr, #669	; 0x29d
    fbd0:	sub	ip, r7, r5, lsl #4
    fbd4:	ldr	r2, [pc, #2532]	; 105c0 <sfbpf_parse+0x102c>
    fbd8:	sub	r4, r4, r5, lsl #1
    fbdc:	add	r7, ip, #16
    fbe0:	str	r1, [sp, #52]	; 0x34
    fbe4:	str	sl, [sp, #56]	; 0x38
    fbe8:	str	r3, [sp, #60]	; 0x3c
    fbec:	add	r2, pc, r2
    fbf0:	ldrd	r0, [r8]
    fbf4:	add	r6, r2, r6
    fbf8:	ldrb	r3, [r6, #4080]	; 0xff0
    fbfc:	strd	r0, [ip, #16]
    fc00:	ldrd	r0, [r8, #8]
    fc04:	sub	r3, r3, #126	; 0x7e
    fc08:	lsl	r3, r3, #1
    fc0c:	strd	r0, [r7, #8]
    fc10:	ldr	r1, [sp, #16]
    fc14:	ldrsh	r0, [r4]
    fc18:	ldrsh	r1, [r1, r3]
    fc1c:	add	r1, r1, r0
    fc20:	cmp	r1, lr
    fc24:	bhi	fc3c <sfbpf_parse+0x6a8>
    fc28:	lsl	r1, r1, #1
    fc2c:	add	ip, r2, #916	; 0x394
    fc30:	ldrsh	ip, [ip, r1]
    fc34:	cmp	ip, r0
    fc38:	beq	fc64 <sfbpf_parse+0x6d0>
    fc3c:	ldr	r2, [pc, #2432]	; 105c4 <sfbpf_parse+0x1030>
    fc40:	add	r2, pc, r2
    fc44:	sub	r2, r2, #3808	; 0xee0
    fc48:	ldrsh	r1, [r2, r3]
    fc4c:	mov	r6, r1
    fc50:	b	f6cc <sfbpf_parse+0x138>
    fc54:	bl	11468 <sfbpf_lex>
    fc58:	ldr	r3, [sp, #8]
    fc5c:	str	r0, [r3]
    fc60:	b	f7d8 <sfbpf_parse+0x244>
    fc64:	add	r2, r2, #2256	; 0x8d0
    fc68:	ldrsh	r1, [r2, r1]
    fc6c:	mov	r6, r1
    fc70:	b	f6cc <sfbpf_parse+0x138>
    fc74:	ldr	r3, [sp, #20]
    fc78:	cmp	fp, r3
    fc7c:	movne	r9, fp
    fc80:	movne	r4, #0
    fc84:	bne	fdb0 <sfbpf_parse+0x81c>
    fc88:	mov	r4, #0
    fc8c:	mov	r0, r4
    fc90:	add	sp, sp, #3664	; 0xe50
    fc94:	add	sp, sp, #4
    fc98:	ldrd	r4, [sp]
    fc9c:	ldrd	r6, [sp, #8]
    fca0:	ldrd	r8, [sp, #16]
    fca4:	ldrd	sl, [sp, #24]
    fca8:	add	sp, sp, #32
    fcac:	pop	{pc}		; (ldr pc, [sp], #4)
    fcb0:	mov	r2, #4
    fcb4:	str	r2, [sp, #48]	; 0x30
    fcb8:	b	fbc4 <sfbpf_parse+0x630>
    fcbc:	mov	r2, #3
    fcc0:	str	r2, [sp, #48]	; 0x30
    fcc4:	b	fbc4 <sfbpf_parse+0x630>
    fcc8:	mov	r2, #2
    fccc:	str	r2, [sp, #48]	; 0x30
    fcd0:	b	fbc4 <sfbpf_parse+0x630>
    fcd4:	mov	r2, #1
    fcd8:	str	r2, [sp, #48]	; 0x30
    fcdc:	b	fbc4 <sfbpf_parse+0x630>
    fce0:	mov	r2, #7
    fce4:	str	r2, [sp, #48]	; 0x30
    fce8:	b	fbc4 <sfbpf_parse+0x630>
    fcec:	mov	r2, #23
    fcf0:	str	r2, [sp, #48]	; 0x30
    fcf4:	b	fbc4 <sfbpf_parse+0x630>
    fcf8:	mov	r2, #24
    fcfc:	str	r2, [sp, #48]	; 0x30
    fd00:	b	fbc4 <sfbpf_parse+0x630>
    fd04:	ldr	r2, [pc, #2236]	; 105c8 <sfbpf_parse+0x1034>
    fd08:	ldr	r3, [r7, #-4]
    fd0c:	add	r2, pc, r2
    fd10:	ldr	r2, [r2, #4076]	; 0xfec
    fd14:	str	r2, [sp, #48]	; 0x30
    fd18:	b	fbc4 <sfbpf_parse+0x630>
    fd1c:	ldr	r2, [pc, #2216]	; 105cc <sfbpf_parse+0x1038>
    fd20:	ldr	r3, [r7, #12]
    fd24:	add	r2, pc, r2
    fd28:	ldr	r2, [r2, #4076]	; 0xfec
    fd2c:	str	r2, [sp, #48]	; 0x30
    fd30:	b	fbc4 <sfbpf_parse+0x630>
    fd34:	ldr	r1, [r7, #-16]
    fd38:	mov	r0, #0
    fd3c:	ldr	r2, [r7]
    fd40:	strb	r2, [sp, #48]	; 0x30
    fd44:	strb	r1, [sp, #49]	; 0x31
    fd48:	strb	r0, [sp, #50]	; 0x32
    fd4c:	b	fbc4 <sfbpf_parse+0x630>
    fd50:	ldr	r2, [r7]
    fd54:	str	r2, [sp, #48]	; 0x30
    fd58:	b	fbc4 <sfbpf_parse+0x630>
    fd5c:	mov	r2, #22
    fd60:	str	r2, [sp, #48]	; 0x30
    fd64:	b	fbc4 <sfbpf_parse+0x630>
    fd68:	ldr	r3, [r7, #-16]
    fd6c:	mov	r0, #0
    fd70:	ldr	r1, [r7]
    fd74:	mov	r2, r3
    fd78:	str	r3, [sp, #48]	; 0x30
    fd7c:	bl	992c <sf_gen_ncode>
    fd80:	mov	r3, r0
    fd84:	b	fbc4 <sfbpf_parse+0x630>
    fd88:	mov	r2, #16
    fd8c:	str	r2, [sp, #48]	; 0x30
    fd90:	b	fbc4 <sfbpf_parse+0x630>
    fd94:	mov	r2, #48	; 0x30
    fd98:	str	r2, [sp, #48]	; 0x30
    fd9c:	b	fbc4 <sfbpf_parse+0x630>
    fda0:	mov	r2, #32
    fda4:	str	r2, [sp, #48]	; 0x30
    fda8:	b	fbc4 <sfbpf_parse+0x630>
    fdac:	mov	r4, #1
    fdb0:	mov	r0, r9
    fdb4:	bl	d48 <free@plt>
    fdb8:	b	fc8c <sfbpf_parse+0x6f8>
    fdbc:	ldr	r1, [pc, #2060]	; 105d0 <sfbpf_parse+0x103c>
    fdc0:	mov	r2, #0
    fdc4:	str	r5, [sp, #36]	; 0x24
    fdc8:	str	r3, [sp, #40]	; 0x28
    fdcc:	str	r4, [sp, #44]	; 0x2c
    fdd0:	mov	r4, r2
    fdd4:	ldr	r9, [sp, #4]
    fdd8:	add	r1, pc, r1
    fddc:	add	r1, r1, #184	; 0xb8
    fde0:	ldr	r5, [sp, #28]
    fde4:	b	fdfc <sfbpf_parse+0x868>
    fde8:	add	r4, r4, #1
    fdec:	add	r3, r5, r4, lsl #3
    fdf0:	ldr	r1, [r3, #4]
    fdf4:	cmp	r1, #0
    fdf8:	beq	10a88 <sfbpf_parse+0x14f4>
    fdfc:	ldr	r0, [r7]
    fe00:	bl	f528 <str2tok>
    fe04:	cmn	r0, #1
    fe08:	str	r0, [sp, #48]	; 0x30
    fe0c:	beq	fde8 <sfbpf_parse+0x854>
    fe10:	ldr	r1, [pc, #1980]	; 105d4 <sfbpf_parse+0x1040>
    fe14:	str	r9, [sp, #4]
    fe18:	ldr	r5, [sp, #36]	; 0x24
    fe1c:	ldr	r3, [sp, #40]	; 0x28
    fe20:	add	r1, pc, r1
    fe24:	add	r2, r1, r4, lsl #3
    fe28:	ldr	r4, [sp, #44]	; 0x2c
    fe2c:	ldr	r2, [r2, #400]	; 0x190
    fe30:	orr	r2, r2, r0
    fe34:	str	r2, [sp, #48]	; 0x30
    fe38:	b	fbc4 <sfbpf_parse+0x630>
    fe3c:	mov	r2, #51	; 0x33
    fe40:	str	r2, [sp]
    fe44:	b	fbc4 <sfbpf_parse+0x630>
    fe48:	ldr	r2, [r7, #-32]	; 0xffffffe0
    fe4c:	cmp	r2, #0
    fe50:	beq	10d74 <sfbpf_parse+0x17e0>
    fe54:	cmp	r2, #4
    fe58:	beq	10d44 <sfbpf_parse+0x17b0>
    fe5c:	cmp	r2, #8
    fe60:	beq	10d84 <sfbpf_parse+0x17f0>
    fe64:	ldr	r0, [pc, #1900]	; 105d8 <sfbpf_parse+0x1044>
    fe68:	add	r0, pc, r0
    fe6c:	bl	2210 <sf_bpf_error>
    fe70:	mov	r2, #18
    fe74:	str	r2, [sp, #48]	; 0x30
    fe78:	b	fbc4 <sfbpf_parse+0x630>
    fe7c:	mov	r2, #19
    fe80:	str	r2, [sp, #48]	; 0x30
    fe84:	b	fbc4 <sfbpf_parse+0x630>
    fe88:	mov	r2, #20
    fe8c:	str	r2, [sp, #48]	; 0x30
    fe90:	b	fbc4 <sfbpf_parse+0x630>
    fe94:	mov	r2, #24
    fe98:	str	r2, [sp, #48]	; 0x30
    fe9c:	b	fbc4 <sfbpf_parse+0x630>
    fea0:	mov	r2, #25
    fea4:	str	r2, [sp, #48]	; 0x30
    fea8:	b	fbc4 <sfbpf_parse+0x630>
    feac:	mov	r2, #26
    feb0:	str	r2, [sp, #48]	; 0x30
    feb4:	b	fbc4 <sfbpf_parse+0x630>
    feb8:	mov	r2, #31
    febc:	str	r2, [sp, #48]	; 0x30
    fec0:	b	fbc4 <sfbpf_parse+0x630>
    fec4:	mov	r2, #32
    fec8:	str	r2, [sp, #48]	; 0x30
    fecc:	b	fbc4 <sfbpf_parse+0x630>
    fed0:	mov	r2, #33	; 0x21
    fed4:	str	r2, [sp, #48]	; 0x30
    fed8:	b	fbc4 <sfbpf_parse+0x630>
    fedc:	mov	r2, #39	; 0x27
    fee0:	str	r2, [sp, #48]	; 0x30
    fee4:	b	fbc4 <sfbpf_parse+0x630>
    fee8:	mov	r2, #36	; 0x24
    feec:	str	r2, [sp, #48]	; 0x30
    fef0:	b	fbc4 <sfbpf_parse+0x630>
    fef4:	mov	r2, #38	; 0x26
    fef8:	str	r2, [sp, #48]	; 0x30
    fefc:	b	fbc4 <sfbpf_parse+0x630>
    ff00:	mov	r2, #37	; 0x25
    ff04:	str	r2, [sp, #48]	; 0x30
    ff08:	b	fbc4 <sfbpf_parse+0x630>
    ff0c:	mov	r2, #27
    ff10:	str	r2, [sp, #48]	; 0x30
    ff14:	b	fbc4 <sfbpf_parse+0x630>
    ff18:	mov	r2, #28
    ff1c:	str	r2, [sp, #48]	; 0x30
    ff20:	b	fbc4 <sfbpf_parse+0x630>
    ff24:	mov	sl, #1
    ff28:	b	fbc4 <sfbpf_parse+0x630>
    ff2c:	mov	r2, #52	; 0x34
    ff30:	str	r2, [sp]
    ff34:	b	fbc4 <sfbpf_parse+0x630>
    ff38:	mov	r2, #28
    ff3c:	str	r2, [sp, #48]	; 0x30
    ff40:	b	fbc4 <sfbpf_parse+0x630>
    ff44:	mov	r2, #8
    ff48:	str	r2, [sp, #48]	; 0x30
    ff4c:	b	fbc4 <sfbpf_parse+0x630>
    ff50:	mov	r3, #1
    ff54:	ldr	r0, [r7, #-24]	; 0xffffffe8
    ff58:	ldr	r2, [r7, #-16]
    ff5c:	ldr	r1, [r7]
    ff60:	bl	b750 <sf_gen_mtp3field_code>
    ff64:	mov	r3, r0
    ff68:	b	fbc4 <sfbpf_parse+0x630>
    ff6c:	mov	sl, #4
    ff70:	b	fbc4 <sfbpf_parse+0x630>
    ff74:	mov	r3, #1
    ff78:	ldr	r1, [r7, #-32]	; 0xffffffe0
    ff7c:	ldr	r0, [r7, #-16]
    ff80:	ldr	r2, [r7]
    ff84:	bl	5c10 <sf_gen_relation>
    ff88:	ldr	r2, [pc, #1612]	; 105dc <sfbpf_parse+0x1048>
    ff8c:	mov	r3, r0
    ff90:	add	r2, pc, r2
    ff94:	ldr	r2, [r2, #4076]	; 0xfec
    ff98:	str	r2, [sp, #48]	; 0x30
    ff9c:	b	fbc4 <sfbpf_parse+0x630>
    ffa0:	ldr	r2, [pc, #1592]	; 105e0 <sfbpf_parse+0x104c>
    ffa4:	ldr	r3, [r7]
    ffa8:	add	r2, pc, r2
    ffac:	ldr	r2, [r2, #4076]	; 0xfec
    ffb0:	str	r2, [sp, #48]	; 0x30
    ffb4:	b	fbc4 <sfbpf_parse+0x630>
    ffb8:	ldr	r0, [r7]
    ffbc:	bl	b29c <sf_gen_atmtype_abbrev>
    ffc0:	ldr	r2, [pc, #1564]	; 105e4 <sfbpf_parse+0x1050>
    ffc4:	mov	r3, r0
    ffc8:	add	r2, pc, r2
    ffcc:	ldr	r2, [r2, #4076]	; 0xfec
    ffd0:	str	r2, [sp, #48]	; 0x30
    ffd4:	b	fbc4 <sfbpf_parse+0x630>
    ffd8:	ldr	r0, [r7]
    ffdc:	bl	b968 <sf_gen_atmmulti_abbrev>
    ffe0:	ldr	r2, [pc, #1536]	; 105e8 <sfbpf_parse+0x1054>
    ffe4:	mov	r3, r0
    ffe8:	add	r2, pc, r2
    ffec:	ldr	r2, [r2, #4076]	; 0xfec
    fff0:	str	r2, [sp, #48]	; 0x30
    fff4:	b	fbc4 <sfbpf_parse+0x630>
    fff8:	mov	r2, #70	; 0x46
    fffc:	str	r2, [sp, #48]	; 0x30
   10000:	b	fbc4 <sfbpf_parse+0x630>
   10004:	ldr	r3, [r7, #12]
   10008:	mov	r0, r3
   1000c:	str	r3, [sp, #36]	; 0x24
   10010:	bl	5578 <sf_gen_not>
   10014:	ldrd	r0, [r7]
   10018:	ldmib	r7, {r3, sl}
   1001c:	strd	r0, [r8]
   10020:	str	r3, [sp]
   10024:	ldrd	r2, [r7, #8]
   10028:	strd	r2, [r8, #8]
   1002c:	ldr	r3, [sp, #36]	; 0x24
   10030:	b	fbc4 <sfbpf_parse+0x630>
   10034:	ldr	r0, [r7, #-32]	; 0xffffffe0
   10038:	ldr	r1, [r7, #-16]
   1003c:	ldr	r2, [r7]
   10040:	strb	r2, [sp, #48]	; 0x30
   10044:	strb	r0, [sp, #49]	; 0x31
   10048:	strb	r1, [sp, #50]	; 0x32
   1004c:	b	fbc4 <sfbpf_parse+0x630>
   10050:	ldr	r1, [r7, #-16]
   10054:	mov	r0, #0
   10058:	ldr	r2, [r7]
   1005c:	strb	r0, [sp, #48]	; 0x30
   10060:	strb	r1, [sp, #49]	; 0x31
   10064:	strb	r2, [sp, #50]	; 0x32
   10068:	b	fbc4 <sfbpf_parse+0x630>
   1006c:	ldr	r0, [r7]
   10070:	str	r3, [sp, #36]	; 0x24
   10074:	bl	5eac <sf_gen_neg>
   10078:	str	r0, [sp, #48]	; 0x30
   1007c:	ldr	r3, [sp, #36]	; 0x24
   10080:	b	fbc4 <sfbpf_parse+0x630>
   10084:	ldr	r2, [r7, #-16]
   10088:	str	r2, [sp, #48]	; 0x30
   1008c:	b	fbc4 <sfbpf_parse+0x630>
   10090:	str	r3, [sp, #36]	; 0x24
   10094:	bl	5dcc <sf_gen_loadlen>
   10098:	str	r0, [sp, #48]	; 0x30
   1009c:	ldr	r3, [sp, #36]	; 0x24
   100a0:	b	fbc4 <sfbpf_parse+0x630>
   100a4:	mov	r2, #38	; 0x26
   100a8:	str	r2, [sp, #48]	; 0x30
   100ac:	b	fbc4 <sfbpf_parse+0x630>
   100b0:	mov	r2, #124	; 0x7c
   100b4:	str	r2, [sp, #48]	; 0x30
   100b8:	b	fbc4 <sfbpf_parse+0x630>
   100bc:	mov	r2, #60	; 0x3c
   100c0:	str	r2, [sp, #48]	; 0x30
   100c4:	b	fbc4 <sfbpf_parse+0x630>
   100c8:	mov	r2, #62	; 0x3e
   100cc:	str	r2, [sp, #48]	; 0x30
   100d0:	b	fbc4 <sfbpf_parse+0x630>
   100d4:	mov	r2, #61	; 0x3d
   100d8:	str	r2, [sp, #48]	; 0x30
   100dc:	b	fbc4 <sfbpf_parse+0x630>
   100e0:	ldr	r2, [r7, #-16]
   100e4:	str	r2, [sp, #48]	; 0x30
   100e8:	b	fbc4 <sfbpf_parse+0x630>
   100ec:	mov	r2, #30
   100f0:	str	r2, [sp, #48]	; 0x30
   100f4:	b	fbc4 <sfbpf_parse+0x630>
   100f8:	mov	r2, #31
   100fc:	str	r2, [sp, #48]	; 0x30
   10100:	b	fbc4 <sfbpf_parse+0x630>
   10104:	ldr	r1, [pc, #1248]	; 105ec <sfbpf_parse+0x1058>
   10108:	str	r3, [sp, #36]	; 0x24
   1010c:	ldr	r3, [r7]
   10110:	add	r1, pc, r1
   10114:	mov	r0, r3
   10118:	mov	r9, r3
   1011c:	bl	f288 <sfbpf_strcasecmp>
   10120:	cmp	r0, #0
   10124:	ldr	r3, [sp, #36]	; 0x24
   10128:	streq	r0, [sp, #48]	; 0x30
   1012c:	beq	fbc4 <sfbpf_parse+0x630>
   10130:	ldr	r1, [pc, #1208]	; 105f0 <sfbpf_parse+0x105c>
   10134:	mov	r0, r9
   10138:	str	r3, [sp, #36]	; 0x24
   1013c:	add	r1, pc, r1
   10140:	bl	f288 <sfbpf_strcasecmp>
   10144:	cmp	r0, #0
   10148:	ldr	r3, [sp, #36]	; 0x24
   1014c:	moveq	r2, #1
   10150:	streq	r2, [sp, #48]	; 0x30
   10154:	beq	fbc4 <sfbpf_parse+0x630>
   10158:	ldr	r1, [pc, #1172]	; 105f4 <sfbpf_parse+0x1060>
   1015c:	mov	r0, r9
   10160:	str	r3, [sp, #36]	; 0x24
   10164:	add	r1, pc, r1
   10168:	bl	f288 <sfbpf_strcasecmp>
   1016c:	cmp	r0, #0
   10170:	ldr	r3, [sp, #36]	; 0x24
   10174:	moveq	r2, #2
   10178:	streq	r2, [sp, #48]	; 0x30
   1017c:	beq	fbc4 <sfbpf_parse+0x630>
   10180:	ldr	r1, [pc, #1136]	; 105f8 <sfbpf_parse+0x1064>
   10184:	mov	r0, r9
   10188:	str	r3, [sp, #36]	; 0x24
   1018c:	add	r1, pc, r1
   10190:	bl	f288 <sfbpf_strcasecmp>
   10194:	cmp	r0, #0
   10198:	bne	10d94 <sfbpf_parse+0x1800>
   1019c:	mov	r2, #3
   101a0:	ldr	r3, [sp, #36]	; 0x24
   101a4:	str	r2, [sp, #48]	; 0x30
   101a8:	b	fbc4 <sfbpf_parse+0x630>
   101ac:	ldr	r2, [r7]
   101b0:	str	r2, [sp, #48]	; 0x30
   101b4:	b	fbc4 <sfbpf_parse+0x630>
   101b8:	ldr	r2, [r7, #-32]	; 0xffffffe0
   101bc:	ldr	r3, [r7, #-4]
   101c0:	str	r2, [sp, #48]	; 0x30
   101c4:	b	fbc4 <sfbpf_parse+0x630>
   101c8:	ldr	r0, [r7]
   101cc:	bl	775c <sf_gen_proto_abbrev>
   101d0:	ldr	r2, [pc, #1060]	; 105fc <sfbpf_parse+0x1068>
   101d4:	mov	r3, r0
   101d8:	add	r2, pc, r2
   101dc:	ldr	r2, [r2, #4076]	; 0xfec
   101e0:	str	r2, [sp, #48]	; 0x30
   101e4:	b	fbc4 <sfbpf_parse+0x630>
   101e8:	mov	r3, #0
   101ec:	ldr	r1, [r7, #-32]	; 0xffffffe0
   101f0:	ldr	r0, [r7, #-16]
   101f4:	ldr	r2, [r7]
   101f8:	bl	5c10 <sf_gen_relation>
   101fc:	ldr	r2, [pc, #1020]	; 10600 <sfbpf_parse+0x106c>
   10200:	mov	r3, r0
   10204:	add	r2, pc, r2
   10208:	ldr	r2, [r2, #4076]	; 0xfec
   1020c:	str	r2, [sp, #48]	; 0x30
   10210:	b	fbc4 <sfbpf_parse+0x630>
   10214:	ldr	ip, [r7, #-48]	; 0xffffffd0
   10218:	mov	r1, #0
   1021c:	ldr	r0, [r7, #-32]	; 0xffffffe0
   10220:	ldr	r2, [r7]
   10224:	mov	r3, ip
   10228:	str	ip, [sp, #48]	; 0x30
   1022c:	bl	8bd0 <sf_gen_mcode>
   10230:	mov	r3, r0
   10234:	b	fbc4 <sfbpf_parse+0x630>
   10238:	ldr	ip, [r7, #-48]	; 0xffffffd0
   1023c:	mov	r2, #0
   10240:	ldr	r0, [r7, #-32]	; 0xffffffe0
   10244:	ldr	r1, [r7]
   10248:	mov	r3, ip
   1024c:	str	ip, [sp, #48]	; 0x30
   10250:	bl	8bd0 <sf_gen_mcode>
   10254:	mov	r3, r0
   10258:	b	fbc4 <sfbpf_parse+0x630>
   1025c:	ldr	ip, [r7, #-48]	; 0xffffffd0
   10260:	mov	r1, #0
   10264:	ldr	r0, [r7, #-32]	; 0xffffffe0
   10268:	ldr	r2, [r7]
   1026c:	mov	r3, ip
   10270:	str	ip, [sp, #48]	; 0x30
   10274:	bl	a900 <sf_gen_mcode6>
   10278:	mov	r3, r0
   1027c:	b	fbc4 <sfbpf_parse+0x630>
   10280:	ldr	ip, [r7, #-16]
   10284:	mov	r2, #128	; 0x80
   10288:	mov	r1, #0
   1028c:	ldr	r0, [r7]
   10290:	mov	r3, ip
   10294:	str	ip, [sp, #48]	; 0x30
   10298:	bl	a900 <sf_gen_mcode6>
   1029c:	mov	r3, r0
   102a0:	b	fbc4 <sfbpf_parse+0x630>
   102a4:	ldr	r3, [r7, #-16]
   102a8:	ldr	r2, [r7]
   102ac:	mov	r1, r3
   102b0:	mov	r0, r2
   102b4:	str	r2, [sp, #40]	; 0x28
   102b8:	str	r3, [sp, #48]	; 0x30
   102bc:	bl	5a3c <sf_gen_ecode>
   102c0:	ldr	r2, [sp, #40]	; 0x28
   102c4:	mov	r3, r0
   102c8:	str	r3, [sp, #36]	; 0x24
   102cc:	mov	r0, r2
   102d0:	bl	d48 <free@plt>
   102d4:	ldr	r3, [sp, #36]	; 0x24
   102d8:	b	fbc4 <sfbpf_parse+0x630>
   102dc:	ldr	r3, [r7, #-16]
   102e0:	ldr	r2, [r7]
   102e4:	mov	r1, r3
   102e8:	mov	r0, r2
   102ec:	str	r2, [sp, #40]	; 0x28
   102f0:	str	r3, [sp, #48]	; 0x30
   102f4:	bl	6414 <sf_gen_acode>
   102f8:	ldr	r2, [sp, #40]	; 0x28
   102fc:	mov	r3, r0
   10300:	str	r3, [sp, #36]	; 0x24
   10304:	mov	r0, r2
   10308:	bl	d48 <free@plt>
   1030c:	ldr	r3, [sp, #36]	; 0x24
   10310:	b	fbc4 <sfbpf_parse+0x630>
   10314:	ldr	r3, [r7, #12]
   10318:	mov	r0, r3
   1031c:	str	r3, [sp, #36]	; 0x24
   10320:	bl	5578 <sf_gen_not>
   10324:	ldrd	r0, [r7]
   10328:	ldmib	r7, {r3, sl}
   1032c:	strd	r0, [r8]
   10330:	str	r3, [sp]
   10334:	ldrd	r2, [r7, #8]
   10338:	strd	r2, [r8, #8]
   1033c:	ldr	r3, [sp, #36]	; 0x24
   10340:	b	fbc4 <sfbpf_parse+0x630>
   10344:	ldrd	r2, [r7, #-16]
   10348:	ldrd	r0, [r7, #-8]
   1034c:	ldr	sl, [r7, #-8]
   10350:	strd	r2, [r8]
   10354:	ldr	r3, [r7, #-12]
   10358:	strd	r0, [r8, #8]
   1035c:	str	r3, [sp]
   10360:	ldr	r3, [r7, #-4]
   10364:	b	fbc4 <sfbpf_parse+0x630>
   10368:	ldrd	r2, [r7, #-16]
   1036c:	ldrd	r0, [r7, #-8]
   10370:	ldr	sl, [r7, #-8]
   10374:	strd	r2, [r8]
   10378:	ldr	r3, [r7, #-12]
   1037c:	strd	r0, [r8, #8]
   10380:	str	r3, [sp]
   10384:	ldr	r3, [r7, #-4]
   10388:	b	fbc4 <sfbpf_parse+0x630>
   1038c:	ldr	r0, [r7, #-20]	; 0xffffffec
   10390:	ldr	r3, [r7, #12]
   10394:	mov	r1, r3
   10398:	str	r3, [sp, #36]	; 0x24
   1039c:	bl	3a88 <sf_gen_and>
   103a0:	ldrd	r0, [r7]
   103a4:	ldmib	r7, {r3, sl}
   103a8:	strd	r0, [r8]
   103ac:	str	r3, [sp]
   103b0:	ldrd	r2, [r7, #8]
   103b4:	strd	r2, [r8, #8]
   103b8:	ldr	r3, [sp, #36]	; 0x24
   103bc:	b	fbc4 <sfbpf_parse+0x630>
   103c0:	ldr	r0, [r7, #-20]	; 0xffffffec
   103c4:	ldr	r3, [r7, #12]
   103c8:	mov	r1, r3
   103cc:	str	r3, [sp, #36]	; 0x24
   103d0:	bl	4884 <sf_gen_or>
   103d4:	ldrd	r0, [r7]
   103d8:	ldmib	r7, {r3, sl}
   103dc:	strd	r0, [r8]
   103e0:	str	r3, [sp]
   103e4:	ldrd	r2, [r7, #8]
   103e8:	strd	r2, [r8, #8]
   103ec:	ldr	r3, [sp, #36]	; 0x24
   103f0:	b	fbc4 <sfbpf_parse+0x630>
   103f4:	ldr	r2, [r7, #-12]
   103f8:	str	r2, [sp]
   103fc:	sub	r2, r2, #51	; 0x33
   10400:	cmp	r2, #1
   10404:	bhi	fbc4 <sfbpf_parse+0x630>
   10408:	mov	r3, #0
   1040c:	mov	r2, #16
   10410:	ldr	r1, [r7]
   10414:	ldr	r0, [sp]
   10418:	bl	657c <sf_gen_atmfield_code>
   1041c:	mov	r3, r0
   10420:	b	fbc4 <sfbpf_parse+0x630>
   10424:	ldr	r0, [r7]
   10428:	str	r3, [sp, #36]	; 0x24
   1042c:	bl	5e34 <sf_gen_loadi>
   10430:	str	r0, [sp, #48]	; 0x30
   10434:	ldr	r3, [sp, #36]	; 0x24
   10438:	b	fbc4 <sfbpf_parse+0x630>
   1043c:	mov	r2, #1
   10440:	ldr	r0, [r7, #-48]	; 0xffffffd0
   10444:	str	r3, [sp, #36]	; 0x24
   10448:	ldr	r1, [r7, #-16]
   1044c:	bl	7c98 <sf_gen_load>
   10450:	str	r0, [sp, #48]	; 0x30
   10454:	ldr	r3, [sp, #36]	; 0x24
   10458:	b	fbc4 <sfbpf_parse+0x630>
   1045c:	ldr	r0, [r7, #-80]	; 0xffffffb0
   10460:	str	r3, [sp, #36]	; 0x24
   10464:	ldr	r1, [r7, #-48]	; 0xffffffd0
   10468:	ldr	r2, [r7, #-16]
   1046c:	bl	7c98 <sf_gen_load>
   10470:	str	r0, [sp, #48]	; 0x30
   10474:	ldr	r3, [sp, #36]	; 0x24
   10478:	b	fbc4 <sfbpf_parse+0x630>
   1047c:	mov	r0, #0
   10480:	ldr	r1, [r7, #-32]	; 0xffffffe0
   10484:	str	r3, [sp, #36]	; 0x24
   10488:	ldr	r2, [r7]
   1048c:	bl	5f74 <sf_gen_arth>
   10490:	str	r0, [sp, #48]	; 0x30
   10494:	ldr	r3, [sp, #36]	; 0x24
   10498:	b	fbc4 <sfbpf_parse+0x630>
   1049c:	mov	r0, #16
   104a0:	ldr	r1, [r7, #-32]	; 0xffffffe0
   104a4:	str	r3, [sp, #36]	; 0x24
   104a8:	ldr	r2, [r7]
   104ac:	bl	5f74 <sf_gen_arth>
   104b0:	str	r0, [sp, #48]	; 0x30
   104b4:	ldr	r3, [sp, #36]	; 0x24
   104b8:	b	fbc4 <sfbpf_parse+0x630>
   104bc:	mov	r0, #32
   104c0:	ldr	r1, [r7, #-32]	; 0xffffffe0
   104c4:	str	r3, [sp, #36]	; 0x24
   104c8:	ldr	r2, [r7]
   104cc:	bl	5f74 <sf_gen_arth>
   104d0:	str	r0, [sp, #48]	; 0x30
   104d4:	ldr	r3, [sp, #36]	; 0x24
   104d8:	b	fbc4 <sfbpf_parse+0x630>
   104dc:	mov	r0, #48	; 0x30
   104e0:	ldr	r1, [r7, #-32]	; 0xffffffe0
   104e4:	str	r3, [sp, #36]	; 0x24
   104e8:	ldr	r2, [r7]
   104ec:	bl	5f74 <sf_gen_arth>
   104f0:	str	r0, [sp, #48]	; 0x30
   104f4:	ldr	r3, [sp, #36]	; 0x24
   104f8:	b	fbc4 <sfbpf_parse+0x630>
   104fc:	mov	r0, #80	; 0x50
   10500:	ldr	r1, [r7, #-32]	; 0xffffffe0
   10504:	str	r3, [sp, #36]	; 0x24
   10508:	ldr	r2, [r7]
   1050c:	bl	5f74 <sf_gen_arth>
   10510:	str	r0, [sp, #48]	; 0x30
   10514:	ldr	r3, [sp, #36]	; 0x24
   10518:	b	fbc4 <sfbpf_parse+0x630>
   1051c:	mov	r3, #0
   10520:	ldr	r0, [r7, #-24]	; 0xffffffe8
   10524:	ldr	r2, [r7, #-16]
   10528:	ldr	r1, [r7]
   1052c:	bl	b750 <sf_gen_mtp3field_code>
   10530:	mov	r3, r0
   10534:	b	fbc4 <sfbpf_parse+0x630>
   10538:	mov	sl, #3
   1053c:	b	fbc4 <sfbpf_parse+0x630>
   10540:	mov	sl, #2
   10544:	b	fbc4 <sfbpf_parse+0x630>
   10548:	mov	r2, #5
   1054c:	str	r2, [sp, #48]	; 0x30
   10550:	b	fbc4 <sfbpf_parse+0x630>
   10554:	mov	r2, #6
   10558:	str	r2, [sp, #48]	; 0x30
   1055c:	b	fbc4 <sfbpf_parse+0x630>
   10560:	ldr	r0, [r7, #-20]	; 0xffffffec
   10564:	ldr	r3, [r7, #12]
   10568:	mov	r1, r3
   1056c:	str	r3, [sp, #36]	; 0x24
   10570:	bl	4884 <sf_gen_or>
   10574:	ldrd	r0, [r7]
   10578:	ldmib	r7, {r3, sl}
   1057c:	strd	r0, [r8]
   10580:	str	r3, [sp]
   10584:	ldrd	r2, [r7, #8]
   10588:	strd	r2, [r8, #8]
   1058c:	ldr	r3, [sp, #36]	; 0x24
   10590:	b	fbc4 <sfbpf_parse+0x630>
   10594:	.word	0x000000c8
   10598:	.word	0x00021a2c
   1059c:	.word	0x00007480
   105a0:	.word	0x000000b0
   105a4:	.word	0x0002174c
   105a8:	.word	0x00005418
   105ac:	.word	0x000053f4
   105b0:	.word	0x000000f0
   105b4:	.word	0x000052ac
   105b8:	.word	0x00005264
   105bc:	.word	0x00005244
   105c0:	.word	0x00004e78
   105c4:	.word	0x00006e1c
   105c8:	.word	0x00004d58
   105cc:	.word	0x00004d40
   105d0:	.word	0x00020f88
   105d4:	.word	0x00020f40
   105d8:	.word	0x00005e38
   105dc:	.word	0x00004ad4
   105e0:	.word	0x00004abc
   105e4:	.word	0x00004a9c
   105e8:	.word	0x00004a7c
   105ec:	.word	0x00005bc0
   105f0:	.word	0x00005b9c
   105f4:	.word	0x00005b7c
   105f8:	.word	0x00005b5c
   105fc:	.word	0x0000488c
   10600:	.word	0x00004860
   10604:	.word	0x00004400
   10608:	.word	0x000202f4
   1060c:	.word	0x000051f8
   10610:	.word	0x00003f5c
   10614:	.word	0x000025b0
   10618:	.word	0x00020e40
   1061c:	.word	0x00004edc
   10620:	.word	0x0000305c
   10624:	.word	0x00020e08
   10628:	.word	0x00004fdc
   1062c:	.word	0x00003038
   10630:	.word	0x00020018
   10634:	.word	0x00004f48
   10638:	.word	0x0001ffe8
   1063c:	.word	0x0001ffd8
   10640:	.word	0x00004f58
   10644:	.word	0x00004eb4
   10648:	.word	0x00004e84
   1064c:	.word	0x00004e50
   10650:	.word	0x00004e20
   10654:	ldr	r0, [r7]
   10658:	bl	b5b0 <sf_gen_mtp2type_abbrev>
   1065c:	ldr	r2, [pc, #-96]	; 10604 <sfbpf_parse+0x1070>
   10660:	mov	r3, r0
   10664:	add	r2, pc, r2
   10668:	ldr	r2, [r2, #4076]	; 0xfec
   1066c:	str	r2, [sp, #48]	; 0x30
   10670:	b	fbc4 <sfbpf_parse+0x630>
   10674:	mov	r2, #0
   10678:	str	r2, [sp, #48]	; 0x30
   1067c:	b	fbc4 <sfbpf_parse+0x630>
   10680:	mov	r0, #64	; 0x40
   10684:	ldr	r1, [r7, #-32]	; 0xffffffe0
   10688:	str	r3, [sp, #36]	; 0x24
   1068c:	ldr	r2, [r7]
   10690:	bl	5f74 <sf_gen_arth>
   10694:	str	r0, [sp, #48]	; 0x30
   10698:	ldr	r3, [sp, #36]	; 0x24
   1069c:	b	fbc4 <sfbpf_parse+0x630>
   106a0:	mov	r0, #96	; 0x60
   106a4:	ldr	r1, [r7, #-32]	; 0xffffffe0
   106a8:	str	r3, [sp, #36]	; 0x24
   106ac:	ldr	r2, [r7]
   106b0:	bl	5f74 <sf_gen_arth>
   106b4:	str	r0, [sp, #48]	; 0x30
   106b8:	ldr	r3, [sp, #36]	; 0x24
   106bc:	b	fbc4 <sfbpf_parse+0x630>
   106c0:	mov	r0, #112	; 0x70
   106c4:	ldr	r1, [r7, #-32]	; 0xffffffe0
   106c8:	str	r3, [sp, #36]	; 0x24
   106cc:	ldr	r2, [r7]
   106d0:	bl	5f74 <sf_gen_arth>
   106d4:	str	r0, [sp, #48]	; 0x30
   106d8:	ldr	r3, [sp, #36]	; 0x24
   106dc:	b	fbc4 <sfbpf_parse+0x630>
   106e0:	mov	r2, #29
   106e4:	str	r2, [sp, #48]	; 0x30
   106e8:	b	fbc4 <sfbpf_parse+0x630>
   106ec:	mov	r2, #11
   106f0:	str	r2, [sp, #48]	; 0x30
   106f4:	b	fbc4 <sfbpf_parse+0x630>
   106f8:	mov	r2, #23
   106fc:	str	r2, [sp, #48]	; 0x30
   10700:	b	fbc4 <sfbpf_parse+0x630>
   10704:	mov	r2, #12
   10708:	str	r2, [sp, #48]	; 0x30
   1070c:	b	fbc4 <sfbpf_parse+0x630>
   10710:	mov	r2, #13
   10714:	str	r2, [sp, #48]	; 0x30
   10718:	b	fbc4 <sfbpf_parse+0x630>
   1071c:	mov	r2, #14
   10720:	str	r2, [sp, #48]	; 0x30
   10724:	b	fbc4 <sfbpf_parse+0x630>
   10728:	mov	r2, #16
   1072c:	str	r2, [sp, #48]	; 0x30
   10730:	b	fbc4 <sfbpf_parse+0x630>
   10734:	mov	r2, #15
   10738:	str	r2, [sp, #48]	; 0x30
   1073c:	b	fbc4 <sfbpf_parse+0x630>
   10740:	mov	r2, #17
   10744:	str	r2, [sp, #48]	; 0x30
   10748:	b	fbc4 <sfbpf_parse+0x630>
   1074c:	mov	r2, #9
   10750:	str	r2, [sp, #48]	; 0x30
   10754:	b	fbc4 <sfbpf_parse+0x630>
   10758:	mov	r2, #10
   1075c:	str	r2, [sp, #48]	; 0x30
   10760:	b	fbc4 <sfbpf_parse+0x630>
   10764:	mov	r2, #21
   10768:	str	r2, [sp, #48]	; 0x30
   1076c:	b	fbc4 <sfbpf_parse+0x630>
   10770:	mov	r2, #22
   10774:	str	r2, [sp, #48]	; 0x30
   10778:	b	fbc4 <sfbpf_parse+0x630>
   1077c:	mov	r2, #5
   10780:	str	r2, [sp, #48]	; 0x30
   10784:	b	fbc4 <sfbpf_parse+0x630>
   10788:	mov	r2, #6
   1078c:	str	r2, [sp, #48]	; 0x30
   10790:	b	fbc4 <sfbpf_parse+0x630>
   10794:	mov	r2, #8
   10798:	str	r2, [sp, #48]	; 0x30
   1079c:	b	fbc4 <sfbpf_parse+0x630>
   107a0:	mov	r3, #0
   107a4:	ldr	r0, [r7, #-28]	; 0xffffffe4
   107a8:	ldr	r2, [r7, #-16]
   107ac:	ldr	r1, [r7]
   107b0:	bl	657c <sf_gen_atmfield_code>
   107b4:	mov	r3, r0
   107b8:	b	fbc4 <sfbpf_parse+0x630>
   107bc:	mov	r2, #30
   107c0:	str	r2, [sp, #48]	; 0x30
   107c4:	b	fbc4 <sfbpf_parse+0x630>
   107c8:	mov	r2, #40	; 0x28
   107cc:	str	r2, [sp, #48]	; 0x30
   107d0:	b	fbc4 <sfbpf_parse+0x630>
   107d4:	ldr	r0, [r7, #-16]
   107d8:	str	r3, [sp, #36]	; 0x24
   107dc:	bl	9be4 <sf_gen_broadcast>
   107e0:	str	r0, [sp, #48]	; 0x30
   107e4:	ldr	r3, [sp, #36]	; 0x24
   107e8:	b	fbc4 <sfbpf_parse+0x630>
   107ec:	ldr	r0, [r7, #-16]
   107f0:	str	r3, [sp, #36]	; 0x24
   107f4:	bl	9ee4 <sf_gen_multicast>
   107f8:	str	r0, [sp, #48]	; 0x30
   107fc:	ldr	r3, [sp, #36]	; 0x24
   10800:	b	fbc4 <sfbpf_parse+0x630>
   10804:	ldr	r0, [r7]
   10808:	str	r3, [sp, #36]	; 0x24
   1080c:	bl	6118 <sf_gen_less>
   10810:	str	r0, [sp, #48]	; 0x30
   10814:	ldr	r3, [sp, #36]	; 0x24
   10818:	b	fbc4 <sfbpf_parse+0x630>
   1081c:	ldr	r0, [r7]
   10820:	str	r3, [sp, #36]	; 0x24
   10824:	bl	60c4 <sf_gen_greater>
   10828:	str	r0, [sp, #48]	; 0x30
   1082c:	ldr	r3, [sp, #36]	; 0x24
   10830:	b	fbc4 <sfbpf_parse+0x630>
   10834:	ldr	r1, [r7, #-32]	; 0xffffffe0
   10838:	str	r3, [sp, #36]	; 0x24
   1083c:	ldr	r0, [r7, #-16]
   10840:	ldr	r2, [r7]
   10844:	bl	617c <sf_gen_byteop>
   10848:	str	r0, [sp, #48]	; 0x30
   1084c:	ldr	r3, [sp, #36]	; 0x24
   10850:	b	fbc4 <sfbpf_parse+0x630>
   10854:	mov	r0, #0
   10858:	str	r3, [sp, #36]	; 0x24
   1085c:	bl	8250 <sf_gen_inbound>
   10860:	str	r0, [sp, #48]	; 0x30
   10864:	ldr	r3, [sp, #36]	; 0x24
   10868:	b	fbc4 <sfbpf_parse+0x630>
   1086c:	mov	r0, #1
   10870:	str	r3, [sp, #36]	; 0x24
   10874:	bl	8250 <sf_gen_inbound>
   10878:	str	r0, [sp, #48]	; 0x30
   1087c:	ldr	r3, [sp, #36]	; 0x24
   10880:	b	fbc4 <sfbpf_parse+0x630>
   10884:	ldr	r0, [r7]
   10888:	str	r3, [sp, #36]	; 0x24
   1088c:	bl	6488 <sf_gen_vlan>
   10890:	str	r0, [sp, #48]	; 0x30
   10894:	ldr	r3, [sp, #36]	; 0x24
   10898:	b	fbc4 <sfbpf_parse+0x630>
   1089c:	mvn	r0, #0
   108a0:	str	r3, [sp, #36]	; 0x24
   108a4:	bl	6488 <sf_gen_vlan>
   108a8:	str	r0, [sp, #48]	; 0x30
   108ac:	ldr	r3, [sp, #36]	; 0x24
   108b0:	b	fbc4 <sfbpf_parse+0x630>
   108b4:	ldr	r0, [r7]
   108b8:	str	r3, [sp, #36]	; 0x24
   108bc:	bl	a28c <sf_gen_mpls>
   108c0:	str	r0, [sp, #48]	; 0x30
   108c4:	ldr	r3, [sp, #36]	; 0x24
   108c8:	b	fbc4 <sfbpf_parse+0x630>
   108cc:	mvn	r0, #0
   108d0:	str	r3, [sp, #36]	; 0x24
   108d4:	bl	a28c <sf_gen_mpls>
   108d8:	str	r0, [sp, #48]	; 0x30
   108dc:	ldr	r3, [sp, #36]	; 0x24
   108e0:	b	fbc4 <sfbpf_parse+0x630>
   108e4:	str	r3, [sp, #36]	; 0x24
   108e8:	bl	a3d0 <sf_gen_pppoed>
   108ec:	str	r0, [sp, #48]	; 0x30
   108f0:	ldr	r3, [sp, #36]	; 0x24
   108f4:	b	fbc4 <sfbpf_parse+0x630>
   108f8:	str	r3, [sp, #36]	; 0x24
   108fc:	bl	a3d8 <sf_gen_pppoes>
   10900:	str	r0, [sp, #48]	; 0x30
   10904:	ldr	r3, [sp, #36]	; 0x24
   10908:	b	fbc4 <sfbpf_parse+0x630>
   1090c:	ldr	sl, [r7, #-8]
   10910:	sub	r2, sl, #1
   10914:	cmp	r2, #3
   10918:	bhi	fbc4 <sfbpf_parse+0x630>
   1091c:	mov	r3, #0
   10920:	mov	r2, #16
   10924:	ldr	r1, [r7]
   10928:	mov	r0, sl
   1092c:	bl	b750 <sf_gen_mtp3field_code>
   10930:	mov	r3, r0
   10934:	b	fbc4 <sfbpf_parse+0x630>
   10938:	ldr	r0, [r7]
   1093c:	str	r3, [sp, #36]	; 0x24
   10940:	bl	62d8 <sf_gen_pf_srnr>
   10944:	str	r0, [sp, #48]	; 0x30
   10948:	ldr	r3, [sp, #36]	; 0x24
   1094c:	b	fbc4 <sfbpf_parse+0x630>
   10950:	ldr	r0, [r7]
   10954:	str	r3, [sp, #36]	; 0x24
   10958:	bl	62f0 <sf_gen_pf_reason>
   1095c:	str	r0, [sp, #48]	; 0x30
   10960:	ldr	r3, [sp, #36]	; 0x24
   10964:	b	fbc4 <sfbpf_parse+0x630>
   10968:	ldr	r0, [r7]
   1096c:	str	r3, [sp, #36]	; 0x24
   10970:	bl	6308 <sf_gen_pf_action>
   10974:	str	r0, [sp, #48]	; 0x30
   10978:	ldr	r3, [sp, #36]	; 0x24
   1097c:	b	fbc4 <sfbpf_parse+0x630>
   10980:	ldr	r0, [r7, #-32]	; 0xffffffe0
   10984:	mov	r1, #252	; 0xfc
   10988:	str	r3, [sp, #36]	; 0x24
   1098c:	ldr	r2, [r7]
   10990:	orr	r0, r0, r2
   10994:	bl	6320 <sf_gen_p80211_type>
   10998:	str	r0, [sp, #48]	; 0x30
   1099c:	ldr	r3, [sp, #36]	; 0x24
   109a0:	b	fbc4 <sfbpf_parse+0x630>
   109a4:	ldr	r0, [r7]
   109a8:	str	r3, [sp, #36]	; 0x24
   109ac:	bl	62a8 <sf_gen_pf_ruleset>
   109b0:	str	r0, [sp, #48]	; 0x30
   109b4:	ldr	r3, [sp, #36]	; 0x24
   109b8:	b	fbc4 <sfbpf_parse+0x630>
   109bc:	ldr	r0, [r7]
   109c0:	str	r3, [sp, #36]	; 0x24
   109c4:	bl	62c0 <sf_gen_pf_rnr>
   109c8:	str	r0, [sp, #48]	; 0x30
   109cc:	ldr	r3, [sp, #36]	; 0x24
   109d0:	b	fbc4 <sfbpf_parse+0x630>
   109d4:	ldr	r0, [r7]
   109d8:	str	r3, [sp, #36]	; 0x24
   109dc:	bl	6290 <sf_gen_pf_ifname>
   109e0:	str	r0, [sp, #48]	; 0x30
   109e4:	ldr	r3, [sp, #36]	; 0x24
   109e8:	b	fbc4 <sfbpf_parse+0x630>
   109ec:	ldrd	r2, [r7]
   109f0:	ldrd	r0, [r7, #8]
   109f4:	ldr	sl, [r7, #8]
   109f8:	strd	r2, [r8]
   109fc:	ldr	r3, [r7, #4]
   10a00:	strd	r0, [r8, #8]
   10a04:	str	r3, [sp]
   10a08:	ldr	r3, [r7, #12]
   10a0c:	b	fbc4 <sfbpf_parse+0x630>
   10a10:	mov	r1, #12
   10a14:	ldr	r0, [r7]
   10a18:	str	r3, [sp, #36]	; 0x24
   10a1c:	bl	6320 <sf_gen_p80211_type>
   10a20:	str	r0, [sp, #48]	; 0x30
   10a24:	ldr	r3, [sp, #36]	; 0x24
   10a28:	b	fbc4 <sfbpf_parse+0x630>
   10a2c:	mov	r1, #252	; 0xfc
   10a30:	ldr	r0, [r7]
   10a34:	str	r3, [sp, #36]	; 0x24
   10a38:	bl	6320 <sf_gen_p80211_type>
   10a3c:	str	r0, [sp, #48]	; 0x30
   10a40:	ldr	r3, [sp, #36]	; 0x24
   10a44:	b	fbc4 <sfbpf_parse+0x630>
   10a48:	ldr	r0, [r7]
   10a4c:	str	r3, [sp, #36]	; 0x24
   10a50:	bl	639c <sf_gen_p80211_fcdir>
   10a54:	str	r0, [sp, #48]	; 0x30
   10a58:	ldr	r3, [sp, #36]	; 0x24
   10a5c:	b	fbc4 <sfbpf_parse+0x630>
   10a60:	ldr	r1, [pc, #-1120]	; 10608 <sfbpf_parse+0x1074>
   10a64:	str	r3, [sp, #36]	; 0x24
   10a68:	ldr	r0, [r7]
   10a6c:	add	r1, pc, r1
   10a70:	add	r1, r1, #352	; 0x160
   10a74:	bl	f528 <str2tok>
   10a78:	cmn	r0, #1
   10a7c:	str	r0, [sp, #48]	; 0x30
   10a80:	ldr	r3, [sp, #36]	; 0x24
   10a84:	bne	fbc4 <sfbpf_parse+0x630>
   10a88:	ldr	r0, [pc, #-1156]	; 1060c <sfbpf_parse+0x1078>
   10a8c:	add	r0, pc, r0
   10a90:	bl	2210 <sf_bpf_error>
   10a94:	ldr	r0, [r7, #-20]	; 0xffffffec
   10a98:	ldr	r3, [r7, #12]
   10a9c:	mov	r1, r3
   10aa0:	str	r3, [sp, #36]	; 0x24
   10aa4:	bl	4884 <sf_gen_or>
   10aa8:	ldrd	r0, [r7]
   10aac:	ldmib	r7, {r3, sl}
   10ab0:	strd	r0, [r8]
   10ab4:	str	r3, [sp]
   10ab8:	ldrd	r2, [r7, #8]
   10abc:	strd	r2, [r8, #8]
   10ac0:	ldr	r3, [sp, #36]	; 0x24
   10ac4:	b	fbc4 <sfbpf_parse+0x630>
   10ac8:	mov	r2, #29
   10acc:	str	r2, [sp, #48]	; 0x30
   10ad0:	b	fbc4 <sfbpf_parse+0x630>
   10ad4:	mov	r3, #1
   10ad8:	ldr	r0, [r7, #-28]	; 0xffffffe4
   10adc:	ldr	r2, [r7, #-16]
   10ae0:	ldr	r1, [r7]
   10ae4:	bl	657c <sf_gen_atmfield_code>
   10ae8:	mov	r3, r0
   10aec:	b	fbc4 <sfbpf_parse+0x630>
   10af0:	ldr	r0, [r7, #12]
   10af4:	str	r3, [sp, #36]	; 0x24
   10af8:	bl	3b1c <sf_finish_parse>
   10afc:	ldr	r3, [sp, #36]	; 0x24
   10b00:	b	fbc4 <sfbpf_parse+0x630>
   10b04:	ldr	r2, [pc, #-1276]	; 10610 <sfbpf_parse+0x107c>
   10b08:	add	r2, pc, r2
   10b0c:	ldr	r2, [r2, #4076]	; 0xfec
   10b10:	str	r2, [sp, #48]	; 0x30
   10b14:	b	fbc4 <sfbpf_parse+0x630>
   10b18:	ldr	r0, [r7, #-20]	; 0xffffffec
   10b1c:	ldr	r3, [r7, #12]
   10b20:	mov	r1, r3
   10b24:	str	r3, [sp, #36]	; 0x24
   10b28:	bl	3a88 <sf_gen_and>
   10b2c:	ldrd	r0, [r7]
   10b30:	ldmib	r7, {r3, sl}
   10b34:	strd	r0, [r8]
   10b38:	str	r3, [sp]
   10b3c:	ldrd	r2, [r7, #8]
   10b40:	strd	r2, [r8, #8]
   10b44:	ldr	r3, [sp, #36]	; 0x24
   10b48:	b	fbc4 <sfbpf_parse+0x630>
   10b4c:	ldr	r0, [r7, #-20]	; 0xffffffec
   10b50:	ldr	r3, [r7, #12]
   10b54:	mov	r1, r3
   10b58:	str	r3, [sp, #36]	; 0x24
   10b5c:	bl	3a88 <sf_gen_and>
   10b60:	ldrd	r0, [r7]
   10b64:	ldmib	r7, {r3, sl}
   10b68:	strd	r0, [r8]
   10b6c:	str	r3, [sp]
   10b70:	ldrd	r2, [r7, #8]
   10b74:	strd	r2, [r8, #8]
   10b78:	ldr	r3, [sp, #36]	; 0x24
   10b7c:	b	fbc4 <sfbpf_parse+0x630>
   10b80:	ldr	r0, [r7, #-20]	; 0xffffffec
   10b84:	ldr	r3, [r7, #12]
   10b88:	mov	r1, r3
   10b8c:	str	r3, [sp, #36]	; 0x24
   10b90:	bl	4884 <sf_gen_or>
   10b94:	ldrd	r0, [r7]
   10b98:	ldmib	r7, {r3, sl}
   10b9c:	strd	r0, [r8]
   10ba0:	str	r3, [sp]
   10ba4:	ldrd	r2, [r7, #8]
   10ba8:	strd	r2, [r8, #8]
   10bac:	ldr	r3, [sp, #36]	; 0x24
   10bb0:	b	fbc4 <sfbpf_parse+0x630>
   10bb4:	ldr	r0, [r7, #-20]	; 0xffffffec
   10bb8:	ldr	r3, [r7, #12]
   10bbc:	mov	r1, r3
   10bc0:	str	r3, [sp, #36]	; 0x24
   10bc4:	bl	4884 <sf_gen_or>
   10bc8:	ldrd	r0, [r7]
   10bcc:	ldmib	r7, {r3, sl}
   10bd0:	strd	r0, [r8]
   10bd4:	str	r3, [sp]
   10bd8:	ldrd	r2, [r7, #8]
   10bdc:	strd	r2, [r8, #8]
   10be0:	ldr	r3, [sp, #36]	; 0x24
   10be4:	b	fbc4 <sfbpf_parse+0x630>
   10be8:	ldrd	r2, [r7, #-16]
   10bec:	ldrd	r0, [r7, #-8]
   10bf0:	ldr	sl, [r7, #-8]
   10bf4:	strd	r2, [r8]
   10bf8:	ldr	r3, [r7, #-12]
   10bfc:	strd	r0, [r8, #8]
   10c00:	str	r3, [sp]
   10c04:	ldr	r3, [r7, #-4]
   10c08:	b	fbc4 <sfbpf_parse+0x630>
   10c0c:	ldrd	r2, [r7, #-16]
   10c10:	ldrd	r0, [r7, #-8]
   10c14:	ldr	sl, [r7, #-8]
   10c18:	strd	r2, [r8]
   10c1c:	ldr	r3, [r7, #-12]
   10c20:	strd	r0, [r8, #8]
   10c24:	str	r3, [sp]
   10c28:	ldr	r3, [r7, #-4]
   10c2c:	b	fbc4 <sfbpf_parse+0x630>
   10c30:	mov	r2, #25
   10c34:	str	r2, [sp, #48]	; 0x30
   10c38:	b	fbc4 <sfbpf_parse+0x630>
   10c3c:	mov	r2, #71	; 0x47
   10c40:	str	r2, [sp, #48]	; 0x30
   10c44:	b	fbc4 <sfbpf_parse+0x630>
   10c48:	mov	r2, #26
   10c4c:	str	r2, [sp, #48]	; 0x30
   10c50:	b	fbc4 <sfbpf_parse+0x630>
   10c54:	ldr	r2, [r7, #-16]
   10c58:	mov	r1, #0
   10c5c:	mov	r0, #5
   10c60:	strb	r0, [sp, #48]	; 0x30
   10c64:	strb	r2, [sp, #49]	; 0x31
   10c68:	strb	r1, [sp, #50]	; 0x32
   10c6c:	b	fbc4 <sfbpf_parse+0x630>
   10c70:	ldr	r2, [r7, #-16]
   10c74:	mov	r1, #0
   10c78:	mov	r0, #6
   10c7c:	strb	r0, [sp, #48]	; 0x30
   10c80:	strb	r2, [sp, #49]	; 0x31
   10c84:	strb	r1, [sp, #50]	; 0x32
   10c88:	b	fbc4 <sfbpf_parse+0x630>
   10c8c:	mov	r2, #27
   10c90:	str	r2, [sp, #48]	; 0x30
   10c94:	b	fbc4 <sfbpf_parse+0x630>
   10c98:	ldrd	r2, [r7, #-16]
   10c9c:	ldrd	r0, [r7, #-8]
   10ca0:	ldr	sl, [r7, #-8]
   10ca4:	strd	r2, [r8]
   10ca8:	ldr	r3, [r7, #-12]
   10cac:	strd	r0, [r8, #8]
   10cb0:	str	r3, [sp]
   10cb4:	ldr	r3, [r7, #-4]
   10cb8:	b	fbc4 <sfbpf_parse+0x630>
   10cbc:	ldr	r3, [r7, #-16]
   10cc0:	ldr	r0, [r7]
   10cc4:	mov	r1, r3
   10cc8:	str	r3, [sp, #48]	; 0x30
   10ccc:	bl	aaec <sf_gen_scode>
   10cd0:	mov	r3, r0
   10cd4:	b	fbc4 <sfbpf_parse+0x630>
   10cd8:	ldr	r0, [pc, #-1740]	; 10614 <sfbpf_parse+0x1080>
   10cdc:	add	r0, pc, r0
   10ce0:	bl	2210 <sf_bpf_error>
   10ce4:	ldr	ip, [pc, #-1748]	; 10618 <sfbpf_parse+0x1084>
   10ce8:	ldr	lr, [sp, #32]
   10cec:	ldr	r1, [pc, #-1752]	; 1061c <sfbpf_parse+0x1088>
   10cf0:	add	ip, pc, ip
   10cf4:	ldr	r3, [ip]
   10cf8:	ldr	r2, [lr]
   10cfc:	add	r1, pc, r1
   10d00:	ldr	r0, [pc, #-1768]	; 10620 <sfbpf_parse+0x108c>
   10d04:	add	r3, r3, #1
   10d08:	add	r2, r2, #1
   10d0c:	str	r3, [ip]
   10d10:	add	r0, pc, r0
   10d14:	str	r2, [lr]
   10d18:	bl	2210 <sf_bpf_error>
   10d1c:	ldr	r2, [pc, #-1792]	; 10624 <sfbpf_parse+0x1090>
   10d20:	ldr	r1, [pc, #-1792]	; 10628 <sfbpf_parse+0x1094>
   10d24:	ldr	r0, [pc, #-1792]	; 1062c <sfbpf_parse+0x1098>
   10d28:	add	r2, pc, r2
   10d2c:	ldr	r3, [r2]
   10d30:	add	r1, pc, r1
   10d34:	add	r0, pc, r0
   10d38:	add	r3, r3, #1
   10d3c:	str	r3, [r2]
   10d40:	bl	2210 <sf_bpf_error>
   10d44:	ldr	r1, [pc, #-1820]	; 10630 <sfbpf_parse+0x109c>
   10d48:	add	r1, pc, r1
   10d4c:	ldr	r0, [r7]
   10d50:	str	r3, [sp, #36]	; 0x24
   10d54:	bl	f528 <str2tok>
   10d58:	cmn	r0, #1
   10d5c:	str	r0, [sp, #48]	; 0x30
   10d60:	ldr	r3, [sp, #36]	; 0x24
   10d64:	bne	fbc4 <sfbpf_parse+0x630>
   10d68:	ldr	r0, [pc, #-1852]	; 10634 <sfbpf_parse+0x10a0>
   10d6c:	add	r0, pc, r0
   10d70:	bl	2210 <sf_bpf_error>
   10d74:	ldr	r1, [pc, #-1860]	; 10638 <sfbpf_parse+0x10a4>
   10d78:	add	r1, pc, r1
   10d7c:	add	r1, r1, #184	; 0xb8
   10d80:	b	10d4c <sfbpf_parse+0x17b8>
   10d84:	ldr	r1, [pc, #-1872]	; 1063c <sfbpf_parse+0x10a8>
   10d88:	add	r1, pc, r1
   10d8c:	add	r1, r1, #56	; 0x38
   10d90:	b	10d4c <sfbpf_parse+0x17b8>
   10d94:	ldr	r0, [pc, #-1884]	; 10640 <sfbpf_parse+0x10ac>
   10d98:	add	r0, pc, r0
   10d9c:	bl	2210 <sf_bpf_error>
   10da0:	ldr	r0, [pc, #-1892]	; 10644 <sfbpf_parse+0x10b0>
   10da4:	add	r0, pc, r0
   10da8:	bl	2210 <sf_bpf_error>
   10dac:	ldr	r0, [pc, #-1900]	; 10648 <sfbpf_parse+0x10b4>
   10db0:	add	r0, pc, r0
   10db4:	bl	2210 <sf_bpf_error>
   10db8:	ldr	r0, [pc, #-1908]	; 1064c <sfbpf_parse+0x10b8>
   10dbc:	add	r0, pc, r0
   10dc0:	bl	2210 <sf_bpf_error>
   10dc4:	ldr	r0, [pc, #-1916]	; 10650 <sfbpf_parse+0x10bc>
   10dc8:	add	r0, pc, r0
   10dcc:	bl	2210 <sf_bpf_error>

00010dd0 <yy_get_previous_state>:
   10dd0:	ldr	r1, [pc, #332]	; 10f24 <yy_get_previous_state+0x154>
   10dd4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   10dd8:	ldr	r2, [pc, #328]	; 10f28 <yy_get_previous_state+0x158>
   10ddc:	strd	r6, [sp, #8]
   10de0:	ldr	r3, [pc, #324]	; 10f2c <yy_get_previous_state+0x15c>
   10de4:	add	r1, pc, r1
   10de8:	strd	r8, [sp, #16]
   10dec:	strd	sl, [sp, #24]
   10df0:	str	lr, [sp, #32]
   10df4:	sub	sp, sp, #28
   10df8:	ldr	r2, [r1, r2]
   10dfc:	add	r3, pc, r3
   10e00:	ldm	r3, {r0, fp}
   10e04:	ldr	r9, [r2]
   10e08:	cmp	r9, fp
   10e0c:	bcs	10f08 <yy_get_previous_state+0x138>
   10e10:	mov	r2, #0
   10e14:	ldr	r8, [pc, #276]	; 10f30 <yy_get_previous_state+0x160>
   10e18:	str	r2, [sp, #8]
   10e1c:	ldr	r2, [pc, #272]	; 10f34 <yy_get_previous_state+0x164>
   10e20:	ldr	sl, [pc, #272]	; 10f38 <yy_get_previous_state+0x168>
   10e24:	add	r8, pc, r8
   10e28:	add	r8, r8, #3120	; 0xc30
   10e2c:	ldr	r4, [pc, #264]	; 10f3c <yy_get_previous_state+0x16c>
   10e30:	add	r8, r8, #4
   10e34:	add	r2, pc, r2
   10e38:	ldr	r6, [pc, #256]	; 10f40 <yy_get_previous_state+0x170>
   10e3c:	str	r2, [sp, #20]
   10e40:	add	sl, pc, sl
   10e44:	ldr	r2, [pc, #248]	; 10f44 <yy_get_previous_state+0x174>
   10e48:	add	sl, sl, #256	; 0x100
   10e4c:	add	r4, pc, r4
   10e50:	sub	r5, r4, #1216	; 0x4c0
   10e54:	add	r6, pc, r6
   10e58:	add	r2, pc, r2
   10e5c:	str	r2, [sp, #4]
   10e60:	ldrd	r2, [r3, #8]
   10e64:	strd	r2, [sp, #12]
   10e68:	mov	ip, r9
   10e6c:	ldrb	r3, [r9], #1
   10e70:	cmp	r3, #0
   10e74:	ldrne	r2, [sp, #20]
   10e78:	moveq	r1, #1
   10e7c:	ldrbne	r1, [r2, r3]
   10e80:	lsl	r2, r0, #1
   10e84:	ldrsh	r3, [sl, r2]
   10e88:	cmp	r3, #0
   10e8c:	beq	10ea0 <yy_get_previous_state+0xd0>
   10e90:	mov	r3, #1
   10e94:	str	r3, [sp, #8]
   10e98:	str	r0, [sp, #12]
   10e9c:	str	ip, [sp, #16]
   10ea0:	movw	r7, #1433	; 0x599
   10ea4:	b	10eb8 <yy_get_previous_state+0xe8>
   10ea8:	ldrsh	r0, [r8, r2]
   10eac:	cmp	r0, r7
   10eb0:	lsl	r2, r0, #1
   10eb4:	ldrbgt	r1, [ip, #-1272]	; 0xfffffb08
   10eb8:	add	ip, r4, r1
   10ebc:	ldrsh	r3, [r5, r2]
   10ec0:	add	r3, r3, r1
   10ec4:	lsl	r3, r3, #1
   10ec8:	ldrsh	lr, [r6, r3]
   10ecc:	cmp	lr, r0
   10ed0:	bne	10ea8 <yy_get_previous_state+0xd8>
   10ed4:	ldr	r2, [sp, #4]
   10ed8:	cmp	fp, r9
   10edc:	ldrsh	r0, [r2, r3]
   10ee0:	bne	10e68 <yy_get_previous_state+0x98>
   10ee4:	ldr	r3, [sp, #8]
   10ee8:	cmp	r3, #0
   10eec:	beq	10f08 <yy_get_previous_state+0x138>
   10ef0:	ldr	r3, [pc, #80]	; 10f48 <yy_get_previous_state+0x178>
   10ef4:	ldr	r2, [sp, #12]
   10ef8:	add	r3, pc, r3
   10efc:	str	r2, [r3, #8]
   10f00:	ldr	r2, [sp, #16]
   10f04:	str	r2, [r3, #12]
   10f08:	add	sp, sp, #28
   10f0c:	ldrd	r4, [sp]
   10f10:	ldrd	r6, [sp, #8]
   10f14:	ldrd	r8, [sp, #16]
   10f18:	ldrd	sl, [sp, #24]
   10f1c:	add	sp, sp, #32
   10f20:	pop	{pc}		; (ldr pc, [sp], #4)
   10f24:	.word	0x00020214
   10f28:	.word	0x000000d8
   10f2c:	.word	0x00020d38
   10f30:	.word	0x000050a8
   10f34:	.word	0x00005098
   10f38:	.word	0x0000508c
   10f3c:	.word	0x00007078
   10f40:	.word	0x00007a7c
   10f44:	.word	0x0000b4b8
   10f48:	.word	0x00020c3c

00010f4c <yy_fatal_error>:
   10f4c:	ldr	r3, [pc, #44]	; 10f80 <yy_fatal_error+0x34>
   10f50:	mov	r2, r0
   10f54:	str	r4, [sp, #-8]!
   10f58:	ldr	r0, [pc, #36]	; 10f84 <yy_fatal_error+0x38>
   10f5c:	str	lr, [sp, #4]
   10f60:	ldr	r1, [pc, #32]	; 10f88 <yy_fatal_error+0x3c>
   10f64:	add	r3, pc, r3
   10f68:	ldr	r3, [r3, r0]
   10f6c:	add	r1, pc, r1
   10f70:	ldr	r0, [r3]
   10f74:	bl	e08 <fprintf@plt>
   10f78:	mov	r0, #2
   10f7c:	bl	de4 <exit@plt>
   10f80:	.word	0x00020094
   10f84:	.word	0x000000d0
   10f88:	.word	0x0000ede4

00010f8c <sfbpf_ensure_buffer_stack>:
   10f8c:	strd	r4, [sp, #-16]!
   10f90:	ldr	r4, [pc, #188]	; 11054 <sfbpf_ensure_buffer_stack+0xc8>
   10f94:	str	r6, [sp, #8]
   10f98:	str	lr, [sp, #12]
   10f9c:	add	r4, pc, r4
   10fa0:	ldr	r6, [r4, #16]
   10fa4:	cmp	r6, #0
   10fa8:	beq	11024 <sfbpf_ensure_buffer_stack+0x98>
   10fac:	ldr	r3, [r4, #20]
   10fb0:	ldr	r2, [r4, #24]
   10fb4:	sub	r1, r3, #1
   10fb8:	cmp	r1, r2
   10fbc:	bls	10fd0 <sfbpf_ensure_buffer_stack+0x44>
   10fc0:	ldrd	r4, [sp]
   10fc4:	ldr	r6, [sp, #8]
   10fc8:	add	sp, sp, #12
   10fcc:	pop	{pc}		; (ldr pc, [sp], #4)
   10fd0:	add	r5, r3, #8
   10fd4:	mov	r0, r6
   10fd8:	lsl	r6, r5, #2
   10fdc:	mov	r1, r6
   10fe0:	bl	d90 <realloc@plt>
   10fe4:	cmp	r0, #0
   10fe8:	str	r0, [r4, #16]
   10fec:	beq	11048 <sfbpf_ensure_buffer_stack+0xbc>
   10ff0:	sub	r6, r6, #32
   10ff4:	mov	r2, #0
   10ff8:	str	r5, [r4, #20]
   10ffc:	mov	r3, #0
   11000:	add	r1, r0, r6
   11004:	strd	r2, [r0, r6]
   11008:	strd	r2, [r1, #8]
   1100c:	strd	r2, [r1, #16]
   11010:	strd	r2, [r1, #24]
   11014:	ldrd	r4, [sp]
   11018:	ldr	r6, [sp, #8]
   1101c:	add	sp, sp, #12
   11020:	pop	{pc}		; (ldr pc, [sp], #4)
   11024:	mov	r1, #1
   11028:	mov	r0, #4
   1102c:	bl	ce8 <calloc@plt>
   11030:	cmp	r0, #0
   11034:	str	r0, [r4, #16]
   11038:	movne	r3, #1
   1103c:	strne	r6, [r4, #24]
   11040:	strne	r3, [r4, #20]
   11044:	bne	10fc0 <sfbpf_ensure_buffer_stack+0x34>
   11048:	ldr	r0, [pc, #8]	; 11058 <sfbpf_ensure_buffer_stack+0xcc>
   1104c:	add	r0, pc, r0
   11050:	bl	10f4c <yy_fatal_error>
   11054:	.word	0x00020b98
   11058:	.word	0x0000ed08

0001105c <sfbpf__switch_to_buffer>:
   1105c:	strd	r4, [sp, #-16]!
   11060:	mov	r4, r0
   11064:	str	r6, [sp, #8]
   11068:	str	lr, [sp, #12]
   1106c:	bl	10f8c <sfbpf_ensure_buffer_stack>
   11070:	ldr	r2, [pc, #176]	; 11128 <sfbpf__switch_to_buffer+0xcc>
   11074:	ldr	r5, [pc, #176]	; 1112c <sfbpf__switch_to_buffer+0xd0>
   11078:	add	r2, pc, r2
   1107c:	ldr	r3, [r2, #16]
   11080:	add	r5, pc, r5
   11084:	cmp	r3, #0
   11088:	beq	11114 <sfbpf__switch_to_buffer+0xb8>
   1108c:	ldr	r1, [r2, #24]
   11090:	ldr	ip, [r3, r1, lsl #2]
   11094:	add	r0, r3, r1, lsl #2
   11098:	cmp	ip, r4
   1109c:	beq	11104 <sfbpf__switch_to_buffer+0xa8>
   110a0:	cmp	ip, #0
   110a4:	beq	110c8 <sfbpf__switch_to_buffer+0x6c>
   110a8:	ldrb	lr, [r2, #28]
   110ac:	ldr	ip, [r2, #4]
   110b0:	ldr	r2, [r2, #32]
   110b4:	strb	lr, [ip]
   110b8:	ldr	lr, [r3, r1, lsl #2]
   110bc:	str	ip, [lr, #8]
   110c0:	ldr	r3, [r3, r1, lsl #2]
   110c4:	str	r2, [r3, #16]
   110c8:	ldr	r3, [pc, #96]	; 11130 <sfbpf__switch_to_buffer+0xd4>
   110cc:	str	r4, [r0]
   110d0:	ldr	r1, [pc, #92]	; 11134 <sfbpf__switch_to_buffer+0xd8>
   110d4:	ldr	r2, [r4, #8]
   110d8:	add	r3, pc, r3
   110dc:	ldr	ip, [r4, #16]
   110e0:	str	r2, [r3, #4]
   110e4:	str	ip, [r3, #32]
   110e8:	ldr	r1, [r5, r1]
   110ec:	str	r2, [r1]
   110f0:	ldr	r1, [r0]
   110f4:	ldr	r1, [r1]
   110f8:	str	r1, [r3, #36]	; 0x24
   110fc:	ldrb	r2, [r2]
   11100:	strb	r2, [r3, #28]
   11104:	ldrd	r4, [sp]
   11108:	ldr	r6, [sp, #8]
   1110c:	add	sp, sp, #12
   11110:	pop	{pc}		; (ldr pc, [sp], #4)
   11114:	cmp	r4, #0
   11118:	beq	11104 <sfbpf__switch_to_buffer+0xa8>
   1111c:	ldr	r0, [r2, #24]
   11120:	lsl	r0, r0, #2
   11124:	b	110c8 <sfbpf__switch_to_buffer+0x6c>
   11128:	.word	0x00020abc
   1112c:	.word	0x0001ff78
   11130:	.word	0x00020a5c
   11134:	.word	0x000000d8

00011138 <sfbpf__delete_buffer>:
   11138:	str	r4, [sp, #-8]!
   1113c:	subs	r4, r0, #0
   11140:	str	lr, [sp, #4]
   11144:	beq	1119c <sfbpf__delete_buffer+0x64>
   11148:	ldr	r2, [pc, #88]	; 111a8 <sfbpf__delete_buffer+0x70>
   1114c:	add	r2, pc, r2
   11150:	ldr	r3, [r2, #16]
   11154:	cmp	r3, #0
   11158:	beq	11170 <sfbpf__delete_buffer+0x38>
   1115c:	ldr	r2, [r2, #24]
   11160:	ldr	r1, [r3, r2, lsl #2]
   11164:	cmp	r4, r1
   11168:	moveq	r1, #0
   1116c:	streq	r1, [r3, r2, lsl #2]
   11170:	ldr	r3, [r4, #20]
   11174:	cmp	r3, #0
   11178:	bne	11190 <sfbpf__delete_buffer+0x58>
   1117c:	mov	r0, r4
   11180:	ldr	r4, [sp]
   11184:	ldr	lr, [sp, #4]
   11188:	add	sp, sp, #8
   1118c:	b	d48 <free@plt>
   11190:	ldr	r0, [r4, #4]
   11194:	bl	d48 <free@plt>
   11198:	b	1117c <sfbpf__delete_buffer+0x44>
   1119c:	ldr	r4, [sp]
   111a0:	add	sp, sp, #4
   111a4:	pop	{pc}		; (ldr pc, [sp], #4)
   111a8:	.word	0x000209e8

000111ac <sfbpf__flush_buffer>:
   111ac:	str	r4, [sp, #-8]!
   111b0:	cmp	r0, #0
   111b4:	str	lr, [sp, #4]
   111b8:	ldr	lr, [pc, #152]	; 11258 <sfbpf__flush_buffer+0xac>
   111bc:	add	lr, pc, lr
   111c0:	beq	11214 <sfbpf__flush_buffer+0x68>
   111c4:	ldr	r1, [r0, #4]
   111c8:	mov	r3, #0
   111cc:	mov	r4, #1
   111d0:	ldr	r2, [pc, #132]	; 1125c <sfbpf__flush_buffer+0xb0>
   111d4:	str	r3, [r0, #16]
   111d8:	strb	r3, [r1]
   111dc:	ldr	ip, [r0, #4]
   111e0:	add	r2, pc, r2
   111e4:	ldr	r1, [r2, #16]
   111e8:	strb	r3, [ip, #1]
   111ec:	ldr	ip, [r0, #4]
   111f0:	cmp	r1, r3
   111f4:	str	ip, [r0, #8]
   111f8:	str	r4, [r0, #28]
   111fc:	str	r3, [r0, #44]	; 0x2c
   11200:	beq	11214 <sfbpf__flush_buffer+0x68>
   11204:	ldr	r3, [r2, #24]
   11208:	ldr	r4, [r1, r3, lsl #2]
   1120c:	cmp	r0, r4
   11210:	beq	11220 <sfbpf__flush_buffer+0x74>
   11214:	ldr	r4, [sp]
   11218:	add	sp, sp, #4
   1121c:	pop	{pc}		; (ldr pc, [sp], #4)
   11220:	ldr	r4, [r0, #16]
   11224:	str	ip, [r2, #4]
   11228:	ldr	r0, [pc, #48]	; 11260 <sfbpf__flush_buffer+0xb4>
   1122c:	str	r4, [r2, #32]
   11230:	ldr	r0, [lr, r0]
   11234:	str	ip, [r0]
   11238:	ldr	r3, [r1, r3, lsl #2]
   1123c:	ldr	r3, [r3]
   11240:	str	r3, [r2, #36]	; 0x24
   11244:	ldrb	r3, [ip]
   11248:	strb	r3, [r2, #28]
   1124c:	ldr	r4, [sp]
   11250:	add	sp, sp, #4
   11254:	pop	{pc}		; (ldr pc, [sp], #4)
   11258:	.word	0x0001fe3c
   1125c:	.word	0x00020954
   11260:	.word	0x000000d8

00011264 <sfbpf__init_buffer>:
   11264:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11268:	mov	r4, r0
   1126c:	mov	r5, r1
   11270:	strd	r6, [sp, #8]
   11274:	str	r8, [sp, #16]
   11278:	str	lr, [sp, #20]
   1127c:	bl	e14 <__errno_location@plt>
   11280:	mov	r6, r0
   11284:	mov	r0, r4
   11288:	ldr	r7, [r6]
   1128c:	bl	111ac <sfbpf__flush_buffer>
   11290:	ldr	r2, [pc, #112]	; 11308 <sfbpf__init_buffer+0xa4>
   11294:	mov	r3, #1
   11298:	str	r5, [r4]
   1129c:	str	r3, [r4, #40]	; 0x28
   112a0:	add	r2, pc, r2
   112a4:	ldr	r3, [r2, #16]
   112a8:	cmp	r3, #0
   112ac:	beq	112c0 <sfbpf__init_buffer+0x5c>
   112b0:	ldr	r2, [r2, #24]
   112b4:	ldr	r3, [r3, r2, lsl #2]
   112b8:	cmp	r4, r3
   112bc:	beq	112cc <sfbpf__init_buffer+0x68>
   112c0:	mov	r2, #1
   112c4:	mov	r3, #0
   112c8:	strd	r2, [r4, #32]
   112cc:	cmp	r5, #0
   112d0:	beq	112ec <sfbpf__init_buffer+0x88>
   112d4:	mov	r0, r5
   112d8:	bl	e50 <fileno@plt>
   112dc:	bl	eb0 <isatty@plt>
   112e0:	cmp	r0, #0
   112e4:	movle	r5, #0
   112e8:	movgt	r5, #1
   112ec:	str	r5, [r4, #24]
   112f0:	str	r7, [r6]
   112f4:	ldrd	r4, [sp]
   112f8:	ldrd	r6, [sp, #8]
   112fc:	ldr	r8, [sp, #16]
   11300:	add	sp, sp, #20
   11304:	pop	{pc}		; (ldr pc, [sp], #4)
   11308:	.word	0x00020894

0001130c <sfbpf__create_buffer>:
   1130c:	strd	r4, [sp, #-16]!
   11310:	mov	r5, r1
   11314:	str	r6, [sp, #8]
   11318:	mov	r6, r0
   1131c:	mov	r0, #48	; 0x30
   11320:	str	lr, [sp, #12]
   11324:	bl	dc0 <malloc@plt>
   11328:	subs	r4, r0, #0
   1132c:	beq	11370 <sfbpf__create_buffer+0x64>
   11330:	add	r0, r5, #2
   11334:	str	r5, [r4, #12]
   11338:	bl	dc0 <malloc@plt>
   1133c:	cmp	r0, #0
   11340:	str	r0, [r4, #4]
   11344:	beq	11370 <sfbpf__create_buffer+0x64>
   11348:	mov	r3, #1
   1134c:	mov	r0, r4
   11350:	mov	r1, r6
   11354:	str	r3, [r4, #20]
   11358:	bl	11264 <sfbpf__init_buffer>
   1135c:	mov	r0, r4
   11360:	ldrd	r4, [sp]
   11364:	ldr	r6, [sp, #8]
   11368:	add	sp, sp, #12
   1136c:	pop	{pc}		; (ldr pc, [sp], #4)
   11370:	ldr	r0, [pc, #4]	; 1137c <sfbpf__create_buffer+0x70>
   11374:	add	r0, pc, r0
   11378:	bl	10f4c <yy_fatal_error>
   1137c:	.word	0x0000ea14

00011380 <sfbpf_restart>:
   11380:	ldr	r2, [pc, #204]	; 11454 <sfbpf_restart+0xd4>
   11384:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11388:	strd	r6, [sp, #8]
   1138c:	mov	r7, r0
   11390:	str	r8, [sp, #16]
   11394:	str	lr, [sp, #20]
   11398:	add	r2, pc, r2
   1139c:	ldr	r6, [pc, #180]	; 11458 <sfbpf_restart+0xd8>
   113a0:	ldr	r3, [r2, #16]
   113a4:	add	r6, pc, r6
   113a8:	cmp	r3, #0
   113ac:	beq	11420 <sfbpf_restart+0xa0>
   113b0:	ldr	r5, [r2, #24]
   113b4:	ldr	r4, [r3, r5, lsl #2]
   113b8:	add	r5, r3, r5, lsl #2
   113bc:	cmp	r4, #0
   113c0:	beq	11420 <sfbpf_restart+0xa0>
   113c4:	mov	r1, r7
   113c8:	mov	r0, r4
   113cc:	bl	11264 <sfbpf__init_buffer>
   113d0:	ldr	r0, [r5]
   113d4:	ldr	r3, [pc, #128]	; 1145c <sfbpf_restart+0xdc>
   113d8:	ldr	r1, [pc, #128]	; 11460 <sfbpf_restart+0xe0>
   113dc:	ldr	r2, [r0, #8]
   113e0:	add	r3, pc, r3
   113e4:	ldr	r0, [r0, #16]
   113e8:	str	r2, [r3, #4]
   113ec:	str	r0, [r3, #32]
   113f0:	ldr	r1, [r6, r1]
   113f4:	str	r2, [r1]
   113f8:	ldr	r1, [r5]
   113fc:	ldr	r1, [r1]
   11400:	str	r1, [r3, #36]	; 0x24
   11404:	ldrb	r2, [r2]
   11408:	strb	r2, [r3, #28]
   1140c:	ldrd	r4, [sp]
   11410:	ldrd	r6, [sp, #8]
   11414:	ldr	r8, [sp, #16]
   11418:	add	sp, sp, #20
   1141c:	pop	{pc}		; (ldr pc, [sp], #4)
   11420:	bl	10f8c <sfbpf_ensure_buffer_stack>
   11424:	ldr	r3, [pc, #56]	; 11464 <sfbpf_restart+0xe4>
   11428:	mov	r1, #16384	; 0x4000
   1142c:	add	r3, pc, r3
   11430:	ldr	r4, [r3, #16]
   11434:	ldr	r8, [r3, #24]
   11438:	ldr	r0, [r3, #36]	; 0x24
   1143c:	bl	1130c <sfbpf__create_buffer>
   11440:	cmp	r4, #0
   11444:	add	r5, r4, r8, lsl #2
   11448:	str	r0, [r4, r8, lsl #2]
   1144c:	movne	r4, r0
   11450:	b	113c4 <sfbpf_restart+0x44>
   11454:	.word	0x0002079c
   11458:	.word	0x0001fc54
   1145c:	.word	0x00020754
   11460:	.word	0x000000d8
   11464:	.word	0x00020708

00011468 <sfbpf_lex>:
   11468:	ldr	r3, [pc, #4004]	; 12414 <sfbpf_lex+0xfac>
   1146c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   11470:	strd	r6, [sp, #8]
   11474:	str	lr, [sp, #32]
   11478:	ldr	lr, [pc, #3992]	; 12418 <sfbpf_lex+0xfb0>
   1147c:	add	r3, pc, r3
   11480:	strd	r8, [sp, #16]
   11484:	strd	sl, [sp, #24]
   11488:	sub	sp, sp, #92	; 0x5c
   1148c:	ldr	r8, [r3]
   11490:	ldr	r2, [r3, #40]	; 0x28
   11494:	add	lr, pc, lr
   11498:	str	lr, [sp]
   1149c:	cmp	r2, #0
   114a0:	beq	118f8 <sfbpf_lex+0x490>
   114a4:	ldr	r1, [pc, #3952]	; 1241c <sfbpf_lex+0xfb4>
   114a8:	lsl	r0, r8, #1
   114ac:	ldr	r2, [pc, #3948]	; 12420 <sfbpf_lex+0xfb8>
   114b0:	ldr	ip, [pc, #3948]	; 12424 <sfbpf_lex+0xfbc>
   114b4:	add	r1, pc, r1
   114b8:	add	r1, r1, #256	; 0x100
   114bc:	ldrb	r7, [r3, #28]
   114c0:	add	r2, pc, r2
   114c4:	sub	r2, r2, #1216	; 0x4c0
   114c8:	ldrsh	r5, [r1, r0]
   114cc:	ldrsh	r4, [r2, r0]
   114d0:	ldr	r2, [lr, ip]
   114d4:	ldr	fp, [r3, #4]
   114d8:	str	r2, [sp, #4]
   114dc:	ldr	r1, [pc, #3908]	; 12428 <sfbpf_lex+0xfc0>
   114e0:	ldr	r0, [sp]
   114e4:	ldr	r2, [pc, #3904]	; 1242c <sfbpf_lex+0xfc4>
   114e8:	ldr	r3, [pc, #3904]	; 12430 <sfbpf_lex+0xfc8>
   114ec:	ldr	r1, [r0, r1]
   114f0:	add	r2, pc, r2
   114f4:	add	sl, r2, #3120	; 0xc30
   114f8:	add	r3, pc, r3
   114fc:	add	sl, sl, #4
   11500:	sub	r6, r3, #1216	; 0x4c0
   11504:	mov	r9, r6
   11508:	str	r1, [sp, #16]
   1150c:	mov	r6, sl
   11510:	strb	r7, [fp]
   11514:	str	fp, [sp, #8]
   11518:	ldr	r3, [pc, #3860]	; 12434 <sfbpf_lex+0xfcc>
   1151c:	mov	lr, #0
   11520:	ldr	ip, [pc, #3856]	; 12438 <sfbpf_lex+0xfd0>
   11524:	ldr	r1, [pc, #3856]	; 1243c <sfbpf_lex+0xfd4>
   11528:	add	r3, pc, r3
   1152c:	ldr	sl, [r3, #8]
   11530:	add	ip, pc, ip
   11534:	ldr	r2, [r3, #12]
   11538:	sub	ip, ip, #1216	; 0x4c0
   1153c:	mov	r3, r5
   11540:	add	r1, pc, r1
   11544:	mov	r5, r2
   11548:	cmp	r3, #0
   1154c:	ldr	r3, [pc, #3820]	; 12440 <sfbpf_lex+0xfd8>
   11550:	add	r3, pc, r3
   11554:	ldrb	r3, [r3, r7]
   11558:	beq	11568 <sfbpf_lex+0x100>
   1155c:	mov	sl, r8
   11560:	mov	r5, fp
   11564:	mov	lr, #1
   11568:	ldr	r2, [pc, #3796]	; 12444 <sfbpf_lex+0xfdc>
   1156c:	movw	r0, #1433	; 0x599
   11570:	add	r2, pc, r2
   11574:	b	11598 <sfbpf_lex+0x130>
   11578:	lsl	r8, r8, #1
   1157c:	ldrsh	r8, [r6, r8]
   11580:	cmp	r8, r0
   11584:	ble	11590 <sfbpf_lex+0x128>
   11588:	add	r3, r1, r3
   1158c:	ldrb	r3, [r3, #-1272]	; 0xfffffb08
   11590:	lsl	r4, r8, #1
   11594:	ldrsh	r4, [r9, r4]
   11598:	add	r4, r4, r3
   1159c:	lsl	r4, r4, #1
   115a0:	ldrsh	r7, [r2, r4]
   115a4:	cmp	r7, r8
   115a8:	bne	11578 <sfbpf_lex+0x110>
   115ac:	ldr	r3, [pc, #3732]	; 12448 <sfbpf_lex+0xfe0>
   115b0:	movw	r2, #7401	; 0x1ce9
   115b4:	add	fp, fp, #1
   115b8:	add	r3, pc, r3
   115bc:	ldrsh	r8, [r3, r4]
   115c0:	lsl	r3, r8, #1
   115c4:	ldrsh	r4, [ip, r3]
   115c8:	cmp	r4, r2
   115cc:	beq	115e8 <sfbpf_lex+0x180>
   115d0:	ldr	r2, [pc, #3700]	; 1244c <sfbpf_lex+0xfe4>
   115d4:	ldrb	r7, [fp]
   115d8:	add	r2, pc, r2
   115dc:	add	r2, r2, #256	; 0x100
   115e0:	ldrsh	r3, [r2, r3]
   115e4:	b	11548 <sfbpf_lex+0xe0>
   115e8:	cmp	lr, #0
   115ec:	beq	11600 <sfbpf_lex+0x198>
   115f0:	ldr	r2, [pc, #3672]	; 12450 <sfbpf_lex+0xfe8>
   115f4:	add	r2, pc, r2
   115f8:	str	sl, [r2, #8]
   115fc:	str	r5, [r2, #12]
   11600:	ldr	r1, [pc, #3660]	; 12454 <sfbpf_lex+0xfec>
   11604:	str	r6, [sp, #24]
   11608:	ldr	r2, [pc, #3656]	; 12458 <sfbpf_lex+0xff0>
   1160c:	str	r9, [sp, #28]
   11610:	ldr	r0, [pc, #3652]	; 1245c <sfbpf_lex+0xff4>
   11614:	add	r1, pc, r1
   11618:	add	r5, r1, #3120	; 0xc30
   1161c:	ldr	r1, [pc, #3644]	; 12460 <sfbpf_lex+0xff8>
   11620:	add	r2, pc, r2
   11624:	add	r5, r5, #4
   11628:	ldr	sl, [sp, #8]
   1162c:	add	r2, r2, #256	; 0x100
   11630:	add	r0, pc, r0
   11634:	str	r2, [sp, #12]
   11638:	add	r1, pc, r1
   1163c:	str	r0, [sp, #20]
   11640:	str	r1, [sp, #32]
   11644:	ldr	r2, [sp, #12]
   11648:	ldrsh	r3, [r2, r3]
   1164c:	cmp	r3, #0
   11650:	bne	11668 <sfbpf_lex+0x200>
   11654:	ldr	r1, [sp, #20]
   11658:	ldr	r3, [r1, #8]
   1165c:	ldr	fp, [r1, #12]
   11660:	lsl	r3, r3, #1
   11664:	ldrsh	r3, [r2, r3]
   11668:	sub	r1, fp, sl
   1166c:	mov	r0, #0
   11670:	ldr	r2, [sp, #4]
   11674:	ldr	ip, [sp, #16]
   11678:	ldr	r9, [pc, #3556]	; 12464 <sfbpf_lex+0xffc>
   1167c:	str	sl, [r2]
   11680:	ldr	r2, [pc, #3552]	; 12468 <sfbpf_lex+0x1000>
   11684:	str	r1, [ip]
   11688:	ldrb	r1, [fp]
   1168c:	add	r9, pc, r9
   11690:	strb	r0, [fp]
   11694:	add	r2, pc, r2
   11698:	str	fp, [r2, #4]
   1169c:	strb	r1, [r2, #28]
   116a0:	cmp	r3, #146	; 0x92
   116a4:	addls	pc, pc, r3, lsl #2
   116a8:	b	129c8 <sfbpf_lex+0x1560>
   116ac:	b	11bc0 <sfbpf_lex+0x758>
   116b0:	b	11bb8 <sfbpf_lex+0x750>
   116b4:	b	11bb0 <sfbpf_lex+0x748>
   116b8:	b	11ab8 <sfbpf_lex+0x650>
   116bc:	b	11ab8 <sfbpf_lex+0x650>
   116c0:	b	11b18 <sfbpf_lex+0x6b0>
   116c4:	b	11b10 <sfbpf_lex+0x6a8>
   116c8:	b	11b58 <sfbpf_lex+0x6f0>
   116cc:	b	11b50 <sfbpf_lex+0x6e8>
   116d0:	b	11dd4 <sfbpf_lex+0x96c>
   116d4:	b	11dcc <sfbpf_lex+0x964>
   116d8:	b	11dc4 <sfbpf_lex+0x95c>
   116dc:	b	11dbc <sfbpf_lex+0x954>
   116e0:	b	11db4 <sfbpf_lex+0x94c>
   116e4:	b	11dac <sfbpf_lex+0x944>
   116e8:	b	11d0c <sfbpf_lex+0x8a4>
   116ec:	b	122fc <sfbpf_lex+0xe94>
   116f0:	b	122f4 <sfbpf_lex+0xe8c>
   116f4:	b	122ec <sfbpf_lex+0xe84>
   116f8:	b	122e4 <sfbpf_lex+0xe7c>
   116fc:	b	122dc <sfbpf_lex+0xe74>
   11700:	b	122d4 <sfbpf_lex+0xe6c>
   11704:	b	122cc <sfbpf_lex+0xe64>
   11708:	b	122c4 <sfbpf_lex+0xe5c>
   1170c:	b	11ba8 <sfbpf_lex+0x740>
   11710:	b	11ba0 <sfbpf_lex+0x738>
   11714:	b	11b98 <sfbpf_lex+0x730>
   11718:	b	11b90 <sfbpf_lex+0x728>
   1171c:	b	11b88 <sfbpf_lex+0x720>
   11720:	b	11ab0 <sfbpf_lex+0x648>
   11724:	b	11ab0 <sfbpf_lex+0x648>
   11728:	b	11aa8 <sfbpf_lex+0x640>
   1172c:	b	11aa8 <sfbpf_lex+0x640>
   11730:	b	11d14 <sfbpf_lex+0x8ac>
   11734:	b	11e38 <sfbpf_lex+0x9d0>
   11738:	b	11ddc <sfbpf_lex+0x974>
   1173c:	b	11d2c <sfbpf_lex+0x8c4>
   11740:	b	11d24 <sfbpf_lex+0x8bc>
   11744:	b	11d1c <sfbpf_lex+0x8b4>
   11748:	b	11d34 <sfbpf_lex+0x8cc>
   1174c:	b	11e14 <sfbpf_lex+0x9ac>
   11750:	b	11e0c <sfbpf_lex+0x9a4>
   11754:	b	11e04 <sfbpf_lex+0x99c>
   11758:	b	11dfc <sfbpf_lex+0x994>
   1175c:	b	11df4 <sfbpf_lex+0x98c>
   11760:	b	11dec <sfbpf_lex+0x984>
   11764:	b	11de4 <sfbpf_lex+0x97c>
   11768:	b	11e48 <sfbpf_lex+0x9e0>
   1176c:	b	11b08 <sfbpf_lex+0x6a0>
   11770:	b	11b00 <sfbpf_lex+0x698>
   11774:	b	11af8 <sfbpf_lex+0x690>
   11778:	b	11af0 <sfbpf_lex+0x688>
   1177c:	b	11ae8 <sfbpf_lex+0x680>
   11780:	b	11ae0 <sfbpf_lex+0x678>
   11784:	b	11ad8 <sfbpf_lex+0x670>
   11788:	b	11ad0 <sfbpf_lex+0x668>
   1178c:	b	11d6c <sfbpf_lex+0x904>
   11790:	b	11d64 <sfbpf_lex+0x8fc>
   11794:	b	11d5c <sfbpf_lex+0x8f4>
   11798:	b	11d54 <sfbpf_lex+0x8ec>
   1179c:	b	11d4c <sfbpf_lex+0x8e4>
   117a0:	b	11d44 <sfbpf_lex+0x8dc>
   117a4:	b	11d3c <sfbpf_lex+0x8d4>
   117a8:	b	11ac8 <sfbpf_lex+0x660>
   117ac:	b	11ac0 <sfbpf_lex+0x658>
   117b0:	b	11b48 <sfbpf_lex+0x6e0>
   117b4:	b	11b40 <sfbpf_lex+0x6d8>
   117b8:	b	11b38 <sfbpf_lex+0x6d0>
   117bc:	b	11b30 <sfbpf_lex+0x6c8>
   117c0:	b	11b28 <sfbpf_lex+0x6c0>
   117c4:	b	11b20 <sfbpf_lex+0x6b8>
   117c8:	b	122bc <sfbpf_lex+0xe54>
   117cc:	b	122b4 <sfbpf_lex+0xe4c>
   117d0:	b	122ac <sfbpf_lex+0xe44>
   117d4:	b	122a4 <sfbpf_lex+0xe3c>
   117d8:	b	1229c <sfbpf_lex+0xe34>
   117dc:	b	12294 <sfbpf_lex+0xe2c>
   117e0:	b	1228c <sfbpf_lex+0xe24>
   117e4:	b	12284 <sfbpf_lex+0xe1c>
   117e8:	b	1227c <sfbpf_lex+0xe14>
   117ec:	b	12274 <sfbpf_lex+0xe0c>
   117f0:	b	1226c <sfbpf_lex+0xe04>
   117f4:	b	12264 <sfbpf_lex+0xdfc>
   117f8:	b	1225c <sfbpf_lex+0xdf4>
   117fc:	b	12254 <sfbpf_lex+0xdec>
   11800:	b	1224c <sfbpf_lex+0xde4>
   11804:	b	12244 <sfbpf_lex+0xddc>
   11808:	b	1223c <sfbpf_lex+0xdd4>
   1180c:	b	12234 <sfbpf_lex+0xdcc>
   11810:	b	1222c <sfbpf_lex+0xdc4>
   11814:	b	12224 <sfbpf_lex+0xdbc>
   11818:	b	1221c <sfbpf_lex+0xdb4>
   1181c:	b	12214 <sfbpf_lex+0xdac>
   11820:	b	1220c <sfbpf_lex+0xda4>
   11824:	b	12204 <sfbpf_lex+0xd9c>
   11828:	b	11aa0 <sfbpf_lex+0x638>
   1182c:	b	11aa0 <sfbpf_lex+0x638>
   11830:	b	11e7c <sfbpf_lex+0xa14>
   11834:	b	11e74 <sfbpf_lex+0xa0c>
   11838:	b	11ed4 <sfbpf_lex+0xa6c>
   1183c:	b	11ecc <sfbpf_lex+0xa64>
   11840:	b	11ec4 <sfbpf_lex+0xa5c>
   11844:	b	11e84 <sfbpf_lex+0xa1c>
   11848:	b	11f34 <sfbpf_lex+0xacc>
   1184c:	b	11f2c <sfbpf_lex+0xac4>
   11850:	b	11f24 <sfbpf_lex+0xabc>
   11854:	b	11f1c <sfbpf_lex+0xab4>
   11858:	b	11f14 <sfbpf_lex+0xaac>
   1185c:	b	11f0c <sfbpf_lex+0xaa4>
   11860:	b	11f04 <sfbpf_lex+0xa9c>
   11864:	b	11edc <sfbpf_lex+0xa74>
   11868:	b	12100 <sfbpf_lex+0xc98>
   1186c:	b	12088 <sfbpf_lex+0xc20>
   11870:	b	12064 <sfbpf_lex+0xbfc>
   11874:	b	11ff4 <sfbpf_lex+0xb8c>
   11878:	b	12370 <sfbpf_lex+0xf08>
   1187c:	b	11a84 <sfbpf_lex+0x61c>
   11880:	b	11e1c <sfbpf_lex+0x9b4>
   11884:	b	11a84 <sfbpf_lex+0x61c>
   11888:	b	121e8 <sfbpf_lex+0xd80>
   1188c:	b	121cc <sfbpf_lex+0xd64>
   11890:	b	121b0 <sfbpf_lex+0xd48>
   11894:	b	12194 <sfbpf_lex+0xd2c>
   11898:	b	12178 <sfbpf_lex+0xd10>
   1189c:	b	1215c <sfbpf_lex+0xcf4>
   118a0:	b	12140 <sfbpf_lex+0xcd8>
   118a4:	b	12124 <sfbpf_lex+0xcbc>
   118a8:	b	11a68 <sfbpf_lex+0x600>
   118ac:	b	11c00 <sfbpf_lex+0x798>
   118b0:	b	11be4 <sfbpf_lex+0x77c>
   118b4:	b	11a30 <sfbpf_lex+0x5c8>
   118b8:	b	11d90 <sfbpf_lex+0x928>
   118bc:	b	11d74 <sfbpf_lex+0x90c>
   118c0:	b	11a68 <sfbpf_lex+0x600>
   118c4:	b	11c38 <sfbpf_lex+0x7d0>
   118c8:	b	11fd8 <sfbpf_lex+0xb70>
   118cc:	b	11fbc <sfbpf_lex+0xb54>
   118d0:	b	11fa0 <sfbpf_lex+0xb38>
   118d4:	b	11a30 <sfbpf_lex+0x5c8>
   118d8:	b	11c1c <sfbpf_lex+0x7b4>
   118dc:	b	11e50 <sfbpf_lex+0x9e8>
   118e0:	b	11b60 <sfbpf_lex+0x6f8>
   118e4:	b	12384 <sfbpf_lex+0xf1c>
   118e8:	b	12398 <sfbpf_lex+0xf30>
   118ec:	b	11f44 <sfbpf_lex+0xadc>
   118f0:	b	11c54 <sfbpf_lex+0x7ec>
   118f4:	b	11e40 <sfbpf_lex+0x9d8>
   118f8:	mov	r2, #1
   118fc:	cmp	r8, #0
   11900:	str	r2, [r3, #40]	; 0x28
   11904:	beq	119c0 <sfbpf_lex+0x558>
   11908:	ldr	r2, [pc, #2908]	; 1246c <sfbpf_lex+0x1004>
   1190c:	lsl	r1, r8, #1
   11910:	ldr	r3, [pc, #2904]	; 12470 <sfbpf_lex+0x1008>
   11914:	add	r2, pc, r2
   11918:	add	r2, r2, #256	; 0x100
   1191c:	add	r3, pc, r3
   11920:	ldrsh	r5, [r2, r1]
   11924:	sub	r3, r3, #1216	; 0x4c0
   11928:	ldrsh	r4, [r3, r1]
   1192c:	ldr	r3, [pc, #2880]	; 12474 <sfbpf_lex+0x100c>
   11930:	add	r3, pc, r3
   11934:	ldr	r2, [r3, #36]	; 0x24
   11938:	cmp	r2, #0
   1193c:	beq	11a18 <sfbpf_lex+0x5b0>
   11940:	ldr	r3, [pc, #2864]	; 12478 <sfbpf_lex+0x1010>
   11944:	add	r3, pc, r3
   11948:	ldr	r2, [r3, #44]	; 0x2c
   1194c:	cmp	r2, #0
   11950:	beq	11a00 <sfbpf_lex+0x598>
   11954:	ldr	r2, [pc, #2848]	; 1247c <sfbpf_lex+0x1014>
   11958:	add	r2, pc, r2
   1195c:	ldr	r3, [r2, #16]
   11960:	cmp	r3, #0
   11964:	beq	119d4 <sfbpf_lex+0x56c>
   11968:	ldr	r2, [r2, #24]
   1196c:	ldr	r0, [r3, r2, lsl #2]
   11970:	add	r3, r3, r2, lsl #2
   11974:	cmp	r0, #0
   11978:	beq	119d4 <sfbpf_lex+0x56c>
   1197c:	ldr	r2, [pc, #2812]	; 12480 <sfbpf_lex+0x1018>
   11980:	ldr	r1, [pc, #2716]	; 12424 <sfbpf_lex+0xfbc>
   11984:	ldr	fp, [r0, #8]
   11988:	add	r2, pc, r2
   1198c:	ldr	ip, [r0, #16]
   11990:	ldr	r0, [sp]
   11994:	str	fp, [r2, #4]
   11998:	str	ip, [r2, #32]
   1199c:	ldr	r1, [r0, r1]
   119a0:	str	fp, [r1]
   119a4:	ldr	r3, [r3]
   119a8:	str	r1, [sp, #4]
   119ac:	ldr	r3, [r3]
   119b0:	str	r3, [r2, #36]	; 0x24
   119b4:	ldrb	r7, [fp]
   119b8:	strb	r7, [r2, #28]
   119bc:	b	114dc <sfbpf_lex+0x74>
   119c0:	mov	r4, r8
   119c4:	mov	r5, r8
   119c8:	str	r2, [r3]
   119cc:	mov	r8, r2
   119d0:	b	1192c <sfbpf_lex+0x4c4>
   119d4:	bl	10f8c <sfbpf_ensure_buffer_stack>
   119d8:	ldr	r3, [pc, #2724]	; 12484 <sfbpf_lex+0x101c>
   119dc:	mov	r1, #16384	; 0x4000
   119e0:	add	r3, pc, r3
   119e4:	ldr	r6, [r3, #16]
   119e8:	ldr	r7, [r3, #24]
   119ec:	ldr	r0, [r3, #36]	; 0x24
   119f0:	bl	1130c <sfbpf__create_buffer>
   119f4:	add	r3, r6, r7, lsl #2
   119f8:	str	r0, [r6, r7, lsl #2]
   119fc:	b	1197c <sfbpf_lex+0x514>
   11a00:	ldr	r2, [pc, #2688]	; 12488 <sfbpf_lex+0x1020>
   11a04:	ldr	r1, [sp]
   11a08:	ldr	r2, [r1, r2]
   11a0c:	ldr	r2, [r2]
   11a10:	str	r2, [r3, #44]	; 0x2c
   11a14:	b	11954 <sfbpf_lex+0x4ec>
   11a18:	ldr	r2, [pc, #2668]	; 1248c <sfbpf_lex+0x1024>
   11a1c:	ldr	r1, [sp]
   11a20:	ldr	r2, [r1, r2]
   11a24:	ldr	r2, [r2]
   11a28:	str	r2, [r3, #36]	; 0x24
   11a2c:	b	11940 <sfbpf_lex+0x4d8>
   11a30:	ldr	r2, [pc, #2648]	; 12490 <sfbpf_lex+0x1028>
   11a34:	mov	r1, #16
   11a38:	movw	r3, #291	; 0x123
   11a3c:	ldr	r0, [sp]
   11a40:	ldr	r2, [r0, r2]
   11a44:	str	r1, [r2]
   11a48:	mov	r0, r3
   11a4c:	add	sp, sp, #92	; 0x5c
   11a50:	ldrd	r4, [sp]
   11a54:	ldrd	r6, [sp, #8]
   11a58:	ldrd	r8, [sp, #16]
   11a5c:	ldrd	sl, [sp, #24]
   11a60:	add	sp, sp, #32
   11a64:	pop	{pc}		; (ldr pc, [sp], #4)
   11a68:	ldr	r2, [pc, #2592]	; 12490 <sfbpf_lex+0x1028>
   11a6c:	mov	r1, #13
   11a70:	movw	r3, #291	; 0x123
   11a74:	ldr	r0, [sp]
   11a78:	ldr	r2, [r0, r2]
   11a7c:	str	r1, [r2]
   11a80:	b	11a48 <sfbpf_lex+0x5e0>
   11a84:	ldr	r2, [pc, #2564]	; 12490 <sfbpf_lex+0x1028>
   11a88:	mov	r1, #0
   11a8c:	movw	r3, #291	; 0x123
   11a90:	ldr	r0, [sp]
   11a94:	ldr	r2, [r0, r2]
   11a98:	str	r1, [r2]
   11a9c:	b	11a48 <sfbpf_lex+0x5e0>
   11aa0:	movw	r3, #357	; 0x165
   11aa4:	b	11a48 <sfbpf_lex+0x5e0>
   11aa8:	movw	r3, #330	; 0x14a
   11aac:	b	11a48 <sfbpf_lex+0x5e0>
   11ab0:	mov	r3, #328	; 0x148
   11ab4:	b	11a48 <sfbpf_lex+0x5e0>
   11ab8:	movw	r3, #307	; 0x133
   11abc:	b	11a48 <sfbpf_lex+0x5e0>
   11ac0:	mov	r3, #364	; 0x16c
   11ac4:	b	11a48 <sfbpf_lex+0x5e0>
   11ac8:	movw	r3, #290	; 0x122
   11acc:	b	11a48 <sfbpf_lex+0x5e0>
   11ad0:	movw	r3, #303	; 0x12f
   11ad4:	b	11a48 <sfbpf_lex+0x5e0>
   11ad8:	movw	r3, #302	; 0x12e
   11adc:	b	11a48 <sfbpf_lex+0x5e0>
   11ae0:	movw	r3, #301	; 0x12d
   11ae4:	b	11a48 <sfbpf_lex+0x5e0>
   11ae8:	mov	r3, #300	; 0x12c
   11aec:	b	11a48 <sfbpf_lex+0x5e0>
   11af0:	movw	r3, #261	; 0x105
   11af4:	b	11a48 <sfbpf_lex+0x5e0>
   11af8:	movw	r3, #269	; 0x10d
   11afc:	b	11a48 <sfbpf_lex+0x5e0>
   11b00:	mov	r3, #268	; 0x10c
   11b04:	b	11a48 <sfbpf_lex+0x5e0>
   11b08:	movw	r3, #265	; 0x109
   11b0c:	b	11a48 <sfbpf_lex+0x5e0>
   11b10:	mov	r3, #272	; 0x110
   11b14:	b	11a48 <sfbpf_lex+0x5e0>
   11b18:	movw	r3, #271	; 0x10f
   11b1c:	b	11a48 <sfbpf_lex+0x5e0>
   11b20:	movw	r3, #323	; 0x143
   11b24:	b	11a48 <sfbpf_lex+0x5e0>
   11b28:	movw	r3, #293	; 0x125
   11b2c:	b	11a48 <sfbpf_lex+0x5e0>
   11b30:	mov	r3, #292	; 0x124
   11b34:	b	11a48 <sfbpf_lex+0x5e0>
   11b38:	movw	r3, #318	; 0x13e
   11b3c:	b	11a48 <sfbpf_lex+0x5e0>
   11b40:	mov	r3, #33	; 0x21
   11b44:	b	11a48 <sfbpf_lex+0x5e0>
   11b48:	movw	r3, #363	; 0x16b
   11b4c:	b	11a48 <sfbpf_lex+0x5e0>
   11b50:	movw	r3, #274	; 0x112
   11b54:	b	11a48 <sfbpf_lex+0x5e0>
   11b58:	movw	r3, #273	; 0x111
   11b5c:	b	11a48 <sfbpf_lex+0x5e0>
   11b60:	ldr	r3, [sp, #4]
   11b64:	ldr	r0, [r3]
   11b68:	add	r0, r0, #1
   11b6c:	bl	2e1c <sf_sdup>
   11b70:	ldr	r2, [pc, #2328]	; 12490 <sfbpf_lex+0x1028>
   11b74:	movw	r3, #311	; 0x137
   11b78:	ldr	r1, [sp]
   11b7c:	ldr	r2, [r1, r2]
   11b80:	str	r0, [r2]
   11b84:	b	11a48 <sfbpf_lex+0x5e0>
   11b88:	movw	r3, #327	; 0x147
   11b8c:	b	11a48 <sfbpf_lex+0x5e0>
   11b90:	mov	r3, #288	; 0x120
   11b94:	b	11a48 <sfbpf_lex+0x5e0>
   11b98:	movw	r3, #287	; 0x11f
   11b9c:	b	11a48 <sfbpf_lex+0x5e0>
   11ba0:	movw	r3, #286	; 0x11e
   11ba4:	b	11a48 <sfbpf_lex+0x5e0>
   11ba8:	movw	r3, #285	; 0x11d
   11bac:	b	11a48 <sfbpf_lex+0x5e0>
   11bb0:	movw	r3, #259	; 0x103
   11bb4:	b	11a48 <sfbpf_lex+0x5e0>
   11bb8:	movw	r3, #258	; 0x102
   11bbc:	b	11a48 <sfbpf_lex+0x5e0>
   11bc0:	ldr	r3, [pc, #2252]	; 12494 <sfbpf_lex+0x102c>
   11bc4:	add	r3, pc, r3
   11bc8:	ldrb	r2, [r3, #28]
   11bcc:	ldr	r0, [r3, #8]
   11bd0:	ldr	r7, [r3, #12]
   11bd4:	strb	r2, [fp]
   11bd8:	lsl	r3, r0, #1
   11bdc:	mov	fp, r7
   11be0:	b	11644 <sfbpf_lex+0x1dc>
   11be4:	ldr	r2, [pc, #2212]	; 12490 <sfbpf_lex+0x1028>
   11be8:	mov	r1, #15
   11bec:	movw	r3, #291	; 0x123
   11bf0:	ldr	r0, [sp]
   11bf4:	ldr	r2, [r0, r2]
   11bf8:	str	r1, [r2]
   11bfc:	b	11a48 <sfbpf_lex+0x5e0>
   11c00:	ldr	r2, [pc, #2184]	; 12490 <sfbpf_lex+0x1028>
   11c04:	mov	r1, #14
   11c08:	movw	r3, #291	; 0x123
   11c0c:	ldr	r0, [sp]
   11c10:	ldr	r2, [r0, r2]
   11c14:	str	r1, [r2]
   11c18:	b	11a48 <sfbpf_lex+0x5e0>
   11c1c:	ldr	r2, [pc, #2156]	; 12490 <sfbpf_lex+0x1028>
   11c20:	mov	r1, #32
   11c24:	movw	r3, #291	; 0x123
   11c28:	ldr	r0, [sp]
   11c2c:	ldr	r2, [r0, r2]
   11c30:	str	r1, [r2]
   11c34:	b	11a48 <sfbpf_lex+0x5e0>
   11c38:	ldr	r2, [pc, #2128]	; 12490 <sfbpf_lex+0x1028>
   11c3c:	mov	r1, #1
   11c40:	movw	r3, #291	; 0x123
   11c44:	ldr	r0, [sp]
   11c48:	ldr	r2, [r0, r2]
   11c4c:	str	r1, [r2]
   11c50:	b	11a48 <sfbpf_lex+0x5e0>
   11c54:	ldr	r2, [sp, #4]
   11c58:	ldrb	r1, [r9, #28]
   11c5c:	ldr	r8, [r9, #16]
   11c60:	ldr	r3, [r9, #24]
   11c64:	ldr	r2, [r2]
   11c68:	strb	r1, [fp]
   11c6c:	ldr	ip, [r8, r3, lsl #2]
   11c70:	add	r1, r8, r3, lsl #2
   11c74:	sub	r2, fp, r2
   11c78:	sub	r2, r2, #1
   11c7c:	str	r1, [sp, #8]
   11c80:	str	r2, [sp, #36]	; 0x24
   11c84:	ldr	r2, [ip, #44]	; 0x2c
   11c88:	cmp	r2, #0
   11c8c:	beq	1266c <sfbpf_lex+0x1204>
   11c90:	ldr	r2, [r9, #32]
   11c94:	ldr	r6, [pc, #2044]	; 12498 <sfbpf_lex+0x1030>
   11c98:	ldr	r1, [sp, #4]
   11c9c:	ldr	lr, [ip, #4]
   11ca0:	add	r6, pc, r6
   11ca4:	ldr	r0, [r1]
   11ca8:	ldr	r1, [r6, #4]
   11cac:	add	r7, lr, r2
   11cb0:	cmp	r7, r1
   11cb4:	bcs	125a4 <sfbpf_lex+0x113c>
   11cb8:	add	r2, r2, #1
   11cbc:	add	r2, lr, r2
   11cc0:	cmp	r1, r2
   11cc4:	bhi	12598 <sfbpf_lex+0x1130>
   11cc8:	ldr	r4, [ip, #40]	; 0x28
   11ccc:	sub	r2, r1, r0
   11cd0:	cmp	r4, #0
   11cd4:	bne	123b0 <sfbpf_lex+0xf48>
   11cd8:	cmp	r2, #1
   11cdc:	bne	12340 <sfbpf_lex+0xed8>
   11ce0:	ldr	r2, [pc, #1972]	; 1249c <sfbpf_lex+0x1034>
   11ce4:	ldr	r3, [sp, #4]
   11ce8:	add	r2, pc, r2
   11cec:	ldr	r1, [r3]
   11cf0:	ldr	r3, [r2]
   11cf4:	str	r1, [r2, #4]
   11cf8:	sub	r3, r3, #1
   11cfc:	add	r3, r3, r3, lsr #31
   11d00:	asr	r3, r3, #1
   11d04:	add	r3, r3, #146	; 0x92
   11d08:	b	116a0 <sfbpf_lex+0x238>
   11d0c:	movw	r3, #281	; 0x119
   11d10:	b	11a48 <sfbpf_lex+0x5e0>
   11d14:	movw	r3, #331	; 0x14b
   11d18:	b	11a48 <sfbpf_lex+0x5e0>
   11d1c:	mov	r3, #336	; 0x150
   11d20:	b	11a48 <sfbpf_lex+0x5e0>
   11d24:	movw	r3, #335	; 0x14f
   11d28:	b	11a48 <sfbpf_lex+0x5e0>
   11d2c:	movw	r3, #334	; 0x14e
   11d30:	b	11a48 <sfbpf_lex+0x5e0>
   11d34:	movw	r3, #337	; 0x151
   11d38:	b	11a48 <sfbpf_lex+0x5e0>
   11d3c:	movw	r3, #289	; 0x121
   11d40:	b	11a48 <sfbpf_lex+0x5e0>
   11d44:	movw	r3, #270	; 0x10e
   11d48:	b	11a48 <sfbpf_lex+0x5e0>
   11d4c:	movw	r3, #267	; 0x10b
   11d50:	b	11a48 <sfbpf_lex+0x5e0>
   11d54:	movw	r3, #266	; 0x10a
   11d58:	b	11a48 <sfbpf_lex+0x5e0>
   11d5c:	movw	r3, #306	; 0x132
   11d60:	b	11a48 <sfbpf_lex+0x5e0>
   11d64:	movw	r3, #305	; 0x131
   11d68:	b	11a48 <sfbpf_lex+0x5e0>
   11d6c:	mov	r3, #304	; 0x130
   11d70:	b	11a48 <sfbpf_lex+0x5e0>
   11d74:	ldr	r2, [pc, #1812]	; 12490 <sfbpf_lex+0x1028>
   11d78:	mov	r1, #18
   11d7c:	movw	r3, #291	; 0x123
   11d80:	ldr	r0, [sp]
   11d84:	ldr	r2, [r0, r2]
   11d88:	str	r1, [r2]
   11d8c:	b	11a48 <sfbpf_lex+0x5e0>
   11d90:	ldr	r2, [pc, #1784]	; 12490 <sfbpf_lex+0x1028>
   11d94:	mov	r1, #17
   11d98:	movw	r3, #291	; 0x123
   11d9c:	ldr	r0, [sp]
   11da0:	ldr	r2, [r0, r2]
   11da4:	str	r1, [r2]
   11da8:	b	11a48 <sfbpf_lex+0x5e0>
   11dac:	mov	r3, #280	; 0x118
   11db0:	b	11a48 <sfbpf_lex+0x5e0>
   11db4:	movw	r3, #279	; 0x117
   11db8:	b	11a48 <sfbpf_lex+0x5e0>
   11dbc:	movw	r3, #278	; 0x116
   11dc0:	b	11a48 <sfbpf_lex+0x5e0>
   11dc4:	movw	r3, #277	; 0x115
   11dc8:	b	11a48 <sfbpf_lex+0x5e0>
   11dcc:	mov	r3, #276	; 0x114
   11dd0:	b	11a48 <sfbpf_lex+0x5e0>
   11dd4:	movw	r3, #275	; 0x113
   11dd8:	b	11a48 <sfbpf_lex+0x5e0>
   11ddc:	movw	r3, #333	; 0x14d
   11de0:	b	11a48 <sfbpf_lex+0x5e0>
   11de4:	movw	r3, #263	; 0x107
   11de8:	b	11a48 <sfbpf_lex+0x5e0>
   11dec:	movw	r3, #262	; 0x106
   11df0:	b	11a48 <sfbpf_lex+0x5e0>
   11df4:	mov	r3, #260	; 0x104
   11df8:	b	11a48 <sfbpf_lex+0x5e0>
   11dfc:	mov	r3, #340	; 0x154
   11e00:	b	11a48 <sfbpf_lex+0x5e0>
   11e04:	movw	r3, #339	; 0x153
   11e08:	b	11a48 <sfbpf_lex+0x5e0>
   11e0c:	movw	r3, #338	; 0x152
   11e10:	b	11a48 <sfbpf_lex+0x5e0>
   11e14:	movw	r3, #329	; 0x149
   11e18:	b	11a48 <sfbpf_lex+0x5e0>
   11e1c:	ldr	r2, [pc, #1644]	; 12490 <sfbpf_lex+0x1028>
   11e20:	mov	r1, #1
   11e24:	movw	r3, #291	; 0x123
   11e28:	ldr	r0, [sp]
   11e2c:	ldr	r2, [r0, r2]
   11e30:	str	r1, [r2]
   11e34:	b	11a48 <sfbpf_lex+0x5e0>
   11e38:	mov	r3, #332	; 0x14c
   11e3c:	b	11a48 <sfbpf_lex+0x5e0>
   11e40:	mov	r3, #0
   11e44:	b	11a48 <sfbpf_lex+0x5e0>
   11e48:	mov	r3, #264	; 0x108
   11e4c:	b	11a48 <sfbpf_lex+0x5e0>
   11e50:	ldr	r3, [sp, #4]
   11e54:	ldr	r0, [r3]
   11e58:	bl	2e1c <sf_sdup>
   11e5c:	ldr	r2, [pc, #1580]	; 12490 <sfbpf_lex+0x1028>
   11e60:	movw	r3, #311	; 0x137
   11e64:	ldr	r1, [sp]
   11e68:	ldr	r2, [r1, r2]
   11e6c:	str	r0, [r2]
   11e70:	b	11a48 <sfbpf_lex+0x5e0>
   11e74:	movw	r3, #359	; 0x167
   11e78:	b	11a48 <sfbpf_lex+0x5e0>
   11e7c:	movw	r3, #358	; 0x166
   11e80:	b	11a48 <sfbpf_lex+0x5e0>
   11e84:	ldr	r1, [pc, #1556]	; 124a0 <sfbpf_lex+0x1038>
   11e88:	ldr	r2, [pc, #1556]	; 124a4 <sfbpf_lex+0x103c>
   11e8c:	ldr	r3, [pc, #1556]	; 124a8 <sfbpf_lex+0x1040>
   11e90:	add	r1, pc, r1
   11e94:	ldm	r1, {r8, fp}
   11e98:	add	r2, pc, r2
   11e9c:	ldrb	r7, [r1, #28]
   11ea0:	add	r2, r2, #256	; 0x100
   11ea4:	add	r3, pc, r3
   11ea8:	sub	r3, r3, #1216	; 0x4c0
   11eac:	ldr	sl, [sp, #24]
   11eb0:	lsl	r1, r8, #1
   11eb4:	ldr	r9, [sp, #28]
   11eb8:	ldrsh	r5, [r2, r1]
   11ebc:	ldrsh	r4, [r3, r1]
   11ec0:	b	1150c <sfbpf_lex+0xa4>
   11ec4:	movw	r3, #362	; 0x16a
   11ec8:	b	11a48 <sfbpf_lex+0x5e0>
   11ecc:	movw	r3, #361	; 0x169
   11ed0:	b	11a48 <sfbpf_lex+0x5e0>
   11ed4:	mov	r3, #360	; 0x168
   11ed8:	b	11a48 <sfbpf_lex+0x5e0>
   11edc:	ldr	r3, [sp, #4]
   11ee0:	ldr	r0, [r3]
   11ee4:	add	r0, r0, #1
   11ee8:	bl	c0e0 <pcap_ether_aton>
   11eec:	ldr	r2, [pc, #1436]	; 12490 <sfbpf_lex+0x1028>
   11ef0:	movw	r3, #315	; 0x13b
   11ef4:	ldr	r1, [sp]
   11ef8:	ldr	r2, [r1, r2]
   11efc:	str	r0, [r2]
   11f00:	b	11a48 <sfbpf_lex+0x5e0>
   11f04:	movw	r3, #317	; 0x13d
   11f08:	b	11a48 <sfbpf_lex+0x5e0>
   11f0c:	mov	r3, #316	; 0x13c
   11f10:	b	11a48 <sfbpf_lex+0x5e0>
   11f14:	mov	r3, #61	; 0x3d
   11f18:	b	11a48 <sfbpf_lex+0x5e0>
   11f1c:	movw	r3, #310	; 0x136
   11f20:	b	11a48 <sfbpf_lex+0x5e0>
   11f24:	movw	r3, #309	; 0x135
   11f28:	b	11a48 <sfbpf_lex+0x5e0>
   11f2c:	mov	r3, #308	; 0x134
   11f30:	b	11a48 <sfbpf_lex+0x5e0>
   11f34:	ldr	r3, [sp, #4]
   11f38:	ldr	r3, [r3]
   11f3c:	ldrb	r3, [r3]
   11f40:	b	11a48 <sfbpf_lex+0x5e0>
   11f44:	ldr	r3, [sp, #16]
   11f48:	mov	r2, #1
   11f4c:	ldr	r6, [pc, #1368]	; 124ac <sfbpf_lex+0x1044>
   11f50:	ldr	sl, [sp, #24]
   11f54:	ldr	r1, [r3]
   11f58:	add	r6, pc, r6
   11f5c:	ldr	r3, [sp, #4]
   11f60:	ldr	r9, [sp, #28]
   11f64:	ldr	r0, [r3]
   11f68:	ldr	r3, [r6, #44]	; 0x2c
   11f6c:	bl	d9c <fwrite@plt>
   11f70:	ldr	r2, [pc, #1336]	; 124b0 <sfbpf_lex+0x1048>
   11f74:	ldr	r3, [pc, #1336]	; 124b4 <sfbpf_lex+0x104c>
   11f78:	ldm	r6, {r8, fp}
   11f7c:	add	r2, pc, r2
   11f80:	add	r2, r2, #256	; 0x100
   11f84:	ldrb	r7, [r6, #28]
   11f88:	add	r3, pc, r3
   11f8c:	sub	r3, r3, #1216	; 0x4c0
   11f90:	lsl	r1, r8, #1
   11f94:	ldrsh	r5, [r2, r1]
   11f98:	ldrsh	r4, [r3, r1]
   11f9c:	b	1150c <sfbpf_lex+0xa4>
   11fa0:	ldr	r2, [pc, #1256]	; 12490 <sfbpf_lex+0x1028>
   11fa4:	mov	r1, #8
   11fa8:	movw	r3, #291	; 0x123
   11fac:	ldr	r0, [sp]
   11fb0:	ldr	r2, [r0, r2]
   11fb4:	str	r1, [r2]
   11fb8:	b	11a48 <sfbpf_lex+0x5e0>
   11fbc:	ldr	r2, [pc, #1228]	; 12490 <sfbpf_lex+0x1028>
   11fc0:	mov	r1, #4
   11fc4:	movw	r3, #291	; 0x123
   11fc8:	ldr	r0, [sp]
   11fcc:	ldr	r2, [r0, r2]
   11fd0:	str	r1, [r2]
   11fd4:	b	11a48 <sfbpf_lex+0x5e0>
   11fd8:	ldr	r2, [pc, #1200]	; 12490 <sfbpf_lex+0x1028>
   11fdc:	mov	r1, #2
   11fe0:	movw	r3, #291	; 0x123
   11fe4:	ldr	r0, [sp]
   11fe8:	ldr	r2, [r0, r2]
   11fec:	str	r1, [r2]
   11ff0:	b	11a48 <sfbpf_lex+0x5e0>
   11ff4:	ldr	r3, [sp, #4]
   11ff8:	mov	r2, #10
   11ffc:	mov	r4, #0
   12000:	mov	r5, #0
   12004:	mov	r1, #0
   12008:	str	r2, [sp, #60]	; 0x3c
   1200c:	add	r2, sp, #56	; 0x38
   12010:	strd	r4, [sp, #64]	; 0x40
   12014:	strd	r4, [sp, #72]	; 0x48
   12018:	ldr	r0, [r3]
   1201c:	mov	r3, #4
   12020:	str	r3, [sp, #56]	; 0x38
   12024:	add	r3, sp, #52	; 0x34
   12028:	strd	r4, [sp, #80]	; 0x50
   1202c:	bl	e8c <getaddrinfo@plt>
   12030:	cmp	r0, #0
   12034:	bne	1235c <sfbpf_lex+0xef4>
   12038:	ldr	r0, [sp, #52]	; 0x34
   1203c:	bl	e80 <freeaddrinfo@plt>
   12040:	ldr	r3, [sp, #4]
   12044:	ldr	r0, [r3]
   12048:	bl	2e1c <sf_sdup>
   1204c:	ldr	r2, [pc, #1084]	; 12490 <sfbpf_lex+0x1028>
   12050:	movw	r3, #314	; 0x13a
   12054:	ldr	r1, [sp]
   12058:	ldr	r2, [r1, r2]
   1205c:	str	r0, [r2]
   12060:	b	11a48 <sfbpf_lex+0x5e0>
   12064:	ldr	r3, [sp, #4]
   12068:	ldr	r0, [r3]
   1206c:	bl	2e1c <sf_sdup>
   12070:	ldr	r2, [pc, #1048]	; 12490 <sfbpf_lex+0x1028>
   12074:	movw	r3, #313	; 0x139
   12078:	ldr	r1, [sp]
   1207c:	ldr	r2, [r1, r2]
   12080:	str	r0, [r2]
   12084:	b	11a48 <sfbpf_lex+0x5e0>
   12088:	ldr	r3, [sp, #4]
   1208c:	ldr	r5, [r3]
   12090:	ldrb	r4, [r5]
   12094:	cmp	r4, #48	; 0x30
   12098:	movne	r6, #10
   1209c:	beq	1230c <sfbpf_lex+0xea4>
   120a0:	cmp	r4, #0
   120a4:	beq	12304 <sfbpf_lex+0xe9c>
   120a8:	bl	dd8 <__ctype_b_loc@plt>
   120ac:	ldr	r1, [r0]
   120b0:	mov	r2, #0
   120b4:	lsl	r3, r4, #1
   120b8:	mul	r2, r2, r6
   120bc:	ldrh	r3, [r1, r3]
   120c0:	tst	r3, #2048	; 0x800
   120c4:	subne	r3, r4, #48	; 0x30
   120c8:	bne	120d8 <sfbpf_lex+0xc70>
   120cc:	tst	r3, #512	; 0x200
   120d0:	subne	r3, r4, #87	; 0x57
   120d4:	subeq	r3, r4, #55	; 0x37
   120d8:	ldrb	r4, [r5, #1]!
   120dc:	add	r2, r2, r3
   120e0:	cmp	r4, #0
   120e4:	bne	120b4 <sfbpf_lex+0xc4c>
   120e8:	ldr	r1, [pc, #928]	; 12490 <sfbpf_lex+0x1028>
   120ec:	movw	r3, #291	; 0x123
   120f0:	ldr	r0, [sp]
   120f4:	ldr	r1, [r0, r1]
   120f8:	str	r2, [r1]
   120fc:	b	11a48 <sfbpf_lex+0x5e0>
   12100:	ldr	r3, [sp, #4]
   12104:	ldr	r0, [r3]
   12108:	bl	c0e0 <pcap_ether_aton>
   1210c:	ldr	r2, [pc, #892]	; 12490 <sfbpf_lex+0x1028>
   12110:	mov	r3, #312	; 0x138
   12114:	ldr	r1, [sp]
   12118:	ldr	r2, [r1, r2]
   1211c:	str	r0, [r2]
   12120:	b	11a48 <sfbpf_lex+0x5e0>
   12124:	ldr	r2, [pc, #868]	; 12490 <sfbpf_lex+0x1028>
   12128:	mov	r1, #12
   1212c:	movw	r3, #291	; 0x123
   12130:	ldr	r0, [sp]
   12134:	ldr	r2, [r0, r2]
   12138:	str	r1, [r2]
   1213c:	b	11a48 <sfbpf_lex+0x5e0>
   12140:	ldr	r2, [pc, #840]	; 12490 <sfbpf_lex+0x1028>
   12144:	mov	r1, #11
   12148:	movw	r3, #291	; 0x123
   1214c:	ldr	r0, [sp]
   12150:	ldr	r2, [r0, r2]
   12154:	str	r1, [r2]
   12158:	b	11a48 <sfbpf_lex+0x5e0>
   1215c:	ldr	r2, [pc, #812]	; 12490 <sfbpf_lex+0x1028>
   12160:	mov	r1, #10
   12164:	movw	r3, #291	; 0x123
   12168:	ldr	r0, [sp]
   1216c:	ldr	r2, [r0, r2]
   12170:	str	r1, [r2]
   12174:	b	11a48 <sfbpf_lex+0x5e0>
   12178:	ldr	r2, [pc, #784]	; 12490 <sfbpf_lex+0x1028>
   1217c:	mov	r1, #9
   12180:	movw	r3, #291	; 0x123
   12184:	ldr	r0, [sp]
   12188:	ldr	r2, [r0, r2]
   1218c:	str	r1, [r2]
   12190:	b	11a48 <sfbpf_lex+0x5e0>
   12194:	ldr	r2, [pc, #756]	; 12490 <sfbpf_lex+0x1028>
   12198:	mov	r1, #8
   1219c:	movw	r3, #291	; 0x123
   121a0:	ldr	r0, [sp]
   121a4:	ldr	r2, [r0, r2]
   121a8:	str	r1, [r2]
   121ac:	b	11a48 <sfbpf_lex+0x5e0>
   121b0:	ldr	r2, [pc, #728]	; 12490 <sfbpf_lex+0x1028>
   121b4:	mov	r1, #5
   121b8:	movw	r3, #291	; 0x123
   121bc:	ldr	r0, [sp]
   121c0:	ldr	r2, [r0, r2]
   121c4:	str	r1, [r2]
   121c8:	b	11a48 <sfbpf_lex+0x5e0>
   121cc:	ldr	r2, [pc, #700]	; 12490 <sfbpf_lex+0x1028>
   121d0:	mov	r1, #4
   121d4:	movw	r3, #291	; 0x123
   121d8:	ldr	r0, [sp]
   121dc:	ldr	r2, [r0, r2]
   121e0:	str	r1, [r2]
   121e4:	b	11a48 <sfbpf_lex+0x5e0>
   121e8:	ldr	r2, [pc, #672]	; 12490 <sfbpf_lex+0x1028>
   121ec:	mov	r1, #3
   121f0:	movw	r3, #291	; 0x123
   121f4:	ldr	r0, [sp]
   121f8:	ldr	r2, [r0, r2]
   121fc:	str	r1, [r2]
   12200:	b	11a48 <sfbpf_lex+0x5e0>
   12204:	mov	r3, #356	; 0x164
   12208:	b	11a48 <sfbpf_lex+0x5e0>
   1220c:	movw	r3, #299	; 0x12b
   12210:	b	11a48 <sfbpf_lex+0x5e0>
   12214:	movw	r3, #298	; 0x12a
   12218:	b	11a48 <sfbpf_lex+0x5e0>
   1221c:	movw	r3, #297	; 0x129
   12220:	b	11a48 <sfbpf_lex+0x5e0>
   12224:	mov	r3, #296	; 0x128
   12228:	b	11a48 <sfbpf_lex+0x5e0>
   1222c:	movw	r3, #295	; 0x127
   12230:	b	11a48 <sfbpf_lex+0x5e0>
   12234:	movw	r3, #294	; 0x126
   12238:	b	11a48 <sfbpf_lex+0x5e0>
   1223c:	mov	r3, #352	; 0x160
   12240:	b	11a48 <sfbpf_lex+0x5e0>
   12244:	movw	r3, #351	; 0x15f
   12248:	b	11a48 <sfbpf_lex+0x5e0>
   1224c:	movw	r3, #354	; 0x162
   12250:	b	11a48 <sfbpf_lex+0x5e0>
   12254:	movw	r3, #353	; 0x161
   12258:	b	11a48 <sfbpf_lex+0x5e0>
   1225c:	movw	r3, #346	; 0x15a
   12260:	b	11a48 <sfbpf_lex+0x5e0>
   12264:	movw	r3, #345	; 0x159
   12268:	b	11a48 <sfbpf_lex+0x5e0>
   1226c:	mov	r3, #348	; 0x15c
   12270:	b	11a48 <sfbpf_lex+0x5e0>
   12274:	movw	r3, #347	; 0x15b
   12278:	b	11a48 <sfbpf_lex+0x5e0>
   1227c:	movw	r3, #350	; 0x15e
   12280:	b	11a48 <sfbpf_lex+0x5e0>
   12284:	movw	r3, #349	; 0x15d
   12288:	b	11a48 <sfbpf_lex+0x5e0>
   1228c:	mov	r3, #344	; 0x158
   12290:	b	11a48 <sfbpf_lex+0x5e0>
   12294:	movw	r3, #343	; 0x157
   12298:	b	11a48 <sfbpf_lex+0x5e0>
   1229c:	movw	r3, #342	; 0x156
   122a0:	b	11a48 <sfbpf_lex+0x5e0>
   122a4:	movw	r3, #341	; 0x155
   122a8:	b	11a48 <sfbpf_lex+0x5e0>
   122ac:	movw	r3, #326	; 0x146
   122b0:	b	11a48 <sfbpf_lex+0x5e0>
   122b4:	movw	r3, #325	; 0x145
   122b8:	b	11a48 <sfbpf_lex+0x5e0>
   122bc:	mov	r3, #324	; 0x144
   122c0:	b	11a48 <sfbpf_lex+0x5e0>
   122c4:	mov	r3, #284	; 0x11c
   122c8:	b	11a48 <sfbpf_lex+0x5e0>
   122cc:	movw	r3, #283	; 0x11b
   122d0:	b	11a48 <sfbpf_lex+0x5e0>
   122d4:	movw	r3, #282	; 0x11a
   122d8:	b	11a48 <sfbpf_lex+0x5e0>
   122dc:	movw	r3, #322	; 0x142
   122e0:	b	11a48 <sfbpf_lex+0x5e0>
   122e4:	movw	r3, #321	; 0x141
   122e8:	b	11a48 <sfbpf_lex+0x5e0>
   122ec:	mov	r3, #320	; 0x140
   122f0:	b	11a48 <sfbpf_lex+0x5e0>
   122f4:	movw	r3, #319	; 0x13f
   122f8:	b	11a48 <sfbpf_lex+0x5e0>
   122fc:	movw	r3, #355	; 0x163
   12300:	b	11a48 <sfbpf_lex+0x5e0>
   12304:	mov	r2, r4
   12308:	b	120e8 <sfbpf_lex+0xc80>
   1230c:	ldrb	r4, [r5, #1]
   12310:	and	r3, r4, #223	; 0xdf
   12314:	cmp	r3, #88	; 0x58
   12318:	addne	r5, r5, #1
   1231c:	movne	r6, #8
   12320:	bne	120a0 <sfbpf_lex+0xc38>
   12324:	ldrb	r4, [r5, #2]
   12328:	mov	r6, #16
   1232c:	add	r5, r5, #2
   12330:	b	120a0 <sfbpf_lex+0xc38>
   12334:	ldr	r3, [r7]
   12338:	ldr	r7, [r3, #4]
   1233c:	add	r7, r7, r6
   12340:	ldr	r3, [pc, #368]	; 124b8 <sfbpf_lex+0x1050>
   12344:	add	r3, pc, r3
   12348:	str	r7, [r3, #4]
   1234c:	bl	10dd0 <yy_get_previous_state>
   12350:	ldr	r3, [sp, #4]
   12354:	ldr	sl, [r3]
   12358:	b	11bd8 <sfbpf_lex+0x770>
   1235c:	ldr	r0, [pc, #344]	; 124bc <sfbpf_lex+0x1054>
   12360:	ldr	r3, [sp, #4]
   12364:	add	r0, pc, r0
   12368:	ldr	r1, [r3]
   1236c:	bl	2210 <sf_bpf_error>
   12370:	ldr	r0, [pc, #328]	; 124c0 <sfbpf_lex+0x1058>
   12374:	ldr	r3, [sp, #4]
   12378:	add	r0, pc, r0
   1237c:	ldr	r1, [r3]
   12380:	bl	2210 <sf_bpf_error>
   12384:	ldr	r0, [pc, #312]	; 124c4 <sfbpf_lex+0x105c>
   12388:	ldr	r3, [sp, #4]
   1238c:	add	r0, pc, r0
   12390:	ldr	r1, [r3]
   12394:	bl	2210 <sf_bpf_error>
   12398:	ldr	r3, [sp, #4]
   1239c:	ldr	r0, [pc, #292]	; 124c8 <sfbpf_lex+0x1060>
   123a0:	ldr	r3, [r3]
   123a4:	add	r0, pc, r0
   123a8:	ldrb	r1, [r3]
   123ac:	bl	2210 <sf_bpf_error>
   123b0:	sub	r6, r2, #1
   123b4:	cmp	r6, #0
   123b8:	subgt	lr, lr, #1
   123bc:	addgt	ip, r0, r6
   123c0:	ble	123dc <sfbpf_lex+0xf74>
   123c4:	ldrb	r4, [r0], #1
   123c8:	cmp	r0, ip
   123cc:	strb	r4, [lr, #1]!
   123d0:	bne	123c4 <sfbpf_lex+0xf5c>
   123d4:	ldr	r0, [sp, #8]
   123d8:	ldr	ip, [r0]
   123dc:	mov	r7, ip
   123e0:	ldr	r0, [ip, #44]	; 0x2c
   123e4:	cmp	r0, #2
   123e8:	beq	12744 <sfbpf_lex+0x12dc>
   123ec:	ldr	r4, [ip, #12]
   123f0:	sub	r4, r4, r6
   123f4:	sub	r4, r4, #1
   123f8:	cmp	r4, #0
   123fc:	bgt	126a0 <sfbpf_lex+0x1238>
   12400:	str	r9, [sp, #40]	; 0x28
   12404:	mov	r9, r3
   12408:	str	r5, [sp, #44]	; 0x2c
   1240c:	mov	r5, r2
   12410:	b	12574 <sfbpf_lex+0x110c>
   12414:	.word	0x000206b8
   12418:	.word	0x0001fb64
   1241c:	.word	0x00004a18
   12420:	.word	0x00006a04
   12424:	.word	0x000000d8
   12428:	.word	0x000000c0
   1242c:	.word	0x000049dc
   12430:	.word	0x000069cc
   12434:	.word	0x0002060c
   12438:	.word	0x00006994
   1243c:	.word	0x00006984
   12440:	.word	0x0000497c
   12444:	.word	0x00007360
   12448:	.word	0x0000ad58
   1244c:	.word	0x000048f4
   12450:	.word	0x00020540
   12454:	.word	0x000048b8
   12458:	.word	0x000048ac
   1245c:	.word	0x00020504
   12460:	.word	0x000204fc
   12464:	.word	0x000204a8
   12468:	.word	0x000204a0
   1246c:	.word	0x000045b8
   12470:	.word	0x000065a8
   12474:	.word	0x00020204
   12478:	.word	0x000201f0
   1247c:	.word	0x000201dc
   12480:	.word	0x000201ac
   12484:	.word	0x00020154
   12488:	.word	0x000000e8
   1248c:	.word	0x000000e0
   12490:	.word	0x000000f0
   12494:	.word	0x0001ff70
   12498:	.word	0x0001fe94
   1249c:	.word	0x0001fe4c
   124a0:	.word	0x0001fca4
   124a4:	.word	0x00004034
   124a8:	.word	0x00006020
   124ac:	.word	0x0001fbdc
   124b0:	.word	0x00003f50
   124b4:	.word	0x00005f3c
   124b8:	.word	0x0001f7f0
   124bc:	.word	0x0000da50
   124c0:	.word	0x0000da54
   124c4:	.word	0x0000da5c
   124c8:	.word	0x0000da58
   124cc:	.word	0x0000d8b8
   124d0:	.word	0x0000d874
   124d4:	.word	0x00003908
   124d8:	.word	0x000058f4
   124dc:	.word	0x000062f8
   124e0:	.word	0x00009ce0
   124e4:	.word	0x0001f4d4
   124e8:	.word	0x0001f468
   124ec:	.word	0x0001f418
   124f0:	.word	0x0001f3e4
   124f4:	.word	0x0001f3c8
   124f8:	.word	0x0001f380
   124fc:	.word	0x000036ac
   12500:	.word	0x0000569c
   12504:	.word	0x0001f2a8
   12508:	.word	0x0000d5e4
   1250c:	.word	0x0001f224
   12510:	.word	0x0000d4cc
   12514:	.word	0x0000d4f8
   12518:	ldr	r1, [r7, #12]
   1251c:	cmp	r1, #0
   12520:	lslgt	r1, r1, #1
   12524:	bgt	12534 <sfbpf_lex+0x10cc>
   12528:	add	ip, r1, #7
   1252c:	movge	ip, r1
   12530:	add	r1, r1, ip, asr #3
   12534:	str	r1, [r7, #12]
   12538:	add	r1, r1, #2
   1253c:	bl	d90 <realloc@plt>
   12540:	cmp	r0, #0
   12544:	str	r0, [r7, #4]
   12548:	beq	1258c <sfbpf_lex+0x1124>
   1254c:	ldr	r3, [sp, #8]
   12550:	add	r1, r0, r4
   12554:	ldr	r7, [r3]
   12558:	ldr	r3, [sp, #32]
   1255c:	ldr	r4, [r7, #12]
   12560:	str	r1, [r3, #4]
   12564:	sub	r4, r4, r6
   12568:	sub	r4, r4, #1
   1256c:	cmp	r4, #0
   12570:	bgt	12690 <sfbpf_lex+0x1228>
   12574:	ldr	r0, [r7, #4]
   12578:	ldr	ip, [r7, #20]
   1257c:	sub	r4, r1, r0
   12580:	cmp	ip, #0
   12584:	bne	12518 <sfbpf_lex+0x10b0>
   12588:	str	ip, [r7, #4]
   1258c:	ldr	r0, [pc, #-200]	; 124cc <sfbpf_lex+0x1064>
   12590:	add	r0, pc, r0
   12594:	bl	10f4c <yy_fatal_error>
   12598:	ldr	r0, [pc, #-208]	; 124d0 <sfbpf_lex+0x1068>
   1259c:	add	r0, pc, r0
   125a0:	bl	10f4c <yy_fatal_error>
   125a4:	ldr	r3, [sp, #36]	; 0x24
   125a8:	add	r7, r0, r3
   125ac:	str	r7, [r6, #4]
   125b0:	bl	10dd0 <yy_get_previous_state>
   125b4:	ldr	r3, [pc, #-232]	; 124d4 <sfbpf_lex+0x106c>
   125b8:	lsl	r1, r0, #1
   125bc:	ldr	r2, [pc, #-236]	; 124d8 <sfbpf_lex+0x1070>
   125c0:	ldr	ip, [pc, #-236]	; 124dc <sfbpf_lex+0x1074>
   125c4:	add	r3, pc, r3
   125c8:	add	r3, r3, #256	; 0x100
   125cc:	ldrsh	r3, [r3, r1]
   125d0:	add	r2, pc, r2
   125d4:	sub	r2, r2, #1216	; 0x4c0
   125d8:	add	ip, pc, ip
   125dc:	cmp	r3, #0
   125e0:	ldrsh	r3, [r2, r1]
   125e4:	strne	r0, [r6, #8]
   125e8:	strne	r7, [r6, #12]
   125ec:	add	r3, r3, #1
   125f0:	lsl	r3, r3, #1
   125f4:	ldrsh	r1, [ip, r3]
   125f8:	cmp	r0, r1
   125fc:	beq	12624 <sfbpf_lex+0x11bc>
   12600:	lsl	r1, r0, #1
   12604:	ldrsh	lr, [r5, r1]
   12608:	lsl	r1, lr, #1
   1260c:	ldrsh	r3, [r2, r1]
   12610:	add	r3, r3, #1
   12614:	lsl	r3, r3, #1
   12618:	ldrsh	r4, [ip, r3]
   1261c:	cmp	lr, r4
   12620:	bne	12604 <sfbpf_lex+0x119c>
   12624:	ldr	r2, [pc, #-332]	; 124e0 <sfbpf_lex+0x1078>
   12628:	movw	r1, #1433	; 0x599
   1262c:	ldr	ip, [sp, #4]
   12630:	add	r2, pc, r2
   12634:	ldrsh	r8, [r2, r3]
   12638:	ldr	sl, [ip]
   1263c:	cmp	r8, r1
   12640:	beq	11bd8 <sfbpf_lex+0x770>
   12644:	cmp	r8, #0
   12648:	beq	11bd8 <sfbpf_lex+0x770>
   1264c:	ldr	r3, [pc, #-368]	; 124e4 <sfbpf_lex+0x107c>
   12650:	add	fp, r7, #1
   12654:	str	sl, [sp, #8]
   12658:	ldr	r6, [sp, #24]
   1265c:	ldr	r9, [sp, #28]
   12660:	add	r3, pc, r3
   12664:	str	fp, [r3, #4]
   12668:	b	12810 <sfbpf_lex+0x13a8>
   1266c:	ldr	r1, [r9, #36]	; 0x24
   12670:	mov	r0, #1
   12674:	ldr	r2, [ip, #16]
   12678:	str	r1, [ip]
   1267c:	ldr	r1, [r8, r3, lsl #2]
   12680:	str	r2, [r9, #32]
   12684:	str	r0, [r1, #44]	; 0x2c
   12688:	ldr	ip, [r8, r3, lsl #2]
   1268c:	b	11c94 <sfbpf_lex+0x82c>
   12690:	mov	r2, r5
   12694:	mov	r3, r9
   12698:	ldr	r9, [sp, #40]	; 0x28
   1269c:	ldr	r5, [sp, #44]	; 0x2c
   126a0:	cmp	r4, #8192	; 0x2000
   126a4:	ldr	r1, [r7, #24]
   126a8:	movge	r4, #8192	; 0x2000
   126ac:	cmp	r1, #0
   126b0:	str	r1, [sp, #8]
   126b4:	beq	128f0 <sfbpf_lex+0x1488>
   126b8:	ldr	r7, [pc, #-472]	; 124e8 <sfbpf_lex+0x1080>
   126bc:	sub	r2, r2, #2
   126c0:	mov	r8, #0
   126c4:	str	r5, [sp, #8]
   126c8:	mov	r5, r2
   126cc:	add	r7, pc, r7
   126d0:	ldr	r0, [r7, #36]	; 0x24
   126d4:	bl	ec8 <getc@plt>
   126d8:	cmn	r0, #1
   126dc:	beq	128b8 <sfbpf_lex+0x1450>
   126e0:	ldr	r1, [r7, #16]
   126e4:	add	r8, r8, #1
   126e8:	cmp	r0, #10
   126ec:	add	r3, r5, r8
   126f0:	ldr	ip, [r7, #24]
   126f4:	ldr	r1, [r1, ip, lsl #2]
   126f8:	ldr	r1, [r1, #4]
   126fc:	add	ip, r1, r3
   12700:	beq	1283c <sfbpf_lex+0x13d4>
   12704:	cmp	r4, r8
   12708:	strb	r0, [r1, r3]
   1270c:	bne	126d0 <sfbpf_lex+0x1268>
   12710:	ldr	r5, [sp, #8]
   12714:	mov	r8, r4
   12718:	ldr	r3, [pc, #-564]	; 124ec <sfbpf_lex+0x1084>
   1271c:	add	r3, pc, r3
   12720:	ldr	r7, [r3, #16]
   12724:	str	r4, [r3, #32]
   12728:	ldr	r3, [r3, #24]
   1272c:	ldr	r2, [r7, r3, lsl #2]
   12730:	add	r7, r7, r3, lsl #2
   12734:	str	r4, [r2, #16]
   12738:	mov	r3, #0
   1273c:	str	r3, [sp, #8]
   12740:	b	12788 <sfbpf_lex+0x1320>
   12744:	ldr	r3, [pc, #-604]	; 124f0 <sfbpf_lex+0x1088>
   12748:	mov	r2, #0
   1274c:	str	r2, [ip, #16]
   12750:	add	r3, pc, r3
   12754:	str	r2, [r3, #32]
   12758:	cmp	r6, #0
   1275c:	beq	12880 <sfbpf_lex+0x1418>
   12760:	ldr	r3, [pc, #-628]	; 124f4 <sfbpf_lex+0x108c>
   12764:	mov	r2, #2
   12768:	str	r2, [sp, #8]
   1276c:	add	r3, pc, r3
   12770:	ldr	r7, [r3, #16]
   12774:	ldr	r1, [r3, #24]
   12778:	ldr	r8, [r3, #32]
   1277c:	ldr	r3, [r7, r1, lsl #2]
   12780:	add	r7, r7, r1, lsl r2
   12784:	str	r2, [r3, #44]	; 0x2c
   12788:	ldr	r4, [r7]
   1278c:	add	r6, r6, r8
   12790:	ldr	r0, [r4, #4]
   12794:	ldr	r3, [r4, #12]
   12798:	cmp	r6, r3
   1279c:	bgt	1284c <sfbpf_lex+0x13e4>
   127a0:	mov	r2, #0
   127a4:	ldr	ip, [pc, #-692]	; 124f8 <sfbpf_lex+0x1090>
   127a8:	strb	r2, [r0, r6]
   127ac:	ldr	r3, [r7]
   127b0:	ldr	r1, [sp, #8]
   127b4:	add	ip, pc, ip
   127b8:	str	r6, [ip, #32]
   127bc:	ldr	r3, [r3, #4]
   127c0:	cmp	r1, #1
   127c4:	add	r3, r3, r6
   127c8:	strb	r2, [r3, #1]
   127cc:	ldr	r3, [r7]
   127d0:	ldr	r2, [sp, #4]
   127d4:	ldr	r3, [r3, #4]
   127d8:	str	r3, [r2]
   127dc:	beq	11ce0 <sfbpf_lex+0x878>
   127e0:	cmp	r1, #2
   127e4:	beq	12334 <sfbpf_lex+0xecc>
   127e8:	ldr	r6, [sp, #24]
   127ec:	ldr	r2, [sp, #36]	; 0x24
   127f0:	ldr	r9, [sp, #28]
   127f4:	add	fp, r3, r2
   127f8:	str	fp, [ip, #4]
   127fc:	bl	10dd0 <yy_get_previous_state>
   12800:	ldr	r3, [sp, #4]
   12804:	mov	r8, r0
   12808:	ldr	r3, [r3]
   1280c:	str	r3, [sp, #8]
   12810:	ldr	r2, [pc, #-796]	; 124fc <sfbpf_lex+0x1094>
   12814:	lsl	r1, r8, #1
   12818:	ldr	r3, [pc, #-800]	; 12500 <sfbpf_lex+0x1098>
   1281c:	ldrb	r7, [fp]
   12820:	add	r2, pc, r2
   12824:	add	r2, r2, #256	; 0x100
   12828:	add	r3, pc, r3
   1282c:	ldrsh	r5, [r2, r1]
   12830:	sub	r3, r3, #1216	; 0x4c0
   12834:	ldrsh	r4, [r3, r1]
   12838:	b	11518 <sfbpf_lex+0xb0>
   1283c:	mov	r4, r8
   12840:	strb	r0, [ip]
   12844:	ldr	r5, [sp, #8]
   12848:	b	12714 <sfbpf_lex+0x12ac>
   1284c:	add	r8, r6, r8, asr #1
   12850:	mov	r1, r8
   12854:	bl	d90 <realloc@plt>
   12858:	str	r0, [r4, #4]
   1285c:	ldr	r3, [r7]
   12860:	ldr	r2, [r3, #4]
   12864:	cmp	r2, #0
   12868:	beq	128ac <sfbpf_lex+0x1444>
   1286c:	sub	r8, r8, #2
   12870:	str	r8, [r3, #12]
   12874:	ldr	r3, [r7]
   12878:	ldr	r0, [r3, #4]
   1287c:	b	127a0 <sfbpf_lex+0x1338>
   12880:	ldr	r4, [pc, #-900]	; 12504 <sfbpf_lex+0x109c>
   12884:	mov	r3, #1
   12888:	str	r3, [sp, #8]
   1288c:	add	r4, pc, r4
   12890:	ldr	r0, [r4, #36]	; 0x24
   12894:	bl	11380 <sfbpf_restart>
   12898:	ldr	r7, [r4, #16]
   1289c:	ldr	r3, [r4, #24]
   128a0:	ldr	r8, [r4, #32]
   128a4:	add	r7, r7, r3, lsl #2
   128a8:	b	12788 <sfbpf_lex+0x1320>
   128ac:	ldr	r0, [pc, #-940]	; 12508 <sfbpf_lex+0x10a0>
   128b0:	add	r0, pc, r0
   128b4:	bl	10f4c <yy_fatal_error>
   128b8:	ldr	r0, [r7, #36]	; 0x24
   128bc:	ldr	r5, [sp, #8]
   128c0:	bl	d60 <ferror@plt>
   128c4:	cmp	r0, #0
   128c8:	bne	129a4 <sfbpf_lex+0x153c>
   128cc:	str	r8, [r7, #32]
   128d0:	cmp	r8, #0
   128d4:	ldr	r3, [r7, #16]
   128d8:	ldr	r7, [r7, #24]
   128dc:	ldr	r2, [r3, r7, lsl #2]
   128e0:	add	r7, r3, r7, lsl #2
   128e4:	str	r8, [r2, #16]
   128e8:	bne	12738 <sfbpf_lex+0x12d0>
   128ec:	b	12758 <sfbpf_lex+0x12f0>
   128f0:	ldr	r7, [pc, #-1004]	; 1250c <sfbpf_lex+0x10a4>
   128f4:	str	r3, [sp, #44]	; 0x2c
   128f8:	bl	e14 <__errno_location@plt>
   128fc:	ldr	r2, [sp, #8]
   12900:	mov	r3, r0
   12904:	mov	r0, r8
   12908:	mov	r8, r5
   1290c:	mov	r5, r4
   12910:	add	r7, pc, r7
   12914:	str	r3, [sp, #40]	; 0x28
   12918:	str	r2, [r3]
   1291c:	ldr	r3, [sp, #44]	; 0x2c
   12920:	b	12958 <sfbpf_lex+0x14f0>
   12924:	ldr	r0, [r7, #36]	; 0x24
   12928:	bl	d60 <ferror@plt>
   1292c:	cmp	r0, #0
   12930:	beq	129b0 <sfbpf_lex+0x1548>
   12934:	ldr	r3, [sp, #40]	; 0x28
   12938:	ldr	r2, [r3]
   1293c:	cmp	r2, #4
   12940:	bne	129a4 <sfbpf_lex+0x153c>
   12944:	str	r4, [r3]
   12948:	ldr	r0, [r7, #36]	; 0x24
   1294c:	bl	e68 <clearerr@plt>
   12950:	ldr	r0, [r7, #16]
   12954:	ldr	r3, [r7, #24]
   12958:	mov	r2, r5
   1295c:	mov	r1, #1
   12960:	ldr	r0, [r0, r3, lsl #2]
   12964:	ldr	r3, [r7, #36]	; 0x24
   12968:	ldr	r0, [r0, #4]
   1296c:	add	r0, r0, r6
   12970:	bl	da8 <fread@plt>
   12974:	cmp	r0, #0
   12978:	mov	r4, r0
   1297c:	str	r0, [r7, #32]
   12980:	beq	12924 <sfbpf_lex+0x14bc>
   12984:	ldr	r3, [r7, #16]
   12988:	mov	r5, r8
   1298c:	mov	r8, r0
   12990:	ldr	r7, [r7, #24]
   12994:	ldr	r2, [r3, r7, lsl #2]
   12998:	add	r7, r3, r7, lsl #2
   1299c:	str	r0, [r2, #16]
   129a0:	b	12788 <sfbpf_lex+0x1320>
   129a4:	ldr	r0, [pc, #-1180]	; 12510 <sfbpf_lex+0x10a8>
   129a8:	add	r0, pc, r0
   129ac:	bl	10f4c <yy_fatal_error>
   129b0:	ldr	r3, [r7, #16]
   129b4:	mov	r5, r8
   129b8:	ldr	r2, [r7, #24]
   129bc:	ldr	r3, [r3, r2, lsl #2]
   129c0:	str	r0, [r3, #16]
   129c4:	b	12758 <sfbpf_lex+0x12f0>
   129c8:	ldr	r0, [pc, #-1212]	; 12514 <sfbpf_lex+0x10ac>
   129cc:	add	r0, pc, r0
   129d0:	bl	10f4c <yy_fatal_error>

000129d4 <sfbpf_push_buffer_state>:
   129d4:	strd	r4, [sp, #-24]!	; 0xffffffe8
   129d8:	subs	r4, r0, #0
   129dc:	ldr	r5, [pc, #216]	; 12abc <sfbpf_push_buffer_state+0xe8>
   129e0:	strd	r6, [sp, #8]
   129e4:	str	r8, [sp, #16]
   129e8:	str	lr, [sp, #20]
   129ec:	add	r5, pc, r5
   129f0:	beq	12a9c <sfbpf_push_buffer_state+0xc8>
   129f4:	bl	10f8c <sfbpf_ensure_buffer_stack>
   129f8:	ldr	r1, [pc, #192]	; 12ac0 <sfbpf_push_buffer_state+0xec>
   129fc:	add	r1, pc, r1
   12a00:	ldr	r3, [r1, #16]
   12a04:	cmp	r3, #0
   12a08:	beq	12ab0 <sfbpf_push_buffer_state+0xdc>
   12a0c:	ldr	r2, [r1, #24]
   12a10:	ldr	lr, [r3, r2, lsl #2]
   12a14:	lsl	r0, r2, #2
   12a18:	add	ip, r3, r0
   12a1c:	cmp	lr, #0
   12a20:	beq	12a60 <sfbpf_push_buffer_state+0x8c>
   12a24:	ldrb	r7, [r1, #28]
   12a28:	ldr	lr, [r1, #4]
   12a2c:	ldr	r6, [r1, #32]
   12a30:	strb	r7, [lr]
   12a34:	ldr	r7, [r3, r2, lsl #2]
   12a38:	str	lr, [r7, #8]
   12a3c:	ldr	lr, [r3, r2, lsl #2]
   12a40:	str	r6, [lr, #16]
   12a44:	ldr	lr, [r3, r2, lsl #2]
   12a48:	cmp	lr, #0
   12a4c:	beq	12a60 <sfbpf_push_buffer_state+0x8c>
   12a50:	add	r0, r0, #4
   12a54:	add	r2, r2, #1
   12a58:	add	ip, r3, r0
   12a5c:	str	r2, [r1, #24]
   12a60:	ldr	r3, [pc, #92]	; 12ac4 <sfbpf_push_buffer_state+0xf0>
   12a64:	str	r4, [ip]
   12a68:	ldr	r1, [pc, #88]	; 12ac8 <sfbpf_push_buffer_state+0xf4>
   12a6c:	ldr	r2, [r4, #8]
   12a70:	add	r3, pc, r3
   12a74:	ldr	r0, [r4, #16]
   12a78:	str	r2, [r3, #4]
   12a7c:	str	r0, [r3, #32]
   12a80:	ldr	r1, [r5, r1]
   12a84:	str	r2, [r1]
   12a88:	ldr	r1, [ip]
   12a8c:	ldr	r1, [r1]
   12a90:	str	r1, [r3, #36]	; 0x24
   12a94:	ldrb	r2, [r2]
   12a98:	strb	r2, [r3, #28]
   12a9c:	ldrd	r4, [sp]
   12aa0:	ldrd	r6, [sp, #8]
   12aa4:	ldr	r8, [sp, #16]
   12aa8:	add	sp, sp, #20
   12aac:	pop	{pc}		; (ldr pc, [sp], #4)
   12ab0:	ldr	r0, [r1, #24]
   12ab4:	lsl	ip, r0, #2
   12ab8:	b	12a60 <sfbpf_push_buffer_state+0x8c>
   12abc:	.word	0x0001e60c
   12ac0:	.word	0x0001f138
   12ac4:	.word	0x0001f0c4
   12ac8:	.word	0x000000d8

00012acc <sfbpf_pop_buffer_state>:
   12acc:	strd	r4, [sp, #-24]!	; 0xffffffe8
   12ad0:	ldr	r4, [pc, #156]	; 12b74 <sfbpf_pop_buffer_state+0xa8>
   12ad4:	strd	r6, [sp, #8]
   12ad8:	str	r8, [sp, #16]
   12adc:	str	lr, [sp, #20]
   12ae0:	ldr	r7, [pc, #144]	; 12b78 <sfbpf_pop_buffer_state+0xac>
   12ae4:	add	r4, pc, r4
   12ae8:	ldr	r6, [r4, #16]
   12aec:	add	r7, pc, r7
   12af0:	cmp	r6, #0
   12af4:	beq	12b60 <sfbpf_pop_buffer_state+0x94>
   12af8:	ldr	r5, [r4, #24]
   12afc:	ldr	r0, [r6, r5, lsl #2]
   12b00:	cmp	r0, #0
   12b04:	beq	12b60 <sfbpf_pop_buffer_state+0x94>
   12b08:	bl	11138 <sfbpf__delete_buffer>
   12b0c:	mov	r3, #0
   12b10:	cmp	r5, r3
   12b14:	str	r3, [r6, r5, lsl #2]
   12b18:	beq	12b60 <sfbpf_pop_buffer_state+0x94>
   12b1c:	sub	r5, r5, #1
   12b20:	ldr	r3, [r6, r5, lsl #2]
   12b24:	str	r5, [r4, #24]
   12b28:	cmp	r3, #0
   12b2c:	beq	12b60 <sfbpf_pop_buffer_state+0x94>
   12b30:	ldr	r2, [pc, #68]	; 12b7c <sfbpf_pop_buffer_state+0xb0>
   12b34:	ldr	r1, [r3, #16]
   12b38:	ldr	r3, [r3, #8]
   12b3c:	str	r3, [r4, #4]
   12b40:	str	r1, [r4, #32]
   12b44:	ldr	r2, [r7, r2]
   12b48:	str	r3, [r2]
   12b4c:	ldr	r2, [r6, r5, lsl #2]
   12b50:	ldr	r2, [r2]
   12b54:	str	r2, [r4, #36]	; 0x24
   12b58:	ldrb	r3, [r3]
   12b5c:	strb	r3, [r4, #28]
   12b60:	ldrd	r4, [sp]
   12b64:	ldrd	r6, [sp, #8]
   12b68:	ldr	r8, [sp, #16]
   12b6c:	add	sp, sp, #20
   12b70:	pop	{pc}		; (ldr pc, [sp], #4)
   12b74:	.word	0x0001f050
   12b78:	.word	0x0001e50c
   12b7c:	.word	0x000000d8

00012b80 <sfbpf__scan_buffer>:
   12b80:	cmp	r1, #1
   12b84:	strd	r4, [sp, #-24]!	; 0xffffffe8
   12b88:	strd	r6, [sp, #8]
   12b8c:	str	r8, [sp, #16]
   12b90:	str	lr, [sp, #20]
   12b94:	bls	12c14 <sfbpf__scan_buffer+0x94>
   12b98:	sub	r7, r1, #2
   12b9c:	ldrb	r4, [r0, r7]
   12ba0:	cmp	r4, #0
   12ba4:	bne	12c14 <sfbpf__scan_buffer+0x94>
   12ba8:	add	r1, r0, r1
   12bac:	ldrb	r6, [r1, #-1]
   12bb0:	cmp	r6, #0
   12bb4:	bne	12bfc <sfbpf__scan_buffer+0x7c>
   12bb8:	mov	r5, r0
   12bbc:	mov	r0, #48	; 0x30
   12bc0:	bl	dc0 <malloc@plt>
   12bc4:	subs	r4, r0, #0
   12bc8:	beq	12c1c <sfbpf__scan_buffer+0x9c>
   12bcc:	mov	r3, #1
   12bd0:	str	r6, [r4]
   12bd4:	str	r5, [r4, #4]
   12bd8:	str	r5, [r4, #8]
   12bdc:	str	r7, [r4, #12]
   12be0:	str	r7, [r4, #16]
   12be4:	str	r6, [r4, #20]
   12be8:	str	r6, [r4, #24]
   12bec:	str	r3, [r4, #28]
   12bf0:	str	r6, [r4, #40]	; 0x28
   12bf4:	str	r6, [r4, #44]	; 0x2c
   12bf8:	bl	1105c <sfbpf__switch_to_buffer>
   12bfc:	mov	r0, r4
   12c00:	ldrd	r4, [sp]
   12c04:	ldrd	r6, [sp, #8]
   12c08:	ldr	r8, [sp, #16]
   12c0c:	add	sp, sp, #20
   12c10:	pop	{pc}		; (ldr pc, [sp], #4)
   12c14:	mov	r4, #0
   12c18:	b	12bfc <sfbpf__scan_buffer+0x7c>
   12c1c:	ldr	r0, [pc, #4]	; 12c28 <sfbpf__scan_buffer+0xa8>
   12c20:	add	r0, pc, r0
   12c24:	bl	10f4c <yy_fatal_error>
   12c28:	.word	0x0000d2d8

00012c2c <sfbpf__scan_bytes>:
   12c2c:	strd	r4, [sp, #-16]!
   12c30:	mov	r4, r0
   12c34:	mov	r5, r1
   12c38:	str	r6, [sp, #8]
   12c3c:	add	r6, r1, #2
   12c40:	mov	r0, r6
   12c44:	str	lr, [sp, #12]
   12c48:	bl	dc0 <malloc@plt>
   12c4c:	subs	lr, r0, #0
   12c50:	beq	12cb4 <sfbpf__scan_bytes+0x88>
   12c54:	cmp	r5, #0
   12c58:	subgt	r0, r4, #1
   12c5c:	subgt	r3, lr, #1
   12c60:	addgt	ip, r0, r5
   12c64:	ble	12c78 <sfbpf__scan_bytes+0x4c>
   12c68:	ldrb	r2, [r0, #1]!
   12c6c:	cmp	r0, ip
   12c70:	strb	r2, [r3, #1]!
   12c74:	bne	12c68 <sfbpf__scan_bytes+0x3c>
   12c78:	mov	r3, #0
   12c7c:	add	r2, lr, r5
   12c80:	mov	r1, r6
   12c84:	mov	r0, lr
   12c88:	strb	r3, [r2, #1]
   12c8c:	strb	r3, [lr, r5]
   12c90:	bl	12b80 <sfbpf__scan_buffer>
   12c94:	subs	r3, r0, #0
   12c98:	beq	12cc0 <sfbpf__scan_bytes+0x94>
   12c9c:	mov	r2, #1
   12ca0:	str	r2, [r3, #20]
   12ca4:	ldrd	r4, [sp]
   12ca8:	ldr	r6, [sp, #8]
   12cac:	add	sp, sp, #12
   12cb0:	pop	{pc}		; (ldr pc, [sp], #4)
   12cb4:	ldr	r0, [pc, #16]	; 12ccc <sfbpf__scan_bytes+0xa0>
   12cb8:	add	r0, pc, r0
   12cbc:	bl	10f4c <yy_fatal_error>
   12cc0:	ldr	r0, [pc, #8]	; 12cd0 <sfbpf__scan_bytes+0xa4>
   12cc4:	add	r0, pc, r0
   12cc8:	bl	10f4c <yy_fatal_error>
   12ccc:	.word	0x0000d26c
   12cd0:	.word	0x0000d28c

00012cd4 <sfbpf__scan_string>:
   12cd4:	str	r4, [sp, #-8]!
   12cd8:	mov	r4, r0
   12cdc:	str	lr, [sp, #4]
   12ce0:	bl	df0 <strlen@plt>
   12ce4:	mov	r1, r0
   12ce8:	mov	r0, r4
   12cec:	ldr	r4, [sp]
   12cf0:	ldr	lr, [sp, #4]
   12cf4:	add	sp, sp, #8
   12cf8:	b	12c2c <sfbpf__scan_bytes>

00012cfc <sfbpf_get_debug>:
   12cfc:	ldr	r3, [pc, #8]	; 12d0c <sfbpf_get_debug+0x10>
   12d00:	add	r3, pc, r3
   12d04:	ldr	r0, [r3, #48]	; 0x30
   12d08:	bx	lr
   12d0c:	.word	0x0001ee34

00012d10 <sfbpf_set_debug>:
   12d10:	ldr	r3, [pc, #8]	; 12d20 <sfbpf_set_debug+0x10>
   12d14:	add	r3, pc, r3
   12d18:	str	r0, [r3, #48]	; 0x30
   12d1c:	bx	lr
   12d20:	.word	0x0001ee20

00012d24 <sfbpf_lex_destroy>:
   12d24:	strd	r4, [sp, #-24]!	; 0xffffffe8
   12d28:	strd	r6, [sp, #8]
   12d2c:	ldr	r6, [pc, #152]	; 12dcc <sfbpf_lex_destroy+0xa8>
   12d30:	str	r8, [sp, #16]
   12d34:	str	lr, [sp, #20]
   12d38:	add	r6, pc, r6
   12d3c:	ldr	r5, [r6, #16]
   12d40:	cmp	r5, #0
   12d44:	beq	12d80 <sfbpf_lex_destroy+0x5c>
   12d48:	ldr	r3, [r6, #24]
   12d4c:	ldr	r0, [r5, r3, lsl #2]
   12d50:	add	r4, r5, r3, lsl #2
   12d54:	cmp	r0, #0
   12d58:	beq	12d80 <sfbpf_lex_destroy+0x5c>
   12d5c:	mov	r7, #0
   12d60:	bl	11138 <sfbpf__delete_buffer>
   12d64:	str	r7, [r4]
   12d68:	bl	12acc <sfbpf_pop_buffer_state>
   12d6c:	ldr	r3, [r6, #24]
   12d70:	ldr	r0, [r5, r3, lsl #2]
   12d74:	add	r4, r5, r3, lsl #2
   12d78:	cmp	r0, #0
   12d7c:	bne	12d60 <sfbpf_lex_destroy+0x3c>
   12d80:	mov	r0, r5
   12d84:	bl	d48 <free@plt>
   12d88:	ldr	r3, [pc, #64]	; 12dd0 <sfbpf_lex_destroy+0xac>
   12d8c:	mov	r2, #0
   12d90:	mov	r0, r2
   12d94:	add	r3, pc, r3
   12d98:	str	r2, [r3]
   12d9c:	str	r2, [r3, #4]
   12da0:	str	r2, [r3, #16]
   12da4:	str	r2, [r3, #20]
   12da8:	str	r2, [r3, #24]
   12dac:	str	r2, [r3, #36]	; 0x24
   12db0:	str	r2, [r3, #40]	; 0x28
   12db4:	str	r2, [r3, #44]	; 0x2c
   12db8:	ldrd	r4, [sp]
   12dbc:	ldrd	r6, [sp, #8]
   12dc0:	ldr	r8, [sp, #16]
   12dc4:	add	sp, sp, #20
   12dc8:	pop	{pc}		; (ldr pc, [sp], #4)
   12dcc:	.word	0x0001edfc
   12dd0:	.word	0x0001eda0

00012dd4 <sfbpf_alloc>:
   12dd4:	b	dc0 <malloc@plt>

00012dd8 <sfbpf_realloc>:
   12dd8:	b	d90 <realloc@plt>

00012ddc <sfbpf_free>:
   12ddc:	b	d48 <free@plt>

00012de0 <sf_lex_init>:
   12de0:	str	r4, [sp, #-8]!
   12de4:	mov	r4, r0
   12de8:	str	lr, [sp, #4]
   12dec:	bl	df0 <strlen@plt>
   12df0:	mov	r1, r0
   12df4:	mov	r0, r4
   12df8:	bl	12c2c <sfbpf__scan_bytes>
   12dfc:	ldr	r3, [pc, #16]	; 12e14 <sf_lex_init+0x34>
   12e00:	add	r3, pc, r3
   12e04:	str	r0, [r3, #52]	; 0x34
   12e08:	ldr	r4, [sp]
   12e0c:	add	sp, sp, #4
   12e10:	pop	{pc}		; (ldr pc, [sp], #4)
   12e14:	.word	0x0001ed34

00012e18 <sf_lex_cleanup>:
   12e18:	ldr	r3, [pc, #52]	; 12e54 <sf_lex_cleanup+0x3c>
   12e1c:	str	r4, [sp, #-8]!
   12e20:	str	lr, [sp, #4]
   12e24:	add	r3, pc, r3
   12e28:	ldr	r0, [r3, #52]	; 0x34
   12e2c:	cmp	r0, #0
   12e30:	beq	12e38 <sf_lex_cleanup+0x20>
   12e34:	bl	11138 <sfbpf__delete_buffer>
   12e38:	ldr	r3, [pc, #24]	; 12e58 <sf_lex_cleanup+0x40>
   12e3c:	mov	r2, #0
   12e40:	add	r3, pc, r3
   12e44:	str	r2, [r3, #52]	; 0x34
   12e48:	ldr	r4, [sp]
   12e4c:	add	sp, sp, #4
   12e50:	pop	{pc}		; (ldr pc, [sp], #4)
   12e54:	.word	0x0001ed10
   12e58:	.word	0x0001ecf4

00012e5c <sfbpf_wrap>:
   12e5c:	mov	r0, #1
   12e60:	bx	lr

Disassembly of section .fini:

00012e64 <_fini>:
   12e64:	push	{r3, lr}
   12e68:	pop	{r3, pc}
