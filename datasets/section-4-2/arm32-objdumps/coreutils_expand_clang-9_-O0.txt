
../repos/coreutils/src/expand:     file format elf32-littlearm


Disassembly of section .init:

00010da0 <.init>:
   10da0:	push	{r3, lr}
   10da4:	bl	11054 <__assert_fail@plt+0x48>
   10da8:	pop	{r3, pc}

Disassembly of section .plt:

00010dac <calloc@plt-0x14>:
   10dac:	push	{lr}		; (str lr, [sp, #-4]!)
   10db0:	ldr	lr, [pc, #4]	; 10dbc <calloc@plt-0x4>
   10db4:	add	lr, pc, lr
   10db8:	ldr	pc, [lr, #8]!
   10dbc:	andeq	ip, r1, r4, asr #4

00010dc0 <calloc@plt>:
   10dc0:	add	ip, pc, #0, 12
   10dc4:	add	ip, ip, #28, 20	; 0x1c000
   10dc8:	ldr	pc, [ip, #580]!	; 0x244

00010dcc <fputs_unlocked@plt>:
   10dcc:	add	ip, pc, #0, 12
   10dd0:	add	ip, ip, #28, 20	; 0x1c000
   10dd4:	ldr	pc, [ip, #572]!	; 0x23c

00010dd8 <raise@plt>:
   10dd8:	add	ip, pc, #0, 12
   10ddc:	add	ip, ip, #28, 20	; 0x1c000
   10de0:	ldr	pc, [ip, #564]!	; 0x234

00010de4 <strcmp@plt>:
   10de4:	add	ip, pc, #0, 12
   10de8:	add	ip, ip, #28, 20	; 0x1c000
   10dec:	ldr	pc, [ip, #556]!	; 0x22c

00010df0 <posix_fadvise64@plt>:
   10df0:	add	ip, pc, #0, 12
   10df4:	add	ip, ip, #28, 20	; 0x1c000
   10df8:	ldr	pc, [ip, #548]!	; 0x224

00010dfc <printf@plt>:
   10dfc:	add	ip, pc, #0, 12
   10e00:	add	ip, ip, #28, 20	; 0x1c000
   10e04:	ldr	pc, [ip, #540]!	; 0x21c

00010e08 <fflush@plt>:
   10e08:	add	ip, pc, #0, 12
   10e0c:	add	ip, ip, #28, 20	; 0x1c000
   10e10:	ldr	pc, [ip, #532]!	; 0x214

00010e14 <free@plt>:
   10e14:	add	ip, pc, #0, 12
   10e18:	add	ip, ip, #28, 20	; 0x1c000
   10e1c:	ldr	pc, [ip, #524]!	; 0x20c

00010e20 <_exit@plt>:
   10e20:	add	ip, pc, #0, 12
   10e24:	add	ip, ip, #28, 20	; 0x1c000
   10e28:	ldr	pc, [ip, #516]!	; 0x204

00010e2c <memcpy@plt>:
   10e2c:	add	ip, pc, #0, 12
   10e30:	add	ip, ip, #28, 20	; 0x1c000
   10e34:	ldr	pc, [ip, #508]!	; 0x1fc

00010e38 <mbsinit@plt>:
   10e38:	add	ip, pc, #0, 12
   10e3c:	add	ip, ip, #28, 20	; 0x1c000
   10e40:	ldr	pc, [ip, #500]!	; 0x1f4

00010e44 <memcmp@plt>:
   10e44:	add	ip, pc, #0, 12
   10e48:	add	ip, ip, #28, 20	; 0x1c000
   10e4c:	ldr	pc, [ip, #492]!	; 0x1ec

00010e50 <getc_unlocked@plt>:
   10e50:	add	ip, pc, #0, 12
   10e54:	add	ip, ip, #28, 20	; 0x1c000
   10e58:	ldr	pc, [ip, #484]!	; 0x1e4

00010e5c <realloc@plt>:
   10e5c:	add	ip, pc, #0, 12
   10e60:	add	ip, ip, #28, 20	; 0x1c000
   10e64:	ldr	pc, [ip, #476]!	; 0x1dc

00010e68 <textdomain@plt>:
   10e68:	add	ip, pc, #0, 12
   10e6c:	add	ip, ip, #28, 20	; 0x1c000
   10e70:	ldr	pc, [ip, #468]!	; 0x1d4

00010e74 <iswprint@plt>:
   10e74:	add	ip, pc, #0, 12
   10e78:	add	ip, ip, #28, 20	; 0x1c000
   10e7c:	ldr	pc, [ip, #460]!	; 0x1cc

00010e80 <lseek64@plt>:
   10e80:	add	ip, pc, #0, 12
   10e84:	add	ip, ip, #28, 20	; 0x1c000
   10e88:	ldr	pc, [ip, #452]!	; 0x1c4

00010e8c <__ctype_get_mb_cur_max@plt>:
   10e8c:	add	ip, pc, #0, 12
   10e90:	add	ip, ip, #28, 20	; 0x1c000
   10e94:	ldr	pc, [ip, #444]!	; 0x1bc

00010e98 <__fpending@plt>:
   10e98:	add	ip, pc, #0, 12
   10e9c:	add	ip, ip, #28, 20	; 0x1c000
   10ea0:	ldr	pc, [ip, #436]!	; 0x1b4

00010ea4 <ferror_unlocked@plt>:
   10ea4:	add	ip, pc, #0, 12
   10ea8:	add	ip, ip, #28, 20	; 0x1c000
   10eac:	ldr	pc, [ip, #428]!	; 0x1ac

00010eb0 <mbrtowc@plt>:
   10eb0:	add	ip, pc, #0, 12
   10eb4:	add	ip, ip, #28, 20	; 0x1c000
   10eb8:	ldr	pc, [ip, #420]!	; 0x1a4

00010ebc <error@plt>:
   10ebc:	add	ip, pc, #0, 12
   10ec0:	add	ip, ip, #28, 20	; 0x1c000
   10ec4:	ldr	pc, [ip, #412]!	; 0x19c

00010ec8 <malloc@plt>:
   10ec8:	add	ip, pc, #0, 12
   10ecc:	add	ip, ip, #28, 20	; 0x1c000
   10ed0:	ldr	pc, [ip, #404]!	; 0x194

00010ed4 <__libc_start_main@plt>:
   10ed4:	add	ip, pc, #0, 12
   10ed8:	add	ip, ip, #28, 20	; 0x1c000
   10edc:	ldr	pc, [ip, #396]!	; 0x18c

00010ee0 <__freading@plt>:
   10ee0:	add	ip, pc, #0, 12
   10ee4:	add	ip, ip, #28, 20	; 0x1c000
   10ee8:	ldr	pc, [ip, #388]!	; 0x184

00010eec <__gmon_start__@plt>:
   10eec:	add	ip, pc, #0, 12
   10ef0:	add	ip, ip, #28, 20	; 0x1c000
   10ef4:	ldr	pc, [ip, #380]!	; 0x17c

00010ef8 <getopt_long@plt>:
   10ef8:	add	ip, pc, #0, 12
   10efc:	add	ip, ip, #28, 20	; 0x1c000
   10f00:	ldr	pc, [ip, #372]!	; 0x174

00010f04 <__ctype_b_loc@plt>:
   10f04:	add	ip, pc, #0, 12
   10f08:	add	ip, ip, #28, 20	; 0x1c000
   10f0c:	ldr	pc, [ip, #364]!	; 0x16c

00010f10 <exit@plt>:
   10f10:	add	ip, pc, #0, 12
   10f14:	add	ip, ip, #28, 20	; 0x1c000
   10f18:	ldr	pc, [ip, #356]!	; 0x164

00010f1c <gettext@plt>:
   10f1c:	add	ip, pc, #0, 12
   10f20:	add	ip, ip, #28, 20	; 0x1c000
   10f24:	ldr	pc, [ip, #348]!	; 0x15c

00010f28 <strlen@plt>:
   10f28:	add	ip, pc, #0, 12
   10f2c:	add	ip, ip, #28, 20	; 0x1c000
   10f30:	ldr	pc, [ip, #340]!	; 0x154

00010f34 <fprintf@plt>:
   10f34:	add	ip, pc, #0, 12
   10f38:	add	ip, ip, #28, 20	; 0x1c000
   10f3c:	ldr	pc, [ip, #332]!	; 0x14c

00010f40 <__errno_location@plt>:
   10f40:	add	ip, pc, #0, 12
   10f44:	add	ip, ip, #28, 20	; 0x1c000
   10f48:	ldr	pc, [ip, #324]!	; 0x144

00010f4c <__cxa_atexit@plt>:
   10f4c:	add	ip, pc, #0, 12
   10f50:	add	ip, ip, #28, 20	; 0x1c000
   10f54:	ldr	pc, [ip, #316]!	; 0x13c

00010f58 <memset@plt>:
   10f58:	add	ip, pc, #0, 12
   10f5c:	add	ip, ip, #28, 20	; 0x1c000
   10f60:	ldr	pc, [ip, #308]!	; 0x134

00010f64 <fileno@plt>:
   10f64:	add	ip, pc, #0, 12
   10f68:	add	ip, ip, #28, 20	; 0x1c000
   10f6c:	ldr	pc, [ip, #300]!	; 0x12c

00010f70 <fclose@plt>:
   10f70:	add	ip, pc, #0, 12
   10f74:	add	ip, ip, #28, 20	; 0x1c000
   10f78:	ldr	pc, [ip, #292]!	; 0x124

00010f7c <fseeko64@plt>:
   10f7c:	add	ip, pc, #0, 12
   10f80:	add	ip, ip, #28, 20	; 0x1c000
   10f84:	ldr	pc, [ip, #284]!	; 0x11c

00010f88 <setlocale@plt>:
   10f88:	add	ip, pc, #0, 12
   10f8c:	add	ip, ip, #28, 20	; 0x1c000
   10f90:	ldr	pc, [ip, #276]!	; 0x114

00010f94 <strrchr@plt>:
   10f94:	add	ip, pc, #0, 12
   10f98:	add	ip, ip, #28, 20	; 0x1c000
   10f9c:	ldr	pc, [ip, #268]!	; 0x10c

00010fa0 <nl_langinfo@plt>:
   10fa0:	add	ip, pc, #0, 12
   10fa4:	add	ip, ip, #28, 20	; 0x1c000
   10fa8:	ldr	pc, [ip, #260]!	; 0x104

00010fac <clearerr_unlocked@plt>:
   10fac:	add	ip, pc, #0, 12
   10fb0:	add	ip, ip, #28, 20	; 0x1c000
   10fb4:	ldr	pc, [ip, #252]!	; 0xfc

00010fb8 <fopen64@plt>:
   10fb8:	add	ip, pc, #0, 12
   10fbc:	add	ip, ip, #28, 20	; 0x1c000
   10fc0:	ldr	pc, [ip, #244]!	; 0xf4

00010fc4 <bindtextdomain@plt>:
   10fc4:	add	ip, pc, #0, 12
   10fc8:	add	ip, ip, #28, 20	; 0x1c000
   10fcc:	ldr	pc, [ip, #236]!	; 0xec

00010fd0 <fputs@plt>:
   10fd0:	add	ip, pc, #0, 12
   10fd4:	add	ip, ip, #28, 20	; 0x1c000
   10fd8:	ldr	pc, [ip, #228]!	; 0xe4

00010fdc <strncmp@plt>:
   10fdc:	add	ip, pc, #0, 12
   10fe0:	add	ip, ip, #28, 20	; 0x1c000
   10fe4:	ldr	pc, [ip, #220]!	; 0xdc

00010fe8 <abort@plt>:
   10fe8:	add	ip, pc, #0, 12
   10fec:	add	ip, ip, #28, 20	; 0x1c000
   10ff0:	ldr	pc, [ip, #212]!	; 0xd4

00010ff4 <putchar_unlocked@plt>:
   10ff4:	add	ip, pc, #0, 12
   10ff8:	add	ip, ip, #28, 20	; 0x1c000
   10ffc:	ldr	pc, [ip, #204]!	; 0xcc

00011000 <strspn@plt>:
   11000:	add	ip, pc, #0, 12
   11004:	add	ip, ip, #28, 20	; 0x1c000
   11008:	ldr	pc, [ip, #196]!	; 0xc4

0001100c <__assert_fail@plt>:
   1100c:	add	ip, pc, #0, 12
   11010:	add	ip, ip, #28, 20	; 0x1c000
   11014:	ldr	pc, [ip, #188]!	; 0xbc

Disassembly of section .text:

00011018 <.text>:
   11018:	mov	fp, #0
   1101c:	mov	lr, #0
   11020:	pop	{r1}		; (ldr r1, [sp], #4)
   11024:	mov	r2, sp
   11028:	push	{r2}		; (str r2, [sp, #-4]!)
   1102c:	push	{r0}		; (str r0, [sp, #-4]!)
   11030:	ldr	ip, [pc, #16]	; 11048 <__assert_fail@plt+0x3c>
   11034:	push	{ip}		; (str ip, [sp, #-4]!)
   11038:	ldr	r0, [pc, #12]	; 1104c <__assert_fail@plt+0x40>
   1103c:	ldr	r3, [pc, #12]	; 11050 <__assert_fail@plt+0x44>
   11040:	bl	10ed4 <__libc_start_main@plt>
   11044:	bl	10fe8 <abort@plt>
   11048:	andeq	fp, r1, r8, lsr r3
   1104c:	andeq	r1, r1, r4, lsr r4
   11050:	ldrdeq	fp, [r1], -r8
   11054:	ldr	r3, [pc, #20]	; 11070 <__assert_fail@plt+0x64>
   11058:	ldr	r2, [pc, #20]	; 11074 <__assert_fail@plt+0x68>
   1105c:	add	r3, pc, r3
   11060:	ldr	r2, [r3, r2]
   11064:	cmp	r2, #0
   11068:	bxeq	lr
   1106c:	b	10eec <__gmon_start__@plt>
   11070:	muleq	r1, ip, pc	; <UNPREDICTABLE>
   11074:	ldrdeq	r0, [r0], -r4
   11078:	ldr	r0, [pc, #24]	; 11098 <__assert_fail@plt+0x8c>
   1107c:	ldr	r3, [pc, #24]	; 1109c <__assert_fail@plt+0x90>
   11080:	cmp	r3, r0
   11084:	bxeq	lr
   11088:	ldr	r3, [pc, #16]	; 110a0 <__assert_fail@plt+0x94>
   1108c:	cmp	r3, #0
   11090:	bxeq	lr
   11094:	bx	r3
   11098:	andeq	sp, r2, r0, lsr r1
   1109c:	andeq	sp, r2, r0, lsr r1
   110a0:	andeq	r0, r0, r0
   110a4:	ldr	r0, [pc, #36]	; 110d0 <__assert_fail@plt+0xc4>
   110a8:	ldr	r1, [pc, #36]	; 110d4 <__assert_fail@plt+0xc8>
   110ac:	sub	r1, r1, r0
   110b0:	asr	r1, r1, #2
   110b4:	add	r1, r1, r1, lsr #31
   110b8:	asrs	r1, r1, #1
   110bc:	bxeq	lr
   110c0:	ldr	r3, [pc, #16]	; 110d8 <__assert_fail@plt+0xcc>
   110c4:	cmp	r3, #0
   110c8:	bxeq	lr
   110cc:	bx	r3
   110d0:	andeq	sp, r2, r0, lsr r1
   110d4:	andeq	sp, r2, r0, lsr r1
   110d8:	andeq	r0, r0, r0
   110dc:	push	{r4, lr}
   110e0:	ldr	r4, [pc, #24]	; 11100 <__assert_fail@plt+0xf4>
   110e4:	ldrb	r3, [r4]
   110e8:	cmp	r3, #0
   110ec:	popne	{r4, pc}
   110f0:	bl	11078 <__assert_fail@plt+0x6c>
   110f4:	mov	r3, #1
   110f8:	strb	r3, [r4]
   110fc:	pop	{r4, pc}
   11100:	andeq	sp, r2, r4, asr r1
   11104:	b	110a4 <__assert_fail@plt+0x98>
   11108:	push	{fp, lr}
   1110c:	mov	fp, sp
   11110:	sub	sp, sp, #32
   11114:	str	r0, [fp, #-4]
   11118:	ldr	r0, [fp, #-4]
   1111c:	cmp	r0, #0
   11120:	beq	1116c <__assert_fail@plt+0x160>
   11124:	b	11128 <__assert_fail@plt+0x11c>
   11128:	movw	r0, #53568	; 0xd140
   1112c:	movt	r0, #2
   11130:	ldr	r0, [r0]
   11134:	movw	r1, #45920	; 0xb360
   11138:	movt	r1, #1
   1113c:	str	r0, [fp, #-8]
   11140:	mov	r0, r1
   11144:	bl	10f1c <gettext@plt>
   11148:	movw	r1, #53660	; 0xd19c
   1114c:	movt	r1, #2
   11150:	ldr	r2, [r1]
   11154:	ldr	r1, [fp, #-8]
   11158:	str	r0, [fp, #-12]
   1115c:	mov	r0, r1
   11160:	ldr	r1, [fp, #-12]
   11164:	bl	10f34 <fprintf@plt>
   11168:	b	11230 <__assert_fail@plt+0x224>
   1116c:	movw	r0, #45959	; 0xb387
   11170:	movt	r0, #1
   11174:	bl	10f1c <gettext@plt>
   11178:	movw	r1, #53660	; 0xd19c
   1117c:	movt	r1, #2
   11180:	ldr	r1, [r1]
   11184:	bl	10dfc <printf@plt>
   11188:	movw	r1, #45992	; 0xb3a8
   1118c:	movt	r1, #1
   11190:	str	r0, [sp, #16]
   11194:	mov	r0, r1
   11198:	bl	10f1c <gettext@plt>
   1119c:	movw	r1, #53580	; 0xd14c
   111a0:	movt	r1, #2
   111a4:	ldr	r1, [r1]
   111a8:	bl	10dcc <fputs_unlocked@plt>
   111ac:	str	r0, [sp, #12]
   111b0:	bl	11238 <__assert_fail@plt+0x22c>
   111b4:	bl	11260 <__assert_fail@plt+0x254>
   111b8:	movw	r0, #46058	; 0xb3ea
   111bc:	movt	r0, #1
   111c0:	bl	10f1c <gettext@plt>
   111c4:	movw	r1, #53580	; 0xd14c
   111c8:	movt	r1, #2
   111cc:	ldr	r1, [r1]
   111d0:	bl	10dcc <fputs_unlocked@plt>
   111d4:	str	r0, [sp, #8]
   111d8:	bl	12bc0 <__assert_fail@plt+0x1bb4>
   111dc:	movw	r0, #46170	; 0xb45a
   111e0:	movt	r0, #1
   111e4:	bl	10f1c <gettext@plt>
   111e8:	movw	r1, #53580	; 0xd14c
   111ec:	movt	r1, #2
   111f0:	ldr	r1, [r1]
   111f4:	bl	10dcc <fputs_unlocked@plt>
   111f8:	movw	r1, #46215	; 0xb487
   111fc:	movt	r1, #1
   11200:	str	r0, [sp, #4]
   11204:	mov	r0, r1
   11208:	bl	10f1c <gettext@plt>
   1120c:	movw	r1, #53580	; 0xd14c
   11210:	movt	r1, #2
   11214:	ldr	r1, [r1]
   11218:	bl	10dcc <fputs_unlocked@plt>
   1121c:	movw	r1, #46269	; 0xb4bd
   11220:	movt	r1, #1
   11224:	str	r0, [sp]
   11228:	mov	r0, r1
   1122c:	bl	11288 <__assert_fail@plt+0x27c>
   11230:	ldr	r0, [fp, #-4]
   11234:	bl	10f10 <exit@plt>
   11238:	push	{fp, lr}
   1123c:	mov	fp, sp
   11240:	movw	r0, #46330	; 0xb4fa
   11244:	movt	r0, #1
   11248:	bl	10f1c <gettext@plt>
   1124c:	movw	r1, #53580	; 0xd14c
   11250:	movt	r1, #2
   11254:	ldr	r1, [r1]
   11258:	bl	10dcc <fputs_unlocked@plt>
   1125c:	pop	{fp, pc}
   11260:	push	{fp, lr}
   11264:	mov	fp, sp
   11268:	movw	r0, #46386	; 0xb532
   1126c:	movt	r0, #1
   11270:	bl	10f1c <gettext@plt>
   11274:	movw	r1, #53580	; 0xd14c
   11278:	movt	r1, #2
   1127c:	ldr	r1, [r1]
   11280:	bl	10dcc <fputs_unlocked@plt>
   11284:	pop	{fp, pc}
   11288:	push	{fp, lr}
   1128c:	mov	fp, sp
   11290:	sub	sp, sp, #88	; 0x58
   11294:	add	r1, sp, #28
   11298:	movw	r2, #46952	; 0xb768
   1129c:	movt	r2, #1
   112a0:	str	r0, [fp, #-4]
   112a4:	mov	r0, r1
   112a8:	str	r1, [sp, #12]
   112ac:	mov	r1, r2
   112b0:	movw	r2, #56	; 0x38
   112b4:	bl	10e2c <memcpy@plt>
   112b8:	ldr	r0, [fp, #-4]
   112bc:	str	r0, [sp, #24]
   112c0:	ldr	r0, [sp, #12]
   112c4:	str	r0, [sp, #20]
   112c8:	ldr	r0, [sp, #20]
   112cc:	ldr	r0, [r0]
   112d0:	movw	r1, #0
   112d4:	cmp	r0, r1
   112d8:	movw	r0, #0
   112dc:	str	r0, [sp, #8]
   112e0:	beq	1130c <__assert_fail@plt+0x300>
   112e4:	ldr	r0, [fp, #-4]
   112e8:	ldr	r1, [sp, #20]
   112ec:	ldr	r1, [r1]
   112f0:	bl	10de4 <strcmp@plt>
   112f4:	cmp	r0, #0
   112f8:	movw	r0, #0
   112fc:	moveq	r0, #1
   11300:	mvn	r1, #0
   11304:	eor	r0, r0, r1
   11308:	str	r0, [sp, #8]
   1130c:	ldr	r0, [sp, #8]
   11310:	tst	r0, #1
   11314:	beq	11328 <__assert_fail@plt+0x31c>
   11318:	ldr	r0, [sp, #20]
   1131c:	add	r0, r0, #8
   11320:	str	r0, [sp, #20]
   11324:	b	112c8 <__assert_fail@plt+0x2bc>
   11328:	ldr	r0, [sp, #20]
   1132c:	ldr	r0, [r0, #4]
   11330:	movw	r1, #0
   11334:	cmp	r0, r1
   11338:	beq	11348 <__assert_fail@plt+0x33c>
   1133c:	ldr	r0, [sp, #20]
   11340:	ldr	r0, [r0, #4]
   11344:	str	r0, [sp, #24]
   11348:	movw	r0, #46556	; 0xb5dc
   1134c:	movt	r0, #1
   11350:	bl	10f1c <gettext@plt>
   11354:	movw	r1, #46300	; 0xb4dc
   11358:	movt	r1, #1
   1135c:	movw	r2, #46579	; 0xb5f3
   11360:	movt	r2, #1
   11364:	bl	10dfc <printf@plt>
   11368:	movw	r1, #5
   1136c:	str	r0, [sp, #4]
   11370:	mov	r0, r1
   11374:	movw	r1, #0
   11378:	bl	10f88 <setlocale@plt>
   1137c:	str	r0, [sp, #16]
   11380:	ldr	r0, [sp, #16]
   11384:	movw	r1, #0
   11388:	cmp	r0, r1
   1138c:	beq	113c8 <__assert_fail@plt+0x3bc>
   11390:	ldr	r0, [sp, #16]
   11394:	movw	r1, #46619	; 0xb61b
   11398:	movt	r1, #1
   1139c:	movw	r2, #3
   113a0:	bl	10fdc <strncmp@plt>
   113a4:	cmp	r0, #0
   113a8:	beq	113c8 <__assert_fail@plt+0x3bc>
   113ac:	movw	r0, #46623	; 0xb61f
   113b0:	movt	r0, #1
   113b4:	bl	10f1c <gettext@plt>
   113b8:	movw	r1, #53580	; 0xd14c
   113bc:	movt	r1, #2
   113c0:	ldr	r1, [r1]
   113c4:	bl	10dcc <fputs_unlocked@plt>
   113c8:	movw	r0, #46694	; 0xb666
   113cc:	movt	r0, #1
   113d0:	bl	10f1c <gettext@plt>
   113d4:	ldr	r2, [fp, #-4]
   113d8:	movw	r1, #46579	; 0xb5f3
   113dc:	movt	r1, #1
   113e0:	bl	10dfc <printf@plt>
   113e4:	movw	r1, #46721	; 0xb681
   113e8:	movt	r1, #1
   113ec:	str	r0, [sp]
   113f0:	mov	r0, r1
   113f4:	bl	10f1c <gettext@plt>
   113f8:	ldr	r1, [sp, #24]
   113fc:	ldr	r2, [sp, #24]
   11400:	ldr	r3, [fp, #-4]
   11404:	cmp	r2, r3
   11408:	movw	r2, #0
   1140c:	moveq	r2, #1
   11410:	tst	r2, #1
   11414:	movw	r2, #46771	; 0xb6b3
   11418:	movt	r2, #1
   1141c:	movw	r3, #46489	; 0xb599
   11420:	movt	r3, #1
   11424:	movne	r2, r3
   11428:	bl	10dfc <printf@plt>
   1142c:	mov	sp, fp
   11430:	pop	{fp, pc}
   11434:	push	{fp, lr}
   11438:	mov	fp, sp
   1143c:	sub	sp, sp, #48	; 0x30
   11440:	movw	r2, #0
   11444:	str	r2, [fp, #-4]
   11448:	str	r0, [fp, #-8]
   1144c:	str	r1, [fp, #-12]
   11450:	ldr	r0, [fp, #-12]
   11454:	ldr	r0, [r0]
   11458:	bl	13118 <__assert_fail@plt+0x210c>
   1145c:	movw	r0, #6
   11460:	movw	r1, #46771	; 0xb6b3
   11464:	movt	r1, #1
   11468:	bl	10f88 <setlocale@plt>
   1146c:	movw	r1, #46304	; 0xb4e0
   11470:	movt	r1, #1
   11474:	str	r0, [sp, #24]
   11478:	mov	r0, r1
   1147c:	movw	r1, #46276	; 0xb4c4
   11480:	movt	r1, #1
   11484:	bl	10fc4 <bindtextdomain@plt>
   11488:	movw	r1, #46304	; 0xb4e0
   1148c:	movt	r1, #1
   11490:	str	r0, [sp, #20]
   11494:	mov	r0, r1
   11498:	bl	10e68 <textdomain@plt>
   1149c:	movw	r1, #11356	; 0x2c5c
   114a0:	movt	r1, #1
   114a4:	str	r0, [sp, #16]
   114a8:	mov	r0, r1
   114ac:	bl	1b33c <__assert_fail@plt+0xa330>
   114b0:	movw	r1, #53592	; 0xd158
   114b4:	movt	r1, #2
   114b8:	movw	r2, #1
   114bc:	strb	r2, [r1]
   114c0:	ldr	r0, [fp, #-8]
   114c4:	ldr	r1, [fp, #-12]
   114c8:	movw	r2, #46836	; 0xb6f4
   114cc:	movt	r2, #1
   114d0:	movw	r3, #46872	; 0xb718
   114d4:	movt	r3, #1
   114d8:	movw	ip, #0
   114dc:	str	ip, [sp]
   114e0:	bl	10ef8 <getopt_long@plt>
   114e4:	str	r0, [fp, #-16]
   114e8:	cmn	r0, #1
   114ec:	beq	117c8 <__assert_fail@plt+0x7bc>
   114f0:	ldr	r0, [fp, #-16]
   114f4:	add	r0, r0, #3
   114f8:	cmp	r0, #119	; 0x77
   114fc:	str	r0, [sp, #12]
   11500:	bhi	117bc <__assert_fail@plt+0x7b0>
   11504:	add	r0, pc, #8
   11508:	ldr	r1, [sp, #12]
   1150c:	ldr	r0, [r0, r1, lsl #2]
   11510:	mov	pc, r0
   11514:	andeq	r1, r1, r4, ror r7
   11518:	andeq	r1, r1, ip, ror #14
   1151c:			; <UNDEFINED> instruction: 0x000117bc
   11520:			; <UNDEFINED> instruction: 0x000117bc
   11524:			; <UNDEFINED> instruction: 0x000117bc
   11528:			; <UNDEFINED> instruction: 0x000117bc
   1152c:			; <UNDEFINED> instruction: 0x000117bc
   11530:			; <UNDEFINED> instruction: 0x000117bc
   11534:			; <UNDEFINED> instruction: 0x000117bc
   11538:			; <UNDEFINED> instruction: 0x000117bc
   1153c:			; <UNDEFINED> instruction: 0x000117bc
   11540:			; <UNDEFINED> instruction: 0x000117bc
   11544:			; <UNDEFINED> instruction: 0x000117bc
   11548:			; <UNDEFINED> instruction: 0x000117bc
   1154c:			; <UNDEFINED> instruction: 0x000117bc
   11550:			; <UNDEFINED> instruction: 0x000117bc
   11554:			; <UNDEFINED> instruction: 0x000117bc
   11558:			; <UNDEFINED> instruction: 0x000117bc
   1155c:			; <UNDEFINED> instruction: 0x000117bc
   11560:			; <UNDEFINED> instruction: 0x000117bc
   11564:			; <UNDEFINED> instruction: 0x000117bc
   11568:			; <UNDEFINED> instruction: 0x000117bc
   1156c:			; <UNDEFINED> instruction: 0x000117bc
   11570:			; <UNDEFINED> instruction: 0x000117bc
   11574:			; <UNDEFINED> instruction: 0x000117bc
   11578:			; <UNDEFINED> instruction: 0x000117bc
   1157c:			; <UNDEFINED> instruction: 0x000117bc
   11580:			; <UNDEFINED> instruction: 0x000117bc
   11584:			; <UNDEFINED> instruction: 0x000117bc
   11588:			; <UNDEFINED> instruction: 0x000117bc
   1158c:			; <UNDEFINED> instruction: 0x000117bc
   11590:			; <UNDEFINED> instruction: 0x000117bc
   11594:			; <UNDEFINED> instruction: 0x000117bc
   11598:			; <UNDEFINED> instruction: 0x000117bc
   1159c:			; <UNDEFINED> instruction: 0x000117bc
   115a0:			; <UNDEFINED> instruction: 0x000117bc
   115a4:			; <UNDEFINED> instruction: 0x000117bc
   115a8:			; <UNDEFINED> instruction: 0x000117bc
   115ac:			; <UNDEFINED> instruction: 0x000117bc
   115b0:			; <UNDEFINED> instruction: 0x000117bc
   115b4:			; <UNDEFINED> instruction: 0x000117bc
   115b8:			; <UNDEFINED> instruction: 0x000117bc
   115bc:			; <UNDEFINED> instruction: 0x000117bc
   115c0:			; <UNDEFINED> instruction: 0x000117bc
   115c4:			; <UNDEFINED> instruction: 0x000117bc
   115c8:			; <UNDEFINED> instruction: 0x000117bc
   115cc:			; <UNDEFINED> instruction: 0x000117bc
   115d0:			; <UNDEFINED> instruction: 0x000117bc
   115d4:			; <UNDEFINED> instruction: 0x000117bc
   115d8:			; <UNDEFINED> instruction: 0x000117bc
   115dc:			; <UNDEFINED> instruction: 0x000117bc
   115e0:	andeq	r1, r1, ip, lsl r7
   115e4:	andeq	r1, r1, ip, lsl r7
   115e8:	andeq	r1, r1, ip, lsl r7
   115ec:	andeq	r1, r1, ip, lsl r7
   115f0:	andeq	r1, r1, ip, lsl r7
   115f4:	andeq	r1, r1, ip, lsl r7
   115f8:	andeq	r1, r1, ip, lsl r7
   115fc:	andeq	r1, r1, ip, lsl r7
   11600:	andeq	r1, r1, ip, lsl r7
   11604:	andeq	r1, r1, ip, lsl r7
   11608:			; <UNDEFINED> instruction: 0x000117bc
   1160c:			; <UNDEFINED> instruction: 0x000117bc
   11610:			; <UNDEFINED> instruction: 0x000117bc
   11614:			; <UNDEFINED> instruction: 0x000117bc
   11618:			; <UNDEFINED> instruction: 0x000117bc
   1161c:			; <UNDEFINED> instruction: 0x000117bc
   11620:			; <UNDEFINED> instruction: 0x000117bc
   11624:			; <UNDEFINED> instruction: 0x000117bc
   11628:			; <UNDEFINED> instruction: 0x000117bc
   1162c:			; <UNDEFINED> instruction: 0x000117bc
   11630:			; <UNDEFINED> instruction: 0x000117bc
   11634:			; <UNDEFINED> instruction: 0x000117bc
   11638:			; <UNDEFINED> instruction: 0x000117bc
   1163c:			; <UNDEFINED> instruction: 0x000117bc
   11640:			; <UNDEFINED> instruction: 0x000117bc
   11644:			; <UNDEFINED> instruction: 0x000117bc
   11648:			; <UNDEFINED> instruction: 0x000117bc
   1164c:			; <UNDEFINED> instruction: 0x000117bc
   11650:			; <UNDEFINED> instruction: 0x000117bc
   11654:			; <UNDEFINED> instruction: 0x000117bc
   11658:			; <UNDEFINED> instruction: 0x000117bc
   1165c:			; <UNDEFINED> instruction: 0x000117bc
   11660:			; <UNDEFINED> instruction: 0x000117bc
   11664:			; <UNDEFINED> instruction: 0x000117bc
   11668:			; <UNDEFINED> instruction: 0x000117bc
   1166c:			; <UNDEFINED> instruction: 0x000117bc
   11670:			; <UNDEFINED> instruction: 0x000117bc
   11674:			; <UNDEFINED> instruction: 0x000117bc
   11678:			; <UNDEFINED> instruction: 0x000117bc
   1167c:			; <UNDEFINED> instruction: 0x000117bc
   11680:			; <UNDEFINED> instruction: 0x000117bc
   11684:			; <UNDEFINED> instruction: 0x000117bc
   11688:			; <UNDEFINED> instruction: 0x000117bc
   1168c:			; <UNDEFINED> instruction: 0x000117bc
   11690:			; <UNDEFINED> instruction: 0x000117bc
   11694:			; <UNDEFINED> instruction: 0x000117bc
   11698:			; <UNDEFINED> instruction: 0x000117bc
   1169c:			; <UNDEFINED> instruction: 0x000117bc
   116a0:			; <UNDEFINED> instruction: 0x000117bc
   116a4:			; <UNDEFINED> instruction: 0x000117bc
   116a8:			; <UNDEFINED> instruction: 0x000117bc
   116ac:			; <UNDEFINED> instruction: 0x000117bc
   116b0:			; <UNDEFINED> instruction: 0x000117bc
   116b4:			; <UNDEFINED> instruction: 0x000117bc
   116b8:			; <UNDEFINED> instruction: 0x000117bc
   116bc:			; <UNDEFINED> instruction: 0x000117bc
   116c0:			; <UNDEFINED> instruction: 0x000117bc
   116c4:	strdeq	r1, [r1], -r4
   116c8:			; <UNDEFINED> instruction: 0x000117bc
   116cc:			; <UNDEFINED> instruction: 0x000117bc
   116d0:			; <UNDEFINED> instruction: 0x000117bc
   116d4:			; <UNDEFINED> instruction: 0x000117bc
   116d8:			; <UNDEFINED> instruction: 0x000117bc
   116dc:			; <UNDEFINED> instruction: 0x000117bc
   116e0:			; <UNDEFINED> instruction: 0x000117bc
   116e4:			; <UNDEFINED> instruction: 0x000117bc
   116e8:			; <UNDEFINED> instruction: 0x000117bc
   116ec:			; <UNDEFINED> instruction: 0x000117bc
   116f0:	andeq	r1, r1, r8, lsl #14
   116f4:	movw	r0, #53592	; 0xd158
   116f8:	movt	r0, #2
   116fc:	movw	r1, #0
   11700:	strb	r1, [r0]
   11704:	b	117c4 <__assert_fail@plt+0x7b8>
   11708:	movw	r0, #53584	; 0xd150
   1170c:	movt	r0, #2
   11710:	ldr	r0, [r0]
   11714:	bl	11d58 <__assert_fail@plt+0xd4c>
   11718:	b	117c4 <__assert_fail@plt+0x7b8>
   1171c:	movw	r0, #53584	; 0xd150
   11720:	movt	r0, #2
   11724:	ldr	r0, [r0]
   11728:	movw	r1, #0
   1172c:	cmp	r0, r1
   11730:	beq	11750 <__assert_fail@plt+0x744>
   11734:	movw	r0, #53584	; 0xd150
   11738:	movt	r0, #2
   1173c:	ldr	r0, [r0]
   11740:	mvn	r1, #0
   11744:	add	r0, r0, r1
   11748:	bl	11d58 <__assert_fail@plt+0xd4c>
   1174c:	b	11768 <__assert_fail@plt+0x75c>
   11750:	sub	r0, fp, #18
   11754:	ldr	r1, [fp, #-16]
   11758:	strb	r1, [fp, #-18]	; 0xffffffee
   1175c:	movw	r1, #0
   11760:	strb	r1, [fp, #-17]	; 0xffffffef
   11764:	bl	11d58 <__assert_fail@plt+0xd4c>
   11768:	b	117c4 <__assert_fail@plt+0x7b8>
   1176c:	movw	r0, #0
   11770:	bl	11108 <__assert_fail@plt+0xfc>
   11774:	movw	r0, #53580	; 0xd14c
   11778:	movt	r0, #2
   1177c:	ldr	r0, [r0]
   11780:	movw	r1, #53480	; 0xd0e8
   11784:	movt	r1, #2
   11788:	ldr	r3, [r1]
   1178c:	movw	r1, #46269	; 0xb4bd
   11790:	movt	r1, #1
   11794:	movw	r2, #46300	; 0xb4dc
   11798:	movt	r2, #1
   1179c:	movw	ip, #46314	; 0xb4ea
   117a0:	movt	ip, #1
   117a4:	str	ip, [sp]
   117a8:	movw	ip, #0
   117ac:	str	ip, [sp, #4]
   117b0:	bl	15ff0 <__assert_fail@plt+0x4fe4>
   117b4:	movw	r0, #0
   117b8:	bl	10f10 <exit@plt>
   117bc:	movw	r0, #1
   117c0:	bl	11108 <__assert_fail@plt+0xfc>
   117c4:	b	114c0 <__assert_fail@plt+0x4b4>
   117c8:	bl	1231c <__assert_fail@plt+0x1310>
   117cc:	movw	r0, #53560	; 0xd138
   117d0:	movt	r0, #2
   117d4:	ldr	r0, [r0]
   117d8:	ldr	r1, [fp, #-8]
   117dc:	cmp	r0, r1
   117e0:	bge	11800 <__assert_fail@plt+0x7f4>
   117e4:	ldr	r0, [fp, #-12]
   117e8:	movw	r1, #53560	; 0xd138
   117ec:	movt	r1, #2
   117f0:	ldr	r1, [r1]
   117f4:	add	r0, r0, r1, lsl #2
   117f8:	str	r0, [sp, #8]
   117fc:	b	1180c <__assert_fail@plt+0x800>
   11800:	movw	r0, #0
   11804:	str	r0, [sp, #8]
   11808:	b	1180c <__assert_fail@plt+0x800>
   1180c:	ldr	r0, [sp, #8]
   11810:	bl	128cc <__assert_fail@plt+0x18c0>
   11814:	bl	11830 <__assert_fail@plt+0x824>
   11818:	bl	12b70 <__assert_fail@plt+0x1b64>
   1181c:	movw	r0, #53596	; 0xd15c
   11820:	movt	r0, #2
   11824:	ldr	r0, [r0]
   11828:	mov	sp, fp
   1182c:	pop	{fp, pc}
   11830:	push	{fp, lr}
   11834:	mov	fp, sp
   11838:	sub	sp, sp, #80	; 0x50
   1183c:	movw	r0, #0
   11840:	bl	12924 <__assert_fail@plt+0x1918>
   11844:	str	r0, [fp, #-4]
   11848:	ldr	r0, [fp, #-4]
   1184c:	movw	r1, #0
   11850:	cmp	r0, r1
   11854:	bne	1185c <__assert_fail@plt+0x850>
   11858:	b	11b84 <__assert_fail@plt+0xb78>
   1185c:	b	11860 <__assert_fail@plt+0x854>
   11860:	mov	r0, #1
   11864:	strb	r0, [fp, #-9]
   11868:	mov	r0, #0
   1186c:	str	r0, [fp, #-20]	; 0xffffffec
   11870:	str	r0, [fp, #-24]	; 0xffffffe8
   11874:	movw	r0, #0
   11878:	str	r0, [fp, #-28]	; 0xffffffe4
   1187c:	b	11880 <__assert_fail@plt+0x874>
   11880:	ldr	r0, [fp, #-4]
   11884:	bl	10e50 <getc_unlocked@plt>
   11888:	str	r0, [fp, #-8]
   1188c:	cmp	r0, #0
   11890:	movw	r0, #0
   11894:	str	r0, [sp, #32]
   11898:	bge	118bc <__assert_fail@plt+0x8b0>
   1189c:	ldr	r0, [fp, #-4]
   118a0:	bl	12924 <__assert_fail@plt+0x1918>
   118a4:	str	r0, [fp, #-4]
   118a8:	movw	r1, #0
   118ac:	cmp	r0, r1
   118b0:	movw	r0, #0
   118b4:	movne	r0, #1
   118b8:	str	r0, [sp, #32]
   118bc:	ldr	r0, [sp, #32]
   118c0:	tst	r0, #1
   118c4:	beq	118cc <__assert_fail@plt+0x8c0>
   118c8:	b	11880 <__assert_fail@plt+0x874>
   118cc:	ldrb	r0, [fp, #-9]
   118d0:	tst	r0, #1
   118d4:	beq	11b20 <__assert_fail@plt+0xb14>
   118d8:	ldr	r0, [fp, #-8]
   118dc:	cmp	r0, #9
   118e0:	bne	119ec <__assert_fail@plt+0x9e0>
   118e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   118e8:	ldr	r1, [fp, #-20]	; 0xffffffec
   118ec:	sub	r2, fp, #28
   118f0:	add	r3, sp, #39	; 0x27
   118f4:	bl	1261c <__assert_fail@plt+0x1610>
   118f8:	str	r1, [sp, #44]	; 0x2c
   118fc:	str	r0, [sp, #40]	; 0x28
   11900:	ldrb	r0, [sp, #39]	; 0x27
   11904:	tst	r0, #1
   11908:	beq	11924 <__assert_fail@plt+0x918>
   1190c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11910:	ldr	r1, [fp, #-20]	; 0xffffffec
   11914:	adds	r0, r0, #1
   11918:	adc	r1, r1, #0
   1191c:	str	r0, [sp, #40]	; 0x28
   11920:	str	r1, [sp, #44]	; 0x2c
   11924:	ldr	r0, [sp, #40]	; 0x28
   11928:	ldr	r1, [sp, #44]	; 0x2c
   1192c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   11930:	ldr	r3, [fp, #-20]	; 0xffffffec
   11934:	subs	r0, r0, r2
   11938:	sbcs	r1, r1, r3
   1193c:	bcs	11968 <__assert_fail@plt+0x95c>
   11940:	b	11944 <__assert_fail@plt+0x938>
   11944:	movw	r0, #46798	; 0xb6ce
   11948:	movt	r0, #1
   1194c:	bl	10f1c <gettext@plt>
   11950:	movw	r1, #1
   11954:	str	r0, [sp, #28]
   11958:	mov	r0, r1
   1195c:	movw	r1, #0
   11960:	ldr	r2, [sp, #28]
   11964:	bl	10ebc <error@plt>
   11968:	b	1196c <__assert_fail@plt+0x960>
   1196c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11970:	ldr	r1, [fp, #-20]	; 0xffffffec
   11974:	adds	r0, r0, #1
   11978:	adc	r1, r1, #0
   1197c:	str	r0, [fp, #-24]	; 0xffffffe8
   11980:	str	r1, [fp, #-20]	; 0xffffffec
   11984:	ldr	r2, [sp, #40]	; 0x28
   11988:	ldr	r3, [sp, #44]	; 0x2c
   1198c:	subs	r0, r0, r2
   11990:	sbcs	r1, r1, r3
   11994:	bcs	119e0 <__assert_fail@plt+0x9d4>
   11998:	b	1199c <__assert_fail@plt+0x990>
   1199c:	movw	r0, #32
   119a0:	bl	10ff4 <putchar_unlocked@plt>
   119a4:	cmp	r0, #0
   119a8:	bge	119dc <__assert_fail@plt+0x9d0>
   119ac:	bl	10f40 <__errno_location@plt>
   119b0:	ldr	r1, [r0]
   119b4:	movw	r0, #46821	; 0xb6e5
   119b8:	movt	r0, #1
   119bc:	str	r1, [sp, #24]
   119c0:	bl	10f1c <gettext@plt>
   119c4:	movw	r1, #1
   119c8:	str	r0, [sp, #20]
   119cc:	mov	r0, r1
   119d0:	ldr	r1, [sp, #24]
   119d4:	ldr	r2, [sp, #20]
   119d8:	bl	10ebc <error@plt>
   119dc:	b	1196c <__assert_fail@plt+0x960>
   119e0:	movw	r0, #32
   119e4:	str	r0, [fp, #-8]
   119e8:	b	11aa8 <__assert_fail@plt+0xa9c>
   119ec:	ldr	r0, [fp, #-8]
   119f0:	cmp	r0, #8
   119f4:	bne	11a4c <__assert_fail@plt+0xa40>
   119f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   119fc:	ldr	r1, [fp, #-20]	; 0xffffffec
   11a00:	orr	r2, r0, r1
   11a04:	cmp	r2, #0
   11a08:	movwne	r2, #1
   11a0c:	subs	r0, r0, r2
   11a10:	sbc	r1, r1, #0
   11a14:	str	r0, [fp, #-24]	; 0xffffffe8
   11a18:	str	r1, [fp, #-20]	; 0xffffffec
   11a1c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   11a20:	cmp	r0, #0
   11a24:	movw	r0, #0
   11a28:	movne	r0, #1
   11a2c:	mvn	r1, #0
   11a30:	eor	r0, r0, r1
   11a34:	eor	r0, r0, r1
   11a38:	and	r0, r0, #1
   11a3c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   11a40:	sub	r0, r1, r0
   11a44:	str	r0, [fp, #-28]	; 0xffffffe4
   11a48:	b	11aa4 <__assert_fail@plt+0xa98>
   11a4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11a50:	ldr	r1, [fp, #-20]	; 0xffffffec
   11a54:	adds	r0, r0, #1
   11a58:	adc	r1, r1, #0
   11a5c:	str	r0, [fp, #-24]	; 0xffffffe8
   11a60:	str	r1, [fp, #-20]	; 0xffffffec
   11a64:	ldr	r0, [fp, #-24]	; 0xffffffe8
   11a68:	ldr	r1, [fp, #-20]	; 0xffffffec
   11a6c:	orr	r0, r0, r1
   11a70:	cmp	r0, #0
   11a74:	bne	11aa0 <__assert_fail@plt+0xa94>
   11a78:	b	11a7c <__assert_fail@plt+0xa70>
   11a7c:	movw	r0, #46798	; 0xb6ce
   11a80:	movt	r0, #1
   11a84:	bl	10f1c <gettext@plt>
   11a88:	movw	r1, #1
   11a8c:	str	r0, [sp, #16]
   11a90:	mov	r0, r1
   11a94:	movw	r1, #0
   11a98:	ldr	r2, [sp, #16]
   11a9c:	bl	10ebc <error@plt>
   11aa0:	b	11aa4 <__assert_fail@plt+0xa98>
   11aa4:	b	11aa8 <__assert_fail@plt+0xa9c>
   11aa8:	movw	r0, #53592	; 0xd158
   11aac:	movt	r0, #2
   11ab0:	ldrb	r0, [r0]
   11ab4:	tst	r0, #1
   11ab8:	movw	r0, #1
   11abc:	str	r0, [sp, #12]
   11ac0:	bne	11af8 <__assert_fail@plt+0xaec>
   11ac4:	bl	10f04 <__ctype_b_loc@plt>
   11ac8:	ldr	r0, [r0]
   11acc:	ldr	r1, [fp, #-8]
   11ad0:	add	r0, r0, r1, lsl #1
   11ad4:	ldrh	r0, [r0]
   11ad8:	and	r0, r0, #1
   11adc:	cmp	r0, #0
   11ae0:	movw	r0, #0
   11ae4:	movne	r0, #1
   11ae8:	mvn	r1, #0
   11aec:	eor	r0, r0, r1
   11af0:	eor	r0, r0, r1
   11af4:	str	r0, [sp, #12]
   11af8:	ldr	r0, [sp, #12]
   11afc:	and	r0, r0, #1
   11b00:	ldrb	r1, [fp, #-9]
   11b04:	and	r1, r1, #1
   11b08:	and	r0, r1, r0
   11b0c:	cmp	r0, #0
   11b10:	movw	r0, #0
   11b14:	movne	r0, #1
   11b18:	and	r0, r0, #1
   11b1c:	strb	r0, [fp, #-9]
   11b20:	ldr	r0, [fp, #-8]
   11b24:	cmp	r0, #0
   11b28:	bge	11b30 <__assert_fail@plt+0xb24>
   11b2c:	b	11b84 <__assert_fail@plt+0xb78>
   11b30:	ldr	r0, [fp, #-8]
   11b34:	bl	10ff4 <putchar_unlocked@plt>
   11b38:	cmp	r0, #0
   11b3c:	bge	11b70 <__assert_fail@plt+0xb64>
   11b40:	bl	10f40 <__errno_location@plt>
   11b44:	ldr	r1, [r0]
   11b48:	movw	r0, #46821	; 0xb6e5
   11b4c:	movt	r0, #1
   11b50:	str	r1, [sp, #8]
   11b54:	bl	10f1c <gettext@plt>
   11b58:	movw	r1, #1
   11b5c:	str	r0, [sp, #4]
   11b60:	mov	r0, r1
   11b64:	ldr	r1, [sp, #8]
   11b68:	ldr	r2, [sp, #4]
   11b6c:	bl	10ebc <error@plt>
   11b70:	b	11b74 <__assert_fail@plt+0xb68>
   11b74:	ldr	r0, [fp, #-8]
   11b78:	cmp	r0, #10
   11b7c:	bne	1187c <__assert_fail@plt+0x870>
   11b80:	b	11860 <__assert_fail@plt+0x854>
   11b84:	mov	sp, fp
   11b88:	pop	{fp, pc}
   11b8c:	push	{fp, lr}
   11b90:	mov	fp, sp
   11b94:	sub	sp, sp, #48	; 0x30
   11b98:	str	r0, [fp, #-8]
   11b9c:	str	r1, [fp, #-4]
   11ba0:	movw	r0, #53600	; 0xd160
   11ba4:	movt	r0, #2
   11ba8:	ldr	r0, [r0]
   11bac:	cmp	r0, #0
   11bb0:	beq	11be4 <__assert_fail@plt+0xbd8>
   11bb4:	movw	r0, #53604	; 0xd164
   11bb8:	movt	r0, #2
   11bbc:	ldr	r0, [r0]
   11bc0:	movw	r1, #53600	; 0xd160
   11bc4:	movt	r1, #2
   11bc8:	ldr	r1, [r1]
   11bcc:	add	r0, r0, r1, lsl #3
   11bd0:	ldr	r1, [r0, #-8]
   11bd4:	ldr	r0, [r0, #-4]
   11bd8:	str	r1, [sp, #20]
   11bdc:	str	r0, [sp, #16]
   11be0:	b	11bf8 <__assert_fail@plt+0xbec>
   11be4:	mov	r0, #0
   11be8:	mov	r1, r0
   11bec:	str	r1, [sp, #20]
   11bf0:	str	r0, [sp, #16]
   11bf4:	b	11bf8 <__assert_fail@plt+0xbec>
   11bf8:	ldr	r0, [sp, #16]
   11bfc:	ldr	r1, [sp, #20]
   11c00:	str	r1, [fp, #-16]
   11c04:	str	r0, [fp, #-12]
   11c08:	ldr	r0, [fp, #-16]
   11c0c:	ldr	r1, [fp, #-12]
   11c10:	ldr	r2, [fp, #-8]
   11c14:	ldr	r3, [fp, #-4]
   11c18:	subs	r0, r2, r0
   11c1c:	sbcs	r1, r3, r1
   11c20:	bcc	11c4c <__assert_fail@plt+0xc40>
   11c24:	b	11c28 <__assert_fail@plt+0xc1c>
   11c28:	ldr	r0, [fp, #-8]
   11c2c:	ldr	r1, [fp, #-4]
   11c30:	ldr	r2, [fp, #-16]
   11c34:	ldr	r3, [fp, #-12]
   11c38:	subs	r0, r0, r2
   11c3c:	sbc	r1, r1, r3
   11c40:	str	r0, [sp, #12]
   11c44:	str	r1, [sp, #8]
   11c48:	b	11c60 <__assert_fail@plt+0xc54>
   11c4c:	mov	r0, #0
   11c50:	mov	r1, r0
   11c54:	str	r1, [sp, #12]
   11c58:	str	r0, [sp, #8]
   11c5c:	b	11c60 <__assert_fail@plt+0xc54>
   11c60:	ldr	r0, [sp, #8]
   11c64:	ldr	r1, [sp, #12]
   11c68:	str	r1, [sp, #24]
   11c6c:	str	r0, [sp, #28]
   11c70:	movw	r0, #53600	; 0xd160
   11c74:	movt	r0, #2
   11c78:	ldr	r0, [r0]
   11c7c:	movw	r1, #53608	; 0xd168
   11c80:	movt	r1, #2
   11c84:	ldr	r1, [r1]
   11c88:	cmp	r0, r1
   11c8c:	bne	11cb8 <__assert_fail@plt+0xcac>
   11c90:	movw	r0, #53604	; 0xd164
   11c94:	movt	r0, #2
   11c98:	ldr	r0, [r0]
   11c9c:	movw	r1, #53608	; 0xd168
   11ca0:	movt	r1, #2
   11ca4:	movw	r2, #8
   11ca8:	bl	16354 <__assert_fail@plt+0x5348>
   11cac:	movw	r1, #53604	; 0xd164
   11cb0:	movt	r1, #2
   11cb4:	str	r0, [r1]
   11cb8:	ldr	r0, [fp, #-8]
   11cbc:	ldr	r1, [fp, #-4]
   11cc0:	movw	r2, #53604	; 0xd164
   11cc4:	movt	r2, #2
   11cc8:	ldr	r2, [r2]
   11ccc:	movw	r3, #53600	; 0xd160
   11cd0:	movt	r3, #2
   11cd4:	ldr	ip, [r3]
   11cd8:	add	lr, ip, #1
   11cdc:	str	lr, [r3]
   11ce0:	str	r0, [r2, ip, lsl #3]!
   11ce4:	str	r1, [r2, #4]
   11ce8:	movw	r0, #53968	; 0xd2d0
   11cec:	movt	r0, #2
   11cf0:	ldr	r0, [r0]
   11cf4:	ldr	r1, [sp, #24]
   11cf8:	ldr	r2, [sp, #28]
   11cfc:	subs	r0, r0, r1
   11d00:	rscs	r1, r2, #0
   11d04:	bcs	11d50 <__assert_fail@plt+0xd44>
   11d08:	b	11d0c <__assert_fail@plt+0xd00>
   11d0c:	ldr	r0, [sp, #28]
   11d10:	cmp	r0, #0
   11d14:	beq	11d40 <__assert_fail@plt+0xd34>
   11d18:	b	11d1c <__assert_fail@plt+0xd10>
   11d1c:	movw	r0, #47008	; 0xb7a0
   11d20:	movt	r0, #1
   11d24:	bl	10f1c <gettext@plt>
   11d28:	movw	r1, #1
   11d2c:	str	r0, [sp, #4]
   11d30:	mov	r0, r1
   11d34:	movw	r1, #0
   11d38:	ldr	r2, [sp, #4]
   11d3c:	bl	10ebc <error@plt>
   11d40:	ldr	r0, [sp, #24]
   11d44:	movw	r1, #53968	; 0xd2d0
   11d48:	movt	r1, #2
   11d4c:	str	r0, [r1]
   11d50:	mov	sp, fp
   11d54:	pop	{fp, pc}
   11d58:	push	{fp, lr}
   11d5c:	mov	fp, sp
   11d60:	sub	sp, sp, #80	; 0x50
   11d64:	str	r0, [fp, #-4]
   11d68:	mov	r0, #0
   11d6c:	strb	r0, [fp, #-5]
   11d70:	str	r0, [fp, #-12]
   11d74:	str	r0, [fp, #-16]
   11d78:	movw	r0, #0
   11d7c:	strb	r0, [fp, #-17]	; 0xffffffef
   11d80:	strb	r0, [fp, #-18]	; 0xffffffee
   11d84:	movw	r0, #0
   11d88:	str	r0, [fp, #-24]	; 0xffffffe8
   11d8c:	movw	r0, #1
   11d90:	strb	r0, [fp, #-25]	; 0xffffffe7
   11d94:	ldr	r0, [fp, #-4]
   11d98:	ldrsb	r0, [r0]
   11d9c:	cmp	r0, #0
   11da0:	beq	12128 <__assert_fail@plt+0x111c>
   11da4:	ldr	r0, [fp, #-4]
   11da8:	ldrb	r0, [r0]
   11dac:	cmp	r0, #44	; 0x2c
   11db0:	beq	11dec <__assert_fail@plt+0xde0>
   11db4:	bl	10f04 <__ctype_b_loc@plt>
   11db8:	ldr	r0, [r0]
   11dbc:	ldr	r1, [fp, #-4]
   11dc0:	ldrb	r1, [r1]
   11dc4:	str	r0, [sp, #40]	; 0x28
   11dc8:	mov	r0, r1
   11dcc:	bl	121f0 <__assert_fail@plt+0x11e4>
   11dd0:	mov	r1, r0
   11dd4:	ldr	r2, [sp, #40]	; 0x28
   11dd8:	add	r0, r2, r0, lsl #1
   11ddc:	ldrh	r0, [r0]
   11de0:	and	r0, r0, #1
   11de4:	cmp	r0, #0
   11de8:	beq	11e78 <__assert_fail@plt+0xe6c>
   11dec:	ldrb	r0, [fp, #-5]
   11df0:	tst	r0, #1
   11df4:	beq	11e6c <__assert_fail@plt+0xe60>
   11df8:	ldrb	r0, [fp, #-17]	; 0xffffffef
   11dfc:	tst	r0, #1
   11e00:	beq	11e28 <__assert_fail@plt+0xe1c>
   11e04:	ldr	r0, [fp, #-16]
   11e08:	ldr	r1, [fp, #-12]
   11e0c:	bl	12204 <__assert_fail@plt+0x11f8>
   11e10:	tst	r0, #1
   11e14:	bne	11e24 <__assert_fail@plt+0xe18>
   11e18:	movw	r0, #0
   11e1c:	strb	r0, [fp, #-25]	; 0xffffffe7
   11e20:	b	12128 <__assert_fail@plt+0x111c>
   11e24:	b	11e68 <__assert_fail@plt+0xe5c>
   11e28:	ldrb	r0, [fp, #-18]	; 0xffffffee
   11e2c:	tst	r0, #1
   11e30:	beq	11e58 <__assert_fail@plt+0xe4c>
   11e34:	ldr	r0, [fp, #-16]
   11e38:	ldr	r1, [fp, #-12]
   11e3c:	bl	12290 <__assert_fail@plt+0x1284>
   11e40:	tst	r0, #1
   11e44:	bne	11e54 <__assert_fail@plt+0xe48>
   11e48:	movw	r0, #0
   11e4c:	strb	r0, [fp, #-25]	; 0xffffffe7
   11e50:	b	12128 <__assert_fail@plt+0x111c>
   11e54:	b	11e64 <__assert_fail@plt+0xe58>
   11e58:	ldr	r0, [fp, #-16]
   11e5c:	ldr	r1, [fp, #-12]
   11e60:	bl	11b8c <__assert_fail@plt+0xb80>
   11e64:	b	11e68 <__assert_fail@plt+0xe5c>
   11e68:	b	11e6c <__assert_fail@plt+0xe60>
   11e6c:	movw	r0, #0
   11e70:	strb	r0, [fp, #-5]
   11e74:	b	12114 <__assert_fail@plt+0x1108>
   11e78:	ldr	r0, [fp, #-4]
   11e7c:	ldrb	r0, [r0]
   11e80:	cmp	r0, #47	; 0x2f
   11e84:	bne	11ee4 <__assert_fail@plt+0xed8>
   11e88:	ldrb	r0, [fp, #-5]
   11e8c:	tst	r0, #1
   11e90:	beq	11ed0 <__assert_fail@plt+0xec4>
   11e94:	movw	r0, #47031	; 0xb7b7
   11e98:	movt	r0, #1
   11e9c:	bl	10f1c <gettext@plt>
   11ea0:	ldr	r1, [fp, #-4]
   11ea4:	str	r0, [sp, #36]	; 0x24
   11ea8:	mov	r0, r1
   11eac:	bl	15774 <__assert_fail@plt+0x4768>
   11eb0:	movw	r1, #0
   11eb4:	str	r0, [sp, #32]
   11eb8:	mov	r0, r1
   11ebc:	ldr	r2, [sp, #36]	; 0x24
   11ec0:	ldr	r3, [sp, #32]
   11ec4:	bl	10ebc <error@plt>
   11ec8:	movw	r0, #0
   11ecc:	strb	r0, [fp, #-25]	; 0xffffffe7
   11ed0:	movw	r0, #1
   11ed4:	strb	r0, [fp, #-17]	; 0xffffffef
   11ed8:	movw	r0, #0
   11edc:	strb	r0, [fp, #-18]	; 0xffffffee
   11ee0:	b	12110 <__assert_fail@plt+0x1104>
   11ee4:	ldr	r0, [fp, #-4]
   11ee8:	ldrb	r0, [r0]
   11eec:	cmp	r0, #43	; 0x2b
   11ef0:	bne	11f50 <__assert_fail@plt+0xf44>
   11ef4:	ldrb	r0, [fp, #-5]
   11ef8:	tst	r0, #1
   11efc:	beq	11f3c <__assert_fail@plt+0xf30>
   11f00:	movw	r0, #47072	; 0xb7e0
   11f04:	movt	r0, #1
   11f08:	bl	10f1c <gettext@plt>
   11f0c:	ldr	r1, [fp, #-4]
   11f10:	str	r0, [sp, #28]
   11f14:	mov	r0, r1
   11f18:	bl	15774 <__assert_fail@plt+0x4768>
   11f1c:	movw	r1, #0
   11f20:	str	r0, [sp, #24]
   11f24:	mov	r0, r1
   11f28:	ldr	r2, [sp, #28]
   11f2c:	ldr	r3, [sp, #24]
   11f30:	bl	10ebc <error@plt>
   11f34:	movw	r0, #0
   11f38:	strb	r0, [fp, #-25]	; 0xffffffe7
   11f3c:	movw	r0, #1
   11f40:	strb	r0, [fp, #-18]	; 0xffffffee
   11f44:	movw	r0, #0
   11f48:	strb	r0, [fp, #-17]	; 0xffffffef
   11f4c:	b	1210c <__assert_fail@plt+0x1100>
   11f50:	ldr	r0, [fp, #-4]
   11f54:	ldrb	r0, [r0]
   11f58:	sub	r0, r0, #48	; 0x30
   11f5c:	cmp	r0, #9
   11f60:	bhi	120c8 <__assert_fail@plt+0x10bc>
   11f64:	ldrb	r0, [fp, #-5]
   11f68:	tst	r0, #1
   11f6c:	bne	11f8c <__assert_fail@plt+0xf80>
   11f70:	mov	r0, #0
   11f74:	str	r0, [fp, #-12]
   11f78:	str	r0, [fp, #-16]
   11f7c:	movw	r0, #1
   11f80:	strb	r0, [fp, #-5]
   11f84:	ldr	r0, [fp, #-4]
   11f88:	str	r0, [fp, #-24]	; 0xffffffe8
   11f8c:	ldr	r0, [fp, #-16]
   11f90:	ldr	r1, [fp, #-12]
   11f94:	movw	r2, #39321	; 0x9999
   11f98:	movt	r2, #39321	; 0x9999
   11f9c:	subs	r0, r2, r0
   11fa0:	movw	r2, #39321	; 0x9999
   11fa4:	movt	r2, #6553	; 0x1999
   11fa8:	sbcs	r1, r2, r1
   11fac:	bcc	11ff0 <__assert_fail@plt+0xfe4>
   11fb0:	b	11fb4 <__assert_fail@plt+0xfa8>
   11fb4:	ldr	r0, [fp, #-16]
   11fb8:	ldr	r1, [fp, #-12]
   11fbc:	mov	r2, #10
   11fc0:	umull	r2, r3, r0, r2
   11fc4:	add	ip, r1, r1, lsl #2
   11fc8:	add	r3, r3, ip, lsl #1
   11fcc:	ldr	ip, [fp, #-4]
   11fd0:	ldrb	ip, [ip]
   11fd4:	sub	ip, ip, #48	; 0x30
   11fd8:	adds	r2, r2, ip
   11fdc:	adc	r3, r3, ip, asr #31
   11fe0:	subs	r0, r2, r0
   11fe4:	sbcs	r1, r3, r1
   11fe8:	bcs	11ffc <__assert_fail@plt+0xff0>
   11fec:	b	11ff0 <__assert_fail@plt+0xfe4>
   11ff0:	movw	r0, #0
   11ff4:	str	r0, [sp, #20]
   11ff8:	b	12038 <__assert_fail@plt+0x102c>
   11ffc:	ldr	r0, [fp, #-16]
   12000:	ldr	r1, [fp, #-12]
   12004:	mov	r2, #10
   12008:	umull	r0, r2, r0, r2
   1200c:	add	r1, r1, r1, lsl #2
   12010:	add	r1, r2, r1, lsl #1
   12014:	ldr	r2, [fp, #-4]
   12018:	ldrb	r2, [r2]
   1201c:	sub	r2, r2, #48	; 0x30
   12020:	adds	r0, r0, r2
   12024:	adc	r1, r1, r2, asr #31
   12028:	str	r0, [fp, #-16]
   1202c:	str	r1, [fp, #-12]
   12030:	movw	r0, #1
   12034:	str	r0, [sp, #20]
   12038:	ldr	r0, [sp, #20]
   1203c:	cmp	r0, #0
   12040:	bne	120c4 <__assert_fail@plt+0x10b8>
   12044:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12048:	movw	r1, #47113	; 0xb809
   1204c:	movt	r1, #1
   12050:	bl	11000 <strspn@plt>
   12054:	str	r0, [fp, #-32]	; 0xffffffe0
   12058:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1205c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   12060:	bl	18e20 <__assert_fail@plt+0x7e14>
   12064:	str	r0, [fp, #-36]	; 0xffffffdc
   12068:	movw	r0, #47124	; 0xb814
   1206c:	movt	r0, #1
   12070:	bl	10f1c <gettext@plt>
   12074:	ldr	r1, [fp, #-36]	; 0xffffffdc
   12078:	str	r0, [sp, #16]
   1207c:	mov	r0, r1
   12080:	bl	15774 <__assert_fail@plt+0x4768>
   12084:	movw	r1, #0
   12088:	str	r0, [sp, #12]
   1208c:	mov	r0, r1
   12090:	ldr	r2, [sp, #16]
   12094:	ldr	r3, [sp, #12]
   12098:	bl	10ebc <error@plt>
   1209c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   120a0:	bl	12fd0 <__assert_fail@plt+0x1fc4>
   120a4:	movw	r0, #0
   120a8:	strb	r0, [fp, #-25]	; 0xffffffe7
   120ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   120b0:	ldr	r1, [fp, #-32]	; 0xffffffe0
   120b4:	add	r0, r0, r1
   120b8:	mvn	r1, #0
   120bc:	add	r0, r0, r1
   120c0:	str	r0, [fp, #-4]
   120c4:	b	12108 <__assert_fail@plt+0x10fc>
   120c8:	movw	r0, #47149	; 0xb82d
   120cc:	movt	r0, #1
   120d0:	bl	10f1c <gettext@plt>
   120d4:	ldr	r1, [fp, #-4]
   120d8:	str	r0, [sp, #8]
   120dc:	mov	r0, r1
   120e0:	bl	15774 <__assert_fail@plt+0x4768>
   120e4:	movw	r1, #0
   120e8:	str	r0, [sp, #4]
   120ec:	mov	r0, r1
   120f0:	ldr	r2, [sp, #8]
   120f4:	ldr	r3, [sp, #4]
   120f8:	bl	10ebc <error@plt>
   120fc:	movw	r0, #0
   12100:	strb	r0, [fp, #-25]	; 0xffffffe7
   12104:	b	12128 <__assert_fail@plt+0x111c>
   12108:	b	1210c <__assert_fail@plt+0x1100>
   1210c:	b	12110 <__assert_fail@plt+0x1104>
   12110:	b	12114 <__assert_fail@plt+0x1108>
   12114:	b	12118 <__assert_fail@plt+0x110c>
   12118:	ldr	r0, [fp, #-4]
   1211c:	add	r0, r0, #1
   12120:	str	r0, [fp, #-4]
   12124:	b	11d94 <__assert_fail@plt+0xd88>
   12128:	ldrb	r0, [fp, #-25]	; 0xffffffe7
   1212c:	tst	r0, #1
   12130:	beq	121d4 <__assert_fail@plt+0x11c8>
   12134:	ldrb	r0, [fp, #-5]
   12138:	tst	r0, #1
   1213c:	beq	121d4 <__assert_fail@plt+0x11c8>
   12140:	ldrb	r0, [fp, #-17]	; 0xffffffef
   12144:	tst	r0, #1
   12148:	beq	12180 <__assert_fail@plt+0x1174>
   1214c:	ldr	r0, [fp, #-16]
   12150:	ldr	r1, [fp, #-12]
   12154:	bl	12204 <__assert_fail@plt+0x11f8>
   12158:	and	r0, r0, #1
   1215c:	ldrb	r1, [fp, #-25]	; 0xffffffe7
   12160:	and	r1, r1, #1
   12164:	and	r0, r1, r0
   12168:	cmp	r0, #0
   1216c:	movw	r0, #0
   12170:	movne	r0, #1
   12174:	and	r0, r0, #1
   12178:	strb	r0, [fp, #-25]	; 0xffffffe7
   1217c:	b	121d0 <__assert_fail@plt+0x11c4>
   12180:	ldrb	r0, [fp, #-18]	; 0xffffffee
   12184:	tst	r0, #1
   12188:	beq	121c0 <__assert_fail@plt+0x11b4>
   1218c:	ldr	r0, [fp, #-16]
   12190:	ldr	r1, [fp, #-12]
   12194:	bl	12290 <__assert_fail@plt+0x1284>
   12198:	and	r0, r0, #1
   1219c:	ldrb	r1, [fp, #-25]	; 0xffffffe7
   121a0:	and	r1, r1, #1
   121a4:	and	r0, r1, r0
   121a8:	cmp	r0, #0
   121ac:	movw	r0, #0
   121b0:	movne	r0, #1
   121b4:	and	r0, r0, #1
   121b8:	strb	r0, [fp, #-25]	; 0xffffffe7
   121bc:	b	121cc <__assert_fail@plt+0x11c0>
   121c0:	ldr	r0, [fp, #-16]
   121c4:	ldr	r1, [fp, #-12]
   121c8:	bl	11b8c <__assert_fail@plt+0xb80>
   121cc:	b	121d0 <__assert_fail@plt+0x11c4>
   121d0:	b	121d4 <__assert_fail@plt+0x11c8>
   121d4:	ldrb	r0, [fp, #-25]	; 0xffffffe7
   121d8:	tst	r0, #1
   121dc:	bne	121e8 <__assert_fail@plt+0x11dc>
   121e0:	movw	r0, #1
   121e4:	bl	10f10 <exit@plt>
   121e8:	mov	sp, fp
   121ec:	pop	{fp, pc}
   121f0:	sub	sp, sp, #4
   121f4:	strb	r0, [sp, #3]
   121f8:	ldrb	r0, [sp, #3]
   121fc:	add	sp, sp, #4
   12200:	bx	lr
   12204:	push	{fp, lr}
   12208:	mov	fp, sp
   1220c:	sub	sp, sp, #16
   12210:	str	r0, [sp, #8]
   12214:	str	r1, [sp, #12]
   12218:	mov	r0, #1
   1221c:	strb	r0, [sp, #7]
   12220:	movw	r0, #53616	; 0xd170
   12224:	movt	r0, #2
   12228:	ldr	r1, [r0]
   1222c:	ldr	r0, [r0, #4]
   12230:	orr	r0, r1, r0
   12234:	cmp	r0, #0
   12238:	beq	12268 <__assert_fail@plt+0x125c>
   1223c:	b	12240 <__assert_fail@plt+0x1234>
   12240:	movw	r0, #47674	; 0xba3a
   12244:	movt	r0, #1
   12248:	bl	10f1c <gettext@plt>
   1224c:	movw	r1, #0
   12250:	str	r0, [sp]
   12254:	mov	r0, r1
   12258:	ldr	r2, [sp]
   1225c:	bl	10ebc <error@plt>
   12260:	movw	r0, #0
   12264:	strb	r0, [sp, #7]
   12268:	ldr	r0, [sp, #8]
   1226c:	ldr	r1, [sp, #12]
   12270:	movw	r2, #53616	; 0xd170
   12274:	movt	r2, #2
   12278:	str	r1, [r2, #4]
   1227c:	str	r0, [r2]
   12280:	ldrb	r0, [sp, #7]
   12284:	and	r0, r0, #1
   12288:	mov	sp, fp
   1228c:	pop	{fp, pc}
   12290:	push	{fp, lr}
   12294:	mov	fp, sp
   12298:	sub	sp, sp, #16
   1229c:	str	r0, [sp, #8]
   122a0:	str	r1, [sp, #12]
   122a4:	mov	r0, #1
   122a8:	strb	r0, [sp, #7]
   122ac:	movw	r0, #53624	; 0xd178
   122b0:	movt	r0, #2
   122b4:	ldr	r1, [r0]
   122b8:	ldr	r0, [r0, #4]
   122bc:	orr	r0, r1, r0
   122c0:	cmp	r0, #0
   122c4:	beq	122f4 <__assert_fail@plt+0x12e8>
   122c8:	b	122cc <__assert_fail@plt+0x12c0>
   122cc:	movw	r0, #47721	; 0xba69
   122d0:	movt	r0, #1
   122d4:	bl	10f1c <gettext@plt>
   122d8:	movw	r1, #0
   122dc:	str	r0, [sp]
   122e0:	mov	r0, r1
   122e4:	ldr	r2, [sp]
   122e8:	bl	10ebc <error@plt>
   122ec:	movw	r0, #0
   122f0:	strb	r0, [sp, #7]
   122f4:	ldr	r0, [sp, #8]
   122f8:	ldr	r1, [sp, #12]
   122fc:	movw	r2, #53624	; 0xd178
   12300:	movt	r2, #2
   12304:	str	r1, [r2, #4]
   12308:	str	r0, [r2]
   1230c:	ldrb	r0, [sp, #7]
   12310:	and	r0, r0, #1
   12314:	mov	sp, fp
   12318:	pop	{fp, pc}
   1231c:	push	{fp, lr}
   12320:	mov	fp, sp
   12324:	sub	sp, sp, #16
   12328:	movw	r0, #53604	; 0xd164
   1232c:	movt	r0, #2
   12330:	ldr	r0, [r0]
   12334:	movw	r1, #53600	; 0xd160
   12338:	movt	r1, #2
   1233c:	ldr	r1, [r1]
   12340:	bl	124c0 <__assert_fail@plt+0x14b4>
   12344:	movw	r0, #53600	; 0xd160
   12348:	movt	r0, #2
   1234c:	ldr	r0, [r0]
   12350:	cmp	r0, #0
   12354:	bne	12424 <__assert_fail@plt+0x1418>
   12358:	movw	r0, #53616	; 0xd170
   1235c:	movt	r0, #2
   12360:	ldr	r1, [r0]
   12364:	ldr	r0, [r0, #4]
   12368:	orr	r0, r1, r0
   1236c:	cmp	r0, #0
   12370:	beq	12394 <__assert_fail@plt+0x1388>
   12374:	b	12378 <__assert_fail@plt+0x136c>
   12378:	movw	r0, #53616	; 0xd170
   1237c:	movt	r0, #2
   12380:	ldr	r1, [r0]
   12384:	ldr	r0, [r0, #4]
   12388:	str	r1, [fp, #-4]
   1238c:	str	r0, [sp, #8]
   12390:	b	123f8 <__assert_fail@plt+0x13ec>
   12394:	movw	r0, #53624	; 0xd178
   12398:	movt	r0, #2
   1239c:	ldr	r1, [r0]
   123a0:	ldr	r0, [r0, #4]
   123a4:	orr	r0, r1, r0
   123a8:	cmp	r0, #0
   123ac:	beq	123d0 <__assert_fail@plt+0x13c4>
   123b0:	b	123b4 <__assert_fail@plt+0x13a8>
   123b4:	movw	r0, #53624	; 0xd178
   123b8:	movt	r0, #2
   123bc:	ldr	r1, [r0]
   123c0:	ldr	r0, [r0, #4]
   123c4:	str	r1, [sp, #4]
   123c8:	str	r0, [sp]
   123cc:	b	123e4 <__assert_fail@plt+0x13d8>
   123d0:	mov	r0, #0
   123d4:	mov	r1, #8
   123d8:	str	r1, [sp, #4]
   123dc:	str	r0, [sp]
   123e0:	b	123e4 <__assert_fail@plt+0x13d8>
   123e4:	ldr	r0, [sp]
   123e8:	ldr	r1, [sp, #4]
   123ec:	str	r1, [fp, #-4]
   123f0:	str	r0, [sp, #8]
   123f4:	b	123f8 <__assert_fail@plt+0x13ec>
   123f8:	ldr	r0, [sp, #8]
   123fc:	ldr	r1, [fp, #-4]
   12400:	movw	r2, #53968	; 0xd2d0
   12404:	movt	r2, #2
   12408:	str	r1, [r2]
   1240c:	movw	r2, #53632	; 0xd180
   12410:	movt	r2, #2
   12414:	mov	r3, #0
   12418:	str	r3, [r2, #4]
   1241c:	str	r1, [r2]
   12420:	b	124b8 <__assert_fail@plt+0x14ac>
   12424:	movw	r0, #53600	; 0xd160
   12428:	movt	r0, #2
   1242c:	ldr	r0, [r0]
   12430:	cmp	r0, #1
   12434:	bne	124a0 <__assert_fail@plt+0x1494>
   12438:	movw	r0, #53616	; 0xd170
   1243c:	movt	r0, #2
   12440:	ldr	r1, [r0]
   12444:	ldr	r0, [r0, #4]
   12448:	orr	r0, r1, r0
   1244c:	cmp	r0, #0
   12450:	bne	124a0 <__assert_fail@plt+0x1494>
   12454:	b	12458 <__assert_fail@plt+0x144c>
   12458:	movw	r0, #53624	; 0xd178
   1245c:	movt	r0, #2
   12460:	ldr	r1, [r0]
   12464:	ldr	r0, [r0, #4]
   12468:	orr	r0, r1, r0
   1246c:	cmp	r0, #0
   12470:	bne	124a0 <__assert_fail@plt+0x1494>
   12474:	b	12478 <__assert_fail@plt+0x146c>
   12478:	movw	r0, #53604	; 0xd164
   1247c:	movt	r0, #2
   12480:	ldr	r0, [r0]
   12484:	ldr	r1, [r0]
   12488:	ldr	r0, [r0, #4]
   1248c:	movw	r2, #53632	; 0xd180
   12490:	movt	r2, #2
   12494:	str	r0, [r2, #4]
   12498:	str	r1, [r2]
   1249c:	b	124b4 <__assert_fail@plt+0x14a8>
   124a0:	movw	r0, #53632	; 0xd180
   124a4:	movt	r0, #2
   124a8:	mov	r1, #0
   124ac:	str	r1, [r0, #4]
   124b0:	str	r1, [r0]
   124b4:	b	124b8 <__assert_fail@plt+0x14ac>
   124b8:	mov	sp, fp
   124bc:	pop	{fp, pc}
   124c0:	push	{fp, lr}
   124c4:	mov	fp, sp
   124c8:	sub	sp, sp, #32
   124cc:	str	r0, [fp, #-4]
   124d0:	str	r1, [fp, #-8]
   124d4:	mov	r0, #0
   124d8:	str	r0, [sp, #20]
   124dc:	str	r0, [sp, #16]
   124e0:	movw	r0, #0
   124e4:	str	r0, [sp, #12]
   124e8:	ldr	r0, [sp, #12]
   124ec:	ldr	r1, [fp, #-8]
   124f0:	cmp	r0, r1
   124f4:	bcs	125b0 <__assert_fail@plt+0x15a4>
   124f8:	ldr	r0, [fp, #-4]
   124fc:	ldr	r1, [sp, #12]
   12500:	ldr	r1, [r0, r1, lsl #3]!
   12504:	ldr	r0, [r0, #4]
   12508:	orr	r0, r1, r0
   1250c:	cmp	r0, #0
   12510:	bne	1253c <__assert_fail@plt+0x1530>
   12514:	b	12518 <__assert_fail@plt+0x150c>
   12518:	movw	r0, #47768	; 0xba98
   1251c:	movt	r0, #1
   12520:	bl	10f1c <gettext@plt>
   12524:	movw	r1, #1
   12528:	str	r0, [sp, #8]
   1252c:	mov	r0, r1
   12530:	movw	r1, #0
   12534:	ldr	r2, [sp, #8]
   12538:	bl	10ebc <error@plt>
   1253c:	ldr	r0, [fp, #-4]
   12540:	ldr	r1, [sp, #12]
   12544:	ldr	r1, [r0, r1, lsl #3]!
   12548:	ldr	r0, [r0, #4]
   1254c:	ldr	r2, [sp, #16]
   12550:	ldr	r3, [sp, #20]
   12554:	subs	r1, r2, r1
   12558:	sbcs	r0, r3, r0
   1255c:	bcc	12588 <__assert_fail@plt+0x157c>
   12560:	b	12564 <__assert_fail@plt+0x1558>
   12564:	movw	r0, #47789	; 0xbaad
   12568:	movt	r0, #1
   1256c:	bl	10f1c <gettext@plt>
   12570:	movw	r1, #1
   12574:	str	r0, [sp, #4]
   12578:	mov	r0, r1
   1257c:	movw	r1, #0
   12580:	ldr	r2, [sp, #4]
   12584:	bl	10ebc <error@plt>
   12588:	ldr	r0, [fp, #-4]
   1258c:	ldr	r1, [sp, #12]
   12590:	ldr	r1, [r0, r1, lsl #3]!
   12594:	ldr	r0, [r0, #4]
   12598:	str	r0, [sp, #20]
   1259c:	str	r1, [sp, #16]
   125a0:	ldr	r0, [sp, #12]
   125a4:	add	r0, r0, #1
   125a8:	str	r0, [sp, #12]
   125ac:	b	124e8 <__assert_fail@plt+0x14dc>
   125b0:	movw	r0, #53624	; 0xd178
   125b4:	movt	r0, #2
   125b8:	ldr	r1, [r0]
   125bc:	ldr	r0, [r0, #4]
   125c0:	orr	r0, r1, r0
   125c4:	cmp	r0, #0
   125c8:	beq	12614 <__assert_fail@plt+0x1608>
   125cc:	b	125d0 <__assert_fail@plt+0x15c4>
   125d0:	movw	r0, #53616	; 0xd170
   125d4:	movt	r0, #2
   125d8:	ldr	r1, [r0]
   125dc:	ldr	r0, [r0, #4]
   125e0:	orr	r0, r1, r0
   125e4:	cmp	r0, #0
   125e8:	beq	12614 <__assert_fail@plt+0x1608>
   125ec:	b	125f0 <__assert_fail@plt+0x15e4>
   125f0:	movw	r0, #47817	; 0xbac9
   125f4:	movt	r0, #1
   125f8:	bl	10f1c <gettext@plt>
   125fc:	movw	r1, #1
   12600:	str	r0, [sp]
   12604:	mov	r0, r1
   12608:	movw	r1, #0
   1260c:	ldr	r2, [sp]
   12610:	bl	10ebc <error@plt>
   12614:	mov	sp, fp
   12618:	pop	{fp, pc}
   1261c:	push	{r4, r5, fp, lr}
   12620:	add	fp, sp, #8
   12624:	sub	sp, sp, #88	; 0x58
   12628:	str	r0, [fp, #-24]	; 0xffffffe8
   1262c:	str	r1, [fp, #-20]	; 0xffffffec
   12630:	str	r2, [fp, #-28]	; 0xffffffe4
   12634:	str	r3, [fp, #-32]	; 0xffffffe0
   12638:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1263c:	mov	r1, #0
   12640:	strb	r1, [r0]
   12644:	movw	r0, #53632	; 0xd180
   12648:	movt	r0, #2
   1264c:	ldr	r1, [r0]
   12650:	ldr	r0, [r0, #4]
   12654:	orr	r0, r1, r0
   12658:	cmp	r0, #0
   1265c:	beq	126c8 <__assert_fail@plt+0x16bc>
   12660:	b	12664 <__assert_fail@plt+0x1658>
   12664:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12668:	ldr	r1, [fp, #-20]	; 0xffffffec
   1266c:	movw	r2, #53632	; 0xd180
   12670:	movt	r2, #2
   12674:	ldr	r3, [r2]
   12678:	ldr	r2, [r2, #4]
   1267c:	str	r0, [sp, #44]	; 0x2c
   12680:	str	r1, [sp, #40]	; 0x28
   12684:	str	r2, [sp, #36]	; 0x24
   12688:	mov	r2, r3
   1268c:	ldr	ip, [sp, #36]	; 0x24
   12690:	str	r3, [sp, #32]
   12694:	mov	r3, ip
   12698:	bl	1b164 <__assert_fail@plt+0xa158>
   1269c:	ldr	ip, [sp, #32]
   126a0:	subs	r2, ip, r2
   126a4:	ldr	lr, [sp, #36]	; 0x24
   126a8:	sbc	r3, lr, r3
   126ac:	ldr	r4, [sp, #44]	; 0x2c
   126b0:	adds	r2, r4, r2
   126b4:	ldr	r5, [sp, #40]	; 0x28
   126b8:	adc	r3, r5, r3
   126bc:	str	r2, [fp, #-16]
   126c0:	str	r3, [fp, #-12]
   126c4:	b	128bc <__assert_fail@plt+0x18b0>
   126c8:	b	126cc <__assert_fail@plt+0x16c0>
   126cc:	ldr	r0, [fp, #-28]	; 0xffffffe4
   126d0:	ldr	r0, [r0]
   126d4:	movw	r1, #53600	; 0xd160
   126d8:	movt	r1, #2
   126dc:	ldr	r1, [r1]
   126e0:	cmp	r0, r1
   126e4:	bcs	12758 <__assert_fail@plt+0x174c>
   126e8:	movw	r0, #53604	; 0xd164
   126ec:	movt	r0, #2
   126f0:	ldr	r0, [r0]
   126f4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   126f8:	ldr	r1, [r1]
   126fc:	ldr	r1, [r0, r1, lsl #3]!
   12700:	ldr	r0, [r0, #4]
   12704:	str	r0, [fp, #-36]	; 0xffffffdc
   12708:	str	r1, [fp, #-40]	; 0xffffffd8
   1270c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   12710:	ldr	r1, [fp, #-20]	; 0xffffffec
   12714:	ldr	r2, [fp, #-40]	; 0xffffffd8
   12718:	ldr	r3, [fp, #-36]	; 0xffffffdc
   1271c:	subs	r0, r0, r2
   12720:	sbcs	r1, r1, r3
   12724:	bcs	12740 <__assert_fail@plt+0x1734>
   12728:	b	1272c <__assert_fail@plt+0x1720>
   1272c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   12730:	ldr	r1, [fp, #-36]	; 0xffffffdc
   12734:	str	r1, [fp, #-12]
   12738:	str	r0, [fp, #-16]
   1273c:	b	128bc <__assert_fail@plt+0x18b0>
   12740:	b	12744 <__assert_fail@plt+0x1738>
   12744:	ldr	r0, [fp, #-28]	; 0xffffffe4
   12748:	ldr	r1, [r0]
   1274c:	add	r1, r1, #1
   12750:	str	r1, [r0]
   12754:	b	126cc <__assert_fail@plt+0x16c0>
   12758:	movw	r0, #53616	; 0xd170
   1275c:	movt	r0, #2
   12760:	ldr	r1, [r0]
   12764:	ldr	r0, [r0, #4]
   12768:	orr	r0, r1, r0
   1276c:	cmp	r0, #0
   12770:	beq	127dc <__assert_fail@plt+0x17d0>
   12774:	b	12778 <__assert_fail@plt+0x176c>
   12778:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1277c:	ldr	r1, [fp, #-20]	; 0xffffffec
   12780:	movw	r2, #53616	; 0xd170
   12784:	movt	r2, #2
   12788:	ldr	r3, [r2]
   1278c:	ldr	r2, [r2, #4]
   12790:	str	r0, [sp, #28]
   12794:	str	r1, [sp, #24]
   12798:	str	r2, [sp, #20]
   1279c:	mov	r2, r3
   127a0:	ldr	ip, [sp, #20]
   127a4:	str	r3, [sp, #16]
   127a8:	mov	r3, ip
   127ac:	bl	1b164 <__assert_fail@plt+0xa158>
   127b0:	ldr	ip, [sp, #16]
   127b4:	subs	r2, ip, r2
   127b8:	ldr	lr, [sp, #20]
   127bc:	sbc	r3, lr, r3
   127c0:	ldr	r4, [sp, #28]
   127c4:	adds	r2, r4, r2
   127c8:	ldr	r5, [sp, #24]
   127cc:	adc	r3, r5, r3
   127d0:	str	r2, [fp, #-16]
   127d4:	str	r3, [fp, #-12]
   127d8:	b	128bc <__assert_fail@plt+0x18b0>
   127dc:	movw	r0, #53624	; 0xd178
   127e0:	movt	r0, #2
   127e4:	ldr	r1, [r0]
   127e8:	ldr	r0, [r0, #4]
   127ec:	orr	r0, r1, r0
   127f0:	cmp	r0, #0
   127f4:	beq	128a4 <__assert_fail@plt+0x1898>
   127f8:	b	127fc <__assert_fail@plt+0x17f0>
   127fc:	movw	r0, #53604	; 0xd164
   12800:	movt	r0, #2
   12804:	ldr	r0, [r0]
   12808:	movw	r1, #53600	; 0xd160
   1280c:	movt	r1, #2
   12810:	ldr	r1, [r1]
   12814:	add	r0, r0, r1, lsl #3
   12818:	ldr	r1, [r0, #-8]
   1281c:	ldr	r0, [r0, #-4]
   12820:	str	r0, [sp, #52]	; 0x34
   12824:	str	r1, [sp, #48]	; 0x30
   12828:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1282c:	ldr	r1, [fp, #-20]	; 0xffffffec
   12830:	movw	r2, #53624	; 0xd178
   12834:	movt	r2, #2
   12838:	ldr	r3, [r2]
   1283c:	ldr	r2, [r2, #4]
   12840:	ldr	ip, [sp, #48]	; 0x30
   12844:	ldr	lr, [sp, #52]	; 0x34
   12848:	subs	ip, r0, ip
   1284c:	sbc	lr, r1, lr
   12850:	str	r0, [sp, #12]
   12854:	mov	r0, ip
   12858:	str	r1, [sp, #8]
   1285c:	mov	r1, lr
   12860:	str	r2, [sp, #4]
   12864:	mov	r2, r3
   12868:	ldr	ip, [sp, #4]
   1286c:	str	r3, [sp]
   12870:	mov	r3, ip
   12874:	bl	1b164 <__assert_fail@plt+0xa158>
   12878:	ldr	ip, [sp]
   1287c:	subs	r2, ip, r2
   12880:	ldr	lr, [sp, #4]
   12884:	sbc	r3, lr, r3
   12888:	ldr	r4, [sp, #12]
   1288c:	adds	r2, r4, r2
   12890:	ldr	r5, [sp, #8]
   12894:	adc	r3, r5, r3
   12898:	str	r2, [fp, #-16]
   1289c:	str	r3, [fp, #-12]
   128a0:	b	128bc <__assert_fail@plt+0x18b0>
   128a4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   128a8:	mov	r1, #1
   128ac:	strb	r1, [r0]
   128b0:	mov	r0, #0
   128b4:	str	r0, [fp, #-12]
   128b8:	str	r0, [fp, #-16]
   128bc:	ldr	r0, [fp, #-16]
   128c0:	ldr	r1, [fp, #-12]
   128c4:	sub	sp, fp, #8
   128c8:	pop	{r4, r5, fp, pc}
   128cc:	sub	sp, sp, #4
   128d0:	str	r0, [sp]
   128d4:	movw	r0, #53640	; 0xd188
   128d8:	movt	r0, #2
   128dc:	movw	r1, #0
   128e0:	strb	r1, [r0]
   128e4:	ldr	r0, [sp]
   128e8:	movw	r1, #0
   128ec:	cmp	r0, r1
   128f0:	bne	1290c <__assert_fail@plt+0x1900>
   128f4:	movw	r0, #53644	; 0xd18c
   128f8:	movt	r0, #2
   128fc:	movw	r1, #53472	; 0xd0e0
   12900:	movt	r1, #2
   12904:	str	r1, [r0]
   12908:	b	1291c <__assert_fail@plt+0x1910>
   1290c:	ldr	r0, [sp]
   12910:	movw	r1, #53644	; 0xd18c
   12914:	movt	r1, #2
   12918:	str	r0, [r1]
   1291c:	add	sp, sp, #4
   12920:	bx	lr
   12924:	push	{fp, lr}
   12928:	mov	fp, sp
   1292c:	sub	sp, sp, #32
   12930:	str	r0, [fp, #-8]
   12934:	ldr	r0, [fp, #-8]
   12938:	movw	r1, #0
   1293c:	cmp	r0, r1
   12940:	beq	12a54 <__assert_fail@plt+0x1a48>
   12944:	movw	r0, #53648	; 0xd190
   12948:	movt	r0, #2
   1294c:	ldr	r0, [r0]
   12950:	movw	r1, #0
   12954:	cmp	r0, r1
   12958:	beq	12960 <__assert_fail@plt+0x1954>
   1295c:	b	12980 <__assert_fail@plt+0x1974>
   12960:	movw	r0, #47192	; 0xb858
   12964:	movt	r0, #1
   12968:	movw	r1, #47202	; 0xb862
   1296c:	movt	r1, #1
   12970:	movw	r2, #340	; 0x154
   12974:	movw	r3, #47222	; 0xb876
   12978:	movt	r3, #1
   1297c:	bl	1100c <__assert_fail@plt>
   12980:	bl	10f40 <__errno_location@plt>
   12984:	ldr	r0, [r0]
   12988:	str	r0, [sp, #16]
   1298c:	ldr	r0, [fp, #-8]
   12990:	bl	10ea4 <ferror_unlocked@plt>
   12994:	cmp	r0, #0
   12998:	bne	129a4 <__assert_fail@plt+0x1998>
   1299c:	movw	r0, #0
   129a0:	str	r0, [sp, #16]
   129a4:	movw	r0, #53648	; 0xd190
   129a8:	movt	r0, #2
   129ac:	ldr	r0, [r0]
   129b0:	movw	r1, #47950	; 0xbb4e
   129b4:	movt	r1, #1
   129b8:	bl	10de4 <strcmp@plt>
   129bc:	cmp	r0, #0
   129c0:	bne	129d0 <__assert_fail@plt+0x19c4>
   129c4:	ldr	r0, [fp, #-8]
   129c8:	bl	10fac <clearerr_unlocked@plt>
   129cc:	b	129f0 <__assert_fail@plt+0x19e4>
   129d0:	ldr	r0, [fp, #-8]
   129d4:	bl	12e38 <__assert_fail@plt+0x1e2c>
   129d8:	cmp	r0, #0
   129dc:	beq	129ec <__assert_fail@plt+0x19e0>
   129e0:	bl	10f40 <__errno_location@plt>
   129e4:	ldr	r0, [r0]
   129e8:	str	r0, [sp, #16]
   129ec:	b	129f0 <__assert_fail@plt+0x19e4>
   129f0:	ldr	r0, [sp, #16]
   129f4:	cmp	r0, #0
   129f8:	beq	12a50 <__assert_fail@plt+0x1a44>
   129fc:	ldr	r1, [sp, #16]
   12a00:	movw	r0, #53648	; 0xd190
   12a04:	movt	r0, #2
   12a08:	ldr	r2, [r0]
   12a0c:	movw	r0, #0
   12a10:	movw	r3, #3
   12a14:	str	r1, [sp, #12]
   12a18:	mov	r1, r3
   12a1c:	bl	15530 <__assert_fail@plt+0x4524>
   12a20:	movw	r1, #0
   12a24:	str	r0, [sp, #8]
   12a28:	mov	r0, r1
   12a2c:	ldr	r1, [sp, #12]
   12a30:	movw	r2, #47189	; 0xb855
   12a34:	movt	r2, #1
   12a38:	ldr	r3, [sp, #8]
   12a3c:	bl	10ebc <error@plt>
   12a40:	movw	r0, #53596	; 0xd15c
   12a44:	movt	r0, #2
   12a48:	movw	r1, #1
   12a4c:	str	r1, [r0]
   12a50:	b	12a54 <__assert_fail@plt+0x1a48>
   12a54:	b	12a58 <__assert_fail@plt+0x1a4c>
   12a58:	movw	r0, #53644	; 0xd18c
   12a5c:	movt	r0, #2
   12a60:	ldr	r1, [r0]
   12a64:	add	r2, r1, #4
   12a68:	str	r2, [r0]
   12a6c:	ldr	r0, [r1]
   12a70:	str	r0, [fp, #-12]
   12a74:	movw	r1, #0
   12a78:	cmp	r0, r1
   12a7c:	beq	12b5c <__assert_fail@plt+0x1b50>
   12a80:	ldr	r0, [fp, #-12]
   12a84:	movw	r1, #47950	; 0xbb4e
   12a88:	movt	r1, #1
   12a8c:	bl	10de4 <strcmp@plt>
   12a90:	cmp	r0, #0
   12a94:	bne	12abc <__assert_fail@plt+0x1ab0>
   12a98:	movw	r0, #53640	; 0xd188
   12a9c:	movt	r0, #2
   12aa0:	movw	r1, #1
   12aa4:	strb	r1, [r0]
   12aa8:	movw	r0, #53576	; 0xd148
   12aac:	movt	r0, #2
   12ab0:	ldr	r0, [r0]
   12ab4:	str	r0, [fp, #-8]
   12ab8:	b	12ad0 <__assert_fail@plt+0x1ac4>
   12abc:	ldr	r0, [fp, #-12]
   12ac0:	movw	r1, #46831	; 0xb6ef
   12ac4:	movt	r1, #1
   12ac8:	bl	10fb8 <fopen64@plt>
   12acc:	str	r0, [fp, #-8]
   12ad0:	ldr	r0, [fp, #-8]
   12ad4:	movw	r1, #0
   12ad8:	cmp	r0, r1
   12adc:	beq	12b08 <__assert_fail@plt+0x1afc>
   12ae0:	ldr	r0, [fp, #-12]
   12ae4:	movw	r1, #53648	; 0xd190
   12ae8:	movt	r1, #2
   12aec:	str	r0, [r1]
   12af0:	ldr	r0, [fp, #-8]
   12af4:	movw	r1, #2
   12af8:	bl	12de0 <__assert_fail@plt+0x1dd4>
   12afc:	ldr	r0, [fp, #-8]
   12b00:	str	r0, [fp, #-4]
   12b04:	b	12b64 <__assert_fail@plt+0x1b58>
   12b08:	bl	10f40 <__errno_location@plt>
   12b0c:	ldr	r1, [r0]
   12b10:	ldr	r2, [fp, #-12]
   12b14:	movw	r0, #0
   12b18:	movw	r3, #3
   12b1c:	str	r1, [sp, #4]
   12b20:	mov	r1, r3
   12b24:	bl	15530 <__assert_fail@plt+0x4524>
   12b28:	movw	r1, #0
   12b2c:	str	r0, [sp]
   12b30:	mov	r0, r1
   12b34:	ldr	r1, [sp, #4]
   12b38:	movw	r2, #47189	; 0xb855
   12b3c:	movt	r2, #1
   12b40:	ldr	r3, [sp]
   12b44:	bl	10ebc <error@plt>
   12b48:	movw	r0, #53596	; 0xd15c
   12b4c:	movt	r0, #2
   12b50:	movw	r1, #1
   12b54:	str	r1, [r0]
   12b58:	b	12a58 <__assert_fail@plt+0x1a4c>
   12b5c:	movw	r0, #0
   12b60:	str	r0, [fp, #-4]
   12b64:	ldr	r0, [fp, #-4]
   12b68:	mov	sp, fp
   12b6c:	pop	{fp, pc}
   12b70:	push	{fp, lr}
   12b74:	mov	fp, sp
   12b78:	movw	r0, #53640	; 0xd188
   12b7c:	movt	r0, #2
   12b80:	ldrb	r0, [r0]
   12b84:	tst	r0, #1
   12b88:	beq	12bbc <__assert_fail@plt+0x1bb0>
   12b8c:	movw	r0, #53576	; 0xd148
   12b90:	movt	r0, #2
   12b94:	ldr	r0, [r0]
   12b98:	bl	12e38 <__assert_fail@plt+0x1e2c>
   12b9c:	cmp	r0, #0
   12ba0:	beq	12bbc <__assert_fail@plt+0x1bb0>
   12ba4:	bl	10f40 <__errno_location@plt>
   12ba8:	ldr	r1, [r0]
   12bac:	movw	r0, #1
   12bb0:	movw	r2, #47950	; 0xbb4e
   12bb4:	movt	r2, #1
   12bb8:	bl	10ebc <error@plt>
   12bbc:	pop	{fp, pc}
   12bc0:	push	{fp, lr}
   12bc4:	mov	fp, sp
   12bc8:	sub	sp, sp, #8
   12bcc:	movw	r0, #47246	; 0xb88e
   12bd0:	movt	r0, #1
   12bd4:	bl	10f1c <gettext@plt>
   12bd8:	movw	r1, #53580	; 0xd14c
   12bdc:	movt	r1, #2
   12be0:	ldr	r1, [r1]
   12be4:	bl	10dcc <fputs_unlocked@plt>
   12be8:	movw	r1, #47309	; 0xb8cd
   12bec:	movt	r1, #1
   12bf0:	str	r0, [sp, #4]
   12bf4:	mov	r0, r1
   12bf8:	bl	10f1c <gettext@plt>
   12bfc:	movw	r1, #53580	; 0xd14c
   12c00:	movt	r1, #2
   12c04:	ldr	r1, [r1]
   12c08:	bl	10dcc <fputs_unlocked@plt>
   12c0c:	mov	sp, fp
   12c10:	pop	{fp, pc}
   12c14:	sub	sp, sp, #4
   12c18:	str	r0, [sp]
   12c1c:	ldr	r0, [sp]
   12c20:	movw	r1, #53652	; 0xd194
   12c24:	movt	r1, #2
   12c28:	str	r0, [r1]
   12c2c:	add	sp, sp, #4
   12c30:	bx	lr
   12c34:	sub	sp, sp, #4
   12c38:	and	r0, r0, #1
   12c3c:	strb	r0, [sp, #3]
   12c40:	ldrb	r0, [sp, #3]
   12c44:	and	r0, r0, #1
   12c48:	movw	r1, #53656	; 0xd198
   12c4c:	movt	r1, #2
   12c50:	strb	r0, [r1]
   12c54:	add	sp, sp, #4
   12c58:	bx	lr
   12c5c:	push	{fp, lr}
   12c60:	mov	fp, sp
   12c64:	sub	sp, sp, #24
   12c68:	movw	r0, #53580	; 0xd14c
   12c6c:	movt	r0, #2
   12c70:	ldr	r0, [r0]
   12c74:	bl	19168 <__assert_fail@plt+0x815c>
   12c78:	cmp	r0, #0
   12c7c:	beq	12d4c <__assert_fail@plt+0x1d40>
   12c80:	movw	r0, #53656	; 0xd198
   12c84:	movt	r0, #2
   12c88:	ldrb	r0, [r0]
   12c8c:	tst	r0, #1
   12c90:	beq	12ca4 <__assert_fail@plt+0x1c98>
   12c94:	bl	10f40 <__errno_location@plt>
   12c98:	ldr	r0, [r0]
   12c9c:	cmp	r0, #32
   12ca0:	beq	12d4c <__assert_fail@plt+0x1d40>
   12ca4:	movw	r0, #46821	; 0xb6e5
   12ca8:	movt	r0, #1
   12cac:	bl	10f1c <gettext@plt>
   12cb0:	str	r0, [fp, #-4]
   12cb4:	movw	r0, #53652	; 0xd194
   12cb8:	movt	r0, #2
   12cbc:	ldr	r0, [r0]
   12cc0:	movw	r1, #0
   12cc4:	cmp	r0, r1
   12cc8:	beq	12d20 <__assert_fail@plt+0x1d14>
   12ccc:	bl	10f40 <__errno_location@plt>
   12cd0:	ldr	r1, [r0]
   12cd4:	movw	r0, #53652	; 0xd194
   12cd8:	movt	r0, #2
   12cdc:	ldr	r0, [r0]
   12ce0:	str	r1, [fp, #-8]
   12ce4:	bl	154d8 <__assert_fail@plt+0x44cc>
   12ce8:	ldr	r1, [fp, #-4]
   12cec:	movw	r2, #0
   12cf0:	str	r0, [sp, #12]
   12cf4:	mov	r0, r2
   12cf8:	ldr	r2, [fp, #-8]
   12cfc:	str	r1, [sp, #8]
   12d00:	mov	r1, r2
   12d04:	movw	r2, #47877	; 0xbb05
   12d08:	movt	r2, #1
   12d0c:	ldr	r3, [sp, #12]
   12d10:	ldr	ip, [sp, #8]
   12d14:	str	ip, [sp]
   12d18:	bl	10ebc <error@plt>
   12d1c:	b	12d3c <__assert_fail@plt+0x1d30>
   12d20:	bl	10f40 <__errno_location@plt>
   12d24:	ldr	r1, [r0]
   12d28:	ldr	r3, [fp, #-4]
   12d2c:	movw	r0, #0
   12d30:	movw	r2, #47189	; 0xb855
   12d34:	movt	r2, #1
   12d38:	bl	10ebc <error@plt>
   12d3c:	movw	r0, #53484	; 0xd0ec
   12d40:	movt	r0, #2
   12d44:	ldr	r0, [r0]
   12d48:	bl	10e20 <_exit@plt>
   12d4c:	movw	r0, #53568	; 0xd140
   12d50:	movt	r0, #2
   12d54:	ldr	r0, [r0]
   12d58:	bl	19168 <__assert_fail@plt+0x815c>
   12d5c:	cmp	r0, #0
   12d60:	beq	12d74 <__assert_fail@plt+0x1d68>
   12d64:	movw	r0, #53484	; 0xd0ec
   12d68:	movt	r0, #2
   12d6c:	ldr	r0, [r0]
   12d70:	bl	10e20 <_exit@plt>
   12d74:	mov	sp, fp
   12d78:	pop	{fp, pc}
   12d7c:	push	{r4, r5, fp, lr}
   12d80:	add	fp, sp, #8
   12d84:	sub	sp, sp, #40	; 0x28
   12d88:	ldr	r1, [fp, #12]
   12d8c:	ldr	ip, [fp, #8]
   12d90:	ldr	lr, [fp, #16]
   12d94:	str	r0, [fp, #-12]
   12d98:	str	r3, [sp, #28]
   12d9c:	str	r2, [sp, #24]
   12da0:	str	r1, [sp, #20]
   12da4:	str	ip, [sp, #16]
   12da8:	ldr	r0, [fp, #-12]
   12dac:	ldr	r2, [sp, #24]
   12db0:	ldr	r3, [sp, #28]
   12db4:	ldr	r1, [sp, #16]
   12db8:	ldr	ip, [sp, #20]
   12dbc:	ldr	r4, [fp, #16]
   12dc0:	mov	r5, sp
   12dc4:	str	r4, [r5, #8]
   12dc8:	str	ip, [r5, #4]
   12dcc:	str	r1, [r5]
   12dd0:	str	lr, [sp, #12]
   12dd4:	bl	10df0 <posix_fadvise64@plt>
   12dd8:	sub	sp, fp, #8
   12ddc:	pop	{r4, r5, fp, pc}
   12de0:	push	{fp, lr}
   12de4:	mov	fp, sp
   12de8:	sub	sp, sp, #24
   12dec:	str	r0, [fp, #-4]
   12df0:	str	r1, [fp, #-8]
   12df4:	ldr	r0, [fp, #-4]
   12df8:	movw	r1, #0
   12dfc:	cmp	r0, r1
   12e00:	beq	12e30 <__assert_fail@plt+0x1e24>
   12e04:	ldr	r0, [fp, #-4]
   12e08:	bl	10f64 <fileno@plt>
   12e0c:	ldr	r1, [fp, #-8]
   12e10:	mov	r2, sp
   12e14:	str	r1, [r2, #8]
   12e18:	mov	r1, #0
   12e1c:	str	r1, [r2, #4]
   12e20:	str	r1, [r2]
   12e24:	mov	r2, r1
   12e28:	mov	r3, r1
   12e2c:	bl	12d7c <__assert_fail@plt+0x1d70>
   12e30:	mov	sp, fp
   12e34:	pop	{fp, pc}
   12e38:	push	{fp, lr}
   12e3c:	mov	fp, sp
   12e40:	sub	sp, sp, #32
   12e44:	str	r0, [fp, #-8]
   12e48:	movw	r0, #0
   12e4c:	str	r0, [fp, #-12]
   12e50:	str	r0, [sp, #12]
   12e54:	ldr	r0, [fp, #-8]
   12e58:	bl	10f64 <fileno@plt>
   12e5c:	str	r0, [sp, #16]
   12e60:	ldr	r0, [sp, #16]
   12e64:	cmp	r0, #0
   12e68:	bge	12e7c <__assert_fail@plt+0x1e70>
   12e6c:	ldr	r0, [fp, #-8]
   12e70:	bl	10f70 <fclose@plt>
   12e74:	str	r0, [fp, #-4]
   12e78:	b	12f18 <__assert_fail@plt+0x1f0c>
   12e7c:	ldr	r0, [fp, #-8]
   12e80:	bl	10ee0 <__freading@plt>
   12e84:	cmp	r0, #0
   12e88:	beq	12ec0 <__assert_fail@plt+0x1eb4>
   12e8c:	ldr	r0, [fp, #-8]
   12e90:	bl	10f64 <fileno@plt>
   12e94:	mov	r1, sp
   12e98:	mov	r2, #1
   12e9c:	str	r2, [r1]
   12ea0:	mov	r1, #0
   12ea4:	mov	r2, r1
   12ea8:	mov	r3, r1
   12eac:	bl	10e80 <lseek64@plt>
   12eb0:	and	r0, r0, r1
   12eb4:	cmn	r0, #1
   12eb8:	beq	12edc <__assert_fail@plt+0x1ed0>
   12ebc:	b	12ec0 <__assert_fail@plt+0x1eb4>
   12ec0:	ldr	r0, [fp, #-8]
   12ec4:	bl	12f24 <__assert_fail@plt+0x1f18>
   12ec8:	cmp	r0, #0
   12ecc:	beq	12edc <__assert_fail@plt+0x1ed0>
   12ed0:	bl	10f40 <__errno_location@plt>
   12ed4:	ldr	r0, [r0]
   12ed8:	str	r0, [fp, #-12]
   12edc:	ldr	r0, [fp, #-8]
   12ee0:	bl	10f70 <fclose@plt>
   12ee4:	str	r0, [sp, #12]
   12ee8:	ldr	r0, [fp, #-12]
   12eec:	cmp	r0, #0
   12ef0:	beq	12f10 <__assert_fail@plt+0x1f04>
   12ef4:	ldr	r0, [fp, #-12]
   12ef8:	str	r0, [sp, #8]
   12efc:	bl	10f40 <__errno_location@plt>
   12f00:	ldr	r1, [sp, #8]
   12f04:	str	r1, [r0]
   12f08:	mvn	r0, #0
   12f0c:	str	r0, [sp, #12]
   12f10:	ldr	r0, [sp, #12]
   12f14:	str	r0, [fp, #-4]
   12f18:	ldr	r0, [fp, #-4]
   12f1c:	mov	sp, fp
   12f20:	pop	{fp, pc}
   12f24:	push	{fp, lr}
   12f28:	mov	fp, sp
   12f2c:	sub	sp, sp, #8
   12f30:	str	r0, [sp]
   12f34:	ldr	r0, [sp]
   12f38:	movw	r1, #0
   12f3c:	cmp	r0, r1
   12f40:	beq	12f54 <__assert_fail@plt+0x1f48>
   12f44:	ldr	r0, [sp]
   12f48:	bl	10ee0 <__freading@plt>
   12f4c:	cmp	r0, #0
   12f50:	bne	12f64 <__assert_fail@plt+0x1f58>
   12f54:	ldr	r0, [sp]
   12f58:	bl	10e08 <fflush@plt>
   12f5c:	str	r0, [sp, #4]
   12f60:	b	12f78 <__assert_fail@plt+0x1f6c>
   12f64:	ldr	r0, [sp]
   12f68:	bl	12f84 <__assert_fail@plt+0x1f78>
   12f6c:	ldr	r0, [sp]
   12f70:	bl	10e08 <fflush@plt>
   12f74:	str	r0, [sp, #4]
   12f78:	ldr	r0, [sp, #4]
   12f7c:	mov	sp, fp
   12f80:	pop	{fp, pc}
   12f84:	push	{fp, lr}
   12f88:	mov	fp, sp
   12f8c:	sub	sp, sp, #8
   12f90:	str	r0, [sp, #4]
   12f94:	ldr	r0, [sp, #4]
   12f98:	ldr	r0, [r0]
   12f9c:	and	r0, r0, #256	; 0x100
   12fa0:	cmp	r0, #0
   12fa4:	beq	12fc8 <__assert_fail@plt+0x1fbc>
   12fa8:	ldr	r0, [sp, #4]
   12fac:	mov	r1, sp
   12fb0:	mov	r2, #1
   12fb4:	str	r2, [r1]
   12fb8:	mov	r1, #0
   12fbc:	mov	r2, r1
   12fc0:	mov	r3, r1
   12fc4:	bl	13010 <__assert_fail@plt+0x2004>
   12fc8:	mov	sp, fp
   12fcc:	pop	{fp, pc}
   12fd0:	push	{fp, lr}
   12fd4:	mov	fp, sp
   12fd8:	sub	sp, sp, #16
   12fdc:	str	r0, [fp, #-4]
   12fe0:	bl	10f40 <__errno_location@plt>
   12fe4:	ldr	r0, [r0]
   12fe8:	str	r0, [sp, #8]
   12fec:	ldr	r0, [fp, #-4]
   12ff0:	bl	10e14 <free@plt>
   12ff4:	ldr	r0, [sp, #8]
   12ff8:	str	r0, [sp, #4]
   12ffc:	bl	10f40 <__errno_location@plt>
   13000:	ldr	r1, [sp, #4]
   13004:	str	r1, [r0]
   13008:	mov	sp, fp
   1300c:	pop	{fp, pc}
   13010:	push	{fp, lr}
   13014:	mov	fp, sp
   13018:	sub	sp, sp, #32
   1301c:	ldr	r1, [fp, #8]
   13020:	str	r0, [fp, #-8]
   13024:	str	r3, [sp, #20]
   13028:	str	r2, [sp, #16]
   1302c:	ldr	r0, [fp, #-8]
   13030:	ldr	r0, [r0, #8]
   13034:	ldr	r2, [fp, #-8]
   13038:	ldr	r2, [r2, #4]
   1303c:	cmp	r0, r2
   13040:	bne	130ec <__assert_fail@plt+0x20e0>
   13044:	ldr	r0, [fp, #-8]
   13048:	ldr	r0, [r0, #20]
   1304c:	ldr	r1, [fp, #-8]
   13050:	ldr	r1, [r1, #16]
   13054:	cmp	r0, r1
   13058:	bne	130ec <__assert_fail@plt+0x20e0>
   1305c:	ldr	r0, [fp, #-8]
   13060:	ldr	r0, [r0, #36]	; 0x24
   13064:	movw	r1, #0
   13068:	cmp	r0, r1
   1306c:	bne	130ec <__assert_fail@plt+0x20e0>
   13070:	ldr	r0, [fp, #-8]
   13074:	bl	10f64 <fileno@plt>
   13078:	ldr	r2, [sp, #16]
   1307c:	ldr	r3, [sp, #20]
   13080:	ldr	r1, [fp, #8]
   13084:	mov	ip, sp
   13088:	str	r1, [ip]
   1308c:	bl	10e80 <lseek64@plt>
   13090:	str	r1, [sp, #12]
   13094:	str	r0, [sp, #8]
   13098:	ldr	r0, [sp, #8]
   1309c:	ldr	r1, [sp, #12]
   130a0:	and	r0, r0, r1
   130a4:	cmn	r0, #1
   130a8:	bne	130bc <__assert_fail@plt+0x20b0>
   130ac:	b	130b0 <__assert_fail@plt+0x20a4>
   130b0:	mvn	r0, #0
   130b4:	str	r0, [fp, #-4]
   130b8:	b	1310c <__assert_fail@plt+0x2100>
   130bc:	ldr	r0, [fp, #-8]
   130c0:	ldr	r1, [r0]
   130c4:	bic	r1, r1, #16
   130c8:	str	r1, [r0]
   130cc:	ldr	r0, [sp, #8]
   130d0:	ldr	r1, [sp, #12]
   130d4:	ldr	r2, [fp, #-8]
   130d8:	str	r1, [r2, #84]	; 0x54
   130dc:	str	r0, [r2, #80]	; 0x50
   130e0:	movw	r0, #0
   130e4:	str	r0, [fp, #-4]
   130e8:	b	1310c <__assert_fail@plt+0x2100>
   130ec:	ldr	r0, [fp, #-8]
   130f0:	ldr	r2, [sp, #16]
   130f4:	ldr	r3, [sp, #20]
   130f8:	ldr	r1, [fp, #8]
   130fc:	mov	ip, sp
   13100:	str	r1, [ip]
   13104:	bl	10f7c <fseeko64@plt>
   13108:	str	r0, [fp, #-4]
   1310c:	ldr	r0, [fp, #-4]
   13110:	mov	sp, fp
   13114:	pop	{fp, pc}
   13118:	push	{fp, lr}
   1311c:	mov	fp, sp
   13120:	sub	sp, sp, #24
   13124:	str	r0, [fp, #-4]
   13128:	ldr	r0, [fp, #-4]
   1312c:	movw	r1, #0
   13130:	cmp	r0, r1
   13134:	bne	13158 <__assert_fail@plt+0x214c>
   13138:	movw	r0, #53568	; 0xd140
   1313c:	movt	r0, #2
   13140:	ldr	r1, [r0]
   13144:	movw	r0, #47884	; 0xbb0c
   13148:	movt	r0, #1
   1314c:	bl	10fd0 <fputs@plt>
   13150:	str	r0, [sp, #8]
   13154:	bl	10fe8 <abort@plt>
   13158:	ldr	r0, [fp, #-4]
   1315c:	movw	r1, #47	; 0x2f
   13160:	bl	10f94 <strrchr@plt>
   13164:	str	r0, [fp, #-8]
   13168:	ldr	r0, [fp, #-8]
   1316c:	movw	r1, #0
   13170:	cmp	r0, r1
   13174:	beq	13188 <__assert_fail@plt+0x217c>
   13178:	ldr	r0, [fp, #-8]
   1317c:	add	r0, r0, #1
   13180:	str	r0, [sp, #4]
   13184:	b	13190 <__assert_fail@plt+0x2184>
   13188:	ldr	r0, [fp, #-4]
   1318c:	str	r0, [sp, #4]
   13190:	ldr	r0, [sp, #4]
   13194:	str	r0, [sp, #12]
   13198:	ldr	r0, [sp, #12]
   1319c:	ldr	r1, [fp, #-4]
   131a0:	sub	r0, r0, r1
   131a4:	cmp	r0, #7
   131a8:	blt	13214 <__assert_fail@plt+0x2208>
   131ac:	ldr	r0, [sp, #12]
   131b0:	mvn	r1, #6
   131b4:	add	r0, r0, r1
   131b8:	movw	r1, #47940	; 0xbb44
   131bc:	movt	r1, #1
   131c0:	movw	r2, #7
   131c4:	bl	10fdc <strncmp@plt>
   131c8:	cmp	r0, #0
   131cc:	bne	13214 <__assert_fail@plt+0x2208>
   131d0:	ldr	r0, [sp, #12]
   131d4:	str	r0, [fp, #-4]
   131d8:	ldr	r0, [sp, #12]
   131dc:	movw	r1, #47948	; 0xbb4c
   131e0:	movt	r1, #1
   131e4:	movw	r2, #3
   131e8:	bl	10fdc <strncmp@plt>
   131ec:	cmp	r0, #0
   131f0:	bne	13210 <__assert_fail@plt+0x2204>
   131f4:	ldr	r0, [sp, #12]
   131f8:	add	r0, r0, #3
   131fc:	str	r0, [fp, #-4]
   13200:	ldr	r0, [fp, #-4]
   13204:	movw	r1, #53552	; 0xd130
   13208:	movt	r1, #2
   1320c:	str	r0, [r1]
   13210:	b	13214 <__assert_fail@plt+0x2208>
   13214:	ldr	r0, [fp, #-4]
   13218:	movw	r1, #53660	; 0xd19c
   1321c:	movt	r1, #2
   13220:	str	r0, [r1]
   13224:	ldr	r0, [fp, #-4]
   13228:	movw	r1, #53556	; 0xd134
   1322c:	movt	r1, #2
   13230:	str	r0, [r1]
   13234:	mov	sp, fp
   13238:	pop	{fp, pc}
   1323c:	push	{fp, lr}
   13240:	mov	fp, sp
   13244:	sub	sp, sp, #24
   13248:	str	r0, [fp, #-4]
   1324c:	bl	10f40 <__errno_location@plt>
   13250:	ldr	r0, [r0]
   13254:	str	r0, [fp, #-8]
   13258:	ldr	r0, [fp, #-4]
   1325c:	movw	r1, #0
   13260:	cmp	r0, r1
   13264:	beq	13274 <__assert_fail@plt+0x2268>
   13268:	ldr	r0, [fp, #-4]
   1326c:	str	r0, [sp, #8]
   13270:	b	13284 <__assert_fail@plt+0x2278>
   13274:	movw	r0, #53664	; 0xd1a0
   13278:	movt	r0, #2
   1327c:	str	r0, [sp, #8]
   13280:	b	13284 <__assert_fail@plt+0x2278>
   13284:	ldr	r0, [sp, #8]
   13288:	movw	r1, #48	; 0x30
   1328c:	bl	18db0 <__assert_fail@plt+0x7da4>
   13290:	str	r0, [sp, #12]
   13294:	ldr	r0, [fp, #-8]
   13298:	str	r0, [sp, #4]
   1329c:	bl	10f40 <__errno_location@plt>
   132a0:	ldr	r1, [sp, #4]
   132a4:	str	r1, [r0]
   132a8:	ldr	r0, [sp, #12]
   132ac:	mov	sp, fp
   132b0:	pop	{fp, pc}
   132b4:	sub	sp, sp, #8
   132b8:	str	r0, [sp, #4]
   132bc:	ldr	r0, [sp, #4]
   132c0:	movw	r1, #0
   132c4:	cmp	r0, r1
   132c8:	beq	132d8 <__assert_fail@plt+0x22cc>
   132cc:	ldr	r0, [sp, #4]
   132d0:	str	r0, [sp]
   132d4:	b	132e8 <__assert_fail@plt+0x22dc>
   132d8:	movw	r0, #53664	; 0xd1a0
   132dc:	movt	r0, #2
   132e0:	str	r0, [sp]
   132e4:	b	132e8 <__assert_fail@plt+0x22dc>
   132e8:	ldr	r0, [sp]
   132ec:	ldr	r0, [r0]
   132f0:	add	sp, sp, #8
   132f4:	bx	lr
   132f8:	sub	sp, sp, #16
   132fc:	str	r0, [sp, #12]
   13300:	str	r1, [sp, #8]
   13304:	ldr	r0, [sp, #8]
   13308:	ldr	r1, [sp, #12]
   1330c:	movw	r2, #0
   13310:	cmp	r1, r2
   13314:	str	r0, [sp, #4]
   13318:	beq	13328 <__assert_fail@plt+0x231c>
   1331c:	ldr	r0, [sp, #12]
   13320:	str	r0, [sp]
   13324:	b	13338 <__assert_fail@plt+0x232c>
   13328:	movw	r0, #53664	; 0xd1a0
   1332c:	movt	r0, #2
   13330:	str	r0, [sp]
   13334:	b	13338 <__assert_fail@plt+0x232c>
   13338:	ldr	r0, [sp]
   1333c:	ldr	r1, [sp, #4]
   13340:	str	r1, [r0]
   13344:	add	sp, sp, #16
   13348:	bx	lr
   1334c:	sub	sp, sp, #32
   13350:	str	r0, [sp, #28]
   13354:	strb	r1, [sp, #27]
   13358:	str	r2, [sp, #20]
   1335c:	ldrb	r0, [sp, #27]
   13360:	strb	r0, [sp, #19]
   13364:	ldr	r0, [sp, #28]
   13368:	movw	r1, #0
   1336c:	cmp	r0, r1
   13370:	beq	13380 <__assert_fail@plt+0x2374>
   13374:	ldr	r0, [sp, #28]
   13378:	str	r0, [sp]
   1337c:	b	13390 <__assert_fail@plt+0x2384>
   13380:	movw	r0, #53664	; 0xd1a0
   13384:	movt	r0, #2
   13388:	str	r0, [sp]
   1338c:	b	13390 <__assert_fail@plt+0x2384>
   13390:	ldr	r0, [sp]
   13394:	add	r0, r0, #8
   13398:	ldrb	r1, [sp, #19]
   1339c:	lsr	r1, r1, #5
   133a0:	add	r0, r0, r1, lsl #2
   133a4:	str	r0, [sp, #12]
   133a8:	ldrb	r0, [sp, #19]
   133ac:	and	r0, r0, #31
   133b0:	str	r0, [sp, #8]
   133b4:	ldr	r0, [sp, #12]
   133b8:	ldr	r0, [r0]
   133bc:	ldr	r1, [sp, #8]
   133c0:	lsr	r0, r0, r1
   133c4:	and	r0, r0, #1
   133c8:	str	r0, [sp, #4]
   133cc:	ldr	r0, [sp, #20]
   133d0:	and	r0, r0, #1
   133d4:	ldr	r1, [sp, #4]
   133d8:	eor	r0, r0, r1
   133dc:	ldr	r1, [sp, #8]
   133e0:	lsl	r0, r0, r1
   133e4:	ldr	r1, [sp, #12]
   133e8:	ldr	r2, [r1]
   133ec:	eor	r0, r2, r0
   133f0:	str	r0, [r1]
   133f4:	ldr	r0, [sp, #4]
   133f8:	add	sp, sp, #32
   133fc:	bx	lr
   13400:	sub	sp, sp, #12
   13404:	str	r0, [sp, #8]
   13408:	str	r1, [sp, #4]
   1340c:	ldr	r0, [sp, #8]
   13410:	movw	r1, #0
   13414:	cmp	r0, r1
   13418:	bne	13428 <__assert_fail@plt+0x241c>
   1341c:	movw	r0, #53664	; 0xd1a0
   13420:	movt	r0, #2
   13424:	str	r0, [sp, #8]
   13428:	ldr	r0, [sp, #8]
   1342c:	ldr	r0, [r0, #4]
   13430:	str	r0, [sp]
   13434:	ldr	r0, [sp, #4]
   13438:	ldr	r1, [sp, #8]
   1343c:	str	r0, [r1, #4]
   13440:	ldr	r0, [sp]
   13444:	add	sp, sp, #12
   13448:	bx	lr
   1344c:	push	{fp, lr}
   13450:	mov	fp, sp
   13454:	sub	sp, sp, #16
   13458:	str	r0, [fp, #-4]
   1345c:	str	r1, [sp, #8]
   13460:	str	r2, [sp, #4]
   13464:	ldr	r0, [fp, #-4]
   13468:	movw	r1, #0
   1346c:	cmp	r0, r1
   13470:	bne	13480 <__assert_fail@plt+0x2474>
   13474:	movw	r0, #53664	; 0xd1a0
   13478:	movt	r0, #2
   1347c:	str	r0, [fp, #-4]
   13480:	ldr	r0, [fp, #-4]
   13484:	movw	r1, #10
   13488:	str	r1, [r0]
   1348c:	ldr	r0, [sp, #8]
   13490:	movw	r1, #0
   13494:	cmp	r0, r1
   13498:	beq	134ac <__assert_fail@plt+0x24a0>
   1349c:	ldr	r0, [sp, #4]
   134a0:	movw	r1, #0
   134a4:	cmp	r0, r1
   134a8:	bne	134b0 <__assert_fail@plt+0x24a4>
   134ac:	bl	10fe8 <abort@plt>
   134b0:	ldr	r0, [sp, #8]
   134b4:	ldr	r1, [fp, #-4]
   134b8:	str	r0, [r1, #40]	; 0x28
   134bc:	ldr	r0, [sp, #4]
   134c0:	ldr	r1, [fp, #-4]
   134c4:	str	r0, [r1, #44]	; 0x2c
   134c8:	mov	sp, fp
   134cc:	pop	{fp, pc}
   134d0:	push	{r4, r5, r6, sl, fp, lr}
   134d4:	add	fp, sp, #16
   134d8:	sub	sp, sp, #56	; 0x38
   134dc:	ldr	ip, [fp, #8]
   134e0:	str	r0, [fp, #-20]	; 0xffffffec
   134e4:	str	r1, [fp, #-24]	; 0xffffffe8
   134e8:	str	r2, [fp, #-28]	; 0xffffffe4
   134ec:	str	r3, [fp, #-32]	; 0xffffffe0
   134f0:	ldr	r0, [fp, #8]
   134f4:	movw	r1, #0
   134f8:	cmp	r0, r1
   134fc:	beq	1350c <__assert_fail@plt+0x2500>
   13500:	ldr	r0, [fp, #8]
   13504:	str	r0, [sp, #24]
   13508:	b	1351c <__assert_fail@plt+0x2510>
   1350c:	movw	r0, #53664	; 0xd1a0
   13510:	movt	r0, #2
   13514:	str	r0, [sp, #24]
   13518:	b	1351c <__assert_fail@plt+0x2510>
   1351c:	ldr	r0, [sp, #24]
   13520:	str	r0, [sp, #36]	; 0x24
   13524:	bl	10f40 <__errno_location@plt>
   13528:	ldr	r0, [r0]
   1352c:	str	r0, [sp, #32]
   13530:	ldr	r0, [fp, #-20]	; 0xffffffec
   13534:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13538:	ldr	r2, [fp, #-28]	; 0xffffffe4
   1353c:	ldr	r3, [fp, #-32]	; 0xffffffe0
   13540:	ldr	ip, [sp, #36]	; 0x24
   13544:	ldr	ip, [ip]
   13548:	ldr	lr, [sp, #36]	; 0x24
   1354c:	ldr	lr, [lr, #4]
   13550:	ldr	r4, [sp, #36]	; 0x24
   13554:	add	r4, r4, #8
   13558:	ldr	r5, [sp, #36]	; 0x24
   1355c:	ldr	r5, [r5, #40]	; 0x28
   13560:	ldr	r6, [sp, #36]	; 0x24
   13564:	ldr	r6, [r6, #44]	; 0x2c
   13568:	str	ip, [sp]
   1356c:	str	lr, [sp, #4]
   13570:	str	r4, [sp, #8]
   13574:	str	r5, [sp, #12]
   13578:	str	r6, [sp, #16]
   1357c:	bl	135a4 <__assert_fail@plt+0x2598>
   13580:	str	r0, [sp, #28]
   13584:	ldr	r0, [sp, #32]
   13588:	str	r0, [sp, #20]
   1358c:	bl	10f40 <__errno_location@plt>
   13590:	ldr	r1, [sp, #20]
   13594:	str	r1, [r0]
   13598:	ldr	r0, [sp, #28]
   1359c:	sub	sp, fp, #16
   135a0:	pop	{r4, r5, r6, sl, fp, pc}
   135a4:	push	{r4, r5, r6, sl, fp, lr}
   135a8:	add	fp, sp, #16
   135ac:	sub	sp, sp, #160	; 0xa0
   135b0:	ldr	ip, [fp, #24]
   135b4:	ldr	lr, [fp, #20]
   135b8:	ldr	r4, [fp, #16]
   135bc:	ldr	r5, [fp, #12]
   135c0:	ldr	r6, [fp, #8]
   135c4:	str	r0, [fp, #-24]	; 0xffffffe8
   135c8:	str	r1, [fp, #-28]	; 0xffffffe4
   135cc:	str	r2, [fp, #-32]	; 0xffffffe0
   135d0:	str	r3, [fp, #-36]	; 0xffffffdc
   135d4:	movw	r0, #0
   135d8:	str	r0, [fp, #-44]	; 0xffffffd4
   135dc:	str	r0, [fp, #-48]	; 0xffffffd0
   135e0:	str	r0, [fp, #-52]	; 0xffffffcc
   135e4:	str	r0, [fp, #-56]	; 0xffffffc8
   135e8:	movw	r0, #0
   135ec:	strb	r0, [fp, #-57]	; 0xffffffc7
   135f0:	str	ip, [sp, #72]	; 0x48
   135f4:	str	lr, [sp, #68]	; 0x44
   135f8:	str	r4, [sp, #64]	; 0x40
   135fc:	str	r5, [sp, #60]	; 0x3c
   13600:	str	r6, [sp, #56]	; 0x38
   13604:	bl	10e8c <__ctype_get_mb_cur_max@plt>
   13608:	cmp	r0, #1
   1360c:	movw	r0, #0
   13610:	moveq	r0, #1
   13614:	and	r0, r0, #1
   13618:	strb	r0, [fp, #-58]	; 0xffffffc6
   1361c:	ldr	r0, [fp, #12]
   13620:	and	r0, r0, #2
   13624:	cmp	r0, #0
   13628:	movw	r0, #0
   1362c:	movne	r0, #1
   13630:	and	r0, r0, #1
   13634:	strb	r0, [fp, #-59]	; 0xffffffc5
   13638:	movw	r0, #0
   1363c:	strb	r0, [fp, #-60]	; 0xffffffc4
   13640:	strb	r0, [fp, #-61]	; 0xffffffc3
   13644:	movw	r0, #1
   13648:	strb	r0, [fp, #-62]	; 0xffffffc2
   1364c:	ldr	r0, [fp, #8]
   13650:	cmp	r0, #10
   13654:	str	r0, [sp, #52]	; 0x34
   13658:	bhi	13880 <__assert_fail@plt+0x2874>
   1365c:	add	r0, pc, #8
   13660:	ldr	r1, [sp, #52]	; 0x34
   13664:	ldr	r0, [r0, r1, lsl #2]
   13668:	mov	pc, r0
   1366c:	andeq	r3, r1, r4, ror r8
   13670:	strdeq	r3, [r1], -r0
   13674:	andeq	r3, r1, r0, lsl r8
   13678:	andeq	r3, r1, r8, ror #15
   1367c:	strdeq	r3, [r1], -r8
   13680:	andeq	r3, r1, r8, lsr #13
   13684:	muleq	r1, r8, r6
   13688:	andeq	r3, r1, ip, lsl #14
   1368c:	andeq	r3, r1, r0, lsr #14
   13690:	andeq	r3, r1, r0, lsr #14
   13694:	andeq	r3, r1, r0, lsr #14
   13698:	movw	r0, #5
   1369c:	str	r0, [fp, #8]
   136a0:	movw	r0, #1
   136a4:	strb	r0, [fp, #-59]	; 0xffffffc5
   136a8:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   136ac:	tst	r0, #1
   136b0:	bne	136ec <__assert_fail@plt+0x26e0>
   136b4:	b	136b8 <__assert_fail@plt+0x26ac>
   136b8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   136bc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   136c0:	cmp	r0, r1
   136c4:	bcs	136dc <__assert_fail@plt+0x26d0>
   136c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   136cc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   136d0:	add	r0, r0, r1
   136d4:	movw	r1, #34	; 0x22
   136d8:	strb	r1, [r0]
   136dc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   136e0:	add	r0, r0, #1
   136e4:	str	r0, [fp, #-44]	; 0xffffffd4
   136e8:	b	136ec <__assert_fail@plt+0x26e0>
   136ec:	movw	r0, #1
   136f0:	strb	r0, [fp, #-57]	; 0xffffffc7
   136f4:	movw	r0, #48028	; 0xbb9c
   136f8:	movt	r0, #1
   136fc:	str	r0, [fp, #-52]	; 0xffffffcc
   13700:	movw	r0, #1
   13704:	str	r0, [fp, #-56]	; 0xffffffc8
   13708:	b	13884 <__assert_fail@plt+0x2878>
   1370c:	movw	r0, #1
   13710:	strb	r0, [fp, #-57]	; 0xffffffc7
   13714:	movw	r0, #0
   13718:	strb	r0, [fp, #-59]	; 0xffffffc5
   1371c:	b	13884 <__assert_fail@plt+0x2878>
   13720:	ldr	r0, [fp, #8]
   13724:	cmp	r0, #10
   13728:	beq	13754 <__assert_fail@plt+0x2748>
   1372c:	ldr	r1, [fp, #8]
   13730:	movw	r0, #48030	; 0xbb9e
   13734:	movt	r0, #1
   13738:	bl	15798 <__assert_fail@plt+0x478c>
   1373c:	str	r0, [fp, #20]
   13740:	ldr	r1, [fp, #8]
   13744:	movw	r0, #47860	; 0xbaf4
   13748:	movt	r0, #1
   1374c:	bl	15798 <__assert_fail@plt+0x478c>
   13750:	str	r0, [fp, #24]
   13754:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13758:	tst	r0, #1
   1375c:	bne	137c8 <__assert_fail@plt+0x27bc>
   13760:	ldr	r0, [fp, #20]
   13764:	str	r0, [fp, #-52]	; 0xffffffcc
   13768:	ldr	r0, [fp, #-52]	; 0xffffffcc
   1376c:	ldrsb	r0, [r0]
   13770:	cmp	r0, #0
   13774:	beq	137c4 <__assert_fail@plt+0x27b8>
   13778:	b	1377c <__assert_fail@plt+0x2770>
   1377c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13780:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13784:	cmp	r0, r1
   13788:	bcs	137a4 <__assert_fail@plt+0x2798>
   1378c:	ldr	r0, [fp, #-52]	; 0xffffffcc
   13790:	ldrb	r0, [r0]
   13794:	ldr	r1, [fp, #-24]	; 0xffffffe8
   13798:	ldr	r2, [fp, #-44]	; 0xffffffd4
   1379c:	add	r1, r1, r2
   137a0:	strb	r0, [r1]
   137a4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   137a8:	add	r0, r0, #1
   137ac:	str	r0, [fp, #-44]	; 0xffffffd4
   137b0:	b	137b4 <__assert_fail@plt+0x27a8>
   137b4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   137b8:	add	r0, r0, #1
   137bc:	str	r0, [fp, #-52]	; 0xffffffcc
   137c0:	b	13768 <__assert_fail@plt+0x275c>
   137c4:	b	137c8 <__assert_fail@plt+0x27bc>
   137c8:	movw	r0, #1
   137cc:	strb	r0, [fp, #-57]	; 0xffffffc7
   137d0:	ldr	r0, [fp, #24]
   137d4:	str	r0, [fp, #-52]	; 0xffffffcc
   137d8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   137dc:	bl	10f28 <strlen@plt>
   137e0:	str	r0, [fp, #-56]	; 0xffffffc8
   137e4:	b	13884 <__assert_fail@plt+0x2878>
   137e8:	movw	r0, #1
   137ec:	strb	r0, [fp, #-57]	; 0xffffffc7
   137f0:	movw	r0, #1
   137f4:	strb	r0, [fp, #-59]	; 0xffffffc5
   137f8:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   137fc:	tst	r0, #1
   13800:	bne	1380c <__assert_fail@plt+0x2800>
   13804:	movw	r0, #1
   13808:	strb	r0, [fp, #-57]	; 0xffffffc7
   1380c:	b	13810 <__assert_fail@plt+0x2804>
   13810:	movw	r0, #2
   13814:	str	r0, [fp, #8]
   13818:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1381c:	tst	r0, #1
   13820:	bne	1385c <__assert_fail@plt+0x2850>
   13824:	b	13828 <__assert_fail@plt+0x281c>
   13828:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1382c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13830:	cmp	r0, r1
   13834:	bcs	1384c <__assert_fail@plt+0x2840>
   13838:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1383c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13840:	add	r0, r0, r1
   13844:	movw	r1, #39	; 0x27
   13848:	strb	r1, [r0]
   1384c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13850:	add	r0, r0, #1
   13854:	str	r0, [fp, #-44]	; 0xffffffd4
   13858:	b	1385c <__assert_fail@plt+0x2850>
   1385c:	movw	r0, #47860	; 0xbaf4
   13860:	movt	r0, #1
   13864:	str	r0, [fp, #-52]	; 0xffffffcc
   13868:	movw	r0, #1
   1386c:	str	r0, [fp, #-56]	; 0xffffffc8
   13870:	b	13884 <__assert_fail@plt+0x2878>
   13874:	movw	r0, #0
   13878:	strb	r0, [fp, #-59]	; 0xffffffc5
   1387c:	b	13884 <__assert_fail@plt+0x2878>
   13880:	bl	10fe8 <abort@plt>
   13884:	movw	r0, #0
   13888:	str	r0, [fp, #-40]	; 0xffffffd8
   1388c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13890:	cmn	r0, #1
   13894:	bne	138c0 <__assert_fail@plt+0x28b4>
   13898:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1389c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   138a0:	add	r0, r0, r1
   138a4:	ldrb	r0, [r0]
   138a8:	cmp	r0, #0
   138ac:	movw	r0, #0
   138b0:	moveq	r0, #1
   138b4:	and	r0, r0, #1
   138b8:	str	r0, [sp, #48]	; 0x30
   138bc:	b	138dc <__assert_fail@plt+0x28d0>
   138c0:	ldr	r0, [fp, #-40]	; 0xffffffd8
   138c4:	ldr	r1, [fp, #-36]	; 0xffffffdc
   138c8:	cmp	r0, r1
   138cc:	movw	r0, #0
   138d0:	moveq	r0, #1
   138d4:	and	r0, r0, #1
   138d8:	str	r0, [sp, #48]	; 0x30
   138dc:	ldr	r0, [sp, #48]	; 0x30
   138e0:	cmp	r0, #0
   138e4:	movw	r0, #0
   138e8:	movne	r0, #1
   138ec:	mvn	r1, #0
   138f0:	eor	r0, r0, r1
   138f4:	tst	r0, #1
   138f8:	beq	14ae4 <__assert_fail@plt+0x3ad8>
   138fc:	movw	r0, #0
   13900:	strb	r0, [fp, #-65]	; 0xffffffbf
   13904:	strb	r0, [fp, #-66]	; 0xffffffbe
   13908:	strb	r0, [fp, #-67]	; 0xffffffbd
   1390c:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   13910:	tst	r0, #1
   13914:	beq	139c0 <__assert_fail@plt+0x29b4>
   13918:	ldr	r0, [fp, #8]
   1391c:	cmp	r0, #2
   13920:	beq	139c0 <__assert_fail@plt+0x29b4>
   13924:	ldr	r0, [fp, #-56]	; 0xffffffc8
   13928:	cmp	r0, #0
   1392c:	beq	139c0 <__assert_fail@plt+0x29b4>
   13930:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13934:	ldr	r1, [fp, #-56]	; 0xffffffc8
   13938:	add	r0, r0, r1
   1393c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   13940:	cmn	r1, #1
   13944:	str	r0, [sp, #44]	; 0x2c
   13948:	bne	13970 <__assert_fail@plt+0x2964>
   1394c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   13950:	movw	r1, #1
   13954:	cmp	r1, r0
   13958:	bcs	13970 <__assert_fail@plt+0x2964>
   1395c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13960:	bl	10f28 <strlen@plt>
   13964:	str	r0, [fp, #-36]	; 0xffffffdc
   13968:	str	r0, [sp, #40]	; 0x28
   1396c:	b	13978 <__assert_fail@plt+0x296c>
   13970:	ldr	r0, [fp, #-36]	; 0xffffffdc
   13974:	str	r0, [sp, #40]	; 0x28
   13978:	ldr	r0, [sp, #40]	; 0x28
   1397c:	ldr	r1, [sp, #44]	; 0x2c
   13980:	cmp	r1, r0
   13984:	bhi	139c0 <__assert_fail@plt+0x29b4>
   13988:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1398c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13990:	add	r0, r0, r1
   13994:	ldr	r1, [fp, #-52]	; 0xffffffcc
   13998:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1399c:	bl	10e44 <memcmp@plt>
   139a0:	cmp	r0, #0
   139a4:	bne	139c0 <__assert_fail@plt+0x29b4>
   139a8:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   139ac:	tst	r0, #1
   139b0:	beq	139b8 <__assert_fail@plt+0x29ac>
   139b4:	b	14c64 <__assert_fail@plt+0x3c58>
   139b8:	movw	r0, #1
   139bc:	strb	r0, [fp, #-65]	; 0xffffffbf
   139c0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   139c4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   139c8:	ldrb	r0, [r0, r1]
   139cc:	strb	r0, [fp, #-63]	; 0xffffffc1
   139d0:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   139d4:	mov	r1, r0
   139d8:	cmp	r0, #126	; 0x7e
   139dc:	str	r1, [sp, #36]	; 0x24
   139e0:	bhi	14250 <__assert_fail@plt+0x3244>
   139e4:	add	r0, pc, #8
   139e8:	ldr	r1, [sp, #36]	; 0x24
   139ec:	ldr	r0, [r0, r1, lsl #2]
   139f0:	mov	pc, r0
   139f4:	strdeq	r3, [r1], -r0
   139f8:	andeq	r4, r1, r0, asr r2
   139fc:	andeq	r4, r1, r0, asr r2
   13a00:	andeq	r4, r1, r0, asr r2
   13a04:	andeq	r4, r1, r0, asr r2
   13a08:	andeq	r4, r1, r0, asr r2
   13a0c:	andeq	r4, r1, r0, asr r2
   13a10:	strdeq	r3, [r1], -r8
   13a14:	andeq	r4, r1, r4
   13a18:	andeq	r4, r1, r4, lsr r0
   13a1c:	andeq	r4, r1, ip, lsl r0
   13a20:	andeq	r4, r1, r0, asr #32
   13a24:	andeq	r4, r1, r0, lsl r0
   13a28:	andeq	r4, r1, r8, lsr #32
   13a2c:	andeq	r4, r1, r0, asr r2
   13a30:	andeq	r4, r1, r0, asr r2
   13a34:	andeq	r4, r1, r0, asr r2
   13a38:	andeq	r4, r1, r0, asr r2
   13a3c:	andeq	r4, r1, r0, asr r2
   13a40:	andeq	r4, r1, r0, asr r2
   13a44:	andeq	r4, r1, r0, asr r2
   13a48:	andeq	r4, r1, r0, asr r2
   13a4c:	andeq	r4, r1, r0, asr r2
   13a50:	andeq	r4, r1, r0, asr r2
   13a54:	andeq	r4, r1, r0, asr r2
   13a58:	andeq	r4, r1, r0, asr r2
   13a5c:	andeq	r4, r1, r0, asr r2
   13a60:	andeq	r4, r1, r0, asr r2
   13a64:	andeq	r4, r1, r0, asr r2
   13a68:	andeq	r4, r1, r0, asr r2
   13a6c:	andeq	r4, r1, r0, asr r2
   13a70:	andeq	r4, r1, r0, asr r2
   13a74:	andeq	r4, r1, r4, lsr #2
   13a78:	andeq	r4, r1, ip, lsr #2
   13a7c:	andeq	r4, r1, ip, lsr #2
   13a80:	andeq	r4, r1, r0, lsl r1
   13a84:	andeq	r4, r1, ip, lsr #2
   13a88:	andeq	r4, r1, r4, asr #4
   13a8c:	andeq	r4, r1, ip, lsr #2
   13a90:	andeq	r4, r1, ip, asr #2
   13a94:	andeq	r4, r1, ip, lsr #2
   13a98:	andeq	r4, r1, ip, lsr #2
   13a9c:	andeq	r4, r1, ip, lsr #2
   13aa0:	andeq	r4, r1, r4, asr #4
   13aa4:	andeq	r4, r1, r4, asr #4
   13aa8:	andeq	r4, r1, r4, asr #4
   13aac:	andeq	r4, r1, r4, asr #4
   13ab0:	andeq	r4, r1, r4, asr #4
   13ab4:	andeq	r4, r1, r4, asr #4
   13ab8:	andeq	r4, r1, r4, asr #4
   13abc:	andeq	r4, r1, r4, asr #4
   13ac0:	andeq	r4, r1, r4, asr #4
   13ac4:	andeq	r4, r1, r4, asr #4
   13ac8:	andeq	r4, r1, r4, asr #4
   13acc:	andeq	r4, r1, r4, asr #4
   13ad0:	andeq	r4, r1, r4, asr #4
   13ad4:	andeq	r4, r1, r4, asr #4
   13ad8:	andeq	r4, r1, r4, asr #4
   13adc:	andeq	r4, r1, r4, asr #4
   13ae0:	andeq	r4, r1, ip, lsr #2
   13ae4:	andeq	r4, r1, ip, lsr #2
   13ae8:	andeq	r4, r1, ip, lsr #2
   13aec:	andeq	r4, r1, ip, lsr #2
   13af0:	strdeq	r3, [r1], -ip
   13af4:	andeq	r4, r1, r0, asr r2
   13af8:	andeq	r4, r1, r4, asr #4
   13afc:	andeq	r4, r1, r4, asr #4
   13b00:	andeq	r4, r1, r4, asr #4
   13b04:	andeq	r4, r1, r4, asr #4
   13b08:	andeq	r4, r1, r4, asr #4
   13b0c:	andeq	r4, r1, r4, asr #4
   13b10:	andeq	r4, r1, r4, asr #4
   13b14:	andeq	r4, r1, r4, asr #4
   13b18:	andeq	r4, r1, r4, asr #4
   13b1c:	andeq	r4, r1, r4, asr #4
   13b20:	andeq	r4, r1, r4, asr #4
   13b24:	andeq	r4, r1, r4, asr #4
   13b28:	andeq	r4, r1, r4, asr #4
   13b2c:	andeq	r4, r1, r4, asr #4
   13b30:	andeq	r4, r1, r4, asr #4
   13b34:	andeq	r4, r1, r4, asr #4
   13b38:	andeq	r4, r1, r4, asr #4
   13b3c:	andeq	r4, r1, r4, asr #4
   13b40:	andeq	r4, r1, r4, asr #4
   13b44:	andeq	r4, r1, r4, asr #4
   13b48:	andeq	r4, r1, r4, asr #4
   13b4c:	andeq	r4, r1, r4, asr #4
   13b50:	andeq	r4, r1, r4, asr #4
   13b54:	andeq	r4, r1, r4, asr #4
   13b58:	andeq	r4, r1, r4, asr #4
   13b5c:	andeq	r4, r1, r4, asr #4
   13b60:	andeq	r4, r1, ip, lsr #2
   13b64:	andeq	r4, r1, ip, asr #32
   13b68:	andeq	r4, r1, r4, asr #4
   13b6c:	andeq	r4, r1, ip, lsr #2
   13b70:	andeq	r4, r1, r4, asr #4
   13b74:	andeq	r4, r1, ip, lsr #2
   13b78:	andeq	r4, r1, r4, asr #4
   13b7c:	andeq	r4, r1, r4, asr #4
   13b80:	andeq	r4, r1, r4, asr #4
   13b84:	andeq	r4, r1, r4, asr #4
   13b88:	andeq	r4, r1, r4, asr #4
   13b8c:	andeq	r4, r1, r4, asr #4
   13b90:	andeq	r4, r1, r4, asr #4
   13b94:	andeq	r4, r1, r4, asr #4
   13b98:	andeq	r4, r1, r4, asr #4
   13b9c:	andeq	r4, r1, r4, asr #4
   13ba0:	andeq	r4, r1, r4, asr #4
   13ba4:	andeq	r4, r1, r4, asr #4
   13ba8:	andeq	r4, r1, r4, asr #4
   13bac:	andeq	r4, r1, r4, asr #4
   13bb0:	andeq	r4, r1, r4, asr #4
   13bb4:	andeq	r4, r1, r4, asr #4
   13bb8:	andeq	r4, r1, r4, asr #4
   13bbc:	andeq	r4, r1, r4, asr #4
   13bc0:	andeq	r4, r1, r4, asr #4
   13bc4:	andeq	r4, r1, r4, asr #4
   13bc8:	andeq	r4, r1, r4, asr #4
   13bcc:	andeq	r4, r1, r4, asr #4
   13bd0:	andeq	r4, r1, r4, asr #4
   13bd4:	andeq	r4, r1, r4, asr #4
   13bd8:	andeq	r4, r1, r4, asr #4
   13bdc:	andeq	r4, r1, r4, asr #4
   13be0:	ldrdeq	r4, [r1], -ip
   13be4:	andeq	r4, r1, ip, lsr #2
   13be8:	ldrdeq	r4, [r1], -ip
   13bec:	andeq	r4, r1, r0, lsl r1
   13bf0:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   13bf4:	tst	r0, #1
   13bf8:	beq	13de0 <__assert_fail@plt+0x2dd4>
   13bfc:	b	13c00 <__assert_fail@plt+0x2bf4>
   13c00:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13c04:	tst	r0, #1
   13c08:	beq	13c10 <__assert_fail@plt+0x2c04>
   13c0c:	b	14c64 <__assert_fail@plt+0x3c58>
   13c10:	movw	r0, #1
   13c14:	strb	r0, [fp, #-66]	; 0xffffffbe
   13c18:	ldr	r0, [fp, #8]
   13c1c:	cmp	r0, #2
   13c20:	bne	13cd4 <__assert_fail@plt+0x2cc8>
   13c24:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   13c28:	tst	r0, #1
   13c2c:	bne	13cd4 <__assert_fail@plt+0x2cc8>
   13c30:	b	13c34 <__assert_fail@plt+0x2c28>
   13c34:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13c38:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13c3c:	cmp	r0, r1
   13c40:	bcs	13c58 <__assert_fail@plt+0x2c4c>
   13c44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13c48:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13c4c:	add	r0, r0, r1
   13c50:	movw	r1, #39	; 0x27
   13c54:	strb	r1, [r0]
   13c58:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13c5c:	add	r0, r0, #1
   13c60:	str	r0, [fp, #-44]	; 0xffffffd4
   13c64:	b	13c68 <__assert_fail@plt+0x2c5c>
   13c68:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13c6c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13c70:	cmp	r0, r1
   13c74:	bcs	13c8c <__assert_fail@plt+0x2c80>
   13c78:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13c7c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13c80:	add	r0, r0, r1
   13c84:	movw	r1, #36	; 0x24
   13c88:	strb	r1, [r0]
   13c8c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13c90:	add	r0, r0, #1
   13c94:	str	r0, [fp, #-44]	; 0xffffffd4
   13c98:	b	13c9c <__assert_fail@plt+0x2c90>
   13c9c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13ca0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13ca4:	cmp	r0, r1
   13ca8:	bcs	13cc0 <__assert_fail@plt+0x2cb4>
   13cac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13cb0:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13cb4:	add	r0, r0, r1
   13cb8:	movw	r1, #39	; 0x27
   13cbc:	strb	r1, [r0]
   13cc0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13cc4:	add	r0, r0, #1
   13cc8:	str	r0, [fp, #-44]	; 0xffffffd4
   13ccc:	movw	r0, #1
   13cd0:	strb	r0, [fp, #-60]	; 0xffffffc4
   13cd4:	b	13cd8 <__assert_fail@plt+0x2ccc>
   13cd8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13cdc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13ce0:	cmp	r0, r1
   13ce4:	bcs	13cfc <__assert_fail@plt+0x2cf0>
   13ce8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13cec:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13cf0:	add	r0, r0, r1
   13cf4:	movw	r1, #92	; 0x5c
   13cf8:	strb	r1, [r0]
   13cfc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13d00:	add	r0, r0, #1
   13d04:	str	r0, [fp, #-44]	; 0xffffffd4
   13d08:	b	13d0c <__assert_fail@plt+0x2d00>
   13d0c:	ldr	r0, [fp, #8]
   13d10:	cmp	r0, #2
   13d14:	beq	13dd4 <__assert_fail@plt+0x2dc8>
   13d18:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13d1c:	add	r0, r0, #1
   13d20:	ldr	r1, [fp, #-36]	; 0xffffffdc
   13d24:	cmp	r0, r1
   13d28:	bcs	13dd4 <__assert_fail@plt+0x2dc8>
   13d2c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13d30:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13d34:	add	r1, r1, #1
   13d38:	add	r0, r0, r1
   13d3c:	ldrb	r0, [r0]
   13d40:	movw	r1, #48	; 0x30
   13d44:	cmp	r1, r0
   13d48:	bgt	13dd4 <__assert_fail@plt+0x2dc8>
   13d4c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13d50:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13d54:	add	r1, r1, #1
   13d58:	add	r0, r0, r1
   13d5c:	ldrb	r0, [r0]
   13d60:	cmp	r0, #57	; 0x39
   13d64:	bgt	13dd4 <__assert_fail@plt+0x2dc8>
   13d68:	b	13d6c <__assert_fail@plt+0x2d60>
   13d6c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13d70:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13d74:	cmp	r0, r1
   13d78:	bcs	13d90 <__assert_fail@plt+0x2d84>
   13d7c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13d80:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13d84:	add	r0, r0, r1
   13d88:	movw	r1, #48	; 0x30
   13d8c:	strb	r1, [r0]
   13d90:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13d94:	add	r0, r0, #1
   13d98:	str	r0, [fp, #-44]	; 0xffffffd4
   13d9c:	b	13da0 <__assert_fail@plt+0x2d94>
   13da0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13da4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13da8:	cmp	r0, r1
   13dac:	bcs	13dc4 <__assert_fail@plt+0x2db8>
   13db0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13db4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13db8:	add	r0, r0, r1
   13dbc:	movw	r1, #48	; 0x30
   13dc0:	strb	r1, [r0]
   13dc4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13dc8:	add	r0, r0, #1
   13dcc:	str	r0, [fp, #-44]	; 0xffffffd4
   13dd0:	b	13dd4 <__assert_fail@plt+0x2dc8>
   13dd4:	movw	r0, #48	; 0x30
   13dd8:	strb	r0, [fp, #-63]	; 0xffffffc1
   13ddc:	b	13df8 <__assert_fail@plt+0x2dec>
   13de0:	ldr	r0, [fp, #12]
   13de4:	and	r0, r0, #1
   13de8:	cmp	r0, #0
   13dec:	beq	13df4 <__assert_fail@plt+0x2de8>
   13df0:	b	14ad4 <__assert_fail@plt+0x3ac8>
   13df4:	b	13df8 <__assert_fail@plt+0x2dec>
   13df8:	b	14870 <__assert_fail@plt+0x3864>
   13dfc:	ldr	r0, [fp, #8]
   13e00:	cmp	r0, #2
   13e04:	str	r0, [sp, #32]
   13e08:	beq	13e20 <__assert_fail@plt+0x2e14>
   13e0c:	b	13e10 <__assert_fail@plt+0x2e04>
   13e10:	ldr	r0, [sp, #32]
   13e14:	cmp	r0, #5
   13e18:	beq	13e34 <__assert_fail@plt+0x2e28>
   13e1c:	b	13ff0 <__assert_fail@plt+0x2fe4>
   13e20:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13e24:	tst	r0, #1
   13e28:	beq	13e30 <__assert_fail@plt+0x2e24>
   13e2c:	b	14c64 <__assert_fail@plt+0x3c58>
   13e30:	b	13ff4 <__assert_fail@plt+0x2fe8>
   13e34:	ldr	r0, [fp, #12]
   13e38:	and	r0, r0, #4
   13e3c:	cmp	r0, #0
   13e40:	beq	13fec <__assert_fail@plt+0x2fe0>
   13e44:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13e48:	add	r0, r0, #2
   13e4c:	ldr	r1, [fp, #-36]	; 0xffffffdc
   13e50:	cmp	r0, r1
   13e54:	bcs	13fec <__assert_fail@plt+0x2fe0>
   13e58:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13e5c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13e60:	add	r1, r1, #1
   13e64:	add	r0, r0, r1
   13e68:	ldrb	r0, [r0]
   13e6c:	cmp	r0, #63	; 0x3f
   13e70:	bne	13fec <__assert_fail@plt+0x2fe0>
   13e74:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13e78:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13e7c:	add	r0, r1, r0
   13e80:	ldrb	r0, [r0, #2]
   13e84:	mov	r1, r0
   13e88:	cmp	r0, #33	; 0x21
   13e8c:	str	r1, [sp, #28]
   13e90:	beq	13ee0 <__assert_fail@plt+0x2ed4>
   13e94:	b	13e98 <__assert_fail@plt+0x2e8c>
   13e98:	ldr	r0, [sp, #28]
   13e9c:	sub	r1, r0, #39	; 0x27
   13ea0:	cmp	r1, #3
   13ea4:	bcc	13ee0 <__assert_fail@plt+0x2ed4>
   13ea8:	b	13eac <__assert_fail@plt+0x2ea0>
   13eac:	ldr	r0, [sp, #28]
   13eb0:	cmp	r0, #45	; 0x2d
   13eb4:	beq	13ee0 <__assert_fail@plt+0x2ed4>
   13eb8:	b	13ebc <__assert_fail@plt+0x2eb0>
   13ebc:	ldr	r0, [sp, #28]
   13ec0:	cmp	r0, #47	; 0x2f
   13ec4:	beq	13ee0 <__assert_fail@plt+0x2ed4>
   13ec8:	b	13ecc <__assert_fail@plt+0x2ec0>
   13ecc:	ldr	r0, [sp, #28]
   13ed0:	sub	r1, r0, #60	; 0x3c
   13ed4:	cmp	r1, #2
   13ed8:	bhi	13fe4 <__assert_fail@plt+0x2fd8>
   13edc:	b	13ee0 <__assert_fail@plt+0x2ed4>
   13ee0:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   13ee4:	tst	r0, #1
   13ee8:	beq	13ef0 <__assert_fail@plt+0x2ee4>
   13eec:	b	14c64 <__assert_fail@plt+0x3c58>
   13ef0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13ef4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   13ef8:	add	r1, r1, #2
   13efc:	add	r0, r0, r1
   13f00:	ldrb	r0, [r0]
   13f04:	strb	r0, [fp, #-63]	; 0xffffffc1
   13f08:	ldr	r0, [fp, #-40]	; 0xffffffd8
   13f0c:	add	r0, r0, #2
   13f10:	str	r0, [fp, #-40]	; 0xffffffd8
   13f14:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13f18:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13f1c:	cmp	r0, r1
   13f20:	bcs	13f38 <__assert_fail@plt+0x2f2c>
   13f24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13f28:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13f2c:	add	r0, r0, r1
   13f30:	movw	r1, #63	; 0x3f
   13f34:	strb	r1, [r0]
   13f38:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13f3c:	add	r0, r0, #1
   13f40:	str	r0, [fp, #-44]	; 0xffffffd4
   13f44:	b	13f48 <__assert_fail@plt+0x2f3c>
   13f48:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13f4c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13f50:	cmp	r0, r1
   13f54:	bcs	13f6c <__assert_fail@plt+0x2f60>
   13f58:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13f5c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13f60:	add	r0, r0, r1
   13f64:	movw	r1, #34	; 0x22
   13f68:	strb	r1, [r0]
   13f6c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13f70:	add	r0, r0, #1
   13f74:	str	r0, [fp, #-44]	; 0xffffffd4
   13f78:	b	13f7c <__assert_fail@plt+0x2f70>
   13f7c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13f80:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13f84:	cmp	r0, r1
   13f88:	bcs	13fa0 <__assert_fail@plt+0x2f94>
   13f8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13f90:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13f94:	add	r0, r0, r1
   13f98:	movw	r1, #34	; 0x22
   13f9c:	strb	r1, [r0]
   13fa0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13fa4:	add	r0, r0, #1
   13fa8:	str	r0, [fp, #-44]	; 0xffffffd4
   13fac:	b	13fb0 <__assert_fail@plt+0x2fa4>
   13fb0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13fb4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   13fb8:	cmp	r0, r1
   13fbc:	bcs	13fd4 <__assert_fail@plt+0x2fc8>
   13fc0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   13fc4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   13fc8:	add	r0, r0, r1
   13fcc:	movw	r1, #63	; 0x3f
   13fd0:	strb	r1, [r0]
   13fd4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13fd8:	add	r0, r0, #1
   13fdc:	str	r0, [fp, #-44]	; 0xffffffd4
   13fe0:	b	13fe8 <__assert_fail@plt+0x2fdc>
   13fe4:	b	13fe8 <__assert_fail@plt+0x2fdc>
   13fe8:	b	13fec <__assert_fail@plt+0x2fe0>
   13fec:	b	13ff4 <__assert_fail@plt+0x2fe8>
   13ff0:	b	13ff4 <__assert_fail@plt+0x2fe8>
   13ff4:	b	14870 <__assert_fail@plt+0x3864>
   13ff8:	movw	r0, #97	; 0x61
   13ffc:	strb	r0, [fp, #-64]	; 0xffffffc0
   14000:	b	140c0 <__assert_fail@plt+0x30b4>
   14004:	movw	r0, #98	; 0x62
   14008:	strb	r0, [fp, #-64]	; 0xffffffc0
   1400c:	b	140c0 <__assert_fail@plt+0x30b4>
   14010:	movw	r0, #102	; 0x66
   14014:	strb	r0, [fp, #-64]	; 0xffffffc0
   14018:	b	140c0 <__assert_fail@plt+0x30b4>
   1401c:	movw	r0, #110	; 0x6e
   14020:	strb	r0, [fp, #-64]	; 0xffffffc0
   14024:	b	140a0 <__assert_fail@plt+0x3094>
   14028:	movw	r0, #114	; 0x72
   1402c:	strb	r0, [fp, #-64]	; 0xffffffc0
   14030:	b	140a0 <__assert_fail@plt+0x3094>
   14034:	movw	r0, #116	; 0x74
   14038:	strb	r0, [fp, #-64]	; 0xffffffc0
   1403c:	b	140a0 <__assert_fail@plt+0x3094>
   14040:	movw	r0, #118	; 0x76
   14044:	strb	r0, [fp, #-64]	; 0xffffffc0
   14048:	b	140c0 <__assert_fail@plt+0x30b4>
   1404c:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   14050:	strb	r0, [fp, #-64]	; 0xffffffc0
   14054:	ldr	r0, [fp, #8]
   14058:	cmp	r0, #2
   1405c:	bne	14074 <__assert_fail@plt+0x3068>
   14060:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14064:	tst	r0, #1
   14068:	beq	14070 <__assert_fail@plt+0x3064>
   1406c:	b	14c64 <__assert_fail@plt+0x3c58>
   14070:	b	149f8 <__assert_fail@plt+0x39ec>
   14074:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   14078:	tst	r0, #1
   1407c:	beq	1409c <__assert_fail@plt+0x3090>
   14080:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14084:	tst	r0, #1
   14088:	beq	1409c <__assert_fail@plt+0x3090>
   1408c:	ldr	r0, [fp, #-56]	; 0xffffffc8
   14090:	cmp	r0, #0
   14094:	beq	1409c <__assert_fail@plt+0x3090>
   14098:	b	149f8 <__assert_fail@plt+0x39ec>
   1409c:	b	140a0 <__assert_fail@plt+0x3094>
   140a0:	ldr	r0, [fp, #8]
   140a4:	cmp	r0, #2
   140a8:	bne	140bc <__assert_fail@plt+0x30b0>
   140ac:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   140b0:	tst	r0, #1
   140b4:	beq	140bc <__assert_fail@plt+0x30b0>
   140b8:	b	14c64 <__assert_fail@plt+0x3c58>
   140bc:	b	140c0 <__assert_fail@plt+0x30b4>
   140c0:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   140c4:	tst	r0, #1
   140c8:	beq	140d8 <__assert_fail@plt+0x30cc>
   140cc:	ldrb	r0, [fp, #-64]	; 0xffffffc0
   140d0:	strb	r0, [fp, #-63]	; 0xffffffc1
   140d4:	b	148e4 <__assert_fail@plt+0x38d8>
   140d8:	b	14870 <__assert_fail@plt+0x3864>
   140dc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   140e0:	cmn	r0, #1
   140e4:	bne	140fc <__assert_fail@plt+0x30f0>
   140e8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   140ec:	ldrb	r0, [r0, #1]
   140f0:	cmp	r0, #0
   140f4:	beq	1410c <__assert_fail@plt+0x3100>
   140f8:	b	14108 <__assert_fail@plt+0x30fc>
   140fc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14100:	cmp	r0, #1
   14104:	beq	1410c <__assert_fail@plt+0x3100>
   14108:	b	14870 <__assert_fail@plt+0x3864>
   1410c:	b	14110 <__assert_fail@plt+0x3104>
   14110:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14114:	cmp	r0, #0
   14118:	beq	14120 <__assert_fail@plt+0x3114>
   1411c:	b	14870 <__assert_fail@plt+0x3864>
   14120:	b	14124 <__assert_fail@plt+0x3118>
   14124:	movw	r0, #1
   14128:	strb	r0, [fp, #-67]	; 0xffffffbd
   1412c:	ldr	r0, [fp, #8]
   14130:	cmp	r0, #2
   14134:	bne	14148 <__assert_fail@plt+0x313c>
   14138:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1413c:	tst	r0, #1
   14140:	beq	14148 <__assert_fail@plt+0x313c>
   14144:	b	14c64 <__assert_fail@plt+0x3c58>
   14148:	b	14870 <__assert_fail@plt+0x3864>
   1414c:	movw	r0, #1
   14150:	strb	r0, [fp, #-61]	; 0xffffffc3
   14154:	strb	r0, [fp, #-67]	; 0xffffffbd
   14158:	ldr	r0, [fp, #8]
   1415c:	cmp	r0, #2
   14160:	bne	14240 <__assert_fail@plt+0x3234>
   14164:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14168:	tst	r0, #1
   1416c:	beq	14174 <__assert_fail@plt+0x3168>
   14170:	b	14c64 <__assert_fail@plt+0x3c58>
   14174:	ldr	r0, [fp, #-28]	; 0xffffffe4
   14178:	cmp	r0, #0
   1417c:	beq	1419c <__assert_fail@plt+0x3190>
   14180:	ldr	r0, [fp, #-48]	; 0xffffffd0
   14184:	cmp	r0, #0
   14188:	bne	1419c <__assert_fail@plt+0x3190>
   1418c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   14190:	str	r0, [fp, #-48]	; 0xffffffd0
   14194:	movw	r0, #0
   14198:	str	r0, [fp, #-28]	; 0xffffffe4
   1419c:	b	141a0 <__assert_fail@plt+0x3194>
   141a0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   141a4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   141a8:	cmp	r0, r1
   141ac:	bcs	141c4 <__assert_fail@plt+0x31b8>
   141b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   141b4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   141b8:	add	r0, r0, r1
   141bc:	movw	r1, #39	; 0x27
   141c0:	strb	r1, [r0]
   141c4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   141c8:	add	r0, r0, #1
   141cc:	str	r0, [fp, #-44]	; 0xffffffd4
   141d0:	b	141d4 <__assert_fail@plt+0x31c8>
   141d4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   141d8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   141dc:	cmp	r0, r1
   141e0:	bcs	141f8 <__assert_fail@plt+0x31ec>
   141e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   141e8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   141ec:	add	r0, r0, r1
   141f0:	movw	r1, #92	; 0x5c
   141f4:	strb	r1, [r0]
   141f8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   141fc:	add	r0, r0, #1
   14200:	str	r0, [fp, #-44]	; 0xffffffd4
   14204:	b	14208 <__assert_fail@plt+0x31fc>
   14208:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1420c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14210:	cmp	r0, r1
   14214:	bcs	1422c <__assert_fail@plt+0x3220>
   14218:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1421c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14220:	add	r0, r0, r1
   14224:	movw	r1, #39	; 0x27
   14228:	strb	r1, [r0]
   1422c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14230:	add	r0, r0, #1
   14234:	str	r0, [fp, #-44]	; 0xffffffd4
   14238:	movw	r0, #0
   1423c:	strb	r0, [fp, #-60]	; 0xffffffc4
   14240:	b	14870 <__assert_fail@plt+0x3864>
   14244:	movw	r0, #1
   14248:	strb	r0, [fp, #-67]	; 0xffffffbd
   1424c:	b	14870 <__assert_fail@plt+0x3864>
   14250:	ldrb	r0, [fp, #-58]	; 0xffffffc6
   14254:	tst	r0, #1
   14258:	beq	14298 <__assert_fail@plt+0x328c>
   1425c:	mov	r0, #1
   14260:	str	r0, [fp, #-72]	; 0xffffffb8
   14264:	bl	10f04 <__ctype_b_loc@plt>
   14268:	ldr	r0, [r0]
   1426c:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   14270:	mov	r2, r1
   14274:	add	r0, r0, r1, lsl #1
   14278:	ldrh	r0, [r0]
   1427c:	and	r0, r0, #16384	; 0x4000
   14280:	cmp	r0, #0
   14284:	movw	r0, #0
   14288:	movne	r0, #1
   1428c:	and	r0, r0, #1
   14290:	strb	r0, [fp, #-73]	; 0xffffffb7
   14294:	b	14524 <__assert_fail@plt+0x3518>
   14298:	sub	r0, fp, #84	; 0x54
   1429c:	movw	r1, #0
   142a0:	and	r1, r1, #255	; 0xff
   142a4:	movw	r2, #8
   142a8:	bl	10f58 <memset@plt>
   142ac:	movw	r0, #0
   142b0:	str	r0, [fp, #-72]	; 0xffffffb8
   142b4:	movw	r0, #1
   142b8:	strb	r0, [fp, #-73]	; 0xffffffb7
   142bc:	ldr	r0, [fp, #-36]	; 0xffffffdc
   142c0:	cmn	r0, #1
   142c4:	bne	142d4 <__assert_fail@plt+0x32c8>
   142c8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   142cc:	bl	10f28 <strlen@plt>
   142d0:	str	r0, [fp, #-36]	; 0xffffffdc
   142d4:	b	142d8 <__assert_fail@plt+0x32cc>
   142d8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   142dc:	ldr	r1, [fp, #-40]	; 0xffffffd8
   142e0:	ldr	r2, [fp, #-72]	; 0xffffffb8
   142e4:	add	r1, r1, r2
   142e8:	add	r1, r0, r1
   142ec:	ldr	r0, [fp, #-36]	; 0xffffffdc
   142f0:	ldr	r2, [fp, #-40]	; 0xffffffd8
   142f4:	ldr	r3, [fp, #-72]	; 0xffffffb8
   142f8:	add	r2, r2, r3
   142fc:	sub	r2, r0, r2
   14300:	add	r0, sp, #88	; 0x58
   14304:	sub	r3, fp, #84	; 0x54
   14308:	bl	19468 <__assert_fail@plt+0x845c>
   1430c:	str	r0, [sp, #84]	; 0x54
   14310:	ldr	r0, [sp, #84]	; 0x54
   14314:	cmp	r0, #0
   14318:	bne	14320 <__assert_fail@plt+0x3314>
   1431c:	b	14520 <__assert_fail@plt+0x3514>
   14320:	ldr	r0, [sp, #84]	; 0x54
   14324:	cmn	r0, #1
   14328:	bne	14338 <__assert_fail@plt+0x332c>
   1432c:	movw	r0, #0
   14330:	strb	r0, [fp, #-73]	; 0xffffffb7
   14334:	b	14520 <__assert_fail@plt+0x3514>
   14338:	ldr	r0, [sp, #84]	; 0x54
   1433c:	cmn	r0, #2
   14340:	bne	143b4 <__assert_fail@plt+0x33a8>
   14344:	movw	r0, #0
   14348:	strb	r0, [fp, #-73]	; 0xffffffb7
   1434c:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14350:	ldr	r1, [fp, #-72]	; 0xffffffb8
   14354:	add	r0, r0, r1
   14358:	ldr	r1, [fp, #-36]	; 0xffffffdc
   1435c:	cmp	r0, r1
   14360:	movw	r0, #0
   14364:	str	r0, [sp, #24]
   14368:	bcs	14394 <__assert_fail@plt+0x3388>
   1436c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14370:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14374:	ldr	r2, [fp, #-72]	; 0xffffffb8
   14378:	add	r1, r1, r2
   1437c:	add	r0, r0, r1
   14380:	ldrb	r0, [r0]
   14384:	cmp	r0, #0
   14388:	movw	r0, #0
   1438c:	movne	r0, #1
   14390:	str	r0, [sp, #24]
   14394:	ldr	r0, [sp, #24]
   14398:	tst	r0, #1
   1439c:	beq	143b0 <__assert_fail@plt+0x33a4>
   143a0:	ldr	r0, [fp, #-72]	; 0xffffffb8
   143a4:	add	r0, r0, #1
   143a8:	str	r0, [fp, #-72]	; 0xffffffb8
   143ac:	b	1434c <__assert_fail@plt+0x3340>
   143b0:	b	14520 <__assert_fail@plt+0x3514>
   143b4:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   143b8:	tst	r0, #1
   143bc:	beq	144c8 <__assert_fail@plt+0x34bc>
   143c0:	ldr	r0, [fp, #8]
   143c4:	cmp	r0, #2
   143c8:	bne	144c8 <__assert_fail@plt+0x34bc>
   143cc:	movw	r0, #1
   143d0:	str	r0, [sp, #80]	; 0x50
   143d4:	ldr	r0, [sp, #80]	; 0x50
   143d8:	ldr	r1, [sp, #84]	; 0x54
   143dc:	cmp	r0, r1
   143e0:	bcs	144c4 <__assert_fail@plt+0x34b8>
   143e4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   143e8:	ldr	r1, [fp, #-40]	; 0xffffffd8
   143ec:	ldr	r2, [fp, #-72]	; 0xffffffb8
   143f0:	add	r1, r1, r2
   143f4:	ldr	r2, [sp, #80]	; 0x50
   143f8:	add	r1, r1, r2
   143fc:	ldrb	r0, [r0, r1]
   14400:	sub	r0, r0, #91	; 0x5b
   14404:	cmp	r0, #33	; 0x21
   14408:	str	r0, [sp, #20]
   1440c:	bhi	144ac <__assert_fail@plt+0x34a0>
   14410:	add	r0, pc, #8
   14414:	ldr	r1, [sp, #20]
   14418:	ldr	r0, [r0, r1, lsl #2]
   1441c:	mov	pc, r0
   14420:	andeq	r4, r1, r8, lsr #9
   14424:	andeq	r4, r1, r8, lsr #9
   14428:	andeq	r4, r1, ip, lsr #9
   1442c:	andeq	r4, r1, r8, lsr #9
   14430:	andeq	r4, r1, ip, lsr #9
   14434:	andeq	r4, r1, r8, lsr #9
   14438:	andeq	r4, r1, ip, lsr #9
   1443c:	andeq	r4, r1, ip, lsr #9
   14440:	andeq	r4, r1, ip, lsr #9
   14444:	andeq	r4, r1, ip, lsr #9
   14448:	andeq	r4, r1, ip, lsr #9
   1444c:	andeq	r4, r1, ip, lsr #9
   14450:	andeq	r4, r1, ip, lsr #9
   14454:	andeq	r4, r1, ip, lsr #9
   14458:	andeq	r4, r1, ip, lsr #9
   1445c:	andeq	r4, r1, ip, lsr #9
   14460:	andeq	r4, r1, ip, lsr #9
   14464:	andeq	r4, r1, ip, lsr #9
   14468:	andeq	r4, r1, ip, lsr #9
   1446c:	andeq	r4, r1, ip, lsr #9
   14470:	andeq	r4, r1, ip, lsr #9
   14474:	andeq	r4, r1, ip, lsr #9
   14478:	andeq	r4, r1, ip, lsr #9
   1447c:	andeq	r4, r1, ip, lsr #9
   14480:	andeq	r4, r1, ip, lsr #9
   14484:	andeq	r4, r1, ip, lsr #9
   14488:	andeq	r4, r1, ip, lsr #9
   1448c:	andeq	r4, r1, ip, lsr #9
   14490:	andeq	r4, r1, ip, lsr #9
   14494:	andeq	r4, r1, ip, lsr #9
   14498:	andeq	r4, r1, ip, lsr #9
   1449c:	andeq	r4, r1, ip, lsr #9
   144a0:	andeq	r4, r1, ip, lsr #9
   144a4:	andeq	r4, r1, r8, lsr #9
   144a8:	b	14c64 <__assert_fail@plt+0x3c58>
   144ac:	b	144b0 <__assert_fail@plt+0x34a4>
   144b0:	b	144b4 <__assert_fail@plt+0x34a8>
   144b4:	ldr	r0, [sp, #80]	; 0x50
   144b8:	add	r0, r0, #1
   144bc:	str	r0, [sp, #80]	; 0x50
   144c0:	b	143d4 <__assert_fail@plt+0x33c8>
   144c4:	b	144c8 <__assert_fail@plt+0x34bc>
   144c8:	ldr	r0, [sp, #88]	; 0x58
   144cc:	bl	10e74 <iswprint@plt>
   144d0:	cmp	r0, #0
   144d4:	bne	144e0 <__assert_fail@plt+0x34d4>
   144d8:	movw	r0, #0
   144dc:	strb	r0, [fp, #-73]	; 0xffffffb7
   144e0:	ldr	r0, [sp, #84]	; 0x54
   144e4:	ldr	r1, [fp, #-72]	; 0xffffffb8
   144e8:	add	r0, r1, r0
   144ec:	str	r0, [fp, #-72]	; 0xffffffb8
   144f0:	b	144f4 <__assert_fail@plt+0x34e8>
   144f4:	b	144f8 <__assert_fail@plt+0x34ec>
   144f8:	b	144fc <__assert_fail@plt+0x34f0>
   144fc:	sub	r0, fp, #84	; 0x54
   14500:	bl	10e38 <mbsinit@plt>
   14504:	cmp	r0, #0
   14508:	movw	r0, #0
   1450c:	movne	r0, #1
   14510:	mvn	r1, #0
   14514:	eor	r0, r0, r1
   14518:	tst	r0, #1
   1451c:	bne	142d8 <__assert_fail@plt+0x32cc>
   14520:	b	14524 <__assert_fail@plt+0x3518>
   14524:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   14528:	and	r0, r0, #1
   1452c:	strb	r0, [fp, #-67]	; 0xffffffbd
   14530:	ldr	r0, [fp, #-72]	; 0xffffffb8
   14534:	movw	r1, #1
   14538:	cmp	r1, r0
   1453c:	bcc	14558 <__assert_fail@plt+0x354c>
   14540:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   14544:	tst	r0, #1
   14548:	beq	1486c <__assert_fail@plt+0x3860>
   1454c:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   14550:	tst	r0, #1
   14554:	bne	1486c <__assert_fail@plt+0x3860>
   14558:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1455c:	ldr	r1, [fp, #-72]	; 0xffffffb8
   14560:	add	r0, r0, r1
   14564:	str	r0, [sp, #76]	; 0x4c
   14568:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   1456c:	tst	r0, #1
   14570:	beq	14720 <__assert_fail@plt+0x3714>
   14574:	ldrb	r0, [fp, #-73]	; 0xffffffb7
   14578:	tst	r0, #1
   1457c:	bne	14720 <__assert_fail@plt+0x3714>
   14580:	b	14584 <__assert_fail@plt+0x3578>
   14584:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14588:	tst	r0, #1
   1458c:	beq	14594 <__assert_fail@plt+0x3588>
   14590:	b	14c64 <__assert_fail@plt+0x3c58>
   14594:	movw	r0, #1
   14598:	strb	r0, [fp, #-66]	; 0xffffffbe
   1459c:	ldr	r0, [fp, #8]
   145a0:	cmp	r0, #2
   145a4:	bne	14658 <__assert_fail@plt+0x364c>
   145a8:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   145ac:	tst	r0, #1
   145b0:	bne	14658 <__assert_fail@plt+0x364c>
   145b4:	b	145b8 <__assert_fail@plt+0x35ac>
   145b8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   145bc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   145c0:	cmp	r0, r1
   145c4:	bcs	145dc <__assert_fail@plt+0x35d0>
   145c8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   145cc:	ldr	r1, [fp, #-44]	; 0xffffffd4
   145d0:	add	r0, r0, r1
   145d4:	movw	r1, #39	; 0x27
   145d8:	strb	r1, [r0]
   145dc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   145e0:	add	r0, r0, #1
   145e4:	str	r0, [fp, #-44]	; 0xffffffd4
   145e8:	b	145ec <__assert_fail@plt+0x35e0>
   145ec:	ldr	r0, [fp, #-44]	; 0xffffffd4
   145f0:	ldr	r1, [fp, #-28]	; 0xffffffe4
   145f4:	cmp	r0, r1
   145f8:	bcs	14610 <__assert_fail@plt+0x3604>
   145fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14600:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14604:	add	r0, r0, r1
   14608:	movw	r1, #36	; 0x24
   1460c:	strb	r1, [r0]
   14610:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14614:	add	r0, r0, #1
   14618:	str	r0, [fp, #-44]	; 0xffffffd4
   1461c:	b	14620 <__assert_fail@plt+0x3614>
   14620:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14624:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14628:	cmp	r0, r1
   1462c:	bcs	14644 <__assert_fail@plt+0x3638>
   14630:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14634:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14638:	add	r0, r0, r1
   1463c:	movw	r1, #39	; 0x27
   14640:	strb	r1, [r0]
   14644:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14648:	add	r0, r0, #1
   1464c:	str	r0, [fp, #-44]	; 0xffffffd4
   14650:	movw	r0, #1
   14654:	strb	r0, [fp, #-60]	; 0xffffffc4
   14658:	b	1465c <__assert_fail@plt+0x3650>
   1465c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14660:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14664:	cmp	r0, r1
   14668:	bcs	14680 <__assert_fail@plt+0x3674>
   1466c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14670:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14674:	add	r0, r0, r1
   14678:	movw	r1, #92	; 0x5c
   1467c:	strb	r1, [r0]
   14680:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14684:	add	r0, r0, #1
   14688:	str	r0, [fp, #-44]	; 0xffffffd4
   1468c:	b	14690 <__assert_fail@plt+0x3684>
   14690:	b	14694 <__assert_fail@plt+0x3688>
   14694:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14698:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1469c:	cmp	r0, r1
   146a0:	bcs	146c0 <__assert_fail@plt+0x36b4>
   146a4:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   146a8:	asr	r0, r0, #6
   146ac:	add	r0, r0, #48	; 0x30
   146b0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   146b4:	ldr	r2, [fp, #-44]	; 0xffffffd4
   146b8:	add	r1, r1, r2
   146bc:	strb	r0, [r1]
   146c0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   146c4:	add	r0, r0, #1
   146c8:	str	r0, [fp, #-44]	; 0xffffffd4
   146cc:	b	146d0 <__assert_fail@plt+0x36c4>
   146d0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   146d4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   146d8:	cmp	r0, r1
   146dc:	bcs	14700 <__assert_fail@plt+0x36f4>
   146e0:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   146e4:	asr	r0, r0, #3
   146e8:	and	r0, r0, #7
   146ec:	add	r0, r0, #48	; 0x30
   146f0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   146f4:	ldr	r2, [fp, #-44]	; 0xffffffd4
   146f8:	add	r1, r1, r2
   146fc:	strb	r0, [r1]
   14700:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14704:	add	r0, r0, #1
   14708:	str	r0, [fp, #-44]	; 0xffffffd4
   1470c:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   14710:	and	r0, r0, #7
   14714:	add	r0, r0, #48	; 0x30
   14718:	strb	r0, [fp, #-63]	; 0xffffffc1
   1471c:	b	1476c <__assert_fail@plt+0x3760>
   14720:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   14724:	tst	r0, #1
   14728:	beq	14768 <__assert_fail@plt+0x375c>
   1472c:	b	14730 <__assert_fail@plt+0x3724>
   14730:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14734:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14738:	cmp	r0, r1
   1473c:	bcs	14754 <__assert_fail@plt+0x3748>
   14740:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14744:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14748:	add	r0, r0, r1
   1474c:	movw	r1, #92	; 0x5c
   14750:	strb	r1, [r0]
   14754:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14758:	add	r0, r0, #1
   1475c:	str	r0, [fp, #-44]	; 0xffffffd4
   14760:	movw	r0, #0
   14764:	strb	r0, [fp, #-65]	; 0xffffffbf
   14768:	b	1476c <__assert_fail@plt+0x3760>
   1476c:	ldr	r0, [sp, #76]	; 0x4c
   14770:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14774:	add	r1, r1, #1
   14778:	cmp	r0, r1
   1477c:	bhi	14784 <__assert_fail@plt+0x3778>
   14780:	b	14868 <__assert_fail@plt+0x385c>
   14784:	b	14788 <__assert_fail@plt+0x377c>
   14788:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   1478c:	tst	r0, #1
   14790:	beq	14810 <__assert_fail@plt+0x3804>
   14794:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   14798:	tst	r0, #1
   1479c:	bne	14810 <__assert_fail@plt+0x3804>
   147a0:	b	147a4 <__assert_fail@plt+0x3798>
   147a4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   147a8:	ldr	r1, [fp, #-28]	; 0xffffffe4
   147ac:	cmp	r0, r1
   147b0:	bcs	147c8 <__assert_fail@plt+0x37bc>
   147b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   147b8:	ldr	r1, [fp, #-44]	; 0xffffffd4
   147bc:	add	r0, r0, r1
   147c0:	movw	r1, #39	; 0x27
   147c4:	strb	r1, [r0]
   147c8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   147cc:	add	r0, r0, #1
   147d0:	str	r0, [fp, #-44]	; 0xffffffd4
   147d4:	b	147d8 <__assert_fail@plt+0x37cc>
   147d8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   147dc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   147e0:	cmp	r0, r1
   147e4:	bcs	147fc <__assert_fail@plt+0x37f0>
   147e8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   147ec:	ldr	r1, [fp, #-44]	; 0xffffffd4
   147f0:	add	r0, r0, r1
   147f4:	movw	r1, #39	; 0x27
   147f8:	strb	r1, [r0]
   147fc:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14800:	add	r0, r0, #1
   14804:	str	r0, [fp, #-44]	; 0xffffffd4
   14808:	movw	r0, #0
   1480c:	strb	r0, [fp, #-60]	; 0xffffffc4
   14810:	b	14814 <__assert_fail@plt+0x3808>
   14814:	b	14818 <__assert_fail@plt+0x380c>
   14818:	ldr	r0, [fp, #-44]	; 0xffffffd4
   1481c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14820:	cmp	r0, r1
   14824:	bcs	1483c <__assert_fail@plt+0x3830>
   14828:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   1482c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14830:	ldr	r2, [fp, #-44]	; 0xffffffd4
   14834:	add	r1, r1, r2
   14838:	strb	r0, [r1]
   1483c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14840:	add	r0, r0, #1
   14844:	str	r0, [fp, #-44]	; 0xffffffd4
   14848:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1484c:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14850:	add	r1, r1, #1
   14854:	str	r1, [fp, #-40]	; 0xffffffd8
   14858:	add	r0, r0, r1
   1485c:	ldrb	r0, [r0]
   14860:	strb	r0, [fp, #-63]	; 0xffffffc1
   14864:	b	14568 <__assert_fail@plt+0x355c>
   14868:	b	149f8 <__assert_fail@plt+0x39ec>
   1486c:	b	14870 <__assert_fail@plt+0x3864>
   14870:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   14874:	tst	r0, #1
   14878:	beq	14888 <__assert_fail@plt+0x387c>
   1487c:	ldr	r0, [fp, #8]
   14880:	cmp	r0, #2
   14884:	bne	14894 <__assert_fail@plt+0x3888>
   14888:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   1488c:	tst	r0, #1
   14890:	beq	148d0 <__assert_fail@plt+0x38c4>
   14894:	ldr	r0, [fp, #16]
   14898:	movw	r1, #0
   1489c:	cmp	r0, r1
   148a0:	beq	148d0 <__assert_fail@plt+0x38c4>
   148a4:	ldr	r0, [fp, #16]
   148a8:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   148ac:	lsr	r1, r1, #5
   148b0:	add	r0, r0, r1, lsl #2
   148b4:	ldr	r0, [r0]
   148b8:	ldrb	r1, [fp, #-63]	; 0xffffffc1
   148bc:	and	r1, r1, #31
   148c0:	lsr	r0, r0, r1
   148c4:	and	r0, r0, #1
   148c8:	cmp	r0, #0
   148cc:	bne	148e0 <__assert_fail@plt+0x38d4>
   148d0:	ldrb	r0, [fp, #-65]	; 0xffffffbf
   148d4:	tst	r0, #1
   148d8:	bne	148e0 <__assert_fail@plt+0x38d4>
   148dc:	b	149f8 <__assert_fail@plt+0x39ec>
   148e0:	b	148e4 <__assert_fail@plt+0x38d8>
   148e4:	b	148e8 <__assert_fail@plt+0x38dc>
   148e8:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   148ec:	tst	r0, #1
   148f0:	beq	148f8 <__assert_fail@plt+0x38ec>
   148f4:	b	14c64 <__assert_fail@plt+0x3c58>
   148f8:	movw	r0, #1
   148fc:	strb	r0, [fp, #-66]	; 0xffffffbe
   14900:	ldr	r0, [fp, #8]
   14904:	cmp	r0, #2
   14908:	bne	149bc <__assert_fail@plt+0x39b0>
   1490c:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   14910:	tst	r0, #1
   14914:	bne	149bc <__assert_fail@plt+0x39b0>
   14918:	b	1491c <__assert_fail@plt+0x3910>
   1491c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14920:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14924:	cmp	r0, r1
   14928:	bcs	14940 <__assert_fail@plt+0x3934>
   1492c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14930:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14934:	add	r0, r0, r1
   14938:	movw	r1, #39	; 0x27
   1493c:	strb	r1, [r0]
   14940:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14944:	add	r0, r0, #1
   14948:	str	r0, [fp, #-44]	; 0xffffffd4
   1494c:	b	14950 <__assert_fail@plt+0x3944>
   14950:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14954:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14958:	cmp	r0, r1
   1495c:	bcs	14974 <__assert_fail@plt+0x3968>
   14960:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14964:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14968:	add	r0, r0, r1
   1496c:	movw	r1, #36	; 0x24
   14970:	strb	r1, [r0]
   14974:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14978:	add	r0, r0, #1
   1497c:	str	r0, [fp, #-44]	; 0xffffffd4
   14980:	b	14984 <__assert_fail@plt+0x3978>
   14984:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14988:	ldr	r1, [fp, #-28]	; 0xffffffe4
   1498c:	cmp	r0, r1
   14990:	bcs	149a8 <__assert_fail@plt+0x399c>
   14994:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14998:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1499c:	add	r0, r0, r1
   149a0:	movw	r1, #39	; 0x27
   149a4:	strb	r1, [r0]
   149a8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   149ac:	add	r0, r0, #1
   149b0:	str	r0, [fp, #-44]	; 0xffffffd4
   149b4:	movw	r0, #1
   149b8:	strb	r0, [fp, #-60]	; 0xffffffc4
   149bc:	b	149c0 <__assert_fail@plt+0x39b4>
   149c0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   149c4:	ldr	r1, [fp, #-28]	; 0xffffffe4
   149c8:	cmp	r0, r1
   149cc:	bcs	149e4 <__assert_fail@plt+0x39d8>
   149d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   149d4:	ldr	r1, [fp, #-44]	; 0xffffffd4
   149d8:	add	r0, r0, r1
   149dc:	movw	r1, #92	; 0x5c
   149e0:	strb	r1, [r0]
   149e4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   149e8:	add	r0, r0, #1
   149ec:	str	r0, [fp, #-44]	; 0xffffffd4
   149f0:	b	149f4 <__assert_fail@plt+0x39e8>
   149f4:	b	149f8 <__assert_fail@plt+0x39ec>
   149f8:	b	149fc <__assert_fail@plt+0x39f0>
   149fc:	ldrb	r0, [fp, #-60]	; 0xffffffc4
   14a00:	tst	r0, #1
   14a04:	beq	14a84 <__assert_fail@plt+0x3a78>
   14a08:	ldrb	r0, [fp, #-66]	; 0xffffffbe
   14a0c:	tst	r0, #1
   14a10:	bne	14a84 <__assert_fail@plt+0x3a78>
   14a14:	b	14a18 <__assert_fail@plt+0x3a0c>
   14a18:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14a1c:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14a20:	cmp	r0, r1
   14a24:	bcs	14a3c <__assert_fail@plt+0x3a30>
   14a28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14a2c:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14a30:	add	r0, r0, r1
   14a34:	movw	r1, #39	; 0x27
   14a38:	strb	r1, [r0]
   14a3c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14a40:	add	r0, r0, #1
   14a44:	str	r0, [fp, #-44]	; 0xffffffd4
   14a48:	b	14a4c <__assert_fail@plt+0x3a40>
   14a4c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14a50:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14a54:	cmp	r0, r1
   14a58:	bcs	14a70 <__assert_fail@plt+0x3a64>
   14a5c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14a60:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14a64:	add	r0, r0, r1
   14a68:	movw	r1, #39	; 0x27
   14a6c:	strb	r1, [r0]
   14a70:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14a74:	add	r0, r0, #1
   14a78:	str	r0, [fp, #-44]	; 0xffffffd4
   14a7c:	movw	r0, #0
   14a80:	strb	r0, [fp, #-60]	; 0xffffffc4
   14a84:	b	14a88 <__assert_fail@plt+0x3a7c>
   14a88:	b	14a8c <__assert_fail@plt+0x3a80>
   14a8c:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14a90:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14a94:	cmp	r0, r1
   14a98:	bcs	14ab0 <__assert_fail@plt+0x3aa4>
   14a9c:	ldrb	r0, [fp, #-63]	; 0xffffffc1
   14aa0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14aa4:	ldr	r2, [fp, #-44]	; 0xffffffd4
   14aa8:	add	r1, r1, r2
   14aac:	strb	r0, [r1]
   14ab0:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14ab4:	add	r0, r0, #1
   14ab8:	str	r0, [fp, #-44]	; 0xffffffd4
   14abc:	ldrb	r0, [fp, #-67]	; 0xffffffbd
   14ac0:	tst	r0, #1
   14ac4:	bne	14ad0 <__assert_fail@plt+0x3ac4>
   14ac8:	movw	r0, #0
   14acc:	strb	r0, [fp, #-62]	; 0xffffffc2
   14ad0:	b	14ad4 <__assert_fail@plt+0x3ac8>
   14ad4:	ldr	r0, [fp, #-40]	; 0xffffffd8
   14ad8:	add	r0, r0, #1
   14adc:	str	r0, [fp, #-40]	; 0xffffffd8
   14ae0:	b	1388c <__assert_fail@plt+0x2880>
   14ae4:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14ae8:	cmp	r0, #0
   14aec:	bne	14b0c <__assert_fail@plt+0x3b00>
   14af0:	ldr	r0, [fp, #8]
   14af4:	cmp	r0, #2
   14af8:	bne	14b0c <__assert_fail@plt+0x3b00>
   14afc:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14b00:	tst	r0, #1
   14b04:	beq	14b0c <__assert_fail@plt+0x3b00>
   14b08:	b	14c64 <__assert_fail@plt+0x3c58>
   14b0c:	ldr	r0, [fp, #8]
   14b10:	cmp	r0, #2
   14b14:	bne	14bb4 <__assert_fail@plt+0x3ba8>
   14b18:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14b1c:	tst	r0, #1
   14b20:	bne	14bb4 <__assert_fail@plt+0x3ba8>
   14b24:	ldrb	r0, [fp, #-61]	; 0xffffffc3
   14b28:	tst	r0, #1
   14b2c:	beq	14bb4 <__assert_fail@plt+0x3ba8>
   14b30:	ldrb	r0, [fp, #-62]	; 0xffffffc2
   14b34:	tst	r0, #1
   14b38:	beq	14b80 <__assert_fail@plt+0x3b74>
   14b3c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14b40:	ldr	r1, [fp, #-48]	; 0xffffffd0
   14b44:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14b48:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14b4c:	ldr	ip, [fp, #12]
   14b50:	ldr	lr, [fp, #16]
   14b54:	ldr	r4, [fp, #20]
   14b58:	ldr	r5, [fp, #24]
   14b5c:	movw	r6, #5
   14b60:	str	r6, [sp]
   14b64:	str	ip, [sp, #4]
   14b68:	str	lr, [sp, #8]
   14b6c:	str	r4, [sp, #12]
   14b70:	str	r5, [sp, #16]
   14b74:	bl	135a4 <__assert_fail@plt+0x2598>
   14b78:	str	r0, [fp, #-20]	; 0xffffffec
   14b7c:	b	14ccc <__assert_fail@plt+0x3cc0>
   14b80:	ldr	r0, [fp, #-28]	; 0xffffffe4
   14b84:	cmp	r0, #0
   14b88:	bne	14bac <__assert_fail@plt+0x3ba0>
   14b8c:	ldr	r0, [fp, #-48]	; 0xffffffd0
   14b90:	cmp	r0, #0
   14b94:	beq	14bac <__assert_fail@plt+0x3ba0>
   14b98:	ldr	r0, [fp, #-48]	; 0xffffffd0
   14b9c:	str	r0, [fp, #-28]	; 0xffffffe4
   14ba0:	movw	r0, #0
   14ba4:	str	r0, [fp, #-44]	; 0xffffffd4
   14ba8:	b	1364c <__assert_fail@plt+0x2640>
   14bac:	b	14bb0 <__assert_fail@plt+0x3ba4>
   14bb0:	b	14bb4 <__assert_fail@plt+0x3ba8>
   14bb4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   14bb8:	movw	r1, #0
   14bbc:	cmp	r0, r1
   14bc0:	beq	14c34 <__assert_fail@plt+0x3c28>
   14bc4:	ldrb	r0, [fp, #-59]	; 0xffffffc5
   14bc8:	tst	r0, #1
   14bcc:	bne	14c34 <__assert_fail@plt+0x3c28>
   14bd0:	b	14bd4 <__assert_fail@plt+0x3bc8>
   14bd4:	ldr	r0, [fp, #-52]	; 0xffffffcc
   14bd8:	ldrsb	r0, [r0]
   14bdc:	cmp	r0, #0
   14be0:	beq	14c30 <__assert_fail@plt+0x3c24>
   14be4:	b	14be8 <__assert_fail@plt+0x3bdc>
   14be8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14bec:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14bf0:	cmp	r0, r1
   14bf4:	bcs	14c10 <__assert_fail@plt+0x3c04>
   14bf8:	ldr	r0, [fp, #-52]	; 0xffffffcc
   14bfc:	ldrb	r0, [r0]
   14c00:	ldr	r1, [fp, #-24]	; 0xffffffe8
   14c04:	ldr	r2, [fp, #-44]	; 0xffffffd4
   14c08:	add	r1, r1, r2
   14c0c:	strb	r0, [r1]
   14c10:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14c14:	add	r0, r0, #1
   14c18:	str	r0, [fp, #-44]	; 0xffffffd4
   14c1c:	b	14c20 <__assert_fail@plt+0x3c14>
   14c20:	ldr	r0, [fp, #-52]	; 0xffffffcc
   14c24:	add	r0, r0, #1
   14c28:	str	r0, [fp, #-52]	; 0xffffffcc
   14c2c:	b	14bd4 <__assert_fail@plt+0x3bc8>
   14c30:	b	14c34 <__assert_fail@plt+0x3c28>
   14c34:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14c38:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14c3c:	cmp	r0, r1
   14c40:	bcs	14c58 <__assert_fail@plt+0x3c4c>
   14c44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14c48:	ldr	r1, [fp, #-44]	; 0xffffffd4
   14c4c:	add	r0, r0, r1
   14c50:	movw	r1, #0
   14c54:	strb	r1, [r0]
   14c58:	ldr	r0, [fp, #-44]	; 0xffffffd4
   14c5c:	str	r0, [fp, #-20]	; 0xffffffec
   14c60:	b	14ccc <__assert_fail@plt+0x3cc0>
   14c64:	ldr	r0, [fp, #8]
   14c68:	cmp	r0, #2
   14c6c:	bne	14c84 <__assert_fail@plt+0x3c78>
   14c70:	ldrb	r0, [fp, #-57]	; 0xffffffc7
   14c74:	tst	r0, #1
   14c78:	beq	14c84 <__assert_fail@plt+0x3c78>
   14c7c:	movw	r0, #4
   14c80:	str	r0, [fp, #8]
   14c84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   14c88:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14c8c:	ldr	r2, [fp, #-32]	; 0xffffffe0
   14c90:	ldr	r3, [fp, #-36]	; 0xffffffdc
   14c94:	ldr	ip, [fp, #8]
   14c98:	ldr	lr, [fp, #12]
   14c9c:	mvn	r4, #2
   14ca0:	and	lr, lr, r4
   14ca4:	ldr	r4, [fp, #20]
   14ca8:	ldr	r5, [fp, #24]
   14cac:	str	ip, [sp]
   14cb0:	str	lr, [sp, #4]
   14cb4:	movw	ip, #0
   14cb8:	str	ip, [sp, #8]
   14cbc:	str	r4, [sp, #12]
   14cc0:	str	r5, [sp, #16]
   14cc4:	bl	135a4 <__assert_fail@plt+0x2598>
   14cc8:	str	r0, [fp, #-20]	; 0xffffffec
   14ccc:	ldr	r0, [fp, #-20]	; 0xffffffec
   14cd0:	sub	sp, fp, #16
   14cd4:	pop	{r4, r5, r6, sl, fp, pc}
   14cd8:	push	{fp, lr}
   14cdc:	mov	fp, sp
   14ce0:	sub	sp, sp, #16
   14ce4:	str	r0, [fp, #-4]
   14ce8:	str	r1, [sp, #8]
   14cec:	str	r2, [sp, #4]
   14cf0:	ldr	r0, [fp, #-4]
   14cf4:	ldr	r1, [sp, #8]
   14cf8:	ldr	r3, [sp, #4]
   14cfc:	movw	r2, #0
   14d00:	bl	14d0c <__assert_fail@plt+0x3d00>
   14d04:	mov	sp, fp
   14d08:	pop	{fp, pc}
   14d0c:	push	{r4, r5, r6, sl, fp, lr}
   14d10:	add	fp, sp, #16
   14d14:	sub	sp, sp, #80	; 0x50
   14d18:	str	r0, [fp, #-20]	; 0xffffffec
   14d1c:	str	r1, [fp, #-24]	; 0xffffffe8
   14d20:	str	r2, [fp, #-28]	; 0xffffffe4
   14d24:	str	r3, [fp, #-32]	; 0xffffffe0
   14d28:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14d2c:	movw	r1, #0
   14d30:	cmp	r0, r1
   14d34:	beq	14d44 <__assert_fail@plt+0x3d38>
   14d38:	ldr	r0, [fp, #-32]	; 0xffffffe0
   14d3c:	str	r0, [sp, #40]	; 0x28
   14d40:	b	14d54 <__assert_fail@plt+0x3d48>
   14d44:	movw	r0, #53664	; 0xd1a0
   14d48:	movt	r0, #2
   14d4c:	str	r0, [sp, #40]	; 0x28
   14d50:	b	14d54 <__assert_fail@plt+0x3d48>
   14d54:	ldr	r0, [sp, #40]	; 0x28
   14d58:	str	r0, [fp, #-36]	; 0xffffffdc
   14d5c:	bl	10f40 <__errno_location@plt>
   14d60:	ldr	r0, [r0]
   14d64:	str	r0, [fp, #-40]	; 0xffffffd8
   14d68:	ldr	r0, [fp, #-36]	; 0xffffffdc
   14d6c:	ldr	r0, [r0, #4]
   14d70:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14d74:	movw	r2, #0
   14d78:	cmp	r1, r2
   14d7c:	movw	r1, #0
   14d80:	movne	r1, #1
   14d84:	tst	r1, #1
   14d88:	mov	r1, r2
   14d8c:	moveq	r1, #1
   14d90:	orr	r0, r0, r1
   14d94:	str	r0, [fp, #-44]	; 0xffffffd4
   14d98:	ldr	r0, [fp, #-20]	; 0xffffffec
   14d9c:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14da0:	ldr	r1, [fp, #-36]	; 0xffffffdc
   14da4:	ldr	r1, [r1]
   14da8:	ldr	ip, [fp, #-44]	; 0xffffffd4
   14dac:	ldr	lr, [fp, #-36]	; 0xffffffdc
   14db0:	add	lr, lr, #8
   14db4:	ldr	r4, [fp, #-36]	; 0xffffffdc
   14db8:	ldr	r4, [r4, #40]	; 0x28
   14dbc:	ldr	r5, [fp, #-36]	; 0xffffffdc
   14dc0:	ldr	r5, [r5, #44]	; 0x2c
   14dc4:	str	r0, [sp, #36]	; 0x24
   14dc8:	mov	r0, r2
   14dcc:	str	r1, [sp, #32]
   14dd0:	mov	r1, r2
   14dd4:	ldr	r2, [sp, #36]	; 0x24
   14dd8:	ldr	r6, [sp, #32]
   14ddc:	str	r6, [sp]
   14de0:	str	ip, [sp, #4]
   14de4:	str	lr, [sp, #8]
   14de8:	str	r4, [sp, #12]
   14dec:	str	r5, [sp, #16]
   14df0:	bl	135a4 <__assert_fail@plt+0x2598>
   14df4:	add	r0, r0, #1
   14df8:	str	r0, [sp, #48]	; 0x30
   14dfc:	ldr	r0, [sp, #48]	; 0x30
   14e00:	bl	161f0 <__assert_fail@plt+0x51e4>
   14e04:	str	r0, [sp, #44]	; 0x2c
   14e08:	ldr	r0, [sp, #44]	; 0x2c
   14e0c:	ldr	r1, [sp, #48]	; 0x30
   14e10:	ldr	r2, [fp, #-20]	; 0xffffffec
   14e14:	ldr	r3, [fp, #-24]	; 0xffffffe8
   14e18:	ldr	ip, [fp, #-36]	; 0xffffffdc
   14e1c:	ldr	ip, [ip]
   14e20:	ldr	lr, [fp, #-44]	; 0xffffffd4
   14e24:	ldr	r4, [fp, #-36]	; 0xffffffdc
   14e28:	add	r4, r4, #8
   14e2c:	ldr	r5, [fp, #-36]	; 0xffffffdc
   14e30:	ldr	r5, [r5, #40]	; 0x28
   14e34:	ldr	r6, [fp, #-36]	; 0xffffffdc
   14e38:	ldr	r6, [r6, #44]	; 0x2c
   14e3c:	str	ip, [sp]
   14e40:	str	lr, [sp, #4]
   14e44:	str	r4, [sp, #8]
   14e48:	str	r5, [sp, #12]
   14e4c:	str	r6, [sp, #16]
   14e50:	bl	135a4 <__assert_fail@plt+0x2598>
   14e54:	ldr	r1, [fp, #-40]	; 0xffffffd8
   14e58:	str	r0, [sp, #28]
   14e5c:	str	r1, [sp, #24]
   14e60:	bl	10f40 <__errno_location@plt>
   14e64:	ldr	r1, [sp, #24]
   14e68:	str	r1, [r0]
   14e6c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   14e70:	movw	r2, #0
   14e74:	cmp	r0, r2
   14e78:	beq	14e8c <__assert_fail@plt+0x3e80>
   14e7c:	ldr	r0, [sp, #48]	; 0x30
   14e80:	sub	r0, r0, #1
   14e84:	ldr	r1, [fp, #-28]	; 0xffffffe4
   14e88:	str	r0, [r1]
   14e8c:	ldr	r0, [sp, #44]	; 0x2c
   14e90:	sub	sp, fp, #16
   14e94:	pop	{r4, r5, r6, sl, fp, pc}
   14e98:	push	{fp, lr}
   14e9c:	mov	fp, sp
   14ea0:	sub	sp, sp, #8
   14ea4:	movw	r0, #53488	; 0xd0f0
   14ea8:	movt	r0, #2
   14eac:	ldr	r0, [r0]
   14eb0:	str	r0, [sp, #4]
   14eb4:	movw	r0, #1
   14eb8:	str	r0, [sp]
   14ebc:	ldr	r0, [sp]
   14ec0:	movw	r1, #53492	; 0xd0f4
   14ec4:	movt	r1, #2
   14ec8:	ldr	r1, [r1]
   14ecc:	cmp	r0, r1
   14ed0:	bge	14ef8 <__assert_fail@plt+0x3eec>
   14ed4:	ldr	r0, [sp, #4]
   14ed8:	ldr	r1, [sp]
   14edc:	add	r0, r0, r1, lsl #3
   14ee0:	ldr	r0, [r0, #4]
   14ee4:	bl	12fd0 <__assert_fail@plt+0x1fc4>
   14ee8:	ldr	r0, [sp]
   14eec:	add	r0, r0, #1
   14ef0:	str	r0, [sp]
   14ef4:	b	14ebc <__assert_fail@plt+0x3eb0>
   14ef8:	ldr	r0, [sp, #4]
   14efc:	ldr	r0, [r0, #4]
   14f00:	movw	r1, #53712	; 0xd1d0
   14f04:	movt	r1, #2
   14f08:	cmp	r0, r1
   14f0c:	beq	14f38 <__assert_fail@plt+0x3f2c>
   14f10:	ldr	r0, [sp, #4]
   14f14:	ldr	r0, [r0, #4]
   14f18:	bl	12fd0 <__assert_fail@plt+0x1fc4>
   14f1c:	movw	r0, #256	; 0x100
   14f20:	movw	r1, #53496	; 0xd0f8
   14f24:	movt	r1, #2
   14f28:	str	r0, [r1]
   14f2c:	movw	r0, #53712	; 0xd1d0
   14f30:	movt	r0, #2
   14f34:	str	r0, [r1, #4]
   14f38:	ldr	r0, [sp, #4]
   14f3c:	movw	r1, #53496	; 0xd0f8
   14f40:	movt	r1, #2
   14f44:	cmp	r0, r1
   14f48:	beq	14f68 <__assert_fail@plt+0x3f5c>
   14f4c:	ldr	r0, [sp, #4]
   14f50:	bl	12fd0 <__assert_fail@plt+0x1fc4>
   14f54:	movw	r0, #53488	; 0xd0f0
   14f58:	movt	r0, #2
   14f5c:	movw	r1, #53496	; 0xd0f8
   14f60:	movt	r1, #2
   14f64:	str	r1, [r0]
   14f68:	movw	r0, #53492	; 0xd0f4
   14f6c:	movt	r0, #2
   14f70:	movw	r1, #1
   14f74:	str	r1, [r0]
   14f78:	mov	sp, fp
   14f7c:	pop	{fp, pc}
   14f80:	push	{fp, lr}
   14f84:	mov	fp, sp
   14f88:	sub	sp, sp, #8
   14f8c:	str	r0, [sp, #4]
   14f90:	str	r1, [sp]
   14f94:	ldr	r0, [sp, #4]
   14f98:	ldr	r1, [sp]
   14f9c:	mvn	r2, #0
   14fa0:	movw	r3, #53664	; 0xd1a0
   14fa4:	movt	r3, #2
   14fa8:	bl	14fb4 <__assert_fail@plt+0x3fa8>
   14fac:	mov	sp, fp
   14fb0:	pop	{fp, pc}
   14fb4:	push	{r4, r5, r6, sl, fp, lr}
   14fb8:	add	fp, sp, #16
   14fbc:	sub	sp, sp, #80	; 0x50
   14fc0:	str	r0, [fp, #-20]	; 0xffffffec
   14fc4:	str	r1, [fp, #-24]	; 0xffffffe8
   14fc8:	str	r2, [fp, #-28]	; 0xffffffe4
   14fcc:	str	r3, [fp, #-32]	; 0xffffffe0
   14fd0:	bl	10f40 <__errno_location@plt>
   14fd4:	ldr	r1, [pc, #672]	; 1527c <__assert_fail@plt+0x4270>
   14fd8:	ldr	r0, [r0]
   14fdc:	str	r0, [fp, #-36]	; 0xffffffdc
   14fe0:	movw	r0, #53488	; 0xd0f0
   14fe4:	movt	r0, #2
   14fe8:	ldr	r0, [r0]
   14fec:	str	r0, [fp, #-40]	; 0xffffffd8
   14ff0:	str	r1, [fp, #-44]	; 0xffffffd4
   14ff4:	ldr	r0, [fp, #-20]	; 0xffffffec
   14ff8:	movw	r1, #0
   14ffc:	cmp	r1, r0
   15000:	bgt	15014 <__assert_fail@plt+0x4008>
   15004:	ldr	r0, [fp, #-20]	; 0xffffffec
   15008:	ldr	r1, [fp, #-44]	; 0xffffffd4
   1500c:	cmp	r0, r1
   15010:	blt	15018 <__assert_fail@plt+0x400c>
   15014:	bl	10fe8 <abort@plt>
   15018:	movw	r0, #53492	; 0xd0f4
   1501c:	movt	r0, #2
   15020:	ldr	r0, [r0]
   15024:	ldr	r1, [fp, #-20]	; 0xffffffec
   15028:	cmp	r0, r1
   1502c:	bgt	15124 <__assert_fail@plt+0x4118>
   15030:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15034:	movw	r1, #53496	; 0xd0f8
   15038:	movt	r1, #2
   1503c:	cmp	r0, r1
   15040:	movw	r0, #0
   15044:	moveq	r0, #1
   15048:	and	r0, r0, #1
   1504c:	strb	r0, [fp, #-45]	; 0xffffffd3
   15050:	movw	r0, #53492	; 0xd0f4
   15054:	movt	r0, #2
   15058:	ldr	r0, [r0]
   1505c:	str	r0, [sp, #44]	; 0x2c
   15060:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   15064:	tst	r0, #1
   15068:	beq	15078 <__assert_fail@plt+0x406c>
   1506c:	movw	r0, #0
   15070:	str	r0, [sp, #24]
   15074:	b	15080 <__assert_fail@plt+0x4074>
   15078:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1507c:	str	r0, [sp, #24]
   15080:	ldr	r0, [sp, #24]
   15084:	ldr	r1, [fp, #-20]	; 0xffffffec
   15088:	movw	r2, #53492	; 0xd0f4
   1508c:	movt	r2, #2
   15090:	ldr	r2, [r2]
   15094:	sub	r1, r1, r2
   15098:	add	r2, r1, #1
   1509c:	ldr	r3, [fp, #-44]	; 0xffffffd4
   150a0:	add	r1, sp, #44	; 0x2c
   150a4:	movw	ip, #8
   150a8:	str	ip, [sp]
   150ac:	bl	1642c <__assert_fail@plt+0x5420>
   150b0:	str	r0, [fp, #-40]	; 0xffffffd8
   150b4:	movw	r1, #53488	; 0xd0f0
   150b8:	movt	r1, #2
   150bc:	str	r0, [r1]
   150c0:	ldrb	r0, [fp, #-45]	; 0xffffffd3
   150c4:	tst	r0, #1
   150c8:	beq	150e8 <__assert_fail@plt+0x40dc>
   150cc:	ldr	r0, [fp, #-40]	; 0xffffffd8
   150d0:	movw	r1, #53496	; 0xd0f8
   150d4:	movt	r1, #2
   150d8:	ldr	r2, [r1]
   150dc:	str	r2, [r0]
   150e0:	ldr	r1, [r1, #4]
   150e4:	str	r1, [r0, #4]
   150e8:	ldr	r0, [fp, #-40]	; 0xffffffd8
   150ec:	movw	r1, #53492	; 0xd0f4
   150f0:	movt	r1, #2
   150f4:	ldr	r1, [r1]
   150f8:	add	r0, r0, r1, lsl #3
   150fc:	ldr	r2, [sp, #44]	; 0x2c
   15100:	sub	r1, r2, r1
   15104:	lsl	r2, r1, #3
   15108:	movw	r1, #0
   1510c:	and	r1, r1, #255	; 0xff
   15110:	bl	10f58 <memset@plt>
   15114:	ldr	r0, [sp, #44]	; 0x2c
   15118:	movw	r1, #53492	; 0xd0f4
   1511c:	movt	r1, #2
   15120:	str	r0, [r1]
   15124:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15128:	ldr	r1, [fp, #-20]	; 0xffffffec
   1512c:	ldr	r0, [r0, r1, lsl #3]
   15130:	str	r0, [sp, #40]	; 0x28
   15134:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15138:	ldr	r1, [fp, #-20]	; 0xffffffec
   1513c:	add	r0, r0, r1, lsl #3
   15140:	ldr	r0, [r0, #4]
   15144:	str	r0, [sp, #36]	; 0x24
   15148:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1514c:	ldr	r0, [r0, #4]
   15150:	orr	r0, r0, #1
   15154:	str	r0, [sp, #32]
   15158:	ldr	r0, [sp, #36]	; 0x24
   1515c:	ldr	r1, [sp, #40]	; 0x28
   15160:	ldr	r2, [fp, #-24]	; 0xffffffe8
   15164:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15168:	ldr	ip, [fp, #-32]	; 0xffffffe0
   1516c:	ldr	ip, [ip]
   15170:	ldr	lr, [sp, #32]
   15174:	ldr	r4, [fp, #-32]	; 0xffffffe0
   15178:	add	r4, r4, #8
   1517c:	ldr	r5, [fp, #-32]	; 0xffffffe0
   15180:	ldr	r5, [r5, #40]	; 0x28
   15184:	ldr	r6, [fp, #-32]	; 0xffffffe0
   15188:	ldr	r6, [r6, #44]	; 0x2c
   1518c:	str	ip, [sp]
   15190:	str	lr, [sp, #4]
   15194:	str	r4, [sp, #8]
   15198:	str	r5, [sp, #12]
   1519c:	str	r6, [sp, #16]
   151a0:	bl	135a4 <__assert_fail@plt+0x2598>
   151a4:	str	r0, [sp, #28]
   151a8:	ldr	r0, [sp, #40]	; 0x28
   151ac:	ldr	r1, [sp, #28]
   151b0:	cmp	r0, r1
   151b4:	bhi	1525c <__assert_fail@plt+0x4250>
   151b8:	ldr	r0, [sp, #28]
   151bc:	add	r0, r0, #1
   151c0:	str	r0, [sp, #40]	; 0x28
   151c4:	ldr	r1, [fp, #-40]	; 0xffffffd8
   151c8:	ldr	r2, [fp, #-20]	; 0xffffffec
   151cc:	add	r1, r1, r2, lsl #3
   151d0:	str	r0, [r1]
   151d4:	ldr	r0, [sp, #36]	; 0x24
   151d8:	movw	r1, #53712	; 0xd1d0
   151dc:	movt	r1, #2
   151e0:	cmp	r0, r1
   151e4:	beq	151f0 <__assert_fail@plt+0x41e4>
   151e8:	ldr	r0, [sp, #36]	; 0x24
   151ec:	bl	12fd0 <__assert_fail@plt+0x1fc4>
   151f0:	ldr	r0, [sp, #40]	; 0x28
   151f4:	bl	161f0 <__assert_fail@plt+0x51e4>
   151f8:	mov	r1, r0
   151fc:	str	r0, [sp, #36]	; 0x24
   15200:	ldr	r0, [fp, #-40]	; 0xffffffd8
   15204:	ldr	r2, [fp, #-20]	; 0xffffffec
   15208:	add	r0, r0, r2, lsl #3
   1520c:	str	r1, [r0, #4]
   15210:	ldr	r0, [sp, #36]	; 0x24
   15214:	ldr	r1, [sp, #40]	; 0x28
   15218:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1521c:	ldr	r3, [fp, #-28]	; 0xffffffe4
   15220:	ldr	ip, [fp, #-32]	; 0xffffffe0
   15224:	ldr	ip, [ip]
   15228:	ldr	lr, [sp, #32]
   1522c:	ldr	r4, [fp, #-32]	; 0xffffffe0
   15230:	add	r4, r4, #8
   15234:	ldr	r5, [fp, #-32]	; 0xffffffe0
   15238:	ldr	r5, [r5, #40]	; 0x28
   1523c:	ldr	r6, [fp, #-32]	; 0xffffffe0
   15240:	ldr	r6, [r6, #44]	; 0x2c
   15244:	str	ip, [sp]
   15248:	str	lr, [sp, #4]
   1524c:	str	r4, [sp, #8]
   15250:	str	r5, [sp, #12]
   15254:	str	r6, [sp, #16]
   15258:	bl	135a4 <__assert_fail@plt+0x2598>
   1525c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   15260:	str	r0, [sp, #20]
   15264:	bl	10f40 <__errno_location@plt>
   15268:	ldr	r1, [sp, #20]
   1526c:	str	r1, [r0]
   15270:	ldr	r0, [sp, #36]	; 0x24
   15274:	sub	sp, fp, #16
   15278:	pop	{r4, r5, r6, sl, fp, pc}
   1527c:	svcvc	0x00ffffff
   15280:	push	{fp, lr}
   15284:	mov	fp, sp
   15288:	sub	sp, sp, #16
   1528c:	str	r0, [fp, #-4]
   15290:	str	r1, [sp, #8]
   15294:	str	r2, [sp, #4]
   15298:	ldr	r0, [fp, #-4]
   1529c:	ldr	r1, [sp, #8]
   152a0:	ldr	r2, [sp, #4]
   152a4:	movw	r3, #53664	; 0xd1a0
   152a8:	movt	r3, #2
   152ac:	bl	14fb4 <__assert_fail@plt+0x3fa8>
   152b0:	mov	sp, fp
   152b4:	pop	{fp, pc}
   152b8:	push	{fp, lr}
   152bc:	mov	fp, sp
   152c0:	sub	sp, sp, #8
   152c4:	str	r0, [sp, #4]
   152c8:	ldr	r1, [sp, #4]
   152cc:	movw	r0, #0
   152d0:	bl	14f80 <__assert_fail@plt+0x3f74>
   152d4:	mov	sp, fp
   152d8:	pop	{fp, pc}
   152dc:	push	{fp, lr}
   152e0:	mov	fp, sp
   152e4:	sub	sp, sp, #8
   152e8:	str	r0, [sp, #4]
   152ec:	str	r1, [sp]
   152f0:	ldr	r1, [sp, #4]
   152f4:	ldr	r2, [sp]
   152f8:	movw	r0, #0
   152fc:	bl	15280 <__assert_fail@plt+0x4274>
   15300:	mov	sp, fp
   15304:	pop	{fp, pc}
   15308:	push	{fp, lr}
   1530c:	mov	fp, sp
   15310:	sub	sp, sp, #64	; 0x40
   15314:	str	r0, [fp, #-4]
   15318:	str	r1, [fp, #-8]
   1531c:	str	r2, [fp, #-12]
   15320:	ldr	r1, [fp, #-8]
   15324:	add	r0, sp, #4
   15328:	bl	15348 <__assert_fail@plt+0x433c>
   1532c:	ldr	r0, [fp, #-4]
   15330:	ldr	r1, [fp, #-12]
   15334:	mvn	r2, #0
   15338:	add	r3, sp, #4
   1533c:	bl	14fb4 <__assert_fail@plt+0x3fa8>
   15340:	mov	sp, fp
   15344:	pop	{fp, pc}
   15348:	push	{fp, lr}
   1534c:	mov	fp, sp
   15350:	sub	sp, sp, #8
   15354:	str	r1, [sp, #4]
   15358:	mov	r1, r0
   1535c:	str	r0, [sp]
   15360:	mov	r0, r1
   15364:	movw	r1, #0
   15368:	and	r1, r1, #255	; 0xff
   1536c:	movw	r2, #48	; 0x30
   15370:	bl	10f58 <memset@plt>
   15374:	ldr	r0, [sp, #4]
   15378:	cmp	r0, #10
   1537c:	bne	15384 <__assert_fail@plt+0x4378>
   15380:	bl	10fe8 <abort@plt>
   15384:	ldr	r0, [sp, #4]
   15388:	ldr	r1, [sp]
   1538c:	str	r0, [r1]
   15390:	mov	sp, fp
   15394:	pop	{fp, pc}
   15398:	push	{fp, lr}
   1539c:	mov	fp, sp
   153a0:	sub	sp, sp, #64	; 0x40
   153a4:	str	r0, [fp, #-4]
   153a8:	str	r1, [fp, #-8]
   153ac:	str	r2, [fp, #-12]
   153b0:	str	r3, [fp, #-16]
   153b4:	ldr	r1, [fp, #-8]
   153b8:	mov	r0, sp
   153bc:	bl	15348 <__assert_fail@plt+0x433c>
   153c0:	ldr	r0, [fp, #-4]
   153c4:	ldr	r1, [fp, #-12]
   153c8:	ldr	r2, [fp, #-16]
   153cc:	mov	r3, sp
   153d0:	bl	14fb4 <__assert_fail@plt+0x3fa8>
   153d4:	mov	sp, fp
   153d8:	pop	{fp, pc}
   153dc:	push	{fp, lr}
   153e0:	mov	fp, sp
   153e4:	sub	sp, sp, #8
   153e8:	str	r0, [sp, #4]
   153ec:	str	r1, [sp]
   153f0:	ldr	r1, [sp, #4]
   153f4:	ldr	r2, [sp]
   153f8:	movw	r0, #0
   153fc:	bl	15308 <__assert_fail@plt+0x42fc>
   15400:	mov	sp, fp
   15404:	pop	{fp, pc}
   15408:	push	{fp, lr}
   1540c:	mov	fp, sp
   15410:	sub	sp, sp, #16
   15414:	str	r0, [fp, #-4]
   15418:	str	r1, [sp, #8]
   1541c:	str	r2, [sp, #4]
   15420:	ldr	r1, [fp, #-4]
   15424:	ldr	r2, [sp, #8]
   15428:	ldr	r3, [sp, #4]
   1542c:	movw	r0, #0
   15430:	bl	15398 <__assert_fail@plt+0x438c>
   15434:	mov	sp, fp
   15438:	pop	{fp, pc}
   1543c:	push	{fp, lr}
   15440:	mov	fp, sp
   15444:	sub	sp, sp, #72	; 0x48
   15448:	movw	r3, #53664	; 0xd1a0
   1544c:	movt	r3, #2
   15450:	str	r0, [fp, #-4]
   15454:	str	r1, [fp, #-8]
   15458:	strb	r2, [fp, #-9]
   1545c:	add	r0, sp, #12
   15460:	mov	r1, r0
   15464:	str	r0, [sp, #8]
   15468:	mov	r0, r1
   1546c:	mov	r1, r3
   15470:	movw	r2, #48	; 0x30
   15474:	bl	10e2c <memcpy@plt>
   15478:	ldr	r0, [sp, #8]
   1547c:	ldrb	r1, [fp, #-9]
   15480:	movw	r2, #1
   15484:	bl	1334c <__assert_fail@plt+0x2340>
   15488:	ldr	r1, [fp, #-4]
   1548c:	ldr	r2, [fp, #-8]
   15490:	movw	r3, #0
   15494:	str	r0, [sp, #4]
   15498:	mov	r0, r3
   1549c:	add	r3, sp, #12
   154a0:	bl	14fb4 <__assert_fail@plt+0x3fa8>
   154a4:	mov	sp, fp
   154a8:	pop	{fp, pc}
   154ac:	push	{fp, lr}
   154b0:	mov	fp, sp
   154b4:	sub	sp, sp, #8
   154b8:	str	r0, [sp, #4]
   154bc:	strb	r1, [sp, #3]
   154c0:	ldr	r0, [sp, #4]
   154c4:	mvn	r1, #0
   154c8:	ldrb	r2, [sp, #3]
   154cc:	bl	1543c <__assert_fail@plt+0x4430>
   154d0:	mov	sp, fp
   154d4:	pop	{fp, pc}
   154d8:	push	{fp, lr}
   154dc:	mov	fp, sp
   154e0:	sub	sp, sp, #8
   154e4:	str	r0, [sp, #4]
   154e8:	ldr	r0, [sp, #4]
   154ec:	movw	r1, #58	; 0x3a
   154f0:	and	r1, r1, #255	; 0xff
   154f4:	bl	154ac <__assert_fail@plt+0x44a0>
   154f8:	mov	sp, fp
   154fc:	pop	{fp, pc}
   15500:	push	{fp, lr}
   15504:	mov	fp, sp
   15508:	sub	sp, sp, #8
   1550c:	str	r0, [sp, #4]
   15510:	str	r1, [sp]
   15514:	ldr	r0, [sp, #4]
   15518:	ldr	r1, [sp]
   1551c:	movw	r2, #58	; 0x3a
   15520:	and	r2, r2, #255	; 0xff
   15524:	bl	1543c <__assert_fail@plt+0x4430>
   15528:	mov	sp, fp
   1552c:	pop	{fp, pc}
   15530:	push	{fp, lr}
   15534:	mov	fp, sp
   15538:	sub	sp, sp, #120	; 0x78
   1553c:	str	r0, [fp, #-4]
   15540:	str	r1, [fp, #-8]
   15544:	str	r2, [fp, #-12]
   15548:	ldr	r1, [fp, #-8]
   1554c:	add	r0, sp, #12
   15550:	bl	15348 <__assert_fail@plt+0x433c>
   15554:	add	r0, sp, #60	; 0x3c
   15558:	mov	r1, r0
   1555c:	add	r2, sp, #12
   15560:	str	r0, [sp, #8]
   15564:	mov	r0, r1
   15568:	mov	r1, r2
   1556c:	movw	r2, #48	; 0x30
   15570:	bl	10e2c <memcpy@plt>
   15574:	ldr	r0, [sp, #8]
   15578:	movw	r1, #58	; 0x3a
   1557c:	and	r1, r1, #255	; 0xff
   15580:	movw	r2, #1
   15584:	bl	1334c <__assert_fail@plt+0x2340>
   15588:	ldr	r1, [fp, #-4]
   1558c:	ldr	r2, [fp, #-12]
   15590:	str	r0, [sp, #4]
   15594:	mov	r0, r1
   15598:	mov	r1, r2
   1559c:	mvn	r2, #0
   155a0:	add	r3, sp, #60	; 0x3c
   155a4:	bl	14fb4 <__assert_fail@plt+0x3fa8>
   155a8:	mov	sp, fp
   155ac:	pop	{fp, pc}
   155b0:	push	{fp, lr}
   155b4:	mov	fp, sp
   155b8:	sub	sp, sp, #24
   155bc:	str	r0, [fp, #-4]
   155c0:	str	r1, [fp, #-8]
   155c4:	str	r2, [sp, #12]
   155c8:	str	r3, [sp, #8]
   155cc:	ldr	r0, [fp, #-4]
   155d0:	ldr	r1, [fp, #-8]
   155d4:	ldr	r2, [sp, #12]
   155d8:	ldr	r3, [sp, #8]
   155dc:	mvn	ip, #0
   155e0:	str	ip, [sp]
   155e4:	bl	155f0 <__assert_fail@plt+0x45e4>
   155e8:	mov	sp, fp
   155ec:	pop	{fp, pc}
   155f0:	push	{fp, lr}
   155f4:	mov	fp, sp
   155f8:	sub	sp, sp, #72	; 0x48
   155fc:	ldr	ip, [fp, #8]
   15600:	movw	lr, #53664	; 0xd1a0
   15604:	movt	lr, #2
   15608:	str	r0, [fp, #-4]
   1560c:	str	r1, [fp, #-8]
   15610:	str	r2, [fp, #-12]
   15614:	str	r3, [fp, #-16]
   15618:	add	r0, sp, #8
   1561c:	mov	r1, r0
   15620:	str	r0, [sp, #4]
   15624:	mov	r0, r1
   15628:	mov	r1, lr
   1562c:	movw	r2, #48	; 0x30
   15630:	str	ip, [sp]
   15634:	bl	10e2c <memcpy@plt>
   15638:	ldr	r1, [fp, #-8]
   1563c:	ldr	r2, [fp, #-12]
   15640:	ldr	r0, [sp, #4]
   15644:	bl	1344c <__assert_fail@plt+0x2440>
   15648:	ldr	r0, [fp, #-4]
   1564c:	ldr	r1, [fp, #-16]
   15650:	ldr	r2, [fp, #8]
   15654:	add	r3, sp, #8
   15658:	bl	14fb4 <__assert_fail@plt+0x3fa8>
   1565c:	mov	sp, fp
   15660:	pop	{fp, pc}
   15664:	push	{fp, lr}
   15668:	mov	fp, sp
   1566c:	sub	sp, sp, #16
   15670:	str	r0, [fp, #-4]
   15674:	str	r1, [sp, #8]
   15678:	str	r2, [sp, #4]
   1567c:	ldr	r1, [fp, #-4]
   15680:	ldr	r2, [sp, #8]
   15684:	ldr	r3, [sp, #4]
   15688:	movw	r0, #0
   1568c:	bl	155b0 <__assert_fail@plt+0x45a4>
   15690:	mov	sp, fp
   15694:	pop	{fp, pc}
   15698:	push	{fp, lr}
   1569c:	mov	fp, sp
   156a0:	sub	sp, sp, #24
   156a4:	str	r0, [fp, #-4]
   156a8:	str	r1, [fp, #-8]
   156ac:	str	r2, [sp, #12]
   156b0:	str	r3, [sp, #8]
   156b4:	ldr	r1, [fp, #-4]
   156b8:	ldr	r2, [fp, #-8]
   156bc:	ldr	r3, [sp, #12]
   156c0:	ldr	r0, [sp, #8]
   156c4:	movw	ip, #0
   156c8:	str	r0, [sp, #4]
   156cc:	mov	r0, ip
   156d0:	ldr	ip, [sp, #4]
   156d4:	str	ip, [sp]
   156d8:	bl	155f0 <__assert_fail@plt+0x45e4>
   156dc:	mov	sp, fp
   156e0:	pop	{fp, pc}
   156e4:	push	{fp, lr}
   156e8:	mov	fp, sp
   156ec:	sub	sp, sp, #16
   156f0:	str	r0, [fp, #-4]
   156f4:	str	r1, [sp, #8]
   156f8:	str	r2, [sp, #4]
   156fc:	ldr	r0, [fp, #-4]
   15700:	ldr	r1, [sp, #8]
   15704:	ldr	r2, [sp, #4]
   15708:	movw	r3, #53504	; 0xd100
   1570c:	movt	r3, #2
   15710:	bl	14fb4 <__assert_fail@plt+0x3fa8>
   15714:	mov	sp, fp
   15718:	pop	{fp, pc}
   1571c:	push	{fp, lr}
   15720:	mov	fp, sp
   15724:	sub	sp, sp, #8
   15728:	str	r0, [sp, #4]
   1572c:	str	r1, [sp]
   15730:	ldr	r1, [sp, #4]
   15734:	ldr	r2, [sp]
   15738:	movw	r0, #0
   1573c:	bl	156e4 <__assert_fail@plt+0x46d8>
   15740:	mov	sp, fp
   15744:	pop	{fp, pc}
   15748:	push	{fp, lr}
   1574c:	mov	fp, sp
   15750:	sub	sp, sp, #8
   15754:	str	r0, [sp, #4]
   15758:	str	r1, [sp]
   1575c:	ldr	r0, [sp, #4]
   15760:	ldr	r1, [sp]
   15764:	mvn	r2, #0
   15768:	bl	156e4 <__assert_fail@plt+0x46d8>
   1576c:	mov	sp, fp
   15770:	pop	{fp, pc}
   15774:	push	{fp, lr}
   15778:	mov	fp, sp
   1577c:	sub	sp, sp, #8
   15780:	str	r0, [sp, #4]
   15784:	ldr	r1, [sp, #4]
   15788:	movw	r0, #0
   1578c:	bl	15748 <__assert_fail@plt+0x473c>
   15790:	mov	sp, fp
   15794:	pop	{fp, pc}
   15798:	push	{fp, lr}
   1579c:	mov	fp, sp
   157a0:	sub	sp, sp, #24
   157a4:	str	r0, [fp, #-8]
   157a8:	str	r1, [sp, #12]
   157ac:	ldr	r0, [fp, #-8]
   157b0:	bl	10f1c <gettext@plt>
   157b4:	str	r0, [sp, #8]
   157b8:	ldr	r0, [sp, #8]
   157bc:	ldr	r1, [fp, #-8]
   157c0:	cmp	r0, r1
   157c4:	beq	157d4 <__assert_fail@plt+0x47c8>
   157c8:	ldr	r0, [sp, #8]
   157cc:	str	r0, [fp, #-4]
   157d0:	b	158a0 <__assert_fail@plt+0x4894>
   157d4:	bl	1940c <__assert_fail@plt+0x8400>
   157d8:	str	r0, [sp, #4]
   157dc:	ldr	r0, [sp, #4]
   157e0:	movw	r1, #48032	; 0xbba0
   157e4:	movt	r1, #1
   157e8:	bl	190b0 <__assert_fail@plt+0x80a4>
   157ec:	cmp	r0, #0
   157f0:	bne	15828 <__assert_fail@plt+0x481c>
   157f4:	ldr	r0, [fp, #-8]
   157f8:	ldrb	r0, [r0]
   157fc:	cmp	r0, #96	; 0x60
   15800:	movw	r0, #0
   15804:	moveq	r0, #1
   15808:	tst	r0, #1
   1580c:	movw	r0, #48042	; 0xbbaa
   15810:	movt	r0, #1
   15814:	movw	r1, #48038	; 0xbba6
   15818:	movt	r1, #1
   1581c:	movne	r0, r1
   15820:	str	r0, [fp, #-4]
   15824:	b	158a0 <__assert_fail@plt+0x4894>
   15828:	ldr	r0, [sp, #4]
   1582c:	movw	r1, #48046	; 0xbbae
   15830:	movt	r1, #1
   15834:	bl	190b0 <__assert_fail@plt+0x80a4>
   15838:	cmp	r0, #0
   1583c:	bne	15874 <__assert_fail@plt+0x4868>
   15840:	ldr	r0, [fp, #-8]
   15844:	ldrb	r0, [r0]
   15848:	cmp	r0, #96	; 0x60
   1584c:	movw	r0, #0
   15850:	moveq	r0, #1
   15854:	tst	r0, #1
   15858:	movw	r0, #48058	; 0xbbba
   1585c:	movt	r0, #1
   15860:	movw	r1, #48054	; 0xbbb6
   15864:	movt	r1, #1
   15868:	movne	r0, r1
   1586c:	str	r0, [fp, #-4]
   15870:	b	158a0 <__assert_fail@plt+0x4894>
   15874:	ldr	r0, [sp, #12]
   15878:	cmp	r0, #9
   1587c:	movw	r0, #0
   15880:	moveq	r0, #1
   15884:	tst	r0, #1
   15888:	movw	r0, #47860	; 0xbaf4
   1588c:	movt	r0, #1
   15890:	movw	r1, #48028	; 0xbb9c
   15894:	movt	r1, #1
   15898:	movne	r0, r1
   1589c:	str	r0, [fp, #-4]
   158a0:	ldr	r0, [fp, #-4]
   158a4:	mov	sp, fp
   158a8:	pop	{fp, pc}
   158ac:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   158b0:	add	fp, sp, #28
   158b4:	sub	sp, sp, #196	; 0xc4
   158b8:	ldr	ip, [fp, #12]
   158bc:	ldr	lr, [fp, #8]
   158c0:	str	r0, [fp, #-32]	; 0xffffffe0
   158c4:	str	r1, [fp, #-36]	; 0xffffffdc
   158c8:	str	r2, [fp, #-40]	; 0xffffffd8
   158cc:	str	r3, [fp, #-44]	; 0xffffffd4
   158d0:	ldr	r0, [fp, #-36]	; 0xffffffdc
   158d4:	movw	r1, #0
   158d8:	cmp	r0, r1
   158dc:	beq	15910 <__assert_fail@plt+0x4904>
   158e0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   158e4:	ldr	r2, [fp, #-36]	; 0xffffffdc
   158e8:	ldr	r3, [fp, #-40]	; 0xffffffd8
   158ec:	ldr	r1, [fp, #-44]	; 0xffffffd4
   158f0:	movw	ip, #48148	; 0xbc14
   158f4:	movt	ip, #1
   158f8:	str	r1, [fp, #-48]	; 0xffffffd0
   158fc:	mov	r1, ip
   15900:	ldr	ip, [fp, #-48]	; 0xffffffd0
   15904:	str	ip, [sp]
   15908:	bl	10f34 <fprintf@plt>
   1590c:	b	15928 <__assert_fail@plt+0x491c>
   15910:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15914:	ldr	r2, [fp, #-40]	; 0xffffffd8
   15918:	ldr	r3, [fp, #-44]	; 0xffffffd4
   1591c:	movw	r1, #48160	; 0xbc20
   15920:	movt	r1, #1
   15924:	bl	10f34 <fprintf@plt>
   15928:	ldr	r0, [fp, #-32]	; 0xffffffe0
   1592c:	movw	r1, #48167	; 0xbc27
   15930:	movt	r1, #1
   15934:	str	r0, [fp, #-52]	; 0xffffffcc
   15938:	mov	r0, r1
   1593c:	bl	10f1c <gettext@plt>
   15940:	movw	r1, #48885	; 0xbef5
   15944:	movt	r1, #1
   15948:	movw	r3, #2022	; 0x7e6
   1594c:	ldr	r2, [fp, #-52]	; 0xffffffcc
   15950:	str	r0, [fp, #-56]	; 0xffffffc8
   15954:	mov	r0, r2
   15958:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1595c:	bl	10f34 <fprintf@plt>
   15960:	ldr	r1, [fp, #-32]	; 0xffffffe0
   15964:	movw	r2, #46770	; 0xb6b2
   15968:	movt	r2, #1
   1596c:	str	r0, [fp, #-60]	; 0xffffffc4
   15970:	mov	r0, r2
   15974:	str	r2, [fp, #-64]	; 0xffffffc0
   15978:	bl	10dcc <fputs_unlocked@plt>
   1597c:	ldr	r1, [fp, #-32]	; 0xffffffe0
   15980:	movw	r2, #48171	; 0xbc2b
   15984:	movt	r2, #1
   15988:	str	r0, [fp, #-68]	; 0xffffffbc
   1598c:	mov	r0, r2
   15990:	str	r1, [fp, #-72]	; 0xffffffb8
   15994:	bl	10f1c <gettext@plt>
   15998:	movw	r2, #48342	; 0xbcd6
   1599c:	movt	r2, #1
   159a0:	ldr	r1, [fp, #-72]	; 0xffffffb8
   159a4:	str	r0, [fp, #-76]	; 0xffffffb4
   159a8:	mov	r0, r1
   159ac:	ldr	r1, [fp, #-76]	; 0xffffffb4
   159b0:	bl	10f34 <fprintf@plt>
   159b4:	ldr	r1, [fp, #-32]	; 0xffffffe0
   159b8:	ldr	r2, [fp, #-64]	; 0xffffffc0
   159bc:	str	r0, [fp, #-80]	; 0xffffffb0
   159c0:	mov	r0, r2
   159c4:	bl	10dcc <fputs_unlocked@plt>
   159c8:	ldr	r1, [fp, #12]
   159cc:	cmp	r1, #9
   159d0:	str	r1, [fp, #-84]	; 0xffffffac
   159d4:	bhi	15df0 <__assert_fail@plt+0x4de4>
   159d8:	add	r0, pc, #8
   159dc:	ldr	r1, [fp, #-84]	; 0xffffffac
   159e0:	ldr	r0, [r0, r1, lsl #2]
   159e4:	mov	pc, r0
   159e8:	andeq	r5, r1, r0, lsl sl
   159ec:	andeq	r5, r1, r4, lsl sl
   159f0:	andeq	r5, r1, ip, asr #20
   159f4:	andeq	r5, r1, ip, lsl #21
   159f8:	andeq	r5, r1, r4, ror #21
   159fc:	andeq	r5, r1, r8, asr #22
   15a00:			; <UNDEFINED> instruction: 0x00015bb8
   15a04:	andeq	r5, r1, r4, lsr ip
   15a08:			; <UNDEFINED> instruction: 0x00015cbc
   15a0c:	andeq	r5, r1, r0, asr sp
   15a10:	b	15e8c <__assert_fail@plt+0x4e80>
   15a14:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15a18:	movw	r1, #48376	; 0xbcf8
   15a1c:	movt	r1, #1
   15a20:	str	r0, [fp, #-88]	; 0xffffffa8
   15a24:	mov	r0, r1
   15a28:	bl	10f1c <gettext@plt>
   15a2c:	ldr	r1, [fp, #8]
   15a30:	ldr	r2, [r1]
   15a34:	ldr	r1, [fp, #-88]	; 0xffffffa8
   15a38:	str	r0, [fp, #-92]	; 0xffffffa4
   15a3c:	mov	r0, r1
   15a40:	ldr	r1, [fp, #-92]	; 0xffffffa4
   15a44:	bl	10f34 <fprintf@plt>
   15a48:	b	15e8c <__assert_fail@plt+0x4e80>
   15a4c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15a50:	movw	r1, #48392	; 0xbd08
   15a54:	movt	r1, #1
   15a58:	str	r0, [fp, #-96]	; 0xffffffa0
   15a5c:	mov	r0, r1
   15a60:	bl	10f1c <gettext@plt>
   15a64:	ldr	r1, [fp, #8]
   15a68:	ldr	r2, [r1]
   15a6c:	ldr	r1, [fp, #8]
   15a70:	ldr	r3, [r1, #4]
   15a74:	ldr	r1, [fp, #-96]	; 0xffffffa0
   15a78:	str	r0, [fp, #-100]	; 0xffffff9c
   15a7c:	mov	r0, r1
   15a80:	ldr	r1, [fp, #-100]	; 0xffffff9c
   15a84:	bl	10f34 <fprintf@plt>
   15a88:	b	15e8c <__assert_fail@plt+0x4e80>
   15a8c:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15a90:	movw	r1, #48415	; 0xbd1f
   15a94:	movt	r1, #1
   15a98:	str	r0, [fp, #-104]	; 0xffffff98
   15a9c:	mov	r0, r1
   15aa0:	bl	10f1c <gettext@plt>
   15aa4:	ldr	r1, [fp, #8]
   15aa8:	ldr	r2, [r1]
   15aac:	ldr	r1, [fp, #8]
   15ab0:	ldr	r3, [r1, #4]
   15ab4:	ldr	r1, [fp, #8]
   15ab8:	ldr	r1, [r1, #8]
   15abc:	ldr	ip, [fp, #-104]	; 0xffffff98
   15ac0:	str	r0, [fp, #-108]	; 0xffffff94
   15ac4:	mov	r0, ip
   15ac8:	ldr	lr, [fp, #-108]	; 0xffffff94
   15acc:	str	r1, [sp, #112]	; 0x70
   15ad0:	mov	r1, lr
   15ad4:	ldr	r4, [sp, #112]	; 0x70
   15ad8:	str	r4, [sp]
   15adc:	bl	10f34 <fprintf@plt>
   15ae0:	b	15e8c <__assert_fail@plt+0x4e80>
   15ae4:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15ae8:	movw	r1, #48443	; 0xbd3b
   15aec:	movt	r1, #1
   15af0:	str	r0, [sp, #108]	; 0x6c
   15af4:	mov	r0, r1
   15af8:	bl	10f1c <gettext@plt>
   15afc:	ldr	r1, [fp, #8]
   15b00:	ldr	r2, [r1]
   15b04:	ldr	r1, [fp, #8]
   15b08:	ldr	r3, [r1, #4]
   15b0c:	ldr	r1, [fp, #8]
   15b10:	ldr	r1, [r1, #8]
   15b14:	ldr	ip, [fp, #8]
   15b18:	ldr	ip, [ip, #12]
   15b1c:	ldr	lr, [sp, #108]	; 0x6c
   15b20:	str	r0, [sp, #104]	; 0x68
   15b24:	mov	r0, lr
   15b28:	ldr	r4, [sp, #104]	; 0x68
   15b2c:	str	r1, [sp, #100]	; 0x64
   15b30:	mov	r1, r4
   15b34:	ldr	r5, [sp, #100]	; 0x64
   15b38:	str	r5, [sp]
   15b3c:	str	ip, [sp, #4]
   15b40:	bl	10f34 <fprintf@plt>
   15b44:	b	15e8c <__assert_fail@plt+0x4e80>
   15b48:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15b4c:	movw	r1, #48475	; 0xbd5b
   15b50:	movt	r1, #1
   15b54:	str	r0, [sp, #96]	; 0x60
   15b58:	mov	r0, r1
   15b5c:	bl	10f1c <gettext@plt>
   15b60:	ldr	r1, [fp, #8]
   15b64:	ldr	r2, [r1]
   15b68:	ldr	r1, [fp, #8]
   15b6c:	ldr	r3, [r1, #4]
   15b70:	ldr	r1, [fp, #8]
   15b74:	ldr	r1, [r1, #8]
   15b78:	ldr	ip, [fp, #8]
   15b7c:	ldr	ip, [ip, #12]
   15b80:	ldr	lr, [fp, #8]
   15b84:	ldr	lr, [lr, #16]
   15b88:	ldr	r4, [sp, #96]	; 0x60
   15b8c:	str	r0, [sp, #92]	; 0x5c
   15b90:	mov	r0, r4
   15b94:	ldr	r5, [sp, #92]	; 0x5c
   15b98:	str	r1, [sp, #88]	; 0x58
   15b9c:	mov	r1, r5
   15ba0:	ldr	r6, [sp, #88]	; 0x58
   15ba4:	str	r6, [sp]
   15ba8:	str	ip, [sp, #4]
   15bac:	str	lr, [sp, #8]
   15bb0:	bl	10f34 <fprintf@plt>
   15bb4:	b	15e8c <__assert_fail@plt+0x4e80>
   15bb8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15bbc:	movw	r1, #48511	; 0xbd7f
   15bc0:	movt	r1, #1
   15bc4:	str	r0, [sp, #84]	; 0x54
   15bc8:	mov	r0, r1
   15bcc:	bl	10f1c <gettext@plt>
   15bd0:	ldr	r1, [fp, #8]
   15bd4:	ldr	r2, [r1]
   15bd8:	ldr	r1, [fp, #8]
   15bdc:	ldr	r3, [r1, #4]
   15be0:	ldr	r1, [fp, #8]
   15be4:	ldr	r1, [r1, #8]
   15be8:	ldr	ip, [fp, #8]
   15bec:	ldr	ip, [ip, #12]
   15bf0:	ldr	lr, [fp, #8]
   15bf4:	ldr	lr, [lr, #16]
   15bf8:	ldr	r4, [fp, #8]
   15bfc:	ldr	r4, [r4, #20]
   15c00:	ldr	r5, [sp, #84]	; 0x54
   15c04:	str	r0, [sp, #80]	; 0x50
   15c08:	mov	r0, r5
   15c0c:	ldr	r6, [sp, #80]	; 0x50
   15c10:	str	r1, [sp, #76]	; 0x4c
   15c14:	mov	r1, r6
   15c18:	ldr	r7, [sp, #76]	; 0x4c
   15c1c:	str	r7, [sp]
   15c20:	str	ip, [sp, #4]
   15c24:	str	lr, [sp, #8]
   15c28:	str	r4, [sp, #12]
   15c2c:	bl	10f34 <fprintf@plt>
   15c30:	b	15e8c <__assert_fail@plt+0x4e80>
   15c34:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15c38:	movw	r1, #48551	; 0xbda7
   15c3c:	movt	r1, #1
   15c40:	str	r0, [sp, #72]	; 0x48
   15c44:	mov	r0, r1
   15c48:	bl	10f1c <gettext@plt>
   15c4c:	ldr	r1, [fp, #8]
   15c50:	ldr	r2, [r1]
   15c54:	ldr	r1, [fp, #8]
   15c58:	ldr	r3, [r1, #4]
   15c5c:	ldr	r1, [fp, #8]
   15c60:	ldr	r1, [r1, #8]
   15c64:	ldr	ip, [fp, #8]
   15c68:	ldr	ip, [ip, #12]
   15c6c:	ldr	lr, [fp, #8]
   15c70:	ldr	lr, [lr, #16]
   15c74:	ldr	r4, [fp, #8]
   15c78:	ldr	r4, [r4, #20]
   15c7c:	ldr	r5, [fp, #8]
   15c80:	ldr	r5, [r5, #24]
   15c84:	ldr	r6, [sp, #72]	; 0x48
   15c88:	str	r0, [sp, #68]	; 0x44
   15c8c:	mov	r0, r6
   15c90:	ldr	r7, [sp, #68]	; 0x44
   15c94:	str	r1, [sp, #64]	; 0x40
   15c98:	mov	r1, r7
   15c9c:	ldr	r8, [sp, #64]	; 0x40
   15ca0:	str	r8, [sp]
   15ca4:	str	ip, [sp, #4]
   15ca8:	str	lr, [sp, #8]
   15cac:	str	r4, [sp, #12]
   15cb0:	str	r5, [sp, #16]
   15cb4:	bl	10f34 <fprintf@plt>
   15cb8:	b	15e8c <__assert_fail@plt+0x4e80>
   15cbc:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15cc0:	movw	r1, #48595	; 0xbdd3
   15cc4:	movt	r1, #1
   15cc8:	str	r0, [sp, #60]	; 0x3c
   15ccc:	mov	r0, r1
   15cd0:	bl	10f1c <gettext@plt>
   15cd4:	ldr	r1, [fp, #8]
   15cd8:	ldr	r2, [r1]
   15cdc:	ldr	r1, [fp, #8]
   15ce0:	ldr	r3, [r1, #4]
   15ce4:	ldr	r1, [fp, #8]
   15ce8:	ldr	r1, [r1, #8]
   15cec:	ldr	ip, [fp, #8]
   15cf0:	ldr	ip, [ip, #12]
   15cf4:	ldr	lr, [fp, #8]
   15cf8:	ldr	lr, [lr, #16]
   15cfc:	ldr	r4, [fp, #8]
   15d00:	ldr	r4, [r4, #20]
   15d04:	ldr	r5, [fp, #8]
   15d08:	ldr	r5, [r5, #24]
   15d0c:	ldr	r6, [fp, #8]
   15d10:	ldr	r6, [r6, #28]
   15d14:	ldr	r7, [sp, #60]	; 0x3c
   15d18:	str	r0, [sp, #56]	; 0x38
   15d1c:	mov	r0, r7
   15d20:	ldr	r8, [sp, #56]	; 0x38
   15d24:	str	r1, [sp, #52]	; 0x34
   15d28:	mov	r1, r8
   15d2c:	ldr	r9, [sp, #52]	; 0x34
   15d30:	str	r9, [sp]
   15d34:	str	ip, [sp, #4]
   15d38:	str	lr, [sp, #8]
   15d3c:	str	r4, [sp, #12]
   15d40:	str	r5, [sp, #16]
   15d44:	str	r6, [sp, #20]
   15d48:	bl	10f34 <fprintf@plt>
   15d4c:	b	15e8c <__assert_fail@plt+0x4e80>
   15d50:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15d54:	movw	r1, #48643	; 0xbe03
   15d58:	movt	r1, #1
   15d5c:	str	r0, [sp, #48]	; 0x30
   15d60:	mov	r0, r1
   15d64:	bl	10f1c <gettext@plt>
   15d68:	ldr	r1, [fp, #8]
   15d6c:	ldr	r2, [r1]
   15d70:	ldr	r1, [fp, #8]
   15d74:	ldr	r3, [r1, #4]
   15d78:	ldr	r1, [fp, #8]
   15d7c:	ldr	r1, [r1, #8]
   15d80:	ldr	ip, [fp, #8]
   15d84:	ldr	ip, [ip, #12]
   15d88:	ldr	lr, [fp, #8]
   15d8c:	ldr	lr, [lr, #16]
   15d90:	ldr	r4, [fp, #8]
   15d94:	ldr	r4, [r4, #20]
   15d98:	ldr	r5, [fp, #8]
   15d9c:	ldr	r5, [r5, #24]
   15da0:	ldr	r6, [fp, #8]
   15da4:	ldr	r6, [r6, #28]
   15da8:	ldr	r7, [fp, #8]
   15dac:	ldr	r7, [r7, #32]
   15db0:	ldr	r8, [sp, #48]	; 0x30
   15db4:	str	r0, [sp, #44]	; 0x2c
   15db8:	mov	r0, r8
   15dbc:	ldr	r9, [sp, #44]	; 0x2c
   15dc0:	str	r1, [sp, #40]	; 0x28
   15dc4:	mov	r1, r9
   15dc8:	ldr	sl, [sp, #40]	; 0x28
   15dcc:	str	sl, [sp]
   15dd0:	str	ip, [sp, #4]
   15dd4:	str	lr, [sp, #8]
   15dd8:	str	r4, [sp, #12]
   15ddc:	str	r5, [sp, #16]
   15de0:	str	r6, [sp, #20]
   15de4:	str	r7, [sp, #24]
   15de8:	bl	10f34 <fprintf@plt>
   15dec:	b	15e8c <__assert_fail@plt+0x4e80>
   15df0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   15df4:	movw	r1, #48695	; 0xbe37
   15df8:	movt	r1, #1
   15dfc:	str	r0, [sp, #36]	; 0x24
   15e00:	mov	r0, r1
   15e04:	bl	10f1c <gettext@plt>
   15e08:	ldr	r1, [fp, #8]
   15e0c:	ldr	r2, [r1]
   15e10:	ldr	r1, [fp, #8]
   15e14:	ldr	r3, [r1, #4]
   15e18:	ldr	r1, [fp, #8]
   15e1c:	ldr	r1, [r1, #8]
   15e20:	ldr	ip, [fp, #8]
   15e24:	ldr	ip, [ip, #12]
   15e28:	ldr	lr, [fp, #8]
   15e2c:	ldr	lr, [lr, #16]
   15e30:	ldr	r4, [fp, #8]
   15e34:	ldr	r4, [r4, #20]
   15e38:	ldr	r5, [fp, #8]
   15e3c:	ldr	r5, [r5, #24]
   15e40:	ldr	r6, [fp, #8]
   15e44:	ldr	r6, [r6, #28]
   15e48:	ldr	r7, [fp, #8]
   15e4c:	ldr	r7, [r7, #32]
   15e50:	ldr	r8, [sp, #36]	; 0x24
   15e54:	str	r0, [sp, #32]
   15e58:	mov	r0, r8
   15e5c:	ldr	r9, [sp, #32]
   15e60:	str	r1, [sp, #28]
   15e64:	mov	r1, r9
   15e68:	ldr	sl, [sp, #28]
   15e6c:	str	sl, [sp]
   15e70:	str	ip, [sp, #4]
   15e74:	str	lr, [sp, #8]
   15e78:	str	r4, [sp, #12]
   15e7c:	str	r5, [sp, #16]
   15e80:	str	r6, [sp, #20]
   15e84:	str	r7, [sp, #24]
   15e88:	bl	10f34 <fprintf@plt>
   15e8c:	sub	sp, fp, #28
   15e90:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   15e94:	push	{fp, lr}
   15e98:	mov	fp, sp
   15e9c:	sub	sp, sp, #32
   15ea0:	ldr	ip, [fp, #8]
   15ea4:	str	r0, [fp, #-4]
   15ea8:	str	r1, [fp, #-8]
   15eac:	str	r2, [fp, #-12]
   15eb0:	str	r3, [sp, #16]
   15eb4:	movw	r0, #0
   15eb8:	str	r0, [sp, #12]
   15ebc:	ldr	r0, [fp, #8]
   15ec0:	ldr	r1, [sp, #12]
   15ec4:	add	r0, r0, r1, lsl #2
   15ec8:	ldr	r0, [r0]
   15ecc:	movw	r1, #0
   15ed0:	cmp	r0, r1
   15ed4:	beq	15eec <__assert_fail@plt+0x4ee0>
   15ed8:	b	15edc <__assert_fail@plt+0x4ed0>
   15edc:	ldr	r0, [sp, #12]
   15ee0:	add	r0, r0, #1
   15ee4:	str	r0, [sp, #12]
   15ee8:	b	15ebc <__assert_fail@plt+0x4eb0>
   15eec:	ldr	r0, [fp, #-4]
   15ef0:	ldr	r1, [fp, #-8]
   15ef4:	ldr	r2, [fp, #-12]
   15ef8:	ldr	r3, [sp, #16]
   15efc:	ldr	ip, [fp, #8]
   15f00:	ldr	lr, [sp, #12]
   15f04:	str	ip, [sp]
   15f08:	str	lr, [sp, #4]
   15f0c:	bl	158ac <__assert_fail@plt+0x48a0>
   15f10:	mov	sp, fp
   15f14:	pop	{fp, pc}
   15f18:	push	{fp, lr}
   15f1c:	mov	fp, sp
   15f20:	sub	sp, sp, #80	; 0x50
   15f24:	ldr	ip, [fp, #8]
   15f28:	str	ip, [fp, #-4]
   15f2c:	str	r0, [fp, #-8]
   15f30:	str	r1, [fp, #-12]
   15f34:	str	r2, [fp, #-16]
   15f38:	str	r3, [fp, #-20]	; 0xffffffec
   15f3c:	movw	r0, #0
   15f40:	str	r0, [fp, #-24]	; 0xffffffe8
   15f44:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15f48:	cmp	r0, #10
   15f4c:	movw	r0, #0
   15f50:	str	r0, [sp, #12]
   15f54:	bcs	15f8c <__assert_fail@plt+0x4f80>
   15f58:	ldr	r0, [fp, #-4]
   15f5c:	add	r1, r0, #4
   15f60:	str	r1, [fp, #-4]
   15f64:	ldr	r0, [r0]
   15f68:	ldr	r1, [fp, #-24]	; 0xffffffe8
   15f6c:	add	r2, sp, #16
   15f70:	add	r1, r2, r1, lsl #2
   15f74:	str	r0, [r1]
   15f78:	movw	r1, #0
   15f7c:	cmp	r0, r1
   15f80:	movw	r0, #0
   15f84:	movne	r0, #1
   15f88:	str	r0, [sp, #12]
   15f8c:	ldr	r0, [sp, #12]
   15f90:	tst	r0, #1
   15f94:	beq	15fac <__assert_fail@plt+0x4fa0>
   15f98:	b	15f9c <__assert_fail@plt+0x4f90>
   15f9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   15fa0:	add	r0, r0, #1
   15fa4:	str	r0, [fp, #-24]	; 0xffffffe8
   15fa8:	b	15f44 <__assert_fail@plt+0x4f38>
   15fac:	add	r0, sp, #16
   15fb0:	ldr	r1, [fp, #-8]
   15fb4:	ldr	r2, [fp, #-12]
   15fb8:	ldr	r3, [fp, #-16]
   15fbc:	ldr	ip, [fp, #-20]	; 0xffffffec
   15fc0:	ldr	lr, [fp, #-24]	; 0xffffffe8
   15fc4:	str	r0, [sp, #8]
   15fc8:	mov	r0, r1
   15fcc:	mov	r1, r2
   15fd0:	mov	r2, r3
   15fd4:	mov	r3, ip
   15fd8:	ldr	ip, [sp, #8]
   15fdc:	str	ip, [sp]
   15fe0:	str	lr, [sp, #4]
   15fe4:	bl	158ac <__assert_fail@plt+0x48a0>
   15fe8:	mov	sp, fp
   15fec:	pop	{fp, pc}
   15ff0:	push	{fp, lr}
   15ff4:	mov	fp, sp
   15ff8:	sub	sp, sp, #24
   15ffc:	str	r0, [fp, #-4]
   16000:	str	r1, [fp, #-8]
   16004:	str	r2, [sp, #12]
   16008:	str	r3, [sp, #8]
   1600c:	add	r0, fp, #8
   16010:	str	r0, [sp, #4]
   16014:	ldr	r0, [fp, #-4]
   16018:	ldr	r1, [fp, #-8]
   1601c:	ldr	r2, [sp, #12]
   16020:	ldr	r3, [sp, #8]
   16024:	ldr	ip, [sp, #4]
   16028:	mov	lr, sp
   1602c:	str	ip, [lr]
   16030:	bl	15f18 <__assert_fail@plt+0x4f0c>
   16034:	add	r0, sp, #4
   16038:	mov	sp, fp
   1603c:	pop	{fp, pc}
   16040:	push	{fp, lr}
   16044:	mov	fp, sp
   16048:	sub	sp, sp, #16
   1604c:	movw	r0, #53580	; 0xd14c
   16050:	movt	r0, #2
   16054:	ldr	r1, [r0]
   16058:	movw	r0, #46770	; 0xb6b2
   1605c:	movt	r0, #1
   16060:	bl	10dcc <fputs_unlocked@plt>
   16064:	movw	r1, #48755	; 0xbe73
   16068:	movt	r1, #1
   1606c:	str	r0, [fp, #-4]
   16070:	mov	r0, r1
   16074:	bl	10f1c <gettext@plt>
   16078:	movw	r1, #48775	; 0xbe87
   1607c:	movt	r1, #1
   16080:	bl	10dfc <printf@plt>
   16084:	movw	r1, #48797	; 0xbe9d
   16088:	movt	r1, #1
   1608c:	str	r0, [sp, #8]
   16090:	mov	r0, r1
   16094:	bl	10f1c <gettext@plt>
   16098:	movw	r1, #46300	; 0xb4dc
   1609c:	movt	r1, #1
   160a0:	movw	r2, #46579	; 0xb5f3
   160a4:	movt	r2, #1
   160a8:	bl	10dfc <printf@plt>
   160ac:	movw	r1, #48817	; 0xbeb1
   160b0:	movt	r1, #1
   160b4:	str	r0, [sp, #4]
   160b8:	mov	r0, r1
   160bc:	bl	10f1c <gettext@plt>
   160c0:	movw	r1, #48856	; 0xbed8
   160c4:	movt	r1, #1
   160c8:	bl	10dfc <printf@plt>
   160cc:	mov	sp, fp
   160d0:	pop	{fp, pc}
   160d4:	push	{fp, lr}
   160d8:	mov	fp, sp
   160dc:	sub	sp, sp, #16
   160e0:	str	r0, [fp, #-4]
   160e4:	str	r1, [sp, #8]
   160e8:	str	r2, [sp, #4]
   160ec:	ldr	r0, [fp, #-4]
   160f0:	ldr	r1, [sp, #8]
   160f4:	ldr	r2, [sp, #4]
   160f8:	bl	16104 <__assert_fail@plt+0x50f8>
   160fc:	mov	sp, fp
   16100:	pop	{fp, pc}
   16104:	push	{fp, lr}
   16108:	mov	fp, sp
   1610c:	sub	sp, sp, #16
   16110:	str	r0, [fp, #-4]
   16114:	str	r1, [sp, #8]
   16118:	str	r2, [sp, #4]
   1611c:	ldr	r0, [fp, #-4]
   16120:	ldr	r1, [sp, #8]
   16124:	ldr	r2, [sp, #4]
   16128:	bl	19518 <__assert_fail@plt+0x850c>
   1612c:	str	r0, [sp]
   16130:	ldr	r0, [sp]
   16134:	movw	r1, #0
   16138:	cmp	r0, r1
   1613c:	bne	1616c <__assert_fail@plt+0x5160>
   16140:	ldr	r0, [fp, #-4]
   16144:	movw	r1, #0
   16148:	cmp	r0, r1
   1614c:	beq	16168 <__assert_fail@plt+0x515c>
   16150:	ldr	r0, [sp, #8]
   16154:	cmp	r0, #0
   16158:	beq	1616c <__assert_fail@plt+0x5160>
   1615c:	ldr	r0, [sp, #4]
   16160:	cmp	r0, #0
   16164:	beq	1616c <__assert_fail@plt+0x5160>
   16168:	bl	18eb0 <__assert_fail@plt+0x7ea4>
   1616c:	ldr	r0, [sp]
   16170:	mov	sp, fp
   16174:	pop	{fp, pc}
   16178:	push	{fp, lr}
   1617c:	mov	fp, sp
   16180:	sub	sp, sp, #8
   16184:	str	r0, [sp, #4]
   16188:	ldr	r0, [sp, #4]
   1618c:	bl	18f9c <__assert_fail@plt+0x7f90>
   16190:	bl	1619c <__assert_fail@plt+0x5190>
   16194:	mov	sp, fp
   16198:	pop	{fp, pc}
   1619c:	push	{fp, lr}
   161a0:	mov	fp, sp
   161a4:	sub	sp, sp, #8
   161a8:	str	r0, [sp, #4]
   161ac:	ldr	r0, [sp, #4]
   161b0:	movw	r1, #0
   161b4:	cmp	r0, r1
   161b8:	bne	161c0 <__assert_fail@plt+0x51b4>
   161bc:	bl	18eb0 <__assert_fail@plt+0x7ea4>
   161c0:	ldr	r0, [sp, #4]
   161c4:	mov	sp, fp
   161c8:	pop	{fp, pc}
   161cc:	push	{fp, lr}
   161d0:	mov	fp, sp
   161d4:	sub	sp, sp, #8
   161d8:	str	r0, [sp, #4]
   161dc:	ldr	r0, [sp, #4]
   161e0:	bl	19254 <__assert_fail@plt+0x8248>
   161e4:	bl	1619c <__assert_fail@plt+0x5190>
   161e8:	mov	sp, fp
   161ec:	pop	{fp, pc}
   161f0:	push	{fp, lr}
   161f4:	mov	fp, sp
   161f8:	sub	sp, sp, #8
   161fc:	str	r0, [sp, #4]
   16200:	ldr	r0, [sp, #4]
   16204:	bl	16178 <__assert_fail@plt+0x516c>
   16208:	mov	sp, fp
   1620c:	pop	{fp, pc}
   16210:	push	{fp, lr}
   16214:	mov	fp, sp
   16218:	sub	sp, sp, #16
   1621c:	str	r0, [fp, #-4]
   16220:	str	r1, [sp, #8]
   16224:	ldr	r0, [fp, #-4]
   16228:	ldr	r1, [sp, #8]
   1622c:	bl	1900c <__assert_fail@plt+0x8000>
   16230:	str	r0, [sp, #4]
   16234:	ldr	r0, [sp, #4]
   16238:	movw	r1, #0
   1623c:	cmp	r0, r1
   16240:	bne	16264 <__assert_fail@plt+0x5258>
   16244:	ldr	r0, [fp, #-4]
   16248:	movw	r1, #0
   1624c:	cmp	r0, r1
   16250:	beq	16260 <__assert_fail@plt+0x5254>
   16254:	ldr	r0, [sp, #8]
   16258:	cmp	r0, #0
   1625c:	beq	16264 <__assert_fail@plt+0x5258>
   16260:	bl	18eb0 <__assert_fail@plt+0x7ea4>
   16264:	ldr	r0, [sp, #4]
   16268:	mov	sp, fp
   1626c:	pop	{fp, pc}
   16270:	push	{fp, lr}
   16274:	mov	fp, sp
   16278:	sub	sp, sp, #8
   1627c:	str	r0, [sp, #4]
   16280:	str	r1, [sp]
   16284:	ldr	r0, [sp, #4]
   16288:	ldr	r1, [sp]
   1628c:	bl	19294 <__assert_fail@plt+0x8288>
   16290:	bl	1619c <__assert_fail@plt+0x5190>
   16294:	mov	sp, fp
   16298:	pop	{fp, pc}
   1629c:	push	{fp, lr}
   162a0:	mov	fp, sp
   162a4:	sub	sp, sp, #16
   162a8:	str	r0, [fp, #-4]
   162ac:	str	r1, [sp, #8]
   162b0:	str	r2, [sp, #4]
   162b4:	ldr	r0, [fp, #-4]
   162b8:	ldr	r1, [sp, #8]
   162bc:	ldr	r2, [sp, #4]
   162c0:	bl	1938c <__assert_fail@plt+0x8380>
   162c4:	bl	1619c <__assert_fail@plt+0x5190>
   162c8:	mov	sp, fp
   162cc:	pop	{fp, pc}
   162d0:	push	{fp, lr}
   162d4:	mov	fp, sp
   162d8:	sub	sp, sp, #8
   162dc:	str	r0, [sp, #4]
   162e0:	str	r1, [sp]
   162e4:	ldr	r1, [sp, #4]
   162e8:	ldr	r2, [sp]
   162ec:	movw	r0, #0
   162f0:	bl	16104 <__assert_fail@plt+0x50f8>
   162f4:	mov	sp, fp
   162f8:	pop	{fp, pc}
   162fc:	push	{fp, lr}
   16300:	mov	fp, sp
   16304:	sub	sp, sp, #8
   16308:	str	r0, [sp, #4]
   1630c:	str	r1, [sp]
   16310:	ldr	r1, [sp, #4]
   16314:	ldr	r2, [sp]
   16318:	movw	r0, #0
   1631c:	bl	1629c <__assert_fail@plt+0x5290>
   16320:	mov	sp, fp
   16324:	pop	{fp, pc}
   16328:	push	{fp, lr}
   1632c:	mov	fp, sp
   16330:	sub	sp, sp, #8
   16334:	str	r0, [sp, #4]
   16338:	str	r1, [sp]
   1633c:	ldr	r0, [sp, #4]
   16340:	ldr	r1, [sp]
   16344:	movw	r2, #1
   16348:	bl	16354 <__assert_fail@plt+0x5348>
   1634c:	mov	sp, fp
   16350:	pop	{fp, pc}
   16354:	push	{fp, lr}
   16358:	mov	fp, sp
   1635c:	sub	sp, sp, #16
   16360:	str	r0, [fp, #-4]
   16364:	str	r1, [sp, #8]
   16368:	str	r2, [sp, #4]
   1636c:	ldr	r0, [sp, #8]
   16370:	ldr	r0, [r0]
   16374:	str	r0, [sp]
   16378:	ldr	r0, [fp, #-4]
   1637c:	movw	r1, #0
   16380:	cmp	r0, r1
   16384:	bne	163d0 <__assert_fail@plt+0x53c4>
   16388:	ldr	r0, [sp]
   1638c:	cmp	r0, #0
   16390:	bne	163cc <__assert_fail@plt+0x53c0>
   16394:	ldr	r0, [sp, #4]
   16398:	movw	r1, #64	; 0x40
   1639c:	udiv	r0, r1, r0
   163a0:	str	r0, [sp]
   163a4:	ldr	r0, [sp]
   163a8:	cmp	r0, #0
   163ac:	movw	r0, #0
   163b0:	movne	r0, #1
   163b4:	mvn	r1, #0
   163b8:	eor	r0, r0, r1
   163bc:	and	r0, r0, #1
   163c0:	ldr	r1, [sp]
   163c4:	add	r0, r1, r0
   163c8:	str	r0, [sp]
   163cc:	b	16400 <__assert_fail@plt+0x53f4>
   163d0:	ldr	r0, [sp]
   163d4:	ldr	r1, [sp]
   163d8:	lsr	r1, r1, #1
   163dc:	add	r1, r1, #1
   163e0:	adds	r0, r0, r1
   163e4:	mov	r1, #0
   163e8:	adc	r1, r1, #0
   163ec:	str	r0, [sp]
   163f0:	tst	r1, #1
   163f4:	beq	163fc <__assert_fail@plt+0x53f0>
   163f8:	bl	18eb0 <__assert_fail@plt+0x7ea4>
   163fc:	b	16400 <__assert_fail@plt+0x53f4>
   16400:	ldr	r0, [fp, #-4]
   16404:	ldr	r1, [sp]
   16408:	ldr	r2, [sp, #4]
   1640c:	bl	16104 <__assert_fail@plt+0x50f8>
   16410:	str	r0, [fp, #-4]
   16414:	ldr	r0, [sp]
   16418:	ldr	r1, [sp, #8]
   1641c:	str	r0, [r1]
   16420:	ldr	r0, [fp, #-4]
   16424:	mov	sp, fp
   16428:	pop	{fp, pc}
   1642c:	push	{fp, lr}
   16430:	mov	fp, sp
   16434:	sub	sp, sp, #216	; 0xd8
   16438:	ldr	ip, [fp, #8]
   1643c:	str	r0, [fp, #-4]
   16440:	str	r1, [fp, #-8]
   16444:	str	r2, [fp, #-12]
   16448:	str	r3, [fp, #-16]
   1644c:	ldr	r0, [fp, #-8]
   16450:	ldr	r0, [r0]
   16454:	str	r0, [fp, #-20]	; 0xffffffec
   16458:	ldr	r0, [fp, #-20]	; 0xffffffec
   1645c:	ldr	r1, [fp, #-20]	; 0xffffffec
   16460:	asr	r1, r1, #1
   16464:	add	r1, r0, r1
   16468:	mov	r2, #1
   1646c:	cmp	r1, r0
   16470:	movwvc	r2, #0
   16474:	str	r1, [fp, #-24]	; 0xffffffe8
   16478:	tst	r2, #1
   1647c:	beq	16488 <__assert_fail@plt+0x547c>
   16480:	ldr	r0, [pc, #4036]	; 1744c <__assert_fail@plt+0x6440>
   16484:	str	r0, [fp, #-24]	; 0xffffffe8
   16488:	ldr	r0, [fp, #-16]
   1648c:	movw	r1, #0
   16490:	cmp	r1, r0
   16494:	bgt	164b0 <__assert_fail@plt+0x54a4>
   16498:	ldr	r0, [fp, #-16]
   1649c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   164a0:	cmp	r0, r1
   164a4:	bge	164b0 <__assert_fail@plt+0x54a4>
   164a8:	ldr	r0, [fp, #-16]
   164ac:	str	r0, [fp, #-24]	; 0xffffffe8
   164b0:	b	16888 <__assert_fail@plt+0x587c>
   164b4:	b	164b8 <__assert_fail@plt+0x54ac>
   164b8:	ldr	r0, [fp, #8]
   164bc:	cmp	r0, #0
   164c0:	bge	165d4 <__assert_fail@plt+0x55c8>
   164c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   164c8:	cmp	r0, #0
   164cc:	bge	16558 <__assert_fail@plt+0x554c>
   164d0:	b	164d4 <__assert_fail@plt+0x54c8>
   164d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   164d8:	ldr	r1, [fp, #8]
   164dc:	movw	r2, #127	; 0x7f
   164e0:	sdiv	r1, r2, r1
   164e4:	cmp	r0, r1
   164e8:	blt	16674 <__assert_fail@plt+0x5668>
   164ec:	b	1668c <__assert_fail@plt+0x5680>
   164f0:	b	164f4 <__assert_fail@plt+0x54e8>
   164f4:	ldr	r0, [pc, #4084]	; 174f0 <__assert_fail@plt+0x64e4>
   164f8:	ldr	r1, [fp, #8]
   164fc:	cmp	r1, r0
   16500:	blt	16518 <__assert_fail@plt+0x550c>
   16504:	b	16524 <__assert_fail@plt+0x5518>
   16508:	ldr	r0, [fp, #8]
   1650c:	movw	r1, #0
   16510:	cmp	r1, r0
   16514:	bge	16524 <__assert_fail@plt+0x5518>
   16518:	movw	r0, #0
   1651c:	str	r0, [fp, #-36]	; 0xffffffdc
   16520:	b	1653c <__assert_fail@plt+0x5530>
   16524:	ldr	r0, [fp, #8]
   16528:	movw	r1, #0
   1652c:	sub	r0, r1, r0
   16530:	movw	r1, #127	; 0x7f
   16534:	sdiv	r0, r1, r0
   16538:	str	r0, [fp, #-36]	; 0xffffffdc
   1653c:	ldr	r0, [fp, #-36]	; 0xffffffdc
   16540:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16544:	mvn	r2, #0
   16548:	sub	r1, r2, r1
   1654c:	cmp	r0, r1
   16550:	ble	16674 <__assert_fail@plt+0x5668>
   16554:	b	1668c <__assert_fail@plt+0x5680>
   16558:	b	1655c <__assert_fail@plt+0x5550>
   1655c:	b	165b8 <__assert_fail@plt+0x55ac>
   16560:	b	165b8 <__assert_fail@plt+0x55ac>
   16564:	ldr	r0, [fp, #8]
   16568:	cmn	r0, #1
   1656c:	bne	165b8 <__assert_fail@plt+0x55ac>
   16570:	b	16574 <__assert_fail@plt+0x5568>
   16574:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16578:	mvn	r1, #127	; 0x7f
   1657c:	add	r0, r0, r1
   16580:	movw	r1, #0
   16584:	cmp	r1, r0
   16588:	blt	16674 <__assert_fail@plt+0x5668>
   1658c:	b	1668c <__assert_fail@plt+0x5680>
   16590:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16594:	movw	r1, #0
   16598:	cmp	r1, r0
   1659c:	bge	1668c <__assert_fail@plt+0x5680>
   165a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   165a4:	sub	r0, r0, #1
   165a8:	movw	r1, #127	; 0x7f
   165ac:	cmp	r1, r0
   165b0:	blt	16674 <__assert_fail@plt+0x5668>
   165b4:	b	1668c <__assert_fail@plt+0x5680>
   165b8:	ldr	r0, [fp, #8]
   165bc:	mvn	r1, #127	; 0x7f
   165c0:	sdiv	r0, r1, r0
   165c4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   165c8:	cmp	r0, r1
   165cc:	blt	16674 <__assert_fail@plt+0x5668>
   165d0:	b	1668c <__assert_fail@plt+0x5680>
   165d4:	ldr	r0, [fp, #8]
   165d8:	cmp	r0, #0
   165dc:	bne	165e4 <__assert_fail@plt+0x55d8>
   165e0:	b	1668c <__assert_fail@plt+0x5680>
   165e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   165e8:	cmp	r0, #0
   165ec:	bge	1665c <__assert_fail@plt+0x5650>
   165f0:	b	165f4 <__assert_fail@plt+0x55e8>
   165f4:	b	16640 <__assert_fail@plt+0x5634>
   165f8:	b	16640 <__assert_fail@plt+0x5634>
   165fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16600:	cmn	r0, #1
   16604:	bne	16640 <__assert_fail@plt+0x5634>
   16608:	b	1660c <__assert_fail@plt+0x5600>
   1660c:	ldr	r0, [fp, #8]
   16610:	mvn	r1, #127	; 0x7f
   16614:	add	r0, r0, r1
   16618:	movw	r1, #0
   1661c:	cmp	r1, r0
   16620:	blt	16674 <__assert_fail@plt+0x5668>
   16624:	b	1668c <__assert_fail@plt+0x5680>
   16628:	ldr	r0, [fp, #8]
   1662c:	sub	r0, r0, #1
   16630:	movw	r1, #127	; 0x7f
   16634:	cmp	r1, r0
   16638:	blt	16674 <__assert_fail@plt+0x5668>
   1663c:	b	1668c <__assert_fail@plt+0x5680>
   16640:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16644:	mvn	r1, #127	; 0x7f
   16648:	sdiv	r0, r1, r0
   1664c:	ldr	r1, [fp, #8]
   16650:	cmp	r0, r1
   16654:	blt	16674 <__assert_fail@plt+0x5668>
   16658:	b	1668c <__assert_fail@plt+0x5680>
   1665c:	ldr	r0, [fp, #8]
   16660:	movw	r1, #127	; 0x7f
   16664:	sdiv	r0, r1, r0
   16668:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1666c:	cmp	r0, r1
   16670:	bge	1668c <__assert_fail@plt+0x5680>
   16674:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16678:	ldr	r1, [fp, #8]
   1667c:	mul	r0, r0, r1
   16680:	sxtb	r0, r0
   16684:	str	r0, [fp, #-28]	; 0xffffffe4
   16688:	b	17850 <__assert_fail@plt+0x6844>
   1668c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16690:	ldr	r1, [fp, #8]
   16694:	mul	r0, r0, r1
   16698:	sxtb	r0, r0
   1669c:	str	r0, [fp, #-28]	; 0xffffffe4
   166a0:	b	1785c <__assert_fail@plt+0x6850>
   166a4:	ldr	r0, [fp, #8]
   166a8:	cmp	r0, #0
   166ac:	bge	167bc <__assert_fail@plt+0x57b0>
   166b0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   166b4:	cmp	r0, #0
   166b8:	bge	16744 <__assert_fail@plt+0x5738>
   166bc:	b	166c0 <__assert_fail@plt+0x56b4>
   166c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   166c4:	ldr	r1, [fp, #8]
   166c8:	movw	r2, #255	; 0xff
   166cc:	sdiv	r1, r2, r1
   166d0:	cmp	r0, r1
   166d4:	blt	16858 <__assert_fail@plt+0x584c>
   166d8:	b	16870 <__assert_fail@plt+0x5864>
   166dc:	b	166e0 <__assert_fail@plt+0x56d4>
   166e0:	ldr	r0, [pc, #3592]	; 174f0 <__assert_fail@plt+0x64e4>
   166e4:	ldr	r1, [fp, #8]
   166e8:	cmp	r1, r0
   166ec:	blt	16704 <__assert_fail@plt+0x56f8>
   166f0:	b	16710 <__assert_fail@plt+0x5704>
   166f4:	ldr	r0, [fp, #8]
   166f8:	movw	r1, #0
   166fc:	cmp	r1, r0
   16700:	bge	16710 <__assert_fail@plt+0x5704>
   16704:	movw	r0, #0
   16708:	str	r0, [fp, #-40]	; 0xffffffd8
   1670c:	b	16728 <__assert_fail@plt+0x571c>
   16710:	ldr	r0, [fp, #8]
   16714:	movw	r1, #0
   16718:	sub	r0, r1, r0
   1671c:	movw	r1, #255	; 0xff
   16720:	sdiv	r0, r1, r0
   16724:	str	r0, [fp, #-40]	; 0xffffffd8
   16728:	ldr	r0, [fp, #-40]	; 0xffffffd8
   1672c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16730:	mvn	r2, #0
   16734:	sub	r1, r2, r1
   16738:	cmp	r0, r1
   1673c:	ble	16858 <__assert_fail@plt+0x584c>
   16740:	b	16870 <__assert_fail@plt+0x5864>
   16744:	b	16748 <__assert_fail@plt+0x573c>
   16748:	b	167a0 <__assert_fail@plt+0x5794>
   1674c:	b	167a0 <__assert_fail@plt+0x5794>
   16750:	ldr	r0, [fp, #8]
   16754:	cmn	r0, #1
   16758:	bne	167a0 <__assert_fail@plt+0x5794>
   1675c:	b	16760 <__assert_fail@plt+0x5754>
   16760:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16764:	add	r0, r0, #0
   16768:	movw	r1, #0
   1676c:	cmp	r1, r0
   16770:	blt	16858 <__assert_fail@plt+0x584c>
   16774:	b	16870 <__assert_fail@plt+0x5864>
   16778:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1677c:	movw	r1, #0
   16780:	cmp	r1, r0
   16784:	bge	16870 <__assert_fail@plt+0x5864>
   16788:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1678c:	sub	r0, r0, #1
   16790:	mvn	r1, #0
   16794:	cmp	r1, r0
   16798:	blt	16858 <__assert_fail@plt+0x584c>
   1679c:	b	16870 <__assert_fail@plt+0x5864>
   167a0:	ldr	r0, [fp, #8]
   167a4:	movw	r1, #0
   167a8:	sdiv	r0, r1, r0
   167ac:	ldr	r1, [fp, #-24]	; 0xffffffe8
   167b0:	cmp	r0, r1
   167b4:	blt	16858 <__assert_fail@plt+0x584c>
   167b8:	b	16870 <__assert_fail@plt+0x5864>
   167bc:	ldr	r0, [fp, #8]
   167c0:	cmp	r0, #0
   167c4:	bne	167cc <__assert_fail@plt+0x57c0>
   167c8:	b	16870 <__assert_fail@plt+0x5864>
   167cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   167d0:	cmp	r0, #0
   167d4:	bge	16840 <__assert_fail@plt+0x5834>
   167d8:	b	167dc <__assert_fail@plt+0x57d0>
   167dc:	b	16824 <__assert_fail@plt+0x5818>
   167e0:	b	16824 <__assert_fail@plt+0x5818>
   167e4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   167e8:	cmn	r0, #1
   167ec:	bne	16824 <__assert_fail@plt+0x5818>
   167f0:	b	167f4 <__assert_fail@plt+0x57e8>
   167f4:	ldr	r0, [fp, #8]
   167f8:	add	r0, r0, #0
   167fc:	movw	r1, #0
   16800:	cmp	r1, r0
   16804:	blt	16858 <__assert_fail@plt+0x584c>
   16808:	b	16870 <__assert_fail@plt+0x5864>
   1680c:	ldr	r0, [fp, #8]
   16810:	sub	r0, r0, #1
   16814:	mvn	r1, #0
   16818:	cmp	r1, r0
   1681c:	blt	16858 <__assert_fail@plt+0x584c>
   16820:	b	16870 <__assert_fail@plt+0x5864>
   16824:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16828:	movw	r1, #0
   1682c:	sdiv	r0, r1, r0
   16830:	ldr	r1, [fp, #8]
   16834:	cmp	r0, r1
   16838:	blt	16858 <__assert_fail@plt+0x584c>
   1683c:	b	16870 <__assert_fail@plt+0x5864>
   16840:	ldr	r0, [fp, #8]
   16844:	movw	r1, #255	; 0xff
   16848:	sdiv	r0, r1, r0
   1684c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16850:	cmp	r0, r1
   16854:	bge	16870 <__assert_fail@plt+0x5864>
   16858:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1685c:	ldr	r1, [fp, #8]
   16860:	mul	r0, r0, r1
   16864:	and	r0, r0, #255	; 0xff
   16868:	str	r0, [fp, #-28]	; 0xffffffe4
   1686c:	b	17850 <__assert_fail@plt+0x6844>
   16870:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16874:	ldr	r1, [fp, #8]
   16878:	mul	r0, r0, r1
   1687c:	and	r0, r0, #255	; 0xff
   16880:	str	r0, [fp, #-28]	; 0xffffffe4
   16884:	b	1785c <__assert_fail@plt+0x6850>
   16888:	b	16c60 <__assert_fail@plt+0x5c54>
   1688c:	b	16890 <__assert_fail@plt+0x5884>
   16890:	ldr	r0, [fp, #8]
   16894:	cmp	r0, #0
   16898:	bge	169ac <__assert_fail@plt+0x59a0>
   1689c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   168a0:	cmp	r0, #0
   168a4:	bge	16930 <__assert_fail@plt+0x5924>
   168a8:	b	168ac <__assert_fail@plt+0x58a0>
   168ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   168b0:	ldr	r1, [fp, #8]
   168b4:	movw	r2, #32767	; 0x7fff
   168b8:	sdiv	r1, r2, r1
   168bc:	cmp	r0, r1
   168c0:	blt	16a4c <__assert_fail@plt+0x5a40>
   168c4:	b	16a64 <__assert_fail@plt+0x5a58>
   168c8:	b	168cc <__assert_fail@plt+0x58c0>
   168cc:	ldr	r0, [pc, #3100]	; 174f0 <__assert_fail@plt+0x64e4>
   168d0:	ldr	r1, [fp, #8]
   168d4:	cmp	r1, r0
   168d8:	blt	168f0 <__assert_fail@plt+0x58e4>
   168dc:	b	168fc <__assert_fail@plt+0x58f0>
   168e0:	ldr	r0, [fp, #8]
   168e4:	movw	r1, #0
   168e8:	cmp	r1, r0
   168ec:	bge	168fc <__assert_fail@plt+0x58f0>
   168f0:	movw	r0, #0
   168f4:	str	r0, [fp, #-44]	; 0xffffffd4
   168f8:	b	16914 <__assert_fail@plt+0x5908>
   168fc:	ldr	r0, [fp, #8]
   16900:	movw	r1, #0
   16904:	sub	r0, r1, r0
   16908:	movw	r1, #32767	; 0x7fff
   1690c:	sdiv	r0, r1, r0
   16910:	str	r0, [fp, #-44]	; 0xffffffd4
   16914:	ldr	r0, [fp, #-44]	; 0xffffffd4
   16918:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1691c:	mvn	r2, #0
   16920:	sub	r1, r2, r1
   16924:	cmp	r0, r1
   16928:	ble	16a4c <__assert_fail@plt+0x5a40>
   1692c:	b	16a64 <__assert_fail@plt+0x5a58>
   16930:	b	16934 <__assert_fail@plt+0x5928>
   16934:	b	16990 <__assert_fail@plt+0x5984>
   16938:	b	16990 <__assert_fail@plt+0x5984>
   1693c:	ldr	r0, [fp, #8]
   16940:	cmn	r0, #1
   16944:	bne	16990 <__assert_fail@plt+0x5984>
   16948:	b	1694c <__assert_fail@plt+0x5940>
   1694c:	ldr	r0, [pc, #4068]	; 17938 <__assert_fail@plt+0x692c>
   16950:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16954:	add	r0, r1, r0
   16958:	movw	r1, #0
   1695c:	cmp	r1, r0
   16960:	blt	16a4c <__assert_fail@plt+0x5a40>
   16964:	b	16a64 <__assert_fail@plt+0x5a58>
   16968:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1696c:	movw	r1, #0
   16970:	cmp	r1, r0
   16974:	bge	16a64 <__assert_fail@plt+0x5a58>
   16978:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1697c:	sub	r0, r0, #1
   16980:	movw	r1, #32767	; 0x7fff
   16984:	cmp	r1, r0
   16988:	blt	16a4c <__assert_fail@plt+0x5a40>
   1698c:	b	16a64 <__assert_fail@plt+0x5a58>
   16990:	ldr	r0, [pc, #4000]	; 17938 <__assert_fail@plt+0x692c>
   16994:	ldr	r1, [fp, #8]
   16998:	sdiv	r0, r0, r1
   1699c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   169a0:	cmp	r0, r1
   169a4:	blt	16a4c <__assert_fail@plt+0x5a40>
   169a8:	b	16a64 <__assert_fail@plt+0x5a58>
   169ac:	ldr	r0, [fp, #8]
   169b0:	cmp	r0, #0
   169b4:	bne	169bc <__assert_fail@plt+0x59b0>
   169b8:	b	16a64 <__assert_fail@plt+0x5a58>
   169bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   169c0:	cmp	r0, #0
   169c4:	bge	16a34 <__assert_fail@plt+0x5a28>
   169c8:	b	169cc <__assert_fail@plt+0x59c0>
   169cc:	b	16a18 <__assert_fail@plt+0x5a0c>
   169d0:	b	16a18 <__assert_fail@plt+0x5a0c>
   169d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   169d8:	cmn	r0, #1
   169dc:	bne	16a18 <__assert_fail@plt+0x5a0c>
   169e0:	b	169e4 <__assert_fail@plt+0x59d8>
   169e4:	ldr	r0, [pc, #3916]	; 17938 <__assert_fail@plt+0x692c>
   169e8:	ldr	r1, [fp, #8]
   169ec:	add	r0, r1, r0
   169f0:	movw	r1, #0
   169f4:	cmp	r1, r0
   169f8:	blt	16a4c <__assert_fail@plt+0x5a40>
   169fc:	b	16a64 <__assert_fail@plt+0x5a58>
   16a00:	ldr	r0, [fp, #8]
   16a04:	sub	r0, r0, #1
   16a08:	movw	r1, #32767	; 0x7fff
   16a0c:	cmp	r1, r0
   16a10:	blt	16a4c <__assert_fail@plt+0x5a40>
   16a14:	b	16a64 <__assert_fail@plt+0x5a58>
   16a18:	ldr	r0, [pc, #3864]	; 17938 <__assert_fail@plt+0x692c>
   16a1c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16a20:	sdiv	r0, r0, r1
   16a24:	ldr	r1, [fp, #8]
   16a28:	cmp	r0, r1
   16a2c:	blt	16a4c <__assert_fail@plt+0x5a40>
   16a30:	b	16a64 <__assert_fail@plt+0x5a58>
   16a34:	ldr	r0, [fp, #8]
   16a38:	movw	r1, #32767	; 0x7fff
   16a3c:	sdiv	r0, r1, r0
   16a40:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16a44:	cmp	r0, r1
   16a48:	bge	16a64 <__assert_fail@plt+0x5a58>
   16a4c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16a50:	ldr	r1, [fp, #8]
   16a54:	mul	r0, r0, r1
   16a58:	sxth	r0, r0
   16a5c:	str	r0, [fp, #-28]	; 0xffffffe4
   16a60:	b	17850 <__assert_fail@plt+0x6844>
   16a64:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16a68:	ldr	r1, [fp, #8]
   16a6c:	mul	r0, r0, r1
   16a70:	sxth	r0, r0
   16a74:	str	r0, [fp, #-28]	; 0xffffffe4
   16a78:	b	1785c <__assert_fail@plt+0x6850>
   16a7c:	ldr	r0, [fp, #8]
   16a80:	cmp	r0, #0
   16a84:	bge	16b94 <__assert_fail@plt+0x5b88>
   16a88:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16a8c:	cmp	r0, #0
   16a90:	bge	16b1c <__assert_fail@plt+0x5b10>
   16a94:	b	16a98 <__assert_fail@plt+0x5a8c>
   16a98:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16a9c:	ldr	r1, [fp, #8]
   16aa0:	movw	r2, #65535	; 0xffff
   16aa4:	sdiv	r1, r2, r1
   16aa8:	cmp	r0, r1
   16aac:	blt	16c30 <__assert_fail@plt+0x5c24>
   16ab0:	b	16c48 <__assert_fail@plt+0x5c3c>
   16ab4:	b	16ab8 <__assert_fail@plt+0x5aac>
   16ab8:	ldr	r0, [pc, #2608]	; 174f0 <__assert_fail@plt+0x64e4>
   16abc:	ldr	r1, [fp, #8]
   16ac0:	cmp	r1, r0
   16ac4:	blt	16adc <__assert_fail@plt+0x5ad0>
   16ac8:	b	16ae8 <__assert_fail@plt+0x5adc>
   16acc:	ldr	r0, [fp, #8]
   16ad0:	movw	r1, #0
   16ad4:	cmp	r1, r0
   16ad8:	bge	16ae8 <__assert_fail@plt+0x5adc>
   16adc:	movw	r0, #0
   16ae0:	str	r0, [fp, #-48]	; 0xffffffd0
   16ae4:	b	16b00 <__assert_fail@plt+0x5af4>
   16ae8:	ldr	r0, [fp, #8]
   16aec:	movw	r1, #0
   16af0:	sub	r0, r1, r0
   16af4:	movw	r1, #65535	; 0xffff
   16af8:	sdiv	r0, r1, r0
   16afc:	str	r0, [fp, #-48]	; 0xffffffd0
   16b00:	ldr	r0, [fp, #-48]	; 0xffffffd0
   16b04:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16b08:	mvn	r2, #0
   16b0c:	sub	r1, r2, r1
   16b10:	cmp	r0, r1
   16b14:	ble	16c30 <__assert_fail@plt+0x5c24>
   16b18:	b	16c48 <__assert_fail@plt+0x5c3c>
   16b1c:	b	16b20 <__assert_fail@plt+0x5b14>
   16b20:	b	16b78 <__assert_fail@plt+0x5b6c>
   16b24:	b	16b78 <__assert_fail@plt+0x5b6c>
   16b28:	ldr	r0, [fp, #8]
   16b2c:	cmn	r0, #1
   16b30:	bne	16b78 <__assert_fail@plt+0x5b6c>
   16b34:	b	16b38 <__assert_fail@plt+0x5b2c>
   16b38:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16b3c:	add	r0, r0, #0
   16b40:	movw	r1, #0
   16b44:	cmp	r1, r0
   16b48:	blt	16c30 <__assert_fail@plt+0x5c24>
   16b4c:	b	16c48 <__assert_fail@plt+0x5c3c>
   16b50:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16b54:	movw	r1, #0
   16b58:	cmp	r1, r0
   16b5c:	bge	16c48 <__assert_fail@plt+0x5c3c>
   16b60:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16b64:	sub	r0, r0, #1
   16b68:	mvn	r1, #0
   16b6c:	cmp	r1, r0
   16b70:	blt	16c30 <__assert_fail@plt+0x5c24>
   16b74:	b	16c48 <__assert_fail@plt+0x5c3c>
   16b78:	ldr	r0, [fp, #8]
   16b7c:	movw	r1, #0
   16b80:	sdiv	r0, r1, r0
   16b84:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16b88:	cmp	r0, r1
   16b8c:	blt	16c30 <__assert_fail@plt+0x5c24>
   16b90:	b	16c48 <__assert_fail@plt+0x5c3c>
   16b94:	ldr	r0, [fp, #8]
   16b98:	cmp	r0, #0
   16b9c:	bne	16ba4 <__assert_fail@plt+0x5b98>
   16ba0:	b	16c48 <__assert_fail@plt+0x5c3c>
   16ba4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16ba8:	cmp	r0, #0
   16bac:	bge	16c18 <__assert_fail@plt+0x5c0c>
   16bb0:	b	16bb4 <__assert_fail@plt+0x5ba8>
   16bb4:	b	16bfc <__assert_fail@plt+0x5bf0>
   16bb8:	b	16bfc <__assert_fail@plt+0x5bf0>
   16bbc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16bc0:	cmn	r0, #1
   16bc4:	bne	16bfc <__assert_fail@plt+0x5bf0>
   16bc8:	b	16bcc <__assert_fail@plt+0x5bc0>
   16bcc:	ldr	r0, [fp, #8]
   16bd0:	add	r0, r0, #0
   16bd4:	movw	r1, #0
   16bd8:	cmp	r1, r0
   16bdc:	blt	16c30 <__assert_fail@plt+0x5c24>
   16be0:	b	16c48 <__assert_fail@plt+0x5c3c>
   16be4:	ldr	r0, [fp, #8]
   16be8:	sub	r0, r0, #1
   16bec:	mvn	r1, #0
   16bf0:	cmp	r1, r0
   16bf4:	blt	16c30 <__assert_fail@plt+0x5c24>
   16bf8:	b	16c48 <__assert_fail@plt+0x5c3c>
   16bfc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16c00:	movw	r1, #0
   16c04:	sdiv	r0, r1, r0
   16c08:	ldr	r1, [fp, #8]
   16c0c:	cmp	r0, r1
   16c10:	blt	16c30 <__assert_fail@plt+0x5c24>
   16c14:	b	16c48 <__assert_fail@plt+0x5c3c>
   16c18:	ldr	r0, [fp, #8]
   16c1c:	movw	r1, #65535	; 0xffff
   16c20:	sdiv	r0, r1, r0
   16c24:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16c28:	cmp	r0, r1
   16c2c:	bge	16c48 <__assert_fail@plt+0x5c3c>
   16c30:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16c34:	ldr	r1, [fp, #8]
   16c38:	mul	r0, r0, r1
   16c3c:	uxth	r0, r0
   16c40:	str	r0, [fp, #-28]	; 0xffffffe4
   16c44:	b	17850 <__assert_fail@plt+0x6844>
   16c48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16c4c:	ldr	r1, [fp, #8]
   16c50:	mul	r0, r0, r1
   16c54:	uxth	r0, r0
   16c58:	str	r0, [fp, #-28]	; 0xffffffe4
   16c5c:	b	1785c <__assert_fail@plt+0x6850>
   16c60:	b	16c64 <__assert_fail@plt+0x5c58>
   16c64:	b	16c68 <__assert_fail@plt+0x5c5c>
   16c68:	ldr	r0, [fp, #8]
   16c6c:	cmp	r0, #0
   16c70:	bge	16d74 <__assert_fail@plt+0x5d68>
   16c74:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16c78:	cmp	r0, #0
   16c7c:	bge	16d08 <__assert_fail@plt+0x5cfc>
   16c80:	b	16c84 <__assert_fail@plt+0x5c78>
   16c84:	ldr	r0, [pc, #1984]	; 1744c <__assert_fail@plt+0x6440>
   16c88:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16c8c:	ldr	r2, [fp, #8]
   16c90:	sdiv	r0, r0, r2
   16c94:	cmp	r1, r0
   16c98:	blt	16e04 <__assert_fail@plt+0x5df8>
   16c9c:	b	16e18 <__assert_fail@plt+0x5e0c>
   16ca0:	b	16ca4 <__assert_fail@plt+0x5c98>
   16ca4:	ldr	r0, [pc, #2116]	; 174f0 <__assert_fail@plt+0x64e4>
   16ca8:	ldr	r1, [fp, #8]
   16cac:	cmp	r1, r0
   16cb0:	blt	16cc8 <__assert_fail@plt+0x5cbc>
   16cb4:	b	16cd4 <__assert_fail@plt+0x5cc8>
   16cb8:	ldr	r0, [fp, #8]
   16cbc:	movw	r1, #0
   16cc0:	cmp	r1, r0
   16cc4:	bge	16cd4 <__assert_fail@plt+0x5cc8>
   16cc8:	movw	r0, #0
   16ccc:	str	r0, [fp, #-52]	; 0xffffffcc
   16cd0:	b	16cec <__assert_fail@plt+0x5ce0>
   16cd4:	ldr	r0, [pc, #1904]	; 1744c <__assert_fail@plt+0x6440>
   16cd8:	ldr	r1, [fp, #8]
   16cdc:	movw	r2, #0
   16ce0:	sub	r1, r2, r1
   16ce4:	sdiv	r0, r0, r1
   16ce8:	str	r0, [fp, #-52]	; 0xffffffcc
   16cec:	ldr	r0, [fp, #-52]	; 0xffffffcc
   16cf0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16cf4:	mvn	r2, #0
   16cf8:	sub	r1, r2, r1
   16cfc:	cmp	r0, r1
   16d00:	ble	16e04 <__assert_fail@plt+0x5df8>
   16d04:	b	16e18 <__assert_fail@plt+0x5e0c>
   16d08:	ldr	r0, [fp, #8]
   16d0c:	cmn	r0, #1
   16d10:	bne	16d58 <__assert_fail@plt+0x5d4c>
   16d14:	b	16d18 <__assert_fail@plt+0x5d0c>
   16d18:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16d1c:	add	r0, r0, #-2147483648	; 0x80000000
   16d20:	movw	r1, #0
   16d24:	cmp	r1, r0
   16d28:	blt	16e04 <__assert_fail@plt+0x5df8>
   16d2c:	b	16e18 <__assert_fail@plt+0x5e0c>
   16d30:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16d34:	movw	r1, #0
   16d38:	cmp	r1, r0
   16d3c:	bge	16e18 <__assert_fail@plt+0x5e0c>
   16d40:	ldr	r0, [pc, #1796]	; 1744c <__assert_fail@plt+0x6440>
   16d44:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16d48:	sub	r1, r1, #1
   16d4c:	cmp	r0, r1
   16d50:	blt	16e04 <__assert_fail@plt+0x5df8>
   16d54:	b	16e18 <__assert_fail@plt+0x5e0c>
   16d58:	ldr	r0, [pc, #4080]	; 17d50 <__assert_fail@plt+0x6d44>
   16d5c:	ldr	r1, [fp, #8]
   16d60:	sdiv	r0, r0, r1
   16d64:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16d68:	cmp	r0, r1
   16d6c:	blt	16e04 <__assert_fail@plt+0x5df8>
   16d70:	b	16e18 <__assert_fail@plt+0x5e0c>
   16d74:	ldr	r0, [fp, #8]
   16d78:	cmp	r0, #0
   16d7c:	bne	16d84 <__assert_fail@plt+0x5d78>
   16d80:	b	16e18 <__assert_fail@plt+0x5e0c>
   16d84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16d88:	cmp	r0, #0
   16d8c:	bge	16dec <__assert_fail@plt+0x5de0>
   16d90:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16d94:	cmn	r0, #1
   16d98:	bne	16dd0 <__assert_fail@plt+0x5dc4>
   16d9c:	b	16da0 <__assert_fail@plt+0x5d94>
   16da0:	ldr	r0, [fp, #8]
   16da4:	add	r0, r0, #-2147483648	; 0x80000000
   16da8:	movw	r1, #0
   16dac:	cmp	r1, r0
   16db0:	blt	16e04 <__assert_fail@plt+0x5df8>
   16db4:	b	16e18 <__assert_fail@plt+0x5e0c>
   16db8:	ldr	r0, [pc, #1676]	; 1744c <__assert_fail@plt+0x6440>
   16dbc:	ldr	r1, [fp, #8]
   16dc0:	sub	r1, r1, #1
   16dc4:	cmp	r0, r1
   16dc8:	blt	16e04 <__assert_fail@plt+0x5df8>
   16dcc:	b	16e18 <__assert_fail@plt+0x5e0c>
   16dd0:	ldr	r0, [pc, #3960]	; 17d50 <__assert_fail@plt+0x6d44>
   16dd4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16dd8:	sdiv	r0, r0, r1
   16ddc:	ldr	r1, [fp, #8]
   16de0:	cmp	r0, r1
   16de4:	blt	16e04 <__assert_fail@plt+0x5df8>
   16de8:	b	16e18 <__assert_fail@plt+0x5e0c>
   16dec:	ldr	r0, [pc, #1624]	; 1744c <__assert_fail@plt+0x6440>
   16df0:	ldr	r1, [fp, #8]
   16df4:	sdiv	r0, r0, r1
   16df8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16dfc:	cmp	r0, r1
   16e00:	bge	16e18 <__assert_fail@plt+0x5e0c>
   16e04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16e08:	ldr	r1, [fp, #8]
   16e0c:	mul	r0, r0, r1
   16e10:	str	r0, [fp, #-28]	; 0xffffffe4
   16e14:	b	17850 <__assert_fail@plt+0x6844>
   16e18:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16e1c:	ldr	r1, [fp, #8]
   16e20:	mul	r0, r0, r1
   16e24:	str	r0, [fp, #-28]	; 0xffffffe4
   16e28:	b	1785c <__assert_fail@plt+0x6850>
   16e2c:	ldr	r0, [fp, #8]
   16e30:	cmp	r0, #0
   16e34:	bge	16f44 <__assert_fail@plt+0x5f38>
   16e38:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16e3c:	cmp	r0, #0
   16e40:	bge	16ecc <__assert_fail@plt+0x5ec0>
   16e44:	b	16e64 <__assert_fail@plt+0x5e58>
   16e48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16e4c:	ldr	r1, [fp, #8]
   16e50:	mvn	r2, #0
   16e54:	udiv	r1, r2, r1
   16e58:	cmp	r0, r1
   16e5c:	bcc	16fe0 <__assert_fail@plt+0x5fd4>
   16e60:	b	16ff4 <__assert_fail@plt+0x5fe8>
   16e64:	b	16e68 <__assert_fail@plt+0x5e5c>
   16e68:	ldr	r0, [pc, #1664]	; 174f0 <__assert_fail@plt+0x64e4>
   16e6c:	ldr	r1, [fp, #8]
   16e70:	cmp	r1, r0
   16e74:	blt	16e8c <__assert_fail@plt+0x5e80>
   16e78:	b	16e98 <__assert_fail@plt+0x5e8c>
   16e7c:	ldr	r0, [fp, #8]
   16e80:	movw	r1, #0
   16e84:	cmp	r1, r0
   16e88:	bge	16e98 <__assert_fail@plt+0x5e8c>
   16e8c:	movw	r0, #1
   16e90:	str	r0, [fp, #-56]	; 0xffffffc8
   16e94:	b	16eb0 <__assert_fail@plt+0x5ea4>
   16e98:	ldr	r0, [fp, #8]
   16e9c:	movw	r1, #0
   16ea0:	sub	r0, r1, r0
   16ea4:	mvn	r1, #0
   16ea8:	udiv	r0, r1, r0
   16eac:	str	r0, [fp, #-56]	; 0xffffffc8
   16eb0:	ldr	r0, [fp, #-56]	; 0xffffffc8
   16eb4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16eb8:	mvn	r2, #0
   16ebc:	sub	r1, r2, r1
   16ec0:	cmp	r0, r1
   16ec4:	bls	16fe0 <__assert_fail@plt+0x5fd4>
   16ec8:	b	16ff4 <__assert_fail@plt+0x5fe8>
   16ecc:	b	16ed0 <__assert_fail@plt+0x5ec4>
   16ed0:	b	16f28 <__assert_fail@plt+0x5f1c>
   16ed4:	b	16f28 <__assert_fail@plt+0x5f1c>
   16ed8:	ldr	r0, [fp, #8]
   16edc:	cmn	r0, #1
   16ee0:	bne	16f28 <__assert_fail@plt+0x5f1c>
   16ee4:	b	16ee8 <__assert_fail@plt+0x5edc>
   16ee8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16eec:	add	r0, r0, #0
   16ef0:	movw	r1, #0
   16ef4:	cmp	r1, r0
   16ef8:	blt	16fe0 <__assert_fail@plt+0x5fd4>
   16efc:	b	16ff4 <__assert_fail@plt+0x5fe8>
   16f00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16f04:	movw	r1, #0
   16f08:	cmp	r1, r0
   16f0c:	bge	16ff4 <__assert_fail@plt+0x5fe8>
   16f10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16f14:	sub	r0, r0, #1
   16f18:	mvn	r1, #0
   16f1c:	cmp	r1, r0
   16f20:	blt	16fe0 <__assert_fail@plt+0x5fd4>
   16f24:	b	16ff4 <__assert_fail@plt+0x5fe8>
   16f28:	ldr	r0, [fp, #8]
   16f2c:	movw	r1, #0
   16f30:	sdiv	r0, r1, r0
   16f34:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16f38:	cmp	r0, r1
   16f3c:	blt	16fe0 <__assert_fail@plt+0x5fd4>
   16f40:	b	16ff4 <__assert_fail@plt+0x5fe8>
   16f44:	ldr	r0, [fp, #8]
   16f48:	cmp	r0, #0
   16f4c:	bne	16f54 <__assert_fail@plt+0x5f48>
   16f50:	b	16ff4 <__assert_fail@plt+0x5fe8>
   16f54:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16f58:	cmp	r0, #0
   16f5c:	bge	16fc8 <__assert_fail@plt+0x5fbc>
   16f60:	b	16f64 <__assert_fail@plt+0x5f58>
   16f64:	b	16fac <__assert_fail@plt+0x5fa0>
   16f68:	b	16fac <__assert_fail@plt+0x5fa0>
   16f6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16f70:	cmn	r0, #1
   16f74:	bne	16fac <__assert_fail@plt+0x5fa0>
   16f78:	b	16f7c <__assert_fail@plt+0x5f70>
   16f7c:	ldr	r0, [fp, #8]
   16f80:	add	r0, r0, #0
   16f84:	movw	r1, #0
   16f88:	cmp	r1, r0
   16f8c:	blt	16fe0 <__assert_fail@plt+0x5fd4>
   16f90:	b	16ff4 <__assert_fail@plt+0x5fe8>
   16f94:	ldr	r0, [fp, #8]
   16f98:	sub	r0, r0, #1
   16f9c:	mvn	r1, #0
   16fa0:	cmp	r1, r0
   16fa4:	blt	16fe0 <__assert_fail@plt+0x5fd4>
   16fa8:	b	16ff4 <__assert_fail@plt+0x5fe8>
   16fac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16fb0:	movw	r1, #0
   16fb4:	sdiv	r0, r1, r0
   16fb8:	ldr	r1, [fp, #8]
   16fbc:	cmp	r0, r1
   16fc0:	blt	16fe0 <__assert_fail@plt+0x5fd4>
   16fc4:	b	16ff4 <__assert_fail@plt+0x5fe8>
   16fc8:	ldr	r0, [fp, #8]
   16fcc:	mvn	r1, #0
   16fd0:	udiv	r0, r1, r0
   16fd4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   16fd8:	cmp	r0, r1
   16fdc:	bcs	16ff4 <__assert_fail@plt+0x5fe8>
   16fe0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16fe4:	ldr	r1, [fp, #8]
   16fe8:	mul	r0, r0, r1
   16fec:	str	r0, [fp, #-28]	; 0xffffffe4
   16ff0:	b	17850 <__assert_fail@plt+0x6844>
   16ff4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   16ff8:	ldr	r1, [fp, #8]
   16ffc:	mul	r0, r0, r1
   17000:	str	r0, [fp, #-28]	; 0xffffffe4
   17004:	b	1785c <__assert_fail@plt+0x6850>
   17008:	b	1700c <__assert_fail@plt+0x6000>
   1700c:	b	17010 <__assert_fail@plt+0x6004>
   17010:	ldr	r0, [fp, #8]
   17014:	cmp	r0, #0
   17018:	bge	1711c <__assert_fail@plt+0x6110>
   1701c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17020:	cmp	r0, #0
   17024:	bge	170b0 <__assert_fail@plt+0x60a4>
   17028:	b	1702c <__assert_fail@plt+0x6020>
   1702c:	ldr	r0, [pc, #1048]	; 1744c <__assert_fail@plt+0x6440>
   17030:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17034:	ldr	r2, [fp, #8]
   17038:	sdiv	r0, r0, r2
   1703c:	cmp	r1, r0
   17040:	blt	171ac <__assert_fail@plt+0x61a0>
   17044:	b	171c0 <__assert_fail@plt+0x61b4>
   17048:	b	1704c <__assert_fail@plt+0x6040>
   1704c:	ldr	r0, [pc, #1180]	; 174f0 <__assert_fail@plt+0x64e4>
   17050:	ldr	r1, [fp, #8]
   17054:	cmp	r1, r0
   17058:	blt	17070 <__assert_fail@plt+0x6064>
   1705c:	b	1707c <__assert_fail@plt+0x6070>
   17060:	ldr	r0, [fp, #8]
   17064:	movw	r1, #0
   17068:	cmp	r1, r0
   1706c:	bge	1707c <__assert_fail@plt+0x6070>
   17070:	movw	r0, #0
   17074:	str	r0, [fp, #-60]	; 0xffffffc4
   17078:	b	17094 <__assert_fail@plt+0x6088>
   1707c:	ldr	r0, [pc, #968]	; 1744c <__assert_fail@plt+0x6440>
   17080:	ldr	r1, [fp, #8]
   17084:	movw	r2, #0
   17088:	sub	r1, r2, r1
   1708c:	sdiv	r0, r0, r1
   17090:	str	r0, [fp, #-60]	; 0xffffffc4
   17094:	ldr	r0, [fp, #-60]	; 0xffffffc4
   17098:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1709c:	mvn	r2, #0
   170a0:	sub	r1, r2, r1
   170a4:	cmp	r0, r1
   170a8:	ble	171ac <__assert_fail@plt+0x61a0>
   170ac:	b	171c0 <__assert_fail@plt+0x61b4>
   170b0:	ldr	r0, [fp, #8]
   170b4:	cmn	r0, #1
   170b8:	bne	17100 <__assert_fail@plt+0x60f4>
   170bc:	b	170c0 <__assert_fail@plt+0x60b4>
   170c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   170c4:	add	r0, r0, #-2147483648	; 0x80000000
   170c8:	movw	r1, #0
   170cc:	cmp	r1, r0
   170d0:	blt	171ac <__assert_fail@plt+0x61a0>
   170d4:	b	171c0 <__assert_fail@plt+0x61b4>
   170d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   170dc:	movw	r1, #0
   170e0:	cmp	r1, r0
   170e4:	bge	171c0 <__assert_fail@plt+0x61b4>
   170e8:	ldr	r0, [pc, #860]	; 1744c <__assert_fail@plt+0x6440>
   170ec:	ldr	r1, [fp, #-24]	; 0xffffffe8
   170f0:	sub	r1, r1, #1
   170f4:	cmp	r0, r1
   170f8:	blt	171ac <__assert_fail@plt+0x61a0>
   170fc:	b	171c0 <__assert_fail@plt+0x61b4>
   17100:	ldr	r0, [pc, #3144]	; 17d50 <__assert_fail@plt+0x6d44>
   17104:	ldr	r1, [fp, #8]
   17108:	sdiv	r0, r0, r1
   1710c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17110:	cmp	r0, r1
   17114:	blt	171ac <__assert_fail@plt+0x61a0>
   17118:	b	171c0 <__assert_fail@plt+0x61b4>
   1711c:	ldr	r0, [fp, #8]
   17120:	cmp	r0, #0
   17124:	bne	1712c <__assert_fail@plt+0x6120>
   17128:	b	171c0 <__assert_fail@plt+0x61b4>
   1712c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17130:	cmp	r0, #0
   17134:	bge	17194 <__assert_fail@plt+0x6188>
   17138:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1713c:	cmn	r0, #1
   17140:	bne	17178 <__assert_fail@plt+0x616c>
   17144:	b	17148 <__assert_fail@plt+0x613c>
   17148:	ldr	r0, [fp, #8]
   1714c:	add	r0, r0, #-2147483648	; 0x80000000
   17150:	movw	r1, #0
   17154:	cmp	r1, r0
   17158:	blt	171ac <__assert_fail@plt+0x61a0>
   1715c:	b	171c0 <__assert_fail@plt+0x61b4>
   17160:	ldr	r0, [pc, #740]	; 1744c <__assert_fail@plt+0x6440>
   17164:	ldr	r1, [fp, #8]
   17168:	sub	r1, r1, #1
   1716c:	cmp	r0, r1
   17170:	blt	171ac <__assert_fail@plt+0x61a0>
   17174:	b	171c0 <__assert_fail@plt+0x61b4>
   17178:	ldr	r0, [pc, #3024]	; 17d50 <__assert_fail@plt+0x6d44>
   1717c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17180:	sdiv	r0, r0, r1
   17184:	ldr	r1, [fp, #8]
   17188:	cmp	r0, r1
   1718c:	blt	171ac <__assert_fail@plt+0x61a0>
   17190:	b	171c0 <__assert_fail@plt+0x61b4>
   17194:	ldr	r0, [pc, #688]	; 1744c <__assert_fail@plt+0x6440>
   17198:	ldr	r1, [fp, #8]
   1719c:	sdiv	r0, r0, r1
   171a0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   171a4:	cmp	r0, r1
   171a8:	bge	171c0 <__assert_fail@plt+0x61b4>
   171ac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   171b0:	ldr	r1, [fp, #8]
   171b4:	mul	r0, r0, r1
   171b8:	str	r0, [fp, #-28]	; 0xffffffe4
   171bc:	b	17850 <__assert_fail@plt+0x6844>
   171c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   171c4:	ldr	r1, [fp, #8]
   171c8:	mul	r0, r0, r1
   171cc:	str	r0, [fp, #-28]	; 0xffffffe4
   171d0:	b	1785c <__assert_fail@plt+0x6850>
   171d4:	ldr	r0, [fp, #8]
   171d8:	cmp	r0, #0
   171dc:	bge	172ec <__assert_fail@plt+0x62e0>
   171e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   171e4:	cmp	r0, #0
   171e8:	bge	17274 <__assert_fail@plt+0x6268>
   171ec:	b	1720c <__assert_fail@plt+0x6200>
   171f0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   171f4:	ldr	r1, [fp, #8]
   171f8:	mvn	r2, #0
   171fc:	udiv	r1, r2, r1
   17200:	cmp	r0, r1
   17204:	bcc	17388 <__assert_fail@plt+0x637c>
   17208:	b	1739c <__assert_fail@plt+0x6390>
   1720c:	b	17210 <__assert_fail@plt+0x6204>
   17210:	ldr	r0, [pc, #728]	; 174f0 <__assert_fail@plt+0x64e4>
   17214:	ldr	r1, [fp, #8]
   17218:	cmp	r1, r0
   1721c:	blt	17234 <__assert_fail@plt+0x6228>
   17220:	b	17240 <__assert_fail@plt+0x6234>
   17224:	ldr	r0, [fp, #8]
   17228:	movw	r1, #0
   1722c:	cmp	r1, r0
   17230:	bge	17240 <__assert_fail@plt+0x6234>
   17234:	movw	r0, #1
   17238:	str	r0, [fp, #-64]	; 0xffffffc0
   1723c:	b	17258 <__assert_fail@plt+0x624c>
   17240:	ldr	r0, [fp, #8]
   17244:	movw	r1, #0
   17248:	sub	r0, r1, r0
   1724c:	mvn	r1, #0
   17250:	udiv	r0, r1, r0
   17254:	str	r0, [fp, #-64]	; 0xffffffc0
   17258:	ldr	r0, [fp, #-64]	; 0xffffffc0
   1725c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17260:	mvn	r2, #0
   17264:	sub	r1, r2, r1
   17268:	cmp	r0, r1
   1726c:	bls	17388 <__assert_fail@plt+0x637c>
   17270:	b	1739c <__assert_fail@plt+0x6390>
   17274:	b	17278 <__assert_fail@plt+0x626c>
   17278:	b	172d0 <__assert_fail@plt+0x62c4>
   1727c:	b	172d0 <__assert_fail@plt+0x62c4>
   17280:	ldr	r0, [fp, #8]
   17284:	cmn	r0, #1
   17288:	bne	172d0 <__assert_fail@plt+0x62c4>
   1728c:	b	17290 <__assert_fail@plt+0x6284>
   17290:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17294:	add	r0, r0, #0
   17298:	movw	r1, #0
   1729c:	cmp	r1, r0
   172a0:	blt	17388 <__assert_fail@plt+0x637c>
   172a4:	b	1739c <__assert_fail@plt+0x6390>
   172a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   172ac:	movw	r1, #0
   172b0:	cmp	r1, r0
   172b4:	bge	1739c <__assert_fail@plt+0x6390>
   172b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   172bc:	sub	r0, r0, #1
   172c0:	mvn	r1, #0
   172c4:	cmp	r1, r0
   172c8:	blt	17388 <__assert_fail@plt+0x637c>
   172cc:	b	1739c <__assert_fail@plt+0x6390>
   172d0:	ldr	r0, [fp, #8]
   172d4:	movw	r1, #0
   172d8:	sdiv	r0, r1, r0
   172dc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   172e0:	cmp	r0, r1
   172e4:	blt	17388 <__assert_fail@plt+0x637c>
   172e8:	b	1739c <__assert_fail@plt+0x6390>
   172ec:	ldr	r0, [fp, #8]
   172f0:	cmp	r0, #0
   172f4:	bne	172fc <__assert_fail@plt+0x62f0>
   172f8:	b	1739c <__assert_fail@plt+0x6390>
   172fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17300:	cmp	r0, #0
   17304:	bge	17370 <__assert_fail@plt+0x6364>
   17308:	b	1730c <__assert_fail@plt+0x6300>
   1730c:	b	17354 <__assert_fail@plt+0x6348>
   17310:	b	17354 <__assert_fail@plt+0x6348>
   17314:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17318:	cmn	r0, #1
   1731c:	bne	17354 <__assert_fail@plt+0x6348>
   17320:	b	17324 <__assert_fail@plt+0x6318>
   17324:	ldr	r0, [fp, #8]
   17328:	add	r0, r0, #0
   1732c:	movw	r1, #0
   17330:	cmp	r1, r0
   17334:	blt	17388 <__assert_fail@plt+0x637c>
   17338:	b	1739c <__assert_fail@plt+0x6390>
   1733c:	ldr	r0, [fp, #8]
   17340:	sub	r0, r0, #1
   17344:	mvn	r1, #0
   17348:	cmp	r1, r0
   1734c:	blt	17388 <__assert_fail@plt+0x637c>
   17350:	b	1739c <__assert_fail@plt+0x6390>
   17354:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17358:	movw	r1, #0
   1735c:	sdiv	r0, r1, r0
   17360:	ldr	r1, [fp, #8]
   17364:	cmp	r0, r1
   17368:	blt	17388 <__assert_fail@plt+0x637c>
   1736c:	b	1739c <__assert_fail@plt+0x6390>
   17370:	ldr	r0, [fp, #8]
   17374:	mvn	r1, #0
   17378:	udiv	r0, r1, r0
   1737c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17380:	cmp	r0, r1
   17384:	bcs	1739c <__assert_fail@plt+0x6390>
   17388:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1738c:	ldr	r1, [fp, #8]
   17390:	mul	r0, r0, r1
   17394:	str	r0, [fp, #-28]	; 0xffffffe4
   17398:	b	17850 <__assert_fail@plt+0x6844>
   1739c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   173a0:	ldr	r1, [fp, #8]
   173a4:	mul	r0, r0, r1
   173a8:	str	r0, [fp, #-28]	; 0xffffffe4
   173ac:	b	1785c <__assert_fail@plt+0x6850>
   173b0:	b	173b4 <__assert_fail@plt+0x63a8>
   173b4:	ldr	r0, [fp, #8]
   173b8:	cmp	r0, #0
   173bc:	bge	1752c <__assert_fail@plt+0x6520>
   173c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   173c4:	cmp	r0, #0
   173c8:	bge	174a4 <__assert_fail@plt+0x6498>
   173cc:	b	173d0 <__assert_fail@plt+0x63c4>
   173d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   173d4:	ldr	r1, [fp, #8]
   173d8:	asr	r3, r1, #31
   173dc:	mvn	r2, #0
   173e0:	mvn	ip, #-2147483648	; 0x80000000
   173e4:	str	r0, [fp, #-68]	; 0xffffffbc
   173e8:	mov	r0, r2
   173ec:	str	r1, [fp, #-72]	; 0xffffffb8
   173f0:	mov	r1, ip
   173f4:	ldr	r2, [fp, #-72]	; 0xffffffb8
   173f8:	bl	1b090 <__assert_fail@plt+0xa084>
   173fc:	ldr	r2, [fp, #-68]	; 0xffffffbc
   17400:	subs	r0, r2, r0
   17404:	rscs	r1, r1, r2, asr #31
   17408:	blt	175f4 <__assert_fail@plt+0x65e8>
   1740c:	b	17608 <__assert_fail@plt+0x65fc>
   17410:	b	17414 <__assert_fail@plt+0x6408>
   17414:	ldr	r0, [pc, #212]	; 174f0 <__assert_fail@plt+0x64e4>
   17418:	ldr	r1, [fp, #8]
   1741c:	cmp	r1, r0
   17420:	blt	17438 <__assert_fail@plt+0x642c>
   17424:	b	17450 <__assert_fail@plt+0x6444>
   17428:	ldr	r0, [fp, #8]
   1742c:	movw	r1, #0
   17430:	cmp	r1, r0
   17434:	bge	17450 <__assert_fail@plt+0x6444>
   17438:	mov	r0, #0
   1743c:	mvn	r1, #0
   17440:	str	r1, [fp, #-76]	; 0xffffffb4
   17444:	str	r0, [fp, #-80]	; 0xffffffb0
   17448:	b	17484 <__assert_fail@plt+0x6478>
   1744c:	svcvc	0x00ffffff
   17450:	ldr	r0, [fp, #8]
   17454:	rsb	r0, r0, #0
   17458:	asr	r3, r0, #31
   1745c:	mvn	r1, #0
   17460:	mvn	r2, #-2147483648	; 0x80000000
   17464:	str	r0, [fp, #-84]	; 0xffffffac
   17468:	mov	r0, r1
   1746c:	mov	r1, r2
   17470:	ldr	r2, [fp, #-84]	; 0xffffffac
   17474:	bl	1b090 <__assert_fail@plt+0xa084>
   17478:	str	r0, [fp, #-76]	; 0xffffffb4
   1747c:	str	r1, [fp, #-80]	; 0xffffffb0
   17480:	b	17484 <__assert_fail@plt+0x6478>
   17484:	ldr	r0, [fp, #-80]	; 0xffffffb0
   17488:	ldr	r1, [fp, #-76]	; 0xffffffb4
   1748c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17490:	mvn	r2, r2
   17494:	subs	r1, r2, r1
   17498:	rscs	r0, r0, r2, asr #31
   1749c:	bge	175f4 <__assert_fail@plt+0x65e8>
   174a0:	b	17608 <__assert_fail@plt+0x65fc>
   174a4:	ldr	r0, [fp, #8]
   174a8:	cmn	r0, #1
   174ac:	bne	174f4 <__assert_fail@plt+0x64e8>
   174b0:	b	174b4 <__assert_fail@plt+0x64a8>
   174b4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   174b8:	mov	r1, #-2147483648	; 0x80000000
   174bc:	add	r1, r1, r0, asr #31
   174c0:	rsbs	r0, r0, #0
   174c4:	rscs	r1, r1, #0
   174c8:	blt	175f4 <__assert_fail@plt+0x65e8>
   174cc:	b	17608 <__assert_fail@plt+0x65fc>
   174d0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   174d4:	movw	r1, #0
   174d8:	cmp	r1, r0
   174dc:	bge	17608 <__assert_fail@plt+0x65fc>
   174e0:	mov	r0, #0
   174e4:	cmp	r0, #0
   174e8:	bne	175f4 <__assert_fail@plt+0x65e8>
   174ec:	b	17608 <__assert_fail@plt+0x65fc>
   174f0:	andhi	r0, r0, r1
   174f4:	ldr	r0, [fp, #8]
   174f8:	asr	r3, r0, #31
   174fc:	mov	r1, #0
   17500:	mov	r2, #-2147483648	; 0x80000000
   17504:	str	r0, [fp, #-88]	; 0xffffffa8
   17508:	mov	r0, r1
   1750c:	mov	r1, r2
   17510:	ldr	r2, [fp, #-88]	; 0xffffffa8
   17514:	bl	1b090 <__assert_fail@plt+0xa084>
   17518:	ldr	r2, [fp, #-24]	; 0xffffffe8
   1751c:	subs	r0, r0, r2
   17520:	sbcs	r1, r1, r2, asr #31
   17524:	blt	175f4 <__assert_fail@plt+0x65e8>
   17528:	b	17608 <__assert_fail@plt+0x65fc>
   1752c:	ldr	r0, [fp, #8]
   17530:	cmp	r0, #0
   17534:	bne	1753c <__assert_fail@plt+0x6530>
   17538:	b	17608 <__assert_fail@plt+0x65fc>
   1753c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17540:	cmp	r0, #0
   17544:	bge	175bc <__assert_fail@plt+0x65b0>
   17548:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1754c:	cmn	r0, #1
   17550:	bne	17584 <__assert_fail@plt+0x6578>
   17554:	b	17558 <__assert_fail@plt+0x654c>
   17558:	ldr	r0, [fp, #8]
   1755c:	mov	r1, #-2147483648	; 0x80000000
   17560:	add	r1, r1, r0, asr #31
   17564:	rsbs	r0, r0, #0
   17568:	rscs	r1, r1, #0
   1756c:	blt	175f4 <__assert_fail@plt+0x65e8>
   17570:	b	17608 <__assert_fail@plt+0x65fc>
   17574:	mov	r0, #0
   17578:	cmp	r0, #0
   1757c:	bne	175f4 <__assert_fail@plt+0x65e8>
   17580:	b	17608 <__assert_fail@plt+0x65fc>
   17584:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17588:	asr	r3, r0, #31
   1758c:	mov	r1, #0
   17590:	mov	r2, #-2147483648	; 0x80000000
   17594:	str	r0, [fp, #-92]	; 0xffffffa4
   17598:	mov	r0, r1
   1759c:	mov	r1, r2
   175a0:	ldr	r2, [fp, #-92]	; 0xffffffa4
   175a4:	bl	1b090 <__assert_fail@plt+0xa084>
   175a8:	ldr	r2, [fp, #8]
   175ac:	subs	r0, r0, r2
   175b0:	sbcs	r1, r1, r2, asr #31
   175b4:	blt	175f4 <__assert_fail@plt+0x65e8>
   175b8:	b	17608 <__assert_fail@plt+0x65fc>
   175bc:	ldr	r0, [fp, #8]
   175c0:	asr	r3, r0, #31
   175c4:	mvn	r1, #0
   175c8:	mvn	r2, #-2147483648	; 0x80000000
   175cc:	str	r0, [fp, #-96]	; 0xffffffa0
   175d0:	mov	r0, r1
   175d4:	mov	r1, r2
   175d8:	ldr	r2, [fp, #-96]	; 0xffffffa0
   175dc:	bl	1b090 <__assert_fail@plt+0xa084>
   175e0:	ldr	r2, [fp, #-24]	; 0xffffffe8
   175e4:	subs	r0, r0, r2
   175e8:	sbcs	r1, r1, r2, asr #31
   175ec:	bge	17608 <__assert_fail@plt+0x65fc>
   175f0:	b	175f4 <__assert_fail@plt+0x65e8>
   175f4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   175f8:	ldr	r1, [fp, #8]
   175fc:	mul	r0, r0, r1
   17600:	str	r0, [fp, #-28]	; 0xffffffe4
   17604:	b	17850 <__assert_fail@plt+0x6844>
   17608:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1760c:	ldr	r1, [fp, #8]
   17610:	mul	r0, r0, r1
   17614:	str	r0, [fp, #-28]	; 0xffffffe4
   17618:	b	1785c <__assert_fail@plt+0x6850>
   1761c:	ldr	r0, [fp, #8]
   17620:	cmp	r0, #0
   17624:	bge	17774 <__assert_fail@plt+0x6768>
   17628:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1762c:	cmp	r0, #0
   17630:	bge	176fc <__assert_fail@plt+0x66f0>
   17634:	b	17674 <__assert_fail@plt+0x6668>
   17638:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1763c:	ldr	r1, [fp, #8]
   17640:	asr	r3, r1, #31
   17644:	mvn	r2, #0
   17648:	str	r0, [fp, #-100]	; 0xffffff9c
   1764c:	mov	r0, r2
   17650:	str	r1, [fp, #-104]	; 0xffffff98
   17654:	mov	r1, r2
   17658:	ldr	r2, [fp, #-104]	; 0xffffff98
   1765c:	bl	1b164 <__assert_fail@plt+0xa158>
   17660:	ldr	r2, [fp, #-100]	; 0xffffff9c
   17664:	subs	r0, r2, r0
   17668:	rscs	r1, r1, r2, asr #31
   1766c:	bcc	17828 <__assert_fail@plt+0x681c>
   17670:	b	1783c <__assert_fail@plt+0x6830>
   17674:	b	17678 <__assert_fail@plt+0x666c>
   17678:	ldr	r0, [pc, #-400]	; 174f0 <__assert_fail@plt+0x64e4>
   1767c:	ldr	r1, [fp, #8]
   17680:	cmp	r1, r0
   17684:	blt	1769c <__assert_fail@plt+0x6690>
   17688:	b	176b0 <__assert_fail@plt+0x66a4>
   1768c:	ldr	r0, [fp, #8]
   17690:	movw	r1, #0
   17694:	cmp	r1, r0
   17698:	bge	176b0 <__assert_fail@plt+0x66a4>
   1769c:	mov	r0, #1
   176a0:	mvn	r1, #0
   176a4:	str	r1, [sp, #108]	; 0x6c
   176a8:	str	r0, [sp, #104]	; 0x68
   176ac:	b	176dc <__assert_fail@plt+0x66d0>
   176b0:	ldr	r0, [fp, #8]
   176b4:	rsb	r0, r0, #0
   176b8:	asr	r3, r0, #31
   176bc:	mvn	r1, #0
   176c0:	str	r0, [sp, #100]	; 0x64
   176c4:	mov	r0, r1
   176c8:	ldr	r2, [sp, #100]	; 0x64
   176cc:	bl	1b164 <__assert_fail@plt+0xa158>
   176d0:	str	r0, [sp, #108]	; 0x6c
   176d4:	str	r1, [sp, #104]	; 0x68
   176d8:	b	176dc <__assert_fail@plt+0x66d0>
   176dc:	ldr	r0, [sp, #104]	; 0x68
   176e0:	ldr	r1, [sp, #108]	; 0x6c
   176e4:	ldr	r2, [fp, #-24]	; 0xffffffe8
   176e8:	mvn	r2, r2
   176ec:	subs	r1, r2, r1
   176f0:	rscs	r0, r0, r2, asr #31
   176f4:	bcs	17828 <__assert_fail@plt+0x681c>
   176f8:	b	1783c <__assert_fail@plt+0x6830>
   176fc:	b	17700 <__assert_fail@plt+0x66f4>
   17700:	b	17758 <__assert_fail@plt+0x674c>
   17704:	b	17758 <__assert_fail@plt+0x674c>
   17708:	ldr	r0, [fp, #8]
   1770c:	cmn	r0, #1
   17710:	bne	17758 <__assert_fail@plt+0x674c>
   17714:	b	17718 <__assert_fail@plt+0x670c>
   17718:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1771c:	add	r0, r0, #0
   17720:	movw	r1, #0
   17724:	cmp	r1, r0
   17728:	blt	17828 <__assert_fail@plt+0x681c>
   1772c:	b	1783c <__assert_fail@plt+0x6830>
   17730:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17734:	movw	r1, #0
   17738:	cmp	r1, r0
   1773c:	bge	1783c <__assert_fail@plt+0x6830>
   17740:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17744:	sub	r0, r0, #1
   17748:	mvn	r1, #0
   1774c:	cmp	r1, r0
   17750:	blt	17828 <__assert_fail@plt+0x681c>
   17754:	b	1783c <__assert_fail@plt+0x6830>
   17758:	ldr	r0, [fp, #8]
   1775c:	movw	r1, #0
   17760:	sdiv	r0, r1, r0
   17764:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17768:	cmp	r0, r1
   1776c:	blt	17828 <__assert_fail@plt+0x681c>
   17770:	b	1783c <__assert_fail@plt+0x6830>
   17774:	ldr	r0, [fp, #8]
   17778:	cmp	r0, #0
   1777c:	bne	17784 <__assert_fail@plt+0x6778>
   17780:	b	1783c <__assert_fail@plt+0x6830>
   17784:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17788:	cmp	r0, #0
   1778c:	bge	177f8 <__assert_fail@plt+0x67ec>
   17790:	b	17794 <__assert_fail@plt+0x6788>
   17794:	b	177dc <__assert_fail@plt+0x67d0>
   17798:	b	177dc <__assert_fail@plt+0x67d0>
   1779c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   177a0:	cmn	r0, #1
   177a4:	bne	177dc <__assert_fail@plt+0x67d0>
   177a8:	b	177ac <__assert_fail@plt+0x67a0>
   177ac:	ldr	r0, [fp, #8]
   177b0:	add	r0, r0, #0
   177b4:	movw	r1, #0
   177b8:	cmp	r1, r0
   177bc:	blt	17828 <__assert_fail@plt+0x681c>
   177c0:	b	1783c <__assert_fail@plt+0x6830>
   177c4:	ldr	r0, [fp, #8]
   177c8:	sub	r0, r0, #1
   177cc:	mvn	r1, #0
   177d0:	cmp	r1, r0
   177d4:	blt	17828 <__assert_fail@plt+0x681c>
   177d8:	b	1783c <__assert_fail@plt+0x6830>
   177dc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   177e0:	movw	r1, #0
   177e4:	sdiv	r0, r1, r0
   177e8:	ldr	r1, [fp, #8]
   177ec:	cmp	r0, r1
   177f0:	blt	17828 <__assert_fail@plt+0x681c>
   177f4:	b	1783c <__assert_fail@plt+0x6830>
   177f8:	ldr	r0, [fp, #8]
   177fc:	asr	r3, r0, #31
   17800:	mvn	r1, #0
   17804:	str	r0, [sp, #96]	; 0x60
   17808:	mov	r0, r1
   1780c:	ldr	r2, [sp, #96]	; 0x60
   17810:	bl	1b164 <__assert_fail@plt+0xa158>
   17814:	ldr	r2, [fp, #-24]	; 0xffffffe8
   17818:	subs	r0, r0, r2
   1781c:	sbcs	r1, r1, r2, asr #31
   17820:	bcs	1783c <__assert_fail@plt+0x6830>
   17824:	b	17828 <__assert_fail@plt+0x681c>
   17828:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1782c:	ldr	r1, [fp, #8]
   17830:	mul	r0, r0, r1
   17834:	str	r0, [fp, #-28]	; 0xffffffe4
   17838:	b	17850 <__assert_fail@plt+0x6844>
   1783c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17840:	ldr	r1, [fp, #8]
   17844:	mul	r0, r0, r1
   17848:	str	r0, [fp, #-28]	; 0xffffffe4
   1784c:	b	1785c <__assert_fail@plt+0x6850>
   17850:	ldr	r0, [pc, #-1036]	; 1744c <__assert_fail@plt+0x6440>
   17854:	str	r0, [sp, #92]	; 0x5c
   17858:	b	1787c <__assert_fail@plt+0x6870>
   1785c:	ldr	r0, [fp, #-28]	; 0xffffffe4
   17860:	cmp	r0, #64	; 0x40
   17864:	movw	r0, #0
   17868:	movlt	r0, #1
   1786c:	tst	r0, #1
   17870:	movw	r0, #64	; 0x40
   17874:	moveq	r0, #0
   17878:	str	r0, [sp, #92]	; 0x5c
   1787c:	ldr	r0, [sp, #92]	; 0x5c
   17880:	str	r0, [fp, #-32]	; 0xffffffe0
   17884:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17888:	cmp	r0, #0
   1788c:	beq	178bc <__assert_fail@plt+0x68b0>
   17890:	ldr	r0, [fp, #-32]	; 0xffffffe0
   17894:	ldr	r1, [fp, #8]
   17898:	sdiv	r0, r0, r1
   1789c:	str	r0, [fp, #-24]	; 0xffffffe8
   178a0:	ldr	r0, [fp, #-32]	; 0xffffffe0
   178a4:	mov	r1, r0
   178a8:	ldr	r2, [fp, #8]
   178ac:	sdiv	r3, r0, r2
   178b0:	mls	r0, r3, r2, r0
   178b4:	sub	r0, r1, r0
   178b8:	str	r0, [fp, #-28]	; 0xffffffe4
   178bc:	ldr	r0, [fp, #-4]
   178c0:	movw	r1, #0
   178c4:	cmp	r0, r1
   178c8:	bne	178d8 <__assert_fail@plt+0x68cc>
   178cc:	ldr	r0, [fp, #-8]
   178d0:	movw	r1, #0
   178d4:	str	r1, [r0]
   178d8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   178dc:	ldr	r1, [fp, #-20]	; 0xffffffec
   178e0:	sub	r0, r0, r1
   178e4:	ldr	r1, [fp, #-12]
   178e8:	cmp	r0, r1
   178ec:	bge	18cd8 <__assert_fail@plt+0x7ccc>
   178f0:	ldr	r0, [fp, #-20]	; 0xffffffec
   178f4:	ldr	r1, [fp, #-12]
   178f8:	add	r1, r0, r1
   178fc:	mov	r2, #1
   17900:	cmp	r1, r0
   17904:	movwvc	r2, #0
   17908:	str	r1, [fp, #-24]	; 0xffffffe8
   1790c:	tst	r2, #1
   17910:	bne	18cd4 <__assert_fail@plt+0x7cc8>
   17914:	ldr	r0, [fp, #-16]
   17918:	movw	r1, #0
   1791c:	cmp	r1, r0
   17920:	bgt	17934 <__assert_fail@plt+0x6928>
   17924:	ldr	r0, [fp, #-16]
   17928:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1792c:	cmp	r0, r1
   17930:	blt	18cd4 <__assert_fail@plt+0x7cc8>
   17934:	b	17d10 <__assert_fail@plt+0x6d04>
   17938:			; <UNDEFINED> instruction: 0xffff8000
   1793c:	b	17940 <__assert_fail@plt+0x6934>
   17940:	ldr	r0, [fp, #8]
   17944:	cmp	r0, #0
   17948:	bge	17a5c <__assert_fail@plt+0x6a50>
   1794c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17950:	cmp	r0, #0
   17954:	bge	179e0 <__assert_fail@plt+0x69d4>
   17958:	b	1795c <__assert_fail@plt+0x6950>
   1795c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17960:	ldr	r1, [fp, #8]
   17964:	movw	r2, #127	; 0x7f
   17968:	sdiv	r1, r2, r1
   1796c:	cmp	r0, r1
   17970:	blt	17afc <__assert_fail@plt+0x6af0>
   17974:	b	17b14 <__assert_fail@plt+0x6b08>
   17978:	b	1797c <__assert_fail@plt+0x6970>
   1797c:	ldr	r0, [pc, #-1172]	; 174f0 <__assert_fail@plt+0x64e4>
   17980:	ldr	r1, [fp, #8]
   17984:	cmp	r1, r0
   17988:	blt	179a0 <__assert_fail@plt+0x6994>
   1798c:	b	179ac <__assert_fail@plt+0x69a0>
   17990:	ldr	r0, [fp, #8]
   17994:	movw	r1, #0
   17998:	cmp	r1, r0
   1799c:	bge	179ac <__assert_fail@plt+0x69a0>
   179a0:	movw	r0, #0
   179a4:	str	r0, [sp, #88]	; 0x58
   179a8:	b	179c4 <__assert_fail@plt+0x69b8>
   179ac:	ldr	r0, [fp, #8]
   179b0:	movw	r1, #0
   179b4:	sub	r0, r1, r0
   179b8:	movw	r1, #127	; 0x7f
   179bc:	sdiv	r0, r1, r0
   179c0:	str	r0, [sp, #88]	; 0x58
   179c4:	ldr	r0, [sp, #88]	; 0x58
   179c8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   179cc:	mvn	r2, #0
   179d0:	sub	r1, r2, r1
   179d4:	cmp	r0, r1
   179d8:	ble	17afc <__assert_fail@plt+0x6af0>
   179dc:	b	17b14 <__assert_fail@plt+0x6b08>
   179e0:	b	179e4 <__assert_fail@plt+0x69d8>
   179e4:	b	17a40 <__assert_fail@plt+0x6a34>
   179e8:	b	17a40 <__assert_fail@plt+0x6a34>
   179ec:	ldr	r0, [fp, #8]
   179f0:	cmn	r0, #1
   179f4:	bne	17a40 <__assert_fail@plt+0x6a34>
   179f8:	b	179fc <__assert_fail@plt+0x69f0>
   179fc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17a00:	mvn	r1, #127	; 0x7f
   17a04:	add	r0, r0, r1
   17a08:	movw	r1, #0
   17a0c:	cmp	r1, r0
   17a10:	blt	17afc <__assert_fail@plt+0x6af0>
   17a14:	b	17b14 <__assert_fail@plt+0x6b08>
   17a18:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17a1c:	movw	r1, #0
   17a20:	cmp	r1, r0
   17a24:	bge	17b14 <__assert_fail@plt+0x6b08>
   17a28:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17a2c:	sub	r0, r0, #1
   17a30:	movw	r1, #127	; 0x7f
   17a34:	cmp	r1, r0
   17a38:	blt	17afc <__assert_fail@plt+0x6af0>
   17a3c:	b	17b14 <__assert_fail@plt+0x6b08>
   17a40:	ldr	r0, [fp, #8]
   17a44:	mvn	r1, #127	; 0x7f
   17a48:	sdiv	r0, r1, r0
   17a4c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17a50:	cmp	r0, r1
   17a54:	blt	17afc <__assert_fail@plt+0x6af0>
   17a58:	b	17b14 <__assert_fail@plt+0x6b08>
   17a5c:	ldr	r0, [fp, #8]
   17a60:	cmp	r0, #0
   17a64:	bne	17a6c <__assert_fail@plt+0x6a60>
   17a68:	b	17b14 <__assert_fail@plt+0x6b08>
   17a6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17a70:	cmp	r0, #0
   17a74:	bge	17ae4 <__assert_fail@plt+0x6ad8>
   17a78:	b	17a7c <__assert_fail@plt+0x6a70>
   17a7c:	b	17ac8 <__assert_fail@plt+0x6abc>
   17a80:	b	17ac8 <__assert_fail@plt+0x6abc>
   17a84:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17a88:	cmn	r0, #1
   17a8c:	bne	17ac8 <__assert_fail@plt+0x6abc>
   17a90:	b	17a94 <__assert_fail@plt+0x6a88>
   17a94:	ldr	r0, [fp, #8]
   17a98:	mvn	r1, #127	; 0x7f
   17a9c:	add	r0, r0, r1
   17aa0:	movw	r1, #0
   17aa4:	cmp	r1, r0
   17aa8:	blt	17afc <__assert_fail@plt+0x6af0>
   17aac:	b	17b14 <__assert_fail@plt+0x6b08>
   17ab0:	ldr	r0, [fp, #8]
   17ab4:	sub	r0, r0, #1
   17ab8:	movw	r1, #127	; 0x7f
   17abc:	cmp	r1, r0
   17ac0:	blt	17afc <__assert_fail@plt+0x6af0>
   17ac4:	b	17b14 <__assert_fail@plt+0x6b08>
   17ac8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17acc:	mvn	r1, #127	; 0x7f
   17ad0:	sdiv	r0, r1, r0
   17ad4:	ldr	r1, [fp, #8]
   17ad8:	cmp	r0, r1
   17adc:	blt	17afc <__assert_fail@plt+0x6af0>
   17ae0:	b	17b14 <__assert_fail@plt+0x6b08>
   17ae4:	ldr	r0, [fp, #8]
   17ae8:	movw	r1, #127	; 0x7f
   17aec:	sdiv	r0, r1, r0
   17af0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17af4:	cmp	r0, r1
   17af8:	bge	17b14 <__assert_fail@plt+0x6b08>
   17afc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17b00:	ldr	r1, [fp, #8]
   17b04:	mul	r0, r0, r1
   17b08:	sxtb	r0, r0
   17b0c:	str	r0, [fp, #-28]	; 0xffffffe4
   17b10:	b	18cd4 <__assert_fail@plt+0x7cc8>
   17b14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17b18:	ldr	r1, [fp, #8]
   17b1c:	mul	r0, r0, r1
   17b20:	sxtb	r0, r0
   17b24:	str	r0, [fp, #-28]	; 0xffffffe4
   17b28:	b	18cd8 <__assert_fail@plt+0x7ccc>
   17b2c:	ldr	r0, [fp, #8]
   17b30:	cmp	r0, #0
   17b34:	bge	17c44 <__assert_fail@plt+0x6c38>
   17b38:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17b3c:	cmp	r0, #0
   17b40:	bge	17bcc <__assert_fail@plt+0x6bc0>
   17b44:	b	17b48 <__assert_fail@plt+0x6b3c>
   17b48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17b4c:	ldr	r1, [fp, #8]
   17b50:	movw	r2, #255	; 0xff
   17b54:	sdiv	r1, r2, r1
   17b58:	cmp	r0, r1
   17b5c:	blt	17ce0 <__assert_fail@plt+0x6cd4>
   17b60:	b	17cf8 <__assert_fail@plt+0x6cec>
   17b64:	b	17b68 <__assert_fail@plt+0x6b5c>
   17b68:	ldr	r0, [pc, #-1664]	; 174f0 <__assert_fail@plt+0x64e4>
   17b6c:	ldr	r1, [fp, #8]
   17b70:	cmp	r1, r0
   17b74:	blt	17b8c <__assert_fail@plt+0x6b80>
   17b78:	b	17b98 <__assert_fail@plt+0x6b8c>
   17b7c:	ldr	r0, [fp, #8]
   17b80:	movw	r1, #0
   17b84:	cmp	r1, r0
   17b88:	bge	17b98 <__assert_fail@plt+0x6b8c>
   17b8c:	movw	r0, #0
   17b90:	str	r0, [sp, #84]	; 0x54
   17b94:	b	17bb0 <__assert_fail@plt+0x6ba4>
   17b98:	ldr	r0, [fp, #8]
   17b9c:	movw	r1, #0
   17ba0:	sub	r0, r1, r0
   17ba4:	movw	r1, #255	; 0xff
   17ba8:	sdiv	r0, r1, r0
   17bac:	str	r0, [sp, #84]	; 0x54
   17bb0:	ldr	r0, [sp, #84]	; 0x54
   17bb4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17bb8:	mvn	r2, #0
   17bbc:	sub	r1, r2, r1
   17bc0:	cmp	r0, r1
   17bc4:	ble	17ce0 <__assert_fail@plt+0x6cd4>
   17bc8:	b	17cf8 <__assert_fail@plt+0x6cec>
   17bcc:	b	17bd0 <__assert_fail@plt+0x6bc4>
   17bd0:	b	17c28 <__assert_fail@plt+0x6c1c>
   17bd4:	b	17c28 <__assert_fail@plt+0x6c1c>
   17bd8:	ldr	r0, [fp, #8]
   17bdc:	cmn	r0, #1
   17be0:	bne	17c28 <__assert_fail@plt+0x6c1c>
   17be4:	b	17be8 <__assert_fail@plt+0x6bdc>
   17be8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17bec:	add	r0, r0, #0
   17bf0:	movw	r1, #0
   17bf4:	cmp	r1, r0
   17bf8:	blt	17ce0 <__assert_fail@plt+0x6cd4>
   17bfc:	b	17cf8 <__assert_fail@plt+0x6cec>
   17c00:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17c04:	movw	r1, #0
   17c08:	cmp	r1, r0
   17c0c:	bge	17cf8 <__assert_fail@plt+0x6cec>
   17c10:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17c14:	sub	r0, r0, #1
   17c18:	mvn	r1, #0
   17c1c:	cmp	r1, r0
   17c20:	blt	17ce0 <__assert_fail@plt+0x6cd4>
   17c24:	b	17cf8 <__assert_fail@plt+0x6cec>
   17c28:	ldr	r0, [fp, #8]
   17c2c:	movw	r1, #0
   17c30:	sdiv	r0, r1, r0
   17c34:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17c38:	cmp	r0, r1
   17c3c:	blt	17ce0 <__assert_fail@plt+0x6cd4>
   17c40:	b	17cf8 <__assert_fail@plt+0x6cec>
   17c44:	ldr	r0, [fp, #8]
   17c48:	cmp	r0, #0
   17c4c:	bne	17c54 <__assert_fail@plt+0x6c48>
   17c50:	b	17cf8 <__assert_fail@plt+0x6cec>
   17c54:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17c58:	cmp	r0, #0
   17c5c:	bge	17cc8 <__assert_fail@plt+0x6cbc>
   17c60:	b	17c64 <__assert_fail@plt+0x6c58>
   17c64:	b	17cac <__assert_fail@plt+0x6ca0>
   17c68:	b	17cac <__assert_fail@plt+0x6ca0>
   17c6c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17c70:	cmn	r0, #1
   17c74:	bne	17cac <__assert_fail@plt+0x6ca0>
   17c78:	b	17c7c <__assert_fail@plt+0x6c70>
   17c7c:	ldr	r0, [fp, #8]
   17c80:	add	r0, r0, #0
   17c84:	movw	r1, #0
   17c88:	cmp	r1, r0
   17c8c:	blt	17ce0 <__assert_fail@plt+0x6cd4>
   17c90:	b	17cf8 <__assert_fail@plt+0x6cec>
   17c94:	ldr	r0, [fp, #8]
   17c98:	sub	r0, r0, #1
   17c9c:	mvn	r1, #0
   17ca0:	cmp	r1, r0
   17ca4:	blt	17ce0 <__assert_fail@plt+0x6cd4>
   17ca8:	b	17cf8 <__assert_fail@plt+0x6cec>
   17cac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17cb0:	movw	r1, #0
   17cb4:	sdiv	r0, r1, r0
   17cb8:	ldr	r1, [fp, #8]
   17cbc:	cmp	r0, r1
   17cc0:	blt	17ce0 <__assert_fail@plt+0x6cd4>
   17cc4:	b	17cf8 <__assert_fail@plt+0x6cec>
   17cc8:	ldr	r0, [fp, #8]
   17ccc:	movw	r1, #255	; 0xff
   17cd0:	sdiv	r0, r1, r0
   17cd4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17cd8:	cmp	r0, r1
   17cdc:	bge	17cf8 <__assert_fail@plt+0x6cec>
   17ce0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17ce4:	ldr	r1, [fp, #8]
   17ce8:	mul	r0, r0, r1
   17cec:	and	r0, r0, #255	; 0xff
   17cf0:	str	r0, [fp, #-28]	; 0xffffffe4
   17cf4:	b	18cd4 <__assert_fail@plt+0x7cc8>
   17cf8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17cfc:	ldr	r1, [fp, #8]
   17d00:	mul	r0, r0, r1
   17d04:	and	r0, r0, #255	; 0xff
   17d08:	str	r0, [fp, #-28]	; 0xffffffe4
   17d0c:	b	18cd8 <__assert_fail@plt+0x7ccc>
   17d10:	b	180ec <__assert_fail@plt+0x70e0>
   17d14:	b	17d18 <__assert_fail@plt+0x6d0c>
   17d18:	ldr	r0, [fp, #8]
   17d1c:	cmp	r0, #0
   17d20:	bge	17e38 <__assert_fail@plt+0x6e2c>
   17d24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17d28:	cmp	r0, #0
   17d2c:	bge	17dbc <__assert_fail@plt+0x6db0>
   17d30:	b	17d34 <__assert_fail@plt+0x6d28>
   17d34:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17d38:	ldr	r1, [fp, #8]
   17d3c:	movw	r2, #32767	; 0x7fff
   17d40:	sdiv	r1, r2, r1
   17d44:	cmp	r0, r1
   17d48:	blt	17ed8 <__assert_fail@plt+0x6ecc>
   17d4c:	b	17ef0 <__assert_fail@plt+0x6ee4>
   17d50:	andhi	r0, r0, r0
   17d54:	b	17d58 <__assert_fail@plt+0x6d4c>
   17d58:	ldr	r0, [pc, #4004]	; 18d04 <__assert_fail@plt+0x7cf8>
   17d5c:	ldr	r1, [fp, #8]
   17d60:	cmp	r1, r0
   17d64:	blt	17d7c <__assert_fail@plt+0x6d70>
   17d68:	b	17d88 <__assert_fail@plt+0x6d7c>
   17d6c:	ldr	r0, [fp, #8]
   17d70:	movw	r1, #0
   17d74:	cmp	r1, r0
   17d78:	bge	17d88 <__assert_fail@plt+0x6d7c>
   17d7c:	movw	r0, #0
   17d80:	str	r0, [sp, #80]	; 0x50
   17d84:	b	17da0 <__assert_fail@plt+0x6d94>
   17d88:	ldr	r0, [fp, #8]
   17d8c:	movw	r1, #0
   17d90:	sub	r0, r1, r0
   17d94:	movw	r1, #32767	; 0x7fff
   17d98:	sdiv	r0, r1, r0
   17d9c:	str	r0, [sp, #80]	; 0x50
   17da0:	ldr	r0, [sp, #80]	; 0x50
   17da4:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17da8:	mvn	r2, #0
   17dac:	sub	r1, r2, r1
   17db0:	cmp	r0, r1
   17db4:	ble	17ed8 <__assert_fail@plt+0x6ecc>
   17db8:	b	17ef0 <__assert_fail@plt+0x6ee4>
   17dbc:	b	17dc0 <__assert_fail@plt+0x6db4>
   17dc0:	b	17e1c <__assert_fail@plt+0x6e10>
   17dc4:	b	17e1c <__assert_fail@plt+0x6e10>
   17dc8:	ldr	r0, [fp, #8]
   17dcc:	cmn	r0, #1
   17dd0:	bne	17e1c <__assert_fail@plt+0x6e10>
   17dd4:	b	17dd8 <__assert_fail@plt+0x6dcc>
   17dd8:	ldr	r0, [pc, #3884]	; 18d0c <__assert_fail@plt+0x7d00>
   17ddc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17de0:	add	r0, r1, r0
   17de4:	movw	r1, #0
   17de8:	cmp	r1, r0
   17dec:	blt	17ed8 <__assert_fail@plt+0x6ecc>
   17df0:	b	17ef0 <__assert_fail@plt+0x6ee4>
   17df4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17df8:	movw	r1, #0
   17dfc:	cmp	r1, r0
   17e00:	bge	17ef0 <__assert_fail@plt+0x6ee4>
   17e04:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17e08:	sub	r0, r0, #1
   17e0c:	movw	r1, #32767	; 0x7fff
   17e10:	cmp	r1, r0
   17e14:	blt	17ed8 <__assert_fail@plt+0x6ecc>
   17e18:	b	17ef0 <__assert_fail@plt+0x6ee4>
   17e1c:	ldr	r0, [pc, #3816]	; 18d0c <__assert_fail@plt+0x7d00>
   17e20:	ldr	r1, [fp, #8]
   17e24:	sdiv	r0, r0, r1
   17e28:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17e2c:	cmp	r0, r1
   17e30:	blt	17ed8 <__assert_fail@plt+0x6ecc>
   17e34:	b	17ef0 <__assert_fail@plt+0x6ee4>
   17e38:	ldr	r0, [fp, #8]
   17e3c:	cmp	r0, #0
   17e40:	bne	17e48 <__assert_fail@plt+0x6e3c>
   17e44:	b	17ef0 <__assert_fail@plt+0x6ee4>
   17e48:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17e4c:	cmp	r0, #0
   17e50:	bge	17ec0 <__assert_fail@plt+0x6eb4>
   17e54:	b	17e58 <__assert_fail@plt+0x6e4c>
   17e58:	b	17ea4 <__assert_fail@plt+0x6e98>
   17e5c:	b	17ea4 <__assert_fail@plt+0x6e98>
   17e60:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17e64:	cmn	r0, #1
   17e68:	bne	17ea4 <__assert_fail@plt+0x6e98>
   17e6c:	b	17e70 <__assert_fail@plt+0x6e64>
   17e70:	ldr	r0, [pc, #3732]	; 18d0c <__assert_fail@plt+0x7d00>
   17e74:	ldr	r1, [fp, #8]
   17e78:	add	r0, r1, r0
   17e7c:	movw	r1, #0
   17e80:	cmp	r1, r0
   17e84:	blt	17ed8 <__assert_fail@plt+0x6ecc>
   17e88:	b	17ef0 <__assert_fail@plt+0x6ee4>
   17e8c:	ldr	r0, [fp, #8]
   17e90:	sub	r0, r0, #1
   17e94:	movw	r1, #32767	; 0x7fff
   17e98:	cmp	r1, r0
   17e9c:	blt	17ed8 <__assert_fail@plt+0x6ecc>
   17ea0:	b	17ef0 <__assert_fail@plt+0x6ee4>
   17ea4:	ldr	r0, [pc, #3680]	; 18d0c <__assert_fail@plt+0x7d00>
   17ea8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17eac:	sdiv	r0, r0, r1
   17eb0:	ldr	r1, [fp, #8]
   17eb4:	cmp	r0, r1
   17eb8:	blt	17ed8 <__assert_fail@plt+0x6ecc>
   17ebc:	b	17ef0 <__assert_fail@plt+0x6ee4>
   17ec0:	ldr	r0, [fp, #8]
   17ec4:	movw	r1, #32767	; 0x7fff
   17ec8:	sdiv	r0, r1, r0
   17ecc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17ed0:	cmp	r0, r1
   17ed4:	bge	17ef0 <__assert_fail@plt+0x6ee4>
   17ed8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17edc:	ldr	r1, [fp, #8]
   17ee0:	mul	r0, r0, r1
   17ee4:	sxth	r0, r0
   17ee8:	str	r0, [fp, #-28]	; 0xffffffe4
   17eec:	b	18cd4 <__assert_fail@plt+0x7cc8>
   17ef0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17ef4:	ldr	r1, [fp, #8]
   17ef8:	mul	r0, r0, r1
   17efc:	sxth	r0, r0
   17f00:	str	r0, [fp, #-28]	; 0xffffffe4
   17f04:	b	18cd8 <__assert_fail@plt+0x7ccc>
   17f08:	ldr	r0, [fp, #8]
   17f0c:	cmp	r0, #0
   17f10:	bge	18020 <__assert_fail@plt+0x7014>
   17f14:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17f18:	cmp	r0, #0
   17f1c:	bge	17fa8 <__assert_fail@plt+0x6f9c>
   17f20:	b	17f24 <__assert_fail@plt+0x6f18>
   17f24:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17f28:	ldr	r1, [fp, #8]
   17f2c:	movw	r2, #65535	; 0xffff
   17f30:	sdiv	r1, r2, r1
   17f34:	cmp	r0, r1
   17f38:	blt	180bc <__assert_fail@plt+0x70b0>
   17f3c:	b	180d4 <__assert_fail@plt+0x70c8>
   17f40:	b	17f44 <__assert_fail@plt+0x6f38>
   17f44:	ldr	r0, [pc, #3512]	; 18d04 <__assert_fail@plt+0x7cf8>
   17f48:	ldr	r1, [fp, #8]
   17f4c:	cmp	r1, r0
   17f50:	blt	17f68 <__assert_fail@plt+0x6f5c>
   17f54:	b	17f74 <__assert_fail@plt+0x6f68>
   17f58:	ldr	r0, [fp, #8]
   17f5c:	movw	r1, #0
   17f60:	cmp	r1, r0
   17f64:	bge	17f74 <__assert_fail@plt+0x6f68>
   17f68:	movw	r0, #0
   17f6c:	str	r0, [sp, #76]	; 0x4c
   17f70:	b	17f8c <__assert_fail@plt+0x6f80>
   17f74:	ldr	r0, [fp, #8]
   17f78:	movw	r1, #0
   17f7c:	sub	r0, r1, r0
   17f80:	movw	r1, #65535	; 0xffff
   17f84:	sdiv	r0, r1, r0
   17f88:	str	r0, [sp, #76]	; 0x4c
   17f8c:	ldr	r0, [sp, #76]	; 0x4c
   17f90:	ldr	r1, [fp, #-24]	; 0xffffffe8
   17f94:	mvn	r2, #0
   17f98:	sub	r1, r2, r1
   17f9c:	cmp	r0, r1
   17fa0:	ble	180bc <__assert_fail@plt+0x70b0>
   17fa4:	b	180d4 <__assert_fail@plt+0x70c8>
   17fa8:	b	17fac <__assert_fail@plt+0x6fa0>
   17fac:	b	18004 <__assert_fail@plt+0x6ff8>
   17fb0:	b	18004 <__assert_fail@plt+0x6ff8>
   17fb4:	ldr	r0, [fp, #8]
   17fb8:	cmn	r0, #1
   17fbc:	bne	18004 <__assert_fail@plt+0x6ff8>
   17fc0:	b	17fc4 <__assert_fail@plt+0x6fb8>
   17fc4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17fc8:	add	r0, r0, #0
   17fcc:	movw	r1, #0
   17fd0:	cmp	r1, r0
   17fd4:	blt	180bc <__assert_fail@plt+0x70b0>
   17fd8:	b	180d4 <__assert_fail@plt+0x70c8>
   17fdc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17fe0:	movw	r1, #0
   17fe4:	cmp	r1, r0
   17fe8:	bge	180d4 <__assert_fail@plt+0x70c8>
   17fec:	ldr	r0, [fp, #-24]	; 0xffffffe8
   17ff0:	sub	r0, r0, #1
   17ff4:	mvn	r1, #0
   17ff8:	cmp	r1, r0
   17ffc:	blt	180bc <__assert_fail@plt+0x70b0>
   18000:	b	180d4 <__assert_fail@plt+0x70c8>
   18004:	ldr	r0, [fp, #8]
   18008:	movw	r1, #0
   1800c:	sdiv	r0, r1, r0
   18010:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18014:	cmp	r0, r1
   18018:	blt	180bc <__assert_fail@plt+0x70b0>
   1801c:	b	180d4 <__assert_fail@plt+0x70c8>
   18020:	ldr	r0, [fp, #8]
   18024:	cmp	r0, #0
   18028:	bne	18030 <__assert_fail@plt+0x7024>
   1802c:	b	180d4 <__assert_fail@plt+0x70c8>
   18030:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18034:	cmp	r0, #0
   18038:	bge	180a4 <__assert_fail@plt+0x7098>
   1803c:	b	18040 <__assert_fail@plt+0x7034>
   18040:	b	18088 <__assert_fail@plt+0x707c>
   18044:	b	18088 <__assert_fail@plt+0x707c>
   18048:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1804c:	cmn	r0, #1
   18050:	bne	18088 <__assert_fail@plt+0x707c>
   18054:	b	18058 <__assert_fail@plt+0x704c>
   18058:	ldr	r0, [fp, #8]
   1805c:	add	r0, r0, #0
   18060:	movw	r1, #0
   18064:	cmp	r1, r0
   18068:	blt	180bc <__assert_fail@plt+0x70b0>
   1806c:	b	180d4 <__assert_fail@plt+0x70c8>
   18070:	ldr	r0, [fp, #8]
   18074:	sub	r0, r0, #1
   18078:	mvn	r1, #0
   1807c:	cmp	r1, r0
   18080:	blt	180bc <__assert_fail@plt+0x70b0>
   18084:	b	180d4 <__assert_fail@plt+0x70c8>
   18088:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1808c:	movw	r1, #0
   18090:	sdiv	r0, r1, r0
   18094:	ldr	r1, [fp, #8]
   18098:	cmp	r0, r1
   1809c:	blt	180bc <__assert_fail@plt+0x70b0>
   180a0:	b	180d4 <__assert_fail@plt+0x70c8>
   180a4:	ldr	r0, [fp, #8]
   180a8:	movw	r1, #65535	; 0xffff
   180ac:	sdiv	r0, r1, r0
   180b0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   180b4:	cmp	r0, r1
   180b8:	bge	180d4 <__assert_fail@plt+0x70c8>
   180bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   180c0:	ldr	r1, [fp, #8]
   180c4:	mul	r0, r0, r1
   180c8:	uxth	r0, r0
   180cc:	str	r0, [fp, #-28]	; 0xffffffe4
   180d0:	b	18cd4 <__assert_fail@plt+0x7cc8>
   180d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   180d8:	ldr	r1, [fp, #8]
   180dc:	mul	r0, r0, r1
   180e0:	uxth	r0, r0
   180e4:	str	r0, [fp, #-28]	; 0xffffffe4
   180e8:	b	18cd8 <__assert_fail@plt+0x7ccc>
   180ec:	b	180f0 <__assert_fail@plt+0x70e4>
   180f0:	b	180f4 <__assert_fail@plt+0x70e8>
   180f4:	ldr	r0, [fp, #8]
   180f8:	cmp	r0, #0
   180fc:	bge	18200 <__assert_fail@plt+0x71f4>
   18100:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18104:	cmp	r0, #0
   18108:	bge	18194 <__assert_fail@plt+0x7188>
   1810c:	b	18110 <__assert_fail@plt+0x7104>
   18110:	ldr	r0, [pc, #3048]	; 18d00 <__assert_fail@plt+0x7cf4>
   18114:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18118:	ldr	r2, [fp, #8]
   1811c:	sdiv	r0, r0, r2
   18120:	cmp	r1, r0
   18124:	blt	18290 <__assert_fail@plt+0x7284>
   18128:	b	182a4 <__assert_fail@plt+0x7298>
   1812c:	b	18130 <__assert_fail@plt+0x7124>
   18130:	ldr	r0, [pc, #3020]	; 18d04 <__assert_fail@plt+0x7cf8>
   18134:	ldr	r1, [fp, #8]
   18138:	cmp	r1, r0
   1813c:	blt	18154 <__assert_fail@plt+0x7148>
   18140:	b	18160 <__assert_fail@plt+0x7154>
   18144:	ldr	r0, [fp, #8]
   18148:	movw	r1, #0
   1814c:	cmp	r1, r0
   18150:	bge	18160 <__assert_fail@plt+0x7154>
   18154:	movw	r0, #0
   18158:	str	r0, [sp, #72]	; 0x48
   1815c:	b	18178 <__assert_fail@plt+0x716c>
   18160:	ldr	r0, [pc, #2968]	; 18d00 <__assert_fail@plt+0x7cf4>
   18164:	ldr	r1, [fp, #8]
   18168:	movw	r2, #0
   1816c:	sub	r1, r2, r1
   18170:	sdiv	r0, r0, r1
   18174:	str	r0, [sp, #72]	; 0x48
   18178:	ldr	r0, [sp, #72]	; 0x48
   1817c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18180:	mvn	r2, #0
   18184:	sub	r1, r2, r1
   18188:	cmp	r0, r1
   1818c:	ble	18290 <__assert_fail@plt+0x7284>
   18190:	b	182a4 <__assert_fail@plt+0x7298>
   18194:	ldr	r0, [fp, #8]
   18198:	cmn	r0, #1
   1819c:	bne	181e4 <__assert_fail@plt+0x71d8>
   181a0:	b	181a4 <__assert_fail@plt+0x7198>
   181a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   181a8:	add	r0, r0, #-2147483648	; 0x80000000
   181ac:	movw	r1, #0
   181b0:	cmp	r1, r0
   181b4:	blt	18290 <__assert_fail@plt+0x7284>
   181b8:	b	182a4 <__assert_fail@plt+0x7298>
   181bc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   181c0:	movw	r1, #0
   181c4:	cmp	r1, r0
   181c8:	bge	182a4 <__assert_fail@plt+0x7298>
   181cc:	ldr	r0, [pc, #2860]	; 18d00 <__assert_fail@plt+0x7cf4>
   181d0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   181d4:	sub	r1, r1, #1
   181d8:	cmp	r0, r1
   181dc:	blt	18290 <__assert_fail@plt+0x7284>
   181e0:	b	182a4 <__assert_fail@plt+0x7298>
   181e4:	ldr	r0, [pc, #2844]	; 18d08 <__assert_fail@plt+0x7cfc>
   181e8:	ldr	r1, [fp, #8]
   181ec:	sdiv	r0, r0, r1
   181f0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   181f4:	cmp	r0, r1
   181f8:	blt	18290 <__assert_fail@plt+0x7284>
   181fc:	b	182a4 <__assert_fail@plt+0x7298>
   18200:	ldr	r0, [fp, #8]
   18204:	cmp	r0, #0
   18208:	bne	18210 <__assert_fail@plt+0x7204>
   1820c:	b	182a4 <__assert_fail@plt+0x7298>
   18210:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18214:	cmp	r0, #0
   18218:	bge	18278 <__assert_fail@plt+0x726c>
   1821c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18220:	cmn	r0, #1
   18224:	bne	1825c <__assert_fail@plt+0x7250>
   18228:	b	1822c <__assert_fail@plt+0x7220>
   1822c:	ldr	r0, [fp, #8]
   18230:	add	r0, r0, #-2147483648	; 0x80000000
   18234:	movw	r1, #0
   18238:	cmp	r1, r0
   1823c:	blt	18290 <__assert_fail@plt+0x7284>
   18240:	b	182a4 <__assert_fail@plt+0x7298>
   18244:	ldr	r0, [pc, #2740]	; 18d00 <__assert_fail@plt+0x7cf4>
   18248:	ldr	r1, [fp, #8]
   1824c:	sub	r1, r1, #1
   18250:	cmp	r0, r1
   18254:	blt	18290 <__assert_fail@plt+0x7284>
   18258:	b	182a4 <__assert_fail@plt+0x7298>
   1825c:	ldr	r0, [pc, #2724]	; 18d08 <__assert_fail@plt+0x7cfc>
   18260:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18264:	sdiv	r0, r0, r1
   18268:	ldr	r1, [fp, #8]
   1826c:	cmp	r0, r1
   18270:	blt	18290 <__assert_fail@plt+0x7284>
   18274:	b	182a4 <__assert_fail@plt+0x7298>
   18278:	ldr	r0, [pc, #2688]	; 18d00 <__assert_fail@plt+0x7cf4>
   1827c:	ldr	r1, [fp, #8]
   18280:	sdiv	r0, r0, r1
   18284:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18288:	cmp	r0, r1
   1828c:	bge	182a4 <__assert_fail@plt+0x7298>
   18290:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18294:	ldr	r1, [fp, #8]
   18298:	mul	r0, r0, r1
   1829c:	str	r0, [fp, #-28]	; 0xffffffe4
   182a0:	b	18cd4 <__assert_fail@plt+0x7cc8>
   182a4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   182a8:	ldr	r1, [fp, #8]
   182ac:	mul	r0, r0, r1
   182b0:	str	r0, [fp, #-28]	; 0xffffffe4
   182b4:	b	18cd8 <__assert_fail@plt+0x7ccc>
   182b8:	ldr	r0, [fp, #8]
   182bc:	cmp	r0, #0
   182c0:	bge	183d0 <__assert_fail@plt+0x73c4>
   182c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   182c8:	cmp	r0, #0
   182cc:	bge	18358 <__assert_fail@plt+0x734c>
   182d0:	b	182f0 <__assert_fail@plt+0x72e4>
   182d4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   182d8:	ldr	r1, [fp, #8]
   182dc:	mvn	r2, #0
   182e0:	udiv	r1, r2, r1
   182e4:	cmp	r0, r1
   182e8:	bcc	1846c <__assert_fail@plt+0x7460>
   182ec:	b	18480 <__assert_fail@plt+0x7474>
   182f0:	b	182f4 <__assert_fail@plt+0x72e8>
   182f4:	ldr	r0, [pc, #2568]	; 18d04 <__assert_fail@plt+0x7cf8>
   182f8:	ldr	r1, [fp, #8]
   182fc:	cmp	r1, r0
   18300:	blt	18318 <__assert_fail@plt+0x730c>
   18304:	b	18324 <__assert_fail@plt+0x7318>
   18308:	ldr	r0, [fp, #8]
   1830c:	movw	r1, #0
   18310:	cmp	r1, r0
   18314:	bge	18324 <__assert_fail@plt+0x7318>
   18318:	movw	r0, #1
   1831c:	str	r0, [sp, #68]	; 0x44
   18320:	b	1833c <__assert_fail@plt+0x7330>
   18324:	ldr	r0, [fp, #8]
   18328:	movw	r1, #0
   1832c:	sub	r0, r1, r0
   18330:	mvn	r1, #0
   18334:	udiv	r0, r1, r0
   18338:	str	r0, [sp, #68]	; 0x44
   1833c:	ldr	r0, [sp, #68]	; 0x44
   18340:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18344:	mvn	r2, #0
   18348:	sub	r1, r2, r1
   1834c:	cmp	r0, r1
   18350:	bls	1846c <__assert_fail@plt+0x7460>
   18354:	b	18480 <__assert_fail@plt+0x7474>
   18358:	b	1835c <__assert_fail@plt+0x7350>
   1835c:	b	183b4 <__assert_fail@plt+0x73a8>
   18360:	b	183b4 <__assert_fail@plt+0x73a8>
   18364:	ldr	r0, [fp, #8]
   18368:	cmn	r0, #1
   1836c:	bne	183b4 <__assert_fail@plt+0x73a8>
   18370:	b	18374 <__assert_fail@plt+0x7368>
   18374:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18378:	add	r0, r0, #0
   1837c:	movw	r1, #0
   18380:	cmp	r1, r0
   18384:	blt	1846c <__assert_fail@plt+0x7460>
   18388:	b	18480 <__assert_fail@plt+0x7474>
   1838c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18390:	movw	r1, #0
   18394:	cmp	r1, r0
   18398:	bge	18480 <__assert_fail@plt+0x7474>
   1839c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   183a0:	sub	r0, r0, #1
   183a4:	mvn	r1, #0
   183a8:	cmp	r1, r0
   183ac:	blt	1846c <__assert_fail@plt+0x7460>
   183b0:	b	18480 <__assert_fail@plt+0x7474>
   183b4:	ldr	r0, [fp, #8]
   183b8:	movw	r1, #0
   183bc:	sdiv	r0, r1, r0
   183c0:	ldr	r1, [fp, #-24]	; 0xffffffe8
   183c4:	cmp	r0, r1
   183c8:	blt	1846c <__assert_fail@plt+0x7460>
   183cc:	b	18480 <__assert_fail@plt+0x7474>
   183d0:	ldr	r0, [fp, #8]
   183d4:	cmp	r0, #0
   183d8:	bne	183e0 <__assert_fail@plt+0x73d4>
   183dc:	b	18480 <__assert_fail@plt+0x7474>
   183e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   183e4:	cmp	r0, #0
   183e8:	bge	18454 <__assert_fail@plt+0x7448>
   183ec:	b	183f0 <__assert_fail@plt+0x73e4>
   183f0:	b	18438 <__assert_fail@plt+0x742c>
   183f4:	b	18438 <__assert_fail@plt+0x742c>
   183f8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   183fc:	cmn	r0, #1
   18400:	bne	18438 <__assert_fail@plt+0x742c>
   18404:	b	18408 <__assert_fail@plt+0x73fc>
   18408:	ldr	r0, [fp, #8]
   1840c:	add	r0, r0, #0
   18410:	movw	r1, #0
   18414:	cmp	r1, r0
   18418:	blt	1846c <__assert_fail@plt+0x7460>
   1841c:	b	18480 <__assert_fail@plt+0x7474>
   18420:	ldr	r0, [fp, #8]
   18424:	sub	r0, r0, #1
   18428:	mvn	r1, #0
   1842c:	cmp	r1, r0
   18430:	blt	1846c <__assert_fail@plt+0x7460>
   18434:	b	18480 <__assert_fail@plt+0x7474>
   18438:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1843c:	movw	r1, #0
   18440:	sdiv	r0, r1, r0
   18444:	ldr	r1, [fp, #8]
   18448:	cmp	r0, r1
   1844c:	blt	1846c <__assert_fail@plt+0x7460>
   18450:	b	18480 <__assert_fail@plt+0x7474>
   18454:	ldr	r0, [fp, #8]
   18458:	mvn	r1, #0
   1845c:	udiv	r0, r1, r0
   18460:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18464:	cmp	r0, r1
   18468:	bcs	18480 <__assert_fail@plt+0x7474>
   1846c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18470:	ldr	r1, [fp, #8]
   18474:	mul	r0, r0, r1
   18478:	str	r0, [fp, #-28]	; 0xffffffe4
   1847c:	b	18cd4 <__assert_fail@plt+0x7cc8>
   18480:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18484:	ldr	r1, [fp, #8]
   18488:	mul	r0, r0, r1
   1848c:	str	r0, [fp, #-28]	; 0xffffffe4
   18490:	b	18cd8 <__assert_fail@plt+0x7ccc>
   18494:	b	18498 <__assert_fail@plt+0x748c>
   18498:	b	1849c <__assert_fail@plt+0x7490>
   1849c:	ldr	r0, [fp, #8]
   184a0:	cmp	r0, #0
   184a4:	bge	185a8 <__assert_fail@plt+0x759c>
   184a8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   184ac:	cmp	r0, #0
   184b0:	bge	1853c <__assert_fail@plt+0x7530>
   184b4:	b	184b8 <__assert_fail@plt+0x74ac>
   184b8:	ldr	r0, [pc, #2112]	; 18d00 <__assert_fail@plt+0x7cf4>
   184bc:	ldr	r1, [fp, #-24]	; 0xffffffe8
   184c0:	ldr	r2, [fp, #8]
   184c4:	sdiv	r0, r0, r2
   184c8:	cmp	r1, r0
   184cc:	blt	18638 <__assert_fail@plt+0x762c>
   184d0:	b	1864c <__assert_fail@plt+0x7640>
   184d4:	b	184d8 <__assert_fail@plt+0x74cc>
   184d8:	ldr	r0, [pc, #2084]	; 18d04 <__assert_fail@plt+0x7cf8>
   184dc:	ldr	r1, [fp, #8]
   184e0:	cmp	r1, r0
   184e4:	blt	184fc <__assert_fail@plt+0x74f0>
   184e8:	b	18508 <__assert_fail@plt+0x74fc>
   184ec:	ldr	r0, [fp, #8]
   184f0:	movw	r1, #0
   184f4:	cmp	r1, r0
   184f8:	bge	18508 <__assert_fail@plt+0x74fc>
   184fc:	movw	r0, #0
   18500:	str	r0, [sp, #64]	; 0x40
   18504:	b	18520 <__assert_fail@plt+0x7514>
   18508:	ldr	r0, [pc, #2032]	; 18d00 <__assert_fail@plt+0x7cf4>
   1850c:	ldr	r1, [fp, #8]
   18510:	movw	r2, #0
   18514:	sub	r1, r2, r1
   18518:	sdiv	r0, r0, r1
   1851c:	str	r0, [sp, #64]	; 0x40
   18520:	ldr	r0, [sp, #64]	; 0x40
   18524:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18528:	mvn	r2, #0
   1852c:	sub	r1, r2, r1
   18530:	cmp	r0, r1
   18534:	ble	18638 <__assert_fail@plt+0x762c>
   18538:	b	1864c <__assert_fail@plt+0x7640>
   1853c:	ldr	r0, [fp, #8]
   18540:	cmn	r0, #1
   18544:	bne	1858c <__assert_fail@plt+0x7580>
   18548:	b	1854c <__assert_fail@plt+0x7540>
   1854c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18550:	add	r0, r0, #-2147483648	; 0x80000000
   18554:	movw	r1, #0
   18558:	cmp	r1, r0
   1855c:	blt	18638 <__assert_fail@plt+0x762c>
   18560:	b	1864c <__assert_fail@plt+0x7640>
   18564:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18568:	movw	r1, #0
   1856c:	cmp	r1, r0
   18570:	bge	1864c <__assert_fail@plt+0x7640>
   18574:	ldr	r0, [pc, #1924]	; 18d00 <__assert_fail@plt+0x7cf4>
   18578:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1857c:	sub	r1, r1, #1
   18580:	cmp	r0, r1
   18584:	blt	18638 <__assert_fail@plt+0x762c>
   18588:	b	1864c <__assert_fail@plt+0x7640>
   1858c:	ldr	r0, [pc, #1908]	; 18d08 <__assert_fail@plt+0x7cfc>
   18590:	ldr	r1, [fp, #8]
   18594:	sdiv	r0, r0, r1
   18598:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1859c:	cmp	r0, r1
   185a0:	blt	18638 <__assert_fail@plt+0x762c>
   185a4:	b	1864c <__assert_fail@plt+0x7640>
   185a8:	ldr	r0, [fp, #8]
   185ac:	cmp	r0, #0
   185b0:	bne	185b8 <__assert_fail@plt+0x75ac>
   185b4:	b	1864c <__assert_fail@plt+0x7640>
   185b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   185bc:	cmp	r0, #0
   185c0:	bge	18620 <__assert_fail@plt+0x7614>
   185c4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   185c8:	cmn	r0, #1
   185cc:	bne	18604 <__assert_fail@plt+0x75f8>
   185d0:	b	185d4 <__assert_fail@plt+0x75c8>
   185d4:	ldr	r0, [fp, #8]
   185d8:	add	r0, r0, #-2147483648	; 0x80000000
   185dc:	movw	r1, #0
   185e0:	cmp	r1, r0
   185e4:	blt	18638 <__assert_fail@plt+0x762c>
   185e8:	b	1864c <__assert_fail@plt+0x7640>
   185ec:	ldr	r0, [pc, #1804]	; 18d00 <__assert_fail@plt+0x7cf4>
   185f0:	ldr	r1, [fp, #8]
   185f4:	sub	r1, r1, #1
   185f8:	cmp	r0, r1
   185fc:	blt	18638 <__assert_fail@plt+0x762c>
   18600:	b	1864c <__assert_fail@plt+0x7640>
   18604:	ldr	r0, [pc, #1788]	; 18d08 <__assert_fail@plt+0x7cfc>
   18608:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1860c:	sdiv	r0, r0, r1
   18610:	ldr	r1, [fp, #8]
   18614:	cmp	r0, r1
   18618:	blt	18638 <__assert_fail@plt+0x762c>
   1861c:	b	1864c <__assert_fail@plt+0x7640>
   18620:	ldr	r0, [pc, #1752]	; 18d00 <__assert_fail@plt+0x7cf4>
   18624:	ldr	r1, [fp, #8]
   18628:	sdiv	r0, r0, r1
   1862c:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18630:	cmp	r0, r1
   18634:	bge	1864c <__assert_fail@plt+0x7640>
   18638:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1863c:	ldr	r1, [fp, #8]
   18640:	mul	r0, r0, r1
   18644:	str	r0, [fp, #-28]	; 0xffffffe4
   18648:	b	18cd4 <__assert_fail@plt+0x7cc8>
   1864c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18650:	ldr	r1, [fp, #8]
   18654:	mul	r0, r0, r1
   18658:	str	r0, [fp, #-28]	; 0xffffffe4
   1865c:	b	18cd8 <__assert_fail@plt+0x7ccc>
   18660:	ldr	r0, [fp, #8]
   18664:	cmp	r0, #0
   18668:	bge	18778 <__assert_fail@plt+0x776c>
   1866c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18670:	cmp	r0, #0
   18674:	bge	18700 <__assert_fail@plt+0x76f4>
   18678:	b	18698 <__assert_fail@plt+0x768c>
   1867c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18680:	ldr	r1, [fp, #8]
   18684:	mvn	r2, #0
   18688:	udiv	r1, r2, r1
   1868c:	cmp	r0, r1
   18690:	bcc	18814 <__assert_fail@plt+0x7808>
   18694:	b	18828 <__assert_fail@plt+0x781c>
   18698:	b	1869c <__assert_fail@plt+0x7690>
   1869c:	ldr	r0, [pc, #1632]	; 18d04 <__assert_fail@plt+0x7cf8>
   186a0:	ldr	r1, [fp, #8]
   186a4:	cmp	r1, r0
   186a8:	blt	186c0 <__assert_fail@plt+0x76b4>
   186ac:	b	186cc <__assert_fail@plt+0x76c0>
   186b0:	ldr	r0, [fp, #8]
   186b4:	movw	r1, #0
   186b8:	cmp	r1, r0
   186bc:	bge	186cc <__assert_fail@plt+0x76c0>
   186c0:	movw	r0, #1
   186c4:	str	r0, [sp, #60]	; 0x3c
   186c8:	b	186e4 <__assert_fail@plt+0x76d8>
   186cc:	ldr	r0, [fp, #8]
   186d0:	movw	r1, #0
   186d4:	sub	r0, r1, r0
   186d8:	mvn	r1, #0
   186dc:	udiv	r0, r1, r0
   186e0:	str	r0, [sp, #60]	; 0x3c
   186e4:	ldr	r0, [sp, #60]	; 0x3c
   186e8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   186ec:	mvn	r2, #0
   186f0:	sub	r1, r2, r1
   186f4:	cmp	r0, r1
   186f8:	bls	18814 <__assert_fail@plt+0x7808>
   186fc:	b	18828 <__assert_fail@plt+0x781c>
   18700:	b	18704 <__assert_fail@plt+0x76f8>
   18704:	b	1875c <__assert_fail@plt+0x7750>
   18708:	b	1875c <__assert_fail@plt+0x7750>
   1870c:	ldr	r0, [fp, #8]
   18710:	cmn	r0, #1
   18714:	bne	1875c <__assert_fail@plt+0x7750>
   18718:	b	1871c <__assert_fail@plt+0x7710>
   1871c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18720:	add	r0, r0, #0
   18724:	movw	r1, #0
   18728:	cmp	r1, r0
   1872c:	blt	18814 <__assert_fail@plt+0x7808>
   18730:	b	18828 <__assert_fail@plt+0x781c>
   18734:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18738:	movw	r1, #0
   1873c:	cmp	r1, r0
   18740:	bge	18828 <__assert_fail@plt+0x781c>
   18744:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18748:	sub	r0, r0, #1
   1874c:	mvn	r1, #0
   18750:	cmp	r1, r0
   18754:	blt	18814 <__assert_fail@plt+0x7808>
   18758:	b	18828 <__assert_fail@plt+0x781c>
   1875c:	ldr	r0, [fp, #8]
   18760:	movw	r1, #0
   18764:	sdiv	r0, r1, r0
   18768:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1876c:	cmp	r0, r1
   18770:	blt	18814 <__assert_fail@plt+0x7808>
   18774:	b	18828 <__assert_fail@plt+0x781c>
   18778:	ldr	r0, [fp, #8]
   1877c:	cmp	r0, #0
   18780:	bne	18788 <__assert_fail@plt+0x777c>
   18784:	b	18828 <__assert_fail@plt+0x781c>
   18788:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1878c:	cmp	r0, #0
   18790:	bge	187fc <__assert_fail@plt+0x77f0>
   18794:	b	18798 <__assert_fail@plt+0x778c>
   18798:	b	187e0 <__assert_fail@plt+0x77d4>
   1879c:	b	187e0 <__assert_fail@plt+0x77d4>
   187a0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   187a4:	cmn	r0, #1
   187a8:	bne	187e0 <__assert_fail@plt+0x77d4>
   187ac:	b	187b0 <__assert_fail@plt+0x77a4>
   187b0:	ldr	r0, [fp, #8]
   187b4:	add	r0, r0, #0
   187b8:	movw	r1, #0
   187bc:	cmp	r1, r0
   187c0:	blt	18814 <__assert_fail@plt+0x7808>
   187c4:	b	18828 <__assert_fail@plt+0x781c>
   187c8:	ldr	r0, [fp, #8]
   187cc:	sub	r0, r0, #1
   187d0:	mvn	r1, #0
   187d4:	cmp	r1, r0
   187d8:	blt	18814 <__assert_fail@plt+0x7808>
   187dc:	b	18828 <__assert_fail@plt+0x781c>
   187e0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   187e4:	movw	r1, #0
   187e8:	sdiv	r0, r1, r0
   187ec:	ldr	r1, [fp, #8]
   187f0:	cmp	r0, r1
   187f4:	blt	18814 <__assert_fail@plt+0x7808>
   187f8:	b	18828 <__assert_fail@plt+0x781c>
   187fc:	ldr	r0, [fp, #8]
   18800:	mvn	r1, #0
   18804:	udiv	r0, r1, r0
   18808:	ldr	r1, [fp, #-24]	; 0xffffffe8
   1880c:	cmp	r0, r1
   18810:	bcs	18828 <__assert_fail@plt+0x781c>
   18814:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18818:	ldr	r1, [fp, #8]
   1881c:	mul	r0, r0, r1
   18820:	str	r0, [fp, #-28]	; 0xffffffe4
   18824:	b	18cd4 <__assert_fail@plt+0x7cc8>
   18828:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1882c:	ldr	r1, [fp, #8]
   18830:	mul	r0, r0, r1
   18834:	str	r0, [fp, #-28]	; 0xffffffe4
   18838:	b	18cd8 <__assert_fail@plt+0x7ccc>
   1883c:	b	18840 <__assert_fail@plt+0x7834>
   18840:	ldr	r0, [fp, #8]
   18844:	cmp	r0, #0
   18848:	bge	189b0 <__assert_fail@plt+0x79a4>
   1884c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18850:	cmp	r0, #0
   18854:	bge	1892c <__assert_fail@plt+0x7920>
   18858:	b	1885c <__assert_fail@plt+0x7850>
   1885c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18860:	ldr	r1, [fp, #8]
   18864:	asr	r3, r1, #31
   18868:	mvn	r2, #0
   1886c:	mvn	ip, #-2147483648	; 0x80000000
   18870:	str	r0, [sp, #56]	; 0x38
   18874:	mov	r0, r2
   18878:	str	r1, [sp, #52]	; 0x34
   1887c:	mov	r1, ip
   18880:	ldr	r2, [sp, #52]	; 0x34
   18884:	bl	1b090 <__assert_fail@plt+0xa084>
   18888:	ldr	r2, [sp, #56]	; 0x38
   1888c:	subs	r0, r2, r0
   18890:	rscs	r1, r1, r2, asr #31
   18894:	blt	18a78 <__assert_fail@plt+0x7a6c>
   18898:	b	18a8c <__assert_fail@plt+0x7a80>
   1889c:	b	188a0 <__assert_fail@plt+0x7894>
   188a0:	ldr	r0, [pc, #1116]	; 18d04 <__assert_fail@plt+0x7cf8>
   188a4:	ldr	r1, [fp, #8]
   188a8:	cmp	r1, r0
   188ac:	blt	188c4 <__assert_fail@plt+0x78b8>
   188b0:	b	188d8 <__assert_fail@plt+0x78cc>
   188b4:	ldr	r0, [fp, #8]
   188b8:	movw	r1, #0
   188bc:	cmp	r1, r0
   188c0:	bge	188d8 <__assert_fail@plt+0x78cc>
   188c4:	mov	r0, #0
   188c8:	mvn	r1, #0
   188cc:	str	r1, [sp, #48]	; 0x30
   188d0:	str	r0, [sp, #44]	; 0x2c
   188d4:	b	1890c <__assert_fail@plt+0x7900>
   188d8:	ldr	r0, [fp, #8]
   188dc:	rsb	r0, r0, #0
   188e0:	asr	r3, r0, #31
   188e4:	mvn	r1, #0
   188e8:	mvn	r2, #-2147483648	; 0x80000000
   188ec:	str	r0, [sp, #40]	; 0x28
   188f0:	mov	r0, r1
   188f4:	mov	r1, r2
   188f8:	ldr	r2, [sp, #40]	; 0x28
   188fc:	bl	1b090 <__assert_fail@plt+0xa084>
   18900:	str	r0, [sp, #48]	; 0x30
   18904:	str	r1, [sp, #44]	; 0x2c
   18908:	b	1890c <__assert_fail@plt+0x7900>
   1890c:	ldr	r0, [sp, #44]	; 0x2c
   18910:	ldr	r1, [sp, #48]	; 0x30
   18914:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18918:	mvn	r2, r2
   1891c:	subs	r1, r2, r1
   18920:	rscs	r0, r0, r2, asr #31
   18924:	bge	18a78 <__assert_fail@plt+0x7a6c>
   18928:	b	18a8c <__assert_fail@plt+0x7a80>
   1892c:	ldr	r0, [fp, #8]
   18930:	cmn	r0, #1
   18934:	bne	18978 <__assert_fail@plt+0x796c>
   18938:	b	1893c <__assert_fail@plt+0x7930>
   1893c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18940:	mov	r1, #-2147483648	; 0x80000000
   18944:	add	r1, r1, r0, asr #31
   18948:	rsbs	r0, r0, #0
   1894c:	rscs	r1, r1, #0
   18950:	blt	18a78 <__assert_fail@plt+0x7a6c>
   18954:	b	18a8c <__assert_fail@plt+0x7a80>
   18958:	ldr	r0, [fp, #-24]	; 0xffffffe8
   1895c:	movw	r1, #0
   18960:	cmp	r1, r0
   18964:	bge	18a8c <__assert_fail@plt+0x7a80>
   18968:	mov	r0, #0
   1896c:	cmp	r0, #0
   18970:	bne	18a78 <__assert_fail@plt+0x7a6c>
   18974:	b	18a8c <__assert_fail@plt+0x7a80>
   18978:	ldr	r0, [fp, #8]
   1897c:	asr	r3, r0, #31
   18980:	mov	r1, #0
   18984:	mov	r2, #-2147483648	; 0x80000000
   18988:	str	r0, [sp, #36]	; 0x24
   1898c:	mov	r0, r1
   18990:	mov	r1, r2
   18994:	ldr	r2, [sp, #36]	; 0x24
   18998:	bl	1b090 <__assert_fail@plt+0xa084>
   1899c:	ldr	r2, [fp, #-24]	; 0xffffffe8
   189a0:	subs	r0, r0, r2
   189a4:	sbcs	r1, r1, r2, asr #31
   189a8:	blt	18a78 <__assert_fail@plt+0x7a6c>
   189ac:	b	18a8c <__assert_fail@plt+0x7a80>
   189b0:	ldr	r0, [fp, #8]
   189b4:	cmp	r0, #0
   189b8:	bne	189c0 <__assert_fail@plt+0x79b4>
   189bc:	b	18a8c <__assert_fail@plt+0x7a80>
   189c0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   189c4:	cmp	r0, #0
   189c8:	bge	18a40 <__assert_fail@plt+0x7a34>
   189cc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   189d0:	cmn	r0, #1
   189d4:	bne	18a08 <__assert_fail@plt+0x79fc>
   189d8:	b	189dc <__assert_fail@plt+0x79d0>
   189dc:	ldr	r0, [fp, #8]
   189e0:	mov	r1, #-2147483648	; 0x80000000
   189e4:	add	r1, r1, r0, asr #31
   189e8:	rsbs	r0, r0, #0
   189ec:	rscs	r1, r1, #0
   189f0:	blt	18a78 <__assert_fail@plt+0x7a6c>
   189f4:	b	18a8c <__assert_fail@plt+0x7a80>
   189f8:	mov	r0, #0
   189fc:	cmp	r0, #0
   18a00:	bne	18a78 <__assert_fail@plt+0x7a6c>
   18a04:	b	18a8c <__assert_fail@plt+0x7a80>
   18a08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18a0c:	asr	r3, r0, #31
   18a10:	mov	r1, #0
   18a14:	mov	r2, #-2147483648	; 0x80000000
   18a18:	str	r0, [sp, #32]
   18a1c:	mov	r0, r1
   18a20:	mov	r1, r2
   18a24:	ldr	r2, [sp, #32]
   18a28:	bl	1b090 <__assert_fail@plt+0xa084>
   18a2c:	ldr	r2, [fp, #8]
   18a30:	subs	r0, r0, r2
   18a34:	sbcs	r1, r1, r2, asr #31
   18a38:	blt	18a78 <__assert_fail@plt+0x7a6c>
   18a3c:	b	18a8c <__assert_fail@plt+0x7a80>
   18a40:	ldr	r0, [fp, #8]
   18a44:	asr	r3, r0, #31
   18a48:	mvn	r1, #0
   18a4c:	mvn	r2, #-2147483648	; 0x80000000
   18a50:	str	r0, [sp, #28]
   18a54:	mov	r0, r1
   18a58:	mov	r1, r2
   18a5c:	ldr	r2, [sp, #28]
   18a60:	bl	1b090 <__assert_fail@plt+0xa084>
   18a64:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18a68:	subs	r0, r0, r2
   18a6c:	sbcs	r1, r1, r2, asr #31
   18a70:	bge	18a8c <__assert_fail@plt+0x7a80>
   18a74:	b	18a78 <__assert_fail@plt+0x7a6c>
   18a78:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18a7c:	ldr	r1, [fp, #8]
   18a80:	mul	r0, r0, r1
   18a84:	str	r0, [fp, #-28]	; 0xffffffe4
   18a88:	b	18cd4 <__assert_fail@plt+0x7cc8>
   18a8c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18a90:	ldr	r1, [fp, #8]
   18a94:	mul	r0, r0, r1
   18a98:	str	r0, [fp, #-28]	; 0xffffffe4
   18a9c:	b	18cd8 <__assert_fail@plt+0x7ccc>
   18aa0:	ldr	r0, [fp, #8]
   18aa4:	cmp	r0, #0
   18aa8:	bge	18bf8 <__assert_fail@plt+0x7bec>
   18aac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18ab0:	cmp	r0, #0
   18ab4:	bge	18b80 <__assert_fail@plt+0x7b74>
   18ab8:	b	18af8 <__assert_fail@plt+0x7aec>
   18abc:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18ac0:	ldr	r1, [fp, #8]
   18ac4:	asr	r3, r1, #31
   18ac8:	mvn	r2, #0
   18acc:	str	r0, [sp, #24]
   18ad0:	mov	r0, r2
   18ad4:	str	r1, [sp, #20]
   18ad8:	mov	r1, r2
   18adc:	ldr	r2, [sp, #20]
   18ae0:	bl	1b164 <__assert_fail@plt+0xa158>
   18ae4:	ldr	r2, [sp, #24]
   18ae8:	subs	r0, r2, r0
   18aec:	rscs	r1, r1, r2, asr #31
   18af0:	bcc	18cac <__assert_fail@plt+0x7ca0>
   18af4:	b	18cc0 <__assert_fail@plt+0x7cb4>
   18af8:	b	18afc <__assert_fail@plt+0x7af0>
   18afc:	ldr	r0, [pc, #512]	; 18d04 <__assert_fail@plt+0x7cf8>
   18b00:	ldr	r1, [fp, #8]
   18b04:	cmp	r1, r0
   18b08:	blt	18b20 <__assert_fail@plt+0x7b14>
   18b0c:	b	18b34 <__assert_fail@plt+0x7b28>
   18b10:	ldr	r0, [fp, #8]
   18b14:	movw	r1, #0
   18b18:	cmp	r1, r0
   18b1c:	bge	18b34 <__assert_fail@plt+0x7b28>
   18b20:	mov	r0, #1
   18b24:	mvn	r1, #0
   18b28:	str	r1, [sp, #16]
   18b2c:	str	r0, [sp, #12]
   18b30:	b	18b60 <__assert_fail@plt+0x7b54>
   18b34:	ldr	r0, [fp, #8]
   18b38:	rsb	r0, r0, #0
   18b3c:	asr	r3, r0, #31
   18b40:	mvn	r1, #0
   18b44:	str	r0, [sp, #8]
   18b48:	mov	r0, r1
   18b4c:	ldr	r2, [sp, #8]
   18b50:	bl	1b164 <__assert_fail@plt+0xa158>
   18b54:	str	r0, [sp, #16]
   18b58:	str	r1, [sp, #12]
   18b5c:	b	18b60 <__assert_fail@plt+0x7b54>
   18b60:	ldr	r0, [sp, #12]
   18b64:	ldr	r1, [sp, #16]
   18b68:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18b6c:	mvn	r2, r2
   18b70:	subs	r1, r2, r1
   18b74:	rscs	r0, r0, r2, asr #31
   18b78:	bcs	18cac <__assert_fail@plt+0x7ca0>
   18b7c:	b	18cc0 <__assert_fail@plt+0x7cb4>
   18b80:	b	18b84 <__assert_fail@plt+0x7b78>
   18b84:	b	18bdc <__assert_fail@plt+0x7bd0>
   18b88:	b	18bdc <__assert_fail@plt+0x7bd0>
   18b8c:	ldr	r0, [fp, #8]
   18b90:	cmn	r0, #1
   18b94:	bne	18bdc <__assert_fail@plt+0x7bd0>
   18b98:	b	18b9c <__assert_fail@plt+0x7b90>
   18b9c:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18ba0:	add	r0, r0, #0
   18ba4:	movw	r1, #0
   18ba8:	cmp	r1, r0
   18bac:	blt	18cac <__assert_fail@plt+0x7ca0>
   18bb0:	b	18cc0 <__assert_fail@plt+0x7cb4>
   18bb4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18bb8:	movw	r1, #0
   18bbc:	cmp	r1, r0
   18bc0:	bge	18cc0 <__assert_fail@plt+0x7cb4>
   18bc4:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18bc8:	sub	r0, r0, #1
   18bcc:	mvn	r1, #0
   18bd0:	cmp	r1, r0
   18bd4:	blt	18cac <__assert_fail@plt+0x7ca0>
   18bd8:	b	18cc0 <__assert_fail@plt+0x7cb4>
   18bdc:	ldr	r0, [fp, #8]
   18be0:	movw	r1, #0
   18be4:	sdiv	r0, r1, r0
   18be8:	ldr	r1, [fp, #-24]	; 0xffffffe8
   18bec:	cmp	r0, r1
   18bf0:	blt	18cac <__assert_fail@plt+0x7ca0>
   18bf4:	b	18cc0 <__assert_fail@plt+0x7cb4>
   18bf8:	ldr	r0, [fp, #8]
   18bfc:	cmp	r0, #0
   18c00:	bne	18c08 <__assert_fail@plt+0x7bfc>
   18c04:	b	18cc0 <__assert_fail@plt+0x7cb4>
   18c08:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18c0c:	cmp	r0, #0
   18c10:	bge	18c7c <__assert_fail@plt+0x7c70>
   18c14:	b	18c18 <__assert_fail@plt+0x7c0c>
   18c18:	b	18c60 <__assert_fail@plt+0x7c54>
   18c1c:	b	18c60 <__assert_fail@plt+0x7c54>
   18c20:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18c24:	cmn	r0, #1
   18c28:	bne	18c60 <__assert_fail@plt+0x7c54>
   18c2c:	b	18c30 <__assert_fail@plt+0x7c24>
   18c30:	ldr	r0, [fp, #8]
   18c34:	add	r0, r0, #0
   18c38:	movw	r1, #0
   18c3c:	cmp	r1, r0
   18c40:	blt	18cac <__assert_fail@plt+0x7ca0>
   18c44:	b	18cc0 <__assert_fail@plt+0x7cb4>
   18c48:	ldr	r0, [fp, #8]
   18c4c:	sub	r0, r0, #1
   18c50:	mvn	r1, #0
   18c54:	cmp	r1, r0
   18c58:	blt	18cac <__assert_fail@plt+0x7ca0>
   18c5c:	b	18cc0 <__assert_fail@plt+0x7cb4>
   18c60:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18c64:	movw	r1, #0
   18c68:	sdiv	r0, r1, r0
   18c6c:	ldr	r1, [fp, #8]
   18c70:	cmp	r0, r1
   18c74:	blt	18cac <__assert_fail@plt+0x7ca0>
   18c78:	b	18cc0 <__assert_fail@plt+0x7cb4>
   18c7c:	ldr	r0, [fp, #8]
   18c80:	asr	r3, r0, #31
   18c84:	mvn	r1, #0
   18c88:	str	r0, [sp, #4]
   18c8c:	mov	r0, r1
   18c90:	ldr	r2, [sp, #4]
   18c94:	bl	1b164 <__assert_fail@plt+0xa158>
   18c98:	ldr	r2, [fp, #-24]	; 0xffffffe8
   18c9c:	subs	r0, r0, r2
   18ca0:	sbcs	r1, r1, r2, asr #31
   18ca4:	bcs	18cc0 <__assert_fail@plt+0x7cb4>
   18ca8:	b	18cac <__assert_fail@plt+0x7ca0>
   18cac:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18cb0:	ldr	r1, [fp, #8]
   18cb4:	mul	r0, r0, r1
   18cb8:	str	r0, [fp, #-28]	; 0xffffffe4
   18cbc:	b	18cd4 <__assert_fail@plt+0x7cc8>
   18cc0:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18cc4:	ldr	r1, [fp, #8]
   18cc8:	mul	r0, r0, r1
   18ccc:	str	r0, [fp, #-28]	; 0xffffffe4
   18cd0:	b	18cd8 <__assert_fail@plt+0x7ccc>
   18cd4:	bl	18eb0 <__assert_fail@plt+0x7ea4>
   18cd8:	ldr	r0, [fp, #-4]
   18cdc:	ldr	r1, [fp, #-28]	; 0xffffffe4
   18ce0:	bl	16210 <__assert_fail@plt+0x5204>
   18ce4:	str	r0, [fp, #-4]
   18ce8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   18cec:	ldr	r1, [fp, #-8]
   18cf0:	str	r0, [r1]
   18cf4:	ldr	r0, [fp, #-4]
   18cf8:	mov	sp, fp
   18cfc:	pop	{fp, pc}
   18d00:	svcvc	0x00ffffff
   18d04:	andhi	r0, r0, r1
   18d08:	andhi	r0, r0, r0
   18d0c:			; <UNDEFINED> instruction: 0xffff8000
   18d10:	push	{fp, lr}
   18d14:	mov	fp, sp
   18d18:	sub	sp, sp, #8
   18d1c:	str	r0, [sp, #4]
   18d20:	ldr	r0, [sp, #4]
   18d24:	movw	r1, #1
   18d28:	bl	18d34 <__assert_fail@plt+0x7d28>
   18d2c:	mov	sp, fp
   18d30:	pop	{fp, pc}
   18d34:	push	{fp, lr}
   18d38:	mov	fp, sp
   18d3c:	sub	sp, sp, #8
   18d40:	str	r0, [sp, #4]
   18d44:	str	r1, [sp]
   18d48:	ldr	r0, [sp, #4]
   18d4c:	ldr	r1, [sp]
   18d50:	bl	18f00 <__assert_fail@plt+0x7ef4>
   18d54:	bl	1619c <__assert_fail@plt+0x5190>
   18d58:	mov	sp, fp
   18d5c:	pop	{fp, pc}
   18d60:	push	{fp, lr}
   18d64:	mov	fp, sp
   18d68:	sub	sp, sp, #8
   18d6c:	str	r0, [sp, #4]
   18d70:	ldr	r0, [sp, #4]
   18d74:	movw	r1, #1
   18d78:	bl	18d84 <__assert_fail@plt+0x7d78>
   18d7c:	mov	sp, fp
   18d80:	pop	{fp, pc}
   18d84:	push	{fp, lr}
   18d88:	mov	fp, sp
   18d8c:	sub	sp, sp, #8
   18d90:	str	r0, [sp, #4]
   18d94:	str	r1, [sp]
   18d98:	ldr	r0, [sp, #4]
   18d9c:	ldr	r1, [sp]
   18da0:	bl	192fc <__assert_fail@plt+0x82f0>
   18da4:	bl	1619c <__assert_fail@plt+0x5190>
   18da8:	mov	sp, fp
   18dac:	pop	{fp, pc}
   18db0:	push	{fp, lr}
   18db4:	mov	fp, sp
   18db8:	sub	sp, sp, #16
   18dbc:	str	r0, [fp, #-4]
   18dc0:	str	r1, [sp, #8]
   18dc4:	ldr	r0, [sp, #8]
   18dc8:	bl	16178 <__assert_fail@plt+0x516c>
   18dcc:	ldr	r1, [fp, #-4]
   18dd0:	ldr	r2, [sp, #8]
   18dd4:	str	r0, [sp, #4]
   18dd8:	bl	10e2c <memcpy@plt>
   18ddc:	ldr	r0, [sp, #4]
   18de0:	mov	sp, fp
   18de4:	pop	{fp, pc}
   18de8:	push	{fp, lr}
   18dec:	mov	fp, sp
   18df0:	sub	sp, sp, #16
   18df4:	str	r0, [fp, #-4]
   18df8:	str	r1, [sp, #8]
   18dfc:	ldr	r0, [sp, #8]
   18e00:	bl	161cc <__assert_fail@plt+0x51c0>
   18e04:	ldr	r1, [fp, #-4]
   18e08:	ldr	r2, [sp, #8]
   18e0c:	str	r0, [sp, #4]
   18e10:	bl	10e2c <memcpy@plt>
   18e14:	ldr	r0, [sp, #4]
   18e18:	mov	sp, fp
   18e1c:	pop	{fp, pc}
   18e20:	push	{fp, lr}
   18e24:	mov	fp, sp
   18e28:	sub	sp, sp, #16
   18e2c:	str	r0, [fp, #-4]
   18e30:	str	r1, [sp, #8]
   18e34:	ldr	r0, [sp, #8]
   18e38:	add	r0, r0, #1
   18e3c:	bl	161cc <__assert_fail@plt+0x51c0>
   18e40:	str	r0, [sp, #4]
   18e44:	ldr	r0, [sp, #4]
   18e48:	ldr	r1, [sp, #8]
   18e4c:	add	r0, r0, r1
   18e50:	movw	r1, #0
   18e54:	strb	r1, [r0]
   18e58:	ldr	r0, [sp, #4]
   18e5c:	ldr	r1, [fp, #-4]
   18e60:	ldr	r2, [sp, #8]
   18e64:	str	r0, [sp]
   18e68:	bl	10e2c <memcpy@plt>
   18e6c:	ldr	r0, [sp]
   18e70:	mov	sp, fp
   18e74:	pop	{fp, pc}
   18e78:	push	{fp, lr}
   18e7c:	mov	fp, sp
   18e80:	sub	sp, sp, #8
   18e84:	str	r0, [sp, #4]
   18e88:	ldr	r0, [sp, #4]
   18e8c:	ldr	r1, [sp, #4]
   18e90:	str	r0, [sp]
   18e94:	mov	r0, r1
   18e98:	bl	10f28 <strlen@plt>
   18e9c:	add	r1, r0, #1
   18ea0:	ldr	r0, [sp]
   18ea4:	bl	18db0 <__assert_fail@plt+0x7da4>
   18ea8:	mov	sp, fp
   18eac:	pop	{fp, pc}
   18eb0:	push	{fp, lr}
   18eb4:	mov	fp, sp
   18eb8:	sub	sp, sp, #8
   18ebc:	movw	r0, #53484	; 0xd0ec
   18ec0:	movt	r0, #2
   18ec4:	ldr	r0, [r0]
   18ec8:	movw	r1, #48932	; 0xbf24
   18ecc:	movt	r1, #1
   18ed0:	str	r0, [sp, #4]
   18ed4:	mov	r0, r1
   18ed8:	bl	10f1c <gettext@plt>
   18edc:	ldr	r1, [sp, #4]
   18ee0:	str	r0, [sp]
   18ee4:	mov	r0, r1
   18ee8:	movw	r1, #0
   18eec:	movw	r2, #47189	; 0xb855
   18ef0:	movt	r2, #1
   18ef4:	ldr	r3, [sp]
   18ef8:	bl	10ebc <error@plt>
   18efc:	bl	10fe8 <abort@plt>
   18f00:	push	{fp, lr}
   18f04:	mov	fp, sp
   18f08:	sub	sp, sp, #16
   18f0c:	str	r0, [sp, #8]
   18f10:	str	r1, [sp, #4]
   18f14:	ldr	r0, [sp, #8]
   18f18:	cmp	r0, #0
   18f1c:	beq	18f2c <__assert_fail@plt+0x7f20>
   18f20:	ldr	r0, [sp, #4]
   18f24:	cmp	r0, #0
   18f28:	bne	18f38 <__assert_fail@plt+0x7f2c>
   18f2c:	movw	r0, #1
   18f30:	str	r0, [sp, #4]
   18f34:	str	r0, [sp, #8]
   18f38:	ldr	r0, [sp, #4]
   18f3c:	cmp	r0, #0
   18f40:	beq	18f74 <__assert_fail@plt+0x7f68>
   18f44:	ldr	r0, [pc, #76]	; 18f98 <__assert_fail@plt+0x7f8c>
   18f48:	ldr	r1, [sp, #4]
   18f4c:	udiv	r0, r0, r1
   18f50:	ldr	r1, [sp, #8]
   18f54:	cmp	r0, r1
   18f58:	bcs	18f74 <__assert_fail@plt+0x7f68>
   18f5c:	bl	10f40 <__errno_location@plt>
   18f60:	movw	r1, #12
   18f64:	str	r1, [r0]
   18f68:	movw	r0, #0
   18f6c:	str	r0, [fp, #-4]
   18f70:	b	18f8c <__assert_fail@plt+0x7f80>
   18f74:	ldr	r0, [sp, #8]
   18f78:	ldr	r1, [sp, #4]
   18f7c:	bl	10dc0 <calloc@plt>
   18f80:	str	r0, [sp]
   18f84:	ldr	r0, [sp]
   18f88:	str	r0, [fp, #-4]
   18f8c:	ldr	r0, [fp, #-4]
   18f90:	mov	sp, fp
   18f94:	pop	{fp, pc}
   18f98:	svcvc	0x00ffffff
   18f9c:	push	{fp, lr}
   18fa0:	mov	fp, sp
   18fa4:	sub	sp, sp, #16
   18fa8:	str	r0, [sp, #8]
   18fac:	ldr	r0, [sp, #8]
   18fb0:	cmp	r0, #0
   18fb4:	bne	18fc0 <__assert_fail@plt+0x7fb4>
   18fb8:	movw	r0, #1
   18fbc:	str	r0, [sp, #8]
   18fc0:	ldr	r0, [pc, #64]	; 19008 <__assert_fail@plt+0x7ffc>
   18fc4:	ldr	r1, [sp, #8]
   18fc8:	cmp	r0, r1
   18fcc:	bcs	18fe8 <__assert_fail@plt+0x7fdc>
   18fd0:	bl	10f40 <__errno_location@plt>
   18fd4:	movw	r1, #12
   18fd8:	str	r1, [r0]
   18fdc:	movw	r0, #0
   18fe0:	str	r0, [fp, #-4]
   18fe4:	b	18ffc <__assert_fail@plt+0x7ff0>
   18fe8:	ldr	r0, [sp, #8]
   18fec:	bl	10ec8 <malloc@plt>
   18ff0:	str	r0, [sp, #4]
   18ff4:	ldr	r0, [sp, #4]
   18ff8:	str	r0, [fp, #-4]
   18ffc:	ldr	r0, [fp, #-4]
   19000:	mov	sp, fp
   19004:	pop	{fp, pc}
   19008:	svcvc	0x00ffffff
   1900c:	push	{fp, lr}
   19010:	mov	fp, sp
   19014:	sub	sp, sp, #16
   19018:	str	r0, [sp, #8]
   1901c:	str	r1, [sp, #4]
   19020:	ldr	r0, [sp, #8]
   19024:	movw	r1, #0
   19028:	cmp	r0, r1
   1902c:	bne	19040 <__assert_fail@plt+0x8034>
   19030:	ldr	r0, [sp, #4]
   19034:	bl	18f9c <__assert_fail@plt+0x7f90>
   19038:	str	r0, [fp, #-4]
   1903c:	b	190a0 <__assert_fail@plt+0x8094>
   19040:	ldr	r0, [sp, #4]
   19044:	cmp	r0, #0
   19048:	bne	19060 <__assert_fail@plt+0x8054>
   1904c:	ldr	r0, [sp, #8]
   19050:	bl	12fd0 <__assert_fail@plt+0x1fc4>
   19054:	movw	r0, #0
   19058:	str	r0, [fp, #-4]
   1905c:	b	190a0 <__assert_fail@plt+0x8094>
   19060:	ldr	r0, [pc, #68]	; 190ac <__assert_fail@plt+0x80a0>
   19064:	ldr	r1, [sp, #4]
   19068:	cmp	r0, r1
   1906c:	bcs	19088 <__assert_fail@plt+0x807c>
   19070:	bl	10f40 <__errno_location@plt>
   19074:	movw	r1, #12
   19078:	str	r1, [r0]
   1907c:	movw	r0, #0
   19080:	str	r0, [fp, #-4]
   19084:	b	190a0 <__assert_fail@plt+0x8094>
   19088:	ldr	r0, [sp, #8]
   1908c:	ldr	r1, [sp, #4]
   19090:	bl	10e5c <realloc@plt>
   19094:	str	r0, [sp]
   19098:	ldr	r0, [sp]
   1909c:	str	r0, [fp, #-4]
   190a0:	ldr	r0, [fp, #-4]
   190a4:	mov	sp, fp
   190a8:	pop	{fp, pc}
   190ac:	svcvc	0x00ffffff
   190b0:	push	{fp, lr}
   190b4:	mov	fp, sp
   190b8:	sub	sp, sp, #24
   190bc:	str	r0, [fp, #-8]
   190c0:	str	r1, [sp, #12]
   190c4:	ldr	r0, [fp, #-8]
   190c8:	str	r0, [sp, #8]
   190cc:	ldr	r0, [sp, #12]
   190d0:	str	r0, [sp, #4]
   190d4:	ldr	r0, [sp, #8]
   190d8:	ldr	r1, [sp, #4]
   190dc:	cmp	r0, r1
   190e0:	bne	190f0 <__assert_fail@plt+0x80e4>
   190e4:	movw	r0, #0
   190e8:	str	r0, [fp, #-4]
   190ec:	b	1915c <__assert_fail@plt+0x8150>
   190f0:	b	190f4 <__assert_fail@plt+0x80e8>
   190f4:	ldr	r0, [sp, #8]
   190f8:	ldrb	r0, [r0]
   190fc:	bl	1ae10 <__assert_fail@plt+0x9e04>
   19100:	strb	r0, [sp, #3]
   19104:	ldr	r0, [sp, #4]
   19108:	ldrb	r0, [r0]
   1910c:	bl	1ae10 <__assert_fail@plt+0x9e04>
   19110:	strb	r0, [sp, #2]
   19114:	ldrb	r0, [sp, #3]
   19118:	cmp	r0, #0
   1911c:	bne	19124 <__assert_fail@plt+0x8118>
   19120:	b	1914c <__assert_fail@plt+0x8140>
   19124:	ldr	r0, [sp, #8]
   19128:	add	r0, r0, #1
   1912c:	str	r0, [sp, #8]
   19130:	ldr	r0, [sp, #4]
   19134:	add	r0, r0, #1
   19138:	str	r0, [sp, #4]
   1913c:	ldrb	r0, [sp, #3]
   19140:	ldrb	r1, [sp, #2]
   19144:	cmp	r0, r1
   19148:	beq	190f4 <__assert_fail@plt+0x80e8>
   1914c:	ldrb	r0, [sp, #3]
   19150:	ldrb	r1, [sp, #2]
   19154:	sub	r0, r0, r1
   19158:	str	r0, [fp, #-4]
   1915c:	ldr	r0, [fp, #-4]
   19160:	mov	sp, fp
   19164:	pop	{fp, pc}
   19168:	push	{fp, lr}
   1916c:	mov	fp, sp
   19170:	sub	sp, sp, #16
   19174:	str	r0, [sp, #8]
   19178:	ldr	r0, [sp, #8]
   1917c:	bl	10e98 <__fpending@plt>
   19180:	cmp	r0, #0
   19184:	movw	r0, #0
   19188:	movne	r0, #1
   1918c:	and	r0, r0, #1
   19190:	strb	r0, [sp, #7]
   19194:	ldr	r0, [sp, #8]
   19198:	bl	10ea4 <ferror_unlocked@plt>
   1919c:	cmp	r0, #0
   191a0:	movw	r0, #0
   191a4:	movne	r0, #1
   191a8:	and	r0, r0, #1
   191ac:	strb	r0, [sp, #6]
   191b0:	ldr	r0, [sp, #8]
   191b4:	bl	12e38 <__assert_fail@plt+0x1e2c>
   191b8:	cmp	r0, #0
   191bc:	movw	r0, #0
   191c0:	movne	r0, #1
   191c4:	and	r0, r0, #1
   191c8:	strb	r0, [sp, #5]
   191cc:	ldrb	r0, [sp, #6]
   191d0:	tst	r0, #1
   191d4:	bne	19200 <__assert_fail@plt+0x81f4>
   191d8:	ldrb	r0, [sp, #5]
   191dc:	tst	r0, #1
   191e0:	beq	19224 <__assert_fail@plt+0x8218>
   191e4:	ldrb	r0, [sp, #7]
   191e8:	tst	r0, #1
   191ec:	bne	19200 <__assert_fail@plt+0x81f4>
   191f0:	bl	10f40 <__errno_location@plt>
   191f4:	ldr	r0, [r0]
   191f8:	cmp	r0, #9
   191fc:	beq	19224 <__assert_fail@plt+0x8218>
   19200:	ldrb	r0, [sp, #5]
   19204:	tst	r0, #1
   19208:	bne	19218 <__assert_fail@plt+0x820c>
   1920c:	bl	10f40 <__errno_location@plt>
   19210:	movw	r1, #0
   19214:	str	r1, [r0]
   19218:	mvn	r0, #0
   1921c:	str	r0, [fp, #-4]
   19220:	b	1922c <__assert_fail@plt+0x8220>
   19224:	movw	r0, #0
   19228:	str	r0, [fp, #-4]
   1922c:	ldr	r0, [fp, #-4]
   19230:	mov	sp, fp
   19234:	pop	{fp, pc}
   19238:	push	{fp, lr}
   1923c:	mov	fp, sp
   19240:	bl	10f40 <__errno_location@plt>
   19244:	movw	r1, #12
   19248:	str	r1, [r0]
   1924c:	movw	r0, #0
   19250:	pop	{fp, pc}
   19254:	push	{fp, lr}
   19258:	mov	fp, sp
   1925c:	sub	sp, sp, #8
   19260:	str	r0, [sp, #4]
   19264:	ldr	r0, [sp, #4]
   19268:	cmn	r0, #1
   1926c:	bhi	19280 <__assert_fail@plt+0x8274>
   19270:	ldr	r0, [sp, #4]
   19274:	bl	18f9c <__assert_fail@plt+0x7f90>
   19278:	str	r0, [sp]
   1927c:	b	19288 <__assert_fail@plt+0x827c>
   19280:	bl	19238 <__assert_fail@plt+0x822c>
   19284:	str	r0, [sp]
   19288:	ldr	r0, [sp]
   1928c:	mov	sp, fp
   19290:	pop	{fp, pc}
   19294:	push	{fp, lr}
   19298:	mov	fp, sp
   1929c:	sub	sp, sp, #16
   192a0:	str	r0, [fp, #-4]
   192a4:	str	r1, [sp, #8]
   192a8:	ldr	r0, [sp, #8]
   192ac:	cmn	r0, #1
   192b0:	bhi	192e8 <__assert_fail@plt+0x82dc>
   192b4:	ldr	r0, [fp, #-4]
   192b8:	ldr	r1, [sp, #8]
   192bc:	ldr	r2, [sp, #8]
   192c0:	cmp	r2, #0
   192c4:	movw	r2, #0
   192c8:	movne	r2, #1
   192cc:	mvn	r3, #0
   192d0:	eor	r2, r2, r3
   192d4:	and	r2, r2, #1
   192d8:	orr	r1, r1, r2
   192dc:	bl	1900c <__assert_fail@plt+0x8000>
   192e0:	str	r0, [sp, #4]
   192e4:	b	192f0 <__assert_fail@plt+0x82e4>
   192e8:	bl	19238 <__assert_fail@plt+0x822c>
   192ec:	str	r0, [sp, #4]
   192f0:	ldr	r0, [sp, #4]
   192f4:	mov	sp, fp
   192f8:	pop	{fp, pc}
   192fc:	push	{fp, lr}
   19300:	mov	fp, sp
   19304:	sub	sp, sp, #16
   19308:	str	r0, [sp, #8]
   1930c:	str	r1, [sp, #4]
   19310:	ldr	r0, [sp, #8]
   19314:	mvn	r1, #0
   19318:	cmp	r1, r0
   1931c:	bcs	19340 <__assert_fail@plt+0x8334>
   19320:	ldr	r0, [sp, #4]
   19324:	cmp	r0, #0
   19328:	beq	19338 <__assert_fail@plt+0x832c>
   1932c:	bl	19238 <__assert_fail@plt+0x822c>
   19330:	str	r0, [fp, #-4]
   19334:	b	19380 <__assert_fail@plt+0x8374>
   19338:	movw	r0, #0
   1933c:	str	r0, [sp, #8]
   19340:	ldr	r0, [sp, #4]
   19344:	mvn	r1, #0
   19348:	cmp	r1, r0
   1934c:	bcs	19370 <__assert_fail@plt+0x8364>
   19350:	ldr	r0, [sp, #8]
   19354:	cmp	r0, #0
   19358:	beq	19368 <__assert_fail@plt+0x835c>
   1935c:	bl	19238 <__assert_fail@plt+0x822c>
   19360:	str	r0, [fp, #-4]
   19364:	b	19380 <__assert_fail@plt+0x8374>
   19368:	movw	r0, #0
   1936c:	str	r0, [sp, #4]
   19370:	ldr	r0, [sp, #8]
   19374:	ldr	r1, [sp, #4]
   19378:	bl	18f00 <__assert_fail@plt+0x7ef4>
   1937c:	str	r0, [fp, #-4]
   19380:	ldr	r0, [fp, #-4]
   19384:	mov	sp, fp
   19388:	pop	{fp, pc}
   1938c:	push	{fp, lr}
   19390:	mov	fp, sp
   19394:	sub	sp, sp, #16
   19398:	str	r0, [fp, #-4]
   1939c:	str	r1, [sp, #8]
   193a0:	str	r2, [sp, #4]
   193a4:	ldr	r0, [sp, #8]
   193a8:	cmp	r0, #0
   193ac:	beq	193bc <__assert_fail@plt+0x83b0>
   193b0:	ldr	r0, [sp, #4]
   193b4:	cmp	r0, #0
   193b8:	bne	193c8 <__assert_fail@plt+0x83bc>
   193bc:	movw	r0, #1
   193c0:	str	r0, [sp, #4]
   193c4:	str	r0, [sp, #8]
   193c8:	ldr	r0, [sp, #8]
   193cc:	cmn	r0, #1
   193d0:	bhi	193f8 <__assert_fail@plt+0x83ec>
   193d4:	ldr	r0, [sp, #4]
   193d8:	cmn	r0, #1
   193dc:	bhi	193f8 <__assert_fail@plt+0x83ec>
   193e0:	ldr	r0, [fp, #-4]
   193e4:	ldr	r1, [sp, #8]
   193e8:	ldr	r2, [sp, #4]
   193ec:	bl	19518 <__assert_fail@plt+0x850c>
   193f0:	str	r0, [sp]
   193f4:	b	19400 <__assert_fail@plt+0x83f4>
   193f8:	bl	19238 <__assert_fail@plt+0x822c>
   193fc:	str	r0, [sp]
   19400:	ldr	r0, [sp]
   19404:	mov	sp, fp
   19408:	pop	{fp, pc}
   1940c:	push	{fp, lr}
   19410:	mov	fp, sp
   19414:	sub	sp, sp, #8
   19418:	movw	r0, #14
   1941c:	bl	10fa0 <nl_langinfo@plt>
   19420:	str	r0, [sp, #4]
   19424:	ldr	r0, [sp, #4]
   19428:	movw	r1, #0
   1942c:	cmp	r0, r1
   19430:	bne	19440 <__assert_fail@plt+0x8434>
   19434:	movw	r0, #46771	; 0xb6b3
   19438:	movt	r0, #1
   1943c:	str	r0, [sp, #4]
   19440:	ldr	r0, [sp, #4]
   19444:	ldrb	r0, [r0]
   19448:	cmp	r0, #0
   1944c:	bne	1945c <__assert_fail@plt+0x8450>
   19450:	movw	r0, #48949	; 0xbf35
   19454:	movt	r0, #1
   19458:	str	r0, [sp, #4]
   1945c:	ldr	r0, [sp, #4]
   19460:	mov	sp, fp
   19464:	pop	{fp, pc}
   19468:	push	{fp, lr}
   1946c:	mov	fp, sp
   19470:	sub	sp, sp, #32
   19474:	str	r0, [fp, #-8]
   19478:	str	r1, [fp, #-12]
   1947c:	str	r2, [sp, #16]
   19480:	str	r3, [sp, #12]
   19484:	ldr	r0, [fp, #-8]
   19488:	movw	r1, #0
   1948c:	cmp	r0, r1
   19490:	bne	1949c <__assert_fail@plt+0x8490>
   19494:	add	r0, sp, #4
   19498:	str	r0, [fp, #-8]
   1949c:	ldr	r0, [fp, #-8]
   194a0:	ldr	r1, [fp, #-12]
   194a4:	ldr	r2, [sp, #16]
   194a8:	ldr	r3, [sp, #12]
   194ac:	bl	10eb0 <mbrtowc@plt>
   194b0:	str	r0, [sp, #8]
   194b4:	ldr	r0, [sp, #8]
   194b8:	mvn	r1, #1
   194bc:	cmp	r1, r0
   194c0:	bhi	19504 <__assert_fail@plt+0x84f8>
   194c4:	ldr	r0, [sp, #16]
   194c8:	cmp	r0, #0
   194cc:	beq	19504 <__assert_fail@plt+0x84f8>
   194d0:	movw	r0, #0
   194d4:	bl	1ae98 <__assert_fail@plt+0x9e8c>
   194d8:	tst	r0, #1
   194dc:	bne	19504 <__assert_fail@plt+0x84f8>
   194e0:	ldr	r0, [fp, #-12]
   194e4:	ldrb	r0, [r0]
   194e8:	strb	r0, [sp, #3]
   194ec:	ldrb	r0, [sp, #3]
   194f0:	ldr	r1, [fp, #-8]
   194f4:	str	r0, [r1]
   194f8:	movw	r0, #1
   194fc:	str	r0, [fp, #-4]
   19500:	b	1950c <__assert_fail@plt+0x8500>
   19504:	ldr	r0, [sp, #8]
   19508:	str	r0, [fp, #-4]
   1950c:	ldr	r0, [fp, #-4]
   19510:	mov	sp, fp
   19514:	pop	{fp, pc}
   19518:	push	{fp, lr}
   1951c:	mov	fp, sp
   19520:	sub	sp, sp, #96	; 0x60
   19524:	str	r0, [fp, #-8]
   19528:	str	r1, [fp, #-12]
   1952c:	str	r2, [fp, #-16]
   19530:	b	198e8 <__assert_fail@plt+0x88dc>
   19534:	b	19708 <__assert_fail@plt+0x86fc>
   19538:	ldr	r0, [fp, #-16]
   1953c:	cmp	r0, #0
   19540:	bcs	19644 <__assert_fail@plt+0x8638>
   19544:	ldr	r0, [fp, #-12]
   19548:	cmp	r0, #0
   1954c:	bcs	195d4 <__assert_fail@plt+0x85c8>
   19550:	b	19570 <__assert_fail@plt+0x8564>
   19554:	ldr	r0, [fp, #-12]
   19558:	ldr	r1, [fp, #-16]
   1955c:	movw	r2, #127	; 0x7f
   19560:	udiv	r1, r2, r1
   19564:	cmp	r0, r1
   19568:	bcc	196d8 <__assert_fail@plt+0x86cc>
   1956c:	b	196f0 <__assert_fail@plt+0x86e4>
   19570:	b	19584 <__assert_fail@plt+0x8578>
   19574:	ldr	r0, [fp, #-16]
   19578:	cmp	r0, #1
   1957c:	bcc	19594 <__assert_fail@plt+0x8588>
   19580:	b	195a0 <__assert_fail@plt+0x8594>
   19584:	ldr	r0, [fp, #-16]
   19588:	movw	r1, #0
   1958c:	cmp	r1, r0
   19590:	bcs	195a0 <__assert_fail@plt+0x8594>
   19594:	movw	r0, #0
   19598:	str	r0, [fp, #-24]	; 0xffffffe8
   1959c:	b	195b8 <__assert_fail@plt+0x85ac>
   195a0:	ldr	r0, [fp, #-16]
   195a4:	movw	r1, #0
   195a8:	sub	r0, r1, r0
   195ac:	movw	r1, #127	; 0x7f
   195b0:	udiv	r0, r1, r0
   195b4:	str	r0, [fp, #-24]	; 0xffffffe8
   195b8:	ldr	r0, [fp, #-24]	; 0xffffffe8
   195bc:	ldr	r1, [fp, #-12]
   195c0:	mvn	r2, #0
   195c4:	sub	r1, r2, r1
   195c8:	cmp	r0, r1
   195cc:	bls	196d8 <__assert_fail@plt+0x86cc>
   195d0:	b	196f0 <__assert_fail@plt+0x86e4>
   195d4:	ldr	r0, [fp, #-16]
   195d8:	cmn	r0, #1
   195dc:	bne	19628 <__assert_fail@plt+0x861c>
   195e0:	b	19600 <__assert_fail@plt+0x85f4>
   195e4:	ldr	r0, [fp, #-12]
   195e8:	mvn	r1, #127	; 0x7f
   195ec:	add	r0, r0, r1
   195f0:	movw	r1, #0
   195f4:	cmp	r1, r0
   195f8:	bcc	196d8 <__assert_fail@plt+0x86cc>
   195fc:	b	196f0 <__assert_fail@plt+0x86e4>
   19600:	ldr	r0, [fp, #-12]
   19604:	movw	r1, #0
   19608:	cmp	r1, r0
   1960c:	bcs	196f0 <__assert_fail@plt+0x86e4>
   19610:	ldr	r0, [fp, #-12]
   19614:	sub	r0, r0, #1
   19618:	movw	r1, #127	; 0x7f
   1961c:	cmp	r1, r0
   19620:	bcc	196d8 <__assert_fail@plt+0x86cc>
   19624:	b	196f0 <__assert_fail@plt+0x86e4>
   19628:	ldr	r0, [fp, #-16]
   1962c:	mvn	r1, #127	; 0x7f
   19630:	udiv	r0, r1, r0
   19634:	ldr	r1, [fp, #-12]
   19638:	cmp	r0, r1
   1963c:	bcc	196d8 <__assert_fail@plt+0x86cc>
   19640:	b	196f0 <__assert_fail@plt+0x86e4>
   19644:	ldr	r0, [fp, #-16]
   19648:	cmp	r0, #0
   1964c:	bne	19654 <__assert_fail@plt+0x8648>
   19650:	b	196f0 <__assert_fail@plt+0x86e4>
   19654:	ldr	r0, [fp, #-12]
   19658:	cmp	r0, #0
   1965c:	bcs	196c0 <__assert_fail@plt+0x86b4>
   19660:	ldr	r0, [fp, #-12]
   19664:	cmn	r0, #1
   19668:	bne	196a4 <__assert_fail@plt+0x8698>
   1966c:	b	1968c <__assert_fail@plt+0x8680>
   19670:	ldr	r0, [fp, #-16]
   19674:	mvn	r1, #127	; 0x7f
   19678:	add	r0, r0, r1
   1967c:	movw	r1, #0
   19680:	cmp	r1, r0
   19684:	bcc	196d8 <__assert_fail@plt+0x86cc>
   19688:	b	196f0 <__assert_fail@plt+0x86e4>
   1968c:	ldr	r0, [fp, #-16]
   19690:	sub	r0, r0, #1
   19694:	movw	r1, #127	; 0x7f
   19698:	cmp	r1, r0
   1969c:	bcc	196d8 <__assert_fail@plt+0x86cc>
   196a0:	b	196f0 <__assert_fail@plt+0x86e4>
   196a4:	ldr	r0, [fp, #-12]
   196a8:	mvn	r1, #127	; 0x7f
   196ac:	udiv	r0, r1, r0
   196b0:	ldr	r1, [fp, #-16]
   196b4:	cmp	r0, r1
   196b8:	bcc	196d8 <__assert_fail@plt+0x86cc>
   196bc:	b	196f0 <__assert_fail@plt+0x86e4>
   196c0:	ldr	r0, [fp, #-16]
   196c4:	movw	r1, #127	; 0x7f
   196c8:	udiv	r0, r1, r0
   196cc:	ldr	r1, [fp, #-12]
   196d0:	cmp	r0, r1
   196d4:	bcs	196f0 <__assert_fail@plt+0x86e4>
   196d8:	ldr	r0, [fp, #-12]
   196dc:	ldr	r1, [fp, #-16]
   196e0:	mul	r0, r0, r1
   196e4:	sxtb	r0, r0
   196e8:	str	r0, [fp, #-20]	; 0xffffffec
   196ec:	b	1a818 <__assert_fail@plt+0x980c>
   196f0:	ldr	r0, [fp, #-12]
   196f4:	ldr	r1, [fp, #-16]
   196f8:	mul	r0, r0, r1
   196fc:	sxtb	r0, r0
   19700:	str	r0, [fp, #-20]	; 0xffffffec
   19704:	b	1a830 <__assert_fail@plt+0x9824>
   19708:	ldr	r0, [fp, #-16]
   1970c:	cmp	r0, #0
   19710:	bcs	1981c <__assert_fail@plt+0x8810>
   19714:	ldr	r0, [fp, #-12]
   19718:	cmp	r0, #0
   1971c:	bcs	197a4 <__assert_fail@plt+0x8798>
   19720:	b	19740 <__assert_fail@plt+0x8734>
   19724:	ldr	r0, [fp, #-12]
   19728:	ldr	r1, [fp, #-16]
   1972c:	movw	r2, #255	; 0xff
   19730:	udiv	r1, r2, r1
   19734:	cmp	r0, r1
   19738:	bcc	198b8 <__assert_fail@plt+0x88ac>
   1973c:	b	198d0 <__assert_fail@plt+0x88c4>
   19740:	b	19754 <__assert_fail@plt+0x8748>
   19744:	ldr	r0, [fp, #-16]
   19748:	cmp	r0, #1
   1974c:	bcc	19764 <__assert_fail@plt+0x8758>
   19750:	b	19770 <__assert_fail@plt+0x8764>
   19754:	ldr	r0, [fp, #-16]
   19758:	movw	r1, #0
   1975c:	cmp	r1, r0
   19760:	bcs	19770 <__assert_fail@plt+0x8764>
   19764:	movw	r0, #0
   19768:	str	r0, [fp, #-28]	; 0xffffffe4
   1976c:	b	19788 <__assert_fail@plt+0x877c>
   19770:	ldr	r0, [fp, #-16]
   19774:	movw	r1, #0
   19778:	sub	r0, r1, r0
   1977c:	movw	r1, #255	; 0xff
   19780:	udiv	r0, r1, r0
   19784:	str	r0, [fp, #-28]	; 0xffffffe4
   19788:	ldr	r0, [fp, #-28]	; 0xffffffe4
   1978c:	ldr	r1, [fp, #-12]
   19790:	mvn	r2, #0
   19794:	sub	r1, r2, r1
   19798:	cmp	r0, r1
   1979c:	bls	198b8 <__assert_fail@plt+0x88ac>
   197a0:	b	198d0 <__assert_fail@plt+0x88c4>
   197a4:	b	197ac <__assert_fail@plt+0x87a0>
   197a8:	b	197b0 <__assert_fail@plt+0x87a4>
   197ac:	b	19800 <__assert_fail@plt+0x87f4>
   197b0:	ldr	r0, [fp, #-16]
   197b4:	cmn	r0, #1
   197b8:	bne	19800 <__assert_fail@plt+0x87f4>
   197bc:	b	197d8 <__assert_fail@plt+0x87cc>
   197c0:	ldr	r0, [fp, #-12]
   197c4:	add	r0, r0, #0
   197c8:	movw	r1, #0
   197cc:	cmp	r1, r0
   197d0:	bcc	198b8 <__assert_fail@plt+0x88ac>
   197d4:	b	198d0 <__assert_fail@plt+0x88c4>
   197d8:	ldr	r0, [fp, #-12]
   197dc:	movw	r1, #0
   197e0:	cmp	r1, r0
   197e4:	bcs	198d0 <__assert_fail@plt+0x88c4>
   197e8:	ldr	r0, [fp, #-12]
   197ec:	sub	r0, r0, #1
   197f0:	mvn	r1, #0
   197f4:	cmp	r1, r0
   197f8:	bcc	198b8 <__assert_fail@plt+0x88ac>
   197fc:	b	198d0 <__assert_fail@plt+0x88c4>
   19800:	ldr	r0, [fp, #-16]
   19804:	movw	r1, #0
   19808:	udiv	r0, r1, r0
   1980c:	ldr	r1, [fp, #-12]
   19810:	cmp	r0, r1
   19814:	bcc	198b8 <__assert_fail@plt+0x88ac>
   19818:	b	198d0 <__assert_fail@plt+0x88c4>
   1981c:	ldr	r0, [fp, #-16]
   19820:	cmp	r0, #0
   19824:	bne	1982c <__assert_fail@plt+0x8820>
   19828:	b	198d0 <__assert_fail@plt+0x88c4>
   1982c:	ldr	r0, [fp, #-12]
   19830:	cmp	r0, #0
   19834:	bcs	198a0 <__assert_fail@plt+0x8894>
   19838:	b	19840 <__assert_fail@plt+0x8834>
   1983c:	b	19844 <__assert_fail@plt+0x8838>
   19840:	b	19884 <__assert_fail@plt+0x8878>
   19844:	ldr	r0, [fp, #-12]
   19848:	cmn	r0, #1
   1984c:	bne	19884 <__assert_fail@plt+0x8878>
   19850:	b	1986c <__assert_fail@plt+0x8860>
   19854:	ldr	r0, [fp, #-16]
   19858:	add	r0, r0, #0
   1985c:	movw	r1, #0
   19860:	cmp	r1, r0
   19864:	bcc	198b8 <__assert_fail@plt+0x88ac>
   19868:	b	198d0 <__assert_fail@plt+0x88c4>
   1986c:	ldr	r0, [fp, #-16]
   19870:	sub	r0, r0, #1
   19874:	mvn	r1, #0
   19878:	cmp	r1, r0
   1987c:	bcc	198b8 <__assert_fail@plt+0x88ac>
   19880:	b	198d0 <__assert_fail@plt+0x88c4>
   19884:	ldr	r0, [fp, #-12]
   19888:	movw	r1, #0
   1988c:	udiv	r0, r1, r0
   19890:	ldr	r1, [fp, #-16]
   19894:	cmp	r0, r1
   19898:	bcc	198b8 <__assert_fail@plt+0x88ac>
   1989c:	b	198d0 <__assert_fail@plt+0x88c4>
   198a0:	ldr	r0, [fp, #-16]
   198a4:	movw	r1, #255	; 0xff
   198a8:	udiv	r0, r1, r0
   198ac:	ldr	r1, [fp, #-12]
   198b0:	cmp	r0, r1
   198b4:	bcs	198d0 <__assert_fail@plt+0x88c4>
   198b8:	ldr	r0, [fp, #-12]
   198bc:	ldr	r1, [fp, #-16]
   198c0:	mul	r0, r0, r1
   198c4:	and	r0, r0, #255	; 0xff
   198c8:	str	r0, [fp, #-20]	; 0xffffffec
   198cc:	b	1a818 <__assert_fail@plt+0x980c>
   198d0:	ldr	r0, [fp, #-12]
   198d4:	ldr	r1, [fp, #-16]
   198d8:	mul	r0, r0, r1
   198dc:	and	r0, r0, #255	; 0xff
   198e0:	str	r0, [fp, #-20]	; 0xffffffec
   198e4:	b	1a830 <__assert_fail@plt+0x9824>
   198e8:	b	19ca0 <__assert_fail@plt+0x8c94>
   198ec:	b	19ac0 <__assert_fail@plt+0x8ab4>
   198f0:	ldr	r0, [fp, #-16]
   198f4:	cmp	r0, #0
   198f8:	bcs	199fc <__assert_fail@plt+0x89f0>
   198fc:	ldr	r0, [fp, #-12]
   19900:	cmp	r0, #0
   19904:	bcs	1998c <__assert_fail@plt+0x8980>
   19908:	b	19928 <__assert_fail@plt+0x891c>
   1990c:	ldr	r0, [fp, #-12]
   19910:	ldr	r1, [fp, #-16]
   19914:	movw	r2, #32767	; 0x7fff
   19918:	udiv	r1, r2, r1
   1991c:	cmp	r0, r1
   19920:	bcc	19a90 <__assert_fail@plt+0x8a84>
   19924:	b	19aa8 <__assert_fail@plt+0x8a9c>
   19928:	b	1993c <__assert_fail@plt+0x8930>
   1992c:	ldr	r0, [fp, #-16]
   19930:	cmp	r0, #1
   19934:	bcc	1994c <__assert_fail@plt+0x8940>
   19938:	b	19958 <__assert_fail@plt+0x894c>
   1993c:	ldr	r0, [fp, #-16]
   19940:	movw	r1, #0
   19944:	cmp	r1, r0
   19948:	bcs	19958 <__assert_fail@plt+0x894c>
   1994c:	movw	r0, #0
   19950:	str	r0, [fp, #-32]	; 0xffffffe0
   19954:	b	19970 <__assert_fail@plt+0x8964>
   19958:	ldr	r0, [fp, #-16]
   1995c:	movw	r1, #0
   19960:	sub	r0, r1, r0
   19964:	movw	r1, #32767	; 0x7fff
   19968:	udiv	r0, r1, r0
   1996c:	str	r0, [fp, #-32]	; 0xffffffe0
   19970:	ldr	r0, [fp, #-32]	; 0xffffffe0
   19974:	ldr	r1, [fp, #-12]
   19978:	mvn	r2, #0
   1997c:	sub	r1, r2, r1
   19980:	cmp	r0, r1
   19984:	bls	19a90 <__assert_fail@plt+0x8a84>
   19988:	b	19aa8 <__assert_fail@plt+0x8a9c>
   1998c:	ldr	r0, [fp, #-16]
   19990:	cmn	r0, #1
   19994:	bne	199e0 <__assert_fail@plt+0x89d4>
   19998:	b	199b8 <__assert_fail@plt+0x89ac>
   1999c:	ldr	r0, [pc, #3760]	; 1a854 <__assert_fail@plt+0x9848>
   199a0:	ldr	r1, [fp, #-12]
   199a4:	add	r0, r1, r0
   199a8:	movw	r1, #0
   199ac:	cmp	r1, r0
   199b0:	bcc	19a90 <__assert_fail@plt+0x8a84>
   199b4:	b	19aa8 <__assert_fail@plt+0x8a9c>
   199b8:	ldr	r0, [fp, #-12]
   199bc:	movw	r1, #0
   199c0:	cmp	r1, r0
   199c4:	bcs	19aa8 <__assert_fail@plt+0x8a9c>
   199c8:	ldr	r0, [fp, #-12]
   199cc:	sub	r0, r0, #1
   199d0:	movw	r1, #32767	; 0x7fff
   199d4:	cmp	r1, r0
   199d8:	bcc	19a90 <__assert_fail@plt+0x8a84>
   199dc:	b	19aa8 <__assert_fail@plt+0x8a9c>
   199e0:	ldr	r0, [pc, #3692]	; 1a854 <__assert_fail@plt+0x9848>
   199e4:	ldr	r1, [fp, #-16]
   199e8:	udiv	r0, r0, r1
   199ec:	ldr	r1, [fp, #-12]
   199f0:	cmp	r0, r1
   199f4:	bcc	19a90 <__assert_fail@plt+0x8a84>
   199f8:	b	19aa8 <__assert_fail@plt+0x8a9c>
   199fc:	ldr	r0, [fp, #-16]
   19a00:	cmp	r0, #0
   19a04:	bne	19a0c <__assert_fail@plt+0x8a00>
   19a08:	b	19aa8 <__assert_fail@plt+0x8a9c>
   19a0c:	ldr	r0, [fp, #-12]
   19a10:	cmp	r0, #0
   19a14:	bcs	19a78 <__assert_fail@plt+0x8a6c>
   19a18:	ldr	r0, [fp, #-12]
   19a1c:	cmn	r0, #1
   19a20:	bne	19a5c <__assert_fail@plt+0x8a50>
   19a24:	b	19a44 <__assert_fail@plt+0x8a38>
   19a28:	ldr	r0, [pc, #3620]	; 1a854 <__assert_fail@plt+0x9848>
   19a2c:	ldr	r1, [fp, #-16]
   19a30:	add	r0, r1, r0
   19a34:	movw	r1, #0
   19a38:	cmp	r1, r0
   19a3c:	bcc	19a90 <__assert_fail@plt+0x8a84>
   19a40:	b	19aa8 <__assert_fail@plt+0x8a9c>
   19a44:	ldr	r0, [fp, #-16]
   19a48:	sub	r0, r0, #1
   19a4c:	movw	r1, #32767	; 0x7fff
   19a50:	cmp	r1, r0
   19a54:	bcc	19a90 <__assert_fail@plt+0x8a84>
   19a58:	b	19aa8 <__assert_fail@plt+0x8a9c>
   19a5c:	ldr	r0, [pc, #3568]	; 1a854 <__assert_fail@plt+0x9848>
   19a60:	ldr	r1, [fp, #-12]
   19a64:	udiv	r0, r0, r1
   19a68:	ldr	r1, [fp, #-16]
   19a6c:	cmp	r0, r1
   19a70:	bcc	19a90 <__assert_fail@plt+0x8a84>
   19a74:	b	19aa8 <__assert_fail@plt+0x8a9c>
   19a78:	ldr	r0, [fp, #-16]
   19a7c:	movw	r1, #32767	; 0x7fff
   19a80:	udiv	r0, r1, r0
   19a84:	ldr	r1, [fp, #-12]
   19a88:	cmp	r0, r1
   19a8c:	bcs	19aa8 <__assert_fail@plt+0x8a9c>
   19a90:	ldr	r0, [fp, #-12]
   19a94:	ldr	r1, [fp, #-16]
   19a98:	mul	r0, r0, r1
   19a9c:	sxth	r0, r0
   19aa0:	str	r0, [fp, #-20]	; 0xffffffec
   19aa4:	b	1a818 <__assert_fail@plt+0x980c>
   19aa8:	ldr	r0, [fp, #-12]
   19aac:	ldr	r1, [fp, #-16]
   19ab0:	mul	r0, r0, r1
   19ab4:	sxth	r0, r0
   19ab8:	str	r0, [fp, #-20]	; 0xffffffec
   19abc:	b	1a830 <__assert_fail@plt+0x9824>
   19ac0:	ldr	r0, [fp, #-16]
   19ac4:	cmp	r0, #0
   19ac8:	bcs	19bd4 <__assert_fail@plt+0x8bc8>
   19acc:	ldr	r0, [fp, #-12]
   19ad0:	cmp	r0, #0
   19ad4:	bcs	19b5c <__assert_fail@plt+0x8b50>
   19ad8:	b	19af8 <__assert_fail@plt+0x8aec>
   19adc:	ldr	r0, [fp, #-12]
   19ae0:	ldr	r1, [fp, #-16]
   19ae4:	movw	r2, #65535	; 0xffff
   19ae8:	udiv	r1, r2, r1
   19aec:	cmp	r0, r1
   19af0:	bcc	19c70 <__assert_fail@plt+0x8c64>
   19af4:	b	19c88 <__assert_fail@plt+0x8c7c>
   19af8:	b	19b0c <__assert_fail@plt+0x8b00>
   19afc:	ldr	r0, [fp, #-16]
   19b00:	cmp	r0, #1
   19b04:	bcc	19b1c <__assert_fail@plt+0x8b10>
   19b08:	b	19b28 <__assert_fail@plt+0x8b1c>
   19b0c:	ldr	r0, [fp, #-16]
   19b10:	movw	r1, #0
   19b14:	cmp	r1, r0
   19b18:	bcs	19b28 <__assert_fail@plt+0x8b1c>
   19b1c:	movw	r0, #0
   19b20:	str	r0, [fp, #-36]	; 0xffffffdc
   19b24:	b	19b40 <__assert_fail@plt+0x8b34>
   19b28:	ldr	r0, [fp, #-16]
   19b2c:	movw	r1, #0
   19b30:	sub	r0, r1, r0
   19b34:	movw	r1, #65535	; 0xffff
   19b38:	udiv	r0, r1, r0
   19b3c:	str	r0, [fp, #-36]	; 0xffffffdc
   19b40:	ldr	r0, [fp, #-36]	; 0xffffffdc
   19b44:	ldr	r1, [fp, #-12]
   19b48:	mvn	r2, #0
   19b4c:	sub	r1, r2, r1
   19b50:	cmp	r0, r1
   19b54:	bls	19c70 <__assert_fail@plt+0x8c64>
   19b58:	b	19c88 <__assert_fail@plt+0x8c7c>
   19b5c:	b	19b64 <__assert_fail@plt+0x8b58>
   19b60:	b	19b68 <__assert_fail@plt+0x8b5c>
   19b64:	b	19bb8 <__assert_fail@plt+0x8bac>
   19b68:	ldr	r0, [fp, #-16]
   19b6c:	cmn	r0, #1
   19b70:	bne	19bb8 <__assert_fail@plt+0x8bac>
   19b74:	b	19b90 <__assert_fail@plt+0x8b84>
   19b78:	ldr	r0, [fp, #-12]
   19b7c:	add	r0, r0, #0
   19b80:	movw	r1, #0
   19b84:	cmp	r1, r0
   19b88:	bcc	19c70 <__assert_fail@plt+0x8c64>
   19b8c:	b	19c88 <__assert_fail@plt+0x8c7c>
   19b90:	ldr	r0, [fp, #-12]
   19b94:	movw	r1, #0
   19b98:	cmp	r1, r0
   19b9c:	bcs	19c88 <__assert_fail@plt+0x8c7c>
   19ba0:	ldr	r0, [fp, #-12]
   19ba4:	sub	r0, r0, #1
   19ba8:	mvn	r1, #0
   19bac:	cmp	r1, r0
   19bb0:	bcc	19c70 <__assert_fail@plt+0x8c64>
   19bb4:	b	19c88 <__assert_fail@plt+0x8c7c>
   19bb8:	ldr	r0, [fp, #-16]
   19bbc:	movw	r1, #0
   19bc0:	udiv	r0, r1, r0
   19bc4:	ldr	r1, [fp, #-12]
   19bc8:	cmp	r0, r1
   19bcc:	bcc	19c70 <__assert_fail@plt+0x8c64>
   19bd0:	b	19c88 <__assert_fail@plt+0x8c7c>
   19bd4:	ldr	r0, [fp, #-16]
   19bd8:	cmp	r0, #0
   19bdc:	bne	19be4 <__assert_fail@plt+0x8bd8>
   19be0:	b	19c88 <__assert_fail@plt+0x8c7c>
   19be4:	ldr	r0, [fp, #-12]
   19be8:	cmp	r0, #0
   19bec:	bcs	19c58 <__assert_fail@plt+0x8c4c>
   19bf0:	b	19bf8 <__assert_fail@plt+0x8bec>
   19bf4:	b	19bfc <__assert_fail@plt+0x8bf0>
   19bf8:	b	19c3c <__assert_fail@plt+0x8c30>
   19bfc:	ldr	r0, [fp, #-12]
   19c00:	cmn	r0, #1
   19c04:	bne	19c3c <__assert_fail@plt+0x8c30>
   19c08:	b	19c24 <__assert_fail@plt+0x8c18>
   19c0c:	ldr	r0, [fp, #-16]
   19c10:	add	r0, r0, #0
   19c14:	movw	r1, #0
   19c18:	cmp	r1, r0
   19c1c:	bcc	19c70 <__assert_fail@plt+0x8c64>
   19c20:	b	19c88 <__assert_fail@plt+0x8c7c>
   19c24:	ldr	r0, [fp, #-16]
   19c28:	sub	r0, r0, #1
   19c2c:	mvn	r1, #0
   19c30:	cmp	r1, r0
   19c34:	bcc	19c70 <__assert_fail@plt+0x8c64>
   19c38:	b	19c88 <__assert_fail@plt+0x8c7c>
   19c3c:	ldr	r0, [fp, #-12]
   19c40:	movw	r1, #0
   19c44:	udiv	r0, r1, r0
   19c48:	ldr	r1, [fp, #-16]
   19c4c:	cmp	r0, r1
   19c50:	bcc	19c70 <__assert_fail@plt+0x8c64>
   19c54:	b	19c88 <__assert_fail@plt+0x8c7c>
   19c58:	ldr	r0, [fp, #-16]
   19c5c:	movw	r1, #65535	; 0xffff
   19c60:	udiv	r0, r1, r0
   19c64:	ldr	r1, [fp, #-12]
   19c68:	cmp	r0, r1
   19c6c:	bcs	19c88 <__assert_fail@plt+0x8c7c>
   19c70:	ldr	r0, [fp, #-12]
   19c74:	ldr	r1, [fp, #-16]
   19c78:	mul	r0, r0, r1
   19c7c:	uxth	r0, r0
   19c80:	str	r0, [fp, #-20]	; 0xffffffec
   19c84:	b	1a818 <__assert_fail@plt+0x980c>
   19c88:	ldr	r0, [fp, #-12]
   19c8c:	ldr	r1, [fp, #-16]
   19c90:	mul	r0, r0, r1
   19c94:	uxth	r0, r0
   19c98:	str	r0, [fp, #-20]	; 0xffffffec
   19c9c:	b	1a830 <__assert_fail@plt+0x9824>
   19ca0:	b	19ca4 <__assert_fail@plt+0x8c98>
   19ca4:	b	19e68 <__assert_fail@plt+0x8e5c>
   19ca8:	ldr	r0, [fp, #-16]
   19cac:	cmp	r0, #0
   19cb0:	bcs	19db0 <__assert_fail@plt+0x8da4>
   19cb4:	ldr	r0, [fp, #-12]
   19cb8:	cmp	r0, #0
   19cbc:	bcs	19d44 <__assert_fail@plt+0x8d38>
   19cc0:	b	19ce0 <__assert_fail@plt+0x8cd4>
   19cc4:	ldr	r0, [pc, #2944]	; 1a84c <__assert_fail@plt+0x9840>
   19cc8:	ldr	r1, [fp, #-12]
   19ccc:	ldr	r2, [fp, #-16]
   19cd0:	udiv	r0, r0, r2
   19cd4:	cmp	r1, r0
   19cd8:	bcc	19e40 <__assert_fail@plt+0x8e34>
   19cdc:	b	19e54 <__assert_fail@plt+0x8e48>
   19ce0:	b	19cf4 <__assert_fail@plt+0x8ce8>
   19ce4:	ldr	r0, [fp, #-16]
   19ce8:	cmp	r0, #1
   19cec:	bcc	19d04 <__assert_fail@plt+0x8cf8>
   19cf0:	b	19d10 <__assert_fail@plt+0x8d04>
   19cf4:	ldr	r0, [fp, #-16]
   19cf8:	movw	r1, #0
   19cfc:	cmp	r1, r0
   19d00:	bcs	19d10 <__assert_fail@plt+0x8d04>
   19d04:	movw	r0, #0
   19d08:	str	r0, [fp, #-40]	; 0xffffffd8
   19d0c:	b	19d28 <__assert_fail@plt+0x8d1c>
   19d10:	ldr	r0, [pc, #2868]	; 1a84c <__assert_fail@plt+0x9840>
   19d14:	ldr	r1, [fp, #-16]
   19d18:	movw	r2, #0
   19d1c:	sub	r1, r2, r1
   19d20:	udiv	r0, r0, r1
   19d24:	str	r0, [fp, #-40]	; 0xffffffd8
   19d28:	ldr	r0, [fp, #-40]	; 0xffffffd8
   19d2c:	ldr	r1, [fp, #-12]
   19d30:	mvn	r2, #0
   19d34:	sub	r1, r2, r1
   19d38:	cmp	r0, r1
   19d3c:	bls	19e40 <__assert_fail@plt+0x8e34>
   19d40:	b	19e54 <__assert_fail@plt+0x8e48>
   19d44:	ldr	r0, [fp, #-16]
   19d48:	cmn	r0, #1
   19d4c:	bne	19d94 <__assert_fail@plt+0x8d88>
   19d50:	b	19d6c <__assert_fail@plt+0x8d60>
   19d54:	ldr	r0, [fp, #-12]
   19d58:	add	r0, r0, #-2147483648	; 0x80000000
   19d5c:	movw	r1, #0
   19d60:	cmp	r1, r0
   19d64:	bcc	19e40 <__assert_fail@plt+0x8e34>
   19d68:	b	19e54 <__assert_fail@plt+0x8e48>
   19d6c:	ldr	r0, [fp, #-12]
   19d70:	movw	r1, #0
   19d74:	cmp	r1, r0
   19d78:	bcs	19e54 <__assert_fail@plt+0x8e48>
   19d7c:	ldr	r0, [pc, #2760]	; 1a84c <__assert_fail@plt+0x9840>
   19d80:	ldr	r1, [fp, #-12]
   19d84:	sub	r1, r1, #1
   19d88:	cmp	r0, r1
   19d8c:	bcc	19e40 <__assert_fail@plt+0x8e34>
   19d90:	b	19e54 <__assert_fail@plt+0x8e48>
   19d94:	ldr	r0, [pc, #2740]	; 1a850 <__assert_fail@plt+0x9844>
   19d98:	ldr	r1, [fp, #-16]
   19d9c:	udiv	r0, r0, r1
   19da0:	ldr	r1, [fp, #-12]
   19da4:	cmp	r0, r1
   19da8:	bcc	19e40 <__assert_fail@plt+0x8e34>
   19dac:	b	19e54 <__assert_fail@plt+0x8e48>
   19db0:	ldr	r0, [fp, #-16]
   19db4:	cmp	r0, #0
   19db8:	bne	19dc0 <__assert_fail@plt+0x8db4>
   19dbc:	b	19e54 <__assert_fail@plt+0x8e48>
   19dc0:	ldr	r0, [fp, #-12]
   19dc4:	cmp	r0, #0
   19dc8:	bcs	19e28 <__assert_fail@plt+0x8e1c>
   19dcc:	ldr	r0, [fp, #-12]
   19dd0:	cmn	r0, #1
   19dd4:	bne	19e0c <__assert_fail@plt+0x8e00>
   19dd8:	b	19df4 <__assert_fail@plt+0x8de8>
   19ddc:	ldr	r0, [fp, #-16]
   19de0:	add	r0, r0, #-2147483648	; 0x80000000
   19de4:	movw	r1, #0
   19de8:	cmp	r1, r0
   19dec:	bcc	19e40 <__assert_fail@plt+0x8e34>
   19df0:	b	19e54 <__assert_fail@plt+0x8e48>
   19df4:	ldr	r0, [pc, #2640]	; 1a84c <__assert_fail@plt+0x9840>
   19df8:	ldr	r1, [fp, #-16]
   19dfc:	sub	r1, r1, #1
   19e00:	cmp	r0, r1
   19e04:	bcc	19e40 <__assert_fail@plt+0x8e34>
   19e08:	b	19e54 <__assert_fail@plt+0x8e48>
   19e0c:	ldr	r0, [pc, #2620]	; 1a850 <__assert_fail@plt+0x9844>
   19e10:	ldr	r1, [fp, #-12]
   19e14:	udiv	r0, r0, r1
   19e18:	ldr	r1, [fp, #-16]
   19e1c:	cmp	r0, r1
   19e20:	bcc	19e40 <__assert_fail@plt+0x8e34>
   19e24:	b	19e54 <__assert_fail@plt+0x8e48>
   19e28:	ldr	r0, [pc, #2588]	; 1a84c <__assert_fail@plt+0x9840>
   19e2c:	ldr	r1, [fp, #-16]
   19e30:	udiv	r0, r0, r1
   19e34:	ldr	r1, [fp, #-12]
   19e38:	cmp	r0, r1
   19e3c:	bcs	19e54 <__assert_fail@plt+0x8e48>
   19e40:	ldr	r0, [fp, #-12]
   19e44:	ldr	r1, [fp, #-16]
   19e48:	mul	r0, r0, r1
   19e4c:	str	r0, [fp, #-20]	; 0xffffffec
   19e50:	b	1a818 <__assert_fail@plt+0x980c>
   19e54:	ldr	r0, [fp, #-12]
   19e58:	ldr	r1, [fp, #-16]
   19e5c:	mul	r0, r0, r1
   19e60:	str	r0, [fp, #-20]	; 0xffffffec
   19e64:	b	1a830 <__assert_fail@plt+0x9824>
   19e68:	ldr	r0, [fp, #-16]
   19e6c:	cmp	r0, #0
   19e70:	bcs	19f7c <__assert_fail@plt+0x8f70>
   19e74:	ldr	r0, [fp, #-12]
   19e78:	cmp	r0, #0
   19e7c:	bcs	19f04 <__assert_fail@plt+0x8ef8>
   19e80:	b	19ea0 <__assert_fail@plt+0x8e94>
   19e84:	ldr	r0, [fp, #-12]
   19e88:	ldr	r1, [fp, #-16]
   19e8c:	mvn	r2, #0
   19e90:	udiv	r1, r2, r1
   19e94:	cmp	r0, r1
   19e98:	bcc	1a018 <__assert_fail@plt+0x900c>
   19e9c:	b	1a02c <__assert_fail@plt+0x9020>
   19ea0:	b	19eb4 <__assert_fail@plt+0x8ea8>
   19ea4:	ldr	r0, [fp, #-16]
   19ea8:	cmp	r0, #1
   19eac:	bcc	19ec4 <__assert_fail@plt+0x8eb8>
   19eb0:	b	19ed0 <__assert_fail@plt+0x8ec4>
   19eb4:	ldr	r0, [fp, #-16]
   19eb8:	movw	r1, #0
   19ebc:	cmp	r1, r0
   19ec0:	bcs	19ed0 <__assert_fail@plt+0x8ec4>
   19ec4:	movw	r0, #1
   19ec8:	str	r0, [fp, #-44]	; 0xffffffd4
   19ecc:	b	19ee8 <__assert_fail@plt+0x8edc>
   19ed0:	ldr	r0, [fp, #-16]
   19ed4:	movw	r1, #0
   19ed8:	sub	r0, r1, r0
   19edc:	mvn	r1, #0
   19ee0:	udiv	r0, r1, r0
   19ee4:	str	r0, [fp, #-44]	; 0xffffffd4
   19ee8:	ldr	r0, [fp, #-44]	; 0xffffffd4
   19eec:	ldr	r1, [fp, #-12]
   19ef0:	mvn	r2, #0
   19ef4:	sub	r1, r2, r1
   19ef8:	cmp	r0, r1
   19efc:	bls	1a018 <__assert_fail@plt+0x900c>
   19f00:	b	1a02c <__assert_fail@plt+0x9020>
   19f04:	b	19f0c <__assert_fail@plt+0x8f00>
   19f08:	b	19f10 <__assert_fail@plt+0x8f04>
   19f0c:	b	19f60 <__assert_fail@plt+0x8f54>
   19f10:	ldr	r0, [fp, #-16]
   19f14:	cmn	r0, #1
   19f18:	bne	19f60 <__assert_fail@plt+0x8f54>
   19f1c:	b	19f38 <__assert_fail@plt+0x8f2c>
   19f20:	ldr	r0, [fp, #-12]
   19f24:	add	r0, r0, #0
   19f28:	movw	r1, #0
   19f2c:	cmp	r1, r0
   19f30:	bcc	1a018 <__assert_fail@plt+0x900c>
   19f34:	b	1a02c <__assert_fail@plt+0x9020>
   19f38:	ldr	r0, [fp, #-12]
   19f3c:	movw	r1, #0
   19f40:	cmp	r1, r0
   19f44:	bcs	1a02c <__assert_fail@plt+0x9020>
   19f48:	ldr	r0, [fp, #-12]
   19f4c:	sub	r0, r0, #1
   19f50:	mvn	r1, #0
   19f54:	cmp	r1, r0
   19f58:	bcc	1a018 <__assert_fail@plt+0x900c>
   19f5c:	b	1a02c <__assert_fail@plt+0x9020>
   19f60:	ldr	r0, [fp, #-16]
   19f64:	movw	r1, #0
   19f68:	udiv	r0, r1, r0
   19f6c:	ldr	r1, [fp, #-12]
   19f70:	cmp	r0, r1
   19f74:	bcc	1a018 <__assert_fail@plt+0x900c>
   19f78:	b	1a02c <__assert_fail@plt+0x9020>
   19f7c:	ldr	r0, [fp, #-16]
   19f80:	cmp	r0, #0
   19f84:	bne	19f8c <__assert_fail@plt+0x8f80>
   19f88:	b	1a02c <__assert_fail@plt+0x9020>
   19f8c:	ldr	r0, [fp, #-12]
   19f90:	cmp	r0, #0
   19f94:	bcs	1a000 <__assert_fail@plt+0x8ff4>
   19f98:	b	19fa0 <__assert_fail@plt+0x8f94>
   19f9c:	b	19fa4 <__assert_fail@plt+0x8f98>
   19fa0:	b	19fe4 <__assert_fail@plt+0x8fd8>
   19fa4:	ldr	r0, [fp, #-12]
   19fa8:	cmn	r0, #1
   19fac:	bne	19fe4 <__assert_fail@plt+0x8fd8>
   19fb0:	b	19fcc <__assert_fail@plt+0x8fc0>
   19fb4:	ldr	r0, [fp, #-16]
   19fb8:	add	r0, r0, #0
   19fbc:	movw	r1, #0
   19fc0:	cmp	r1, r0
   19fc4:	bcc	1a018 <__assert_fail@plt+0x900c>
   19fc8:	b	1a02c <__assert_fail@plt+0x9020>
   19fcc:	ldr	r0, [fp, #-16]
   19fd0:	sub	r0, r0, #1
   19fd4:	mvn	r1, #0
   19fd8:	cmp	r1, r0
   19fdc:	bcc	1a018 <__assert_fail@plt+0x900c>
   19fe0:	b	1a02c <__assert_fail@plt+0x9020>
   19fe4:	ldr	r0, [fp, #-12]
   19fe8:	movw	r1, #0
   19fec:	udiv	r0, r1, r0
   19ff0:	ldr	r1, [fp, #-16]
   19ff4:	cmp	r0, r1
   19ff8:	bcc	1a018 <__assert_fail@plt+0x900c>
   19ffc:	b	1a02c <__assert_fail@plt+0x9020>
   1a000:	ldr	r0, [fp, #-16]
   1a004:	mvn	r1, #0
   1a008:	udiv	r0, r1, r0
   1a00c:	ldr	r1, [fp, #-12]
   1a010:	cmp	r0, r1
   1a014:	bcs	1a02c <__assert_fail@plt+0x9020>
   1a018:	ldr	r0, [fp, #-12]
   1a01c:	ldr	r1, [fp, #-16]
   1a020:	mul	r0, r0, r1
   1a024:	str	r0, [fp, #-20]	; 0xffffffec
   1a028:	b	1a818 <__assert_fail@plt+0x980c>
   1a02c:	ldr	r0, [fp, #-12]
   1a030:	ldr	r1, [fp, #-16]
   1a034:	mul	r0, r0, r1
   1a038:	str	r0, [fp, #-20]	; 0xffffffec
   1a03c:	b	1a830 <__assert_fail@plt+0x9824>
   1a040:	b	1a044 <__assert_fail@plt+0x9038>
   1a044:	b	1a208 <__assert_fail@plt+0x91fc>
   1a048:	ldr	r0, [fp, #-16]
   1a04c:	cmp	r0, #0
   1a050:	bcs	1a150 <__assert_fail@plt+0x9144>
   1a054:	ldr	r0, [fp, #-12]
   1a058:	cmp	r0, #0
   1a05c:	bcs	1a0e4 <__assert_fail@plt+0x90d8>
   1a060:	b	1a080 <__assert_fail@plt+0x9074>
   1a064:	ldr	r0, [pc, #2016]	; 1a84c <__assert_fail@plt+0x9840>
   1a068:	ldr	r1, [fp, #-12]
   1a06c:	ldr	r2, [fp, #-16]
   1a070:	udiv	r0, r0, r2
   1a074:	cmp	r1, r0
   1a078:	bcc	1a1e0 <__assert_fail@plt+0x91d4>
   1a07c:	b	1a1f4 <__assert_fail@plt+0x91e8>
   1a080:	b	1a094 <__assert_fail@plt+0x9088>
   1a084:	ldr	r0, [fp, #-16]
   1a088:	cmp	r0, #1
   1a08c:	bcc	1a0a4 <__assert_fail@plt+0x9098>
   1a090:	b	1a0b0 <__assert_fail@plt+0x90a4>
   1a094:	ldr	r0, [fp, #-16]
   1a098:	movw	r1, #0
   1a09c:	cmp	r1, r0
   1a0a0:	bcs	1a0b0 <__assert_fail@plt+0x90a4>
   1a0a4:	movw	r0, #0
   1a0a8:	str	r0, [sp, #48]	; 0x30
   1a0ac:	b	1a0c8 <__assert_fail@plt+0x90bc>
   1a0b0:	ldr	r0, [pc, #1940]	; 1a84c <__assert_fail@plt+0x9840>
   1a0b4:	ldr	r1, [fp, #-16]
   1a0b8:	movw	r2, #0
   1a0bc:	sub	r1, r2, r1
   1a0c0:	udiv	r0, r0, r1
   1a0c4:	str	r0, [sp, #48]	; 0x30
   1a0c8:	ldr	r0, [sp, #48]	; 0x30
   1a0cc:	ldr	r1, [fp, #-12]
   1a0d0:	mvn	r2, #0
   1a0d4:	sub	r1, r2, r1
   1a0d8:	cmp	r0, r1
   1a0dc:	bls	1a1e0 <__assert_fail@plt+0x91d4>
   1a0e0:	b	1a1f4 <__assert_fail@plt+0x91e8>
   1a0e4:	ldr	r0, [fp, #-16]
   1a0e8:	cmn	r0, #1
   1a0ec:	bne	1a134 <__assert_fail@plt+0x9128>
   1a0f0:	b	1a10c <__assert_fail@plt+0x9100>
   1a0f4:	ldr	r0, [fp, #-12]
   1a0f8:	add	r0, r0, #-2147483648	; 0x80000000
   1a0fc:	movw	r1, #0
   1a100:	cmp	r1, r0
   1a104:	bcc	1a1e0 <__assert_fail@plt+0x91d4>
   1a108:	b	1a1f4 <__assert_fail@plt+0x91e8>
   1a10c:	ldr	r0, [fp, #-12]
   1a110:	movw	r1, #0
   1a114:	cmp	r1, r0
   1a118:	bcs	1a1f4 <__assert_fail@plt+0x91e8>
   1a11c:	ldr	r0, [pc, #1832]	; 1a84c <__assert_fail@plt+0x9840>
   1a120:	ldr	r1, [fp, #-12]
   1a124:	sub	r1, r1, #1
   1a128:	cmp	r0, r1
   1a12c:	bcc	1a1e0 <__assert_fail@plt+0x91d4>
   1a130:	b	1a1f4 <__assert_fail@plt+0x91e8>
   1a134:	ldr	r0, [pc, #1812]	; 1a850 <__assert_fail@plt+0x9844>
   1a138:	ldr	r1, [fp, #-16]
   1a13c:	udiv	r0, r0, r1
   1a140:	ldr	r1, [fp, #-12]
   1a144:	cmp	r0, r1
   1a148:	bcc	1a1e0 <__assert_fail@plt+0x91d4>
   1a14c:	b	1a1f4 <__assert_fail@plt+0x91e8>
   1a150:	ldr	r0, [fp, #-16]
   1a154:	cmp	r0, #0
   1a158:	bne	1a160 <__assert_fail@plt+0x9154>
   1a15c:	b	1a1f4 <__assert_fail@plt+0x91e8>
   1a160:	ldr	r0, [fp, #-12]
   1a164:	cmp	r0, #0
   1a168:	bcs	1a1c8 <__assert_fail@plt+0x91bc>
   1a16c:	ldr	r0, [fp, #-12]
   1a170:	cmn	r0, #1
   1a174:	bne	1a1ac <__assert_fail@plt+0x91a0>
   1a178:	b	1a194 <__assert_fail@plt+0x9188>
   1a17c:	ldr	r0, [fp, #-16]
   1a180:	add	r0, r0, #-2147483648	; 0x80000000
   1a184:	movw	r1, #0
   1a188:	cmp	r1, r0
   1a18c:	bcc	1a1e0 <__assert_fail@plt+0x91d4>
   1a190:	b	1a1f4 <__assert_fail@plt+0x91e8>
   1a194:	ldr	r0, [pc, #1712]	; 1a84c <__assert_fail@plt+0x9840>
   1a198:	ldr	r1, [fp, #-16]
   1a19c:	sub	r1, r1, #1
   1a1a0:	cmp	r0, r1
   1a1a4:	bcc	1a1e0 <__assert_fail@plt+0x91d4>
   1a1a8:	b	1a1f4 <__assert_fail@plt+0x91e8>
   1a1ac:	ldr	r0, [pc, #1692]	; 1a850 <__assert_fail@plt+0x9844>
   1a1b0:	ldr	r1, [fp, #-12]
   1a1b4:	udiv	r0, r0, r1
   1a1b8:	ldr	r1, [fp, #-16]
   1a1bc:	cmp	r0, r1
   1a1c0:	bcc	1a1e0 <__assert_fail@plt+0x91d4>
   1a1c4:	b	1a1f4 <__assert_fail@plt+0x91e8>
   1a1c8:	ldr	r0, [pc, #1660]	; 1a84c <__assert_fail@plt+0x9840>
   1a1cc:	ldr	r1, [fp, #-16]
   1a1d0:	udiv	r0, r0, r1
   1a1d4:	ldr	r1, [fp, #-12]
   1a1d8:	cmp	r0, r1
   1a1dc:	bcs	1a1f4 <__assert_fail@plt+0x91e8>
   1a1e0:	ldr	r0, [fp, #-12]
   1a1e4:	ldr	r1, [fp, #-16]
   1a1e8:	mul	r0, r0, r1
   1a1ec:	str	r0, [fp, #-20]	; 0xffffffec
   1a1f0:	b	1a818 <__assert_fail@plt+0x980c>
   1a1f4:	ldr	r0, [fp, #-12]
   1a1f8:	ldr	r1, [fp, #-16]
   1a1fc:	mul	r0, r0, r1
   1a200:	str	r0, [fp, #-20]	; 0xffffffec
   1a204:	b	1a830 <__assert_fail@plt+0x9824>
   1a208:	ldr	r0, [fp, #-16]
   1a20c:	cmp	r0, #0
   1a210:	bcs	1a31c <__assert_fail@plt+0x9310>
   1a214:	ldr	r0, [fp, #-12]
   1a218:	cmp	r0, #0
   1a21c:	bcs	1a2a4 <__assert_fail@plt+0x9298>
   1a220:	b	1a240 <__assert_fail@plt+0x9234>
   1a224:	ldr	r0, [fp, #-12]
   1a228:	ldr	r1, [fp, #-16]
   1a22c:	mvn	r2, #0
   1a230:	udiv	r1, r2, r1
   1a234:	cmp	r0, r1
   1a238:	bcc	1a3b8 <__assert_fail@plt+0x93ac>
   1a23c:	b	1a3cc <__assert_fail@plt+0x93c0>
   1a240:	b	1a254 <__assert_fail@plt+0x9248>
   1a244:	ldr	r0, [fp, #-16]
   1a248:	cmp	r0, #1
   1a24c:	bcc	1a264 <__assert_fail@plt+0x9258>
   1a250:	b	1a270 <__assert_fail@plt+0x9264>
   1a254:	ldr	r0, [fp, #-16]
   1a258:	movw	r1, #0
   1a25c:	cmp	r1, r0
   1a260:	bcs	1a270 <__assert_fail@plt+0x9264>
   1a264:	movw	r0, #1
   1a268:	str	r0, [sp, #44]	; 0x2c
   1a26c:	b	1a288 <__assert_fail@plt+0x927c>
   1a270:	ldr	r0, [fp, #-16]
   1a274:	movw	r1, #0
   1a278:	sub	r0, r1, r0
   1a27c:	mvn	r1, #0
   1a280:	udiv	r0, r1, r0
   1a284:	str	r0, [sp, #44]	; 0x2c
   1a288:	ldr	r0, [sp, #44]	; 0x2c
   1a28c:	ldr	r1, [fp, #-12]
   1a290:	mvn	r2, #0
   1a294:	sub	r1, r2, r1
   1a298:	cmp	r0, r1
   1a29c:	bls	1a3b8 <__assert_fail@plt+0x93ac>
   1a2a0:	b	1a3cc <__assert_fail@plt+0x93c0>
   1a2a4:	b	1a2ac <__assert_fail@plt+0x92a0>
   1a2a8:	b	1a2b0 <__assert_fail@plt+0x92a4>
   1a2ac:	b	1a300 <__assert_fail@plt+0x92f4>
   1a2b0:	ldr	r0, [fp, #-16]
   1a2b4:	cmn	r0, #1
   1a2b8:	bne	1a300 <__assert_fail@plt+0x92f4>
   1a2bc:	b	1a2d8 <__assert_fail@plt+0x92cc>
   1a2c0:	ldr	r0, [fp, #-12]
   1a2c4:	add	r0, r0, #0
   1a2c8:	movw	r1, #0
   1a2cc:	cmp	r1, r0
   1a2d0:	bcc	1a3b8 <__assert_fail@plt+0x93ac>
   1a2d4:	b	1a3cc <__assert_fail@plt+0x93c0>
   1a2d8:	ldr	r0, [fp, #-12]
   1a2dc:	movw	r1, #0
   1a2e0:	cmp	r1, r0
   1a2e4:	bcs	1a3cc <__assert_fail@plt+0x93c0>
   1a2e8:	ldr	r0, [fp, #-12]
   1a2ec:	sub	r0, r0, #1
   1a2f0:	mvn	r1, #0
   1a2f4:	cmp	r1, r0
   1a2f8:	bcc	1a3b8 <__assert_fail@plt+0x93ac>
   1a2fc:	b	1a3cc <__assert_fail@plt+0x93c0>
   1a300:	ldr	r0, [fp, #-16]
   1a304:	movw	r1, #0
   1a308:	udiv	r0, r1, r0
   1a30c:	ldr	r1, [fp, #-12]
   1a310:	cmp	r0, r1
   1a314:	bcc	1a3b8 <__assert_fail@plt+0x93ac>
   1a318:	b	1a3cc <__assert_fail@plt+0x93c0>
   1a31c:	ldr	r0, [fp, #-16]
   1a320:	cmp	r0, #0
   1a324:	bne	1a32c <__assert_fail@plt+0x9320>
   1a328:	b	1a3cc <__assert_fail@plt+0x93c0>
   1a32c:	ldr	r0, [fp, #-12]
   1a330:	cmp	r0, #0
   1a334:	bcs	1a3a0 <__assert_fail@plt+0x9394>
   1a338:	b	1a340 <__assert_fail@plt+0x9334>
   1a33c:	b	1a344 <__assert_fail@plt+0x9338>
   1a340:	b	1a384 <__assert_fail@plt+0x9378>
   1a344:	ldr	r0, [fp, #-12]
   1a348:	cmn	r0, #1
   1a34c:	bne	1a384 <__assert_fail@plt+0x9378>
   1a350:	b	1a36c <__assert_fail@plt+0x9360>
   1a354:	ldr	r0, [fp, #-16]
   1a358:	add	r0, r0, #0
   1a35c:	movw	r1, #0
   1a360:	cmp	r1, r0
   1a364:	bcc	1a3b8 <__assert_fail@plt+0x93ac>
   1a368:	b	1a3cc <__assert_fail@plt+0x93c0>
   1a36c:	ldr	r0, [fp, #-16]
   1a370:	sub	r0, r0, #1
   1a374:	mvn	r1, #0
   1a378:	cmp	r1, r0
   1a37c:	bcc	1a3b8 <__assert_fail@plt+0x93ac>
   1a380:	b	1a3cc <__assert_fail@plt+0x93c0>
   1a384:	ldr	r0, [fp, #-12]
   1a388:	movw	r1, #0
   1a38c:	udiv	r0, r1, r0
   1a390:	ldr	r1, [fp, #-16]
   1a394:	cmp	r0, r1
   1a398:	bcc	1a3b8 <__assert_fail@plt+0x93ac>
   1a39c:	b	1a3cc <__assert_fail@plt+0x93c0>
   1a3a0:	ldr	r0, [fp, #-16]
   1a3a4:	mvn	r1, #0
   1a3a8:	udiv	r0, r1, r0
   1a3ac:	ldr	r1, [fp, #-12]
   1a3b0:	cmp	r0, r1
   1a3b4:	bcs	1a3cc <__assert_fail@plt+0x93c0>
   1a3b8:	ldr	r0, [fp, #-12]
   1a3bc:	ldr	r1, [fp, #-16]
   1a3c0:	mul	r0, r0, r1
   1a3c4:	str	r0, [fp, #-20]	; 0xffffffec
   1a3c8:	b	1a818 <__assert_fail@plt+0x980c>
   1a3cc:	ldr	r0, [fp, #-12]
   1a3d0:	ldr	r1, [fp, #-16]
   1a3d4:	mul	r0, r0, r1
   1a3d8:	str	r0, [fp, #-20]	; 0xffffffec
   1a3dc:	b	1a830 <__assert_fail@plt+0x9824>
   1a3e0:	b	1a5fc <__assert_fail@plt+0x95f0>
   1a3e4:	ldr	r0, [fp, #-16]
   1a3e8:	cmp	r0, #0
   1a3ec:	bcs	1a52c <__assert_fail@plt+0x9520>
   1a3f0:	ldr	r0, [fp, #-12]
   1a3f4:	cmp	r0, #0
   1a3f8:	bcs	1a4b8 <__assert_fail@plt+0x94ac>
   1a3fc:	b	1a400 <__assert_fail@plt+0x93f4>
   1a400:	ldr	r0, [fp, #-12]
   1a404:	ldr	r2, [fp, #-16]
   1a408:	mvn	r1, #0
   1a40c:	mvn	r3, #-2147483648	; 0x80000000
   1a410:	mov	ip, #0
   1a414:	str	r0, [sp, #40]	; 0x28
   1a418:	mov	r0, r1
   1a41c:	mov	r1, r3
   1a420:	mov	r3, ip
   1a424:	bl	1b164 <__assert_fail@plt+0xa158>
   1a428:	ldr	r2, [sp, #40]	; 0x28
   1a42c:	subs	r0, r2, r0
   1a430:	rscs	r1, r1, #0
   1a434:	blt	1a5d4 <__assert_fail@plt+0x95c8>
   1a438:	b	1a5e8 <__assert_fail@plt+0x95dc>
   1a43c:	b	1a450 <__assert_fail@plt+0x9444>
   1a440:	ldr	r0, [fp, #-16]
   1a444:	cmp	r0, #1
   1a448:	bcc	1a460 <__assert_fail@plt+0x9454>
   1a44c:	b	1a474 <__assert_fail@plt+0x9468>
   1a450:	ldr	r0, [fp, #-16]
   1a454:	movw	r1, #0
   1a458:	cmp	r1, r0
   1a45c:	bcs	1a474 <__assert_fail@plt+0x9468>
   1a460:	mov	r0, #0
   1a464:	mvn	r1, #0
   1a468:	str	r1, [sp, #36]	; 0x24
   1a46c:	str	r0, [sp, #32]
   1a470:	b	1a498 <__assert_fail@plt+0x948c>
   1a474:	ldr	r0, [fp, #-16]
   1a478:	rsb	r2, r0, #0
   1a47c:	mvn	r0, #0
   1a480:	mvn	r1, #-2147483648	; 0x80000000
   1a484:	mov	r3, #0
   1a488:	bl	1b164 <__assert_fail@plt+0xa158>
   1a48c:	str	r0, [sp, #36]	; 0x24
   1a490:	str	r1, [sp, #32]
   1a494:	b	1a498 <__assert_fail@plt+0x948c>
   1a498:	ldr	r0, [sp, #32]
   1a49c:	ldr	r1, [sp, #36]	; 0x24
   1a4a0:	ldr	r2, [fp, #-12]
   1a4a4:	mvn	r2, r2
   1a4a8:	subs	r1, r2, r1
   1a4ac:	rscs	r0, r0, #0
   1a4b0:	bge	1a5d4 <__assert_fail@plt+0x95c8>
   1a4b4:	b	1a5e8 <__assert_fail@plt+0x95dc>
   1a4b8:	ldr	r0, [fp, #-16]
   1a4bc:	cmn	r0, #1
   1a4c0:	bne	1a500 <__assert_fail@plt+0x94f4>
   1a4c4:	b	1a4e0 <__assert_fail@plt+0x94d4>
   1a4c8:	ldr	r0, [fp, #-12]
   1a4cc:	rsbs	r0, r0, #0
   1a4d0:	mov	r1, #0
   1a4d4:	sbcs	r1, r1, #-2147483648	; 0x80000000
   1a4d8:	blt	1a5d4 <__assert_fail@plt+0x95c8>
   1a4dc:	b	1a5e8 <__assert_fail@plt+0x95dc>
   1a4e0:	ldr	r0, [fp, #-12]
   1a4e4:	movw	r1, #0
   1a4e8:	cmp	r1, r0
   1a4ec:	bcs	1a5e8 <__assert_fail@plt+0x95dc>
   1a4f0:	mov	r0, #0
   1a4f4:	cmp	r0, #0
   1a4f8:	bne	1a5d4 <__assert_fail@plt+0x95c8>
   1a4fc:	b	1a5e8 <__assert_fail@plt+0x95dc>
   1a500:	ldr	r2, [fp, #-16]
   1a504:	mov	r1, #-2147483648	; 0x80000000
   1a508:	mov	r0, #0
   1a50c:	str	r0, [sp, #28]
   1a510:	ldr	r3, [sp, #28]
   1a514:	bl	1b090 <__assert_fail@plt+0xa084>
   1a518:	ldr	r2, [fp, #-12]
   1a51c:	subs	r0, r0, r2
   1a520:	sbcs	r1, r1, #0
   1a524:	blt	1a5d4 <__assert_fail@plt+0x95c8>
   1a528:	b	1a5e8 <__assert_fail@plt+0x95dc>
   1a52c:	ldr	r0, [fp, #-16]
   1a530:	cmp	r0, #0
   1a534:	bne	1a53c <__assert_fail@plt+0x9530>
   1a538:	b	1a5e8 <__assert_fail@plt+0x95dc>
   1a53c:	ldr	r0, [fp, #-12]
   1a540:	cmp	r0, #0
   1a544:	bcs	1a5ac <__assert_fail@plt+0x95a0>
   1a548:	ldr	r0, [fp, #-12]
   1a54c:	cmn	r0, #1
   1a550:	bne	1a580 <__assert_fail@plt+0x9574>
   1a554:	b	1a570 <__assert_fail@plt+0x9564>
   1a558:	ldr	r0, [fp, #-16]
   1a55c:	rsbs	r0, r0, #0
   1a560:	mov	r1, #0
   1a564:	sbcs	r1, r1, #-2147483648	; 0x80000000
   1a568:	blt	1a5d4 <__assert_fail@plt+0x95c8>
   1a56c:	b	1a5e8 <__assert_fail@plt+0x95dc>
   1a570:	mov	r0, #0
   1a574:	cmp	r0, #0
   1a578:	bne	1a5d4 <__assert_fail@plt+0x95c8>
   1a57c:	b	1a5e8 <__assert_fail@plt+0x95dc>
   1a580:	ldr	r2, [fp, #-12]
   1a584:	mov	r1, #-2147483648	; 0x80000000
   1a588:	mov	r0, #0
   1a58c:	str	r0, [sp, #24]
   1a590:	ldr	r3, [sp, #24]
   1a594:	bl	1b090 <__assert_fail@plt+0xa084>
   1a598:	ldr	r2, [fp, #-16]
   1a59c:	subs	r0, r0, r2
   1a5a0:	sbcs	r1, r1, #0
   1a5a4:	blt	1a5d4 <__assert_fail@plt+0x95c8>
   1a5a8:	b	1a5e8 <__assert_fail@plt+0x95dc>
   1a5ac:	ldr	r2, [fp, #-16]
   1a5b0:	mvn	r0, #0
   1a5b4:	mvn	r1, #-2147483648	; 0x80000000
   1a5b8:	mov	r3, #0
   1a5bc:	bl	1b164 <__assert_fail@plt+0xa158>
   1a5c0:	ldr	r2, [fp, #-12]
   1a5c4:	subs	r0, r0, r2
   1a5c8:	sbcs	r1, r1, #0
   1a5cc:	bge	1a5e8 <__assert_fail@plt+0x95dc>
   1a5d0:	b	1a5d4 <__assert_fail@plt+0x95c8>
   1a5d4:	ldr	r0, [fp, #-12]
   1a5d8:	ldr	r1, [fp, #-16]
   1a5dc:	mul	r0, r0, r1
   1a5e0:	str	r0, [fp, #-20]	; 0xffffffec
   1a5e4:	b	1a818 <__assert_fail@plt+0x980c>
   1a5e8:	ldr	r0, [fp, #-12]
   1a5ec:	ldr	r1, [fp, #-16]
   1a5f0:	mul	r0, r0, r1
   1a5f4:	str	r0, [fp, #-20]	; 0xffffffec
   1a5f8:	b	1a830 <__assert_fail@plt+0x9824>
   1a5fc:	ldr	r0, [fp, #-16]
   1a600:	cmp	r0, #0
   1a604:	bcs	1a740 <__assert_fail@plt+0x9734>
   1a608:	ldr	r0, [fp, #-12]
   1a60c:	cmp	r0, #0
   1a610:	bcs	1a6c8 <__assert_fail@plt+0x96bc>
   1a614:	b	1a648 <__assert_fail@plt+0x963c>
   1a618:	ldr	r0, [fp, #-12]
   1a61c:	ldr	r2, [fp, #-16]
   1a620:	mvn	r1, #0
   1a624:	mov	r3, #0
   1a628:	str	r0, [sp, #20]
   1a62c:	mov	r0, r1
   1a630:	bl	1b164 <__assert_fail@plt+0xa158>
   1a634:	ldr	r2, [sp, #20]
   1a638:	subs	r0, r2, r0
   1a63c:	rscs	r1, r1, #0
   1a640:	bcc	1a7f0 <__assert_fail@plt+0x97e4>
   1a644:	b	1a804 <__assert_fail@plt+0x97f8>
   1a648:	b	1a65c <__assert_fail@plt+0x9650>
   1a64c:	ldr	r0, [fp, #-16]
   1a650:	cmp	r0, #1
   1a654:	bcc	1a66c <__assert_fail@plt+0x9660>
   1a658:	b	1a680 <__assert_fail@plt+0x9674>
   1a65c:	ldr	r0, [fp, #-16]
   1a660:	movw	r1, #0
   1a664:	cmp	r1, r0
   1a668:	bcs	1a680 <__assert_fail@plt+0x9674>
   1a66c:	mov	r0, #1
   1a670:	mvn	r1, #0
   1a674:	str	r1, [sp, #16]
   1a678:	str	r0, [sp, #12]
   1a67c:	b	1a6a8 <__assert_fail@plt+0x969c>
   1a680:	ldr	r0, [fp, #-16]
   1a684:	rsb	r2, r0, #0
   1a688:	mvn	r0, #0
   1a68c:	mov	r3, #0
   1a690:	str	r0, [sp, #8]
   1a694:	ldr	r1, [sp, #8]
   1a698:	bl	1b164 <__assert_fail@plt+0xa158>
   1a69c:	str	r0, [sp, #16]
   1a6a0:	str	r1, [sp, #12]
   1a6a4:	b	1a6a8 <__assert_fail@plt+0x969c>
   1a6a8:	ldr	r0, [sp, #12]
   1a6ac:	ldr	r1, [sp, #16]
   1a6b0:	ldr	r2, [fp, #-12]
   1a6b4:	mvn	r2, r2
   1a6b8:	subs	r1, r2, r1
   1a6bc:	rscs	r0, r0, #0
   1a6c0:	bcs	1a7f0 <__assert_fail@plt+0x97e4>
   1a6c4:	b	1a804 <__assert_fail@plt+0x97f8>
   1a6c8:	b	1a6d0 <__assert_fail@plt+0x96c4>
   1a6cc:	b	1a6d4 <__assert_fail@plt+0x96c8>
   1a6d0:	b	1a724 <__assert_fail@plt+0x9718>
   1a6d4:	ldr	r0, [fp, #-16]
   1a6d8:	cmn	r0, #1
   1a6dc:	bne	1a724 <__assert_fail@plt+0x9718>
   1a6e0:	b	1a6fc <__assert_fail@plt+0x96f0>
   1a6e4:	ldr	r0, [fp, #-12]
   1a6e8:	add	r0, r0, #0
   1a6ec:	movw	r1, #0
   1a6f0:	cmp	r1, r0
   1a6f4:	bcc	1a7f0 <__assert_fail@plt+0x97e4>
   1a6f8:	b	1a804 <__assert_fail@plt+0x97f8>
   1a6fc:	ldr	r0, [fp, #-12]
   1a700:	movw	r1, #0
   1a704:	cmp	r1, r0
   1a708:	bcs	1a804 <__assert_fail@plt+0x97f8>
   1a70c:	ldr	r0, [fp, #-12]
   1a710:	sub	r0, r0, #1
   1a714:	mvn	r1, #0
   1a718:	cmp	r1, r0
   1a71c:	bcc	1a7f0 <__assert_fail@plt+0x97e4>
   1a720:	b	1a804 <__assert_fail@plt+0x97f8>
   1a724:	ldr	r0, [fp, #-16]
   1a728:	movw	r1, #0
   1a72c:	udiv	r0, r1, r0
   1a730:	ldr	r1, [fp, #-12]
   1a734:	cmp	r0, r1
   1a738:	bcc	1a7f0 <__assert_fail@plt+0x97e4>
   1a73c:	b	1a804 <__assert_fail@plt+0x97f8>
   1a740:	ldr	r0, [fp, #-16]
   1a744:	cmp	r0, #0
   1a748:	bne	1a750 <__assert_fail@plt+0x9744>
   1a74c:	b	1a804 <__assert_fail@plt+0x97f8>
   1a750:	ldr	r0, [fp, #-12]
   1a754:	cmp	r0, #0
   1a758:	bcs	1a7c4 <__assert_fail@plt+0x97b8>
   1a75c:	b	1a764 <__assert_fail@plt+0x9758>
   1a760:	b	1a768 <__assert_fail@plt+0x975c>
   1a764:	b	1a7a8 <__assert_fail@plt+0x979c>
   1a768:	ldr	r0, [fp, #-12]
   1a76c:	cmn	r0, #1
   1a770:	bne	1a7a8 <__assert_fail@plt+0x979c>
   1a774:	b	1a790 <__assert_fail@plt+0x9784>
   1a778:	ldr	r0, [fp, #-16]
   1a77c:	add	r0, r0, #0
   1a780:	movw	r1, #0
   1a784:	cmp	r1, r0
   1a788:	bcc	1a7f0 <__assert_fail@plt+0x97e4>
   1a78c:	b	1a804 <__assert_fail@plt+0x97f8>
   1a790:	ldr	r0, [fp, #-16]
   1a794:	sub	r0, r0, #1
   1a798:	mvn	r1, #0
   1a79c:	cmp	r1, r0
   1a7a0:	bcc	1a7f0 <__assert_fail@plt+0x97e4>
   1a7a4:	b	1a804 <__assert_fail@plt+0x97f8>
   1a7a8:	ldr	r0, [fp, #-12]
   1a7ac:	movw	r1, #0
   1a7b0:	udiv	r0, r1, r0
   1a7b4:	ldr	r1, [fp, #-16]
   1a7b8:	cmp	r0, r1
   1a7bc:	bcc	1a7f0 <__assert_fail@plt+0x97e4>
   1a7c0:	b	1a804 <__assert_fail@plt+0x97f8>
   1a7c4:	ldr	r2, [fp, #-16]
   1a7c8:	mvn	r0, #0
   1a7cc:	mov	r3, #0
   1a7d0:	str	r0, [sp, #4]
   1a7d4:	ldr	r1, [sp, #4]
   1a7d8:	bl	1b164 <__assert_fail@plt+0xa158>
   1a7dc:	ldr	r2, [fp, #-12]
   1a7e0:	subs	r0, r0, r2
   1a7e4:	sbcs	r1, r1, #0
   1a7e8:	bcs	1a804 <__assert_fail@plt+0x97f8>
   1a7ec:	b	1a7f0 <__assert_fail@plt+0x97e4>
   1a7f0:	ldr	r0, [fp, #-12]
   1a7f4:	ldr	r1, [fp, #-16]
   1a7f8:	mul	r0, r0, r1
   1a7fc:	str	r0, [fp, #-20]	; 0xffffffec
   1a800:	b	1a818 <__assert_fail@plt+0x980c>
   1a804:	ldr	r0, [fp, #-12]
   1a808:	ldr	r1, [fp, #-16]
   1a80c:	mul	r0, r0, r1
   1a810:	str	r0, [fp, #-20]	; 0xffffffec
   1a814:	b	1a830 <__assert_fail@plt+0x9824>
   1a818:	bl	10f40 <__errno_location@plt>
   1a81c:	movw	r1, #12
   1a820:	str	r1, [r0]
   1a824:	movw	r0, #0
   1a828:	str	r0, [fp, #-4]
   1a82c:	b	1a840 <__assert_fail@plt+0x9834>
   1a830:	ldr	r0, [fp, #-8]
   1a834:	ldr	r1, [fp, #-20]	; 0xffffffec
   1a838:	bl	1900c <__assert_fail@plt+0x8000>
   1a83c:	str	r0, [fp, #-4]
   1a840:	ldr	r0, [fp, #-4]
   1a844:	mov	sp, fp
   1a848:	pop	{fp, pc}
   1a84c:	svcvc	0x00ffffff
   1a850:	andhi	r0, r0, r0
   1a854:			; <UNDEFINED> instruction: 0xffff8000
   1a858:	sub	sp, sp, #12
   1a85c:	str	r0, [sp, #4]
   1a860:	ldr	r0, [sp, #4]
   1a864:	sub	r1, r0, #48	; 0x30
   1a868:	cmp	r1, #10
   1a86c:	str	r0, [sp]
   1a870:	bcc	1a8a0 <__assert_fail@plt+0x9894>
   1a874:	b	1a878 <__assert_fail@plt+0x986c>
   1a878:	ldr	r0, [sp]
   1a87c:	sub	r1, r0, #65	; 0x41
   1a880:	cmp	r1, #26
   1a884:	bcc	1a8a0 <__assert_fail@plt+0x9894>
   1a888:	b	1a88c <__assert_fail@plt+0x9880>
   1a88c:	ldr	r0, [sp]
   1a890:	sub	r1, r0, #97	; 0x61
   1a894:	cmp	r1, #25
   1a898:	bhi	1a8b0 <__assert_fail@plt+0x98a4>
   1a89c:	b	1a8a0 <__assert_fail@plt+0x9894>
   1a8a0:	movw	r0, #1
   1a8a4:	and	r0, r0, #1
   1a8a8:	strb	r0, [sp, #11]
   1a8ac:	b	1a8bc <__assert_fail@plt+0x98b0>
   1a8b0:	movw	r0, #0
   1a8b4:	and	r0, r0, #1
   1a8b8:	strb	r0, [sp, #11]
   1a8bc:	ldrb	r0, [sp, #11]
   1a8c0:	and	r0, r0, #1
   1a8c4:	add	sp, sp, #12
   1a8c8:	bx	lr
   1a8cc:	sub	sp, sp, #12
   1a8d0:	str	r0, [sp, #4]
   1a8d4:	ldr	r0, [sp, #4]
   1a8d8:	sub	r1, r0, #65	; 0x41
   1a8dc:	cmp	r1, #26
   1a8e0:	str	r0, [sp]
   1a8e4:	bcc	1a900 <__assert_fail@plt+0x98f4>
   1a8e8:	b	1a8ec <__assert_fail@plt+0x98e0>
   1a8ec:	ldr	r0, [sp]
   1a8f0:	sub	r1, r0, #97	; 0x61
   1a8f4:	cmp	r1, #25
   1a8f8:	bhi	1a910 <__assert_fail@plt+0x9904>
   1a8fc:	b	1a900 <__assert_fail@plt+0x98f4>
   1a900:	movw	r0, #1
   1a904:	and	r0, r0, #1
   1a908:	strb	r0, [sp, #11]
   1a90c:	b	1a91c <__assert_fail@plt+0x9910>
   1a910:	movw	r0, #0
   1a914:	and	r0, r0, #1
   1a918:	strb	r0, [sp, #11]
   1a91c:	ldrb	r0, [sp, #11]
   1a920:	and	r0, r0, #1
   1a924:	add	sp, sp, #12
   1a928:	bx	lr
   1a92c:	sub	sp, sp, #8
   1a930:	str	r0, [sp]
   1a934:	ldr	r0, [sp]
   1a938:	cmp	r0, #127	; 0x7f
   1a93c:	bhi	1a954 <__assert_fail@plt+0x9948>
   1a940:	b	1a944 <__assert_fail@plt+0x9938>
   1a944:	movw	r0, #1
   1a948:	and	r0, r0, #1
   1a94c:	strb	r0, [sp, #7]
   1a950:	b	1a960 <__assert_fail@plt+0x9954>
   1a954:	movw	r0, #0
   1a958:	and	r0, r0, #1
   1a95c:	strb	r0, [sp, #7]
   1a960:	ldrb	r0, [sp, #7]
   1a964:	and	r0, r0, #1
   1a968:	add	sp, sp, #8
   1a96c:	bx	lr
   1a970:	sub	sp, sp, #8
   1a974:	str	r0, [sp, #4]
   1a978:	ldr	r0, [sp, #4]
   1a97c:	cmp	r0, #32
   1a980:	movw	r0, #1
   1a984:	str	r0, [sp]
   1a988:	beq	1a9a0 <__assert_fail@plt+0x9994>
   1a98c:	ldr	r0, [sp, #4]
   1a990:	cmp	r0, #9
   1a994:	movw	r0, #0
   1a998:	moveq	r0, #1
   1a99c:	str	r0, [sp]
   1a9a0:	ldr	r0, [sp]
   1a9a4:	and	r0, r0, #1
   1a9a8:	add	sp, sp, #8
   1a9ac:	bx	lr
   1a9b0:	sub	sp, sp, #12
   1a9b4:	str	r0, [sp, #4]
   1a9b8:	ldr	r0, [sp, #4]
   1a9bc:	cmp	r0, #32
   1a9c0:	str	r0, [sp]
   1a9c4:	bcc	1a9dc <__assert_fail@plt+0x99d0>
   1a9c8:	b	1a9cc <__assert_fail@plt+0x99c0>
   1a9cc:	ldr	r0, [sp]
   1a9d0:	cmp	r0, #127	; 0x7f
   1a9d4:	bne	1a9ec <__assert_fail@plt+0x99e0>
   1a9d8:	b	1a9dc <__assert_fail@plt+0x99d0>
   1a9dc:	movw	r0, #1
   1a9e0:	and	r0, r0, #1
   1a9e4:	strb	r0, [sp, #11]
   1a9e8:	b	1a9f8 <__assert_fail@plt+0x99ec>
   1a9ec:	movw	r0, #0
   1a9f0:	and	r0, r0, #1
   1a9f4:	strb	r0, [sp, #11]
   1a9f8:	ldrb	r0, [sp, #11]
   1a9fc:	and	r0, r0, #1
   1aa00:	add	sp, sp, #12
   1aa04:	bx	lr
   1aa08:	sub	sp, sp, #8
   1aa0c:	str	r0, [sp]
   1aa10:	ldr	r0, [sp]
   1aa14:	sub	r0, r0, #48	; 0x30
   1aa18:	cmp	r0, #9
   1aa1c:	bhi	1aa34 <__assert_fail@plt+0x9a28>
   1aa20:	b	1aa24 <__assert_fail@plt+0x9a18>
   1aa24:	movw	r0, #1
   1aa28:	and	r0, r0, #1
   1aa2c:	strb	r0, [sp, #7]
   1aa30:	b	1aa40 <__assert_fail@plt+0x9a34>
   1aa34:	movw	r0, #0
   1aa38:	and	r0, r0, #1
   1aa3c:	strb	r0, [sp, #7]
   1aa40:	ldrb	r0, [sp, #7]
   1aa44:	and	r0, r0, #1
   1aa48:	add	sp, sp, #8
   1aa4c:	bx	lr
   1aa50:	sub	sp, sp, #8
   1aa54:	str	r0, [sp]
   1aa58:	ldr	r0, [sp]
   1aa5c:	sub	r0, r0, #33	; 0x21
   1aa60:	cmp	r0, #93	; 0x5d
   1aa64:	bhi	1aa7c <__assert_fail@plt+0x9a70>
   1aa68:	b	1aa6c <__assert_fail@plt+0x9a60>
   1aa6c:	movw	r0, #1
   1aa70:	and	r0, r0, #1
   1aa74:	strb	r0, [sp, #7]
   1aa78:	b	1aa88 <__assert_fail@plt+0x9a7c>
   1aa7c:	movw	r0, #0
   1aa80:	and	r0, r0, #1
   1aa84:	strb	r0, [sp, #7]
   1aa88:	ldrb	r0, [sp, #7]
   1aa8c:	and	r0, r0, #1
   1aa90:	add	sp, sp, #8
   1aa94:	bx	lr
   1aa98:	sub	sp, sp, #8
   1aa9c:	str	r0, [sp]
   1aaa0:	ldr	r0, [sp]
   1aaa4:	sub	r0, r0, #97	; 0x61
   1aaa8:	cmp	r0, #25
   1aaac:	bhi	1aac4 <__assert_fail@plt+0x9ab8>
   1aab0:	b	1aab4 <__assert_fail@plt+0x9aa8>
   1aab4:	movw	r0, #1
   1aab8:	and	r0, r0, #1
   1aabc:	strb	r0, [sp, #7]
   1aac0:	b	1aad0 <__assert_fail@plt+0x9ac4>
   1aac4:	movw	r0, #0
   1aac8:	and	r0, r0, #1
   1aacc:	strb	r0, [sp, #7]
   1aad0:	ldrb	r0, [sp, #7]
   1aad4:	and	r0, r0, #1
   1aad8:	add	sp, sp, #8
   1aadc:	bx	lr
   1aae0:	sub	sp, sp, #8
   1aae4:	str	r0, [sp]
   1aae8:	ldr	r0, [sp]
   1aaec:	sub	r0, r0, #32
   1aaf0:	cmp	r0, #94	; 0x5e
   1aaf4:	bhi	1ab0c <__assert_fail@plt+0x9b00>
   1aaf8:	b	1aafc <__assert_fail@plt+0x9af0>
   1aafc:	movw	r0, #1
   1ab00:	and	r0, r0, #1
   1ab04:	strb	r0, [sp, #7]
   1ab08:	b	1ab18 <__assert_fail@plt+0x9b0c>
   1ab0c:	movw	r0, #0
   1ab10:	and	r0, r0, #1
   1ab14:	strb	r0, [sp, #7]
   1ab18:	ldrb	r0, [sp, #7]
   1ab1c:	and	r0, r0, #1
   1ab20:	add	sp, sp, #8
   1ab24:	bx	lr
   1ab28:	sub	sp, sp, #12
   1ab2c:	str	r0, [sp, #4]
   1ab30:	ldr	r0, [sp, #4]
   1ab34:	sub	r0, r0, #33	; 0x21
   1ab38:	cmp	r0, #93	; 0x5d
   1ab3c:	str	r0, [sp]
   1ab40:	bhi	1acdc <__assert_fail@plt+0x9cd0>
   1ab44:	add	r0, pc, #8
   1ab48:	ldr	r1, [sp]
   1ab4c:	ldr	r0, [r0, r1, lsl #2]
   1ab50:	mov	pc, r0
   1ab54:	andeq	sl, r1, ip, asr #25
   1ab58:	andeq	sl, r1, ip, asr #25
   1ab5c:	andeq	sl, r1, ip, asr #25
   1ab60:	andeq	sl, r1, ip, asr #25
   1ab64:	andeq	sl, r1, ip, asr #25
   1ab68:	andeq	sl, r1, ip, asr #25
   1ab6c:	andeq	sl, r1, ip, asr #25
   1ab70:	andeq	sl, r1, ip, asr #25
   1ab74:	andeq	sl, r1, ip, asr #25
   1ab78:	andeq	sl, r1, ip, asr #25
   1ab7c:	andeq	sl, r1, ip, asr #25
   1ab80:	andeq	sl, r1, ip, asr #25
   1ab84:	andeq	sl, r1, ip, asr #25
   1ab88:	andeq	sl, r1, ip, asr #25
   1ab8c:	andeq	sl, r1, ip, asr #25
   1ab90:	ldrdeq	sl, [r1], -ip
   1ab94:	ldrdeq	sl, [r1], -ip
   1ab98:	ldrdeq	sl, [r1], -ip
   1ab9c:	ldrdeq	sl, [r1], -ip
   1aba0:	ldrdeq	sl, [r1], -ip
   1aba4:	ldrdeq	sl, [r1], -ip
   1aba8:	ldrdeq	sl, [r1], -ip
   1abac:	ldrdeq	sl, [r1], -ip
   1abb0:	ldrdeq	sl, [r1], -ip
   1abb4:	ldrdeq	sl, [r1], -ip
   1abb8:	andeq	sl, r1, ip, asr #25
   1abbc:	andeq	sl, r1, ip, asr #25
   1abc0:	andeq	sl, r1, ip, asr #25
   1abc4:	andeq	sl, r1, ip, asr #25
   1abc8:	andeq	sl, r1, ip, asr #25
   1abcc:	andeq	sl, r1, ip, asr #25
   1abd0:	andeq	sl, r1, ip, asr #25
   1abd4:	ldrdeq	sl, [r1], -ip
   1abd8:	ldrdeq	sl, [r1], -ip
   1abdc:	ldrdeq	sl, [r1], -ip
   1abe0:	ldrdeq	sl, [r1], -ip
   1abe4:	ldrdeq	sl, [r1], -ip
   1abe8:	ldrdeq	sl, [r1], -ip
   1abec:	ldrdeq	sl, [r1], -ip
   1abf0:	ldrdeq	sl, [r1], -ip
   1abf4:	ldrdeq	sl, [r1], -ip
   1abf8:	ldrdeq	sl, [r1], -ip
   1abfc:	ldrdeq	sl, [r1], -ip
   1ac00:	ldrdeq	sl, [r1], -ip
   1ac04:	ldrdeq	sl, [r1], -ip
   1ac08:	ldrdeq	sl, [r1], -ip
   1ac0c:	ldrdeq	sl, [r1], -ip
   1ac10:	ldrdeq	sl, [r1], -ip
   1ac14:	ldrdeq	sl, [r1], -ip
   1ac18:	ldrdeq	sl, [r1], -ip
   1ac1c:	ldrdeq	sl, [r1], -ip
   1ac20:	ldrdeq	sl, [r1], -ip
   1ac24:	ldrdeq	sl, [r1], -ip
   1ac28:	ldrdeq	sl, [r1], -ip
   1ac2c:	ldrdeq	sl, [r1], -ip
   1ac30:	ldrdeq	sl, [r1], -ip
   1ac34:	ldrdeq	sl, [r1], -ip
   1ac38:	ldrdeq	sl, [r1], -ip
   1ac3c:	andeq	sl, r1, ip, asr #25
   1ac40:	andeq	sl, r1, ip, asr #25
   1ac44:	andeq	sl, r1, ip, asr #25
   1ac48:	andeq	sl, r1, ip, asr #25
   1ac4c:	andeq	sl, r1, ip, asr #25
   1ac50:	andeq	sl, r1, ip, asr #25
   1ac54:	ldrdeq	sl, [r1], -ip
   1ac58:	ldrdeq	sl, [r1], -ip
   1ac5c:	ldrdeq	sl, [r1], -ip
   1ac60:	ldrdeq	sl, [r1], -ip
   1ac64:	ldrdeq	sl, [r1], -ip
   1ac68:	ldrdeq	sl, [r1], -ip
   1ac6c:	ldrdeq	sl, [r1], -ip
   1ac70:	ldrdeq	sl, [r1], -ip
   1ac74:	ldrdeq	sl, [r1], -ip
   1ac78:	ldrdeq	sl, [r1], -ip
   1ac7c:	ldrdeq	sl, [r1], -ip
   1ac80:	ldrdeq	sl, [r1], -ip
   1ac84:	ldrdeq	sl, [r1], -ip
   1ac88:	ldrdeq	sl, [r1], -ip
   1ac8c:	ldrdeq	sl, [r1], -ip
   1ac90:	ldrdeq	sl, [r1], -ip
   1ac94:	ldrdeq	sl, [r1], -ip
   1ac98:	ldrdeq	sl, [r1], -ip
   1ac9c:	ldrdeq	sl, [r1], -ip
   1aca0:	ldrdeq	sl, [r1], -ip
   1aca4:	ldrdeq	sl, [r1], -ip
   1aca8:	ldrdeq	sl, [r1], -ip
   1acac:	ldrdeq	sl, [r1], -ip
   1acb0:	ldrdeq	sl, [r1], -ip
   1acb4:	ldrdeq	sl, [r1], -ip
   1acb8:	ldrdeq	sl, [r1], -ip
   1acbc:	andeq	sl, r1, ip, asr #25
   1acc0:	andeq	sl, r1, ip, asr #25
   1acc4:	andeq	sl, r1, ip, asr #25
   1acc8:	andeq	sl, r1, ip, asr #25
   1accc:	movw	r0, #1
   1acd0:	and	r0, r0, #1
   1acd4:	strb	r0, [sp, #11]
   1acd8:	b	1ace8 <__assert_fail@plt+0x9cdc>
   1acdc:	movw	r0, #0
   1ace0:	and	r0, r0, #1
   1ace4:	strb	r0, [sp, #11]
   1ace8:	ldrb	r0, [sp, #11]
   1acec:	and	r0, r0, #1
   1acf0:	add	sp, sp, #12
   1acf4:	bx	lr
   1acf8:	sub	sp, sp, #12
   1acfc:	str	r0, [sp, #4]
   1ad00:	ldr	r0, [sp, #4]
   1ad04:	sub	r1, r0, #9
   1ad08:	cmp	r1, #5
   1ad0c:	str	r0, [sp]
   1ad10:	bcc	1ad28 <__assert_fail@plt+0x9d1c>
   1ad14:	b	1ad18 <__assert_fail@plt+0x9d0c>
   1ad18:	ldr	r0, [sp]
   1ad1c:	cmp	r0, #32
   1ad20:	bne	1ad38 <__assert_fail@plt+0x9d2c>
   1ad24:	b	1ad28 <__assert_fail@plt+0x9d1c>
   1ad28:	movw	r0, #1
   1ad2c:	and	r0, r0, #1
   1ad30:	strb	r0, [sp, #11]
   1ad34:	b	1ad44 <__assert_fail@plt+0x9d38>
   1ad38:	movw	r0, #0
   1ad3c:	and	r0, r0, #1
   1ad40:	strb	r0, [sp, #11]
   1ad44:	ldrb	r0, [sp, #11]
   1ad48:	and	r0, r0, #1
   1ad4c:	add	sp, sp, #12
   1ad50:	bx	lr
   1ad54:	sub	sp, sp, #8
   1ad58:	str	r0, [sp]
   1ad5c:	ldr	r0, [sp]
   1ad60:	sub	r0, r0, #65	; 0x41
   1ad64:	cmp	r0, #25
   1ad68:	bhi	1ad80 <__assert_fail@plt+0x9d74>
   1ad6c:	b	1ad70 <__assert_fail@plt+0x9d64>
   1ad70:	movw	r0, #1
   1ad74:	and	r0, r0, #1
   1ad78:	strb	r0, [sp, #7]
   1ad7c:	b	1ad8c <__assert_fail@plt+0x9d80>
   1ad80:	movw	r0, #0
   1ad84:	and	r0, r0, #1
   1ad88:	strb	r0, [sp, #7]
   1ad8c:	ldrb	r0, [sp, #7]
   1ad90:	and	r0, r0, #1
   1ad94:	add	sp, sp, #8
   1ad98:	bx	lr
   1ad9c:	sub	sp, sp, #12
   1ada0:	str	r0, [sp, #4]
   1ada4:	ldr	r0, [sp, #4]
   1ada8:	sub	r1, r0, #48	; 0x30
   1adac:	cmp	r1, #10
   1adb0:	str	r0, [sp]
   1adb4:	bcc	1ade4 <__assert_fail@plt+0x9dd8>
   1adb8:	b	1adbc <__assert_fail@plt+0x9db0>
   1adbc:	ldr	r0, [sp]
   1adc0:	sub	r1, r0, #65	; 0x41
   1adc4:	cmp	r1, #6
   1adc8:	bcc	1ade4 <__assert_fail@plt+0x9dd8>
   1adcc:	b	1add0 <__assert_fail@plt+0x9dc4>
   1add0:	ldr	r0, [sp]
   1add4:	sub	r1, r0, #97	; 0x61
   1add8:	cmp	r1, #5
   1addc:	bhi	1adf4 <__assert_fail@plt+0x9de8>
   1ade0:	b	1ade4 <__assert_fail@plt+0x9dd8>
   1ade4:	movw	r0, #1
   1ade8:	and	r0, r0, #1
   1adec:	strb	r0, [sp, #11]
   1adf0:	b	1ae00 <__assert_fail@plt+0x9df4>
   1adf4:	movw	r0, #0
   1adf8:	and	r0, r0, #1
   1adfc:	strb	r0, [sp, #11]
   1ae00:	ldrb	r0, [sp, #11]
   1ae04:	and	r0, r0, #1
   1ae08:	add	sp, sp, #12
   1ae0c:	bx	lr
   1ae10:	sub	sp, sp, #8
   1ae14:	str	r0, [sp]
   1ae18:	ldr	r0, [sp]
   1ae1c:	sub	r0, r0, #65	; 0x41
   1ae20:	cmp	r0, #25
   1ae24:	bhi	1ae40 <__assert_fail@plt+0x9e34>
   1ae28:	b	1ae2c <__assert_fail@plt+0x9e20>
   1ae2c:	ldr	r0, [sp]
   1ae30:	sub	r0, r0, #65	; 0x41
   1ae34:	add	r0, r0, #97	; 0x61
   1ae38:	str	r0, [sp, #4]
   1ae3c:	b	1ae48 <__assert_fail@plt+0x9e3c>
   1ae40:	ldr	r0, [sp]
   1ae44:	str	r0, [sp, #4]
   1ae48:	ldr	r0, [sp, #4]
   1ae4c:	add	sp, sp, #8
   1ae50:	bx	lr
   1ae54:	sub	sp, sp, #8
   1ae58:	str	r0, [sp]
   1ae5c:	ldr	r0, [sp]
   1ae60:	sub	r0, r0, #97	; 0x61
   1ae64:	cmp	r0, #25
   1ae68:	bhi	1ae84 <__assert_fail@plt+0x9e78>
   1ae6c:	b	1ae70 <__assert_fail@plt+0x9e64>
   1ae70:	ldr	r0, [sp]
   1ae74:	sub	r0, r0, #97	; 0x61
   1ae78:	add	r0, r0, #65	; 0x41
   1ae7c:	str	r0, [sp, #4]
   1ae80:	b	1ae8c <__assert_fail@plt+0x9e80>
   1ae84:	ldr	r0, [sp]
   1ae88:	str	r0, [sp, #4]
   1ae8c:	ldr	r0, [sp, #4]
   1ae90:	add	sp, sp, #8
   1ae94:	bx	lr
   1ae98:	push	{r4, r5, fp, lr}
   1ae9c:	add	fp, sp, #8
   1aea0:	sub	sp, sp, #272	; 0x110
   1aea4:	add	r1, sp, #7
   1aea8:	str	r0, [fp, #-16]
   1aeac:	ldr	r0, [fp, #-16]
   1aeb0:	movw	r2, #257	; 0x101
   1aeb4:	bl	1af34 <__assert_fail@plt+0x9f28>
   1aeb8:	cmp	r0, #0
   1aebc:	beq	1aed0 <__assert_fail@plt+0x9ec4>
   1aec0:	movw	r0, #0
   1aec4:	and	r0, r0, #1
   1aec8:	strb	r0, [fp, #-9]
   1aecc:	b	1af24 <__assert_fail@plt+0x9f18>
   1aed0:	add	r0, sp, #7
   1aed4:	movw	r1, #48955	; 0xbf3b
   1aed8:	movt	r1, #1
   1aedc:	bl	10de4 <strcmp@plt>
   1aee0:	cmp	r0, #0
   1aee4:	movw	r0, #1
   1aee8:	str	r0, [sp]
   1aeec:	beq	1af10 <__assert_fail@plt+0x9f04>
   1aef0:	add	r0, sp, #7
   1aef4:	movw	r1, #48957	; 0xbf3d
   1aef8:	movt	r1, #1
   1aefc:	bl	10de4 <strcmp@plt>
   1af00:	cmp	r0, #0
   1af04:	movw	r0, #0
   1af08:	moveq	r0, #1
   1af0c:	str	r0, [sp]
   1af10:	ldr	r0, [sp]
   1af14:	mvn	r1, #0
   1af18:	eor	r0, r0, r1
   1af1c:	and	r0, r0, #1
   1af20:	strb	r0, [fp, #-9]
   1af24:	ldrb	r0, [fp, #-9]
   1af28:	and	r0, r0, #1
   1af2c:	sub	sp, fp, #8
   1af30:	pop	{r4, r5, fp, pc}
   1af34:	push	{fp, lr}
   1af38:	mov	fp, sp
   1af3c:	sub	sp, sp, #16
   1af40:	str	r0, [fp, #-4]
   1af44:	str	r1, [sp, #8]
   1af48:	str	r2, [sp, #4]
   1af4c:	ldr	r0, [fp, #-4]
   1af50:	ldr	r1, [sp, #8]
   1af54:	ldr	r2, [sp, #4]
   1af58:	bl	1af64 <__assert_fail@plt+0x9f58>
   1af5c:	mov	sp, fp
   1af60:	pop	{fp, pc}
   1af64:	push	{fp, lr}
   1af68:	mov	fp, sp
   1af6c:	sub	sp, sp, #24
   1af70:	str	r0, [fp, #-8]
   1af74:	str	r1, [sp, #12]
   1af78:	str	r2, [sp, #8]
   1af7c:	ldr	r0, [fp, #-8]
   1af80:	bl	1b064 <__assert_fail@plt+0xa058>
   1af84:	str	r0, [sp, #4]
   1af88:	ldr	r0, [sp, #4]
   1af8c:	movw	r1, #0
   1af90:	cmp	r0, r1
   1af94:	bne	1afbc <__assert_fail@plt+0x9fb0>
   1af98:	ldr	r0, [sp, #8]
   1af9c:	cmp	r0, #0
   1afa0:	bls	1afb0 <__assert_fail@plt+0x9fa4>
   1afa4:	ldr	r0, [sp, #12]
   1afa8:	movw	r1, #0
   1afac:	strb	r1, [r0]
   1afb0:	movw	r0, #22
   1afb4:	str	r0, [fp, #-4]
   1afb8:	b	1b038 <__assert_fail@plt+0xa02c>
   1afbc:	ldr	r0, [sp, #4]
   1afc0:	bl	10f28 <strlen@plt>
   1afc4:	str	r0, [sp]
   1afc8:	ldr	r0, [sp]
   1afcc:	ldr	r1, [sp, #8]
   1afd0:	cmp	r0, r1
   1afd4:	bcs	1aff8 <__assert_fail@plt+0x9fec>
   1afd8:	ldr	r0, [sp, #12]
   1afdc:	ldr	r1, [sp, #4]
   1afe0:	ldr	r2, [sp]
   1afe4:	add	r2, r2, #1
   1afe8:	bl	10e2c <memcpy@plt>
   1afec:	movw	r0, #0
   1aff0:	str	r0, [fp, #-4]
   1aff4:	b	1b038 <__assert_fail@plt+0xa02c>
   1aff8:	ldr	r0, [sp, #8]
   1affc:	cmp	r0, #0
   1b000:	bls	1b030 <__assert_fail@plt+0xa024>
   1b004:	ldr	r0, [sp, #12]
   1b008:	ldr	r1, [sp, #4]
   1b00c:	ldr	r2, [sp, #8]
   1b010:	sub	r2, r2, #1
   1b014:	bl	10e2c <memcpy@plt>
   1b018:	ldr	r0, [sp, #12]
   1b01c:	ldr	r1, [sp, #8]
   1b020:	sub	r1, r1, #1
   1b024:	add	r0, r0, r1
   1b028:	movw	r1, #0
   1b02c:	strb	r1, [r0]
   1b030:	movw	r0, #34	; 0x22
   1b034:	str	r0, [fp, #-4]
   1b038:	ldr	r0, [fp, #-4]
   1b03c:	mov	sp, fp
   1b040:	pop	{fp, pc}
   1b044:	push	{fp, lr}
   1b048:	mov	fp, sp
   1b04c:	sub	sp, sp, #8
   1b050:	str	r0, [sp, #4]
   1b054:	ldr	r0, [sp, #4]
   1b058:	bl	1b064 <__assert_fail@plt+0xa058>
   1b05c:	mov	sp, fp
   1b060:	pop	{fp, pc}
   1b064:	push	{fp, lr}
   1b068:	mov	fp, sp
   1b06c:	sub	sp, sp, #8
   1b070:	str	r0, [sp, #4]
   1b074:	ldr	r0, [sp, #4]
   1b078:	movw	r1, #0
   1b07c:	bl	10f88 <setlocale@plt>
   1b080:	str	r0, [sp]
   1b084:	ldr	r0, [sp]
   1b088:	mov	sp, fp
   1b08c:	pop	{fp, pc}
   1b090:	cmp	r3, #0
   1b094:	cmpeq	r2, #0
   1b098:	bne	1b0bc <__assert_fail@plt+0xa0b0>
   1b09c:	cmp	r1, #0
   1b0a0:	movlt	r1, #-2147483648	; 0x80000000
   1b0a4:	movlt	r0, #0
   1b0a8:	blt	1b0b8 <__assert_fail@plt+0xa0ac>
   1b0ac:	cmpeq	r0, #0
   1b0b0:	mvnne	r1, #-2147483648	; 0x80000000
   1b0b4:	mvnne	r0, #0
   1b0b8:	b	1b1a0 <__assert_fail@plt+0xa194>
   1b0bc:	sub	sp, sp, #8
   1b0c0:	push	{sp, lr}
   1b0c4:	cmp	r1, #0
   1b0c8:	blt	1b0e8 <__assert_fail@plt+0xa0dc>
   1b0cc:	cmp	r3, #0
   1b0d0:	blt	1b11c <__assert_fail@plt+0xa110>
   1b0d4:	bl	1b1b0 <__assert_fail@plt+0xa1a4>
   1b0d8:	ldr	lr, [sp, #4]
   1b0dc:	add	sp, sp, #8
   1b0e0:	pop	{r2, r3}
   1b0e4:	bx	lr
   1b0e8:	rsbs	r0, r0, #0
   1b0ec:	sbc	r1, r1, r1, lsl #1
   1b0f0:	cmp	r3, #0
   1b0f4:	blt	1b140 <__assert_fail@plt+0xa134>
   1b0f8:	bl	1b1b0 <__assert_fail@plt+0xa1a4>
   1b0fc:	ldr	lr, [sp, #4]
   1b100:	add	sp, sp, #8
   1b104:	pop	{r2, r3}
   1b108:	rsbs	r0, r0, #0
   1b10c:	sbc	r1, r1, r1, lsl #1
   1b110:	rsbs	r2, r2, #0
   1b114:	sbc	r3, r3, r3, lsl #1
   1b118:	bx	lr
   1b11c:	rsbs	r2, r2, #0
   1b120:	sbc	r3, r3, r3, lsl #1
   1b124:	bl	1b1b0 <__assert_fail@plt+0xa1a4>
   1b128:	ldr	lr, [sp, #4]
   1b12c:	add	sp, sp, #8
   1b130:	pop	{r2, r3}
   1b134:	rsbs	r0, r0, #0
   1b138:	sbc	r1, r1, r1, lsl #1
   1b13c:	bx	lr
   1b140:	rsbs	r2, r2, #0
   1b144:	sbc	r3, r3, r3, lsl #1
   1b148:	bl	1b1b0 <__assert_fail@plt+0xa1a4>
   1b14c:	ldr	lr, [sp, #4]
   1b150:	add	sp, sp, #8
   1b154:	pop	{r2, r3}
   1b158:	rsbs	r2, r2, #0
   1b15c:	sbc	r3, r3, r3, lsl #1
   1b160:	bx	lr
   1b164:	cmp	r3, #0
   1b168:	cmpeq	r2, #0
   1b16c:	bne	1b184 <__assert_fail@plt+0xa178>
   1b170:	cmp	r1, #0
   1b174:	cmpeq	r0, #0
   1b178:	mvnne	r1, #0
   1b17c:	mvnne	r0, #0
   1b180:	b	1b1a0 <__assert_fail@plt+0xa194>
   1b184:	sub	sp, sp, #8
   1b188:	push	{sp, lr}
   1b18c:	bl	1b1b0 <__assert_fail@plt+0xa1a4>
   1b190:	ldr	lr, [sp, #4]
   1b194:	add	sp, sp, #8
   1b198:	pop	{r2, r3}
   1b19c:	bx	lr
   1b1a0:	push	{r1, lr}
   1b1a4:	mov	r0, #8
   1b1a8:	bl	10dd8 <raise@plt>
   1b1ac:	pop	{r1, pc}
   1b1b0:	cmp	r1, r3
   1b1b4:	cmpeq	r0, r2
   1b1b8:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   1b1bc:	mov	r4, r0
   1b1c0:	movcc	r0, #0
   1b1c4:	mov	r5, r1
   1b1c8:	ldr	lr, [sp, #36]	; 0x24
   1b1cc:	movcc	r1, r0
   1b1d0:	bcc	1b2cc <__assert_fail@plt+0xa2c0>
   1b1d4:	cmp	r3, #0
   1b1d8:	clzeq	ip, r2
   1b1dc:	clzne	ip, r3
   1b1e0:	addeq	ip, ip, #32
   1b1e4:	cmp	r5, #0
   1b1e8:	clzeq	r1, r4
   1b1ec:	addeq	r1, r1, #32
   1b1f0:	clzne	r1, r5
   1b1f4:	sub	ip, ip, r1
   1b1f8:	sub	sl, ip, #32
   1b1fc:	lsl	r9, r3, ip
   1b200:	rsb	fp, ip, #32
   1b204:	orr	r9, r9, r2, lsl sl
   1b208:	orr	r9, r9, r2, lsr fp
   1b20c:	lsl	r8, r2, ip
   1b210:	cmp	r5, r9
   1b214:	cmpeq	r4, r8
   1b218:	movcc	r0, #0
   1b21c:	movcc	r1, r0
   1b220:	bcc	1b23c <__assert_fail@plt+0xa230>
   1b224:	mov	r0, #1
   1b228:	subs	r4, r4, r8
   1b22c:	lsl	r1, r0, sl
   1b230:	orr	r1, r1, r0, lsr fp
   1b234:	lsl	r0, r0, ip
   1b238:	sbc	r5, r5, r9
   1b23c:	cmp	ip, #0
   1b240:	beq	1b2cc <__assert_fail@plt+0xa2c0>
   1b244:	lsr	r6, r8, #1
   1b248:	orr	r6, r6, r9, lsl #31
   1b24c:	lsr	r7, r9, #1
   1b250:	mov	r2, ip
   1b254:	b	1b278 <__assert_fail@plt+0xa26c>
   1b258:	subs	r3, r4, r6
   1b25c:	sbc	r8, r5, r7
   1b260:	adds	r3, r3, r3
   1b264:	adc	r8, r8, r8
   1b268:	adds	r4, r3, #1
   1b26c:	adc	r5, r8, #0
   1b270:	subs	r2, r2, #1
   1b274:	beq	1b294 <__assert_fail@plt+0xa288>
   1b278:	cmp	r5, r7
   1b27c:	cmpeq	r4, r6
   1b280:	bcs	1b258 <__assert_fail@plt+0xa24c>
   1b284:	adds	r4, r4, r4
   1b288:	adc	r5, r5, r5
   1b28c:	subs	r2, r2, #1
   1b290:	bne	1b278 <__assert_fail@plt+0xa26c>
   1b294:	lsr	r3, r4, ip
   1b298:	orr	r3, r3, r5, lsl fp
   1b29c:	lsr	r2, r5, ip
   1b2a0:	orr	r3, r3, r5, lsr sl
   1b2a4:	adds	r0, r0, r4
   1b2a8:	mov	r4, r3
   1b2ac:	lsl	r3, r2, ip
   1b2b0:	orr	r3, r3, r4, lsl sl
   1b2b4:	lsl	ip, r4, ip
   1b2b8:	orr	r3, r3, r4, lsr fp
   1b2bc:	adc	r1, r1, r5
   1b2c0:	subs	r0, r0, ip
   1b2c4:	mov	r5, r2
   1b2c8:	sbc	r1, r1, r3
   1b2cc:	cmp	lr, #0
   1b2d0:	strdne	r4, [lr]
   1b2d4:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1b2d8:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   1b2dc:	mov	r7, r0
   1b2e0:	ldr	r6, [pc, #72]	; 1b330 <__assert_fail@plt+0xa324>
   1b2e4:	ldr	r5, [pc, #72]	; 1b334 <__assert_fail@plt+0xa328>
   1b2e8:	add	r6, pc, r6
   1b2ec:	add	r5, pc, r5
   1b2f0:	sub	r6, r6, r5
   1b2f4:	mov	r8, r1
   1b2f8:	mov	r9, r2
   1b2fc:	bl	10da0 <calloc@plt-0x20>
   1b300:	asrs	r6, r6, #2
   1b304:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   1b308:	mov	r4, #0
   1b30c:	add	r4, r4, #1
   1b310:	ldr	r3, [r5], #4
   1b314:	mov	r2, r9
   1b318:	mov	r1, r8
   1b31c:	mov	r0, r7
   1b320:	blx	r3
   1b324:	cmp	r6, r4
   1b328:	bne	1b30c <__assert_fail@plt+0xa300>
   1b32c:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   1b330:	andeq	r1, r1, ip, lsl ip
   1b334:	andeq	r1, r1, r4, lsl ip
   1b338:	bx	lr
   1b33c:	ldr	r3, [pc, #12]	; 1b350 <__assert_fail@plt+0xa344>
   1b340:	mov	r1, #0
   1b344:	add	r3, pc, r3
   1b348:	ldr	r2, [r3]
   1b34c:	b	10f4c <__cxa_atexit@plt>
   1b350:	muleq	r1, r0, sp

Disassembly of section .fini:

0001b354 <.fini>:
   1b354:	push	{r3, lr}
   1b358:	pop	{r3, pc}
