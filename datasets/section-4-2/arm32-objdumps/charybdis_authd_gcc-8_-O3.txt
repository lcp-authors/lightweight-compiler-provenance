
../repos/charybdis/authd/.libs/authd:     file format elf32-littlearm


Disassembly of section .init:

000111bc <.init>:
   111bc:	push	{r3, lr}
   111c0:	bl	116b0 <sprintf@plt+0x108>
   111c4:	pop	{r3, pc}

Disassembly of section .plt:

000111c8 <sigemptyset@plt-0x14>:
   111c8:	push	{lr}		; (str lr, [sp, #-4]!)
   111cc:	ldr	lr, [pc, #4]	; 111d8 <sigemptyset@plt-0x4>
   111d0:	add	lr, pc, lr
   111d4:	ldr	pc, [lr, #8]!
   111d8:	andeq	r9, r1, r8, lsr #28

000111dc <sigemptyset@plt>:
   111dc:	add	ip, pc, #0, 12
   111e0:	add	ip, ip, #102400	; 0x19000
   111e4:	ldr	pc, [ip, #3624]!	; 0xe28

000111e8 <strerror@plt>:
   111e8:	add	ip, pc, #0, 12
   111ec:	add	ip, ip, #102400	; 0x19000
   111f0:	ldr	pc, [ip, #3616]!	; 0xe20

000111f4 <rb_helper_loop@plt>:
   111f4:	add	ip, pc, #0, 12
   111f8:	add	ip, ip, #102400	; 0x19000
   111fc:	ldr	pc, [ip, #3608]!	; 0xe18

00011200 <abort@plt>:
   11200:	add	ip, pc, #0, 12
   11204:	add	ip, ip, #102400	; 0x19000
   11208:	ldr	pc, [ip, #3600]!	; 0xe10

0001120c <rb_event_addish@plt>:
   1120c:	add	ip, pc, #0, 12
   11210:	add	ip, ip, #102400	; 0x19000
   11214:	ldr	pc, [ip, #3592]!	; 0xe08

00011218 <getsockname@plt>:
   11218:	add	ip, pc, #0, 12
   1121c:	add	ip, ip, #102400	; 0x19000
   11220:	ldr	pc, [ip, #3584]!	; 0xe00

00011224 <rb_ignore_errno@plt>:
   11224:	add	ip, pc, #0, 12
   11228:	add	ip, ip, #102400	; 0x19000
   1122c:	ldr	pc, [ip, #3576]!	; 0xdf8

00011230 <rb_connect_tcp_ssl@plt>:
   11230:	add	ip, pc, #0, 12
   11234:	add	ip, ip, #102400	; 0x19000
   11238:	ldr	pc, [ip, #3568]!	; 0xdf0

0001123c <rb_connect_tcp@plt>:
   1123c:	add	ip, pc, #0, 12
   11240:	add	ip, ip, #102400	; 0x19000
   11244:	ldr	pc, [ip, #3560]!	; 0xde8

00011248 <memcmp@plt>:
   11248:	add	ip, pc, #0, 12
   1124c:	add	ip, ip, #102400	; 0x19000
   11250:	ldr	pc, [ip, #3552]!	; 0xde0

00011254 <__libc_start_main@plt>:
   11254:	add	ip, pc, #0, 12
   11258:	add	ip, ip, #102400	; 0x19000
   1125c:	ldr	pc, [ip, #3544]!	; 0xdd8

00011260 <rb_event_delete@plt>:
   11260:	add	ip, pc, #0, 12
   11264:	add	ip, ip, #102400	; 0x19000
   11268:	ldr	pc, [ip, #3536]!	; 0xdd0

0001126c <rb_setselect@plt>:
   1126c:	add	ip, pc, #0, 12
   11270:	add	ip, ip, #102400	; 0x19000
   11274:	ldr	pc, [ip, #3528]!	; 0xdc8

00011278 <rb_get_fd@plt>:
   11278:	add	ip, pc, #0, 12
   1127c:	add	ip, ip, #102400	; 0x19000
   11280:	ldr	pc, [ip, #3520]!	; 0xdc0

00011284 <__gmon_start__@plt>:
   11284:	add	ip, pc, #0, 12
   11288:	add	ip, ip, #102400	; 0x19000
   1128c:	ldr	pc, [ip, #3512]!	; 0xdb8

00011290 <vsnprintf@plt>:
   11290:	add	ip, pc, #0, 12
   11294:	add	ip, ip, #102400	; 0x19000
   11298:	ldr	pc, [ip, #3504]!	; 0xdb0

0001129c <rb_socket@plt>:
   1129c:	add	ip, pc, #0, 12
   112a0:	add	ip, ip, #102400	; 0x19000
   112a4:	ldr	pc, [ip, #3496]!	; 0xda8

000112a8 <fclose@plt>:
   112a8:	add	ip, pc, #0, 12
   112ac:	add	ip, ip, #102400	; 0x19000
   112b0:	ldr	pc, [ip, #3488]!	; 0xda0

000112b4 <fgets@plt>:
   112b4:	add	ip, pc, #0, 12
   112b8:	add	ip, ip, #102400	; 0x19000
   112bc:	ldr	pc, [ip, #3480]!	; 0xd98

000112c0 <rb_strtok_r@plt>:
   112c0:	add	ip, pc, #0, 12
   112c4:	add	ip, ip, #102400	; 0x19000
   112c8:	ldr	pc, [ip, #3472]!	; 0xd90

000112cc <strchr@plt>:
   112cc:	add	ip, pc, #0, 12
   112d0:	add	ip, ip, #102400	; 0x19000
   112d4:	ldr	pc, [ip, #3464]!	; 0xd88

000112d8 <rb_dictionary_foreach_cur@plt>:
   112d8:	add	ip, pc, #0, 12
   112dc:	add	ip, ip, #102400	; 0x19000
   112e0:	ldr	pc, [ip, #3456]!	; 0xd80

000112e4 <strcasecmp@plt>:
   112e4:	add	ip, pc, #0, 12
   112e8:	add	ip, ip, #102400	; 0x19000
   112ec:	ldr	pc, [ip, #3448]!	; 0xd78

000112f0 <calloc@plt>:
   112f0:	add	ip, pc, #0, 12
   112f4:	add	ip, ip, #102400	; 0x19000
   112f8:	ldr	pc, [ip, #3440]!	; 0xd70

000112fc <rb_helper_child@plt>:
   112fc:	add	ip, pc, #0, 12
   11300:	add	ip, ip, #102400	; 0x19000
   11304:	ldr	pc, [ip, #3432]!	; 0xd68

00011308 <sendto@plt>:
   11308:	add	ip, pc, #0, 12
   1130c:	add	ip, ip, #102400	; 0x19000
   11310:	ldr	pc, [ip, #3424]!	; 0xd60

00011314 <fopen@plt>:
   11314:	add	ip, pc, #0, 12
   11318:	add	ip, ip, #102400	; 0x19000
   1131c:	ldr	pc, [ip, #3416]!	; 0xd58

00011320 <memset@plt>:
   11320:	add	ip, pc, #0, 12
   11324:	add	ip, ip, #102400	; 0x19000
   11328:	ldr	pc, [ip, #3408]!	; 0xd50

0001132c <freeaddrinfo@plt>:
   1132c:	add	ip, pc, #0, 12
   11330:	add	ip, ip, #102400	; 0x19000
   11334:	ldr	pc, [ip, #3400]!	; 0xd48

00011338 <strrchr@plt>:
   11338:	add	ip, pc, #0, 12
   1133c:	add	ip, ip, #102400	; 0x19000
   11340:	ldr	pc, [ip, #3392]!	; 0xd40

00011344 <rb_write@plt>:
   11344:	add	ip, pc, #0, 12
   11348:	add	ip, ip, #102400	; 0x19000
   1134c:	ldr	pc, [ip, #3384]!	; 0xd38

00011350 <__assert_fail@plt>:
   11350:	add	ip, pc, #0, 12
   11354:	add	ip, ip, #102400	; 0x19000
   11358:	ldr	pc, [ip, #3376]!	; 0xd30

0001135c <rb_strlcpy@plt>:
   1135c:	add	ip, pc, #0, 12
   11360:	add	ip, ip, #102400	; 0x19000
   11364:	ldr	pc, [ip, #3368]!	; 0xd28

00011368 <strtoull@plt>:
   11368:	add	ip, pc, #0, 12
   1136c:	add	ip, ip, #102400	; 0x19000
   11370:	ldr	pc, [ip, #3360]!	; 0xd20

00011374 <rb_dictionary_foreach_next@plt>:
   11374:	add	ip, pc, #0, 12
   11378:	add	ip, ip, #102400	; 0x19000
   1137c:	ldr	pc, [ip, #3352]!	; 0xd18

00011380 <free@plt>:
   11380:	add	ip, pc, #0, 12
   11384:	add	ip, ip, #102400	; 0x19000
   11388:	ldr	pc, [ip, #3344]!	; 0xd10

0001138c <rb_string_to_array@plt>:
   1138c:	add	ip, pc, #0, 12
   11390:	add	ip, ip, #102400	; 0x19000
   11394:	ldr	pc, [ip, #3336]!	; 0xd08

00011398 <rb_read@plt>:
   11398:	add	ip, pc, #0, 12
   1139c:	add	ip, ip, #102400	; 0x19000
   113a0:	ldr	pc, [ip, #3328]!	; 0xd00

000113a4 <rb_strcasecmp@plt>:
   113a4:	add	ip, pc, #0, 12
   113a8:	add	ip, ip, #102400	; 0x19000
   113ac:	ldr	pc, [ip, #3320]!	; 0xcf8

000113b0 <getaddrinfo@plt>:
   113b0:	add	ip, pc, #0, 12
   113b4:	add	ip, ip, #102400	; 0x19000
   113b8:	ldr	pc, [ip, #3312]!	; 0xcf0

000113bc <rb_dictionary_foreach_start@plt>:
   113bc:	add	ip, pc, #0, 12
   113c0:	add	ip, ip, #102400	; 0x19000
   113c4:	ldr	pc, [ip, #3304]!	; 0xce8

000113c8 <rb_inet_pton_sock@plt>:
   113c8:	add	ip, pc, #0, 12
   113cc:	add	ip, ip, #102400	; 0x19000
   113d0:	ldr	pc, [ip, #3296]!	; 0xce0

000113d4 <strlen@plt>:
   113d4:	add	ip, pc, #0, 12
   113d8:	add	ip, ip, #102400	; 0x19000
   113dc:	ldr	pc, [ip, #3288]!	; 0xcd8

000113e0 <rb_current_time@plt>:
   113e0:	add	ip, pc, #0, 12
   113e4:	add	ip, ip, #102400	; 0x19000
   113e8:	ldr	pc, [ip, #3280]!	; 0xcd0

000113ec <rb_dictionary_delete@plt>:
   113ec:	add	ip, pc, #0, 12
   113f0:	add	ip, ip, #102400	; 0x19000
   113f4:	ldr	pc, [ip, #3272]!	; 0xcc8

000113f8 <memcpy@plt>:
   113f8:	add	ip, pc, #0, 12
   113fc:	add	ip, ip, #102400	; 0x19000
   11400:	ldr	pc, [ip, #3264]!	; 0xcc0

00011404 <rb_free_rb_dlink_node@plt>:
   11404:	add	ip, pc, #0, 12
   11408:	add	ip, ip, #102400	; 0x19000
   1140c:	ldr	pc, [ip, #3256]!	; 0xcb8

00011410 <rb_close@plt>:
   11410:	add	ip, pc, #0, 12
   11414:	add	ip, ip, #102400	; 0x19000
   11418:	ldr	pc, [ip, #3248]!	; 0xcb0

0001141c <strtol@plt>:
   1141c:	add	ip, pc, #0, 12
   11420:	add	ip, ip, #102400	; 0x19000
   11424:	ldr	pc, [ip, #3240]!	; 0xca8

00011428 <sigaddset@plt>:
   11428:	add	ip, pc, #0, 12
   1142c:	add	ip, ip, #102400	; 0x19000
   11430:	ldr	pc, [ip, #3232]!	; 0xca0

00011434 <rb_dictionary_destroy@plt>:
   11434:	add	ip, pc, #0, 12
   11438:	add	ip, ip, #102400	; 0x19000
   1143c:	ldr	pc, [ip, #3224]!	; 0xc98

00011440 <bind@plt>:
   11440:	add	ip, pc, #0, 12
   11444:	add	ip, ip, #102400	; 0x19000
   11448:	ldr	pc, [ip, #3216]!	; 0xc90

0001144c <strstr@plt>:
   1144c:	add	ip, pc, #0, 12
   11450:	add	ip, ip, #102400	; 0x19000
   11454:	ldr	pc, [ip, #3208]!	; 0xc88

00011458 <fwrite@plt>:
   11458:	add	ip, pc, #0, 12
   1145c:	add	ip, ip, #102400	; 0x19000
   11460:	ldr	pc, [ip, #3200]!	; 0xc80

00011464 <rb_init_prng@plt>:
   11464:	add	ip, pc, #0, 12
   11468:	add	ip, ip, #102400	; 0x19000
   1146c:	ldr	pc, [ip, #3192]!	; 0xc78

00011470 <rb_dictionary_retrieve@plt>:
   11470:	add	ip, pc, #0, 12
   11474:	add	ip, ip, #102400	; 0x19000
   11478:	ldr	pc, [ip, #3184]!	; 0xc70

0001147c <rb_outofmemory@plt>:
   1147c:	add	ip, pc, #0, 12
   11480:	add	ip, ip, #102400	; 0x19000
   11484:	ldr	pc, [ip, #3176]!	; 0xc68

00011488 <__ctype_b_loc@plt>:
   11488:	add	ip, pc, #0, 12
   1148c:	add	ip, ip, #102400	; 0x19000
   11490:	ldr	pc, [ip, #3168]!	; 0xc60

00011494 <rb_dictionary_add@plt>:
   11494:	add	ip, pc, #0, 12
   11498:	add	ip, ip, #102400	; 0x19000
   1149c:	ldr	pc, [ip, #3160]!	; 0xc58

000114a0 <rb_set_time@plt>:
   114a0:	add	ip, pc, #0, 12
   114a4:	add	ip, ip, #102400	; 0x19000
   114a8:	ldr	pc, [ip, #3152]!	; 0xc50

000114ac <malloc@plt>:
   114ac:	add	ip, pc, #0, 12
   114b0:	add	ip, ip, #102400	; 0x19000
   114b4:	ldr	pc, [ip, #3144]!	; 0xc48

000114b8 <sigaction@plt>:
   114b8:	add	ip, pc, #0, 12
   114bc:	add	ip, ip, #102400	; 0x19000
   114c0:	ldr	pc, [ip, #3136]!	; 0xc40

000114c4 <rb_helper_read@plt>:
   114c4:	add	ip, pc, #0, 12
   114c8:	add	ip, ip, #102400	; 0x19000
   114cc:	ldr	pc, [ip, #3128]!	; 0xc38

000114d0 <rb_inet_ntop_sock@plt>:
   114d0:	add	ip, pc, #0, 12
   114d4:	add	ip, ip, #102400	; 0x19000
   114d8:	ldr	pc, [ip, #3120]!	; 0xc30

000114dc <rb_dictionary_find@plt>:
   114dc:	add	ip, pc, #0, 12
   114e0:	add	ip, ip, #102400	; 0x19000
   114e4:	ldr	pc, [ip, #3112]!	; 0xc28

000114e8 <rb_dictionary_create@plt>:
   114e8:	add	ip, pc, #0, 12
   114ec:	add	ip, ip, #102400	; 0x19000
   114f0:	ldr	pc, [ip, #3104]!	; 0xc20

000114f4 <memmove@plt>:
   114f4:	add	ip, pc, #0, 12
   114f8:	add	ip, ip, #102400	; 0x19000
   114fc:	ldr	pc, [ip, #3096]!	; 0xc18

00011500 <rb_accept_tcp@plt>:
   11500:	add	ip, pc, #0, 12
   11504:	add	ip, ip, #102400	; 0x19000
   11508:	ldr	pc, [ip, #3088]!	; 0xc10

0001150c <rb_helper_write@plt>:
   1150c:	add	ip, pc, #0, 12
   11510:	add	ip, ip, #102400	; 0x19000
   11514:	ldr	pc, [ip, #3080]!	; 0xc08

00011518 <rb_event_add@plt>:
   11518:	add	ip, pc, #0, 12
   1151c:	add	ip, ip, #102400	; 0x19000
   11520:	ldr	pc, [ip, #3072]!	; 0xc00

00011524 <rb_get_random@plt>:
   11524:	add	ip, pc, #0, 12
   11528:	add	ip, ip, #102400	; 0x19000
   1152c:	ldr	pc, [ip, #3064]!	; 0xbf8

00011530 <rb_make_rb_dlink_node@plt>:
   11530:	add	ip, pc, #0, 12
   11534:	add	ip, ip, #102400	; 0x19000
   11538:	ldr	pc, [ip, #3056]!	; 0xbf0

0001153c <snprintf@plt>:
   1153c:	add	ip, pc, #0, 12
   11540:	add	ip, ip, #102400	; 0x19000
   11544:	ldr	pc, [ip, #3048]!	; 0xbe8

00011548 <rb_listen@plt>:
   11548:	add	ip, pc, #0, 12
   1154c:	add	ip, ip, #102400	; 0x19000
   11550:	ldr	pc, [ip, #3040]!	; 0xbe0

00011554 <strncmp@plt>:
   11554:	add	ip, pc, #0, 12
   11558:	add	ip, ip, #102400	; 0x19000
   1155c:	ldr	pc, [ip, #3032]!	; 0xbd8

00011560 <recvfrom@plt>:
   11560:	add	ip, pc, #0, 12
   11564:	add	ip, ip, #102400	; 0x19000
   11568:	ldr	pc, [ip, #3024]!	; 0xbd0

0001156c <setsockopt@plt>:
   1156c:	add	ip, pc, #0, 12
   11570:	add	ip, ip, #102400	; 0x19000
   11574:	ldr	pc, [ip, #3016]!	; 0xbc8

00011578 <strpbrk@plt>:
   11578:	add	ip, pc, #0, 12
   1157c:	add	ip, ip, #102400	; 0x19000
   11580:	ldr	pc, [ip, #3008]!	; 0xbc0

00011584 <strcmp@plt>:
   11584:	add	ip, pc, #0, 12
   11588:	add	ip, ip, #102400	; 0x19000
   1158c:	ldr	pc, [ip, #3000]!	; 0xbb8

00011590 <exit@plt>:
   11590:	add	ip, pc, #0, 12
   11594:	add	ip, ip, #102400	; 0x19000
   11598:	ldr	pc, [ip, #2992]!	; 0xbb0

0001159c <__errno_location@plt>:
   1159c:	add	ip, pc, #0, 12
   115a0:	add	ip, ip, #102400	; 0x19000
   115a4:	ldr	pc, [ip, #2984]!	; 0xba8

000115a8 <sprintf@plt>:
   115a8:	add	ip, pc, #0, 12
   115ac:	add	ip, ip, #102400	; 0x19000
   115b0:	ldr	pc, [ip, #2976]!	; 0xba0

Disassembly of section .text:

000115b4 <.text>:
   115b4:	push	{lr}		; (str lr, [sp, #-4]!)
   115b8:	sub	sp, sp, #20
   115bc:	mov	r4, #0
   115c0:	bl	1180c <sprintf@plt+0x264>
   115c4:	mov	ip, #256	; 0x100
   115c8:	mov	r3, r4
   115cc:	mov	r2, r4
   115d0:	movw	r1, #5992	; 0x1768
   115d4:	movt	r1, #1
   115d8:	movw	r0, #6008	; 0x1778
   115dc:	movt	r0, #1
   115e0:	stm	sp, {r4, ip}
   115e4:	movw	r5, #48968	; 0xbf48
   115e8:	movt	r5, #2
   115ec:	str	ip, [sp, #8]
   115f0:	str	ip, [sp, #12]
   115f4:	bl	112fc <rb_helper_child@plt>
   115f8:	cmp	r0, r4
   115fc:	str	r0, [r5, #44]	; 0x2c
   11600:	beq	1164c <sprintf@plt+0xa4>
   11604:	bl	114a0 <rb_set_time@plt>
   11608:	bl	1180c <sprintf@plt+0x264>
   1160c:	movw	r1, #5028	; 0x13a4
   11610:	movt	r1, #1
   11614:	movw	r0, #38848	; 0x97c0
   11618:	movt	r0, #1
   1161c:	bl	114e8 <rb_dictionary_create@plt>
   11620:	movw	r3, #364	; 0x16c
   11624:	movt	r3, #3
   11628:	str	r0, [r3]
   1162c:	bl	13798 <sprintf@plt+0x21f0>
   11630:	bl	12958 <sprintf@plt+0x13b0>
   11634:	mov	r1, #1
   11638:	mov	r0, r4
   1163c:	bl	11464 <rb_init_prng@plt>
   11640:	mov	r1, r4
   11644:	ldr	r0, [r5, #44]	; 0x2c
   11648:	bl	111f4 <rb_helper_loop@plt>
   1164c:	movw	r3, #48960	; 0xbf40
   11650:	movt	r3, #2
   11654:	movw	r0, #38800	; 0x9790
   11658:	movt	r0, #1
   1165c:	ldr	r3, [r3]
   11660:	mov	r2, #46	; 0x2e
   11664:	mov	r1, #1
   11668:	bl	11458 <fwrite@plt>
   1166c:	mov	r0, #1
   11670:	bl	11590 <exit@plt>
   11674:	mov	fp, #0
   11678:	mov	lr, #0
   1167c:	pop	{r1}		; (ldr r1, [sp], #4)
   11680:	mov	r2, sp
   11684:	push	{r2}		; (str r2, [sp, #-4]!)
   11688:	push	{r0}		; (str r0, [sp, #-4]!)
   1168c:	ldr	ip, [pc, #16]	; 116a4 <sprintf@plt+0xfc>
   11690:	push	{ip}		; (str ip, [sp, #-4]!)
   11694:	ldr	r0, [pc, #12]	; 116a8 <sprintf@plt+0x100>
   11698:	ldr	r3, [pc, #12]	; 116ac <sprintf@plt+0x104>
   1169c:	bl	11254 <__libc_start_main@plt>
   116a0:	bl	11200 <abort@plt>
   116a4:	andeq	r9, r1, r0, lsr r6
   116a8:			; <UNDEFINED> instruction: 0x000115b4
   116ac:	ldrdeq	r9, [r1], -r0
   116b0:	ldr	r3, [pc, #20]	; 116cc <sprintf@plt+0x124>
   116b4:	ldr	r2, [pc, #20]	; 116d0 <sprintf@plt+0x128>
   116b8:	add	r3, pc, r3
   116bc:	ldr	r2, [r3, r2]
   116c0:	cmp	r2, #0
   116c4:	bxeq	lr
   116c8:	b	11284 <__gmon_start__@plt>
   116cc:	andeq	r9, r1, r0, asr #18
   116d0:	andeq	r0, r0, r4, asr r1
   116d4:	ldr	r0, [pc, #24]	; 116f4 <sprintf@plt+0x14c>
   116d8:	ldr	r3, [pc, #24]	; 116f8 <sprintf@plt+0x150>
   116dc:	cmp	r3, r0
   116e0:	bxeq	lr
   116e4:	ldr	r3, [pc, #16]	; 116fc <sprintf@plt+0x154>
   116e8:	cmp	r3, #0
   116ec:	bxeq	lr
   116f0:	bx	r3
   116f4:	andeq	fp, r2, ip, lsr pc
   116f8:	andeq	fp, r2, ip, lsr pc
   116fc:	andeq	r0, r0, r0
   11700:	ldr	r0, [pc, #36]	; 1172c <sprintf@plt+0x184>
   11704:	ldr	r1, [pc, #36]	; 11730 <sprintf@plt+0x188>
   11708:	sub	r1, r1, r0
   1170c:	asr	r1, r1, #2
   11710:	add	r1, r1, r1, lsr #31
   11714:	asrs	r1, r1, #1
   11718:	bxeq	lr
   1171c:	ldr	r3, [pc, #16]	; 11734 <sprintf@plt+0x18c>
   11720:	cmp	r3, #0
   11724:	bxeq	lr
   11728:	bx	r3
   1172c:	andeq	fp, r2, ip, lsr pc
   11730:	andeq	fp, r2, ip, lsr pc
   11734:	andeq	r0, r0, r0
   11738:	push	{r4, lr}
   1173c:	ldr	r4, [pc, #24]	; 1175c <sprintf@plt+0x1b4>
   11740:	ldrb	r3, [r4]
   11744:	cmp	r3, #0
   11748:	popne	{r4, pc}
   1174c:	bl	116d4 <sprintf@plt+0x12c>
   11750:	mov	r3, #1
   11754:	strb	r3, [r4]
   11758:	pop	{r4, pc}
   1175c:	andeq	fp, r2, r4, asr #30
   11760:	b	11700 <sprintf@plt+0x158>
   11764:	bx	lr
   11768:	mov	r0, #1
   1176c:	str	r4, [sp, #-8]!
   11770:	str	lr, [sp, #4]
   11774:	bl	11590 <exit@plt>
   11778:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1177c:	movw	r4, #49016	; 0xbf78
   11780:	movt	r4, #2
   11784:	movw	r5, #48968	; 0xbf48
   11788:	movt	r5, #2
   1178c:	strd	r6, [sp, #8]
   11790:	movw	r7, #45408	; 0xb160
   11794:	movt	r7, #2
   11798:	str	r8, [sp, #16]
   1179c:	mov	r6, r0
   117a0:	str	lr, [sp, #20]
   117a4:	mov	r2, #16384	; 0x4000
   117a8:	mov	r1, r4
   117ac:	mov	r0, r6
   117b0:	bl	114c4 <rb_helper_read@plt>
   117b4:	cmp	r0, #0
   117b8:	movw	r1, #48968	; 0xbf48
   117bc:	movt	r1, #2
   117c0:	mov	r2, #10
   117c4:	mov	r0, r4
   117c8:	ble	117f8 <sprintf@plt+0x250>
   117cc:	bl	1138c <rb_string_to_array@plt>
   117d0:	cmp	r0, #0
   117d4:	mov	r1, r5
   117d8:	ble	117a4 <sprintf@plt+0x1fc>
   117dc:	ldr	r3, [r5]
   117e0:	ldrb	r3, [r3]
   117e4:	ldr	r3, [r7, r3, lsl #2]
   117e8:	cmp	r3, #0
   117ec:	beq	117a4 <sprintf@plt+0x1fc>
   117f0:	blx	r3
   117f4:	b	117a4 <sprintf@plt+0x1fc>
   117f8:	ldrd	r4, [sp]
   117fc:	ldrd	r6, [sp, #8]
   11800:	ldr	r8, [sp, #16]
   11804:	add	sp, sp, #20
   11808:	pop	{pc}		; (ldr pc, [sp], #4)
   1180c:	mov	r3, #1
   11810:	str	r4, [sp, #-8]!
   11814:	mov	r4, #0
   11818:	str	lr, [sp, #4]
   1181c:	sub	sp, sp, #144	; 0x90
   11820:	add	r0, sp, #8
   11824:	str	r3, [sp, #4]
   11828:	str	r4, [sp, #136]	; 0x88
   1182c:	bl	111dc <sigemptyset@plt>
   11830:	add	r0, sp, #8
   11834:	mov	r1, #13
   11838:	bl	11428 <sigaddset@plt>
   1183c:	add	r0, sp, #8
   11840:	mov	r1, #14
   11844:	bl	11428 <sigaddset@plt>
   11848:	add	r0, sp, #8
   1184c:	mov	r1, #5
   11850:	bl	11428 <sigaddset@plt>
   11854:	add	r0, sp, #8
   11858:	mov	r1, #28
   1185c:	bl	11428 <sigaddset@plt>
   11860:	mov	r2, r4
   11864:	add	r1, sp, #4
   11868:	mov	r0, #28
   1186c:	bl	114b8 <sigaction@plt>
   11870:	mov	r2, r4
   11874:	add	r1, sp, #4
   11878:	mov	r0, #13
   1187c:	bl	114b8 <sigaction@plt>
   11880:	mov	r2, r4
   11884:	add	r1, sp, #4
   11888:	mov	r0, #5
   1188c:	bl	114b8 <sigaction@plt>
   11890:	movw	r3, #5988	; 0x1764
   11894:	movt	r3, #1
   11898:	mov	r2, r4
   1189c:	add	r1, sp, #4
   118a0:	mov	r0, #14
   118a4:	str	r3, [sp, #4]
   118a8:	bl	114b8 <sigaction@plt>
   118ac:	add	sp, sp, #144	; 0x90
   118b0:	ldr	r4, [sp]
   118b4:	add	sp, sp, #4
   118b8:	pop	{pc}		; (ldr pc, [sp], #4)
   118bc:	cmp	r0, #2
   118c0:	ble	118e8 <sprintf@plt+0x340>
   118c4:	ldr	r2, [r1, #4]
   118c8:	movw	r3, #45408	; 0xb160
   118cc:	movt	r3, #2
   118d0:	ldrb	r0, [r2]
   118d4:	add	r3, r3, r0, lsl #2
   118d8:	ldr	r3, [r3, #1024]	; 0x400
   118dc:	cmp	r3, #0
   118e0:	bxeq	lr
   118e4:	bx	r3
   118e8:	strd	r4, [sp, #-16]!
   118ec:	ldr	r4, [pc, #52]	; 11928 <sprintf@plt+0x380>
   118f0:	str	r6, [sp, #8]
   118f4:	str	lr, [sp, #12]
   118f8:	add	r5, r4, #1024	; 0x400
   118fc:	ldr	r3, [r4, #4]!
   11900:	mov	r0, #0
   11904:	cmp	r3, r0
   11908:	beq	11910 <sprintf@plt+0x368>
   1190c:	blx	r3
   11910:	cmp	r4, r5
   11914:	bne	118fc <sprintf@plt+0x354>
   11918:	ldrd	r4, [sp]
   1191c:	ldr	r6, [sp, #8]
   11920:	add	sp, sp, #12
   11924:	pop	{pc}		; (ldr pc, [sp], #4)
   11928:	andeq	fp, r2, ip, asr r5
   1192c:	cmp	r0, #2
   11930:	ble	119a8 <sprintf@plt+0x400>
   11934:	str	r4, [sp, #-16]!
   11938:	mov	r4, r1
   1193c:	mov	r2, #16
   11940:	mov	r1, #0
   11944:	ldr	r0, [r4, #4]
   11948:	strd	r6, [sp, #4]
   1194c:	str	lr, [sp, #12]
   11950:	bl	11368 <strtoull@plt>
   11954:	mov	r3, #0
   11958:	mvn	r2, #0
   1195c:	cmp	r1, r3
   11960:	mov	r6, r0
   11964:	cmpeq	r0, r2
   11968:	bhi	119cc <sprintf@plt+0x424>
   1196c:	ldr	r2, [r4, #8]
   11970:	movw	r3, #45408	; 0xb160
   11974:	movt	r3, #2
   11978:	ldrb	r2, [r2]
   1197c:	add	r3, r3, r2, lsl #2
   11980:	ldr	r3, [r3, #2048]	; 0x800
   11984:	cmp	r3, #0
   11988:	beq	119bc <sprintf@plt+0x414>
   1198c:	mov	r0, r6
   11990:	mov	r1, r2
   11994:	ldr	r4, [sp]
   11998:	ldrd	r6, [sp, #4]
   1199c:	ldr	lr, [sp, #12]
   119a0:	add	sp, sp, #16
   119a4:	bx	r3
   119a8:	mov	r2, r0
   119ac:	movw	r1, #38464	; 0x9640
   119b0:	movt	r1, #1
   119b4:	mov	r0, #67	; 0x43
   119b8:	b	122bc <sprintf@plt+0xd14>
   119bc:	ldr	r4, [sp]
   119c0:	ldrd	r6, [sp, #4]
   119c4:	add	sp, sp, #12
   119c8:	pop	{pc}		; (ldr pc, [sp], #4)
   119cc:	movw	r1, #38540	; 0x968c
   119d0:	movt	r1, #1
   119d4:	ldr	r2, [r4, #4]
   119d8:	mov	r0, #67	; 0x43
   119dc:	ldr	r4, [sp]
   119e0:	ldrd	r6, [sp, #4]
   119e4:	ldr	lr, [sp, #12]
   119e8:	add	sp, sp, #16
   119ec:	b	122bc <sprintf@plt+0xd14>
   119f0:	cmp	r0, #1
   119f4:	ble	11a5c <sprintf@plt+0x4b4>
   119f8:	movw	r3, #364	; 0x16c
   119fc:	movt	r3, #3
   11a00:	strd	r4, [sp, #-16]!
   11a04:	mov	r5, r1
   11a08:	mov	r4, r0
   11a0c:	ldr	r0, [r3]
   11a10:	ldr	r1, [r1, #4]
   11a14:	str	r6, [sp, #8]
   11a18:	str	lr, [sp, #12]
   11a1c:	bl	11470 <rb_dictionary_retrieve@plt>
   11a20:	subs	r3, r0, #0
   11a24:	beq	11a94 <sprintf@plt+0x4ec>
   11a28:	ldr	r2, [r3, #4]
   11a2c:	sub	r1, r4, #1
   11a30:	cmp	r1, r2
   11a34:	ble	11a70 <sprintf@plt+0x4c8>
   11a38:	sub	r1, r4, #2
   11a3c:	add	r2, r5, #8
   11a40:	ldr	r0, [r5, #4]
   11a44:	ldrd	r4, [sp]
   11a48:	ldr	r6, [sp, #8]
   11a4c:	ldr	r3, [r3, #8]
   11a50:	ldr	lr, [sp, #12]
   11a54:	add	sp, sp, #16
   11a58:	bx	r3
   11a5c:	mov	r2, r0
   11a60:	movw	r1, #38592	; 0x96c0
   11a64:	movt	r1, #1
   11a68:	mov	r0, #67	; 0x43
   11a6c:	b	122bc <sprintf@plt+0xd14>
   11a70:	mov	r3, r4
   11a74:	movw	r1, #38720	; 0x9740
   11a78:	movt	r1, #1
   11a7c:	mov	r0, #67	; 0x43
   11a80:	ldrd	r4, [sp]
   11a84:	ldr	r6, [sp, #8]
   11a88:	ldr	lr, [sp, #12]
   11a8c:	add	sp, sp, #16
   11a90:	b	122bc <sprintf@plt+0xd14>
   11a94:	movw	r1, #38672	; 0x9710
   11a98:	movt	r1, #1
   11a9c:	ldr	r2, [r5, #4]
   11aa0:	mov	r0, #67	; 0x43
   11aa4:	ldrd	r4, [sp]
   11aa8:	ldr	r6, [sp, #8]
   11aac:	ldr	lr, [sp, #12]
   11ab0:	add	sp, sp, #16
   11ab4:	b	122bc <sprintf@plt+0xd14>
   11ab8:	mov	r3, #42	; 0x2a
   11abc:	strd	r4, [sp, #-12]!
   11ac0:	mov	r2, #49	; 0x31
   11ac4:	str	lr, [sp, #8]
   11ac8:	sub	sp, sp, #60	; 0x3c
   11acc:	mov	r4, r0
   11ad0:	mov	r5, r1
   11ad4:	add	r0, sp, #4
   11ad8:	mov	r1, #0
   11adc:	str	r3, [sp]
   11ae0:	bl	11320 <memset@plt>
   11ae4:	cmp	r4, #0
   11ae8:	beq	11bb4 <sprintf@plt+0x60c>
   11aec:	cmp	r5, #0
   11af0:	beq	11b14 <sprintf@plt+0x56c>
   11af4:	ldr	r2, [r4, #8]
   11af8:	cmp	r2, #52	; 0x34
   11afc:	beq	11b54 <sprintf@plt+0x5ac>
   11b00:	cmp	r2, #54	; 0x36
   11b04:	bne	11bcc <sprintf@plt+0x624>
   11b08:	ldrh	r3, [r5, #4]
   11b0c:	cmp	r3, #10
   11b10:	beq	11b74 <sprintf@plt+0x5cc>
   11b14:	ldr	r5, [r4, #152]	; 0x98
   11b18:	cmp	r5, #0
   11b1c:	beq	11b3c <sprintf@plt+0x594>
   11b20:	ldrb	r1, [sp]
   11b24:	mov	r0, sp
   11b28:	ldr	r2, [r4, #8]
   11b2c:	ldr	r3, [r4, #156]	; 0x9c
   11b30:	subs	r1, r1, #42	; 0x2a
   11b34:	movne	r1, #1
   11b38:	blx	r5
   11b3c:	mov	r0, r4
   11b40:	add	sp, sp, #60	; 0x3c
   11b44:	ldrd	r4, [sp]
   11b48:	ldr	lr, [sp, #8]
   11b4c:	add	sp, sp, #12
   11b50:	b	11380 <free@plt>
   11b54:	ldrh	r3, [r5, #4]
   11b58:	cmp	r3, #2
   11b5c:	bne	11b14 <sprintf@plt+0x56c>
   11b60:	add	r0, r5, #4
   11b64:	mov	r2, #53	; 0x35
   11b68:	mov	r1, sp
   11b6c:	bl	114d0 <rb_inet_ntop_sock@plt>
   11b70:	b	11b14 <sprintf@plt+0x56c>
   11b74:	add	r0, r5, #4
   11b78:	mov	r1, sp
   11b7c:	mov	r2, #53	; 0x35
   11b80:	bl	114d0 <rb_inet_ntop_sock@plt>
   11b84:	ldrb	r3, [sp]
   11b88:	cmp	r3, #58	; 0x3a
   11b8c:	bne	11b14 <sprintf@plt+0x56c>
   11b90:	mov	r0, sp
   11b94:	bl	113d4 <strlen@plt>
   11b98:	mov	r2, r0
   11b9c:	mov	r1, sp
   11ba0:	add	r0, sp, #1
   11ba4:	bl	114f4 <memmove@plt>
   11ba8:	mov	r3, #48	; 0x30
   11bac:	strb	r3, [sp]
   11bb0:	b	11b14 <sprintf@plt+0x56c>
   11bb4:	mov	r0, #67	; 0x43
   11bb8:	movw	r1, #38872	; 0x97d8
   11bbc:	movt	r1, #1
   11bc0:	bl	122bc <sprintf@plt+0xd14>
   11bc4:	mov	r0, #2
   11bc8:	bl	11590 <exit@plt>
   11bcc:	mov	r0, #67	; 0x43
   11bd0:	movw	r1, #38916	; 0x9804
   11bd4:	movt	r1, #1
   11bd8:	bl	122bc <sprintf@plt+0xd14>
   11bdc:	mov	r0, #2
   11be0:	bl	11590 <exit@plt>
   11be4:	strd	r4, [sp, #-16]!
   11be8:	subs	r4, r0, #0
   11bec:	str	r6, [sp, #8]
   11bf0:	str	lr, [sp, #12]
   11bf4:	beq	11c88 <sprintf@plt+0x6e0>
   11bf8:	cmp	r1, #0
   11bfc:	mov	r5, r1
   11c00:	beq	11c34 <sprintf@plt+0x68c>
   11c04:	ldr	r2, [r4, #8]
   11c08:	cmp	r2, #82	; 0x52
   11c0c:	beq	11c70 <sprintf@plt+0x6c8>
   11c10:	cmp	r2, #83	; 0x53
   11c14:	bne	11ca0 <sprintf@plt+0x6f8>
   11c18:	mov	r2, #16
   11c1c:	add	r1, r1, #12
   11c20:	add	r0, r4, #20
   11c24:	bl	11248 <memcmp@plt>
   11c28:	cmp	r0, #0
   11c2c:	bne	11c80 <sprintf@plt+0x6d8>
   11c30:	ldr	r5, [r5]
   11c34:	ldr	r6, [r4, #152]	; 0x98
   11c38:	cmp	r6, #0
   11c3c:	beq	11c58 <sprintf@plt+0x6b0>
   11c40:	adds	r1, r5, #0
   11c44:	mov	r0, r5
   11c48:	ldr	r2, [r4, #8]
   11c4c:	movne	r1, #1
   11c50:	ldr	r3, [r4, #156]	; 0x9c
   11c54:	blx	r6
   11c58:	mov	r0, r4
   11c5c:	ldrd	r4, [sp]
   11c60:	ldr	r6, [sp, #8]
   11c64:	ldr	lr, [sp, #12]
   11c68:	add	sp, sp, #16
   11c6c:	b	11380 <free@plt>
   11c70:	ldr	r3, [r1, #8]
   11c74:	ldr	r2, [r4, #16]
   11c78:	cmp	r2, r3
   11c7c:	beq	11c30 <sprintf@plt+0x688>
   11c80:	mov	r5, #0
   11c84:	b	11c34 <sprintf@plt+0x68c>
   11c88:	mov	r0, #67	; 0x43
   11c8c:	movw	r1, #38968	; 0x9838
   11c90:	movt	r1, #1
   11c94:	bl	122bc <sprintf@plt+0xd14>
   11c98:	mov	r0, #2
   11c9c:	bl	11590 <exit@plt>
   11ca0:	mov	r0, #67	; 0x43
   11ca4:	movw	r1, #39020	; 0x986c
   11ca8:	movt	r1, #1
   11cac:	bl	122bc <sprintf@plt+0xd14>
   11cb0:	mov	r0, #2
   11cb4:	bl	11590 <exit@plt>
   11cb8:	cmp	r2, #0
   11cbc:	cmpne	r3, #0
   11cc0:	str	r4, [sp, #-8]!
   11cc4:	str	lr, [sp, #4]
   11cc8:	sub	sp, sp, #8
   11ccc:	beq	11d3c <sprintf@plt+0x794>
   11cd0:	mov	ip, r0
   11cd4:	eor	r1, r1, #1
   11cd8:	cmp	ip, #0
   11cdc:	orreq	r1, r1, #1
   11ce0:	movw	r0, #49012	; 0xbf74
   11ce4:	movt	r0, #2
   11ce8:	cmp	r1, #0
   11cec:	mov	r4, r3
   11cf0:	mov	r3, r2
   11cf4:	ldr	r0, [r0]
   11cf8:	bne	11d28 <sprintf@plt+0x780>
   11cfc:	movw	r1, #39136	; 0x98e0
   11d00:	movt	r1, #1
   11d04:	str	ip, [sp]
   11d08:	mov	r2, r4
   11d0c:	bl	1150c <rb_helper_write@plt>
   11d10:	mov	r0, r4
   11d14:	add	sp, sp, #8
   11d18:	ldr	r4, [sp]
   11d1c:	ldr	lr, [sp, #4]
   11d20:	add	sp, sp, #8
   11d24:	b	11380 <free@plt>
   11d28:	movw	r1, #39124	; 0x98d4
   11d2c:	movt	r1, #1
   11d30:	mov	r2, r4
   11d34:	bl	1150c <rb_helper_write@plt>
   11d38:	b	11d10 <sprintf@plt+0x768>
   11d3c:	mov	r0, #67	; 0x43
   11d40:	movw	r1, #39080	; 0x98a8
   11d44:	movt	r1, #1
   11d48:	bl	122bc <sprintf@plt+0xd14>
   11d4c:	mov	r0, #2
   11d50:	bl	11590 <exit@plt>
   11d54:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11d58:	mov	r5, r1
   11d5c:	mov	r1, #160	; 0xa0
   11d60:	strd	r6, [sp, #8]
   11d64:	mov	r7, r2
   11d68:	mov	r6, r3
   11d6c:	str	r8, [sp, #16]
   11d70:	mov	r8, r0
   11d74:	mov	r0, #1
   11d78:	str	lr, [sp, #20]
   11d7c:	bl	112f0 <calloc@plt>
   11d80:	subs	r4, r0, #0
   11d84:	beq	11e20 <sprintf@plt+0x878>
   11d88:	cmp	r5, #2
   11d8c:	moveq	r3, #52	; 0x34
   11d90:	moveq	r2, #1
   11d94:	streq	r3, [r4, #8]
   11d98:	beq	11db0 <sprintf@plt+0x808>
   11d9c:	cmp	r5, #10
   11da0:	bne	11e14 <sprintf@plt+0x86c>
   11da4:	mov	r3, #54	; 0x36
   11da8:	mov	r2, #28
   11dac:	str	r3, [r4, #8]
   11db0:	movw	ip, #65400	; 0xff78
   11db4:	movt	ip, #2
   11db8:	str	r4, [r4]
   11dbc:	ldr	lr, [ip]
   11dc0:	movw	r1, #6840	; 0x1ab8
   11dc4:	movt	r1, #1
   11dc8:	mov	r0, r8
   11dcc:	ldr	r5, [ip, #4]
   11dd0:	str	r1, [r4, #4]
   11dd4:	mov	r1, r4
   11dd8:	str	lr, [r4, #144]	; 0x90
   11ddc:	adds	lr, lr, #1
   11de0:	str	r7, [r4, #152]	; 0x98
   11de4:	str	r5, [r4, #148]	; 0x94
   11de8:	adc	r5, r5, #0
   11dec:	str	r6, [r4, #156]	; 0x9c
   11df0:	str	lr, [ip]
   11df4:	str	r5, [ip, #4]
   11df8:	bl	13944 <sprintf@plt+0x239c>
   11dfc:	mov	r0, r4
   11e00:	ldrd	r4, [sp]
   11e04:	ldrd	r6, [sp, #8]
   11e08:	ldr	r8, [sp, #16]
   11e0c:	add	sp, sp, #20
   11e10:	pop	{pc}		; (ldr pc, [sp], #4)
   11e14:	bl	11380 <free@plt>
   11e18:	mov	r4, #0
   11e1c:	b	11dfc <sprintf@plt+0x854>
   11e20:	bl	1147c <rb_outofmemory@plt>
   11e24:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11e28:	strd	r6, [sp, #8]
   11e2c:	mov	r7, r1
   11e30:	mov	r1, #160	; 0xa0
   11e34:	str	r8, [sp, #16]
   11e38:	mov	r8, r0
   11e3c:	mov	r0, #1
   11e40:	mov	r6, r2
   11e44:	str	lr, [sp, #20]
   11e48:	bl	112f0 <calloc@plt>
   11e4c:	subs	r4, r0, #0
   11e50:	beq	11f04 <sprintf@plt+0x95c>
   11e54:	add	r5, r4, #12
   11e58:	mov	r0, r8
   11e5c:	mov	r1, r5
   11e60:	bl	113c8 <rb_inet_pton_sock@plt>
   11e64:	subs	r3, r0, #0
   11e68:	beq	11ef4 <sprintf@plt+0x94c>
   11e6c:	ldrh	r3, [r4, #12]
   11e70:	cmp	r3, #2
   11e74:	moveq	r3, #82	; 0x52
   11e78:	streq	r3, [r4, #8]
   11e7c:	beq	11e90 <sprintf@plt+0x8e8>
   11e80:	cmp	r3, #10
   11e84:	bne	11ef4 <sprintf@plt+0x94c>
   11e88:	mov	r3, #83	; 0x53
   11e8c:	str	r3, [r4, #8]
   11e90:	movw	r3, #65400	; 0xff78
   11e94:	movt	r3, #2
   11e98:	str	r4, [r4]
   11e9c:	ldr	ip, [r3]
   11ea0:	movw	r1, #7140	; 0x1be4
   11ea4:	movt	r1, #1
   11ea8:	mov	r0, r5
   11eac:	ldr	r2, [r3, #4]
   11eb0:	str	r1, [r4, #4]
   11eb4:	mov	r1, r4
   11eb8:	adds	lr, ip, #1
   11ebc:	str	ip, [r4, #144]	; 0x90
   11ec0:	str	r7, [r4, #152]	; 0x98
   11ec4:	str	r2, [r4, #148]	; 0x94
   11ec8:	adc	r2, r2, #0
   11ecc:	str	r6, [r4, #156]	; 0x9c
   11ed0:	str	lr, [r3]
   11ed4:	str	r2, [r3, #4]
   11ed8:	bl	13a74 <sprintf@plt+0x24cc>
   11edc:	mov	r0, r4
   11ee0:	ldrd	r4, [sp]
   11ee4:	ldrd	r6, [sp, #8]
   11ee8:	ldr	r8, [sp, #16]
   11eec:	add	sp, sp, #20
   11ef0:	pop	{pc}		; (ldr pc, [sp], #4)
   11ef4:	mov	r0, r4
   11ef8:	mov	r4, #0
   11efc:	bl	11380 <free@plt>
   11f00:	b	11edc <sprintf@plt+0x934>
   11f04:	bl	1147c <rb_outofmemory@plt>
   11f08:	mov	r3, #0
   11f0c:	str	r3, [r0, #152]	; 0x98
   11f10:	str	r3, [r0, #156]	; 0x9c
   11f14:	bx	lr
   11f18:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11f1c:	mov	r4, r1
   11f20:	ldr	r5, [r1, #4]
   11f24:	strd	r6, [sp, #8]
   11f28:	str	r8, [sp, #16]
   11f2c:	str	lr, [sp, #20]
   11f30:	mov	r0, r5
   11f34:	bl	113d4 <strlen@plt>
   11f38:	add	r6, r0, #1
   11f3c:	mov	r0, r6
   11f40:	bl	114ac <malloc@plt>
   11f44:	subs	r7, r0, #0
   11f48:	beq	120c8 <sprintf@plt+0xb20>
   11f4c:	mov	r2, r6
   11f50:	mov	r1, r5
   11f54:	bl	113f8 <memcpy@plt>
   11f58:	ldr	r3, [r4, #8]
   11f5c:	ldr	r4, [r4, #12]
   11f60:	ldrb	r2, [r3]
   11f64:	sub	r3, r2, #52	; 0x34
   11f68:	cmp	r3, #31
   11f6c:	ldrls	pc, [pc, r3, lsl #2]
   11f70:	b	120e4 <sprintf@plt+0xb3c>
   11f74:	andeq	r2, r1, r8, lsr #1
   11f78:	andeq	r2, r1, r4, ror #1
   11f7c:	andeq	r2, r1, r4, lsr #32
   11f80:	andeq	r2, r1, r4, ror #1
   11f84:	andeq	r2, r1, r4, ror #1
   11f88:	andeq	r2, r1, r4, ror #1
   11f8c:	andeq	r2, r1, r4, ror #1
   11f90:	andeq	r2, r1, r4, ror #1
   11f94:	andeq	r2, r1, r4, ror #1
   11f98:	andeq	r2, r1, r4, ror #1
   11f9c:	andeq	r2, r1, r4, ror #1
   11fa0:	andeq	r2, r1, r4, ror #1
   11fa4:	andeq	r2, r1, r4, ror #1
   11fa8:	andeq	r2, r1, r4, ror #1
   11fac:	andeq	r2, r1, r4, ror #1
   11fb0:	andeq	r2, r1, r4, ror #1
   11fb4:	andeq	r2, r1, r4, ror #1
   11fb8:	andeq	r2, r1, r4, ror #1
   11fbc:	andeq	r2, r1, r4, ror #1
   11fc0:	andeq	r2, r1, r4, ror #1
   11fc4:	andeq	r2, r1, r4, ror #1
   11fc8:	andeq	r2, r1, r4, ror #1
   11fcc:	andeq	r2, r1, r4, ror #1
   11fd0:	andeq	r2, r1, r4, ror #1
   11fd4:	andeq	r2, r1, r4, ror #1
   11fd8:	andeq	r2, r1, r4, ror #1
   11fdc:	andeq	r2, r1, r4, ror #1
   11fe0:	andeq	r2, r1, r4, ror #1
   11fe4:	andeq	r2, r1, r4, ror #1
   11fe8:	andeq	r2, r1, r4, ror #1
   11fec:	strdeq	r1, [r1], -r4
   11ff0:	strdeq	r1, [r1], -r4
   11ff4:	mov	r2, r7
   11ff8:	mov	r0, r4
   11ffc:	movw	r1, #7352	; 0x1cb8
   12000:	movt	r1, #1
   12004:	bl	11e24 <sprintf@plt+0x87c>
   12008:	cmp	r0, #0
   1200c:	beq	120cc <sprintf@plt+0xb24>
   12010:	ldrd	r4, [sp]
   12014:	ldrd	r6, [sp, #8]
   12018:	ldr	r8, [sp, #16]
   1201c:	add	sp, sp, #20
   12020:	pop	{pc}		; (ldr pc, [sp], #4)
   12024:	mov	r1, #160	; 0xa0
   12028:	mov	r0, #1
   1202c:	bl	112f0 <calloc@plt>
   12030:	subs	r3, r0, #0
   12034:	movne	r1, #54	; 0x36
   12038:	movne	r2, #28
   1203c:	strne	r1, [r3, #8]
   12040:	beq	120c8 <sprintf@plt+0xb20>
   12044:	movw	ip, #65400	; 0xff78
   12048:	movt	ip, #2
   1204c:	ldr	r8, [sp, #16]
   12050:	mov	r0, r4
   12054:	movw	r5, #7352	; 0x1cb8
   12058:	movt	r5, #1
   1205c:	ldr	lr, [ip]
   12060:	movw	r1, #6840	; 0x1ab8
   12064:	movt	r1, #1
   12068:	str	r3, [r3]
   1206c:	ldr	r4, [ip, #4]
   12070:	str	r1, [r3, #4]
   12074:	mov	r1, r3
   12078:	str	lr, [r3, #144]	; 0x90
   1207c:	adds	lr, lr, #1
   12080:	str	r7, [r3, #156]	; 0x9c
   12084:	strd	r4, [r3, #148]	; 0x94
   12088:	adc	r4, r4, #0
   1208c:	str	lr, [ip]
   12090:	str	r4, [ip, #4]
   12094:	ldrd	r4, [sp]
   12098:	ldrd	r6, [sp, #8]
   1209c:	ldr	lr, [sp, #20]
   120a0:	add	sp, sp, #24
   120a4:	b	13944 <sprintf@plt+0x239c>
   120a8:	mov	r1, #160	; 0xa0
   120ac:	mov	r0, #1
   120b0:	bl	112f0 <calloc@plt>
   120b4:	subs	r3, r0, #0
   120b8:	movne	r1, #52	; 0x34
   120bc:	movne	r2, #1
   120c0:	strne	r1, [r3, #8]
   120c4:	bne	12044 <sprintf@plt+0xa9c>
   120c8:	bl	1147c <rb_outofmemory@plt>
   120cc:	mov	r0, #67	; 0x43
   120d0:	movw	r1, #39080	; 0x98a8
   120d4:	movt	r1, #1
   120d8:	bl	122bc <sprintf@plt+0xd14>
   120dc:	mov	r0, #2
   120e0:	bl	11590 <exit@plt>
   120e4:	mov	r0, #67	; 0x43
   120e8:	movw	r1, #39152	; 0x98f0
   120ec:	movt	r1, #1
   120f0:	bl	122bc <sprintf@plt+0xd14>
   120f4:	mov	r0, #2
   120f8:	bl	11590 <exit@plt>
   120fc:	strd	r4, [sp, #-36]!	; 0xffffffdc
   12100:	strd	r6, [sp, #8]
   12104:	strd	r8, [sp, #16]
   12108:	movw	r9, #65492	; 0xffd4
   1210c:	movt	r9, #2
   12110:	ldr	r3, [r9]
   12114:	strd	sl, [sp, #24]
   12118:	mov	fp, r1
   1211c:	str	lr, [sp, #32]
   12120:	sub	sp, sp, #612	; 0x264
   12124:	str	r0, [sp, #4]
   12128:	cmp	r3, #0
   1212c:	beq	12224 <sprintf@plt+0xc7c>
   12130:	addle	r8, sp, #68	; 0x44
   12134:	ble	121c4 <sprintf@plt+0xc1c>
   12138:	mov	r7, #0
   1213c:	movw	r6, #660	; 0x294
   12140:	movt	r6, #3
   12144:	movw	sl, #39288	; 0x9978
   12148:	movt	sl, #1
   1214c:	mov	r4, r7
   12150:	mov	r2, #53	; 0x35
   12154:	add	r1, sp, #12
   12158:	mov	r0, r6
   1215c:	bl	114d0 <rb_inet_ntop_sock@plt>
   12160:	ldrb	r3, [sp, #12]
   12164:	cmp	r3, #0
   12168:	beq	121f8 <sprintf@plt+0xc50>
   1216c:	add	r0, sp, #12
   12170:	add	r8, sp, #68	; 0x44
   12174:	bl	113d4 <strlen@plt>
   12178:	mov	r5, r0
   1217c:	add	r3, sp, #12
   12180:	add	r0, r8, r4
   12184:	rsb	r1, r4, #540	; 0x21c
   12188:	mov	r2, sl
   1218c:	add	r7, r7, #1
   12190:	bl	1153c <snprintf@plt>
   12194:	ldr	r3, [r9]
   12198:	add	r5, r5, #1
   1219c:	add	r6, r6, #128	; 0x80
   121a0:	add	r4, r4, r5
   121a4:	cmp	r3, r7
   121a8:	bgt	12150 <sprintf@plt+0xba8>
   121ac:	cmp	r4, #0
   121b0:	beq	121c4 <sprintf@plt+0xc1c>
   121b4:	add	r3, sp, #608	; 0x260
   121b8:	add	r4, r3, r4
   121bc:	mov	r3, #0
   121c0:	strb	r3, [r4, #-541]	; 0xfffffde3
   121c4:	ldr	r0, [sp, #4]
   121c8:	mov	r3, r8
   121cc:	mov	r1, fp
   121d0:	movw	r2, #42076	; 0xa45c
   121d4:	movt	r2, #1
   121d8:	bl	12324 <sprintf@plt+0xd7c>
   121dc:	add	sp, sp, #612	; 0x264
   121e0:	ldrd	r4, [sp]
   121e4:	ldrd	r6, [sp, #8]
   121e8:	ldrd	r8, [sp, #16]
   121ec:	ldrd	sl, [sp, #24]
   121f0:	add	sp, sp, #32
   121f4:	pop	{pc}		; (ldr pc, [sp], #4)
   121f8:	mov	r0, #67	; 0x43
   121fc:	movw	r1, #39244	; 0x994c
   12200:	movt	r1, #1
   12204:	bl	122bc <sprintf@plt+0xd14>
   12208:	mov	r1, fp
   1220c:	movw	r2, #39268	; 0x9964
   12210:	movt	r2, #1
   12214:	ldr	r0, [sp, #4]
   12218:	bl	123a0 <sprintf@plt+0xdf8>
   1221c:	mov	r0, #2
   12220:	bl	11590 <exit@plt>
   12224:	mov	r0, #67	; 0x43
   12228:	movw	r1, #39204	; 0x9924
   1222c:	movt	r1, #1
   12230:	bl	122bc <sprintf@plt+0xd14>
   12234:	mov	r1, fp
   12238:	movw	r2, #39228	; 0x993c
   1223c:	movt	r2, #1
   12240:	ldr	r0, [sp, #4]
   12244:	bl	123a0 <sprintf@plt+0xdf8>
   12248:	mov	r0, #2
   1224c:	bl	11590 <exit@plt>
   12250:	b	13864 <sprintf@plt+0x22bc>
   12254:	push	{r1, r2, r3}
   12258:	mov	r1, #512	; 0x200
   1225c:	str	r4, [sp, #-8]!
   12260:	mov	r4, r0
   12264:	str	lr, [sp, #4]
   12268:	sub	sp, sp, #524	; 0x20c
   1226c:	add	ip, sp, #536	; 0x218
   12270:	add	r0, sp, #8
   12274:	ldr	r2, [sp, #532]	; 0x214
   12278:	mov	r3, ip
   1227c:	str	ip, [sp, #4]
   12280:	bl	11290 <vsnprintf@plt>
   12284:	movw	r1, #49012	; 0xbf74
   12288:	movt	r1, #2
   1228c:	ldr	r0, [r1]
   12290:	add	r3, sp, #8
   12294:	mov	r2, r4
   12298:	movw	r1, #39292	; 0x997c
   1229c:	movt	r1, #1
   122a0:	bl	1150c <rb_helper_write@plt>
   122a4:	add	sp, sp, #524	; 0x20c
   122a8:	ldr	r4, [sp]
   122ac:	ldr	lr, [sp, #4]
   122b0:	add	sp, sp, #8
   122b4:	add	sp, sp, #12
   122b8:	bx	lr
   122bc:	push	{r1, r2, r3}
   122c0:	mov	r1, #512	; 0x200
   122c4:	str	r4, [sp, #-8]!
   122c8:	mov	r4, r0
   122cc:	str	lr, [sp, #4]
   122d0:	sub	sp, sp, #524	; 0x20c
   122d4:	add	ip, sp, #536	; 0x218
   122d8:	add	r0, sp, #8
   122dc:	ldr	r2, [sp, #532]	; 0x214
   122e0:	mov	r3, ip
   122e4:	str	ip, [sp, #4]
   122e8:	bl	11290 <vsnprintf@plt>
   122ec:	movw	r1, #49012	; 0xbf74
   122f0:	movt	r1, #2
   122f4:	ldr	r0, [r1]
   122f8:	add	r3, sp, #8
   122fc:	mov	r2, r4
   12300:	movw	r1, #39304	; 0x9988
   12304:	movt	r1, #1
   12308:	bl	1150c <rb_helper_write@plt>
   1230c:	add	sp, sp, #524	; 0x20c
   12310:	ldr	r4, [sp]
   12314:	ldr	lr, [sp, #4]
   12318:	add	sp, sp, #8
   1231c:	add	sp, sp, #12
   12320:	bx	lr
   12324:	push	{r2, r3}
   12328:	strd	r4, [sp, #-16]!
   1232c:	mov	r5, r0
   12330:	str	r6, [sp, #8]
   12334:	mov	r6, r1
   12338:	mov	r1, #512	; 0x200
   1233c:	str	lr, [sp, #12]
   12340:	sub	sp, sp, #528	; 0x210
   12344:	add	ip, sp, #548	; 0x224
   12348:	add	r4, sp, #16
   1234c:	ldr	r2, [sp, #544]	; 0x220
   12350:	mov	r3, ip
   12354:	mov	r0, r4
   12358:	str	ip, [sp, #12]
   1235c:	bl	11290 <vsnprintf@plt>
   12360:	movw	r1, #49012	; 0xbf74
   12364:	movt	r1, #2
   12368:	str	r4, [sp]
   1236c:	ldr	r0, [r1]
   12370:	mov	r3, r6
   12374:	mov	r2, r5
   12378:	movw	r1, #39316	; 0x9994
   1237c:	movt	r1, #1
   12380:	bl	1150c <rb_helper_write@plt>
   12384:	add	sp, sp, #528	; 0x210
   12388:	ldrd	r4, [sp]
   1238c:	ldr	r6, [sp, #8]
   12390:	ldr	lr, [sp, #12]
   12394:	add	sp, sp, #16
   12398:	add	sp, sp, #8
   1239c:	bx	lr
   123a0:	push	{r2, r3}
   123a4:	strd	r4, [sp, #-16]!
   123a8:	mov	r5, r0
   123ac:	str	r6, [sp, #8]
   123b0:	mov	r6, r1
   123b4:	mov	r1, #512	; 0x200
   123b8:	str	lr, [sp, #12]
   123bc:	sub	sp, sp, #528	; 0x210
   123c0:	add	ip, sp, #548	; 0x224
   123c4:	add	r4, sp, #16
   123c8:	ldr	r2, [sp, #544]	; 0x220
   123cc:	mov	r3, ip
   123d0:	mov	r0, r4
   123d4:	str	ip, [sp, #12]
   123d8:	bl	11290 <vsnprintf@plt>
   123dc:	movw	r1, #49012	; 0xbf74
   123e0:	movt	r1, #2
   123e4:	str	r4, [sp]
   123e8:	ldr	r0, [r1]
   123ec:	mov	r3, r6
   123f0:	mov	r2, r5
   123f4:	movw	r1, #39328	; 0x99a0
   123f8:	movt	r1, #1
   123fc:	bl	1150c <rb_helper_write@plt>
   12400:	add	sp, sp, #528	; 0x210
   12404:	ldrd	r4, [sp]
   12408:	ldr	r6, [sp, #8]
   1240c:	ldr	lr, [sp, #12]
   12410:	add	sp, sp, #16
   12414:	add	sp, sp, #8
   12418:	bx	lr
   1241c:	movw	ip, #49012	; 0xbf74
   12420:	movt	ip, #2
   12424:	mov	r3, r1
   12428:	mov	r2, r0
   1242c:	ldr	r0, [ip]
   12430:	movw	r1, #39340	; 0x99ac
   12434:	movt	r1, #1
   12438:	b	1150c <rb_helper_write@plt>
   1243c:	sub	r0, r1, r0
   12440:	bx	lr
   12444:	strd	r4, [sp, #-24]!	; 0xffffffe8
   12448:	movw	r5, #368	; 0x170
   1244c:	movt	r5, #3
   12450:	strd	r6, [sp, #8]
   12454:	movw	r7, #372	; 0x174
   12458:	movt	r7, #3
   1245c:	str	r8, [sp, #16]
   12460:	str	lr, [sp, #20]
   12464:	sub	sp, sp, #8
   12468:	bl	113e0 <rb_current_time@plt>
   1246c:	mov	r6, r0
   12470:	mov	r1, sp
   12474:	ldr	r0, [r5]
   12478:	bl	113bc <rb_dictionary_foreach_start@plt>
   1247c:	mov	r1, sp
   12480:	ldr	r0, [r5]
   12484:	bl	112d8 <rb_dictionary_foreach_cur@plt>
   12488:	subs	r8, r0, #0
   1248c:	beq	12550 <sprintf@plt+0xfa8>
   12490:	ldr	r3, [r8, #460]	; 0x1cc
   12494:	ldr	r4, [r7]
   12498:	add	r2, r3, #1
   1249c:	cmp	r4, #0
   124a0:	str	r2, [r8, #460]	; 0x1cc
   124a4:	bne	124b8 <sprintf@plt+0xf10>
   124a8:	b	1250c <sprintf@plt+0xf64>
   124ac:	ldr	r4, [r4, #8]
   124b0:	cmp	r4, #0
   124b4:	beq	12504 <sprintf@plt+0xf5c>
   124b8:	ldr	r2, [r4]
   124bc:	ldr	r3, [r8, #464]	; 0x1d0
   124c0:	ldr	r1, [r2, #12]
   124c4:	add	r3, r3, r1, lsl #4
   124c8:	ldr	r1, [r3, #12]
   124cc:	cmp	r1, #1
   124d0:	bne	124ac <sprintf@plt+0xf04>
   124d4:	ldr	r2, [r2, #40]	; 0x28
   124d8:	cmp	r2, #0
   124dc:	beq	124ac <sprintf@plt+0xf04>
   124e0:	ldr	r3, [r3, #4]
   124e4:	mov	r0, r8
   124e8:	cmp	r3, #0
   124ec:	cmpgt	r6, r3
   124f0:	ble	124ac <sprintf@plt+0xf04>
   124f4:	blx	r2
   124f8:	ldr	r4, [r4, #8]
   124fc:	cmp	r4, #0
   12500:	bne	124b8 <sprintf@plt+0xf10>
   12504:	ldr	r3, [r8, #460]	; 0x1cc
   12508:	sub	r3, r3, #1
   1250c:	cmp	r3, #0
   12510:	str	r3, [r8, #460]	; 0x1cc
   12514:	ldr	r0, [r5]
   12518:	beq	12528 <sprintf@plt+0xf80>
   1251c:	mov	r1, sp
   12520:	bl	11374 <rb_dictionary_foreach_next@plt>
   12524:	b	1247c <sprintf@plt+0xed4>
   12528:	ldr	r1, [r8]
   1252c:	bl	113ec <rb_dictionary_delete@plt>
   12530:	ldr	r0, [r8, #464]	; 0x1d0
   12534:	cmp	r0, #0
   12538:	beq	12540 <sprintf@plt+0xf98>
   1253c:	bl	11380 <free@plt>
   12540:	mov	r0, r8
   12544:	bl	11380 <free@plt>
   12548:	ldr	r0, [r5]
   1254c:	b	1251c <sprintf@plt+0xf74>
   12550:	add	sp, sp, #8
   12554:	ldrd	r4, [sp]
   12558:	ldrd	r6, [sp, #8]
   1255c:	ldr	r8, [sp, #16]
   12560:	add	sp, sp, #20
   12564:	pop	{pc}		; (ldr pc, [sp], #4)
   12568:	push	{r3}		; (str r3, [sp, #-4]!)
   1256c:	mov	r1, #512	; 0x200
   12570:	movw	r2, #39360	; 0x99c0
   12574:	movt	r2, #1
   12578:	strd	r4, [sp, #-12]!
   1257c:	mov	r4, r0
   12580:	str	lr, [sp, #8]
   12584:	sub	sp, sp, #536	; 0x218
   12588:	add	ip, sp, #552	; 0x228
   1258c:	add	r5, sp, #24
   12590:	mov	r3, ip
   12594:	mov	r0, r5
   12598:	str	ip, [sp, #20]
   1259c:	bl	11290 <vsnprintf@plt>
   125a0:	mov	ip, r4
   125a4:	str	r5, [sp, #12]
   125a8:	add	r1, r4, #440	; 0x1b8
   125ac:	ldr	r2, [ip], #376	; 0x178
   125b0:	movw	r3, #39452	; 0x9a1c
   125b4:	movt	r3, #1
   125b8:	movw	r0, #49012	; 0xbf74
   125bc:	movt	r0, #2
   125c0:	str	r1, [sp]
   125c4:	movw	r1, #39428	; 0x9a04
   125c8:	movt	r1, #1
   125cc:	str	r3, [sp, #8]
   125d0:	mov	r3, #42	; 0x2a
   125d4:	ldr	r0, [r0]
   125d8:	str	ip, [sp, #4]
   125dc:	bl	1150c <rb_helper_write@plt>
   125e0:	ldrb	r3, [r4, #452]	; 0x1c4
   125e4:	cmp	r3, #0
   125e8:	bne	12650 <sprintf@plt+0x10a8>
   125ec:	ldr	r3, [r4, #456]	; 0x1c8
   125f0:	mov	r2, #1
   125f4:	strb	r2, [r4, #452]	; 0x1c4
   125f8:	cmp	r3, #0
   125fc:	beq	12650 <sprintf@plt+0x10a8>
   12600:	movw	r3, #372	; 0x174
   12604:	movt	r3, #3
   12608:	ldr	r5, [r3]
   1260c:	cmp	r5, #0
   12610:	beq	12650 <sprintf@plt+0x10a8>
   12614:	ldr	r3, [r5]
   12618:	ldr	r2, [r3, #36]	; 0x24
   1261c:	cmp	r2, #0
   12620:	beq	12644 <sprintf@plt+0x109c>
   12624:	ldr	r1, [r3, #12]
   12628:	ldr	r3, [r4, #464]	; 0x1d0
   1262c:	add	r3, r3, r1, lsl #4
   12630:	ldr	r3, [r3, #12]
   12634:	cmp	r3, #1
   12638:	bne	12644 <sprintf@plt+0x109c>
   1263c:	mov	r0, r4
   12640:	blx	r2
   12644:	ldr	r5, [r5, #8]
   12648:	cmp	r5, #0
   1264c:	bne	12614 <sprintf@plt+0x106c>
   12650:	add	sp, sp, #536	; 0x218
   12654:	ldrd	r4, [sp]
   12658:	ldr	lr, [sp, #8]
   1265c:	add	sp, sp, #12
   12660:	add	sp, sp, #4
   12664:	bx	lr
   12668:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1266c:	movw	r5, #39452	; 0x9a1c
   12670:	movt	r5, #1
   12674:	strd	r6, [sp, #8]
   12678:	movw	r6, #368	; 0x170
   1267c:	movt	r6, #3
   12680:	str	r8, [sp, #16]
   12684:	movw	r7, #39360	; 0x99c0
   12688:	movt	r7, #1
   1268c:	str	lr, [sp, #20]
   12690:	sub	sp, sp, #8
   12694:	mov	r1, sp
   12698:	ldr	r0, [r6]
   1269c:	bl	113bc <rb_dictionary_foreach_start@plt>
   126a0:	b	126b0 <sprintf@plt+0x1108>
   126a4:	mov	r1, sp
   126a8:	ldr	r0, [r6]
   126ac:	bl	11374 <rb_dictionary_foreach_next@plt>
   126b0:	mov	r1, sp
   126b4:	ldr	r0, [r6]
   126b8:	bl	112d8 <rb_dictionary_foreach_cur@plt>
   126bc:	subs	r4, r0, #0
   126c0:	mov	r3, r7
   126c4:	mov	r2, r5
   126c8:	mvn	r1, #0
   126cc:	beq	1271c <sprintf@plt+0x1174>
   126d0:	ldr	ip, [r4, #460]	; 0x1cc
   126d4:	add	ip, ip, #1
   126d8:	str	ip, [r4, #460]	; 0x1cc
   126dc:	bl	12568 <sprintf@plt+0xfc0>
   126e0:	ldr	r3, [r4, #460]	; 0x1cc
   126e4:	sub	r3, r3, #1
   126e8:	cmp	r3, #0
   126ec:	str	r3, [r4, #460]	; 0x1cc
   126f0:	bne	126a4 <sprintf@plt+0x10fc>
   126f4:	ldr	r1, [r4]
   126f8:	ldr	r0, [r6]
   126fc:	bl	113ec <rb_dictionary_delete@plt>
   12700:	ldr	r3, [r4, #464]	; 0x1d0
   12704:	subs	r0, r3, #0
   12708:	beq	12710 <sprintf@plt+0x1168>
   1270c:	bl	11380 <free@plt>
   12710:	mov	r0, r4
   12714:	bl	11380 <free@plt>
   12718:	b	126a4 <sprintf@plt+0x10fc>
   1271c:	movw	r8, #372	; 0x174
   12720:	movt	r8, #3
   12724:	ldr	r5, [r8]
   12728:	cmp	r5, #0
   1272c:	beq	127b4 <sprintf@plt+0x120c>
   12730:	ldr	r7, [r5, #8]
   12734:	ldr	r3, [r5]
   12738:	ldr	r3, [r3, #28]
   1273c:	cmp	r3, #0
   12740:	moveq	r2, r7
   12744:	beq	12750 <sprintf@plt+0x11a8>
   12748:	blx	r3
   1274c:	ldr	r2, [r5, #8]
   12750:	cmp	r2, #0
   12754:	ldr	r3, [r5, #4]
   12758:	ldr	r1, [r8, #8]
   1275c:	strne	r3, [r2, #4]
   12760:	ldrne	r3, [r5, #4]
   12764:	streq	r3, [r8, #4]
   12768:	cmp	r3, #0
   1276c:	beq	12798 <sprintf@plt+0x11f0>
   12770:	str	r2, [r3, #8]
   12774:	sub	r3, r1, #1
   12778:	cmp	r7, #0
   1277c:	str	r4, [r5, #4]
   12780:	str	r4, [r5, #8]
   12784:	str	r3, [r8, #8]
   12788:	beq	127b4 <sprintf@plt+0x120c>
   1278c:	mov	r5, r7
   12790:	ldr	r7, [r7, #8]
   12794:	b	12734 <sprintf@plt+0x118c>
   12798:	str	r3, [r5, #4]
   1279c:	cmp	r7, #0
   127a0:	str	r3, [r5, #8]
   127a4:	sub	r3, r1, #1
   127a8:	str	r2, [r8]
   127ac:	str	r3, [r8, #8]
   127b0:	bne	1278c <sprintf@plt+0x11e4>
   127b4:	mov	r2, #0
   127b8:	ldr	r0, [r6]
   127bc:	mov	r1, r2
   127c0:	bl	11434 <rb_dictionary_destroy@plt>
   127c4:	movw	r3, #65408	; 0xff80
   127c8:	movt	r3, #2
   127cc:	ldr	r0, [r3]
   127d0:	bl	11260 <rb_event_delete@plt>
   127d4:	add	sp, sp, #8
   127d8:	ldrd	r4, [sp]
   127dc:	ldrd	r6, [sp, #8]
   127e0:	ldr	r8, [sp, #16]
   127e4:	add	sp, sp, #20
   127e8:	pop	{pc}		; (ldr pc, [sp], #4)
   127ec:	movw	r3, #65408	; 0xff80
   127f0:	movt	r3, #2
   127f4:	strd	r4, [sp, #-16]!
   127f8:	ldr	r2, [r3, #12]
   127fc:	mov	r5, r0
   12800:	str	r6, [sp, #8]
   12804:	str	lr, [sp, #12]
   12808:	cmp	r2, #0
   1280c:	bne	128d8 <sprintf@plt+0x1330>
   12810:	ldr	r2, [r3, #16]
   12814:	cmn	r2, #1
   12818:	cmpne	r2, #32
   1281c:	addne	r1, r2, #1
   12820:	strne	r2, [r0, #12]
   12824:	strne	r1, [r3, #16]
   12828:	beq	12938 <sprintf@plt+0x1390>
   1282c:	ldr	r4, [r5, #56]	; 0x38
   12830:	cmp	r4, #0
   12834:	beq	12864 <sprintf@plt+0x12bc>
   12838:	ldr	r1, [r4]
   1283c:	cmp	r1, #0
   12840:	beq	12864 <sprintf@plt+0x12bc>
   12844:	movw	r6, #364	; 0x16c
   12848:	movt	r6, #3
   1284c:	mov	r2, r4
   12850:	ldr	r0, [r6]
   12854:	bl	11494 <rb_dictionary_add@plt>
   12858:	ldr	r1, [r4, #12]!
   1285c:	cmp	r1, #0
   12860:	bne	1284c <sprintf@plt+0x12a4>
   12864:	ldrb	r3, [r5, #48]	; 0x30
   12868:	cmp	r3, #0
   1286c:	bne	128c4 <sprintf@plt+0x131c>
   12870:	ldr	r3, [r5, #24]
   12874:	cmp	r3, #0
   12878:	beq	12880 <sprintf@plt+0x12d8>
   1287c:	blx	r3
   12880:	movw	r3, #372	; 0x174
   12884:	movt	r3, #3
   12888:	ldr	r2, [r3]
   1288c:	mov	r1, #0
   12890:	str	r5, [r5]
   12894:	cmp	r2, r1
   12898:	stmib	r5, {r1, r2}
   1289c:	strne	r5, [r2, #4]
   128a0:	beq	12928 <sprintf@plt+0x1380>
   128a4:	ldr	r2, [r3, #8]
   128a8:	ldr	r6, [sp, #8]
   128ac:	str	r5, [r3]
   128b0:	ldrd	r4, [sp]
   128b4:	add	sp, sp, #12
   128b8:	add	r2, r2, #1
   128bc:	str	r2, [r3, #8]
   128c0:	pop	{pc}		; (ldr pc, [sp], #4)
   128c4:	ldr	r1, [r5, #52]	; 0x34
   128c8:	movw	r2, #47456	; 0xb960
   128cc:	movt	r2, #2
   128d0:	str	r1, [r2, r3, lsl #2]
   128d4:	b	12870 <sprintf@plt+0x12c8>
   128d8:	ldr	r1, [r3, #4]
   128dc:	sub	r2, r2, #1
   128e0:	ldr	lr, [r1]
   128e4:	ldr	r0, [r1, #8]
   128e8:	ldr	ip, [r1, #4]
   128ec:	str	lr, [r5, #12]
   128f0:	cmp	r0, #0
   128f4:	strne	ip, [r0, #4]
   128f8:	ldrne	ip, [r1, #4]
   128fc:	streq	ip, [r3, #8]
   12900:	cmp	ip, #0
   12904:	strne	r0, [ip, #8]
   12908:	mov	ip, #0
   1290c:	movne	r0, r1
   12910:	streq	r0, [r3, #4]
   12914:	str	ip, [r1, #4]
   12918:	str	ip, [r1, #8]
   1291c:	str	r2, [r3, #12]
   12920:	bl	11404 <rb_free_rb_dlink_node@plt>
   12924:	b	1282c <sprintf@plt+0x1284>
   12928:	ldr	r2, [r3, #4]
   1292c:	cmp	r2, #0
   12930:	streq	r5, [r3, #4]
   12934:	b	128a4 <sprintf@plt+0x12fc>
   12938:	movw	r1, #39460	; 0x9a24
   1293c:	movt	r1, #1
   12940:	ldrd	r4, [sp]
   12944:	mov	r0, #87	; 0x57
   12948:	ldr	r6, [sp, #8]
   1294c:	ldr	lr, [sp, #12]
   12950:	add	sp, sp, #16
   12954:	b	122bc <sprintf@plt+0xd14>
   12958:	movw	r1, #9276	; 0x243c
   1295c:	movt	r1, #1
   12960:	str	r4, [sp, #-8]!
   12964:	movw	r0, #39508	; 0x9a54
   12968:	movt	r0, #1
   1296c:	str	lr, [sp, #4]
   12970:	bl	114e8 <rb_dictionary_create@plt>
   12974:	movw	ip, #368	; 0x170
   12978:	movt	ip, #3
   1297c:	mov	r2, #0
   12980:	mov	r3, #1
   12984:	movw	r1, #9284	; 0x2444
   12988:	movt	r1, #1
   1298c:	str	r0, [ip]
   12990:	movw	r0, #39532	; 0x9a6c
   12994:	movt	r0, #1
   12998:	bl	1120c <rb_event_addish@plt>
   1299c:	movw	r3, #65408	; 0xff80
   129a0:	movt	r3, #2
   129a4:	str	r0, [r3]
   129a8:	movw	r0, #48484	; 0xbd64
   129ac:	movt	r0, #2
   129b0:	bl	127ec <sprintf@plt+0x1244>
   129b4:	movw	r0, #48796	; 0xbe9c
   129b8:	movt	r0, #2
   129bc:	bl	127ec <sprintf@plt+0x1244>
   129c0:	movw	r0, #48712	; 0xbe48
   129c4:	movt	r0, #2
   129c8:	bl	127ec <sprintf@plt+0x1244>
   129cc:	movw	r0, #48612	; 0xbde4
   129d0:	movt	r0, #2
   129d4:	ldr	r4, [sp]
   129d8:	ldr	lr, [sp, #4]
   129dc:	add	sp, sp, #8
   129e0:	b	127ec <sprintf@plt+0x1244>
   129e4:	strd	r4, [sp, #-16]!
   129e8:	mov	r5, r0
   129ec:	ldr	r4, [r0, #56]	; 0x38
   129f0:	str	r6, [sp, #8]
   129f4:	str	lr, [sp, #12]
   129f8:	cmp	r4, #0
   129fc:	beq	12a28 <sprintf@plt+0x1480>
   12a00:	ldr	r1, [r4]
   12a04:	cmp	r1, #0
   12a08:	beq	12a28 <sprintf@plt+0x1480>
   12a0c:	movw	r6, #364	; 0x16c
   12a10:	movt	r6, #3
   12a14:	ldr	r0, [r6]
   12a18:	bl	113ec <rb_dictionary_delete@plt>
   12a1c:	ldr	r1, [r4, #12]!
   12a20:	cmp	r1, #0
   12a24:	bne	12a14 <sprintf@plt+0x146c>
   12a28:	ldrb	r3, [r5, #48]	; 0x30
   12a2c:	cmp	r3, #0
   12a30:	bne	12ae4 <sprintf@plt+0x153c>
   12a34:	ldr	r3, [r5, #28]
   12a38:	cmp	r3, #0
   12a3c:	beq	12a44 <sprintf@plt+0x149c>
   12a40:	blx	r3
   12a44:	ldr	r2, [r5, #4]
   12a48:	ldr	r1, [r5, #8]
   12a4c:	cmp	r1, #0
   12a50:	beq	12b08 <sprintf@plt+0x1560>
   12a54:	str	r2, [r1, #4]
   12a58:	movw	r3, #372	; 0x174
   12a5c:	movt	r3, #3
   12a60:	ldr	r2, [r5, #4]
   12a64:	cmp	r2, #0
   12a68:	mov	r4, #0
   12a6c:	ldr	r6, [r5, #12]
   12a70:	strne	r1, [r2, #8]
   12a74:	ldr	r2, [r3, #8]
   12a78:	str	r4, [r5, #4]
   12a7c:	str	r4, [r5, #8]
   12a80:	streq	r1, [r3]
   12a84:	sub	r2, r2, #1
   12a88:	str	r2, [r3, #8]
   12a8c:	bl	11530 <rb_make_rb_dlink_node@plt>
   12a90:	cmp	r6, r4
   12a94:	beq	12b38 <sprintf@plt+0x1590>
   12a98:	cmp	r0, #0
   12a9c:	beq	12b18 <sprintf@plt+0x1570>
   12aa0:	movw	r3, #65408	; 0xff80
   12aa4:	movt	r3, #2
   12aa8:	str	r4, [r0, #4]
   12aac:	ldr	r2, [r3, #4]
   12ab0:	str	r6, [r0]
   12ab4:	cmp	r2, #0
   12ab8:	str	r2, [r0, #8]
   12abc:	strne	r0, [r2, #4]
   12ac0:	beq	12af8 <sprintf@plt+0x1550>
   12ac4:	ldr	r2, [r3, #12]
   12ac8:	ldrd	r4, [sp]
   12acc:	ldr	r6, [sp, #8]
   12ad0:	add	sp, sp, #12
   12ad4:	add	r2, r2, #1
   12ad8:	str	r0, [r3, #4]
   12adc:	str	r2, [r3, #12]
   12ae0:	pop	{pc}		; (ldr pc, [sp], #4)
   12ae4:	movw	r2, #47456	; 0xb960
   12ae8:	movt	r2, #2
   12aec:	mov	r1, #0
   12af0:	str	r1, [r2, r3, lsl #2]
   12af4:	b	12a34 <sprintf@plt+0x148c>
   12af8:	ldr	r2, [r3, #8]
   12afc:	cmp	r2, #0
   12b00:	streq	r0, [r3, #8]
   12b04:	b	12ac4 <sprintf@plt+0x151c>
   12b08:	movw	r3, #372	; 0x174
   12b0c:	movt	r3, #3
   12b10:	str	r2, [r3, #4]
   12b14:	b	12a64 <sprintf@plt+0x14bc>
   12b18:	movw	r3, #39348	; 0x99b4
   12b1c:	movt	r3, #1
   12b20:	movw	r1, #39556	; 0x9a84
   12b24:	movt	r1, #1
   12b28:	movw	r0, #39600	; 0x9ab0
   12b2c:	movt	r0, #1
   12b30:	mov	r2, #144	; 0x90
   12b34:	bl	11350 <__assert_fail@plt>
   12b38:	movw	r3, #39348	; 0x99b4
   12b3c:	movt	r3, #1
   12b40:	movw	r1, #39556	; 0x9a84
   12b44:	movt	r1, #1
   12b48:	movw	r0, #39584	; 0x9aa0
   12b4c:	movt	r0, #1
   12b50:	mov	r2, #143	; 0x8f
   12b54:	bl	11350 <__assert_fail@plt>
   12b58:	movw	r3, #368	; 0x170
   12b5c:	movt	r3, #3
   12b60:	str	r4, [sp, #-8]!
   12b64:	mov	r4, r0
   12b68:	ldr	r1, [r0]
   12b6c:	ldr	r0, [r3]
   12b70:	str	lr, [sp, #4]
   12b74:	bl	113ec <rb_dictionary_delete@plt>
   12b78:	ldr	r0, [r4, #464]	; 0x1d0
   12b7c:	cmp	r0, #0
   12b80:	beq	12b88 <sprintf@plt+0x15e0>
   12b84:	bl	11380 <free@plt>
   12b88:	mov	r0, r4
   12b8c:	ldr	r4, [sp]
   12b90:	ldr	lr, [sp, #4]
   12b94:	add	sp, sp, #8
   12b98:	b	11380 <free@plt>
   12b9c:	ldrb	r3, [r0, #452]	; 0x1c4
   12ba0:	cmp	r3, #0
   12ba4:	bxne	lr
   12ba8:	mov	r2, #1
   12bac:	ldr	r3, [r0, #456]	; 0x1c8
   12bb0:	strb	r2, [r0, #452]	; 0x1c4
   12bb4:	cmp	r3, #0
   12bb8:	bxeq	lr
   12bbc:	movw	r3, #372	; 0x174
   12bc0:	movt	r3, #3
   12bc4:	strd	r4, [sp, #-16]!
   12bc8:	ldr	r4, [r3]
   12bcc:	mov	r5, r0
   12bd0:	str	r6, [sp, #8]
   12bd4:	str	lr, [sp, #12]
   12bd8:	cmp	r4, #0
   12bdc:	beq	12c1c <sprintf@plt+0x1674>
   12be0:	ldr	r3, [r4]
   12be4:	ldr	r2, [r3, #36]	; 0x24
   12be8:	cmp	r2, #0
   12bec:	beq	12c10 <sprintf@plt+0x1668>
   12bf0:	ldr	r1, [r3, #12]
   12bf4:	ldr	r3, [r5, #464]	; 0x1d0
   12bf8:	add	r3, r3, r1, lsl #4
   12bfc:	ldr	r3, [r3, #12]
   12c00:	cmp	r3, #1
   12c04:	bne	12c10 <sprintf@plt+0x1668>
   12c08:	mov	r0, r5
   12c0c:	blx	r2
   12c10:	ldr	r4, [r4, #8]
   12c14:	cmp	r4, #0
   12c18:	bne	12be0 <sprintf@plt+0x1638>
   12c1c:	ldrd	r4, [sp]
   12c20:	ldr	r6, [sp, #8]
   12c24:	add	sp, sp, #12
   12c28:	pop	{pc}		; (ldr pc, [sp], #4)
   12c2c:	ldr	r3, [r0, #456]	; 0x1c8
   12c30:	strd	r4, [sp, #-16]!
   12c34:	mov	r5, r0
   12c38:	ldr	r2, [r0, #464]	; 0x1d0
   12c3c:	str	r6, [sp, #8]
   12c40:	mov	r6, r1
   12c44:	mov	r1, #2
   12c48:	str	lr, [sp, #12]
   12c4c:	sub	sp, sp, #8
   12c50:	sub	r3, r3, #1
   12c54:	cmp	r3, #0
   12c58:	add	r2, r2, r6, lsl #4
   12c5c:	str	r1, [r2, #12]
   12c60:	str	r3, [r0, #456]	; 0x1c8
   12c64:	bne	12c74 <sprintf@plt+0x16cc>
   12c68:	ldrb	r3, [r0, #451]	; 0x1c3
   12c6c:	cmp	r3, #0
   12c70:	beq	12cdc <sprintf@plt+0x1734>
   12c74:	movw	r3, #372	; 0x174
   12c78:	movt	r3, #3
   12c7c:	ldr	r4, [r3]
   12c80:	cmp	r4, #0
   12c84:	beq	12cc8 <sprintf@plt+0x1720>
   12c88:	ldr	r3, [r4]
   12c8c:	ldr	r2, [r3, #44]	; 0x2c
   12c90:	cmp	r2, #0
   12c94:	beq	12cbc <sprintf@plt+0x1714>
   12c98:	ldr	r1, [r3, #12]
   12c9c:	ldr	r3, [r5, #464]	; 0x1d0
   12ca0:	add	r3, r3, r1, lsl #4
   12ca4:	ldr	r3, [r3, #12]
   12ca8:	cmp	r3, #1
   12cac:	bne	12cbc <sprintf@plt+0x1714>
   12cb0:	mov	r1, r6
   12cb4:	mov	r0, r5
   12cb8:	blx	r2
   12cbc:	ldr	r4, [r4, #8]
   12cc0:	cmp	r4, #0
   12cc4:	bne	12c88 <sprintf@plt+0x16e0>
   12cc8:	add	sp, sp, #8
   12ccc:	ldrd	r4, [sp]
   12cd0:	ldr	r6, [sp, #8]
   12cd4:	add	sp, sp, #12
   12cd8:	pop	{pc}		; (ldr pc, [sp], #4)
   12cdc:	mov	ip, r0
   12ce0:	movw	r0, #49012	; 0xbf74
   12ce4:	movt	r0, #2
   12ce8:	ldr	r2, [ip], #376	; 0x178
   12cec:	add	r3, r5, #440	; 0x1b8
   12cf0:	movw	r1, #39612	; 0x9abc
   12cf4:	movt	r1, #1
   12cf8:	ldr	r0, [r0]
   12cfc:	str	ip, [sp]
   12d00:	bl	1150c <rb_helper_write@plt>
   12d04:	ldrb	r3, [r5, #452]	; 0x1c4
   12d08:	cmp	r3, #0
   12d0c:	bne	12cc8 <sprintf@plt+0x1720>
   12d10:	ldr	r3, [r5, #456]	; 0x1c8
   12d14:	mov	r2, #1
   12d18:	strb	r2, [r5, #452]	; 0x1c4
   12d1c:	cmp	r3, #0
   12d20:	beq	12cc8 <sprintf@plt+0x1720>
   12d24:	movw	r3, #372	; 0x174
   12d28:	movt	r3, #3
   12d2c:	ldr	r4, [r3]
   12d30:	cmp	r4, #0
   12d34:	beq	12cc8 <sprintf@plt+0x1720>
   12d38:	ldr	r3, [r4]
   12d3c:	ldr	r2, [r3, #36]	; 0x24
   12d40:	cmp	r2, #0
   12d44:	beq	12d68 <sprintf@plt+0x17c0>
   12d48:	ldr	r1, [r3, #12]
   12d4c:	ldr	r3, [r5, #464]	; 0x1d0
   12d50:	add	r3, r3, r1, lsl #4
   12d54:	ldr	r3, [r3, #12]
   12d58:	cmp	r3, #1
   12d5c:	bne	12d68 <sprintf@plt+0x17c0>
   12d60:	mov	r0, r5
   12d64:	blx	r2
   12d68:	ldr	r4, [r4, #8]
   12d6c:	cmp	r4, #0
   12d70:	bne	12d38 <sprintf@plt+0x1790>
   12d74:	b	12cc8 <sprintf@plt+0x1720>
   12d78:	push	{r3}		; (str r3, [sp, #-4]!)
   12d7c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   12d80:	mov	r4, r0
   12d84:	mov	r5, r1
   12d88:	strd	r6, [sp, #8]
   12d8c:	mov	r1, #512	; 0x200
   12d90:	mov	r7, r2
   12d94:	str	r8, [sp, #16]
   12d98:	str	lr, [sp, #20]
   12d9c:	sub	sp, sp, #540	; 0x21c
   12da0:	add	ip, sp, #568	; 0x238
   12da4:	add	r6, sp, #24
   12da8:	ldr	r2, [sp, #564]	; 0x234
   12dac:	mov	r3, ip
   12db0:	mov	r0, r6
   12db4:	str	ip, [sp, #20]
   12db8:	bl	11290 <vsnprintf@plt>
   12dbc:	mov	r1, r4
   12dc0:	movw	r3, #49012	; 0xbf74
   12dc4:	movt	r3, #2
   12dc8:	cmn	r5, #1
   12dcc:	ldr	r2, [r1], #440	; 0x1b8
   12dd0:	add	ip, r4, #376	; 0x178
   12dd4:	ldr	r0, [r3]
   12dd8:	beq	12eb8 <sprintf@plt+0x1910>
   12ddc:	cmp	r7, #0
   12de0:	lsl	r8, r5, #4
   12de4:	ldr	r3, [r4, #464]	; 0x1d0
   12de8:	ldr	r3, [r3, r5, lsl #4]
   12dec:	ldrb	r3, [r3, #20]
   12df0:	beq	12ee0 <sprintf@plt+0x1938>
   12df4:	stm	sp, {r1, ip}
   12df8:	movw	r1, #39428	; 0x9a04
   12dfc:	movt	r1, #1
   12e00:	str	r7, [sp, #8]
   12e04:	str	r6, [sp, #12]
   12e08:	bl	1150c <rb_helper_write@plt>
   12e0c:	ldr	r3, [r4, #456]	; 0x1c8
   12e10:	mov	r1, #2
   12e14:	ldr	r2, [r4, #464]	; 0x1d0
   12e18:	sub	r3, r3, #1
   12e1c:	add	r2, r2, r8
   12e20:	str	r1, [r2, #12]
   12e24:	str	r3, [r4, #456]	; 0x1c8
   12e28:	ldrb	r3, [r4, #452]	; 0x1c4
   12e2c:	cmp	r3, #0
   12e30:	bne	12e98 <sprintf@plt+0x18f0>
   12e34:	ldr	r3, [r4, #456]	; 0x1c8
   12e38:	mov	r2, #1
   12e3c:	strb	r2, [r4, #452]	; 0x1c4
   12e40:	cmp	r3, #0
   12e44:	beq	12e98 <sprintf@plt+0x18f0>
   12e48:	movw	r3, #372	; 0x174
   12e4c:	movt	r3, #3
   12e50:	ldr	r5, [r3]
   12e54:	cmp	r5, #0
   12e58:	beq	12e98 <sprintf@plt+0x18f0>
   12e5c:	ldr	r3, [r5]
   12e60:	ldr	r2, [r3, #36]	; 0x24
   12e64:	cmp	r2, #0
   12e68:	beq	12e8c <sprintf@plt+0x18e4>
   12e6c:	ldr	r1, [r3, #12]
   12e70:	ldr	r3, [r4, #464]	; 0x1d0
   12e74:	add	r3, r3, r1, lsl #4
   12e78:	ldr	r3, [r3, #12]
   12e7c:	cmp	r3, #1
   12e80:	bne	12e8c <sprintf@plt+0x18e4>
   12e84:	mov	r0, r4
   12e88:	blx	r2
   12e8c:	ldr	r5, [r5, #8]
   12e90:	cmp	r5, #0
   12e94:	bne	12e5c <sprintf@plt+0x18b4>
   12e98:	add	sp, sp, #540	; 0x21c
   12e9c:	ldrd	r4, [sp]
   12ea0:	ldrd	r6, [sp, #8]
   12ea4:	ldr	r8, [sp, #16]
   12ea8:	ldr	lr, [sp, #20]
   12eac:	add	sp, sp, #24
   12eb0:	add	sp, sp, #4
   12eb4:	bx	lr
   12eb8:	cmp	r7, #0
   12ebc:	beq	12f00 <sprintf@plt+0x1958>
   12ec0:	mov	r3, #42	; 0x2a
   12ec4:	stm	sp, {r1, ip}
   12ec8:	movw	r1, #39428	; 0x9a04
   12ecc:	movt	r1, #1
   12ed0:	str	r7, [sp, #8]
   12ed4:	str	r6, [sp, #12]
   12ed8:	bl	1150c <rb_helper_write@plt>
   12edc:	b	12e28 <sprintf@plt+0x1880>
   12ee0:	movw	lr, #39624	; 0x9ac8
   12ee4:	movt	lr, #1
   12ee8:	stm	sp, {r1, ip, lr}
   12eec:	movw	r1, #39428	; 0x9a04
   12ef0:	movt	r1, #1
   12ef4:	str	r6, [sp, #12]
   12ef8:	bl	1150c <rb_helper_write@plt>
   12efc:	b	12e0c <sprintf@plt+0x1864>
   12f00:	movw	r3, #39624	; 0x9ac8
   12f04:	movt	r3, #1
   12f08:	stm	sp, {r1, ip}
   12f0c:	movw	r1, #39428	; 0x9a04
   12f10:	movt	r1, #1
   12f14:	str	r3, [sp, #8]
   12f18:	mov	r3, #42	; 0x2a
   12f1c:	str	r6, [sp, #12]
   12f20:	bl	1150c <rb_helper_write@plt>
   12f24:	b	12e28 <sprintf@plt+0x1880>
   12f28:	strd	r4, [sp, #-12]!
   12f2c:	mov	r4, r0
   12f30:	movw	r0, #49012	; 0xbf74
   12f34:	movt	r0, #2
   12f38:	mov	ip, r4
   12f3c:	ldr	r2, [ip], #376	; 0x178
   12f40:	add	r3, r4, #440	; 0x1b8
   12f44:	movw	r1, #39612	; 0x9abc
   12f48:	movt	r1, #1
   12f4c:	ldr	r0, [r0]
   12f50:	str	lr, [sp, #8]
   12f54:	sub	sp, sp, #12
   12f58:	str	ip, [sp]
   12f5c:	bl	1150c <rb_helper_write@plt>
   12f60:	ldrb	r3, [r4, #452]	; 0x1c4
   12f64:	cmp	r3, #0
   12f68:	bne	12fd0 <sprintf@plt+0x1a28>
   12f6c:	ldr	r3, [r4, #456]	; 0x1c8
   12f70:	mov	r2, #1
   12f74:	strb	r2, [r4, #452]	; 0x1c4
   12f78:	cmp	r3, #0
   12f7c:	beq	12fd0 <sprintf@plt+0x1a28>
   12f80:	movw	r3, #372	; 0x174
   12f84:	movt	r3, #3
   12f88:	ldr	r5, [r3]
   12f8c:	cmp	r5, #0
   12f90:	beq	12fd0 <sprintf@plt+0x1a28>
   12f94:	ldr	r3, [r5]
   12f98:	ldr	r2, [r3, #36]	; 0x24
   12f9c:	cmp	r2, #0
   12fa0:	beq	12fc4 <sprintf@plt+0x1a1c>
   12fa4:	ldr	r1, [r3, #12]
   12fa8:	ldr	r3, [r4, #464]	; 0x1d0
   12fac:	add	r3, r3, r1, lsl #4
   12fb0:	ldr	r3, [r3, #12]
   12fb4:	cmp	r3, #1
   12fb8:	bne	12fc4 <sprintf@plt+0x1a1c>
   12fbc:	mov	r0, r4
   12fc0:	blx	r2
   12fc4:	ldr	r5, [r5, #8]
   12fc8:	cmp	r5, #0
   12fcc:	bne	12f94 <sprintf@plt+0x19ec>
   12fd0:	add	sp, sp, #12
   12fd4:	ldrd	r4, [sp]
   12fd8:	add	sp, sp, #8
   12fdc:	pop	{pc}		; (ldr pc, [sp], #4)
   12fe0:	cmp	r0, #5
   12fe4:	strd	r4, [sp, #-36]!	; 0xffffffdc
   12fe8:	strd	r6, [sp, #8]
   12fec:	strd	r8, [sp, #16]
   12ff0:	strd	sl, [sp, #24]
   12ff4:	str	lr, [sp, #32]
   12ff8:	sub	sp, sp, #20
   12ffc:	ble	13308 <sprintf@plt+0x1d60>
   13000:	ldmib	r1, {r7, r9, sl}
   13004:	cmp	r0, #6
   13008:	mov	r2, #16
   1300c:	movweq	r6, #39992	; 0x9c38
   13010:	movteq	r6, #1
   13014:	ldrne	r6, [r1, #24]
   13018:	mov	r0, r7
   1301c:	ldr	r3, [r1, #20]
   13020:	ldr	r8, [r1, #16]
   13024:	mov	r1, #0
   13028:	str	r3, [sp, #12]
   1302c:	bl	11368 <strtoull@plt>
   13030:	subs	r4, r0, #1
   13034:	mov	r3, #0
   13038:	sbc	r5, r1, #0
   1303c:	mvn	r2, #1
   13040:	cmp	r5, r3
   13044:	mov	fp, r0
   13048:	cmpeq	r4, r2
   1304c:	bls	1306c <sprintf@plt+0x1ac4>
   13050:	add	sp, sp, #20
   13054:	ldrd	r4, [sp]
   13058:	ldrd	r6, [sp, #8]
   1305c:	ldrd	r8, [sp, #16]
   13060:	ldrd	sl, [sp, #24]
   13064:	add	sp, sp, #32
   13068:	pop	{pc}		; (ldr pc, [sp], #4)
   1306c:	mov	r1, #468	; 0x1d4
   13070:	mov	r0, #1
   13074:	bl	112f0 <calloc@plt>
   13078:	subs	r4, r0, #0
   1307c:	beq	13304 <sprintf@plt+0x1d5c>
   13080:	ldr	r3, [r4, #460]	; 0x1cc
   13084:	movw	r5, #368	; 0x170
   13088:	movt	r5, #3
   1308c:	mov	r1, fp
   13090:	str	fp, [r4]
   13094:	ldr	r0, [r5]
   13098:	add	r3, r3, #1
   1309c:	str	r3, [r4, #460]	; 0x1cc
   130a0:	bl	114dc <rb_dictionary_find@plt>
   130a4:	subs	fp, r0, #0
   130a8:	bne	13324 <sprintf@plt+0x1d7c>
   130ac:	mov	r2, r4
   130b0:	ldr	r1, [r4]
   130b4:	ldr	r0, [r5]
   130b8:	bl	11494 <rb_dictionary_add@plt>
   130bc:	mov	r2, #16
   130c0:	mov	r0, r6
   130c4:	mov	r1, fp
   130c8:	bl	11368 <strtoull@plt>
   130cc:	mov	r1, r9
   130d0:	mov	r2, #54	; 0x36
   130d4:	str	r0, [r4, #4]
   130d8:	add	r0, r4, #8
   130dc:	bl	1135c <rb_strlcpy@plt>
   130e0:	mov	r2, #10
   130e4:	mov	r1, fp
   130e8:	mov	r0, sl
   130ec:	bl	1141c <strtol@plt>
   130f0:	add	r1, r4, #64	; 0x40
   130f4:	strh	r0, [r4, #62]	; 0x3e
   130f8:	mov	r0, r9
   130fc:	bl	113c8 <rb_inet_pton_sock@plt>
   13100:	ldrh	r3, [r4, #62]	; 0x3e
   13104:	mov	r1, r8
   13108:	mov	r2, #54	; 0x36
   1310c:	add	r0, r4, #192	; 0xc0
   13110:	add	r9, r4, #376	; 0x178
   13114:	rev16	r3, r3
   13118:	strh	r3, [r4, #66]	; 0x42
   1311c:	bl	1135c <rb_strlcpy@plt>
   13120:	mov	r2, #10
   13124:	mov	r1, #0
   13128:	ldr	r0, [sp, #12]
   1312c:	bl	1141c <strtol@plt>
   13130:	add	r1, r4, #248	; 0xf8
   13134:	strh	r0, [r4, #246]	; 0xf6
   13138:	mov	r0, r8
   1313c:	bl	113c8 <rb_inet_pton_sock@plt>
   13140:	ldrh	r3, [r4, #246]	; 0xf6
   13144:	mov	r2, #64	; 0x40
   13148:	movw	r1, #39624	; 0x9ac8
   1314c:	movt	r1, #1
   13150:	mov	r0, r9
   13154:	add	r8, r4, #440	; 0x1b8
   13158:	rev16	r3, r3
   1315c:	strh	r3, [r4, #250]	; 0xfa
   13160:	bl	1135c <rb_strlcpy@plt>
   13164:	mov	r2, #11
   13168:	mov	r0, r8
   1316c:	movw	r1, #39624	; 0x9ac8
   13170:	movt	r1, #1
   13174:	bl	1135c <rb_strlcpy@plt>
   13178:	movw	r3, #65408	; 0xff80
   1317c:	movt	r3, #2
   13180:	ldr	r1, [r3, #16]
   13184:	mov	r0, #1
   13188:	lsl	r1, r1, #4
   1318c:	bl	112f0 <calloc@plt>
   13190:	subs	lr, r0, #0
   13194:	beq	13304 <sprintf@plt+0x1d5c>
   13198:	movw	r7, #372	; 0x174
   1319c:	movt	r7, #3
   131a0:	str	lr, [r4, #464]	; 0x1d0
   131a4:	ldr	sl, [r7]
   131a8:	mov	r6, #1
   131ac:	strb	r6, [r4, #451]	; 0x1c3
   131b0:	cmp	sl, #0
   131b4:	bne	131d8 <sprintf@plt+0x1c30>
   131b8:	b	13260 <sprintf@plt+0x1cb8>
   131bc:	ldrb	r3, [r4, #452]	; 0x1c4
   131c0:	cmp	r3, #0
   131c4:	bne	13260 <sprintf@plt+0x1cb8>
   131c8:	ldr	sl, [sl, #8]
   131cc:	cmp	sl, #0
   131d0:	beq	13260 <sprintf@plt+0x1cb8>
   131d4:	ldr	lr, [r4, #464]	; 0x1d0
   131d8:	mov	r0, r4
   131dc:	ldr	ip, [sl]
   131e0:	ldr	r2, [r4, #456]	; 0x1c8
   131e4:	ldr	r3, [ip, #12]
   131e8:	ldr	r1, [ip, #32]
   131ec:	add	r2, r2, #1
   131f0:	str	ip, [lr, r3, lsl #4]
   131f4:	add	r3, lr, r3, lsl #4
   131f8:	str	r2, [r4, #456]	; 0x1c8
   131fc:	str	r6, [r3, #12]
   13200:	blx	r1
   13204:	cmp	r0, #0
   13208:	bne	131bc <sprintf@plt+0x1c14>
   1320c:	ldr	r3, [r4, #460]	; 0x1cc
   13210:	sub	r3, r3, #1
   13214:	cmp	r3, #0
   13218:	str	r3, [r4, #460]	; 0x1cc
   1321c:	bne	13050 <sprintf@plt+0x1aa8>
   13220:	ldr	r1, [r4]
   13224:	ldr	r0, [r5]
   13228:	bl	113ec <rb_dictionary_delete@plt>
   1322c:	ldr	r0, [r4, #464]	; 0x1d0
   13230:	cmp	r0, #0
   13234:	beq	1323c <sprintf@plt+0x1c94>
   13238:	bl	11380 <free@plt>
   1323c:	mov	r0, r4
   13240:	add	sp, sp, #20
   13244:	ldrd	r4, [sp]
   13248:	ldrd	r6, [sp, #8]
   1324c:	ldrd	r8, [sp, #16]
   13250:	ldrd	sl, [sp, #24]
   13254:	ldr	lr, [sp, #32]
   13258:	add	sp, sp, #36	; 0x24
   1325c:	b	11380 <free@plt>
   13260:	ldr	r3, [r4, #456]	; 0x1c8
   13264:	mov	r2, #0
   13268:	strb	r2, [r4, #451]	; 0x1c3
   1326c:	cmp	r3, r2
   13270:	bne	1320c <sprintf@plt+0x1c64>
   13274:	movw	r2, #49012	; 0xbf74
   13278:	movt	r2, #2
   1327c:	str	r9, [sp]
   13280:	mov	r3, r8
   13284:	movw	r1, #39612	; 0x9abc
   13288:	movt	r1, #1
   1328c:	ldr	r0, [r2]
   13290:	ldr	r2, [r4]
   13294:	bl	1150c <rb_helper_write@plt>
   13298:	ldrb	r3, [r4, #452]	; 0x1c4
   1329c:	cmp	r3, #0
   132a0:	bne	1320c <sprintf@plt+0x1c64>
   132a4:	ldr	r3, [r4, #456]	; 0x1c8
   132a8:	mov	r2, #1
   132ac:	strb	r2, [r4, #452]	; 0x1c4
   132b0:	cmp	r3, #0
   132b4:	beq	1320c <sprintf@plt+0x1c64>
   132b8:	ldr	r6, [r7]
   132bc:	cmp	r6, #0
   132c0:	beq	1320c <sprintf@plt+0x1c64>
   132c4:	ldr	r3, [r6]
   132c8:	ldr	r2, [r3, #36]	; 0x24
   132cc:	cmp	r2, #0
   132d0:	beq	132f4 <sprintf@plt+0x1d4c>
   132d4:	ldr	r1, [r3, #12]
   132d8:	ldr	r3, [r4, #464]	; 0x1d0
   132dc:	add	r3, r3, r1, lsl #4
   132e0:	ldr	r3, [r3, #12]
   132e4:	cmp	r3, #1
   132e8:	bne	132f4 <sprintf@plt+0x1d4c>
   132ec:	mov	r0, r4
   132f0:	blx	r2
   132f4:	ldr	r6, [r6, #8]
   132f8:	cmp	r6, #0
   132fc:	bne	132c4 <sprintf@plt+0x1d1c>
   13300:	b	1320c <sprintf@plt+0x1c64>
   13304:	bl	1147c <rb_outofmemory@plt>
   13308:	mov	r2, r0
   1330c:	movw	r1, #39628	; 0x9acc
   13310:	movt	r1, #1
   13314:	mov	r0, #67	; 0x43
   13318:	bl	122bc <sprintf@plt+0xd14>
   1331c:	mov	r0, #3
   13320:	bl	11590 <exit@plt>
   13324:	mov	r0, #67	; 0x43
   13328:	mov	r2, r7
   1332c:	movw	r1, #39704	; 0x9b18
   13330:	movt	r1, #1
   13334:	bl	122bc <sprintf@plt+0xd14>
   13338:	mov	r0, #3
   1333c:	bl	11590 <exit@plt>
   13340:	cmp	r0, #1
   13344:	strd	r4, [sp, #-16]!
   13348:	str	r6, [sp, #8]
   1334c:	str	lr, [sp, #12]
   13350:	ble	13490 <sprintf@plt+0x1ee8>
   13354:	mov	r6, r1
   13358:	mov	r2, #16
   1335c:	mov	r1, #0
   13360:	ldr	r0, [r6, #4]
   13364:	bl	11368 <strtoull@plt>
   13368:	subs	r4, r0, #1
   1336c:	mov	r3, #0
   13370:	sbc	r5, r1, #0
   13374:	mvn	r2, #1
   13378:	cmp	r5, r3
   1337c:	cmpeq	r4, r2
   13380:	bhi	13474 <sprintf@plt+0x1ecc>
   13384:	movw	r6, #368	; 0x170
   13388:	movt	r6, #3
   1338c:	mov	r1, r0
   13390:	ldr	r0, [r6]
   13394:	bl	11470 <rb_dictionary_retrieve@plt>
   13398:	subs	r4, r0, #0
   1339c:	beq	13430 <sprintf@plt+0x1e88>
   133a0:	ldr	r3, [r4, #460]	; 0x1cc
   133a4:	ldrb	r1, [r4, #452]	; 0x1c4
   133a8:	add	r2, r3, #1
   133ac:	cmp	r1, #0
   133b0:	str	r2, [r4, #460]	; 0x1cc
   133b4:	bne	13424 <sprintf@plt+0x1e7c>
   133b8:	ldr	r2, [r4, #456]	; 0x1c8
   133bc:	mov	r1, #1
   133c0:	strb	r1, [r4, #452]	; 0x1c4
   133c4:	cmp	r2, #0
   133c8:	beq	13424 <sprintf@plt+0x1e7c>
   133cc:	movw	r2, #372	; 0x174
   133d0:	movt	r2, #3
   133d4:	ldr	r5, [r2]
   133d8:	cmp	r5, #0
   133dc:	beq	13424 <sprintf@plt+0x1e7c>
   133e0:	ldr	r3, [r5]
   133e4:	ldr	r2, [r3, #36]	; 0x24
   133e8:	cmp	r2, #0
   133ec:	beq	13410 <sprintf@plt+0x1e68>
   133f0:	ldr	r1, [r3, #12]
   133f4:	ldr	r3, [r4, #464]	; 0x1d0
   133f8:	add	r3, r3, r1, lsl #4
   133fc:	ldr	r3, [r3, #12]
   13400:	cmp	r3, #1
   13404:	bne	13410 <sprintf@plt+0x1e68>
   13408:	mov	r0, r4
   1340c:	blx	r2
   13410:	ldr	r5, [r5, #8]
   13414:	cmp	r5, #0
   13418:	bne	133e0 <sprintf@plt+0x1e38>
   1341c:	ldr	r3, [r4, #460]	; 0x1cc
   13420:	sub	r3, r3, #1
   13424:	cmp	r3, #0
   13428:	str	r3, [r4, #460]	; 0x1cc
   1342c:	beq	13440 <sprintf@plt+0x1e98>
   13430:	ldrd	r4, [sp]
   13434:	ldr	r6, [sp, #8]
   13438:	add	sp, sp, #12
   1343c:	pop	{pc}		; (ldr pc, [sp], #4)
   13440:	ldr	r1, [r4]
   13444:	ldr	r0, [r6]
   13448:	bl	113ec <rb_dictionary_delete@plt>
   1344c:	ldr	r0, [r4, #464]	; 0x1d0
   13450:	cmp	r0, #0
   13454:	beq	1345c <sprintf@plt+0x1eb4>
   13458:	bl	11380 <free@plt>
   1345c:	mov	r0, r4
   13460:	ldrd	r4, [sp]
   13464:	ldr	r6, [sp, #8]
   13468:	ldr	lr, [sp, #12]
   1346c:	add	sp, sp, #16
   13470:	b	11380 <free@plt>
   13474:	mov	r0, #67	; 0x43
   13478:	movw	r1, #39832	; 0x9b98
   1347c:	movt	r1, #1
   13480:	ldr	r2, [r6, #4]
   13484:	bl	122bc <sprintf@plt+0xd14>
   13488:	mov	r0, #3
   1348c:	bl	11590 <exit@plt>
   13490:	mov	r2, r0
   13494:	movw	r1, #39756	; 0x9b4c
   13498:	movt	r1, #1
   1349c:	mov	r0, #67	; 0x43
   134a0:	bl	122bc <sprintf@plt+0xd14>
   134a4:	mov	r0, #3
   134a8:	bl	11590 <exit@plt>
   134ac:	strd	r4, [sp, #-36]!	; 0xffffffdc
   134b0:	mov	r4, #1024	; 0x400
   134b4:	mov	r1, #0
   134b8:	strd	r6, [sp, #8]
   134bc:	mov	r2, r4
   134c0:	strd	r8, [sp, #16]
   134c4:	mov	r8, r0
   134c8:	strd	sl, [sp, #24]
   134cc:	str	lr, [sp, #32]
   134d0:	sub	sp, sp, #1040	; 0x410
   134d4:	sub	sp, sp, #4
   134d8:	add	r0, sp, #16
   134dc:	bl	11320 <memset@plt>
   134e0:	ldrb	r2, [r8, #20]
   134e4:	add	r3, sp, #16
   134e8:	add	r0, r8, #21
   134ec:	mov	r1, #1
   134f0:	str	r4, [sp]
   134f4:	bl	15264 <sprintf@plt+0x3cbc>
   134f8:	subs	r7, r0, #0
   134fc:	bgt	13520 <sprintf@plt+0x1f78>
   13500:	add	sp, sp, #1040	; 0x410
   13504:	add	sp, sp, #4
   13508:	ldrd	r4, [sp]
   1350c:	ldrd	r6, [sp, #8]
   13510:	ldrd	r8, [sp, #16]
   13514:	ldrd	sl, [sp, #24]
   13518:	add	sp, sp, #32
   1351c:	pop	{pc}		; (ldr pc, [sp], #4)
   13520:	ldrb	r6, [r8, #278]	; 0x116
   13524:	movw	r5, #65428	; 0xff94
   13528:	movt	r5, #2
   1352c:	movw	sl, #65492	; 0xffd4
   13530:	movt	sl, #2
   13534:	ldr	r2, [r5]
   13538:	ldr	r3, [sl]
   1353c:	add	r6, r6, #1
   13540:	ldr	r1, [r8, #12]
   13544:	uxtb	r6, r6
   13548:	add	r2, r2, #1
   1354c:	strb	r6, [r8, #278]	; 0x116
   13550:	cmp	r3, #0
   13554:	str	r2, [r5]
   13558:	strh	r1, [sp, #16]
   1355c:	ble	13500 <sprintf@plt+0x1f58>
   13560:	movw	fp, #660	; 0x294
   13564:	movt	fp, #3
   13568:	movw	r2, #39900	; 0x9bdc
   1356c:	movt	r2, #1
   13570:	sub	r6, r6, #1
   13574:	mov	r9, #0
   13578:	str	r2, [sp, #12]
   1357c:	add	r2, r9, r6
   13580:	sdiv	r4, r2, r3
   13584:	mls	r4, r3, r4, r2
   13588:	add	r2, r5, r4, lsl #2
   1358c:	ldr	r1, [r2, #4]
   13590:	cmp	r1, #0
   13594:	sub	r2, r1, #1
   13598:	beq	135c0 <sprintf@plt+0x2018>
   1359c:	cmp	r2, #3
   135a0:	mov	r1, #243	; 0xf3
   135a4:	ldr	r0, [r5]
   135a8:	ldrls	r1, [sp, #12]
   135ac:	ldrls	r1, [r1, r2, lsl #2]
   135b0:	sdiv	r2, r0, r1
   135b4:	mls	r2, r1, r2, r0
   135b8:	cmp	r2, #0
   135bc:	bne	13604 <sprintf@plt+0x205c>
   135c0:	ldr	r0, [r5, #44]	; 0x2c
   135c4:	bl	11278 <rb_get_fd@plt>
   135c8:	lsl	r1, r4, #7
   135cc:	mov	r3, #0
   135d0:	mov	r2, r7
   135d4:	ldrh	ip, [r1, fp]
   135d8:	add	lr, r1, fp
   135dc:	add	r1, sp, #16
   135e0:	str	lr, [sp]
   135e4:	cmp	ip, #2
   135e8:	moveq	ip, #16
   135ec:	movne	ip, #28
   135f0:	str	ip, [sp, #4]
   135f4:	bl	11308 <sendto@plt>
   135f8:	cmp	r7, r0
   135fc:	beq	13694 <sprintf@plt+0x20ec>
   13600:	ldr	r3, [sl]
   13604:	add	r9, r9, #1
   13608:	cmp	r9, r3
   1360c:	blt	1357c <sprintf@plt+0x1fd4>
   13610:	cmp	r3, #0
   13614:	ble	13500 <sprintf@plt+0x1f58>
   13618:	movw	fp, #660	; 0x294
   1361c:	movt	fp, #3
   13620:	mov	r9, #0
   13624:	b	13634 <sprintf@plt+0x208c>
   13628:	ldr	r3, [sl]
   1362c:	cmp	r9, r3
   13630:	bge	13500 <sprintf@plt+0x1f58>
   13634:	add	r4, r9, r6
   13638:	add	r9, r9, #1
   1363c:	sdiv	r2, r4, r3
   13640:	mls	r4, r3, r2, r4
   13644:	add	r2, r5, r4, lsl #2
   13648:	ldr	r2, [r2, #4]
   1364c:	cmp	r2, #0
   13650:	beq	1362c <sprintf@plt+0x2084>
   13654:	ldr	r0, [r5, #44]	; 0x2c
   13658:	bl	11278 <rb_get_fd@plt>
   1365c:	lsl	r1, r4, #7
   13660:	mov	r3, #0
   13664:	mov	r2, r7
   13668:	ldrh	ip, [r1, fp]
   1366c:	add	lr, r1, fp
   13670:	add	r1, sp, #16
   13674:	str	lr, [sp]
   13678:	cmp	ip, #2
   1367c:	moveq	ip, #16
   13680:	movne	ip, #28
   13684:	str	ip, [sp, #4]
   13688:	bl	11308 <sendto@plt>
   1368c:	cmp	r7, r0
   13690:	bne	13628 <sprintf@plt+0x2080>
   13694:	cmn	r4, #1
   13698:	strne	r4, [r8, #288]	; 0x120
   1369c:	b	13500 <sprintf@plt+0x1f58>
   136a0:	mov	r1, #428	; 0x1ac
   136a4:	strd	r4, [sp, #-16]!
   136a8:	str	r6, [sp, #8]
   136ac:	mov	r6, r0
   136b0:	mov	r0, #1
   136b4:	str	lr, [sp, #12]
   136b8:	sub	sp, sp, #8
   136bc:	bl	112f0 <calloc@plt>
   136c0:	subs	r4, r0, #0
   136c4:	beq	13794 <sprintf@plt+0x21ec>
   136c8:	bl	113e0 <rb_current_time@plt>
   136cc:	movw	r5, #65428	; 0xff94
   136d0:	movt	r5, #2
   136d4:	str	r0, [r4, #280]	; 0x118
   136d8:	mov	r2, #3
   136dc:	mov	r3, #4
   136e0:	strb	r2, [r4, #277]	; 0x115
   136e4:	str	r3, [r4, #284]	; 0x11c
   136e8:	str	r6, [r4, #424]	; 0x1a8
   136ec:	mov	r1, #2
   136f0:	add	r0, sp, #6
   136f4:	bl	11524 <rb_get_random@plt>
   136f8:	ldr	r3, [r5, #48]	; 0x30
   136fc:	ldrh	r1, [sp, #6]
   13700:	cmp	r3, #0
   13704:	beq	13774 <sprintf@plt+0x21cc>
   13708:	ldr	r2, [r3]
   1370c:	ldr	r2, [r2, #12]
   13710:	cmp	r1, r2
   13714:	beq	136ec <sprintf@plt+0x2144>
   13718:	mov	r2, r3
   1371c:	b	13730 <sprintf@plt+0x2188>
   13720:	ldr	r0, [r2]
   13724:	ldr	r0, [r0, #12]
   13728:	cmp	r1, r0
   1372c:	beq	136ec <sprintf@plt+0x2144>
   13730:	ldr	r2, [r2, #8]
   13734:	cmp	r2, #0
   13738:	bne	13720 <sprintf@plt+0x2178>
   1373c:	str	r4, [r4]
   13740:	strd	r2, [r4, #4]
   13744:	str	r1, [r4, #12]
   13748:	str	r4, [r3, #4]
   1374c:	ldr	r3, [r5, #56]	; 0x38
   13750:	mov	r0, r4
   13754:	str	r4, [r5, #48]	; 0x30
   13758:	add	r3, r3, #1
   1375c:	str	r3, [r5, #56]	; 0x38
   13760:	add	sp, sp, #8
   13764:	ldrd	r4, [sp]
   13768:	ldr	r6, [sp, #8]
   1376c:	add	sp, sp, #12
   13770:	pop	{pc}		; (ldr pc, [sp], #4)
   13774:	ldr	r2, [r5, #52]	; 0x34
   13778:	str	r4, [r4]
   1377c:	str	r3, [r4, #4]
   13780:	str	r3, [r4, #8]
   13784:	str	r1, [r4, #12]
   13788:	cmp	r2, #0
   1378c:	streq	r4, [r5, #52]	; 0x34
   13790:	b	1374c <sprintf@plt+0x21a4>
   13794:	bl	1147c <rb_outofmemory@plt>
   13798:	strd	r4, [sp, #-16]!
   1379c:	str	r6, [sp, #8]
   137a0:	str	lr, [sp, #12]
   137a4:	bl	14878 <sprintf@plt+0x32d0>
   137a8:	movw	r3, #65492	; 0xffd4
   137ac:	movt	r3, #2
   137b0:	ldr	r2, [r3]
   137b4:	cmp	r2, #0
   137b8:	ble	137cc <sprintf@plt+0x2224>
   137bc:	lsl	r2, r2, #2
   137c0:	mov	r1, #0
   137c4:	ldr	r0, [pc, #148]	; 13860 <sprintf@plt+0x22b8>
   137c8:	bl	11320 <memset@plt>
   137cc:	movw	r4, #65428	; 0xff94
   137d0:	movt	r4, #2
   137d4:	ldr	r5, [r4, #44]	; 0x2c
   137d8:	cmp	r5, #0
   137dc:	beq	137f0 <sprintf@plt+0x2248>
   137e0:	ldrd	r4, [sp]
   137e4:	ldr	r6, [sp, #8]
   137e8:	add	sp, sp, #12
   137ec:	pop	{pc}		; (ldr pc, [sp], #4)
   137f0:	movw	r3, #660	; 0x294
   137f4:	movt	r3, #3
   137f8:	ldrh	r0, [r3]
   137fc:	mov	r2, r5
   13800:	movw	r3, #39936	; 0x9c00
   13804:	movt	r3, #1
   13808:	mov	r1, #2
   1380c:	bl	1129c <rb_socket@plt>
   13810:	cmp	r0, #0
   13814:	str	r0, [r4, #44]	; 0x2c
   13818:	beq	137e0 <sprintf@plt+0x2238>
   1381c:	mov	r3, r5
   13820:	mov	r1, #1
   13824:	movw	r2, #18120	; 0x46c8
   13828:	movt	r2, #1
   1382c:	bl	1126c <rb_setselect@plt>
   13830:	mov	r2, r5
   13834:	movw	r1, #18180	; 0x4704
   13838:	movt	r1, #1
   1383c:	movw	r0, #39956	; 0x9c14
   13840:	movt	r0, #1
   13844:	mov	r3, #1
   13848:	bl	11518 <rb_event_add@plt>
   1384c:	str	r0, [r4, #60]	; 0x3c
   13850:	ldrd	r4, [sp]
   13854:	ldr	r6, [sp, #8]
   13858:	add	sp, sp, #12
   1385c:	pop	{pc}		; (ldr pc, [sp], #4)
   13860:	muleq	r2, r8, pc	; <UNPREDICTABLE>
   13864:	strd	r4, [sp, #-16]!
   13868:	movw	r4, #65428	; 0xff94
   1386c:	movt	r4, #2
   13870:	mov	r5, #0
   13874:	ldr	r0, [r4, #44]	; 0x2c
   13878:	str	r6, [sp, #8]
   1387c:	str	lr, [sp, #12]
   13880:	bl	11410 <rb_close@plt>
   13884:	ldr	r0, [r4, #60]	; 0x3c
   13888:	str	r5, [r4, #44]	; 0x2c
   1388c:	bl	11260 <rb_event_delete@plt>
   13890:	bl	14878 <sprintf@plt+0x32d0>
   13894:	movw	r3, #65492	; 0xffd4
   13898:	movt	r3, #2
   1389c:	ldr	r2, [r3]
   138a0:	cmp	r2, r5
   138a4:	ble	138b8 <sprintf@plt+0x2310>
   138a8:	lsl	r2, r2, #2
   138ac:	mov	r1, r5
   138b0:	add	r0, r4, #4
   138b4:	bl	11320 <memset@plt>
   138b8:	ldr	r5, [r4, #44]	; 0x2c
   138bc:	cmp	r5, #0
   138c0:	beq	138d4 <sprintf@plt+0x232c>
   138c4:	ldrd	r4, [sp]
   138c8:	ldr	r6, [sp, #8]
   138cc:	add	sp, sp, #12
   138d0:	pop	{pc}		; (ldr pc, [sp], #4)
   138d4:	movw	r3, #660	; 0x294
   138d8:	movt	r3, #3
   138dc:	ldrh	r0, [r3]
   138e0:	mov	r2, r5
   138e4:	movw	r3, #39936	; 0x9c00
   138e8:	movt	r3, #1
   138ec:	mov	r1, #2
   138f0:	bl	1129c <rb_socket@plt>
   138f4:	cmp	r0, #0
   138f8:	str	r0, [r4, #44]	; 0x2c
   138fc:	beq	138c4 <sprintf@plt+0x231c>
   13900:	mov	r3, r5
   13904:	mov	r1, #1
   13908:	movw	r2, #18120	; 0x46c8
   1390c:	movt	r2, #1
   13910:	bl	1126c <rb_setselect@plt>
   13914:	mov	r2, r5
   13918:	movw	r1, #18180	; 0x4704
   1391c:	movt	r1, #1
   13920:	movw	r0, #39956	; 0x9c14
   13924:	movt	r0, #1
   13928:	mov	r3, #1
   1392c:	bl	11518 <rb_event_add@plt>
   13930:	str	r0, [r4, #60]	; 0x3c
   13934:	ldrd	r4, [sp]
   13938:	ldr	r6, [sp, #8]
   1393c:	add	sp, sp, #12
   13940:	pop	{pc}		; (ldr pc, [sp], #4)
   13944:	cmp	r0, #0
   13948:	strd	r4, [sp, #-20]!	; 0xffffffec
   1394c:	strd	r6, [sp, #8]
   13950:	str	lr, [sp, #16]
   13954:	sub	sp, sp, #260	; 0x104
   13958:	beq	13a54 <sprintf@plt+0x24ac>
   1395c:	mov	r4, r1
   13960:	mov	r6, r2
   13964:	mov	r1, r0
   13968:	mov	r2, #256	; 0x100
   1396c:	mov	r0, sp
   13970:	bl	1135c <rb_strlcpy@plt>
   13974:	mov	r0, sp
   13978:	mov	r1, #46	; 0x2e
   1397c:	bl	112cc <strchr@plt>
   13980:	cmp	r0, #0
   13984:	beq	139f0 <sprintf@plt+0x2448>
   13988:	mov	r0, r4
   1398c:	bl	136a0 <sprintf@plt+0x20f8>
   13990:	mov	r4, r0
   13994:	mov	r0, sp
   13998:	bl	113d4 <strlen@plt>
   1399c:	add	r5, r0, #1
   139a0:	mov	r0, r5
   139a4:	bl	114ac <malloc@plt>
   139a8:	subs	r7, r0, #0
   139ac:	beq	13a50 <sprintf@plt+0x24a8>
   139b0:	mov	r2, r5
   139b4:	mov	r1, sp
   139b8:	bl	113f8 <memcpy@plt>
   139bc:	mov	r1, sp
   139c0:	mov	r2, #256	; 0x100
   139c4:	str	r7, [r4, #420]	; 0x1a4
   139c8:	add	r0, r4, #21
   139cc:	bl	1135c <rb_strlcpy@plt>
   139d0:	mov	r0, r4
   139d4:	strb	r6, [r4, #20]
   139d8:	bl	134ac <sprintf@plt+0x1f04>
   139dc:	add	sp, sp, #260	; 0x104
   139e0:	ldrd	r4, [sp]
   139e4:	ldrd	r6, [sp, #8]
   139e8:	add	sp, sp, #16
   139ec:	pop	{pc}		; (ldr pc, [sp], #4)
   139f0:	movw	r5, #404	; 0x194
   139f4:	movt	r5, #3
   139f8:	ldrb	r3, [r5]
   139fc:	cmp	r3, #0
   13a00:	beq	13988 <sprintf@plt+0x23e0>
   13a04:	mov	r0, sp
   13a08:	bl	113d4 <strlen@plt>
   13a0c:	mov	r7, r0
   13a10:	mov	r0, r5
   13a14:	bl	113d4 <strlen@plt>
   13a18:	add	r3, r7, r0
   13a1c:	add	r3, r3, #2
   13a20:	cmp	r3, #254	; 0xfe
   13a24:	bhi	13988 <sprintf@plt+0x23e0>
   13a28:	add	r3, sp, #256	; 0x100
   13a2c:	mov	ip, #46	; 0x2e
   13a30:	add	r3, r3, r7
   13a34:	add	r7, r7, #1
   13a38:	add	r2, r0, #1
   13a3c:	mov	r1, r5
   13a40:	add	r0, sp, r7
   13a44:	strb	ip, [r3, #-256]	; 0xffffff00
   13a48:	bl	113f8 <memcpy@plt>
   13a4c:	b	13988 <sprintf@plt+0x23e0>
   13a50:	bl	1147c <rb_outofmemory@plt>
   13a54:	movw	r1, #39976	; 0x9c28
   13a58:	movt	r1, #1
   13a5c:	ldr	r3, [pc, #12]	; 13a70 <sprintf@plt+0x24c8>
   13a60:	movw	r0, #39984	; 0x9c30
   13a64:	movt	r0, #1
   13a68:	mov	r2, #412	; 0x19c
   13a6c:	bl	11350 <__assert_fail@plt>
   13a70:	andeq	r9, r1, ip, ror #23
   13a74:	strd	r4, [sp, #-36]!	; 0xffffffdc
   13a78:	strd	r6, [sp, #8]
   13a7c:	mov	r6, r0
   13a80:	mov	r0, r1
   13a84:	strd	r8, [sp, #16]
   13a88:	strd	sl, [sp, #24]
   13a8c:	str	lr, [sp, #32]
   13a90:	sub	sp, sp, #140	; 0x8c
   13a94:	bl	136a0 <sprintf@plt+0x20f8>
   13a98:	mov	r4, r0
   13a9c:	mov	r2, #128	; 0x80
   13aa0:	mov	r1, r6
   13aa4:	add	r0, r0, #292	; 0x124
   13aa8:	bl	113f8 <memcpy@plt>
   13aac:	mov	r1, #256	; 0x100
   13ab0:	mov	r0, #1
   13ab4:	bl	112f0 <calloc@plt>
   13ab8:	subs	r2, r0, #0
   13abc:	beq	13ca4 <sprintf@plt+0x26fc>
   13ac0:	ldrh	r3, [r6]
   13ac4:	add	r0, r4, #21
   13ac8:	str	r2, [r4, #420]	; 0x1a4
   13acc:	cmp	r3, #2
   13ad0:	beq	13c6c <sprintf@plt+0x26c4>
   13ad4:	cmp	r3, #10
   13ad8:	beq	13b08 <sprintf@plt+0x2560>
   13adc:	mov	r3, #12
   13ae0:	mov	r0, r4
   13ae4:	strb	r3, [r4, #20]
   13ae8:	add	sp, sp, #140	; 0x8c
   13aec:	ldrd	r4, [sp]
   13af0:	ldrd	r6, [sp, #8]
   13af4:	ldrd	r8, [sp, #16]
   13af8:	ldrd	sl, [sp, #24]
   13afc:	ldr	lr, [sp, #32]
   13b00:	add	sp, sp, #36	; 0x24
   13b04:	b	134ac <sprintf@plt+0x1f04>
   13b08:	ldrb	r1, [r6, #15]
   13b0c:	movw	r3, #40128	; 0x9cc0
   13b10:	movt	r3, #1
   13b14:	movw	r2, #40028	; 0x9c5c
   13b18:	movt	r2, #1
   13b1c:	ldrb	r5, [r6, #14]
   13b20:	str	r3, [sp, #124]	; 0x7c
   13b24:	ldrb	ip, [r6, #13]
   13b28:	and	r3, r1, #15
   13b2c:	lsr	lr, r1, #4
   13b30:	ldrb	r8, [r6, #11]
   13b34:	str	r3, [sp, #132]	; 0x84
   13b38:	lsr	r7, r5, #4
   13b3c:	and	r5, r5, #15
   13b40:	ldrb	r3, [r6, #12]
   13b44:	lsr	r1, ip, #4
   13b48:	and	ip, ip, #15
   13b4c:	str	lr, [sp, #64]	; 0x40
   13b50:	ldrb	lr, [r6, #10]
   13b54:	str	r5, [sp, #68]	; 0x44
   13b58:	lsr	r5, r8, #4
   13b5c:	and	r8, r8, #15
   13b60:	ldrb	fp, [r6, #9]
   13b64:	lsr	sl, r3, #4
   13b68:	str	r7, [sp, #72]	; 0x48
   13b6c:	and	r3, r3, #15
   13b70:	ldrb	r7, [r6, #8]
   13b74:	str	ip, [sp, #76]	; 0x4c
   13b78:	lsr	ip, lr, #4
   13b7c:	and	lr, lr, #15
   13b80:	ldrb	r9, [r6, #23]
   13b84:	str	r1, [sp, #80]	; 0x50
   13b88:	ldrb	r1, [r6, #22]
   13b8c:	str	r3, [sp, #84]	; 0x54
   13b90:	ldrb	r3, [r6, #21]
   13b94:	str	sl, [sp, #88]	; 0x58
   13b98:	ldrb	sl, [r6, #20]
   13b9c:	str	r8, [sp, #92]	; 0x5c
   13ba0:	ldrb	r8, [r6, #19]
   13ba4:	str	r5, [sp, #96]	; 0x60
   13ba8:	ldrb	r5, [r6, #18]
   13bac:	str	lr, [sp, #100]	; 0x64
   13bb0:	str	r9, [sp, #128]	; 0x80
   13bb4:	lsr	r9, fp, #4
   13bb8:	and	fp, fp, #15
   13bbc:	ldrb	lr, [r6, #17]
   13bc0:	str	ip, [sp, #104]	; 0x68
   13bc4:	ldrb	ip, [r6, #16]
   13bc8:	lsr	r6, r7, #4
   13bcc:	and	r7, r7, #15
   13bd0:	str	fp, [sp, #108]	; 0x6c
   13bd4:	lsr	fp, r5, #4
   13bd8:	and	r5, r5, #15
   13bdc:	str	r9, [sp, #112]	; 0x70
   13be0:	lsr	r9, r8, #4
   13be4:	and	r8, r8, #15
   13be8:	str	fp, [sp, #40]	; 0x28
   13bec:	lsr	fp, r1, #4
   13bf0:	and	r1, r1, #15
   13bf4:	str	r6, [sp, #120]	; 0x78
   13bf8:	strd	r8, [sp, #28]
   13bfc:	lsr	r9, r3, #4
   13c00:	and	r3, r3, #15
   13c04:	ldr	r6, [sp, #132]	; 0x84
   13c08:	lsr	r8, sl, #4
   13c0c:	and	sl, sl, #15
   13c10:	str	r7, [sp, #116]	; 0x74
   13c14:	lsr	r7, lr, #4
   13c18:	and	lr, lr, #15
   13c1c:	str	r3, [sp, #12]
   13c20:	ldr	r3, [sp, #128]	; 0x80
   13c24:	stmib	sp, {r1, fp}
   13c28:	mov	r1, #256	; 0x100
   13c2c:	str	sl, [sp, #20]
   13c30:	str	r9, [sp, #16]
   13c34:	str	r6, [sp, #60]	; 0x3c
   13c38:	lsr	r6, ip, #4
   13c3c:	and	ip, ip, #15
   13c40:	lsr	sl, r3, #4
   13c44:	and	r3, r3, #15
   13c48:	str	sl, [sp]
   13c4c:	str	r8, [sp, #24]
   13c50:	str	r5, [sp, #36]	; 0x24
   13c54:	str	lr, [sp, #44]	; 0x2c
   13c58:	str	r7, [sp, #48]	; 0x30
   13c5c:	str	ip, [sp, #52]	; 0x34
   13c60:	str	r6, [sp, #56]	; 0x38
   13c64:	bl	1153c <snprintf@plt>
   13c68:	b	13adc <sprintf@plt+0x2534>
   13c6c:	movw	r3, #40012	; 0x9c4c
   13c70:	movt	r3, #1
   13c74:	ldrb	r5, [r6, #4]
   13c78:	movw	r2, #39996	; 0x9c3c
   13c7c:	movt	r2, #1
   13c80:	ldrb	lr, [r6, #5]
   13c84:	mov	r1, #256	; 0x100
   13c88:	str	r3, [sp, #12]
   13c8c:	ldrb	ip, [r6, #6]
   13c90:	str	r5, [sp, #8]
   13c94:	ldrb	r3, [r6, #7]
   13c98:	stm	sp, {ip, lr}
   13c9c:	bl	1153c <snprintf@plt>
   13ca0:	b	13adc <sprintf@plt+0x2534>
   13ca4:	bl	1147c <rb_outofmemory@plt>
   13ca8:	mov	ip, r2
   13cac:	ldrh	r2, [r2]
   13cb0:	strd	r4, [sp, #-36]!	; 0xffffffdc
   13cb4:	strd	r6, [sp, #8]
   13cb8:	strd	r8, [sp, #16]
   13cbc:	strd	sl, [sp, #24]
   13cc0:	cmp	r2, #2
   13cc4:	str	lr, [sp, #32]
   13cc8:	sub	sp, sp, #140	; 0x8c
   13ccc:	beq	13e64 <sprintf@plt+0x28bc>
   13cd0:	cmp	r2, #10
   13cd4:	beq	13cf4 <sprintf@plt+0x274c>
   13cd8:	add	sp, sp, #140	; 0x8c
   13cdc:	ldrd	r4, [sp]
   13ce0:	ldrd	r6, [sp, #8]
   13ce4:	ldrd	r8, [sp, #16]
   13ce8:	ldrd	sl, [sp, #24]
   13cec:	add	sp, sp, #32
   13cf0:	pop	{pc}		; (ldr pc, [sp], #4)
   13cf4:	ldrb	r5, [ip, #15]
   13cf8:	cmp	r3, #0
   13cfc:	movw	r2, #40128	; 0x9cc0
   13d00:	movt	r2, #1
   13d04:	ldrb	r4, [ip, #14]
   13d08:	moveq	r3, r2
   13d0c:	movw	r2, #40028	; 0x9c5c
   13d10:	movt	r2, #1
   13d14:	str	r3, [sp, #124]	; 0x7c
   13d18:	lsr	lr, r5, #4
   13d1c:	ldrb	r3, [ip, #13]
   13d20:	and	r5, r5, #15
   13d24:	lsr	r8, r4, #4
   13d28:	and	r4, r4, #15
   13d2c:	ldrb	r7, [ip, #12]
   13d30:	str	r5, [sp, #128]	; 0x80
   13d34:	ldrb	r5, [ip, #11]
   13d38:	str	lr, [sp, #64]	; 0x40
   13d3c:	lsr	r9, r3, #4
   13d40:	and	r3, r3, #15
   13d44:	ldrb	lr, [ip, #10]
   13d48:	str	r4, [sp, #68]	; 0x44
   13d4c:	lsr	r6, r7, #4
   13d50:	and	r7, r7, #15
   13d54:	ldrb	sl, [ip, #9]
   13d58:	str	r8, [sp, #72]	; 0x48
   13d5c:	lsr	r4, r5, #4
   13d60:	and	r5, r5, #15
   13d64:	ldrb	r8, [ip, #8]
   13d68:	str	r3, [sp, #76]	; 0x4c
   13d6c:	lsr	fp, lr, #4
   13d70:	and	lr, lr, #15
   13d74:	ldrb	r3, [ip, #23]
   13d78:	str	r9, [sp, #80]	; 0x50
   13d7c:	lsr	r9, sl, #4
   13d80:	and	sl, sl, #15
   13d84:	str	r9, [sp, #132]	; 0x84
   13d88:	ldrb	r9, [ip, #22]
   13d8c:	str	r7, [sp, #84]	; 0x54
   13d90:	ldrb	r7, [ip, #21]
   13d94:	str	r6, [sp, #88]	; 0x58
   13d98:	ldrb	r6, [ip, #20]
   13d9c:	str	r5, [sp, #92]	; 0x5c
   13da0:	ldrb	r5, [ip, #19]
   13da4:	str	r4, [sp, #96]	; 0x60
   13da8:	ldrb	r4, [ip, #18]
   13dac:	str	lr, [sp, #100]	; 0x64
   13db0:	ldrb	lr, [ip, #17]
   13db4:	str	fp, [sp, #104]	; 0x68
   13db8:	lsr	fp, r8, #4
   13dbc:	and	r8, r8, #15
   13dc0:	ldrb	ip, [ip, #16]
   13dc4:	str	sl, [sp, #108]	; 0x6c
   13dc8:	ldr	sl, [sp, #132]	; 0x84
   13dcc:	str	sl, [sp, #112]	; 0x70
   13dd0:	lsr	sl, r3, #4
   13dd4:	and	r3, r3, #15
   13dd8:	str	fp, [sp, #120]	; 0x78
   13ddc:	lsr	fp, r7, #4
   13de0:	and	r7, r7, #15
   13de4:	str	r8, [sp, #116]	; 0x74
   13de8:	lsr	r8, r9, #4
   13dec:	and	r9, r9, #15
   13df0:	str	sl, [sp]
   13df4:	lsr	sl, r5, #4
   13df8:	and	r5, r5, #15
   13dfc:	str	r9, [sp, #4]
   13e00:	lsr	r9, r4, #4
   13e04:	and	r4, r4, #15
   13e08:	str	fp, [sp, #16]
   13e0c:	ldr	fp, [sp, #128]	; 0x80
   13e10:	str	r8, [sp, #8]
   13e14:	lsr	r8, lr, #4
   13e18:	and	lr, lr, #15
   13e1c:	str	r7, [sp, #12]
   13e20:	lsr	r7, ip, #4
   13e24:	and	ip, ip, #15
   13e28:	str	r5, [sp, #28]
   13e2c:	str	sl, [sp, #32]
   13e30:	str	r4, [sp, #36]	; 0x24
   13e34:	str	fp, [sp, #60]	; 0x3c
   13e38:	lsr	fp, r6, #4
   13e3c:	and	r6, r6, #15
   13e40:	str	r6, [sp, #20]
   13e44:	str	fp, [sp, #24]
   13e48:	str	r9, [sp, #40]	; 0x28
   13e4c:	str	lr, [sp, #44]	; 0x2c
   13e50:	str	r8, [sp, #48]	; 0x30
   13e54:	str	ip, [sp, #52]	; 0x34
   13e58:	str	r7, [sp, #56]	; 0x38
   13e5c:	bl	1153c <snprintf@plt>
   13e60:	b	13cd8 <sprintf@plt+0x2730>
   13e64:	cmp	r3, #0
   13e68:	movw	r2, #40012	; 0x9c4c
   13e6c:	movt	r2, #1
   13e70:	ldrb	r5, [ip, #6]
   13e74:	moveq	r3, r2
   13e78:	movw	r2, #39996	; 0x9c3c
   13e7c:	movt	r2, #1
   13e80:	ldrb	r4, [ip, #5]
   13e84:	str	r3, [sp, #12]
   13e88:	ldrb	lr, [ip, #4]
   13e8c:	str	r5, [sp]
   13e90:	ldrb	r3, [ip, #7]
   13e94:	stmib	sp, {r4, lr}
   13e98:	bl	1153c <snprintf@plt>
   13e9c:	b	13cd8 <sprintf@plt+0x2730>
   13ea0:	strd	r4, [sp, #-16]!
   13ea4:	mov	r4, r0
   13ea8:	str	r6, [sp, #8]
   13eac:	str	lr, [sp, #12]
   13eb0:	ldrb	r1, [r0, #277]	; 0x115
   13eb4:	sub	r1, r1, #1
   13eb8:	uxtb	r1, r1
   13ebc:	cmp	r1, #0
   13ec0:	strb	r1, [r0, #277]	; 0x115
   13ec4:	beq	13f38 <sprintf@plt+0x2990>
   13ec8:	ldrb	r5, [r0, #20]
   13ecc:	cmp	r5, #12
   13ed0:	beq	13ef4 <sprintf@plt+0x294c>
   13ed4:	cmp	r5, #28
   13ed8:	beq	13f24 <sprintf@plt+0x297c>
   13edc:	cmp	r5, #1
   13ee0:	beq	13f24 <sprintf@plt+0x297c>
   13ee4:	ldrd	r4, [sp]
   13ee8:	ldr	r6, [sp, #8]
   13eec:	add	sp, sp, #12
   13ef0:	pop	{pc}		; (ldr pc, [sp], #4)
   13ef4:	add	r2, r0, #292	; 0x124
   13ef8:	mov	r3, #0
   13efc:	mov	r1, #256	; 0x100
   13f00:	add	r0, r0, #21
   13f04:	bl	13ca8 <sprintf@plt+0x2700>
   13f08:	strb	r5, [r4, #20]
   13f0c:	mov	r0, r4
   13f10:	ldrd	r4, [sp]
   13f14:	ldr	r6, [sp, #8]
   13f18:	ldr	lr, [sp, #12]
   13f1c:	add	sp, sp, #16
   13f20:	b	134ac <sprintf@plt+0x1f04>
   13f24:	mov	r2, #256	; 0x100
   13f28:	add	r0, r4, #21
   13f2c:	ldr	r1, [r4, #420]	; 0x1a4
   13f30:	bl	1135c <rb_strlcpy@plt>
   13f34:	b	13f08 <sprintf@plt+0x2960>
   13f38:	ldr	r3, [r0, #424]	; 0x1a8
   13f3c:	ldm	r3, {r0, r3}
   13f40:	blx	r3
   13f44:	ldmib	r4, {r1, r2}
   13f48:	movw	r3, #65428	; 0xff94
   13f4c:	movt	r3, #2
   13f50:	ldr	r0, [r4, #420]	; 0x1a4
   13f54:	cmp	r2, #0
   13f58:	strne	r1, [r2, #4]
   13f5c:	ldrne	r1, [r4, #4]
   13f60:	streq	r1, [r3, #52]	; 0x34
   13f64:	cmp	r1, #0
   13f68:	strne	r2, [r1, #8]
   13f6c:	mov	r1, #0
   13f70:	streq	r2, [r3, #48]	; 0x30
   13f74:	cmp	r0, r1
   13f78:	ldr	r2, [r3, #56]	; 0x38
   13f7c:	str	r1, [r4, #4]
   13f80:	str	r1, [r4, #8]
   13f84:	sub	r2, r2, #1
   13f88:	str	r2, [r3, #56]	; 0x38
   13f8c:	beq	13f94 <sprintf@plt+0x29ec>
   13f90:	bl	11380 <free@plt>
   13f94:	mov	r0, r4
   13f98:	ldrd	r4, [sp]
   13f9c:	ldr	r6, [sp, #8]
   13fa0:	ldr	lr, [sp, #12]
   13fa4:	add	sp, sp, #16
   13fa8:	b	11380 <free@plt>
   13fac:	strd	r4, [sp, #-36]!	; 0xffffffdc
   13fb0:	mov	r3, #128	; 0x80
   13fb4:	strd	r6, [sp, #8]
   13fb8:	strd	r8, [sp, #16]
   13fbc:	strd	sl, [sp, #24]
   13fc0:	str	lr, [sp, #32]
   13fc4:	sub	sp, sp, #1552	; 0x610
   13fc8:	sub	sp, sp, #4
   13fcc:	add	r5, sp, #32
   13fd0:	add	r8, sp, #516	; 0x204
   13fd4:	str	r3, [sp, #28]
   13fd8:	bl	11278 <rb_get_fd@plt>
   13fdc:	sub	ip, r5, #4
   13fe0:	mov	r3, #0
   13fe4:	mov	r1, r8
   13fe8:	movw	r2, #1036	; 0x40c
   13fec:	stm	sp, {r5, ip}
   13ff0:	bl	11560 <recvfrom@plt>
   13ff4:	add	r3, r0, #1
   13ff8:	cmp	r3, #1
   13ffc:	bls	1417c <sprintf@plt+0x2bd4>
   14000:	cmp	r0, #12
   14004:	mov	r9, r0
   14008:	ble	14158 <sprintf@plt+0x2bb0>
   1400c:	ldrh	r2, [r8, #6]
   14010:	movw	sl, #65428	; 0xff94
   14014:	movt	sl, #2
   14018:	ldrh	r0, [r8, #4]
   1401c:	ldrh	r1, [r8, #8]
   14020:	rev16	r2, r2
   14024:	ldr	r3, [sl, #48]	; 0x30
   14028:	strh	r2, [r8, #6]
   1402c:	rev16	r0, r0
   14030:	ldrh	r2, [r8, #10]
   14034:	rev16	r1, r1
   14038:	strh	r0, [r8, #4]
   1403c:	uxth	r0, r0
   14040:	cmp	r3, #0
   14044:	strh	r1, [r8, #8]
   14048:	ldrh	r1, [r8]
   1404c:	rev16	r2, r2
   14050:	str	r0, [sp, #8]
   14054:	strh	r2, [r8, #10]
   14058:	bne	1406c <sprintf@plt+0x2ac4>
   1405c:	b	14158 <sprintf@plt+0x2bb0>
   14060:	ldr	r3, [r3, #8]
   14064:	cmp	r3, #0
   14068:	beq	14158 <sprintf@plt+0x2bb0>
   1406c:	ldr	r6, [r3]
   14070:	ldr	r2, [r6, #12]
   14074:	cmp	r1, r2
   14078:	bne	14060 <sprintf@plt+0x2ab8>
   1407c:	movw	r3, #65492	; 0xffd4
   14080:	movt	r3, #2
   14084:	ldr	r7, [r3]
   14088:	cmp	r7, #0
   1408c:	ble	14188 <sprintf@plt+0x2be0>
   14090:	ldrh	r3, [r5]
   14094:	ldrh	fp, [r5, #2]
   14098:	ldr	r0, [sp, #36]	; 0x24
   1409c:	cmp	r3, #2
   140a0:	beq	1425c <sprintf@plt+0x2cb4>
   140a4:	cmp	r3, #10
   140a8:	bne	14188 <sprintf@plt+0x2be0>
   140ac:	add	r3, r5, #8
   140b0:	ldr	r4, [pc, #1548]	; 146c4 <sprintf@plt+0x311c>
   140b4:	mov	r5, #0
   140b8:	str	r3, [sp, #12]
   140bc:	movw	r3, #44784	; 0xaef0
   140c0:	movt	r3, #2
   140c4:	str	r3, [sp, #16]
   140c8:	str	r6, [sp, #20]
   140cc:	b	140e0 <sprintf@plt+0x2b38>
   140d0:	add	r5, r5, #1
   140d4:	add	r4, r4, #128	; 0x80
   140d8:	cmp	r7, r5
   140dc:	beq	14184 <sprintf@plt+0x2bdc>
   140e0:	ldrh	r3, [r4, #-2]
   140e4:	cmp	r3, #10
   140e8:	bne	140d0 <sprintf@plt+0x2b28>
   140ec:	ldrh	r3, [r4]
   140f0:	cmp	r3, fp
   140f4:	bne	140d0 <sprintf@plt+0x2b28>
   140f8:	add	r6, r4, #6
   140fc:	mov	r2, #16
   14100:	ldr	r1, [sp, #12]
   14104:	mov	r0, r6
   14108:	bl	11248 <memcmp@plt>
   1410c:	cmp	r0, #0
   14110:	beq	1412c <sprintf@plt+0x2b84>
   14114:	mov	r0, r6
   14118:	mov	r2, #16
   1411c:	ldr	r1, [sp, #16]
   14120:	bl	11248 <memcmp@plt>
   14124:	cmp	r0, #0
   14128:	bne	140d0 <sprintf@plt+0x2b28>
   1412c:	mov	r4, #1
   14130:	ldr	r6, [sp, #20]
   14134:	b	1418c <sprintf@plt+0x2be4>
   14138:	ldr	r4, [sp, #8]
   1413c:	ldr	sl, [sp, #12]
   14140:	add	r4, sl, r4, lsl #2
   14144:	mov	r0, r6
   14148:	ldr	r3, [r4, #4]
   1414c:	add	r3, r3, #1
   14150:	str	r3, [r4, #4]
   14154:	bl	13ea0 <sprintf@plt+0x28f8>
   14158:	mov	r0, #1
   1415c:	add	sp, sp, #1552	; 0x610
   14160:	add	sp, sp, #4
   14164:	ldrd	r4, [sp]
   14168:	ldrd	r6, [sp, #8]
   1416c:	ldrd	r8, [sp, #16]
   14170:	ldrd	sl, [sp, #24]
   14174:	add	sp, sp, #32
   14178:	pop	{pc}		; (ldr pc, [sp], #4)
   1417c:	mov	r0, #0
   14180:	b	1415c <sprintf@plt+0x2bb4>
   14184:	ldr	r6, [sp, #20]
   14188:	mov	r4, #0
   1418c:	ldr	r3, [r6, #288]	; 0x120
   14190:	cmp	r3, r4
   14194:	beq	141a8 <sprintf@plt+0x2c00>
   14198:	add	r2, sl, r4, lsl #2
   1419c:	ldr	r3, [r2, #4]
   141a0:	add	r3, r3, #3
   141a4:	str	r3, [r2, #4]
   141a8:	ldr	r3, [sp, #8]
   141ac:	cmp	r3, #1
   141b0:	bne	14158 <sprintf@plt+0x2bb0>
   141b4:	mov	r0, #256	; 0x100
   141b8:	add	r9, r8, r9
   141bc:	mov	r1, r9
   141c0:	add	r3, sp, #160	; 0xa0
   141c4:	add	r2, sp, #528	; 0x210
   141c8:	str	r0, [sp]
   141cc:	mov	r0, r8
   141d0:	bl	14b58 <sprintf@plt+0x35b0>
   141d4:	cmp	r0, #0
   141d8:	ble	14158 <sprintf@plt+0x2bb0>
   141dc:	add	r1, r6, #21
   141e0:	add	r0, sp, #160	; 0xa0
   141e4:	bl	113a4 <rb_strcasecmp@plt>
   141e8:	cmp	r0, #0
   141ec:	bne	14158 <sprintf@plt+0x2bb0>
   141f0:	ldrb	r3, [sp, #519]	; 0x207
   141f4:	ands	r3, r3, #15
   141f8:	bne	142b0 <sprintf@plt+0x2d08>
   141fc:	ldrh	r3, [r8, #6]
   14200:	cmp	r3, #0
   14204:	beq	14304 <sprintf@plt+0x2d5c>
   14208:	ldrh	r2, [r8, #4]
   1420c:	add	r5, sp, #528	; 0x210
   14210:	cmp	r2, #0
   14214:	movne	r3, r5
   14218:	subne	r7, r3, #12
   1421c:	bne	14244 <sprintf@plt+0x2c9c>
   14220:	b	14380 <sprintf@plt+0x2dd8>
   14224:	ldrh	r3, [r7, #4]
   14228:	add	r0, r0, #4
   1422c:	add	r5, r5, r0
   14230:	sub	r3, r3, #1
   14234:	uxth	r3, r3
   14238:	cmp	r3, #0
   1423c:	strh	r3, [r7, #4]
   14240:	beq	1437c <sprintf@plt+0x2dd4>
   14244:	mov	r1, r9
   14248:	mov	r0, r5
   1424c:	bl	15150 <sprintf@plt+0x3ba8>
   14250:	cmp	r0, #0
   14254:	bge	14224 <sprintf@plt+0x2c7c>
   14258:	b	14140 <sprintf@plt+0x2b98>
   1425c:	movw	r3, #660	; 0x294
   14260:	movt	r3, #3
   14264:	mov	r2, #0
   14268:	b	1427c <sprintf@plt+0x2cd4>
   1426c:	add	r2, r2, #1
   14270:	add	r3, r3, #128	; 0x80
   14274:	cmp	r2, r7
   14278:	beq	14188 <sprintf@plt+0x2be0>
   1427c:	ldrh	r1, [r3]
   14280:	cmp	r1, #2
   14284:	bne	1426c <sprintf@plt+0x2cc4>
   14288:	ldrh	r1, [r3, #2]
   1428c:	cmp	r1, fp
   14290:	bne	1426c <sprintf@plt+0x2cc4>
   14294:	ldr	r1, [r3, #4]
   14298:	cmp	r1, #0
   1429c:	beq	142a8 <sprintf@plt+0x2d00>
   142a0:	cmp	r1, r0
   142a4:	bne	1426c <sprintf@plt+0x2cc4>
   142a8:	mov	r4, #1
   142ac:	b	1418c <sprintf@plt+0x2be4>
   142b0:	sub	r2, r3, #4
   142b4:	cmp	r3, #2
   142b8:	cmpne	r2, #1
   142bc:	bhi	142e0 <sprintf@plt+0x2d38>
   142c0:	add	sl, sl, r4, lsl #2
   142c4:	mov	r0, r6
   142c8:	ldr	r3, [sl, #4]
   142cc:	add	r3, r3, #1
   142d0:	str	r3, [sl, #4]
   142d4:	bl	13ea0 <sprintf@plt+0x28f8>
   142d8:	ldr	r0, [sp, #8]
   142dc:	b	1415c <sprintf@plt+0x2bb4>
   142e0:	cmp	r3, #3
   142e4:	bne	14304 <sprintf@plt+0x2d5c>
   142e8:	add	r4, sl, r4, lsl #2
   142ec:	ldr	r3, [r4, #4]
   142f0:	add	r2, r3, #3
   142f4:	cmp	r3, #0
   142f8:	movlt	r3, r2
   142fc:	asr	r3, r3, #2
   14300:	str	r3, [r4, #4]
   14304:	ldr	r3, [r6, #424]	; 0x1a8
   14308:	mov	r1, #0
   1430c:	ldm	r3, {r0, r3}
   14310:	blx	r3
   14314:	ldr	r3, [r6, #8]
   14318:	cmp	r3, #0
   1431c:	beq	14370 <sprintf@plt+0x2dc8>
   14320:	ldr	r2, [r6, #4]
   14324:	str	r2, [r3, #4]
   14328:	ldr	r2, [r6, #4]
   1432c:	cmp	r2, #0
   14330:	ldr	r0, [r6, #420]	; 0x1a4
   14334:	strne	r3, [r2, #8]
   14338:	mov	r2, #0
   1433c:	streq	r3, [sl, #48]	; 0x30
   14340:	ldr	r3, [sl, #56]	; 0x38
   14344:	str	r2, [r6, #4]
   14348:	cmp	r0, r2
   1434c:	str	r2, [r6, #8]
   14350:	sub	r3, r3, #1
   14354:	str	r3, [sl, #56]	; 0x38
   14358:	beq	14360 <sprintf@plt+0x2db8>
   1435c:	bl	11380 <free@plt>
   14360:	mov	r0, r6
   14364:	bl	11380 <free@plt>
   14368:	mov	r0, #1
   1436c:	b	1415c <sprintf@plt+0x2bb4>
   14370:	ldr	r2, [r6, #4]
   14374:	str	r2, [sl, #52]	; 0x34
   14378:	b	1432c <sprintf@plt+0x2d84>
   1437c:	ldrh	r3, [r7, #6]
   14380:	cmp	r3, #0
   14384:	cmpne	r9, r5
   14388:	bls	14438 <sprintf@plt+0x2e90>
   1438c:	add	r7, sp, #516	; 0x204
   14390:	movw	r8, #355	; 0x163
   14394:	str	r4, [sp, #8]
   14398:	mov	fp, #0
   1439c:	str	sl, [sp, #12]
   143a0:	sub	ip, r3, #1
   143a4:	mov	r2, r5
   143a8:	str	r8, [sp]
   143ac:	add	r3, sp, #160	; 0xa0
   143b0:	mov	r1, r9
   143b4:	mov	r0, r7
   143b8:	strh	ip, [r7, #6]
   143bc:	bl	14b58 <sprintf@plt+0x35b0>
   143c0:	cmp	r0, #0
   143c4:	ble	14138 <sprintf@plt+0x2b90>
   143c8:	add	r5, r5, r0
   143cc:	strb	fp, [sp, #415]	; 0x19f
   143d0:	add	r4, r5, #10
   143d4:	cmp	r9, r4
   143d8:	bls	14430 <sprintf@plt+0x2e88>
   143dc:	mov	r0, r5
   143e0:	bl	15218 <sprintf@plt+0x3c70>
   143e4:	mov	sl, r0
   143e8:	add	r0, r5, #2
   143ec:	bl	15218 <sprintf@plt+0x3c70>
   143f0:	add	r0, r5, #4
   143f4:	bl	15228 <sprintf@plt+0x3c80>
   143f8:	str	r0, [r6, #16]
   143fc:	add	r0, r5, #8
   14400:	bl	15218 <sprintf@plt+0x3c70>
   14404:	cmp	sl, #12
   14408:	beq	14618 <sprintf@plt+0x3070>
   1440c:	cmp	sl, #28
   14410:	beq	145c8 <sprintf@plt+0x3020>
   14414:	cmp	sl, #1
   14418:	beq	14530 <sprintf@plt+0x2f88>
   1441c:	ldrh	r3, [r7, #6]
   14420:	add	r5, r4, r0
   14424:	cmp	r3, #0
   14428:	cmpne	r9, r5
   1442c:	bhi	143a0 <sprintf@plt+0x2df8>
   14430:	ldr	r4, [sp, #8]
   14434:	ldr	sl, [sp, #12]
   14438:	ldrb	r3, [r6, #20]
   1443c:	cmp	r3, #12
   14440:	bne	14560 <sprintf@plt+0x2fb8>
   14444:	ldr	r5, [r6, #420]	; 0x1a4
   14448:	cmp	r5, #0
   1444c:	beq	14140 <sprintf@plt+0x2b98>
   14450:	add	r3, r6, #292	; 0x124
   14454:	ldr	r0, [r6, #424]	; 0x1a8
   14458:	ldrh	r3, [r3]
   1445c:	cmp	r3, #10
   14460:	beq	14660 <sprintf@plt+0x30b8>
   14464:	bl	136a0 <sprintf@plt+0x20f8>
   14468:	mov	r7, r0
   1446c:	mov	r0, r5
   14470:	bl	113d4 <strlen@plt>
   14474:	add	r8, r0, #1
   14478:	mov	r0, r8
   1447c:	bl	114ac <malloc@plt>
   14480:	subs	r9, r0, #0
   14484:	beq	146c0 <sprintf@plt+0x3118>
   14488:	mov	r2, r8
   1448c:	mov	r1, r5
   14490:	bl	113f8 <memcpy@plt>
   14494:	mov	r1, r5
   14498:	mov	r2, #256	; 0x100
   1449c:	str	r9, [r7, #420]	; 0x1a4
   144a0:	add	r0, r7, #21
   144a4:	bl	1135c <rb_strlcpy@plt>
   144a8:	mov	r3, #1
   144ac:	mov	r0, r7
   144b0:	strb	r3, [r7, #20]
   144b4:	bl	134ac <sprintf@plt+0x1f04>
   144b8:	ldr	r3, [r6, #4]
   144bc:	ldr	r2, [r6, #8]
   144c0:	cmp	r2, #0
   144c4:	beq	146b8 <sprintf@plt+0x3110>
   144c8:	str	r3, [r2, #4]
   144cc:	ldr	r3, [r6, #4]
   144d0:	cmp	r3, #0
   144d4:	strne	r2, [r3, #8]
   144d8:	streq	r2, [sl, #48]	; 0x30
   144dc:	ldr	r3, [sl, #56]	; 0x38
   144e0:	mov	r2, #0
   144e4:	ldr	r0, [r6, #420]	; 0x1a4
   144e8:	str	r2, [r6, #4]
   144ec:	str	r2, [r6, #8]
   144f0:	sub	r3, r3, #1
   144f4:	cmp	r0, r2
   144f8:	str	r3, [sl, #56]	; 0x38
   144fc:	beq	14504 <sprintf@plt+0x2f5c>
   14500:	bl	11380 <free@plt>
   14504:	add	r4, sl, r4, lsl #2
   14508:	mov	r0, r6
   1450c:	bl	11380 <free@plt>
   14510:	ldr	r3, [r4, #4]
   14514:	mov	r0, #1
   14518:	add	r2, r3, #3
   1451c:	cmp	r3, #0
   14520:	movlt	r3, r2
   14524:	asr	r3, r3, #2
   14528:	str	r3, [r4, #4]
   1452c:	b	1415c <sprintf@plt+0x2bb4>
   14530:	ldrb	r3, [r6, #20]
   14534:	ldr	r4, [sp, #8]
   14538:	ldr	sl, [sp, #12]
   1453c:	cmp	r3, #1
   14540:	bne	14140 <sprintf@plt+0x2b98>
   14544:	cmp	r0, #4
   14548:	bne	14140 <sprintf@plt+0x2b98>
   1454c:	add	r3, r6, #292	; 0x124
   14550:	mov	r2, #2
   14554:	strh	r2, [r3]
   14558:	ldr	r3, [r5, #10]
   1455c:	str	r3, [r6, #296]	; 0x128
   14560:	mov	r1, #132	; 0x84
   14564:	mov	r0, #1
   14568:	bl	112f0 <calloc@plt>
   1456c:	subs	r5, r0, #0
   14570:	beq	146c0 <sprintf@plt+0x3118>
   14574:	ldr	r3, [r6, #420]	; 0x1a4
   14578:	mov	r0, r5
   1457c:	mov	r2, #128	; 0x80
   14580:	add	r1, r6, #292	; 0x124
   14584:	str	r3, [r0], #4
   14588:	bl	113f8 <memcpy@plt>
   1458c:	ldr	r3, [r6, #424]	; 0x1a8
   14590:	mov	r1, r5
   14594:	ldm	r3, {r0, r3}
   14598:	blx	r3
   1459c:	mov	r0, r5
   145a0:	bl	11380 <free@plt>
   145a4:	ldrd	r2, [r6, #4]
   145a8:	cmp	r3, #0
   145ac:	strne	r2, [r3, #4]
   145b0:	ldrne	r2, [r6, #4]
   145b4:	streq	r2, [sl, #52]	; 0x34
   145b8:	cmp	r2, #0
   145bc:	strne	r3, [r2, #8]
   145c0:	streq	r3, [sl, #48]	; 0x30
   145c4:	b	144dc <sprintf@plt+0x2f34>
   145c8:	ldrb	r3, [r6, #20]
   145cc:	mov	r2, r4
   145d0:	ldr	r4, [sp, #8]
   145d4:	ldr	sl, [sp, #12]
   145d8:	cmp	r3, #28
   145dc:	bne	14140 <sprintf@plt+0x2b98>
   145e0:	cmp	r0, #16
   145e4:	bne	14140 <sprintf@plt+0x2b98>
   145e8:	add	r1, r6, #292	; 0x124
   145ec:	mov	r0, #10
   145f0:	strh	r0, [r1]
   145f4:	ldr	ip, [r2]
   145f8:	ldr	r0, [r2, #4]
   145fc:	ldr	r1, [r2, #8]
   14600:	ldr	r2, [r2, #12]
   14604:	str	ip, [r6, #300]	; 0x12c
   14608:	str	r0, [r6, #304]	; 0x130
   1460c:	str	r1, [r6, #308]	; 0x134
   14610:	str	r2, [r6, #312]	; 0x138
   14614:	b	14560 <sprintf@plt+0x2fb8>
   14618:	ldrb	r3, [r6, #20]
   1461c:	mov	r2, r4
   14620:	ldr	r4, [sp, #8]
   14624:	ldr	sl, [sp, #12]
   14628:	cmp	r3, #12
   1462c:	bne	14140 <sprintf@plt+0x2b98>
   14630:	mov	r1, r9
   14634:	mov	r0, r7
   14638:	str	r8, [sp]
   1463c:	add	r3, sp, #160	; 0xa0
   14640:	bl	14b58 <sprintf@plt+0x35b0>
   14644:	cmp	r0, #0
   14648:	ble	14140 <sprintf@plt+0x2b98>
   1464c:	add	r1, sp, #160	; 0xa0
   14650:	mov	r2, #256	; 0x100
   14654:	ldr	r0, [r6, #420]	; 0x1a4
   14658:	bl	1135c <rb_strlcpy@plt>
   1465c:	b	14438 <sprintf@plt+0x2e90>
   14660:	bl	136a0 <sprintf@plt+0x20f8>
   14664:	mov	r7, r0
   14668:	mov	r0, r5
   1466c:	bl	113d4 <strlen@plt>
   14670:	add	r8, r0, #1
   14674:	mov	r0, r8
   14678:	bl	114ac <malloc@plt>
   1467c:	subs	r9, r0, #0
   14680:	beq	146c0 <sprintf@plt+0x3118>
   14684:	mov	r2, r8
   14688:	mov	r1, r5
   1468c:	bl	113f8 <memcpy@plt>
   14690:	mov	r1, r5
   14694:	mov	r2, #256	; 0x100
   14698:	str	r9, [r7, #420]	; 0x1a4
   1469c:	add	r0, r7, #21
   146a0:	bl	1135c <rb_strlcpy@plt>
   146a4:	mov	r3, #28
   146a8:	mov	r0, r7
   146ac:	strb	r3, [r7, #20]
   146b0:	bl	134ac <sprintf@plt+0x1f04>
   146b4:	b	144b8 <sprintf@plt+0x2f10>
   146b8:	str	r3, [sl, #52]	; 0x34
   146bc:	b	144d0 <sprintf@plt+0x2f28>
   146c0:	bl	1147c <rb_outofmemory@plt>
   146c4:	muleq	r3, r6, r2
   146c8:	str	r4, [sp, #-8]!
   146cc:	mov	r4, r0
   146d0:	str	lr, [sp, #4]
   146d4:	mov	r0, r4
   146d8:	bl	13fac <sprintf@plt+0x2a04>
   146dc:	subs	r3, r0, #0
   146e0:	bne	146d4 <sprintf@plt+0x312c>
   146e4:	mov	r0, r4
   146e8:	movw	r2, #18120	; 0x46c8
   146ec:	movt	r2, #1
   146f0:	mov	r1, #1
   146f4:	ldr	r4, [sp]
   146f8:	ldr	lr, [sp, #4]
   146fc:	add	sp, sp, #8
   14700:	b	1126c <rb_setselect@plt>
   14704:	strd	r4, [sp, #-32]!	; 0xffffffe0
   14708:	movw	r5, #65428	; 0xff94
   1470c:	movt	r5, #2
   14710:	strd	r6, [sp, #8]
   14714:	strd	r8, [sp, #16]
   14718:	str	sl, [sp, #24]
   1471c:	str	lr, [sp, #28]
   14720:	bl	113e0 <rb_current_time@plt>
   14724:	ldr	r3, [r5, #48]	; 0x30
   14728:	cmp	r3, #0
   1472c:	beq	147e0 <sprintf@plt+0x3238>
   14730:	ldr	r6, [r3, #8]
   14734:	mov	r7, r0
   14738:	mov	r8, #0
   1473c:	ldr	r4, [r3]
   14740:	ldr	r3, [r4, #280]	; 0x118
   14744:	ldr	r2, [r4, #284]	; 0x11c
   14748:	add	r3, r2, r3
   1474c:	cmp	r7, r3
   14750:	bge	14768 <sprintf@plt+0x31c0>
   14754:	cmp	r6, #0
   14758:	beq	147e0 <sprintf@plt+0x3238>
   1475c:	mov	r3, r6
   14760:	ldr	r6, [r6, #8]
   14764:	b	1473c <sprintf@plt+0x3194>
   14768:	ldr	r3, [r4, #288]	; 0x120
   1476c:	lsl	r2, r2, #1
   14770:	str	r7, [r4, #280]	; 0x118
   14774:	ldrb	r1, [r4, #277]	; 0x115
   14778:	str	r2, [r4, #284]	; 0x11c
   1477c:	add	r3, r5, r3, lsl #2
   14780:	ldr	r2, [r3, #4]
   14784:	sub	r1, r1, #1
   14788:	uxtb	r1, r1
   1478c:	cmp	r1, #0
   14790:	strb	r1, [r4, #277]	; 0x115
   14794:	add	r2, r2, #1
   14798:	str	r2, [r3, #4]
   1479c:	beq	147f8 <sprintf@plt+0x3250>
   147a0:	ldrb	r9, [r4, #20]
   147a4:	cmp	r9, #12
   147a8:	beq	14854 <sprintf@plt+0x32ac>
   147ac:	cmp	r9, #28
   147b0:	beq	147bc <sprintf@plt+0x3214>
   147b4:	cmp	r9, #1
   147b8:	bne	14754 <sprintf@plt+0x31ac>
   147bc:	mov	r2, #256	; 0x100
   147c0:	add	r0, r4, #21
   147c4:	ldr	r1, [r4, #420]	; 0x1a4
   147c8:	bl	1135c <rb_strlcpy@plt>
   147cc:	mov	r0, r4
   147d0:	strb	r9, [r4, #20]
   147d4:	bl	134ac <sprintf@plt+0x1f04>
   147d8:	cmp	r6, #0
   147dc:	bne	1475c <sprintf@plt+0x31b4>
   147e0:	ldrd	r4, [sp]
   147e4:	ldrd	r6, [sp, #8]
   147e8:	ldrd	r8, [sp, #16]
   147ec:	ldr	sl, [sp, #24]
   147f0:	add	sp, sp, #28
   147f4:	pop	{pc}		; (ldr pc, [sp], #4)
   147f8:	ldr	r3, [r4, #424]	; 0x1a8
   147fc:	ldm	r3, {r0, r3}
   14800:	blx	r3
   14804:	ldrd	r2, [r4, #4]
   14808:	ldr	r0, [r4, #420]	; 0x1a4
   1480c:	cmp	r3, #0
   14810:	strne	r2, [r3, #4]
   14814:	ldrne	r2, [r4, #4]
   14818:	streq	r2, [r5, #52]	; 0x34
   1481c:	cmp	r2, #0
   14820:	strne	r3, [r2, #8]
   14824:	streq	r3, [r5, #48]	; 0x30
   14828:	cmp	r0, #0
   1482c:	ldr	r3, [r5, #56]	; 0x38
   14830:	str	r8, [r4, #4]
   14834:	str	r8, [r4, #8]
   14838:	sub	r3, r3, #1
   1483c:	str	r3, [r5, #56]	; 0x38
   14840:	beq	14848 <sprintf@plt+0x32a0>
   14844:	bl	11380 <free@plt>
   14848:	mov	r0, r4
   1484c:	bl	11380 <free@plt>
   14850:	b	14754 <sprintf@plt+0x31ac>
   14854:	add	r0, r4, #21
   14858:	mov	r3, #0
   1485c:	add	r2, r4, #292	; 0x124
   14860:	mov	r1, #256	; 0x100
   14864:	bl	13ca8 <sprintf@plt+0x2700>
   14868:	mov	r0, r4
   1486c:	strb	r9, [r4, #20]
   14870:	bl	134ac <sprintf@plt+0x1f04>
   14874:	b	14754 <sprintf@plt+0x31ac>
   14878:	mov	r3, #0
   1487c:	strd	r4, [sp, #-32]!	; 0xffffffe0
   14880:	movw	r4, #65492	; 0xffd4
   14884:	movt	r4, #2
   14888:	movw	r1, #40408	; 0x9dd8
   1488c:	movt	r1, #1
   14890:	movw	r0, #40412	; 0x9ddc
   14894:	movt	r0, #1
   14898:	strd	r6, [sp, #8]
   1489c:	strd	r8, [sp, #16]
   148a0:	str	sl, [sp, #24]
   148a4:	str	lr, [sp, #28]
   148a8:	sub	sp, sp, #168	; 0xa8
   148ac:	str	r3, [r4]
   148b0:	bl	11314 <fopen@plt>
   148b4:	subs	r8, r0, #0
   148b8:	beq	14a00 <sprintf@plt+0x3458>
   148bc:	movw	r6, #40432	; 0x9df0
   148c0:	movt	r6, #1
   148c4:	movw	r7, #40436	; 0x9df4
   148c8:	movt	r7, #1
   148cc:	movw	r5, #40440	; 0x9df8
   148d0:	movt	r5, #1
   148d4:	mov	r2, r8
   148d8:	mov	r1, #128	; 0x80
   148dc:	add	r0, sp, #40	; 0x28
   148e0:	bl	112b4 <fgets@plt>
   148e4:	cmp	r0, #0
   148e8:	beq	149f8 <sprintf@plt+0x3450>
   148ec:	mov	r1, r6
   148f0:	add	r0, sp, #40	; 0x28
   148f4:	bl	11578 <strpbrk@plt>
   148f8:	cmp	r0, #0
   148fc:	add	sl, sp, #40	; 0x28
   14900:	movne	r3, #0
   14904:	strbne	r3, [r0]
   14908:	bl	11488 <__ctype_b_loc@plt>
   1490c:	ldrb	r3, [sp, #40]	; 0x28
   14910:	ldr	r2, [r0]
   14914:	lsl	r1, r3, #1
   14918:	ldrh	r1, [r2, r1]
   1491c:	tst	r1, #8192	; 0x2000
   14920:	beq	14938 <sprintf@plt+0x3390>
   14924:	ldrb	r3, [sl, #1]!
   14928:	lsl	r1, r3, #1
   1492c:	ldrh	r1, [r2, r1]
   14930:	tst	r1, #8192	; 0x2000
   14934:	bne	14924 <sprintf@plt+0x337c>
   14938:	cmp	r3, #0
   1493c:	beq	148d4 <sprintf@plt+0x332c>
   14940:	cmp	r3, #59	; 0x3b
   14944:	cmpne	r3, #35	; 0x23
   14948:	beq	148d4 <sprintf@plt+0x332c>
   1494c:	mov	r0, sl
   14950:	b	14960 <sprintf@plt+0x33b8>
   14954:	cmp	r3, #0
   14958:	mov	r0, r1
   1495c:	beq	148d4 <sprintf@plt+0x332c>
   14960:	ldrb	r3, [r0, #1]
   14964:	add	r1, r0, #1
   14968:	lsl	ip, r3, #1
   1496c:	ldrh	ip, [r2, ip]
   14970:	tst	ip, #8192	; 0x2000
   14974:	beq	14954 <sprintf@plt+0x33ac>
   14978:	cmp	r3, #0
   1497c:	beq	148d4 <sprintf@plt+0x332c>
   14980:	ldrb	r3, [r1, #1]
   14984:	mov	ip, #0
   14988:	add	r9, r0, #2
   1498c:	strb	ip, [r1]
   14990:	lsl	r3, r3, #1
   14994:	ldrh	r3, [r2, r3]
   14998:	tst	r3, #8192	; 0x2000
   1499c:	beq	149b4 <sprintf@plt+0x340c>
   149a0:	ldrb	r3, [r9, #1]!
   149a4:	lsl	r3, r3, #1
   149a8:	ldrh	r3, [r2, r3]
   149ac:	tst	r3, #8192	; 0x2000
   149b0:	bne	149a0 <sprintf@plt+0x33f8>
   149b4:	mov	r1, r7
   149b8:	mov	r0, r9
   149bc:	bl	11578 <strpbrk@plt>
   149c0:	cmp	r0, #0
   149c4:	mov	r1, r5
   149c8:	movne	r3, #0
   149cc:	strbne	r3, [r0]
   149d0:	mov	r0, sl
   149d4:	bl	113a4 <rb_strcasecmp@plt>
   149d8:	cmp	r0, #0
   149dc:	bne	14a2c <sprintf@plt+0x3484>
   149e0:	mov	r1, r9
   149e4:	movw	r0, #404	; 0x194
   149e8:	movt	r0, #3
   149ec:	mov	r2, #256	; 0x100
   149f0:	bl	1135c <rb_strlcpy@plt>
   149f4:	b	148d4 <sprintf@plt+0x332c>
   149f8:	mov	r0, r8
   149fc:	bl	112a8 <fclose@plt>
   14a00:	ldr	ip, [r4]
   14a04:	cmp	ip, #0
   14a08:	beq	14ad0 <sprintf@plt+0x3528>
   14a0c:	mov	r0, #0
   14a10:	add	sp, sp, #168	; 0xa8
   14a14:	ldrd	r4, [sp]
   14a18:	ldrd	r6, [sp, #8]
   14a1c:	ldrd	r8, [sp, #16]
   14a20:	ldr	sl, [sp, #24]
   14a24:	add	sp, sp, #28
   14a28:	pop	{pc}		; (ldr pc, [sp], #4)
   14a2c:	mov	r0, sl
   14a30:	movw	r1, #40448	; 0x9e00
   14a34:	movt	r1, #1
   14a38:	bl	113a4 <rb_strcasecmp@plt>
   14a3c:	subs	ip, r0, #0
   14a40:	bne	148d4 <sprintf@plt+0x332c>
   14a44:	ldr	r3, [r4]
   14a48:	cmp	r3, #9
   14a4c:	bgt	148d4 <sprintf@plt+0x332c>
   14a50:	mov	r3, #2
   14a54:	mov	r1, #5
   14a58:	mov	r0, r9
   14a5c:	add	r2, sp, #8
   14a60:	str	r1, [sp, #8]
   14a64:	mov	r1, r5
   14a68:	str	ip, [sp, #12]
   14a6c:	str	r3, [sp, #16]
   14a70:	add	r3, sp, #4
   14a74:	str	ip, [sp, #20]
   14a78:	str	ip, [sp, #24]
   14a7c:	str	ip, [sp, #28]
   14a80:	str	ip, [sp, #32]
   14a84:	str	ip, [sp, #36]	; 0x24
   14a88:	bl	113b0 <getaddrinfo@plt>
   14a8c:	cmp	r0, #0
   14a90:	bne	148d4 <sprintf@plt+0x332c>
   14a94:	ldr	r9, [sp, #4]
   14a98:	cmp	r9, #0
   14a9c:	beq	148d4 <sprintf@plt+0x332c>
   14aa0:	ldr	sl, [r4]
   14aa4:	movw	r0, #660	; 0x294
   14aa8:	movt	r0, #3
   14aac:	ldr	r2, [r9, #16]
   14ab0:	ldr	r1, [r9, #20]
   14ab4:	add	r0, r0, sl, lsl #7
   14ab8:	add	sl, sl, #1
   14abc:	bl	113f8 <memcpy@plt>
   14ac0:	mov	r0, r9
   14ac4:	str	sl, [r4]
   14ac8:	bl	1132c <freeaddrinfo@plt>
   14acc:	b	148d4 <sprintf@plt+0x332c>
   14ad0:	mov	r2, #2
   14ad4:	mov	r3, #5
   14ad8:	movw	r1, #40440	; 0x9df8
   14adc:	movt	r1, #1
   14ae0:	movw	r0, #40460	; 0x9e0c
   14ae4:	movt	r0, #1
   14ae8:	str	r3, [sp, #40]	; 0x28
   14aec:	add	r3, sp, #8
   14af0:	str	ip, [sp, #44]	; 0x2c
   14af4:	str	r2, [sp, #48]	; 0x30
   14af8:	add	r2, sp, #40	; 0x28
   14afc:	str	ip, [sp, #52]	; 0x34
   14b00:	str	ip, [sp, #56]	; 0x38
   14b04:	str	ip, [sp, #60]	; 0x3c
   14b08:	str	ip, [sp, #64]	; 0x40
   14b0c:	str	ip, [sp, #68]	; 0x44
   14b10:	bl	113b0 <getaddrinfo@plt>
   14b14:	cmp	r0, #0
   14b18:	bne	14a0c <sprintf@plt+0x3464>
   14b1c:	ldr	r5, [sp, #8]
   14b20:	cmp	r5, #0
   14b24:	beq	14a0c <sprintf@plt+0x3464>
   14b28:	ldr	r6, [r4]
   14b2c:	movw	r0, #660	; 0x294
   14b30:	movt	r0, #3
   14b34:	ldr	r2, [r5, #16]
   14b38:	ldr	r1, [r5, #20]
   14b3c:	add	r0, r0, r6, lsl #7
   14b40:	add	r6, r6, #1
   14b44:	bl	113f8 <memcpy@plt>
   14b48:	mov	r0, r5
   14b4c:	str	r6, [r4]
   14b50:	bl	1132c <freeaddrinfo@plt>
   14b54:	b	14a0c <sprintf@plt+0x3464>
   14b58:	strd	r4, [sp, #-36]!	; 0xffffffdc
   14b5c:	cmp	r0, r2
   14b60:	cmpls	r2, r1
   14b64:	strd	r6, [sp, #8]
   14b68:	movcs	r5, #1
   14b6c:	movcc	r5, #0
   14b70:	strd	r8, [sp, #16]
   14b74:	strd	sl, [sp, #24]
   14b78:	str	lr, [sp, #32]
   14b7c:	sub	sp, sp, #284	; 0x11c
   14b80:	str	r3, [sp, #8]
   14b84:	bcs	14bdc <sprintf@plt+0x3634>
   14b88:	add	sl, sp, #276	; 0x114
   14b8c:	mov	r6, r2
   14b90:	mov	r4, r2
   14b94:	mov	r7, r0
   14b98:	mvn	r2, #0
   14b9c:	mov	r8, r1
   14ba0:	add	r3, sp, #24
   14ba4:	add	sl, sl, #3
   14ba8:	str	r2, [sp, #4]
   14bac:	mov	r1, r4
   14bb0:	ldrb	r2, [r1], #1
   14bb4:	cmp	r2, #0
   14bb8:	mov	r0, r2
   14bbc:	beq	14cf0 <sprintf@plt+0x3748>
   14bc0:	and	ip, r2, #192	; 0xc0
   14bc4:	cmp	ip, #64	; 0x40
   14bc8:	beq	14cb4 <sprintf@plt+0x370c>
   14bcc:	cmp	ip, #192	; 0xc0
   14bd0:	beq	14c10 <sprintf@plt+0x3668>
   14bd4:	cmp	ip, #0
   14bd8:	beq	14c74 <sprintf@plt+0x36cc>
   14bdc:	bl	1159c <__errno_location@plt>
   14be0:	mov	r3, #90	; 0x5a
   14be4:	str	r3, [r0]
   14be8:	mvn	r3, #0
   14bec:	str	r3, [sp, #4]
   14bf0:	ldr	r0, [sp, #4]
   14bf4:	add	sp, sp, #284	; 0x11c
   14bf8:	ldrd	r4, [sp]
   14bfc:	ldrd	r6, [sp, #8]
   14c00:	ldrd	r8, [sp, #16]
   14c04:	ldrd	sl, [sp, #24]
   14c08:	add	sp, sp, #32
   14c0c:	pop	{pc}		; (ldr pc, [sp], #4)
   14c10:	cmp	r8, r1
   14c14:	bls	14bdc <sprintf@plt+0x3634>
   14c18:	ldr	r0, [sp, #4]
   14c1c:	cmp	r0, #0
   14c20:	blt	14c64 <sprintf@plt+0x36bc>
   14c24:	ldrb	r1, [r4, #1]
   14c28:	lsl	r4, r2, #8
   14c2c:	and	r4, r4, #16128	; 0x3f00
   14c30:	orr	r4, r4, r1
   14c34:	adds	r4, r7, r4
   14c38:	movcs	r2, #1
   14c3c:	movcc	r2, #0
   14c40:	cmp	r8, r4
   14c44:	orrls	r2, r2, #1
   14c48:	cmp	r2, #0
   14c4c:	bne	14bdc <sprintf@plt+0x3634>
   14c50:	add	r5, r5, #2
   14c54:	sub	r2, r8, r7
   14c58:	cmp	r5, r2
   14c5c:	blt	14bac <sprintf@plt+0x3604>
   14c60:	b	14bdc <sprintf@plt+0x3634>
   14c64:	sub	r1, r1, r6
   14c68:	add	r1, r1, #1
   14c6c:	str	r1, [sp, #4]
   14c70:	b	14c24 <sprintf@plt+0x367c>
   14c74:	mov	r9, r2
   14c78:	add	ip, r2, #1
   14c7c:	add	ip, r3, ip
   14c80:	cmp	sl, ip
   14c84:	bls	14bdc <sprintf@plt+0x3634>
   14c88:	add	r4, r1, r9
   14c8c:	cmp	r8, r4
   14c90:	bls	14bdc <sprintf@plt+0x3634>
   14c94:	add	ip, r2, #1
   14c98:	mov	r2, r9
   14c9c:	strb	r0, [r3], #1
   14ca0:	mov	r0, r3
   14ca4:	add	r5, r5, ip
   14ca8:	bl	113f8 <memcpy@plt>
   14cac:	add	r3, r0, r9
   14cb0:	b	14bac <sprintf@plt+0x3604>
   14cb4:	cmp	r2, #65	; 0x41
   14cb8:	bne	14bdc <sprintf@plt+0x3634>
   14cbc:	ldrb	ip, [r4, #1]
   14cc0:	cmp	ip, #0
   14cc4:	bne	14cd8 <sprintf@plt+0x3730>
   14cc8:	mov	r9, #33	; 0x21
   14ccc:	mov	ip, #34	; 0x22
   14cd0:	mov	r2, r9
   14cd4:	b	14c7c <sprintf@plt+0x36d4>
   14cd8:	add	ip, ip, #7
   14cdc:	asr	ip, ip, #3
   14ce0:	add	r2, ip, #1
   14ce4:	add	ip, ip, #2
   14ce8:	mov	r9, r2
   14cec:	b	14c7c <sprintf@plt+0x36d4>
   14cf0:	ldr	r0, [sp, #4]
   14cf4:	strb	r2, [r3]
   14cf8:	cmp	r0, #0
   14cfc:	blt	15124 <sprintf@plt+0x3b7c>
   14d00:	movw	r3, #40140	; 0x9ccc
   14d04:	movt	r3, #1
   14d08:	ldr	r5, [sp, #8]
   14d0c:	movw	sl, #52429	; 0xcccd
   14d10:	movt	sl, #52428	; 0xcccc
   14d14:	movw	fp, #40472	; 0x9e18
   14d18:	movt	fp, #1
   14d1c:	str	r3, [sp, #16]
   14d20:	movw	r3, #34079	; 0x851f
   14d24:	movt	r3, #20971	; 0x51eb
   14d28:	add	r1, sp, #24
   14d2c:	str	sl, [sp, #12]
   14d30:	str	r3, [sp, #20]
   14d34:	ldr	r3, [sp, #320]	; 0x140
   14d38:	add	r7, r5, r3
   14d3c:	ldrb	ip, [r1]
   14d40:	cmp	ip, #0
   14d44:	beq	150d0 <sprintf@plt+0x3b28>
   14d48:	and	r3, ip, #192	; 0xc0
   14d4c:	cmp	r3, #192	; 0xc0
   14d50:	beq	14bdc <sprintf@plt+0x3634>
   14d54:	ldr	r2, [sp, #8]
   14d58:	cmp	r2, r5
   14d5c:	beq	14d70 <sprintf@plt+0x37c8>
   14d60:	cmp	r7, r5
   14d64:	bls	14bdc <sprintf@plt+0x3634>
   14d68:	mov	r2, #46	; 0x2e
   14d6c:	strb	r2, [r5], #1
   14d70:	cmp	r3, #64	; 0x40
   14d74:	beq	14f58 <sprintf@plt+0x39b0>
   14d78:	add	r3, r5, ip
   14d7c:	cmp	r7, r3
   14d80:	bls	14bdc <sprintf@plt+0x3634>
   14d84:	ldr	r9, [sp, #16]
   14d88:	mov	r0, r5
   14d8c:	add	r6, r1, #1
   14d90:	mov	r5, #92	; 0x5c
   14d94:	ldrb	r2, [r6], #1
   14d98:	add	r4, r0, #1
   14d9c:	mov	r3, r0
   14da0:	sub	lr, r2, #34	; 0x22
   14da4:	cmp	lr, #58	; 0x3a
   14da8:	ldrls	pc, [pc, lr, lsl #2]
   14dac:	b	14ecc <sprintf@plt+0x3924>
   14db0:	muleq	r1, ip, lr
   14db4:	andeq	r4, r1, ip, asr #29
   14db8:	muleq	r1, ip, lr
   14dbc:	andeq	r4, r1, ip, asr #29
   14dc0:	andeq	r4, r1, ip, asr #29
   14dc4:	andeq	r4, r1, ip, asr #29
   14dc8:	muleq	r1, ip, lr
   14dcc:	muleq	r1, ip, lr
   14dd0:	andeq	r4, r1, ip, asr #29
   14dd4:	andeq	r4, r1, ip, asr #29
   14dd8:	andeq	r4, r1, ip, asr #29
   14ddc:	andeq	r4, r1, ip, asr #29
   14de0:	muleq	r1, ip, lr
   14de4:	andeq	r4, r1, ip, asr #29
   14de8:	andeq	r4, r1, ip, asr #29
   14dec:	andeq	r4, r1, ip, asr #29
   14df0:	andeq	r4, r1, ip, asr #29
   14df4:	andeq	r4, r1, ip, asr #29
   14df8:	andeq	r4, r1, ip, asr #29
   14dfc:	andeq	r4, r1, ip, asr #29
   14e00:	andeq	r4, r1, ip, asr #29
   14e04:	andeq	r4, r1, ip, asr #29
   14e08:	andeq	r4, r1, ip, asr #29
   14e0c:	andeq	r4, r1, ip, asr #29
   14e10:	andeq	r4, r1, ip, asr #29
   14e14:	muleq	r1, ip, lr
   14e18:	andeq	r4, r1, ip, asr #29
   14e1c:	andeq	r4, r1, ip, asr #29
   14e20:	andeq	r4, r1, ip, asr #29
   14e24:	andeq	r4, r1, ip, asr #29
   14e28:	muleq	r1, ip, lr
   14e2c:	andeq	r4, r1, ip, asr #29
   14e30:	andeq	r4, r1, ip, asr #29
   14e34:	andeq	r4, r1, ip, asr #29
   14e38:	andeq	r4, r1, ip, asr #29
   14e3c:	andeq	r4, r1, ip, asr #29
   14e40:	andeq	r4, r1, ip, asr #29
   14e44:	andeq	r4, r1, ip, asr #29
   14e48:	andeq	r4, r1, ip, asr #29
   14e4c:	andeq	r4, r1, ip, asr #29
   14e50:	andeq	r4, r1, ip, asr #29
   14e54:	andeq	r4, r1, ip, asr #29
   14e58:	andeq	r4, r1, ip, asr #29
   14e5c:	andeq	r4, r1, ip, asr #29
   14e60:	andeq	r4, r1, ip, asr #29
   14e64:	andeq	r4, r1, ip, asr #29
   14e68:	andeq	r4, r1, ip, asr #29
   14e6c:	andeq	r4, r1, ip, asr #29
   14e70:	andeq	r4, r1, ip, asr #29
   14e74:	andeq	r4, r1, ip, asr #29
   14e78:	andeq	r4, r1, ip, asr #29
   14e7c:	andeq	r4, r1, ip, asr #29
   14e80:	andeq	r4, r1, ip, asr #29
   14e84:	andeq	r4, r1, ip, asr #29
   14e88:	andeq	r4, r1, ip, asr #29
   14e8c:	andeq	r4, r1, ip, asr #29
   14e90:	andeq	r4, r1, ip, asr #29
   14e94:	andeq	r4, r1, ip, asr #29
   14e98:	muleq	r1, ip, lr
   14e9c:	cmp	r7, r4
   14ea0:	bls	14bdc <sprintf@plt+0x3634>
   14ea4:	strb	r5, [r3], #2
   14ea8:	strb	r2, [r0, #1]
   14eac:	mov	r0, r3
   14eb0:	rsb	r3, r6, #1
   14eb4:	add	r3, r1, r3
   14eb8:	cmn	r3, ip
   14ebc:	bne	14d94 <sprintf@plt+0x37ec>
   14ec0:	mov	r1, r6
   14ec4:	mov	r5, r0
   14ec8:	b	14d3c <sprintf@plt+0x3794>
   14ecc:	ldr	r3, [sp, #20]
   14ed0:	sub	r4, r2, #33	; 0x21
   14ed4:	add	sl, r0, #3
   14ed8:	cmp	r4, #93	; 0x5d
   14edc:	umull	r3, lr, r3, r2
   14ee0:	ldr	r3, [sp, #12]
   14ee4:	umull	r8, r3, r3, r2
   14ee8:	bls	14f40 <sprintf@plt+0x3998>
   14eec:	cmp	r7, sl
   14ef0:	lsr	lr, lr, #5
   14ef4:	lsr	r3, r3, #3
   14ef8:	bls	14bdc <sprintf@plt+0x3634>
   14efc:	add	r3, r3, r3, lsl #2
   14f00:	mov	r4, #100	; 0x64
   14f04:	add	r0, r0, #4
   14f08:	strb	r5, [r0, #-4]
   14f0c:	mls	r4, r4, lr, r2
   14f10:	ldrb	lr, [r9, lr]
   14f14:	sub	r2, r2, r3, lsl #1
   14f18:	ldr	r3, [sp, #12]
   14f1c:	uxtb	r4, r4
   14f20:	uxtb	r2, r2
   14f24:	ldrb	r2, [r9, r2]
   14f28:	strb	lr, [r0, #-3]
   14f2c:	umull	r3, r4, r3, r4
   14f30:	strb	r2, [r0, #-1]
   14f34:	ldrb	r3, [r9, r4, lsr #3]
   14f38:	strb	r3, [r0, #-2]
   14f3c:	b	14eb0 <sprintf@plt+0x3908>
   14f40:	cmp	r7, r0
   14f44:	mov	r3, r0
   14f48:	bls	14bdc <sprintf@plt+0x3634>
   14f4c:	strb	r2, [r3], #1
   14f50:	mov	r0, r3
   14f54:	b	14eb0 <sprintf@plt+0x3908>
   14f58:	cmp	ip, #65	; 0x41
   14f5c:	bne	14bdc <sprintf@plt+0x3634>
   14f60:	ldrb	r9, [r1, #1]
   14f64:	cmp	r9, #0
   14f68:	beq	15034 <sprintf@plt+0x3a8c>
   14f6c:	add	r3, r9, #7
   14f70:	add	r3, r5, r3, lsr #3
   14f74:	add	r3, r3, #1
   14f78:	cmp	r7, r3
   14f7c:	bls	14bdc <sprintf@plt+0x3634>
   14f80:	add	r3, r9, #3
   14f84:	cmp	r9, #99	; 0x63
   14f88:	asr	r3, r3, #2
   14f8c:	bgt	150c8 <sprintf@plt+0x3b20>
   14f90:	cmp	r9, #9
   14f94:	addgt	r3, r3, #8
   14f98:	bgt	15048 <sprintf@plt+0x3aa0>
   14f9c:	mov	r2, #7
   14fa0:	add	r3, r2, r3
   14fa4:	add	r3, r5, r3
   14fa8:	cmp	r7, r3
   14fac:	bls	14bdc <sprintf@plt+0x3634>
   14fb0:	ldr	r3, [fp]
   14fb4:	mov	r4, r5
   14fb8:	cmp	r9, #7
   14fbc:	add	r6, r1, #2
   14fc0:	str	r3, [r4], #3
   14fc4:	ble	15068 <sprintf@plt+0x3ac0>
   14fc8:	movw	sl, #40476	; 0x9e1c
   14fcc:	movt	sl, #1
   14fd0:	mov	r8, r9
   14fd4:	mov	r0, r4
   14fd8:	ldrb	r2, [r6], #1
   14fdc:	sub	r8, r8, #8
   14fe0:	mov	r1, sl
   14fe4:	add	r4, r4, #2
   14fe8:	bl	115a8 <sprintf@plt>
   14fec:	cmp	r8, #7
   14ff0:	bgt	14fd4 <sprintf@plt+0x3a2c>
   14ff4:	cmp	r8, #4
   14ff8:	bgt	15074 <sprintf@plt+0x3acc>
   14ffc:	cmp	r8, #0
   15000:	bne	1509c <sprintf@plt+0x3af4>
   15004:	mov	r2, r9
   15008:	movw	r1, #40488	; 0x9e28
   1500c:	movt	r1, #1
   15010:	mov	r0, r4
   15014:	bl	115a8 <sprintf@plt>
   15018:	add	r0, r4, r0
   1501c:	sub	r5, r0, r5
   15020:	cmp	r5, #0
   15024:	blt	14bdc <sprintf@plt+0x3634>
   15028:	mov	r1, r6
   1502c:	mov	r5, r0
   15030:	b	14d3c <sprintf@plt+0x3794>
   15034:	add	r3, r5, #33	; 0x21
   15038:	cmp	r7, r3
   1503c:	bls	14bdc <sprintf@plt+0x3634>
   15040:	mov	r3, #73	; 0x49
   15044:	mov	r9, #256	; 0x100
   15048:	add	r3, r5, r3
   1504c:	cmp	r7, r3
   15050:	bls	14bdc <sprintf@plt+0x3634>
   15054:	ldr	r3, [fp]
   15058:	mov	r4, r5
   1505c:	add	r6, r1, #2
   15060:	str	r3, [r4], #3
   15064:	b	14fc8 <sprintf@plt+0x3a20>
   15068:	cmp	r9, #4
   1506c:	mov	r8, r9
   15070:	ble	1509c <sprintf@plt+0x3af4>
   15074:	ldrb	r3, [r6], #1
   15078:	rsb	r8, r8, #8
   1507c:	mov	r2, #255	; 0xff
   15080:	movw	r1, #40476	; 0x9e1c
   15084:	movt	r1, #1
   15088:	mov	r0, r4
   1508c:	add	r4, r4, #2
   15090:	and	r2, r3, r2, lsl r8
   15094:	bl	115a8 <sprintf@plt>
   15098:	b	15004 <sprintf@plt+0x3a5c>
   1509c:	ldrb	r2, [r6], #1
   150a0:	mov	r3, #15
   150a4:	rsb	r8, r8, #4
   150a8:	lsl	r8, r3, r8
   150ac:	movw	r1, #40484	; 0x9e24
   150b0:	movt	r1, #1
   150b4:	mov	r0, r4
   150b8:	add	r4, r4, #1
   150bc:	and	r2, r8, r2, lsr #4
   150c0:	bl	115a8 <sprintf@plt>
   150c4:	b	15004 <sprintf@plt+0x3a5c>
   150c8:	mov	r2, #9
   150cc:	b	14fa0 <sprintf@plt+0x39f8>
   150d0:	ldr	r3, [sp, #8]
   150d4:	cmp	r3, r5
   150d8:	beq	15138 <sprintf@plt+0x3b90>
   150dc:	cmp	r7, r5
   150e0:	bls	14bdc <sprintf@plt+0x3634>
   150e4:	ldr	r3, [sp, #8]
   150e8:	mov	r2, #0
   150ec:	strb	r2, [r5], #1
   150f0:	sub	r5, r5, r3
   150f4:	cmn	r5, #1
   150f8:	beq	14be8 <sprintf@plt+0x3640>
   150fc:	ldr	r3, [sp, #4]
   15100:	cmp	r3, #0
   15104:	ble	14bf0 <sprintf@plt+0x3648>
   15108:	ldr	r3, [sp, #8]
   1510c:	ldrb	r3, [r3]
   15110:	cmp	r3, #46	; 0x2e
   15114:	bne	14bf0 <sprintf@plt+0x3648>
   15118:	ldr	r3, [sp, #8]
   1511c:	strb	r2, [r3]
   15120:	b	14bf0 <sprintf@plt+0x3648>
   15124:	sub	r3, r1, r6
   15128:	cmn	r3, #1
   1512c:	str	r3, [sp, #4]
   15130:	bne	14d00 <sprintf@plt+0x3758>
   15134:	b	14be8 <sprintf@plt+0x3640>
   15138:	cmp	r7, r3
   1513c:	movhi	r5, r3
   15140:	movhi	r3, #46	; 0x2e
   15144:	strbhi	r3, [r5], #1
   15148:	bhi	150dc <sprintf@plt+0x3b34>
   1514c:	b	14bdc <sprintf@plt+0x3634>
   15150:	cmp	r1, r0
   15154:	mov	r3, r0
   15158:	str	r4, [sp, #-8]!
   1515c:	str	lr, [sp, #4]
   15160:	bls	151b4 <sprintf@plt+0x3c0c>
   15164:	ldrb	r2, [r3], #1
   15168:	cmp	r2, #0
   1516c:	beq	151b4 <sprintf@plt+0x3c0c>
   15170:	mov	ip, r0
   15174:	and	lr, r2, #192	; 0xc0
   15178:	cmp	lr, #64	; 0x40
   1517c:	beq	151d0 <sprintf@plt+0x3c28>
   15180:	cmp	lr, #192	; 0xc0
   15184:	beq	151b0 <sprintf@plt+0x3c08>
   15188:	cmp	lr, #0
   1518c:	beq	15210 <sprintf@plt+0x3c68>
   15190:	bl	1159c <__errno_location@plt>
   15194:	mov	r2, #90	; 0x5a
   15198:	mvn	r3, #0
   1519c:	ldr	r4, [sp]
   151a0:	add	sp, sp, #4
   151a4:	str	r2, [r0]
   151a8:	mov	r0, r3
   151ac:	pop	{pc}		; (ldr pc, [sp], #4)
   151b0:	add	r3, ip, #2
   151b4:	cmp	r1, r3
   151b8:	bcc	15190 <sprintf@plt+0x3be8>
   151bc:	sub	r3, r3, r0
   151c0:	ldr	r4, [sp]
   151c4:	add	sp, sp, #4
   151c8:	mov	r0, r3
   151cc:	pop	{pc}		; (ldr pc, [sp], #4)
   151d0:	cmp	r2, #65	; 0x41
   151d4:	bne	15190 <sprintf@plt+0x3be8>
   151d8:	ldrb	ip, [ip, #1]
   151dc:	cmp	ip, #0
   151e0:	addne	ip, ip, #7
   151e4:	moveq	ip, #33	; 0x21
   151e8:	asrne	ip, ip, #3
   151ec:	addne	ip, ip, #1
   151f0:	add	ip, r3, ip
   151f4:	cmp	r1, ip
   151f8:	mov	r3, ip
   151fc:	bls	151b4 <sprintf@plt+0x3c0c>
   15200:	ldrb	r2, [r3], #1
   15204:	cmp	r2, #0
   15208:	bne	15174 <sprintf@plt+0x3bcc>
   1520c:	b	151b4 <sprintf@plt+0x3c0c>
   15210:	add	ip, r3, r2
   15214:	b	151f4 <sprintf@plt+0x3c4c>
   15218:	ldrh	r0, [r0]
   1521c:	rev16	r0, r0
   15220:	uxth	r0, r0
   15224:	bx	lr
   15228:	ldr	r0, [r0]
   1522c:	rev	r0, r0
   15230:	bx	lr
   15234:	ubfx	r3, r0, #8, #8
   15238:	strb	r3, [r1]
   1523c:	strb	r0, [r1, #1]
   15240:	bx	lr
   15244:	lsr	r2, r0, #24
   15248:	lsr	r3, r0, #16
   1524c:	strb	r0, [r1, #3]
   15250:	lsr	r0, r0, #8
   15254:	strb	r2, [r1]
   15258:	strb	r3, [r1, #1]
   1525c:	strb	r0, [r1, #2]
   15260:	bx	lr
   15264:	strd	r4, [sp, #-36]!	; 0xffffffdc
   15268:	strd	r6, [sp, #8]
   1526c:	strd	r8, [sp, #16]
   15270:	strd	sl, [sp, #24]
   15274:	mov	fp, r3
   15278:	str	lr, [sp, #32]
   1527c:	sub	sp, sp, #404	; 0x194
   15280:	ldr	ip, [sp, #440]	; 0x1b8
   15284:	str	r1, [sp, #8]
   15288:	str	r2, [sp, #12]
   1528c:	cmp	ip, #11
   15290:	movgt	r3, #0
   15294:	movle	r3, #1
   15298:	cmp	fp, #0
   1529c:	moveq	r3, #1
   152a0:	cmp	r3, #0
   152a4:	bne	153e4 <sprintf@plt+0x3e3c>
   152a8:	str	r3, [fp, #2]
   152ac:	subs	r2, ip, #16
   152b0:	ldr	r1, [fp]
   152b4:	str	r2, [sp, #4]
   152b8:	mov	r2, #0
   152bc:	movt	r2, #61574	; 0xf086
   152c0:	str	r3, [fp, #6]
   152c4:	strh	r3, [fp, #10]
   152c8:	str	fp, [sp, #64]	; 0x40
   152cc:	and	r2, r2, r1
   152d0:	str	r3, [sp, #68]	; 0x44
   152d4:	orr	r2, r2, #65536	; 0x10000
   152d8:	str	r2, [fp]
   152dc:	bmi	153e4 <sprintf@plt+0x3e3c>
   152e0:	mov	r5, r0
   152e4:	add	r3, sp, #145	; 0x91
   152e8:	ldrb	r9, [r5], #1
   152ec:	add	r4, sp, #144	; 0x90
   152f0:	str	r3, [sp, #56]	; 0x38
   152f4:	cmp	r9, #0
   152f8:	moveq	r8, r4
   152fc:	beq	153b8 <sprintf@plt+0x3e10>
   15300:	movw	r6, #40140	; 0x9ccc
   15304:	movt	r6, #1
   15308:	mov	r8, r4
   1530c:	b	15344 <sprintf@plt+0x3d9c>
   15310:	add	r2, sp, #396	; 0x18c
   15314:	add	r2, r2, #3
   15318:	cmp	r3, r2
   1531c:	bcs	153d8 <sprintf@plt+0x3e30>
   15320:	add	r1, r3, #1
   15324:	mov	r2, r5
   15328:	str	r1, [sp, #56]	; 0x38
   1532c:	strb	r9, [r3]
   15330:	ldrb	r9, [r2], #1
   15334:	cmp	r9, #0
   15338:	beq	153c4 <sprintf@plt+0x3e1c>
   1533c:	mov	r0, r5
   15340:	mov	r5, r2
   15344:	cmp	r9, #92	; 0x5c
   15348:	beq	15408 <sprintf@plt+0x3e60>
   1534c:	cmp	r9, #46	; 0x2e
   15350:	ldr	r3, [sp, #56]	; 0x38
   15354:	bne	15310 <sprintf@plt+0x3d68>
   15358:	sub	r3, r3, r8
   1535c:	sub	r2, r3, #1
   15360:	tst	r2, #192	; 0xc0
   15364:	bne	153d8 <sprintf@plt+0x3e30>
   15368:	add	r3, sp, #396	; 0x18c
   1536c:	add	r3, r3, #3
   15370:	cmp	r8, r3
   15374:	bcs	153d8 <sprintf@plt+0x3e30>
   15378:	strb	r2, [r8]
   1537c:	ldrb	r1, [r0, #1]
   15380:	cmp	r1, #0
   15384:	beq	15b6c <sprintf@plt+0x45c4>
   15388:	cmp	r2, #0
   1538c:	cmpne	r1, #46	; 0x2e
   15390:	beq	153d8 <sprintf@plt+0x3e30>
   15394:	mov	r2, r5
   15398:	ldr	r8, [sp, #56]	; 0x38
   1539c:	ldrb	r9, [r2], #1
   153a0:	add	r1, r8, #1
   153a4:	cmp	r9, #0
   153a8:	str	r1, [sp, #56]	; 0x38
   153ac:	bne	1533c <sprintf@plt+0x3d94>
   153b0:	cmp	r8, r3
   153b4:	bcs	153d8 <sprintf@plt+0x3e30>
   153b8:	mov	r3, #0
   153bc:	strb	r3, [r8]
   153c0:	b	15738 <sprintf@plt+0x4190>
   153c4:	ldr	r3, [sp, #56]	; 0x38
   153c8:	sub	r3, r3, r8
   153cc:	sub	r3, r3, #1
   153d0:	ands	r1, r3, #192	; 0xc0
   153d4:	beq	15704 <sprintf@plt+0x415c>
   153d8:	bl	1159c <__errno_location@plt>
   153dc:	mov	r3, #90	; 0x5a
   153e0:	str	r3, [r0]
   153e4:	mvn	r2, #0
   153e8:	mov	r0, r2
   153ec:	add	sp, sp, #404	; 0x194
   153f0:	ldrd	r4, [sp]
   153f4:	ldrd	r6, [sp, #8]
   153f8:	ldrd	r8, [sp, #16]
   153fc:	ldrd	sl, [sp, #24]
   15400:	add	sp, sp, #32
   15404:	pop	{pc}		; (ldr pc, [sp], #4)
   15408:	mov	sl, r5
   1540c:	ldrb	r9, [sl], #1
   15410:	cmp	r9, #0
   15414:	beq	153c4 <sprintf@plt+0x3e1c>
   15418:	cmp	r9, #91	; 0x5b
   1541c:	beq	154a4 <sprintf@plt+0x3efc>
   15420:	movw	r0, #40140	; 0x9ccc
   15424:	movt	r0, #1
   15428:	mov	r1, r9
   1542c:	bl	112cc <strchr@plt>
   15430:	cmp	r0, #0
   15434:	beq	15654 <sprintf@plt+0x40ac>
   15438:	ldrb	r1, [r5, #1]
   1543c:	sub	r0, r0, r6
   15440:	mov	r9, #100	; 0x64
   15444:	mul	r9, r9, r0
   15448:	cmp	r1, #0
   1544c:	beq	153d8 <sprintf@plt+0x3e30>
   15450:	mov	r0, r6
   15454:	bl	112cc <strchr@plt>
   15458:	cmp	r0, #0
   1545c:	beq	153d8 <sprintf@plt+0x3e30>
   15460:	ldrb	r1, [r5, #2]
   15464:	sub	r0, r0, r6
   15468:	add	r5, r5, #3
   1546c:	add	r0, r0, r0, lsl #2
   15470:	add	r9, r9, r0, lsl #1
   15474:	cmp	r1, #0
   15478:	beq	153d8 <sprintf@plt+0x3e30>
   1547c:	mov	r0, r6
   15480:	bl	112cc <strchr@plt>
   15484:	cmp	r0, #0
   15488:	beq	153d8 <sprintf@plt+0x3e30>
   1548c:	sub	r0, r0, r6
   15490:	add	r9, r0, r9
   15494:	cmp	r9, #255	; 0xff
   15498:	bgt	153d8 <sprintf@plt+0x3e30>
   1549c:	ldr	r3, [sp, #56]	; 0x38
   154a0:	b	15310 <sprintf@plt+0x3d68>
   154a4:	mov	r1, #93	; 0x5d
   154a8:	mov	r0, sl
   154ac:	bl	112cc <strchr@plt>
   154b0:	cmp	r0, #0
   154b4:	beq	15644 <sprintf@plt+0x409c>
   154b8:	add	r9, r0, #2
   154bc:	mov	r7, #0
   154c0:	sub	sl, r9, sl
   154c4:	cmp	sl, #1
   154c8:	str	r7, [sp, #60]	; 0x3c
   154cc:	ble	15634 <sprintf@plt+0x408c>
   154d0:	ldrb	r3, [r5, #1]
   154d4:	cmp	r3, #120	; 0x78
   154d8:	bne	15634 <sprintf@plt+0x408c>
   154dc:	bl	11488 <__ctype_b_loc@plt>
   154e0:	ldrb	r2, [r5, #2]
   154e4:	ldr	ip, [r0]
   154e8:	lsl	r3, r2, #1
   154ec:	ldrh	r3, [ip, r3]
   154f0:	tst	r3, #4096	; 0x1000
   154f4:	beq	15634 <sprintf@plt+0x408c>
   154f8:	add	r3, sp, #396	; 0x18c
   154fc:	add	r5, r5, #2
   15500:	add	r3, r3, #3
   15504:	add	r1, sp, #60	; 0x3c
   15508:	cmp	r9, r5
   1550c:	cmphi	r3, r1
   15510:	bls	15ba0 <sprintf@plt+0x45f8>
   15514:	mov	sl, r1
   15518:	mov	r0, r7
   1551c:	str	r7, [sp, #16]
   15520:	mov	r1, r7
   15524:	str	r7, [sp, #20]
   15528:	cmp	r2, #47	; 0x2f
   1552c:	beq	15660 <sprintf@plt+0x40b8>
   15530:	cmp	r2, #93	; 0x5d
   15534:	bne	1568c <sprintf@plt+0x40e4>
   15538:	cmp	r1, #0
   1553c:	beq	15570 <sprintf@plt+0x3fc8>
   15540:	cmp	r0, #0
   15544:	str	r3, [sp, #24]
   15548:	beq	15634 <sprintf@plt+0x408c>
   1554c:	mov	r2, #10
   15550:	add	r1, sp, #60	; 0x3c
   15554:	bl	1141c <strtol@plt>
   15558:	mov	r1, r0
   1555c:	ldr	r3, [sp, #24]
   15560:	ldr	r2, [sp, #60]	; 0x3c
   15564:	ldrb	r2, [r2]
   15568:	cmp	r2, #93	; 0x5d
   1556c:	bne	15634 <sprintf@plt+0x408c>
   15570:	ldr	r2, [sp, #16]
   15574:	cmp	r2, #0
   15578:	beq	15588 <sprintf@plt+0x3fe0>
   1557c:	ldr	r2, [sp, #20]
   15580:	lsl	r2, r2, #4
   15584:	strb	r2, [sl], #1
   15588:	cmp	sl, r3
   1558c:	add	r5, r5, #1
   15590:	movcc	r0, #0
   15594:	movcs	r0, #1
   15598:	cmp	r9, r5
   1559c:	movhi	r9, r0
   155a0:	orrls	r9, r0, #1
   155a4:	cmp	r9, #0
   155a8:	bne	15b48 <sprintf@plt+0x45a0>
   155ac:	cmp	r1, #0
   155b0:	ble	155e0 <sprintf@plt+0x4038>
   155b4:	add	r2, r1, #3
   155b8:	bic	r2, r2, #3
   155bc:	cmp	r2, r7
   155c0:	bne	15634 <sprintf@plt+0x408c>
   155c4:	ldr	r0, [sp, #20]
   155c8:	sub	r2, r7, r1
   155cc:	rsb	r2, r2, #8
   155d0:	lsl	r2, r0, r2
   155d4:	tst	r2, #255	; 0xff
   155d8:	bne	15634 <sprintf@plt+0x408c>
   155dc:	mov	r7, r1
   155e0:	cmp	r7, #256	; 0x100
   155e4:	uxtbne	r7, r7
   155e8:	moveq	r7, #0
   155ec:	mov	r1, #65	; 0x41
   155f0:	add	r2, sl, #1
   155f4:	strb	r1, [r8]
   155f8:	ldr	r1, [sp, #56]	; 0x38
   155fc:	strb	r7, [r1]
   15600:	ldrb	r1, [r5]
   15604:	str	r2, [sp, #56]	; 0x38
   15608:	cmp	r1, #0
   1560c:	beq	15b5c <sprintf@plt+0x45b4>
   15610:	cmp	r1, #46	; 0x2e
   15614:	bne	15644 <sprintf@plt+0x409c>
   15618:	ldrb	r9, [r5, #1]
   1561c:	add	r2, r5, #2
   15620:	cmp	r9, #0
   15624:	beq	15bc0 <sprintf@plt+0x4618>
   15628:	add	r5, r5, #1
   1562c:	mov	r8, sl
   15630:	b	1533c <sprintf@plt+0x3d94>
   15634:	mov	r4, #22
   15638:	bl	1159c <__errno_location@plt>
   1563c:	str	r4, [r0]
   15640:	b	153e4 <sprintf@plt+0x3e3c>
   15644:	bl	1159c <__errno_location@plt>
   15648:	mov	r3, #22
   1564c:	str	r3, [r0]
   15650:	b	153e4 <sprintf@plt+0x3e3c>
   15654:	mov	r5, sl
   15658:	ldr	r3, [sp, #56]	; 0x38
   1565c:	b	15310 <sprintf@plt+0x3d68>
   15660:	mov	r1, #1
   15664:	add	r5, r5, #1
   15668:	cmp	r9, r5
   1566c:	movls	r2, #0
   15670:	movhi	r2, #1
   15674:	cmp	sl, r3
   15678:	movcs	r2, #0
   1567c:	cmp	r2, #0
   15680:	beq	15b28 <sprintf@plt+0x4580>
   15684:	ldrb	r2, [r5]
   15688:	b	15528 <sprintf@plt+0x3f80>
   1568c:	lsl	lr, r2, #1
   15690:	cmp	r1, #0
   15694:	ldrh	lr, [ip, lr]
   15698:	bne	156e4 <sprintf@plt+0x413c>
   1569c:	tst	lr, #4096	; 0x1000
   156a0:	beq	15634 <sprintf@plt+0x408c>
   156a4:	ldr	lr, [sp, #16]
   156a8:	add	r2, r6, r2
   156ac:	add	r7, r7, #4
   156b0:	cmp	r7, #256	; 0x100
   156b4:	ldrb	r2, [r2, #12]
   156b8:	add	lr, lr, #4
   156bc:	str	lr, [sp, #16]
   156c0:	ldr	lr, [sp, #20]
   156c4:	add	r2, r2, lr, lsl #4
   156c8:	str	r2, [sp, #20]
   156cc:	bgt	15634 <sprintf@plt+0x408c>
   156d0:	ldr	lr, [sp, #16]
   156d4:	cmp	lr, #8
   156d8:	strbeq	r2, [sl], #1
   156dc:	streq	r1, [sp, #16]
   156e0:	b	15664 <sprintf@plt+0x40bc>
   156e4:	tst	lr, #2048	; 0x800
   156e8:	beq	15634 <sprintf@plt+0x408c>
   156ec:	cmp	r0, #0
   156f0:	bne	15664 <sprintf@plt+0x40bc>
   156f4:	cmp	r2, #48	; 0x30
   156f8:	beq	15634 <sprintf@plt+0x408c>
   156fc:	mov	r0, r5
   15700:	b	15664 <sprintf@plt+0x40bc>
   15704:	add	r2, sp, #396	; 0x18c
   15708:	add	r2, r2, #3
   1570c:	cmp	r8, r2
   15710:	bcs	153d8 <sprintf@plt+0x3e30>
   15714:	cmp	r3, #0
   15718:	strb	r3, [r8]
   1571c:	beq	15738 <sprintf@plt+0x4190>
   15720:	ldr	r3, [sp, #56]	; 0x38
   15724:	cmp	r3, r2
   15728:	addcc	r2, r3, #1
   1572c:	strcc	r2, [sp, #56]	; 0x38
   15730:	strbcc	r1, [r3]
   15734:	bcs	153d8 <sprintf@plt+0x3e30>
   15738:	ldr	r3, [sp, #56]	; 0x38
   1573c:	sub	r3, r3, r4
   15740:	cmp	r3, #255	; 0xff
   15744:	bgt	153d8 <sprintf@plt+0x3e30>
   15748:	ldr	r8, [sp, #64]	; 0x40
   1574c:	cmp	r8, #0
   15750:	moveq	r9, r8
   15754:	beq	15774 <sprintf@plt+0x41cc>
   15758:	ldr	r3, [sp, #68]	; 0x44
   1575c:	add	r9, sp, #68	; 0x44
   15760:	cmp	r3, #0
   15764:	beq	15774 <sprintf@plt+0x41cc>
   15768:	ldr	r3, [r9, #4]!
   1576c:	cmp	r3, #0
   15770:	bne	15768 <sprintf@plt+0x41c0>
   15774:	mov	r1, #0
   15778:	mov	r2, r4
   1577c:	ldrb	r0, [r2]
   15780:	and	ip, r0, #192	; 0xc0
   15784:	add	r3, r0, #1
   15788:	cmp	ip, #192	; 0xc0
   1578c:	beq	159b0 <sprintf@plt+0x4408>
   15790:	cmp	ip, #64	; 0x40
   15794:	beq	15978 <sprintf@plt+0x43d0>
   15798:	add	r1, r1, r3
   1579c:	add	r2, r2, r3
   157a0:	cmp	r1, #255	; 0xff
   157a4:	bgt	159b0 <sprintf@plt+0x4408>
   157a8:	cmp	r0, #0
   157ac:	bne	1577c <sprintf@plt+0x41d4>
   157b0:	ldr	r3, [sp, #4]
   157b4:	add	sl, fp, #12
   157b8:	str	sl, [sp, #20]
   157bc:	str	r9, [sp, #32]
   157c0:	str	r9, [sp, #36]	; 0x24
   157c4:	add	r3, sl, r3
   157c8:	str	r0, [sp, #48]	; 0x30
   157cc:	str	fp, [sp, #52]	; 0x34
   157d0:	mov	fp, r8
   157d4:	str	r3, [sp, #4]
   157d8:	adds	r3, r8, #0
   157dc:	movne	r3, #1
   157e0:	str	r3, [sp, #24]
   157e4:	mov	r3, #1
   157e8:	str	r3, [sp, #44]	; 0x2c
   157ec:	b	15834 <sprintf@plt+0x428c>
   157f0:	and	r3, r5, #192	; 0xc0
   157f4:	cmp	r3, #192	; 0xc0
   157f8:	beq	159b0 <sprintf@plt+0x4408>
   157fc:	cmp	r3, #64	; 0x40
   15800:	beq	159c4 <sprintf@plt+0x441c>
   15804:	ldr	r3, [sp, #4]
   15808:	add	r2, r5, #1
   1580c:	add	r6, sl, r2
   15810:	cmp	r3, r6
   15814:	bls	159b0 <sprintf@plt+0x4408>
   15818:	mov	r1, r4
   1581c:	mov	r0, sl
   15820:	add	r4, r4, r2
   15824:	bl	113f8 <memcpy@plt>
   15828:	cmp	r5, #0
   1582c:	beq	15b18 <sprintf@plt+0x4570>
   15830:	mov	sl, r6
   15834:	ldrb	r5, [r4]
   15838:	ldr	r3, [sp, #24]
   1583c:	cmp	r5, #0
   15840:	moveq	r3, #0
   15844:	cmp	r3, #0
   15848:	beq	157f0 <sprintf@plt+0x4248>
   1584c:	ldr	r2, [sp, #32]
   15850:	add	r3, sp, #68	; 0x44
   15854:	cmp	r2, r3
   15858:	bls	15910 <sprintf@plt+0x4368>
   1585c:	add	r3, sp, #64	; 0x40
   15860:	mov	r8, r5
   15864:	str	r3, [sp, #16]
   15868:	ldr	r3, [sp, #16]
   1586c:	ldr	r0, [r3, #4]
   15870:	add	r3, r3, #4
   15874:	str	r3, [sp, #40]	; 0x28
   15878:	ldrb	r2, [r0]
   1587c:	cmp	r2, #0
   15880:	beq	158f0 <sprintf@plt+0x4348>
   15884:	tst	r2, #192	; 0xc0
   15888:	bne	158f0 <sprintf@plt+0x4348>
   1588c:	sub	r9, r0, fp
   15890:	cmp	r9, #16384	; 0x4000
   15894:	bge	158f0 <sprintf@plt+0x4348>
   15898:	mov	lr, r2
   1589c:	mov	r3, r2
   158a0:	str	r9, [sp, #28]
   158a4:	mov	r1, r4
   158a8:	mov	ip, r0
   158ac:	ands	r5, r3, #192	; 0xc0
   158b0:	beq	15a08 <sprintf@plt+0x4460>
   158b4:	cmp	r5, #192	; 0xc0
   158b8:	bne	15964 <sprintf@plt+0x43bc>
   158bc:	ldrb	r3, [ip, #1]
   158c0:	lsl	ip, lr, #8
   158c4:	and	ip, ip, #16128	; 0x3f00
   158c8:	orr	ip, ip, r3
   158cc:	add	ip, fp, ip
   158d0:	ldrb	r3, [ip]
   158d4:	cmp	r3, #0
   158d8:	mov	lr, r3
   158dc:	bne	158ac <sprintf@plt+0x4304>
   158e0:	add	r2, r2, #1
   158e4:	ldrb	r2, [r0, r2]!
   158e8:	cmp	r2, #0
   158ec:	bne	15884 <sprintf@plt+0x42dc>
   158f0:	ldr	r3, [sp, #16]
   158f4:	ldr	r2, [sp, #40]	; 0x28
   158f8:	add	r3, r3, #8
   158fc:	str	r2, [sp, #16]
   15900:	ldr	r2, [sp, #32]
   15904:	cmp	r2, r3
   15908:	bhi	15868 <sprintf@plt+0x42c0>
   1590c:	mov	r5, r8
   15910:	bl	1159c <__errno_location@plt>
   15914:	mov	r3, #2
   15918:	str	r3, [r0]
   1591c:	ldr	r2, [sp, #36]	; 0x24
   15920:	add	r3, sp, #140	; 0x8c
   15924:	cmp	r2, r3
   15928:	bcs	157f0 <sprintf@plt+0x4248>
   1592c:	sub	r3, sl, fp
   15930:	cmp	r3, #16384	; 0x4000
   15934:	bge	157f0 <sprintf@plt+0x4248>
   15938:	ldr	r3, [sp, #44]	; 0x2c
   1593c:	cmp	r3, #0
   15940:	beq	157f0 <sprintf@plt+0x4248>
   15944:	mov	r1, #0
   15948:	mov	r3, r2
   1594c:	str	r1, [sp, #44]	; 0x2c
   15950:	ldr	r1, [sp, #48]	; 0x30
   15954:	str	sl, [r3], #4
   15958:	str	r3, [sp, #36]	; 0x24
   1595c:	str	r1, [r2, #4]
   15960:	b	157f0 <sprintf@plt+0x4248>
   15964:	bl	1159c <__errno_location@plt>
   15968:	mov	r3, #90	; 0x5a
   1596c:	mov	r5, r8
   15970:	str	r3, [r0]
   15974:	b	1591c <sprintf@plt+0x4374>
   15978:	cmp	r0, #65	; 0x41
   1597c:	mov	ip, #34	; 0x22
   15980:	mov	r3, #32
   15984:	bne	15afc <sprintf@plt+0x4554>
   15988:	ldrb	r0, [r2, #1]
   1598c:	cmp	r0, #0
   15990:	add	lr, r0, #7
   15994:	asrne	r3, lr, #3
   15998:	addne	ip, r3, #2
   1599c:	add	r3, r3, #2
   159a0:	add	r1, r1, ip
   159a4:	add	r2, r2, r3
   159a8:	cmp	r1, #255	; 0xff
   159ac:	ble	1577c <sprintf@plt+0x41d4>
   159b0:	bl	1159c <__errno_location@plt>
   159b4:	mov	r3, #90	; 0x5a
   159b8:	mvn	r2, #0
   159bc:	str	r3, [r0]
   159c0:	b	153e8 <sprintf@plt+0x3e40>
   159c4:	cmp	r5, #65	; 0x41
   159c8:	bne	15b50 <sprintf@plt+0x45a8>
   159cc:	ldrb	r2, [r4, #1]
   159d0:	cmp	r2, #0
   159d4:	addne	r2, r2, #7
   159d8:	moveq	r2, #34	; 0x22
   159dc:	asrne	r2, r2, #3
   159e0:	addne	r2, r2, #2
   159e4:	add	r6, sl, r2
   159e8:	ldr	r3, [sp, #4]
   159ec:	cmp	r3, r6
   159f0:	bls	159b0 <sprintf@plt+0x4408>
   159f4:	mov	r1, r4
   159f8:	mov	r0, sl
   159fc:	add	r4, r4, r2
   15a00:	bl	113f8 <memcpy@plt>
   15a04:	b	15830 <sprintf@plt+0x4288>
   15a08:	ldrb	lr, [r1], #1
   15a0c:	cmp	lr, r3
   15a10:	bne	158e0 <sprintf@plt+0x4338>
   15a14:	cmp	r3, #0
   15a18:	add	r6, ip, #1
   15a1c:	bne	15a2c <sprintf@plt+0x4484>
   15a20:	b	15a60 <sprintf@plt+0x44b8>
   15a24:	cmn	r7, r3
   15a28:	beq	15a60 <sprintf@plt+0x44b8>
   15a2c:	ldrb	lr, [r1], #1
   15a30:	sub	r5, lr, #65	; 0x41
   15a34:	cmp	r5, #25
   15a38:	ldrb	r5, [r6], #1
   15a3c:	addls	lr, lr, #32
   15a40:	sub	r9, r5, #65	; 0x41
   15a44:	rsb	r7, r6, #1
   15a48:	cmp	r9, #25
   15a4c:	add	r7, ip, r7
   15a50:	addls	r5, r5, #32
   15a54:	cmp	r5, lr
   15a58:	beq	15a24 <sprintf@plt+0x447c>
   15a5c:	b	158e0 <sprintf@plt+0x4338>
   15a60:	ldrb	r3, [r1]
   15a64:	cmp	r3, #0
   15a68:	bne	15b10 <sprintf@plt+0x4568>
   15a6c:	ldrb	r3, [r6]
   15a70:	ldr	r9, [sp, #28]
   15a74:	cmp	r3, #0
   15a78:	bne	158e0 <sprintf@plt+0x4338>
   15a7c:	cmp	r9, #0
   15a80:	mov	r5, r8
   15a84:	blt	1591c <sprintf@plt+0x4374>
   15a88:	ldr	r2, [sp, #4]
   15a8c:	add	r3, sl, #1
   15a90:	ldr	fp, [sp, #52]	; 0x34
   15a94:	cmp	r2, r3
   15a98:	bls	159b0 <sprintf@plt+0x4408>
   15a9c:	ldr	r2, [sp, #20]
   15aa0:	mvn	r3, #63	; 0x3f
   15aa4:	add	r6, sl, #2
   15aa8:	orr	r3, r3, r9, asr #8
   15aac:	strb	r3, [sl]
   15ab0:	sub	r6, r6, r2
   15ab4:	strb	r9, [sl, #1]
   15ab8:	cmp	r6, #0
   15abc:	blt	153e4 <sprintf@plt+0x3e3c>
   15ac0:	ldr	r4, [sp, #8]
   15ac4:	mov	r1, #256	; 0x100
   15ac8:	ldr	ip, [sp, #12]
   15acc:	ldr	lr, [sp, #20]
   15ad0:	ubfx	r0, r4, #8, #8
   15ad4:	ubfx	r2, ip, #8, #8
   15ad8:	add	r3, lr, r6
   15adc:	strb	r2, [lr, r6]
   15ae0:	add	r2, r3, #4
   15ae4:	sub	r2, r2, fp
   15ae8:	strb	ip, [r3, #1]
   15aec:	strb	r0, [r3, #2]
   15af0:	strb	r4, [r3, #3]
   15af4:	strh	r1, [fp, #4]
   15af8:	b	153e8 <sprintf@plt+0x3e40>
   15afc:	bl	1159c <__errno_location@plt>
   15b00:	mov	r3, #22
   15b04:	mvn	r2, #0
   15b08:	str	r3, [r0]
   15b0c:	b	153e8 <sprintf@plt+0x3e40>
   15b10:	mov	ip, r6
   15b14:	b	158d0 <sprintf@plt+0x4328>
   15b18:	ldr	r3, [sp, #20]
   15b1c:	ldr	fp, [sp, #52]	; 0x34
   15b20:	sub	r6, r6, r3
   15b24:	b	15ab8 <sprintf@plt+0x4510>
   15b28:	cmp	sl, r3
   15b2c:	movcc	r2, #0
   15b30:	movcs	r2, #1
   15b34:	cmp	r9, r5
   15b38:	movhi	r9, r2
   15b3c:	orrls	r9, r2, #1
   15b40:	cmp	r9, #0
   15b44:	beq	155e0 <sprintf@plt+0x4038>
   15b48:	mov	r4, #90	; 0x5a
   15b4c:	b	15638 <sprintf@plt+0x4090>
   15b50:	mov	r6, sl
   15b54:	mov	r2, #0
   15b58:	b	159e8 <sprintf@plt+0x4440>
   15b5c:	cmp	sl, r3
   15b60:	strbcc	r1, [sl]
   15b64:	bcc	15738 <sprintf@plt+0x4190>
   15b68:	b	153d8 <sprintf@plt+0x3e30>
   15b6c:	cmp	r2, #0
   15b70:	ldr	r2, [sp, #56]	; 0x38
   15b74:	beq	15b90 <sprintf@plt+0x45e8>
   15b78:	cmp	r2, r3
   15b7c:	bcs	153d8 <sprintf@plt+0x3e30>
   15b80:	add	r3, r2, #1
   15b84:	str	r3, [sp, #56]	; 0x38
   15b88:	strb	r1, [r2]
   15b8c:	ldr	r2, [sp, #56]	; 0x38
   15b90:	sub	r2, r2, r4
   15b94:	cmp	r2, #255	; 0xff
   15b98:	ble	15748 <sprintf@plt+0x41a0>
   15b9c:	b	153d8 <sprintf@plt+0x3e30>
   15ba0:	add	r2, sp, #60	; 0x3c
   15ba4:	cmp	r9, r5
   15ba8:	cmphi	r3, r2
   15bac:	movls	r7, #1
   15bb0:	movhi	r7, #0
   15bb4:	bls	15b48 <sprintf@plt+0x45a0>
   15bb8:	mov	sl, r2
   15bbc:	b	155ec <sprintf@plt+0x4044>
   15bc0:	mov	r8, sl
   15bc4:	b	153b0 <sprintf@plt+0x3e08>
   15bc8:	mov	r1, #0
   15bcc:	str	r4, [sp, #-8]!
   15bd0:	ldr	r0, [r2]
   15bd4:	mov	r2, #10
   15bd8:	str	lr, [sp, #4]
   15bdc:	bl	1141c <strtol@plt>
   15be0:	cmp	r0, #0
   15be4:	blt	15c00 <sprintf@plt+0x4658>
   15be8:	movw	r3, #48480	; 0xbd60
   15bec:	movt	r3, #2
   15bf0:	ldr	r4, [sp]
   15bf4:	add	sp, sp, #4
   15bf8:	str	r0, [r3]
   15bfc:	pop	{pc}		; (ldr pc, [sp], #4)
   15c00:	mov	r2, r0
   15c04:	movw	r1, #40544	; 0x9e60
   15c08:	movt	r1, #1
   15c0c:	mov	r0, #67	; 0x43
   15c10:	bl	122bc <sprintf@plt+0xd14>
   15c14:	mov	r0, #3
   15c18:	bl	11590 <exit@plt>
   15c1c:	movw	r3, #40496	; 0x9e30
   15c20:	movt	r3, #1
   15c24:	str	r4, [sp, #-8]!
   15c28:	movw	r1, #39556	; 0x9a84
   15c2c:	movt	r1, #1
   15c30:	str	lr, [sp, #4]
   15c34:	movw	r0, #40584	; 0x9e88
   15c38:	movt	r0, #1
   15c3c:	mov	r2, #236	; 0xec
   15c40:	bl	11350 <__assert_fail@plt>
   15c44:	movw	r1, #39556	; 0x9a84
   15c48:	movt	r1, #1
   15c4c:	ldr	r3, [pc, #20]	; 15c68 <sprintf@plt+0x46c0>
   15c50:	movw	r0, #39584	; 0x9aa0
   15c54:	movt	r0, #1
   15c58:	str	r4, [sp, #-8]!
   15c5c:	mov	r2, #288	; 0x120
   15c60:	str	lr, [sp, #4]
   15c64:	bl	11350 <__assert_fail@plt>
   15c68:	andeq	r9, r1, r0, asr #28
   15c6c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   15c70:	strd	r6, [sp, #8]
   15c74:	movw	r6, #65496	; 0xffd8
   15c78:	movt	r6, #2
   15c7c:	ldr	r3, [r6]
   15c80:	str	r8, [sp, #16]
   15c84:	str	lr, [sp, #20]
   15c88:	cmp	r3, #0
   15c8c:	beq	15cf8 <sprintf@plt+0x4750>
   15c90:	ldr	r5, [r3, #8]
   15c94:	mov	r8, #0
   15c98:	mov	r7, #1
   15c9c:	ldr	r4, [r3]
   15ca0:	ldr	r3, [r4, #788]	; 0x314
   15ca4:	cmp	r3, #0
   15ca8:	strbgt	r7, [r4, #784]	; 0x310
   15cac:	ble	15cc4 <sprintf@plt+0x471c>
   15cb0:	cmp	r5, #0
   15cb4:	beq	15cf8 <sprintf@plt+0x4750>
   15cb8:	mov	r3, r5
   15cbc:	ldr	r5, [r5, #8]
   15cc0:	b	15c9c <sprintf@plt+0x46f4>
   15cc4:	ldr	r3, [r6]
   15cc8:	cmp	r3, #0
   15ccc:	beq	15ce8 <sprintf@plt+0x4740>
   15cd0:	ldr	r2, [r3]
   15cd4:	cmp	r4, r2
   15cd8:	beq	15d0c <sprintf@plt+0x4764>
   15cdc:	ldr	r3, [r3, #8]
   15ce0:	cmp	r3, #0
   15ce4:	bne	15cd0 <sprintf@plt+0x4728>
   15ce8:	mov	r0, r4
   15cec:	bl	11380 <free@plt>
   15cf0:	cmp	r5, #0
   15cf4:	bne	15cb8 <sprintf@plt+0x4710>
   15cf8:	ldrd	r4, [sp]
   15cfc:	ldrd	r6, [sp, #8]
   15d00:	ldr	r8, [sp, #16]
   15d04:	add	sp, sp, #20
   15d08:	pop	{pc}		; (ldr pc, [sp], #4)
   15d0c:	ldr	r2, [r3, #4]
   15d10:	mov	r0, r3
   15d14:	ldr	r1, [r3, #8]
   15d18:	cmp	r1, #0
   15d1c:	strne	r2, [r1, #4]
   15d20:	ldrne	r2, [r3, #4]
   15d24:	streq	r2, [r6, #4]
   15d28:	cmp	r2, #0
   15d2c:	strne	r1, [r2, #8]
   15d30:	ldr	r2, [r6, #8]
   15d34:	str	r8, [r3, #4]
   15d38:	str	r8, [r3, #8]
   15d3c:	streq	r1, [r6]
   15d40:	sub	r3, r2, #1
   15d44:	str	r3, [r6, #8]
   15d48:	bl	11404 <rb_free_rb_dlink_node@plt>
   15d4c:	mov	r0, r4
   15d50:	bl	11380 <free@plt>
   15d54:	b	15cf0 <sprintf@plt+0x4748>
   15d58:	b	15c6c <sprintf@plt+0x46c4>
   15d5c:	strd	r4, [sp, #-24]!	; 0xffffffe8
   15d60:	strd	r6, [sp, #8]
   15d64:	movw	r7, #65496	; 0xffd8
   15d68:	movt	r7, #2
   15d6c:	ldr	r4, [r7]
   15d70:	str	r8, [sp, #16]
   15d74:	str	lr, [sp, #20]
   15d78:	ldr	r8, [r2]
   15d7c:	cmp	r4, #0
   15d80:	beq	15e5c <sprintf@plt+0x48b4>
   15d84:	mov	r6, r4
   15d88:	b	15d98 <sprintf@plt+0x47f0>
   15d8c:	ldr	r6, [r6, #8]
   15d90:	cmp	r6, #0
   15d94:	beq	15e5c <sprintf@plt+0x48b4>
   15d98:	ldr	r5, [r6]
   15d9c:	mov	r1, r8
   15da0:	mov	r0, r5
   15da4:	bl	112e4 <strcasecmp@plt>
   15da8:	cmp	r0, #0
   15dac:	bne	15d8c <sprintf@plt+0x47e4>
   15db0:	cmp	r5, #0
   15db4:	beq	15e5c <sprintf@plt+0x48b4>
   15db8:	ldr	r3, [r5, #788]	; 0x314
   15dbc:	cmp	r3, #0
   15dc0:	ble	15de0 <sprintf@plt+0x4838>
   15dc4:	mov	r3, #1
   15dc8:	ldrd	r6, [sp, #8]
   15dcc:	ldr	r8, [sp, #16]
   15dd0:	strb	r3, [r5, #784]	; 0x310
   15dd4:	ldrd	r4, [sp]
   15dd8:	add	sp, sp, #20
   15ddc:	pop	{pc}		; (ldr pc, [sp], #4)
   15de0:	ldr	r3, [r4]
   15de4:	cmp	r5, r3
   15de8:	beq	15e14 <sprintf@plt+0x486c>
   15dec:	ldr	r4, [r4, #8]
   15df0:	cmp	r4, #0
   15df4:	bne	15de0 <sprintf@plt+0x4838>
   15df8:	mov	r0, r5
   15dfc:	ldrd	r4, [sp]
   15e00:	ldrd	r6, [sp, #8]
   15e04:	ldr	r8, [sp, #16]
   15e08:	ldr	lr, [sp, #20]
   15e0c:	add	sp, sp, #24
   15e10:	b	11380 <free@plt>
   15e14:	ldr	r3, [r4, #4]
   15e18:	mov	r0, r4
   15e1c:	ldr	r2, [r4, #8]
   15e20:	cmp	r2, #0
   15e24:	strne	r3, [r2, #4]
   15e28:	ldrne	r3, [r4, #4]
   15e2c:	streq	r3, [r7, #4]
   15e30:	cmp	r3, #0
   15e34:	strne	r2, [r3, #8]
   15e38:	ldr	r3, [r7, #8]
   15e3c:	streq	r2, [r7]
   15e40:	mov	r2, #0
   15e44:	str	r2, [r4, #4]
   15e48:	str	r2, [r4, #8]
   15e4c:	sub	r3, r3, #1
   15e50:	str	r3, [r7, #8]
   15e54:	bl	11404 <rb_free_rb_dlink_node@plt>
   15e58:	b	15df8 <sprintf@plt+0x4850>
   15e5c:	mov	r2, r8
   15e60:	movw	r1, #40600	; 0x9e98
   15e64:	movt	r1, #1
   15e68:	mov	r0, #87	; 0x57
   15e6c:	ldrd	r4, [sp]
   15e70:	ldrd	r6, [sp, #8]
   15e74:	ldr	r8, [sp, #16]
   15e78:	ldr	lr, [sp, #20]
   15e7c:	add	sp, sp, #24
   15e80:	b	122bc <sprintf@plt+0xd14>
   15e84:	ldr	r2, [r0, #772]	; 0x304
   15e88:	strd	r4, [sp, #-16]!
   15e8c:	mov	r5, r0
   15e90:	str	r6, [sp, #8]
   15e94:	str	lr, [sp, #12]
   15e98:	cmp	r2, #0
   15e9c:	beq	15f10 <sprintf@plt+0x4968>
   15ea0:	ldr	r4, [r2, #8]
   15ea4:	mov	r6, r4
   15ea8:	ldr	r3, [r2, #4]
   15eac:	cmp	r4, #0
   15eb0:	mov	r0, r2
   15eb4:	strne	r3, [r4, #4]
   15eb8:	ldrne	r3, [r2, #4]
   15ebc:	streq	r3, [r5, #776]	; 0x308
   15ec0:	cmp	r3, #0
   15ec4:	beq	15ef4 <sprintf@plt+0x494c>
   15ec8:	ldr	r2, [r5, #780]	; 0x30c
   15ecc:	str	r4, [r3, #8]
   15ed0:	sub	r3, r2, #1
   15ed4:	str	r3, [r5, #780]	; 0x30c
   15ed8:	bl	11380 <free@plt>
   15edc:	cmp	r4, #0
   15ee0:	beq	15f10 <sprintf@plt+0x4968>
   15ee4:	ldr	r4, [r4, #8]
   15ee8:	mov	r2, r6
   15eec:	mov	r6, r4
   15ef0:	b	15ea8 <sprintf@plt+0x4900>
   15ef4:	ldr	r3, [r5, #780]	; 0x30c
   15ef8:	str	r4, [r5, #772]	; 0x304
   15efc:	sub	r3, r3, #1
   15f00:	str	r3, [r5, #780]	; 0x30c
   15f04:	bl	11380 <free@plt>
   15f08:	cmp	r4, #0
   15f0c:	bne	15ee4 <sprintf@plt+0x493c>
   15f10:	movw	r2, #65496	; 0xffd8
   15f14:	movt	r2, #2
   15f18:	ldr	r3, [r2]
   15f1c:	cmp	r3, #0
   15f20:	beq	15f3c <sprintf@plt+0x4994>
   15f24:	ldr	r1, [r3]
   15f28:	cmp	r5, r1
   15f2c:	beq	15f54 <sprintf@plt+0x49ac>
   15f30:	ldr	r3, [r3, #8]
   15f34:	cmp	r3, #0
   15f38:	bne	15f24 <sprintf@plt+0x497c>
   15f3c:	mov	r0, r5
   15f40:	ldrd	r4, [sp]
   15f44:	ldr	r6, [sp, #8]
   15f48:	ldr	lr, [sp, #12]
   15f4c:	add	sp, sp, #16
   15f50:	b	11380 <free@plt>
   15f54:	ldr	r1, [r3, #4]
   15f58:	mov	ip, #0
   15f5c:	ldr	r0, [r3, #8]
   15f60:	cmp	r0, #0
   15f64:	strne	r1, [r0, #4]
   15f68:	ldrne	r1, [r3, #4]
   15f6c:	streq	r1, [r2, #4]
   15f70:	cmp	r1, #0
   15f74:	strne	r0, [r1, #8]
   15f78:	ldr	r1, [r2, #8]
   15f7c:	streq	r0, [r2]
   15f80:	mov	r0, r3
   15f84:	str	ip, [r3, #4]
   15f88:	str	ip, [r3, #8]
   15f8c:	sub	r3, r1, #1
   15f90:	str	r3, [r2, #8]
   15f94:	bl	11404 <rb_free_rb_dlink_node@plt>
   15f98:	b	15f3c <sprintf@plt+0x4994>
   15f9c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   15fa0:	ldr	r4, [r2, #8]
   15fa4:	strd	r6, [sp, #8]
   15fa8:	strd	r8, [sp, #16]
   15fac:	strd	sl, [sp, #24]
   15fb0:	str	lr, [sp, #32]
   15fb4:	sub	sp, sp, #28
   15fb8:	mov	r0, r4
   15fbc:	str	r2, [sp, #12]
   15fc0:	bl	113d4 <strlen@plt>
   15fc4:	add	r5, r0, #1
   15fc8:	mov	r0, r5
   15fcc:	bl	114ac <malloc@plt>
   15fd0:	subs	r3, r0, #0
   15fd4:	str	r3, [sp, #8]
   15fd8:	beq	16218 <sprintf@plt+0x4c70>
   15fdc:	mov	r2, r5
   15fe0:	mov	r1, r4
   15fe4:	bl	113f8 <memcpy@plt>
   15fe8:	ldr	r3, [sp, #8]
   15fec:	mov	r9, #0
   15ff0:	ldrb	r3, [r3]
   15ff4:	cmp	r3, #42	; 0x2a
   15ff8:	beq	1621c <sprintf@plt+0x4c74>
   15ffc:	movw	r1, #40644	; 0x9ec4
   16000:	movt	r1, #1
   16004:	ldr	r0, [sp, #8]
   16008:	add	r2, sp, #20
   1600c:	bl	112c0 <rb_strtok_r@plt>
   16010:	subs	r7, r0, #0
   16014:	beq	1621c <sprintf@plt+0x4c74>
   16018:	movw	r3, #40644	; 0x9ec4
   1601c:	movt	r3, #1
   16020:	mov	r8, r9
   16024:	stm	sp, {r3, r9}
   16028:	mov	r1, #72	; 0x48
   1602c:	mov	r0, #1
   16030:	bl	112f0 <calloc@plt>
   16034:	subs	r6, r0, #0
   16038:	beq	16218 <sprintf@plt+0x4c70>
   1603c:	ldrb	sl, [r7]
   16040:	cmp	sl, #0
   16044:	beq	16228 <sprintf@plt+0x4c80>
   16048:	mov	fp, r7
   1604c:	mov	r5, #2
   16050:	mov	r4, #0
   16054:	b	1607c <sprintf@plt+0x4ad4>
   16058:	bl	11488 <__ctype_b_loc@plt>
   1605c:	ldr	r2, [r0]
   16060:	lsl	r3, sl, #1
   16064:	ldrh	r3, [r2, r3]
   16068:	tst	r3, #2048	; 0x800
   1606c:	beq	16294 <sprintf@plt+0x4cec>
   16070:	ldrb	sl, [fp, #1]!
   16074:	cmp	sl, #0
   16078:	beq	160a0 <sprintf@plt+0x4af8>
   1607c:	cmp	sl, #46	; 0x2e
   16080:	bne	16058 <sprintf@plt+0x4ab0>
   16084:	add	r4, r4, #1
   16088:	cmp	r4, #3
   1608c:	bgt	162c8 <sprintf@plt+0x4d20>
   16090:	ldrb	sl, [fp, #1]!
   16094:	mov	r5, #1
   16098:	cmp	sl, #0
   1609c:	bne	1607c <sprintf@plt+0x4ad4>
   160a0:	sub	r4, r4, #1
   160a4:	cmp	r4, #1
   160a8:	bls	162b0 <sprintf@plt+0x4d08>
   160ac:	mov	r0, r6
   160b0:	mov	r1, r7
   160b4:	mov	r2, #53	; 0x35
   160b8:	add	r4, r6, #60	; 0x3c
   160bc:	str	r5, [r0], #4
   160c0:	bl	1135c <rb_strlcpy@plt>
   160c4:	mov	r3, #0
   160c8:	str	r6, [r6, #60]	; 0x3c
   160cc:	cmp	r8, r3
   160d0:	str	r3, [r6, #64]	; 0x40
   160d4:	str	r8, [r6, #68]	; 0x44
   160d8:	strne	r4, [r8, #4]
   160dc:	beq	16204 <sprintf@plt+0x4c5c>
   160e0:	add	r2, sp, #20
   160e4:	mov	r0, #0
   160e8:	ldr	r1, [sp]
   160ec:	bl	112c0 <rb_strtok_r@plt>
   160f0:	subs	r7, r0, #0
   160f4:	add	r9, r9, #1
   160f8:	mov	r8, r4
   160fc:	bne	16028 <sprintf@plt+0x4a80>
   16100:	ldr	r0, [sp, #8]
   16104:	bl	11380 <free@plt>
   16108:	ldr	r5, [sp, #12]
   1610c:	mov	r2, #10
   16110:	mov	r1, #0
   16114:	ldr	r0, [r5, #4]
   16118:	bl	1141c <strtol@plt>
   1611c:	ldr	r7, [r5]
   16120:	ldr	r8, [r5, #12]
   16124:	cmp	r7, #0
   16128:	clz	r3, r8
   1612c:	lsr	r3, r3, #5
   16130:	moveq	r3, #1
   16134:	ands	sl, r0, #3
   16138:	moveq	r3, #1
   1613c:	cmp	r3, #0
   16140:	bne	162e0 <sprintf@plt+0x4d38>
   16144:	movw	fp, #65496	; 0xffd8
   16148:	movt	fp, #2
   1614c:	ldr	r6, [fp]
   16150:	cmp	r6, #0
   16154:	bne	16168 <sprintf@plt+0x4bc0>
   16158:	b	16244 <sprintf@plt+0x4c9c>
   1615c:	ldr	r6, [r6, #8]
   16160:	cmp	r6, #0
   16164:	beq	16244 <sprintf@plt+0x4c9c>
   16168:	ldr	r5, [r6]
   1616c:	mov	r1, r7
   16170:	mov	r0, r5
   16174:	bl	112e4 <strcasecmp@plt>
   16178:	cmp	r0, #0
   1617c:	bne	1615c <sprintf@plt+0x4bb4>
   16180:	cmp	r5, #0
   16184:	strbne	r0, [r5, #784]	; 0x310
   16188:	beq	16244 <sprintf@plt+0x4c9c>
   1618c:	mov	r1, r7
   16190:	mov	r2, #256	; 0x100
   16194:	mov	r0, r5
   16198:	bl	1135c <rb_strlcpy@plt>
   1619c:	mov	r1, r8
   161a0:	mov	r2, #512	; 0x200
   161a4:	add	r0, r5, #256	; 0x100
   161a8:	bl	1135c <rb_strlcpy@plt>
   161ac:	cmp	r4, #0
   161b0:	strb	sl, [r5, #768]	; 0x300
   161b4:	beq	161e0 <sprintf@plt+0x4c38>
   161b8:	ldr	r2, [r5, #772]	; 0x304
   161bc:	cmp	r2, #0
   161c0:	beq	16230 <sprintf@plt+0x4c88>
   161c4:	ldr	r3, [r5, #780]	; 0x30c
   161c8:	ldr	r1, [sp, #4]
   161cc:	add	r9, r3, r9
   161d0:	str	r2, [r1, #8]
   161d4:	str	r1, [r2, #4]
   161d8:	str	r4, [r5, #772]	; 0x304
   161dc:	str	r9, [r5, #780]	; 0x30c
   161e0:	mov	r3, #0
   161e4:	str	r3, [r5, #796]	; 0x31c
   161e8:	add	sp, sp, #28
   161ec:	ldrd	r4, [sp]
   161f0:	ldrd	r6, [sp, #8]
   161f4:	ldrd	r8, [sp, #16]
   161f8:	ldrd	sl, [sp, #24]
   161fc:	add	sp, sp, #32
   16200:	pop	{pc}		; (ldr pc, [sp], #4)
   16204:	ldr	r2, [sp, #4]
   16208:	subs	r3, r2, #0
   1620c:	moveq	r3, r4
   16210:	str	r3, [sp, #4]
   16214:	b	160e0 <sprintf@plt+0x4b38>
   16218:	bl	1147c <rb_outofmemory@plt>
   1621c:	mov	r4, r9
   16220:	str	r9, [sp, #4]
   16224:	b	16100 <sprintf@plt+0x4b58>
   16228:	mov	r5, #2
   1622c:	b	160ac <sprintf@plt+0x4b04>
   16230:	ldr	r3, [sp, #4]
   16234:	str	r4, [r5, #772]	; 0x304
   16238:	str	r3, [r5, #776]	; 0x308
   1623c:	str	r9, [r5, #780]	; 0x30c
   16240:	b	161e0 <sprintf@plt+0x4c38>
   16244:	mov	r1, #800	; 0x320
   16248:	mov	r0, #1
   1624c:	bl	112f0 <calloc@plt>
   16250:	subs	r5, r0, #0
   16254:	beq	16218 <sprintf@plt+0x4c70>
   16258:	bl	11530 <rb_make_rb_dlink_node@plt>
   1625c:	cmp	r0, #0
   16260:	beq	16308 <sprintf@plt+0x4d60>
   16264:	ldr	r2, [fp]
   16268:	mov	r1, #0
   1626c:	str	r5, [r0]
   16270:	cmp	r2, r1
   16274:	stmib	r0, {r1, r2}
   16278:	strne	r0, [r2, #4]
   1627c:	beq	162f8 <sprintf@plt+0x4d50>
   16280:	ldr	r2, [fp, #8]
   16284:	str	r0, [fp]
   16288:	add	r2, r2, #1
   1628c:	str	r2, [fp, #8]
   16290:	b	1618c <sprintf@plt+0x4be4>
   16294:	mov	r0, #67	; 0x43
   16298:	mov	r2, sl
   1629c:	movw	r1, #40708	; 0x9f04
   162a0:	movt	r1, #1
   162a4:	bl	122bc <sprintf@plt+0xd14>
   162a8:	mov	r0, #3
   162ac:	bl	11590 <exit@plt>
   162b0:	mov	r0, #67	; 0x43
   162b4:	movw	r1, #40788	; 0x9f54
   162b8:	movt	r1, #1
   162bc:	bl	122bc <sprintf@plt+0xd14>
   162c0:	mov	r0, #3
   162c4:	bl	11590 <exit@plt>
   162c8:	mov	r0, #67	; 0x43
   162cc:	movw	r1, #40648	; 0x9ec8
   162d0:	movt	r1, #1
   162d4:	bl	122bc <sprintf@plt+0xd14>
   162d8:	mov	r0, #3
   162dc:	bl	11590 <exit@plt>
   162e0:	mov	r0, #67	; 0x43
   162e4:	movw	r1, #40852	; 0x9f94
   162e8:	movt	r1, #1
   162ec:	bl	122bc <sprintf@plt+0xd14>
   162f0:	mov	r0, #3
   162f4:	bl	11590 <exit@plt>
   162f8:	ldr	r2, [fp, #4]
   162fc:	cmp	r2, #0
   16300:	streq	r0, [fp, #4]
   16304:	b	16280 <sprintf@plt+0x4cd8>
   16308:	movw	r1, #39556	; 0x9a84
   1630c:	movt	r1, #1
   16310:	ldr	r3, [pc, #12]	; 16324 <sprintf@plt+0x4d7c>
   16314:	movw	r0, #39600	; 0x9ab0
   16318:	movt	r0, #1
   1631c:	mov	r2, #144	; 0x90
   16320:	bl	11350 <__assert_fail@plt>
   16324:	andeq	r9, r1, r4, asr lr
   16328:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1632c:	strd	r6, [sp, #8]
   16330:	movw	r6, #48480	; 0xbd60
   16334:	movt	r6, #2
   16338:	ldr	r7, [r3, #4]
   1633c:	strd	r8, [sp, #16]
   16340:	ldr	r9, [r6, #16]
   16344:	strd	sl, [sp, #24]
   16348:	str	lr, [sp, #32]
   1634c:	sub	sp, sp, #12
   16350:	ldr	r2, [r7, #464]	; 0x1d0
   16354:	add	r2, r2, r9, lsl #4
   16358:	ldr	r5, [r2, #8]
   1635c:	cmp	r5, #0
   16360:	beq	163f4 <sprintf@plt+0x4e4c>
   16364:	cmp	r0, #0
   16368:	moveq	r1, #0
   1636c:	andne	r1, r1, #1
   16370:	mov	r8, r0
   16374:	ldr	sl, [r3]
   16378:	cmp	r1, #0
   1637c:	mov	r4, r3
   16380:	bne	16410 <sprintf@plt+0x4e68>
   16384:	ldr	r3, [sl, #788]	; 0x314
   16388:	ldrb	r2, [sl, #784]	; 0x310
   1638c:	sub	r3, r3, #1
   16390:	cmp	r3, #0
   16394:	movgt	r2, #0
   16398:	andle	r2, r2, #1
   1639c:	str	r3, [sl, #788]	; 0x314
   163a0:	cmp	r2, #0
   163a4:	bne	1658c <sprintf@plt+0x4fe4>
   163a8:	ldr	r0, [r4, #8]
   163ac:	bl	11f08 <sprintf@plt+0x960>
   163b0:	ldr	r3, [r4, #20]
   163b4:	cmp	r3, #0
   163b8:	beq	16508 <sprintf@plt+0x4f60>
   163bc:	ldr	r2, [r4, #16]
   163c0:	str	r2, [r3, #4]
   163c4:	ldr	r2, [r4, #16]
   163c8:	cmp	r2, #0
   163cc:	mov	r0, r4
   163d0:	strne	r3, [r2, #8]
   163d4:	streq	r3, [r5, #4]
   163d8:	ldr	r3, [r5, #12]
   163dc:	sub	r3, r3, #1
   163e0:	str	r3, [r5, #12]
   163e4:	bl	11380 <free@plt>
   163e8:	ldr	r4, [r5, #12]
   163ec:	cmp	r4, #0
   163f0:	beq	16490 <sprintf@plt+0x4ee8>
   163f4:	add	sp, sp, #12
   163f8:	ldrd	r4, [sp]
   163fc:	ldrd	r6, [sp, #8]
   16400:	ldrd	r8, [sp, #16]
   16404:	ldrd	sl, [sp, #24]
   16408:	add	sp, sp, #32
   1640c:	pop	{pc}		; (ldr pc, [sp], #4)
   16410:	ldr	r3, [sl, #780]	; 0x30c
   16414:	cmp	r3, #0
   16418:	beq	16514 <sprintf@plt+0x4f6c>
   1641c:	mov	r1, #46	; 0x2e
   16420:	bl	11338 <strrchr@plt>
   16424:	cmp	r0, #0
   16428:	beq	16598 <sprintf@plt+0x4ff0>
   1642c:	ldrb	r3, [r0, #1]
   16430:	cmp	r3, #0
   16434:	beq	16598 <sprintf@plt+0x4ff0>
   16438:	ldr	fp, [sl, #772]	; 0x304
   1643c:	cmp	fp, #0
   16440:	beq	16384 <sprintf@plt+0x4ddc>
   16444:	add	r3, r0, #1
   16448:	str	r3, [sp, #4]
   1644c:	b	16478 <sprintf@plt+0x4ed0>
   16450:	cmp	r3, #2
   16454:	bne	166a4 <sprintf@plt+0x50fc>
   16458:	ldr	r0, [sp, #4]
   1645c:	add	r1, r1, #4
   16460:	bl	11584 <strcmp@plt>
   16464:	cmp	r0, #0
   16468:	beq	16514 <sprintf@plt+0x4f6c>
   1646c:	ldr	fp, [fp, #8]
   16470:	cmp	fp, #0
   16474:	beq	16384 <sprintf@plt+0x4ddc>
   16478:	ldr	r1, [fp]
   1647c:	ldr	r3, [r1]
   16480:	cmp	r3, #1
   16484:	bne	16450 <sprintf@plt+0x4ea8>
   16488:	mov	r0, r8
   1648c:	b	1645c <sprintf@plt+0x4eb4>
   16490:	movw	r1, #41040	; 0xa050
   16494:	movt	r1, #1
   16498:	ldr	r0, [r7]
   1649c:	bl	12254 <sprintf@plt+0xcac>
   164a0:	mov	r0, r5
   164a4:	bl	11380 <free@plt>
   164a8:	ldr	r1, [r6, #16]
   164ac:	mov	r0, r7
   164b0:	ldr	r2, [r7, #464]	; 0x1d0
   164b4:	lsl	ip, r1, #4
   164b8:	add	r2, r2, ip
   164bc:	str	r4, [r2, #8]
   164c0:	ldr	r3, [r7, #464]	; 0x1d0
   164c4:	add	r3, r3, ip
   164c8:	str	r4, [r3, #4]
   164cc:	bl	12c2c <sprintf@plt+0x1684>
   164d0:	ldr	r3, [r7, #460]	; 0x1cc
   164d4:	sub	r3, r3, #1
   164d8:	cmp	r3, #0
   164dc:	str	r3, [r7, #460]	; 0x1cc
   164e0:	bne	163f4 <sprintf@plt+0x4e4c>
   164e4:	mov	r0, r7
   164e8:	add	sp, sp, #12
   164ec:	ldrd	r4, [sp]
   164f0:	ldrd	r6, [sp, #8]
   164f4:	ldrd	r8, [sp, #16]
   164f8:	ldrd	sl, [sp, #24]
   164fc:	ldr	lr, [sp, #32]
   16500:	add	sp, sp, #36	; 0x24
   16504:	b	12b58 <sprintf@plt+0x15b0>
   16508:	ldr	r2, [r4, #16]
   1650c:	str	r2, [r5, #8]
   16510:	b	163c8 <sprintf@plt+0x4e20>
   16514:	ldr	ip, [sl, #792]	; 0x318
   16518:	add	r3, sl, #256	; 0x100
   1651c:	mov	r2, sl
   16520:	mov	r1, r9
   16524:	mov	r0, r7
   16528:	add	ip, ip, #1
   1652c:	str	ip, [sl, #792]	; 0x318
   16530:	bl	12d78 <sprintf@plt+0x17d0>
   16534:	ldr	r2, [r6, #16]
   16538:	ldr	r3, [r7, #464]	; 0x1d0
   1653c:	add	r3, r3, r2, lsl #4
   16540:	ldr	r5, [r3, #8]
   16544:	cmp	r5, #0
   16548:	beq	163f4 <sprintf@plt+0x4e4c>
   1654c:	ldr	r3, [r5, #12]
   16550:	cmp	r3, #0
   16554:	bne	165d0 <sprintf@plt+0x5028>
   16558:	mov	r0, r5
   1655c:	bl	11380 <free@plt>
   16560:	ldr	r1, [r6, #16]
   16564:	mov	ip, #0
   16568:	mov	r0, r7
   1656c:	ldr	r2, [r7, #464]	; 0x1d0
   16570:	lsl	lr, r1, #4
   16574:	add	r2, r2, lr
   16578:	str	ip, [r2, #8]
   1657c:	ldr	r3, [r7, #464]	; 0x1d0
   16580:	add	r3, r3, lr
   16584:	str	ip, [r3, #4]
   16588:	b	164cc <sprintf@plt+0x4f24>
   1658c:	mov	r0, sl
   16590:	bl	15e84 <sprintf@plt+0x48dc>
   16594:	b	163a8 <sprintf@plt+0x4e00>
   16598:	ldr	r9, [sl, #796]	; 0x31c
   1659c:	bl	113e0 <rb_current_time@plt>
   165a0:	add	r9, r9, #3600	; 0xe10
   165a4:	cmp	r9, r0
   165a8:	bge	16384 <sprintf@plt+0x4ddc>
   165ac:	mov	r3, r8
   165b0:	mov	r2, sl
   165b4:	mov	r0, #87	; 0x57
   165b8:	movw	r1, #40948	; 0x9ff4
   165bc:	movt	r1, #1
   165c0:	bl	122bc <sprintf@plt+0xd14>
   165c4:	bl	113e0 <rb_current_time@plt>
   165c8:	str	r0, [sl, #796]	; 0x31c
   165cc:	b	16384 <sprintf@plt+0x4ddc>
   165d0:	movw	r1, #41012	; 0xa034
   165d4:	movt	r1, #1
   165d8:	ldr	r0, [r7]
   165dc:	bl	12254 <sprintf@plt+0xcac>
   165e0:	ldr	r3, [r5, #4]
   165e4:	cmp	r3, #0
   165e8:	beq	16558 <sprintf@plt+0x4fb0>
   165ec:	ldr	r8, [r3, #8]
   165f0:	ldr	r4, [r3]
   165f4:	ldr	r0, [r4, #8]
   165f8:	bl	11f08 <sprintf@plt+0x960>
   165fc:	ldr	r0, [r4]
   16600:	ldr	r3, [r0, #788]	; 0x314
   16604:	ldrb	r2, [r0, #784]	; 0x310
   16608:	sub	r3, r3, #1
   1660c:	cmp	r3, #0
   16610:	movgt	r2, #0
   16614:	andle	r2, r2, #1
   16618:	str	r3, [r0, #788]	; 0x314
   1661c:	cmp	r2, #0
   16620:	bne	1669c <sprintf@plt+0x50f4>
   16624:	ldr	r3, [r4, #16]
   16628:	ldr	r2, [r4, #20]
   1662c:	cmp	r2, #0
   16630:	beq	16670 <sprintf@plt+0x50c8>
   16634:	str	r3, [r2, #4]
   16638:	ldr	r3, [r4, #16]
   1663c:	cmp	r3, #0
   16640:	beq	16678 <sprintf@plt+0x50d0>
   16644:	ldr	r1, [r5, #12]
   16648:	mov	r0, r4
   1664c:	str	r2, [r3, #8]
   16650:	sub	r3, r1, #1
   16654:	str	r3, [r5, #12]
   16658:	bl	11380 <free@plt>
   1665c:	cmp	r8, #0
   16660:	beq	16558 <sprintf@plt+0x4fb0>
   16664:	mov	r3, r8
   16668:	ldr	r8, [r8, #8]
   1666c:	b	165f0 <sprintf@plt+0x5048>
   16670:	str	r3, [r5, #8]
   16674:	b	1663c <sprintf@plt+0x5094>
   16678:	ldr	r3, [r5, #12]
   1667c:	mov	r0, r4
   16680:	str	r2, [r5, #4]
   16684:	sub	r3, r3, #1
   16688:	str	r3, [r5, #12]
   1668c:	bl	11380 <free@plt>
   16690:	cmp	r8, #0
   16694:	bne	16664 <sprintf@plt+0x50bc>
   16698:	b	16558 <sprintf@plt+0x4fb0>
   1669c:	bl	15e84 <sprintf@plt+0x48dc>
   166a0:	b	16624 <sprintf@plt+0x507c>
   166a4:	mov	r0, #67	; 0x43
   166a8:	mov	r2, sl
   166ac:	movw	r1, #40900	; 0x9fc4
   166b0:	movt	r1, #1
   166b4:	bl	122bc <sprintf@plt+0xd14>
   166b8:	mov	r0, #3
   166bc:	bl	11590 <exit@plt>
   166c0:	strd	r4, [sp, #-20]!	; 0xffffffec
   166c4:	mov	r5, r0
   166c8:	mov	r0, #1
   166cc:	strd	r6, [sp, #8]
   166d0:	mov	r7, r1
   166d4:	mov	r1, #24
   166d8:	str	lr, [sp, #16]
   166dc:	sub	sp, sp, #260	; 0x104
   166e0:	bl	112f0 <calloc@plt>
   166e4:	subs	r4, r0, #0
   166e8:	beq	167e8 <sprintf@plt+0x5240>
   166ec:	movw	r2, #48480	; 0xbd60
   166f0:	movt	r2, #2
   166f4:	ldr	r3, [r7, #464]	; 0x1d0
   166f8:	ldr	r1, [r2, #16]
   166fc:	ldrh	r2, [r7, #248]	; 0xf8
   16700:	add	r3, r3, r1, lsl #4
   16704:	cmp	r2, #2
   16708:	ldr	r6, [r3, #8]
   1670c:	stm	r4, {r5, r7}
   16710:	beq	167b0 <sprintf@plt+0x5208>
   16714:	cmp	r2, #10
   16718:	bne	16728 <sprintf@plt+0x5180>
   1671c:	ldrb	r3, [r5, #768]	; 0x300
   16720:	tst	r3, #2
   16724:	beq	167bc <sprintf@plt+0x5214>
   16728:	add	r2, r7, #248	; 0xf8
   1672c:	mov	r0, sp
   16730:	mov	r3, r5
   16734:	mov	r1, #256	; 0x100
   16738:	bl	13ca8 <sprintf@plt+0x2700>
   1673c:	mov	r1, #2
   16740:	mov	r3, r4
   16744:	mov	r0, sp
   16748:	movw	r2, #25384	; 0x6328
   1674c:	movt	r2, #1
   16750:	bl	11d54 <sprintf@plt+0x7ac>
   16754:	cmn	r6, #4
   16758:	add	r1, r4, #12
   1675c:	str	r0, [r4, #8]
   16760:	beq	167ec <sprintf@plt+0x5244>
   16764:	ldr	r3, [r6, #4]
   16768:	mov	r2, #0
   1676c:	str	r4, [r4, #12]
   16770:	cmp	r3, r2
   16774:	strd	r2, [r4, #16]
   16778:	strne	r1, [r3, #4]
   1677c:	beq	167d8 <sprintf@plt+0x5230>
   16780:	ldr	r2, [r6, #12]
   16784:	ldr	r3, [r5, #788]	; 0x314
   16788:	str	r1, [r6, #4]
   1678c:	add	r2, r2, #1
   16790:	add	r3, r3, #1
   16794:	str	r2, [r6, #12]
   16798:	str	r3, [r5, #788]	; 0x314
   1679c:	add	sp, sp, #260	; 0x104
   167a0:	ldrd	r4, [sp]
   167a4:	ldrd	r6, [sp, #8]
   167a8:	add	sp, sp, #16
   167ac:	pop	{pc}		; (ldr pc, [sp], #4)
   167b0:	ldrb	r3, [r5, #768]	; 0x300
   167b4:	tst	r3, #1
   167b8:	bne	16728 <sprintf@plt+0x5180>
   167bc:	mov	r0, r4
   167c0:	add	sp, sp, #260	; 0x104
   167c4:	ldrd	r4, [sp]
   167c8:	ldrd	r6, [sp, #8]
   167cc:	ldr	lr, [sp, #16]
   167d0:	add	sp, sp, #20
   167d4:	b	11380 <free@plt>
   167d8:	ldr	r3, [r6, #8]
   167dc:	cmp	r3, #0
   167e0:	streq	r1, [r6, #8]
   167e4:	b	16780 <sprintf@plt+0x51d8>
   167e8:	bl	1147c <rb_outofmemory@plt>
   167ec:	movw	r1, #39556	; 0x9a84
   167f0:	movt	r1, #1
   167f4:	ldr	r3, [pc, #12]	; 16808 <sprintf@plt+0x5260>
   167f8:	movw	r0, #40584	; 0x9e88
   167fc:	movt	r0, #1
   16800:	mov	r2, #145	; 0x91
   16804:	bl	11350 <__assert_fail@plt>
   16808:	andeq	r9, r1, r4, asr lr
   1680c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   16810:	strd	r6, [sp, #8]
   16814:	strd	r8, [sp, #16]
   16818:	movw	r8, #368	; 0x170
   1681c:	movt	r8, #3
   16820:	strd	sl, [sp, #24]
   16824:	movw	r9, #48480	; 0xbd60
   16828:	movt	r9, #2
   1682c:	str	lr, [sp, #32]
   16830:	sub	sp, sp, #12
   16834:	movw	fp, #41012	; 0xa034
   16838:	movt	fp, #1
   1683c:	mov	r1, sp
   16840:	ldr	r0, [r8]
   16844:	mov	sl, #0
   16848:	bl	113bc <rb_dictionary_foreach_start@plt>
   1684c:	b	1685c <sprintf@plt+0x52b4>
   16850:	mov	r1, sp
   16854:	ldr	r0, [r8]
   16858:	bl	11374 <rb_dictionary_foreach_next@plt>
   1685c:	mov	r1, sp
   16860:	ldr	r0, [r8]
   16864:	bl	112d8 <rb_dictionary_foreach_cur@plt>
   16868:	subs	r6, r0, #0
   1686c:	beq	169b8 <sprintf@plt+0x5410>
   16870:	ldr	r2, [r9, #16]
   16874:	ldr	r3, [r6, #464]	; 0x1d0
   16878:	add	r3, r3, r2, lsl #4
   1687c:	ldr	r4, [r3, #8]
   16880:	cmp	r4, #0
   16884:	beq	16850 <sprintf@plt+0x52a8>
   16888:	ldr	r3, [r4, #12]
   1688c:	cmp	r3, #0
   16890:	bne	168e4 <sprintf@plt+0x533c>
   16894:	mov	r0, r4
   16898:	bl	11380 <free@plt>
   1689c:	ldr	r1, [r9, #16]
   168a0:	mov	r0, r6
   168a4:	ldr	r2, [r6, #464]	; 0x1d0
   168a8:	lsl	ip, r1, #4
   168ac:	add	r2, r2, ip
   168b0:	str	sl, [r2, #8]
   168b4:	ldr	r3, [r6, #464]	; 0x1d0
   168b8:	add	r3, r3, ip
   168bc:	str	sl, [r3, #4]
   168c0:	bl	12c2c <sprintf@plt+0x1684>
   168c4:	ldr	r3, [r6, #460]	; 0x1cc
   168c8:	sub	r3, r3, #1
   168cc:	cmp	r3, #0
   168d0:	str	r3, [r6, #460]	; 0x1cc
   168d4:	bne	16850 <sprintf@plt+0x52a8>
   168d8:	mov	r0, r6
   168dc:	bl	12b58 <sprintf@plt+0x15b0>
   168e0:	b	16850 <sprintf@plt+0x52a8>
   168e4:	mov	r1, fp
   168e8:	ldr	r0, [r6]
   168ec:	bl	12254 <sprintf@plt+0xcac>
   168f0:	ldr	r3, [r4, #4]
   168f4:	cmp	r3, #0
   168f8:	beq	16894 <sprintf@plt+0x52ec>
   168fc:	ldr	r7, [r3, #8]
   16900:	ldr	r5, [r3]
   16904:	ldr	r0, [r5, #8]
   16908:	bl	11f08 <sprintf@plt+0x960>
   1690c:	ldr	r0, [r5]
   16910:	ldr	r3, [r0, #788]	; 0x314
   16914:	ldrb	r2, [r0, #784]	; 0x310
   16918:	sub	r3, r3, #1
   1691c:	cmp	r3, #0
   16920:	movgt	r2, #0
   16924:	andle	r2, r2, #1
   16928:	str	r3, [r0, #788]	; 0x314
   1692c:	cmp	r2, #0
   16930:	bne	169b0 <sprintf@plt+0x5408>
   16934:	ldr	r3, [r5, #16]
   16938:	ldr	r2, [r5, #20]
   1693c:	cmp	r2, #0
   16940:	beq	16980 <sprintf@plt+0x53d8>
   16944:	str	r3, [r2, #4]
   16948:	mov	r0, r5
   1694c:	ldr	r3, [r5, #16]
   16950:	cmp	r3, #0
   16954:	beq	16990 <sprintf@plt+0x53e8>
   16958:	ldr	r1, [r4, #12]
   1695c:	str	r2, [r3, #8]
   16960:	sub	r3, r1, #1
   16964:	str	r3, [r4, #12]
   16968:	bl	11380 <free@plt>
   1696c:	cmp	r7, #0
   16970:	beq	16894 <sprintf@plt+0x52ec>
   16974:	mov	r3, r7
   16978:	ldr	r7, [r7, #8]
   1697c:	b	16900 <sprintf@plt+0x5358>
   16980:	cmp	r3, #0
   16984:	mov	r0, r5
   16988:	str	r3, [r4, #8]
   1698c:	bne	16958 <sprintf@plt+0x53b0>
   16990:	ldr	r3, [r4, #12]
   16994:	str	r2, [r4, #4]
   16998:	sub	r3, r3, #1
   1699c:	str	r3, [r4, #12]
   169a0:	bl	11380 <free@plt>
   169a4:	cmp	r7, #0
   169a8:	bne	16974 <sprintf@plt+0x53cc>
   169ac:	b	16894 <sprintf@plt+0x52ec>
   169b0:	bl	15e84 <sprintf@plt+0x48dc>
   169b4:	b	16934 <sprintf@plt+0x538c>
   169b8:	bl	15c6c <sprintf@plt+0x46c4>
   169bc:	add	sp, sp, #12
   169c0:	ldrd	r4, [sp]
   169c4:	ldrd	r6, [sp, #8]
   169c8:	ldrd	r8, [sp, #16]
   169cc:	ldrd	sl, [sp, #24]
   169d0:	add	sp, sp, #32
   169d4:	pop	{pc}		; (ldr pc, [sp], #4)
   169d8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   169dc:	ldr	r3, [r0, #464]	; 0x1d0
   169e0:	strd	r6, [sp, #8]
   169e4:	movw	r7, #48480	; 0xbd60
   169e8:	movt	r7, #2
   169ec:	ldr	r2, [r7, #16]
   169f0:	str	r8, [sp, #16]
   169f4:	str	lr, [sp, #20]
   169f8:	add	r3, r3, r2, lsl #4
   169fc:	ldr	r5, [r3, #8]
   16a00:	cmp	r5, #0
   16a04:	beq	16a60 <sprintf@plt+0x54b8>
   16a08:	ldr	r3, [r5, #12]
   16a0c:	mov	r4, r0
   16a10:	cmp	r3, #0
   16a14:	bne	16a74 <sprintf@plt+0x54cc>
   16a18:	mov	r0, r5
   16a1c:	bl	11380 <free@plt>
   16a20:	ldr	r1, [r7, #16]
   16a24:	mov	ip, #0
   16a28:	mov	r0, r4
   16a2c:	ldr	r2, [r4, #464]	; 0x1d0
   16a30:	lsl	lr, r1, #4
   16a34:	add	r2, r2, lr
   16a38:	str	ip, [r2, #8]
   16a3c:	ldr	r3, [r4, #464]	; 0x1d0
   16a40:	add	r3, r3, lr
   16a44:	str	ip, [r3, #4]
   16a48:	bl	12c2c <sprintf@plt+0x1684>
   16a4c:	ldr	r3, [r4, #460]	; 0x1cc
   16a50:	sub	r3, r3, #1
   16a54:	cmp	r3, #0
   16a58:	str	r3, [r4, #460]	; 0x1cc
   16a5c:	beq	16b14 <sprintf@plt+0x556c>
   16a60:	ldrd	r4, [sp]
   16a64:	ldrd	r6, [sp, #8]
   16a68:	ldr	r8, [sp, #16]
   16a6c:	add	sp, sp, #20
   16a70:	pop	{pc}		; (ldr pc, [sp], #4)
   16a74:	movw	r1, #41080	; 0xa078
   16a78:	movt	r1, #1
   16a7c:	ldr	r0, [r0]
   16a80:	bl	12254 <sprintf@plt+0xcac>
   16a84:	ldr	r3, [r5, #4]
   16a88:	cmp	r3, #0
   16a8c:	beq	16a18 <sprintf@plt+0x5470>
   16a90:	ldr	r8, [r3, #8]
   16a94:	ldr	r6, [r3]
   16a98:	ldr	r0, [r6, #8]
   16a9c:	bl	11f08 <sprintf@plt+0x960>
   16aa0:	ldr	r0, [r6]
   16aa4:	ldr	r3, [r0, #788]	; 0x314
   16aa8:	ldrb	r2, [r0, #784]	; 0x310
   16aac:	sub	r3, r3, #1
   16ab0:	cmp	r3, #0
   16ab4:	movgt	r2, #0
   16ab8:	andle	r2, r2, #1
   16abc:	str	r3, [r0, #788]	; 0x314
   16ac0:	cmp	r2, #0
   16ac4:	bne	16b60 <sprintf@plt+0x55b8>
   16ac8:	ldr	r3, [r6, #16]
   16acc:	ldr	r2, [r6, #20]
   16ad0:	cmp	r2, #0
   16ad4:	beq	16b30 <sprintf@plt+0x5588>
   16ad8:	str	r3, [r2, #4]
   16adc:	mov	r0, r6
   16ae0:	ldr	r3, [r6, #16]
   16ae4:	cmp	r3, #0
   16ae8:	beq	16b40 <sprintf@plt+0x5598>
   16aec:	ldr	r1, [r5, #12]
   16af0:	str	r2, [r3, #8]
   16af4:	sub	r3, r1, #1
   16af8:	str	r3, [r5, #12]
   16afc:	bl	11380 <free@plt>
   16b00:	cmp	r8, #0
   16b04:	beq	16a18 <sprintf@plt+0x5470>
   16b08:	mov	r3, r8
   16b0c:	ldr	r8, [r8, #8]
   16b10:	b	16a94 <sprintf@plt+0x54ec>
   16b14:	mov	r0, r4
   16b18:	ldrd	r4, [sp]
   16b1c:	ldrd	r6, [sp, #8]
   16b20:	ldr	r8, [sp, #16]
   16b24:	ldr	lr, [sp, #20]
   16b28:	add	sp, sp, #24
   16b2c:	b	12b58 <sprintf@plt+0x15b0>
   16b30:	cmp	r3, #0
   16b34:	mov	r0, r6
   16b38:	str	r3, [r5, #8]
   16b3c:	bne	16aec <sprintf@plt+0x5544>
   16b40:	ldr	r3, [r5, #12]
   16b44:	str	r2, [r5, #4]
   16b48:	sub	r3, r3, #1
   16b4c:	str	r3, [r5, #12]
   16b50:	bl	11380 <free@plt>
   16b54:	cmp	r8, #0
   16b58:	bne	16b08 <sprintf@plt+0x5560>
   16b5c:	b	16a18 <sprintf@plt+0x5470>
   16b60:	bl	15e84 <sprintf@plt+0x48dc>
   16b64:	b	16ac8 <sprintf@plt+0x5520>
   16b68:	strd	r4, [sp, #-24]!	; 0xffffffe8
   16b6c:	ldr	r3, [r0, #464]	; 0x1d0
   16b70:	strd	r6, [sp, #8]
   16b74:	movw	r7, #48480	; 0xbd60
   16b78:	movt	r7, #2
   16b7c:	ldr	r2, [r7, #16]
   16b80:	str	r8, [sp, #16]
   16b84:	str	lr, [sp, #20]
   16b88:	add	r3, r3, r2, lsl #4
   16b8c:	ldr	r5, [r3, #8]
   16b90:	cmp	r5, #0
   16b94:	beq	16bf0 <sprintf@plt+0x5648>
   16b98:	ldr	r3, [r5, #12]
   16b9c:	mov	r4, r0
   16ba0:	cmp	r3, #0
   16ba4:	bne	16c04 <sprintf@plt+0x565c>
   16ba8:	mov	r0, r5
   16bac:	bl	11380 <free@plt>
   16bb0:	ldr	r1, [r7, #16]
   16bb4:	mov	ip, #0
   16bb8:	mov	r0, r4
   16bbc:	ldr	r2, [r4, #464]	; 0x1d0
   16bc0:	lsl	lr, r1, #4
   16bc4:	add	r2, r2, lr
   16bc8:	str	ip, [r2, #8]
   16bcc:	ldr	r3, [r4, #464]	; 0x1d0
   16bd0:	add	r3, r3, lr
   16bd4:	str	ip, [r3, #4]
   16bd8:	bl	12c2c <sprintf@plt+0x1684>
   16bdc:	ldr	r3, [r4, #460]	; 0x1cc
   16be0:	sub	r3, r3, #1
   16be4:	cmp	r3, #0
   16be8:	str	r3, [r4, #460]	; 0x1cc
   16bec:	beq	16ca4 <sprintf@plt+0x56fc>
   16bf0:	ldrd	r4, [sp]
   16bf4:	ldrd	r6, [sp, #8]
   16bf8:	ldr	r8, [sp, #16]
   16bfc:	add	sp, sp, #20
   16c00:	pop	{pc}		; (ldr pc, [sp], #4)
   16c04:	movw	r1, #41012	; 0xa034
   16c08:	movt	r1, #1
   16c0c:	ldr	r0, [r0]
   16c10:	bl	12254 <sprintf@plt+0xcac>
   16c14:	ldr	r3, [r5, #4]
   16c18:	cmp	r3, #0
   16c1c:	beq	16ba8 <sprintf@plt+0x5600>
   16c20:	ldr	r8, [r3, #8]
   16c24:	ldr	r6, [r3]
   16c28:	ldr	r0, [r6, #8]
   16c2c:	bl	11f08 <sprintf@plt+0x960>
   16c30:	ldr	r0, [r6]
   16c34:	ldr	r3, [r0, #788]	; 0x314
   16c38:	ldrb	r2, [r0, #784]	; 0x310
   16c3c:	sub	r3, r3, #1
   16c40:	cmp	r3, #0
   16c44:	movgt	r2, #0
   16c48:	andle	r2, r2, #1
   16c4c:	str	r3, [r0, #788]	; 0x314
   16c50:	cmp	r2, #0
   16c54:	bne	16cf0 <sprintf@plt+0x5748>
   16c58:	ldr	r3, [r6, #16]
   16c5c:	ldr	r2, [r6, #20]
   16c60:	cmp	r2, #0
   16c64:	beq	16cc0 <sprintf@plt+0x5718>
   16c68:	str	r3, [r2, #4]
   16c6c:	mov	r0, r6
   16c70:	ldr	r3, [r6, #16]
   16c74:	cmp	r3, #0
   16c78:	beq	16cd0 <sprintf@plt+0x5728>
   16c7c:	ldr	r1, [r5, #12]
   16c80:	str	r2, [r3, #8]
   16c84:	sub	r3, r1, #1
   16c88:	str	r3, [r5, #12]
   16c8c:	bl	11380 <free@plt>
   16c90:	cmp	r8, #0
   16c94:	beq	16ba8 <sprintf@plt+0x5600>
   16c98:	mov	r3, r8
   16c9c:	ldr	r8, [r8, #8]
   16ca0:	b	16c24 <sprintf@plt+0x567c>
   16ca4:	mov	r0, r4
   16ca8:	ldrd	r4, [sp]
   16cac:	ldrd	r6, [sp, #8]
   16cb0:	ldr	r8, [sp, #16]
   16cb4:	ldr	lr, [sp, #20]
   16cb8:	add	sp, sp, #24
   16cbc:	b	12b58 <sprintf@plt+0x15b0>
   16cc0:	cmp	r3, #0
   16cc4:	mov	r0, r6
   16cc8:	str	r3, [r5, #8]
   16ccc:	bne	16c7c <sprintf@plt+0x56d4>
   16cd0:	ldr	r3, [r5, #12]
   16cd4:	str	r2, [r5, #4]
   16cd8:	sub	r3, r3, #1
   16cdc:	str	r3, [r5, #12]
   16ce0:	bl	11380 <free@plt>
   16ce4:	cmp	r8, #0
   16ce8:	bne	16c98 <sprintf@plt+0x56f0>
   16cec:	b	16ba8 <sprintf@plt+0x5600>
   16cf0:	bl	15e84 <sprintf@plt+0x48dc>
   16cf4:	b	16c58 <sprintf@plt+0x56b0>
   16cf8:	strd	r4, [sp, #-36]!	; 0xffffffdc
   16cfc:	strd	r6, [sp, #8]
   16d00:	movw	r7, #48480	; 0xbd60
   16d04:	movt	r7, #2
   16d08:	strd	r8, [sp, #16]
   16d0c:	movw	r8, #65496	; 0xffd8
   16d10:	movt	r8, #2
   16d14:	ldr	r3, [r8, #8]
   16d18:	strd	sl, [sp, #24]
   16d1c:	str	lr, [sp, #32]
   16d20:	sub	sp, sp, #4
   16d24:	ldr	r9, [r7, #16]
   16d28:	cmp	r3, #0
   16d2c:	beq	16f30 <sprintf@plt+0x5988>
   16d30:	mov	r5, r0
   16d34:	mov	r0, #1
   16d38:	ldr	r3, [r5, #460]	; 0x1cc
   16d3c:	mov	r1, #16
   16d40:	add	r3, r3, r0
   16d44:	str	r3, [r5, #460]	; 0x1cc
   16d48:	bl	112f0 <calloc@plt>
   16d4c:	cmp	r0, #0
   16d50:	beq	16f60 <sprintf@plt+0x59b8>
   16d54:	movw	r2, #372	; 0x174
   16d58:	movt	r2, #3
   16d5c:	ldr	r3, [r5, #464]	; 0x1d0
   16d60:	lsl	r9, r9, #4
   16d64:	ldr	r4, [r2]
   16d68:	add	r3, r3, r9
   16d6c:	cmp	r4, #0
   16d70:	str	r0, [r3, #8]
   16d74:	beq	16f6c <sprintf@plt+0x59c4>
   16d78:	movw	sl, #41108	; 0xa094
   16d7c:	movt	sl, #1
   16d80:	mov	r6, r4
   16d84:	b	16d94 <sprintf@plt+0x57ec>
   16d88:	ldr	r6, [r6, #8]
   16d8c:	cmp	r6, #0
   16d90:	beq	16f3c <sprintf@plt+0x5994>
   16d94:	ldr	fp, [r6]
   16d98:	mov	r1, sl
   16d9c:	ldr	r0, [fp, #16]
   16da0:	bl	112e4 <strcasecmp@plt>
   16da4:	cmp	r0, #0
   16da8:	bne	16d88 <sprintf@plt+0x57e0>
   16dac:	ldr	r3, [fp, #12]
   16db0:	ldr	fp, [r5, #464]	; 0x1d0
   16db4:	add	r3, fp, r3, lsl #4
   16db8:	ldr	r3, [r3, #12]
   16dbc:	cmp	r3, #2
   16dc0:	bne	16f10 <sprintf@plt+0x5968>
   16dc4:	movw	r6, #41116	; 0xa09c
   16dc8:	movt	r6, #1
   16dcc:	b	16ddc <sprintf@plt+0x5834>
   16dd0:	ldr	r4, [r4, #8]
   16dd4:	cmp	r4, #0
   16dd8:	beq	16e08 <sprintf@plt+0x5860>
   16ddc:	ldr	sl, [r4]
   16de0:	mov	r1, r6
   16de4:	ldr	r0, [sl, #16]
   16de8:	bl	112e4 <strcasecmp@plt>
   16dec:	cmp	r0, #0
   16df0:	bne	16dd0 <sprintf@plt+0x5828>
   16df4:	ldr	r3, [sl, #12]
   16df8:	add	r3, fp, r3, lsl #4
   16dfc:	ldr	r3, [r3, #12]
   16e00:	cmp	r3, #2
   16e04:	bne	16f10 <sprintf@plt+0x5968>
   16e08:	ldrh	r3, [r5, #248]	; 0xf8
   16e0c:	add	r9, fp, r9
   16e10:	ldr	r6, [r9, #8]
   16e14:	cmp	r3, #2
   16e18:	beq	16f64 <sprintf@plt+0x59bc>
   16e1c:	cmp	r3, #10
   16e20:	moveq	r9, #2
   16e24:	bne	16eac <sprintf@plt+0x5904>
   16e28:	mov	r3, #1
   16e2c:	movw	r1, #41124	; 0xa0a4
   16e30:	movt	r1, #1
   16e34:	ldr	r0, [r5]
   16e38:	strb	r3, [r6]
   16e3c:	bl	12254 <sprintf@plt+0xcac>
   16e40:	ldr	r4, [r8]
   16e44:	cmp	r4, #0
   16e48:	bne	16e5c <sprintf@plt+0x58b4>
   16e4c:	b	16e8c <sprintf@plt+0x58e4>
   16e50:	ldr	r4, [r4, #8]
   16e54:	cmp	r4, #0
   16e58:	beq	16e8c <sprintf@plt+0x58e4>
   16e5c:	ldr	r0, [r4]
   16e60:	ldrb	r3, [r0, #784]	; 0x310
   16e64:	cmp	r3, #0
   16e68:	bne	16e50 <sprintf@plt+0x58a8>
   16e6c:	ldrb	r3, [r0, #768]	; 0x300
   16e70:	tst	r3, r9
   16e74:	beq	16e50 <sprintf@plt+0x58a8>
   16e78:	mov	r1, r5
   16e7c:	bl	166c0 <sprintf@plt+0x5118>
   16e80:	ldr	r4, [r4, #8]
   16e84:	cmp	r4, #0
   16e88:	bne	16e5c <sprintf@plt+0x58b4>
   16e8c:	ldr	r3, [r6, #12]
   16e90:	ldr	r4, [r7, #16]
   16e94:	cmp	r3, #0
   16e98:	lsl	r4, r4, #4
   16e9c:	bne	16f44 <sprintf@plt+0x599c>
   16ea0:	ldr	r3, [r5, #464]	; 0x1d0
   16ea4:	add	r4, r3, r4
   16ea8:	ldr	r6, [r4, #8]
   16eac:	cmp	r6, #0
   16eb0:	beq	16f10 <sprintf@plt+0x5968>
   16eb4:	ldr	r3, [r6, #12]
   16eb8:	cmp	r3, #0
   16ebc:	bne	16f74 <sprintf@plt+0x59cc>
   16ec0:	mov	r0, r6
   16ec4:	bl	11380 <free@plt>
   16ec8:	ldr	r1, [r7, #16]
   16ecc:	mov	ip, #0
   16ed0:	mov	r0, r5
   16ed4:	ldr	r2, [r5, #464]	; 0x1d0
   16ed8:	lsl	lr, r1, #4
   16edc:	add	r2, r2, lr
   16ee0:	str	ip, [r2, #8]
   16ee4:	ldr	r3, [r5, #464]	; 0x1d0
   16ee8:	add	r3, r3, lr
   16eec:	str	ip, [r3, #4]
   16ef0:	bl	12c2c <sprintf@plt+0x1684>
   16ef4:	ldr	r3, [r5, #460]	; 0x1cc
   16ef8:	sub	r3, r3, #1
   16efc:	cmp	r3, #0
   16f00:	str	r3, [r5, #460]	; 0x1cc
   16f04:	bne	16f10 <sprintf@plt+0x5968>
   16f08:	mov	r0, r5
   16f0c:	bl	12b58 <sprintf@plt+0x15b0>
   16f10:	mov	r0, #1
   16f14:	add	sp, sp, #4
   16f18:	ldrd	r4, [sp]
   16f1c:	ldrd	r6, [sp, #8]
   16f20:	ldrd	r8, [sp, #16]
   16f24:	ldrd	sl, [sp, #24]
   16f28:	add	sp, sp, #32
   16f2c:	pop	{pc}		; (ldr pc, [sp], #4)
   16f30:	mov	r1, r9
   16f34:	bl	12c2c <sprintf@plt+0x1684>
   16f38:	b	16f10 <sprintf@plt+0x5968>
   16f3c:	ldr	fp, [r5, #464]	; 0x1d0
   16f40:	b	16dc4 <sprintf@plt+0x581c>
   16f44:	ldr	r6, [r7]
   16f48:	bl	113e0 <rb_current_time@plt>
   16f4c:	ldr	r3, [r5, #464]	; 0x1d0
   16f50:	add	r0, r6, r0
   16f54:	add	r4, r3, r4
   16f58:	str	r0, [r4, #4]
   16f5c:	b	16f10 <sprintf@plt+0x5968>
   16f60:	bl	1147c <rb_outofmemory@plt>
   16f64:	mov	r9, #1
   16f68:	b	16e28 <sprintf@plt+0x5880>
   16f6c:	ldr	fp, [r5, #464]	; 0x1d0
   16f70:	b	16e08 <sprintf@plt+0x5860>
   16f74:	movw	r1, #41160	; 0xa0c8
   16f78:	movt	r1, #1
   16f7c:	ldr	r0, [r5]
   16f80:	bl	12254 <sprintf@plt+0xcac>
   16f84:	ldr	r3, [r6, #4]
   16f88:	cmp	r3, #0
   16f8c:	beq	16ec0 <sprintf@plt+0x5918>
   16f90:	ldr	r8, [r3, #8]
   16f94:	ldr	r4, [r3]
   16f98:	ldr	r0, [r4, #8]
   16f9c:	bl	11f08 <sprintf@plt+0x960>
   16fa0:	ldr	r0, [r4]
   16fa4:	ldr	r3, [r0, #788]	; 0x314
   16fa8:	ldrb	r2, [r0, #784]	; 0x310
   16fac:	sub	r3, r3, #1
   16fb0:	cmp	r3, #0
   16fb4:	movgt	r2, #0
   16fb8:	andle	r2, r2, #1
   16fbc:	str	r3, [r0, #788]	; 0x314
   16fc0:	cmp	r2, #0
   16fc4:	bne	17040 <sprintf@plt+0x5a98>
   16fc8:	ldr	r3, [r4, #16]
   16fcc:	ldr	r2, [r4, #20]
   16fd0:	cmp	r2, #0
   16fd4:	beq	17014 <sprintf@plt+0x5a6c>
   16fd8:	str	r3, [r2, #4]
   16fdc:	ldr	r3, [r4, #16]
   16fe0:	cmp	r3, #0
   16fe4:	beq	1701c <sprintf@plt+0x5a74>
   16fe8:	ldr	r1, [r6, #12]
   16fec:	mov	r0, r4
   16ff0:	str	r2, [r3, #8]
   16ff4:	sub	r3, r1, #1
   16ff8:	str	r3, [r6, #12]
   16ffc:	bl	11380 <free@plt>
   17000:	cmp	r8, #0
   17004:	beq	16ec0 <sprintf@plt+0x5918>
   17008:	mov	r3, r8
   1700c:	ldr	r8, [r8, #8]
   17010:	b	16f94 <sprintf@plt+0x59ec>
   17014:	str	r3, [r6, #8]
   17018:	b	16fe0 <sprintf@plt+0x5a38>
   1701c:	ldr	r3, [r6, #12]
   17020:	mov	r0, r4
   17024:	str	r2, [r6, #4]
   17028:	sub	r3, r3, #1
   1702c:	str	r3, [r6, #12]
   17030:	bl	11380 <free@plt>
   17034:	cmp	r8, #0
   17038:	bne	17008 <sprintf@plt+0x5a60>
   1703c:	b	16ec0 <sprintf@plt+0x5918>
   17040:	bl	15e84 <sprintf@plt+0x48dc>
   17044:	b	16fc8 <sprintf@plt+0x5a20>
   17048:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1704c:	strd	r6, [sp, #8]
   17050:	movw	r6, #48480	; 0xbd60
   17054:	movt	r6, #2
   17058:	strd	r8, [sp, #16]
   1705c:	ldr	r3, [r6, #16]
   17060:	strd	sl, [sp, #24]
   17064:	ldr	r8, [r0, #464]	; 0x1d0
   17068:	str	lr, [sp, #32]
   1706c:	sub	sp, sp, #4
   17070:	add	r3, r8, r3, lsl #4
   17074:	ldr	r9, [r3, #8]
   17078:	cmp	r9, #0
   1707c:	beq	1708c <sprintf@plt+0x5ae4>
   17080:	ldrb	r3, [r9]
   17084:	cmp	r3, #0
   17088:	beq	170a8 <sprintf@plt+0x5b00>
   1708c:	add	sp, sp, #4
   17090:	ldrd	r4, [sp]
   17094:	ldrd	r6, [sp, #8]
   17098:	ldrd	r8, [sp, #16]
   1709c:	ldrd	sl, [sp, #24]
   170a0:	add	sp, sp, #32
   170a4:	pop	{pc}		; (ldr pc, [sp], #4)
   170a8:	movw	r3, #372	; 0x174
   170ac:	movt	r3, #3
   170b0:	ldr	r4, [r3]
   170b4:	mov	r7, r0
   170b8:	cmp	r4, #0
   170bc:	beq	1714c <sprintf@plt+0x5ba4>
   170c0:	movw	fp, #41108	; 0xa094
   170c4:	movt	fp, #1
   170c8:	mov	r5, r4
   170cc:	b	170dc <sprintf@plt+0x5b34>
   170d0:	ldr	r5, [r5, #8]
   170d4:	cmp	r5, #0
   170d8:	beq	17108 <sprintf@plt+0x5b60>
   170dc:	ldr	sl, [r5]
   170e0:	mov	r1, fp
   170e4:	ldr	r0, [sl, #16]
   170e8:	bl	112e4 <strcasecmp@plt>
   170ec:	cmp	r0, #0
   170f0:	bne	170d0 <sprintf@plt+0x5b28>
   170f4:	ldr	r3, [sl, #12]
   170f8:	add	r3, r8, r3, lsl #4
   170fc:	ldr	r3, [r3, #12]
   17100:	cmp	r3, #2
   17104:	bne	1708c <sprintf@plt+0x5ae4>
   17108:	movw	sl, #41116	; 0xa09c
   1710c:	movt	sl, #1
   17110:	b	17120 <sprintf@plt+0x5b78>
   17114:	ldr	r4, [r4, #8]
   17118:	cmp	r4, #0
   1711c:	beq	1714c <sprintf@plt+0x5ba4>
   17120:	ldr	r5, [r4]
   17124:	mov	r1, sl
   17128:	ldr	r0, [r5, #16]
   1712c:	bl	112e4 <strcasecmp@plt>
   17130:	cmp	r0, #0
   17134:	bne	17114 <sprintf@plt+0x5b6c>
   17138:	ldr	r3, [r5, #12]
   1713c:	add	r8, r8, r3, lsl #4
   17140:	ldr	r3, [r8, #12]
   17144:	cmp	r3, #2
   17148:	bne	1708c <sprintf@plt+0x5ae4>
   1714c:	ldrh	r3, [r7, #248]	; 0xf8
   17150:	cmp	r3, #2
   17154:	beq	171dc <sprintf@plt+0x5c34>
   17158:	cmp	r3, #10
   1715c:	moveq	r5, #2
   17160:	beq	171e0 <sprintf@plt+0x5c38>
   17164:	ldr	r3, [r9, #12]
   17168:	cmp	r3, #0
   1716c:	bne	17270 <sprintf@plt+0x5cc8>
   17170:	mov	r0, r9
   17174:	bl	11380 <free@plt>
   17178:	ldr	r1, [r6, #16]
   1717c:	mov	ip, #0
   17180:	mov	r0, r7
   17184:	ldr	r2, [r7, #464]	; 0x1d0
   17188:	lsl	lr, r1, #4
   1718c:	add	r2, r2, lr
   17190:	str	ip, [r2, #8]
   17194:	ldr	r3, [r7, #464]	; 0x1d0
   17198:	add	r3, r3, lr
   1719c:	str	ip, [r3, #4]
   171a0:	bl	12c2c <sprintf@plt+0x1684>
   171a4:	ldr	r3, [r7, #460]	; 0x1cc
   171a8:	sub	r3, r3, #1
   171ac:	cmp	r3, #0
   171b0:	str	r3, [r7, #460]	; 0x1cc
   171b4:	bne	1708c <sprintf@plt+0x5ae4>
   171b8:	mov	r0, r7
   171bc:	add	sp, sp, #4
   171c0:	ldrd	r4, [sp]
   171c4:	ldrd	r6, [sp, #8]
   171c8:	ldrd	r8, [sp, #16]
   171cc:	ldrd	sl, [sp, #24]
   171d0:	ldr	lr, [sp, #32]
   171d4:	add	sp, sp, #36	; 0x24
   171d8:	b	12b58 <sprintf@plt+0x15b0>
   171dc:	mov	r5, #1
   171e0:	mov	r3, #1
   171e4:	movw	r1, #41124	; 0xa0a4
   171e8:	movt	r1, #1
   171ec:	ldr	r0, [r7]
   171f0:	strb	r3, [r9]
   171f4:	bl	12254 <sprintf@plt+0xcac>
   171f8:	movw	r3, #65496	; 0xffd8
   171fc:	movt	r3, #2
   17200:	ldr	r4, [r3]
   17204:	cmp	r4, #0
   17208:	bne	1721c <sprintf@plt+0x5c74>
   1720c:	b	17244 <sprintf@plt+0x5c9c>
   17210:	ldr	r4, [r4, #8]
   17214:	cmp	r4, #0
   17218:	beq	17244 <sprintf@plt+0x5c9c>
   1721c:	ldr	r0, [r4]
   17220:	ldrb	r3, [r0, #784]	; 0x310
   17224:	cmp	r3, #0
   17228:	bne	17210 <sprintf@plt+0x5c68>
   1722c:	ldrb	r3, [r0, #768]	; 0x300
   17230:	tst	r3, r5
   17234:	beq	17210 <sprintf@plt+0x5c68>
   17238:	mov	r1, r7
   1723c:	bl	166c0 <sprintf@plt+0x5118>
   17240:	b	17210 <sprintf@plt+0x5c68>
   17244:	ldr	r2, [r9, #12]
   17248:	ldr	r3, [r6, #16]
   1724c:	cmp	r2, #0
   17250:	lsl	r4, r3, #4
   17254:	bne	17310 <sprintf@plt+0x5d68>
   17258:	ldr	r3, [r7, #464]	; 0x1d0
   1725c:	add	r3, r3, r4
   17260:	ldr	r9, [r3, #8]
   17264:	cmp	r9, #0
   17268:	beq	1708c <sprintf@plt+0x5ae4>
   1726c:	b	17164 <sprintf@plt+0x5bbc>
   17270:	movw	r1, #41160	; 0xa0c8
   17274:	movt	r1, #1
   17278:	ldr	r0, [r7]
   1727c:	bl	12254 <sprintf@plt+0xcac>
   17280:	ldr	r3, [r9, #4]
   17284:	cmp	r3, #0
   17288:	beq	17170 <sprintf@plt+0x5bc8>
   1728c:	ldr	r5, [r3, #8]
   17290:	ldr	r4, [r3]
   17294:	ldr	r0, [r4, #8]
   17298:	bl	11f08 <sprintf@plt+0x960>
   1729c:	ldr	r0, [r4]
   172a0:	ldr	r3, [r0, #788]	; 0x314
   172a4:	ldrb	r2, [r0, #784]	; 0x310
   172a8:	sub	r3, r3, #1
   172ac:	cmp	r3, #0
   172b0:	movgt	r2, #0
   172b4:	andle	r2, r2, #1
   172b8:	str	r3, [r0, #788]	; 0x314
   172bc:	cmp	r2, #0
   172c0:	bne	17354 <sprintf@plt+0x5dac>
   172c4:	ldr	r3, [r4, #16]
   172c8:	ldr	r2, [r4, #20]
   172cc:	cmp	r2, #0
   172d0:	beq	1734c <sprintf@plt+0x5da4>
   172d4:	str	r3, [r2, #4]
   172d8:	ldr	r3, [r4, #16]
   172dc:	cmp	r3, #0
   172e0:	mov	r0, r4
   172e4:	beq	1732c <sprintf@plt+0x5d84>
   172e8:	ldr	r1, [r9, #12]
   172ec:	str	r2, [r3, #8]
   172f0:	sub	r3, r1, #1
   172f4:	str	r3, [r9, #12]
   172f8:	bl	11380 <free@plt>
   172fc:	cmp	r5, #0
   17300:	beq	17170 <sprintf@plt+0x5bc8>
   17304:	mov	r3, r5
   17308:	ldr	r5, [r5, #8]
   1730c:	b	17290 <sprintf@plt+0x5ce8>
   17310:	ldr	r5, [r6]
   17314:	bl	113e0 <rb_current_time@plt>
   17318:	ldr	r3, [r7, #464]	; 0x1d0
   1731c:	add	r0, r5, r0
   17320:	add	r3, r3, r4
   17324:	str	r0, [r3, #4]
   17328:	b	1708c <sprintf@plt+0x5ae4>
   1732c:	ldr	r3, [r9, #12]
   17330:	str	r2, [r9, #4]
   17334:	sub	r3, r3, #1
   17338:	str	r3, [r9, #12]
   1733c:	bl	11380 <free@plt>
   17340:	cmp	r5, #0
   17344:	bne	17304 <sprintf@plt+0x5d5c>
   17348:	b	17170 <sprintf@plt+0x5bc8>
   1734c:	str	r3, [r9, #8]
   17350:	b	172dc <sprintf@plt+0x5d34>
   17354:	bl	15e84 <sprintf@plt+0x48dc>
   17358:	b	172c4 <sprintf@plt+0x5d1c>
   1735c:	ldr	r2, [r2]
   17360:	movw	r3, #48604	; 0xbddc
   17364:	movt	r3, #2
   17368:	ldrb	r2, [r2]
   1736c:	sub	r2, r2, #49	; 0x31
   17370:	clz	r2, r2
   17374:	lsr	r2, r2, #5
   17378:	strb	r2, [r3]
   1737c:	bx	lr
   17380:	mov	r1, #0
   17384:	str	r4, [sp, #-8]!
   17388:	ldr	r0, [r2]
   1738c:	mov	r2, #10
   17390:	str	lr, [sp, #4]
   17394:	bl	1141c <strtol@plt>
   17398:	cmp	r0, #0
   1739c:	blt	173b8 <sprintf@plt+0x5e10>
   173a0:	movw	r3, #48604	; 0xbddc
   173a4:	movt	r3, #2
   173a8:	ldr	r4, [sp]
   173ac:	add	sp, sp, #4
   173b0:	str	r0, [r3, #4]
   173b4:	pop	{pc}		; (ldr pc, [sp], #4)
   173b8:	mov	r2, r0
   173bc:	movw	r1, #41252	; 0xa124
   173c0:	movt	r1, #1
   173c4:	mov	r0, #67	; 0x43
   173c8:	bl	122bc <sprintf@plt+0xd14>
   173cc:	mov	r0, #3
   173d0:	bl	11590 <exit@plt>
   173d4:	strd	r4, [sp, #-24]!	; 0xffffffe8
   173d8:	movw	r5, #48604	; 0xbddc
   173dc:	movt	r5, #2
   173e0:	ldr	ip, [r5, #20]
   173e4:	mov	r4, r0
   173e8:	mov	r2, #11
   173ec:	add	r0, r0, #440	; 0x1b8
   173f0:	ldr	r3, [r0, #24]
   173f4:	strd	r6, [sp, #8]
   173f8:	mov	r6, r1
   173fc:	movw	r1, #39624	; 0x9ac8
   17400:	movt	r1, #1
   17404:	str	r8, [sp, #16]
   17408:	str	lr, [sp, #20]
   1740c:	add	r3, r3, ip, lsl #4
   17410:	ldr	r7, [r3, #8]
   17414:	bl	1135c <rb_strlcpy@plt>
   17418:	ldr	r0, [r7]
   1741c:	cmp	r0, #0
   17420:	beq	17428 <sprintf@plt+0x5e80>
   17424:	bl	11410 <rb_close@plt>
   17428:	mov	r0, r7
   1742c:	bl	11380 <free@plt>
   17430:	ldr	r3, [r5, #20]
   17434:	mov	ip, #0
   17438:	movw	r1, #41232	; 0xa110
   1743c:	movt	r1, #1
   17440:	ldr	r0, [r4]
   17444:	ldr	r2, [r4, #464]	; 0x1d0
   17448:	lsl	r3, r3, #4
   1744c:	ldr	r1, [r1, r6, lsl #2]
   17450:	add	r2, r2, r3
   17454:	str	ip, [r2, #8]
   17458:	ldr	r2, [r4, #464]	; 0x1d0
   1745c:	add	r3, r2, r3
   17460:	str	ip, [r3, #4]
   17464:	bl	12254 <sprintf@plt+0xcac>
   17468:	mov	r0, r4
   1746c:	ldr	r1, [r5, #20]
   17470:	bl	12c2c <sprintf@plt+0x1684>
   17474:	ldr	r3, [r4, #460]	; 0x1cc
   17478:	sub	r3, r3, #1
   1747c:	cmp	r3, #0
   17480:	str	r3, [r4, #460]	; 0x1cc
   17484:	beq	1749c <sprintf@plt+0x5ef4>
   17488:	ldrd	r4, [sp]
   1748c:	ldrd	r6, [sp, #8]
   17490:	ldr	r8, [sp, #16]
   17494:	add	sp, sp, #20
   17498:	pop	{pc}		; (ldr pc, [sp], #4)
   1749c:	mov	r0, r4
   174a0:	ldrd	r4, [sp]
   174a4:	ldrd	r6, [sp, #8]
   174a8:	ldr	r8, [sp, #16]
   174ac:	ldr	lr, [sp, #20]
   174b0:	add	sp, sp, #24
   174b4:	b	12b58 <sprintf@plt+0x15b0>
   174b8:	movw	r2, #48604	; 0xbddc
   174bc:	movt	r2, #2
   174c0:	ldr	r3, [r0, #464]	; 0x1d0
   174c4:	ldr	r2, [r2, #20]
   174c8:	add	r3, r3, r2, lsl #4
   174cc:	ldr	r3, [r3, #8]
   174d0:	cmp	r3, #0
   174d4:	beq	174e0 <sprintf@plt+0x5f38>
   174d8:	mov	r1, #2
   174dc:	b	173d4 <sprintf@plt+0x5e2c>
   174e0:	bx	lr
   174e4:	strd	r4, [sp, #-24]!	; 0xffffffe8
   174e8:	mov	r2, #129	; 0x81
   174ec:	mov	r5, r0
   174f0:	strd	r6, [sp, #8]
   174f4:	mov	r4, r1
   174f8:	mov	r1, #0
   174fc:	str	r8, [sp, #16]
   17500:	str	lr, [sp, #20]
   17504:	sub	sp, sp, #136	; 0x88
   17508:	add	r0, sp, #4
   1750c:	bl	11320 <memset@plt>
   17510:	add	r1, sp, #4
   17514:	mov	r0, r5
   17518:	mov	r2, #128	; 0x80
   1751c:	bl	11398 <rb_read@plt>
   17520:	cmp	r0, #0
   17524:	blt	176ac <sprintf@plt+0x6104>
   17528:	beq	176c0 <sprintf@plt+0x6118>
   1752c:	mov	r1, #58	; 0x3a
   17530:	add	r0, sp, #4
   17534:	bl	112cc <strchr@plt>
   17538:	subs	r5, r0, #0
   1753c:	beq	17688 <sprintf@plt+0x60e0>
   17540:	mov	r6, #0
   17544:	mov	r1, #58	; 0x3a
   17548:	strb	r6, [r5], #1
   1754c:	mov	r0, r5
   17550:	bl	112cc <strchr@plt>
   17554:	subs	r7, r0, #0
   17558:	beq	17688 <sprintf@plt+0x60e0>
   1755c:	mov	r1, #44	; 0x2c
   17560:	add	r0, sp, #4
   17564:	strb	r6, [r7]
   17568:	bl	112cc <strchr@plt>
   1756c:	subs	r8, r0, #0
   17570:	beq	17688 <sprintf@plt+0x60e0>
   17574:	add	r0, sp, #4
   17578:	mov	r2, #10
   1757c:	strb	r6, [r8]
   17580:	mov	r1, r6
   17584:	bl	1141c <strtol@plt>
   17588:	cmp	r0, r6
   1758c:	beq	17688 <sprintf@plt+0x60e0>
   17590:	add	r0, r8, #1
   17594:	mov	r2, #10
   17598:	mov	r1, r6
   1759c:	bl	1141c <strtol@plt>
   175a0:	cmp	r0, r6
   175a4:	beq	17688 <sprintf@plt+0x60e0>
   175a8:	mov	r0, r5
   175ac:	movw	r1, #41292	; 0xa14c
   175b0:	movt	r1, #1
   175b4:	bl	1144c <strstr@plt>
   175b8:	cmp	r0, r6
   175bc:	beq	17688 <sprintf@plt+0x60e0>
   175c0:	add	r0, r7, #1
   175c4:	mov	r1, #58	; 0x3a
   175c8:	bl	112cc <strchr@plt>
   175cc:	cmp	r0, #0
   175d0:	beq	17688 <sprintf@plt+0x60e0>
   175d4:	mov	r2, r0
   175d8:	strb	r6, [r2], #1
   175dc:	cmp	r2, r6
   175e0:	beq	17688 <sprintf@plt+0x60e0>
   175e4:	ldrb	r3, [r0, #1]
   175e8:	add	r0, r4, #440	; 0x1b8
   175ec:	and	r1, r3, #223	; 0xdf
   175f0:	cmp	r1, #94	; 0x5e
   175f4:	bne	17608 <sprintf@plt+0x6060>
   175f8:	ldrb	r3, [r2, #1]!
   175fc:	and	r1, r3, #223	; 0xdf
   17600:	cmp	r1, #94	; 0x5e
   17604:	beq	175f8 <sprintf@plt+0x6050>
   17608:	tst	r3, #191	; 0xbf
   1760c:	beq	176e4 <sprintf@plt+0x613c>
   17610:	cmp	r3, #10
   17614:	cmpne	r3, #13
   17618:	beq	176e4 <sprintf@plt+0x613c>
   1761c:	mov	ip, #10
   17620:	b	17650 <sprintf@plt+0x60a8>
   17624:	ldrb	r3, [r2, #1]!
   17628:	tst	r3, #191	; 0xbf
   1762c:	movne	r1, #1
   17630:	moveq	r1, #0
   17634:	cmp	ip, #0
   17638:	moveq	r1, #0
   1763c:	cmp	r1, #0
   17640:	beq	176e4 <sprintf@plt+0x613c>
   17644:	cmp	r3, #10
   17648:	cmpne	r3, #13
   1764c:	beq	176e4 <sprintf@plt+0x613c>
   17650:	cmp	r3, #32
   17654:	cmpne	r3, #58	; 0x3a
   17658:	movne	r1, #1
   1765c:	moveq	r1, #0
   17660:	cmp	r3, #91	; 0x5b
   17664:	moveq	r1, #0
   17668:	andne	r1, r1, #1
   1766c:	cmp	r1, #0
   17670:	beq	17624 <sprintf@plt+0x607c>
   17674:	mov	r1, r0
   17678:	sub	ip, ip, #1
   1767c:	strb	r3, [r1], #1
   17680:	mov	r0, r1
   17684:	b	17624 <sprintf@plt+0x607c>
   17688:	mov	r1, #3
   1768c:	mov	r0, r4
   17690:	bl	173d4 <sprintf@plt+0x5e2c>
   17694:	add	sp, sp, #136	; 0x88
   17698:	ldrd	r4, [sp]
   1769c:	ldrd	r6, [sp, #8]
   176a0:	ldr	r8, [sp, #16]
   176a4:	add	sp, sp, #20
   176a8:	pop	{pc}		; (ldr pc, [sp], #4)
   176ac:	bl	1159c <__errno_location@plt>
   176b0:	ldr	r0, [r0]
   176b4:	bl	11224 <rb_ignore_errno@plt>
   176b8:	cmp	r0, #0
   176bc:	bne	176c8 <sprintf@plt+0x6120>
   176c0:	mov	r1, #2
   176c4:	b	1768c <sprintf@plt+0x60e4>
   176c8:	mov	r3, r4
   176cc:	mov	r0, r5
   176d0:	movw	r2, #29924	; 0x74e4
   176d4:	movt	r2, #1
   176d8:	mov	r1, #1
   176dc:	bl	1126c <rb_setselect@plt>
   176e0:	b	17694 <sprintf@plt+0x60ec>
   176e4:	mov	r3, #0
   176e8:	movw	r5, #48604	; 0xbddc
   176ec:	movt	r5, #2
   176f0:	strb	r3, [r0]
   176f4:	ldr	r2, [r5, #20]
   176f8:	ldr	r3, [r4, #464]	; 0x1d0
   176fc:	add	r3, r3, r2, lsl #4
   17700:	ldr	r6, [r3, #8]
   17704:	ldr	r0, [r6]
   17708:	cmp	r0, #0
   1770c:	beq	17714 <sprintf@plt+0x616c>
   17710:	bl	11410 <rb_close@plt>
   17714:	mov	r0, r6
   17718:	bl	11380 <free@plt>
   1771c:	ldr	r3, [r5, #20]
   17720:	mov	ip, #0
   17724:	movw	r1, #41300	; 0xa154
   17728:	movt	r1, #1
   1772c:	ldr	r0, [r4]
   17730:	ldr	r2, [r4, #464]	; 0x1d0
   17734:	lsl	r3, r3, #4
   17738:	add	r2, r2, r3
   1773c:	str	ip, [r2, #8]
   17740:	ldr	r2, [r4, #464]	; 0x1d0
   17744:	add	r3, r2, r3
   17748:	str	ip, [r3, #4]
   1774c:	bl	12254 <sprintf@plt+0xcac>
   17750:	mov	r0, r4
   17754:	ldr	r1, [r5, #20]
   17758:	bl	12c2c <sprintf@plt+0x1684>
   1775c:	ldr	r3, [r4, #460]	; 0x1cc
   17760:	sub	r3, r3, #1
   17764:	cmp	r3, #0
   17768:	str	r3, [r4, #460]	; 0x1cc
   1776c:	bne	17694 <sprintf@plt+0x60ec>
   17770:	mov	r0, r4
   17774:	bl	12b58 <sprintf@plt+0x15b0>
   17778:	b	17694 <sprintf@plt+0x60ec>
   1777c:	cmp	r1, #0
   17780:	strd	r4, [sp, #-16]!
   17784:	mov	r4, r2
   17788:	str	r6, [sp, #8]
   1778c:	str	lr, [sp, #12]
   17790:	sub	sp, sp, #40	; 0x28
   17794:	bne	177f4 <sprintf@plt+0x624c>
   17798:	movw	r3, #48604	; 0xbddc
   1779c:	movt	r3, #2
   177a0:	ldr	ip, [r4, #464]	; 0x1d0
   177a4:	mov	r1, #32
   177a8:	movw	r2, #41324	; 0xa16c
   177ac:	movt	r2, #1
   177b0:	ldr	r3, [r3, #20]
   177b4:	add	r0, sp, #8
   177b8:	ldrh	lr, [r4, #62]	; 0x3e
   177bc:	add	ip, ip, r3, lsl #4
   177c0:	ldrh	r3, [r4, #246]	; 0xf6
   177c4:	ldr	r6, [ip, #8]
   177c8:	str	lr, [sp]
   177cc:	bl	1153c <snprintf@plt>
   177d0:	add	r0, sp, #8
   177d4:	bl	113d4 <strlen@plt>
   177d8:	mov	r5, r0
   177dc:	mov	r2, r0
   177e0:	ldr	r0, [r6]
   177e4:	add	r1, sp, #8
   177e8:	bl	11344 <rb_write@plt>
   177ec:	cmp	r0, r5
   177f0:	beq	17814 <sprintf@plt+0x626c>
   177f4:	mov	r0, r4
   177f8:	mov	r1, #2
   177fc:	bl	173d4 <sprintf@plt+0x5e2c>
   17800:	add	sp, sp, #40	; 0x28
   17804:	ldrd	r4, [sp]
   17808:	ldr	r6, [sp, #8]
   1780c:	add	sp, sp, #12
   17810:	pop	{pc}		; (ldr pc, [sp], #4)
   17814:	mov	r1, r4
   17818:	ldr	r0, [r6]
   1781c:	bl	174e4 <sprintf@plt+0x5f3c>
   17820:	b	17800 <sprintf@plt+0x6258>
   17824:	strd	r4, [sp, #-12]!
   17828:	movw	r4, #368	; 0x170
   1782c:	movt	r4, #3
   17830:	str	lr, [sp, #8]
   17834:	sub	sp, sp, #12
   17838:	movw	r5, #48604	; 0xbddc
   1783c:	movt	r5, #2
   17840:	mov	r1, sp
   17844:	ldr	r0, [r4]
   17848:	bl	113bc <rb_dictionary_foreach_start@plt>
   1784c:	b	17878 <sprintf@plt+0x62d0>
   17850:	ldr	ip, [r5, #20]
   17854:	ldr	r3, [r2, #464]	; 0x1d0
   17858:	add	r3, r3, ip, lsl #4
   1785c:	ldr	r3, [r3, #8]
   17860:	cmp	r3, #0
   17864:	beq	1786c <sprintf@plt+0x62c4>
   17868:	bl	173d4 <sprintf@plt+0x5e2c>
   1786c:	mov	r1, sp
   17870:	ldr	r0, [r4]
   17874:	bl	11374 <rb_dictionary_foreach_next@plt>
   17878:	mov	r1, sp
   1787c:	ldr	r0, [r4]
   17880:	bl	112d8 <rb_dictionary_foreach_cur@plt>
   17884:	subs	r2, r0, #0
   17888:	mov	r1, #2
   1788c:	bne	17850 <sprintf@plt+0x62a8>
   17890:	add	sp, sp, #12
   17894:	ldrd	r4, [sp]
   17898:	add	sp, sp, #8
   1789c:	pop	{pc}		; (ldr pc, [sp], #4)
   178a0:	mov	r1, #4
   178a4:	strd	r4, [sp, #-28]!	; 0xffffffe4
   178a8:	mov	r4, r0
   178ac:	mov	r0, #1
   178b0:	strd	r6, [sp, #8]
   178b4:	strd	r8, [sp, #16]
   178b8:	str	lr, [sp, #24]
   178bc:	sub	sp, sp, #268	; 0x10c
   178c0:	bl	112f0 <calloc@plt>
   178c4:	subs	r7, r0, #0
   178c8:	beq	179e8 <sprintf@plt+0x6440>
   178cc:	movw	r5, #48604	; 0xbddc
   178d0:	movt	r5, #2
   178d4:	ldr	r6, [r4]
   178d8:	ldrb	r3, [r5]
   178dc:	cmp	r3, #0
   178e0:	bne	17920 <sprintf@plt+0x6378>
   178e4:	bl	11380 <free@plt>
   178e8:	mov	r0, r6
   178ec:	movw	r1, #41336	; 0xa178
   178f0:	movt	r1, #1
   178f4:	bl	12254 <sprintf@plt+0xcac>
   178f8:	mov	r0, r4
   178fc:	ldr	r1, [r5, #20]
   17900:	bl	12c2c <sprintf@plt+0x1684>
   17904:	mov	r0, #1
   17908:	add	sp, sp, #268	; 0x10c
   1790c:	ldrd	r4, [sp]
   17910:	ldrd	r6, [sp, #8]
   17914:	ldrd	r8, [sp, #16]
   17918:	add	sp, sp, #24
   1791c:	pop	{pc}		; (ldr pc, [sp], #4)
   17920:	ldr	r3, [r4, #460]	; 0x1cc
   17924:	mov	r0, r6
   17928:	movw	r1, #41376	; 0xa1a0
   1792c:	movt	r1, #1
   17930:	ldrh	r9, [r4, #248]	; 0xf8
   17934:	add	r3, r3, #1
   17938:	str	r3, [r4, #460]	; 0x1cc
   1793c:	bl	12254 <sprintf@plt+0xcac>
   17940:	ldr	r3, [r4, #464]	; 0x1d0
   17944:	ldr	r6, [r5, #20]
   17948:	ldr	r8, [r5, #4]
   1794c:	lsl	r6, r6, #4
   17950:	add	r3, r3, r6
   17954:	str	r7, [r3, #8]
   17958:	bl	113e0 <rb_current_time@plt>
   1795c:	add	r8, r8, r0
   17960:	movw	r3, #41116	; 0xa09c
   17964:	movt	r3, #1
   17968:	ldr	ip, [r4, #464]	; 0x1d0
   1796c:	mov	r0, r9
   17970:	mov	r1, #1
   17974:	ldr	r2, [r4, #4]
   17978:	add	r6, ip, r6
   1797c:	str	r8, [r6, #4]
   17980:	bl	1129c <rb_socket@plt>
   17984:	cmp	r0, #0
   17988:	mov	r6, r0
   1798c:	str	r0, [r7]
   17990:	beq	179ec <sprintf@plt+0x6444>
   17994:	add	r1, r4, #64	; 0x40
   17998:	mov	r2, #128	; 0x80
   1799c:	add	r0, sp, #8
   179a0:	bl	113f8 <memcpy@plt>
   179a4:	add	r1, r4, #248	; 0xf8
   179a8:	add	r0, sp, #136	; 0x88
   179ac:	mov	r2, #128	; 0x80
   179b0:	bl	113f8 <memcpy@plt>
   179b4:	ldr	ip, [r5, #4]
   179b8:	mov	r3, #0
   179bc:	add	r2, sp, #8
   179c0:	add	r1, sp, #136	; 0x88
   179c4:	mov	r0, r6
   179c8:	strh	r3, [sp, #10]
   179cc:	mov	r3, #28928	; 0x7100
   179d0:	stm	sp, {r4, ip}
   179d4:	strh	r3, [sp, #138]	; 0x8a
   179d8:	movw	r3, #30588	; 0x777c
   179dc:	movt	r3, #1
   179e0:	bl	1123c <rb_connect_tcp@plt>
   179e4:	b	17904 <sprintf@plt+0x635c>
   179e8:	bl	1147c <rb_outofmemory@plt>
   179ec:	bl	1159c <__errno_location@plt>
   179f0:	ldr	r0, [r0]
   179f4:	bl	111e8 <strerror@plt>
   179f8:	mov	r2, r0
   179fc:	movw	r1, #41396	; 0xa1b4
   17a00:	movt	r1, #1
   17a04:	mov	r0, #68	; 0x44
   17a08:	bl	122bc <sprintf@plt+0xd14>
   17a0c:	mov	r0, r4
   17a10:	mov	r1, #2
   17a14:	bl	173d4 <sprintf@plt+0x5e2c>
   17a18:	b	17904 <sprintf@plt+0x635c>
   17a1c:	mov	r1, #0
   17a20:	str	r4, [sp, #-8]!
   17a24:	ldr	r0, [r2]
   17a28:	mov	r2, #10
   17a2c:	str	lr, [sp, #4]
   17a30:	bl	1141c <strtol@plt>
   17a34:	cmp	r0, #0
   17a38:	blt	17a54 <sprintf@plt+0x64ac>
   17a3c:	movw	r3, #48708	; 0xbe44
   17a40:	movt	r3, #2
   17a44:	ldr	r4, [sp]
   17a48:	add	sp, sp, #4
   17a4c:	str	r0, [r3]
   17a50:	pop	{pc}		; (ldr pc, [sp], #4)
   17a54:	mov	r2, r0
   17a58:	movw	r1, #41552	; 0xa250
   17a5c:	movt	r1, #1
   17a60:	mov	r0, #67	; 0x43
   17a64:	bl	122bc <sprintf@plt+0xd14>
   17a68:	mov	r0, #3
   17a6c:	bl	11590 <exit@plt>
   17a70:	strd	r4, [sp, #-24]!	; 0xffffffe8
   17a74:	movw	r5, #48708	; 0xbe44
   17a78:	movt	r5, #2
   17a7c:	ldr	ip, [r5, #16]
   17a80:	mov	r4, r0
   17a84:	mov	r2, #64	; 0x40
   17a88:	add	r0, r0, #376	; 0x178
   17a8c:	ldr	r3, [r0, #88]	; 0x58
   17a90:	strd	r6, [sp, #8]
   17a94:	mov	r7, r1
   17a98:	movw	r1, #39624	; 0x9ac8
   17a9c:	movt	r1, #1
   17aa0:	str	r8, [sp, #16]
   17aa4:	str	lr, [sp, #20]
   17aa8:	add	r3, r3, ip, lsl #4
   17aac:	ldr	r6, [r3, #8]
   17ab0:	bl	1135c <rb_strlcpy@plt>
   17ab4:	movw	r3, #41540	; 0xa244
   17ab8:	movt	r3, #1
   17abc:	ldr	r0, [r4]
   17ac0:	ldr	r1, [r3, r7, lsl #2]
   17ac4:	bl	12254 <sprintf@plt+0xcac>
   17ac8:	ldr	r0, [r6]
   17acc:	bl	11f08 <sprintf@plt+0x960>
   17ad0:	mov	r0, r6
   17ad4:	bl	11380 <free@plt>
   17ad8:	ldr	r1, [r5, #16]
   17adc:	mov	ip, #0
   17ae0:	mov	r0, r4
   17ae4:	ldr	r2, [r4, #464]	; 0x1d0
   17ae8:	lsl	lr, r1, #4
   17aec:	add	r2, r2, lr
   17af0:	str	ip, [r2, #8]
   17af4:	ldr	r3, [r4, #464]	; 0x1d0
   17af8:	add	r3, r3, lr
   17afc:	str	ip, [r3, #4]
   17b00:	bl	12c2c <sprintf@plt+0x1684>
   17b04:	ldr	r3, [r4, #460]	; 0x1cc
   17b08:	sub	r3, r3, #1
   17b0c:	cmp	r3, #0
   17b10:	str	r3, [r4, #460]	; 0x1cc
   17b14:	beq	17b2c <sprintf@plt+0x6584>
   17b18:	ldrd	r4, [sp]
   17b1c:	ldrd	r6, [sp, #8]
   17b20:	ldr	r8, [sp, #16]
   17b24:	add	sp, sp, #20
   17b28:	pop	{pc}		; (ldr pc, [sp], #4)
   17b2c:	mov	r0, r4
   17b30:	ldrd	r4, [sp]
   17b34:	ldrd	r6, [sp, #8]
   17b38:	ldr	r8, [sp, #16]
   17b3c:	ldr	lr, [sp, #20]
   17b40:	add	sp, sp, #24
   17b44:	b	12b58 <sprintf@plt+0x15b0>
   17b48:	movw	r2, #48708	; 0xbe44
   17b4c:	movt	r2, #2
   17b50:	ldr	r3, [r0, #464]	; 0x1d0
   17b54:	ldr	r2, [r2, #16]
   17b58:	add	r3, r3, r2, lsl #4
   17b5c:	ldr	r3, [r3, #8]
   17b60:	cmp	r3, #0
   17b64:	beq	17b70 <sprintf@plt+0x65c8>
   17b68:	mov	r1, #1
   17b6c:	b	17a70 <sprintf@plt+0x64c8>
   17b70:	bx	lr
   17b74:	strd	r4, [sp, #-12]!
   17b78:	movw	r4, #368	; 0x170
   17b7c:	movt	r4, #3
   17b80:	str	lr, [sp, #8]
   17b84:	sub	sp, sp, #12
   17b88:	movw	r5, #48708	; 0xbe44
   17b8c:	movt	r5, #2
   17b90:	mov	r1, sp
   17b94:	ldr	r0, [r4]
   17b98:	bl	113bc <rb_dictionary_foreach_start@plt>
   17b9c:	b	17bc8 <sprintf@plt+0x6620>
   17ba0:	ldr	ip, [r5, #16]
   17ba4:	ldr	r3, [r2, #464]	; 0x1d0
   17ba8:	add	r3, r3, ip, lsl #4
   17bac:	ldr	r3, [r3, #8]
   17bb0:	cmp	r3, #0
   17bb4:	beq	17bbc <sprintf@plt+0x6614>
   17bb8:	bl	17a70 <sprintf@plt+0x64c8>
   17bbc:	mov	r1, sp
   17bc0:	ldr	r0, [r4]
   17bc4:	bl	11374 <rb_dictionary_foreach_next@plt>
   17bc8:	mov	r1, sp
   17bcc:	ldr	r0, [r4]
   17bd0:	bl	112d8 <rb_dictionary_foreach_cur@plt>
   17bd4:	subs	r2, r0, #0
   17bd8:	mov	r1, #1
   17bdc:	bne	17ba0 <sprintf@plt+0x65f8>
   17be0:	add	sp, sp, #12
   17be4:	ldrd	r4, [sp]
   17be8:	add	sp, sp, #8
   17bec:	pop	{pc}		; (ldr pc, [sp], #4)
   17bf0:	eor	r1, r1, #1
   17bf4:	strd	r4, [sp, #-24]!	; 0xffffffe8
   17bf8:	strd	r6, [sp, #8]
   17bfc:	cmp	r0, #0
   17c00:	movne	r6, r1
   17c04:	orreq	r6, r1, #1
   17c08:	cmp	r6, #0
   17c0c:	str	r8, [sp, #16]
   17c10:	movne	r0, r3
   17c14:	movne	r1, #1
   17c18:	str	lr, [sp, #20]
   17c1c:	bne	17cdc <sprintf@plt+0x6734>
   17c20:	mov	r5, r0
   17c24:	mov	r4, r3
   17c28:	bl	113d4 <strlen@plt>
   17c2c:	cmp	r0, #63	; 0x3f
   17c30:	bhi	17cd4 <sprintf@plt+0x672c>
   17c34:	add	r7, r4, #376	; 0x178
   17c38:	mov	r1, r5
   17c3c:	mov	r0, r7
   17c40:	mov	r2, #64	; 0x40
   17c44:	movw	r5, #48708	; 0xbe44
   17c48:	movt	r5, #2
   17c4c:	bl	1135c <rb_strlcpy@plt>
   17c50:	ldr	ip, [r5, #16]
   17c54:	mov	r2, r7
   17c58:	movw	r1, #41588	; 0xa274
   17c5c:	movt	r1, #1
   17c60:	ldr	r0, [r4]
   17c64:	ldr	r3, [r4, #464]	; 0x1d0
   17c68:	add	r3, r3, ip, lsl #4
   17c6c:	ldr	r7, [r3, #8]
   17c70:	bl	12254 <sprintf@plt+0xcac>
   17c74:	ldr	r0, [r7]
   17c78:	bl	11f08 <sprintf@plt+0x960>
   17c7c:	mov	r0, r7
   17c80:	bl	11380 <free@plt>
   17c84:	ldr	r1, [r5, #16]
   17c88:	mov	r0, r4
   17c8c:	ldr	r2, [r4, #464]	; 0x1d0
   17c90:	lsl	ip, r1, #4
   17c94:	add	r2, r2, ip
   17c98:	str	r6, [r2, #8]
   17c9c:	ldr	r3, [r4, #464]	; 0x1d0
   17ca0:	add	r3, r3, ip
   17ca4:	str	r6, [r3, #4]
   17ca8:	bl	12c2c <sprintf@plt+0x1684>
   17cac:	ldr	r3, [r4, #460]	; 0x1cc
   17cb0:	sub	r3, r3, #1
   17cb4:	cmp	r3, #0
   17cb8:	str	r3, [r4, #460]	; 0x1cc
   17cbc:	beq	17cf4 <sprintf@plt+0x674c>
   17cc0:	ldrd	r4, [sp]
   17cc4:	ldrd	r6, [sp, #8]
   17cc8:	ldr	r8, [sp, #16]
   17ccc:	add	sp, sp, #20
   17cd0:	pop	{pc}		; (ldr pc, [sp], #4)
   17cd4:	mov	r0, r4
   17cd8:	mov	r1, #2
   17cdc:	ldrd	r4, [sp]
   17ce0:	ldrd	r6, [sp, #8]
   17ce4:	ldr	r8, [sp, #16]
   17ce8:	ldr	lr, [sp, #20]
   17cec:	add	sp, sp, #24
   17cf0:	b	17a70 <sprintf@plt+0x64c8>
   17cf4:	mov	r0, r4
   17cf8:	ldrd	r4, [sp]
   17cfc:	ldrd	r6, [sp, #8]
   17d00:	ldr	r8, [sp, #16]
   17d04:	ldr	lr, [sp, #20]
   17d08:	add	sp, sp, #24
   17d0c:	b	12b58 <sprintf@plt+0x15b0>
   17d10:	mov	r1, #4
   17d14:	strd	r4, [sp, #-24]!	; 0xffffffe8
   17d18:	mov	r4, r0
   17d1c:	mov	r0, #1
   17d20:	strd	r6, [sp, #8]
   17d24:	str	r8, [sp, #16]
   17d28:	str	lr, [sp, #20]
   17d2c:	bl	112f0 <calloc@plt>
   17d30:	subs	r7, r0, #0
   17d34:	beq	17db8 <sprintf@plt+0x6810>
   17d38:	movw	r3, #48708	; 0xbe44
   17d3c:	movt	r3, #2
   17d40:	ldr	r1, [r4, #460]	; 0x1cc
   17d44:	ldr	r2, [r4, #464]	; 0x1d0
   17d48:	ldr	r5, [r3, #16]
   17d4c:	add	r1, r1, #1
   17d50:	ldr	r6, [r3]
   17d54:	str	r1, [r4, #460]	; 0x1cc
   17d58:	lsl	r5, r5, #4
   17d5c:	add	r3, r2, r5
   17d60:	str	r7, [r3, #8]
   17d64:	bl	113e0 <rb_current_time@plt>
   17d68:	ldr	r3, [r4, #464]	; 0x1d0
   17d6c:	add	r6, r6, r0
   17d70:	mov	r2, r4
   17d74:	add	r0, r4, #192	; 0xc0
   17d78:	movw	r1, #31728	; 0x7bf0
   17d7c:	movt	r1, #1
   17d80:	add	r5, r3, r5
   17d84:	str	r6, [r5, #4]
   17d88:	bl	11e24 <sprintf@plt+0x87c>
   17d8c:	movw	r1, #41616	; 0xa290
   17d90:	movt	r1, #1
   17d94:	str	r0, [r7]
   17d98:	ldr	r0, [r4]
   17d9c:	bl	12254 <sprintf@plt+0xcac>
   17da0:	ldrd	r4, [sp]
   17da4:	mov	r0, #1
   17da8:	ldrd	r6, [sp, #8]
   17dac:	ldr	r8, [sp, #16]
   17db0:	add	sp, sp, #20
   17db4:	pop	{pc}		; (ldr pc, [sp], #4)
   17db8:	bl	1147c <rb_outofmemory@plt>
   17dbc:	strd	r4, [sp, #-24]!	; 0xffffffe8
   17dc0:	ldr	r3, [r0, #464]	; 0x1d0
   17dc4:	strd	r6, [sp, #8]
   17dc8:	movw	r7, #48796	; 0xbe9c
   17dcc:	movt	r7, #2
   17dd0:	ldr	r2, [r7, #12]
   17dd4:	str	r8, [sp, #16]
   17dd8:	str	lr, [sp, #20]
   17ddc:	add	r3, r3, r2, lsl #4
   17de0:	ldr	r8, [r3, #8]
   17de4:	cmp	r8, #0
   17de8:	beq	17e80 <sprintf@plt+0x68d8>
   17dec:	mov	r6, r0
   17df0:	movw	r1, #41788	; 0xa33c
   17df4:	movt	r1, #1
   17df8:	ldr	r0, [r0]
   17dfc:	bl	12254 <sprintf@plt+0xcac>
   17e00:	ldr	r3, [r8]
   17e04:	cmp	r3, #0
   17e08:	beq	17e38 <sprintf@plt+0x6890>
   17e0c:	ldr	r4, [r3, #8]
   17e10:	ldr	r5, [r3]
   17e14:	ldr	r0, [r5, #4]
   17e18:	bl	11410 <rb_close@plt>
   17e1c:	mov	r0, r5
   17e20:	bl	11380 <free@plt>
   17e24:	cmp	r4, #0
   17e28:	mov	r3, r4
   17e2c:	beq	17e38 <sprintf@plt+0x6890>
   17e30:	ldr	r4, [r4, #8]
   17e34:	b	17e10 <sprintf@plt+0x6868>
   17e38:	mov	r0, r8
   17e3c:	bl	11380 <free@plt>
   17e40:	ldr	r1, [r7, #12]
   17e44:	mov	ip, #0
   17e48:	mov	r0, r6
   17e4c:	ldr	r2, [r6, #464]	; 0x1d0
   17e50:	lsl	lr, r1, #4
   17e54:	add	r2, r2, lr
   17e58:	str	ip, [r2, #8]
   17e5c:	ldr	r3, [r6, #464]	; 0x1d0
   17e60:	add	r3, r3, lr
   17e64:	str	ip, [r3, #4]
   17e68:	bl	12c2c <sprintf@plt+0x1684>
   17e6c:	ldr	r3, [r6, #460]	; 0x1cc
   17e70:	sub	r3, r3, #1
   17e74:	cmp	r3, #0
   17e78:	str	r3, [r6, #460]	; 0x1cc
   17e7c:	beq	17e94 <sprintf@plt+0x68ec>
   17e80:	ldrd	r4, [sp]
   17e84:	ldrd	r6, [sp, #8]
   17e88:	ldr	r8, [sp, #16]
   17e8c:	add	sp, sp, #20
   17e90:	pop	{pc}		; (ldr pc, [sp], #4)
   17e94:	mov	r0, r6
   17e98:	ldrd	r4, [sp]
   17e9c:	ldrd	r6, [sp, #8]
   17ea0:	ldr	r8, [sp, #16]
   17ea4:	ldr	lr, [sp, #20]
   17ea8:	add	sp, sp, #24
   17eac:	b	12b58 <sprintf@plt+0x15b0>
   17eb0:	str	r4, [sp, #-8]!
   17eb4:	movw	r4, #368	; 0x170
   17eb8:	movt	r4, #3
   17ebc:	str	lr, [sp, #4]
   17ec0:	sub	sp, sp, #8
   17ec4:	mov	r1, sp
   17ec8:	ldr	r0, [r4]
   17ecc:	bl	113bc <rb_dictionary_foreach_start@plt>
   17ed0:	b	17ee4 <sprintf@plt+0x693c>
   17ed4:	bl	17dbc <sprintf@plt+0x6814>
   17ed8:	mov	r1, sp
   17edc:	ldr	r0, [r4]
   17ee0:	bl	11374 <rb_dictionary_foreach_next@plt>
   17ee4:	mov	r1, sp
   17ee8:	ldr	r0, [r4]
   17eec:	bl	112d8 <rb_dictionary_foreach_cur@plt>
   17ef0:	cmp	r0, #0
   17ef4:	bne	17ed4 <sprintf@plt+0x692c>
   17ef8:	add	sp, sp, #8
   17efc:	ldr	r4, [sp]
   17f00:	add	sp, sp, #4
   17f04:	pop	{pc}		; (ldr pc, [sp], #4)
   17f08:	mov	r1, #0
   17f0c:	str	r4, [sp, #-8]!
   17f10:	ldr	r0, [r2]
   17f14:	mov	r2, #10
   17f18:	str	lr, [sp, #4]
   17f1c:	bl	1141c <strtol@plt>
   17f20:	subs	r2, r0, #0
   17f24:	blt	17f40 <sprintf@plt+0x6998>
   17f28:	movw	r3, #48796	; 0xbe9c
   17f2c:	movt	r3, #2
   17f30:	ldr	r4, [sp]
   17f34:	add	sp, sp, #4
   17f38:	str	r2, [r3, #60]	; 0x3c
   17f3c:	pop	{pc}		; (ldr pc, [sp], #4)
   17f40:	movw	r1, #41820	; 0xa35c
   17f44:	movt	r1, #1
   17f48:	ldr	r4, [sp]
   17f4c:	mov	r0, #67	; 0x43
   17f50:	ldr	lr, [sp, #4]
   17f54:	add	sp, sp, #8
   17f58:	b	122bc <sprintf@plt+0xd14>
   17f5c:	str	r4, [sp, #-8]!
   17f60:	movw	r4, #65508	; 0xffe4
   17f64:	movt	r4, #2
   17f68:	ldr	r0, [r4, #184]	; 0xb8
   17f6c:	str	lr, [sp, #4]
   17f70:	cmp	r0, #0
   17f74:	beq	17f7c <sprintf@plt+0x69d4>
   17f78:	bl	11410 <rb_close@plt>
   17f7c:	ldr	r0, [r4, #372]	; 0x174
   17f80:	cmp	r0, #0
   17f84:	beq	17f8c <sprintf@plt+0x69e4>
   17f88:	bl	11410 <rb_close@plt>
   17f8c:	movw	r0, #65508	; 0xffe4
   17f90:	movt	r0, #2
   17f94:	ldr	r4, [sp]
   17f98:	mov	r2, #376	; 0x178
   17f9c:	mov	r1, #0
   17fa0:	ldr	lr, [sp, #4]
   17fa4:	add	sp, sp, #8
   17fa8:	b	11320 <memset@plt>
   17fac:	strd	r4, [sp, #-12]!
   17fb0:	cmp	r1, #0
   17fb4:	mov	r2, #128	; 0x80
   17fb8:	str	lr, [sp, #8]
   17fbc:	sub	sp, sp, #148	; 0x94
   17fc0:	movne	r1, #1
   17fc4:	ldr	r3, [sp, #160]	; 0xa0
   17fc8:	mov	r5, r0
   17fcc:	str	r2, [sp, #4]
   17fd0:	clz	r3, r3
   17fd4:	lsr	r3, r3, #5
   17fd8:	moveq	r1, r3
   17fdc:	cmp	r1, #0
   17fe0:	bne	180c0 <sprintf@plt+0x6b18>
   17fe4:	bl	11278 <rb_get_fd@plt>
   17fe8:	add	r2, sp, #4
   17fec:	add	r1, sp, #16
   17ff0:	bl	11218 <getsockname@plt>
   17ff4:	cmp	r0, #0
   17ff8:	bne	180c0 <sprintf@plt+0x6b18>
   17ffc:	movw	r4, #368	; 0x170
   18000:	movt	r4, #3
   18004:	add	r1, sp, #8
   18008:	ldr	r0, [r4]
   1800c:	bl	113bc <rb_dictionary_foreach_start@plt>
   18010:	b	18030 <sprintf@plt+0x6a88>
   18014:	ldr	r2, [sp, #20]
   18018:	ldr	r3, [r0, #252]	; 0xfc
   1801c:	cmp	r2, r3
   18020:	beq	180a4 <sprintf@plt+0x6afc>
   18024:	add	r1, sp, #8
   18028:	ldr	r0, [r4]
   1802c:	bl	11374 <rb_dictionary_foreach_next@plt>
   18030:	add	r1, sp, #8
   18034:	ldr	r0, [r4]
   18038:	bl	112d8 <rb_dictionary_foreach_cur@plt>
   1803c:	cmp	r0, #0
   18040:	beq	180c0 <sprintf@plt+0x6b18>
   18044:	ldrh	r3, [sp, #16]
   18048:	ldrh	r2, [r0, #248]	; 0xf8
   1804c:	cmp	r2, r3
   18050:	bne	18024 <sprintf@plt+0x6a7c>
   18054:	cmp	r2, #2
   18058:	beq	18014 <sprintf@plt+0x6a6c>
   1805c:	cmp	r2, #10
   18060:	bne	180d8 <sprintf@plt+0x6b30>
   18064:	ldr	r2, [sp, #24]
   18068:	ldr	r3, [r0, #256]	; 0x100
   1806c:	cmp	r2, r3
   18070:	bne	18024 <sprintf@plt+0x6a7c>
   18074:	ldr	r2, [sp, #28]
   18078:	ldr	r3, [r0, #260]	; 0x104
   1807c:	cmp	r2, r3
   18080:	bne	18024 <sprintf@plt+0x6a7c>
   18084:	ldr	r2, [sp, #32]
   18088:	ldr	r3, [r0, #264]	; 0x108
   1808c:	cmp	r2, r3
   18090:	bne	18024 <sprintf@plt+0x6a7c>
   18094:	ldr	r2, [sp, #36]	; 0x24
   18098:	ldr	r3, [r0, #268]	; 0x10c
   1809c:	cmp	r2, r3
   180a0:	bne	18024 <sprintf@plt+0x6a7c>
   180a4:	mov	r3, r0
   180a8:	movw	r2, #33008	; 0x80f0
   180ac:	movt	r2, #1
   180b0:	mov	r0, r5
   180b4:	mov	r1, #1
   180b8:	bl	1126c <rb_setselect@plt>
   180bc:	b	180c8 <sprintf@plt+0x6b20>
   180c0:	mov	r0, r5
   180c4:	bl	11410 <rb_close@plt>
   180c8:	add	sp, sp, #148	; 0x94
   180cc:	ldrd	r4, [sp]
   180d0:	add	sp, sp, #8
   180d4:	pop	{pc}		; (ldr pc, [sp], #4)
   180d8:	mov	r0, #67	; 0x43
   180dc:	movw	r1, #41856	; 0xa380
   180e0:	movt	r1, #1
   180e4:	bl	122bc <sprintf@plt+0xd14>
   180e8:	mov	r0, #3
   180ec:	bl	11590 <exit@plt>
   180f0:	strd	r4, [sp, #-28]!	; 0xffffffe4
   180f4:	mov	r2, #128	; 0x80
   180f8:	ldr	r3, [r1, #464]	; 0x1d0
   180fc:	strd	r6, [sp, #8]
   18100:	movw	r6, #48796	; 0xbe9c
   18104:	movt	r6, #2
   18108:	ldr	ip, [r6, #12]
   1810c:	mov	r7, r1
   18110:	strd	r8, [sp, #16]
   18114:	mov	r9, r0
   18118:	str	lr, [sp, #24]
   1811c:	sub	sp, sp, #132	; 0x84
   18120:	mov	r1, sp
   18124:	add	r3, r3, ip, lsl #4
   18128:	ldr	r8, [r3, #8]
   1812c:	bl	11398 <rb_read@plt>
   18130:	cmp	r0, #0
   18134:	blt	181fc <sprintf@plt+0x6c54>
   18138:	beq	181dc <sprintf@plt+0x6c34>
   1813c:	movw	r3, #65508	; 0xffe4
   18140:	movt	r3, #2
   18144:	ldr	r4, [r3, #376]	; 0x178
   18148:	cmp	r4, #0
   1814c:	bne	18160 <sprintf@plt+0x6bb8>
   18150:	b	181dc <sprintf@plt+0x6c34>
   18154:	ldr	r4, [r4, #8]
   18158:	cmp	r4, #0
   1815c:	beq	181dc <sprintf@plt+0x6c34>
   18160:	ldr	r5, [r4]
   18164:	mov	r0, r5
   18168:	bl	113d4 <strlen@plt>
   1816c:	mov	r2, r0
   18170:	mov	r1, sp
   18174:	mov	r0, r5
   18178:	bl	11554 <strncmp@plt>
   1817c:	cmp	r0, #0
   18180:	bne	18154 <sprintf@plt+0x6bac>
   18184:	ldr	r3, [r8]
   18188:	cmp	r3, #0
   1818c:	beq	181bc <sprintf@plt+0x6c14>
   18190:	ldr	r4, [r3, #8]
   18194:	ldr	r5, [r3]
   18198:	ldr	r0, [r5, #4]
   1819c:	bl	11410 <rb_close@plt>
   181a0:	mov	r0, r5
   181a4:	bl	11380 <free@plt>
   181a8:	cmp	r4, #0
   181ac:	mov	r3, r4
   181b0:	beq	181bc <sprintf@plt+0x6c14>
   181b4:	ldr	r4, [r4, #8]
   181b8:	b	18194 <sprintf@plt+0x6bec>
   181bc:	mov	r0, r8
   181c0:	bl	11380 <free@plt>
   181c4:	movw	r3, #41904	; 0xa3b0
   181c8:	movt	r3, #1
   181cc:	ldr	r1, [r6, #12]
   181d0:	mov	r2, sp
   181d4:	mov	r0, r7
   181d8:	bl	12d78 <sprintf@plt+0x17d0>
   181dc:	mov	r0, r9
   181e0:	bl	11410 <rb_close@plt>
   181e4:	add	sp, sp, #132	; 0x84
   181e8:	ldrd	r4, [sp]
   181ec:	ldrd	r6, [sp, #8]
   181f0:	ldrd	r8, [sp, #16]
   181f4:	add	sp, sp, #24
   181f8:	pop	{pc}		; (ldr pc, [sp], #4)
   181fc:	bl	1159c <__errno_location@plt>
   18200:	ldr	r0, [r0]
   18204:	bl	11224 <rb_ignore_errno@plt>
   18208:	cmp	r0, #0
   1820c:	beq	181dc <sprintf@plt+0x6c34>
   18210:	mov	r3, r7
   18214:	mov	r0, r9
   18218:	movw	r2, #33008	; 0x80f0
   1821c:	movt	r2, #1
   18220:	mov	r1, #1
   18224:	bl	1126c <rb_setselect@plt>
   18228:	b	181e4 <sprintf@plt+0x6c3c>
   1822c:	mov	r3, #1
   18230:	strd	r4, [sp, #-32]!	; 0xffffffe0
   18234:	strd	r6, [sp, #8]
   18238:	strd	r8, [sp, #16]
   1823c:	mov	r8, r1
   18240:	mov	r9, r0
   18244:	str	sl, [sp, #24]
   18248:	str	lr, [sp, #28]
   1824c:	sub	sp, sp, #152	; 0x98
   18250:	add	r1, sp, #24
   18254:	str	r3, [sp, #12]
   18258:	bl	113c8 <rb_inet_pton_sock@plt>
   1825c:	cmp	r0, #0
   18260:	beq	184d0 <sprintf@plt+0x6f28>
   18264:	ldrh	r0, [sp, #24]
   18268:	rev16	r3, r8
   1826c:	movw	r5, #65508	; 0xffe4
   18270:	movt	r5, #2
   18274:	uxth	r2, r3
   18278:	cmp	r0, #2
   1827c:	beq	183f0 <sprintf@plt+0x6e48>
   18280:	cmp	r0, #10
   18284:	strh	r3, [sp, #26]
   18288:	bne	183d4 <sprintf@plt+0x6e2c>
   1828c:	ldr	r1, [sp, #32]
   18290:	ldr	r3, [r5, #252]	; 0xfc
   18294:	cmp	r1, r3
   18298:	beq	18484 <sprintf@plt+0x6edc>
   1829c:	add	r6, r5, #188	; 0xbc
   182a0:	movw	r3, #41956	; 0xa3e4
   182a4:	movt	r3, #1
   182a8:	mov	r2, #0
   182ac:	mov	r1, #1
   182b0:	bl	1129c <rb_socket@plt>
   182b4:	subs	r7, r0, #0
   182b8:	beq	184f0 <sprintf@plt+0x6f48>
   182bc:	bl	11278 <rb_get_fd@plt>
   182c0:	mov	ip, #4
   182c4:	add	r3, sp, #12
   182c8:	mov	r2, #2
   182cc:	mov	r1, #1
   182d0:	str	ip, [sp]
   182d4:	bl	1156c <setsockopt@plt>
   182d8:	subs	r4, r0, #0
   182dc:	bne	18518 <sprintf@plt+0x6f70>
   182e0:	mov	r0, r7
   182e4:	bl	11278 <rb_get_fd@plt>
   182e8:	ldrh	r3, [sp, #24]
   182ec:	add	r1, sp, #24
   182f0:	cmp	r3, #2
   182f4:	moveq	r2, #16
   182f8:	movne	r2, #28
   182fc:	bl	11440 <bind@plt>
   18300:	subs	sl, r0, #0
   18304:	bne	18424 <sprintf@plt+0x6e7c>
   18308:	mov	r2, sl
   1830c:	mov	r1, #128	; 0x80
   18310:	mov	r0, r7
   18314:	bl	11548 <rb_listen@plt>
   18318:	cmp	r0, #0
   1831c:	bne	18454 <sprintf@plt+0x6eac>
   18320:	ldr	r0, [r6, #184]	; 0xb8
   18324:	cmp	r0, #0
   18328:	beq	18330 <sprintf@plt+0x6d88>
   1832c:	bl	11410 <rb_close@plt>
   18330:	movw	r4, #368	; 0x170
   18334:	movt	r4, #3
   18338:	str	r7, [r6, #184]	; 0xb8
   1833c:	add	r1, sp, #16
   18340:	ldr	r0, [r4]
   18344:	bl	113bc <rb_dictionary_foreach_start@plt>
   18348:	b	1835c <sprintf@plt+0x6db4>
   1834c:	bl	17dbc <sprintf@plt+0x6814>
   18350:	add	r1, sp, #16
   18354:	ldr	r0, [r4]
   18358:	bl	11374 <rb_dictionary_foreach_next@plt>
   1835c:	add	r1, sp, #16
   18360:	ldr	r0, [r4]
   18364:	bl	112d8 <rb_dictionary_foreach_cur@plt>
   18368:	subs	r7, r0, #0
   1836c:	bne	1834c <sprintf@plt+0x6da4>
   18370:	mov	r1, r9
   18374:	mov	r2, #53	; 0x35
   18378:	mov	r0, r6
   1837c:	mov	r4, #1
   18380:	bl	1135c <rb_strlcpy@plt>
   18384:	add	r1, sp, #24
   18388:	mov	r2, #128	; 0x80
   1838c:	strh	r8, [r6, #54]	; 0x36
   18390:	add	r0, r6, #56	; 0x38
   18394:	bl	113f8 <memcpy@plt>
   18398:	mov	r1, r7
   1839c:	movw	r2, #32684	; 0x7fac
   183a0:	movt	r2, #1
   183a4:	mov	r3, r6
   183a8:	ldr	r0, [r6, #184]	; 0xb8
   183ac:	strb	r4, [r5, #388]	; 0x184
   183b0:	bl	11500 <rb_accept_tcp@plt>
   183b4:	mov	r0, r4
   183b8:	add	sp, sp, #152	; 0x98
   183bc:	ldrd	r4, [sp]
   183c0:	ldrd	r6, [sp, #8]
   183c4:	ldrd	r8, [sp, #16]
   183c8:	ldr	sl, [sp, #24]
   183cc:	add	sp, sp, #28
   183d0:	pop	{pc}		; (ldr pc, [sp], #4)
   183d4:	ldr	r1, [sp, #28]
   183d8:	ldr	r3, [r5, #60]	; 0x3c
   183dc:	cmp	r1, r3
   183e0:	beq	18404 <sprintf@plt+0x6e5c>
   183e4:	movw	r6, #65508	; 0xffe4
   183e8:	movt	r6, #2
   183ec:	b	182a0 <sprintf@plt+0x6cf8>
   183f0:	strh	r3, [sp, #26]
   183f4:	ldr	r1, [sp, #28]
   183f8:	ldr	r3, [r5, #60]	; 0x3c
   183fc:	cmp	r3, r1
   18400:	bne	183e4 <sprintf@plt+0x6e3c>
   18404:	ldrh	r3, [r5, #58]	; 0x3a
   18408:	cmp	r2, r3
   1840c:	bne	183e4 <sprintf@plt+0x6e3c>
   18410:	ldr	r3, [r5, #184]	; 0xb8
   18414:	cmp	r3, #0
   18418:	beq	183e4 <sprintf@plt+0x6e3c>
   1841c:	mov	r0, #0
   18420:	b	183b8 <sprintf@plt+0x6e10>
   18424:	bl	1159c <__errno_location@plt>
   18428:	ldr	r0, [r0]
   1842c:	bl	111e8 <strerror@plt>
   18430:	mov	r2, r0
   18434:	movw	r1, #42048	; 0xa440
   18438:	movt	r1, #1
   1843c:	mov	r0, #87	; 0x57
   18440:	bl	122bc <sprintf@plt+0xd14>
   18444:	mov	r0, r7
   18448:	bl	11410 <rb_close@plt>
   1844c:	mov	r0, r4
   18450:	b	183b8 <sprintf@plt+0x6e10>
   18454:	bl	1159c <__errno_location@plt>
   18458:	ldr	r0, [r0]
   1845c:	bl	111e8 <strerror@plt>
   18460:	mov	r2, r0
   18464:	movw	r1, #42080	; 0xa460
   18468:	movt	r1, #1
   1846c:	mov	r0, #87	; 0x57
   18470:	bl	122bc <sprintf@plt+0xd14>
   18474:	mov	r0, r7
   18478:	bl	11410 <rb_close@plt>
   1847c:	mov	r0, sl
   18480:	b	183b8 <sprintf@plt+0x6e10>
   18484:	ldr	r1, [sp, #36]	; 0x24
   18488:	ldr	r3, [r5, #256]	; 0x100
   1848c:	cmp	r1, r3
   18490:	bne	1829c <sprintf@plt+0x6cf4>
   18494:	ldr	r1, [sp, #40]	; 0x28
   18498:	ldr	r3, [r5, #260]	; 0x104
   1849c:	cmp	r1, r3
   184a0:	bne	1829c <sprintf@plt+0x6cf4>
   184a4:	ldr	r1, [sp, #44]	; 0x2c
   184a8:	ldr	r3, [r5, #264]	; 0x108
   184ac:	cmp	r1, r3
   184b0:	bne	1829c <sprintf@plt+0x6cf4>
   184b4:	ldrh	r3, [r5, #246]	; 0xf6
   184b8:	cmp	r3, r2
   184bc:	bne	1829c <sprintf@plt+0x6cf4>
   184c0:	ldr	r3, [r5, #372]	; 0x174
   184c4:	cmp	r3, #0
   184c8:	bne	1841c <sprintf@plt+0x6e74>
   184cc:	b	1829c <sprintf@plt+0x6cf4>
   184d0:	mov	r0, #67	; 0x43
   184d4:	mov	r3, r8
   184d8:	mov	r2, r9
   184dc:	movw	r1, #41924	; 0xa3c4
   184e0:	movt	r1, #1
   184e4:	bl	122bc <sprintf@plt+0xd14>
   184e8:	mov	r0, #3
   184ec:	bl	11590 <exit@plt>
   184f0:	bl	1159c <__errno_location@plt>
   184f4:	ldr	r0, [r0]
   184f8:	bl	111e8 <strerror@plt>
   184fc:	mov	r2, r0
   18500:	movw	r1, #41976	; 0xa3f8
   18504:	movt	r1, #1
   18508:	mov	r0, #67	; 0x43
   1850c:	bl	122bc <sprintf@plt+0xd14>
   18510:	mov	r0, #3
   18514:	bl	11590 <exit@plt>
   18518:	bl	1159c <__errno_location@plt>
   1851c:	ldr	r0, [r0]
   18520:	bl	111e8 <strerror@plt>
   18524:	mov	r2, r0
   18528:	movw	r1, #42008	; 0xa418
   1852c:	movt	r1, #1
   18530:	mov	r0, #67	; 0x43
   18534:	bl	122bc <sprintf@plt+0xd14>
   18538:	mov	r0, #3
   1853c:	bl	11590 <exit@plt>
   18540:	ldr	r3, [r2]
   18544:	strd	r4, [sp, #-16]!
   18548:	movw	r5, #65508	; 0xffe4
   1854c:	movt	r5, #2
   18550:	str	r6, [sp, #8]
   18554:	str	lr, [sp, #12]
   18558:	sub	sp, sp, #8
   1855c:	ldrb	r3, [r3]
   18560:	cmp	r3, #49	; 0x31
   18564:	moveq	r6, #1
   18568:	movne	r6, #0
   1856c:	beq	185ec <sprintf@plt+0x7044>
   18570:	ldr	r0, [r5, #184]	; 0xb8
   18574:	cmp	r0, #0
   18578:	beq	18640 <sprintf@plt+0x7098>
   1857c:	bl	11410 <rb_close@plt>
   18580:	ldr	r0, [r5, #372]	; 0x174
   18584:	cmp	r0, #0
   18588:	bne	1864c <sprintf@plt+0x70a4>
   1858c:	mov	r3, #0
   18590:	movw	r4, #368	; 0x170
   18594:	movt	r4, #3
   18598:	mov	r1, sp
   1859c:	ldr	r0, [r4]
   185a0:	str	r3, [r5, #184]	; 0xb8
   185a4:	str	r3, [r5, #372]	; 0x174
   185a8:	bl	113bc <rb_dictionary_foreach_start@plt>
   185ac:	b	185c0 <sprintf@plt+0x7018>
   185b0:	bl	17dbc <sprintf@plt+0x6814>
   185b4:	mov	r1, sp
   185b8:	ldr	r0, [r4]
   185bc:	bl	11374 <rb_dictionary_foreach_next@plt>
   185c0:	mov	r1, sp
   185c4:	ldr	r0, [r4]
   185c8:	bl	112d8 <rb_dictionary_foreach_cur@plt>
   185cc:	cmp	r0, #0
   185d0:	bne	185b0 <sprintf@plt+0x7008>
   185d4:	strb	r6, [r5, #388]	; 0x184
   185d8:	add	sp, sp, #8
   185dc:	ldrd	r4, [sp]
   185e0:	ldr	r6, [sp, #8]
   185e4:	add	sp, sp, #12
   185e8:	pop	{pc}		; (ldr pc, [sp], #4)
   185ec:	ldrb	r3, [r5]
   185f0:	cmp	r3, #0
   185f4:	beq	18610 <sprintf@plt+0x7068>
   185f8:	ldrh	r1, [r5, #54]	; 0x36
   185fc:	cmp	r1, #0
   18600:	beq	18610 <sprintf@plt+0x7068>
   18604:	ldr	r3, [r5, #184]	; 0xb8
   18608:	cmp	r3, #0
   1860c:	beq	18654 <sprintf@plt+0x70ac>
   18610:	ldrb	r3, [r5, #188]	; 0xbc
   18614:	cmp	r3, #0
   18618:	beq	185d4 <sprintf@plt+0x702c>
   1861c:	ldrh	r1, [r5, #242]	; 0xf2
   18620:	cmp	r1, #0
   18624:	beq	185d4 <sprintf@plt+0x702c>
   18628:	ldr	r3, [r5, #372]	; 0x174
   1862c:	cmp	r3, #0
   18630:	bne	185d4 <sprintf@plt+0x702c>
   18634:	ldr	r0, [pc, #36]	; 18660 <sprintf@plt+0x70b8>
   18638:	bl	1822c <sprintf@plt+0x6c84>
   1863c:	b	185d4 <sprintf@plt+0x702c>
   18640:	ldr	r0, [r5, #372]	; 0x174
   18644:	cmp	r0, #0
   18648:	beq	185d4 <sprintf@plt+0x702c>
   1864c:	bl	11410 <rb_close@plt>
   18650:	b	1858c <sprintf@plt+0x6fe4>
   18654:	mov	r0, r5
   18658:	bl	1822c <sprintf@plt+0x6c84>
   1865c:	b	18610 <sprintf@plt+0x7068>
   18660:	andeq	r0, r3, r0, lsr #1
   18664:	movw	r3, #41752	; 0xa318
   18668:	movt	r3, #1
   1866c:	str	r4, [sp, #-8]!
   18670:	movw	r1, #39556	; 0x9a84
   18674:	movt	r1, #1
   18678:	str	lr, [sp, #4]
   1867c:	movw	r0, #40584	; 0x9e88
   18680:	movt	r0, #1
   18684:	mov	r2, #236	; 0xec
   18688:	bl	11350 <__assert_fail@plt>
   1868c:	strd	r4, [sp, #-32]!	; 0xffffffe0
   18690:	movw	r5, #48796	; 0xbe9c
   18694:	movt	r5, #2
   18698:	ldr	r2, [r5, #12]
   1869c:	ldr	r3, [r0, #464]	; 0x1d0
   186a0:	strd	r6, [sp, #8]
   186a4:	mov	r6, r0
   186a8:	mov	r0, #1
   186ac:	strd	r8, [sp, #16]
   186b0:	mov	r9, r1
   186b4:	mov	r1, #28
   186b8:	str	sl, [sp, #24]
   186bc:	str	lr, [sp, #28]
   186c0:	sub	sp, sp, #272	; 0x110
   186c4:	add	r3, r3, r2, lsl #4
   186c8:	ldr	r8, [r3, #8]
   186cc:	bl	112f0 <calloc@plt>
   186d0:	subs	r4, r0, #0
   186d4:	beq	18874 <sprintf@plt+0x72cc>
   186d8:	ldrh	sl, [r6, #248]	; 0xf8
   186dc:	mov	r3, #1
   186e0:	str	r3, [sp, #12]
   186e4:	cmp	sl, #10
   186e8:	movwne	r7, #65508	; 0xffe4
   186ec:	movtne	r7, #2
   186f0:	beq	18848 <sprintf@plt+0x72a0>
   186f4:	ldr	r3, [r7, #184]	; 0xb8
   186f8:	cmp	r3, #0
   186fc:	beq	18824 <sprintf@plt+0x727c>
   18700:	mov	r2, #128	; 0x80
   18704:	add	r1, r6, #248	; 0xf8
   18708:	add	r0, sp, #16
   1870c:	bl	113f8 <memcpy@plt>
   18710:	mov	r2, #128	; 0x80
   18714:	add	r1, r7, #56	; 0x38
   18718:	add	r0, sp, #144	; 0x90
   1871c:	bl	113f8 <memcpy@plt>
   18720:	mov	r0, sl
   18724:	mov	r3, r9
   18728:	str	r6, [r4]
   1872c:	mov	r2, #0
   18730:	mov	r1, #1
   18734:	str	r9, [r4, #8]
   18738:	str	r7, [r4, #12]
   1873c:	bl	1129c <rb_socket@plt>
   18740:	cmp	r0, #0
   18744:	str	r0, [r4, #4]
   18748:	beq	18800 <sprintf@plt+0x7258>
   1874c:	bl	11278 <rb_get_fd@plt>
   18750:	mov	ip, #4
   18754:	add	r3, sp, #12
   18758:	mov	r2, #1
   1875c:	mov	r1, #6
   18760:	str	ip, [sp]
   18764:	bl	1156c <setsockopt@plt>
   18768:	mov	r3, #0
   1876c:	cmp	r8, #0
   18770:	add	r2, r4, #16
   18774:	strh	r3, [sp, #146]	; 0x92
   18778:	ldrh	r3, [r9, #20]
   1877c:	rev16	r3, r3
   18780:	strh	r3, [sp, #18]
   18784:	beq	18878 <sprintf@plt+0x72d0>
   18788:	ldr	r3, [r8]
   1878c:	mov	r1, #0
   18790:	str	r4, [r4, #16]
   18794:	str	r1, [r4, #20]
   18798:	cmp	r3, r1
   1879c:	str	r3, [r4, #24]
   187a0:	strne	r2, [r3, #4]
   187a4:	beq	18864 <sprintf@plt+0x72bc>
   187a8:	ldr	r3, [r8, #8]
   187ac:	add	r1, sp, #16
   187b0:	ldr	r0, [r4, #4]
   187b4:	str	r2, [r8]
   187b8:	ldrb	r2, [r9, #22]
   187bc:	add	r3, r3, #1
   187c0:	ldr	ip, [r5, #60]	; 0x3c
   187c4:	str	r3, [r8, #8]
   187c8:	movw	r3, #35868	; 0x8c1c
   187cc:	movt	r3, #1
   187d0:	cmp	r2, #0
   187d4:	add	r2, sp, #144	; 0x90
   187d8:	stm	sp, {r4, ip}
   187dc:	bne	1885c <sprintf@plt+0x72b4>
   187e0:	bl	1123c <rb_connect_tcp@plt>
   187e4:	add	sp, sp, #272	; 0x110
   187e8:	ldrd	r4, [sp]
   187ec:	ldrd	r6, [sp, #8]
   187f0:	ldrd	r8, [sp, #16]
   187f4:	ldr	sl, [sp, #24]
   187f8:	add	sp, sp, #28
   187fc:	pop	{pc}		; (ldr pc, [sp], #4)
   18800:	bl	1159c <__errno_location@plt>
   18804:	ldr	r0, [r0]
   18808:	bl	111e8 <strerror@plt>
   1880c:	mov	r3, r0
   18810:	movw	r1, #42116	; 0xa484
   18814:	movt	r1, #1
   18818:	mov	r2, r9
   1881c:	mov	r0, #87	; 0x57
   18820:	bl	122bc <sprintf@plt+0xd14>
   18824:	mov	r0, r4
   18828:	add	sp, sp, #272	; 0x110
   1882c:	ldrd	r4, [sp]
   18830:	ldrd	r6, [sp, #8]
   18834:	ldrd	r8, [sp, #16]
   18838:	ldr	sl, [sp, #24]
   1883c:	ldr	lr, [sp, #28]
   18840:	add	sp, sp, #32
   18844:	b	11380 <free@plt>
   18848:	ldr	r3, [r9, #16]
   1884c:	cmp	r3, #1
   18850:	ldrne	r7, [pc, #60]	; 18894 <sprintf@plt+0x72ec>
   18854:	bne	186f4 <sprintf@plt+0x714c>
   18858:	b	18828 <sprintf@plt+0x7280>
   1885c:	bl	11230 <rb_connect_tcp_ssl@plt>
   18860:	b	187e4 <sprintf@plt+0x723c>
   18864:	ldr	r3, [r8, #4]
   18868:	cmp	r3, #0
   1886c:	streq	r2, [r8, #4]
   18870:	b	187a8 <sprintf@plt+0x7200>
   18874:	bl	1147c <rb_outofmemory@plt>
   18878:	movw	r1, #39556	; 0x9a84
   1887c:	movt	r1, #1
   18880:	ldr	r3, [pc, #16]	; 18898 <sprintf@plt+0x72f0>
   18884:	movw	r0, #40584	; 0x9e88
   18888:	movt	r0, #1
   1888c:	mov	r2, #145	; 0x91
   18890:	bl	11350 <__assert_fail@plt>
   18894:	andeq	r0, r3, r0, lsr #1
   18898:	andeq	sl, r1, r8, lsr #6
   1889c:	ldr	r3, [r0, #12]
   188a0:	mov	r1, #128	; 0x80
   188a4:	movw	r2, #42164	; 0xa4b4
   188a8:	movt	r2, #1
   188ac:	strd	r4, [sp, #-12]!
   188b0:	mov	r4, r0
   188b4:	ldrh	ip, [r3, #54]	; 0x36
   188b8:	str	lr, [sp, #8]
   188bc:	sub	sp, sp, #140	; 0x8c
   188c0:	add	r0, sp, #8
   188c4:	str	ip, [sp]
   188c8:	bl	1153c <snprintf@plt>
   188cc:	add	r0, sp, #8
   188d0:	bl	113d4 <strlen@plt>
   188d4:	mov	r2, r0
   188d8:	add	r1, sp, #8
   188dc:	ldr	r0, [r4, #4]
   188e0:	bl	11344 <rb_write@plt>
   188e4:	cmp	r0, #0
   188e8:	ble	18910 <sprintf@plt+0x7368>
   188ec:	ldr	r5, [r4, #8]
   188f0:	mov	r0, r5
   188f4:	bl	113d4 <strlen@plt>
   188f8:	add	r2, r0, #1
   188fc:	mov	r1, r5
   18900:	ldr	r0, [r4, #4]
   18904:	bl	11344 <rb_write@plt>
   18908:	cmp	r0, #0
   1890c:	bgt	18920 <sprintf@plt+0x7378>
   18910:	add	sp, sp, #140	; 0x8c
   18914:	ldrd	r4, [sp]
   18918:	add	sp, sp, #8
   1891c:	pop	{pc}		; (ldr pc, [sp], #4)
   18920:	mov	r2, #2
   18924:	movw	r1, #40432	; 0x9df0
   18928:	movt	r1, #1
   1892c:	ldr	r0, [r4, #4]
   18930:	bl	11344 <rb_write@plt>
   18934:	add	sp, sp, #140	; 0x8c
   18938:	ldrd	r4, [sp]
   1893c:	add	sp, sp, #8
   18940:	pop	{pc}		; (ldr pc, [sp], #4)
   18944:	ldr	ip, [r0]
   18948:	movw	r3, #41752	; 0xa318
   1894c:	movt	r3, #1
   18950:	strd	r4, [sp, #-12]!
   18954:	ldrh	r2, [r3, #32]
   18958:	ldr	r1, [r3, #28]
   1895c:	ldrh	r3, [ip, #248]	; 0xf8
   18960:	str	lr, [sp, #8]
   18964:	sub	sp, sp, #36	; 0x24
   18968:	str	r1, [sp, #4]
   1896c:	strh	r2, [sp, #8]
   18970:	cmp	r3, #2
   18974:	beq	18a0c <sprintf@plt+0x7464>
   18978:	cmp	r3, #10
   1897c:	bne	189d0 <sprintf@plt+0x7428>
   18980:	ldr	r3, [r0, #12]
   18984:	mov	r2, #4
   18988:	strb	r2, [sp, #10]
   1898c:	mvn	r2, #24
   18990:	ldrh	ip, [r3, #58]	; 0x3a
   18994:	ldr	r1, [r3, #64]!	; 0x40
   18998:	str	r1, [sp, #11]
   1899c:	ldr	r1, [r3, #8]
   189a0:	strh	ip, [sp, #27]
   189a4:	ldr	ip, [r3, #4]
   189a8:	ldr	r3, [r3, #12]
   189ac:	str	ip, [sp, #15]
   189b0:	str	r1, [sp, #19]
   189b4:	str	r3, [sp, #23]
   189b8:	mov	r4, r0
   189bc:	add	r1, sp, #4
   189c0:	ldr	r0, [r0, #4]
   189c4:	bl	11344 <rb_write@plt>
   189c8:	cmp	r0, #0
   189cc:	bgt	189e0 <sprintf@plt+0x7438>
   189d0:	add	sp, sp, #36	; 0x24
   189d4:	ldrd	r4, [sp]
   189d8:	add	sp, sp, #8
   189dc:	pop	{pc}		; (ldr pc, [sp], #4)
   189e0:	ldr	r5, [r4, #8]
   189e4:	mov	r0, r5
   189e8:	bl	113d4 <strlen@plt>
   189ec:	add	r2, r0, #1
   189f0:	mov	r1, r5
   189f4:	ldr	r0, [r4, #4]
   189f8:	bl	11344 <rb_write@plt>
   189fc:	add	sp, sp, #36	; 0x24
   18a00:	ldrd	r4, [sp]
   18a04:	add	sp, sp, #8
   18a08:	pop	{pc}		; (ldr pc, [sp], #4)
   18a0c:	ldr	r3, [r0, #12]
   18a10:	mov	r1, #1
   18a14:	mvn	r2, #12
   18a18:	strb	r1, [sp, #10]
   18a1c:	ldr	r1, [r3, #60]	; 0x3c
   18a20:	ldrh	r3, [r3, #58]	; 0x3a
   18a24:	str	r1, [sp, #11]
   18a28:	strh	r3, [sp, #15]
   18a2c:	b	189b8 <sprintf@plt+0x7410>
   18a30:	ldr	r3, [r0, #12]
   18a34:	mov	r1, #260	; 0x104
   18a38:	mov	r2, #9
   18a3c:	strd	r4, [sp, #-12]!
   18a40:	mov	r4, r0
   18a44:	mov	r0, #0
   18a48:	str	lr, [sp, #8]
   18a4c:	sub	sp, sp, #20
   18a50:	strh	r1, [sp, #4]
   18a54:	add	r1, sp, #4
   18a58:	ldrh	ip, [r3, #58]	; 0x3a
   18a5c:	ldr	r3, [r3, #60]	; 0x3c
   18a60:	strb	r0, [sp, #12]
   18a64:	ldr	r0, [r4, #4]
   18a68:	strh	ip, [sp, #6]
   18a6c:	str	r3, [sp, #8]
   18a70:	bl	11344 <rb_write@plt>
   18a74:	cmp	r0, #0
   18a78:	blt	18a98 <sprintf@plt+0x74f0>
   18a7c:	ldr	r5, [r4, #8]
   18a80:	mov	r0, r5
   18a84:	bl	113d4 <strlen@plt>
   18a88:	add	r2, r0, #1
   18a8c:	mov	r1, r5
   18a90:	ldr	r0, [r4, #4]
   18a94:	bl	11344 <rb_write@plt>
   18a98:	add	sp, sp, #20
   18a9c:	ldrd	r4, [sp]
   18aa0:	add	sp, sp, #8
   18aa4:	pop	{pc}		; (ldr pc, [sp], #4)
   18aa8:	strd	r4, [sp, #-16]!
   18aac:	mov	r4, r2
   18ab0:	mov	r1, #0
   18ab4:	mov	r2, #10
   18ab8:	ldr	r5, [r4]
   18abc:	ldr	r0, [r4, #4]
   18ac0:	str	r6, [sp, #8]
   18ac4:	str	lr, [sp, #12]
   18ac8:	bl	1141c <strtol@plt>
   18acc:	sub	r2, r0, #1
   18ad0:	movw	r3, #65534	; 0xfffe
   18ad4:	cmp	r2, r3
   18ad8:	bhi	18af8 <sprintf@plt+0x7550>
   18adc:	uxth	r1, r0
   18ae0:	mov	r0, r5
   18ae4:	ldrd	r4, [sp]
   18ae8:	ldr	r6, [sp, #8]
   18aec:	ldr	lr, [sp, #12]
   18af0:	add	sp, sp, #16
   18af4:	b	1822c <sprintf@plt+0x6c84>
   18af8:	mov	r0, #67	; 0x43
   18afc:	movw	r1, #42192	; 0xa4d0
   18b00:	movt	r1, #1
   18b04:	ldrd	r2, [r4]
   18b08:	bl	122bc <sprintf@plt+0xd14>
   18b0c:	mov	r0, #3
   18b10:	bl	11590 <exit@plt>
   18b14:	strd	r4, [sp, #-20]!	; 0xffffffec
   18b18:	strd	r6, [sp, #8]
   18b1c:	movw	r6, #65508	; 0xffe4
   18b20:	movt	r6, #2
   18b24:	ldr	r4, [r6, #376]	; 0x178
   18b28:	str	lr, [sp, #16]
   18b2c:	sub	sp, sp, #12
   18b30:	cmp	r4, #0
   18b34:	beq	18bc8 <sprintf@plt+0x7620>
   18b38:	ldr	r0, [r4]
   18b3c:	mov	r7, #0
   18b40:	ldr	r5, [r4, #8]
   18b44:	cmp	r0, #0
   18b48:	beq	18ba4 <sprintf@plt+0x75fc>
   18b4c:	bl	11380 <free@plt>
   18b50:	ldr	r2, [r4, #8]
   18b54:	cmp	r2, #0
   18b58:	ldr	r3, [r4, #4]
   18b5c:	ldr	r1, [r6, #384]	; 0x180
   18b60:	strne	r3, [r2, #4]
   18b64:	ldrne	r3, [r4, #4]
   18b68:	streq	r3, [r6, #380]	; 0x17c
   18b6c:	cmp	r3, #0
   18b70:	beq	18bac <sprintf@plt+0x7604>
   18b74:	str	r2, [r3, #8]
   18b78:	sub	r3, r1, #1
   18b7c:	cmp	r5, #0
   18b80:	str	r7, [r4, #4]
   18b84:	str	r7, [r4, #8]
   18b88:	str	r3, [r6, #384]	; 0x180
   18b8c:	beq	18bc8 <sprintf@plt+0x7620>
   18b90:	mov	r4, r5
   18b94:	ldr	r5, [r5, #8]
   18b98:	ldr	r0, [r4]
   18b9c:	cmp	r0, #0
   18ba0:	bne	18b4c <sprintf@plt+0x75a4>
   18ba4:	mov	r2, r5
   18ba8:	b	18b54 <sprintf@plt+0x75ac>
   18bac:	str	r3, [r4, #4]
   18bb0:	cmp	r5, #0
   18bb4:	str	r3, [r4, #8]
   18bb8:	sub	r3, r1, #1
   18bbc:	str	r2, [r6, #376]	; 0x178
   18bc0:	str	r3, [r6, #384]	; 0x180
   18bc4:	bne	18b90 <sprintf@plt+0x75e8>
   18bc8:	movw	r4, #368	; 0x170
   18bcc:	movt	r4, #3
   18bd0:	mov	r1, sp
   18bd4:	ldr	r0, [r4]
   18bd8:	bl	113bc <rb_dictionary_foreach_start@plt>
   18bdc:	b	18bf0 <sprintf@plt+0x7648>
   18be0:	bl	17dbc <sprintf@plt+0x6814>
   18be4:	mov	r1, sp
   18be8:	ldr	r0, [r4]
   18bec:	bl	11374 <rb_dictionary_foreach_next@plt>
   18bf0:	mov	r1, sp
   18bf4:	ldr	r0, [r4]
   18bf8:	bl	112d8 <rb_dictionary_foreach_cur@plt>
   18bfc:	subs	r3, r0, #0
   18c00:	bne	18be0 <sprintf@plt+0x7638>
   18c04:	strb	r3, [r6, #388]	; 0x184
   18c08:	add	sp, sp, #12
   18c0c:	ldrd	r4, [sp]
   18c10:	ldrd	r6, [sp, #8]
   18c14:	add	sp, sp, #16
   18c18:	pop	{pc}		; (ldr pc, [sp], #4)
   18c1c:	strd	r4, [sp, #-16]!
   18c20:	mov	r4, r2
   18c24:	movw	r3, #48796	; 0xbe9c
   18c28:	movt	r3, #2
   18c2c:	ldr	r2, [r2]
   18c30:	cmp	r1, #0
   18c34:	ldr	r1, [r3, #12]
   18c38:	ldr	r3, [r2, #464]	; 0x1d0
   18c3c:	add	r3, r3, r1, lsl #4
   18c40:	ldr	r5, [r3, #8]
   18c44:	str	r6, [sp, #8]
   18c48:	str	lr, [sp, #12]
   18c4c:	bne	18ca0 <sprintf@plt+0x76f8>
   18c50:	movw	r3, #65508	; 0xffe4
   18c54:	movt	r3, #2
   18c58:	ldrb	r1, [r3, #388]	; 0x184
   18c5c:	cmp	r1, #0
   18c60:	beq	18ca0 <sprintf@plt+0x76f8>
   18c64:	ldrh	r2, [r2, #248]	; 0xf8
   18c68:	ldr	r1, [r4, #8]
   18c6c:	cmp	r2, #2
   18c70:	beq	18cf8 <sprintf@plt+0x7750>
   18c74:	cmp	r2, #10
   18c78:	bne	18ca0 <sprintf@plt+0x76f8>
   18c7c:	ldrb	r2, [r1, #23]
   18c80:	cmp	r2, #0
   18c84:	beq	18ca0 <sprintf@plt+0x76f8>
   18c88:	ldr	r3, [r3, #372]	; 0x174
   18c8c:	cmp	r3, #0
   18c90:	beq	18ca0 <sprintf@plt+0x76f8>
   18c94:	mov	r0, r4
   18c98:	ldr	r3, [r1, #24]
   18c9c:	blx	r3
   18ca0:	ldr	r0, [r4, #4]
   18ca4:	bl	11410 <rb_close@plt>
   18ca8:	cmp	r5, #0
   18cac:	beq	18d08 <sprintf@plt+0x7760>
   18cb0:	ldr	r3, [r4, #20]
   18cb4:	mov	r0, r4
   18cb8:	ldr	r2, [r4, #24]
   18cbc:	ldr	r6, [sp, #8]
   18cc0:	ldr	lr, [sp, #12]
   18cc4:	cmp	r2, #0
   18cc8:	strne	r3, [r2, #4]
   18ccc:	ldrne	r3, [r4, #20]
   18cd0:	streq	r3, [r5, #4]
   18cd4:	cmp	r3, #0
   18cd8:	strne	r2, [r3, #8]
   18cdc:	ldr	r3, [r5, #8]
   18ce0:	streq	r2, [r5]
   18ce4:	sub	r3, r3, #1
   18ce8:	str	r3, [r5, #8]
   18cec:	ldrd	r4, [sp]
   18cf0:	add	sp, sp, #16
   18cf4:	b	11380 <free@plt>
   18cf8:	ldr	r3, [r3, #184]	; 0xb8
   18cfc:	cmp	r3, #0
   18d00:	bne	18c94 <sprintf@plt+0x76ec>
   18d04:	b	18ca0 <sprintf@plt+0x76f8>
   18d08:	bl	18664 <sprintf@plt+0x70bc>
   18d0c:	strd	r4, [sp, #-28]!	; 0xffffffe4
   18d10:	movw	r1, #42224	; 0xa4f0
   18d14:	movt	r1, #1
   18d18:	ldr	r4, [r2]
   18d1c:	mov	r5, r2
   18d20:	strd	r6, [sp, #8]
   18d24:	strd	r8, [sp, #16]
   18d28:	str	lr, [sp, #24]
   18d2c:	sub	sp, sp, #12
   18d30:	mov	r0, r4
   18d34:	bl	112e4 <strcasecmp@plt>
   18d38:	cmp	r0, #0
   18d3c:	ldr	r6, [r5, #4]
   18d40:	beq	18dc8 <sprintf@plt+0x7820>
   18d44:	movw	r1, #42232	; 0xa4f8
   18d48:	movt	r1, #1
   18d4c:	mov	r0, r4
   18d50:	bl	112e4 <strcasecmp@plt>
   18d54:	cmp	r0, #0
   18d58:	beq	18fb0 <sprintf@plt+0x7a08>
   18d5c:	movw	r1, #42240	; 0xa500
   18d60:	movt	r1, #1
   18d64:	mov	r0, r4
   18d68:	bl	112e4 <strcasecmp@plt>
   18d6c:	cmp	r0, #0
   18d70:	beq	18fa0 <sprintf@plt+0x79f8>
   18d74:	mov	r0, r4
   18d78:	movw	r1, #42252	; 0xa50c
   18d7c:	movt	r1, #1
   18d80:	bl	112e4 <strcasecmp@plt>
   18d84:	cmp	r0, #0
   18d88:	beq	18fa8 <sprintf@plt+0x7a00>
   18d8c:	mov	r2, #10
   18d90:	mov	r0, r6
   18d94:	mov	r1, #0
   18d98:	bl	1141c <strtol@plt>
   18d9c:	sub	r2, r0, #1
   18da0:	movw	r3, #65534	; 0xfffe
   18da4:	cmp	r2, r3
   18da8:	bls	18fb8 <sprintf@plt+0x7a10>
   18dac:	mov	r0, #67	; 0x43
   18db0:	movw	r1, #42268	; 0xa51c
   18db4:	movt	r1, #1
   18db8:	ldrd	r2, [r5]
   18dbc:	bl	122bc <sprintf@plt+0xd14>
   18dc0:	mov	r0, #3
   18dc4:	bl	11590 <exit@plt>
   18dc8:	mov	r4, #1
   18dcc:	mov	r2, #10
   18dd0:	mov	r0, r6
   18dd4:	mov	r1, #0
   18dd8:	bl	1141c <strtol@plt>
   18ddc:	sub	r2, r0, #1
   18de0:	movw	r3, #65534	; 0xfffe
   18de4:	cmp	r2, r3
   18de8:	bhi	18dac <sprintf@plt+0x7804>
   18dec:	movw	r6, #65508	; 0xffe4
   18df0:	movt	r6, #2
   18df4:	ldr	r2, [r6, #376]	; 0x178
   18df8:	uxth	ip, r0
   18dfc:	cmp	r2, #0
   18e00:	bne	18e14 <sprintf@plt+0x786c>
   18e04:	b	18fd8 <sprintf@plt+0x7a30>
   18e08:	ldr	r2, [r2, #8]
   18e0c:	cmp	r2, #0
   18e10:	beq	18fd8 <sprintf@plt+0x7a30>
   18e14:	ldr	r7, [r2]
   18e18:	ldr	r1, [r7, #16]
   18e1c:	cmp	r1, r4
   18e20:	bne	18e08 <sprintf@plt+0x7860>
   18e24:	ldrh	r1, [r7, #20]
   18e28:	cmp	r1, ip
   18e2c:	bne	18e08 <sprintf@plt+0x7860>
   18e30:	movw	r4, #368	; 0x170
   18e34:	movt	r4, #3
   18e38:	mov	r1, sp
   18e3c:	ldr	r0, [r4]
   18e40:	movw	r5, #48796	; 0xbe9c
   18e44:	movt	r5, #2
   18e48:	bl	113bc <rb_dictionary_foreach_start@plt>
   18e4c:	mov	r1, sp
   18e50:	ldr	r0, [r4]
   18e54:	bl	112d8 <rb_dictionary_foreach_cur@plt>
   18e58:	subs	r8, r0, #0
   18e5c:	beq	18f38 <sprintf@plt+0x7990>
   18e60:	ldr	r2, [r5, #12]
   18e64:	ldr	r3, [r8, #464]	; 0x1d0
   18e68:	add	r3, r3, r2, lsl #4
   18e6c:	ldr	r9, [r3, #8]
   18e70:	cmp	r9, #0
   18e74:	beq	18f1c <sprintf@plt+0x7974>
   18e78:	ldr	lr, [r8, #460]	; 0x1cc
   18e7c:	ldr	r3, [r9]
   18e80:	add	r2, lr, #1
   18e84:	cmp	r3, #0
   18e88:	str	r2, [r8, #460]	; 0x1cc
   18e8c:	beq	18f10 <sprintf@plt+0x7968>
   18e90:	ldrh	ip, [r7, #20]
   18e94:	b	18ea4 <sprintf@plt+0x78fc>
   18e98:	ldr	r3, [r3, #8]
   18e9c:	cmp	r3, #0
   18ea0:	beq	18f10 <sprintf@plt+0x7968>
   18ea4:	ldr	r0, [r3]
   18ea8:	ldr	r2, [r0, #8]
   18eac:	ldrh	r1, [r2, #20]
   18eb0:	cmp	r1, ip
   18eb4:	bne	18e98 <sprintf@plt+0x78f0>
   18eb8:	ldr	r1, [r2, #16]
   18ebc:	ldr	r2, [r7, #16]
   18ec0:	cmp	r1, r2
   18ec4:	bne	18e98 <sprintf@plt+0x78f0>
   18ec8:	ldr	r3, [r0, #20]
   18ecc:	ldr	r2, [r0, #24]
   18ed0:	cmp	r2, #0
   18ed4:	strne	r3, [r2, #4]
   18ed8:	ldrne	r3, [r0, #20]
   18edc:	streq	r3, [r9, #4]
   18ee0:	cmp	r3, #0
   18ee4:	strne	r2, [r3, #8]
   18ee8:	ldr	r3, [r9, #8]
   18eec:	streq	r2, [r9]
   18ef0:	sub	r3, r3, #1
   18ef4:	str	r3, [r9, #8]
   18ef8:	bl	11380 <free@plt>
   18efc:	ldr	r3, [r9, #8]
   18f00:	cmp	r3, #0
   18f04:	beq	18f94 <sprintf@plt+0x79ec>
   18f08:	ldr	lr, [r8, #460]	; 0x1cc
   18f0c:	sub	lr, lr, #1
   18f10:	cmp	lr, #0
   18f14:	str	lr, [r8, #460]	; 0x1cc
   18f18:	beq	18f2c <sprintf@plt+0x7984>
   18f1c:	mov	r1, sp
   18f20:	ldr	r0, [r4]
   18f24:	bl	11374 <rb_dictionary_foreach_next@plt>
   18f28:	b	18e4c <sprintf@plt+0x78a4>
   18f2c:	mov	r0, r8
   18f30:	bl	12b58 <sprintf@plt+0x15b0>
   18f34:	b	18f1c <sprintf@plt+0x7974>
   18f38:	ldr	r3, [r7, #32]
   18f3c:	mov	r0, r7
   18f40:	ldr	r2, [r7, #36]	; 0x24
   18f44:	cmp	r2, #0
   18f48:	strne	r3, [r2, #4]
   18f4c:	ldrne	r3, [r7, #32]
   18f50:	streq	r3, [r6, #380]	; 0x17c
   18f54:	cmp	r3, #0
   18f58:	strne	r2, [r3, #8]
   18f5c:	ldr	r3, [r6, #384]	; 0x180
   18f60:	streq	r2, [r6, #376]	; 0x178
   18f64:	sub	r3, r3, #1
   18f68:	str	r3, [r6, #384]	; 0x180
   18f6c:	bl	11380 <free@plt>
   18f70:	ldr	r3, [r6, #384]	; 0x180
   18f74:	cmp	r3, #0
   18f78:	strbeq	r3, [r6, #388]	; 0x184
   18f7c:	add	sp, sp, #12
   18f80:	ldrd	r4, [sp]
   18f84:	ldrd	r6, [sp, #8]
   18f88:	ldrd	r8, [sp, #16]
   18f8c:	add	sp, sp, #24
   18f90:	pop	{pc}		; (ldr pc, [sp], #4)
   18f94:	mov	r0, r8
   18f98:	bl	17dbc <sprintf@plt+0x6814>
   18f9c:	b	18f08 <sprintf@plt+0x7960>
   18fa0:	mov	r4, #3
   18fa4:	b	18dcc <sprintf@plt+0x7824>
   18fa8:	mov	r4, #4
   18fac:	b	18dcc <sprintf@plt+0x7824>
   18fb0:	mov	r4, #2
   18fb4:	b	18dcc <sprintf@plt+0x7824>
   18fb8:	movw	r1, #42316	; 0xa54c
   18fbc:	movt	r1, #1
   18fc0:	mov	r3, r0
   18fc4:	mov	r0, #67	; 0x43
   18fc8:	ldr	r2, [r5]
   18fcc:	bl	122bc <sprintf@plt+0xd14>
   18fd0:	mov	r0, #3
   18fd4:	bl	11590 <exit@plt>
   18fd8:	movw	r1, #42372	; 0xa584
   18fdc:	movt	r1, #1
   18fe0:	mov	r3, r0
   18fe4:	b	18fc4 <sprintf@plt+0x7a1c>
   18fe8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   18fec:	mov	r5, r2
   18ff0:	mov	r1, #0
   18ff4:	mov	r2, #10
   18ff8:	ldr	r0, [r5, #4]
   18ffc:	strd	r6, [sp, #8]
   19000:	str	r8, [sp, #16]
   19004:	str	lr, [sp, #20]
   19008:	bl	1141c <strtol@plt>
   1900c:	mov	r6, r0
   19010:	mov	r1, #40	; 0x28
   19014:	mov	r0, #1
   19018:	bl	112f0 <calloc@plt>
   1901c:	subs	r4, r0, #0
   19020:	beq	19268 <sprintf@plt+0x7cc0>
   19024:	sub	r2, r6, #1
   19028:	movw	r3, #65534	; 0xfffe
   1902c:	ldr	r7, [r5]
   19030:	cmp	r2, r3
   19034:	bhi	1926c <sprintf@plt+0x7cc4>
   19038:	movw	r1, #42224	; 0xa4f0
   1903c:	movt	r1, #1
   19040:	strh	r6, [r4, #20]
   19044:	mov	r0, r7
   19048:	bl	112e4 <strcasecmp@plt>
   1904c:	subs	r8, r0, #0
   19050:	beq	19170 <sprintf@plt+0x7bc8>
   19054:	movw	r1, #42232	; 0xa4f8
   19058:	movt	r1, #1
   1905c:	mov	r0, r7
   19060:	bl	112e4 <strcasecmp@plt>
   19064:	subs	r8, r0, #0
   19068:	beq	190c4 <sprintf@plt+0x7b1c>
   1906c:	movw	r1, #42240	; 0xa500
   19070:	movt	r1, #1
   19074:	mov	r0, r7
   19078:	bl	112e4 <strcasecmp@plt>
   1907c:	subs	r8, r0, #0
   19080:	beq	19214 <sprintf@plt+0x7c6c>
   19084:	movw	r1, #42252	; 0xa50c
   19088:	movt	r1, #1
   1908c:	mov	r0, r7
   19090:	bl	112e4 <strcasecmp@plt>
   19094:	cmp	r0, #0
   19098:	beq	191dc <sprintf@plt+0x7c34>
   1909c:	mov	r0, #0
   190a0:	mov	r3, r6
   190a4:	mov	r2, r7
   190a8:	movw	r1, #42492	; 0xa5fc
   190ac:	movt	r1, #1
   190b0:	str	r0, [r4, #16]
   190b4:	mov	r0, #67	; 0x43
   190b8:	bl	122bc <sprintf@plt+0xd14>
   190bc:	mov	r0, #3
   190c0:	bl	11590 <exit@plt>
   190c4:	mov	r0, #2
   190c8:	mov	r3, r6
   190cc:	movw	r2, #42556	; 0xa63c
   190d0:	movt	r2, #1
   190d4:	mov	r1, #16
   190d8:	str	r0, [r4, #16]
   190dc:	mov	r0, r4
   190e0:	bl	1153c <snprintf@plt>
   190e4:	movw	r3, #35140	; 0x8944
   190e8:	movt	r3, #1
   190ec:	strb	r8, [r4, #22]
   190f0:	str	r3, [r4, #24]
   190f4:	movw	lr, #65508	; 0xffe4
   190f8:	movt	lr, #2
   190fc:	ldrh	r3, [r4, #20]
   19100:	ldr	r6, [lr, #376]	; 0x178
   19104:	ldr	ip, [r4, #16]
   19108:	cmp	r6, #0
   1910c:	beq	19248 <sprintf@plt+0x7ca0>
   19110:	mov	r2, r6
   19114:	b	19124 <sprintf@plt+0x7b7c>
   19118:	ldr	r2, [r2, #8]
   1911c:	cmp	r2, #0
   19120:	beq	191a4 <sprintf@plt+0x7bfc>
   19124:	ldr	r1, [r2]
   19128:	ldr	r0, [r1, #16]
   1912c:	cmp	ip, r0
   19130:	bne	19118 <sprintf@plt+0x7b70>
   19134:	ldrh	r1, [r1, #20]
   19138:	cmp	r1, r3
   1913c:	bne	19118 <sprintf@plt+0x7b70>
   19140:	mov	r0, #67	; 0x43
   19144:	movw	r1, #42568	; 0xa648
   19148:	movt	r1, #1
   1914c:	ldr	r2, [r5]
   19150:	bl	122bc <sprintf@plt+0xd14>
   19154:	mov	r0, r4
   19158:	ldrd	r4, [sp]
   1915c:	ldrd	r6, [sp, #8]
   19160:	ldr	r8, [sp, #16]
   19164:	ldr	lr, [sp, #20]
   19168:	add	sp, sp, #24
   1916c:	b	11380 <free@plt>
   19170:	mov	r0, #1
   19174:	mov	r3, r6
   19178:	movw	r2, #42460	; 0xa5dc
   1917c:	movt	r2, #1
   19180:	mov	r1, #16
   19184:	str	r0, [r4, #16]
   19188:	mov	r0, r4
   1918c:	bl	1153c <snprintf@plt>
   19190:	movw	r3, #35376	; 0x8a30
   19194:	movt	r3, #1
   19198:	strb	r8, [r4, #22]
   1919c:	str	r3, [r4, #24]
   191a0:	b	190f4 <sprintf@plt+0x7b4c>
   191a4:	add	r1, r4, #28
   191a8:	str	r4, [r4, #28]
   191ac:	str	r2, [r4, #32]
   191b0:	str	r6, [r4, #36]	; 0x24
   191b4:	str	r1, [r6, #4]
   191b8:	ldr	r3, [lr, #384]	; 0x180
   191bc:	ldrd	r4, [sp]
   191c0:	ldrd	r6, [sp, #8]
   191c4:	add	r3, r3, #1
   191c8:	ldr	r8, [sp, #16]
   191cc:	add	sp, sp, #20
   191d0:	str	r1, [lr, #376]	; 0x178
   191d4:	str	r3, [lr, #384]	; 0x180
   191d8:	pop	{pc}		; (ldr pc, [sp], #4)
   191dc:	mov	r0, #4
   191e0:	mov	r3, r6
   191e4:	movw	r2, #42472	; 0xa5e8
   191e8:	movt	r2, #1
   191ec:	mov	r1, #16
   191f0:	str	r0, [r4, #16]
   191f4:	mov	r0, r4
   191f8:	bl	1153c <snprintf@plt>
   191fc:	movw	r3, #34972	; 0x889c
   19200:	movt	r3, #1
   19204:	mov	r2, #1
   19208:	strb	r2, [r4, #22]
   1920c:	str	r3, [r4, #24]
   19210:	b	190f4 <sprintf@plt+0x7b4c>
   19214:	mov	r0, #3
   19218:	mov	r3, r6
   1921c:	movw	r2, #42540	; 0xa62c
   19220:	movt	r2, #1
   19224:	mov	r1, #16
   19228:	str	r0, [r4, #16]
   1922c:	mov	r0, r4
   19230:	bl	1153c <snprintf@plt>
   19234:	movw	r3, #34972	; 0x889c
   19238:	movt	r3, #1
   1923c:	strb	r8, [r4, #22]
   19240:	str	r3, [r4, #24]
   19244:	b	190f4 <sprintf@plt+0x7b4c>
   19248:	ldr	r3, [lr, #380]	; 0x17c
   1924c:	add	r1, r4, #28
   19250:	str	r4, [r4, #28]
   19254:	str	r6, [r4, #32]
   19258:	str	r6, [r4, #36]	; 0x24
   1925c:	cmp	r3, #0
   19260:	streq	r1, [lr, #380]	; 0x17c
   19264:	b	191b8 <sprintf@plt+0x7c10>
   19268:	bl	1147c <rb_outofmemory@plt>
   1926c:	mov	r0, #67	; 0x43
   19270:	mov	r2, r7
   19274:	ldr	r3, [r5, #4]
   19278:	movw	r1, #42420	; 0xa5b4
   1927c:	movt	r1, #1
   19280:	bl	122bc <sprintf@plt+0xd14>
   19284:	mov	r0, #3
   19288:	bl	11590 <exit@plt>
   1928c:	strd	r4, [sp, #-36]!	; 0xffffffdc
   19290:	movw	r5, #65508	; 0xffe4
   19294:	movt	r5, #2
   19298:	ldrb	r3, [r5, #388]	; 0x184
   1929c:	strd	r6, [sp, #8]
   192a0:	mov	r6, r0
   192a4:	strd	r8, [sp, #16]
   192a8:	movw	r8, #48796	; 0xbe9c
   192ac:	movt	r8, #2
   192b0:	strd	sl, [sp, #24]
   192b4:	str	lr, [sp, #32]
   192b8:	sub	sp, sp, #4
   192bc:	cmp	r3, #0
   192c0:	ldr	r9, [r8, #12]
   192c4:	beq	192d4 <sprintf@plt+0x7d2c>
   192c8:	ldr	r3, [r5, #384]	; 0x180
   192cc:	cmp	r3, #0
   192d0:	bne	19300 <sprintf@plt+0x7d58>
   192d4:	mov	r1, r9
   192d8:	mov	r0, r6
   192dc:	bl	12c2c <sprintf@plt+0x1684>
   192e0:	mov	r0, #1
   192e4:	add	sp, sp, #4
   192e8:	ldrd	r4, [sp]
   192ec:	ldrd	r6, [sp, #8]
   192f0:	ldrd	r8, [sp, #16]
   192f4:	ldrd	sl, [sp, #24]
   192f8:	add	sp, sp, #32
   192fc:	pop	{pc}		; (ldr pc, [sp], #4)
   19300:	ldr	r3, [r6, #460]	; 0x1cc
   19304:	mov	r0, #1
   19308:	mov	r1, #16
   1930c:	add	r3, r3, r0
   19310:	str	r3, [r6, #460]	; 0x1cc
   19314:	bl	112f0 <calloc@plt>
   19318:	cmp	r0, #0
   1931c:	beq	1943c <sprintf@plt+0x7e94>
   19320:	movw	r2, #372	; 0x174
   19324:	movt	r2, #3
   19328:	ldr	r3, [r6, #464]	; 0x1d0
   1932c:	lsl	r9, r9, #4
   19330:	ldr	r4, [r2]
   19334:	add	r3, r3, r9
   19338:	cmp	r4, #0
   1933c:	str	r0, [r3, #8]
   19340:	beq	19440 <sprintf@plt+0x7e98>
   19344:	movw	fp, #41108	; 0xa094
   19348:	movt	fp, #1
   1934c:	mov	r7, r4
   19350:	b	19360 <sprintf@plt+0x7db8>
   19354:	ldr	r7, [r7, #8]
   19358:	cmp	r7, #0
   1935c:	beq	19434 <sprintf@plt+0x7e8c>
   19360:	ldr	sl, [r7]
   19364:	mov	r1, fp
   19368:	ldr	r0, [sl, #16]
   1936c:	bl	112e4 <strcasecmp@plt>
   19370:	cmp	r0, #0
   19374:	bne	19354 <sprintf@plt+0x7dac>
   19378:	ldr	r3, [sl, #12]
   1937c:	ldr	fp, [r6, #464]	; 0x1d0
   19380:	add	r3, fp, r3, lsl #4
   19384:	ldr	r3, [r3, #12]
   19388:	cmp	r3, #2
   1938c:	bne	192e0 <sprintf@plt+0x7d38>
   19390:	movw	sl, #41116	; 0xa09c
   19394:	movt	sl, #1
   19398:	b	193a8 <sprintf@plt+0x7e00>
   1939c:	ldr	r4, [r4, #8]
   193a0:	cmp	r4, #0
   193a4:	beq	193d4 <sprintf@plt+0x7e2c>
   193a8:	ldr	r7, [r4]
   193ac:	mov	r1, sl
   193b0:	ldr	r0, [r7, #16]
   193b4:	bl	112e4 <strcasecmp@plt>
   193b8:	cmp	r0, #0
   193bc:	bne	1939c <sprintf@plt+0x7df4>
   193c0:	ldr	r3, [r7, #12]
   193c4:	add	r3, fp, r3, lsl #4
   193c8:	ldr	r3, [r3, #12]
   193cc:	cmp	r3, #2
   193d0:	bne	192e0 <sprintf@plt+0x7d38>
   193d4:	add	fp, fp, r9
   193d8:	ldr	r7, [r8, #60]	; 0x3c
   193dc:	ldr	sl, [fp, #8]
   193e0:	bl	113e0 <rb_current_time@plt>
   193e4:	ldr	r3, [r6, #464]	; 0x1d0
   193e8:	mov	r2, #1
   193ec:	add	r0, r7, r0
   193f0:	ldr	r4, [r5, #376]	; 0x178
   193f4:	add	r9, r3, r9
   193f8:	cmp	r4, #0
   193fc:	str	r0, [r9, #4]
   19400:	strb	r2, [sl, #12]
   19404:	beq	19420 <sprintf@plt+0x7e78>
   19408:	mov	r0, r6
   1940c:	ldr	r1, [r4]
   19410:	bl	1868c <sprintf@plt+0x70e4>
   19414:	ldr	r4, [r4, #8]
   19418:	cmp	r4, #0
   1941c:	bne	19408 <sprintf@plt+0x7e60>
   19420:	movw	r1, #42612	; 0xa674
   19424:	movt	r1, #1
   19428:	ldr	r0, [r6]
   1942c:	bl	12254 <sprintf@plt+0xcac>
   19430:	b	192e0 <sprintf@plt+0x7d38>
   19434:	ldr	fp, [r6, #464]	; 0x1d0
   19438:	b	19390 <sprintf@plt+0x7de8>
   1943c:	bl	1147c <rb_outofmemory@plt>
   19440:	ldr	fp, [r6, #464]	; 0x1d0
   19444:	b	193d4 <sprintf@plt+0x7e2c>
   19448:	strd	r4, [sp, #-36]!	; 0xffffffdc
   1944c:	strd	r6, [sp, #8]
   19450:	movw	r7, #48796	; 0xbe9c
   19454:	movt	r7, #2
   19458:	ldr	r6, [r7, #12]
   1945c:	strd	r8, [sp, #16]
   19460:	strd	sl, [sp, #24]
   19464:	ldr	sl, [r0, #464]	; 0x1d0
   19468:	str	lr, [sp, #32]
   1946c:	sub	sp, sp, #12
   19470:	lsl	r6, r6, #4
   19474:	add	r3, sl, r6
   19478:	ldr	r9, [r3, #8]
   1947c:	cmp	r9, #0
   19480:	beq	19490 <sprintf@plt+0x7ee8>
   19484:	ldrb	r3, [r9, #12]
   19488:	cmp	r3, #0
   1948c:	beq	194ac <sprintf@plt+0x7f04>
   19490:	add	sp, sp, #12
   19494:	ldrd	r4, [sp]
   19498:	ldrd	r6, [sp, #8]
   1949c:	ldrd	r8, [sp, #16]
   194a0:	ldrd	sl, [sp, #24]
   194a4:	add	sp, sp, #32
   194a8:	pop	{pc}		; (ldr pc, [sp], #4)
   194ac:	movw	r3, #372	; 0x174
   194b0:	movt	r3, #3
   194b4:	str	r0, [sp, #4]
   194b8:	ldr	r4, [r3]
   194bc:	cmp	r4, #0
   194c0:	beq	19550 <sprintf@plt+0x7fa8>
   194c4:	movw	r8, #41108	; 0xa094
   194c8:	movt	r8, #1
   194cc:	mov	r5, r4
   194d0:	b	194e0 <sprintf@plt+0x7f38>
   194d4:	ldr	r5, [r5, #8]
   194d8:	cmp	r5, #0
   194dc:	beq	1950c <sprintf@plt+0x7f64>
   194e0:	ldr	fp, [r5]
   194e4:	mov	r1, r8
   194e8:	ldr	r0, [fp, #16]
   194ec:	bl	112e4 <strcasecmp@plt>
   194f0:	cmp	r0, #0
   194f4:	bne	194d4 <sprintf@plt+0x7f2c>
   194f8:	ldr	r3, [fp, #12]
   194fc:	add	r3, sl, r3, lsl #4
   19500:	ldr	r3, [r3, #12]
   19504:	cmp	r3, #2
   19508:	bne	19490 <sprintf@plt+0x7ee8>
   1950c:	movw	fp, #41116	; 0xa09c
   19510:	movt	fp, #1
   19514:	b	19524 <sprintf@plt+0x7f7c>
   19518:	ldr	r4, [r4, #8]
   1951c:	cmp	r4, #0
   19520:	beq	19550 <sprintf@plt+0x7fa8>
   19524:	ldr	r5, [r4]
   19528:	mov	r1, fp
   1952c:	ldr	r0, [r5, #16]
   19530:	bl	112e4 <strcasecmp@plt>
   19534:	cmp	r0, #0
   19538:	bne	19518 <sprintf@plt+0x7f70>
   1953c:	ldr	r3, [r5, #12]
   19540:	add	sl, sl, r3, lsl #4
   19544:	ldr	r3, [sl, #12]
   19548:	cmp	r3, #2
   1954c:	bne	19490 <sprintf@plt+0x7ee8>
   19550:	ldr	r5, [r7, #60]	; 0x3c
   19554:	bl	113e0 <rb_current_time@plt>
   19558:	ldr	r3, [sp, #4]
   1955c:	movw	r2, #65508	; 0xffe4
   19560:	movt	r2, #2
   19564:	ldr	r4, [r2, #376]	; 0x178
   19568:	mov	r2, #1
   1956c:	add	r0, r5, r0
   19570:	ldr	r3, [r3, #464]	; 0x1d0
   19574:	cmp	r4, #0
   19578:	add	r6, r3, r6
   1957c:	str	r0, [r6, #4]
   19580:	strb	r2, [r9, #12]
   19584:	beq	195a0 <sprintf@plt+0x7ff8>
   19588:	ldr	r1, [r4]
   1958c:	ldr	r0, [sp, #4]
   19590:	bl	1868c <sprintf@plt+0x70e4>
   19594:	ldr	r4, [r4, #8]
   19598:	cmp	r4, #0
   1959c:	bne	19588 <sprintf@plt+0x7fe0>
   195a0:	ldr	r3, [sp, #4]
   195a4:	movw	r1, #42612	; 0xa674
   195a8:	movt	r1, #1
   195ac:	ldr	r0, [r3]
   195b0:	add	sp, sp, #12
   195b4:	ldrd	r4, [sp]
   195b8:	ldrd	r6, [sp, #8]
   195bc:	ldrd	r8, [sp, #16]
   195c0:	ldrd	sl, [sp, #24]
   195c4:	ldr	lr, [sp, #32]
   195c8:	add	sp, sp, #36	; 0x24
   195cc:	b	12254 <sprintf@plt+0xcac>
   195d0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   195d4:	mov	r7, r0
   195d8:	ldr	r6, [pc, #72]	; 19628 <sprintf@plt+0x8080>
   195dc:	ldr	r5, [pc, #72]	; 1962c <sprintf@plt+0x8084>
   195e0:	add	r6, pc, r6
   195e4:	add	r5, pc, r5
   195e8:	sub	r6, r6, r5
   195ec:	mov	r8, r1
   195f0:	mov	r9, r2
   195f4:	bl	111bc <sigemptyset@plt-0x20>
   195f8:	asrs	r6, r6, #2
   195fc:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   19600:	mov	r4, #0
   19604:	add	r4, r4, #1
   19608:	ldr	r3, [r5], #4
   1960c:	mov	r2, r9
   19610:	mov	r1, r8
   19614:	mov	r0, r7
   19618:	blx	r3
   1961c:	cmp	r6, r4
   19620:	bne	19604 <sprintf@plt+0x805c>
   19624:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   19628:	andeq	r1, r1, r4, lsl #18
   1962c:	strdeq	r1, [r1], -ip
   19630:	bx	lr

Disassembly of section .fini:

00019634 <.fini>:
   19634:	push	{r3, lr}
   19638:	pop	{r3, pc}
