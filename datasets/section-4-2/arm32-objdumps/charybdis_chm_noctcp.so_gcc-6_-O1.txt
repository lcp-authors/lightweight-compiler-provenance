
../repos/charybdis/modules/.libs/chm_noctcp.so:     file format elf32-littlearm


Disassembly of section .init:

00000480 <_init>:
 480:	push	{r3, lr}
 484:	bl	4f4 <call_weak_fn>
 488:	pop	{r3, pc}

Disassembly of section .plt:

0000048c <.plt>:
 48c:	push	{lr}		; (str lr, [sp, #-4]!)
 490:	ldr	lr, [pc, #4]	; 49c <.plt+0x10>
 494:	add	lr, pc, lr
 498:	ldr	pc, [lr, #8]!
 49c:	.word	0x00010b64

000004a0 <rb_current_time@plt>:
 4a0:	add	ip, pc, #0, 12
 4a4:	add	ip, ip, #16, 20	; 0x10000
 4a8:	ldr	pc, [ip, #2916]!	; 0xb64

000004ac <cflag_add@plt>:
 4ac:	add	ip, pc, #0, 12
 4b0:	add	ip, ip, #16, 20	; 0x10000
 4b4:	ldr	pc, [ip, #2908]!	; 0xb5c

000004b8 <__cxa_finalize@plt>:
 4b8:	add	ip, pc, #0, 12
 4bc:	add	ip, ip, #16, 20	; 0x10000
 4c0:	ldr	pc, [ip, #2900]!	; 0xb54

000004c4 <rb_strncasecmp@plt>:
 4c4:	add	ip, pc, #0, 12
 4c8:	add	ip, ip, #16, 20	; 0x10000
 4cc:	ldr	pc, [ip, #2892]!	; 0xb4c

000004d0 <__gmon_start__@plt>:
 4d0:	add	ip, pc, #0, 12
 4d4:	add	ip, ip, #16, 20	; 0x10000
 4d8:	ldr	pc, [ip, #2884]!	; 0xb44

000004dc <sendto_one_numeric@plt>:
 4dc:	add	ip, pc, #0, 12
 4e0:	add	ip, ip, #16, 20	; 0x10000
 4e4:	ldr	pc, [ip, #2876]!	; 0xb3c

000004e8 <cflag_orphan@plt>:
 4e8:	add	ip, pc, #0, 12
 4ec:	add	ip, ip, #16, 20	; 0x10000
 4f0:	ldr	pc, [ip, #2868]!	; 0xb34

Disassembly of section .text:

000004f4 <call_weak_fn>:
 4f4:	ldr	r3, [pc, #20]	; 510 <call_weak_fn+0x1c>
 4f8:	ldr	r2, [pc, #20]	; 514 <call_weak_fn+0x20>
 4fc:	add	r3, pc, r3
 500:	ldr	r2, [r3, r2]
 504:	cmp	r2, #0
 508:	bxeq	lr
 50c:	b	4d0 <__gmon_start__@plt>
 510:	.word	0x00010afc
 514:	.word	0x00000038

00000518 <deregister_tm_clones>:
 518:	ldr	r3, [pc, #52]	; 554 <deregister_tm_clones+0x3c>
 51c:	ldr	r0, [pc, #52]	; 558 <deregister_tm_clones+0x40>
 520:	add	r3, pc, r3
 524:	add	r0, pc, r0
 528:	add	r3, r3, #3
 52c:	sub	r3, r3, r0
 530:	cmp	r3, #6
 534:	ldr	r3, [pc, #32]	; 55c <deregister_tm_clones+0x44>
 538:	add	r3, pc, r3
 53c:	bxls	lr
 540:	ldr	r2, [pc, #24]	; 560 <deregister_tm_clones+0x48>
 544:	ldr	r3, [r3, r2]
 548:	cmp	r3, #0
 54c:	bxeq	lr
 550:	bx	r3
 554:	.word	0x00010b60
 558:	.word	0x00010b5c
 55c:	.word	0x00010ac0
 560:	.word	0x00000030

00000564 <register_tm_clones>:
 564:	ldr	r1, [pc, #56]	; 5a4 <register_tm_clones+0x40>
 568:	ldr	r0, [pc, #56]	; 5a8 <register_tm_clones+0x44>
 56c:	add	r1, pc, r1
 570:	add	r0, pc, r0
 574:	sub	r1, r1, r0
 578:	ldr	r3, [pc, #44]	; 5ac <register_tm_clones+0x48>
 57c:	asr	r1, r1, #2
 580:	add	r3, pc, r3
 584:	add	r1, r1, r1, lsr #31
 588:	asrs	r1, r1, #1
 58c:	bxeq	lr
 590:	ldr	r2, [pc, #24]	; 5b0 <register_tm_clones+0x4c>
 594:	ldr	r3, [r3, r2]
 598:	cmp	r3, #0
 59c:	bxeq	lr
 5a0:	bx	r3
 5a4:	.word	0x00010b14
 5a8:	.word	0x00010b10
 5ac:	.word	0x00010a78
 5b0:	.word	0x00000040

000005b4 <__do_global_dtors_aux>:
 5b4:	ldr	r3, [pc, #76]	; 608 <__do_global_dtors_aux+0x54>
 5b8:	ldr	r2, [pc, #76]	; 60c <__do_global_dtors_aux+0x58>
 5bc:	add	r3, pc, r3
 5c0:	add	r2, pc, r2
 5c4:	ldrb	r3, [r3]
 5c8:	cmp	r3, #0
 5cc:	bxne	lr
 5d0:	ldr	r3, [pc, #56]	; 610 <__do_global_dtors_aux+0x5c>
 5d4:	push	{r4, lr}
 5d8:	ldr	r3, [r2, r3]
 5dc:	cmp	r3, #0
 5e0:	beq	5f0 <__do_global_dtors_aux+0x3c>
 5e4:	ldr	r3, [pc, #40]	; 614 <__do_global_dtors_aux+0x60>
 5e8:	ldr	r0, [pc, r3]
 5ec:	bl	4b8 <__cxa_finalize@plt>
 5f0:	bl	518 <deregister_tm_clones>
 5f4:	ldr	r3, [pc, #28]	; 618 <__do_global_dtors_aux+0x64>
 5f8:	mov	r2, #1
 5fc:	add	r3, pc, r3
 600:	strb	r2, [r3]
 604:	pop	{r4, pc}
 608:	.word	0x00010ac4
 60c:	.word	0x00010a38
 610:	.word	0x0000002c
 614:	.word	0x00010a54
 618:	.word	0x00010a84

0000061c <frame_dummy>:
 61c:	ldr	r0, [pc, #56]	; 65c <frame_dummy+0x40>
 620:	ldr	r3, [pc, #56]	; 660 <frame_dummy+0x44>
 624:	add	r0, pc, r0
 628:	ldr	r2, [r0]
 62c:	add	r3, pc, r3
 630:	cmp	r2, #0
 634:	bne	63c <frame_dummy+0x20>
 638:	b	564 <register_tm_clones>
 63c:	ldr	r2, [pc, #32]	; 664 <frame_dummy+0x48>
 640:	ldr	r3, [r3, r2]
 644:	cmp	r3, #0
 648:	beq	638 <frame_dummy+0x1c>
 64c:	push	{r4, lr}
 650:	blx	r3
 654:	pop	{r4, lr}
 658:	b	564 <register_tm_clones>
 65c:	.word	0x000108d0
 660:	.word	0x000109cc
 664:	.word	0x0000003c

00000668 <chm_noctcp_process>:
 668:	push	{r4, r5, r6, lr}
 66c:	ldr	r5, [pc, #184]	; 72c <chm_noctcp_process+0xc4>
 670:	add	r5, pc, r5
 674:	ldr	r3, [r0, #16]
 678:	cmp	r3, #0
 67c:	popne	{r4, r5, r6, pc}
 680:	ldr	r3, [r0]
 684:	cmp	r3, #0
 688:	popeq	{r4, r5, r6, pc}
 68c:	mov	r4, r0
 690:	ldr	r0, [r0, #12]
 694:	ldrb	r3, [r0]
 698:	cmp	r3, #1
 69c:	beq	6d0 <chm_noctcp_process+0x68>
 6a0:	ldr	r2, [r4, #8]
 6a4:	ldr	r3, [pc, #132]	; 730 <chm_noctcp_process+0xc8>
 6a8:	ldr	r3, [r5, r3]
 6ac:	ldr	r3, [r3, #8]
 6b0:	add	r3, r3, r3, lsr #31
 6b4:	ldr	r2, [r2, #144]	; 0x90
 6b8:	cmp	r2, r3, asr #1
 6bc:	popls	{r4, r5, r6, pc}
 6c0:	ldr	r4, [r4, #4]
 6c4:	bl	4a0 <rb_current_time@plt>
 6c8:	str	r0, [r4, #440]	; 0x1b8
 6cc:	pop	{r4, r5, r6, pc}
 6d0:	mov	r2, #7
 6d4:	ldr	r1, [pc, #88]	; 734 <chm_noctcp_process+0xcc>
 6d8:	add	r1, pc, r1
 6dc:	add	r0, r0, #1
 6e0:	bl	4c4 <rb_strncasecmp@plt>
 6e4:	cmp	r0, #0
 6e8:	beq	6a0 <chm_noctcp_process+0x38>
 6ec:	ldr	r3, [r4, #8]
 6f0:	ldr	r1, [r3, #12]
 6f4:	ldr	r2, [pc, #60]	; 738 <chm_noctcp_process+0xd0>
 6f8:	add	r2, pc, r2
 6fc:	ldr	r2, [r2]
 700:	tst	r1, r2
 704:	beq	6a0 <chm_noctcp_process+0x38>
 708:	ldr	r3, [r3, #236]	; 0xec
 70c:	ldr	r2, [pc, #40]	; 73c <chm_noctcp_process+0xd4>
 710:	add	r2, pc, r2
 714:	mov	r1, #404	; 0x194
 718:	ldr	r0, [r4, #4]
 71c:	bl	4dc <sendto_one_numeric@plt>
 720:	mov	r3, #404	; 0x194
 724:	str	r3, [r4, #16]
 728:	pop	{r4, r5, r6, pc}
 72c:	.word	0x00010988
 730:	.word	0x00000028
 734:	.word	0x0000011c
 738:	.word	0x0001098c
 73c:	.word	0x000000ec

00000740 <_moddeinit>:
 740:	push	{r4, lr}
 744:	mov	r0, #67	; 0x43
 748:	bl	4e8 <cflag_orphan@plt>
 74c:	pop	{r4, pc}

00000750 <_modinit>:
 750:	push	{lr}		; (str lr, [sp, #-4]!)
 754:	sub	sp, sp, #12
 758:	ldr	r3, [pc, #56]	; 798 <_modinit+0x48>
 75c:	add	r3, pc, r3
 760:	ldr	r2, [pc, #52]	; 79c <_modinit+0x4c>
 764:	ldr	r3, [r3, r2]
 768:	str	r3, [sp, #4]
 76c:	mov	r1, r3
 770:	mov	r0, #67	; 0x43
 774:	bl	4ac <cflag_add@plt>
 778:	ldr	r3, [pc, #32]	; 7a0 <_modinit+0x50>
 77c:	add	r3, pc, r3
 780:	str	r0, [r3]
 784:	cmp	r0, #0
 788:	movne	r0, #0
 78c:	mvneq	r0, #0
 790:	add	sp, sp, #12
 794:	pop	{pc}		; (ldr pc, [sp], #4)
 798:	.word	0x0001089c
 79c:	.word	0x00000034
 7a0:	.word	0x00010908

Disassembly of section .fini:

000007a4 <_fini>:
 7a4:	push	{r3, lr}
 7a8:	pop	{r3, pc}
