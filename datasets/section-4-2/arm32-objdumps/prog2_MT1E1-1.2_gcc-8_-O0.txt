
../repos/prog2/MT1E1-1.2:     file format elf32-littlearm


Disassembly of section .init:

00010724 <.init>:
   10724:	push	{r3, lr}
   10728:	bl	10834 <_start@@Base+0x3c>
   1072c:	pop	{r3, pc}

Disassembly of section .plt:

00010730 <strcmp@plt-0x14>:
   10730:	push	{lr}		; (str lr, [sp, #-4]!)
   10734:	ldr	lr, [pc, #4]	; 10740 <strcmp@plt-0x4>
   10738:	add	lr, pc, lr
   1073c:	ldr	pc, [lr, #8]!
   10740:	andeq	r0, r1, r0, asr #17

00010744 <strcmp@plt>:
   10744:	add	ip, pc, #0, 12
   10748:	add	ip, ip, #16, 20	; 0x10000
   1074c:	ldr	pc, [ip, #2240]!	; 0x8c0

00010750 <printf@plt>:
   10750:	add	ip, pc, #0, 12
   10754:	add	ip, ip, #16, 20	; 0x10000
   10758:	ldr	pc, [ip, #2232]!	; 0x8b8

0001075c <__isoc99_fscanf@plt>:
   1075c:	add	ip, pc, #0, 12
   10760:	add	ip, ip, #16, 20	; 0x10000
   10764:	ldr	pc, [ip, #2224]!	; 0x8b0

00010768 <fopen@plt>:
   10768:	add	ip, pc, #0, 12
   1076c:	add	ip, ip, #16, 20	; 0x10000
   10770:	ldr	pc, [ip, #2216]!	; 0x8a8

00010774 <free@plt>:
   10774:	add	ip, pc, #0, 12
   10778:	add	ip, ip, #16, 20	; 0x10000
   1077c:	ldr	pc, [ip, #2208]!	; 0x8a0

00010780 <realloc@plt>:
   10780:	add	ip, pc, #0, 12
   10784:	add	ip, ip, #16, 20	; 0x10000
   10788:	ldr	pc, [ip, #2200]!	; 0x898

0001078c <fwrite@plt>:
   1078c:	add	ip, pc, #0, 12
   10790:	add	ip, ip, #16, 20	; 0x10000
   10794:	ldr	pc, [ip, #2192]!	; 0x890

00010798 <strcpy@plt>:
   10798:	add	ip, pc, #0, 12
   1079c:	add	ip, ip, #16, 20	; 0x10000
   107a0:	ldr	pc, [ip, #2184]!	; 0x888

000107a4 <malloc@plt>:
   107a4:	add	ip, pc, #0, 12
   107a8:	add	ip, ip, #16, 20	; 0x10000
   107ac:	ldr	pc, [ip, #2176]!	; 0x880

000107b0 <__libc_start_main@plt>:
   107b0:	add	ip, pc, #0, 12
   107b4:	add	ip, ip, #16, 20	; 0x10000
   107b8:	ldr	pc, [ip, #2168]!	; 0x878

000107bc <__gmon_start__@plt>:
   107bc:	add	ip, pc, #0, 12
   107c0:	add	ip, ip, #16, 20	; 0x10000
   107c4:	ldr	pc, [ip, #2160]!	; 0x870

000107c8 <fprintf@plt>:
   107c8:	add	ip, pc, #0, 12
   107cc:	add	ip, ip, #16, 20	; 0x10000
   107d0:	ldr	pc, [ip, #2152]!	; 0x868

000107d4 <fclose@plt>:
   107d4:	add	ip, pc, #0, 12
   107d8:	add	ip, ip, #16, 20	; 0x10000
   107dc:	ldr	pc, [ip, #2144]!	; 0x860

000107e0 <__isoc99_scanf@plt>:
   107e0:	add	ip, pc, #0, 12
   107e4:	add	ip, ip, #16, 20	; 0x10000
   107e8:	ldr	pc, [ip, #2136]!	; 0x858

000107ec <abort@plt>:
   107ec:	add	ip, pc, #0, 12
   107f0:	add	ip, ip, #16, 20	; 0x10000
   107f4:	ldr	pc, [ip, #2128]!	; 0x850

Disassembly of section .text:

000107f8 <_start@@Base>:
   107f8:	mov	fp, #0
   107fc:	mov	lr, #0
   10800:	pop	{r1}		; (ldr r1, [sp], #4)
   10804:	mov	r2, sp
   10808:	push	{r2}		; (str r2, [sp, #-4]!)
   1080c:	push	{r0}		; (str r0, [sp, #-4]!)
   10810:	ldr	ip, [pc, #16]	; 10828 <_start@@Base+0x30>
   10814:	push	{ip}		; (str ip, [sp, #-4]!)
   10818:	ldr	r0, [pc, #12]	; 1082c <_start@@Base+0x34>
   1081c:	ldr	r3, [pc, #12]	; 10830 <_start@@Base+0x38>
   10820:	bl	107b0 <__libc_start_main@plt>
   10824:	bl	107ec <abort@plt>
   10828:	ldrdeq	r0, [r1], -r0	; <UNPREDICTABLE>
   1082c:	andeq	r0, r1, r0, asr #22
   10830:	andeq	r0, r1, r0, ror ip
   10834:	ldr	r3, [pc, #20]	; 10850 <_start@@Base+0x58>
   10838:	ldr	r2, [pc, #20]	; 10854 <_start@@Base+0x5c>
   1083c:	add	r3, pc, r3
   10840:	ldr	r2, [r3, r2]
   10844:	cmp	r2, #0
   10848:	bxeq	lr
   1084c:	b	107bc <__gmon_start__@plt>
   10850:			; <UNDEFINED> instruction: 0x000107bc
   10854:	andeq	r0, r0, r8, asr #32
   10858:	ldr	r0, [pc, #24]	; 10878 <_start@@Base+0x80>
   1085c:	ldr	r3, [pc, #24]	; 1087c <_start@@Base+0x84>
   10860:	cmp	r3, r0
   10864:	bxeq	lr
   10868:	ldr	r3, [pc, #16]	; 10880 <_start@@Base+0x88>
   1086c:	cmp	r3, #0
   10870:	bxeq	lr
   10874:	bx	r3
   10878:	andeq	r1, r2, r4, asr r0
   1087c:	andeq	r1, r2, r4, asr r0
   10880:	andeq	r0, r0, r0
   10884:	ldr	r0, [pc, #36]	; 108b0 <_start@@Base+0xb8>
   10888:	ldr	r1, [pc, #36]	; 108b4 <_start@@Base+0xbc>
   1088c:	sub	r1, r1, r0
   10890:	asr	r1, r1, #2
   10894:	add	r1, r1, r1, lsr #31
   10898:	asrs	r1, r1, #1
   1089c:	bxeq	lr
   108a0:	ldr	r3, [pc, #16]	; 108b8 <_start@@Base+0xc0>
   108a4:	cmp	r3, #0
   108a8:	bxeq	lr
   108ac:	bx	r3
   108b0:	andeq	r1, r2, r4, asr r0
   108b4:	andeq	r1, r2, r4, asr r0
   108b8:	andeq	r0, r0, r0
   108bc:	push	{r4, lr}
   108c0:	ldr	r4, [pc, #24]	; 108e0 <_start@@Base+0xe8>
   108c4:	ldrb	r3, [r4]
   108c8:	cmp	r3, #0
   108cc:	popne	{r4, pc}
   108d0:	bl	10858 <_start@@Base+0x60>
   108d4:	mov	r3, #1
   108d8:	strb	r3, [r4]
   108dc:	pop	{r4, pc}
   108e0:	andeq	r1, r2, r4, asr r0
   108e4:	b	10884 <_start@@Base+0x8c>

000108e8 <analisarFicheiro@@Base>:
   108e8:	str	fp, [sp, #-8]!
   108ec:	str	lr, [sp, #4]
   108f0:	add	fp, sp, #4
   108f4:	sub	sp, sp, #72	; 0x48
   108f8:	str	r0, [fp, #-72]	; 0xffffffb8
   108fc:	str	r1, [fp, #-76]	; 0xffffffb4
   10900:	mov	r0, #104	; 0x68
   10904:	bl	107a4 <malloc@plt>
   10908:	mov	r3, r0
   1090c:	str	r3, [fp, #-8]
   10910:	mov	r3, #0
   10914:	str	r3, [fp, #-16]
   10918:	b	10a24 <analisarFicheiro@@Base+0x13c>
   1091c:	mov	r3, #0
   10920:	str	r3, [fp, #-12]
   10924:	b	10a14 <analisarFicheiro@@Base+0x12c>
   10928:	ldr	r3, [fp, #-12]
   1092c:	mov	r2, #104	; 0x68
   10930:	mul	r3, r2, r3
   10934:	ldr	r2, [fp, #-8]
   10938:	add	r3, r2, r3
   1093c:	mov	r2, r3
   10940:	sub	r3, fp, #68	; 0x44
   10944:	mov	r1, r2
   10948:	mov	r0, r3
   1094c:	bl	10744 <strcmp@plt>
   10950:	mov	r3, r0
   10954:	cmp	r3, #0
   10958:	bne	10980 <analisarFicheiro@@Base+0x98>
   1095c:	ldr	r3, [fp, #-12]
   10960:	mov	r2, #104	; 0x68
   10964:	mul	r3, r2, r3
   10968:	ldr	r2, [fp, #-8]
   1096c:	add	r3, r2, r3
   10970:	ldr	r2, [r3, #100]	; 0x64
   10974:	add	r2, r2, #1
   10978:	str	r2, [r3, #100]	; 0x64
   1097c:	b	10a24 <analisarFicheiro@@Base+0x13c>
   10980:	ldr	r2, [fp, #-12]
   10984:	ldr	r3, [fp, #-16]
   10988:	cmp	r2, r3
   1098c:	bne	10a08 <analisarFicheiro@@Base+0x120>
   10990:	ldr	r3, [fp, #-16]
   10994:	add	r3, r3, #1
   10998:	mov	r2, r3
   1099c:	mov	r3, #104	; 0x68
   109a0:	mul	r3, r3, r2
   109a4:	mov	r1, r3
   109a8:	ldr	r0, [fp, #-8]
   109ac:	bl	10780 <realloc@plt>
   109b0:	str	r0, [fp, #-8]
   109b4:	ldr	r3, [fp, #-16]
   109b8:	mov	r2, #104	; 0x68
   109bc:	mul	r3, r2, r3
   109c0:	ldr	r2, [fp, #-8]
   109c4:	add	r3, r2, r3
   109c8:	mov	r2, r3
   109cc:	sub	r3, fp, #68	; 0x44
   109d0:	mov	r1, r3
   109d4:	mov	r0, r2
   109d8:	bl	10798 <strcpy@plt>
   109dc:	ldr	r3, [fp, #-16]
   109e0:	mov	r2, #104	; 0x68
   109e4:	mul	r3, r2, r3
   109e8:	ldr	r2, [fp, #-8]
   109ec:	add	r3, r2, r3
   109f0:	mov	r2, #1
   109f4:	str	r2, [r3, #100]	; 0x64
   109f8:	ldr	r3, [fp, #-16]
   109fc:	add	r3, r3, #1
   10a00:	str	r3, [fp, #-16]
   10a04:	b	10a24 <analisarFicheiro@@Base+0x13c>
   10a08:	ldr	r3, [fp, #-12]
   10a0c:	add	r3, r3, #1
   10a10:	str	r3, [fp, #-12]
   10a14:	ldr	r2, [fp, #-12]
   10a18:	ldr	r3, [fp, #-16]
   10a1c:	cmp	r2, r3
   10a20:	ble	10928 <analisarFicheiro@@Base+0x40>
   10a24:	sub	r3, fp, #68	; 0x44
   10a28:	mov	r2, r3
   10a2c:	ldr	r3, [pc, #60]	; 10a70 <analisarFicheiro@@Base+0x188>
   10a30:	add	r3, pc, r3
   10a34:	mov	r1, r3
   10a38:	ldr	r0, [fp, #-72]	; 0xffffffb8
   10a3c:	bl	1075c <__isoc99_fscanf@plt>
   10a40:	mov	r3, r0
   10a44:	cmn	r3, #1
   10a48:	bne	1091c <analisarFicheiro@@Base+0x34>
   10a4c:	ldr	r3, [fp, #-76]	; 0xffffffb4
   10a50:	ldr	r2, [fp, #-16]
   10a54:	str	r2, [r3]
   10a58:	ldr	r3, [fp, #-8]
   10a5c:	mov	r0, r3
   10a60:	sub	sp, fp, #4
   10a64:	ldr	fp, [sp]
   10a68:	add	sp, sp, #4
   10a6c:	pop	{pc}		; (ldr pc, [sp], #4)
   10a70:	andeq	r0, r0, r8, lsr #5

00010a74 <gerarRelatorio@@Base>:
   10a74:	str	fp, [sp, #-8]!
   10a78:	str	lr, [sp, #4]
   10a7c:	add	fp, sp, #4
   10a80:	sub	sp, sp, #32
   10a84:	str	r0, [fp, #-16]
   10a88:	str	r1, [fp, #-20]	; 0xffffffec
   10a8c:	str	r2, [fp, #-24]	; 0xffffffe8
   10a90:	ldr	r3, [fp, #-16]
   10a94:	mov	r2, #53	; 0x35
   10a98:	mov	r1, #1
   10a9c:	ldr	r0, [pc, #148]	; 10b38 <gerarRelatorio@@Base+0xc4>
   10aa0:	add	r0, pc, r0
   10aa4:	bl	1078c <fwrite@plt>
   10aa8:	mov	r3, #0
   10aac:	str	r3, [fp, #-8]
   10ab0:	b	10b14 <gerarRelatorio@@Base+0xa0>
   10ab4:	ldr	r3, [fp, #-8]
   10ab8:	add	r1, r3, #1
   10abc:	ldr	r3, [fp, #-8]
   10ac0:	mov	r2, #104	; 0x68
   10ac4:	mul	r3, r2, r3
   10ac8:	ldr	r2, [fp, #-20]	; 0xffffffec
   10acc:	add	r3, r2, r3
   10ad0:	mov	r0, r3
   10ad4:	ldr	r3, [fp, #-8]
   10ad8:	mov	r2, #104	; 0x68
   10adc:	mul	r3, r2, r3
   10ae0:	ldr	r2, [fp, #-20]	; 0xffffffec
   10ae4:	add	r3, r2, r3
   10ae8:	ldr	r3, [r3, #100]	; 0x64
   10aec:	str	r3, [sp]
   10af0:	mov	r3, r0
   10af4:	mov	r2, r1
   10af8:	ldr	r1, [pc, #60]	; 10b3c <gerarRelatorio@@Base+0xc8>
   10afc:	add	r1, pc, r1
   10b00:	ldr	r0, [fp, #-16]
   10b04:	bl	107c8 <fprintf@plt>
   10b08:	ldr	r3, [fp, #-8]
   10b0c:	add	r3, r3, #1
   10b10:	str	r3, [fp, #-8]
   10b14:	ldr	r2, [fp, #-8]
   10b18:	ldr	r3, [fp, #-24]	; 0xffffffe8
   10b1c:	cmp	r2, r3
   10b20:	blt	10ab4 <gerarRelatorio@@Base+0x40>
   10b24:	nop	{0}
   10b28:	sub	sp, fp, #4
   10b2c:	ldr	fp, [sp]
   10b30:	add	sp, sp, #4
   10b34:	pop	{pc}		; (ldr pc, [sp], #4)
   10b38:	andeq	r0, r0, ip, lsr r2
   10b3c:	andeq	r0, r0, r8, lsl r2

00010b40 <main@@Base>:
   10b40:	str	fp, [sp, #-8]!
   10b44:	str	lr, [sp, #4]
   10b48:	add	fp, sp, #4
   10b4c:	sub	sp, sp, #120	; 0x78
   10b50:	ldr	r3, [pc, #256]	; 10c58 <main@@Base+0x118>
   10b54:	add	r3, pc, r3
   10b58:	mov	r0, r3
   10b5c:	bl	10750 <printf@plt>
   10b60:	sub	r3, fp, #68	; 0x44
   10b64:	mov	r1, r3
   10b68:	ldr	r3, [pc, #236]	; 10c5c <main@@Base+0x11c>
   10b6c:	add	r3, pc, r3
   10b70:	mov	r0, r3
   10b74:	bl	107e0 <__isoc99_scanf@plt>
   10b78:	ldr	r3, [pc, #224]	; 10c60 <main@@Base+0x120>
   10b7c:	add	r3, pc, r3
   10b80:	mov	r0, r3
   10b84:	bl	10750 <printf@plt>
   10b88:	sub	r3, fp, #120	; 0x78
   10b8c:	mov	r1, r3
   10b90:	ldr	r3, [pc, #204]	; 10c64 <main@@Base+0x124>
   10b94:	add	r3, pc, r3
   10b98:	mov	r0, r3
   10b9c:	bl	107e0 <__isoc99_scanf@plt>
   10ba0:	sub	r3, fp, #68	; 0x44
   10ba4:	ldr	r2, [pc, #188]	; 10c68 <main@@Base+0x128>
   10ba8:	add	r2, pc, r2
   10bac:	mov	r1, r2
   10bb0:	mov	r0, r3
   10bb4:	bl	10768 <fopen@plt>
   10bb8:	str	r0, [fp, #-8]
   10bbc:	ldr	r3, [fp, #-8]
   10bc0:	cmp	r3, #0
   10bc4:	bne	10bd0 <main@@Base+0x90>
   10bc8:	mov	r3, #1
   10bcc:	b	10c44 <main@@Base+0x104>
   10bd0:	sub	r3, fp, #120	; 0x78
   10bd4:	ldr	r2, [pc, #144]	; 10c6c <main@@Base+0x12c>
   10bd8:	add	r2, pc, r2
   10bdc:	mov	r1, r2
   10be0:	mov	r0, r3
   10be4:	bl	10768 <fopen@plt>
   10be8:	str	r0, [fp, #-12]
   10bec:	ldr	r3, [fp, #-12]
   10bf0:	cmp	r3, #0
   10bf4:	bne	10c00 <main@@Base+0xc0>
   10bf8:	mov	r3, #1
   10bfc:	b	10c44 <main@@Base+0x104>
   10c00:	sub	r3, fp, #124	; 0x7c
   10c04:	mov	r1, r3
   10c08:	ldr	r0, [fp, #-8]
   10c0c:	bl	108e8 <analisarFicheiro@@Base>
   10c10:	str	r0, [fp, #-16]
   10c14:	ldr	r3, [fp, #-124]	; 0xffffff84
   10c18:	mov	r2, r3
   10c1c:	ldr	r1, [fp, #-16]
   10c20:	ldr	r0, [fp, #-12]
   10c24:	bl	10a74 <gerarRelatorio@@Base>
   10c28:	ldr	r0, [fp, #-8]
   10c2c:	bl	107d4 <fclose@plt>
   10c30:	ldr	r0, [fp, #-12]
   10c34:	bl	107d4 <fclose@plt>
   10c38:	ldr	r0, [fp, #-16]
   10c3c:	bl	10774 <free@plt>
   10c40:	mov	r3, #0
   10c44:	mov	r0, r3
   10c48:	sub	sp, fp, #4
   10c4c:	ldr	fp, [sp]
   10c50:	add	sp, sp, #4
   10c54:	pop	{pc}		; (ldr pc, [sp], #4)
   10c58:	ldrdeq	r0, [r0], -r0	; <UNPREDICTABLE>
   10c5c:	andeq	r0, r0, ip, ror #2
   10c60:	andeq	r0, r0, r0, asr #3
   10c64:	andeq	r0, r0, r4, asr #2
   10c68:	andeq	r0, r0, r8, lsr #3
   10c6c:	andeq	r0, r0, ip, ror r1

00010c70 <__libc_csu_init@@Base>:
   10c70:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   10c74:	mov	r7, r0
   10c78:	ldr	r6, [pc, #72]	; 10cc8 <__libc_csu_init@@Base+0x58>
   10c7c:	ldr	r5, [pc, #72]	; 10ccc <__libc_csu_init@@Base+0x5c>
   10c80:	add	r6, pc, r6
   10c84:	add	r5, pc, r5
   10c88:	sub	r6, r6, r5
   10c8c:	mov	r8, r1
   10c90:	mov	r9, r2
   10c94:	bl	10724 <strcmp@plt-0x20>
   10c98:	asrs	r6, r6, #2
   10c9c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   10ca0:	mov	r4, #0
   10ca4:	add	r4, r4, #1
   10ca8:	ldr	r3, [r5], #4
   10cac:	mov	r2, r9
   10cb0:	mov	r1, r8
   10cb4:	mov	r0, r7
   10cb8:	blx	r3
   10cbc:	cmp	r6, r4
   10cc0:	bne	10ca4 <__libc_csu_init@@Base+0x34>
   10cc4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   10cc8:	andeq	r0, r1, ip, lsl #5
   10ccc:	andeq	r0, r1, r4, lsl #5

00010cd0 <__libc_csu_fini@@Base>:
   10cd0:	bx	lr

Disassembly of section .fini:

00010cd4 <.fini>:
   10cd4:	push	{r3, lr}
   10cd8:	pop	{r3, pc}
