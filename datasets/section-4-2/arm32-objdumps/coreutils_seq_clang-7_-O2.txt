
../repos/coreutils/src/seq:     file format elf32-littlearm


Disassembly of section .init:

00010e9c <.init>:
   10e9c:	push	{r3, lr}
   10ea0:	bl	1119c <__mempcpy_chk@plt+0x4c>
   10ea4:	pop	{r3, pc}

Disassembly of section .plt:

00010ea8 <calloc@plt-0x14>:
   10ea8:	push	{lr}		; (str lr, [sp, #-4]!)
   10eac:	ldr	lr, [pc, #4]	; 10eb8 <calloc@plt-0x4>
   10eb0:	add	lr, pc, lr
   10eb4:	ldr	pc, [lr, #8]!
   10eb8:	andeq	r6, r1, r8, asr #2

00010ebc <calloc@plt>:
   10ebc:	add	ip, pc, #0, 12
   10ec0:	add	ip, ip, #90112	; 0x16000
   10ec4:	ldr	pc, [ip, #328]!	; 0x148

00010ec8 <fputs_unlocked@plt>:
   10ec8:	add	ip, pc, #0, 12
   10ecc:	add	ip, ip, #90112	; 0x16000
   10ed0:	ldr	pc, [ip, #320]!	; 0x140

00010ed4 <uselocale@plt>:
   10ed4:	add	ip, pc, #0, 12
   10ed8:	add	ip, ip, #90112	; 0x16000
   10edc:	ldr	pc, [ip, #312]!	; 0x138

00010ee0 <strcmp@plt>:
   10ee0:	add	ip, pc, #0, 12
   10ee4:	add	ip, ip, #90112	; 0x16000
   10ee8:	ldr	pc, [ip, #304]!	; 0x130

00010eec <strtol@plt>:
   10eec:	add	ip, pc, #0, 12
   10ef0:	add	ip, ip, #90112	; 0x16000
   10ef4:	ldr	pc, [ip, #296]!	; 0x128

00010ef8 <strcspn@plt>:
   10ef8:	add	ip, pc, #0, 12
   10efc:	add	ip, ip, #90112	; 0x16000
   10f00:	ldr	pc, [ip, #288]!	; 0x120

00010f04 <fflush@plt>:
   10f04:	add	ip, pc, #0, 12
   10f08:	add	ip, ip, #90112	; 0x16000
   10f0c:	ldr	pc, [ip, #280]!	; 0x118

00010f10 <memmove@plt>:
   10f10:	add	ip, pc, #0, 12
   10f14:	add	ip, ip, #90112	; 0x16000
   10f18:	ldr	pc, [ip, #272]!	; 0x110

00010f1c <free@plt>:
   10f1c:	add	ip, pc, #0, 12
   10f20:	add	ip, ip, #90112	; 0x16000
   10f24:	ldr	pc, [ip, #264]!	; 0x108

00010f28 <_exit@plt>:
   10f28:	add	ip, pc, #0, 12
   10f2c:	add	ip, ip, #90112	; 0x16000
   10f30:	ldr	pc, [ip, #256]!	; 0x100

00010f34 <memcpy@plt>:
   10f34:	add	ip, pc, #0, 12
   10f38:	add	ip, ip, #90112	; 0x16000
   10f3c:	ldr	pc, [ip, #248]!	; 0xf8

00010f40 <mbsinit@plt>:
   10f40:	add	ip, pc, #0, 12
   10f44:	add	ip, ip, #90112	; 0x16000
   10f48:	ldr	pc, [ip, #240]!	; 0xf0

00010f4c <strtold@plt>:
   10f4c:	add	ip, pc, #0, 12
   10f50:	add	ip, ip, #90112	; 0x16000
   10f54:	ldr	pc, [ip, #232]!	; 0xe8

00010f58 <fwrite_unlocked@plt>:
   10f58:	add	ip, pc, #0, 12
   10f5c:	add	ip, ip, #90112	; 0x16000
   10f60:	ldr	pc, [ip, #224]!	; 0xe0

00010f64 <memcmp@plt>:
   10f64:	add	ip, pc, #0, 12
   10f68:	add	ip, ip, #90112	; 0x16000
   10f6c:	ldr	pc, [ip, #216]!	; 0xd8

00010f70 <dcgettext@plt>:
   10f70:	add	ip, pc, #0, 12
   10f74:	add	ip, ip, #90112	; 0x16000
   10f78:	ldr	pc, [ip, #208]!	; 0xd0

00010f7c <realloc@plt>:
   10f7c:	add	ip, pc, #0, 12
   10f80:	add	ip, ip, #90112	; 0x16000
   10f84:	ldr	pc, [ip, #200]!	; 0xc8

00010f88 <textdomain@plt>:
   10f88:	add	ip, pc, #0, 12
   10f8c:	add	ip, ip, #90112	; 0x16000
   10f90:	ldr	pc, [ip, #192]!	; 0xc0

00010f94 <iswprint@plt>:
   10f94:	add	ip, pc, #0, 12
   10f98:	add	ip, ip, #90112	; 0x16000
   10f9c:	ldr	pc, [ip, #184]!	; 0xb8

00010fa0 <fwrite@plt>:
   10fa0:	add	ip, pc, #0, 12
   10fa4:	add	ip, ip, #90112	; 0x16000
   10fa8:	ldr	pc, [ip, #176]!	; 0xb0

00010fac <lseek64@plt>:
   10fac:	add	ip, pc, #0, 12
   10fb0:	add	ip, ip, #90112	; 0x16000
   10fb4:	ldr	pc, [ip, #168]!	; 0xa8

00010fb8 <__ctype_get_mb_cur_max@plt>:
   10fb8:	add	ip, pc, #0, 12
   10fbc:	add	ip, ip, #90112	; 0x16000
   10fc0:	ldr	pc, [ip, #160]!	; 0xa0

00010fc4 <strcpy@plt>:
   10fc4:	add	ip, pc, #0, 12
   10fc8:	add	ip, ip, #90112	; 0x16000
   10fcc:	ldr	pc, [ip, #152]!	; 0x98

00010fd0 <__fpending@plt>:
   10fd0:	add	ip, pc, #0, 12
   10fd4:	add	ip, ip, #90112	; 0x16000
   10fd8:	ldr	pc, [ip, #144]!	; 0x90

00010fdc <mbrtowc@plt>:
   10fdc:	add	ip, pc, #0, 12
   10fe0:	add	ip, ip, #90112	; 0x16000
   10fe4:	ldr	pc, [ip, #136]!	; 0x88

00010fe8 <error@plt>:
   10fe8:	add	ip, pc, #0, 12
   10fec:	add	ip, ip, #90112	; 0x16000
   10ff0:	ldr	pc, [ip, #128]!	; 0x80

00010ff4 <__asprintf_chk@plt>:
   10ff4:	add	ip, pc, #0, 12
   10ff8:	add	ip, ip, #90112	; 0x16000
   10ffc:	ldr	pc, [ip, #120]!	; 0x78

00011000 <malloc@plt>:
   11000:	add	ip, pc, #0, 12
   11004:	add	ip, ip, #90112	; 0x16000
   11008:	ldr	pc, [ip, #112]!	; 0x70

0001100c <__libc_start_main@plt>:
   1100c:	add	ip, pc, #0, 12
   11010:	add	ip, ip, #90112	; 0x16000
   11014:	ldr	pc, [ip, #104]!	; 0x68

00011018 <__freading@plt>:
   11018:	add	ip, pc, #0, 12
   1101c:	add	ip, ip, #90112	; 0x16000
   11020:	ldr	pc, [ip, #96]!	; 0x60

00011024 <__gmon_start__@plt>:
   11024:	add	ip, pc, #0, 12
   11028:	add	ip, ip, #90112	; 0x16000
   1102c:	ldr	pc, [ip, #88]!	; 0x58

00011030 <getopt_long@plt>:
   11030:	add	ip, pc, #0, 12
   11034:	add	ip, ip, #90112	; 0x16000
   11038:	ldr	pc, [ip, #80]!	; 0x50

0001103c <__ctype_b_loc@plt>:
   1103c:	add	ip, pc, #0, 12
   11040:	add	ip, ip, #90112	; 0x16000
   11044:	ldr	pc, [ip, #72]!	; 0x48

00011048 <exit@plt>:
   11048:	add	ip, pc, #0, 12
   1104c:	add	ip, ip, #90112	; 0x16000
   11050:	ldr	pc, [ip, #64]!	; 0x40

00011054 <strlen@plt>:
   11054:	add	ip, pc, #0, 12
   11058:	add	ip, ip, #90112	; 0x16000
   1105c:	ldr	pc, [ip, #56]!	; 0x38

00011060 <strchr@plt>:
   11060:	add	ip, pc, #0, 12
   11064:	add	ip, ip, #90112	; 0x16000
   11068:	ldr	pc, [ip, #48]!	; 0x30

0001106c <__errno_location@plt>:
   1106c:	add	ip, pc, #0, 12
   11070:	add	ip, ip, #90112	; 0x16000
   11074:	ldr	pc, [ip, #40]!	; 0x28

00011078 <__sprintf_chk@plt>:
   11078:	add	ip, pc, #0, 12
   1107c:	add	ip, ip, #90112	; 0x16000
   11080:	ldr	pc, [ip, #32]!

00011084 <__cxa_atexit@plt>:
   11084:	add	ip, pc, #0, 12
   11088:	add	ip, ip, #90112	; 0x16000
   1108c:	ldr	pc, [ip, #24]!

00011090 <memset@plt>:
   11090:	add	ip, pc, #0, 12
   11094:	add	ip, ip, #90112	; 0x16000
   11098:	ldr	pc, [ip, #16]!

0001109c <__printf_chk@plt>:
   1109c:	add	ip, pc, #0, 12
   110a0:	add	ip, ip, #90112	; 0x16000
   110a4:	ldr	pc, [ip, #8]!

000110a8 <fileno@plt>:
   110a8:	add	ip, pc, #0, 12
   110ac:	add	ip, ip, #90112	; 0x16000
   110b0:	ldr	pc, [ip, #0]!

000110b4 <__fprintf_chk@plt>:
   110b4:	add	ip, pc, #0, 12
   110b8:	add	ip, ip, #86016	; 0x15000
   110bc:	ldr	pc, [ip, #4088]!	; 0xff8

000110c0 <memchr@plt>:
   110c0:	add	ip, pc, #0, 12
   110c4:	add	ip, ip, #86016	; 0x15000
   110c8:	ldr	pc, [ip, #4080]!	; 0xff0

000110cc <fclose@plt>:
   110cc:	add	ip, pc, #0, 12
   110d0:	add	ip, ip, #86016	; 0x15000
   110d4:	ldr	pc, [ip, #4072]!	; 0xfe8

000110d8 <fseeko64@plt>:
   110d8:	add	ip, pc, #0, 12
   110dc:	add	ip, ip, #86016	; 0x15000
   110e0:	ldr	pc, [ip, #4064]!	; 0xfe0

000110e4 <setlocale@plt>:
   110e4:	add	ip, pc, #0, 12
   110e8:	add	ip, ip, #86016	; 0x15000
   110ec:	ldr	pc, [ip, #4056]!	; 0xfd8

000110f0 <strrchr@plt>:
   110f0:	add	ip, pc, #0, 12
   110f4:	add	ip, ip, #86016	; 0x15000
   110f8:	ldr	pc, [ip, #4048]!	; 0xfd0

000110fc <nl_langinfo@plt>:
   110fc:	add	ip, pc, #0, 12
   11100:	add	ip, ip, #86016	; 0x15000
   11104:	ldr	pc, [ip, #4040]!	; 0xfc8

00011108 <newlocale@plt>:
   11108:	add	ip, pc, #0, 12
   1110c:	add	ip, ip, #86016	; 0x15000
   11110:	ldr	pc, [ip, #4032]!	; 0xfc0

00011114 <clearerr_unlocked@plt>:
   11114:	add	ip, pc, #0, 12
   11118:	add	ip, ip, #86016	; 0x15000
   1111c:	ldr	pc, [ip, #4024]!	; 0xfb8

00011120 <bindtextdomain@plt>:
   11120:	add	ip, pc, #0, 12
   11124:	add	ip, ip, #86016	; 0x15000
   11128:	ldr	pc, [ip, #4016]!	; 0xfb0

0001112c <strncmp@plt>:
   1112c:	add	ip, pc, #0, 12
   11130:	add	ip, ip, #86016	; 0x15000
   11134:	ldr	pc, [ip, #4008]!	; 0xfa8

00011138 <abort@plt>:
   11138:	add	ip, pc, #0, 12
   1113c:	add	ip, ip, #86016	; 0x15000
   11140:	ldr	pc, [ip, #4000]!	; 0xfa0

00011144 <strspn@plt>:
   11144:	add	ip, pc, #0, 12
   11148:	add	ip, ip, #86016	; 0x15000
   1114c:	ldr	pc, [ip, #3992]!	; 0xf98

00011150 <__mempcpy_chk@plt>:
   11150:	add	ip, pc, #0, 12
   11154:	add	ip, ip, #86016	; 0x15000
   11158:	ldr	pc, [ip, #3984]!	; 0xf90

Disassembly of section .text:

00011160 <.text>:
   11160:	mov	fp, #0
   11164:	mov	lr, #0
   11168:	pop	{r1}		; (ldr r1, [sp], #4)
   1116c:	mov	r2, sp
   11170:	push	{r2}		; (str r2, [sp, #-4]!)
   11174:	push	{r0}		; (str r0, [sp, #-4]!)
   11178:	ldr	ip, [pc, #16]	; 11190 <__mempcpy_chk@plt+0x40>
   1117c:	push	{ip}		; (str ip, [sp, #-4]!)
   11180:	ldr	r0, [pc, #12]	; 11194 <__mempcpy_chk@plt+0x44>
   11184:	ldr	r3, [pc, #12]	; 11198 <__mempcpy_chk@plt+0x48>
   11188:	bl	1100c <__libc_start_main@plt>
   1118c:	bl	11138 <abort@plt>
   11190:	andeq	r5, r1, r0, lsr #22
   11194:	andeq	r1, r1, r0, lsl r5
   11198:	andeq	r5, r1, r0, asr #21
   1119c:	ldr	r3, [pc, #20]	; 111b8 <__mempcpy_chk@plt+0x68>
   111a0:	ldr	r2, [pc, #20]	; 111bc <__mempcpy_chk@plt+0x6c>
   111a4:	add	r3, pc, r3
   111a8:	ldr	r2, [r3, r2]
   111ac:	cmp	r2, #0
   111b0:	bxeq	lr
   111b4:	b	11024 <__gmon_start__@plt>
   111b8:	andeq	r5, r1, r4, asr lr
   111bc:	andeq	r0, r0, ip, ror #1
   111c0:	ldr	r0, [pc, #24]	; 111e0 <__mempcpy_chk@plt+0x90>
   111c4:	ldr	r3, [pc, #24]	; 111e4 <__mempcpy_chk@plt+0x94>
   111c8:	cmp	r3, r0
   111cc:	bxeq	lr
   111d0:	ldr	r3, [pc, #16]	; 111e8 <__mempcpy_chk@plt+0x98>
   111d4:	cmp	r3, #0
   111d8:	bxeq	lr
   111dc:	bx	r3
   111e0:	andeq	r7, r2, r0, asr #2
   111e4:	andeq	r7, r2, r0, asr #2
   111e8:	andeq	r0, r0, r0
   111ec:	ldr	r0, [pc, #36]	; 11218 <__mempcpy_chk@plt+0xc8>
   111f0:	ldr	r1, [pc, #36]	; 1121c <__mempcpy_chk@plt+0xcc>
   111f4:	sub	r1, r1, r0
   111f8:	asr	r1, r1, #2
   111fc:	add	r1, r1, r1, lsr #31
   11200:	asrs	r1, r1, #1
   11204:	bxeq	lr
   11208:	ldr	r3, [pc, #16]	; 11220 <__mempcpy_chk@plt+0xd0>
   1120c:	cmp	r3, #0
   11210:	bxeq	lr
   11214:	bx	r3
   11218:	andeq	r7, r2, r0, asr #2
   1121c:	andeq	r7, r2, r0, asr #2
   11220:	andeq	r0, r0, r0
   11224:	push	{r4, lr}
   11228:	ldr	r4, [pc, #24]	; 11248 <__mempcpy_chk@plt+0xf8>
   1122c:	ldrb	r3, [r4]
   11230:	cmp	r3, #0
   11234:	popne	{r4, pc}
   11238:	bl	111c0 <__mempcpy_chk@plt+0x70>
   1123c:	mov	r3, #1
   11240:	strb	r3, [r4]
   11244:	pop	{r4, pc}
   11248:	andeq	r7, r2, ip, asr r1
   1124c:	b	111ec <__mempcpy_chk@plt+0x9c>
   11250:	push	{fp, lr}
   11254:	mov	fp, sp
   11258:	sub	sp, sp, #64	; 0x40
   1125c:	mov	r4, r0
   11260:	cmp	r0, #0
   11264:	bne	114c8 <__mempcpy_chk@plt+0x378>
   11268:	movw	r1, #23411	; 0x5b73
   1126c:	mov	r0, #0
   11270:	mov	r2, #5
   11274:	movt	r1, #1
   11278:	bl	10f70 <dcgettext@plt>
   1127c:	mov	r1, r0
   11280:	movw	r0, #29068	; 0x718c
   11284:	movt	r0, #2
   11288:	ldr	r2, [r0]
   1128c:	mov	r0, #1
   11290:	mov	r3, r2
   11294:	str	r2, [sp]
   11298:	bl	1109c <__printf_chk@plt>
   1129c:	movw	r1, #23515	; 0x5bdb
   112a0:	mov	r0, #0
   112a4:	mov	r2, #5
   112a8:	movt	r1, #1
   112ac:	bl	10f70 <dcgettext@plt>
   112b0:	movw	r7, #29012	; 0x7154
   112b4:	movt	r7, #2
   112b8:	ldr	r1, [r7]
   112bc:	bl	10ec8 <fputs_unlocked@plt>
   112c0:	movw	r1, #24816	; 0x60f0
   112c4:	mov	r0, #0
   112c8:	mov	r2, #5
   112cc:	movt	r1, #1
   112d0:	bl	10f70 <dcgettext@plt>
   112d4:	ldr	r1, [r7]
   112d8:	bl	10ec8 <fputs_unlocked@plt>
   112dc:	movw	r1, #23573	; 0x5c15
   112e0:	mov	r0, #0
   112e4:	mov	r2, #5
   112e8:	movt	r1, #1
   112ec:	bl	10f70 <dcgettext@plt>
   112f0:	ldr	r1, [r7]
   112f4:	bl	10ec8 <fputs_unlocked@plt>
   112f8:	movw	r1, #23785	; 0x5ce9
   112fc:	mov	r0, #0
   11300:	mov	r2, #5
   11304:	movt	r1, #1
   11308:	bl	10f70 <dcgettext@plt>
   1130c:	ldr	r1, [r7]
   11310:	bl	10ec8 <fputs_unlocked@plt>
   11314:	movw	r1, #23830	; 0x5d16
   11318:	mov	r0, #0
   1131c:	mov	r2, #5
   11320:	movt	r1, #1
   11324:	bl	10f70 <dcgettext@plt>
   11328:	ldr	r1, [r7]
   1132c:	bl	10ec8 <fputs_unlocked@plt>
   11330:	movw	r1, #23884	; 0x5d4c
   11334:	mov	r0, #0
   11338:	mov	r2, #5
   1133c:	movt	r1, #1
   11340:	bl	10f70 <dcgettext@plt>
   11344:	ldr	r1, [r7]
   11348:	bl	10ec8 <fputs_unlocked@plt>
   1134c:	movw	r1, #24397	; 0x5f4d
   11350:	mov	r0, #0
   11354:	mov	r2, #5
   11358:	movt	r1, #1
   1135c:	bl	10f70 <dcgettext@plt>
   11360:	ldr	r1, [r7]
   11364:	bl	10ec8 <fputs_unlocked@plt>
   11368:	movw	r0, #25632	; 0x6420
   1136c:	mov	r2, #48	; 0x30
   11370:	add	r6, sp, #8
   11374:	movw	r5, #24605	; 0x601d
   11378:	movt	r0, #1
   1137c:	movt	r5, #1
   11380:	add	r1, r0, #32
   11384:	add	r3, r0, #16
   11388:	vld1.64	{d18-d19}, [r0], r2
   1138c:	vld1.64	{d16-d17}, [r1]
   11390:	vld1.64	{d20-d21}, [r3]
   11394:	add	r1, r6, #32
   11398:	vldr	d22, [r0]
   1139c:	add	r0, r6, #16
   113a0:	vst1.64	{d16-d17}, [r1]
   113a4:	movw	r1, #24891	; 0x613b
   113a8:	vst1.64	{d20-d21}, [r0]
   113ac:	mov	r0, r6
   113b0:	vst1.64	{d18-d19}, [r0], r2
   113b4:	movt	r1, #1
   113b8:	vstr	d22, [r0]
   113bc:	mov	r0, r5
   113c0:	bl	10ee0 <strcmp@plt>
   113c4:	cmp	r0, #0
   113c8:	ldrne	r1, [r6, #8]!
   113cc:	cmpne	r1, #0
   113d0:	bne	113bc <__mempcpy_chk@plt+0x26c>
   113d4:	ldr	r6, [r6, #4]
   113d8:	movw	r1, #24986	; 0x619a
   113dc:	mov	r0, #0
   113e0:	mov	r2, #5
   113e4:	movt	r1, #1
   113e8:	bl	10f70 <dcgettext@plt>
   113ec:	movw	r2, #24640	; 0x6040
   113f0:	movw	r3, #25009	; 0x61b1
   113f4:	mov	r1, r0
   113f8:	mov	r0, #1
   113fc:	movt	r2, #1
   11400:	movt	r3, #1
   11404:	bl	1109c <__printf_chk@plt>
   11408:	cmp	r6, #0
   1140c:	mov	r0, #5
   11410:	mov	r1, #0
   11414:	moveq	r6, r5
   11418:	bl	110e4 <setlocale@plt>
   1141c:	cmp	r0, #0
   11420:	beq	11458 <__mempcpy_chk@plt+0x308>
   11424:	movw	r1, #25049	; 0x61d9
   11428:	mov	r2, #3
   1142c:	movt	r1, #1
   11430:	bl	1112c <strncmp@plt>
   11434:	cmp	r0, #0
   11438:	beq	11458 <__mempcpy_chk@plt+0x308>
   1143c:	movw	r1, #25053	; 0x61dd
   11440:	mov	r0, #0
   11444:	mov	r2, #5
   11448:	movt	r1, #1
   1144c:	bl	10f70 <dcgettext@plt>
   11450:	ldr	r1, [r7]
   11454:	bl	10ec8 <fputs_unlocked@plt>
   11458:	movw	r1, #25124	; 0x6224
   1145c:	mov	r0, #0
   11460:	mov	r2, #5
   11464:	movt	r1, #1
   11468:	bl	10f70 <dcgettext@plt>
   1146c:	movw	r2, #25009	; 0x61b1
   11470:	mov	r1, r0
   11474:	mov	r0, #1
   11478:	mov	r3, r5
   1147c:	movt	r2, #1
   11480:	bl	1109c <__printf_chk@plt>
   11484:	movw	r1, #25151	; 0x623f
   11488:	mov	r0, #0
   1148c:	mov	r2, #5
   11490:	movt	r1, #1
   11494:	bl	10f70 <dcgettext@plt>
   11498:	movw	r3, #25201	; 0x6271
   1149c:	mov	r1, r0
   114a0:	movw	r0, #24919	; 0x6157
   114a4:	cmp	r6, r5
   114a8:	mov	r2, r6
   114ac:	movt	r0, #1
   114b0:	movt	r3, #1
   114b4:	moveq	r3, r0
   114b8:	mov	r0, #1
   114bc:	bl	1109c <__printf_chk@plt>
   114c0:	mov	r0, r4
   114c4:	bl	11048 <exit@plt>
   114c8:	movw	r0, #29008	; 0x7150
   114cc:	movw	r1, #23372	; 0x5b4c
   114d0:	mov	r2, #5
   114d4:	movt	r0, #2
   114d8:	movt	r1, #1
   114dc:	ldr	r5, [r0]
   114e0:	mov	r0, #0
   114e4:	bl	10f70 <dcgettext@plt>
   114e8:	mov	r2, r0
   114ec:	movw	r0, #29068	; 0x718c
   114f0:	mov	r1, #1
   114f4:	movt	r0, #2
   114f8:	ldr	r3, [r0]
   114fc:	mov	r0, r5
   11500:	bl	110b4 <__fprintf_chk@plt>
   11504:	mov	r0, r4
   11508:	bl	11048 <exit@plt>
   1150c:	nop	{0}
   11510:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   11514:	add	fp, sp, #28
   11518:	sub	sp, sp, #4
   1151c:	vpush	{d8-d14}
   11520:	sub	sp, sp, #80	; 0x50
   11524:	mov	r5, r0
   11528:	movw	r0, #25512	; 0x63a8
   1152c:	mov	r9, r1
   11530:	movt	r0, #1
   11534:	vld1.64	{d16-d17}, [r0]
   11538:	add	r0, sp, #56	; 0x38
   1153c:	vst1.64	{d16-d17}, [r0]
   11540:	ldr	r0, [r1]
   11544:	bl	12aa0 <__mempcpy_chk@plt+0x1950>
   11548:	movw	r1, #25201	; 0x6271
   1154c:	mov	r0, #6
   11550:	movt	r1, #1
   11554:	bl	110e4 <setlocale@plt>
   11558:	cmp	r0, #0
   1155c:	movw	r1, #29024	; 0x7160
   11560:	movw	r4, #24644	; 0x6044
   11564:	movwne	r0, #1
   11568:	movt	r1, #2
   1156c:	movt	r4, #1
   11570:	strb	r0, [r1]
   11574:	movw	r1, #24609	; 0x6021
   11578:	mov	r0, r4
   1157c:	movt	r1, #1
   11580:	bl	11120 <bindtextdomain@plt>
   11584:	mov	r0, r4
   11588:	bl	10f88 <textdomain@plt>
   1158c:	movw	r0, #10640	; 0x2990
   11590:	movt	r0, #1
   11594:	bl	15b24 <__mempcpy_chk@plt+0x49d4>
   11598:	movw	r0, #29025	; 0x7161
   1159c:	mov	r7, #0
   115a0:	movw	r1, #29028	; 0x7164
   115a4:	movt	r0, #2
   115a8:	movt	r1, #2
   115ac:	strb	r7, [r0]
   115b0:	movw	r0, #25528	; 0x63b8
   115b4:	movt	r0, #1
   115b8:	str	r0, [r1]
   115bc:	movw	r0, #29000	; 0x7148
   115c0:	movt	r0, #2
   115c4:	ldr	r0, [r0]
   115c8:	cmp	r0, r5
   115cc:	bge	116a8 <__mempcpy_chk@plt+0x558>
   115d0:	movw	r4, #24633	; 0x6039
   115d4:	movw	r6, #25532	; 0x63bc
   115d8:	movw	sl, #29016	; 0x7158
   115dc:	mov	r8, #0
   115e0:	mov	r7, #0
   115e4:	movt	r4, #1
   115e8:	movt	r6, #1
   115ec:	movt	sl, #2
   115f0:	ldr	r1, [r9, r0, lsl #2]
   115f4:	ldrb	r2, [r1]
   115f8:	cmp	r2, #45	; 0x2d
   115fc:	bne	11618 <__mempcpy_chk@plt+0x4c8>
   11600:	ldrb	r1, [r1, #1]
   11604:	cmp	r1, #46	; 0x2e
   11608:	beq	116a8 <__mempcpy_chk@plt+0x558>
   1160c:	sub	r1, r1, #48	; 0x30
   11610:	cmp	r1, #10
   11614:	bcc	116a8 <__mempcpy_chk@plt+0x558>
   11618:	mov	r0, r5
   1161c:	mov	r1, r9
   11620:	mov	r2, r4
   11624:	mov	r3, r6
   11628:	str	r8, [sp]
   1162c:	bl	11030 <getopt_long@plt>
   11630:	cmp	r0, #101	; 0x65
   11634:	ble	11694 <__mempcpy_chk@plt+0x544>
   11638:	cmp	r0, #102	; 0x66
   1163c:	beq	1165c <__mempcpy_chk@plt+0x50c>
   11640:	cmp	r0, #115	; 0x73
   11644:	bne	11664 <__mempcpy_chk@plt+0x514>
   11648:	ldr	r0, [sl]
   1164c:	movw	r1, #29028	; 0x7164
   11650:	movt	r1, #2
   11654:	str	r0, [r1]
   11658:	b	1167c <__mempcpy_chk@plt+0x52c>
   1165c:	ldr	r7, [sl]
   11660:	b	1167c <__mempcpy_chk@plt+0x52c>
   11664:	cmp	r0, #119	; 0x77
   11668:	bne	1213c <__mempcpy_chk@plt+0xfec>
   1166c:	movw	r0, #29025	; 0x7161
   11670:	mov	r1, #1
   11674:	movt	r0, #2
   11678:	strb	r1, [r0]
   1167c:	movw	r0, #29000	; 0x7148
   11680:	movt	r0, #2
   11684:	ldr	r0, [r0]
   11688:	cmp	r0, r5
   1168c:	blt	115f0 <__mempcpy_chk@plt+0x4a0>
   11690:	b	116a8 <__mempcpy_chk@plt+0x558>
   11694:	cmn	r0, #1
   11698:	bne	120a4 <__mempcpy_chk@plt+0xf54>
   1169c:	movw	r0, #29000	; 0x7148
   116a0:	movt	r0, #2
   116a4:	ldr	r0, [r0]
   116a8:	subs	r3, r5, r0
   116ac:	beq	12104 <__mempcpy_chk@plt+0xfb4>
   116b0:	movw	r4, #29000	; 0x7148
   116b4:	cmp	r3, #4
   116b8:	movt	r4, #2
   116bc:	bcs	12110 <__mempcpy_chk@plt+0xfc0>
   116c0:	cmp	r7, #0
   116c4:	str	r3, [sp, #32]
   116c8:	beq	118e8 <__mempcpy_chk@plt+0x798>
   116cc:	mov	sl, #0
   116d0:	mov	r0, #0
   116d4:	b	116ec <__mempcpy_chk@plt+0x59c>
   116d8:	cmp	r1, #37	; 0x25
   116dc:	mov	r1, #1
   116e0:	add	sl, sl, #1
   116e4:	movweq	r1, #2
   116e8:	add	r0, r1, r0
   116ec:	ldrb	r1, [r7, r0]
   116f0:	cmp	r1, #37	; 0x25
   116f4:	bne	1170c <__mempcpy_chk@plt+0x5bc>
   116f8:	add	r4, r0, #1
   116fc:	ldrb	r2, [r7, r4]
   11700:	cmp	r2, #37	; 0x25
   11704:	beq	116d8 <__mempcpy_chk@plt+0x588>
   11708:	b	11720 <__mempcpy_chk@plt+0x5d0>
   1170c:	cmp	r1, #0
   11710:	bne	116d8 <__mempcpy_chk@plt+0x588>
   11714:	movw	r1, #25244	; 0x629c
   11718:	movt	r1, #1
   1171c:	b	12078 <__mempcpy_chk@plt+0xf28>
   11720:	movw	r1, #25274	; 0x62ba
   11724:	add	r0, r7, r4
   11728:	movt	r1, #1
   1172c:	bl	11144 <strspn@plt>
   11730:	add	r4, r0, r4
   11734:	movw	r1, #25281	; 0x62c1
   11738:	add	r0, r7, r4
   1173c:	movt	r1, #1
   11740:	bl	11144 <strspn@plt>
   11744:	add	r6, r4, r0
   11748:	str	r5, [sp, #28]
   1174c:	ldrb	r0, [r7, r6]
   11750:	cmp	r0, #46	; 0x2e
   11754:	bne	11774 <__mempcpy_chk@plt+0x624>
   11758:	movw	r1, #25281	; 0x62c1
   1175c:	add	r4, r6, #1
   11760:	add	r0, r7, r4
   11764:	movt	r1, #1
   11768:	bl	11144 <strspn@plt>
   1176c:	add	r6, r0, r4
   11770:	ldrb	r0, [r7, r6]
   11774:	sub	r0, r0, #76	; 0x4c
   11778:	clz	r0, r0
   1177c:	lsr	r4, r0, #5
   11780:	add	r5, r6, r4
   11784:	ldrb	r1, [r7, r5]
   11788:	cmp	r1, #0
   1178c:	beq	12144 <__mempcpy_chk@plt+0xff4>
   11790:	movw	r0, #25313	; 0x62e1
   11794:	mov	r2, #9
   11798:	movt	r0, #1
   1179c:	bl	110c0 <memchr@plt>
   117a0:	cmp	r0, #0
   117a4:	beq	12150 <__mempcpy_chk@plt+0x1000>
   117a8:	add	r0, r5, #1
   117ac:	mov	r8, #0
   117b0:	b	117c8 <__mempcpy_chk@plt+0x678>
   117b4:	cmp	r1, #37	; 0x25
   117b8:	mov	r1, #1
   117bc:	add	r8, r8, #1
   117c0:	movweq	r1, #2
   117c4:	add	r0, r1, r0
   117c8:	ldrb	r1, [r7, r0]
   117cc:	cmp	r1, #37	; 0x25
   117d0:	bne	117e8 <__mempcpy_chk@plt+0x698>
   117d4:	add	r2, r7, r0
   117d8:	ldrb	r2, [r2, #1]
   117dc:	cmp	r2, #37	; 0x25
   117e0:	beq	117b4 <__mempcpy_chk@plt+0x664>
   117e4:	b	12070 <__mempcpy_chk@plt+0xf20>
   117e8:	cmp	r1, #0
   117ec:	bne	117b4 <__mempcpy_chk@plt+0x664>
   117f0:	add	r0, r0, #2
   117f4:	bl	14ec4 <__mempcpy_chk@plt+0x3d74>
   117f8:	mov	r1, r7
   117fc:	mov	r2, r6
   11800:	mov	r5, r0
   11804:	bl	10f34 <memcpy@plt>
   11808:	mov	r0, #76	; 0x4c
   1180c:	str	r5, [sp, #36]	; 0x24
   11810:	add	r1, r7, r6
   11814:	strb	r0, [r5, r6]!
   11818:	add	r1, r1, r4
   1181c:	add	r0, r5, #1
   11820:	bl	10fc4 <strcpy@plt>
   11824:	movw	r0, #29025	; 0x7161
   11828:	movt	r0, #2
   1182c:	ldrb	r0, [r0]
   11830:	cmp	r0, #1
   11834:	beq	12180 <__mempcpy_chk@plt+0x1030>
   11838:	ldr	r5, [sp, #28]
   1183c:	ldr	r3, [sp, #32]
   11840:	movw	r4, #29000	; 0x7148
   11844:	mov	r0, #1
   11848:	movt	r4, #2
   1184c:	str	r0, [sp, #24]
   11850:	cmp	r3, #3
   11854:	bne	11908 <__mempcpy_chk@plt+0x7b8>
   11858:	ldr	r0, [r4]
   1185c:	mov	r7, #0
   11860:	add	r0, r9, r0, lsl #2
   11864:	ldr	r6, [r0, #4]
   11868:	ldrb	r0, [r6]
   1186c:	sub	r0, r0, #48	; 0x30
   11870:	cmp	r0, #9
   11874:	bhi	1190c <__mempcpy_chk@plt+0x7bc>
   11878:	mov	r0, r6
   1187c:	bl	11054 <strlen@plt>
   11880:	movw	r1, #25281	; 0x62c1
   11884:	mov	r7, r0
   11888:	mov	r0, r6
   1188c:	movt	r1, #1
   11890:	bl	11144 <strspn@plt>
   11894:	cmp	r7, r0
   11898:	mov	r7, #0
   1189c:	bne	1190c <__mempcpy_chk@plt+0x7bc>
   118a0:	movw	r3, #10476	; 0x28ec
   118a4:	add	r2, sp, #56	; 0x38
   118a8:	mov	r0, r6
   118ac:	mov	r1, #0
   118b0:	mov	r7, #0
   118b4:	movt	r3, #1
   118b8:	bl	15468 <__mempcpy_chk@plt+0x4318>
   118bc:	cmp	r0, #0
   118c0:	beq	1190c <__mempcpy_chk@plt+0x7bc>
   118c4:	vldr	d16, [sp, #56]	; 0x38
   118c8:	vcmpe.f64	d16, #0.0
   118cc:	vmrs	APSR_nzcv, fpscr
   118d0:	ble	1190c <__mempcpy_chk@plt+0x7bc>
   118d4:	vldr	d17, [pc, #644]	; 11b60 <__mempcpy_chk@plt+0xa10>
   118d8:	vcmpe.f64	d16, d17
   118dc:	vmrs	APSR_nzcv, fpscr
   118e0:	movls	r7, #1
   118e4:	b	1190c <__mempcpy_chk@plt+0x7bc>
   118e8:	mov	r0, #0
   118ec:	mov	sl, #0
   118f0:	mov	r8, #0
   118f4:	str	r0, [sp, #24]
   118f8:	mov	r0, #0
   118fc:	str	r0, [sp, #36]	; 0x24
   11900:	cmp	r3, #3
   11904:	beq	11858 <__mempcpy_chk@plt+0x708>
   11908:	mov	r7, #1
   1190c:	ldr	r4, [r4]
   11910:	ldr	r6, [r9, r4, lsl #2]
   11914:	ldrb	r0, [r6]
   11918:	sub	r0, r0, #48	; 0x30
   1191c:	cmp	r0, #9
   11920:	bhi	11a78 <__mempcpy_chk@plt+0x928>
   11924:	mov	r0, r6
   11928:	str	r7, [sp, #20]
   1192c:	bl	11054 <strlen@plt>
   11930:	movw	r1, #25281	; 0x62c1
   11934:	mov	r7, r0
   11938:	mov	r0, r6
   1193c:	movt	r1, #1
   11940:	bl	11144 <strspn@plt>
   11944:	cmp	r7, r0
   11948:	bne	11a78 <__mempcpy_chk@plt+0x928>
   1194c:	ldr	r0, [sp, #32]
   11950:	cmp	r0, #1
   11954:	bne	119dc <__mempcpy_chk@plt+0x88c>
   11958:	movw	r0, #29025	; 0x7161
   1195c:	ldr	r1, [sp, #24]
   11960:	movt	r0, #2
   11964:	ldrb	r0, [r0]
   11968:	orr	r0, r1, r0
   1196c:	tst	r0, #1
   11970:	bne	11a78 <__mempcpy_chk@plt+0x928>
   11974:	movw	r0, #29028	; 0x7164
   11978:	movt	r0, #2
   1197c:	ldr	r0, [r0]
   11980:	bl	11054 <strlen@plt>
   11984:	cmp	r0, #1
   11988:	bne	11a78 <__mempcpy_chk@plt+0x928>
   1198c:	ldr	r1, [sp, #32]
   11990:	vldr	d16, [sp, #56]	; 0x38
   11994:	movw	r0, #24771	; 0x60c3
   11998:	movt	r0, #1
   1199c:	cmp	r1, #1
   119a0:	moveq	r6, r0
   119a4:	add	r0, r1, r4
   119a8:	add	r4, r9, r0, lsl #2
   119ac:	vmov	r0, r1, d16
   119b0:	bl	15a80 <__mempcpy_chk@plt+0x4930>
   119b4:	mov	r3, r1
   119b8:	ldr	r1, [r4, #-4]
   119bc:	mov	r2, r0
   119c0:	mov	r0, r6
   119c4:	bl	12200 <__mempcpy_chk@plt+0x10b0>
   119c8:	movw	r0, #29000	; 0x7148
   119cc:	movt	r0, #2
   119d0:	ldr	r4, [r0]
   119d4:	ldr	r6, [r9, r4, lsl #2]
   119d8:	b	11a78 <__mempcpy_chk@plt+0x928>
   119dc:	add	r1, r9, r4, lsl #2
   119e0:	ldr	r7, [r1, #4]
   119e4:	ldrb	r0, [r7]
   119e8:	sub	r0, r0, #48	; 0x30
   119ec:	cmp	r0, #9
   119f0:	bhi	11a78 <__mempcpy_chk@plt+0x928>
   119f4:	mov	r0, r7
   119f8:	str	r1, [sp, #12]
   119fc:	bl	11054 <strlen@plt>
   11a00:	movw	r1, #25281	; 0x62c1
   11a04:	str	r0, [sp, #16]
   11a08:	mov	r0, r7
   11a0c:	movt	r1, #1
   11a10:	bl	11144 <strspn@plt>
   11a14:	ldr	r1, [sp, #16]
   11a18:	cmp	r1, r0
   11a1c:	bne	11a78 <__mempcpy_chk@plt+0x928>
   11a20:	ldr	r0, [sp, #32]
   11a24:	cmp	r0, #3
   11a28:	bcc	11958 <__mempcpy_chk@plt+0x808>
   11a2c:	ldr	r0, [sp, #20]
   11a30:	cmp	r0, #0
   11a34:	beq	11a78 <__mempcpy_chk@plt+0x928>
   11a38:	ldr	r0, [sp, #12]
   11a3c:	ldr	r7, [r0, #8]
   11a40:	ldrb	r0, [r7]
   11a44:	sub	r0, r0, #48	; 0x30
   11a48:	cmp	r0, #9
   11a4c:	bhi	11a78 <__mempcpy_chk@plt+0x928>
   11a50:	mov	r0, r7
   11a54:	bl	11054 <strlen@plt>
   11a58:	movw	r1, #25281	; 0x62c1
   11a5c:	str	r0, [sp, #20]
   11a60:	mov	r0, r7
   11a64:	movt	r1, #1
   11a68:	bl	11144 <strspn@plt>
   11a6c:	ldr	r1, [sp, #20]
   11a70:	cmp	r1, r0
   11a74:	beq	11958 <__mempcpy_chk@plt+0x808>
   11a78:	add	r0, r4, #1
   11a7c:	movw	r4, #29000	; 0x7148
   11a80:	mov	r1, r6
   11a84:	movt	r4, #2
   11a88:	str	r0, [r4]
   11a8c:	add	r0, sp, #40	; 0x28
   11a90:	bl	1257c <__mempcpy_chk@plt+0x142c>
   11a94:	ldr	r0, [r4]
   11a98:	ldr	r7, [sp, #40]	; 0x28
   11a9c:	ldr	r6, [sp, #44]	; 0x2c
   11aa0:	ldr	r2, [sp, #48]	; 0x30
   11aa4:	ldr	r1, [sp, #52]	; 0x34
   11aa8:	cmp	r0, r5
   11aac:	bge	11b3c <__mempcpy_chk@plt+0x9ec>
   11ab0:	str	r2, [sp, #32]
   11ab4:	mov	r2, r9
   11ab8:	mov	r9, r1
   11abc:	add	r1, r0, #1
   11ac0:	str	r1, [r4]
   11ac4:	str	r2, [sp, #20]
   11ac8:	ldr	r1, [r2, r0, lsl #2]
   11acc:	add	r0, sp, #40	; 0x28
   11ad0:	bl	1257c <__mempcpy_chk@plt+0x142c>
   11ad4:	ldr	r0, [r4]
   11ad8:	ldr	r2, [sp, #40]	; 0x28
   11adc:	ldr	lr, [sp, #44]	; 0x2c
   11ae0:	ldr	ip, [sp, #48]	; 0x30
   11ae4:	ldr	r1, [sp, #52]	; 0x34
   11ae8:	cmp	r0, r5
   11aec:	bge	11b68 <__mempcpy_chk@plt+0xa18>
   11af0:	vmov	d16, r2, lr
   11af4:	str	ip, [sp, #64]	; 0x40
   11af8:	str	r2, [sp, #56]	; 0x38
   11afc:	str	r1, [sp, #68]	; 0x44
   11b00:	str	lr, [sp, #60]	; 0x3c
   11b04:	vcmp.f64	d16, #0.0
   11b08:	vmrs	APSR_nzcv, fpscr
   11b0c:	beq	121ac <__mempcpy_chk@plt+0x105c>
   11b10:	add	r1, r0, #1
   11b14:	str	r1, [r4]
   11b18:	ldr	r1, [sp, #20]
   11b1c:	ldr	r1, [r1, r0, lsl #2]
   11b20:	add	r0, sp, #40	; 0x28
   11b24:	bl	1257c <__mempcpy_chk@plt+0x142c>
   11b28:	ldr	r4, [sp, #40]	; 0x28
   11b2c:	ldr	lr, [sp, #44]	; 0x2c
   11b30:	ldr	ip, [sp, #48]	; 0x30
   11b34:	ldr	r1, [sp, #52]	; 0x34
   11b38:	b	11b6c <__mempcpy_chk@plt+0xa1c>
   11b3c:	movw	r9, #0
   11b40:	mov	ip, r2
   11b44:	mov	r5, #0
   11b48:	mov	r2, #1
   11b4c:	mov	r3, #0
   11b50:	mov	r4, r7
   11b54:	mov	lr, r6
   11b58:	movt	r9, #16368	; 0x3ff0
   11b5c:	b	11b84 <__mempcpy_chk@plt+0xa34>
   11b60:	andeq	r0, r0, r0
   11b64:	rsbmi	r0, r9, r0
   11b68:	mov	r4, r2
   11b6c:	ldr	r2, [sp, #32]
   11b70:	mov	r3, r9
   11b74:	cmp	r9, #0
   11b78:	mov	r5, r7
   11b7c:	mov	r9, r6
   11b80:	bne	11b9c <__mempcpy_chk@plt+0xa4c>
   11b84:	cmp	r1, #0
   11b88:	ldreq	r0, [sp, #68]	; 0x44
   11b8c:	cmpeq	r0, #0
   11b90:	beq	11dc8 <__mempcpy_chk@plt+0xc78>
   11b94:	mov	r7, r5
   11b98:	mov	r6, r9
   11b9c:	ldr	r9, [sp, #36]	; 0x24
   11ba0:	cmp	r9, #0
   11ba4:	bne	11bc8 <__mempcpy_chk@plt+0xa78>
   11ba8:	ldr	r0, [sp, #68]	; 0x44
   11bac:	movw	r9, #25506	; 0x63a2
   11bb0:	movt	r9, #1
   11bb4:	cmp	r3, r0
   11bb8:	movgt	r0, r3
   11bbc:	cmn	r1, #-2147483647	; 0x80000001
   11bc0:	cmnne	r0, #-2147483647	; 0x80000001
   11bc4:	bne	11ec0 <__mempcpy_chk@plt+0xd70>
   11bc8:	vldr	d8, [sp, #56]	; 0x38
   11bcc:	vmov	d9, r4, lr
   11bd0:	vmov	d10, r7, r6
   11bd4:	mov	r1, #0
   11bd8:	mov	r0, #0
   11bdc:	vcmpe.f64	d10, d9
   11be0:	vmrs	APSR_nzcv, fpscr
   11be4:	vcmpe.f64	d9, d10
   11be8:	movwmi	r1, #1
   11bec:	vmrs	APSR_nzcv, fpscr
   11bf0:	vcmpe.f64	d8, #0.0
   11bf4:	movwmi	r0, #1
   11bf8:	vmrs	APSR_nzcv, fpscr
   11bfc:	movmi	r0, r1
   11c00:	cmp	r0, #0
   11c04:	bne	11fa0 <__mempcpy_chk@plt+0xe50>
   11c08:	mov	r0, #1
   11c0c:	mov	r1, r9
   11c10:	mov	r2, r7
   11c14:	mov	r3, r6
   11c18:	bl	1109c <__printf_chk@plt>
   11c1c:	cmp	r0, #0
   11c20:	blt	11dc4 <__mempcpy_chk@plt+0xc74>
   11c24:	movw	r6, #29012	; 0x7154
   11c28:	vmov.f64	d11, #112	; 0x3f800000  1.0
   11c2c:	mov	r4, #0
   11c30:	mov	r7, #0
   11c34:	vorr	d14, d10, d10
   11c38:	movt	r6, #2
   11c3c:	vmov.f64	d12, d11
   11c40:	tst	r7, #1
   11c44:	bne	11f88 <__mempcpy_chk@plt+0xe38>
   11c48:	vmov.f64	d13, d10
   11c4c:	mov	r0, #0
   11c50:	mov	r7, #0
   11c54:	vmla.f64	d13, d8, d12
   11c58:	vcmpe.f64	d13, d9
   11c5c:	vmrs	APSR_nzcv, fpscr
   11c60:	vcmpe.f64	d8, #0.0
   11c64:	movwmi	r0, #1
   11c68:	movwgt	r7, #1
   11c6c:	vmrs	APSR_nzcv, fpscr
   11c70:	movmi	r7, r0
   11c74:	cmp	r7, #1
   11c78:	bne	11d88 <__mempcpy_chk@plt+0xc38>
   11c7c:	movw	r0, #29024	; 0x7160
   11c80:	movt	r0, #2
   11c84:	ldrb	r0, [r0]
   11c88:	cmp	r0, #0
   11c8c:	beq	11ca0 <__mempcpy_chk@plt+0xb50>
   11c90:	movw	r1, #25510	; 0x63a6
   11c94:	mov	r0, #1
   11c98:	movt	r1, #1
   11c9c:	bl	110e4 <setlocale@plt>
   11ca0:	add	r0, sp, #76	; 0x4c
   11ca4:	mov	r1, #1
   11ca8:	mov	r2, r9
   11cac:	vstr	d13, [sp]
   11cb0:	mov	r5, r9
   11cb4:	bl	10ff4 <__asprintf_chk@plt>
   11cb8:	mov	r9, r0
   11cbc:	movw	r0, #29024	; 0x7160
   11cc0:	movt	r0, #2
   11cc4:	ldrb	r0, [r0]
   11cc8:	cmp	r0, #0
   11ccc:	beq	11ce0 <__mempcpy_chk@plt+0xb90>
   11cd0:	movw	r1, #25201	; 0x6271
   11cd4:	mov	r0, #1
   11cd8:	movt	r1, #1
   11cdc:	bl	110e4 <setlocale@plt>
   11ce0:	cmn	r9, #1
   11ce4:	ble	11ebc <__mempcpy_chk@plt+0xd6c>
   11ce8:	ldr	r1, [sp, #76]	; 0x4c
   11cec:	sub	r0, r9, r8
   11cf0:	movw	r3, #10476	; 0x28ec
   11cf4:	add	r2, sp, #40	; 0x28
   11cf8:	movt	r3, #1
   11cfc:	strb	r4, [r1, r0]
   11d00:	mov	r1, #0
   11d04:	ldr	r0, [sp, #76]	; 0x4c
   11d08:	add	r0, r0, sl
   11d0c:	bl	15468 <__mempcpy_chk@plt+0x4318>
   11d10:	cmp	r0, #0
   11d14:	beq	11f80 <__mempcpy_chk@plt+0xe30>
   11d18:	vldr	d16, [sp, #40]	; 0x28
   11d1c:	vcmp.f64	d16, d9
   11d20:	vmrs	APSR_nzcv, fpscr
   11d24:	bne	11f80 <__mempcpy_chk@plt+0xe30>
   11d28:	add	r0, sp, #72	; 0x48
   11d2c:	mov	r1, #1
   11d30:	mov	r2, r5
   11d34:	str	r4, [sp, #72]	; 0x48
   11d38:	vstr	d14, [sp]
   11d3c:	mov	r9, r5
   11d40:	bl	10ff4 <__asprintf_chk@plt>
   11d44:	cmn	r0, #1
   11d48:	ble	11ebc <__mempcpy_chk@plt+0xd6c>
   11d4c:	ldr	r1, [sp, #72]	; 0x48
   11d50:	sub	r0, r0, r8
   11d54:	strb	r4, [r1, r0]
   11d58:	ldr	r5, [sp, #72]	; 0x48
   11d5c:	ldr	r1, [sp, #76]	; 0x4c
   11d60:	mov	r0, r5
   11d64:	bl	10ee0 <strcmp@plt>
   11d68:	mov	r4, r0
   11d6c:	mov	r0, r5
   11d70:	bl	12a78 <__mempcpy_chk@plt+0x1928>
   11d74:	ldr	r0, [sp, #76]	; 0x4c
   11d78:	bl	12a78 <__mempcpy_chk@plt+0x1928>
   11d7c:	cmp	r4, #0
   11d80:	beq	11f88 <__mempcpy_chk@plt+0xe38>
   11d84:	mov	r4, #0
   11d88:	movw	r0, #29028	; 0x7164
   11d8c:	ldr	r1, [r6]
   11d90:	movt	r0, #2
   11d94:	ldr	r0, [r0]
   11d98:	bl	10ec8 <fputs_unlocked@plt>
   11d9c:	cmn	r0, #1
   11da0:	beq	11dc4 <__mempcpy_chk@plt+0xc74>
   11da4:	vmov	r2, r3, d13
   11da8:	mov	r0, #1
   11dac:	mov	r1, r9
   11db0:	bl	1109c <__printf_chk@plt>
   11db4:	vadd.f64	d12, d12, d11
   11db8:	cmp	r0, #0
   11dbc:	vorr	d14, d13, d13
   11dc0:	bge	11c40 <__mempcpy_chk@plt+0xaf0>
   11dc4:	bl	128a8 <__mempcpy_chk@plt+0x1758>
   11dc8:	vmov	d9, r5, r9
   11dcc:	vcmpe.f64	d9, #0.0
   11dd0:	vmrs	APSR_nzcv, fpscr
   11dd4:	blt	11b94 <__mempcpy_chk@plt+0xa44>
   11dd8:	vmov.i32	d16, #0	; 0x00000000
   11ddc:	vmul.f64	d16, d9, d16
   11de0:	vcmp.f64	d16, #0.0
   11de4:	vmrs	APSR_nzcv, fpscr
   11de8:	bne	11b94 <__mempcpy_chk@plt+0xa44>
   11dec:	vmov	d8, r4, lr
   11df0:	vcmpe.f64	d8, #0.0
   11df4:	vmrs	APSR_nzcv, fpscr
   11df8:	blt	11b94 <__mempcpy_chk@plt+0xa44>
   11dfc:	vldr	d16, [sp, #56]	; 0x38
   11e00:	vcmpe.f64	d16, #0.0
   11e04:	vmrs	APSR_nzcv, fpscr
   11e08:	ble	11b94 <__mempcpy_chk@plt+0xa44>
   11e0c:	vldr	d17, [pc, #996]	; 121f8 <__mempcpy_chk@plt+0x10a8>
   11e10:	vcmpe.f64	d16, d17
   11e14:	vmrs	APSR_nzcv, fpscr
   11e18:	bhi	11b94 <__mempcpy_chk@plt+0xa44>
   11e1c:	movw	r0, #29025	; 0x7161
   11e20:	str	r1, [sp, #20]
   11e24:	ldr	r1, [sp, #24]
   11e28:	movt	r0, #2
   11e2c:	ldrb	r0, [r0]
   11e30:	orr	r0, r1, r0
   11e34:	tst	r0, #1
   11e38:	bne	11fe8 <__mempcpy_chk@plt+0xe98>
   11e3c:	movw	r0, #29028	; 0x7164
   11e40:	str	ip, [sp, #12]
   11e44:	str	r2, [sp, #32]
   11e48:	str	r3, [sp, #16]
   11e4c:	str	lr, [sp, #24]
   11e50:	str	r4, [sp, #28]
   11e54:	movt	r0, #2
   11e58:	ldr	r0, [r0]
   11e5c:	bl	11054 <strlen@plt>
   11e60:	cmp	r0, #1
   11e64:	bne	12054 <__mempcpy_chk@plt+0xf04>
   11e68:	movw	r2, #24806	; 0x60e6
   11e6c:	add	r0, sp, #40	; 0x28
   11e70:	mov	r1, #1
   11e74:	vstr	d9, [sp]
   11e78:	movt	r2, #1
   11e7c:	bl	10ff4 <__asprintf_chk@plt>
   11e80:	cmn	r0, #1
   11e84:	ble	11ebc <__mempcpy_chk@plt+0xd6c>
   11e88:	vmov.i32	d16, #0	; 0x00000000
   11e8c:	vmul.f64	d16, d8, d16
   11e90:	vcmp.f64	d16, #0.0
   11e94:	vmrs	APSR_nzcv, fpscr
   11e98:	bne	11ff0 <__mempcpy_chk@plt+0xea0>
   11e9c:	movw	r2, #24806	; 0x60e6
   11ea0:	add	r0, sp, #76	; 0x4c
   11ea4:	mov	r1, #1
   11ea8:	vstr	d8, [sp]
   11eac:	movt	r2, #1
   11eb0:	bl	10ff4 <__asprintf_chk@plt>
   11eb4:	cmn	r0, #1
   11eb8:	bgt	12000 <__mempcpy_chk@plt+0xeb0>
   11ebc:	bl	15424 <__mempcpy_chk@plt+0x42d4>
   11ec0:	str	r4, [sp, #28]
   11ec4:	mov	r4, r1
   11ec8:	movw	r1, #29025	; 0x7161
   11ecc:	movt	r1, #2
   11ed0:	ldrb	r1, [r1]
   11ed4:	cmp	r1, #1
   11ed8:	bne	11fb4 <__mempcpy_chk@plt+0xe64>
   11edc:	sub	r1, r2, r3
   11ee0:	clz	r3, r3
   11ee4:	cmp	r0, #0
   11ee8:	mov	r2, r0
   11eec:	clz	r5, r4
   11ef0:	movwne	r2, #1
   11ef4:	lsr	r3, r3, #5
   11ef8:	add	r1, r1, r0
   11efc:	cmp	r4, #0
   11f00:	lsr	r5, r5, #5
   11f04:	and	r3, r3, r2
   11f08:	and	r2, r5, r2
   11f0c:	add	r3, r1, r3
   11f10:	mov	r1, ip
   11f14:	mov	ip, r4
   11f18:	sub	r1, r1, r4
   11f1c:	clz	r4, r0
   11f20:	movwne	ip, #1
   11f24:	lsr	r4, r4, #5
   11f28:	add	r1, r1, r0
   11f2c:	and	r4, ip, r4
   11f30:	sub	r1, r1, r4
   11f34:	ldr	r4, [sp, #28]
   11f38:	add	r1, r1, r2
   11f3c:	cmp	r3, r1
   11f40:	movhi	r1, r3
   11f44:	cmp	r1, #0
   11f48:	blt	11bc8 <__mempcpy_chk@plt+0xa78>
   11f4c:	movw	r9, #29032	; 0x7168
   11f50:	movw	r3, #25487	; 0x638f
   11f54:	str	r1, [sp]
   11f58:	str	r0, [sp, #4]
   11f5c:	mov	r1, #1
   11f60:	mov	r2, #28
   11f64:	mov	r5, lr
   11f68:	movt	r9, #2
   11f6c:	movt	r3, #1
   11f70:	mov	r0, r9
   11f74:	bl	11078 <__sprintf_chk@plt>
   11f78:	mov	lr, r5
   11f7c:	b	11bc8 <__mempcpy_chk@plt+0xa78>
   11f80:	ldr	r0, [sp, #76]	; 0x4c
   11f84:	bl	12a78 <__mempcpy_chk@plt+0x1928>
   11f88:	ldr	r1, [r6]
   11f8c:	movw	r0, #25528	; 0x63b8
   11f90:	movt	r0, #1
   11f94:	bl	10ec8 <fputs_unlocked@plt>
   11f98:	cmn	r0, #1
   11f9c:	beq	11dc4 <__mempcpy_chk@plt+0xc74>
   11fa0:	mov	r0, #0
   11fa4:	sub	sp, fp, #88	; 0x58
   11fa8:	vpop	{d8-d14}
   11fac:	add	sp, sp, #4
   11fb0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   11fb4:	movw	r9, #29032	; 0x7168
   11fb8:	movw	r3, #25498	; 0x639a
   11fbc:	str	r0, [sp]
   11fc0:	mov	r1, #1
   11fc4:	mov	r2, #28
   11fc8:	mov	r5, lr
   11fcc:	movt	r9, #2
   11fd0:	movt	r3, #1
   11fd4:	mov	r0, r9
   11fd8:	bl	11078 <__sprintf_chk@plt>
   11fdc:	ldr	r4, [sp, #28]
   11fe0:	mov	lr, r5
   11fe4:	b	11bc8 <__mempcpy_chk@plt+0xa78>
   11fe8:	ldr	r1, [sp, #20]
   11fec:	b	11b94 <__mempcpy_chk@plt+0xa44>
   11ff0:	movw	r0, #24812	; 0x60ec
   11ff4:	movt	r0, #1
   11ff8:	bl	153e4 <__mempcpy_chk@plt+0x4294>
   11ffc:	str	r0, [sp, #76]	; 0x4c
   12000:	ldr	r7, [sp, #40]	; 0x28
   12004:	ldrb	r0, [r7]
   12008:	cmp	r0, #45	; 0x2d
   1200c:	beq	12044 <__mempcpy_chk@plt+0xef4>
   12010:	ldr	r6, [sp, #76]	; 0x4c
   12014:	ldrb	r0, [r6]
   12018:	cmp	r0, #45	; 0x2d
   1201c:	beq	12044 <__mempcpy_chk@plt+0xef4>
   12020:	vldr	d16, [sp, #56]	; 0x38
   12024:	vmov	r0, r1, d16
   12028:	bl	15a80 <__mempcpy_chk@plt+0x4930>
   1202c:	mov	r2, r0
   12030:	mov	r3, r1
   12034:	mov	r0, r7
   12038:	mov	r1, r6
   1203c:	bl	12200 <__mempcpy_chk@plt+0x10b0>
   12040:	ldr	r7, [sp, #40]	; 0x28
   12044:	mov	r0, r7
   12048:	bl	12a78 <__mempcpy_chk@plt+0x1928>
   1204c:	ldr	r0, [sp, #76]	; 0x4c
   12050:	bl	12a78 <__mempcpy_chk@plt+0x1928>
   12054:	ldr	r4, [sp, #28]
   12058:	ldr	lr, [sp, #24]
   1205c:	ldr	r3, [sp, #16]
   12060:	ldr	r2, [sp, #32]
   12064:	ldr	r1, [sp, #20]
   12068:	ldr	ip, [sp, #12]
   1206c:	b	11b94 <__mempcpy_chk@plt+0xa44>
   12070:	movw	r1, #25359	; 0x630f
   12074:	movt	r1, #1
   12078:	mov	r0, #0
   1207c:	mov	r2, #5
   12080:	bl	10f70 <dcgettext@plt>
   12084:	mov	r4, r0
   12088:	mov	r0, r7
   1208c:	bl	146d4 <__mempcpy_chk@plt+0x3584>
   12090:	mov	r3, r0
   12094:	mov	r0, #1
   12098:	mov	r1, #0
   1209c:	mov	r2, r4
   120a0:	bl	10fe8 <error@plt>
   120a4:	cmn	r0, #3
   120a8:	bne	120f4 <__mempcpy_chk@plt+0xfa4>
   120ac:	movw	r0, #28920	; 0x70f8
   120b0:	movw	r2, #24654	; 0x604e
   120b4:	mov	r1, #0
   120b8:	movt	r0, #2
   120bc:	movt	r2, #1
   120c0:	str	r1, [sp, #4]
   120c4:	movw	r1, #24605	; 0x601d
   120c8:	ldr	r3, [r0]
   120cc:	movw	r0, #29012	; 0x7154
   120d0:	str	r2, [sp]
   120d4:	movw	r2, #24640	; 0x6040
   120d8:	movt	r1, #1
   120dc:	movt	r0, #2
   120e0:	movt	r2, #1
   120e4:	ldr	r0, [r0]
   120e8:	bl	14c90 <__mempcpy_chk@plt+0x3b40>
   120ec:	mov	r0, #0
   120f0:	bl	11048 <exit@plt>
   120f4:	cmn	r0, #2
   120f8:	bne	1213c <__mempcpy_chk@plt+0xfec>
   120fc:	mov	r0, #0
   12100:	bl	11250 <__mempcpy_chk@plt+0x100>
   12104:	movw	r1, #24669	; 0x605d
   12108:	movt	r1, #1
   1210c:	b	12188 <__mempcpy_chk@plt+0x1038>
   12110:	movw	r1, #24685	; 0x606d
   12114:	mov	r0, #0
   12118:	mov	r2, #5
   1211c:	movt	r1, #1
   12120:	bl	10f70 <dcgettext@plt>
   12124:	mov	r1, r4
   12128:	mov	r4, r0
   1212c:	ldr	r0, [r1]
   12130:	add	r0, r9, r0, lsl #2
   12134:	ldr	r0, [r0, #12]
   12138:	b	121d8 <__mempcpy_chk@plt+0x1088>
   1213c:	mov	r0, #1
   12140:	bl	11250 <__mempcpy_chk@plt+0x100>
   12144:	movw	r1, #25292	; 0x62cc
   12148:	movt	r1, #1
   1214c:	b	12078 <__mempcpy_chk@plt+0xf28>
   12150:	movw	r1, #25322	; 0x62ea
   12154:	mov	r0, #0
   12158:	mov	r2, #5
   1215c:	movt	r1, #1
   12160:	bl	10f70 <dcgettext@plt>
   12164:	mov	r4, r0
   12168:	mov	r0, r7
   1216c:	bl	146d4 <__mempcpy_chk@plt+0x3584>
   12170:	mov	r3, r0
   12174:	ldrb	r0, [r7, r5]
   12178:	str	r0, [sp]
   1217c:	b	12094 <__mempcpy_chk@plt+0xf44>
   12180:	movw	r1, #24702	; 0x607e
   12184:	movt	r1, #1
   12188:	mov	r0, #0
   1218c:	mov	r2, #5
   12190:	bl	10f70 <dcgettext@plt>
   12194:	mov	r2, r0
   12198:	mov	r0, #0
   1219c:	mov	r1, #0
   121a0:	bl	10fe8 <error@plt>
   121a4:	mov	r0, #1
   121a8:	bl	11250 <__mempcpy_chk@plt+0x100>
   121ac:	movw	r1, #24773	; 0x60c5
   121b0:	mov	r0, #0
   121b4:	mov	r2, #5
   121b8:	movt	r1, #1
   121bc:	bl	10f70 <dcgettext@plt>
   121c0:	mov	r1, r4
   121c4:	mov	r4, r0
   121c8:	ldr	r0, [r1]
   121cc:	ldr	r1, [sp, #20]
   121d0:	add	r0, r1, r0, lsl #2
   121d4:	ldr	r0, [r0, #-4]
   121d8:	bl	146d4 <__mempcpy_chk@plt+0x3584>
   121dc:	mov	r3, r0
   121e0:	mov	r0, #0
   121e4:	mov	r1, #0
   121e8:	mov	r2, r4
   121ec:	bl	10fe8 <error@plt>
   121f0:	mov	r0, #1
   121f4:	bl	11250 <__mempcpy_chk@plt+0x100>
   121f8:	andeq	r0, r0, r0
   121fc:	rsbmi	r0, r9, r0
   12200:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12204:	add	fp, sp, #28
   12208:	sub	sp, sp, #44	; 0x2c
   1220c:	mov	sl, r1
   12210:	movw	r1, #24812	; 0x60ec
   12214:	mov	r6, r0
   12218:	str	r3, [sp, #28]
   1221c:	str	r2, [sp, #24]
   12220:	movt	r1, #1
   12224:	mov	r0, sl
   12228:	bl	10ee0 <strcmp@plt>
   1222c:	str	r0, [sp, #20]
   12230:	mov	r0, #0
   12234:	b	12240 <__mempcpy_chk@plt+0x10f0>
   12238:	sub	r0, r0, #1
   1223c:	add	r6, r6, #1
   12240:	ldrb	r1, [r6]
   12244:	cmp	r1, #48	; 0x30
   12248:	beq	12238 <__mempcpy_chk@plt+0x10e8>
   1224c:	cmp	r1, #0
   12250:	bne	1225c <__mempcpy_chk@plt+0x110c>
   12254:	cmp	r0, #0
   12258:	subne	r6, r6, #1
   1225c:	mov	r0, #0
   12260:	b	1226c <__mempcpy_chk@plt+0x111c>
   12264:	sub	r0, r0, #1
   12268:	add	sl, sl, #1
   1226c:	ldrb	r1, [sl]
   12270:	cmp	r1, #48	; 0x30
   12274:	beq	12264 <__mempcpy_chk@plt+0x1114>
   12278:	cmp	r1, #0
   1227c:	bne	12288 <__mempcpy_chk@plt+0x1138>
   12280:	cmp	r0, #0
   12284:	subne	sl, sl, #1
   12288:	mov	r0, r6
   1228c:	bl	11054 <strlen@plt>
   12290:	mov	r7, r0
   12294:	mov	r0, #0
   12298:	str	r0, [sp]
   1229c:	ldr	r0, [sp, #20]
   122a0:	cmp	r0, #0
   122a4:	mov	r0, #0
   122a8:	beq	122b4 <__mempcpy_chk@plt+0x1164>
   122ac:	mov	r0, sl
   122b0:	bl	11054 <strlen@plt>
   122b4:	add	r4, r7, #1
   122b8:	mov	r5, r0
   122bc:	str	r0, [sp, #36]	; 0x24
   122c0:	cmp	r4, r0
   122c4:	movhi	r5, r4
   122c8:	cmp	r5, #31
   122cc:	movls	r5, #31
   122d0:	add	r8, r5, #1
   122d4:	mov	r0, r8
   122d8:	bl	14ec4 <__mempcpy_chk@plt+0x3d74>
   122dc:	str	r0, [sp, #16]
   122e0:	add	r0, r0, r5
   122e4:	mov	r1, r6
   122e8:	mov	r2, r4
   122ec:	mov	r4, r8
   122f0:	ldr	r6, [sp, #36]	; 0x24
   122f4:	sub	r9, r0, r7
   122f8:	mov	r0, r9
   122fc:	bl	10f34 <memcpy@plt>
   12300:	ldr	r0, [sp, #20]
   12304:	cmp	r0, #0
   12308:	beq	12358 <__mempcpy_chk@plt+0x1208>
   1230c:	mov	r0, r4
   12310:	bl	14ec4 <__mempcpy_chk@plt+0x3d74>
   12314:	mov	r8, r0
   12318:	add	r0, r0, r5
   1231c:	add	r2, r6, #1
   12320:	mov	r1, sl
   12324:	sub	r0, r0, r6
   12328:	str	r0, [sp]
   1232c:	bl	10f34 <memcpy@plt>
   12330:	cmp	r7, r6
   12334:	bcc	12358 <__mempcpy_chk@plt+0x1208>
   12338:	cmp	r6, r7
   1233c:	bcc	12564 <__mempcpy_chk@plt+0x1414>
   12340:	ldr	r1, [sp]
   12344:	mov	r0, r9
   12348:	mov	r2, r7
   1234c:	bl	10f64 <memcmp@plt>
   12350:	cmp	r0, #0
   12354:	bgt	12564 <__mempcpy_chk@plt+0x1414>
   12358:	lsl	r0, r4, #1
   1235c:	mov	r1, r4
   12360:	mov	r4, #8192	; 0x2000
   12364:	str	r5, [fp, #-32]	; 0xffffffe0
   12368:	cmp	r0, #8192	; 0x2000
   1236c:	lslhi	r4, r1, #1
   12370:	mov	r0, r4
   12374:	bl	14ec4 <__mempcpy_chk@plt+0x3d74>
   12378:	add	r1, r0, r4
   1237c:	str	r4, [sp, #4]
   12380:	mov	r2, r7
   12384:	mvn	r3, #0
   12388:	str	r1, [sp, #32]
   1238c:	mov	r1, r9
   12390:	str	r0, [sp, #12]
   12394:	bl	11150 <__mempcpy_chk@plt>
   12398:	mov	sl, r0
   1239c:	ldr	r0, [sp, #28]
   123a0:	ldr	r1, [sp, #24]
   123a4:	mov	r5, #48	; 0x30
   123a8:	mov	r8, #49	; 0x31
   123ac:	orr	r0, r1, r0
   123b0:	str	r0, [sp, #8]
   123b4:	ldr	r0, [sp, #8]
   123b8:	ldr	r1, [sp, #28]
   123bc:	cmp	r0, #0
   123c0:	ldr	r0, [sp, #24]
   123c4:	beq	1240c <__mempcpy_chk@plt+0x12bc>
   123c8:	sub	r2, r9, #1
   123cc:	add	r3, r2, r7
   123d0:	ldrb	r4, [r3]
   123d4:	add	r6, r4, #1
   123d8:	cmp	r4, #57	; 0x39
   123dc:	strb	r6, [r3]
   123e0:	bcc	123fc <__mempcpy_chk@plt+0x12ac>
   123e4:	strb	r5, [r3], #-1
   123e8:	cmp	r3, r9
   123ec:	bcs	123d0 <__mempcpy_chk@plt+0x1280>
   123f0:	add	r7, r7, #1
   123f4:	mov	r9, r2
   123f8:	strb	r8, [r2]
   123fc:	subs	r0, r0, #1
   12400:	sbc	r1, r1, #0
   12404:	orrs	r2, r0, r1
   12408:	bne	123c8 <__mempcpy_chk@plt+0x1278>
   1240c:	ldr	r0, [sp, #20]
   12410:	cmp	r0, #0
   12414:	beq	12448 <__mempcpy_chk@plt+0x12f8>
   12418:	ldr	r0, [sp, #36]	; 0x24
   1241c:	cmp	r7, r0
   12420:	bcc	12448 <__mempcpy_chk@plt+0x12f8>
   12424:	ldr	r0, [sp, #36]	; 0x24
   12428:	cmp	r0, r7
   1242c:	bcc	1252c <__mempcpy_chk@plt+0x13dc>
   12430:	ldr	r1, [sp]
   12434:	mov	r0, r9
   12438:	mov	r2, r7
   1243c:	bl	10f64 <memcmp@plt>
   12440:	cmp	r0, #0
   12444:	bgt	1252c <__mempcpy_chk@plt+0x13dc>
   12448:	movw	r0, #29028	; 0x7164
   1244c:	ldr	r6, [fp, #-32]	; 0xffffffe0
   12450:	movt	r0, #2
   12454:	ldr	r0, [r0]
   12458:	cmp	r7, r6
   1245c:	ldrb	r0, [r0]
   12460:	strb	r0, [sl], #1
   12464:	bne	124d0 <__mempcpy_chk@plt+0x1380>
   12468:	mov	r0, #1
   1246c:	orr	r4, r0, r6, lsl #1
   12470:	ldr	r0, [sp, #16]
   12474:	mov	r1, r4
   12478:	bl	14f0c <__mempcpy_chk@plt+0x3dbc>
   1247c:	add	r9, r0, r6
   12480:	mov	r1, r0
   12484:	add	r2, r6, #1
   12488:	mov	r0, r9
   1248c:	str	r1, [sp, #16]
   12490:	bl	10f10 <memmove@plt>
   12494:	lsl	r6, r6, #1
   12498:	str	r6, [fp, #-32]	; 0xffffffe0
   1249c:	ldr	r0, [sp, #4]
   124a0:	cmp	r0, r4, lsl #1
   124a4:	bcs	124d0 <__mempcpy_chk@plt+0x1380>
   124a8:	ldr	r0, [sp, #12]
   124ac:	lsl	r6, r4, #1
   124b0:	mov	r1, r6
   124b4:	sub	r4, sl, r0
   124b8:	bl	14f0c <__mempcpy_chk@plt+0x3dbc>
   124bc:	add	sl, r0, r4
   124c0:	str	r6, [sp, #4]
   124c4:	str	r0, [sp, #12]
   124c8:	add	r0, r0, r6
   124cc:	str	r0, [sp, #32]
   124d0:	mov	r0, sl
   124d4:	mov	r1, r9
   124d8:	mov	r2, r7
   124dc:	mvn	r3, #0
   124e0:	bl	11150 <__mempcpy_chk@plt>
   124e4:	ldr	r1, [sp, #32]
   124e8:	mov	sl, r0
   124ec:	mvn	r0, r7
   124f0:	add	r0, r1, r0
   124f4:	cmp	r0, sl
   124f8:	bcs	123b4 <__mempcpy_chk@plt+0x1264>
   124fc:	movw	r0, #29012	; 0x7154
   12500:	ldr	r4, [sp, #12]
   12504:	mov	r2, #1
   12508:	movt	r0, #2
   1250c:	ldr	r3, [r0]
   12510:	sub	r1, sl, r4
   12514:	mov	r0, r4
   12518:	bl	10f58 <fwrite_unlocked@plt>
   1251c:	cmp	r0, #1
   12520:	mov	sl, r4
   12524:	beq	123b4 <__mempcpy_chk@plt+0x1264>
   12528:	b	12560 <__mempcpy_chk@plt+0x1410>
   1252c:	movw	r2, #29012	; 0x7154
   12530:	mov	r0, #10
   12534:	strb	r0, [sl], #1
   12538:	ldr	r0, [sp, #12]
   1253c:	movt	r2, #2
   12540:	ldr	r3, [r2]
   12544:	mov	r2, #1
   12548:	sub	r1, sl, r0
   1254c:	bl	10f58 <fwrite_unlocked@plt>
   12550:	cmp	r0, #1
   12554:	bne	12560 <__mempcpy_chk@plt+0x1410>
   12558:	mov	r0, #0
   1255c:	bl	11048 <exit@plt>
   12560:	bl	128a8 <__mempcpy_chk@plt+0x1758>
   12564:	ldr	r0, [sp, #16]
   12568:	bl	12a78 <__mempcpy_chk@plt+0x1928>
   1256c:	mov	r0, r8
   12570:	sub	sp, fp, #28
   12574:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12578:	b	12a78 <__mempcpy_chk@plt+0x1928>
   1257c:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12580:	add	fp, sp, #28
   12584:	sub	sp, sp, #4
   12588:	vpush	{d8}
   1258c:	sub	sp, sp, #16
   12590:	mov	r4, r0
   12594:	movw	r3, #10476	; 0x28ec
   12598:	mov	r5, r1
   1259c:	mov	r0, r1
   125a0:	mov	r1, #0
   125a4:	movt	r3, #1
   125a8:	mov	r2, r4
   125ac:	bl	15468 <__mempcpy_chk@plt+0x4318>
   125b0:	cmp	r0, #0
   125b4:	beq	1281c <__mempcpy_chk@plt+0x16cc>
   125b8:	vldr	d8, [r4]
   125bc:	vcmpe.f64	d8, d8
   125c0:	vmrs	APSR_nzcv, fpscr
   125c4:	bvs	12850 <__mempcpy_chk@plt+0x1700>
   125c8:	sub	r5, r5, #1
   125cc:	bl	1103c <__ctype_b_loc@plt>
   125d0:	ldr	r0, [r0]
   125d4:	ldrb	r2, [r5, #1]!
   125d8:	add	r1, r0, r2, lsl #1
   125dc:	cmp	r2, #43	; 0x2b
   125e0:	ldrh	r1, [r1]
   125e4:	and	r1, r1, #8192	; 0x2000
   125e8:	beq	125d4 <__mempcpy_chk@plt+0x1484>
   125ec:	cmp	r1, #0
   125f0:	bne	125d4 <__mempcpy_chk@plt+0x1484>
   125f4:	mvn	r1, #-2147483648	; 0x80000000
   125f8:	mov	r0, #0
   125fc:	strd	r0, [r4, #8]
   12600:	mov	r0, r5
   12604:	mov	r1, #46	; 0x2e
   12608:	bl	11060 <strchr@plt>
   1260c:	mov	r9, r0
   12610:	cmp	r0, #0
   12614:	bne	12630 <__mempcpy_chk@plt+0x14e0>
   12618:	mov	r0, r5
   1261c:	mov	r1, #112	; 0x70
   12620:	bl	11060 <strchr@plt>
   12624:	cmp	r0, #0
   12628:	moveq	r0, #0
   1262c:	streq	r0, [r4, #12]
   12630:	movw	r1, #25481	; 0x6389
   12634:	mov	r0, r5
   12638:	movt	r1, #1
   1263c:	bl	10ef8 <strcspn@plt>
   12640:	vmov.i32	d16, #0	; 0x00000000
   12644:	vmul.f64	d16, d8, d16
   12648:	vcmp.f64	d16, #0.0
   1264c:	vmrs	APSR_nzcv, fpscr
   12650:	ldrbeq	r0, [r5, r0]
   12654:	cmpeq	r0, #0
   12658:	bne	1280c <__mempcpy_chk@plt+0x16bc>
   1265c:	mov	r0, r5
   12660:	bl	11054 <strlen@plt>
   12664:	cmp	r9, #0
   12668:	str	r0, [r4, #8]
   1266c:	beq	126b8 <__mempcpy_chk@plt+0x1568>
   12670:	movw	r1, #25484	; 0x638c
   12674:	mov	r6, r0
   12678:	add	r0, r9, #1
   1267c:	movt	r1, #1
   12680:	bl	10ef8 <strcspn@plt>
   12684:	mov	r8, r0
   12688:	cmp	r0, #0
   1268c:	blt	12698 <__mempcpy_chk@plt+0x1548>
   12690:	str	r8, [r4, #12]
   12694:	beq	126c8 <__mempcpy_chk@plt+0x1578>
   12698:	cmp	r9, r5
   1269c:	beq	126c0 <__mempcpy_chk@plt+0x1570>
   126a0:	ldrb	r0, [r9, #-1]
   126a4:	sub	r1, r0, #48	; 0x30
   126a8:	mov	r0, #0
   126ac:	cmp	r1, #9
   126b0:	movwhi	r0, #1
   126b4:	b	126cc <__mempcpy_chk@plt+0x157c>
   126b8:	mov	r8, #0
   126bc:	b	126d4 <__mempcpy_chk@plt+0x1584>
   126c0:	mov	r0, #1
   126c4:	b	126cc <__mempcpy_chk@plt+0x157c>
   126c8:	mvn	r0, #0
   126cc:	add	r0, r0, r6
   126d0:	str	r0, [r4, #8]
   126d4:	mov	r0, r5
   126d8:	mov	r1, #101	; 0x65
   126dc:	bl	11060 <strchr@plt>
   126e0:	mov	r6, r0
   126e4:	cmp	r0, #0
   126e8:	bne	12704 <__mempcpy_chk@plt+0x15b4>
   126ec:	mov	r0, r5
   126f0:	mov	r1, #69	; 0x45
   126f4:	bl	11060 <strchr@plt>
   126f8:	mov	r6, r0
   126fc:	cmp	r0, #0
   12700:	beq	1280c <__mempcpy_chk@plt+0x16bc>
   12704:	add	r7, r6, #1
   12708:	mov	r1, #0
   1270c:	mov	r2, #10
   12710:	mov	r0, r7
   12714:	bl	10eec <strtol@plt>
   12718:	mov	sl, #-2147483647	; 0x80000001
   1271c:	cmp	r0, #-2147483646	; 0x80000002
   12720:	str	r8, [sp, #8]
   12724:	blt	12760 <__mempcpy_chk@plt+0x1610>
   12728:	mov	r0, r7
   1272c:	mov	r1, #0
   12730:	mov	r2, #10
   12734:	bl	10eec <strtol@plt>
   12738:	mov	sl, r0
   1273c:	cmp	r0, #0
   12740:	blt	12770 <__mempcpy_chk@plt+0x1620>
   12744:	ldr	r1, [r4, #12]
   12748:	mov	r0, sl
   1274c:	cmp	r1, sl
   12750:	movlt	r0, r1
   12754:	mov	r1, #0
   12758:	str	r1, [sp, #12]
   1275c:	b	1277c <__mempcpy_chk@plt+0x162c>
   12760:	mov	r0, #1
   12764:	str	r0, [sp, #12]
   12768:	mov	r0, #-2147483647	; 0x80000001
   1276c:	b	1277c <__mempcpy_chk@plt+0x162c>
   12770:	mov	r0, #1
   12774:	str	r0, [sp, #12]
   12778:	mov	r0, sl
   1277c:	ldr	r1, [r4, #12]
   12780:	sub	r8, r6, r5
   12784:	sub	r7, r1, r0
   12788:	mov	r0, r5
   1278c:	str	r7, [r4, #12]
   12790:	bl	11054 <strlen@plt>
   12794:	ldr	r1, [r4, #8]
   12798:	sub	r0, r8, r0
   1279c:	add	r0, r0, r1
   127a0:	ldr	r1, [sp, #12]
   127a4:	str	r0, [r4, #8]
   127a8:	cmp	r1, #0
   127ac:	beq	127d0 <__mempcpy_chk@plt+0x1680>
   127b0:	cmp	r9, #0
   127b4:	addne	r1, r9, #1
   127b8:	cmpne	r6, r1
   127bc:	bne	127c8 <__mempcpy_chk@plt+0x1678>
   127c0:	add	r0, r0, #1
   127c4:	str	r0, [r4, #8]
   127c8:	rsb	r1, sl, #0
   127cc:	b	12804 <__mempcpy_chk@plt+0x16b4>
   127d0:	cmp	r9, #0
   127d4:	beq	127f4 <__mempcpy_chk@plt+0x16a4>
   127d8:	ldr	r1, [sp, #8]
   127dc:	cmp	r1, #0
   127e0:	beq	127f8 <__mempcpy_chk@plt+0x16a8>
   127e4:	cmp	r7, #0
   127e8:	subeq	r0, r0, #1
   127ec:	streq	r0, [r4, #8]
   127f0:	b	127f8 <__mempcpy_chk@plt+0x16a8>
   127f4:	ldr	r1, [sp, #8]
   127f8:	cmp	r1, sl
   127fc:	movcs	r1, sl
   12800:	sub	r1, sl, r1
   12804:	add	r0, r0, r1
   12808:	str	r0, [r4, #8]
   1280c:	sub	sp, fp, #40	; 0x28
   12810:	vpop	{d8}
   12814:	add	sp, sp, #4
   12818:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   1281c:	movw	r1, #25408	; 0x6340
   12820:	mov	r0, #0
   12824:	mov	r2, #5
   12828:	movt	r1, #1
   1282c:	bl	10f70 <dcgettext@plt>
   12830:	mov	r4, r0
   12834:	mov	r0, r5
   12838:	bl	146d4 <__mempcpy_chk@plt+0x3584>
   1283c:	mov	r3, r0
   12840:	mov	r0, #0
   12844:	mov	r1, #0
   12848:	mov	r2, r4
   1284c:	b	1289c <__mempcpy_chk@plt+0x174c>
   12850:	movw	r1, #25444	; 0x6364
   12854:	mov	r0, #0
   12858:	mov	r2, #5
   1285c:	movt	r1, #1
   12860:	bl	10f70 <dcgettext@plt>
   12864:	movw	r1, #25468	; 0x637c
   12868:	mov	r4, r0
   1286c:	mov	r0, #0
   12870:	movt	r1, #1
   12874:	bl	146c4 <__mempcpy_chk@plt+0x3574>
   12878:	mov	r6, r0
   1287c:	mov	r0, #1
   12880:	mov	r1, r5
   12884:	bl	146c4 <__mempcpy_chk@plt+0x3574>
   12888:	str	r0, [sp]
   1288c:	mov	r0, #0
   12890:	mov	r1, #0
   12894:	mov	r2, r4
   12898:	mov	r3, r6
   1289c:	bl	10fe8 <error@plt>
   128a0:	mov	r0, #1
   128a4:	bl	11250 <__mempcpy_chk@plt+0x100>
   128a8:	push	{fp, lr}
   128ac:	mov	fp, sp
   128b0:	movw	r0, #29012	; 0x7154
   128b4:	movt	r0, #2
   128b8:	ldr	r0, [r0]
   128bc:	bl	11114 <clearerr_unlocked@plt>
   128c0:	bl	1106c <__errno_location@plt>
   128c4:	ldr	r4, [r0]
   128c8:	movw	r1, #25396	; 0x6334
   128cc:	mov	r0, #0
   128d0:	mov	r2, #5
   128d4:	movt	r1, #1
   128d8:	bl	10f70 <dcgettext@plt>
   128dc:	mov	r2, r0
   128e0:	mov	r0, #1
   128e4:	mov	r1, r4
   128e8:	bl	10fe8 <error@plt>
   128ec:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   128f0:	add	fp, sp, #24
   128f4:	vpush	{d8}
   128f8:	sub	sp, sp, #8
   128fc:	mov	r4, r1
   12900:	add	r1, sp, #4
   12904:	mov	r5, r0
   12908:	bl	10f4c <strtold@plt>
   1290c:	ldr	r7, [sp, #4]
   12910:	vmov.f64	d8, d0
   12914:	ldrb	r0, [r7]
   12918:	cmp	r0, #0
   1291c:	beq	12958 <__mempcpy_chk@plt+0x1808>
   12920:	bl	1106c <__errno_location@plt>
   12924:	ldr	r8, [r0]
   12928:	mov	r6, r0
   1292c:	mov	r1, sp
   12930:	mov	r0, r5
   12934:	bl	155d8 <__mempcpy_chk@plt+0x4488>
   12938:	ldr	r0, [sp]
   1293c:	cmp	r7, r0
   12940:	bcs	12954 <__mempcpy_chk@plt+0x1804>
   12944:	str	r0, [sp, #4]
   12948:	mov	r7, r0
   1294c:	vmov.f64	d8, d0
   12950:	b	12958 <__mempcpy_chk@plt+0x1808>
   12954:	str	r8, [r6]
   12958:	cmp	r4, #0
   1295c:	vmov.f64	d0, d8
   12960:	strne	r7, [r4]
   12964:	sub	sp, fp, #32
   12968:	vpop	{d8}
   1296c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   12970:	movw	r1, #29060	; 0x7184
   12974:	movt	r1, #2
   12978:	str	r0, [r1]
   1297c:	bx	lr
   12980:	movw	r1, #29064	; 0x7188
   12984:	movt	r1, #2
   12988:	strb	r0, [r1]
   1298c:	bx	lr
   12990:	push	{r4, r5, r6, sl, fp, lr}
   12994:	add	fp, sp, #16
   12998:	sub	sp, sp, #8
   1299c:	movw	r0, #29012	; 0x7154
   129a0:	movt	r0, #2
   129a4:	ldr	r0, [r0]
   129a8:	bl	15684 <__mempcpy_chk@plt+0x4534>
   129ac:	cmp	r0, #0
   129b0:	beq	129d8 <__mempcpy_chk@plt+0x1888>
   129b4:	movw	r0, #29064	; 0x7188
   129b8:	movt	r0, #2
   129bc:	ldrb	r0, [r0]
   129c0:	cmp	r0, #0
   129c4:	beq	129f8 <__mempcpy_chk@plt+0x18a8>
   129c8:	bl	1106c <__errno_location@plt>
   129cc:	ldr	r0, [r0]
   129d0:	cmp	r0, #32
   129d4:	bne	129f8 <__mempcpy_chk@plt+0x18a8>
   129d8:	movw	r0, #29008	; 0x7150
   129dc:	movt	r0, #2
   129e0:	ldr	r0, [r0]
   129e4:	bl	15684 <__mempcpy_chk@plt+0x4534>
   129e8:	cmp	r0, #0
   129ec:	subeq	sp, fp, #16
   129f0:	popeq	{r4, r5, r6, sl, fp, pc}
   129f4:	b	12a68 <__mempcpy_chk@plt+0x1918>
   129f8:	movw	r1, #25396	; 0x6334
   129fc:	mov	r0, #0
   12a00:	mov	r2, #5
   12a04:	movt	r1, #1
   12a08:	bl	10f70 <dcgettext@plt>
   12a0c:	mov	r4, r0
   12a10:	movw	r0, #29060	; 0x7184
   12a14:	movt	r0, #2
   12a18:	ldr	r6, [r0]
   12a1c:	bl	1106c <__errno_location@plt>
   12a20:	ldr	r5, [r0]
   12a24:	cmp	r6, #0
   12a28:	bne	12a44 <__mempcpy_chk@plt+0x18f4>
   12a2c:	movw	r2, #24803	; 0x60e3
   12a30:	mov	r0, #0
   12a34:	mov	r1, r5
   12a38:	mov	r3, r4
   12a3c:	movt	r2, #1
   12a40:	b	12a64 <__mempcpy_chk@plt+0x1914>
   12a44:	mov	r0, r6
   12a48:	bl	1434c <__mempcpy_chk@plt+0x31fc>
   12a4c:	movw	r2, #25703	; 0x6467
   12a50:	mov	r3, r0
   12a54:	str	r4, [sp]
   12a58:	mov	r0, #0
   12a5c:	mov	r1, r5
   12a60:	movt	r2, #1
   12a64:	bl	10fe8 <error@plt>
   12a68:	movw	r0, #28924	; 0x70fc
   12a6c:	movt	r0, #2
   12a70:	ldr	r0, [r0]
   12a74:	bl	10f28 <_exit@plt>
   12a78:	push	{r4, r5, r6, sl, fp, lr}
   12a7c:	add	fp, sp, #16
   12a80:	mov	r4, r0
   12a84:	bl	1106c <__errno_location@plt>
   12a88:	ldr	r6, [r0]
   12a8c:	mov	r5, r0
   12a90:	mov	r0, r4
   12a94:	bl	10f1c <free@plt>
   12a98:	str	r6, [r5]
   12a9c:	pop	{r4, r5, r6, sl, fp, pc}
   12aa0:	push	{r4, r5, fp, lr}
   12aa4:	add	fp, sp, #8
   12aa8:	cmp	r0, #0
   12aac:	beq	12b40 <__mempcpy_chk@plt+0x19f0>
   12ab0:	mov	r1, #47	; 0x2f
   12ab4:	mov	r4, r0
   12ab8:	bl	110f0 <strrchr@plt>
   12abc:	cmp	r0, #0
   12ac0:	mov	r5, r4
   12ac4:	addne	r5, r0, #1
   12ac8:	sub	r0, r5, r4
   12acc:	cmp	r0, #7
   12ad0:	blt	12b24 <__mempcpy_chk@plt+0x19d4>
   12ad4:	movw	r1, #25766	; 0x64a6
   12ad8:	sub	r0, r5, #7
   12adc:	mov	r2, #7
   12ae0:	movt	r1, #1
   12ae4:	bl	1112c <strncmp@plt>
   12ae8:	cmp	r0, #0
   12aec:	bne	12b24 <__mempcpy_chk@plt+0x19d4>
   12af0:	movw	r1, #25774	; 0x64ae
   12af4:	mov	r0, r5
   12af8:	mov	r2, #3
   12afc:	movt	r1, #1
   12b00:	bl	1112c <strncmp@plt>
   12b04:	cmp	r0, #0
   12b08:	beq	12b14 <__mempcpy_chk@plt+0x19c4>
   12b0c:	mov	r4, r5
   12b10:	b	12b24 <__mempcpy_chk@plt+0x19d4>
   12b14:	movw	r0, #28992	; 0x7140
   12b18:	add	r4, r5, #3
   12b1c:	movt	r0, #2
   12b20:	str	r4, [r0]
   12b24:	movw	r0, #28996	; 0x7144
   12b28:	movt	r0, #2
   12b2c:	str	r4, [r0]
   12b30:	movw	r0, #29068	; 0x718c
   12b34:	movt	r0, #2
   12b38:	str	r4, [r0]
   12b3c:	pop	{r4, r5, fp, pc}
   12b40:	movw	r0, #29008	; 0x7150
   12b44:	mov	r1, #55	; 0x37
   12b48:	mov	r2, #1
   12b4c:	movt	r0, #2
   12b50:	ldr	r3, [r0]
   12b54:	movw	r0, #25710	; 0x646e
   12b58:	movt	r0, #1
   12b5c:	bl	10fa0 <fwrite@plt>
   12b60:	bl	11138 <abort@plt>
   12b64:	push	{r4, r5, r6, sl, fp, lr}
   12b68:	add	fp, sp, #16
   12b6c:	mov	r4, r0
   12b70:	movw	r0, #29072	; 0x7190
   12b74:	movt	r0, #2
   12b78:	cmp	r4, #0
   12b7c:	moveq	r4, r0
   12b80:	bl	1106c <__errno_location@plt>
   12b84:	ldr	r6, [r0]
   12b88:	mov	r5, r0
   12b8c:	mov	r0, r4
   12b90:	mov	r1, #48	; 0x30
   12b94:	bl	15324 <__mempcpy_chk@plt+0x41d4>
   12b98:	str	r6, [r5]
   12b9c:	pop	{r4, r5, r6, sl, fp, pc}
   12ba0:	movw	r1, #29072	; 0x7190
   12ba4:	cmp	r0, #0
   12ba8:	movt	r1, #2
   12bac:	movne	r1, r0
   12bb0:	ldr	r0, [r1]
   12bb4:	bx	lr
   12bb8:	movw	r2, #29072	; 0x7190
   12bbc:	cmp	r0, #0
   12bc0:	movt	r2, #2
   12bc4:	movne	r2, r0
   12bc8:	str	r1, [r2]
   12bcc:	bx	lr
   12bd0:	movw	r3, #29072	; 0x7190
   12bd4:	cmp	r0, #0
   12bd8:	movt	r3, #2
   12bdc:	movne	r3, r0
   12be0:	ubfx	r0, r1, #5, #3
   12be4:	and	r1, r1, #31
   12be8:	add	r0, r3, r0, lsl #2
   12bec:	ldr	r3, [r0, #8]
   12bf0:	eor	r2, r2, r3, lsr r1
   12bf4:	and	r2, r2, #1
   12bf8:	eor	r2, r3, r2, lsl r1
   12bfc:	str	r2, [r0, #8]
   12c00:	mov	r0, #1
   12c04:	and	r0, r0, r3, lsr r1
   12c08:	bx	lr
   12c0c:	movw	r2, #29072	; 0x7190
   12c10:	cmp	r0, #0
   12c14:	movt	r2, #2
   12c18:	movne	r2, r0
   12c1c:	ldr	r0, [r2, #4]
   12c20:	str	r1, [r2, #4]
   12c24:	bx	lr
   12c28:	movw	r3, #29072	; 0x7190
   12c2c:	cmp	r0, #0
   12c30:	movt	r3, #2
   12c34:	movne	r3, r0
   12c38:	cmp	r1, #0
   12c3c:	mov	r0, #10
   12c40:	cmpne	r2, #0
   12c44:	str	r0, [r3]
   12c48:	bne	12c58 <__mempcpy_chk@plt+0x1b08>
   12c4c:	push	{fp, lr}
   12c50:	mov	fp, sp
   12c54:	bl	11138 <abort@plt>
   12c58:	str	r1, [r3, #40]	; 0x28
   12c5c:	str	r2, [r3, #44]	; 0x2c
   12c60:	bx	lr
   12c64:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12c68:	add	fp, sp, #28
   12c6c:	sub	sp, sp, #20
   12c70:	mov	r7, r0
   12c74:	ldr	r0, [fp, #8]
   12c78:	movw	r5, #29072	; 0x7190
   12c7c:	mov	r8, r3
   12c80:	mov	r9, r2
   12c84:	mov	sl, r1
   12c88:	movt	r5, #2
   12c8c:	cmp	r0, #0
   12c90:	movne	r5, r0
   12c94:	bl	1106c <__errno_location@plt>
   12c98:	mov	r4, r0
   12c9c:	ldm	r5, {r0, r1}
   12ca0:	ldr	r2, [r5, #40]	; 0x28
   12ca4:	ldr	r3, [r5, #44]	; 0x2c
   12ca8:	add	r5, r5, #8
   12cac:	ldr	r6, [r4]
   12cb0:	stm	sp, {r0, r1, r5}
   12cb4:	str	r2, [sp, #12]
   12cb8:	str	r3, [sp, #16]
   12cbc:	mov	r0, r7
   12cc0:	mov	r1, sl
   12cc4:	mov	r2, r9
   12cc8:	mov	r3, r8
   12ccc:	bl	12cdc <__mempcpy_chk@plt+0x1b8c>
   12cd0:	str	r6, [r4]
   12cd4:	sub	sp, fp, #28
   12cd8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   12cdc:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   12ce0:	add	fp, sp, #28
   12ce4:	sub	sp, sp, #156	; 0x9c
   12ce8:	str	r0, [sp, #80]	; 0x50
   12cec:	ldr	r0, [fp, #12]
   12cf0:	mov	r6, r1
   12cf4:	mov	r9, r3
   12cf8:	str	r2, [fp, #-84]	; 0xffffffac
   12cfc:	and	r1, r0, #4
   12d00:	str	r1, [sp, #32]
   12d04:	and	r1, r0, #1
   12d08:	str	r1, [sp, #36]	; 0x24
   12d0c:	ubfx	r4, r0, #1, #1
   12d10:	bl	10fb8 <__ctype_get_mb_cur_max@plt>
   12d14:	str	r0, [sp, #40]	; 0x28
   12d18:	ldr	r0, [fp, #24]
   12d1c:	ldr	r7, [fp, #8]
   12d20:	mov	r1, #0
   12d24:	mov	r5, #1
   12d28:	str	r1, [fp, #-56]	; 0xffffffc8
   12d2c:	mov	r1, #0
   12d30:	str	r1, [sp, #60]	; 0x3c
   12d34:	str	r0, [sp, #76]	; 0x4c
   12d38:	ldr	r0, [fp, #20]
   12d3c:	str	r0, [sp, #72]	; 0x48
   12d40:	mov	r0, #0
   12d44:	str	r0, [sp, #56]	; 0x38
   12d48:	mov	r0, #0
   12d4c:	str	r0, [sp, #92]	; 0x5c
   12d50:	mov	r0, #0
   12d54:	str	r0, [fp, #-76]	; 0xffffffb4
   12d58:	mov	r0, #0
   12d5c:	cmp	r7, #10
   12d60:	bhi	13ce0 <__mempcpy_chk@plt+0x2b90>
   12d64:	add	r1, pc, #28
   12d68:	mov	sl, r6
   12d6c:	ldr	r6, [sp, #80]	; 0x50
   12d70:	ldr	ip, [fp, #-84]	; 0xffffffac
   12d74:	mov	r8, #0
   12d78:	mov	r2, #1
   12d7c:	mov	r3, #0
   12d80:	mov	lr, r9
   12d84:	ldr	pc, [r1, r7, lsl #2]
   12d88:	andeq	r2, r1, ip, ror #28
   12d8c:	muleq	r1, r8, lr
   12d90:	andeq	r2, r1, ip, asr lr
   12d94:	andeq	r2, r1, r4, asr lr
   12d98:	andeq	r2, r1, ip, lsl #29
   12d9c:	andeq	r2, r1, r0, ror #29
   12da0:	andeq	r2, r1, ip, ror lr
   12da4:	andeq	r2, r1, ip, lsr pc
   12da8:			; <UNDEFINED> instruction: 0x00012db4
   12dac:			; <UNDEFINED> instruction: 0x00012db4
   12db0:	ldrdeq	r2, [r1], -ip
   12db4:	movw	r0, #25858	; 0x6502
   12db8:	mov	r1, r7
   12dbc:	movt	r0, #1
   12dc0:	bl	146ec <__mempcpy_chk@plt+0x359c>
   12dc4:	str	r0, [sp, #72]	; 0x48
   12dc8:	movw	r0, #25279	; 0x62bf
   12dcc:	mov	r1, r7
   12dd0:	movt	r0, #1
   12dd4:	bl	146ec <__mempcpy_chk@plt+0x359c>
   12dd8:	str	r0, [sp, #76]	; 0x4c
   12ddc:	str	r5, [fp, #-48]	; 0xffffffd0
   12de0:	mov	r8, #0
   12de4:	mov	r5, r7
   12de8:	tst	r4, #1
   12dec:	bne	12e24 <__mempcpy_chk@plt+0x1cd4>
   12df0:	ldr	r0, [sp, #72]	; 0x48
   12df4:	ldrb	r0, [r0]
   12df8:	cmp	r0, #0
   12dfc:	beq	12e24 <__mempcpy_chk@plt+0x1cd4>
   12e00:	ldr	r1, [sp, #72]	; 0x48
   12e04:	mov	r8, #0
   12e08:	add	r1, r1, #1
   12e0c:	cmp	r8, sl
   12e10:	strbcc	r0, [r6, r8]
   12e14:	ldrb	r0, [r1, r8]
   12e18:	add	r8, r8, #1
   12e1c:	cmp	r0, #0
   12e20:	bne	12e0c <__mempcpy_chk@plt+0x1cbc>
   12e24:	ldr	r7, [sp, #76]	; 0x4c
   12e28:	mov	r0, r7
   12e2c:	bl	11054 <strlen@plt>
   12e30:	str	r7, [sp, #92]	; 0x5c
   12e34:	mov	r7, r5
   12e38:	ldr	ip, [fp, #-84]	; 0xffffffac
   12e3c:	ldr	r5, [fp, #-48]	; 0xffffffd0
   12e40:	str	r0, [fp, #-76]	; 0xffffffb4
   12e44:	mov	r2, #1
   12e48:	mov	r3, r4
   12e4c:	mov	lr, r9
   12e50:	b	12f3c <__mempcpy_chk@plt+0x1dec>
   12e54:	mov	r0, #1
   12e58:	b	12e98 <__mempcpy_chk@plt+0x1d48>
   12e5c:	tst	r4, #1
   12e60:	bne	12e98 <__mempcpy_chk@plt+0x1d48>
   12e64:	mov	r2, r0
   12e68:	b	12ec0 <__mempcpy_chk@plt+0x1d70>
   12e6c:	mov	r7, #0
   12e70:	mov	r8, #0
   12e74:	mov	r2, r0
   12e78:	b	12f38 <__mempcpy_chk@plt+0x1de8>
   12e7c:	mov	r0, #1
   12e80:	mov	r8, #0
   12e84:	mov	r7, #5
   12e88:	b	12ef4 <__mempcpy_chk@plt+0x1da4>
   12e8c:	mov	r2, #1
   12e90:	tst	r4, #1
   12e94:	beq	12ec0 <__mempcpy_chk@plt+0x1d70>
   12e98:	mov	r1, #1
   12e9c:	mov	r8, #0
   12ea0:	mov	r7, #2
   12ea4:	mov	r2, r0
   12ea8:	mov	r3, #1
   12eac:	str	r1, [fp, #-76]	; 0xffffffb4
   12eb0:	movw	r1, #25279	; 0x62bf
   12eb4:	movt	r1, #1
   12eb8:	str	r1, [sp, #92]	; 0x5c
   12ebc:	b	12f3c <__mempcpy_chk@plt+0x1dec>
   12ec0:	cmp	sl, #0
   12ec4:	mov	r8, #1
   12ec8:	mov	r7, #2
   12ecc:	movne	r0, #39	; 0x27
   12ed0:	strbne	r0, [r6]
   12ed4:	movw	r0, #25279	; 0x62bf
   12ed8:	movt	r0, #1
   12edc:	b	12f2c <__mempcpy_chk@plt+0x1ddc>
   12ee0:	mov	r7, #5
   12ee4:	tst	r4, #1
   12ee8:	beq	12f10 <__mempcpy_chk@plt+0x1dc0>
   12eec:	mov	r0, #1
   12ef0:	mov	r8, #0
   12ef4:	str	r0, [fp, #-76]	; 0xffffffb4
   12ef8:	movw	r0, #25856	; 0x6500
   12efc:	mov	r2, #1
   12f00:	mov	r3, #1
   12f04:	movt	r0, #1
   12f08:	str	r0, [sp, #92]	; 0x5c
   12f0c:	b	12f3c <__mempcpy_chk@plt+0x1dec>
   12f10:	cmp	sl, #0
   12f14:	mov	r8, #1
   12f18:	mov	r2, #1
   12f1c:	movne	r0, #34	; 0x22
   12f20:	strbne	r0, [r6]
   12f24:	movw	r0, #25856	; 0x6500
   12f28:	movt	r0, #1
   12f2c:	str	r0, [sp, #92]	; 0x5c
   12f30:	mov	r0, #1
   12f34:	str	r0, [fp, #-76]	; 0xffffffb4
   12f38:	mov	r3, #0
   12f3c:	ldr	r0, [fp, #16]
   12f40:	str	r3, [fp, #-72]	; 0xffffffb8
   12f44:	str	r7, [fp, #-64]	; 0xffffffc0
   12f48:	str	r2, [sp, #84]	; 0x54
   12f4c:	cmp	r0, #0
   12f50:	movwne	r0, #1
   12f54:	and	r0, r0, r3
   12f58:	str	r0, [fp, #-88]	; 0xffffffa8
   12f5c:	ldr	r0, [fp, #-76]	; 0xffffffb4
   12f60:	cmp	r0, #0
   12f64:	movwne	r0, #1
   12f68:	subs	r4, r7, #2
   12f6c:	mov	r7, #0
   12f70:	and	r1, r0, r3
   12f74:	str	r4, [fp, #-80]	; 0xffffffb0
   12f78:	and	r1, r2, r1
   12f7c:	str	r1, [sp, #48]	; 0x30
   12f80:	clz	r1, r4
   12f84:	lsr	r1, r1, #5
   12f88:	and	r1, r1, r3
   12f8c:	eor	r3, r3, #1
   12f90:	str	r1, [sp, #64]	; 0x40
   12f94:	mov	r1, r4
   12f98:	str	r3, [sp, #88]	; 0x58
   12f9c:	movwne	r1, #1
   12fa0:	orr	r3, r1, r3
   12fa4:	and	r1, r1, r2
   12fa8:	and	r0, r0, r1
   12fac:	str	r3, [sp, #68]	; 0x44
   12fb0:	str	r1, [fp, #-68]	; 0xffffffbc
   12fb4:	str	r0, [fp, #-60]	; 0xffffffc4
   12fb8:	eor	r0, r2, #1
   12fbc:	str	r0, [sp, #52]	; 0x34
   12fc0:	cmn	lr, #1
   12fc4:	beq	12fd4 <__mempcpy_chk@plt+0x1e84>
   12fc8:	cmp	r7, lr
   12fcc:	bne	12fe0 <__mempcpy_chk@plt+0x1e90>
   12fd0:	b	13b08 <__mempcpy_chk@plt+0x29b8>
   12fd4:	ldrb	r0, [ip, r7]
   12fd8:	cmp	r0, #0
   12fdc:	beq	13b10 <__mempcpy_chk@plt+0x29c0>
   12fe0:	ldr	r0, [fp, #-60]	; 0xffffffc4
   12fe4:	mov	r9, #0
   12fe8:	str	r5, [fp, #-48]	; 0xffffffd0
   12fec:	cmp	r0, #0
   12ff0:	beq	13024 <__mempcpy_chk@plt+0x1ed4>
   12ff4:	ldr	r0, [fp, #-76]	; 0xffffffb4
   12ff8:	add	r4, r7, r0
   12ffc:	cmp	r0, #2
   13000:	bcc	1301c <__mempcpy_chk@plt+0x1ecc>
   13004:	cmn	lr, #1
   13008:	bne	1301c <__mempcpy_chk@plt+0x1ecc>
   1300c:	mov	r0, ip
   13010:	bl	11054 <strlen@plt>
   13014:	ldr	ip, [fp, #-84]	; 0xffffffac
   13018:	mov	lr, r0
   1301c:	cmp	r4, lr
   13020:	bls	1302c <__mempcpy_chk@plt+0x1edc>
   13024:	mov	r0, #0
   13028:	b	1306c <__mempcpy_chk@plt+0x1f1c>
   1302c:	ldr	r1, [sp, #92]	; 0x5c
   13030:	ldr	r2, [fp, #-76]	; 0xffffffb4
   13034:	add	r0, ip, r7
   13038:	mov	r4, lr
   1303c:	bl	10f64 <memcmp@plt>
   13040:	ldr	r2, [sp, #88]	; 0x58
   13044:	cmp	r0, #0
   13048:	mov	r1, r0
   1304c:	movwne	r1, #1
   13050:	orr	r1, r1, r2
   13054:	tst	r1, #1
   13058:	beq	13ba0 <__mempcpy_chk@plt+0x2a50>
   1305c:	ldr	ip, [fp, #-84]	; 0xffffffac
   13060:	clz	r0, r0
   13064:	mov	lr, r4
   13068:	lsr	r0, r0, #5
   1306c:	str	r0, [fp, #-52]	; 0xffffffcc
   13070:	ldrb	r5, [ip, r7]
   13074:	cmp	r5, #126	; 0x7e
   13078:	bhi	13430 <__mempcpy_chk@plt+0x22e0>
   1307c:	add	r3, pc, #16
   13080:	mov	r4, #1
   13084:	mov	r2, #110	; 0x6e
   13088:	mov	r0, #97	; 0x61
   1308c:	mov	r1, #0
   13090:	ldr	pc, [r3, r5, lsl #2]
   13094:	andeq	r3, r1, ip, lsr #6
   13098:	andeq	r3, r1, r0, lsr r4
   1309c:	andeq	r3, r1, r0, lsr r4
   130a0:	andeq	r3, r1, r0, lsr r4
   130a4:	andeq	r3, r1, r0, lsr r4
   130a8:	andeq	r3, r1, r0, lsr r4
   130ac:	andeq	r3, r1, r0, lsr r4
   130b0:	andeq	r3, r1, r4, ror #9
   130b4:	andeq	r3, r1, ip, lsl #6
   130b8:	andeq	r3, r1, r4, lsl #6
   130bc:	andeq	r3, r1, r8, lsl r3
   130c0:	muleq	r1, r8, r3
   130c4:	strdeq	r3, [r1], -ip
   130c8:	andeq	r3, r1, r4, lsl r3
   130cc:	andeq	r3, r1, r0, lsr r4
   130d0:	andeq	r3, r1, r0, lsr r4
   130d4:	andeq	r3, r1, r0, lsr r4
   130d8:	andeq	r3, r1, r0, lsr r4
   130dc:	andeq	r3, r1, r0, lsr r4
   130e0:	andeq	r3, r1, r0, lsr r4
   130e4:	andeq	r3, r1, r0, lsr r4
   130e8:	andeq	r3, r1, r0, lsr r4
   130ec:	andeq	r3, r1, r0, lsr r4
   130f0:	andeq	r3, r1, r0, lsr r4
   130f4:	andeq	r3, r1, r0, lsr r4
   130f8:	andeq	r3, r1, r0, lsr r4
   130fc:	andeq	r3, r1, r0, lsr r4
   13100:	andeq	r3, r1, r0, lsr r4
   13104:	andeq	r3, r1, r0, lsr r4
   13108:	andeq	r3, r1, r0, lsr r4
   1310c:	andeq	r3, r1, r0, lsr r4
   13110:	andeq	r3, r1, r0, lsr r4
   13114:	muleq	r1, ip, r4
   13118:	andeq	r3, r1, r0, lsr #9
   1311c:	andeq	r3, r1, r0, lsr #9
   13120:	andeq	r3, r1, r4, lsr #5
   13124:	andeq	r3, r1, r0, lsr #9
   13128:	muleq	r1, r0, r2
   1312c:	andeq	r3, r1, r0, lsr #9
   13130:	andeq	r3, r1, r0, lsr #7
   13134:	andeq	r3, r1, r0, lsr #9
   13138:	andeq	r3, r1, r0, lsr #9
   1313c:	andeq	r3, r1, r0, lsr #9
   13140:	muleq	r1, r0, r2
   13144:	muleq	r1, r0, r2
   13148:	muleq	r1, r0, r2
   1314c:	muleq	r1, r0, r2
   13150:	muleq	r1, r0, r2
   13154:	muleq	r1, r0, r2
   13158:	muleq	r1, r0, r2
   1315c:	muleq	r1, r0, r2
   13160:	muleq	r1, r0, r2
   13164:	muleq	r1, r0, r2
   13168:	muleq	r1, r0, r2
   1316c:	muleq	r1, r0, r2
   13170:	muleq	r1, r0, r2
   13174:	muleq	r1, r0, r2
   13178:	muleq	r1, r0, r2
   1317c:	muleq	r1, r0, r2
   13180:	andeq	r3, r1, r0, lsr #9
   13184:	andeq	r3, r1, r0, lsr #9
   13188:	andeq	r3, r1, r0, lsr #9
   1318c:	andeq	r3, r1, r0, lsr #9
   13190:	andeq	r3, r1, ip, ror #6
   13194:	andeq	r3, r1, r0, lsr r4
   13198:	muleq	r1, r0, r2
   1319c:	muleq	r1, r0, r2
   131a0:	muleq	r1, r0, r2
   131a4:	muleq	r1, r0, r2
   131a8:	muleq	r1, r0, r2
   131ac:	muleq	r1, r0, r2
   131b0:	muleq	r1, r0, r2
   131b4:	muleq	r1, r0, r2
   131b8:	muleq	r1, r0, r2
   131bc:	muleq	r1, r0, r2
   131c0:	muleq	r1, r0, r2
   131c4:	muleq	r1, r0, r2
   131c8:	muleq	r1, r0, r2
   131cc:	muleq	r1, r0, r2
   131d0:	muleq	r1, r0, r2
   131d4:	muleq	r1, r0, r2
   131d8:	muleq	r1, r0, r2
   131dc:	muleq	r1, r0, r2
   131e0:	muleq	r1, r0, r2
   131e4:	muleq	r1, r0, r2
   131e8:	muleq	r1, r0, r2
   131ec:	muleq	r1, r0, r2
   131f0:	muleq	r1, r0, r2
   131f4:	muleq	r1, r0, r2
   131f8:	muleq	r1, r0, r2
   131fc:	muleq	r1, r0, r2
   13200:	andeq	r3, r1, r0, lsr #9
   13204:	ldrdeq	r3, [r1], -r8
   13208:	muleq	r1, r0, r2
   1320c:	andeq	r3, r1, r0, lsr #9
   13210:	muleq	r1, r0, r2
   13214:	andeq	r3, r1, r0, lsr #9
   13218:	muleq	r1, r0, r2
   1321c:	muleq	r1, r0, r2
   13220:	muleq	r1, r0, r2
   13224:	muleq	r1, r0, r2
   13228:	muleq	r1, r0, r2
   1322c:	muleq	r1, r0, r2
   13230:	muleq	r1, r0, r2
   13234:	muleq	r1, r0, r2
   13238:	muleq	r1, r0, r2
   1323c:	muleq	r1, r0, r2
   13240:	muleq	r1, r0, r2
   13244:	muleq	r1, r0, r2
   13248:	muleq	r1, r0, r2
   1324c:	muleq	r1, r0, r2
   13250:	muleq	r1, r0, r2
   13254:	muleq	r1, r0, r2
   13258:	muleq	r1, r0, r2
   1325c:	muleq	r1, r0, r2
   13260:	muleq	r1, r0, r2
   13264:	muleq	r1, r0, r2
   13268:	muleq	r1, r0, r2
   1326c:	muleq	r1, r0, r2
   13270:	muleq	r1, r0, r2
   13274:	muleq	r1, r0, r2
   13278:	muleq	r1, r0, r2
   1327c:	muleq	r1, r0, r2
   13280:			; <UNDEFINED> instruction: 0x000132b8
   13284:	andeq	r3, r1, r0, lsr #9
   13288:			; <UNDEFINED> instruction: 0x000132b8
   1328c:	andeq	r3, r1, r4, lsr #5
   13290:	ldr	r0, [fp, #-68]	; 0xffffffbc
   13294:	cmp	r0, #0
   13298:	beq	134f8 <__mempcpy_chk@plt+0x23a8>
   1329c:	ldr	r0, [fp, #16]
   132a0:	b	134fc <__mempcpy_chk@plt+0x23ac>
   132a4:	mov	r4, #0
   132a8:	cmp	r7, #0
   132ac:	beq	1349c <__mempcpy_chk@plt+0x234c>
   132b0:	mov	r9, #0
   132b4:	b	13290 <__mempcpy_chk@plt+0x2140>
   132b8:	mov	r4, #0
   132bc:	cmn	lr, #1
   132c0:	beq	13480 <__mempcpy_chk@plt+0x2330>
   132c4:	cmp	r7, #0
   132c8:	bne	132b0 <__mempcpy_chk@plt+0x2160>
   132cc:	cmp	lr, #1
   132d0:	beq	1349c <__mempcpy_chk@plt+0x234c>
   132d4:	b	132b0 <__mempcpy_chk@plt+0x2160>
   132d8:	ldr	r0, [fp, #-64]	; 0xffffffc0
   132dc:	cmp	r0, #2
   132e0:	bne	134c0 <__mempcpy_chk@plt+0x2370>
   132e4:	ldr	r0, [fp, #-72]	; 0xffffffb8
   132e8:	tst	r0, #1
   132ec:	bne	13bbc <__mempcpy_chk@plt+0x2a6c>
   132f0:	mov	r9, #0
   132f4:	mov	r0, #92	; 0x5c
   132f8:	b	134d4 <__mempcpy_chk@plt+0x2384>
   132fc:	mov	r0, #102	; 0x66
   13300:	b	134e4 <__mempcpy_chk@plt+0x2394>
   13304:	mov	r2, #116	; 0x74
   13308:	b	13318 <__mempcpy_chk@plt+0x21c8>
   1330c:	mov	r0, #98	; 0x62
   13310:	b	134e4 <__mempcpy_chk@plt+0x2394>
   13314:	mov	r2, #114	; 0x72
   13318:	ldr	r0, [sp, #68]	; 0x44
   1331c:	tst	r0, #1
   13320:	mov	r0, r2
   13324:	bne	134e4 <__mempcpy_chk@plt+0x2394>
   13328:	b	13bbc <__mempcpy_chk@plt+0x2a6c>
   1332c:	ldr	r0, [sp, #84]	; 0x54
   13330:	tst	r0, #1
   13334:	beq	135d4 <__mempcpy_chk@plt+0x2484>
   13338:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1333c:	tst	r0, #1
   13340:	bne	13ccc <__mempcpy_chk@plt+0x2b7c>
   13344:	ldr	r0, [fp, #-64]	; 0xffffffc0
   13348:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1334c:	cmp	r0, #2
   13350:	ldr	r0, [fp, #-80]	; 0xffffffb0
   13354:	movwne	r0, #1
   13358:	orr	r0, r0, r2
   1335c:	tst	r0, #1
   13360:	beq	139a4 <__mempcpy_chk@plt+0x2854>
   13364:	mov	r0, r8
   13368:	b	139d8 <__mempcpy_chk@plt+0x2888>
   1336c:	ldr	r0, [fp, #-64]	; 0xffffffc0
   13370:	mov	r9, #0
   13374:	mov	r5, #63	; 0x3f
   13378:	cmp	r0, #5
   1337c:	beq	13788 <__mempcpy_chk@plt+0x2638>
   13380:	cmp	r0, #2
   13384:	bne	1382c <__mempcpy_chk@plt+0x26dc>
   13388:	ldr	r0, [fp, #-72]	; 0xffffffb8
   1338c:	tst	r0, #1
   13390:	beq	13830 <__mempcpy_chk@plt+0x26e0>
   13394:	b	13bbc <__mempcpy_chk@plt+0x2a6c>
   13398:	mov	r0, #118	; 0x76
   1339c:	b	134e4 <__mempcpy_chk@plt+0x2394>
   133a0:	mov	r0, #1
   133a4:	mov	r5, #39	; 0x27
   133a8:	str	r0, [sp, #60]	; 0x3c
   133ac:	ldr	r0, [fp, #-64]	; 0xffffffc0
   133b0:	cmp	r0, #2
   133b4:	bne	13428 <__mempcpy_chk@plt+0x22d8>
   133b8:	ldr	r0, [fp, #-72]	; 0xffffffb8
   133bc:	tst	r0, #1
   133c0:	bne	13bbc <__mempcpy_chk@plt+0x2a6c>
   133c4:	ldr	r2, [sp, #56]	; 0x38
   133c8:	clz	r1, sl
   133cc:	mov	r9, #0
   133d0:	lsr	r1, r1, #5
   133d4:	cmp	r2, #0
   133d8:	mov	r0, r2
   133dc:	movwne	r0, #1
   133e0:	orrs	r0, r0, r1
   133e4:	moveq	r2, sl
   133e8:	moveq	sl, r0
   133ec:	cmp	r8, sl
   133f0:	str	r2, [sp, #56]	; 0x38
   133f4:	movcc	r0, #39	; 0x27
   133f8:	strbcc	r0, [r6, r8]
   133fc:	add	r0, r8, #1
   13400:	cmp	r0, sl
   13404:	movcc	r1, #92	; 0x5c
   13408:	strbcc	r1, [r6, r0]
   1340c:	add	r0, r8, #2
   13410:	add	r8, r8, #3
   13414:	cmp	r0, sl
   13418:	movcc	r1, #39	; 0x27
   1341c:	strbcc	r1, [r6, r0]
   13420:	mov	r0, #0
   13424:	str	r0, [fp, #-56]	; 0xffffffc8
   13428:	mov	r4, #1
   1342c:	b	13290 <__mempcpy_chk@plt+0x2140>
   13430:	ldr	r0, [sp, #40]	; 0x28
   13434:	cmp	r0, #1
   13438:	bne	13600 <__mempcpy_chk@plt+0x24b0>
   1343c:	str	lr, [sp, #28]
   13440:	bl	1103c <__ctype_b_loc@plt>
   13444:	ldr	r0, [r0]
   13448:	ldr	ip, [fp, #-84]	; 0xffffffac
   1344c:	mov	r1, #1
   13450:	add	r0, r0, r5, lsl #1
   13454:	ldrb	r0, [r0, #1]
   13458:	ubfx	r4, r0, #6, #1
   1345c:	ldr	r0, [sp, #52]	; 0x34
   13460:	mov	r2, r1
   13464:	cmp	r1, #1
   13468:	orr	r0, r4, r0
   1346c:	bhi	13838 <__mempcpy_chk@plt+0x26e8>
   13470:	tst	r0, #1
   13474:	beq	13838 <__mempcpy_chk@plt+0x26e8>
   13478:	ldr	lr, [sp, #28]
   1347c:	b	13290 <__mempcpy_chk@plt+0x2140>
   13480:	cmp	r7, #0
   13484:	ldrbeq	r0, [ip, #1]
   13488:	cmpeq	r0, #0
   1348c:	beq	1349c <__mempcpy_chk@plt+0x234c>
   13490:	mvn	lr, #0
   13494:	mov	r9, #0
   13498:	b	13290 <__mempcpy_chk@plt+0x2140>
   1349c:	mov	r1, #1
   134a0:	ldr	r0, [fp, #-64]	; 0xffffffc0
   134a4:	cmp	r0, #2
   134a8:	bne	134b8 <__mempcpy_chk@plt+0x2368>
   134ac:	ldr	r0, [fp, #-72]	; 0xffffffb8
   134b0:	tst	r0, #1
   134b4:	bne	13bbc <__mempcpy_chk@plt+0x2a6c>
   134b8:	mov	r4, r1
   134bc:	b	13290 <__mempcpy_chk@plt+0x2140>
   134c0:	ldr	r1, [sp, #48]	; 0x30
   134c4:	mov	r9, #0
   134c8:	mov	r0, #92	; 0x5c
   134cc:	cmp	r1, #0
   134d0:	beq	134e4 <__mempcpy_chk@plt+0x2394>
   134d4:	mov	r4, #0
   134d8:	cmp	r9, #0
   134dc:	beq	13a70 <__mempcpy_chk@plt+0x2920>
   134e0:	b	13aac <__mempcpy_chk@plt+0x295c>
   134e4:	ldr	r1, [sp, #84]	; 0x54
   134e8:	mov	r4, #0
   134ec:	mov	r9, #0
   134f0:	tst	r1, #1
   134f4:	bne	13534 <__mempcpy_chk@plt+0x23e4>
   134f8:	ldr	r0, [fp, #-88]	; 0xffffffa8
   134fc:	cmp	r0, #0
   13500:	mov	r0, r5
   13504:	beq	13528 <__mempcpy_chk@plt+0x23d8>
   13508:	ldr	r1, [fp, #16]
   1350c:	ubfx	r0, r5, #5, #3
   13510:	mov	r2, #1
   13514:	ldr	r0, [r1, r0, lsl #2]
   13518:	and	r1, r5, #31
   1351c:	tst	r0, r2, lsl r1
   13520:	mov	r0, r5
   13524:	bne	13534 <__mempcpy_chk@plt+0x23e4>
   13528:	ldr	r1, [fp, #-52]	; 0xffffffcc
   1352c:	cmp	r1, #0
   13530:	beq	13a68 <__mempcpy_chk@plt+0x2918>
   13534:	ldr	r1, [fp, #-72]	; 0xffffffb8
   13538:	tst	r1, #1
   1353c:	bne	13b94 <__mempcpy_chk@plt+0x2a44>
   13540:	ldr	r1, [fp, #-64]	; 0xffffffc0
   13544:	ldr	r2, [fp, #-56]	; 0xffffffc8
   13548:	cmp	r1, #2
   1354c:	ldr	r1, [fp, #-80]	; 0xffffffb0
   13550:	movwne	r1, #1
   13554:	orr	r1, r1, r2
   13558:	tst	r1, #1
   1355c:	beq	13568 <__mempcpy_chk@plt+0x2418>
   13560:	ldr	r5, [fp, #-48]	; 0xffffffd0
   13564:	b	135a4 <__mempcpy_chk@plt+0x2454>
   13568:	cmp	r8, sl
   1356c:	ldr	r5, [fp, #-48]	; 0xffffffd0
   13570:	movcc	r1, #39	; 0x27
   13574:	strbcc	r1, [r6, r8]
   13578:	add	r1, r8, #1
   1357c:	cmp	r1, sl
   13580:	movcc	r2, #36	; 0x24
   13584:	strbcc	r2, [r6, r1]
   13588:	add	r1, r8, #2
   1358c:	add	r8, r8, #3
   13590:	cmp	r1, sl
   13594:	movcc	r2, #39	; 0x27
   13598:	strbcc	r2, [r6, r1]
   1359c:	mov	r1, #1
   135a0:	str	r1, [fp, #-56]	; 0xffffffc8
   135a4:	cmp	r8, sl
   135a8:	movcc	r1, #92	; 0x5c
   135ac:	strbcc	r1, [r6, r8]
   135b0:	add	r8, r8, #1
   135b4:	cmp	r8, sl
   135b8:	and	r5, r5, r4
   135bc:	add	r7, r7, #1
   135c0:	strbcc	r0, [r6, r8]
   135c4:	add	r8, r8, #1
   135c8:	cmn	lr, #1
   135cc:	bne	12fc8 <__mempcpy_chk@plt+0x1e78>
   135d0:	b	12fd4 <__mempcpy_chk@plt+0x1e84>
   135d4:	ldr	r0, [sp, #36]	; 0x24
   135d8:	mov	r4, #0
   135dc:	mov	r9, #0
   135e0:	mov	r5, #0
   135e4:	cmp	r0, #0
   135e8:	beq	134f8 <__mempcpy_chk@plt+0x23a8>
   135ec:	ldr	r5, [fp, #-48]	; 0xffffffd0
   135f0:	add	r7, r7, #1
   135f4:	cmn	lr, #1
   135f8:	bne	12fc8 <__mempcpy_chk@plt+0x1e78>
   135fc:	b	12fd4 <__mempcpy_chk@plt+0x1e84>
   13600:	mov	r0, #0
   13604:	cmn	lr, #1
   13608:	str	r0, [fp, #-36]	; 0xffffffdc
   1360c:	str	r0, [fp, #-40]	; 0xffffffd8
   13610:	bne	13624 <__mempcpy_chk@plt+0x24d4>
   13614:	mov	r0, ip
   13618:	bl	11054 <strlen@plt>
   1361c:	ldr	ip, [fp, #-84]	; 0xffffffac
   13620:	mov	lr, r0
   13624:	add	r0, ip, r7
   13628:	mov	r4, #1
   1362c:	mov	r6, #0
   13630:	str	lr, [sp, #28]
   13634:	str	r0, [sp, #24]
   13638:	sub	r0, fp, #40	; 0x28
   1363c:	mov	r3, r0
   13640:	str	r6, [sp, #44]	; 0x2c
   13644:	add	r6, r6, r7
   13648:	sub	r0, fp, #44	; 0x2c
   1364c:	add	r1, ip, r6
   13650:	sub	r2, lr, r6
   13654:	bl	158dc <__mempcpy_chk@plt+0x478c>
   13658:	cmp	r0, #0
   1365c:	beq	13af4 <__mempcpy_chk@plt+0x29a4>
   13660:	cmn	r0, #1
   13664:	beq	13ab4 <__mempcpy_chk@plt+0x2964>
   13668:	ldr	lr, [sp, #28]
   1366c:	cmn	r0, #2
   13670:	beq	13abc <__mempcpy_chk@plt+0x296c>
   13674:	ldr	r2, [sp, #64]	; 0x40
   13678:	cmp	r0, #2
   1367c:	mov	r1, #0
   13680:	movwcc	r1, #1
   13684:	eor	r2, r2, #1
   13688:	orrs	r1, r2, r1
   1368c:	bne	1374c <__mempcpy_chk@plt+0x25fc>
   13690:	ldr	r1, [sp, #44]	; 0x2c
   13694:	ldr	r2, [sp, #24]
   13698:	add	r1, r2, r1
   1369c:	mov	r2, #1
   136a0:	ldrb	r3, [r1, r2]
   136a4:	sub	r3, r3, #91	; 0x5b
   136a8:	cmp	r3, #33	; 0x21
   136ac:	bhi	13740 <__mempcpy_chk@plt+0x25f0>
   136b0:	add	r6, pc, #0
   136b4:	ldr	pc, [r6, r3, lsl #2]
   136b8:			; <UNDEFINED> instruction: 0x00013bb4
   136bc:			; <UNDEFINED> instruction: 0x00013bb4
   136c0:	andeq	r3, r1, r0, asr #14
   136c4:			; <UNDEFINED> instruction: 0x00013bb4
   136c8:	andeq	r3, r1, r0, asr #14
   136cc:			; <UNDEFINED> instruction: 0x00013bb4
   136d0:	andeq	r3, r1, r0, asr #14
   136d4:	andeq	r3, r1, r0, asr #14
   136d8:	andeq	r3, r1, r0, asr #14
   136dc:	andeq	r3, r1, r0, asr #14
   136e0:	andeq	r3, r1, r0, asr #14
   136e4:	andeq	r3, r1, r0, asr #14
   136e8:	andeq	r3, r1, r0, asr #14
   136ec:	andeq	r3, r1, r0, asr #14
   136f0:	andeq	r3, r1, r0, asr #14
   136f4:	andeq	r3, r1, r0, asr #14
   136f8:	andeq	r3, r1, r0, asr #14
   136fc:	andeq	r3, r1, r0, asr #14
   13700:	andeq	r3, r1, r0, asr #14
   13704:	andeq	r3, r1, r0, asr #14
   13708:	andeq	r3, r1, r0, asr #14
   1370c:	andeq	r3, r1, r0, asr #14
   13710:	andeq	r3, r1, r0, asr #14
   13714:	andeq	r3, r1, r0, asr #14
   13718:	andeq	r3, r1, r0, asr #14
   1371c:	andeq	r3, r1, r0, asr #14
   13720:	andeq	r3, r1, r0, asr #14
   13724:	andeq	r3, r1, r0, asr #14
   13728:	andeq	r3, r1, r0, asr #14
   1372c:	andeq	r3, r1, r0, asr #14
   13730:	andeq	r3, r1, r0, asr #14
   13734:	andeq	r3, r1, r0, asr #14
   13738:	andeq	r3, r1, r0, asr #14
   1373c:			; <UNDEFINED> instruction: 0x00013bb4
   13740:	add	r2, r2, #1
   13744:	cmp	r2, r0
   13748:	bcc	136a0 <__mempcpy_chk@plt+0x2550>
   1374c:	ldr	r6, [sp, #44]	; 0x2c
   13750:	add	r6, r0, r6
   13754:	ldr	r0, [fp, #-44]	; 0xffffffd4
   13758:	bl	10f94 <iswprint@plt>
   1375c:	cmp	r0, #0
   13760:	movwne	r0, #1
   13764:	and	r4, r4, r0
   13768:	sub	r0, fp, #40	; 0x28
   1376c:	bl	10f40 <mbsinit@plt>
   13770:	ldr	lr, [sp, #28]
   13774:	ldr	ip, [fp, #-84]	; 0xffffffac
   13778:	sub	r3, fp, #40	; 0x28
   1377c:	cmp	r0, #0
   13780:	beq	13640 <__mempcpy_chk@plt+0x24f0>
   13784:	b	13afc <__mempcpy_chk@plt+0x29ac>
   13788:	ldr	r0, [sp, #32]
   1378c:	cmp	r0, #0
   13790:	beq	1382c <__mempcpy_chk@plt+0x26dc>
   13794:	add	r0, r7, #2
   13798:	cmp	r0, lr
   1379c:	bcs	1382c <__mempcpy_chk@plt+0x26dc>
   137a0:	add	r1, ip, r7
   137a4:	ldrb	r1, [r1, #1]
   137a8:	cmp	r1, #63	; 0x3f
   137ac:	bne	1382c <__mempcpy_chk@plt+0x26dc>
   137b0:	ldrb	r5, [ip, r0]
   137b4:	sub	r1, r5, #33	; 0x21
   137b8:	cmp	r1, #29
   137bc:	bhi	1382c <__mempcpy_chk@plt+0x26dc>
   137c0:	movw	r3, #20929	; 0x51c1
   137c4:	mov	r2, #1
   137c8:	movt	r3, #14336	; 0x3800
   137cc:	tst	r3, r2, lsl r1
   137d0:	beq	1382c <__mempcpy_chk@plt+0x26dc>
   137d4:	ldr	r1, [fp, #-72]	; 0xffffffb8
   137d8:	tst	r1, #1
   137dc:	bne	13cd4 <__mempcpy_chk@plt+0x2b84>
   137e0:	cmp	r8, sl
   137e4:	mov	r7, r0
   137e8:	mov	r4, #0
   137ec:	movcc	r1, #63	; 0x3f
   137f0:	strbcc	r1, [r6, r8]
   137f4:	add	r1, r8, #1
   137f8:	cmp	r1, sl
   137fc:	movcc	r2, #34	; 0x22
   13800:	strbcc	r2, [r6, r1]
   13804:	add	r1, r8, #2
   13808:	cmp	r1, sl
   1380c:	movcc	r2, #34	; 0x22
   13810:	strbcc	r2, [r6, r1]
   13814:	add	r1, r8, #3
   13818:	add	r8, r8, #4
   1381c:	cmp	r1, sl
   13820:	movcc	r2, #63	; 0x3f
   13824:	strbcc	r2, [r6, r1]
   13828:	b	13290 <__mempcpy_chk@plt+0x2140>
   1382c:	mov	r5, #63	; 0x3f
   13830:	mov	r4, #0
   13834:	b	13290 <__mempcpy_chk@plt+0x2140>
   13838:	add	r1, r2, r7
   1383c:	ldr	lr, [sp, #28]
   13840:	mov	r3, #0
   13844:	str	r1, [sp, #44]	; 0x2c
   13848:	add	r1, r7, #1
   1384c:	ldr	r7, [fp, #-64]	; 0xffffffc0
   13850:	tst	r0, #1
   13854:	bne	13928 <__mempcpy_chk@plt+0x27d8>
   13858:	ldr	r2, [fp, #-72]	; 0xffffffb8
   1385c:	tst	r2, #1
   13860:	bne	13c1c <__mempcpy_chk@plt+0x2acc>
   13864:	ldr	r3, [fp, #-80]	; 0xffffffb0
   13868:	ldr	r2, [fp, #-56]	; 0xffffffc8
   1386c:	cmp	r7, #2
   13870:	movwne	r3, #1
   13874:	orr	r3, r3, r2
   13878:	tst	r3, #1
   1387c:	bne	138b8 <__mempcpy_chk@plt+0x2768>
   13880:	cmp	r8, sl
   13884:	add	r3, r8, #1
   13888:	movcc	r2, #39	; 0x27
   1388c:	strbcc	r2, [r6, r8]
   13890:	cmp	r3, sl
   13894:	movcc	r2, #36	; 0x24
   13898:	strbcc	r2, [r6, r3]
   1389c:	add	r3, r8, #2
   138a0:	add	r8, r8, #3
   138a4:	cmp	r3, sl
   138a8:	movcc	r2, #39	; 0x27
   138ac:	strbcc	r2, [r6, r3]
   138b0:	mov	r2, #1
   138b4:	str	r2, [fp, #-56]	; 0xffffffc8
   138b8:	cmp	r8, sl
   138bc:	movcc	r3, #92	; 0x5c
   138c0:	strbcc	r3, [r6, r8]
   138c4:	add	r3, r8, #1
   138c8:	cmp	r3, sl
   138cc:	andcc	r7, r5, #192	; 0xc0
   138d0:	movcc	r2, #48	; 0x30
   138d4:	orrcc	r7, r2, r7, lsr #6
   138d8:	strbcc	r7, [r6, r3]
   138dc:	add	r3, r8, #2
   138e0:	add	r8, r8, #3
   138e4:	cmp	r3, sl
   138e8:	lsrcc	r7, r5, #3
   138ec:	movcc	r2, #6
   138f0:	bficc	r7, r2, #3, #29
   138f4:	mov	r2, #6
   138f8:	strbcc	r7, [r6, r3]
   138fc:	bfi	r5, r2, #3, #29
   13900:	mov	r3, #1
   13904:	b	1394c <__mempcpy_chk@plt+0x27fc>
   13908:	cmp	r8, sl
   1390c:	ldr	r7, [fp, #-64]	; 0xffffffc0
   13910:	strbcc	r5, [r6, r8]
   13914:	add	r8, r8, #1
   13918:	ldrb	r5, [ip, r1]
   1391c:	add	r1, r1, #1
   13920:	tst	r0, #1
   13924:	beq	13858 <__mempcpy_chk@plt+0x2708>
   13928:	ldr	r2, [fp, #-52]	; 0xffffffcc
   1392c:	tst	r2, #1
   13930:	beq	13944 <__mempcpy_chk@plt+0x27f4>
   13934:	cmp	r8, sl
   13938:	movcc	r7, #92	; 0x5c
   1393c:	strbcc	r7, [r6, r8]
   13940:	add	r8, r8, #1
   13944:	mov	r2, #0
   13948:	str	r2, [fp, #-52]	; 0xffffffcc
   1394c:	ldr	r2, [sp, #44]	; 0x2c
   13950:	and	r9, r3, #1
   13954:	cmp	r2, r1
   13958:	bls	13a58 <__mempcpy_chk@plt+0x2908>
   1395c:	ldr	r2, [fp, #-56]	; 0xffffffc8
   13960:	cmp	r9, #0
   13964:	movwne	r9, #1
   13968:	mvn	r7, r2
   1396c:	orr	r7, r7, r9
   13970:	tst	r7, #1
   13974:	bne	13908 <__mempcpy_chk@plt+0x27b8>
   13978:	cmp	r8, sl
   1397c:	movcc	r7, #39	; 0x27
   13980:	strbcc	r7, [r6, r8]
   13984:	add	r7, r8, #1
   13988:	add	r8, r8, #2
   1398c:	cmp	r7, sl
   13990:	movcc	r2, #39	; 0x27
   13994:	strbcc	r2, [r6, r7]
   13998:	mov	r2, #0
   1399c:	str	r2, [fp, #-56]	; 0xffffffc8
   139a0:	b	13908 <__mempcpy_chk@plt+0x27b8>
   139a4:	cmp	r8, sl
   139a8:	mov	r2, #1
   139ac:	movcc	r0, #39	; 0x27
   139b0:	strbcc	r0, [r6, r8]
   139b4:	add	r0, r8, #1
   139b8:	cmp	r0, sl
   139bc:	movcc	r1, #36	; 0x24
   139c0:	strbcc	r1, [r6, r0]
   139c4:	add	r0, r8, #2
   139c8:	cmp	r0, sl
   139cc:	movcc	r1, #39	; 0x27
   139d0:	strbcc	r1, [r6, r0]
   139d4:	add	r0, r8, #3
   139d8:	cmp	r0, sl
   139dc:	add	r8, r0, #1
   139e0:	str	r2, [fp, #-56]	; 0xffffffc8
   139e4:	movcc	r1, #92	; 0x5c
   139e8:	strbcc	r1, [r6, r0]
   139ec:	ldr	r1, [fp, #-64]	; 0xffffffc0
   139f0:	cmp	r1, #2
   139f4:	beq	13a48 <__mempcpy_chk@plt+0x28f8>
   139f8:	add	r1, r7, #1
   139fc:	mov	r4, #0
   13a00:	mov	r9, #1
   13a04:	mov	r5, #48	; 0x30
   13a08:	cmp	r1, lr
   13a0c:	bcs	13290 <__mempcpy_chk@plt+0x2140>
   13a10:	ldrb	r1, [ip, r1]
   13a14:	sub	r1, r1, #48	; 0x30
   13a18:	uxtb	r1, r1
   13a1c:	cmp	r1, #9
   13a20:	bhi	13290 <__mempcpy_chk@plt+0x2140>
   13a24:	cmp	r8, sl
   13a28:	movcc	r1, #48	; 0x30
   13a2c:	strbcc	r1, [r6, r8]
   13a30:	add	r1, r0, #2
   13a34:	add	r8, r0, #3
   13a38:	cmp	r1, sl
   13a3c:	movcc	r2, #48	; 0x30
   13a40:	strbcc	r2, [r6, r1]
   13a44:	b	13290 <__mempcpy_chk@plt+0x2140>
   13a48:	mov	r0, #48	; 0x30
   13a4c:	mov	r9, #1
   13a50:	mov	r4, #0
   13a54:	b	13528 <__mempcpy_chk@plt+0x23d8>
   13a58:	cmp	r9, #0
   13a5c:	sub	r7, r1, #1
   13a60:	mov	r0, r5
   13a64:	movwne	r9, #1
   13a68:	cmp	r9, #0
   13a6c:	bne	13aac <__mempcpy_chk@plt+0x295c>
   13a70:	ldr	r1, [fp, #-56]	; 0xffffffc8
   13a74:	tst	r1, #1
   13a78:	beq	13aac <__mempcpy_chk@plt+0x295c>
   13a7c:	cmp	r8, sl
   13a80:	ldr	r5, [fp, #-48]	; 0xffffffd0
   13a84:	movcc	r1, #39	; 0x27
   13a88:	strbcc	r1, [r6, r8]
   13a8c:	add	r1, r8, #1
   13a90:	add	r8, r8, #2
   13a94:	cmp	r1, sl
   13a98:	movcc	r2, #39	; 0x27
   13a9c:	strbcc	r2, [r6, r1]
   13aa0:	mov	r1, #0
   13aa4:	str	r1, [fp, #-56]	; 0xffffffc8
   13aa8:	b	135b4 <__mempcpy_chk@plt+0x2464>
   13aac:	ldr	r5, [fp, #-48]	; 0xffffffd0
   13ab0:	b	135b4 <__mempcpy_chk@plt+0x2464>
   13ab4:	mov	r4, #0
   13ab8:	b	13af4 <__mempcpy_chk@plt+0x29a4>
   13abc:	mov	r4, #0
   13ac0:	cmp	lr, r6
   13ac4:	bls	13af4 <__mempcpy_chk@plt+0x29a4>
   13ac8:	ldr	ip, [fp, #-84]	; 0xffffffac
   13acc:	ldr	r6, [sp, #44]	; 0x2c
   13ad0:	ldr	r0, [sp, #24]
   13ad4:	ldrb	r0, [r0, r6]
   13ad8:	cmp	r0, #0
   13adc:	beq	13afc <__mempcpy_chk@plt+0x29ac>
   13ae0:	add	r6, r6, #1
   13ae4:	add	r0, r7, r6
   13ae8:	cmp	r0, lr
   13aec:	bcc	13ad0 <__mempcpy_chk@plt+0x2980>
   13af0:	b	13afc <__mempcpy_chk@plt+0x29ac>
   13af4:	ldr	ip, [fp, #-84]	; 0xffffffac
   13af8:	ldr	r6, [sp, #44]	; 0x2c
   13afc:	mov	r1, r6
   13b00:	ldr	r6, [sp, #80]	; 0x50
   13b04:	b	1345c <__mempcpy_chk@plt+0x230c>
   13b08:	mov	lr, r7
   13b0c:	b	13b14 <__mempcpy_chk@plt+0x29c4>
   13b10:	mvn	lr, #0
   13b14:	ldr	r7, [fp, #-64]	; 0xffffffc0
   13b18:	ldr	r1, [fp, #-72]	; 0xffffffb8
   13b1c:	eor	r0, r7, #2
   13b20:	orr	r0, r0, r8
   13b24:	clz	r0, r0
   13b28:	lsr	r0, r0, #5
   13b2c:	tst	r1, r0
   13b30:	bne	13bbc <__mempcpy_chk@plt+0x2a6c>
   13b34:	mov	r0, r1
   13b38:	ldr	r1, [fp, #-80]	; 0xffffffb0
   13b3c:	cmp	r7, #2
   13b40:	movwne	r1, #1
   13b44:	orr	r0, r0, r1
   13b48:	tst	r0, #1
   13b4c:	ldreq	r0, [sp, #60]	; 0x3c
   13b50:	eoreq	r0, r0, #1
   13b54:	tsteq	r0, #1
   13b58:	bne	13c68 <__mempcpy_chk@plt+0x2b18>
   13b5c:	mov	r9, lr
   13b60:	tst	r5, #1
   13b64:	bne	13c24 <__mempcpy_chk@plt+0x2ad4>
   13b68:	ldr	r6, [sp, #56]	; 0x38
   13b6c:	mov	r4, #0
   13b70:	cmp	r6, #0
   13b74:	beq	13c60 <__mempcpy_chk@plt+0x2b10>
   13b78:	ldr	r0, [sp, #84]	; 0x54
   13b7c:	mov	r1, #0
   13b80:	cmp	sl, #0
   13b84:	mov	r5, #0
   13b88:	str	r1, [fp, #-72]	; 0xffffffb8
   13b8c:	beq	12d5c <__mempcpy_chk@plt+0x1c0c>
   13b90:	b	13c68 <__mempcpy_chk@plt+0x2b18>
   13b94:	ldr	r7, [fp, #-64]	; 0xffffffc0
   13b98:	ldr	r2, [sp, #84]	; 0x54
   13b9c:	b	13bc4 <__mempcpy_chk@plt+0x2a74>
   13ba0:	ldr	ip, [fp, #-84]	; 0xffffffac
   13ba4:	mov	r2, #1
   13ba8:	mov	lr, r4
   13bac:	ldr	r7, [fp, #-64]	; 0xffffffc0
   13bb0:	b	13bc4 <__mempcpy_chk@plt+0x2a74>
   13bb4:	ldr	r6, [sp, #80]	; 0x50
   13bb8:	ldr	ip, [fp, #-84]	; 0xffffffac
   13bbc:	ldr	r2, [sp, #84]	; 0x54
   13bc0:	mov	r7, #2
   13bc4:	mov	r0, #0
   13bc8:	ldr	r1, [fp, #12]
   13bcc:	tst	r2, #1
   13bd0:	mov	r2, r7
   13bd4:	mov	r3, lr
   13bd8:	str	r0, [sp, #8]
   13bdc:	ldr	r0, [sp, #72]	; 0x48
   13be0:	movwne	r2, #4
   13be4:	cmp	r7, #2
   13be8:	movne	r2, r7
   13bec:	str	r2, [sp]
   13bf0:	mov	r2, ip
   13bf4:	bic	r1, r1, #2
   13bf8:	str	r0, [sp, #12]
   13bfc:	ldr	r0, [sp, #76]	; 0x4c
   13c00:	str	r1, [sp, #4]
   13c04:	mov	r1, sl
   13c08:	str	r0, [sp, #16]
   13c0c:	mov	r0, r6
   13c10:	bl	12cdc <__mempcpy_chk@plt+0x1b8c>
   13c14:	mov	r8, r0
   13c18:	b	13cc0 <__mempcpy_chk@plt+0x2b70>
   13c1c:	ldr	r2, [sp, #84]	; 0x54
   13c20:	b	13bc4 <__mempcpy_chk@plt+0x2a74>
   13c24:	mov	r0, #5
   13c28:	ldr	r1, [sp, #56]	; 0x38
   13c2c:	ldr	r2, [fp, #-84]	; 0xffffffac
   13c30:	mov	r3, r9
   13c34:	str	r0, [sp]
   13c38:	ldr	r0, [fp, #12]
   13c3c:	str	r0, [sp, #4]
   13c40:	ldr	r0, [fp, #16]
   13c44:	str	r0, [sp, #8]
   13c48:	ldr	r0, [sp, #72]	; 0x48
   13c4c:	str	r0, [sp, #12]
   13c50:	ldr	r0, [sp, #76]	; 0x4c
   13c54:	str	r0, [sp, #16]
   13c58:	ldr	r0, [sp, #80]	; 0x50
   13c5c:	b	13c10 <__mempcpy_chk@plt+0x2ac0>
   13c60:	mov	r0, #0
   13c64:	str	r0, [fp, #-72]	; 0xffffffb8
   13c68:	ldr	r1, [sp, #92]	; 0x5c
   13c6c:	cmp	r1, #0
   13c70:	beq	13cb0 <__mempcpy_chk@plt+0x2b60>
   13c74:	ldr	r0, [fp, #-72]	; 0xffffffb8
   13c78:	ldr	r2, [sp, #80]	; 0x50
   13c7c:	tst	r0, #1
   13c80:	bne	13cb4 <__mempcpy_chk@plt+0x2b64>
   13c84:	ldrb	r0, [r1]
   13c88:	cmp	r0, #0
   13c8c:	beq	13cb4 <__mempcpy_chk@plt+0x2b64>
   13c90:	add	r1, r1, #1
   13c94:	cmp	r8, sl
   13c98:	strbcc	r0, [r2, r8]
   13c9c:	add	r8, r8, #1
   13ca0:	ldrb	r0, [r1], #1
   13ca4:	cmp	r0, #0
   13ca8:	bne	13c94 <__mempcpy_chk@plt+0x2b44>
   13cac:	b	13cb4 <__mempcpy_chk@plt+0x2b64>
   13cb0:	ldr	r2, [sp, #80]	; 0x50
   13cb4:	cmp	r8, sl
   13cb8:	movcc	r0, #0
   13cbc:	strbcc	r0, [r2, r8]
   13cc0:	mov	r0, r8
   13cc4:	sub	sp, fp, #28
   13cc8:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13ccc:	mov	r2, #1
   13cd0:	b	13bac <__mempcpy_chk@plt+0x2a5c>
   13cd4:	ldr	r2, [sp, #84]	; 0x54
   13cd8:	mov	r7, #5
   13cdc:	b	13bc4 <__mempcpy_chk@plt+0x2a74>
   13ce0:	bl	11138 <abort@plt>
   13ce4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13ce8:	add	fp, sp, #28
   13cec:	sub	sp, sp, #28
   13cf0:	movw	r5, #29072	; 0x7190
   13cf4:	cmp	r2, #0
   13cf8:	mov	r4, r1
   13cfc:	mov	r7, r0
   13d00:	str	r0, [sp, #20]
   13d04:	movt	r5, #2
   13d08:	movne	r5, r2
   13d0c:	bl	1106c <__errno_location@plt>
   13d10:	mov	sl, r0
   13d14:	ldm	r5, {r0, r1}
   13d18:	ldr	r2, [r5, #40]	; 0x28
   13d1c:	ldr	r3, [r5, #44]	; 0x2c
   13d20:	add	r9, r5, #8
   13d24:	ldr	r6, [sl]
   13d28:	orr	r8, r1, #1
   13d2c:	mov	r1, #0
   13d30:	str	r6, [sp, #24]
   13d34:	stm	sp, {r0, r8, r9}
   13d38:	str	r2, [sp, #12]
   13d3c:	str	r3, [sp, #16]
   13d40:	mov	r0, #0
   13d44:	mov	r2, r7
   13d48:	mov	r3, r4
   13d4c:	mov	r6, r4
   13d50:	bl	12cdc <__mempcpy_chk@plt+0x1b8c>
   13d54:	add	r7, r0, #1
   13d58:	mov	r0, r7
   13d5c:	bl	14ef4 <__mempcpy_chk@plt+0x3da4>
   13d60:	mov	r4, r0
   13d64:	ldr	r0, [r5]
   13d68:	ldr	r2, [r5, #44]	; 0x2c
   13d6c:	ldr	r1, [r5, #40]	; 0x28
   13d70:	mov	r3, r6
   13d74:	stm	sp, {r0, r8, r9}
   13d78:	str	r2, [sp, #16]
   13d7c:	str	r1, [sp, #12]
   13d80:	mov	r0, r4
   13d84:	mov	r1, r7
   13d88:	ldr	r2, [sp, #20]
   13d8c:	bl	12cdc <__mempcpy_chk@plt+0x1b8c>
   13d90:	ldr	r0, [sp, #24]
   13d94:	str	r0, [sl]
   13d98:	mov	r0, r4
   13d9c:	sub	sp, fp, #28
   13da0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13da4:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13da8:	add	fp, sp, #28
   13dac:	sub	sp, sp, #36	; 0x24
   13db0:	movw	r8, #29072	; 0x7190
   13db4:	cmp	r3, #0
   13db8:	mov	r4, r2
   13dbc:	str	r2, [sp, #24]
   13dc0:	mov	r5, r1
   13dc4:	mov	r6, r0
   13dc8:	str	r0, [sp, #20]
   13dcc:	movt	r8, #2
   13dd0:	movne	r8, r3
   13dd4:	bl	1106c <__errno_location@plt>
   13dd8:	str	r0, [sp, #28]
   13ddc:	cmp	r4, #0
   13de0:	add	sl, r8, #8
   13de4:	ldm	r8, {r3, r9}
   13de8:	ldr	r7, [r0]
   13dec:	ldr	r1, [r8, #40]	; 0x28
   13df0:	ldr	r2, [r8, #44]	; 0x2c
   13df4:	mov	r0, #0
   13df8:	orreq	r9, r9, #1
   13dfc:	str	r7, [sp, #32]
   13e00:	mov	r7, r5
   13e04:	stm	sp, {r3, r9, sl}
   13e08:	str	r1, [sp, #12]
   13e0c:	str	r2, [sp, #16]
   13e10:	mov	r1, #0
   13e14:	mov	r2, r6
   13e18:	mov	r3, r5
   13e1c:	bl	12cdc <__mempcpy_chk@plt+0x1b8c>
   13e20:	add	r4, r0, #1
   13e24:	mov	r5, r0
   13e28:	mov	r0, r4
   13e2c:	bl	14ef4 <__mempcpy_chk@plt+0x3da4>
   13e30:	mov	r6, r0
   13e34:	ldr	r0, [r8]
   13e38:	ldr	r2, [r8, #44]	; 0x2c
   13e3c:	ldr	r1, [r8, #40]	; 0x28
   13e40:	mov	r3, r7
   13e44:	stm	sp, {r0, r9, sl}
   13e48:	str	r2, [sp, #16]
   13e4c:	str	r1, [sp, #12]
   13e50:	mov	r0, r6
   13e54:	mov	r1, r4
   13e58:	ldr	r2, [sp, #20]
   13e5c:	bl	12cdc <__mempcpy_chk@plt+0x1b8c>
   13e60:	ldr	r0, [sp, #24]
   13e64:	ldr	r1, [sp, #32]
   13e68:	ldr	r2, [sp, #28]
   13e6c:	cmp	r0, #0
   13e70:	str	r1, [r2]
   13e74:	strne	r5, [r0]
   13e78:	mov	r0, r6
   13e7c:	sub	sp, fp, #28
   13e80:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   13e84:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   13e88:	add	fp, sp, #24
   13e8c:	movw	r5, #28932	; 0x7104
   13e90:	movw	r8, #28928	; 0x7100
   13e94:	movt	r5, #2
   13e98:	movt	r8, #2
   13e9c:	ldr	r0, [r5]
   13ea0:	ldr	r4, [r8]
   13ea4:	cmp	r0, #2
   13ea8:	blt	13ed4 <__mempcpy_chk@plt+0x2d84>
   13eac:	add	r7, r4, #12
   13eb0:	mov	r6, #0
   13eb4:	ldr	r0, [r7, r6, lsl #3]
   13eb8:	bl	12a78 <__mempcpy_chk@plt+0x1928>
   13ebc:	ldr	r1, [r5]
   13ec0:	add	r2, r6, #2
   13ec4:	add	r0, r6, #1
   13ec8:	mov	r6, r0
   13ecc:	cmp	r2, r1
   13ed0:	blt	13eb4 <__mempcpy_chk@plt+0x2d64>
   13ed4:	ldr	r0, [r4, #4]
   13ed8:	movw	r7, #29120	; 0x71c0
   13edc:	movt	r7, #2
   13ee0:	cmp	r0, r7
   13ee4:	beq	13efc <__mempcpy_chk@plt+0x2dac>
   13ee8:	bl	12a78 <__mempcpy_chk@plt+0x1928>
   13eec:	movw	r0, #28936	; 0x7108
   13ef0:	mov	r6, #256	; 0x100
   13ef4:	movt	r0, #2
   13ef8:	strd	r6, [r0]
   13efc:	movw	r6, #28936	; 0x7108
   13f00:	movt	r6, #2
   13f04:	cmp	r4, r6
   13f08:	beq	13f18 <__mempcpy_chk@plt+0x2dc8>
   13f0c:	mov	r0, r4
   13f10:	bl	12a78 <__mempcpy_chk@plt+0x1928>
   13f14:	str	r6, [r8]
   13f18:	mov	r0, #1
   13f1c:	str	r0, [r5]
   13f20:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   13f24:	movw	r3, #29072	; 0x7190
   13f28:	mvn	r2, #0
   13f2c:	movt	r3, #2
   13f30:	b	13f34 <__mempcpy_chk@plt+0x2de4>
   13f34:	push	{r4, r5, r6, r7, r8, r9, sl, fp, lr}
   13f38:	add	fp, sp, #28
   13f3c:	sub	sp, sp, #44	; 0x2c
   13f40:	mov	r7, r3
   13f44:	str	r2, [sp, #36]	; 0x24
   13f48:	str	r1, [sp, #32]
   13f4c:	mov	r5, r0
   13f50:	bl	1106c <__errno_location@plt>
   13f54:	cmp	r5, #0
   13f58:	blt	140c4 <__mempcpy_chk@plt+0x2f74>
   13f5c:	cmn	r5, #-2147483647	; 0x80000001
   13f60:	beq	140c4 <__mempcpy_chk@plt+0x2f74>
   13f64:	movw	r8, #28932	; 0x7104
   13f68:	movw	r4, #28928	; 0x7100
   13f6c:	str	r0, [sp, #28]
   13f70:	ldr	r0, [r0]
   13f74:	movt	r8, #2
   13f78:	movt	r4, #2
   13f7c:	ldr	r1, [r8]
   13f80:	ldr	r6, [r4]
   13f84:	str	r0, [sp, #24]
   13f88:	cmp	r1, r5
   13f8c:	ble	13f98 <__mempcpy_chk@plt+0x2e48>
   13f90:	mov	sl, r6
   13f94:	b	14000 <__mempcpy_chk@plt+0x2eb0>
   13f98:	movw	r9, #28936	; 0x7108
   13f9c:	mov	r0, #8
   13fa0:	add	r2, r5, #1
   13fa4:	str	r1, [fp, #-32]	; 0xffffffe0
   13fa8:	mvn	r3, #-2147483648	; 0x80000000
   13fac:	movt	r9, #2
   13fb0:	str	r0, [sp]
   13fb4:	sub	r2, r2, r1
   13fb8:	sub	r1, fp, #32
   13fbc:	subs	r0, r6, r9
   13fc0:	movne	r0, r6
   13fc4:	bl	150f4 <__mempcpy_chk@plt+0x3fa4>
   13fc8:	cmp	r6, r9
   13fcc:	mov	sl, r0
   13fd0:	str	r0, [r4]
   13fd4:	ldrdeq	r0, [r9]
   13fd8:	stmeq	sl, {r0, r1}
   13fdc:	ldr	r1, [r8]
   13fe0:	ldr	r2, [fp, #-32]	; 0xffffffe0
   13fe4:	add	r0, sl, r1, lsl #3
   13fe8:	sub	r1, r2, r1
   13fec:	lsl	r2, r1, #3
   13ff0:	mov	r1, #0
   13ff4:	bl	11090 <memset@plt>
   13ff8:	ldr	r0, [fp, #-32]	; 0xffffffe0
   13ffc:	str	r0, [r8]
   14000:	mov	r9, sl
   14004:	ldr	r6, [r9, r5, lsl #3]!
   14008:	ldr	r4, [r9, #4]!
   1400c:	ldm	r7, {r0, r1}
   14010:	ldr	r2, [r7, #40]	; 0x28
   14014:	ldr	r3, [r7, #44]	; 0x2c
   14018:	orr	r8, r1, #1
   1401c:	add	r1, r7, #8
   14020:	stm	sp, {r0, r8}
   14024:	add	r0, sp, #8
   14028:	str	r1, [sp, #20]
   1402c:	stm	r0, {r1, r2, r3}
   14030:	mov	r0, r4
   14034:	mov	r1, r6
   14038:	ldr	r2, [sp, #32]
   1403c:	ldr	r3, [sp, #36]	; 0x24
   14040:	bl	12cdc <__mempcpy_chk@plt+0x1b8c>
   14044:	cmp	r6, r0
   14048:	bhi	140ac <__mempcpy_chk@plt+0x2f5c>
   1404c:	add	r6, r0, #1
   14050:	movw	r0, #29120	; 0x71c0
   14054:	movt	r0, #2
   14058:	str	r6, [sl, r5, lsl #3]
   1405c:	cmp	r4, r0
   14060:	beq	1406c <__mempcpy_chk@plt+0x2f1c>
   14064:	mov	r0, r4
   14068:	bl	12a78 <__mempcpy_chk@plt+0x1928>
   1406c:	mov	r0, r6
   14070:	bl	14ef4 <__mempcpy_chk@plt+0x3da4>
   14074:	str	r0, [r9]
   14078:	mov	r4, r0
   1407c:	add	r3, sp, #8
   14080:	ldr	r0, [r7]
   14084:	ldr	r1, [r7, #40]	; 0x28
   14088:	ldr	r2, [r7, #44]	; 0x2c
   1408c:	stm	sp, {r0, r8}
   14090:	ldr	r0, [sp, #20]
   14094:	stm	r3, {r0, r1, r2}
   14098:	mov	r0, r4
   1409c:	mov	r1, r6
   140a0:	ldr	r2, [sp, #32]
   140a4:	ldr	r3, [sp, #36]	; 0x24
   140a8:	bl	12cdc <__mempcpy_chk@plt+0x1b8c>
   140ac:	ldr	r0, [sp, #28]
   140b0:	ldr	r1, [sp, #24]
   140b4:	str	r1, [r0]
   140b8:	mov	r0, r4
   140bc:	sub	sp, fp, #28
   140c0:	pop	{r4, r5, r6, r7, r8, r9, sl, fp, pc}
   140c4:	bl	11138 <abort@plt>
   140c8:	movw	r3, #29072	; 0x7190
   140cc:	movt	r3, #2
   140d0:	b	13f34 <__mempcpy_chk@plt+0x2de4>
   140d4:	movw	r3, #29072	; 0x7190
   140d8:	mov	r1, r0
   140dc:	mov	r0, #0
   140e0:	mvn	r2, #0
   140e4:	movt	r3, #2
   140e8:	b	13f34 <__mempcpy_chk@plt+0x2de4>
   140ec:	movw	r3, #29072	; 0x7190
   140f0:	mov	r2, r1
   140f4:	mov	r1, r0
   140f8:	mov	r0, #0
   140fc:	movt	r3, #2
   14100:	b	13f34 <__mempcpy_chk@plt+0x2de4>
   14104:	push	{fp, lr}
   14108:	mov	fp, sp
   1410c:	sub	sp, sp, #48	; 0x30
   14110:	vmov.i32	q8, #0	; 0x00000000
   14114:	mov	ip, #32
   14118:	mov	r3, sp
   1411c:	mov	lr, r2
   14120:	cmp	r1, #10
   14124:	add	r2, r3, #16
   14128:	vst1.64	{d16-d17}, [r3], ip
   1412c:	vst1.64	{d16-d17}, [r3]
   14130:	vst1.64	{d16-d17}, [r2]
   14134:	beq	14154 <__mempcpy_chk@plt+0x3004>
   14138:	str	r1, [sp]
   1413c:	mov	r3, sp
   14140:	mov	r1, lr
   14144:	mvn	r2, #0
   14148:	bl	13f34 <__mempcpy_chk@plt+0x2de4>
   1414c:	mov	sp, fp
   14150:	pop	{fp, pc}
   14154:	bl	11138 <abort@plt>
   14158:	push	{r4, sl, fp, lr}
   1415c:	add	fp, sp, #8
   14160:	sub	sp, sp, #48	; 0x30
   14164:	mov	ip, r3
   14168:	mov	r3, sp
   1416c:	vmov.i32	q8, #0	; 0x00000000
   14170:	mov	lr, #32
   14174:	cmp	r1, #10
   14178:	add	r4, r3, #16
   1417c:	vst1.64	{d16-d17}, [r3], lr
   14180:	vst1.64	{d16-d17}, [r3]
   14184:	vst1.64	{d16-d17}, [r4]
   14188:	beq	141a8 <__mempcpy_chk@plt+0x3058>
   1418c:	str	r1, [sp]
   14190:	mov	r1, r2
   14194:	mov	r3, sp
   14198:	mov	r2, ip
   1419c:	bl	13f34 <__mempcpy_chk@plt+0x2de4>
   141a0:	sub	sp, fp, #8
   141a4:	pop	{r4, sl, fp, pc}
   141a8:	bl	11138 <abort@plt>
   141ac:	push	{fp, lr}
   141b0:	mov	fp, sp
   141b4:	sub	sp, sp, #48	; 0x30
   141b8:	mov	r3, sp
   141bc:	vmov.i32	q8, #0	; 0x00000000
   141c0:	mov	ip, #32
   141c4:	cmp	r0, #10
   141c8:	add	r2, r3, #16
   141cc:	vst1.64	{d16-d17}, [r3], ip
   141d0:	vst1.64	{d16-d17}, [r3]
   141d4:	vst1.64	{d16-d17}, [r2]
   141d8:	beq	141f8 <__mempcpy_chk@plt+0x30a8>
   141dc:	str	r0, [sp]
   141e0:	mov	r3, sp
   141e4:	mov	r0, #0
   141e8:	mvn	r2, #0
   141ec:	bl	13f34 <__mempcpy_chk@plt+0x2de4>
   141f0:	mov	sp, fp
   141f4:	pop	{fp, pc}
   141f8:	bl	11138 <abort@plt>
   141fc:	push	{fp, lr}
   14200:	mov	fp, sp
   14204:	sub	sp, sp, #48	; 0x30
   14208:	mov	r3, sp
   1420c:	vmov.i32	q8, #0	; 0x00000000
   14210:	mov	ip, #32
   14214:	cmp	r0, #10
   14218:	add	lr, r3, #16
   1421c:	vst1.64	{d16-d17}, [r3], ip
   14220:	vst1.64	{d16-d17}, [r3]
   14224:	vst1.64	{d16-d17}, [lr]
   14228:	beq	14244 <__mempcpy_chk@plt+0x30f4>
   1422c:	str	r0, [sp]
   14230:	mov	r3, sp
   14234:	mov	r0, #0
   14238:	bl	13f34 <__mempcpy_chk@plt+0x2de4>
   1423c:	mov	sp, fp
   14240:	pop	{fp, pc}
   14244:	bl	11138 <abort@plt>
   14248:	push	{r4, sl, fp, lr}
   1424c:	add	fp, sp, #8
   14250:	sub	sp, sp, #48	; 0x30
   14254:	mov	lr, r0
   14258:	movw	r0, #29072	; 0x7190
   1425c:	mov	r3, #32
   14260:	mov	ip, r1
   14264:	mov	r4, #1
   14268:	movt	r0, #2
   1426c:	add	r1, r0, #16
   14270:	vld1.64	{d16-d17}, [r0], r3
   14274:	mov	r3, sp
   14278:	vld1.64	{d18-d19}, [r1]
   1427c:	add	r1, r3, #16
   14280:	vld1.64	{d20-d21}, [r0]
   14284:	add	r0, r3, #32
   14288:	vst1.64	{d18-d19}, [r1]
   1428c:	mov	r1, r3
   14290:	vst1.64	{d20-d21}, [r0]
   14294:	mov	r0, #28
   14298:	and	r0, r0, r2, lsr #3
   1429c:	and	r2, r2, #31
   142a0:	vst1.64	{d16-d17}, [r1], r0
   142a4:	ldr	r0, [r1, #8]
   142a8:	bic	r4, r4, r0, lsr r2
   142ac:	eor	r0, r0, r4, lsl r2
   142b0:	mov	r2, ip
   142b4:	str	r0, [r1, #8]
   142b8:	mov	r0, #0
   142bc:	mov	r1, lr
   142c0:	bl	13f34 <__mempcpy_chk@plt+0x2de4>
   142c4:	sub	sp, fp, #8
   142c8:	pop	{r4, sl, fp, pc}
   142cc:	push	{fp, lr}
   142d0:	mov	fp, sp
   142d4:	sub	sp, sp, #48	; 0x30
   142d8:	mov	ip, r0
   142dc:	movw	r0, #29072	; 0x7190
   142e0:	mov	r3, #32
   142e4:	movt	r0, #2
   142e8:	add	r2, r0, #16
   142ec:	vld1.64	{d16-d17}, [r0], r3
   142f0:	mov	r3, sp
   142f4:	vld1.64	{d18-d19}, [r2]
   142f8:	add	r2, r3, #16
   142fc:	vld1.64	{d20-d21}, [r0]
   14300:	add	r0, r3, #32
   14304:	vst1.64	{d18-d19}, [r2]
   14308:	mov	r2, r3
   1430c:	vst1.64	{d20-d21}, [r0]
   14310:	mov	r0, #28
   14314:	and	r0, r0, r1, lsr #3
   14318:	and	r1, r1, #31
   1431c:	vst1.64	{d16-d17}, [r2], r0
   14320:	mov	r0, #1
   14324:	ldr	lr, [r2, #8]
   14328:	bic	r0, r0, lr, lsr r1
   1432c:	eor	r0, lr, r0, lsl r1
   14330:	mov	r1, ip
   14334:	str	r0, [r2, #8]
   14338:	mov	r0, #0
   1433c:	mvn	r2, #0
   14340:	bl	13f34 <__mempcpy_chk@plt+0x2de4>
   14344:	mov	sp, fp
   14348:	pop	{fp, pc}
   1434c:	push	{fp, lr}
   14350:	mov	fp, sp
   14354:	sub	sp, sp, #48	; 0x30
   14358:	movw	r2, #29072	; 0x7190
   1435c:	mov	r3, #32
   14360:	mov	r1, r0
   14364:	movt	r2, #2
   14368:	add	r0, r2, #16
   1436c:	vld1.64	{d16-d17}, [r2], r3
   14370:	mov	r3, sp
   14374:	vld1.64	{d18-d19}, [r0]
   14378:	add	r0, r3, #16
   1437c:	vld1.64	{d20-d21}, [r2]
   14380:	mov	r2, r3
   14384:	vst1.64	{d18-d19}, [r0]
   14388:	add	r0, r3, #32
   1438c:	vst1.64	{d20-d21}, [r0]
   14390:	mov	r0, #12
   14394:	vst1.64	{d16-d17}, [r2], r0
   14398:	ldr	r0, [r2]
   1439c:	orr	r0, r0, #67108864	; 0x4000000
   143a0:	str	r0, [r2]
   143a4:	mov	r0, #0
   143a8:	mvn	r2, #0
   143ac:	bl	13f34 <__mempcpy_chk@plt+0x2de4>
   143b0:	mov	sp, fp
   143b4:	pop	{fp, pc}
   143b8:	push	{fp, lr}
   143bc:	mov	fp, sp
   143c0:	sub	sp, sp, #48	; 0x30
   143c4:	mov	ip, r1
   143c8:	mov	r1, r0
   143cc:	movw	r0, #29072	; 0x7190
   143d0:	mov	r3, #32
   143d4:	movt	r0, #2
   143d8:	add	r2, r0, #16
   143dc:	vld1.64	{d16-d17}, [r0], r3
   143e0:	mov	r3, sp
   143e4:	vld1.64	{d18-d19}, [r2]
   143e8:	add	r2, r3, #16
   143ec:	vld1.64	{d20-d21}, [r0]
   143f0:	add	r0, r3, #32
   143f4:	vst1.64	{d18-d19}, [r2]
   143f8:	mov	r2, r3
   143fc:	vst1.64	{d20-d21}, [r0]
   14400:	mov	r0, #12
   14404:	vst1.64	{d16-d17}, [r2], r0
   14408:	ldr	r0, [r2]
   1440c:	orr	r0, r0, #67108864	; 0x4000000
   14410:	str	r0, [r2]
   14414:	mov	r0, #0
   14418:	mov	r2, ip
   1441c:	bl	13f34 <__mempcpy_chk@plt+0x2de4>
   14420:	mov	sp, fp
   14424:	pop	{fp, pc}
   14428:	push	{r4, sl, fp, lr}
   1442c:	add	fp, sp, #8
   14430:	sub	sp, sp, #96	; 0x60
   14434:	mov	ip, r2
   14438:	mov	r2, sp
   1443c:	vmov.i32	q8, #0	; 0x00000000
   14440:	mov	r4, #28
   14444:	cmp	r1, #10
   14448:	mov	r3, r2
   1444c:	add	lr, r2, #16
   14450:	vst1.64	{d16-d17}, [r3], r4
   14454:	vst1.64	{d16-d17}, [lr]
   14458:	vst1.32	{d16-d17}, [r3]
   1445c:	beq	144ac <__mempcpy_chk@plt+0x335c>
   14460:	vld1.64	{d16-d17}, [r2], r4
   14464:	vld1.64	{d18-d19}, [lr]
   14468:	add	r3, sp, #48	; 0x30
   1446c:	add	r4, r3, #4
   14470:	vld1.32	{d20-d21}, [r2]
   14474:	add	r2, r3, #20
   14478:	vst1.32	{d16-d17}, [r4]
   1447c:	vst1.32	{d18-d19}, [r2]
   14480:	add	r2, r3, #32
   14484:	vst1.32	{d20-d21}, [r2]
   14488:	str	r1, [sp, #48]	; 0x30
   1448c:	mvn	r2, #0
   14490:	ldr	r1, [sp, #60]	; 0x3c
   14494:	orr	r1, r1, #67108864	; 0x4000000
   14498:	str	r1, [sp, #60]	; 0x3c
   1449c:	mov	r1, ip
   144a0:	bl	13f34 <__mempcpy_chk@plt+0x2de4>
   144a4:	sub	sp, fp, #8
   144a8:	pop	{r4, sl, fp, pc}
   144ac:	bl	11138 <abort@plt>
   144b0:	push	{r4, r5, fp, lr}
   144b4:	add	fp, sp, #8
   144b8:	sub	sp, sp, #48	; 0x30
   144bc:	mov	ip, r3
   144c0:	movw	r3, #29072	; 0x7190
   144c4:	mov	lr, #32
   144c8:	cmp	r1, #0
   144cc:	mov	r5, sp
   144d0:	movt	r3, #2
   144d4:	cmpne	r2, #0
   144d8:	add	r4, r3, #16
   144dc:	vld1.64	{d16-d17}, [r3], lr
   144e0:	vld1.64	{d18-d19}, [r4]
   144e4:	add	r4, r5, #16
   144e8:	vld1.64	{d20-d21}, [r3]
   144ec:	vst1.64	{d16-d17}, [r5], lr
   144f0:	mov	r3, #10
   144f4:	vst1.64	{d18-d19}, [r4]
   144f8:	vst1.64	{d20-d21}, [r5]
   144fc:	str	r3, [sp]
   14500:	bne	14508 <__mempcpy_chk@plt+0x33b8>
   14504:	bl	11138 <abort@plt>
   14508:	str	r2, [sp, #44]	; 0x2c
   1450c:	str	r1, [sp, #40]	; 0x28
   14510:	mov	r3, sp
   14514:	mov	r1, ip
   14518:	mvn	r2, #0
   1451c:	bl	13f34 <__mempcpy_chk@plt+0x2de4>
   14520:	sub	sp, fp, #8
   14524:	pop	{r4, r5, fp, pc}
   14528:	push	{r4, r5, fp, lr}
   1452c:	add	fp, sp, #8
   14530:	sub	sp, sp, #48	; 0x30
   14534:	mov	lr, r3
   14538:	movw	r3, #29072	; 0x7190
   1453c:	mov	ip, #32
   14540:	cmp	r1, #0
   14544:	mov	r5, sp
   14548:	movt	r3, #2
   1454c:	cmpne	r2, #0
   14550:	add	r4, r3, #16
   14554:	vld1.64	{d16-d17}, [r3], ip
   14558:	vld1.64	{d18-d19}, [r4]
   1455c:	add	r4, r5, #16
   14560:	vld1.64	{d20-d21}, [r3]
   14564:	vst1.64	{d16-d17}, [r5], ip
   14568:	mov	r3, #10
   1456c:	vst1.64	{d18-d19}, [r4]
   14570:	vst1.64	{d20-d21}, [r5]
   14574:	str	r3, [sp]
   14578:	bne	14580 <__mempcpy_chk@plt+0x3430>
   1457c:	bl	11138 <abort@plt>
   14580:	ldr	ip, [fp, #8]
   14584:	str	r2, [sp, #44]	; 0x2c
   14588:	str	r1, [sp, #40]	; 0x28
   1458c:	mov	r3, sp
   14590:	mov	r1, lr
   14594:	mov	r2, ip
   14598:	bl	13f34 <__mempcpy_chk@plt+0x2de4>
   1459c:	sub	sp, fp, #8
   145a0:	pop	{r4, r5, fp, pc}
   145a4:	push	{r4, sl, fp, lr}
   145a8:	add	fp, sp, #8
   145ac:	sub	sp, sp, #48	; 0x30
   145b0:	mov	ip, r2
   145b4:	movw	r2, #29072	; 0x7190
   145b8:	mov	lr, #32
   145bc:	cmp	r0, #0
   145c0:	mov	r4, sp
   145c4:	movt	r2, #2
   145c8:	cmpne	r1, #0
   145cc:	add	r3, r2, #16
   145d0:	vld1.64	{d16-d17}, [r2], lr
   145d4:	vld1.64	{d18-d19}, [r3]
   145d8:	add	r3, r4, #16
   145dc:	vld1.64	{d20-d21}, [r2]
   145e0:	vst1.64	{d16-d17}, [r4], lr
   145e4:	mov	r2, #10
   145e8:	vst1.64	{d18-d19}, [r3]
   145ec:	vst1.64	{d20-d21}, [r4]
   145f0:	str	r2, [sp]
   145f4:	bne	145fc <__mempcpy_chk@plt+0x34ac>
   145f8:	bl	11138 <abort@plt>
   145fc:	str	r1, [sp, #44]	; 0x2c
   14600:	str	r0, [sp, #40]	; 0x28
   14604:	mov	r3, sp
   14608:	mov	r0, #0
   1460c:	mov	r1, ip
   14610:	mvn	r2, #0
   14614:	bl	13f34 <__mempcpy_chk@plt+0x2de4>
   14618:	sub	sp, fp, #8
   1461c:	pop	{r4, sl, fp, pc}
   14620:	push	{r4, r5, fp, lr}
   14624:	add	fp, sp, #8
   14628:	sub	sp, sp, #48	; 0x30
   1462c:	mov	lr, r2
   14630:	movw	r2, #29072	; 0x7190
   14634:	mov	ip, r3
   14638:	mov	r3, #32
   1463c:	cmp	r0, #0
   14640:	mov	r5, sp
   14644:	movt	r2, #2
   14648:	cmpne	r1, #0
   1464c:	add	r4, r2, #16
   14650:	vld1.64	{d16-d17}, [r2], r3
   14654:	vld1.64	{d18-d19}, [r4]
   14658:	add	r4, r5, #16
   1465c:	vld1.64	{d20-d21}, [r2]
   14660:	vst1.64	{d16-d17}, [r5], r3
   14664:	mov	r2, #10
   14668:	vst1.64	{d18-d19}, [r4]
   1466c:	vst1.64	{d20-d21}, [r5]
   14670:	str	r2, [sp]
   14674:	bne	1467c <__mempcpy_chk@plt+0x352c>
   14678:	bl	11138 <abort@plt>
   1467c:	str	r1, [sp, #44]	; 0x2c
   14680:	str	r0, [sp, #40]	; 0x28
   14684:	mov	r3, sp
   14688:	mov	r0, #0
   1468c:	mov	r1, lr
   14690:	mov	r2, ip
   14694:	bl	13f34 <__mempcpy_chk@plt+0x2de4>
   14698:	sub	sp, fp, #8
   1469c:	pop	{r4, r5, fp, pc}
   146a0:	movw	r3, #28944	; 0x7110
   146a4:	movt	r3, #2
   146a8:	b	13f34 <__mempcpy_chk@plt+0x2de4>
   146ac:	movw	r3, #28944	; 0x7110
   146b0:	mov	r2, r1
   146b4:	mov	r1, r0
   146b8:	mov	r0, #0
   146bc:	movt	r3, #2
   146c0:	b	13f34 <__mempcpy_chk@plt+0x2de4>
   146c4:	movw	r3, #28944	; 0x7110
   146c8:	mvn	r2, #0
   146cc:	movt	r3, #2
   146d0:	b	13f34 <__mempcpy_chk@plt+0x2de4>
   146d4:	movw	r3, #28944	; 0x7110
   146d8:	mov	r1, r0
   146dc:	mov	r0, #0
   146e0:	mvn	r2, #0
   146e4:	movt	r3, #2
   146e8:	b	13f34 <__mempcpy_chk@plt+0x2de4>
   146ec:	push	{r4, r5, fp, lr}
   146f0:	add	fp, sp, #8
   146f4:	mov	r5, r0
   146f8:	mov	r4, r1
   146fc:	mov	r0, #0
   14700:	mov	r2, #5
   14704:	mov	r1, r5
   14708:	bl	10f70 <dcgettext@plt>
   1470c:	cmp	r0, r5
   14710:	popne	{r4, r5, fp, pc}
   14714:	bl	158a4 <__mempcpy_chk@plt+0x4754>
   14718:	ldrb	r1, [r0]
   1471c:	and	r1, r1, #223	; 0xdf
   14720:	cmp	r1, #71	; 0x47
   14724:	beq	1478c <__mempcpy_chk@plt+0x363c>
   14728:	cmp	r1, #85	; 0x55
   1472c:	bne	147b0 <__mempcpy_chk@plt+0x3660>
   14730:	ldrb	r1, [r0, #1]
   14734:	and	r1, r1, #223	; 0xdf
   14738:	cmp	r1, #84	; 0x54
   1473c:	bne	147b0 <__mempcpy_chk@plt+0x3660>
   14740:	ldrb	r1, [r0, #2]
   14744:	and	r1, r1, #223	; 0xdf
   14748:	cmp	r1, #70	; 0x46
   1474c:	ldrbeq	r1, [r0, #3]
   14750:	cmpeq	r1, #45	; 0x2d
   14754:	bne	147b0 <__mempcpy_chk@plt+0x3660>
   14758:	ldrb	r1, [r0, #4]
   1475c:	cmp	r1, #56	; 0x38
   14760:	ldrbeq	r0, [r0, #5]
   14764:	cmpeq	r0, #0
   14768:	bne	147b0 <__mempcpy_chk@plt+0x3660>
   1476c:	ldrb	r1, [r5]
   14770:	movw	r2, #25860	; 0x6504
   14774:	movw	r0, #25864	; 0x6508
   14778:	movt	r2, #1
   1477c:	movt	r0, #1
   14780:	cmp	r1, #96	; 0x60
   14784:	moveq	r0, r2
   14788:	pop	{r4, r5, fp, pc}
   1478c:	ldrb	r1, [r0, #1]
   14790:	and	r1, r1, #223	; 0xdf
   14794:	cmp	r1, #66	; 0x42
   14798:	bne	147b0 <__mempcpy_chk@plt+0x3660>
   1479c:	ldrb	r1, [r0, #2]
   147a0:	cmp	r1, #49	; 0x31
   147a4:	ldrbeq	r1, [r0, #3]
   147a8:	cmpeq	r1, #56	; 0x38
   147ac:	beq	147cc <__mempcpy_chk@plt+0x367c>
   147b0:	movw	r1, #25856	; 0x6500
   147b4:	movw	r0, #25279	; 0x62bf
   147b8:	cmp	r4, #9
   147bc:	movt	r1, #1
   147c0:	movt	r0, #1
   147c4:	moveq	r0, r1
   147c8:	pop	{r4, r5, fp, pc}
   147cc:	ldrb	r1, [r0, #4]
   147d0:	cmp	r1, #48	; 0x30
   147d4:	ldrbeq	r1, [r0, #5]
   147d8:	cmpeq	r1, #51	; 0x33
   147dc:	bne	147b0 <__mempcpy_chk@plt+0x3660>
   147e0:	ldrb	r1, [r0, #6]
   147e4:	cmp	r1, #48	; 0x30
   147e8:	ldrbeq	r0, [r0, #7]
   147ec:	cmpeq	r0, #0
   147f0:	bne	147b0 <__mempcpy_chk@plt+0x3660>
   147f4:	ldrb	r1, [r5]
   147f8:	movw	r2, #25868	; 0x650c
   147fc:	movw	r0, #25872	; 0x6510
   14800:	movt	r2, #1
   14804:	movt	r0, #1
   14808:	b	14780 <__mempcpy_chk@plt+0x3630>
   1480c:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   14810:	add	fp, sp, #24
   14814:	sub	sp, sp, #32
   14818:	ldr	r6, [fp, #12]
   1481c:	ldr	r7, [fp, #8]
   14820:	mov	r4, r2
   14824:	mov	r8, r0
   14828:	cmp	r1, #0
   1482c:	beq	14854 <__mempcpy_chk@plt+0x3704>
   14830:	movw	r2, #25960	; 0x6568
   14834:	mov	r5, r1
   14838:	str	r3, [sp, #4]
   1483c:	str	r4, [sp]
   14840:	mov	r0, r8
   14844:	mov	r1, #1
   14848:	movt	r2, #1
   1484c:	mov	r3, r5
   14850:	b	1486c <__mempcpy_chk@plt+0x371c>
   14854:	movw	r2, #25972	; 0x6574
   14858:	str	r3, [sp]
   1485c:	mov	r0, r8
   14860:	mov	r1, #1
   14864:	mov	r3, r4
   14868:	movt	r2, #1
   1486c:	bl	110b4 <__fprintf_chk@plt>
   14870:	movw	r1, #25979	; 0x657b
   14874:	mov	r0, #0
   14878:	mov	r2, #5
   1487c:	movt	r1, #1
   14880:	bl	10f70 <dcgettext@plt>
   14884:	movw	r2, #26697	; 0x6849
   14888:	mov	r3, r0
   1488c:	movw	r0, #2022	; 0x7e6
   14890:	mov	r1, #1
   14894:	str	r0, [sp]
   14898:	movt	r2, #1
   1489c:	mov	r0, r8
   148a0:	bl	110b4 <__fprintf_chk@plt>
   148a4:	movw	r4, #25200	; 0x6270
   148a8:	mov	r1, r8
   148ac:	movt	r4, #1
   148b0:	mov	r0, r4
   148b4:	bl	10ec8 <fputs_unlocked@plt>
   148b8:	movw	r1, #25983	; 0x657f
   148bc:	mov	r0, #0
   148c0:	mov	r2, #5
   148c4:	movt	r1, #1
   148c8:	bl	10f70 <dcgettext@plt>
   148cc:	movw	r3, #26154	; 0x662a
   148d0:	mov	r2, r0
   148d4:	mov	r0, r8
   148d8:	mov	r1, #1
   148dc:	movt	r3, #1
   148e0:	bl	110b4 <__fprintf_chk@plt>
   148e4:	mov	r0, r4
   148e8:	mov	r1, r8
   148ec:	bl	10ec8 <fputs_unlocked@plt>
   148f0:	cmp	r6, #9
   148f4:	bhi	14930 <__mempcpy_chk@plt+0x37e0>
   148f8:	add	r0, pc, #0
   148fc:	ldr	pc, [r0, r6, lsl #2]
   14900:	andeq	r4, r1, r8, lsr #18
   14904:	andeq	r4, r1, ip, lsr r9
   14908:	andeq	r4, r1, ip, ror #18
   1490c:	muleq	r1, r4, r9
   14910:			; <UNDEFINED> instruction: 0x000149bc
   14914:	andeq	r4, r1, r4, ror #19
   14918:	andeq	r4, r1, ip, lsl #20
   1491c:	andeq	r4, r1, r4, asr #20
   14920:	andeq	r4, r1, r4, ror #21
   14924:	andeq	r4, r1, ip, lsl #21
   14928:	sub	sp, fp, #24
   1492c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14930:	movw	r1, #26507	; 0x678b
   14934:	movt	r1, #1
   14938:	b	14a94 <__mempcpy_chk@plt+0x3944>
   1493c:	movw	r1, #26188	; 0x664c
   14940:	mov	r0, #0
   14944:	mov	r2, #5
   14948:	movt	r1, #1
   1494c:	bl	10f70 <dcgettext@plt>
   14950:	ldr	r3, [r7]
   14954:	mov	r2, r0
   14958:	mov	r0, r8
   1495c:	mov	r1, #1
   14960:	sub	sp, fp, #24
   14964:	pop	{r4, r5, r6, r7, r8, sl, fp, lr}
   14968:	b	110b4 <__fprintf_chk@plt>
   1496c:	movw	r1, #26204	; 0x665c
   14970:	mov	r0, #0
   14974:	mov	r2, #5
   14978:	movt	r1, #1
   1497c:	bl	10f70 <dcgettext@plt>
   14980:	mov	r2, r0
   14984:	ldr	r3, [r7]
   14988:	ldr	r0, [r7, #4]
   1498c:	str	r0, [sp]
   14990:	b	14a80 <__mempcpy_chk@plt+0x3930>
   14994:	movw	r1, #26227	; 0x6673
   14998:	mov	r0, #0
   1499c:	mov	r2, #5
   149a0:	movt	r1, #1
   149a4:	bl	10f70 <dcgettext@plt>
   149a8:	ldr	r3, [r7]
   149ac:	mov	r2, r0
   149b0:	ldmib	r7, {r0, r1}
   149b4:	stm	sp, {r0, r1}
   149b8:	b	14a80 <__mempcpy_chk@plt+0x3930>
   149bc:	movw	r1, #26255	; 0x668f
   149c0:	mov	r0, #0
   149c4:	mov	r2, #5
   149c8:	movt	r1, #1
   149cc:	bl	10f70 <dcgettext@plt>
   149d0:	ldr	r3, [r7]
   149d4:	mov	r2, r0
   149d8:	ldmib	r7, {r0, r1, r7}
   149dc:	stm	sp, {r0, r1, r7}
   149e0:	b	14a80 <__mempcpy_chk@plt+0x3930>
   149e4:	movw	r1, #26287	; 0x66af
   149e8:	mov	r0, #0
   149ec:	mov	r2, #5
   149f0:	movt	r1, #1
   149f4:	bl	10f70 <dcgettext@plt>
   149f8:	ldr	r3, [r7]
   149fc:	mov	r2, r0
   14a00:	ldmib	r7, {r0, r1, r6, r7}
   14a04:	stm	sp, {r0, r1, r6, r7}
   14a08:	b	14a80 <__mempcpy_chk@plt+0x3930>
   14a0c:	movw	r1, #26323	; 0x66d3
   14a10:	mov	r0, #0
   14a14:	mov	r2, #5
   14a18:	movt	r1, #1
   14a1c:	bl	10f70 <dcgettext@plt>
   14a20:	ldr	r3, [r7]
   14a24:	mov	r2, r0
   14a28:	ldmib	r7, {r0, r1, r6}
   14a2c:	ldr	r5, [r7, #16]
   14a30:	ldr	r7, [r7, #20]
   14a34:	stm	sp, {r0, r1, r6}
   14a38:	str	r5, [sp, #12]
   14a3c:	str	r7, [sp, #16]
   14a40:	b	14a80 <__mempcpy_chk@plt+0x3930>
   14a44:	movw	r1, #26363	; 0x66fb
   14a48:	mov	r0, #0
   14a4c:	mov	r2, #5
   14a50:	movt	r1, #1
   14a54:	bl	10f70 <dcgettext@plt>
   14a58:	ldr	r3, [r7]
   14a5c:	mov	r2, r0
   14a60:	ldmib	r7, {r0, r1, r6}
   14a64:	ldr	r5, [r7, #16]
   14a68:	ldr	r4, [r7, #20]
   14a6c:	ldr	r7, [r7, #24]
   14a70:	stm	sp, {r0, r1, r6}
   14a74:	str	r5, [sp, #12]
   14a78:	str	r4, [sp, #16]
   14a7c:	str	r7, [sp, #20]
   14a80:	mov	r0, r8
   14a84:	mov	r1, #1
   14a88:	b	14b34 <__mempcpy_chk@plt+0x39e4>
   14a8c:	movw	r1, #26455	; 0x6757
   14a90:	movt	r1, #1
   14a94:	mov	r0, #0
   14a98:	mov	r2, #5
   14a9c:	bl	10f70 <dcgettext@plt>
   14aa0:	mov	ip, r0
   14aa4:	ldr	r3, [r7]
   14aa8:	ldr	r0, [r7, #4]
   14aac:	ldr	r1, [r7, #8]
   14ab0:	ldr	r6, [r7, #12]
   14ab4:	ldr	r5, [r7, #16]
   14ab8:	ldr	r4, [r7, #20]
   14abc:	ldr	r2, [r7, #24]
   14ac0:	ldr	lr, [r7, #28]
   14ac4:	ldr	r7, [r7, #32]
   14ac8:	stm	sp, {r0, r1, r6}
   14acc:	str	r5, [sp, #12]
   14ad0:	str	r4, [sp, #16]
   14ad4:	str	r2, [sp, #20]
   14ad8:	str	lr, [sp, #24]
   14adc:	str	r7, [sp, #28]
   14ae0:	b	14b28 <__mempcpy_chk@plt+0x39d8>
   14ae4:	movw	r1, #26407	; 0x6727
   14ae8:	mov	r0, #0
   14aec:	mov	r2, #5
   14af0:	movt	r1, #1
   14af4:	bl	10f70 <dcgettext@plt>
   14af8:	mov	ip, r0
   14afc:	ldr	r3, [r7]
   14b00:	ldmib	r7, {r0, r1, r6}
   14b04:	ldr	r5, [r7, #16]
   14b08:	ldr	r4, [r7, #20]
   14b0c:	ldr	r2, [r7, #24]
   14b10:	ldr	r7, [r7, #28]
   14b14:	stm	sp, {r0, r1, r6}
   14b18:	str	r5, [sp, #12]
   14b1c:	str	r4, [sp, #16]
   14b20:	str	r2, [sp, #20]
   14b24:	str	r7, [sp, #24]
   14b28:	mov	r0, r8
   14b2c:	mov	r1, #1
   14b30:	mov	r2, ip
   14b34:	bl	110b4 <__fprintf_chk@plt>
   14b38:	sub	sp, fp, #24
   14b3c:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   14b40:	push	{r4, sl, fp, lr}
   14b44:	add	fp, sp, #8
   14b48:	sub	sp, sp, #8
   14b4c:	ldr	ip, [fp, #8]
   14b50:	mov	lr, #0
   14b54:	ldr	r4, [ip, lr, lsl #2]
   14b58:	add	lr, lr, #1
   14b5c:	cmp	r4, #0
   14b60:	bne	14b54 <__mempcpy_chk@plt+0x3a04>
   14b64:	sub	r4, lr, #1
   14b68:	str	ip, [sp]
   14b6c:	str	r4, [sp, #4]
   14b70:	bl	1480c <__mempcpy_chk@plt+0x36bc>
   14b74:	sub	sp, fp, #8
   14b78:	pop	{r4, sl, fp, pc}
   14b7c:	push	{fp, lr}
   14b80:	mov	fp, sp
   14b84:	sub	sp, sp, #48	; 0x30
   14b88:	ldr	ip, [fp, #8]
   14b8c:	ldr	lr, [ip]
   14b90:	cmp	lr, #0
   14b94:	str	lr, [sp, #8]
   14b98:	beq	14c34 <__mempcpy_chk@plt+0x3ae4>
   14b9c:	ldr	lr, [ip, #4]
   14ba0:	cmp	lr, #0
   14ba4:	str	lr, [sp, #12]
   14ba8:	beq	14c3c <__mempcpy_chk@plt+0x3aec>
   14bac:	ldr	lr, [ip, #8]
   14bb0:	cmp	lr, #0
   14bb4:	str	lr, [sp, #16]
   14bb8:	beq	14c44 <__mempcpy_chk@plt+0x3af4>
   14bbc:	ldr	lr, [ip, #12]
   14bc0:	cmp	lr, #0
   14bc4:	str	lr, [sp, #20]
   14bc8:	beq	14c4c <__mempcpy_chk@plt+0x3afc>
   14bcc:	ldr	lr, [ip, #16]
   14bd0:	cmp	lr, #0
   14bd4:	str	lr, [sp, #24]
   14bd8:	beq	14c54 <__mempcpy_chk@plt+0x3b04>
   14bdc:	ldr	lr, [ip, #20]
   14be0:	cmp	lr, #0
   14be4:	str	lr, [sp, #28]
   14be8:	beq	14c5c <__mempcpy_chk@plt+0x3b0c>
   14bec:	ldr	lr, [ip, #24]
   14bf0:	cmp	lr, #0
   14bf4:	str	lr, [sp, #32]
   14bf8:	beq	14c64 <__mempcpy_chk@plt+0x3b14>
   14bfc:	ldr	lr, [ip, #28]
   14c00:	cmp	lr, #0
   14c04:	str	lr, [sp, #36]	; 0x24
   14c08:	beq	14c6c <__mempcpy_chk@plt+0x3b1c>
   14c0c:	ldr	lr, [ip, #32]
   14c10:	cmp	lr, #0
   14c14:	str	lr, [sp, #40]	; 0x28
   14c18:	beq	14c74 <__mempcpy_chk@plt+0x3b24>
   14c1c:	ldr	lr, [ip, #36]	; 0x24
   14c20:	mov	ip, #10
   14c24:	cmp	lr, #0
   14c28:	str	lr, [sp, #44]	; 0x2c
   14c2c:	movweq	ip, #9
   14c30:	b	14c78 <__mempcpy_chk@plt+0x3b28>
   14c34:	mov	ip, #0
   14c38:	b	14c78 <__mempcpy_chk@plt+0x3b28>
   14c3c:	mov	ip, #1
   14c40:	b	14c78 <__mempcpy_chk@plt+0x3b28>
   14c44:	mov	ip, #2
   14c48:	b	14c78 <__mempcpy_chk@plt+0x3b28>
   14c4c:	mov	ip, #3
   14c50:	b	14c78 <__mempcpy_chk@plt+0x3b28>
   14c54:	mov	ip, #4
   14c58:	b	14c78 <__mempcpy_chk@plt+0x3b28>
   14c5c:	mov	ip, #5
   14c60:	b	14c78 <__mempcpy_chk@plt+0x3b28>
   14c64:	mov	ip, #6
   14c68:	b	14c78 <__mempcpy_chk@plt+0x3b28>
   14c6c:	mov	ip, #7
   14c70:	b	14c78 <__mempcpy_chk@plt+0x3b28>
   14c74:	mov	ip, #8
   14c78:	add	lr, sp, #8
   14c7c:	str	ip, [sp, #4]
   14c80:	str	lr, [sp]
   14c84:	bl	1480c <__mempcpy_chk@plt+0x36bc>
   14c88:	mov	sp, fp
   14c8c:	pop	{fp, pc}
   14c90:	push	{fp, lr}
   14c94:	mov	fp, sp
   14c98:	sub	sp, sp, #56	; 0x38
   14c9c:	add	ip, fp, #8
   14ca0:	str	ip, [sp, #12]
   14ca4:	ldr	lr, [fp, #8]
   14ca8:	cmp	lr, #0
   14cac:	str	lr, [sp, #16]
   14cb0:	beq	14d4c <__mempcpy_chk@plt+0x3bfc>
   14cb4:	ldr	lr, [ip, #4]
   14cb8:	cmp	lr, #0
   14cbc:	str	lr, [sp, #20]
   14cc0:	beq	14d54 <__mempcpy_chk@plt+0x3c04>
   14cc4:	ldr	lr, [ip, #8]
   14cc8:	cmp	lr, #0
   14ccc:	str	lr, [sp, #24]
   14cd0:	beq	14d5c <__mempcpy_chk@plt+0x3c0c>
   14cd4:	ldr	lr, [ip, #12]
   14cd8:	cmp	lr, #0
   14cdc:	str	lr, [sp, #28]
   14ce0:	beq	14d64 <__mempcpy_chk@plt+0x3c14>
   14ce4:	ldr	lr, [ip, #16]
   14ce8:	cmp	lr, #0
   14cec:	str	lr, [sp, #32]
   14cf0:	beq	14d6c <__mempcpy_chk@plt+0x3c1c>
   14cf4:	ldr	lr, [ip, #20]
   14cf8:	cmp	lr, #0
   14cfc:	str	lr, [sp, #36]	; 0x24
   14d00:	beq	14d74 <__mempcpy_chk@plt+0x3c24>
   14d04:	ldr	lr, [ip, #24]
   14d08:	cmp	lr, #0
   14d0c:	str	lr, [sp, #40]	; 0x28
   14d10:	beq	14d7c <__mempcpy_chk@plt+0x3c2c>
   14d14:	ldr	lr, [ip, #28]
   14d18:	cmp	lr, #0
   14d1c:	str	lr, [sp, #44]	; 0x2c
   14d20:	beq	14d84 <__mempcpy_chk@plt+0x3c34>
   14d24:	ldr	lr, [ip, #32]
   14d28:	cmp	lr, #0
   14d2c:	str	lr, [sp, #48]	; 0x30
   14d30:	beq	14d8c <__mempcpy_chk@plt+0x3c3c>
   14d34:	ldr	lr, [ip, #36]	; 0x24
   14d38:	mov	ip, #10
   14d3c:	cmp	lr, #0
   14d40:	str	lr, [sp, #52]	; 0x34
   14d44:	movweq	ip, #9
   14d48:	b	14d90 <__mempcpy_chk@plt+0x3c40>
   14d4c:	mov	ip, #0
   14d50:	b	14d90 <__mempcpy_chk@plt+0x3c40>
   14d54:	mov	ip, #1
   14d58:	b	14d90 <__mempcpy_chk@plt+0x3c40>
   14d5c:	mov	ip, #2
   14d60:	b	14d90 <__mempcpy_chk@plt+0x3c40>
   14d64:	mov	ip, #3
   14d68:	b	14d90 <__mempcpy_chk@plt+0x3c40>
   14d6c:	mov	ip, #4
   14d70:	b	14d90 <__mempcpy_chk@plt+0x3c40>
   14d74:	mov	ip, #5
   14d78:	b	14d90 <__mempcpy_chk@plt+0x3c40>
   14d7c:	mov	ip, #6
   14d80:	b	14d90 <__mempcpy_chk@plt+0x3c40>
   14d84:	mov	ip, #7
   14d88:	b	14d90 <__mempcpy_chk@plt+0x3c40>
   14d8c:	mov	ip, #8
   14d90:	add	lr, sp, #16
   14d94:	str	ip, [sp, #4]
   14d98:	str	lr, [sp]
   14d9c:	bl	1480c <__mempcpy_chk@plt+0x36bc>
   14da0:	mov	sp, fp
   14da4:	pop	{fp, pc}
   14da8:	push	{fp, lr}
   14dac:	mov	fp, sp
   14db0:	movw	r0, #29012	; 0x7154
   14db4:	movt	r0, #2
   14db8:	ldr	r1, [r0]
   14dbc:	movw	r0, #25200	; 0x6270
   14dc0:	movt	r0, #1
   14dc4:	bl	10ec8 <fputs_unlocked@plt>
   14dc8:	movw	r1, #26567	; 0x67c7
   14dcc:	mov	r0, #0
   14dd0:	mov	r2, #5
   14dd4:	movt	r1, #1
   14dd8:	bl	10f70 <dcgettext@plt>
   14ddc:	movw	r2, #26587	; 0x67db
   14de0:	mov	r1, r0
   14de4:	mov	r0, #1
   14de8:	movt	r2, #1
   14dec:	bl	1109c <__printf_chk@plt>
   14df0:	movw	r1, #26609	; 0x67f1
   14df4:	mov	r0, #0
   14df8:	mov	r2, #5
   14dfc:	movt	r1, #1
   14e00:	bl	10f70 <dcgettext@plt>
   14e04:	movw	r2, #24640	; 0x6040
   14e08:	movw	r3, #25009	; 0x61b1
   14e0c:	mov	r1, r0
   14e10:	mov	r0, #1
   14e14:	movt	r2, #1
   14e18:	movt	r3, #1
   14e1c:	bl	1109c <__printf_chk@plt>
   14e20:	movw	r1, #26629	; 0x6805
   14e24:	mov	r0, #0
   14e28:	mov	r2, #5
   14e2c:	movt	r1, #1
   14e30:	bl	10f70 <dcgettext@plt>
   14e34:	movw	r2, #26668	; 0x682c
   14e38:	mov	r1, r0
   14e3c:	mov	r0, #1
   14e40:	movt	r2, #1
   14e44:	pop	{fp, lr}
   14e48:	b	1109c <__printf_chk@plt>
   14e4c:	push	{r4, r5, r6, sl, fp, lr}
   14e50:	add	fp, sp, #16
   14e54:	mov	r4, r2
   14e58:	mov	r5, r1
   14e5c:	mov	r6, r0
   14e60:	bl	1593c <__mempcpy_chk@plt+0x47ec>
   14e64:	cmp	r0, #0
   14e68:	popne	{r4, r5, r6, sl, fp, pc}
   14e6c:	cmp	r6, #0
   14e70:	beq	14e84 <__mempcpy_chk@plt+0x3d34>
   14e74:	cmp	r5, #0
   14e78:	cmpne	r4, #0
   14e7c:	bne	14e84 <__mempcpy_chk@plt+0x3d34>
   14e80:	pop	{r4, r5, r6, sl, fp, pc}
   14e84:	bl	15424 <__mempcpy_chk@plt+0x42d4>
   14e88:	push	{r4, r5, r6, sl, fp, lr}
   14e8c:	add	fp, sp, #16
   14e90:	mov	r4, r2
   14e94:	mov	r5, r1
   14e98:	mov	r6, r0
   14e9c:	bl	1593c <__mempcpy_chk@plt+0x47ec>
   14ea0:	cmp	r0, #0
   14ea4:	popne	{r4, r5, r6, sl, fp, pc}
   14ea8:	cmp	r6, #0
   14eac:	beq	14ec0 <__mempcpy_chk@plt+0x3d70>
   14eb0:	cmp	r5, #0
   14eb4:	cmpne	r4, #0
   14eb8:	bne	14ec0 <__mempcpy_chk@plt+0x3d70>
   14ebc:	pop	{r4, r5, r6, sl, fp, pc}
   14ec0:	bl	15424 <__mempcpy_chk@plt+0x42d4>
   14ec4:	push	{fp, lr}
   14ec8:	mov	fp, sp
   14ecc:	bl	15554 <__mempcpy_chk@plt+0x4404>
   14ed0:	cmp	r0, #0
   14ed4:	popne	{fp, pc}
   14ed8:	bl	15424 <__mempcpy_chk@plt+0x42d4>
   14edc:	push	{fp, lr}
   14ee0:	mov	fp, sp
   14ee4:	bl	15554 <__mempcpy_chk@plt+0x4404>
   14ee8:	cmp	r0, #0
   14eec:	popne	{fp, pc}
   14ef0:	bl	15424 <__mempcpy_chk@plt+0x42d4>
   14ef4:	push	{fp, lr}
   14ef8:	mov	fp, sp
   14efc:	bl	15554 <__mempcpy_chk@plt+0x4404>
   14f00:	cmp	r0, #0
   14f04:	popne	{fp, pc}
   14f08:	bl	15424 <__mempcpy_chk@plt+0x42d4>
   14f0c:	push	{r4, r5, fp, lr}
   14f10:	add	fp, sp, #8
   14f14:	mov	r4, r1
   14f18:	mov	r5, r0
   14f1c:	bl	15584 <__mempcpy_chk@plt+0x4434>
   14f20:	cmp	r0, #0
   14f24:	popne	{r4, r5, fp, pc}
   14f28:	cmp	r5, #0
   14f2c:	beq	14f3c <__mempcpy_chk@plt+0x3dec>
   14f30:	cmp	r4, #0
   14f34:	bne	14f3c <__mempcpy_chk@plt+0x3dec>
   14f38:	pop	{r4, r5, fp, pc}
   14f3c:	bl	15424 <__mempcpy_chk@plt+0x42d4>
   14f40:	push	{fp, lr}
   14f44:	mov	fp, sp
   14f48:	cmp	r1, #0
   14f4c:	orreq	r1, r1, #1
   14f50:	bl	15584 <__mempcpy_chk@plt+0x4434>
   14f54:	cmp	r0, #0
   14f58:	popne	{fp, pc}
   14f5c:	bl	15424 <__mempcpy_chk@plt+0x42d4>
   14f60:	push	{fp, lr}
   14f64:	mov	fp, sp
   14f68:	clz	r3, r2
   14f6c:	lsr	ip, r3, #5
   14f70:	clz	r3, r1
   14f74:	lsr	r3, r3, #5
   14f78:	orrs	r3, r3, ip
   14f7c:	movwne	r1, #1
   14f80:	movwne	r2, #1
   14f84:	bl	1593c <__mempcpy_chk@plt+0x47ec>
   14f88:	cmp	r0, #0
   14f8c:	popne	{fp, pc}
   14f90:	bl	15424 <__mempcpy_chk@plt+0x42d4>
   14f94:	push	{fp, lr}
   14f98:	mov	fp, sp
   14f9c:	mov	r2, r1
   14fa0:	mov	r1, r0
   14fa4:	mov	r0, #0
   14fa8:	bl	1593c <__mempcpy_chk@plt+0x47ec>
   14fac:	cmp	r0, #0
   14fb0:	popne	{fp, pc}
   14fb4:	bl	15424 <__mempcpy_chk@plt+0x42d4>
   14fb8:	push	{fp, lr}
   14fbc:	mov	fp, sp
   14fc0:	mov	r2, r1
   14fc4:	mov	r1, r0
   14fc8:	clz	r0, r2
   14fcc:	clz	r3, r1
   14fd0:	lsr	r0, r0, #5
   14fd4:	lsr	r3, r3, #5
   14fd8:	orrs	r0, r3, r0
   14fdc:	movwne	r1, #1
   14fe0:	movwne	r2, #1
   14fe4:	mov	r0, #0
   14fe8:	bl	1593c <__mempcpy_chk@plt+0x47ec>
   14fec:	cmp	r0, #0
   14ff0:	popne	{fp, pc}
   14ff4:	bl	15424 <__mempcpy_chk@plt+0x42d4>
   14ff8:	push	{r4, r5, r6, sl, fp, lr}
   14ffc:	add	fp, sp, #16
   15000:	ldr	r5, [r1]
   15004:	mov	r4, r1
   15008:	mov	r6, r0
   1500c:	cmp	r0, #0
   15010:	beq	15028 <__mempcpy_chk@plt+0x3ed8>
   15014:	mov	r0, #1
   15018:	add	r0, r0, r5, lsr #1
   1501c:	adds	r5, r5, r0
   15020:	bcc	15030 <__mempcpy_chk@plt+0x3ee0>
   15024:	b	1506c <__mempcpy_chk@plt+0x3f1c>
   15028:	cmp	r5, #0
   1502c:	movweq	r5, #64	; 0x40
   15030:	mov	r0, r6
   15034:	mov	r1, r5
   15038:	mov	r2, #1
   1503c:	bl	1593c <__mempcpy_chk@plt+0x47ec>
   15040:	cmp	r5, #0
   15044:	mov	r1, r5
   15048:	movwne	r1, #1
   1504c:	cmp	r0, #0
   15050:	bne	15064 <__mempcpy_chk@plt+0x3f14>
   15054:	clz	r2, r6
   15058:	lsr	r2, r2, #5
   1505c:	orrs	r1, r2, r1
   15060:	bne	1506c <__mempcpy_chk@plt+0x3f1c>
   15064:	str	r5, [r4]
   15068:	pop	{r4, r5, r6, sl, fp, pc}
   1506c:	bl	15424 <__mempcpy_chk@plt+0x42d4>
   15070:	push	{r4, r5, r6, r7, fp, lr}
   15074:	add	fp, sp, #16
   15078:	ldr	r5, [r1]
   1507c:	mov	r6, r2
   15080:	mov	r4, r1
   15084:	mov	r7, r0
   15088:	cmp	r0, #0
   1508c:	beq	150a4 <__mempcpy_chk@plt+0x3f54>
   15090:	mov	r0, #1
   15094:	add	r0, r0, r5, lsr #1
   15098:	adds	r5, r5, r0
   1509c:	bcc	150bc <__mempcpy_chk@plt+0x3f6c>
   150a0:	b	150f0 <__mempcpy_chk@plt+0x3fa0>
   150a4:	cmp	r5, #0
   150a8:	bne	150bc <__mempcpy_chk@plt+0x3f6c>
   150ac:	mov	r0, #64	; 0x40
   150b0:	cmp	r6, #64	; 0x40
   150b4:	udiv	r5, r0, r6
   150b8:	addhi	r5, r5, #1
   150bc:	mov	r0, r7
   150c0:	mov	r1, r5
   150c4:	mov	r2, r6
   150c8:	bl	1593c <__mempcpy_chk@plt+0x47ec>
   150cc:	cmp	r0, #0
   150d0:	bne	150e8 <__mempcpy_chk@plt+0x3f98>
   150d4:	cmp	r7, #0
   150d8:	beq	150f0 <__mempcpy_chk@plt+0x3fa0>
   150dc:	cmp	r6, #0
   150e0:	cmpne	r5, #0
   150e4:	bne	150f0 <__mempcpy_chk@plt+0x3fa0>
   150e8:	str	r5, [r4]
   150ec:	pop	{r4, r5, r6, r7, fp, pc}
   150f0:	bl	15424 <__mempcpy_chk@plt+0x42d4>
   150f4:	push	{r4, r5, r6, r7, r8, sl, fp, lr}
   150f8:	add	fp, sp, #24
   150fc:	mov	r8, r1
   15100:	ldr	r1, [r1]
   15104:	mov	r5, r0
   15108:	add	r0, r1, r1, asr #1
   1510c:	cmp	r0, r1
   15110:	mvnvs	r0, #-2147483648	; 0x80000000
   15114:	cmp	r0, r3
   15118:	mov	r7, r0
   1511c:	movgt	r7, r3
   15120:	cmn	r3, #1
   15124:	movle	r7, r0
   15128:	ldr	r0, [fp, #8]
   1512c:	cmn	r0, #1
   15130:	ble	15158 <__mempcpy_chk@plt+0x4008>
   15134:	cmp	r0, #0
   15138:	beq	151ac <__mempcpy_chk@plt+0x405c>
   1513c:	cmn	r7, #1
   15140:	ble	15180 <__mempcpy_chk@plt+0x4030>
   15144:	mvn	r4, #-2147483648	; 0x80000000
   15148:	udiv	r6, r4, r0
   1514c:	cmp	r6, r7
   15150:	bge	151ac <__mempcpy_chk@plt+0x405c>
   15154:	b	151bc <__mempcpy_chk@plt+0x406c>
   15158:	cmn	r7, #1
   1515c:	ble	1519c <__mempcpy_chk@plt+0x404c>
   15160:	cmn	r0, #1
   15164:	beq	151ac <__mempcpy_chk@plt+0x405c>
   15168:	mov	r6, #-2147483648	; 0x80000000
   1516c:	mvn	r4, #-2147483648	; 0x80000000
   15170:	sdiv	r6, r6, r0
   15174:	cmp	r6, r7
   15178:	bge	151ac <__mempcpy_chk@plt+0x405c>
   1517c:	b	151bc <__mempcpy_chk@plt+0x406c>
   15180:	beq	151ac <__mempcpy_chk@plt+0x405c>
   15184:	mov	r6, #-2147483648	; 0x80000000
   15188:	mvn	r4, #-2147483648	; 0x80000000
   1518c:	sdiv	r6, r6, r7
   15190:	cmp	r6, r0
   15194:	bge	151ac <__mempcpy_chk@plt+0x405c>
   15198:	b	151bc <__mempcpy_chk@plt+0x406c>
   1519c:	mvn	r4, #-2147483648	; 0x80000000
   151a0:	sdiv	r6, r4, r0
   151a4:	cmp	r7, r6
   151a8:	blt	151bc <__mempcpy_chk@plt+0x406c>
   151ac:	mul	r6, r7, r0
   151b0:	mov	r4, #64	; 0x40
   151b4:	cmp	r6, #63	; 0x3f
   151b8:	bgt	151c4 <__mempcpy_chk@plt+0x4074>
   151bc:	sdiv	r7, r4, r0
   151c0:	mul	r6, r7, r0
   151c4:	cmp	r5, #0
   151c8:	moveq	r4, #0
   151cc:	streq	r4, [r8]
   151d0:	sub	r4, r7, r1
   151d4:	cmp	r4, r2
   151d8:	bge	15284 <__mempcpy_chk@plt+0x4134>
   151dc:	add	r7, r1, r2
   151e0:	mov	r6, #0
   151e4:	mov	r2, #0
   151e8:	cmp	r7, r3
   151ec:	movwgt	r6, #1
   151f0:	cmn	r3, #1
   151f4:	movwgt	r2, #1
   151f8:	cmp	r7, r1
   151fc:	bvs	152b8 <__mempcpy_chk@plt+0x4168>
   15200:	ands	r1, r2, r6
   15204:	bne	152b8 <__mempcpy_chk@plt+0x4168>
   15208:	cmn	r0, #1
   1520c:	ble	15234 <__mempcpy_chk@plt+0x40e4>
   15210:	cmp	r0, #0
   15214:	beq	15280 <__mempcpy_chk@plt+0x4130>
   15218:	cmn	r7, #1
   1521c:	ble	15258 <__mempcpy_chk@plt+0x4108>
   15220:	mvn	r1, #-2147483648	; 0x80000000
   15224:	udiv	r1, r1, r0
   15228:	cmp	r1, r7
   1522c:	bge	15280 <__mempcpy_chk@plt+0x4130>
   15230:	b	152b8 <__mempcpy_chk@plt+0x4168>
   15234:	cmn	r7, #1
   15238:	ble	15270 <__mempcpy_chk@plt+0x4120>
   1523c:	cmn	r0, #1
   15240:	beq	15280 <__mempcpy_chk@plt+0x4130>
   15244:	mov	r1, #-2147483648	; 0x80000000
   15248:	sdiv	r1, r1, r0
   1524c:	cmp	r1, r7
   15250:	bge	15280 <__mempcpy_chk@plt+0x4130>
   15254:	b	152b8 <__mempcpy_chk@plt+0x4168>
   15258:	beq	15280 <__mempcpy_chk@plt+0x4130>
   1525c:	mov	r1, #-2147483648	; 0x80000000
   15260:	sdiv	r1, r1, r7
   15264:	cmp	r1, r0
   15268:	bge	15280 <__mempcpy_chk@plt+0x4130>
   1526c:	b	152b8 <__mempcpy_chk@plt+0x4168>
   15270:	mvn	r1, #-2147483648	; 0x80000000
   15274:	sdiv	r1, r1, r0
   15278:	cmp	r7, r1
   1527c:	blt	152b8 <__mempcpy_chk@plt+0x4168>
   15280:	mul	r6, r7, r0
   15284:	mov	r0, r5
   15288:	mov	r1, r6
   1528c:	bl	15584 <__mempcpy_chk@plt+0x4434>
   15290:	cmp	r6, #0
   15294:	movwne	r6, #1
   15298:	cmp	r0, #0
   1529c:	bne	152b0 <__mempcpy_chk@plt+0x4160>
   152a0:	clz	r1, r5
   152a4:	lsr	r1, r1, #5
   152a8:	orrs	r1, r1, r6
   152ac:	bne	152b8 <__mempcpy_chk@plt+0x4168>
   152b0:	str	r7, [r8]
   152b4:	pop	{r4, r5, r6, r7, r8, sl, fp, pc}
   152b8:	bl	15424 <__mempcpy_chk@plt+0x42d4>
   152bc:	push	{fp, lr}
   152c0:	mov	fp, sp
   152c4:	mov	r1, #1
   152c8:	bl	15500 <__mempcpy_chk@plt+0x43b0>
   152cc:	cmp	r0, #0
   152d0:	popne	{fp, pc}
   152d4:	bl	15424 <__mempcpy_chk@plt+0x42d4>
   152d8:	push	{fp, lr}
   152dc:	mov	fp, sp
   152e0:	bl	15500 <__mempcpy_chk@plt+0x43b0>
   152e4:	cmp	r0, #0
   152e8:	popne	{fp, pc}
   152ec:	bl	15424 <__mempcpy_chk@plt+0x42d4>
   152f0:	push	{fp, lr}
   152f4:	mov	fp, sp
   152f8:	mov	r1, #1
   152fc:	bl	15500 <__mempcpy_chk@plt+0x43b0>
   15300:	cmp	r0, #0
   15304:	popne	{fp, pc}
   15308:	bl	15424 <__mempcpy_chk@plt+0x42d4>
   1530c:	push	{fp, lr}
   15310:	mov	fp, sp
   15314:	bl	15500 <__mempcpy_chk@plt+0x43b0>
   15318:	cmp	r0, #0
   1531c:	popne	{fp, pc}
   15320:	bl	15424 <__mempcpy_chk@plt+0x42d4>
   15324:	push	{r4, r5, r6, sl, fp, lr}
   15328:	add	fp, sp, #16
   1532c:	mov	r5, r0
   15330:	mov	r0, r1
   15334:	mov	r4, r1
   15338:	bl	15554 <__mempcpy_chk@plt+0x4404>
   1533c:	cmp	r0, #0
   15340:	beq	1535c <__mempcpy_chk@plt+0x420c>
   15344:	mov	r1, r5
   15348:	mov	r2, r4
   1534c:	mov	r6, r0
   15350:	bl	10f34 <memcpy@plt>
   15354:	mov	r0, r6
   15358:	pop	{r4, r5, r6, sl, fp, pc}
   1535c:	bl	15424 <__mempcpy_chk@plt+0x42d4>
   15360:	push	{r4, r5, r6, sl, fp, lr}
   15364:	add	fp, sp, #16
   15368:	mov	r5, r0
   1536c:	mov	r0, r1
   15370:	mov	r4, r1
   15374:	bl	15554 <__mempcpy_chk@plt+0x4404>
   15378:	cmp	r0, #0
   1537c:	beq	15398 <__mempcpy_chk@plt+0x4248>
   15380:	mov	r1, r5
   15384:	mov	r2, r4
   15388:	mov	r6, r0
   1538c:	bl	10f34 <memcpy@plt>
   15390:	mov	r0, r6
   15394:	pop	{r4, r5, r6, sl, fp, pc}
   15398:	bl	15424 <__mempcpy_chk@plt+0x42d4>
   1539c:	push	{r4, r5, r6, sl, fp, lr}
   153a0:	add	fp, sp, #16
   153a4:	mov	r5, r0
   153a8:	add	r0, r1, #1
   153ac:	mov	r4, r1
   153b0:	bl	15554 <__mempcpy_chk@plt+0x4404>
   153b4:	cmp	r0, #0
   153b8:	beq	153e0 <__mempcpy_chk@plt+0x4290>
   153bc:	mov	r6, r0
   153c0:	mov	r0, #0
   153c4:	mov	r1, r5
   153c8:	mov	r2, r4
   153cc:	strb	r0, [r6, r4]
   153d0:	mov	r0, r6
   153d4:	bl	10f34 <memcpy@plt>
   153d8:	mov	r0, r6
   153dc:	pop	{r4, r5, r6, sl, fp, pc}
   153e0:	bl	15424 <__mempcpy_chk@plt+0x42d4>
   153e4:	push	{r4, r5, r6, sl, fp, lr}
   153e8:	add	fp, sp, #16
   153ec:	mov	r4, r0
   153f0:	bl	11054 <strlen@plt>
   153f4:	add	r5, r0, #1
   153f8:	mov	r0, r5
   153fc:	bl	15554 <__mempcpy_chk@plt+0x4404>
   15400:	cmp	r0, #0
   15404:	beq	15420 <__mempcpy_chk@plt+0x42d0>
   15408:	mov	r1, r4
   1540c:	mov	r2, r5
   15410:	mov	r6, r0
   15414:	bl	10f34 <memcpy@plt>
   15418:	mov	r0, r6
   1541c:	pop	{r4, r5, r6, sl, fp, pc}
   15420:	bl	15424 <__mempcpy_chk@plt+0x42d4>
   15424:	push	{fp, lr}
   15428:	mov	fp, sp
   1542c:	movw	r0, #28924	; 0x70fc
   15430:	movw	r1, #26744	; 0x6878
   15434:	mov	r2, #5
   15438:	movt	r0, #2
   1543c:	movt	r1, #1
   15440:	ldr	r4, [r0]
   15444:	mov	r0, #0
   15448:	bl	10f70 <dcgettext@plt>
   1544c:	movw	r2, #24803	; 0x60e3
   15450:	mov	r3, r0
   15454:	mov	r0, r4
   15458:	mov	r1, #0
   1545c:	movt	r2, #1
   15460:	bl	10fe8 <error@plt>
   15464:	bl	11138 <abort@plt>
   15468:	push	{r4, r5, r6, r7, r8, r9, fp, lr}
   1546c:	add	fp, sp, #24
   15470:	sub	sp, sp, #8
   15474:	mov	r4, r3
   15478:	mov	r8, r2
   1547c:	mov	r9, r1
   15480:	mov	r5, r0
   15484:	bl	1106c <__errno_location@plt>
   15488:	mov	r6, #0
   1548c:	mov	r7, r0
   15490:	add	r1, sp, #4
   15494:	str	r6, [r0]
   15498:	mov	r0, r5
   1549c:	blx	r4
   154a0:	ldr	r0, [sp, #4]
   154a4:	cmp	r0, r5
   154a8:	beq	154e8 <__mempcpy_chk@plt+0x4398>
   154ac:	cmp	r9, #0
   154b0:	beq	154d0 <__mempcpy_chk@plt+0x4380>
   154b4:	vcmp.f64	d0, #0.0
   154b8:	vmrs	APSR_nzcv, fpscr
   154bc:	beq	154e4 <__mempcpy_chk@plt+0x4394>
   154c0:	ldr	r1, [r7]
   154c4:	subs	r6, r1, #34	; 0x22
   154c8:	movwne	r6, #1
   154cc:	b	154e8 <__mempcpy_chk@plt+0x4398>
   154d0:	ldrb	r1, [r0]
   154d4:	mov	r6, #0
   154d8:	cmp	r1, #0
   154dc:	bne	154f0 <__mempcpy_chk@plt+0x43a0>
   154e0:	b	154b4 <__mempcpy_chk@plt+0x4364>
   154e4:	mov	r6, #1
   154e8:	cmp	r9, #0
   154ec:	strne	r0, [r9]
   154f0:	vstr	d0, [r8]
   154f4:	mov	r0, r6
   154f8:	sub	sp, fp, #24
   154fc:	pop	{r4, r5, r6, r7, r8, r9, fp, pc}
   15500:	clz	r2, r1
   15504:	clz	r3, r0
   15508:	lsr	r2, r2, #5
   1550c:	lsr	r3, r3, #5
   15510:	orrs	r2, r3, r2
   15514:	movwne	r1, #1
   15518:	movwne	r0, #1
   1551c:	cmp	r1, #0
   15520:	beq	15550 <__mempcpy_chk@plt+0x4400>
   15524:	mvn	r2, #-2147483648	; 0x80000000
   15528:	udiv	r2, r2, r1
   1552c:	cmp	r2, r0
   15530:	bcs	15550 <__mempcpy_chk@plt+0x4400>
   15534:	push	{fp, lr}
   15538:	mov	fp, sp
   1553c:	bl	1106c <__errno_location@plt>
   15540:	mov	r1, #12
   15544:	str	r1, [r0]
   15548:	mov	r0, #0
   1554c:	pop	{fp, pc}
   15550:	b	10ebc <calloc@plt>
   15554:	cmp	r0, #0
   15558:	movweq	r0, #1
   1555c:	cmn	r0, #1
   15560:	ble	15568 <__mempcpy_chk@plt+0x4418>
   15564:	b	11000 <malloc@plt>
   15568:	push	{fp, lr}
   1556c:	mov	fp, sp
   15570:	bl	1106c <__errno_location@plt>
   15574:	mov	r1, #12
   15578:	str	r1, [r0]
   1557c:	mov	r0, #0
   15580:	pop	{fp, pc}
   15584:	push	{fp, lr}
   15588:	mov	fp, sp
   1558c:	cmp	r0, #0
   15590:	beq	155ac <__mempcpy_chk@plt+0x445c>
   15594:	cmp	r1, #0
   15598:	beq	155b8 <__mempcpy_chk@plt+0x4468>
   1559c:	cmn	r1, #1
   155a0:	ble	155c4 <__mempcpy_chk@plt+0x4474>
   155a4:	pop	{fp, lr}
   155a8:	b	10f7c <realloc@plt>
   155ac:	mov	r0, r1
   155b0:	pop	{fp, lr}
   155b4:	b	15554 <__mempcpy_chk@plt+0x4404>
   155b8:	bl	12a78 <__mempcpy_chk@plt+0x1928>
   155bc:	mov	r0, #0
   155c0:	pop	{fp, pc}
   155c4:	bl	1106c <__errno_location@plt>
   155c8:	mov	r1, #12
   155cc:	str	r1, [r0]
   155d0:	mov	r0, #0
   155d4:	pop	{fp, pc}
   155d8:	push	{r4, r5, r6, sl, fp, lr}
   155dc:	add	fp, sp, #16
   155e0:	vpush	{d8}
   155e4:	movw	r6, #29376	; 0x72c0
   155e8:	mov	r5, r0
   155ec:	mov	r4, r1
   155f0:	movt	r6, #2
   155f4:	ldr	r0, [r6]
   155f8:	cmp	r0, #0
   155fc:	bne	15618 <__mempcpy_chk@plt+0x44c8>
   15600:	movw	r1, #25510	; 0x63a6
   15604:	movw	r0, #8127	; 0x1fbf
   15608:	mov	r2, #0
   1560c:	movt	r1, #1
   15610:	bl	11108 <newlocale@plt>
   15614:	str	r0, [r6]
   15618:	ldr	r0, [r6]
   1561c:	cmp	r0, #0
   15620:	beq	15668 <__mempcpy_chk@plt+0x4518>
   15624:	bl	10ed4 <uselocale@plt>
   15628:	cmp	r0, #0
   1562c:	beq	15668 <__mempcpy_chk@plt+0x4518>
   15630:	mov	r6, r0
   15634:	mov	r0, r5
   15638:	mov	r1, r4
   1563c:	bl	10f4c <strtold@plt>
   15640:	vorr	d8, d0, d0
   15644:	bl	1106c <__errno_location@plt>
   15648:	ldr	r5, [r0]
   1564c:	mov	r4, r0
   15650:	mov	r0, r6
   15654:	bl	10ed4 <uselocale@plt>
   15658:	cmp	r0, #0
   1565c:	beq	15680 <__mempcpy_chk@plt+0x4530>
   15660:	str	r5, [r4]
   15664:	b	15674 <__mempcpy_chk@plt+0x4524>
   15668:	cmp	r4, #0
   1566c:	vmov.i32	d8, #0	; 0x00000000
   15670:	strne	r5, [r4]
   15674:	vorr	d0, d8, d8
   15678:	vpop	{d8}
   1567c:	pop	{r4, r5, r6, sl, fp, pc}
   15680:	bl	11138 <abort@plt>
   15684:	push	{r4, r5, r6, sl, fp, lr}
   15688:	add	fp, sp, #16
   1568c:	mov	r4, r0
   15690:	bl	10fd0 <__fpending@plt>
   15694:	ldr	r6, [r4]
   15698:	mov	r5, r0
   1569c:	mov	r0, r4
   156a0:	bl	15708 <__mempcpy_chk@plt+0x45b8>
   156a4:	tst	r6, #32
   156a8:	bne	156e0 <__mempcpy_chk@plt+0x4590>
   156ac:	cmp	r0, #0
   156b0:	mov	r4, r0
   156b4:	mvnne	r4, #0
   156b8:	cmp	r5, #0
   156bc:	bne	156ec <__mempcpy_chk@plt+0x459c>
   156c0:	cmp	r0, #0
   156c4:	beq	156ec <__mempcpy_chk@plt+0x459c>
   156c8:	bl	1106c <__errno_location@plt>
   156cc:	ldr	r0, [r0]
   156d0:	subs	r4, r0, #9
   156d4:	mvnne	r4, #0
   156d8:	mov	r0, r4
   156dc:	pop	{r4, r5, r6, sl, fp, pc}
   156e0:	mvn	r4, #0
   156e4:	cmp	r0, #0
   156e8:	beq	156f4 <__mempcpy_chk@plt+0x45a4>
   156ec:	mov	r0, r4
   156f0:	pop	{r4, r5, r6, sl, fp, pc}
   156f4:	bl	1106c <__errno_location@plt>
   156f8:	mov	r1, #0
   156fc:	str	r1, [r0]
   15700:	mov	r0, r4
   15704:	pop	{r4, r5, r6, sl, fp, pc}
   15708:	push	{r4, r5, r6, sl, fp, lr}
   1570c:	add	fp, sp, #16
   15710:	sub	sp, sp, #8
   15714:	mov	r4, r0
   15718:	bl	110a8 <fileno@plt>
   1571c:	cmn	r0, #1
   15720:	ble	15794 <__mempcpy_chk@plt+0x4644>
   15724:	mov	r0, r4
   15728:	bl	11018 <__freading@plt>
   1572c:	cmp	r0, #0
   15730:	beq	1575c <__mempcpy_chk@plt+0x460c>
   15734:	mov	r0, r4
   15738:	bl	110a8 <fileno@plt>
   1573c:	mov	r1, #1
   15740:	mov	r2, #0
   15744:	mov	r3, #0
   15748:	str	r1, [sp]
   1574c:	bl	10fac <lseek64@plt>
   15750:	and	r0, r0, r1
   15754:	cmn	r0, #1
   15758:	beq	15794 <__mempcpy_chk@plt+0x4644>
   1575c:	mov	r0, r4
   15760:	bl	157a4 <__mempcpy_chk@plt+0x4654>
   15764:	cmp	r0, #0
   15768:	beq	15794 <__mempcpy_chk@plt+0x4644>
   1576c:	bl	1106c <__errno_location@plt>
   15770:	ldr	r6, [r0]
   15774:	mov	r5, r0
   15778:	mov	r0, r4
   1577c:	bl	110cc <fclose@plt>
   15780:	cmp	r6, #0
   15784:	strne	r6, [r5]
   15788:	mvnne	r0, #0
   1578c:	sub	sp, fp, #16
   15790:	pop	{r4, r5, r6, sl, fp, pc}
   15794:	mov	r0, r4
   15798:	sub	sp, fp, #16
   1579c:	pop	{r4, r5, r6, sl, fp, lr}
   157a0:	b	110cc <fclose@plt>
   157a4:	push	{r4, sl, fp, lr}
   157a8:	add	fp, sp, #8
   157ac:	sub	sp, sp, #8
   157b0:	mov	r4, r0
   157b4:	cmp	r0, #0
   157b8:	beq	157d4 <__mempcpy_chk@plt+0x4684>
   157bc:	mov	r0, r4
   157c0:	bl	11018 <__freading@plt>
   157c4:	cmp	r0, #0
   157c8:	ldrbne	r0, [r4, #1]
   157cc:	tstne	r0, #1
   157d0:	bne	157e4 <__mempcpy_chk@plt+0x4694>
   157d4:	mov	r0, r4
   157d8:	sub	sp, fp, #8
   157dc:	pop	{r4, sl, fp, lr}
   157e0:	b	10f04 <fflush@plt>
   157e4:	mov	r0, #1
   157e8:	mov	r2, #0
   157ec:	mov	r3, #0
   157f0:	str	r0, [sp]
   157f4:	mov	r0, r4
   157f8:	bl	15800 <__mempcpy_chk@plt+0x46b0>
   157fc:	b	157d4 <__mempcpy_chk@plt+0x4684>
   15800:	push	{r4, r5, r6, r7, fp, lr}
   15804:	add	fp, sp, #16
   15808:	sub	sp, sp, #8
   1580c:	mov	r4, r0
   15810:	ldr	r0, [r0, #4]
   15814:	mov	r5, r3
   15818:	mov	r6, r2
   1581c:	ldr	r1, [r4, #8]
   15820:	cmp	r1, r0
   15824:	bne	15840 <__mempcpy_chk@plt+0x46f0>
   15828:	ldrd	r0, [r4, #16]
   1582c:	cmp	r1, r0
   15830:	bne	15840 <__mempcpy_chk@plt+0x46f0>
   15834:	ldr	r0, [r4, #36]	; 0x24
   15838:	cmp	r0, #0
   1583c:	beq	15858 <__mempcpy_chk@plt+0x4708>
   15840:	mov	r0, r4
   15844:	mov	r2, r6
   15848:	mov	r3, r5
   1584c:	sub	sp, fp, #16
   15850:	pop	{r4, r5, r6, r7, fp, lr}
   15854:	b	110d8 <fseeko64@plt>
   15858:	ldr	r7, [fp, #8]
   1585c:	mov	r0, r4
   15860:	bl	110a8 <fileno@plt>
   15864:	mov	r2, r6
   15868:	mov	r3, r5
   1586c:	str	r7, [sp]
   15870:	bl	10fac <lseek64@plt>
   15874:	and	r2, r0, r1
   15878:	cmn	r2, #1
   1587c:	mvneq	r0, #0
   15880:	subeq	sp, fp, #16
   15884:	popeq	{r4, r5, r6, r7, fp, pc}
   15888:	strd	r0, [r4, #80]	; 0x50
   1588c:	ldr	r0, [r4]
   15890:	bic	r0, r0, #16
   15894:	str	r0, [r4]
   15898:	mov	r0, #0
   1589c:	sub	sp, fp, #16
   158a0:	pop	{r4, r5, r6, r7, fp, pc}
   158a4:	push	{fp, lr}
   158a8:	mov	fp, sp
   158ac:	mov	r0, #14
   158b0:	bl	110fc <nl_langinfo@plt>
   158b4:	movw	r1, #25201	; 0x6271
   158b8:	cmp	r0, #0
   158bc:	movt	r1, #1
   158c0:	movne	r1, r0
   158c4:	movw	r0, #26761	; 0x6889
   158c8:	ldrb	r2, [r1]
   158cc:	movt	r0, #1
   158d0:	cmp	r2, #0
   158d4:	movne	r0, r1
   158d8:	pop	{fp, pc}
   158dc:	push	{r4, r5, r6, r7, fp, lr}
   158e0:	add	fp, sp, #16
   158e4:	sub	sp, sp, #8
   158e8:	add	r5, sp, #4
   158ec:	cmp	r0, #0
   158f0:	mov	r7, r2
   158f4:	mov	r4, r1
   158f8:	movne	r5, r0
   158fc:	mov	r0, r5
   15900:	bl	10fdc <mbrtowc@plt>
   15904:	mov	r6, r0
   15908:	cmp	r7, #0
   1590c:	beq	15930 <__mempcpy_chk@plt+0x47e0>
   15910:	cmn	r6, #2
   15914:	bcc	15930 <__mempcpy_chk@plt+0x47e0>
   15918:	mov	r0, #0
   1591c:	bl	15978 <__mempcpy_chk@plt+0x4828>
   15920:	cmp	r0, #0
   15924:	ldrbeq	r0, [r4]
   15928:	moveq	r6, #1
   1592c:	streq	r0, [r5]
   15930:	mov	r0, r6
   15934:	sub	sp, fp, #16
   15938:	pop	{r4, r5, r6, r7, fp, pc}
   1593c:	cmp	r2, #0
   15940:	beq	15970 <__mempcpy_chk@plt+0x4820>
   15944:	mvn	r3, #0
   15948:	udiv	r3, r3, r2
   1594c:	cmp	r3, r1
   15950:	bcs	15970 <__mempcpy_chk@plt+0x4820>
   15954:	push	{fp, lr}
   15958:	mov	fp, sp
   1595c:	bl	1106c <__errno_location@plt>
   15960:	mov	r1, #12
   15964:	str	r1, [r0]
   15968:	mov	r0, #0
   1596c:	pop	{fp, pc}
   15970:	mul	r1, r2, r1
   15974:	b	15584 <__mempcpy_chk@plt+0x4434>
   15978:	push	{r4, sl, fp, lr}
   1597c:	add	fp, sp, #8
   15980:	sub	sp, sp, #264	; 0x108
   15984:	add	r1, sp, #7
   15988:	movw	r2, #257	; 0x101
   1598c:	bl	159dc <__mempcpy_chk@plt+0x488c>
   15990:	mov	r4, #0
   15994:	cmp	r0, #0
   15998:	bne	159d0 <__mempcpy_chk@plt+0x4880>
   1599c:	movw	r1, #25510	; 0x63a6
   159a0:	add	r0, sp, #7
   159a4:	movt	r1, #1
   159a8:	bl	10ee0 <strcmp@plt>
   159ac:	cmp	r0, #0
   159b0:	beq	159d0 <__mempcpy_chk@plt+0x4880>
   159b4:	movw	r1, #26767	; 0x688f
   159b8:	add	r0, sp, #7
   159bc:	movt	r1, #1
   159c0:	bl	10ee0 <strcmp@plt>
   159c4:	mov	r4, r0
   159c8:	cmp	r0, #0
   159cc:	movwne	r4, #1
   159d0:	mov	r0, r4
   159d4:	sub	sp, fp, #8
   159d8:	pop	{r4, sl, fp, pc}
   159dc:	push	{r4, r5, r6, r7, fp, lr}
   159e0:	add	fp, sp, #16
   159e4:	mov	r4, r1
   159e8:	mov	r1, #0
   159ec:	mov	r6, r2
   159f0:	bl	110e4 <setlocale@plt>
   159f4:	cmp	r0, #0
   159f8:	beq	15a28 <__mempcpy_chk@plt+0x48d8>
   159fc:	mov	r7, r0
   15a00:	bl	11054 <strlen@plt>
   15a04:	cmp	r0, r6
   15a08:	bcs	15a48 <__mempcpy_chk@plt+0x48f8>
   15a0c:	add	r2, r0, #1
   15a10:	mov	r0, r4
   15a14:	mov	r1, r7
   15a18:	bl	10f34 <memcpy@plt>
   15a1c:	mov	r5, #0
   15a20:	mov	r0, r5
   15a24:	pop	{r4, r5, r6, r7, fp, pc}
   15a28:	cmp	r6, #0
   15a2c:	mov	r5, #22
   15a30:	movne	r0, #0
   15a34:	strbne	r0, [r4]
   15a38:	movne	r0, r5
   15a3c:	popne	{r4, r5, r6, r7, fp, pc}
   15a40:	mov	r0, r5
   15a44:	pop	{r4, r5, r6, r7, fp, pc}
   15a48:	mov	r5, #34	; 0x22
   15a4c:	cmp	r6, #0
   15a50:	beq	15a70 <__mempcpy_chk@plt+0x4920>
   15a54:	sub	r6, r6, #1
   15a58:	mov	r0, r4
   15a5c:	mov	r1, r7
   15a60:	mov	r2, r6
   15a64:	bl	10f34 <memcpy@plt>
   15a68:	mov	r0, #0
   15a6c:	strb	r0, [r4, r6]
   15a70:	mov	r0, r5
   15a74:	pop	{r4, r5, r6, r7, fp, pc}
   15a78:	mov	r1, #0
   15a7c:	b	110e4 <setlocale@plt>
   15a80:	vmov	d6, r0, r1
   15a84:	vldr	d7, [pc, #36]	; 15ab0 <__mempcpy_chk@plt+0x4960>
   15a88:	vldr	d5, [pc, #40]	; 15ab8 <__mempcpy_chk@plt+0x4968>
   15a8c:	vmul.f64	d7, d6, d7
   15a90:	vcvt.u32.f64	s14, d7
   15a94:	vcvt.f64.u32	d4, s14
   15a98:	vmov	r1, s14
   15a9c:	vmls.f64	d6, d4, d5
   15aa0:	vcvt.u32.f64	s15, d6
   15aa4:	vmov	r0, s15
   15aa8:	bx	lr
   15aac:	nop			; (mov r0, r0)
   15ab0:	andeq	r0, r0, r0
   15ab4:	ldclcc	0, cr0, [r0]
   15ab8:	andeq	r0, r0, r0
   15abc:	mvnsmi	r0, r0
   15ac0:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   15ac4:	mov	r7, r0
   15ac8:	ldr	r6, [pc, #72]	; 15b18 <__mempcpy_chk@plt+0x49c8>
   15acc:	ldr	r5, [pc, #72]	; 15b1c <__mempcpy_chk@plt+0x49cc>
   15ad0:	add	r6, pc, r6
   15ad4:	add	r5, pc, r5
   15ad8:	sub	r6, r6, r5
   15adc:	mov	r8, r1
   15ae0:	mov	r9, r2
   15ae4:	bl	10e9c <calloc@plt-0x20>
   15ae8:	asrs	r6, r6, #2
   15aec:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   15af0:	mov	r4, #0
   15af4:	add	r4, r4, #1
   15af8:	ldr	r3, [r5], #4
   15afc:	mov	r2, r9
   15b00:	mov	r1, r8
   15b04:	mov	r0, r7
   15b08:	blx	r3
   15b0c:	cmp	r6, r4
   15b10:	bne	15af4 <__mempcpy_chk@plt+0x49a4>
   15b14:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   15b18:	andeq	r1, r1, r4, lsr r4
   15b1c:	andeq	r1, r1, ip, lsr #8
   15b20:	bx	lr
   15b24:	ldr	r3, [pc, #12]	; 15b38 <__mempcpy_chk@plt+0x49e8>
   15b28:	mov	r1, #0
   15b2c:	add	r3, pc, r3
   15b30:	ldr	r2, [r3]
   15b34:	b	11084 <__cxa_atexit@plt>
   15b38:	andeq	r1, r1, r0, asr #11

Disassembly of section .fini:

00015b3c <.fini>:
   15b3c:	push	{r3, lr}
   15b40:	pop	{r3, pc}
