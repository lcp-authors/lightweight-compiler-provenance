
../repos/charybdis/extensions/.libs/helpops.so:     file format elf32-littlearm


Disassembly of section .init:

000007a0 <_init>:
 7a0:	push	{r3, lr}
 7a4:	bl	874 <call_weak_fn>
 7a8:	pop	{r3, pc}

Disassembly of section .plt:

000007ac <.plt>:
 7ac:	push	{lr}		; (str lr, [sp, #-4]!)
 7b0:	ldr	lr, [pc, #4]	; 7bc <.plt+0x10>
 7b4:	add	lr, pc, lr
 7b8:	ldr	pc, [lr, #8]!
 7bc:	.word	0x00011844

000007c0 <__cxa_finalize@plt>:
 7c0:	add	ip, pc, #0, 12
 7c4:	add	ip, ip, #69632	; 0x11000
 7c8:	ldr	pc, [ip, #2116]!	; 0x844

000007cc <sendto_one@plt>:
 7cc:	add	ip, pc, #0, 12
 7d0:	add	ip, ip, #69632	; 0x11000
 7d4:	ldr	pc, [ip, #2108]!	; 0x83c

000007d8 <user_mode@plt>:
 7d8:	add	ip, pc, #0, 12
 7dc:	add	ip, ip, #69632	; 0x11000
 7e0:	ldr	pc, [ip, #2100]!	; 0x834

000007e4 <sendto_realops_snomask@plt>:
 7e4:	add	ip, pc, #0, 12
 7e8:	add	ip, ip, #69632	; 0x11000
 7ec:	ldr	pc, [ip, #2092]!	; 0x82c

000007f0 <find_umode_slot@plt>:
 7f0:	add	ip, pc, #0, 12
 7f4:	add	ip, ip, #69632	; 0x11000
 7f8:	ldr	pc, [ip, #2084]!	; 0x824

000007fc <rb_free_rb_dlink_node@plt>:
 7fc:	add	ip, pc, #0, 12
 800:	add	ip, ip, #69632	; 0x11000
 804:	ldr	pc, [ip, #2076]!	; 0x81c

00000808 <__gmon_start__@plt>:
 808:	add	ip, pc, #0, 12
 80c:	add	ip, ip, #69632	; 0x11000
 810:	ldr	pc, [ip, #2068]!	; 0x814

00000814 <rb_make_rb_dlink_node@plt>:
 814:	add	ip, pc, #0, 12
 818:	add	ip, ip, #69632	; 0x11000
 81c:	ldr	pc, [ip, #2060]!	; 0x80c

00000820 <sendto_one_numeric@plt>:
 820:	add	ip, pc, #0, 12
 824:	add	ip, ip, #69632	; 0x11000
 828:	ldr	pc, [ip, #2052]!	; 0x804

0000082c <find_person@plt>:
 82c:	add	ip, pc, #0, 12
 830:	add	ip, ip, #69632	; 0x11000
 834:	ldr	pc, [ip, #2044]!	; 0x7fc

00000838 <sendto_one_notice@plt>:
 838:	add	ip, pc, #0, 12
 83c:	add	ip, ip, #69632	; 0x11000
 840:	ldr	pc, [ip, #2036]!	; 0x7f4

00000844 <find_named_person@plt>:
 844:	add	ip, pc, #0, 12
 848:	add	ip, ip, #69632	; 0x11000
 84c:	ldr	pc, [ip, #2028]!	; 0x7ec

00000850 <privilegeset_in_set@plt>:
 850:	add	ip, pc, #0, 12
 854:	add	ip, ip, #69632	; 0x11000
 858:	ldr	pc, [ip, #2020]!	; 0x7e4

0000085c <__assert_fail@plt>:
 85c:	add	ip, pc, #0, 12
 860:	add	ip, ip, #69632	; 0x11000
 864:	ldr	pc, [ip, #2012]!	; 0x7dc

00000868 <construct_umodebuf@plt>:
 868:	add	ip, pc, #0, 12
 86c:	add	ip, ip, #69632	; 0x11000
 870:	ldr	pc, [ip, #2004]!	; 0x7d4

Disassembly of section .text:

00000874 <call_weak_fn>:
     874:	ldr	r3, [pc, #20]	; 890 <call_weak_fn+0x1c>
     878:	ldr	r2, [pc, #20]	; 894 <call_weak_fn+0x20>
     87c:	add	r3, pc, r3
     880:	ldr	r2, [r3, r2]
     884:	cmp	r2, #0
     888:	bxeq	lr
     88c:	b	808 <__gmon_start__@plt>
     890:	.word	0x0001177c
     894:	.word	0x00000054

00000898 <deregister_tm_clones>:
     898:	ldr	r0, [pc, #44]	; 8cc <deregister_tm_clones+0x34>
     89c:	ldr	r3, [pc, #44]	; 8d0 <deregister_tm_clones+0x38>
     8a0:	add	r0, pc, r0
     8a4:	add	r3, pc, r3
     8a8:	cmp	r3, r0
     8ac:	ldr	r3, [pc, #32]	; 8d4 <deregister_tm_clones+0x3c>
     8b0:	add	r3, pc, r3
     8b4:	bxeq	lr
     8b8:	ldr	r2, [pc, #24]	; 8d8 <deregister_tm_clones+0x40>
     8bc:	ldr	r3, [r3, r2]
     8c0:	cmp	r3, #0
     8c4:	bxeq	lr
     8c8:	bx	r3
     8cc:	.word	0x00011888
     8d0:	.word	0x00011884
     8d4:	.word	0x00011748
     8d8:	.word	0x0000004c

000008dc <register_tm_clones>:
     8dc:	ldr	r0, [pc, #56]	; 91c <register_tm_clones+0x40>
     8e0:	ldr	r3, [pc, #56]	; 920 <register_tm_clones+0x44>
     8e4:	add	r0, pc, r0
     8e8:	add	r3, pc, r3
     8ec:	sub	r1, r3, r0
     8f0:	ldr	r3, [pc, #44]	; 924 <register_tm_clones+0x48>
     8f4:	asr	r1, r1, #2
     8f8:	add	r3, pc, r3
     8fc:	add	r1, r1, r1, lsr #31
     900:	asrs	r1, r1, #1
     904:	bxeq	lr
     908:	ldr	r2, [pc, #24]	; 928 <register_tm_clones+0x4c>
     90c:	ldr	r3, [r3, r2]
     910:	cmp	r3, #0
     914:	bxeq	lr
     918:	bx	r3
     91c:	.word	0x00011844
     920:	.word	0x00011840
     924:	.word	0x00011700
     928:	.word	0x0000005c

0000092c <__do_global_dtors_aux>:
     92c:	ldr	r3, [pc, #76]	; 980 <__do_global_dtors_aux+0x54>
     930:	ldr	r2, [pc, #76]	; 984 <__do_global_dtors_aux+0x58>
     934:	add	r3, pc, r3
     938:	add	r2, pc, r2
     93c:	ldrb	r3, [r3]
     940:	cmp	r3, #0
     944:	bxne	lr
     948:	ldr	r3, [pc, #56]	; 988 <__do_global_dtors_aux+0x5c>
     94c:	push	{r4, lr}
     950:	ldr	r3, [r2, r3]
     954:	cmp	r3, #0
     958:	beq	968 <__do_global_dtors_aux+0x3c>
     95c:	ldr	r3, [pc, #40]	; 98c <__do_global_dtors_aux+0x60>
     960:	ldr	r0, [pc, r3]
     964:	bl	7c0 <__cxa_finalize@plt>
     968:	bl	898 <deregister_tm_clones>
     96c:	ldr	r3, [pc, #28]	; 990 <__do_global_dtors_aux+0x64>
     970:	mov	r2, #1
     974:	add	r3, pc, r3
     978:	strb	r2, [r3]
     97c:	pop	{r4, pc}
     980:	.word	0x000117f4
     984:	.word	0x000116c0
     988:	.word	0x00000048
     98c:	.word	0x000116fc
     990:	.word	0x000117b4

00000994 <frame_dummy>:
     994:	b	8dc <register_tm_clones>

00000998 <h_hdl_stats_request>:
     998:	push	{r4, r5, r6, r7, fp, lr}
     99c:	add	fp, sp, #16
     9a0:	sub	sp, sp, #8
     9a4:	mov	r4, r0
     9a8:	ldr	r0, [r0, #8]
     9ac:	cmp	r0, #112	; 0x70
     9b0:	bne	a40 <h_hdl_stats_request+0xa8>
     9b4:	ldr	r7, [pc, #140]	; a48 <h_hdl_stats_request+0xb0>
     9b8:	mov	r5, #0
     9bc:	ldr	r7, [pc, r7]
     9c0:	cmp	r7, #0
     9c4:	beq	a20 <h_hdl_stats_request+0x88>
     9c8:	ldr	r6, [pc, #124]	; a4c <h_hdl_stats_request+0xb4>
     9cc:	add	r6, pc, r6
     9d0:	b	9e0 <h_hdl_stats_request+0x48>
     9d4:	ldr	r7, [r7, #8]
     9d8:	cmp	r7, #0
     9dc:	beq	a20 <h_hdl_stats_request+0x88>
     9e0:	ldr	r1, [r7]
     9e4:	ldr	r0, [r1, #24]
     9e8:	ldr	r0, [r0, #24]
     9ec:	cmp	r0, #0
     9f0:	bne	9d4 <h_hdl_stats_request+0x3c>
     9f4:	ldr	r0, [r4]
     9f8:	add	r2, r1, #163	; 0xa3
     9fc:	add	r3, r1, #152	; 0x98
     a00:	str	r3, [sp]
     a04:	str	r2, [sp, #4]
     a08:	add	r3, r1, #88	; 0x58
     a0c:	mov	r1, #249	; 0xf9
     a10:	mov	r2, r6
     a14:	bl	820 <sendto_one_numeric@plt>
     a18:	add	r5, r5, #1
     a1c:	b	9d4 <h_hdl_stats_request+0x3c>
     a20:	ldr	r0, [r4]
     a24:	ldr	r2, [pc, #36]	; a50 <h_hdl_stats_request+0xb8>
     a28:	mov	r1, #249	; 0xf9
     a2c:	mov	r3, r5
     a30:	add	r2, pc, r2
     a34:	bl	820 <sendto_one_numeric@plt>
     a38:	mov	r0, #1
     a3c:	str	r0, [r4, #12]
     a40:	sub	sp, fp, #16
     a44:	pop	{r4, r5, r6, r7, fp, pc}
     a48:	.word	0x00011770
     a4c:	.word	0x00000a08
     a50:	.word	0x000009b2

00000a54 <h_hdl_new_remote_user>:
     a54:	ldr	r1, [r0, #56]	; 0x38
     a58:	ldr	r2, [pc, #16]	; a70 <h_hdl_new_remote_user+0x1c>
     a5c:	ldr	r2, [pc, r2]
     a60:	ldr	r2, [r2, #288]	; 0x120
     a64:	tst	r2, r1
     a68:	bxeq	lr
     a6c:	b	10b8 <helper_add>
     a70:	.word	0x000115ec

00000a74 <h_hdl_client_exit>:
     a74:	ldr	r0, [r0, #4]
     a78:	b	11bc <recurse_client_exit>

00000a7c <h_hdl_umode_changed>:
     a7c:	push	{r4, r5, r6, sl, fp, lr}
     a80:	add	fp, sp, #16
     a84:	sub	sp, sp, #8
     a88:	ldr	r4, [r0]
     a8c:	ldr	r0, [r0, #4]
     a90:	ldr	r1, [r4, #56]	; 0x38
     a94:	ldr	r6, [pc, #460]	; c68 <h_hdl_umode_changed+0x1ec>
     a98:	ldr	r6, [pc, r6]
     a9c:	eor	r0, r1, r0
     aa0:	ldr	r2, [r6, #288]	; 0x120
     aa4:	and	r5, r0, r2
     aa8:	tst	r2, r1
     aac:	beq	b0c <h_hdl_umode_changed+0x90>
     ab0:	ldrb	r0, [r4, #65]	; 0x41
     ab4:	tst	r0, #32
     ab8:	beq	af4 <h_hdl_umode_changed+0x78>
     abc:	ldrh	r0, [r4, #80]	; 0x50
     ac0:	cmp	r0, #64	; 0x40
     ac4:	bne	af4 <h_hdl_umode_changed+0x78>
     ac8:	ldr	r0, [r4, #24]
     acc:	cmp	r0, #0
     ad0:	beq	ba8 <h_hdl_umode_changed+0x12c>
     ad4:	ldr	r0, [r0, #36]	; 0x24
     ad8:	cmp	r0, #0
     adc:	beq	ba8 <h_hdl_umode_changed+0x12c>
     ae0:	ldr	r1, [pc, #388]	; c6c <h_hdl_umode_changed+0x1f0>
     ae4:	add	r1, pc, r1
     ae8:	bl	850 <privilegeset_in_set@plt>
     aec:	cmp	r0, #0
     af0:	beq	ba0 <h_hdl_umode_changed+0x124>
     af4:	cmp	r5, #0
     af8:	beq	c28 <h_hdl_umode_changed+0x1ac>
     afc:	mov	r0, r4
     b00:	sub	sp, fp, #16
     b04:	pop	{r4, r5, r6, sl, fp, lr}
     b08:	b	10b8 <helper_add>
     b0c:	cmp	r5, #0
     b10:	beq	c28 <h_hdl_umode_changed+0x1ac>
     b14:	cmp	r4, #0
     b18:	beq	c48 <h_hdl_umode_changed+0x1cc>
     b1c:	ldr	r1, [pc, #352]	; c84 <h_hdl_umode_changed+0x208>
     b20:	ldr	r1, [pc, r1]
     b24:	cmp	r1, #0
     b28:	beq	c28 <h_hdl_umode_changed+0x1ac>
     b2c:	ldr	r2, [r1]
     b30:	mov	r0, r1
     b34:	ldr	r1, [r1, #8]
     b38:	cmp	r2, r4
     b3c:	bne	b24 <h_hdl_umode_changed+0xa8>
     b40:	ldr	r2, [r0, #4]
     b44:	cmp	r1, #0
     b48:	beq	b58 <h_hdl_umode_changed+0xdc>
     b4c:	str	r2, [r1, #4]
     b50:	ldr	r2, [r0, #4]
     b54:	b	b64 <h_hdl_umode_changed+0xe8>
     b58:	ldr	r3, [pc, #296]	; c88 <h_hdl_umode_changed+0x20c>
     b5c:	add	r3, pc, r3
     b60:	str	r2, [r3, #4]
     b64:	ldr	r6, [pc, #288]	; c8c <h_hdl_umode_changed+0x210>
     b68:	cmp	r2, #0
     b6c:	add	r6, pc, r6
     b70:	mov	r3, r6
     b74:	addne	r3, r2, #8
     b78:	str	r1, [r3]
     b7c:	mov	r1, #0
     b80:	str	r1, [r0, #4]
     b84:	str	r1, [r0, #8]
     b88:	ldr	r1, [r6, #8]
     b8c:	sub	r1, r1, #1
     b90:	str	r1, [r6, #8]
     b94:	sub	sp, fp, #16
     b98:	pop	{r4, r5, r6, sl, fp, lr}
     b9c:	b	7fc <rb_free_rb_dlink_node@plt>
     ba0:	ldr	r1, [r4, #56]	; 0x38
     ba4:	ldr	r2, [r6, #288]	; 0x120
     ba8:	ldr	r0, [pc, #192]	; c70 <h_hdl_umode_changed+0x1f4>
     bac:	bic	r1, r1, r2
     bb0:	add	r3, r4, #88	; 0x58
     bb4:	str	r1, [r4, #56]	; 0x38
     bb8:	add	r0, pc, r0
     bbc:	str	r0, [sp]
     bc0:	ldr	r0, [pc, #172]	; c74 <h_hdl_umode_changed+0x1f8>
     bc4:	ldr	r0, [pc, r0]
     bc8:	ldr	r1, [pc, #168]	; c78 <h_hdl_umode_changed+0x1fc>
     bcc:	add	r2, r0, #88	; 0x58
     bd0:	add	r1, pc, r1
     bd4:	mov	r0, r4
     bd8:	bl	7cc <sendto_one@plt>
     bdc:	cmp	r5, #0
     be0:	bne	c28 <h_hdl_umode_changed+0x1ac>
     be4:	ldr	r1, [pc, #144]	; c7c <h_hdl_umode_changed+0x200>
     be8:	ldr	r1, [pc, r1]
     bec:	cmp	r1, #0
     bf0:	beq	c28 <h_hdl_umode_changed+0x1ac>
     bf4:	ldr	r2, [r1]
     bf8:	mov	r0, r1
     bfc:	ldr	r1, [r1, #8]
     c00:	cmp	r2, r4
     c04:	bne	bec <h_hdl_umode_changed+0x170>
     c08:	ldr	r3, [r0, #4]
     c0c:	ldr	r6, [pc, #108]	; c80 <h_hdl_umode_changed+0x204>
     c10:	cmp	r1, #0
     c14:	add	r6, pc, r6
     c18:	beq	c30 <h_hdl_umode_changed+0x1b4>
     c1c:	str	r3, [r1, #4]
     c20:	ldr	r3, [r0, #4]
     c24:	b	c34 <h_hdl_umode_changed+0x1b8>
     c28:	sub	sp, fp, #16
     c2c:	pop	{r4, r5, r6, sl, fp, pc}
     c30:	str	r3, [r6, #4]
     c34:	cmp	r3, #0
     c38:	mov	r2, r6
     c3c:	addne	r2, r3, #8
     c40:	str	r1, [r2]
     c44:	b	b7c <h_hdl_umode_changed+0x100>
     c48:	ldr	r0, [pc, #64]	; c90 <h_hdl_umode_changed+0x214>
     c4c:	ldr	r1, [pc, #64]	; c94 <h_hdl_umode_changed+0x218>
     c50:	ldr	r3, [pc, #64]	; c98 <h_hdl_umode_changed+0x21c>
     c54:	mov	r2, #288	; 0x120
     c58:	add	r0, pc, r0
     c5c:	add	r1, pc, r1
     c60:	add	r3, pc, r3
     c64:	bl	85c <__assert_fail@plt>
     c68:	.word	0x000115b0
     c6c:	.word	0x000009e6
     c70:	.word	0x00000912
     c74:	.word	0x00011494
     c78:	.word	0x0000076c
     c7c:	.word	0x00011544
     c80:	.word	0x00011518
     c84:	.word	0x0001160c
     c88:	.word	0x000115d0
     c8c:	.word	0x000115c0
     c90:	.word	0x000007ef
     c94:	.word	0x0000079a
     c98:	.word	0x00000839

00000c9c <h_hdl_whois>:
     c9c:	ldr	r1, [pc, #76]	; cf0 <h_hdl_whois+0x54>
     ca0:	ldr	r1, [pc, r1]
     ca4:	ldr	r2, [r1, #288]	; 0x120
     ca8:	ldr	r1, [r0, #4]
     cac:	ldr	r3, [r1, #56]	; 0x38
     cb0:	tst	r2, r3
     cb4:	bxeq	lr
     cb8:	ldr	r2, [r1, #24]
     cbc:	ldr	r0, [r0]
     cc0:	ldr	r2, [r2, #24]
     cc4:	cmp	r2, #0
     cc8:	beq	cdc <h_hdl_whois+0x40>
     ccc:	ldrb	r2, [r2]
     cd0:	cmp	r2, #0
     cd4:	beq	cdc <h_hdl_whois+0x40>
     cd8:	bx	lr
     cdc:	ldr	r2, [pc, #16]	; cf4 <h_hdl_whois+0x58>
     ce0:	add	r3, r1, #88	; 0x58
     ce4:	movw	r1, #310	; 0x136
     ce8:	add	r2, pc, r2
     cec:	b	820 <sendto_one_numeric@plt>
     cf0:	.word	0x000113a8
     cf4:	.word	0x000007f3

00000cf8 <me_dehelper>:
     cf8:	push	{r4, r5, r6, sl, fp, lr}
     cfc:	add	fp, sp, #16
     d00:	sub	sp, sp, #24
     d04:	ldr	r6, [fp, #8]
     d08:	mov	r5, r2
     d0c:	ldr	r0, [r6, #4]
     d10:	bl	82c <find_person@plt>
     d14:	cmp	r0, #0
     d18:	beq	dc0 <me_dehelper+0xc8>
     d1c:	mov	r4, r0
     d20:	ldrb	r0, [r0, #65]	; 0x41
     d24:	tst	r0, #32
     d28:	beq	db8 <me_dehelper+0xc0>
     d2c:	ldrh	r0, [r4, #80]	; 0x50
     d30:	cmp	r0, #64	; 0x40
     d34:	bne	db8 <me_dehelper+0xc0>
     d38:	ldr	r0, [r4, #56]	; 0x38
     d3c:	ldr	r1, [pc, #156]	; de0 <me_dehelper+0xe8>
     d40:	ldr	r1, [pc, r1]
     d44:	ldr	r1, [r1, #288]	; 0x120
     d48:	tst	r1, r0
     d4c:	beq	db8 <me_dehelper+0xc0>
     d50:	add	r6, r4, #88	; 0x58
     d54:	add	r5, r5, #88	; 0x58
     d58:	mov	r0, #256	; 0x100
     d5c:	mov	r1, #256	; 0x100
     d60:	str	r6, [sp]
     d64:	mov	r3, r5
     d68:	ldr	r2, [pc, #116]	; de4 <me_dehelper+0xec>
     d6c:	add	r2, pc, r2
     d70:	bl	7e4 <sendto_realops_snomask@plt>
     d74:	ldr	r1, [pc, #108]	; de8 <me_dehelper+0xf0>
     d78:	mov	r0, r4
     d7c:	mov	r2, r5
     d80:	add	r1, pc, r1
     d84:	bl	838 <sendto_one_notice@plt>
     d88:	mov	r0, #0
     d8c:	add	r3, sp, #8
     d90:	mov	r1, r4
     d94:	mov	r2, #3
     d98:	str	r0, [sp, #20]
     d9c:	ldr	r0, [pc, #72]	; dec <me_dehelper+0xf4>
     da0:	add	r0, pc, r0
     da4:	str	r0, [sp, #16]
     da8:	mov	r0, r4
     dac:	str	r6, [sp, #8]
     db0:	str	r6, [sp, #12]
     db4:	bl	7d8 <user_mode@plt>
     db8:	sub	sp, fp, #16
     dbc:	pop	{r4, r5, r6, sl, fp, pc}
     dc0:	ldr	r3, [r6, #4]
     dc4:	ldr	r2, [pc, #36]	; df0 <me_dehelper+0xf8>
     dc8:	mov	r0, r5
     dcc:	movw	r1, #401	; 0x191
     dd0:	add	r2, pc, r2
     dd4:	sub	sp, fp, #16
     dd8:	pop	{r4, r5, r6, sl, fp, lr}
     ddc:	b	820 <sendto_one_numeric@plt>
     de0:	.word	0x00011308
     de4:	.word	0x00000629
     de8:	.word	0x00000630
     dec:	.word	0x00000631
     df0:	.word	0x00000593

00000df4 <mo_dehelper>:
     df4:	push	{r4, r5, r6, sl, fp, lr}
     df8:	add	fp, sp, #16
     dfc:	sub	sp, sp, #24
     e00:	ldr	r0, [r2, #24]
     e04:	mov	r4, r2
     e08:	cmp	r0, #0
     e0c:	beq	ee8 <mo_dehelper+0xf4>
     e10:	ldr	r0, [r0, #36]	; 0x24
     e14:	cmp	r0, #0
     e18:	beq	ee8 <mo_dehelper+0xf4>
     e1c:	ldr	r6, [fp, #8]
     e20:	ldr	r1, [pc, #336]	; f78 <mo_dehelper+0x184>
     e24:	add	r1, pc, r1
     e28:	bl	850 <privilegeset_in_set@plt>
     e2c:	cmp	r0, #0
     e30:	beq	ee8 <mo_dehelper+0xf4>
     e34:	ldr	r0, [r6, #4]
     e38:	bl	844 <find_named_person@plt>
     e3c:	cmp	r0, #0
     e40:	beq	f58 <mo_dehelper+0x164>
     e44:	mov	r5, r0
     e48:	ldrb	r0, [r0, #65]	; 0x41
     e4c:	tst	r0, #32
     e50:	beq	f1c <mo_dehelper+0x128>
     e54:	ldrh	r0, [r5, #80]	; 0x50
     e58:	cmp	r0, #64	; 0x40
     e5c:	bne	f1c <mo_dehelper+0x128>
     e60:	ldr	r0, [r5, #56]	; 0x38
     e64:	ldr	r1, [pc, #284]	; f88 <mo_dehelper+0x194>
     e68:	ldr	r1, [pc, r1]
     e6c:	ldr	r1, [r1, #288]	; 0x120
     e70:	tst	r1, r0
     e74:	beq	ee0 <mo_dehelper+0xec>
     e78:	add	r6, r5, #88	; 0x58
     e7c:	add	r4, r4, #88	; 0x58
     e80:	mov	r0, #256	; 0x100
     e84:	mov	r1, #256	; 0x100
     e88:	str	r6, [sp]
     e8c:	mov	r3, r4
     e90:	ldr	r2, [pc, #244]	; f8c <mo_dehelper+0x198>
     e94:	add	r2, pc, r2
     e98:	bl	7e4 <sendto_realops_snomask@plt>
     e9c:	ldr	r1, [pc, #236]	; f90 <mo_dehelper+0x19c>
     ea0:	mov	r0, r5
     ea4:	mov	r2, r4
     ea8:	add	r1, pc, r1
     eac:	bl	838 <sendto_one_notice@plt>
     eb0:	mov	r0, #0
     eb4:	add	r3, sp, #8
     eb8:	mov	r1, r5
     ebc:	mov	r2, #3
     ec0:	str	r0, [sp, #20]
     ec4:	ldr	r0, [pc, #200]	; f94 <mo_dehelper+0x1a0>
     ec8:	add	r0, pc, r0
     ecc:	str	r0, [sp, #16]
     ed0:	mov	r0, r5
     ed4:	str	r6, [sp, #8]
     ed8:	str	r6, [sp, #12]
     edc:	bl	7d8 <user_mode@plt>
     ee0:	sub	sp, fp, #16
     ee4:	pop	{r4, r5, r6, sl, fp, pc}
     ee8:	ldr	r0, [pc, #140]	; f7c <mo_dehelper+0x188>
     eec:	add	r3, r4, #88	; 0x58
     ef0:	add	r0, pc, r0
     ef4:	str	r0, [sp]
     ef8:	ldr	r0, [pc, #128]	; f80 <mo_dehelper+0x18c>
     efc:	ldr	r0, [pc, r0]
     f00:	ldr	r1, [pc, #124]	; f84 <mo_dehelper+0x190>
     f04:	add	r2, r0, #88	; 0x58
     f08:	add	r1, pc, r1
     f0c:	mov	r0, r4
     f10:	bl	7cc <sendto_one@plt>
     f14:	sub	sp, fp, #16
     f18:	pop	{r4, r5, r6, sl, fp, pc}
     f1c:	mov	r0, r5
     f20:	ldrb	r2, [r4, #396]!	; 0x18c
     f24:	ldrb	r1, [r0, #396]!	; 0x18c
     f28:	cmp	r1, #0
     f2c:	ldr	r1, [r5, #32]
     f30:	addeq	r0, r5, #88	; 0x58
     f34:	cmp	r2, #0
     f38:	str	r0, [sp]
     f3c:	subeq	r4, r4, #308	; 0x134
     f40:	mov	r0, r5
     f44:	mov	r2, r4
     f48:	add	r3, r1, #88	; 0x58
     f4c:	ldr	r1, [pc, #68]	; f98 <mo_dehelper+0x1a4>
     f50:	add	r1, pc, r1
     f54:	b	f10 <mo_dehelper+0x11c>
     f58:	ldr	r3, [r6, #4]
     f5c:	ldr	r2, [pc, #56]	; f9c <mo_dehelper+0x1a8>
     f60:	mov	r0, r4
     f64:	movw	r1, #401	; 0x191
     f68:	add	r2, pc, r2
     f6c:	sub	sp, fp, #16
     f70:	pop	{r4, r5, r6, sl, fp, lr}
     f74:	b	820 <sendto_one_numeric@plt>
     f78:	.word	0x0000050a
     f7c:	.word	0x00000443
     f80:	.word	0x0001115c
     f84:	.word	0x00000434
     f88:	.word	0x000111e0
     f8c:	.word	0x00000501
     f90:	.word	0x00000508
     f94:	.word	0x00000509
     f98:	.word	0x0000042c
     f9c:	.word	0x000003fb

00000fa0 <_modinit>:
     fa0:	push	{r4, r5, fp, lr}
     fa4:	add	fp, sp, #8
     fa8:	bl	7f0 <find_umode_slot@plt>
     fac:	ldr	r4, [pc, #100]	; 1018 <_modinit+0x78>
     fb0:	ldr	r4, [pc, r4]
     fb4:	str	r0, [r4, #288]	; 0x120
     fb8:	bl	868 <construct_umodebuf@plt>
     fbc:	ldr	r0, [pc, #88]	; 101c <_modinit+0x7c>
     fc0:	ldr	r0, [pc, r0]
     fc4:	ldr	r5, [r0]
     fc8:	cmp	r5, #0
     fcc:	bne	fe0 <_modinit+0x40>
     fd0:	b	1010 <_modinit+0x70>
     fd4:	ldr	r5, [r5, #8]
     fd8:	cmp	r5, #0
     fdc:	beq	1010 <_modinit+0x70>
     fe0:	ldr	r0, [r5]
     fe4:	ldrh	r1, [r0, #80]	; 0x50
     fe8:	cmp	r1, #64	; 0x40
     fec:	bne	fd4 <_modinit+0x34>
     ff0:	ldr	r1, [r0, #24]
     ff4:	cmp	r1, #0
     ff8:	beq	fd4 <_modinit+0x34>
     ffc:	ldr	r1, [r0, #56]	; 0x38
    1000:	ldr	r2, [r4, #288]	; 0x120
    1004:	tst	r2, r1
    1008:	blne	10b8 <helper_add>
    100c:	b	fd4 <_modinit+0x34>
    1010:	mov	r0, #0
    1014:	pop	{r4, r5, fp, pc}
    1018:	.word	0x00011098
    101c:	.word	0x00011090

00001020 <_moddeinit>:
    1020:	push	{r4, r5, r6, sl, fp, lr}
    1024:	add	fp, sp, #16
    1028:	ldr	r0, [pc, #124]	; 10ac <_moddeinit+0x8c>
    102c:	mov	r4, #0
    1030:	ldr	r0, [pc, r0]
    1034:	str	r4, [r0, #288]	; 0x120
    1038:	bl	868 <construct_umodebuf@plt>
    103c:	ldr	r0, [pc, #108]	; 10b0 <_moddeinit+0x90>
    1040:	ldr	r0, [pc, r0]
    1044:	cmp	r0, #0
    1048:	beq	10a8 <_moddeinit+0x88>
    104c:	ldr	r5, [pc, #96]	; 10b4 <_moddeinit+0x94>
    1050:	add	r5, pc, r5
    1054:	b	1090 <_moddeinit+0x70>
    1058:	str	r1, [r5, #4]
    105c:	cmp	r1, #0
    1060:	mov	r2, r5
    1064:	addne	r2, r1, #8
    1068:	str	r6, [r2]
    106c:	str	r4, [r0, #4]
    1070:	str	r4, [r0, #8]
    1074:	ldr	r1, [r5, #8]
    1078:	sub	r1, r1, #1
    107c:	str	r1, [r5, #8]
    1080:	bl	7fc <rb_free_rb_dlink_node@plt>
    1084:	cmp	r6, #0
    1088:	mov	r0, r6
    108c:	beq	10a8 <_moddeinit+0x88>
    1090:	ldmib	r0, {r1, r6}
    1094:	cmp	r6, #0
    1098:	beq	1058 <_moddeinit+0x38>
    109c:	str	r1, [r6, #4]
    10a0:	ldr	r1, [r0, #4]
    10a4:	b	105c <_moddeinit+0x3c>
    10a8:	pop	{r4, r5, r6, sl, fp, pc}
    10ac:	.word	0x00011018
    10b0:	.word	0x000110ec
    10b4:	.word	0x000110dc

000010b8 <helper_add>:
    10b8:	push	{r4, sl, fp, lr}
    10bc:	add	fp, sp, #8
    10c0:	cmp	r0, #0
    10c4:	beq	1158 <helper_add+0xa0>
    10c8:	mov	r4, r0
    10cc:	ldr	r0, [pc, #196]	; 1198 <helper_add+0xe0>
    10d0:	ldr	r0, [pc, r0]
    10d4:	cmp	r0, #0
    10d8:	beq	10f4 <helper_add+0x3c>
    10dc:	ldr	r1, [r0]
    10e0:	cmp	r1, r4
    10e4:	beq	1154 <helper_add+0x9c>
    10e8:	ldr	r0, [r0, #8]
    10ec:	cmp	r0, #0
    10f0:	bne	10dc <helper_add+0x24>
    10f4:	bl	814 <rb_make_rb_dlink_node@plt>
    10f8:	cmp	r0, #0
    10fc:	beq	1178 <helper_add+0xc0>
    1100:	mov	r1, #0
    1104:	str	r1, [r0, #4]
    1108:	str	r4, [r0]
    110c:	ldr	r2, [pc, #136]	; 119c <helper_add+0xe4>
    1110:	ldr	r2, [pc, r2]
    1114:	str	r2, [r0, #8]
    1118:	cmp	r2, #0
    111c:	ldr	r1, [pc, #124]	; 11a0 <helper_add+0xe8>
    1120:	add	r1, pc, r1
    1124:	beq	1134 <helper_add+0x7c>
    1128:	add	r2, r2, #4
    112c:	str	r0, [r2]
    1130:	b	1144 <helper_add+0x8c>
    1134:	mov	r2, r1
    1138:	ldr	r3, [r2, #4]!
    113c:	cmp	r3, #0
    1140:	streq	r0, [r2]
    1144:	str	r0, [r1]
    1148:	ldr	r0, [r1, #8]
    114c:	add	r0, r0, #1
    1150:	str	r0, [r1, #8]
    1154:	pop	{r4, sl, fp, pc}
    1158:	ldr	r0, [pc, #68]	; 11a4 <helper_add+0xec>
    115c:	ldr	r1, [pc, #68]	; 11a8 <helper_add+0xf0>
    1160:	ldr	r3, [pc, #68]	; 11ac <helper_add+0xf4>
    1164:	movw	r2, #311	; 0x137
    1168:	add	r0, pc, r0
    116c:	add	r1, pc, r1
    1170:	add	r3, pc, r3
    1174:	bl	85c <__assert_fail@plt>
    1178:	ldr	r0, [pc, #48]	; 11b0 <helper_add+0xf8>
    117c:	ldr	r1, [pc, #48]	; 11b4 <helper_add+0xfc>
    1180:	ldr	r3, [pc, #48]	; 11b8 <helper_add+0x100>
    1184:	mov	r2, #144	; 0x90
    1188:	add	r0, pc, r0
    118c:	add	r1, pc, r1
    1190:	add	r3, pc, r3
    1194:	bl	85c <__assert_fail@plt>
    1198:	.word	0x0001105c
    119c:	.word	0x0001101c
    11a0:	.word	0x0001100c
    11a4:	.word	0x000002df
    11a8:	.word	0x0000028a
    11ac:	.word	0x000002a2
    11b0:	.word	0x00000307
    11b4:	.word	0x0000026a
    11b8:	.word	0x000002c4

000011bc <recurse_client_exit>:
    11bc:	push	{r4, r5, fp, lr}
    11c0:	add	fp, sp, #8
    11c4:	mov	r4, r0
    11c8:	ldrh	r0, [r0, #80]	; 0x50
    11cc:	cmp	r0, #32
    11d0:	beq	1244 <recurse_client_exit+0x88>
    11d4:	cmp	r0, #64	; 0x40
    11d8:	bne	128c <recurse_client_exit+0xd0>
    11dc:	ldr	r0, [r4, #24]
    11e0:	cmp	r0, #0
    11e4:	beq	128c <recurse_client_exit+0xd0>
    11e8:	ldr	r0, [r4, #56]	; 0x38
    11ec:	ldr	r1, [pc, #208]	; 12c4 <recurse_client_exit+0x108>
    11f0:	ldr	r1, [pc, r1]
    11f4:	ldr	r1, [r1, #288]	; 0x120
    11f8:	tst	r1, r0
    11fc:	popeq	{r4, r5, fp, pc}
    1200:	ldr	r1, [pc, #192]	; 12c8 <recurse_client_exit+0x10c>
    1204:	ldr	r1, [pc, r1]
    1208:	cmp	r1, #0
    120c:	beq	128c <recurse_client_exit+0xd0>
    1210:	ldr	r2, [r1]
    1214:	mov	r0, r1
    1218:	ldr	r1, [r1, #8]
    121c:	cmp	r2, r4
    1220:	bne	1208 <recurse_client_exit+0x4c>
    1224:	ldr	r3, [r0, #4]
    1228:	ldr	r5, [pc, #156]	; 12cc <recurse_client_exit+0x110>
    122c:	cmp	r1, #0
    1230:	add	r5, pc, r5
    1234:	beq	1290 <recurse_client_exit+0xd4>
    1238:	str	r3, [r1, #4]
    123c:	ldr	r3, [r0, #4]
    1240:	b	1294 <recurse_client_exit+0xd8>
    1244:	ldr	r0, [r4, #28]
    1248:	ldr	r5, [r0, #48]	; 0x30
    124c:	cmp	r5, #0
    1250:	beq	126c <recurse_client_exit+0xb0>
    1254:	ldr	r0, [r5]
    1258:	bl	11bc <recurse_client_exit>
    125c:	ldr	r5, [r5, #8]
    1260:	cmp	r5, #0
    1264:	bne	1254 <recurse_client_exit+0x98>
    1268:	ldr	r0, [r4, #28]
    126c:	ldr	r4, [r0, #36]	; 0x24
    1270:	cmp	r4, #0
    1274:	beq	128c <recurse_client_exit+0xd0>
    1278:	ldr	r0, [r4]
    127c:	bl	11bc <recurse_client_exit>
    1280:	ldr	r4, [r4, #8]
    1284:	cmp	r4, #0
    1288:	bne	1278 <recurse_client_exit+0xbc>
    128c:	pop	{r4, r5, fp, pc}
    1290:	str	r3, [r5, #4]
    1294:	cmp	r3, #0
    1298:	mov	r2, r5
    129c:	addne	r2, r3, #8
    12a0:	str	r1, [r2]
    12a4:	mov	r1, #0
    12a8:	str	r1, [r0, #4]
    12ac:	str	r1, [r0, #8]
    12b0:	ldr	r1, [r5, #8]
    12b4:	sub	r1, r1, #1
    12b8:	str	r1, [r5, #8]
    12bc:	pop	{r4, r5, fp, lr}
    12c0:	b	7fc <rb_free_rb_dlink_node@plt>
    12c4:	.word	0x00010e58
    12c8:	.word	0x00010f28
    12cc:	.word	0x00010efc

Disassembly of section .fini:

000012d0 <_fini>:
    12d0:	push	{r3, lr}
    12d4:	pop	{r3, pc}
