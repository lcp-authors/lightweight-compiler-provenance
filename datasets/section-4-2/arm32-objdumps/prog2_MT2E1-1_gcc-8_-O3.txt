
../repos/prog2/MT2E1-1:     file format elf32-littlearm


Disassembly of section .init:

00010c88 <.init>:
   10c88:	push	{r3, lr}
   10c8c:	bl	10f4c <_start@@Base+0x3c>
   10c90:	pop	{r3, pc}

Disassembly of section .plt:

00010c94 <calloc@plt-0x14>:
   10c94:	push	{lr}		; (str lr, [sp, #-4]!)
   10c98:	ldr	lr, [pc, #4]	; 10ca4 <calloc@plt-0x4>
   10c9c:	add	lr, pc, lr
   10ca0:	ldr	pc, [lr, #8]!
   10ca4:	andeq	r2, r1, ip, asr r3

00010ca8 <calloc@plt>:
   10ca8:	add	ip, pc, #0, 12
   10cac:	add	ip, ip, #73728	; 0x12000
   10cb0:	ldr	pc, [ip, #860]!	; 0x35c

00010cb4 <strcmp@plt>:
   10cb4:	add	ip, pc, #0, 12
   10cb8:	add	ip, ip, #73728	; 0x12000
   10cbc:	ldr	pc, [ip, #852]!	; 0x354

00010cc0 <printf@plt>:
   10cc0:	add	ip, pc, #0, 12
   10cc4:	add	ip, ip, #73728	; 0x12000
   10cc8:	ldr	pc, [ip, #844]!	; 0x34c

00010ccc <__isoc99_fscanf@plt>:
   10ccc:	add	ip, pc, #0, 12
   10cd0:	add	ip, ip, #73728	; 0x12000
   10cd4:	ldr	pc, [ip, #836]!	; 0x344

00010cd8 <fopen@plt>:
   10cd8:	add	ip, pc, #0, 12
   10cdc:	add	ip, ip, #73728	; 0x12000
   10ce0:	ldr	pc, [ip, #828]!	; 0x33c

00010ce4 <free@plt>:
   10ce4:	add	ip, pc, #0, 12
   10ce8:	add	ip, ip, #73728	; 0x12000
   10cec:	ldr	pc, [ip, #820]!	; 0x334

00010cf0 <memcpy@plt>:
   10cf0:	add	ip, pc, #0, 12
   10cf4:	add	ip, ip, #73728	; 0x12000
   10cf8:	ldr	pc, [ip, #812]!	; 0x32c

00010cfc <realloc@plt>:
   10cfc:	add	ip, pc, #0, 12
   10d00:	add	ip, ip, #73728	; 0x12000
   10d04:	ldr	pc, [ip, #804]!	; 0x324

00010d08 <strcpy@plt>:
   10d08:	add	ip, pc, #0, 12
   10d0c:	add	ip, ip, #73728	; 0x12000
   10d10:	ldr	pc, [ip, #796]!	; 0x31c

00010d14 <puts@plt>:
   10d14:	add	ip, pc, #0, 12
   10d18:	add	ip, ip, #73728	; 0x12000
   10d1c:	ldr	pc, [ip, #788]!	; 0x314

00010d20 <malloc@plt>:
   10d20:	add	ip, pc, #0, 12
   10d24:	add	ip, ip, #73728	; 0x12000
   10d28:	ldr	pc, [ip, #780]!	; 0x30c

00010d2c <__libc_start_main@plt>:
   10d2c:	add	ip, pc, #0, 12
   10d30:	add	ip, ip, #73728	; 0x12000
   10d34:	ldr	pc, [ip, #772]!	; 0x304

00010d38 <__gmon_start__@plt>:
   10d38:	add	ip, pc, #0, 12
   10d3c:	add	ip, ip, #73728	; 0x12000
   10d40:	ldr	pc, [ip, #764]!	; 0x2fc

00010d44 <strlen@plt>:
   10d44:	add	ip, pc, #0, 12
   10d48:	add	ip, ip, #73728	; 0x12000
   10d4c:	ldr	pc, [ip, #756]!	; 0x2f4

00010d50 <setvbuf@plt>:
   10d50:	add	ip, pc, #0, 12
   10d54:	add	ip, ip, #73728	; 0x12000
   10d58:	ldr	pc, [ip, #748]!	; 0x2ec

00010d5c <putchar@plt>:
   10d5c:	add	ip, pc, #0, 12
   10d60:	add	ip, ip, #73728	; 0x12000
   10d64:	ldr	pc, [ip, #740]!	; 0x2e4

00010d68 <fclose@plt>:
   10d68:	add	ip, pc, #0, 12
   10d6c:	add	ip, ip, #73728	; 0x12000
   10d70:	ldr	pc, [ip, #732]!	; 0x2dc

00010d74 <abort@plt>:
   10d74:	add	ip, pc, #0, 12
   10d78:	add	ip, ip, #73728	; 0x12000
   10d7c:	ldr	pc, [ip, #724]!	; 0x2d4

Disassembly of section .text:

00010d80 <main@@Base>:
   10d80:	mov	r3, #0
   10d84:	movw	r1, #12384	; 0x3060
   10d88:	movt	r1, #2
   10d8c:	mov	r2, #2
   10d90:	strd	r4, [sp, #-24]!	; 0xffffffe8
   10d94:	ldr	r0, [r1]
   10d98:	mov	r1, r3
   10d9c:	movw	r5, #10960	; 0x2ad0
   10da0:	movt	r5, #1
   10da4:	strd	r6, [sp, #8]
   10da8:	str	r8, [sp, #16]
   10dac:	str	lr, [sp, #20]
   10db0:	sub	sp, sp, #504	; 0x1f8
   10db4:	bl	10d50 <setvbuf@plt>
   10db8:	movw	r1, #10964	; 0x2ad4
   10dbc:	movt	r1, #1
   10dc0:	movw	r0, #10968	; 0x2ad8
   10dc4:	movt	r0, #1
   10dc8:	bl	10cd8 <fopen@plt>
   10dcc:	mov	r8, r0
   10dd0:	movw	r1, #10964	; 0x2ad4
   10dd4:	movt	r1, #1
   10dd8:	movw	r0, #10980	; 0x2ae4
   10ddc:	movt	r0, #1
   10de0:	bl	10cd8 <fopen@plt>
   10de4:	mov	r7, r0
   10de8:	movw	r0, #10992	; 0x2af0
   10dec:	movt	r0, #1
   10df0:	bl	10d14 <puts@plt>
   10df4:	bl	110e8 <avl_nova@@Base>
   10df8:	mov	r4, r0
   10dfc:	b	10e04 <main@@Base+0x84>
   10e00:	bl	117e0 <avl_insere@@Base>
   10e04:	mov	r1, r5
   10e08:	add	r2, sp, #4
   10e0c:	mov	r0, r8
   10e10:	bl	10ccc <__isoc99_fscanf@plt>
   10e14:	cmp	r0, #1
   10e18:	add	r1, sp, #4
   10e1c:	mov	r0, r4
   10e20:	beq	10e00 <main@@Base+0x80>
   10e24:	movw	r0, #11012	; 0x2b04
   10e28:	movt	r0, #1
   10e2c:	bl	10cc0 <printf@plt>
   10e30:	mov	r0, r4
   10e34:	movw	r6, #10960	; 0x2ad0
   10e38:	movt	r6, #1
   10e3c:	movw	r5, #11008	; 0x2b00
   10e40:	movt	r5, #1
   10e44:	bl	1226c <avl_imprime@@Base>
   10e48:	movw	r0, #11032	; 0x2b18
   10e4c:	movt	r0, #1
   10e50:	bl	10cc0 <printf@plt>
   10e54:	mov	r0, r4
   10e58:	movw	r1, #11056	; 0x2b30
   10e5c:	movt	r1, #1
   10e60:	bl	11000 <avl_max_subarvore@@Base>
   10e64:	mov	r0, r4
   10e68:	bl	12174 <avl_apaga@@Base>
   10e6c:	movw	r0, #11060	; 0x2b34
   10e70:	movt	r0, #1
   10e74:	bl	10d14 <puts@plt>
   10e78:	movw	r1, #10516	; 0x2914
   10e7c:	movt	r1, #1
   10e80:	movw	r0, #601	; 0x259
   10e84:	bl	122cc <tabela_nova@@Base>
   10e88:	mov	r4, r0
   10e8c:	b	10e94 <main@@Base+0x114>
   10e90:	bl	123e8 <tabela_adiciona@@Base>
   10e94:	add	r2, sp, #4
   10e98:	mov	r1, r6
   10e9c:	mov	r0, r7
   10ea0:	bl	10ccc <__isoc99_fscanf@plt>
   10ea4:	cmp	r0, #1
   10ea8:	mov	r2, r5
   10eac:	add	r1, sp, #4
   10eb0:	mov	r0, r4
   10eb4:	beq	10e90 <main@@Base+0x110>
   10eb8:	bl	12944 <mostraTabela@@Base>
   10ebc:	movw	r1, #619	; 0x26b
   10ec0:	mov	r0, r4
   10ec4:	bl	1105c <tabela_copia@@Base>
   10ec8:	subs	r5, r0, #0
   10ecc:	beq	10ed4 <main@@Base+0x154>
   10ed0:	bl	12944 <mostraTabela@@Base>
   10ed4:	mov	r0, r4
   10ed8:	bl	12358 <tabela_apaga@@Base>
   10edc:	mov	r0, r5
   10ee0:	bl	12358 <tabela_apaga@@Base>
   10ee4:	mov	r0, r8
   10ee8:	bl	10d68 <fclose@plt>
   10eec:	mov	r0, r7
   10ef0:	bl	10d68 <fclose@plt>
   10ef4:	mov	r0, #0
   10ef8:	add	sp, sp, #504	; 0x1f8
   10efc:	ldrd	r4, [sp]
   10f00:	ldrd	r6, [sp, #8]
   10f04:	ldr	r8, [sp, #16]
   10f08:	add	sp, sp, #20
   10f0c:	pop	{pc}		; (ldr pc, [sp], #4)

00010f10 <_start@@Base>:
   10f10:	mov	fp, #0
   10f14:	mov	lr, #0
   10f18:	pop	{r1}		; (ldr r1, [sp], #4)
   10f1c:	mov	r2, sp
   10f20:	push	{r2}		; (str r2, [sp, #-4]!)
   10f24:	push	{r0}		; (str r0, [sp, #-4]!)
   10f28:	ldr	ip, [pc, #16]	; 10f40 <_start@@Base+0x30>
   10f2c:	push	{ip}		; (str ip, [sp, #-4]!)
   10f30:	ldr	r0, [pc, #12]	; 10f44 <_start@@Base+0x34>
   10f34:	ldr	r3, [pc, #12]	; 10f48 <_start@@Base+0x38>
   10f38:	bl	10d2c <__libc_start_main@plt>
   10f3c:	bl	10d74 <abort@plt>
   10f40:	andeq	r2, r1, r0, asr #21
   10f44:	andeq	r0, r1, r0, lsl #27
   10f48:	andeq	r2, r1, r0, ror #20
   10f4c:	ldr	r3, [pc, #20]	; 10f68 <_start@@Base+0x58>
   10f50:	ldr	r2, [pc, #20]	; 10f6c <_start@@Base+0x5c>
   10f54:	add	r3, pc, r3
   10f58:	ldr	r2, [r3, r2]
   10f5c:	cmp	r2, #0
   10f60:	bxeq	lr
   10f64:	b	10d38 <__gmon_start__@plt>
   10f68:	andeq	r2, r1, r4, lsr #1
   10f6c:	andeq	r0, r0, r4, asr r0
   10f70:	ldr	r0, [pc, #24]	; 10f90 <_start@@Base+0x80>
   10f74:	ldr	r3, [pc, #24]	; 10f94 <_start@@Base+0x84>
   10f78:	cmp	r3, r0
   10f7c:	bxeq	lr
   10f80:	ldr	r3, [pc, #16]	; 10f98 <_start@@Base+0x88>
   10f84:	cmp	r3, #0
   10f88:	bxeq	lr
   10f8c:	bx	r3
   10f90:	andeq	r3, r2, r0, rrx
   10f94:	andeq	r3, r2, r0, rrx
   10f98:	andeq	r0, r0, r0
   10f9c:	ldr	r0, [pc, #36]	; 10fc8 <_start@@Base+0xb8>
   10fa0:	ldr	r1, [pc, #36]	; 10fcc <_start@@Base+0xbc>
   10fa4:	sub	r1, r1, r0
   10fa8:	asr	r1, r1, #2
   10fac:	add	r1, r1, r1, lsr #31
   10fb0:	asrs	r1, r1, #1
   10fb4:	bxeq	lr
   10fb8:	ldr	r3, [pc, #16]	; 10fd0 <_start@@Base+0xc0>
   10fbc:	cmp	r3, #0
   10fc0:	bxeq	lr
   10fc4:	bx	r3
   10fc8:	andeq	r3, r2, r0, rrx
   10fcc:	andeq	r3, r2, r0, rrx
   10fd0:	andeq	r0, r0, r0
   10fd4:	push	{r4, lr}
   10fd8:	ldr	r4, [pc, #24]	; 10ff8 <_start@@Base+0xe8>
   10fdc:	ldrb	r3, [r4]
   10fe0:	cmp	r3, #0
   10fe4:	popne	{r4, pc}
   10fe8:	bl	10f70 <_start@@Base+0x60>
   10fec:	mov	r3, #1
   10ff0:	strb	r3, [r4]
   10ff4:	pop	{r4, pc}
   10ff8:	andeq	r3, r2, r4, rrx
   10ffc:	b	10f9c <_start@@Base+0x8c>

00011000 <avl_max_subarvore@@Base>:
   11000:	strd	r4, [sp, #-16]!
   11004:	mov	r5, r0
   11008:	str	r6, [sp, #8]
   1100c:	mov	r6, r1
   11010:	str	lr, [sp, #12]
   11014:	bl	110e8 <avl_nova@@Base>
   11018:	mov	r4, r0
   1101c:	mov	r1, r6
   11020:	mov	r0, r5
   11024:	bl	11110 <avl_pesquisa@@Base>
   11028:	str	r0, [r4]
   1102c:	mov	r0, r4
   11030:	bl	111ac <avl_max@@Base>
   11034:	mov	r1, r0
   11038:	movw	r0, #10960	; 0x2ad0
   1103c:	movt	r0, #1
   11040:	bl	10cc0 <printf@plt>
   11044:	mov	r0, r4
   11048:	ldrd	r4, [sp]
   1104c:	ldr	r6, [sp, #8]
   11050:	ldr	lr, [sp, #12]
   11054:	add	sp, sp, #16
   11058:	b	10ce4 <free@plt>

0001105c <tabela_copia@@Base>:
   1105c:	strd	r4, [sp, #-20]!	; 0xffffffec
   11060:	mov	r4, r0
   11064:	mov	r0, r1
   11068:	ldr	r1, [r4]
   1106c:	strd	r6, [sp, #8]
   11070:	str	lr, [sp, #16]
   11074:	sub	sp, sp, #12
   11078:	bl	122cc <tabela_nova@@Base>
   1107c:	mov	r6, r0
   11080:	add	r1, sp, #4
   11084:	mov	r0, r4
   11088:	bl	127d0 <tabela_elementos@@Base>
   1108c:	ldr	r3, [sp, #4]
   11090:	mov	r7, r0
   11094:	cmp	r3, #0
   11098:	ble	110c8 <tabela_copia@@Base+0x6c>
   1109c:	mov	r4, r0
   110a0:	mov	r5, #0
   110a4:	add	r2, r4, #50	; 0x32
   110a8:	mov	r1, r4
   110ac:	mov	r0, r6
   110b0:	add	r5, r5, #1
   110b4:	bl	123e8 <tabela_adiciona@@Base>
   110b8:	ldr	r3, [sp, #4]
   110bc:	add	r4, r4, #150	; 0x96
   110c0:	cmp	r3, r5
   110c4:	bgt	110a4 <tabela_copia@@Base+0x48>
   110c8:	mov	r0, r7
   110cc:	bl	10ce4 <free@plt>
   110d0:	mov	r0, r6
   110d4:	add	sp, sp, #12
   110d8:	ldrd	r4, [sp]
   110dc:	ldrd	r6, [sp, #8]
   110e0:	add	sp, sp, #16
   110e4:	pop	{pc}		; (ldr pc, [sp], #4)

000110e8 <avl_nova@@Base>:
   110e8:	mov	r0, #4
   110ec:	str	r4, [sp, #-8]!
   110f0:	str	lr, [sp, #4]
   110f4:	bl	10d20 <malloc@plt>
   110f8:	cmp	r0, #0
   110fc:	ldr	r4, [sp]
   11100:	add	sp, sp, #4
   11104:	movne	r3, #0
   11108:	strne	r3, [r0]
   1110c:	pop	{pc}		; (ldr pc, [sp], #4)

00011110 <avl_pesquisa@@Base>:
   11110:	cmp	r1, #0
   11114:	cmpne	r0, #0
   11118:	strd	r4, [sp, #-16]!
   1111c:	moveq	r4, #0
   11120:	str	r6, [sp, #8]
   11124:	str	lr, [sp, #12]
   11128:	beq	11170 <avl_pesquisa@@Base+0x60>
   1112c:	ldr	r4, [r0]
   11130:	mov	r5, r1
   11134:	cmp	r4, #0
   11138:	bne	11150 <avl_pesquisa@@Base+0x40>
   1113c:	b	11170 <avl_pesquisa@@Base+0x60>
   11140:	beq	11170 <avl_pesquisa@@Base+0x60>
   11144:	ldr	r4, [r4, #8]
   11148:	cmp	r4, #0
   1114c:	beq	11170 <avl_pesquisa@@Base+0x60>
   11150:	mov	r0, r5
   11154:	ldr	r1, [r4]
   11158:	bl	10cb4 <strcmp@plt>
   1115c:	cmp	r0, #0
   11160:	bge	11140 <avl_pesquisa@@Base+0x30>
   11164:	ldr	r4, [r4, #4]
   11168:	cmp	r4, #0
   1116c:	bne	11150 <avl_pesquisa@@Base+0x40>
   11170:	mov	r0, r4
   11174:	ldrd	r4, [sp]
   11178:	ldr	r6, [sp, #8]
   1117c:	add	sp, sp, #12
   11180:	pop	{pc}		; (ldr pc, [sp], #4)

00011184 <avl_min@@Base>:
   11184:	cmp	r0, #0
   11188:	beq	111a8 <avl_min@@Base+0x24>
   1118c:	ldr	r2, [r0]
   11190:	b	11198 <avl_min@@Base+0x14>
   11194:	mov	r2, r3
   11198:	ldr	r3, [r2, #4]
   1119c:	cmp	r3, #0
   111a0:	bne	11194 <avl_min@@Base+0x10>
   111a4:	ldr	r0, [r2]
   111a8:	bx	lr

000111ac <avl_max@@Base>:
   111ac:	cmp	r0, #0
   111b0:	beq	111d0 <avl_max@@Base+0x24>
   111b4:	ldr	r2, [r0]
   111b8:	b	111c0 <avl_max@@Base+0x14>
   111bc:	mov	r2, r3
   111c0:	ldr	r3, [r2, #8]
   111c4:	cmp	r3, #0
   111c8:	bne	111bc <avl_max@@Base+0x10>
   111cc:	ldr	r0, [r2]
   111d0:	bx	lr

000111d4 <avl_altura@@Base>:
   111d4:	cmp	r0, #0
   111d8:	ldrne	r0, [r0, #12]
   111dc:	mvneq	r0, #0
   111e0:	bx	lr

000111e4 <max@@Base>:
   111e4:	cmp	r1, r0
   111e8:	movge	r0, r1
   111ec:	bx	lr

000111f0 <avl_novo_no@@Base>:
   111f0:	strd	r4, [sp, #-16]!
   111f4:	mov	r5, r0
   111f8:	mov	r0, #16
   111fc:	str	r6, [sp, #8]
   11200:	str	lr, [sp, #12]
   11204:	bl	10d20 <malloc@plt>
   11208:	mov	r4, r0
   1120c:	mov	r0, r5
   11210:	bl	10d44 <strlen@plt>
   11214:	add	r6, r0, #1
   11218:	mov	r0, r6
   1121c:	bl	10d20 <malloc@plt>
   11220:	mov	r2, r6
   11224:	mov	r1, r5
   11228:	str	r0, [r4]
   1122c:	bl	10cf0 <memcpy@plt>
   11230:	mov	r3, #0
   11234:	mov	r0, r4
   11238:	ldr	r6, [sp, #8]
   1123c:	str	r3, [r4, #4]
   11240:	str	r3, [r4, #8]
   11244:	str	r3, [r4, #12]
   11248:	ldrd	r4, [sp]
   1124c:	add	sp, sp, #12
   11250:	pop	{pc}		; (ldr pc, [sp], #4)

00011254 <roda_direita@@Base>:
   11254:	ldr	r2, [r0, #4]
   11258:	ldr	r3, [r2, #8]
   1125c:	str	r0, [r2, #8]
   11260:	cmp	r3, #0
   11264:	str	r3, [r0, #4]
   11268:	ldrne	r1, [r3, #12]
   1126c:	mvneq	r1, #0
   11270:	ldr	r3, [r0, #8]
   11274:	ldr	ip, [r2, #4]
   11278:	cmp	r3, #0
   1127c:	ldrne	r3, [r3, #12]
   11280:	mvneq	r3, #0
   11284:	cmp	r3, r1
   11288:	movlt	r3, r1
   1128c:	cmp	ip, #0
   11290:	add	r3, r3, #1
   11294:	mvneq	r1, #0
   11298:	str	r3, [r0, #12]
   1129c:	mov	r0, r2
   112a0:	ldrne	r1, [ip, #12]
   112a4:	cmp	r3, r1
   112a8:	movlt	r3, r1
   112ac:	add	r3, r3, #1
   112b0:	str	r3, [r2, #12]
   112b4:	bx	lr

000112b8 <roda_esquerda@@Base>:
   112b8:	ldr	r2, [r0, #8]
   112bc:	ldr	r1, [r2, #4]
   112c0:	str	r0, [r2, #4]
   112c4:	ldr	r3, [r0, #4]
   112c8:	str	r1, [r0, #8]
   112cc:	cmp	r3, #0
   112d0:	ldrne	ip, [r3, #12]
   112d4:	mvneq	ip, #0
   112d8:	cmp	r1, #0
   112dc:	mvneq	r3, #0
   112e0:	ldrne	r3, [r1, #12]
   112e4:	ldr	r1, [r2, #8]
   112e8:	cmp	r3, ip
   112ec:	movlt	r3, ip
   112f0:	add	r3, r3, #1
   112f4:	cmp	r1, #0
   112f8:	mvneq	r1, #0
   112fc:	str	r3, [r0, #12]
   11300:	mov	r0, r2
   11304:	ldrne	r1, [r1, #12]
   11308:	cmp	r3, r1
   1130c:	movlt	r3, r1
   11310:	add	r3, r3, #1
   11314:	str	r3, [r2, #12]
   11318:	bx	lr

0001131c <calc_balanceamento@@Base>:
   1131c:	cmp	r0, #0
   11320:	beq	11348 <calc_balanceamento@@Base+0x2c>
   11324:	ldr	r3, [r0, #8]
   11328:	cmp	r3, #0
   1132c:	ldrne	r2, [r3, #12]
   11330:	mvneq	r2, #0
   11334:	ldr	r3, [r0, #4]
   11338:	cmp	r3, #0
   1133c:	ldrne	r0, [r3, #12]
   11340:	mvneq	r0, #0
   11344:	sub	r0, r2, r0
   11348:	bx	lr

0001134c <avl_pesquisa_impl@@Base>:
   1134c:	strd	r4, [sp, #-16]!
   11350:	subs	r4, r0, #0
   11354:	movne	r5, r1
   11358:	str	r6, [sp, #8]
   1135c:	str	lr, [sp, #12]
   11360:	bne	11378 <avl_pesquisa_impl@@Base+0x2c>
   11364:	b	11398 <avl_pesquisa_impl@@Base+0x4c>
   11368:	beq	11398 <avl_pesquisa_impl@@Base+0x4c>
   1136c:	ldr	r4, [r4, #8]
   11370:	cmp	r4, #0
   11374:	beq	11398 <avl_pesquisa_impl@@Base+0x4c>
   11378:	mov	r0, r5
   1137c:	ldr	r1, [r4]
   11380:	bl	10cb4 <strcmp@plt>
   11384:	cmp	r0, #0
   11388:	bge	11368 <avl_pesquisa_impl@@Base+0x1c>
   1138c:	ldr	r4, [r4, #4]
   11390:	cmp	r4, #0
   11394:	bne	11378 <avl_pesquisa_impl@@Base+0x2c>
   11398:	mov	r0, r4
   1139c:	ldrd	r4, [sp]
   113a0:	ldr	r6, [sp, #8]
   113a4:	add	sp, sp, #12
   113a8:	pop	{pc}		; (ldr pc, [sp], #4)

000113ac <avl_insere_impl@@Base>:
   113ac:	strd	r4, [sp, #-24]!	; 0xffffffe8
   113b0:	subs	r5, r0, #0
   113b4:	strd	r6, [sp, #8]
   113b8:	mov	r6, r1
   113bc:	str	r8, [sp, #16]
   113c0:	str	lr, [sp, #20]
   113c4:	beq	11570 <avl_insere_impl@@Base+0x1c4>
   113c8:	mov	r0, r1
   113cc:	ldr	r1, [r5]
   113d0:	bl	10cb4 <strcmp@plt>
   113d4:	cmp	r0, #0
   113d8:	blt	11558 <avl_insere_impl@@Base+0x1ac>
   113dc:	beq	114cc <avl_insere_impl@@Base+0x120>
   113e0:	mov	r1, r6
   113e4:	ldr	r0, [r5, #8]
   113e8:	bl	113ac <avl_insere_impl@@Base>
   113ec:	mov	r4, r0
   113f0:	ldr	r0, [r5, #4]
   113f4:	str	r4, [r5, #8]
   113f8:	cmp	r0, #0
   113fc:	beq	116fc <avl_insere_impl@@Base+0x350>
   11400:	cmp	r4, #0
   11404:	ldr	r3, [r0, #12]
   11408:	beq	116e0 <avl_insere_impl@@Base+0x334>
   1140c:	ldr	r2, [r4, #12]
   11410:	cmp	r3, r2
   11414:	movlt	r3, r2
   11418:	add	r3, r3, #1
   1141c:	str	r3, [r5, #12]
   11420:	ldr	r2, [r4, #12]
   11424:	ldr	r3, [r0, #12]
   11428:	sub	r3, r2, r3
   1142c:	cmp	r3, #1
   11430:	ble	114d4 <avl_insere_impl@@Base+0x128>
   11434:	ldrd	r2, [r4, #4]
   11438:	cmp	r3, #0
   1143c:	beq	11728 <avl_insere_impl@@Base+0x37c>
   11440:	cmp	r2, #0
   11444:	ldr	r3, [r3, #12]
   11448:	beq	11740 <avl_insere_impl@@Base+0x394>
   1144c:	ldr	r1, [r2, #12]
   11450:	sub	r3, r3, r1
   11454:	cmp	r3, #0
   11458:	blt	115b0 <avl_insere_impl@@Base+0x204>
   1145c:	str	r5, [r4, #4]
   11460:	ldr	r3, [r5, #4]
   11464:	str	r2, [r5, #8]
   11468:	cmp	r3, #0
   1146c:	beq	11738 <avl_insere_impl@@Base+0x38c>
   11470:	ldr	r1, [r3, #12]
   11474:	cmp	r2, #0
   11478:	ldrne	r3, [r2, #12]
   1147c:	mvneq	r3, #0
   11480:	ldr	r2, [r4, #8]
   11484:	cmp	r3, r1
   11488:	movlt	r3, r1
   1148c:	cmp	r2, #0
   11490:	add	r3, r3, #1
   11494:	mvneq	r2, #0
   11498:	str	r3, [r5, #12]
   1149c:	ldrne	r2, [r2, #12]
   114a0:	cmp	r3, r2
   114a4:	movlt	r3, r2
   114a8:	add	r3, r3, #1
   114ac:	str	r3, [r4, #12]
   114b0:	mov	r0, r4
   114b4:	ldrd	r4, [sp]
   114b8:	ldrd	r6, [sp, #8]
   114bc:	ldr	r8, [sp, #16]
   114c0:	add	sp, sp, #20
   114c4:	pop	{pc}		; (ldr pc, [sp], #4)
   114c8:	str	r4, [r5, #12]
   114cc:	mov	r4, r5
   114d0:	b	114b0 <avl_insere_impl@@Base+0x104>
   114d4:	cmn	r3, #1
   114d8:	bge	114cc <avl_insere_impl@@Base+0x120>
   114dc:	ldmib	r0, {r2, r4}
   114e0:	cmp	r4, #0
   114e4:	beq	11748 <avl_insere_impl@@Base+0x39c>
   114e8:	cmp	r2, #0
   114ec:	ldr	r3, [r4, #12]
   114f0:	beq	1165c <avl_insere_impl@@Base+0x2b0>
   114f4:	ldr	r2, [r2, #12]
   114f8:	sub	r2, r3, r2
   114fc:	cmp	r2, #0
   11500:	bgt	11664 <avl_insere_impl@@Base+0x2b8>
   11504:	mov	r2, r3
   11508:	str	r5, [r0, #8]
   1150c:	str	r4, [r5, #4]
   11510:	ldr	r3, [r5, #8]
   11514:	mov	r4, r0
   11518:	ldr	r1, [r0, #4]
   1151c:	cmp	r3, #0
   11520:	ldrne	r3, [r3, #12]
   11524:	mvneq	r3, #0
   11528:	cmp	r3, r2
   1152c:	movlt	r3, r2
   11530:	cmp	r1, #0
   11534:	add	r3, r3, #1
   11538:	mvneq	r2, #0
   1153c:	str	r3, [r5, #12]
   11540:	ldrne	r2, [r1, #12]
   11544:	cmp	r3, r2
   11548:	movlt	r3, r2
   1154c:	add	r3, r3, #1
   11550:	str	r3, [r0, #12]
   11554:	b	114b0 <avl_insere_impl@@Base+0x104>
   11558:	mov	r1, r6
   1155c:	ldr	r0, [r5, #4]
   11560:	bl	113ac <avl_insere_impl@@Base>
   11564:	str	r0, [r5, #4]
   11568:	ldr	r4, [r5, #8]
   1156c:	b	113f8 <avl_insere_impl@@Base+0x4c>
   11570:	mov	r0, #16
   11574:	bl	10d20 <malloc@plt>
   11578:	mov	r4, r0
   1157c:	mov	r0, r6
   11580:	bl	10d44 <strlen@plt>
   11584:	add	r7, r0, #1
   11588:	mov	r0, r7
   1158c:	bl	10d20 <malloc@plt>
   11590:	mov	r2, r7
   11594:	mov	r1, r6
   11598:	str	r0, [r4]
   1159c:	bl	10cf0 <memcpy@plt>
   115a0:	str	r5, [r4, #4]
   115a4:	str	r5, [r4, #8]
   115a8:	str	r5, [r4, #12]
   115ac:	b	114b0 <avl_insere_impl@@Base+0x104>
   115b0:	ldr	r3, [r2, #8]
   115b4:	str	r4, [r2, #8]
   115b8:	ldr	r1, [r4, #8]
   115bc:	cmp	r3, #0
   115c0:	str	r3, [r4, #4]
   115c4:	ldrne	r3, [r3, #12]
   115c8:	mvneq	r3, #0
   115cc:	cmp	r1, #0
   115d0:	ldrne	r1, [r1, #12]
   115d4:	mvneq	r1, #0
   115d8:	ldr	r0, [r2, #4]
   115dc:	cmp	r1, r3
   115e0:	movlt	r1, r3
   115e4:	add	r1, r1, #1
   115e8:	cmp	r0, #0
   115ec:	str	r1, [r4, #12]
   115f0:	beq	1176c <avl_insere_impl@@Base+0x3c0>
   115f4:	ldr	ip, [r0, #12]
   115f8:	str	r5, [r2, #4]
   115fc:	ldr	r3, [r5, #4]
   11600:	cmp	r1, ip
   11604:	movlt	r1, ip
   11608:	add	r1, r1, #1
   1160c:	cmp	r3, #0
   11610:	str	r1, [r2, #12]
   11614:	mvneq	r1, #0
   11618:	ldrne	r1, [r3, #12]
   1161c:	str	r0, [r5, #8]
   11620:	ldr	r3, [r0, #12]
   11624:	cmp	r3, r1
   11628:	mov	r4, r2
   1162c:	ldr	r0, [r2, #8]
   11630:	movlt	r3, r1
   11634:	add	r3, r3, #1
   11638:	str	r3, [r5, #12]
   1163c:	cmp	r0, #0
   11640:	ldrne	r1, [r0, #12]
   11644:	mvneq	r1, #0
   11648:	cmp	r3, r1
   1164c:	movlt	r3, r1
   11650:	add	r3, r3, #1
   11654:	str	r3, [r2, #12]
   11658:	b	114b0 <avl_insere_impl@@Base+0x104>
   1165c:	cmp	r3, #0
   11660:	blt	11504 <avl_insere_impl@@Base+0x158>
   11664:	ldr	r2, [r4, #4]
   11668:	str	r0, [r4, #4]
   1166c:	ldr	r3, [r0, #4]
   11670:	str	r2, [r0, #8]
   11674:	cmp	r3, #0
   11678:	ldrne	r1, [r3, #12]
   1167c:	mvneq	r1, #0
   11680:	cmp	r2, #0
   11684:	mvneq	r3, #0
   11688:	ldrne	r3, [r2, #12]
   1168c:	ldr	r2, [r4, #8]
   11690:	cmp	r3, r1
   11694:	movlt	r3, r1
   11698:	add	r3, r3, #1
   1169c:	cmp	r2, #0
   116a0:	str	r3, [r0, #12]
   116a4:	beq	1179c <avl_insere_impl@@Base+0x3f0>
   116a8:	ldr	r1, [r2, #12]
   116ac:	str	r5, [r4, #8]
   116b0:	cmp	r3, r1
   116b4:	movlt	r3, r1
   116b8:	add	r3, r3, #1
   116bc:	str	r3, [r4, #12]
   116c0:	ldr	r1, [r2, #12]
   116c4:	str	r2, [r5, #4]
   116c8:	ldr	r3, [r5, #8]
   116cc:	ldr	r2, [r4, #4]
   116d0:	cmp	r3, #0
   116d4:	ldrne	r3, [r3, #12]
   116d8:	mvneq	r3, #0
   116dc:	b	11484 <avl_insere_impl@@Base+0xd8>
   116e0:	mvn	r1, #0
   116e4:	cmp	r3, r1
   116e8:	mov	r2, r1
   116ec:	movlt	r3, r1
   116f0:	add	r3, r3, #1
   116f4:	str	r3, [r5, #12]
   116f8:	b	11424 <avl_insere_impl@@Base+0x78>
   116fc:	cmp	r4, #0
   11700:	beq	114c8 <avl_insere_impl@@Base+0x11c>
   11704:	ldr	r2, [r4, #12]
   11708:	mvn	r1, #0
   1170c:	mov	r3, r1
   11710:	cmp	r2, r1
   11714:	movlt	r2, r1
   11718:	add	r2, r2, #1
   1171c:	str	r2, [r5, #12]
   11720:	ldr	r2, [r4, #12]
   11724:	b	11428 <avl_insere_impl@@Base+0x7c>
   11728:	cmp	r2, #0
   1172c:	beq	117c0 <avl_insere_impl@@Base+0x414>
   11730:	mvn	r3, #0
   11734:	b	1144c <avl_insere_impl@@Base+0xa0>
   11738:	mvn	r1, #0
   1173c:	b	11474 <avl_insere_impl@@Base+0xc8>
   11740:	mvn	r1, #0
   11744:	b	11450 <avl_insere_impl@@Base+0xa4>
   11748:	cmp	r2, #0
   1174c:	beq	1175c <avl_insere_impl@@Base+0x3b0>
   11750:	ldr	r3, [r2, #12]
   11754:	cmn	r3, #1
   11758:	blt	11664 <avl_insere_impl@@Base+0x2b8>
   1175c:	mvn	r2, #0
   11760:	str	r5, [r0, #8]
   11764:	str	r4, [r5, #4]
   11768:	b	11510 <avl_insere_impl@@Base+0x164>
   1176c:	str	r5, [r2, #4]
   11770:	mvn	r3, #0
   11774:	ldr	ip, [r5, #4]
   11778:	cmp	r1, r3
   1177c:	movlt	r1, r3
   11780:	add	r1, r1, #1
   11784:	str	r1, [r2, #12]
   11788:	cmp	ip, #0
   1178c:	str	r0, [r5, #8]
   11790:	ldrne	r1, [ip, #12]
   11794:	moveq	r1, r3
   11798:	b	11624 <avl_insere_impl@@Base+0x278>
   1179c:	mvn	r0, #0
   117a0:	str	r5, [r4, #8]
   117a4:	cmp	r3, r0
   117a8:	mov	r1, r0
   117ac:	movlt	r3, r0
   117b0:	add	r3, r3, #1
   117b4:	str	r3, [r4, #12]
   117b8:	str	r2, [r5, #4]
   117bc:	b	116c8 <avl_insere_impl@@Base+0x31c>
   117c0:	str	r5, [r4, #4]
   117c4:	ldr	r3, [r5, #4]
   117c8:	str	r2, [r5, #8]
   117cc:	cmp	r3, #0
   117d0:	bne	11470 <avl_insere_impl@@Base+0xc4>
   117d4:	mvn	r1, #0
   117d8:	mov	r3, r1
   117dc:	b	11480 <avl_insere_impl@@Base+0xd4>

000117e0 <avl_insere@@Base>:
   117e0:	clz	r3, r1
   117e4:	cmp	r0, #0
   117e8:	strd	r4, [sp, #-24]!	; 0xffffffe8
   117ec:	lsr	r3, r3, #5
   117f0:	moveq	r5, #1
   117f4:	strd	r6, [sp, #8]
   117f8:	str	r8, [sp, #16]
   117fc:	movne	r5, r3
   11800:	str	lr, [sp, #20]
   11804:	cmp	r5, #0
   11808:	bne	11b54 <avl_insere@@Base+0x374>
   1180c:	ldr	r4, [r0]
   11810:	mov	r7, r1
   11814:	mov	r6, r0
   11818:	cmp	r4, #0
   1181c:	beq	119b4 <avl_insere@@Base+0x1d4>
   11820:	mov	r0, r1
   11824:	ldr	r1, [r4]
   11828:	bl	10cb4 <strcmp@plt>
   1182c:	cmp	r0, #0
   11830:	blt	11998 <avl_insere@@Base+0x1b8>
   11834:	beq	11908 <avl_insere@@Base+0x128>
   11838:	mov	r1, r7
   1183c:	ldr	r0, [r4, #8]
   11840:	bl	113ac <avl_insere_impl@@Base>
   11844:	ldr	r2, [r4, #4]
   11848:	str	r0, [r4, #8]
   1184c:	cmp	r2, #0
   11850:	beq	11b5c <avl_insere@@Base+0x37c>
   11854:	cmp	r0, #0
   11858:	ldr	r3, [r2, #12]
   1185c:	beq	11b88 <avl_insere@@Base+0x3a8>
   11860:	ldr	r1, [r0, #12]
   11864:	cmp	r3, r1
   11868:	movlt	r3, r1
   1186c:	add	r3, r3, #1
   11870:	str	r3, [r4, #12]
   11874:	ldr	r1, [r0, #12]
   11878:	ldr	r3, [r2, #12]
   1187c:	sub	r3, r1, r3
   11880:	cmp	r3, #1
   11884:	ble	11924 <avl_insere@@Base+0x144>
   11888:	ldrd	r2, [r0, #4]
   1188c:	cmp	r3, #0
   11890:	beq	11bac <avl_insere@@Base+0x3cc>
   11894:	cmp	r2, #0
   11898:	ldr	r3, [r3, #12]
   1189c:	beq	11bbc <avl_insere@@Base+0x3dc>
   118a0:	ldr	r1, [r2, #12]
   118a4:	sub	r3, r3, r1
   118a8:	cmp	r3, #0
   118ac:	blt	119f4 <avl_insere@@Base+0x214>
   118b0:	str	r4, [r0, #4]
   118b4:	ldr	r3, [r4, #4]
   118b8:	str	r2, [r4, #8]
   118bc:	cmp	r3, #0
   118c0:	beq	11ba4 <avl_insere@@Base+0x3c4>
   118c4:	ldr	r1, [r3, #12]
   118c8:	cmp	r2, #0
   118cc:	ldrne	r3, [r2, #12]
   118d0:	mvneq	r3, #0
   118d4:	cmp	r3, r1
   118d8:	ldr	r2, [r0, #8]
   118dc:	movlt	r3, r1
   118e0:	add	r3, r3, #1
   118e4:	str	r3, [r4, #12]
   118e8:	mov	r4, r0
   118ec:	cmp	r2, #0
   118f0:	ldrne	r2, [r2, #12]
   118f4:	mvneq	r2, #0
   118f8:	cmp	r3, r2
   118fc:	movlt	r3, r2
   11900:	add	r3, r3, #1
   11904:	str	r3, [r0, #12]
   11908:	mov	r0, #0
   1190c:	str	r4, [r6]
   11910:	ldrd	r4, [sp]
   11914:	ldrd	r6, [sp, #8]
   11918:	ldr	r8, [sp, #16]
   1191c:	add	sp, sp, #20
   11920:	pop	{pc}		; (ldr pc, [sp], #4)
   11924:	cmn	r3, #1
   11928:	bge	11908 <avl_insere@@Base+0x128>
   1192c:	ldr	ip, [r2, #4]
   11930:	ldr	r1, [r2, #8]
   11934:	cmp	r1, #0
   11938:	beq	11bcc <avl_insere@@Base+0x3ec>
   1193c:	cmp	ip, #0
   11940:	ldr	r3, [r1, #12]
   11944:	beq	11aa0 <avl_insere@@Base+0x2c0>
   11948:	ldr	r0, [ip, #12]
   1194c:	sub	r0, r3, r0
   11950:	cmp	r0, #0
   11954:	bgt	11aa8 <avl_insere@@Base+0x2c8>
   11958:	mov	r0, r3
   1195c:	str	r4, [r2, #8]
   11960:	str	r1, [r4, #4]
   11964:	ldr	r3, [r4, #8]
   11968:	ldr	r1, [r2, #4]
   1196c:	cmp	r3, #0
   11970:	ldrne	r3, [r3, #12]
   11974:	mvneq	r3, #0
   11978:	cmp	r3, r0
   1197c:	movlt	r3, r0
   11980:	cmp	r1, #0
   11984:	add	r3, r3, #1
   11988:	str	r3, [r4, #12]
   1198c:	beq	11bc4 <avl_insere@@Base+0x3e4>
   11990:	ldr	r1, [r1, #12]
   11994:	b	11a88 <avl_insere@@Base+0x2a8>
   11998:	mov	r1, r7
   1199c:	ldr	r0, [r4, #4]
   119a0:	bl	113ac <avl_insere_impl@@Base>
   119a4:	mov	r2, r0
   119a8:	ldr	r0, [r4, #8]
   119ac:	str	r2, [r4, #4]
   119b0:	b	1184c <avl_insere@@Base+0x6c>
   119b4:	mov	r0, #16
   119b8:	bl	10d20 <malloc@plt>
   119bc:	mov	r4, r0
   119c0:	mov	r0, r7
   119c4:	bl	10d44 <strlen@plt>
   119c8:	add	r8, r0, #1
   119cc:	mov	r0, r8
   119d0:	bl	10d20 <malloc@plt>
   119d4:	mov	r2, r8
   119d8:	mov	r1, r7
   119dc:	str	r0, [r4]
   119e0:	bl	10cf0 <memcpy@plt>
   119e4:	str	r5, [r4, #4]
   119e8:	str	r5, [r4, #8]
   119ec:	str	r5, [r4, #12]
   119f0:	b	11908 <avl_insere@@Base+0x128>
   119f4:	ldr	r3, [r2, #8]
   119f8:	str	r0, [r2, #8]
   119fc:	cmp	r3, #0
   11a00:	str	r3, [r0, #4]
   11a04:	ldrne	r1, [r3, #12]
   11a08:	mvneq	r1, #0
   11a0c:	ldr	r3, [r0, #8]
   11a10:	ldr	ip, [r2, #4]
   11a14:	cmp	r3, #0
   11a18:	ldrne	r3, [r3, #12]
   11a1c:	mvneq	r3, #0
   11a20:	cmp	r3, r1
   11a24:	movlt	r3, r1
   11a28:	cmp	ip, #0
   11a2c:	add	r3, r3, #1
   11a30:	str	r3, [r0, #12]
   11a34:	beq	11bf0 <avl_insere@@Base+0x410>
   11a38:	ldr	r0, [ip, #12]
   11a3c:	str	r4, [r2, #4]
   11a40:	ldr	r1, [r4, #4]
   11a44:	cmp	r3, r0
   11a48:	movlt	r3, r0
   11a4c:	add	r3, r3, #1
   11a50:	cmp	r1, #0
   11a54:	mvneq	r1, #0
   11a58:	str	r3, [r2, #12]
   11a5c:	ldrne	r1, [r1, #12]
   11a60:	str	ip, [r4, #8]
   11a64:	ldr	r3, [ip, #12]
   11a68:	cmp	r3, r1
   11a6c:	ldr	r0, [r2, #8]
   11a70:	movlt	r3, r1
   11a74:	add	r3, r3, #1
   11a78:	str	r3, [r4, #12]
   11a7c:	cmp	r0, #0
   11a80:	beq	11bc4 <avl_insere@@Base+0x3e4>
   11a84:	ldr	r1, [r0, #12]
   11a88:	cmp	r3, r1
   11a8c:	mov	r4, r2
   11a90:	movlt	r3, r1
   11a94:	add	r3, r3, #1
   11a98:	str	r3, [r2, #12]
   11a9c:	b	11908 <avl_insere@@Base+0x128>
   11aa0:	cmp	r3, #0
   11aa4:	blt	11958 <avl_insere@@Base+0x178>
   11aa8:	ldr	r0, [r1, #4]
   11aac:	str	r2, [r1, #4]
   11ab0:	ldr	r3, [r2, #4]
   11ab4:	str	r0, [r2, #8]
   11ab8:	cmp	r3, #0
   11abc:	ldrne	ip, [r3, #12]
   11ac0:	mvneq	ip, #0
   11ac4:	cmp	r0, #0
   11ac8:	mvneq	r3, #0
   11acc:	ldrne	r3, [r0, #12]
   11ad0:	ldr	r0, [r1, #8]
   11ad4:	cmp	r3, ip
   11ad8:	movlt	r3, ip
   11adc:	add	r3, r3, #1
   11ae0:	cmp	r0, #0
   11ae4:	str	r3, [r2, #12]
   11ae8:	beq	11c24 <avl_insere@@Base+0x444>
   11aec:	ldr	r2, [r0, #12]
   11af0:	str	r4, [r1, #8]
   11af4:	cmp	r3, r2
   11af8:	movlt	r3, r2
   11afc:	add	r3, r3, #1
   11b00:	str	r3, [r1, #12]
   11b04:	ldr	r2, [r0, #12]
   11b08:	str	r0, [r4, #4]
   11b0c:	ldr	r3, [r4, #8]
   11b10:	ldr	r0, [r1, #4]
   11b14:	cmp	r3, #0
   11b18:	ldrne	r3, [r3, #12]
   11b1c:	mvneq	r3, #0
   11b20:	cmp	r3, r2
   11b24:	movlt	r3, r2
   11b28:	cmp	r0, #0
   11b2c:	add	r3, r3, #1
   11b30:	mvneq	r2, #0
   11b34:	str	r3, [r4, #12]
   11b38:	mov	r4, r1
   11b3c:	ldrne	r2, [r0, #12]
   11b40:	cmp	r3, r2
   11b44:	movlt	r3, r2
   11b48:	add	r3, r3, #1
   11b4c:	str	r3, [r1, #12]
   11b50:	b	11908 <avl_insere@@Base+0x128>
   11b54:	mvn	r0, #0
   11b58:	b	11910 <avl_insere@@Base+0x130>
   11b5c:	cmp	r0, #0
   11b60:	beq	11c48 <avl_insere@@Base+0x468>
   11b64:	ldr	r1, [r0, #12]
   11b68:	mvn	ip, #0
   11b6c:	mov	r3, ip
   11b70:	cmp	r1, ip
   11b74:	movlt	r1, ip
   11b78:	add	r1, r1, #1
   11b7c:	str	r1, [r4, #12]
   11b80:	ldr	r1, [r0, #12]
   11b84:	b	1187c <avl_insere@@Base+0x9c>
   11b88:	mvn	ip, #0
   11b8c:	cmp	r3, ip
   11b90:	mov	r1, ip
   11b94:	movlt	r3, ip
   11b98:	add	r3, r3, #1
   11b9c:	str	r3, [r4, #12]
   11ba0:	b	11878 <avl_insere@@Base+0x98>
   11ba4:	mvn	r1, #0
   11ba8:	b	118c8 <avl_insere@@Base+0xe8>
   11bac:	cmp	r2, #0
   11bb0:	beq	11c50 <avl_insere@@Base+0x470>
   11bb4:	mvn	r3, #0
   11bb8:	b	118a0 <avl_insere@@Base+0xc0>
   11bbc:	mvn	r1, #0
   11bc0:	b	118a4 <avl_insere@@Base+0xc4>
   11bc4:	mvn	r1, #0
   11bc8:	b	11a88 <avl_insere@@Base+0x2a8>
   11bcc:	cmp	ip, #0
   11bd0:	beq	11c70 <avl_insere@@Base+0x490>
   11bd4:	ldr	r3, [ip, #12]
   11bd8:	cmn	r3, #1
   11bdc:	blt	11aa8 <avl_insere@@Base+0x2c8>
   11be0:	mvn	r0, #0
   11be4:	str	r4, [r2, #8]
   11be8:	str	r1, [r4, #4]
   11bec:	b	11964 <avl_insere@@Base+0x184>
   11bf0:	str	r4, [r2, #4]
   11bf4:	mvn	r1, #0
   11bf8:	ldr	r0, [r4, #4]
   11bfc:	cmp	r3, r1
   11c00:	movlt	r3, r1
   11c04:	add	r3, r3, #1
   11c08:	str	r3, [r2, #12]
   11c0c:	cmp	r0, #0
   11c10:	str	ip, [r4, #8]
   11c14:	movne	r3, r1
   11c18:	ldrne	r1, [r0, #12]
   11c1c:	moveq	r3, r1
   11c20:	b	11a68 <avl_insere@@Base+0x288>
   11c24:	mvn	ip, #0
   11c28:	str	r4, [r1, #8]
   11c2c:	cmp	r3, ip
   11c30:	mov	r2, ip
   11c34:	movlt	r3, ip
   11c38:	add	r3, r3, #1
   11c3c:	str	r3, [r1, #12]
   11c40:	str	r0, [r4, #4]
   11c44:	b	11b0c <avl_insere@@Base+0x32c>
   11c48:	str	r0, [r4, #12]
   11c4c:	b	11908 <avl_insere@@Base+0x128>
   11c50:	str	r4, [r0, #4]
   11c54:	ldr	r3, [r4, #4]
   11c58:	str	r2, [r4, #8]
   11c5c:	cmp	r3, #0
   11c60:	bne	118c4 <avl_insere@@Base+0xe4>
   11c64:	mvn	r1, #0
   11c68:	mov	r3, r1
   11c6c:	b	118d4 <avl_insere@@Base+0xf4>
   11c70:	mvn	r0, #0
   11c74:	str	r4, [r2, #8]
   11c78:	str	ip, [r4, #4]
   11c7c:	b	11964 <avl_insere@@Base+0x184>

00011c80 <avl_no_valormin@@Base>:
   11c80:	b	11c88 <avl_no_valormin@@Base+0x8>
   11c84:	mov	r0, r3
   11c88:	ldr	r3, [r0, #4]
   11c8c:	cmp	r3, #0
   11c90:	bne	11c84 <avl_no_valormin@@Base+0x4>
   11c94:	bx	lr

00011c98 <avl_no_valormax@@Base>:
   11c98:	b	11ca0 <avl_no_valormax@@Base+0x8>
   11c9c:	mov	r0, r3
   11ca0:	ldr	r3, [r0, #8]
   11ca4:	cmp	r3, #0
   11ca8:	bne	11c9c <avl_no_valormax@@Base+0x4>
   11cac:	bx	lr

00011cb0 <avl_remove_impl@@Base>:
   11cb0:	strd	r4, [sp, #-24]!	; 0xffffffe8
   11cb4:	subs	r5, r0, #0
   11cb8:	strd	r6, [sp, #8]
   11cbc:	str	r8, [sp, #16]
   11cc0:	str	lr, [sp, #20]
   11cc4:	beq	11e7c <avl_remove_impl@@Base+0x1cc>
   11cc8:	ldr	r7, [r5]
   11ccc:	mov	r0, r1
   11cd0:	mov	r6, r1
   11cd4:	mov	r1, r7
   11cd8:	bl	10cb4 <strcmp@plt>
   11cdc:	cmp	r0, #0
   11ce0:	blt	11e84 <avl_remove_impl@@Base+0x1d4>
   11ce4:	ldr	r4, [r5, #8]
   11ce8:	bne	11d8c <avl_remove_impl@@Base+0xdc>
   11cec:	ldr	r6, [r5, #4]
   11cf0:	cmp	r6, #0
   11cf4:	beq	11fc4 <avl_remove_impl@@Base+0x314>
   11cf8:	cmp	r4, #0
   11cfc:	bne	11d44 <avl_remove_impl@@Base+0x94>
   11d00:	ldr	r0, [r6]
   11d04:	bl	10d44 <strlen@plt>
   11d08:	add	r1, r0, #1
   11d0c:	mov	r0, r7
   11d10:	bl	10cfc <realloc@plt>
   11d14:	str	r0, [r5]
   11d18:	ldr	r1, [r6]
   11d1c:	bl	10d08 <strcpy@plt>
   11d20:	ldrd	r0, [r6]
   11d24:	ldrd	r2, [r6, #8]
   11d28:	stmib	r5, {r1, r2, r3}
   11d2c:	bl	10ce4 <free@plt>
   11d30:	mov	r0, r6
   11d34:	bl	10ce4 <free@plt>
   11d38:	ldmib	r5, {r0, r4}
   11d3c:	b	11da4 <avl_remove_impl@@Base+0xf4>
   11d40:	mov	r4, r3
   11d44:	ldr	r3, [r4, #4]
   11d48:	cmp	r3, #0
   11d4c:	bne	11d40 <avl_remove_impl@@Base+0x90>
   11d50:	ldr	r0, [r4]
   11d54:	bl	10d44 <strlen@plt>
   11d58:	add	r1, r0, #1
   11d5c:	mov	r0, r7
   11d60:	bl	10cfc <realloc@plt>
   11d64:	str	r0, [r5]
   11d68:	ldr	r1, [r4]
   11d6c:	bl	10d08 <strcpy@plt>
   11d70:	ldr	r1, [r4]
   11d74:	ldr	r0, [r5, #8]
   11d78:	bl	11cb0 <avl_remove_impl@@Base>
   11d7c:	mov	r4, r0
   11d80:	ldr	r0, [r5, #4]
   11d84:	str	r4, [r5, #8]
   11d88:	b	11da4 <avl_remove_impl@@Base+0xf4>
   11d8c:	mov	r0, r4
   11d90:	mov	r1, r6
   11d94:	bl	11cb0 <avl_remove_impl@@Base>
   11d98:	mov	r4, r0
   11d9c:	ldr	r0, [r5, #4]
   11da0:	str	r4, [r5, #8]
   11da4:	cmp	r0, #0
   11da8:	beq	12064 <avl_remove_impl@@Base+0x3b4>
   11dac:	cmp	r4, #0
   11db0:	ldr	r3, [r0, #12]
   11db4:	beq	12090 <avl_remove_impl@@Base+0x3e0>
   11db8:	ldr	r2, [r4, #12]
   11dbc:	cmp	r3, r2
   11dc0:	movlt	r3, r2
   11dc4:	add	r3, r3, #1
   11dc8:	str	r3, [r5, #12]
   11dcc:	ldr	r2, [r4, #12]
   11dd0:	ldr	r3, [r0, #12]
   11dd4:	sub	r3, r2, r3
   11dd8:	cmp	r3, #1
   11ddc:	ble	11e74 <avl_remove_impl@@Base+0x1c4>
   11de0:	ldrd	r2, [r4, #4]
   11de4:	cmp	r3, #0
   11de8:	beq	120ac <avl_remove_impl@@Base+0x3fc>
   11dec:	cmp	r2, #0
   11df0:	ldr	r3, [r3, #12]
   11df4:	beq	120bc <avl_remove_impl@@Base+0x40c>
   11df8:	ldr	r1, [r2, #12]
   11dfc:	sub	r3, r3, r1
   11e00:	cmp	r3, #0
   11e04:	blt	11f18 <avl_remove_impl@@Base+0x268>
   11e08:	str	r5, [r4, #4]
   11e0c:	ldr	r3, [r5, #4]
   11e10:	str	r2, [r5, #8]
   11e14:	cmp	r3, #0
   11e18:	beq	120c4 <avl_remove_impl@@Base+0x414>
   11e1c:	ldr	r1, [r3, #12]
   11e20:	cmp	r2, #0
   11e24:	ldrne	r3, [r2, #12]
   11e28:	mvneq	r3, #0
   11e2c:	ldr	r2, [r4, #8]
   11e30:	cmp	r3, r1
   11e34:	movlt	r3, r1
   11e38:	cmp	r2, #0
   11e3c:	add	r3, r3, #1
   11e40:	mvneq	r2, #0
   11e44:	str	r3, [r5, #12]
   11e48:	ldrne	r2, [r2, #12]
   11e4c:	cmp	r3, r2
   11e50:	movlt	r3, r2
   11e54:	add	r3, r3, #1
   11e58:	str	r3, [r4, #12]
   11e5c:	mov	r0, r4
   11e60:	ldrd	r4, [sp]
   11e64:	ldrd	r6, [sp, #8]
   11e68:	ldr	r8, [sp, #16]
   11e6c:	add	sp, sp, #20
   11e70:	pop	{pc}		; (ldr pc, [sp], #4)
   11e74:	cmn	r3, #1
   11e78:	blt	11e9c <avl_remove_impl@@Base+0x1ec>
   11e7c:	mov	r4, r5
   11e80:	b	11e5c <avl_remove_impl@@Base+0x1ac>
   11e84:	mov	r1, r6
   11e88:	ldr	r0, [r5, #4]
   11e8c:	bl	11cb0 <avl_remove_impl@@Base>
   11e90:	str	r0, [r5, #4]
   11e94:	ldr	r4, [r5, #8]
   11e98:	b	11da4 <avl_remove_impl@@Base+0xf4>
   11e9c:	ldmib	r0, {r2, r4}
   11ea0:	cmp	r4, #0
   11ea4:	beq	120cc <avl_remove_impl@@Base+0x41c>
   11ea8:	cmp	r2, #0
   11eac:	ldr	r3, [r4, #12]
   11eb0:	beq	11fe0 <avl_remove_impl@@Base+0x330>
   11eb4:	ldr	r2, [r2, #12]
   11eb8:	sub	r2, r3, r2
   11ebc:	cmp	r2, #0
   11ec0:	bgt	11fe8 <avl_remove_impl@@Base+0x338>
   11ec4:	mov	r2, r3
   11ec8:	str	r5, [r0, #8]
   11ecc:	str	r4, [r5, #4]
   11ed0:	ldr	r3, [r5, #8]
   11ed4:	mov	r4, r0
   11ed8:	ldr	r1, [r0, #4]
   11edc:	cmp	r3, #0
   11ee0:	ldrne	r3, [r3, #12]
   11ee4:	mvneq	r3, #0
   11ee8:	cmp	r3, r2
   11eec:	movlt	r3, r2
   11ef0:	cmp	r1, #0
   11ef4:	add	r3, r3, #1
   11ef8:	mvneq	r2, #0
   11efc:	str	r3, [r5, #12]
   11f00:	ldrne	r2, [r1, #12]
   11f04:	cmp	r3, r2
   11f08:	movlt	r3, r2
   11f0c:	add	r3, r3, #1
   11f10:	str	r3, [r0, #12]
   11f14:	b	11e5c <avl_remove_impl@@Base+0x1ac>
   11f18:	ldr	r3, [r2, #8]
   11f1c:	str	r4, [r2, #8]
   11f20:	ldr	r1, [r4, #8]
   11f24:	cmp	r3, #0
   11f28:	str	r3, [r4, #4]
   11f2c:	ldrne	r3, [r3, #12]
   11f30:	mvneq	r3, #0
   11f34:	cmp	r1, #0
   11f38:	ldrne	r1, [r1, #12]
   11f3c:	mvneq	r1, #0
   11f40:	ldr	r0, [r2, #4]
   11f44:	cmp	r1, r3
   11f48:	movlt	r1, r3
   11f4c:	add	r1, r1, #1
   11f50:	cmp	r0, #0
   11f54:	str	r1, [r4, #12]
   11f58:	beq	120f0 <avl_remove_impl@@Base+0x440>
   11f5c:	ldr	ip, [r0, #12]
   11f60:	str	r5, [r2, #4]
   11f64:	ldr	r3, [r5, #4]
   11f68:	cmp	r1, ip
   11f6c:	movlt	r1, ip
   11f70:	add	r1, r1, #1
   11f74:	cmp	r3, #0
   11f78:	str	r1, [r2, #12]
   11f7c:	mvneq	r1, #0
   11f80:	ldrne	r1, [r3, #12]
   11f84:	str	r0, [r5, #8]
   11f88:	ldr	r3, [r0, #12]
   11f8c:	cmp	r3, r1
   11f90:	mov	r4, r2
   11f94:	ldr	r0, [r2, #8]
   11f98:	movlt	r3, r1
   11f9c:	add	r3, r3, #1
   11fa0:	str	r3, [r5, #12]
   11fa4:	cmp	r0, #0
   11fa8:	ldrne	r1, [r0, #12]
   11fac:	mvneq	r1, #0
   11fb0:	cmp	r3, r1
   11fb4:	movlt	r3, r1
   11fb8:	add	r3, r3, #1
   11fbc:	str	r3, [r2, #12]
   11fc0:	b	11e5c <avl_remove_impl@@Base+0x1ac>
   11fc4:	cmp	r4, #0
   11fc8:	bne	1216c <avl_remove_impl@@Base+0x4bc>
   11fcc:	mov	r0, r7
   11fd0:	bl	10ce4 <free@plt>
   11fd4:	mov	r0, r5
   11fd8:	bl	10ce4 <free@plt>
   11fdc:	b	11e5c <avl_remove_impl@@Base+0x1ac>
   11fe0:	cmp	r3, #0
   11fe4:	blt	11ec4 <avl_remove_impl@@Base+0x214>
   11fe8:	ldr	r2, [r4, #4]
   11fec:	str	r0, [r4, #4]
   11ff0:	ldr	r3, [r0, #4]
   11ff4:	str	r2, [r0, #8]
   11ff8:	cmp	r3, #0
   11ffc:	ldrne	r1, [r3, #12]
   12000:	mvneq	r1, #0
   12004:	cmp	r2, #0
   12008:	mvneq	r3, #0
   1200c:	ldrne	r3, [r2, #12]
   12010:	ldr	r2, [r4, #8]
   12014:	cmp	r3, r1
   12018:	movlt	r3, r1
   1201c:	add	r3, r3, #1
   12020:	cmp	r2, #0
   12024:	str	r3, [r0, #12]
   12028:	beq	12120 <avl_remove_impl@@Base+0x470>
   1202c:	ldr	r1, [r2, #12]
   12030:	str	r5, [r4, #8]
   12034:	cmp	r3, r1
   12038:	movlt	r3, r1
   1203c:	add	r3, r3, #1
   12040:	str	r3, [r4, #12]
   12044:	ldr	r1, [r2, #12]
   12048:	str	r2, [r5, #4]
   1204c:	ldr	r3, [r5, #8]
   12050:	ldr	r2, [r4, #4]
   12054:	cmp	r3, #0
   12058:	ldrne	r3, [r3, #12]
   1205c:	mvneq	r3, #0
   12060:	b	11e30 <avl_remove_impl@@Base+0x180>
   12064:	cmp	r4, #0
   12068:	beq	12144 <avl_remove_impl@@Base+0x494>
   1206c:	ldr	r2, [r4, #12]
   12070:	mvn	r1, #0
   12074:	mov	r3, r1
   12078:	cmp	r2, r1
   1207c:	movlt	r2, r1
   12080:	add	r2, r2, #1
   12084:	str	r2, [r5, #12]
   12088:	ldr	r2, [r4, #12]
   1208c:	b	11dd4 <avl_remove_impl@@Base+0x124>
   12090:	mvn	r1, #0
   12094:	cmp	r3, r1
   12098:	mov	r2, r1
   1209c:	movlt	r3, r1
   120a0:	add	r3, r3, #1
   120a4:	str	r3, [r5, #12]
   120a8:	b	11dd0 <avl_remove_impl@@Base+0x120>
   120ac:	cmp	r2, #0
   120b0:	beq	1214c <avl_remove_impl@@Base+0x49c>
   120b4:	mvn	r3, #0
   120b8:	b	11df8 <avl_remove_impl@@Base+0x148>
   120bc:	mvn	r1, #0
   120c0:	b	11dfc <avl_remove_impl@@Base+0x14c>
   120c4:	mvn	r1, #0
   120c8:	b	11e20 <avl_remove_impl@@Base+0x170>
   120cc:	cmp	r2, #0
   120d0:	beq	120e0 <avl_remove_impl@@Base+0x430>
   120d4:	ldr	r3, [r2, #12]
   120d8:	cmn	r3, #1
   120dc:	blt	11fe8 <avl_remove_impl@@Base+0x338>
   120e0:	mvn	r2, #0
   120e4:	str	r5, [r0, #8]
   120e8:	str	r4, [r5, #4]
   120ec:	b	11ed0 <avl_remove_impl@@Base+0x220>
   120f0:	str	r5, [r2, #4]
   120f4:	mvn	r3, #0
   120f8:	ldr	ip, [r5, #4]
   120fc:	cmp	r1, r3
   12100:	movlt	r1, r3
   12104:	add	r1, r1, #1
   12108:	str	r1, [r2, #12]
   1210c:	cmp	ip, #0
   12110:	str	r0, [r5, #8]
   12114:	ldrne	r1, [ip, #12]
   12118:	moveq	r1, r3
   1211c:	b	11f8c <avl_remove_impl@@Base+0x2dc>
   12120:	mvn	r0, #0
   12124:	str	r5, [r4, #8]
   12128:	cmp	r3, r0
   1212c:	mov	r1, r0
   12130:	movlt	r3, r0
   12134:	add	r3, r3, #1
   12138:	str	r3, [r4, #12]
   1213c:	str	r2, [r5, #4]
   12140:	b	1204c <avl_remove_impl@@Base+0x39c>
   12144:	str	r4, [r5, #12]
   12148:	b	11e7c <avl_remove_impl@@Base+0x1cc>
   1214c:	str	r5, [r4, #4]
   12150:	ldr	r3, [r5, #4]
   12154:	str	r2, [r5, #8]
   12158:	cmp	r3, #0
   1215c:	bne	11e1c <avl_remove_impl@@Base+0x16c>
   12160:	mvn	r1, #0
   12164:	mov	r3, r1
   12168:	b	11e2c <avl_remove_impl@@Base+0x17c>
   1216c:	mov	r6, r4
   12170:	b	11d00 <avl_remove_impl@@Base+0x50>

00012174 <avl_apaga@@Base>:
   12174:	str	r4, [sp, #-8]!
   12178:	subs	r4, r0, #0
   1217c:	str	lr, [sp, #4]
   12180:	beq	121c0 <avl_apaga@@Base+0x4c>
   12184:	ldr	r3, [r4]
   12188:	cmp	r3, #0
   1218c:	beq	121ac <avl_apaga@@Base+0x38>
   12190:	mov	r0, r3
   12194:	ldr	r1, [r3]
   12198:	bl	11cb0 <avl_remove_impl@@Base>
   1219c:	cmp	r0, #0
   121a0:	mov	r3, r0
   121a4:	str	r0, [r4]
   121a8:	bne	12190 <avl_apaga@@Base+0x1c>
   121ac:	mov	r0, r4
   121b0:	ldr	r4, [sp]
   121b4:	ldr	lr, [sp, #4]
   121b8:	add	sp, sp, #8
   121bc:	b	10ce4 <free@plt>
   121c0:	ldr	r4, [sp]
   121c4:	add	sp, sp, #4
   121c8:	pop	{pc}		; (ldr pc, [sp], #4)

000121cc <avl_remove@@Base>:
   121cc:	clz	r3, r1
   121d0:	cmp	r0, #0
   121d4:	strd	r4, [sp, #-16]!
   121d8:	lsr	r3, r3, #5
   121dc:	moveq	r4, #1
   121e0:	str	r6, [sp, #8]
   121e4:	str	lr, [sp, #12]
   121e8:	movne	r4, r3
   121ec:	cmp	r4, #0
   121f0:	bne	12218 <avl_remove@@Base+0x4c>
   121f4:	mov	r5, r0
   121f8:	ldr	r0, [r0]
   121fc:	bl	11cb0 <avl_remove_impl@@Base>
   12200:	str	r0, [r5]
   12204:	mov	r0, r4
   12208:	ldrd	r4, [sp]
   1220c:	ldr	r6, [sp, #8]
   12210:	add	sp, sp, #12
   12214:	pop	{pc}		; (ldr pc, [sp], #4)
   12218:	mvn	r4, #0
   1221c:	b	12204 <avl_remove@@Base+0x38>

00012220 <avl_preordem_impl@@Base>:
   12220:	strd	r4, [sp, #-16]!
   12224:	subs	r4, r0, #0
   12228:	str	r6, [sp, #8]
   1222c:	str	lr, [sp, #12]
   12230:	beq	1225c <avl_preordem_impl@@Base+0x3c>
   12234:	movw	r5, #11080	; 0x2b48
   12238:	movt	r5, #1
   1223c:	mov	r0, r5
   12240:	ldr	r1, [r4]
   12244:	bl	10cc0 <printf@plt>
   12248:	ldr	r0, [r4, #4]
   1224c:	bl	12220 <avl_preordem_impl@@Base>
   12250:	ldr	r4, [r4, #8]
   12254:	cmp	r4, #0
   12258:	bne	1223c <avl_preordem_impl@@Base+0x1c>
   1225c:	ldrd	r4, [sp]
   12260:	ldr	r6, [sp, #8]
   12264:	add	sp, sp, #12
   12268:	pop	{pc}		; (ldr pc, [sp], #4)

0001226c <avl_imprime@@Base>:
   1226c:	cmp	r0, #0
   12270:	bxeq	lr
   12274:	strd	r4, [sp, #-16]!
   12278:	ldr	r4, [r0]
   1227c:	str	r6, [sp, #8]
   12280:	str	lr, [sp, #12]
   12284:	cmp	r4, #0
   12288:	beq	122b4 <avl_imprime@@Base+0x48>
   1228c:	movw	r5, #11080	; 0x2b48
   12290:	movt	r5, #1
   12294:	mov	r0, r5
   12298:	ldr	r1, [r4]
   1229c:	bl	10cc0 <printf@plt>
   122a0:	ldr	r0, [r4, #4]
   122a4:	bl	12220 <avl_preordem_impl@@Base>
   122a8:	ldr	r4, [r4, #8]
   122ac:	cmp	r4, #0
   122b0:	bne	12294 <avl_imprime@@Base+0x28>
   122b4:	mov	r0, #10
   122b8:	ldrd	r4, [sp]
   122bc:	ldr	r6, [sp, #8]
   122c0:	ldr	lr, [sp, #12]
   122c4:	add	sp, sp, #16
   122c8:	b	10d5c <putchar@plt>

000122cc <tabela_nova@@Base>:
   122cc:	strd	r4, [sp, #-16]!
   122d0:	str	r6, [sp, #8]
   122d4:	subs	r6, r0, #0
   122d8:	movle	r3, #1
   122dc:	movgt	r3, #0
   122e0:	str	lr, [sp, #12]
   122e4:	cmp	r1, #0
   122e8:	moveq	r3, #1
   122ec:	cmp	r3, #0
   122f0:	bne	12340 <tabela_nova@@Base+0x74>
   122f4:	mov	r0, #12
   122f8:	mov	r4, r1
   122fc:	bl	10d20 <malloc@plt>
   12300:	subs	r5, r0, #0
   12304:	beq	12340 <tabela_nova@@Base+0x74>
   12308:	mov	r1, #4
   1230c:	mov	r0, r6
   12310:	bl	10ca8 <calloc@plt>
   12314:	cmp	r0, #0
   12318:	mov	r3, r0
   1231c:	str	r0, [r5, #4]
   12320:	strne	r4, [r5]
   12324:	strne	r6, [r5, #8]
   12328:	beq	12348 <tabela_nova@@Base+0x7c>
   1232c:	mov	r0, r5
   12330:	ldrd	r4, [sp]
   12334:	ldr	r6, [sp, #8]
   12338:	add	sp, sp, #12
   1233c:	pop	{pc}		; (ldr pc, [sp], #4)
   12340:	mov	r5, #0
   12344:	b	1232c <tabela_nova@@Base+0x60>
   12348:	mov	r0, r5
   1234c:	mov	r5, r3
   12350:	bl	10ce4 <free@plt>
   12354:	b	1232c <tabela_nova@@Base+0x60>

00012358 <tabela_apaga@@Base>:
   12358:	strd	r4, [sp, #-24]!	; 0xffffffe8
   1235c:	strd	r6, [sp, #8]
   12360:	subs	r7, r0, #0
   12364:	str	r8, [sp, #16]
   12368:	str	lr, [sp, #20]
   1236c:	beq	123d4 <tabela_apaga@@Base+0x7c>
   12370:	ldmib	r7, {r0, r3}
   12374:	cmp	r3, #0
   12378:	ble	123b4 <tabela_apaga@@Base+0x5c>
   1237c:	mov	r6, #0
   12380:	ldr	r4, [r0, r6, lsl #2]
   12384:	cmp	r4, #0
   12388:	beq	123a8 <tabela_apaga@@Base+0x50>
   1238c:	ldm	r4, {r0, r5}
   12390:	bl	10ce4 <free@plt>
   12394:	mov	r0, r4
   12398:	bl	10ce4 <free@plt>
   1239c:	subs	r4, r5, #0
   123a0:	bne	1238c <tabela_apaga@@Base+0x34>
   123a4:	ldmib	r7, {r0, r3}
   123a8:	add	r6, r6, #1
   123ac:	cmp	r6, r3
   123b0:	blt	12380 <tabela_apaga@@Base+0x28>
   123b4:	bl	10ce4 <free@plt>
   123b8:	mov	r0, r7
   123bc:	ldrd	r4, [sp]
   123c0:	ldrd	r6, [sp, #8]
   123c4:	ldr	r8, [sp, #16]
   123c8:	ldr	lr, [sp, #20]
   123cc:	add	sp, sp, #24
   123d0:	b	10ce4 <free@plt>
   123d4:	ldrd	r4, [sp]
   123d8:	ldrd	r6, [sp, #8]
   123dc:	ldr	r8, [sp, #16]
   123e0:	add	sp, sp, #20
   123e4:	pop	{pc}		; (ldr pc, [sp], #4)

000123e8 <tabela_adiciona@@Base>:
   123e8:	cmp	r1, #0
   123ec:	clz	r3, r2
   123f0:	strd	r4, [sp, #-32]!	; 0xffffffe0
   123f4:	lsr	r3, r3, #5
   123f8:	moveq	r3, #1
   123fc:	cmp	r0, #0
   12400:	moveq	r3, #1
   12404:	strd	r6, [sp, #8]
   12408:	cmp	r3, #0
   1240c:	strd	r8, [sp, #16]
   12410:	str	sl, [sp, #24]
   12414:	str	lr, [sp, #28]
   12418:	bne	124ec <tabela_adiciona@@Base+0x104>
   1241c:	mov	r4, r0
   12420:	mov	r6, r1
   12424:	mov	r0, r1
   12428:	ldr	r3, [r4]
   1242c:	mov	r8, r2
   12430:	ldr	r1, [r4, #8]
   12434:	blx	r3
   12438:	ldr	sl, [r4, #4]
   1243c:	mov	r9, r0
   12440:	ldr	r4, [sl, r0, lsl #2]
   12444:	cmp	r4, #0
   12448:	bne	1245c <tabela_adiciona@@Base+0x74>
   1244c:	b	1249c <tabela_adiciona@@Base+0xb4>
   12450:	ldr	r4, [r4, #4]
   12454:	cmp	r4, #0
   12458:	beq	1249c <tabela_adiciona@@Base+0xb4>
   1245c:	ldr	r5, [r4]
   12460:	mov	r1, r6
   12464:	mov	r0, r5
   12468:	bl	10cb4 <strcmp@plt>
   1246c:	subs	r7, r0, #0
   12470:	bne	12450 <tabela_adiciona@@Base+0x68>
   12474:	mov	r1, r8
   12478:	add	r0, r5, #50	; 0x32
   1247c:	bl	10d08 <strcpy@plt>
   12480:	mov	r0, r7
   12484:	ldrd	r4, [sp]
   12488:	ldrd	r6, [sp, #8]
   1248c:	ldrd	r8, [sp, #16]
   12490:	ldr	sl, [sp, #24]
   12494:	add	sp, sp, #28
   12498:	pop	{pc}		; (ldr pc, [sp], #4)
   1249c:	mov	r0, #8
   124a0:	bl	10d20 <malloc@plt>
   124a4:	subs	r4, r0, #0
   124a8:	beq	124ec <tabela_adiciona@@Base+0x104>
   124ac:	mov	r0, #150	; 0x96
   124b0:	bl	10d20 <malloc@plt>
   124b4:	cmp	r0, #0
   124b8:	mov	r5, r0
   124bc:	str	r0, [r4]
   124c0:	beq	124ec <tabela_adiciona@@Base+0x104>
   124c4:	mov	r1, r6
   124c8:	mov	r7, #0
   124cc:	bl	10d08 <strcpy@plt>
   124d0:	mov	r1, r8
   124d4:	add	r0, r5, #50	; 0x32
   124d8:	bl	10d08 <strcpy@plt>
   124dc:	ldr	r3, [sl, r9, lsl #2]
   124e0:	str	r3, [r4, #4]
   124e4:	str	r4, [sl, r9, lsl #2]
   124e8:	b	12480 <tabela_adiciona@@Base+0x98>
   124ec:	mvn	r7, #1
   124f0:	b	12480 <tabela_adiciona@@Base+0x98>

000124f4 <tabela_remove@@Base>:
   124f4:	strd	r4, [sp, #-32]!	; 0xffffffe0
   124f8:	subs	r4, r0, #0
   124fc:	strd	r6, [sp, #8]
   12500:	strd	r8, [sp, #16]
   12504:	str	sl, [sp, #24]
   12508:	str	lr, [sp, #28]
   1250c:	beq	125a8 <tabela_remove@@Base+0xb4>
   12510:	mov	r0, r1
   12514:	mov	r6, r1
   12518:	ldr	r3, [r4]
   1251c:	ldr	r1, [r4, #8]
   12520:	blx	r3
   12524:	ldr	sl, [r4, #4]
   12528:	mov	r9, r0
   1252c:	ldr	r4, [sl, r0, lsl #2]
   12530:	cmp	r4, #0
   12534:	beq	12588 <tabela_remove@@Base+0x94>
   12538:	mov	r8, #0
   1253c:	b	1254c <tabela_remove@@Base+0x58>
   12540:	mov	r8, r4
   12544:	subs	r4, r3, #0
   12548:	beq	12588 <tabela_remove@@Base+0x94>
   1254c:	ldr	r5, [r4]
   12550:	mov	r1, r6
   12554:	mov	r0, r5
   12558:	bl	10cb4 <strcmp@plt>
   1255c:	subs	r7, r0, #0
   12560:	ldr	r3, [r4, #4]
   12564:	bne	12540 <tabela_remove@@Base+0x4c>
   12568:	cmp	r8, #0
   1256c:	mov	r0, r5
   12570:	strne	r3, [r8, #4]
   12574:	streq	r3, [sl, r9, lsl #2]
   12578:	bl	10ce4 <free@plt>
   1257c:	mov	r0, r4
   12580:	bl	10ce4 <free@plt>
   12584:	b	1258c <tabela_remove@@Base+0x98>
   12588:	mvn	r7, #2
   1258c:	mov	r0, r7
   12590:	ldrd	r4, [sp]
   12594:	ldrd	r6, [sp, #8]
   12598:	ldrd	r8, [sp, #16]
   1259c:	ldr	sl, [sp, #24]
   125a0:	add	sp, sp, #28
   125a4:	pop	{pc}		; (ldr pc, [sp], #4)
   125a8:	mvn	r7, #1
   125ac:	b	1258c <tabela_remove@@Base+0x98>

000125b0 <tabela_existe@@Base>:
   125b0:	cmp	r0, #0
   125b4:	cmpne	r1, #0
   125b8:	beq	12648 <tabela_existe@@Base+0x98>
   125bc:	strd	r4, [sp, #-16]!
   125c0:	mov	r4, r0
   125c4:	mov	r5, r1
   125c8:	mov	r0, r1
   125cc:	ldr	r3, [r4]
   125d0:	ldr	r1, [r4, #8]
   125d4:	str	r6, [sp, #8]
   125d8:	str	lr, [sp, #12]
   125dc:	blx	r3
   125e0:	ldr	r3, [r4, #4]
   125e4:	ldr	r4, [r3, r0, lsl #2]
   125e8:	cmp	r4, #0
   125ec:	bne	12600 <tabela_existe@@Base+0x50>
   125f0:	b	12634 <tabela_existe@@Base+0x84>
   125f4:	ldr	r4, [r4, #4]
   125f8:	cmp	r4, #0
   125fc:	beq	12634 <tabela_existe@@Base+0x84>
   12600:	ldr	r6, [r4]
   12604:	mov	r1, r5
   12608:	mov	r0, r6
   1260c:	bl	10cb4 <strcmp@plt>
   12610:	cmp	r0, #0
   12614:	bne	125f4 <tabela_existe@@Base+0x44>
   12618:	cmn	r6, #50	; 0x32
   1261c:	ldrd	r4, [sp]
   12620:	mvneq	r0, #2
   12624:	movne	r0, #1
   12628:	ldr	r6, [sp, #8]
   1262c:	add	sp, sp, #12
   12630:	pop	{pc}		; (ldr pc, [sp], #4)
   12634:	ldrd	r4, [sp]
   12638:	mvn	r0, #2
   1263c:	ldr	r6, [sp, #8]
   12640:	add	sp, sp, #12
   12644:	pop	{pc}		; (ldr pc, [sp], #4)
   12648:	mvn	r0, #1
   1264c:	bx	lr

00012650 <tabela_valor@@Base>:
   12650:	strd	r4, [sp, #-16]!
   12654:	subs	r4, r0, #0
   12658:	str	r6, [sp, #8]
   1265c:	str	lr, [sp, #12]
   12660:	beq	126c4 <tabela_valor@@Base+0x74>
   12664:	mov	r0, r1
   12668:	mov	r6, r1
   1266c:	ldr	r3, [r4]
   12670:	ldr	r1, [r4, #8]
   12674:	blx	r3
   12678:	ldr	r3, [r4, #4]
   1267c:	ldr	r4, [r3, r0, lsl #2]
   12680:	cmp	r4, #0
   12684:	bne	12698 <tabela_valor@@Base+0x48>
   12688:	b	126c4 <tabela_valor@@Base+0x74>
   1268c:	ldr	r4, [r4, #4]
   12690:	cmp	r4, #0
   12694:	beq	126c4 <tabela_valor@@Base+0x74>
   12698:	ldr	r5, [r4]
   1269c:	mov	r1, r6
   126a0:	mov	r0, r5
   126a4:	bl	10cb4 <strcmp@plt>
   126a8:	cmp	r0, #0
   126ac:	bne	1268c <tabela_valor@@Base+0x3c>
   126b0:	add	r0, r5, #50	; 0x32
   126b4:	ldrd	r4, [sp]
   126b8:	ldr	r6, [sp, #8]
   126bc:	add	sp, sp, #12
   126c0:	pop	{pc}		; (ldr pc, [sp], #4)
   126c4:	ldrd	r4, [sp]
   126c8:	mov	r0, #0
   126cc:	ldr	r6, [sp, #8]
   126d0:	add	sp, sp, #12
   126d4:	pop	{pc}		; (ldr pc, [sp], #4)

000126d8 <tabela_esvazia@@Base>:
   126d8:	strd	r4, [sp, #-32]!	; 0xffffffe0
   126dc:	strd	r6, [sp, #8]
   126e0:	strd	r8, [sp, #16]
   126e4:	subs	r8, r0, #0
   126e8:	str	sl, [sp, #24]
   126ec:	str	lr, [sp, #28]
   126f0:	beq	12770 <tabela_esvazia@@Base+0x98>
   126f4:	ldr	r1, [r8, #8]
   126f8:	cmp	r1, #0
   126fc:	ble	12754 <tabela_esvazia@@Base+0x7c>
   12700:	ldr	r3, [r8, #4]
   12704:	mov	r6, #0
   12708:	mov	r9, r6
   1270c:	ldr	r4, [r3, r6, lsl #2]
   12710:	lsl	r7, r6, #2
   12714:	add	r2, r3, r7
   12718:	cmp	r4, #0
   1271c:	beq	12744 <tabela_esvazia@@Base+0x6c>
   12720:	ldm	r4, {r0, r5}
   12724:	bl	10ce4 <free@plt>
   12728:	mov	r0, r4
   1272c:	bl	10ce4 <free@plt>
   12730:	subs	r4, r5, #0
   12734:	bne	12720 <tabela_esvazia@@Base+0x48>
   12738:	ldr	r3, [r8, #4]
   1273c:	ldr	r1, [r8, #8]
   12740:	add	r2, r3, r7
   12744:	add	r6, r6, #1
   12748:	str	r9, [r2]
   1274c:	cmp	r6, r1
   12750:	blt	1270c <tabela_esvazia@@Base+0x34>
   12754:	mov	r0, #0
   12758:	ldrd	r4, [sp]
   1275c:	ldrd	r6, [sp, #8]
   12760:	ldrd	r8, [sp, #16]
   12764:	ldr	sl, [sp, #24]
   12768:	add	sp, sp, #28
   1276c:	pop	{pc}		; (ldr pc, [sp], #4)
   12770:	mvn	r0, #1
   12774:	b	12758 <tabela_esvazia@@Base+0x80>

00012778 <tabela_numelementos@@Base>:
   12778:	cmp	r0, #0
   1277c:	beq	127c8 <tabela_numelementos@@Base+0x50>
   12780:	ldr	r1, [r0, #8]
   12784:	cmp	r1, #0
   12788:	ble	127c0 <tabela_numelementos@@Base+0x48>
   1278c:	ldr	r2, [r0, #4]
   12790:	mov	r0, #0
   12794:	add	r1, r2, r1, lsl #2
   12798:	ldr	r3, [r2], #4
   1279c:	cmp	r3, #0
   127a0:	beq	127b4 <tabela_numelementos@@Base+0x3c>
   127a4:	ldr	r3, [r3, #4]
   127a8:	add	r0, r0, #1
   127ac:	cmp	r3, #0
   127b0:	bne	127a4 <tabela_numelementos@@Base+0x2c>
   127b4:	cmp	r1, r2
   127b8:	bne	12798 <tabela_numelementos@@Base+0x20>
   127bc:	bx	lr
   127c0:	mov	r0, #0
   127c4:	bx	lr
   127c8:	mvn	r0, #1
   127cc:	bx	lr

000127d0 <tabela_elementos@@Base>:
   127d0:	strd	r4, [sp, #-32]!	; 0xffffffe0
   127d4:	subs	r4, r0, #0
   127d8:	strd	r6, [sp, #8]
   127dc:	strd	r8, [sp, #16]
   127e0:	str	sl, [sp, #24]
   127e4:	str	lr, [sp, #28]
   127e8:	beq	128d8 <tabela_elementos@@Base+0x108>
   127ec:	ldr	lr, [r4, #8]
   127f0:	cmp	lr, #0
   127f4:	movle	r3, #0
   127f8:	movle	r9, r3
   127fc:	strle	r3, [r1]
   12800:	ble	128b4 <tabela_elementos@@Base+0xe4>
   12804:	ldr	r6, [r4, #4]
   12808:	mov	r2, #0
   1280c:	add	lr, r6, lr, lsl #2
   12810:	mov	ip, r6
   12814:	ldr	r3, [ip], #4
   12818:	cmp	r3, #0
   1281c:	beq	12830 <tabela_elementos@@Base+0x60>
   12820:	ldr	r3, [r3, #4]
   12824:	add	r2, r2, #1
   12828:	cmp	r3, #0
   1282c:	bne	12820 <tabela_elementos@@Base+0x50>
   12830:	cmp	ip, lr
   12834:	bne	12814 <tabela_elementos@@Base+0x44>
   12838:	cmp	r2, #0
   1283c:	str	r2, [r1]
   12840:	beq	128d0 <tabela_elementos@@Base+0x100>
   12844:	mov	r8, #150	; 0x96
   12848:	mul	r0, r8, r2
   1284c:	bl	10d20 <malloc@plt>
   12850:	subs	r9, r0, #0
   12854:	beq	128d0 <tabela_elementos@@Base+0x100>
   12858:	ldr	r7, [r4, #8]
   1285c:	cmp	r7, #0
   12860:	ble	128b4 <tabela_elementos@@Base+0xe4>
   12864:	add	r7, r6, r7, lsl #2
   12868:	mov	r5, #0
   1286c:	b	12878 <tabela_elementos@@Base+0xa8>
   12870:	cmp	r7, r6
   12874:	beq	128b4 <tabela_elementos@@Base+0xe4>
   12878:	ldr	r4, [r6], #4
   1287c:	cmp	r4, #0
   12880:	beq	12870 <tabela_elementos@@Base+0xa0>
   12884:	mla	r3, r8, r5, r9
   12888:	mov	r0, r3
   1288c:	mov	r2, #150	; 0x96
   12890:	ldr	r1, [r4]
   12894:	bl	10cf0 <memcpy@plt>
   12898:	ldr	r4, [r4, #4]
   1289c:	add	r5, r5, #1
   128a0:	add	r3, r0, #150	; 0x96
   128a4:	cmp	r4, #0
   128a8:	bne	12888 <tabela_elementos@@Base+0xb8>
   128ac:	cmp	r7, r6
   128b0:	bne	12878 <tabela_elementos@@Base+0xa8>
   128b4:	mov	r0, r9
   128b8:	ldrd	r4, [sp]
   128bc:	ldrd	r6, [sp, #8]
   128c0:	ldrd	r8, [sp, #16]
   128c4:	ldr	sl, [sp, #24]
   128c8:	add	sp, sp, #28
   128cc:	pop	{pc}		; (ldr pc, [sp], #4)
   128d0:	mov	r9, #0
   128d4:	b	128b4 <tabela_elementos@@Base+0xe4>
   128d8:	mvn	r3, #1
   128dc:	mov	r9, r4
   128e0:	str	r3, [r1]
   128e4:	b	128b4 <tabela_elementos@@Base+0xe4>

000128e8 <hash_krm@@Base>:
   128e8:	ldrb	r3, [r0]
   128ec:	mov	r2, #7
   128f0:	cmp	r3, #0
   128f4:	beq	12908 <hash_krm@@Base+0x20>
   128f8:	add	r2, r2, r3
   128fc:	ldrb	r3, [r0, #1]!
   12900:	cmp	r3, #0
   12904:	bne	128f8 <hash_krm@@Base+0x10>
   12908:	udiv	r0, r2, r1
   1290c:	mls	r0, r1, r0, r2
   12910:	bx	lr

00012914 <hash_djbm@@Base>:
   12914:	ldrb	r2, [r0]
   12918:	movw	r3, #5347	; 0x14e3
   1291c:	cmp	r2, #0
   12920:	beq	12938 <hash_djbm@@Base+0x24>
   12924:	rsb	r3, r3, r3, lsl #5
   12928:	eor	r3, r3, r2
   1292c:	ldrb	r2, [r0, #1]!
   12930:	cmp	r2, #0
   12934:	bne	12924 <hash_djbm@@Base+0x10>
   12938:	udiv	r0, r3, r1
   1293c:	mls	r0, r1, r0, r3
   12940:	bx	lr

00012944 <mostraTabela@@Base>:
   12944:	strd	r4, [sp, #-24]!	; 0xffffffe8
   12948:	strd	r6, [sp, #8]
   1294c:	subs	r7, r0, #0
   12950:	str	r8, [sp, #16]
   12954:	str	lr, [sp, #20]
   12958:	beq	12a58 <mostraTabela@@Base+0x114>
   1295c:	ldr	r0, [r7, #8]
   12960:	cmp	r0, #0
   12964:	ble	12a50 <mostraTabela@@Base+0x10c>
   12968:	ldr	r2, [r7, #4]
   1296c:	mov	r1, #0
   12970:	add	r0, r2, r0, lsl #2
   12974:	ldr	r3, [r2], #4
   12978:	cmp	r3, #0
   1297c:	beq	12990 <mostraTabela@@Base+0x4c>
   12980:	ldr	r3, [r3, #4]
   12984:	add	r1, r1, #1
   12988:	cmp	r3, #0
   1298c:	bne	12980 <mostraTabela@@Base+0x3c>
   12990:	cmp	r0, r2
   12994:	bne	12974 <mostraTabela@@Base+0x30>
   12998:	movw	r0, #11084	; 0x2b4c
   1299c:	movt	r0, #1
   129a0:	bl	10cc0 <printf@plt>
   129a4:	ldr	r2, [r7, #8]
   129a8:	cmp	r2, #0
   129ac:	ble	12a34 <mostraTabela@@Base+0xf0>
   129b0:	movw	r8, #11120	; 0x2b70
   129b4:	movt	r8, #1
   129b8:	movw	r6, #11128	; 0x2b78
   129bc:	movt	r6, #1
   129c0:	mov	r5, #0
   129c4:	b	129d4 <mostraTabela@@Base+0x90>
   129c8:	add	r5, r5, #1
   129cc:	cmp	r5, r2
   129d0:	bge	12a34 <mostraTabela@@Base+0xf0>
   129d4:	ldr	r3, [r7, #4]
   129d8:	ldr	r3, [r3, r5, lsl #2]
   129dc:	cmp	r3, #0
   129e0:	beq	129c8 <mostraTabela@@Base+0x84>
   129e4:	mov	r1, r5
   129e8:	mov	r0, r8
   129ec:	bl	10cc0 <printf@plt>
   129f0:	ldr	r3, [r7, #4]
   129f4:	ldr	r4, [r3, r5, lsl #2]
   129f8:	cmp	r4, #0
   129fc:	beq	12a1c <mostraTabela@@Base+0xd8>
   12a00:	ldr	r1, [r4]
   12a04:	mov	r0, r6
   12a08:	add	r2, r1, #50	; 0x32
   12a0c:	bl	10cc0 <printf@plt>
   12a10:	ldr	r4, [r4, #4]
   12a14:	cmp	r4, #0
   12a18:	bne	12a00 <mostraTabela@@Base+0xbc>
   12a1c:	mov	r0, #10
   12a20:	add	r5, r5, #1
   12a24:	bl	10d5c <putchar@plt>
   12a28:	ldr	r2, [r7, #8]
   12a2c:	cmp	r5, r2
   12a30:	blt	129d4 <mostraTabela@@Base+0x90>
   12a34:	mov	r0, #10
   12a38:	ldrd	r4, [sp]
   12a3c:	ldrd	r6, [sp, #8]
   12a40:	ldr	r8, [sp, #16]
   12a44:	ldr	lr, [sp, #20]
   12a48:	add	sp, sp, #24
   12a4c:	b	10d5c <putchar@plt>
   12a50:	mov	r1, #0
   12a54:	b	12998 <mostraTabela@@Base+0x54>
   12a58:	mvn	r1, #1
   12a5c:	b	12998 <mostraTabela@@Base+0x54>

00012a60 <__libc_csu_init@@Base>:
   12a60:	push	{r4, r5, r6, r7, r8, r9, sl, lr}
   12a64:	mov	r7, r0
   12a68:	ldr	r6, [pc, #72]	; 12ab8 <__libc_csu_init@@Base+0x58>
   12a6c:	ldr	r5, [pc, #72]	; 12abc <__libc_csu_init@@Base+0x5c>
   12a70:	add	r6, pc, r6
   12a74:	add	r5, pc, r5
   12a78:	sub	r6, r6, r5
   12a7c:	mov	r8, r1
   12a80:	mov	r9, r2
   12a84:	bl	10c88 <calloc@plt-0x20>
   12a88:	asrs	r6, r6, #2
   12a8c:	popeq	{r4, r5, r6, r7, r8, r9, sl, pc}
   12a90:	mov	r4, #0
   12a94:	add	r4, r4, #1
   12a98:	ldr	r3, [r5], #4
   12a9c:	mov	r2, r9
   12aa0:	mov	r1, r8
   12aa4:	mov	r0, r7
   12aa8:	blx	r3
   12aac:	cmp	r6, r4
   12ab0:	bne	12a94 <__libc_csu_init@@Base+0x34>
   12ab4:	pop	{r4, r5, r6, r7, r8, r9, sl, pc}
   12ab8:	muleq	r1, ip, r4
   12abc:	muleq	r1, r4, r4

00012ac0 <__libc_csu_fini@@Base>:
   12ac0:	bx	lr

Disassembly of section .fini:

00012ac4 <.fini>:
   12ac4:	push	{r3, lr}
   12ac8:	pop	{r3, pc}
